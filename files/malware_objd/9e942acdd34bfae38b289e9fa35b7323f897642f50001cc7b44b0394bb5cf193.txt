
9e942acdd34bfae38b289e9fa35b7323f897642f50001cc7b44b0394bb5cf193.exe:     file format pei-i386


Disassembly of section .text:

00010600 <.text>:
   10600:	add    BYTE PTR [eax],al
   10602:	add    BYTE PTR [eax],al
   10604:	add    BYTE PTR [eax],al
   10606:	mov    edi,edi
   10608:	push   ebp
   10609:	mov    ebp,esp
   1060b:	mov    eax,DWORD PTR [ebp+0xc]
   1060e:	xor    eax,DWORD PTR [ebp+0x10]
   10611:	and    eax,0x7ffffffe
   10616:	xor    eax,DWORD PTR [ebp+0xc]
   10619:	shr    eax,1
   1061b:	xor    eax,DWORD PTR [ebp+0x8]
   1061e:	mov    DWORD PTR [ebp+0xc],eax
   10621:	xor    DWORD PTR [ebp+0xc],0x5
   10625:	xor    DWORD PTR [ebp+0xc],0x1
   10629:	xor    DWORD PTR [ebp+0xc],0x4
   1062d:	mov    eax,DWORD PTR [ebp+0x10]
   10630:	and    al,0x1
   10632:	movzx  ecx,al
   10635:	mov    eax,DWORD PTR [ebp+0xc]
   10638:	neg    ecx
   1063a:	sbb    ecx,ecx
   1063c:	and    ecx,0x9908b0df
   10642:	xor    eax,ecx
   10644:	pop    ebp
   10645:	ret    0xc
   10648:	int3   
   10649:	int3   
   1064a:	int3   
   1064b:	int3   
   1064c:	int3   
   1064d:	int3   
   1064e:	mov    edi,edi
   10650:	push   ebp
   10651:	mov    ebp,esp
   10653:	sub    esp,0x14
   10656:	mov    DWORD PTR [ebp-0x14],ecx
   10659:	mov    eax,DWORD PTR [ebp-0x14]
   1065c:	mov    DWORD PTR [ebp-0x8],eax
   1065f:	mov    eax,DWORD PTR [ebp-0x14]
   10662:	mov    DWORD PTR [ebp-0x10],eax
   10665:	mov    DWORD PTR [ebp-0x4],0x1
   1066c:	mov    DWORD PTR [ebp-0xc],0x509
   10673:	mov    eax,DWORD PTR [ebp-0x8]
   10676:	mov    ecx,DWORD PTR [ebp+0x8]
   10679:	mov    DWORD PTR [eax],ecx
   1067b:	mov    eax,DWORD PTR [ebp-0x8]
   1067e:	add    eax,0x4
   10681:	mov    DWORD PTR [ebp-0x8],eax
   10684:	jmp    0x1068d
   10686:	mov    eax,DWORD PTR [ebp-0x4]
   10689:	inc    eax
   1068a:	mov    DWORD PTR [ebp-0x4],eax
   1068d:	cmp    DWORD PTR [ebp-0x4],0x270
   10694:	jge    0x106c9
   10696:	mov    eax,DWORD PTR [ebp-0x10]
   10699:	mov    eax,DWORD PTR [eax]
   1069b:	shr    eax,0x1e
   1069e:	mov    ecx,DWORD PTR [ebp-0x10]
   106a1:	xor    eax,DWORD PTR [ecx]
   106a3:	imul   eax,eax,0x15747d
   106a9:	imul   eax,DWORD PTR [ebp-0xc]
   106ad:	add    eax,DWORD PTR [ebp-0x4]
   106b0:	mov    ecx,DWORD PTR [ebp-0x8]
   106b3:	mov    DWORD PTR [ecx],eax
   106b5:	mov    eax,DWORD PTR [ebp-0x8]
   106b8:	add    eax,0x4
   106bb:	mov    DWORD PTR [ebp-0x8],eax
   106be:	mov    eax,DWORD PTR [ebp-0x10]
   106c1:	add    eax,0x4
   106c4:	mov    DWORD PTR [ebp-0x10],eax
   106c7:	jmp    0x10686
   106c9:	leave  
   106ca:	ret    0x4
   106cd:	int3   
   106ce:	int3   
   106cf:	int3   
   106d0:	int3   
   106d1:	int3   
   106d2:	mov    edi,edi
   106d4:	push   ebp
   106d5:	mov    ebp,esp
   106d7:	push   ecx
   106d8:	push   ebx
   106d9:	push   esi
   106da:	push   edi
   106db:	mov    edi,ecx
   106dd:	mov    esi,edi
   106df:	mov    ebx,0xe3
   106e4:	push   DWORD PTR [esi+0x4]
   106e7:	mov    ecx,edi
   106e9:	push   DWORD PTR [esi]
   106eb:	dec    ebx
   106ec:	push   DWORD PTR [esi+0x634]
   106f2:	call   0x10606
   106f7:	mov    DWORD PTR [esi],eax
   106f9:	add    esi,0x4
   106fc:	test   ebx,ebx
   106fe:	jne    0x106e4
   10700:	mov    DWORD PTR [ebp-0x4],0x18c
   10707:	lea    ebx,[esi+0x4]
   1070a:	push   DWORD PTR [ebx]
   1070c:	mov    ecx,edi
   1070e:	push   DWORD PTR [esi]
   10710:	push   DWORD PTR [esi-0x38c]
   10716:	call   0x10606
   1071b:	dec    DWORD PTR [ebp-0x4]
   1071e:	mov    DWORD PTR [esi],eax
   10720:	mov    esi,ebx
   10722:	jne    0x10707
   10724:	push   DWORD PTR [edi]
   10726:	mov    ecx,edi
   10728:	push   DWORD PTR [esi]
   1072a:	push   DWORD PTR [esi-0x38c]
   10730:	call   0x10606
   10735:	mov    DWORD PTR [esi],eax
   10737:	mov    DWORD PTR [edi+0x9c4],0x270
   10741:	mov    DWORD PTR [edi+0x9c0],edi
   10747:	pop    edi
   10748:	pop    esi
   10749:	pop    ebx
   1074a:	leave  
   1074b:	ret    
   1074c:	int3   
   1074d:	int3   
   1074e:	int3   
   1074f:	int3   
   10750:	int3   
   10751:	int3   
   10752:	mov    edi,edi
   10754:	push   ebp
   10755:	mov    ebp,esp
   10757:	push   esi
   10758:	push   DWORD PTR [ebp+0x8]
   1075b:	mov    esi,ecx
   1075d:	call   0x1064e
   10762:	mov    ecx,esi
   10764:	call   0x106d2
   10769:	pop    esi
   1076a:	pop    ebp
   1076b:	ret    0x4
   1076e:	int3   
   1076f:	int3   
   10770:	int3   
   10771:	int3   
   10772:	int3   
   10773:	int3   
   10774:	mov    edi,edi
   10776:	push   esi
   10777:	push   edi
   10778:	mov    edi,ecx
   1077a:	lea    esi,[edi+0x9c4]
   10780:	cmp    DWORD PTR [esi],0x0
   10783:	jne    0x1078a
   10785:	call   0x106d2
   1078a:	dec    DWORD PTR [esi]
   1078c:	lea    eax,[edi+0x9c0]
   10792:	mov    edx,DWORD PTR [eax]
   10794:	mov    ecx,DWORD PTR [edx]
   10796:	add    edx,0x4
   10799:	mov    DWORD PTR [eax],edx
   1079b:	mov    eax,ecx
   1079d:	shr    eax,0xb
   107a0:	xor    ecx,eax
   107a2:	mov    eax,ecx
   107a4:	and    eax,0xff3a58ad
   107a9:	shl    eax,0x7
   107ac:	xor    ecx,eax
   107ae:	mov    eax,ecx
   107b0:	and    eax,0xffffdf8c
   107b5:	shl    eax,0xf
   107b8:	xor    ecx,eax
   107ba:	mov    eax,ecx
   107bc:	shr    eax,0x12
   107bf:	pop    edi
   107c0:	xor    eax,ecx
   107c2:	pop    esi
   107c3:	ret    
   107c4:	int3   
   107c5:	int3   
   107c6:	int3   
   107c7:	int3   
   107c8:	int3   
   107c9:	int3   
   107ca:	mov    edi,edi
   107cc:	push   ebp
   107cd:	mov    ebp,esp
   107cf:	push   esi
   107d0:	mov    esi,DWORD PTR [ebp+0x8]
   107d3:	shr    esi,1
   107d5:	or     esi,DWORD PTR [ebp+0x8]
   107d8:	push   edi
   107d9:	mov    eax,esi
   107db:	shr    eax,0x2
   107de:	or     esi,eax
   107e0:	mov    eax,esi
   107e2:	shr    eax,0x4
   107e5:	or     esi,eax
   107e7:	mov    eax,esi
   107e9:	shr    eax,0x8
   107ec:	or     esi,eax
   107ee:	mov    eax,esi
   107f0:	shr    eax,0x10
   107f3:	mov    edi,ecx
   107f5:	or     esi,eax
   107f7:	mov    ecx,edi
   107f9:	call   0x10774
   107fe:	and    eax,esi
   10800:	cmp    eax,DWORD PTR [ebp+0x8]
   10803:	ja     0x107f7
   10805:	pop    edi
   10806:	pop    esi
   10807:	pop    ebp
   10808:	ret    0x4
   1080b:	int3   
   1080c:	int3   
   1080d:	int3   
   1080e:	int3   
   1080f:	int3   
   10810:	mov    edi,edi
   10812:	push   ebp
   10813:	mov    ebp,esp
   10815:	sub    esp,0xa04
   1081b:	push   ebx
   1081c:	push   esi
   1081d:	mov    esi,DWORD PTR [ebp+0x14]
   10820:	push   edi
   10821:	test   esi,esi
   10823:	jne    0x108fe
   10829:	xor    ecx,ecx
   1082b:	lea    eax,[ebp-0x3c]
   1082e:	mov    edx,0xff
   10833:	shl    edx,cl
   10835:	and    edx,DWORD PTR [ebp+0x8]
   10838:	shr    edx,cl
   1083a:	inc    ecx
   1083b:	inc    ecx
   1083c:	mov    DWORD PTR [eax],edx
   1083e:	add    eax,0x4
   10841:	cmp    ecx,0x14
   10844:	jne    0x1082e
   10846:	mov    ebx,DWORD PTR [ebp+0xc]
   10849:	xor    eax,eax
   1084b:	mov    WORD PTR [ebx],ax
   1084e:	mov    eax,DWORD PTR [ebp-0x3c]
   10851:	push   0x5
   10853:	cdq    
   10854:	pop    ecx
   10855:	idiv   ecx
   10857:	mov    DWORD PTR [ebp-0x14],0x1de76
   1085e:	mov    DWORD PTR [ebp-0x10],0x1de6c
   10865:	mov    DWORD PTR [ebp-0xc],0x1de64
   1086c:	mov    DWORD PTR [ebp-0x8],0x1de5a
   10873:	mov    DWORD PTR [ebp-0x4],0x1de50
   1087a:	mov    edx,DWORD PTR [ebp+edx*4-0x14]
   1087e:	mov    ecx,edx
   10880:	mov    ax,WORD PTR [edx]
   10883:	inc    edx
   10884:	inc    edx
   10885:	test   ax,ax
   10888:	jne    0x10880
   1088a:	sub    edx,ecx
   1088c:	mov    edi,ebx
   1088e:	dec    edi
   1088f:	mov    esi,ecx
   10891:	dec    edi
   10892:	mov    ax,WORD PTR [edi+0x2]
   10896:	inc    edi
   10897:	inc    edi
   10898:	test   ax,ax
   1089b:	jne    0x10892
   1089d:	mov    ecx,edx
   1089f:	shr    ecx,0x2
   108a2:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   108a4:	mov    ecx,edx
   108a6:	and    ecx,0x3
   108a9:	mov    eax,ebx
   108ab:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   108ad:	lea    ecx,[eax+0x2]
   108b0:	mov    dx,WORD PTR [eax]
   108b3:	inc    eax
   108b4:	inc    eax
   108b5:	test   dx,dx
   108b8:	jne    0x108b0
   108ba:	sub    eax,ecx
   108bc:	sar    eax,1
   108be:	mov    ecx,eax
   108c0:	mov    eax,DWORD PTR [ebp-0x38]
   108c3:	push   0x3
   108c5:	cdq    
   108c6:	pop    esi
   108c7:	idiv   esi
   108c9:	cmp    edx,0xfffffffe
   108cc:	jle    0x109b3
   108d2:	add    edx,0x2
   108d5:	lea    esi,[ebp-0x34]
   108d8:	mov    DWORD PTR [ebp+0x8],edx
   108db:	mov    eax,DWORD PTR [esi]
   108dd:	cdq    
   108de:	push   0x1a
   108e0:	pop    edi
   108e1:	idiv   edi
   108e3:	add    esi,0x4
   108e6:	xor    eax,eax
   108e8:	add    edx,0x61
   108eb:	mov    WORD PTR [ebx+ecx*2],dx
   108ef:	inc    ecx
   108f0:	dec    DWORD PTR [ebp+0x8]
   108f3:	mov    WORD PTR [ebx+ecx*2],ax
   108f7:	jne    0x108db
   108f9:	jmp    0x109b3
   108fe:	cmp    esi,0x1
   10901:	je     0x1090e
   10903:	mov    eax,esi
   10905:	imul   eax,eax,0xa
   10908:	add    eax,DWORD PTR [ebp+0x10]
   1090b:	add    DWORD PTR [ebp+0x8],eax
   1090e:	push   DWORD PTR [ebp+0x8]
   10911:	lea    ecx,[ebp-0xa04]
   10917:	call   0x10752
   1091c:	lea    eax,[esi-0x1]
   1091f:	cmp    eax,0x6
   10922:	ja     0x10933
   10924:	imul   esi,esi,0x3
   10927:	add    esi,DWORD PTR [ebp+0x10]
   1092a:	mov    esi,DWORD PTR [esi*4+0x7e4bc]
   10931:	jmp    0x10938
   10933:	mov    esi,0x1de4e
   10938:	mov    ebx,DWORD PTR [ebp+0xc]
   1093b:	xor    eax,eax
   1093d:	mov    WORD PTR [ebx],ax
   10940:	mov    eax,esi
   10942:	mov    edx,esi
   10944:	mov    cx,WORD PTR [eax]
   10947:	inc    eax
   10948:	inc    eax
   10949:	test   cx,cx
   1094c:	jne    0x10944
   1094e:	sub    eax,edx
   10950:	mov    edi,ebx
   10952:	dec    edi
   10953:	dec    edi
   10954:	mov    cx,WORD PTR [edi+0x2]
   10958:	inc    edi
   10959:	inc    edi
   1095a:	test   cx,cx
   1095d:	jne    0x10954
   1095f:	mov    ecx,eax
   10961:	shr    ecx,0x2
   10964:	mov    esi,edx
   10966:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10968:	mov    ecx,eax
   1096a:	and    ecx,0x3
   1096d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1096f:	nop
   10970:	mov    eax,ebx
   10972:	lea    ecx,[eax+0x2]
   10975:	mov    dx,WORD PTR [eax]
   10978:	inc    eax
   10979:	inc    eax
   1097a:	test   dx,dx
   1097d:	jne    0x10975
   1097f:	sub    eax,ecx
   10981:	sar    eax,1
   10983:	push   0x5
   10985:	mov    esi,eax
   10987:	pop    edi
   10988:	push   0x23
   1098a:	lea    ecx,[ebp-0xa04]
   10990:	call   0x107ca
   10995:	cmp    eax,0xa
   10998:	jae    0x1099f
   1099a:	add    eax,0x30
   1099d:	jmp    0x109a2
   1099f:	add    eax,0x57
   109a2:	movzx  eax,ax
   109a5:	mov    WORD PTR [ebx+esi*2],ax
   109a9:	inc    esi
   109aa:	xor    eax,eax
   109ac:	dec    edi
   109ad:	mov    WORD PTR [ebx+esi*2],ax
   109b1:	jne    0x10988
   109b3:	pop    edi
   109b4:	pop    esi
   109b5:	pop    ebx
   109b6:	leave  
   109b7:	ret    0x10
   109ba:	int3   
   109bb:	int3   
   109bc:	int3   
   109bd:	int3   
   109be:	int3   
   109bf:	int3   
   109c0:	mov    edi,edi
   109c2:	push   ebp
   109c3:	mov    ebp,esp
   109c5:	mov    eax,DWORD PTR [ebp+0x8]
   109c8:	lea    edx,[eax+0x2]
   109cb:	mov    cx,WORD PTR [eax]
   109ce:	inc    eax
   109cf:	inc    eax
   109d0:	test   cx,cx
   109d3:	jne    0x109cb
   109d5:	sub    eax,edx
   109d7:	sar    eax,1
   109d9:	pop    ebp
   109da:	ret    0x4
   109dd:	int3   
   109de:	int3   
   109df:	int3   
   109e0:	int3   
   109e1:	int3   
   109e2:	mov    eax,ecx
   109e4:	ret    
   109e5:	int3   
   109e6:	int3   
   109e7:	int3   
   109e8:	int3   
   109e9:	int3   
   109ea:	ret    
   109eb:	int3   
   109ec:	int3   
   109ed:	int3   
   109ee:	int3   
   109ef:	int3   
   109f0:	mov    edi,edi
   109f2:	push   ebp
   109f3:	mov    ebp,esp
   109f5:	push   esi
   109f6:	mov    esi,DWORD PTR [ebp+0x8]
   109f9:	push   edi
   109fa:	mov    edi,DWORD PTR [ebp+0xc]
   109fd:	jmp    0x10a4d
   109ff:	push   0x0
   10a01:	push   0x100
   10a06:	push   edi
   10a07:	push   esi
   10a08:	call   0x1da8a
   10a0d:	lea    eax,[eax*8+0x7f0b8]
   10a14:	add    DWORD PTR [eax],esi
   10a16:	adc    DWORD PTR [eax+0x4],edi
   10a19:	test   edi,edi
   10a1b:	jl     0x10a56
   10a1d:	jg     0x10a23
   10a1f:	test   esi,esi
   10a21:	jbe    0x10a56
   10a23:	mov    eax,esi
   10a25:	xor    ecx,ecx
   10a27:	and    eax,0x1
   10a2a:	or     eax,ecx
   10a2c:	push   ecx
   10a2d:	jne    0x10a3a
   10a2f:	push   0x2
   10a31:	push   edi
   10a32:	push   esi
   10a33:	call   0x1da7e
   10a38:	jmp    0x10a49
   10a3a:	push   0x3
   10a3c:	push   edi
   10a3d:	push   esi
   10a3e:	call   0x1da72
   10a43:	add    eax,0x1
   10a46:	adc    edx,0x0
   10a49:	mov    edi,edx
   10a4b:	mov    esi,eax
   10a4d:	cmp    esi,0x4
   10a50:	jne    0x109ff
   10a52:	test   edi,edi
   10a54:	jne    0x109ff
   10a56:	mov    edx,edi
   10a58:	pop    edi
   10a59:	mov    eax,esi
   10a5b:	pop    esi
   10a5c:	pop    ebp
   10a5d:	ret    0x8
   10a60:	int3   
   10a61:	int3   
   10a62:	int3   
   10a63:	int3   
   10a64:	int3   
   10a65:	int3   
   10a66:	mov    edi,edi
   10a68:	push   ebp
   10a69:	mov    ebp,esp
   10a6b:	push   esi
   10a6c:	push   0x20
   10a6e:	push   0x61737973
   10a73:	push   DWORD PTR [ebp+0x8]
   10a76:	push   0x1
   10a78:	call   DWORD PTR ds:0x1ee18
   10a7e:	mov    esi,eax
   10a80:	test   esi,esi
   10a82:	jne    0x10a8f
   10a84:	push   0xc000009a
   10a89:	call   DWORD PTR ds:0x1ee14
   10a8f:	mov    eax,esi
   10a91:	pop    esi
   10a92:	pop    ebp
   10a93:	ret    
   10a94:	int3   
   10a95:	int3   
   10a96:	int3   
   10a97:	int3   
   10a98:	int3   
   10a99:	int3   
   10a9a:	mov    edi,edi
   10a9c:	push   esi
   10a9d:	mov    esi,ecx
   10a9f:	dec    DWORD PTR [esi+0x4]
   10aa2:	jne    0x10ab3
   10aa4:	push   DWORD PTR [esi]
   10aa6:	call   0x1da14
   10aab:	push   esi
   10aac:	call   0x1da14
   10ab1:	pop    ecx
   10ab2:	pop    ecx
   10ab3:	pop    esi
   10ab4:	ret    
   10ab5:	int3   
   10ab6:	int3   
   10ab7:	int3   
   10ab8:	int3   
   10ab9:	int3   
   10aba:	mov    edi,edi
   10abc:	push   ebp
   10abd:	mov    ebp,esp
   10abf:	push   esi
   10ac0:	xor    esi,esi
   10ac2:	xor    edx,edx
   10ac4:	cmp    DWORD PTR [ebp+0xc],esi
   10ac7:	je     0x10ae4
   10ac9:	mov    eax,DWORD PTR [ebp+0x8]
   10acc:	mov    ecx,DWORD PTR [ebp+0x10]
   10acf:	mov    cl,BYTE PTR [edx+ecx*1]
   10ad2:	add    eax,esi
   10ad4:	xor    BYTE PTR [eax],cl
   10ad6:	lea    eax,[edx+0x1]
   10ad9:	xor    edx,edx
   10adb:	div    DWORD PTR [ebp+0x14]
   10ade:	inc    esi
   10adf:	cmp    esi,DWORD PTR [ebp+0xc]
   10ae2:	jne    0x10ac9
   10ae4:	pop    esi
   10ae5:	pop    ebp
   10ae6:	ret    0x10
   10ae9:	int3   
   10aea:	int3   
   10aeb:	int3   
   10aec:	int3   
   10aed:	int3   
   10aee:	mov    edi,edi
   10af0:	push   ebp
   10af1:	mov    ebp,esp
   10af3:	mov    ecx,DWORD PTR [ebp+0x8]
   10af6:	mov    eax,ecx
   10af8:	lea    edx,[eax+0x2]
   10afb:	push   esi
   10afc:	mov    si,WORD PTR [eax]
   10aff:	inc    eax
   10b00:	inc    eax
   10b01:	test   si,si
   10b04:	jne    0x10afc
   10b06:	sub    eax,edx
   10b08:	sar    eax,1
   10b0a:	cmp    eax,0xc
   10b0d:	jae    0x10b16
   10b0f:	xor    al,al
   10b11:	jmp    0x10be4
   10b16:	lea    eax,[ecx+eax*2-0x18]
   10b1a:	movzx  ecx,WORD PTR [eax]
   10b1d:	cmp    cx,0x69
   10b21:	je     0x10b29
   10b23:	cmp    cx,0x49
   10b27:	jne    0x10b0f
   10b29:	movzx  ecx,WORD PTR [eax+0x2]
   10b2d:	push   0x45
   10b2f:	pop    esi
   10b30:	push   0x65
   10b32:	pop    edx
   10b33:	cmp    cx,dx
   10b36:	je     0x10b3d
   10b38:	cmp    cx,si
   10b3b:	jne    0x10b0f
   10b3d:	movzx  ecx,WORD PTR [eax+0x4]
   10b41:	cmp    cx,0x78
   10b45:	je     0x10b4d
   10b47:	cmp    cx,0x58
   10b4b:	jne    0x10b0f
   10b4d:	movzx  ecx,WORD PTR [eax+0x6]
   10b51:	cmp    cx,0x70
   10b55:	je     0x10b5d
   10b57:	cmp    cx,0x50
   10b5b:	jne    0x10b0f
   10b5d:	movzx  ecx,WORD PTR [eax+0x8]
   10b61:	cmp    cx,0x6c
   10b65:	je     0x10b6d
   10b67:	cmp    cx,0x4c
   10b6b:	jne    0x10b0f
   10b6d:	movzx  ecx,WORD PTR [eax+0xa]
   10b71:	cmp    cx,0x6f
   10b75:	je     0x10b7d
   10b77:	cmp    cx,0x4f
   10b7b:	jne    0x10b0f
   10b7d:	movzx  ecx,WORD PTR [eax+0xc]
   10b81:	cmp    cx,0x52
   10b85:	je     0x10b8d
   10b87:	cmp    cx,0x72
   10b8b:	jne    0x10b0f
   10b8d:	movzx  ecx,WORD PTR [eax+0xe]
   10b91:	cmp    cx,dx
   10b94:	je     0x10b9f
   10b96:	cmp    cx,si
   10b99:	jne    0x10b0f
   10b9f:	cmp    WORD PTR [eax+0x10],0x2e
   10ba4:	jne    0x10b0f
   10baa:	movzx  ecx,WORD PTR [eax+0x12]
   10bae:	cmp    cx,dx
   10bb1:	je     0x10bbc
   10bb3:	cmp    cx,si
   10bb6:	jne    0x10b0f
   10bbc:	movzx  ecx,WORD PTR [eax+0x14]
   10bc0:	cmp    cx,0x78
   10bc4:	je     0x10bd0
   10bc6:	cmp    cx,0x58
   10bca:	jne    0x10b0f
   10bd0:	movzx  eax,WORD PTR [eax+0x16]
   10bd4:	cmp    ax,dx
   10bd7:	je     0x10be2
   10bd9:	cmp    ax,si
   10bdc:	jne    0x10b0f
   10be2:	mov    al,0x1
   10be4:	pop    esi
   10be5:	pop    ebp
   10be6:	ret    0x4
   10be9:	int3   
   10bea:	int3   
   10beb:	int3   
   10bec:	int3   
   10bed:	int3   
   10bee:	mov    edi,edi
   10bf0:	push   ebp
   10bf1:	mov    ebp,esp
   10bf3:	mov    ecx,DWORD PTR [ebp+0x8]
   10bf6:	mov    eax,ecx
   10bf8:	lea    edx,[eax+0x2]
   10bfb:	push   esi
   10bfc:	mov    si,WORD PTR [eax]
   10bff:	inc    eax
   10c00:	inc    eax
   10c01:	test   si,si
   10c04:	jne    0x10bfc
   10c06:	sub    eax,edx
   10c08:	sar    eax,1
   10c0a:	pop    esi
   10c0b:	cmp    eax,0xb
   10c0e:	jae    0x10c17
   10c10:	xor    al,al
   10c12:	jmp    0x10cd3
   10c17:	lea    eax,[ecx+eax*2-0x16]
   10c1b:	movzx  ecx,WORD PTR [eax]
   10c1e:	cmp    cx,0x66
   10c22:	je     0x10c2a
   10c24:	cmp    cx,0x46
   10c28:	jne    0x10c10
   10c2a:	movzx  ecx,WORD PTR [eax+0x2]
   10c2e:	cmp    cx,0x69
   10c32:	je     0x10c3a
   10c34:	cmp    cx,0x49
   10c38:	jne    0x10c10
   10c3a:	movzx  ecx,WORD PTR [eax+0x4]
   10c3e:	cmp    cx,0x72
   10c42:	je     0x10c4a
   10c44:	cmp    cx,0x52
   10c48:	jne    0x10c10
   10c4a:	movzx  ecx,WORD PTR [eax+0x6]
   10c4e:	cmp    cx,0x65
   10c52:	je     0x10c5a
   10c54:	cmp    cx,0x45
   10c58:	jne    0x10c10
   10c5a:	movzx  ecx,WORD PTR [eax+0x8]
   10c5e:	cmp    cx,0x66
   10c62:	je     0x10c6a
   10c64:	cmp    cx,0x46
   10c68:	jne    0x10c10
   10c6a:	movzx  ecx,WORD PTR [eax+0xa]
   10c6e:	cmp    cx,0x6f
   10c72:	je     0x10c7a
   10c74:	cmp    cx,0x4f
   10c78:	jne    0x10c10
   10c7a:	movzx  ecx,WORD PTR [eax+0xc]
   10c7e:	cmp    cx,0x58
   10c82:	je     0x10c8a
   10c84:	cmp    cx,0x78
   10c88:	jne    0x10c10
   10c8a:	cmp    WORD PTR [eax+0xe],0x2e
   10c8f:	jne    0x10c10
   10c95:	movzx  ecx,WORD PTR [eax+0x10]
   10c99:	cmp    cx,0x65
   10c9d:	je     0x10ca9
   10c9f:	cmp    cx,0x45
   10ca3:	jne    0x10c10
   10ca9:	movzx  ecx,WORD PTR [eax+0x12]
   10cad:	cmp    cx,0x78
   10cb1:	je     0x10cbd
   10cb3:	cmp    cx,0x58
   10cb7:	jne    0x10c10
   10cbd:	movzx  eax,WORD PTR [eax+0x14]
   10cc1:	cmp    ax,0x65
   10cc5:	je     0x10cd1
   10cc7:	cmp    ax,0x45
   10ccb:	jne    0x10c10
   10cd1:	mov    al,0x1
   10cd3:	pop    ebp
   10cd4:	ret    0x4
   10cd7:	int3   
   10cd8:	int3   
   10cd9:	int3   
   10cda:	int3   
   10cdb:	int3   
   10cdc:	mov    edi,edi
   10cde:	push   ebp
   10cdf:	mov    ebp,esp
   10ce1:	mov    ecx,DWORD PTR [ebp+0x8]
   10ce4:	mov    eax,ecx
   10ce6:	lea    edx,[eax+0x2]
   10ce9:	push   esi
   10cea:	mov    si,WORD PTR [eax]
   10ced:	inc    eax
   10cee:	inc    eax
   10cef:	test   si,si
   10cf2:	jne    0x10cea
   10cf4:	sub    eax,edx
   10cf6:	sar    eax,1
   10cf8:	pop    esi
   10cf9:	cmp    eax,0xa
   10cfc:	jae    0x10d05
   10cfe:	xor    al,al
   10d00:	jmp    0x10dad
   10d05:	lea    eax,[ecx+eax*2-0x14]
   10d09:	movzx  ecx,WORD PTR [eax]
   10d0c:	cmp    cx,0x63
   10d10:	je     0x10d18
   10d12:	cmp    cx,0x43
   10d16:	jne    0x10cfe
   10d18:	movzx  ecx,WORD PTR [eax+0x2]
   10d1c:	cmp    cx,0x68
   10d20:	je     0x10d28
   10d22:	cmp    cx,0x48
   10d26:	jne    0x10cfe
   10d28:	movzx  ecx,WORD PTR [eax+0x4]
   10d2c:	cmp    cx,0x72
   10d30:	je     0x10d38
   10d32:	cmp    cx,0x52
   10d36:	jne    0x10cfe
   10d38:	movzx  ecx,WORD PTR [eax+0x6]
   10d3c:	cmp    cx,0x6f
   10d40:	je     0x10d48
   10d42:	cmp    cx,0x4f
   10d46:	jne    0x10cfe
   10d48:	movzx  ecx,WORD PTR [eax+0x8]
   10d4c:	cmp    cx,0x6d
   10d50:	je     0x10d58
   10d52:	cmp    cx,0x4d
   10d56:	jne    0x10cfe
   10d58:	movzx  ecx,WORD PTR [eax+0xa]
   10d5c:	cmp    cx,0x65
   10d60:	je     0x10d68
   10d62:	cmp    cx,0x45
   10d66:	jne    0x10cfe
   10d68:	cmp    WORD PTR [eax+0xc],0x2e
   10d6d:	jne    0x10cfe
   10d6f:	movzx  ecx,WORD PTR [eax+0xe]
   10d73:	cmp    cx,0x65
   10d77:	je     0x10d83
   10d79:	cmp    cx,0x45
   10d7d:	jne    0x10cfe
   10d83:	movzx  ecx,WORD PTR [eax+0x10]
   10d87:	cmp    cx,0x78
   10d8b:	je     0x10d97
   10d8d:	cmp    cx,0x58
   10d91:	jne    0x10cfe
   10d97:	movzx  eax,WORD PTR [eax+0x12]
   10d9b:	cmp    ax,0x65
   10d9f:	je     0x10dab
   10da1:	cmp    ax,0x45
   10da5:	jne    0x10cfe
   10dab:	mov    al,0x1
   10dad:	pop    ebp
   10dae:	ret    0x4
   10db1:	int3   
   10db2:	int3   
   10db3:	int3   
   10db4:	int3   
   10db5:	int3   
   10db6:	mov    edi,edi
   10db8:	push   ebp
   10db9:	mov    ebp,esp
   10dbb:	push   DWORD PTR [ebp+0x8]
   10dbe:	call   0x10aee
   10dc3:	test   al,al
   10dc5:	je     0x10dcc
   10dc7:	xor    eax,eax
   10dc9:	inc    eax
   10dca:	jmp    0x10def
   10dcc:	push   DWORD PTR [ebp+0x8]
   10dcf:	call   0x10bee
   10dd4:	test   al,al
   10dd6:	je     0x10ddd
   10dd8:	push   0x2
   10dda:	pop    eax
   10ddb:	jmp    0x10def
   10ddd:	push   DWORD PTR [ebp+0x8]
   10de0:	call   0x10cdc
   10de5:	movzx  eax,al
   10de8:	neg    eax
   10dea:	sbb    eax,eax
   10dec:	and    eax,0x3
   10def:	pop    ebp
   10df0:	ret    0x4
   10df3:	int3   
   10df4:	int3   
   10df5:	int3   
   10df6:	int3   
   10df7:	int3   
   10df8:	mov    edi,edi
   10dfa:	push   ebp
   10dfb:	mov    ebp,esp
   10dfd:	sub    esp,0x10
   10e00:	push   esi
   10e01:	push   edi
   10e02:	xor    eax,eax
   10e04:	mov    WORD PTR [ebp-0x8],ax
   10e08:	lea    edi,[ebp-0x6]
   10e0b:	stos   DWORD PTR es:[edi],eax
   10e0c:	stos   WORD PTR es:[edi],ax
   10e0e:	mov    eax,DWORD PTR [ebp+0xc]
   10e11:	mov    DWORD PTR [ebp-0x4],eax
   10e14:	lea    ecx,[eax+0x2]
   10e17:	mov    dx,WORD PTR [eax]
   10e1a:	inc    eax
   10e1b:	inc    eax
   10e1c:	test   dx,dx
   10e1f:	jne    0x10e17
   10e21:	mov    esi,DWORD PTR [ebp+0x8]
   10e24:	movzx  edx,WORD PTR [esi]
   10e27:	sub    eax,ecx
   10e29:	sar    eax,1
   10e2b:	lea    ecx,[eax+eax*1]
   10e2e:	mov    WORD PTR [ebp-0x8],cx
   10e32:	mov    WORD PTR [ebp-0x6],cx
   10e36:	cmp    dx,cx
   10e39:	jb     0x10e78
   10e3b:	xor    eax,eax
   10e3d:	lea    edi,[ebp-0xe]
   10e40:	stos   DWORD PTR es:[edi],eax
   10e41:	stos   WORD PTR es:[edi],ax
   10e43:	mov    WORD PTR [ebp-0x10],cx
   10e47:	mov    WORD PTR [ebp-0xe],cx
   10e4b:	movzx  eax,dx
   10e4e:	movzx  ecx,cx
   10e51:	sub    eax,ecx
   10e53:	mov    ecx,DWORD PTR [esi+0x4]
   10e56:	cdq    
   10e57:	sub    eax,edx
   10e59:	sar    eax,1
   10e5b:	lea    eax,[ecx+eax*2]
   10e5e:	mov    DWORD PTR [ebp-0xc],eax
   10e61:	push   0x1
   10e63:	lea    eax,[ebp-0x8]
   10e66:	push   eax
   10e67:	lea    eax,[ebp-0x10]
   10e6a:	push   eax
   10e6b:	call   DWORD PTR ds:0x1ee20
   10e71:	neg    eax
   10e73:	sbb    eax,eax
   10e75:	inc    eax
   10e76:	jmp    0x10e7a
   10e78:	xor    al,al
   10e7a:	pop    edi
   10e7b:	pop    esi
   10e7c:	leave  
   10e7d:	ret    0x8
   10e80:	int3   
   10e81:	int3   
   10e82:	int3   
   10e83:	int3   
   10e84:	int3   
   10e85:	int3   
   10e86:	mov    edi,edi
   10e88:	push   ebp
   10e89:	mov    ebp,esp
   10e8b:	push   ebx
   10e8c:	xor    eax,eax
   10e8e:	push   eax
   10e8f:	push   eax
   10e90:	push   eax
   10e91:	push   eax
   10e92:	mov    ebx,0x7e534
   10e97:	push   ebx
   10e98:	call   DWORD PTR ds:0x1ee28
   10e9e:	test   eax,eax
   10ea0:	jge    0x10ea6
   10ea2:	xor    al,al
   10ea4:	jmp    0x10ec9
   10ea6:	push   esi
   10ea7:	mov    esi,DWORD PTR [ebp+0x8]
   10eaa:	push   edi
   10eab:	imul   esi,esi,0x14
   10eae:	mov    edi,DWORD PTR [ebp+0xc]
   10eb1:	push   0x5
   10eb3:	pop    ecx
   10eb4:	push   0x0
   10eb6:	add    esi,0x7ef84
   10ebc:	push   ebx
   10ebd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10ebf:	call   DWORD PTR ds:0x1ee24
   10ec5:	pop    edi
   10ec6:	mov    al,0x1
   10ec8:	pop    esi
   10ec9:	pop    ebx
   10eca:	pop    ebp
   10ecb:	ret    0x8
   10ece:	int3   
   10ecf:	int3   
   10ed0:	int3   
   10ed1:	int3   
   10ed2:	int3   
   10ed3:	int3   
   10ed4:	mov    edi,edi
   10ed6:	push   ebp
   10ed7:	mov    ebp,esp
   10ed9:	push   ebx
   10eda:	xor    eax,eax
   10edc:	push   eax
   10edd:	push   eax
   10ede:	push   eax
   10edf:	push   eax
   10ee0:	mov    ebx,0x7e534
   10ee5:	push   ebx
   10ee6:	call   DWORD PTR ds:0x1ee28
   10eec:	test   eax,eax
   10eee:	jl     0x10f11
   10ef0:	push   esi
   10ef1:	mov    esi,DWORD PTR [ebp+0xc]
   10ef4:	push   edi
   10ef5:	mov    edi,DWORD PTR [ebp+0x8]
   10ef8:	imul   edi,edi,0x14
   10efb:	push   0x5
   10efd:	pop    ecx
   10efe:	push   0x0
   10f00:	add    edi,0x7ef84
   10f06:	push   ebx
   10f07:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10f09:	call   DWORD PTR ds:0x1ee24
   10f0f:	pop    edi
   10f10:	pop    esi
   10f11:	pop    ebx
   10f12:	pop    ebp
   10f13:	ret    0x8
   10f16:	int3   
   10f17:	int3   
   10f18:	int3   
   10f19:	int3   
   10f1a:	int3   
   10f1b:	int3   
   10f1c:	mov    edi,edi
   10f1e:	push   ebp
   10f1f:	mov    ebp,esp
   10f21:	sub    esp,0x14
   10f24:	and    DWORD PTR [ebp-0x14],0x0
   10f28:	push   edi
   10f29:	xor    eax,eax
   10f2b:	lea    edi,[ebp-0x10]
   10f2e:	stos   DWORD PTR es:[edi],eax
   10f2f:	stos   DWORD PTR es:[edi],eax
   10f30:	stos   DWORD PTR es:[edi],eax
   10f31:	stos   DWORD PTR es:[edi],eax
   10f32:	lea    eax,[ebp-0x14]
   10f35:	push   eax
   10f36:	push   DWORD PTR [ebp+0x8]
   10f39:	call   0x10ed4
   10f3e:	pop    edi
   10f3f:	leave  
   10f40:	ret    0x4
   10f43:	int3   
   10f44:	int3   
   10f45:	int3   
   10f46:	int3   
   10f47:	int3   
   10f48:	mov    edi,edi
   10f4a:	push   ebp
   10f4b:	mov    ebp,esp
   10f4d:	push   ebx
   10f4e:	xor    eax,eax
   10f50:	push   eax
   10f51:	push   eax
   10f52:	push   eax
   10f53:	push   eax
   10f54:	mov    ebx,0x7eec0
   10f59:	push   ebx
   10f5a:	call   DWORD PTR ds:0x1ee28
   10f60:	test   eax,eax
   10f62:	jl     0x10f7e
   10f64:	push   esi
   10f65:	mov    esi,DWORD PTR [ebp+0x8]
   10f68:	push   edi
   10f69:	push   0x40
   10f6b:	pop    ecx
   10f6c:	push   0x0
   10f6e:	mov    edi,0x7efb0
   10f73:	push   ebx
   10f74:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10f76:	call   DWORD PTR ds:0x1ee24
   10f7c:	pop    edi
   10f7d:	pop    esi
   10f7e:	pop    ebx
   10f7f:	pop    ebp
   10f80:	ret    0x4
   10f83:	int3   
   10f84:	int3   
   10f85:	int3   
   10f86:	int3   
   10f87:	int3   
   10f88:	mov    edi,edi
   10f8a:	push   ebp
   10f8b:	mov    ebp,esp
   10f8d:	push   ebx
   10f8e:	xor    eax,eax
   10f90:	push   eax
   10f91:	push   eax
   10f92:	push   eax
   10f93:	push   eax
   10f94:	mov    ebx,0x7eec0
   10f99:	push   ebx
   10f9a:	call   DWORD PTR ds:0x1ee28
   10fa0:	test   eax,eax
   10fa2:	jge    0x10fa8
   10fa4:	xor    al,al
   10fa6:	jmp    0x10fce
   10fa8:	push   esi
   10fa9:	push   edi
   10faa:	mov    edi,DWORD PTR [ebp+0x8]
   10fad:	push   0x40
   10faf:	pop    ecx
   10fb0:	push   0x0
   10fb2:	mov    esi,0x7efb0
   10fb7:	push   ebx
   10fb8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10fba:	call   DWORD PTR ds:0x1ee24
   10fc0:	xor    eax,eax
   10fc2:	cmp    WORD PTR ds:0x7efb0,ax
   10fc9:	pop    edi
   10fca:	setne  al
   10fcd:	pop    esi
   10fce:	pop    ebx
   10fcf:	pop    ebp
   10fd0:	ret    0x4
   10fd3:	int3   
   10fd4:	int3   
   10fd5:	int3   
   10fd6:	int3   
   10fd7:	int3   
   10fd8:	mov    edi,edi
   10fda:	push   ebp
   10fdb:	mov    ebp,esp
   10fdd:	push   ebx
   10fde:	mov    ebx,DWORD PTR [ebp+0x8]
   10fe1:	cmp    ebx,0x40
   10fe4:	ja     0x11011
   10fe6:	push   esi
   10fe7:	push   edi
   10fe8:	xor    edi,edi
   10fea:	push   edi
   10feb:	push   edi
   10fec:	push   edi
   10fed:	push   edi
   10fee:	mov    esi,0x7eefc
   10ff3:	push   esi
   10ff4:	call   DWORD PTR ds:0x1ee28
   10ffa:	test   eax,eax
   10ffc:	jl     0x1100f
   10ffe:	push   edi
   10fff:	lea    eax,[ebx*4+0x7e5c0]
   11006:	inc    DWORD PTR [eax]
   11008:	push   esi
   11009:	call   DWORD PTR ds:0x1ee24
   1100f:	pop    edi
   11010:	pop    esi
   11011:	pop    ebx
   11012:	pop    ebp
   11013:	ret    0x4
   11016:	int3   
   11017:	int3   
   11018:	int3   
   11019:	int3   
   1101a:	int3   
   1101b:	int3   
   1101c:	mov    edi,edi
   1101e:	push   ebp
   1101f:	mov    ebp,esp
   11021:	push   ebx
   11022:	push   esi
   11023:	push   edi
   11024:	mov    edi,DWORD PTR [ebp+0x8]
   11027:	cmp    edi,0x40
   1102a:	ja     0x11055
   1102c:	xor    ebx,ebx
   1102e:	push   ebx
   1102f:	push   ebx
   11030:	push   ebx
   11031:	push   ebx
   11032:	mov    esi,0x7eefc
   11037:	push   esi
   11038:	call   DWORD PTR ds:0x1ee28
   1103e:	test   eax,eax
   11040:	jl     0x11055
   11042:	mov    edi,DWORD PTR [edi*4+0x7e5c0]
   11049:	push   ebx
   1104a:	push   esi
   1104b:	call   DWORD PTR ds:0x1ee24
   11051:	mov    eax,edi
   11053:	jmp    0x11057
   11055:	xor    eax,eax
   11057:	pop    edi
   11058:	pop    esi
   11059:	pop    ebx
   1105a:	pop    ebp
   1105b:	ret    0x4
   1105e:	int3   
   1105f:	int3   
   11060:	int3   
   11061:	int3   
   11062:	int3   
   11063:	int3   
   11064:	mov    edi,edi
   11066:	push   ebp
   11067:	mov    ebp,esp
   11069:	push   esi
   1106a:	mov    esi,DWORD PTR [ebp+0x8]
   1106d:	push   edi
   1106e:	push   DWORD PTR [esi]
   11070:	call   0x10a66
   11075:	push   DWORD PTR [esi]
   11077:	mov    edi,eax
   11079:	push   esi
   1107a:	push   edi
   1107b:	call   0x1da96
   11080:	add    esp,0x10
   11083:	mov    eax,edi
   11085:	pop    edi
   11086:	pop    esi
   11087:	pop    ebp
   11088:	ret    0x4
   1108b:	int3   
   1108c:	int3   
   1108d:	int3   
   1108e:	int3   
   1108f:	int3   
   11090:	mov    edi,edi
   11092:	push   esi
   11093:	mov    esi,ecx
   11095:	push   DWORD PTR [esi+0x8]
   11098:	call   0x1da14
   1109d:	push   DWORD PTR [esi]
   1109f:	call   0x1da14
   110a4:	pop    ecx
   110a5:	pop    ecx
   110a6:	pop    esi
   110a7:	ret    
   110a8:	int3   
   110a9:	int3   
   110aa:	int3   
   110ab:	int3   
   110ac:	int3   
   110ad:	int3   
   110ae:	mov    edi,edi
   110b0:	push   ebp
   110b1:	mov    ebp,esp
   110b3:	push   esi
   110b4:	mov    esi,DWORD PTR [ebp+0xc]
   110b7:	push   edi
   110b8:	mov    edi,ecx
   110ba:	cmp    esi,0xffffffff
   110bd:	jne    0x110ce
   110bf:	mov    esi,DWORD PTR [ebp+0x8]
   110c2:	lea    ecx,[esi+0x1]
   110c5:	mov    al,BYTE PTR [esi]
   110c7:	inc    esi
   110c8:	test   al,al
   110ca:	jne    0x110c5
   110cc:	sub    esi,ecx
   110ce:	lea    eax,[esi+0x1]
   110d1:	push   eax
   110d2:	call   0x10a66
   110d7:	pop    ecx
   110d8:	mov    DWORD PTR [edi],eax
   110da:	test   eax,eax
   110dc:	jne    0x110e9
   110de:	push   0xc000009a
   110e3:	call   DWORD PTR ds:0x1ee14
   110e9:	mov    eax,DWORD PTR [edi]
   110eb:	push   esi
   110ec:	push   DWORD PTR [ebp+0x8]
   110ef:	mov    BYTE PTR [esi+eax*1],0x0
   110f3:	push   DWORD PTR [edi]
   110f5:	call   0x1da96
   110fa:	add    esp,0xc
   110fd:	mov    DWORD PTR [edi+0x4],esi
   11100:	pop    edi
   11101:	pop    esi
   11102:	pop    ebp
   11103:	ret    0x8
   11106:	int3   
   11107:	int3   
   11108:	int3   
   11109:	int3   
   1110a:	int3   
   1110b:	int3   
   1110c:	mov    edi,edi
   1110e:	push   ebp
   1110f:	mov    ebp,esp
   11111:	mov    eax,DWORD PTR [ebp+0x8]
   11114:	mov    edx,DWORD PTR [ebp+0xc]
   11117:	push   esi
   11118:	xor    esi,esi
   1111a:	jmp    0x1113f
   1111c:	mov    ecx,eax
   1111e:	and    ecx,0x1
   11121:	or     ecx,esi
   11123:	push   esi
   11124:	jne    0x11131
   11126:	push   0x2
   11128:	push   edx
   11129:	push   eax
   1112a:	call   0x1da7e
   1112f:	jmp    0x1113f
   11131:	push   0x3
   11133:	push   edx
   11134:	push   eax
   11135:	call   0x1da72
   1113a:	add    eax,0x1
   1113d:	adc    edx,esi
   1113f:	cmp    eax,0x4
   11142:	jne    0x1111c
   11144:	cmp    edx,esi
   11146:	jne    0x1111c
   11148:	pop    esi
   11149:	pop    ebp
   1114a:	ret    0x8
   1114d:	int3   
   1114e:	int3   
   1114f:	int3   
   11150:	int3   
   11151:	int3   
   11152:	mov    edi,edi
   11154:	push   ebp
   11155:	mov    ebp,esp
   11157:	push   esi
   11158:	push   edi
   11159:	mov    edi,DWORD PTR [ebp+0xc]
   1115c:	mov    esi,ecx
   1115e:	cmp    edi,0xffffffff
   11161:	jne    0x1116d
   11163:	push   DWORD PTR [ebp+0x8]
   11166:	call   0x109c0
   1116b:	mov    edi,eax
   1116d:	xor    ecx,ecx
   1116f:	push   0x2
   11171:	pop    edx
   11172:	lea    eax,[edi+0x1]
   11175:	mul    edx
   11177:	seto   cl
   1117a:	neg    ecx
   1117c:	or     ecx,eax
   1117e:	push   ecx
   1117f:	call   0x10a66
   11184:	pop    ecx
   11185:	mov    DWORD PTR [esi],eax
   11187:	test   eax,eax
   11189:	jne    0x11196
   1118b:	push   0xc000009a
   11190:	call   DWORD PTR ds:0x1ee14
   11196:	mov    ecx,DWORD PTR [esi]
   11198:	lea    eax,[edi+edi*1]
   1119b:	push   eax
   1119c:	push   DWORD PTR [ebp+0x8]
   1119f:	xor    edx,edx
   111a1:	mov    WORD PTR [eax+ecx*1],dx
   111a5:	push   DWORD PTR [esi]
   111a7:	call   0x1da96
   111ac:	add    esp,0xc
   111af:	mov    DWORD PTR [esi+0x4],edi
   111b2:	pop    edi
   111b3:	pop    esi
   111b4:	pop    ebp
   111b5:	ret    0x8
   111b8:	int3   
   111b9:	int3   
   111ba:	int3   
   111bb:	int3   
   111bc:	int3   
   111bd:	int3   
   111be:	mov    edi,edi
   111c0:	push   ebp
   111c1:	mov    ebp,esp
   111c3:	mov    eax,DWORD PTR [ebp+0x8]
   111c6:	mov    edx,DWORD PTR ds:0x7f8b8
   111cc:	jmp    0x111d0
   111ce:	mov    eax,ecx
   111d0:	mov    ecx,DWORD PTR [eax+0x8]
   111d3:	cmp    ecx,edx
   111d5:	jne    0x111ce
   111d7:	pop    ebp
   111d8:	ret    0x4
   111db:	int3   
   111dc:	int3   
   111dd:	int3   
   111de:	int3   
   111df:	int3   
   111e0:	mov    edi,edi
   111e2:	push   ebp
   111e3:	mov    ebp,esp
   111e5:	mov    eax,DWORD PTR [ebp+0x8]
   111e8:	mov    edx,DWORD PTR ds:0x7f8b8
   111ee:	jmp    0x111f2
   111f0:	mov    eax,ecx
   111f2:	mov    ecx,DWORD PTR [eax]
   111f4:	cmp    ecx,edx
   111f6:	jne    0x111f0
   111f8:	pop    ebp
   111f9:	ret    0x4
   111fc:	int3   
   111fd:	int3   
   111fe:	int3   
   111ff:	int3   
   11200:	int3   
   11201:	int3   
   11202:	mov    edi,edi
   11204:	push   ebp
   11205:	mov    ebp,esp
   11207:	mov    eax,DWORD PTR [ebp+0x8]
   1120a:	mov    edx,DWORD PTR ds:0x7f8bc
   11210:	jmp    0x11214
   11212:	mov    eax,ecx
   11214:	mov    ecx,DWORD PTR [eax+0x8]
   11217:	cmp    ecx,edx
   11219:	jne    0x11212
   1121b:	pop    ebp
   1121c:	ret    0x4
   1121f:	int3   
   11220:	int3   
   11221:	int3   
   11222:	int3   
   11223:	int3   
   11224:	mov    edi,edi
   11226:	push   ebp
   11227:	mov    ebp,esp
   11229:	mov    eax,DWORD PTR [ebp+0x8]
   1122c:	mov    edx,DWORD PTR ds:0x7f8bc
   11232:	jmp    0x11236
   11234:	mov    eax,ecx
   11236:	mov    ecx,DWORD PTR [eax]
   11238:	cmp    ecx,edx
   1123a:	jne    0x11234
   1123c:	pop    ebp
   1123d:	ret    0x4
   11240:	int3   
   11241:	int3   
   11242:	int3   
   11243:	int3   
   11244:	int3   
   11245:	int3   
   11246:	mov    edi,edi
   11248:	push   ebp
   11249:	mov    ebp,esp
   1124b:	mov    eax,DWORD PTR [ebp+0x8]
   1124e:	mov    edx,DWORD PTR ds:0x7f8c0
   11254:	jmp    0x11258
   11256:	mov    eax,ecx
   11258:	mov    ecx,DWORD PTR [eax+0x8]
   1125b:	cmp    ecx,edx
   1125d:	jne    0x11256
   1125f:	pop    ebp
   11260:	ret    0x4
   11263:	int3   
   11264:	int3   
   11265:	int3   
   11266:	int3   
   11267:	int3   
   11268:	mov    edi,edi
   1126a:	push   ebp
   1126b:	mov    ebp,esp
   1126d:	mov    eax,DWORD PTR [ebp+0x8]
   11270:	mov    edx,DWORD PTR ds:0x7f8c0
   11276:	jmp    0x1127a
   11278:	mov    eax,ecx
   1127a:	mov    ecx,DWORD PTR [eax]
   1127c:	cmp    ecx,edx
   1127e:	jne    0x11278
   11280:	pop    ebp
   11281:	ret    0x4
   11284:	int3   
   11285:	int3   
   11286:	int3   
   11287:	int3   
   11288:	int3   
   11289:	int3   
   1128a:	mov    edi,edi
   1128c:	push   esi
   1128d:	mov    esi,ecx
   1128f:	mov    ecx,DWORD PTR [esi]
   11291:	cmp    DWORD PTR [ecx+0x14],0x0
   11295:	jne    0x112a4
   11297:	mov    eax,DWORD PTR [ecx+0x4]
   1129a:	cmp    DWORD PTR [eax+0x4],ecx
   1129d:	jne    0x112a4
   1129f:	mov    eax,DWORD PTR [ecx+0x8]
   112a2:	jmp    0x112c1
   112a4:	mov    eax,DWORD PTR [ecx]
   112a6:	cmp    eax,DWORD PTR ds:0x7f8b8
   112ac:	je     0x112ba
   112ae:	push   eax
   112af:	call   0x111be
   112b4:	jmp    0x112c1
   112b6:	mov    DWORD PTR [esi],eax
   112b8:	mov    ecx,eax
   112ba:	mov    eax,DWORD PTR [ecx+0x4]
   112bd:	cmp    ecx,DWORD PTR [eax]
   112bf:	je     0x112b6
   112c1:	mov    DWORD PTR [esi],eax
   112c3:	pop    esi
   112c4:	ret    
   112c5:	int3   
   112c6:	int3   
   112c7:	int3   
   112c8:	int3   
   112c9:	int3   
   112ca:	mov    edi,edi
   112cc:	push   esi
   112cd:	mov    esi,ecx
   112cf:	mov    ecx,DWORD PTR [esi]
   112d1:	mov    eax,DWORD PTR [ecx+0x8]
   112d4:	cmp    eax,DWORD PTR ds:0x7f8b8
   112da:	je     0x112e8
   112dc:	push   eax
   112dd:	call   0x111e0
   112e2:	jmp    0x112f7
   112e4:	mov    DWORD PTR [esi],eax
   112e6:	mov    ecx,eax
   112e8:	mov    eax,DWORD PTR [ecx+0x4]
   112eb:	cmp    ecx,DWORD PTR [eax+0x8]
   112ee:	je     0x112e4
   112f0:	mov    ecx,DWORD PTR [esi]
   112f2:	cmp    DWORD PTR [ecx+0x8],eax
   112f5:	je     0x112f9
   112f7:	mov    DWORD PTR [esi],eax
   112f9:	pop    esi
   112fa:	ret    
   112fb:	int3   
   112fc:	int3   
   112fd:	int3   
   112fe:	int3   
   112ff:	int3   
   11300:	mov    edi,edi
   11302:	push   ebp
   11303:	mov    ebp,esp
   11305:	mov    edx,DWORD PTR [ebp+0x8]
   11308:	mov    eax,DWORD PTR [edx+0x8]
   1130b:	push   esi
   1130c:	mov    esi,DWORD PTR [eax]
   1130e:	mov    DWORD PTR [edx+0x8],esi
   11311:	mov    esi,DWORD PTR [eax]
   11313:	cmp    esi,DWORD PTR ds:0x7f8c4
   11319:	je     0x1131e
   1131b:	mov    DWORD PTR [esi+0x4],edx
   1131e:	mov    esi,DWORD PTR [edx+0x4]
   11321:	mov    DWORD PTR [eax+0x4],esi
   11324:	mov    ecx,DWORD PTR [ecx+0x4]
   11327:	pop    esi
   11328:	cmp    edx,DWORD PTR [ecx+0x4]
   1132b:	jne    0x11332
   1132d:	mov    DWORD PTR [ecx+0x4],eax
   11330:	jmp    0x11340
   11332:	mov    ecx,DWORD PTR [edx+0x4]
   11335:	cmp    edx,DWORD PTR [ecx]
   11337:	jne    0x1133d
   11339:	mov    DWORD PTR [ecx],eax
   1133b:	jmp    0x11340
   1133d:	mov    DWORD PTR [ecx+0x8],eax
   11340:	mov    DWORD PTR [eax],edx
   11342:	mov    DWORD PTR [edx+0x4],eax
   11345:	pop    ebp
   11346:	ret    0x4
   11349:	int3   
   1134a:	int3   
   1134b:	int3   
   1134c:	int3   
   1134d:	int3   
   1134e:	mov    edi,edi
   11350:	push   ebp
   11351:	mov    ebp,esp
   11353:	mov    eax,DWORD PTR [ebp+0x8]
   11356:	mov    edx,DWORD PTR ds:0x7f8c4
   1135c:	jmp    0x11360
   1135e:	mov    eax,ecx
   11360:	mov    ecx,DWORD PTR [eax+0x8]
   11363:	cmp    ecx,edx
   11365:	jne    0x1135e
   11367:	pop    ebp
   11368:	ret    0x4
   1136b:	int3   
   1136c:	int3   
   1136d:	int3   
   1136e:	int3   
   1136f:	int3   
   11370:	mov    edi,edi
   11372:	push   ebp
   11373:	mov    ebp,esp
   11375:	mov    edx,DWORD PTR [ebp+0x8]
   11378:	mov    eax,DWORD PTR [edx]
   1137a:	push   esi
   1137b:	mov    esi,DWORD PTR [eax+0x8]
   1137e:	mov    DWORD PTR [edx],esi
   11380:	mov    esi,DWORD PTR [eax+0x8]
   11383:	cmp    esi,DWORD PTR ds:0x7f8c4
   11389:	je     0x1138e
   1138b:	mov    DWORD PTR [esi+0x4],edx
   1138e:	mov    esi,DWORD PTR [edx+0x4]
   11391:	mov    DWORD PTR [eax+0x4],esi
   11394:	mov    ecx,DWORD PTR [ecx+0x4]
   11397:	pop    esi
   11398:	cmp    edx,DWORD PTR [ecx+0x4]
   1139b:	jne    0x113a2
   1139d:	mov    DWORD PTR [ecx+0x4],eax
   113a0:	jmp    0x113b1
   113a2:	mov    ecx,DWORD PTR [edx+0x4]
   113a5:	cmp    edx,DWORD PTR [ecx+0x8]
   113a8:	jne    0x113af
   113aa:	mov    DWORD PTR [ecx+0x8],eax
   113ad:	jmp    0x113b1
   113af:	mov    DWORD PTR [ecx],eax
   113b1:	mov    DWORD PTR [eax+0x8],edx
   113b4:	mov    DWORD PTR [edx+0x4],eax
   113b7:	pop    ebp
   113b8:	ret    0x4
   113bb:	int3   
   113bc:	int3   
   113bd:	int3   
   113be:	int3   
   113bf:	int3   
   113c0:	mov    edi,edi
   113c2:	push   esi
   113c3:	mov    esi,ecx
   113c5:	mov    ecx,DWORD PTR [esi]
   113c7:	cmp    DWORD PTR [ecx+0x68],0x0
   113cb:	jne    0x113da
   113cd:	mov    eax,DWORD PTR [ecx+0x4]
   113d0:	cmp    DWORD PTR [eax+0x4],ecx
   113d3:	jne    0x113da
   113d5:	mov    eax,DWORD PTR [ecx+0x8]
   113d8:	jmp    0x113f7
   113da:	mov    eax,DWORD PTR [ecx]
   113dc:	cmp    eax,DWORD PTR ds:0x7f8c4
   113e2:	je     0x113f0
   113e4:	push   eax
   113e5:	call   0x1134e
   113ea:	jmp    0x113f7
   113ec:	mov    DWORD PTR [esi],eax
   113ee:	mov    ecx,eax
   113f0:	mov    eax,DWORD PTR [ecx+0x4]
   113f3:	cmp    ecx,DWORD PTR [eax]
   113f5:	je     0x113ec
   113f7:	mov    DWORD PTR [esi],eax
   113f9:	pop    esi
   113fa:	ret    
   113fb:	int3   
   113fc:	int3   
   113fd:	int3   
   113fe:	int3   
   113ff:	int3   
   11400:	mov    edi,edi
   11402:	push   ebp
   11403:	mov    ebp,esp
   11405:	mov    eax,DWORD PTR [ebp+0x8]
   11408:	mov    edx,DWORD PTR ds:0x7f8c8
   1140e:	jmp    0x11412
   11410:	mov    eax,ecx
   11412:	mov    ecx,DWORD PTR [eax+0x8]
   11415:	cmp    ecx,edx
   11417:	jne    0x11410
   11419:	pop    ebp
   1141a:	ret    0x4
   1141d:	int3   
   1141e:	int3   
   1141f:	int3   
   11420:	int3   
   11421:	int3   
   11422:	mov    edi,edi
   11424:	push   ebp
   11425:	mov    ebp,esp
   11427:	mov    eax,DWORD PTR [ebp+0x8]
   1142a:	mov    edx,DWORD PTR ds:0x7f8c8
   11430:	jmp    0x11434
   11432:	mov    eax,ecx
   11434:	mov    ecx,DWORD PTR [eax]
   11436:	cmp    ecx,edx
   11438:	jne    0x11432
   1143a:	pop    ebp
   1143b:	ret    0x4
   1143e:	int3   
   1143f:	int3   
   11440:	int3   
   11441:	int3   
   11442:	int3   
   11443:	int3   
   11444:	mov    edi,edi
   11446:	push   esi
   11447:	mov    esi,ecx
   11449:	mov    ecx,DWORD PTR [esi]
   1144b:	cmp    DWORD PTR [ecx+0x1c],0x0
   1144f:	jne    0x1145e
   11451:	mov    eax,DWORD PTR [ecx+0x4]
   11454:	cmp    DWORD PTR [eax+0x4],ecx
   11457:	jne    0x1145e
   11459:	mov    eax,DWORD PTR [ecx+0x8]
   1145c:	jmp    0x1147b
   1145e:	mov    eax,DWORD PTR [ecx]
   11460:	cmp    eax,DWORD PTR ds:0x7f8c8
   11466:	je     0x11474
   11468:	push   eax
   11469:	call   0x11400
   1146e:	jmp    0x1147b
   11470:	mov    DWORD PTR [esi],eax
   11472:	mov    ecx,eax
   11474:	mov    eax,DWORD PTR [ecx+0x4]
   11477:	cmp    ecx,DWORD PTR [eax]
   11479:	je     0x11470
   1147b:	mov    DWORD PTR [esi],eax
   1147d:	pop    esi
   1147e:	ret    
   1147f:	int3   
   11480:	int3   
   11481:	int3   
   11482:	int3   
   11483:	int3   
   11484:	mov    edi,edi
   11486:	push   ebp
   11487:	mov    ebp,esp
   11489:	mov    eax,DWORD PTR [ebp+0x8]
   1148c:	mov    edx,DWORD PTR ds:0x7f8cc
   11492:	jmp    0x11496
   11494:	mov    eax,ecx
   11496:	mov    ecx,DWORD PTR [eax+0x8]
   11499:	cmp    ecx,edx
   1149b:	jne    0x11494
   1149d:	pop    ebp
   1149e:	ret    0x4
   114a1:	int3   
   114a2:	int3   
   114a3:	int3   
   114a4:	int3   
   114a5:	int3   
   114a6:	mov    edi,edi
   114a8:	push   ebp
   114a9:	mov    ebp,esp
   114ab:	mov    eax,DWORD PTR [ebp+0x8]
   114ae:	mov    edx,DWORD PTR ds:0x7f8cc
   114b4:	jmp    0x114b8
   114b6:	mov    eax,ecx
   114b8:	mov    ecx,DWORD PTR [eax]
   114ba:	cmp    ecx,edx
   114bc:	jne    0x114b6
   114be:	pop    ebp
   114bf:	ret    0x4
   114c2:	int3   
   114c3:	int3   
   114c4:	int3   
   114c5:	int3   
   114c6:	int3   
   114c7:	int3   
   114c8:	mov    edi,edi
   114ca:	push   esi
   114cb:	mov    esi,ecx
   114cd:	mov    ecx,DWORD PTR [esi]
   114cf:	cmp    DWORD PTR [ecx+0x14],0x0
   114d3:	jne    0x114e2
   114d5:	mov    eax,DWORD PTR [ecx+0x4]
   114d8:	cmp    DWORD PTR [eax+0x4],ecx
   114db:	jne    0x114e2
   114dd:	mov    eax,DWORD PTR [ecx+0x8]
   114e0:	jmp    0x114ff
   114e2:	mov    eax,DWORD PTR [ecx]
   114e4:	cmp    eax,DWORD PTR ds:0x7f8cc
   114ea:	je     0x114f8
   114ec:	push   eax
   114ed:	call   0x11484
   114f2:	jmp    0x114ff
   114f4:	mov    DWORD PTR [esi],eax
   114f6:	mov    ecx,eax
   114f8:	mov    eax,DWORD PTR [ecx+0x4]
   114fb:	cmp    ecx,DWORD PTR [eax]
   114fd:	je     0x114f4
   114ff:	mov    DWORD PTR [esi],eax
   11501:	pop    esi
   11502:	ret    
   11503:	int3   
   11504:	int3   
   11505:	int3   
   11506:	int3   
   11507:	int3   
   11508:	mov    edi,edi
   1150a:	push   esi
   1150b:	mov    esi,ecx
   1150d:	mov    ecx,DWORD PTR [esi]
   1150f:	cmp    DWORD PTR [ecx+0x70],0x0
   11513:	jne    0x11522
   11515:	mov    eax,DWORD PTR [ecx+0x4]
   11518:	cmp    DWORD PTR [eax+0x4],ecx
   1151b:	jne    0x11522
   1151d:	mov    eax,DWORD PTR [ecx+0x8]
   11520:	jmp    0x1153f
   11522:	mov    eax,DWORD PTR [ecx]
   11524:	cmp    eax,DWORD PTR ds:0x7f8c0
   1152a:	je     0x11538
   1152c:	push   eax
   1152d:	call   0x11246
   11532:	jmp    0x1153f
   11534:	mov    DWORD PTR [esi],eax
   11536:	mov    ecx,eax
   11538:	mov    eax,DWORD PTR [ecx+0x4]
   1153b:	cmp    ecx,DWORD PTR [eax]
   1153d:	je     0x11534
   1153f:	mov    DWORD PTR [esi],eax
   11541:	pop    esi
   11542:	ret    
   11543:	int3   
   11544:	int3   
   11545:	int3   
   11546:	int3   
   11547:	int3   
   11548:	mov    edi,edi
   1154a:	push   esi
   1154b:	mov    esi,ecx
   1154d:	mov    ecx,DWORD PTR [esi]
   1154f:	mov    eax,DWORD PTR [ecx+0x8]
   11552:	cmp    eax,DWORD PTR ds:0x7f8c8
   11558:	je     0x11566
   1155a:	push   eax
   1155b:	call   0x11422
   11560:	jmp    0x11575
   11562:	mov    DWORD PTR [esi],eax
   11564:	mov    ecx,eax
   11566:	mov    eax,DWORD PTR [ecx+0x4]
   11569:	cmp    ecx,DWORD PTR [eax+0x8]
   1156c:	je     0x11562
   1156e:	mov    ecx,DWORD PTR [esi]
   11570:	cmp    DWORD PTR [ecx+0x8],eax
   11573:	je     0x11577
   11575:	mov    DWORD PTR [esi],eax
   11577:	pop    esi
   11578:	ret    
   11579:	int3   
   1157a:	int3   
   1157b:	int3   
   1157c:	int3   
   1157d:	int3   
   1157e:	mov    edi,edi
   11580:	push   esi
   11581:	mov    esi,ecx
   11583:	mov    ecx,DWORD PTR [esi]
   11585:	mov    eax,DWORD PTR [ecx+0x8]
   11588:	cmp    eax,DWORD PTR ds:0x7f8cc
   1158e:	je     0x1159c
   11590:	push   eax
   11591:	call   0x114a6
   11596:	jmp    0x115ab
   11598:	mov    DWORD PTR [esi],eax
   1159a:	mov    ecx,eax
   1159c:	mov    eax,DWORD PTR [ecx+0x4]
   1159f:	cmp    ecx,DWORD PTR [eax+0x8]
   115a2:	je     0x11598
   115a4:	mov    ecx,DWORD PTR [esi]
   115a6:	cmp    DWORD PTR [ecx+0x8],eax
   115a9:	je     0x115ad
   115ab:	mov    DWORD PTR [esi],eax
   115ad:	pop    esi
   115ae:	ret    
   115af:	int3   
   115b0:	int3   
   115b1:	int3   
   115b2:	int3   
   115b3:	int3   
   115b4:	mov    edi,edi
   115b6:	push   ebp
   115b7:	mov    ebp,esp
   115b9:	mov    eax,DWORD PTR [ebp+0x8]
   115bc:	mov    edx,DWORD PTR ds:0x7f8d4
   115c2:	jmp    0x115c6
   115c4:	mov    eax,ecx
   115c6:	mov    ecx,DWORD PTR [eax+0x8]
   115c9:	cmp    ecx,edx
   115cb:	jne    0x115c4
   115cd:	pop    ebp
   115ce:	ret    0x4
   115d1:	int3   
   115d2:	int3   
   115d3:	int3   
   115d4:	int3   
   115d5:	int3   
   115d6:	mov    edi,edi
   115d8:	push   ebp
   115d9:	mov    ebp,esp
   115db:	push   ecx
   115dc:	push   ecx
   115dd:	mov    eax,DWORD PTR [ebp+0x8]
   115e0:	mov    DWORD PTR [ebp-0x4],eax
   115e3:	lea    ecx,[eax+0x2]
   115e6:	mov    dx,WORD PTR [eax]
   115e9:	inc    eax
   115ea:	inc    eax
   115eb:	test   dx,dx
   115ee:	jne    0x115e6
   115f0:	sub    eax,ecx
   115f2:	sar    eax,1
   115f4:	mov    WORD PTR [ebp-0x8],ax
   115f8:	mov    eax,DWORD PTR [ebp-0x8]
   115fb:	add    eax,eax
   115fd:	mov    WORD PTR [ebp-0x6],ax
   11601:	mov    WORD PTR [ebp-0x8],ax
   11605:	lea    eax,[ebp-0x8]
   11608:	push   eax
   11609:	call   DWORD PTR ds:0x1ee64
   1160f:	leave  
   11610:	ret    0x4
   11613:	int3   
   11614:	int3   
   11615:	int3   
   11616:	int3   
   11617:	int3   
   11618:	mov    edi,edi
   1161a:	push   ebp
   1161b:	mov    ebp,esp
   1161d:	cmp    DWORD PTR [ebp+0x8],0x0
   11621:	jge    0x11627
   11623:	and    DWORD PTR [ebp+0x8],0x0
   11627:	push   DWORD PTR [ebp+0x8]
   1162a:	call   0x10a66
   1162f:	pop    ecx
   11630:	pop    ebp
   11631:	ret    0x8
   11634:	int3   
   11635:	int3   
   11636:	int3   
   11637:	int3   
   11638:	int3   
   11639:	int3   
   1163a:	mov    edi,edi
   1163c:	push   ebp
   1163d:	mov    ebp,esp
   1163f:	mov    eax,DWORD PTR [ebp+0x8]
   11642:	test   eax,eax
   11644:	je     0x11653
   11646:	mov    ecx,DWORD PTR [ebp+0xc]
   11649:	mov    edx,DWORD PTR [ecx]
   1164b:	mov    DWORD PTR [eax],edx
   1164d:	mov    ecx,DWORD PTR [ecx+0x4]
   11650:	mov    DWORD PTR [eax+0x4],ecx
   11653:	pop    ebp
   11654:	ret    0x8
   11657:	int3   
   11658:	int3   
   11659:	int3   
   1165a:	int3   
   1165b:	int3   
   1165c:	mov    edi,edi
   1165e:	push   ebp
   1165f:	mov    ebp,esp
   11661:	push   esi
   11662:	mov    esi,ecx
   11664:	call   0x11090
   11669:	test   BYTE PTR [ebp+0x8],0x1
   1166d:	je     0x11676
   1166f:	push   esi
   11670:	call   0x1da14
   11675:	pop    ecx
   11676:	mov    eax,esi
   11678:	pop    esi
   11679:	pop    ebp
   1167a:	ret    0x4
   1167d:	int3   
   1167e:	int3   
   1167f:	int3   
   11680:	int3   
   11681:	int3   
   11682:	test   BYTE PTR ds:0x7f8dc,0x1
   11689:	jne    0x116a1
   1168b:	or     DWORD PTR ds:0x7f8dc,0x1
   11692:	push   0x1df24
   11697:	call   0x115d6
   1169c:	mov    ds:0x7f8d8,eax
   116a1:	mov    eax,ds:0x7f8d8
   116a6:	ret    
   116a7:	int3   
   116a8:	int3   
   116a9:	int3   
   116aa:	int3   
   116ab:	int3   
   116ac:	test   BYTE PTR ds:0x7f8e4,0x1
   116b3:	jne    0x116cb
   116b5:	or     DWORD PTR ds:0x7f8e4,0x1
   116bc:	push   0x1df40
   116c1:	call   0x115d6
   116c6:	mov    ds:0x7f8e0,eax
   116cb:	mov    eax,ds:0x7f8e0
   116d0:	ret    
   116d1:	int3   
   116d2:	int3   
   116d3:	int3   
   116d4:	int3   
   116d5:	int3   
   116d6:	test   BYTE PTR ds:0x7f8ec,0x1
   116dd:	jne    0x116f5
   116df:	or     DWORD PTR ds:0x7f8ec,0x1
   116e6:	push   0x1df78
   116eb:	call   0x115d6
   116f0:	mov    ds:0x7f8e8,eax
   116f5:	mov    eax,ds:0x7f8e8
   116fa:	ret    
   116fb:	int3   
   116fc:	int3   
   116fd:	int3   
   116fe:	int3   
   116ff:	int3   
   11700:	test   BYTE PTR ds:0x7f8f4,0x1
   11707:	jne    0x1171f
   11709:	or     DWORD PTR ds:0x7f8f4,0x1
   11710:	push   0x1df9a
   11715:	call   0x115d6
   1171a:	mov    ds:0x7f8f0,eax
   1171f:	mov    eax,ds:0x7f8f0
   11724:	ret    
   11725:	int3   
   11726:	int3   
   11727:	int3   
   11728:	int3   
   11729:	int3   
   1172a:	test   BYTE PTR ds:0x7f8fc,0x1
   11731:	jne    0x11749
   11733:	or     DWORD PTR ds:0x7f8fc,0x1
   1173a:	push   0x1dfda
   1173f:	call   0x115d6
   11744:	mov    ds:0x7f8f8,eax
   11749:	mov    eax,ds:0x7f8f8
   1174e:	ret    
   1174f:	int3   
   11750:	int3   
   11751:	int3   
   11752:	int3   
   11753:	int3   
   11754:	test   BYTE PTR ds:0x7f904,0x1
   1175b:	jne    0x11773
   1175d:	or     DWORD PTR ds:0x7f904,0x1
   11764:	push   0x1dff0
   11769:	call   0x115d6
   1176e:	mov    ds:0x7f900,eax
   11773:	mov    eax,ds:0x7f900
   11778:	ret    
   11779:	int3   
   1177a:	int3   
   1177b:	int3   
   1177c:	int3   
   1177d:	int3   
   1177e:	test   BYTE PTR ds:0x7f90c,0x1
   11785:	jne    0x1179d
   11787:	or     DWORD PTR ds:0x7f90c,0x1
   1178e:	push   0x1e024
   11793:	call   0x115d6
   11798:	mov    ds:0x7f908,eax
   1179d:	mov    eax,ds:0x7f908
   117a2:	ret    
   117a3:	int3   
   117a4:	int3   
   117a5:	int3   
   117a6:	int3   
   117a7:	int3   
   117a8:	test   BYTE PTR ds:0x7f914,0x1
   117af:	jne    0x117c7
   117b1:	or     DWORD PTR ds:0x7f914,0x1
   117b8:	push   0x1e056
   117bd:	call   0x115d6
   117c2:	mov    ds:0x7f910,eax
   117c7:	mov    eax,ds:0x7f910
   117cc:	ret    
   117cd:	int3   
   117ce:	int3   
   117cf:	int3   
   117d0:	int3   
   117d1:	int3   
   117d2:	test   BYTE PTR ds:0x7f91c,0x1
   117d9:	jne    0x117f1
   117db:	or     DWORD PTR ds:0x7f91c,0x1
   117e2:	push   0x1e06a
   117e7:	call   0x115d6
   117ec:	mov    ds:0x7f918,eax
   117f1:	mov    eax,ds:0x7f918
   117f6:	ret    
   117f7:	int3   
   117f8:	int3   
   117f9:	int3   
   117fa:	int3   
   117fb:	int3   
   117fc:	test   BYTE PTR ds:0x7f924,0x1
   11803:	jne    0x1181b
   11805:	or     DWORD PTR ds:0x7f924,0x1
   1180c:	push   0x1e082
   11811:	call   0x115d6
   11816:	mov    ds:0x7f920,eax
   1181b:	mov    eax,ds:0x7f920
   11820:	ret    
   11821:	int3   
   11822:	int3   
   11823:	int3   
   11824:	int3   
   11825:	int3   
   11826:	test   BYTE PTR ds:0x7f92c,0x1
   1182d:	jne    0x11845
   1182f:	or     DWORD PTR ds:0x7f92c,0x1
   11836:	push   0x1e09e
   1183b:	call   0x115d6
   11840:	mov    ds:0x7f928,eax
   11845:	mov    eax,ds:0x7f928
   1184a:	ret    
   1184b:	int3   
   1184c:	int3   
   1184d:	int3   
   1184e:	int3   
   1184f:	int3   
   11850:	test   BYTE PTR ds:0x7f934,0x1
   11857:	jne    0x1186f
   11859:	or     DWORD PTR ds:0x7f934,0x1
   11860:	push   0x1e0d8
   11865:	call   0x115d6
   1186a:	mov    ds:0x7f930,eax
   1186f:	mov    eax,ds:0x7f930
   11874:	ret    
   11875:	int3   
   11876:	int3   
   11877:	int3   
   11878:	int3   
   11879:	int3   
   1187a:	test   BYTE PTR ds:0x7f93c,0x1
   11881:	jne    0x11899
   11883:	or     DWORD PTR ds:0x7f93c,0x1
   1188a:	push   0x1e0f2
   1188f:	call   0x115d6
   11894:	mov    ds:0x7f938,eax
   11899:	mov    eax,ds:0x7f938
   1189e:	ret    
   1189f:	int3   
   118a0:	int3   
   118a1:	int3   
   118a2:	int3   
   118a3:	int3   
   118a4:	test   BYTE PTR ds:0x7f944,0x1
   118ab:	jne    0x118c3
   118ad:	or     DWORD PTR ds:0x7f944,0x1
   118b4:	push   0x1e114
   118b9:	call   0x115d6
   118be:	mov    ds:0x7f940,eax
   118c3:	mov    eax,ds:0x7f940
   118c8:	ret    
   118c9:	int3   
   118ca:	int3   
   118cb:	int3   
   118cc:	int3   
   118cd:	int3   
   118ce:	test   BYTE PTR ds:0x7f94c,0x1
   118d5:	jne    0x118ed
   118d7:	or     DWORD PTR ds:0x7f94c,0x1
   118de:	push   0x1e14e
   118e3:	call   0x115d6
   118e8:	mov    ds:0x7f948,eax
   118ed:	mov    eax,ds:0x7f948
   118f2:	ret    
   118f3:	int3   
   118f4:	int3   
   118f5:	int3   
   118f6:	int3   
   118f7:	int3   
   118f8:	test   BYTE PTR ds:0x7f954,0x1
   118ff:	jne    0x11917
   11901:	or     DWORD PTR ds:0x7f954,0x1
   11908:	push   0x1e174
   1190d:	call   0x115d6
   11912:	mov    ds:0x7f950,eax
   11917:	mov    eax,ds:0x7f950
   1191c:	ret    
   1191d:	int3   
   1191e:	int3   
   1191f:	int3   
   11920:	int3   
   11921:	int3   
   11922:	test   BYTE PTR ds:0x7f95c,0x1
   11929:	jne    0x11941
   1192b:	or     DWORD PTR ds:0x7f95c,0x1
   11932:	push   0x1e1a4
   11937:	call   0x115d6
   1193c:	mov    ds:0x7f958,eax
   11941:	mov    eax,ds:0x7f958
   11946:	ret    
   11947:	int3   
   11948:	int3   
   11949:	int3   
   1194a:	int3   
   1194b:	int3   
   1194c:	test   BYTE PTR ds:0x7f964,0x1
   11953:	jne    0x1196b
   11955:	or     DWORD PTR ds:0x7f964,0x1
   1195c:	push   0x1e1d6
   11961:	call   0x115d6
   11966:	mov    ds:0x7f960,eax
   1196b:	mov    eax,ds:0x7f960
   11970:	ret    
   11971:	int3   
   11972:	int3   
   11973:	int3   
   11974:	int3   
   11975:	int3   
   11976:	test   BYTE PTR ds:0x7f96c,0x1
   1197d:	jne    0x11995
   1197f:	or     DWORD PTR ds:0x7f96c,0x1
   11986:	push   0x1e1ea
   1198b:	call   0x115d6
   11990:	mov    ds:0x7f968,eax
   11995:	mov    eax,ds:0x7f968
   1199a:	ret    
   1199b:	int3   
   1199c:	int3   
   1199d:	int3   
   1199e:	int3   
   1199f:	int3   
   119a0:	test   BYTE PTR ds:0x7f974,0x1
   119a7:	jne    0x119bf
   119a9:	or     DWORD PTR ds:0x7f974,0x1
   119b0:	push   0x1e208
   119b5:	call   0x115d6
   119ba:	mov    ds:0x7f970,eax
   119bf:	mov    eax,ds:0x7f970
   119c4:	ret    
   119c5:	int3   
   119c6:	int3   
   119c7:	int3   
   119c8:	int3   
   119c9:	int3   
   119ca:	test   BYTE PTR ds:0x7f97c,0x1
   119d1:	jne    0x119e9
   119d3:	or     DWORD PTR ds:0x7f97c,0x1
   119da:	push   0x1e222
   119df:	call   0x115d6
   119e4:	mov    ds:0x7f978,eax
   119e9:	mov    eax,ds:0x7f978
   119ee:	ret    
   119ef:	int3   
   119f0:	int3   
   119f1:	int3   
   119f2:	int3   
   119f3:	int3   
   119f4:	test   BYTE PTR ds:0x7f984,0x1
   119fb:	jne    0x11a13
   119fd:	or     DWORD PTR ds:0x7f984,0x1
   11a04:	push   0x1e23a
   11a09:	call   0x115d6
   11a0e:	mov    ds:0x7f980,eax
   11a13:	mov    eax,ds:0x7f980
   11a18:	ret    
   11a19:	int3   
   11a1a:	int3   
   11a1b:	int3   
   11a1c:	int3   
   11a1d:	int3   
   11a1e:	test   BYTE PTR ds:0x7f98c,0x1
   11a25:	jne    0x11a3d
   11a27:	or     DWORD PTR ds:0x7f98c,0x1
   11a2e:	push   0x1e258
   11a33:	call   0x115d6
   11a38:	mov    ds:0x7f988,eax
   11a3d:	mov    eax,ds:0x7f988
   11a42:	ret    
   11a43:	int3   
   11a44:	int3   
   11a45:	int3   
   11a46:	int3   
   11a47:	int3   
   11a48:	test   BYTE PTR ds:0x7f994,0x1
   11a4f:	jne    0x11a67
   11a51:	or     DWORD PTR ds:0x7f994,0x1
   11a58:	push   0x1e278
   11a5d:	call   0x115d6
   11a62:	mov    ds:0x7f990,eax
   11a67:	mov    eax,ds:0x7f990
   11a6c:	ret    
   11a6d:	int3   
   11a6e:	int3   
   11a6f:	int3   
   11a70:	int3   
   11a71:	int3   
   11a72:	test   BYTE PTR ds:0x7f99c,0x1
   11a79:	jne    0x11a91
   11a7b:	or     DWORD PTR ds:0x7f99c,0x1
   11a82:	push   0x1e298
   11a87:	call   0x115d6
   11a8c:	mov    ds:0x7f998,eax
   11a91:	mov    eax,ds:0x7f998
   11a96:	ret    
   11a97:	int3   
   11a98:	int3   
   11a99:	int3   
   11a9a:	int3   
   11a9b:	int3   
   11a9c:	test   BYTE PTR ds:0x7f9a4,0x1
   11aa3:	jne    0x11abb
   11aa5:	or     DWORD PTR ds:0x7f9a4,0x1
   11aac:	push   0x1e2b8
   11ab1:	call   0x115d6
   11ab6:	mov    ds:0x7f9a0,eax
   11abb:	mov    eax,ds:0x7f9a0
   11ac0:	ret    
   11ac1:	int3   
   11ac2:	int3   
   11ac3:	int3   
   11ac4:	int3   
   11ac5:	int3   
   11ac6:	test   BYTE PTR ds:0x7f9ac,0x1
   11acd:	jne    0x11ae5
   11acf:	or     DWORD PTR ds:0x7f9ac,0x1
   11ad6:	push   0x1e2ce
   11adb:	call   0x115d6
   11ae0:	mov    ds:0x7f9a8,eax
   11ae5:	mov    eax,ds:0x7f9a8
   11aea:	ret    
   11aeb:	int3   
   11aec:	int3   
   11aed:	int3   
   11aee:	int3   
   11aef:	int3   
   11af0:	test   BYTE PTR ds:0x7f9b4,0x1
   11af7:	jne    0x11b0f
   11af9:	or     DWORD PTR ds:0x7f9b4,0x1
   11b00:	push   0x1e2f8
   11b05:	call   0x115d6
   11b0a:	mov    ds:0x7f9b0,eax
   11b0f:	mov    eax,ds:0x7f9b0
   11b14:	ret    
   11b15:	int3   
   11b16:	int3   
   11b17:	int3   
   11b18:	int3   
   11b19:	int3   
   11b1a:	test   BYTE PTR ds:0x7f9bc,0x1
   11b21:	jne    0x11b39
   11b23:	or     DWORD PTR ds:0x7f9bc,0x1
   11b2a:	push   0x1e310
   11b2f:	call   0x115d6
   11b34:	mov    ds:0x7f9b8,eax
   11b39:	mov    eax,ds:0x7f9b8
   11b3e:	ret    
   11b3f:	int3   
   11b40:	int3   
   11b41:	int3   
   11b42:	int3   
   11b43:	int3   
   11b44:	test   BYTE PTR ds:0x7f9c4,0x1
   11b4b:	jne    0x11b63
   11b4d:	or     DWORD PTR ds:0x7f9c4,0x1
   11b54:	push   0x1e33e
   11b59:	call   0x115d6
   11b5e:	mov    ds:0x7f9c0,eax
   11b63:	mov    eax,ds:0x7f9c0
   11b68:	ret    
   11b69:	int3   
   11b6a:	int3   
   11b6b:	int3   
   11b6c:	int3   
   11b6d:	int3   
   11b6e:	test   BYTE PTR ds:0x7f9cc,0x1
   11b75:	jne    0x11b8d
   11b77:	or     DWORD PTR ds:0x7f9cc,0x1
   11b7e:	push   0x1e368
   11b83:	call   0x115d6
   11b88:	mov    ds:0x7f9c8,eax
   11b8d:	mov    eax,ds:0x7f9c8
   11b92:	ret    
   11b93:	int3   
   11b94:	int3   
   11b95:	int3   
   11b96:	int3   
   11b97:	int3   
   11b98:	test   BYTE PTR ds:0x7f9d4,0x1
   11b9f:	jne    0x11bb7
   11ba1:	or     DWORD PTR ds:0x7f9d4,0x1
   11ba8:	push   0x1e386
   11bad:	call   0x115d6
   11bb2:	mov    ds:0x7f9d0,eax
   11bb7:	mov    eax,ds:0x7f9d0
   11bbc:	ret    
   11bbd:	int3   
   11bbe:	int3   
   11bbf:	int3   
   11bc0:	int3   
   11bc1:	int3   
   11bc2:	test   BYTE PTR ds:0x7f9dc,0x1
   11bc9:	jne    0x11be1
   11bcb:	or     DWORD PTR ds:0x7f9dc,0x1
   11bd2:	push   0x1e3b4
   11bd7:	call   0x115d6
   11bdc:	mov    ds:0x7f9d8,eax
   11be1:	mov    eax,ds:0x7f9d8
   11be6:	ret    
   11be7:	int3   
   11be8:	int3   
   11be9:	int3   
   11bea:	int3   
   11beb:	int3   
   11bec:	test   BYTE PTR ds:0x7f9e4,0x1
   11bf3:	jne    0x11c0b
   11bf5:	or     DWORD PTR ds:0x7f9e4,0x1
   11bfc:	push   0x1e3da
   11c01:	call   0x115d6
   11c06:	mov    ds:0x7f9e0,eax
   11c0b:	mov    eax,ds:0x7f9e0
   11c10:	ret    
   11c11:	int3   
   11c12:	int3   
   11c13:	int3   
   11c14:	int3   
   11c15:	int3   
   11c16:	test   BYTE PTR ds:0x7f9ec,0x1
   11c1d:	jne    0x11c35
   11c1f:	or     DWORD PTR ds:0x7f9ec,0x1
   11c26:	push   0x1e404
   11c2b:	call   0x115d6
   11c30:	mov    ds:0x7f9e8,eax
   11c35:	mov    eax,ds:0x7f9e8
   11c3a:	ret    
   11c3b:	int3   
   11c3c:	int3   
   11c3d:	int3   
   11c3e:	int3   
   11c3f:	int3   
   11c40:	test   BYTE PTR ds:0x7f9f4,0x1
   11c47:	jne    0x11c5f
   11c49:	or     DWORD PTR ds:0x7f9f4,0x1
   11c50:	push   0x1e428
   11c55:	call   0x115d6
   11c5a:	mov    ds:0x7f9f0,eax
   11c5f:	mov    eax,ds:0x7f9f0
   11c64:	ret    
   11c65:	int3   
   11c66:	int3   
   11c67:	int3   
   11c68:	int3   
   11c69:	int3   
   11c6a:	test   BYTE PTR ds:0x7f9fc,0x1
   11c71:	jne    0x11c89
   11c73:	or     DWORD PTR ds:0x7f9fc,0x1
   11c7a:	push   0x1e452
   11c7f:	call   0x115d6
   11c84:	mov    ds:0x7f9f8,eax
   11c89:	mov    eax,ds:0x7f9f8
   11c8e:	ret    
   11c8f:	int3   
   11c90:	int3   
   11c91:	int3   
   11c92:	int3   
   11c93:	int3   
   11c94:	test   BYTE PTR ds:0x7fa04,0x1
   11c9b:	jne    0x11cb3
   11c9d:	or     DWORD PTR ds:0x7fa04,0x1
   11ca4:	push   0x1e47c
   11ca9:	call   0x115d6
   11cae:	mov    ds:0x7fa00,eax
   11cb3:	mov    eax,ds:0x7fa00
   11cb8:	ret    
   11cb9:	int3   
   11cba:	int3   
   11cbb:	int3   
   11cbc:	int3   
   11cbd:	int3   
   11cbe:	test   BYTE PTR ds:0x7fa0c,0x1
   11cc5:	jne    0x11cdd
   11cc7:	or     DWORD PTR ds:0x7fa0c,0x1
   11cce:	push   0x1e4b2
   11cd3:	call   0x115d6
   11cd8:	mov    ds:0x7fa08,eax
   11cdd:	mov    eax,ds:0x7fa08
   11ce2:	ret    
   11ce3:	int3   
   11ce4:	int3   
   11ce5:	int3   
   11ce6:	int3   
   11ce7:	int3   
   11ce8:	call   0x11682
   11ced:	test   eax,eax
   11cef:	jne    0x11cf4
   11cf1:	xor    eax,eax
   11cf3:	ret    
   11cf4:	call   0x116ac
   11cf9:	test   eax,eax
   11cfb:	je     0x11cf1
   11cfd:	call   0x116d6
   11d02:	test   eax,eax
   11d04:	je     0x11cf1
   11d06:	call   0x11700
   11d0b:	test   eax,eax
   11d0d:	je     0x11cf1
   11d0f:	call   0x1172a
   11d14:	test   eax,eax
   11d16:	je     0x11cf1
   11d18:	call   0x11754
   11d1d:	test   eax,eax
   11d1f:	je     0x11cf1
   11d21:	call   0x1177e
   11d26:	test   eax,eax
   11d28:	je     0x11cf1
   11d2a:	call   0x117a8
   11d2f:	test   eax,eax
   11d31:	je     0x11cf1
   11d33:	call   0x117d2
   11d38:	test   eax,eax
   11d3a:	je     0x11cf1
   11d3c:	call   0x117fc
   11d41:	test   eax,eax
   11d43:	je     0x11cf1
   11d45:	call   0x11826
   11d4a:	test   eax,eax
   11d4c:	je     0x11cf1
   11d4e:	call   0x11850
   11d53:	test   eax,eax
   11d55:	je     0x11cf1
   11d57:	call   0x1187a
   11d5c:	test   eax,eax
   11d5e:	je     0x11cf1
   11d60:	call   0x118a4
   11d65:	test   eax,eax
   11d67:	je     0x11cf1
   11d69:	call   0x118ce
   11d6e:	test   eax,eax
   11d70:	je     0x11cf1
   11d76:	call   0x118f8
   11d7b:	test   eax,eax
   11d7d:	je     0x11cf1
   11d83:	call   0x11922
   11d88:	test   eax,eax
   11d8a:	je     0x11cf1
   11d90:	call   0x1194c
   11d95:	test   eax,eax
   11d97:	je     0x11cf1
   11d9d:	call   0x11976
   11da2:	test   eax,eax
   11da4:	je     0x11cf1
   11daa:	call   0x119a0
   11daf:	test   eax,eax
   11db1:	je     0x11cf1
   11db7:	call   0x119ca
   11dbc:	test   eax,eax
   11dbe:	je     0x11cf1
   11dc4:	call   0x119f4
   11dc9:	test   eax,eax
   11dcb:	je     0x11cf1
   11dd1:	call   0x11a1e
   11dd6:	test   eax,eax
   11dd8:	je     0x11cf1
   11dde:	call   0x11a48
   11de3:	test   eax,eax
   11de5:	je     0x11cf1
   11deb:	call   0x11a72
   11df0:	test   eax,eax
   11df2:	je     0x11cf1
   11df8:	call   0x11a9c
   11dfd:	test   eax,eax
   11dff:	je     0x11cf1
   11e05:	call   0x11ac6
   11e0a:	test   eax,eax
   11e0c:	je     0x11cf1
   11e12:	call   0x11af0
   11e17:	test   eax,eax
   11e19:	je     0x11cf1
   11e1f:	call   0x11b1a
   11e24:	test   eax,eax
   11e26:	je     0x11cf1
   11e2c:	call   0x11b44
   11e31:	test   eax,eax
   11e33:	je     0x11cf1
   11e39:	call   0x11b6e
   11e3e:	test   eax,eax
   11e40:	je     0x11cf1
   11e46:	call   0x11b98
   11e4b:	test   eax,eax
   11e4d:	je     0x11cf1
   11e53:	call   0x11bc2
   11e58:	test   eax,eax
   11e5a:	je     0x11cf1
   11e60:	call   0x11bec
   11e65:	test   eax,eax
   11e67:	je     0x11cf1
   11e6d:	call   0x11c16
   11e72:	test   eax,eax
   11e74:	je     0x11cf1
   11e7a:	call   0x11c40
   11e7f:	test   eax,eax
   11e81:	je     0x11cf1
   11e87:	call   0x11c6a
   11e8c:	test   eax,eax
   11e8e:	je     0x11cf1
   11e94:	call   0x11c94
   11e99:	test   eax,eax
   11e9b:	je     0x11cf1
   11ea1:	call   0x11cbe
   11ea6:	neg    eax
   11ea8:	sbb    eax,eax
   11eaa:	neg    eax
   11eac:	ret    
   11ead:	int3   
   11eae:	int3   
   11eaf:	int3   
   11eb0:	int3   
   11eb1:	int3   
   11eb2:	mov    edi,edi
   11eb4:	push   esi
   11eb5:	mov    esi,ecx
   11eb7:	push   DWORD PTR [esi+0x48]
   11eba:	call   0x1da14
   11ebf:	push   DWORD PTR [esi+0x24]
   11ec2:	call   0x1da14
   11ec7:	push   DWORD PTR [esi+0x1c]
   11eca:	call   0x1da14
   11ecf:	push   DWORD PTR [esi+0x14]
   11ed2:	call   0x1da14
   11ed7:	push   DWORD PTR [esi+0x8]
   11eda:	call   0x1da14
   11edf:	push   DWORD PTR [esi]
   11ee1:	call   0x1da14
   11ee6:	add    esp,0x18
   11ee9:	pop    esi
   11eea:	ret    
   11eeb:	int3   
   11eec:	int3   
   11eed:	int3   
   11eee:	int3   
   11eef:	int3   
   11ef0:	mov    edi,edi
   11ef2:	push   ebp
   11ef3:	mov    ebp,esp
   11ef5:	mov    eax,ecx
   11ef7:	mov    ecx,DWORD PTR [ebp+0x8]
   11efa:	mov    edx,DWORD PTR [ecx]
   11efc:	test   edx,edx
   11efe:	je     0x11f07
   11f00:	mov    DWORD PTR [eax],edx
   11f02:	inc    DWORD PTR [edx+0x4]
   11f05:	jmp    0x11f0a
   11f07:	and    DWORD PTR [eax],0x0
   11f0a:	pop    ebp
   11f0b:	ret    0x4
   11f0e:	int3   
   11f0f:	int3   
   11f10:	int3   
   11f11:	int3   
   11f12:	int3   
   11f13:	int3   
   11f14:	mov    edi,edi
   11f16:	push   ebp
   11f17:	mov    ebp,esp
   11f19:	push   esi
   11f1a:	mov    esi,ecx
   11f1c:	mov    ecx,DWORD PTR [esi]
   11f1e:	test   ecx,ecx
   11f20:	je     0x11f27
   11f22:	call   0x10a9a
   11f27:	mov    eax,DWORD PTR [ebp+0x8]
   11f2a:	mov    eax,DWORD PTR [eax]
   11f2c:	mov    DWORD PTR [esi],eax
   11f2e:	inc    DWORD PTR [eax+0x4]
   11f31:	mov    eax,esi
   11f33:	pop    esi
   11f34:	pop    ebp
   11f35:	ret    0x4
   11f38:	int3   
   11f39:	int3   
   11f3a:	int3   
   11f3b:	int3   
   11f3c:	int3   
   11f3d:	int3   
   11f3e:	mov    edi,edi
   11f40:	push   ebp
   11f41:	mov    ebp,esp
   11f43:	push   ebx
   11f44:	push   esi
   11f45:	push   edi
   11f46:	mov    edi,DWORD PTR [ebp+0xc]
   11f49:	mov    esi,ecx
   11f4b:	and    DWORD PTR [esi+0x4],0x0
   11f4f:	lea    eax,[edi+0x1]
   11f52:	push   eax
   11f53:	mov    DWORD PTR [esi+0x8],edi
   11f56:	call   0x10a66
   11f5b:	push   edi
   11f5c:	push   DWORD PTR [ebp+0x8]
   11f5f:	mov    ebx,eax
   11f61:	push   ebx
   11f62:	call   0x1da96
   11f67:	add    esp,0x10
   11f6a:	inc    DWORD PTR [esi+0x4]
   11f6d:	pop    edi
   11f6e:	mov    DWORD PTR [esi],ebx
   11f70:	mov    eax,esi
   11f72:	pop    esi
   11f73:	pop    ebx
   11f74:	pop    ebp
   11f75:	ret    0x8
   11f78:	int3   
   11f79:	int3   
   11f7a:	int3   
   11f7b:	int3   
   11f7c:	int3   
   11f7d:	int3   
   11f7e:	mov    edi,edi
   11f80:	push   ebp
   11f81:	mov    ebp,esp
   11f83:	push   ecx
   11f84:	push   edi
   11f85:	lea    eax,[ebp-0x4]
   11f88:	push   eax
   11f89:	xor    edi,edi
   11f8b:	push   edi
   11f8c:	push   edi
   11f8d:	push   0x1b
   11f8f:	push   DWORD PTR [ebp+0x8]
   11f92:	call   0x11754
   11f97:	call   eax
   11f99:	cmp    eax,0xc0000004
   11f9e:	jne    0x12006
   11fa0:	mov    ecx,DWORD PTR [ebp-0x4]
   11fa3:	push   ebx
   11fa4:	mov    ebx,DWORD PTR [ebp+0xc]
   11fa7:	movzx  edx,WORD PTR [ebx+0x2]
   11fab:	lea    eax,[ecx-0x8]
   11fae:	cmp    edx,eax
   11fb0:	jae    0x11fbc
   11fb2:	mov    WORD PTR [ebx],ax
   11fb5:	mov    eax,0x80000005
   11fba:	jmp    0x12005
   11fbc:	push   esi
   11fbd:	push   0x20736649
   11fc2:	push   ecx
   11fc3:	push   edi
   11fc4:	call   DWORD PTR ds:0x1ee2c
   11fca:	mov    esi,eax
   11fcc:	cmp    esi,edi
   11fce:	jne    0x11fd7
   11fd0:	mov    eax,0xc000009a
   11fd5:	jmp    0x12004
   11fd7:	lea    eax,[ebp-0x4]
   11fda:	push   eax
   11fdb:	push   DWORD PTR [ebp-0x4]
   11fde:	push   esi
   11fdf:	push   0x1b
   11fe1:	push   DWORD PTR [ebp+0x8]
   11fe4:	call   0x11754
   11fe9:	call   eax
   11feb:	mov    edi,eax
   11fed:	test   edi,edi
   11fef:	jl     0x11ff9
   11ff1:	push   esi
   11ff2:	push   ebx
   11ff3:	call   DWORD PTR ds:0x1ee34
   11ff9:	push   0x0
   11ffb:	push   esi
   11ffc:	call   DWORD PTR ds:0x1ee1c
   12002:	mov    eax,edi
   12004:	pop    esi
   12005:	pop    ebx
   12006:	pop    edi
   12007:	leave  
   12008:	ret    0x8
   1200b:	int3   
   1200c:	int3   
   1200d:	int3   
   1200e:	int3   
   1200f:	int3   
   12010:	mov    edi,edi
   12012:	push   ebp
   12013:	mov    ebp,esp
   12015:	sub    esp,0x18
   12018:	push   0x0
   1201a:	push   0x18
   1201c:	lea    eax,[ebp-0x18]
   1201f:	push   eax
   12020:	push   0x0
   12022:	push   DWORD PTR [ebp+0x8]
   12025:	call   0x11754
   1202a:	call   eax
   1202c:	test   eax,eax
   1202e:	jl     0x12035
   12030:	mov    eax,DWORD PTR [ebp-0x8]
   12033:	jmp    0x12037
   12035:	xor    eax,eax
   12037:	leave  
   12038:	ret    0x4
   1203b:	int3   
   1203c:	int3   
   1203d:	int3   
   1203e:	int3   
   1203f:	int3   
   12040:	mov    edi,edi
   12042:	push   ebp
   12043:	mov    ebp,esp
   12045:	mov    ecx,DWORD PTR ds:0x7efac
   1204b:	sub    esp,0x38
   1204e:	push   esi
   1204f:	xor    esi,esi
   12051:	cmp    ecx,esi
   12053:	jne    0x1205d
   12055:	or     eax,0xffffffff
   12058:	jmp    0x12138
   1205d:	push   edi
   1205e:	xor    eax,eax
   12060:	mov    DWORD PTR [ebp-0x20],esi
   12063:	lea    edi,[ebp-0x1c]
   12066:	stos   DWORD PTR es:[edi],eax
   12067:	lea    eax,[ebp-0x18]
   1206a:	push   eax
   1206b:	lea    eax,[ebp-0x38]
   1206e:	push   eax
   1206f:	push   0x400
   12074:	lea    eax,[ebp-0x10]
   12077:	push   eax
   12078:	mov    DWORD PTR [ebp-0x4],esi
   1207b:	mov    DWORD PTR [ebp-0x38],0x18
   12082:	mov    DWORD PTR [ebp-0x34],esi
   12085:	mov    DWORD PTR [ebp-0x2c],esi
   12088:	mov    DWORD PTR [ebp-0x30],esi
   1208b:	mov    DWORD PTR [ebp-0x28],esi
   1208e:	mov    DWORD PTR [ebp-0x24],esi
   12091:	mov    DWORD PTR [ebp-0x18],ecx
   12094:	mov    DWORD PTR [ebp-0x14],esi
   12097:	call   0x11682
   1209c:	call   eax
   1209e:	mov    edi,eax
   120a0:	cmp    edi,esi
   120a2:	jl     0x12135
   120a8:	push   ebx
   120a9:	lea    eax,[ebp-0xc]
   120ac:	push   eax
   120ad:	push   0x8
   120af:	push   DWORD PTR [ebp-0x10]
   120b2:	call   0x118ce
   120b7:	call   eax
   120b9:	mov    ebx,DWORD PTR ds:0x1ee60
   120bf:	mov    edi,eax
   120c1:	cmp    edi,esi
   120c3:	jl     0x1212f
   120c5:	lea    eax,[ebp-0x4]
   120c8:	push   eax
   120c9:	push   0x1
   120cb:	push   esi
   120cc:	push   esi
   120cd:	push   0x1
   120cf:	push   DWORD PTR [ebp-0xc]
   120d2:	call   0x116d6
   120d7:	call   eax
   120d9:	mov    edi,eax
   120db:	cmp    edi,esi
   120dd:	jl     0x1212a
   120df:	mov    eax,DWORD PTR [ebp+0x8]
   120e2:	mov    DWORD PTR [ebp-0x18],eax
   120e5:	lea    eax,[ebp-0x18]
   120e8:	push   eax
   120e9:	lea    eax,[ebp-0x38]
   120ec:	push   eax
   120ed:	push   0x200
   120f2:	lea    eax,[ebp-0x8]
   120f5:	push   eax
   120f6:	call   0x11682
   120fb:	call   eax
   120fd:	mov    edi,eax
   120ff:	cmp    edi,esi
   12101:	jl     0x12125
   12103:	mov    eax,DWORD PTR [ebp-0x4]
   12106:	push   0x8
   12108:	mov    DWORD PTR [ebp-0x20],eax
   1210b:	lea    eax,[ebp-0x20]
   1210e:	push   eax
   1210f:	push   0x9
   12111:	push   DWORD PTR [ebp-0x8]
   12114:	mov    DWORD PTR [ebp-0x1c],esi
   12117:	call   0x118f8
   1211c:	call   eax
   1211e:	push   DWORD PTR [ebp-0x8]
   12121:	mov    edi,eax
   12123:	call   ebx
   12125:	push   DWORD PTR [ebp-0x4]
   12128:	call   ebx
   1212a:	push   DWORD PTR [ebp-0xc]
   1212d:	call   ebx
   1212f:	push   DWORD PTR [ebp-0x10]
   12132:	call   ebx
   12134:	pop    ebx
   12135:	mov    eax,edi
   12137:	pop    edi
   12138:	pop    esi
   12139:	leave  
   1213a:	ret    0x4
   1213d:	int3   
   1213e:	int3   
   1213f:	int3   
   12140:	int3   
   12141:	int3   
   12142:	mov    edi,edi
   12144:	push   ebp
   12145:	mov    ebp,esp
   12147:	sub    esp,0x43c
   1214d:	mov    eax,ds:0x7e528
   12152:	xor    eax,ebp
   12154:	mov    DWORD PTR [ebp-0x4],eax
   12157:	mov    eax,DWORD PTR [ebp+0xc]
   1215a:	push   ebx
   1215b:	push   esi
   1215c:	mov    esi,DWORD PTR [ebp+0x8]
   1215f:	push   edi
   12160:	xor    ebx,ebx
   12162:	push   0x3ff
   12167:	mov    DWORD PTR [ebp-0x418],eax
   1216d:	lea    eax,[ebp-0x403]
   12173:	push   ebx
   12174:	push   eax
   12175:	mov    DWORD PTR [ebp-0x424],esi
   1217b:	mov    BYTE PTR [ebp-0x404],bl
   12181:	call   0x1daae
   12186:	add    esp,0xc
   12189:	lea    eax,[ebp-0x410]
   1218f:	push   eax
   12190:	push   0x400
   12195:	lea    eax,[ebp-0x404]
   1219b:	push   eax
   1219c:	push   ebx
   1219d:	push   ebx
   1219e:	push   esi
   1219f:	jmp    0x1234e
   121a4:	cmp    eax,ebx
   121a6:	jl     0x12370
   121ac:	mov    eax,DWORD PTR [ebp-0x418]
   121b2:	lea    edx,[eax+0x2]
   121b5:	mov    cx,WORD PTR [eax]
   121b8:	inc    eax
   121b9:	inc    eax
   121ba:	cmp    cx,bx
   121bd:	jne    0x121b5
   121bf:	mov    ecx,DWORD PTR [ebp-0x3f8]
   121c5:	sub    eax,edx
   121c7:	shr    ecx,1
   121c9:	sar    eax,1
   121cb:	lea    esi,[ecx+eax*1+0x2]
   121cf:	xor    ecx,ecx
   121d1:	push   0x2
   121d3:	pop    edx
   121d4:	mov    eax,esi
   121d6:	mul    edx
   121d8:	seto   cl
   121db:	neg    ecx
   121dd:	or     ecx,eax
   121df:	push   ecx
   121e0:	call   0x10a66
   121e5:	mov    edi,eax
   121e7:	lea    eax,[esi+esi*1]
   121ea:	push   eax
   121eb:	push   ebx
   121ec:	push   edi
   121ed:	mov    DWORD PTR [ebp-0x40c],edi
   121f3:	call   0x1daae
   121f8:	mov    eax,DWORD PTR [ebp-0x418]
   121fe:	add    esp,0x10
   12201:	mov    ecx,eax
   12203:	mov    dx,WORD PTR [eax]
   12206:	inc    eax
   12207:	inc    eax
   12208:	cmp    dx,bx
   1220b:	jne    0x12203
   1220d:	sub    eax,ecx
   1220f:	dec    edi
   12210:	mov    esi,ecx
   12212:	dec    edi
   12213:	mov    cx,WORD PTR [edi+0x2]
   12217:	inc    edi
   12218:	inc    edi
   12219:	cmp    cx,bx
   1221c:	jne    0x12213
   1221e:	mov    ecx,eax
   12220:	shr    ecx,0x2
   12223:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   12225:	mov    ecx,eax
   12227:	and    ecx,0x3
   1222a:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1222c:	mov    edi,DWORD PTR [ebp-0x40c]
   12232:	dec    edi
   12233:	dec    edi
   12234:	mov    ax,WORD PTR [edi+0x2]
   12238:	inc    edi
   12239:	inc    edi
   1223a:	cmp    ax,bx
   1223d:	jne    0x12234
   1223f:	mov    esi,0x1de4a
   12244:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   12245:	mov    eax,DWORD PTR [ebp-0x3f8]
   1224b:	shr    eax,1
   1224d:	push   eax
   1224e:	lea    eax,[ebp-0x3f4]
   12254:	push   eax
   12255:	push   DWORD PTR [ebp-0x40c]
   1225b:	call   0x1daa2
   12260:	mov    esi,DWORD PTR [ebp-0x40c]
   12266:	mov    eax,esi
   12268:	add    esp,0xc
   1226b:	mov    DWORD PTR [ebp-0x41c],esi
   12271:	lea    edx,[eax+0x2]
   12274:	mov    cx,WORD PTR [eax]
   12277:	inc    eax
   12278:	inc    eax
   12279:	cmp    cx,bx
   1227c:	jne    0x12274
   1227e:	sub    eax,edx
   12280:	sar    eax,1
   12282:	add    eax,eax
   12284:	mov    WORD PTR [ebp-0x41e],ax
   1228b:	mov    WORD PTR [ebp-0x420],ax
   12292:	lea    eax,[ebp-0x420]
   12298:	mov    DWORD PTR [ebp-0x434],eax
   1229e:	lea    eax,[ebp-0x43c]
   122a4:	push   eax
   122a5:	push   0xf003f
   122aa:	lea    eax,[ebp-0x414]
   122b0:	push   eax
   122b1:	mov    DWORD PTR [ebp-0x43c],0x18
   122bb:	mov    DWORD PTR [ebp-0x438],ebx
   122c1:	mov    DWORD PTR [ebp-0x430],0x40
   122cb:	mov    DWORD PTR [ebp-0x42c],ebx
   122d1:	mov    DWORD PTR [ebp-0x428],ebx
   122d7:	call   0x117a8
   122dc:	call   eax
   122de:	push   esi
   122df:	test   eax,eax
   122e1:	jl     0x1236a
   122e7:	push   DWORD PTR [ebp-0x414]
   122ed:	call   0x12142
   122f2:	push   esi
   122f3:	mov    BYTE PTR [ebp-0x405],al
   122f9:	call   0x1da14
   122fe:	pop    ecx
   122ff:	push   DWORD PTR [ebp-0x414]
   12305:	call   0x117d2
   1230a:	call   eax
   1230c:	test   eax,eax
   1230e:	jl     0x12370
   12310:	cmp    BYTE PTR [ebp-0x405],bl
   12316:	je     0x12370
   12318:	push   0x3ff
   1231d:	lea    eax,[ebp-0x403]
   12323:	push   ebx
   12324:	push   eax
   12325:	mov    BYTE PTR [ebp-0x404],bl
   1232b:	call   0x1daae
   12330:	add    esp,0xc
   12333:	lea    eax,[ebp-0x410]
   12339:	push   eax
   1233a:	push   0x400
   1233f:	lea    eax,[ebp-0x404]
   12345:	push   eax
   12346:	push   ebx
   12347:	push   ebx
   12348:	push   DWORD PTR [ebp-0x424]
   1234e:	mov    DWORD PTR [ebp-0x410],ebx
   12354:	call   0x11976
   12359:	call   eax
   1235b:	cmp    eax,0x8000001a
   12360:	jne    0x121a4
   12366:	mov    al,0x1
   12368:	jmp    0x12372
   1236a:	call   0x1da14
   1236f:	pop    ecx
   12370:	xor    al,al
   12372:	mov    ecx,DWORD PTR [ebp-0x4]
   12375:	pop    edi
   12376:	pop    esi
   12377:	xor    ecx,ebp
   12379:	pop    ebx
   1237a:	call   0x1da31
   1237f:	leave  
   12380:	ret    0x8
   12383:	int3   
   12384:	int3   
   12385:	int3   
   12386:	int3   
   12387:	int3   
   12388:	mov    eax,ds:0x7ef2c
   1238d:	test   eax,eax
   1238f:	je     0x123a0
   12391:	push   eax
   12392:	call   0x119f4
   12397:	call   eax
   12399:	and    DWORD PTR ds:0x7ef2c,0x0
   123a0:	ret    
   123a1:	int3   
   123a2:	int3   
   123a3:	int3   
   123a4:	int3   
   123a5:	int3   
   123a6:	push   0x28
   123a8:	push   0x7dfe8
   123ad:	call   0x1dad4
   123b2:	xor    eax,eax
   123b4:	mov    DWORD PTR [ebp-0x28],eax
   123b7:	mov    DWORD PTR [ebp-0x2c],eax
   123ba:	mov    ebx,DWORD PTR [ebp+0x8]
   123bd:	cmp    ebx,eax
   123bf:	jne    0x123c8
   123c1:	xor    eax,eax
   123c3:	jmp    0x124a5
   123c8:	mov    DWORD PTR [ebp-0x4],eax
   123cb:	lea    ecx,[ebp-0x2c]
   123ce:	push   ecx
   123cf:	push   eax
   123d0:	push   0x1
   123d2:	push   ebx
   123d3:	call   0x118a4
   123d8:	call   eax
   123da:	mov    edx,eax
   123dc:	sub    edx,ebx
   123de:	mov    DWORD PTR [ebp-0x38],edx
   123e1:	mov    esi,DWORD PTR [eax+0x1c]
   123e4:	add    esi,ebx
   123e6:	mov    edi,DWORD PTR [eax+0x24]
   123e9:	add    edi,ebx
   123eb:	mov    ecx,DWORD PTR [eax+0x20]
   123ee:	add    ecx,ebx
   123f0:	and    DWORD PTR [ebp-0x20],0x0
   123f4:	mov    ebx,DWORD PTR [ebp-0x20]
   123f7:	cmp    ebx,DWORD PTR [eax+0x18]
   123fa:	jae    0x1248d
   12400:	movsx  ebx,WORD PTR [edi+ebx*2]
   12404:	cmp    ebx,DWORD PTR [eax+0x14]
   12407:	jae    0x12481
   12409:	lea    ebx,[esi+ebx*4]
   1240c:	mov    DWORD PTR [ebp-0x34],ebx
   1240f:	cmp    DWORD PTR [ebx],edx
   12411:	jb     0x1241f
   12413:	mov    ebx,DWORD PTR [ebp-0x2c]
   12416:	add    edx,ebx
   12418:	mov    ebx,DWORD PTR [ebp-0x34]
   1241b:	cmp    DWORD PTR [ebx],edx
   1241d:	jb     0x12476
   1241f:	mov    edx,DWORD PTR [ebp+0xc]
   12422:	mov    DWORD PTR [ebp-0x30],edx
   12425:	mov    edx,DWORD PTR [ebp-0x20]
   12428:	mov    edx,DWORD PTR [ecx+edx*4]
   1242b:	add    edx,DWORD PTR [ebp+0x8]
   1242e:	mov    DWORD PTR [ebp-0x24],edx
   12431:	mov    dl,BYTE PTR [edx]
   12433:	mov    ebx,DWORD PTR [ebp-0x30]
   12436:	cmp    dl,BYTE PTR [ebx]
   12438:	jne    0x12463
   1243a:	test   dl,dl
   1243c:	je     0x1245f
   1243e:	mov    edx,DWORD PTR [ebp-0x24]
   12441:	mov    dl,BYTE PTR [edx+0x1]
   12444:	mov    BYTE PTR [ebp-0x19],dl
   12447:	cmp    dl,BYTE PTR [ebx+0x1]
   1244a:	jne    0x12463
   1244c:	mov    edx,DWORD PTR [ebp-0x24]
   1244f:	inc    edx
   12450:	inc    edx
   12451:	mov    DWORD PTR [ebp-0x24],edx
   12454:	inc    ebx
   12455:	inc    ebx
   12456:	mov    DWORD PTR [ebp-0x30],ebx
   12459:	cmp    BYTE PTR [ebp-0x19],0x0
   1245d:	jne    0x12431
   1245f:	xor    edx,edx
   12461:	jmp    0x12468
   12463:	sbb    edx,edx
   12465:	sbb    edx,0xffffffff
   12468:	test   edx,edx
   1246a:	jne    0x12476
   1246c:	mov    eax,DWORD PTR [ebp-0x34]
   1246f:	mov    eax,DWORD PTR [eax]
   12471:	add    eax,DWORD PTR [ebp+0x8]
   12474:	jmp    0x1249b
   12476:	inc    DWORD PTR [ebp-0x20]
   12479:	mov    edx,DWORD PTR [ebp-0x38]
   1247c:	jmp    0x123f4
   12481:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   12488:	jmp    0x123c1
   1248d:	mov    eax,DWORD PTR [ebp-0x28]
   12490:	jmp    0x1249e
   12492:	xor    eax,eax
   12494:	inc    eax
   12495:	ret    
   12496:	mov    esp,DWORD PTR [ebp-0x18]
   12499:	xor    eax,eax
   1249b:	mov    DWORD PTR [ebp-0x28],eax
   1249e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   124a5:	call   0x1db19
   124aa:	ret    0x8
   124ad:	int3   
   124ae:	int3   
   124af:	int3   
   124b0:	int3   
   124b1:	int3   
   124b2:	mov    edi,edi
   124b4:	push   ebp
   124b5:	mov    ebp,esp
   124b7:	sub    esp,0x48
   124ba:	mov    eax,DWORD PTR [ebp+0xc]
   124bd:	mov    eax,DWORD PTR [eax]
   124bf:	push   edi
   124c0:	mov    DWORD PTR [ebp-0x30],eax
   124c3:	lea    eax,[ebp-0x30]
   124c6:	push   eax
   124c7:	lea    eax,[ebp-0x48]
   124ca:	push   eax
   124cb:	xor    edi,edi
   124cd:	push   0x1f0fff
   124d2:	lea    eax,[ebp-0x10]
   124d5:	push   eax
   124d6:	mov    DWORD PTR [ebp-0x48],0x18
   124dd:	mov    DWORD PTR [ebp-0x44],edi
   124e0:	mov    DWORD PTR [ebp-0x3c],0x200
   124e7:	mov    DWORD PTR [ebp-0x40],edi
   124ea:	mov    DWORD PTR [ebp-0x38],edi
   124ed:	mov    DWORD PTR [ebp-0x34],edi
   124f0:	mov    DWORD PTR [ebp-0x2c],edi
   124f3:	mov    DWORD PTR [ebp-0x10],edi
   124f6:	call   0x11682
   124fb:	call   eax
   124fd:	test   eax,eax
   124ff:	jl     0x12853
   12505:	push   ebx
   12506:	push   esi
   12507:	mov    esi,DWORD PTR ds:0x1ee40
   1250d:	push   0x40
   1250f:	mov    ebx,0x1000
   12514:	push   ebx
   12515:	lea    eax,[ebp-0x14]
   12518:	push   eax
   12519:	push   edi
   1251a:	lea    eax,[ebp-0xc]
   1251d:	push   eax
   1251e:	push   DWORD PTR [ebp-0x10]
   12521:	mov    DWORD PTR [ebp-0xc],edi
   12524:	mov    DWORD PTR [ebp-0x14],0x400
   1252b:	call   esi
   1252d:	test   eax,eax
   1252f:	jl     0x1253a
   12531:	mov    eax,DWORD PTR [ebp-0xc]
   12534:	mov    ecx,DWORD PTR [ebp+0xc]
   12537:	mov    DWORD PTR [ecx+0x8],eax
   1253a:	push   0x4
   1253c:	push   ebx
   1253d:	lea    eax,[ebp-0x14]
   12540:	push   eax
   12541:	push   edi
   12542:	lea    eax,[ebp-0x18]
   12545:	push   eax
   12546:	push   DWORD PTR [ebp-0x10]
   12549:	mov    DWORD PTR [ebp-0x18],edi
   1254c:	mov    DWORD PTR [ebp-0x14],0x400
   12553:	call   esi
   12555:	test   eax,eax
   12557:	jl     0x12562
   12559:	mov    eax,DWORD PTR [ebp-0x18]
   1255c:	mov    ecx,DWORD PTR [ebp+0xc]
   1255f:	mov    DWORD PTR [ecx+0xc],eax
   12562:	lea    eax,[ebp-0x24]
   12565:	push   eax
   12566:	push   DWORD PTR [ebp-0x30]
   12569:	call   0x11c94
   1256e:	call   eax
   12570:	test   eax,eax
   12572:	jl     0x12851
   12578:	push   DWORD PTR [ebp-0x24]
   1257b:	call   0x11a48
   12580:	call   eax
   12582:	mov    eax,DWORD PTR [ebp-0xc]
   12585:	mov    DWORD PTR [ebp-0x20],edi
   12588:	cmp    eax,edi
   1258a:	je     0x12837
   12590:	mov    esi,DWORD PTR [ebp-0x18]
   12593:	cmp    esi,edi
   12595:	je     0x127a4
   1259b:	push   0x214
   125a0:	push   edi
   125a1:	push   esi
   125a2:	mov    DWORD PTR [ebp-0x4],eax
   125a5:	call   0x1daae
   125aa:	mov    eax,DWORD PTR [ebp-0x4]
   125ad:	add    esp,0xc
   125b0:	push   0x60
   125b2:	lea    ebx,[esi+0xc]
   125b5:	push   eax
   125b6:	mov    DWORD PTR [ebx],edi
   125b8:	mov    DWORD PTR [esi],edi
   125ba:	mov    DWORD PTR [ebp-0x20],eax
   125bd:	call   0x197e4
   125c2:	push   0x68
   125c4:	push   eax
   125c5:	call   0x197e4
   125ca:	push   ebx
   125cb:	push   eax
   125cc:	call   0x197fc
   125d1:	push   0x6a
   125d3:	pop    ebx
   125d4:	push   ebx
   125d5:	push   eax
   125d6:	call   0x197e4
   125db:	push   edi
   125dc:	push   eax
   125dd:	call   0x197e4
   125e2:	push   ebx
   125e3:	push   eax
   125e4:	call   0x197e4
   125e9:	push   edi
   125ea:	push   eax
   125eb:	call   0x197e4
   125f0:	push   0x68
   125f2:	push   eax
   125f3:	call   0x197e4
   125f8:	push   edi
   125f9:	push   eax
   125fa:	mov    DWORD PTR [ebp-0x28],eax
   125fd:	call   0x197fc
   12602:	push   ebx
   12603:	push   eax
   12604:	call   0x197e4
   12609:	push   edi
   1260a:	push   eax
   1260b:	call   0x197e4
   12610:	push   ebx
   12611:	push   eax
   12612:	call   0x197e4
   12617:	push   edi
   12618:	push   eax
   12619:	call   0x197e4
   1261e:	push   0xb8
   12623:	push   eax
   12624:	call   0x197e4
   12629:	push   DWORD PTR ds:0x7ef78
   1262f:	push   eax
   12630:	call   0x197fc
   12635:	mov    ebx,0xc00b
   1263a:	push   ebx
   1263b:	push   eax
   1263c:	call   0x19816
   12641:	push   0x74
   12643:	push   eax
   12644:	call   0x197e4
   12649:	push   0x9
   1264b:	push   eax
   1264c:	call   0x197e4
   12651:	mov    edi,0xd0ff
   12656:	push   edi
   12657:	push   eax
   12658:	call   0x19816
   1265d:	push   0xb9
   12662:	push   eax
   12663:	call   0x197e4
   12668:	lea    ecx,[esi+0x10]
   1266b:	push   ecx
   1266c:	push   eax
   1266d:	call   0x197fc
   12672:	push   0x189
   12677:	push   eax
   12678:	call   0x19816
   1267d:	push   0x61
   1267f:	push   eax
   12680:	call   0x197e4
   12685:	and    DWORD PTR [ebp-0x8],0x0
   12689:	mov    DWORD PTR [ebp-0x4],eax
   1268c:	mov    eax,DWORD PTR [ebp+0x8]
   1268f:	mov    DWORD PTR [ebp-0x1c],eax
   12692:	push   0x0
   12694:	push   DWORD PTR [ebp-0x1c]
   12697:	push   DWORD PTR [ebp-0x4]
   1269a:	call   0x19f9e
   1269f:	mov    ecx,eax
   126a1:	sub    ecx,DWORD PTR [ebp-0x1c]
   126a4:	mov    DWORD PTR [ebp-0x1c],eax
   126a7:	add    DWORD PTR [ebp-0x8],ecx
   126aa:	add    DWORD PTR [ebp-0x4],ecx
   126ad:	cmp    DWORD PTR [ebp-0x8],0x5
   126b1:	jb     0x12692
   126b3:	mov    ecx,DWORD PTR [ebp+0x8]
   126b6:	push   DWORD PTR [ebp-0x4]
   126b9:	mov    eax,DWORD PTR [ebp-0x8]
   126bc:	add    eax,ecx
   126be:	push   eax
   126bf:	call   0x1985a
   126c4:	push   eax
   126c5:	push   DWORD PTR [ebp-0x28]
   126c8:	mov    DWORD PTR [ebp-0x4],eax
   126cb:	call   0x197fc
   126d0:	mov    eax,DWORD PTR [ebp-0x4]
   126d3:	push   0xeb
   126d8:	push   eax
   126d9:	mov    DWORD PTR [esi],eax
   126db:	call   0x197e4
   126e0:	push   0x0
   126e2:	push   eax
   126e3:	mov    DWORD PTR [esi+0x4],eax
   126e6:	call   0x197e4
   126eb:	push   0x68
   126ed:	push   eax
   126ee:	call   0x197e4
   126f3:	push   0x3e8
   126f8:	push   eax
   126f9:	call   0x197fc
   126fe:	push   0xb8
   12703:	push   eax
   12704:	call   0x197e4
   12709:	push   DWORD PTR ds:0x7ef7c
   1270f:	push   eax
   12710:	call   0x197fc
   12715:	push   ebx
   12716:	push   eax
   12717:	call   0x19816
   1271c:	push   0x74
   1271e:	push   eax
   1271f:	call   0x197e4
   12724:	push   0x2
   12726:	push   eax
   12727:	call   0x197e4
   1272c:	push   edi
   1272d:	push   eax
   1272e:	call   0x19816
   12733:	push   eax
   12734:	push   DWORD PTR [esi]
   12736:	call   0x1985a
   1273b:	mov    cl,al
   1273d:	sub    cl,BYTE PTR [esi+0x4]
   12740:	push   0x68
   12742:	dec    cl
   12744:	push   eax
   12745:	mov    BYTE PTR [esi+0x8],cl
   12748:	call   0x197e4
   1274d:	add    esi,0x14
   12750:	push   esi
   12751:	push   eax
   12752:	call   0x197fc
   12757:	push   0xb8
   1275c:	push   eax
   1275d:	call   0x197e4
   12762:	push   DWORD PTR ds:0x7ef70
   12768:	push   eax
   12769:	call   0x197fc
   1276e:	push   ebx
   1276f:	push   eax
   12770:	call   0x19816
   12775:	push   0x74
   12777:	push   eax
   12778:	call   0x197e4
   1277d:	push   0x2
   1277f:	push   eax
   12780:	call   0x197e4
   12785:	push   edi
   12786:	push   eax
   12787:	call   0x19816
   1278c:	push   0xc2
   12791:	push   eax
   12792:	call   0x197e4
   12797:	push   0x4
   12799:	push   eax
   1279a:	call   0x19816
   1279f:	mov    eax,DWORD PTR [ebp-0xc]
   127a2:	xor    edi,edi
   127a4:	cmp    eax,edi
   127a6:	je     0x12837
   127ac:	add    eax,0x400
   127b1:	lea    esi,[eax-0xc]
   127b4:	lea    ecx,[eax-0x8]
   127b7:	push   esi
   127b8:	lea    ebx,[eax-0x4]
   127bb:	lea    edx,[eax-0x10]
   127be:	push   0x40
   127c0:	add    eax,0xffffffe8
   127c3:	push   ecx
   127c4:	mov    DWORD PTR [ebp-0x1c],eax
   127c7:	mov    eax,DWORD PTR [ebp+0x8]
   127ca:	mov    DWORD PTR [ebx],eax
   127cc:	push   ebx
   127cd:	mov    DWORD PTR [ecx],0x5
   127d3:	push   0xffffffff
   127d5:	mov    DWORD PTR [ebp-0x8],ecx
   127d8:	mov    DWORD PTR [ebp-0x28],edx
   127db:	mov    DWORD PTR [esi],edi
   127dd:	call   DWORD PTR ds:0x7eeec
   127e3:	test   eax,eax
   127e5:	jl     0x12837
   127e7:	mov    eax,DWORD PTR [ebp-0x20]
   127ea:	sub    eax,DWORD PTR [ebp+0x8]
   127ed:	sub    eax,0x5
   127f0:	push   eax
   127f1:	mov    eax,DWORD PTR [ebp-0x1c]
   127f4:	inc    eax
   127f5:	push   eax
   127f6:	call   0x197fc
   127fb:	push   0xe9
   12800:	push   DWORD PTR [ebp-0x1c]
   12803:	call   0x197e4
   12808:	mov    eax,DWORD PTR [ebp-0x28]
   1280b:	push   eax
   1280c:	push   0x5
   1280e:	push   DWORD PTR [ebp-0x1c]
   12811:	mov    DWORD PTR [eax],edi
   12813:	push   DWORD PTR [ebp+0x8]
   12816:	push   0xffffffff
   12818:	call   DWORD PTR ds:0x7eee0
   1281e:	mov    eax,DWORD PTR [ebp+0xc]
   12821:	mov    BYTE PTR [eax+0x10],0x1
   12825:	lea    eax,[ebp-0x20]
   12828:	push   eax
   12829:	push   DWORD PTR [esi]
   1282b:	push   DWORD PTR [ebp-0x8]
   1282e:	push   ebx
   1282f:	push   0xffffffff
   12831:	call   DWORD PTR ds:0x7eeec
   12837:	call   0x11a1e
   1283c:	call   eax
   1283e:	call   0x11c6a
   12843:	mov    ecx,DWORD PTR [ebp-0x24]
   12846:	call   eax
   12848:	push   DWORD PTR [ebp-0x10]
   1284b:	call   DWORD PTR ds:0x1ee60
   12851:	pop    esi
   12852:	pop    ebx
   12853:	pop    edi
   12854:	leave  
   12855:	ret    0x8
   12858:	int3   
   12859:	int3   
   1285a:	int3   
   1285b:	int3   
   1285c:	int3   
   1285d:	int3   
   1285e:	mov    edi,edi
   12860:	push   ebp
   12861:	mov    ebp,esp
   12863:	sub    esp,0x18
   12866:	and    DWORD PTR [ebp-0x18],0x0
   1286a:	push   edi
   1286b:	xor    eax,eax
   1286d:	lea    edi,[ebp-0x14]
   12870:	stos   DWORD PTR es:[edi],eax
   12871:	stos   DWORD PTR es:[edi],eax
   12872:	stos   DWORD PTR es:[edi],eax
   12873:	stos   DWORD PTR es:[edi],eax
   12874:	lea    eax,[ebp-0x18]
   12877:	push   eax
   12878:	push   0x1
   1287a:	call   0x10e86
   1287f:	pop    edi
   12880:	test   al,al
   12882:	je     0x128da
   12884:	cmp    DWORD PTR [ebp-0x18],0x0
   12888:	je     0x128da
   1288a:	lea    eax,[ebp-0x4]
   1288d:	push   eax
   1288e:	push   DWORD PTR [ebp-0x18]
   12891:	call   0x11c94
   12896:	call   eax
   12898:	test   eax,eax
   1289a:	jl     0x128da
   1289c:	push   esi
   1289d:	push   DWORD PTR [ebp-0x4]
   128a0:	call   0x11a48
   128a5:	call   eax
   128a7:	mov    esi,DWORD PTR [ebp-0xc]
   128aa:	mov    eax,DWORD PTR [ebp+0x8]
   128ad:	lea    edx,[esi+0x14]
   128b0:	sub    edx,eax
   128b2:	movzx  ecx,WORD PTR [eax]
   128b5:	mov    WORD PTR [edx+eax*1],cx
   128b9:	inc    eax
   128ba:	inc    eax
   128bb:	test   cx,cx
   128be:	jne    0x128b2
   128c0:	mov    eax,DWORD PTR [esi+0x4]
   128c3:	mov    cl,BYTE PTR [esi+0x8]
   128c6:	mov    BYTE PTR [eax],cl
   128c8:	call   0x11a1e
   128cd:	call   eax
   128cf:	call   0x11c6a
   128d4:	mov    ecx,DWORD PTR [ebp-0x4]
   128d7:	call   eax
   128d9:	pop    esi
   128da:	leave  
   128db:	ret    0x4
   128de:	int3   
   128df:	int3   
   128e0:	int3   
   128e1:	int3   
   128e2:	int3   
   128e3:	int3   
   128e4:	mov    edi,edi
   128e6:	push   ebp
   128e7:	mov    ebp,esp
   128e9:	push   ecx
   128ea:	and    DWORD PTR [ebp-0x4],0x0
   128ee:	push   ebx
   128ef:	push   esi
   128f0:	push   edi
   128f1:	mov    esi,0x1000
   128f6:	push   0x20736649
   128fb:	push   esi
   128fc:	push   0x0
   128fe:	call   DWORD PTR ds:0x1ee2c
   12904:	mov    edi,eax
   12906:	test   edi,edi
   12908:	je     0x1293c
   1290a:	lea    eax,[ebp-0x4]
   1290d:	push   eax
   1290e:	push   esi
   1290f:	push   edi
   12910:	push   DWORD PTR [ebp+0x8]
   12913:	call   0x1177e
   12918:	call   eax
   1291a:	mov    ebx,eax
   1291c:	cmp    ebx,0xc0000004
   12922:	jne    0x1292f
   12924:	push   0x0
   12926:	push   edi
   12927:	call   DWORD PTR ds:0x1ee1c
   1292d:	add    esi,esi
   1292f:	test   ebx,ebx
   12931:	jne    0x128f6
   12933:	mov    eax,edi
   12935:	pop    edi
   12936:	pop    esi
   12937:	pop    ebx
   12938:	leave  
   12939:	ret    0x4
   1293c:	xor    eax,eax
   1293e:	jmp    0x12935
   12940:	int3   
   12941:	int3   
   12942:	int3   
   12943:	int3   
   12944:	int3   
   12945:	int3   
   12946:	push   0x0
   12948:	push   0x7eefc
   1294d:	call   0x11c16
   12952:	call   eax
   12954:	push   0x100
   12959:	push   0x0
   1295b:	push   0x7e5c0
   12960:	call   0x1daae
   12965:	add    esp,0xc
   12968:	ret    
   12969:	int3   
   1296a:	int3   
   1296b:	int3   
   1296c:	int3   
   1296d:	int3   
   1296e:	mov    edi,edi
   12970:	push   ebp
   12971:	mov    ebp,esp
   12973:	push   esi
   12974:	push   DWORD PTR [ebp+0xc]
   12977:	mov    esi,ecx
   12979:	push   DWORD PTR [ebp+0x8]
   1297c:	call   0x110ae
   12981:	mov    eax,esi
   12983:	pop    esi
   12984:	pop    ebp
   12985:	ret    0x8
   12988:	int3   
   12989:	int3   
   1298a:	int3   
   1298b:	int3   
   1298c:	int3   
   1298d:	int3   
   1298e:	mov    edi,edi
   12990:	push   ebp
   12991:	mov    ebp,esp
   12993:	mov    eax,DWORD PTR [ebp+0x8]
   12996:	push   esi
   12997:	push   DWORD PTR [eax+0x4]
   1299a:	mov    esi,ecx
   1299c:	push   DWORD PTR [eax]
   1299e:	call   0x110ae
   129a3:	mov    eax,esi
   129a5:	pop    esi
   129a6:	pop    ebp
   129a7:	ret    0x4
   129aa:	int3   
   129ab:	int3   
   129ac:	int3   
   129ad:	int3   
   129ae:	int3   
   129af:	int3   
   129b0:	mov    edi,edi
   129b2:	push   ebp
   129b3:	mov    ebp,esp
   129b5:	push   ebx
   129b6:	push   esi
   129b7:	push   edi
   129b8:	mov    edi,DWORD PTR [ebp+0x8]
   129bb:	mov    eax,DWORD PTR [edi+0x4]
   129be:	mov    esi,ecx
   129c0:	mov    ebx,DWORD PTR [esi]
   129c2:	mov    DWORD PTR [esi+0x4],eax
   129c5:	inc    eax
   129c6:	push   eax
   129c7:	call   0x10a66
   129cc:	push   DWORD PTR [esi+0x4]
   129cf:	mov    DWORD PTR [esi],eax
   129d1:	push   DWORD PTR [edi]
   129d3:	push   eax
   129d4:	call   0x1da96
   129d9:	mov    eax,DWORD PTR [esi+0x4]
   129dc:	mov    ecx,DWORD PTR [esi]
   129de:	push   ebx
   129df:	mov    BYTE PTR [eax+ecx*1],0x0
   129e3:	call   0x1da14
   129e8:	add    esp,0x14
   129eb:	pop    edi
   129ec:	mov    eax,esi
   129ee:	pop    esi
   129ef:	pop    ebx
   129f0:	pop    ebp
   129f1:	ret    0x4
   129f4:	int3   
   129f5:	int3   
   129f6:	int3   
   129f7:	int3   
   129f8:	int3   
   129f9:	int3   
   129fa:	mov    edi,edi
   129fc:	push   esi
   129fd:	push   edi
   129fe:	push   0x20736649
   12a03:	push   0x20
   12a05:	push   0x0
   12a07:	mov    esi,ecx
   12a09:	call   DWORD PTR ds:0x1ee2c
   12a0f:	push   0x0
   12a11:	mov    edi,eax
   12a13:	push   0x1
   12a15:	mov    ecx,esi
   12a17:	mov    DWORD PTR [esi],edi
   12a19:	call   0x1110c
   12a1e:	mov    DWORD PTR [esi+0x8],eax
   12a21:	mov    DWORD PTR [esi+0xc],edx
   12a24:	test   edi,edi
   12a26:	jne    0x12a33
   12a28:	push   0xc000009a
   12a2d:	call   DWORD PTR ds:0x1ee14
   12a33:	pop    edi
   12a34:	mov    eax,esi
   12a36:	pop    esi
   12a37:	ret    
   12a38:	int3   
   12a39:	int3   
   12a3a:	int3   
   12a3b:	int3   
   12a3c:	int3   
   12a3d:	int3   
   12a3e:	mov    edi,edi
   12a40:	push   ebp
   12a41:	mov    ebp,esp
   12a43:	push   esi
   12a44:	push   edi
   12a45:	mov    edi,DWORD PTR [ebp+0x8]
   12a48:	push   edi
   12a49:	mov    esi,ecx
   12a4b:	call   0x129b0
   12a50:	lea    eax,[edi+0x8]
   12a53:	push   eax
   12a54:	lea    ecx,[esi+0x8]
   12a57:	call   0x129b0
   12a5c:	mov    eax,DWORD PTR [edi+0x10]
   12a5f:	mov    DWORD PTR [esi+0x10],eax
   12a62:	lea    eax,[edi+0x14]
   12a65:	push   eax
   12a66:	lea    ecx,[esi+0x14]
   12a69:	call   0x129b0
   12a6e:	lea    eax,[edi+0x1c]
   12a71:	push   eax
   12a72:	lea    ecx,[esi+0x1c]
   12a75:	call   0x129b0
   12a7a:	lea    eax,[edi+0x24]
   12a7d:	push   eax
   12a7e:	lea    ecx,[esi+0x24]
   12a81:	call   0x129b0
   12a86:	mov    eax,DWORD PTR [edi+0x2c]
   12a89:	mov    DWORD PTR [esi+0x2c],eax
   12a8c:	mov    eax,DWORD PTR [edi+0x30]
   12a8f:	mov    DWORD PTR [esi+0x30],eax
   12a92:	mov    eax,DWORD PTR [edi+0x38]
   12a95:	mov    DWORD PTR [esi+0x38],eax
   12a98:	mov    eax,DWORD PTR [edi+0x3c]
   12a9b:	mov    DWORD PTR [esi+0x3c],eax
   12a9e:	mov    eax,DWORD PTR [edi+0x40]
   12aa1:	mov    DWORD PTR [esi+0x40],eax
   12aa4:	mov    eax,DWORD PTR [edi+0x44]
   12aa7:	add    edi,0x48
   12aaa:	push   edi
   12aab:	lea    ecx,[esi+0x48]
   12aae:	mov    DWORD PTR [esi+0x44],eax
   12ab1:	call   0x129b0
   12ab6:	pop    edi
   12ab7:	mov    eax,esi
   12ab9:	pop    esi
   12aba:	pop    ebp
   12abb:	ret    0x4
   12abe:	int3   
   12abf:	int3   
   12ac0:	int3   
   12ac1:	int3   
   12ac2:	int3   
   12ac3:	int3   
   12ac4:	mov    edi,edi
   12ac6:	push   esi
   12ac7:	mov    esi,ecx
   12ac9:	lea    ecx,[esi+0x8]
   12acc:	call   0x11eb2
   12ad1:	push   DWORD PTR [esi]
   12ad3:	call   0x1da14
   12ad8:	pop    ecx
   12ad9:	pop    esi
   12ada:	ret    
   12adb:	int3   
   12adc:	int3   
   12add:	int3   
   12ade:	int3   
   12adf:	int3   
   12ae0:	mov    edi,edi
   12ae2:	push   ebp
   12ae3:	mov    ebp,esp
   12ae5:	push   esi
   12ae6:	push   DWORD PTR [ebp+0xc]
   12ae9:	mov    esi,ecx
   12aeb:	push   DWORD PTR [ebp+0x8]
   12aee:	call   0x11152
   12af3:	mov    eax,esi
   12af5:	pop    esi
   12af6:	pop    ebp
   12af7:	ret    0x8
   12afa:	int3   
   12afb:	int3   
   12afc:	int3   
   12afd:	int3   
   12afe:	int3   
   12aff:	int3   
   12b00:	mov    edi,edi
   12b02:	push   ebp
   12b03:	mov    ebp,esp
   12b05:	mov    eax,DWORD PTR [ebp+0x8]
   12b08:	push   esi
   12b09:	push   DWORD PTR [eax+0x4]
   12b0c:	mov    esi,ecx
   12b0e:	push   DWORD PTR [eax]
   12b10:	call   0x11152
   12b15:	mov    eax,esi
   12b17:	pop    esi
   12b18:	pop    ebp
   12b19:	ret    0x4
   12b1c:	int3   
   12b1d:	int3   
   12b1e:	int3   
   12b1f:	int3   
   12b20:	int3   
   12b21:	int3   
   12b22:	mov    edi,edi
   12b24:	push   ebp
   12b25:	mov    ebp,esp
   12b27:	push   ebx
   12b28:	push   esi
   12b29:	push   edi
   12b2a:	mov    edi,DWORD PTR [ebp+0x8]
   12b2d:	mov    eax,DWORD PTR [edi+0x4]
   12b30:	mov    esi,ecx
   12b32:	mov    ebx,DWORD PTR [esi]
   12b34:	mov    DWORD PTR [esi+0x4],eax
   12b37:	xor    ecx,ecx
   12b39:	push   0x2
   12b3b:	inc    eax
   12b3c:	pop    edx
   12b3d:	mul    edx
   12b3f:	seto   cl
   12b42:	neg    ecx
   12b44:	or     ecx,eax
   12b46:	push   ecx
   12b47:	call   0x10a66
   12b4c:	mov    ecx,DWORD PTR [esi+0x4]
   12b4f:	add    ecx,ecx
   12b51:	push   ecx
   12b52:	mov    DWORD PTR [esi],eax
   12b54:	push   DWORD PTR [edi]
   12b56:	push   eax
   12b57:	call   0x1da96
   12b5c:	mov    eax,DWORD PTR [esi+0x4]
   12b5f:	mov    ecx,DWORD PTR [esi]
   12b61:	xor    edx,edx
   12b63:	push   ebx
   12b64:	mov    WORD PTR [ecx+eax*2],dx
   12b68:	call   0x1da14
   12b6d:	add    esp,0x14
   12b70:	pop    edi
   12b71:	mov    eax,esi
   12b73:	pop    esi
   12b74:	pop    ebx
   12b75:	pop    ebp
   12b76:	ret    0x4
   12b79:	int3   
   12b7a:	int3   
   12b7b:	int3   
   12b7c:	int3   
   12b7d:	int3   
   12b7e:	mov    edi,edi
   12b80:	push   ebp
   12b81:	mov    ebp,esp
   12b83:	push   esi
   12b84:	mov    esi,DWORD PTR [ebp+0x8]
   12b87:	lea    eax,[ebp+0xc]
   12b8a:	push   eax
   12b8b:	mov    ecx,esi
   12b8d:	call   0x12b00
   12b92:	xor    ecx,ecx
   12b94:	inc    ecx
   12b95:	cmp    DWORD PTR [esi+0x4],ecx
   12b98:	jbe    0x12bac
   12b9a:	mov    eax,DWORD PTR [esi]
   12b9c:	lea    eax,[eax+ecx*2]
   12b9f:	mov    dx,WORD PTR [eax-0x2]
   12ba3:	xor    WORD PTR [eax],dx
   12ba6:	inc    ecx
   12ba7:	cmp    ecx,DWORD PTR [esi+0x4]
   12baa:	jb     0x12b9a
   12bac:	push   DWORD PTR [ebp+0xc]
   12baf:	call   0x1da14
   12bb4:	pop    ecx
   12bb5:	mov    eax,esi
   12bb7:	pop    esi
   12bb8:	pop    ebp
   12bb9:	ret    0xc
   12bbc:	int3   
   12bbd:	int3   
   12bbe:	int3   
   12bbf:	int3   
   12bc0:	int3   
   12bc1:	int3   
   12bc2:	mov    edi,edi
   12bc4:	push   ebp
   12bc5:	mov    ebp,esp
   12bc7:	push   esi
   12bc8:	mov    esi,DWORD PTR [ebp+0x8]
   12bcb:	lea    eax,[ebp+0xc]
   12bce:	push   eax
   12bcf:	mov    ecx,esi
   12bd1:	call   0x1298e
   12bd6:	xor    ecx,ecx
   12bd8:	inc    ecx
   12bd9:	cmp    DWORD PTR [esi+0x4],ecx
   12bdc:	jbe    0x12bed
   12bde:	mov    eax,DWORD PTR [esi]
   12be0:	add    eax,ecx
   12be2:	mov    dl,BYTE PTR [eax-0x1]
   12be5:	xor    BYTE PTR [eax],dl
   12be7:	inc    ecx
   12be8:	cmp    ecx,DWORD PTR [esi+0x4]
   12beb:	jb     0x12bde
   12bed:	push   DWORD PTR [ebp+0xc]
   12bf0:	call   0x1da14
   12bf5:	pop    ecx
   12bf6:	mov    eax,esi
   12bf8:	pop    esi
   12bf9:	pop    ebp
   12bfa:	ret    0xc
   12bfd:	int3   
   12bfe:	int3   
   12bff:	int3   
   12c00:	int3   
   12c01:	int3   
   12c02:	mov    edi,edi
   12c04:	push   ebp
   12c05:	mov    ebp,esp
   12c07:	mov    eax,DWORD PTR [ebp+0x8]
   12c0a:	mov    eax,DWORD PTR [eax]
   12c0c:	push   esi
   12c0d:	push   DWORD PTR [ebp+0xc]
   12c10:	mov    esi,ecx
   12c12:	lea    ecx,[esi+0x4]
   12c15:	mov    DWORD PTR [esi],eax
   12c17:	call   0x11ef0
   12c1c:	mov    eax,esi
   12c1e:	pop    esi
   12c1f:	pop    ebp
   12c20:	ret    0x8
   12c23:	int3   
   12c24:	int3   
   12c25:	int3   
   12c26:	int3   
   12c27:	int3   
   12c28:	mov    edi,edi
   12c2a:	push   ebp
   12c2b:	mov    ebp,esp
   12c2d:	push   esi
   12c2e:	push   edi
   12c2f:	mov    edi,DWORD PTR [ebp+0x8]
   12c32:	push   edi
   12c33:	mov    esi,ecx
   12c35:	call   0x1298e
   12c3a:	lea    eax,[edi+0x8]
   12c3d:	push   eax
   12c3e:	lea    ecx,[esi+0x8]
   12c41:	call   0x1298e
   12c46:	mov    eax,DWORD PTR [edi+0x10]
   12c49:	mov    DWORD PTR [esi+0x10],eax
   12c4c:	lea    eax,[edi+0x14]
   12c4f:	push   eax
   12c50:	lea    ecx,[esi+0x14]
   12c53:	call   0x1298e
   12c58:	lea    eax,[edi+0x1c]
   12c5b:	push   eax
   12c5c:	lea    ecx,[esi+0x1c]
   12c5f:	call   0x1298e
   12c64:	lea    eax,[edi+0x24]
   12c67:	push   eax
   12c68:	lea    ecx,[esi+0x24]
   12c6b:	call   0x1298e
   12c70:	mov    eax,DWORD PTR [edi+0x2c]
   12c73:	mov    DWORD PTR [esi+0x2c],eax
   12c76:	mov    eax,DWORD PTR [edi+0x30]
   12c79:	mov    DWORD PTR [esi+0x30],eax
   12c7c:	mov    eax,DWORD PTR [edi+0x38]
   12c7f:	mov    DWORD PTR [esi+0x38],eax
   12c82:	mov    eax,DWORD PTR [edi+0x3c]
   12c85:	mov    DWORD PTR [esi+0x3c],eax
   12c88:	mov    eax,DWORD PTR [edi+0x40]
   12c8b:	mov    DWORD PTR [esi+0x40],eax
   12c8e:	mov    eax,DWORD PTR [edi+0x44]
   12c91:	add    edi,0x48
   12c94:	push   edi
   12c95:	lea    ecx,[esi+0x48]
   12c98:	mov    DWORD PTR [esi+0x44],eax
   12c9b:	call   0x1298e
   12ca0:	pop    edi
   12ca1:	mov    eax,esi
   12ca3:	pop    esi
   12ca4:	pop    ebp
   12ca5:	ret    0x4
   12ca8:	int3   
   12ca9:	int3   
   12caa:	int3   
   12cab:	int3   
   12cac:	int3   
   12cad:	int3   
   12cae:	mov    edi,edi
   12cb0:	push   ebp
   12cb1:	mov    ebp,esp
   12cb3:	mov    eax,DWORD PTR [ebp+0x8]
   12cb6:	mov    edx,DWORD PTR ds:0x7f8c4
   12cbc:	jmp    0x12cc0
   12cbe:	mov    eax,ecx
   12cc0:	mov    ecx,DWORD PTR [eax]
   12cc2:	cmp    ecx,edx
   12cc4:	jne    0x12cbe
   12cc6:	pop    ebp
   12cc7:	ret    0x4
   12cca:	int3   
   12ccb:	int3   
   12ccc:	int3   
   12ccd:	int3   
   12cce:	int3   
   12ccf:	int3   
   12cd0:	mov    edi,edi
   12cd2:	push   ebp
   12cd3:	mov    ebp,esp
   12cd5:	mov    eax,DWORD PTR [ecx+0x4]
   12cd8:	mov    ecx,DWORD PTR [eax+0x4]
   12cdb:	mov    edx,DWORD PTR ds:0x7f8b8
   12ce1:	cmp    ecx,edx
   12ce3:	je     0x12cfe
   12ce5:	push   esi
   12ce6:	mov    esi,DWORD PTR [ebp+0x8]
   12ce9:	mov    esi,DWORD PTR [esi]
   12ceb:	cmp    DWORD PTR [ecx+0xc],esi
   12cee:	jae    0x12cf5
   12cf0:	mov    ecx,DWORD PTR [ecx+0x8]
   12cf3:	jmp    0x12cf9
   12cf5:	mov    eax,ecx
   12cf7:	mov    ecx,DWORD PTR [ecx]
   12cf9:	cmp    ecx,edx
   12cfb:	jne    0x12ceb
   12cfd:	pop    esi
   12cfe:	pop    ebp
   12cff:	ret    0x4
   12d02:	int3   
   12d03:	int3   
   12d04:	int3   
   12d05:	int3   
   12d06:	int3   
   12d07:	int3   
   12d08:	mov    edi,edi
   12d0a:	push   ebp
   12d0b:	mov    ebp,esp
   12d0d:	mov    edx,DWORD PTR [ebp+0x8]
   12d10:	mov    eax,DWORD PTR [edx+0x8]
   12d13:	push   esi
   12d14:	mov    esi,DWORD PTR [eax]
   12d16:	mov    DWORD PTR [edx+0x8],esi
   12d19:	mov    esi,DWORD PTR [eax]
   12d1b:	cmp    esi,DWORD PTR ds:0x7f8b8
   12d21:	je     0x12d26
   12d23:	mov    DWORD PTR [esi+0x4],edx
   12d26:	mov    esi,DWORD PTR [edx+0x4]
   12d29:	mov    DWORD PTR [eax+0x4],esi
   12d2c:	mov    ecx,DWORD PTR [ecx+0x4]
   12d2f:	pop    esi
   12d30:	cmp    edx,DWORD PTR [ecx+0x4]
   12d33:	jne    0x12d3a
   12d35:	mov    DWORD PTR [ecx+0x4],eax
   12d38:	jmp    0x12d48
   12d3a:	mov    ecx,DWORD PTR [edx+0x4]
   12d3d:	cmp    edx,DWORD PTR [ecx]
   12d3f:	jne    0x12d45
   12d41:	mov    DWORD PTR [ecx],eax
   12d43:	jmp    0x12d48
   12d45:	mov    DWORD PTR [ecx+0x8],eax
   12d48:	mov    DWORD PTR [eax],edx
   12d4a:	mov    DWORD PTR [edx+0x4],eax
   12d4d:	pop    ebp
   12d4e:	ret    0x4
   12d51:	int3   
   12d52:	int3   
   12d53:	int3   
   12d54:	int3   
   12d55:	int3   
   12d56:	mov    edi,edi
   12d58:	push   ebp
   12d59:	mov    ebp,esp
   12d5b:	mov    edx,DWORD PTR [ebp+0x8]
   12d5e:	mov    eax,DWORD PTR [edx]
   12d60:	push   esi
   12d61:	mov    esi,DWORD PTR [eax+0x8]
   12d64:	mov    DWORD PTR [edx],esi
   12d66:	mov    esi,DWORD PTR [eax+0x8]
   12d69:	cmp    esi,DWORD PTR ds:0x7f8b8
   12d6f:	je     0x12d74
   12d71:	mov    DWORD PTR [esi+0x4],edx
   12d74:	mov    esi,DWORD PTR [edx+0x4]
   12d77:	mov    DWORD PTR [eax+0x4],esi
   12d7a:	mov    ecx,DWORD PTR [ecx+0x4]
   12d7d:	pop    esi
   12d7e:	cmp    edx,DWORD PTR [ecx+0x4]
   12d81:	jne    0x12d88
   12d83:	mov    DWORD PTR [ecx+0x4],eax
   12d86:	jmp    0x12d97
   12d88:	mov    ecx,DWORD PTR [edx+0x4]
   12d8b:	cmp    edx,DWORD PTR [ecx+0x8]
   12d8e:	jne    0x12d95
   12d90:	mov    DWORD PTR [ecx+0x8],eax
   12d93:	jmp    0x12d97
   12d95:	mov    DWORD PTR [ecx],eax
   12d97:	mov    DWORD PTR [eax+0x8],edx
   12d9a:	mov    DWORD PTR [edx+0x4],eax
   12d9d:	pop    ebp
   12d9e:	ret    0x4
   12da1:	int3   
   12da2:	int3   
   12da3:	int3   
   12da4:	int3   
   12da5:	int3   
   12da6:	mov    edi,edi
   12da8:	push   ebp
   12da9:	mov    ebp,esp
   12dab:	mov    eax,DWORD PTR [ecx+0x4]
   12dae:	push   esi
   12daf:	mov    esi,DWORD PTR [eax+0x4]
   12db2:	push   edi
   12db3:	mov    edi,eax
   12db5:	jmp    0x12dd0
   12db7:	push   DWORD PTR [ebp+0x8]
   12dba:	lea    eax,[esi+0x10]
   12dbd:	push   eax
   12dbe:	call   0x197a4
   12dc3:	test   al,al
   12dc5:	je     0x12dcc
   12dc7:	mov    esi,DWORD PTR [esi+0x8]
   12dca:	jmp    0x12dd0
   12dcc:	mov    edi,esi
   12dce:	mov    esi,DWORD PTR [esi]
   12dd0:	cmp    esi,DWORD PTR ds:0x7f8c4
   12dd6:	jne    0x12db7
   12dd8:	mov    eax,edi
   12dda:	pop    edi
   12ddb:	pop    esi
   12ddc:	pop    ebp
   12ddd:	ret    0x4
   12de0:	int3   
   12de1:	int3   
   12de2:	int3   
   12de3:	int3   
   12de4:	int3   
   12de5:	int3   
   12de6:	mov    edi,edi
   12de8:	push   ebp
   12de9:	mov    ebp,esp
   12deb:	mov    eax,DWORD PTR [ecx+0x4]
   12dee:	push   esi
   12def:	mov    esi,DWORD PTR [eax+0x4]
   12df2:	push   edi
   12df3:	mov    edi,eax
   12df5:	jmp    0x12e10
   12df7:	push   DWORD PTR [ebp+0x8]
   12dfa:	lea    eax,[esi+0xc]
   12dfd:	push   eax
   12dfe:	call   0x197a4
   12e03:	test   al,al
   12e05:	je     0x12e0c
   12e07:	mov    esi,DWORD PTR [esi+0x8]
   12e0a:	jmp    0x12e10
   12e0c:	mov    edi,esi
   12e0e:	mov    esi,DWORD PTR [esi]
   12e10:	cmp    esi,DWORD PTR ds:0x7f8c8
   12e16:	jne    0x12df7
   12e18:	mov    eax,edi
   12e1a:	pop    edi
   12e1b:	pop    esi
   12e1c:	pop    ebp
   12e1d:	ret    0x4
   12e20:	int3   
   12e21:	int3   
   12e22:	int3   
   12e23:	int3   
   12e24:	int3   
   12e25:	int3   
   12e26:	mov    edi,edi
   12e28:	push   ebp
   12e29:	mov    ebp,esp
   12e2b:	mov    eax,DWORD PTR [ecx+0x4]
   12e2e:	mov    ecx,DWORD PTR [eax+0x4]
   12e31:	mov    edx,DWORD PTR ds:0x7f8cc
   12e37:	cmp    ecx,edx
   12e39:	je     0x12e54
   12e3b:	push   esi
   12e3c:	mov    esi,DWORD PTR [ebp+0x8]
   12e3f:	mov    esi,DWORD PTR [esi]
   12e41:	cmp    DWORD PTR [ecx+0xc],esi
   12e44:	jge    0x12e4b
   12e46:	mov    ecx,DWORD PTR [ecx+0x8]
   12e49:	jmp    0x12e4f
   12e4b:	mov    eax,ecx
   12e4d:	mov    ecx,DWORD PTR [ecx]
   12e4f:	cmp    ecx,edx
   12e51:	jne    0x12e41
   12e53:	pop    esi
   12e54:	pop    ebp
   12e55:	ret    0x4
   12e58:	int3   
   12e59:	int3   
   12e5a:	int3   
   12e5b:	int3   
   12e5c:	int3   
   12e5d:	int3   
   12e5e:	mov    edi,edi
   12e60:	push   esi
   12e61:	mov    esi,ecx
   12e63:	mov    ecx,DWORD PTR [esi]
   12e65:	mov    eax,DWORD PTR [ecx+0x8]
   12e68:	cmp    eax,DWORD PTR ds:0x7f8c0
   12e6e:	je     0x12e7c
   12e70:	push   eax
   12e71:	call   0x11268
   12e76:	jmp    0x12e8b
   12e78:	mov    DWORD PTR [esi],eax
   12e7a:	mov    ecx,eax
   12e7c:	mov    eax,DWORD PTR [ecx+0x4]
   12e7f:	cmp    ecx,DWORD PTR [eax+0x8]
   12e82:	je     0x12e78
   12e84:	mov    ecx,DWORD PTR [esi]
   12e86:	cmp    DWORD PTR [ecx+0x8],eax
   12e89:	je     0x12e8d
   12e8b:	mov    DWORD PTR [esi],eax
   12e8d:	pop    esi
   12e8e:	ret    
   12e8f:	int3   
   12e90:	int3   
   12e91:	int3   
   12e92:	int3   
   12e93:	int3   
   12e94:	mov    edi,edi
   12e96:	push   esi
   12e97:	mov    esi,ecx
   12e99:	mov    ecx,DWORD PTR [esi]
   12e9b:	cmp    DWORD PTR [ecx+0x10],0x0
   12e9f:	jne    0x12eae
   12ea1:	mov    eax,DWORD PTR [ecx+0x4]
   12ea4:	cmp    DWORD PTR [eax+0x4],ecx
   12ea7:	jne    0x12eae
   12ea9:	mov    eax,DWORD PTR [ecx+0x8]
   12eac:	jmp    0x12ecb
   12eae:	mov    eax,DWORD PTR [ecx]
   12eb0:	cmp    eax,DWORD PTR ds:0x7f8bc
   12eb6:	je     0x12ec4
   12eb8:	push   eax
   12eb9:	call   0x11202
   12ebe:	jmp    0x12ecb
   12ec0:	mov    DWORD PTR [esi],eax
   12ec2:	mov    ecx,eax
   12ec4:	mov    eax,DWORD PTR [ecx+0x4]
   12ec7:	cmp    ecx,DWORD PTR [eax]
   12ec9:	je     0x12ec0
   12ecb:	mov    DWORD PTR [esi],eax
   12ecd:	pop    esi
   12ece:	ret    
   12ecf:	int3   
   12ed0:	int3   
   12ed1:	int3   
   12ed2:	int3   
   12ed3:	int3   
   12ed4:	mov    edi,edi
   12ed6:	push   esi
   12ed7:	mov    esi,ecx
   12ed9:	mov    ecx,DWORD PTR [esi]
   12edb:	mov    eax,DWORD PTR [ecx+0x8]
   12ede:	cmp    eax,DWORD PTR ds:0x7f8bc
   12ee4:	je     0x12ef2
   12ee6:	push   eax
   12ee7:	call   0x11224
   12eec:	jmp    0x12f01
   12eee:	mov    DWORD PTR [esi],eax
   12ef0:	mov    ecx,eax
   12ef2:	mov    eax,DWORD PTR [ecx+0x4]
   12ef5:	cmp    ecx,DWORD PTR [eax+0x8]
   12ef8:	je     0x12eee
   12efa:	mov    ecx,DWORD PTR [esi]
   12efc:	cmp    DWORD PTR [ecx+0x8],eax
   12eff:	je     0x12f03
   12f01:	mov    DWORD PTR [esi],eax
   12f03:	pop    esi
   12f04:	ret    
   12f05:	int3   
   12f06:	int3   
   12f07:	int3   
   12f08:	int3   
   12f09:	int3   
   12f0a:	mov    edi,edi
   12f0c:	push   ebp
   12f0d:	mov    ebp,esp
   12f0f:	mov    edx,DWORD PTR [ebp+0x8]
   12f12:	mov    eax,DWORD PTR [edx+0x8]
   12f15:	push   esi
   12f16:	mov    esi,DWORD PTR [eax]
   12f18:	mov    DWORD PTR [edx+0x8],esi
   12f1b:	mov    esi,DWORD PTR [eax]
   12f1d:	cmp    esi,DWORD PTR ds:0x7f8bc
   12f23:	je     0x12f28
   12f25:	mov    DWORD PTR [esi+0x4],edx
   12f28:	mov    esi,DWORD PTR [edx+0x4]
   12f2b:	mov    DWORD PTR [eax+0x4],esi
   12f2e:	mov    ecx,DWORD PTR [ecx+0x4]
   12f31:	pop    esi
   12f32:	cmp    edx,DWORD PTR [ecx+0x4]
   12f35:	jne    0x12f3c
   12f37:	mov    DWORD PTR [ecx+0x4],eax
   12f3a:	jmp    0x12f4a
   12f3c:	mov    ecx,DWORD PTR [edx+0x4]
   12f3f:	cmp    edx,DWORD PTR [ecx]
   12f41:	jne    0x12f47
   12f43:	mov    DWORD PTR [ecx],eax
   12f45:	jmp    0x12f4a
   12f47:	mov    DWORD PTR [ecx+0x8],eax
   12f4a:	mov    DWORD PTR [eax],edx
   12f4c:	mov    DWORD PTR [edx+0x4],eax
   12f4f:	pop    ebp
   12f50:	ret    0x4
   12f53:	int3   
   12f54:	int3   
   12f55:	int3   
   12f56:	int3   
   12f57:	int3   
   12f58:	mov    edi,edi
   12f5a:	push   ebp
   12f5b:	mov    ebp,esp
   12f5d:	mov    edx,DWORD PTR [ebp+0x8]
   12f60:	mov    eax,DWORD PTR [edx]
   12f62:	push   esi
   12f63:	mov    esi,DWORD PTR [eax+0x8]
   12f66:	mov    DWORD PTR [edx],esi
   12f68:	mov    esi,DWORD PTR [eax+0x8]
   12f6b:	cmp    esi,DWORD PTR ds:0x7f8bc
   12f71:	je     0x12f76
   12f73:	mov    DWORD PTR [esi+0x4],edx
   12f76:	mov    esi,DWORD PTR [edx+0x4]
   12f79:	mov    DWORD PTR [eax+0x4],esi
   12f7c:	mov    ecx,DWORD PTR [ecx+0x4]
   12f7f:	pop    esi
   12f80:	cmp    edx,DWORD PTR [ecx+0x4]
   12f83:	jne    0x12f8a
   12f85:	mov    DWORD PTR [ecx+0x4],eax
   12f88:	jmp    0x12f99
   12f8a:	mov    ecx,DWORD PTR [edx+0x4]
   12f8d:	cmp    edx,DWORD PTR [ecx+0x8]
   12f90:	jne    0x12f97
   12f92:	mov    DWORD PTR [ecx+0x8],eax
   12f95:	jmp    0x12f99
   12f97:	mov    DWORD PTR [ecx],eax
   12f99:	mov    DWORD PTR [eax+0x8],edx
   12f9c:	mov    DWORD PTR [edx+0x4],eax
   12f9f:	pop    ebp
   12fa0:	ret    0x4
   12fa3:	int3   
   12fa4:	int3   
   12fa5:	int3   
   12fa6:	int3   
   12fa7:	int3   
   12fa8:	mov    edi,edi
   12faa:	push   ebp
   12fab:	mov    ebp,esp
   12fad:	mov    eax,DWORD PTR [ecx+0x4]
   12fb0:	push   esi
   12fb1:	mov    esi,DWORD PTR [eax+0x4]
   12fb4:	push   edi
   12fb5:	mov    edi,eax
   12fb7:	jmp    0x12fd2
   12fb9:	push   DWORD PTR [ebp+0x8]
   12fbc:	lea    eax,[esi+0x10]
   12fbf:	push   eax
   12fc0:	call   0x197a4
   12fc5:	test   al,al
   12fc7:	je     0x12fce
   12fc9:	mov    esi,DWORD PTR [esi+0x8]
   12fcc:	jmp    0x12fd2
   12fce:	mov    edi,esi
   12fd0:	mov    esi,DWORD PTR [esi]
   12fd2:	cmp    esi,DWORD PTR ds:0x7f8c0
   12fd8:	jne    0x12fb9
   12fda:	mov    eax,edi
   12fdc:	pop    edi
   12fdd:	pop    esi
   12fde:	pop    ebp
   12fdf:	ret    0x4
   12fe2:	int3   
   12fe3:	int3   
   12fe4:	int3   
   12fe5:	int3   
   12fe6:	int3   
   12fe7:	int3   
   12fe8:	mov    edi,edi
   12fea:	push   ebp
   12feb:	mov    ebp,esp
   12fed:	mov    edx,DWORD PTR [ebp+0x8]
   12ff0:	mov    eax,DWORD PTR [edx+0x8]
   12ff3:	push   esi
   12ff4:	mov    esi,DWORD PTR [eax]
   12ff6:	mov    DWORD PTR [edx+0x8],esi
   12ff9:	mov    esi,DWORD PTR [eax]
   12ffb:	cmp    esi,DWORD PTR ds:0x7f8c0
   13001:	je     0x13006
   13003:	mov    DWORD PTR [esi+0x4],edx
   13006:	mov    esi,DWORD PTR [edx+0x4]
   13009:	mov    DWORD PTR [eax+0x4],esi
   1300c:	mov    ecx,DWORD PTR [ecx+0x4]
   1300f:	pop    esi
   13010:	cmp    edx,DWORD PTR [ecx+0x4]
   13013:	jne    0x1301a
   13015:	mov    DWORD PTR [ecx+0x4],eax
   13018:	jmp    0x13028
   1301a:	mov    ecx,DWORD PTR [edx+0x4]
   1301d:	cmp    edx,DWORD PTR [ecx]
   1301f:	jne    0x13025
   13021:	mov    DWORD PTR [ecx],eax
   13023:	jmp    0x13028
   13025:	mov    DWORD PTR [ecx+0x8],eax
   13028:	mov    DWORD PTR [eax],edx
   1302a:	mov    DWORD PTR [edx+0x4],eax
   1302d:	pop    ebp
   1302e:	ret    0x4
   13031:	int3   
   13032:	int3   
   13033:	int3   
   13034:	int3   
   13035:	int3   
   13036:	mov    edi,edi
   13038:	push   ebp
   13039:	mov    ebp,esp
   1303b:	mov    edx,DWORD PTR [ebp+0x8]
   1303e:	mov    eax,DWORD PTR [edx]
   13040:	push   esi
   13041:	mov    esi,DWORD PTR [eax+0x8]
   13044:	mov    DWORD PTR [edx],esi
   13046:	mov    esi,DWORD PTR [eax+0x8]
   13049:	cmp    esi,DWORD PTR ds:0x7f8c0
   1304f:	je     0x13054
   13051:	mov    DWORD PTR [esi+0x4],edx
   13054:	mov    esi,DWORD PTR [edx+0x4]
   13057:	mov    DWORD PTR [eax+0x4],esi
   1305a:	mov    ecx,DWORD PTR [ecx+0x4]
   1305d:	pop    esi
   1305e:	cmp    edx,DWORD PTR [ecx+0x4]
   13061:	jne    0x13068
   13063:	mov    DWORD PTR [ecx+0x4],eax
   13066:	jmp    0x13077
   13068:	mov    ecx,DWORD PTR [edx+0x4]
   1306b:	cmp    edx,DWORD PTR [ecx+0x8]
   1306e:	jne    0x13075
   13070:	mov    DWORD PTR [ecx+0x8],eax
   13073:	jmp    0x13077
   13075:	mov    DWORD PTR [ecx],eax
   13077:	mov    DWORD PTR [eax+0x8],edx
   1307a:	mov    DWORD PTR [edx+0x4],eax
   1307d:	pop    ebp
   1307e:	ret    0x4
   13081:	int3   
   13082:	int3   
   13083:	int3   
   13084:	int3   
   13085:	int3   
   13086:	mov    edi,edi
   13088:	push   ebp
   13089:	mov    ebp,esp
   1308b:	mov    eax,DWORD PTR [ecx+0x4]
   1308e:	mov    ecx,DWORD PTR [eax+0x4]
   13091:	mov    edx,DWORD PTR ds:0x7f8b8
   13097:	cmp    ecx,edx
   13099:	je     0x130b4
   1309b:	push   esi
   1309c:	mov    esi,DWORD PTR [ebp+0x8]
   1309f:	mov    esi,DWORD PTR [esi]
   130a1:	cmp    esi,DWORD PTR [ecx+0xc]
   130a4:	jae    0x130ac
   130a6:	mov    eax,ecx
   130a8:	mov    ecx,DWORD PTR [ecx]
   130aa:	jmp    0x130af
   130ac:	mov    ecx,DWORD PTR [ecx+0x8]
   130af:	cmp    ecx,edx
   130b1:	jne    0x130a1
   130b3:	pop    esi
   130b4:	pop    ebp
   130b5:	ret    0x4
   130b8:	int3   
   130b9:	int3   
   130ba:	int3   
   130bb:	int3   
   130bc:	int3   
   130bd:	int3   
   130be:	mov    edi,edi
   130c0:	push   ebp
   130c1:	mov    ebp,esp
   130c3:	mov    eax,DWORD PTR [ecx+0x4]
   130c6:	push   esi
   130c7:	mov    esi,DWORD PTR [eax+0x4]
   130ca:	push   edi
   130cb:	mov    edi,eax
   130cd:	jmp    0x130e8
   130cf:	lea    eax,[esi+0x10]
   130d2:	push   eax
   130d3:	push   DWORD PTR [ebp+0x8]
   130d6:	call   0x197a4
   130db:	test   al,al
   130dd:	je     0x130e5
   130df:	mov    edi,esi
   130e1:	mov    esi,DWORD PTR [esi]
   130e3:	jmp    0x130e8
   130e5:	mov    esi,DWORD PTR [esi+0x8]
   130e8:	cmp    esi,DWORD PTR ds:0x7f8c4
   130ee:	jne    0x130cf
   130f0:	mov    eax,edi
   130f2:	pop    edi
   130f3:	pop    esi
   130f4:	pop    ebp
   130f5:	ret    0x4
   130f8:	int3   
   130f9:	int3   
   130fa:	int3   
   130fb:	int3   
   130fc:	int3   
   130fd:	int3   
   130fe:	mov    edi,edi
   13100:	push   ebp
   13101:	mov    ebp,esp
   13103:	mov    edx,DWORD PTR [ebp+0x8]
   13106:	mov    eax,DWORD PTR [edx+0x8]
   13109:	push   esi
   1310a:	mov    esi,DWORD PTR [eax]
   1310c:	mov    DWORD PTR [edx+0x8],esi
   1310f:	mov    esi,DWORD PTR [eax]
   13111:	cmp    esi,DWORD PTR ds:0x7f8c8
   13117:	je     0x1311c
   13119:	mov    DWORD PTR [esi+0x4],edx
   1311c:	mov    esi,DWORD PTR [edx+0x4]
   1311f:	mov    DWORD PTR [eax+0x4],esi
   13122:	mov    ecx,DWORD PTR [ecx+0x4]
   13125:	pop    esi
   13126:	cmp    edx,DWORD PTR [ecx+0x4]
   13129:	jne    0x13130
   1312b:	mov    DWORD PTR [ecx+0x4],eax
   1312e:	jmp    0x1313e
   13130:	mov    ecx,DWORD PTR [edx+0x4]
   13133:	cmp    edx,DWORD PTR [ecx]
   13135:	jne    0x1313b
   13137:	mov    DWORD PTR [ecx],eax
   13139:	jmp    0x1313e
   1313b:	mov    DWORD PTR [ecx+0x8],eax
   1313e:	mov    DWORD PTR [eax],edx
   13140:	mov    DWORD PTR [edx+0x4],eax
   13143:	pop    ebp
   13144:	ret    0x4
   13147:	int3   
   13148:	int3   
   13149:	int3   
   1314a:	int3   
   1314b:	int3   
   1314c:	mov    edi,edi
   1314e:	push   ebp
   1314f:	mov    ebp,esp
   13151:	mov    edx,DWORD PTR [ebp+0x8]
   13154:	mov    eax,DWORD PTR [edx]
   13156:	push   esi
   13157:	mov    esi,DWORD PTR [eax+0x8]
   1315a:	mov    DWORD PTR [edx],esi
   1315c:	mov    esi,DWORD PTR [eax+0x8]
   1315f:	cmp    esi,DWORD PTR ds:0x7f8c8
   13165:	je     0x1316a
   13167:	mov    DWORD PTR [esi+0x4],edx
   1316a:	mov    esi,DWORD PTR [edx+0x4]
   1316d:	mov    DWORD PTR [eax+0x4],esi
   13170:	mov    ecx,DWORD PTR [ecx+0x4]
   13173:	pop    esi
   13174:	cmp    edx,DWORD PTR [ecx+0x4]
   13177:	jne    0x1317e
   13179:	mov    DWORD PTR [ecx+0x4],eax
   1317c:	jmp    0x1318d
   1317e:	mov    ecx,DWORD PTR [edx+0x4]
   13181:	cmp    edx,DWORD PTR [ecx+0x8]
   13184:	jne    0x1318b
   13186:	mov    DWORD PTR [ecx+0x8],eax
   13189:	jmp    0x1318d
   1318b:	mov    DWORD PTR [ecx],eax
   1318d:	mov    DWORD PTR [eax+0x8],edx
   13190:	mov    DWORD PTR [edx+0x4],eax
   13193:	pop    ebp
   13194:	ret    0x4
   13197:	int3   
   13198:	int3   
   13199:	int3   
   1319a:	int3   
   1319b:	int3   
   1319c:	mov    edi,edi
   1319e:	push   ebp
   1319f:	mov    ebp,esp
   131a1:	mov    eax,DWORD PTR [ecx+0x4]
   131a4:	push   esi
   131a5:	mov    esi,DWORD PTR [eax+0x4]
   131a8:	push   edi
   131a9:	mov    edi,eax
   131ab:	jmp    0x131c6
   131ad:	lea    eax,[esi+0xc]
   131b0:	push   eax
   131b1:	push   DWORD PTR [ebp+0x8]
   131b4:	call   0x197a4
   131b9:	test   al,al
   131bb:	je     0x131c3
   131bd:	mov    edi,esi
   131bf:	mov    esi,DWORD PTR [esi]
   131c1:	jmp    0x131c6
   131c3:	mov    esi,DWORD PTR [esi+0x8]
   131c6:	cmp    esi,DWORD PTR ds:0x7f8c8
   131cc:	jne    0x131ad
   131ce:	mov    eax,edi
   131d0:	pop    edi
   131d1:	pop    esi
   131d2:	pop    ebp
   131d3:	ret    0x4
   131d6:	int3   
   131d7:	int3   
   131d8:	int3   
   131d9:	int3   
   131da:	int3   
   131db:	int3   
   131dc:	mov    edi,edi
   131de:	push   ebp
   131df:	mov    ebp,esp
   131e1:	mov    edx,DWORD PTR [ebp+0x8]
   131e4:	mov    eax,DWORD PTR [edx+0x8]
   131e7:	push   esi
   131e8:	mov    esi,DWORD PTR [eax]
   131ea:	mov    DWORD PTR [edx+0x8],esi
   131ed:	mov    esi,DWORD PTR [eax]
   131ef:	cmp    esi,DWORD PTR ds:0x7f8cc
   131f5:	je     0x131fa
   131f7:	mov    DWORD PTR [esi+0x4],edx
   131fa:	mov    esi,DWORD PTR [edx+0x4]
   131fd:	mov    DWORD PTR [eax+0x4],esi
   13200:	mov    ecx,DWORD PTR [ecx+0x4]
   13203:	pop    esi
   13204:	cmp    edx,DWORD PTR [ecx+0x4]
   13207:	jne    0x1320e
   13209:	mov    DWORD PTR [ecx+0x4],eax
   1320c:	jmp    0x1321c
   1320e:	mov    ecx,DWORD PTR [edx+0x4]
   13211:	cmp    edx,DWORD PTR [ecx]
   13213:	jne    0x13219
   13215:	mov    DWORD PTR [ecx],eax
   13217:	jmp    0x1321c
   13219:	mov    DWORD PTR [ecx+0x8],eax
   1321c:	mov    DWORD PTR [eax],edx
   1321e:	mov    DWORD PTR [edx+0x4],eax
   13221:	pop    ebp
   13222:	ret    0x4
   13225:	int3   
   13226:	int3   
   13227:	int3   
   13228:	int3   
   13229:	int3   
   1322a:	mov    edi,edi
   1322c:	push   ebp
   1322d:	mov    ebp,esp
   1322f:	mov    edx,DWORD PTR [ebp+0x8]
   13232:	mov    eax,DWORD PTR [edx]
   13234:	push   esi
   13235:	mov    esi,DWORD PTR [eax+0x8]
   13238:	mov    DWORD PTR [edx],esi
   1323a:	mov    esi,DWORD PTR [eax+0x8]
   1323d:	cmp    esi,DWORD PTR ds:0x7f8cc
   13243:	je     0x13248
   13245:	mov    DWORD PTR [esi+0x4],edx
   13248:	mov    esi,DWORD PTR [edx+0x4]
   1324b:	mov    DWORD PTR [eax+0x4],esi
   1324e:	mov    ecx,DWORD PTR [ecx+0x4]
   13251:	pop    esi
   13252:	cmp    edx,DWORD PTR [ecx+0x4]
   13255:	jne    0x1325c
   13257:	mov    DWORD PTR [ecx+0x4],eax
   1325a:	jmp    0x1326b
   1325c:	mov    ecx,DWORD PTR [edx+0x4]
   1325f:	cmp    edx,DWORD PTR [ecx+0x8]
   13262:	jne    0x13269
   13264:	mov    DWORD PTR [ecx+0x8],eax
   13267:	jmp    0x1326b
   13269:	mov    DWORD PTR [ecx],eax
   1326b:	mov    DWORD PTR [eax+0x8],edx
   1326e:	mov    DWORD PTR [edx+0x4],eax
   13271:	pop    ebp
   13272:	ret    0x4
   13275:	int3   
   13276:	int3   
   13277:	int3   
   13278:	int3   
   13279:	int3   
   1327a:	mov    edi,edi
   1327c:	push   ebp
   1327d:	mov    ebp,esp
   1327f:	mov    eax,DWORD PTR [ecx+0x4]
   13282:	mov    ecx,DWORD PTR [eax+0x4]
   13285:	mov    edx,DWORD PTR ds:0x7f8cc
   1328b:	cmp    ecx,edx
   1328d:	je     0x132a8
   1328f:	push   esi
   13290:	mov    esi,DWORD PTR [ebp+0x8]
   13293:	mov    esi,DWORD PTR [esi]
   13295:	cmp    esi,DWORD PTR [ecx+0xc]
   13298:	jge    0x132a0
   1329a:	mov    eax,ecx
   1329c:	mov    ecx,DWORD PTR [ecx]
   1329e:	jmp    0x132a3
   132a0:	mov    ecx,DWORD PTR [ecx+0x8]
   132a3:	cmp    ecx,edx
   132a5:	jne    0x13295
   132a7:	pop    esi
   132a8:	pop    ebp
   132a9:	ret    0x4
   132ac:	int3   
   132ad:	int3   
   132ae:	int3   
   132af:	int3   
   132b0:	int3   
   132b1:	int3   
   132b2:	mov    edi,edi
   132b4:	push   ebp
   132b5:	mov    ebp,esp
   132b7:	mov    eax,DWORD PTR [ecx+0x4]
   132ba:	push   esi
   132bb:	mov    esi,DWORD PTR [eax+0x4]
   132be:	push   edi
   132bf:	mov    edi,eax
   132c1:	jmp    0x132dc
   132c3:	push   DWORD PTR [ebp+0x8]
   132c6:	lea    eax,[esi+0xc]
   132c9:	push   eax
   132ca:	call   0x197d4
   132cf:	test   al,al
   132d1:	je     0x132d8
   132d3:	mov    esi,DWORD PTR [esi+0x8]
   132d6:	jmp    0x132dc
   132d8:	mov    edi,esi
   132da:	mov    esi,DWORD PTR [esi]
   132dc:	cmp    esi,DWORD PTR ds:0x7f8d4
   132e2:	jne    0x132c3
   132e4:	mov    eax,edi
   132e6:	pop    edi
   132e7:	pop    esi
   132e8:	pop    ebp
   132e9:	ret    0x4
   132ec:	int3   
   132ed:	int3   
   132ee:	int3   
   132ef:	int3   
   132f0:	int3   
   132f1:	int3   
   132f2:	mov    edi,edi
   132f4:	push   ebp
   132f5:	mov    ebp,esp
   132f7:	mov    edx,DWORD PTR [ebp+0x8]
   132fa:	mov    eax,DWORD PTR [edx+0x8]
   132fd:	push   esi
   132fe:	mov    esi,DWORD PTR [eax]
   13300:	mov    DWORD PTR [edx+0x8],esi
   13303:	mov    esi,DWORD PTR [eax]
   13305:	cmp    esi,DWORD PTR ds:0x7f8d4
   1330b:	je     0x13310
   1330d:	mov    DWORD PTR [esi+0x4],edx
   13310:	mov    esi,DWORD PTR [edx+0x4]
   13313:	mov    DWORD PTR [eax+0x4],esi
   13316:	mov    ecx,DWORD PTR [ecx+0x4]
   13319:	pop    esi
   1331a:	cmp    edx,DWORD PTR [ecx+0x4]
   1331d:	jne    0x13324
   1331f:	mov    DWORD PTR [ecx+0x4],eax
   13322:	jmp    0x13332
   13324:	mov    ecx,DWORD PTR [edx+0x4]
   13327:	cmp    edx,DWORD PTR [ecx]
   13329:	jne    0x1332f
   1332b:	mov    DWORD PTR [ecx],eax
   1332d:	jmp    0x13332
   1332f:	mov    DWORD PTR [ecx+0x8],eax
   13332:	mov    DWORD PTR [eax],edx
   13334:	mov    DWORD PTR [edx+0x4],eax
   13337:	pop    ebp
   13338:	ret    0x4
   1333b:	int3   
   1333c:	int3   
   1333d:	int3   
   1333e:	int3   
   1333f:	int3   
   13340:	mov    edi,edi
   13342:	push   ebp
   13343:	mov    ebp,esp
   13345:	mov    edx,DWORD PTR [ebp+0x8]
   13348:	mov    eax,DWORD PTR [edx]
   1334a:	push   esi
   1334b:	mov    esi,DWORD PTR [eax+0x8]
   1334e:	mov    DWORD PTR [edx],esi
   13350:	mov    esi,DWORD PTR [eax+0x8]
   13353:	cmp    esi,DWORD PTR ds:0x7f8d4
   13359:	je     0x1335e
   1335b:	mov    DWORD PTR [esi+0x4],edx
   1335e:	mov    esi,DWORD PTR [edx+0x4]
   13361:	mov    DWORD PTR [eax+0x4],esi
   13364:	mov    ecx,DWORD PTR [ecx+0x4]
   13367:	pop    esi
   13368:	cmp    edx,DWORD PTR [ecx+0x4]
   1336b:	jne    0x13372
   1336d:	mov    DWORD PTR [ecx+0x4],eax
   13370:	jmp    0x13381
   13372:	mov    ecx,DWORD PTR [edx+0x4]
   13375:	cmp    edx,DWORD PTR [ecx+0x8]
   13378:	jne    0x1337f
   1337a:	mov    DWORD PTR [ecx+0x8],eax
   1337d:	jmp    0x13381
   1337f:	mov    DWORD PTR [ecx],eax
   13381:	mov    DWORD PTR [eax+0x8],edx
   13384:	mov    DWORD PTR [edx+0x4],eax
   13387:	pop    ebp
   13388:	ret    0x4
   1338b:	int3   
   1338c:	int3   
   1338d:	int3   
   1338e:	int3   
   1338f:	int3   
   13390:	mov    edi,edi
   13392:	push   esi
   13393:	mov    esi,ecx
   13395:	mov    ecx,DWORD PTR [esi]
   13397:	cmp    DWORD PTR [ecx+0x1c],0x0
   1339b:	jne    0x133aa
   1339d:	mov    eax,DWORD PTR [ecx+0x4]
   133a0:	cmp    DWORD PTR [eax+0x4],ecx
   133a3:	jne    0x133aa
   133a5:	mov    eax,DWORD PTR [ecx+0x8]
   133a8:	jmp    0x133c7
   133aa:	mov    eax,DWORD PTR [ecx]
   133ac:	cmp    eax,DWORD PTR ds:0x7f8d4
   133b2:	je     0x133c0
   133b4:	push   eax
   133b5:	call   0x115b4
   133ba:	jmp    0x133c7
   133bc:	mov    DWORD PTR [esi],eax
   133be:	mov    ecx,eax
   133c0:	mov    eax,DWORD PTR [ecx+0x4]
   133c3:	cmp    ecx,DWORD PTR [eax]
   133c5:	je     0x133bc
   133c7:	mov    DWORD PTR [esi],eax
   133c9:	pop    esi
   133ca:	ret    
   133cb:	int3   
   133cc:	int3   
   133cd:	int3   
   133ce:	int3   
   133cf:	int3   
   133d0:	mov    edi,edi
   133d2:	push   ebp
   133d3:	mov    ebp,esp
   133d5:	mov    eax,DWORD PTR [ecx+0x4]
   133d8:	mov    ecx,DWORD PTR [eax+0x4]
   133db:	mov    edx,DWORD PTR ds:0x7f8bc
   133e1:	cmp    ecx,edx
   133e3:	je     0x133fe
   133e5:	push   esi
   133e6:	mov    esi,DWORD PTR [ebp+0x8]
   133e9:	mov    esi,DWORD PTR [esi]
   133eb:	cmp    DWORD PTR [ecx+0xc],esi
   133ee:	jae    0x133f5
   133f0:	mov    ecx,DWORD PTR [ecx+0x8]
   133f3:	jmp    0x133f9
   133f5:	mov    eax,ecx
   133f7:	mov    ecx,DWORD PTR [ecx]
   133f9:	cmp    ecx,edx
   133fb:	jne    0x133eb
   133fd:	pop    esi
   133fe:	pop    ebp
   133ff:	ret    0x4
   13402:	int3   
   13403:	int3   
   13404:	int3   
   13405:	int3   
   13406:	int3   
   13407:	int3   
   13408:	mov    edi,edi
   1340a:	push   ebp
   1340b:	mov    ebp,esp
   1340d:	mov    eax,DWORD PTR [ecx+0x4]
   13410:	mov    ecx,DWORD PTR [eax+0x4]
   13413:	mov    edx,DWORD PTR ds:0x7f8bc
   13419:	cmp    ecx,edx
   1341b:	je     0x13436
   1341d:	push   esi
   1341e:	mov    esi,DWORD PTR [ebp+0x8]
   13421:	mov    esi,DWORD PTR [esi]
   13423:	cmp    esi,DWORD PTR [ecx+0xc]
   13426:	jae    0x1342e
   13428:	mov    eax,ecx
   1342a:	mov    ecx,DWORD PTR [ecx]
   1342c:	jmp    0x13431
   1342e:	mov    ecx,DWORD PTR [ecx+0x8]
   13431:	cmp    ecx,edx
   13433:	jne    0x13423
   13435:	pop    esi
   13436:	pop    ebp
   13437:	ret    0x4
   1343a:	int3   
   1343b:	int3   
   1343c:	int3   
   1343d:	int3   
   1343e:	int3   
   1343f:	int3   
   13440:	mov    edi,edi
   13442:	push   ebp
   13443:	mov    ebp,esp
   13445:	push   esi
   13446:	push   edi
   13447:	mov    edi,DWORD PTR [ebp+0x8]
   1344a:	push   edi
   1344b:	mov    esi,ecx
   1344d:	call   0x12b00
   13452:	add    edi,0x8
   13455:	push   edi
   13456:	lea    ecx,[esi+0x8]
   13459:	call   0x12b00
   1345e:	pop    edi
   1345f:	mov    eax,esi
   13461:	pop    esi
   13462:	pop    ebp
   13463:	ret    0x4
   13466:	int3   
   13467:	int3   
   13468:	int3   
   13469:	int3   
   1346a:	int3   
   1346b:	int3   
   1346c:	mov    edi,edi
   1346e:	push   ebp
   1346f:	mov    ebp,esp
   13471:	push   esi
   13472:	push   edi
   13473:	mov    edi,DWORD PTR [ebp+0x8]
   13476:	push   edi
   13477:	mov    esi,ecx
   13479:	call   0x1298e
   1347e:	add    edi,0x8
   13481:	push   edi
   13482:	lea    ecx,[esi+0x8]
   13485:	call   0x1298e
   1348a:	pop    edi
   1348b:	mov    eax,esi
   1348d:	pop    esi
   1348e:	pop    ebp
   1348f:	ret    0x4
   13492:	int3   
   13493:	int3   
   13494:	int3   
   13495:	int3   
   13496:	int3   
   13497:	int3   
   13498:	mov    edi,edi
   1349a:	push   ebp
   1349b:	mov    ebp,esp
   1349d:	mov    ecx,DWORD PTR [ebp+0x8]
   134a0:	push   0x0
   134a2:	call   0x1165c
   134a7:	pop    ebp
   134a8:	ret    0x4
   134ab:	int3   
   134ac:	int3   
   134ad:	int3   
   134ae:	int3   
   134af:	int3   
   134b0:	mov    edi,edi
   134b2:	push   ebp
   134b3:	mov    ebp,esp
   134b5:	push   esi
   134b6:	push   edi
   134b7:	mov    edi,DWORD PTR [ebp+0x8]
   134ba:	push   edi
   134bb:	mov    esi,ecx
   134bd:	call   0x12c28
   134c2:	mov    eax,DWORD PTR [edi+0x50]
   134c5:	mov    DWORD PTR [esi+0x50],eax
   134c8:	pop    edi
   134c9:	mov    eax,esi
   134cb:	pop    esi
   134cc:	pop    ebp
   134cd:	ret    0x4
   134d0:	int3   
   134d1:	int3   
   134d2:	int3   
   134d3:	int3   
   134d4:	int3   
   134d5:	int3   
   134d6:	mov    edi,edi
   134d8:	push   ebp
   134d9:	mov    ebp,esp
   134db:	push   esi
   134dc:	push   edi
   134dd:	mov    edi,DWORD PTR [ebp+0x8]
   134e0:	push   edi
   134e1:	mov    esi,ecx
   134e3:	call   0x1298e
   134e8:	add    edi,0x8
   134eb:	push   edi
   134ec:	lea    ecx,[esi+0x8]
   134ef:	call   0x134b0
   134f4:	pop    edi
   134f5:	mov    eax,esi
   134f7:	pop    esi
   134f8:	pop    ebp
   134f9:	ret    0x4
   134fc:	int3   
   134fd:	int3   
   134fe:	int3   
   134ff:	int3   
   13500:	int3   
   13501:	int3   
   13502:	mov    edi,edi
   13504:	push   ebp
   13505:	mov    ebp,esp
   13507:	push   esi
   13508:	push   edi
   13509:	mov    edi,DWORD PTR [ebp+0x8]
   1350c:	push   edi
   1350d:	mov    esi,ecx
   1350f:	call   0x1298e
   13514:	add    edi,0x8
   13517:	push   edi
   13518:	lea    ecx,[esi+0x8]
   1351b:	call   0x12c28
   13520:	pop    edi
   13521:	mov    eax,esi
   13523:	pop    esi
   13524:	pop    ebp
   13525:	ret    0x4
   13528:	int3   
   13529:	int3   
   1352a:	int3   
   1352b:	int3   
   1352c:	int3   
   1352d:	int3   
   1352e:	mov    edi,edi
   13530:	push   ebp
   13531:	mov    ebp,esp
   13533:	push   esi
   13534:	mov    esi,ecx
   13536:	call   0x12ac4
   1353b:	test   BYTE PTR [ebp+0x8],0x1
   1353f:	je     0x13548
   13541:	push   esi
   13542:	call   0x1da14
   13547:	pop    ecx
   13548:	mov    eax,esi
   1354a:	pop    esi
   1354b:	pop    ebp
   1354c:	ret    0x4
   1354f:	int3   
   13550:	int3   
   13551:	int3   
   13552:	int3   
   13553:	int3   
   13554:	mov    edi,edi
   13556:	push   ebp
   13557:	mov    ebp,esp
   13559:	mov    eax,DWORD PTR [ebp+0x8]
   1355c:	push   esi
   1355d:	mov    esi,ecx
   1355f:	mov    ecx,DWORD PTR [eax]
   13561:	add    eax,0x4
   13564:	mov    DWORD PTR [esi],ecx
   13566:	push   eax
   13567:	lea    ecx,[esi+0x4]
   1356a:	call   0x11ef0
   1356f:	mov    eax,esi
   13571:	pop    esi
   13572:	pop    ebp
   13573:	ret    0x4
   13576:	int3   
   13577:	int3   
   13578:	int3   
   13579:	int3   
   1357a:	int3   
   1357b:	int3   
   1357c:	mov    edi,edi
   1357e:	push   ebp
   1357f:	mov    ebp,esp
   13581:	push   esi
   13582:	mov    esi,ecx
   13584:	mov    ecx,DWORD PTR [esi+0x4]
   13587:	test   ecx,ecx
   13589:	je     0x13590
   1358b:	call   0x10a9a
   13590:	test   BYTE PTR [ebp+0x8],0x1
   13594:	je     0x1359d
   13596:	push   esi
   13597:	call   0x1da14
   1359c:	pop    ecx
   1359d:	mov    eax,esi
   1359f:	pop    esi
   135a0:	pop    ebp
   135a1:	ret    0x4
   135a4:	int3   
   135a5:	int3   
   135a6:	int3   
   135a7:	int3   
   135a8:	int3   
   135a9:	int3   
   135aa:	mov    edi,edi
   135ac:	push   ebp
   135ad:	mov    ebp,esp
   135af:	push   esi
   135b0:	push   DWORD PTR [ebp+0x8]
   135b3:	mov    esi,ecx
   135b5:	call   0x1298e
   135ba:	push   DWORD PTR [ebp+0xc]
   135bd:	lea    ecx,[esi+0x8]
   135c0:	call   0x134b0
   135c5:	mov    eax,esi
   135c7:	pop    esi
   135c8:	pop    ebp
   135c9:	ret    0x8
   135cc:	int3   
   135cd:	int3   
   135ce:	int3   
   135cf:	int3   
   135d0:	int3   
   135d1:	int3   
   135d2:	mov    edi,edi
   135d4:	push   ebp
   135d5:	mov    ebp,esp
   135d7:	push   esi
   135d8:	push   DWORD PTR [ebp+0x8]
   135db:	mov    esi,ecx
   135dd:	call   0x12b00
   135e2:	push   DWORD PTR [ebp+0xc]
   135e5:	lea    ecx,[esi+0x8]
   135e8:	call   0x12b00
   135ed:	mov    eax,esi
   135ef:	pop    esi
   135f0:	pop    ebp
   135f1:	ret    0x8
   135f4:	int3   
   135f5:	int3   
   135f6:	int3   
   135f7:	int3   
   135f8:	int3   
   135f9:	int3   
   135fa:	mov    edi,edi
   135fc:	push   ebp
   135fd:	mov    ebp,esp
   135ff:	push   esi
   13600:	push   DWORD PTR [ebp+0x8]
   13603:	mov    esi,ecx
   13605:	call   0x1298e
   1360a:	push   DWORD PTR [ebp+0xc]
   1360d:	lea    ecx,[esi+0x8]
   13610:	call   0x1298e
   13615:	mov    eax,esi
   13617:	pop    esi
   13618:	pop    ebp
   13619:	ret    0x8
   1361c:	int3   
   1361d:	int3   
   1361e:	int3   
   1361f:	int3   
   13620:	int3   
   13621:	int3   
   13622:	mov    edi,edi
   13624:	push   ebp
   13625:	mov    ebp,esp
   13627:	push   edi
   13628:	mov    edi,DWORD PTR [ebp+0xc]
   1362b:	cmp    DWORD PTR [ebp+0x8],edi
   1362e:	je     0x13644
   13630:	push   esi
   13631:	mov    esi,DWORD PTR [ebp+0x10]
   13634:	inc    DWORD PTR [esi]
   13636:	lea    ecx,[ebp+0x8]
   13639:	call   0x112ca
   1363e:	cmp    DWORD PTR [ebp+0x8],edi
   13641:	jne    0x13634
   13643:	pop    esi
   13644:	pop    edi
   13645:	pop    ebp
   13646:	ret    
   13647:	int3   
   13648:	int3   
   13649:	int3   
   1364a:	int3   
   1364b:	int3   
   1364c:	mov    edi,edi
   1364e:	push   ebp
   1364f:	mov    ebp,esp
   13651:	push   edi
   13652:	mov    edi,DWORD PTR [ebp+0xc]
   13655:	cmp    DWORD PTR [ebp+0x8],edi
   13658:	je     0x1366e
   1365a:	push   esi
   1365b:	mov    esi,DWORD PTR [ebp+0x10]
   1365e:	inc    DWORD PTR [esi]
   13660:	lea    ecx,[ebp+0x8]
   13663:	call   0x11548
   13668:	cmp    DWORD PTR [ebp+0x8],edi
   1366b:	jne    0x1365e
   1366d:	pop    esi
   1366e:	pop    edi
   1366f:	pop    ebp
   13670:	ret    
   13671:	int3   
   13672:	int3   
   13673:	int3   
   13674:	int3   
   13675:	int3   
   13676:	mov    edi,edi
   13678:	push   ebp
   13679:	mov    ebp,esp
   1367b:	push   edi
   1367c:	mov    edi,DWORD PTR [ebp+0xc]
   1367f:	cmp    DWORD PTR [ebp+0x8],edi
   13682:	je     0x13698
   13684:	push   esi
   13685:	mov    esi,DWORD PTR [ebp+0x10]
   13688:	inc    DWORD PTR [esi]
   1368a:	lea    ecx,[ebp+0x8]
   1368d:	call   0x1157e
   13692:	cmp    DWORD PTR [ebp+0x8],edi
   13695:	jne    0x13688
   13697:	pop    esi
   13698:	pop    edi
   13699:	pop    ebp
   1369a:	ret    
   1369b:	int3   
   1369c:	int3   
   1369d:	int3   
   1369e:	int3   
   1369f:	int3   
   136a0:	mov    edi,edi
   136a2:	push   ebp
   136a3:	mov    ebp,esp
   136a5:	push   edi
   136a6:	mov    edi,DWORD PTR [ebp+0xc]
   136a9:	cmp    DWORD PTR [ebp+0x8],edi
   136ac:	je     0x136c2
   136ae:	push   esi
   136af:	mov    esi,DWORD PTR [ebp+0x10]
   136b2:	inc    DWORD PTR [esi]
   136b4:	lea    ecx,[ebp+0x8]
   136b7:	call   0x12ed4
   136bc:	cmp    DWORD PTR [ebp+0x8],edi
   136bf:	jne    0x136b2
   136c1:	pop    esi
   136c2:	pop    edi
   136c3:	pop    ebp
   136c4:	ret    
   136c5:	int3   
   136c6:	int3   
   136c7:	int3   
   136c8:	int3   
   136c9:	int3   
   136ca:	mov    edi,edi
   136cc:	push   ebx
   136cd:	push   esi
   136ce:	push   edi
   136cf:	or     ebx,0xffffffff
   136d2:	push   ebx
   136d3:	mov    edi,0x1def0
   136d8:	push   edi
   136d9:	mov    esi,ecx
   136db:	call   0x110ae
   136e0:	push   ebx
   136e1:	push   edi
   136e2:	lea    ecx,[esi+0x8]
   136e5:	call   0x110ae
   136ea:	push   ebx
   136eb:	push   edi
   136ec:	lea    ecx,[esi+0x14]
   136ef:	call   0x110ae
   136f4:	push   ebx
   136f5:	push   edi
   136f6:	lea    ecx,[esi+0x1c]
   136f9:	call   0x110ae
   136fe:	push   ebx
   136ff:	push   edi
   13700:	lea    ecx,[esi+0x24]
   13703:	call   0x110ae
   13708:	push   ebx
   13709:	push   edi
   1370a:	lea    ecx,[esi+0x48]
   1370d:	call   0x110ae
   13712:	xor    eax,eax
   13714:	mov    DWORD PTR [esi+0x10],eax
   13717:	mov    DWORD PTR [esi+0x30],eax
   1371a:	mov    DWORD PTR [esi+0x2c],eax
   1371d:	mov    DWORD PTR [esi+0x40],eax
   13720:	mov    DWORD PTR [esi+0x44],eax
   13723:	pop    edi
   13724:	mov    eax,esi
   13726:	pop    esi
   13727:	pop    ebx
   13728:	ret    
   13729:	int3   
   1372a:	int3   
   1372b:	int3   
   1372c:	int3   
   1372d:	int3   
   1372e:	mov    edi,edi
   13730:	push   ebp
   13731:	mov    ebp,esp
   13733:	push   esi
   13734:	push   DWORD PTR [ebp+0x8]
   13737:	mov    esi,ecx
   13739:	call   0x1298e
   1373e:	push   DWORD PTR [ebp+0xc]
   13741:	lea    ecx,[esi+0x8]
   13744:	call   0x1298e
   13749:	mov    eax,DWORD PTR [ebp+0x10]
   1374c:	push   0xffffffff
   1374e:	push   0x1def0
   13753:	lea    ecx,[esi+0x14]
   13756:	mov    DWORD PTR [esi+0x10],eax
   13759:	call   0x110ae
   1375e:	push   DWORD PTR [ebp+0x14]
   13761:	lea    ecx,[esi+0x1c]
   13764:	call   0x1298e
   13769:	push   DWORD PTR [ebp+0x18]
   1376c:	lea    ecx,[esi+0x24]
   1376f:	call   0x1298e
   13774:	mov    eax,DWORD PTR [ebp+0x20]
   13777:	push   DWORD PTR [ebp+0x1c]
   1377a:	mov    DWORD PTR [esi+0x2c],eax
   1377d:	mov    eax,DWORD PTR [ebp+0x24]
   13780:	lea    ecx,[esi+0x48]
   13783:	mov    DWORD PTR [esi+0x30],eax
   13786:	call   0x1298e
   1378b:	and    DWORD PTR [esi+0x40],0x0
   1378f:	and    DWORD PTR [esi+0x44],0x0
   13793:	mov    eax,DWORD PTR [ebp+0x28]
   13796:	mov    ecx,DWORD PTR [eax]
   13798:	mov    DWORD PTR [esi+0x38],ecx
   1379b:	mov    eax,DWORD PTR [eax+0x4]
   1379e:	mov    DWORD PTR [esi+0x3c],eax
   137a1:	mov    eax,esi
   137a3:	pop    esi
   137a4:	pop    ebp
   137a5:	ret    0x24
   137a8:	int3   
   137a9:	int3   
   137aa:	int3   
   137ab:	int3   
   137ac:	int3   
   137ad:	int3   
   137ae:	mov    edi,edi
   137b0:	push   ebp
   137b1:	mov    ebp,esp
   137b3:	push   esi
   137b4:	push   0xc
   137b6:	mov    esi,ecx
   137b8:	call   0x10a66
   137bd:	pop    ecx
   137be:	test   eax,eax
   137c0:	je     0x137d1
   137c2:	push   DWORD PTR [ebp+0xc]
   137c5:	mov    ecx,eax
   137c7:	push   DWORD PTR [ebp+0x8]
   137ca:	call   0x11f3e
   137cf:	jmp    0x137d3
   137d1:	xor    eax,eax
   137d3:	mov    DWORD PTR [esi],eax
   137d5:	mov    eax,esi
   137d7:	pop    esi
   137d8:	pop    ebp
   137d9:	ret    0x8
   137dc:	int3   
   137dd:	int3   
   137de:	int3   
   137df:	int3   
   137e0:	int3   
   137e1:	int3   
   137e2:	mov    edi,edi
   137e4:	push   ebp
   137e5:	mov    ebp,esp
   137e7:	sub    esp,0x18
   137ea:	lea    eax,[ebp-0x18]
   137ed:	push   eax
   137ee:	push   DWORD PTR [ebp+0x8]
   137f1:	call   0x10e86
   137f6:	test   al,al
   137f8:	je     0x13867
   137fa:	lea    eax,[ebp-0x4]
   137fd:	push   eax
   137fe:	push   DWORD PTR [ebp+0xc]
   13801:	call   0x11c94
   13806:	call   eax
   13808:	test   eax,eax
   1380a:	jl     0x13867
   1380c:	push   esi
   1380d:	push   0x5
   1380f:	call   0x128e4
   13814:	mov    esi,eax
   13816:	test   esi,esi
   13818:	je     0x13866
   1381a:	mov    edx,DWORD PTR [ebp+0x10]
   1381d:	cmp    DWORD PTR [esi+0x44],edx
   13820:	je     0x1382f
   13822:	mov    ecx,DWORD PTR [eax]
   13824:	test   ecx,ecx
   13826:	je     0x13853
   13828:	add    eax,ecx
   1382a:	cmp    DWORD PTR [eax+0x44],edx
   1382d:	jne    0x13822
   1382f:	cmp    DWORD PTR [eax+0x4],0x0
   13833:	je     0x13853
   13835:	mov    ecx,DWORD PTR [eax+0xd8]
   1383b:	mov    eax,DWORD PTR [eax+0xdc]
   13841:	mov    DWORD PTR [ebp-0x14],eax
   13844:	lea    eax,[ebp-0x18]
   13847:	push   eax
   13848:	push   DWORD PTR [ebp+0x8]
   1384b:	mov    DWORD PTR [ebp-0x18],ecx
   1384e:	call   0x10ed4
   13853:	call   0x11c6a
   13858:	mov    ecx,DWORD PTR [ebp-0x4]
   1385b:	call   eax
   1385d:	push   0x0
   1385f:	push   esi
   13860:	call   DWORD PTR ds:0x1ee1c
   13866:	pop    esi
   13867:	leave  
   13868:	ret    0x10
   1386b:	int3   
   1386c:	int3   
   1386d:	int3   
   1386e:	int3   
   1386f:	int3   
   13870:	mov    edi,edi
   13872:	push   esi
   13873:	mov    esi,ecx
   13875:	mov    ecx,DWORD PTR [esi]
   13877:	mov    eax,DWORD PTR [ecx+0x8]
   1387a:	cmp    eax,DWORD PTR ds:0x7f8c4
   13880:	je     0x1388e
   13882:	push   eax
   13883:	call   0x12cae
   13888:	jmp    0x1389d
   1388a:	mov    DWORD PTR [esi],eax
   1388c:	mov    ecx,eax
   1388e:	mov    eax,DWORD PTR [ecx+0x4]
   13891:	cmp    ecx,DWORD PTR [eax+0x8]
   13894:	je     0x1388a
   13896:	mov    ecx,DWORD PTR [esi]
   13898:	cmp    DWORD PTR [ecx+0x8],eax
   1389b:	je     0x1389f
   1389d:	mov    DWORD PTR [esi],eax
   1389f:	pop    esi
   138a0:	ret    
   138a1:	int3   
   138a2:	int3   
   138a3:	int3   
   138a4:	int3   
   138a5:	int3   
   138a6:	mov    edi,edi
   138a8:	push   ebp
   138a9:	mov    ebp,esp
   138ab:	push   esi
   138ac:	push   DWORD PTR [ebp+0x8]
   138af:	mov    esi,ecx
   138b1:	call   0x1298e
   138b6:	push   DWORD PTR [ebp+0xc]
   138b9:	lea    ecx,[esi+0x8]
   138bc:	call   0x12c28
   138c1:	mov    eax,esi
   138c3:	pop    esi
   138c4:	pop    ebp
   138c5:	ret    0x8
   138c8:	int3   
   138c9:	int3   
   138ca:	int3   
   138cb:	int3   
   138cc:	int3   
   138cd:	int3   
   138ce:	mov    edi,edi
   138d0:	push   ebp
   138d1:	mov    ebp,esp
   138d3:	push   ebx
   138d4:	push   esi
   138d5:	push   edi
   138d6:	mov    edi,DWORD PTR [ebp+0x8]
   138d9:	mov    ebx,ecx
   138db:	mov    esi,edi
   138dd:	cmp    edi,DWORD PTR ds:0x7f8b8
   138e3:	je     0x13902
   138e5:	push   DWORD PTR [esi+0x8]
   138e8:	mov    ecx,ebx
   138ea:	call   0x138ce
   138ef:	mov    esi,DWORD PTR [esi]
   138f1:	push   edi
   138f2:	call   0x1da14
   138f7:	pop    ecx
   138f8:	mov    edi,esi
   138fa:	cmp    esi,DWORD PTR ds:0x7f8b8
   13900:	jne    0x138e5
   13902:	pop    edi
   13903:	pop    esi
   13904:	pop    ebx
   13905:	pop    ebp
   13906:	ret    0x4
   13909:	int3   
   1390a:	int3   
   1390b:	int3   
   1390c:	int3   
   1390d:	int3   
   1390e:	mov    edi,edi
   13910:	push   ebp
   13911:	mov    ebp,esp
   13913:	push   ebx
   13914:	push   esi
   13915:	push   edi
   13916:	mov    edi,DWORD PTR [ebp+0x8]
   13919:	mov    ebx,ecx
   1391b:	mov    esi,edi
   1391d:	cmp    edi,DWORD PTR ds:0x7f8bc
   13923:	je     0x13942
   13925:	push   DWORD PTR [esi+0x8]
   13928:	mov    ecx,ebx
   1392a:	call   0x1390e
   1392f:	mov    esi,DWORD PTR [esi]
   13931:	push   edi
   13932:	call   0x1da14
   13937:	pop    ecx
   13938:	mov    edi,esi
   1393a:	cmp    esi,DWORD PTR ds:0x7f8bc
   13940:	jne    0x13925
   13942:	pop    edi
   13943:	pop    esi
   13944:	pop    ebx
   13945:	pop    ebp
   13946:	ret    0x4
   13949:	int3   
   1394a:	int3   
   1394b:	int3   
   1394c:	int3   
   1394d:	int3   
   1394e:	mov    edi,edi
   13950:	push   ebp
   13951:	mov    ebp,esp
   13953:	push   0x0
   13955:	push   0x18
   13957:	call   0x11618
   1395c:	mov    ecx,DWORD PTR [ebp+0x8]
   1395f:	mov    DWORD PTR [eax+0x4],ecx
   13962:	mov    ecx,DWORD PTR [ebp+0xc]
   13965:	mov    DWORD PTR [eax+0x14],ecx
   13968:	pop    ebp
   13969:	ret    0x8
   1396c:	int3   
   1396d:	int3   
   1396e:	int3   
   1396f:	int3   
   13970:	int3   
   13971:	int3   
   13972:	mov    edi,edi
   13974:	push   ebp
   13975:	mov    ebp,esp
   13977:	push   0x0
   13979:	push   0x70
   1397b:	call   0x11618
   13980:	mov    ecx,DWORD PTR [ebp+0x8]
   13983:	mov    DWORD PTR [eax+0x4],ecx
   13986:	mov    ecx,DWORD PTR [ebp+0xc]
   13989:	mov    DWORD PTR [eax+0x68],ecx
   1398c:	pop    ebp
   1398d:	ret    0x8
   13990:	int3   
   13991:	int3   
   13992:	int3   
   13993:	int3   
   13994:	int3   
   13995:	int3   
   13996:	mov    edi,edi
   13998:	push   ebp
   13999:	mov    ebp,esp
   1399b:	push   0x0
   1399d:	push   0x14
   1399f:	call   0x11618
   139a4:	mov    ecx,DWORD PTR [ebp+0x8]
   139a7:	mov    DWORD PTR [eax+0x4],ecx
   139aa:	mov    ecx,DWORD PTR [ebp+0xc]
   139ad:	mov    DWORD PTR [eax+0x10],ecx
   139b0:	pop    ebp
   139b1:	ret    0x8
   139b4:	int3   
   139b5:	int3   
   139b6:	int3   
   139b7:	int3   
   139b8:	int3   
   139b9:	int3   
   139ba:	mov    edi,edi
   139bc:	push   ebp
   139bd:	mov    ebp,esp
   139bf:	push   0x0
   139c1:	push   0x78
   139c3:	call   0x11618
   139c8:	mov    ecx,DWORD PTR [ebp+0x8]
   139cb:	mov    DWORD PTR [eax+0x4],ecx
   139ce:	mov    ecx,DWORD PTR [ebp+0xc]
   139d1:	mov    DWORD PTR [eax+0x70],ecx
   139d4:	pop    ebp
   139d5:	ret    0x8
   139d8:	int3   
   139d9:	int3   
   139da:	int3   
   139db:	int3   
   139dc:	int3   
   139dd:	int3   
   139de:	mov    edi,edi
   139e0:	push   ebp
   139e1:	mov    ebp,esp
   139e3:	push   0x0
   139e5:	push   0x20
   139e7:	call   0x11618
   139ec:	mov    ecx,DWORD PTR [ebp+0x8]
   139ef:	mov    DWORD PTR [eax+0x4],ecx
   139f2:	mov    ecx,DWORD PTR [ebp+0xc]
   139f5:	mov    DWORD PTR [eax+0x1c],ecx
   139f8:	pop    ebp
   139f9:	ret    0x8
   139fc:	int3   
   139fd:	int3   
   139fe:	int3   
   139ff:	int3   
   13a00:	int3   
   13a01:	int3   
   13a02:	mov    edi,edi
   13a04:	push   ebp
   13a05:	mov    ebp,esp
   13a07:	push   ecx
   13a08:	push   DWORD PTR [ebp-0x4]
   13a0b:	push   DWORD PTR [ebp+0x10]
   13a0e:	push   DWORD PTR [ebp+0xc]
   13a11:	push   DWORD PTR [ebp+0x8]
   13a14:	call   0x13622
   13a19:	add    esp,0x10
   13a1c:	leave  
   13a1d:	ret    
   13a1e:	int3   
   13a1f:	int3   
   13a20:	int3   
   13a21:	int3   
   13a22:	int3   
   13a23:	int3   
   13a24:	mov    edi,edi
   13a26:	push   ebp
   13a27:	mov    ebp,esp
   13a29:	push   ecx
   13a2a:	push   DWORD PTR [ebp-0x4]
   13a2d:	push   DWORD PTR [ebp+0x10]
   13a30:	push   DWORD PTR [ebp+0xc]
   13a33:	push   DWORD PTR [ebp+0x8]
   13a36:	call   0x1364c
   13a3b:	add    esp,0x10
   13a3e:	leave  
   13a3f:	ret    
   13a40:	int3   
   13a41:	int3   
   13a42:	int3   
   13a43:	int3   
   13a44:	int3   
   13a45:	int3   
   13a46:	mov    edi,edi
   13a48:	push   ebp
   13a49:	mov    ebp,esp
   13a4b:	push   ecx
   13a4c:	push   DWORD PTR [ebp-0x4]
   13a4f:	push   DWORD PTR [ebp+0x10]
   13a52:	push   DWORD PTR [ebp+0xc]
   13a55:	push   DWORD PTR [ebp+0x8]
   13a58:	call   0x13676
   13a5d:	add    esp,0x10
   13a60:	leave  
   13a61:	ret    
   13a62:	int3   
   13a63:	int3   
   13a64:	int3   
   13a65:	int3   
   13a66:	int3   
   13a67:	int3   
   13a68:	mov    edi,edi
   13a6a:	push   ebp
   13a6b:	mov    ebp,esp
   13a6d:	push   ecx
   13a6e:	push   DWORD PTR [ebp-0x4]
   13a71:	push   DWORD PTR [ebp+0x10]
   13a74:	push   DWORD PTR [ebp+0xc]
   13a77:	push   DWORD PTR [ebp+0x8]
   13a7a:	call   0x136a0
   13a7f:	add    esp,0x10
   13a82:	leave  
   13a83:	ret    
   13a84:	int3   
   13a85:	int3   
   13a86:	int3   
   13a87:	int3   
   13a88:	int3   
   13a89:	int3   
   13a8a:	mov    edi,edi
   13a8c:	push   ebp
   13a8d:	mov    ebp,esp
   13a8f:	mov    ecx,DWORD PTR [ebp+0x8]
   13a92:	test   ecx,ecx
   13a94:	je     0x13a9e
   13a96:	push   DWORD PTR [ebp+0xc]
   13a99:	call   0x134d6
   13a9e:	pop    ebp
   13a9f:	ret    0x8
   13aa2:	int3   
   13aa3:	int3   
   13aa4:	int3   
   13aa5:	int3   
   13aa6:	int3   
   13aa7:	int3   
   13aa8:	mov    edi,edi
   13aaa:	push   ebp
   13aab:	mov    ebp,esp
   13aad:	mov    ecx,DWORD PTR [ebp+0x8]
   13ab0:	test   ecx,ecx
   13ab2:	je     0x13abc
   13ab4:	push   DWORD PTR [ebp+0xc]
   13ab7:	call   0x13502
   13abc:	pop    ebp
   13abd:	ret    0x8
   13ac0:	int3   
   13ac1:	int3   
   13ac2:	int3   
   13ac3:	int3   
   13ac4:	int3   
   13ac5:	int3   
   13ac6:	mov    edi,edi
   13ac8:	push   ebp
   13ac9:	mov    ebp,esp
   13acb:	mov    ecx,DWORD PTR [ebp+0x8]
   13ace:	push   0x0
   13ad0:	call   0x1352e
   13ad5:	pop    ebp
   13ad6:	ret    0x4
   13ad9:	int3   
   13ada:	int3   
   13adb:	int3   
   13adc:	int3   
   13add:	int3   
   13ade:	mov    edi,edi
   13ae0:	push   ebp
   13ae1:	mov    ebp,esp
   13ae3:	mov    ecx,DWORD PTR [ebp+0x8]
   13ae6:	test   ecx,ecx
   13ae8:	je     0x13af2
   13aea:	push   DWORD PTR [ebp+0xc]
   13aed:	call   0x1346c
   13af2:	pop    ebp
   13af3:	ret    0x8
   13af6:	int3   
   13af7:	int3   
   13af8:	int3   
   13af9:	int3   
   13afa:	int3   
   13afb:	int3   
   13afc:	mov    edi,edi
   13afe:	push   ebp
   13aff:	mov    ebp,esp
   13b01:	mov    ecx,DWORD PTR [ebp+0x8]
   13b04:	test   ecx,ecx
   13b06:	je     0x13b10
   13b08:	push   DWORD PTR [ebp+0xc]
   13b0b:	call   0x13554
   13b10:	pop    ebp
   13b11:	ret    0x8
   13b14:	int3   
   13b15:	int3   
   13b16:	int3   
   13b17:	int3   
   13b18:	int3   
   13b19:	int3   
   13b1a:	mov    edi,edi
   13b1c:	push   ebp
   13b1d:	mov    ebp,esp
   13b1f:	mov    ecx,DWORD PTR [ebp+0x8]
   13b22:	push   0x0
   13b24:	call   0x1357c
   13b29:	pop    ebp
   13b2a:	ret    0x4
   13b2d:	int3   
   13b2e:	int3   
   13b2f:	int3   
   13b30:	int3   
   13b31:	int3   
   13b32:	mov    edi,edi
   13b34:	push   ebp
   13b35:	mov    ebp,esp
   13b37:	mov    ecx,DWORD PTR [ebp+0x8]
   13b3a:	test   ecx,ecx
   13b3c:	je     0x13b46
   13b3e:	push   DWORD PTR [ebp+0xc]
   13b41:	call   0x13440
   13b46:	pop    ebp
   13b47:	ret    0x8
   13b4a:	int3   
   13b4b:	int3   
   13b4c:	int3   
   13b4d:	int3   
   13b4e:	int3   
   13b4f:	int3   
   13b50:	mov    edi,edi
   13b52:	push   ebp
   13b53:	mov    ebp,esp
   13b55:	push   ecx
   13b56:	mov    eax,ds:0x7f8bc
   13b5b:	push   ebx
   13b5c:	mov    ebx,DWORD PTR [ebp+0xc]
   13b5f:	push   esi
   13b60:	mov    esi,DWORD PTR [ebp+0x8]
   13b63:	mov    DWORD PTR [ebp-0x4],ecx
   13b66:	mov    DWORD PTR [ebp+0x8],esi
   13b69:	cmp    esi,eax
   13b6b:	je     0x13bb0
   13b6d:	push   edi
   13b6e:	push   DWORD PTR [esi+0x10]
   13b71:	mov    ecx,DWORD PTR [ebp-0x4]
   13b74:	push   ebx
   13b75:	call   0x13996
   13b7a:	mov    edi,eax
   13b7c:	cmp    DWORD PTR [ebp+0x8],esi
   13b7f:	jne    0x13b84
   13b81:	mov    DWORD PTR [ebp+0x8],edi
   13b84:	mov    ecx,DWORD PTR [ebp-0x4]
   13b87:	push   edi
   13b88:	push   DWORD PTR [esi+0x8]
   13b8b:	call   0x13b50
   13b90:	mov    DWORD PTR [edi+0x8],eax
   13b93:	lea    eax,[esi+0xc]
   13b96:	push   eax
   13b97:	lea    eax,[edi+0xc]
   13b9a:	push   eax
   13b9b:	call   0x1a3d2
   13ba0:	mov    DWORD PTR [ebx],edi
   13ba2:	mov    esi,DWORD PTR [esi]
   13ba4:	mov    eax,ds:0x7f8bc
   13ba9:	mov    ebx,edi
   13bab:	cmp    esi,eax
   13bad:	jne    0x13b6e
   13baf:	pop    edi
   13bb0:	mov    DWORD PTR [ebx],eax
   13bb2:	mov    eax,DWORD PTR [ebp+0x8]
   13bb5:	pop    esi
   13bb6:	pop    ebx
   13bb7:	leave  
   13bb8:	ret    0x8
   13bbb:	int3   
   13bbc:	int3   
   13bbd:	int3   
   13bbe:	int3   
   13bbf:	int3   
   13bc0:	mov    edi,edi
   13bc2:	push   ebp
   13bc3:	mov    ebp,esp
   13bc5:	push   ecx
   13bc6:	push   esi
   13bc7:	push   edi
   13bc8:	mov    edi,DWORD PTR [ebp+0xc]
   13bcb:	push   edi
   13bcc:	mov    esi,ecx
   13bce:	call   0x12cd0
   13bd3:	mov    esi,DWORD PTR [esi+0x4]
   13bd6:	mov    DWORD PTR [ebp+0xc],eax
   13bd9:	cmp    eax,esi
   13bdb:	je     0x13be9
   13bdd:	mov    ecx,DWORD PTR [edi]
   13bdf:	cmp    ecx,DWORD PTR [eax+0xc]
   13be2:	jb     0x13be9
   13be4:	lea    eax,[ebp+0xc]
   13be7:	jmp    0x13bef
   13be9:	mov    DWORD PTR [ebp-0x4],esi
   13bec:	lea    eax,[ebp-0x4]
   13bef:	mov    ecx,DWORD PTR [eax]
   13bf1:	mov    eax,DWORD PTR [ebp+0x8]
   13bf4:	pop    edi
   13bf5:	mov    DWORD PTR [eax],ecx
   13bf7:	pop    esi
   13bf8:	leave  
   13bf9:	ret    0x8
   13bfc:	int3   
   13bfd:	int3   
   13bfe:	int3   
   13bff:	int3   
   13c00:	int3   
   13c01:	int3   
   13c02:	mov    edi,edi
   13c04:	push   ebp
   13c05:	mov    ebp,esp
   13c07:	push   ecx
   13c08:	push   esi
   13c09:	push   DWORD PTR [ebp+0xc]
   13c0c:	mov    esi,ecx
   13c0e:	call   0x12da6
   13c13:	mov    DWORD PTR [ebp-0x4],eax
   13c16:	cmp    eax,DWORD PTR [esi+0x4]
   13c19:	je     0x13c30
   13c1b:	add    eax,0x10
   13c1e:	push   eax
   13c1f:	push   DWORD PTR [ebp+0xc]
   13c22:	call   0x197a4
   13c27:	test   al,al
   13c29:	jne    0x13c30
   13c2b:	lea    eax,[ebp-0x4]
   13c2e:	jmp    0x13c39
   13c30:	mov    eax,DWORD PTR [esi+0x4]
   13c33:	mov    DWORD PTR [ebp+0xc],eax
   13c36:	lea    eax,[ebp+0xc]
   13c39:	mov    ecx,DWORD PTR [eax]
   13c3b:	mov    eax,DWORD PTR [ebp+0x8]
   13c3e:	mov    DWORD PTR [eax],ecx
   13c40:	pop    esi
   13c41:	leave  
   13c42:	ret    0x8
   13c45:	int3   
   13c46:	int3   
   13c47:	int3   
   13c48:	int3   
   13c49:	int3   
   13c4a:	mov    edi,edi
   13c4c:	push   ebp
   13c4d:	mov    ebp,esp
   13c4f:	push   ecx
   13c50:	push   esi
   13c51:	push   DWORD PTR [ebp+0xc]
   13c54:	mov    esi,ecx
   13c56:	call   0x12de6
   13c5b:	mov    DWORD PTR [ebp-0x4],eax
   13c5e:	cmp    eax,DWORD PTR [esi+0x4]
   13c61:	je     0x13c78
   13c63:	add    eax,0xc
   13c66:	push   eax
   13c67:	push   DWORD PTR [ebp+0xc]
   13c6a:	call   0x197a4
   13c6f:	test   al,al
   13c71:	jne    0x13c78
   13c73:	lea    eax,[ebp-0x4]
   13c76:	jmp    0x13c81
   13c78:	mov    eax,DWORD PTR [esi+0x4]
   13c7b:	mov    DWORD PTR [ebp+0xc],eax
   13c7e:	lea    eax,[ebp+0xc]
   13c81:	mov    ecx,DWORD PTR [eax]
   13c83:	mov    eax,DWORD PTR [ebp+0x8]
   13c86:	mov    DWORD PTR [eax],ecx
   13c88:	pop    esi
   13c89:	leave  
   13c8a:	ret    0x8
   13c8d:	int3   
   13c8e:	int3   
   13c8f:	int3   
   13c90:	int3   
   13c91:	int3   
   13c92:	mov    edi,edi
   13c94:	push   ebp
   13c95:	mov    ebp,esp
   13c97:	push   ecx
   13c98:	push   esi
   13c99:	push   edi
   13c9a:	mov    edi,DWORD PTR [ebp+0xc]
   13c9d:	push   edi
   13c9e:	mov    esi,ecx
   13ca0:	call   0x12e26
   13ca5:	mov    esi,DWORD PTR [esi+0x4]
   13ca8:	mov    DWORD PTR [ebp+0xc],eax
   13cab:	cmp    eax,esi
   13cad:	je     0x13cbb
   13caf:	mov    ecx,DWORD PTR [edi]
   13cb1:	cmp    ecx,DWORD PTR [eax+0xc]
   13cb4:	jl     0x13cbb
   13cb6:	lea    eax,[ebp+0xc]
   13cb9:	jmp    0x13cc1
   13cbb:	mov    DWORD PTR [ebp-0x4],esi
   13cbe:	lea    eax,[ebp-0x4]
   13cc1:	mov    ecx,DWORD PTR [eax]
   13cc3:	mov    eax,DWORD PTR [ebp+0x8]
   13cc6:	pop    edi
   13cc7:	mov    DWORD PTR [eax],ecx
   13cc9:	pop    esi
   13cca:	leave  
   13ccb:	ret    0x8
   13cce:	int3   
   13ccf:	int3   
   13cd0:	int3   
   13cd1:	int3   
   13cd2:	int3   
   13cd3:	int3   
   13cd4:	mov    edi,edi
   13cd6:	push   ebp
   13cd7:	mov    ebp,esp
   13cd9:	push   ecx
   13cda:	mov    eax,DWORD PTR [ecx]
   13cdc:	lea    ecx,[ebp-0x4]
   13cdf:	mov    DWORD PTR [ebp-0x4],eax
   13ce2:	call   0x12e94
   13ce7:	mov    eax,DWORD PTR [ebp-0x4]
   13cea:	add    eax,0xc
   13ced:	leave  
   13cee:	ret    
   13cef:	int3   
   13cf0:	int3   
   13cf1:	int3   
   13cf2:	int3   
   13cf3:	int3   
   13cf4:	mov    edi,edi
   13cf6:	push   ebp
   13cf7:	mov    ebp,esp
   13cf9:	push   ecx
   13cfa:	push   esi
   13cfb:	push   DWORD PTR [ebp+0xc]
   13cfe:	mov    esi,ecx
   13d00:	call   0x12fa8
   13d05:	mov    DWORD PTR [ebp-0x4],eax
   13d08:	cmp    eax,DWORD PTR [esi+0x4]
   13d0b:	je     0x13d22
   13d0d:	add    eax,0x10
   13d10:	push   eax
   13d11:	push   DWORD PTR [ebp+0xc]
   13d14:	call   0x197a4
   13d19:	test   al,al
   13d1b:	jne    0x13d22
   13d1d:	lea    eax,[ebp-0x4]
   13d20:	jmp    0x13d2b
   13d22:	mov    eax,DWORD PTR [esi+0x4]
   13d25:	mov    DWORD PTR [ebp+0xc],eax
   13d28:	lea    eax,[ebp+0xc]
   13d2b:	mov    ecx,DWORD PTR [eax]
   13d2d:	mov    eax,DWORD PTR [ebp+0x8]
   13d30:	mov    DWORD PTR [eax],ecx
   13d32:	pop    esi
   13d33:	leave  
   13d34:	ret    0x8
   13d37:	int3   
   13d38:	int3   
   13d39:	int3   
   13d3a:	int3   
   13d3b:	int3   
   13d3c:	mov    edi,edi
   13d3e:	push   ebp
   13d3f:	mov    ebp,esp
   13d41:	push   ecx
   13d42:	push   ecx
   13d43:	push   ebx
   13d44:	push   esi
   13d45:	mov    DWORD PTR [ebp-0x4],ecx
   13d48:	push   edi
   13d49:	mov    edi,DWORD PTR [ebp+0xc]
   13d4c:	lea    ecx,[ebp+0xc]
   13d4f:	call   0x112ca
   13d54:	mov    esi,DWORD PTR [edi]
   13d56:	mov    eax,ds:0x7f8b8
   13d5b:	mov    ebx,edi
   13d5d:	mov    DWORD PTR [ebp-0x8],esi
   13d60:	cmp    esi,eax
   13d62:	jne    0x13d80
   13d64:	mov    esi,DWORD PTR [edi+0x8]
   13d67:	mov    eax,DWORD PTR [ebx+0x4]
   13d6a:	mov    ecx,DWORD PTR [ebp-0x4]
   13d6d:	mov    DWORD PTR [esi+0x4],eax
   13d70:	mov    eax,DWORD PTR [ecx+0x4]
   13d73:	cmp    DWORD PTR [eax+0x4],edi
   13d76:	jne    0x13df5
   13d78:	mov    DWORD PTR [eax+0x4],esi
   13d7b:	jmp    0x13e03
   13d80:	mov    ecx,DWORD PTR [edi+0x8]
   13d83:	cmp    ecx,eax
   13d85:	je     0x13d67
   13d87:	push   ecx
   13d88:	call   0x111e0
   13d8d:	mov    ebx,eax
   13d8f:	mov    esi,DWORD PTR [ebx+0x8]
   13d92:	cmp    ebx,edi
   13d94:	je     0x13d67
   13d96:	mov    eax,DWORD PTR [ebp-0x8]
   13d99:	mov    DWORD PTR [eax+0x4],ebx
   13d9c:	mov    eax,DWORD PTR [edi]
   13d9e:	mov    DWORD PTR [ebx],eax
   13da0:	cmp    ebx,DWORD PTR [edi+0x8]
   13da3:	jne    0x13daa
   13da5:	mov    DWORD PTR [esi+0x4],ebx
   13da8:	jmp    0x13dc1
   13daa:	mov    eax,DWORD PTR [ebx+0x4]
   13dad:	mov    DWORD PTR [esi+0x4],eax
   13db0:	mov    eax,DWORD PTR [ebx+0x4]
   13db3:	mov    DWORD PTR [eax],esi
   13db5:	mov    eax,DWORD PTR [edi+0x8]
   13db8:	mov    DWORD PTR [ebx+0x8],eax
   13dbb:	mov    eax,DWORD PTR [edi+0x8]
   13dbe:	mov    DWORD PTR [eax+0x4],ebx
   13dc1:	mov    eax,DWORD PTR [ebp-0x4]
   13dc4:	mov    eax,DWORD PTR [eax+0x4]
   13dc7:	cmp    DWORD PTR [eax+0x4],edi
   13dca:	jne    0x13dd1
   13dcc:	mov    DWORD PTR [eax+0x4],ebx
   13dcf:	jmp    0x13ddf
   13dd1:	mov    eax,DWORD PTR [edi+0x4]
   13dd4:	cmp    DWORD PTR [eax],edi
   13dd6:	jne    0x13ddc
   13dd8:	mov    DWORD PTR [eax],ebx
   13dda:	jmp    0x13ddf
   13ddc:	mov    DWORD PTR [eax+0x8],ebx
   13ddf:	mov    eax,DWORD PTR [edi+0x4]
   13de2:	mov    DWORD PTR [ebx+0x4],eax
   13de5:	mov    eax,DWORD PTR [ebx+0x14]
   13de8:	mov    ecx,DWORD PTR [edi+0x14]
   13deb:	mov    DWORD PTR [ebx+0x14],ecx
   13dee:	mov    DWORD PTR [edi+0x14],eax
   13df1:	mov    ebx,edi
   13df3:	jmp    0x13e56
   13df5:	mov    eax,DWORD PTR [edi+0x4]
   13df8:	cmp    DWORD PTR [eax],edi
   13dfa:	jne    0x13e00
   13dfc:	mov    DWORD PTR [eax],esi
   13dfe:	jmp    0x13e03
   13e00:	mov    DWORD PTR [eax+0x8],esi
   13e03:	mov    eax,DWORD PTR [ecx+0x4]
   13e06:	mov    DWORD PTR [ebp-0x8],eax
   13e09:	cmp    DWORD PTR [eax],edi
   13e0b:	jne    0x13e2d
   13e0d:	mov    edx,DWORD PTR [edi+0x8]
   13e10:	cmp    edx,DWORD PTR ds:0x7f8b8
   13e16:	jne    0x13e1f
   13e18:	mov    edx,DWORD PTR [edi+0x4]
   13e1b:	mov    DWORD PTR [eax],edx
   13e1d:	jmp    0x13e2d
   13e1f:	push   esi
   13e20:	call   0x111e0
   13e25:	mov    ecx,DWORD PTR [ebp-0x8]
   13e28:	mov    DWORD PTR [ecx],eax
   13e2a:	mov    ecx,DWORD PTR [ebp-0x4]
   13e2d:	mov    eax,DWORD PTR [ecx+0x4]
   13e30:	mov    DWORD PTR [ebp-0x8],eax
   13e33:	cmp    DWORD PTR [eax+0x8],edi
   13e36:	jne    0x13e56
   13e38:	mov    ecx,DWORD PTR [edi]
   13e3a:	cmp    ecx,DWORD PTR ds:0x7f8b8
   13e40:	jne    0x13e4a
   13e42:	mov    ecx,DWORD PTR [edi+0x4]
   13e45:	mov    DWORD PTR [eax+0x8],ecx
   13e48:	jmp    0x13e56
   13e4a:	push   esi
   13e4b:	call   0x111be
   13e50:	mov    ecx,DWORD PTR [ebp-0x8]
   13e53:	mov    DWORD PTR [ecx+0x8],eax
   13e56:	xor    edi,edi
   13e58:	inc    edi
   13e59:	cmp    DWORD PTR [ebx+0x14],edi
   13e5c:	jne    0x13f73
   13e62:	jmp    0x13f21
   13e67:	cmp    DWORD PTR [esi+0x14],edi
   13e6a:	jne    0x13f70
   13e70:	mov    eax,DWORD PTR [esi+0x4]
   13e73:	cmp    esi,DWORD PTR [eax]
   13e75:	jne    0x13eec
   13e77:	mov    eax,DWORD PTR [eax+0x8]
   13e7a:	cmp    DWORD PTR [eax+0x14],0x0
   13e7e:	jne    0x13e98
   13e80:	mov    DWORD PTR [eax+0x14],edi
   13e83:	mov    eax,DWORD PTR [esi+0x4]
   13e86:	and    DWORD PTR [eax+0x14],0x0
   13e8a:	push   DWORD PTR [esi+0x4]
   13e8d:	call   0x12d08
   13e92:	mov    eax,DWORD PTR [esi+0x4]
   13e95:	mov    eax,DWORD PTR [eax+0x8]
   13e98:	mov    ecx,DWORD PTR [eax]
   13e9a:	cmp    DWORD PTR [ecx+0x14],edi
   13e9d:	jne    0x13ea7
   13e9f:	mov    ecx,DWORD PTR [eax+0x8]
   13ea2:	cmp    DWORD PTR [ecx+0x14],edi
   13ea5:	je     0x13f1a
   13ea7:	mov    ecx,DWORD PTR [eax+0x8]
   13eaa:	cmp    DWORD PTR [ecx+0x14],edi
   13ead:	jne    0x13ec7
   13eaf:	mov    ecx,DWORD PTR [eax]
   13eb1:	mov    DWORD PTR [ecx+0x14],edi
   13eb4:	mov    ecx,DWORD PTR [ebp-0x4]
   13eb7:	and    DWORD PTR [eax+0x14],0x0
   13ebb:	push   eax
   13ebc:	call   0x12d56
   13ec1:	mov    eax,DWORD PTR [esi+0x4]
   13ec4:	mov    eax,DWORD PTR [eax+0x8]
   13ec7:	mov    ecx,DWORD PTR [esi+0x4]
   13eca:	mov    ecx,DWORD PTR [ecx+0x14]
   13ecd:	mov    DWORD PTR [eax+0x14],ecx
   13ed0:	mov    ecx,DWORD PTR [esi+0x4]
   13ed3:	mov    DWORD PTR [ecx+0x14],edi
   13ed6:	mov    eax,DWORD PTR [eax+0x8]
   13ed9:	mov    ecx,DWORD PTR [ebp-0x4]
   13edc:	mov    DWORD PTR [eax+0x14],edi
   13edf:	push   DWORD PTR [esi+0x4]
   13ee2:	call   0x12d08
   13ee7:	jmp    0x13f70
   13eec:	mov    eax,DWORD PTR [eax]
   13eee:	cmp    DWORD PTR [eax+0x14],0x0
   13ef2:	jne    0x13f0b
   13ef4:	mov    DWORD PTR [eax+0x14],edi
   13ef7:	mov    eax,DWORD PTR [esi+0x4]
   13efa:	and    DWORD PTR [eax+0x14],0x0
   13efe:	push   DWORD PTR [esi+0x4]
   13f01:	call   0x12d56
   13f06:	mov    eax,DWORD PTR [esi+0x4]
   13f09:	mov    eax,DWORD PTR [eax]
   13f0b:	mov    ecx,DWORD PTR [eax+0x8]
   13f0e:	cmp    DWORD PTR [ecx+0x14],edi
   13f11:	jne    0x13f32
   13f13:	mov    ecx,DWORD PTR [eax]
   13f15:	cmp    DWORD PTR [ecx+0x14],edi
   13f18:	jne    0x13f32
   13f1a:	and    DWORD PTR [eax+0x14],0x0
   13f1e:	mov    esi,DWORD PTR [esi+0x4]
   13f21:	mov    ecx,DWORD PTR [ebp-0x4]
   13f24:	mov    eax,DWORD PTR [ecx+0x4]
   13f27:	cmp    esi,DWORD PTR [eax+0x4]
   13f2a:	jne    0x13e67
   13f30:	jmp    0x13f70
   13f32:	mov    ecx,DWORD PTR [eax]
   13f34:	cmp    DWORD PTR [ecx+0x14],edi
   13f37:	jne    0x13f51
   13f39:	mov    ecx,DWORD PTR [eax+0x8]
   13f3c:	mov    DWORD PTR [ecx+0x14],edi
   13f3f:	mov    ecx,DWORD PTR [ebp-0x4]
   13f42:	and    DWORD PTR [eax+0x14],0x0
   13f46:	push   eax
   13f47:	call   0x12d08
   13f4c:	mov    eax,DWORD PTR [esi+0x4]
   13f4f:	mov    eax,DWORD PTR [eax]
   13f51:	mov    ecx,DWORD PTR [esi+0x4]
   13f54:	mov    ecx,DWORD PTR [ecx+0x14]
   13f57:	mov    DWORD PTR [eax+0x14],ecx
   13f5a:	mov    ecx,DWORD PTR [esi+0x4]
   13f5d:	mov    DWORD PTR [ecx+0x14],edi
   13f60:	mov    eax,DWORD PTR [eax]
   13f62:	mov    ecx,DWORD PTR [ebp-0x4]
   13f65:	mov    DWORD PTR [eax+0x14],edi
   13f68:	push   DWORD PTR [esi+0x4]
   13f6b:	call   0x12d56
   13f70:	mov    DWORD PTR [esi+0x14],edi
   13f73:	push   ebx
   13f74:	call   0x1da14
   13f79:	mov    eax,DWORD PTR [ebp-0x4]
   13f7c:	dec    DWORD PTR [eax+0xc]
   13f7f:	mov    eax,DWORD PTR [ebp+0x8]
   13f82:	pop    ecx
   13f83:	mov    ecx,DWORD PTR [ebp+0xc]
   13f86:	pop    edi
   13f87:	pop    esi
   13f88:	mov    DWORD PTR [eax],ecx
   13f8a:	pop    ebx
   13f8b:	leave  
   13f8c:	ret    0x8
   13f8f:	int3   
   13f90:	int3   
   13f91:	int3   
   13f92:	int3   
   13f93:	int3   
   13f94:	mov    edi,edi
   13f96:	push   ebp
   13f97:	mov    ebp,esp
   13f99:	push   esi
   13f9a:	push   edi
   13f9b:	push   DWORD PTR [ebp+0xc]
   13f9e:	mov    edi,ecx
   13fa0:	call   0x13086
   13fa5:	push   DWORD PTR [ebp+0xc]
   13fa8:	mov    ecx,edi
   13faa:	mov    esi,eax
   13fac:	call   0x12cd0
   13fb1:	mov    ecx,DWORD PTR [ebp+0x8]
   13fb4:	pop    edi
   13fb5:	mov    DWORD PTR [ecx],eax
   13fb7:	mov    DWORD PTR [ecx+0x4],esi
   13fba:	mov    eax,ecx
   13fbc:	pop    esi
   13fbd:	pop    ebp
   13fbe:	ret    0x8
   13fc1:	int3   
   13fc2:	int3   
   13fc3:	int3   
   13fc4:	int3   
   13fc5:	int3   
   13fc6:	mov    edi,edi
   13fc8:	push   esi
   13fc9:	push   edi
   13fca:	push   0x1
   13fcc:	xor    edi,edi
   13fce:	push   edi
   13fcf:	mov    esi,ecx
   13fd1:	call   0x1394e
   13fd6:	cmp    DWORD PTR ds:0x7f8b8,edi
   13fdc:	jne    0x13ff3
   13fde:	mov    ecx,eax
   13fe0:	mov    DWORD PTR ds:0x7f8b8,ecx
   13fe6:	mov    DWORD PTR [ecx],edi
   13fe8:	mov    ecx,DWORD PTR ds:0x7f8b8
   13fee:	xor    eax,eax
   13ff0:	mov    DWORD PTR [ecx+0x8],edi
   13ff3:	inc    DWORD PTR ds:0x7fa10
   13ff9:	cmp    eax,edi
   13ffb:	je     0x14004
   13ffd:	push   eax
   13ffe:	call   0x1da14
   14003:	pop    ecx
   14004:	push   edi
   14005:	push   DWORD PTR ds:0x7f8b8
   1400b:	mov    ecx,esi
   1400d:	call   0x1394e
   14012:	mov    DWORD PTR [esi+0xc],edi
   14015:	mov    DWORD PTR [esi+0x4],eax
   14018:	mov    DWORD PTR [eax],eax
   1401a:	mov    esi,DWORD PTR [esi+0x4]
   1401d:	pop    edi
   1401e:	mov    DWORD PTR [esi+0x8],esi
   14021:	pop    esi
   14022:	ret    
   14023:	int3   
   14024:	int3   
   14025:	int3   
   14026:	int3   
   14027:	int3   
   14028:	mov    edi,edi
   1402a:	push   ebp
   1402b:	mov    ebp,esp
   1402d:	push   esi
   1402e:	push   edi
   1402f:	push   DWORD PTR [ebp+0xc]
   14032:	mov    edi,ecx
   14034:	call   0x130be
   14039:	push   DWORD PTR [ebp+0xc]
   1403c:	mov    ecx,edi
   1403e:	mov    esi,eax
   14040:	call   0x12da6
   14045:	mov    ecx,DWORD PTR [ebp+0x8]
   14048:	pop    edi
   14049:	mov    DWORD PTR [ecx],eax
   1404b:	mov    DWORD PTR [ecx+0x4],esi
   1404e:	mov    eax,ecx
   14050:	pop    esi
   14051:	pop    ebp
   14052:	ret    0x8
   14055:	int3   
   14056:	int3   
   14057:	int3   
   14058:	int3   
   14059:	int3   
   1405a:	mov    edi,edi
   1405c:	push   esi
   1405d:	push   edi
   1405e:	push   0x1
   14060:	xor    edi,edi
   14062:	push   edi
   14063:	mov    esi,ecx
   14065:	call   0x13972
   1406a:	cmp    DWORD PTR ds:0x7f8c4,edi
   14070:	jne    0x14087
   14072:	mov    ecx,eax
   14074:	mov    DWORD PTR ds:0x7f8c4,ecx
   1407a:	mov    DWORD PTR [ecx],edi
   1407c:	mov    ecx,DWORD PTR ds:0x7f8c4
   14082:	xor    eax,eax
   14084:	mov    DWORD PTR [ecx+0x8],edi
   14087:	inc    DWORD PTR ds:0x7fa14
   1408d:	cmp    eax,edi
   1408f:	je     0x14098
   14091:	push   eax
   14092:	call   0x1da14
   14097:	pop    ecx
   14098:	push   edi
   14099:	push   DWORD PTR ds:0x7f8c4
   1409f:	mov    ecx,esi
   140a1:	call   0x13972
   140a6:	mov    DWORD PTR [esi+0xc],edi
   140a9:	mov    DWORD PTR [esi+0x4],eax
   140ac:	mov    DWORD PTR [eax],eax
   140ae:	mov    esi,DWORD PTR [esi+0x4]
   140b1:	pop    edi
   140b2:	mov    DWORD PTR [esi+0x8],esi
   140b5:	pop    esi
   140b6:	ret    
   140b7:	int3   
   140b8:	int3   
   140b9:	int3   
   140ba:	int3   
   140bb:	int3   
   140bc:	mov    edi,edi
   140be:	push   ebp
   140bf:	mov    ebp,esp
   140c1:	push   esi
   140c2:	push   edi
   140c3:	push   DWORD PTR [ebp+0xc]
   140c6:	mov    edi,ecx
   140c8:	call   0x1319c
   140cd:	push   DWORD PTR [ebp+0xc]
   140d0:	mov    ecx,edi
   140d2:	mov    esi,eax
   140d4:	call   0x12de6
   140d9:	mov    ecx,DWORD PTR [ebp+0x8]
   140dc:	pop    edi
   140dd:	mov    DWORD PTR [ecx],eax
   140df:	mov    DWORD PTR [ecx+0x4],esi
   140e2:	mov    eax,ecx
   140e4:	pop    esi
   140e5:	pop    ebp
   140e6:	ret    0x8
   140e9:	int3   
   140ea:	int3   
   140eb:	int3   
   140ec:	int3   
   140ed:	int3   
   140ee:	mov    edi,edi
   140f0:	push   esi
   140f1:	push   edi
   140f2:	push   0x1
   140f4:	xor    edi,edi
   140f6:	push   edi
   140f7:	mov    esi,ecx
   140f9:	call   0x139de
   140fe:	cmp    DWORD PTR ds:0x7f8c8,edi
   14104:	jne    0x1411b
   14106:	mov    ecx,eax
   14108:	mov    DWORD PTR ds:0x7f8c8,ecx
   1410e:	mov    DWORD PTR [ecx],edi
   14110:	mov    ecx,DWORD PTR ds:0x7f8c8
   14116:	xor    eax,eax
   14118:	mov    DWORD PTR [ecx+0x8],edi
   1411b:	inc    DWORD PTR ds:0x7fa18
   14121:	cmp    eax,edi
   14123:	je     0x1412c
   14125:	push   eax
   14126:	call   0x1da14
   1412b:	pop    ecx
   1412c:	push   edi
   1412d:	push   DWORD PTR ds:0x7f8c8
   14133:	mov    ecx,esi
   14135:	call   0x139de
   1413a:	mov    DWORD PTR [esi+0xc],edi
   1413d:	mov    DWORD PTR [esi+0x4],eax
   14140:	mov    DWORD PTR [eax],eax
   14142:	mov    esi,DWORD PTR [esi+0x4]
   14145:	pop    edi
   14146:	mov    DWORD PTR [esi+0x8],esi
   14149:	pop    esi
   1414a:	ret    
   1414b:	int3   
   1414c:	int3   
   1414d:	int3   
   1414e:	int3   
   1414f:	int3   
   14150:	mov    edi,edi
   14152:	push   ebp
   14153:	mov    ebp,esp
   14155:	push   esi
   14156:	push   edi
   14157:	push   DWORD PTR [ebp+0xc]
   1415a:	mov    edi,ecx
   1415c:	call   0x1327a
   14161:	push   DWORD PTR [ebp+0xc]
   14164:	mov    ecx,edi
   14166:	mov    esi,eax
   14168:	call   0x12e26
   1416d:	mov    ecx,DWORD PTR [ebp+0x8]
   14170:	pop    edi
   14171:	mov    DWORD PTR [ecx],eax
   14173:	mov    DWORD PTR [ecx+0x4],esi
   14176:	mov    eax,ecx
   14178:	pop    esi
   14179:	pop    ebp
   1417a:	ret    0x8
   1417d:	int3   
   1417e:	int3   
   1417f:	int3   
   14180:	int3   
   14181:	int3   
   14182:	mov    edi,edi
   14184:	push   esi
   14185:	push   edi
   14186:	push   0x1
   14188:	xor    edi,edi
   1418a:	push   edi
   1418b:	mov    esi,ecx
   1418d:	call   0x1394e
   14192:	cmp    DWORD PTR ds:0x7f8cc,edi
   14198:	jne    0x141af
   1419a:	mov    ecx,eax
   1419c:	mov    DWORD PTR ds:0x7f8cc,ecx
   141a2:	mov    DWORD PTR [ecx],edi
   141a4:	mov    ecx,DWORD PTR ds:0x7f8cc
   141aa:	xor    eax,eax
   141ac:	mov    DWORD PTR [ecx+0x8],edi
   141af:	inc    DWORD PTR ds:0x7fa1c
   141b5:	cmp    eax,edi
   141b7:	je     0x141c0
   141b9:	push   eax
   141ba:	call   0x1da14
   141bf:	pop    ecx
   141c0:	push   edi
   141c1:	push   DWORD PTR ds:0x7f8cc
   141c7:	mov    ecx,esi
   141c9:	call   0x1394e
   141ce:	mov    DWORD PTR [esi+0xc],edi
   141d1:	mov    DWORD PTR [esi+0x4],eax
   141d4:	mov    DWORD PTR [eax],eax
   141d6:	mov    esi,DWORD PTR [esi+0x4]
   141d9:	pop    edi
   141da:	mov    DWORD PTR [esi+0x8],esi
   141dd:	pop    esi
   141de:	ret    
   141df:	int3   
   141e0:	int3   
   141e1:	int3   
   141e2:	int3   
   141e3:	int3   
   141e4:	mov    edi,edi
   141e6:	push   ebp
   141e7:	mov    ebp,esp
   141e9:	push   ecx
   141ea:	push   esi
   141eb:	push   DWORD PTR [ebp+0xc]
   141ee:	mov    esi,ecx
   141f0:	call   0x132b2
   141f5:	mov    DWORD PTR [ebp-0x4],eax
   141f8:	cmp    eax,DWORD PTR [esi+0x4]
   141fb:	je     0x14212
   141fd:	add    eax,0xc
   14200:	push   eax
   14201:	push   DWORD PTR [ebp+0xc]
   14204:	call   0x197d4
   14209:	test   al,al
   1420b:	jne    0x14212
   1420d:	lea    eax,[ebp-0x4]
   14210:	jmp    0x1421b
   14212:	mov    eax,DWORD PTR [esi+0x4]
   14215:	mov    DWORD PTR [ebp+0xc],eax
   14218:	lea    eax,[ebp+0xc]
   1421b:	mov    ecx,DWORD PTR [eax]
   1421d:	mov    eax,DWORD PTR [ebp+0x8]
   14220:	mov    DWORD PTR [eax],ecx
   14222:	pop    esi
   14223:	leave  
   14224:	ret    0x8
   14227:	int3   
   14228:	int3   
   14229:	int3   
   1422a:	int3   
   1422b:	int3   
   1422c:	mov    edi,edi
   1422e:	push   ebp
   1422f:	mov    ebp,esp
   14231:	push   ecx
   14232:	push   ecx
   14233:	push   ebx
   14234:	push   esi
   14235:	mov    DWORD PTR [ebp-0x4],ecx
   14238:	push   edi
   14239:	mov    edi,DWORD PTR [ebp+0xc]
   1423c:	lea    ecx,[ebp+0xc]
   1423f:	call   0x12ed4
   14244:	mov    esi,DWORD PTR [edi]
   14246:	mov    eax,ds:0x7f8bc
   1424b:	mov    ebx,edi
   1424d:	mov    DWORD PTR [ebp-0x8],esi
   14250:	cmp    esi,eax
   14252:	jne    0x14270
   14254:	mov    esi,DWORD PTR [edi+0x8]
   14257:	mov    eax,DWORD PTR [ebx+0x4]
   1425a:	mov    ecx,DWORD PTR [ebp-0x4]
   1425d:	mov    DWORD PTR [esi+0x4],eax
   14260:	mov    eax,DWORD PTR [ecx+0x4]
   14263:	cmp    DWORD PTR [eax+0x4],edi
   14266:	jne    0x142e5
   14268:	mov    DWORD PTR [eax+0x4],esi
   1426b:	jmp    0x142f3
   14270:	mov    ecx,DWORD PTR [edi+0x8]
   14273:	cmp    ecx,eax
   14275:	je     0x14257
   14277:	push   ecx
   14278:	call   0x11224
   1427d:	mov    ebx,eax
   1427f:	mov    esi,DWORD PTR [ebx+0x8]
   14282:	cmp    ebx,edi
   14284:	je     0x14257
   14286:	mov    eax,DWORD PTR [ebp-0x8]
   14289:	mov    DWORD PTR [eax+0x4],ebx
   1428c:	mov    eax,DWORD PTR [edi]
   1428e:	mov    DWORD PTR [ebx],eax
   14290:	cmp    ebx,DWORD PTR [edi+0x8]
   14293:	jne    0x1429a
   14295:	mov    DWORD PTR [esi+0x4],ebx
   14298:	jmp    0x142b1
   1429a:	mov    eax,DWORD PTR [ebx+0x4]
   1429d:	mov    DWORD PTR [esi+0x4],eax
   142a0:	mov    eax,DWORD PTR [ebx+0x4]
   142a3:	mov    DWORD PTR [eax],esi
   142a5:	mov    eax,DWORD PTR [edi+0x8]
   142a8:	mov    DWORD PTR [ebx+0x8],eax
   142ab:	mov    eax,DWORD PTR [edi+0x8]
   142ae:	mov    DWORD PTR [eax+0x4],ebx
   142b1:	mov    eax,DWORD PTR [ebp-0x4]
   142b4:	mov    eax,DWORD PTR [eax+0x4]
   142b7:	cmp    DWORD PTR [eax+0x4],edi
   142ba:	jne    0x142c1
   142bc:	mov    DWORD PTR [eax+0x4],ebx
   142bf:	jmp    0x142cf
   142c1:	mov    eax,DWORD PTR [edi+0x4]
   142c4:	cmp    DWORD PTR [eax],edi
   142c6:	jne    0x142cc
   142c8:	mov    DWORD PTR [eax],ebx
   142ca:	jmp    0x142cf
   142cc:	mov    DWORD PTR [eax+0x8],ebx
   142cf:	mov    eax,DWORD PTR [edi+0x4]
   142d2:	mov    DWORD PTR [ebx+0x4],eax
   142d5:	mov    eax,DWORD PTR [ebx+0x10]
   142d8:	mov    ecx,DWORD PTR [edi+0x10]
   142db:	mov    DWORD PTR [ebx+0x10],ecx
   142de:	mov    DWORD PTR [edi+0x10],eax
   142e1:	mov    ebx,edi
   142e3:	jmp    0x14346
   142e5:	mov    eax,DWORD PTR [edi+0x4]
   142e8:	cmp    DWORD PTR [eax],edi
   142ea:	jne    0x142f0
   142ec:	mov    DWORD PTR [eax],esi
   142ee:	jmp    0x142f3
   142f0:	mov    DWORD PTR [eax+0x8],esi
   142f3:	mov    eax,DWORD PTR [ecx+0x4]
   142f6:	mov    DWORD PTR [ebp-0x8],eax
   142f9:	cmp    DWORD PTR [eax],edi
   142fb:	jne    0x1431d
   142fd:	mov    edx,DWORD PTR [edi+0x8]
   14300:	cmp    edx,DWORD PTR ds:0x7f8bc
   14306:	jne    0x1430f
   14308:	mov    edx,DWORD PTR [edi+0x4]
   1430b:	mov    DWORD PTR [eax],edx
   1430d:	jmp    0x1431d
   1430f:	push   esi
   14310:	call   0x11224
   14315:	mov    ecx,DWORD PTR [ebp-0x8]
   14318:	mov    DWORD PTR [ecx],eax
   1431a:	mov    ecx,DWORD PTR [ebp-0x4]
   1431d:	mov    eax,DWORD PTR [ecx+0x4]
   14320:	mov    DWORD PTR [ebp-0x8],eax
   14323:	cmp    DWORD PTR [eax+0x8],edi
   14326:	jne    0x14346
   14328:	mov    ecx,DWORD PTR [edi]
   1432a:	cmp    ecx,DWORD PTR ds:0x7f8bc
   14330:	jne    0x1433a
   14332:	mov    ecx,DWORD PTR [edi+0x4]
   14335:	mov    DWORD PTR [eax+0x8],ecx
   14338:	jmp    0x14346
   1433a:	push   esi
   1433b:	call   0x11202
   14340:	mov    ecx,DWORD PTR [ebp-0x8]
   14343:	mov    DWORD PTR [ecx+0x8],eax
   14346:	xor    edi,edi
   14348:	inc    edi
   14349:	cmp    DWORD PTR [ebx+0x10],edi
   1434c:	jne    0x14463
   14352:	jmp    0x14411
   14357:	cmp    DWORD PTR [esi+0x10],edi
   1435a:	jne    0x14460
   14360:	mov    eax,DWORD PTR [esi+0x4]
   14363:	cmp    esi,DWORD PTR [eax]
   14365:	jne    0x143dc
   14367:	mov    eax,DWORD PTR [eax+0x8]
   1436a:	cmp    DWORD PTR [eax+0x10],0x0
   1436e:	jne    0x14388
   14370:	mov    DWORD PTR [eax+0x10],edi
   14373:	mov    eax,DWORD PTR [esi+0x4]
   14376:	and    DWORD PTR [eax+0x10],0x0
   1437a:	push   DWORD PTR [esi+0x4]
   1437d:	call   0x12f0a
   14382:	mov    eax,DWORD PTR [esi+0x4]
   14385:	mov    eax,DWORD PTR [eax+0x8]
   14388:	mov    ecx,DWORD PTR [eax]
   1438a:	cmp    DWORD PTR [ecx+0x10],edi
   1438d:	jne    0x14397
   1438f:	mov    ecx,DWORD PTR [eax+0x8]
   14392:	cmp    DWORD PTR [ecx+0x10],edi
   14395:	je     0x1440a
   14397:	mov    ecx,DWORD PTR [eax+0x8]
   1439a:	cmp    DWORD PTR [ecx+0x10],edi
   1439d:	jne    0x143b7
   1439f:	mov    ecx,DWORD PTR [eax]
   143a1:	mov    DWORD PTR [ecx+0x10],edi
   143a4:	mov    ecx,DWORD PTR [ebp-0x4]
   143a7:	and    DWORD PTR [eax+0x10],0x0
   143ab:	push   eax
   143ac:	call   0x12f58
   143b1:	mov    eax,DWORD PTR [esi+0x4]
   143b4:	mov    eax,DWORD PTR [eax+0x8]
   143b7:	mov    ecx,DWORD PTR [esi+0x4]
   143ba:	mov    ecx,DWORD PTR [ecx+0x10]
   143bd:	mov    DWORD PTR [eax+0x10],ecx
   143c0:	mov    ecx,DWORD PTR [esi+0x4]
   143c3:	mov    DWORD PTR [ecx+0x10],edi
   143c6:	mov    eax,DWORD PTR [eax+0x8]
   143c9:	mov    ecx,DWORD PTR [ebp-0x4]
   143cc:	mov    DWORD PTR [eax+0x10],edi
   143cf:	push   DWORD PTR [esi+0x4]
   143d2:	call   0x12f0a
   143d7:	jmp    0x14460
   143dc:	mov    eax,DWORD PTR [eax]
   143de:	cmp    DWORD PTR [eax+0x10],0x0
   143e2:	jne    0x143fb
   143e4:	mov    DWORD PTR [eax+0x10],edi
   143e7:	mov    eax,DWORD PTR [esi+0x4]
   143ea:	and    DWORD PTR [eax+0x10],0x0
   143ee:	push   DWORD PTR [esi+0x4]
   143f1:	call   0x12f58
   143f6:	mov    eax,DWORD PTR [esi+0x4]
   143f9:	mov    eax,DWORD PTR [eax]
   143fb:	mov    ecx,DWORD PTR [eax+0x8]
   143fe:	cmp    DWORD PTR [ecx+0x10],edi
   14401:	jne    0x14422
   14403:	mov    ecx,DWORD PTR [eax]
   14405:	cmp    DWORD PTR [ecx+0x10],edi
   14408:	jne    0x14422
   1440a:	and    DWORD PTR [eax+0x10],0x0
   1440e:	mov    esi,DWORD PTR [esi+0x4]
   14411:	mov    ecx,DWORD PTR [ebp-0x4]
   14414:	mov    eax,DWORD PTR [ecx+0x4]
   14417:	cmp    esi,DWORD PTR [eax+0x4]
   1441a:	jne    0x14357
   14420:	jmp    0x14460
   14422:	mov    ecx,DWORD PTR [eax]
   14424:	cmp    DWORD PTR [ecx+0x10],edi
   14427:	jne    0x14441
   14429:	mov    ecx,DWORD PTR [eax+0x8]
   1442c:	mov    DWORD PTR [ecx+0x10],edi
   1442f:	mov    ecx,DWORD PTR [ebp-0x4]
   14432:	and    DWORD PTR [eax+0x10],0x0
   14436:	push   eax
   14437:	call   0x12f0a
   1443c:	mov    eax,DWORD PTR [esi+0x4]
   1443f:	mov    eax,DWORD PTR [eax]
   14441:	mov    ecx,DWORD PTR [esi+0x4]
   14444:	mov    ecx,DWORD PTR [ecx+0x10]
   14447:	mov    DWORD PTR [eax+0x10],ecx
   1444a:	mov    ecx,DWORD PTR [esi+0x4]
   1444d:	mov    DWORD PTR [ecx+0x10],edi
   14450:	mov    eax,DWORD PTR [eax]
   14452:	mov    ecx,DWORD PTR [ebp-0x4]
   14455:	mov    DWORD PTR [eax+0x10],edi
   14458:	push   DWORD PTR [esi+0x4]
   1445b:	call   0x12f58
   14460:	mov    DWORD PTR [esi+0x10],edi
   14463:	push   ebx
   14464:	call   0x1da14
   14469:	mov    eax,DWORD PTR [ebp-0x4]
   1446c:	dec    DWORD PTR [eax+0xc]
   1446f:	mov    eax,DWORD PTR [ebp+0x8]
   14472:	pop    ecx
   14473:	mov    ecx,DWORD PTR [ebp+0xc]
   14476:	pop    edi
   14477:	pop    esi
   14478:	mov    DWORD PTR [eax],ecx
   1447a:	pop    ebx
   1447b:	leave  
   1447c:	ret    0x8
   1447f:	int3   
   14480:	int3   
   14481:	int3   
   14482:	int3   
   14483:	int3   
   14484:	mov    edi,edi
   14486:	push   ebp
   14487:	mov    ebp,esp
   14489:	push   esi
   1448a:	push   edi
   1448b:	push   DWORD PTR [ebp+0xc]
   1448e:	mov    edi,ecx
   14490:	call   0x13408
   14495:	push   DWORD PTR [ebp+0xc]
   14498:	mov    ecx,edi
   1449a:	mov    esi,eax
   1449c:	call   0x133d0
   144a1:	mov    ecx,DWORD PTR [ebp+0x8]
   144a4:	pop    edi
   144a5:	mov    DWORD PTR [ecx],eax
   144a7:	mov    DWORD PTR [ecx+0x4],esi
   144aa:	mov    eax,ecx
   144ac:	pop    esi
   144ad:	pop    ebp
   144ae:	ret    0x8
   144b1:	int3   
   144b2:	int3   
   144b3:	int3   
   144b4:	int3   
   144b5:	int3   
   144b6:	mov    edi,edi
   144b8:	push   esi
   144b9:	push   edi
   144ba:	push   0x1
   144bc:	xor    edi,edi
   144be:	push   edi
   144bf:	mov    esi,ecx
   144c1:	call   0x13996
   144c6:	cmp    DWORD PTR ds:0x7f8bc,edi
   144cc:	jne    0x144e3
   144ce:	mov    ecx,eax
   144d0:	mov    DWORD PTR ds:0x7f8bc,ecx
   144d6:	mov    DWORD PTR [ecx],edi
   144d8:	mov    ecx,DWORD PTR ds:0x7f8bc
   144de:	xor    eax,eax
   144e0:	mov    DWORD PTR [ecx+0x8],edi
   144e3:	inc    DWORD PTR ds:0x7fa20
   144e9:	cmp    eax,edi
   144eb:	je     0x144f4
   144ed:	push   eax
   144ee:	call   0x1da14
   144f3:	pop    ecx
   144f4:	push   edi
   144f5:	push   DWORD PTR ds:0x7f8bc
   144fb:	mov    ecx,esi
   144fd:	call   0x13996
   14502:	mov    DWORD PTR [esi+0xc],edi
   14505:	mov    DWORD PTR [esi+0x4],eax
   14508:	mov    DWORD PTR [eax],eax
   1450a:	mov    esi,DWORD PTR [esi+0x4]
   1450d:	pop    edi
   1450e:	mov    DWORD PTR [esi+0x8],esi
   14511:	pop    esi
   14512:	ret    
   14513:	int3   
   14514:	int3   
   14515:	int3   
   14516:	int3   
   14517:	int3   
   14518:	mov    edi,edi
   1451a:	push   ebp
   1451b:	mov    ebp,esp
   1451d:	push   ebx
   1451e:	push   esi
   1451f:	mov    esi,DWORD PTR [ebp+0x10]
   14522:	push   edi
   14523:	push   0x0
   14525:	push   esi
   14526:	mov    edi,ecx
   14528:	call   0x13996
   1452d:	push   DWORD PTR [ebp+0x14]
   14530:	mov    ebx,eax
   14532:	mov    eax,ds:0x7f8bc
   14537:	mov    DWORD PTR [ebx],eax
   14539:	mov    eax,ds:0x7f8bc
   1453e:	mov    DWORD PTR [ebx+0x8],eax
   14541:	lea    eax,[ebx+0xc]
   14544:	push   eax
   14545:	call   0x1a3d2
   1454a:	inc    DWORD PTR [edi+0xc]
   1454d:	cmp    esi,DWORD PTR [edi+0x4]
   14550:	je     0x14574
   14552:	mov    eax,DWORD PTR [ebp+0xc]
   14555:	cmp    eax,DWORD PTR ds:0x7f8bc
   1455b:	jne    0x14574
   1455d:	mov    eax,DWORD PTR [ebp+0x14]
   14560:	mov    eax,DWORD PTR [eax]
   14562:	cmp    eax,DWORD PTR [esi+0xc]
   14565:	jb     0x14574
   14567:	mov    DWORD PTR [esi+0x8],ebx
   1456a:	mov    eax,DWORD PTR [edi+0x4]
   1456d:	cmp    esi,DWORD PTR [eax+0x8]
   14570:	jne    0x1458e
   14572:	jmp    0x14583
   14574:	mov    DWORD PTR [esi],ebx
   14576:	mov    eax,DWORD PTR [edi+0x4]
   14579:	cmp    esi,eax
   1457b:	jne    0x14588
   1457d:	mov    DWORD PTR [eax+0x4],ebx
   14580:	mov    eax,DWORD PTR [edi+0x4]
   14583:	mov    DWORD PTR [eax+0x8],ebx
   14586:	jmp    0x1458e
   14588:	cmp    esi,DWORD PTR [eax]
   1458a:	jne    0x1458e
   1458c:	mov    DWORD PTR [eax],ebx
   1458e:	mov    eax,DWORD PTR [edi+0x4]
   14591:	mov    esi,ebx
   14593:	cmp    ebx,DWORD PTR [eax+0x4]
   14596:	je     0x1464a
   1459c:	mov    eax,DWORD PTR [esi+0x4]
   1459f:	xor    edx,edx
   145a1:	cmp    DWORD PTR [eax+0x10],edx
   145a4:	jne    0x1464a
   145aa:	mov    ecx,DWORD PTR [eax+0x4]
   145ad:	cmp    eax,DWORD PTR [ecx]
   145af:	jne    0x145eb
   145b1:	mov    ecx,DWORD PTR [ecx+0x8]
   145b4:	cmp    DWORD PTR [ecx+0x10],edx
   145b7:	je     0x145f2
   145b9:	cmp    esi,DWORD PTR [eax+0x8]
   145bc:	jne    0x145c8
   145be:	mov    esi,eax
   145c0:	push   esi
   145c1:	mov    ecx,edi
   145c3:	call   0x12f0a
   145c8:	mov    eax,DWORD PTR [esi+0x4]
   145cb:	mov    DWORD PTR [eax+0x10],0x1
   145d2:	mov    eax,DWORD PTR [esi+0x4]
   145d5:	mov    eax,DWORD PTR [eax+0x4]
   145d8:	and    DWORD PTR [eax+0x10],0x0
   145dc:	mov    eax,DWORD PTR [esi+0x4]
   145df:	push   DWORD PTR [eax+0x4]
   145e2:	mov    ecx,edi
   145e4:	call   0x12f58
   145e9:	jmp    0x1463e
   145eb:	mov    ecx,DWORD PTR [ecx]
   145ed:	cmp    DWORD PTR [ecx+0x10],edx
   145f0:	jne    0x1460f
   145f2:	mov    edx,eax
   145f4:	xor    eax,eax
   145f6:	inc    eax
   145f7:	mov    DWORD PTR [edx+0x10],eax
   145fa:	mov    DWORD PTR [ecx+0x10],eax
   145fd:	mov    eax,DWORD PTR [esi+0x4]
   14600:	mov    eax,DWORD PTR [eax+0x4]
   14603:	and    DWORD PTR [eax+0x10],0x0
   14607:	mov    eax,DWORD PTR [esi+0x4]
   1460a:	mov    esi,DWORD PTR [eax+0x4]
   1460d:	jmp    0x1463e
   1460f:	cmp    esi,DWORD PTR [eax]
   14611:	jne    0x1461d
   14613:	mov    esi,eax
   14615:	push   esi
   14616:	mov    ecx,edi
   14618:	call   0x12f58
   1461d:	mov    eax,DWORD PTR [esi+0x4]
   14620:	mov    DWORD PTR [eax+0x10],0x1
   14627:	mov    eax,DWORD PTR [esi+0x4]
   1462a:	mov    eax,DWORD PTR [eax+0x4]
   1462d:	and    DWORD PTR [eax+0x10],0x0
   14631:	mov    eax,DWORD PTR [esi+0x4]
   14634:	push   DWORD PTR [eax+0x4]
   14637:	mov    ecx,edi
   14639:	call   0x12f0a
   1463e:	mov    eax,DWORD PTR [edi+0x4]
   14641:	cmp    esi,DWORD PTR [eax+0x4]
   14644:	jne    0x1459c
   1464a:	mov    eax,DWORD PTR [edi+0x4]
   1464d:	mov    eax,DWORD PTR [eax+0x4]
   14650:	pop    edi
   14651:	mov    DWORD PTR [eax+0x10],0x1
   14658:	mov    eax,DWORD PTR [ebp+0x8]
   1465b:	pop    esi
   1465c:	mov    DWORD PTR [eax],ebx
   1465e:	pop    ebx
   1465f:	pop    ebp
   14660:	ret    0x10
   14663:	int3   
   14664:	int3   
   14665:	int3   
   14666:	int3   
   14667:	int3   
   14668:	mov    edi,edi
   1466a:	push   esi
   1466b:	push   edi
   1466c:	push   0x1
   1466e:	xor    edi,edi
   14670:	push   edi
   14671:	mov    esi,ecx
   14673:	call   0x139ba
   14678:	cmp    DWORD PTR ds:0x7f8c0,edi
   1467e:	jne    0x14695
   14680:	mov    ecx,eax
   14682:	mov    DWORD PTR ds:0x7f8c0,ecx
   14688:	mov    DWORD PTR [ecx],edi
   1468a:	mov    ecx,DWORD PTR ds:0x7f8c0
   14690:	xor    eax,eax
   14692:	mov    DWORD PTR [ecx+0x8],edi
   14695:	inc    DWORD PTR ds:0x7fa24
   1469b:	cmp    eax,edi
   1469d:	je     0x146a6
   1469f:	push   eax
   146a0:	call   0x1da14
   146a5:	pop    ecx
   146a6:	push   edi
   146a7:	push   DWORD PTR ds:0x7f8c0
   146ad:	mov    ecx,esi
   146af:	call   0x139ba
   146b4:	mov    DWORD PTR [esi+0xc],edi
   146b7:	mov    DWORD PTR [esi+0x4],eax
   146ba:	mov    DWORD PTR [eax],eax
   146bc:	mov    esi,DWORD PTR [esi+0x4]
   146bf:	pop    edi
   146c0:	mov    DWORD PTR [esi+0x8],esi
   146c3:	pop    esi
   146c4:	ret    
   146c5:	int3   
   146c6:	int3   
   146c7:	int3   
   146c8:	int3   
   146c9:	int3   
   146ca:	mov    edi,edi
   146cc:	push   ebp
   146cd:	mov    ebp,esp
   146cf:	push   ebx
   146d0:	push   esi
   146d1:	mov    esi,DWORD PTR [ebp+0x10]
   146d4:	push   edi
   146d5:	push   0x0
   146d7:	push   esi
   146d8:	mov    edi,ecx
   146da:	call   0x1394e
   146df:	push   DWORD PTR [ebp+0x14]
   146e2:	mov    ebx,eax
   146e4:	mov    eax,ds:0x7f8b8
   146e9:	mov    DWORD PTR [ebx],eax
   146eb:	mov    eax,ds:0x7f8b8
   146f0:	mov    DWORD PTR [ebx+0x8],eax
   146f3:	lea    eax,[ebx+0xc]
   146f6:	push   eax
   146f7:	call   0x1163a
   146fc:	inc    DWORD PTR [edi+0xc]
   146ff:	cmp    esi,DWORD PTR [edi+0x4]
   14702:	je     0x14726
   14704:	mov    eax,DWORD PTR [ebp+0xc]
   14707:	cmp    eax,DWORD PTR ds:0x7f8b8
   1470d:	jne    0x14726
   1470f:	mov    eax,DWORD PTR [ebp+0x14]
   14712:	mov    eax,DWORD PTR [eax]
   14714:	cmp    eax,DWORD PTR [esi+0xc]
   14717:	jb     0x14726
   14719:	mov    DWORD PTR [esi+0x8],ebx
   1471c:	mov    eax,DWORD PTR [edi+0x4]
   1471f:	cmp    esi,DWORD PTR [eax+0x8]
   14722:	jne    0x14740
   14724:	jmp    0x14735
   14726:	mov    DWORD PTR [esi],ebx
   14728:	mov    eax,DWORD PTR [edi+0x4]
   1472b:	cmp    esi,eax
   1472d:	jne    0x1473a
   1472f:	mov    DWORD PTR [eax+0x4],ebx
   14732:	mov    eax,DWORD PTR [edi+0x4]
   14735:	mov    DWORD PTR [eax+0x8],ebx
   14738:	jmp    0x14740
   1473a:	cmp    esi,DWORD PTR [eax]
   1473c:	jne    0x14740
   1473e:	mov    DWORD PTR [eax],ebx
   14740:	mov    eax,DWORD PTR [edi+0x4]
   14743:	mov    esi,ebx
   14745:	cmp    ebx,DWORD PTR [eax+0x4]
   14748:	je     0x147fc
   1474e:	mov    eax,DWORD PTR [esi+0x4]
   14751:	xor    edx,edx
   14753:	cmp    DWORD PTR [eax+0x14],edx
   14756:	jne    0x147fc
   1475c:	mov    ecx,DWORD PTR [eax+0x4]
   1475f:	cmp    eax,DWORD PTR [ecx]
   14761:	jne    0x1479d
   14763:	mov    ecx,DWORD PTR [ecx+0x8]
   14766:	cmp    DWORD PTR [ecx+0x14],edx
   14769:	je     0x147a4
   1476b:	cmp    esi,DWORD PTR [eax+0x8]
   1476e:	jne    0x1477a
   14770:	mov    esi,eax
   14772:	push   esi
   14773:	mov    ecx,edi
   14775:	call   0x12d08
   1477a:	mov    eax,DWORD PTR [esi+0x4]
   1477d:	mov    DWORD PTR [eax+0x14],0x1
   14784:	mov    eax,DWORD PTR [esi+0x4]
   14787:	mov    eax,DWORD PTR [eax+0x4]
   1478a:	and    DWORD PTR [eax+0x14],0x0
   1478e:	mov    eax,DWORD PTR [esi+0x4]
   14791:	push   DWORD PTR [eax+0x4]
   14794:	mov    ecx,edi
   14796:	call   0x12d56
   1479b:	jmp    0x147f0
   1479d:	mov    ecx,DWORD PTR [ecx]
   1479f:	cmp    DWORD PTR [ecx+0x14],edx
   147a2:	jne    0x147c1
   147a4:	mov    edx,eax
   147a6:	xor    eax,eax
   147a8:	inc    eax
   147a9:	mov    DWORD PTR [edx+0x14],eax
   147ac:	mov    DWORD PTR [ecx+0x14],eax
   147af:	mov    eax,DWORD PTR [esi+0x4]
   147b2:	mov    eax,DWORD PTR [eax+0x4]
   147b5:	and    DWORD PTR [eax+0x14],0x0
   147b9:	mov    eax,DWORD PTR [esi+0x4]
   147bc:	mov    esi,DWORD PTR [eax+0x4]
   147bf:	jmp    0x147f0
   147c1:	cmp    esi,DWORD PTR [eax]
   147c3:	jne    0x147cf
   147c5:	mov    esi,eax
   147c7:	push   esi
   147c8:	mov    ecx,edi
   147ca:	call   0x12d56
   147cf:	mov    eax,DWORD PTR [esi+0x4]
   147d2:	mov    DWORD PTR [eax+0x14],0x1
   147d9:	mov    eax,DWORD PTR [esi+0x4]
   147dc:	mov    eax,DWORD PTR [eax+0x4]
   147df:	and    DWORD PTR [eax+0x14],0x0
   147e3:	mov    eax,DWORD PTR [esi+0x4]
   147e6:	push   DWORD PTR [eax+0x4]
   147e9:	mov    ecx,edi
   147eb:	call   0x12d08
   147f0:	mov    eax,DWORD PTR [edi+0x4]
   147f3:	cmp    esi,DWORD PTR [eax+0x4]
   147f6:	jne    0x1474e
   147fc:	mov    eax,DWORD PTR [edi+0x4]
   147ff:	mov    eax,DWORD PTR [eax+0x4]
   14802:	pop    edi
   14803:	mov    DWORD PTR [eax+0x14],0x1
   1480a:	mov    eax,DWORD PTR [ebp+0x8]
   1480d:	pop    esi
   1480e:	mov    DWORD PTR [eax],ebx
   14810:	pop    ebx
   14811:	pop    ebp
   14812:	ret    0x10
   14815:	int3   
   14816:	int3   
   14817:	int3   
   14818:	int3   
   14819:	int3   
   1481a:	mov    edi,edi
   1481c:	push   ebp
   1481d:	mov    ebp,esp
   1481f:	push   ecx
   14820:	push   ecx
   14821:	push   ebx
   14822:	push   esi
   14823:	mov    DWORD PTR [ebp-0x4],ecx
   14826:	push   edi
   14827:	mov    edi,DWORD PTR [ebp+0xc]
   1482a:	lea    ecx,[ebp+0xc]
   1482d:	call   0x11548
   14832:	mov    esi,DWORD PTR [edi]
   14834:	mov    eax,ds:0x7f8c8
   14839:	mov    ebx,edi
   1483b:	mov    DWORD PTR [ebp-0x8],esi
   1483e:	cmp    esi,eax
   14840:	jne    0x1485e
   14842:	mov    esi,DWORD PTR [edi+0x8]
   14845:	mov    eax,DWORD PTR [ebx+0x4]
   14848:	mov    ecx,DWORD PTR [ebp-0x4]
   1484b:	mov    DWORD PTR [esi+0x4],eax
   1484e:	mov    eax,DWORD PTR [ecx+0x4]
   14851:	cmp    DWORD PTR [eax+0x4],edi
   14854:	jne    0x148d3
   14856:	mov    DWORD PTR [eax+0x4],esi
   14859:	jmp    0x148e1
   1485e:	mov    ecx,DWORD PTR [edi+0x8]
   14861:	cmp    ecx,eax
   14863:	je     0x14845
   14865:	push   ecx
   14866:	call   0x11422
   1486b:	mov    ebx,eax
   1486d:	mov    esi,DWORD PTR [ebx+0x8]
   14870:	cmp    ebx,edi
   14872:	je     0x14845
   14874:	mov    eax,DWORD PTR [ebp-0x8]
   14877:	mov    DWORD PTR [eax+0x4],ebx
   1487a:	mov    eax,DWORD PTR [edi]
   1487c:	mov    DWORD PTR [ebx],eax
   1487e:	cmp    ebx,DWORD PTR [edi+0x8]
   14881:	jne    0x14888
   14883:	mov    DWORD PTR [esi+0x4],ebx
   14886:	jmp    0x1489f
   14888:	mov    eax,DWORD PTR [ebx+0x4]
   1488b:	mov    DWORD PTR [esi+0x4],eax
   1488e:	mov    eax,DWORD PTR [ebx+0x4]
   14891:	mov    DWORD PTR [eax],esi
   14893:	mov    eax,DWORD PTR [edi+0x8]
   14896:	mov    DWORD PTR [ebx+0x8],eax
   14899:	mov    eax,DWORD PTR [edi+0x8]
   1489c:	mov    DWORD PTR [eax+0x4],ebx
   1489f:	mov    eax,DWORD PTR [ebp-0x4]
   148a2:	mov    eax,DWORD PTR [eax+0x4]
   148a5:	cmp    DWORD PTR [eax+0x4],edi
   148a8:	jne    0x148af
   148aa:	mov    DWORD PTR [eax+0x4],ebx
   148ad:	jmp    0x148bd
   148af:	mov    eax,DWORD PTR [edi+0x4]
   148b2:	cmp    DWORD PTR [eax],edi
   148b4:	jne    0x148ba
   148b6:	mov    DWORD PTR [eax],ebx
   148b8:	jmp    0x148bd
   148ba:	mov    DWORD PTR [eax+0x8],ebx
   148bd:	mov    eax,DWORD PTR [edi+0x4]
   148c0:	mov    DWORD PTR [ebx+0x4],eax
   148c3:	mov    eax,DWORD PTR [ebx+0x1c]
   148c6:	mov    ecx,DWORD PTR [edi+0x1c]
   148c9:	mov    DWORD PTR [ebx+0x1c],ecx
   148cc:	mov    DWORD PTR [edi+0x1c],eax
   148cf:	mov    ebx,edi
   148d1:	jmp    0x14934
   148d3:	mov    eax,DWORD PTR [edi+0x4]
   148d6:	cmp    DWORD PTR [eax],edi
   148d8:	jne    0x148de
   148da:	mov    DWORD PTR [eax],esi
   148dc:	jmp    0x148e1
   148de:	mov    DWORD PTR [eax+0x8],esi
   148e1:	mov    eax,DWORD PTR [ecx+0x4]
   148e4:	mov    DWORD PTR [ebp-0x8],eax
   148e7:	cmp    DWORD PTR [eax],edi
   148e9:	jne    0x1490b
   148eb:	mov    edx,DWORD PTR [edi+0x8]
   148ee:	cmp    edx,DWORD PTR ds:0x7f8c8
   148f4:	jne    0x148fd
   148f6:	mov    edx,DWORD PTR [edi+0x4]
   148f9:	mov    DWORD PTR [eax],edx
   148fb:	jmp    0x1490b
   148fd:	push   esi
   148fe:	call   0x11422
   14903:	mov    ecx,DWORD PTR [ebp-0x8]
   14906:	mov    DWORD PTR [ecx],eax
   14908:	mov    ecx,DWORD PTR [ebp-0x4]
   1490b:	mov    eax,DWORD PTR [ecx+0x4]
   1490e:	mov    DWORD PTR [ebp-0x8],eax
   14911:	cmp    DWORD PTR [eax+0x8],edi
   14914:	jne    0x14934
   14916:	mov    ecx,DWORD PTR [edi]
   14918:	cmp    ecx,DWORD PTR ds:0x7f8c8
   1491e:	jne    0x14928
   14920:	mov    ecx,DWORD PTR [edi+0x4]
   14923:	mov    DWORD PTR [eax+0x8],ecx
   14926:	jmp    0x14934
   14928:	push   esi
   14929:	call   0x11400
   1492e:	mov    ecx,DWORD PTR [ebp-0x8]
   14931:	mov    DWORD PTR [ecx+0x8],eax
   14934:	xor    edi,edi
   14936:	inc    edi
   14937:	cmp    DWORD PTR [ebx+0x1c],edi
   1493a:	jne    0x14a51
   14940:	jmp    0x149ff
   14945:	cmp    DWORD PTR [esi+0x1c],edi
   14948:	jne    0x14a4e
   1494e:	mov    eax,DWORD PTR [esi+0x4]
   14951:	cmp    esi,DWORD PTR [eax]
   14953:	jne    0x149ca
   14955:	mov    eax,DWORD PTR [eax+0x8]
   14958:	cmp    DWORD PTR [eax+0x1c],0x0
   1495c:	jne    0x14976
   1495e:	mov    DWORD PTR [eax+0x1c],edi
   14961:	mov    eax,DWORD PTR [esi+0x4]
   14964:	and    DWORD PTR [eax+0x1c],0x0
   14968:	push   DWORD PTR [esi+0x4]
   1496b:	call   0x130fe
   14970:	mov    eax,DWORD PTR [esi+0x4]
   14973:	mov    eax,DWORD PTR [eax+0x8]
   14976:	mov    ecx,DWORD PTR [eax]
   14978:	cmp    DWORD PTR [ecx+0x1c],edi
   1497b:	jne    0x14985
   1497d:	mov    ecx,DWORD PTR [eax+0x8]
   14980:	cmp    DWORD PTR [ecx+0x1c],edi
   14983:	je     0x149f8
   14985:	mov    ecx,DWORD PTR [eax+0x8]
   14988:	cmp    DWORD PTR [ecx+0x1c],edi
   1498b:	jne    0x149a5
   1498d:	mov    ecx,DWORD PTR [eax]
   1498f:	mov    DWORD PTR [ecx+0x1c],edi
   14992:	mov    ecx,DWORD PTR [ebp-0x4]
   14995:	and    DWORD PTR [eax+0x1c],0x0
   14999:	push   eax
   1499a:	call   0x1314c
   1499f:	mov    eax,DWORD PTR [esi+0x4]
   149a2:	mov    eax,DWORD PTR [eax+0x8]
   149a5:	mov    ecx,DWORD PTR [esi+0x4]
   149a8:	mov    ecx,DWORD PTR [ecx+0x1c]
   149ab:	mov    DWORD PTR [eax+0x1c],ecx
   149ae:	mov    ecx,DWORD PTR [esi+0x4]
   149b1:	mov    DWORD PTR [ecx+0x1c],edi
   149b4:	mov    eax,DWORD PTR [eax+0x8]
   149b7:	mov    ecx,DWORD PTR [ebp-0x4]
   149ba:	mov    DWORD PTR [eax+0x1c],edi
   149bd:	push   DWORD PTR [esi+0x4]
   149c0:	call   0x130fe
   149c5:	jmp    0x14a4e
   149ca:	mov    eax,DWORD PTR [eax]
   149cc:	cmp    DWORD PTR [eax+0x1c],0x0
   149d0:	jne    0x149e9
   149d2:	mov    DWORD PTR [eax+0x1c],edi
   149d5:	mov    eax,DWORD PTR [esi+0x4]
   149d8:	and    DWORD PTR [eax+0x1c],0x0
   149dc:	push   DWORD PTR [esi+0x4]
   149df:	call   0x1314c
   149e4:	mov    eax,DWORD PTR [esi+0x4]
   149e7:	mov    eax,DWORD PTR [eax]
   149e9:	mov    ecx,DWORD PTR [eax+0x8]
   149ec:	cmp    DWORD PTR [ecx+0x1c],edi
   149ef:	jne    0x14a10
   149f1:	mov    ecx,DWORD PTR [eax]
   149f3:	cmp    DWORD PTR [ecx+0x1c],edi
   149f6:	jne    0x14a10
   149f8:	and    DWORD PTR [eax+0x1c],0x0
   149fc:	mov    esi,DWORD PTR [esi+0x4]
   149ff:	mov    ecx,DWORD PTR [ebp-0x4]
   14a02:	mov    eax,DWORD PTR [ecx+0x4]
   14a05:	cmp    esi,DWORD PTR [eax+0x4]
   14a08:	jne    0x14945
   14a0e:	jmp    0x14a4e
   14a10:	mov    ecx,DWORD PTR [eax]
   14a12:	cmp    DWORD PTR [ecx+0x1c],edi
   14a15:	jne    0x14a2f
   14a17:	mov    ecx,DWORD PTR [eax+0x8]
   14a1a:	mov    DWORD PTR [ecx+0x1c],edi
   14a1d:	mov    ecx,DWORD PTR [ebp-0x4]
   14a20:	and    DWORD PTR [eax+0x1c],0x0
   14a24:	push   eax
   14a25:	call   0x130fe
   14a2a:	mov    eax,DWORD PTR [esi+0x4]
   14a2d:	mov    eax,DWORD PTR [eax]
   14a2f:	mov    ecx,DWORD PTR [esi+0x4]
   14a32:	mov    ecx,DWORD PTR [ecx+0x1c]
   14a35:	mov    DWORD PTR [eax+0x1c],ecx
   14a38:	mov    ecx,DWORD PTR [esi+0x4]
   14a3b:	mov    DWORD PTR [ecx+0x1c],edi
   14a3e:	mov    eax,DWORD PTR [eax]
   14a40:	mov    ecx,DWORD PTR [ebp-0x4]
   14a43:	mov    DWORD PTR [eax+0x1c],edi
   14a46:	push   DWORD PTR [esi+0x4]
   14a49:	call   0x1314c
   14a4e:	mov    DWORD PTR [esi+0x1c],edi
   14a51:	lea    eax,[ebx+0xc]
   14a54:	push   eax
   14a55:	call   0x13498
   14a5a:	push   ebx
   14a5b:	call   0x1da14
   14a60:	mov    eax,DWORD PTR [ebp-0x4]
   14a63:	dec    DWORD PTR [eax+0xc]
   14a66:	mov    eax,DWORD PTR [ebp+0x8]
   14a69:	pop    ecx
   14a6a:	mov    ecx,DWORD PTR [ebp+0xc]
   14a6d:	pop    edi
   14a6e:	pop    esi
   14a6f:	mov    DWORD PTR [eax],ecx
   14a71:	pop    ebx
   14a72:	leave  
   14a73:	ret    0x8
   14a76:	int3   
   14a77:	int3   
   14a78:	int3   
   14a79:	int3   
   14a7a:	int3   
   14a7b:	int3   
   14a7c:	mov    edi,edi
   14a7e:	push   ebp
   14a7f:	mov    ebp,esp
   14a81:	push   ebx
   14a82:	push   esi
   14a83:	push   edi
   14a84:	mov    edi,DWORD PTR [ebp+0x8]
   14a87:	mov    ebx,ecx
   14a89:	mov    esi,edi
   14a8b:	cmp    edi,DWORD PTR ds:0x7f8c8
   14a91:	je     0x14ab9
   14a93:	push   DWORD PTR [esi+0x8]
   14a96:	mov    ecx,ebx
   14a98:	call   0x14a7c
   14a9d:	mov    esi,DWORD PTR [esi]
   14a9f:	lea    eax,[edi+0xc]
   14aa2:	push   eax
   14aa3:	call   0x13498
   14aa8:	push   edi
   14aa9:	call   0x1da14
   14aae:	pop    ecx
   14aaf:	mov    edi,esi
   14ab1:	cmp    esi,DWORD PTR ds:0x7f8c8
   14ab7:	jne    0x14a93
   14ab9:	pop    edi
   14aba:	pop    esi
   14abb:	pop    ebx
   14abc:	pop    ebp
   14abd:	ret    0x4
   14ac0:	int3   
   14ac1:	int3   
   14ac2:	int3   
   14ac3:	int3   
   14ac4:	int3   
   14ac5:	int3   
   14ac6:	mov    edi,edi
   14ac8:	push   esi
   14ac9:	push   edi
   14aca:	push   0x1
   14acc:	xor    edi,edi
   14ace:	push   edi
   14acf:	mov    esi,ecx
   14ad1:	call   0x139ba
   14ad6:	cmp    DWORD PTR ds:0x7f8d0,edi
   14adc:	jne    0x14af3
   14ade:	mov    ecx,eax
   14ae0:	mov    DWORD PTR ds:0x7f8d0,ecx
   14ae6:	mov    DWORD PTR [ecx],edi
   14ae8:	mov    ecx,DWORD PTR ds:0x7f8d0
   14aee:	xor    eax,eax
   14af0:	mov    DWORD PTR [ecx+0x8],edi
   14af3:	inc    DWORD PTR ds:0x7fa28
   14af9:	cmp    eax,edi
   14afb:	je     0x14b04
   14afd:	push   eax
   14afe:	call   0x1da14
   14b03:	pop    ecx
   14b04:	push   edi
   14b05:	push   DWORD PTR ds:0x7f8d0
   14b0b:	mov    ecx,esi
   14b0d:	call   0x139ba
   14b12:	mov    DWORD PTR [esi+0xc],edi
   14b15:	mov    DWORD PTR [esi+0x4],eax
   14b18:	mov    DWORD PTR [eax],eax
   14b1a:	mov    esi,DWORD PTR [esi+0x4]
   14b1d:	pop    edi
   14b1e:	mov    DWORD PTR [esi+0x8],esi
   14b21:	pop    esi
   14b22:	ret    
   14b23:	int3   
   14b24:	int3   
   14b25:	int3   
   14b26:	int3   
   14b27:	int3   
   14b28:	mov    edi,edi
   14b2a:	push   ebp
   14b2b:	mov    ebp,esp
   14b2d:	push   ebx
   14b2e:	mov    ebx,DWORD PTR [ebp+0x8]
   14b31:	mov    eax,DWORD PTR [ebx+0x4]
   14b34:	push   esi
   14b35:	push   edi
   14b36:	mov    esi,ecx
   14b38:	mov    edi,DWORD PTR [esi+0x4]
   14b3b:	add    eax,0x4
   14b3e:	push   edi
   14b3f:	push   DWORD PTR [eax]
   14b41:	call   0x13b50
   14b46:	mov    DWORD PTR [edi+0x4],eax
   14b49:	mov    eax,DWORD PTR [ebx+0xc]
   14b4c:	mov    edi,DWORD PTR [esi+0x4]
   14b4f:	mov    DWORD PTR [esi+0xc],eax
   14b52:	mov    eax,DWORD PTR [edi+0x4]
   14b55:	cmp    eax,DWORD PTR ds:0x7f8bc
   14b5b:	je     0x14b75
   14b5d:	push   eax
   14b5e:	call   0x11224
   14b63:	mov    DWORD PTR [edi],eax
   14b65:	mov    esi,DWORD PTR [esi+0x4]
   14b68:	push   DWORD PTR [esi+0x4]
   14b6b:	call   0x11202
   14b70:	mov    DWORD PTR [esi+0x8],eax
   14b73:	jmp    0x14b7d
   14b75:	mov    DWORD PTR [edi],edi
   14b77:	mov    esi,DWORD PTR [esi+0x4]
   14b7a:	mov    DWORD PTR [esi+0x8],esi
   14b7d:	pop    edi
   14b7e:	pop    esi
   14b7f:	pop    ebx
   14b80:	pop    ebp
   14b81:	ret    0x4
   14b84:	int3   
   14b85:	int3   
   14b86:	int3   
   14b87:	int3   
   14b88:	int3   
   14b89:	int3   
   14b8a:	mov    edi,edi
   14b8c:	push   ebp
   14b8d:	mov    ebp,esp
   14b8f:	push   edi
   14b90:	mov    edi,DWORD PTR [ebp+0xc]
   14b93:	cmp    DWORD PTR [ebp+0x8],edi
   14b96:	je     0x14bac
   14b98:	push   esi
   14b99:	mov    esi,DWORD PTR [ebp+0x10]
   14b9c:	inc    DWORD PTR [esi]
   14b9e:	lea    ecx,[ebp+0x8]
   14ba1:	call   0x13870
   14ba6:	cmp    DWORD PTR [ebp+0x8],edi
   14ba9:	jne    0x14b9c
   14bab:	pop    esi
   14bac:	pop    edi
   14bad:	pop    ebp
   14bae:	ret    
   14baf:	int3   
   14bb0:	int3   
   14bb1:	int3   
   14bb2:	int3   
   14bb3:	int3   
   14bb4:	mov    edi,edi
   14bb6:	push   ebp
   14bb7:	mov    ebp,esp
   14bb9:	push   DWORD PTR [ebp+0xc]
   14bbc:	push   DWORD PTR [ebp+0x8]
   14bbf:	call   0x13c4a
   14bc4:	mov    eax,DWORD PTR [ebp+0x8]
   14bc7:	pop    ebp
   14bc8:	ret    0x8
   14bcb:	int3   
   14bcc:	int3   
   14bcd:	int3   
   14bce:	int3   
   14bcf:	int3   
   14bd0:	mov    edi,edi
   14bd2:	push   ebp
   14bd3:	mov    ebp,esp
   14bd5:	push   ecx
   14bd6:	push   esi
   14bd7:	mov    esi,ecx
   14bd9:	cmp    DWORD PTR [esi+0xc],0x0
   14bdd:	mov    ecx,DWORD PTR [ebp+0xc]
   14be0:	je     0x14c1a
   14be2:	mov    eax,DWORD PTR [esi+0x4]
   14be5:	cmp    ecx,DWORD PTR [eax]
   14be7:	jne    0x14c1a
   14be9:	cmp    DWORD PTR [ebp+0x10],eax
   14bec:	jne    0x14c1a
   14bee:	push   DWORD PTR [eax+0x4]
   14bf1:	mov    ecx,esi
   14bf3:	call   0x138ce
   14bf8:	mov    ecx,DWORD PTR ds:0x7f8b8
   14bfe:	mov    eax,DWORD PTR [esi+0x4]
   14c01:	mov    DWORD PTR [eax+0x4],ecx
   14c04:	mov    eax,DWORD PTR [esi+0x4]
   14c07:	and    DWORD PTR [esi+0xc],0x0
   14c0b:	mov    DWORD PTR [eax],eax
   14c0d:	mov    eax,DWORD PTR [esi+0x4]
   14c10:	mov    DWORD PTR [eax+0x8],eax
   14c13:	mov    eax,DWORD PTR [esi+0x4]
   14c16:	mov    ecx,DWORD PTR [eax]
   14c18:	jmp    0x14c3f
   14c1a:	cmp    ecx,DWORD PTR [ebp+0x10]
   14c1d:	je     0x14c3f
   14c1f:	push   edi
   14c20:	mov    edi,ecx
   14c22:	lea    ecx,[ebp+0xc]
   14c25:	call   0x112ca
   14c2a:	push   edi
   14c2b:	lea    eax,[ebp-0x4]
   14c2e:	push   eax
   14c2f:	mov    ecx,esi
   14c31:	call   0x13d3c
   14c36:	mov    ecx,DWORD PTR [ebp+0xc]
   14c39:	cmp    ecx,DWORD PTR [ebp+0x10]
   14c3c:	jne    0x14c20
   14c3e:	pop    edi
   14c3f:	mov    eax,DWORD PTR [ebp+0x8]
   14c42:	mov    DWORD PTR [eax],ecx
   14c44:	pop    esi
   14c45:	leave  
   14c46:	ret    0xc
   14c49:	int3   
   14c4a:	int3   
   14c4b:	int3   
   14c4c:	int3   
   14c4d:	int3   
   14c4e:	mov    edi,edi
   14c50:	push   ebp
   14c51:	mov    ebp,esp
   14c53:	push   ecx
   14c54:	push   ecx
   14c55:	push   esi
   14c56:	push   DWORD PTR [ebp+0x8]
   14c59:	lea    eax,[ebp-0x8]
   14c5c:	push   eax
   14c5d:	mov    esi,ecx
   14c5f:	call   0x13f94
   14c64:	and    DWORD PTR [ebp+0x8],0x0
   14c68:	lea    eax,[ebp+0x8]
   14c6b:	push   eax
   14c6c:	push   DWORD PTR [ebp-0x4]
   14c6f:	push   DWORD PTR [ebp-0x8]
   14c72:	call   0x13a02
   14c77:	add    esp,0xc
   14c7a:	push   DWORD PTR [ebp-0x4]
   14c7d:	lea    eax,[ebp-0x4]
   14c80:	push   DWORD PTR [ebp-0x8]
   14c83:	mov    ecx,esi
   14c85:	push   eax
   14c86:	call   0x14bd0
   14c8b:	mov    eax,DWORD PTR [ebp+0x8]
   14c8e:	pop    esi
   14c8f:	leave  
   14c90:	ret    0x4
   14c93:	int3   
   14c94:	int3   
   14c95:	int3   
   14c96:	int3   
   14c97:	int3   
   14c98:	mov    edi,edi
   14c9a:	push   ebp
   14c9b:	mov    ebp,esp
   14c9d:	push   ecx
   14c9e:	push   ebx
   14c9f:	push   esi
   14ca0:	push   edi
   14ca1:	mov    edi,ecx
   14ca3:	mov    eax,DWORD PTR [edi+0x4]
   14ca6:	mov    esi,DWORD PTR [eax+0x4]
   14ca9:	mov    ebx,eax
   14cab:	mov    eax,ds:0x7f8bc
   14cb0:	mov    dl,0x1
   14cb2:	cmp    esi,eax
   14cb4:	je     0x14cd2
   14cb6:	mov    ecx,DWORD PTR [ebp+0xc]
   14cb9:	mov    ecx,DWORD PTR [ecx]
   14cbb:	cmp    ecx,DWORD PTR [esi+0xc]
   14cbe:	mov    ebx,esi
   14cc0:	setb   dl
   14cc3:	test   dl,dl
   14cc5:	je     0x14ccb
   14cc7:	mov    esi,DWORD PTR [esi]
   14cc9:	jmp    0x14cce
   14ccb:	mov    esi,DWORD PTR [esi+0x8]
   14cce:	cmp    esi,eax
   14cd0:	jne    0x14cbb
   14cd2:	cmp    BYTE PTR [edi+0x8],0x0
   14cd6:	je     0x14cf3
   14cd8:	push   DWORD PTR [ebp+0xc]
   14cdb:	push   ebx
   14cdc:	push   esi
   14cdd:	lea    eax,[ebp+0xc]
   14ce0:	push   eax
   14ce1:	mov    ecx,edi
   14ce3:	call   0x14518
   14ce8:	mov    ecx,DWORD PTR [eax]
   14cea:	mov    eax,DWORD PTR [ebp+0x8]
   14ced:	mov    BYTE PTR [eax+0x4],0x1
   14cf1:	jmp    0x14d22
   14cf3:	mov    ecx,ebx
   14cf5:	mov    DWORD PTR [ebp-0x4],ecx
   14cf8:	test   dl,dl
   14cfa:	je     0x14d0e
   14cfc:	mov    eax,DWORD PTR [edi+0x4]
   14cff:	cmp    ebx,DWORD PTR [eax]
   14d01:	je     0x14cd8
   14d03:	lea    ecx,[ebp-0x4]
   14d06:	call   0x12e94
   14d0b:	mov    ecx,DWORD PTR [ebp-0x4]
   14d0e:	mov    edx,DWORD PTR [ecx+0xc]
   14d11:	mov    eax,DWORD PTR [ebp+0xc]
   14d14:	cmp    edx,DWORD PTR [eax]
   14d16:	jae    0x14d1b
   14d18:	push   eax
   14d19:	jmp    0x14cdb
   14d1b:	mov    eax,DWORD PTR [ebp+0x8]
   14d1e:	mov    BYTE PTR [eax+0x4],0x0
   14d22:	pop    edi
   14d23:	pop    esi
   14d24:	mov    DWORD PTR [eax],ecx
   14d26:	pop    ebx
   14d27:	leave  
   14d28:	ret    0x8
   14d2b:	int3   
   14d2c:	int3   
   14d2d:	int3   
   14d2e:	int3   
   14d2f:	int3   
   14d30:	mov    edi,edi
   14d32:	push   ebp
   14d33:	mov    ebp,esp
   14d35:	push   ecx
   14d36:	push   esi
   14d37:	mov    esi,ecx
   14d39:	cmp    DWORD PTR [esi+0xc],0x0
   14d3d:	mov    ecx,DWORD PTR [ebp+0xc]
   14d40:	je     0x14d7a
   14d42:	mov    eax,DWORD PTR [esi+0x4]
   14d45:	cmp    ecx,DWORD PTR [eax]
   14d47:	jne    0x14d7a
   14d49:	cmp    DWORD PTR [ebp+0x10],eax
   14d4c:	jne    0x14d7a
   14d4e:	push   DWORD PTR [eax+0x4]
   14d51:	mov    ecx,esi
   14d53:	call   0x1390e
   14d58:	mov    ecx,DWORD PTR ds:0x7f8bc
   14d5e:	mov    eax,DWORD PTR [esi+0x4]
   14d61:	mov    DWORD PTR [eax+0x4],ecx
   14d64:	mov    eax,DWORD PTR [esi+0x4]
   14d67:	and    DWORD PTR [esi+0xc],0x0
   14d6b:	mov    DWORD PTR [eax],eax
   14d6d:	mov    eax,DWORD PTR [esi+0x4]
   14d70:	mov    DWORD PTR [eax+0x8],eax
   14d73:	mov    eax,DWORD PTR [esi+0x4]
   14d76:	mov    ecx,DWORD PTR [eax]
   14d78:	jmp    0x14d9f
   14d7a:	cmp    ecx,DWORD PTR [ebp+0x10]
   14d7d:	je     0x14d9f
   14d7f:	push   edi
   14d80:	mov    edi,ecx
   14d82:	lea    ecx,[ebp+0xc]
   14d85:	call   0x12ed4
   14d8a:	push   edi
   14d8b:	lea    eax,[ebp-0x4]
   14d8e:	push   eax
   14d8f:	mov    ecx,esi
   14d91:	call   0x1422c
   14d96:	mov    ecx,DWORD PTR [ebp+0xc]
   14d99:	cmp    ecx,DWORD PTR [ebp+0x10]
   14d9c:	jne    0x14d80
   14d9e:	pop    edi
   14d9f:	mov    eax,DWORD PTR [ebp+0x8]
   14da2:	mov    DWORD PTR [eax],ecx
   14da4:	pop    esi
   14da5:	leave  
   14da6:	ret    0xc
   14da9:	int3   
   14daa:	int3   
   14dab:	int3   
   14dac:	int3   
   14dad:	int3   
   14dae:	mov    edi,edi
   14db0:	push   ebp
   14db1:	mov    ebp,esp
   14db3:	push   ecx
   14db4:	push   ecx
   14db5:	push   esi
   14db6:	push   DWORD PTR [ebp+0x8]
   14db9:	lea    eax,[ebp-0x8]
   14dbc:	push   eax
   14dbd:	mov    esi,ecx
   14dbf:	call   0x14484
   14dc4:	and    DWORD PTR [ebp+0x8],0x0
   14dc8:	lea    eax,[ebp+0x8]
   14dcb:	push   eax
   14dcc:	push   DWORD PTR [ebp-0x4]
   14dcf:	push   DWORD PTR [ebp-0x8]
   14dd2:	call   0x13a68
   14dd7:	add    esp,0xc
   14dda:	push   DWORD PTR [ebp-0x4]
   14ddd:	lea    eax,[ebp-0x4]
   14de0:	push   DWORD PTR [ebp-0x8]
   14de3:	mov    ecx,esi
   14de5:	push   eax
   14de6:	call   0x14d30
   14deb:	mov    eax,DWORD PTR [ebp+0x8]
   14dee:	pop    esi
   14def:	leave  
   14df0:	ret    0x4
   14df3:	int3   
   14df4:	int3   
   14df5:	int3   
   14df6:	int3   
   14df7:	int3   
   14df8:	mov    edi,edi
   14dfa:	push   ebp
   14dfb:	mov    ebp,esp
   14dfd:	push   ecx
   14dfe:	push   ebx
   14dff:	push   esi
   14e00:	push   edi
   14e01:	mov    edi,ecx
   14e03:	mov    eax,DWORD PTR [edi+0x4]
   14e06:	mov    esi,DWORD PTR [eax+0x4]
   14e09:	mov    ebx,eax
   14e0b:	mov    eax,ds:0x7f8b8
   14e10:	mov    dl,0x1
   14e12:	cmp    esi,eax
   14e14:	je     0x14e32
   14e16:	mov    ecx,DWORD PTR [ebp+0xc]
   14e19:	mov    ecx,DWORD PTR [ecx]
   14e1b:	cmp    ecx,DWORD PTR [esi+0xc]
   14e1e:	mov    ebx,esi
   14e20:	setb   dl
   14e23:	test   dl,dl
   14e25:	je     0x14e2b
   14e27:	mov    esi,DWORD PTR [esi]
   14e29:	jmp    0x14e2e
   14e2b:	mov    esi,DWORD PTR [esi+0x8]
   14e2e:	cmp    esi,eax
   14e30:	jne    0x14e1b
   14e32:	cmp    BYTE PTR [edi+0x8],0x0
   14e36:	je     0x14e53
   14e38:	push   DWORD PTR [ebp+0xc]
   14e3b:	push   ebx
   14e3c:	push   esi
   14e3d:	lea    eax,[ebp+0xc]
   14e40:	push   eax
   14e41:	mov    ecx,edi
   14e43:	call   0x146ca
   14e48:	mov    ecx,DWORD PTR [eax]
   14e4a:	mov    eax,DWORD PTR [ebp+0x8]
   14e4d:	mov    BYTE PTR [eax+0x4],0x1
   14e51:	jmp    0x14e82
   14e53:	mov    ecx,ebx
   14e55:	mov    DWORD PTR [ebp-0x4],ecx
   14e58:	test   dl,dl
   14e5a:	je     0x14e6e
   14e5c:	mov    eax,DWORD PTR [edi+0x4]
   14e5f:	cmp    ebx,DWORD PTR [eax]
   14e61:	je     0x14e38
   14e63:	lea    ecx,[ebp-0x4]
   14e66:	call   0x1128a
   14e6b:	mov    ecx,DWORD PTR [ebp-0x4]
   14e6e:	mov    edx,DWORD PTR [ecx+0xc]
   14e71:	mov    eax,DWORD PTR [ebp+0xc]
   14e74:	cmp    edx,DWORD PTR [eax]
   14e76:	jae    0x14e7b
   14e78:	push   eax
   14e79:	jmp    0x14e3b
   14e7b:	mov    eax,DWORD PTR [ebp+0x8]
   14e7e:	mov    BYTE PTR [eax+0x4],0x0
   14e82:	pop    edi
   14e83:	pop    esi
   14e84:	mov    DWORD PTR [eax],ecx
   14e86:	pop    ebx
   14e87:	leave  
   14e88:	ret    0x8
   14e8b:	int3   
   14e8c:	int3   
   14e8d:	int3   
   14e8e:	int3   
   14e8f:	int3   
   14e90:	mov    edi,edi
   14e92:	push   ebp
   14e93:	mov    ebp,esp
   14e95:	push   ecx
   14e96:	push   esi
   14e97:	mov    esi,ecx
   14e99:	cmp    DWORD PTR [esi+0xc],0x0
   14e9d:	mov    ecx,DWORD PTR [ebp+0xc]
   14ea0:	je     0x14eda
   14ea2:	mov    eax,DWORD PTR [esi+0x4]
   14ea5:	cmp    ecx,DWORD PTR [eax]
   14ea7:	jne    0x14eda
   14ea9:	cmp    DWORD PTR [ebp+0x10],eax
   14eac:	jne    0x14eda
   14eae:	push   DWORD PTR [eax+0x4]
   14eb1:	mov    ecx,esi
   14eb3:	call   0x14a7c
   14eb8:	mov    ecx,DWORD PTR ds:0x7f8c8
   14ebe:	mov    eax,DWORD PTR [esi+0x4]
   14ec1:	mov    DWORD PTR [eax+0x4],ecx
   14ec4:	mov    eax,DWORD PTR [esi+0x4]
   14ec7:	and    DWORD PTR [esi+0xc],0x0
   14ecb:	mov    DWORD PTR [eax],eax
   14ecd:	mov    eax,DWORD PTR [esi+0x4]
   14ed0:	mov    DWORD PTR [eax+0x8],eax
   14ed3:	mov    eax,DWORD PTR [esi+0x4]
   14ed6:	mov    ecx,DWORD PTR [eax]
   14ed8:	jmp    0x14eff
   14eda:	cmp    ecx,DWORD PTR [ebp+0x10]
   14edd:	je     0x14eff
   14edf:	push   edi
   14ee0:	mov    edi,ecx
   14ee2:	lea    ecx,[ebp+0xc]
   14ee5:	call   0x11548
   14eea:	push   edi
   14eeb:	lea    eax,[ebp-0x4]
   14eee:	push   eax
   14eef:	mov    ecx,esi
   14ef1:	call   0x1481a
   14ef6:	mov    ecx,DWORD PTR [ebp+0xc]
   14ef9:	cmp    ecx,DWORD PTR [ebp+0x10]
   14efc:	jne    0x14ee0
   14efe:	pop    edi
   14eff:	mov    eax,DWORD PTR [ebp+0x8]
   14f02:	mov    DWORD PTR [eax],ecx
   14f04:	pop    esi
   14f05:	leave  
   14f06:	ret    0xc
   14f09:	int3   
   14f0a:	int3   
   14f0b:	int3   
   14f0c:	int3   
   14f0d:	int3   
   14f0e:	mov    edi,edi
   14f10:	push   ebp
   14f11:	mov    ebp,esp
   14f13:	push   ecx
   14f14:	push   ecx
   14f15:	push   ebx
   14f16:	push   esi
   14f17:	mov    DWORD PTR [ebp-0x4],ecx
   14f1a:	push   edi
   14f1b:	mov    edi,DWORD PTR [ebp+0xc]
   14f1e:	lea    ecx,[ebp+0xc]
   14f21:	call   0x12e5e
   14f26:	mov    esi,DWORD PTR [edi]
   14f28:	mov    eax,ds:0x7f8c0
   14f2d:	mov    ebx,edi
   14f2f:	mov    DWORD PTR [ebp-0x8],esi
   14f32:	cmp    esi,eax
   14f34:	jne    0x14f52
   14f36:	mov    esi,DWORD PTR [edi+0x8]
   14f39:	mov    eax,DWORD PTR [ebx+0x4]
   14f3c:	mov    ecx,DWORD PTR [ebp-0x4]
   14f3f:	mov    DWORD PTR [esi+0x4],eax
   14f42:	mov    eax,DWORD PTR [ecx+0x4]
   14f45:	cmp    DWORD PTR [eax+0x4],edi
   14f48:	jne    0x14fc7
   14f4a:	mov    DWORD PTR [eax+0x4],esi
   14f4d:	jmp    0x14fd5
   14f52:	mov    ecx,DWORD PTR [edi+0x8]
   14f55:	cmp    ecx,eax
   14f57:	je     0x14f39
   14f59:	push   ecx
   14f5a:	call   0x11268
   14f5f:	mov    ebx,eax
   14f61:	mov    esi,DWORD PTR [ebx+0x8]
   14f64:	cmp    ebx,edi
   14f66:	je     0x14f39
   14f68:	mov    eax,DWORD PTR [ebp-0x8]
   14f6b:	mov    DWORD PTR [eax+0x4],ebx
   14f6e:	mov    eax,DWORD PTR [edi]
   14f70:	mov    DWORD PTR [ebx],eax
   14f72:	cmp    ebx,DWORD PTR [edi+0x8]
   14f75:	jne    0x14f7c
   14f77:	mov    DWORD PTR [esi+0x4],ebx
   14f7a:	jmp    0x14f93
   14f7c:	mov    eax,DWORD PTR [ebx+0x4]
   14f7f:	mov    DWORD PTR [esi+0x4],eax
   14f82:	mov    eax,DWORD PTR [ebx+0x4]
   14f85:	mov    DWORD PTR [eax],esi
   14f87:	mov    eax,DWORD PTR [edi+0x8]
   14f8a:	mov    DWORD PTR [ebx+0x8],eax
   14f8d:	mov    eax,DWORD PTR [edi+0x8]
   14f90:	mov    DWORD PTR [eax+0x4],ebx
   14f93:	mov    eax,DWORD PTR [ebp-0x4]
   14f96:	mov    eax,DWORD PTR [eax+0x4]
   14f99:	cmp    DWORD PTR [eax+0x4],edi
   14f9c:	jne    0x14fa3
   14f9e:	mov    DWORD PTR [eax+0x4],ebx
   14fa1:	jmp    0x14fb1
   14fa3:	mov    eax,DWORD PTR [edi+0x4]
   14fa6:	cmp    DWORD PTR [eax],edi
   14fa8:	jne    0x14fae
   14faa:	mov    DWORD PTR [eax],ebx
   14fac:	jmp    0x14fb1
   14fae:	mov    DWORD PTR [eax+0x8],ebx
   14fb1:	mov    eax,DWORD PTR [edi+0x4]
   14fb4:	mov    DWORD PTR [ebx+0x4],eax
   14fb7:	mov    eax,DWORD PTR [ebx+0x70]
   14fba:	mov    ecx,DWORD PTR [edi+0x70]
   14fbd:	mov    DWORD PTR [ebx+0x70],ecx
   14fc0:	mov    DWORD PTR [edi+0x70],eax
   14fc3:	mov    ebx,edi
   14fc5:	jmp    0x15028
   14fc7:	mov    eax,DWORD PTR [edi+0x4]
   14fca:	cmp    DWORD PTR [eax],edi
   14fcc:	jne    0x14fd2
   14fce:	mov    DWORD PTR [eax],esi
   14fd0:	jmp    0x14fd5
   14fd2:	mov    DWORD PTR [eax+0x8],esi
   14fd5:	mov    eax,DWORD PTR [ecx+0x4]
   14fd8:	mov    DWORD PTR [ebp-0x8],eax
   14fdb:	cmp    DWORD PTR [eax],edi
   14fdd:	jne    0x14fff
   14fdf:	mov    edx,DWORD PTR [edi+0x8]
   14fe2:	cmp    edx,DWORD PTR ds:0x7f8c0
   14fe8:	jne    0x14ff1
   14fea:	mov    edx,DWORD PTR [edi+0x4]
   14fed:	mov    DWORD PTR [eax],edx
   14fef:	jmp    0x14fff
   14ff1:	push   esi
   14ff2:	call   0x11268
   14ff7:	mov    ecx,DWORD PTR [ebp-0x8]
   14ffa:	mov    DWORD PTR [ecx],eax
   14ffc:	mov    ecx,DWORD PTR [ebp-0x4]
   14fff:	mov    eax,DWORD PTR [ecx+0x4]
   15002:	mov    DWORD PTR [ebp-0x8],eax
   15005:	cmp    DWORD PTR [eax+0x8],edi
   15008:	jne    0x15028
   1500a:	mov    ecx,DWORD PTR [edi]
   1500c:	cmp    ecx,DWORD PTR ds:0x7f8c0
   15012:	jne    0x1501c
   15014:	mov    ecx,DWORD PTR [edi+0x4]
   15017:	mov    DWORD PTR [eax+0x8],ecx
   1501a:	jmp    0x15028
   1501c:	push   esi
   1501d:	call   0x11246
   15022:	mov    ecx,DWORD PTR [ebp-0x8]
   15025:	mov    DWORD PTR [ecx+0x8],eax
   15028:	xor    edi,edi
   1502a:	inc    edi
   1502b:	cmp    DWORD PTR [ebx+0x70],edi
   1502e:	jne    0x15145
   15034:	jmp    0x150f3
   15039:	cmp    DWORD PTR [esi+0x70],edi
   1503c:	jne    0x15142
   15042:	mov    eax,DWORD PTR [esi+0x4]
   15045:	cmp    esi,DWORD PTR [eax]
   15047:	jne    0x150be
   15049:	mov    eax,DWORD PTR [eax+0x8]
   1504c:	cmp    DWORD PTR [eax+0x70],0x0
   15050:	jne    0x1506a
   15052:	mov    DWORD PTR [eax+0x70],edi
   15055:	mov    eax,DWORD PTR [esi+0x4]
   15058:	and    DWORD PTR [eax+0x70],0x0
   1505c:	push   DWORD PTR [esi+0x4]
   1505f:	call   0x12fe8
   15064:	mov    eax,DWORD PTR [esi+0x4]
   15067:	mov    eax,DWORD PTR [eax+0x8]
   1506a:	mov    ecx,DWORD PTR [eax]
   1506c:	cmp    DWORD PTR [ecx+0x70],edi
   1506f:	jne    0x15079
   15071:	mov    ecx,DWORD PTR [eax+0x8]
   15074:	cmp    DWORD PTR [ecx+0x70],edi
   15077:	je     0x150ec
   15079:	mov    ecx,DWORD PTR [eax+0x8]
   1507c:	cmp    DWORD PTR [ecx+0x70],edi
   1507f:	jne    0x15099
   15081:	mov    ecx,DWORD PTR [eax]
   15083:	mov    DWORD PTR [ecx+0x70],edi
   15086:	mov    ecx,DWORD PTR [ebp-0x4]
   15089:	and    DWORD PTR [eax+0x70],0x0
   1508d:	push   eax
   1508e:	call   0x13036
   15093:	mov    eax,DWORD PTR [esi+0x4]
   15096:	mov    eax,DWORD PTR [eax+0x8]
   15099:	mov    ecx,DWORD PTR [esi+0x4]
   1509c:	mov    ecx,DWORD PTR [ecx+0x70]
   1509f:	mov    DWORD PTR [eax+0x70],ecx
   150a2:	mov    ecx,DWORD PTR [esi+0x4]
   150a5:	mov    DWORD PTR [ecx+0x70],edi
   150a8:	mov    eax,DWORD PTR [eax+0x8]
   150ab:	mov    ecx,DWORD PTR [ebp-0x4]
   150ae:	mov    DWORD PTR [eax+0x70],edi
   150b1:	push   DWORD PTR [esi+0x4]
   150b4:	call   0x12fe8
   150b9:	jmp    0x15142
   150be:	mov    eax,DWORD PTR [eax]
   150c0:	cmp    DWORD PTR [eax+0x70],0x0
   150c4:	jne    0x150dd
   150c6:	mov    DWORD PTR [eax+0x70],edi
   150c9:	mov    eax,DWORD PTR [esi+0x4]
   150cc:	and    DWORD PTR [eax+0x70],0x0
   150d0:	push   DWORD PTR [esi+0x4]
   150d3:	call   0x13036
   150d8:	mov    eax,DWORD PTR [esi+0x4]
   150db:	mov    eax,DWORD PTR [eax]
   150dd:	mov    ecx,DWORD PTR [eax+0x8]
   150e0:	cmp    DWORD PTR [ecx+0x70],edi
   150e3:	jne    0x15104
   150e5:	mov    ecx,DWORD PTR [eax]
   150e7:	cmp    DWORD PTR [ecx+0x70],edi
   150ea:	jne    0x15104
   150ec:	and    DWORD PTR [eax+0x70],0x0
   150f0:	mov    esi,DWORD PTR [esi+0x4]
   150f3:	mov    ecx,DWORD PTR [ebp-0x4]
   150f6:	mov    eax,DWORD PTR [ecx+0x4]
   150f9:	cmp    esi,DWORD PTR [eax+0x4]
   150fc:	jne    0x15039
   15102:	jmp    0x15142
   15104:	mov    ecx,DWORD PTR [eax]
   15106:	cmp    DWORD PTR [ecx+0x70],edi
   15109:	jne    0x15123
   1510b:	mov    ecx,DWORD PTR [eax+0x8]
   1510e:	mov    DWORD PTR [ecx+0x70],edi
   15111:	mov    ecx,DWORD PTR [ebp-0x4]
   15114:	and    DWORD PTR [eax+0x70],0x0
   15118:	push   eax
   15119:	call   0x12fe8
   1511e:	mov    eax,DWORD PTR [esi+0x4]
   15121:	mov    eax,DWORD PTR [eax]
   15123:	mov    ecx,DWORD PTR [esi+0x4]
   15126:	mov    ecx,DWORD PTR [ecx+0x70]
   15129:	mov    DWORD PTR [eax+0x70],ecx
   1512c:	mov    ecx,DWORD PTR [esi+0x4]
   1512f:	mov    DWORD PTR [ecx+0x70],edi
   15132:	mov    eax,DWORD PTR [eax]
   15134:	mov    ecx,DWORD PTR [ebp-0x4]
   15137:	mov    DWORD PTR [eax+0x70],edi
   1513a:	push   DWORD PTR [esi+0x4]
   1513d:	call   0x13036
   15142:	mov    DWORD PTR [esi+0x70],edi
   15145:	lea    eax,[ebx+0x10]
   15148:	push   eax
   15149:	call   0x13ac6
   1514e:	push   ebx
   1514f:	call   0x1da14
   15154:	mov    eax,DWORD PTR [ebp-0x4]
   15157:	dec    DWORD PTR [eax+0xc]
   1515a:	mov    eax,DWORD PTR [ebp+0x8]
   1515d:	pop    ecx
   1515e:	mov    ecx,DWORD PTR [ebp+0xc]
   15161:	pop    edi
   15162:	pop    esi
   15163:	mov    DWORD PTR [eax],ecx
   15165:	pop    ebx
   15166:	leave  
   15167:	ret    0x8
   1516a:	int3   
   1516b:	int3   
   1516c:	int3   
   1516d:	int3   
   1516e:	int3   
   1516f:	int3   
   15170:	mov    edi,edi
   15172:	push   ebp
   15173:	mov    ebp,esp
   15175:	push   ebx
   15176:	push   esi
   15177:	push   edi
   15178:	mov    edi,DWORD PTR [ebp+0x8]
   1517b:	mov    ebx,ecx
   1517d:	mov    esi,edi
   1517f:	cmp    edi,DWORD PTR ds:0x7f8c0
   15185:	je     0x151ad
   15187:	push   DWORD PTR [esi+0x8]
   1518a:	mov    ecx,ebx
   1518c:	call   0x15170
   15191:	mov    esi,DWORD PTR [esi]
   15193:	lea    eax,[edi+0x10]
   15196:	push   eax
   15197:	call   0x13ac6
   1519c:	push   edi
   1519d:	call   0x1da14
   151a2:	pop    ecx
   151a3:	mov    edi,esi
   151a5:	cmp    esi,DWORD PTR ds:0x7f8c0
   151ab:	jne    0x15187
   151ad:	pop    edi
   151ae:	pop    esi
   151af:	pop    ebx
   151b0:	pop    ebp
   151b1:	ret    0x4
   151b4:	int3   
   151b5:	int3   
   151b6:	int3   
   151b7:	int3   
   151b8:	int3   
   151b9:	int3   
   151ba:	mov    edi,edi
   151bc:	push   ebp
   151bd:	mov    ebp,esp
   151bf:	push   ebx
   151c0:	push   esi
   151c1:	mov    esi,DWORD PTR [ebp+0x10]
   151c4:	push   edi
   151c5:	push   0x0
   151c7:	push   esi
   151c8:	mov    edi,ecx
   151ca:	call   0x139ba
   151cf:	push   DWORD PTR [ebp+0x14]
   151d2:	mov    ebx,eax
   151d4:	mov    eax,ds:0x7f8c0
   151d9:	mov    DWORD PTR [ebx],eax
   151db:	mov    eax,ds:0x7f8c0
   151e0:	mov    DWORD PTR [ebx+0x8],eax
   151e3:	lea    eax,[ebx+0x10]
   151e6:	push   eax
   151e7:	call   0x13a8a
   151ec:	inc    DWORD PTR [edi+0xc]
   151ef:	cmp    esi,DWORD PTR [edi+0x4]
   151f2:	je     0x1521c
   151f4:	mov    eax,DWORD PTR [ebp+0xc]
   151f7:	cmp    eax,DWORD PTR ds:0x7f8c0
   151fd:	jne    0x1521c
   151ff:	lea    eax,[esi+0x10]
   15202:	push   eax
   15203:	push   DWORD PTR [ebp+0x14]
   15206:	call   0x197a4
   1520b:	test   al,al
   1520d:	jne    0x1521c
   1520f:	mov    DWORD PTR [esi+0x8],ebx
   15212:	mov    eax,DWORD PTR [edi+0x4]
   15215:	cmp    esi,DWORD PTR [eax+0x8]
   15218:	jne    0x15236
   1521a:	jmp    0x1522b
   1521c:	mov    DWORD PTR [esi],ebx
   1521e:	mov    eax,DWORD PTR [edi+0x4]
   15221:	cmp    esi,eax
   15223:	jne    0x15230
   15225:	mov    DWORD PTR [eax+0x4],ebx
   15228:	mov    eax,DWORD PTR [edi+0x4]
   1522b:	mov    DWORD PTR [eax+0x8],ebx
   1522e:	jmp    0x15236
   15230:	cmp    esi,DWORD PTR [eax]
   15232:	jne    0x15236
   15234:	mov    DWORD PTR [eax],ebx
   15236:	mov    eax,DWORD PTR [edi+0x4]
   15239:	mov    esi,ebx
   1523b:	cmp    ebx,DWORD PTR [eax+0x4]
   1523e:	je     0x152f2
   15244:	mov    eax,DWORD PTR [esi+0x4]
   15247:	xor    edx,edx
   15249:	cmp    DWORD PTR [eax+0x70],edx
   1524c:	jne    0x152f2
   15252:	mov    ecx,DWORD PTR [eax+0x4]
   15255:	cmp    eax,DWORD PTR [ecx]
   15257:	jne    0x15293
   15259:	mov    ecx,DWORD PTR [ecx+0x8]
   1525c:	cmp    DWORD PTR [ecx+0x70],edx
   1525f:	je     0x1529a
   15261:	cmp    esi,DWORD PTR [eax+0x8]
   15264:	jne    0x15270
   15266:	mov    esi,eax
   15268:	push   esi
   15269:	mov    ecx,edi
   1526b:	call   0x12fe8
   15270:	mov    eax,DWORD PTR [esi+0x4]
   15273:	mov    DWORD PTR [eax+0x70],0x1
   1527a:	mov    eax,DWORD PTR [esi+0x4]
   1527d:	mov    eax,DWORD PTR [eax+0x4]
   15280:	and    DWORD PTR [eax+0x70],0x0
   15284:	mov    eax,DWORD PTR [esi+0x4]
   15287:	push   DWORD PTR [eax+0x4]
   1528a:	mov    ecx,edi
   1528c:	call   0x13036
   15291:	jmp    0x152e6
   15293:	mov    ecx,DWORD PTR [ecx]
   15295:	cmp    DWORD PTR [ecx+0x70],edx
   15298:	jne    0x152b7
   1529a:	mov    edx,eax
   1529c:	xor    eax,eax
   1529e:	inc    eax
   1529f:	mov    DWORD PTR [edx+0x70],eax
   152a2:	mov    DWORD PTR [ecx+0x70],eax
   152a5:	mov    eax,DWORD PTR [esi+0x4]
   152a8:	mov    eax,DWORD PTR [eax+0x4]
   152ab:	and    DWORD PTR [eax+0x70],0x0
   152af:	mov    eax,DWORD PTR [esi+0x4]
   152b2:	mov    esi,DWORD PTR [eax+0x4]
   152b5:	jmp    0x152e6
   152b7:	cmp    esi,DWORD PTR [eax]
   152b9:	jne    0x152c5
   152bb:	mov    esi,eax
   152bd:	push   esi
   152be:	mov    ecx,edi
   152c0:	call   0x13036
   152c5:	mov    eax,DWORD PTR [esi+0x4]
   152c8:	mov    DWORD PTR [eax+0x70],0x1
   152cf:	mov    eax,DWORD PTR [esi+0x4]
   152d2:	mov    eax,DWORD PTR [eax+0x4]
   152d5:	and    DWORD PTR [eax+0x70],0x0
   152d9:	mov    eax,DWORD PTR [esi+0x4]
   152dc:	push   DWORD PTR [eax+0x4]
   152df:	mov    ecx,edi
   152e1:	call   0x12fe8
   152e6:	mov    eax,DWORD PTR [edi+0x4]
   152e9:	cmp    esi,DWORD PTR [eax+0x4]
   152ec:	jne    0x15244
   152f2:	mov    eax,DWORD PTR [edi+0x4]
   152f5:	mov    eax,DWORD PTR [eax+0x4]
   152f8:	pop    edi
   152f9:	mov    DWORD PTR [eax+0x70],0x1
   15300:	mov    eax,DWORD PTR [ebp+0x8]
   15303:	pop    esi
   15304:	mov    DWORD PTR [eax],ebx
   15306:	pop    ebx
   15307:	pop    ebp
   15308:	ret    0x10
   1530b:	int3   
   1530c:	int3   
   1530d:	int3   
   1530e:	int3   
   1530f:	int3   
   15310:	mov    edi,edi
   15312:	push   ebp
   15313:	mov    ebp,esp
   15315:	push   ecx
   15316:	push   ecx
   15317:	push   ebx
   15318:	push   esi
   15319:	mov    DWORD PTR [ebp-0x4],ecx
   1531c:	push   edi
   1531d:	mov    edi,DWORD PTR [ebp+0xc]
   15320:	lea    ecx,[ebp+0xc]
   15323:	call   0x13870
   15328:	mov    esi,DWORD PTR [edi]
   1532a:	mov    eax,ds:0x7f8c4
   1532f:	mov    ebx,edi
   15331:	mov    DWORD PTR [ebp-0x8],esi
   15334:	cmp    esi,eax
   15336:	jne    0x15354
   15338:	mov    esi,DWORD PTR [edi+0x8]
   1533b:	mov    eax,DWORD PTR [ebx+0x4]
   1533e:	mov    ecx,DWORD PTR [ebp-0x4]
   15341:	mov    DWORD PTR [esi+0x4],eax
   15344:	mov    eax,DWORD PTR [ecx+0x4]
   15347:	cmp    DWORD PTR [eax+0x4],edi
   1534a:	jne    0x153c9
   1534c:	mov    DWORD PTR [eax+0x4],esi
   1534f:	jmp    0x153d7
   15354:	mov    ecx,DWORD PTR [edi+0x8]
   15357:	cmp    ecx,eax
   15359:	je     0x1533b
   1535b:	push   ecx
   1535c:	call   0x12cae
   15361:	mov    ebx,eax
   15363:	mov    esi,DWORD PTR [ebx+0x8]
   15366:	cmp    ebx,edi
   15368:	je     0x1533b
   1536a:	mov    eax,DWORD PTR [ebp-0x8]
   1536d:	mov    DWORD PTR [eax+0x4],ebx
   15370:	mov    eax,DWORD PTR [edi]
   15372:	mov    DWORD PTR [ebx],eax
   15374:	cmp    ebx,DWORD PTR [edi+0x8]
   15377:	jne    0x1537e
   15379:	mov    DWORD PTR [esi+0x4],ebx
   1537c:	jmp    0x15395
   1537e:	mov    eax,DWORD PTR [ebx+0x4]
   15381:	mov    DWORD PTR [esi+0x4],eax
   15384:	mov    eax,DWORD PTR [ebx+0x4]
   15387:	mov    DWORD PTR [eax],esi
   15389:	mov    eax,DWORD PTR [edi+0x8]
   1538c:	mov    DWORD PTR [ebx+0x8],eax
   1538f:	mov    eax,DWORD PTR [edi+0x8]
   15392:	mov    DWORD PTR [eax+0x4],ebx
   15395:	mov    eax,DWORD PTR [ebp-0x4]
   15398:	mov    eax,DWORD PTR [eax+0x4]
   1539b:	cmp    DWORD PTR [eax+0x4],edi
   1539e:	jne    0x153a5
   153a0:	mov    DWORD PTR [eax+0x4],ebx
   153a3:	jmp    0x153b3
   153a5:	mov    eax,DWORD PTR [edi+0x4]
   153a8:	cmp    DWORD PTR [eax],edi
   153aa:	jne    0x153b0
   153ac:	mov    DWORD PTR [eax],ebx
   153ae:	jmp    0x153b3
   153b0:	mov    DWORD PTR [eax+0x8],ebx
   153b3:	mov    eax,DWORD PTR [edi+0x4]
   153b6:	mov    DWORD PTR [ebx+0x4],eax
   153b9:	mov    eax,DWORD PTR [ebx+0x68]
   153bc:	mov    ecx,DWORD PTR [edi+0x68]
   153bf:	mov    DWORD PTR [ebx+0x68],ecx
   153c2:	mov    DWORD PTR [edi+0x68],eax
   153c5:	mov    ebx,edi
   153c7:	jmp    0x1542a
   153c9:	mov    eax,DWORD PTR [edi+0x4]
   153cc:	cmp    DWORD PTR [eax],edi
   153ce:	jne    0x153d4
   153d0:	mov    DWORD PTR [eax],esi
   153d2:	jmp    0x153d7
   153d4:	mov    DWORD PTR [eax+0x8],esi
   153d7:	mov    eax,DWORD PTR [ecx+0x4]
   153da:	mov    DWORD PTR [ebp-0x8],eax
   153dd:	cmp    DWORD PTR [eax],edi
   153df:	jne    0x15401
   153e1:	mov    edx,DWORD PTR [edi+0x8]
   153e4:	cmp    edx,DWORD PTR ds:0x7f8c4
   153ea:	jne    0x153f3
   153ec:	mov    edx,DWORD PTR [edi+0x4]
   153ef:	mov    DWORD PTR [eax],edx
   153f1:	jmp    0x15401
   153f3:	push   esi
   153f4:	call   0x12cae
   153f9:	mov    ecx,DWORD PTR [ebp-0x8]
   153fc:	mov    DWORD PTR [ecx],eax
   153fe:	mov    ecx,DWORD PTR [ebp-0x4]
   15401:	mov    eax,DWORD PTR [ecx+0x4]
   15404:	mov    DWORD PTR [ebp-0x8],eax
   15407:	cmp    DWORD PTR [eax+0x8],edi
   1540a:	jne    0x1542a
   1540c:	mov    ecx,DWORD PTR [edi]
   1540e:	cmp    ecx,DWORD PTR ds:0x7f8c4
   15414:	jne    0x1541e
   15416:	mov    ecx,DWORD PTR [edi+0x4]
   15419:	mov    DWORD PTR [eax+0x8],ecx
   1541c:	jmp    0x1542a
   1541e:	push   esi
   1541f:	call   0x1134e
   15424:	mov    ecx,DWORD PTR [ebp-0x8]
   15427:	mov    DWORD PTR [ecx+0x8],eax
   1542a:	xor    edi,edi
   1542c:	inc    edi
   1542d:	cmp    DWORD PTR [ebx+0x68],edi
   15430:	jne    0x15547
   15436:	jmp    0x154f5
   1543b:	cmp    DWORD PTR [esi+0x68],edi
   1543e:	jne    0x15544
   15444:	mov    eax,DWORD PTR [esi+0x4]
   15447:	cmp    esi,DWORD PTR [eax]
   15449:	jne    0x154c0
   1544b:	mov    eax,DWORD PTR [eax+0x8]
   1544e:	cmp    DWORD PTR [eax+0x68],0x0
   15452:	jne    0x1546c
   15454:	mov    DWORD PTR [eax+0x68],edi
   15457:	mov    eax,DWORD PTR [esi+0x4]
   1545a:	and    DWORD PTR [eax+0x68],0x0
   1545e:	push   DWORD PTR [esi+0x4]
   15461:	call   0x11300
   15466:	mov    eax,DWORD PTR [esi+0x4]
   15469:	mov    eax,DWORD PTR [eax+0x8]
   1546c:	mov    ecx,DWORD PTR [eax]
   1546e:	cmp    DWORD PTR [ecx+0x68],edi
   15471:	jne    0x1547b
   15473:	mov    ecx,DWORD PTR [eax+0x8]
   15476:	cmp    DWORD PTR [ecx+0x68],edi
   15479:	je     0x154ee
   1547b:	mov    ecx,DWORD PTR [eax+0x8]
   1547e:	cmp    DWORD PTR [ecx+0x68],edi
   15481:	jne    0x1549b
   15483:	mov    ecx,DWORD PTR [eax]
   15485:	mov    DWORD PTR [ecx+0x68],edi
   15488:	mov    ecx,DWORD PTR [ebp-0x4]
   1548b:	and    DWORD PTR [eax+0x68],0x0
   1548f:	push   eax
   15490:	call   0x11370
   15495:	mov    eax,DWORD PTR [esi+0x4]
   15498:	mov    eax,DWORD PTR [eax+0x8]
   1549b:	mov    ecx,DWORD PTR [esi+0x4]
   1549e:	mov    ecx,DWORD PTR [ecx+0x68]
   154a1:	mov    DWORD PTR [eax+0x68],ecx
   154a4:	mov    ecx,DWORD PTR [esi+0x4]
   154a7:	mov    DWORD PTR [ecx+0x68],edi
   154aa:	mov    eax,DWORD PTR [eax+0x8]
   154ad:	mov    ecx,DWORD PTR [ebp-0x4]
   154b0:	mov    DWORD PTR [eax+0x68],edi
   154b3:	push   DWORD PTR [esi+0x4]
   154b6:	call   0x11300
   154bb:	jmp    0x15544
   154c0:	mov    eax,DWORD PTR [eax]
   154c2:	cmp    DWORD PTR [eax+0x68],0x0
   154c6:	jne    0x154df
   154c8:	mov    DWORD PTR [eax+0x68],edi
   154cb:	mov    eax,DWORD PTR [esi+0x4]
   154ce:	and    DWORD PTR [eax+0x68],0x0
   154d2:	push   DWORD PTR [esi+0x4]
   154d5:	call   0x11370
   154da:	mov    eax,DWORD PTR [esi+0x4]
   154dd:	mov    eax,DWORD PTR [eax]
   154df:	mov    ecx,DWORD PTR [eax+0x8]
   154e2:	cmp    DWORD PTR [ecx+0x68],edi
   154e5:	jne    0x15506
   154e7:	mov    ecx,DWORD PTR [eax]
   154e9:	cmp    DWORD PTR [ecx+0x68],edi
   154ec:	jne    0x15506
   154ee:	and    DWORD PTR [eax+0x68],0x0
   154f2:	mov    esi,DWORD PTR [esi+0x4]
   154f5:	mov    ecx,DWORD PTR [ebp-0x4]
   154f8:	mov    eax,DWORD PTR [ecx+0x4]
   154fb:	cmp    esi,DWORD PTR [eax+0x4]
   154fe:	jne    0x1543b
   15504:	jmp    0x15544
   15506:	mov    ecx,DWORD PTR [eax]
   15508:	cmp    DWORD PTR [ecx+0x68],edi
   1550b:	jne    0x15525
   1550d:	mov    ecx,DWORD PTR [eax+0x8]
   15510:	mov    DWORD PTR [ecx+0x68],edi
   15513:	mov    ecx,DWORD PTR [ebp-0x4]
   15516:	and    DWORD PTR [eax+0x68],0x0
   1551a:	push   eax
   1551b:	call   0x11300
   15520:	mov    eax,DWORD PTR [esi+0x4]
   15523:	mov    eax,DWORD PTR [eax]
   15525:	mov    ecx,DWORD PTR [esi+0x4]
   15528:	mov    ecx,DWORD PTR [ecx+0x68]
   1552b:	mov    DWORD PTR [eax+0x68],ecx
   1552e:	mov    ecx,DWORD PTR [esi+0x4]
   15531:	mov    DWORD PTR [ecx+0x68],edi
   15534:	mov    eax,DWORD PTR [eax]
   15536:	mov    ecx,DWORD PTR [ebp-0x4]
   15539:	mov    DWORD PTR [eax+0x68],edi
   1553c:	push   DWORD PTR [esi+0x4]
   1553f:	call   0x11370
   15544:	mov    DWORD PTR [esi+0x68],edi
   15547:	lea    eax,[ebx+0x10]
   1554a:	push   eax
   1554b:	call   0x13ac6
   15550:	push   ebx
   15551:	call   0x1da14
   15556:	mov    eax,DWORD PTR [ebp-0x4]
   15559:	dec    DWORD PTR [eax+0xc]
   1555c:	mov    eax,DWORD PTR [ebp+0x8]
   1555f:	pop    ecx
   15560:	mov    ecx,DWORD PTR [ebp+0xc]
   15563:	pop    edi
   15564:	pop    esi
   15565:	mov    DWORD PTR [eax],ecx
   15567:	pop    ebx
   15568:	leave  
   15569:	ret    0x8
   1556c:	int3   
   1556d:	int3   
   1556e:	int3   
   1556f:	int3   
   15570:	int3   
   15571:	int3   
   15572:	mov    edi,edi
   15574:	push   ebp
   15575:	mov    ebp,esp
   15577:	push   ebx
   15578:	push   esi
   15579:	push   edi
   1557a:	mov    edi,DWORD PTR [ebp+0x8]
   1557d:	mov    ebx,ecx
   1557f:	mov    esi,edi
   15581:	cmp    edi,DWORD PTR ds:0x7f8c4
   15587:	je     0x155af
   15589:	push   DWORD PTR [esi+0x8]
   1558c:	mov    ecx,ebx
   1558e:	call   0x15572
   15593:	mov    esi,DWORD PTR [esi]
   15595:	lea    eax,[edi+0x10]
   15598:	push   eax
   15599:	call   0x13ac6
   1559e:	push   edi
   1559f:	call   0x1da14
   155a4:	pop    ecx
   155a5:	mov    edi,esi
   155a7:	cmp    esi,DWORD PTR ds:0x7f8c4
   155ad:	jne    0x15589
   155af:	pop    edi
   155b0:	pop    esi
   155b1:	pop    ebx
   155b2:	pop    ebp
   155b3:	ret    0x4
   155b6:	int3   
   155b7:	int3   
   155b8:	int3   
   155b9:	int3   
   155ba:	int3   
   155bb:	int3   
   155bc:	mov    edi,edi
   155be:	push   ebp
   155bf:	mov    ebp,esp
   155c1:	push   ebx
   155c2:	push   esi
   155c3:	mov    esi,DWORD PTR [ebp+0x10]
   155c6:	push   edi
   155c7:	push   0x0
   155c9:	push   esi
   155ca:	mov    edi,ecx
   155cc:	call   0x13972
   155d1:	push   DWORD PTR [ebp+0x14]
   155d4:	mov    ebx,eax
   155d6:	mov    eax,ds:0x7f8c4
   155db:	mov    DWORD PTR [ebx],eax
   155dd:	mov    eax,ds:0x7f8c4
   155e2:	mov    DWORD PTR [ebx+0x8],eax
   155e5:	lea    eax,[ebx+0x10]
   155e8:	push   eax
   155e9:	call   0x13aa8
   155ee:	inc    DWORD PTR [edi+0xc]
   155f1:	cmp    esi,DWORD PTR [edi+0x4]
   155f4:	je     0x1561e
   155f6:	mov    eax,DWORD PTR [ebp+0xc]
   155f9:	cmp    eax,DWORD PTR ds:0x7f8c4
   155ff:	jne    0x1561e
   15601:	lea    eax,[esi+0x10]
   15604:	push   eax
   15605:	push   DWORD PTR [ebp+0x14]
   15608:	call   0x197a4
   1560d:	test   al,al
   1560f:	jne    0x1561e
   15611:	mov    DWORD PTR [esi+0x8],ebx
   15614:	mov    eax,DWORD PTR [edi+0x4]
   15617:	cmp    esi,DWORD PTR [eax+0x8]
   1561a:	jne    0x15638
   1561c:	jmp    0x1562d
   1561e:	mov    DWORD PTR [esi],ebx
   15620:	mov    eax,DWORD PTR [edi+0x4]
   15623:	cmp    esi,eax
   15625:	jne    0x15632
   15627:	mov    DWORD PTR [eax+0x4],ebx
   1562a:	mov    eax,DWORD PTR [edi+0x4]
   1562d:	mov    DWORD PTR [eax+0x8],ebx
   15630:	jmp    0x15638
   15632:	cmp    esi,DWORD PTR [eax]
   15634:	jne    0x15638
   15636:	mov    DWORD PTR [eax],ebx
   15638:	mov    eax,DWORD PTR [edi+0x4]
   1563b:	mov    esi,ebx
   1563d:	cmp    ebx,DWORD PTR [eax+0x4]
   15640:	je     0x156f4
   15646:	mov    eax,DWORD PTR [esi+0x4]
   15649:	xor    edx,edx
   1564b:	cmp    DWORD PTR [eax+0x68],edx
   1564e:	jne    0x156f4
   15654:	mov    ecx,DWORD PTR [eax+0x4]
   15657:	cmp    eax,DWORD PTR [ecx]
   15659:	jne    0x15695
   1565b:	mov    ecx,DWORD PTR [ecx+0x8]
   1565e:	cmp    DWORD PTR [ecx+0x68],edx
   15661:	je     0x1569c
   15663:	cmp    esi,DWORD PTR [eax+0x8]
   15666:	jne    0x15672
   15668:	mov    esi,eax
   1566a:	push   esi
   1566b:	mov    ecx,edi
   1566d:	call   0x11300
   15672:	mov    eax,DWORD PTR [esi+0x4]
   15675:	mov    DWORD PTR [eax+0x68],0x1
   1567c:	mov    eax,DWORD PTR [esi+0x4]
   1567f:	mov    eax,DWORD PTR [eax+0x4]
   15682:	and    DWORD PTR [eax+0x68],0x0
   15686:	mov    eax,DWORD PTR [esi+0x4]
   15689:	push   DWORD PTR [eax+0x4]
   1568c:	mov    ecx,edi
   1568e:	call   0x11370
   15693:	jmp    0x156e8
   15695:	mov    ecx,DWORD PTR [ecx]
   15697:	cmp    DWORD PTR [ecx+0x68],edx
   1569a:	jne    0x156b9
   1569c:	mov    edx,eax
   1569e:	xor    eax,eax
   156a0:	inc    eax
   156a1:	mov    DWORD PTR [edx+0x68],eax
   156a4:	mov    DWORD PTR [ecx+0x68],eax
   156a7:	mov    eax,DWORD PTR [esi+0x4]
   156aa:	mov    eax,DWORD PTR [eax+0x4]
   156ad:	and    DWORD PTR [eax+0x68],0x0
   156b1:	mov    eax,DWORD PTR [esi+0x4]
   156b4:	mov    esi,DWORD PTR [eax+0x4]
   156b7:	jmp    0x156e8
   156b9:	cmp    esi,DWORD PTR [eax]
   156bb:	jne    0x156c7
   156bd:	mov    esi,eax
   156bf:	push   esi
   156c0:	mov    ecx,edi
   156c2:	call   0x11370
   156c7:	mov    eax,DWORD PTR [esi+0x4]
   156ca:	mov    DWORD PTR [eax+0x68],0x1
   156d1:	mov    eax,DWORD PTR [esi+0x4]
   156d4:	mov    eax,DWORD PTR [eax+0x4]
   156d7:	and    DWORD PTR [eax+0x68],0x0
   156db:	mov    eax,DWORD PTR [esi+0x4]
   156de:	push   DWORD PTR [eax+0x4]
   156e1:	mov    ecx,edi
   156e3:	call   0x11300
   156e8:	mov    eax,DWORD PTR [edi+0x4]
   156eb:	cmp    esi,DWORD PTR [eax+0x4]
   156ee:	jne    0x15646
   156f4:	mov    eax,DWORD PTR [edi+0x4]
   156f7:	mov    eax,DWORD PTR [eax+0x4]
   156fa:	pop    edi
   156fb:	mov    DWORD PTR [eax+0x68],0x1
   15702:	mov    eax,DWORD PTR [ebp+0x8]
   15705:	pop    esi
   15706:	mov    DWORD PTR [eax],ebx
   15708:	pop    ebx
   15709:	pop    ebp
   1570a:	ret    0x10
   1570d:	int3   
   1570e:	int3   
   1570f:	int3   
   15710:	int3   
   15711:	int3   
   15712:	mov    edi,edi
   15714:	push   ebp
   15715:	mov    ebp,esp
   15717:	push   ebx
   15718:	push   esi
   15719:	mov    esi,DWORD PTR [ebp+0x10]
   1571c:	push   edi
   1571d:	push   0x0
   1571f:	push   esi
   15720:	mov    edi,ecx
   15722:	call   0x139de
   15727:	push   DWORD PTR [ebp+0x14]
   1572a:	mov    ebx,eax
   1572c:	mov    eax,ds:0x7f8c8
   15731:	mov    DWORD PTR [ebx],eax
   15733:	mov    eax,ds:0x7f8c8
   15738:	mov    DWORD PTR [ebx+0x8],eax
   1573b:	lea    eax,[ebx+0xc]
   1573e:	push   eax
   1573f:	call   0x13ade
   15744:	inc    DWORD PTR [edi+0xc]
   15747:	cmp    esi,DWORD PTR [edi+0x4]
   1574a:	je     0x15774
   1574c:	mov    eax,DWORD PTR [ebp+0xc]
   1574f:	cmp    eax,DWORD PTR ds:0x7f8c8
   15755:	jne    0x15774
   15757:	lea    eax,[esi+0xc]
   1575a:	push   eax
   1575b:	push   DWORD PTR [ebp+0x14]
   1575e:	call   0x197a4
   15763:	test   al,al
   15765:	jne    0x15774
   15767:	mov    DWORD PTR [esi+0x8],ebx
   1576a:	mov    eax,DWORD PTR [edi+0x4]
   1576d:	cmp    esi,DWORD PTR [eax+0x8]
   15770:	jne    0x1578e
   15772:	jmp    0x15783
   15774:	mov    DWORD PTR [esi],ebx
   15776:	mov    eax,DWORD PTR [edi+0x4]
   15779:	cmp    esi,eax
   1577b:	jne    0x15788
   1577d:	mov    DWORD PTR [eax+0x4],ebx
   15780:	mov    eax,DWORD PTR [edi+0x4]
   15783:	mov    DWORD PTR [eax+0x8],ebx
   15786:	jmp    0x1578e
   15788:	cmp    esi,DWORD PTR [eax]
   1578a:	jne    0x1578e
   1578c:	mov    DWORD PTR [eax],ebx
   1578e:	mov    eax,DWORD PTR [edi+0x4]
   15791:	mov    esi,ebx
   15793:	cmp    ebx,DWORD PTR [eax+0x4]
   15796:	je     0x1584a
   1579c:	mov    eax,DWORD PTR [esi+0x4]
   1579f:	xor    edx,edx
   157a1:	cmp    DWORD PTR [eax+0x1c],edx
   157a4:	jne    0x1584a
   157aa:	mov    ecx,DWORD PTR [eax+0x4]
   157ad:	cmp    eax,DWORD PTR [ecx]
   157af:	jne    0x157eb
   157b1:	mov    ecx,DWORD PTR [ecx+0x8]
   157b4:	cmp    DWORD PTR [ecx+0x1c],edx
   157b7:	je     0x157f2
   157b9:	cmp    esi,DWORD PTR [eax+0x8]
   157bc:	jne    0x157c8
   157be:	mov    esi,eax
   157c0:	push   esi
   157c1:	mov    ecx,edi
   157c3:	call   0x130fe
   157c8:	mov    eax,DWORD PTR [esi+0x4]
   157cb:	mov    DWORD PTR [eax+0x1c],0x1
   157d2:	mov    eax,DWORD PTR [esi+0x4]
   157d5:	mov    eax,DWORD PTR [eax+0x4]
   157d8:	and    DWORD PTR [eax+0x1c],0x0
   157dc:	mov    eax,DWORD PTR [esi+0x4]
   157df:	push   DWORD PTR [eax+0x4]
   157e2:	mov    ecx,edi
   157e4:	call   0x1314c
   157e9:	jmp    0x1583e
   157eb:	mov    ecx,DWORD PTR [ecx]
   157ed:	cmp    DWORD PTR [ecx+0x1c],edx
   157f0:	jne    0x1580f
   157f2:	mov    edx,eax
   157f4:	xor    eax,eax
   157f6:	inc    eax
   157f7:	mov    DWORD PTR [edx+0x1c],eax
   157fa:	mov    DWORD PTR [ecx+0x1c],eax
   157fd:	mov    eax,DWORD PTR [esi+0x4]
   15800:	mov    eax,DWORD PTR [eax+0x4]
   15803:	and    DWORD PTR [eax+0x1c],0x0
   15807:	mov    eax,DWORD PTR [esi+0x4]
   1580a:	mov    esi,DWORD PTR [eax+0x4]
   1580d:	jmp    0x1583e
   1580f:	cmp    esi,DWORD PTR [eax]
   15811:	jne    0x1581d
   15813:	mov    esi,eax
   15815:	push   esi
   15816:	mov    ecx,edi
   15818:	call   0x1314c
   1581d:	mov    eax,DWORD PTR [esi+0x4]
   15820:	mov    DWORD PTR [eax+0x1c],0x1
   15827:	mov    eax,DWORD PTR [esi+0x4]
   1582a:	mov    eax,DWORD PTR [eax+0x4]
   1582d:	and    DWORD PTR [eax+0x1c],0x0
   15831:	mov    eax,DWORD PTR [esi+0x4]
   15834:	push   DWORD PTR [eax+0x4]
   15837:	mov    ecx,edi
   15839:	call   0x130fe
   1583e:	mov    eax,DWORD PTR [edi+0x4]
   15841:	cmp    esi,DWORD PTR [eax+0x4]
   15844:	jne    0x1579c
   1584a:	mov    eax,DWORD PTR [edi+0x4]
   1584d:	mov    eax,DWORD PTR [eax+0x4]
   15850:	pop    edi
   15851:	mov    DWORD PTR [eax+0x1c],0x1
   15858:	mov    eax,DWORD PTR [ebp+0x8]
   1585b:	pop    esi
   1585c:	mov    DWORD PTR [eax],ebx
   1585e:	pop    ebx
   1585f:	pop    ebp
   15860:	ret    0x10
   15863:	int3   
   15864:	int3   
   15865:	int3   
   15866:	int3   
   15867:	int3   
   15868:	mov    edi,edi
   1586a:	push   ebp
   1586b:	mov    ebp,esp
   1586d:	push   ecx
   1586e:	push   ecx
   1586f:	push   ebx
   15870:	push   esi
   15871:	mov    DWORD PTR [ebp-0x4],ecx
   15874:	push   edi
   15875:	mov    edi,DWORD PTR [ebp+0xc]
   15878:	lea    ecx,[ebp+0xc]
   1587b:	call   0x1157e
   15880:	mov    esi,DWORD PTR [edi]
   15882:	mov    eax,ds:0x7f8cc
   15887:	mov    ebx,edi
   15889:	mov    DWORD PTR [ebp-0x8],esi
   1588c:	cmp    esi,eax
   1588e:	jne    0x158ac
   15890:	mov    esi,DWORD PTR [edi+0x8]
   15893:	mov    eax,DWORD PTR [ebx+0x4]
   15896:	mov    ecx,DWORD PTR [ebp-0x4]
   15899:	mov    DWORD PTR [esi+0x4],eax
   1589c:	mov    eax,DWORD PTR [ecx+0x4]
   1589f:	cmp    DWORD PTR [eax+0x4],edi
   158a2:	jne    0x15921
   158a4:	mov    DWORD PTR [eax+0x4],esi
   158a7:	jmp    0x1592f
   158ac:	mov    ecx,DWORD PTR [edi+0x8]
   158af:	cmp    ecx,eax
   158b1:	je     0x15893
   158b3:	push   ecx
   158b4:	call   0x114a6
   158b9:	mov    ebx,eax
   158bb:	mov    esi,DWORD PTR [ebx+0x8]
   158be:	cmp    ebx,edi
   158c0:	je     0x15893
   158c2:	mov    eax,DWORD PTR [ebp-0x8]
   158c5:	mov    DWORD PTR [eax+0x4],ebx
   158c8:	mov    eax,DWORD PTR [edi]
   158ca:	mov    DWORD PTR [ebx],eax
   158cc:	cmp    ebx,DWORD PTR [edi+0x8]
   158cf:	jne    0x158d6
   158d1:	mov    DWORD PTR [esi+0x4],ebx
   158d4:	jmp    0x158ed
   158d6:	mov    eax,DWORD PTR [ebx+0x4]
   158d9:	mov    DWORD PTR [esi+0x4],eax
   158dc:	mov    eax,DWORD PTR [ebx+0x4]
   158df:	mov    DWORD PTR [eax],esi
   158e1:	mov    eax,DWORD PTR [edi+0x8]
   158e4:	mov    DWORD PTR [ebx+0x8],eax
   158e7:	mov    eax,DWORD PTR [edi+0x8]
   158ea:	mov    DWORD PTR [eax+0x4],ebx
   158ed:	mov    eax,DWORD PTR [ebp-0x4]
   158f0:	mov    eax,DWORD PTR [eax+0x4]
   158f3:	cmp    DWORD PTR [eax+0x4],edi
   158f6:	jne    0x158fd
   158f8:	mov    DWORD PTR [eax+0x4],ebx
   158fb:	jmp    0x1590b
   158fd:	mov    eax,DWORD PTR [edi+0x4]
   15900:	cmp    DWORD PTR [eax],edi
   15902:	jne    0x15908
   15904:	mov    DWORD PTR [eax],ebx
   15906:	jmp    0x1590b
   15908:	mov    DWORD PTR [eax+0x8],ebx
   1590b:	mov    eax,DWORD PTR [edi+0x4]
   1590e:	mov    DWORD PTR [ebx+0x4],eax
   15911:	mov    eax,DWORD PTR [ebx+0x14]
   15914:	mov    ecx,DWORD PTR [edi+0x14]
   15917:	mov    DWORD PTR [ebx+0x14],ecx
   1591a:	mov    DWORD PTR [edi+0x14],eax
   1591d:	mov    ebx,edi
   1591f:	jmp    0x15982
   15921:	mov    eax,DWORD PTR [edi+0x4]
   15924:	cmp    DWORD PTR [eax],edi
   15926:	jne    0x1592c
   15928:	mov    DWORD PTR [eax],esi
   1592a:	jmp    0x1592f
   1592c:	mov    DWORD PTR [eax+0x8],esi
   1592f:	mov    eax,DWORD PTR [ecx+0x4]
   15932:	mov    DWORD PTR [ebp-0x8],eax
   15935:	cmp    DWORD PTR [eax],edi
   15937:	jne    0x15959
   15939:	mov    edx,DWORD PTR [edi+0x8]
   1593c:	cmp    edx,DWORD PTR ds:0x7f8cc
   15942:	jne    0x1594b
   15944:	mov    edx,DWORD PTR [edi+0x4]
   15947:	mov    DWORD PTR [eax],edx
   15949:	jmp    0x15959
   1594b:	push   esi
   1594c:	call   0x114a6
   15951:	mov    ecx,DWORD PTR [ebp-0x8]
   15954:	mov    DWORD PTR [ecx],eax
   15956:	mov    ecx,DWORD PTR [ebp-0x4]
   15959:	mov    eax,DWORD PTR [ecx+0x4]
   1595c:	mov    DWORD PTR [ebp-0x8],eax
   1595f:	cmp    DWORD PTR [eax+0x8],edi
   15962:	jne    0x15982
   15964:	mov    ecx,DWORD PTR [edi]
   15966:	cmp    ecx,DWORD PTR ds:0x7f8cc
   1596c:	jne    0x15976
   1596e:	mov    ecx,DWORD PTR [edi+0x4]
   15971:	mov    DWORD PTR [eax+0x8],ecx
   15974:	jmp    0x15982
   15976:	push   esi
   15977:	call   0x11484
   1597c:	mov    ecx,DWORD PTR [ebp-0x8]
   1597f:	mov    DWORD PTR [ecx+0x8],eax
   15982:	xor    edi,edi
   15984:	inc    edi
   15985:	cmp    DWORD PTR [ebx+0x14],edi
   15988:	jne    0x15a9f
   1598e:	jmp    0x15a4d
   15993:	cmp    DWORD PTR [esi+0x14],edi
   15996:	jne    0x15a9c
   1599c:	mov    eax,DWORD PTR [esi+0x4]
   1599f:	cmp    esi,DWORD PTR [eax]
   159a1:	jne    0x15a18
   159a3:	mov    eax,DWORD PTR [eax+0x8]
   159a6:	cmp    DWORD PTR [eax+0x14],0x0
   159aa:	jne    0x159c4
   159ac:	mov    DWORD PTR [eax+0x14],edi
   159af:	mov    eax,DWORD PTR [esi+0x4]
   159b2:	and    DWORD PTR [eax+0x14],0x0
   159b6:	push   DWORD PTR [esi+0x4]
   159b9:	call   0x131dc
   159be:	mov    eax,DWORD PTR [esi+0x4]
   159c1:	mov    eax,DWORD PTR [eax+0x8]
   159c4:	mov    ecx,DWORD PTR [eax]
   159c6:	cmp    DWORD PTR [ecx+0x14],edi
   159c9:	jne    0x159d3
   159cb:	mov    ecx,DWORD PTR [eax+0x8]
   159ce:	cmp    DWORD PTR [ecx+0x14],edi
   159d1:	je     0x15a46
   159d3:	mov    ecx,DWORD PTR [eax+0x8]
   159d6:	cmp    DWORD PTR [ecx+0x14],edi
   159d9:	jne    0x159f3
   159db:	mov    ecx,DWORD PTR [eax]
   159dd:	mov    DWORD PTR [ecx+0x14],edi
   159e0:	mov    ecx,DWORD PTR [ebp-0x4]
   159e3:	and    DWORD PTR [eax+0x14],0x0
   159e7:	push   eax
   159e8:	call   0x1322a
   159ed:	mov    eax,DWORD PTR [esi+0x4]
   159f0:	mov    eax,DWORD PTR [eax+0x8]
   159f3:	mov    ecx,DWORD PTR [esi+0x4]
   159f6:	mov    ecx,DWORD PTR [ecx+0x14]
   159f9:	mov    DWORD PTR [eax+0x14],ecx
   159fc:	mov    ecx,DWORD PTR [esi+0x4]
   159ff:	mov    DWORD PTR [ecx+0x14],edi
   15a02:	mov    eax,DWORD PTR [eax+0x8]
   15a05:	mov    ecx,DWORD PTR [ebp-0x4]
   15a08:	mov    DWORD PTR [eax+0x14],edi
   15a0b:	push   DWORD PTR [esi+0x4]
   15a0e:	call   0x131dc
   15a13:	jmp    0x15a9c
   15a18:	mov    eax,DWORD PTR [eax]
   15a1a:	cmp    DWORD PTR [eax+0x14],0x0
   15a1e:	jne    0x15a37
   15a20:	mov    DWORD PTR [eax+0x14],edi
   15a23:	mov    eax,DWORD PTR [esi+0x4]
   15a26:	and    DWORD PTR [eax+0x14],0x0
   15a2a:	push   DWORD PTR [esi+0x4]
   15a2d:	call   0x1322a
   15a32:	mov    eax,DWORD PTR [esi+0x4]
   15a35:	mov    eax,DWORD PTR [eax]
   15a37:	mov    ecx,DWORD PTR [eax+0x8]
   15a3a:	cmp    DWORD PTR [ecx+0x14],edi
   15a3d:	jne    0x15a5e
   15a3f:	mov    ecx,DWORD PTR [eax]
   15a41:	cmp    DWORD PTR [ecx+0x14],edi
   15a44:	jne    0x15a5e
   15a46:	and    DWORD PTR [eax+0x14],0x0
   15a4a:	mov    esi,DWORD PTR [esi+0x4]
   15a4d:	mov    ecx,DWORD PTR [ebp-0x4]
   15a50:	mov    eax,DWORD PTR [ecx+0x4]
   15a53:	cmp    esi,DWORD PTR [eax+0x4]
   15a56:	jne    0x15993
   15a5c:	jmp    0x15a9c
   15a5e:	mov    ecx,DWORD PTR [eax]
   15a60:	cmp    DWORD PTR [ecx+0x14],edi
   15a63:	jne    0x15a7d
   15a65:	mov    ecx,DWORD PTR [eax+0x8]
   15a68:	mov    DWORD PTR [ecx+0x14],edi
   15a6b:	mov    ecx,DWORD PTR [ebp-0x4]
   15a6e:	and    DWORD PTR [eax+0x14],0x0
   15a72:	push   eax
   15a73:	call   0x131dc
   15a78:	mov    eax,DWORD PTR [esi+0x4]
   15a7b:	mov    eax,DWORD PTR [eax]
   15a7d:	mov    ecx,DWORD PTR [esi+0x4]
   15a80:	mov    ecx,DWORD PTR [ecx+0x14]
   15a83:	mov    DWORD PTR [eax+0x14],ecx
   15a86:	mov    ecx,DWORD PTR [esi+0x4]
   15a89:	mov    DWORD PTR [ecx+0x14],edi
   15a8c:	mov    eax,DWORD PTR [eax]
   15a8e:	mov    ecx,DWORD PTR [ebp-0x4]
   15a91:	mov    DWORD PTR [eax+0x14],edi
   15a94:	push   DWORD PTR [esi+0x4]
   15a97:	call   0x1322a
   15a9c:	mov    DWORD PTR [esi+0x14],edi
   15a9f:	lea    eax,[ebx+0xc]
   15aa2:	push   eax
   15aa3:	call   0x13b1a
   15aa8:	push   ebx
   15aa9:	call   0x1da14
   15aae:	mov    eax,DWORD PTR [ebp-0x4]
   15ab1:	dec    DWORD PTR [eax+0xc]
   15ab4:	mov    eax,DWORD PTR [ebp+0x8]
   15ab7:	pop    ecx
   15ab8:	mov    ecx,DWORD PTR [ebp+0xc]
   15abb:	pop    edi
   15abc:	pop    esi
   15abd:	mov    DWORD PTR [eax],ecx
   15abf:	pop    ebx
   15ac0:	leave  
   15ac1:	ret    0x8
   15ac4:	int3   
   15ac5:	int3   
   15ac6:	int3   
   15ac7:	int3   
   15ac8:	int3   
   15ac9:	int3   
   15aca:	mov    edi,edi
   15acc:	push   ebp
   15acd:	mov    ebp,esp
   15acf:	push   ebx
   15ad0:	push   esi
   15ad1:	push   edi
   15ad2:	mov    edi,DWORD PTR [ebp+0x8]
   15ad5:	mov    ebx,ecx
   15ad7:	mov    esi,edi
   15ad9:	cmp    edi,DWORD PTR ds:0x7f8cc
   15adf:	je     0x15b07
   15ae1:	push   DWORD PTR [esi+0x8]
   15ae4:	mov    ecx,ebx
   15ae6:	call   0x15aca
   15aeb:	mov    esi,DWORD PTR [esi]
   15aed:	lea    eax,[edi+0xc]
   15af0:	push   eax
   15af1:	call   0x13b1a
   15af6:	push   edi
   15af7:	call   0x1da14
   15afc:	pop    ecx
   15afd:	mov    edi,esi
   15aff:	cmp    esi,DWORD PTR ds:0x7f8cc
   15b05:	jne    0x15ae1
   15b07:	pop    edi
   15b08:	pop    esi
   15b09:	pop    ebx
   15b0a:	pop    ebp
   15b0b:	ret    0x4
   15b0e:	int3   
   15b0f:	int3   
   15b10:	int3   
   15b11:	int3   
   15b12:	int3   
   15b13:	int3   
   15b14:	mov    edi,edi
   15b16:	push   ebp
   15b17:	mov    ebp,esp
   15b19:	push   ebx
   15b1a:	push   esi
   15b1b:	mov    esi,DWORD PTR [ebp+0x10]
   15b1e:	push   edi
   15b1f:	push   0x0
   15b21:	push   esi
   15b22:	mov    edi,ecx
   15b24:	call   0x1394e
   15b29:	push   DWORD PTR [ebp+0x14]
   15b2c:	mov    ebx,eax
   15b2e:	mov    eax,ds:0x7f8cc
   15b33:	mov    DWORD PTR [ebx],eax
   15b35:	mov    eax,ds:0x7f8cc
   15b3a:	mov    DWORD PTR [ebx+0x8],eax
   15b3d:	lea    eax,[ebx+0xc]
   15b40:	push   eax
   15b41:	call   0x13afc
   15b46:	inc    DWORD PTR [edi+0xc]
   15b49:	cmp    esi,DWORD PTR [edi+0x4]
   15b4c:	je     0x15b70
   15b4e:	mov    eax,DWORD PTR [ebp+0xc]
   15b51:	cmp    eax,DWORD PTR ds:0x7f8cc
   15b57:	jne    0x15b70
   15b59:	mov    eax,DWORD PTR [ebp+0x14]
   15b5c:	mov    eax,DWORD PTR [eax]
   15b5e:	cmp    eax,DWORD PTR [esi+0xc]
   15b61:	jl     0x15b70
   15b63:	mov    DWORD PTR [esi+0x8],ebx
   15b66:	mov    eax,DWORD PTR [edi+0x4]
   15b69:	cmp    esi,DWORD PTR [eax+0x8]
   15b6c:	jne    0x15b8a
   15b6e:	jmp    0x15b7f
   15b70:	mov    DWORD PTR [esi],ebx
   15b72:	mov    eax,DWORD PTR [edi+0x4]
   15b75:	cmp    esi,eax
   15b77:	jne    0x15b84
   15b79:	mov    DWORD PTR [eax+0x4],ebx
   15b7c:	mov    eax,DWORD PTR [edi+0x4]
   15b7f:	mov    DWORD PTR [eax+0x8],ebx
   15b82:	jmp    0x15b8a
   15b84:	cmp    esi,DWORD PTR [eax]
   15b86:	jne    0x15b8a
   15b88:	mov    DWORD PTR [eax],ebx
   15b8a:	mov    eax,DWORD PTR [edi+0x4]
   15b8d:	mov    esi,ebx
   15b8f:	cmp    ebx,DWORD PTR [eax+0x4]
   15b92:	je     0x15c46
   15b98:	mov    eax,DWORD PTR [esi+0x4]
   15b9b:	xor    edx,edx
   15b9d:	cmp    DWORD PTR [eax+0x14],edx
   15ba0:	jne    0x15c46
   15ba6:	mov    ecx,DWORD PTR [eax+0x4]
   15ba9:	cmp    eax,DWORD PTR [ecx]
   15bab:	jne    0x15be7
   15bad:	mov    ecx,DWORD PTR [ecx+0x8]
   15bb0:	cmp    DWORD PTR [ecx+0x14],edx
   15bb3:	je     0x15bee
   15bb5:	cmp    esi,DWORD PTR [eax+0x8]
   15bb8:	jne    0x15bc4
   15bba:	mov    esi,eax
   15bbc:	push   esi
   15bbd:	mov    ecx,edi
   15bbf:	call   0x131dc
   15bc4:	mov    eax,DWORD PTR [esi+0x4]
   15bc7:	mov    DWORD PTR [eax+0x14],0x1
   15bce:	mov    eax,DWORD PTR [esi+0x4]
   15bd1:	mov    eax,DWORD PTR [eax+0x4]
   15bd4:	and    DWORD PTR [eax+0x14],0x0
   15bd8:	mov    eax,DWORD PTR [esi+0x4]
   15bdb:	push   DWORD PTR [eax+0x4]
   15bde:	mov    ecx,edi
   15be0:	call   0x1322a
   15be5:	jmp    0x15c3a
   15be7:	mov    ecx,DWORD PTR [ecx]
   15be9:	cmp    DWORD PTR [ecx+0x14],edx
   15bec:	jne    0x15c0b
   15bee:	mov    edx,eax
   15bf0:	xor    eax,eax
   15bf2:	inc    eax
   15bf3:	mov    DWORD PTR [edx+0x14],eax
   15bf6:	mov    DWORD PTR [ecx+0x14],eax
   15bf9:	mov    eax,DWORD PTR [esi+0x4]
   15bfc:	mov    eax,DWORD PTR [eax+0x4]
   15bff:	and    DWORD PTR [eax+0x14],0x0
   15c03:	mov    eax,DWORD PTR [esi+0x4]
   15c06:	mov    esi,DWORD PTR [eax+0x4]
   15c09:	jmp    0x15c3a
   15c0b:	cmp    esi,DWORD PTR [eax]
   15c0d:	jne    0x15c19
   15c0f:	mov    esi,eax
   15c11:	push   esi
   15c12:	mov    ecx,edi
   15c14:	call   0x1322a
   15c19:	mov    eax,DWORD PTR [esi+0x4]
   15c1c:	mov    DWORD PTR [eax+0x14],0x1
   15c23:	mov    eax,DWORD PTR [esi+0x4]
   15c26:	mov    eax,DWORD PTR [eax+0x4]
   15c29:	and    DWORD PTR [eax+0x14],0x0
   15c2d:	mov    eax,DWORD PTR [esi+0x4]
   15c30:	push   DWORD PTR [eax+0x4]
   15c33:	mov    ecx,edi
   15c35:	call   0x131dc
   15c3a:	mov    eax,DWORD PTR [edi+0x4]
   15c3d:	cmp    esi,DWORD PTR [eax+0x4]
   15c40:	jne    0x15b98
   15c46:	mov    eax,DWORD PTR [edi+0x4]
   15c49:	mov    eax,DWORD PTR [eax+0x4]
   15c4c:	pop    edi
   15c4d:	mov    DWORD PTR [eax+0x14],0x1
   15c54:	mov    eax,DWORD PTR [ebp+0x8]
   15c57:	pop    esi
   15c58:	mov    DWORD PTR [eax],ebx
   15c5a:	pop    ebx
   15c5b:	pop    ebp
   15c5c:	ret    0x10
   15c5f:	int3   
   15c60:	int3   
   15c61:	int3   
   15c62:	int3   
   15c63:	int3   
   15c64:	mov    edi,edi
   15c66:	push   ebp
   15c67:	mov    ebp,esp
   15c69:	push   ebx
   15c6a:	push   esi
   15c6b:	mov    esi,DWORD PTR [ebp+0x10]
   15c6e:	push   edi
   15c6f:	push   0x0
   15c71:	push   esi
   15c72:	mov    edi,ecx
   15c74:	call   0x139de
   15c79:	push   DWORD PTR [ebp+0x14]
   15c7c:	mov    ebx,eax
   15c7e:	mov    eax,ds:0x7f8d4
   15c83:	mov    DWORD PTR [ebx],eax
   15c85:	mov    eax,ds:0x7f8d4
   15c8a:	mov    DWORD PTR [ebx+0x8],eax
   15c8d:	lea    eax,[ebx+0xc]
   15c90:	push   eax
   15c91:	call   0x13b32
   15c96:	inc    DWORD PTR [edi+0xc]
   15c99:	cmp    esi,DWORD PTR [edi+0x4]
   15c9c:	je     0x15cc6
   15c9e:	mov    eax,DWORD PTR [ebp+0xc]
   15ca1:	cmp    eax,DWORD PTR ds:0x7f8d4
   15ca7:	jne    0x15cc6
   15ca9:	lea    eax,[esi+0xc]
   15cac:	push   eax
   15cad:	push   DWORD PTR [ebp+0x14]
   15cb0:	call   0x197d4
   15cb5:	test   al,al
   15cb7:	jne    0x15cc6
   15cb9:	mov    DWORD PTR [esi+0x8],ebx
   15cbc:	mov    eax,DWORD PTR [edi+0x4]
   15cbf:	cmp    esi,DWORD PTR [eax+0x8]
   15cc2:	jne    0x15ce0
   15cc4:	jmp    0x15cd5
   15cc6:	mov    DWORD PTR [esi],ebx
   15cc8:	mov    eax,DWORD PTR [edi+0x4]
   15ccb:	cmp    esi,eax
   15ccd:	jne    0x15cda
   15ccf:	mov    DWORD PTR [eax+0x4],ebx
   15cd2:	mov    eax,DWORD PTR [edi+0x4]
   15cd5:	mov    DWORD PTR [eax+0x8],ebx
   15cd8:	jmp    0x15ce0
   15cda:	cmp    esi,DWORD PTR [eax]
   15cdc:	jne    0x15ce0
   15cde:	mov    DWORD PTR [eax],ebx
   15ce0:	mov    eax,DWORD PTR [edi+0x4]
   15ce3:	mov    esi,ebx
   15ce5:	cmp    ebx,DWORD PTR [eax+0x4]
   15ce8:	je     0x15d9c
   15cee:	mov    eax,DWORD PTR [esi+0x4]
   15cf1:	xor    edx,edx
   15cf3:	cmp    DWORD PTR [eax+0x1c],edx
   15cf6:	jne    0x15d9c
   15cfc:	mov    ecx,DWORD PTR [eax+0x4]
   15cff:	cmp    eax,DWORD PTR [ecx]
   15d01:	jne    0x15d3d
   15d03:	mov    ecx,DWORD PTR [ecx+0x8]
   15d06:	cmp    DWORD PTR [ecx+0x1c],edx
   15d09:	je     0x15d44
   15d0b:	cmp    esi,DWORD PTR [eax+0x8]
   15d0e:	jne    0x15d1a
   15d10:	mov    esi,eax
   15d12:	push   esi
   15d13:	mov    ecx,edi
   15d15:	call   0x132f2
   15d1a:	mov    eax,DWORD PTR [esi+0x4]
   15d1d:	mov    DWORD PTR [eax+0x1c],0x1
   15d24:	mov    eax,DWORD PTR [esi+0x4]
   15d27:	mov    eax,DWORD PTR [eax+0x4]
   15d2a:	and    DWORD PTR [eax+0x1c],0x0
   15d2e:	mov    eax,DWORD PTR [esi+0x4]
   15d31:	push   DWORD PTR [eax+0x4]
   15d34:	mov    ecx,edi
   15d36:	call   0x13340
   15d3b:	jmp    0x15d90
   15d3d:	mov    ecx,DWORD PTR [ecx]
   15d3f:	cmp    DWORD PTR [ecx+0x1c],edx
   15d42:	jne    0x15d61
   15d44:	mov    edx,eax
   15d46:	xor    eax,eax
   15d48:	inc    eax
   15d49:	mov    DWORD PTR [edx+0x1c],eax
   15d4c:	mov    DWORD PTR [ecx+0x1c],eax
   15d4f:	mov    eax,DWORD PTR [esi+0x4]
   15d52:	mov    eax,DWORD PTR [eax+0x4]
   15d55:	and    DWORD PTR [eax+0x1c],0x0
   15d59:	mov    eax,DWORD PTR [esi+0x4]
   15d5c:	mov    esi,DWORD PTR [eax+0x4]
   15d5f:	jmp    0x15d90
   15d61:	cmp    esi,DWORD PTR [eax]
   15d63:	jne    0x15d6f
   15d65:	mov    esi,eax
   15d67:	push   esi
   15d68:	mov    ecx,edi
   15d6a:	call   0x13340
   15d6f:	mov    eax,DWORD PTR [esi+0x4]
   15d72:	mov    DWORD PTR [eax+0x1c],0x1
   15d79:	mov    eax,DWORD PTR [esi+0x4]
   15d7c:	mov    eax,DWORD PTR [eax+0x4]
   15d7f:	and    DWORD PTR [eax+0x1c],0x0
   15d83:	mov    eax,DWORD PTR [esi+0x4]
   15d86:	push   DWORD PTR [eax+0x4]
   15d89:	mov    ecx,edi
   15d8b:	call   0x132f2
   15d90:	mov    eax,DWORD PTR [edi+0x4]
   15d93:	cmp    esi,DWORD PTR [eax+0x4]
   15d96:	jne    0x15cee
   15d9c:	mov    eax,DWORD PTR [edi+0x4]
   15d9f:	mov    eax,DWORD PTR [eax+0x4]
   15da2:	pop    edi
   15da3:	mov    DWORD PTR [eax+0x1c],0x1
   15daa:	mov    eax,DWORD PTR [ebp+0x8]
   15dad:	pop    esi
   15dae:	mov    DWORD PTR [eax],ebx
   15db0:	pop    ebx
   15db1:	pop    ebp
   15db2:	ret    0x10
   15db5:	int3   
   15db6:	int3   
   15db7:	int3   
   15db8:	int3   
   15db9:	int3   
   15dba:	mov    edi,edi
   15dbc:	push   ebp
   15dbd:	mov    ebp,esp
   15dbf:	push   ecx
   15dc0:	push   DWORD PTR [ebp-0x4]
   15dc3:	push   DWORD PTR [ebp+0x10]
   15dc6:	push   DWORD PTR [ebp+0xc]
   15dc9:	push   DWORD PTR [ebp+0x8]
   15dcc:	call   0x14b8a
   15dd1:	add    esp,0x10
   15dd4:	leave  
   15dd5:	ret    
   15dd6:	int3   
   15dd7:	int3   
   15dd8:	int3   
   15dd9:	int3   
   15dda:	int3   
   15ddb:	int3   
   15ddc:	mov    edi,edi
   15dde:	push   ebp
   15ddf:	mov    ebp,esp
   15de1:	push   esi
   15de2:	push   edi
   15de3:	mov    edi,DWORD PTR [ebp+0x8]
   15de6:	mov    al,BYTE PTR [edi+0x8]
   15de9:	mov    esi,ecx
   15deb:	mov    BYTE PTR [esi+0x8],al
   15dee:	call   0x144b6
   15df3:	push   edi
   15df4:	mov    ecx,esi
   15df6:	call   0x14b28
   15dfb:	pop    edi
   15dfc:	mov    eax,esi
   15dfe:	pop    esi
   15dff:	pop    ebp
   15e00:	ret    0x4
   15e03:	int3   
   15e04:	int3   
   15e05:	int3   
   15e06:	int3   
   15e07:	int3   
   15e08:	mov    edi,edi
   15e0a:	push   ebp
   15e0b:	mov    ebp,esp
   15e0d:	push   ecx
   15e0e:	push   esi
   15e0f:	mov    esi,ecx
   15e11:	cmp    esi,DWORD PTR [ebp+0x8]
   15e14:	je     0x15e32
   15e16:	mov    eax,DWORD PTR [esi+0x4]
   15e19:	mov    ecx,DWORD PTR [eax]
   15e1b:	push   eax
   15e1c:	push   ecx
   15e1d:	lea    eax,[ebp-0x4]
   15e20:	push   eax
   15e21:	mov    ecx,esi
   15e23:	call   0x14d30
   15e28:	push   DWORD PTR [ebp+0x8]
   15e2b:	mov    ecx,esi
   15e2d:	call   0x14b28
   15e32:	mov    eax,esi
   15e34:	pop    esi
   15e35:	leave  
   15e36:	ret    0x4
   15e39:	int3   
   15e3a:	int3   
   15e3b:	int3   
   15e3c:	int3   
   15e3d:	int3   
   15e3e:	mov    edi,edi
   15e40:	push   ebp
   15e41:	mov    ebp,esp
   15e43:	push   ecx
   15e44:	push   ebx
   15e45:	push   esi
   15e46:	push   edi
   15e47:	xor    edi,edi
   15e49:	push   edi
   15e4a:	push   edi
   15e4b:	push   edi
   15e4c:	mov    esi,ecx
   15e4e:	mov    eax,DWORD PTR [esi+0x10]
   15e51:	push   edi
   15e52:	push   eax
   15e53:	xor    ebx,ebx
   15e55:	call   DWORD PTR ds:0x1ee28
   15e5b:	test   eax,eax
   15e5d:	jge    0x15e63
   15e5f:	xor    eax,eax
   15e61:	jmp    0x15e89
   15e63:	lea    eax,[ebp+0x8]
   15e66:	push   eax
   15e67:	lea    eax,[ebp-0x4]
   15e6a:	push   eax
   15e6b:	mov    ecx,esi
   15e6d:	call   0x13bc0
   15e72:	mov    eax,DWORD PTR [ebp-0x4]
   15e75:	cmp    eax,DWORD PTR [esi+0x4]
   15e78:	je     0x15e7d
   15e7a:	mov    ebx,DWORD PTR [eax+0x10]
   15e7d:	push   edi
   15e7e:	push   DWORD PTR [esi+0x10]
   15e81:	call   DWORD PTR ds:0x1ee24
   15e87:	mov    eax,ebx
   15e89:	pop    edi
   15e8a:	pop    esi
   15e8b:	pop    ebx
   15e8c:	leave  
   15e8d:	ret    0x4
   15e90:	int3   
   15e91:	int3   
   15e92:	int3   
   15e93:	int3   
   15e94:	int3   
   15e95:	int3   
   15e96:	push   0x10
   15e98:	push   0x7e008
   15e9d:	call   0x1dad4
   15ea2:	xor    ebx,ebx
   15ea4:	push   ebx
   15ea5:	push   ebx
   15ea6:	push   ebx
   15ea7:	push   ebx
   15ea8:	push   0x7e560
   15ead:	call   DWORD PTR ds:0x1ee28
   15eb3:	cmp    eax,ebx
   15eb5:	jl     0x15f72
   15ebb:	mov    DWORD PTR [ebp-0x4],ebx
   15ebe:	push   0xffffffff
   15ec0:	push   0x1def0
   15ec5:	lea    ecx,[ebp-0x20]
   15ec8:	call   0x110ae
   15ecd:	mov    esi,DWORD PTR [ebp+0x8]
   15ed0:	push   esi
   15ed1:	lea    eax,[ebp+0x8]
   15ed4:	push   eax
   15ed5:	mov    ecx,DWORD PTR ds:0x7e530
   15edb:	call   0x14bb4
   15ee0:	mov    eax,ds:0x7e530
   15ee5:	mov    eax,DWORD PTR [eax+0x4]
   15ee8:	mov    ecx,DWORD PTR [ebp+0x8]
   15eeb:	cmp    ecx,eax
   15eed:	je     0x15efb
   15eef:	add    ecx,0x14
   15ef2:	push   ecx
   15ef3:	lea    ecx,[ebp-0x20]
   15ef6:	call   0x129b0
   15efb:	mov    edx,DWORD PTR [esi+0x4]
   15efe:	mov    eax,DWORD PTR [ebp-0x1c]
   15f01:	lea    ecx,[eax+edx*1+0x2]
   15f05:	mov    eax,DWORD PTR [ebp+0xc]
   15f08:	cmp    ecx,DWORD PTR [eax]
   15f0a:	jbe    0x15f17
   15f0c:	mov    DWORD PTR [eax],ecx
   15f0e:	mov    DWORD PTR [eax+0x8],0x2
   15f15:	jmp    0x15f3a
   15f17:	mov    DWORD PTR [eax+0x8],ebx
   15f1a:	mov    esi,DWORD PTR [esi]
   15f1c:	lea    edi,[eax+0xc]
   15f1f:	mov    cl,BYTE PTR [esi]
   15f21:	mov    BYTE PTR [edi],cl
   15f23:	inc    esi
   15f24:	inc    edi
   15f25:	cmp    cl,bl
   15f27:	jne    0x15f1f
   15f29:	mov    esi,DWORD PTR [ebp-0x20]
   15f2c:	lea    eax,[edx+eax*1+0xd]
   15f30:	mov    cl,BYTE PTR [esi]
   15f32:	mov    BYTE PTR [eax],cl
   15f34:	inc    esi
   15f35:	inc    eax
   15f36:	cmp    cl,bl
   15f38:	jne    0x15f30
   15f3a:	push   DWORD PTR [ebp-0x20]
   15f3d:	call   0x1da14
   15f42:	pop    ecx
   15f43:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   15f4a:	jmp    0x15f66
   15f4c:	xor    eax,eax
   15f4e:	inc    eax
   15f4f:	ret    
   15f50:	mov    esp,DWORD PTR [ebp-0x18]
   15f53:	mov    eax,DWORD PTR [ebp+0xc]
   15f56:	mov    DWORD PTR [eax+0x8],0x4
   15f5d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   15f64:	xor    ebx,ebx
   15f66:	push   ebx
   15f67:	push   0x7e560
   15f6c:	call   DWORD PTR ds:0x1ee24
   15f72:	call   0x1db19
   15f77:	ret    0x8
   15f7a:	int3   
   15f7b:	int3   
   15f7c:	int3   
   15f7d:	int3   
   15f7e:	int3   
   15f7f:	int3   
   15f80:	push   0xc
   15f82:	push   0x7e028
   15f87:	call   0x1dad4
   15f8c:	xor    edi,edi
   15f8e:	push   edi
   15f8f:	push   edi
   15f90:	push   edi
   15f91:	push   edi
   15f92:	push   0x7e560
   15f97:	call   DWORD PTR ds:0x1ee28
   15f9d:	cmp    eax,edi
   15f9f:	jl     0x1604e
   15fa5:	mov    DWORD PTR [ebp-0x4],edi
   15fa8:	lea    eax,[ebp+0x8]
   15fab:	push   eax
   15fac:	lea    eax,[ebp-0x1c]
   15faf:	push   eax
   15fb0:	mov    esi,DWORD PTR ds:0x7e5bc
   15fb6:	mov    ecx,esi
   15fb8:	call   0x13c92
   15fbd:	mov    esi,DWORD PTR [esi+0x4]
   15fc0:	mov    ecx,DWORD PTR [ebp-0x1c]
   15fc3:	cmp    ecx,esi
   15fc5:	jne    0x15fd3
   15fc7:	mov    eax,DWORD PTR [ebp+0xc]
   15fca:	mov    DWORD PTR [eax+0x8],0x1
   15fd1:	jmp    0x1601f
   15fd3:	mov    eax,DWORD PTR [ecx+0x10]
   15fd6:	cmp    eax,edi
   15fd8:	jne    0x15fde
   15fda:	xor    edx,edx
   15fdc:	jmp    0x15fe1
   15fde:	mov    edx,DWORD PTR [eax+0x8]
   15fe1:	mov    eax,DWORD PTR [ebp+0xc]
   15fe4:	cmp    edx,DWORD PTR [eax]
   15fe6:	jbe    0x15ff3
   15fe8:	mov    DWORD PTR [eax],edx
   15fea:	mov    DWORD PTR [eax+0x8],0x2
   15ff1:	jmp    0x1601f
   15ff3:	mov    DWORD PTR [eax+0x8],edi
   15ff6:	mov    edx,DWORD PTR [ecx+0x10]
   15ff9:	cmp    edx,edi
   15ffb:	jne    0x16001
   15ffd:	xor    edx,edx
   15fff:	jmp    0x16004
   16001:	mov    edx,DWORD PTR [edx+0x8]
   16004:	mov    ecx,DWORD PTR [ecx+0x10]
   16007:	cmp    ecx,edi
   16009:	jne    0x1600f
   1600b:	xor    ecx,ecx
   1600d:	jmp    0x16011
   1600f:	mov    ecx,DWORD PTR [ecx]
   16011:	push   edx
   16012:	push   ecx
   16013:	add    eax,0xc
   16016:	push   eax
   16017:	call   0x1da96
   1601c:	add    esp,0xc
   1601f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   16026:	jmp    0x16042
   16028:	xor    eax,eax
   1602a:	inc    eax
   1602b:	ret    
   1602c:	mov    esp,DWORD PTR [ebp-0x18]
   1602f:	mov    eax,DWORD PTR [ebp+0xc]
   16032:	mov    DWORD PTR [eax+0x8],0x4
   16039:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   16040:	xor    edi,edi
   16042:	push   edi
   16043:	push   0x7e560
   16048:	call   DWORD PTR ds:0x1ee24
   1604e:	call   0x1db19
   16053:	ret    0x8
   16056:	int3   
   16057:	int3   
   16058:	int3   
   16059:	int3   
   1605a:	int3   
   1605b:	int3   
   1605c:	mov    edi,edi
   1605e:	push   ebp
   1605f:	mov    ebp,esp
   16061:	push   ebx
   16062:	push   esi
   16063:	push   DWORD PTR [ebp+0x8]
   16066:	mov    esi,ecx
   16068:	lea    eax,[ebp+0x8]
   1606b:	push   eax
   1606c:	lea    ecx,[esi+0x4]
   1606f:	xor    bl,bl
   16071:	call   0x13cf4
   16076:	mov    eax,DWORD PTR [ebp+0x8]
   16079:	cmp    eax,DWORD PTR [esi+0x8]
   1607c:	je     0x1608c
   1607e:	mov    ecx,DWORD PTR [ebp+0xc]
   16081:	add    eax,0x18
   16084:	push   eax
   16085:	call   0x12a3e
   1608a:	inc    bl
   1608c:	pop    esi
   1608d:	mov    al,bl
   1608f:	pop    ebx
   16090:	pop    ebp
   16091:	ret    0x8
   16094:	int3   
   16095:	int3   
   16096:	int3   
   16097:	int3   
   16098:	int3   
   16099:	int3   
   1609a:	mov    edi,edi
   1609c:	push   ebp
   1609d:	mov    ebp,esp
   1609f:	push   ecx
   160a0:	push   ecx
   160a1:	push   DWORD PTR [ebp+0xc]
   160a4:	lea    eax,[ebp-0x8]
   160a7:	push   eax
   160a8:	call   0x14c98
   160ad:	mov    eax,DWORD PTR [ebp+0x8]
   160b0:	mov    ecx,DWORD PTR [ebp-0x8]
   160b3:	mov    DWORD PTR [eax],ecx
   160b5:	mov    cl,BYTE PTR [ebp-0x4]
   160b8:	mov    BYTE PTR [eax+0x4],cl
   160bb:	leave  
   160bc:	ret    0x8
   160bf:	int3   
   160c0:	int3   
   160c1:	int3   
   160c2:	int3   
   160c3:	int3   
   160c4:	mov    edi,edi
   160c6:	push   ebp
   160c7:	mov    ebp,esp
   160c9:	push   ecx
   160ca:	push   esi
   160cb:	mov    esi,ecx
   160cd:	mov    eax,DWORD PTR [esi+0x4]
   160d0:	mov    ecx,DWORD PTR [eax]
   160d2:	push   eax
   160d3:	push   ecx
   160d4:	lea    eax,[ebp-0x4]
   160d7:	push   eax
   160d8:	mov    ecx,esi
   160da:	call   0x14d30
   160df:	push   DWORD PTR [esi+0x4]
   160e2:	call   0x1da14
   160e7:	xor    eax,eax
   160e9:	mov    DWORD PTR [esi+0x4],eax
   160ec:	mov    DWORD PTR [esi+0xc],eax
   160ef:	dec    DWORD PTR ds:0x7fa20
   160f5:	pop    ecx
   160f6:	pop    esi
   160f7:	jne    0x1610f
   160f9:	mov    ecx,DWORD PTR ds:0x7f8bc
   160ff:	mov    ds:0x7f8bc,eax
   16104:	cmp    ecx,eax
   16106:	je     0x1610f
   16108:	push   ecx
   16109:	call   0x1da14
   1610e:	pop    ecx
   1610f:	leave  
   16110:	ret    
   16111:	int3   
   16112:	int3   
   16113:	int3   
   16114:	int3   
   16115:	int3   
   16116:	mov    edi,edi
   16118:	push   ebp
   16119:	mov    ebp,esp
   1611b:	push   ecx
   1611c:	push   ecx
   1611d:	push   DWORD PTR [ebp+0xc]
   16120:	lea    eax,[ebp-0x8]
   16123:	push   eax
   16124:	call   0x14df8
   16129:	mov    eax,DWORD PTR [ebp+0x8]
   1612c:	mov    ecx,DWORD PTR [ebp-0x8]
   1612f:	mov    DWORD PTR [eax],ecx
   16131:	mov    cl,BYTE PTR [ebp-0x4]
   16134:	mov    BYTE PTR [eax+0x4],cl
   16137:	leave  
   16138:	ret    0x8
   1613b:	int3   
   1613c:	int3   
   1613d:	int3   
   1613e:	int3   
   1613f:	int3   
   16140:	mov    edi,edi
   16142:	push   ebp
   16143:	mov    ebp,esp
   16145:	push   ecx
   16146:	push   ecx
   16147:	push   DWORD PTR [ebp+0x8]
   1614a:	lea    eax,[ebp-0x8]
   1614d:	push   eax
   1614e:	call   0x14028
   16153:	and    DWORD PTR [ebp+0x8],0x0
   16157:	lea    eax,[ebp+0x8]
   1615a:	push   eax
   1615b:	push   DWORD PTR [ebp-0x4]
   1615e:	push   DWORD PTR [ebp-0x8]
   16161:	call   0x15dba
   16166:	mov    eax,DWORD PTR [ebp+0x8]
   16169:	add    esp,0xc
   1616c:	leave  
   1616d:	ret    0x4
   16170:	int3   
   16171:	int3   
   16172:	int3   
   16173:	int3   
   16174:	int3   
   16175:	int3   
   16176:	mov    edi,edi
   16178:	push   ebp
   16179:	mov    ebp,esp
   1617b:	push   ecx
   1617c:	push   ecx
   1617d:	push   esi
   1617e:	push   DWORD PTR [ebp+0x8]
   16181:	lea    eax,[ebp-0x8]
   16184:	push   eax
   16185:	mov    esi,ecx
   16187:	call   0x140bc
   1618c:	and    DWORD PTR [ebp+0x8],0x0
   16190:	lea    eax,[ebp+0x8]
   16193:	push   eax
   16194:	push   DWORD PTR [ebp-0x4]
   16197:	push   DWORD PTR [ebp-0x8]
   1619a:	call   0x13a24
   1619f:	add    esp,0xc
   161a2:	push   DWORD PTR [ebp-0x4]
   161a5:	lea    eax,[ebp-0x4]
   161a8:	push   DWORD PTR [ebp-0x8]
   161ab:	mov    ecx,esi
   161ad:	push   eax
   161ae:	call   0x14e90
   161b3:	mov    eax,DWORD PTR [ebp+0x8]
   161b6:	pop    esi
   161b7:	leave  
   161b8:	ret    0x4
   161bb:	int3   
   161bc:	int3   
   161bd:	int3   
   161be:	int3   
   161bf:	int3   
   161c0:	mov    edi,edi
   161c2:	push   ebp
   161c3:	mov    ebp,esp
   161c5:	push   ecx
   161c6:	push   ebx
   161c7:	push   esi
   161c8:	push   edi
   161c9:	mov    edi,ecx
   161cb:	mov    eax,DWORD PTR [edi+0x4]
   161ce:	mov    esi,DWORD PTR [eax+0x4]
   161d1:	mov    ebx,eax
   161d3:	mov    al,0x1
   161d5:	jmp    0x161f0
   161d7:	lea    eax,[esi+0x10]
   161da:	push   eax
   161db:	push   DWORD PTR [ebp+0xc]
   161de:	mov    ebx,esi
   161e0:	call   0x197a4
   161e5:	test   al,al
   161e7:	je     0x161ed
   161e9:	mov    esi,DWORD PTR [esi]
   161eb:	jmp    0x161f0
   161ed:	mov    esi,DWORD PTR [esi+0x8]
   161f0:	cmp    esi,DWORD PTR ds:0x7f8c0
   161f6:	jne    0x161d7
   161f8:	cmp    BYTE PTR [edi+0x8],0x0
   161fc:	je     0x16219
   161fe:	push   DWORD PTR [ebp+0xc]
   16201:	lea    eax,[ebp+0xc]
   16204:	push   ebx
   16205:	push   esi
   16206:	push   eax
   16207:	mov    ecx,edi
   16209:	call   0x151ba
   1620e:	mov    ecx,DWORD PTR [eax]
   16210:	mov    eax,DWORD PTR [ebp+0x8]
   16213:	mov    BYTE PTR [eax+0x4],0x1
   16217:	jmp    0x1624c
   16219:	mov    DWORD PTR [ebp-0x4],ebx
   1621c:	test   al,al
   1621e:	je     0x1622f
   16220:	mov    eax,DWORD PTR [edi+0x4]
   16223:	cmp    ebx,DWORD PTR [eax]
   16225:	je     0x161fe
   16227:	lea    ecx,[ebp-0x4]
   1622a:	call   0x11508
   1622f:	push   DWORD PTR [ebp+0xc]
   16232:	mov    eax,DWORD PTR [ebp-0x4]
   16235:	add    eax,0x10
   16238:	push   eax
   16239:	call   0x197a4
   1623e:	test   al,al
   16240:	jne    0x161fe
   16242:	mov    eax,DWORD PTR [ebp+0x8]
   16245:	mov    ecx,DWORD PTR [ebp-0x4]
   16248:	mov    BYTE PTR [eax+0x4],0x0
   1624c:	pop    edi
   1624d:	pop    esi
   1624e:	mov    DWORD PTR [eax],ecx
   16250:	pop    ebx
   16251:	leave  
   16252:	ret    0x8
   16255:	int3   
   16256:	int3   
   16257:	int3   
   16258:	int3   
   16259:	int3   
   1625a:	mov    edi,edi
   1625c:	push   ebp
   1625d:	mov    ebp,esp
   1625f:	push   ecx
   16260:	push   esi
   16261:	mov    esi,ecx
   16263:	cmp    DWORD PTR [esi+0xc],0x0
   16267:	mov    ecx,DWORD PTR [ebp+0xc]
   1626a:	je     0x162a4
   1626c:	mov    eax,DWORD PTR [esi+0x4]
   1626f:	cmp    ecx,DWORD PTR [eax]
   16271:	jne    0x162a4
   16273:	cmp    DWORD PTR [ebp+0x10],eax
   16276:	jne    0x162a4
   16278:	push   DWORD PTR [eax+0x4]
   1627b:	mov    ecx,esi
   1627d:	call   0x15170
   16282:	mov    ecx,DWORD PTR ds:0x7f8c0
   16288:	mov    eax,DWORD PTR [esi+0x4]
   1628b:	mov    DWORD PTR [eax+0x4],ecx
   1628e:	mov    eax,DWORD PTR [esi+0x4]
   16291:	and    DWORD PTR [esi+0xc],0x0
   16295:	mov    DWORD PTR [eax],eax
   16297:	mov    eax,DWORD PTR [esi+0x4]
   1629a:	mov    DWORD PTR [eax+0x8],eax
   1629d:	mov    eax,DWORD PTR [esi+0x4]
   162a0:	mov    ecx,DWORD PTR [eax]
   162a2:	jmp    0x162c9
   162a4:	cmp    ecx,DWORD PTR [ebp+0x10]
   162a7:	je     0x162c9
   162a9:	push   edi
   162aa:	mov    edi,ecx
   162ac:	lea    ecx,[ebp+0xc]
   162af:	call   0x12e5e
   162b4:	push   edi
   162b5:	lea    eax,[ebp-0x4]
   162b8:	push   eax
   162b9:	mov    ecx,esi
   162bb:	call   0x14f0e
   162c0:	mov    ecx,DWORD PTR [ebp+0xc]
   162c3:	cmp    ecx,DWORD PTR [ebp+0x10]
   162c6:	jne    0x162aa
   162c8:	pop    edi
   162c9:	mov    eax,DWORD PTR [ebp+0x8]
   162cc:	mov    DWORD PTR [eax],ecx
   162ce:	pop    esi
   162cf:	leave  
   162d0:	ret    0xc
   162d3:	int3   
   162d4:	int3   
   162d5:	int3   
   162d6:	int3   
   162d7:	int3   
   162d8:	mov    edi,edi
   162da:	push   ebp
   162db:	mov    ebp,esp
   162dd:	push   ecx
   162de:	push   ebx
   162df:	push   esi
   162e0:	push   edi
   162e1:	mov    edi,ecx
   162e3:	mov    eax,DWORD PTR [edi+0x4]
   162e6:	mov    esi,DWORD PTR [eax+0x4]
   162e9:	mov    ebx,eax
   162eb:	mov    al,0x1
   162ed:	jmp    0x16308
   162ef:	lea    eax,[esi+0x10]
   162f2:	push   eax
   162f3:	push   DWORD PTR [ebp+0xc]
   162f6:	mov    ebx,esi
   162f8:	call   0x197a4
   162fd:	test   al,al
   162ff:	je     0x16305
   16301:	mov    esi,DWORD PTR [esi]
   16303:	jmp    0x16308
   16305:	mov    esi,DWORD PTR [esi+0x8]
   16308:	cmp    esi,DWORD PTR ds:0x7f8c4
   1630e:	jne    0x162ef
   16310:	cmp    BYTE PTR [edi+0x8],0x0
   16314:	je     0x16331
   16316:	push   DWORD PTR [ebp+0xc]
   16319:	lea    eax,[ebp+0xc]
   1631c:	push   ebx
   1631d:	push   esi
   1631e:	push   eax
   1631f:	mov    ecx,edi
   16321:	call   0x155bc
   16326:	mov    ecx,DWORD PTR [eax]
   16328:	mov    eax,DWORD PTR [ebp+0x8]
   1632b:	mov    BYTE PTR [eax+0x4],0x1
   1632f:	jmp    0x16364
   16331:	mov    DWORD PTR [ebp-0x4],ebx
   16334:	test   al,al
   16336:	je     0x16347
   16338:	mov    eax,DWORD PTR [edi+0x4]
   1633b:	cmp    ebx,DWORD PTR [eax]
   1633d:	je     0x16316
   1633f:	lea    ecx,[ebp-0x4]
   16342:	call   0x113c0
   16347:	push   DWORD PTR [ebp+0xc]
   1634a:	mov    eax,DWORD PTR [ebp-0x4]
   1634d:	add    eax,0x10
   16350:	push   eax
   16351:	call   0x197a4
   16356:	test   al,al
   16358:	jne    0x16316
   1635a:	mov    eax,DWORD PTR [ebp+0x8]
   1635d:	mov    ecx,DWORD PTR [ebp-0x4]
   16360:	mov    BYTE PTR [eax+0x4],0x0
   16364:	pop    edi
   16365:	pop    esi
   16366:	mov    DWORD PTR [eax],ecx
   16368:	pop    ebx
   16369:	leave  
   1636a:	ret    0x8
   1636d:	int3   
   1636e:	int3   
   1636f:	int3   
   16370:	int3   
   16371:	int3   
   16372:	mov    edi,edi
   16374:	push   ebp
   16375:	mov    ebp,esp
   16377:	push   ecx
   16378:	push   esi
   16379:	mov    esi,ecx
   1637b:	cmp    DWORD PTR [esi+0xc],0x0
   1637f:	mov    ecx,DWORD PTR [ebp+0xc]
   16382:	je     0x163bc
   16384:	mov    eax,DWORD PTR [esi+0x4]
   16387:	cmp    ecx,DWORD PTR [eax]
   16389:	jne    0x163bc
   1638b:	cmp    DWORD PTR [ebp+0x10],eax
   1638e:	jne    0x163bc
   16390:	push   DWORD PTR [eax+0x4]
   16393:	mov    ecx,esi
   16395:	call   0x15572
   1639a:	mov    ecx,DWORD PTR ds:0x7f8c4
   163a0:	mov    eax,DWORD PTR [esi+0x4]
   163a3:	mov    DWORD PTR [eax+0x4],ecx
   163a6:	mov    eax,DWORD PTR [esi+0x4]
   163a9:	and    DWORD PTR [esi+0xc],0x0
   163ad:	mov    DWORD PTR [eax],eax
   163af:	mov    eax,DWORD PTR [esi+0x4]
   163b2:	mov    DWORD PTR [eax+0x8],eax
   163b5:	mov    eax,DWORD PTR [esi+0x4]
   163b8:	mov    ecx,DWORD PTR [eax]
   163ba:	jmp    0x163e1
   163bc:	cmp    ecx,DWORD PTR [ebp+0x10]
   163bf:	je     0x163e1
   163c1:	push   edi
   163c2:	mov    edi,ecx
   163c4:	lea    ecx,[ebp+0xc]
   163c7:	call   0x13870
   163cc:	push   edi
   163cd:	lea    eax,[ebp-0x4]
   163d0:	push   eax
   163d1:	mov    ecx,esi
   163d3:	call   0x15310
   163d8:	mov    ecx,DWORD PTR [ebp+0xc]
   163db:	cmp    ecx,DWORD PTR [ebp+0x10]
   163de:	jne    0x163c2
   163e0:	pop    edi
   163e1:	mov    eax,DWORD PTR [ebp+0x8]
   163e4:	mov    DWORD PTR [eax],ecx
   163e6:	pop    esi
   163e7:	leave  
   163e8:	ret    0xc
   163eb:	int3   
   163ec:	int3   
   163ed:	int3   
   163ee:	int3   
   163ef:	int3   
   163f0:	mov    edi,edi
   163f2:	push   ebp
   163f3:	mov    ebp,esp
   163f5:	push   ecx
   163f6:	push   ebx
   163f7:	push   esi
   163f8:	push   edi
   163f9:	mov    edi,ecx
   163fb:	mov    eax,DWORD PTR [edi+0x4]
   163fe:	mov    esi,DWORD PTR [eax+0x4]
   16401:	mov    ebx,eax
   16403:	mov    al,0x1
   16405:	jmp    0x16420
   16407:	lea    eax,[esi+0xc]
   1640a:	push   eax
   1640b:	push   DWORD PTR [ebp+0xc]
   1640e:	mov    ebx,esi
   16410:	call   0x197a4
   16415:	test   al,al
   16417:	je     0x1641d
   16419:	mov    esi,DWORD PTR [esi]
   1641b:	jmp    0x16420
   1641d:	mov    esi,DWORD PTR [esi+0x8]
   16420:	cmp    esi,DWORD PTR ds:0x7f8c8
   16426:	jne    0x16407
   16428:	cmp    BYTE PTR [edi+0x8],0x0
   1642c:	je     0x16449
   1642e:	push   DWORD PTR [ebp+0xc]
   16431:	lea    eax,[ebp+0xc]
   16434:	push   ebx
   16435:	push   esi
   16436:	push   eax
   16437:	mov    ecx,edi
   16439:	call   0x15712
   1643e:	mov    ecx,DWORD PTR [eax]
   16440:	mov    eax,DWORD PTR [ebp+0x8]
   16443:	mov    BYTE PTR [eax+0x4],0x1
   16447:	jmp    0x1647c
   16449:	mov    DWORD PTR [ebp-0x4],ebx
   1644c:	test   al,al
   1644e:	je     0x1645f
   16450:	mov    eax,DWORD PTR [edi+0x4]
   16453:	cmp    ebx,DWORD PTR [eax]
   16455:	je     0x1642e
   16457:	lea    ecx,[ebp-0x4]
   1645a:	call   0x11444
   1645f:	push   DWORD PTR [ebp+0xc]
   16462:	mov    eax,DWORD PTR [ebp-0x4]
   16465:	add    eax,0xc
   16468:	push   eax
   16469:	call   0x197a4
   1646e:	test   al,al
   16470:	jne    0x1642e
   16472:	mov    eax,DWORD PTR [ebp+0x8]
   16475:	mov    ecx,DWORD PTR [ebp-0x4]
   16478:	mov    BYTE PTR [eax+0x4],0x0
   1647c:	pop    edi
   1647d:	pop    esi
   1647e:	mov    DWORD PTR [eax],ecx
   16480:	pop    ebx
   16481:	leave  
   16482:	ret    0x8
   16485:	int3   
   16486:	int3   
   16487:	int3   
   16488:	int3   
   16489:	int3   
   1648a:	mov    edi,edi
   1648c:	push   ebp
   1648d:	mov    ebp,esp
   1648f:	push   ecx
   16490:	push   ebx
   16491:	push   esi
   16492:	push   edi
   16493:	mov    edi,ecx
   16495:	mov    eax,DWORD PTR [edi+0x4]
   16498:	mov    esi,DWORD PTR [eax+0x4]
   1649b:	mov    ebx,eax
   1649d:	mov    eax,ds:0x7f8cc
   164a2:	mov    dl,0x1
   164a4:	cmp    esi,eax
   164a6:	je     0x164c4
   164a8:	mov    ecx,DWORD PTR [ebp+0xc]
   164ab:	mov    ecx,DWORD PTR [ecx]
   164ad:	cmp    ecx,DWORD PTR [esi+0xc]
   164b0:	mov    ebx,esi
   164b2:	setl   dl
   164b5:	test   dl,dl
   164b7:	je     0x164bd
   164b9:	mov    esi,DWORD PTR [esi]
   164bb:	jmp    0x164c0
   164bd:	mov    esi,DWORD PTR [esi+0x8]
   164c0:	cmp    esi,eax
   164c2:	jne    0x164ad
   164c4:	cmp    BYTE PTR [edi+0x8],0x0
   164c8:	je     0x164e5
   164ca:	push   DWORD PTR [ebp+0xc]
   164cd:	push   ebx
   164ce:	push   esi
   164cf:	lea    eax,[ebp+0xc]
   164d2:	push   eax
   164d3:	mov    ecx,edi
   164d5:	call   0x15b14
   164da:	mov    ecx,DWORD PTR [eax]
   164dc:	mov    eax,DWORD PTR [ebp+0x8]
   164df:	mov    BYTE PTR [eax+0x4],0x1
   164e3:	jmp    0x16514
   164e5:	mov    ecx,ebx
   164e7:	mov    DWORD PTR [ebp-0x4],ecx
   164ea:	test   dl,dl
   164ec:	je     0x16500
   164ee:	mov    eax,DWORD PTR [edi+0x4]
   164f1:	cmp    ebx,DWORD PTR [eax]
   164f3:	je     0x164ca
   164f5:	lea    ecx,[ebp-0x4]
   164f8:	call   0x114c8
   164fd:	mov    ecx,DWORD PTR [ebp-0x4]
   16500:	mov    edx,DWORD PTR [ecx+0xc]
   16503:	mov    eax,DWORD PTR [ebp+0xc]
   16506:	cmp    edx,DWORD PTR [eax]
   16508:	jge    0x1650d
   1650a:	push   eax
   1650b:	jmp    0x164cd
   1650d:	mov    eax,DWORD PTR [ebp+0x8]
   16510:	mov    BYTE PTR [eax+0x4],0x0
   16514:	pop    edi
   16515:	pop    esi
   16516:	mov    DWORD PTR [eax],ecx
   16518:	pop    ebx
   16519:	leave  
   1651a:	ret    0x8
   1651d:	int3   
   1651e:	int3   
   1651f:	int3   
   16520:	int3   
   16521:	int3   
   16522:	mov    edi,edi
   16524:	push   ebp
   16525:	mov    ebp,esp
   16527:	push   ecx
   16528:	push   esi
   16529:	mov    esi,ecx
   1652b:	cmp    DWORD PTR [esi+0xc],0x0
   1652f:	mov    ecx,DWORD PTR [ebp+0xc]
   16532:	je     0x1656c
   16534:	mov    eax,DWORD PTR [esi+0x4]
   16537:	cmp    ecx,DWORD PTR [eax]
   16539:	jne    0x1656c
   1653b:	cmp    DWORD PTR [ebp+0x10],eax
   1653e:	jne    0x1656c
   16540:	push   DWORD PTR [eax+0x4]
   16543:	mov    ecx,esi
   16545:	call   0x15aca
   1654a:	mov    ecx,DWORD PTR ds:0x7f8cc
   16550:	mov    eax,DWORD PTR [esi+0x4]
   16553:	mov    DWORD PTR [eax+0x4],ecx
   16556:	mov    eax,DWORD PTR [esi+0x4]
   16559:	and    DWORD PTR [esi+0xc],0x0
   1655d:	mov    DWORD PTR [eax],eax
   1655f:	mov    eax,DWORD PTR [esi+0x4]
   16562:	mov    DWORD PTR [eax+0x8],eax
   16565:	mov    eax,DWORD PTR [esi+0x4]
   16568:	mov    ecx,DWORD PTR [eax]
   1656a:	jmp    0x16591
   1656c:	cmp    ecx,DWORD PTR [ebp+0x10]
   1656f:	je     0x16591
   16571:	push   edi
   16572:	mov    edi,ecx
   16574:	lea    ecx,[ebp+0xc]
   16577:	call   0x1157e
   1657c:	push   edi
   1657d:	lea    eax,[ebp-0x4]
   16580:	push   eax
   16581:	mov    ecx,esi
   16583:	call   0x15868
   16588:	mov    ecx,DWORD PTR [ebp+0xc]
   1658b:	cmp    ecx,DWORD PTR [ebp+0x10]
   1658e:	jne    0x16572
   16590:	pop    edi
   16591:	mov    eax,DWORD PTR [ebp+0x8]
   16594:	mov    DWORD PTR [eax],ecx
   16596:	pop    esi
   16597:	leave  
   16598:	ret    0xc
   1659b:	int3   
   1659c:	int3   
   1659d:	int3   
   1659e:	int3   
   1659f:	int3   
   165a0:	mov    edi,edi
   165a2:	push   ebp
   165a3:	mov    ebp,esp
   165a5:	push   ecx
   165a6:	push   ebx
   165a7:	push   esi
   165a8:	push   edi
   165a9:	mov    edi,ecx
   165ab:	mov    eax,DWORD PTR [edi+0x4]
   165ae:	mov    esi,DWORD PTR [eax+0x4]
   165b1:	mov    ebx,eax
   165b3:	mov    al,0x1
   165b5:	jmp    0x165d0
   165b7:	lea    eax,[esi+0xc]
   165ba:	push   eax
   165bb:	push   DWORD PTR [ebp+0xc]
   165be:	mov    ebx,esi
   165c0:	call   0x197d4
   165c5:	test   al,al
   165c7:	je     0x165cd
   165c9:	mov    esi,DWORD PTR [esi]
   165cb:	jmp    0x165d0
   165cd:	mov    esi,DWORD PTR [esi+0x8]
   165d0:	cmp    esi,DWORD PTR ds:0x7f8d4
   165d6:	jne    0x165b7
   165d8:	cmp    BYTE PTR [edi+0x8],0x0
   165dc:	je     0x165f9
   165de:	push   DWORD PTR [ebp+0xc]
   165e1:	lea    eax,[ebp+0xc]
   165e4:	push   ebx
   165e5:	push   esi
   165e6:	push   eax
   165e7:	mov    ecx,edi
   165e9:	call   0x15c64
   165ee:	mov    ecx,DWORD PTR [eax]
   165f0:	mov    eax,DWORD PTR [ebp+0x8]
   165f3:	mov    BYTE PTR [eax+0x4],0x1
   165f7:	jmp    0x1662c
   165f9:	mov    DWORD PTR [ebp-0x4],ebx
   165fc:	test   al,al
   165fe:	je     0x1660f
   16600:	mov    eax,DWORD PTR [edi+0x4]
   16603:	cmp    ebx,DWORD PTR [eax]
   16605:	je     0x165de
   16607:	lea    ecx,[ebp-0x4]
   1660a:	call   0x13390
   1660f:	push   DWORD PTR [ebp+0xc]
   16612:	mov    eax,DWORD PTR [ebp-0x4]
   16615:	add    eax,0xc
   16618:	push   eax
   16619:	call   0x197d4
   1661e:	test   al,al
   16620:	jne    0x165de
   16622:	mov    eax,DWORD PTR [ebp+0x8]
   16625:	mov    ecx,DWORD PTR [ebp-0x4]
   16628:	mov    BYTE PTR [eax+0x4],0x0
   1662c:	pop    edi
   1662d:	pop    esi
   1662e:	mov    DWORD PTR [eax],ecx
   16630:	pop    ebx
   16631:	leave  
   16632:	ret    0x8
   16635:	int3   
   16636:	int3   
   16637:	int3   
   16638:	int3   
   16639:	int3   
   1663a:	mov    edi,edi
   1663c:	push   ebp
   1663d:	mov    ebp,esp
   1663f:	sub    esp,0x10
   16642:	push   DWORD PTR [ebp+0x8]
   16645:	lea    ecx,[ebp-0x10]
   16648:	call   0x15ddc
   1664d:	push   DWORD PTR [ebp+0xc]
   16650:	mov    ecx,DWORD PTR [ebp+0x8]
   16653:	call   0x15e08
   16658:	mov    ecx,DWORD PTR [ebp+0xc]
   1665b:	lea    eax,[ebp-0x10]
   1665e:	push   eax
   1665f:	call   0x15e08
   16664:	lea    ecx,[ebp-0x10]
   16667:	call   0x160c4
   1666c:	leave  
   1666d:	ret    0x8
   16670:	int3   
   16671:	int3   
   16672:	int3   
   16673:	int3   
   16674:	int3   
   16675:	int3   
   16676:	mov    edi,edi
   16678:	push   ebp
   16679:	mov    ebp,esp
   1667b:	push   esi
   1667c:	push   edi
   1667d:	xor    edi,edi
   1667f:	push   edi
   16680:	push   edi
   16681:	push   edi
   16682:	mov    esi,ecx
   16684:	mov    eax,DWORD PTR [esi+0x10]
   16687:	push   edi
   16688:	push   eax
   16689:	call   DWORD PTR ds:0x1ee28
   1668f:	test   eax,eax
   16691:	jl     0x166a8
   16693:	lea    eax,[ebp+0x8]
   16696:	push   eax
   16697:	mov    ecx,esi
   16699:	call   0x14c4e
   1669e:	push   edi
   1669f:	push   DWORD PTR [esi+0x10]
   166a2:	call   DWORD PTR ds:0x1ee24
   166a8:	pop    edi
   166a9:	pop    esi
   166aa:	pop    ebp
   166ab:	ret    0x4
   166ae:	int3   
   166af:	int3   
   166b0:	int3   
   166b1:	int3   
   166b2:	int3   
   166b3:	int3   
   166b4:	mov    edi,edi
   166b6:	push   ebp
   166b7:	mov    ebp,esp
   166b9:	sub    esp,0x50
   166bc:	test   BYTE PTR [ebp+0x8],0x20
   166c0:	je     0x1676f
   166c6:	push   ebx
   166c7:	lea    ecx,[ebp-0x50]
   166ca:	call   0x136ca
   166cf:	mov    ecx,DWORD PTR ds:0x7eef0
   166d5:	lea    eax,[ebp-0x50]
   166d8:	push   eax
   166d9:	push   DWORD PTR [ebp+0xc]
   166dc:	call   0x1605c
   166e1:	test   al,al
   166e3:	je     0x1676b
   166e9:	mov    ecx,DWORD PTR [ebp+0x10]
   166ec:	lea    eax,[ebp-0x48]
   166ef:	push   eax
   166f0:	call   0x129b0
   166f5:	mov    eax,DWORD PTR [ebp+0x14]
   166f8:	mov    ecx,DWORD PTR [ebp-0x40]
   166fb:	mov    DWORD PTR [eax],ecx
   166fd:	mov    ecx,DWORD PTR [ebp+0x18]
   16700:	lea    eax,[ebp-0x3c]
   16703:	push   eax
   16704:	call   0x129b0
   16709:	mov    ecx,DWORD PTR [ebp+0x1c]
   1670c:	lea    eax,[ebp-0x34]
   1670f:	push   eax
   16710:	call   0x129b0
   16715:	mov    ecx,DWORD PTR [ebp+0x20]
   16718:	lea    eax,[ebp-0x2c]
   1671b:	push   eax
   1671c:	call   0x129b0
   16721:	mov    eax,DWORD PTR [ebp+0x28]
   16724:	mov    ecx,DWORD PTR [ebp-0x24]
   16727:	mov    DWORD PTR [eax],ecx
   16729:	mov    ecx,DWORD PTR [ebp+0x24]
   1672c:	lea    eax,[ebp-0x8]
   1672f:	push   eax
   16730:	call   0x129b0
   16735:	mov    eax,DWORD PTR [ebp+0x30]
   16738:	mov    ecx,DWORD PTR [ebp-0x18]
   1673b:	mov    DWORD PTR [eax],ecx
   1673d:	mov    ecx,DWORD PTR [ebp-0x14]
   16740:	mov    DWORD PTR [eax+0x4],ecx
   16743:	mov    eax,DWORD PTR [ebp+0x34]
   16746:	mov    ecx,DWORD PTR [ebp-0x10]
   16749:	mov    DWORD PTR [eax],ecx
   1674b:	mov    ecx,DWORD PTR [ebp-0xc]
   1674e:	mov    DWORD PTR [eax+0x4],ecx
   16751:	mov    eax,DWORD PTR [ebp+0x2c]
   16754:	mov    ecx,DWORD PTR [ebp-0x20]
   16757:	mov    DWORD PTR [eax],ecx
   16759:	mov    bl,0x1
   1675b:	lea    ecx,[ebp-0x50]
   1675e:	call   0x11eb2
   16763:	mov    al,bl
   16765:	pop    ebx
   16766:	jmp    0x16806
   1676b:	xor    bl,bl
   1676d:	jmp    0x1675b
   1676f:	mov    ecx,DWORD PTR ds:0x7eee8
   16775:	push   esi
   16776:	push   DWORD PTR [ebp+0xc]
   16779:	lea    eax,[ebp+0xc]
   1677c:	push   eax
   1677d:	call   0x13c02
   16782:	mov    esi,DWORD PTR [ebp+0xc]
   16785:	mov    eax,ds:0x7eee8
   1678a:	cmp    esi,DWORD PTR [eax+0x4]
   1678d:	jne    0x16793
   1678f:	xor    al,al
   16791:	jmp    0x16805
   16793:	mov    ecx,DWORD PTR [ebp+0x10]
   16796:	lea    eax,[esi+0x20]
   16799:	push   eax
   1679a:	call   0x129b0
   1679f:	mov    eax,DWORD PTR [esi+0x28]
   167a2:	mov    ecx,DWORD PTR [ebp+0x14]
   167a5:	mov    DWORD PTR [ecx],eax
   167a7:	mov    ecx,DWORD PTR [ebp+0x18]
   167aa:	lea    eax,[esi+0x2c]
   167ad:	push   eax
   167ae:	call   0x129b0
   167b3:	mov    ecx,DWORD PTR [ebp+0x1c]
   167b6:	lea    eax,[esi+0x34]
   167b9:	push   eax
   167ba:	call   0x129b0
   167bf:	mov    ecx,DWORD PTR [ebp+0x20]
   167c2:	lea    eax,[esi+0x3c]
   167c5:	push   eax
   167c6:	call   0x129b0
   167cb:	mov    ecx,DWORD PTR [ebp+0x24]
   167ce:	lea    eax,[esi+0x60]
   167d1:	push   eax
   167d2:	call   0x129b0
   167d7:	mov    eax,DWORD PTR [esi+0x44]
   167da:	mov    ecx,DWORD PTR [ebp+0x28]
   167dd:	mov    DWORD PTR [ecx],eax
   167df:	mov    ecx,DWORD PTR [esi+0x50]
   167e2:	mov    eax,DWORD PTR [ebp+0x30]
   167e5:	mov    DWORD PTR [eax],ecx
   167e7:	mov    ecx,DWORD PTR [esi+0x54]
   167ea:	mov    DWORD PTR [eax+0x4],ecx
   167ed:	mov    ecx,DWORD PTR [esi+0x58]
   167f0:	mov    eax,DWORD PTR [ebp+0x34]
   167f3:	mov    DWORD PTR [eax],ecx
   167f5:	mov    ecx,DWORD PTR [esi+0x5c]
   167f8:	mov    DWORD PTR [eax+0x4],ecx
   167fb:	mov    eax,DWORD PTR [esi+0x48]
   167fe:	mov    ecx,DWORD PTR [ebp+0x2c]
   16801:	mov    DWORD PTR [ecx],eax
   16803:	mov    al,0x1
   16805:	pop    esi
   16806:	leave  
   16807:	ret    0x30
   1680a:	int3   
   1680b:	int3   
   1680c:	int3   
   1680d:	int3   
   1680e:	int3   
   1680f:	int3   
   16810:	push   0x54
   16812:	push   0x7e048
   16817:	call   0x1dad4
   1681c:	xor    esi,esi
   1681e:	push   esi
   1681f:	push   esi
   16820:	push   esi
   16821:	push   esi
   16822:	push   0x7e560
   16827:	call   DWORD PTR ds:0x1ee28
   1682d:	cmp    eax,esi
   1682f:	jl     0x169f0
   16835:	mov    DWORD PTR [ebp-0x4],esi
   16838:	or     edi,0xffffffff
   1683b:	push   edi
   1683c:	mov    esi,0x1def0
   16841:	push   esi
   16842:	lea    ecx,[ebp-0x54]
   16845:	call   0x110ae
   1684a:	push   edi
   1684b:	push   esi
   1684c:	lea    ecx,[ebp-0x4c]
   1684f:	call   0x110ae
   16854:	push   edi
   16855:	push   esi
   16856:	lea    ecx,[ebp-0x44]
   16859:	call   0x110ae
   1685e:	push   edi
   1685f:	push   esi
   16860:	lea    ecx,[ebp-0x3c]
   16863:	call   0x110ae
   16868:	push   edi
   16869:	push   esi
   1686a:	lea    ecx,[ebp-0x34]
   1686d:	call   0x110ae
   16872:	lea    eax,[ebp-0x64]
   16875:	push   eax
   16876:	lea    eax,[ebp-0x5c]
   16879:	push   eax
   1687a:	lea    eax,[ebp-0x20]
   1687d:	push   eax
   1687e:	lea    eax,[ebp-0x1c]
   16881:	push   eax
   16882:	lea    eax,[ebp-0x34]
   16885:	push   eax
   16886:	lea    eax,[ebp-0x3c]
   16889:	push   eax
   1688a:	lea    eax,[ebp-0x44]
   1688d:	push   eax
   1688e:	lea    eax,[ebp-0x54]
   16891:	push   eax
   16892:	lea    eax,[ebp-0x24]
   16895:	push   eax
   16896:	lea    eax,[ebp-0x4c]
   16899:	push   eax
   1689a:	mov    edi,DWORD PTR [ebp+0x8]
   1689d:	push   edi
   1689e:	mov    esi,DWORD PTR [ebp+0xc]
   168a1:	push   DWORD PTR [esi+0x4]
   168a4:	call   0x166b4
   168a9:	test   al,al
   168ab:	jne    0x168b9
   168ad:	mov    DWORD PTR [esi+0x8],0x1
   168b4:	jmp    0x1699e
   168b9:	mov    edx,DWORD PTR [edi+0x4]
   168bc:	mov    eax,DWORD PTR [ebp-0x48]
   168bf:	lea    ecx,[eax+edx*1+0x2]
   168c3:	mov    eax,DWORD PTR [ebp-0x50]
   168c6:	lea    edi,[eax+ecx*1+0x5]
   168ca:	mov    eax,DWORD PTR [ebp-0x40]
   168cd:	lea    eax,[eax+edi*1+0x1]
   168d1:	mov    DWORD PTR [ebp-0x28],eax
   168d4:	mov    ebx,DWORD PTR [ebp-0x38]
   168d7:	lea    eax,[ebx+eax*1+0x1]
   168db:	mov    DWORD PTR [ebp-0x2c],eax
   168de:	mov    ebx,DWORD PTR [ebp-0x30]
   168e1:	lea    eax,[ebx+eax*1+0x1]
   168e5:	cmp    eax,DWORD PTR [esi]
   168e7:	jbe    0x168f7
   168e9:	mov    DWORD PTR [esi],eax
   168eb:	mov    DWORD PTR [esi+0x8],0x2
   168f2:	jmp    0x1699e
   168f7:	and    DWORD PTR [esi+0x8],0x0
   168fb:	mov    eax,DWORD PTR [ebp-0x1c]
   168fe:	mov    DWORD PTR [esi+0xc],eax
   16901:	mov    eax,DWORD PTR [ebp-0x5c]
   16904:	mov    DWORD PTR [esi+0x18],eax
   16907:	mov    eax,DWORD PTR [ebp-0x58]
   1690a:	mov    DWORD PTR [esi+0x1c],eax
   1690d:	mov    eax,DWORD PTR [ebp-0x64]
   16910:	mov    DWORD PTR [esi+0x20],eax
   16913:	mov    eax,DWORD PTR [ebp-0x60]
   16916:	mov    DWORD PTR [esi+0x24],eax
   16919:	mov    eax,DWORD PTR [ebp-0x20]
   1691c:	mov    DWORD PTR [esi+0x10],eax
   1691f:	mov    eax,DWORD PTR [ebp+0x8]
   16922:	mov    eax,DWORD PTR [eax]
   16924:	mov    DWORD PTR [ebp-0x1c],eax
   16927:	lea    eax,[esi+0x28]
   1692a:	mov    ebx,DWORD PTR [ebp-0x1c]
   1692d:	mov    bl,BYTE PTR [ebx]
   1692f:	mov    BYTE PTR [ebp+0xb],bl
   16932:	mov    BYTE PTR [eax],bl
   16934:	inc    DWORD PTR [ebp-0x1c]
   16937:	inc    eax
   16938:	test   bl,bl
   1693a:	jne    0x1692a
   1693c:	mov    ebx,DWORD PTR [ebp-0x4c]
   1693f:	lea    edx,[edx+esi*1+0x29]
   16943:	mov    al,BYTE PTR [ebx]
   16945:	mov    BYTE PTR [edx],al
   16947:	inc    ebx
   16948:	inc    edx
   16949:	test   al,al
   1694b:	jne    0x16943
   1694d:	mov    eax,DWORD PTR [ebp-0x24]
   16950:	mov    DWORD PTR [ecx+esi*1+0x28],eax
   16954:	mov    edx,DWORD PTR [ebp-0x54]
   16957:	lea    ecx,[ecx+esi*1+0x2c]
   1695b:	mov    al,BYTE PTR [edx]
   1695d:	mov    BYTE PTR [ecx],al
   1695f:	inc    edx
   16960:	inc    ecx
   16961:	test   al,al
   16963:	jne    0x1695b
   16965:	mov    ecx,DWORD PTR [ebp-0x44]
   16968:	lea    edi,[edi+esi*1+0x28]
   1696c:	mov    al,BYTE PTR [ecx]
   1696e:	mov    BYTE PTR [edi],al
   16970:	inc    ecx
   16971:	inc    edi
   16972:	test   al,al
   16974:	jne    0x1696c
   16976:	mov    edx,DWORD PTR [ebp-0x3c]
   16979:	mov    eax,DWORD PTR [ebp-0x28]
   1697c:	lea    eax,[eax+esi*1+0x28]
   16980:	mov    cl,BYTE PTR [edx]
   16982:	mov    BYTE PTR [eax],cl
   16984:	inc    edx
   16985:	inc    eax
   16986:	test   cl,cl
   16988:	jne    0x16980
   1698a:	mov    ecx,DWORD PTR [ebp-0x34]
   1698d:	mov    eax,DWORD PTR [ebp-0x2c]
   16990:	lea    esi,[eax+esi*1+0x28]
   16994:	mov    al,BYTE PTR [ecx]
   16996:	mov    BYTE PTR [esi],al
   16998:	inc    ecx
   16999:	inc    esi
   1699a:	test   al,al
   1699c:	jne    0x16994
   1699e:	push   DWORD PTR [ebp-0x34]
   169a1:	call   0x1da14
   169a6:	push   DWORD PTR [ebp-0x3c]
   169a9:	call   0x1da14
   169ae:	push   DWORD PTR [ebp-0x44]
   169b1:	call   0x1da14
   169b6:	push   DWORD PTR [ebp-0x4c]
   169b9:	call   0x1da14
   169be:	push   DWORD PTR [ebp-0x54]
   169c1:	call   0x1da14
   169c6:	add    esp,0x14
   169c9:	jmp    0x169dc
   169cb:	xor    eax,eax
   169cd:	inc    eax
   169ce:	ret    
   169cf:	mov    esp,DWORD PTR [ebp-0x18]
   169d2:	mov    eax,DWORD PTR [ebp+0xc]
   169d5:	mov    DWORD PTR [eax+0x8],0x4
   169dc:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   169e3:	push   0x0
   169e5:	push   0x7e560
   169ea:	call   DWORD PTR ds:0x1ee24
   169f0:	call   0x1db19
   169f5:	ret    0x8
   169f8:	int3   
   169f9:	int3   
   169fa:	int3   
   169fb:	int3   
   169fc:	int3   
   169fd:	int3   
   169fe:	mov    edi,edi
   16a00:	push   ebp
   16a01:	mov    ebp,esp
   16a03:	sub    esp,0x10
   16a06:	mov    eax,DWORD PTR [ebp+0x8]
   16a09:	mov    eax,DWORD PTR [eax]
   16a0b:	and    DWORD PTR [ebp-0x4],0x0
   16a0f:	mov    DWORD PTR [ebp-0x8],eax
   16a12:	lea    eax,[ebp-0x8]
   16a15:	push   eax
   16a16:	lea    eax,[ebp-0x10]
   16a19:	push   eax
   16a1a:	call   0x16116
   16a1f:	mov    eax,DWORD PTR [eax]
   16a21:	add    eax,0x10
   16a24:	leave  
   16a25:	ret    0x4
   16a28:	int3   
   16a29:	int3   
   16a2a:	int3   
   16a2b:	int3   
   16a2c:	int3   
   16a2d:	int3   
   16a2e:	mov    edi,edi
   16a30:	push   esi
   16a31:	mov    esi,ecx
   16a33:	mov    BYTE PTR [esi+0x8],0x0
   16a37:	call   0x140ee
   16a3c:	mov    eax,esi
   16a3e:	pop    esi
   16a3f:	ret    0x8
   16a42:	int3   
   16a43:	int3   
   16a44:	int3   
   16a45:	int3   
   16a46:	int3   
   16a47:	int3   
   16a48:	mov    edi,edi
   16a4a:	push   ebp
   16a4b:	mov    ebp,esp
   16a4d:	push   ecx
   16a4e:	push   ecx
   16a4f:	push   DWORD PTR [ebp+0xc]
   16a52:	lea    eax,[ebp-0x8]
   16a55:	push   eax
   16a56:	call   0x161c0
   16a5b:	mov    eax,DWORD PTR [ebp+0x8]
   16a5e:	mov    ecx,DWORD PTR [ebp-0x8]
   16a61:	mov    DWORD PTR [eax],ecx
   16a63:	mov    cl,BYTE PTR [ebp-0x4]
   16a66:	mov    BYTE PTR [eax+0x4],cl
   16a69:	leave  
   16a6a:	ret    0x8
   16a6d:	int3   
   16a6e:	int3   
   16a6f:	int3   
   16a70:	int3   
   16a71:	int3   
   16a72:	mov    edi,edi
   16a74:	push   ebp
   16a75:	mov    ebp,esp
   16a77:	push   ecx
   16a78:	push   esi
   16a79:	mov    esi,ecx
   16a7b:	mov    eax,DWORD PTR [esi+0x4]
   16a7e:	mov    ecx,DWORD PTR [eax]
   16a80:	push   eax
   16a81:	push   ecx
   16a82:	lea    eax,[ebp-0x4]
   16a85:	push   eax
   16a86:	mov    ecx,esi
   16a88:	call   0x1625a
   16a8d:	push   DWORD PTR [esi+0x4]
   16a90:	call   0x1da14
   16a95:	xor    eax,eax
   16a97:	mov    DWORD PTR [esi+0x4],eax
   16a9a:	mov    DWORD PTR [esi+0xc],eax
   16a9d:	dec    DWORD PTR ds:0x7fa24
   16aa3:	pop    ecx
   16aa4:	pop    esi
   16aa5:	jne    0x16abd
   16aa7:	mov    ecx,DWORD PTR ds:0x7f8c0
   16aad:	mov    ds:0x7f8c0,eax
   16ab2:	cmp    ecx,eax
   16ab4:	je     0x16abd
   16ab6:	push   ecx
   16ab7:	call   0x1da14
   16abc:	pop    ecx
   16abd:	leave  
   16abe:	ret    
   16abf:	int3   
   16ac0:	int3   
   16ac1:	int3   
   16ac2:	int3   
   16ac3:	int3   
   16ac4:	mov    edi,edi
   16ac6:	push   ebp
   16ac7:	mov    ebp,esp
   16ac9:	push   ecx
   16aca:	push   ecx
   16acb:	push   DWORD PTR [ebp+0xc]
   16ace:	lea    eax,[ebp-0x8]
   16ad1:	push   eax
   16ad2:	call   0x162d8
   16ad7:	mov    eax,DWORD PTR [ebp+0x8]
   16ada:	mov    ecx,DWORD PTR [ebp-0x8]
   16add:	mov    DWORD PTR [eax],ecx
   16adf:	mov    cl,BYTE PTR [ebp-0x4]
   16ae2:	mov    BYTE PTR [eax+0x4],cl
   16ae5:	leave  
   16ae6:	ret    0x8
   16ae9:	int3   
   16aea:	int3   
   16aeb:	int3   
   16aec:	int3   
   16aed:	int3   
   16aee:	mov    edi,edi
   16af0:	push   ebp
   16af1:	mov    ebp,esp
   16af3:	push   ecx
   16af4:	mov    eax,DWORD PTR [ecx+0x4]
   16af7:	mov    edx,DWORD PTR [eax]
   16af9:	push   eax
   16afa:	push   edx
   16afb:	lea    eax,[ebp-0x4]
   16afe:	push   eax
   16aff:	call   0x16372
   16b04:	leave  
   16b05:	ret    
   16b06:	int3   
   16b07:	int3   
   16b08:	int3   
   16b09:	int3   
   16b0a:	int3   
   16b0b:	int3   
   16b0c:	mov    edi,edi
   16b0e:	push   ebp
   16b0f:	mov    ebp,esp
   16b11:	push   ecx
   16b12:	push   ecx
   16b13:	push   DWORD PTR [ebp+0xc]
   16b16:	lea    eax,[ebp-0x8]
   16b19:	push   eax
   16b1a:	call   0x163f0
   16b1f:	mov    eax,DWORD PTR [ebp+0x8]
   16b22:	mov    ecx,DWORD PTR [ebp-0x8]
   16b25:	mov    DWORD PTR [eax],ecx
   16b27:	mov    cl,BYTE PTR [ebp-0x4]
   16b2a:	mov    BYTE PTR [eax+0x4],cl
   16b2d:	leave  
   16b2e:	ret    0x8
   16b31:	int3   
   16b32:	int3   
   16b33:	int3   
   16b34:	int3   
   16b35:	int3   
   16b36:	mov    edi,edi
   16b38:	push   ebp
   16b39:	mov    ebp,esp
   16b3b:	push   ecx
   16b3c:	push   ecx
   16b3d:	push   DWORD PTR [ebp+0xc]
   16b40:	lea    eax,[ebp-0x8]
   16b43:	push   eax
   16b44:	call   0x1648a
   16b49:	mov    eax,DWORD PTR [ebp+0x8]
   16b4c:	mov    ecx,DWORD PTR [ebp-0x8]
   16b4f:	mov    DWORD PTR [eax],ecx
   16b51:	mov    cl,BYTE PTR [ebp-0x4]
   16b54:	mov    BYTE PTR [eax+0x4],cl
   16b57:	leave  
   16b58:	ret    0x8
   16b5b:	int3   
   16b5c:	int3   
   16b5d:	int3   
   16b5e:	int3   
   16b5f:	int3   
   16b60:	mov    edi,edi
   16b62:	push   ebp
   16b63:	mov    ebp,esp
   16b65:	push   ecx
   16b66:	push   ecx
   16b67:	push   esi
   16b68:	push   DWORD PTR [ebp+0x8]
   16b6b:	lea    eax,[ebp-0x8]
   16b6e:	push   eax
   16b6f:	mov    esi,ecx
   16b71:	call   0x14150
   16b76:	and    DWORD PTR [ebp+0x8],0x0
   16b7a:	lea    eax,[ebp+0x8]
   16b7d:	push   eax
   16b7e:	push   DWORD PTR [ebp-0x4]
   16b81:	push   DWORD PTR [ebp-0x8]
   16b84:	call   0x13a46
   16b89:	add    esp,0xc
   16b8c:	push   DWORD PTR [ebp-0x4]
   16b8f:	lea    eax,[ebp-0x4]
   16b92:	push   DWORD PTR [ebp-0x8]
   16b95:	mov    ecx,esi
   16b97:	push   eax
   16b98:	call   0x16522
   16b9d:	mov    eax,DWORD PTR [ebp+0x8]
   16ba0:	pop    esi
   16ba1:	leave  
   16ba2:	ret    0x4
   16ba5:	int3   
   16ba6:	int3   
   16ba7:	int3   
   16ba8:	int3   
   16ba9:	int3   
   16baa:	mov    edi,edi
   16bac:	push   ebp
   16bad:	mov    ebp,esp
   16baf:	push   ecx
   16bb0:	mov    eax,DWORD PTR [ecx+0x4]
   16bb3:	mov    edx,DWORD PTR [eax]
   16bb5:	push   eax
   16bb6:	push   edx
   16bb7:	lea    eax,[ebp-0x4]
   16bba:	push   eax
   16bbb:	call   0x16522
   16bc0:	leave  
   16bc1:	ret    
   16bc2:	int3   
   16bc3:	int3   
   16bc4:	int3   
   16bc5:	int3   
   16bc6:	int3   
   16bc7:	int3   
   16bc8:	mov    edi,edi
   16bca:	push   ebp
   16bcb:	mov    ebp,esp
   16bcd:	push   ecx
   16bce:	push   ecx
   16bcf:	push   DWORD PTR [ebp+0xc]
   16bd2:	lea    eax,[ebp-0x8]
   16bd5:	push   eax
   16bd6:	call   0x165a0
   16bdb:	mov    eax,DWORD PTR [ebp+0x8]
   16bde:	mov    ecx,DWORD PTR [ebp-0x8]
   16be1:	mov    DWORD PTR [eax],ecx
   16be3:	mov    cl,BYTE PTR [ebp-0x4]
   16be6:	mov    BYTE PTR [eax+0x4],cl
   16be9:	leave  
   16bea:	ret    0x8
   16bed:	int3   
   16bee:	int3   
   16bef:	int3   
   16bf0:	int3   
   16bf1:	int3   
   16bf2:	mov    edi,edi
   16bf4:	push   esi
   16bf5:	mov    esi,ecx
   16bf7:	push   edi
   16bf8:	mov    BYTE PTR [esi+0x8],0x0
   16bfc:	call   0x13fc6
   16c01:	lea    edi,[esi+0x10]
   16c04:	mov    ecx,edi
   16c06:	call   0x129fa
   16c0b:	mov    edi,DWORD PTR [edi]
   16c0d:	push   0x0
   16c0f:	push   edi
   16c10:	call   0x11c16
   16c15:	call   eax
   16c17:	pop    edi
   16c18:	mov    eax,esi
   16c1a:	pop    esi
   16c1b:	ret    
   16c1c:	int3   
   16c1d:	int3   
   16c1e:	int3   
   16c1f:	int3   
   16c20:	int3   
   16c21:	int3   
   16c22:	mov    edi,edi
   16c24:	push   ebp
   16c25:	mov    ebp,esp
   16c27:	push   esi
   16c28:	push   edi
   16c29:	xor    edi,edi
   16c2b:	push   edi
   16c2c:	push   edi
   16c2d:	push   edi
   16c2e:	mov    esi,ecx
   16c30:	mov    eax,DWORD PTR [esi+0x10]
   16c33:	push   edi
   16c34:	push   eax
   16c35:	call   DWORD PTR ds:0x1ee28
   16c3b:	test   eax,eax
   16c3d:	jl     0x16c59
   16c3f:	lea    eax,[ebp+0x8]
   16c42:	push   eax
   16c43:	mov    ecx,esi
   16c45:	call   0x169fe
   16c4a:	mov    ecx,DWORD PTR [ebp+0xc]
   16c4d:	push   edi
   16c4e:	mov    DWORD PTR [eax],ecx
   16c50:	push   DWORD PTR [esi+0x10]
   16c53:	call   DWORD PTR ds:0x1ee24
   16c59:	pop    edi
   16c5a:	pop    esi
   16c5b:	pop    ebp
   16c5c:	ret    0x8
   16c5f:	int3   
   16c60:	int3   
   16c61:	int3   
   16c62:	int3   
   16c63:	int3   
   16c64:	mov    edi,edi
   16c66:	push   ebp
   16c67:	mov    ebp,esp
   16c69:	sub    esp,0x38
   16c6c:	push   esi
   16c6d:	call   0x1a1b8
   16c72:	test   al,al
   16c74:	jne    0x16c7e
   16c76:	mov    eax,DWORD PTR [ebp+0x8]
   16c79:	jmp    0x16d4f
   16c7e:	push   DWORD PTR [ebp+0xc]
   16c81:	lea    ecx,[ebp-0x8]
   16c84:	push   DWORD PTR [ebp+0x8]
   16c87:	call   0x12ae0
   16c8c:	mov    ecx,DWORD PTR ds:0x7fa50
   16c92:	lea    eax,[ebp-0x8]
   16c95:	push   eax
   16c96:	lea    eax,[ebp+0xc]
   16c99:	push   eax
   16c9a:	call   0x141e4
   16c9f:	mov    esi,DWORD PTR [ebp+0xc]
   16ca2:	mov    eax,ds:0x7fa50
   16ca7:	cmp    esi,DWORD PTR [eax+0x4]
   16caa:	jne    0x16d0a
   16cac:	push   ecx
   16cad:	push   ecx
   16cae:	lea    eax,[ebp-0x8]
   16cb1:	mov    ecx,esp
   16cb3:	push   eax
   16cb4:	call   0x12b00
   16cb9:	lea    eax,[ebp-0x10]
   16cbc:	push   eax
   16cbd:	call   0x12b7e
   16cc2:	lea    eax,[ebp-0x10]
   16cc5:	push   eax
   16cc6:	lea    eax,[ebp-0x8]
   16cc9:	push   eax
   16cca:	lea    ecx,[ebp-0x38]
   16ccd:	call   0x135d2
   16cd2:	lea    eax,[ebp-0x38]
   16cd5:	push   eax
   16cd6:	lea    ecx,[ebp-0x28]
   16cd9:	call   0x13440
   16cde:	mov    ecx,DWORD PTR ds:0x7fa50
   16ce4:	lea    eax,[ebp-0x28]
   16ce7:	push   eax
   16ce8:	lea    eax,[ebp-0x18]
   16ceb:	push   eax
   16cec:	call   0x16bc8
   16cf1:	lea    ecx,[ebp-0x28]
   16cf4:	call   0x11090
   16cf9:	lea    ecx,[ebp-0x38]
   16cfc:	call   0x11090
   16d01:	push   DWORD PTR [ebp-0x10]
   16d04:	call   0x1da14
   16d09:	pop    ecx
   16d0a:	mov    eax,DWORD PTR [ebp+0x10]
   16d0d:	movzx  eax,BYTE PTR [eax]
   16d10:	cmp    eax,0x100
   16d15:	jge    0x16d2d
   16d17:	mov    ecx,DWORD PTR ds:0x7fa50
   16d1d:	lea    eax,[ebp-0x8]
   16d20:	push   eax
   16d21:	lea    eax,[ebp+0xc]
   16d24:	push   eax
   16d25:	call   0x141e4
   16d2a:	mov    esi,DWORD PTR [ebp+0xc]
   16d2d:	mov    eax,ds:0x7fa50
   16d32:	cmp    esi,DWORD PTR [eax+0x4]
   16d35:	je     0x16d3c
   16d37:	mov    esi,DWORD PTR [esi+0x14]
   16d3a:	jmp    0x16d3f
   16d3c:	mov    esi,DWORD PTR [ebp+0x8]
   16d3f:	call   0x1a1d4
   16d44:	push   DWORD PTR [ebp-0x8]
   16d47:	call   0x1da14
   16d4c:	pop    ecx
   16d4d:	mov    eax,esi
   16d4f:	pop    esi
   16d50:	leave  
   16d51:	ret    0xc
   16d54:	int3   
   16d55:	int3   
   16d56:	int3   
   16d57:	int3   
   16d58:	int3   
   16d59:	int3   
   16d5a:	mov    edi,edi
   16d5c:	push   ebp
   16d5d:	mov    ebp,esp
   16d5f:	sub    esp,0x38
   16d62:	push   esi
   16d63:	call   0x1a1b8
   16d68:	test   al,al
   16d6a:	jne    0x16d74
   16d6c:	mov    eax,DWORD PTR [ebp+0x8]
   16d6f:	jmp    0x16e45
   16d74:	push   DWORD PTR [ebp+0xc]
   16d77:	lea    ecx,[ebp-0x8]
   16d7a:	push   DWORD PTR [ebp+0x8]
   16d7d:	call   0x1296e
   16d82:	mov    ecx,DWORD PTR ds:0x7fa54
   16d88:	lea    eax,[ebp-0x8]
   16d8b:	push   eax
   16d8c:	lea    eax,[ebp+0xc]
   16d8f:	push   eax
   16d90:	call   0x13c4a
   16d95:	mov    esi,DWORD PTR [ebp+0xc]
   16d98:	mov    eax,ds:0x7fa54
   16d9d:	cmp    esi,DWORD PTR [eax+0x4]
   16da0:	jne    0x16e00
   16da2:	push   ecx
   16da3:	push   ecx
   16da4:	lea    eax,[ebp-0x8]
   16da7:	mov    ecx,esp
   16da9:	push   eax
   16daa:	call   0x1298e
   16daf:	lea    eax,[ebp-0x10]
   16db2:	push   eax
   16db3:	call   0x12bc2
   16db8:	lea    eax,[ebp-0x10]
   16dbb:	push   eax
   16dbc:	lea    eax,[ebp-0x8]
   16dbf:	push   eax
   16dc0:	lea    ecx,[ebp-0x38]
   16dc3:	call   0x135fa
   16dc8:	lea    eax,[ebp-0x38]
   16dcb:	push   eax
   16dcc:	lea    ecx,[ebp-0x28]
   16dcf:	call   0x1346c
   16dd4:	mov    ecx,DWORD PTR ds:0x7fa54
   16dda:	lea    eax,[ebp-0x28]
   16ddd:	push   eax
   16dde:	lea    eax,[ebp-0x18]
   16de1:	push   eax
   16de2:	call   0x16b0c
   16de7:	lea    ecx,[ebp-0x28]
   16dea:	call   0x11090
   16def:	lea    ecx,[ebp-0x38]
   16df2:	call   0x11090
   16df7:	push   DWORD PTR [ebp-0x10]
   16dfa:	call   0x1da14
   16dff:	pop    ecx
   16e00:	mov    eax,DWORD PTR [ebp+0x10]
   16e03:	movzx  eax,BYTE PTR [eax]
   16e06:	cmp    eax,0x100
   16e0b:	jge    0x16e23
   16e0d:	mov    ecx,DWORD PTR ds:0x7fa54
   16e13:	lea    eax,[ebp-0x8]
   16e16:	push   eax
   16e17:	lea    eax,[ebp+0xc]
   16e1a:	push   eax
   16e1b:	call   0x13c4a
   16e20:	mov    esi,DWORD PTR [ebp+0xc]
   16e23:	mov    eax,ds:0x7fa54
   16e28:	cmp    esi,DWORD PTR [eax+0x4]
   16e2b:	je     0x16e32
   16e2d:	mov    esi,DWORD PTR [esi+0x14]
   16e30:	jmp    0x16e35
   16e32:	mov    esi,DWORD PTR [ebp+0x8]
   16e35:	call   0x1a1d4
   16e3a:	push   DWORD PTR [ebp-0x8]
   16e3d:	call   0x1da14
   16e42:	pop    ecx
   16e43:	mov    eax,esi
   16e45:	pop    esi
   16e46:	leave  
   16e47:	ret    0xc
   16e4a:	int3   
   16e4b:	int3   
   16e4c:	int3   
   16e4d:	int3   
   16e4e:	int3   
   16e4f:	int3   
   16e50:	mov    edi,edi
   16e52:	push   esi
   16e53:	mov    esi,ecx
   16e55:	mov    BYTE PTR [esi+0x8],0x0
   16e59:	call   0x1405a
   16e5e:	mov    eax,esi
   16e60:	pop    esi
   16e61:	ret    0x8
   16e64:	int3   
   16e65:	int3   
   16e66:	int3   
   16e67:	int3   
   16e68:	int3   
   16e69:	int3   
   16e6a:	mov    edi,edi
   16e6c:	push   ebp
   16e6d:	mov    ebp,esp
   16e6f:	sub    esp,0xb0
   16e75:	push   esi
   16e76:	mov    esi,ecx
   16e78:	lea    ecx,[ebp-0x58]
   16e7b:	call   0x136ca
   16e80:	push   eax
   16e81:	push   DWORD PTR [ebp+0x8]
   16e84:	lea    ecx,[ebp-0xb0]
   16e8a:	call   0x138a6
   16e8f:	push   eax
   16e90:	lea    eax,[ebp-0x8]
   16e93:	push   eax
   16e94:	mov    ecx,esi
   16e96:	call   0x16ac4
   16e9b:	mov    esi,DWORD PTR [eax]
   16e9d:	lea    ecx,[ebp-0xb0]
   16ea3:	call   0x12ac4
   16ea8:	lea    ecx,[ebp-0x58]
   16eab:	call   0x11eb2
   16eb0:	lea    eax,[esi+0x18]
   16eb3:	pop    esi
   16eb4:	leave  
   16eb5:	ret    0x4
   16eb8:	int3   
   16eb9:	int3   
   16eba:	int3   
   16ebb:	int3   
   16ebc:	int3   
   16ebd:	int3   
   16ebe:	mov    edi,edi
   16ec0:	push   ebp
   16ec1:	mov    ebp,esp
   16ec3:	sub    esp,0x20
   16ec6:	push   esi
   16ec7:	push   0xffffffff
   16ec9:	mov    esi,ecx
   16ecb:	push   0x1def0
   16ed0:	lea    ecx,[ebp-0x8]
   16ed3:	call   0x110ae
   16ed8:	lea    eax,[ebp-0x8]
   16edb:	push   eax
   16edc:	push   DWORD PTR [ebp+0x8]
   16edf:	lea    ecx,[ebp-0x20]
   16ee2:	call   0x135fa
   16ee7:	push   eax
   16ee8:	lea    eax,[ebp-0x10]
   16eeb:	push   eax
   16eec:	mov    ecx,esi
   16eee:	call   0x16b0c
   16ef3:	mov    esi,DWORD PTR [eax]
   16ef5:	lea    ecx,[ebp-0x20]
   16ef8:	call   0x11090
   16efd:	push   DWORD PTR [ebp-0x8]
   16f00:	call   0x1da14
   16f05:	pop    ecx
   16f06:	lea    eax,[esi+0x14]
   16f09:	pop    esi
   16f0a:	leave  
   16f0b:	ret    0x4
   16f0e:	int3   
   16f0f:	int3   
   16f10:	int3   
   16f11:	int3   
   16f12:	int3   
   16f13:	int3   
   16f14:	mov    edi,edi
   16f16:	push   esi
   16f17:	mov    esi,ecx
   16f19:	mov    BYTE PTR [esi+0x8],0x0
   16f1d:	call   0x14182
   16f22:	mov    eax,esi
   16f24:	pop    esi
   16f25:	ret    0x8
   16f28:	int3   
   16f29:	int3   
   16f2a:	int3   
   16f2b:	int3   
   16f2c:	int3   
   16f2d:	int3   
   16f2e:	mov    edi,edi
   16f30:	push   ebp
   16f31:	mov    ebp,esp
   16f33:	sub    esp,0x14
   16f36:	and    DWORD PTR [ebp-0x4],0x0
   16f3a:	push   esi
   16f3b:	lea    eax,[ebp-0x4]
   16f3e:	push   eax
   16f3f:	push   DWORD PTR [ebp+0x8]
   16f42:	mov    esi,ecx
   16f44:	lea    ecx,[ebp-0xc]
   16f47:	call   0x12c02
   16f4c:	push   eax
   16f4d:	lea    eax,[ebp-0x14]
   16f50:	push   eax
   16f51:	mov    ecx,esi
   16f53:	call   0x16b36
   16f58:	mov    ecx,DWORD PTR [ebp-0x8]
   16f5b:	mov    esi,DWORD PTR [eax]
   16f5d:	test   ecx,ecx
   16f5f:	je     0x16f66
   16f61:	call   0x10a9a
   16f66:	lea    eax,[esi+0x10]
   16f69:	pop    esi
   16f6a:	leave  
   16f6b:	ret    0x4
   16f6e:	int3   
   16f6f:	int3   
   16f70:	int3   
   16f71:	int3   
   16f72:	int3   
   16f73:	int3   
   16f74:	mov    edi,edi
   16f76:	push   ebp
   16f77:	mov    ebp,esp
   16f79:	sub    esp,0x20
   16f7c:	push   esi
   16f7d:	mov    esi,ecx
   16f7f:	mov    eax,DWORD PTR [esi+0x24]
   16f82:	mov    ecx,DWORD PTR [esi+0x28]
   16f85:	add    ecx,eax
   16f87:	cmp    DWORD PTR [esi+0x10],ecx
   16f8a:	jbe    0x1701d
   16f90:	mov    ecx,DWORD PTR [esi+0x18]
   16f93:	mov    ecx,DWORD PTR [ecx]
   16f95:	push   edi
   16f96:	mov    DWORD PTR [ebp-0x4],ecx
   16f99:	test   eax,eax
   16f9b:	je     0x16faa
   16f9d:	mov    edi,eax
   16f9f:	lea    ecx,[ebp-0x4]
   16fa2:	call   0x12ed4
   16fa7:	dec    edi
   16fa8:	jne    0x16f9f
   16faa:	mov    eax,DWORD PTR [ebp-0x4]
   16fad:	mov    edi,DWORD PTR [eax+0xc]
   16fb0:	lea    ecx,[ebp-0x20]
   16fb3:	mov    BYTE PTR [ebp-0x18],0x0
   16fb7:	call   0x144b6
   16fbc:	mov    eax,DWORD PTR [esi+0x8]
   16fbf:	mov    ecx,DWORD PTR [eax]
   16fc1:	mov    DWORD PTR [ebp-0x4],ecx
   16fc4:	cmp    ecx,eax
   16fc6:	je     0x17007
   16fc8:	lea    edx,[ecx+0x68]
   16fcb:	mov    eax,DWORD PTR [edx]
   16fcd:	cmp    eax,edi
   16fcf:	jae    0x16fe6
   16fd1:	push   ecx
   16fd2:	lea    eax,[ebp-0x8]
   16fd5:	push   eax
   16fd6:	lea    ecx,[esi+0x4]
   16fd9:	call   0x14f0e
   16fde:	mov    ecx,DWORD PTR [ebp-0x8]
   16fe1:	mov    DWORD PTR [ebp-0x4],ecx
   16fe4:	jmp    0x17002
   16fe6:	sub    eax,edi
   16fe8:	mov    DWORD PTR [edx],eax
   16fea:	push   edx
   16feb:	lea    eax,[ebp-0x10]
   16fee:	push   eax
   16fef:	lea    ecx,[ebp-0x20]
   16ff2:	call   0x1609a
   16ff7:	lea    ecx,[ebp-0x4]
   16ffa:	call   0x12e5e
   16fff:	mov    ecx,DWORD PTR [ebp-0x4]
   17002:	cmp    ecx,DWORD PTR [esi+0x8]
   17005:	jne    0x16fc8
   17007:	lea    eax,[ebp-0x20]
   1700a:	push   eax
   1700b:	add    esi,0x14
   1700e:	push   esi
   1700f:	call   0x1663a
   17014:	lea    ecx,[ebp-0x20]
   17017:	call   0x160c4
   1701c:	pop    edi
   1701d:	pop    esi
   1701e:	leave  
   1701f:	ret    
   17020:	int3   
   17021:	int3   
   17022:	int3   
   17023:	int3   
   17024:	int3   
   17025:	int3   
   17026:	mov    edi,edi
   17028:	push   ebp
   17029:	mov    ebp,esp
   1702b:	sub    esp,0x20
   1702e:	push   esi
   1702f:	push   0xffffffff
   17031:	mov    esi,ecx
   17033:	push   0x1de4e
   17038:	lea    ecx,[ebp-0x8]
   1703b:	call   0x11152
   17040:	lea    eax,[ebp-0x8]
   17043:	push   eax
   17044:	push   DWORD PTR [ebp+0x8]
   17047:	lea    ecx,[ebp-0x20]
   1704a:	call   0x135d2
   1704f:	push   eax
   17050:	lea    eax,[ebp-0x10]
   17053:	push   eax
   17054:	mov    ecx,esi
   17056:	call   0x16bc8
   1705b:	mov    esi,DWORD PTR [eax]
   1705d:	lea    ecx,[ebp-0x20]
   17060:	call   0x11090
   17065:	push   DWORD PTR [ebp-0x8]
   17068:	call   0x1da14
   1706d:	pop    ecx
   1706e:	lea    eax,[esi+0x14]
   17071:	pop    esi
   17072:	leave  
   17073:	ret    0x4
   17076:	int3   
   17077:	int3   
   17078:	int3   
   17079:	int3   
   1707a:	int3   
   1707b:	int3   
   1707c:	mov    edi,edi
   1707e:	push   ebp
   1707f:	mov    ebp,esp
   17081:	sub    esp,0x838
   17087:	mov    eax,ds:0x7e528
   1708c:	xor    eax,ebp
   1708e:	mov    DWORD PTR [ebp-0x4],eax
   17091:	mov    eax,DWORD PTR [ebp+0x8]
   17094:	push   ebx
   17095:	push   esi
   17096:	push   edi
   17097:	mov    DWORD PTR [ebp-0x808],eax
   1709d:	xor    eax,eax
   1709f:	push   0x7fe
   170a4:	mov    WORD PTR [ebp-0x804],ax
   170ab:	xor    ebx,ebx
   170ad:	lea    eax,[ebp-0x802]
   170b3:	push   ebx
   170b4:	push   eax
   170b5:	call   0x1daae
   170ba:	mov    eax,0x7e6c0
   170bf:	add    esp,0xc
   170c2:	mov    edx,eax
   170c4:	mov    cx,WORD PTR [eax]
   170c7:	inc    eax
   170c8:	inc    eax
   170c9:	cmp    cx,bx
   170cc:	jne    0x170c4
   170ce:	sub    eax,edx
   170d0:	lea    edi,[ebp-0x804]
   170d6:	dec    edi
   170d7:	dec    edi
   170d8:	mov    cx,WORD PTR [edi+0x2]
   170dc:	inc    edi
   170dd:	inc    edi
   170de:	cmp    cx,bx
   170e1:	jne    0x170d8
   170e3:	mov    ecx,eax
   170e5:	shr    ecx,0x2
   170e8:	mov    esi,edx
   170ea:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   170ec:	mov    ecx,eax
   170ee:	mov    eax,DWORD PTR [ebp-0x808]
   170f4:	and    ecx,0x3
   170f7:	add    eax,0x400
   170fc:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   170fe:	mov    edx,eax
   17100:	mov    cx,WORD PTR [eax]
   17103:	inc    eax
   17104:	inc    eax
   17105:	cmp    cx,bx
   17108:	jne    0x17100
   1710a:	sub    eax,edx
   1710c:	lea    edi,[ebp-0x804]
   17112:	dec    edi
   17113:	dec    edi
   17114:	mov    cx,WORD PTR [edi+0x2]
   17118:	inc    edi
   17119:	inc    edi
   1711a:	cmp    cx,bx
   1711d:	jne    0x17114
   1711f:	mov    ecx,eax
   17121:	shr    ecx,0x2
   17124:	mov    esi,edx
   17126:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17128:	mov    ecx,eax
   1712a:	and    ecx,0x3
   1712d:	lea    eax,[ebp-0x804]
   17133:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17135:	mov    DWORD PTR [ebp-0x818],eax
   1713b:	lea    ecx,[eax+0x2]
   1713e:	mov    dx,WORD PTR [eax]
   17141:	inc    eax
   17142:	inc    eax
   17143:	cmp    dx,bx
   17146:	jne    0x1713e
   17148:	sub    eax,ecx
   1714a:	sar    eax,1
   1714c:	add    eax,eax
   1714e:	mov    WORD PTR [ebp-0x81a],ax
   17155:	mov    WORD PTR [ebp-0x81c],ax
   1715c:	lea    eax,[ebp-0x81c]
   17162:	mov    DWORD PTR [ebp-0x82c],eax
   17168:	lea    eax,[ebp-0x838]
   1716e:	push   eax
   1716f:	xor    edi,edi
   17171:	inc    edi
   17172:	push   edi
   17173:	push   ebx
   17174:	push   ebx
   17175:	lea    eax,[ebp-0x834]
   1717b:	push   eax
   1717c:	push   0xf003f
   17181:	lea    eax,[ebp-0x80c]
   17187:	push   eax
   17188:	mov    DWORD PTR [ebp-0x834],0x18
   17192:	mov    DWORD PTR [ebp-0x830],ebx
   17198:	mov    DWORD PTR [ebp-0x828],0x40
   171a2:	mov    DWORD PTR [ebp-0x824],ebx
   171a8:	mov    DWORD PTR [ebp-0x820],ebx
   171ae:	call   0x119ca
   171b3:	call   eax
   171b5:	test   eax,eax
   171b7:	jl     0x17346
   171bd:	push   0x1e566
   171c2:	push   0x9
   171c4:	push   0x1e552
   171c9:	call   0x16c64
   171ce:	mov    DWORD PTR [ebp-0x810],eax
   171d4:	lea    edx,[eax+0x2]
   171d7:	mov    cx,WORD PTR [eax]
   171da:	inc    eax
   171db:	inc    eax
   171dc:	cmp    cx,bx
   171df:	jne    0x171d7
   171e1:	sub    eax,edx
   171e3:	sar    eax,1
   171e5:	add    eax,eax
   171e7:	mov    WORD PTR [ebp-0x812],ax
   171ee:	mov    WORD PTR [ebp-0x814],ax
   171f5:	mov    eax,DWORD PTR [ebp-0x808]
   171fb:	lea    ecx,[eax+0x2]
   171fe:	mov    dx,WORD PTR [eax]
   17201:	inc    eax
   17202:	inc    eax
   17203:	cmp    dx,bx
   17206:	jne    0x171fe
   17208:	sub    eax,ecx
   1720a:	sar    eax,1
   1720c:	inc    eax
   1720d:	movzx  eax,ax
   17210:	add    eax,eax
   17212:	push   eax
   17213:	push   DWORD PTR [ebp-0x808]
   17219:	lea    eax,[ebp-0x814]
   1721f:	push   edi
   17220:	push   ebx
   17221:	push   eax
   17222:	push   DWORD PTR [ebp-0x80c]
   17228:	call   0x117fc
   1722d:	call   eax
   1722f:	test   eax,eax
   17231:	jl     0x17346
   17237:	push   0x1e51e
   1723c:	push   0x5
   1723e:	push   0x1e512
   17243:	mov    DWORD PTR [ebp-0x808],0x3
   1724d:	call   0x16c64
   17252:	mov    DWORD PTR [ebp-0x810],eax
   17258:	lea    edx,[eax+0x2]
   1725b:	mov    cx,WORD PTR [eax]
   1725e:	inc    eax
   1725f:	inc    eax
   17260:	cmp    cx,bx
   17263:	jne    0x1725b
   17265:	sub    eax,edx
   17267:	push   0x4
   17269:	sar    eax,1
   1726b:	pop    esi
   1726c:	add    eax,eax
   1726e:	push   esi
   1726f:	mov    WORD PTR [ebp-0x812],ax
   17276:	mov    WORD PTR [ebp-0x814],ax
   1727d:	lea    eax,[ebp-0x808]
   17283:	push   eax
   17284:	push   esi
   17285:	push   ebx
   17286:	lea    eax,[ebp-0x814]
   1728c:	push   eax
   1728d:	push   DWORD PTR [ebp-0x80c]
   17293:	call   0x117fc
   17298:	call   eax
   1729a:	test   eax,eax
   1729c:	jl     0x17346
   172a2:	push   0x1e4e2
   172a7:	push   esi
   172a8:	push   0x1e4d8
   172ad:	mov    DWORD PTR [ebp-0x808],edi
   172b3:	call   0x16c64
   172b8:	mov    DWORD PTR [ebp-0x810],eax
   172be:	lea    ecx,[eax+0x2]
   172c1:	mov    dx,WORD PTR [eax]
   172c4:	inc    eax
   172c5:	inc    eax
   172c6:	cmp    dx,bx
   172c9:	jne    0x172c1
   172cb:	sub    eax,ecx
   172cd:	sar    eax,1
   172cf:	add    eax,eax
   172d1:	push   esi
   172d2:	mov    WORD PTR [ebp-0x812],ax
   172d9:	mov    WORD PTR [ebp-0x814],ax
   172e0:	lea    eax,[ebp-0x808]
   172e6:	push   eax
   172e7:	push   esi
   172e8:	push   ebx
   172e9:	lea    eax,[ebp-0x814]
   172ef:	push   eax
   172f0:	push   DWORD PTR [ebp-0x80c]
   172f6:	call   0x117fc
   172fb:	call   eax
   172fd:	test   eax,eax
   172ff:	jl     0x17346
   17301:	lea    eax,[ebp-0x81c]
   17307:	push   eax
   17308:	call   0x119a0
   1730d:	call   eax
   1730f:	test   eax,eax
   17311:	jl     0x17346
   17313:	lea    eax,[ebp-0x804]
   17319:	push   eax
   1731a:	push   DWORD PTR [ebp-0x80c]
   17320:	call   0x12142
   17325:	test   al,al
   17327:	je     0x1733a
   17329:	push   DWORD PTR [ebp-0x80c]
   1732f:	call   0x117d2
   17334:	call   eax
   17336:	test   eax,eax
   17338:	jl     0x17346
   1733a:	push   DWORD PTR [ebp-0x80c]
   17340:	call   DWORD PTR ds:0x1ee60
   17346:	mov    ecx,DWORD PTR [ebp-0x4]
   17349:	pop    edi
   1734a:	pop    esi
   1734b:	xor    ecx,ebp
   1734d:	pop    ebx
   1734e:	call   0x1da31
   17353:	leave  
   17354:	ret    0x4
   17357:	int3   
   17358:	int3   
   17359:	int3   
   1735a:	int3   
   1735b:	int3   
   1735c:	mov    edi,edi
   1735e:	push   ebp
   1735f:	mov    ebp,esp
   17361:	sub    esp,0x44
   17364:	mov    eax,DWORD PTR [ebp+0xc]
   17367:	mov    eax,DWORD PTR [eax]
   17369:	push   esi
   1736a:	mov    DWORD PTR [ebp-0x2c],eax
   1736d:	lea    eax,[ebp-0x2c]
   17370:	push   eax
   17371:	lea    eax,[ebp-0x44]
   17374:	push   eax
   17375:	xor    esi,esi
   17377:	push   0x1f0fff
   1737c:	lea    eax,[ebp-0x10]
   1737f:	push   eax
   17380:	mov    DWORD PTR [ebp-0x44],0x18
   17387:	mov    DWORD PTR [ebp-0x40],esi
   1738a:	mov    DWORD PTR [ebp-0x38],0x200
   17391:	mov    DWORD PTR [ebp-0x3c],esi
   17394:	mov    DWORD PTR [ebp-0x34],esi
   17397:	mov    DWORD PTR [ebp-0x30],esi
   1739a:	mov    DWORD PTR [ebp-0x28],esi
   1739d:	mov    DWORD PTR [ebp-0x10],esi
   173a0:	call   0x11682
   173a5:	call   eax
   173a7:	test   eax,eax
   173a9:	jl     0x1761a
   173af:	push   ebx
   173b0:	push   edi
   173b1:	push   0x40
   173b3:	mov    edi,0x1000
   173b8:	push   edi
   173b9:	lea    eax,[ebp-0x14]
   173bc:	push   eax
   173bd:	push   esi
   173be:	lea    eax,[ebp-0x8]
   173c1:	push   eax
   173c2:	push   DWORD PTR [ebp-0x10]
   173c5:	mov    DWORD PTR [ebp-0x8],esi
   173c8:	mov    esi,DWORD PTR ds:0x1ee40
   173ce:	mov    ebx,0x400
   173d3:	mov    DWORD PTR [ebp-0x14],ebx
   173d6:	call   esi
   173d8:	test   eax,eax
   173da:	jl     0x173e5
   173dc:	mov    eax,DWORD PTR [ebp-0x8]
   173df:	mov    ecx,DWORD PTR [ebp+0xc]
   173e2:	mov    DWORD PTR [ecx+0x8],eax
   173e5:	and    DWORD PTR [ebp-0x18],0x0
   173e9:	push   0x4
   173eb:	push   edi
   173ec:	lea    eax,[ebp-0x14]
   173ef:	push   eax
   173f0:	push   0x0
   173f2:	lea    eax,[ebp-0x18]
   173f5:	push   eax
   173f6:	push   DWORD PTR [ebp-0x10]
   173f9:	mov    DWORD PTR [ebp-0x14],ebx
   173fc:	call   esi
   173fe:	test   eax,eax
   17400:	jl     0x1740b
   17402:	mov    eax,DWORD PTR [ebp-0x18]
   17405:	mov    ecx,DWORD PTR [ebp+0xc]
   17408:	mov    DWORD PTR [ecx+0xc],eax
   1740b:	lea    eax,[ebp-0x1c]
   1740e:	push   eax
   1740f:	push   DWORD PTR [ebp-0x2c]
   17412:	call   0x11c94
   17417:	call   eax
   17419:	test   eax,eax
   1741b:	jl     0x17618
   17421:	push   DWORD PTR [ebp-0x1c]
   17424:	call   0x11a48
   17429:	call   eax
   1742b:	mov    ebx,DWORD PTR [ebp-0x8]
   1742e:	and    DWORD PTR [ebp-0x4],0x0
   17432:	test   ebx,ebx
   17434:	je     0x175fe
   1743a:	mov    edi,DWORD PTR [ebp-0x18]
   1743d:	push   0x40
   1743f:	push   0x7e408
   17444:	push   edi
   17445:	mov    DWORD PTR [ebp-0xc],edi
   17448:	call   0x19832
   1744d:	push   0x1e5a4
   17452:	push   0x4
   17454:	push   0x1e59a
   17459:	call   0x16c64
   1745e:	mov    esi,eax
   17460:	mov    cx,WORD PTR [eax]
   17463:	inc    eax
   17464:	inc    eax
   17465:	test   cx,cx
   17468:	jne    0x17460
   1746a:	sub    eax,esi
   1746c:	dec    edi
   1746d:	dec    edi
   1746e:	mov    cx,WORD PTR [edi+0x2]
   17472:	inc    edi
   17473:	inc    edi
   17474:	test   cx,cx
   17477:	jne    0x1746e
   17479:	mov    ecx,eax
   1747b:	shr    ecx,0x2
   1747e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17480:	mov    ecx,eax
   17482:	push   0x60
   17484:	and    ecx,0x3
   17487:	push   ebx
   17488:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1748a:	mov    DWORD PTR [ebp-0x20],ebx
   1748d:	call   0x197e4
   17492:	push   0x68
   17494:	push   eax
   17495:	call   0x197e4
   1749a:	push   DWORD PTR [ebp-0xc]
   1749d:	push   eax
   1749e:	call   0x197fc
   174a3:	push   0xb8
   174a8:	push   eax
   174a9:	call   0x197e4
   174ae:	push   DWORD PTR ds:0x7ef70
   174b4:	push   eax
   174b5:	call   0x197fc
   174ba:	push   0xc00b
   174bf:	push   eax
   174c0:	call   0x19816
   174c5:	push   0x74
   174c7:	push   eax
   174c8:	call   0x197e4
   174cd:	push   0x2
   174cf:	push   eax
   174d0:	call   0x197e4
   174d5:	push   0xd0ff
   174da:	push   eax
   174db:	call   0x19816
   174e0:	push   0x61
   174e2:	push   eax
   174e3:	call   0x197e4
   174e8:	mov    ebx,DWORD PTR [ebp+0x8]
   174eb:	mov    edi,eax
   174ed:	mov    esi,ebx
   174ef:	push   0x0
   174f1:	push   esi
   174f2:	push   edi
   174f3:	call   0x19f9e
   174f8:	mov    ecx,eax
   174fa:	sub    ecx,esi
   174fc:	add    DWORD PTR [ebp-0x4],ecx
   174ff:	add    edi,ecx
   17501:	cmp    DWORD PTR [ebp-0x4],0x5
   17505:	mov    esi,eax
   17507:	jb     0x174ef
   17509:	mov    eax,DWORD PTR [ebp-0x4]
   1750c:	push   edi
   1750d:	add    eax,ebx
   1750f:	push   eax
   17510:	call   0x1985a
   17515:	mov    eax,DWORD PTR [ebp-0x8]
   17518:	test   eax,eax
   1751a:	je     0x175fe
   17520:	add    eax,0x400
   17525:	lea    ecx,[eax-0x10]
   17528:	mov    DWORD PTR [ebp-0x24],ecx
   1752b:	mov    ecx,DWORD PTR [ebp-0x4]
   1752e:	lea    esi,[eax-0xc]
   17531:	push   esi
   17532:	lea    edi,[eax-0x4]
   17535:	lea    ebx,[eax-0x8]
   17538:	shr    ecx,0x2
   1753b:	lea    ecx,[ecx*4+0x14]
   17542:	push   0x40
   17544:	sub    eax,ecx
   17546:	push   ebx
   17547:	mov    DWORD PTR [ebp-0xc],eax
   1754a:	mov    eax,DWORD PTR [ebp+0x8]
   1754d:	mov    DWORD PTR [edi],eax
   1754f:	push   edi
   17550:	mov    DWORD PTR [ebx],0x5
   17556:	and    DWORD PTR [esi],0x0
   17559:	push   0xffffffff
   1755b:	call   DWORD PTR ds:0x7eeec
   17561:	test   eax,eax
   17563:	jl     0x175c8
   17565:	push   DWORD PTR [ebp-0x4]
   17568:	push   0x90
   1756d:	push   DWORD PTR [ebp-0xc]
   17570:	call   0x1daae
   17575:	mov    eax,DWORD PTR [ebp-0x20]
   17578:	sub    eax,DWORD PTR [ebp+0x8]
   1757b:	add    esp,0xc
   1757e:	sub    eax,0x5
   17581:	push   eax
   17582:	mov    eax,DWORD PTR [ebp-0xc]
   17585:	inc    eax
   17586:	push   eax
   17587:	call   0x197fc
   1758c:	push   0xe9
   17591:	push   DWORD PTR [ebp-0xc]
   17594:	call   0x197e4
   17599:	mov    eax,DWORD PTR [ebp-0x24]
   1759c:	and    DWORD PTR [eax],0x0
   1759f:	push   eax
   175a0:	push   DWORD PTR [ebp-0x4]
   175a3:	push   DWORD PTR [ebp-0xc]
   175a6:	push   DWORD PTR [ebp+0x8]
   175a9:	push   0xffffffff
   175ab:	call   DWORD PTR ds:0x7eee0
   175b1:	mov    eax,DWORD PTR [ebp+0xc]
   175b4:	mov    BYTE PTR [eax+0x10],0x1
   175b8:	lea    eax,[ebp-0x20]
   175bb:	push   eax
   175bc:	push   DWORD PTR [esi]
   175be:	push   ebx
   175bf:	push   edi
   175c0:	push   0xffffffff
   175c2:	call   DWORD PTR ds:0x7eeec
   175c8:	mov    esi,DWORD PTR [ebp-0x8]
   175cb:	test   esi,esi
   175cd:	je     0x175fe
   175cf:	lea    eax,[esi+0x400]
   175d5:	lea    ecx,[eax-0x4]
   175d8:	lea    edx,[eax-0x8]
   175db:	add    eax,0xfffffff4
   175de:	push   eax
   175df:	push   0x20
   175e1:	push   edx
   175e2:	mov    DWORD PTR [ecx],esi
   175e4:	push   ecx
   175e5:	mov    DWORD PTR [edx],0x400
   175eb:	and    DWORD PTR [eax],0x0
   175ee:	push   0xffffffff
   175f0:	call   DWORD PTR ds:0x7eeec
   175f6:	test   eax,eax
   175f8:	jge    0x175fe
   175fa:	and    DWORD PTR [ebp-0x8],0x0
   175fe:	call   0x11a1e
   17603:	call   eax
   17605:	call   0x11c6a
   1760a:	mov    ecx,DWORD PTR [ebp-0x1c]
   1760d:	call   eax
   1760f:	push   DWORD PTR [ebp-0x10]
   17612:	call   DWORD PTR ds:0x1ee60
   17618:	pop    edi
   17619:	pop    ebx
   1761a:	pop    esi
   1761b:	leave  
   1761c:	ret    0x8
   1761f:	int3   
   17620:	int3   
   17621:	int3   
   17622:	int3   
   17623:	int3   
   17624:	mov    edi,edi
   17626:	push   ebp
   17627:	mov    ebp,esp
   17629:	cmp    DWORD PTR ds:0x7ef70,0x0
   17630:	push   esi
   17631:	mov    esi,DWORD PTR [ebp+0x10]
   17634:	jne    0x176ff
   1763a:	push   0x1e770
   1763f:	push   0xc
   17641:	push   0x1e756
   17646:	call   0x16c64
   1764b:	push   eax
   1764c:	push   DWORD PTR [ebp+0x8]
   1764f:	call   0x10df8
   17654:	test   al,al
   17656:	je     0x176ff
   1765c:	mov    eax,DWORD PTR [esi+0x4]
   1765f:	push   0x1e72a
   17664:	push   0xc
   17666:	push   0x1e71c
   1766b:	mov    ds:0x7ef68,eax
   17670:	call   0x16d5a
   17675:	push   eax
   17676:	push   DWORD PTR [esi+0x4]
   17679:	call   0x123a6
   1767e:	push   0x1e6ec
   17683:	push   0xc
   17685:	push   0x1e6de
   1768a:	mov    ds:0x7ef70,eax
   1768f:	call   0x16d5a
   17694:	push   eax
   17695:	push   DWORD PTR [esi+0x4]
   17698:	call   0x123a6
   1769d:	push   0x1e6a2
   176a2:	push   0xc
   176a4:	push   0x1e694
   176a9:	mov    ds:0x7ef74,eax
   176ae:	call   0x16d5a
   176b3:	push   eax
   176b4:	push   DWORD PTR [esi+0x4]
   176b7:	call   0x123a6
   176bc:	push   0x1e664
   176c1:	push   0x5
   176c3:	push   0x1e65e
   176c8:	mov    ds:0x7ef78,eax
   176cd:	call   0x16d5a
   176d2:	push   eax
   176d3:	push   DWORD PTR [esi+0x4]
   176d6:	call   0x123a6
   176db:	push   0x1e620
   176e0:	push   0x4
   176e2:	push   0x1e61a
   176e7:	mov    ds:0x7ef7c,eax
   176ec:	call   0x16d5a
   176f1:	push   eax
   176f2:	push   DWORD PTR [esi+0x4]
   176f5:	call   0x123a6
   176fa:	mov    ds:0x7ef80,eax
   176ff:	cmp    DWORD PTR ds:0x7ef6c,0x0
   17706:	jne    0x1772e
   17708:	push   0x1e5e4
   1770d:	push   0x9
   1770f:	push   0x1e5d0
   17714:	call   0x16c64
   17719:	push   eax
   1771a:	push   DWORD PTR [ebp+0x8]
   1771d:	call   0x10df8
   17722:	test   al,al
   17724:	je     0x1772e
   17726:	mov    eax,DWORD PTR [esi+0x4]
   17729:	mov    ds:0x7ef6c,eax
   1772e:	pop    esi
   1772f:	pop    ebp
   17730:	ret    0xc
   17733:	int3   
   17734:	int3   
   17735:	int3   
   17736:	int3   
   17737:	int3   
   17738:	mov    edi,edi
   1773a:	push   ebp
   1773b:	mov    ebp,esp
   1773d:	sub    esp,0x4c
   17740:	push   ebx
   17741:	push   esi
   17742:	push   edi
   17743:	push   DWORD PTR [ebp+0xc]
   17746:	push   DWORD PTR [ebp+0x8]
   17749:	call   DWORD PTR ds:0x7eef8
   1774f:	mov    DWORD PTR [ebp-0x8],eax
   17752:	xor    eax,eax
   17754:	xor    ebx,ebx
   17756:	mov    DWORD PTR [ebp-0x30],ebx
   17759:	lea    edi,[ebp-0x2c]
   1775c:	stos   DWORD PTR es:[edi],eax
   1775d:	stos   DWORD PTR es:[edi],eax
   1775e:	stos   DWORD PTR es:[edi],eax
   1775f:	stos   DWORD PTR es:[edi],eax
   17760:	xor    eax,eax
   17762:	mov    DWORD PTR [ebp-0x1c],ebx
   17765:	lea    edi,[ebp-0x18]
   17768:	stos   DWORD PTR es:[edi],eax
   17769:	stos   DWORD PTR es:[edi],eax
   1776a:	stos   DWORD PTR es:[edi],eax
   1776b:	stos   DWORD PTR es:[edi],eax
   1776c:	lea    eax,[ebp-0x30]
   1776f:	push   eax
   17770:	push   ebx
   17771:	call   0x10e86
   17776:	mov    BYTE PTR [ebp+0xf],al
   17779:	lea    eax,[ebp-0x1c]
   1777c:	push   eax
   1777d:	push   0x1
   1777f:	call   0x10e86
   17784:	mov    BYTE PTR [ebp-0x1],al
   17787:	cmp    BYTE PTR [ebp+0xf],bl
   1778a:	je     0x177eb
   1778c:	mov    esi,DWORD PTR [ebp-0x30]
   1778f:	cmp    esi,ebx
   17791:	je     0x177eb
   17793:	push   0x6
   17795:	pop    ecx
   17796:	push   ebx
   17797:	xor    eax,eax
   17799:	mov    DWORD PTR [ebp-0x4c],ebx
   1779c:	lea    edi,[ebp-0x48]
   1779f:	push   0x1c
   177a1:	rep stos DWORD PTR es:[edi],eax
   177a3:	lea    eax,[ebp-0x4c]
   177a6:	push   eax
   177a7:	push   ebx
   177a8:	push   DWORD PTR [ebp+0x8]
   177ab:	call   0x11922
   177b0:	call   eax
   177b2:	cmp    DWORD PTR [ebp-0x44],esi
   177b5:	jne    0x177eb
   177b7:	push   ebx
   177b8:	push   0x4
   177ba:	lea    eax,[ebp+0xc]
   177bd:	push   eax
   177be:	push   0x9
   177c0:	push   DWORD PTR [ebp+0x8]
   177c3:	mov    DWORD PTR [ebp+0xc],ebx
   177c6:	call   0x11922
   177cb:	call   eax
   177cd:	test   eax,eax
   177cf:	jge    0x177d4
   177d1:	mov    DWORD PTR [ebp+0xc],ebx
   177d4:	cmp    DWORD PTR [ebp+0xc],ebx
   177d7:	je     0x177eb
   177d9:	lea    eax,[ebp-0x30]
   177dc:	push   eax
   177dd:	push   DWORD PTR [ebp+0xc]
   177e0:	call   0x1735c
   177e5:	push   ebx
   177e6:	call   0x10f1c
   177eb:	cmp    BYTE PTR [ebp-0x1],bl
   177ee:	je     0x17859
   177f0:	mov    esi,DWORD PTR [ebp-0x1c]
   177f3:	cmp    esi,ebx
   177f5:	je     0x17859
   177f7:	cmp    BYTE PTR [ebp-0xc],bl
   177fa:	jne    0x17859
   177fc:	push   0x6
   177fe:	pop    ecx
   177ff:	push   ebx
   17800:	xor    eax,eax
   17802:	mov    DWORD PTR [ebp-0x4c],ebx
   17805:	lea    edi,[ebp-0x48]
   17808:	push   0x1c
   1780a:	rep stos DWORD PTR es:[edi],eax
   1780c:	lea    eax,[ebp-0x4c]
   1780f:	push   eax
   17810:	push   ebx
   17811:	push   DWORD PTR [ebp+0x8]
   17814:	call   0x11922
   17819:	call   eax
   1781b:	cmp    DWORD PTR [ebp-0x44],esi
   1781e:	jne    0x17859
   17820:	push   ebx
   17821:	push   0x4
   17823:	lea    eax,[ebp+0xc]
   17826:	push   eax
   17827:	push   0x9
   17829:	push   DWORD PTR [ebp+0x8]
   1782c:	mov    DWORD PTR [ebp+0xc],ebx
   1782f:	call   0x11922
   17834:	call   eax
   17836:	test   eax,eax
   17838:	jge    0x1783d
   1783a:	mov    DWORD PTR [ebp+0xc],ebx
   1783d:	cmp    DWORD PTR [ebp+0xc],ebx
   17840:	je     0x17859
   17842:	lea    eax,[ebp-0x1c]
   17845:	push   eax
   17846:	push   DWORD PTR [ebp+0xc]
   17849:	call   0x124b2
   1784e:	lea    eax,[ebp-0x1c]
   17851:	push   eax
   17852:	push   0x1
   17854:	call   0x10ed4
   17859:	mov    eax,DWORD PTR [ebp-0x8]
   1785c:	pop    edi
   1785d:	pop    esi
   1785e:	pop    ebx
   1785f:	leave  
   17860:	ret    0x8
   17863:	int3   
   17864:	int3   
   17865:	int3   
   17866:	int3   
   17867:	int3   
   17868:	push   0x24
   1786a:	push   0x7e068
   1786f:	call   0x1dad4
   17874:	xor    ebx,ebx
   17876:	push   ebx
   17877:	push   ebx
   17878:	push   ebx
   17879:	push   ebx
   1787a:	push   0x7e560
   1787f:	call   DWORD PTR ds:0x1ee28
   17885:	cmp    eax,ebx
   17887:	jge    0x17898
   17889:	mov    eax,DWORD PTR [ebp+0x8]
   1788c:	mov    DWORD PTR [eax+0x8],0x4
   17893:	jmp    0x17950
   17898:	mov    DWORD PTR [ebp-0x4],ebx
   1789b:	push   0xffffffff
   1789d:	mov    esi,DWORD PTR [ebp+0x8]
   178a0:	lea    eax,[esi+0xc]
   178a3:	push   eax
   178a4:	lea    ecx,[ebp-0x24]
   178a7:	call   0x1296e
   178ac:	push   0xffffffff
   178ae:	mov    eax,DWORD PTR [ebp-0x20]
   178b1:	lea    eax,[eax+esi*1+0xd]
   178b5:	push   eax
   178b6:	lea    ecx,[ebp-0x2c]
   178b9:	call   0x1296e
   178be:	push   0xffffffff
   178c0:	push   0x1def0
   178c5:	lea    ecx,[ebp-0x34]
   178c8:	call   0x110ae
   178cd:	lea    eax,[ebp-0x34]
   178d0:	push   eax
   178d1:	lea    eax,[ebp-0x2c]
   178d4:	push   eax
   178d5:	call   0x197b4
   178da:	mov    BYTE PTR [ebp-0x19],al
   178dd:	push   DWORD PTR [ebp-0x34]
   178e0:	call   0x1da14
   178e5:	pop    ecx
   178e6:	lea    eax,[ebp-0x24]
   178e9:	mov    ecx,DWORD PTR ds:0x7e530
   178ef:	push   eax
   178f0:	cmp    BYTE PTR [ebp-0x19],bl
   178f3:	je     0x178fc
   178f5:	call   0x16176
   178fa:	jmp    0x1790c
   178fc:	call   0x16ebe
   17901:	lea    ecx,[ebp-0x2c]
   17904:	push   ecx
   17905:	mov    ecx,eax
   17907:	call   0x129b0
   1790c:	mov    DWORD PTR [esi+0x8],ebx
   1790f:	push   DWORD PTR [ebp-0x2c]
   17912:	call   0x1da14
   17917:	push   DWORD PTR [ebp-0x24]
   1791a:	call   0x1da14
   1791f:	pop    ecx
   17920:	pop    ecx
   17921:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17928:	jmp    0x17944
   1792a:	xor    eax,eax
   1792c:	inc    eax
   1792d:	ret    
   1792e:	mov    esp,DWORD PTR [ebp-0x18]
   17931:	mov    eax,DWORD PTR [ebp+0x8]
   17934:	mov    DWORD PTR [eax+0x8],0x4
   1793b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17942:	xor    ebx,ebx
   17944:	push   ebx
   17945:	push   0x7e560
   1794a:	call   DWORD PTR ds:0x1ee24
   17950:	call   0x1db19
   17955:	ret    0x4
   17958:	int3   
   17959:	int3   
   1795a:	int3   
   1795b:	int3   
   1795c:	int3   
   1795d:	int3   
   1795e:	push   0xc
   17960:	push   0x7e088
   17965:	call   0x1dad4
   1796a:	xor    edi,edi
   1796c:	push   edi
   1796d:	push   edi
   1796e:	push   edi
   1796f:	push   edi
   17970:	push   0x7e560
   17975:	call   DWORD PTR ds:0x1ee28
   1797b:	cmp    eax,edi
   1797d:	jge    0x1798b
   1797f:	mov    eax,DWORD PTR [ebp+0x8]
   17982:	mov    DWORD PTR [eax+0x8],0x4
   17989:	jmp    0x17a01
   1798b:	mov    DWORD PTR [ebp-0x4],edi
   1798e:	mov    esi,DWORD PTR [ebp+0x8]
   17991:	lea    eax,[esi+0x4]
   17994:	mov    ecx,DWORD PTR ds:0x7e5bc
   1799a:	push   eax
   1799b:	cmp    DWORD PTR [esi],edi
   1799d:	jbe    0x179ca
   1799f:	call   0x16f2e
   179a4:	mov    ebx,eax
   179a6:	push   DWORD PTR [esi]
   179a8:	lea    eax,[esi+0xc]
   179ab:	push   eax
   179ac:	lea    ecx,[ebp-0x1c]
   179af:	call   0x137ae
   179b4:	push   eax
   179b5:	mov    ecx,ebx
   179b7:	call   0x11f14
   179bc:	mov    ecx,DWORD PTR [ebp-0x1c]
   179bf:	cmp    ecx,edi
   179c1:	je     0x179cf
   179c3:	call   0x10a9a
   179c8:	jmp    0x179cf
   179ca:	call   0x16b60
   179cf:	mov    DWORD PTR [esi+0x8],edi
   179d2:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   179d9:	jmp    0x179f5
   179db:	xor    eax,eax
   179dd:	inc    eax
   179de:	ret    
   179df:	mov    esp,DWORD PTR [ebp-0x18]
   179e2:	mov    eax,DWORD PTR [ebp+0x8]
   179e5:	mov    DWORD PTR [eax+0x8],0x4
   179ec:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   179f3:	xor    edi,edi
   179f5:	push   edi
   179f6:	push   0x7e560
   179fb:	call   DWORD PTR ds:0x1ee24
   17a01:	call   0x1db19
   17a06:	ret    0x4
   17a09:	int3   
   17a0a:	int3   
   17a0b:	int3   
   17a0c:	int3   
   17a0d:	int3   
   17a0e:	mov    edi,edi
   17a10:	push   ebp
   17a11:	mov    ebp,esp
   17a13:	sub    esp,0x10
   17a16:	and    DWORD PTR [ebp-0xc],0x0
   17a1a:	xor    ecx,ecx
   17a1c:	mov    DWORD PTR [ebp-0x10],0x1
   17a23:	xor    eax,eax
   17a25:	mov    dl,BYTE PTR [eax+0x7a3e8]
   17a2b:	xor    BYTE PTR [ebp+ecx*1-0x10],dl
   17a2f:	inc    ecx
   17a30:	inc    eax
   17a31:	and    eax,0xf
   17a34:	cmp    ecx,0x8
   17a37:	jne    0x17a25
   17a39:	push   ecx
   17a3a:	lea    eax,[ebp-0x10]
   17a3d:	push   eax
   17a3e:	lea    ecx,[ebp-0x8]
   17a41:	mov    DWORD PTR [ebp-0x4],0x2
   17a48:	call   0x137ae
   17a4d:	mov    ecx,DWORD PTR ds:0x7e5bc
   17a53:	push   eax
   17a54:	lea    eax,[ebp-0x4]
   17a57:	push   eax
   17a58:	call   0x16f2e
   17a5d:	mov    ecx,eax
   17a5f:	call   0x11f14
   17a64:	mov    ecx,DWORD PTR [ebp-0x8]
   17a67:	test   ecx,ecx
   17a69:	je     0x17a70
   17a6b:	call   0x10a9a
   17a70:	leave  
   17a71:	ret    
   17a72:	int3   
   17a73:	int3   
   17a74:	int3   
   17a75:	int3   
   17a76:	int3   
   17a77:	int3   
   17a78:	push   0x848
   17a7d:	push   0x7e0a8
   17a82:	call   0x1dde0
   17a87:	xor    ebx,ebx
   17a89:	mov    BYTE PTR [ebp-0x81d],bl
   17a8f:	xor    eax,eax
   17a91:	mov    WORD PTR [ebp-0x81c],ax
   17a98:	push   0x7fe
   17a9d:	push   ebx
   17a9e:	lea    eax,[ebp-0x81a]
   17aa4:	push   eax
   17aa5:	call   0x1daae
   17aaa:	add    esp,0xc
   17aad:	push   0x1e816
   17ab2:	push   0x15
   17ab4:	push   0x1e7ea
   17ab9:	call   0x16c64
   17abe:	mov    edx,eax
   17ac0:	mov    cx,WORD PTR [eax]
   17ac3:	inc    eax
   17ac4:	inc    eax
   17ac5:	cmp    cx,bx
   17ac8:	jne    0x17ac0
   17aca:	sub    eax,edx
   17acc:	lea    edi,[ebp-0x81c]
   17ad2:	dec    edi
   17ad3:	dec    edi
   17ad4:	mov    cx,WORD PTR [edi+0x2]
   17ad8:	inc    edi
   17ad9:	inc    edi
   17ada:	cmp    cx,bx
   17add:	jne    0x17ad4
   17adf:	mov    ecx,eax
   17ae1:	mov    esi,edx
   17ae3:	shr    ecx,0x2
   17ae6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17ae8:	mov    ecx,eax
   17aea:	and    ecx,0x3
   17aed:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17aef:	mov    eax,0x7e408
   17af4:	mov    edx,eax
   17af6:	mov    cx,WORD PTR [eax]
   17af9:	inc    eax
   17afa:	inc    eax
   17afb:	cmp    cx,bx
   17afe:	jne    0x17af6
   17b00:	sub    eax,edx
   17b02:	lea    edi,[ebp-0x81c]
   17b08:	dec    edi
   17b09:	dec    edi
   17b0a:	mov    cx,WORD PTR [edi+0x2]
   17b0e:	inc    edi
   17b0f:	inc    edi
   17b10:	cmp    cx,bx
   17b13:	jne    0x17b0a
   17b15:	mov    ecx,eax
   17b17:	mov    esi,edx
   17b19:	shr    ecx,0x2
   17b1c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17b1e:	mov    ecx,eax
   17b20:	and    ecx,0x3
   17b23:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17b25:	push   0x1e7b4
   17b2a:	push   0x4
   17b2c:	push   0x1e59a
   17b31:	call   0x16c64
   17b36:	mov    edx,eax
   17b38:	mov    cx,WORD PTR [eax]
   17b3b:	inc    eax
   17b3c:	inc    eax
   17b3d:	cmp    cx,bx
   17b40:	jne    0x17b38
   17b42:	sub    eax,edx
   17b44:	lea    edi,[ebp-0x81c]
   17b4a:	dec    edi
   17b4b:	dec    edi
   17b4c:	mov    cx,WORD PTR [edi+0x2]
   17b50:	inc    edi
   17b51:	inc    edi
   17b52:	cmp    cx,bx
   17b55:	jne    0x17b4c
   17b57:	mov    ecx,eax
   17b59:	mov    esi,edx
   17b5b:	shr    ecx,0x2
   17b5e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17b60:	mov    ecx,eax
   17b62:	and    ecx,0x3
   17b65:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17b67:	lea    eax,[ebp-0x81c]
   17b6d:	push   eax
   17b6e:	lea    eax,[ebp-0x858]
   17b74:	push   eax
   17b75:	call   0x11c40
   17b7a:	call   eax
   17b7c:	mov    DWORD PTR [ebp-0x824],ebx
   17b82:	xor    eax,eax
   17b84:	lea    edi,[ebp-0x84c]
   17b8a:	stos   DWORD PTR es:[edi],eax
   17b8b:	stos   DWORD PTR es:[edi],eax
   17b8c:	stos   DWORD PTR es:[edi],eax
   17b8d:	stos   DWORD PTR es:[edi],eax
   17b8e:	stos   DWORD PTR es:[edi],eax
   17b8f:	mov    DWORD PTR [ebp-0x830],ebx
   17b95:	xor    eax,eax
   17b97:	lea    edi,[ebp-0x82c]
   17b9d:	stos   DWORD PTR es:[edi],eax
   17b9e:	mov    DWORD PTR [ebp-0x850],0x18
   17ba8:	mov    DWORD PTR [ebp-0x84c],ebx
   17bae:	mov    DWORD PTR [ebp-0x844],0x240
   17bb8:	lea    eax,[ebp-0x858]
   17bbe:	mov    DWORD PTR [ebp-0x848],eax
   17bc4:	mov    DWORD PTR [ebp-0x840],ebx
   17bca:	mov    DWORD PTR [ebp-0x83c],ebx
   17bd0:	push   ebx
   17bd1:	push   ebx
   17bd2:	push   0x60
   17bd4:	push   0x1
   17bd6:	push   ebx
   17bd7:	push   0x80
   17bdc:	push   ebx
   17bdd:	lea    eax,[ebp-0x830]
   17be3:	push   eax
   17be4:	lea    eax,[ebp-0x850]
   17bea:	push   eax
   17beb:	push   0x100001
   17bf0:	lea    eax,[ebp-0x824]
   17bf6:	push   eax
   17bf7:	call   0x11850
   17bfc:	call   eax
   17bfe:	cmp    eax,ebx
   17c00:	jge    0x17c09
   17c02:	xor    al,al
   17c04:	jmp    0x17c9e
   17c09:	mov    DWORD PTR [ebp-0x4],ebx
   17c0c:	mov    esi,DWORD PTR [ebp+0xc]
   17c0f:	mov    eax,0x10000
   17c14:	cmp    esi,eax
   17c16:	jbe    0x17c1a
   17c18:	mov    esi,eax
   17c1a:	push   esi
   17c1b:	call   0x10a66
   17c20:	pop    ecx
   17c21:	mov    DWORD PTR [ebp-0x828],eax
   17c27:	mov    DWORD PTR [ebp-0x838],ebx
   17c2d:	xor    eax,eax
   17c2f:	lea    edi,[ebp-0x834]
   17c35:	stos   DWORD PTR es:[edi],eax
   17c36:	push   ebx
   17c37:	lea    eax,[ebp-0x838]
   17c3d:	push   eax
   17c3e:	push   esi
   17c3f:	push   DWORD PTR [ebp-0x828]
   17c45:	lea    eax,[ebp-0x830]
   17c4b:	push   eax
   17c4c:	push   ebx
   17c4d:	push   ebx
   17c4e:	push   ebx
   17c4f:	push   DWORD PTR [ebp-0x824]
   17c55:	call   0x11a9c
   17c5a:	call   eax
   17c5c:	cmp    eax,ebx
   17c5e:	jl     0x17c85
   17c60:	mov    ecx,DWORD PTR [ebp-0x82c]
   17c66:	mov    edi,DWORD PTR [ebp+0x8]
   17c69:	mov    esi,DWORD PTR [ebp-0x828]
   17c6f:	xor    eax,eax
   17c71:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
   17c73:	sete   al
   17c76:	mov    BYTE PTR [ebp-0x81d],al
   17c7c:	jmp    0x17c85
   17c7e:	xor    eax,eax
   17c80:	inc    eax
   17c81:	ret    
   17c82:	mov    esp,DWORD PTR [ebp-0x18]
   17c85:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17c8c:	push   DWORD PTR [ebp-0x824]
   17c92:	call   DWORD PTR ds:0x1ee60
   17c98:	mov    al,BYTE PTR [ebp-0x81d]
   17c9e:	call   0x1de28
   17ca3:	ret    0x8
   17ca6:	int3   
   17ca7:	int3   
   17ca8:	int3   
   17ca9:	int3   
   17caa:	int3   
   17cab:	int3   
   17cac:	push   0x874
   17cb1:	push   0x7e0c8
   17cb6:	call   0x1dde0
   17cbb:	mov    eax,DWORD PTR [ebp+0x8]
   17cbe:	mov    DWORD PTR [ebp-0x830],eax
   17cc4:	xor    ebx,ebx
   17cc6:	mov    BYTE PTR [ebp-0x81d],bl
   17ccc:	xor    eax,eax
   17cce:	mov    WORD PTR [ebp-0x81c],ax
   17cd5:	push   0x7fe
   17cda:	push   ebx
   17cdb:	lea    eax,[ebp-0x81a]
   17ce1:	push   eax
   17ce2:	call   0x1daae
   17ce7:	add    esp,0xc
   17cea:	push   0x1e876
   17cef:	push   0x15
   17cf1:	push   0x1e7ea
   17cf6:	call   0x16c64
   17cfb:	mov    edx,eax
   17cfd:	mov    cx,WORD PTR [eax]
   17d00:	inc    eax
   17d01:	inc    eax
   17d02:	cmp    cx,bx
   17d05:	jne    0x17cfd
   17d07:	sub    eax,edx
   17d09:	lea    edi,[ebp-0x81c]
   17d0f:	dec    edi
   17d10:	dec    edi
   17d11:	mov    cx,WORD PTR [edi+0x2]
   17d15:	inc    edi
   17d16:	inc    edi
   17d17:	cmp    cx,bx
   17d1a:	jne    0x17d11
   17d1c:	mov    ecx,eax
   17d1e:	mov    esi,edx
   17d20:	shr    ecx,0x2
   17d23:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17d25:	mov    ecx,eax
   17d27:	and    ecx,0x3
   17d2a:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17d2c:	mov    eax,0x7e408
   17d31:	mov    edx,eax
   17d33:	mov    cx,WORD PTR [eax]
   17d36:	inc    eax
   17d37:	inc    eax
   17d38:	cmp    cx,bx
   17d3b:	jne    0x17d33
   17d3d:	sub    eax,edx
   17d3f:	lea    edi,[ebp-0x81c]
   17d45:	dec    edi
   17d46:	dec    edi
   17d47:	mov    cx,WORD PTR [edi+0x2]
   17d4b:	inc    edi
   17d4c:	inc    edi
   17d4d:	cmp    cx,bx
   17d50:	jne    0x17d47
   17d52:	mov    ecx,eax
   17d54:	mov    esi,edx
   17d56:	shr    ecx,0x2
   17d59:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17d5b:	mov    ecx,eax
   17d5d:	and    ecx,0x3
   17d60:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17d62:	push   0x1e84a
   17d67:	push   0x4
   17d69:	push   0x1e59a
   17d6e:	call   0x16c64
   17d73:	mov    edx,eax
   17d75:	mov    cx,WORD PTR [eax]
   17d78:	inc    eax
   17d79:	inc    eax
   17d7a:	cmp    cx,bx
   17d7d:	jne    0x17d75
   17d7f:	sub    eax,edx
   17d81:	lea    edi,[ebp-0x81c]
   17d87:	dec    edi
   17d88:	dec    edi
   17d89:	mov    cx,WORD PTR [edi+0x2]
   17d8d:	inc    edi
   17d8e:	inc    edi
   17d8f:	cmp    cx,bx
   17d92:	jne    0x17d89
   17d94:	mov    ecx,eax
   17d96:	mov    esi,edx
   17d98:	shr    ecx,0x2
   17d9b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17d9d:	mov    ecx,eax
   17d9f:	and    ecx,0x3
   17da2:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17da4:	lea    eax,[ebp-0x81c]
   17daa:	push   eax
   17dab:	lea    eax,[ebp-0x884]
   17db1:	push   eax
   17db2:	call   0x11c40
   17db7:	call   eax
   17db9:	mov    DWORD PTR [ebp-0x824],ebx
   17dbf:	xor    eax,eax
   17dc1:	lea    edi,[ebp-0x850]
   17dc7:	stos   DWORD PTR es:[edi],eax
   17dc8:	stos   DWORD PTR es:[edi],eax
   17dc9:	stos   DWORD PTR es:[edi],eax
   17dca:	stos   DWORD PTR es:[edi],eax
   17dcb:	stos   DWORD PTR es:[edi],eax
   17dcc:	mov    DWORD PTR [ebp-0x82c],ebx
   17dd2:	xor    eax,eax
   17dd4:	lea    edi,[ebp-0x828]
   17dda:	stos   DWORD PTR es:[edi],eax
   17ddb:	mov    DWORD PTR [ebp-0x854],0x18
   17de5:	mov    DWORD PTR [ebp-0x850],ebx
   17deb:	mov    DWORD PTR [ebp-0x848],0x240
   17df5:	lea    eax,[ebp-0x884]
   17dfb:	mov    DWORD PTR [ebp-0x84c],eax
   17e01:	mov    DWORD PTR [ebp-0x844],ebx
   17e07:	mov    DWORD PTR [ebp-0x840],ebx
   17e0d:	push   ebx
   17e0e:	push   ebx
   17e0f:	push   0x60
   17e11:	push   ebx
   17e12:	push   ebx
   17e13:	push   0x80
   17e18:	push   ebx
   17e19:	lea    eax,[ebp-0x82c]
   17e1f:	push   eax
   17e20:	lea    eax,[ebp-0x854]
   17e26:	push   eax
   17e27:	push   0x100002
   17e2c:	lea    eax,[ebp-0x824]
   17e32:	push   eax
   17e33:	call   0x11850
   17e38:	call   eax
   17e3a:	cmp    eax,ebx
   17e3c:	jge    0x17e45
   17e3e:	xor    al,al
   17e40:	jmp    0x17f4a
   17e45:	mov    DWORD PTR [ebp-0x4],ebx
   17e48:	xor    eax,eax
   17e4a:	lea    edi,[ebp-0x82c]
   17e50:	stos   DWORD PTR es:[edi],eax
   17e51:	stos   DWORD PTR es:[edi],eax
   17e52:	xor    edi,edi
   17e54:	mov    esi,0x10000
   17e59:	mov    DWORD PTR [ebp-0x834],edi
   17e5f:	mov    eax,DWORD PTR [ebp+0xc]
   17e62:	cmp    edi,eax
   17e64:	jae    0x17eaf
   17e66:	mov    DWORD PTR [ebp-0x83c],ebx
   17e6c:	mov    DWORD PTR [ebp-0x83c],edi
   17e72:	mov    DWORD PTR [ebp-0x838],ebx
   17e78:	sub    eax,edi
   17e7a:	cmp    eax,esi
   17e7c:	jb     0x17e80
   17e7e:	mov    eax,esi
   17e80:	push   ebx
   17e81:	push   ebx
   17e82:	push   eax
   17e83:	mov    eax,DWORD PTR [ebp-0x830]
   17e89:	add    eax,edi
   17e8b:	push   eax
   17e8c:	lea    eax,[ebp-0x82c]
   17e92:	push   eax
   17e93:	push   ebx
   17e94:	push   ebx
   17e95:	push   ebx
   17e96:	push   DWORD PTR [ebp-0x824]
   17e9c:	call   0x11af0
   17ea1:	call   eax
   17ea3:	cmp    eax,ebx
   17ea5:	jl     0x17f31
   17eab:	add    edi,esi
   17ead:	jmp    0x17e59
   17eaf:	mov    BYTE PTR [ebp-0x81d],0x1
   17eb6:	mov    DWORD PTR [ebp-0x87c],ebx
   17ebc:	push   0x9
   17ebe:	pop    ecx
   17ebf:	xor    eax,eax
   17ec1:	lea    edi,[ebp-0x878]
   17ec7:	rep stos DWORD PTR es:[edi],eax
   17ec9:	mov    eax,DWORD PTR [ebp+0x10]
   17ecc:	mov    DWORD PTR [ebp-0x86c],eax
   17ed2:	mov    ecx,DWORD PTR [ebp+0x14]
   17ed5:	mov    DWORD PTR [ebp-0x868],ecx
   17edb:	mov    DWORD PTR [ebp-0x874],eax
   17ee1:	mov    DWORD PTR [ebp-0x870],ecx
   17ee7:	mov    DWORD PTR [ebp-0x864],eax
   17eed:	mov    DWORD PTR [ebp-0x860],ecx
   17ef3:	mov    DWORD PTR [ebp-0x87c],eax
   17ef9:	mov    DWORD PTR [ebp-0x878],ecx
   17eff:	mov    DWORD PTR [ebp-0x85c],0x80
   17f09:	push   0x4
   17f0b:	push   0x28
   17f0d:	lea    eax,[ebp-0x87c]
   17f13:	push   eax
   17f14:	lea    eax,[ebp-0x82c]
   17f1a:	push   eax
   17f1b:	push   DWORD PTR [ebp-0x824]
   17f21:	call   0x11ac6
   17f26:	call   eax
   17f28:	jmp    0x17f31
   17f2a:	xor    eax,eax
   17f2c:	inc    eax
   17f2d:	ret    
   17f2e:	mov    esp,DWORD PTR [ebp-0x18]
   17f31:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17f38:	push   DWORD PTR [ebp-0x824]
   17f3e:	call   DWORD PTR ds:0x1ee60
   17f44:	mov    al,BYTE PTR [ebp-0x81d]
   17f4a:	call   0x1de28
   17f4f:	ret    0x10
   17f52:	int3   
   17f53:	int3   
   17f54:	int3   
   17f55:	int3   
   17f56:	int3   
   17f57:	int3   
   17f58:	push   0x874
   17f5d:	push   0x7e0e8
   17f62:	call   0x1dde0
   17f67:	xor    ebx,ebx
   17f69:	mov    BYTE PTR [ebp-0x81d],bl
   17f6f:	mov    BYTE PTR [ebp-0x81e],bl
   17f75:	mov    DWORD PTR [ebp-0x828],ebx
   17f7b:	mov    DWORD PTR [ebp-0x824],ebx
   17f81:	xor    eax,eax
   17f83:	mov    WORD PTR [ebp-0x81c],ax
   17f8a:	push   0x7fe
   17f8f:	push   ebx
   17f90:	lea    eax,[ebp-0x81a]
   17f96:	push   eax
   17f97:	call   0x1daae
   17f9c:	add    esp,0xc
   17f9f:	push   0x1e8de
   17fa4:	push   0x15
   17fa6:	push   0x1e7ea
   17fab:	call   0x16c64
   17fb0:	mov    edx,eax
   17fb2:	mov    cx,WORD PTR [eax]
   17fb5:	inc    eax
   17fb6:	inc    eax
   17fb7:	cmp    cx,bx
   17fba:	jne    0x17fb2
   17fbc:	sub    eax,edx
   17fbe:	lea    edi,[ebp-0x81c]
   17fc4:	dec    edi
   17fc5:	dec    edi
   17fc6:	mov    cx,WORD PTR [edi+0x2]
   17fca:	inc    edi
   17fcb:	inc    edi
   17fcc:	cmp    cx,bx
   17fcf:	jne    0x17fc6
   17fd1:	mov    ecx,eax
   17fd3:	mov    esi,edx
   17fd5:	shr    ecx,0x2
   17fd8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17fda:	mov    ecx,eax
   17fdc:	and    ecx,0x3
   17fdf:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17fe1:	mov    eax,0x7e448
   17fe6:	mov    edx,eax
   17fe8:	mov    cx,WORD PTR [eax]
   17feb:	inc    eax
   17fec:	inc    eax
   17fed:	cmp    cx,bx
   17ff0:	jne    0x17fe8
   17ff2:	sub    eax,edx
   17ff4:	lea    edi,[ebp-0x81c]
   17ffa:	dec    edi
   17ffb:	dec    edi
   17ffc:	mov    cx,WORD PTR [edi+0x2]
   18000:	inc    edi
   18001:	inc    edi
   18002:	cmp    cx,bx
   18005:	jne    0x17ffc
   18007:	mov    ecx,eax
   18009:	mov    esi,edx
   1800b:	shr    ecx,0x2
   1800e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18010:	mov    ecx,eax
   18012:	and    ecx,0x3
   18015:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   18017:	push   0x1e8b0
   1801c:	push   0x4
   1801e:	push   0x1e8a6
   18023:	call   0x16c64
   18028:	mov    edx,eax
   1802a:	mov    cx,WORD PTR [eax]
   1802d:	inc    eax
   1802e:	inc    eax
   1802f:	cmp    cx,bx
   18032:	jne    0x1802a
   18034:	sub    eax,edx
   18036:	lea    edi,[ebp-0x81c]
   1803c:	dec    edi
   1803d:	dec    edi
   1803e:	mov    cx,WORD PTR [edi+0x2]
   18042:	inc    edi
   18043:	inc    edi
   18044:	cmp    cx,bx
   18047:	jne    0x1803e
   18049:	mov    ecx,eax
   1804b:	mov    esi,edx
   1804d:	shr    ecx,0x2
   18050:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18052:	mov    ecx,eax
   18054:	and    ecx,0x3
   18057:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   18059:	lea    eax,[ebp-0x81c]
   1805f:	push   eax
   18060:	lea    eax,[ebp-0x85c]
   18066:	push   eax
   18067:	call   0x11c40
   1806c:	call   eax
   1806e:	xor    eax,eax
   18070:	lea    edi,[ebp-0x850]
   18076:	stos   DWORD PTR es:[edi],eax
   18077:	stos   DWORD PTR es:[edi],eax
   18078:	stos   DWORD PTR es:[edi],eax
   18079:	stos   DWORD PTR es:[edi],eax
   1807a:	stos   DWORD PTR es:[edi],eax
   1807b:	mov    DWORD PTR [ebp-0x834],ebx
   18081:	xor    eax,eax
   18083:	lea    edi,[ebp-0x830]
   18089:	stos   DWORD PTR es:[edi],eax
   1808a:	mov    DWORD PTR [ebp-0x82c],ebx
   18090:	mov    DWORD PTR [ebp-0x854],0x18
   1809a:	mov    DWORD PTR [ebp-0x850],ebx
   180a0:	mov    DWORD PTR [ebp-0x848],0x240
   180aa:	lea    eax,[ebp-0x85c]
   180b0:	mov    DWORD PTR [ebp-0x84c],eax
   180b6:	mov    DWORD PTR [ebp-0x844],ebx
   180bc:	mov    DWORD PTR [ebp-0x840],ebx
   180c2:	push   ebx
   180c3:	push   ebx
   180c4:	push   ebx
   180c5:	push   0x1
   180c7:	push   0x7
   180c9:	push   ebx
   180ca:	push   ebx
   180cb:	lea    eax,[ebp-0x834]
   180d1:	push   eax
   180d2:	lea    eax,[ebp-0x854]
   180d8:	push   eax
   180d9:	push   0x89
   180de:	lea    eax,[ebp-0x82c]
   180e4:	push   eax
   180e5:	call   0x11850
   180ea:	call   eax
   180ec:	cmp    eax,ebx
   180ee:	jge    0x180f7
   180f0:	xor    al,al
   180f2:	jmp    0x18216
   180f7:	mov    DWORD PTR [ebp-0x884],ebx
   180fd:	push   0x9
   180ff:	pop    ecx
   18100:	xor    eax,eax
   18102:	lea    edi,[ebp-0x880]
   18108:	rep stos DWORD PTR es:[edi],eax
   1810a:	mov    DWORD PTR [ebp-0x4],ebx
   1810d:	push   0x4
   1810f:	push   0x28
   18111:	lea    eax,[ebp-0x884]
   18117:	push   eax
   18118:	lea    eax,[ebp-0x834]
   1811e:	push   eax
   1811f:	push   DWORD PTR [ebp-0x82c]
   18125:	call   0x11b1a
   1812a:	call   eax
   1812c:	cmp    eax,ebx
   1812e:	jl     0x181ac
   18130:	mov    esi,0x5b51f
   18135:	push   esi
   18136:	call   0x10a66
   1813b:	mov    edi,eax
   1813d:	push   esi
   1813e:	push   0x1eea0
   18143:	push   edi
   18144:	call   0x1da96
   18149:	add    esp,0x10
   1814c:	push   0x25
   1814e:	push   0x7a3c0
   18153:	push   esi
   18154:	push   edi
   18155:	call   0x10aba
   1815a:	lea    eax,[ebp-0x828]
   18160:	push   eax
   18161:	push   esi
   18162:	push   edi
   18163:	lea    eax,[ebp-0x83c]
   18169:	push   eax
   1816a:	call   0x1a02e
   1816f:	mov    BYTE PTR [ebp-0x83c],bl
   18175:	mov    eax,DWORD PTR [ebp-0x838]
   1817b:	mov    DWORD PTR [ebp-0x824],eax
   18181:	cmp    eax,ebx
   18183:	je     0x1819e
   18185:	push   DWORD PTR [ebp-0x828]
   1818b:	push   eax
   1818c:	call   0x17a78
   18191:	test   al,al
   18193:	je     0x1819e
   18195:	mov    BYTE PTR [ebp-0x81d],0x1
   1819c:	jmp    0x181ac
   1819e:	mov    BYTE PTR [ebp-0x81d],0x1
   181a5:	mov    BYTE PTR [ebp-0x81e],0x1
   181ac:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   181b3:	jmp    0x181c5
   181b5:	xor    eax,eax
   181b7:	inc    eax
   181b8:	ret    
   181b9:	mov    esp,DWORD PTR [ebp-0x18]
   181bc:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   181c3:	xor    ebx,ebx
   181c5:	push   DWORD PTR [ebp-0x82c]
   181cb:	call   DWORD PTR ds:0x1ee60
   181d1:	cmp    BYTE PTR [ebp-0x81e],bl
   181d7:	je     0x181fc
   181d9:	push   DWORD PTR [ebp-0x880]
   181df:	push   DWORD PTR [ebp-0x884]
   181e5:	push   DWORD PTR [ebp-0x828]
   181eb:	push   DWORD PTR [ebp-0x824]
   181f1:	call   0x17cac
   181f6:	mov    BYTE PTR [ebp-0x81d],al
   181fc:	cmp    DWORD PTR [ebp-0x824],ebx
   18202:	je     0x18210
   18204:	push   DWORD PTR [ebp-0x824]
   1820a:	call   0x1da14
   1820f:	pop    ecx
   18210:	mov    al,BYTE PTR [ebp-0x81d]
   18216:	call   0x1de28
   1821b:	ret    
   1821c:	int3   
   1821d:	int3   
   1821e:	int3   
   1821f:	int3   
   18220:	int3   
   18221:	int3   
   18222:	mov    edi,edi
   18224:	push   ebp
   18225:	mov    ebp,esp
   18227:	sub    esp,0xbc
   1822d:	mov    eax,ds:0x7e528
   18232:	xor    eax,ebp
   18234:	mov    DWORD PTR [ebp-0x4],eax
   18237:	push   ebx
   18238:	push   edi
   18239:	push   0x1e936
   1823e:	push   0xb
   18240:	push   0x1e91e
   18245:	call   0x16c64
   1824a:	push   eax
   1824b:	lea    eax,[ebp-0xbc]
   18251:	push   eax
   18252:	call   0x11c40
   18257:	call   eax
   18259:	xor    eax,eax
   1825b:	lea    edi,[ebp-0xb0]
   18261:	stos   DWORD PTR es:[edi],eax
   18262:	stos   DWORD PTR es:[edi],eax
   18263:	stos   DWORD PTR es:[edi],eax
   18264:	stos   DWORD PTR es:[edi],eax
   18265:	xor    ebx,ebx
   18267:	push   ebx
   18268:	stos   DWORD PTR es:[edi],eax
   18269:	push   ebx
   1826a:	push   ebx
   1826b:	push   0x1
   1826d:	xor    eax,eax
   1826f:	push   0x7
   18271:	push   ebx
   18272:	mov    DWORD PTR [ebp-0x94],ebx
   18278:	lea    edi,[ebp-0x90]
   1827e:	stos   DWORD PTR es:[edi],eax
   1827f:	lea    eax,[ebp-0xbc]
   18285:	mov    DWORD PTR [ebp-0xac],eax
   1828b:	push   ebx
   1828c:	lea    eax,[ebp-0x94]
   18292:	push   eax
   18293:	lea    eax,[ebp-0xb4]
   18299:	push   eax
   1829a:	push   0x89
   1829f:	lea    eax,[ebp-0x8c]
   182a5:	push   eax
   182a6:	mov    DWORD PTR [ebp-0x8c],ebx
   182ac:	mov    DWORD PTR [ebp-0xb4],0x18
   182b6:	mov    DWORD PTR [ebp-0xb0],ebx
   182bc:	mov    DWORD PTR [ebp-0xa8],0x240
   182c6:	mov    DWORD PTR [ebp-0xa4],ebx
   182cc:	mov    DWORD PTR [ebp-0xa0],ebx
   182d2:	call   0x11850
   182d7:	call   eax
   182d9:	test   eax,eax
   182db:	jge    0x182e4
   182dd:	xor    al,al
   182df:	jmp    0x1839f
   182e4:	push   esi
   182e5:	mov    esi,0x20c
   182ea:	push   esi
   182eb:	call   0x10a66
   182f0:	pop    ecx
   182f1:	push   0x1
   182f3:	mov    edi,eax
   182f5:	push   esi
   182f6:	push   edi
   182f7:	lea    eax,[ebp-0x94]
   182fd:	push   eax
   182fe:	push   DWORD PTR [ebp-0x8c]
   18304:	cmp    edi,ebx
   18306:	setne  BYTE PTR [ebp-0x9c]
   1830d:	call   0x11826
   18312:	call   eax
   18314:	push   DWORD PTR [ebp-0x8c]
   1831a:	mov    esi,eax
   1831c:	call   DWORD PTR ds:0x1ee60
   18322:	cmp    esi,ebx
   18324:	pop    esi
   18325:	jge    0x18338
   18327:	cmp    BYTE PTR [ebp-0x9c],bl
   1832d:	je     0x182dd
   1832f:	push   edi
   18330:	call   0x1da14
   18335:	pop    ecx
   18336:	jmp    0x182dd
   18338:	push   0x7
   1833a:	push   0x1
   1833c:	lea    eax,[ebp-0x84]
   18342:	push   eax
   18343:	push   DWORD PTR [edi+0x8]
   18346:	call   0x10810
   1834b:	mov    ecx,0x7e408
   18350:	lea    eax,[ebp-0x84]
   18356:	mov    dx,WORD PTR [eax]
   18359:	cmp    dx,WORD PTR [ecx]
   1835c:	jne    0x1837c
   1835e:	cmp    dx,bx
   18361:	je     0x18378
   18363:	mov    dx,WORD PTR [eax+0x2]
   18367:	cmp    dx,WORD PTR [ecx+0x2]
   1836b:	jne    0x1837c
   1836d:	add    eax,0x4
   18370:	add    ecx,0x4
   18373:	cmp    dx,bx
   18376:	jne    0x18356
   18378:	xor    eax,eax
   1837a:	jmp    0x18381
   1837c:	sbb    eax,eax
   1837e:	sbb    eax,0xffffffff
   18381:	cmp    eax,ebx
   18383:	sete   BYTE PTR [ebp-0x85]
   1838a:	cmp    BYTE PTR [ebp-0x9c],bl
   18390:	je     0x18399
   18392:	push   edi
   18393:	call   0x1da14
   18398:	pop    ecx
   18399:	mov    al,BYTE PTR [ebp-0x85]
   1839f:	mov    ecx,DWORD PTR [ebp-0x4]
   183a2:	pop    edi
   183a3:	xor    ecx,ebp
   183a5:	pop    ebx
   183a6:	call   0x1da31
   183ab:	leave  
   183ac:	ret    
   183ad:	int3   
   183ae:	int3   
   183af:	int3   
   183b0:	int3   
   183b1:	int3   
   183b2:	push   0x0
   183b4:	push   0x19
   183b6:	call   0x109f0
   183bb:	test   edx,edx
   183bd:	jl     0x183f0
   183bf:	jg     0x183c6
   183c1:	cmp    eax,0x3
   183c4:	jbe    0x183f0
   183c6:	call   0x1a24a
   183cb:	push   0x1e9ce
   183d0:	push   0x34
   183d2:	push   0x1e964
   183d7:	call   0x16c64
   183dc:	mov    edx,0x7e6c0
   183e1:	movzx  ecx,WORD PTR [eax]
   183e4:	inc    eax
   183e5:	mov    WORD PTR [edx],cx
   183e8:	inc    eax
   183e9:	inc    edx
   183ea:	inc    edx
   183eb:	test   cx,cx
   183ee:	jne    0x183e1
   183f0:	ret    
   183f1:	int3   
   183f2:	int3   
   183f3:	int3   
   183f4:	int3   
   183f5:	int3   
   183f6:	mov    edi,edi
   183f8:	push   ebp
   183f9:	mov    ebp,esp
   183fb:	push   esi
   183fc:	mov    esi,ecx
   183fe:	lea    ecx,[esi+0x4]
   18401:	mov    DWORD PTR [esi],0x7a3f8
   18407:	mov    BYTE PTR [ecx+0x8],0x0
   1840b:	call   0x14668
   18410:	lea    ecx,[esi+0x14]
   18413:	mov    BYTE PTR [ecx+0x8],0x0
   18417:	call   0x144b6
   1841c:	mov    eax,DWORD PTR [ebp+0x8]
   1841f:	mov    DWORD PTR [esi+0x24],eax
   18422:	mov    eax,DWORD PTR [ebp+0xc]
   18425:	mov    DWORD PTR [esi+0x28],eax
   18428:	mov    eax,esi
   1842a:	pop    esi
   1842b:	pop    ebp
   1842c:	ret    0x8
   1842f:	int3   
   18430:	int3   
   18431:	int3   
   18432:	int3   
   18433:	int3   
   18434:	mov    edi,edi
   18436:	push   esi
   18437:	mov    esi,ecx
   18439:	lea    ecx,[esi+0x14]
   1843c:	mov    DWORD PTR [esi],0x7a3f8
   18442:	call   0x160c4
   18447:	lea    ecx,[esi+0x4]
   1844a:	pop    esi
   1844b:	jmp    0x16a72
   18450:	int3   
   18451:	int3   
   18452:	int3   
   18453:	int3   
   18454:	int3   
   18455:	int3   
   18456:	mov    edi,edi
   18458:	push   ebp
   18459:	mov    ebp,esp
   1845b:	sub    esp,0x124
   18461:	push   ebx
   18462:	push   esi
   18463:	push   edi
   18464:	mov    esi,ecx
   18466:	call   0x16f74
   1846b:	push   DWORD PTR [ebp+0x8]
   1846e:	lea    eax,[ebp-0x4]
   18471:	lea    edi,[esi+0x4]
   18474:	push   eax
   18475:	mov    ecx,edi
   18477:	call   0x13cf4
   1847c:	mov    ebx,DWORD PTR [ebp-0x4]
   1847f:	cmp    ebx,DWORD PTR [esi+0x8]
   18482:	je     0x184cd
   18484:	mov    eax,DWORD PTR [esi+0x18]
   18487:	lea    ecx,[ebp+0x8]
   1848a:	mov    DWORD PTR [ebp+0x8],eax
   1848d:	call   0x13cd4
   18492:	mov    edi,DWORD PTR [eax]
   18494:	lea    eax,[ebx+0x68]
   18497:	add    esi,0x14
   1849a:	inc    edi
   1849b:	push   eax
   1849c:	mov    ecx,esi
   1849e:	mov    DWORD PTR [ebp+0x8],edi
   184a1:	mov    DWORD PTR [ebp-0x4],eax
   184a4:	call   0x14dae
   184a9:	lea    eax,[ebp+0x8]
   184ac:	push   eax
   184ad:	lea    eax,[ebp-0xc]
   184b0:	push   eax
   184b1:	mov    ecx,esi
   184b3:	call   0x1609a
   184b8:	push   DWORD PTR [ebp+0xc]
   184bb:	lea    ecx,[ebx+0x18]
   184be:	call   0x12a3e
   184c3:	mov    eax,DWORD PTR [ebp-0x4]
   184c6:	mov    DWORD PTR [eax],edi
   184c8:	jmp    0x18562
   184cd:	lea    ecx,[ebp-0x64]
   184d0:	call   0x136ca
   184d5:	xor    eax,eax
   184d7:	cmp    DWORD PTR [esi+0x20],eax
   184da:	je     0x184ed
   184dc:	mov    eax,DWORD PTR [esi+0x18]
   184df:	lea    ecx,[ebp-0x4]
   184e2:	mov    DWORD PTR [ebp-0x4],eax
   184e5:	call   0x13cd4
   184ea:	mov    eax,DWORD PTR [eax]
   184ec:	inc    eax
   184ed:	push   DWORD PTR [ebp+0xc]
   184f0:	lea    ecx,[ebp-0x64]
   184f3:	mov    DWORD PTR [ebp-0x4],eax
   184f6:	mov    DWORD PTR [ebp-0x14],eax
   184f9:	call   0x12a3e
   184fe:	lea    eax,[ebp-0x64]
   18501:	push   eax
   18502:	push   DWORD PTR [ebp+0x8]
   18505:	lea    ecx,[ebp-0x124]
   1850b:	call   0x135aa
   18510:	lea    eax,[ebp-0x124]
   18516:	push   eax
   18517:	lea    ecx,[ebp-0xc4]
   1851d:	call   0x134d6
   18522:	lea    eax,[ebp-0xc4]
   18528:	push   eax
   18529:	lea    eax,[ebp-0xc]
   1852c:	push   eax
   1852d:	mov    ecx,edi
   1852f:	call   0x16a48
   18534:	lea    ecx,[ebp-0xc4]
   1853a:	call   0x12ac4
   1853f:	lea    ecx,[ebp-0x124]
   18545:	call   0x12ac4
   1854a:	lea    eax,[ebp-0x4]
   1854d:	push   eax
   1854e:	lea    eax,[ebp-0xc]
   18551:	push   eax
   18552:	lea    ecx,[esi+0x14]
   18555:	call   0x1609a
   1855a:	lea    ecx,[ebp-0x64]
   1855d:	call   0x11eb2
   18562:	pop    edi
   18563:	pop    esi
   18564:	pop    ebx
   18565:	leave  
   18566:	ret    0x8
   18569:	int3   
   1856a:	int3   
   1856b:	int3   
   1856c:	int3   
   1856d:	int3   
   1856e:	mov    edi,edi
   18570:	push   ebp
   18571:	mov    ebp,esp
   18573:	sub    esp,0x10
   18576:	call   0x1a1b8
   1857b:	test   al,al
   1857d:	jne    0x18587
   1857f:	mov    eax,DWORD PTR [ebp+0x8]
   18582:	jmp    0x1861b
   18587:	push   esi
   18588:	mov    esi,DWORD PTR [ebp+0x8]
   1858b:	push   0xffffffff
   1858d:	push   esi
   1858e:	lea    ecx,[ebp-0x8]
   18591:	call   0x11152
   18596:	mov    ecx,DWORD PTR ds:0x7fa50
   1859c:	lea    eax,[ebp-0x8]
   1859f:	push   eax
   185a0:	lea    eax,[ebp+0x8]
   185a3:	push   eax
   185a4:	call   0x141e4
   185a9:	mov    eax,DWORD PTR [ebp+0x8]
   185ac:	mov    ecx,DWORD PTR ds:0x7fa50
   185b2:	cmp    eax,DWORD PTR [ecx+0x4]
   185b5:	jne    0x185e6
   185b7:	lea    eax,[ebp-0x8]
   185ba:	push   eax
   185bb:	lea    ecx,[ebp-0x10]
   185be:	call   0x12b00
   185c3:	mov    ecx,DWORD PTR ds:0x7fa50
   185c9:	lea    eax,[ebp-0x10]
   185cc:	push   eax
   185cd:	lea    eax,[ebp-0x8]
   185d0:	push   eax
   185d1:	call   0x17026
   185d6:	mov    ecx,eax
   185d8:	call   0x12b22
   185dd:	push   DWORD PTR [ebp-0x10]
   185e0:	call   0x1da14
   185e5:	pop    ecx
   185e6:	mov    ecx,DWORD PTR ds:0x7fa50
   185ec:	lea    eax,[ebp-0x8]
   185ef:	push   eax
   185f0:	lea    eax,[ebp+0x8]
   185f3:	push   eax
   185f4:	call   0x141e4
   185f9:	mov    eax,DWORD PTR [ebp+0x8]
   185fc:	mov    ecx,DWORD PTR ds:0x7fa50
   18602:	cmp    eax,DWORD PTR [ecx+0x4]
   18605:	je     0x1860a
   18607:	mov    esi,DWORD PTR [eax+0x14]
   1860a:	call   0x1a1d4
   1860f:	push   DWORD PTR [ebp-0x8]
   18612:	call   0x1da14
   18617:	pop    ecx
   18618:	mov    eax,esi
   1861a:	pop    esi
   1861b:	leave  
   1861c:	ret    0x4
   1861f:	int3   
   18620:	int3   
   18621:	int3   
   18622:	int3   
   18623:	int3   
   18624:	mov    edi,edi
   18626:	push   ebp
   18627:	mov    ebp,esp
   18629:	push   esi
   1862a:	mov    esi,ecx
   1862c:	call   0x18434
   18631:	test   BYTE PTR [ebp+0x8],0x1
   18635:	je     0x1863e
   18637:	push   esi
   18638:	call   0x1da14
   1863d:	pop    ecx
   1863e:	mov    eax,esi
   18640:	pop    esi
   18641:	pop    ebp
   18642:	ret    0x4
   18645:	int3   
   18646:	int3   
   18647:	int3   
   18648:	int3   
   18649:	int3   
   1864a:	mov    edi,edi
   1864c:	push   ebp
   1864d:	mov    ebp,esp
   1864f:	push   esi
   18650:	push   DWORD PTR [ebp+0xc]
   18653:	mov    esi,ecx
   18655:	push   DWORD PTR [ebp+0x8]
   18658:	call   0x183f6
   1865d:	mov    eax,esi
   1865f:	pop    esi
   18660:	pop    ebp
   18661:	ret    0x8
   18664:	int3   
   18665:	int3   
   18666:	int3   
   18667:	int3   
   18668:	int3   
   18669:	int3   
   1866a:	push   0x33c
   1866f:	push   0x7e108
   18674:	call   0x1dde0
   18679:	mov    esi,DWORD PTR [ebp+0xc]
   1867c:	mov    DWORD PTR [ebp-0x32c],esi
   18682:	call   DWORD PTR ds:0x1ee00
   18688:	xor    ebx,ebx
   1868a:	cmp    BYTE PTR [ebp+0x10],bl
   1868d:	jne    0x186cb
   1868f:	push   esi
   18690:	mov    ecx,DWORD PTR ds:0x7e558
   18696:	call   0x15e3e
   1869b:	mov    edi,eax
   1869d:	push   esi
   1869e:	mov    ecx,DWORD PTR ds:0x7e558
   186a4:	call   0x16676
   186a9:	mov    eax,edi
   186ab:	dec    eax
   186ac:	je     0x186c0
   186ae:	dec    eax
   186af:	je     0x186bc
   186b1:	dec    eax
   186b2:	jne    0x188a5
   186b8:	push   0xa
   186ba:	jmp    0x186c1
   186bc:	push   0x2
   186be:	jmp    0x186c1
   186c0:	push   ebx
   186c1:	call   0x10fd8
   186c6:	jmp    0x188a5
   186cb:	mov    DWORD PTR [ebp-0x320],ebx
   186d1:	xor    eax,eax
   186d3:	lea    edi,[ebp-0x326]
   186d9:	stos   DWORD PTR es:[edi],eax
   186da:	stos   WORD PTR es:[edi],ax
   186dc:	xor    eax,eax
   186de:	mov    WORD PTR [ebp-0x21c],ax
   186e5:	push   0x1fc
   186ea:	push   ebx
   186eb:	lea    eax,[ebp-0x21a]
   186f1:	push   eax
   186f2:	call   0x1daae
   186f7:	add    esp,0xc
   186fa:	lea    eax,[ebp-0x21c]
   18700:	mov    DWORD PTR [ebp-0x324],eax
   18706:	xor    eax,eax
   18708:	mov    WORD PTR [ebp-0x328],ax
   1870f:	mov    eax,0x1fe
   18714:	mov    WORD PTR [ebp-0x326],ax
   1871b:	mov    DWORD PTR [ebp-0x34c],0x18
   18725:	mov    DWORD PTR [ebp-0x348],ebx
   1872b:	mov    DWORD PTR [ebp-0x340],0x200
   18735:	mov    DWORD PTR [ebp-0x344],ebx
   1873b:	mov    DWORD PTR [ebp-0x33c],ebx
   18741:	mov    DWORD PTR [ebp-0x338],ebx
   18747:	mov    DWORD PTR [ebp-0x334],esi
   1874d:	mov    DWORD PTR [ebp-0x330],ebx
   18753:	lea    eax,[ebp-0x334]
   18759:	push   eax
   1875a:	lea    eax,[ebp-0x34c]
   18760:	push   eax
   18761:	push   0x1f0fff
   18766:	lea    eax,[ebp-0x320]
   1876c:	push   eax
   1876d:	call   0x11682
   18772:	call   eax
   18774:	test   eax,eax
   18776:	jl     0x188a5
   1877c:	lea    eax,[ebp-0x328]
   18782:	push   eax
   18783:	push   DWORD PTR [ebp-0x320]
   18789:	call   0x11f7e
   1878e:	cmp    eax,ebx
   18790:	jl     0x18899
   18796:	movzx  eax,WORD PTR [ebp-0x328]
   1879d:	shr    eax,1
   1879f:	xor    ecx,ecx
   187a1:	mov    WORD PTR [ebp+eax*2-0x21c],cx
   187a9:	push   DWORD PTR [ebp-0x320]
   187af:	call   0x12010
   187b4:	lea    eax,[ebp-0x21c]
   187ba:	push   eax
   187bb:	call   0x10db6
   187c0:	cmp    eax,ebx
   187c2:	je     0x187e7
   187c4:	push   eax
   187c5:	push   esi
   187c6:	mov    ecx,DWORD PTR ds:0x7e558
   187cc:	call   0x16c22
   187d1:	push   DWORD PTR [ebp-0x320]
   187d7:	push   DWORD PTR [ebp-0x320]
   187dd:	call   0x12010
   187e2:	push   eax
   187e3:	push   esi
   187e4:	push   ebx
   187e5:	jmp    0x18865
   187e7:	push   0x1ea20
   187ec:	push   0x9
   187ee:	push   0x1ea0c
   187f3:	call   0x16c64
   187f8:	push   eax
   187f9:	lea    eax,[ebp-0x328]
   187ff:	push   eax
   18800:	call   0x10df8
   18805:	test   al,al
   18807:	je     0x1886c
   18809:	cmp    DWORD PTR ds:0x7fa2c,ebx
   1880f:	jne    0x18842
   18811:	mov    DWORD PTR ds:0x7fa2c,0x1
   1881b:	mov    DWORD PTR [ebp-0x4],ebx
   1881e:	call   0x17f58
   18823:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1882a:	jmp    0x18842
   1882c:	xor    eax,eax
   1882e:	inc    eax
   1882f:	ret    
   18830:	mov    esp,DWORD PTR [ebp-0x18]
   18833:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1883a:	xor    ebx,ebx
   1883c:	mov    esi,DWORD PTR [ebp-0x32c]
   18842:	cmp    DWORD PTR ds:0x7efac,ebx
   18848:	jne    0x18850
   1884a:	mov    DWORD PTR ds:0x7efac,esi
   18850:	push   DWORD PTR [ebp-0x320]
   18856:	push   DWORD PTR [ebp-0x320]
   1885c:	call   0x12010
   18861:	push   eax
   18862:	push   esi
   18863:	push   0x1
   18865:	call   0x137e2
   1886a:	jmp    0x18899
   1886c:	lea    eax,[ebp-0x31c]
   18872:	push   eax
   18873:	call   0x10f88
   18878:	test   al,al
   1887a:	je     0x18899
   1887c:	lea    eax,[ebp-0x31c]
   18882:	push   eax
   18883:	lea    eax,[ebp-0x328]
   18889:	push   eax
   1888a:	call   0x10df8
   1888f:	test   al,al
   18891:	je     0x18899
   18893:	push   esi
   18894:	call   0x12040
   18899:	push   DWORD PTR [ebp-0x320]
   1889f:	call   DWORD PTR ds:0x1ee60
   188a5:	call   0x1de28
   188aa:	ret    0xc
   188ad:	int3   
   188ae:	int3   
   188af:	int3   
   188b0:	int3   
   188b1:	int3   
   188b2:	mov    edi,edi
   188b4:	push   ebp
   188b5:	mov    ebp,esp
   188b7:	push   ecx
   188b8:	cli    
   188b9:	mov    eax,cr0
   188bc:	mov    DWORD PTR [ebp-0x4],eax
   188bf:	nop
   188c0:	and    eax,0xfffeffff
   188c5:	mov    cr0,eax
   188c8:	push   0x17738
   188cd:	push   DWORD PTR ds:0x7eef4
   188d3:	call   0x1987c
   188d8:	push   0x0
   188da:	push   0x1866a
   188df:	mov    ds:0x7eef8,eax
   188e4:	call   0x11700
   188e9:	call   eax
   188eb:	push   0x17624
   188f0:	call   0x116ac
   188f5:	call   eax
   188f7:	mov    eax,DWORD PTR [ebp-0x4]
   188fa:	mov    cr0,eax
   188fd:	sti    
   188fe:	leave  
   188ff:	ret    
   18900:	int3   
   18901:	int3   
   18902:	int3   
   18903:	int3   
   18904:	int3   
   18905:	int3   
   18906:	mov    edi,edi
   18908:	push   ebp
   18909:	mov    ebp,esp
   1890b:	sub    esp,0x50
   1890e:	push   ebx
   1890f:	mov    ebx,DWORD PTR [ebp+0x8]
   18912:	push   esi
   18913:	test   bl,0x20
   18916:	je     0x18959
   18918:	push   DWORD PTR [ebp+0x30]
   1891b:	mov    esi,DWORD PTR ds:0x7eef0
   18921:	push   DWORD PTR [ebp+0x2c]
   18924:	lea    ecx,[ebp-0x50]
   18927:	push   DWORD PTR [ebp+0x28]
   1892a:	push   DWORD PTR [ebp+0x24]
   1892d:	push   DWORD PTR [ebp+0x20]
   18930:	push   DWORD PTR [ebp+0x1c]
   18933:	push   DWORD PTR [ebp+0x14]
   18936:	push   DWORD PTR [ebp+0x10]
   18939:	push   DWORD PTR [ebp+0xc]
   1893c:	call   0x1372e
   18941:	push   eax
   18942:	push   DWORD PTR [ebp+0xc]
   18945:	mov    ecx,esi
   18947:	call   0x18456
   1894c:	lea    ecx,[ebp-0x50]
   1894f:	call   0x11eb2
   18954:	jmp    0x18a9e
   18959:	push   DWORD PTR [ebp+0xc]
   1895c:	mov    ecx,DWORD PTR ds:0x7eee8
   18962:	call   0x16140
   18967:	test   eax,eax
   18969:	jne    0x18977
   1896b:	test   bl,0x1
   1896e:	jne    0x18977
   18970:	xor    al,al
   18972:	jmp    0x18aa0
   18977:	push   DWORD PTR [ebp+0xc]
   1897a:	mov    ecx,DWORD PTR ds:0x7eee8
   18980:	call   0x16e6a
   18985:	mov    esi,eax
   18987:	test   bl,0x1
   1898a:	je     0x189d4
   1898c:	mov    eax,DWORD PTR [ebp+0x28]
   1898f:	push   DWORD PTR [ebp+0xc]
   18992:	mov    ecx,esi
   18994:	mov    DWORD PTR [esi+0x2c],eax
   18997:	call   0x129b0
   1899c:	push   DWORD PTR [ebp+0x10]
   1899f:	lea    ecx,[esi+0x8]
   189a2:	call   0x129b0
   189a7:	mov    eax,DWORD PTR [ebp+0x14]
   189aa:	push   DWORD PTR [ebp+0x18]
   189ad:	lea    ecx,[esi+0x14]
   189b0:	mov    DWORD PTR [esi+0x10],eax
   189b3:	call   0x129b0
   189b8:	push   DWORD PTR [ebp+0x1c]
   189bb:	lea    ecx,[esi+0x1c]
   189be:	call   0x129b0
   189c3:	push   DWORD PTR [ebp+0x20]
   189c6:	lea    ecx,[esi+0x24]
   189c9:	call   0x129b0
   189ce:	mov    eax,DWORD PTR [ebp+0x2c]
   189d1:	mov    DWORD PTR [esi+0x30],eax
   189d4:	mov    DWORD PTR [ebp+0x28],ebx
   189d7:	and    DWORD PTR [ebp+0x28],0x2
   189db:	je     0x189eb
   189dd:	mov    eax,DWORD PTR [ebp+0x30]
   189e0:	mov    ecx,DWORD PTR [eax]
   189e2:	mov    DWORD PTR [esi+0x38],ecx
   189e5:	mov    eax,DWORD PTR [eax+0x4]
   189e8:	mov    DWORD PTR [esi+0x3c],eax
   189eb:	mov    DWORD PTR [ebp+0x10],ebx
   189ee:	and    DWORD PTR [ebp+0x10],0x4
   189f2:	je     0x18a02
   189f4:	mov    eax,DWORD PTR [ebp+0x34]
   189f7:	mov    ecx,DWORD PTR [eax]
   189f9:	mov    DWORD PTR [esi+0x40],ecx
   189fc:	mov    eax,DWORD PTR [eax+0x4]
   189ff:	mov    DWORD PTR [esi+0x44],eax
   18a02:	test   bl,0x10
   18a05:	je     0x18a9e
   18a0b:	cmp    DWORD PTR [esi+0x18],0x0
   18a0f:	jbe    0x18a9e
   18a15:	mov    eax,ds:0x7eee8
   18a1a:	mov    eax,DWORD PTR [eax+0x4]
   18a1d:	push   edi
   18a1e:	mov    edi,DWORD PTR [eax]
   18a20:	mov    DWORD PTR [ebp+0x14],edi
   18a23:	cmp    edi,eax
   18a25:	je     0x18a9d
   18a27:	push   DWORD PTR [ebp+0xc]
   18a2a:	lea    ebx,[edi+0x10]
   18a2d:	push   ebx
   18a2e:	call   0x197c4
   18a33:	test   al,al
   18a35:	je     0x18a88
   18a37:	lea    eax,[esi+0x14]
   18a3a:	push   eax
   18a3b:	add    edi,0x2c
   18a3e:	push   edi
   18a3f:	call   0x197b4
   18a44:	test   al,al
   18a46:	je     0x18a88
   18a48:	cmp    DWORD PTR [ebp+0x28],0x0
   18a4c:	je     0x18a68
   18a4e:	mov    ecx,DWORD PTR ds:0x7eee8
   18a54:	push   ebx
   18a55:	call   0x16e6a
   18a5a:	mov    ecx,DWORD PTR [ebp+0x30]
   18a5d:	mov    edx,DWORD PTR [ecx]
   18a5f:	mov    DWORD PTR [eax+0x38],edx
   18a62:	mov    ecx,DWORD PTR [ecx+0x4]
   18a65:	mov    DWORD PTR [eax+0x3c],ecx
   18a68:	cmp    DWORD PTR [ebp+0x10],0x0
   18a6c:	je     0x18a88
   18a6e:	mov    ecx,DWORD PTR ds:0x7eee8
   18a74:	push   ebx
   18a75:	call   0x16e6a
   18a7a:	mov    ecx,DWORD PTR [ebp+0x34]
   18a7d:	mov    edx,DWORD PTR [ecx]
   18a7f:	mov    DWORD PTR [eax+0x40],edx
   18a82:	mov    ecx,DWORD PTR [ecx+0x4]
   18a85:	mov    DWORD PTR [eax+0x44],ecx
   18a88:	lea    ecx,[ebp+0x14]
   18a8b:	call   0x13870
   18a90:	mov    edi,DWORD PTR [ebp+0x14]
   18a93:	mov    eax,ds:0x7eee8
   18a98:	cmp    edi,DWORD PTR [eax+0x4]
   18a9b:	jne    0x18a27
   18a9d:	pop    edi
   18a9e:	mov    al,0x1
   18aa0:	pop    esi
   18aa1:	pop    ebx
   18aa2:	leave  
   18aa3:	ret    0x30
   18aa6:	int3   
   18aa7:	int3   
   18aa8:	int3   
   18aa9:	int3   
   18aaa:	int3   
   18aab:	int3   
   18aac:	push   0x4c
   18aae:	push   0x7e128
   18ab3:	call   0x1dad4
   18ab8:	xor    esi,esi
   18aba:	push   esi
   18abb:	push   esi
   18abc:	push   esi
   18abd:	push   esi
   18abe:	push   0x7e560
   18ac3:	call   DWORD PTR ds:0x1ee28
   18ac9:	cmp    eax,esi
   18acb:	jge    0x18adc
   18acd:	mov    eax,DWORD PTR [ebp+0x8]
   18ad0:	mov    DWORD PTR [eax+0x8],0x4
   18ad7:	jmp    0x18c11
   18adc:	mov    DWORD PTR [ebp-0x4],esi
   18adf:	or     ebx,0xffffffff
   18ae2:	push   ebx
   18ae3:	mov    esi,DWORD PTR [ebp+0x8]
   18ae6:	lea    eax,[esi+0x28]
   18ae9:	push   eax
   18aea:	lea    ecx,[ebp-0x44]
   18aed:	call   0x1296e
   18af2:	mov    edi,DWORD PTR [ebp-0x40]
   18af5:	inc    edi
   18af6:	push   ebx
   18af7:	lea    eax,[edi+esi*1+0x28]
   18afb:	push   eax
   18afc:	lea    ecx,[ebp-0x3c]
   18aff:	call   0x1296e
   18b04:	mov    eax,DWORD PTR [ebp-0x38]
   18b07:	lea    edi,[edi+eax*1+0x1]
   18b0b:	mov    eax,DWORD PTR [edi+esi*1+0x28]
   18b0f:	mov    DWORD PTR [ebp-0x1c],eax
   18b12:	add    edi,0x4
   18b15:	push   ebx
   18b16:	lea    eax,[edi+esi*1+0x28]
   18b1a:	push   eax
   18b1b:	lea    ecx,[ebp-0x34]
   18b1e:	call   0x1296e
   18b23:	mov    eax,DWORD PTR [ebp-0x30]
   18b26:	lea    edi,[edi+eax*1+0x1]
   18b2a:	push   ebx
   18b2b:	lea    eax,[edi+esi*1+0x28]
   18b2f:	push   eax
   18b30:	lea    ecx,[ebp-0x2c]
   18b33:	call   0x1296e
   18b38:	mov    eax,DWORD PTR [ebp-0x28]
   18b3b:	lea    edi,[edi+eax*1+0x1]
   18b3f:	push   ebx
   18b40:	lea    eax,[edi+esi*1+0x28]
   18b44:	push   eax
   18b45:	lea    ecx,[ebp-0x24]
   18b48:	call   0x1296e
   18b4d:	mov    eax,DWORD PTR [ebp-0x20]
   18b50:	lea    eax,[edi+eax*1+0x1]
   18b54:	push   ebx
   18b55:	lea    eax,[eax+esi*1+0x28]
   18b59:	push   eax
   18b5a:	lea    ecx,[ebp-0x5c]
   18b5d:	call   0x1296e
   18b62:	mov    eax,DWORD PTR [esi+0xc]
   18b65:	mov    ecx,DWORD PTR [esi+0x18]
   18b68:	mov    DWORD PTR [ebp-0x54],ecx
   18b6b:	mov    ecx,DWORD PTR [esi+0x1c]
   18b6e:	mov    DWORD PTR [ebp-0x50],ecx
   18b71:	mov    ecx,DWORD PTR [esi+0x20]
   18b74:	mov    DWORD PTR [ebp-0x4c],ecx
   18b77:	mov    ecx,DWORD PTR [esi+0x24]
   18b7a:	mov    DWORD PTR [ebp-0x48],ecx
   18b7d:	mov    ecx,DWORD PTR [esi+0x10]
   18b80:	lea    edx,[ebp-0x4c]
   18b83:	push   edx
   18b84:	lea    edx,[ebp-0x54]
   18b87:	push   edx
   18b88:	push   ecx
   18b89:	push   eax
   18b8a:	lea    eax,[ebp-0x5c]
   18b8d:	push   eax
   18b8e:	lea    eax,[ebp-0x24]
   18b91:	push   eax
   18b92:	lea    eax,[ebp-0x2c]
   18b95:	push   eax
   18b96:	lea    eax,[ebp-0x34]
   18b99:	push   eax
   18b9a:	push   DWORD PTR [ebp-0x1c]
   18b9d:	lea    eax,[ebp-0x3c]
   18ba0:	push   eax
   18ba1:	lea    eax,[ebp-0x44]
   18ba4:	push   eax
   18ba5:	push   DWORD PTR [esi+0x4]
   18ba8:	call   0x18906
   18bad:	xor    ecx,ecx
   18baf:	test   al,al
   18bb1:	sete   cl
   18bb4:	mov    DWORD PTR [esi+0x8],ecx
   18bb7:	push   DWORD PTR [ebp-0x5c]
   18bba:	call   0x1da14
   18bbf:	push   DWORD PTR [ebp-0x24]
   18bc2:	call   0x1da14
   18bc7:	push   DWORD PTR [ebp-0x2c]
   18bca:	call   0x1da14
   18bcf:	push   DWORD PTR [ebp-0x34]
   18bd2:	call   0x1da14
   18bd7:	push   DWORD PTR [ebp-0x3c]
   18bda:	call   0x1da14
   18bdf:	push   DWORD PTR [ebp-0x44]
   18be2:	call   0x1da14
   18be7:	add    esp,0x18
   18bea:	jmp    0x18bfd
   18bec:	xor    eax,eax
   18bee:	inc    eax
   18bef:	ret    
   18bf0:	mov    esp,DWORD PTR [ebp-0x18]
   18bf3:	mov    eax,DWORD PTR [ebp+0x8]
   18bf6:	mov    DWORD PTR [eax+0x8],0x4
   18bfd:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   18c04:	push   0x0
   18c06:	push   0x7e560
   18c0b:	call   DWORD PTR ds:0x1ee24
   18c11:	call   0x1db19
   18c16:	ret    0x4
   18c19:	int3   
   18c1a:	int3   
   18c1b:	int3   
   18c1c:	int3   
   18c1d:	int3   
   18c1e:	push   0x2c
   18c20:	push   0x7e148
   18c25:	call   0x1dad4
   18c2a:	xor    edi,edi
   18c2c:	mov    DWORD PTR [ebp-0x24],edi
   18c2f:	mov    ebx,DWORD PTR [ebp+0xc]
   18c32:	mov    DWORD PTR [ebx+0x18],edi
   18c35:	mov    DWORD PTR [ebx+0x1c],edi
   18c38:	mov    eax,DWORD PTR [ebx+0x60]
   18c3b:	cmp    BYTE PTR [eax],0xe
   18c3e:	jne    0x190de
   18c44:	mov    eax,DWORD PTR [eax+0xc]
   18c47:	mov    DWORD PTR [ebx+0x1c],0x84c
   18c4e:	mov    ecx,0x22c068
   18c53:	cmp    eax,ecx
   18c55:	ja     0x18f8f
   18c5b:	je     0x18f80
   18c61:	add    ecx,0xffffffd0
   18c64:	cmp    eax,ecx
   18c66:	ja     0x18d83
   18c6c:	je     0x18d6a
   18c72:	sub    eax,0x22c020
   18c77:	je     0x18d34
   18c7d:	push   0x4
   18c7f:	pop    esi
   18c80:	sub    eax,esi
   18c82:	je     0x18cfe
   18c84:	sub    eax,esi
   18c86:	je     0x18ce3
   18c88:	sub    eax,esi
   18c8a:	je     0x18cd6
   18c8c:	sub    eax,esi
   18c8e:	je     0x18ca5
   18c90:	sub    eax,esi
   18c92:	jne    0x1907e
   18c98:	push   DWORD PTR [ebx+0xc]
   18c9b:	call   0x1795e
   18ca0:	jmp    0x190db
   18ca5:	mov    esi,DWORD PTR [ebx+0xc]
   18ca8:	mov    eax,DWORD PTR [esi]
   18caa:	add    eax,0x28
   18cad:	mov    DWORD PTR [ebx+0x1c],eax
   18cb0:	push   0xffffffff
   18cb2:	lea    eax,[esi+0x28]
   18cb5:	push   eax
   18cb6:	lea    ecx,[ebp-0x34]
   18cb9:	call   0x110ae
   18cbe:	push   esi
   18cbf:	lea    eax,[ebp-0x34]
   18cc2:	push   eax
   18cc3:	call   0x16810
   18cc8:	push   DWORD PTR [ebp-0x34]
   18ccb:	call   0x1da14
   18cd0:	pop    ecx
   18cd1:	jmp    0x190de
   18cd6:	push   DWORD PTR [ebx+0xc]
   18cd9:	call   0x18aac
   18cde:	jmp    0x190db
   18ce3:	mov    ecx,DWORD PTR ds:0x7eee8
   18ce9:	call   0x16aee
   18cee:	mov    ecx,DWORD PTR ds:0x7e5bc
   18cf4:	call   0x16baa
   18cf9:	jmp    0x190de
   18cfe:	mov    eax,DWORD PTR [ebx+0xc]
   18d01:	mov    DWORD PTR [ebx+0x1c],0x10
   18d08:	mov    ecx,DWORD PTR [eax]
   18d0a:	cmp    ecx,edi
   18d0c:	jl     0x190de
   18d12:	cmp    ecx,0x6
   18d15:	jge    0x190de
   18d1b:	mov    edx,DWORD PTR [eax+0x8]
   18d1e:	mov    DWORD PTR [ecx*8+0x7ef38],edx
   18d25:	mov    eax,DWORD PTR [eax+0xc]
   18d28:	mov    DWORD PTR [ecx*8+0x7ef3c],eax
   18d2f:	jmp    0x190de
   18d34:	mov    eax,DWORD PTR [ebx+0xc]
   18d37:	mov    DWORD PTR [ebx+0x1c],0x10
   18d3e:	mov    ecx,DWORD PTR [eax]
   18d40:	cmp    ecx,edi
   18d42:	jl     0x190de
   18d48:	cmp    ecx,0x6
   18d4b:	jge    0x190de
   18d51:	mov    edx,DWORD PTR [ecx*8+0x7ef38]
   18d58:	mov    DWORD PTR [eax+0x8],edx
   18d5b:	mov    ecx,DWORD PTR [ecx*8+0x7ef3c]
   18d62:	mov    DWORD PTR [eax+0xc],ecx
   18d65:	jmp    0x190de
   18d6a:	mov    eax,DWORD PTR [ebx+0xc]
   18d6d:	mov    ecx,DWORD PTR [eax]
   18d6f:	add    ecx,0xc
   18d72:	mov    DWORD PTR [ebx+0x1c],ecx
   18d75:	push   eax
   18d76:	push   DWORD PTR [eax+0x4]
   18d79:	call   0x15f80
   18d7e:	jmp    0x190de
   18d83:	sub    eax,0x22c03c
   18d88:	je     0x18efc
   18d8e:	sub    eax,0x10
   18d91:	je     0x18ef2
   18d97:	push   0x4
   18d99:	pop    esi
   18d9a:	sub    eax,esi
   18d9c:	je     0x18df2
   18d9e:	sub    eax,0xc
   18da1:	je     0x18dda
   18da3:	sub    eax,esi
   18da5:	je     0x18dbc
   18da7:	sub    eax,esi
   18da9:	jne    0x1907e
   18daf:	push   DWORD PTR [ebx+0xc]
   18db2:	call   0x1285e
   18db7:	jmp    0x190db
   18dbc:	mov    DWORD PTR [ebx+0x1c],0x8
   18dc3:	mov    ebx,DWORD PTR [ebx+0xc]
   18dc6:	mov    eax,ds:0x7ef1c
   18dcb:	mov    DWORD PTR [ebx],eax
   18dcd:	mov    eax,ds:0x7ef20
   18dd2:	mov    DWORD PTR [ebx+0x4],eax
   18dd5:	jmp    0x190de
   18dda:	mov    eax,DWORD PTR [ebx+0xc]
   18ddd:	mov    ecx,DWORD PTR [eax]
   18ddf:	mov    DWORD PTR ds:0x7ef1c,ecx
   18de5:	mov    eax,DWORD PTR [eax+0x4]
   18de8:	mov    ds:0x7ef20,eax
   18ded:	jmp    0x190db
   18df2:	mov    DWORD PTR [ebx+0x1c],edi
   18df5:	mov    esi,DWORD PTR [ebx+0xc]
   18df8:	mov    DWORD PTR [ebp-0x20],esi
   18dfb:	push   0xffffffff
   18dfd:	push   0x1def0
   18e02:	lea    ecx,[ebp-0x2c]
   18e05:	call   0x110ae
   18e0a:	xor    edi,edi
   18e0c:	inc    edi
   18e0d:	mov    DWORD PTR [esi+0x8],edi
   18e10:	xor    eax,eax
   18e12:	push   eax
   18e13:	push   eax
   18e14:	push   eax
   18e15:	push   eax
   18e16:	push   0x7e560
   18e1b:	call   DWORD PTR ds:0x1ee28
   18e21:	test   eax,eax
   18e23:	jge    0x18e2d
   18e25:	push   DWORD PTR [ebp-0x2c]
   18e28:	jmp    0x18ccb
   18e2d:	and    DWORD PTR [ebp-0x4],0x0
   18e31:	mov    DWORD PTR [ebp-0x4],edi
   18e34:	mov    eax,DWORD PTR [esi]
   18e36:	add    eax,0x28
   18e39:	mov    DWORD PTR [ebx+0x1c],eax
   18e3c:	mov    eax,ds:0x7eee8
   18e41:	mov    ebx,DWORD PTR [eax+0x4]
   18e44:	mov    eax,DWORD PTR [ebx]
   18e46:	mov    DWORD PTR [ebp+0xc],eax
   18e49:	and    DWORD PTR [ebp-0x1c],0x0
   18e4d:	mov    edi,DWORD PTR [esi+0x28]
   18e50:	cmp    DWORD PTR [ebp-0x1c],edi
   18e53:	jge    0x18e67
   18e55:	cmp    DWORD PTR [ebp+0xc],ebx
   18e58:	je     0x18e67
   18e5a:	lea    ecx,[ebp+0xc]
   18e5d:	call   0x13870
   18e62:	inc    DWORD PTR [ebp-0x1c]
   18e65:	jmp    0x18e50
   18e67:	mov    eax,DWORD PTR [ebp+0xc]
   18e6a:	cmp    eax,ebx
   18e6c:	je     0x18e80
   18e6e:	and    DWORD PTR [esi+0x8],0x0
   18e72:	add    eax,0x10
   18e75:	push   eax
   18e76:	lea    ecx,[ebp-0x2c]
   18e79:	call   0x129b0
   18e7e:	jmp    0x18e87
   18e80:	mov    DWORD PTR [esi+0x8],0x1
   18e87:	and    DWORD PTR [esi+0x4],0x0
   18e8b:	and    DWORD PTR [ebp-0x4],0x0
   18e8f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   18e96:	call   0x18ee4
   18e9b:	cmp    DWORD PTR [esi+0x8],0x0
   18e9f:	jne    0x18e25
   18ea1:	push   esi
   18ea2:	lea    eax,[ebp-0x2c]
   18ea5:	push   eax
   18ea6:	call   0x16810
   18eab:	jmp    0x18e25
   18eb0:	xor    eax,eax
   18eb2:	inc    eax
   18eb3:	ret    
   18eb4:	mov    esp,DWORD PTR [ebp-0x18]
   18eb7:	mov    eax,DWORD PTR [ebp-0x20]
   18eba:	mov    DWORD PTR [eax+0x8],0x4
   18ec1:	push   DWORD PTR [ebp-0x2c]
   18ec4:	call   0x1da14
   18ec9:	push   0xfffffffe
   18ecb:	lea    eax,[ebp-0x10]
   18ece:	push   eax
   18ecf:	push   0x7e528
   18ed4:	call   0x1dc9c
   18ed9:	add    esp,0x10
   18edc:	jmp    0x190de
   18ee1:	mov    esi,DWORD PTR [ebp-0x20]
   18ee4:	push   0x0
   18ee6:	push   0x7e560
   18eeb:	call   DWORD PTR ds:0x1ee24
   18ef1:	ret    
   18ef2:	call   0x12388
   18ef7:	jmp    0x190de
   18efc:	mov    eax,DWORD PTR [ebx+0xc]
   18eff:	mov    ecx,DWORD PTR ds:0x7e404
   18f05:	mov    esi,eax
   18f07:	sub    esi,ecx
   18f09:	push   0x2
   18f0b:	pop    edi
   18f0c:	movzx  edx,WORD PTR [ecx]
   18f0f:	mov    WORD PTR [esi+ecx*1],dx
   18f13:	add    ecx,edi
   18f15:	test   dx,dx
   18f18:	jne    0x18f0c
   18f1a:	mov    ecx,0x7e448
   18f1f:	lea    esi,[eax+0x50]
   18f22:	sub    esi,ecx
   18f24:	movzx  edx,WORD PTR [ecx]
   18f27:	mov    WORD PTR [esi+ecx*1],dx
   18f2b:	add    ecx,edi
   18f2d:	test   dx,dx
   18f30:	jne    0x18f24
   18f32:	mov    ecx,0x7e408
   18f37:	lea    esi,[eax+0x90]
   18f3d:	sub    esi,ecx
   18f3f:	movzx  edx,WORD PTR [ecx]
   18f42:	mov    WORD PTR [esi+ecx*1],dx
   18f46:	add    ecx,edi
   18f48:	test   dx,dx
   18f4b:	jne    0x18f3f
   18f4d:	mov    ecx,0x7e488
   18f52:	lea    esi,[eax+0xd0]
   18f58:	sub    esi,ecx
   18f5a:	movzx  edx,WORD PTR [ecx]
   18f5d:	mov    WORD PTR [esi+ecx*1],dx
   18f61:	add    ecx,edi
   18f63:	test   dx,dx
   18f66:	jne    0x18f5a
   18f68:	lea    edi,[eax+0x40]
   18f6b:	mov    esi,0x7a3e8
   18f70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18f71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18f72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18f73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18f74:	mov    DWORD PTR [ebx+0x1c],0x110
   18f7b:	jmp    0x190de
   18f80:	mov    eax,DWORD PTR [ebx+0xc]
   18f83:	push   DWORD PTR [eax]
   18f85:	call   0x10fd8
   18f8a:	jmp    0x190db
   18f8f:	mov    ecx,0x22c088
   18f94:	cmp    eax,ecx
   18f96:	ja     0x19060
   18f9c:	je     0x19035
   18fa2:	sub    eax,0x22c06c
   18fa7:	je     0x1901d
   18fa9:	push   0x4
   18fab:	pop    esi
   18fac:	sub    eax,esi
   18fae:	je     0x19010
   18fb0:	push   0x8
   18fb2:	pop    ecx
   18fb3:	sub    eax,ecx
   18fb5:	je     0x19003
   18fb7:	sub    eax,esi
   18fb9:	je     0x18feb
   18fbb:	sub    eax,esi
   18fbd:	je     0x18fd4
   18fbf:	sub    eax,esi
   18fc1:	jne    0x1907e
   18fc7:	push   DWORD PTR [ebx+0xc]
   18fca:	call   0x17868
   18fcf:	jmp    0x190db
   18fd4:	mov    DWORD PTR [ebx+0x1c],ecx
   18fd7:	mov    ebx,DWORD PTR [ebx+0xc]
   18fda:	mov    eax,ds:0x7ef24
   18fdf:	mov    DWORD PTR [ebx],eax
   18fe1:	mov    eax,ds:0x7ef28
   18fe6:	jmp    0x18dd2
   18feb:	mov    eax,DWORD PTR [ebx+0xc]
   18fee:	mov    ecx,DWORD PTR [eax]
   18ff0:	mov    DWORD PTR ds:0x7ef24,ecx
   18ff6:	mov    eax,DWORD PTR [eax+0x4]
   18ff9:	mov    ds:0x7ef28,eax
   18ffe:	jmp    0x190db
   19003:	push   DWORD PTR [ebx+0xc]
   19006:	call   0x1707c
   1900b:	jmp    0x190db
   19010:	push   DWORD PTR [ebx+0xc]
   19013:	call   0x10f48
   19018:	jmp    0x190db
   1901d:	mov    esi,DWORD PTR [ebx+0xc]
   19020:	push   DWORD PTR [esi]
   19022:	call   0x1101c
   19027:	mov    DWORD PTR [esi],eax
   19029:	mov    DWORD PTR [ebx+0x1c],0x4
   19030:	jmp    0x190de
   19035:	mov    esi,DWORD PTR [ebx+0xc]
   19038:	mov    eax,DWORD PTR [esi]
   1903a:	add    eax,0xc
   1903d:	mov    DWORD PTR [ebx+0x1c],eax
   19040:	push   0xffffffff
   19042:	lea    eax,[esi+0xc]
   19045:	push   eax
   19046:	lea    ecx,[ebp-0x3c]
   19049:	call   0x110ae
   1904e:	push   esi
   1904f:	lea    eax,[ebp-0x3c]
   19052:	push   eax
   19053:	call   0x15e96
   19058:	push   DWORD PTR [ebp-0x3c]
   1905b:	jmp    0x18ccb
   19060:	sub    eax,0x22c08c
   19065:	je     0x190cd
   19067:	push   0x4
   19069:	pop    esi
   1906a:	sub    eax,esi
   1906c:	je     0x190b9
   1906e:	sub    eax,esi
   19070:	je     0x190b2
   19072:	sub    eax,esi
   19074:	je     0x1909e
   19076:	sub    eax,esi
   19078:	je     0x19094
   1907a:	sub    eax,esi
   1907c:	je     0x19087
   1907e:	mov    DWORD PTR [ebp-0x24],0xc0000010
   19085:	jmp    0x190db
   19087:	push   DWORD PTR [ebx+0xc]
   1908a:	call   0x1aa48
   1908f:	mov    DWORD PTR [ebx+0x1c],esi
   19092:	jmp    0x190de
   19094:	push   DWORD PTR [ebx+0xc]
   19097:	call   0x1b4f0
   1909c:	jmp    0x190db
   1909e:	mov    eax,DWORD PTR [ebx+0xc]
   190a1:	mov    ecx,DWORD PTR [eax+0x4]
   190a4:	add    ecx,0x8
   190a7:	mov    DWORD PTR [ebx+0x1c],ecx
   190aa:	push   eax
   190ab:	call   0x1b7be
   190b0:	jmp    0x190de
   190b2:	call   0x1b400
   190b7:	jmp    0x190db
   190b9:	mov    eax,DWORD PTR [ebx+0xc]
   190bc:	mov    ecx,DWORD PTR [eax+0x4]
   190bf:	add    ecx,0x8
   190c2:	mov    DWORD PTR [ebx+0x1c],ecx
   190c5:	push   eax
   190c6:	call   0x1a820
   190cb:	jmp    0x190de
   190cd:	push   DWORD PTR [ebx+0xc]
   190d0:	call   0x11064
   190d5:	push   eax
   190d6:	call   0x1b622
   190db:	mov    DWORD PTR [ebx+0x1c],edi
   190de:	mov    eax,DWORD PTR [ebp-0x24]
   190e1:	call   0x1db19
   190e6:	ret    0x8
   190e9:	int3   
   190ea:	int3   
   190eb:	int3   
   190ec:	int3   
   190ed:	int3   
   190ee:	push   0xc
   190f0:	push   0x7e170
   190f5:	call   0x1dad4
   190fa:	and    DWORD PTR [ebp-0x4],0x0
   190fe:	push   DWORD PTR [ebp+0xc]
   19101:	push   DWORD PTR [ebp+0x8]
   19104:	call   0x18c1e
   19109:	mov    esi,eax
   1910b:	jmp    0x19120
   1910d:	xor    eax,eax
   1910f:	inc    eax
   19110:	ret    
   19111:	mov    esp,DWORD PTR [ebp-0x18]
   19114:	push   0xd
   19116:	call   0x10fd8
   1911b:	mov    esi,0xc0000001
   19120:	mov    DWORD PTR [ebp-0x1c],esi
   19123:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1912a:	cmp    esi,0x103
   19130:	je     0x19140
   19132:	mov    ecx,DWORD PTR [ebp+0xc]
   19135:	mov    DWORD PTR [ecx+0x18],esi
   19138:	xor    dl,dl
   1913a:	call   DWORD PTR ds:0x1ee44
   19140:	mov    eax,esi
   19142:	call   0x1db19
   19147:	ret    0x8
   1914a:	int3   
   1914b:	int3   
   1914c:	int3   
   1914d:	int3   
   1914e:	int3   
   1914f:	int3   
   19150:	mov    edi,edi
   19152:	push   ebp
   19153:	mov    ebp,esp
   19155:	push   esi
   19156:	mov    esi,ecx
   19158:	mov    BYTE PTR [esi+0x8],0x0
   1915c:	call   0x14ac6
   19161:	lea    ecx,[esi+0x10]
   19164:	mov    BYTE PTR [ecx+0x8],0x0
   19168:	call   0x144b6
   1916d:	mov    eax,DWORD PTR [ebp+0x8]
   19170:	mov    DWORD PTR [esi+0x20],eax
   19173:	mov    eax,DWORD PTR [ebp+0xc]
   19176:	mov    DWORD PTR [esi+0x24],eax
   19179:	mov    eax,esi
   1917b:	pop    esi
   1917c:	pop    ebp
   1917d:	ret    0x8
   19180:	int3   
   19181:	int3   
   19182:	int3   
   19183:	int3   
   19184:	int3   
   19185:	int3   
   19186:	push   0x850
   1918b:	push   0x7e190
   19190:	call   0x1dde0
   19195:	mov    esi,DWORD PTR [ebp+0x8]
   19198:	mov    DWORD PTR [ebp-0x828],esi
   1919e:	mov    edi,DWORD PTR [ebp+0xc]
   191a1:	call   0x183b2
   191a6:	call   0x11ce8
   191ab:	test   eax,eax
   191ad:	je     0x1968b
   191b3:	xor    ebx,ebx
   191b5:	mov    DWORD PTR [ebp-0x838],ebx
   191bb:	call   0x18222
   191c0:	cmp    al,bl
   191c2:	jne    0x192b3
   191c8:	mov    DWORD PTR [ebp-0x4],ebx
   191cb:	push   ebx
   191cc:	push   0x19
   191ce:	call   0x109f0
   191d3:	cmp    edx,ebx
   191d5:	jl     0x191eb
   191d7:	jg     0x191de
   191d9:	cmp    eax,0x5
   191dc:	jbe    0x191eb
   191de:	push   ebx
   191df:	push   0x7eec0
   191e4:	call   0x11c16
   191e9:	call   eax
   191eb:	push   edi
   191ec:	push   0x1ec0e
   191f1:	lea    eax,[ebp-0x41c]
   191f7:	push   eax
   191f8:	call   0x1dac6
   191fd:	add    esp,0xc
   19200:	lea    eax,[ebp-0x858]
   19206:	push   eax
   19207:	call   DWORD PTR ds:0x1ee4c
   1920d:	push   0x1ebec
   19212:	push   0x4
   19214:	push   0x1ebe2
   19219:	call   0x16c64
   1921e:	mov    DWORD PTR [ebp-0x82c],eax
   19224:	lea    ecx,[eax+0x2]
   19227:	mov    dx,WORD PTR [eax]
   1922a:	inc    eax
   1922b:	inc    eax
   1922c:	cmp    dx,bx
   1922f:	jne    0x19227
   19231:	sub    eax,ecx
   19233:	sar    eax,1
   19235:	add    eax,eax
   19237:	mov    WORD PTR [ebp-0x82e],ax
   1923e:	mov    WORD PTR [ebp-0x830],ax
   19245:	mov    DWORD PTR [ebp-0x850],0x18
   1924f:	mov    DWORD PTR [ebp-0x84c],ebx
   19255:	mov    DWORD PTR [ebp-0x844],0x40
   1925f:	lea    eax,[ebp-0x830]
   19265:	mov    DWORD PTR [ebp-0x848],eax
   1926b:	mov    DWORD PTR [ebp-0x840],ebx
   19271:	mov    DWORD PTR [ebp-0x83c],ebx
   19277:	mov    eax,DWORD PTR [ebp-0x82c]
   1927d:	lea    ecx,[eax+0x2]
   19280:	mov    dx,WORD PTR [eax]
   19283:	inc    eax
   19284:	inc    eax
   19285:	cmp    dx,bx
   19288:	jne    0x19280
   1928a:	sub    eax,ecx
   1928c:	sar    eax,1
   1928e:	mov    DWORD PTR [ebp-0x838],eax
   19294:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1929b:	jmp    0x192b3
   1929d:	xor    eax,eax
   1929f:	inc    eax
   192a0:	ret    
   192a1:	mov    esp,DWORD PTR [ebp-0x18]
   192a4:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   192ab:	xor    ebx,ebx
   192ad:	mov    esi,DWORD PTR [ebp-0x828]
   192b3:	cmp    DWORD PTR [ebp-0x838],ebx
   192b9:	jne    0x1968b
   192bf:	xor    eax,eax
   192c1:	lea    edi,[ebp-0x840]
   192c7:	stos   DWORD PTR es:[edi],eax
   192c8:	stos   DWORD PTR es:[edi],eax
   192c9:	mov    DWORD PTR [ebp-0x844],0xc
   192d3:	mov    DWORD PTR [ebp-0x840],0x2
   192dd:	mov    BYTE PTR [ebp-0x83c],bl
   192e3:	mov    BYTE PTR [ebp-0x83b],bl
   192e9:	push   0x7e580
   192ee:	push   ebx
   192ef:	lea    eax,[ebp-0x844]
   192f5:	push   eax
   192f6:	call   0x11cbe
   192fb:	call   eax
   192fd:	push   eax
   192fe:	call   0x11b98
   19303:	call   eax
   19305:	push   0x10
   19307:	call   0x10a66
   1930c:	pop    ecx
   1930d:	cmp    eax,ebx
   1930f:	je     0x1932d
   19311:	lea    ecx,[ebp-0x81d]
   19317:	push   ecx
   19318:	lea    ecx,[ebp-0x81d]
   1931e:	push   ecx
   1931f:	mov    ecx,eax
   19321:	call   0x16e50
   19326:	mov    ds:0x7eee8,eax
   1932b:	jmp    0x19333
   1932d:	mov    DWORD PTR ds:0x7eee8,ebx
   19333:	push   0x2c
   19335:	call   0x10a66
   1933a:	pop    ecx
   1933b:	cmp    eax,ebx
   1933d:	je     0x19354
   1933f:	push   0x5dc
   19344:	push   0x14
   19346:	mov    ecx,eax
   19348:	call   0x1864a
   1934d:	mov    ds:0x7eef0,eax
   19352:	jmp    0x1935a
   19354:	mov    DWORD PTR ds:0x7eef0,ebx
   1935a:	push   0x10
   1935c:	call   0x10a66
   19361:	pop    ecx
   19362:	cmp    eax,ebx
   19364:	je     0x19382
   19366:	lea    ecx,[ebp-0x81d]
   1936c:	push   ecx
   1936d:	lea    ecx,[ebp-0x81d]
   19373:	push   ecx
   19374:	mov    ecx,eax
   19376:	call   0x16a2e
   1937b:	mov    ds:0x7e530,eax
   19380:	jmp    0x19388
   19382:	mov    DWORD PTR ds:0x7e530,ebx
   19388:	push   0x10
   1938a:	call   0x10a66
   1938f:	pop    ecx
   19390:	cmp    eax,ebx
   19392:	je     0x193b0
   19394:	lea    ecx,[ebp-0x81d]
   1939a:	push   ecx
   1939b:	lea    ecx,[ebp-0x81d]
   193a1:	push   ecx
   193a2:	mov    ecx,eax
   193a4:	call   0x16f14
   193a9:	mov    ds:0x7e5bc,eax
   193ae:	jmp    0x193b6
   193b0:	mov    DWORD PTR ds:0x7e5bc,ebx
   193b6:	push   0x28
   193b8:	call   0x10a66
   193bd:	pop    ecx
   193be:	cmp    eax,ebx
   193c0:	je     0x193d7
   193c2:	push   0x3e8
   193c7:	push   0x14
   193c9:	mov    ecx,eax
   193cb:	call   0x19150
   193d0:	mov    ds:0x7e55c,eax
   193d5:	jmp    0x193dd
   193d7:	mov    DWORD PTR ds:0x7e55c,ebx
   193dd:	push   0x20
   193df:	call   0x10a66
   193e4:	pop    ecx
   193e5:	cmp    eax,ebx
   193e7:	je     0x193f7
   193e9:	mov    ecx,eax
   193eb:	call   0x16bf2
   193f0:	mov    ds:0x7e558,eax
   193f5:	jmp    0x193fd
   193f7:	mov    DWORD PTR ds:0x7e558,ebx
   193fd:	call   0x12946
   19402:	call   0x1b58a
   19407:	call   0x17a0e
   1940c:	mov    edi,0x1ebd2
   19411:	push   edi
   19412:	call   0x1856e
   19417:	push   eax
   19418:	push   0x1ebb0
   1941d:	push   0xa
   1941f:	push   0x1eb9a
   19424:	call   0x16c64
   19429:	push   eax
   1942a:	lea    eax,[ebp-0x81c]
   19430:	push   eax
   19431:	call   0x1daba
   19436:	add    esp,0xc
   19439:	lea    eax,[ebp-0x81c]
   1943f:	push   eax
   19440:	lea    eax,[ebp-0x860]
   19446:	push   eax
   19447:	call   0x11c40
   1944c:	call   eax
   1944e:	push   edi
   1944f:	call   0x1856e
   19454:	push   eax
   19455:	push   0x1eb72
   1945a:	push   0xe
   1945c:	push   0x1eb54
   19461:	call   0x16c64
   19466:	push   eax
   19467:	lea    eax,[ebp-0x41c]
   1946d:	push   eax
   1946e:	call   0x1daba
   19473:	add    esp,0xc
   19476:	lea    eax,[ebp-0x41c]
   1947c:	push   eax
   1947d:	lea    eax,[ebp-0x858]
   19483:	push   eax
   19484:	call   0x11c40
   19489:	call   eax
   1948b:	push   0x7ef2c
   19490:	push   ebx
   19491:	push   0x100
   19496:	push   0x22
   19498:	lea    eax,[ebp-0x860]
   1949e:	push   eax
   1949f:	push   ebx
   194a0:	push   esi
   194a1:	call   0x11b6e
   194a6:	call   eax
   194a8:	cmp    eax,ebx
   194aa:	jl     0x1968d
   194b0:	mov    eax,0x190ee
   194b5:	mov    DWORD PTR [esi+0x94],eax
   194bb:	mov    DWORD PTR [esi+0x90],eax
   194c1:	mov    DWORD PTR [esi+0xa4],eax
   194c7:	mov    DWORD PTR [esi+0x70],eax
   194ca:	mov    DWORD PTR [esi+0x48],eax
   194cd:	mov    DWORD PTR [esi+0x44],eax
   194d0:	mov    DWORD PTR [esi+0x40],eax
   194d3:	mov    DWORD PTR [esi+0x38],eax
   194d6:	mov    eax,ds:0x7ef2c
   194db:	or     DWORD PTR [eax+0x1c],0x4
   194df:	lea    eax,[ebp-0x860]
   194e5:	push   eax
   194e6:	lea    eax,[ebp-0x858]
   194ec:	push   eax
   194ed:	call   0x11b44
   194f2:	call   eax
   194f4:	mov    DWORD PTR [ebp-0x828],eax
   194fa:	cmp    eax,ebx
   194fc:	jge    0x19513
   194fe:	push   DWORD PTR [esi+0x4]
   19501:	call   0x119f4
   19506:	call   eax
   19508:	mov    eax,DWORD PTR [ebp-0x828]
   1950e:	jmp    0x1968d
   19513:	push   ebx
   19514:	push   0x7eec0
   19519:	call   0x11c16
   1951e:	call   eax
   19520:	push   ebx
   19521:	push   0x7e560
   19526:	call   0x11c16
   1952b:	call   eax
   1952d:	push   ebx
   1952e:	push   0x7e534
   19533:	call   0x11c16
   19538:	call   eax
   1953a:	push   0x8000000
   1953f:	push   0x1eb1a
   19544:	push   0x9
   19546:	push   0x1e7aa
   1954b:	call   0x16d5a
   19550:	push   eax
   19551:	lea    eax,[ebp-0x824]
   19557:	push   eax
   19558:	call   0x19ac6
   1955d:	push   DWORD PTR [ebp-0x824]
   19563:	call   0x1187a
   19568:	call   eax
   1956a:	mov    DWORD PTR [ebp-0x834],eax
   19570:	push   ebx
   19571:	push   0x1eaf4
   19576:	push   0x16
   19578:	push   0x1eadc
   1957d:	call   0x16d5a
   19582:	push   eax
   19583:	push   DWORD PTR [ebp-0x824]
   19589:	call   0x199ac
   1958e:	push   eax
   1958f:	push   DWORD PTR [ebp-0x834]
   19595:	call   0x19952
   1959a:	mov    edi,eax
   1959c:	add    edi,DWORD PTR [ebp-0x824]
   195a2:	mov    esi,0x1def2
   195a7:	push   esi
   195a8:	call   0x115d6
   195ad:	mov    DWORD PTR [ebp-0x82c],eax
   195b3:	push   edi
   195b4:	call   0x198fa
   195b9:	mov    ecx,DWORD PTR [ebp-0x82c]
   195bf:	mov    ecx,DWORD PTR [ecx]
   195c1:	mov    eax,DWORD PTR [ecx+eax*4]
   195c4:	mov    ds:0x7eeec,eax
   195c9:	push   ebx
   195ca:	push   0x1eaa0
   195cf:	push   0x14
   195d1:	push   0x1ea8a
   195d6:	call   0x16d5a
   195db:	push   eax
   195dc:	push   DWORD PTR [ebp-0x824]
   195e2:	call   0x199ac
   195e7:	push   eax
   195e8:	push   DWORD PTR [ebp-0x834]
   195ee:	call   0x19952
   195f3:	mov    edi,eax
   195f5:	add    edi,DWORD PTR [ebp-0x824]
   195fb:	push   esi
   195fc:	call   0x115d6
   19601:	mov    DWORD PTR [ebp-0x82c],eax
   19607:	push   edi
   19608:	call   0x198fa
   1960d:	mov    ecx,DWORD PTR [ebp-0x82c]
   19613:	mov    ecx,DWORD PTR [ecx]
   19615:	mov    eax,DWORD PTR [ecx+eax*4]
   19618:	mov    ds:0x7eee0,eax
   1961d:	push   ebx
   1961e:	push   0x1ea5e
   19623:	push   0xe
   19625:	push   0x1ea4e
   1962a:	call   0x16d5a
   1962f:	push   eax
   19630:	push   DWORD PTR [ebp-0x824]
   19636:	call   0x199ac
   1963b:	push   eax
   1963c:	push   DWORD PTR [ebp-0x834]
   19642:	call   0x19952
   19647:	mov    edi,eax
   19649:	add    edi,DWORD PTR [ebp-0x824]
   1964f:	push   esi
   19650:	call   0x115d6
   19655:	mov    esi,eax
   19657:	push   edi
   19658:	call   0x198fa
   1965d:	mov    ecx,DWORD PTR [esi]
   1965f:	mov    eax,DWORD PTR [ecx+eax*4]
   19662:	mov    ds:0x7eef4,eax
   19667:	push   DWORD PTR [ebp-0x824]
   1966d:	call   0x19c1c
   19672:	push   ebx
   19673:	push   0x19
   19675:	call   0x109f0
   1967a:	call   0x188b2
   1967f:	mov    BYTE PTR ds:0x7ef30,0x1
   19686:	jmp    0x19508
   1968b:	xor    eax,eax
   1968d:	call   0x1de28
   19692:	ret    0x8
   19695:	int3   
   19696:	int3   
   19697:	int3   
   19698:	int3   
   19699:	int3   
   1969a:	mov    edi,edi
   1969c:	push   ebp
   1969d:	mov    ebp,esp
   1969f:	push   ecx
   196a0:	mov    ecx,DWORD PTR [ebp+0x8]
   196a3:	mov    eax,DWORD PTR [ecx+0x4]
   196a6:	mov    edx,DWORD PTR [ebp+0xc]
   196a9:	push   ebx
   196aa:	mov    ebx,DWORD PTR [edx+0x4]
   196ad:	push   esi
   196ae:	push   edi
   196af:	mov    DWORD PTR [ebp-0x4],eax
   196b2:	mov    DWORD PTR [ebp+0x8],eax
   196b5:	cmp    eax,ebx
   196b7:	jbe    0x196bc
   196b9:	mov    DWORD PTR [ebp+0x8],ebx
   196bc:	xor    eax,eax
   196be:	cmp    DWORD PTR [ebp+0x8],eax
   196c1:	jbe    0x196d9
   196c3:	mov    esi,DWORD PTR [ecx]
   196c5:	mov    edi,DWORD PTR [edx]
   196c7:	mov    cl,BYTE PTR [esi+eax*1]
   196ca:	mov    dl,BYTE PTR [edi+eax*1]
   196cd:	cmp    cl,dl
   196cf:	jl     0x196e6
   196d1:	jg     0x196ea
   196d3:	inc    eax
   196d4:	cmp    eax,DWORD PTR [ebp+0x8]
   196d7:	jb     0x196c7
   196d9:	cmp    DWORD PTR [ebp-0x4],ebx
   196dc:	setb   al
   196df:	pop    edi
   196e0:	pop    esi
   196e1:	pop    ebx
   196e2:	leave  
   196e3:	ret    0x8
   196e6:	mov    al,0x1
   196e8:	jmp    0x196df
   196ea:	xor    al,al
   196ec:	jmp    0x196df
   196ee:	int3   
   196ef:	int3   
   196f0:	int3   
   196f1:	int3   
   196f2:	int3   
   196f3:	int3   
   196f4:	mov    edi,edi
   196f6:	push   ebp
   196f7:	mov    ebp,esp
   196f9:	mov    eax,DWORD PTR [ebp+0x8]
   196fc:	mov    ecx,DWORD PTR [eax+0x4]
   196ff:	mov    edx,DWORD PTR [ebp+0xc]
   19702:	cmp    ecx,DWORD PTR [edx+0x4]
   19705:	je     0x1970b
   19707:	xor    al,al
   19709:	jmp    0x1971a
   1970b:	push   esi
   1970c:	mov    esi,DWORD PTR [eax]
   1970e:	push   edi
   1970f:	mov    edi,DWORD PTR [edx]
   19711:	xor    eax,eax
   19713:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
   19715:	pop    edi
   19716:	sete   al
   19719:	pop    esi
   1971a:	pop    ebp
   1971b:	ret    0x8
   1971e:	int3   
   1971f:	int3   
   19720:	int3   
   19721:	int3   
   19722:	int3   
   19723:	int3   
   19724:	mov    edi,edi
   19726:	push   ebp
   19727:	mov    ebp,esp
   19729:	push   DWORD PTR [ebp+0xc]
   1972c:	push   DWORD PTR [ebp+0x8]
   1972f:	call   0x196f4
   19734:	xor    ecx,ecx
   19736:	test   al,al
   19738:	sete   cl
   1973b:	mov    al,cl
   1973d:	pop    ebp
   1973e:	ret    0x8
   19741:	int3   
   19742:	int3   
   19743:	int3   
   19744:	int3   
   19745:	int3   
   19746:	mov    edi,edi
   19748:	push   ebp
   19749:	mov    ebp,esp
   1974b:	push   ecx
   1974c:	mov    ecx,DWORD PTR [ebp+0x8]
   1974f:	mov    eax,DWORD PTR [ebp+0xc]
   19752:	push   ebx
   19753:	mov    ebx,DWORD PTR [eax+0x4]
   19756:	push   esi
   19757:	push   edi
   19758:	mov    edi,DWORD PTR [ecx+0x4]
   1975b:	mov    DWORD PTR [ebp-0x4],edi
   1975e:	cmp    edi,ebx
   19760:	jbe    0x19764
   19762:	mov    edi,ebx
   19764:	and    DWORD PTR [ebp+0x8],0x0
   19768:	test   edi,edi
   1976a:	jbe    0x1978a
   1976c:	mov    eax,DWORD PTR [eax]
   1976e:	mov    ecx,DWORD PTR [ecx]
   19770:	sub    ecx,eax
   19772:	movzx  edx,WORD PTR [ecx+eax*1]
   19776:	movzx  esi,WORD PTR [eax]
   19779:	cmp    dx,si
   1977c:	jb     0x19797
   1977e:	ja     0x1979b
   19780:	inc    DWORD PTR [ebp+0x8]
   19783:	inc    eax
   19784:	inc    eax
   19785:	cmp    DWORD PTR [ebp+0x8],edi
   19788:	jb     0x19772
   1978a:	cmp    DWORD PTR [ebp-0x4],ebx
   1978d:	setb   al
   19790:	pop    edi
   19791:	pop    esi
   19792:	pop    ebx
   19793:	leave  
   19794:	ret    0x8
   19797:	mov    al,0x1
   19799:	jmp    0x19790
   1979b:	xor    al,al
   1979d:	jmp    0x19790
   1979f:	int3   
   197a0:	int3   
   197a1:	int3   
   197a2:	int3   
   197a3:	int3   
   197a4:	mov    edi,edi
   197a6:	push   ebp
   197a7:	mov    ebp,esp
   197a9:	pop    ebp
   197aa:	jmp    0x1969a
   197af:	int3   
   197b0:	int3   
   197b1:	int3   
   197b2:	int3   
   197b3:	int3   
   197b4:	mov    edi,edi
   197b6:	push   ebp
   197b7:	mov    ebp,esp
   197b9:	pop    ebp
   197ba:	jmp    0x196f4
   197bf:	int3   
   197c0:	int3   
   197c1:	int3   
   197c2:	int3   
   197c3:	int3   
   197c4:	mov    edi,edi
   197c6:	push   ebp
   197c7:	mov    ebp,esp
   197c9:	pop    ebp
   197ca:	jmp    0x19724
   197cf:	int3   
   197d0:	int3   
   197d1:	int3   
   197d2:	int3   
   197d3:	int3   
   197d4:	mov    edi,edi
   197d6:	push   ebp
   197d7:	mov    ebp,esp
   197d9:	pop    ebp
   197da:	jmp    0x19746
   197df:	int3   
   197e0:	int3   
   197e1:	int3   
   197e2:	int3   
   197e3:	int3   
   197e4:	mov    edi,edi
   197e6:	push   ebp
   197e7:	mov    ebp,esp
   197e9:	mov    eax,DWORD PTR [ebp+0x8]
   197ec:	mov    cl,BYTE PTR [ebp+0xc]
   197ef:	mov    BYTE PTR [eax],cl
   197f1:	inc    eax
   197f2:	pop    ebp
   197f3:	ret    0x8
   197f6:	int3   
   197f7:	int3   
   197f8:	int3   
   197f9:	int3   
   197fa:	int3   
   197fb:	int3   
   197fc:	mov    edi,edi
   197fe:	push   ebp
   197ff:	mov    ebp,esp
   19801:	mov    eax,DWORD PTR [ebp+0x8]
   19804:	mov    ecx,DWORD PTR [ebp+0xc]
   19807:	mov    DWORD PTR [eax],ecx
   19809:	add    eax,0x4
   1980c:	pop    ebp
   1980d:	ret    0x8
   19810:	int3   
   19811:	int3   
   19812:	int3   
   19813:	int3   
   19814:	int3   
   19815:	int3   
   19816:	mov    edi,edi
   19818:	push   ebp
   19819:	mov    ebp,esp
   1981b:	mov    eax,DWORD PTR [ebp+0x8]
   1981e:	mov    cx,WORD PTR [ebp+0xc]
   19822:	mov    WORD PTR [eax],cx
   19825:	add    eax,0x2
   19828:	pop    ebp
   19829:	ret    0x8
   1982c:	int3   
   1982d:	int3   
   1982e:	int3   
   1982f:	int3   
   19830:	int3   
   19831:	int3   
   19832:	mov    edi,edi
   19834:	push   ebp
   19835:	mov    ebp,esp
   19837:	push   esi
   19838:	mov    esi,DWORD PTR [ebp+0x10]
   1983b:	push   edi
   1983c:	mov    edi,DWORD PTR [ebp+0x8]
   1983f:	push   esi
   19840:	push   DWORD PTR [ebp+0xc]
   19843:	push   edi
   19844:	call   0x1da96
   19849:	add    esp,0xc
   1984c:	lea    eax,[edi+esi*1]
   1984f:	pop    edi
   19850:	pop    esi
   19851:	pop    ebp
   19852:	ret    0xc
   19855:	int3   
   19856:	int3   
   19857:	int3   
   19858:	int3   
   19859:	int3   
   1985a:	mov    edi,edi
   1985c:	push   ebp
   1985d:	mov    ebp,esp
   1985f:	mov    eax,DWORD PTR [ebp+0xc]
   19862:	mov    ecx,DWORD PTR [ebp+0x8]
   19865:	sub    ecx,eax
   19867:	sub    ecx,0x5
   1986a:	mov    BYTE PTR [eax],0xe9
   1986d:	mov    DWORD PTR [eax+0x1],ecx
   19870:	add    eax,0x5
   19873:	pop    ebp
   19874:	ret    0x8
   19877:	int3   
   19878:	int3   
   19879:	int3   
   1987a:	int3   
   1987b:	int3   
   1987c:	mov    edi,edi
   1987e:	push   ebp
   1987f:	mov    ebp,esp
   19881:	push   ecx
   19882:	push   ebx
   19883:	mov    ebx,DWORD PTR [ebp+0x8]
   19886:	and    DWORD PTR [ebp+0x8],0x0
   1988a:	push   edi
   1988b:	mov    edi,ebx
   1988d:	test   ebx,ebx
   1988f:	jne    0x19895
   19891:	xor    eax,eax
   19893:	jmp    0x198ef
   19895:	push   esi
   19896:	push   0x20736649
   1989b:	push   0x80
   198a0:	push   0x0
   198a2:	call   DWORD PTR ds:0x1ee2c
   198a8:	mov    esi,eax
   198aa:	mov    DWORD PTR [ebp-0x4],esi
   198ad:	push   0x0
   198af:	push   edi
   198b0:	push   esi
   198b1:	call   0x19f9e
   198b6:	mov    ecx,eax
   198b8:	sub    ecx,edi
   198ba:	add    DWORD PTR [ebp+0x8],ecx
   198bd:	add    esi,ecx
   198bf:	cmp    DWORD PTR [ebp+0x8],0x5
   198c3:	mov    edi,eax
   198c5:	jb     0x198ad
   198c7:	push   DWORD PTR [ebp+0x8]
   198ca:	push   0x90
   198cf:	push   ebx
   198d0:	call   0x1daae
   198d5:	add    esp,0xc
   198d8:	push   esi
   198d9:	lea    eax,[ebx+0x5]
   198dc:	push   eax
   198dd:	call   0x1985a
   198e2:	push   ebx
   198e3:	push   DWORD PTR [ebp+0xc]
   198e6:	call   0x1985a
   198eb:	mov    eax,DWORD PTR [ebp-0x4]
   198ee:	pop    esi
   198ef:	pop    edi
   198f0:	pop    ebx
   198f1:	leave  
   198f2:	ret    0x8
   198f5:	int3   
   198f6:	int3   
   198f7:	int3   
   198f8:	int3   
   198f9:	int3   
   198fa:	mov    edi,edi
   198fc:	push   ebp
   198fd:	mov    ebp,esp
   198ff:	mov    eax,DWORD PTR [ebp+0x8]
   19902:	mov    eax,DWORD PTR [eax+0x1]
   19905:	pop    ebp
   19906:	ret    0x4
   19909:	int3   
   1990a:	int3   
   1990b:	int3   
   1990c:	int3   
   1990d:	int3   
   1990e:	mov    edi,edi
   19910:	push   ebp
   19911:	mov    ebp,esp
   19913:	mov    ecx,DWORD PTR [ebp+0x8]
   19916:	movzx  eax,WORD PTR [ecx+0x14]
   1991a:	lea    eax,[eax+ecx*1+0x18]
   1991e:	movzx  ecx,WORD PTR [ecx+0x6]
   19922:	push   esi
   19923:	xor    esi,esi
   19925:	push   edi
   19926:	test   ecx,ecx
   19928:	jbe    0x19944
   1992a:	mov    edx,DWORD PTR [eax+0xc]
   1992d:	cmp    DWORD PTR [ebp+0xc],edx
   19930:	jb     0x1993c
   19932:	mov    edi,DWORD PTR [eax+0x8]
   19935:	add    edi,edx
   19937:	cmp    DWORD PTR [ebp+0xc],edi
   1993a:	jb     0x19946
   1993c:	add    eax,0x28
   1993f:	inc    esi
   19940:	cmp    esi,ecx
   19942:	jb     0x1992a
   19944:	xor    eax,eax
   19946:	pop    edi
   19947:	pop    esi
   19948:	pop    ebp
   19949:	ret    0x8
   1994c:	int3   
   1994d:	int3   
   1994e:	int3   
   1994f:	int3   
   19950:	int3   
   19951:	int3   
   19952:	mov    edi,edi
   19954:	push   ebp
   19955:	mov    ebp,esp
   19957:	push   esi
   19958:	push   DWORD PTR [ebp+0xc]
   1995b:	mov    esi,DWORD PTR [ebp+0x8]
   1995e:	push   esi
   1995f:	call   0x1990e
   19964:	mov    ecx,eax
   19966:	test   ecx,ecx
   19968:	je     0x1997b
   1996a:	mov    eax,DWORD PTR [esi+0x3c]
   1996d:	dec    eax
   1996e:	not    eax
   19970:	and    eax,DWORD PTR [ecx+0x14]
   19973:	sub    eax,DWORD PTR [ecx+0xc]
   19976:	add    eax,DWORD PTR [ebp+0xc]
   19979:	jmp    0x1997e
   1997b:	mov    eax,DWORD PTR [ebp+0xc]
   1997e:	pop    esi
   1997f:	pop    ebp
   19980:	ret    0x8
   19983:	int3   
   19984:	int3   
   19985:	int3   
   19986:	int3   
   19987:	int3   
   19988:	mov    edi,edi
   1998a:	push   ebp
   1998b:	mov    ebp,esp
   1998d:	cmp    DWORD PTR [ebp+0x10],0x0
   19991:	je     0x19998
   19993:	mov    eax,DWORD PTR [ebp+0xc]
   19996:	jmp    0x199a3
   19998:	push   DWORD PTR [ebp+0xc]
   1999b:	push   DWORD PTR [ebp+0x8]
   1999e:	call   0x19952
   199a3:	pop    ebp
   199a4:	ret    0xc
   199a7:	int3   
   199a8:	int3   
   199a9:	int3   
   199aa:	int3   
   199ab:	int3   
   199ac:	mov    edi,edi
   199ae:	push   ebp
   199af:	mov    ebp,esp
   199b1:	sub    esp,0x1c
   199b4:	push   ebx
   199b5:	push   esi
   199b6:	mov    esi,DWORD PTR [ebp+0x8]
   199b9:	push   edi
   199ba:	push   esi
   199bb:	call   0x1187a
   199c0:	call   eax
   199c2:	mov    ebx,eax
   199c4:	lea    eax,[ebp-0x14]
   199c7:	push   eax
   199c8:	push   0x0
   199ca:	push   0x0
   199cc:	push   esi
   199cd:	mov    DWORD PTR [ebp-0x4],ebx
   199d0:	call   0x118a4
   199d5:	call   eax
   199d7:	mov    edi,eax
   199d9:	mov    eax,DWORD PTR [ebx+0x50]
   199dc:	mov    ecx,edi
   199de:	sub    ecx,esi
   199e0:	cmp    eax,ecx
   199e2:	jb     0x19a33
   199e4:	mov    ecx,DWORD PTR [ebp-0x14]
   199e7:	sub    ecx,esi
   199e9:	add    ecx,edi
   199eb:	cmp    eax,ecx
   199ed:	jb     0x19a33
   199ef:	push   DWORD PTR [ebp+0x10]
   199f2:	push   DWORD PTR [edi+0x20]
   199f5:	push   ebx
   199f6:	call   0x19988
   199fb:	push   DWORD PTR [ebp+0x10]
   199fe:	mov    ebx,eax
   19a00:	push   DWORD PTR [edi+0x1c]
   19a03:	add    ebx,esi
   19a05:	push   DWORD PTR [ebp-0x4]
   19a08:	call   0x19988
   19a0d:	push   DWORD PTR [ebp+0x10]
   19a10:	add    eax,esi
   19a12:	push   DWORD PTR [edi+0x24]
   19a15:	mov    DWORD PTR [ebp-0x1c],eax
   19a18:	push   DWORD PTR [ebp-0x4]
   19a1b:	call   0x19988
   19a20:	and    DWORD PTR [ebp-0xc],0x0
   19a24:	add    eax,esi
   19a26:	mov    esi,DWORD PTR [edi+0x18]
   19a29:	mov    DWORD PTR [ebp-0x18],eax
   19a2c:	mov    DWORD PTR [ebp-0x8],esi
   19a2f:	test   esi,esi
   19a31:	jg     0x19a3f
   19a33:	xor    eax,eax
   19a35:	pop    edi
   19a36:	pop    esi
   19a37:	pop    ebx
   19a38:	leave  
   19a39:	ret    0xc
   19a3c:	mov    esi,DWORD PTR [ebp-0x8]
   19a3f:	mov    eax,DWORD PTR [ebp-0xc]
   19a42:	push   DWORD PTR [ebp+0x10]
   19a45:	add    esi,eax
   19a47:	mov    eax,DWORD PTR [ebp+0xc]
   19a4a:	sar    esi,1
   19a4c:	push   DWORD PTR [ebx+esi*4]
   19a4f:	mov    DWORD PTR [ebp-0x10],eax
   19a52:	push   DWORD PTR [ebp-0x4]
   19a55:	call   0x19988
   19a5a:	add    eax,DWORD PTR [ebp+0x8]
   19a5d:	mov    cl,BYTE PTR [eax]
   19a5f:	mov    edx,DWORD PTR [ebp-0x10]
   19a62:	cmp    cl,BYTE PTR [edx]
   19a64:	jne    0x19a81
   19a66:	test   cl,cl
   19a68:	je     0x19a7d
   19a6a:	mov    cl,BYTE PTR [eax+0x1]
   19a6d:	cmp    cl,BYTE PTR [edx+0x1]
   19a70:	jne    0x19a81
   19a72:	inc    eax
   19a73:	inc    eax
   19a74:	inc    edx
   19a75:	inc    edx
   19a76:	mov    DWORD PTR [ebp-0x10],edx
   19a79:	test   cl,cl
   19a7b:	jne    0x19a5d
   19a7d:	xor    eax,eax
   19a7f:	jmp    0x19a86
   19a81:	sbb    eax,eax
   19a83:	sbb    eax,0xffffffff
   19a86:	test   eax,eax
   19a88:	je     0x19a9f
   19a8a:	jge    0x19a92
   19a8c:	inc    esi
   19a8d:	mov    DWORD PTR [ebp-0xc],esi
   19a90:	jmp    0x19a95
   19a92:	mov    DWORD PTR [ebp-0x8],esi
   19a95:	mov    eax,DWORD PTR [ebp-0x8]
   19a98:	cmp    DWORD PTR [ebp-0xc],eax
   19a9b:	jl     0x19a3c
   19a9d:	jmp    0x19a33
   19a9f:	mov    eax,DWORD PTR [ebp-0x18]
   19aa2:	movzx  eax,WORD PTR [eax+esi*2]
   19aa6:	mov    ecx,DWORD PTR [ebp-0x1c]
   19aa9:	mov    ecx,DWORD PTR [ecx+eax*4]
   19aac:	mov    eax,ecx
   19aae:	sub    eax,edi
   19ab0:	add    eax,DWORD PTR [ebp+0x8]
   19ab3:	cmp    eax,DWORD PTR [ebp-0x14]
   19ab6:	sbb    eax,eax
   19ab8:	not    eax
   19aba:	and    eax,ecx
   19abc:	jmp    0x19a35
   19ac1:	int3   
   19ac2:	int3   
   19ac3:	int3   
   19ac4:	int3   
   19ac5:	int3   
   19ac6:	mov    edi,edi
   19ac8:	push   ebp
   19ac9:	mov    ebp,esp
   19acb:	sub    esp,0x818
   19ad1:	mov    eax,ds:0x7e528
   19ad6:	xor    eax,ebp
   19ad8:	mov    DWORD PTR [ebp-0x4],eax
   19adb:	mov    eax,DWORD PTR [ebp+0x8]
   19ade:	mov    ecx,DWORD PTR [ebp+0xc]
   19ae1:	push   esi
   19ae2:	push   edi
   19ae3:	mov    DWORD PTR [ebp-0x7e4],eax
   19ae9:	xor    esi,esi
   19aeb:	xor    eax,eax
   19aed:	push   ecx
   19aee:	mov    DWORD PTR [ebp-0x7f0],esi
   19af4:	lea    edi,[ebp-0x7ec]
   19afa:	stos   DWORD PTR es:[edi],eax
   19afb:	lea    eax,[ebp-0x7d4]
   19b01:	push   0x1ec12
   19b06:	push   eax
   19b07:	mov    DWORD PTR [ebp-0x7dc],esi
   19b0d:	mov    DWORD PTR [ebp-0x7e8],esi
   19b13:	call   DWORD PTR ds:0x1ee48
   19b19:	add    esp,0xc
   19b1c:	lea    eax,[ebp-0x7d4]
   19b22:	push   eax
   19b23:	lea    eax,[ebp-0x810]
   19b29:	push   eax
   19b2a:	call   0x11c40
   19b2f:	call   eax
   19b31:	push   0x10
   19b33:	lea    eax,[ebp-0x810]
   19b39:	mov    DWORD PTR [ebp-0x800],eax
   19b3f:	push   0x1
   19b41:	lea    eax,[ebp-0x818]
   19b47:	push   eax
   19b48:	lea    eax,[ebp-0x808]
   19b4e:	push   eax
   19b4f:	push   0x80100000
   19b54:	lea    eax,[ebp-0x7e0]
   19b5a:	push   eax
   19b5b:	mov    DWORD PTR [ebp-0x808],0x18
   19b65:	mov    DWORD PTR [ebp-0x804],esi
   19b6b:	mov    DWORD PTR [ebp-0x7fc],esi
   19b71:	mov    DWORD PTR [ebp-0x7f8],esi
   19b77:	mov    DWORD PTR [ebp-0x7f4],esi
   19b7d:	call   0x1172a
   19b82:	call   eax
   19b84:	cmp    eax,esi
   19b86:	jl     0x19c07
   19b88:	push   ebx
   19b89:	push   DWORD PTR [ebp-0x7e0]
   19b8f:	lea    eax,[ebp-0x7f0]
   19b95:	push   DWORD PTR [ebp+0x10]
   19b98:	push   0x2
   19b9a:	push   eax
   19b9b:	push   esi
   19b9c:	push   0x4
   19b9e:	lea    eax,[ebp-0x7d8]
   19ba4:	push   eax
   19ba5:	call   DWORD PTR ds:0x1ee54
   19bab:	push   DWORD PTR [ebp-0x7e0]
   19bb1:	mov    edi,DWORD PTR ds:0x1ee60
   19bb7:	mov    ebx,eax
   19bb9:	call   edi
   19bbb:	cmp    ebx,esi
   19bbd:	jl     0x19bf2
   19bbf:	push   0x2
   19bc1:	push   esi
   19bc2:	push   0x2
   19bc4:	lea    eax,[ebp-0x7e8]
   19bca:	push   eax
   19bcb:	push   esi
   19bcc:	push   esi
   19bcd:	push   esi
   19bce:	lea    eax,[ebp-0x7dc]
   19bd4:	push   eax
   19bd5:	push   0xffffffff
   19bd7:	push   DWORD PTR [ebp-0x7d8]
   19bdd:	call   0x11bc2
   19be2:	call   eax
   19be4:	push   DWORD PTR [ebp-0x7d8]
   19bea:	mov    ebx,eax
   19bec:	call   edi
   19bee:	cmp    ebx,esi
   19bf0:	jge    0x19bf6
   19bf2:	mov    eax,ebx
   19bf4:	jmp    0x19c06
   19bf6:	mov    eax,DWORD PTR [ebp-0x7dc]
   19bfc:	mov    ecx,DWORD PTR [ebp-0x7e4]
   19c02:	mov    DWORD PTR [ecx],eax
   19c04:	xor    eax,eax
   19c06:	pop    ebx
   19c07:	mov    ecx,DWORD PTR [ebp-0x4]
   19c0a:	pop    edi
   19c0b:	xor    ecx,ebp
   19c0d:	pop    esi
   19c0e:	call   0x1da31
   19c13:	leave  
   19c14:	ret    0xc
   19c17:	int3   
   19c18:	int3   
   19c19:	int3   
   19c1a:	int3   
   19c1b:	int3   
   19c1c:	mov    edi,edi
   19c1e:	push   ebp
   19c1f:	mov    ebp,esp
   19c21:	push   DWORD PTR [ebp+0x8]
   19c24:	push   0xffffffff
   19c26:	call   0x11bec
   19c2b:	call   eax
   19c2d:	pop    ebp
   19c2e:	ret    0x4
   19c31:	int3   
   19c32:	int3   
   19c33:	int3   
   19c34:	int3   
   19c35:	int3   
   19c36:	mov    edi,edi
   19c38:	push   ebp
   19c39:	mov    ebp,esp
   19c3b:	push   esi
   19c3c:	mov    esi,DWORD PTR [ebp+0x8]
   19c3f:	test   esi,esi
   19c41:	jne    0x19c46
   19c43:	lea    esi,[ecx+0x18]
   19c46:	mov    edx,DWORD PTR [ebp+0xc]
   19c49:	test   edx,edx
   19c4b:	jne    0x19c51
   19c4d:	xor    eax,eax
   19c4f:	jmp    0x19c61
   19c51:	movzx  eax,BYTE PTR [edx]
   19c54:	push   edx
   19c55:	lea    eax,[eax*8+0x7a500]
   19c5c:	push   esi
   19c5d:	push   eax
   19c5e:	call   DWORD PTR [eax+0x4]
   19c61:	pop    esi
   19c62:	pop    ebp
   19c63:	ret    0x8
   19c66:	int3   
   19c67:	int3   
   19c68:	int3   
   19c69:	int3   
   19c6a:	int3   
   19c6b:	int3   
   19c6c:	mov    edi,edi
   19c6e:	push   ebp
   19c6f:	mov    ebp,esp
   19c71:	mov    eax,DWORD PTR [ebp+0x14]
   19c74:	push   ebx
   19c75:	mov    ebx,DWORD PTR [ebp+0x8]
   19c78:	push   esi
   19c79:	mov    esi,DWORD PTR [ebp+0x10]
   19c7c:	sub    esi,eax
   19c7e:	push   edi
   19c7f:	lea    edi,[ebx+eax*1]
   19c82:	mov    eax,esi
   19c84:	xor    edx,edx
   19c86:	dec    eax
   19c87:	je     0x19ca8
   19c89:	dec    eax
   19c8a:	je     0x19c9a
   19c8c:	dec    eax
   19c8d:	dec    eax
   19c8e:	jne    0x19cb4
   19c90:	mov    eax,DWORD PTR [ecx+0xc]
   19c93:	mov    edx,DWORD PTR [edi]
   19c95:	and    DWORD PTR [eax],0x0
   19c98:	jmp    0x19cb4
   19c9a:	mov    eax,DWORD PTR [ecx+0xc]
   19c9d:	movsx  edx,WORD PTR [edi]
   19ca0:	mov    DWORD PTR [eax],0x2
   19ca6:	jmp    0x19cb4
   19ca8:	mov    eax,DWORD PTR [ecx+0xc]
   19cab:	movsx  edx,BYTE PTR [edi]
   19cae:	mov    DWORD PTR [eax],0x3
   19cb4:	mov    ecx,DWORD PTR [ebp+0xc]
   19cb7:	lea    eax,[edx+ecx*1]
   19cba:	add    eax,DWORD PTR [ebp+0x10]
   19cbd:	sub    edx,ebx
   19cbf:	add    edx,ecx
   19cc1:	dec    esi
   19cc2:	je     0x19cd4
   19cc4:	dec    esi
   19cc5:	je     0x19ccf
   19cc7:	dec    esi
   19cc8:	dec    esi
   19cc9:	jne    0x19cd6
   19ccb:	mov    DWORD PTR [edi],edx
   19ccd:	jmp    0x19cd6
   19ccf:	mov    WORD PTR [edi],dx
   19cd2:	jmp    0x19cd6
   19cd4:	mov    BYTE PTR [edi],dl
   19cd6:	pop    edi
   19cd7:	pop    esi
   19cd8:	pop    ebx
   19cd9:	pop    ebp
   19cda:	ret    0x10
   19cdd:	int3   
   19cde:	int3   
   19cdf:	int3   
   19ce0:	int3   
   19ce1:	int3   
   19ce2:	mov    edi,edi
   19ce4:	push   ebp
   19ce5:	mov    ebp,esp
   19ce7:	mov    eax,DWORD PTR [ebp+0x10]
   19cea:	inc    eax
   19ceb:	pop    ebp
   19cec:	ret    0xc
   19cef:	int3   
   19cf0:	int3   
   19cf1:	int3   
   19cf2:	int3   
   19cf3:	int3   
   19cf4:	mov    edi,edi
   19cf6:	push   ebp
   19cf7:	mov    ebp,esp
   19cf9:	mov    eax,ecx
   19cfb:	mov    ecx,DWORD PTR [ebp+0x8]
   19cfe:	and    DWORD PTR [eax],0x0
   19d01:	and    DWORD PTR [eax+0x4],0x0
   19d05:	test   ecx,ecx
   19d07:	jne    0x19d0c
   19d09:	lea    ecx,[eax+0x14]
   19d0c:	mov    edx,DWORD PTR [ebp+0xc]
   19d0f:	mov    DWORD PTR [eax+0x8],ecx
   19d12:	test   edx,edx
   19d14:	jne    0x19d19
   19d16:	lea    edx,[eax+0x10]
   19d19:	mov    DWORD PTR [eax+0xc],edx
   19d1c:	and    DWORD PTR [ecx],0x0
   19d1f:	mov    ecx,DWORD PTR [eax+0xc]
   19d22:	and    DWORD PTR [ecx],0x0
   19d25:	pop    ebp
   19d26:	ret    0x8
   19d29:	int3   
   19d2a:	int3   
   19d2b:	int3   
   19d2c:	int3   
   19d2d:	int3   
   19d2e:	mov    edi,edi
   19d30:	push   ebp
   19d31:	mov    ebp,esp
   19d33:	push   ecx
   19d34:	mov    eax,DWORD PTR [ebp+0x8]
   19d37:	mov    eax,DWORD PTR [eax]
   19d39:	push   ebx
   19d3a:	push   esi
   19d3b:	push   edi
   19d3c:	mov    DWORD PTR [ebp-0x4],ecx
   19d3f:	mov    esi,eax
   19d41:	test   eax,0x200000
   19d46:	je     0x19d53
   19d48:	cmp    DWORD PTR [ecx+0x4],0x0
   19d4c:	je     0x19d58
   19d4e:	shr    esi,0xb
   19d51:	jmp    0x19d5b
   19d53:	cmp    DWORD PTR [ecx],0x0
   19d56:	jmp    0x19d4c
   19d58:	shr    esi,0x8
   19d5b:	mov    ebx,DWORD PTR [ebp+0x10]
   19d5e:	and    esi,0x7
   19d61:	shr    eax,0xe
   19d64:	and    eax,0x7
   19d67:	mov    edi,esi
   19d69:	jbe    0x19da5
   19d6b:	add    eax,ebx
   19d6d:	mov    cl,BYTE PTR [eax]
   19d6f:	movzx  edx,cl
   19d72:	mov    dl,BYTE PTR [edx+0x7a400]
   19d78:	test   dl,0x10
   19d7b:	je     0x19d9d
   19d7d:	mov    al,BYTE PTR [eax+0x1]
   19d80:	and    al,0x7
   19d82:	cmp    al,0x5
   19d84:	jne    0x19d9d
   19d86:	and    cl,0xc0
   19d89:	je     0x19d9a
   19d8b:	cmp    cl,0x40
   19d8e:	jne    0x19d95
   19d90:	lea    edi,[esi+0x1]
   19d93:	jmp    0x19d9d
   19d95:	cmp    cl,0x80
   19d98:	jne    0x19d9d
   19d9a:	lea    edi,[esi+0x4]
   19d9d:	movzx  eax,dl
   19da0:	and    eax,0xf
   19da3:	add    edi,eax
   19da5:	push   edi
   19da6:	push   ebx
   19da7:	push   DWORD PTR [ebp+0xc]
   19daa:	call   0x1da96
   19daf:	mov    ecx,DWORD PTR [ebp+0x8]
   19db2:	mov    eax,DWORD PTR [ecx]
   19db4:	shl    eax,0xc
   19db7:	sar    eax,0x1d
   19dba:	add    esp,0xc
   19dbd:	test   eax,eax
   19dbf:	je     0x19ddb
   19dc1:	push   eax
   19dc2:	push   esi
   19dc3:	mov    esi,DWORD PTR [ebp-0x4]
   19dc6:	push   ebx
   19dc7:	push   DWORD PTR [ebp+0xc]
   19dca:	mov    ecx,esi
   19dcc:	call   0x19c6c
   19dd1:	mov    ecx,DWORD PTR [esi+0x8]
   19dd4:	mov    DWORD PTR [ecx],eax
   19dd6:	mov    ecx,DWORD PTR [ebp+0x8]
   19dd9:	jmp    0x19dde
   19ddb:	mov    esi,DWORD PTR [ebp-0x4]
   19dde:	test   DWORD PTR [ecx],0x400000
   19de4:	je     0x19deb
   19de6:	mov    eax,DWORD PTR [esi+0xc]
   19de9:	neg    DWORD PTR [eax]
   19deb:	test   DWORD PTR [ecx],0x100000
   19df1:	je     0x19df9
   19df3:	mov    eax,DWORD PTR [esi+0x8]
   19df6:	or     DWORD PTR [eax],0xffffffff
   19df9:	lea    eax,[edi+ebx*1]
   19dfc:	pop    edi
   19dfd:	pop    esi
   19dfe:	pop    ebx
   19dff:	leave  
   19e00:	ret    0xc
   19e03:	int3   
   19e04:	int3   
   19e05:	int3   
   19e06:	int3   
   19e07:	int3   
   19e08:	mov    edi,edi
   19e0a:	push   ebp
   19e0b:	mov    ebp,esp
   19e0d:	push   ebx
   19e0e:	push   esi
   19e0f:	mov    esi,DWORD PTR [ebp+0x10]
   19e12:	push   edi
   19e13:	mov    edi,DWORD PTR [ebp+0xc]
   19e16:	push   esi
   19e17:	push   edi
   19e18:	push   DWORD PTR [ebp+0x8]
   19e1b:	mov    ebx,ecx
   19e1d:	call   0x19d2e
   19e22:	lea    eax,[esi+0x1]
   19e25:	movzx  edx,BYTE PTR [eax]
   19e28:	push   eax
   19e29:	inc    edi
   19e2a:	lea    edx,[edx*8+0x7a500]
   19e31:	push   edi
   19e32:	push   edx
   19e33:	mov    ecx,ebx
   19e35:	call   DWORD PTR [edx+0x4]
   19e38:	pop    edi
   19e39:	pop    esi
   19e3a:	pop    ebx
   19e3b:	pop    ebp
   19e3c:	ret    0xc
   19e3f:	int3   
   19e40:	int3   
   19e41:	int3   
   19e42:	int3   
   19e43:	int3   
   19e44:	mov    edi,edi
   19e46:	push   ebp
   19e47:	mov    ebp,esp
   19e49:	push   ebx
   19e4a:	push   esi
   19e4b:	mov    esi,DWORD PTR [ebp+0x10]
   19e4e:	push   edi
   19e4f:	mov    edi,DWORD PTR [ebp+0xc]
   19e52:	push   esi
   19e53:	push   edi
   19e54:	push   DWORD PTR [ebp+0x8]
   19e57:	mov    ebx,ecx
   19e59:	call   0x19d2e
   19e5e:	lea    eax,[esi+0x1]
   19e61:	movzx  edx,BYTE PTR [eax]
   19e64:	push   eax
   19e65:	inc    edi
   19e66:	lea    edx,[edx*8+0x7ad08]
   19e6d:	push   edi
   19e6e:	push   edx
   19e6f:	mov    ecx,ebx
   19e71:	call   DWORD PTR [edx+0x4]
   19e74:	pop    edi
   19e75:	pop    esi
   19e76:	pop    ebx
   19e77:	pop    ebp
   19e78:	ret    0xc
   19e7b:	int3   
   19e7c:	int3   
   19e7d:	int3   
   19e7e:	int3   
   19e7f:	int3   
   19e80:	mov    edi,edi
   19e82:	push   ebp
   19e83:	mov    ebp,esp
   19e85:	mov    DWORD PTR [ecx],0x1
   19e8b:	pop    ebp
   19e8c:	jmp    0x19e08
   19e91:	int3   
   19e92:	int3   
   19e93:	int3   
   19e94:	int3   
   19e95:	int3   
   19e96:	mov    edi,edi
   19e98:	push   ebp
   19e99:	mov    ebp,esp
   19e9b:	mov    DWORD PTR [ecx+0x4],0x1
   19ea2:	pop    ebp
   19ea3:	jmp    0x19e08
   19ea8:	int3   
   19ea9:	int3   
   19eaa:	int3   
   19eab:	int3   
   19eac:	int3   
   19ead:	int3   
   19eae:	mov    edi,edi
   19eb0:	push   ebp
   19eb1:	mov    ebp,esp
   19eb3:	mov    eax,DWORD PTR [ebp+0x10]
   19eb6:	sub    esp,0x10
   19eb9:	test   BYTE PTR [eax+0x1],0x38
   19ebd:	push   eax
   19ebe:	push   DWORD PTR [ebp+0xc]
   19ec1:	jne    0x19ed6
   19ec3:	mov    DWORD PTR [ebp-0x8],0x5bf6
   19eca:	mov    DWORD PTR [ebp-0x4],0x19d2e
   19ed1:	lea    eax,[ebp-0x8]
   19ed4:	jmp    0x19ee7
   19ed6:	mov    DWORD PTR [ebp-0x10],0x52f6
   19edd:	mov    DWORD PTR [ebp-0xc],0x19d2e
   19ee4:	lea    eax,[ebp-0x10]
   19ee7:	push   eax
   19ee8:	call   0x19d2e
   19eed:	leave  
   19eee:	ret    0xc
   19ef1:	int3   
   19ef2:	int3   
   19ef3:	int3   
   19ef4:	int3   
   19ef5:	int3   
   19ef6:	mov    edi,edi
   19ef8:	push   ebp
   19ef9:	mov    ebp,esp
   19efb:	mov    eax,DWORD PTR [ebp+0x10]
   19efe:	sub    esp,0x10
   19f01:	test   BYTE PTR [eax+0x1],0x38
   19f05:	push   eax
   19f06:	push   DWORD PTR [ebp+0xc]
   19f09:	jne    0x19f1e
   19f0b:	mov    DWORD PTR [ebp-0x8],0x66f7
   19f12:	mov    DWORD PTR [ebp-0x4],0x19d2e
   19f19:	lea    eax,[ebp-0x8]
   19f1c:	jmp    0x19f2f
   19f1e:	mov    DWORD PTR [ebp-0x10],0x52f7
   19f25:	mov    DWORD PTR [ebp-0xc],0x19d2e
   19f2c:	lea    eax,[ebp-0x10]
   19f2f:	push   eax
   19f30:	call   0x19d2e
   19f35:	leave  
   19f36:	ret    0xc
   19f39:	int3   
   19f3a:	int3   
   19f3b:	int3   
   19f3c:	int3   
   19f3d:	int3   
   19f3e:	mov    edi,edi
   19f40:	push   ebp
   19f41:	mov    ebp,esp
   19f43:	push   ecx
   19f44:	push   ecx
   19f45:	mov    edx,DWORD PTR [ebp+0x10]
   19f48:	mov    al,BYTE PTR [edx+0x1]
   19f4b:	cmp    al,0x15
   19f4d:	je     0x19f6d
   19f4f:	cmp    al,0x25
   19f51:	je     0x19f6d
   19f53:	and    al,0x38
   19f55:	cmp    al,0x10
   19f57:	je     0x19f65
   19f59:	cmp    al,0x18
   19f5b:	je     0x19f65
   19f5d:	cmp    al,0x20
   19f5f:	je     0x19f65
   19f61:	cmp    al,0x28
   19f63:	jne    0x19f79
   19f65:	mov    eax,DWORD PTR [ecx+0x8]
   19f68:	or     DWORD PTR [eax],0xffffffff
   19f6b:	jmp    0x19f79
   19f6d:	mov    eax,DWORD PTR [edx+0x2]
   19f70:	mov    eax,DWORD PTR [eax]
   19f72:	push   esi
   19f73:	mov    esi,DWORD PTR [ecx+0x8]
   19f76:	mov    DWORD PTR [esi],eax
   19f78:	pop    esi
   19f79:	push   edx
   19f7a:	push   DWORD PTR [ebp+0xc]
   19f7d:	lea    eax,[ebp-0x8]
   19f80:	push   eax
   19f81:	mov    DWORD PTR [ebp-0x8],0x52ff
   19f88:	mov    DWORD PTR [ebp-0x4],0x19d2e
   19f8f:	call   0x19d2e
   19f94:	leave  
   19f95:	ret    0xc
   19f98:	int3   
   19f99:	int3   
   19f9a:	int3   
   19f9b:	int3   
   19f9c:	int3   
   19f9d:	int3   
   19f9e:	mov    edi,edi
   19fa0:	push   ebp
   19fa1:	mov    ebp,esp
   19fa3:	sub    esp,0x5c
   19fa6:	mov    eax,ds:0x7e528
   19fab:	xor    eax,ebp
   19fad:	mov    DWORD PTR [ebp-0x4],eax
   19fb0:	mov    eax,DWORD PTR [ebp+0x10]
   19fb3:	push   esi
   19fb4:	mov    esi,DWORD PTR [ebp+0x8]
   19fb7:	push   edi
   19fb8:	mov    edi,DWORD PTR [ebp+0xc]
   19fbb:	push   0x0
   19fbd:	push   eax
   19fbe:	lea    ecx,[ebp-0x5c]
   19fc1:	call   0x19cf4
   19fc6:	push   edi
   19fc7:	push   esi
   19fc8:	lea    ecx,[ebp-0x5c]
   19fcb:	call   0x19c36
   19fd0:	mov    ecx,DWORD PTR [ebp-0x4]
   19fd3:	pop    edi
   19fd4:	xor    ecx,ebp
   19fd6:	pop    esi
   19fd7:	call   0x1da31
   19fdc:	leave  
   19fdd:	ret    0xc
   19fe0:	int3   
   19fe1:	int3   
   19fe2:	int3   
   19fe3:	int3   
   19fe4:	int3   
   19fe5:	int3   
   19fe6:	mov    edi,edi
   19fe8:	push   ebp
   19fe9:	mov    ebp,esp
   19feb:	push   esi
   19fec:	mov    esi,DWORD PTR [ebp+0x8]
   19fef:	push   edi
   19ff0:	mov    edi,ecx
   19ff2:	cmp    edi,esi
   19ff4:	je     0x1a021
   19ff6:	mov    eax,DWORD PTR [edi+0x4]
   19ff9:	cmp    eax,DWORD PTR [esi+0x4]
   19ffc:	je     0x1a010
   19ffe:	cmp    BYTE PTR [edi],0x0
   1a001:	je     0x1a00a
   1a003:	push   eax
   1a004:	call   0x1da14
   1a009:	pop    ecx
   1a00a:	mov    al,BYTE PTR [esi]
   1a00c:	mov    BYTE PTR [edi],al
   1a00e:	jmp    0x1a018
   1a010:	cmp    BYTE PTR [esi],0x0
   1a013:	je     0x1a018
   1a015:	mov    BYTE PTR [edi],0x1
   1a018:	mov    eax,DWORD PTR [esi+0x4]
   1a01b:	mov    BYTE PTR [esi],0x0
   1a01e:	mov    DWORD PTR [edi+0x4],eax
   1a021:	mov    eax,edi
   1a023:	pop    edi
   1a024:	pop    esi
   1a025:	pop    ebp
   1a026:	ret    0x4
   1a029:	int3   
   1a02a:	int3   
   1a02b:	int3   
   1a02c:	int3   
   1a02d:	int3   
   1a02e:	mov    edi,edi
   1a030:	push   ebp
   1a031:	mov    ebp,esp
   1a033:	sub    esp,0x50
   1a036:	push   ebx
   1a037:	push   esi
   1a038:	push   edi
   1a039:	mov    edi,0x4000
   1a03e:	push   edi
   1a03f:	call   0x10a66
   1a044:	pop    ecx
   1a045:	xor    ebx,ebx
   1a047:	push   0x38
   1a049:	push   0x1ec42
   1a04e:	cmp    eax,ebx
   1a050:	mov    DWORD PTR [ebp-0x4],eax
   1a053:	mov    DWORD PTR [ebp-0xc],eax
   1a056:	push   0x2f
   1a058:	lea    eax,[ebp-0x50]
   1a05b:	setne  BYTE PTR [ebp-0x10]
   1a05f:	push   eax
   1a060:	xor    esi,esi
   1a062:	mov    DWORD PTR [ebp-0x30],ebx
   1a065:	mov    DWORD PTR [ebp-0x2c],ebx
   1a068:	mov    DWORD PTR [ebp-0x28],ebx
   1a06b:	mov    DWORD PTR [ebp-0x4c],ebx
   1a06e:	mov    DWORD PTR [ebp-0x50],ebx
   1a071:	call   0x1b900
   1a076:	test   eax,eax
   1a078:	je     0x1a097
   1a07a:	mov    esi,DWORD PTR [ebp+0x8]
   1a07d:	mov    BYTE PTR [esi],bl
   1a07f:	mov    DWORD PTR [esi+0x4],ebx
   1a082:	cmp    BYTE PTR [ebp-0x10],bl
   1a085:	je     0x1a090
   1a087:	push   DWORD PTR [ebp-0x4]
   1a08a:	call   0x1da14
   1a08f:	pop    ecx
   1a090:	mov    eax,esi
   1a092:	jmp    0x1a1ac
   1a097:	mov    eax,DWORD PTR [ebp+0x10]
   1a09a:	mov    DWORD PTR [ebp-0x4c],eax
   1a09d:	mov    eax,DWORD PTR [ebp+0xc]
   1a0a0:	mov    DWORD PTR [ebp-0x50],eax
   1a0a3:	mov    eax,DWORD PTR [ebp-0xc]
   1a0a6:	add    eax,esi
   1a0a8:	mov    DWORD PTR [ebp-0x44],eax
   1a0ab:	push   0x4
   1a0ad:	lea    eax,[ebp-0x50]
   1a0b0:	push   eax
   1a0b1:	mov    DWORD PTR [ebp-0x40],edi
   1a0b4:	call   0x1ba94
   1a0b9:	cmp    eax,0xfffffffc
   1a0bc:	mov    DWORD PTR [ebp+0x10],eax
   1a0bf:	jl     0x1a0d3
   1a0c1:	cmp    eax,0xfffffffd
   1a0c4:	jle    0x1a15c
   1a0ca:	cmp    eax,0x2
   1a0cd:	je     0x1a15c
   1a0d3:	mov    eax,edi
   1a0d5:	sub    eax,DWORD PTR [ebp-0x40]
   1a0d8:	add    esi,eax
   1a0da:	cmp    DWORD PTR [ebp-0x40],ebx
   1a0dd:	jne    0x1a146
   1a0df:	mov    al,BYTE PTR [ebp-0x10]
   1a0e2:	mov    BYTE PTR [ebp-0x18],al
   1a0e5:	mov    eax,DWORD PTR [ebp-0xc]
   1a0e8:	mov    DWORD PTR [ebp-0x14],eax
   1a0eb:	lea    eax,[esi+0x4000]
   1a0f1:	push   eax
   1a0f2:	mov    BYTE PTR [ebp-0x10],bl
   1a0f5:	call   0x10a66
   1a0fa:	pop    ecx
   1a0fb:	cmp    eax,ebx
   1a0fd:	setne  cl
   1a100:	mov    DWORD PTR [ebp-0x4],eax
   1a103:	lea    eax,[ebp-0x8]
   1a106:	mov    BYTE PTR [ebp-0x8],cl
   1a109:	push   eax
   1a10a:	lea    ecx,[ebp-0x10]
   1a10d:	call   0x19fe6
   1a112:	cmp    BYTE PTR [ebp-0x8],bl
   1a115:	je     0x1a120
   1a117:	push   DWORD PTR [ebp-0x4]
   1a11a:	call   0x1da14
   1a11f:	pop    ecx
   1a120:	push   esi
   1a121:	push   DWORD PTR [ebp-0x14]
   1a124:	push   DWORD PTR [ebp-0xc]
   1a127:	call   0x1da96
   1a12c:	add    esp,0xc
   1a12f:	cmp    BYTE PTR [ebp-0x18],bl
   1a132:	je     0x1a13d
   1a134:	push   DWORD PTR [ebp-0x14]
   1a137:	call   0x1da14
   1a13c:	pop    ecx
   1a13d:	cmp    DWORD PTR [ebp-0x40],ebx
   1a140:	je     0x1a0a3
   1a146:	lea    eax,[ebp-0x50]
   1a149:	push   eax
   1a14a:	call   0x1ccba
   1a14f:	cmp    DWORD PTR [ebp+0x10],0x1
   1a153:	jne    0x1a17e
   1a155:	mov    eax,DWORD PTR [ebp+0x14]
   1a158:	mov    DWORD PTR [eax],esi
   1a15a:	jmp    0x1a19e
   1a15c:	lea    eax,[ebp-0x50]
   1a15f:	push   eax
   1a160:	call   0x1ccba
   1a165:	mov    esi,DWORD PTR [ebp+0x8]
   1a168:	mov    BYTE PTR [esi],bl
   1a16a:	mov    DWORD PTR [esi+0x4],ebx
   1a16d:	cmp    BYTE PTR [ebp-0x10],bl
   1a170:	je     0x1a090
   1a176:	push   DWORD PTR [ebp-0xc]
   1a179:	jmp    0x1a08a
   1a17e:	lea    eax,[ebp-0x18]
   1a181:	push   eax
   1a182:	lea    ecx,[ebp-0x10]
   1a185:	mov    BYTE PTR [ebp-0x18],bl
   1a188:	mov    DWORD PTR [ebp-0x14],ebx
   1a18b:	call   0x19fe6
   1a190:	cmp    BYTE PTR [ebp-0x18],bl
   1a193:	je     0x1a19e
   1a195:	push   DWORD PTR [ebp-0x14]
   1a198:	call   0x1da14
   1a19d:	pop    ecx
   1a19e:	mov    eax,DWORD PTR [ebp+0x8]
   1a1a1:	mov    cl,BYTE PTR [ebp-0x10]
   1a1a4:	mov    BYTE PTR [eax],cl
   1a1a6:	mov    ecx,DWORD PTR [ebp-0xc]
   1a1a9:	mov    DWORD PTR [eax+0x4],ecx
   1a1ac:	pop    edi
   1a1ad:	pop    esi
   1a1ae:	pop    ebx
   1a1af:	leave  
   1a1b0:	ret    0x10
   1a1b3:	int3   
   1a1b4:	int3   
   1a1b5:	int3   
   1a1b6:	int3   
   1a1b7:	int3   
   1a1b8:	xor    eax,eax
   1a1ba:	push   eax
   1a1bb:	push   eax
   1a1bc:	push   eax
   1a1bd:	push   eax
   1a1be:	push   0x7fa30
   1a1c3:	call   DWORD PTR ds:0x1ee28
   1a1c9:	test   eax,eax
   1a1cb:	setge  al
   1a1ce:	ret    
   1a1cf:	int3   
   1a1d0:	int3   
   1a1d1:	int3   
   1a1d2:	int3   
   1a1d3:	int3   
   1a1d4:	push   0x0
   1a1d6:	push   0x7fa30
   1a1db:	call   DWORD PTR ds:0x1ee24
   1a1e1:	ret    
   1a1e2:	int3   
   1a1e3:	int3   
   1a1e4:	int3   
   1a1e5:	int3   
   1a1e6:	int3   
   1a1e7:	int3   
   1a1e8:	mov    edi,edi
   1a1ea:	push   esi
   1a1eb:	push   edi
   1a1ec:	push   0x1
   1a1ee:	xor    edi,edi
   1a1f0:	push   edi
   1a1f1:	mov    esi,ecx
   1a1f3:	call   0x139de
   1a1f8:	cmp    DWORD PTR ds:0x7f8d4,edi
   1a1fe:	jne    0x1a215
   1a200:	mov    ecx,eax
   1a202:	mov    DWORD PTR ds:0x7f8d4,ecx
   1a208:	mov    DWORD PTR [ecx],edi
   1a20a:	mov    ecx,DWORD PTR ds:0x7f8d4
   1a210:	xor    eax,eax
   1a212:	mov    DWORD PTR [ecx+0x8],edi
   1a215:	inc    DWORD PTR ds:0x7fa58
   1a21b:	cmp    eax,edi
   1a21d:	je     0x1a226
   1a21f:	push   eax
   1a220:	call   0x1da14
   1a225:	pop    ecx
   1a226:	push   edi
   1a227:	push   DWORD PTR ds:0x7f8d4
   1a22d:	mov    ecx,esi
   1a22f:	call   0x139de
   1a234:	mov    DWORD PTR [esi+0xc],edi
   1a237:	mov    DWORD PTR [esi+0x4],eax
   1a23a:	mov    DWORD PTR [eax],eax
   1a23c:	mov    esi,DWORD PTR [esi+0x4]
   1a23f:	pop    edi
   1a240:	mov    DWORD PTR [esi+0x8],esi
   1a243:	pop    esi
   1a244:	ret    
   1a245:	int3   
   1a246:	int3   
   1a247:	int3   
   1a248:	int3   
   1a249:	int3   
   1a24a:	mov    edi,edi
   1a24c:	push   ebx
   1a24d:	push   esi
   1a24e:	xor    ebx,ebx
   1a250:	push   ebx
   1a251:	push   0x7fa30
   1a256:	call   0x11c16
   1a25b:	call   eax
   1a25d:	push   0x10
   1a25f:	call   0x10a66
   1a264:	mov    esi,eax
   1a266:	pop    ecx
   1a267:	cmp    esi,ebx
   1a269:	je     0x1a27d
   1a26b:	mov    ecx,esi
   1a26d:	mov    BYTE PTR [esi+0x8],bl
   1a270:	call   0x1a1e8
   1a275:	mov    DWORD PTR ds:0x7fa50,esi
   1a27b:	jmp    0x1a283
   1a27d:	mov    DWORD PTR ds:0x7fa50,ebx
   1a283:	push   0x10
   1a285:	call   0x10a66
   1a28a:	mov    esi,eax
   1a28c:	pop    ecx
   1a28d:	cmp    esi,ebx
   1a28f:	je     0x1a2a3
   1a291:	mov    ecx,esi
   1a293:	mov    BYTE PTR [esi+0x8],bl
   1a296:	call   0x140ee
   1a29b:	mov    DWORD PTR ds:0x7fa54,esi
   1a2a1:	jmp    0x1a2a9
   1a2a3:	mov    DWORD PTR ds:0x7fa54,ebx
   1a2a9:	pop    esi
   1a2aa:	pop    ebx
   1a2ab:	ret    
   1a2ac:	int3   
   1a2ad:	int3   
   1a2ae:	int3   
   1a2af:	int3   
   1a2b0:	int3   
   1a2b1:	int3   
   1a2b2:	mov    eax,ecx
   1a2b4:	add    DWORD PTR [eax+0x8],0x4
   1a2b8:	mov    ecx,DWORD PTR [eax+0x8]
   1a2bb:	cmp    ecx,DWORD PTR [eax+0x4]
   1a2be:	jne    0x1a2d9
   1a2c0:	add    DWORD PTR [eax+0xc],0x4
   1a2c4:	mov    ecx,DWORD PTR [eax+0xc]
   1a2c7:	mov    ecx,DWORD PTR [ecx]
   1a2c9:	mov    DWORD PTR [eax],ecx
   1a2cb:	add    ecx,0x1000
   1a2d1:	mov    DWORD PTR [eax+0x4],ecx
   1a2d4:	mov    ecx,DWORD PTR [eax]
   1a2d6:	mov    DWORD PTR [eax+0x8],ecx
   1a2d9:	ret    
   1a2da:	int3   
   1a2db:	int3   
   1a2dc:	int3   
   1a2dd:	int3   
   1a2de:	int3   
   1a2df:	int3   
   1a2e0:	mov    edi,edi
   1a2e2:	push   ebp
   1a2e3:	mov    ebp,esp
   1a2e5:	mov    eax,ecx
   1a2e7:	mov    ecx,DWORD PTR [ebp+0xc]
   1a2ea:	mov    edx,DWORD PTR [ecx]
   1a2ec:	mov    DWORD PTR [eax],edx
   1a2ee:	mov    edx,DWORD PTR [ecx]
   1a2f0:	add    edx,0x1000
   1a2f6:	mov    DWORD PTR [eax+0x4],edx
   1a2f9:	mov    edx,DWORD PTR [ebp+0x8]
   1a2fc:	mov    DWORD PTR [eax+0x8],edx
   1a2ff:	mov    DWORD PTR [eax+0xc],ecx
   1a302:	pop    ebp
   1a303:	ret    0x8
   1a306:	int3   
   1a307:	int3   
   1a308:	int3   
   1a309:	int3   
   1a30a:	int3   
   1a30b:	int3   
   1a30c:	mov    edi,edi
   1a30e:	push   ebp
   1a30f:	mov    ebp,esp
   1a311:	mov    eax,DWORD PTR [ebp+0x8]
   1a314:	mov    edx,DWORD PTR ds:0x7fa8c
   1a31a:	jmp    0x1a31e
   1a31c:	mov    eax,ecx
   1a31e:	mov    ecx,DWORD PTR [eax+0x8]
   1a321:	cmp    ecx,edx
   1a323:	jne    0x1a31c
   1a325:	pop    ebp
   1a326:	ret    0x4
   1a329:	int3   
   1a32a:	int3   
   1a32b:	int3   
   1a32c:	int3   
   1a32d:	int3   
   1a32e:	mov    edi,edi
   1a330:	push   ebp
   1a331:	mov    ebp,esp
   1a333:	mov    eax,DWORD PTR [ebp+0x8]
   1a336:	mov    edx,DWORD PTR ds:0x7fa8c
   1a33c:	jmp    0x1a340
   1a33e:	mov    eax,ecx
   1a340:	mov    ecx,DWORD PTR [eax]
   1a342:	cmp    ecx,edx
   1a344:	jne    0x1a33e
   1a346:	pop    ebp
   1a347:	ret    0x4
   1a34a:	int3   
   1a34b:	int3   
   1a34c:	int3   
   1a34d:	int3   
   1a34e:	int3   
   1a34f:	int3   
   1a350:	mov    edi,edi
   1a352:	push   esi
   1a353:	mov    esi,ecx
   1a355:	mov    ecx,DWORD PTR [esi]
   1a357:	mov    eax,DWORD PTR [ecx+0x8]
   1a35a:	cmp    eax,DWORD PTR ds:0x7fa8c
   1a360:	je     0x1a36e
   1a362:	push   eax
   1a363:	call   0x1a32e
   1a368:	jmp    0x1a37d
   1a36a:	mov    DWORD PTR [esi],eax
   1a36c:	mov    ecx,eax
   1a36e:	mov    eax,DWORD PTR [ecx+0x4]
   1a371:	cmp    ecx,DWORD PTR [eax+0x8]
   1a374:	je     0x1a36a
   1a376:	mov    ecx,DWORD PTR [esi]
   1a378:	cmp    DWORD PTR [ecx+0x8],eax
   1a37b:	je     0x1a37f
   1a37d:	mov    DWORD PTR [esi],eax
   1a37f:	pop    esi
   1a380:	ret    
   1a381:	int3   
   1a382:	int3   
   1a383:	int3   
   1a384:	int3   
   1a385:	int3   
   1a386:	mov    edi,edi
   1a388:	push   ebp
   1a389:	mov    ebp,esp
   1a38b:	mov    eax,DWORD PTR [ebp+0x8]
   1a38e:	jmp    0x1a39e
   1a390:	mov    ecx,DWORD PTR [eax]
   1a392:	mov    edx,DWORD PTR [ebp+0x10]
   1a395:	add    DWORD PTR [ebp+0x10],0x4
   1a399:	mov    DWORD PTR [edx],ecx
   1a39b:	add    eax,0x4
   1a39e:	cmp    eax,DWORD PTR [ebp+0xc]
   1a3a1:	jne    0x1a390
   1a3a3:	mov    eax,DWORD PTR [ebp+0x10]
   1a3a6:	pop    ebp
   1a3a7:	ret    0xc
   1a3aa:	int3   
   1a3ab:	int3   
   1a3ac:	int3   
   1a3ad:	int3   
   1a3ae:	int3   
   1a3af:	int3   
   1a3b0:	mov    edi,edi
   1a3b2:	push   ebp
   1a3b3:	mov    ebp,esp
   1a3b5:	mov    eax,DWORD PTR [ebp+0x8]
   1a3b8:	test   eax,eax
   1a3ba:	jge    0x1a3be
   1a3bc:	xor    eax,eax
   1a3be:	shl    eax,0x2
   1a3c1:	push   eax
   1a3c2:	call   0x10a66
   1a3c7:	pop    ecx
   1a3c8:	pop    ebp
   1a3c9:	ret    0x8
   1a3cc:	int3   
   1a3cd:	int3   
   1a3ce:	int3   
   1a3cf:	int3   
   1a3d0:	int3   
   1a3d1:	int3   
   1a3d2:	mov    edi,edi
   1a3d4:	push   ebp
   1a3d5:	mov    ebp,esp
   1a3d7:	mov    eax,DWORD PTR [ebp+0x8]
   1a3da:	test   eax,eax
   1a3dc:	je     0x1a3e5
   1a3de:	mov    ecx,DWORD PTR [ebp+0xc]
   1a3e1:	mov    ecx,DWORD PTR [ecx]
   1a3e3:	mov    DWORD PTR [eax],ecx
   1a3e5:	pop    ebp
   1a3e6:	ret    0x8
   1a3e9:	int3   
   1a3ea:	int3   
   1a3eb:	int3   
   1a3ec:	int3   
   1a3ed:	int3   
   1a3ee:	mov    edi,edi
   1a3f0:	push   ebp
   1a3f1:	mov    ebp,esp
   1a3f3:	push   esi
   1a3f4:	mov    esi,ecx
   1a3f6:	push   DWORD PTR [esi]
   1a3f8:	call   0x1da14
   1a3fd:	test   BYTE PTR [ebp+0x8],0x1
   1a401:	pop    ecx
   1a402:	je     0x1a40b
   1a404:	push   esi
   1a405:	call   0x1da14
   1a40a:	pop    ecx
   1a40b:	mov    eax,esi
   1a40d:	pop    esi
   1a40e:	pop    ebp
   1a40f:	ret    0x4
   1a412:	int3   
   1a413:	int3   
   1a414:	int3   
   1a415:	int3   
   1a416:	int3   
   1a417:	int3   
   1a418:	mov    edi,edi
   1a41a:	push   ebp
   1a41b:	mov    ebp,esp
   1a41d:	mov    eax,ds:0x7fa84
   1a422:	sub    esp,0x20
   1a425:	push   ebx
   1a426:	push   esi
   1a427:	push   edi
   1a428:	lea    esi,[eax+0x4]
   1a42b:	lea    edi,[ebp-0x10]
   1a42e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a42f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a430:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a431:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a432:	lea    ebx,[eax+0x14]
   1a435:	jmp    0x1a453
   1a437:	mov    eax,DWORD PTR [eax]
   1a439:	mov    ecx,DWORD PTR [eax+0x8]
   1a43c:	cmp    ecx,DWORD PTR [ebp+0x8]
   1a43f:	jne    0x1a44b
   1a441:	cmp    BYTE PTR [eax+0x24],0x0
   1a445:	jne    0x1a464
   1a447:	mov    BYTE PTR [eax+0x24],0x1
   1a44b:	lea    ecx,[ebp-0x10]
   1a44e:	call   0x1a2b2
   1a453:	mov    eax,DWORD PTR [ebp-0x8]
   1a456:	lea    edi,[ebp-0x20]
   1a459:	mov    esi,ebx
   1a45b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a45c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a45d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a45e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a45f:	cmp    eax,DWORD PTR [ebp-0x18]
   1a462:	jne    0x1a437
   1a464:	pop    edi
   1a465:	pop    esi
   1a466:	pop    ebx
   1a467:	leave  
   1a468:	ret    0x4
   1a46b:	int3   
   1a46c:	int3   
   1a46d:	int3   
   1a46e:	int3   
   1a46f:	int3   
   1a470:	mov    eax,ecx
   1a472:	xor    ecx,ecx
   1a474:	mov    DWORD PTR [eax+0x4],ecx
   1a477:	mov    DWORD PTR [eax+0x8],ecx
   1a47a:	mov    DWORD PTR [eax+0xc],ecx
   1a47d:	mov    DWORD PTR [eax+0x10],ecx
   1a480:	mov    DWORD PTR [eax+0x14],ecx
   1a483:	mov    DWORD PTR [eax+0x18],ecx
   1a486:	mov    DWORD PTR [eax+0x1c],ecx
   1a489:	mov    DWORD PTR [eax+0x20],ecx
   1a48c:	mov    DWORD PTR [eax+0x24],ecx
   1a48f:	mov    DWORD PTR [eax+0x28],ecx
   1a492:	mov    DWORD PTR [eax+0x2c],ecx
   1a495:	ret    0x4
   1a498:	int3   
   1a499:	int3   
   1a49a:	int3   
   1a49b:	int3   
   1a49c:	int3   
   1a49d:	int3   
   1a49e:	mov    edi,edi
   1a4a0:	push   ebp
   1a4a1:	mov    ebp,esp
   1a4a3:	sub    esp,0x10
   1a4a6:	push   esi
   1a4a7:	push   edi
   1a4a8:	lea    esi,[ecx+0x4]
   1a4ab:	lea    edi,[ebp-0x10]
   1a4ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a4af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a4b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a4b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a4b2:	mov    eax,DWORD PTR [ebp-0x8]
   1a4b5:	pop    edi
   1a4b6:	pop    esi
   1a4b7:	leave  
   1a4b8:	ret    
   1a4b9:	int3   
   1a4ba:	int3   
   1a4bb:	int3   
   1a4bc:	int3   
   1a4bd:	int3   
   1a4be:	mov    edi,edi
   1a4c0:	push   ebp
   1a4c1:	mov    ebp,esp
   1a4c3:	mov    edx,DWORD PTR [ebp+0x8]
   1a4c6:	mov    eax,DWORD PTR [edx+0x8]
   1a4c9:	push   esi
   1a4ca:	mov    esi,DWORD PTR [eax]
   1a4cc:	mov    DWORD PTR [edx+0x8],esi
   1a4cf:	mov    esi,DWORD PTR [eax]
   1a4d1:	cmp    esi,DWORD PTR ds:0x7fa8c
   1a4d7:	je     0x1a4dc
   1a4d9:	mov    DWORD PTR [esi+0x4],edx
   1a4dc:	mov    esi,DWORD PTR [edx+0x4]
   1a4df:	mov    DWORD PTR [eax+0x4],esi
   1a4e2:	mov    ecx,DWORD PTR [ecx+0x4]
   1a4e5:	pop    esi
   1a4e6:	cmp    edx,DWORD PTR [ecx+0x4]
   1a4e9:	jne    0x1a4f0
   1a4eb:	mov    DWORD PTR [ecx+0x4],eax
   1a4ee:	jmp    0x1a4fe
   1a4f0:	mov    ecx,DWORD PTR [edx+0x4]
   1a4f3:	cmp    edx,DWORD PTR [ecx]
   1a4f5:	jne    0x1a4fb
   1a4f7:	mov    DWORD PTR [ecx],eax
   1a4f9:	jmp    0x1a4fe
   1a4fb:	mov    DWORD PTR [ecx+0x8],eax
   1a4fe:	mov    DWORD PTR [eax],edx
   1a500:	mov    DWORD PTR [edx+0x4],eax
   1a503:	pop    ebp
   1a504:	ret    0x4
   1a507:	int3   
   1a508:	int3   
   1a509:	int3   
   1a50a:	int3   
   1a50b:	int3   
   1a50c:	mov    edi,edi
   1a50e:	push   ebp
   1a50f:	mov    ebp,esp
   1a511:	mov    edx,DWORD PTR [ebp+0x8]
   1a514:	mov    eax,DWORD PTR [edx]
   1a516:	push   esi
   1a517:	mov    esi,DWORD PTR [eax+0x8]
   1a51a:	mov    DWORD PTR [edx],esi
   1a51c:	mov    esi,DWORD PTR [eax+0x8]
   1a51f:	cmp    esi,DWORD PTR ds:0x7fa8c
   1a525:	je     0x1a52a
   1a527:	mov    DWORD PTR [esi+0x4],edx
   1a52a:	mov    esi,DWORD PTR [edx+0x4]
   1a52d:	mov    DWORD PTR [eax+0x4],esi
   1a530:	mov    ecx,DWORD PTR [ecx+0x4]
   1a533:	pop    esi
   1a534:	cmp    edx,DWORD PTR [ecx+0x4]
   1a537:	jne    0x1a53e
   1a539:	mov    DWORD PTR [ecx+0x4],eax
   1a53c:	jmp    0x1a54d
   1a53e:	mov    ecx,DWORD PTR [edx+0x4]
   1a541:	cmp    edx,DWORD PTR [ecx+0x8]
   1a544:	jne    0x1a54b
   1a546:	mov    DWORD PTR [ecx+0x8],eax
   1a549:	jmp    0x1a54d
   1a54b:	mov    DWORD PTR [ecx],eax
   1a54d:	mov    DWORD PTR [eax+0x8],edx
   1a550:	mov    DWORD PTR [edx+0x4],eax
   1a553:	pop    ebp
   1a554:	ret    0x4
   1a557:	int3   
   1a558:	int3   
   1a559:	int3   
   1a55a:	int3   
   1a55b:	int3   
   1a55c:	mov    edi,edi
   1a55e:	push   esi
   1a55f:	mov    esi,ecx
   1a561:	mov    ecx,DWORD PTR [esi]
   1a563:	cmp    DWORD PTR [ecx+0x14],0x0
   1a567:	jne    0x1a576
   1a569:	mov    eax,DWORD PTR [ecx+0x4]
   1a56c:	cmp    DWORD PTR [eax+0x4],ecx
   1a56f:	jne    0x1a576
   1a571:	mov    eax,DWORD PTR [ecx+0x8]
   1a574:	jmp    0x1a593
   1a576:	mov    eax,DWORD PTR [ecx]
   1a578:	cmp    eax,DWORD PTR ds:0x7fa8c
   1a57e:	je     0x1a58c
   1a580:	push   eax
   1a581:	call   0x1a30c
   1a586:	jmp    0x1a593
   1a588:	mov    DWORD PTR [esi],eax
   1a58a:	mov    ecx,eax
   1a58c:	mov    eax,DWORD PTR [ecx+0x4]
   1a58f:	cmp    ecx,DWORD PTR [eax]
   1a591:	je     0x1a588
   1a593:	mov    DWORD PTR [esi],eax
   1a595:	pop    esi
   1a596:	ret    
   1a597:	int3   
   1a598:	int3   
   1a599:	int3   
   1a59a:	int3   
   1a59b:	int3   
   1a59c:	mov    edi,edi
   1a59e:	push   ebp
   1a59f:	mov    ebp,esp
   1a5a1:	mov    eax,DWORD PTR [ecx+0x4]
   1a5a4:	push   esi
   1a5a5:	mov    esi,DWORD PTR [eax+0x4]
   1a5a8:	push   edi
   1a5a9:	mov    edi,eax
   1a5ab:	jmp    0x1a5c6
   1a5ad:	push   DWORD PTR [ebp+0x8]
   1a5b0:	lea    eax,[esi+0xc]
   1a5b3:	push   eax
   1a5b4:	call   0x197a4
   1a5b9:	test   al,al
   1a5bb:	je     0x1a5c2
   1a5bd:	mov    esi,DWORD PTR [esi+0x8]
   1a5c0:	jmp    0x1a5c6
   1a5c2:	mov    edi,esi
   1a5c4:	mov    esi,DWORD PTR [esi]
   1a5c6:	cmp    esi,DWORD PTR ds:0x7fa8c
   1a5cc:	jne    0x1a5ad
   1a5ce:	mov    eax,edi
   1a5d0:	pop    edi
   1a5d1:	pop    esi
   1a5d2:	pop    ebp
   1a5d3:	ret    0x4
   1a5d6:	int3   
   1a5d7:	int3   
   1a5d8:	int3   
   1a5d9:	int3   
   1a5da:	int3   
   1a5db:	int3   
   1a5dc:	mov    edi,edi
   1a5de:	push   ebp
   1a5df:	mov    ebp,esp
   1a5e1:	mov    eax,DWORD PTR [ecx+0x4]
   1a5e4:	push   esi
   1a5e5:	mov    esi,DWORD PTR [eax+0x4]
   1a5e8:	push   edi
   1a5e9:	mov    edi,eax
   1a5eb:	jmp    0x1a606
   1a5ed:	lea    eax,[esi+0xc]
   1a5f0:	push   eax
   1a5f1:	push   DWORD PTR [ebp+0x8]
   1a5f4:	call   0x197a4
   1a5f9:	test   al,al
   1a5fb:	je     0x1a603
   1a5fd:	mov    edi,esi
   1a5ff:	mov    esi,DWORD PTR [esi]
   1a601:	jmp    0x1a606
   1a603:	mov    esi,DWORD PTR [esi+0x8]
   1a606:	cmp    esi,DWORD PTR ds:0x7fa8c
   1a60c:	jne    0x1a5ed
   1a60e:	mov    eax,edi
   1a610:	pop    edi
   1a611:	pop    esi
   1a612:	pop    ebp
   1a613:	ret    0x4
   1a616:	int3   
   1a617:	int3   
   1a618:	int3   
   1a619:	int3   
   1a61a:	int3   
   1a61b:	int3   
   1a61c:	mov    edi,edi
   1a61e:	push   ebp
   1a61f:	mov    ebp,esp
   1a621:	mov    ecx,DWORD PTR [ebp+0x8]
   1a624:	test   ecx,ecx
   1a626:	je     0x1a630
   1a628:	push   DWORD PTR [ebp+0xc]
   1a62b:	call   0x1298e
   1a630:	pop    ebp
   1a631:	ret    0x8
   1a634:	int3   
   1a635:	int3   
   1a636:	int3   
   1a637:	int3   
   1a638:	int3   
   1a639:	int3   
   1a63a:	mov    edi,edi
   1a63c:	push   ebp
   1a63d:	mov    ebp,esp
   1a63f:	mov    ecx,DWORD PTR [ebp+0x8]
   1a642:	push   0x0
   1a644:	call   0x1a3ee
   1a649:	pop    ebp
   1a64a:	ret    0x4
   1a64d:	int3   
   1a64e:	int3   
   1a64f:	int3   
   1a650:	int3   
   1a651:	int3   
   1a652:	mov    edi,edi
   1a654:	push   ebp
   1a655:	mov    ebp,esp
   1a657:	mov    eax,DWORD PTR [ebp+0xc]
   1a65a:	mov    ecx,DWORD PTR [eax+0x34]
   1a65d:	lea    eax,[ecx+eax*1+0x40]
   1a661:	mov    ecx,DWORD PTR [ebp+0x8]
   1a664:	push   0xffffffff
   1a666:	push   eax
   1a667:	call   0x1296e
   1a66c:	mov    eax,DWORD PTR [ebp+0x8]
   1a66f:	pop    ebp
   1a670:	ret    0x8
   1a673:	int3   
   1a674:	int3   
   1a675:	int3   
   1a676:	int3   
   1a677:	int3   
   1a678:	mov    edi,edi
   1a67a:	push   ebp
   1a67b:	mov    ebp,esp
   1a67d:	mov    eax,DWORD PTR [ebp+0xc]
   1a680:	mov    ecx,DWORD PTR [eax+0x38]
   1a683:	lea    eax,[ecx+eax*1+0x40]
   1a687:	mov    ecx,DWORD PTR [ebp+0x8]
   1a68a:	push   0xffffffff
   1a68c:	push   eax
   1a68d:	call   0x1296e
   1a692:	mov    eax,DWORD PTR [ebp+0x8]
   1a695:	pop    ebp
   1a696:	ret    0x8
   1a699:	int3   
   1a69a:	int3   
   1a69b:	int3   
   1a69c:	int3   
   1a69d:	int3   
   1a69e:	mov    edi,edi
   1a6a0:	push   ebp
   1a6a1:	mov    ebp,esp
   1a6a3:	mov    eax,DWORD PTR [ebp+0xc]
   1a6a6:	mov    ecx,DWORD PTR [eax+0x3c]
   1a6a9:	lea    eax,[ecx+eax*1+0x40]
   1a6ad:	mov    ecx,DWORD PTR [ebp+0x8]
   1a6b0:	push   0xffffffff
   1a6b2:	push   eax
   1a6b3:	call   0x1296e
   1a6b8:	mov    eax,DWORD PTR [ebp+0x8]
   1a6bb:	pop    ebp
   1a6bc:	ret    0x8
   1a6bf:	int3   
   1a6c0:	int3   
   1a6c1:	int3   
   1a6c2:	int3   
   1a6c3:	int3   
   1a6c4:	mov    edi,edi
   1a6c6:	push   ebp
   1a6c7:	mov    ebp,esp
   1a6c9:	sub    esp,0x1c
   1a6cc:	mov    eax,ds:0x7fa84
   1a6d1:	and    DWORD PTR [ebp-0x4],0x0
   1a6d5:	push   ebx
   1a6d6:	mov    ebx,DWORD PTR [ebp+0x8]
   1a6d9:	push   esi
   1a6da:	push   edi
   1a6db:	lea    esi,[eax+0x4]
   1a6de:	mov    edi,ebx
   1a6e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a6e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a6e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a6e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a6e4:	lea    esi,[eax+0x14]
   1a6e7:	jmp    0x1a744
   1a6e9:	push   DWORD PTR [ebp+0xc]
   1a6ec:	mov    eax,DWORD PTR [ebx+0x8]
   1a6ef:	push   DWORD PTR [eax]
   1a6f1:	or     DWORD PTR [ebp-0x4],0x1
   1a6f5:	lea    eax,[ebp-0xc]
   1a6f8:	push   eax
   1a6f9:	call   0x1a69e
   1a6fe:	push   eax
   1a6ff:	call   0x197b4
   1a704:	test   al,al
   1a706:	je     0x1a717
   1a708:	mov    eax,DWORD PTR [ebx+0x8]
   1a70b:	mov    eax,DWORD PTR [eax]
   1a70d:	cmp    BYTE PTR [eax+0x1c],0x0
   1a711:	mov    BYTE PTR [ebp+0xb],0x1
   1a715:	jne    0x1a71b
   1a717:	mov    BYTE PTR [ebp+0xb],0x0
   1a71b:	test   BYTE PTR [ebp-0x4],0x1
   1a71f:	je     0x1a72e
   1a721:	push   DWORD PTR [ebp-0xc]
   1a724:	and    DWORD PTR [ebp-0x4],0xfffffffe
   1a728:	call   0x1da14
   1a72d:	pop    ecx
   1a72e:	cmp    BYTE PTR [ebp+0xb],0x0
   1a732:	jne    0x1a753
   1a734:	mov    ecx,ebx
   1a736:	call   0x1a2b2
   1a73b:	mov    esi,DWORD PTR ds:0x7fa84
   1a741:	add    esi,0x14
   1a744:	mov    eax,DWORD PTR [ebx+0x8]
   1a747:	lea    edi,[ebp-0x1c]
   1a74a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a74b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a74c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a74d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a74e:	cmp    eax,DWORD PTR [ebp-0x14]
   1a751:	jne    0x1a6e9
   1a753:	pop    edi
   1a754:	pop    esi
   1a755:	mov    eax,ebx
   1a757:	pop    ebx
   1a758:	leave  
   1a759:	ret    0x8
   1a75c:	int3   
   1a75d:	int3   
   1a75e:	int3   
   1a75f:	int3   
   1a760:	int3   
   1a761:	int3   
   1a762:	mov    edi,edi
   1a764:	push   ebp
   1a765:	mov    ebp,esp
   1a767:	sub    esp,0x28
   1a76a:	mov    eax,DWORD PTR [ebp+0x8]
   1a76d:	push   ebx
   1a76e:	push   esi
   1a76f:	push   edi
   1a770:	lea    esi,[eax+0x4]
   1a773:	mov    DWORD PTR [ebp-0x8],esi
   1a776:	lea    edi,[ebp-0x18]
   1a779:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a77a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a77b:	and    DWORD PTR [ebp-0x4],0x0
   1a77f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a780:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a781:	lea    ecx,[eax+0x14]
   1a784:	mov    eax,DWORD PTR [ebp-0x10]
   1a787:	mov    esi,ecx
   1a789:	lea    edi,[ebp-0x28]
   1a78c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a78d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a78e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a78f:	push   0x4
   1a791:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a792:	pop    ebx
   1a793:	mov    DWORD PTR [ebp+0x8],ecx
   1a796:	cmp    eax,DWORD PTR [ebp-0x20]
   1a799:	je     0x1a7bb
   1a79b:	mov    esi,ecx
   1a79d:	lea    edi,[ebp-0x28]
   1a7a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7a4:	mov    eax,DWORD PTR [eax]
   1a7a6:	add    ebx,DWORD PTR [eax]
   1a7a8:	inc    DWORD PTR [ebp-0x4]
   1a7ab:	lea    ecx,[ebp-0x18]
   1a7ae:	call   0x1a2b2
   1a7b3:	mov    eax,DWORD PTR [ebp-0x10]
   1a7b6:	cmp    eax,DWORD PTR [ebp-0x20]
   1a7b9:	jne    0x1a7a4
   1a7bb:	mov    eax,DWORD PTR [ebp+0xc]
   1a7be:	cmp    ebx,DWORD PTR [eax+0x4]
   1a7c1:	mov    DWORD PTR [eax+0x4],ebx
   1a7c4:	jbe    0x1a7ce
   1a7c6:	mov    DWORD PTR [eax],0x1
   1a7cc:	jmp    0x1a814
   1a7ce:	and    DWORD PTR [eax],0x0
   1a7d1:	mov    esi,DWORD PTR [ebp-0x8]
   1a7d4:	lea    ebx,[eax+0x8]
   1a7d7:	mov    eax,DWORD PTR [ebp-0x4]
   1a7da:	mov    DWORD PTR [ebx],eax
   1a7dc:	lea    edi,[ebp-0x28]
   1a7df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7e2:	add    ebx,0x4
   1a7e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7e6:	jmp    0x1a802
   1a7e8:	mov    eax,DWORD PTR [esi]
   1a7ea:	push   DWORD PTR [eax]
   1a7ec:	push   eax
   1a7ed:	push   ebx
   1a7ee:	call   0x1da96
   1a7f3:	mov    eax,DWORD PTR [esi]
   1a7f5:	add    ebx,DWORD PTR [eax]
   1a7f7:	add    esp,0xc
   1a7fa:	lea    ecx,[ebp-0x28]
   1a7fd:	call   0x1a2b2
   1a802:	mov    esi,DWORD PTR [ebp+0x8]
   1a805:	lea    edi,[ebp-0x18]
   1a808:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a809:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a80a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a80b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a80c:	mov    esi,DWORD PTR [ebp-0x20]
   1a80f:	cmp    esi,DWORD PTR [ebp-0x10]
   1a812:	jne    0x1a7e8
   1a814:	pop    edi
   1a815:	pop    esi
   1a816:	pop    ebx
   1a817:	leave  
   1a818:	ret    0x8
   1a81b:	int3   
   1a81c:	int3   
   1a81d:	int3   
   1a81e:	int3   
   1a81f:	int3   
   1a820:	push   0x8
   1a822:	push   0x7e1b0
   1a827:	call   0x1dad4
   1a82c:	xor    esi,esi
   1a82e:	push   esi
   1a82f:	push   esi
   1a830:	push   esi
   1a831:	push   esi
   1a832:	push   0x7fa5c
   1a837:	call   DWORD PTR ds:0x1ee28
   1a83d:	cmp    eax,esi
   1a83f:	jl     0x1a880
   1a841:	mov    DWORD PTR [ebp-0x4],esi
   1a844:	push   DWORD PTR [ebp+0x8]
   1a847:	push   DWORD PTR ds:0x7fa84
   1a84d:	call   0x1a762
   1a852:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1a859:	jmp    0x1a874
   1a85b:	xor    eax,eax
   1a85d:	inc    eax
   1a85e:	ret    
   1a85f:	mov    esp,DWORD PTR [ebp-0x18]
   1a862:	mov    eax,DWORD PTR [ebp+0x8]
   1a865:	mov    DWORD PTR [eax],0x2
   1a86b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1a872:	xor    esi,esi
   1a874:	push   esi
   1a875:	push   0x7fa5c
   1a87a:	call   DWORD PTR ds:0x1ee24
   1a880:	call   0x1db19
   1a885:	ret    0x4
   1a888:	int3   
   1a889:	int3   
   1a88a:	int3   
   1a88b:	int3   
   1a88c:	int3   
   1a88d:	int3   
   1a88e:	mov    edi,edi
   1a890:	push   ebp
   1a891:	mov    ebp,esp
   1a893:	sub    esp,0x10
   1a896:	push   ebx
   1a897:	mov    ebx,ecx
   1a899:	mov    eax,DWORD PTR [ebx+0x10]
   1a89c:	push   esi
   1a89d:	lea    ecx,[eax+0x4]
   1a8a0:	push   edi
   1a8a1:	mov    DWORD PTR [ebx+0x10],ecx
   1a8a4:	push   DWORD PTR [eax]
   1a8a6:	call   0x1da14
   1a8ab:	xor    eax,eax
   1a8ad:	pop    ecx
   1a8ae:	cmp    DWORD PTR [ebx+0x2c],eax
   1a8b1:	jne    0x1a8de
   1a8b3:	mov    DWORD PTR [ebp-0x10],eax
   1a8b6:	mov    DWORD PTR [ebp-0xc],eax
   1a8b9:	mov    DWORD PTR [ebp-0x8],eax
   1a8bc:	mov    DWORD PTR [ebp-0x4],eax
   1a8bf:	lea    edi,[ebx+0x4]
   1a8c2:	lea    esi,[ebp-0x10]
   1a8c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a8c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a8c7:	push   DWORD PTR [ebx+0x24]
   1a8ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a8cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a8cc:	lea    edi,[ebx+0x14]
   1a8cf:	lea    esi,[ebp-0x10]
   1a8d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a8d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a8d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a8d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a8d6:	call   0x1da14
   1a8db:	pop    ecx
   1a8dc:	jmp    0x1a8f5
   1a8de:	mov    eax,DWORD PTR [ebx+0x10]
   1a8e1:	push   eax
   1a8e2:	push   DWORD PTR [eax]
   1a8e4:	lea    ecx,[ebp-0x10]
   1a8e7:	call   0x1a2e0
   1a8ec:	lea    edi,[ebx+0x4]
   1a8ef:	mov    esi,eax
   1a8f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a8f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a8f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a8f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a8f5:	pop    edi
   1a8f6:	pop    esi
   1a8f7:	pop    ebx
   1a8f8:	leave  
   1a8f9:	ret    
   1a8fa:	int3   
   1a8fb:	int3   
   1a8fc:	int3   
   1a8fd:	int3   
   1a8fe:	int3   
   1a8ff:	int3   
   1a900:	mov    edi,edi
   1a902:	push   ebp
   1a903:	mov    ebp,esp
   1a905:	mov    eax,DWORD PTR [ebp+0xc]
   1a908:	push   esi
   1a909:	mov    esi,ecx
   1a90b:	mov    ecx,DWORD PTR [eax]
   1a90d:	mov    DWORD PTR [ebp+0xc],ecx
   1a910:	mov    ecx,DWORD PTR [eax+0x4]
   1a913:	mov    edx,DWORD PTR [eax]
   1a915:	mov    DWORD PTR [ecx],edx
   1a917:	mov    ecx,DWORD PTR [eax]
   1a919:	mov    edx,DWORD PTR [eax+0x4]
   1a91c:	push   eax
   1a91d:	mov    DWORD PTR [ecx+0x4],edx
   1a920:	call   0x1da14
   1a925:	mov    eax,DWORD PTR [ebp+0x8]
   1a928:	dec    DWORD PTR [esi+0x8]
   1a92b:	pop    ecx
   1a92c:	mov    ecx,DWORD PTR [ebp+0xc]
   1a92f:	mov    DWORD PTR [eax],ecx
   1a931:	pop    esi
   1a932:	pop    ebp
   1a933:	ret    0x8
   1a936:	int3   
   1a937:	int3   
   1a938:	int3   
   1a939:	int3   
   1a93a:	int3   
   1a93b:	int3   
   1a93c:	mov    edi,edi
   1a93e:	push   ebp
   1a93f:	mov    ebp,esp
   1a941:	push   ecx
   1a942:	push   esi
   1a943:	mov    esi,ecx
   1a945:	jmp    0x1a95a
   1a947:	mov    eax,ecx
   1a949:	mov    ecx,DWORD PTR [ecx]
   1a94b:	push   eax
   1a94c:	lea    eax,[ebp-0x4]
   1a94f:	mov    DWORD PTR [ebp+0xc],ecx
   1a952:	push   eax
   1a953:	mov    ecx,esi
   1a955:	call   0x1a900
   1a95a:	mov    ecx,DWORD PTR [ebp+0xc]
   1a95d:	cmp    ecx,DWORD PTR [ebp+0x10]
   1a960:	jne    0x1a947
   1a962:	mov    eax,DWORD PTR [ebp+0x8]
   1a965:	mov    DWORD PTR [eax],ecx
   1a967:	pop    esi
   1a968:	leave  
   1a969:	ret    0xc
   1a96c:	int3   
   1a96d:	int3   
   1a96e:	int3   
   1a96f:	int3   
   1a970:	int3   
   1a971:	int3   
   1a972:	mov    edi,edi
   1a974:	push   ebp
   1a975:	mov    ebp,esp
   1a977:	push   0x0
   1a979:	push   0xc
   1a97b:	call   0x11618
   1a980:	mov    ecx,DWORD PTR [ebp+0x8]
   1a983:	test   ecx,ecx
   1a985:	jne    0x1a989
   1a987:	mov    ecx,eax
   1a989:	mov    DWORD PTR [eax],ecx
   1a98b:	mov    ecx,DWORD PTR [ebp+0xc]
   1a98e:	test   ecx,ecx
   1a990:	jne    0x1a994
   1a992:	mov    ecx,eax
   1a994:	mov    DWORD PTR [eax+0x4],ecx
   1a997:	pop    ebp
   1a998:	ret    0x8
   1a99b:	int3   
   1a99c:	int3   
   1a99d:	int3   
   1a99e:	int3   
   1a99f:	int3   
   1a9a0:	mov    edi,edi
   1a9a2:	push   esi
   1a9a3:	mov    esi,ecx
   1a9a5:	mov    eax,DWORD PTR [esi+0x28]
   1a9a8:	shl    eax,0x2
   1a9ab:	push   0x0
   1a9ad:	push   eax
   1a9ae:	call   0x11618
   1a9b3:	mov    DWORD PTR [esi+0x24],eax
   1a9b6:	pop    esi
   1a9b7:	ret    
   1a9b8:	int3   
   1a9b9:	int3   
   1a9ba:	int3   
   1a9bb:	int3   
   1a9bc:	int3   
   1a9bd:	int3   
   1a9be:	mov    edi,edi
   1a9c0:	push   ebp
   1a9c1:	mov    ebp,esp
   1a9c3:	push   ebx
   1a9c4:	push   esi
   1a9c5:	push   edi
   1a9c6:	mov    edi,DWORD PTR [ebp+0x8]
   1a9c9:	mov    eax,0xfffffff
   1a9ce:	mov    esi,ecx
   1a9d0:	cmp    edi,eax
   1a9d2:	jbe    0x1a9d6
   1a9d4:	mov    edi,eax
   1a9d6:	mov    eax,edi
   1a9d8:	push   0x0
   1a9da:	shl    eax,0x2
   1a9dd:	push   eax
   1a9de:	call   0x11618
   1a9e3:	mov    ebx,eax
   1a9e5:	mov    eax,edi
   1a9e7:	shr    eax,0x2
   1a9ea:	lea    eax,[ebx+eax*4]
   1a9ed:	push   eax
   1a9ee:	mov    DWORD PTR [ebp+0x8],eax
   1a9f1:	mov    eax,DWORD PTR [esi+0x20]
   1a9f4:	add    eax,0x4
   1a9f7:	push   eax
   1a9f8:	push   DWORD PTR [esi+0x10]
   1a9fb:	call   0x1a386
   1aa00:	push   DWORD PTR [esi+0x24]
   1aa03:	call   0x1da14
   1aa08:	mov    eax,DWORD PTR [ebp+0x8]
   1aa0b:	pop    ecx
   1aa0c:	mov    DWORD PTR [esi+0x28],edi
   1aa0f:	pop    edi
   1aa10:	mov    DWORD PTR [esi+0x24],ebx
   1aa13:	pop    esi
   1aa14:	pop    ebx
   1aa15:	pop    ebp
   1aa16:	ret    0x4
   1aa19:	int3   
   1aa1a:	int3   
   1aa1b:	int3   
   1aa1c:	int3   
   1aa1d:	int3   
   1aa1e:	mov    edi,edi
   1aa20:	push   ebp
   1aa21:	mov    ebp,esp
   1aa23:	push   edi
   1aa24:	mov    edi,DWORD PTR [ebp+0xc]
   1aa27:	cmp    DWORD PTR [ebp+0x8],edi
   1aa2a:	je     0x1aa40
   1aa2c:	push   esi
   1aa2d:	mov    esi,DWORD PTR [ebp+0x10]
   1aa30:	inc    DWORD PTR [esi]
   1aa32:	lea    ecx,[ebp+0x8]
   1aa35:	call   0x1a350
   1aa3a:	cmp    DWORD PTR [ebp+0x8],edi
   1aa3d:	jne    0x1aa30
   1aa3f:	pop    esi
   1aa40:	pop    edi
   1aa41:	pop    ebp
   1aa42:	ret    
   1aa43:	int3   
   1aa44:	int3   
   1aa45:	int3   
   1aa46:	int3   
   1aa47:	int3   
   1aa48:	mov    edi,edi
   1aa4a:	push   ebp
   1aa4b:	mov    ebp,esp
   1aa4d:	sub    esp,0x28
   1aa50:	push   ebx
   1aa51:	mov    ebx,DWORD PTR [ebp+0x8]
   1aa54:	push   esi
   1aa55:	push   edi
   1aa56:	push   0xffffffff
   1aa58:	push   ebx
   1aa59:	lea    ecx,[ebp-0x8]
   1aa5c:	call   0x110ae
   1aa61:	and    DWORD PTR [ebx],0x0
   1aa64:	lea    eax,[ebp-0x8]
   1aa67:	push   eax
   1aa68:	lea    eax,[ebp-0x18]
   1aa6b:	push   eax
   1aa6c:	call   0x1a6c4
   1aa71:	mov    esi,DWORD PTR ds:0x7fa84
   1aa77:	mov    eax,DWORD PTR [ebp-0x10]
   1aa7a:	push   DWORD PTR [ebp-0x8]
   1aa7d:	add    esi,0x14
   1aa80:	lea    edi,[ebp-0x28]
   1aa83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aa84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aa85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aa86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1aa87:	cmp    eax,DWORD PTR [ebp-0x20]
   1aa8a:	je     0x1aa94
   1aa8c:	mov    eax,DWORD PTR [eax]
   1aa8e:	mov    eax,DWORD PTR [eax+0x20]
   1aa91:	inc    eax
   1aa92:	mov    DWORD PTR [ebx],eax
   1aa94:	call   0x1da14
   1aa99:	pop    ecx
   1aa9a:	pop    edi
   1aa9b:	pop    esi
   1aa9c:	pop    ebx
   1aa9d:	leave  
   1aa9e:	ret    0x4
   1aaa1:	int3   
   1aaa2:	int3   
   1aaa3:	int3   
   1aaa4:	int3   
   1aaa5:	int3   
   1aaa6:	add    DWORD PTR [ecx+0xc],0x4
   1aaaa:	dec    DWORD PTR [ecx+0x2c]
   1aaad:	mov    eax,DWORD PTR [ecx+0xc]
   1aab0:	je     0x1aab7
   1aab2:	cmp    eax,DWORD PTR [ecx+0x8]
   1aab5:	jne    0x1aabc
   1aab7:	jmp    0x1a88e
   1aabc:	ret    
   1aabd:	int3   
   1aabe:	int3   
   1aabf:	int3   
   1aac0:	int3   
   1aac1:	int3   
   1aac2:	mov    edi,edi
   1aac4:	push   esi
   1aac5:	push   0x0
   1aac7:	push   0xc
   1aac9:	mov    esi,ecx
   1aacb:	call   0x11618
   1aad0:	mov    DWORD PTR [eax],eax
   1aad2:	mov    DWORD PTR [eax+0x4],eax
   1aad5:	and    DWORD PTR [esi+0x8],0x0
   1aad9:	mov    DWORD PTR [esi+0x4],eax
   1aadc:	mov    eax,esi
   1aade:	pop    esi
   1aadf:	ret    0x4
   1aae2:	int3   
   1aae3:	int3   
   1aae4:	int3   
   1aae5:	int3   
   1aae6:	int3   
   1aae7:	int3   
   1aae8:	mov    edi,edi
   1aaea:	push   ebp
   1aaeb:	mov    ebp,esp
   1aaed:	push   ecx
   1aaee:	push   esi
   1aaef:	mov    esi,ecx
   1aaf1:	mov    eax,DWORD PTR [esi+0x4]
   1aaf4:	mov    ecx,DWORD PTR [eax]
   1aaf6:	push   eax
   1aaf7:	push   ecx
   1aaf8:	lea    eax,[ebp-0x4]
   1aafb:	push   eax
   1aafc:	mov    ecx,esi
   1aafe:	call   0x1a93c
   1ab03:	push   DWORD PTR [esi+0x4]
   1ab06:	call   0x1da14
   1ab0b:	and    DWORD PTR [esi+0x4],0x0
   1ab0f:	and    DWORD PTR [esi+0x8],0x0
   1ab13:	pop    ecx
   1ab14:	pop    esi
   1ab15:	leave  
   1ab16:	ret    
   1ab17:	int3   
   1ab18:	int3   
   1ab19:	int3   
   1ab1a:	int3   
   1ab1b:	int3   
   1ab1c:	mov    edi,edi
   1ab1e:	push   ebp
   1ab1f:	mov    ebp,esp
   1ab21:	push   ecx
   1ab22:	mov    eax,DWORD PTR [ecx+0x4]
   1ab25:	push   DWORD PTR [eax]
   1ab27:	lea    eax,[ebp-0x4]
   1ab2a:	push   eax
   1ab2b:	call   0x1a900
   1ab30:	leave  
   1ab31:	ret    
   1ab32:	int3   
   1ab33:	int3   
   1ab34:	int3   
   1ab35:	int3   
   1ab36:	int3   
   1ab37:	int3   
   1ab38:	mov    edi,edi
   1ab3a:	push   ebp
   1ab3b:	mov    ebp,esp
   1ab3d:	sub    esp,0x18
   1ab40:	push   ebx
   1ab41:	push   esi
   1ab42:	push   edi
   1ab43:	push   0x0
   1ab45:	push   0x400
   1ab4a:	mov    ebx,ecx
   1ab4c:	call   0x1a3b0
   1ab51:	cmp    DWORD PTR [ebx+0x2c],0x0
   1ab55:	mov    esi,eax
   1ab57:	mov    DWORD PTR [ebp-0x8],esi
   1ab5a:	jne    0x1ab91
   1ab5c:	mov    ecx,ebx
   1ab5e:	mov    DWORD PTR [ebx+0x28],0x2
   1ab65:	call   0x1a9a0
   1ab6a:	mov    eax,DWORD PTR [ebx+0x24]
   1ab6d:	mov    DWORD PTR [eax+0x4],esi
   1ab70:	mov    eax,DWORD PTR [ebx+0x24]
   1ab73:	add    eax,0x4
   1ab76:	push   eax
   1ab77:	add    esi,0x800
   1ab7d:	push   esi
   1ab7e:	lea    ecx,[ebp-0x18]
   1ab81:	call   0x1a2e0
   1ab86:	lea    edi,[ebx+0x4]
   1ab89:	mov    esi,eax
   1ab8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab8f:	jmp    0x1abef
   1ab91:	mov    ecx,DWORD PTR [ebx+0x28]
   1ab94:	mov    edx,DWORD PTR [ebx+0x24]
   1ab97:	mov    eax,DWORD PTR [ebx+0x20]
   1ab9a:	lea    ecx,[edx+ecx*4-0x4]
   1ab9e:	cmp    eax,ecx
   1aba0:	jae    0x1abb0
   1aba2:	add    eax,0x4
   1aba5:	mov    DWORD PTR [ebx+0x20],eax
   1aba8:	mov    DWORD PTR [eax],esi
   1abaa:	push   DWORD PTR [ebx+0x20]
   1abad:	push   esi
   1abae:	jmp    0x1abe7
   1abb0:	sub    eax,DWORD PTR [ebx+0x10]
   1abb3:	mov    ecx,ebx
   1abb5:	sar    eax,0x2
   1abb8:	inc    eax
   1abb9:	mov    edi,eax
   1abbb:	lea    eax,[edi+edi*1]
   1abbe:	push   eax
   1abbf:	call   0x1a9be
   1abc4:	lea    ecx,[eax+edi*4]
   1abc7:	mov    DWORD PTR [ecx],esi
   1abc9:	push   eax
   1abca:	push   DWORD PTR [ebx+0xc]
   1abcd:	mov    DWORD PTR [ebp-0x4],ecx
   1abd0:	lea    ecx,[ebp-0x18]
   1abd3:	call   0x1a2e0
   1abd8:	push   DWORD PTR [ebp-0x4]
   1abdb:	lea    edi,[ebx+0x4]
   1abde:	push   DWORD PTR [ebp-0x8]
   1abe1:	mov    esi,eax
   1abe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1abe4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1abe5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1abe6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1abe7:	lea    ecx,[ebp-0x18]
   1abea:	call   0x1a2e0
   1abef:	lea    edi,[ebx+0x14]
   1abf2:	mov    esi,eax
   1abf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1abf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1abf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1abf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1abf8:	pop    edi
   1abf9:	pop    esi
   1abfa:	pop    ebx
   1abfb:	leave  
   1abfc:	ret    
   1abfd:	int3   
   1abfe:	int3   
   1abff:	int3   
   1ac00:	int3   
   1ac01:	int3   
   1ac02:	mov    edi,edi
   1ac04:	push   ebp
   1ac05:	mov    ebp,esp
   1ac07:	mov    eax,DWORD PTR [ebp+0xc]
   1ac0a:	push   ebx
   1ac0b:	push   esi
   1ac0c:	push   edi
   1ac0d:	lea    edi,[eax+0x4]
   1ac10:	push   DWORD PTR [edi]
   1ac12:	mov    ebx,ecx
   1ac14:	push   eax
   1ac15:	call   0x1a972
   1ac1a:	push   DWORD PTR [ebp+0x10]
   1ac1d:	mov    esi,eax
   1ac1f:	mov    DWORD PTR [edi],esi
   1ac21:	mov    eax,DWORD PTR [esi+0x4]
   1ac24:	mov    DWORD PTR [eax],esi
   1ac26:	lea    eax,[esi+0x8]
   1ac29:	push   eax
   1ac2a:	call   0x1a3d2
   1ac2f:	mov    eax,DWORD PTR [ebp+0x8]
   1ac32:	inc    DWORD PTR [ebx+0x8]
   1ac35:	pop    edi
   1ac36:	mov    DWORD PTR [eax],esi
   1ac38:	pop    esi
   1ac39:	pop    ebx
   1ac3a:	pop    ebp
   1ac3b:	ret    0xc
   1ac3e:	int3   
   1ac3f:	int3   
   1ac40:	int3   
   1ac41:	int3   
   1ac42:	int3   
   1ac43:	int3   
   1ac44:	mov    edi,edi
   1ac46:	push   ebp
   1ac47:	mov    ebp,esp
   1ac49:	push   ecx
   1ac4a:	mov    eax,DWORD PTR [ebp+0xc]
   1ac4d:	push   esi
   1ac4e:	mov    esi,ecx
   1ac50:	jmp    0x1ac6c
   1ac52:	add    eax,0x8
   1ac55:	push   eax
   1ac56:	push   DWORD PTR [ebp+0x8]
   1ac59:	lea    eax,[ebp-0x4]
   1ac5c:	push   eax
   1ac5d:	mov    ecx,esi
   1ac5f:	call   0x1ac02
   1ac64:	mov    eax,DWORD PTR [ebp+0xc]
   1ac67:	mov    eax,DWORD PTR [eax]
   1ac69:	mov    DWORD PTR [ebp+0xc],eax
   1ac6c:	cmp    eax,DWORD PTR [ebp+0x10]
   1ac6f:	jne    0x1ac52
   1ac71:	pop    esi
   1ac72:	leave  
   1ac73:	ret    0xc
   1ac76:	int3   
   1ac77:	int3   
   1ac78:	int3   
   1ac79:	int3   
   1ac7a:	int3   
   1ac7b:	int3   
   1ac7c:	mov    edi,edi
   1ac7e:	push   ebp
   1ac7f:	mov    ebp,esp
   1ac81:	push   esi
   1ac82:	push   edi
   1ac83:	push   DWORD PTR [ebp+0xc]
   1ac86:	mov    edi,ecx
   1ac88:	call   0x1a5dc
   1ac8d:	push   DWORD PTR [ebp+0xc]
   1ac90:	mov    ecx,edi
   1ac92:	mov    esi,eax
   1ac94:	call   0x1a59c
   1ac99:	mov    ecx,DWORD PTR [ebp+0x8]
   1ac9c:	pop    edi
   1ac9d:	mov    DWORD PTR [ecx],eax
   1ac9f:	mov    DWORD PTR [ecx+0x4],esi
   1aca2:	mov    eax,ecx
   1aca4:	pop    esi
   1aca5:	pop    ebp
   1aca6:	ret    0x8
   1aca9:	int3   
   1acaa:	int3   
   1acab:	int3   
   1acac:	int3   
   1acad:	int3   
   1acae:	mov    edi,edi
   1acb0:	push   ebp
   1acb1:	mov    ebp,esp
   1acb3:	push   ecx
   1acb4:	push   ebx
   1acb5:	push   esi
   1acb6:	push   edi
   1acb7:	push   0x1
   1acb9:	xor    edi,edi
   1acbb:	push   edi
   1acbc:	mov    esi,ecx
   1acbe:	call   0x1394e
   1acc3:	lea    ecx,[ebp-0x1]
   1acc6:	mov    ebx,eax
   1acc8:	call   DWORD PTR ds:0x7dfdc
   1acce:	cmp    DWORD PTR ds:0x7fa8c,edi
   1acd4:	jne    0x1ace9
   1acd6:	mov    eax,ebx
   1acd8:	mov    ds:0x7fa8c,eax
   1acdd:	mov    DWORD PTR [eax],edi
   1acdf:	mov    eax,ds:0x7fa8c
   1ace4:	xor    ebx,ebx
   1ace6:	mov    DWORD PTR [eax+0x8],edi
   1ace9:	inc    DWORD PTR ds:0x7fa90
   1acef:	lea    ecx,[ebp-0x1]
   1acf2:	call   DWORD PTR ds:0x7dfd8
   1acf8:	cmp    ebx,edi
   1acfa:	je     0x1ad03
   1acfc:	push   ebx
   1acfd:	call   0x1da14
   1ad02:	pop    ecx
   1ad03:	push   edi
   1ad04:	push   DWORD PTR ds:0x7fa8c
   1ad0a:	mov    ecx,esi
   1ad0c:	call   0x1394e
   1ad11:	mov    DWORD PTR [esi+0xc],edi
   1ad14:	mov    DWORD PTR [esi+0x4],eax
   1ad17:	mov    DWORD PTR [eax],eax
   1ad19:	mov    esi,DWORD PTR [esi+0x4]
   1ad1c:	pop    edi
   1ad1d:	mov    DWORD PTR [esi+0x8],esi
   1ad20:	pop    esi
   1ad21:	pop    ebx
   1ad22:	leave  
   1ad23:	ret    
   1ad24:	int3   
   1ad25:	int3   
   1ad26:	int3   
   1ad27:	int3   
   1ad28:	int3   
   1ad29:	int3   
   1ad2a:	mov    edi,edi
   1ad2c:	push   ebp
   1ad2d:	mov    ebp,esp
   1ad2f:	push   ebx
   1ad30:	push   esi
   1ad31:	mov    esi,DWORD PTR [ebp+0x10]
   1ad34:	push   edi
   1ad35:	push   0x0
   1ad37:	push   esi
   1ad38:	mov    edi,ecx
   1ad3a:	call   0x1394e
   1ad3f:	push   DWORD PTR [ebp+0x14]
   1ad42:	mov    ebx,eax
   1ad44:	mov    eax,ds:0x7fa8c
   1ad49:	mov    DWORD PTR [ebx],eax
   1ad4b:	mov    eax,ds:0x7fa8c
   1ad50:	mov    DWORD PTR [ebx+0x8],eax
   1ad53:	lea    eax,[ebx+0xc]
   1ad56:	push   eax
   1ad57:	call   0x1a61c
   1ad5c:	inc    DWORD PTR [edi+0xc]
   1ad5f:	cmp    esi,DWORD PTR [edi+0x4]
   1ad62:	je     0x1ad8c
   1ad64:	mov    eax,DWORD PTR [ebp+0xc]
   1ad67:	cmp    eax,DWORD PTR ds:0x7fa8c
   1ad6d:	jne    0x1ad8c
   1ad6f:	lea    eax,[esi+0xc]
   1ad72:	push   eax
   1ad73:	push   DWORD PTR [ebp+0x14]
   1ad76:	call   0x197a4
   1ad7b:	test   al,al
   1ad7d:	jne    0x1ad8c
   1ad7f:	mov    DWORD PTR [esi+0x8],ebx
   1ad82:	mov    eax,DWORD PTR [edi+0x4]
   1ad85:	cmp    esi,DWORD PTR [eax+0x8]
   1ad88:	jne    0x1ada6
   1ad8a:	jmp    0x1ad9b
   1ad8c:	mov    DWORD PTR [esi],ebx
   1ad8e:	mov    eax,DWORD PTR [edi+0x4]
   1ad91:	cmp    esi,eax
   1ad93:	jne    0x1ada0
   1ad95:	mov    DWORD PTR [eax+0x4],ebx
   1ad98:	mov    eax,DWORD PTR [edi+0x4]
   1ad9b:	mov    DWORD PTR [eax+0x8],ebx
   1ad9e:	jmp    0x1ada6
   1ada0:	cmp    esi,DWORD PTR [eax]
   1ada2:	jne    0x1ada6
   1ada4:	mov    DWORD PTR [eax],ebx
   1ada6:	mov    eax,DWORD PTR [edi+0x4]
   1ada9:	mov    esi,ebx
   1adab:	cmp    ebx,DWORD PTR [eax+0x4]
   1adae:	je     0x1ae62
   1adb4:	mov    eax,DWORD PTR [esi+0x4]
   1adb7:	xor    edx,edx
   1adb9:	cmp    DWORD PTR [eax+0x14],edx
   1adbc:	jne    0x1ae62
   1adc2:	mov    ecx,DWORD PTR [eax+0x4]
   1adc5:	cmp    eax,DWORD PTR [ecx]
   1adc7:	jne    0x1ae03
   1adc9:	mov    ecx,DWORD PTR [ecx+0x8]
   1adcc:	cmp    DWORD PTR [ecx+0x14],edx
   1adcf:	je     0x1ae0a
   1add1:	cmp    esi,DWORD PTR [eax+0x8]
   1add4:	jne    0x1ade0
   1add6:	mov    esi,eax
   1add8:	push   esi
   1add9:	mov    ecx,edi
   1addb:	call   0x1a4be
   1ade0:	mov    eax,DWORD PTR [esi+0x4]
   1ade3:	mov    DWORD PTR [eax+0x14],0x1
   1adea:	mov    eax,DWORD PTR [esi+0x4]
   1aded:	mov    eax,DWORD PTR [eax+0x4]
   1adf0:	and    DWORD PTR [eax+0x14],0x0
   1adf4:	mov    eax,DWORD PTR [esi+0x4]
   1adf7:	push   DWORD PTR [eax+0x4]
   1adfa:	mov    ecx,edi
   1adfc:	call   0x1a50c
   1ae01:	jmp    0x1ae56
   1ae03:	mov    ecx,DWORD PTR [ecx]
   1ae05:	cmp    DWORD PTR [ecx+0x14],edx
   1ae08:	jne    0x1ae27
   1ae0a:	mov    edx,eax
   1ae0c:	xor    eax,eax
   1ae0e:	inc    eax
   1ae0f:	mov    DWORD PTR [edx+0x14],eax
   1ae12:	mov    DWORD PTR [ecx+0x14],eax
   1ae15:	mov    eax,DWORD PTR [esi+0x4]
   1ae18:	mov    eax,DWORD PTR [eax+0x4]
   1ae1b:	and    DWORD PTR [eax+0x14],0x0
   1ae1f:	mov    eax,DWORD PTR [esi+0x4]
   1ae22:	mov    esi,DWORD PTR [eax+0x4]
   1ae25:	jmp    0x1ae56
   1ae27:	cmp    esi,DWORD PTR [eax]
   1ae29:	jne    0x1ae35
   1ae2b:	mov    esi,eax
   1ae2d:	push   esi
   1ae2e:	mov    ecx,edi
   1ae30:	call   0x1a50c
   1ae35:	mov    eax,DWORD PTR [esi+0x4]
   1ae38:	mov    DWORD PTR [eax+0x14],0x1
   1ae3f:	mov    eax,DWORD PTR [esi+0x4]
   1ae42:	mov    eax,DWORD PTR [eax+0x4]
   1ae45:	and    DWORD PTR [eax+0x14],0x0
   1ae49:	mov    eax,DWORD PTR [esi+0x4]
   1ae4c:	push   DWORD PTR [eax+0x4]
   1ae4f:	mov    ecx,edi
   1ae51:	call   0x1a4be
   1ae56:	mov    eax,DWORD PTR [edi+0x4]
   1ae59:	cmp    esi,DWORD PTR [eax+0x4]
   1ae5c:	jne    0x1adb4
   1ae62:	mov    eax,DWORD PTR [edi+0x4]
   1ae65:	mov    eax,DWORD PTR [eax+0x4]
   1ae68:	pop    edi
   1ae69:	mov    DWORD PTR [eax+0x14],0x1
   1ae70:	mov    eax,DWORD PTR [ebp+0x8]
   1ae73:	pop    esi
   1ae74:	mov    DWORD PTR [eax],ebx
   1ae76:	pop    ebx
   1ae77:	pop    ebp
   1ae78:	ret    0x10
   1ae7b:	int3   
   1ae7c:	int3   
   1ae7d:	int3   
   1ae7e:	int3   
   1ae7f:	int3   
   1ae80:	mov    edi,edi
   1ae82:	push   ebp
   1ae83:	mov    ebp,esp
   1ae85:	sub    esp,0x10
   1ae88:	push   ebx
   1ae89:	push   esi
   1ae8a:	mov    DWORD PTR [ebp-0xc],ecx
   1ae8d:	push   edi
   1ae8e:	mov    edi,DWORD PTR [ebp+0xc]
   1ae91:	lea    ecx,[ebp+0xc]
   1ae94:	call   0x1a350
   1ae99:	mov    esi,DWORD PTR [edi]
   1ae9b:	mov    eax,ds:0x7fa8c
   1aea0:	lea    ebx,[edi+0x8]
   1aea3:	mov    DWORD PTR [ebp-0x8],edi
   1aea6:	mov    DWORD PTR [ebp-0x10],ebx
   1aea9:	cmp    esi,eax
   1aeab:	jne    0x1aeb1
   1aead:	mov    esi,DWORD PTR [ebx]
   1aeaf:	jmp    0x1aec8
   1aeb1:	mov    ecx,DWORD PTR [ebx]
   1aeb3:	cmp    ecx,eax
   1aeb5:	je     0x1aec8
   1aeb7:	push   ecx
   1aeb8:	call   0x1a32e
   1aebd:	mov    DWORD PTR [ebp-0x8],eax
   1aec0:	add    eax,0x8
   1aec3:	mov    esi,DWORD PTR [eax]
   1aec5:	mov    DWORD PTR [ebp-0x10],eax
   1aec8:	lea    ecx,[ebp-0x1]
   1aecb:	call   DWORD PTR ds:0x7dfdc
   1aed1:	mov    eax,DWORD PTR [ebp-0x8]
   1aed4:	cmp    eax,edi
   1aed6:	je     0x1af38
   1aed8:	mov    ecx,DWORD PTR [edi]
   1aeda:	mov    DWORD PTR [ecx+0x4],eax
   1aedd:	mov    ecx,DWORD PTR [edi]
   1aedf:	mov    DWORD PTR [eax],ecx
   1aee1:	cmp    eax,DWORD PTR [ebx]
   1aee3:	jne    0x1aeea
   1aee5:	mov    DWORD PTR [esi+0x4],eax
   1aee8:	jmp    0x1af01
   1aeea:	mov    ecx,DWORD PTR [eax+0x4]
   1aeed:	mov    edx,DWORD PTR [ebp-0x10]
   1aef0:	mov    DWORD PTR [esi+0x4],ecx
   1aef3:	mov    ecx,DWORD PTR [eax+0x4]
   1aef6:	mov    DWORD PTR [ecx],esi
   1aef8:	mov    ecx,DWORD PTR [ebx]
   1aefa:	mov    DWORD PTR [edx],ecx
   1aefc:	mov    ecx,DWORD PTR [ebx]
   1aefe:	mov    DWORD PTR [ecx+0x4],eax
   1af01:	mov    ebx,DWORD PTR [ebp-0xc]
   1af04:	mov    ecx,DWORD PTR [ebx+0x4]
   1af07:	cmp    DWORD PTR [ecx+0x4],edi
   1af0a:	jne    0x1af11
   1af0c:	mov    DWORD PTR [ecx+0x4],eax
   1af0f:	jmp    0x1af1f
   1af11:	mov    ecx,DWORD PTR [edi+0x4]
   1af14:	cmp    DWORD PTR [ecx],edi
   1af16:	jne    0x1af1c
   1af18:	mov    DWORD PTR [ecx],eax
   1af1a:	jmp    0x1af1f
   1af1c:	mov    DWORD PTR [ecx+0x8],eax
   1af1f:	mov    ecx,DWORD PTR [edi+0x4]
   1af22:	mov    DWORD PTR [eax+0x4],ecx
   1af25:	mov    ecx,DWORD PTR [eax+0x14]
   1af28:	mov    edx,DWORD PTR [edi+0x14]
   1af2b:	mov    DWORD PTR [eax+0x14],edx
   1af2e:	mov    DWORD PTR [edi+0x14],ecx
   1af31:	mov    DWORD PTR [ebp-0x8],edi
   1af34:	mov    eax,edi
   1af36:	jmp    0x1afb1
   1af38:	mov    ecx,DWORD PTR [eax+0x4]
   1af3b:	mov    edx,DWORD PTR [ebp-0xc]
   1af3e:	mov    DWORD PTR [esi+0x4],ecx
   1af41:	mov    ecx,DWORD PTR [edx+0x4]
   1af44:	cmp    DWORD PTR [ecx+0x4],edi
   1af47:	jne    0x1af4e
   1af49:	mov    DWORD PTR [ecx+0x4],esi
   1af4c:	jmp    0x1af5c
   1af4e:	mov    ecx,DWORD PTR [edi+0x4]
   1af51:	cmp    DWORD PTR [ecx],edi
   1af53:	jne    0x1af59
   1af55:	mov    DWORD PTR [ecx],esi
   1af57:	jmp    0x1af5c
   1af59:	mov    DWORD PTR [ecx+0x8],esi
   1af5c:	mov    ecx,DWORD PTR [edx+0x4]
   1af5f:	mov    DWORD PTR [ebp-0x10],ecx
   1af62:	cmp    DWORD PTR [ecx],edi
   1af64:	jne    0x1af88
   1af66:	mov    ebx,DWORD PTR [ebx]
   1af68:	cmp    ebx,DWORD PTR ds:0x7fa8c
   1af6e:	jne    0x1af77
   1af70:	mov    ebx,DWORD PTR [edi+0x4]
   1af73:	mov    DWORD PTR [ecx],ebx
   1af75:	jmp    0x1af88
   1af77:	push   esi
   1af78:	call   0x1a32e
   1af7d:	mov    ecx,DWORD PTR [ebp-0x10]
   1af80:	mov    edx,DWORD PTR [ebp-0xc]
   1af83:	mov    DWORD PTR [ecx],eax
   1af85:	mov    eax,DWORD PTR [ebp-0x8]
   1af88:	mov    ebx,DWORD PTR [edx+0x4]
   1af8b:	cmp    DWORD PTR [ebx+0x8],edi
   1af8e:	jne    0x1afae
   1af90:	mov    ecx,DWORD PTR [edi]
   1af92:	cmp    ecx,DWORD PTR ds:0x7fa8c
   1af98:	jne    0x1afa2
   1af9a:	mov    ecx,DWORD PTR [edi+0x4]
   1af9d:	mov    DWORD PTR [ebx+0x8],ecx
   1afa0:	jmp    0x1afae
   1afa2:	push   esi
   1afa3:	call   0x1a30c
   1afa8:	mov    DWORD PTR [ebx+0x8],eax
   1afab:	mov    eax,DWORD PTR [ebp-0x8]
   1afae:	mov    ebx,DWORD PTR [ebp-0xc]
   1afb1:	xor    edi,edi
   1afb3:	inc    edi
   1afb4:	cmp    DWORD PTR [eax+0x14],edi
   1afb7:	jne    0x1b0cb
   1afbd:	jmp    0x1b07e
   1afc2:	cmp    DWORD PTR [esi+0x14],edi
   1afc5:	jne    0x1b0c8
   1afcb:	mov    eax,DWORD PTR [esi+0x4]
   1afce:	cmp    esi,DWORD PTR [eax]
   1afd0:	jne    0x1b047
   1afd2:	mov    eax,DWORD PTR [eax+0x8]
   1afd5:	cmp    DWORD PTR [eax+0x14],0x0
   1afd9:	jne    0x1aff5
   1afdb:	mov    DWORD PTR [eax+0x14],edi
   1afde:	mov    eax,DWORD PTR [esi+0x4]
   1afe1:	and    DWORD PTR [eax+0x14],0x0
   1afe5:	push   DWORD PTR [esi+0x4]
   1afe8:	mov    ecx,ebx
   1afea:	call   0x1a4be
   1afef:	mov    eax,DWORD PTR [esi+0x4]
   1aff2:	mov    eax,DWORD PTR [eax+0x8]
   1aff5:	mov    ecx,DWORD PTR [eax]
   1aff7:	cmp    DWORD PTR [ecx+0x14],edi
   1affa:	jne    0x1b004
   1affc:	mov    ecx,DWORD PTR [eax+0x8]
   1afff:	cmp    DWORD PTR [ecx+0x14],edi
   1b002:	je     0x1b077
   1b004:	mov    ecx,DWORD PTR [eax+0x8]
   1b007:	cmp    DWORD PTR [ecx+0x14],edi
   1b00a:	jne    0x1b023
   1b00c:	mov    ecx,DWORD PTR [eax]
   1b00e:	mov    DWORD PTR [ecx+0x14],edi
   1b011:	and    DWORD PTR [eax+0x14],0x0
   1b015:	push   eax
   1b016:	mov    ecx,ebx
   1b018:	call   0x1a50c
   1b01d:	mov    eax,DWORD PTR [esi+0x4]
   1b020:	mov    eax,DWORD PTR [eax+0x8]
   1b023:	mov    ecx,DWORD PTR [esi+0x4]
   1b026:	mov    ecx,DWORD PTR [ecx+0x14]
   1b029:	mov    DWORD PTR [eax+0x14],ecx
   1b02c:	mov    ecx,DWORD PTR [esi+0x4]
   1b02f:	mov    DWORD PTR [ecx+0x14],edi
   1b032:	mov    eax,DWORD PTR [eax+0x8]
   1b035:	mov    DWORD PTR [eax+0x14],edi
   1b038:	push   DWORD PTR [esi+0x4]
   1b03b:	mov    ecx,ebx
   1b03d:	call   0x1a4be
   1b042:	jmp    0x1b0c8
   1b047:	mov    eax,DWORD PTR [eax]
   1b049:	cmp    DWORD PTR [eax+0x14],0x0
   1b04d:	jne    0x1b068
   1b04f:	mov    DWORD PTR [eax+0x14],edi
   1b052:	mov    eax,DWORD PTR [esi+0x4]
   1b055:	and    DWORD PTR [eax+0x14],0x0
   1b059:	push   DWORD PTR [esi+0x4]
   1b05c:	mov    ecx,ebx
   1b05e:	call   0x1a50c
   1b063:	mov    eax,DWORD PTR [esi+0x4]
   1b066:	mov    eax,DWORD PTR [eax]
   1b068:	mov    ecx,DWORD PTR [eax+0x8]
   1b06b:	cmp    DWORD PTR [ecx+0x14],edi
   1b06e:	jne    0x1b08c
   1b070:	mov    ecx,DWORD PTR [eax]
   1b072:	cmp    DWORD PTR [ecx+0x14],edi
   1b075:	jne    0x1b08c
   1b077:	and    DWORD PTR [eax+0x14],0x0
   1b07b:	mov    esi,DWORD PTR [esi+0x4]
   1b07e:	mov    eax,DWORD PTR [ebx+0x4]
   1b081:	cmp    esi,DWORD PTR [eax+0x4]
   1b084:	jne    0x1afc2
   1b08a:	jmp    0x1b0c8
   1b08c:	mov    ecx,DWORD PTR [eax]
   1b08e:	cmp    DWORD PTR [ecx+0x14],edi
   1b091:	jne    0x1b0aa
   1b093:	mov    ecx,DWORD PTR [eax+0x8]
   1b096:	mov    DWORD PTR [ecx+0x14],edi
   1b099:	and    DWORD PTR [eax+0x14],0x0
   1b09d:	push   eax
   1b09e:	mov    ecx,ebx
   1b0a0:	call   0x1a4be
   1b0a5:	mov    eax,DWORD PTR [esi+0x4]
   1b0a8:	mov    eax,DWORD PTR [eax]
   1b0aa:	mov    ecx,DWORD PTR [esi+0x4]
   1b0ad:	mov    ecx,DWORD PTR [ecx+0x14]
   1b0b0:	mov    DWORD PTR [eax+0x14],ecx
   1b0b3:	mov    ecx,DWORD PTR [esi+0x4]
   1b0b6:	mov    DWORD PTR [ecx+0x14],edi
   1b0b9:	mov    eax,DWORD PTR [eax]
   1b0bb:	mov    DWORD PTR [eax+0x14],edi
   1b0be:	push   DWORD PTR [esi+0x4]
   1b0c1:	mov    ecx,ebx
   1b0c3:	call   0x1a50c
   1b0c8:	mov    DWORD PTR [esi+0x14],edi
   1b0cb:	lea    ecx,[ebp-0x1]
   1b0ce:	call   DWORD PTR ds:0x7dfd8
   1b0d4:	mov    esi,DWORD PTR [ebp-0x8]
   1b0d7:	lea    eax,[esi+0xc]
   1b0da:	push   eax
   1b0db:	call   0x1a63a
   1b0e0:	push   esi
   1b0e1:	call   0x1da14
   1b0e6:	mov    eax,DWORD PTR [ebp+0x8]
   1b0e9:	dec    DWORD PTR [ebx+0xc]
   1b0ec:	pop    ecx
   1b0ed:	mov    ecx,DWORD PTR [ebp+0xc]
   1b0f0:	pop    edi
   1b0f1:	pop    esi
   1b0f2:	mov    DWORD PTR [eax],ecx
   1b0f4:	pop    ebx
   1b0f5:	leave  
   1b0f6:	ret    0x8
   1b0f9:	int3   
   1b0fa:	int3   
   1b0fb:	int3   
   1b0fc:	int3   
   1b0fd:	int3   
   1b0fe:	mov    edi,edi
   1b100:	push   ebp
   1b101:	mov    ebp,esp
   1b103:	push   ebx
   1b104:	push   esi
   1b105:	push   edi
   1b106:	mov    edi,DWORD PTR [ebp+0x8]
   1b109:	mov    ebx,ecx
   1b10b:	mov    esi,edi
   1b10d:	cmp    edi,DWORD PTR ds:0x7fa8c
   1b113:	je     0x1b13b
   1b115:	push   DWORD PTR [esi+0x8]
   1b118:	mov    ecx,ebx
   1b11a:	call   0x1b0fe
   1b11f:	mov    esi,DWORD PTR [esi]
   1b121:	lea    eax,[edi+0xc]
   1b124:	push   eax
   1b125:	call   0x1a63a
   1b12a:	push   edi
   1b12b:	call   0x1da14
   1b130:	pop    ecx
   1b131:	mov    edi,esi
   1b133:	cmp    esi,DWORD PTR ds:0x7fa8c
   1b139:	jne    0x1b115
   1b13b:	pop    edi
   1b13c:	pop    esi
   1b13d:	pop    ebx
   1b13e:	pop    ebp
   1b13f:	ret    0x4
   1b142:	int3   
   1b143:	int3   
   1b144:	int3   
   1b145:	int3   
   1b146:	int3   
   1b147:	int3   
   1b148:	mov    edi,edi
   1b14a:	push   ebp
   1b14b:	mov    ebp,esp
   1b14d:	push   ecx
   1b14e:	push   DWORD PTR [ebp-0x4]
   1b151:	push   DWORD PTR [ebp+0x10]
   1b154:	push   DWORD PTR [ebp+0xc]
   1b157:	push   DWORD PTR [ebp+0x8]
   1b15a:	call   0x1aa1e
   1b15f:	add    esp,0x10
   1b162:	leave  
   1b163:	ret    
   1b164:	int3   
   1b165:	int3   
   1b166:	int3   
   1b167:	int3   
   1b168:	int3   
   1b169:	int3   
   1b16a:	mov    edi,edi
   1b16c:	push   esi
   1b16d:	mov    esi,ecx
   1b16f:	jmp    0x1b178
   1b171:	mov    ecx,esi
   1b173:	call   0x1aaa6
   1b178:	cmp    DWORD PTR [esi+0x2c],0x0
   1b17c:	jne    0x1b171
   1b17e:	pop    esi
   1b17f:	ret    
   1b180:	int3   
   1b181:	int3   
   1b182:	int3   
   1b183:	int3   
   1b184:	int3   
   1b185:	int3   
   1b186:	mov    edi,edi
   1b188:	push   ebp
   1b189:	mov    ebp,esp
   1b18b:	push   esi
   1b18c:	mov    esi,ecx
   1b18e:	cmp    DWORD PTR [esi+0x2c],0x0
   1b192:	je     0x1b1ba
   1b194:	mov    ecx,DWORD PTR [esi+0x1c]
   1b197:	mov    edx,DWORD PTR [esi+0x18]
   1b19a:	cmp    ecx,edx
   1b19c:	je     0x1b1ba
   1b19e:	push   DWORD PTR [ebp+0x8]
   1b1a1:	lea    eax,[ecx+0x4]
   1b1a4:	mov    DWORD PTR [esi+0x1c],eax
   1b1a7:	push   ecx
   1b1a8:	cmp    eax,edx
   1b1aa:	jne    0x1b1ce
   1b1ac:	call   0x1a3d2
   1b1b1:	mov    ecx,esi
   1b1b3:	call   0x1ab38
   1b1b8:	jmp    0x1b1d3
   1b1ba:	mov    ecx,esi
   1b1bc:	call   0x1ab38
   1b1c1:	mov    eax,DWORD PTR [esi+0x1c]
   1b1c4:	push   DWORD PTR [ebp+0x8]
   1b1c7:	lea    ecx,[eax+0x4]
   1b1ca:	mov    DWORD PTR [esi+0x1c],ecx
   1b1cd:	push   eax
   1b1ce:	call   0x1a3d2
   1b1d3:	inc    DWORD PTR [esi+0x2c]
   1b1d6:	pop    esi
   1b1d7:	pop    ebp
   1b1d8:	ret    0x4
   1b1db:	int3   
   1b1dc:	int3   
   1b1dd:	int3   
   1b1de:	int3   
   1b1df:	int3   
   1b1e0:	mov    edi,edi
   1b1e2:	push   ebp
   1b1e3:	mov    ebp,esp
   1b1e5:	push   esi
   1b1e6:	push   0x0
   1b1e8:	push   0xc
   1b1ea:	mov    esi,ecx
   1b1ec:	call   0x11618
   1b1f1:	mov    ecx,DWORD PTR [ebp+0x8]
   1b1f4:	mov    DWORD PTR [eax],eax
   1b1f6:	mov    DWORD PTR [eax+0x4],eax
   1b1f9:	and    DWORD PTR [esi+0x8],0x0
   1b1fd:	mov    DWORD PTR [esi+0x4],eax
   1b200:	mov    ecx,DWORD PTR [ecx+0x4]
   1b203:	mov    edx,DWORD PTR [ecx]
   1b205:	mov    eax,DWORD PTR [eax]
   1b207:	push   ecx
   1b208:	push   edx
   1b209:	push   eax
   1b20a:	mov    ecx,esi
   1b20c:	call   0x1ac44
   1b211:	mov    eax,esi
   1b213:	pop    esi
   1b214:	pop    ebp
   1b215:	ret    0x4
   1b218:	int3   
   1b219:	int3   
   1b21a:	int3   
   1b21b:	int3   
   1b21c:	int3   
   1b21d:	int3   
   1b21e:	mov    edi,edi
   1b220:	push   ebp
   1b221:	mov    ebp,esp
   1b223:	push   ecx
   1b224:	mov    edx,DWORD PTR [ebp+0x8]
   1b227:	mov    DWORD PTR [ebp-0x4],ecx
   1b22a:	cmp    ecx,edx
   1b22c:	je     0x1b26b
   1b22e:	push   ebx
   1b22f:	mov    ebx,DWORD PTR [edx+0x4]
   1b232:	push   esi
   1b233:	mov    esi,DWORD PTR [ecx+0x4]
   1b236:	mov    eax,DWORD PTR [esi]
   1b238:	push   edi
   1b239:	mov    edi,DWORD PTR [ebx]
   1b23b:	jmp    0x1b24b
   1b23d:	cmp    edi,ebx
   1b23f:	je     0x1b24f
   1b241:	mov    edx,DWORD PTR [edi+0x8]
   1b244:	mov    DWORD PTR [eax+0x8],edx
   1b247:	mov    eax,DWORD PTR [eax]
   1b249:	mov    edi,DWORD PTR [edi]
   1b24b:	cmp    eax,esi
   1b24d:	jne    0x1b23d
   1b24f:	push   esi
   1b250:	push   eax
   1b251:	lea    eax,[ebp+0x8]
   1b254:	push   eax
   1b255:	call   0x1a93c
   1b25a:	mov    ecx,DWORD PTR [ebp-0x4]
   1b25d:	push   ebx
   1b25e:	push   edi
   1b25f:	push   esi
   1b260:	call   0x1ac44
   1b265:	mov    ecx,DWORD PTR [ebp-0x4]
   1b268:	pop    edi
   1b269:	pop    esi
   1b26a:	pop    ebx
   1b26b:	mov    eax,ecx
   1b26d:	leave  
   1b26e:	ret    0x4
   1b271:	int3   
   1b272:	int3   
   1b273:	int3   
   1b274:	int3   
   1b275:	int3   
   1b276:	mov    edi,edi
   1b278:	push   ebp
   1b279:	mov    ebp,esp
   1b27b:	push   DWORD PTR [ebp+0x8]
   1b27e:	mov    eax,DWORD PTR [ecx+0x4]
   1b281:	push   eax
   1b282:	lea    eax,[ebp+0x8]
   1b285:	push   eax
   1b286:	call   0x1ac02
   1b28b:	pop    ebp
   1b28c:	ret    0x4
   1b28f:	int3   
   1b290:	int3   
   1b291:	int3   
   1b292:	int3   
   1b293:	int3   
   1b294:	mov    edi,edi
   1b296:	push   ebp
   1b297:	mov    ebp,esp
   1b299:	push   ecx
   1b29a:	push   ebx
   1b29b:	push   esi
   1b29c:	push   edi
   1b29d:	mov    edi,ecx
   1b29f:	mov    eax,DWORD PTR [edi+0x4]
   1b2a2:	mov    esi,DWORD PTR [eax+0x4]
   1b2a5:	mov    ebx,eax
   1b2a7:	mov    al,0x1
   1b2a9:	jmp    0x1b2c4
   1b2ab:	lea    eax,[esi+0xc]
   1b2ae:	push   eax
   1b2af:	push   DWORD PTR [ebp+0xc]
   1b2b2:	mov    ebx,esi
   1b2b4:	call   0x197a4
   1b2b9:	test   al,al
   1b2bb:	je     0x1b2c1
   1b2bd:	mov    esi,DWORD PTR [esi]
   1b2bf:	jmp    0x1b2c4
   1b2c1:	mov    esi,DWORD PTR [esi+0x8]
   1b2c4:	cmp    esi,DWORD PTR ds:0x7fa8c
   1b2ca:	jne    0x1b2ab
   1b2cc:	cmp    BYTE PTR [edi+0x8],0x0
   1b2d0:	je     0x1b2ed
   1b2d2:	push   DWORD PTR [ebp+0xc]
   1b2d5:	lea    eax,[ebp+0xc]
   1b2d8:	push   ebx
   1b2d9:	push   esi
   1b2da:	push   eax
   1b2db:	mov    ecx,edi
   1b2dd:	call   0x1ad2a
   1b2e2:	mov    ecx,DWORD PTR [eax]
   1b2e4:	mov    eax,DWORD PTR [ebp+0x8]
   1b2e7:	mov    BYTE PTR [eax+0x4],0x1
   1b2eb:	jmp    0x1b320
   1b2ed:	mov    DWORD PTR [ebp-0x4],ebx
   1b2f0:	test   al,al
   1b2f2:	je     0x1b303
   1b2f4:	mov    eax,DWORD PTR [edi+0x4]
   1b2f7:	cmp    ebx,DWORD PTR [eax]
   1b2f9:	je     0x1b2d2
   1b2fb:	lea    ecx,[ebp-0x4]
   1b2fe:	call   0x1a55c
   1b303:	push   DWORD PTR [ebp+0xc]
   1b306:	mov    eax,DWORD PTR [ebp-0x4]
   1b309:	add    eax,0xc
   1b30c:	push   eax
   1b30d:	call   0x197a4
   1b312:	test   al,al
   1b314:	jne    0x1b2d2
   1b316:	mov    eax,DWORD PTR [ebp+0x8]
   1b319:	mov    ecx,DWORD PTR [ebp-0x4]
   1b31c:	mov    BYTE PTR [eax+0x4],0x0
   1b320:	pop    edi
   1b321:	pop    esi
   1b322:	mov    DWORD PTR [eax],ecx
   1b324:	pop    ebx
   1b325:	leave  
   1b326:	ret    0x8
   1b329:	int3   
   1b32a:	int3   
   1b32b:	int3   
   1b32c:	int3   
   1b32d:	int3   
   1b32e:	mov    edi,edi
   1b330:	push   ebp
   1b331:	mov    ebp,esp
   1b333:	push   ecx
   1b334:	push   ecx
   1b335:	push   DWORD PTR [ebp+0x8]
   1b338:	lea    eax,[ebp-0x8]
   1b33b:	push   eax
   1b33c:	call   0x1ac7c
   1b341:	and    DWORD PTR [ebp+0x8],0x0
   1b345:	lea    eax,[ebp+0x8]
   1b348:	push   eax
   1b349:	push   DWORD PTR [ebp-0x4]
   1b34c:	push   DWORD PTR [ebp-0x8]
   1b34f:	call   0x1b148
   1b354:	mov    eax,DWORD PTR [ebp+0x8]
   1b357:	add    esp,0xc
   1b35a:	leave  
   1b35b:	ret    0x4
   1b35e:	int3   
   1b35f:	int3   
   1b360:	int3   
   1b361:	int3   
   1b362:	int3   
   1b363:	int3   
   1b364:	mov    edi,edi
   1b366:	push   ebp
   1b367:	mov    ebp,esp
   1b369:	push   ecx
   1b36a:	push   esi
   1b36b:	mov    esi,ecx
   1b36d:	cmp    DWORD PTR [esi+0xc],0x0
   1b371:	mov    ecx,DWORD PTR [ebp+0xc]
   1b374:	je     0x1b3ae
   1b376:	mov    eax,DWORD PTR [esi+0x4]
   1b379:	cmp    ecx,DWORD PTR [eax]
   1b37b:	jne    0x1b3ae
   1b37d:	cmp    DWORD PTR [ebp+0x10],eax
   1b380:	jne    0x1b3ae
   1b382:	push   DWORD PTR [eax+0x4]
   1b385:	mov    ecx,esi
   1b387:	call   0x1b0fe
   1b38c:	mov    ecx,DWORD PTR ds:0x7fa8c
   1b392:	mov    eax,DWORD PTR [esi+0x4]
   1b395:	mov    DWORD PTR [eax+0x4],ecx
   1b398:	mov    eax,DWORD PTR [esi+0x4]
   1b39b:	and    DWORD PTR [esi+0xc],0x0
   1b39f:	mov    DWORD PTR [eax],eax
   1b3a1:	mov    eax,DWORD PTR [esi+0x4]
   1b3a4:	mov    DWORD PTR [eax+0x8],eax
   1b3a7:	mov    eax,DWORD PTR [esi+0x4]
   1b3aa:	mov    ecx,DWORD PTR [eax]
   1b3ac:	jmp    0x1b3d3
   1b3ae:	cmp    ecx,DWORD PTR [ebp+0x10]
   1b3b1:	je     0x1b3d3
   1b3b3:	push   edi
   1b3b4:	mov    edi,ecx
   1b3b6:	lea    ecx,[ebp+0xc]
   1b3b9:	call   0x1a350
   1b3be:	push   edi
   1b3bf:	lea    eax,[ebp-0x4]
   1b3c2:	push   eax
   1b3c3:	mov    ecx,esi
   1b3c5:	call   0x1ae80
   1b3ca:	mov    ecx,DWORD PTR [ebp+0xc]
   1b3cd:	cmp    ecx,DWORD PTR [ebp+0x10]
   1b3d0:	jne    0x1b3b4
   1b3d2:	pop    edi
   1b3d3:	mov    eax,DWORD PTR [ebp+0x8]
   1b3d6:	mov    DWORD PTR [eax],ecx
   1b3d8:	pop    esi
   1b3d9:	leave  
   1b3da:	ret    0xc
   1b3dd:	int3   
   1b3de:	int3   
   1b3df:	int3   
   1b3e0:	int3   
   1b3e1:	int3   
   1b3e2:	mov    edi,edi
   1b3e4:	push   ebp
   1b3e5:	mov    ebp,esp
   1b3e7:	push   esi
   1b3e8:	push   DWORD PTR [ebp+0x8]
   1b3eb:	mov    esi,ecx
   1b3ed:	mov    ecx,DWORD PTR [esi]
   1b3ef:	call   0x1b186
   1b3f4:	mov    eax,esi
   1b3f6:	pop    esi
   1b3f7:	pop    ebp
   1b3f8:	ret    0x4
   1b3fb:	int3   
   1b3fc:	int3   
   1b3fd:	int3   
   1b3fe:	int3   
   1b3ff:	int3   
   1b400:	mov    edi,edi
   1b402:	push   ebp
   1b403:	mov    ebp,esp
   1b405:	push   ecx
   1b406:	push   esi
   1b407:	push   edi
   1b408:	xor    edi,edi
   1b40a:	push   edi
   1b40b:	push   edi
   1b40c:	push   edi
   1b40d:	push   edi
   1b40e:	mov    esi,0x7fa5c
   1b413:	push   esi
   1b414:	call   DWORD PTR ds:0x1ee28
   1b41a:	test   eax,eax
   1b41c:	jl     0x1b440
   1b41e:	mov    eax,ds:0x7fa88
   1b423:	mov    ecx,DWORD PTR ds:0x7fa80
   1b429:	add    eax,0x9
   1b42c:	mov    DWORD PTR [ebp-0x4],eax
   1b42f:	lea    eax,[ebp-0x4]
   1b432:	push   eax
   1b433:	call   0x1b276
   1b438:	push   edi
   1b439:	push   esi
   1b43a:	call   DWORD PTR ds:0x1ee24
   1b440:	pop    edi
   1b441:	pop    esi
   1b442:	leave  
   1b443:	ret    
   1b444:	int3   
   1b445:	int3   
   1b446:	int3   
   1b447:	int3   
   1b448:	int3   
   1b449:	int3   
   1b44a:	mov    edi,edi
   1b44c:	push   ebp
   1b44d:	mov    ebp,esp
   1b44f:	push   ecx
   1b450:	push   ecx
   1b451:	push   DWORD PTR [ebp+0xc]
   1b454:	lea    eax,[ebp-0x8]
   1b457:	push   eax
   1b458:	call   0x1b294
   1b45d:	mov    eax,DWORD PTR [ebp+0x8]
   1b460:	mov    ecx,DWORD PTR [ebp-0x8]
   1b463:	mov    DWORD PTR [eax],ecx
   1b465:	mov    cl,BYTE PTR [ebp-0x4]
   1b468:	mov    BYTE PTR [eax+0x4],cl
   1b46b:	leave  
   1b46c:	ret    0x8
   1b46f:	int3   
   1b470:	int3   
   1b471:	int3   
   1b472:	int3   
   1b473:	int3   
   1b474:	mov    edi,edi
   1b476:	push   ebp
   1b477:	mov    ebp,esp
   1b479:	push   ecx
   1b47a:	push   ecx
   1b47b:	push   esi
   1b47c:	push   DWORD PTR [ebp+0x8]
   1b47f:	lea    eax,[ebp-0x8]
   1b482:	push   eax
   1b483:	mov    esi,ecx
   1b485:	call   0x1ac7c
   1b48a:	and    DWORD PTR [ebp+0x8],0x0
   1b48e:	lea    eax,[ebp+0x8]
   1b491:	push   eax
   1b492:	push   DWORD PTR [ebp-0x4]
   1b495:	push   DWORD PTR [ebp-0x8]
   1b498:	call   0x1b148
   1b49d:	add    esp,0xc
   1b4a0:	push   DWORD PTR [ebp-0x4]
   1b4a3:	lea    eax,[ebp-0x4]
   1b4a6:	push   DWORD PTR [ebp-0x8]
   1b4a9:	mov    ecx,esi
   1b4ab:	push   eax
   1b4ac:	call   0x1b364
   1b4b1:	mov    eax,DWORD PTR [ebp+0x8]
   1b4b4:	pop    esi
   1b4b5:	leave  
   1b4b6:	ret    0x4
   1b4b9:	int3   
   1b4ba:	int3   
   1b4bb:	int3   
   1b4bc:	int3   
   1b4bd:	int3   
   1b4be:	mov    edi,edi
   1b4c0:	push   ebp
   1b4c1:	mov    ebp,esp
   1b4c3:	jmp    0x1b4d6
   1b4c5:	push   eax
   1b4c6:	lea    ecx,[ebp+0x2c]
   1b4c9:	call   0x1b3e2
   1b4ce:	lea    ecx,[ebp+0xc]
   1b4d1:	call   0x1a2b2
   1b4d6:	mov    eax,DWORD PTR [ebp+0x14]
   1b4d9:	cmp    eax,DWORD PTR [ebp+0x24]
   1b4dc:	jne    0x1b4c5
   1b4de:	mov    eax,DWORD PTR [ebp+0x8]
   1b4e1:	mov    ecx,DWORD PTR [ebp+0x2c]
   1b4e4:	mov    DWORD PTR [eax],ecx
   1b4e6:	pop    ebp
   1b4e7:	ret    0x28
   1b4ea:	int3   
   1b4eb:	int3   
   1b4ec:	int3   
   1b4ed:	int3   
   1b4ee:	int3   
   1b4ef:	int3   
   1b4f0:	mov    edi,edi
   1b4f2:	push   ebp
   1b4f3:	mov    ebp,esp
   1b4f5:	sub    esp,0x10
   1b4f8:	push   0xffffffff
   1b4fa:	push   DWORD PTR [ebp+0x8]
   1b4fd:	lea    ecx,[ebp-0x8]
   1b500:	call   0x110ae
   1b505:	mov    ecx,DWORD PTR ds:0x7fa7c
   1b50b:	lea    eax,[ebp-0x8]
   1b50e:	push   eax
   1b50f:	lea    eax,[ebp-0x10]
   1b512:	push   eax
   1b513:	call   0x1b44a
   1b518:	push   DWORD PTR [ebp-0x8]
   1b51b:	call   0x1da14
   1b520:	pop    ecx
   1b521:	leave  
   1b522:	ret    0x4
   1b525:	int3   
   1b526:	int3   
   1b527:	int3   
   1b528:	int3   
   1b529:	int3   
   1b52a:	mov    edi,edi
   1b52c:	push   ebp
   1b52d:	mov    ebp,esp
   1b52f:	xor    eax,eax
   1b531:	push   ebx
   1b532:	push   esi
   1b533:	push   edi
   1b534:	mov    ebx,ecx
   1b536:	mov    DWORD PTR [ebx+0x4],eax
   1b539:	mov    DWORD PTR [ebx+0x8],eax
   1b53c:	mov    DWORD PTR [ebx+0xc],eax
   1b53f:	mov    DWORD PTR [ebx+0x10],eax
   1b542:	mov    DWORD PTR [ebx+0x14],eax
   1b545:	mov    DWORD PTR [ebx+0x18],eax
   1b548:	mov    DWORD PTR [ebx+0x1c],eax
   1b54b:	mov    DWORD PTR [ebx+0x20],eax
   1b54e:	mov    DWORD PTR [ebx+0x24],eax
   1b551:	mov    DWORD PTR [ebx+0x28],eax
   1b554:	mov    DWORD PTR [ebx+0x2c],eax
   1b557:	mov    eax,DWORD PTR [ebp+0x8]
   1b55a:	push   ebx
   1b55b:	sub    esp,0x10
   1b55e:	mov    edi,esp
   1b560:	lea    esi,[eax+0x14]
   1b563:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b564:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b565:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b566:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b567:	sub    esp,0x10
   1b56a:	lea    esi,[eax+0x4]
   1b56d:	mov    edi,esp
   1b56f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b570:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b571:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b572:	lea    eax,[ebp+0x8]
   1b575:	push   eax
   1b576:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b577:	call   0x1b4be
   1b57c:	pop    edi
   1b57d:	pop    esi
   1b57e:	mov    eax,ebx
   1b580:	pop    ebx
   1b581:	pop    ebp
   1b582:	ret    0x4
   1b585:	int3   
   1b586:	int3   
   1b587:	int3   
   1b588:	int3   
   1b589:	int3   
   1b58a:	mov    edi,edi
   1b58c:	push   ebp
   1b58d:	mov    ebp,esp
   1b58f:	push   ecx
   1b590:	push   ebx
   1b591:	push   0x30
   1b593:	call   0x10a66
   1b598:	xor    ebx,ebx
   1b59a:	pop    ecx
   1b59b:	cmp    eax,ebx
   1b59d:	je     0x1b5b1
   1b59f:	lea    ecx,[ebp-0x1]
   1b5a2:	push   ecx
   1b5a3:	mov    ecx,eax
   1b5a5:	call   0x1a470
   1b5aa:	mov    ds:0x7fa84,eax
   1b5af:	jmp    0x1b5b7
   1b5b1:	mov    DWORD PTR ds:0x7fa84,ebx
   1b5b7:	push   esi
   1b5b8:	push   0x10
   1b5ba:	call   0x10a66
   1b5bf:	mov    esi,eax
   1b5c1:	pop    ecx
   1b5c2:	cmp    esi,ebx
   1b5c4:	je     0x1b5d8
   1b5c6:	mov    ecx,esi
   1b5c8:	mov    BYTE PTR [esi+0x8],bl
   1b5cb:	call   0x1acae
   1b5d0:	mov    DWORD PTR ds:0x7fa7c,esi
   1b5d6:	jmp    0x1b5de
   1b5d8:	mov    DWORD PTR ds:0x7fa7c,ebx
   1b5de:	push   0xc
   1b5e0:	call   0x10a66
   1b5e5:	pop    ecx
   1b5e6:	pop    esi
   1b5e7:	cmp    eax,ebx
   1b5e9:	je     0x1b5fd
   1b5eb:	lea    ecx,[ebp-0x1]
   1b5ee:	push   ecx
   1b5ef:	mov    ecx,eax
   1b5f1:	call   0x1aac2
   1b5f6:	mov    ds:0x7fa80,eax
   1b5fb:	jmp    0x1b603
   1b5fd:	mov    DWORD PTR ds:0x7fa80,ebx
   1b603:	push   ebx
   1b604:	push   0x7fa5c
   1b609:	call   0x11c16
   1b60e:	call   eax
   1b610:	mov    DWORD PTR ds:0x7fa88,0x1
   1b61a:	pop    ebx
   1b61b:	leave  
   1b61c:	ret    
   1b61d:	int3   
   1b61e:	int3   
   1b61f:	int3   
   1b620:	int3   
   1b621:	int3   
   1b622:	push   0x3c
   1b624:	push   0x7e1d0
   1b629:	call   0x1dad4
   1b62e:	xor    esi,esi
   1b630:	push   esi
   1b631:	push   esi
   1b632:	push   esi
   1b633:	push   esi
   1b634:	push   0x7fa5c
   1b639:	call   DWORD PTR ds:0x1ee28
   1b63f:	cmp    eax,esi
   1b641:	jl     0x1b7b1
   1b647:	mov    DWORD PTR [ebp-0x4],esi
   1b64a:	mov    edi,DWORD PTR [ebp+0x8]
   1b64d:	push   edi
   1b64e:	lea    eax,[ebp-0x24]
   1b651:	push   eax
   1b652:	call   0x1a652
   1b657:	cmp    DWORD PTR [eax+0x4],esi
   1b65a:	setne  BYTE PTR [ebp-0x19]
   1b65e:	push   DWORD PTR [ebp-0x24]
   1b661:	call   0x1da14
   1b666:	pop    ecx
   1b667:	push   edi
   1b668:	lea    eax,[ebp-0x2c]
   1b66b:	push   eax
   1b66c:	call   0x1a678
   1b671:	xor    al,al
   1b673:	cmp    DWORD PTR [edi+0x14],esi
   1b676:	jne    0x1b68c
   1b678:	lea    eax,[ebp-0x2c]
   1b67b:	push   eax
   1b67c:	mov    ecx,DWORD PTR ds:0x7fa7c
   1b682:	call   0x1b32e
   1b687:	test   eax,eax
   1b689:	setne  al
   1b68c:	test   al,al
   1b68e:	je     0x1b69f
   1b690:	lea    eax,[ebp-0x2c]
   1b693:	push   eax
   1b694:	mov    ecx,DWORD PTR ds:0x7fa7c
   1b69a:	call   0x1b474
   1b69f:	mov    ebx,DWORD PTR ds:0x7fa84
   1b6a5:	cmp    DWORD PTR [ebx+0x2c],esi
   1b6a8:	jbe    0x1b708
   1b6aa:	mov    eax,ds:0x7ef24
   1b6af:	mov    DWORD PTR [ebp-0x20],eax
   1b6b2:	cmp    eax,esi
   1b6b4:	ja     0x1b6bd
   1b6b6:	mov    DWORD PTR [ebp-0x20],0x1
   1b6bd:	mov    eax,DWORD PTR [ebp-0x20]
   1b6c0:	cmp    DWORD PTR [ebx+0x2c],eax
   1b6c3:	jb     0x1b708
   1b6c5:	lea    esi,[ebx+0x4]
   1b6c8:	lea    edi,[ebp-0x3c]
   1b6cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b6cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b6cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b6ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b6cf:	mov    eax,DWORD PTR [ebp-0x34]
   1b6d2:	mov    eax,DWORD PTR [eax]
   1b6d4:	mov    eax,DWORD PTR [eax+0xc]
   1b6d7:	xor    ecx,ecx
   1b6d9:	add    eax,0x9c40
   1b6de:	push   ecx
   1b6df:	pop    esi
   1b6e0:	adc    ecx,esi
   1b6e2:	mov    edx,DWORD PTR [ebp+0x8]
   1b6e5:	mov    edx,DWORD PTR [edx+0xc]
   1b6e8:	cmp    ecx,esi
   1b6ea:	ja     0x1b708
   1b6ec:	jb     0x1b6f2
   1b6ee:	cmp    eax,edx
   1b6f0:	jae    0x1b708
   1b6f2:	mov    ecx,ebx
   1b6f4:	call   0x1a49e
   1b6f9:	mov    ecx,ebx
   1b6fb:	call   0x1aaa6
   1b700:	mov    ebx,DWORD PTR ds:0x7fa84
   1b706:	jmp    0x1b6bd
   1b708:	push   DWORD PTR [ebp+0x8]
   1b70b:	lea    eax,[ebp-0x24]
   1b70e:	push   eax
   1b70f:	call   0x1a678
   1b714:	push   eax
   1b715:	lea    eax,[ebp-0x3c]
   1b718:	push   eax
   1b719:	call   0x1a6c4
   1b71e:	push   DWORD PTR [ebp-0x24]
   1b721:	call   0x1da14
   1b726:	pop    ecx
   1b727:	mov    ebx,DWORD PTR ds:0x7fa84
   1b72d:	lea    esi,[ebx+0x14]
   1b730:	lea    edi,[ebp-0x4c]
   1b733:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b734:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b735:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b736:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b737:	mov    esi,DWORD PTR [ebp-0x34]
   1b73a:	cmp    esi,DWORD PTR [ebp-0x44]
   1b73d:	je     0x1b771
   1b73f:	mov    eax,DWORD PTR [esi]
   1b741:	mov    BYTE PTR [eax+0x1c],0x0
   1b745:	mov    eax,DWORD PTR [esi]
   1b747:	cmp    BYTE PTR [eax+0x24],0x0
   1b74b:	jne    0x1b75b
   1b74d:	mov    BYTE PTR [eax+0x24],0x1
   1b751:	mov    eax,DWORD PTR [esi]
   1b753:	push   DWORD PTR [eax+0x8]
   1b756:	call   0x1a418
   1b75b:	mov    eax,DWORD PTR [esi]
   1b75d:	mov    ecx,DWORD PTR [eax+0x8]
   1b760:	mov    eax,DWORD PTR [ebp+0x8]
   1b763:	mov    DWORD PTR [eax+0x8],ecx
   1b766:	mov    ecx,DWORD PTR [esi]
   1b768:	mov    ecx,DWORD PTR [ecx+0x20]
   1b76b:	inc    ecx
   1b76c:	mov    DWORD PTR [eax+0x20],ecx
   1b76f:	jmp    0x1b774
   1b771:	mov    eax,DWORD PTR [ebp+0x8]
   1b774:	mov    cl,BYTE PTR [ebp-0x19]
   1b777:	mov    BYTE PTR [eax+0x1c],cl
   1b77a:	lea    eax,[ebp+0x8]
   1b77d:	push   eax
   1b77e:	mov    ecx,ebx
   1b780:	call   0x1b186
   1b785:	inc    DWORD PTR ds:0x7fa88
   1b78b:	push   DWORD PTR [ebp-0x2c]
   1b78e:	call   0x1da14
   1b793:	pop    ecx
   1b794:	jmp    0x1b79d
   1b796:	xor    eax,eax
   1b798:	inc    eax
   1b799:	ret    
   1b79a:	mov    esp,DWORD PTR [ebp-0x18]
   1b79d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1b7a4:	push   0x0
   1b7a6:	push   0x7fa5c
   1b7ab:	call   DWORD PTR ds:0x1ee24
   1b7b1:	call   0x1db19
   1b7b6:	ret    0x4
   1b7b9:	int3   
   1b7ba:	int3   
   1b7bb:	int3   
   1b7bc:	int3   
   1b7bd:	int3   
   1b7be:	push   0x48
   1b7c0:	push   0x7e1f0
   1b7c5:	call   0x1dad4
   1b7ca:	xor    ebx,ebx
   1b7cc:	push   ebx
   1b7cd:	push   ebx
   1b7ce:	push   ebx
   1b7cf:	push   ebx
   1b7d0:	push   0x7fa5c
   1b7d5:	call   DWORD PTR ds:0x1ee28
   1b7db:	cmp    eax,ebx
   1b7dd:	jl     0x1b88b
   1b7e3:	mov    DWORD PTR [ebp-0x4],ebx
   1b7e6:	push   DWORD PTR ds:0x7fa80
   1b7ec:	lea    ecx,[ebp-0x28]
   1b7ef:	call   0x1b1e0
   1b7f4:	mov    BYTE PTR [ebp-0x19],bl
   1b7f7:	cmp    DWORD PTR [ebp-0x20],ebx
   1b7fa:	je     0x1b81a
   1b7fc:	mov    eax,DWORD PTR [ebp-0x24]
   1b7ff:	mov    eax,DWORD PTR [eax]
   1b801:	mov    eax,DWORD PTR [eax+0x8]
   1b804:	cmp    eax,DWORD PTR ds:0x7fa88
   1b80a:	ja     0x1b81a
   1b80c:	mov    BYTE PTR [ebp-0x19],0x1
   1b810:	lea    ecx,[ebp-0x28]
   1b813:	call   0x1ab1c
   1b818:	jmp    0x1b7f7
   1b81a:	cmp    BYTE PTR [ebp-0x19],bl
   1b81d:	je     0x1b855
   1b81f:	push   DWORD PTR ds:0x7fa84
   1b825:	lea    ecx,[ebp-0x58]
   1b828:	call   0x1b52a
   1b82d:	mov    esi,DWORD PTR [ebp+0x8]
   1b830:	push   esi
   1b831:	lea    eax,[ebp-0x58]
   1b834:	push   eax
   1b835:	call   0x1a762
   1b83a:	cmp    DWORD PTR [esi],ebx
   1b83c:	jne    0x1b84d
   1b83e:	lea    eax,[ebp-0x28]
   1b841:	push   eax
   1b842:	mov    ecx,DWORD PTR ds:0x7fa80
   1b848:	call   0x1b21e
   1b84d:	lea    ecx,[ebp-0x58]
   1b850:	call   0x1b16a
   1b855:	lea    ecx,[ebp-0x28]
   1b858:	call   0x1aae8
   1b85d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1b864:	jmp    0x1b87f
   1b866:	xor    eax,eax
   1b868:	inc    eax
   1b869:	ret    
   1b86a:	mov    esp,DWORD PTR [ebp-0x18]
   1b86d:	mov    eax,DWORD PTR [ebp+0x8]
   1b870:	mov    DWORD PTR [eax],0x2
   1b876:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1b87d:	xor    ebx,ebx
   1b87f:	push   ebx
   1b880:	push   0x7fa5c
   1b885:	call   DWORD PTR ds:0x1ee24
   1b88b:	call   0x1db19
   1b890:	ret    0x4
   1b893:	int3   
   1b894:	int3   
   1b895:	int3   
   1b896:	int3   
   1b897:	int3   
   1b898:	mov    edi,edi
   1b89a:	push   ebp
   1b89b:	mov    ebp,esp
   1b89d:	mov    ecx,DWORD PTR [ebp+0x8]
   1b8a0:	xor    edx,edx
   1b8a2:	cmp    ecx,edx
   1b8a4:	je     0x1b8f4
   1b8a6:	mov    eax,DWORD PTR [ecx+0x1c]
   1b8a9:	cmp    eax,edx
   1b8ab:	je     0x1b8f4
   1b8ad:	mov    DWORD PTR [eax+0x1c],edx
   1b8b0:	mov    DWORD PTR [ecx+0x14],edx
   1b8b3:	mov    DWORD PTR [ecx+0x8],edx
   1b8b6:	mov    DWORD PTR [ecx+0x18],edx
   1b8b9:	mov    DWORD PTR [ecx+0x30],0x1
   1b8c0:	lea    ecx,[eax+0x530]
   1b8c6:	mov    DWORD PTR [eax],edx
   1b8c8:	mov    DWORD PTR [eax+0x4],edx
   1b8cb:	mov    DWORD PTR [eax+0xc],edx
   1b8ce:	mov    DWORD PTR [eax+0x14],0x8000
   1b8d5:	mov    DWORD PTR [eax+0x20],edx
   1b8d8:	mov    DWORD PTR [eax+0x28],edx
   1b8db:	mov    DWORD PTR [eax+0x2c],edx
   1b8de:	mov    DWORD PTR [eax+0x30],edx
   1b8e1:	mov    DWORD PTR [eax+0x38],edx
   1b8e4:	mov    DWORD PTR [eax+0x3c],edx
   1b8e7:	mov    DWORD PTR [eax+0x6c],ecx
   1b8ea:	mov    DWORD PTR [eax+0x50],ecx
   1b8ed:	mov    DWORD PTR [eax+0x4c],ecx
   1b8f0:	xor    eax,eax
   1b8f2:	jmp    0x1b8f7
   1b8f4:	push   0xfffffffe
   1b8f6:	pop    eax
   1b8f7:	pop    ebp
   1b8f8:	ret    0x4
   1b8fb:	int3   
   1b8fc:	int3   
   1b8fd:	int3   
   1b8fe:	int3   
   1b8ff:	int3   
   1b900:	mov    edi,edi
   1b902:	push   ebp
   1b903:	mov    ebp,esp
   1b905:	mov    eax,DWORD PTR [ebp+0x10]
   1b908:	push   esi
   1b909:	push   edi
   1b90a:	xor    edi,edi
   1b90c:	cmp    eax,edi
   1b90e:	je     0x1b9a9
   1b914:	cmp    BYTE PTR [eax],0x31
   1b917:	jne    0x1b9a9
   1b91d:	cmp    DWORD PTR [ebp+0x14],0x38
   1b921:	jne    0x1b9a9
   1b927:	mov    esi,DWORD PTR [ebp+0x8]
   1b92a:	cmp    esi,edi
   1b92c:	jne    0x1b932
   1b92e:	push   0xfffffffe
   1b930:	jmp    0x1b9ab
   1b932:	mov    DWORD PTR [esi+0x18],edi
   1b935:	cmp    DWORD PTR [esi+0x20],edi
   1b938:	jne    0x1b944
   1b93a:	mov    DWORD PTR [esi+0x20],0x1cd00
   1b941:	mov    DWORD PTR [esi+0x28],edi
   1b944:	cmp    DWORD PTR [esi+0x24],edi
   1b947:	jne    0x1b950
   1b949:	mov    DWORD PTR [esi+0x24],0x1cd1c
   1b950:	push   0x2530
   1b955:	push   0x1
   1b957:	push   DWORD PTR [esi+0x28]
   1b95a:	call   DWORD PTR [esi+0x20]
   1b95d:	cmp    eax,edi
   1b95f:	jne    0x1b965
   1b961:	push   0xfffffffc
   1b963:	jmp    0x1b9ab
   1b965:	mov    ecx,DWORD PTR [ebp+0xc]
   1b968:	cmp    ecx,edi
   1b96a:	mov    DWORD PTR [esi+0x1c],eax
   1b96d:	jge    0x1b976
   1b96f:	mov    DWORD PTR [eax+0x8],edi
   1b972:	neg    ecx
   1b974:	jmp    0x1b987
   1b976:	mov    edx,ecx
   1b978:	sar    edx,0x4
   1b97b:	inc    edx
   1b97c:	cmp    ecx,0x30
   1b97f:	mov    DWORD PTR [eax+0x8],edx
   1b982:	jge    0x1b987
   1b984:	and    ecx,0xf
   1b987:	lea    edx,[ecx-0x8]
   1b98a:	cmp    edx,0x7
   1b98d:	ja     0x1b99d
   1b98f:	push   esi
   1b990:	mov    DWORD PTR [eax+0x24],ecx
   1b993:	mov    DWORD PTR [eax+0x34],edi
   1b996:	call   0x1b898
   1b99b:	jmp    0x1b9ac
   1b99d:	push   eax
   1b99e:	push   DWORD PTR [esi+0x28]
   1b9a1:	call   DWORD PTR [esi+0x24]
   1b9a4:	mov    DWORD PTR [esi+0x1c],edi
   1b9a7:	jmp    0x1b92e
   1b9a9:	push   0xfffffffa
   1b9ab:	pop    eax
   1b9ac:	pop    edi
   1b9ad:	pop    esi
   1b9ae:	pop    ebp
   1b9af:	ret    0x10
   1b9b2:	int3   
   1b9b3:	int3   
   1b9b4:	int3   
   1b9b5:	int3   
   1b9b6:	int3   
   1b9b7:	int3   
   1b9b8:	mov    edi,edi
   1b9ba:	push   ebp
   1b9bb:	mov    ebp,esp
   1b9bd:	push   ecx
   1b9be:	push   ebx
   1b9bf:	push   esi
   1b9c0:	mov    esi,DWORD PTR [edi+0x1c]
   1b9c3:	cmp    DWORD PTR [esi+0x34],0x0
   1b9c7:	mov    ebx,eax
   1b9c9:	jne    0x1b9e9
   1b9cb:	mov    ecx,DWORD PTR [esi+0x24]
   1b9ce:	xor    eax,eax
   1b9d0:	inc    eax
   1b9d1:	shl    eax,cl
   1b9d3:	push   0x1
   1b9d5:	push   eax
   1b9d6:	push   DWORD PTR [edi+0x28]
   1b9d9:	call   DWORD PTR [edi+0x20]
   1b9dc:	mov    DWORD PTR [esi+0x34],eax
   1b9df:	test   eax,eax
   1b9e1:	jne    0x1b9e9
   1b9e3:	inc    eax
   1b9e4:	jmp    0x1ba8b
   1b9e9:	xor    eax,eax
   1b9eb:	cmp    DWORD PTR [esi+0x28],eax
   1b9ee:	jne    0x1ba01
   1b9f0:	mov    ecx,DWORD PTR [esi+0x24]
   1b9f3:	xor    edx,edx
   1b9f5:	inc    edx
   1b9f6:	shl    edx,cl
   1b9f8:	mov    DWORD PTR [esi+0x30],eax
   1b9fb:	mov    DWORD PTR [esi+0x2c],eax
   1b9fe:	mov    DWORD PTR [esi+0x28],edx
   1ba01:	sub    ebx,DWORD PTR [edi+0x10]
   1ba04:	mov    eax,DWORD PTR [esi+0x28]
   1ba07:	cmp    ebx,eax
   1ba09:	jb     0x1ba23
   1ba0b:	mov    ecx,DWORD PTR [edi+0xc]
   1ba0e:	push   eax
   1ba0f:	sub    ecx,eax
   1ba11:	push   ecx
   1ba12:	push   DWORD PTR [esi+0x34]
   1ba15:	call   0x1da96
   1ba1a:	add    esp,0xc
   1ba1d:	and    DWORD PTR [esi+0x30],0x0
   1ba21:	jmp    0x1ba64
   1ba23:	sub    eax,DWORD PTR [esi+0x30]
   1ba26:	mov    DWORD PTR [ebp-0x4],eax
   1ba29:	cmp    eax,ebx
   1ba2b:	jbe    0x1ba30
   1ba2d:	mov    DWORD PTR [ebp-0x4],ebx
   1ba30:	mov    eax,DWORD PTR [edi+0xc]
   1ba33:	push   DWORD PTR [ebp-0x4]
   1ba36:	sub    eax,ebx
   1ba38:	push   eax
   1ba39:	mov    eax,DWORD PTR [esi+0x34]
   1ba3c:	add    eax,DWORD PTR [esi+0x30]
   1ba3f:	push   eax
   1ba40:	call   0x1da96
   1ba45:	mov    eax,DWORD PTR [ebp-0x4]
   1ba48:	add    esp,0xc
   1ba4b:	sub    ebx,eax
   1ba4d:	je     0x1ba6c
   1ba4f:	mov    eax,DWORD PTR [edi+0xc]
   1ba52:	push   ebx
   1ba53:	sub    eax,ebx
   1ba55:	push   eax
   1ba56:	push   DWORD PTR [esi+0x34]
   1ba59:	call   0x1da96
   1ba5e:	add    esp,0xc
   1ba61:	mov    DWORD PTR [esi+0x30],ebx
   1ba64:	mov    eax,DWORD PTR [esi+0x28]
   1ba67:	mov    DWORD PTR [esi+0x2c],eax
   1ba6a:	jmp    0x1ba89
   1ba6c:	add    DWORD PTR [esi+0x30],eax
   1ba6f:	mov    ecx,DWORD PTR [esi+0x30]
   1ba72:	mov    edx,DWORD PTR [esi+0x28]
   1ba75:	cmp    ecx,edx
   1ba77:	jne    0x1ba7d
   1ba79:	and    DWORD PTR [esi+0x30],0x0
   1ba7d:	mov    ecx,DWORD PTR [esi+0x2c]
   1ba80:	cmp    ecx,edx
   1ba82:	jae    0x1ba89
   1ba84:	add    ecx,eax
   1ba86:	mov    DWORD PTR [esi+0x2c],ecx
   1ba89:	xor    eax,eax
   1ba8b:	pop    esi
   1ba8c:	pop    ebx
   1ba8d:	leave  
   1ba8e:	ret    
   1ba8f:	int3   
   1ba90:	int3   
   1ba91:	int3   
   1ba92:	int3   
   1ba93:	int3   
   1ba94:	mov    edi,edi
   1ba96:	push   ebp
   1ba97:	mov    ebp,esp
   1ba99:	mov    edx,DWORD PTR [ebp+0x8]
   1ba9c:	sub    esp,0x2c
   1ba9f:	push   ebx
   1baa0:	xor    eax,eax
   1baa2:	push   esi
   1baa3:	push   edi
   1baa4:	cmp    edx,eax
   1baa6:	je     0x1baf6
   1baa8:	mov    esi,DWORD PTR [edx+0x1c]
   1baab:	cmp    esi,eax
   1baad:	je     0x1baf6
   1baaf:	cmp    DWORD PTR [edx+0xc],eax
   1bab2:	je     0x1baf6
   1bab4:	cmp    DWORD PTR [edx],eax
   1bab6:	jne    0x1babd
   1bab8:	cmp    DWORD PTR [edx+0x4],eax
   1babb:	jne    0x1baf6
   1babd:	cmp    DWORD PTR [esi],0xb
   1bac0:	jne    0x1bac8
   1bac2:	mov    DWORD PTR [esi],0xc
   1bac8:	mov    eax,DWORD PTR [edx+0xc]
   1bacb:	mov    ecx,DWORD PTR [edx+0x10]
   1bace:	and    DWORD PTR [ebp-0x24],0x0
   1bad2:	mov    ebx,DWORD PTR [esi+0x38]
   1bad5:	mov    edi,DWORD PTR [esi+0x3c]
   1bad8:	mov    DWORD PTR [ebp-0x18],eax
   1badb:	mov    eax,DWORD PTR [edx]
   1badd:	mov    DWORD PTR [ebp-0x4],eax
   1bae0:	mov    eax,DWORD PTR [edx+0x4]
   1bae3:	mov    DWORD PTR [ebp-0x8],eax
   1bae6:	mov    DWORD PTR [ebp-0x2c],eax
   1bae9:	mov    eax,DWORD PTR [esi]
   1baeb:	mov    DWORD PTR [ebp-0x14],ecx
   1baee:	mov    DWORD PTR [ebp-0x1c],ecx
   1baf1:	cmp    eax,0x1c
   1baf4:	jbe    0x1bb03
   1baf6:	push   0xfffffffe
   1baf8:	pop    eax
   1baf9:	pop    edi
   1bafa:	pop    esi
   1bafb:	pop    ebx
   1bafc:	leave  
   1bafd:	ret    0x8
   1bb00:	mov    edx,DWORD PTR [ebp+0x8]
   1bb03:	jmp    DWORD PTR [eax*4+0x1cc40]
   1bb0a:	mov    eax,DWORD PTR [esi+0x8]
   1bb0d:	test   eax,eax
   1bb0f:	jne    0x1bb3b
   1bb11:	mov    DWORD PTR [esi],0xc
   1bb17:	jmp    0x1cb10
   1bb1c:	cmp    DWORD PTR [ebp-0x8],0x0
   1bb20:	je     0x1cb5e
   1bb26:	mov    ecx,DWORD PTR [ebp-0x4]
   1bb29:	movzx  edx,BYTE PTR [ecx]
   1bb2c:	dec    DWORD PTR [ebp-0x8]
   1bb2f:	mov    ecx,edi
   1bb31:	shl    edx,cl
   1bb33:	add    ebx,edx
   1bb35:	inc    DWORD PTR [ebp-0x4]
   1bb38:	add    edi,0x8
   1bb3b:	cmp    edi,0x10
   1bb3e:	jb     0x1bb1c
   1bb40:	test   al,0x2
   1bb42:	je     0x1bb7f
   1bb44:	cmp    ebx,0x8b1f
   1bb4a:	jne    0x1bb7f
   1bb4c:	xor    edi,edi
   1bb4e:	push   edi
   1bb4f:	push   edi
   1bb50:	push   edi
   1bb51:	call   0x1d9c2
   1bb56:	mov    DWORD PTR [esi+0x18],eax
   1bb59:	push   0x2
   1bb5b:	lea    eax,[ebp-0x10]
   1bb5e:	push   eax
   1bb5f:	mov    BYTE PTR [ebp-0x10],0x1f
   1bb63:	mov    BYTE PTR [ebp-0xf],0x8b
   1bb67:	push   DWORD PTR [esi+0x18]
   1bb6a:	call   0x1d9c2
   1bb6f:	mov    DWORD PTR [esi+0x18],eax
   1bb72:	xor    ebx,ebx
   1bb74:	mov    DWORD PTR [esi],0x1
   1bb7a:	jmp    0x1cb10
   1bb7f:	mov    eax,DWORD PTR [esi+0x20]
   1bb82:	and    DWORD PTR [esi+0x10],0x0
   1bb86:	test   eax,eax
   1bb88:	je     0x1bb8e
   1bb8a:	or     DWORD PTR [eax+0x30],0xffffffff
   1bb8e:	test   BYTE PTR [esi+0x8],0x1
   1bb92:	je     0x1bc18
   1bb98:	movzx  eax,bl
   1bb9b:	shl    eax,0x8
   1bb9e:	mov    ecx,ebx
   1bba0:	shr    ecx,0x8
   1bba3:	add    eax,ecx
   1bba5:	push   0x1f
   1bba7:	xor    edx,edx
   1bba9:	pop    ecx
   1bbaa:	div    ecx
   1bbac:	test   edx,edx
   1bbae:	jne    0x1bc18
   1bbb0:	mov    eax,ebx
   1bbb2:	and    al,0xf
   1bbb4:	cmp    al,0x8
   1bbb6:	je     0x1bbc7
   1bbb8:	mov    eax,DWORD PTR [ebp+0x8]
   1bbbb:	mov    DWORD PTR [eax+0x18],0x1eddc
   1bbc2:	jmp    0x1cb0a
   1bbc7:	shr    ebx,0x4
   1bbca:	mov    ecx,ebx
   1bbcc:	and    ecx,0xf
   1bbcf:	add    ecx,0x8
   1bbd2:	sub    edi,0x4
   1bbd5:	cmp    ecx,DWORD PTR [esi+0x24]
   1bbd8:	jbe    0x1bbe9
   1bbda:	mov    eax,DWORD PTR [ebp+0x8]
   1bbdd:	mov    DWORD PTR [eax+0x18],0x1edc8
   1bbe4:	jmp    0x1cb0a
   1bbe9:	xor    eax,eax
   1bbeb:	xor    edi,edi
   1bbed:	inc    eax
   1bbee:	push   edi
   1bbef:	shl    eax,cl
   1bbf1:	push   edi
   1bbf2:	push   edi
   1bbf3:	mov    DWORD PTR [esi+0x14],eax
   1bbf6:	call   0x1d520
   1bbfb:	mov    ecx,DWORD PTR [ebp+0x8]
   1bbfe:	shr    ebx,0x8
   1bc01:	not    ebx
   1bc03:	and    ebx,0x2
   1bc06:	or     ebx,0x9
   1bc09:	mov    DWORD PTR [esi+0x18],eax
   1bc0c:	mov    DWORD PTR [ecx+0x30],eax
   1bc0f:	mov    DWORD PTR [esi],ebx
   1bc11:	xor    ebx,ebx
   1bc13:	jmp    0x1cb10
   1bc18:	mov    eax,DWORD PTR [ebp+0x8]
   1bc1b:	mov    DWORD PTR [eax+0x18],0x1edb0
   1bc22:	mov    DWORD PTR [esi],0x1b
   1bc28:	nop
   1bc29:	jmp    0x1cb10
   1bc2e:	cmp    edi,0x10
   1bc31:	jae    0x1bc5a
   1bc33:	cmp    DWORD PTR [ebp-0x8],0x0
   1bc37:	je     0x1cb5e
   1bc3d:	mov    eax,DWORD PTR [ebp-0x4]
   1bc40:	movzx  eax,BYTE PTR [eax]
   1bc43:	dec    DWORD PTR [ebp-0x8]
   1bc46:	mov    ecx,edi
   1bc48:	shl    eax,cl
   1bc4a:	add    edi,0x8
   1bc4d:	add    ebx,eax
   1bc4f:	inc    DWORD PTR [ebp-0x4]
   1bc52:	cmp    edi,0x10
   1bc55:	jb     0x1bc33
   1bc57:	mov    edx,DWORD PTR [ebp+0x8]
   1bc5a:	mov    DWORD PTR [esi+0x10],ebx
   1bc5d:	cmp    bl,0x8
   1bc60:	je     0x1bc6e
   1bc62:	mov    DWORD PTR [edx+0x18],0x1eddc
   1bc69:	jmp    0x1cb0a
   1bc6e:	test   ebx,0xe000
   1bc74:	je     0x1bc82
   1bc76:	mov    DWORD PTR [edx+0x18],0x1ed96
   1bc7d:	jmp    0x1cb0a
   1bc82:	mov    eax,DWORD PTR [esi+0x20]
   1bc85:	test   eax,eax
   1bc87:	je     0x1bc93
   1bc89:	mov    ecx,ebx
   1bc8b:	shr    ecx,0x8
   1bc8e:	and    ecx,0x1
   1bc91:	mov    DWORD PTR [eax],ecx
   1bc93:	test   DWORD PTR [esi+0x10],0x200
   1bc9a:	je     0x1bcb9
   1bc9c:	mov    BYTE PTR [ebp-0x10],bl
   1bc9f:	push   0x2
   1bca1:	lea    eax,[ebp-0x10]
   1bca4:	shr    ebx,0x8
   1bca7:	push   eax
   1bca8:	mov    BYTE PTR [ebp-0xf],bl
   1bcab:	push   DWORD PTR [esi+0x18]
   1bcae:	call   0x1d9c2
   1bcb3:	mov    edx,DWORD PTR [ebp+0x8]
   1bcb6:	mov    DWORD PTR [esi+0x18],eax
   1bcb9:	xor    ebx,ebx
   1bcbb:	xor    edi,edi
   1bcbd:	mov    DWORD PTR [esi],0x2
   1bcc3:	cmp    edi,0x20
   1bcc6:	jae    0x1bcef
   1bcc8:	cmp    DWORD PTR [ebp-0x8],0x0
   1bccc:	je     0x1cb5e
   1bcd2:	mov    eax,DWORD PTR [ebp-0x4]
   1bcd5:	movzx  eax,BYTE PTR [eax]
   1bcd8:	dec    DWORD PTR [ebp-0x8]
   1bcdb:	mov    ecx,edi
   1bcdd:	shl    eax,cl
   1bcdf:	add    edi,0x8
   1bce2:	add    ebx,eax
   1bce4:	inc    DWORD PTR [ebp-0x4]
   1bce7:	cmp    edi,0x20
   1bcea:	jb     0x1bcc8
   1bcec:	mov    edx,DWORD PTR [ebp+0x8]
   1bcef:	mov    eax,DWORD PTR [esi+0x20]
   1bcf2:	test   eax,eax
   1bcf4:	je     0x1bcf9
   1bcf6:	mov    DWORD PTR [eax+0x4],ebx
   1bcf9:	test   DWORD PTR [esi+0x10],0x200
   1bd00:	je     0x1bd2f
   1bd02:	mov    eax,ebx
   1bd04:	shr    eax,0x8
   1bd07:	mov    BYTE PTR [ebp-0xf],al
   1bd0a:	mov    eax,ebx
   1bd0c:	shr    eax,0x10
   1bd0f:	mov    BYTE PTR [ebp-0xe],al
   1bd12:	mov    BYTE PTR [ebp-0x10],bl
   1bd15:	push   0x4
   1bd17:	lea    eax,[ebp-0x10]
   1bd1a:	shr    ebx,0x18
   1bd1d:	push   eax
   1bd1e:	mov    BYTE PTR [ebp-0xd],bl
   1bd21:	push   DWORD PTR [esi+0x18]
   1bd24:	call   0x1d9c2
   1bd29:	mov    edx,DWORD PTR [ebp+0x8]
   1bd2c:	mov    DWORD PTR [esi+0x18],eax
   1bd2f:	xor    ebx,ebx
   1bd31:	xor    edi,edi
   1bd33:	mov    DWORD PTR [esi],0x3
   1bd39:	cmp    edi,0x10
   1bd3c:	jae    0x1bd65
   1bd3e:	cmp    DWORD PTR [ebp-0x8],0x0
   1bd42:	je     0x1cb5e
   1bd48:	mov    eax,DWORD PTR [ebp-0x4]
   1bd4b:	movzx  eax,BYTE PTR [eax]
   1bd4e:	dec    DWORD PTR [ebp-0x8]
   1bd51:	mov    ecx,edi
   1bd53:	shl    eax,cl
   1bd55:	add    edi,0x8
   1bd58:	add    ebx,eax
   1bd5a:	inc    DWORD PTR [ebp-0x4]
   1bd5d:	cmp    edi,0x10
   1bd60:	jb     0x1bd3e
   1bd62:	mov    edx,DWORD PTR [ebp+0x8]
   1bd65:	mov    eax,DWORD PTR [esi+0x20]
   1bd68:	test   eax,eax
   1bd6a:	je     0x1bd82
   1bd6c:	mov    ecx,ebx
   1bd6e:	and    ecx,0xff
   1bd74:	mov    DWORD PTR [eax+0x8],ecx
   1bd77:	mov    ecx,DWORD PTR [esi+0x20]
   1bd7a:	mov    eax,ebx
   1bd7c:	shr    eax,0x8
   1bd7f:	mov    DWORD PTR [ecx+0xc],eax
   1bd82:	test   DWORD PTR [esi+0x10],0x200
   1bd89:	je     0x1bda8
   1bd8b:	mov    BYTE PTR [ebp-0x10],bl
   1bd8e:	push   0x2
   1bd90:	lea    eax,[ebp-0x10]
   1bd93:	shr    ebx,0x8
   1bd96:	push   eax
   1bd97:	mov    BYTE PTR [ebp-0xf],bl
   1bd9a:	push   DWORD PTR [esi+0x18]
   1bd9d:	call   0x1d9c2
   1bda2:	mov    edx,DWORD PTR [ebp+0x8]
   1bda5:	mov    DWORD PTR [esi+0x18],eax
   1bda8:	xor    ebx,ebx
   1bdaa:	xor    edi,edi
   1bdac:	mov    DWORD PTR [esi],0x4
   1bdb2:	test   DWORD PTR [esi+0x10],0x400
   1bdb9:	je     0x1be20
   1bdbb:	cmp    edi,0x10
   1bdbe:	jae    0x1bde7
   1bdc0:	cmp    DWORD PTR [ebp-0x8],0x0
   1bdc4:	je     0x1cb5e
   1bdca:	mov    eax,DWORD PTR [ebp-0x4]
   1bdcd:	movzx  eax,BYTE PTR [eax]
   1bdd0:	dec    DWORD PTR [ebp-0x8]
   1bdd3:	mov    ecx,edi
   1bdd5:	shl    eax,cl
   1bdd7:	add    edi,0x8
   1bdda:	add    ebx,eax
   1bddc:	inc    DWORD PTR [ebp-0x4]
   1bddf:	cmp    edi,0x10
   1bde2:	jb     0x1bdc0
   1bde4:	mov    edx,DWORD PTR [ebp+0x8]
   1bde7:	mov    eax,DWORD PTR [esi+0x20]
   1bdea:	mov    DWORD PTR [esi+0x40],ebx
   1bded:	test   eax,eax
   1bdef:	je     0x1bdf4
   1bdf1:	mov    DWORD PTR [eax+0x14],ebx
   1bdf4:	test   DWORD PTR [esi+0x10],0x200
   1bdfb:	je     0x1be1a
   1bdfd:	mov    BYTE PTR [ebp-0x10],bl
   1be00:	push   0x2
   1be02:	lea    eax,[ebp-0x10]
   1be05:	shr    ebx,0x8
   1be08:	push   eax
   1be09:	mov    BYTE PTR [ebp-0xf],bl
   1be0c:	push   DWORD PTR [esi+0x18]
   1be0f:	call   0x1d9c2
   1be14:	mov    edx,DWORD PTR [ebp+0x8]
   1be17:	mov    DWORD PTR [esi+0x18],eax
   1be1a:	xor    ebx,ebx
   1be1c:	xor    edi,edi
   1be1e:	jmp    0x1be2b
   1be20:	mov    eax,DWORD PTR [esi+0x20]
   1be23:	test   eax,eax
   1be25:	je     0x1be2b
   1be27:	and    DWORD PTR [eax+0x10],0x0
   1be2b:	mov    DWORD PTR [esi],0x5
   1be31:	test   DWORD PTR [esi+0x10],0x400
   1be38:	je     0x1bec2
   1be3e:	mov    edx,DWORD PTR [esi+0x40]
   1be41:	mov    eax,DWORD PTR [ebp-0x8]
   1be44:	mov    DWORD PTR [ebp-0xc],edx
   1be47:	cmp    edx,eax
   1be49:	jbe    0x1be4e
   1be4b:	mov    DWORD PTR [ebp-0xc],eax
   1be4e:	cmp    DWORD PTR [ebp-0xc],0x0
   1be52:	je     0x1beb5
   1be54:	mov    ecx,DWORD PTR [esi+0x20]
   1be57:	test   ecx,ecx
   1be59:	je     0x1be8f
   1be5b:	mov    eax,DWORD PTR [ecx+0x10]
   1be5e:	mov    DWORD PTR [ebp-0x28],eax
   1be61:	test   eax,eax
   1be63:	je     0x1be8f
   1be65:	mov    eax,DWORD PTR [ecx+0x14]
   1be68:	mov    ecx,DWORD PTR [ecx+0x18]
   1be6b:	sub    eax,edx
   1be6d:	mov    edx,DWORD PTR [ebp-0xc]
   1be70:	add    edx,eax
   1be72:	cmp    edx,ecx
   1be74:	jbe    0x1be7a
   1be76:	sub    ecx,eax
   1be78:	jmp    0x1be7d
   1be7a:	mov    ecx,DWORD PTR [ebp-0xc]
   1be7d:	push   ecx
   1be7e:	mov    ecx,DWORD PTR [ebp-0x28]
   1be81:	push   DWORD PTR [ebp-0x4]
   1be84:	add    ecx,eax
   1be86:	push   ecx
   1be87:	call   0x1da96
   1be8c:	add    esp,0xc
   1be8f:	test   DWORD PTR [esi+0x10],0x200
   1be96:	je     0x1bea9
   1be98:	push   DWORD PTR [ebp-0xc]
   1be9b:	push   DWORD PTR [ebp-0x4]
   1be9e:	push   DWORD PTR [esi+0x18]
   1bea1:	call   0x1d9c2
   1bea6:	mov    DWORD PTR [esi+0x18],eax
   1bea9:	mov    eax,DWORD PTR [ebp-0xc]
   1beac:	sub    DWORD PTR [ebp-0x8],eax
   1beaf:	add    DWORD PTR [ebp-0x4],eax
   1beb2:	sub    DWORD PTR [esi+0x40],eax
   1beb5:	cmp    DWORD PTR [esi+0x40],0x0
   1beb9:	jne    0x1cb5e
   1bebf:	mov    edx,DWORD PTR [ebp+0x8]
   1bec2:	and    DWORD PTR [esi+0x40],0x0
   1bec6:	mov    DWORD PTR [esi],0x6
   1becc:	test   DWORD PTR [esi+0x10],0x800
   1bed3:	je     0x1bf50
   1bed5:	cmp    DWORD PTR [ebp-0x8],0x0
   1bed9:	je     0x1cb5e
   1bedf:	xor    ecx,ecx
   1bee1:	mov    eax,DWORD PTR [ebp-0x4]
   1bee4:	movzx  eax,BYTE PTR [ecx+eax*1]
   1bee8:	inc    ecx
   1bee9:	mov    DWORD PTR [ebp-0xc],ecx
   1beec:	mov    ecx,DWORD PTR [esi+0x20]
   1beef:	mov    DWORD PTR [ebp-0x20],eax
   1bef2:	test   ecx,ecx
   1bef4:	je     0x1bf11
   1bef6:	mov    edx,DWORD PTR [ecx+0x1c]
   1bef9:	mov    DWORD PTR [ebp-0x28],edx
   1befc:	test   edx,edx
   1befe:	je     0x1bf11
   1bf00:	mov    edx,DWORD PTR [esi+0x40]
   1bf03:	cmp    edx,DWORD PTR [ecx+0x20]
   1bf06:	jae    0x1bf11
   1bf08:	mov    ecx,DWORD PTR [ebp-0x28]
   1bf0b:	mov    BYTE PTR [ecx+edx*1],al
   1bf0e:	inc    DWORD PTR [esi+0x40]
   1bf11:	test   eax,eax
   1bf13:	je     0x1bf1d
   1bf15:	mov    ecx,DWORD PTR [ebp-0xc]
   1bf18:	cmp    ecx,DWORD PTR [ebp-0x8]
   1bf1b:	jb     0x1bee1
   1bf1d:	test   DWORD PTR [esi+0x10],0x200
   1bf24:	je     0x1bf3a
   1bf26:	push   DWORD PTR [ebp-0xc]
   1bf29:	push   DWORD PTR [ebp-0x4]
   1bf2c:	push   DWORD PTR [esi+0x18]
   1bf2f:	call   0x1d9c2
   1bf34:	mov    DWORD PTR [esi+0x18],eax
   1bf37:	mov    eax,DWORD PTR [ebp-0x20]
   1bf3a:	mov    ecx,DWORD PTR [ebp-0xc]
   1bf3d:	sub    DWORD PTR [ebp-0x8],ecx
   1bf40:	add    DWORD PTR [ebp-0x4],ecx
   1bf43:	test   eax,eax
   1bf45:	jne    0x1cb5e
   1bf4b:	mov    edx,DWORD PTR [ebp+0x8]
   1bf4e:	jmp    0x1bf5b
   1bf50:	mov    eax,DWORD PTR [esi+0x20]
   1bf53:	test   eax,eax
   1bf55:	je     0x1bf5b
   1bf57:	and    DWORD PTR [eax+0x1c],0x0
   1bf5b:	and    DWORD PTR [esi+0x40],0x0
   1bf5f:	mov    DWORD PTR [esi],0x7
   1bf65:	test   DWORD PTR [esi+0x10],0x1000
   1bf6c:	je     0x1bfe9
   1bf6e:	cmp    DWORD PTR [ebp-0x8],0x0
   1bf72:	je     0x1cb5e
   1bf78:	xor    ecx,ecx
   1bf7a:	mov    eax,DWORD PTR [ebp-0x4]
   1bf7d:	movzx  eax,BYTE PTR [ecx+eax*1]
   1bf81:	inc    ecx
   1bf82:	mov    DWORD PTR [ebp-0xc],ecx
   1bf85:	mov    ecx,DWORD PTR [esi+0x20]
   1bf88:	mov    DWORD PTR [ebp-0x20],eax
   1bf8b:	test   ecx,ecx
   1bf8d:	je     0x1bfaa
   1bf8f:	mov    edx,DWORD PTR [ecx+0x24]
   1bf92:	mov    DWORD PTR [ebp-0x28],edx
   1bf95:	test   edx,edx
   1bf97:	je     0x1bfaa
   1bf99:	mov    edx,DWORD PTR [esi+0x40]
   1bf9c:	cmp    edx,DWORD PTR [ecx+0x28]
   1bf9f:	jae    0x1bfaa
   1bfa1:	mov    ecx,DWORD PTR [ebp-0x28]
   1bfa4:	mov    BYTE PTR [ecx+edx*1],al
   1bfa7:	inc    DWORD PTR [esi+0x40]
   1bfaa:	test   eax,eax
   1bfac:	je     0x1bfb6
   1bfae:	mov    ecx,DWORD PTR [ebp-0xc]
   1bfb1:	cmp    ecx,DWORD PTR [ebp-0x8]
   1bfb4:	jb     0x1bf7a
   1bfb6:	test   DWORD PTR [esi+0x10],0x200
   1bfbd:	je     0x1bfd3
   1bfbf:	push   DWORD PTR [ebp-0xc]
   1bfc2:	push   DWORD PTR [ebp-0x4]
   1bfc5:	push   DWORD PTR [esi+0x18]
   1bfc8:	call   0x1d9c2
   1bfcd:	mov    DWORD PTR [esi+0x18],eax
   1bfd0:	mov    eax,DWORD PTR [ebp-0x20]
   1bfd3:	mov    ecx,DWORD PTR [ebp-0xc]
   1bfd6:	sub    DWORD PTR [ebp-0x8],ecx
   1bfd9:	add    DWORD PTR [ebp-0x4],ecx
   1bfdc:	test   eax,eax
   1bfde:	jne    0x1cb5e
   1bfe4:	mov    edx,DWORD PTR [ebp+0x8]
   1bfe7:	jmp    0x1bff4
   1bfe9:	mov    eax,DWORD PTR [esi+0x20]
   1bfec:	test   eax,eax
   1bfee:	je     0x1bff4
   1bff0:	and    DWORD PTR [eax+0x24],0x0
   1bff4:	mov    DWORD PTR [esi],0x8
   1bffa:	test   DWORD PTR [esi+0x10],0x200
   1c001:	je     0x1c047
   1c003:	cmp    edi,0x10
   1c006:	jae    0x1c02f
   1c008:	cmp    DWORD PTR [ebp-0x8],0x0
   1c00c:	je     0x1cb5e
   1c012:	mov    eax,DWORD PTR [ebp-0x4]
   1c015:	movzx  eax,BYTE PTR [eax]
   1c018:	dec    DWORD PTR [ebp-0x8]
   1c01b:	mov    ecx,edi
   1c01d:	shl    eax,cl
   1c01f:	add    edi,0x8
   1c022:	add    ebx,eax
   1c024:	inc    DWORD PTR [ebp-0x4]
   1c027:	cmp    edi,0x10
   1c02a:	jb     0x1c008
   1c02c:	mov    edx,DWORD PTR [ebp+0x8]
   1c02f:	movzx  eax,WORD PTR [esi+0x18]
   1c033:	cmp    ebx,eax
   1c035:	je     0x1c043
   1c037:	mov    DWORD PTR [edx+0x18],0x1ed82
   1c03e:	jmp    0x1cb0a
   1c043:	xor    ebx,ebx
   1c045:	xor    edi,edi
   1c047:	mov    eax,DWORD PTR [esi+0x20]
   1c04a:	test   eax,eax
   1c04c:	je     0x1c062
   1c04e:	mov    edx,DWORD PTR [esi+0x10]
   1c051:	xor    ecx,ecx
   1c053:	inc    ecx
   1c054:	sar    edx,0x9
   1c057:	and    edx,ecx
   1c059:	mov    DWORD PTR [eax+0x2c],edx
   1c05c:	mov    eax,DWORD PTR [esi+0x20]
   1c05f:	mov    DWORD PTR [eax+0x30],ecx
   1c062:	xor    eax,eax
   1c064:	push   eax
   1c065:	push   eax
   1c066:	push   eax
   1c067:	call   0x1d9c2
   1c06c:	mov    ecx,DWORD PTR [ebp+0x8]
   1c06f:	mov    DWORD PTR [esi+0x18],eax
   1c072:	mov    DWORD PTR [ecx+0x30],eax
   1c075:	jmp    0x1c773
   1c07a:	cmp    edi,0x20
   1c07d:	jae    0x1c0a6
   1c07f:	cmp    DWORD PTR [ebp-0x8],0x0
   1c083:	je     0x1cb5e
   1c089:	mov    eax,DWORD PTR [ebp-0x4]
   1c08c:	movzx  eax,BYTE PTR [eax]
   1c08f:	dec    DWORD PTR [ebp-0x8]
   1c092:	mov    ecx,edi
   1c094:	shl    eax,cl
   1c096:	add    edi,0x8
   1c099:	add    ebx,eax
   1c09b:	inc    DWORD PTR [ebp-0x4]
   1c09e:	cmp    edi,0x20
   1c0a1:	jb     0x1c07f
   1c0a3:	mov    edx,DWORD PTR [ebp+0x8]
   1c0a6:	mov    ecx,ebx
   1c0a8:	mov    eax,0xff00
   1c0ad:	and    ecx,eax
   1c0af:	mov    edi,ebx
   1c0b1:	shl    edi,0x10
   1c0b4:	add    ecx,edi
   1c0b6:	mov    edi,ebx
   1c0b8:	shr    edi,0x8
   1c0bb:	and    edi,eax
   1c0bd:	shl    ecx,0x8
   1c0c0:	shr    ebx,0x18
   1c0c3:	add    ecx,edi
   1c0c5:	lea    eax,[ecx+ebx*1]
   1c0c8:	mov    DWORD PTR [esi+0x18],eax
   1c0cb:	mov    DWORD PTR [edx+0x30],eax
   1c0ce:	xor    ebx,ebx
   1c0d0:	xor    edi,edi
   1c0d2:	mov    DWORD PTR [esi],0xa
   1c0d8:	cmp    DWORD PTR [esi+0xc],0x0
   1c0dc:	je     0x1cb20
   1c0e2:	xor    eax,eax
   1c0e4:	push   eax
   1c0e5:	push   eax
   1c0e6:	push   eax
   1c0e7:	call   0x1d520
   1c0ec:	mov    ecx,DWORD PTR [ebp+0x8]
   1c0ef:	mov    DWORD PTR [esi+0x18],eax
   1c0f2:	mov    DWORD PTR [ecx+0x30],eax
   1c0f5:	mov    DWORD PTR [esi],0xb
   1c0fb:	cmp    DWORD PTR [ebp+0xc],0x5
   1c0ff:	je     0x1cb5e
   1c105:	mov    edx,DWORD PTR [ebp+0x8]
   1c108:	cmp    DWORD PTR [esi+0x4],0x0
   1c10c:	je     0x1c122
   1c10e:	mov    ecx,edi
   1c110:	and    ecx,0x7
   1c113:	shr    ebx,cl
   1c115:	sub    edi,ecx
   1c117:	mov    DWORD PTR [esi],0x18
   1c11d:	jmp    0x1cb10
   1c122:	cmp    edi,0x3
   1c125:	jae    0x1c14e
   1c127:	cmp    DWORD PTR [ebp-0x8],0x0
   1c12b:	je     0x1cb5e
   1c131:	mov    eax,DWORD PTR [ebp-0x4]
   1c134:	movzx  eax,BYTE PTR [eax]
   1c137:	dec    DWORD PTR [ebp-0x8]
   1c13a:	mov    ecx,edi
   1c13c:	shl    eax,cl
   1c13e:	add    edi,0x8
   1c141:	add    ebx,eax
   1c143:	inc    DWORD PTR [ebp-0x4]
   1c146:	cmp    edi,0x3
   1c149:	jb     0x1c127
   1c14b:	mov    edx,DWORD PTR [ebp+0x8]
   1c14e:	mov    eax,ebx
   1c150:	and    eax,0x1
   1c153:	shr    ebx,1
   1c155:	mov    DWORD PTR [esi+0x4],eax
   1c158:	mov    eax,ebx
   1c15a:	and    eax,0x3
   1c15d:	dec    edi
   1c15e:	sub    eax,0x0
   1c161:	je     0x1c1a7
   1c163:	dec    eax
   1c164:	je     0x1c183
   1c166:	dec    eax
   1c167:	je     0x1c17b
   1c169:	dec    eax
   1c16a:	jne    0x1c1ad
   1c16c:	mov    DWORD PTR [edx+0x18],0x1ed6e
   1c173:	mov    DWORD PTR [esi],0x1b
   1c179:	jmp    0x1c1ad
   1c17b:	mov    DWORD PTR [esi],0xf
   1c181:	jmp    0x1c1ad
   1c183:	mov    DWORD PTR [esi+0x4c],0x7b510
   1c18a:	mov    DWORD PTR [esi+0x54],0x9
   1c191:	mov    DWORD PTR [esi+0x50],0x7bd10
   1c198:	mov    DWORD PTR [esi+0x58],0x5
   1c19f:	mov    DWORD PTR [esi],0x12
   1c1a5:	jmp    0x1c1ad
   1c1a7:	mov    DWORD PTR [esi],0xd
   1c1ad:	shr    ebx,0x2
   1c1b0:	dec    edi
   1c1b1:	dec    edi
   1c1b2:	jmp    0x1cb10
   1c1b7:	mov    ecx,edi
   1c1b9:	and    ecx,0x7
   1c1bc:	sub    edi,ecx
   1c1be:	shr    ebx,cl
   1c1c0:	cmp    edi,0x20
   1c1c3:	jae    0x1c1ec
   1c1c5:	cmp    DWORD PTR [ebp-0x8],0x0
   1c1c9:	je     0x1cb5e
   1c1cf:	mov    eax,DWORD PTR [ebp-0x4]
   1c1d2:	movzx  eax,BYTE PTR [eax]
   1c1d5:	dec    DWORD PTR [ebp-0x8]
   1c1d8:	mov    ecx,edi
   1c1da:	shl    eax,cl
   1c1dc:	add    edi,0x8
   1c1df:	add    ebx,eax
   1c1e1:	inc    DWORD PTR [ebp-0x4]
   1c1e4:	cmp    edi,0x20
   1c1e7:	jb     0x1c1c5
   1c1e9:	mov    edx,DWORD PTR [ebp+0x8]
   1c1ec:	mov    ecx,ebx
   1c1ee:	mov    eax,ebx
   1c1f0:	not    ecx
   1c1f2:	and    eax,0xffff
   1c1f7:	shr    ecx,0x10
   1c1fa:	cmp    eax,ecx
   1c1fc:	je     0x1c20a
   1c1fe:	mov    DWORD PTR [edx+0x18],0x1ed50
   1c205:	jmp    0x1cb0a
   1c20a:	xor    ebx,ebx
   1c20c:	mov    DWORD PTR [esi+0x40],eax
   1c20f:	xor    edi,edi
   1c211:	mov    DWORD PTR [esi],0xe
   1c217:	mov    eax,DWORD PTR [esi+0x40]
   1c21a:	mov    DWORD PTR [ebp-0xc],eax
   1c21d:	test   eax,eax
   1c21f:	je     0x1c773
   1c225:	mov    eax,DWORD PTR [ebp-0x8]
   1c228:	cmp    DWORD PTR [ebp-0xc],eax
   1c22b:	jbe    0x1c230
   1c22d:	mov    DWORD PTR [ebp-0xc],eax
   1c230:	mov    eax,DWORD PTR [ebp-0x14]
   1c233:	cmp    DWORD PTR [ebp-0xc],eax
   1c236:	jbe    0x1c23b
   1c238:	mov    DWORD PTR [ebp-0xc],eax
   1c23b:	cmp    DWORD PTR [ebp-0xc],0x0
   1c23f:	je     0x1cb5e
   1c245:	push   DWORD PTR [ebp-0xc]
   1c248:	push   DWORD PTR [ebp-0x4]
   1c24b:	push   DWORD PTR [ebp-0x18]
   1c24e:	call   0x1da96
   1c253:	mov    eax,DWORD PTR [ebp-0xc]
   1c256:	sub    DWORD PTR [ebp-0x8],eax
   1c259:	add    DWORD PTR [ebp-0x4],eax
   1c25c:	sub    DWORD PTR [ebp-0x14],eax
   1c25f:	add    DWORD PTR [ebp-0x18],eax
   1c262:	add    esp,0xc
   1c265:	sub    DWORD PTR [esi+0x40],eax
   1c268:	jmp    0x1cb10
   1c26d:	cmp    edi,0xe
   1c270:	jae    0x1c299
   1c272:	cmp    DWORD PTR [ebp-0x8],0x0
   1c276:	je     0x1cb5e
   1c27c:	mov    eax,DWORD PTR [ebp-0x4]
   1c27f:	movzx  eax,BYTE PTR [eax]
   1c282:	dec    DWORD PTR [ebp-0x8]
   1c285:	mov    ecx,edi
   1c287:	shl    eax,cl
   1c289:	add    edi,0x8
   1c28c:	add    ebx,eax
   1c28e:	inc    DWORD PTR [ebp-0x4]
   1c291:	cmp    edi,0xe
   1c294:	jb     0x1c272
   1c296:	mov    edx,DWORD PTR [ebp+0x8]
   1c299:	mov    eax,ebx
   1c29b:	and    eax,0x1f
   1c29e:	add    eax,0x101
   1c2a3:	mov    DWORD PTR [esi+0x60],eax
   1c2a6:	shr    ebx,0x5
   1c2a9:	mov    eax,ebx
   1c2ab:	and    eax,0x1f
   1c2ae:	inc    eax
   1c2af:	shr    ebx,0x5
   1c2b2:	mov    DWORD PTR [esi+0x64],eax
   1c2b5:	mov    eax,ebx
   1c2b7:	and    eax,0xf
   1c2ba:	add    eax,0x4
   1c2bd:	shr    ebx,0x4
   1c2c0:	sub    edi,0xe
   1c2c3:	cmp    DWORD PTR [esi+0x60],0x11e
   1c2ca:	mov    DWORD PTR [esi+0x5c],eax
   1c2cd:	ja     0x1c2e1
   1c2cf:	cmp    DWORD PTR [esi+0x64],0x1e
   1c2d3:	ja     0x1c2e1
   1c2d5:	and    DWORD PTR [esi+0x68],0x0
   1c2d9:	mov    DWORD PTR [esi],0x10
   1c2df:	jmp    0x1c32f
   1c2e1:	mov    DWORD PTR [edx+0x18],0x1ed2c
   1c2e8:	jmp    0x1cb0a
   1c2ed:	cmp    DWORD PTR [ebp-0x8],0x0
   1c2f1:	je     0x1cb5e
   1c2f7:	mov    eax,DWORD PTR [ebp-0x4]
   1c2fa:	movzx  eax,BYTE PTR [eax]
   1c2fd:	dec    DWORD PTR [ebp-0x8]
   1c300:	mov    ecx,edi
   1c302:	shl    eax,cl
   1c304:	add    ebx,eax
   1c306:	inc    DWORD PTR [ebp-0x4]
   1c309:	add    edi,0x8
   1c30c:	cmp    edi,0x3
   1c30f:	jb     0x1c2ed
   1c311:	mov    ecx,DWORD PTR [esi+0x68]
   1c314:	movzx  ecx,WORD PTR [ecx*2+0x7bd90]
   1c31c:	mov    eax,ebx
   1c31e:	and    eax,0x7
   1c321:	mov    WORD PTR [esi+ecx*2+0x70],ax
   1c326:	inc    DWORD PTR [esi+0x68]
   1c329:	shr    ebx,0x3
   1c32c:	sub    edi,0x3
   1c32f:	mov    eax,DWORD PTR [esi+0x68]
   1c332:	cmp    eax,DWORD PTR [esi+0x5c]
   1c335:	jb     0x1c30c
   1c337:	jmp    0x1c34e
   1c339:	mov    eax,DWORD PTR [esi+0x68]
   1c33c:	movzx  eax,WORD PTR [eax*2+0x7bd90]
   1c344:	xor    ecx,ecx
   1c346:	mov    WORD PTR [esi+eax*2+0x70],cx
   1c34b:	inc    DWORD PTR [esi+0x68]
   1c34e:	cmp    DWORD PTR [esi+0x68],0x13
   1c352:	jb     0x1c339
   1c354:	lea    eax,[esi+0x530]
   1c35a:	lea    ecx,[esi+0x6c]
   1c35d:	mov    DWORD PTR [ecx],eax
   1c35f:	mov    DWORD PTR [esi+0x4c],eax
   1c362:	lea    edx,[esi+0x2f0]
   1c368:	push   edx
   1c369:	lea    eax,[esi+0x54]
   1c36c:	push   eax
   1c36d:	push   ecx
   1c36e:	mov    DWORD PTR [eax],0x7
   1c374:	push   0x13
   1c376:	lea    eax,[esi+0x70]
   1c379:	push   eax
   1c37a:	push   0x0
   1c37c:	call   0x1d11a
   1c381:	mov    DWORD PTR [ebp-0x24],eax
   1c384:	test   eax,eax
   1c386:	je     0x1c397
   1c388:	mov    eax,DWORD PTR [ebp+0x8]
   1c38b:	mov    DWORD PTR [eax+0x18],0x1ed12
   1c392:	jmp    0x1cb0a
   1c397:	and    DWORD PTR [esi+0x68],0x0
   1c39b:	mov    DWORD PTR [esi],0x11
   1c3a1:	jmp    0x1c59d
   1c3a6:	cmp    DWORD PTR [ebp-0x8],0x0
   1c3aa:	je     0x1cb5e
   1c3b0:	mov    eax,DWORD PTR [ebp-0x4]
   1c3b3:	movzx  eax,BYTE PTR [eax]
   1c3b6:	dec    DWORD PTR [ebp-0x8]
   1c3b9:	mov    ecx,edi
   1c3bb:	shl    eax,cl
   1c3bd:	add    ebx,eax
   1c3bf:	inc    DWORD PTR [ebp-0x4]
   1c3c2:	add    edi,0x8
   1c3c5:	mov    ecx,DWORD PTR [esi+0x54]
   1c3c8:	xor    eax,eax
   1c3ca:	inc    eax
   1c3cb:	shl    eax,cl
   1c3cd:	mov    ecx,DWORD PTR [esi+0x4c]
   1c3d0:	dec    eax
   1c3d1:	and    eax,ebx
   1c3d3:	mov    eax,DWORD PTR [ecx+eax*4]
   1c3d6:	mov    ecx,eax
   1c3d8:	shr    ecx,0x8
   1c3db:	movzx  ecx,cl
   1c3de:	mov    DWORD PTR [ebp-0x20],eax
   1c3e1:	cmp    ecx,edi
   1c3e3:	ja     0x1c3a6
   1c3e5:	mov    ecx,eax
   1c3e7:	shr    ecx,0x10
   1c3ea:	cmp    cx,0x10
   1c3ee:	jae    0x1c43b
   1c3f0:	mov    ecx,eax
   1c3f2:	shr    ecx,0x8
   1c3f5:	movzx  ecx,cl
   1c3f8:	jmp    0x1c41c
   1c3fa:	cmp    DWORD PTR [ebp-0x8],0x0
   1c3fe:	je     0x1cb5e
   1c404:	mov    ecx,DWORD PTR [ebp-0x4]
   1c407:	movzx  edx,BYTE PTR [ecx]
   1c40a:	dec    DWORD PTR [ebp-0x8]
   1c40d:	mov    ecx,edi
   1c40f:	shl    edx,cl
   1c411:	movzx  ecx,ah
   1c414:	add    ebx,edx
   1c416:	inc    DWORD PTR [ebp-0x4]
   1c419:	add    edi,0x8
   1c41c:	cmp    edi,ecx
   1c41e:	jb     0x1c3fa
   1c420:	movzx  ecx,ah
   1c423:	mov    eax,DWORD PTR [esi+0x68]
   1c426:	shr    ebx,cl
   1c428:	sub    edi,ecx
   1c42a:	mov    cx,WORD PTR [ebp-0x1e]
   1c42e:	mov    WORD PTR [esi+eax*2+0x70],cx
   1c433:	inc    DWORD PTR [esi+0x68]
   1c436:	jmp    0x1c59d
   1c43b:	cmp    WORD PTR [ebp-0x1e],0x10
   1c440:	jne    0x1c498
   1c442:	movzx  eax,ah
   1c445:	jmp    0x1c466
   1c447:	cmp    DWORD PTR [ebp-0x8],0x0
   1c44b:	je     0x1cb5e
   1c451:	mov    ecx,DWORD PTR [ebp-0x4]
   1c454:	movzx  edx,BYTE PTR [ecx]
   1c457:	dec    DWORD PTR [ebp-0x8]
   1c45a:	mov    ecx,edi
   1c45c:	shl    edx,cl
   1c45e:	add    ebx,edx
   1c460:	inc    DWORD PTR [ebp-0x4]
   1c463:	add    edi,0x8
   1c466:	lea    ecx,[eax+0x2]
   1c469:	cmp    edi,ecx
   1c46b:	jb     0x1c447
   1c46d:	mov    ecx,eax
   1c46f:	sub    edi,eax
   1c471:	mov    eax,DWORD PTR [esi+0x68]
   1c474:	shr    ebx,cl
   1c476:	test   eax,eax
   1c478:	je     0x1c5ae
   1c47e:	movzx  eax,WORD PTR [esi+eax*2+0x6e]
   1c483:	mov    DWORD PTR [ebp-0x20],eax
   1c486:	mov    eax,ebx
   1c488:	and    eax,0x3
   1c48b:	add    eax,0x3
   1c48e:	shr    ebx,0x2
   1c491:	dec    edi
   1c492:	dec    edi
   1c493:	jmp    0x1c51d
   1c498:	cmp    WORD PTR [ebp-0x1e],0x11
   1c49d:	movzx  edx,ah
   1c4a0:	jne    0x1c4fc
   1c4a2:	jmp    0x1c4c3
   1c4a4:	cmp    DWORD PTR [ebp-0x8],0x0
   1c4a8:	je     0x1cb5e
   1c4ae:	mov    eax,DWORD PTR [ebp-0x4]
   1c4b1:	movzx  eax,BYTE PTR [eax]
   1c4b4:	dec    DWORD PTR [ebp-0x8]
   1c4b7:	mov    ecx,edi
   1c4b9:	shl    eax,cl
   1c4bb:	add    ebx,eax
   1c4bd:	inc    DWORD PTR [ebp-0x4]
   1c4c0:	add    edi,0x8
   1c4c3:	lea    eax,[edx+0x3]
   1c4c6:	cmp    edi,eax
   1c4c8:	jb     0x1c4a4
   1c4ca:	mov    ecx,edx
   1c4cc:	shr    ebx,cl
   1c4ce:	push   0xfffffffd
   1c4d0:	mov    eax,ebx
   1c4d2:	and    eax,0x7
   1c4d5:	add    eax,0x3
   1c4d8:	shr    ebx,0x3
   1c4db:	jmp    0x1c514
   1c4dd:	cmp    DWORD PTR [ebp-0x8],0x0
   1c4e1:	je     0x1cb5e
   1c4e7:	mov    eax,DWORD PTR [ebp-0x4]
   1c4ea:	movzx  eax,BYTE PTR [eax]
   1c4ed:	dec    DWORD PTR [ebp-0x8]
   1c4f0:	mov    ecx,edi
   1c4f2:	shl    eax,cl
   1c4f4:	add    ebx,eax
   1c4f6:	inc    DWORD PTR [ebp-0x4]
   1c4f9:	add    edi,0x8
   1c4fc:	lea    eax,[edx+0x7]
   1c4ff:	cmp    edi,eax
   1c501:	jb     0x1c4dd
   1c503:	mov    ecx,edx
   1c505:	shr    ebx,cl
   1c507:	push   0xfffffff9
   1c509:	mov    eax,ebx
   1c50b:	and    eax,0x7f
   1c50e:	add    eax,0xb
   1c511:	shr    ebx,0x7
   1c514:	and    DWORD PTR [ebp-0x20],0x0
   1c518:	pop    ecx
   1c519:	sub    ecx,edx
   1c51b:	add    edi,ecx
   1c51d:	mov    ecx,DWORD PTR [esi+0x64]
   1c520:	mov    edx,DWORD PTR [esi+0x68]
   1c523:	add    ecx,DWORD PTR [esi+0x60]
   1c526:	add    edx,eax
   1c528:	cmp    edx,ecx
   1c52a:	jbe    0x1c599
   1c52c:	mov    eax,DWORD PTR [ebp+0x8]
   1c52f:	mov    DWORD PTR [eax+0x18],0x1ecf8
   1c536:	mov    DWORD PTR [esi],0x1b
   1c53c:	cmp    DWORD PTR [esi],0x1b
   1c53f:	je     0x1cb10
   1c545:	lea    eax,[esi+0x530]
   1c54b:	lea    ecx,[esi+0x6c]
   1c54e:	mov    DWORD PTR [ecx],eax
   1c550:	mov    DWORD PTR [esi+0x4c],eax
   1c553:	lea    edx,[esi+0x2f0]
   1c559:	push   edx
   1c55a:	lea    eax,[esi+0x54]
   1c55d:	push   eax
   1c55e:	push   ecx
   1c55f:	push   DWORD PTR [esi+0x60]
   1c562:	mov    DWORD PTR [eax],0x9
   1c568:	lea    eax,[esi+0x70]
   1c56b:	push   eax
   1c56c:	push   0x1
   1c56e:	call   0x1d11a
   1c573:	mov    DWORD PTR [ebp-0x24],eax
   1c576:	test   eax,eax
   1c578:	je     0x1c5bd
   1c57a:	mov    eax,DWORD PTR [ebp+0x8]
   1c57d:	mov    DWORD PTR [eax+0x18],0x1ecdc
   1c584:	jmp    0x1cb0a
   1c589:	mov    ecx,DWORD PTR [esi+0x68]
   1c58c:	mov    dx,WORD PTR [ebp-0x20]
   1c590:	dec    eax
   1c591:	mov    WORD PTR [esi+ecx*2+0x70],dx
   1c596:	inc    DWORD PTR [esi+0x68]
   1c599:	test   eax,eax
   1c59b:	jne    0x1c589
   1c59d:	mov    eax,DWORD PTR [esi+0x64]
   1c5a0:	add    eax,DWORD PTR [esi+0x60]
   1c5a3:	cmp    DWORD PTR [esi+0x68],eax
   1c5a6:	jb     0x1c3c5
   1c5ac:	jmp    0x1c53c
   1c5ae:	mov    eax,DWORD PTR [ebp+0x8]
   1c5b1:	mov    DWORD PTR [eax+0x18],0x1ecf8
   1c5b8:	jmp    0x1cb0a
   1c5bd:	lea    ecx,[esi+0x6c]
   1c5c0:	mov    eax,DWORD PTR [ecx]
   1c5c2:	mov    DWORD PTR [esi+0x50],eax
   1c5c5:	lea    edx,[esi+0x2f0]
   1c5cb:	push   edx
   1c5cc:	lea    eax,[esi+0x58]
   1c5cf:	push   eax
   1c5d0:	push   ecx
   1c5d1:	push   DWORD PTR [esi+0x64]
   1c5d4:	mov    DWORD PTR [eax],0x6
   1c5da:	mov    eax,DWORD PTR [esi+0x60]
   1c5dd:	lea    eax,[esi+eax*2+0x70]
   1c5e1:	push   eax
   1c5e2:	push   0x2
   1c5e4:	call   0x1d11a
   1c5e9:	mov    DWORD PTR [ebp-0x24],eax
   1c5ec:	test   eax,eax
   1c5ee:	je     0x1c5ff
   1c5f0:	mov    eax,DWORD PTR [ebp+0x8]
   1c5f3:	mov    DWORD PTR [eax+0x18],0x1ecc6
   1c5fa:	jmp    0x1cb0a
   1c5ff:	mov    DWORD PTR [esi],0x12
   1c605:	cmp    DWORD PTR [ebp-0x8],0x6
   1c609:	jb     0x1c662
   1c60b:	cmp    DWORD PTR [ebp-0x14],0x102
   1c612:	jb     0x1c662
   1c614:	mov    eax,DWORD PTR [ebp+0x8]
   1c617:	mov    ecx,DWORD PTR [ebp-0x18]
   1c61a:	push   DWORD PTR [ebp-0x1c]
   1c61d:	mov    DWORD PTR [eax+0xc],ecx
   1c620:	mov    ecx,DWORD PTR [ebp-0x14]
   1c623:	mov    DWORD PTR [eax+0x10],ecx
   1c626:	mov    ecx,DWORD PTR [ebp-0x4]
   1c629:	mov    DWORD PTR [eax],ecx
   1c62b:	mov    ecx,DWORD PTR [ebp-0x8]
   1c62e:	mov    DWORD PTR [eax+0x4],ecx
   1c631:	push   eax
   1c632:	mov    DWORD PTR [esi+0x38],ebx
   1c635:	mov    DWORD PTR [esi+0x3c],edi
   1c638:	call   0x1cd34
   1c63d:	mov    eax,DWORD PTR [ebp+0x8]
   1c640:	mov    ecx,DWORD PTR [eax+0xc]
   1c643:	mov    ebx,DWORD PTR [esi+0x38]
   1c646:	mov    edi,DWORD PTR [esi+0x3c]
   1c649:	mov    DWORD PTR [ebp-0x18],ecx
   1c64c:	mov    ecx,DWORD PTR [eax+0x10]
   1c64f:	mov    DWORD PTR [ebp-0x14],ecx
   1c652:	mov    ecx,DWORD PTR [eax]
   1c654:	mov    eax,DWORD PTR [eax+0x4]
   1c657:	mov    DWORD PTR [ebp-0x4],ecx
   1c65a:	mov    DWORD PTR [ebp-0x8],eax
   1c65d:	jmp    0x1cb10
   1c662:	mov    ecx,DWORD PTR [esi+0x54]
   1c665:	mov    eax,DWORD PTR [esi+0x4c]
   1c668:	xor    edx,edx
   1c66a:	inc    edx
   1c66b:	shl    edx,cl
   1c66d:	dec    edx
   1c66e:	and    edx,ebx
   1c670:	mov    eax,DWORD PTR [eax+edx*4]
   1c673:	jmp    0x1c6a5
   1c675:	cmp    DWORD PTR [ebp-0x8],0x0
   1c679:	je     0x1cb5e
   1c67f:	mov    eax,DWORD PTR [ebp-0x4]
   1c682:	movzx  eax,BYTE PTR [eax]
   1c685:	dec    DWORD PTR [ebp-0x8]
   1c688:	mov    ecx,edi
   1c68a:	shl    eax,cl
   1c68c:	mov    ecx,DWORD PTR [esi+0x54]
   1c68f:	add    edi,0x8
   1c692:	add    ebx,eax
   1c694:	inc    DWORD PTR [ebp-0x4]
   1c697:	xor    eax,eax
   1c699:	inc    eax
   1c69a:	shl    eax,cl
   1c69c:	mov    ecx,DWORD PTR [esi+0x4c]
   1c69f:	dec    eax
   1c6a0:	and    eax,ebx
   1c6a2:	mov    eax,DWORD PTR [ecx+eax*4]
   1c6a5:	mov    ecx,eax
   1c6a7:	shr    ecx,0x8
   1c6aa:	movzx  ecx,cl
   1c6ad:	cmp    ecx,edi
   1c6af:	ja     0x1c675
   1c6b1:	test   al,al
   1c6b3:	je     0x1c74c
   1c6b9:	test   al,0xf0
   1c6bb:	jne    0x1c74c
   1c6c1:	mov    DWORD PTR [ebp-0xc],eax
   1c6c4:	shr    DWORD PTR [ebp-0xc],0x8
   1c6c8:	movzx  edx,BYTE PTR [ebp-0xc]
   1c6cc:	mov    DWORD PTR [ebp-0x28],edx
   1c6cf:	movzx  ecx,al
   1c6d2:	add    ecx,edx
   1c6d4:	xor    edx,edx
   1c6d6:	inc    edx
   1c6d7:	shl    edx,cl
   1c6d9:	mov    ecx,DWORD PTR [ebp-0x28]
   1c6dc:	mov    DWORD PTR [ebp-0x20],eax
   1c6df:	shr    eax,0x10
   1c6e2:	dec    edx
   1c6e3:	and    edx,ebx
   1c6e5:	shr    edx,cl
   1c6e7:	add    edx,eax
   1c6e9:	mov    eax,DWORD PTR [esi+0x4c]
   1c6ec:	mov    eax,DWORD PTR [eax+edx*4]
   1c6ef:	movzx  edx,BYTE PTR [ebp-0xc]
   1c6f3:	jmp    0x1c736
   1c6f5:	cmp    DWORD PTR [ebp-0x8],0x0
   1c6f9:	je     0x1cb5e
   1c6ff:	mov    eax,DWORD PTR [ebp-0x4]
   1c702:	movzx  eax,BYTE PTR [eax]
   1c705:	movzx  edx,BYTE PTR [ebp-0x1f]
   1c709:	dec    DWORD PTR [ebp-0x8]
   1c70c:	mov    ecx,edi
   1c70e:	shl    eax,cl
   1c710:	movzx  ecx,BYTE PTR [ebp-0x20]
   1c714:	add    ebx,eax
   1c716:	inc    DWORD PTR [ebp-0x4]
   1c719:	xor    eax,eax
   1c71b:	add    ecx,edx
   1c71d:	inc    eax
   1c71e:	shl    eax,cl
   1c720:	add    edi,0x8
   1c723:	mov    ecx,edx
   1c725:	dec    eax
   1c726:	and    eax,ebx
   1c728:	shr    eax,cl
   1c72a:	movzx  ecx,WORD PTR [ebp-0x1e]
   1c72e:	add    eax,ecx
   1c730:	mov    ecx,DWORD PTR [esi+0x4c]
   1c733:	mov    eax,DWORD PTR [ecx+eax*4]
   1c736:	mov    ecx,eax
   1c738:	shr    ecx,0x8
   1c73b:	movzx  ecx,cl
   1c73e:	add    ecx,edx
   1c740:	cmp    ecx,edi
   1c742:	ja     0x1c6f5
   1c744:	movzx  ecx,BYTE PTR [ebp-0x1f]
   1c748:	shr    ebx,cl
   1c74a:	sub    edi,ecx
   1c74c:	mov    ecx,eax
   1c74e:	shr    ecx,0x8
   1c751:	movzx  ecx,cl
   1c754:	shr    ebx,cl
   1c756:	sub    edi,ecx
   1c758:	mov    ecx,eax
   1c75a:	shr    ecx,0x10
   1c75d:	mov    DWORD PTR [esi+0x40],ecx
   1c760:	test   al,al
   1c762:	jne    0x1c76f
   1c764:	mov    DWORD PTR [esi],0x17
   1c76a:	jmp    0x1cb10
   1c76f:	test   al,0x20
   1c771:	je     0x1c77e
   1c773:	mov    DWORD PTR [esi],0xb
   1c779:	jmp    0x1cb10
   1c77e:	test   al,0x40
   1c780:	je     0x1c791
   1c782:	mov    eax,DWORD PTR [ebp+0x8]
   1c785:	mov    DWORD PTR [eax+0x18],0x1ecaa
   1c78c:	jmp    0x1cb0a
   1c791:	movzx  eax,al
   1c794:	and    eax,0xf
   1c797:	mov    DWORD PTR [esi+0x48],eax
   1c79a:	mov    DWORD PTR [esi],0x13
   1c7a0:	mov    eax,DWORD PTR [esi+0x48]
   1c7a3:	test   eax,eax
   1c7a5:	je     0x1c7e0
   1c7a7:	cmp    edi,eax
   1c7a9:	jae    0x1c7cf
   1c7ab:	cmp    DWORD PTR [ebp-0x8],0x0
   1c7af:	je     0x1cb5e
   1c7b5:	mov    ecx,DWORD PTR [ebp-0x4]
   1c7b8:	movzx  edx,BYTE PTR [ecx]
   1c7bb:	dec    DWORD PTR [ebp-0x8]
   1c7be:	mov    ecx,edi
   1c7c0:	shl    edx,cl
   1c7c2:	add    edi,0x8
   1c7c5:	add    ebx,edx
   1c7c7:	inc    DWORD PTR [ebp-0x4]
   1c7ca:	cmp    edi,DWORD PTR [esi+0x48]
   1c7cd:	jb     0x1c7ab
   1c7cf:	xor    edx,edx
   1c7d1:	inc    edx
   1c7d2:	mov    ecx,eax
   1c7d4:	shl    edx,cl
   1c7d6:	dec    edx
   1c7d7:	and    edx,ebx
   1c7d9:	add    DWORD PTR [esi+0x40],edx
   1c7dc:	shr    ebx,cl
   1c7de:	sub    edi,eax
   1c7e0:	mov    DWORD PTR [esi],0x14
   1c7e6:	mov    ecx,DWORD PTR [esi+0x58]
   1c7e9:	mov    eax,DWORD PTR [esi+0x50]
   1c7ec:	xor    edx,edx
   1c7ee:	inc    edx
   1c7ef:	shl    edx,cl
   1c7f1:	dec    edx
   1c7f2:	and    edx,ebx
   1c7f4:	mov    eax,DWORD PTR [eax+edx*4]
   1c7f7:	jmp    0x1c829
   1c7f9:	cmp    DWORD PTR [ebp-0x8],0x0
   1c7fd:	je     0x1cb5e
   1c803:	mov    eax,DWORD PTR [ebp-0x4]
   1c806:	movzx  eax,BYTE PTR [eax]
   1c809:	dec    DWORD PTR [ebp-0x8]
   1c80c:	mov    ecx,edi
   1c80e:	shl    eax,cl
   1c810:	mov    ecx,DWORD PTR [esi+0x58]
   1c813:	add    edi,0x8
   1c816:	add    ebx,eax
   1c818:	inc    DWORD PTR [ebp-0x4]
   1c81b:	xor    eax,eax
   1c81d:	inc    eax
   1c81e:	shl    eax,cl
   1c820:	mov    ecx,DWORD PTR [esi+0x50]
   1c823:	dec    eax
   1c824:	and    eax,ebx
   1c826:	mov    eax,DWORD PTR [ecx+eax*4]
   1c829:	mov    ecx,eax
   1c82b:	shr    ecx,0x8
   1c82e:	movzx  ecx,cl
   1c831:	cmp    ecx,edi
   1c833:	ja     0x1c7f9
   1c835:	test   al,0xf0
   1c837:	jne    0x1c8c8
   1c83d:	mov    DWORD PTR [ebp-0xc],eax
   1c840:	shr    DWORD PTR [ebp-0xc],0x8
   1c844:	movzx  edx,BYTE PTR [ebp-0xc]
   1c848:	mov    DWORD PTR [ebp-0x28],edx
   1c84b:	movzx  ecx,al
   1c84e:	add    ecx,edx
   1c850:	xor    edx,edx
   1c852:	inc    edx
   1c853:	shl    edx,cl
   1c855:	mov    ecx,DWORD PTR [ebp-0x28]
   1c858:	mov    DWORD PTR [ebp-0x20],eax
   1c85b:	shr    eax,0x10
   1c85e:	dec    edx
   1c85f:	and    edx,ebx
   1c861:	shr    edx,cl
   1c863:	add    edx,eax
   1c865:	mov    eax,DWORD PTR [esi+0x50]
   1c868:	mov    eax,DWORD PTR [eax+edx*4]
   1c86b:	movzx  edx,BYTE PTR [ebp-0xc]
   1c86f:	jmp    0x1c8b2
   1c871:	cmp    DWORD PTR [ebp-0x8],0x0
   1c875:	je     0x1cb5e
   1c87b:	mov    eax,DWORD PTR [ebp-0x4]
   1c87e:	movzx  eax,BYTE PTR [eax]
   1c881:	movzx  edx,BYTE PTR [ebp-0x1f]
   1c885:	dec    DWORD PTR [ebp-0x8]
   1c888:	mov    ecx,edi
   1c88a:	shl    eax,cl
   1c88c:	movzx  ecx,BYTE PTR [ebp-0x20]
   1c890:	add    ebx,eax
   1c892:	inc    DWORD PTR [ebp-0x4]
   1c895:	xor    eax,eax
   1c897:	add    ecx,edx
   1c899:	inc    eax
   1c89a:	shl    eax,cl
   1c89c:	add    edi,0x8
   1c89f:	mov    ecx,edx
   1c8a1:	dec    eax
   1c8a2:	and    eax,ebx
   1c8a4:	shr    eax,cl
   1c8a6:	movzx  ecx,WORD PTR [ebp-0x1e]
   1c8aa:	add    eax,ecx
   1c8ac:	mov    ecx,DWORD PTR [esi+0x50]
   1c8af:	mov    eax,DWORD PTR [ecx+eax*4]
   1c8b2:	mov    ecx,eax
   1c8b4:	shr    ecx,0x8
   1c8b7:	movzx  ecx,cl
   1c8ba:	add    ecx,edx
   1c8bc:	cmp    ecx,edi
   1c8be:	ja     0x1c871
   1c8c0:	movzx  ecx,BYTE PTR [ebp-0x1f]
   1c8c4:	shr    ebx,cl
   1c8c6:	sub    edi,ecx
   1c8c8:	mov    ecx,eax
   1c8ca:	shr    ecx,0x8
   1c8cd:	movzx  ecx,cl
   1c8d0:	shr    ebx,cl
   1c8d2:	sub    edi,ecx
   1c8d4:	test   al,0x40
   1c8d6:	je     0x1c8e7
   1c8d8:	mov    eax,DWORD PTR [ebp+0x8]
   1c8db:	mov    DWORD PTR [eax+0x18],0x1ec94
   1c8e2:	jmp    0x1cb0a
   1c8e7:	mov    edx,DWORD PTR [ebp+0x8]
   1c8ea:	mov    ecx,eax
   1c8ec:	movzx  eax,al
   1c8ef:	shr    ecx,0x10
   1c8f2:	and    eax,0xf
   1c8f5:	mov    DWORD PTR [esi+0x44],ecx
   1c8f8:	mov    DWORD PTR [esi+0x48],eax
   1c8fb:	mov    DWORD PTR [esi],0x15
   1c901:	mov    eax,DWORD PTR [esi+0x48]
   1c904:	test   eax,eax
   1c906:	je     0x1c945
   1c908:	cmp    edi,eax
   1c90a:	jae    0x1c933
   1c90c:	cmp    DWORD PTR [ebp-0x8],0x0
   1c910:	je     0x1cb5e
   1c916:	mov    eax,DWORD PTR [ebp-0x4]
   1c919:	movzx  eax,BYTE PTR [eax]
   1c91c:	dec    DWORD PTR [ebp-0x8]
   1c91f:	mov    ecx,edi
   1c921:	shl    eax,cl
   1c923:	add    edi,0x8
   1c926:	add    ebx,eax
   1c928:	inc    DWORD PTR [ebp-0x4]
   1c92b:	cmp    edi,DWORD PTR [esi+0x48]
   1c92e:	jb     0x1c90c
   1c930:	mov    edx,DWORD PTR [ebp+0x8]
   1c933:	mov    ecx,DWORD PTR [esi+0x48]
   1c936:	xor    eax,eax
   1c938:	inc    eax
   1c939:	shl    eax,cl
   1c93b:	dec    eax
   1c93c:	and    eax,ebx
   1c93e:	add    DWORD PTR [esi+0x44],eax
   1c941:	shr    ebx,cl
   1c943:	sub    edi,ecx
   1c945:	mov    eax,DWORD PTR [esi+0x2c]
   1c948:	sub    eax,DWORD PTR [ebp-0x14]
   1c94b:	add    eax,DWORD PTR [ebp-0x1c]
   1c94e:	cmp    DWORD PTR [esi+0x44],eax
   1c951:	jbe    0x1c95f
   1c953:	mov    DWORD PTR [edx+0x18],0x1ec76
   1c95a:	jmp    0x1cb0a
   1c95f:	mov    DWORD PTR [esi],0x16
   1c965:	cmp    DWORD PTR [ebp-0x14],0x0
   1c969:	je     0x1cb5e
   1c96f:	mov    eax,DWORD PTR [ebp-0x1c]
   1c972:	sub    eax,DWORD PTR [ebp-0x14]
   1c975:	mov    ecx,DWORD PTR [esi+0x44]
   1c978:	cmp    ecx,eax
   1c97a:	jbe    0x1c9a9
   1c97c:	sub    ecx,eax
   1c97e:	mov    eax,DWORD PTR [esi+0x34]
   1c981:	mov    DWORD PTR [ebp-0xc],ecx
   1c984:	mov    ecx,DWORD PTR [esi+0x30]
   1c987:	cmp    DWORD PTR [ebp-0xc],ecx
   1c98a:	jbe    0x1c997
   1c98c:	add    eax,DWORD PTR [esi+0x28]
   1c98f:	sub    DWORD PTR [ebp-0xc],ecx
   1c992:	sub    eax,DWORD PTR [ebp-0xc]
   1c995:	jmp    0x1c99c
   1c997:	sub    eax,DWORD PTR [ebp-0xc]
   1c99a:	add    eax,ecx
   1c99c:	mov    ecx,DWORD PTR [esi+0x40]
   1c99f:	mov    DWORD PTR [ebp-0x28],ecx
   1c9a2:	cmp    DWORD PTR [ebp-0xc],ecx
   1c9a5:	jbe    0x1c9b7
   1c9a7:	jmp    0x1c9b4
   1c9a9:	mov    eax,DWORD PTR [ebp-0x18]
   1c9ac:	sub    eax,ecx
   1c9ae:	mov    ecx,DWORD PTR [esi+0x40]
   1c9b1:	mov    DWORD PTR [ebp-0x28],ecx
   1c9b4:	mov    DWORD PTR [ebp-0xc],ecx
   1c9b7:	mov    ecx,DWORD PTR [ebp-0x14]
   1c9ba:	cmp    DWORD PTR [ebp-0xc],ecx
   1c9bd:	jbe    0x1c9c2
   1c9bf:	mov    DWORD PTR [ebp-0xc],ecx
   1c9c2:	sub    ecx,DWORD PTR [ebp-0xc]
   1c9c5:	mov    DWORD PTR [ebp-0x14],ecx
   1c9c8:	mov    ecx,DWORD PTR [ebp-0x28]
   1c9cb:	sub    ecx,DWORD PTR [ebp-0xc]
   1c9ce:	mov    DWORD PTR [esi+0x40],ecx
   1c9d1:	mov    edx,DWORD PTR [ebp-0x18]
   1c9d4:	mov    cl,BYTE PTR [eax]
   1c9d6:	inc    DWORD PTR [ebp-0x18]
   1c9d9:	inc    eax
   1c9da:	dec    DWORD PTR [ebp-0xc]
   1c9dd:	mov    BYTE PTR [edx],cl
   1c9df:	jne    0x1c9d1
   1c9e1:	cmp    DWORD PTR [esi+0x40],0x0
   1c9e5:	jne    0x1cb10
   1c9eb:	jmp    0x1ca05
   1c9ed:	cmp    DWORD PTR [ebp-0x14],0x0
   1c9f1:	je     0x1cb5e
   1c9f7:	mov    ecx,DWORD PTR [ebp-0x18]
   1c9fa:	mov    al,BYTE PTR [esi+0x40]
   1c9fd:	inc    DWORD PTR [ebp-0x18]
   1ca00:	dec    DWORD PTR [ebp-0x14]
   1ca03:	mov    BYTE PTR [ecx],al
   1ca05:	mov    DWORD PTR [esi],0x12
   1ca0b:	jmp    0x1cb10
   1ca10:	cmp    DWORD PTR [esi+0x8],0x0
   1ca14:	je     0x1cac4
   1ca1a:	cmp    edi,0x20
   1ca1d:	jae    0x1ca46
   1ca1f:	cmp    DWORD PTR [ebp-0x8],0x0
   1ca23:	je     0x1cb5e
   1ca29:	mov    eax,DWORD PTR [ebp-0x4]
   1ca2c:	movzx  eax,BYTE PTR [eax]
   1ca2f:	dec    DWORD PTR [ebp-0x8]
   1ca32:	mov    ecx,edi
   1ca34:	shl    eax,cl
   1ca36:	add    edi,0x8
   1ca39:	add    ebx,eax
   1ca3b:	inc    DWORD PTR [ebp-0x4]
   1ca3e:	cmp    edi,0x20
   1ca41:	jb     0x1ca1f
   1ca43:	mov    edx,DWORD PTR [ebp+0x8]
   1ca46:	mov    eax,DWORD PTR [ebp-0x1c]
   1ca49:	sub    eax,DWORD PTR [ebp-0x14]
   1ca4c:	add    DWORD PTR [edx+0x14],eax
   1ca4f:	add    DWORD PTR [esi+0x1c],eax
   1ca52:	mov    DWORD PTR [ebp-0x1c],eax
   1ca55:	test   eax,eax
   1ca57:	je     0x1ca81
   1ca59:	push   eax
   1ca5a:	mov    eax,DWORD PTR [ebp-0x18]
   1ca5d:	sub    eax,DWORD PTR [ebp-0x1c]
   1ca60:	cmp    DWORD PTR [esi+0x10],0x0
   1ca64:	push   eax
   1ca65:	push   DWORD PTR [esi+0x18]
   1ca68:	je     0x1ca71
   1ca6a:	call   0x1d9c2
   1ca6f:	jmp    0x1ca76
   1ca71:	call   0x1d520
   1ca76:	mov    ecx,DWORD PTR [ebp+0x8]
   1ca79:	mov    DWORD PTR [esi+0x18],eax
   1ca7c:	mov    DWORD PTR [ecx+0x30],eax
   1ca7f:	mov    edx,ecx
   1ca81:	cmp    DWORD PTR [esi+0x10],0x0
   1ca85:	mov    eax,DWORD PTR [ebp-0x14]
   1ca88:	mov    DWORD PTR [ebp-0x1c],eax
   1ca8b:	mov    eax,ebx
   1ca8d:	jne    0x1cab2
   1ca8f:	and    eax,0xff00
   1ca94:	mov    ecx,ebx
   1ca96:	shl    ecx,0x10
   1ca99:	add    eax,ecx
   1ca9b:	mov    ecx,ebx
   1ca9d:	shr    ecx,0x8
   1caa0:	and    ecx,0xff00
   1caa6:	shl    eax,0x8
   1caa9:	add    eax,ecx
   1caab:	mov    ecx,ebx
   1caad:	shr    ecx,0x18
   1cab0:	add    eax,ecx
   1cab2:	cmp    eax,DWORD PTR [esi+0x18]
   1cab5:	je     0x1cac0
   1cab7:	mov    DWORD PTR [edx+0x18],0x1ec60
   1cabe:	jmp    0x1cb0a
   1cac0:	xor    ebx,ebx
   1cac2:	xor    edi,edi
   1cac4:	mov    DWORD PTR [esi],0x19
   1caca:	cmp    DWORD PTR [esi+0x8],0x0
   1cace:	je     0x1cb48
   1cad0:	cmp    DWORD PTR [esi+0x10],0x0
   1cad4:	je     0x1cb48
   1cad6:	cmp    edi,0x20
   1cad9:	jae    0x1cafe
   1cadb:	cmp    DWORD PTR [ebp-0x8],0x0
   1cadf:	je     0x1cb5e
   1cae1:	mov    eax,DWORD PTR [ebp-0x4]
   1cae4:	movzx  eax,BYTE PTR [eax]
   1cae7:	dec    DWORD PTR [ebp-0x8]
   1caea:	mov    ecx,edi
   1caec:	shl    eax,cl
   1caee:	add    edi,0x8
   1caf1:	add    ebx,eax
   1caf3:	inc    DWORD PTR [ebp-0x4]
   1caf6:	cmp    edi,0x20
   1caf9:	jb     0x1cadb
   1cafb:	mov    edx,DWORD PTR [ebp+0x8]
   1cafe:	cmp    ebx,DWORD PTR [esi+0x1c]
   1cb01:	je     0x1cb44
   1cb03:	mov    DWORD PTR [edx+0x18],0x1ec48
   1cb0a:	mov    DWORD PTR [esi],0x1b
   1cb10:	mov    eax,DWORD PTR [esi]
   1cb12:	cmp    eax,0x1c
   1cb15:	jbe    0x1bb00
   1cb1b:	jmp    0x1baf6
   1cb20:	mov    eax,DWORD PTR [ebp-0x18]
   1cb23:	mov    DWORD PTR [edx+0xc],eax
   1cb26:	mov    eax,DWORD PTR [ebp-0x14]
   1cb29:	mov    DWORD PTR [edx+0x10],eax
   1cb2c:	mov    eax,DWORD PTR [ebp-0x4]
   1cb2f:	mov    DWORD PTR [edx],eax
   1cb31:	mov    eax,DWORD PTR [ebp-0x8]
   1cb34:	mov    DWORD PTR [edx+0x4],eax
   1cb37:	mov    DWORD PTR [esi+0x38],ebx
   1cb3a:	mov    DWORD PTR [esi+0x3c],edi
   1cb3d:	push   0x2
   1cb3f:	jmp    0x1baf8
   1cb44:	xor    ebx,ebx
   1cb46:	xor    edi,edi
   1cb48:	mov    DWORD PTR [esi],0x1a
   1cb4e:	mov    DWORD PTR [ebp-0x24],0x1
   1cb55:	jmp    0x1cb5e
   1cb57:	mov    DWORD PTR [ebp-0x24],0xfffffffd
   1cb5e:	mov    eax,DWORD PTR [ebp+0x8]
   1cb61:	mov    ecx,DWORD PTR [ebp-0x18]
   1cb64:	mov    DWORD PTR [eax+0xc],ecx
   1cb67:	mov    ecx,DWORD PTR [ebp-0x14]
   1cb6a:	mov    DWORD PTR [eax+0x10],ecx
   1cb6d:	mov    ecx,DWORD PTR [ebp-0x4]
   1cb70:	mov    DWORD PTR [eax],ecx
   1cb72:	mov    ecx,DWORD PTR [ebp-0x8]
   1cb75:	mov    DWORD PTR [eax+0x4],ecx
   1cb78:	cmp    DWORD PTR [esi+0x28],0x0
   1cb7c:	mov    DWORD PTR [esi+0x38],ebx
   1cb7f:	mov    DWORD PTR [esi+0x3c],edi
   1cb82:	jne    0x1cb94
   1cb84:	cmp    DWORD PTR [esi],0x18
   1cb87:	jge    0x1cbb0
   1cb89:	mov    eax,DWORD PTR [ebp-0x1c]
   1cb8c:	mov    ecx,DWORD PTR [ebp+0x8]
   1cb8f:	cmp    eax,DWORD PTR [ecx+0x10]
   1cb92:	je     0x1cbb0
   1cb94:	mov    eax,DWORD PTR [ebp-0x1c]
   1cb97:	mov    edi,DWORD PTR [ebp+0x8]
   1cb9a:	call   0x1b9b8
   1cb9f:	test   eax,eax
   1cba1:	je     0x1cbb0
   1cba3:	mov    DWORD PTR [esi],0x1c
   1cba9:	push   0xfffffffc
   1cbab:	jmp    0x1baf8
   1cbb0:	mov    edi,DWORD PTR [ebp+0x8]
   1cbb3:	mov    eax,DWORD PTR [ebp-0x2c]
   1cbb6:	sub    eax,DWORD PTR [edi+0x4]
   1cbb9:	mov    ebx,DWORD PTR [ebp-0x1c]
   1cbbc:	sub    ebx,DWORD PTR [edi+0x10]
   1cbbf:	add    DWORD PTR [edi+0x8],eax
   1cbc2:	add    DWORD PTR [edi+0x14],ebx
   1cbc5:	add    DWORD PTR [esi+0x1c],ebx
   1cbc8:	cmp    DWORD PTR [esi+0x8],0x0
   1cbcc:	mov    DWORD PTR [ebp-0x2c],eax
   1cbcf:	je     0x1cbfa
   1cbd1:	test   ebx,ebx
   1cbd3:	je     0x1cbfa
   1cbd5:	mov    eax,DWORD PTR [edi+0xc]
   1cbd8:	push   ebx
   1cbd9:	sub    eax,ebx
   1cbdb:	cmp    DWORD PTR [esi+0x10],0x0
   1cbdf:	push   eax
   1cbe0:	push   DWORD PTR [esi+0x18]
   1cbe3:	je     0x1cbec
   1cbe5:	call   0x1d9c2
   1cbea:	jmp    0x1cbf1
   1cbec:	call   0x1d520
   1cbf1:	mov    DWORD PTR [esi+0x18],eax
   1cbf4:	mov    DWORD PTR [edi+0x30],eax
   1cbf7:	mov    eax,DWORD PTR [ebp-0x2c]
   1cbfa:	cmp    DWORD PTR [esi],0xb
   1cbfd:	jne    0x1cc06
   1cbff:	mov    ecx,0x80
   1cc04:	jmp    0x1cc08
   1cc06:	xor    ecx,ecx
   1cc08:	mov    edx,DWORD PTR [esi+0x4]
   1cc0b:	neg    edx
   1cc0d:	sbb    edx,edx
   1cc0f:	and    edx,0x40
   1cc12:	add    edx,ecx
   1cc14:	add    edx,DWORD PTR [esi+0x3c]
   1cc17:	mov    DWORD PTR [edi+0x2c],edx
   1cc1a:	test   eax,eax
   1cc1c:	jne    0x1cc22
   1cc1e:	test   ebx,ebx
   1cc20:	je     0x1cc28
   1cc22:	cmp    DWORD PTR [ebp+0xc],0x4
   1cc26:	jne    0x1cc35
   1cc28:	cmp    DWORD PTR [ebp-0x24],0x0
   1cc2c:	jne    0x1cc35
   1cc2e:	mov    DWORD PTR [ebp-0x24],0xfffffffb
   1cc35:	mov    eax,DWORD PTR [ebp-0x24]
   1cc38:	jmp    0x1baf9
   1cc3d:	lea    ecx,[ecx+0x0]
   1cc40:	or     bh,BYTE PTR [ebx-0x43d1ffff]
   1cc46:	add    DWORD PTR [eax],eax
   1cc48:	ret    
   1cc49:	mov    esp,0xbd390001
   1cc4e:	add    DWORD PTR [eax],eax
   1cc50:	mov    dl,0xbd
   1cc52:	add    DWORD PTR [eax],eax
   1cc54:	xor    DWORD PTR [esi-0x4133ffff],edi
   1cc5a:	add    DWORD PTR [eax],eax
   1cc5c:	gs mov edi,0xbffa0001
   1cc62:	add    DWORD PTR [eax],eax
   1cc64:	jp     0x1cc26
   1cc66:	add    DWORD PTR [eax],eax
   1cc68:	fadd   st,st(0)
   1cc6a:	add    DWORD PTR [eax],eax
   1cc6c:	sti    
   1cc6d:	rol    BYTE PTR [ecx],0x0
   1cc70:	or     cl,al
   1cc72:	add    DWORD PTR [eax],eax
   1cc74:	mov    bh,0xc1
   1cc76:	add    DWORD PTR [eax],eax
   1cc78:	pop    ss
   1cc79:	ret    0x1
   1cc7c:	ins    DWORD PTR es:[edi],dx
   1cc7d:	ret    0x1
   1cc80:	das    
   1cc81:	ret    
   1cc82:	add    DWORD PTR [eax],eax
   1cc84:	popf   
   1cc85:	lds    eax,FWORD PTR [ecx]
   1cc87:	add    BYTE PTR ds:0xa00001c6,al
   1cc8d:	mov    DWORD PTR [ecx],0x1c7e600
   1cc93:	add    BYTE PTR [ecx],al
   1cc95:	leave  
   1cc96:	add    DWORD PTR [eax],eax
   1cc98:	gs leave 
   1cc9a:	add    DWORD PTR [eax],eax
   1cc9c:	in     eax,dx
   1cc9d:	leave  
   1cc9e:	add    DWORD PTR [eax],eax
   1cca0:	adc    dl,cl
   1cca2:	add    DWORD PTR [eax],eax
   1cca4:	retf   0x1ca
   1cca7:	add    BYTE PTR [esi-0x35],cl
   1ccaa:	add    DWORD PTR [eax],eax
   1ccac:	push   edi
   1ccad:	retf   
   1ccae:	add    DWORD PTR [eax],eax
   1ccb0:	test   eax,0xcc0001cb
   1ccb5:	int3   
   1ccb6:	int3   
   1ccb7:	int3   
   1ccb8:	int3   
   1ccb9:	int3   
   1ccba:	mov    edi,edi
   1ccbc:	push   ebp
   1ccbd:	mov    ebp,esp
   1ccbf:	push   esi
   1ccc0:	mov    esi,DWORD PTR [ebp+0x8]
   1ccc3:	test   esi,esi
   1ccc5:	je     0x1ccf3
   1ccc7:	mov    eax,DWORD PTR [esi+0x1c]
   1ccca:	test   eax,eax
   1cccc:	je     0x1ccf3
   1ccce:	mov    ecx,DWORD PTR [esi+0x24]
   1ccd1:	test   ecx,ecx
   1ccd3:	je     0x1ccf3
   1ccd5:	mov    eax,DWORD PTR [eax+0x34]
   1ccd8:	test   eax,eax
   1ccda:	je     0x1cce2
   1ccdc:	push   eax
   1ccdd:	push   DWORD PTR [esi+0x28]
   1cce0:	call   ecx
   1cce2:	push   DWORD PTR [esi+0x1c]
   1cce5:	push   DWORD PTR [esi+0x28]
   1cce8:	call   DWORD PTR [esi+0x24]
   1cceb:	and    DWORD PTR [esi+0x1c],0x0
   1ccef:	xor    eax,eax
   1ccf1:	jmp    0x1ccf6
   1ccf3:	push   0xfffffffe
   1ccf5:	pop    eax
   1ccf6:	pop    esi
   1ccf7:	pop    ebp
   1ccf8:	ret    0x4
   1ccfb:	int3   
   1ccfc:	int3   
   1ccfd:	int3   
   1ccfe:	int3   
   1ccff:	int3   
   1cd00:	mov    edi,edi
   1cd02:	push   ebp
   1cd03:	mov    ebp,esp
   1cd05:	mov    eax,DWORD PTR [ebp+0xc]
   1cd08:	imul   eax,DWORD PTR [ebp+0x10]
   1cd0c:	push   eax
   1cd0d:	call   0x1d9e6
   1cd12:	pop    ecx
   1cd13:	pop    ebp
   1cd14:	ret    0xc
   1cd17:	int3   
   1cd18:	int3   
   1cd19:	int3   
   1cd1a:	int3   
   1cd1b:	int3   
   1cd1c:	mov    edi,edi
   1cd1e:	push   ebp
   1cd1f:	mov    ebp,esp
   1cd21:	push   DWORD PTR [ebp+0xc]
   1cd24:	call   0x1da14
   1cd29:	pop    ecx
   1cd2a:	pop    ebp
   1cd2b:	ret    0x8
   1cd2e:	int3   
   1cd2f:	int3   
   1cd30:	int3   
   1cd31:	int3   
   1cd32:	int3   
   1cd33:	int3   
   1cd34:	mov    edi,edi
   1cd36:	push   ebp
   1cd37:	mov    ebp,esp
   1cd39:	sub    esp,0x40
   1cd3c:	mov    eax,DWORD PTR [ebp+0x8]
   1cd3f:	mov    ecx,DWORD PTR [eax+0x4]
   1cd42:	mov    edx,DWORD PTR [eax+0x10]
   1cd45:	push   ebx
   1cd46:	mov    ebx,DWORD PTR [eax]
   1cd48:	dec    ebx
   1cd49:	lea    ecx,[ecx+ebx*1-0x5]
   1cd4d:	mov    DWORD PTR [ebp-0x2c],ecx
   1cd50:	mov    ecx,edx
   1cd52:	sub    ecx,DWORD PTR [ebp+0xc]
   1cd55:	push   esi
   1cd56:	mov    esi,DWORD PTR [eax+0x1c]
   1cd59:	push   edi
   1cd5a:	mov    edi,DWORD PTR [eax+0xc]
   1cd5d:	dec    edi
   1cd5e:	add    ecx,edi
   1cd60:	mov    DWORD PTR [ebp-0x3c],ecx
   1cd63:	lea    ecx,[edx+edi*1-0x101]
   1cd6a:	mov    DWORD PTR [ebp-0x30],ecx
   1cd6d:	mov    ecx,DWORD PTR [esi+0x28]
   1cd70:	mov    DWORD PTR [ebp-0x24],ecx
   1cd73:	mov    ecx,DWORD PTR [esi+0x2c]
   1cd76:	mov    DWORD PTR [ebp-0x40],ecx
   1cd79:	mov    ecx,DWORD PTR [esi+0x30]
   1cd7c:	mov    DWORD PTR [ebp-0x18],ecx
   1cd7f:	mov    ecx,DWORD PTR [esi+0x34]
   1cd82:	mov    DWORD PTR [ebp-0x28],ecx
   1cd85:	mov    ecx,DWORD PTR [esi+0x38]
   1cd88:	mov    DWORD PTR [ebp-0x4],ecx
   1cd8b:	mov    ecx,DWORD PTR [esi+0x3c]
   1cd8e:	mov    DWORD PTR [ebp+0xc],ecx
   1cd91:	mov    ecx,DWORD PTR [esi+0x4c]
   1cd94:	xor    edx,edx
   1cd96:	mov    DWORD PTR [ebp-0x1c],ecx
   1cd99:	mov    ecx,DWORD PTR [esi+0x50]
   1cd9c:	inc    edx
   1cd9d:	mov    DWORD PTR [ebp-0x20],ecx
   1cda0:	mov    ecx,DWORD PTR [esi+0x54]
   1cda3:	shl    edx,cl
   1cda5:	mov    ecx,DWORD PTR [esi+0x58]
   1cda8:	dec    edx
   1cda9:	mov    DWORD PTR [ebp-0x34],edx
   1cdac:	xor    edx,edx
   1cdae:	inc    edx
   1cdaf:	shl    edx,cl
   1cdb1:	dec    edx
   1cdb2:	mov    DWORD PTR [ebp-0x38],edx
   1cdb5:	mov    ecx,DWORD PTR [ebp+0xc]
   1cdb8:	cmp    ecx,0xf
   1cdbb:	jae    0x1cdda
   1cdbd:	add    DWORD PTR [ebp+0xc],0x8
   1cdc1:	inc    ebx
   1cdc2:	movzx  edx,BYTE PTR [ebx]
   1cdc5:	shl    edx,cl
   1cdc7:	mov    ecx,DWORD PTR [ebp+0xc]
   1cdca:	add    DWORD PTR [ebp-0x4],edx
   1cdcd:	inc    ebx
   1cdce:	movzx  edx,BYTE PTR [ebx]
   1cdd1:	shl    edx,cl
   1cdd3:	add    DWORD PTR [ebp-0x4],edx
   1cdd6:	add    DWORD PTR [ebp+0xc],0x8
   1cdda:	mov    ecx,DWORD PTR [ebp-0x34]
   1cddd:	and    ecx,DWORD PTR [ebp-0x4]
   1cde0:	mov    edx,DWORD PTR [ebp-0x1c]
   1cde3:	mov    ecx,DWORD PTR [edx+ecx*4]
   1cde6:	mov    DWORD PTR [ebp-0x10],ecx
   1cde9:	mov    edx,DWORD PTR [ebp-0x10]
   1cdec:	shr    ecx,0x8
   1cdef:	movzx  ecx,cl
   1cdf2:	shr    DWORD PTR [ebp-0x4],cl
   1cdf5:	sub    DWORD PTR [ebp+0xc],ecx
   1cdf8:	mov    DWORD PTR [ebp-0x8],ecx
   1cdfb:	movzx  ecx,dl
   1cdfe:	mov    DWORD PTR [ebp-0x8],ecx
   1ce01:	test   ecx,ecx
   1ce03:	je     0x1ce4c
   1ce05:	mov    ecx,DWORD PTR [ebp-0x8]
   1ce08:	test   cl,0x10
   1ce0b:	jne    0x1ce57
   1ce0d:	test   cl,0x40
   1ce10:	jne    0x1d0a6
   1ce16:	xor    edx,edx
   1ce18:	inc    edx
   1ce19:	shl    edx,cl
   1ce1b:	mov    ecx,DWORD PTR [ebp-0x10]
   1ce1e:	shr    ecx,0x10
   1ce21:	dec    edx
   1ce22:	and    edx,DWORD PTR [ebp-0x4]
   1ce25:	add    edx,ecx
   1ce27:	mov    ecx,DWORD PTR [ebp-0x1c]
   1ce2a:	mov    ecx,DWORD PTR [ecx+edx*4]
   1ce2d:	mov    DWORD PTR [ebp-0x10],ecx
   1ce30:	mov    edx,DWORD PTR [ebp-0x10]
   1ce33:	shr    ecx,0x8
   1ce36:	movzx  ecx,cl
   1ce39:	shr    DWORD PTR [ebp-0x4],cl
   1ce3c:	sub    DWORD PTR [ebp+0xc],ecx
   1ce3f:	mov    DWORD PTR [ebp-0x8],ecx
   1ce42:	movzx  ecx,dl
   1ce45:	mov    DWORD PTR [ebp-0x8],ecx
   1ce48:	test   ecx,ecx
   1ce4a:	jne    0x1ce05
   1ce4c:	inc    edi
   1ce4d:	shr    edx,0x10
   1ce50:	mov    BYTE PTR [edi],dl
   1ce52:	jmp    0x1d084
   1ce57:	shr    edx,0x10
   1ce5a:	and    ecx,0xf
   1ce5d:	mov    DWORD PTR [ebp-0xc],edx
   1ce60:	mov    DWORD PTR [ebp-0x8],ecx
   1ce63:	je     0x1ce8f
   1ce65:	mov    ecx,DWORD PTR [ebp+0xc]
   1ce68:	cmp    ecx,DWORD PTR [ebp-0x8]
   1ce6b:	jae    0x1ce7a
   1ce6d:	inc    ebx
   1ce6e:	movzx  edx,BYTE PTR [ebx]
   1ce71:	shl    edx,cl
   1ce73:	add    DWORD PTR [ebp-0x4],edx
   1ce76:	add    DWORD PTR [ebp+0xc],0x8
   1ce7a:	mov    ecx,DWORD PTR [ebp-0x8]
   1ce7d:	xor    edx,edx
   1ce7f:	inc    edx
   1ce80:	shl    edx,cl
   1ce82:	dec    edx
   1ce83:	and    edx,DWORD PTR [ebp-0x4]
   1ce86:	shr    DWORD PTR [ebp-0x4],cl
   1ce89:	add    DWORD PTR [ebp-0xc],edx
   1ce8c:	sub    DWORD PTR [ebp+0xc],ecx
   1ce8f:	mov    ecx,DWORD PTR [ebp+0xc]
   1ce92:	cmp    ecx,0xf
   1ce95:	jae    0x1ceb4
   1ce97:	add    DWORD PTR [ebp+0xc],0x8
   1ce9b:	inc    ebx
   1ce9c:	movzx  edx,BYTE PTR [ebx]
   1ce9f:	shl    edx,cl
   1cea1:	mov    ecx,DWORD PTR [ebp+0xc]
   1cea4:	add    DWORD PTR [ebp-0x4],edx
   1cea7:	inc    ebx
   1cea8:	movzx  edx,BYTE PTR [ebx]
   1ceab:	shl    edx,cl
   1cead:	add    DWORD PTR [ebp-0x4],edx
   1ceb0:	add    DWORD PTR [ebp+0xc],0x8
   1ceb4:	mov    ecx,DWORD PTR [ebp-0x38]
   1ceb7:	and    ecx,DWORD PTR [ebp-0x4]
   1ceba:	mov    edx,DWORD PTR [ebp-0x20]
   1cebd:	mov    ecx,DWORD PTR [edx+ecx*4]
   1cec0:	jmp    0x1cee0
   1cec2:	test   cl,0x40
   1cec5:	jne    0x1d09d
   1cecb:	xor    edx,edx
   1cecd:	inc    edx
   1cece:	shl    edx,cl
   1ced0:	movzx  ecx,WORD PTR [ebp-0xe]
   1ced4:	dec    edx
   1ced5:	and    edx,DWORD PTR [ebp-0x4]
   1ced8:	add    edx,ecx
   1ceda:	mov    ecx,DWORD PTR [ebp-0x20]
   1cedd:	mov    ecx,DWORD PTR [ecx+edx*4]
   1cee0:	mov    DWORD PTR [ebp-0x10],ecx
   1cee3:	mov    edx,DWORD PTR [ebp-0x10]
   1cee6:	shr    ecx,0x8
   1cee9:	movzx  ecx,cl
   1ceec:	shr    DWORD PTR [ebp-0x4],cl
   1ceef:	sub    DWORD PTR [ebp+0xc],ecx
   1cef2:	mov    DWORD PTR [ebp-0x8],ecx
   1cef5:	movzx  ecx,dl
   1cef8:	test   cl,0x10
   1cefb:	je     0x1cec2
   1cefd:	and    ecx,0xf
   1cf00:	shr    edx,0x10
   1cf03:	mov    DWORD PTR [ebp-0x14],edx
   1cf06:	mov    DWORD PTR [ebp-0x8],ecx
   1cf09:	cmp    DWORD PTR [ebp+0xc],ecx
   1cf0c:	jae    0x1cf39
   1cf0e:	mov    ecx,DWORD PTR [ebp+0xc]
   1cf11:	add    DWORD PTR [ebp+0xc],0x8
   1cf15:	inc    ebx
   1cf16:	movzx  edx,BYTE PTR [ebx]
   1cf19:	shl    edx,cl
   1cf1b:	mov    ecx,DWORD PTR [ebp-0x8]
   1cf1e:	add    DWORD PTR [ebp-0x4],edx
   1cf21:	cmp    DWORD PTR [ebp+0xc],ecx
   1cf24:	jae    0x1cf39
   1cf26:	mov    ecx,DWORD PTR [ebp+0xc]
   1cf29:	inc    ebx
   1cf2a:	movzx  edx,BYTE PTR [ebx]
   1cf2d:	shl    edx,cl
   1cf2f:	mov    ecx,DWORD PTR [ebp-0x8]
   1cf32:	add    DWORD PTR [ebp-0x4],edx
   1cf35:	add    DWORD PTR [ebp+0xc],0x8
   1cf39:	xor    edx,edx
   1cf3b:	inc    edx
   1cf3c:	shl    edx,cl
   1cf3e:	mov    ecx,DWORD PTR [ebp-0x8]
   1cf41:	sub    DWORD PTR [ebp+0xc],ecx
   1cf44:	dec    edx
   1cf45:	and    edx,DWORD PTR [ebp-0x4]
   1cf48:	shr    DWORD PTR [ebp-0x4],cl
   1cf4b:	add    DWORD PTR [ebp-0x14],edx
   1cf4e:	mov    edx,DWORD PTR [ebp-0x14]
   1cf51:	mov    ecx,edi
   1cf53:	sub    ecx,DWORD PTR [ebp-0x3c]
   1cf56:	cmp    edx,ecx
   1cf58:	jbe    0x1d04c
   1cf5e:	sub    edx,ecx
   1cf60:	mov    DWORD PTR [ebp-0x8],edx
   1cf63:	cmp    edx,DWORD PTR [ebp-0x40]
   1cf66:	ja     0x1d094
   1cf6c:	mov    ecx,DWORD PTR [ebp-0x28]
   1cf6f:	dec    ecx
   1cf70:	mov    DWORD PTR [ebp-0x10],ecx
   1cf73:	mov    ecx,DWORD PTR [ebp-0x18]
   1cf76:	test   ecx,ecx
   1cf78:	jne    0x1cfa0
   1cf7a:	mov    ecx,DWORD PTR [ebp-0x24]
   1cf7d:	sub    ecx,edx
   1cf7f:	add    DWORD PTR [ebp-0x10],ecx
   1cf82:	mov    ecx,edx
   1cf84:	cmp    ecx,DWORD PTR [ebp-0xc]
   1cf87:	jae    0x1d015
   1cf8d:	sub    DWORD PTR [ebp-0xc],ecx
   1cf90:	mov    ecx,DWORD PTR [ebp-0x10]
   1cf93:	inc    ecx
   1cf94:	mov    dl,BYTE PTR [ecx]
   1cf96:	inc    edi
   1cf97:	dec    DWORD PTR [ebp-0x8]
   1cf9a:	mov    BYTE PTR [edi],dl
   1cf9c:	jne    0x1cf93
   1cf9e:	jmp    0x1cfeb
   1cfa0:	cmp    ecx,edx
   1cfa2:	jae    0x1cff5
   1cfa4:	sub    ecx,edx
   1cfa6:	add    ecx,DWORD PTR [ebp-0x24]
   1cfa9:	add    DWORD PTR [ebp-0x10],ecx
   1cfac:	mov    ecx,DWORD PTR [ebp-0x8]
   1cfaf:	sub    ecx,DWORD PTR [ebp-0x18]
   1cfb2:	cmp    ecx,DWORD PTR [ebp-0xc]
   1cfb5:	jae    0x1d015
   1cfb7:	sub    DWORD PTR [ebp-0xc],ecx
   1cfba:	inc    DWORD PTR [ebp-0x10]
   1cfbd:	mov    edx,DWORD PTR [ebp-0x10]
   1cfc0:	mov    dl,BYTE PTR [edx]
   1cfc2:	inc    edi
   1cfc3:	dec    ecx
   1cfc4:	mov    BYTE PTR [edi],dl
   1cfc6:	jne    0x1cfba
   1cfc8:	mov    ecx,DWORD PTR [ebp-0x28]
   1cfcb:	dec    ecx
   1cfcc:	mov    DWORD PTR [ebp-0x10],ecx
   1cfcf:	mov    ecx,DWORD PTR [ebp-0x18]
   1cfd2:	cmp    ecx,DWORD PTR [ebp-0xc]
   1cfd5:	jae    0x1d015
   1cfd7:	sub    DWORD PTR [ebp-0xc],ecx
   1cfda:	mov    DWORD PTR [ebp-0x8],ecx
   1cfdd:	mov    ecx,DWORD PTR [ebp-0x10]
   1cfe0:	inc    ecx
   1cfe1:	mov    dl,BYTE PTR [ecx]
   1cfe3:	inc    edi
   1cfe4:	dec    DWORD PTR [ebp-0x8]
   1cfe7:	mov    BYTE PTR [edi],dl
   1cfe9:	jne    0x1cfe0
   1cfeb:	mov    ecx,edi
   1cfed:	sub    ecx,DWORD PTR [ebp-0x14]
   1cff0:	mov    DWORD PTR [ebp-0x10],ecx
   1cff3:	jmp    0x1d018
   1cff5:	sub    ecx,edx
   1cff7:	add    DWORD PTR [ebp-0x10],ecx
   1cffa:	mov    ecx,DWORD PTR [ebp-0x8]
   1cffd:	cmp    ecx,DWORD PTR [ebp-0xc]
   1d000:	jae    0x1d015
   1d002:	sub    DWORD PTR [ebp-0xc],ecx
   1d005:	mov    ecx,DWORD PTR [ebp-0x10]
   1d008:	inc    ecx
   1d009:	mov    dl,BYTE PTR [ecx]
   1d00b:	inc    edi
   1d00c:	dec    DWORD PTR [ebp-0x8]
   1d00f:	mov    BYTE PTR [edi],dl
   1d011:	jne    0x1d008
   1d013:	jmp    0x1cfeb
   1d015:	mov    ecx,DWORD PTR [ebp-0x10]
   1d018:	mov    edx,DWORD PTR [ebp-0xc]
   1d01b:	cmp    edx,0x2
   1d01e:	jbe    0x1d06c
   1d020:	lea    eax,[edx-0x3]
   1d023:	push   0x3
   1d025:	xor    edx,edx
   1d027:	pop    ecx
   1d028:	div    ecx
   1d02a:	mov    ecx,DWORD PTR [ebp-0x10]
   1d02d:	inc    eax
   1d02e:	sub    DWORD PTR [ebp-0xc],0x3
   1d032:	inc    ecx
   1d033:	mov    dl,BYTE PTR [ecx]
   1d035:	inc    edi
   1d036:	mov    BYTE PTR [edi],dl
   1d038:	inc    ecx
   1d039:	mov    dl,BYTE PTR [ecx]
   1d03b:	inc    edi
   1d03c:	inc    ecx
   1d03d:	mov    BYTE PTR [edi],dl
   1d03f:	mov    dl,BYTE PTR [ecx]
   1d041:	inc    edi
   1d042:	dec    eax
   1d043:	mov    BYTE PTR [edi],dl
   1d045:	jne    0x1d02e
   1d047:	mov    eax,DWORD PTR [ebp+0x8]
   1d04a:	jmp    0x1d06c
   1d04c:	mov    ecx,edi
   1d04e:	sub    ecx,edx
   1d050:	sub    DWORD PTR [ebp-0xc],0x3
   1d054:	inc    ecx
   1d055:	mov    dl,BYTE PTR [ecx]
   1d057:	inc    edi
   1d058:	mov    BYTE PTR [edi],dl
   1d05a:	inc    ecx
   1d05b:	mov    dl,BYTE PTR [ecx]
   1d05d:	inc    edi
   1d05e:	inc    ecx
   1d05f:	mov    BYTE PTR [edi],dl
   1d061:	mov    dl,BYTE PTR [ecx]
   1d063:	inc    edi
   1d064:	cmp    DWORD PTR [ebp-0xc],0x2
   1d068:	mov    BYTE PTR [edi],dl
   1d06a:	ja     0x1d050
   1d06c:	cmp    DWORD PTR [ebp-0xc],0x0
   1d070:	je     0x1d084
   1d072:	inc    ecx
   1d073:	mov    dl,BYTE PTR [ecx]
   1d075:	inc    edi
   1d076:	cmp    DWORD PTR [ebp-0xc],0x1
   1d07a:	mov    BYTE PTR [edi],dl
   1d07c:	jbe    0x1d084
   1d07e:	mov    cl,BYTE PTR [ecx+0x1]
   1d081:	inc    edi
   1d082:	mov    BYTE PTR [edi],cl
   1d084:	cmp    ebx,DWORD PTR [ebp-0x2c]
   1d087:	jae    0x1d0c0
   1d089:	cmp    edi,DWORD PTR [ebp-0x30]
   1d08c:	jb     0x1cdb5
   1d092:	jmp    0x1d0c0
   1d094:	mov    DWORD PTR [eax+0x18],0x1ec76
   1d09b:	jmp    0x1d0ba
   1d09d:	mov    DWORD PTR [eax+0x18],0x1ec94
   1d0a4:	jmp    0x1d0ba
   1d0a6:	test   cl,0x20
   1d0a9:	je     0x1d0b3
   1d0ab:	mov    DWORD PTR [esi],0xb
   1d0b1:	jmp    0x1d0c0
   1d0b3:	mov    DWORD PTR [eax+0x18],0x1ecaa
   1d0ba:	mov    DWORD PTR [esi],0x1b
   1d0c0:	mov    ecx,DWORD PTR [ebp+0xc]
   1d0c3:	shr    ecx,0x3
   1d0c6:	sub    ebx,ecx
   1d0c8:	shl    ecx,0x3
   1d0cb:	sub    DWORD PTR [ebp+0xc],ecx
   1d0ce:	xor    ecx,ecx
   1d0d0:	inc    ecx
   1d0d1:	mov    edx,ecx
   1d0d3:	mov    ecx,DWORD PTR [ebp+0xc]
   1d0d6:	shl    edx,cl
   1d0d8:	dec    edx
   1d0d9:	mov    ecx,edx
   1d0db:	mov    edx,DWORD PTR [ebp-0x4]
   1d0de:	and    edx,ecx
   1d0e0:	lea    ecx,[ebx+0x1]
   1d0e3:	mov    DWORD PTR [eax],ecx
   1d0e5:	lea    ecx,[edi+0x1]
   1d0e8:	mov    DWORD PTR [eax+0xc],ecx
   1d0eb:	mov    ecx,DWORD PTR [ebp-0x2c]
   1d0ee:	sub    ecx,ebx
   1d0f0:	add    ecx,0x5
   1d0f3:	mov    DWORD PTR [eax+0x4],ecx
   1d0f6:	mov    ecx,DWORD PTR [ebp-0x30]
   1d0f9:	sub    ecx,edi
   1d0fb:	add    ecx,0x101
   1d101:	mov    DWORD PTR [eax+0x10],ecx
   1d104:	mov    eax,DWORD PTR [ebp+0xc]
   1d107:	pop    edi
   1d108:	mov    DWORD PTR [esi+0x38],edx
   1d10b:	mov    DWORD PTR [esi+0x3c],eax
   1d10e:	pop    esi
   1d10f:	pop    ebx
   1d110:	leave  
   1d111:	ret    0x8
   1d114:	int3   
   1d115:	int3   
   1d116:	int3   
   1d117:	int3   
   1d118:	int3   
   1d119:	int3   
   1d11a:	mov    edi,edi
   1d11c:	push   ebp
   1d11d:	mov    ebp,esp
   1d11f:	sub    esp,0x90
   1d125:	mov    eax,ds:0x7e528
   1d12a:	xor    eax,ebp
   1d12c:	mov    DWORD PTR [ebp-0x4],eax
   1d12f:	mov    eax,DWORD PTR [ebp+0xc]
   1d132:	mov    edx,DWORD PTR [ebp+0x18]
   1d135:	mov    DWORD PTR [ebp-0x7c],eax
   1d138:	mov    eax,DWORD PTR [ebp+0x1c]
   1d13b:	push   ebx
   1d13c:	mov    DWORD PTR [ebp-0x4c],eax
   1d13f:	xor    eax,eax
   1d141:	push   esi
   1d142:	mov    esi,DWORD PTR [ebp+0x14]
   1d145:	movzx  ebx,ax
   1d148:	push   edi
   1d149:	mov    eax,ebx
   1d14b:	shl    ebx,0x10
   1d14e:	push   0x8
   1d150:	or     eax,ebx
   1d152:	pop    ecx
   1d153:	lea    edi,[ebp-0x24]
   1d156:	rep stos DWORD PTR es:[edi],eax
   1d158:	xor    edi,edi
   1d15a:	xor    ecx,ecx
   1d15c:	mov    DWORD PTR [ebp-0x90],edx
   1d162:	cmp    DWORD PTR [ebp+0x10],edi
   1d165:	jbe    0x1d17b
   1d167:	mov    eax,DWORD PTR [ebp-0x7c]
   1d16a:	movzx  eax,WORD PTR [eax+ecx*2]
   1d16e:	lea    eax,[ebp+eax*2-0x24]
   1d172:	inc    WORD PTR [eax]
   1d175:	inc    ecx
   1d176:	cmp    ecx,DWORD PTR [ebp+0x10]
   1d179:	jb     0x1d167
   1d17b:	mov    ecx,DWORD PTR [edx]
   1d17d:	push   0xf
   1d17f:	pop    eax
   1d180:	mov    DWORD PTR [ebp-0x54],ecx
   1d183:	mov    DWORD PTR [ebp-0x60],eax
   1d186:	cmp    WORD PTR [ebp+eax*2-0x24],di
   1d18b:	jne    0x1d196
   1d18d:	dec    eax
   1d18e:	mov    DWORD PTR [ebp-0x60],eax
   1d191:	cmp    eax,0x1
   1d194:	jae    0x1d186
   1d196:	cmp    ecx,eax
   1d198:	jbe    0x1d19d
   1d19a:	mov    DWORD PTR [ebp-0x54],eax
   1d19d:	cmp    eax,edi
   1d19f:	jne    0x1d1cb
   1d1a1:	mov    ecx,DWORD PTR [esi]
   1d1a3:	xor    eax,eax
   1d1a5:	mov    BYTE PTR [ebp-0x48],0x40
   1d1a9:	mov    BYTE PTR [ebp-0x47],0x1
   1d1ad:	mov    WORD PTR [ebp-0x46],ax
   1d1b1:	mov    eax,DWORD PTR [ebp-0x48]
   1d1b4:	mov    DWORD PTR [ecx],eax
   1d1b6:	add    DWORD PTR [esi],0x4
   1d1b9:	mov    ecx,DWORD PTR [esi]
   1d1bb:	mov    DWORD PTR [ecx],eax
   1d1bd:	add    DWORD PTR [esi],0x4
   1d1c0:	mov    DWORD PTR [edx],0x1
   1d1c6:	jmp    0x1d507
   1d1cb:	xor    ecx,ecx
   1d1cd:	inc    ecx
   1d1ce:	mov    edx,ecx
   1d1d0:	cmp    WORD PTR [ebp+edx*2-0x24],di
   1d1d5:	jne    0x1d1dd
   1d1d7:	inc    edx
   1d1d8:	cmp    edx,0xf
   1d1db:	jbe    0x1d1d0
   1d1dd:	cmp    DWORD PTR [ebp-0x54],edx
   1d1e0:	jae    0x1d1e5
   1d1e2:	mov    DWORD PTR [ebp-0x54],edx
   1d1e5:	mov    edi,ecx
   1d1e7:	movzx  ebx,WORD PTR [ebp+ecx*2-0x24]
   1d1ec:	add    edi,edi
   1d1ee:	sub    edi,ebx
   1d1f0:	js     0x1d27c
   1d1f6:	inc    ecx
   1d1f7:	cmp    ecx,0xf
   1d1fa:	jbe    0x1d1e7
   1d1fc:	xor    ebx,ebx
   1d1fe:	cmp    edi,ebx
   1d200:	jle    0x1d20c
   1d202:	cmp    DWORD PTR [ebp+0x8],ebx
   1d205:	je     0x1d27c
   1d207:	cmp    eax,0x1
   1d20a:	jne    0x1d27c
   1d20c:	xor    eax,eax
   1d20e:	push   0x2
   1d210:	mov    WORD PTR [ebp-0x42],ax
   1d214:	pop    ecx
   1d215:	mov    ax,WORD PTR [ebp+ecx*1-0x44]
   1d21a:	add    ax,WORD PTR [ebp+ecx*1-0x24]
   1d21f:	inc    ecx
   1d220:	mov    WORD PTR [ebp+ecx*1-0x43],ax
   1d225:	inc    ecx
   1d226:	cmp    ecx,0x1e
   1d229:	jb     0x1d215
   1d22b:	mov    eax,DWORD PTR [ebp-0x4c]
   1d22e:	xor    edi,edi
   1d230:	cmp    DWORD PTR [ebp+0x10],ebx
   1d233:	jbe    0x1d25e
   1d235:	mov    ecx,DWORD PTR [ebp-0x7c]
   1d238:	lea    ecx,[ecx+edi*2]
   1d23b:	cmp    WORD PTR [ecx],bx
   1d23e:	je     0x1d258
   1d240:	movzx  ebx,WORD PTR [ecx]
   1d243:	movzx  ebx,WORD PTR [ebp+ebx*2-0x44]
   1d248:	mov    WORD PTR [eax+ebx*2],di
   1d24c:	movzx  ecx,WORD PTR [ecx]
   1d24f:	lea    ecx,[ebp+ecx*2-0x44]
   1d253:	inc    WORD PTR [ecx]
   1d256:	xor    ebx,ebx
   1d258:	inc    edi
   1d259:	cmp    edi,DWORD PTR [ebp+0x10]
   1d25c:	jb     0x1d235
   1d25e:	mov    ecx,DWORD PTR [ebp+0x8]
   1d261:	sub    ecx,ebx
   1d263:	je     0x1d2a6
   1d265:	dec    ecx
   1d266:	je     0x1d284
   1d268:	or     DWORD PTR [ebp-0x68],0xffffffff
   1d26c:	mov    DWORD PTR [ebp-0x6c],0x7bf10
   1d273:	mov    DWORD PTR [ebp-0x78],0x7bf50
   1d27a:	jmp    0x1d2b3
   1d27c:	or     eax,0xffffffff
   1d27f:	jmp    0x1d509
   1d284:	mov    ecx,0x202
   1d289:	mov    edi,0x7be90
   1d28e:	sub    edi,ecx
   1d290:	mov    DWORD PTR [ebp-0x6c],edi
   1d293:	mov    edi,0x7bed0
   1d298:	sub    edi,ecx
   1d29a:	mov    DWORD PTR [ebp-0x78],edi
   1d29d:	mov    DWORD PTR [ebp-0x68],0x100
   1d2a4:	jmp    0x1d2b3
   1d2a6:	mov    DWORD PTR [ebp-0x78],eax
   1d2a9:	mov    DWORD PTR [ebp-0x6c],eax
   1d2ac:	mov    DWORD PTR [ebp-0x68],0x13
   1d2b3:	mov    ecx,DWORD PTR [ebp-0x54]
   1d2b6:	or     DWORD PTR [ebp-0x74],0xffffffff
   1d2ba:	mov    edi,DWORD PTR [esi]
   1d2bc:	mov    eax,edx
   1d2be:	xor    edx,edx
   1d2c0:	inc    edx
   1d2c1:	shl    edx,cl
   1d2c3:	cmp    DWORD PTR [ebp+0x8],0x1
   1d2c7:	mov    DWORD PTR [ebp-0x5c],ebx
   1d2ca:	mov    DWORD PTR [ebp-0x84],eax
   1d2d0:	lea    ecx,[edx-0x1]
   1d2d3:	mov    DWORD PTR [ebp-0x50],ebx
   1d2d6:	mov    DWORD PTR [ebp-0x80],edx
   1d2d9:	mov    DWORD PTR [ebp-0x64],edx
   1d2dc:	mov    DWORD PTR [ebp-0x88],ecx
   1d2e2:	jne    0x1d2f4
   1d2e4:	cmp    edx,0x5b0
   1d2ea:	jb     0x1d2f4
   1d2ec:	xor    eax,eax
   1d2ee:	inc    eax
   1d2ef:	jmp    0x1d509
   1d2f4:	mov    ecx,DWORD PTR [ebp-0x4c]
   1d2f7:	mov    DWORD PTR [ebp-0x58],ecx
   1d2fa:	mov    cl,al
   1d2fc:	sub    cl,BYTE PTR [ebp-0x50]
   1d2ff:	mov    BYTE PTR [ebp-0x47],cl
   1d302:	mov    ecx,DWORD PTR [ebp-0x58]
   1d305:	movzx  edx,WORD PTR [ecx]
   1d308:	movzx  ecx,dx
   1d30b:	cmp    ecx,DWORD PTR [ebp-0x68]
   1d30e:	jge    0x1d31a
   1d310:	mov    BYTE PTR [ebp-0x48],0x0
   1d314:	mov    WORD PTR [ebp-0x46],dx
   1d318:	jmp    0x1d340
   1d31a:	jle    0x1d336
   1d31c:	mov    ecx,DWORD PTR [ebp-0x58]
   1d31f:	movzx  ecx,WORD PTR [ecx]
   1d322:	mov    edx,DWORD PTR [ebp-0x78]
   1d325:	add    ecx,ecx
   1d327:	mov    dl,BYTE PTR [ecx+edx*1]
   1d32a:	mov    BYTE PTR [ebp-0x48],dl
   1d32d:	mov    edx,DWORD PTR [ebp-0x6c]
   1d330:	mov    cx,WORD PTR [ecx+edx*1]
   1d334:	jmp    0x1d33c
   1d336:	mov    BYTE PTR [ebp-0x48],0x60
   1d33a:	xor    ecx,ecx
   1d33c:	mov    WORD PTR [ebp-0x46],cx
   1d340:	xor    edx,edx
   1d342:	mov    ecx,eax
   1d344:	sub    ecx,DWORD PTR [ebp-0x50]
   1d347:	inc    edx
   1d348:	shl    edx,cl
   1d34a:	mov    ecx,DWORD PTR [ebp-0x80]
   1d34d:	mov    DWORD PTR [ebp-0x4c],ecx
   1d350:	mov    DWORD PTR [ebp-0x70],ecx
   1d353:	mov    ecx,DWORD PTR [ebp-0x50]
   1d356:	shr    ebx,cl
   1d358:	add    ebx,DWORD PTR [ebp-0x4c]
   1d35b:	lea    ecx,[edi+ebx*4]
   1d35e:	sub    DWORD PTR [ebp-0x4c],edx
   1d361:	mov    ebx,edx
   1d363:	shl    ebx,0x2
   1d366:	sub    ecx,ebx
   1d368:	cmp    DWORD PTR [ebp-0x4c],0x0
   1d36c:	mov    ebx,DWORD PTR [ebp-0x48]
   1d36f:	mov    DWORD PTR [ecx],ebx
   1d371:	jne    0x1d35e
   1d373:	xor    edx,edx
   1d375:	lea    ecx,[eax-0x1]
   1d378:	inc    edx
   1d379:	shl    edx,cl
   1d37b:	mov    ecx,DWORD PTR [ebp-0x5c]
   1d37e:	jmp    0x1d382
   1d380:	shr    edx,1
   1d382:	test   ecx,edx
   1d384:	jne    0x1d380
   1d386:	test   edx,edx
   1d388:	je     0x1d393
   1d38a:	lea    ebx,[edx-0x1]
   1d38d:	and    ebx,ecx
   1d38f:	add    ebx,edx
   1d391:	jmp    0x1d395
   1d393:	xor    ebx,ebx
   1d395:	add    DWORD PTR [ebp-0x58],0x2
   1d399:	lea    ecx,[ebp+eax*2-0x24]
   1d39d:	mov    edx,0xffff
   1d3a2:	add    WORD PTR [ecx],dx
   1d3a5:	movzx  ecx,WORD PTR [ecx]
   1d3a8:	mov    DWORD PTR [ebp-0x5c],ebx
   1d3ab:	test   cx,cx
   1d3ae:	jne    0x1d3cc
   1d3b0:	cmp    eax,DWORD PTR [ebp-0x60]
   1d3b3:	je     0x1d48f
   1d3b9:	mov    eax,DWORD PTR [ebp-0x58]
   1d3bc:	movzx  eax,WORD PTR [eax]
   1d3bf:	mov    ecx,DWORD PTR [ebp-0x7c]
   1d3c2:	movzx  eax,WORD PTR [ecx+eax*2]
   1d3c6:	mov    DWORD PTR [ebp-0x84],eax
   1d3cc:	mov    edx,DWORD PTR [ebp-0x54]
   1d3cf:	cmp    eax,edx
   1d3d1:	jbe    0x1d2fa
   1d3d7:	mov    ecx,DWORD PTR [ebp-0x88]
   1d3dd:	and    ecx,ebx
   1d3df:	mov    DWORD PTR [ebp-0x8c],ecx
   1d3e5:	cmp    ecx,DWORD PTR [ebp-0x74]
   1d3e8:	je     0x1d2fa
   1d3ee:	cmp    DWORD PTR [ebp-0x50],0x0
   1d3f2:	jne    0x1d3f7
   1d3f4:	mov    DWORD PTR [ebp-0x50],edx
   1d3f7:	mov    ecx,DWORD PTR [ebp-0x70]
   1d3fa:	lea    edi,[edi+ecx*4]
   1d3fd:	mov    ecx,eax
   1d3ff:	mov    eax,DWORD PTR [ebp-0x50]
   1d402:	xor    edx,edx
   1d404:	sub    ecx,eax
   1d406:	inc    edx
   1d407:	add    eax,ecx
   1d409:	shl    edx,cl
   1d40b:	cmp    eax,DWORD PTR [ebp-0x60]
   1d40e:	jae    0x1d438
   1d410:	mov    DWORD PTR [ebp-0x4c],eax
   1d413:	lea    eax,[ebp+eax*2-0x24]
   1d417:	jmp    0x1d41c
   1d419:	mov    eax,DWORD PTR [ebp-0x70]
   1d41c:	movzx  ebx,WORD PTR [eax]
   1d41f:	sub    edx,ebx
   1d421:	test   edx,edx
   1d423:	jle    0x1d438
   1d425:	inc    ecx
   1d426:	inc    DWORD PTR [ebp-0x4c]
   1d429:	inc    eax
   1d42a:	inc    eax
   1d42b:	mov    DWORD PTR [ebp-0x70],eax
   1d42e:	mov    eax,DWORD PTR [ebp-0x4c]
   1d431:	add    edx,edx
   1d433:	cmp    eax,DWORD PTR [ebp-0x60]
   1d436:	jb     0x1d419
   1d438:	xor    eax,eax
   1d43a:	inc    eax
   1d43b:	mov    edx,eax
   1d43d:	shl    edx,cl
   1d43f:	add    DWORD PTR [ebp-0x64],edx
   1d442:	mov    DWORD PTR [ebp-0x80],edx
   1d445:	cmp    DWORD PTR [ebp+0x8],eax
   1d448:	jne    0x1d457
   1d44a:	cmp    DWORD PTR [ebp-0x64],0x5b0
   1d451:	jae    0x1d509
   1d457:	mov    eax,DWORD PTR [ebp-0x8c]
   1d45d:	mov    ebx,DWORD PTR [ebp-0x5c]
   1d460:	mov    edx,eax
   1d462:	mov    DWORD PTR [ebp-0x74],eax
   1d465:	mov    eax,DWORD PTR [esi]
   1d467:	shl    edx,0x2
   1d46a:	mov    BYTE PTR [edx+eax*1],cl
   1d46d:	mov    eax,DWORD PTR [esi]
   1d46f:	mov    cl,BYTE PTR [ebp-0x54]
   1d472:	mov    BYTE PTR [edx+eax*1+0x1],cl
   1d476:	mov    eax,DWORD PTR [esi]
   1d478:	mov    ecx,edi
   1d47a:	sub    ecx,eax
   1d47c:	sar    ecx,0x2
   1d47f:	mov    WORD PTR [edx+eax*1+0x2],cx
   1d484:	mov    eax,DWORD PTR [ebp-0x84]
   1d48a:	jmp    0x1d2fa
   1d48f:	mov    cl,al
   1d491:	sub    cl,BYTE PTR [ebp-0x50]
   1d494:	mov    BYTE PTR [ebp-0x48],0x40
   1d498:	mov    BYTE PTR [ebp-0x47],cl
   1d49b:	xor    ecx,ecx
   1d49d:	mov    WORD PTR [ebp-0x46],cx
   1d4a1:	jmp    0x1d4f0
   1d4a3:	cmp    DWORD PTR [ebp-0x50],0x0
   1d4a7:	je     0x1d4c2
   1d4a9:	mov    ecx,DWORD PTR [ebp-0x88]
   1d4af:	and    ecx,ebx
   1d4b1:	cmp    ecx,DWORD PTR [ebp-0x74]
   1d4b4:	je     0x1d4c2
   1d4b6:	mov    eax,DWORD PTR [ebp-0x54]
   1d4b9:	and    DWORD PTR [ebp-0x50],0x0
   1d4bd:	mov    edi,DWORD PTR [esi]
   1d4bf:	mov    BYTE PTR [ebp-0x47],al
   1d4c2:	mov    ecx,DWORD PTR [ebp-0x50]
   1d4c5:	mov    edx,ebx
   1d4c7:	shr    edx,cl
   1d4c9:	mov    ecx,DWORD PTR [ebp-0x48]
   1d4cc:	mov    DWORD PTR [edi+edx*4],ecx
   1d4cf:	xor    edx,edx
   1d4d1:	lea    ecx,[eax-0x1]
   1d4d4:	inc    edx
   1d4d5:	shl    edx,cl
   1d4d7:	jmp    0x1d4db
   1d4d9:	shr    edx,1
   1d4db:	test   ebx,edx
   1d4dd:	jne    0x1d4d9
   1d4df:	test   edx,edx
   1d4e1:	je     0x1d4ee
   1d4e3:	lea    ecx,[edx-0x1]
   1d4e6:	and    ecx,ebx
   1d4e8:	add    ecx,edx
   1d4ea:	mov    ebx,ecx
   1d4ec:	jmp    0x1d4f0
   1d4ee:	xor    ebx,ebx
   1d4f0:	test   ebx,ebx
   1d4f2:	jne    0x1d4a3
   1d4f4:	mov    eax,DWORD PTR [ebp-0x64]
   1d4f7:	mov    ecx,DWORD PTR [ebp-0x54]
   1d4fa:	shl    eax,0x2
   1d4fd:	add    DWORD PTR [esi],eax
   1d4ff:	mov    eax,DWORD PTR [ebp-0x90]
   1d505:	mov    DWORD PTR [eax],ecx
   1d507:	xor    eax,eax
   1d509:	mov    ecx,DWORD PTR [ebp-0x4]
   1d50c:	pop    edi
   1d50d:	pop    esi
   1d50e:	xor    ecx,ebp
   1d510:	pop    ebx
   1d511:	call   0x1da31
   1d516:	leave  
   1d517:	ret    0x18
   1d51a:	int3   
   1d51b:	int3   
   1d51c:	int3   
   1d51d:	int3   
   1d51e:	int3   
   1d51f:	int3   
   1d520:	mov    edi,edi
   1d522:	push   ebp
   1d523:	mov    ebp,esp
   1d525:	push   ebx
   1d526:	mov    ebx,DWORD PTR [ebp+0x10]
   1d529:	push   esi
   1d52a:	mov    esi,DWORD PTR [ebp+0x8]
   1d52d:	push   edi
   1d52e:	xor    eax,eax
   1d530:	mov    edi,esi
   1d532:	inc    eax
   1d533:	shr    edi,0x10
   1d536:	and    esi,0xffff
   1d53c:	cmp    ebx,eax
   1d53e:	jne    0x1d564
   1d540:	mov    eax,DWORD PTR [ebp+0xc]
   1d543:	movzx  eax,BYTE PTR [eax]
   1d546:	add    esi,eax
   1d548:	mov    eax,0xfff1
   1d54d:	cmp    esi,eax
   1d54f:	jb     0x1d553
   1d551:	sub    esi,eax
   1d553:	add    edi,esi
   1d555:	cmp    edi,eax
   1d557:	jb     0x1d736
   1d55d:	sub    edi,eax
   1d55f:	jmp    0x1d736
   1d564:	mov    ecx,DWORD PTR [ebp+0xc]
   1d567:	test   ecx,ecx
   1d569:	je     0x1d73d
   1d56f:	cmp    ebx,0x10
   1d572:	jb     0x1d6f9
   1d578:	cmp    ebx,0x15b0
   1d57e:	jb     0x1d64c
   1d584:	mov    eax,ebx
   1d586:	mov    ebx,0x15b0
   1d58b:	xor    edx,edx
   1d58d:	div    ebx
   1d58f:	mov    ebx,DWORD PTR [ebp+0x10]
   1d592:	mov    DWORD PTR [ebp+0xc],eax
   1d595:	sub    ebx,0x15b0
   1d59b:	mov    eax,0x15b
   1d5a0:	movzx  edx,BYTE PTR [ecx]
   1d5a3:	add    esi,edx
   1d5a5:	movzx  edx,BYTE PTR [ecx+0x1]
   1d5a9:	add    edi,esi
   1d5ab:	add    esi,edx
   1d5ad:	movzx  edx,BYTE PTR [ecx+0x2]
   1d5b1:	add    edi,esi
   1d5b3:	add    esi,edx
   1d5b5:	movzx  edx,BYTE PTR [ecx+0x3]
   1d5b9:	add    edi,esi
   1d5bb:	add    esi,edx
   1d5bd:	movzx  edx,BYTE PTR [ecx+0x4]
   1d5c1:	add    edi,esi
   1d5c3:	add    esi,edx
   1d5c5:	movzx  edx,BYTE PTR [ecx+0x5]
   1d5c9:	add    edi,esi
   1d5cb:	add    esi,edx
   1d5cd:	movzx  edx,BYTE PTR [ecx+0x6]
   1d5d1:	add    edi,esi
   1d5d3:	add    esi,edx
   1d5d5:	movzx  edx,BYTE PTR [ecx+0x7]
   1d5d9:	add    edi,esi
   1d5db:	add    esi,edx
   1d5dd:	movzx  edx,BYTE PTR [ecx+0x8]
   1d5e1:	add    edi,esi
   1d5e3:	add    esi,edx
   1d5e5:	movzx  edx,BYTE PTR [ecx+0x9]
   1d5e9:	add    edi,esi
   1d5eb:	add    esi,edx
   1d5ed:	movzx  edx,BYTE PTR [ecx+0xa]
   1d5f1:	add    edi,esi
   1d5f3:	add    esi,edx
   1d5f5:	movzx  edx,BYTE PTR [ecx+0xb]
   1d5f9:	add    edi,esi
   1d5fb:	add    esi,edx
   1d5fd:	movzx  edx,BYTE PTR [ecx+0xc]
   1d601:	add    edi,esi
   1d603:	add    esi,edx
   1d605:	movzx  edx,BYTE PTR [ecx+0xd]
   1d609:	add    edi,esi
   1d60b:	add    esi,edx
   1d60d:	movzx  edx,BYTE PTR [ecx+0xe]
   1d611:	add    edi,esi
   1d613:	add    esi,edx
   1d615:	movzx  edx,BYTE PTR [ecx+0xf]
   1d619:	add    edi,esi
   1d61b:	add    esi,edx
   1d61d:	add    edi,esi
   1d61f:	add    ecx,0x10
   1d622:	dec    eax
   1d623:	jne    0x1d5a0
   1d629:	mov    eax,esi
   1d62b:	xor    edx,edx
   1d62d:	mov    esi,0xfff1
   1d632:	div    esi
   1d634:	mov    eax,edi
   1d636:	mov    edi,0xfff1
   1d63b:	mov    esi,edx
   1d63d:	xor    edx,edx
   1d63f:	div    edi
   1d641:	dec    DWORD PTR [ebp+0xc]
   1d644:	mov    edi,edx
   1d646:	jne    0x1d595
   1d64c:	test   ebx,ebx
   1d64e:	je     0x1d736
   1d654:	cmp    ebx,0x10
   1d657:	jb     0x1d71b
   1d65d:	mov    eax,ebx
   1d65f:	shr    eax,0x4
   1d662:	movzx  edx,BYTE PTR [ecx]
   1d665:	add    esi,edx
   1d667:	movzx  edx,BYTE PTR [ecx+0x1]
   1d66b:	add    edi,esi
   1d66d:	add    esi,edx
   1d66f:	movzx  edx,BYTE PTR [ecx+0x2]
   1d673:	add    edi,esi
   1d675:	add    esi,edx
   1d677:	movzx  edx,BYTE PTR [ecx+0x3]
   1d67b:	add    edi,esi
   1d67d:	add    esi,edx
   1d67f:	movzx  edx,BYTE PTR [ecx+0x4]
   1d683:	add    edi,esi
   1d685:	add    esi,edx
   1d687:	movzx  edx,BYTE PTR [ecx+0x5]
   1d68b:	add    edi,esi
   1d68d:	add    esi,edx
   1d68f:	movzx  edx,BYTE PTR [ecx+0x6]
   1d693:	add    edi,esi
   1d695:	add    esi,edx
   1d697:	movzx  edx,BYTE PTR [ecx+0x7]
   1d69b:	add    edi,esi
   1d69d:	add    esi,edx
   1d69f:	movzx  edx,BYTE PTR [ecx+0x8]
   1d6a3:	add    edi,esi
   1d6a5:	add    esi,edx
   1d6a7:	movzx  edx,BYTE PTR [ecx+0x9]
   1d6ab:	add    edi,esi
   1d6ad:	add    esi,edx
   1d6af:	movzx  edx,BYTE PTR [ecx+0xa]
   1d6b3:	add    edi,esi
   1d6b5:	add    esi,edx
   1d6b7:	movzx  edx,BYTE PTR [ecx+0xb]
   1d6bb:	add    edi,esi
   1d6bd:	add    esi,edx
   1d6bf:	movzx  edx,BYTE PTR [ecx+0xc]
   1d6c3:	add    edi,esi
   1d6c5:	add    esi,edx
   1d6c7:	movzx  edx,BYTE PTR [ecx+0xd]
   1d6cb:	add    edi,esi
   1d6cd:	add    esi,edx
   1d6cf:	movzx  edx,BYTE PTR [ecx+0xe]
   1d6d3:	add    edi,esi
   1d6d5:	add    esi,edx
   1d6d7:	movzx  edx,BYTE PTR [ecx+0xf]
   1d6db:	add    edi,esi
   1d6dd:	add    esi,edx
   1d6df:	sub    ebx,0x10
   1d6e2:	add    edi,esi
   1d6e4:	add    ecx,0x10
   1d6e7:	dec    eax
   1d6e8:	jne    0x1d662
   1d6ee:	jmp    0x1d71b
   1d6f0:	movzx  eax,BYTE PTR [ecx]
   1d6f3:	dec    ebx
   1d6f4:	add    esi,eax
   1d6f6:	inc    ecx
   1d6f7:	add    edi,esi
   1d6f9:	test   ebx,ebx
   1d6fb:	jne    0x1d6f0
   1d6fd:	mov    ecx,0xfff1
   1d702:	cmp    esi,ecx
   1d704:	jb     0x1d708
   1d706:	sub    esi,ecx
   1d708:	mov    eax,edi
   1d70a:	xor    edx,edx
   1d70c:	div    ecx
   1d70e:	mov    eax,edx
   1d710:	jmp    0x1d738
   1d712:	movzx  eax,BYTE PTR [ecx]
   1d715:	dec    ebx
   1d716:	add    esi,eax
   1d718:	inc    ecx
   1d719:	add    edi,esi
   1d71b:	test   ebx,ebx
   1d71d:	jne    0x1d712
   1d71f:	mov    eax,esi
   1d721:	mov    ecx,0xfff1
   1d726:	xor    edx,edx
   1d728:	mov    esi,ecx
   1d72a:	div    esi
   1d72c:	mov    eax,edi
   1d72e:	mov    esi,edx
   1d730:	xor    edx,edx
   1d732:	div    ecx
   1d734:	mov    edi,edx
   1d736:	mov    eax,edi
   1d738:	shl    eax,0x10
   1d73b:	or     eax,esi
   1d73d:	pop    edi
   1d73e:	pop    esi
   1d73f:	pop    ebx
   1d740:	pop    ebp
   1d741:	ret    0xc
   1d744:	int3   
   1d745:	int3   
   1d746:	int3   
   1d747:	int3   
   1d748:	int3   
   1d749:	int3   
   1d74a:	mov    edi,edi
   1d74c:	push   ebp
   1d74d:	mov    ebp,esp
   1d74f:	push   ecx
   1d750:	cmp    DWORD PTR [ebp+0x8],0x0
   1d754:	push   esi
   1d755:	not    eax
   1d757:	mov    ecx,0xff
   1d75c:	je     0x1d77a
   1d75e:	test   dl,0x3
   1d761:	je     0x1d77a
   1d763:	movzx  esi,BYTE PTR [edx]
   1d766:	xor    esi,eax
   1d768:	and    esi,ecx
   1d76a:	shr    eax,0x8
   1d76d:	xor    eax,DWORD PTR [esi*4+0x7bf90]
   1d774:	inc    edx
   1d775:	dec    DWORD PTR [ebp+0x8]
   1d778:	jne    0x1d75e
   1d77a:	cmp    DWORD PTR [ebp+0x8],0x20
   1d77e:	push   ebx
   1d77f:	push   edi
   1d780:	push   0x4
   1d782:	mov    esi,edx
   1d784:	pop    edi
   1d785:	jb     0x1d949
   1d78b:	mov    edx,DWORD PTR [ebp+0x8]
   1d78e:	shr    edx,0x5
   1d791:	mov    DWORD PTR [ebp-0x4],edx
   1d794:	xor    eax,DWORD PTR [esi]
   1d796:	add    esi,edi
   1d798:	mov    edx,eax
   1d79a:	shr    edx,0x10
   1d79d:	mov    ebx,eax
   1d79f:	shr    ebx,0x8
   1d7a2:	and    edx,ecx
   1d7a4:	mov    edx,DWORD PTR [edx*4+0x7c390]
   1d7ab:	and    ebx,ecx
   1d7ad:	xor    edx,DWORD PTR [ebx*4+0x7c790]
   1d7b4:	mov    ebx,eax
   1d7b6:	shr    ebx,0x18
   1d7b9:	xor    edx,DWORD PTR [ebx*4+0x7bf90]
   1d7c0:	and    eax,ecx
   1d7c2:	xor    edx,DWORD PTR [eax*4+0x7cb90]
   1d7c9:	xor    edx,DWORD PTR [esi]
   1d7cb:	add    esi,edi
   1d7cd:	mov    eax,edx
   1d7cf:	shr    eax,0x10
   1d7d2:	mov    ebx,edx
   1d7d4:	shr    ebx,0x8
   1d7d7:	and    eax,ecx
   1d7d9:	mov    eax,DWORD PTR [eax*4+0x7c390]
   1d7e0:	and    ebx,ecx
   1d7e2:	xor    eax,DWORD PTR [ebx*4+0x7c790]
   1d7e9:	mov    ebx,edx
   1d7eb:	shr    ebx,0x18
   1d7ee:	xor    eax,DWORD PTR [ebx*4+0x7bf90]
   1d7f5:	and    edx,ecx
   1d7f7:	xor    eax,DWORD PTR [edx*4+0x7cb90]
   1d7fe:	xor    eax,DWORD PTR [esi]
   1d800:	add    esi,edi
   1d802:	mov    edx,eax
   1d804:	shr    edx,0x10
   1d807:	mov    ebx,eax
   1d809:	and    edx,ecx
   1d80b:	mov    edx,DWORD PTR [edx*4+0x7c390]
   1d812:	shr    ebx,0x8
   1d815:	and    ebx,ecx
   1d817:	xor    edx,DWORD PTR [ebx*4+0x7c790]
   1d81e:	mov    ebx,eax
   1d820:	shr    ebx,0x18
   1d823:	xor    edx,DWORD PTR [ebx*4+0x7bf90]
   1d82a:	and    eax,ecx
   1d82c:	xor    edx,DWORD PTR [eax*4+0x7cb90]
   1d833:	xor    edx,DWORD PTR [esi]
   1d835:	add    esi,edi
   1d837:	mov    eax,edx
   1d839:	shr    eax,0x10
   1d83c:	mov    ebx,edx
   1d83e:	shr    ebx,0x8
   1d841:	and    eax,ecx
   1d843:	mov    eax,DWORD PTR [eax*4+0x7c390]
   1d84a:	and    ebx,ecx
   1d84c:	xor    eax,DWORD PTR [ebx*4+0x7c790]
   1d853:	mov    ebx,edx
   1d855:	shr    ebx,0x18
   1d858:	xor    eax,DWORD PTR [ebx*4+0x7bf90]
   1d85f:	and    edx,ecx
   1d861:	xor    eax,DWORD PTR [edx*4+0x7cb90]
   1d868:	xor    eax,DWORD PTR [esi]
   1d86a:	add    esi,edi
   1d86c:	mov    edx,eax
   1d86e:	shr    edx,0x10
   1d871:	mov    ebx,eax
   1d873:	and    edx,ecx
   1d875:	mov    edx,DWORD PTR [edx*4+0x7c390]
   1d87c:	shr    ebx,0x8
   1d87f:	and    ebx,ecx
   1d881:	xor    edx,DWORD PTR [ebx*4+0x7c790]
   1d888:	mov    ebx,eax
   1d88a:	shr    ebx,0x18
   1d88d:	xor    edx,DWORD PTR [ebx*4+0x7bf90]
   1d894:	and    eax,ecx
   1d896:	xor    edx,DWORD PTR [eax*4+0x7cb90]
   1d89d:	xor    edx,DWORD PTR [esi]
   1d89f:	add    esi,edi
   1d8a1:	mov    eax,edx
   1d8a3:	shr    eax,0x10
   1d8a6:	and    eax,ecx
   1d8a8:	mov    ebx,edx
   1d8aa:	mov    eax,DWORD PTR [eax*4+0x7c390]
   1d8b1:	shr    ebx,0x8
   1d8b4:	and    ebx,ecx
   1d8b6:	xor    eax,DWORD PTR [ebx*4+0x7c790]
   1d8bd:	mov    ebx,edx
   1d8bf:	shr    ebx,0x18
   1d8c2:	xor    eax,DWORD PTR [ebx*4+0x7bf90]
   1d8c9:	and    edx,ecx
   1d8cb:	xor    eax,DWORD PTR [edx*4+0x7cb90]
   1d8d2:	sub    DWORD PTR [ebp+0x8],0x20
   1d8d6:	xor    eax,DWORD PTR [esi]
   1d8d8:	add    esi,edi
   1d8da:	mov    edx,eax
   1d8dc:	mov    ebx,eax
   1d8de:	shr    edx,0x10
   1d8e1:	shr    ebx,0x8
   1d8e4:	and    edx,ecx
   1d8e6:	mov    edx,DWORD PTR [edx*4+0x7c390]
   1d8ed:	and    ebx,ecx
   1d8ef:	xor    edx,DWORD PTR [ebx*4+0x7c790]
   1d8f6:	mov    ebx,eax
   1d8f8:	shr    ebx,0x18
   1d8fb:	xor    edx,DWORD PTR [ebx*4+0x7bf90]
   1d902:	and    eax,ecx
   1d904:	xor    edx,DWORD PTR [eax*4+0x7cb90]
   1d90b:	xor    edx,DWORD PTR [esi]
   1d90d:	add    esi,edi
   1d90f:	mov    eax,edx
   1d911:	shr    eax,0x10
   1d914:	and    eax,ecx
   1d916:	mov    eax,DWORD PTR [eax*4+0x7c390]
   1d91d:	mov    ebx,edx
   1d91f:	shr    ebx,0x8
   1d922:	and    ebx,ecx
   1d924:	xor    eax,DWORD PTR [ebx*4+0x7c790]
   1d92b:	mov    ebx,edx
   1d92d:	shr    ebx,0x18
   1d930:	xor    eax,DWORD PTR [ebx*4+0x7bf90]
   1d937:	and    edx,ecx
   1d939:	xor    eax,DWORD PTR [edx*4+0x7cb90]
   1d940:	dec    DWORD PTR [ebp-0x4]
   1d943:	jne    0x1d794
   1d949:	cmp    DWORD PTR [ebp+0x8],edi
   1d94c:	jb     0x1d996
   1d94e:	mov    edx,DWORD PTR [ebp+0x8]
   1d951:	shr    edx,0x2
   1d954:	mov    DWORD PTR [ebp-0x4],edx
   1d957:	xor    eax,DWORD PTR [esi]
   1d959:	sub    DWORD PTR [ebp+0x8],edi
   1d95c:	mov    edx,eax
   1d95e:	shr    edx,0x10
   1d961:	and    edx,ecx
   1d963:	mov    edx,DWORD PTR [edx*4+0x7c390]
   1d96a:	mov    ebx,eax
   1d96c:	shr    ebx,0x8
   1d96f:	and    ebx,ecx
   1d971:	xor    edx,DWORD PTR [ebx*4+0x7c790]
   1d978:	mov    ebx,eax
   1d97a:	shr    ebx,0x18
   1d97d:	xor    edx,DWORD PTR [ebx*4+0x7bf90]
   1d984:	and    eax,ecx
   1d986:	xor    edx,DWORD PTR [eax*4+0x7cb90]
   1d98d:	add    esi,edi
   1d98f:	dec    DWORD PTR [ebp-0x4]
   1d992:	mov    eax,edx
   1d994:	jne    0x1d957
   1d996:	cmp    DWORD PTR [ebp+0x8],0x0
   1d99a:	pop    edi
   1d99b:	pop    ebx
   1d99c:	je     0x1d9b5
   1d99e:	movzx  edx,BYTE PTR [esi]
   1d9a1:	xor    edx,eax
   1d9a3:	and    edx,ecx
   1d9a5:	shr    eax,0x8
   1d9a8:	xor    eax,DWORD PTR [edx*4+0x7bf90]
   1d9af:	inc    esi
   1d9b0:	dec    DWORD PTR [ebp+0x8]
   1d9b3:	jne    0x1d99e
   1d9b5:	not    eax
   1d9b7:	pop    esi
   1d9b8:	leave  
   1d9b9:	ret    0x4
   1d9bc:	int3   
   1d9bd:	int3   
   1d9be:	int3   
   1d9bf:	int3   
   1d9c0:	int3   
   1d9c1:	int3   
   1d9c2:	mov    edi,edi
   1d9c4:	push   ebp
   1d9c5:	mov    ebp,esp
   1d9c7:	mov    edx,DWORD PTR [ebp+0xc]
   1d9ca:	test   edx,edx
   1d9cc:	jne    0x1d9d2
   1d9ce:	xor    eax,eax
   1d9d0:	jmp    0x1d9dd
   1d9d2:	push   DWORD PTR [ebp+0x10]
   1d9d5:	mov    eax,DWORD PTR [ebp+0x8]
   1d9d8:	call   0x1d74a
   1d9dd:	pop    ebp
   1d9de:	ret    0xc
   1d9e1:	int3   
   1d9e2:	int3   
   1d9e3:	int3   
   1d9e4:	int3   
   1d9e5:	int3   
   1d9e6:	mov    edi,edi
   1d9e8:	push   ebp
   1d9e9:	mov    ebp,esp
   1d9eb:	push   0x20
   1d9ed:	push   0x61737973
   1d9f2:	push   DWORD PTR [ebp+0x8]
   1d9f5:	push   0x1
   1d9f7:	call   DWORD PTR ds:0x1ee18
   1d9fd:	test   eax,eax
   1d9ff:	jne    0x1da0c
   1da01:	push   0xc000009a
   1da06:	call   DWORD PTR ds:0x1ee14
   1da0c:	pop    ebp
   1da0d:	ret    
   1da0e:	int3   
   1da0f:	int3   
   1da10:	int3   
   1da11:	int3   
   1da12:	int3   
   1da13:	int3   
   1da14:	mov    edi,edi
   1da16:	push   ebp
   1da17:	mov    ebp,esp
   1da19:	cmp    DWORD PTR [ebp+0x8],0x0
   1da1d:	je     0x1da2a
   1da1f:	push   0x0
   1da21:	push   DWORD PTR [ebp+0x8]
   1da24:	call   DWORD PTR ds:0x1ee1c
   1da2a:	pop    ebp
   1da2b:	ret    
   1da2c:	int3   
   1da2d:	int3   
   1da2e:	int3   
   1da2f:	int3   
   1da30:	int3   
   1da31:	cmp    ecx,DWORD PTR ds:0x7e528
   1da37:	jne    0x1da3c
   1da39:	ret    0x0
   1da3c:	jmp    0x1da46
   1da41:	int3   
   1da42:	int3   
   1da43:	int3   
   1da44:	int3   
   1da45:	int3   
   1da46:	mov    edi,edi
   1da48:	push   ebp
   1da49:	mov    ebp,esp
   1da4b:	push   ecx
   1da4c:	mov    DWORD PTR [ebp-0x4],ecx
   1da4f:	push   0x0
   1da51:	push   DWORD PTR ds:0x7e52c
   1da57:	push   DWORD PTR ds:0x7e528
   1da5d:	push   DWORD PTR [ebp-0x4]
   1da60:	push   0xf7
   1da65:	call   DWORD PTR ds:0x1ee5c
   1da6b:	int3   
   1da6c:	int3   
   1da6d:	int3   
   1da6e:	int3   
   1da6f:	int3   
   1da70:	int3   
   1da71:	int3   
   1da72:	jmp    DWORD PTR ds:0x1ee08
   1da78:	int3   
   1da79:	int3   
   1da7a:	int3   
   1da7b:	int3   
   1da7c:	int3   
   1da7d:	int3   
   1da7e:	jmp    DWORD PTR ds:0x1ee0c
   1da84:	int3   
   1da85:	int3   
   1da86:	int3   
   1da87:	int3   
   1da88:	int3   
   1da89:	int3   
   1da8a:	jmp    DWORD PTR ds:0x1ee10
   1da90:	int3   
   1da91:	int3   
   1da92:	int3   
   1da93:	int3   
   1da94:	int3   
   1da95:	int3   
   1da96:	jmp    DWORD PTR ds:0x1ee30
   1da9c:	int3   
   1da9d:	int3   
   1da9e:	int3   
   1da9f:	int3   
   1daa0:	int3   
   1daa1:	int3   
   1daa2:	jmp    DWORD PTR ds:0x1ee38
   1daa8:	int3   
   1daa9:	int3   
   1daaa:	int3   
   1daab:	int3   
   1daac:	int3   
   1daad:	int3   
   1daae:	jmp    DWORD PTR ds:0x1ee3c
   1dab4:	int3   
   1dab5:	int3   
   1dab6:	int3   
   1dab7:	int3   
   1dab8:	int3   
   1dab9:	int3   
   1daba:	jmp    DWORD PTR ds:0x1ee48
   1dac0:	int3   
   1dac1:	int3   
   1dac2:	int3   
   1dac3:	int3   
   1dac4:	int3   
   1dac5:	int3   
   1dac6:	jmp    DWORD PTR ds:0x1ee50
   1dacc:	int3   
   1dacd:	int3   
   1dace:	int3   
   1dacf:	int3   
   1dad0:	int3   
   1dad1:	int3   
   1dad2:	int3   
   1dad3:	int3   
   1dad4:	push   0x1db40
   1dad9:	push   DWORD PTR fs:0x0
   1dae0:	mov    eax,DWORD PTR [esp+0x10]
   1dae4:	mov    DWORD PTR [esp+0x10],ebp
   1dae8:	lea    ebp,[esp+0x10]
   1daec:	sub    esp,eax
   1daee:	push   ebx
   1daef:	push   esi
   1daf0:	push   edi
   1daf1:	mov    eax,ds:0x7e528
   1daf6:	xor    DWORD PTR [ebp-0x4],eax
   1daf9:	xor    eax,ebp
   1dafb:	push   eax
   1dafc:	mov    DWORD PTR [ebp-0x18],esp
   1daff:	push   DWORD PTR [ebp-0x8]
   1db02:	mov    eax,DWORD PTR [ebp-0x4]
   1db05:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1db0c:	mov    DWORD PTR [ebp-0x8],eax
   1db0f:	lea    eax,[ebp-0x10]
   1db12:	mov    fs:0x0,eax
   1db18:	ret    
   1db19:	mov    ecx,DWORD PTR [ebp-0x10]
   1db1c:	mov    DWORD PTR fs:0x0,ecx
   1db23:	pop    ecx
   1db24:	pop    edi
   1db25:	pop    edi
   1db26:	pop    esi
   1db27:	pop    ebx
   1db28:	mov    esp,ebp
   1db2a:	pop    ebp
   1db2b:	push   ecx
   1db2c:	ret    
   1db2d:	int3   
   1db2e:	int3   
   1db2f:	int3   
   1db30:	int3   
   1db31:	int3   
   1db32:	int3   
   1db33:	int3   
   1db34:	int3   
   1db35:	int3   
   1db36:	int3   
   1db37:	int3   
   1db38:	int3   
   1db39:	int3   
   1db3a:	int3   
   1db3b:	int3   
   1db3c:	int3   
   1db3d:	int3   
   1db3e:	int3   
   1db3f:	int3   
   1db40:	mov    edi,edi
   1db42:	push   ebp
   1db43:	mov    ebp,esp
   1db45:	sub    esp,0x14
   1db48:	push   ebx
   1db49:	mov    ebx,DWORD PTR [ebp+0xc]
   1db4c:	push   esi
   1db4d:	mov    esi,DWORD PTR [ebx+0x8]
   1db50:	xor    esi,DWORD PTR ds:0x7e528
   1db56:	push   edi
   1db57:	mov    eax,DWORD PTR [esi]
   1db59:	mov    BYTE PTR [ebp-0x1],0x0
   1db5d:	mov    DWORD PTR [ebp-0x8],0x1
   1db64:	lea    edi,[ebx+0x10]
   1db67:	cmp    eax,0xfffffffe
   1db6a:	je     0x1db79
   1db6c:	mov    ecx,DWORD PTR [esi+0x4]
   1db6f:	add    ecx,edi
   1db71:	xor    ecx,DWORD PTR [eax+edi*1]
   1db74:	call   0x1da31
   1db79:	mov    ecx,DWORD PTR [esi+0xc]
   1db7c:	mov    eax,DWORD PTR [esi+0x8]
   1db7f:	add    ecx,edi
   1db81:	xor    ecx,DWORD PTR [eax+edi*1]
   1db84:	call   0x1da31
   1db89:	mov    eax,DWORD PTR [ebp+0x8]
   1db8c:	test   BYTE PTR [eax+0x4],0x66
   1db90:	jne    0x1dc78
   1db96:	mov    ecx,DWORD PTR [ebp+0x10]
   1db99:	lea    edx,[ebp-0x14]
   1db9c:	mov    DWORD PTR [ebx-0x4],edx
   1db9f:	mov    ebx,DWORD PTR [ebx+0xc]
   1dba2:	mov    DWORD PTR [ebp-0x14],eax
   1dba5:	mov    DWORD PTR [ebp-0x10],ecx
   1dba8:	cmp    ebx,0xfffffffe
   1dbab:	je     0x1dc0c
   1dbad:	lea    ecx,[ecx+0x0]
   1dbb0:	lea    eax,[ebx+ebx*2]
   1dbb3:	mov    ecx,DWORD PTR [esi+eax*4+0x14]
   1dbb7:	lea    eax,[esi+eax*4+0x10]
   1dbbb:	mov    DWORD PTR [ebp-0xc],eax
   1dbbe:	mov    eax,DWORD PTR [eax]
   1dbc0:	mov    DWORD PTR [ebp+0x8],eax
   1dbc3:	test   ecx,ecx
   1dbc5:	je     0x1dbdb
   1dbc7:	mov    edx,edi
   1dbc9:	call   0x1dd81
   1dbce:	mov    BYTE PTR [ebp-0x1],0x1
   1dbd2:	test   eax,eax
   1dbd4:	jl     0x1dc16
   1dbd6:	jg     0x1dc1f
   1dbd8:	mov    eax,DWORD PTR [ebp+0x8]
   1dbdb:	mov    ebx,eax
   1dbdd:	cmp    eax,0xfffffffe
   1dbe0:	jne    0x1dbb0
   1dbe2:	cmp    BYTE PTR [ebp-0x1],0x0
   1dbe6:	je     0x1dc0c
   1dbe8:	mov    eax,DWORD PTR [esi]
   1dbea:	cmp    eax,0xfffffffe
   1dbed:	je     0x1dbfc
   1dbef:	mov    ecx,DWORD PTR [esi+0x4]
   1dbf2:	add    ecx,edi
   1dbf4:	xor    ecx,DWORD PTR [eax+edi*1]
   1dbf7:	call   0x1da31
   1dbfc:	mov    ecx,DWORD PTR [esi+0xc]
   1dbff:	mov    edx,DWORD PTR [esi+0x8]
   1dc02:	add    ecx,edi
   1dc04:	xor    ecx,DWORD PTR [edx+edi*1]
   1dc07:	call   0x1da31
   1dc0c:	mov    eax,DWORD PTR [ebp-0x8]
   1dc0f:	pop    edi
   1dc10:	pop    esi
   1dc11:	pop    ebx
   1dc12:	mov    esp,ebp
   1dc14:	pop    ebp
   1dc15:	ret    
   1dc16:	mov    DWORD PTR [ebp-0x8],0x0
   1dc1d:	jmp    0x1dbe8
   1dc1f:	mov    ecx,DWORD PTR [ebp+0xc]
   1dc22:	call   0x1ddaa
   1dc27:	mov    eax,DWORD PTR [ebp+0xc]
   1dc2a:	cmp    DWORD PTR [eax+0xc],ebx
   1dc2d:	je     0x1dc41
   1dc2f:	push   0x7e528
   1dc34:	push   edi
   1dc35:	mov    edx,ebx
   1dc37:	mov    ecx,eax
   1dc39:	call   0x1ddc4
   1dc3e:	mov    eax,DWORD PTR [ebp+0xc]
   1dc41:	mov    ecx,DWORD PTR [ebp+0x8]
   1dc44:	mov    DWORD PTR [eax+0xc],ecx
   1dc47:	mov    eax,DWORD PTR [esi]
   1dc49:	cmp    eax,0xfffffffe
   1dc4c:	je     0x1dc5b
   1dc4e:	mov    ecx,DWORD PTR [esi+0x4]
   1dc51:	add    ecx,edi
   1dc53:	xor    ecx,DWORD PTR [eax+edi*1]
   1dc56:	call   0x1da31
   1dc5b:	mov    ecx,DWORD PTR [esi+0xc]
   1dc5e:	mov    edx,DWORD PTR [esi+0x8]
   1dc61:	add    ecx,edi
   1dc63:	xor    ecx,DWORD PTR [edx+edi*1]
   1dc66:	call   0x1da31
   1dc6b:	mov    eax,DWORD PTR [ebp-0xc]
   1dc6e:	mov    ecx,DWORD PTR [eax+0x8]
   1dc71:	mov    edx,edi
   1dc73:	call   0x1dd98
   1dc78:	mov    edx,0xfffffffe
   1dc7d:	cmp    DWORD PTR [ebx+0xc],edx
   1dc80:	je     0x1dc0c
   1dc82:	push   0x7e528
   1dc87:	push   edi
   1dc88:	mov    ecx,ebx
   1dc8a:	call   0x1ddc4
   1dc8f:	jmp    0x1dbe8
   1dc94:	int3   
   1dc95:	int3   
   1dc96:	int3   
   1dc97:	int3   
   1dc98:	int3   
   1dc99:	int3   
   1dc9a:	int3   
   1dc9b:	int3   
   1dc9c:	push   ebx
   1dc9d:	push   esi
   1dc9e:	push   edi
   1dc9f:	mov    edx,DWORD PTR [esp+0x10]
   1dca3:	mov    eax,DWORD PTR [esp+0x14]
   1dca7:	mov    ecx,DWORD PTR [esp+0x18]
   1dcab:	push   ebp
   1dcac:	push   edx
   1dcad:	push   eax
   1dcae:	push   ecx
   1dcaf:	push   ecx
   1dcb0:	push   0x1dd1f
   1dcb5:	push   DWORD PTR fs:0x0
   1dcbc:	mov    eax,ds:0x7e528
   1dcc1:	xor    eax,esp
   1dcc3:	mov    DWORD PTR [esp+0x8],eax
   1dcc7:	mov    DWORD PTR fs:0x0,esp
   1dcce:	mov    eax,DWORD PTR [esp+0x30]
   1dcd2:	mov    ebx,DWORD PTR [eax+0x8]
   1dcd5:	mov    ecx,DWORD PTR [esp+0x2c]
   1dcd9:	xor    ebx,DWORD PTR [ecx]
   1dcdb:	mov    esi,DWORD PTR [eax+0xc]
   1dcde:	cmp    esi,0xfffffffe
   1dce1:	je     0x1dd11
   1dce3:	mov    edx,DWORD PTR [esp+0x34]
   1dce7:	cmp    edx,0xfffffffe
   1dcea:	je     0x1dcf0
   1dcec:	cmp    esi,edx
   1dcee:	jbe    0x1dd11
   1dcf0:	lea    esi,[esi+esi*2]
   1dcf3:	lea    ebx,[ebx+esi*4+0x10]
   1dcf7:	mov    ecx,DWORD PTR [ebx]
   1dcf9:	mov    DWORD PTR [eax+0xc],ecx
   1dcfc:	cmp    DWORD PTR [ebx+0x4],0x0
   1dd00:	jne    0x1dcce
   1dd02:	mov    ecx,0x1
   1dd07:	mov    eax,DWORD PTR [ebx+0x8]
   1dd0a:	call   0x1de3c
   1dd0f:	jmp    0x1dcce
   1dd11:	pop    DWORD PTR fs:0x0
   1dd18:	add    esp,0x18
   1dd1b:	pop    edi
   1dd1c:	pop    esi
   1dd1d:	pop    ebx
   1dd1e:	ret    
   1dd1f:	mov    ecx,DWORD PTR [esp+0x4]
   1dd23:	test   DWORD PTR [ecx+0x4],0x6
   1dd2a:	mov    eax,0x1
   1dd2f:	je     0x1dd64
   1dd31:	mov    eax,DWORD PTR [esp+0x8]
   1dd35:	mov    ecx,DWORD PTR [eax+0x8]
   1dd38:	xor    ecx,eax
   1dd3a:	call   0x1da31
   1dd3f:	push   ebp
   1dd40:	mov    ebp,DWORD PTR [eax+0x18]
   1dd43:	push   DWORD PTR [eax+0xc]
   1dd46:	push   DWORD PTR [eax+0x10]
   1dd49:	push   DWORD PTR [eax+0x14]
   1dd4c:	call   0x1dc9c
   1dd51:	add    esp,0xc
   1dd54:	pop    ebp
   1dd55:	mov    eax,DWORD PTR [esp+0x8]
   1dd59:	mov    edx,DWORD PTR [esp+0x10]
   1dd5d:	mov    DWORD PTR [edx],eax
   1dd5f:	mov    eax,0x3
   1dd64:	ret    
   1dd65:	push   ebp
   1dd66:	mov    ecx,DWORD PTR [esp+0x8]
   1dd6a:	mov    ebp,DWORD PTR [ecx]
   1dd6c:	push   DWORD PTR [ecx+0x1c]
   1dd6f:	push   DWORD PTR [ecx+0x18]
   1dd72:	push   DWORD PTR [ecx+0x28]
   1dd75:	call   0x1dc9c
   1dd7a:	add    esp,0xc
   1dd7d:	pop    ebp
   1dd7e:	ret    0x4
   1dd81:	push   ebp
   1dd82:	push   esi
   1dd83:	push   edi
   1dd84:	push   ebx
   1dd85:	mov    ebp,edx
   1dd87:	xor    eax,eax
   1dd89:	xor    ebx,ebx
   1dd8b:	xor    edx,edx
   1dd8d:	xor    esi,esi
   1dd8f:	xor    edi,edi
   1dd91:	call   ecx
   1dd93:	pop    ebx
   1dd94:	pop    edi
   1dd95:	pop    esi
   1dd96:	pop    ebp
   1dd97:	ret    
   1dd98:	mov    ebp,edx
   1dd9a:	mov    esi,ecx
   1dd9c:	mov    eax,ecx
   1dd9e:	xor    eax,eax
   1dda0:	xor    ebx,ebx
   1dda2:	xor    ecx,ecx
   1dda4:	xor    edx,edx
   1dda6:	xor    edi,edi
   1dda8:	jmp    esi
   1ddaa:	push   ebp
   1ddab:	mov    ebp,esp
   1ddad:	push   ebx
   1ddae:	push   esi
   1ddaf:	push   edi
   1ddb0:	push   0x0
   1ddb2:	push   0x0
   1ddb4:	push   0x1ddbf
   1ddb9:	push   ecx
   1ddba:	call   0x1de44
   1ddbf:	pop    edi
   1ddc0:	pop    esi
   1ddc1:	pop    ebx
   1ddc2:	pop    ebp
   1ddc3:	ret    
   1ddc4:	push   ebp
   1ddc5:	mov    ebp,DWORD PTR [esp+0x8]
   1ddc9:	push   edx
   1ddca:	push   ecx
   1ddcb:	push   DWORD PTR [esp+0x14]
   1ddcf:	call   0x1dc9c
   1ddd4:	add    esp,0xc
   1ddd7:	pop    ebp
   1ddd8:	ret    0x8
   1dddb:	int3   
   1dddc:	int3   
   1dddd:	int3   
   1ddde:	int3   
   1dddf:	int3   
   1dde0:	push   0x1db40
   1dde5:	push   DWORD PTR fs:0x0
   1ddec:	mov    eax,DWORD PTR [esp+0x10]
   1ddf0:	mov    DWORD PTR [esp+0x10],ebp
   1ddf4:	lea    ebp,[esp+0x10]
   1ddf8:	sub    esp,eax
   1ddfa:	push   ebx
   1ddfb:	push   esi
   1ddfc:	push   edi
   1ddfd:	mov    eax,ds:0x7e528
   1de02:	xor    DWORD PTR [ebp-0x4],eax
   1de05:	xor    eax,ebp
   1de07:	mov    DWORD PTR [ebp-0x1c],eax
   1de0a:	push   eax
   1de0b:	mov    DWORD PTR [ebp-0x18],esp
   1de0e:	push   DWORD PTR [ebp-0x8]
   1de11:	mov    eax,DWORD PTR [ebp-0x4]
   1de14:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1de1b:	mov    DWORD PTR [ebp-0x8],eax
   1de1e:	lea    eax,[ebp-0x10]
   1de21:	mov    fs:0x0,eax
   1de27:	ret    
   1de28:	mov    ecx,DWORD PTR [ebp-0x1c]
   1de2b:	xor    ecx,ebp
   1de2d:	call   0x1da31
   1de32:	jmp    0x1db19
   1de37:	int3   
   1de38:	int3   
   1de39:	int3   
   1de3a:	int3   
   1de3b:	int3   
   1de3c:	call   eax
   1de3e:	ret    
   1de3f:	int3   
   1de40:	int3   
   1de41:	int3   
   1de42:	int3   
   1de43:	int3   
   1de44:	jmp    DWORD PTR ds:0x1ee68
   1de4a:	pop    esp
   1de4b:	add    BYTE PTR [eax],al
   1de4d:	add    BYTE PTR [eax],al
   1de4f:	add    BYTE PTR [ebx+0x0],ch
   1de52:	bound  eax,QWORD PTR [eax]
   1de54:	add    BYTE PTR fs:[ecx+0x0],dh
   1de58:	add    BYTE PTR [eax],al
   1de5a:	add    BYTE PTR fs:[ebx],dh
   1de5d:	add    BYTE PTR [eax+eax*1+0x73],ah
   1de61:	add    BYTE PTR [eax],al
   1de63:	add    BYTE PTR [esi+0x0],ch
   1de66:	je     0x1de68
   1de68:	outs   dx,BYTE PTR ds:[esi]
   1de69:	add    BYTE PTR [eax],al
   1de6b:	add    BYTE PTR [ebx+0x0],dh
   1de6e:	jns    0x1de70
   1de70:	jae    0x1de72
   1de72:	popa   
   1de73:	add    BYTE PTR [eax],al
   1de75:	add    BYTE PTR [edi+0x0],dh
   1de78:	imul   eax,DWORD PTR [eax],0x65006e
   1de7e:	add    BYTE PTR [eax],al
   1de80:	jo     0x1de82
   1de82:	arpl   WORD PTR [eax],ax
   1de84:	imul   eax,DWORD PTR [eax],0x6d0000
   1de8a:	jae    0x1de8c
   1de8c:	jb     0x1de8e
   1de8e:	add    BYTE PTR [eax],al
   1de90:	je     0x1de92
   1de92:	ins    DWORD PTR es:[edi],dx
   1de93:	add    BYTE PTR [eax+0x0],dh
   1de96:	add    BYTE PTR [eax],al
   1de98:	jne    0x1de9a
   1de9a:	jae    0x1de9c
   1de9c:	bound  eax,QWORD PTR [eax]
   1de9e:	add    BYTE PTR [eax],al
   1dea0:	outs   dx,DWORD PTR ds:[esi]
   1dea1:	add    BYTE PTR [eax+eax*1+0x65],ch
   1dea5:	add    BYTE PTR [eax],al
   1dea7:	add    BYTE PTR [ecx+0x0],ah
   1deaa:	imul   eax,DWORD PTR [eax],0x70
   1deb0:	push   0x0
   1deb2:	popa   
   1deb3:	add    BYTE PTR [ecx+0x0],bh
   1deb6:	add    BYTE PTR [eax],al
   1deb8:	jbe    0x1deba
   1deba:	add    BYTE PTR gs:[edx+0x0],dh
   1debe:	add    BYTE PTR [eax],al
   1dec0:	jae    0x1dec2
   1dec2:	popa   
   1dec3:	add    BYTE PTR [ecx+0x0],ch
   1dec6:	add    BYTE PTR [eax],al
   1dec8:	ins    BYTE PTR es:[edi],dx
   1dec9:	add    BYTE PTR [ecx+0x0],ah
   1decc:	arpl   WORD PTR [eax],ax
   1dece:	add    BYTE PTR [eax],al
   1ded0:	push   0x0
   1ded2:	jo     0x1ded4
   1ded4:	add    BYTE PTR [bx+si],al
   1ded7:	add    BYTE PTR [eax+0x0],ch
   1deda:	imul   eax,DWORD PTR [eax],0x64
   1dee0:	jo     0x1dee2
   1dee2:	outs   dx,BYTE PTR ds:[esi]
   1dee3:	add    BYTE PTR [edi+0x0],ah
   1dee6:	add    BYTE PTR [eax],al
   1dee8:	outs   dx,BYTE PTR ds:[esi]
   1dee9:	add    BYTE PTR [eax+eax*1+0x71],dh
   1deed:	add    BYTE PTR [eax],al
   1deef:	add    BYTE PTR [eax],al
   1def1:	int3   
   1def2:	dec    ebx
   1def3:	add    BYTE PTR [ebp+0x0],ah
   1def6:	push   ebx
   1def7:	add    BYTE PTR [ebp+0x0],ah
   1defa:	jb     0x1defc
   1defc:	jbe    0x1defe
   1defe:	imul   eax,DWORD PTR [eax],0x650063
   1df04:	inc    esp
   1df05:	add    BYTE PTR [ebp+0x0],ah
   1df08:	jae    0x1df0a
   1df0a:	arpl   WORD PTR [eax],ax
   1df0c:	jb     0x1df0e
   1df0e:	imul   eax,DWORD PTR [eax],0x740070
   1df14:	outs   dx,DWORD PTR ds:[esi]
   1df15:	add    BYTE PTR [edx+0x0],dh
   1df18:	push   esp
   1df19:	add    BYTE PTR [ecx+0x0],ah
   1df1c:	bound  eax,QWORD PTR [eax]
   1df1e:	ins    BYTE PTR es:[edi],dx
   1df1f:	add    BYTE PTR [ebp+0x0],ah
   1df22:	add    BYTE PTR [eax],al
   1df24:	pop    edx
   1df25:	add    BYTE PTR [edi+0x0],dh
   1df28:	dec    edi
   1df29:	add    BYTE PTR [eax+0x0],dh
   1df2c:	add    BYTE PTR gs:[esi+0x0],ch
   1df30:	push   eax
   1df31:	add    BYTE PTR [edx+0x0],dh
   1df34:	outs   dx,DWORD PTR ds:[esi]
   1df35:	add    BYTE PTR [ebx+0x0],ah
   1df38:	add    BYTE PTR gs:[ebx+0x0],dh
   1df3c:	jae    0x1df3e
   1df3e:	add    BYTE PTR [eax],al
   1df40:	push   eax
   1df41:	add    BYTE PTR [ebx+0x0],dh
   1df44:	push   ebx
   1df45:	add    BYTE PTR [ebp+0x0],ah
   1df48:	je     0x1df4a
   1df4a:	dec    esp
   1df4b:	add    BYTE PTR [edi+0x0],ch
   1df4e:	popa   
   1df4f:	add    BYTE PTR [eax+eax*1+0x49],ah
   1df53:	add    BYTE PTR [ebp+0x0],ch
   1df56:	popa   
   1df57:	add    BYTE PTR [edi+0x0],ah
   1df5a:	add    BYTE PTR gs:[esi+0x0],cl
   1df5e:	outs   dx,DWORD PTR ds:[esi]
   1df5f:	add    BYTE PTR [eax+eax*1+0x69],dh
   1df63:	add    BYTE PTR [esi+0x0],ah
   1df66:	jns    0x1df68
   1df68:	push   edx
   1df69:	add    BYTE PTR [edi+0x0],ch
   1df6c:	jne    0x1df6e
   1df6e:	je     0x1df70
   1df70:	imul   eax,DWORD PTR [eax],0x65006e
   1df76:	add    BYTE PTR [eax],al
   1df78:	pop    edx
   1df79:	add    BYTE PTR [edi+0x0],dh
   1df7c:	inc    esp
   1df7d:	add    BYTE PTR [ebp+0x0],dh
   1df80:	jo     0x1df82
   1df82:	ins    BYTE PTR es:[edi],dx
   1df83:	add    BYTE PTR [ecx+0x0],ch
   1df86:	arpl   WORD PTR [eax],ax
   1df88:	popa   
   1df89:	add    BYTE PTR [eax+eax*1+0x65],dh
   1df8d:	add    BYTE PTR [eax+eax*1+0x6f],dl
   1df91:	add    BYTE PTR [ebx+0x0],ch
   1df94:	add    BYTE PTR gs:[esi+0x0],ch
   1df98:	add    BYTE PTR [eax],al
   1df9a:	push   eax
   1df9b:	add    BYTE PTR [ebx+0x0],dh
   1df9e:	push   ebx
   1df9f:	add    BYTE PTR [ebp+0x0],ah
   1dfa2:	je     0x1dfa4
   1dfa4:	inc    ebx
   1dfa5:	add    BYTE PTR [edx+0x0],dh
   1dfa8:	add    BYTE PTR gs:[ecx+0x0],ah
   1dfac:	je     0x1dfae
   1dfae:	add    BYTE PTR gs:[eax+0x0],dl
   1dfb2:	jb     0x1dfb4
   1dfb4:	outs   dx,DWORD PTR ds:[esi]
   1dfb5:	add    BYTE PTR [ebx+0x0],ah
   1dfb8:	add    BYTE PTR gs:[ebx+0x0],dh
   1dfbc:	jae    0x1dfbe
   1dfbe:	dec    esi
   1dfbf:	add    BYTE PTR [edi+0x0],ch
   1dfc2:	je     0x1dfc4
   1dfc4:	imul   eax,DWORD PTR [eax],0x790066
   1dfca:	push   edx
   1dfcb:	add    BYTE PTR [edi+0x0],ch
   1dfce:	jne    0x1dfd0
   1dfd0:	je     0x1dfd2
   1dfd2:	imul   eax,DWORD PTR [eax],0x65006e
   1dfd8:	add    BYTE PTR [eax],al
   1dfda:	pop    edx
   1dfdb:	add    BYTE PTR [edi+0x0],dh
   1dfde:	dec    edi
   1dfdf:	add    BYTE PTR [eax+0x0],dh
   1dfe2:	add    BYTE PTR gs:[esi+0x0],ch
   1dfe6:	inc    esi
   1dfe7:	add    BYTE PTR [ecx+0x0],ch
   1dfea:	ins    BYTE PTR es:[edi],dx
   1dfeb:	add    BYTE PTR [ebp+0x0],ah
   1dfee:	add    BYTE PTR [eax],al
   1dff0:	pop    edx
   1dff1:	add    BYTE PTR [edi+0x0],dh
   1dff4:	push   ecx
   1dff5:	add    BYTE PTR [ebp+0x0],dh
   1dff8:	add    BYTE PTR gs:[edx+0x0],dh
   1dffc:	jns    0x1dffe
   1dffe:	dec    ecx
   1dfff:	add    BYTE PTR [esi+0x0],ch
   1e002:	data16 add BYTE PTR [edi+0x0],ch
   1e006:	jb     0x1e008
   1e008:	ins    DWORD PTR es:[edi],dx
   1e009:	add    BYTE PTR [ecx+0x0],ah
   1e00c:	je     0x1e00e
   1e00e:	imul   eax,DWORD PTR [eax],0x6e006f
   1e014:	push   eax
   1e015:	add    BYTE PTR [edx+0x0],dh
   1e018:	outs   dx,DWORD PTR ds:[esi]
   1e019:	add    BYTE PTR [ebx+0x0],ah
   1e01c:	add    BYTE PTR gs:[ebx+0x0],dh
   1e020:	jae    0x1e022
   1e022:	add    BYTE PTR [eax],al
   1e024:	pop    edx
   1e025:	add    BYTE PTR [edi+0x0],dh
   1e028:	push   ecx
   1e029:	add    BYTE PTR [ebp+0x0],dh
   1e02c:	add    BYTE PTR gs:[edx+0x0],dh
   1e030:	jns    0x1e032
   1e032:	push   ebx
   1e033:	add    BYTE PTR [ecx+0x0],bh
   1e036:	jae    0x1e038
   1e038:	je     0x1e03a
   1e03a:	add    BYTE PTR gs:[ebp+0x0],ch
   1e03e:	dec    ecx
   1e03f:	add    BYTE PTR [esi+0x0],ch
   1e042:	data16 add BYTE PTR [edi+0x0],ch
   1e046:	jb     0x1e048
   1e048:	ins    DWORD PTR es:[edi],dx
   1e049:	add    BYTE PTR [ecx+0x0],ah
   1e04c:	je     0x1e04e
   1e04e:	imul   eax,DWORD PTR [eax],0x6e006f
   1e054:	add    BYTE PTR [eax],al
   1e056:	pop    edx
   1e057:	add    BYTE PTR [edi+0x0],dh
   1e05a:	dec    edi
   1e05b:	add    BYTE PTR [eax+0x0],dh
   1e05e:	add    BYTE PTR gs:[esi+0x0],ch
   1e062:	dec    ebx
   1e063:	add    BYTE PTR [ebp+0x0],ah
   1e066:	jns    0x1e068
   1e068:	add    BYTE PTR [eax],al
   1e06a:	pop    edx
   1e06b:	add    BYTE PTR [edi+0x0],dh
   1e06e:	inc    esp
   1e06f:	add    BYTE PTR [ebp+0x0],ah
   1e072:	ins    BYTE PTR es:[edi],dx
   1e073:	add    BYTE PTR [ebp+0x0],ah
   1e076:	je     0x1e078
   1e078:	add    BYTE PTR gs:[ebx+0x0],cl
   1e07c:	add    BYTE PTR gs:[ecx+0x0],bh
   1e080:	add    BYTE PTR [eax],al
   1e082:	pop    edx
   1e083:	add    BYTE PTR [edi+0x0],dh
   1e086:	push   ebx
   1e087:	add    BYTE PTR [ebp+0x0],ah
   1e08a:	je     0x1e08c
   1e08c:	push   esi
   1e08d:	add    BYTE PTR [ecx+0x0],ah
   1e090:	ins    BYTE PTR es:[edi],dx
   1e091:	add    BYTE PTR [ebp+0x0],dh
   1e094:	add    BYTE PTR gs:[ebx+0x0],cl
   1e098:	add    BYTE PTR gs:[ecx+0x0],bh
   1e09c:	add    BYTE PTR [eax],al
   1e09e:	pop    edx
   1e09f:	add    BYTE PTR [edi+0x0],dh
   1e0a2:	push   ecx
   1e0a3:	add    BYTE PTR [ebp+0x0],dh
   1e0a6:	add    BYTE PTR gs:[edx+0x0],dh
   1e0aa:	jns    0x1e0ac
   1e0ac:	push   esi
   1e0ad:	add    BYTE PTR [edi+0x0],ch
   1e0b0:	ins    BYTE PTR es:[edi],dx
   1e0b1:	add    BYTE PTR [ebp+0x0],dh
   1e0b4:	ins    DWORD PTR es:[edi],dx
   1e0b5:	add    BYTE PTR [ebp+0x0],ah
   1e0b8:	dec    ecx
   1e0b9:	add    BYTE PTR [esi+0x0],ch
   1e0bc:	data16 add BYTE PTR [edi+0x0],ch
   1e0c0:	jb     0x1e0c2
   1e0c2:	ins    DWORD PTR es:[edi],dx
   1e0c3:	add    BYTE PTR [ecx+0x0],ah
   1e0c6:	je     0x1e0c8
   1e0c8:	imul   eax,DWORD PTR [eax],0x6e006f
   1e0ce:	inc    esi
   1e0cf:	add    BYTE PTR [ecx+0x0],ch
   1e0d2:	ins    BYTE PTR es:[edi],dx
   1e0d3:	add    BYTE PTR [ebp+0x0],ah
   1e0d6:	add    BYTE PTR [eax],al
   1e0d8:	pop    edx
   1e0d9:	add    BYTE PTR [edi+0x0],dh
   1e0dc:	inc    ebx
   1e0dd:	add    BYTE PTR [edx+0x0],dh
   1e0e0:	add    BYTE PTR gs:[ecx+0x0],ah
   1e0e4:	je     0x1e0e6
   1e0e6:	add    BYTE PTR gs:[esi+0x0],al
   1e0ea:	imul   eax,DWORD PTR [eax],0x65006c
   1e0f0:	add    BYTE PTR [eax],al
   1e0f2:	push   edx
   1e0f3:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1e0f7:	add    BYTE PTR [ecx+0x0],cl
   1e0fa:	ins    DWORD PTR es:[edi],dx
   1e0fb:	add    BYTE PTR [ecx+0x0],ah
   1e0fe:	add    BYTE PTR [di+0x0],ah
   1e102:	dec    esi
   1e103:	add    BYTE PTR [eax+eax*1+0x48],dh
   1e107:	add    BYTE PTR [ebp+0x0],ah
   1e10a:	popa   
   1e10b:	add    BYTE PTR [eax+eax*1+0x65],ah
   1e10f:	add    BYTE PTR [edx+0x0],dh
   1e112:	add    BYTE PTR [eax],al
   1e114:	push   edx
   1e115:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1e119:	add    BYTE PTR [ecx+0x0],cl
   1e11c:	ins    DWORD PTR es:[edi],dx
   1e11d:	add    BYTE PTR [ecx+0x0],ah
   1e120:	add    BYTE PTR [di+0x0],ah
   1e124:	inc    esp
   1e125:	add    BYTE PTR [ecx+0x0],ch
   1e128:	jb     0x1e12a
   1e12a:	add    BYTE PTR gs:[ebx+0x0],ah
   1e12e:	je     0x1e130
   1e130:	outs   dx,DWORD PTR ds:[esi]
   1e131:	add    BYTE PTR [edx+0x0],dh
   1e134:	jns    0x1e136
   1e136:	inc    ebp
   1e137:	add    BYTE PTR [esi+0x0],ch
   1e13a:	je     0x1e13c
   1e13c:	jb     0x1e13e
   1e13e:	jns    0x1e140
   1e140:	push   esp
   1e141:	add    BYTE PTR [edi+0x0],ch
   1e144:	inc    esp
   1e145:	add    BYTE PTR [ecx+0x0],ah
   1e148:	je     0x1e14a
   1e14a:	popa   
   1e14b:	add    BYTE PTR [eax],al
   1e14d:	add    BYTE PTR [edx+0x0],bl
   1e150:	ja     0x1e152
   1e152:	dec    edi
   1e153:	add    BYTE PTR [eax+0x0],dh
   1e156:	add    BYTE PTR gs:[esi+0x0],ch
   1e15a:	push   eax
   1e15b:	add    BYTE PTR [edx+0x0],dh
   1e15e:	outs   dx,DWORD PTR ds:[esi]
   1e15f:	add    BYTE PTR [ebx+0x0],ah
   1e162:	add    BYTE PTR gs:[ebx+0x0],dh
   1e166:	jae    0x1e168
   1e168:	push   esp
   1e169:	add    BYTE PTR [edi+0x0],ch
   1e16c:	imul   eax,DWORD PTR [eax],0x65
   1e16f:	add    BYTE PTR [esi+0x0],ch
   1e172:	add    BYTE PTR [eax],al
   1e174:	pop    edx
   1e175:	add    BYTE PTR [edi+0x0],dh
   1e178:	push   ebx
   1e179:	add    BYTE PTR [ebp+0x0],ah
   1e17c:	je     0x1e17e
   1e17e:	dec    ecx
   1e17f:	add    BYTE PTR [esi+0x0],ch
   1e182:	data16 add BYTE PTR [edi+0x0],ch
   1e186:	jb     0x1e188
   1e188:	ins    DWORD PTR es:[edi],dx
   1e189:	add    BYTE PTR [ecx+0x0],ah
   1e18c:	je     0x1e18e
   1e18e:	imul   eax,DWORD PTR [eax],0x6e006f
   1e194:	push   eax
   1e195:	add    BYTE PTR [edx+0x0],dh
   1e198:	outs   dx,DWORD PTR ds:[esi]
   1e199:	add    BYTE PTR [ebx+0x0],ah
   1e19c:	add    BYTE PTR gs:[ebx+0x0],dh
   1e1a0:	jae    0x1e1a2
   1e1a2:	add    BYTE PTR [eax],al
   1e1a4:	pop    edx
   1e1a5:	add    BYTE PTR [edi+0x0],dh
   1e1a8:	push   ecx
   1e1a9:	add    BYTE PTR [ebp+0x0],dh
   1e1ac:	add    BYTE PTR gs:[edx+0x0],dh
   1e1b0:	jns    0x1e1b2
   1e1b2:	dec    ecx
   1e1b3:	add    BYTE PTR [esi+0x0],ch
   1e1b6:	data16 add BYTE PTR [edi+0x0],ch
   1e1ba:	jb     0x1e1bc
   1e1bc:	ins    DWORD PTR es:[edi],dx
   1e1bd:	add    BYTE PTR [ecx+0x0],ah
   1e1c0:	je     0x1e1c2
   1e1c2:	imul   eax,DWORD PTR [eax],0x6e006f
   1e1c8:	push   esp
   1e1c9:	add    BYTE PTR [eax+0x0],ch
   1e1cc:	jb     0x1e1ce
   1e1ce:	add    BYTE PTR gs:[ecx+0x0],ah
   1e1d2:	add    BYTE PTR fs:[eax],al
   1e1d5:	add    BYTE PTR [edx+0x0],dl
   1e1d8:	je     0x1e1da
   1e1da:	ins    BYTE PTR es:[edi],dx
   1e1db:	add    BYTE PTR [ecx+0x0],al
   1e1de:	jae    0x1e1e0
   1e1e0:	jae    0x1e1e2
   1e1e2:	add    BYTE PTR gs:[edx+0x0],dh
   1e1e6:	je     0x1e1e8
   1e1e8:	add    BYTE PTR [eax],al
   1e1ea:	pop    edx
   1e1eb:	add    BYTE PTR [edi+0x0],dh
   1e1ee:	inc    ebp
   1e1ef:	add    BYTE PTR [esi+0x0],ch
   1e1f2:	jne    0x1e1f4
   1e1f4:	ins    DWORD PTR es:[edi],dx
   1e1f5:	add    BYTE PTR [ebp+0x0],ah
   1e1f8:	jb     0x1e1fa
   1e1fa:	popa   
   1e1fb:	add    BYTE PTR [eax+eax*1+0x65],dh
   1e1ff:	add    BYTE PTR [ebx+0x0],cl
   1e202:	add    BYTE PTR gs:[ecx+0x0],bh
   1e206:	add    BYTE PTR [eax],al
   1e208:	pop    edx
   1e209:	add    BYTE PTR [edi+0x0],dh
   1e20c:	dec    esp
   1e20d:	add    BYTE PTR [edi+0x0],ch
   1e210:	popa   
   1e211:	add    BYTE PTR [eax+eax*1+0x44],ah
   1e215:	add    BYTE PTR [edx+0x0],dh
   1e218:	imul   eax,DWORD PTR [eax],0x650076
   1e21e:	jb     0x1e220
   1e220:	add    BYTE PTR [eax],al
   1e222:	pop    edx
   1e223:	add    BYTE PTR [edi+0x0],dh
   1e226:	inc    ebx
   1e227:	add    BYTE PTR [edx+0x0],dh
   1e22a:	add    BYTE PTR gs:[ecx+0x0],ah
   1e22e:	je     0x1e230
   1e230:	add    BYTE PTR gs:[ebx+0x0],cl
   1e234:	add    BYTE PTR gs:[ecx+0x0],bh
   1e238:	add    BYTE PTR [eax],al
   1e23a:	dec    ecx
   1e23b:	add    BYTE PTR [edi+0x0],ch
   1e23e:	inc    esp
   1e23f:	add    BYTE PTR [ebp+0x0],ah
   1e242:	ins    BYTE PTR es:[edi],dx
   1e243:	add    BYTE PTR [ebp+0x0],ah
   1e246:	je     0x1e248
   1e248:	add    BYTE PTR gs:[eax+eax*1+0x65],al
   1e24d:	add    BYTE PTR [esi+0x0],dh
   1e250:	imul   eax,DWORD PTR [eax],0x650063
   1e256:	add    BYTE PTR [eax],al
   1e258:	dec    ebx
   1e259:	add    BYTE PTR [ebp+0x0],ah
   1e25c:	inc    esp
   1e25d:	add    BYTE PTR [ebp+0x0],ah
   1e260:	je     0x1e262
   1e262:	popa   
   1e263:	add    BYTE PTR [ebx+0x0],ah
   1e266:	push   0x72005000
   1e26b:	add    BYTE PTR [edi+0x0],ch
   1e26e:	arpl   WORD PTR [eax],ax
   1e270:	add    BYTE PTR gs:[ebx+0x0],dh
   1e274:	jae    0x1e276
   1e276:	add    BYTE PTR [eax],al
   1e278:	dec    ebx
   1e279:	add    BYTE PTR [ebp+0x0],ah
   1e27c:	inc    ecx
   1e27d:	add    BYTE PTR [eax+eax*1+0x74],dh
   1e281:	add    BYTE PTR [ecx+0x0],ah
   1e284:	arpl   WORD PTR [eax],ax
   1e286:	push   0x72005000
   1e28b:	add    BYTE PTR [edi+0x0],ch
   1e28e:	arpl   WORD PTR [eax],ax
   1e290:	add    BYTE PTR gs:[ebx+0x0],dh
   1e294:	jae    0x1e296
   1e296:	add    BYTE PTR [eax],al
   1e298:	pop    edx
   1e299:	add    BYTE PTR [edi+0x0],dh
   1e29c:	push   ecx
   1e29d:	add    BYTE PTR [ebp+0x0],dh
   1e2a0:	add    BYTE PTR gs:[edx+0x0],dh
   1e2a4:	jns    0x1e2a6
   1e2a6:	push   esi
   1e2a7:	add    BYTE PTR [ecx+0x0],ah
   1e2aa:	ins    BYTE PTR es:[edi],dx
   1e2ab:	add    BYTE PTR [ebp+0x0],dh
   1e2ae:	add    BYTE PTR gs:[ebx+0x0],cl
   1e2b2:	add    BYTE PTR gs:[ecx+0x0],bh
   1e2b6:	add    BYTE PTR [eax],al
   1e2b8:	pop    edx
   1e2b9:	add    BYTE PTR [edi+0x0],dh
   1e2bc:	push   edx
   1e2bd:	add    BYTE PTR [ebp+0x0],ah
   1e2c0:	popa   
   1e2c1:	add    BYTE PTR [eax+eax*1+0x46],ah
   1e2c5:	add    BYTE PTR [ecx+0x0],ch
   1e2c8:	ins    BYTE PTR es:[edi],dx
   1e2c9:	add    BYTE PTR [ebp+0x0],ah
   1e2cc:	add    BYTE PTR [eax],al
   1e2ce:	pop    edx
   1e2cf:	add    BYTE PTR [edi+0x0],dh
   1e2d2:	push   ebx
   1e2d3:	add    BYTE PTR [ebp+0x0],ah
   1e2d6:	je     0x1e2d8
   1e2d8:	dec    ecx
   1e2d9:	add    BYTE PTR [esi+0x0],ch
   1e2dc:	data16 add BYTE PTR [edi+0x0],ch
   1e2e0:	jb     0x1e2e2
   1e2e2:	ins    DWORD PTR es:[edi],dx
   1e2e3:	add    BYTE PTR [ecx+0x0],ah
   1e2e6:	je     0x1e2e8
   1e2e8:	imul   eax,DWORD PTR [eax],0x6e006f
   1e2ee:	inc    esi
   1e2ef:	add    BYTE PTR [ecx+0x0],ch
   1e2f2:	ins    BYTE PTR es:[edi],dx
   1e2f3:	add    BYTE PTR [ebp+0x0],ah
   1e2f6:	add    BYTE PTR [eax],al
   1e2f8:	pop    edx
   1e2f9:	add    BYTE PTR [edi+0x0],dh
   1e2fc:	push   edi
   1e2fd:	add    BYTE PTR [edx+0x0],dh
   1e300:	imul   eax,DWORD PTR [eax],0x650074
   1e306:	inc    esi
   1e307:	add    BYTE PTR [ecx+0x0],ch
   1e30a:	ins    BYTE PTR es:[edi],dx
   1e30b:	add    BYTE PTR [ebp+0x0],ah
   1e30e:	add    BYTE PTR [eax],al
   1e310:	pop    edx
   1e311:	add    BYTE PTR [edi+0x0],dh
   1e314:	push   ecx
   1e315:	add    BYTE PTR [ebp+0x0],dh
   1e318:	add    BYTE PTR gs:[edx+0x0],dh
   1e31c:	jns    0x1e31e
   1e31e:	dec    ecx
   1e31f:	add    BYTE PTR [esi+0x0],ch
   1e322:	data16 add BYTE PTR [edi+0x0],ch
   1e326:	jb     0x1e328
   1e328:	ins    DWORD PTR es:[edi],dx
   1e329:	add    BYTE PTR [ecx+0x0],ah
   1e32c:	je     0x1e32e
   1e32e:	imul   eax,DWORD PTR [eax],0x6e006f
   1e334:	inc    esi
   1e335:	add    BYTE PTR [ecx+0x0],ch
   1e338:	ins    BYTE PTR es:[edi],dx
   1e339:	add    BYTE PTR [ebp+0x0],ah
   1e33c:	add    BYTE PTR [eax],al
   1e33e:	dec    ecx
   1e33f:	add    BYTE PTR [edi+0x0],ch
   1e342:	inc    ebx
   1e343:	add    BYTE PTR [edx+0x0],dh
   1e346:	add    BYTE PTR gs:[ecx+0x0],ah
   1e34a:	je     0x1e34c
   1e34c:	add    BYTE PTR gs:[ebx+0x0],dl
   1e350:	jns    0x1e352
   1e352:	ins    DWORD PTR es:[edi],dx
   1e353:	add    BYTE PTR [edx+0x0],ah
   1e356:	outs   dx,DWORD PTR ds:[esi]
   1e357:	add    BYTE PTR [eax+eax*1+0x69],ch
   1e35b:	add    BYTE PTR [ebx+0x0],ah
   1e35e:	dec    esp
   1e35f:	add    BYTE PTR [ecx+0x0],ch
   1e362:	outs   dx,BYTE PTR ds:[esi]
   1e363:	add    BYTE PTR [ebx+0x0],ch
   1e366:	add    BYTE PTR [eax],al
   1e368:	dec    ecx
   1e369:	add    BYTE PTR [edi+0x0],ch
   1e36c:	inc    ebx
   1e36d:	add    BYTE PTR [edx+0x0],dh
   1e370:	add    BYTE PTR gs:[ecx+0x0],ah
   1e374:	je     0x1e376
   1e376:	add    BYTE PTR gs:[eax+eax*1+0x65],al
   1e37b:	add    BYTE PTR [esi+0x0],dh
   1e37e:	imul   eax,DWORD PTR [eax],0x650063
   1e384:	add    BYTE PTR [eax],al
   1e386:	push   ebx
   1e387:	add    BYTE PTR [ebp+0x0],ah
   1e38a:	inc    ebx
   1e38b:	add    BYTE PTR [edx+0x0],dh
   1e38e:	add    BYTE PTR gs:[ecx+0x0],ah
   1e392:	je     0x1e394
   1e394:	add    BYTE PTR gs:[ebx+0x0],al
   1e398:	ins    BYTE PTR es:[edi],dx
   1e399:	add    BYTE PTR [ecx+0x0],ch
   1e39c:	add    BYTE PTR gs:[esi+0x0],ch
   1e3a0:	je     0x1e3a2
   1e3a2:	push   ebx
   1e3a3:	add    BYTE PTR [ebp+0x0],ah
   1e3a6:	arpl   WORD PTR [eax],ax
   1e3a8:	jne    0x1e3aa
   1e3aa:	jb     0x1e3ac
   1e3ac:	imul   eax,DWORD PTR [eax],0x790074
   1e3b2:	add    BYTE PTR [eax],al
   1e3b4:	pop    edx
   1e3b5:	add    BYTE PTR [edi+0x0],dh
   1e3b8:	dec    ebp
   1e3b9:	add    BYTE PTR [ecx+0x0],ah
   1e3bc:	jo     0x1e3be
   1e3be:	push   esi
   1e3bf:	add    BYTE PTR [ecx+0x0],ch
   1e3c2:	add    BYTE PTR gs:[edi+0x0],dh
   1e3c6:	dec    edi
   1e3c7:	add    BYTE PTR [esi+0x0],ah
   1e3ca:	push   ebx
   1e3cb:	add    BYTE PTR [ebp+0x0],ah
   1e3ce:	arpl   WORD PTR [eax],ax
   1e3d0:	je     0x1e3d2
   1e3d2:	imul   eax,DWORD PTR [eax],0x6e006f
   1e3d8:	add    BYTE PTR [eax],al
   1e3da:	pop    edx
   1e3db:	add    BYTE PTR [edi+0x0],dh
   1e3de:	push   ebp
   1e3df:	add    BYTE PTR [esi+0x0],ch
   1e3e2:	ins    DWORD PTR es:[edi],dx
   1e3e3:	add    BYTE PTR [ecx+0x0],ah
   1e3e6:	jo     0x1e3e8
   1e3e8:	push   esi
   1e3e9:	add    BYTE PTR [ecx+0x0],ch
   1e3ec:	add    BYTE PTR gs:[edi+0x0],dh
   1e3f0:	dec    edi
   1e3f1:	add    BYTE PTR [esi+0x0],ah
   1e3f4:	push   ebx
   1e3f5:	add    BYTE PTR [ebp+0x0],ah
   1e3f8:	arpl   WORD PTR [eax],ax
   1e3fa:	je     0x1e3fc
   1e3fc:	imul   eax,DWORD PTR [eax],0x6e006f
   1e402:	add    BYTE PTR [eax],al
   1e404:	dec    ebx
   1e405:	add    BYTE PTR [ebp+0x0],ah
   1e408:	dec    ecx
   1e409:	add    BYTE PTR [esi+0x0],ch
   1e40c:	imul   eax,DWORD PTR [eax],0x690074
   1e412:	popa   
   1e413:	add    BYTE PTR [eax+eax*1+0x69],ch
   1e417:	add    BYTE PTR [edx+0x0],bh
   1e41a:	add    BYTE PTR gs:[ebp+0x0],cl
   1e41e:	jne    0x1e420
   1e420:	je     0x1e422
   1e422:	add    BYTE PTR gs:[eax+0x0],bh
   1e426:	add    BYTE PTR [eax],al
   1e428:	push   edx
   1e429:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1e42d:	add    BYTE PTR [ecx+0x0],cl
   1e430:	outs   dx,BYTE PTR ds:[esi]
   1e431:	add    BYTE PTR [ecx+0x0],ch
   1e434:	je     0x1e436
   1e436:	push   ebp
   1e437:	add    BYTE PTR [esi+0x0],ch
   1e43a:	imul   eax,DWORD PTR [eax],0x6f0063
   1e440:	add    BYTE PTR fs:[ebp+0x0],ah
   1e444:	push   ebx
   1e445:	add    BYTE PTR [eax+eax*1+0x72],dh
   1e449:	add    BYTE PTR [ecx+0x0],ch
   1e44c:	outs   dx,BYTE PTR ds:[esi]
   1e44d:	add    BYTE PTR [edi+0x0],ah
   1e450:	add    BYTE PTR [eax],al
   1e452:	dec    edi
   1e453:	add    BYTE PTR [edx+0x0],ah
   1e456:	data16 add BYTE PTR [eax+eax*1+0x65],al
   1e45b:	add    BYTE PTR [edx+0x0],dh
   1e45e:	add    BYTE PTR gs:[esi+0x0],ah
   1e462:	add    BYTE PTR gs:[edx+0x0],dh
   1e466:	add    BYTE PTR gs:[esi+0x0],ch
   1e46a:	arpl   WORD PTR [eax],ax
   1e46c:	add    BYTE PTR gs:[edi+0x0],cl
   1e470:	bound  eax,QWORD PTR [eax]
   1e472:	push   0x0
   1e474:	add    BYTE PTR gs:[ebx+0x0],ah
   1e478:	je     0x1e47a
   1e47a:	add    BYTE PTR [eax],al
   1e47c:	push   eax
   1e47d:	add    BYTE PTR [ebx+0x0],dh
   1e480:	dec    esp
   1e481:	add    BYTE PTR [edi+0x0],ch
   1e484:	outs   dx,DWORD PTR ds:[esi]
   1e485:	add    BYTE PTR [ebx+0x0],ch
   1e488:	jne    0x1e48a
   1e48a:	jo     0x1e48c
   1e48c:	push   eax
   1e48d:	add    BYTE PTR [edx+0x0],dh
   1e490:	outs   dx,DWORD PTR ds:[esi]
   1e491:	add    BYTE PTR [ebx+0x0],ah
   1e494:	add    BYTE PTR gs:[ebx+0x0],dh
   1e498:	jae    0x1e49a
   1e49a:	inc    edx
   1e49b:	add    BYTE PTR [ecx+0x0],bh
   1e49e:	push   eax
   1e49f:	add    BYTE PTR [edx+0x0],dh
   1e4a2:	outs   dx,DWORD PTR ds:[esi]
   1e4a3:	add    BYTE PTR [ebx+0x0],ah
   1e4a6:	add    BYTE PTR gs:[ebx+0x0],dh
   1e4aa:	jae    0x1e4ac
   1e4ac:	dec    ecx
   1e4ad:	add    BYTE PTR [eax+eax*1+0x0],ah
   1e4b1:	add    BYTE PTR [ebx+0x0],cl
   1e4b4:	add    BYTE PTR gs:[edi+0x0],al
   1e4b8:	add    BYTE PTR gs:[eax+eax*1+0x43],dh
   1e4bd:	add    BYTE PTR [ebp+0x0],dh
   1e4c0:	jb     0x1e4c2
   1e4c2:	jb     0x1e4c4
   1e4c4:	add    BYTE PTR gs:[esi+0x0],ch
   1e4c8:	je     0x1e4ca
   1e4ca:	push   esp
   1e4cb:	add    BYTE PTR [eax+0x0],ch
   1e4ce:	jb     0x1e4d0
   1e4d0:	add    BYTE PTR gs:[ecx+0x0],ah
   1e4d4:	add    BYTE PTR fs:[eax],al
   1e4d7:	add    BYTE PTR [eax+eax*1+0x2d],dl
   1e4db:	add    BYTE PTR [ecx],cl
   1e4dd:	add    BYTE PTR ds:0xdf000000,dl
   1e4e3:	leave  
   1e4e4:	das    
   1e4e5:	pop    ss
   1e4e6:	xchg   edi,eax
   1e4e7:	or     cl,dh
   1e4e9:	int3   
   1e4ea:	ins    BYTE PTR es:[edi],dx
   1e4eb:	pop    ds
   1e4ec:	mov    eax,0xfdea3d25
   1e4f1:	retf   
   1e4f2:	mov    al,BYTE PTR [ebp+0x6c]
   1e4f5:	cdq    
   1e4f6:	push   es
   1e4f7:	mov    ebx,0x86fd673e
   1e4fc:	mov    dl,BYTE PTR [ecx*2+0x5ed520ab]
   1e503:	and    DWORD PTR [ebx+0x15],esp
   1e506:	jb     0x1e4f6
   1e508:	and    eax,0x214aae30
   1e50d:	pop    esp
   1e50e:	div    BYTE PTR [edi]
   1e510:	xor    DWORD PTR [eax],eax
   1e512:	push   ebx
   1e513:	add    BYTE PTR [edi],ah
   1e515:	add    BYTE PTR ds:0x6001300,dl
   1e51b:	add    BYTE PTR [eax],al
   1e51d:	add    BYTE PTR [ebp-0x77],bh
   1e520:	jb     0x1e4db
   1e522:	jmp    0xee6ab176
   1e527:	faddp  st(7),st
   1e529:	jg     0x1e4d2
   1e52b:	adc    DWORD PTR [edi],edx
   1e52d:	add    eax,0xdd3db647
   1e532:	jae    0x1e50f
   1e534:	pop    eax
   1e535:	xor    ebp,ebp
   1e537:	mov    cl,0x74
   1e539:	sbb    BYTE PTR [esp+ebx*2+0x47],bh
   1e53d:	cwde   
   1e53e:	fbld   TBYTE PTR [ebp+0x3]
   1e541:	and    esi,DWORD PTR [ecx+0x7b]
   1e544:	dec    eax
   1e545:	lods   al,BYTE PTR ds:[esi]
   1e546:	add    cl,BYTE PTR [esi-0x5e2e4295]
   1e54c:	inc    esi
   1e54d:	aad    0xe2
   1e54f:	nop
   1e550:	add    ah,cl
   1e552:	dec    ecx
   1e553:	add    BYTE PTR [eax+eax*1],ah
   1e556:	or     al,0x0
   1e558:	push   es
   1e559:	add    BYTE PTR [edx],al
   1e55b:	add    BYTE PTR ds:0x15003100,dh
   1e561:	add    BYTE PTR [eax+eax*1],bl
   1e564:	add    BYTE PTR [eax],al
   1e566:	inc    esi
   1e567:	xchg   esp,eax
   1e568:	xchg   edx,eax
   1e569:	dec    eax
   1e56a:	ret    
   1e56b:	or     al,0x59
   1e56d:	push   cs
   1e56e:	arpl   WORD PTR [ebp+0x39],si
   1e571:	call   0x6a9ac5e4
   1e576:	push   es
   1e577:	adc    ebp,DWORD PTR [ebp-0x3048e9c2]
   1e57d:	mov    edx,0xd9c66c5d
   1e582:	pop    esp
   1e583:	loopne 0x1e52c
   1e585:	mov    edi,0x57fbca17
   1e58a:	push   ebp
   1e58b:	cli    
   1e58c:	scas   eax,DWORD PTR es:[edi]
   1e58d:	mov    eax,0xfd89e87f
   1e592:	sbb    edx,DWORD PTR [eax-0x2e577be3]
   1e598:	add    ah,cl
   1e59a:	add    BYTE PTR cs:[edx+0x0],cl
   1e59e:	or     BYTE PTR [eax],al
   1e5a0:	add    BYTE PTR [eax],al
   1e5a2:	add    BYTE PTR [eax],al
   1e5a4:	out    0xea,al
   1e5a6:	jnp    0x1e564
   1e5a8:	sub    cl,BYTE PTR [edx]
   1e5aa:	ins    DWORD PTR es:[edi],dx
   1e5ab:	mov    edx,DWORD PTR [eax]
   1e5ad:	retf   0xbc5f
   1e5b0:	mov    al,0x89
   1e5b2:	pop    es
   1e5b3:	neg    BYTE PTR [eax+0x541aec63]
   1e5b9:	outs   dx,BYTE PTR ds:[esi]
   1e5ba:	sar    BYTE PTR [ebx+edx*4],1
   1e5bd:	add    eax,0xe87cb409
   1e5c2:	jno    0x1e5a7
   1e5c4:	sahf   
   1e5c5:	mov    bh,0xf2
   1e5c7:	push   es
   1e5c8:	xchg   edi,eax
   1e5c9:	iret   
   1e5ca:	retf   0x267
   1e5cd:	pop    eax
   1e5ce:	add    ah,cl
   1e5d0:	outs   dx,BYTE PTR ds:[esi]
   1e5d1:	add    BYTE PTR [edx],bl
   1e5d3:	add    BYTE PTR [eax],dl
   1e5d5:	add    BYTE PTR [eax],cl
   1e5d7:	add    BYTE PTR [eax],al
   1e5d9:	add    BYTE PTR [edx+0x0],al
   1e5dc:	dec    edx
   1e5dd:	add    BYTE PTR [eax],cl
   1e5df:	add    BYTE PTR [eax],al
   1e5e1:	add    BYTE PTR [eax],al
   1e5e3:	add    BYTE PTR [edx+0x2685d994],cl
   1e5e9:	xor    eax,0xb4275fc7
   1e5ee:	mov    al,0x63
   1e5f0:	add    al,0xa3
   1e5f2:	popa   
   1e5f3:	add    ebp,ebx
   1e5f5:	mov    dl,0xe4
   1e5f7:	aad    0x0
   1e5f9:	sti    
   1e5fa:	mov    BYTE PTR [ebx-0x4192ba7a],bh
   1e600:	cmp    edx,DWORD PTR [esi-0x1e]
   1e603:	leave  
   1e604:	int3   
   1e605:	sti    
   1e606:	(bad)  
   1e607:	retf   0x3699
   1e60a:	mov    ebx,0x17545109
   1e60f:	or     eax,0xb2d263dd
   1e614:	sub    eax,0xfa0b91
   1e619:	int3   
   1e61a:	inc    edx
   1e61b:	daa    
   1e61c:	add    BYTE PTR ds:0xbf48cc00,dl
   1e622:	sub    eax,0x5109bbdd
   1e627:	and    DWORD PTR [ebx+0x362e6e09],ecx
   1e62d:	jbe    0x1e620
   1e62f:	retf   
   1e630:	xchg   ebx,eax
   1e631:	xchg   esp,eax
   1e632:	dec    ebp
   1e633:	xchg   esp,eax
   1e634:	retf   0x2ee0
   1e637:	jo     0x1e645
   1e639:	loop   0x1e682
   1e63b:	aad    0x11
   1e63d:	call   0x6ffc:0x7480b991
   1e644:	mov    edx,0x6254367
   1e649:	add    eax,0xc1cd58e4
   1e64e:	xchg   bh,bh
   1e650:	push   edi
   1e651:	test   DWORD PTR es:[ecx+0x337fac6b],ebp
   1e658:	sub    dl,BYTE PTR [ecx-0x5a]
   1e65b:	add    DWORD PTR [eax],0x93f53cc
   1e661:	add    BYTE PTR ds:0xd91de300,dl
   1e667:	push   ss
   1e668:	ins    BYTE PTR es:[edi],dx
   1e669:	pop    ebx
   1e66a:	jl     0x1e623
   1e66c:	bound  edx,QWORD PTR [esi+ebp*1+0x59]
   1e670:	inc    ebx
   1e671:	jg     0x1e689
   1e673:	mov    BYTE PTR [edi+0x2c],ah
   1e676:	inc    eax
   1e677:	xor    DWORD PTR [ebp-0x485509c1],esp
   1e67d:	mov    bh,0x4a
   1e67f:	ficomp DWORD PTR [ecx]
   1e681:	test   DWORD PTR [ebp+ebp*2-0x6],ebp
   1e685:	xor    eax,0x78f7d263
   1e68a:	or     al,0x39
   1e68d:	shr    BYTE PTR ds:0xec3f52c5,1
   1e693:	add    BYTE PTR [ebx+0x31],al
   1e696:	pop    ss
   1e697:	add    al,0x15
   1e699:	adc    DWORD PTR [ecx],esi
   1e69b:	cmp    al,0x1a
   1e69d:	pop    ss
   1e69e:	add    al,0x5
   1e6a0:	add    ah,cl
   1e6a2:	stc    
   1e6a3:	push   ss
   1e6a4:	cmp    ebp,eax
   1e6a6:	ss js  0x1e6d2
   1e6a9:	into   
   1e6aa:	js     0x1e723
   1e6ac:	inc    ebp
   1e6ad:	cmc    
   1e6ae:	sbb    eax,0xc2c26db4
   1e6b3:	lds    ecx,FWORD PTR ds:0x4c292c62
   1e6b9:	or     cl,dl
   1e6bb:	dec    edi
   1e6bc:	adc    DWORD PTR [ecx],edi
   1e6be:	mov    edi,?
   1e6c0:	sahf   
   1e6c1:	or     edi,ebp
   1e6c3:	retf   
   1e6c4:	inc    ecx
   1e6c5:	cmp    al,0x5c
   1e6c7:	loopne 0x1e717
   1e6c9:	pop    es
   1e6ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1e6cb:	mov    cl,0x6c
   1e6cd:	fcmovb st,st(6)
   1e6cf:	push   ebx
   1e6d0:	dec    esi
   1e6d1:	call   FWORD PTR ds:0x38bbe5d9
   1e6d7:	stos   DWORD PTR es:[edi],eax
   1e6d8:	out    0xb4,al
   1e6da:	pop    esp
   1e6db:	cwde   
   1e6dc:	push   ecx
   1e6dd:	add    BYTE PTR [ebx+eiz*1+0xe],cl
   1e6e1:	add    eax,0x100b2528
   1e6e6:	adc    edx,DWORD PTR [ebx]
   1e6e8:	or     edi,DWORD PTR [eax]
   1e6ea:	add    ah,cl
   1e6ec:	cmp    eax,0x715b1f39
   1e6f1:	daa    
   1e6f2:	out    dx,al
   1e6f3:	sub    ch,0x95
   1e6f6:	ins    DWORD PTR es:[edi],dx
   1e6f7:	mov    al,0x93
   1e6f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   1e6fa:	pop    es
   1e6fb:	add    esp,0xffffffe3
   1e6fe:	xor    eax,0xd5abea25
   1e703:	cdq    
   1e704:	and    BYTE PTR [bp+si-0x60],al
   1e708:	mov    bh,0x19
   1e70a:	(bad)  [eax-0x56173b85]
   1e710:	and    BYTE PTR [edi],cl
   1e712:	push   edx
   1e713:	xchg   ebx,eax
   1e714:	outs   dx,DWORD PTR ds:[esi]
   1e715:	repnz fstp TBYTE PTR [eax]
   1e718:	push   ebx
   1e719:	in     al,dx
   1e71a:	or     BYTE PTR [eax],al
   1e71c:	dec    esp
   1e71d:	and    ecx,DWORD PTR [esi]
   1e71f:	add    eax,0x100b2528
   1e724:	adc    edx,DWORD PTR [ebx]
   1e726:	or     ebp,DWORD PTR [esi]
   1e728:	add    ah,cl
   1e72a:	xchg   edx,eax
   1e72b:	inc    esi
   1e72c:	out    dx,al
   1e72d:	jmp    0x1e6c0
   1e72f:	sub    al,0xa1
   1e731:	add    dh,0x83
   1e734:	jp     0x1e6bb
   1e736:	lea    esp,[ebx-0xf284373]
   1e73c:	in     eax,dx
   1e73d:	mov    bh,0x2f
   1e73f:	aam    0x41
   1e741:	into   
   1e742:	push   ebp
   1e743:	aam    0x65
   1e745:	imul   DWORD PTR [ebx+0x5b]
   1e748:	popa   
   1e749:	dec    esp
   1e74a:	ficomp WORD PTR [edi+0x17]
   1e74d:	(bad)  
   1e74e:	or     BYTE PTR [ebp+edx*8-0x66],bh
   1e752:	test   eax,0x6bcc008a
   1e757:	add    BYTE PTR [esi],cl
   1e759:	add    BYTE PTR [edi],dl
   1e75b:	add    BYTE PTR [eax+eax*1],bl
   1e75e:	or     eax,DWORD PTR [eax]
   1e760:	or     DWORD PTR [eax],eax
   1e762:	pop    edi
   1e763:	add    BYTE PTR [ecx],al
   1e765:	add    BYTE PTR [eax+eax*1],bl
   1e768:	dec    edx
   1e769:	add    BYTE PTR [eax],cl
   1e76b:	add    BYTE PTR [eax],al
   1e76d:	add    BYTE PTR [eax],al
   1e76f:	add    BYTE PTR [ecx+edx*4],dh
   1e772:	int    0x75
   1e774:	push   ss
   1e775:	mov    eax,ds:0x62627db
   1e77a:	out    0x90,eax
   1e77c:	xor    esp,DWORD PTR [esi+0x2e]
   1e77f:	adc    al,0x64
   1e781:	xor    eax,0x335c522a
   1e786:	push   ebx
   1e787:	std    
   1e788:	dec    edx
   1e789:	lea    esp,[edi-0x21a24b9f]
   1e78f:	loope  0x1e7cc
   1e791:	and    ch,dh
   1e793:	scas   eax,DWORD PTR es:[edi]
   1e794:	mov    ds:0x3becde1b,eax
   1e799:	repz stc 
   1e79b:	and    bh,dl
   1e79d:	add    dl,dh
   1e79f:	mov    ah,0x12
   1e7a1:	sub    DWORD PTR [ecx],edi
   1e7a3:	push   ax
   1e7a5:	push   es
   1e7a6:	je     0x1e7c6
   1e7a8:	add    ah,cl
   1e7aa:	outs   dx,BYTE PTR ds:[esi]
   1e7ab:	sbb    dl,BYTE PTR [eax]
   1e7ad:	or     BYTE PTR [eax],al
   1e7af:	inc    edx
   1e7b0:	dec    edx
   1e7b1:	or     BYTE PTR [eax],al
   1e7b3:	add    ch,bh
   1e7b5:	inc    edi
   1e7b6:	and    BYTE PTR [esi-0xa],0xb1
   1e7ba:	push   edx
   1e7bb:	dec    edi
   1e7bd:	call   0xaa4a2c77
   1e7c2:	into   
   1e7c3:	sub    DWORD PTR [eax+0x267d77f4],edx
   1e7c9:	push   edi
   1e7ca:	xchg   ecx,eax
   1e7cc:	imul   ebx,DWORD PTR [esi+0x74],0x15
   1e7d0:	sub    DWORD PTR [ebp-0x15],edi
   1e7d3:	pop    ecx
   1e7d4:	mov    esp,DWORD PTR [ebx]
   1e7d6:	lods   eax,DWORD PTR ds:[esi]
   1e7d7:	ret    
   1e7d8:	or     edx,DWORD PTR [edx-0x727f0e3f]
   1e7de:	test   BYTE PTR [esi+eax*2],0x3c
   1e7e2:	ror    BYTE PTR [ebp+0x74f1acf4],0x3a
   1e7e9:	add    BYTE PTR [eax+eax*1+0xf],bl
   1e7ed:	add    BYTE PTR [edx],ch
   1e7ef:	add    BYTE PTR [edx],cl
   1e7f1:	add    BYTE PTR [edi],al
   1e7f3:	add    BYTE PTR [ecx],dl
   1e7f5:	add    BYTE PTR [eax],cl
   1e7f7:	add    BYTE PTR [edi],bh
   1e7f9:	add    BYTE PTR ds:0x1b000000,bh
   1e7ff:	add    BYTE PTR [eax],ch
   1e801:	add    BYTE PTR [edi],ch
   1e803:	add    BYTE PTR [edx],cl
   1e805:	add    BYTE PTR [edx],cl
   1e807:	add    BYTE PTR [edi],al
   1e809:	add    BYTE PTR [ecx],dl
   1e80b:	add    BYTE PTR [eax],cl
   1e80d:	add    BYTE PTR [esi+0x0],bl
   1e810:	add    DWORD PTR [eax],eax
   1e812:	outs   dx,BYTE PTR ds:[esi]
   1e813:	add    BYTE PTR [eax],al
   1e815:	add    bh,dl
   1e817:	push   es
   1e818:	jb     0x1e7e6
   1e81a:	imul   eax,DWORD PTR [edi+edi*8+0x6b],0xbd610dad
   1e822:	inc    ecx
   1e823:	jb     0x1e850
   1e825:	lods   al,BYTE PTR ds:[esi]
   1e826:	cmp    esi,esp
   1e828:	inc    ecx
   1e829:	inc    edx
   1e82a:	outs   dx,DWORD PTR ds:[esi]
   1e82b:	call   0x9981:0x5feff87c
   1e832:	iret   
   1e833:	jmp    0x1e81c
   1e835:	mov    esp,0x9b9ae6ef
   1e83a:	enter  0x441a,0x6a
   1e83e:	cmp    eax,edi
   1e840:	push   0x13ff3130
   1e845:	lock into 
   1e847:	inc    DWORD PTR [esi-0x466d4a00]
   1e84d:	inc    edx
   1e84e:	in     eax,0x3f
   1e850:	inc    edi
   1e851:	pop    eax
   1e852:	repnz adc al,0x1a
   1e855:	(bad)  
   1e856:	leave  
   1e857:	xor    edi,DWORD PTR [edi-0x56ac1530]
   1e85d:	add    ebp,DWORD PTR [edi+0x6f6194a0]
   1e863:	push   esi
   1e864:	push   ecx
   1e865:	jp     0x1e8dd
   1e867:	jbe    0x1e84e
   1e869:	sub    eax,edx
   1e86b:	jne    0x1e8d5
   1e86d:	mov    ds:0xf8ab5050,eax
   1e872:	or     eax,0xebcc00a4
   1e877:	adc    BYTE PTR [ebx+edi*8],dl
   1e87a:	jbe    0x1e877
   1e87c:	sub    ebx,esp
   1e87e:	out    dx,al
   1e87f:	or     bl,bl
   1e881:	in     al,0xaf
   1e883:	rol    DWORD PTR [esi],1
   1e885:	ja     0x1e8e1
   1e887:	and    eax,0x254558ec
   1e88c:	mov    edx,0x49d55e8b
   1e891:	dec    edx
   1e892:	call   0x6e7fc916
   1e897:	(bad)
   1e89b:	dec    ecx
   1e89c:	gs dec ebx
   1e89e:	cld    
   1e89f:	(bad)  
   1e8a1:	cmp    esp,DWORD PTR [esi+eax*1+0x2ecc00]
   1e8a8:	pop    ebp
   1e8a9:	add    BYTE PTR [edx],cl
   1e8ab:	add    BYTE PTR [edx],cl
   1e8ad:	add    BYTE PTR [eax],al
   1e8af:	add    BYTE PTR [ebx-0x75cce604],cl
   1e8b5:	push   ss
   1e8b6:	jne    0x1e857
   1e8b8:	jno    0x1e92d
   1e8ba:	fsub   st(7),st
   1e8bc:	mov    eax,0x88f1227a
   1e8c1:	repz out 0xc5,al
   1e8c4:	sbb    BYTE PTR [edx-0x62],al
   1e8c7:	jge    0x1e92f
   1e8c9:	jbe    0x1e926
   1e8cb:	ins    BYTE PTR es:[edi],dx
   1e8cc:	sub    edx,DWORD PTR [esi-0x5ba3a74]
   1e8d2:	add    bh,BYTE PTR [edi+ebx*8+0x19]
   1e8d6:	jns    0x1e8ec
   1e8d8:	dec    ecx
   1e8d9:	(bad)  
   1e8da:	lds    eax,FWORD PTR [ecx-0x86aff2e]
   1e8e0:	xchg   BYTE PTR [esi-0x46],ch
   1e8e3:	repz push ss
   1e8e5:	test   DWORD PTR [edx],edx
   1e8e7:	ja     0x1e8cf
   1e8e9:	sbb    eax,0x3b5dd7d2
   1e8ee:	stos   BYTE PTR es:[edi],al
   1e8ef:	aas    
   1e8f0:	push   0xffffffc3
   1e8f2:	jge    0x1e8c6
   1e8f4:	leave  
   1e8f5:	mov    ebx,0x9c02c148
   1e8fa:	pop    esi
   1e8fb:	gs cmc 
   1e8fd:	test   DWORD PTR [ecx],ebx
   1e8ff:	ins    DWORD PTR es:[edi],dx
   1e900:	jns    0x1e97a
   1e902:	or     bl,BYTE PTR [esi-0x4357998e]
   1e908:	mov    WORD PTR [eax+ecx*2],?
   1e90b:	retf   
   1e90c:	cmp    al,0xfc
   1e90e:	fisttp DWORD PTR [ebx+0x20]
   1e911:	or     ch,BYTE PTR [esi]
   1e913:	dec    eax
   1e914:	clc    
   1e915:	xor    ah,BYTE PTR ds:[eax]
   1e918:	add    DWORD PTR [eax+0x5c28e5],0xf005c
   1e922:	sub    al,BYTE PTR [eax]
   1e924:	or     al,BYTE PTR [eax]
   1e926:	pop    es
   1e927:	add    BYTE PTR [ecx],dl
   1e929:	add    BYTE PTR [eax],cl
   1e92b:	add    BYTE PTR [edi],bh
   1e92d:	add    BYTE PTR ds:0x1b000000,bh
   1e933:	add    BYTE PTR [eax],al
   1e935:	add    ah,ah
   1e937:	mov    esp,DWORD PTR [esi-0x78]
   1e93a:	div    BYTE PTR [eax-0x7516640]
   1e940:	xor    al,0x38
   1e942:	dec    esi
   1e943:	pop    es
   1e944:	jne    0x1e995
   1e946:	out    dx,al
   1e947:	adc    ah,ch
   1e949:	push   ds
   1e94a:	xor    al,0x30
   1e94d:	inc    ebx
   1e94e:	hlt    
   1e94f:	mov    ch,0x67
   1e951:	sub    ch,BYTE PTR [edx+0x73c56fc9]
   1e957:	repz push esp
   1e959:	(bad)  
   1e95b:	and    al,0x94
   1e95d:	fisttp DWORD PTR [edi-0x57631515]
   1e963:	add    BYTE PTR [eax+eax*1+0xe],bl
   1e967:	add    BYTE PTR [edi],dh
   1e969:	add    BYTE PTR [edx],al
   1e96b:	add    BYTE PTR [esi],cl
   1e96d:	add    BYTE PTR [edx],bl
   1e96f:	add    BYTE PTR [edi],al
   1e971:	add    BYTE PTR [esi],al
   1e973:	add    BYTE PTR [ebx],cl
   1e975:	add    BYTE PTR ds:0x2c001100,ah
   1e97b:	add    BYTE PTR [edx],al
   1e97d:	add    BYTE PTR [ebx],cl
   1e97f:	add    BYTE PTR [ecx],al
   1e981:	add    BYTE PTR [edi],al
   1e983:	add    BYTE PTR [ebx],cl
   1e985:	add    BYTE PTR [ecx],bh
   1e987:	add    BYTE PTR [edi],cl
   1e989:	add    BYTE PTR [edx],cl
   1e98b:	add    BYTE PTR [edx],cl
   1e98d:	add    BYTE PTR [edi],al
   1e98f:	add    BYTE PTR [ecx],dl
   1e991:	add    BYTE PTR [eax],cl
   1e993:	add    BYTE PTR [ecx],dl
   1e995:	add    BYTE PTR [edi],bl
   1e997:	add    BYTE PTR [esi],dh
   1e999:	add    BYTE PTR [edi],al
   1e99b:	add    BYTE PTR [eax],al
   1e99d:	add    BYTE PTR [edi],dl
   1e99f:	add    BYTE PTR [ebx],cl
   1e9a1:	add    BYTE PTR [edx],bl
   1e9a3:	add    BYTE PTR [edi],dh
   1e9a5:	add    BYTE PTR [eax+eax*1],ch
   1e9a8:	add    DWORD PTR [eax],eax
   1e9aa:	sbb    al,BYTE PTR [eax]
   1e9ac:	push   es
   1e9ad:	add    BYTE PTR ds:0x3f000300,bl
   1e9b3:	add    BYTE PTR [esi],dh
   1e9b5:	add    BYTE PTR [ecx],dl
   1e9b7:	add    BYTE PTR [eax],ch
   1e9b9:	add    BYTE PTR [edi],cl
   1e9bb:	add    BYTE PTR [esi],dh
   1e9bd:	add    BYTE PTR [edi],dl
   1e9bf:	add    BYTE PTR [eax+eax*1],al
   1e9c2:	pop    ds
   1e9c3:	add    BYTE PTR [edx],cl
   1e9c5:	add    BYTE PTR [esi],al
   1e9c7:	add    BYTE PTR [esi],dl
   1e9c9:	add    BYTE PTR [edi],ch
   1e9cb:	add    BYTE PTR [eax],al
   1e9cd:	add    BYTE PTR [edi],cl
   1e9cf:	ret    
   1e9d0:	loope  0x1e957
   1e9d2:	adc    DWORD PTR [esi],ecx
   1e9d4:	ret    
   1e9d5:	cmp    ah,BYTE PTR ds:0x416b33a1
   1e9db:	xor    al,0x3b
   1e9dd:	and    eax,0x81401255
   1e9e2:	push   ss
   1e9e3:	aaa    
   1e9e4:	mov    ds:0x655da0c3,eax
   1e9e9:	cmc    
   1e9ea:	mov    ds:0xb50cb31e,eax
   1e9ef:	jns    0x1ea17
   1e9f1:	adc    DWORD PTR ds:0xb2ff31de,edi
   1e9f7:	sub    eax,0x9e782dc3
   1e9fc:	imul   ecx,DWORD PTR [eax+esi*2+0x4058fe42],0xffffffb9
   1ea04:	mov    ah,0x8c
   1ea06:	pop    ebp
   1ea07:	test   BYTE PTR [ecx],cl
   1ea09:	push   edx
   1ea0a:	add    ah,cl
   1ea0c:	ins    BYTE PTR es:[edi],dx
   1ea0d:	add    BYTE PTR [edi],bl
   1ea0f:	add    BYTE PTR [edx],dl
   1ea11:	add    BYTE PTR [edx],dl
   1ea13:	add    BYTE PTR [eax],al
   1ea15:	add    BYTE PTR [ebp+0x0],bl
   1ea18:	dec    ebx
   1ea19:	add    BYTE PTR ds:0x1d00,bl
   1ea1f:	add    BYTE PTR [ebx-0x3190fd1e],ah
   1ea25:	fmul   st,st(4)
   1ea27:	push   ss
   1ea28:	icebp  
   1ea29:	test   BYTE PTR [esi-0x14],ah
   1ea2c:	xor    bh,BYTE PTR [ebx]
   1ea2e:	in     al,dx
   1ea2f:	xchg   edi,eax
   1ea30:	pop    es
   1ea31:	inc    ebx
   1ea32:	add    BYTE PTR [ebp+0x5d],cl
   1ea35:	stos   BYTE PTR es:[edi],al
   1ea36:	retf   0xf93c
   1ea39:	int3   
   1ea3a:	adc    bh,BYTE PTR [esi]
   1ea3c:	pop    DWORD PTR [eax*2-0x6d41b3bd]
   1ea43:	ss push cs
   1ea45:	xor    BYTE PTR [edi+0x41],al
   1ea48:	cmp    DWORD PTR [eax],edx
   1ea4a:	xor    esi,edi
   1ea4c:	add    ah,cl
   1ea4e:	pop    edx
   1ea4f:	sub    eax,0x6163725
   1ea54:	sbb    BYTE PTR [eax],cl
   1ea56:	xor    DWORD PTR [edx+ebx*1],edi
   1ea59:	pop    ss
   1ea5a:	add    al,0x5
   1ea5c:	add    ah,cl
   1ea5e:	cmp    bl,al
   1ea60:	adc    dh,BYTE PTR [eax+0x50]
   1ea63:	pop    ds
   1ea64:	and    DWORD PTR [edi-0x2f8e1f1a],edx
   1ea6a:	mov    eax,ds:0x3ff2e29d
   1ea6f:	mov    cl,0x41
   1ea71:	mov    dl,0x18
   1ea73:	dec    ebx
   1ea74:	xchg   edx,eax
   1ea75:	jmp    0xc65d:0xfcbda79a
   1ea7c:	imul   edx,esi,0x5b
   1ea7f:	daa    
   1ea80:	xchg   esi,eax
   1ea81:	leave  
   1ea82:	arpl   si,si
   1ea84:	retf   0xd9d9
   1ea87:	jle    0x1eab8
   1ea89:	add    BYTE PTR [esi+0x3a],cl
   1ea8c:	and    esp,DWORD PTR ds:0x33111d1b
   1ea92:	aas    
   1ea93:	sbb    eax,DWORD PTR [esi]
   1ea95:	add    DWORD PTR [ecx*1+0x2082821],edx
   1ea9c:	sbb    eax,0x89cc000b
   1eaa1:	jl     0x1ea74
   1eaa3:	jno    0x1eac8
   1eaa5:	pop    ds
   1eaa6:	out    0xeb,eax
   1eaa8:	add    bl,BYTE PTR [eax-0x69]
   1eaab:	sbb    eax,0x72bcd504
   1eab0:	les    eax,FWORD PTR [ebx-0xd]
   1eab3:	push   0x1c
   1eab5:	repnz add DWORD PTR [esi+ebx*8],ecx
   1eab9:	out    0x62,eax
   1eabb:	inc    esp
   1eabc:	outs   dx,DWORD PTR ds:[esi]
   1eabd:	inc    esp
   1eabe:	jae    0x1ea8d
   1eac0:	cmp    DWORD PTR [ecx],esi
   1eac2:	mov    cs,WORD PTR [esi+0x25]
   1eac5:	aam    0xbb
   1eac7:	or     al,0xaa
   1eac9:	mov    ds:0x4b0378d3,eax
   1eace:	xor    edx,edi
   1ead0:	xor    al,BYTE PTR [edi+0x74]
   1ead3:	shl    edi,0xc1
   1ead6:	add    eax,0x6a05161d
   1eadb:	add    BYTE PTR [edx+0x2d],bl
   1eade:	daa    
   1eadf:	and    bl,BYTE PTR ds:0x1706111b
   1eae5:	and    bh,BYTE PTR [edi]
   1eae7:	sbb    eax,DWORD PTR [esi]
   1eae9:	add    DWORD PTR [ecx*1+0x2082821],edx
   1eaf0:	sbb    eax,0x58cc000b
   1eaf5:	jmp    0xa6fd:0xef72ea79
   1eafc:	cdq    
   1eafd:	add    DWORD PTR [edx+0x51ae0c77],ebp
   1eb03:	ja     0x1eb6b
   1eb05:	and    BYTE PTR ds:0x4f222c8f,bl
   1eb0b:	and    dl,BYTE PTR [ebp+0x29]
   1eb0e:	mov    ecx,0x44c76eed
   1eb13:	(bad)  
   1eb15:	inc    eax
   1eb16:	sub    BYTE PTR [ebx-0x2950ffe8],al
   1eb1c:	loope  0x1eb9c
   1eb1e:	imul   ebx,edi,0x3c65a1e2
   1eb24:	shl    BYTE PTR [esi-0x1e],1
   1eb27:	dec    ecx
   1eb28:	fstp   QWORD PTR [edx-0x775520af]
   1eb2e:	sub    bh,ah
   1eb30:	aam    0x11
   1eb32:	add    BYTE PTR [esi+0x28],bh
   1eb35:	shl    DWORD PTR [ebx+edi*2+0x29ad33c8],cl
   1eb3c:	test   eax,0xf2b3cf5a
   1eb41:	adc    DWORD PTR [eax-0x7d],eax
   1eb44:	inc    ebp
   1eb45:	dec    edx
   1eb46:	jno    0x1eb62
   1eb48:	mov    ds:0x239b8a79,eax
   1eb4d:	cmp    eax,0xa7a69da2
   1eb52:	add    ah,cl
   1eb54:	pop    esp
   1eb55:	add    BYTE PTR [eax],bl
   1eb57:	add    BYTE PTR [ebx],ch
   1eb59:	add    BYTE PTR [eax+eax*1],bl
   1eb5c:	aaa    
   1eb5d:	add    BYTE PTR [ecx],ah
   1eb5f:	add    BYTE PTR [ebx],dl
   1eb61:	add    BYTE PTR [edi],bl
   1eb63:	add    BYTE PTR [edx],cl
   1eb65:	add    BYTE PTR [esi],al
   1eb67:	add    BYTE PTR [esi],dl
   1eb69:	add    BYTE PTR [edi],ch
   1eb6b:	add    BYTE PTR [ecx+0x0],bh
   1eb6e:	push   esi
   1eb6f:	add    BYTE PTR [eax],al
   1eb71:	add    dl,al
   1eb73:	push   ebx
   1eb74:	addr16 loopne 0x1eb08
   1eb77:	ja     0x1eb16
   1eb79:	add    ecx,DWORD PTR [ebx-0x6b95fd17]
   1eb7f:	imul   esp,DWORD PTR [ecx+0x4b],0x49
   1eb83:	scas   al,BYTE PTR es:[edi]
   1eb84:	aam    0x11
   1eb86:	mov    ebx,?
   1eb88:	xor    esi,DWORD PTR [ebp-0x3c2e900a]
   1eb8e:	cmp    ah,BYTE PTR [edi+0x4]
   1eb91:	into   
   1eb92:	mov    edi,0x46eb1ed7
   1eb97:	jecxz  0x1eb99
   1eb99:	int3   
   1eb9a:	pop    esp
   1eb9b:	add    BYTE PTR [eax],bl
   1eb9d:	add    BYTE PTR [ecx],ah
   1eb9f:	add    BYTE PTR [ebx],dl
   1eba1:	add    BYTE PTR [edi],bl
   1eba3:	add    BYTE PTR [edx],cl
   1eba5:	add    BYTE PTR [esi],al
   1eba7:	add    BYTE PTR [ecx],bh
   1eba9:	add    BYTE PTR [ecx+0x0],bh
   1ebac:	push   esi
   1ebad:	add    BYTE PTR [eax],al
   1ebaf:	add    BYTE PTR [esp+eiz*4-0x3e],bh
   1ebb3:	dec    edi
   1ebb4:	call   DWORD PTR [edx+0x6b]
   1ebb7:	jno    0x1ebbe
   1ebb9:	not    bl
   1ebbb:	sub    DWORD PTR fs:[edx],0x8e4fbbcf
   1ebc2:	xchg   BYTE PTR [edi-0x6e],bl
   1ebc5:	fild   QWORD PTR [eax+0x4]
   1ebc8:	dec    esp
   1ebca:	mov    ebx,0x844c40a8
   1ebcf:	leave  
   1ebd0:	daa    
   1ebd1:	add    BYTE PTR [ebx+0x0],dl
   1ebd4:	jns    0x1ebd6
   1ebd6:	jae    0x1ebd8
   1ebd8:	inc    ebp
   1ebd9:	add    BYTE PTR [esi+0x0],dh
   1ebdc:	je     0x1ebde
   1ebde:	inc    ebx
   1ebdf:	add    BYTE PTR [eax],al
   1ebe1:	add    BYTE PTR [eax+eax*1+0x0],bl
   1ebe5:	add    BYTE PTR [edx+0x0],dh
   1ebe8:	jb     0x1ebea
   1ebea:	add    BYTE PTR [eax],al
   1ebec:	xchg   edi,edi
   1ebee:	ror    DWORD PTR [edx-0x47],0xdc
   1ebf2:	jmp    0x1ec4e
   1ebf4:	dec    ecx
   1ebf5:	inc    edi
   1ebf6:	mov    BYTE PTR [eax-0x1d],cl
   1ebf9:	fdiv   st,st(5)
   1ebfb:	jmp    0xb47fbee2
   1ec00:	test   eax,0xb31f2c18
   1ec05:	ins    DWORD PTR es:[edi],dx
   1ec06:	dec    ebx
   1ec07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   1ec08:	mov    ecx,0xd3da6196
   1ec0d:	add    BYTE PTR ds:0x5ccc0053,ah
   1ec13:	add    BYTE PTR [ebx+0x0],dh
   1ec16:	jns    0x1ec18
   1ec18:	jae    0x1ec1a
   1ec1a:	je     0x1ec1c
   1ec1c:	add    BYTE PTR gs:[ebp+0x0],ch
   1ec20:	jb     0x1ec22
   1ec22:	outs   dx,DWORD PTR ds:[esi]
   1ec23:	add    BYTE PTR [edi+0x0],ch
   1ec26:	je     0x1ec28
   1ec28:	pop    esp
   1ec29:	add    BYTE PTR [ebx+0x0],dh
   1ec2c:	jns    0x1ec2e
   1ec2e:	jae    0x1ec30
   1ec30:	je     0x1ec32
   1ec32:	add    BYTE PTR gs:[ebp+0x0],ch
   1ec36:	xor    eax,DWORD PTR [eax]
   1ec38:	xor    al,BYTE PTR [eax]
   1ec3a:	pop    esp
   1ec3b:	add    BYTE PTR ds:0x5300,ah
   1ec41:	add    BYTE PTR [ecx],dh
   1ec43:	xor    ch,BYTE PTR cs:[esi]
   1ec46:	xor    eax,DWORD PTR [eax]
   1ec48:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1ec4f:	arpl   WORD PTR [eax+eiz*1+0x6c],si
   1ec53:	outs   dx,BYTE PTR gs:[esi]
   1ec55:	addr16 je 0x1ecc0
   1ec58:	and    BYTE PTR [ebx+0x68],ah
   1ec5b:	arpl   WORD PTR gs:[ebx+0x0],bp
   1ec5f:	int3   
   1ec60:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1ec67:	arpl   WORD PTR [eax+eiz*1+0x64],si
   1ec6b:	popa   
   1ec6c:	je     0x1eccf
   1ec6e:	and    BYTE PTR [ebx+0x68],ah
   1ec71:	arpl   WORD PTR gs:[ebx+0x0],bp
   1ec75:	int3   
   1ec76:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ec7d:	and    BYTE PTR [ecx+ebp*2+0x73],ah
   1ec81:	je     0x1ece4
   1ec83:	outs   dx,BYTE PTR ds:[esi]
   1ec84:	arpl   WORD PTR [ebp+0x20],sp
   1ec87:	je     0x1ecf8
   1ec89:	outs   dx,DWORD PTR ds:[esi]
   1ec8a:	and    BYTE PTR [esi+0x61],ah
   1ec8d:	jb     0x1ecaf
   1ec8f:	bound  esp,QWORD PTR [ecx+0x63]
   1ec92:	imul   eax,DWORD PTR [eax],0x69
   1ec95:	outs   dx,BYTE PTR ds:[esi]
   1ec96:	jbe    0x1ecf9
   1ec98:	ins    BYTE PTR es:[edi],dx
   1ec99:	imul   esp,DWORD PTR [eax+eiz*1+0x64],0x61747369
   1eca1:	outs   dx,BYTE PTR ds:[esi]
   1eca2:	arpl   WORD PTR [ebp+0x20],sp
   1eca5:	arpl   WORD PTR [edi+0x64],bp
   1eca8:	add    BYTE PTR gs:[ecx+0x6e],ch
   1ecac:	jbe    0x1ed0f
   1ecae:	ins    BYTE PTR es:[edi],dx
   1ecaf:	imul   esp,DWORD PTR [eax+eiz*1+0x6c],0x72657469
   1ecb7:	popa   
   1ecb8:	ins    BYTE PTR es:[edi],dx
   1ecb9:	das    
   1ecba:	ins    BYTE PTR es:[edi],dx
   1ecbb:	outs   dx,BYTE PTR gs:[esi]
   1ecbd:	addr16 je 0x1ed28
   1ecc0:	and    BYTE PTR [ebx+0x6f],ah
   1ecc3:	fs add BYTE PTR gs:[ecx+0x6e],ch
   1ecc8:	jbe    0x1ed2b
   1ecca:	ins    BYTE PTR es:[edi],dx
   1eccb:	imul   esp,DWORD PTR [eax+eiz*1+0x64],0x61747369
   1ecd3:	outs   dx,BYTE PTR ds:[esi]
   1ecd4:	arpl   WORD PTR [ebp+0x73],sp
   1ecd7:	and    BYTE PTR [ebx+0x65],dh
   1ecda:	je     0x1ecdc
   1ecdc:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ece3:	and    BYTE PTR [ecx+ebp*2+0x74],ch
   1ece7:	gs jb  0x1ed4b
   1ecea:	ins    BYTE PTR es:[edi],dx
   1eceb:	das    
   1ecec:	ins    BYTE PTR es:[edi],dx
   1eced:	outs   dx,BYTE PTR gs:[esi]
   1ecef:	addr16 je 0x1ed5a
   1ecf2:	jae    0x1ed14
   1ecf4:	jae    0x1ed5b
   1ecf6:	je     0x1ecf8
   1ecf8:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ecff:	and    BYTE PTR [edx+0x69],ah
   1ed02:	je     0x1ed24
   1ed04:	ins    BYTE PTR es:[edi],dx
   1ed05:	outs   dx,BYTE PTR gs:[esi]
   1ed07:	addr16 je 0x1ed72
   1ed0a:	and    BYTE PTR [edx+0x65],dh
   1ed0d:	jo     0x1ed74
   1ed0f:	popa   
   1ed10:	je     0x1ed12
   1ed12:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ed19:	and    BYTE PTR [ebx+0x6f],ah
   1ed1c:	fs and BYTE PTR gs:[ebp+eiz*2+0x6e],ch
   1ed22:	addr16 je 0x1ed8d
   1ed25:	jae    0x1ed47
   1ed27:	jae    0x1ed8e
   1ed29:	je     0x1ed2b
   1ed2b:	int3   
   1ed2c:	je     0x1ed9d
   1ed2e:	outs   dx,DWORD PTR ds:[esi]
   1ed2f:	and    BYTE PTR [ebp+0x61],ch
   1ed32:	outs   dx,BYTE PTR ds:[esi]
   1ed33:	jns    0x1ed55
   1ed35:	ins    BYTE PTR es:[edi],dx
   1ed36:	outs   dx,BYTE PTR gs:[esi]
   1ed38:	addr16 je 0x1eda3
   1ed3b:	and    BYTE PTR [edi+0x72],ch
   1ed3e:	and    BYTE PTR [ecx+ebp*2+0x73],ah
   1ed42:	je     0x1eda5
   1ed44:	outs   dx,BYTE PTR ds:[esi]
   1ed45:	arpl   WORD PTR [ebp+0x20],sp
   1ed48:	jae    0x1edc3
   1ed4a:	ins    DWORD PTR es:[edi],dx
   1ed4b:	bound  ebp,QWORD PTR [edi+0x6c]
   1ed4e:	jae    0x1ed50
   1ed50:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ed57:	and    BYTE PTR [ebx+0x74],dh
   1ed5a:	outs   dx,DWORD PTR ds:[esi]
   1ed5b:	jb     0x1edc2
   1ed5d:	and    BYTE PTR fs:[edx+0x6c],ah
   1ed61:	outs   dx,DWORD PTR ds:[esi]
   1ed62:	arpl   WORD PTR [ebx+0x20],bp
   1ed65:	ins    BYTE PTR es:[edi],dx
   1ed66:	outs   dx,BYTE PTR gs:[esi]
   1ed68:	addr16 je 0x1edd3
   1ed6b:	jae    0x1ed6d
   1ed6d:	int3   
   1ed6e:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ed75:	and    BYTE PTR [edx+0x6c],ah
   1ed78:	outs   dx,DWORD PTR ds:[esi]
   1ed79:	arpl   WORD PTR [ebx+0x20],bp
   1ed7c:	je     0x1edf7
   1ed7e:	jo     0x1ede5
   1ed80:	add    ah,cl
   1ed82:	push   0x65646165
   1ed87:	jb     0x1eda9
   1ed89:	arpl   WORD PTR [edx+0x63],si
   1ed8c:	and    BYTE PTR [ebp+0x69],ch
   1ed8f:	jae    0x1edfe
   1ed91:	popa   
   1ed92:	je     0x1edf7
   1ed94:	push   0x6b6e7500
   1ed99:	outs   dx,BYTE PTR ds:[esi]
   1ed9a:	outs   dx,DWORD PTR ds:[esi]
   1ed9b:	ja     0x1ee0b
   1ed9d:	and    BYTE PTR [eax+0x65],ch
   1eda0:	popa   
   1eda1:	fs gs jb 0x1edc5
   1eda5:	data16 ins BYTE PTR es:[edi],dx
   1eda7:	popa   
   1eda8:	addr16 jae 0x1edcb
   1edab:	jae    0x1ee12
   1edad:	je     0x1edaf
   1edaf:	int3   
   1edb0:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1edb7:	arpl   WORD PTR [eax+eiz*1+0x68],si
   1edbb:	gs popa 
   1edbd:	fs gs jb 0x1ede1
   1edc1:	arpl   WORD PTR [eax+0x65],bp
   1edc4:	arpl   WORD PTR [ebx+0x0],bp
   1edc7:	int3   
   1edc8:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1edcf:	and    BYTE PTR [edi+0x69],dh
   1edd2:	outs   dx,BYTE PTR ds:[esi]
   1edd3:	outs   dx,DWORD PTR fs:[esi]
   1edd5:	ja     0x1edf7
   1edd7:	jae    0x1ee42
   1edd9:	jp     0x1ee40
   1eddb:	add    BYTE PTR [ebp+0x6e],dh
   1edde:	imul   ebp,DWORD PTR [esi+0x6f],0x77
   1ede2:	outs   dx,BYTE PTR ds:[esi]
   1ede3:	and    BYTE PTR [ebx+0x6f],ah
   1ede6:	ins    DWORD PTR es:[edi],dx
   1ede7:	jo     0x1ee5b
   1ede9:	gs jae 0x1ee5f
   1edec:	imul   ebp,DWORD PTR [edi+0x6e],0x74656d20
   1edf3:	.byte 0x68
   1edf4:	outs   dx,DWORD PTR ds:[esi]
   1edf5:	fs
	...

Disassembly of section INIT:

0007fc00 <INIT>:
   7fc00:	add    BYTE PTR [eax],al
   7fc02:	add    BYTE PTR [eax],al
   7fc04:	add    BYTE PTR [ecx+0x7e528],ah
   7fc0a:	mov    ecx,0xbb40e64e
   7fc0f:	test   eax,eax
   7fc11:	je     0x7fc17
   7fc13:	cmp    eax,ecx
   7fc15:	jne    0x7fc31
   7fc17:	mov    eax,ds:0x1ee58
   7fc1c:	mov    eax,DWORD PTR [eax]
   7fc1e:	xor    eax,0x7e528
   7fc23:	mov    ds:0x7e528,eax
   7fc28:	jne    0x7fc31
   7fc2a:	mov    eax,ecx
   7fc2c:	mov    ds:0x7e528,eax
   7fc31:	not    eax
   7fc33:	mov    ds:0x7e52c,eax
   7fc38:	ret    
   7fc39:	retf   0x4d6f
   7fc3c:	xchg   dl,cl
   7fc3e:	mov    edi,edi
   7fc40:	push   ebp
   7fc41:	mov    ebp,esp
   7fc43:	call   0x7fc05
   7fc48:	pop    ebp
   7fc49:	jmp    0x19186
   7fc4e:	int3   
   7fc4f:	int3   
   7fc50:	xchg   esp,eax
   7fc51:	cld    
   7fc52:	push   es
	...
   7fc5b:	add    BYTE PTR [eax+0x80006fe],ah
   7fc61:	out    dx,al
   7fc62:	add    BYTE PTR [eax],al
   7fc64:	mov    esp,?
   7fc66:	push   es
	...
   7fc6f:	add    dl,al
   7fc71:	inc    BYTE PTR [esi]
   7fc73:	add    BYTE PTR [eax],al
   7fc75:	out    dx,al
	...
   7fc8a:	add    BYTE PTR [eax],al
   7fc8c:	scas   al,BYTE PTR es:[edi]
   7fc8d:	inc    BYTE PTR [esi]
   7fc8f:	add    BYTE PTR [eax],al
   7fc91:	add    BYTE PTR [eax],al
   7fc93:	add    BYTE PTR [esi],al
   7fc95:	std    
   7fc96:	push   es
   7fc97:	add    BYTE PTR [eax],dl
   7fc99:	std    
   7fc9a:	push   es
   7fc9b:	add    BYTE PTR [edx],bl
   7fc9d:	std    
   7fc9e:	push   es
   7fc9f:	add    BYTE PTR [edi*8-0x2cbfffa],ah
   7fca6:	push   es
   7fca7:	add    BYTE PTR [ebp+edi*8+0x6],dl
   7fcab:	add    BYTE PTR [eax-0x3],ch
   7fcae:	push   es
   7fcaf:	add    BYTE PTR [edx-0x6bfff903],al
   7fcb5:	std    
   7fcb6:	push   es
   7fcb7:	add    BYTE PTR [ebp+edi*8-0x23bfffa],ch
   7fcbe:	push   es
   7fcbf:	add    dl,ch
   7fcc1:	std    
   7fcc2:	push   es
   7fcc3:	add    BYTE PTR [edx],al
   7fcc5:	inc    BYTE PTR [esi]
   7fcc7:	add    BYTE PTR [esi+edi*8],cl
   7fcca:	push   es
   7fccb:	add    BYTE PTR [esi],dl
   7fccd:	inc    BYTE PTR [esi]
   7fccf:	add    BYTE PTR [eax],dh
   7fcd1:	inc    BYTE PTR [esi]
   7fcd3:	add    BYTE PTR [esi-0x2],al
   7fcd6:	push   es
   7fcd7:	add    BYTE PTR [edx-0x2],dl
   7fcda:	push   es
   7fcdb:	add    BYTE PTR [esi-0x2],ah
   7fcde:	push   es
   7fcdf:	add    BYTE PTR [eax-0x2],dh
   7fce2:	push   es
   7fce3:	add    BYTE PTR [edx-0x6ffff902],al
   7fce9:	inc    BYTE PTR [esi]
   7fceb:	add    ah,bh
   7fced:	cld    
   7fcee:	push   es
   7fcef:	add    dh,cl
   7fcf1:	std    
   7fcf2:	push   es
   7fcf3:	add    dl,cl
   7fcf5:	inc    BYTE PTR [esi]
   7fcf7:	add    BYTE PTR [eax],al
   7fcf9:	add    BYTE PTR [eax],al
   7fcfb:	add    BYTE PTR [ebx],cl
   7fcfd:	add    eax,0x6c43775a
   7fd02:	outs   dx,DWORD PTR ds:[esi]
   7fd03:	jae    0x7fd6a
   7fd05:	add    BYTE PTR [ebx+0x5],bh
   7fd08:	pop    edi
   7fd09:	popa   
   7fd0a:	ins    BYTE PTR es:[edi],dx
   7fd0b:	ins    BYTE PTR es:[edi],dx
   7fd0c:	ins    DWORD PTR es:[edi],dx
   7fd0d:	jne    0x7fd7b
   7fd0f:	add    BYTE PTR [ecx+0x5],bh
   7fd12:	pop    edi
   7fd13:	popa   
   7fd14:	ins    BYTE PTR es:[edi],dx
   7fd15:	ins    BYTE PTR es:[edi],dx
   7fd16:	imul   esi,DWORD PTR fs:[esi+0x0],0x615f057d
   7fd1e:	ins    BYTE PTR es:[edi],dx
   7fd1f:	ins    BYTE PTR es:[edi],dx
   7fd20:	jb     0x7fd87
   7fd22:	ins    DWORD PTR es:[edi],dx
   7fd23:	add    BYTE PTR [ebp+0x0],dh
   7fd26:	inc    ebp
   7fd27:	js     0x7fd7b
   7fd29:	popa   
   7fd2a:	imul   esi,DWORD PTR [ebx+0x65],0x74617453
   7fd31:	jne    0x7fda6
   7fd33:	add    BYTE PTR [edx+0x0],al
   7fd36:	inc    ebp
   7fd37:	js     0x7fd7a
   7fd39:	ins    BYTE PTR es:[edi],dx
   7fd3a:	ins    BYTE PTR es:[edi],dx
   7fd3b:	outs   dx,DWORD PTR ds:[esi]
   7fd3c:	arpl   WORD PTR [ecx+0x74],sp
   7fd3f:	gs push eax
   7fd41:	outs   dx,DWORD PTR ds:[esi]
   7fd42:	outs   dx,DWORD PTR ds:[esi]
   7fd43:	ins    BYTE PTR es:[edi],dx
   7fd44:	push   edi
   7fd45:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0x72506761
   7fd4d:	imul   ebp,DWORD PTR [edi+0x72],0x797469
   7fd54:	dec    esi
   7fd55:	add    BYTE PTR [ebp+0x78],al
   7fd58:	inc    esi
   7fd59:	jb     0x7fdc0
   7fd5b:	gs push eax
   7fd5d:	outs   dx,DWORD PTR ds:[esi]
   7fd5e:	outs   dx,DWORD PTR ds:[esi]
   7fd5f:	ins    BYTE PTR es:[edi],dx
   7fd60:	push   edi
   7fd61:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0xbd006761
   7fd69:	add    edx,DWORD PTR [edx+0x74]
   7fd6c:	ins    BYTE PTR es:[edi],dx
   7fd6d:	inc    ebx
   7fd6e:	outs   dx,DWORD PTR ds:[esi]
   7fd6f:	ins    DWORD PTR es:[edi],dx
   7fd70:	jo     0x7fdd3
   7fd72:	jb     0x7fdd9
   7fd74:	push   ebp
   7fd75:	outs   dx,BYTE PTR ds:[esi]
   7fd76:	imul   esp,DWORD PTR [ebx+0x6f],0x74536564
   7fd7d:	jb     0x7fde8
   7fd7f:	outs   dx,BYTE PTR ds:[esi]
   7fd80:	add    BYTE PTR [bp+si+0x2],al
   7fd84:	dec    ebx
   7fd85:	gs push edx
   7fd87:	gs ins BYTE PTR es:[edi],dx
   7fd89:	gs popa 
   7fd8b:	jae    0x7fdf2
   7fd8d:	dec    ebp
   7fd8e:	jne    0x7fe04
   7fd90:	gs js  0x7fd93
   7fd93:	add    BYTE PTR [ebp+0x2],ch
   7fd96:	dec    ebx
   7fd97:	gs push edi
   7fd99:	popa   
   7fd9a:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6e695372
   7fda2:	ins    BYTE PTR es:[di],dx
   7fda4:	gs dec edi
   7fda6:	bound  ebp,QWORD PTR [edx+0x65]
   7fda9:	arpl   WORD PTR [eax+eax*1+0x41],si
   7fdad:	add    BYTE PTR [ebp+0x78],al
   7fdb0:	inc    ecx
   7fdb1:	ins    BYTE PTR es:[edi],dx
   7fdb2:	ins    BYTE PTR es:[edi],dx
   7fdb3:	outs   dx,DWORD PTR ds:[esi]
   7fdb4:	arpl   WORD PTR [ecx+0x74],sp
   7fdb7:	gs push eax
   7fdb9:	outs   dx,DWORD PTR ds:[esi]
   7fdba:	outs   dx,DWORD PTR ds:[esi]
   7fdbb:	ins    BYTE PTR es:[edi],dx
   7fdbc:	push   edi
   7fdbd:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0xa7006761
   7fdc5:	add    eax,0x636d656d
   7fdca:	jo     0x7fe45
   7fdcc:	add    BYTE PTR [eax],al
   7fdce:	mov    eax,ds:0x476d4d02
   7fdd3:	gs je  0x7fe29
   7fdd6:	jns    0x7fe4b
   7fdd8:	je     0x7fe3f
   7fdda:	ins    DWORD PTR es:[edi],dx
   7fddb:	push   edx
   7fddc:	outs   dx,DWORD PTR ds:[esi]
   7fddd:	jne    0x7fe53
   7fddf:	imul   ebp,DWORD PTR [esi+0x65],0x72646441
   7fde6:	gs jae 0x7fe5c
   7fde9:	add    bh,al
   7fdeb:	add    edx,DWORD PTR [edx+0x74]
   7fdee:	ins    BYTE PTR es:[edi],dx
   7fdef:	inc    ebx
   7fdf0:	outs   dx,DWORD PTR ds:[esi]
   7fdf1:	jo     0x7fe6c
   7fdf3:	push   ebp
   7fdf4:	outs   dx,BYTE PTR ds:[esi]
   7fdf5:	imul   esp,DWORD PTR [ebx+0x6f],0x74536564
   7fdfc:	jb     0x7fe67
   7fdfe:	outs   dx,BYTE PTR ds:[esi]
   7fdff:	add    BYTE PTR [bx+si],al
   7fe02:	mov    DWORD PTR ds:0x6e736377,0x746163
   7fe0c:	test   eax,0x6d656d05
   7fe11:	jae    0x7fe78
   7fe13:	je     0x7fe15
   7fe15:	add    BYTE PTR [esi],al
   7fe17:	add    eax,0x6c41775a
   7fe1c:	ins    BYTE PTR es:[edi],dx
   7fe1d:	outs   dx,DWORD PTR ds:[esi]
   7fe1e:	arpl   WORD PTR [ecx+0x74],sp
   7fe21:	gs push esi
   7fe23:	imul   esi,DWORD PTR [edx+0x74],0x4d6c6175
   7fe2a:	gs ins DWORD PTR es:[edi],dx
   7fe2c:	outs   dx,DWORD PTR ds:[esi]
   7fe2d:	jb     0x7fea8
   7fe2f:	add    bl,ah
   7fe31:	add    DWORD PTR [ecx+0x6f],ecx
   7fe34:	inc    bx
   7fe36:	outs   dx,DWORD PTR ds:[esi]
   7fe37:	ins    DWORD PTR es:[edi],dx
   7fe38:	jo     0x7fea6
   7fe3a:	gs je  0x7fea2
   7fe3d:	push   edx
   7fe3e:	gs jno 0x7feb6
   7fe41:	gs jae 0x7feb8
   7fe44:	add    BYTE PTR [eax],al
   7fe46:	mov    ecx,0x70777305
   7fe4b:	jb     0x7feb6
   7fe4d:	outs   dx,BYTE PTR ds:[esi]
   7fe4e:	je     0x7feb6
   7fe50:	add    BYTE PTR [eax],al
   7fe52:	xor    eax,DWORD PTR [edx]
   7fe54:	dec    ebx
   7fe55:	gs push ecx
   7fe57:	jne    0x7febe
   7fe59:	jb     0x7fed4
   7fe5b:	push   ebx
   7fe5c:	jns    0x7fed1
   7fe5e:	je     0x7fec5
   7fe60:	ins    DWORD PTR es:[edi],dx
   7fe61:	push   esp
   7fe62:	imul   ebp,DWORD PTR [ebp+0x65],0x7305ac00
   7fe69:	jo     0x7fedd
   7fe6b:	imul   ebp,DWORD PTR [esi+0x74],0x5130066
   7fe72:	pop    edx
   7fe73:	ja     0x7feb8
   7fe75:	jb     0x7fedc
   7fe77:	popa   
   7fe78:	je     0x7fedf
   7fe7a:	push   ebx
   7fe7b:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
   7fe80:	outs   dx,BYTE PTR ds:[esi]
   7fe81:	add    BYTE PTR [esi+0x2],ah
   7fe84:	dec    ebx
   7fe85:	gs push esp
   7fe87:	imul   esp,DWORD PTR [ebx+0x6b],0x6e756f43
   7fe8e:	je     0x7fe90
   7fe90:	test   BYTE PTR [ecx],0x4b
   7fe93:	gs inc edx
   7fe95:	jne    0x7fefe
   7fe97:	inc    ebx
   7fe98:	push   0x456b6365
   7fe9d:	js     0x7fe9f
   7fe9f:	add    BYTE PTR [esi+0x74],ch
   7fea2:	outs   dx,DWORD PTR ds:[esi]
   7fea3:	jae    0x7ff10
   7fea5:	jb     0x7ff15
   7fea7:	ins    BYTE PTR es:[edi],dx
   7fea8:	cs gs js 0x7ff11
   7feac:	add    BYTE PTR [eax],al
   7feae:	inc    eax
   7feaf:	add    BYTE PTR [ebx+0x65],cl
   7feb2:	inc    edi
   7feb3:	gs je  0x7fef9
   7feb6:	jne    0x7ff2a
   7feb8:	jb     0x7ff1f
   7feba:	outs   dx,BYTE PTR ds:[esi]
   7febb:	je     0x7ff06
   7febd:	jb     0x7ff30
   7febf:	ins    BYTE PTR es:[edi],dx
   7fec0:	add    BYTE PTR [eax],al
   7fec2:	dec    eax
   7fec3:	inc    ecx
   7fec4:	dec    esp
   7fec5:	cs fs ins BYTE PTR es:[edi],dx
   7fec8:	ins    BYTE PTR es:[edi],dx
   7fec9:	add    BYTE PTR [eax+0x6c745204],ah
   7fecf:	push   ebp
   7fed0:	outs   dx,BYTE PTR ds:[esi]
   7fed1:	ja     0x7ff3c
   7fed3:	outs   dx,BYTE PTR ds:[esi]
   7fed4:	fs
	...
