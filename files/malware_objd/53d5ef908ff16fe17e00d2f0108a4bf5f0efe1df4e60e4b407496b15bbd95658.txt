
53d5ef908ff16fe17e00d2f0108a4bf5f0efe1df4e60e4b407496b15bbd95658.exe:     file format pei-i386


Disassembly of section .text:

00402000 <.text>:
  402000:	push   ebp
  402001:	mov    ebp,esp
  402003:	sub    esp,0xc
  402006:	mov    eax,DWORD PTR [ebp+0x8]
  402009:	mov    DWORD PTR [ebp-0x8],eax
  40200c:	mov    ecx,DWORD PTR [ebp+0xc]
  40200f:	mov    DWORD PTR [ebp-0xc],ecx
  402012:	mov    DWORD PTR [ebp-0x4],0x22b
  402019:	mov    edx,DWORD PTR [ebp-0x8]
  40201c:	cmp    edx,DWORD PTR [ebp-0xc]
  40201f:	jae    0x40202f
  402021:	mov    DWORD PTR [ebp-0x4],0x22b
  402028:	mov    eax,DWORD PTR [ebp-0x8]
  40202b:	jmp    0x402039
  40202d:	jmp    0x402039
  40202f:	mov    DWORD PTR [ebp-0x4],0x22b
  402036:	mov    eax,DWORD PTR [ebp-0xc]
  402039:	mov    esp,ebp
  40203b:	pop    ebp
  40203c:	ret    
  40203d:	int3   
  40203e:	int3   
  40203f:	int3   
  402040:	push   ebp
  402041:	mov    ebp,esp
  402043:	sub    esp,0xc
  402046:	mov    DWORD PTR [ebp-0x8],0x1e4dc
  40204d:	mov    DWORD PTR [ebp-0xc],0x3000
  402054:	mov    DWORD PTR [ebp-0x4],0x40
  40205b:	mov    eax,DWORD PTR [ebp-0x4]
  40205e:	push   eax
  40205f:	mov    ecx,DWORD PTR [ebp-0xc]
  402062:	push   ecx
  402063:	mov    edx,DWORD PTR [ebp+0x8]
  402066:	push   edx
  402067:	push   0x0
  402069:	push   0xffffffff
  40206b:	call   DWORD PTR ds:0x40113c
  402071:	mov    esp,ebp
  402073:	pop    ebp
  402074:	ret    
  402075:	int3   
  402076:	int3   
  402077:	int3   
  402078:	int3   
  402079:	int3   
  40207a:	int3   
  40207b:	int3   
  40207c:	int3   
  40207d:	int3   
  40207e:	int3   
  40207f:	int3   
  402080:	push   ebp
  402081:	mov    ebp,esp
  402083:	pop    ebp
  402084:	ret    
  402085:	int3   
  402086:	int3   
  402087:	int3   
  402088:	int3   
  402089:	int3   
  40208a:	int3   
  40208b:	int3   
  40208c:	int3   
  40208d:	int3   
  40208e:	int3   
  40208f:	int3   
  402090:	push   ebp
  402091:	mov    ebp,esp
  402093:	mov    DWORD PTR ds:0x401220,0x4027e4
  40209d:	pop    ebp
  40209e:	ret    
  40209f:	int3   
  4020a0:	push   ebp
  4020a1:	mov    ebp,esp
  4020a3:	mov    DWORD PTR ds:0x401220,0x443644
  4020ad:	pop    ebp
  4020ae:	ret    
  4020af:	int3   
  4020b0:	push   ebp
  4020b1:	mov    ebp,esp
  4020b3:	mov    eax,DWORD PTR [ebp+0x8]
  4020b6:	mov    eax,DWORD PTR [eax-0x4]
  4020b9:	pop    ebp
  4020ba:	ret    
  4020bb:	int3   
  4020bc:	int3   
  4020bd:	int3   
  4020be:	int3   
  4020bf:	int3   
  4020c0:	push   ebp
  4020c1:	mov    ebp,esp
  4020c3:	mov    eax,DWORD PTR [ebp+0xc]
  4020c6:	mov    ecx,DWORD PTR [ebp+0x8]
  4020c9:	movzx  eax,WORD PTR [ecx+eax*2]
  4020cd:	pop    ebp
  4020ce:	ret    
  4020cf:	int3   
  4020d0:	push   ebp
  4020d1:	mov    ebp,esp
  4020d3:	sub    esp,0xc
  4020d6:	mov    DWORD PTR [ebp-0x4],0x0
  4020dd:	jmp    0x4020e8
  4020df:	mov    eax,DWORD PTR [ebp-0x4]
  4020e2:	add    eax,0x1
  4020e5:	mov    DWORD PTR [ebp-0x4],eax
  4020e8:	mov    ecx,DWORD PTR [ebp-0x4]
  4020eb:	cmp    ecx,DWORD PTR [ebp+0x8]
  4020ee:	jae    0x402153
  4020f0:	mov    edx,DWORD PTR [ebp-0x4]
  4020f3:	push   edx
  4020f4:	mov    eax,DWORD PTR [ebp+0xc]
  4020f7:	push   eax
  4020f8:	call   0x4020c0
  4020fd:	add    esp,0x8
  402100:	sar    eax,0xc
  402103:	cmp    eax,0x3
  402106:	jne    0x402151
  402108:	mov    DWORD PTR [ebp-0xc],0xfff
  40210f:	mov    ecx,DWORD PTR [ebp-0x4]
  402112:	push   ecx
  402113:	mov    edx,DWORD PTR [ebp+0xc]
  402116:	push   edx
  402117:	call   0x4020c0
  40211c:	add    esp,0x8
  40211f:	and    eax,DWORD PTR [ebp-0xc]
  402122:	add    eax,0x2d23
  402127:	mov    DWORD PTR [ebp-0x8],eax
  40212a:	mov    eax,DWORD PTR [ebp+0x18]
  40212d:	mov    ecx,DWORD PTR [ebp+0x10]
  402130:	add    ecx,DWORD PTR [eax]
  402132:	mov    edx,DWORD PTR [ebp-0x8]
  402135:	mov    eax,DWORD PTR [ecx+edx*1-0x2d23]
  40213c:	add    eax,DWORD PTR [ebp+0x14]
  40213f:	mov    ecx,DWORD PTR [ebp+0x18]
  402142:	mov    edx,DWORD PTR [ebp+0x10]
  402145:	add    edx,DWORD PTR [ecx]
  402147:	mov    ecx,DWORD PTR [ebp-0x8]
  40214a:	mov    DWORD PTR [edx+ecx*1-0x2d23],eax
  402151:	jmp    0x4020df
  402153:	mov    esp,ebp
  402155:	pop    ebp
  402156:	ret    
  402157:	int3   
  402158:	int3   
  402159:	int3   
  40215a:	int3   
  40215b:	int3   
  40215c:	int3   
  40215d:	int3   
  40215e:	int3   
  40215f:	int3   
  402160:	push   ebp
  402161:	mov    ebp,esp
  402163:	sub    esp,0x30
  402166:	mov    DWORD PTR [ebp-0x8],0x11cb
  40216d:	mov    DWORD PTR [ebp-0x10],0x0
  402174:	jmp    0x40217f
  402176:	mov    eax,DWORD PTR [ebp-0x10]
  402179:	add    eax,0x4
  40217c:	mov    DWORD PTR [ebp-0x10],eax
  40217f:	mov    ecx,DWORD PTR [ebp-0x10]
  402182:	cmp    ecx,DWORD PTR [ebp+0xc]
  402185:	jae    0x402246
  40218b:	mov    DWORD PTR [ebp-0x8],0x4189
  402192:	mov    edx,DWORD PTR [ebp-0x10]
  402195:	add    edx,0xde2f
  40219b:	mov    DWORD PTR [ebp-0x28],edx
  40219e:	mov    eax,DWORD PTR [ebp-0x28]
  4021a1:	mov    DWORD PTR [ebp-0x24],eax
  4021a4:	mov    ecx,DWORD PTR [ebp-0x24]
  4021a7:	mov    DWORD PTR [ebp-0x20],ecx
  4021aa:	mov    edx,DWORD PTR [ebp-0x20]
  4021ad:	mov    DWORD PTR [ebp-0x1c],edx
  4021b0:	cmp    DWORD PTR [ebp-0x10],0x0
  4021b4:	jne    0x402206
  4021b6:	push   0x104
  4021bb:	push   0x401224
  4021c0:	call   DWORD PTR ds:0x401140
  4021c6:	push   0x401000
  4021cb:	push   0x401224
  4021d0:	call   DWORD PTR ds:0x401144
  4021d6:	push   0x0
  4021d8:	push   0x80
  4021dd:	push   0x3
  4021df:	push   0x0
  4021e1:	push   0x3
  4021e3:	push   0x1
  4021e5:	push   0x401224
  4021ea:	call   DWORD PTR ds:0x401148
  4021f0:	mov    DWORD PTR [ebp-0x4],eax
  4021f3:	cmp    DWORD PTR [ebp-0x4],0xffffffff
  4021f7:	je     0x4021ff
  4021f9:	cmp    DWORD PTR [ebp-0x4],0x0
  4021fd:	jne    0x402206
  4021ff:	mov    eax,0x42
  402204:	jmp    0x402246
  402206:	mov    eax,DWORD PTR [ebp-0x1c]
  402209:	mov    DWORD PTR [ebp-0x30],eax
  40220c:	mov    ecx,DWORD PTR [ebp-0x30]
  40220f:	mov    DWORD PTR [ebp-0x14],ecx
  402212:	mov    edx,DWORD PTR [ebp-0x10]
  402215:	mov    DWORD PTR [ebp-0x18],edx
  402218:	mov    eax,DWORD PTR [ebp+0x8]
  40221b:	add    eax,DWORD PTR [ebp-0x10]
  40221e:	mov    DWORD PTR [ebp-0x2c],eax
  402221:	mov    ecx,DWORD PTR [ebp-0x2c]
  402224:	mov    edx,DWORD PTR [ecx]
  402226:	add    edx,DWORD PTR [ebp-0x18]
  402229:	mov    eax,DWORD PTR [ebp-0x2c]
  40222c:	mov    DWORD PTR [eax],edx
  40222e:	mov    ecx,DWORD PTR [ebp+0x8]
  402231:	add    ecx,DWORD PTR [ebp-0x10]
  402234:	mov    edx,DWORD PTR [ecx]
  402236:	xor    edx,DWORD PTR [ebp-0x14]
  402239:	mov    eax,DWORD PTR [ebp+0x8]
  40223c:	add    eax,DWORD PTR [ebp-0x10]
  40223f:	mov    DWORD PTR [eax],edx
  402241:	jmp    0x402176
  402246:	mov    esp,ebp
  402248:	pop    ebp
  402249:	ret    
  40224a:	int3   
  40224b:	int3   
  40224c:	int3   
  40224d:	int3   
  40224e:	int3   
  40224f:	int3   
  402250:	push   ebp
  402251:	mov    ebp,esp
  402253:	sub    esp,0x14
  402256:	mov    eax,DWORD PTR [ebp+0x8]
  402259:	cmp    DWORD PTR [eax+0x4],0x0
  40225d:	je     0x4022a7
  40225f:	mov    DWORD PTR [ebp-0x14],0x2a1
  402266:	mov    ecx,DWORD PTR [ebp+0x8]
  402269:	mov    edx,DWORD PTR [ecx+0x4]
  40226c:	sub    edx,0x8
  40226f:	shr    edx,1
  402271:	mov    DWORD PTR [ebp-0xc],edx
  402274:	mov    eax,DWORD PTR [ebp+0x8]
  402277:	add    eax,0x8
  40227a:	mov    DWORD PTR [ebp-0x10],eax
  40227d:	mov    ecx,DWORD PTR [ebp+0x8]
  402280:	push   ecx
  402281:	mov    edx,DWORD PTR [ebp+0x10]
  402284:	push   edx
  402285:	mov    eax,DWORD PTR [ebp+0xc]
  402288:	push   eax
  402289:	mov    ecx,DWORD PTR [ebp-0x10]
  40228c:	push   ecx
  40228d:	mov    edx,DWORD PTR [ebp-0xc]
  402290:	push   edx
  402291:	call   0x4020d0
  402296:	add    esp,0x14
  402299:	mov    eax,DWORD PTR [ebp+0x8]
  40229c:	mov    ecx,DWORD PTR [ebp+0x8]
  40229f:	add    ecx,DWORD PTR [eax+0x4]
  4022a2:	mov    DWORD PTR [ebp+0x8],ecx
  4022a5:	jmp    0x402256
  4022a7:	mov    esp,ebp
  4022a9:	pop    ebp
  4022aa:	ret    
  4022ab:	int3   
  4022ac:	int3   
  4022ad:	int3   
  4022ae:	int3   
  4022af:	int3   
  4022b0:	push   ebp
  4022b1:	mov    ebp,esp
  4022b3:	sub    esp,0x18
  4022b6:	mov    DWORD PTR [ebp-0x18],0x60
  4022bd:	mov    DWORD PTR [ebp-0xc],0x40102c
  4022c4:	lea    eax,[ebp-0x8]
  4022c7:	push   eax
  4022c8:	push   0x5b24
  4022cd:	push   0x3edd
  4022d2:	call   DWORD PTR ds:0x40114c
  4022d8:	cmp    DWORD PTR [ebp-0x4],0x1cc364f
  4022df:	je     0x4022e6
  4022e1:	call   0x402450
  4022e6:	push   0x1
  4022e8:	push   0x1
  4022ea:	push   0x1
  4022ec:	push   0x0
  4022ee:	push   0xffffffff
  4022f0:	call   DWORD PTR ds:0x40113c
  4022f6:	mov    DWORD PTR [ebp-0x18],0x42
  4022fd:	mov    ecx,DWORD PTR ds:0x401160
  402303:	mov    DWORD PTR ds:0x401328,ecx
  402309:	mov    DWORD PTR [ebp-0x18],0x6
  402310:	mov    edx,DWORD PTR [ebp-0xc]
  402313:	mov    BYTE PTR [edx+0x1],0x4f
  402317:	lea    eax,[ebp-0x14]
  40231a:	push   eax
  40231b:	mov    ecx,DWORD PTR [ebp-0xc]
  40231e:	push   ecx
  40231f:	push   0x80000002
  402324:	call   DWORD PTR ds:0x401328
  40232a:	test   eax,eax
  40232c:	je     0x402332
  40232e:	xor    eax,eax
  402330:	jmp    0x40238f
  402332:	mov    DWORD PTR [ebp-0x18],0x60
  402339:	lea    edx,[ebp-0x14]
  40233c:	push   edx
  40233d:	push   0x401038
  402342:	mov    eax,DWORD PTR [ebp-0x14]
  402345:	push   eax
  402346:	call   DWORD PTR ds:0x401328
  40234c:	test   eax,eax
  40234e:	je     0x402354
  402350:	xor    eax,eax
  402352:	jmp    0x40238f
  402354:	lea    ecx,[ebp-0x14]
  402357:	push   ecx
  402358:	push   0x401040
  40235d:	mov    edx,DWORD PTR [ebp-0x14]
  402360:	push   edx
  402361:	call   DWORD PTR ds:0x401328
  402367:	test   eax,eax
  402369:	je     0x40236f
  40236b:	xor    eax,eax
  40236d:	jmp    0x40238f
  40236f:	lea    eax,[ebp-0x14]
  402372:	push   eax
  402373:	push   0x40107c
  402378:	mov    ecx,DWORD PTR [ebp-0x14]
  40237b:	push   ecx
  40237c:	call   DWORD PTR ds:0x401328
  402382:	test   eax,eax
  402384:	jne    0x40238a
  402386:	xor    eax,eax
  402388:	jmp    0x40238f
  40238a:	call   0x402090
  40238f:	mov    esp,ebp
  402391:	pop    ebp
  402392:	ret    0x10
  402395:	int3   
  402396:	int3   
  402397:	int3   
  402398:	int3   
  402399:	int3   
  40239a:	int3   
  40239b:	int3   
  40239c:	int3   
  40239d:	int3   
  40239e:	int3   
  40239f:	int3   
  4023a0:	push   ebp
  4023a1:	mov    ebp,esp
  4023a3:	sub    esp,0x12c
  4023a9:	mov    DWORD PTR [ebp-0x120],0x7c
  4023b3:	mov    DWORD PTR [ebp-0x114],0x0
  4023bd:	mov    eax,ds:0x401150
  4023c2:	mov    DWORD PTR [ebp-0x4],eax
  4023c5:	push   0x104
  4023ca:	lea    ecx,[ebp-0x110]
  4023d0:	push   ecx
  4023d1:	call   DWORD PTR [ebp-0x4]
  4023d4:	mov    edx,DWORD PTR ds:0x401154
  4023da:	mov    DWORD PTR [ebp-0x124],edx
  4023e0:	mov    eax,ds:0x401158
  4023e5:	mov    DWORD PTR [ebp-0x118],eax
  4023eb:	mov    DWORD PTR [ebp-0x128],0x0
  4023f5:	jmp    0x402406
  4023f7:	mov    ecx,DWORD PTR [ebp-0x128]
  4023fd:	add    ecx,0x1
  402400:	mov    DWORD PTR [ebp-0x128],ecx
  402406:	mov    edx,DWORD PTR [ebp-0x128]
  40240c:	cmp    edx,DWORD PTR [ebp+0x10]
  40240f:	jge    0x40244a
  402411:	mov    eax,DWORD PTR [ebp+0xc]
  402414:	add    eax,DWORD PTR [ebp-0x128]
  40241a:	movzx  ecx,BYTE PTR [eax]
  40241d:	mov    DWORD PTR [ebp-0x12c],ecx
  402423:	mov    DWORD PTR [ebp-0x120],0x7c
  40242d:	mov    edx,DWORD PTR [ebp+0x8]
  402430:	add    edx,DWORD PTR [ebp-0x128]
  402436:	mov    al,BYTE PTR [ebp-0x12c]
  40243c:	mov    BYTE PTR [edx],al
  40243e:	mov    DWORD PTR [ebp-0x120],0x33
  402448:	jmp    0x4023f7
  40244a:	mov    esp,ebp
  40244c:	pop    ebp
  40244d:	ret    
  40244e:	int3   
  40244f:	int3   
  402450:	push   ebp
  402451:	mov    ebp,esp
  402453:	sub    esp,0x88
  402459:	mov    DWORD PTR ds:0x40132c,ebp
  40245f:	pusha  
  402460:	mov    DWORD PTR [ebp-0x3c],0x0
  402467:	mov    DWORD PTR [ebp-0x50],0x80000002
  40246e:	mov    DWORD PTR [ebp-0x34],0x64
  402475:	mov    DWORD PTR [ebp-0x1c],0x2
  40247c:	mov    DWORD PTR [ebp-0x3c],0x0
  402483:	mov    DWORD PTR [ebp-0x24],0x0
  40248a:	mov    DWORD PTR [ebp-0x30],0x1
  402491:	mov    DWORD PTR [ebp-0x14],0x0
  402498:	mov    DWORD PTR [ebp-0x34],0x64
  40249f:	mov    DWORD PTR [ebp-0x1c],0x2
  4024a6:	mov    DWORD PTR [ebp-0x3c],0x0
  4024ad:	mov    DWORD PTR [ebp-0x24],0x0
  4024b4:	mov    DWORD PTR [ebp-0x30],0x1
  4024bb:	mov    DWORD PTR [ebp-0x18],0x3
  4024c2:	mov    DWORD PTR [ebp-0x14],0x0
  4024c9:	mov    DWORD PTR [ebp-0x34],0x64
  4024d0:	mov    DWORD PTR [ebp-0x1c],0x2
  4024d7:	push   0x104
  4024dc:	push   0x401224
  4024e1:	call   DWORD PTR ds:0x401150
  4024e7:	mov    DWORD PTR [ebp-0x74],0x60
  4024ee:	mov    DWORD PTR [ebp-0x68],0x401080
  4024f5:	lea    eax,[ebp-0x64]
  4024f8:	push   eax
  4024f9:	push   0x5b24
  4024fe:	push   0x3edd
  402503:	call   DWORD PTR ds:0x40114c
  402509:	cmp    DWORD PTR [ebp-0x60],0x1cc364f
  402510:	je     0x402517
  402512:	call   0x402450
  402517:	push   0x1
  402519:	push   0x1
  40251b:	push   0x1
  40251d:	push   0x0
  40251f:	push   0xffffffff
  402521:	call   DWORD PTR ds:0x40113c
  402527:	mov    DWORD PTR [ebp-0x74],0x42
  40252e:	mov    ecx,DWORD PTR ds:0x401160
  402534:	mov    DWORD PTR ds:0x401328,ecx
  40253a:	mov    DWORD PTR [ebp-0x74],0x6
  402541:	mov    edx,DWORD PTR [ebp-0x68]
  402544:	mov    BYTE PTR [edx+0x1],0x4f
  402548:	lea    eax,[ebp-0x70]
  40254b:	push   eax
  40254c:	mov    ecx,DWORD PTR [ebp-0x68]
  40254f:	push   ecx
  402550:	push   0x80000002
  402555:	call   DWORD PTR ds:0x401328
  40255b:	test   eax,eax
  40255d:	je     0x402566
  40255f:	xor    eax,eax
  402561:	jmp    0x4027b4
  402566:	mov    DWORD PTR [ebp-0x74],0x60
  40256d:	lea    edx,[ebp-0x70]
  402570:	push   edx
  402571:	push   0x40108c
  402576:	mov    eax,DWORD PTR [ebp-0x70]
  402579:	push   eax
  40257a:	call   DWORD PTR ds:0x401328
  402580:	test   eax,eax
  402582:	je     0x40258b
  402584:	xor    eax,eax
  402586:	jmp    0x4027b4
  40258b:	lea    ecx,[ebp-0x70]
  40258e:	push   ecx
  40258f:	push   0x401094
  402594:	mov    edx,DWORD PTR [ebp-0x70]
  402597:	push   edx
  402598:	call   DWORD PTR ds:0x401328
  40259e:	test   eax,eax
  4025a0:	je     0x4025a9
  4025a2:	xor    eax,eax
  4025a4:	jmp    0x4027b4
  4025a9:	lea    eax,[ebp-0x70]
  4025ac:	push   eax
  4025ad:	push   0x4010d0
  4025b2:	mov    ecx,DWORD PTR [ebp-0x70]
  4025b5:	push   ecx
  4025b6:	call   DWORD PTR ds:0x401328
  4025bc:	test   eax,eax
  4025be:	jne    0x4025c7
  4025c0:	xor    eax,eax
  4025c2:	jmp    0x4027b4
  4025c7:	call   0x402090
  4025cc:	mov    DWORD PTR [ebp-0x3c],0x0
  4025d3:	mov    DWORD PTR [ebp-0x24],0x0
  4025da:	mov    DWORD PTR [ebp-0x30],0x1
  4025e1:	mov    DWORD PTR [ebp-0x18],0x3
  4025e8:	mov    edx,DWORD PTR ds:0x401220
  4025ee:	push   edx
  4025ef:	call   0x4020b0
  4025f4:	add    esp,0x4
  4025f7:	mov    DWORD PTR [ebp-0x40],eax
  4025fa:	mov    eax,DWORD PTR [ebp-0x40]
  4025fd:	push   eax
  4025fe:	call   0x402040
  402603:	add    esp,0x4
  402606:	mov    DWORD PTR [ebp-0x38],eax
  402609:	mov    ecx,DWORD PTR [ebp-0x40]
  40260c:	push   ecx
  40260d:	push   0x0
  40260f:	mov    edx,DWORD PTR [ebp-0x38]
  402612:	push   edx
  402613:	call   0x402080
  402618:	add    esp,0xc
  40261b:	mov    eax,DWORD PTR [ebp-0x40]
  40261e:	mov    DWORD PTR [ebp-0x48],eax
  402621:	mov    ecx,DWORD PTR [ebp-0x3c]
  402624:	cmp    ecx,DWORD PTR [ebp-0x40]
  402627:	jae    0x402679
  402629:	mov    edx,DWORD PTR [ebp-0x48]
  40262c:	push   edx
  40262d:	mov    eax,DWORD PTR [ebp-0x34]
  402630:	push   eax
  402631:	call   0x402000
  402636:	add    esp,0x8
  402639:	mov    DWORD PTR [ebp-0x4c],eax
  40263c:	mov    ecx,DWORD PTR [ebp-0x4c]
  40263f:	push   ecx
  402640:	mov    edx,DWORD PTR ds:0x401220
  402646:	add    edx,DWORD PTR [ebp-0x24]
  402649:	push   edx
  40264a:	mov    eax,DWORD PTR [ebp-0x38]
  40264d:	add    eax,DWORD PTR [ebp-0x3c]
  402650:	push   eax
  402651:	call   0x4023a0
  402656:	add    esp,0xc
  402659:	mov    ecx,DWORD PTR [ebp-0x1c]
  40265c:	add    ecx,DWORD PTR [ebp-0x34]
  40265f:	add    ecx,DWORD PTR [ebp-0x24]
  402662:	mov    DWORD PTR [ebp-0x24],ecx
  402665:	mov    edx,DWORD PTR [ebp-0x3c]
  402668:	add    edx,DWORD PTR [ebp-0x34]
  40266b:	mov    DWORD PTR [ebp-0x3c],edx
  40266e:	mov    eax,DWORD PTR [ebp-0x48]
  402671:	sub    eax,DWORD PTR [ebp-0x4c]
  402674:	mov    DWORD PTR [ebp-0x48],eax
  402677:	jmp    0x402621
  402679:	mov    ecx,DWORD PTR [ebp-0x40]
  40267c:	push   ecx
  40267d:	mov    edx,DWORD PTR [ebp-0x38]
  402680:	push   edx
  402681:	call   0x402160
  402686:	add    esp,0x8
  402689:	mov    DWORD PTR [ebp-0x24],0x0
  402690:	mov    DWORD PTR [ebp-0x78],0x0
  402697:	call   0x4020a0
  40269c:	mov    eax,ds:0x401220
  4026a1:	push   eax
  4026a2:	call   0x4020b0
  4026a7:	add    esp,0x4
  4026aa:	mov    DWORD PTR [ebp-0x7c],eax
  4026ad:	mov    ecx,DWORD PTR [ebp-0x7c]
  4026b0:	push   ecx
  4026b1:	call   0x402040
  4026b6:	add    esp,0x4
  4026b9:	mov    DWORD PTR [ebp-0x20],eax
  4026bc:	mov    edx,DWORD PTR [ebp-0x7c]
  4026bf:	push   edx
  4026c0:	push   0x0
  4026c2:	mov    eax,DWORD PTR [ebp-0x20]
  4026c5:	push   eax
  4026c6:	call   0x402080
  4026cb:	add    esp,0xc
  4026ce:	mov    ecx,DWORD PTR [ebp-0x7c]
  4026d1:	mov    DWORD PTR [ebp-0x84],ecx
  4026d7:	mov    edx,DWORD PTR [ebp-0x78]
  4026da:	cmp    edx,DWORD PTR [ebp-0x7c]
  4026dd:	jae    0x402740
  4026df:	mov    eax,DWORD PTR [ebp-0x84]
  4026e5:	push   eax
  4026e6:	mov    ecx,DWORD PTR [ebp-0x34]
  4026e9:	push   ecx
  4026ea:	call   0x402000
  4026ef:	add    esp,0x8
  4026f2:	mov    DWORD PTR [ebp-0x88],eax
  4026f8:	mov    edx,DWORD PTR [ebp-0x88]
  4026fe:	push   edx
  4026ff:	mov    eax,ds:0x401220
  402704:	add    eax,DWORD PTR [ebp-0x24]
  402707:	push   eax
  402708:	mov    ecx,DWORD PTR [ebp-0x20]
  40270b:	add    ecx,DWORD PTR [ebp-0x78]
  40270e:	push   ecx
  40270f:	call   0x4023a0
  402714:	add    esp,0xc
  402717:	mov    edx,DWORD PTR [ebp-0x1c]
  40271a:	add    edx,DWORD PTR [ebp-0x34]
  40271d:	add    edx,DWORD PTR [ebp-0x24]
  402720:	mov    DWORD PTR [ebp-0x24],edx
  402723:	mov    eax,DWORD PTR [ebp-0x78]
  402726:	add    eax,DWORD PTR [ebp-0x34]
  402729:	mov    DWORD PTR [ebp-0x78],eax
  40272c:	mov    ecx,DWORD PTR [ebp-0x84]
  402732:	sub    ecx,DWORD PTR [ebp-0x88]
  402738:	mov    DWORD PTR [ebp-0x84],ecx
  40273e:	jmp    0x4026d7
  402740:	mov    edx,DWORD PTR [ebp-0x7c]
  402743:	push   edx
  402744:	mov    eax,DWORD PTR [ebp-0x20]
  402747:	push   eax
  402748:	call   0x402160
  40274d:	add    esp,0x8
  402750:	mov    ecx,DWORD PTR [ebp-0x38]
  402753:	mov    edx,DWORD PTR [ebp-0x20]
  402756:	mov    DWORD PTR [ecx],edx
  402758:	push   0x42000
  40275d:	call   0x402040
  402762:	add    esp,0x4
  402765:	mov    DWORD PTR [ebp-0xc],eax
  402768:	push   0x3fa00
  40276d:	mov    eax,DWORD PTR [ebp-0x38]
  402770:	push   eax
  402771:	mov    ecx,DWORD PTR [ebp-0xc]
  402774:	add    ecx,0x300
  40277a:	push   ecx
  40277b:	call   0x4023a0
  402780:	add    esp,0xc
  402783:	mov    edx,DWORD PTR [ebp-0xc]
  402786:	sub    edx,0x400000
  40278c:	push   edx
  40278d:	mov    eax,DWORD PTR [ebp-0xc]
  402790:	push   eax
  402791:	mov    ecx,DWORD PTR [ebp-0x20]
  402794:	push   ecx
  402795:	call   0x402250
  40279a:	add    esp,0xc
  40279d:	mov    ecx,DWORD PTR [ebp-0xc]
  4027a0:	add    ecx,0x3f9f0
  4027a6:	mov    DWORD PTR ds:0x401330,ecx
  4027ac:	jmp    0x4027af
  4027ae:	ret    
  4027af:	jmp    0x4027c0
  4027b4:	mov    esp,ebp
  4027b6:	pop    ebp
  4027b7:	ret    
  4027b8:	int3   
  4027b9:	int3   
  4027ba:	int3   
  4027bb:	int3   
  4027bc:	int3   
  4027bd:	int3   
  4027be:	int3   
  4027bf:	int3   
  4027c0:	push   ebp
  4027c1:	mov    ebp,esp
  4027c3:	mov    eax,ds:0x401330
  4027c8:	pop    ecx
  4027c9:	jmp    0x4027cb
  4027cb:	call   0x4027d0
  4027d0:	mov    ecx,DWORD PTR ds:0x40132c
  4027d6:	mov    esp,ecx
  4027d8:	pop    ecx
  4027d9:	jmp    eax
  4027db:	pop    ebp
  4027dc:	ret    
  4027dd:	int3   
  4027de:	int3   
  4027df:	int3   
  4027e0:	add    dl,bh
  4027e2:	add    eax,DWORD PTR [eax]
  4027e4:	das    
  4027e5:	and    eax,DWORD PTR [ebx+0x0]
  4027e8:	jo     0x4027a5
  4027ea:	je     0x40283c
  4027ec:	cmp    eax,0x534163b1
  4027f1:	mov    edx,0xad3c6572
  4027f6:	add    BYTE PTR [eax],al
  4027f8:	sti    
  4027f9:	mov    al,0x61
  4027fb:	fs repz mov dh,0x62
  4027ff:	jb     0x40280f
  402801:	lods   al,BYTE PTR ds:[esi]
  402802:	jns    0x402849
  402804:	pop    ss
  402805:	lahf   
  402806:	add    BYTE PTR [eax],al
  402808:	sti    
  402809:	mov    al,0x61
  40280b:	fs repz mov dh,0x62
  40280f:	jb     0x40281f
  402811:	lods   al,BYTE PTR ds:[esi]
  402812:	jns    0x402859
  402814:	test   DWORD PTR [eax-0x45100000],0xb9d04d74
  40281e:	jne    0x40288c
  402820:	rcl    BYTE PTR [ebp-0x4e34919f],cl
  402826:	gs inc ecx
  402828:	das    
  402829:	fiadd  WORD PTR [eax]
  40282b:	add    ah,ch
  40282d:	stos   DWORD PTR es:[edi],eax
  40282e:	gs popa 
  402830:	ret    
  402831:	mov    edx,0xbac36946
  402836:	inc    ecx
  402837:	add    BYTE PTR [ebx-0x738d8b53],bl
  40283d:	mov    edi,0xde2f4174
  402842:	add    BYTE PTR [eax],al
  402844:	push   0x5774bb
  402849:	add    BYTE PTR [esi+0x786f64b0],dl
  40284f:	lods   eax,DWORD PTR ds:[esi]
  402850:	inc    esp
  402851:	imul   edi,DWORD PTR [ebp-0x45],0xac807463
  402858:	jns    0x40289b
  40285a:	das    
  40285b:	fiadd  WORD PTR [eax]
  40285d:	add    BYTE PTR [eax-0x45],ch
  402860:	je     0x4028af
  402862:	dec    eax
  402863:	mov    edx,0x964a6c75
  402868:	popa   
  402869:	outs   dx,BYTE PTR ds:[esi]
  40286a:	push   ebx
  40286b:	mov    dl,0x65
  40286d:	push   edi
  40286e:	das    
  40286f:	fiadd  WORD PTR [eax]
  402871:	add    BYTE PTR [ebx],dh
  402873:	fld    QWORD PTR [eax+0x0]
  402876:	sbb    ebx,ebp
  402878:	inc    eax
  402879:	add    BYTE PTR [ebx-0x23],dl
  40287c:	inc    eax
  40287d:	add    BYTE PTR [ebx-0x23],bl
  402880:	inc    eax
  402881:	add    bh,ah
  402883:	fadd   QWORD PTR [eax+0x0]
  402886:	sti    
  402887:	fadd   QWORD PTR [eax+0x0]
  40288a:	paddusw mm0,QWORD PTR [eax+0x0]
  40288e:	pop    es
  40288f:	fld    QWORD PTR [eax+0x0]
  402892:	lock mov edx,0xb0fd5074
  402898:	arpl   WORD PTR [ecx-0x2d],ax
  40289b:	mov    ecx,0xacdc6572
  4028a0:	add    BYTE PTR [eax],al
  4028a2:	jmp    0x402854
  4028a4:	popa   
  4028a5:	fs jecxz 0x40285e
  4028a8:	bound  esi,QWORD PTR [edx-0x32]
  4028ab:	stos   DWORD PTR es:[edi],eax
  4028ac:	jns    0x4028f3
  4028ae:	add    BYTE PTR [eax],al
  4028b0:	(bad)  
  4028b1:	sahf   
  4028b2:	add    BYTE PTR [eax],al
  4028b4:	les    edi,FWORD PTR [edx-0x4e35918e]
  4028ba:	xor    esi,DWORD PTR [edx]
  4028bc:	pop    ecx
  4028bd:	mov    edx,0xde2f6c6c
  4028c2:	add    BYTE PTR [eax],al
  4028c4:	mov    ch,BYTE PTR [ebx-0x55629c8a]
  4028ca:	cs fs fwait
  4028cd:	mov    dl,0x0
  4028cf:	add    BYTE PTR [edx-0x6d8c9247],dl
  4028d5:	stos   BYTE PTR es:[edi],al
  4028d6:	add    BYTE PTR [eax],al
  4028d8:	sub    BYTE PTR [ebx-0x55a29c8a],0x2e
  4028df:	fs push ebx
  4028e1:	mov    dl,0x0
  4028e3:	add    BYTE PTR [edx-0x47],cl
  4028e6:	ins    DWORD PTR es:[edi],dx
  4028e7:	arpl   WORD PTR [edi-0x5b],bx
  4028ea:	add    BYTE PTR [eax],al
  4028ec:	popa   
  4028ed:	mov    ch,0x72
  4028ef:	je     0x40292b
  4028f1:	mov    ebp,0xb24b416c
  4028f6:	outs   dx,DWORD PTR ds:[esi]
  4028f7:	arpl   WORD PTR [edi],bp
  4028f9:	fiadd  WORD PTR [eax]
  4028fb:	add    BYTE PTR [ecx],al
  4028fd:	mov    ch,0x72
  4028ff:	je     0x40291b
  402901:	mov    ebp,0xb20b416c
  402906:	outs   dx,DWORD PTR ds:[esi]
  402907:	arpl   WORD PTR [edi],bp
  402909:	fiadd  WORD PTR [eax]
  40290b:	add    dl,ah
  40290d:	scas   eax,DWORD PTR es:[edi]
  40290e:	ins    DWORD PTR es:[edi],dx
  40290f:	popa   
  402910:	inc    DWORD PTR [edi+0x6569]
  402916:	add    BYTE PTR [edi-0x4df9b99a],cl
  40291c:	add    BYTE PTR gs:[ecx],al
  40291f:	mov    ch,0x72
  402921:	je     0x4028fd
  402923:	mov    esp,0xaedd506c
  402928:	je     0x40298f
  40292a:	int3   
  40292b:	test   eax,0xb8f70000
  402930:	popa   
  402931:	jo     0x402921
  402933:	mov    cl,0x6c
  402935:	outs   dx,DWORD PTR ds:[esi]
  402936:	int3   
  402937:	fld    QWORD PTR [eax]
  402939:	add    ah,al
  40293b:	mov    eax,0xb2926e72
  402940:	xor    esi,DWORD PTR [edx]
  402942:	push   ecx
  402943:	mov    edx,0xde2f6c6c
  402948:	add    BYTE PTR [eax],al
  40294a:	push   0x7d5074b9
  40294f:	scas   eax,DWORD PTR es:[edi]
  402950:	arpl   WORD PTR [ebp+0x7c],sp
  402953:	stos   DWORD PTR es:[edi],eax
  402954:	dec    eax
  402955:	mov    gs,WORD PTR gs:[esi-0x21d10000]
  40295c:	in     al,0x3
  40295e:	das    
  40295f:	jp     0x4029ba
  402961:	add    BYTE PTR [edi],ch
  402963:	xor    eax,0x352f0003
  402968:	add    eax,DWORD PTR [eax]
  40296a:	das    
  40296b:	xor    eax,0x352f0003
  402970:	add    eax,DWORD PTR [eax]
  402972:	das    
  402973:	xor    eax,0x352f0003
  402978:	add    eax,DWORD PTR [eax]
  40297a:	add    BYTE PTR [eax],al
  40297c:	das    
  40297d:	xor    eax,0x352f0003
  402982:	add    eax,DWORD PTR [eax]
  402984:	das    
  402985:	xor    eax,0x352f0003
  40298a:	add    eax,DWORD PTR [eax]
  40298c:	das    
  40298d:	xor    eax,0x352f0003
  402992:	add    eax,DWORD PTR [eax]
  402994:	das    
  402995:	xor    eax,0x352f0003
  40299a:	add    eax,DWORD PTR [eax]
  40299c:	das    
  40299d:	sub    eax,0x352f0004
  4029a2:	add    eax,DWORD PTR [eax]
  4029a4:	das    
  4029a5:	xor    eax,0x352f0003
  4029aa:	add    eax,DWORD PTR [eax]
  4029ac:	das    
  4029ad:	xor    eax,0x352f0003
  4029b2:	add    eax,DWORD PTR [eax]
  4029b4:	das    
  4029b5:	xor    eax,0x352f0003
  4029ba:	add    eax,DWORD PTR [eax]
  4029bc:	das    
  4029bd:	xor    eax,0x72f0003
  4029c2:	add    eax,DWORD PTR [eax]
  4029c4:	das    
  4029c5:	pop    es
  4029c6:	add    eax,DWORD PTR [eax]
  4029c8:	das    
  4029c9:	pop    es
  4029ca:	add    eax,DWORD PTR [eax]
  4029cc:	das    
  4029cd:	pop    es
  4029ce:	add    eax,DWORD PTR [eax]
  4029d0:	das    
  4029d1:	pop    es
  4029d2:	add    eax,DWORD PTR [eax]
  4029d4:	das    
  4029d5:	pop    es
  4029d6:	add    eax,DWORD PTR [eax]
  4029d8:	das    
  4029d9:	fsubp  st(1),st
  4029db:	add    ebp,DWORD PTR [edi]
  4029dd:	fsubp  st(1),st
  4029df:	add    eax,DWORD PTR [eax]
  4029e1:	add    BYTE PTR [edi],ch
  4029e3:	fsubp  st(1),st
  4029e5:	add    ebp,DWORD PTR [edi]
  4029e7:	fsubp  st(1),st
  4029e9:	add    ebp,DWORD PTR [edi]
  4029eb:	fsubp  st(1),st
  4029ed:	add    ebp,DWORD PTR [edi]
  4029ef:	fsubp  st(1),st
  4029f1:	add    ebp,DWORD PTR [edi]
  4029f3:	fsubp  st(1),st
  4029f5:	add    ebp,DWORD PTR [edi]
  4029f7:	fsubp  st(1),st
  4029f9:	add    ebp,DWORD PTR [edi]
  4029fb:	fsubp  st(1),st
  4029fd:	add    ebp,DWORD PTR [edi]
  4029ff:	fsubp  st(1),st
  402a01:	add    ebp,DWORD PTR [edi]
  402a03:	fsubp  st(1),st
  402a05:	add    ebp,DWORD PTR [edi]
  402a07:	fsubp  st(1),st
  402a09:	add    ebp,DWORD PTR [edi]
  402a0b:	fsubp  st(1),st
  402a0d:	add    ebp,DWORD PTR [edi]
  402a0f:	fsubp  st(1),st
  402a11:	add    ebp,DWORD PTR [edi]
  402a13:	fsubp  st(1),st
  402a15:	add    ebp,DWORD PTR [edi]
  402a17:	fsubp  st(1),st
  402a19:	add    ebp,DWORD PTR [edi]
  402a1b:	fsubp  st(1),st
  402a1d:	add    ebp,DWORD PTR [edi]
  402a1f:	fsubp  st(1),st
  402a21:	add    ebp,DWORD PTR [edi]
  402a23:	fsubp  st(1),st
  402a25:	add    ebp,DWORD PTR [edi]
  402a27:	fsubp  st(1),st
  402a29:	add    ebp,DWORD PTR [edi]
  402a2b:	fsubp  st(1),st
  402a2d:	add    ebp,DWORD PTR [edi]
  402a2f:	fsubp  st(1),st
  402a31:	add    ebp,DWORD PTR [edi]
  402a33:	fsubp  st(1),st
  402a35:	add    ebp,DWORD PTR [edi]
  402a37:	fsubp  st(1),st
  402a39:	add    ebp,DWORD PTR [edi]
  402a3b:	fsubp  st(1),st
  402a3d:	add    ebp,DWORD PTR [edi]
  402a3f:	fsubp  st(1),st
  402a41:	add    ebp,DWORD PTR [edi]
  402a43:	fsubp  st(1),st
  402a45:	add    eax,DWORD PTR [eax]
  402a47:	add    BYTE PTR [edi],ch
  402a49:	fsubp  st(1),st
  402a4b:	add    ebp,DWORD PTR [edi]
  402a4d:	fsubp  st(1),st
  402a4f:	add    ebp,DWORD PTR [edi]
  402a51:	fsubp  st(1),st
  402a53:	add    ebp,DWORD PTR [edi]
  402a55:	fiadd  WORD PTR [eax]
  402a57:	jmp    0xe9410888
  402a5c:	sub    al,0xde
  402a5e:	add    cl,ch
  402a60:	sub    al,0xde
  402a62:	add    cl,ch
  402a64:	sub    al,0xde
  402a66:	add    cl,ch
  402a68:	sub    al,0xde
  402a6a:	add    cl,ch
  402a6c:	sub    al,0xde
  402a6e:	add    BYTE PTR [ecx-0x52ff2191],bl
  402a74:	xor    esp,ecx
  402a76:	add    cl,bh
  402a78:	lea    esi,[edx+0x4f]
  402a7b:	jmp    0xe94108ac
  402a80:	sub    al,0xde
  402a82:	add    cl,cl
  402a84:	xor    esp,eax
  402a86:	add    edx,esp
  402a88:	sub    eax,0xd0e900e8
  402a8d:	loopne 0x402a8f
  402a8f:	jmp    0xe9410890
  402a94:	sub    al,0xde
  402a96:	add    BYTE PTR [ecx],bh
  402a98:	xchg   ebx,eax
  402a99:	fld    QWORD PTR [eax]
  402a9b:	jmp    0xe94108bc
  402aa0:	ins    BYTE PTR es:[edi],dx
  402aa1:	loopne 0x402aa3
  402aa3:	jmp    0xe940c8d4
  402aa8:	cmp    al,0xde
  402aaa:	add    cl,ch
  402aac:	add    BYTE PTR [eax],al
  402aae:	xor    bl,dh
  402ab0:	add    ah,ch
  402ab2:	sub    al,0xdf
  402ab4:	add    al,ch
  402ab6:	sub    al,0xde
  402ab8:	add    ah,ch
  402aba:	sub    al,0xdf
  402abc:	add    cl,ch
  402abe:	sub    al,0xde
  402ac0:	add    cl,ch
  402ac2:	or     al,0xe2
  402ac4:	add    cl,ch
  402ac6:	sub    BYTE PTR [edi+edi*8],bl
  402ac9:	jmp    0xeb4108fa
  402ace:	sub    al,0xde
  402ad0:	add    DWORD PTR [eax],0x10e006
  402ad6:	push   ss
  402ad7:	lock add BYTE PTR [eax],al
  402ada:	push   ss
  402adb:	loopne 0x402aed
  402add:	add    BYTE PTR [esi],al
  402adf:	lock add BYTE PTR [eax],al
  402ae2:	push   es
  402ae3:	loopne 0x402ae5
  402ae5:	add    dh,ah
  402ae7:	fild   WORD PTR [eax]
  402ae9:	add    dh,dl
  402aeb:	fild   WORD PTR [eax]
  402aed:	add    dh,al
  402aef:	fild   WORD PTR [eax]
  402af1:	add    BYTE PTR [edx-0x69fffc93],al
  402af7:	loopne 0x402af9
  402af9:	add    dh,dl
  402afb:	fild   WORD PTR [eax]
  402afd:	add    dh,al
  402aff:	fild   WORD PTR [eax]
  402b01:	add    dh,al
  402b03:	fild   WORD PTR [eax]
  402b05:	add    BYTE PTR [esi-0x69ffff21],dl
  402b0b:	fild   WORD PTR [eax]
  402b0d:	add    BYTE PTR [esi+0xdf],al
  402b13:	add    BYTE PTR [esi+0xe00030f],al
  402b19:	cmc    
  402b1a:	add    BYTE PTR [eax],al
  402b1c:	xchg   esi,eax
  402b1d:	fild   WORD PTR [eax]
  402b1f:	add    BYTE PTR [esi-0x79ffff21],al
  402b25:	fild   WORD PTR [eax]
  402b27:	add    BYTE PTR [esi-0x21],dl
  402b2a:	add    BYTE PTR [eax],al
  402b2c:	push   esi
  402b2d:	fild   WORD PTR [eax]
  402b2f:	add    BYTE PTR [esi-0x21],al
  402b32:	add    BYTE PTR [eax],al
  402b34:	inc    esi
  402b35:	fild   WORD PTR [eax]
  402b37:	add    BYTE PTR [esi-0x21],dl
  402b3a:	add    BYTE PTR [eax],al
  402b3c:	push   esi
  402b3d:	fild   WORD PTR [eax]
  402b3f:	add    BYTE PTR [esi-0x21],al
  402b42:	add    BYTE PTR [eax],al
  402b44:	inc    esi
  402b45:	fild   WORD PTR [eax]
  402b47:	add    BYTE PTR [esi],dl
  402b49:	fild   WORD PTR [eax]
  402b4b:	add    BYTE PTR [edi],ch
  402b4d:	add    eax,0x752f0013
  402b52:	add    DWORD PTR [eax],eax
  402b54:	das    
  402b55:	add    eax,0x52f0003
  402b5a:	add    eax,DWORD PTR [eax]
  402b5c:	das    
  402b5d:	add    eax,0x52f0003
  402b62:	add    eax,DWORD PTR [eax]
  402b64:	das    
  402b65:	add    eax,0x52f0003
  402b6a:	add    eax,DWORD PTR [eax]
  402b6c:	das    
  402b6d:	and    ebp,DWORD PTR [edi+0x65]
  402b70:	push   edi
  402b71:	jno    0x402b76
  402b73:	add    BYTE PTR [edi],ch
  402b75:	stos   DWORD PTR es:[edi],eax
  402b76:	lods   eax,DWORD PTR ds:[esi]
  402b77:	add    eax,DWORD PTR [eax]
  402b79:	add    BYTE PTR [edi],ch
  402b7b:	add    eax,0x52f0013
  402b80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b81:	add    ebp,DWORD PTR [edi]
  402b83:	add    eax,0x4b0ffff
  402b88:	add    eax,DWORD PTR [eax]
  402b8a:	das    
  402b8b:	add    eax,0x52f0003
  402b90:	add    eax,DWORD PTR [eax]
  402b92:	das    
  402b93:	in     eax,0x4
  402b95:	add    BYTE PTR [edi],cl
  402b97:	repz pusha 
  402b99:	popa   
  402b9a:	add    esp,DWORD PTR [esi-0x5ad0fffc]
  402ba0:	and    DWORD PTR [eax],eax
  402ba2:	das    
  402ba3:	add    eax,0x52f03c3
  402ba8:	or     eax,DWORD PTR [eax]
  402baa:	das    
  402bab:	add    eax,0x52f03b3
  402bb0:	add    eax,DWORD PTR [eax]
  402bb2:	das    
  402bb3:	add    eax,0x52f0003
  402bb8:	add    eax,DWORD PTR [eax]
  402bba:	das    
  402bbb:	lds    eax,FWORD PTR [eax+eax*1]
  402bbe:	outs   dx,DWORD PTR ds:[esi]
  402bbf:	and    dh,BYTE PTR [ecx+0x65]
  402bc2:	retf   
  402bc3:	sbb    esp,DWORD PTR [edx+0x0]
  402bc6:	das    
  402bc7:	ficomp WORD PTR [edi+0x2c]
  402bca:	das    
  402bcb:	fsubp  st(1),st
  402bcd:	repz sub al,0xde
  402bd0:	jmp    0xea1e5afe
  402bd5:	mov    ebx,0x3e9de2c
  402bda:	das    
  402bdb:	fsubp  st(1),st
  402bdd:	add    eax,DWORD PTR [eax]
  402bdf:	add    BYTE PTR [edi],ch
  402be1:	fsubp  st(1),st
  402be3:	add    ebp,DWORD PTR [edi]
  402be5:	fisubr WORD PTR [ecx-0x1663d0fd]
  402beb:	add    ebp,DWORD PTR [edi]
  402bed:	fsubp  st(1),st
  402bef:	add    ebp,DWORD PTR [edi]
  402bf1:	fsubp  st(1),st
  402bf3:	add    ebp,DWORD PTR [edi]
  402bf5:	fsubp  st(1),st
  402bf7:	add    ebp,DWORD PTR [edi]
  402bf9:	fsubp  st(1),st
  402bfb:	add    ebp,DWORD PTR [edi]
  402bfd:	fsubp  st(1),st
  402bff:	add    ebp,DWORD PTR [edi]
  402c01:	fsubp  st(1),st
  402c03:	add    ebp,DWORD PTR [edi]
  402c05:	fsubp  st(1),st
  402c07:	add    ebp,DWORD PTR [edi]
  402c09:	fsubp  st(1),st
  402c0b:	add    ebp,DWORD PTR [edi]
  402c0d:	fsubp  st(1),st
  402c0f:	add    ebp,DWORD PTR [edi]
  402c11:	fsubp  st(1),st
  402c13:	add    ebp,DWORD PTR [edi]
  402c15:	fsubp  st(1),st
  402c17:	add    ebp,DWORD PTR [edi]
  402c19:	fsubp  st(1),st
  402c1b:	add    ebp,DWORD PTR [edi]
  402c1d:	fsubp  st(1),st
  402c1f:	add    ebp,DWORD PTR [edi]
  402c21:	fsubp  st(1),st
  402c23:	add    ebp,DWORD PTR [edi]
  402c25:	fsubp  st(1),st
  402c27:	add    ebp,DWORD PTR [edi]
  402c29:	fsubp  st(1),st
  402c2b:	add    ebp,DWORD PTR [edi]
  402c2d:	fsubp  st(1),st
  402c2f:	add    ebp,DWORD PTR [edi]
  402c31:	fsubp  st(1),st
  402c33:	add    ebp,DWORD PTR [edi]
  402c35:	fsubp  st(1),st
  402c37:	add    ebp,DWORD PTR [edi]
  402c39:	fsubp  st(1),st
  402c3b:	add    ebp,DWORD PTR [edi]
  402c3d:	fsubp  st(1),st
  402c3f:	add    ebp,DWORD PTR [edi]
  402c41:	fiadd  WORD PTR [eax]
  402c43:	jmp    0xde6c2c48
  402c48:	add    cl,ch
  402c4a:	sub    al,0xde
  402c4c:	add    cl,ch
  402c4e:	sub    al,0xde
  402c50:	add    cl,ch
  402c52:	sub    al,0xde
  402c54:	add    cl,ch
  402c56:	sub    al,0xde
  402c58:	add    cl,ch
  402c5a:	sub    al,0xde
  402c5c:	add    cl,ch
  402c5e:	sub    al,0xde
  402c60:	add    cl,ch
  402c62:	sub    al,0xde
  402c64:	add    cl,ch
  402c66:	sub    al,0xde
  402c68:	add    cl,ch
  402c6a:	sub    al,0xde
  402c6c:	add    cl,ch
  402c6e:	sub    al,0xde
  402c70:	add    cl,ch
  402c72:	sub    al,0xde
  402c74:	add    cl,ch
  402c76:	sub    al,0xde
  402c78:	add    cl,ch
  402c7a:	sub    al,0xde
  402c7c:	add    cl,ch
  402c7e:	sub    al,0xde
  402c80:	add    cl,ch
  402c82:	sub    al,0xde
  402c84:	add    cl,ch
  402c86:	sub    al,0xde
  402c88:	add    cl,ch
  402c8a:	sub    al,0xde
  402c8c:	add    cl,ch
  402c8e:	sub    al,0xde
  402c90:	add    cl,ch
  402c92:	sub    al,0xde
  402c94:	add    cl,ch
  402c96:	sub    al,0xde
  402c98:	add    cl,ch
  402c9a:	sub    al,0xde
  402c9c:	add    cl,ch
  402c9e:	sub    al,0xde
  402ca0:	add    cl,ch
  402ca2:	sub    al,0xde
  402ca4:	add    cl,ch
  402ca6:	sub    al,0xde
  402ca8:	add    cl,ch
  402caa:	add    BYTE PTR [eax],al
  402cac:	sub    al,0xde
  402cae:	add    cl,ch
  402cb0:	sub    al,0xde
  402cb2:	add    cl,ch
  402cb4:	sub    al,0xde
  402cb6:	add    cl,ch
  402cb8:	sub    al,0xde
  402cba:	add    cl,ch
  402cbc:	sub    al,0xde
  402cbe:	add    BYTE PTR [eax],al
  402cc0:	push   esi
  402cc1:	fadd   QWORD PTR [eax]
  402cc3:	add    BYTE PTR [esi-0x24],dl
  402cc6:	add    BYTE PTR [eax],al
  402cc8:	inc    esi
  402cc9:	fadd   QWORD PTR [eax]
  402ccb:	add    BYTE PTR [esi-0x24],al
  402cce:	add    BYTE PTR [eax],al
  402cd0:	push   ss
  402cd1:	fadd   QWORD PTR [eax]
  402cd3:	add    BYTE PTR [esi],dl
  402cd5:	fadd   QWORD PTR [eax]
  402cd7:	add    BYTE PTR [esi],al
  402cd9:	fadd   QWORD PTR [eax]
  402cdb:	add    BYTE PTR [esi],al
  402cdd:	fadd   QWORD PTR [eax]
  402cdf:	add    BYTE PTR [esi],dl
  402ce1:	fadd   QWORD PTR [eax]
  402ce3:	add    BYTE PTR [esi],dl
  402ce5:	fadd   QWORD PTR [eax]
  402ce7:	add    BYTE PTR [esi],al
  402ce9:	fadd   QWORD PTR [eax]
  402ceb:	add    BYTE PTR [esi],al
  402ced:	fadd   QWORD PTR [eax]
  402cef:	add    dh,dl
  402cf1:	fild   DWORD PTR [eax]
  402cf3:	add    dh,dl
  402cf5:	fild   DWORD PTR [eax]
  402cf7:	add    dh,al
  402cf9:	fild   DWORD PTR [eax]
  402cfb:	add    dh,al
  402cfd:	fild   DWORD PTR [eax]
  402cff:	add    dh,dl
  402d01:	fild   DWORD PTR [eax]
  402d03:	add    dh,dl
  402d05:	fild   DWORD PTR [eax]
  402d07:	add    dh,al
  402d09:	fild   DWORD PTR [eax]
  402d0b:	add    dh,al
  402d0d:	fild   DWORD PTR [eax]
  402d0f:	add    BYTE PTR [eax],al
  402d11:	add    BYTE PTR [esi-0x69ffff25],dl
  402d17:	fild   DWORD PTR [eax]
  402d19:	add    BYTE PTR [esi-0x79ffff25],al
  402d1f:	fild   DWORD PTR [eax]
  402d21:	add    BYTE PTR [esi-0x69ffff25],dl
  402d27:	fild   DWORD PTR [eax]
  402d29:	add    BYTE PTR [esi-0x79ffff25],al
  402d2f:	fild   DWORD PTR [eax]
  402d31:	add    BYTE PTR [esi-0x25],dl
  402d34:	add    BYTE PTR [eax],al
  402d36:	push   esi
  402d37:	fild   DWORD PTR [eax]
  402d39:	add    BYTE PTR [edi],ch
  402d3b:	add    eax,0x52f0003
  402d40:	add    eax,DWORD PTR [eax]
  402d42:	das    
  402d43:	add    eax,0x52f0003
  402d48:	add    eax,DWORD PTR [eax]
  402d4a:	das    
  402d4b:	add    eax,0x52f0003
  402d50:	add    eax,DWORD PTR [eax]
  402d52:	das    
  402d53:	add    eax,0x52f0003
  402d58:	add    eax,DWORD PTR [eax]
  402d5a:	das    
  402d5b:	add    eax,0x52f0003
  402d60:	add    eax,DWORD PTR [eax]
  402d62:	das    
  402d63:	add    eax,0x52f0003
  402d68:	add    eax,DWORD PTR [eax]
  402d6a:	das    
  402d6b:	add    eax,0x52f0003
  402d70:	add    eax,DWORD PTR [eax]
  402d72:	das    
  402d73:	add    eax,0x3
  402d78:	das    
  402d79:	add    eax,0x3d2f0003
  402d7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d7f:	add    ebp,DWORD PTR [edi]
  402d81:	shl    DWORD PTR [ebp-0x5be6d0fd],1
  402d87:	add    ebp,DWORD PTR [edi]
  402d89:	xor    eax,0x692f03a4
  402d8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d8f:	add    ebp,DWORD PTR [edi]
  402d91:	test   DWORD PTR [ebx+eax*1+0x3a3952f],esp
  402d98:	das    
  402d99:	ins    DWORD PTR es:[edi],dx
  402d9a:	mov    ds:0xa3712f03,eax
  402d9f:	add    ebp,DWORD PTR [edi]
  402da1:	ja     0x402d46
  402da3:	add    ebp,DWORD PTR [edi]
  402da5:	and    eax,0x512f03a3
  402daa:	mov    ds:0xb3072f03,eax
  402daf:	add    ebp,DWORD PTR [edi]
  402db1:	in     eax,0xb4
  402db3:	add    ebp,DWORD PTR [edi]
  402db5:	(bad)  
  402db7:	mov    bl,0x2c
  402db9:	(bad)  
  402dbb:	mov    bl,0x2c
  402dbd:	fisub  WORD PTR ds:0x1de2cb4
  402dc3:	mov    ah,0x2c
  402dc5:	fiadd  WORD PTR ds:0x55de2cb4
  402dcb:	mov    ah,0x2c
  402dcd:	fiadd  WORD PTR [ebx-0x4c]
  402dd0:	sub    al,0xde
  402dd2:	sub    eax,0x35de2cb4
  402dd7:	mov    ah,0x2c
  402dd9:	fimul  WORD PTR [ecx-0x4c]
  402ddc:	add    BYTE PTR [eax],al
  402dde:	sub    al,0xde
  402de0:	pop    ecx
  402de1:	mov    ah,0x2c
  402de3:	fsubp  st(3),st
  402de5:	mov    ah,0x2c
  402de7:	(bad)  
  402de9:	mov    ah,0x2c
  402deb:	fimul  WORD PTR ds:0xf7de2cb5
  402df1:	mov    ah,0x2c
  402df3:	ficom  WORD PTR [ecx-0x6621d34c]
  402df9:	mov    ah,0x2c
  402dfb:	fidiv  WORD PTR [ecx-0x4b]
  402dfe:	sub    al,0xde
  402e00:	push   edi
  402e01:	mov    ds:0x3e9de2c,al
  402e06:	das    
  402e07:	fisubr WORD PTR ds:0x4bde2cba
  402e0d:	mov    edx,0xba6dde2c
  402e12:	sub    al,0xde
  402e14:	jg     0x402dcf
  402e16:	sub    al,0xde
  402e18:	inc    ebp
  402e19:	mov    edx,0xba25de2c
  402e1e:	sub    al,0xde
  402e20:	or     edi,DWORD PTR [edx-0x465221d4]
  402e26:	sub    al,0xde
  402e28:	jmp    0x221e5d30
  402e2d:	mov    ecx,0xcb00de2c
  402e32:	mov    eax,0xa61d00e1
  402e37:	loope  0x402e39
  402e39:	mov    edi,0xa700e198
  402e3e:	mov    al,ds:0xd100e1
  402e43:	add    BYTE PTR [edi-0x7842ff1f],dl
  402e49:	loope  0x402e4b
  402e4b:	out    0x87,eax
  402e4d:	loope  0x402e4f
  402e4f:	aad    0x77
  402e51:	loope  0x402e53
  402e53:	loope  0x402ecc
  402e55:	loope  0x402e57
  402e57:	outs   dx,DWORD PTR ds:[esi]
  402e58:	loopne 0x402e3a
  402e5a:	add    BYTE PTR [ebx-0x28],bl
  402e5d:	loopne 0x402e5f
  402e5f:	xchg   edi,eax
  402e60:	loopne 0x402e42
  402e62:	add    BYTE PTR [edi-0x28],ch
  402e65:	loopne 0x402e67
  402e67:	mov    eax,eax
  402e69:	loopne 0x402e6b
  402e6b:	jmp    0xaf410c9c
  402e70:	retf   
  402e71:	loopne 0x402e73
  402e73:	jmp    0xdb410ca4
  402e78:	xchg   ecx,eax
  402e79:	loopne 0x402e7b
  402e7b:	leave  
  402e7c:	mov    eax,esp
  402e7e:	add    bh,cl
  402e80:	xchg   ecx,eax
  402e81:	loopne 0x402e83
  402e83:	xlat   BYTE PTR ds:[ebx]
  402e84:	mov    eax,esp
  402e86:	add    BYTE PTR [ebx-0x5cff1f6f],bh
  402e8c:	mov    eax,esp
  402e8e:	add    BYTE PTR [ecx-0x6f],bh
  402e91:	loopne 0x402e93
  402e93:	imul   ecx,DWORD PTR [ecx-0x2eacff20],0xca8f00e0
  402e9d:	loopne 0x402e9f
  402e9f:	xchg   ebp,eax
  402ea0:	shl    al,cl
  402ea2:	add    BYTE PTR [ebx-0x38ff1f36],ah
  402ea8:	add    BYTE PTR [eax],al
  402eaa:	shl    al,cl
  402eac:	add    BYTE PTR [eax],al
  402eae:	push   0x8800033a
  402eb3:	cmp    al,0x3
  402eb5:	add    BYTE PTR [esi+eax*2],ah
  402eb8:	add    eax,DWORD PTR [eax]
  402eba:	pusha  
  402ebb:	cmp    al,0x3
  402ebd:	add    BYTE PTR [eax],dl
  402ebf:	inc    esi
  402ec0:	add    eax,DWORD PTR [eax]
  402ec2:	sbb    BYTE PTR [esi+0x3],al
  402ec5:	add    BYTE PTR [eax],ch
  402ec7:	inc    esi
  402ec8:	add    eax,DWORD PTR [eax]
  402eca:	(bad)  
  402ecb:	inc    ebp
  402ecc:	add    eax,DWORD PTR [eax]
  402ece:	mov    edx,0xda000345
  402ed3:	inc    ebp
  402ed4:	add    eax,DWORD PTR [eax]
  402ed6:	test   BYTE PTR [ebp+0x3],0x0
  402eda:	mov    BYTE PTR [esi+0x3],0x0
  402ede:	push   0x6a000346
  402ee3:	inc    esi
  402ee4:	add    eax,DWORD PTR [eax]
  402ee6:	js     0x402f2e
  402ee8:	add    eax,DWORD PTR [eax]
  402eea:	call   0x3440322b
  402eef:	cmp    eax,DWORD PTR [ebx]
  402ef1:	add    BYTE PTR [ebx+edi*1],ch
  402ef4:	add    eax,DWORD PTR [eax]
  402ef6:	xchg   edx,eax
  402ef7:	cmp    al,0x3
  402ef9:	add    dl,dh
  402efb:	cmp    al,0x3
  402efd:	add    dl,al
  402eff:	cmp    al,0x3
  402f01:	add    BYTE PTR [esi+0x1200033b],ch
  402f07:	cmp    al,BYTE PTR [ebx]
  402f09:	add    BYTE PTR [esi],al
  402f0b:	cmp    eax,DWORD PTR [ebx]
  402f0d:	add    BYTE PTR [eax],al
  402f0f:	add    BYTE PTR [eax],dh
  402f11:	cmp    eax,DWORD PTR [ebx]
  402f13:	add    dl,al
  402f15:	cmp    al,0x3
  402f17:	add    ah,al
  402f19:	inc    ebp
  402f1a:	add    eax,DWORD PTR [eax]
  402f1c:	add    BYTE PTR [ebp+0x3],0x0
  402f20:	cmp    al,0x48
  402f22:	add    eax,DWORD PTR [eax]
  402f24:	dec    esp
  402f25:	dec    eax
  402f26:	add    eax,DWORD PTR [eax]
  402f28:	das    
  402f29:	ret    
  402f2a:	stos   BYTE PTR es:[edi],al
  402f2b:	add    ebp,DWORD PTR [edi]
  402f2d:	aad    0xaa
  402f2f:	add    ebp,DWORD PTR [edi]
  402f31:	stos   DWORD PTR es:[edi],eax
  402f32:	stos   BYTE PTR es:[edi],al
  402f33:	add    ebp,DWORD PTR [edi]
  402f35:	test   DWORD PTR [ecx-0x5686d0fd],ebp
  402f3b:	add    ebp,DWORD PTR [edi]
  402f3d:	pop    ecx
  402f3e:	test   eax,0xa9452f03
  402f43:	add    ebp,DWORD PTR [edi]
  402f45:	dec    ebx
  402f46:	test   eax,0xa95b2f03
  402f4b:	add    ebp,DWORD PTR [edi]
  402f4d:	popa   
  402f4e:	test   eax,0xa7fd2f03
  402f53:	add    ebp,DWORD PTR [edi]
  402f55:	das    
  402f56:	test   al,0x3
  402f58:	das    
  402f59:	(bad)  
  402f5a:	test   eax,0xa9ef2f03
  402f5f:	add    ebp,DWORD PTR [edi]
  402f61:	and    ebp,DWORD PTR [eax-0x57d6d0fd]
  402f67:	add    ebp,DWORD PTR [edi]
  402f69:	sub    DWORD PTR [eax-0x5772d0fd],0xa8972f03
  402f73:	add    eax,DWORD PTR [eax]
  402f75:	add    BYTE PTR [edi],ch
  402f77:	(bad)  
  402f78:	test   al,0x3
  402f7a:	das    
  402f7b:	imul   DWORD PTR [eax-0x52b6d0fd]
  402f81:	add    ebp,DWORD PTR [edi]
  402f83:	sbb    eax,0x392f03ad
  402f88:	lods   eax,DWORD PTR ds:[esi]
  402f89:	add    ebp,DWORD PTR [edi]
  402f8b:	sub    eax,0x272f03ad
  402f90:	lods   eax,DWORD PTR ds:[esi]
  402f91:	add    ebp,DWORD PTR [edi]
  402f93:	xor    eax,0x92f03ad
  402f98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f99:	add    ebp,DWORD PTR [edi]
  402f9b:	add    eax,0xdb2f03a4
  402fa0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fa1:	add    ebp,DWORD PTR [edi]
  402fa3:	fidiv  WORD PTR [ecx-0x5c21d35e]
  402fa9:	mov    ds:0xa285de2c,al
  402fae:	sub    al,0xde
  402fb0:	ins    DWORD PTR es:[edi],dx
  402fb1:	mov    ds:0xa275de2c,al
  402fb6:	sub    al,0xde
  402fb8:	inc    ecx
  402fb9:	mov    ds:0xa243de2c,al
  402fbe:	sub    al,0xde
  402fc0:	cpuid  
  402fc2:	sub    al,0xde
  402fc4:	xor    DWORD PTR [edx-0x5e2221d4],esp
  402fca:	sub    al,0xde
  402fcc:	(bad)  
  402fcd:	mov    eax,ds:0xa1f3de2c
  402fd2:	sub    al,0xde
  402fd4:	repz mov eax,ds:0xa583de2c
  402fda:	add    BYTE PTR [eax],al
  402fdc:	sub    al,0xde
  402fde:	lea    esp,[ebp-0x5a6e21d4]
  402fe4:	sub    al,0xde
  402fe6:	sub    esp,DWORD PTR [ebp-0x5a6621d4]
  402fec:	sub    al,0xde
  402fee:	jne    0x402f95
  402ff0:	sub    al,0xde
  402ff2:	popa   
  402ff3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ff4:	sub    al,0xde
  402ff6:	mov    edi,0xd3de2ca4
  402ffb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ffc:	sub    al,0xde
  402ffe:	popf   
  402fff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403000:	sub    al,0xde
  403002:	mov    eax,ds:0xd5de2ca4
  403007:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403008:	sub    al,0xde
  40300a:	add    esp,DWORD PTR [ebp-0x5b1e21d4]
  403010:	sub    al,0xde
  403012:	adc    DWORD PTR [esp+ebp*1+0x2ca955de],esp
  403019:	ficom  WORD PTR [ebx]
  40301b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40301c:	sub    al,0xde
  40301e:	add    BYTE PTR ds:0x3f00ddd3,ch
  403024:	retf   
  403025:	fld    QWORD PTR [eax]
  403027:	jge    0x402ff5
  403029:	fld    QWORD PTR [eax]
  40302b:	imul   ecx,esp,0xd34100dd
  403031:	fld    QWORD PTR [eax]
  403033:	cmp    ebx,ecx
  403035:	fld    QWORD PTR [eax]
  403037:	sub    ebx,edx
  403039:	fld    QWORD PTR [eax]
  40303b:	adc    ebx,ecx
  40303d:	fld    QWORD PTR [eax]
  40303f:	in     eax,0x0
  403041:	add    BYTE PTR [ebp+ebx*8-0x224e5300],cl
  403048:	add    BYTE PTR [edi-0x40ff2257],dl
  40304e:	mov    eax,ds:0xb9b900dd
  403053:	fld    QWORD PTR [eax]
  403055:	dec    edi
  403056:	mov    cl,0xdd
  403058:	add    BYTE PTR [ecx-0x57],dl
  40305b:	fld    QWORD PTR [eax]
  40305d:	pop    ebp
  40305e:	mov    eax,ds:0xb96f00dd
  403063:	fadd   QWORD PTR [eax]
  403065:	cmc    
  403066:	mov    cl,0xdc
  403068:	add    bl,cl
  40306a:	test   eax,0xa1bb00dc
  40306f:	fadd   QWORD PTR [eax]
  403071:	test   eax,0x1500dcb9
  403076:	mov    al,0xdc
  403078:	add    bh,ah
  40307a:	test   eax,0xa1db00dc
  40307f:	fadd   QWORD PTR [eax]
  403081:	xor    DWORD PTR [edx-0x4db8ff24],edi
  403087:	fadd   QWORD PTR [eax]
  403089:	aas    
  40308a:	stos   BYTE PTR es:[edi],al
  40308b:	fadd   QWORD PTR [eax]
  40308d:	xor    esp,DWORD PTR [edx-0x45acff24]
  403093:	fadd   QWORD PTR [eax]
  403095:	cmp    eax,0xdcb2
  40309a:	data16 arpl WORD PTR [ebx],ax
  40309d:	add    BYTE PTR [edx+0x63],bl
  4030a0:	add    eax,DWORD PTR [eax]
  4030a2:	jmp    0x1200:0x362
  4030a9:	arpl   WORD PTR [ebx],ax
  4030ab:	add    dh,bh
  4030ad:	pop    edi
  4030ae:	add    eax,DWORD PTR [eax]
  4030b0:	push   esi
  4030b1:	pusha  
  4030b2:	add    eax,DWORD PTR [eax]
  4030b4:	pop    edx
  4030b5:	pusha  
  4030b6:	add    eax,DWORD PTR [eax]
  4030b8:	(bad)  
  4030b9:	cmp    BYTE PTR [ebx],al
  4030bb:	add    BYTE PTR [esi+0x740000dc],al
  4030c1:	inc    ebx
  4030c2:	add    eax,DWORD PTR [eax]
  4030c4:	add    BYTE PTR [ebx+0x3],0x0
  4030c8:	add    BYTE PTR [ebx+0x3],0x0
  4030cc:	inc    esi
  4030cd:	fadd   QWORD PTR [eax]
  4030cf:	add    BYTE PTR [esi-0x24],bl
  4030d2:	add    BYTE PTR [eax-0x7fff23b1],al
  4030d8:	dec    eax
  4030d9:	fadd   QWORD PTR [eax]
  4030db:	add    BYTE PTR [esp+ebx*8+0x0],0x80
  4030e0:	inc    esi
  4030e1:	fadd   QWORD PTR [eax]
  4030e3:	add    BYTE PTR [ebp+ecx*2+0x4f100003],al
  4030ea:	add    eax,DWORD PTR [eax]
  4030ec:	dec    BYTE PTR [esi+0x3]
  4030ef:	add    BYTE PTR [esi],al
  4030f1:	fadd   QWORD PTR [eax]
  4030f3:	add    dh,cl
  4030f5:	dec    esi
  4030f6:	add    eax,DWORD PTR [eax]
  4030f8:	sbb    cl,BYTE PTR [ebp+0x3]
  4030fb:	add    BYTE PTR [edx],ch
  4030fd:	dec    ebp
  4030fe:	add    eax,DWORD PTR [eax]
  403100:	aam    0x4e
  403102:	add    eax,DWORD PTR [eax]
  403104:	and    cl,BYTE PTR [ebx+eax*1+0x0]
  403108:	and    cl,BYTE PTR [ebx+eax*1+0x0]
  40310c:	add    BYTE PTR [eax],al
  40310e:	and    al,0x4c
  403110:	add    eax,DWORD PTR [eax]
  403112:	outs   dx,BYTE PTR ds:[esi]
  403113:	dec    esp
  403114:	add    eax,DWORD PTR [eax]
  403116:	das    
  403117:	mov    ecx,0xc52f03b2
  40311c:	mov    dl,0x3
  40311e:	das    
  40311f:	shl    DWORD PTR [edx-0x4d68d0fd],cl
  403125:	add    ebp,DWORD PTR [edi]
  403127:	scas   eax,DWORD PTR es:[edi]
  403128:	mov    dl,0x3
  40312a:	das    
  40312b:	test   DWORD PTR [edx-0x4d56d0fd],esi
  403131:	add    ebp,DWORD PTR [edi]
  403133:	popf   
  403134:	mov    dl,0x3
  403136:	das    
  403137:	ret    
  403138:	mov    dl,0x3
  40313a:	das    
  40313b:	out    0xb2,eax
  40313d:	add    ebp,DWORD PTR [edi]
  40313f:	loope  0x4030f3
  403141:	add    ebp,DWORD PTR [edi]
  403143:	inc    DWORD PTR [edx]
  403145:	add    BYTE PTR [edi+0x2f03b12f],ch
  40314b:	std    
  40314c:	mov    al,0x3
  40314e:	das    
  40314f:	jne    0x403103
  403151:	add    ebp,DWORD PTR [edi]
  403153:	pop    ecx
  403154:	mov    dl,0x3
  403156:	das    
  403157:	dec    ebp
  403158:	mov    dl,0x3
  40315a:	das    
  40315b:	inc    ebx
  40315c:	mov    dl,0x3
  40315e:	das    
  40315f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403160:	mov    dl,0x3
  403162:	das    
  403163:	add    eax,0x972f0003
  403168:	mov    al,0x3
  40316a:	das    
  40316b:	add    eax,0xf72f0003
  403170:	xchg   edi,eax
  403171:	add    eax,DWORD PTR [eax]
  403173:	add    BYTE PTR [edi],ch
  403175:	sub    eax,0x492f0398
  40317a:	cwde   
  40317b:	add    ebp,DWORD PTR [edi]
  40317d:	outs   dx,DWORD PTR ds:[esi]
  40317e:	cwde   
  40317f:	add    ebp,DWORD PTR [edi]
  403181:	fstp   DWORD PTR [ecx-0x6620d0fd]
  403187:	add    ebp,DWORD PTR [edi]
  403189:	daa    
  40318a:	cwde   
  40318b:	add    ebp,DWORD PTR [edi]
  40318d:	xor    eax,0xde2f0398
  403192:	jmp    0x40312c
  403194:	sub    al,0xde
  403196:	pop    ss
  403197:	cdq    
  403198:	sub    al,0xde
  40319a:	setns  BYTE PTR [esi+ebx*8]
  40319e:	inc    ebp
  40319f:	cwde   
  4031a0:	sub    al,0xde
  4031a2:	push   ebp
  4031a3:	cwde   
  4031a4:	sub    al,0xde
  4031a6:	cmp    eax,0x23de2c98
  4031ab:	cwde   
  4031ac:	sub    al,0xde
  4031ae:	pop    ss
  4031af:	cwde   
  4031b0:	sub    al,0xde
  4031b2:	retf   
  4031b3:	lahf   
  4031b4:	sub    al,0xde
  4031b6:	fstp   DWORD PTR [edi-0x681621d4]
  4031bc:	sub    al,0xde
  4031be:	fst    QWORD PTR [edi-0x681821d4]
  4031c4:	sub    al,0xde
  4031c6:	stc    
  4031c7:	xchg   edi,eax
  4031c8:	sub    al,0xde
  4031ca:	sub    DWORD PTR [eax-0x609c21d4],ebx
  4031d0:	sub    al,0xde
  4031d2:	inc    ebp
  4031d3:	cwde   
  4031d4:	sub    al,0xde
  4031d6:	sets   BYTE PTR [eax]
  4031d9:	add    BYTE PTR [esi+ebx*8],ch
  4031dc:	imul   ebx,DWORD PTR [eax-0x678421d4],0x984fde2c
  4031e6:	sub    al,0xde
  4031e8:	xor    eax,0xa1de2c98
  4031ed:	cwde   
  4031ee:	sub    al,0xde
  4031f0:	xchg   ecx,eax
  4031f1:	cwde   
  4031f2:	sub    al,0xde
  4031f4:	push   ebp
  4031f5:	cwde   
  4031f6:	sub    al,0xde
  4031f8:	pop    edi
  4031f9:	cwde   
  4031fa:	sub    al,0xde
  4031fc:	out    0x98,eax
  4031fe:	sub    al,0xde
  403200:	out    dx,eax
  403201:	cwde   
  403202:	sub    al,0xde
  403204:	call   FWORD PTR [eax-0x657421d4]
  40320a:	sub    al,0xde
  40320c:	add    BYTE PTR [ebp-0x3b],bl
  40320f:	loope  0x403211
  403211:	imul   esi,DWORD PTR [ebp-0x4966ff1f],0xffffffe1
  403218:	add    BYTE PTR [ebp-0x5eff1e5a],al
  40321e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40321f:	loope  0x403221
  403221:	aad    0x96
  403223:	loope  0x403225
  403225:	fwait
  403226:	cwde   
  403227:	loope  0x403229
  403229:	push   ebp
  40322a:	enter  0xe1,0xc9
  40322e:	(bad)  
  40322f:	loope  0x403231
  403231:	fnsave [esi-0x4824ff1f]
  403237:	loope  0x403239
  403239:	retf   
  40323a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40323b:	loope  0x40323d
  40323d:	rol    DWORD PTR [eax],cl
  40323f:	add    ch,cl
  403241:	loope  0x403243
  403243:	out    0x94,eax
  403245:	loope  0x403247
  403247:	jecxz  0x4031dd
  403249:	loope  0x40324b
  40324b:	bswap  ebx
  40324d:	loope  0x40324f
  40324f:	sub    eax,ebx
  403251:	loope  0x403253
  403253:	sbb    DWORD PTR [ebx-0x4cf0ff1f],edi
  403259:	loope  0x40325b
  40325b:	imul   esp,DWORD PTR [ecx+eiz*8-0x1e5b8100],0x0
  403263:	inc    edi
  403264:	xchg   esp,eax
  403265:	loope  0x403267
  403267:	lahf   
  403268:	xchg   edx,eax
  403269:	loope  0x40326b
  40326b:	mov    cl,0xca
  40326d:	loopne 0x40326f
  40326f:	xor    edx,eax
  403271:	loopne 0x403273
  403273:	inc    edi
  403274:	mov    edx,0xb28100e0
  403279:	loopne 0x40327b
  40327b:	jno    0x403227
  40327d:	loopne 0x40327f
  40327f:	shl    DWORD PTR [edx-0x653eff20],1
  403285:	loopne 0x403287
  403287:	add    BYTE PTR [edx+ebp*2+0x6a900003],dl
  40328e:	add    eax,DWORD PTR [eax]
  403290:	loop   0x4032fc
  403292:	add    eax,DWORD PTR [eax]
  403294:	xor    ch,BYTE PTR [ebx+eax*1+0x0]
  403298:	aam    0x6a
  40329a:	add    eax,DWORD PTR [eax]
  40329c:	aam    0x6a
  40329e:	add    eax,DWORD PTR [eax]
  4032a0:	xor    BYTE PTR [edx+0x3],ch
  4032a3:	add    BYTE PTR [eax],al
  4032a5:	add    dh,bh
  4032a7:	imul   eax,DWORD PTR [ebx],0x369fc00
  4032ad:	add    BYTE PTR [edx+0x6a],ch
  4032b0:	add    eax,DWORD PTR [eax]
  4032b2:	out    dx,al
  4032b3:	imul   eax,DWORD PTR [ebx],0x369ea00
  4032b9:	add    dh,dl
  4032bb:	imul   eax,DWORD PTR [ebx],0x3695e00
  4032c1:	add    al,cl
  4032c3:	je     0x4032c8
  4032c5:	add    dh,al
  4032c7:	je     0x4032cc
  4032c9:	add    ah,dh
  4032cb:	je     0x4032d0
  4032cd:	add    BYTE PTR [esp+esi*2+0x74c80003],dh
  4032d4:	add    eax,DWORD PTR [eax]
  4032d6:	sbb    al,0x75
  4032d8:	add    eax,DWORD PTR [eax]
  4032da:	ss jne 0x4032e0
  4032dd:	add    BYTE PTR [edx],cl
  4032df:	jne    0x4032e4
  4032e1:	add    BYTE PTR [esi*2+0x69a80003],cl
  4032e8:	add    eax,DWORD PTR [eax]
  4032ea:	push   esp
  4032eb:	add    eax,DWORD PTR [bx+si]
  4032ee:	cli    
  4032ef:	push   0x68d80003
  4032f4:	add    eax,DWORD PTR [eax]
  4032f6:	cmp    ah,BYTE PTR [edi+0x3]
  4032f9:	add    dl,ch
  4032fb:	push   0x68f80003
  403300:	add    eax,DWORD PTR [eax]
  403302:	das    
  403303:	xor    ebx,DWORD PTR [edx-0x6454d0fd]
  403309:	add    eax,DWORD PTR [eax]
  40330b:	add    BYTE PTR [edi],ch
  40330d:	mov    ebx,DWORD PTR [ebx+eax*1+0x2f52f]
  403314:	das    
  403315:	rep lods al,BYTE PTR ds:[esi]
  403317:	add    ebp,DWORD PTR [edi]
  403319:	shr    DWORD PTR [ebx+eax*1+0x3ac9b2f],0x2f
  403321:	jnp    0x4032cf
  403323:	add    ebp,DWORD PTR [edi]
  403325:	outs   dx,DWORD PTR ds:[esi]
  403326:	stos   DWORD PTR es:[edi],eax
  403327:	add    ebp,DWORD PTR [edi]
  403329:	popa   
  40332a:	stos   DWORD PTR es:[edi],eax
  40332b:	add    ebp,DWORD PTR [edi]
  40332d:	cmp    ebp,DWORD PTR [ebx-0x54d2d0fd]
  403333:	add    ebp,DWORD PTR [edi]
  403335:	daa    
  403336:	stos   DWORD PTR es:[edi],eax
  403337:	add    ebp,DWORD PTR [edi]
  403339:	stc    
  40333a:	scas   eax,DWORD PTR es:[edi]
  40333b:	add    ebp,DWORD PTR [edi]
  40333d:	sbb    esi,DWORD PTR [eax-0x4fc4d0fd]
  403343:	add    ebp,DWORD PTR [edi]
  403345:	ins    DWORD PTR es:[edi],dx
  403346:	mov    al,0x3
  403348:	das    
  403349:	pop    ebp
  40334a:	mov    al,0x3
  40334c:	das    
  40334d:	test   eax,0x9f2f03b0
  403352:	mov    cl,0x3
  403354:	das    
  403355:	fwait
  403356:	mov    cl,0x3
  403358:	das    
  403359:	in     eax,0xb1
  40335b:	add    ebp,DWORD PTR [edi]
  40335d:	std    
  40335e:	scas   eax,DWORD PTR es:[edi]
  40335f:	add    ebp,DWORD PTR [edi]
  403361:	imul   esi,DWORD PTR [ecx-0x4ff8d0fd],0x3
  403368:	das    
  403369:	and    DWORD PTR [eax+0x2f52f03],esi
  40336f:	add    BYTE PTR [eax],al
  403371:	add    BYTE PTR [edi],ch
  403373:	fadd   QWORD PTR [eax+eax*1]
  403376:	scas   eax,DWORD PTR es:[edi]
  403377:	add    eax,DWORD PTR es:[eax]
  40337a:	scas   eax,DWORD PTR es:[edi]
  40337b:	sub    BYTE PTR [esi-0x2521d0fd],0x3
  403382:	das    
  403383:	pop    esi
  403384:	in     eax,0x3
  403386:	das    
  403387:	pop    esi
  403388:	jge    0x403338
  40338a:	sub    al,0xde
  40338c:	out    0x3,al
  40338e:	das    
  40338f:	pop    esi
  403390:	xchg   ebx,eax
  403391:	scas   al,BYTE PTR es:[edi]
  403392:	sub    al,0xde
  403394:	in     eax,dx
  403395:	mov    cl,0x2c
  403397:	fsubp  st(3),st
  403399:	mov    cl,0x2c
  40339b:	fidivr WORD PTR [ebx]
  40339d:	scas   al,BYTE PTR es:[edi]
  40339e:	sub    al,0xde
  4033a0:	in     al,dx
  4033a1:	add    ebp,DWORD PTR [edi]
  4033a3:	pop    esi
  4033a4:	pop    es
  4033a5:	scas   al,BYTE PTR es:[edi]
  4033a6:	sub    al,0xde
  4033a8:	clc    
  4033a9:	add    ebp,DWORD PTR [edi]
  4033ab:	pop    esi
  4033ac:	pop    ds
  4033ad:	scas   al,BYTE PTR es:[edi]
  4033ae:	sub    al,0xde
  4033b0:	inc    ebp
  4033b1:	scas   al,BYTE PTR es:[edi]
  4033b2:	sub    al,0xde
  4033b4:	out    0x3,eax
  4033b6:	das    
  4033b7:	pop    esi
  4033b8:	fadd   QWORD PTR [ebx]
  4033ba:	das    
  4033bb:	pop    esi
  4033bc:	xlat   BYTE PTR ds:[ebx]
  4033bd:	add    ebp,DWORD PTR [edi]
  4033bf:	pop    esi
  4033c0:	pop    ebp
  4033c1:	add    al,0x2f
  4033c3:	pop    esi
  4033c4:	stc    
  4033c5:	add    ebp,DWORD PTR [edi]
  4033c7:	pop    esi
  4033c8:	jmp    0x4033cd
  4033ca:	das    
  4033cb:	pop    esi
  4033cc:	test   BYTE PTR [ebx],0x2f
  4033cf:	pop    esi
  4033d0:	aas    
  4033d1:	mov    cl,0x2c
  4033d3:	fidivr WORD PTR [ecx]
  4033d5:	add    al,0x0
  4033d7:	add    BYTE PTR [edi],ch
  4033d9:	pop    esi
  4033da:	jmp    0x2f03:0xda5e2f03
  4033e1:	pop    esi
  4033e2:	hlt    
  4033e3:	add    ebp,DWORD PTR [edi]
  4033e5:	pop    esi
  4033e6:	call   0xfd9e62ee
  4033eb:	add    ebp,DWORD PTR [edi]
  4033ed:	pop    esi
  4033ee:	jmp    0xfe1e62f6
  4033f3:	lods   al,BYTE PTR ds:[esi]
  4033f4:	sub    al,0xde
  4033f6:	jmp    FWORD PTR [esp+ebp*1-0x359eff22]
  4033fd:	fld    QWORD PTR [eax]
  4033ff:	pop    ebx
  403400:	ret    0xdd
  403403:	test   edx,ebx
  403405:	fld    QWORD PTR [eax]
  403407:	test   edx,edx
  403409:	fld    QWORD PTR [eax]
  40340b:	xchg   edx,ecx
  40340d:	fld    QWORD PTR [eax]
  40340f:	xchg   ecx,eax
  403410:	ret    0xdd
  403413:	sub    ebx,DWORD PTR [edx-0x6dd2ff23]
  403419:	fld    QWORD PTR [eax]
  40341b:	adc    DWORD PTR [edx-0x7db8ff23],ecx
  403421:	fld    QWORD PTR [eax]
  403423:	sbb    eax,0x1f00dd9a
  403428:	xchg   edx,eax
  403429:	fld    QWORD PTR [eax]
  40342b:	jnp    0x4033b2
  40342d:	fld    QWORD PTR [eax]
  40342f:	jmp    0x91411260
  403434:	fcomp  st(5)
  403436:	add    BYTE PTR [ecx-0x48ff2230],bl
  40343c:	add    BYTE PTR [eax],al
  40343e:	enter  0xdd,0xbd
  403442:	rcr    ch,0x0
  403445:	add    edi,DWORD PTR [edi-0x2f14ff23]
  40344b:	fld    QWORD PTR [eax]
  40344d:	fnstcw WORD PTR [ebp-0x4252ff23]
  403453:	fld    QWORD PTR [eax]
  403455:	mov    ch,0x9d
  403457:	fld    QWORD PTR [eax]
  403459:	jmp    0x9241128a
  40345e:	scas   eax,DWORD PTR es:[edi]
  40345f:	push   eax
  403460:	ds mov al,0xcf
  403463:	cmovl  ecx,DWORD PTR [ecx+0x16]
  403467:	std    
  403468:	out    dx,al
  403469:	add    al,0xbd
  40346b:	push   0xbe934d3d
  403470:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403471:	imul   esp,DWORD PTR [ecx],0x73004f10
  403477:	aad    0x16
  403479:	jae    0x4034d0
  40347b:	pop    ds
  40347c:	scas   eax,DWORD PTR es:[edi]
  40347d:	push   ss
  40347e:	sbb    ebx,edx
  403480:	rcr    DWORD PTR [edx],0xa9
  403483:	ficomp WORD PTR [ebp+0x4e]
  403486:	test   eax,0xb0b12ec8
  40348b:	mov    cl,0x98
  40348d:	mov    bh,0xa
  40348f:	stc    
  403490:	mov    dh,bl
  403492:	vpslld ymm0,ymm5,XMMWORD PTR [edx-0x7b]
  403497:	fisub  WORD PTR [edi-0x22]
  40349a:	fucom  st(4)
  40349c:	cld    
  40349d:	and    edx,DWORD PTR [ecx+0x5e]
  4034a0:	ins    BYTE PTR es:[edi],dx
  4034a1:	pop    esi
  4034a2:	add    BYTE PTR [eax],al
  4034a4:	and    al,0x10
  4034a6:	pop    edi
  4034a7:	inc    edi
  4034a8:	lods   al,BYTE PTR ds:[esi]
  4034a9:	add    ch,dl
  4034ab:	xor    edi,DWORD PTR [ecx+0x4773713a]
  4034b1:	inc    eax
  4034b2:	xor    ebp,DWORD PTR [ecx]
  4034b4:	fdiv   DWORD PTR [ebx-0x2e]
  4034b7:	adc    DWORD PTR [ebx+edx*1-0x1],esp
  4034bb:	mov    edi,0x603e54d1
  4034c0:	sti    
  4034c1:	aas    
  4034c2:	xor    ebp,DWORD PTR [ecx]
  4034c4:	fdiv   DWORD PTR [ebx-0x2e]
  4034c7:	adc    DWORD PTR [edi+ecx*1+0x5a51bfff],esp
  4034ce:	ds pusha 
  4034d0:	adc    al,0x93
  4034d2:	pop    es
  4034d3:	cmc    
  4034d4:	aaa    
  4034d5:	dec    ecx
  4034d6:	rcl    DWORD PTR [ecx],cl
  4034d8:	fbstp  TBYTE PTR [eax+eax*1]
  4034db:	add    BYTE PTR [esi-0x1e],ch
  4034de:	loop   0x403501
  4034e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034e1:	mov    dh,0x48
  4034e3:	loopne 0x403466
  4034e5:	retf   0x4d9c
  4034e8:	clc    
  4034e9:	pop    ss
  4034ea:	ja     0x40352d
  4034ec:	xchg   BYTE PTR [ebp+edx*4-0x9],cl
  4034f0:	das    
  4034f1:	push   0x7a
  4034f3:	mov    DWORD PTR [eax],edi
  4034f5:	inc    edx
  4034f6:	mov    edx,0xd8937132
  4034fb:	fisubr DWORD PTR [ecx]
  4034fd:	bound  edx,QWORD PTR [ebx]
  4034ff:	sbb    bl,BYTE PTR ds:0x23a53f38
  403505:	retf   0x6c2d
  403508:	add    BYTE PTR [eax],al
  40350a:	jne    0x40354c
  40350c:	xchg   edx,eax
  40350d:	lahf   
  40350e:	jns    0x403515
  403510:	std    
  403511:	jge    0x403515
  403513:	xor    al,0xda
  403515:	dec    esp
  403516:	aas    
  403517:	out    dx,al
  403518:	push   esi
  403519:	fsubr  DWORD PTR [edi-0x57]
  40351c:	sub    bh,BYTE PTR [ecx-0x64073ec4]
  403522:	add    ebp,DWORD PTR [esi-0x797daad9]
  403528:	(bad)  
  403529:	dec    edx
  40352a:	jo     0x4034bb
  40352c:	or     eax,0x6e1533fc
  403531:	mov    bh,0xf7
  403533:	rcr    DWORD PTR ds:0x489a3fdd,1
  403539:	call   0x2434d42f
  40353e:	fld    st(4)
  403540:	sub    BYTE PTR ds:[eax+0x1e65bc9c],ch
  403547:	jge    0x4034de
  403549:	mov    ebp,0x53e676ed
  40354e:	pop    ds
  40354f:	jno    0x40356c
  403551:	pop    edx
  403552:	sub    eax,0xf1c18d2f
  403557:	add    DWORD PTR [ebx-0x2f],esi
  40355a:	ds jb  0x4034f0
  40355d:	add    BYTE PTR [edi-0x48],ch
  403560:	int3   
  403561:	std    
  403562:	pop    eax
  403563:	jbe    0x403502
  403565:	adc    dh,BYTE PTR [ebx-0x48]
  403568:	jno    0x403539
  40356a:	push   ds
  40356b:	fidiv  WORD PTR [ecx+0x36]
  40356e:	add    BYTE PTR [eax],al
  403570:	das    
  403571:	xor    al,0xe9
  403573:	cmp    BYTE PTR [ecx],cl
  403575:	ret    0x2773
  403578:	cli    
  403579:	xchg   esp,eax
  40357a:	add    dl,BYTE PTR [ebx-0x2]
  40357d:	in     al,dx
  40357e:	push   edi
  40357f:	popf   
  403580:	das    
  403581:	push   ds
  403582:	cs scas al,BYTE PTR es:[edi]
  403584:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403585:	mov    ebp,0x2a3d9d69
  40358a:	out    dx,al
  40358b:	jo     0x403585
  40358d:	in     al,dx
  40358e:	jno    0x4035c6
  403590:	das    
  403591:	xor    al,0xe9
  403593:	cmp    BYTE PTR [ecx-0x3e],cl
  403596:	jo     0x40355f
  403598:	pop    ecx
  403599:	jno    0x4035f8
  40359b:	cmp    eax,0x2f658aec
  4035a1:	xor    al,0xe9
  4035a3:	xor    DWORD PTR [edi+0x1f],ebp
  4035a6:	outs   dx,BYTE PTR ds:[esi]
  4035a7:	popf   
  4035a8:	cmp    eax,0xf870ae2a
  4035ad:	in     al,dx
  4035ae:	jno    0x4035e6
  4035b0:	das    
  4035b1:	xor    al,0xe9
  4035b3:	cmp    BYTE PTR [ecx],cl
  4035b5:	ret    0x6be8
  4035b8:	stos   BYTE PTR es:[edi],al
  4035b9:	mov    DWORD PTR [eax+0x70],ebp
  4035bc:	js     0x4035aa
  4035be:	jno    0x4035f6
  4035c0:	das    
  4035c1:	xor    al,0xe9
  4035c3:	cmp    BYTE PTR [ecx-0x3e],cl
  4035c6:	or     BYTE PTR [esi+edx*1],bh
  4035c9:	fdivr  QWORD PTR [eax-0x75138634]
  4035cf:	cmp    ebp,DWORD PTR [edi]
  4035d1:	fsubp  st(1),st
  4035d3:	add    eax,DWORD PTR [eax]
  4035d5:	add    BYTE PTR [edi],ch
  4035d7:	fstp   QWORD PTR [edx+ebp*4-0x3d]
  4035db:	mov    eax,ds:0xec7feccd
  4035e0:	mov    DWORD PTR [eax+0x2f],esp
  4035e3:	push   ds
  4035e4:	cs call 0x3985:0x3d00bda7
  4035ec:	inc    esp
  4035ed:	lods   eax,DWORD PTR ds:[esi]
  4035ee:	pop    ebx
  4035ef:	sub    eax,0xddcf4911
  4035f4:	shr    BYTE PTR [esi],0x95
  4035f7:	push   ebp
  4035f8:	and    BYTE PTR [ebp-0x6f],ah
  4035fb:	add    ebx,DWORD PTR [edx+ecx*8]
  4035fe:	daa    
  4035ff:	das    
  403600:	adc    DWORD PTR [edx+eax*4-0x22],edx
  403604:	shr    BYTE PTR [esi],0xdb
  403607:	add    edi,edi
  403609:	in     eax,dx
  40360a:	scas   eax,DWORD PTR es:[edi]
  40360b:	xchg   ecx,eax
  40360c:	xor    eax,edi
  40360e:	and    BYTE PTR [edx],cl
  403610:	dec    esp
  403611:	or     DWORD PTR [edi+0x5b3a4ad],0xffffffe8
  403618:	push   esi
  403619:	xchg   ebp,eax
  40361a:	or     bl,BYTE PTR [esi-0x15]
  40361d:	sbb    al,BYTE PTR [ecx+0x30]
  403620:	adc    DWORD PTR [edi-0x513f210e],edx
  403626:	mov    dh,0x56
  403628:	and    BYTE PTR [esi],ch
  40362a:	cmp    DWORD PTR [esp+eax*8+0x62],esp
  40362e:	(bad)  
  40362f:	xor    BYTE PTR [ecx],dl
  403631:	ins    BYTE PTR es:[edi],dx
  403632:	xchg   esi,ebx
  403634:	adc    bl,al
  403636:	sub    eax,0x2c0461
  40363b:	add    ch,ch
  40363d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40363e:	mov    ds:0x48ca94fa,eax
  403643:	jae    0x403696
  403645:	dec    eax
  403646:	jg     0x403624
  403648:	cmc    
  403649:	xor    BYTE PTR [esi+0x50],0x4f
  40364d:	retf   
  40364e:	dec    ecx
  40364f:	add    BYTE PTR [ebx+0x2f],0x11
  403653:	xchg   edi,eax
  403654:	(bad)  
  403655:	faddp  st(0),st
  403657:	cs xchg ebp,eax
  403659:	push   esi
  40365a:	and    BYTE PTR [ecx+0x6a],ah
  40365d:	(bad)  [edi]
  40365f:	jg     0x40366c
  403661:	xor    BYTE PTR [ecx],dl
  403663:	add    ch,ah
  403665:	cwde   
  403666:	add    BYTE PTR [eax],dl
  403668:	or     al,0xe1
  40366a:	xor    DWORD PTR [edi-0xc],0xed4935e4
  403671:	retf   0x11d1
  403674:	fdiv   DWORD PTR [esi]
  403676:	add    al,al
  403678:	or     DWORD PTR [eax-0x78],ebp
  40367b:	and    BYTE PTR [edi],dh
  40367d:	sub    DWORD PTR [eax-0x2f2203bb],edx
  403683:	adc    DWORD PTR [edi+0x6aa00e0],ebx
  403689:	xchg   esp,eax
  40368a:	cs and al,0x7e
  40368d:	ja     0x4036da
  40368f:	addr16 fs (bad) 
  403693:	adc    DWORD PTR [ebx-0x363fff57],ebx
  403699:	dec    eax
  40369a:	std    
  40369b:	jmp    FWORD PTR [esi]
  40369d:	mov    edx,0x49bd
  4036a2:	xor    eax,0xbb11d007
  4036a7:	mov    eax,ds:0x4889c000
  4036ac:	std    
  4036ad:	inc    DWORD PTR [eax-0xf]
  4036b0:	gs call 0x2263:0x11d107a9
  4036b8:	add    BYTE PTR [eax],dl
  4036ba:	jge    0x40366c
  4036bc:	ds std 
  4036be:	jno    0x403647
  4036c0:	scas   eax,DWORD PTR es:[edi]
  4036c1:	ins    DWORD PTR es:[edi],dx
  4036c2:	or     esi,0x11f811d2
  4036c8:	add    al,al
  4036ca:	leave  
  4036cb:	data16 mov BYTE PTR [eax],ah
  4036ce:	pop    ebx
  4036cf:	cli    
  4036d0:	xchg   bl,ch
  4036d2:	(bad)
  4036d5:	adc    DWORD PTR [eax+0x49c00018],ebx
  4036db:	push   0x352f2088
  4036e0:	push   ss
  4036e1:	sahf   
  4036e2:	jae    0x403763
  4036e4:	mov    al,ds:0xb8723ed2
  4036e9:	add    BYTE PTR [edi],bh
  4036eb:	rol    DWORD PTR [ecx],0x83
  4036ee:	sub    ecx,DWORD PTR [ecx+0x6a]
  4036f1:	adc    eax,0xd1391470
  4036f6:	push   ds
  4036f7:	stos   BYTE PTR es:[edi],al
  4036f8:	mov    DWORD PTR [eax],eax
  4036fa:	outs   dx,DWORD PTR ds:[esi]
  4036fb:	mov    bl,0xbc
  4036fd:	std    
  4036fe:	xor    BYTE PTR [ecx+0x65ba1c37],cl
  403704:	mov    BYTE PTR [ebx-0x6b8c0000],dh
  40370a:	mov    bh,0x56
  40370c:	sar    BYTE PTR [eax-0x713664c2],1
  403712:	push   DWORD PTR [edx-0x2c49d540]
  403718:	push   ds
  403719:	push   esi
  40371a:	add    BYTE PTR [eax],al
  40371c:	pop    ds
  40371d:	pop    ds
  40371e:	add    BYTE PTR [ecx+0x55],dl
  403721:	out    dx,eax
  403722:	mov    WORD PTR [edi-0x2c313358],?
  403728:	ds push esi
  40372a:	std    
  40372b:	jmp    FWORD PTR [eax]
  40372d:	aas    
  40372e:	add    BYTE PTR [ecx+0x75],dl
  403731:	cmp    edi,DWORD PTR [eax-0x51]
  403734:	pop    edx
  403735:	or     al,0x31
  403737:	rcr    BYTE PTR [esi],cl
  403739:	stos   DWORD PTR es:[edi],eax
  40373a:	retf   
  40373b:	add    bh,ch
  40373d:	xor    al,0x99
  40373f:	mov    BYTE PTR [edi],cl
  403741:	cmc    
  403742:	add    al,BYTE PTR [eax]
  403744:	das    
  403745:	cmc    
  403746:	add    al,BYTE PTR [eax]
  403748:	das    
  403749:	test   DWORD PTR [eax],eax
  40374b:	inc    ebx
  40374c:	das    
  40374d:	stc    
  40374e:	add    al,BYTE PTR [edi+ebp*1]
  403751:	std    
  403752:	add    al,BYTE PTR [edi+ebp*1]
  403755:	cmc    
  403756:	and    DWORD PTR [ebx+0x2f],eax
  403759:	fsubp  st(5),st
  40375b:	add    esi,DWORD PTR [edx]
  40375d:	fdivp  st(1),st
  40375f:	add    esp,DWORD PTR [edi]
  403761:	fsubp  st(1),st
  403763:	and    ch,ah
  403765:	fucom  st(5)
  403767:	add    ebp,DWORD PTR [ecx]
  403769:	fimul  WORD PTR [ecx]
  40376b:	add    al,0x0
  40376d:	add    BYTE PTR [edi],cl
  40376f:	fsubp  st(1),st
  403771:	and    ch,ah
  403773:	fucomp st(5)
  403775:	add    esi,DWORD PTR [ebx]
  403777:	fcompp 
  403779:	add    ebx,DWORD PTR [edi]
  40377b:	fcompp 
  40377d:	daa    
  40377e:	in     al,dx
  40377f:	(bad)  
  403781:	add    ebx,DWORD PTR [edi]
  403783:	fmulp  st(1),st
  403785:	add    ecx,DWORD PTR [edi-0x22]
  403788:	fldenv [edi]
  40378a:	ins    BYTE PTR es:[edi],dx
  40378b:	fdivrp st(1),st
  40378d:	add    edi,DWORD PTR [edi]
  40378f:	fisubr WORD PTR [ecx+0x3]
  403792:	scas   eax,DWORD PTR es:[edi]
  403793:	fnstsw WORD PTR [ecx-0x1e2193d9]
  403799:	add    ecx,DWORD PTR [edi-0x22]
  40379c:	imul   eax,DWORD PTR [ebx],0x2819dd2f
  4037a2:	ins    BYTE PTR es:[edi],dx
  4037a3:	fimul  WORD PTR [ecx]
  4037a5:	add    al,0xaf
  4037a7:	fucomp st(3)
  4037a9:	add    ch,BYTE PTR [edi]
  4037ab:	(bad)  
  4037ad:	daa    
  4037ae:	ins    BYTE PTR es:[edi],dx
  4037af:	fimul  WORD PTR [ecx]
  4037b1:	add    al,0x2d
  4037b3:	fucomp st(3)
  4037b5:	add    ch,BYTE PTR [edi]
  4037b7:	out    dx,al
  4037b8:	stc    
  4037b9:	daa    
  4037ba:	ins    BYTE PTR es:[edi],dx
  4037bb:	fsubp  st(1),st
  4037bd:	add    ebp,DWORD PTR [edi]
  4037bf:	fsubp  st(1),st
  4037c1:	add    ebp,DWORD PTR [edi]
  4037c3:	fimul  WORD PTR [ecx-0x1621d0f8]
  4037c9:	or     edi,edi
  4037cb:	fucomp st(1)
  4037cd:	or     edi,DWORD PTR [edi]
  4037cf:	(bad)  
  4037d1:	or     eax,DWORD PTR [eax]
  4037d3:	add    BYTE PTR [esi+ebx*8],bl
  4037d6:	add    bl,bl
  4037d8:	aaa    
  4037d9:	jecxz  0x4037db
  4037db:	jmp    0xe940c614
  4037e0:	and    al,0xce
  4037e2:	add    cl,ch
  4037e4:	and    ebx,DWORD PTR [esi]
  4037e6:	add    cl,bh
  4037e8:	xor    eax,ebx
  4037ea:	add    cl,ch
  4037ec:	xor    al,0x7e
  4037ee:	add    cl,ch
  4037f0:	and    al,0xbe
  4037f2:	add    cl,ch
  4037f4:	and    edi,DWORD PTR [esi]
  4037f6:	add    cl,ch
  4037f8:	xor    al,0xde
  4037fa:	add    cl,ch
  4037fc:	xor    al,0x5e
  4037fe:	add    cl,ch
  403800:	and    al,0x9e
  403802:	add    cl,ch
  403804:	and    edi,esi
  403806:	(bad)  
  403807:	clc    
  403808:	xor    eax,ebx
  40380a:	add    cl,ch
  40380c:	xor    al,0xa6
  40380e:	add    cl,ch
  403810:	and    al,0xe6
  403812:	add    cl,ch
  403814:	and    ebp,DWORD PTR [esi+0x0]
  403817:	fidiv  DWORD PTR [ecx]
  403819:	lds    eax,FWORD PTR [eax]
  40381b:	jmp    0xe940be54
  403820:	and    al,0xc6
  403822:	add    cl,ch
  403824:	and    ebp,DWORD PTR [esi]
  403826:	add    al,bh
  403828:	xor    edi,ebp
  40382a:	add    cl,ch
  40382c:	xor    al,0x76
  40382e:	add    cl,ch
  403830:	and    al,0xb6
  403832:	add    cl,ch
  403834:	and    ecx,DWORD PTR [esi+0x0]
  403837:	jmp    0xd674383c
  40383c:	add    cl,ch
  40383e:	xor    al,0x56
  403840:	add    cl,ch
  403842:	and    al,0x96
  403844:	add    cl,ch
  403846:	and    ecx,DWORD PTR [esi]
  403848:	add    cl,bh
  40384a:	xor    edx,ebx
  40384c:	add    cl,ch
  40384e:	xor    al,0xaa
  403850:	add    BYTE PTR [eax],al
  403852:	xchg   ch,dl
  403854:	adc    al,0x0
  403856:	jnp    0x40382d
  403858:	jecxz  0x40385a
  40385a:	fsubr  DWORD PTR gs:[ebx]
  40385d:	add    BYTE PTR [esi-0x79ff8b2b],dl
  403863:	aad    0x34
  403865:	add    BYTE PTR [esi+0x6700c8d2],al
  40386b:	fmul   DWORD PTR ds:0x64d55600
  403871:	add    BYTE PTR [esi-0x2b],al
  403874:	and    al,0x0
  403876:	inc    esi
  403877:	shr    BYTE PTR [eax+0x4d55600],cl
  40387d:	add    BYTE PTR [esi-0x2b],dl
  403880:	test   BYTE PTR [eax],al
  403882:	inc    esi
  403883:	aad    0x44
  403885:	add    BYTE PTR [esi-0x2e],al
  403888:	call   0x9185e8d
  40388d:	add    BYTE PTR [esi],dl
  40388f:	aad    0x5c
  403891:	add    BYTE PTR [esi],al
  403893:	aad    0x1c
  403895:	add    BYTE PTR [esi],al
  403897:	rcr    BYTE PTR [eax+0x53d7ea00],cl
  40389d:	add    BYTE PTR [eax],al
  40389f:	add    BYTE PTR [esi],dl
  4038a1:	aad    0x7c
  4038a3:	add    BYTE PTR [esi],al
  4038a5:	aad    0x3c
  4038a7:	add    BYTE PTR [esi],al
  4038a9:	rcr    al,cl
  4038ab:	add    ah,ah
  4038ad:	xlat   BYTE PTR ds:[ebx]
  4038ae:	pop    ss
  4038af:	add    dh,dl
  4038b1:	aam    0x6c
  4038b3:	add    dh,al
  4038b5:	aam    0x2c
  4038b7:	add    dh,al
  4038b9:	sar    DWORD PTR [eax+0xcd4d600],1
  4038bf:	add    dh,dl
  4038c1:	aam    0x8c
  4038c3:	add    dh,al
  4038c5:	aam    0x4c
  4038c7:	add    dh,al
  4038c9:	sar    eax,1
  4038cb:	add    BYTE PTR [edi],ch
  4038cd:	pop    es
  4038ce:	push   es
  4038cf:	add    ebp,DWORD PTR [edi]
  4038d1:	test   DWORD PTR [edx],0xaf72f52
  4038d7:	adc    ch,BYTE PTR [edi]
  4038d9:	sub    cl,BYTE PTR [ebx]
  4038db:	mov    ds:0x2306242f,eax
  4038e0:	das    
  4038e1:	test   DWORD PTR [edx],0xaf72f72
  4038e7:	xor    ch,BYTE PTR [edi]
  4038e9:	test   DWORD PTR [ecx],0x4062fc4
  4038ef:	or     ebp,DWORD PTR [edi]
  4038f1:	test   DWORD PTR [edx],0xaf72f62
  4038f7:	and    ch,BYTE PTR [edi]
  4038f9:	test   DWORD PTR [ecx],0xaf72fa4
  4038ff:	add    ch,BYTE PTR [edi]
  403901:	test   DWORD PTR [edx],0x2f000082
  403907:	test   DWORD PTR [edx],0x9f72f42
  40390d:	in     al,0x2f
  40390f:	add    eax,0xf52f0704
  403914:	or     bl,BYTE PTR [edx+0x2f]
  403917:	cmc    
  403918:	or     bl,BYTE PTR [edx]
  40391a:	das    
  40391b:	cmc    
  40391c:	or     DWORD PTR [edi+ebp*1+0x2f430421],edx
  403923:	cmc    
  403924:	or     bh,BYTE PTR [edx+0x2f]
  403927:	cmc    
  403928:	or     bh,BYTE PTR [edx]
  40392a:	das    
  40392b:	cmc    
  40392c:	or     esp,edx
  40392e:	das    
  40392f:	add    eax,DWORD PTR [ebx+edx*1]
  403932:	das    
  403933:	cmc    
  403934:	or     ch,BYTE PTR [edx+0x2f]
  403937:	cmc    
  403938:	or     ch,BYTE PTR [edx]
  40393a:	das    
  40393b:	cmc    
  40393c:	or     DWORD PTR [edi+ebp*1+0x2f0a0af5],esi
  403943:	cmc    
  403944:	or     cl,BYTE PTR [edx+0xbe9de2f]
  40394a:	gs fsubp st(1),st
  40394d:	or     ah,BYTE PTR [ebx+0x2a04f9de]
  403953:	fsubp  st(1),st
  403955:	or     eax,DWORD PTR [ecx]
  403957:	fsubp  st(1),st
  403959:	or     edi,DWORD PTR [ecx]
  40395b:	fisubr WORD PTR [ecx-0x2521d0f5]
  403961:	add    al,0x3c
  403963:	fsubp  st(1),st
  403965:	or     eax,DWORD PTR [ecx]
  403967:	fsubp  st(1),st
  403969:	or     eax,DWORD PTR [eax]
  40396b:	add    BYTE PTR [ecx],bh
  40396d:	fsubp  st(1),st
  40396f:	or     bh,BYTE PTR [ebx-0x22]
  403972:	clc    
  403973:	add    al,0x30
  403975:	fsubp  st(1),st
  403977:	or     edx,ecx
  403979:	fucomp st(1)
  40397b:	or     ecx,DWORD PTR [ecx]
  40397d:	fsubp  st(1),st
  40397f:	or     bl,BYTE PTR [ebx+0x290be9de]
  403985:	fsubp  st(1),st
  403987:	or     esi,DWORD PTR [ecx-0x16f41622]
  40398d:	fucomp st(1)
  40398f:	or     bl,BYTE PTR [ebx]
  403991:	fdivp  st(1),st
  403993:	add    al,0x36
  403995:	fsubp  st(1),st
  403997:	or     edi,DWORD PTR [ecx-0x22]
  40399a:	jmp    0xea1e6aaa
  40399f:	or     ch,BYTE PTR [ebx-0x73fb2223]
  4039a5:	fsubp  st(1),st
  4039a7:	or     edi,DWORD PTR [ecx-0x22]
  4039aa:	jmp    0xea1e6aba
  4039af:	or     cl,BYTE PTR [ebx]
  4039b1:	fdivp  st(3),st
  4039b3:	add    al,0x44
  4039b5:	fsubp  st(1),st
  4039b7:	or     ecx,DWORD PTR [ecx-0x22]
  4039ba:	jmp    0xea1e3aca
  4039bf:	or     cl,BYTE PTR [ebx+0x34e900dd]
  4039c5:	rol    BYTE PTR [eax],1
  4039c7:	jmp    0xe94089f0
  4039cc:	and    al,0x90
  4039ce:	add    cl,ch
  4039d0:	add    BYTE PTR [eax],al
  4039d2:	xor    eax,0x2b890002
  4039d7:	fiadd  WORD PTR [eax]
  4039d9:	jmp    0xe940e702
  4039de:	and    al,0xed
  4039e0:	add    ah,dl
  4039e2:	xor    al,0x5b
  4039e4:	add    bl,bl
  4039e6:	sub    ebx,edi
  4039e8:	add    cl,ch
  4039ea:	and    al,0x8d
  4039ec:	add    cl,ch
  4039ee:	and    al,0xcd
  4039f0:	add    cl,ch
  4039f2:	cmp    ebx,DWORD PTR [eax+eax*1]
  4039f5:	stc    
  4039f6:	sub    eax,0x24e900d4
  4039fb:	jge    0x4039fd
  4039fd:	jmp    0xe940f726
  403a02:	cmp    edi,DWORD PTR [eax+eax*1]
  403a05:	jmp    0xe941173e
  403a0a:	and    al,0x5d
  403a0c:	add    cl,ch
  403a0e:	and    al,0x9d
  403a10:	add    cl,ch
  403a12:	cmp    eax,DWORD PTR [eax]
  403a14:	add    cl,bh
  403a16:	sub    eax,0x24e900e4
  403a1b:	xchg   edi,eax
  403a1c:	add    cl,ch
  403a1e:	and    al,0xd7
  403a20:	add    cl,ch
  403a22:	cmp    edx,DWORD PTR [eax+0x0]
  403a25:	fisubr DWORD PTR ds:0x24e900b9
  403a2b:	ja     0x403a2d
  403a2d:	jmp    0xe940f156
  403a32:	cmp    edx,DWORD PTR [eax]
  403a34:	add    al,bh
  403a36:	add    BYTE PTR [eax],al
  403a38:	sub    eax,0x24e900cf
  403a3d:	xchg   DWORD PTR [eax],eax
  403a3f:	add    dh,al
  403a41:	jmp    0xeb163a6f
  403a46:	mov    dl,0x0
  403a48:	(bad)  
  403a49:	jmp    0xea063a57
  403a4e:	mov    DWORD PTR [eax],eax
  403a50:	(bad)  
  403a51:	jmp    0xead63a9f
  403a56:	repnz add BYTE PTR [esi-0x79fffb20],ah
  403a5d:	jmp    0xe9c63ab7
  403a62:	adc    eax,0x2e96600
  403a67:	add    DWORD PTR [ebp-0x20],esp
  403a6a:	sub    eax,DWORD PTR [eax]
  403a6c:	xchg   cl,ch
  403a6e:	jne    0x403a70
  403a70:	xchg   cl,ch
  403a72:	xor    eax,0xcaea5600
  403a77:	add    BYTE PTR [edi-0x20],ah
  403a7a:	or     eax,0x65e94600
  403a7f:	add    BYTE PTR [esi-0x17],al
  403a82:	and    eax,0xaaea5600
  403a87:	add    BYTE PTR [esi-0x17],dl
  403a8a:	add    eax,0x85e94600
  403a8f:	add    BYTE PTR [esi-0x17],al
  403a92:	inc    ebp
  403a93:	add    BYTE PTR [esi],dl
  403a95:	jmp    0x8:0xe02600ea
  403a9c:	add    BYTE PTR [eax],al
  403a9e:	push   es
  403a9f:	jmp    0xe9463b01
  403aa4:	sbb    eax,0x9aea1600
  403aa9:	add    dl,ah
  403aab:	fist   WORD PTR [ebx+0x0]
  403aae:	push   es
  403aaf:	jmp    0xe9463b31
  403ab4:	cmp    eax,0xdae9d600
  403ab9:	add    BYTE PTR [edi],ch
  403abb:	stc    
  403abc:	add    DWORD PTR [edi],edx
  403abe:	das    
  403abf:	pop    es
  403ac0:	or     ebp,DWORD PTR [ebp+0x2f]
  403ac3:	pop    es
  403ac4:	or     ebp,DWORD PTR ds:0xba0c072f
  403aca:	das    
  403acb:	pop    es
  403acc:	or     ecx,DWORD PTR ds:0x8d0b072f
  403ad2:	das    
  403ad3:	pop    es
  403ad4:	or     ecx,DWORD PTR [ebp+0x2f]
  403ad7:	pop    es
  403ad8:	or     al,0xfa
  403ada:	das    
  403adb:	test   DWORD PTR [ecx],0xb072f03
  403ae1:	push   ebx
  403ae2:	das    
  403ae3:	pop    es
  403ae4:	or     edx,DWORD PTR [ebx]
  403ae6:	das    
  403ae7:	adc    cl,BYTE PTR [ebx]
  403ae9:	ret    
  403aea:	das    
  403aeb:	sbb    BYTE PTR [edx],al
  403aed:	and    ebp,DWORD PTR [edi]
  403aef:	pop    es
  403af0:	or     esi,DWORD PTR [ebx+0x2f]
  403af3:	pop    es
  403af4:	or     esi,DWORD PTR [ebx]
  403af6:	das    
  403af7:	pop    es
  403af8:	or     al,dh
  403afa:	das    
  403afb:	idiv   bh
  403afd:	or     ch,BYTE PTR [edi]
  403aff:	pop    es
  403b00:	or     esp,DWORD PTR [ebx+0x0]
  403b03:	add    BYTE PTR [edi],ch
  403b05:	pop    es
  403b06:	or     esp,DWORD PTR [ebx]
  403b08:	das    
  403b09:	pop    es
  403b0a:	or     ah,BYTE PTR [esi+0x30b072f]
  403b10:	das    
  403b11:	pop    es
  403b12:	or     eax,DWORD PTR [ebx+0x430b072f]
  403b18:	das    
  403b19:	add    eax,0xf52fe60a
  403b1e:	inc    DWORD PTR [esi]
  403b20:	das    
  403b21:	add    eax,0x52f5b0b
  403b26:	or     ebx,DWORD PTR [ebx]
  403b28:	das    
  403b29:	add    eax,0x192f960a
  403b2e:	add    BYTE PTR [ebx+0x2f],al
  403b31:	add    eax,0xde2f7b0b
  403b36:	jmp    0xea1e5f46
  403b3b:	or     bh,cl
  403b3d:	fdivp  st(3),st
  403b3f:	add    BYTE PTR [esi+ebx*8],bh
  403b42:	jmp    0xea1e7f52
  403b47:	or     edx,DWORD PTR [esi+ebx*8]
  403b4a:	jmp    0xea1eb459
  403b4f:	or     esp,DWORD PTR [esi+ebx*8]
  403b52:	jmp    0xea1edf62
  403b57:	or     esi,esp
  403b59:	fucomp st(1)
  403b5b:	or     bl,BYTE PTR [ecx+0x3200f9de]
  403b61:	fsubp  st(1),st
  403b63:	or     edi,eax
  403b65:	fucomp st(1)
  403b67:	or     eax,DWORD PTR [eax]
  403b69:	add    BYTE PTR [eax],ah
  403b6b:	fisubr WORD PTR [ecx-0x2521d0f5]
  403b71:	add    BYTE PTR [esi+ebx*8],bh
  403b74:	jmp    0xea1e3384
  403b79:	or     esp,DWORD PTR [eax]
  403b7b:	fsubp  st(1),st
  403b7d:	or     dh,BYTE PTR [ecx-0x22]
  403b80:	clc    
  403b81:	add    BYTE PTR [eax],ch
  403b83:	fsubp  st(1),st
  403b85:	or     ecx,eax
  403b87:	fucomp st(1)
  403b89:	or     edx,DWORD PTR [eax]
  403b8b:	fsubp  st(1),st
  403b8d:	or     dl,BYTE PTR [ecx+0x300be9de]
  403b93:	fsubp  st(1),st
  403b95:	or     ebp,DWORD PTR [eax+0x700be9de]
  403b9b:	fsubp  st(1),st
  403b9d:	or     dl,BYTE PTR [ecx]
  403b9f:	fdivp  st(1),st
  403ba1:	add    BYTE PTR [esi],ah
  403ba3:	fsubp  st(1),st
  403ba5:	or     esi,DWORD PTR [eax-0x22]
  403ba8:	jmp    0xea1e63b8
  403bad:	or     ah,BYTE PTR [ecx+0x2fdd00dd]
  403bb3:	jg     0x403bb5
  403bb5:	jmp    0xe940b6de
  403bba:	xor    al,0xbb
  403bbc:	add    cl,ch
  403bbe:	xor    eax,0x2ffb001c
  403bc3:	xlat   BYTE PTR ds:[ebx]
  403bc4:	add    cl,ch
  403bc6:	and    al,0x8b
  403bc8:	add    cl,ch
  403bca:	xor    al,0xcb
  403bcc:	add    cl,ch
  403bce:	add    BYTE PTR [eax],al
  403bd0:	xor    eax,0x24e9003c
  403bd5:	jmp    0x403bd7
  403bd7:	jmp    0xe940a700
  403bdc:	xor    al,0xab
  403bde:	add    cl,ch
  403be0:	xor    eax,0x2f88fffc
  403be5:	fiadd  WORD PTR [eax]
  403be7:	jmp    0xe940ca10
  403bec:	xor    al,0xce
  403bee:	add    ch,dl
  403bf0:	xor    al,0x6f
  403bf2:	add    bl,bl
  403bf4:	das    
  403bf5:	fild   DWORD PTR [eax]
  403bf7:	jmp    0xe940aa20
  403bfc:	xor    al,0xae
  403bfe:	add    cl,ch
  403c00:	xor    ebx,DWORD PTR ds:0xe459f900
  403c06:	add    cl,ch
  403c08:	and    al,0x7e
  403c0a:	add    cl,ch
  403c0c:	xor    al,0xbe
  403c0e:	add    cl,ch
  403c10:	xor    edi,DWORD PTR ds:0xde24e900
  403c16:	add    cl,ch
  403c18:	and    al,0x5e
  403c1a:	add    cl,ch
  403c1c:	xor    al,0x9e
  403c1e:	add    cl,ch
  403c20:	xor    edi,edi
  403c22:	(bad)  
  403c23:	clc    
  403c24:	sbb    esp,esp
  403c26:	add    cl,ch
  403c28:	and    al,0x96
  403c2a:	add    BYTE PTR [eax],al
  403c2c:	push   ss
  403c2d:	out    0x18,al
  403c2f:	add    BYTE PTR [esi],dl
  403c31:	jmp    0x403bc4
  403c33:	add    BYTE PTR [eax],al
  403c35:	add    ch,dl
  403c37:	clc    
  403c38:	cmp    DWORD PTR [eax],eax
  403c3a:	push   es
  403c3b:	out    0x78,al
  403c3d:	add    dh,dl
  403c3f:	in     eax,0x38
  403c41:	add    dh,dl
  403c43:	jmp    0xf:0xf8d700d1
  403c4a:	(bad)  
  403c4b:	in     eax,0x68
  403c4d:	add    dh,dl
  403c4f:	in     eax,0x28
  403c51:	add    dh,dl
  403c53:	jmp    0x8:0xe5c600b1
  403c5a:	(bad)  
  403c5b:	in     eax,0x88
  403c5d:	add    BYTE PTR [esi-0x69ffb71b],dl
  403c63:	jmp    0x2:0xf89600f1
  403c6a:	xchg   ch,ah
  403c6c:	push   esp
  403c6d:	add    BYTE PTR [esi+0x5b0014e5],dl
  403c73:	in     eax,0xe3
  403c75:	add    BYTE PTR [ebp-0x8],dl
  403c78:	sub    DWORD PTR [eax],eax
  403c7a:	xchg   ch,ah
  403c7c:	je     0x403c7e
  403c7e:	push   esi
  403c7f:	in     eax,0x34
  403c81:	add    BYTE PTR [esi-0x16],dl
  403c84:	leave  
  403c85:	add    BYTE PTR [edi-0x8],dl
  403c88:	or     eax,DWORD PTR [eax]
  403c8a:	inc    esi
  403c8b:	in     eax,0x64
  403c8d:	add    BYTE PTR [esi-0x1b],dl
  403c90:	and    al,0x0
  403c92:	push   esi
  403c93:	jmp    0x4:0xe54600a9
  403c9a:	add    BYTE PTR [eax],al
  403c9c:	inc    esi
  403c9d:	in     eax,0x84
  403c9f:	add    BYTE PTR [esi],dl
  403ca1:	in     eax,0x44
  403ca3:	add    BYTE PTR [esi],dl
  403ca5:	jmp    0x7fd:0xf72f00e9
  403cac:	das    
  403cad:	pop    es
  403cae:	or     ebx,DWORD PTR [edi+ebp*1+0x7]
  403cb2:	or     ebx,DWORD PTR [edi+ebp*1]
  403cb5:	pop    es
  403cb6:	or     al,0x99
  403cb8:	das    
  403cb9:	sbb    edi,esi
  403cbb:	push   edx
  403cbc:	das    
  403cbd:	pop    es
  403cbe:	or     edi,DWORD PTR [edi+ebp*1+0x7]
  403cc2:	or     edi,DWORD PTR [edi+ebp*1]
  403cc5:	pop    es
  403cc6:	or     al,0xd9
  403cc8:	das    
  403cc9:	cmc    
  403cca:	std    
  403ccb:	push   ss
  403ccc:	das    
  403ccd:	pop    es
  403cce:	or     ebp,DWORD PTR [edi+ebp*1+0x7]
  403cd2:	or     ebp,DWORD PTR [edi+ebp*1]
  403cd5:	pop    es
  403cd6:	or     al,0xb9
  403cd8:	das    
  403cd9:	pop    es
  403cda:	or     ecx,DWORD PTR [edi+ebp*1]
  403cdd:	pop    es
  403cde:	or     ecx,DWORD PTR [edi+ebp*1+0x2f4c0b07]
  403ce5:	pop    es
  403ce6:	or     al,0xf9
  403ce8:	das    
  403ce9:	idiv   ebp
  403ceb:	add    ch,BYTE PTR [edi]
  403ced:	pop    es
  403cee:	or     edx,DWORD PTR [edx+0x2f]
  403cf1:	pop    es
  403cf2:	or     edx,DWORD PTR [edx]
  403cf4:	das    
  403cf5:	adc    cl,BYTE PTR [ebx]
  403cf7:	mov    ds:0x22fe142f,eax
  403cfc:	das    
  403cfd:	pop    es
  403cfe:	or     esi,DWORD PTR [edx+0x0]
  403d01:	add    BYTE PTR [edi],ch
  403d03:	pop    es
  403d04:	or     esi,DWORD PTR [edx]
  403d06:	das    
  403d07:	pop    es
  403d08:	or     al,ch
  403d0a:	das    
  403d0b:	idiv   bl
  403d0d:	or     ch,BYTE PTR [edi]
  403d0f:	pop    es
  403d10:	or     esp,DWORD PTR [edx+0x2f]
  403d13:	pop    es
  403d14:	or     esp,DWORD PTR [edx]
  403d16:	das    
  403d17:	pop    es
  403d18:	or     ah,BYTE PTR [ebp+0x20b072f]
  403d1e:	das    
  403d1f:	pop    es
  403d20:	or     eax,DWORD PTR [edx+0xbe9de2f]
  403d26:	ins    DWORD PTR es:[edi],dx
  403d27:	fsubp  st(1),st
  403d29:	or     dl,BYTE PTR [edx]
  403d2b:	(bad)  
  403d2d:	cld    
  403d2e:	sub    esi,ebx
  403d30:	jmp    0xea1ea240
  403d35:	or     esp,DWORD PTR ds:0xa20ae9de
  403d3b:	(bad)  
  403d3d:	cld    
  403d3e:	ins    DWORD PTR es:[edi],dx
  403d3f:	fsubp  st(1),st
  403d41:	or     esp,DWORD PTR [ebp-0x22]
  403d44:	jmp    0xea1e6254
  403d49:	or     al,BYTE PTR [edx]
  403d4b:	(bad)  
  403d4d:	cld    
  403d4e:	cmp    eax,0x550be9de
  403d53:	fsubp  st(1),st
  403d55:	or     edx,DWORD PTR ds:0x820ae9de
  403d5b:	fsubp  st(1),st
  403d5d:	or     esp,DWORD PTR ds:0xb50be9de
  403d63:	fsubp  st(1),st
  403d65:	or     eax,DWORD PTR [eax]
  403d67:	add    ch,dh
  403d69:	fucomp st(1)
  403d6b:	or     ah,BYTE PTR [edx+0x2bfcf9de]
  403d71:	fsubp  st(1),st
  403d73:	or     esp,ecx
  403d75:	fucomp st(1)
  403d77:	or     ebx,DWORD PTR [ecx]
  403d79:	fisubr WORD PTR [ecx-0x2521d0f5]
  403d7f:	cld    
  403d80:	cmp    eax,0xe10be9de
  403d85:	fucomp st(1)
  403d87:	or     ebx,DWORD PTR [ecx]
  403d89:	fsubp  st(1),st
  403d8b:	or     ch,BYTE PTR [edx-0x22]
  403d8e:	clc    
  403d8f:	cld    
  403d90:	and    esi,ebx
  403d92:	jmp    0xea1e0ea2
  403d97:	or     ecx,DWORD PTR [ecx]
  403d99:	fsubp  st(1),st
  403d9b:	or     cl,BYTE PTR [edx+0x24e900de]
  403da1:	loopne 0x403da3
  403da3:	jmp    0xe9409ddc
  403da8:	xor    al,0xa0
  403daa:	add    cl,ch
  403dac:	and    eax,0x13f90009
  403db1:	out    0x0,al
  403db3:	jmp    0xe940d5ec
  403db8:	xor    al,0xd8
  403dba:	add    cl,ch
  403dbc:	and    eax,0xf3dd0059
  403dc1:	jnp    0x403dc3
  403dc3:	jmp    0xe940b5fc
  403dc8:	xor    al,0xb8
  403dca:	add    cl,ch
  403dcc:	add    BYTE PTR [eax],al
  403dce:	and    eax,0xd3fb0019
  403dd3:	rol    DWORD PTR [eax],cl
  403dd5:	jmp    0xe940c60e
  403dda:	xor    al,0xc8
  403ddc:	add    cl,ch
  403dde:	and    eax,0x24e90039
  403de3:	call   0x687526e8
  403de8:	add    cl,ch
  403dea:	xor    al,0xa8
  403dec:	add    cl,ch
  403dee:	and    eax,0x9388fff9
  403df3:	idiv   dh
  403df5:	jmp    0xe940cb2e
  403dfa:	xor    al,0xcd
  403dfc:	add    ah,dl
  403dfe:	and    al,0x5b
  403e00:	add    bl,bl
  403e02:	jae    0x403ddb
  403e04:	add    cl,ch
  403e06:	xor    al,0x6d
  403e08:	add    cl,ch
  403e0a:	lods   eax,DWORD PTR fs:[esi]
  403e0c:	add    cl,ch
  403e0e:	pop    ebx
  403e0f:	sbb    eax,DWORD PTR [eax]
  403e11:	stc    
  403e12:	and    eax,0x44e900e4
  403e17:	jge    0x403e19
  403e19:	add    BYTE PTR [esi-0xe],dl
  403e1c:	pop    ds
  403e1d:	add    BYTE PTR [esi-0x7],al
  403e20:	mov    eax,ds:0xfff24600
  403e25:	call   DWORD PTR [esi]
  403e27:	cli    
  403e28:	jg     0x403e2a
  403e2a:	push   ss
  403e2b:	cli    
  403e2c:	aas    
  403e2d:	add    BYTE PTR [esi],al
  403e2f:	repz loope 0x403e32
  403e32:	add    BYTE PTR [eax],al
  403e34:	push   ss
  403e35:	jmp    0xfa563e40
  403e3a:	push   edi
  403e3b:	add    BYTE PTR [esi],dl
  403e3d:	cli    
  403e3e:	pop    ss
  403e3f:	add    BYTE PTR [esi],al
  403e41:	repz xchg ecx,eax
  403e43:	add    ch,dl
  403e45:	call   0xfa163e85
  403e4a:	ja     0x403e4c
  403e4c:	(bad)  
  403e4d:	stc    
  403e4e:	aaa    
  403e4f:	add    dh,al
  403e51:	repnz rol DWORD PTR [eax],1
  403e54:	xlat   BYTE PTR ds:[ebx]
  403e55:	call   0xfa163e6b
  403e5a:	addr16 add dh,dl
  403e5d:	stc    
  403e5e:	daa    
  403e5f:	add    dh,al
  403e61:	repnz mov cl,0x0
  403e64:	(bad)  
  403e65:	stc    
  403e66:	pop    es
  403e67:	add    BYTE PTR [esi-0x69ff7807],dl
  403e6d:	stc    
  403e6e:	inc    edi
  403e6f:	add    BYTE PTR [esi-0x69ff0e0e],al
  403e75:	call   0xf9d63e7e
  403e7a:	push   ebx
  403e7b:	add    BYTE PTR [esi+0x560013f9],dl
  403e81:	stc    
  403e82:	add    BYTE PTR [ecx],al
  403e84:	push   ebp
  403e85:	call   0xf9963eb5
  403e8a:	jae    0x403e8c
  403e8c:	push   esi
  403e8d:	stc    
  403e8e:	xor    eax,DWORD PTR [eax]
  403e90:	inc    esi
  403e91:	repnz leave 
  403e93:	add    BYTE PTR [edi],ch
  403e95:	test   BYTE PTR [ecx],0xd
  403e98:	add    BYTE PTR [eax],al
  403e9a:	das    
  403e9b:	pop    es
  403e9c:	sti    
  403e9d:	fs das 
  403e9f:	pop    es
  403ea0:	sti    
  403ea1:	and    al,0x2f
  403ea3:	pop    es
  403ea4:	cld    
  403ea5:	stos   BYTE PTR es:[edi],al
  403ea6:	das    
  403ea7:	pop    es
  403ea8:	sti    
  403ea9:	add    al,0x2f
  403eab:	pop    es
  403eac:	sti    
  403ead:	test   BYTE PTR [edi],ch
  403eaf:	pop    es
  403eb0:	sti    
  403eb1:	inc    esp
  403eb2:	das    
  403eb3:	pop    es
  403eb4:	cld    
  403eb5:	jmp    0x72f:0x809f72f
  403ebc:	sti    
  403ebd:	pop    esp
  403ebe:	das    
  403ebf:	pop    es
  403ec0:	sti    
  403ec1:	sbb    al,0x2f
  403ec3:	pop    es
  403ec4:	cld    
  403ec5:	call   0x72f:0x530a132f
  403ecc:	sti    
  403ecd:	jl     0x403efe
  403ecf:	pop    es
  403ed0:	sti    
  403ed1:	cmp    al,0x2f
  403ed3:	pop    es
  403ed4:	cld    
  403ed5:	fisubr DWORD PTR [edi]
  403ed7:	stc    
  403ed8:	or     DWORD PTR [edi],edx
  403eda:	das    
  403edb:	pop    es
  403edc:	sti    
  403edd:	ins    BYTE PTR es:[edi],dx
  403ede:	das    
  403edf:	pop    es
  403ee0:	sti    
  403ee1:	sub    al,0x2f
  403ee3:	pop    es
  403ee4:	cld    
  403ee5:	mov    edx,0xcfb072f
  403eea:	das    
  403eeb:	pop    es
  403eec:	sti    
  403eed:	mov    WORD PTR [edi],gs
  403eef:	pop    es
  403ef0:	sti    
  403ef1:	dec    esp
  403ef2:	das    
  403ef3:	pop    es
  403ef4:	cld    
  403ef5:	cli    
  403ef6:	das    
  403ef7:	test   DWORD PTR [ecx],0xfb072f03
  403efd:	push   edx
  403efe:	add    BYTE PTR [eax],al
  403f00:	das    
  403f01:	pop    es
  403f02:	sti    
  403f03:	adc    ch,BYTE PTR [edi]
  403f05:	or     bh,bl
  403f07:	ret    0x182f
  403f0a:	or     ah,BYTE PTR [ebx]
  403f0c:	das    
  403f0d:	pop    es
  403f0e:	sti    
  403f0f:	jb     0x403f40
  403f11:	fsubp  st(1),st
  403f13:	sti    
  403f14:	sbb    eax,0x69fae9de
  403f19:	(bad)  
  403f1b:	or     BYTE PTR [esi+ebx*8],dh
  403f1e:	jmp    0xea1e0d1e
  403f23:	sti    
  403f24:	or     eax,0x89fae9de
  403f29:	fucomp st(1)
  403f2b:	sti    
  403f2c:	sub    eax,0xadfbe9de
  403f31:	fsubp  st(1),st
  403f33:	sti    
  403f34:	ins    DWORD PTR es:[edi],dx
  403f35:	fsubp  st(1),st
  403f37:	cli    
  403f38:	or     edi,ebx
  403f3a:	stc    
  403f3b:	or     BYTE PTR [eax],dh
  403f3d:	fsubp  st(1),st
  403f3f:	sti    
  403f40:	gs fsubp st(1),st
  403f43:	sti    
  403f44:	adc    eax,0x99fae9de
  403f49:	(bad)  
  403f4b:	or     BYTE PTR [esi+ebx*8-0x17],ch
  403f4f:	sti    
  403f50:	gs fsubp st(1),st
  403f53:	sti    
  403f54:	adc    eax,0xf9fae9de
  403f59:	fdivp  st(3),st
  403f5b:	or     BYTE PTR [esi+ebx*8],bl
  403f5e:	jmp    0xea1e955e
  403f63:	sti    
  403f64:	add    BYTE PTR [eax],al
  403f66:	add    eax,0x79fae9de
  403f6b:	fsubp  st(1),st
  403f6d:	sti    
  403f6e:	xor    eax,0xb5fbe9de
  403f73:	fsubp  st(1),st
  403f75:	sti    
  403f76:	in     eax,0xdd
  403f78:	jmp    0xfa1ed977
  403f7d:	or     BYTE PTR [edx],dh
  403f7f:	fsubp  st(1),st
  403f81:	sti    
  403f82:	(bad)  
  403f84:	jmp    0xaa1e6184
  403f89:	sti    
  403f8a:	jo     0x403f7f
  403f8c:	(bad)  
  403f8d:	fnstenv [edi]
  403f8f:	scas   eax,DWORD PTR es:[edi]
  403f90:	add    cl,ch
  403f92:	fs ins BYTE PTR es:[edi],dx
  403f94:	add    cl,ch
  403f96:	push   esp
  403f97:	lods   al,BYTE PTR ds:[esi]
  403f98:	add    cl,ch
  403f9a:	push   ebp
  403f9b:	and    al,0x0
  403f9d:	clc    
  403f9e:	aaa    
  403f9f:	jecxz  0x403fa1
  403fa1:	jmp    0xe940bbea
  403fa6:	xor    al,0xbc
  403fa8:	add    cl,ch
  403faa:	xor    eax,0x24e90044
  403faf:	fadd   QWORD PTR [eax]
  403fb1:	jmp    0xe9409bda
  403fb6:	adc    al,0x9c
  403fb8:	add    cl,ch
  403fba:	adc    eax,0x37f90004
  403fbf:	in     eax,0x0
  403fc1:	jmp    0xe940d3ca
  403fc6:	hlt    
  403fc7:	rol    DWORD PTR [eax],cl
  403fc9:	jmp    0x54353fce
  403fce:	add    ch,bl
  403fd0:	aaa    
  403fd1:	jg     0x403fd3
  403fd3:	jmp    0xe940b3bc
  403fd8:	aam    0xb3
  403fda:	add    cl,ch
  403fdc:	aad    0x13
  403fde:	add    bl,bh
  403fe0:	aaa    
  403fe1:	xlat   BYTE PTR ds:[ebx]
  403fe2:	add    cl,ch
  403fe4:	les    eax,FWORD PTR [ebx-0x3c4b1700]
  403fea:	add    cl,ch
  403fec:	mov    ch,0x33
  403fee:	add    cl,ch
  403ff0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ff1:	jecxz  0x403ff3
  403ff3:	jmp    0xe940a39c
  403ff8:	xchg   esp,eax
  403ff9:	mov    ds:0xf395e900,eax
  403ffe:	(bad)  
  403fff:	clc    
  404000:	xor    ebp,ebx
  404002:	add    dh,dh
  404004:	sub    ebp,ebx
  404006:	add    DWORD PTR [eax],eax
  404008:	push   ebp
  404009:	fist   DWORD PTR [ecx]
  40400b:	add    BYTE PTR [ebp-0x78effe25],cl
  404011:	fild   DWORD PTR ds:0x1db7f00
  404017:	add    al,0x5b
  404019:	in     eax,0x41
  40401b:	add    BYTE PTR [ebx-0x1b],dl
  40401e:	add    DWORD PTR [eax+0x46],eax
  404021:	in     eax,0x3
  404023:	add    BYTE PTR [esi],bh
  404025:	in     eax,0x1
  404027:	add    bl,BYTE PTR [edx-0x1b]
  40402a:	and    DWORD PTR [eax],eax
  40402c:	push   edx
  40402d:	in     eax,0x1
  40402f:	and    BYTE PTR [eax],al
  404031:	add    BYTE PTR [edi+eiz*8],al
  404034:	or     DWORD PTR [eax],eax
  404036:	cld    
  404037:	out    0x1,al
  404039:	or     BYTE PTR [eax],bl
  40403b:	out    0x81,eax
  40403d:	add    BYTE PTR [esi-0x19],al
  404040:	add    BYTE PTR [eax],al
  404042:	push   es
  404043:	out    0x2,eax
  404045:	add    cl,bh
  404047:	out    0x81,al
  404049:	add    ebp,edx
  40404b:	out    0x19,al
  40404d:	add    BYTE PTR ds:0x71801e7,cl
  404053:	out    0x7,eax
  404055:	add    bh,bh
  404057:	out    0x1,al
  404059:	push   es
  40405a:	(bad)  
  40405c:	popa   
  40405d:	add    bl,dl
  40405f:	out    0x1,al
  404061:	pusha  
  404062:	(bad)  
  404063:	out    0x4,al
  404065:	add    BYTE PTR [esi-0x25fcfe1a],bh
  40406b:	out    0x31,al
  40406d:	add    dl,dl
  40406f:	out    0x1,al
  404071:	xor    BYTE PTR [esi+eiz*8-0x1983fff3],al
  404078:	add    DWORD PTR [eax+ebx*4],ecx
  40407b:	out    0xc1,al
  40407d:	add    dh,al
  40407f:	out    0x0,al
  404081:	add    BYTE PTR [edi],ch
  404083:	test   DWORD PTR [edx],0x2f52f11
  404089:	add    BYTE PTR [edi],ch
  40408b:	out    dx,eax
  40408c:	add    al,BYTE PTR [edi]
  40408e:	das    
  40408f:	out    dx,al
  404090:	add    al,BYTE PTR [esi]
  404092:	das    
  404093:	std    
  404094:	add    al,BYTE PTR ds:0xfc2f0000
  40409a:	add    al,BYTE PTR [edi+ebp*1]
  40409d:	jmp    0x4040a1
  40409f:	add    ebp,DWORD PTR [edi]
  4040a1:	add    al,BYTE PTR [ebx]
  4040a3:	add    ch,BYTE PTR [edi]
  4040a5:	stc    
  4040a6:	add    al,BYTE PTR [ecx]
  4040a8:	das    
  4040a9:	adc    BYTE PTR [ebx],al
  4040ab:	add    BYTE PTR [edi],ch
  4040ad:	pop    es
  4040ae:	add    eax,DWORD PTR [eax]
  4040b0:	das    
  4040b1:	mov    DWORD PTR [ebx],edx
  4040b3:	pop    es
  4040b4:	mov    al,ds:0x110e65db
  4040b9:	ins    DWORD PTR es:[edi],dx
  4040ba:	xor    al,0x9
  4040bc:	mov    dh,0xdd
  4040be:	enter  0x286d,0x80
  4040c2:	xlat   BYTE PTR ds:[ebx]
  4040c3:	push   0x7f
  4040c5:	adc    ch,BYTE PTR [eax+0x78a41663]
  4040cb:	fs cdq 
  4040cd:	xor    al,0x7b
  4040cf:	(bad)  [ecx]
  4040d1:	fwait
  4040d2:	mov    ebx,esp
  4040d4:	or     sp,bx
  4040d7:	aad    0xcf
  4040d9:	jle    0x404087
  4040db:	rol    al,cl
  4040dd:	retf   
  4040de:	inc    eax
  4040df:	mov    dh,0x26
  4040e1:	push   edx
  4040e2:	dec    edi
  4040e3:	mov    cl,0x49
  4040e5:	add    BYTE PTR [eax],ah
  4040e7:	mov    eax,0xbef075c8
  4040ec:	lahf   
  4040ed:	and    dh,bl
  4040ef:	mov    dh,0x12
  4040f1:	mov    ch,0x23
  4040f3:	mov    al,0x15
  4040f5:	aas    
  4040f6:	push   esp
  4040f7:	mov    ecx,0xbe44e09c
  4040fc:	add    BYTE PTR [eax],al
  4040fe:	mov    bl,0xdd
  404100:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404101:	mov    bh,0x75
  404103:	rcl    DWORD PTR [edx],cl
  404105:	out    0x6a,eax
  404107:	cmp    BYTE PTR [eax+0x25e95b98],0x88
  40410e:	pop    esp
  40410f:	pop    esp
  404110:	lahf   
  404111:	imul   eax,DWORD PTR [ebx],0xffffffcd
  404114:	sub    DWORD PTR [ebx-0x338c862c],ebx
  40411a:	int    0xf2
  40411c:	cld    
  40411d:	mov    ebx,0x303663d2
  404122:	cs retf 0x60c0
  404126:	xor    DWORD PTR [ebp+0x4a],edi
  404129:	wrmsr  
  40412b:	hlt    
  40412c:	sar    edi,cl
  40412e:	xor    BYTE PTR [ebx-0x4f],ah
  404131:	and    al,0xc1
  404133:	mov    ah,0x1f
  404135:	hlt    
  404136:	xchg   edi,eax
  404137:	mov    ds:0x98f43cd,al
  40413c:	cmp    edx,DWORD PTR [ebx-0x70]
  40413f:	cmp    al,0xb8
  404141:	call   0xb866f372
  404146:	xor    esp,DWORD PTR [ebx+0xc328794]
  40414c:	add    dl,BYTE PTR [edi-0x637cc6db]
  404152:	mov    edx,0x9d6c0da9
  404157:	pushf  
  404158:	lahf   
  404159:	mov    ebx,0xcb2913a4
  40415e:	fwait
  40415f:	inc    edx
  404160:	dec    edx
  404161:	pusha  
  404162:	add    BYTE PTR [eax],al
  404164:	imul   DWORD PTR [esp+edx*8+0x2699e82f]
  40416b:	(bad)  
  40416c:	ficom  DWORD PTR [edx]
  40416e:	mov    al,0xe
  404170:	fiadd  WORD PTR [ebx-0x6b]
  404173:	adc    al,0xd6
  404175:	mov    eax,0x8d890403
  40417a:	add    BYTE PTR [ecx+0x5c],ch
  40417d:	pop    es
  40417e:	enter  0xdd7,0xe
  404182:	mov    edi,0x212a775c
  404187:	retf   0x2b70
  40418a:	push   esi
  40418b:	jo     0x404185
  40418d:	xor    ecx,edi
  40418f:	(bad)  
  404191:	xor    DWORD PTR [eax+0x28dca367],edi
  404197:	icebp  
  404198:	in     al,0xd8
  40419a:	pop    edi
  40419b:	cmp    edx,DWORD PTR [edx+eiz*8-0x1c8a3a3a]
  4041a2:	mov    cl,0x6e
  4041a4:	loopne 0x404224
  4041a6:	das    
  4041a7:	clc    
  4041a8:	or     BYTE PTR [esi+0x7e518258],al
  4041ae:	ror    DWORD PTR [eax+ebx*1],0x78
  4041b2:	mov    dh,0x59
  4041b4:	in     eax,dx
  4041b5:	adc    DWORD PTR [esi-0x19],esi
  4041b8:	jge    0x4041cd
  4041ba:	add    DWORD PTR [ebp+0x4c],esi
  4041bd:	or     al,0x98
  4041bf:	add    esp,DWORD PTR [ebx]
  4041c1:	or     ch,bh
  4041c3:	jo     0x40416e
  4041c5:	sub    al,0x71
  4041c7:	inc    BYTE PTR [eax]
  4041c9:	add    BYTE PTR [ecx+0x84c0627],ah
  4041cf:	das    
  4041d0:	lahf   
  4041d1:	fcmovb st,st(0)
  4041d3:	xor    eax,0xd6b54be8
  4041d8:	js     0x40418f
  4041da:	cmc    
  4041db:	fisttp QWORD PTR [edi]
  4041dd:	addr16 (bad) 
  4041df:	in     al,0x96
  4041e1:	rol    DWORD PTR [eax+eiz*8-0x1f],1
  4041e5:	mov    ds:0xc7f84d1,al
  4041ea:	cmp    BYTE PTR [ecx+0x7a607e08],al
  4041f0:	xchg   ecx,eax
  4041f1:	call   0x126bcfe
  4041f6:	repnz stos DWORD PTR es:[edi],eax
  4041f8:	imul   ebp,DWORD PTR [ebx+0x74],0x7b
  4041fc:	ins    BYTE PTR es:[edi],dx
  4041fd:	sbb    al,0x3e
  4041ff:	retf   
  404200:	test   DWORD PTR gs:[eax+0x3bf262da],edi
  404207:	push   0x37cd6c06
  40420c:	add    DWORD PTR [ebx],ebx
  40420e:	push   edi
  40420f:	pop    es
  404210:	or     BYTE PTR [edx-0xaf0e93f],al
  404216:	inc    eax
  404217:	inc    esp
  404218:	mov    al,0x65
  40421a:	(bad)  
  40421b:	adc    esi,DWORD PTR [edi-0x419cd3ee]
  404221:	mov    ecx,edx
  404223:	jb     0x4041de
  404225:	cld    
  404226:	imul   eax,DWORD PTR [esp+ebx*8],0xdad4ff62
  40422d:	adc    eax,0xa5650000
  404232:	ror    DWORD PTR [ebx+esi*8+0xefbd4b5],cl
  404239:	jns    0x4041ed
  40423b:	dec    ebp
  40423c:	fdiv   DWORD PTR [ebx-0x1d9dc54b]
  404242:	mov    esp,0xbbd2e4a3
  404247:	aam    0x47
  404249:	aas    
  40424a:	fisttp WORD PTR [edx-0x3f]
  40424d:	outs   dx,DWORD PTR ds:[esi]
  40424e:	fdivr  DWORD PTR ds:0xa4d11e2b
  404254:	popf   
  404255:	push   cs
  404256:	(bad)  
  404257:	rcr    DWORD PTR [ebx+ecx*1],cl
  40425a:	imul   eax,DWORD PTR [ebx+0x6a],0x10346e3b
  404261:	push   0x67
  404263:	lods   eax,DWORD PTR ds:[esi]
  404264:	mov    dh,0x5a
  404266:	pusha  
  404267:	(bad)  
  404269:	mov    BYTE PTR [esp+eax*2],0x73
  40426d:	test   DWORD PTR [ecx],0x37342f33
  404273:	or     al,BYTE PTR [ebp-0x2df2b742]
  404279:	jecxz  0x4042d0
  40427b:	add    eax,0x24550ff
  404280:	dec    eax
  404281:	pop    es
  404282:	repz or bl,cl
  404285:	test   DWORD PTR [esp+ecx*1],esp
  404288:	data16 sbb dl,BYTE PTR [eax-0x7e781f98]
  40428f:	outs   dx,DWORD PTR ds:[esi]
  404290:	dec    edi
  404291:	(bad)  
  404292:	scas   al,BYTE PTR es:[edi]
  404293:	data16 add BYTE PTR [eax],al
  404296:	mov    dh,0x7c
  404298:	loopne 0x4042fb
  40429a:	popa   
  40429b:	cmc    
  40429c:	retf   
  40429d:	fimul  WORD PTR [ecx]
  40429f:	jg     0x40425e
  4042a1:	fst    DWORD PTR [esi]
  4042a3:	sbb    DWORD PTR [ebx-0x30],ebp
  4042a6:	lahf   
  4042a7:	mov    bl,0x9c
  4042a9:	xlat   BYTE PTR ds:[ebx]
  4042aa:	push   0xe6b307ec
  4042af:	jne    0x4042a9
  4042b1:	mov    bl,0x11
  4042b3:	shr    BYTE PTR [eax],1
  4042b5:	mov    ebp,0xba576a80
  4042ba:	outs   dx,DWORD PTR ds:[esi]
  4042bb:	xlat   BYTE PTR ds:[ebx]
  4042bc:	xchg   DWORD PTR [eax-0x40698ae6],edi
  4042c2:	lds    eax,FWORD PTR [edx]
  4042c4:	in     eax,0xb6
  4042c6:	sub    al,0x91
  4042c8:	mov    ch,0xb1
  4042ca:	fwait
  4042cb:	inc    BYTE PTR [ecx-0x2b]
  4042ce:	adc    eax,0xa2d2529c
  4042d3:	jmp    0x78741df8
  4042d8:	icebp  
  4042d9:	fstp   TBYTE PTR [ecx+ecx*1-0x2]
  4042dd:	(bad)  
  4042de:	int3   
  4042df:	or     BYTE PTR [esi],0x64
  4042e2:	mov    ebx,0x2a6d5d34
  4042e7:	lahf   
  4042e8:	sub    eax,0xf2de556a
  4042ed:	mov    edx,0xca7c0239
  4042f2:	ss push ecx
  4042f4:	push   cs
  4042f5:	call   0x0:0x6998d82f
  4042fc:	sub    BYTE PTR [ebx-0x53],ch
  4042ff:	jbe    0x404339
  404301:	out    dx,al
  404302:	sbb    ah,BYTE PTR [esi-0x2a3e9ac9]
  404308:	cs int3 
  40430a:	das    
  40430b:	lds    ebp,FWORD PTR [ecx]
  40430d:	ja     0x4042d3
  40430f:	xor    cl,BYTE PTR ds:0xa6231f5
  404315:	pop    esi
  404316:	cwde   
  404317:	adc    DWORD PTR [ebx],ecx
  404319:	mov    DWORD PTR [esi],0x7f7c0401
  40431f:	out    dx,al
  404320:	jl     0x40430d
  404322:	or     BYTE PTR [esi],bl
  404324:	jl     0x40437c
  404326:	xchg   ebx,eax
  404327:	dec    ebp
  404328:	jne    0x4042f7
  40432a:	sbb    eax,0x5684723d
  40432f:	test   eax,0xd9dfe686
  404334:	sbb    DWORD PTR [ebx+0x2a],0xb4d4808a
  40433b:	jp     0x4043bc
  40433d:	jge    0x404310
  40433f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404340:	add    DWORD PTR ds:0x3dfe753f,edx
  404346:	lods   eax,DWORD PTR ds:[esi]
  404347:	(bad)  
  404348:	mul    DWORD PTR [esi-0x640f29e5]
  40434e:	cwde   
  40434f:	popa   
  404350:	les    ecx,FWORD PTR ds:0x44c33106
  404356:	mov    ah,0x2
  404358:	ret    0x22ab
  40435b:	adc    bh,BYTE PTR [ebp+0x1da396]
  404361:	add    BYTE PTR [edx],bh
  404363:	push   es
  404364:	sub    eax,0x3b36ed
  404369:	jg     0x404384
  40436b:	fbstp  TBYTE PTR [esi]
  40436d:	or     DWORD PTR [ecx-0x1e],esp
  404370:	inc    ecx
  404371:	sub    ah,dh
  404373:	jle    0x404354
  404375:	mov    ah,0x97
  404377:	sub    DWORD PTR [eax+0x317c3546],0xffffffd0
  40437e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40437f:	jne    0x4043c7
  404381:	jne    0x404345
  404383:	jge    0x404350
  404385:	jecxz  0x404332
  404387:	test   BYTE PTR [ecx+ecx*4-0x8da841f],bh
  40438e:	mov    dh,BYTE PTR [esi+0x52]
  404391:	jl     0x404371
  404393:	fxch   st(4)
  404395:	jmp    0xdd7d:0x50bbd6ef
  40439c:	and    bh,BYTE PTR [esi+0x4755e14e]
  4043a2:	cmp    ch,BYTE PTR [eax]
  4043a4:	vpacksswb xmm5,xmm5,XMMWORD PTR [edx]
  4043a8:	mov    dl,0x5b
  4043aa:	or     DWORD PTR [edx],esi
  4043ac:	sub    esp,ebp
  4043ae:	repnz cs pop esp
  4043b1:	mov    ?,WORD PTR [edi+0x13]
  4043b4:	ret    0x8618
  4043b7:	push   cs
  4043b8:	mov    ch,0x62
  4043ba:	mov    BYTE PTR [esp+ebp*1],0xec
  4043be:	xchg   esi,eax
  4043bf:	or     al,0x5b
  4043c1:	jns    0x4043b5
  4043c3:	sbb    DWORD PTR [ebx-0x6fffff9],0xd355ec7e
  4043cd:	ja     0x404444
  4043cf:	jecxz  0x40436c
  4043d1:	jns    0x4043d5
  4043d3:	push   eax
  4043d4:	cs aad 0x9c
  4043d7:	ficomp WORD PTR [esi]
  4043d9:	fsub   st(3),st
  4043db:	ins    BYTE PTR es:[edi],dx
  4043dc:	(bad)  
  4043dd:	jecxz  0x404451
  4043df:	cli    
  4043e0:	aas    
  4043e1:	fiadd  WORD PTR ds:0xbfa95400
  4043e7:	xchg   ebp,eax
  4043e8:	cli    
  4043e9:	cwde   
  4043ea:	mov    eax,0xb1ca70e2
  4043ef:	jnp    0x40438f
  4043f1:	stc    
  4043f2:	mov    ah,0xc
  4043f4:	lods   eax,DWORD PTR ds:[esi]
  4043f5:	rcl    BYTE PTR fs:[edx-0x1a2aab2d],cl
  4043fc:	cdq    
  4043fd:	add    eax,0x35277cdc
  404402:	fisttp DWORD PTR [ebx]
  404404:	dec    edx
  404405:	xor    ebx,edx
  404407:	xchg   ah,dl
  404409:	add    ah,dl
  40440b:	icebp  
  40440c:	pop    esi
  40440d:	push   edx
  40440e:	(bad)  [eax-0x30]
  404411:	popa   
  404412:	ficomp DWORD PTR [edi]
  404414:	inc    ebx
  404415:	in     eax,dx
  404416:	mov    esp,0xb9bc6d81
  40441b:	mul    BYTE PTR [edi]
  40441d:	mov    ?,WORD PTR [eax-0x48626691]
  404423:	sbb    BYTE PTR [eax],bh
  404425:	mov    ecx,0x88e68808
  40442a:	ud0    eax,DWORD PTR [eax]
  40442d:	add    BYTE PTR [edx+ebx*8],cl
  404430:	push   es
  404431:	data16 mov ds:0x5110ffe9,al
  404437:	and    DWORD PTR [ebp-0x71],0xffffffdf
  40443b:	push   ebx
  40443c:	(bad)  
  40443d:	clc    
  40443e:	jne    0x404462
  404440:	imul   esp,DWORD PTR [ecx+0xb],0x33
  404444:	ins    BYTE PTR es:[edi],dx
  404445:	push   ss
  404446:	outs   dx,BYTE PTR ds:[esi]
  404447:	cld    
  404448:	or     DWORD PTR [eax-0x28f2d310],esp
  40444e:	cmp    bl,BYTE PTR [ebp+0x4]
  404451:	dec    esi
  404452:	les    ecx,FWORD PTR [ebp+0x3]
  404455:	cmp    DWORD PTR [edi],esi
  404457:	enter  0xa767,0x99
  40445b:	clc    
  40445c:	pop    esi
  40445d:	shr    BYTE PTR [edi],1
  40445f:	ret    0x693f
  404462:	data16 sub al,0x4f
  404465:	outs   dx,BYTE PTR ds:[esi]
  404466:	sub    DWORD PTR [ebp+0x4b91d15a],ebp
  40446c:	sub    dl,dh
  40446e:	neg    cl
  404470:	sti    
  404471:	fisubr WORD PTR [edi+0x67]
  404474:	or     ebx,eax
  404476:	add    BYTE PTR [edx*4+0x66c296bc],ah
  40447d:	mov    ebx,0xb2b610d9
  404482:	push   0x5fb5c79e
  404487:	add    edx,ecx
  404489:	mov    ebp,0xbac26de2
  40448e:	gs out 0x71,eax
  404491:	mov    bl,0x0
  404493:	add    ah,bh
  404495:	pusha  
  404496:	mov    ds:0xcfa53b4,eax
  40449b:	rol    ch,1
  40449d:	fs (bad) 
  40449f:	(bad)  
  4044a0:	push   0x1e
  4044a2:	cs (bad) 
  4044a5:	xchg   edi,eax
  4044a6:	pop    edi
  4044a7:	(bad)  [ecx+edx*1]
  4044aa:	dec    ecx
  4044ab:	pushfw 
  4044ad:	lahf   
  4044ae:	cmp    ah,BYTE PTR [ecx+0x73]
  4044b1:	cmc    
  4044b2:	jmp    0x1bd3371e
  4044b7:	outs   dx,DWORD PTR ds:[esi]
  4044b8:	adc    eax,0x7b0b86c8
  4044bd:	push   esi
  4044be:	jne    0x4044cc
  4044c0:	ins    BYTE PTR es:[edi],dx
  4044c1:	in     al,dx
  4044c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044c3:	add    eax,0x2d689d5
  4044c8:	pop    edx
  4044c9:	test   DWORD PTR [edx],0x15b62f00
  4044cf:	sbb    esi,DWORD PTR [esi]
  4044d1:	jne    0x404534
  4044d3:	ss pop ebp
  4044d5:	xor    al,0x32
  4044d7:	sub    eax,0xc0edde54
  4044dc:	xchg   ebx,eax
  4044dd:	and    BYTE PTR [eax+edx*8],0x80
  4044e1:	imul   ebp,DWORD PTR [edi-0x62],0x55
  4044e5:	nop
  4044e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044e7:	ins    DWORD PTR es:[edi],dx
  4044e8:	outs   dx,BYTE PTR ds:[esi]
  4044e9:	cdq    
  4044ea:	icebp  
  4044eb:	jns    0x4044f3
  4044ed:	push   ss
  4044ee:	xor    BYTE PTR [ebx-0x249cf113],cl
  4044f4:	shl    bl,0xa1
  4044f7:	lods   al,BYTE PTR ds:[esi]
  4044f8:	add    BYTE PTR [eax],al
  4044fa:	ret    
  4044fb:	cld    
  4044fc:	hlt    
  4044fd:	ss jp  0x404539
  404500:	lods   al,BYTE PTR ds:[esi]
  404501:	inc    ebp
  404502:	mov    DWORD PTR [edx],esi
  404504:	sbb    BYTE PTR [si+0x1e47],ch
  404509:	out    0xc0,eax
  40450b:	pusha  
  40450c:	cwde   
  40450d:	icebp  
  40450e:	outs   dx,BYTE PTR ds:[esi]
  40450f:	xchg   ebx,eax
  404510:	fldenv [edx]
  404512:	jbe    0x4044a0
  404514:	sbb    dl,BYTE PTR [ebx-0x65]
  404517:	gs pop ebx
  404519:	inc    esp
  40451a:	cwde   
  40451b:	jle    0x4044d9
  40451d:	scas   al,BYTE PTR es:[edi]
  40451e:	shl    DWORD PTR [edi-0x4f3d220b],1
  404524:	ds nop
  404526:	xchg   edi,eax
  404527:	leave  
  404528:	ja     0x4045a9
  40452a:	lods   al,BYTE PTR ds:[esi]
  40452b:	loop   0x4044cd
  40452d:	imul   eax,DWORD PTR [esp+ebx*2-0x1f],0xffffff9c
  404532:	das    
  404533:	inc    ebp
  404534:	adc    cl,cl
  404536:	add    ch,BYTE PTR [esi]
  404538:	push   ebx
  404539:	mov    edx,0x27443701
  40453e:	mov    eax,0xcb57fcff
  404543:	call   0x122e4afd
  404548:	outs   dx,DWORD PTR ds:[esi]
  404549:	test   BYTE PTR [esi-0x54df74e7],0x51
  404550:	retf   0xb9ef
  404553:	pop    edx
  404554:	add    BYTE PTR [ecx],cl
  404556:	push   ecx
  404557:	sub    al,0xa7
  404559:	dec    eax
  40455a:	jp     0x404591
  40455c:	mov    esi,0xc00004f
  404561:	div    eax
  404563:	xchg   bl,al
  404565:	jmp    0x40454e
  404567:	int    0xaf
  404569:	or     bl,al
  40456b:	add    al,0xbd
  40456d:	and    edx,ebx
  40456f:	push   ebx
  404570:	mov    ecx,0x52925d89
  404575:	mov    al,ds:0x7398c144
  40457a:	outs   dx,DWORD PTR ds:[esi]
  40457b:	add    al,dh
  40457d:	outs   dx,BYTE PTR ds:[esi]
  40457e:	jbe    0x404517
  404580:	lods   ax,WORD PTR ds:[esi]
  404582:	cmp    DWORD PTR [esi+0x5],ecx
  404585:	mov    ah,0x20
  404587:	add    eax,0xbc0be0b4
  40458c:	xor    al,0xca
  40458e:	adc    bh,BYTE PTR [edx]
  404590:	xor    DWORD PTR [eax-0x75658421],esp
  404596:	(bad)  
  404597:	mov    eax,0xf9ed6e40
  40459c:	jmp    0x5e5f3a13
  4045a1:	mov    ah,0xbb
  4045a3:	push   edi
  4045a4:	ins    DWORD PTR es:[edi],dx
  4045a5:	lods   eax,DWORD PTR ds:[esi]
  4045a6:	mov    ds:0x89c9fd9c,al
  4045ab:	aad    0x8c
  4045ad:	fist   WORD PTR [eax+0x1747b702]
  4045b3:	inc    ebx
  4045b4:	loopne 0x404617
  4045b6:	push   cs
  4045b7:	jo     0x404543
  4045b9:	xor    eax,0x2c63b125
  4045be:	cmp    al,0xe6
  4045c0:	cmc    
  4045c1:	jmp    0xf5f4:0x9f72
  4045c8:	imul   edx,DWORD PTR [esi+eax*2+0x22],0x8450d41
  4045d0:	pop    eax
  4045d1:	add    BYTE PTR [ebx],dl
  4045d3:	mov    dl,0x79
  4045d5:	lock push edx
  4045d7:	mov    al,ds:0xd081e962
  4045dc:	dec    edi
  4045dd:	ret    0xfed0
  4045e0:	push   edx
  4045e1:	fist   DWORD PTR [edi]
  4045e3:	gs adc eax,0xe554694
  4045e9:	lea    eax,[ebp-0x6b59dcfd]
  4045ef:	xor    edi,DWORD PTR [eax]
  4045f1:	mov    edi,0x38a027db
  4045f6:	or     cl,BYTE PTR [esi]
  4045f8:	mov    ebx,0x964a4921
  4045fd:	or     ch,BYTE PTR [eax-0x40ec7288]
  404603:	fcmove st,st(4)
  404605:	pop    esp
  404606:	jle    0x4045d3
  404608:	xlat   BYTE PTR ds:[ebx]
  404609:	inc    ebp
  40460a:	dec    ebp
  40460b:	jge    0x404607
  40460d:	outs   dx,BYTE PTR ds:[esi]
  40460e:	dec    esp
  40460f:	scas   al,BYTE PTR es:[edi]
  404610:	loope  0x404689
  404612:	ret    0xbbbf
  404615:	mov    edx,0xa3a08e83
  40461a:	xor    dl,ah
  40461c:	lea    ecx,[eax-0x6e6b0f1f]
  404622:	(bad)  
  404623:	jb     0x4045fc
  404625:	fidiv  WORD PTR [edi+0x43]
  404628:	int3   
  404629:	mov    DWORD PTR [eax],0xe1153400
  40462f:	in     al,dx
  404630:	in     eax,0x25
  404632:	cli    
  404633:	cmc    
  404634:	mov    bh,BYTE PTR [ecx]
  404636:	bound  esi,QWORD PTR [edx+0x7b]
  404639:	or     BYTE PTR [ecx+0x6b],bh
  40463c:	cmp    BYTE PTR [eax+0x54],bl
  40463f:	inc    eax
  404640:	stc    
  404641:	dec    di
  404643:	pop    ecx
  404644:	out    dx,al
  404645:	iret   
  404646:	push   cs
  404647:	push   ss
  404648:	das    
  404649:	call   DWORD PTR [ebx]
  40464b:	comiss xmm5,DWORD PTR [ebx]
  40464e:	xor    al,0x38
  404650:	push   ebx
  404651:	jo     0x404698
  404653:	and    esp,DWORD PTR [edx+0x54]
  404656:	das    
  404657:	std    
  404658:	xchg   edx,eax
  404659:	sbb    eax,0xd293e65e
  40465e:	or     eax,0xfc9b60cb
  404663:	iret   
  404664:	jno    0x4045fe
  404666:	jb     0x4045f9
  404668:	cs pop ecx
  40466a:	mov    ds:0xcf16178a,eax
  40466f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404670:	sbb    al,0xd7
  404672:	sar    DWORD PTR [ebp+edx*1-0x75db5a74],0x55
  40467a:	aam    0x3f
  40467c:	fwait
  40467d:	sbb    al,BYTE PTR [esi+0x74e3a812]
  404683:	or     DWORD PTR [ecx-0x19b817b0],ebp
  404689:	xchg   ecx,eax
  40468a:	sbb    DWORD PTR [ebx-0x21],edx
  40468d:	fimul  WORD PTR [edx+0x7e]
  404690:	add    BYTE PTR [eax],al
  404692:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404693:	pop    ds
  404694:	cmp    ah,BYTE PTR [ebp-0x73]
  404697:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404698:	cmp    eax,0x4c6c483f
  40469d:	and    al,0x59
  40469f:	and    ebx,DWORD PTR [esi]
  4046a1:	or     DWORD PTR [edx],ebp
  4046a3:	jmp    0x5380:0xc92b11ec
  4046aa:	in     al,0x87
  4046ac:	xchg   ecx,eax
  4046ad:	dec    eax
  4046ae:	fld    QWORD PTR [esi-0x1f]
  4046b1:	gs out 0x5,al
  4046b4:	mov    dl,0x7e
  4046b6:	iret   
  4046b7:	fdiv   QWORD PTR [edi-0x395baf1a]
  4046bd:	std    
  4046be:	push   ecx
  4046bf:	imul   edx,DWORD PTR [eax+edx*8-0x349ccd9e],0x73
  4046c7:	fsubrp st(3),st
  4046c9:	stc    
  4046ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046cb:	popa   
  4046cc:	mov    ds:0x51489e0a,al
  4046d1:	pop    eax
  4046d2:	jmp    0x404702
  4046d4:	adc    BYTE PTR [ecx],ch
  4046d6:	enter  0x3235,0x9c
  4046da:	lods   al,BYTE PTR ds:[esi]
  4046db:	test   al,0xf3
  4046dd:	ins    BYTE PTR es:[edi],dx
  4046de:	mov    bh,0xbf
  4046e0:	mov    al,ds:0x61d6c2bd
  4046e5:	into   
  4046e6:	ror    ebp,1
  4046e8:	ss popa 
  4046ea:	or     BYTE PTR [ebp-0x6404d011],al
  4046f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046f1:	add    al,BYTE PTR [esi]
  4046f3:	jae    0x404752
  4046f5:	adc    DWORD PTR [eax],eax
  4046f7:	add    ch,ch
  4046f9:	imul   ebp,DWORD PTR [edx],0xeaf17516
  4046ff:	out    0x6f,al
  404701:	clc    
  404702:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404703:	xor    ebx,DWORD PTR [ebx+0x1f]
  404706:	imul   eax,DWORD PTR [eax+edi*1+0x6],0x4d01daae
  40470e:	out    0xa9,eax
  404710:	add    dl,BYTE PTR [esp+ebp*1+0x78]
  404714:	das    
  404715:	cmp    esp,DWORD PTR [ebp-0x79]
  404718:	inc    esp
  404719:	and    ah,bl
  40471b:	(bad)  
  40471c:	out    dx,al
  40471d:	outs   dx,BYTE PTR ds:[esi]
  40471e:	mov    ds:0x5175f57e,al
  404723:	stos   DWORD PTR es:[edi],eax
  404724:	add    BYTE PTR [ecx-0x77ec23f0],ah
  40472a:	pop    es
  40472b:	push   ebx
  40472c:	dec    edx
  40472d:	retf   
  40472e:	mov    esi,0x75d23941
  404733:	lock inc ebp
  404735:	mov    ebp,0xa42f1f2c
  40473a:	fild   DWORD PTR [ebx]
  40473c:	mov    bh,0x26
  40473e:	call   0x1259:0x3dadf4
  404745:	xor    al,0x8b
  404747:	sbb    cl,bl
  404749:	sub    dl,BYTE PTR [edx-0x23168e01]
  40474f:	ss ja  0x404746
  404752:	ret    
  404753:	jge    0x4046eb
  404755:	and    bh,ch
  404757:	mov    ah,0xc5
  404759:	add    eax,0xd0f6
  40475e:	scas   eax,DWORD PTR es:[edi]
  40475f:	fld    TBYTE PTR [esi-0x483d5f6f]
  404765:	inc    edx
  404766:	or     eax,0xbe039cae
  40476b:	mov    eax,0x77349485
  404770:	retf   0x634d
  404773:	outs   dx,BYTE PTR ds:[esi]
  404774:	rol    DWORD PTR [esi],cl
  404776:	dec    edx
  404777:	cmp    eax,0xe199d2bf
  40477d:	mov    ch,dl
  40477f:	add    DWORD PTR [esi+0x49],esp
  404782:	sbb    DWORD PTR es:[edi+0xa],edi
  404786:	not    BYTE PTR [bp+di-0x35]
  40478a:	or     edi,ebp
  40478c:	dec    esp
  40478d:	dec    esp
  40478e:	xor    BYTE PTR [eax],0x2
  404791:	test   ecx,ebp
  404793:	xor    eax,0x5abdce1b
  404798:	xor    BYTE PTR [edi],al
  40479a:	or     eax,DWORD PTR [ebx+0x29]
  40479d:	sbb    DWORD PTR ds:0xce40e419,0x78f3fd04
  4047a7:	out    dx,eax
  4047a8:	aad    0xb2
  4047aa:	shl    esi,0xce
  4047ad:	gs dec edx
  4047af:	xor    eax,0x2fd11c80
  4047b4:	cdq    
  4047b5:	xlat   BYTE PTR ds:[ebx]
  4047b6:	xor    eax,0x648eb243
  4047bb:	pop    edi
  4047bc:	stos   DWORD PTR es:[edi],eax
  4047bd:	add    BYTE PTR [esi],dl
  4047bf:	neg    BYTE PTR [edx]
  4047c1:	sub    al,0x0
  4047c3:	add    BYTE PTR [edi-0x34],dl
  4047c6:	pop    es
  4047c7:	xor    eax,0x1e2a9584
  4047cc:	lds    esp,FWORD PTR [ebp+0x409a0731]
  4047d2:	jo     0x40481c
  4047d4:	pop    ebx
  4047d5:	packssdw mm2,QWORD PTR [ecx+0x48]
  4047d9:	pop    ecx
  4047da:	inc    esi
  4047db:	jp     0x404856
  4047dd:	ins    BYTE PTR es:[edi],dx
  4047de:	pop    ebp
  4047df:	arpl   WORD PTR [eax+0x5],sp
  4047e2:	cli    
  4047e3:	retf   
  4047e4:	add    DWORD PTR ds:0x6bd2d2e1,esi
  4047ea:	int3   
  4047eb:	stc    
  4047ec:	arpl   WORD PTR [ebx-0x29],bx
  4047ef:	loopne 0x40482d
  4047f1:	int3   
  4047f2:	xchg   esi,eax
  4047f3:	scas   eax,DWORD PTR es:[edi]
  4047f4:	std    
  4047f5:	stc    
  4047f6:	mov    esi,DWORD PTR [esi-0x625f5172]
  4047fc:	dec    edi
  4047fd:	mov    al,ds:0x830884bb
  404802:	and    eax,DWORD PTR [ebx]
  404804:	leave  
  404805:	mov    dl,0x38
  404807:	sbb    bl,BYTE PTR [edx+0x4b3115dd]
  40480d:	int    0xe
  40480f:	sub    BYTE PTR [esi+eax*2+0x77c5674f],al
  404816:	push   esp
  404817:	jle    0x40486f
  404819:	and    DWORD PTR [ecx+0x55],edi
  40481c:	pop    ss
  40481d:	adc    ah,BYTE PTR [edx+0x4c]
  404820:	xchg   ecx,eax
  404821:	sbb    edi,DWORD PTR [eax]
  404823:	xor    DWORD PTR [eax+0x98232a],0xe75e300
  40482d:	mov    bl,0x32
  40482f:	inc    ebp
  404830:	adc    eax,0x54da2daa
  404835:	in     eax,0x6c
  404837:	out    dx,eax
  404838:	dec    ebp
  404839:	cld    
  40483a:	das    
  40483b:	outs   dx,BYTE PTR ds:[esi]
  40483c:	and    eax,0x54ac7862
  404841:	jns    0x4048ac
  404843:	add    edx,DWORD PTR [eax-0x1f]
  404846:	out    0x4a,al
  404848:	inc    ecx
  404849:	cli    
  40484a:	fild   WORD PTR [ecx-0x373b2912]
  404850:	pop    ds
  404851:	int3   
  404852:	int    0xe7
  404854:	mov    BYTE PTR [ebp-0x698458fe],cl
  40485a:	arpl   WORD PTR [esi-0x54],sp
  40485d:	mov    ebx,0xa0dd2740
  404862:	xor    DWORD PTR [ebx],ecx
  404864:	mov    bl,0x7e
  404866:	jno    0x4048ba
  404868:	ret    0x7065
  40486b:	cdq    
  40486c:	xchg   ebp,eax
  40486d:	dec    eax
  40486e:	xchg   ebx,eax
  40486f:	loopne 0x4048d3
  404871:	push   ebx
  404872:	or     BYTE PTR [edi-0xa],0x11
  404876:	xor    eax,0xc09078e
  40487b:	fstp   QWORD PTR [eax+0x24]
  40487e:	aaa    
  40487f:	sbb    al,0x28
  404881:	aas    
  404882:	ds push ebx
  404884:	cmp    eax,0x4c9ab9a7
  404889:	mov    esp,0x911bd1b8
  40488e:	add    BYTE PTR [eax],al
  404890:	mov    ebx,DWORD PTR [eax]
  404892:	jmp    0x80d7c320
  404897:	retf   
  404898:	mov    ebp,0x94d09156
  40489d:	adc    eax,0xd46ffddd
  4048a2:	scas   eax,DWORD PTR es:[edi]
  4048a3:	out    0x76,al
  4048a5:	pop    edx
  4048a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048a7:	mov    esp,0xa7d4a33b
  4048ac:	cmp    ch,al
  4048ae:	or     DWORD PTR [edx-0x6e8eceb7],0xe860de38
  4048b8:	pusha  
  4048b9:	outs   dx,BYTE PTR ds:[esi]
  4048ba:	and    DWORD PTR [ecx],ebx
  4048bc:	je     0x404935
  4048be:	rol    BYTE PTR [ebp+0x49],cl
  4048c1:	pushf  
  4048c2:	xchg   ebx,eax
  4048c3:	ss pop edx
  4048c5:	test   DWORD PTR [ebx+ebp*1],edi
  4048c8:	retf   0xf501
  4048cb:	pop    ecx
  4048cc:	leave  
  4048cd:	sbb    bh,BYTE PTR [esi+0x76efdc0c]
  4048d3:	sti    
  4048d4:	lock call 0x2666b671
  4048da:	fstp   DWORD PTR [esi-0x2fe5c0c3]
  4048e0:	pusha  
  4048e1:	push   esp
  4048e2:	pop    ebx
  4048e3:	rcl    DWORD PTR [ebx+0x4d],0xe9
  4048e7:	add    ebp,DWORD PTR [edi]
  4048e9:	fdivrp st(6),st
  4048eb:	sub    ebp,ebp
  4048ed:	fiadd  WORD PTR [edi-0x28]
  4048f0:	stos   DWORD PTR es:[edi],eax
  4048f1:	fcom   QWORD PTR [eax]
  4048f3:	jle    0x4048f5
  4048f5:	add    BYTE PTR [ecx-0x24],dh
  4048f8:	lds    ebp,FWORD PTR [ebx+0x26]
  4048fb:	fst    DWORD PTR [edx+0x5bd7f4c1]
  404901:	aas    
  404902:	mov    dl,0xd9
  404904:	fs adc eax,0x5441db68
  40490a:	cmp    al,0xd0
  40490c:	outs   dx,BYTE PTR ds:[esi]
  40490d:	cli    
  40490e:	(bad)  
  404910:	lahf   
  404911:	mov    BYTE PTR [eax+0x62ae88d2],bl
  404917:	ror    ch,cl
  404919:	mov    esp,0x92bad715
  40491e:	xchg   ebp,edx
  404920:	jecxz  0x404912
  404922:	ret    0xcd3
  404925:	inc    edi
  404926:	sti    
  404927:	aam    0xb9
  404929:	bound  ecx,QWORD PTR [ecx-0x3e]
  40492c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40492d:	int3   
  40492e:	xchg   ebx,eax
  40492f:	ret    0xd700
  404932:	cmp    DWORD PTR [edi+ebx*1],edi
  404935:	add    BYTE PTR [esi+0x7e],cl
  404938:	push   ds
  404939:	push   ebp
  40493a:	and    eax,0x13821bb1
  40493f:	repz sbb DWORD PTR [ebx],ebp
  404942:	xor    DWORD PTR [eax+ebx*1],0x1976d714
  404949:	xor    DWORD PTR [esi-0x5a01ed56],ebx
  40494f:	call   0x2d8a9866
  404954:	adc    DWORD PTR [eax-0x18],ebx
  404957:	ins    BYTE PTR es:[edi],dx
  404958:	adc    ch,bh
  40495a:	add    BYTE PTR [eax],al
  40495c:	(bad)  
  40495d:	mov    eax,ds:0xe2230a15
  404962:	adc    edx,DWORD PTR [ebx-0x4f]
  404965:	es push ss
  404967:	sbb    al,0xc7
  404969:	fs pop ss
  40496b:	leave  
  40496c:	imul   edx,DWORD PTR [ecx+0x50ff9638],0x159d6739
  404976:	cmp    esi,DWORD PTR [eax-0x45]
  404979:	sar    DWORD PTR [edx],cl
  40497b:	in     eax,0xc2
  40497d:	call   0x3b3e:0x58b0f23f
  404984:	in     eax,0x1f
  404986:	cmp    al,0x4
  404988:	sbb    esp,0x3d
  40498b:	and    DWORD PTR [edx],edi
  40498d:	xor    BYTE PTR [esi],0xe
  404990:	or     BYTE PTR [edx+0x37],al
  404993:	mov    edi,0xe83504ef
  404998:	inc    ebp
  404999:	(bad)  
  40499a:	xor    al,0x6d
  40499c:	xor    al,BYTE PTR [edi+0x49809a31]
  4049a2:	xor    BYTE PTR [ebx+0x56],al
  4049a5:	or     esi,DWORD PTR [edx]
  4049a7:	sub    al,0x2c
  4049a9:	int    0x33
  4049ab:	add    dh,dh
  4049ad:	imul   esp,DWORD PTR ss:[ecx+esi*4],0x51
  4049b2:	test   eax,0xedeb3825
  4049b7:	daa    
  4049b8:	dec    edi
  4049b9:	test   DWORD PTR ds:0x6290ba26,ebp
  4049bf:	and    eax,DWORD PTR [eax]
  4049c1:	add    BYTE PTR [ebp+0x74229efa],cl
  4049c7:	inc    esp
  4049c8:	out    0x20,al
  4049ca:	arpl   WORD PTR [esi],bp
  4049cc:	and    al,0x21
  4049ce:	jle    0x404a37
  4049d0:	js     0x4049fc
  4049d2:	imul   eax,DWORD PTR [ecx],0xbb902bba
  4049d8:	cld    
  4049d9:	sub    DWORD PTR [edi+0x52283ed4],esi
  4049df:	mov    edi,0xa8d52d71
  4049e4:	mov    bl,0x2c
  4049e6:	pushf  
  4049e7:	adc    esi,ebp
  4049e9:	cs fwait
  4049eb:	jge    0x404a24
  4049ed:	das    
  4049ee:	(bad)  
  4049ef:	dec    edi
  4049f0:	call   0xa871:0x5839c170
  4049f7:	sbb    DWORD PTR [esi],0x73
  4049fa:	pop    edi
  4049fb:	out    dx,al
  4049fc:	fidiv  DWORD PTR [edx+0x2a]
  4049ff:	not    DWORD PTR [ecx+0x5191fd77]
  404a05:	jbe    0x404a4b
  404a07:	sub    edx,DWORD PTR [edi]
  404a09:	je     0x404a1e
  404a0b:	inc    ebp
  404a0c:	aad    0x75
  404a0e:	dec    BYTE PTR cs:[eax+0x4b68197e]
  404a15:	jg     0x4049f7
  404a17:	ror    BYTE PTR ds:0xcfbce77d,cl
  404a1d:	jl     0x4049c1
  404a1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a20:	cmp    BYTE PTR [ecx+0x25],0xc1
  404a24:	inc    edx
  404a25:	js     0x404a27
  404a27:	add    BYTE PTR [edi],ch
  404a29:	mov    ebx,0x92150463
  404a2e:	leave  
  404a2f:	(bad)  
  404a30:	adc    al,0x65
  404a32:	in     eax,dx
  404a33:	mov    ebx,0x7e47781b
  404a38:	adc    al,bh
  404a3a:	mov    ecx,0x939e0838
  404a3f:	cli    
  404a40:	add    DWORD PTR [ecx-0x7b],ecx
  404a43:	mov    ch,0xd4
  404a45:	sbb    ebp,DWORD PTR [edi+0x50f2d577]
  404a4b:	xor    edi,eax
  404a4d:	or     ebx,edi
  404a4f:	repnz (bad) 
  404a51:	in     al,dx
  404a52:	cmp    ebp,DWORD PTR [edi+0x6d161fcd]
  404a58:	int3   
  404a59:	dec    esi
  404a5a:	push   0xc245ce2b
  404a5f:	jmp    0xa7136b33
  404a64:	xchg   edx,eax
  404a65:	test   al,0x78
  404a67:	mov    esi,DWORD PTR fs:[ecx+0x6]
  404a6b:	and    dl,BYTE PTR [ecx-0x771fd3c6]
  404a71:	out    0xcd,eax
  404a73:	xlat   BYTE PTR ds:[ebx]
  404a74:	ja     0x404a2a
  404a76:	gs adc eax,0x531a0576
  404a7c:	fs push cs
  404a7e:	xor    BYTE PTR [ecx-0x21d97c9b],dl
  404a84:	js     0x404a16
  404a86:	or     al,0x1c
  404a88:	jno    0x404ae3
  404a8a:	jb     0x404ae6
  404a8c:	add    BYTE PTR [eax],al
  404a8e:	imul   esp,DWORD PTR [edx],0xffffffd8
  404a91:	cwde   
  404a92:	bound  edi,QWORD PTR [edi]
  404a94:	lahf   
  404a95:	les    esi,FWORD PTR [ecx+0x2c]
  404a98:	mov    ch,0x6
  404a9a:	push   0x72404b5d
  404a9f:	xchg   cl,ah
  404aa1:	sub    DWORD PTR [ebx-0x22],0x1f7bf5ab
  404aa8:	fistp  DWORD PTR [ebx+0x30]
  404aab:	push   ds
  404aac:	add    ah,BYTE PTR [edx-0x7812e01a]
  404ab2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ab3:	and    DWORD PTR [eax-0x38cd81d5],ebx
  404ab9:	add    eax,0x77f6333c
  404abe:	add    dh,BYTE PTR ds:0x34b8d1e1
  404ac4:	je     0x404a8a
  404ac6:	xor    DWORD PTR [bp+di+0x6e],esp
  404aca:	and    eax,0xdb100a30
  404acf:	sub    eax,0x2f913a35
  404ad4:	adc    ch,bh
  404ad6:	dec    esi
  404ad7:	cmp    BYTE PTR [edi],bl
  404ad9:	push   edi
  404ada:	(bad)  
  404adc:	outs   dx,BYTE PTR ds:[esi]
  404add:	test   eax,0x833936d1
  404ae2:	mov    esi,DWORD PTR [esi]
  404ae4:	sbb    al,0x95
  404ae6:	adc    al,0x3b
  404ae8:	jmp    0x404aa8
  404aea:	push   esi
  404aeb:	cmp    dh,BYTE PTR [edx]
  404aed:	inc    ecx
  404aee:	mov    BYTE PTR [edi*1-0x3cffff15],bh
  404af5:	cmp    al,0x68
  404af7:	push   ds
  404af8:	inc    edx
  404af9:	mov    edi,0xbdf83477
  404afe:	(bad)  
  404aff:	retf   0xbfbe
  404b02:	xchg   ecx,eax
  404b03:	pusha  
  404b04:	jl     0x404ac7
  404b06:	inc    esp
  404b07:	ja     0x404b34
  404b09:	les    edx,FWORD PTR [ebx]
  404b0b:	fucom  st(1)
  404b0d:	(bad)  
  404b0e:	fisub  DWORD PTR [edx]
  404b10:	xchg   edi,eax
  404b11:	ret    0x8e5
  404b14:	push   ebp
  404b15:	ret    0x4dc0
  404b18:	adc    ebp,ecx
  404b1a:	out    dx,eax
  404b1b:	jecxz  0x404ae9
  404b1d:	retf   
  404b1e:	add    DWORD PTR [edi],ebx
  404b20:	xchg   ebp,eax
  404b21:	jg     0x404b10
  404b23:	or     BYTE PTR [edi+0x3d],bh
  404b26:	in     al,dx
  404b27:	dec    ebp
  404b28:	ror    BYTE PTR [ecx+ebp*8],cl
  404b2b:	cmp    dh,BYTE PTR [edx+ecx*8-0x78619c18]
  404b32:	jmp    0x439:0xeb46f88c
  404b39:	icebp  
  404b3a:	sti    
  404b3b:	es pop edx
  404b3d:	scas   al,BYTE PTR es:[edi]
  404b3e:	std    
  404b3f:	push   edi
  404b40:	push   eax
  404b41:	jne    0x404b42
  404b43:	sub    BYTE PTR [esi],0x33
  404b46:	(bad)  
  404b47:	aad    0x3c
  404b49:	clc    
  404b4a:	cli    
  404b4b:	add    ah,BYTE PTR [ecx]
  404b4d:	mov    dh,0xfa
  404b4f:	stos   DWORD PTR es:[edi],eax
  404b50:	cwde   
  404b51:	jnp    0x404b4b
  404b53:	xchg   esp,eax
  404b54:	(bad)  
  404b55:	cmp    ecx,edi
  404b57:	mov    cl,0x0
  404b59:	add    BYTE PTR [ebx-0x56810e23],bl
  404b5f:	lahf   
  404b60:	repz iret 
  404b62:	aaa    
  404b63:	pusha  
  404b64:	icebp  
  404b65:	fcomp  st(5)
  404b67:	and    esi,eax
  404b69:	jge    0x404bd7
  404b6b:	in     eax,0xf4
  404b6d:	mov    dl,BYTE PTR [edx]
  404b6f:	test   eax,0x69a8d3f4
  404b74:	neg    BYTE PTR [esi+edx*8+0x6049f72b]
  404b7b:	push   esi
  404b7c:	fcom   DWORD PTR [esi]
  404b7e:	(bad)  
  404b7f:	xchg   ebp,eax
  404b80:	(bad)  
  404b82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b83:	fcmovu st,st(3)
  404b85:	lock retf 
  404b87:	sbb    al,0xda
  404b89:	gs cwde 
  404b8b:	dec    ebp
  404b8c:	fbstp  TBYTE PTR [edx-0x3a]
  404b8f:	(bad)  
  404b90:	fidivr WORD PTR [ebx-0x7b232d34]
  404b96:	bound  edx,QWORD PTR [ebx]
  404b98:	fld    QWORD PTR [eax]
  404b9a:	mov    fs,esi
  404b9c:	imul   edx,edi,0xd6a800b1
  404ba2:	clc    
  404ba3:	mov    ecx,0x5447d4ee
  404ba8:	sub    al,0xd5
  404baa:	call   0xa1a8:0x45d0633b
  404bb1:	shr    DWORD PTR [edi+ecx*1-0x19],1
  404bb5:	rol    ebx,cl
  404bb7:	stc    
  404bb8:	and    al,0xd2
  404bba:	xchg   bp,ax
  404bbc:	pop    edi
  404bbd:	lds    eax,FWORD PTR [eax]
  404bbf:	add    BYTE PTR [ecx],ch
  404bc1:	outs   dx,BYTE PTR ds:[esi]
  404bc2:	popf   
  404bc3:	(bad)  
  404bc4:	ror    cl,0xd8
  404bc7:	(bad)  
  404bc8:	iret   
  404bc9:	pop    ds
  404bca:	sbb    edi,eax
  404bcc:	and    dh,BYTE PTR [eax]
  404bce:	push   esi
  404bcf:	ret    0xd60d
  404bd2:	xchg   ebp,eax
  404bd3:	ret    
  404bd4:	in     al,0x63
  404bd6:	rol    cl,cl
  404bd8:	fisttp DWORD PTR [ecx+0x44dec010]
  404bde:	dec    esp
  404bdf:	retf   
  404be0:	loope  0x404b7c
  404be2:	mov    cs,edx
  404be4:	or     BYTE PTR [ecx],bl
  404be6:	enter  0x37c8,0xf0
  404bea:	or     ecx,ecx
  404bec:	mov    bl,ch
  404bee:	inc    esp
  404bef:	int3   
  404bf0:	push   ebp
  404bf1:	add    eax,DWORD PTR [edi-0x3e4de333]
  404bf7:	iret   
  404bf8:	adc    ebx,DWORD PTR [eax+0x3]
  404bfb:	into   
  404bfc:	push   esi
  404bfd:	jo     0x404bad
  404bff:	xchg   ecx,eax
  404c00:	cmp    DWORD PTR [esi+0x2430906c],edx
  404c06:	sub    dl,BYTE PTR [edx-0x6c163921]
  404c0c:	mov    dl,0xd4
  404c0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c0f:	xchg   esi,eax
  404c10:	jge    0x404c3d
  404c12:	gs xchg edi,eax
  404c14:	das    
  404c15:	ja     0x404bc3
  404c17:	and    bh,BYTE PTR [edx-0x5c1f7d7f]
  404c1d:	pop    esp
  404c1e:	sar    DWORD PTR [eax+eiz*4+0x7e678b],0x0
  404c26:	cdq    
  404c27:	cmp    dl,BYTE PTR ds:0x3b259338
  404c2d:	cli    
  404c2e:	retf   0x27e8
  404c31:	mov    ch,0xc7
  404c33:	xlat   BYTE PTR ds:[ebx]
  404c34:	push   DWORD PTR [esi-0x4a]
  404c37:	jle    0x404cb6
  404c39:	xor    DWORD PTR [ecx+ebp*4-0x2b5a0c2d],esi
  404c40:	out    dx,eax
  404c41:	mov    BYTE PTR [edx-0x54b4a63d],dh
  404c47:	jb     0x404bec
  404c49:	or     eax,0xcf8d9da1
  404c4e:	mov    eax,0xb58096f0
  404c53:	pop    ds
  404c54:	mov    cl,0x42
  404c56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c57:	inc    esi
  404c58:	dec    ebx
  404c59:	add    al,0xa6
  404c5b:	xor    ebp,esp
  404c5d:	lds    esi,FWORD PTR [edi-0x5365e1b4]
  404c63:	sbb    ecx,DWORD PTR [eax]
  404c65:	pop    eax
  404c66:	lods   eax,DWORD PTR ds:[esi]
  404c67:	jmp    0xdcdb:0xf5af1e71
  404c6e:	scas   al,BYTE PTR es:[edi]
  404c6f:	sbb    ecx,ecx
  404c71:	xchg   ebx,eax
  404c72:	stos   DWORD PTR es:[edi],eax
  404c73:	and    al,0x5f
  404c75:	push   ecx
  404c76:	mov    dl,0xed
  404c78:	sbb    al,0x17
  404c7a:	test   al,0xba
  404c7c:	xor    ch,dl
  404c7e:	mov    cl,0x67
  404c80:	aad    0xe2
  404c82:	(bad)  
  404c83:	xor    BYTE PTR [ebx+0x20],bh
  404c86:	mov    DWORD PTR [ecx+0x6601],0xa4278ec5
  404c90:	xchg   esp,eax
  404c91:	fisub  WORD PTR [ebx]
  404c93:	cmp    al,0xd4
  404c95:	mov    BYTE PTR [ebx],dh
  404c97:	adc    al,BYTE PTR [esi]
  404c99:	mov    edx,edi
  404c9b:	addr16 inc eax
  404c9d:	mov    eax,ebp
  404c9f:	mov    ebp,0x84e08a9a
  404ca4:	mov    esi,0xfcaacf81
  404ca9:	jg     0x404ca9
  404cab:	push   eax
  404cac:	cmp    al,BYTE PTR [edx-0x7c1e08d7]
  404cb2:	sub    al,0xed
  404cb4:	cwde   
  404cb5:	jle    0x404d12
  404cb7:	inc    ebx
  404cb8:	push   ebp
  404cb9:	jg     0x404c3d
  404cbb:	mov    ecx,0x8f6d7d13
  404cc0:	leave  
  404cc1:	jl     0x404cdb
  404cc3:	xor    ebp,DWORD PTR [ebx-0x6d]
  404cc6:	inc    edi
  404cc7:	sbb    eax,0x5f769231
  404ccc:	out    dx,eax
  404ccd:	(bad)  
  404cce:	popa   
  404ccf:	leave  
  404cd0:	lods   eax,DWORD PTR ds:[esi]
  404cd1:	xchg   ecx,eax
  404cd2:	hlt    
  404cd3:	fidiv  DWORD PTR [edx-0x74]
  404cd6:	jecxz  0x404d4c
  404cd8:	sub    BYTE PTR [ebp-0x7119f976],cl
  404cde:	mov    ch,0x20
  404ce0:	mov    ah,0x8e
  404ce2:	nop
  404ce3:	loope  0x404d3e
  404ce5:	xchg   ebp,eax
  404ce6:	lahf   
  404ce7:	dec    ebx
  404ce8:	and    dl,BYTE PTR [esi+ebp*8-0x466a2353]
  404cef:	xchg   edi,eax
  404cf0:	add    BYTE PTR [eax],al
  404cf2:	mov    esi,0x1899c96
  404cf7:	call   0x55b2:0x9b3ba36b
  404cfe:	jne    0x404c99
  404d00:	mov    ebp,0xe897a0ef
  404d05:	add    ebp,DWORD PTR [edi]
  404d07:	fiadd  WORD PTR [edi+ebx*1-0x45]
  404d0b:	xchg   ebp,eax
  404d0c:	add    DWORD PTR [edx-0x1c],esp
  404d0f:	out    0xaa,al
  404d11:	mov    edi,0x3e139351
  404d16:	mov    al,0x3b
  404d18:	mov    ds,ebx
  404d1a:	pushf  
  404d1b:	mov    bh,0x36
  404d1d:	mov    ch,0x79
  404d1f:	inc    ebp
  404d20:	and    al,0x50
  404d22:	les    ebp,FWORD PTR [edi-0x732b6964]
  404d28:	les    esi,FWORD PTR [ebx+0x71]
  404d2b:	out    0x7b,al
  404d2d:	or     eax,0xe86e9a8b
  404d32:	sub    edi,ebx
  404d34:	aad    0xa1
  404d36:	sbb    DWORD PTR [eax+0x43743c4b],esi
  404d3c:	repz sbb al,BYTE PTR [eax-0x47]
  404d40:	loope  0x404cf9
  404d42:	sbb    al,0x3d
  404d44:	pop    ecx
  404d45:	data16 icebp 
  404d47:	not    BYTE PTR [eax+0x43]
  404d4a:	jl     0x404ccd
  404d4c:	jmp    0xfb2de72e
  404d51:	mov    eax,0x314389a4
  404d56:	add    BYTE PTR [eax],al
  404d58:	ins    BYTE PTR es:[edi],dx
  404d59:	push   esp
  404d5a:	fimul  WORD PTR [ecx+edi*8-0x60]
  404d5e:	data16 stos BYTE PTR es:[edi],al
  404d60:	and    al,0x4c
  404d62:	je     0x404d2b
  404d64:	adc    DWORD PTR [eax-0x75068634],ebp
  404d6a:	xchg   esp,eax
  404d6b:	aam    0x14
  404d6d:	out    dx,eax
  404d6e:	sub    esi,edx
  404d70:	ret    0x3e81
  404d73:	dec    edi
  404d74:	cld    
  404d75:	test   BYTE PTR [ebp+0x1ba7d30e],0x2b
  404d7c:	mov    dl,0x4b
  404d7e:	mov    ds:0xb1a20b85,eax
  404d83:	mov    al,ds:0x9544a
  404d88:	sub    BYTE PTR [ecx+0x33],al
  404d8b:	mov    al,ds:0x188faa4d
  404d90:	jae    0x404d8b
  404d92:	cmp    DWORD PTR [edx],ecx
  404d94:	(bad)  
  404d95:	loop   0x404d1c
  404d97:	mov    dl,0x3f
  404d99:	fimul  DWORD PTR [esi+0x2f]
  404d9c:	retf   0xed32
  404d9f:	xchg   edi,eax
  404da0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404da1:	xchg   edx,eax
  404da2:	pop    eax
  404da3:	test   DWORD PTR [ecx+0x69],edx
  404da6:	in     al,0x3d
  404da8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404da9:	pop    ecx
  404daa:	xchg   DWORD PTR [ebp+0x2],esp
  404dad:	cmp    BYTE PTR [ebx],0xdd
  404db0:	sbb    al,0x21
  404db2:	mov    cs,edi
  404db4:	fld    st(3)
  404db6:	xor    esi,DWORD PTR [edi+0x10]
  404db9:	repnz in al,0xea
  404dbc:	add    BYTE PTR [eax],al
  404dbe:	in     eax,0x8
  404dc0:	pop    ecx
  404dc1:	push   edx
  404dc2:	mov    esi,DWORD PTR [ebx+0x526e40ec]
  404dc8:	push   eax
  404dc9:	clc    
  404dca:	mov    bh,0x9a
  404dcc:	sub    dh,al
  404dce:	push   edx
  404dcf:	jno    0x404d67
  404dd1:	dec    eax
  404dd2:	sub    al,0xd2
  404dd4:	and    BYTE PTR [edx-0x37],bl
  404dd7:	sub    bl,BYTE PTR [edi+0x480140e2]
  404ddd:	jg     0x404db4
  404ddf:	jmp    0x3afc15d7
  404de4:	inc    ecx
  404de5:	aad    0x3e
  404de7:	fwait
  404de8:	std    
  404de9:	ins    DWORD PTR es:[edi],dx
  404dea:	js     0x404d97
  404dec:	sahf   
  404ded:	xor    eax,0x8d224a5d
  404df2:	add    edi,edx
  404df4:	xchg   esi,eax
  404df5:	lahf   
  404df6:	jbe    0x404e09
  404df8:	sub    esp,DWORD PTR [edi]
  404dfa:	das    
  404dfb:	sbb    esp,edi
  404dfd:	mov    edx,0x241c27a
  404e02:	das    
  404e03:	push   ebx
  404e04:	test   esp,esi
  404e06:	pop    ds
  404e07:	mov    al,0xaa
  404e09:	dec    eax
  404e0a:	xlat   BYTE PTR ds:[ebx]
  404e0b:	loope  0x404e69
  404e0d:	adc    al,0x94
  404e0f:	cld    
  404e10:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e12:	dec    esp
  404e13:	push   edi
  404e14:	xchg   edx,eax
  404e15:	sbb    eax,0xa1ad741e
  404e1a:	mov    dh,0xea
  404e1c:	ret    
  404e1d:	jbe    0x404e62
  404e1f:	enter  0xca6a,0x0
  404e23:	add    BYTE PTR [ebx-0x7681029b],al
  404e29:	inc    eax
  404e2a:	and    al,bl
  404e2c:	sub    DWORD PTR [ebx+0x32],esi
  404e2f:	mov    al,ds:0x1c0d1059
  404e34:	leave  
  404e35:	in     eax,dx
  404e36:	jl     0x404de1
  404e38:	mov    ds:0xf315d588,eax
  404e3d:	dec    ecx
  404e3e:	popf   
  404e3f:	ret    0x247e
  404e42:	cmp    BYTE PTR [esi+0x6],0xbf
  404e46:	in     eax,0xca
  404e48:	add    al,0x9c
  404e4a:	dec    edx
  404e4b:	ja     0x404eb9
  404e4d:	bound  eax,QWORD PTR ds:0x29ff640d
  404e53:	mov    cl,0xfc
  404e55:	fnstsw WORD PTR [ebx+0x6278ce04]
  404e5b:	mov    eax,0x6f99f986
  404e60:	repz push esp
  404e62:	mov    ch,0xd3
  404e64:	push   ebx
  404e65:	outs   dx,BYTE PTR ds:[esi]
  404e66:	push   edx
  404e67:	pop    cx
  404e69:	retf   
  404e6a:	in     eax,dx
  404e6b:	(bad)  
  404e6d:	xchg   ecx,eax
  404e6e:	fnstsw WORD PTR [eax+0x542ad29]
  404e74:	jns    0x404e7c
  404e76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e77:	mov    al,0xd3
  404e79:	sub    BYTE PTR [edx+0x1de430c],cl
  404e7f:	je     0x404e75
  404e81:	pop    edi
  404e82:	pop    edi
  404e83:	fisttp DWORD PTR [eax+0x2c7917]
  404e89:	add    ch,bl
  404e8b:	or     esp,edx
  404e8d:	adc    edx,DWORD PTR [ecx+0x51baeb71]
  404e93:	sbb    DWORD PTR [esi-0x6c],eax
  404e96:	xchg   ebp,eax
  404e97:	popa   
  404e98:	pusha  
  404e99:	repz sbb DWORD PTR [edi-0x43],ebp
  404e9d:	dec    esp
  404e9e:	mov    esp,0x73243c07
  404ea3:	mov    bl,cl
  404ea5:	or     dl,bh
  404ea7:	loop   0x404e5f
  404ea9:	pop    esp
  404eaa:	jp     0x404ea0
  404eac:	push   ecx
  404ead:	ret    
  404eae:	mov    esi,0x9dd3947c
  404eb3:	aam    0x71
  404eb5:	ins    BYTE PTR es:[edi],dx
  404eb6:	add    DWORD PTR [edi+ecx*1],ebx
  404eb9:	sbb    eax,esp
  404ebb:	sub    ch,dl
  404ebd:	xor    ecx,DWORD PTR [eax-0x3e]
  404ec0:	mov    ds:0x3e4f9f3c,eax
  404ec5:	jecxz  0x404eab
  404ec7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ec8:	sbb    BYTE PTR [esi+eax*4-0x15554a47],al
  404ecf:	inc    eax
  404ed0:	fs cmp BYTE PTR fs:[ecx+0x41],cl
  404ed5:	retf   
  404ed6:	lods   al,BYTE PTR ds:[esi]
  404ed7:	mov    cl,0xdf
  404ed9:	sbb    esp,DWORD PTR [ecx]
  404edb:	lahf   
  404edc:	mov    edx,0x3357b502
  404ee1:	sti    
  404ee2:	sti    
  404ee3:	mov    ecx,0x324e544e
  404ee8:	test   al,0xb2
  404eea:	jecxz  0x404f0f
  404eec:	lds    ecx,FWORD PTR [ebx-0x33a90000]
  404ef2:	jnp    0x404f6f
  404ef4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ef5:	test   dh,dl
  404ef7:	mov    ds:0xf100ebf8,al
  404efc:	ins    BYTE PTR es:[edi],dx
  404efd:	pusha  
  404efe:	add    eax,0xbd13144c
  404f03:	or     eax,0x2820c73c
  404f08:	inc    ebx
  404f09:	sub    ebx,DWORD PTR [eax-0x75421a7a]
  404f0f:	mov    ds:0x232327c,eax
  404f14:	jne    0x404f4d
  404f16:	in     al,dx
  404f17:	pop    ds
  404f18:	fidivr DWORD PTR [edx+0x2e1e7954]
  404f1e:	inc    esi
  404f1f:	xchg   esp,eax
  404f20:	xor    eax,edx
  404f22:	(bad)  
  404f23:	adc    eax,0xf06317d2
  404f28:	pop    bp
  404f2a:	fisttp DWORD PTR [esi+0x6bc90fab]
  404f30:	scas   al,BYTE PTR es:[edi]
  404f31:	arpl   WORD PTR [ecx-0x63],si
  404f34:	sahf   
  404f35:	ret    0x3829
  404f38:	sub    DWORD PTR [esi],0xffffff91
  404f3b:	push   ss
  404f3c:	add    eax,0x9bb383ba
  404f41:	sub    al,0x3b
  404f43:	push   0xffffff9b
  404f45:	arpl   WORD PTR [esi+0x1e114e47],sp
  404f4b:	loope  0x404fc0
  404f4d:	pop    ebx
  404f4e:	or     al,0xbc
  404f50:	push   ss
  404f51:	sbb    BYTE PTR [ebp+ecx*4+0x1dd30000],dh
  404f58:	mov    esp,0x4d1a628
  404f5d:	push   es
  404f5e:	mov    ah,BYTE PTR ds:0xcaeea316
  404f64:	scas   al,BYTE PTR es:[edi]
  404f65:	sbb    dl,BYTE PTR [esi]
  404f67:	add    BYTE PTR [ebx],dh
  404f69:	ja     0x404fa6
  404f6b:	je     0x404ef8
  404f6d:	xchg   ecx,eax
  404f6e:	mov    esi,0x73ec9908
  404f73:	ins    BYTE PTR es:[edi],dx
  404f74:	and    DWORD PTR [eax],eax
  404f76:	jge    0x404f09
  404f78:	cmc    
  404f79:	js     0x404fdb
  404f7b:	ds dec ecx
  404f7d:	rcl    BYTE PTR [esi-0x26],0xfb
  404f81:	shr    BYTE PTR [ebx+0x5],cl
  404f84:	inc    eax
  404f85:	push   0x32
  404f87:	xor    BYTE PTR [edi+0x28c78ff7],dl
  404f8d:	dec    edi
  404f8e:	mov    DWORD PTR [eax-0x62],edi
  404f91:	pop    ebp
  404f92:	in     al,0x8f
  404f94:	and    ah,ch
  404f96:	or     ebp,ecx
  404f98:	imul   ecx,DWORD PTR [ebp+0x66],0x50f5d610
  404f9f:	scas   eax,DWORD PTR es:[edi]
  404fa0:	arpl   di,sp
  404fa2:	in     eax,dx
  404fa3:	pop    eax
  404fa4:	fistp  WORD PTR [edi+0x14]
  404fa7:	pusha  
  404fa8:	or     dl,al
  404faa:	stc    
  404fab:	js     0x404f61
  404fad:	jp     0x40502e
  404faf:	sub    BYTE PTR [ecx],al
  404fb1:	push   0xd0babf72
  404fb6:	pushf  
  404fb7:	iret   
  404fb8:	fisttp WORD PTR [eax+0x38410000]
  404fbe:	bound  esi,QWORD PTR [eax]
  404fc0:	aaa    
  404fc1:	xchg   edi,edx
  404fc3:	and    cl,BYTE PTR [edx-0x2c659493]
  404fc9:	dec    eax
  404fca:	mov    esp,0x9eee07
  404fcf:	mov    edi,0xadb50028
  404fd4:	(bad)
  404fd7:	adc    eax,0x1d73200c
  404fdc:	xor    DWORD PTR [edi+0x6587a5cc],esi
  404fe2:	jp     0x404f9b
  404fe4:	call   0x11a7:0x230fc680
  404feb:	xchg   edx,eax
  404fec:	dec    BYTE PTR [edi-0x53]
  404fef:	sub    ch,BYTE PTR [edi]
  404ff1:	adc    DWORD PTR [ebx],0x19
  404ff4:	pop    es
  404ff5:	test   al,0x38
  404ff7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ff8:	scas   eax,DWORD PTR es:[edi]
  404ff9:	push   edx
  404ffa:	sub    dh,al
  404ffc:	push   edi
  404ffd:	mov    ch,0x3
  404fff:	jp     0x404f90
  405001:	retf   
  405002:	pusha  
  405003:	iret   
  405004:	popf   
  405005:	xor    BYTE PTR [edx-0x4e191a8d],bh
  40500b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40500c:	js     0x40500a
  40500e:	call   0x2ac:0xeb5e1818
  405015:	jno    0x405067
  405017:	adc    DWORD PTR [edx-0x3d],esi
  40501a:	mov    al,ds:0x7a28794d
  40501f:	icebp  
  405020:	add    BYTE PTR [eax],al
  405022:	stc    
  405023:	cmp    eax,ebp
  405025:	inc    ebx
  405026:	add    ebx,DWORD PTR [ebp+0x1653f843]
  40502c:	sub    ch,BYTE PTR [edi]
  40502e:	(bad)  
  40502f:	test   al,0x10
  405031:	xchg   ebx,eax
  405032:	outs   dx,BYTE PTR ds:[esi]
  405033:	(bad)  
  405034:	jae    0x40505c
  405036:	pop    esp
  405037:	and    al,0xd8
  405039:	call   0x407c:0xf9c86dc4
  405040:	arpl   WORD PTR [ebp+0x34],ax
  405043:	out    0x2,eax
  405045:	lock inc esi
  405047:	mov    esp,0x7ace4c1b
  40504c:	push   ebx
  40504d:	fwait
  40504e:	push   ebx
  40504f:	and    al,bh
  405051:	es mov bl,0xf1
  405054:	mov    DWORD PTR [edx+0x2eb09499],edx
  40505a:	dec    ecx
  40505b:	imul   edx,DWORD PTR ds:[ecx+ecx*2+0x11],0xffffffd0
  405061:	call   0x5d74072f
  405066:	mov    bl,0x8b
  405068:	sbb    cl,ah
  40506a:	and    ebx,esi
  40506c:	xor    eax,0x53851ae1
  405071:	cmp    dh,BYTE PTR [ebp+0xa9acec]
  405077:	ffreep st(7)
  405079:	sub    BYTE PTR [esi+edx*4-0x41b06d82],0xdb
  405081:	mov    ecx,0x49f5358b
  405086:	add    BYTE PTR [eax],al
  405088:	push   ss
  405089:	sub    BYTE PTR [eax-0xf],dl
  40508c:	or     edi,0x9
  40508f:	push   es
  405090:	lods   eax,DWORD PTR ds:[esi]
  405091:	inc    edx
  405092:	and    al,0x25
  405094:	dec    ecx
  405095:	stos   BYTE PTR es:[edi],al
  405096:	cmp    BYTE PTR [esi+0x5d9f98b4],0x40
  40509d:	push   eax
  40509e:	add    BYTE PTR [ebp+0x70],al
  4050a1:	test   al,0x1d
  4050a3:	out    0xed,al
  4050a5:	inc    eax
  4050a6:	jnp    0x405125
  4050a8:	pop    ecx
  4050a9:	push   edx
  4050aa:	xchg   esi,eax
  4050ab:	sahf   
  4050ac:	in     eax,0x9a
  4050ae:	pop    ss
  4050af:	(bad)  
  4050b0:	xor    dh,BYTE PTR [edi]
  4050b2:	bnd je 0x405043
  4050b5:	mov    edi,0xcd1b0e8c
  4050ba:	imul   ebp,DWORD PTR ds:0x1d9f2587,0xfe39ede4
  4050c4:	and    DWORD PTR [ebp-0x68929aec],eax
  4050ca:	mov    cl,0xc5
  4050cc:	sbb    edi,ebx
  4050ce:	scas   al,BYTE PTR es:[di]
  4050d0:	(bad)  
  4050d1:	jb     0x405118
  4050d3:	lea    esp,[edx]
  4050d5:	cli    
  4050d6:	loop   0x4050cd
  4050d8:	mov    al,ds:0x1b54be08
  4050dd:	pusha  
  4050de:	(bad)  
  4050df:	push   ss
  4050e0:	or     DWORD PTR [eax+0x2a],ebx
  4050e3:	xor    eax,0x5011085
  4050e8:	jno    0x40512b
  4050ea:	sub    eax,0xcb0000a0
  4050ef:	lods   al,BYTE PTR ds:[esi]
  4050f0:	xchg   ebp,eax
  4050f1:	sbb    DWORD PTR [edx-0x6e8bf826],ebp
  4050f7:	xchg   esi,eax
  4050f8:	mov    al,0x92
  4050fa:	add    esp,ebx
  4050fc:	mov    eax,ds:0x1a8e5aef
  405101:	mov    cl,0x42
  405103:	scas   eax,DWORD PTR es:[edi]
  405104:	inc    edx
  405105:	int3   
  405106:	jnp    0x405148
  405108:	cli    
  405109:	sub    bl,cl
  40510b:	mov    ah,0xe8
  40510d:	inc    edi
  40510e:	ret    0x5038
  405111:	push   es
  405112:	jb     0x4050a2
  405114:	int    0x63
  405116:	leave  
  405117:	loope  0x40518d
  405119:	jge    0x405166
  40511b:	xchg   edi,eax
  40511c:	fdiv   DWORD PTR [bp+si]
  40511f:	fcmovnu st,st(6)
  405121:	jmp    0x36412f52
  405126:	xor    BYTE PTR [esi],cl
  405128:	xchg   edi,eax
  405129:	(bad)  
  40512a:	loop   0x405169
  40512c:	sub    eax,0xbb2ddb50
  405131:	out    dx,al
  405132:	setp   BYTE PTR [eax]
  405135:	sbb    DWORD PTR ds:0xd808eca,esp
  40513b:	jnp    0x405171
  40513d:	outs   dx,DWORD PTR ds:[esi]
  40513e:	adc    BYTE PTR [ebx-0x5e],ch
  405141:	mul    ebp
  405143:	xor    eax,DWORD PTR gs:[eax]
  405146:	jg     0x4050dd
  405148:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405149:	mov    DWORD PTR [edi+0x7e561fc6],eax
  40514f:	mov    dh,0x89
  405151:	lock add BYTE PTR [eax],al
  405154:	sbb    ah,BYTE PTR [edx]
  405156:	sub    bl,bh
  405158:	add    edx,DWORD PTR [edx-0x44]
  40515b:	dec    esi
  40515c:	adc    al,0x3
  40515e:	push   es
  40515f:	jns    0x40516a
  405161:	repz pop DWORD PTR [eax]
  405164:	mov    eax,DWORD PTR [edi+0x11]
  405167:	fs jl  0x4051b6
  40516a:	and    edx,esi
  40516c:	and    eax,0xd2487042
  405171:	inc    edx
  405172:	inc    eax
  405173:	fisubr WORD PTR [esp+eiz*4]
  405176:	aad    0x7d
  405178:	mov    ebx,0x22ebe5ad
  40517d:	test   eax,0xabc551b4
  405182:	test   bh,al
  405184:	push   ebp
  405185:	lock cwde 
  405187:	push   esi
  405188:	mov    dl,0xf4
  40518a:	test   al,0xc0
  40518c:	sbb    edi,edi
  40518e:	idiv   DWORD PTR [edx-0x74]
  405191:	push   es
  405192:	enter  0x12ec,0xdd
  405196:	pop    esp
  405197:	dec    edi
  405198:	jne    0x405172
  40519a:	ins    BYTE PTR es:[edi],dx
  40519b:	(bad)  
  40519d:	sar    DWORD PTR ds:0xdd25b63,1
  4051a3:	cmc    
  4051a4:	sub    eax,0x1ac820f0
  4051a9:	repz adc BYTE PTR [esi-0x3d],bl
  4051ad:	cli    
  4051ae:	aas    
  4051af:	in     al,0xa4
  4051b1:	stc    
  4051b2:	outs   dx,DWORD PTR ds:[esi]
  4051b3:	jb     0x40517f
  4051b5:	fsubrp st(4),st
  4051b7:	rol    DWORD PTR [eax],1
  4051b9:	add    ch,bh
  4051bb:	in     eax,0xd4
  4051bd:	inc    edi
  4051be:	test   bh,cl
  4051c0:	test   ebp,edi
  4051c2:	jae    0x405198
  4051c4:	mov    ch,0x6b
  4051c6:	jae    0x405210
  4051c8:	test   eax,0x994c54fa
  4051cd:	ins    BYTE PTR es:[edi],dx
  4051ce:	mov    ebp,0x5ad6c845
  4051d3:	dec    esi
  4051d4:	clc    
  4051d5:	inc    eax
  4051d6:	xor    al,0xa2
  4051d8:	ins    DWORD PTR es:[edi],dx
  4051d9:	jecxz  0x4051ae
  4051db:	mov    ds:0x92f755d,al
  4051e0:	xlat   BYTE PTR ds:[ebx]
  4051e1:	or     eax,0x3dd25c68
  4051e6:	(bad)  
  4051e7:	fmulp  st(1),st
  4051e9:	xor    BYTE PTR [ebx+0x2500cc76],bl
  4051ef:	std    
  4051f0:	rcl    DWORD PTR [ecx-0x51],cl
  4051f3:	inc    eax
  4051f4:	aad    0x61
  4051f6:	cmp    DWORD PTR [esi-0x787d0b8a],esp
  4051fc:	jno    0x4051c2
  4051fe:	or     al,0xf8
  405200:	push   0xffffff95
  405202:	xchg   esi,eax
  405203:	sub    eax,0xad20a56e
  405208:	add    BYTE PTR [eax-0x77f89037],bh
  40520e:	aaa    
  40520f:	inc    DWORD PTR [eax]
  405211:	(bad)  
  405213:	adc    eax,0xe84be8f8
  405218:	sbb    edi,DWORD PTR [eax+esi*4+0x1c]
  40521c:	sbb    eax,0x1e00004c
  405221:	xchg   BYTE PTR [ebx],ah
  405223:	sbb    eax,0x2d2466c4
  405228:	xor    cl,BYTE PTR [edi]
  40522a:	rol    DWORD PTR [ecx-0x41],1
  40522d:	(bad)
  405230:	sub    DWORD PTR ds:0x8f9b20d0,ebp
  405236:	xlat   BYTE PTR ds:[ebx]
  405237:	adc    BYTE PTR ds:0xb68571f6,al
  40523d:	mov    dh,0x74
  40523f:	mov    ch,0x20
  405241:	dec    eax
  405242:	ins    DWORD PTR es:[edi],dx
  405243:	in     al,0x92
  405245:	pop    esp
  405246:	push   0xffffffd4
  405248:	cld    
  405249:	fadd   QWORD PTR [ebx]
  40524b:	leave  
  40524c:	int    0xbf
  40524e:	add    bh,cl
  405250:	pop    ebx
  405251:	das    
  405252:	sti    
  405253:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405254:	test   eax,0x3797fc65
  405259:	fsubrp st(6),st
  40525b:	sbb    DWORD PTR [edx],edi
  40525d:	xchg   ebx,eax
  40525e:	lock push ds
  405260:	inc    edx
  405261:	add    DWORD PTR [ecx+0x27],edi
  405264:	or     esp,DWORD PTR [edi+0x46]
  405267:	and    bl,dl
  405269:	(bad)  
  40526b:	sbb    dh,bh
  40526d:	leave  
  40526e:	fcomp  QWORD PTR [edi]
  405270:	into   
  405271:	cmp    ebp,DWORD PTR [ebp+0x26]
  405274:	pop    ds
  405275:	mov    dh,0x3a
  405277:	and    DWORD PTR [edi],ebp
  405279:	and    BYTE PTR [ebp+eax*1+0x303c0a2],dl
  405280:	mov    dl,BYTE PTR [edx+0x6a]
  405283:	sti    
  405284:	add    BYTE PTR [eax],al
  405286:	cmp    al,0x9c
  405288:	adc    eax,0x8d266cfc
  40528d:	jae    0x405295
  40528f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405290:	fidiv  DWORD PTR [esi+edx*1+0x2f]
  405294:	arpl   WORD PTR [ebp-0x29],bp
  405297:	mov    eax,0x4aa769ec
  40529c:	dec    edx
  40529d:	leave  
  40529e:	sub    ch,BYTE PTR [ebp+0x1752cdf5]
  4052a4:	xlat   BYTE PTR fs:[ebx]
  4052a6:	jnp    0x405279
  4052a8:	rcl    eax,cl
  4052aa:	arpl   WORD PTR [ebx+0x35],ax
  4052ad:	jbe    0x4052fd
  4052af:	add    dh,BYTE PTR es:[ecx+0x7e]
  4052b3:	pushf  
  4052b4:	mov    ebp,DWORD PTR [eax+0x2f]
  4052b7:	push   edx
  4052b8:	xchg   esp,eax
  4052b9:	outs   dx,DWORD PTR ds:[esi]
  4052ba:	pop    ds
  4052bb:	shl    BYTE PTR [edx],0xcb
  4052be:	xchg   edx,eax
  4052bf:	pop    ds
  4052c0:	(bad)  
  4052c2:	call   0xbb3b:0xf3d54cb5
  4052c9:	sar    BYTE PTR [ebx-0x69e2d437],cl
  4052cf:	cmp    BYTE PTR [ecx+ebx*1+0x4401ca86],dh
  4052d6:	dec    esp
  4052d7:	push   esi
  4052d8:	inc    edi
  4052d9:	xchg   ebx,eax
  4052da:	dec    ebx
  4052db:	xchg   cl,dl
  4052dd:	lods   eax,DWORD PTR ds:[esi]
  4052de:	mov    dl,bh
  4052e0:	jno    0x4052fc
  4052e2:	sub    bl,ch
  4052e4:	jecxz  0x405269
  4052e6:	jns    0x405301
  4052e8:	pop    esi
  4052e9:	sub    al,0x0
  4052eb:	add    BYTE PTR [esi+0x49],dh
  4052ee:	enter  0x2f99,0x4f
  4052f2:	cmp    eax,0xab1f2906
  4052f7:	ja     0x405351
  4052f9:	fst    QWORD PTR [eax]
  4052fb:	and    BYTE PTR [edi-0x13],dl
  4052fe:	xchg   BYTE PTR [esi-0x36db6cdc],bh
  405304:	and    eax,0xd50b263
  405309:	mov    dl,0x8
  40530b:	pop    ds
  40530c:	or     al,dl
  40530e:	sahf   
  40530f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405310:	test   dh,0xf
  405313:	shl    bl,1
  405315:	xchg   esi,eax
  405316:	cdq    
  405317:	cmp    DWORD PTR [ebx],eax
  405319:	and    sp,WORD PTR [esi]
  40531c:	cld    
  40531d:	jne    0x4052d4
  40531f:	inc    eax
  405320:	or     BYTE PTR [ebx],0x16
  405323:	movq   mm3,mm3
  405326:	jg     0x4052c6
  405328:	xchg   DWORD PTR [edx],ebp
  40532a:	cmp    ch,BYTE PTR [ecx-0x2b53c57e]
  405330:	push   esp
  405331:	popa   
  405332:	and    DWORD PTR [ebx+0x55],esp
  405335:	xchg   ecx,eax
  405336:	mov    bh,0xea
  405338:	pop    esi
  405339:	ror    BYTE PTR ds:0x9bb05a35,0x93
  405340:	fbld   TBYTE PTR [eax+edi*1]
  405343:	jl     0x40531f
  405345:	push   esp
  405346:	scas   al,BYTE PTR es:[edi]
  405347:	in     eax,dx
  405348:	jmp    0xe75a6750
  40534d:	repz add DWORD PTR [eax],0x3b50000
  405354:	or     dl,BYTE PTR [edx]
  405356:	cli    
  405357:	in     al,dx
  405358:	cmp    DWORD PTR [ebx+edx*4-0x63c1951b],eax
  40535f:	jmp    0xbcf:0xc6faa85a
  405366:	add    eax,0x8c9dffca
  40536b:	loopne 0x40531b
  40536d:	daa    
  40536e:	arpl   di,bx
  405370:	sahf   
  405371:	mov    cl,0x26
  405373:	enter  0x4493,0xc9
  405377:	enter  0xd2a3,0x80
  40537b:	loope  0x40536f
  40537d:	push   0xfec2de6f
  405382:	sub    DWORD PTR [ebx],eax
  405384:	push   esi
  405385:	pop    ebp
  405386:	(bad)  
  405387:	std    
  405388:	gs retf 
  40538a:	aas    
  40538b:	hlt    
  40538c:	ss jno 0x40533f
  40538f:	jmp    0x405397
  405391:	out    0x30,eax
  405393:	fwait
  405394:	sbb    dh,BYTE PTR [esi-0x61]
  405397:	mov    ah,0x2a
  405399:	loopne 0x405391
  40539b:	cdq    
  40539c:	jnp    0x4053f8
  40539e:	test   eax,0xfcc4b96
  4053a3:	cmp    dh,bl
  4053a5:	outs   dx,DWORD PTR ds:[esi]
  4053a6:	nop
  4053a7:	cmp    dh,ch
  4053a9:	stc    
  4053aa:	stc    
  4053ab:	dec    esi
  4053ac:	mov    edi,0x8f526643
  4053b1:	aad    0xc8
  4053b3:	mov    al,0xa2
  4053b5:	call   0xaff753ba
  4053ba:	xchg   edx,eax
  4053bb:	jle    0x40539b
  4053bd:	xchg   edi,eax
  4053be:	ret    
  4053bf:	les    esi,FWORD PTR [ecx]
  4053c1:	xchg   ebp,eax
  4053c2:	repz push edx
  4053c4:	xchg   DWORD PTR [ecx],edi
  4053c6:	data16 icebp 
  4053c8:	push   0x2f675636
  4053cd:	mov    ah,0x6f
  4053cf:	push   es
  4053d0:	sar    ch,cl
  4053d2:	jbe    0x40540a
  4053d4:	hlt    
  4053d5:	jl     0x4053cd
  4053d7:	sub    al,BYTE PTR [ebp-0x14e500e4]
  4053dd:	mov    al,BYTE PTR ds:0xf6994a
  4053e3:	jp     0x4053f4
  4053e5:	and    al,0x25
  4053e7:	out    dx,eax
  4053e8:	ins    BYTE PTR es:[edi],dx
  4053e9:	ins    DWORD PTR es:[edi],dx
  4053ea:	and    bh,bl
  4053ec:	loop   0x4053d3
  4053ee:	sbb    cl,BYTE PTR [esi-0x41e47c80]
  4053f4:	out    0xf,al
  4053f6:	and    dh,BYTE PTR [ebx-0x7cdcb64d]
  4053fc:	xor    eax,0x8fd217da
  405401:	addr16 sbb ah,dl
  405404:	add    DWORD PTR [ecx],edx
  405406:	stc    
  405407:	jbe    0x4053a3
  405409:	inc    eax
  40540a:	cld    
  40540b:	inc    esi
  40540c:	sub    al,0x97
  40540e:	add    al,0x16
  405410:	jbe    0x4053a4
  405412:	jmp    DWORD PTR ds:0x3b6efa58
  405418:	loope  0x405420
  40541a:	or     ax,WORD PTR [eax]
  40541d:	add    BYTE PTR [edi-0x60],al
  405420:	outs   dx,BYTE PTR ds:[esi]
  405421:	pop    edx
  405422:	mov    ebp,0x336a7558
  405427:	ja     0x4053fa
  405429:	dec    eax
  40542b:	jno    0x4053ff
  40542d:	iret   
  40542e:	ds loope 0x4053fa
  405431:	sahf   
  405432:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405433:	bswap  ebx
  405435:	scas   al,BYTE PTR es:[edi]
  405436:	dec    edx
  405437:	inc    eax
  405438:	push   ds
  405439:	ret    0x989f
  40543c:	and    eax,0x1f0a11f2
  405441:	mov    ds:0x9317b6b3,eax
  405446:	xor    eax,0x2afa83de
  40544b:	jne    0x4053e0
  40544d:	stc    
  40544e:	add    cl,BYTE PTR [ebx]
  405450:	sbb    al,BYTE PTR [ecx]
  405452:	dec    eax
  405453:	popa   
  405454:	in     eax,0x3
  405456:	add    bh,ch
  405458:	pop    esp
  405459:	push   0x6b8a5ff5
  40545e:	adc    eax,0x4472f2f2
  405463:	jl     0x405441
  405465:	jno    0x40548b
  405467:	push   es
  405468:	jp     0x40543f
  40546a:	mov    cl,0x66
  40546c:	inc    ebp
  40546d:	into   
  40546e:	mov    ecx,0x80c7d3d8
  405473:	xchg   edx,eax
  405474:	jecxz  0x405442
  405476:	mov    ah,bh
  405478:	ins    DWORD PTR es:[edi],dx
  405479:	aam    0x7d
  40547b:	mov    cl,0x39
  40547d:	iret   
  40547e:	dec    ebp
  40547f:	pop    ds
  405480:	rol    dh,0x0
  405483:	add    BYTE PTR [ebp+eax*8+0x3baccdcf],bl
  40548a:	imul   ebp,DWORD PTR [ecx+0x19],0x116a1699
  405491:	daa    
  405492:	xchg   DWORD PTR [ebx-0x48],esi
  405495:	mov    esp,0x517070f0
  40549a:	jo     0x405497
  40549c:	xchg   al,al
  40549e:	push   edi
  4054a0:	xchg   BYTE PTR [esi-0x72],cl
  4054a3:	add    DWORD PTR [esp+edx*4-0x27],edx
  4054a7:	add    dh,BYTE PTR [edx+ebp*1]
  4054aa:	ja     0x4054cd
  4054ac:	mov    eax,ds:0xc922e0c9
  4054b1:	aaa    
  4054b2:	dec    ecx
  4054b3:	sbb    esi,eax
  4054b5:	lods   eax,DWORD PTR ds:[esi]
  4054b6:	not    BYTE PTR [edi]
  4054b8:	clc    
  4054b9:	and    ecx,DWORD PTR [eax-0x68b93106]
  4054bf:	stc    
  4054c0:	(bad)  
  4054c1:	mov    eax,0x5d2f2701
  4054c6:	push   ebp
  4054c7:	lock sub eax,0x204ec38d
  4054cd:	add    BYTE PTR [eax-0x47],ah
  4054d0:	adc    esi,eax
  4054d2:	cmc    
  4054d3:	and    BYTE PTR [edx],dl
  4054d5:	and    DWORD PTR [edi+ecx*8+0x42],ecx
  4054d9:	push   ecx
  4054da:	ficom  DWORD PTR [edi+0x7a]
  4054dd:	xor    al,0x4b
  4054df:	mov    al,ds:0x29dd2469
  4054e4:	push   0xb666d5
  4054e9:	add    BYTE PTR [ebp+eax*1-0xf],dh
  4054ed:	nop
  4054ee:	pop    ss
  4054ef:	js     0x405543
  4054f1:	aas    
  4054f2:	add    al,0x68
  4054f4:	les    ebp,FWORD PTR [esi+0x197e98fe]
  4054fa:	fmulp  st(0),st
  4054fc:	call   0x1e0c2b85
  405501:	xor    eax,ebp
  405503:	fwait
  405504:	mov    ebx,DWORD PTR [edx+0x5316cdd]
  40550a:	mov    edi,0x5b63a77c
  40550f:	adc    BYTE PTR [esp+ebp*1],al
  405512:	push   0x6abd91e0
  405517:	xor    DWORD PTR [eax],ebp
  405519:	retf   0x40fb
  40551c:	mov    esi,0x2f44413a
  405521:	and    eax,0x94b91452
  405526:	xor    al,0xe5
  405528:	add    al,bl
  40552a:	and    ebp,esi
  40552c:	xchg   esp,eax
  40552d:	popf   
  40552e:	add    eax,0xaa368b
  405533:	pop    ebx
  405534:	mov    al,ds:0x1aa92e33
  405539:	cld    
  40553a:	cs mov ecx,0xdcd6008c
  405540:	add    BYTE PTR [eax],al
  405542:	iret   
  405543:	shr    DWORD PTR [edi],cl
  405545:	inc    ecx
  405546:	aam    0xba
  405548:	pusha  
  405549:	sub    BYTE PTR ds:0xc353a7,0x0
  405550:	xor    ah,dh
  405552:	ret    
  405553:	add    al,0x1b
  405555:	stc    
  405556:	hlt    
  405557:	inc    ebp
  405558:	lock adc esp,DWORD PTR [esi-0x68dcb67a]
  40555f:	(bad)  
  405560:	ficomp WORD PTR [ecx-0x6148f775]
  405566:	mov    edx,0xe9701c49
  40556b:	mov    dh,BYTE PTR [ebp-0x65342788]
  405571:	dec    ebp
  405572:	dec    esi
  405573:	or     al,0xa3
  405575:	xor    bh,BYTE PTR [edi+0x4d]
  405578:	clc    
  405579:	pop    ebx
  40557a:	sub    al,0x8e
  40557c:	rcl    DWORD PTR [ebp+ebx*1-0x31],1
  405580:	pushf  
  405581:	sahf   
  405582:	adc    edx,DWORD PTR [ecx-0x4b]
  405585:	cdq    
  405586:	and    dl,BYTE PTR [eax]
  405588:	sahf   
  405589:	js     0x4055fc
  40558b:	shl    DWORD PTR [edi+0x6f],cl
  40558e:	inc    eax
  40558f:	xchg   edx,eax
  405590:	pop    eax
  405591:	xor    dl,dh
  405593:	push   ebp
  405594:	popa   
  405595:	dec    ebp
  405596:	out    0x14,eax
  405598:	cmp    dl,BYTE PTR [esp+esi*4-0x29]
  40559c:	adc    ebx,DWORD PTR [ebp-0x7b]
  40559f:	xchg   esi,eax
  4055a0:	xchg   esp,eax
  4055a1:	aam    0x98
  4055a3:	pop    ecx
  4055a4:	(bad)  
  4055a5:	(bad)  [edi-0x759a9e8]
  4055ab:	fld    TBYTE PTR [edi-0x47]
  4055ae:	retf   
  4055af:	call   0x0:0x5d5bf9f0
  4055b6:	(bad)  
  4055b8:	ins    BYTE PTR es:[edi],dx
  4055b9:	sbb    al,0x2f
  4055bb:	mov    DWORD PTR [edx+0x3f],eax
  4055be:	or     BYTE PTR [ebx+0x4b],ch
  4055c1:	push   cs
  4055c2:	shr    DWORD PTR [edx],0x81
  4055c5:	and    al,0x8d
  4055c7:	cmp    DWORD PTR [ebp+edx*1+0x467358cc],eax
  4055ce:	getsec 
  4055d0:	pop    edx
  4055d1:	ja     0x405621
  4055d3:	popfw  
  4055d5:	loope  0x405568
  4055d7:	ins    DWORD PTR es:[edi],dx
  4055d8:	mov    al,0xd0
  4055da:	enter  0xc774,0x83
  4055de:	push   ebx
  4055df:	mov    edi,DWORD PTR [esi+0x46020ab2]
  4055e5:	scas   al,BYTE PTR es:[edi]
  4055e6:	lds    eax,FWORD PTR [ecx]
  4055e8:	aas    
  4055e9:	lahf   
  4055ea:	test   al,ah
  4055ec:	pop    ss
  4055ed:	int3   
  4055ee:	push   edi
  4055ef:	iret   
  4055f0:	xor    bh,ch
  4055f2:	push   ss
  4055f3:	(bad)  
  4055f4:	icebp  
  4055f5:	push   0xffffffc9
  4055f7:	aad    0xda
  4055f9:	pop    ecx
  4055fa:	cmp    BYTE PTR [ebp+edi*8+0x6c31b08],0x38
  405602:	sar    bh,cl
  405604:	ds ss pop esp
  405607:	inc    DWORD PTR [ebp+0x7]
  40560a:	popf   
  40560b:	and    dh,BYTE PTR ds:0x1810be54
  405611:	gs (bad) 
  405613:	cmp    ebx,ebx
  405615:	repnz inc eax
  405617:	adc    esi,edx
  405619:	rol    DWORD PTR [eax],0x0
  40561c:	jns    0x40565c
  40561e:	or     DWORD PTR [ecx-0x6003ba5e],edx
  405624:	pop    ebx
  405625:	test   al,0x85
  405627:	mov    esp,0x8d7eb714
  40562c:	aad    0x99
  40562e:	pop    ebx
  40562f:	fiadd  WORD PTR [esi+0x47ef7079]
  405635:	ficomp WORD PTR [edx-0x4f]
  405638:	jbe    0x405601
  40563a:	push   edx
  40563b:	pushf  
  40563c:	mov    BYTE PTR [bx+di],ch
  40563f:	mov    edi,0xc6304944
  405644:	adc    eax,0x682ab80a
  405649:	loope  0x40561b
  40564b:	and    DWORD PTR [ecx+0x22],edx
  40564e:	stos   BYTE PTR es:[edi],al
  40564f:	xor    al,0x1a
  405651:	pop    edi
  405652:	xchg   ebx,eax
  405653:	dec    edi
  405654:	and    esp,DWORD PTR [eax-0x235af184]
  40565a:	ins    BYTE PTR es:[edi],dx
  40565b:	cmc    
  40565c:	jne    0x40567b
  40565e:	dec    esi
  40565f:	loopne 0x4055f1
  405661:	pop    edx
  405662:	dec    edi
  405663:	jmp    0x4055ec
  405665:	fwait
  405666:	shl    BYTE PTR [ebx+0x72],0xd8
  40566a:	enter  0x9b68,0x19
  40566e:	loop   0x4055fd
  405670:	rcl    BYTE PTR [esi-0x25],1
  405673:	jbe    0x40560e
  405675:	xchg   edi,eax
  405676:	les    esi,FWORD PTR [edi-0x335b2ad1]
  40567c:	ds push ss
  40567e:	(bad)  
  40567f:	test   eax,0x52cd0000
  405684:	xlat   BYTE PTR ds:[ebx]
  405685:	mov    ds:0x688293fc,al
  40568a:	cli    
  40568b:	xor    DWORD PTR [ebx+0x5ff0c363],ecx
  405691:	jbe    0x40569b
  405693:	mov    al,0x59
  405695:	lea    esi,[ecx]
  405697:	outs   dx,DWORD PTR ds:[esi]
  405698:	inc    esi
  405699:	int3   
  40569a:	xchg   edi,eax
  40569b:	sub    eax,0xec86b727
  4056a0:	add    esp,DWORD PTR [edx-0x56ea4edb]
  4056a6:	hlt    
  4056a7:	jno    0x405723
  4056a9:	and    DWORD PTR [eax],eax
  4056ab:	and    edx,DWORD PTR [ebx+0xe4092a]
  4056b1:	test   eax,0x90df8b78
  4056b6:	cmp    ebx,DWORD PTR [edx-0x62]
  4056b9:	call   FWORD PTR [esi]
  4056bb:	lock pop eax
  4056bd:	out    dx,al
  4056be:	test   DWORD PTR [eax],0x360b0d18
  4056c4:	fisttp DWORD PTR [eax+ecx*8]
  4056c7:	push   ds
  4056c8:	call   0x853d:0xa6398e4c
  4056cf:	sub    bh,ah
  4056d1:	push   ds
  4056d2:	clc    
  4056d3:	xlat   BYTE PTR ds:[ebx]
  4056d4:	and    ebx,DWORD PTR [edi]
  4056d6:	jnp    0x4056de
  4056d8:	gs call 0x1e2cb21
  4056de:	mov    eax,ds:0x15dae365
  4056e3:	xchg   edx,eax
  4056e4:	and    bl,al
  4056e6:	add    BYTE PTR [eax],al
  4056e8:	add    bl,al
  4056ea:	popa   
  4056eb:	push   esp
  4056ec:	xchg   DWORD PTR [esi-0x6a73ca52],edi
  4056f2:	out    dx,eax
  4056f3:	push   esi
  4056f4:	and    DWORD PTR [eax+0x2c],0x6d903267
  4056fb:	xor    bl,ch
  4056fd:	stc    
  4056fe:	test   eax,0xeaeb3839
  405703:	push   edx
  405704:	or     eax,0x164b281c
  405709:	dec    ebp
  40570a:	imul   edx,DWORD PTR [esi],0xf7f7464c
  405710:	dec    eax
  405711:	sbb    eax,0xe93bd4b6
  405716:	je     0x4056fd
  405718:	cmp    dh,bh
  40571a:	xor    esi,DWORD PTR [edx-0x440c7dff]
  405720:	in     al,0x52
  405722:	mov    dl,0x90
  405724:	push   edi
  405725:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405726:	jno    0x4056b1
  405728:	dec    esi
  405729:	mov    ch,0x30
  40572b:	add    BYTE PTR [ecx],ch
  40572d:	js     0x405721
  40572f:	(bad)  
  405730:	adc    BYTE PTR [esi-0x3d],bh
  405733:	mov    edi,0x7c908a2b
  405738:	and    dl,BYTE PTR [ebp+0x53853da1]
  40573e:	aaa    
  40573f:	cli    
  405740:	lods   al,BYTE PTR ds:[esi]
  405741:	dec    ecx
  405742:	push   es
  405743:	mov    ebx,0x785524c7
  405748:	scas   al,BYTE PTR es:[edi]
  405749:	aaa    
  40574a:	cmp    DWORD PTR fs:[eax],eax
  40574d:	add    BYTE PTR ds:0x244b995d,ch
  405753:	inc    edx
  405754:	test   al,0xa
  405756:	iret   
  405757:	and    eax,0x4ee6c9fb
  40575c:	retf   0x7188
  40575f:	xchg   ecx,eax
  405760:	pop    esp
  405761:	dec    edi
  405762:	or     BYTE PTR [esi+0x6d],ah
  405765:	push   cs
  405766:	xor    eax,DWORD PTR [ebx-0x63c532c2]
  40576c:	jl     0x43535a87
  405772:	mov    esp,0xd7022219
  405777:	hlt    
  405778:	jo     0x40573b
  40577a:	sahf   
  40577b:	out    0x3f,eax
  40577d:	cmp    cl,0xa6
  405780:	xlat   BYTE PTR ds:[ebx]
  405781:	inc    edi
  405782:	add    dh,cl
  405784:	in     al,0x6
  405786:	mov    ebx,0xb2c5b3e0
  40578b:	ret    
  40578c:	add    BYTE PTR [edi+edx*4+0x7e1a8b19],0x2
  405794:	mov    edx,0xe8e7955b
  405799:	cwde   
  40579a:	pushf  
  40579b:	hlt    
  40579c:	xlat   BYTE PTR ds:[ebx]
  40579d:	fnstcw WORD PTR [ebx]
  40579f:	int    0x4f
  4057a1:	push   ds
  4057a2:	inc    edx
  4057a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057a4:	jl     0x405805
  4057a6:	das    
  4057a7:	xchg   esp,eax
  4057a8:	jmp    FWORD PTR [ebx+eax*8]
  4057ab:	xchg   ebx,eax
  4057ac:	add    bl,BYTE PTR [edx+edi*8]
  4057af:	push   ds
  4057b0:	jp     0x4057b2
  4057b2:	add    BYTE PTR [eax],al
  4057b4:	cmp    eax,0x5c318715
  4057b9:	inc    eax
  4057ba:	jo     0x40581e
  4057bc:	lahf   
  4057bd:	daa    
  4057be:	pop    ecx
  4057bf:	push   ebx
  4057c0:	ficomp WORD PTR [edx+0x7919c599]
  4057c6:	mov    al,0xf4
  4057c8:	sbb    BYTE PTR [edi+eax*8-0x45544459],0x96
  4057d0:	add    ch,BYTE PTR [eax+ecx*1-0x44]
  4057d4:	(bad)  
  4057d5:	dec    esp
  4057d6:	add    DWORD PTR [ebp-0x222dd669],ecx
  4057dc:	push   esp
  4057dd:	cmp    ch,bh
  4057df:	out    dx,al
  4057e0:	add    eax,0xc2792c8f
  4057e5:	mov    BYTE PTR ds:0x3e6ddb48,dl
  4057eb:	sbb    edx,DWORD PTR [eax]
  4057ed:	push   esi
  4057ee:	dec    ebx
  4057ef:	sub    cl,BYTE PTR [ecx-0x2d]
  4057f2:	ret    0x8e36
  4057f5:	(bad)  
  4057f6:	mov    DWORD PTR [edi],0x54ace1cf
  4057fc:	or     al,0xe2
  4057fe:	xchg   ebx,eax
  4057ff:	gs dec ebp
  405801:	mov    bh,0x54
  405803:	repz mov ah,al
  405806:	imul   eax,edx,0x9188e593
  40580c:	enter  0x7fdd,0xa0
  405810:	adc    DWORD PTR [ecx],edx
  405812:	(bad)  
  405813:	scas   al,BYTE PTR es:[edi]
  405814:	xchg   edi,eax
  405815:	add    al,bl
  405817:	lahf   
  405818:	add    BYTE PTR [eax],al
  40581a:	inc    esi
  40581b:	jecxz  0x4057b0
  40581d:	int3   
  40581e:	add    eax,0xb4fdace4
  405823:	frstor [edi+0x6b]
  405826:	les    eax,FWORD PTR [ecx-0x3e7aa97f]
  40582c:	pop    edx
  40582d:	xor    DWORD PTR [esi],0x57884304
  405833:	inc    ebx
  405834:	aam    0xff
  405836:	dec    esp
  405837:	mov    ?,WORD PTR [ebp-0x2932ddf8]
  40583d:	in     eax,dx
  40583e:	push   0x10
  405840:	out    0xd2,eax
  405842:	or     DWORD PTR [edi+0x30],0x398a0e14
  405849:	sub    eax,0x4a52c8ff
  40584e:	lods   al,BYTE PTR ds:[esi]
  40584f:	or     ecx,DWORD PTR [ebx+0x3f]
  405852:	popf   
  405853:	dec    edx
  405854:	mov    bl,0x9d
  405856:	clc    
  405857:	adc    ebx,DWORD PTR [edx-0x4f2d2e5e]
  40585d:	iret   
  40585e:	jp     0x4057f1
  405860:	enter  0xb3b8,0x50
  405864:	push   edi
  405865:	jns    0x405884
  405867:	sbb    BYTE PTR [esi-0x72],dl
  40586a:	dec    esp
  40586b:	xlat   BYTE PTR ds:[ebx]
  40586c:	je     0x4058d1
  40586e:	pop    ds
  40586f:	xchg   esi,eax
  405870:	fs pop esp
  405872:	out    dx,al
  405873:	push   esp
  405874:	jmp    0x40585a
  405876:	repz sbb esp,edx
  405879:	fist   DWORD PTR [ebx+ebx*8]
  40587c:	mov    eax,0x410000f6
  405881:	call   0x50cf:0x592911c0
  405888:	xchg   edi,eax
  405889:	pop    ds
  40588a:	fidiv  WORD PTR [edi]
  40588c:	xchg   esi,eax
  40588d:	fidivr WORD PTR [edx+ebx*1+0x259c9d65]
  405894:	fs pop esp
  405896:	imul   ebx,ebx,0xe45fe26b
  40589c:	cmp    al,0x23
  40589e:	add    DWORD PTR [edx+0x1e],edi
  4058a1:	jnp    0x40583f
  4058a3:	add    DWORD PTR [ecx+0x68],0xffffffdd
  4058a7:	or     al,0xf8
  4058a9:	fstp   QWORD PTR [ecx]
  4058ab:	sbb    eax,0x3e5b0f7f
  4058b0:	dec    edx
  4058b1:	cmp    al,0x98
  4058b3:	pop    ds
  4058b4:	xor    eax,0xcdb0d92d
  4058b9:	adc    DWORD PTR [esi],edx
  4058bb:	cdq    
  4058bc:	stos   BYTE PTR es:[edi],al
  4058bd:	inc    eax
  4058be:	push   edi
  4058bf:	jb     0x405888
  4058c1:	repz xchg ebx,eax
  4058c3:	mov    ebp,eax
  4058c5:	loop   0x40589b
  4058c7:	adc    al,0x9e
  4058c9:	push   esp
  4058ca:	adc    dl,BYTE PTR ds:0xf6538561
  4058d0:	test   DWORD PTR [esi-0x58b31870],esi
  4058d6:	shl    DWORD PTR [edi],1
  4058d8:	xor    ebp,ecx
  4058da:	in     eax,dx
  4058db:	es push ss
  4058dd:	pushf  
  4058de:	lods   al,BYTE PTR ds:[esi]
  4058df:	inc    ebp
  4058e0:	jae    0x405951
  4058e2:	outs   dx,DWORD PTR ds:[esi]
  4058e3:	xor    al,0x0
  4058e5:	add    ah,bh
  4058e7:	jge    0x405917
  4058e9:	jecxz  0x4058a9
  4058eb:	or     ebp,ecx
  4058ed:	retf   0xd93b
  4058f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058f1:	loope  0x40587b
  4058f3:	sub    eax,0x3a79f86b
  4058f8:	sub    bl,BYTE PTR [edi+0x8]
  4058fb:	inc    edi
  4058fc:	in     eax,0x6e
  4058fe:	movhps xmm4,QWORD PTR [ebp+ecx*2+0x2c66e4fa]
  405906:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405907:	hlt    
  405908:	and    eax,0xe182645b
  40590d:	push   edx
  40590e:	mov    ds:0x8e29a053,eax
  405913:	mov    al,ds:0xb1913063
  405918:	and    al,BYTE PTR [eax]
  40591a:	jb     0x40593d
  40591c:	loopne 0x4058db
  40591e:	pop    ebx
  40591f:	cmp    cl,dl
  405921:	cld    
  405922:	xor    BYTE PTR [edx+eax*4+0x3f],dl
  405926:	dec    ecx
  405927:	dec    edx
  405928:	mov    bl,0x7e
  40592a:	xchg   esi,eax
  40592b:	lea    esp,ds:0x1493bfb9
  405931:	clc    
  405932:	aam    0x7a
  405934:	inc    edi
  405935:	cmp    ebx,ebp
  405937:	jge    0x4059af
  405939:	jp     0x405985
  40593b:	imul   DWORD PTR [ecx-0x4b]
  40593e:	push   ebx
  40593f:	loopne 0x40599b
  405941:	hlt    
  405942:	sub    BYTE PTR ds:0x15013708,cl
  405948:	cmp    DWORD PTR [esi+0x0],esi
  40594b:	add    dh,cl
  40594d:	shr    DWORD PTR [esi-0x6031484f],1
  405953:	lock dec esp
  405955:	mov    al,ds:0xb95533ca
  40595a:	std    
  40595b:	jb     0x405923
  40595d:	fadd   QWORD PTR [eax]
  40595f:	add    bh,dl
  405961:	sahf   
  405962:	imul   esi,DWORD PTR [edi],0xffffffd5
  405965:	pop    eax
  405966:	aad    0x6e
  405968:	les    ebx,FWORD PTR [edx]
  40596a:	mov    edi,0xa8d1c159
  40596f:	fcom   QWORD PTR [eax-0x6d143c6d]
  405975:	ins    DWORD PTR es:[edi],dx
  405976:	jge    0x40592a
  405978:	xchg   ebx,eax
  405979:	movhps QWORD PTR [ebp-0x47ae3468],xmm0
  405980:	cdq    
  405981:	mov    DWORD PTR [edx],edi
  405983:	(bad)  
  405984:	mov    eax,DWORD PTR [edi-0x7c]
  405987:	(bad)  
  405988:	pop    edx
  405989:	add    eax,0xc67fe1ee
  40598e:	stc    
  40598f:	fs pop esi
  405991:	test   BYTE PTR [edx+0x7cbd2f53],dl
  405997:	sub    eax,0x473ebc25
  40599c:	adc    bh,BYTE PTR [ebx-0x5e405d1c]
  4059a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059a3:	leave  
  4059a4:	call   0x19b7ba50
  4059a9:	xchg   ecx,eax
  4059aa:	and    bl,BYTE PTR ds:0xaeddc06
  4059b0:	add    BYTE PTR [eax],al
  4059b2:	fcmovnu st,st(3)
  4059b4:	scas   eax,DWORD PTR es:[edi]
  4059b5:	popa   
  4059b6:	(bad)  
  4059b7:	int    0x6b
  4059b9:	fucomip st,st(5)
  4059bb:	into   
  4059bc:	sub    eax,0xd9a41ab5
  4059c1:	icebp  
  4059c2:	mul    DWORD PTR [edi+edx*4+0x55a70098]
  4059c9:	shl    DWORD PTR es:[ebp-0x3d61b3ed],1
  4059d0:	ficomp WORD PTR [ecx+0x43]
  4059d3:	leave  
  4059d4:	pushf  
  4059d5:	xor    BYTE PTR [edi+edi*4],cl
  4059d8:	pop    edx
  4059d9:	mov    ss,WORD PTR [ebp-0x38]
  4059dc:	sbb    ah,ah
  4059de:	(bad)  
  4059df:	fisttp QWORD PTR [ebp+0x46]
  4059e2:	iret   
  4059e3:	fimul  WORD PTR [ebx-0x343327d4]
  4059e9:	xchg   edx,eax
  4059ea:	test   eax,0x76f809cb
  4059ef:	mov    eax,0x9f6bee46
  4059f4:	test   BYTE PTR [esp+esi*1-0x2c53d57],al
  4059fb:	xchg   ecx,eax
  4059fc:	add    BYTE PTR [eax+0xa],dl
  4059ff:	jg     0x405a3d
  405a01:	pop    ss
  405a02:	out    0x87,eax
  405a04:	jle    0x405a83
  405a06:	adc    BYTE PTR [edx-0x76be3c48],al
  405a0c:	cli    
  405a0d:	test   al,0x2e
  405a0f:	ficomp WORD PTR [eax]
  405a11:	xor    eax,0x77185aa8
  405a16:	add    BYTE PTR [eax],al
  405a18:	jp     0x4059a5
  405a1a:	sbb    dh,BYTE PTR [ecx-0xce44c3c]
  405a20:	das    
  405a21:	mov    eax,ds:0x6e52290c
  405a26:	add    eax,0xf77b06b
  405a2b:	lods   eax,DWORD PTR ds:[esi]
  405a2c:	(bad)  
  405a2d:	mov    edi,0x94d5ef06
  405a32:	retf   
  405a33:	and    DWORD PTR [edx+0x12],edi
  405a36:	retf   0x4863
  405a39:	inc    ebx
  405a3a:	enter  0xb6a5,0xfb
  405a3e:	enter  0x1de7,0xe9
  405a42:	rcr    DWORD PTR [ebx],1
  405a44:	ret    
  405a45:	cmc    
  405a46:	rcr    BYTE PTR [ecx-0x1f],cl
  405a49:	faddp  st(0),st
  405a4b:	lahf   
  405a4c:	(bad)  
  405a4d:	sbb    al,al
  405a4f:	frstor [esi]
  405a51:	dec    ebp
  405a52:	adc    eax,0xcca4b13
  405a57:	push   ecx
  405a58:	pop    ecx
  405a59:	fwait
  405a5a:	push   es
  405a5b:	xchg   edi,eax
  405a5c:	out    0x63,eax
  405a5e:	call   esp
  405a60:	mov    ?,WORD PTR [eax+0x38]
  405a63:	jp     0x405a1f
  405a65:	popf   
  405a66:	cmp    DWORD PTR [eax+ecx*8],edi
  405a69:	(bad)  
  405a6a:	cmp    edi,esi
  405a6c:	push   edi
  405a6d:	jo     0x405aa9
  405a6f:	sar    ah,0x64
  405a72:	pop    ds
  405a73:	jno    0x405ac7
  405a75:	loop   0x405a8c
  405a77:	xor    esi,eax
  405a79:	repnz sbb esi,ebp
  405a7c:	add    BYTE PTR [eax],al
  405a7e:	lahf   
  405a7f:	dec    ebx
  405a80:	adc    eax,0x618b4b7
  405a85:	mov    ebp,DWORD PTR [ebx+0x45]
  405a88:	dec    DWORD PTR [eax-0x47]
  405a8b:	push   cs
  405a8c:	add    esp,esi
  405a8e:	sub    esi,edx
  405a90:	push   ss
  405a91:	in     eax,dx
  405a92:	arpl   WORD PTR [ebx],di
  405a94:	and    al,ah
  405a96:	lods   al,BYTE PTR ds:[esi]
  405a97:	dec    ecx
  405a98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a99:	loope  0x405a89
  405a9b:	fist   WORD PTR [ecx-0x3481cf2d]
  405aa1:	shr    BYTE PTR [edx-0x6d],cl
  405aa4:	cld    
  405aa5:	aad    0xe8
  405aa7:	out    dx,eax
  405aa8:	mov    al,0xcc
  405aaa:	and    bl,BYTE PTR [edx]
  405aac:	xchg   dh,al
  405aae:	push   esp
  405aaf:	(bad)  
  405ab0:	fistp  QWORD PTR [edi-0x6d17926a]
  405ab6:	and    DWORD PTR [ebp+ebp*2-0x6d],0x815aca3b
  405abe:	std    
  405abf:	lsl    eax,WORD PTR [eax-0x74cc0941]
  405ac6:	fwait
  405ac7:	cmp    eax,0xd3518a09
  405acc:	cmp    eax,0x67890788
  405ad1:	mov    ebp,eax
  405ad3:	lahf   
  405ad4:	push   eax
  405ad5:	dec    esp
  405ad6:	dec    ebp
  405ad7:	xchg   ebp,eax
  405ad8:	aad    0x45
  405ada:	(bad)  
  405adc:	loop   0x405b2d
  405ade:	shl    eax,1
  405ae0:	mov    edx,0x8b000046
  405ae5:	inc    edi
  405ae6:	mov    WORD PTR [ecx],?
  405ae8:	jl     0x405a93
  405aea:	and    DWORD PTR [eax],esi
  405aec:	mov    esi,0x22167e
  405af1:	fisttp QWORD PTR [esi+0x23]
  405af4:	cmp    dh,BYTE PTR [ebx]
  405af6:	js     0x405b2e
  405af8:	in     eax,0x41
  405afa:	std    
  405afb:	das    
  405afc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405afd:	out    0xc9,al
  405aff:	and    eax,0x1c937559
  405b04:	adc    ebx,DWORD PTR [ebx-0x61a7ff5c]
  405b0a:	fwait
  405b0b:	cwde   
  405b0c:	dec    ecx
  405b0d:	loopne 0x405aff
  405b0f:	scas   eax,DWORD PTR es:[edi]
  405b10:	dec    ebx
  405b11:	and    cl,BYTE PTR [edi-0xa]
  405b14:	dec    edx
  405b15:	fs and eax,0x33a697c1
  405b1b:	inc    esp
  405b1c:	xchg   esi,eax
  405b1d:	call   0x2ac4ce7a
  405b22:	out    0x2a,eax
  405b24:	test   DWORD PTR [ebp+ecx*4+0x1d],ebp
  405b28:	stos   BYTE PTR es:[edi],al
  405b29:	push   edx
  405b2a:	imul   edx,DWORD PTR [eax-0x65],0x99670094
  405b31:	into   
  405b32:	mov    esp,0xd710983e
  405b37:	or     ebp,esp
  405b39:	pop    eax
  405b3a:	ror    DWORD PTR [esp+eiz*8-0x29445766],0xd4
  405b42:	adc    al,0xe2
  405b44:	xlat   BYTE PTR ds:[ebx]
  405b45:	push   ss
  405b46:	jg     0x405b1d
  405b48:	add    BYTE PTR [eax],al
  405b4a:	int3   
  405b4b:	cmp    BYTE PTR [eax],0xe8
  405b4e:	int    0xc0
  405b50:	push   ebx
  405b51:	fistp  WORD PTR [edi-0x61791402]
  405b57:	sbb    al,0x86
  405b59:	mov    cl,0x73
  405b5b:	lea    edx,[eax-0x434ddcc]
  405b61:	add    esp,DWORD PTR [eax]
  405b63:	or     DWORD PTR [edx+ebx*2+0x1],eax
  405b67:	inc    edi
  405b68:	cs ins DWORD PTR es:[edi],dx
  405b6a:	test   DWORD PTR [ebp+0x4ff6801b],0x11e4b770
  405b74:	into   
  405b75:	out    dx,al
  405b76:	in     eax,0xd3
  405b78:	mov    ds:0xb394b8d9,eax
  405b7d:	pop    esp
  405b7e:	test   eax,0x2f6bd856
  405b83:	push   0x5a
  405b85:	addr16 pop ebp
  405b87:	arpl   WORD PTR [ecx*1+0x49e05432],bx
  405b8e:	inc    edi
  405b8f:	ins    DWORD PTR es:[edi],dx
  405b90:	sahf   
  405b91:	and    BYTE PTR [eax],ch
  405b93:	arpl   WORD PTR [esi+ebx*4-0x27],sp
  405b97:	cmp    DWORD PTR [edx],esp
  405b99:	hlt    
  405b9a:	into   
  405b9b:	push   cs
  405b9c:	jmp    0x405b7f
  405b9e:	dec    ebx
  405b9f:	or     eax,0x1f7c88a9
  405ba4:	outs   dx,DWORD PTR ds:[esi]
  405ba5:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  405ba7:	and    BYTE PTR ds:0xf7218a5c,ch
  405bad:	mov    bh,0x0
  405baf:	add    BYTE PTR [edi],bh
  405bb1:	cli    
  405bb2:	mov    ah,0xd2
  405bb4:	jo     0x405baa
  405bb6:	jb     0x405c24
  405bb8:	xchg   ecx,eax
  405bb9:	or     esi,DWORD PTR [ecx]
  405bbb:	push   es
  405bbc:	(bad)  
  405bbd:	(bad)  
  405bbe:	sti    
  405bbf:	rcpps  xmm0,XMMWORD PTR [eax]
  405bc2:	mov    edx,0x77ce347a
  405bc7:	les    ebp,FWORD PTR [ebp-0x33]
  405bca:	xor    eax,0x3b882ae
  405bcf:	jmp    0x8406134b
  405bd4:	js     0x405b8b
  405bd6:	jg     0x405c15
  405bd8:	dec    ecx
  405bd9:	mov    dh,0x41
  405bdb:	push   edi
  405bdc:	ds cdq 
  405bde:	or     al,BYTE PTR [ecx-0x45]
  405be1:	xchg   edx,eax
  405be2:	int3   
  405be3:	sub    ecx,DWORD PTR [esp+ebx*4-0x6c2a6a7a]
  405bea:	dec    eax
  405beb:	(bad)  
  405bec:	cli    
  405bed:	jle    0x405c0c
  405bef:	pop    ebp
  405bf0:	dec    edi
  405bf1:	jge    0x405c52
  405bf3:	aaa    
  405bf4:	pusha  
  405bf5:	dec    edi
  405bf6:	cdq    
  405bf7:	mov    DWORD PTR [ecx],esp
  405bf9:	push   eax
  405bfa:	fnclex 
  405bfc:	data16 faddp st(5),st
  405bff:	adc    ebx,DWORD PTR [edx-0x47aa4086]
  405c05:	addr16 mov ch,0x8f
  405c08:	dec    esi
  405c09:	nop
  405c0a:	lods   al,BYTE PTR ds:[esi]
  405c0b:	shl    ebp,1
  405c0d:	rcr    BYTE PTR [edi-0x6969ccd3],0x6b
  405c14:	add    BYTE PTR [eax],al
  405c16:	adc    ebx,ecx
  405c18:	pushf  
  405c19:	test   eax,0xe7957457
  405c1e:	sahf   
  405c1f:	pop    ebp
  405c20:	cmp    BYTE PTR [esi],ah
  405c22:	mov    esp,edx
  405c24:	cmp    BYTE PTR [ecx+ebp*2-0x11],ah
  405c28:	cmp    ah,BYTE PTR [edx-0x1fc5b821]
  405c2e:	sbb    DWORD PTR es:0x23ce413a,ebp
  405c35:	js     0x405bda
  405c37:	add    ebp,DWORD PTR [esi]
  405c39:	mov    esi,0xfc273c05
  405c3e:	push   0x79312a25
  405c43:	stos   BYTE PTR es:[edi],al
  405c44:	sub    ebp,DWORD PTR [edi+0x5b]
  405c47:	mov    bh,0x29
  405c49:	mov    ch,0xad
  405c4b:	jg     0x405c75
  405c4d:	repz adc BYTE PTR [ecx+0x33],dl
  405c51:	inc    edi
  405c52:	rol    BYTE PTR [ebp+0x5af28932],1
  405c58:	and    bl,cl
  405c5a:	je     0x405c00
  405c5c:	and    DWORD PTR ds:0x3fb4ad3e,ecx
  405c62:	sub    BYTE PTR [edx],dh
  405c64:	lods   eax,DWORD PTR ds:[esi]
  405c65:	or     DWORD PTR [edx+0x1f],0xd7fcc3a7
  405c6c:	popf   
  405c6d:	add    eax,0x68590886
  405c72:	cdq    
  405c73:	sbb    eax,0x32bb2658
  405c78:	add    DWORD PTR [ebx+0x0],ebx
  405c7b:	add    bl,al
  405c7d:	sbb    al,0x2f
  405c7f:	pop    edx
  405c80:	aad    0x5
  405c82:	sbb    BYTE PTR [edi+0xe],bh
  405c85:	cld    
  405c86:	pushf  
  405c87:	jbe    0x405cc1
  405c89:	adc    ch,BYTE PTR [edx-0xc3b7584]
  405c8f:	jne    0x405c5d
  405c91:	pop    ebp
  405c92:	les    esp,FWORD PTR [esi-0x28]
  405c95:	mov    ds:0x89165ff9,al
  405c9a:	into   
  405c9b:	push   ebp
  405c9c:	push   esp
  405c9d:	iret   
  405c9e:	xchg   esi,eax
  405c9f:	dec    esp
  405ca0:	retf   0xa034
  405ca3:	xor    ecx,0x3f80254a
  405ca9:	loope  0x405cbc
  405cab:	jb     0x405d2a
  405cad:	ja     0x405cfa
  405caf:	jae    0x405c54
  405cb1:	mov    WORD PTR [esp+esi*2-0x4b],?
  405cb5:	lock xor BYTE PTR [ebp-0x15],ch
  405cb9:	sbb    al,BYTE PTR [esi]
  405cbb:	sub    DWORD PTR [di+0x5e5f],edi
  405cc0:	mul    DWORD PTR [ebp+0x68]
  405cc3:	jae    0x405c71
  405cc5:	pop    ebx
  405cc6:	in     eax,dx
  405cc7:	jb     0x405d3b
  405cc9:	mov    cl,0xda
  405ccb:	pusha  
  405ccc:	adc    BYTE PTR [edi],ah
  405cce:	and    DWORD PTR [ecx-0x12],0xfffffffd
  405cd2:	mov    bl,0x6a
  405cd4:	add    BYTE PTR [edx-0x77],0x6b
  405cd8:	xor    al,0xe8
  405cda:	mov    ebp,0xe789f669
  405cdf:	push   0x94a00000
  405ce4:	shr    BYTE PTR [ebp+0x5c],1
  405ce7:	stos   BYTE PTR es:[edi],al
  405ce8:	push   ebp
  405ce9:	and    al,BYTE PTR fs:[eax-0x2e3f919e]
  405cf0:	cmp    ah,BYTE PTR [edi+0x7e]
  405cf3:	sub    al,0xc
  405cf5:	add    BYTE PTR [edi-0x615f2e84],bl
  405cfb:	ret    0x97b8
  405cfe:	lods   al,BYTE PTR ds:[esi]
  405cff:	fadd   DWORD PTR [esi+ecx*8]
  405d02:	lods   eax,DWORD PTR ds:[esi]
  405d03:	outs   dx,DWORD PTR ds:[esi]
  405d05:	stc    
  405d06:	clc    
  405d07:	test   BYTE PTR [ecx+0x7c],bh
  405d0a:	jmp    0xeb8b6dd9
  405d0f:	add    BYTE PTR [ebp-0x38b8b5ee],ch
  405d15:	and    eax,0x188052f1
  405d1a:	lock mov ebx,gs
  405d1d:	das    
  405d1e:	loop   0x405cee
  405d20:	push   ebx
  405d21:	jbe    0x405d16
  405d23:	sub    BYTE PTR [esi],bh
  405d25:	inc    ecx
  405d26:	mov    dh,0x5a
  405d28:	sub    ah,al
  405d2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d2b:	xchg   esp,eax
  405d2c:	inc    ebx
  405d2d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d2f:	(bad)  
  405d30:	sti    
  405d31:	stos   BYTE PTR es:[edi],al
  405d32:	mov    ah,0x10
  405d34:	xchg   esi,eax
  405d35:	popf   
  405d36:	ret    
  405d37:	popf   
  405d38:	jb     0x405d0a
  405d3a:	ret    0x19b7
  405d3d:	out    0xb0,eax
  405d3f:	and    DWORD PTR [esi-0x33a35e42],esp
  405d45:	mov    DWORD PTR [eax],eax
  405d47:	add    BYTE PTR [edi+eiz*4-0x1e8af326],al
  405d4e:	scas   eax,DWORD PTR es:[edi]
  405d4f:	cmp    esi,DWORD PTR [edi+0x2b]
  405d52:	push   cs
  405d53:	bound  esp,QWORD PTR [esi+0x65]
  405d56:	fs push ebp
  405d58:	ins    DWORD PTR es:[edi],dx
  405d59:	mov    DWORD PTR [ebx],esp
  405d5b:	push   0x5f46af6c
  405d60:	ds in  eax,dx
  405d62:	test   BYTE PTR [esi],0x1f
  405d65:	xor    ebx,DWORD PTR [ebp-0x748d75cf]
  405d6b:	mov    ah,0xbb
  405d6d:	mov    al,0xde
  405d6f:	sub    DWORD PTR [edi],0x50
  405d72:	cmp    BYTE PTR [esi-0x1b],bl
  405d75:	push   0xc6d2347a
  405d7a:	add    al,BYTE PTR [eax]
  405d7c:	das    
  405d7d:	pop    edi
  405d7e:	push   esi
  405d7f:	addr16 dec edx
  405d81:	pop    ebp
  405d82:	or     eax,0x5194b4c8
  405d87:	scas   eax,DWORD PTR es:[edi]
  405d88:	xchg   ecx,eax
  405d89:	das    
  405d8a:	and    BYTE PTR [edi-0xf4b7000],dl
  405d90:	pop    ebp
  405d91:	stos   BYTE PTR es:[edi],al
  405d92:	sub    ebx,DWORD PTR [edi+0x6b]
  405d95:	dec    ecx
  405d96:	scas   eax,DWORD PTR es:[edi]
  405d97:	cmp    dh,al
  405d99:	mov    DWORD PTR [esi+0x28],ecx
  405d9c:	mov    BYTE PTR [ecx-0x205ab0f6],bh
  405da2:	push   edi
  405da3:	loopne 0x405d78
  405da5:	dec    edi
  405da6:	add    eax,0xac6d2e87
  405dab:	mov    edi,0x14970000
  405db0:	sub    al,bl
  405db2:	jb     0x405dda
  405db4:	mov    bh,0x77
  405db6:	cld    
  405db7:	outs   dx,BYTE PTR ds:[esi]
  405db8:	and    edx,DWORD PTR [eax]
  405dba:	fst    DWORD PTR [esi-0x3]
  405dbd:	push   esi
  405dbe:	cwde   
  405dbf:	push   cs
  405dc0:	popa   
  405dc1:	xor    BYTE PTR ds:0x439ef1ec,dh
  405dc7:	and    DWORD PTR [esi-0x8],0xffffff9e
  405dcb:	and    BYTE PTR [ebx],bl
  405dcd:	shl    bh,0x60
  405dd0:	mov    edi,0x105ac2a7
  405dd5:	or     BYTE PTR [edx+ebx*8-0x3d],ch
  405dd9:	outs   dx,DWORD PTR ds:[esi]
  405dda:	dec    ecx
  405ddb:	sbb    ch,BYTE PTR [ecx+0x7f]
  405dde:	jg     0x405d8a
  405de0:	cmc    
  405de1:	pop    ss
  405de2:	sbb    dh,BYTE PTR [eax+0x5e]
  405de5:	mov    bh,0xe4
  405de7:	inc    eax
  405de8:	cli    
  405de9:	iret   
  405dea:	rcr    esi,0x1
  405ded:	(bad)
  405df0:	mov    DWORD PTR [ecx],edx
  405df2:	mov    al,ds:0xfbe981c
  405df7:	mov    ah,al
  405df9:	sbb    DWORD PTR [eax-0x5b],ebp
  405dfc:	mov    dl,dl
  405dfe:	mov    eax,edi
  405e00:	fild   WORD PTR [ebp-0x271dec19]
  405e06:	adc    DWORD PTR [ecx+0x7a],esi
  405e09:	jge    0x405e3a
  405e0b:	mov    ss,edi
  405e0d:	xor    edx,DWORD PTR [edi+0x45]
  405e10:	ja     0x405dba
  405e12:	add    BYTE PTR [eax],al
  405e14:	lock jmp 0xbcbf9986
  405e1a:	int    0x9e
  405e1c:	cwde   
  405e1d:	pop    edi
  405e1e:	or     eax,0x9d8db07e
  405e23:	ficom  DWORD PTR [eax+0x72]
  405e26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e27:	test   eax,edi
  405e29:	adc    esi,edi
  405e2b:	ror    BYTE PTR [eax],1
  405e2d:	not    DWORD PTR [ecx-0x60]
  405e30:	aas    
  405e31:	pusha  
  405e32:	mov    edx,0xa8bad83b
  405e37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e38:	addr16 jmp 0x46c0918d
  405e3e:	cmp    cl,ch
  405e40:	inc    eax
  405e41:	jge    0x405df3
  405e43:	ins    BYTE PTR es:[edi],dx
  405e44:	nop
  405e45:	mov    ds:0x458e192,al
  405e4a:	dec    edx
  405e4b:	jbe    0x405ec5
  405e4d:	daa    
  405e4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e4f:	dec    edx
  405e50:	mov    BYTE PTR [eax+0x4b278f27],dh
  405e56:	cmp    eax,0x7d38d044
  405e5b:	xchg   edi,eax
  405e5c:	out    dx,eax
  405e5d:	aad    0xbc
  405e5f:	je     0x405e40
  405e61:	daa    
  405e62:	ins    DWORD PTR es:[edi],dx
  405e63:	loope  0x405e1e
  405e65:	add    al,BYTE PTR [ecx]
  405e67:	push   esi
  405e68:	pop    ecx
  405e69:	(bad)  
  405e6a:	ret    
  405e6b:	(bad)  
  405e6c:	(bad)  
  405e6d:	aaa    
  405e6e:	mov    eax,ds:0x181ec1a3
  405e73:	jmp    0x405ee2
  405e75:	(bad)  
  405e76:	jl     0x405e71
  405e78:	add    BYTE PTR [eax],al
  405e7a:	mov    eax,0x74819366
  405e7f:	(bad)  
  405e80:	mul    BYTE PTR [edx-0x38]
  405e83:	push   cs
  405e84:	cmp    al,0xa
  405e86:	inc    ebx
  405e87:	neg    DWORD PTR [eax-0x8]
  405e8a:	mov    eax,ds:0xd60b766
  405e8f:	scas   eax,DWORD PTR es:[edi]
  405e90:	sar    ch,cl
  405e92:	sub    ah,BYTE PTR [edi-0x7a99b295]
  405e98:	push   cs
  405e99:	push   edi
  405e9a:	and    ebx,edi
  405e9c:	(bad)  
  405e9e:	outs   dx,DWORD PTR ds:[esi]
  405e9f:	cmp    eax,0x2e132785
  405ea4:	rol    DWORD PTR [edi+0x7db5cf78],cl
  405eaa:	aad    0x75
  405eac:	pop    eax
  405ead:	sbb    eax,0x383d9750
  405eb2:	outs   dx,BYTE PTR ds:[esi]
  405eb3:	mov    esi,0x5e3ad084
  405eb8:	loope  0x405e8c
  405eba:	ja     0x405ec2
  405ebc:	cvtpi2ps xmm6,QWORD PTR [ebx]
  405ebf:	es push 0x32
  405ec2:	xor    edi,esp
  405ec4:	mov    ds:0xc645ddba,al
  405ec9:	enter  0x9d28,0x28
  405ecd:	adc    BYTE PTR [esi+edi*2+0x5653ad4d],al
  405ed4:	hlt    
  405ed5:	sbb    eax,0x791b5df
  405eda:	sub    cl,BYTE PTR [esi]
  405edc:	jg     0x405e95
  405ede:	add    BYTE PTR [eax],al
  405ee0:	(bad)  
  405ee1:	in     eax,dx
  405ee2:	sbb    DWORD PTR [eax],eax
  405ee4:	add    BYTE PTR [ecx],bl
  405ee6:	es dec ebp
  405ee8:	cmp    BYTE PTR [esi+edi*1-0x11ee85d8],dh
  405eef:	(bad)  
  405ef0:	repnz fisttp QWORD PTR [eax-0x4e7ab85d]
  405ef7:	sbb    cl,BYTE PTR [edi]
  405ef9:	or     esi,edx
  405efb:	jg     0x405f2a
  405efd:	ins    BYTE PTR es:[edi],dx
  405efe:	jns    0x405e91
  405f00:	inc    ebp
  405f01:	add    BYTE PTR [esi],bl
  405f03:	hlt    
  405f04:	sub    eax,0x4503f7c8
  405f09:	inc    esp
  405f0a:	xchg   ecx,eax
  405f0b:	popw   es
  405f0d:	sar    DWORD PTR [edi],0x88
  405f10:	das    
  405f11:	sub    eax,0x25faed59
  405f16:	popa   
  405f17:	push   esp
  405f18:	sub    BYTE PTR [ecx+0x6],0x31
  405f1c:	sbb    BYTE PTR [esi],0xa9
  405f1f:	fucomip st,st(0)
  405f21:	dec    edx
  405f22:	into   
  405f23:	mov    edx,0xecde2cb0
  405f28:	dec    eax
  405f29:	shl    BYTE PTR [esi+0x16454a89],0x67
  405f30:	loop   0x405efa
  405f32:	outs   dx,BYTE PTR ds:[esi]
  405f33:	add    dh,BYTE PTR [edi+0x51]
  405f36:	dec    ecx
  405f37:	mov    ebx,0xde2e1e1f
  405f3c:	std    
  405f3d:	bound  eax,QWORD PTR [ecx-0x19d98ad0]
  405f43:	push   ebp
  405f44:	add    BYTE PTR [eax],al
  405f46:	pop    ebp
  405f47:	nop
  405f48:	sahf   
  405f49:	pushf  
  405f4a:	adc    eax,0x57f9c65d
  405f4f:	cwde   
  405f50:	popw   ss
  405f52:	fbstp  TBYTE PTR [edx]
  405f54:	push   cs
  405f55:	jb     0x405f81
  405f57:	out    dx,eax
  405f58:	xor    eax,0x5179d2cb
  405f5d:	scas   al,BYTE PTR es:[edi]
  405f5e:	das    
  405f5f:	jge    0x405f97
  405f61:	jmp    FWORD PTR [edi-0x33]
  405f64:	pushf  
  405f65:	cwde   
  405f66:	push   edx
  405f67:	or     eax,0x8d7c887e
  405f6c:	fucomi st,st(6)
  405f6e:	inc    ecx
  405f6f:	ret    
  405f70:	test   BYTE PTR [eax-0x19],al
  405f73:	add    dl,bl
  405f75:	es mov edx,0xb1f9be5
  405f7b:	pop    esi
  405f7c:	cmp    DWORD PTR [eax+0x6e],edi
  405f7f:	inc    eax
  405f80:	mov    ds:0x30d790d7,al
  405f85:	mov    al,0xe5
  405f87:	mov    DWORD PTR ds:0xa7c9f4b6,ebp
  405f8d:	ror    DWORD PTR [ecx],1
  405f8f:	add    al,0x35
  405f91:	jle    0x405f72
  405f93:	sbb    DWORD PTR [esi-0x32177de7],0x20
  405f9a:	add    esp,DWORD PTR [ecx+0x7f36468b]
  405fa0:	aam    0xe8
  405fa2:	mov    dh,dl
  405fa4:	or     BYTE PTR [esi-0x615e7153],0x0
  405fab:	add    BYTE PTR [ebx+0x16],bl
  405fae:	xor    eax,0xa6489ef9
  405fb3:	push   esi
  405fb4:	add    BYTE PTR [ecx+0x2a],dh
  405fb7:	xor    DWORD PTR ds:0xac098364,edx
  405fbd:	mov    bl,0xd7
  405fbf:	ins    DWORD PTR es:[edi],dx
  405fc0:	push   ecx
  405fc1:	mov    ecx,0x4a37c188
  405fc6:	int3   
  405fc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fc8:	retf   0x4259
  405fcb:	loope  0x405f58
  405fcd:	mov    ecx,0x94ee868e
  405fd2:	cmp    eax,0x99345029
  405fd7:	dec    esi
  405fd8:	gs fcompp 
  405fdb:	in     eax,0x9a
  405fdd:	scas   eax,DWORD PTR es:[edi]
  405fde:	jb     0x406051
  405fe0:	push   ds
  405fe1:	dec    esp
  405fe2:	jo     0x405fc2
  405fe4:	ret    0xc836
  405fe7:	jp     0x405fbf
  405fe9:	sar    DWORD PTR [edi-0x69],1
  405fec:	out    0x27,al
  405fee:	sub    BYTE PTR [ebx],bh
  405ff0:	cdq    
  405ff1:	add    al,0x1a
  405ff3:	nop
  405ff4:	cs sahf 
  405ff6:	add    BYTE PTR [ecx+edx*2+0x79],0xdf
  405ffb:	jp     0x40606e
  405ffd:	shr    BYTE PTR [esi],cl
  405fff:	fiadd  WORD PTR [edi]
  406001:	xor    eax,0x4b997135
  406006:	(bad)
  406009:	mov    al,0x35
  40600b:	sbb    eax,0xb9b4d916
  406010:	add    BYTE PTR [eax],al
  406012:	sub    DWORD PTR [esi],edi
  406014:	iret   
  406015:	es jle 0x40607c
  406018:	(bad)  
  40601a:	loope  0x405fe3
  40601c:	stos   BYTE PTR es:[edi],al
  40601d:	sti    
  40601e:	mov    ds:0x96572210,al
  406023:	jmp    0x406024
  406025:	add    ebp,ecx
  406027:	xchg   esp,eax
  406028:	mov    eax,0x70724e50
  40602d:	mov    cl,0x3e
  40602f:	enter  0x24b8,0x1
  406033:	arpl   dx,cx
  406035:	mov    ecx,0x1e523d66
  40603a:	mov    ecx,0x894eeeda
  40603f:	jno    0x405fe0
  406041:	add    ebp,DWORD PTR [esi-0x6a]
  406044:	test   DWORD PTR [eax-0x2f],ebx
  406047:	jmp    0x40603d
  406049:	sti    
  40604a:	daa    
  40604b:	pmulhw mm2,QWORD PTR ds:0xc28557e1
  406052:	push   esi
  406053:	mov    bl,0x1
  406055:	jle    0x406089
  406057:	pop    esp
  406058:	adc    dh,bl
  40605a:	out    0xbc,eax
  40605c:	jne    0x4060d9
  40605e:	sbb    edx,DWORD PTR [esi+0x7468d3cc]
  406064:	test   eax,0x46ce15d1
  406069:	imul   edx,DWORD PTR [eax-0x1adeddd4],0x3a89743b
  406073:	fst    QWORD PTR [eax]
  406075:	jnp    0x406077
  406077:	add    bh,ch
  406079:	cmp    edi,0x23
  40607c:	inc    edx
  40607d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40607e:	call   0xd4ce:0x23ad473e
  406085:	dec    eax
  406086:	inc    esi
  406087:	aam    0x61
  406089:	cmc    
  40608a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40608b:	and    al,0xbc
  40608d:	adc    ch,cl
  40608f:	aas    
  406090:	lock ret 
  406092:	pop    es
  406093:	scas   eax,DWORD PTR es:[edi]
  406094:	mov    ebp,0xe8956264
  406099:	sti    
  40609a:	mov    eax,DWORD PTR [ebp-0x55]
  40609d:	sbb    al,0xe9
  40609f:	mov    al,ds:0x2850358f
  4060a4:	add    dl,ah
  4060a6:	xor    al,0x3a
  4060a8:	xchg   ebp,eax
  4060a9:	ins    DWORD PTR es:[edi],dx
  4060aa:	fild   DWORD PTR [edx+0x3abe8c0a]
  4060b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060b1:	fwait
  4060b2:	call   0x8dbd52a9
  4060b7:	sar    BYTE PTR [ebx+eiz*8+0x45184862],1
  4060be:	push   es
  4060bf:	and    eax,0x65bf0cc2
  4060c4:	push   edi
  4060c5:	call   0x54fae0a3
  4060ca:	xor    al,0xff
  4060cc:	dec    esi
  4060cd:	mov    al,0x51
  4060cf:	add    BYTE PTR [eax],ah
  4060d1:	div    BYTE PTR [edi-0x20aa7767]
  4060d7:	cld    
  4060d8:	mov    al,BYTE PTR [eax]
  4060da:	jo     0x4060ee
  4060dc:	add    BYTE PTR [eax],al
  4060de:	and    bh,BYTE PTR [ebp+0x17]
  4060e1:	ja     0x406162
  4060e3:	xchg   edi,eax
  4060e4:	sub    al,0xce
  4060e6:	pop    es
  4060e7:	xor    al,0x48
  4060e9:	stos   DWORD PTR es:[edi],eax
  4060ea:	adc    eax,0x5d45e48f
  4060ef:	pop    edx
  4060f0:	and    BYTE PTR [eax],0x25
  4060f3:	jge    0x406085
  4060f5:	jbe    0x406084
  4060f7:	add    edi,esi
  4060f9:	adc    ecx,DWORD PTR [edi-0x2802a7ac]
  4060ff:	jmp    0x40613f
  406101:	cwde   
  406102:	jp     0x406160
  406104:	pop    es
  406105:	and    DWORD PTR [edx-0x6fbb9e60],eax
  40610b:	xor    eax,0x8968aacf
  406110:	test   eax,0x3fe190cf
  406115:	cmp    al,bh
  406117:	pushf  
  406118:	daa    
  406119:	pop    ebp
  40611a:	pop    edx
  40611b:	enter  0xb387,0xd2
  40611f:	je     0x406110
  406121:	(bad)  
  406122:	out    dx,eax
  406123:	scas   al,BYTE PTR es:[edi]
  406124:	aam    0x6f
  406126:	mov    bh,0x3b
  406128:	mov    al,0xa
  40612a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40612b:	mov    dh,0x1c
  40612d:	in     al,0x4d
  40612f:	adc    bh,BYTE PTR [eax-0x7f]
  406132:	push   ebp
  406133:	je     0x40619d
  406135:	xlat   BYTE PTR ds:[ebx]
  406136:	std    
  406137:	enter  0xb20e,0x1f
  40613b:	pushf  
  40613c:	mov    al,ds:0xc6e3475c
  406141:	cmp    DWORD PTR [eax],eax
  406143:	add    BYTE PTR [edx+0x3280ff13],ch
  406149:	mov    bh,0x99
  40614b:	in     eax,0x2f
  40614d:	shl    DWORD PTR [esi+esi*1+0x24],1
  406151:	adc    ecx,esi
  406153:	push   eax
  406154:	rol    DWORD PTR [eax+0x27],0x16
  406158:	shl    BYTE PTR [eax-0x25128e58],1
  40615e:	sbb    eax,0xb20b4bde
  406163:	mov    ecx,0x8106ae66
  406168:	call   DWORD PTR ds:0x239ae64d
  40616e:	add    BYTE PTR [ecx+0x74],cl
  406171:	lods   al,BYTE PTR ds:[esi]
  406172:	push   ebp
  406173:	adc    DWORD PTR cs:[eax+esi*4+0x1edc773e],eax
  40617b:	pop    ecx
  40617c:	adc    bl,dh
  40617e:	test   eax,0x2755ecf6
  406183:	xchg   ecx,eax
  406184:	mov    DWORD PTR [edx+0x52],ebp
  406187:	test   eax,0xce010b28
  40618c:	inc    ebp
  40618d:	and    DWORD PTR [ecx+eiz*2-0x5d],ecx
  406191:	or     BYTE PTR [ecx],0x6
  406194:	mov    esi,0x2f0002c6
  406199:	mov    DWORD PTR [edx],0x2c72f00
  40619f:	add    BYTE PTR [edi],ch
  4061a1:	mov    DWORD PTR [edx],0x2c72f00
  4061a7:	add    BYTE PTR [eax],al
  4061a9:	add    BYTE PTR [edi],ch
  4061ab:	mov    DWORD PTR [edx],0x2c72f00
  4061b1:	add    BYTE PTR [edi],ch
  4061b3:	mov    DWORD PTR [edx],0x2c62f00
  4061b9:	add    BYTE PTR [edi],ch
  4061bb:	mov    BYTE PTR [edx],0x0
  4061be:	das    
  4061bf:	mov    BYTE PTR [edx],0x0
  4061c2:	das    
  4061c3:	mov    BYTE PTR [edx],0x0
  4061c6:	das    
  4061c7:	fsubp  st(1),st
  4061c9:	add    ebp,DWORD PTR [edi]
  4061cb:	fsubp  st(1),st
  4061cd:	add    ebp,DWORD PTR [edi]
  4061cf:	fsubp  st(1),st
  4061d1:	add    ebp,DWORD PTR [edi]
  4061d3:	fsubp  st(1),st
  4061d5:	add    ebp,DWORD PTR [edi]
  4061d7:	fsubp  st(2),st
  4061d9:	add    ebp,DWORD PTR [edi]
  4061db:	fsubp  st(2),st
  4061dd:	add    ebp,DWORD PTR [edi]
  4061df:	fsubp  st(2),st
  4061e1:	add    ebp,DWORD PTR [edi]
  4061e3:	fsubp  st(2),st
  4061e5:	add    ebp,DWORD PTR [edi]
  4061e7:	fsubp  st(3),st
  4061e9:	add    ebp,DWORD PTR [edi]
  4061eb:	fsubrp st(3),st
  4061ed:	add    ebp,DWORD PTR [edi]
  4061ef:	fsubp  st(3),st
  4061f1:	add    ebp,DWORD PTR [edi]
  4061f3:	fsubrp st(3),st
  4061f5:	add    ebp,DWORD PTR [edi]
  4061f7:	fsubp  st(4),st
  4061f9:	add    ebp,DWORD PTR [edi]
  4061fb:	fsubrp st(4),st
  4061fd:	add    ebp,DWORD PTR [edi]
  4061ff:	fsubp  st(4),st
  406201:	add    ebp,DWORD PTR [edi]
  406203:	fsubrp st(4),st
  406205:	add    ebp,DWORD PTR [edi]
  406207:	fsubrp st(7),st
  406209:	add    ebp,DWORD PTR [edi]
  40620b:	fdivrp st(7),st
  40620d:	repnz add BYTE PTR [eax],al
  406210:	push   ds
  406211:	(bad)  
  406213:	add    al,0x26
  406215:	fsub   st,st(1)
  406217:	push   es
  406218:	and    al,0xda
  40621a:	repz add BYTE PTR [edx],bh
  40621d:	fsub   st(5),st
  40621f:	add    dh,BYTE PTR [eax]
  406221:	fsubrp st(7),st
  406223:	add    ebp,DWORD PTR [edi]
  406225:	fsubrp st(7),st
  406227:	add    ebp,DWORD PTR [edi]
  406229:	fsubrp st(7),st
  40622b:	add    ebp,DWORD PTR [edi]
  40622d:	fsubrp st(7),st
  40622f:	add    ebp,DWORD PTR [edi]
  406231:	fsubp  st(0),st
  406233:	add    ebp,DWORD PTR [edi]
  406235:	fsubp  st(0),st
  406237:	add    ebp,DWORD PTR [edi]
  406239:	fsubp  st(1),st
  40623b:	add    ebp,DWORD PTR [edi]
  40623d:	fsubp  st(1),st
  40623f:	add    ebp,DWORD PTR [edi]
  406241:	fiadd  WORD PTR [eax]
  406243:	jmp    0xde2c:0xea00de2c
  40624a:	add    ch,ch
  40624c:	sub    al,0xde
  40624e:	add    ch,ah
  406250:	sub    al,0xde
  406252:	add    ah,ch
  406254:	sub    al,0xde
  406256:	add    ah,ah
  406258:	sub    al,0xde
  40625a:	add    bh,ch
  40625c:	sub    al,0xde
  40625e:	add    bh,ah
  406260:	sub    al,0xde
  406262:	add    dh,ch
  406264:	sub    al,0xde
  406266:	add    dh,ah
  406268:	sub    al,0xde
  40626a:	add    cl,dh
  40626c:	sub    al,0xde
  40626e:	add    cl,dh
  406270:	sub    al,0xde
  406272:	add    al,ah
  406274:	add    BYTE PTR [eax],al
  406276:	sub    al,0xde
  406278:	add    al,ah
  40627a:	sub    al,0xde
  40627c:	add    bl,dh
  40627e:	sub    al,0xde
  406280:	add    bl,dh
  406282:	sub    al,0xde
  406284:	add    dl,ah
  406286:	sub    al,0xde
  406288:	add    dl,ah
  40628a:	sub    al,0xde
  40628c:	add    ch,dh
  40628e:	sub    al,0xde
  406290:	add    ch,ch
  406292:	sub    al,0xde
  406294:	add    ah,ah
  406296:	sub    al,0xde
  406298:	add    ah,bl
  40629a:	sub    al,0xde
  40629c:	add    cl,ch
  40629e:	sub    al,0xde
  4062a0:	add    cl,ch
  4062a2:	sub    al,0xde
  4062a4:	add    cl,ch
  4062a6:	sub    al,0xde
  4062a8:	add    cl,ch
  4062aa:	sub    al,0xde
  4062ac:	add    cl,ch
  4062ae:	sub    al,0xde
  4062b0:	add    cl,ch
  4062b2:	sub    al,0xde
  4062b4:	add    cl,ch
  4062b6:	sub    al,0xde
  4062b8:	add    cl,ch
  4062ba:	sub    al,0xde
  4062bc:	add    BYTE PTR [eax],al
  4062be:	push   esi
  4062bf:	fiadd  DWORD PTR [eax]
  4062c1:	add    BYTE PTR [esi-0x26],dl
  4062c4:	add    BYTE PTR [eax],al
  4062c6:	inc    esi
  4062c7:	fiadd  DWORD PTR [eax]
  4062c9:	add    BYTE PTR [esi-0x26],al
  4062cc:	add    BYTE PTR [eax],al
  4062ce:	push   esi
  4062cf:	fiadd  DWORD PTR [eax]
  4062d1:	add    BYTE PTR [esi-0x26],dl
  4062d4:	add    BYTE PTR [eax],al
  4062d6:	inc    esi
  4062d7:	fiadd  DWORD PTR [eax]
  4062d9:	add    BYTE PTR [eax],al
  4062db:	add    BYTE PTR [esi-0x26],al
  4062de:	add    BYTE PTR [eax],al
  4062e0:	adc    al,0xe2
  4062e2:	add    BYTE PTR [eax],al
  4062e4:	adc    eax,0x90000e2
  4062e9:	loop   0x4062eb
  4062eb:	add    BYTE PTR [esi],al
  4062ed:	loop   0x4062ef
  4062ef:	add    BYTE PTR [edx],al
  4062f1:	loop   0x4062fb
  4062f3:	add    BYTE PTR [edx-0x2dfff71f],dl
  4062f9:	loope  0x406303
  4062fb:	add    BYTE PTR [edx],dl
  4062fd:	loope  0x406307
  4062ff:	add    BYTE PTR [edx],al
  406301:	loop   0x40630b
  406303:	add    BYTE PTR [edx-0x1f],dh
  406306:	or     BYTE PTR [eax],al
  406308:	mov    dl,0xe1
  40630a:	or     BYTE PTR [eax],al
  40630c:	shl    al,cl
  40630e:	or     BYTE PTR [eax],al
  406310:	xor    ah,dl
  406312:	or     BYTE PTR [eax],al
  406314:	inc    edx
  406315:	loop   0x40631f
  406317:	add    BYTE PTR [edx],al
  406319:	loop   0x406323
  40631b:	add    BYTE PTR [edx+0x320008e2],al
  406321:	loop   0x40632b
  406323:	add    BYTE PTR [edx],ah
  406325:	loop   0x40632f
  406327:	add    BYTE PTR [edx-0x1e],ah
  40632a:	or     BYTE PTR [eax],al
  40632c:	ret    0x8e2
  40632f:	add    BYTE PTR [ecx+eiz*8-0x1debfff8],dl
  406336:	or     BYTE PTR [eax],al
  406338:	das    
  406339:	stc    
  40633a:	add    al,0x8
  40633c:	das    
  40633d:	jns    0x406344
  40633f:	or     BYTE PTR [eax],al
  406341:	add    BYTE PTR [edi],ch
  406343:	cdq    
  406344:	add    cl,BYTE PTR [eax]
  406346:	das    
  406347:	sbb    DWORD PTR ds:0x4d92f08,eax
  40634d:	or     BYTE PTR [edi],ch
  40634f:	pop    ecx
  406350:	add    eax,0x2a92f08
  406355:	or     BYTE PTR [edi],ch
  406357:	sub    DWORD PTR ds:0x2692f08,eax
  40635d:	or     BYTE PTR [edi],ch
  40635f:	jmp    0xa96f6b68
  406364:	add    cl,BYTE PTR [eax]
  406366:	das    
  406367:	sub    DWORD PTR ds:0x2692f08,eax
  40636d:	or     BYTE PTR [edi],ch
  40636f:	jmp    0xb16f6b78
  406374:	add    cl,BYTE PTR [eax]
  406376:	das    
  406377:	xor    DWORD PTR ds:0x2812f08,eax
  40637d:	or     BYTE PTR [edi],ch
  40637f:	add    DWORD PTR ds:0x2912f08,eax
  406385:	or     BYTE PTR [edi],ch
  406387:	adc    DWORD PTR ds:0x2612f08,eax
  40638d:	or     BYTE PTR [edi],ch
  40638f:	loope  0x406395
  406391:	or     BYTE PTR [edi],ch
  406393:	loope  0x406399
  406395:	or     BYTE PTR [edi],ch
  406397:	popa   
  406398:	add    cl,BYTE PTR [eax]
  40639a:	das    
  40639b:	icebp  
  40639c:	add    al,0x8
  40639e:	das    
  40639f:	jno    0x4063a3
  4063a1:	or     BYTE PTR [edi],ch
  4063a3:	loope  0x4063a9
  4063a5:	or     BYTE PTR [eax],al
  4063a7:	add    BYTE PTR [edi],ch
  4063a9:	popa   
  4063aa:	add    cl,BYTE PTR [eax]
  4063ac:	das    
  4063ad:	icebp  
  4063ae:	add    al,0x8
  4063b0:	das    
  4063b1:	jno    0x4063b5
  4063b3:	or     BYTE PTR [edi],ch
  4063b5:	fsubp  st(5),st
  4063b7:	add    esi,DWORD PTR [edi]
  4063b9:	fisub  WORD PTR [ebp+0x3]
  4063bc:	daa    
  4063bd:	fisubr WORD PTR ds:0xa5de2704
  4063c3:	add    esi,DWORD PTR [edi]
  4063c5:	fmulp  st(5),st
  4063c7:	add    esi,DWORD PTR [edi]
  4063c9:	fiadd  WORD PTR [ebp+0x3]
  4063cc:	daa    
  4063cd:	fimul  WORD PTR ds:0x85de2704
  4063d3:	add    esi,DWORD PTR [edi]
  4063d5:	fdivp  st(5),st
  4063d7:	add    esi,DWORD PTR [edi]
  4063d9:	fidiv  WORD PTR [ebp+0x3]
  4063dc:	daa    
  4063dd:	fidivr WORD PTR [ebp+0x35de2703]
  4063e3:	add    esi,DWORD PTR [edi]
  4063e5:	fdivp  st(5),st
  4063e7:	add    esi,DWORD PTR [edi]
  4063e9:	fidiv  WORD PTR [ebp+0x3]
  4063ec:	daa    
  4063ed:	fidivr WORD PTR [ebp+0x35de2703]
  4063f3:	add    esi,DWORD PTR [edi]
  4063f5:	fdivrp st(5),st
  4063f7:	add    esi,DWORD PTR [edi]
  4063f9:	fisubr WORD PTR [ebp+0x3]
  4063fc:	daa    
  4063fd:	fisub  WORD PTR [ebp+0x1dde2703]
  406403:	add    esi,DWORD PTR [edi]
  406405:	(bad)  
  406407:	add    esi,DWORD PTR [edi]
  406409:	fimul  WORD PTR [ebp+0x3]
  40640c:	add    BYTE PTR [eax],al
  40640e:	daa    
  40640f:	fiadd  WORD PTR [ebp-0x221d8fd]
  406415:	add    dh,BYTE PTR [edi]
  406417:	fiadd  WORD PTR ds:0x7dde3704
  40641d:	add    al,0x27
  40641f:	fidiv  WORD PTR ds:0xadde2704
  406425:	add    al,0x37
  406427:	fiadd  WORD PTR ds:0x7dde3704
  40642d:	add    al,0x27
  40642f:	fiadd  WORD PTR [eax]
  406431:	aaa    
  406432:	sub    edx,esi
  406434:	add    BYTE PTR [edi-0x17ff29cd],ch
  40643a:	sub    al,0xd6
  40643c:	add    BYTE PTR [eax+0x33],ch
  40643f:	(bad)  
  406440:	add    BYTE PTR [eax],ch
  406442:	sub    edx,esi
  406444:	add    BYTE PTR [eax-0x37ff29cd],ch
  40644a:	sub    al,0xd6
  40644c:	add    BYTE PTR [eax+0x33],cl
  40644f:	(bad)  
  406450:	add    BYTE PTR [eax],cl
  406452:	sub    edx,esi
  406454:	add    BYTE PTR [eax-0x7ff29cd],cl
  40645a:	sub    al,0xd6
  40645c:	add    BYTE PTR [eax+0x33],bh
  40645f:	(bad)  
  406460:	add    BYTE PTR [eax+0x3800d62c],bh
  406466:	xor    edx,esi
  406468:	add    al,bh
  40646a:	sub    al,0xd6
  40646c:	add    BYTE PTR [eax+0x33],bh
  40646f:	(bad)  
  406470:	add    BYTE PTR [eax-0x29d40000],bh
  406476:	add    BYTE PTR [eax],bh
  406478:	xor    edx,esi
  40647a:	add    al,dh
  40647c:	sub    al,0xd6
  40647e:	add    BYTE PTR [eax+0x33],dh
  406481:	(bad)  
  406482:	add    BYTE PTR [eax+0x2000d62c],ah
  406488:	xor    edx,esi
  40648a:	add    al,dl
  40648c:	sub    al,0xd6
  40648e:	add    BYTE PTR [eax+0x33],dl
  406491:	(bad)  
  406492:	add    BYTE PTR [eax+0xd62c],al
  406498:	xor    edx,esi
  40649a:	add    BYTE PTR [eax],al
  40649c:	sub    edx,esi
  40649e:	add    BYTE PTR [eax+0x3000d62c],al
  4064a4:	sub    edx,esi
  4064a6:	add    BYTE PTR [eax+0xd62c],dh
  4064ac:	das    
  4064ad:	loop   0x4064b7
  4064af:	add    BYTE PTR [edi+0x5f0008de],ch
  4064b5:	loop   0x4064bf
  4064b7:	add    BYTE PTR [edi-0x6cfff722],bh
  4064bd:	fimul  WORD PTR [eax]
  4064bf:	add    BYTE PTR [ebx],dl
  4064c1:	fisttp WORD PTR [eax]
  4064c3:	add    BYTE PTR [ebx-0x1e],al
  4064c6:	or     BYTE PTR [eax],al
  4064c8:	xchg   ebx,eax
  4064c9:	fimul  WORD PTR [eax]
  4064cb:	add    BYTE PTR [ebx-0x22],dh
  4064ce:	or     BYTE PTR [eax],al
  4064d0:	repz fimul WORD PTR [eax]
  4064d3:	add    BYTE PTR [ebx],ah
  4064d5:	loop   0x4064df
  4064d7:	add    BYTE PTR [eax],al
  4064d9:	add    BYTE PTR [ebx+0x430008de],dh
  4064df:	fimul  WORD PTR [eax]
  4064e1:	add    bl,al
  4064e3:	fimul  WORD PTR [eax]
  4064e5:	add    BYTE PTR [ebx-0x22],dh
  4064e8:	or     BYTE PTR [eax],al
  4064ea:	arpl   bp,bx
  4064ec:	or     BYTE PTR [eax],al
  4064ee:	and    ebx,esi
  4064f0:	or     BYTE PTR [eax],al
  4064f2:	mov    ds:0xd30008dd,eax
  4064f7:	fisttp QWORD PTR [eax]
  4064f9:	add    BYTE PTR [ebx-0x23],al
  4064fc:	or     BYTE PTR [eax],al
  4064fe:	sti    
  4064ff:	fisttp QWORD PTR [eax]
  406501:	add    BYTE PTR [ebx-0x34fff723],cl
  406507:	fisttp QWORD PTR [eax]
  406509:	add    BYTE PTR [ebx-0x23],cl
  40650c:	or     BYTE PTR [eax],al
  40650e:	sti    
  40650f:	fisttp QWORD PTR [eax]
  406511:	add    BYTE PTR [ebx-0x23],ch
  406514:	or     BYTE PTR [eax],al
  406516:	stos   DWORD PTR es:[edi],eax
  406517:	fisttp QWORD PTR [eax]
  406519:	add    bl,cl
  40651b:	fmul   QWORD PTR [eax]
  40651d:	add    BYTE PTR [ebx],ch
  40651f:	loop   0x406529
  406521:	add    BYTE PTR [ebx],bh
  406523:	loop   0x40652d
  406525:	add    BYTE PTR [edi],ch
  406527:	repnz add al,0x8
  40652a:	das    
  40652b:	jp     0x406532
  40652d:	or     BYTE PTR [edi],ch
  40652f:	loop   0x406535
  406531:	or     BYTE PTR [edi],ch
  406533:	sub    al,BYTE PTR ds:0x4f22f08
  406539:	or     BYTE PTR [edi],ch
  40653b:	jp     0x406542
  40653d:	or     BYTE PTR [eax],al
  40653f:	add    BYTE PTR [edi],ch
  406541:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406542:	add    cl,BYTE PTR [ecx]
  406544:	das    
  406545:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406546:	add    eax,0x5242f09
  40654b:	or     DWORD PTR [edi],ebp
  40654d:	and    al,0x4
  40654f:	or     DWORD PTR [edi],ebp
  406551:	les    eax,FWORD PTR [ecx+ecx*1]
  406554:	das    
  406555:	les    eax,FWORD PTR [ebx]
  406557:	or     DWORD PTR [edi],ebp
  406559:	inc    esp
  40655a:	add    eax,0x4442f09
  40655f:	or     DWORD PTR [edi],ebp
  406561:	les    eax,FWORD PTR [ecx+ecx*1]
  406564:	das    
  406565:	les    eax,FWORD PTR [ebx]
  406567:	or     DWORD PTR [edi],ebp
  406569:	inc    esp
  40656a:	add    eax,0x4442f09
  40656f:	or     DWORD PTR [edi],ebp
  406571:	add    cl,BYTE PTR fs:[ecx]
  406574:	das    
  406575:	fs add eax,0x4e42f09
  40657b:	or     DWORD PTR [edi],ebp
  40657d:	in     al,0x3
  40657f:	or     DWORD PTR [edi],ebp
  406581:	lods   al,BYTE PTR ds:[esi]
  406582:	add    cl,BYTE PTR [ecx]
  406584:	das    
  406585:	lods   al,BYTE PTR ds:[esi]
  406586:	add    eax,0x53c2f09
  40658b:	or     DWORD PTR [edi],ebp
  40658d:	cmp    al,0x4
  40658f:	or     DWORD PTR [edi],ebp
  406591:	ins    BYTE PTR es:[edi],dx
  406592:	add    cl,BYTE PTR [ecx]
  406594:	das    
  406595:	ins    BYTE PTR es:[edi],dx
  406596:	add    eax,0x4fc2f09
  40659b:	or     DWORD PTR [edi],ebp
  40659d:	cld    
  40659e:	add    ecx,DWORD PTR [ecx]
  4065a0:	das    
  4065a1:	ficom  WORD PTR [edx]
  4065a3:	add    al,0x0
  4065a5:	add    BYTE PTR [esi],ah
  4065a7:	ficom  WORD PTR [edx]
  4065a9:	add    eax,0x382de26
  4065ae:	fiadd  WORD PTR ss:[edx+0x52de3604]
  4065b5:	add    al,0x26
  4065b7:	ficom  WORD PTR [edx+0x5]
  4065ba:	es faddp st(2),st
  4065bd:	add    esi,DWORD PTR [esi]
  4065bf:	faddp  st(2),st
  4065c1:	add    al,0x36
  4065c3:	fiadd  WORD PTR [edx]
  4065c5:	add    al,0x26
  4065c7:	fiadd  WORD PTR [edx]
  4065c9:	add    eax,0x372de26
  4065ce:	fidiv  WORD PTR ss:[edx+0x4]
  4065d2:	fisub  WORD PTR ss:[edx]
  4065d5:	add    al,0x26
  4065d7:	fisub  WORD PTR [edx]
  4065d9:	add    eax,0x392de26
  4065de:	ficom  WORD PTR ss:[edx+0x22de3604]
  4065e5:	add    al,0x26
  4065e7:	fisub  WORD PTR [edx]
  4065e9:	add    eax,0x392de26
  4065ee:	ficom  WORD PTR ss:[edx-0x3d21c9fc]
  4065f5:	add    esp,DWORD PTR [esi]
  4065f7:	faddp  st(2),st
  4065f9:	add    al,0x26
  4065fb:	fidiv  WORD PTR [edx]
  4065fd:	add    esi,DWORD PTR [esi]
  4065ff:	fidiv  WORD PTR [edx]
  406601:	add    al,0x36
  406603:	fsubp  st(6),st
  406605:	add    esp,DWORD PTR [esi]
  406607:	fsubrp st(6),st
  406609:	add    al,0x0
  40660b:	add    BYTE PTR [esi],ah
  40660d:	fisubr WORD PTR [esi+0x3]
  406610:	fisub  WORD PTR ss:[esi+0x4]
  406614:	fisubr WORD PTR ss:[esi-0x5921d9fd]
  40661b:	add    al,0x26
  40661d:	fiadd  WORD PTR [eax]
  40661f:	cs sub al,0xd5
  406622:	add    BYTE PTR [esi],ah
  406624:	sub    edx,ebp
  406626:	add    BYTE PTR [esi],cl
  406628:	xor    edx,ebp
  40662a:	add    BYTE PTR [esi],al
  40662c:	sub    al,0xd5
  40662e:	add    BYTE PTR [esi-0x79ff2acd],cl
  406634:	sub    al,0xd5
  406636:	add    BYTE PTR [esi+0x33],cl
  406639:	aad    0x0
  40663b:	inc    esi
  40663c:	sub    al,0xd5
  40663e:	add    dh,cl
  406640:	xor    edx,ebp
  406642:	add    dh,al
  406644:	sub    al,0xd5
  406646:	add    dh,bh
  406648:	sub    al,0xd5
  40664a:	add    dh,dh
  40664c:	sub    eax,0x337e00d5
  406651:	aad    0x0
  406653:	jbe    0x406681
  406655:	aad    0x0
  406657:	push   ds
  406658:	xor    edx,ebp
  40665a:	add    BYTE PTR [esi],dl
  40665c:	sub    al,0xd5
  40665e:	add    BYTE PTR [esi-0x69ff2acd],bl
  406664:	sub    al,0xd5
  406666:	add    BYTE PTR [esi],bl
  406668:	xor    edx,ebp
  40666a:	add    BYTE PTR [esi],dl
  40666c:	sub    al,0xd5
  40666e:	add    BYTE PTR [esi-0x2acd0000],bl
  406674:	add    BYTE PTR [esi-0x41ff2ad4],dl
  40667a:	sub    al,0xd5
  40667c:	add    BYTE PTR [esi+0x3e00d52d],dh
  406682:	xor    edx,ebp
  406684:	add    BYTE PTR [esi],dh
  406686:	sub    al,0xd5
  406688:	add    dh,dh
  40668a:	sub    al,0xd5
  40668c:	add    dh,ch
  40668e:	sub    eax,0x336600d5
  406693:	aad    0x0
  406695:	pop    esi
  406696:	sub    al,0xd5
  406698:	add    BYTE PTR [eax],al
  40669a:	mov    eax,ds:0x810007da
  40669f:	fild   DWORD PTR [edi]
  4066a1:	add    BYTE PTR [ecx],dl
  4066a3:	loop   0x4066ac
  4066a5:	add    BYTE PTR [ecx],ah
  4066a7:	fild   DWORD PTR [edi]
  4066a9:	add    BYTE PTR [ecx],ah
  4066ab:	loop   0x4066b4
  4066ad:	add    BYTE PTR [ecx],ah
  4066af:	fild   DWORD PTR [edi]
  4066b1:	add    BYTE PTR [ecx+0x210007da],dh
  4066b7:	fadd   QWORD PTR [edi]
  4066b9:	add    BYTE PTR [ecx],al
  4066bb:	loop   0x4066c4
  4066bd:	add    cl,ah
  4066bf:	fiadd  DWORD PTR [edi]
  4066c1:	add    BYTE PTR [ecx-0x26],dh
  4066c4:	pop    es
  4066c5:	add    cl,al
  4066c7:	fild   DWORD PTR [edi]
  4066c9:	add    BYTE PTR [ecx],dh
  4066cb:	loop   0x4066d4
  4066cd:	add    BYTE PTR [ecx-0x25],dh
  4066d0:	pop    es
  4066d1:	add    cl,ah
  4066d3:	fiadd  DWORD PTR [edi]
  4066d5:	add    BYTE PTR [eax],al
  4066d7:	add    cl,dl
  4066d9:	fild   DWORD PTR [edi]
  4066db:	add    BYTE PTR [ecx],dl
  4066dd:	loop   0x4066e6
  4066df:	add    BYTE PTR [ecx],dh
  4066e1:	fild   DWORD PTR [edi]
  4066e3:	add    BYTE PTR [ecx-0x4efff826],ah
  4066e9:	fild   DWORD PTR [edi]
  4066eb:	add    BYTE PTR [ecx],dl
  4066ed:	loop   0x4066f6
  4066ef:	add    BYTE PTR [ecx],dl
  4066f1:	fild   DWORD PTR [edi]
  4066f3:	add    cl,al
  4066f5:	loope  0x4066fe
  4066f7:	add    BYTE PTR [ecx-0xefff820],dh
  4066fd:	loope  0x406706
  4066ff:	add    cl,dl
  406701:	loopne 0x40670a
  406703:	add    BYTE PTR [ecx-0x1f],al
  406706:	pop    es
  406707:	add    BYTE PTR [ecx-0x20],dl
  40670a:	pop    es
  40670b:	add    BYTE PTR [esi],al
  40670d:	loop   0x406714
  40670f:	add    dh,al
  406711:	loope  0x406718
  406713:	add    BYTE PTR [edi],ch
  406715:	xchg   edi,eax
  406716:	add    al,BYTE PTR [edi]
  406718:	das    
  406719:	push   edi
  40671a:	add    al,BYTE PTR [edi]
  40671c:	das    
  40671d:	xchg   DWORD PTR [edx],eax
  40671f:	pop    es
  406720:	das    
  406721:	inc    edi
  406722:	add    al,BYTE PTR [edi]
  406724:	das    
  406725:	add    al,BYTE PTR [bx]
  406728:	das    
  406729:	daa    
  40672a:	add    al,BYTE PTR [edi]
  40672c:	das    
  40672d:	scas   eax,DWORD PTR es:[edi]
  40672e:	add    al,BYTE PTR [edi]
  406730:	das    
  406731:	out    dx,eax
  406732:	add    al,0x7
  406734:	das    
  406735:	fild   WORD PTR [edi+eax*1]
  406738:	das    
  406739:	pop    ds
  40673a:	add    eax,0x2f000007
  40673f:	mov    edi,0xff2f0702
  406744:	add    al,0x7
  406746:	das    
  406747:	scas   eax,DWORD PTR es:[edi]
  406748:	add    al,BYTE PTR [edi]
  40674a:	das    
  40674b:	out    dx,eax
  40674c:	add    al,0x7
  40674e:	das    
  40674f:	mov    bl,0x2
  406751:	pop    es
  406752:	das    
  406753:	sti    
  406754:	add    al,0x7
  406756:	das    
  406757:	xchg   ebx,eax
  406758:	add    al,BYTE PTR [edi]
  40675a:	das    
  40675b:	fild   DWORD PTR [edi+eax*1]
  40675e:	das    
  40675f:	add    DWORD PTR [edx],0x7
  406762:	das    
  406763:	retf   
  406764:	add    al,0x7
  406766:	das    
  406767:	arpl   WORD PTR [edx],ax
  406769:	pop    es
  40676a:	das    
  40676b:	stos   DWORD PTR es:[edi],eax
  40676c:	add    al,BYTE PTR [edi]
  40676e:	das    
  40676f:	mov    eax,0x382f0802
  406774:	add    eax,0x2782f08
  406779:	or     BYTE PTR [edi],ch
  40677b:	clc    
  40677c:	add    al,0x8
  40677e:	das    
  40677f:	fadd   DWORD PTR [eax+ecx*1]
  406782:	das    
  406783:	pop    eax
  406784:	add    eax,0x2982f08
  406789:	or     BYTE PTR [edi],ch
  40678b:	sbb    BYTE PTR ds:0xe7de2f08,al
  406791:	add    ebp,DWORD PTR [edx]
  406793:	fdivrp st(7),st
  406795:	add    esi,DWORD PTR [edx]
  406797:	(bad)  
  406799:	add    ebp,DWORD PTR [edx]
  40679b:	fsubp  st(7),st
  40679d:	add    esi,DWORD PTR [edx]
  40679f:	fsubp  st(3),st
  4067a1:	add    eax,DWORD PTR [eax]
  4067a3:	add    BYTE PTR [edx],ch
  4067a5:	(bad)  
  4067a7:	add    esi,DWORD PTR [edx]
  4067a9:	fsubrp st(3),st
  4067ab:	add    ebp,DWORD PTR [edx]
  4067ad:	fmulp  st(3),st
  4067af:	add    esi,DWORD PTR [edx]
  4067b1:	fsubp  st(1),st
  4067b3:	add    ebp,DWORD PTR [edx]
  4067b5:	fdivp  st(1),st
  4067b7:	add    esi,DWORD PTR [edx]
  4067b9:	fsubrp st(1),st
  4067bb:	add    ebp,DWORD PTR [edx]
  4067bd:	fdivrp st(1),st
  4067bf:	add    esi,DWORD PTR [edx]
  4067c1:	fsubp  st(5),st
  4067c3:	add    ebp,DWORD PTR [edx]
  4067c5:	(bad)  
  4067c7:	add    esi,DWORD PTR [edx]
  4067c9:	fsubrp st(5),st
  4067cb:	add    ebp,DWORD PTR [edx]
  4067cd:	fmulp  st(5),st
  4067cf:	add    esi,DWORD PTR [edx]
  4067d1:	fsubp  st(0),st
  4067d3:	add    ebp,DWORD PTR [edx]
  4067d5:	fdivp  st(0),st
  4067d7:	add    esi,DWORD PTR [edx]
  4067d9:	fsubrp st(0),st
  4067db:	add    ebp,DWORD PTR [edx]
  4067dd:	fdivrp st(0),st
  4067df:	add    esi,DWORD PTR [edx]
  4067e1:	fsubp  st(4),st
  4067e3:	add    ebp,DWORD PTR [edx]
  4067e5:	(bad)  
  4067e7:	add    esi,DWORD PTR [edx]
  4067e9:	fsubrp st(4),st
  4067eb:	add    ebp,DWORD PTR [edx]
  4067ed:	fmulp  st(4),st
  4067ef:	add    esi,DWORD PTR [edx]
  4067f1:	fsubp  st(2),st
  4067f3:	add    ebp,DWORD PTR [edx]
  4067f5:	fdivp  st(2),st
  4067f7:	add    esi,DWORD PTR [edx]
  4067f9:	fsubrp st(2),st
  4067fb:	add    ebp,DWORD PTR [edx]
  4067fd:	fdivrp st(2),st
  4067ff:	add    esi,DWORD PTR [edx]
  406801:	fsubp  st(6),st
  406803:	add    ebp,DWORD PTR [edx]
  406805:	(bad)  
  406807:	add    eax,DWORD PTR [eax]
  406809:	add    BYTE PTR [edx],dh
  40680b:	fiadd  WORD PTR [eax]
  40680d:	jmp    0xe542483d
  406812:	xor    cl,bl
  406814:	add    ebp,edi
  406816:	fadd   QWORD PTR es:[esi]
  406819:	out    0x35,al
  40681b:	fild   DWORD PTR ds:0x8d634e1
  406821:	loope  0x406847
  406823:	(bad)  
  406824:	or     al,dh
  406826:	and    edx,ebp
  406828:	pop    es
  406829:	lock cmp edx,ebp
  40682c:	pop    es
  40682d:	jecxz  0x406861
  40682f:	fmul   DWORD PTR [edx]
  406831:	jecxz  0x40685d
  406833:	fmul   DWORD PTR [edx]
  406835:	repz and bl,al
  406838:	or     dh,bl
  40683a:	cmp    bl,al
  40683c:	or     ah,dl
  40683e:	xor    edx,edi
  406840:	or     edx,esp
  406842:	sub    edx,edi
  406844:	or     edx,esi
  406846:	and    edx,edi
  406848:	or     edx,esi
  40684a:	cmp    edx,edi
  40684c:	or     ebp,esp
  40684e:	xor    dl,dl
  406850:	or     al,0xdd
  406852:	sub    dl,dl
  406854:	or     al,0xf5
  406856:	and    dl,dl
  406858:	or     al,0xed
  40685a:	cmp    dl,dl
  40685c:	or     al,0xe5
  40685e:	xor    dl,dl
  406860:	or     al,0xdd
  406862:	sub    dl,dl
  406864:	or     al,0xf5
  406866:	and    dl,dl
  406868:	or     al,0xed
  40686a:	cmp    dl,dl
  40686c:	or     al,0xe4
  40686e:	add    BYTE PTR [eax],al
  406870:	xor    ecx,edx
  406872:	or     ebx,esp
  406874:	sub    ecx,edx
  406876:	or     esi,esp
  406878:	and    ecx,edx
  40687a:	or     ebp,esp
  40687c:	cmp    ecx,edx
  40687e:	or     esp,esp
  406880:	xor    ecx,edx
  406882:	or     ebx,esp
  406884:	sub    ecx,edx
  406886:	or     eax,DWORD PTR [eax]
  406888:	sbb    edx,esp
  40688a:	or     ecx,DWORD PTR ds:0xd0bd41b
  406890:	or     ch,cl
  406892:	push   cs
  406893:	push   cs
  406894:	fmul   st,st(4)
  406896:	push   cs
  406897:	push   cs
  406898:	clc    
  406899:	int3   
  40689a:	push   cs
  40689b:	push   cs
  40689c:	fmul   st,st(4)
  40689e:	push   cs
  40689f:	push   cs
  4068a0:	enter  0xecc,0xe
  4068a4:	clc    
  4068a5:	int3   
  4068a6:	push   cs
  4068a7:	push   cs
  4068a8:	fmul   st,st(4)
  4068aa:	push   cs
  4068ab:	push   cs
  4068ac:	fmul   st,st(4)
  4068ae:	push   cs
  4068af:	push   cs
  4068b0:	enter  0xecc,0xe
  4068b4:	fmul   st,st(4)
  4068b6:	push   cs
  4068b7:	push   cs
  4068b8:	mov    eax,0x980e0ecc
  4068bd:	int3   
  4068be:	push   cs
  4068bf:	push   cs
  4068c0:	mov    ah,cl
  4068c2:	push   cs
  4068c3:	push   cs
  4068c4:	js     0x406892
  4068c6:	push   cs
  4068c7:	push   cs
  4068c8:	cwde   
  4068c9:	int3   
  4068ca:	push   cs
  4068cb:	push   cs
  4068cc:	cwde   
  4068cd:	int3   
  4068ce:	push   cs
  4068cf:	push   cs
  4068d0:	mov    ebp,ecx
  4068d2:	or     eax,0x5900000f
  4068d7:	int    0xd
  4068d9:	vmwrite ecx,ebp
  4068dc:	or     eax,0xdcd590f
  4068e1:	cmovns ecx,ebp
  4068e4:	or     eax,0xdcd790f
  4068e9:	mulps  xmm1,xmm5
  4068ec:	or     eax,0xdcd590f
  4068f1:	cmovns ecx,ebp
  4068f4:	or     eax,0xdcd590f
  4068f9:	(bad)  
  4068fb:	int    0xd
  4068fd:	nop    edi
  406900:	or     eax,0x11b82f0f
  406905:	movaps xmm0,XMMWORD PTR [eax-0x57dff0ef]
  40690c:	adc    DWORD PTR [edi],ecx
  40690e:	cmp    BYTE PTR [eax-0x48cff0ef],dh
  406914:	add    dl,BYTE PTR [eax]
  406916:	push   ds
  406917:	test   DWORD PTR [ebx+edx*1],edx
  40691a:	sbb    al,0xa3
  40691c:	push   ss
  40691d:	adc    al,0x43
  40691f:	stos   BYTE PTR es:[edi],al
  406920:	pop    ss
  406921:	adc    eax,0x1618a13a
  406926:	inc    ecx
  406927:	test   eax,0x80391618
  40692c:	sbb    DWORD PTR [edi],edx
  40692e:	and    BYTE PTR [eax-0x70e7e8e7],cl
  406934:	sbb    bl,BYTE PTR [eax]
  406936:	pop    ss
  406937:	(bad)  
  406938:	sbb    bl,BYTE PTR [eax]
  40693a:	add    BYTE PTR [eax],al
  40693c:	pop    ss
  40693d:	fistp  WORD PTR [eax+ebx*1]
  406940:	inc    edi
  406941:	fistp  WORD PTR [eax+ebx*1]
  406944:	inc    edi
  406945:	scas   al,BYTE PTR es:[edi]
  406946:	sbb    eax,0x1dae3619
  40694b:	sbb    DWORD PTR [esi],esi
  40694d:	mov    esi,0xbe26191d
  406952:	sbb    eax,0x188d2619
  406957:	sbb    dl,BYTE PTR ds:0x151a188d
  40695d:	fstp   QWORD PTR [edx]
  40695f:	sbb    al,BYTE PTR [ebp-0x23]
  406962:	sbb    bl,BYTE PTR [edx]
  406964:	inc    ebp
  406965:	lods   eax,DWORD PTR ds:[esi]
  406966:	sbb    BYTE PTR [edx],bl
  406968:	xor    eax,0x351a18ad
  40696d:	mov    ebp,0xbd251a18
  406972:	sbb    BYTE PTR [edx],bl
  406974:	and    eax,0x141b1b8c
  406979:	mov    WORD PTR [ebx],ds
  40697b:	sbb    edx,DWORD PTR [esi+ebx*8]
  40697e:	add    bl,BYTE PTR [ebx]
  406980:	inc    esp
  406981:	lds    eax,FWORD PTR [edx]
  406983:	sbb    eax,DWORD PTR [ebp+eax*8-0xe]
  406987:	sbb    dh,BYTE PTR [eax*8-0x3acbe50e]
  40698e:	loop   0x4069aa
  406990:	and    al,0xc5
  406992:	loop   0x4069ae
  406994:	and    al,0xc5
  406996:	rcr    DWORD PTR [edi],cl
  406998:	sbb    eax,edx
  40699a:	retf   
  40699b:	pop    ds
  40699c:	adc    eax,edx
  40699e:	add    esp,DWORD PTR [eax]
  4069a0:	add    BYTE PTR [eax],al
  4069a2:	dec    ebx
  4069a3:	ret    0x1ffb
  4069a6:	inc    ebx
  4069a7:	ret    0x1ff3
  4069aa:	cmp    eax,edx
  4069ac:	jmp    0x4069cd
  4069ae:	xor    eax,edx
  4069b0:	jecxz  0x4069d1
  4069b2:	sub    eax,edx
  4069b4:	fistp  DWORD PTR [edi]
  4069b6:	and    eax,edx
  4069b8:	rcr    DWORD PTR [edi],cl
  4069ba:	sbb    eax,edx
  4069bc:	retf   
  4069bd:	pop    ds
  4069be:	adc    eax,edx
  4069c0:	add    esp,DWORD PTR [eax]
  4069c2:	dec    ebx
  4069c3:	ret    0x1ffb
  4069c6:	inc    ebx
  4069c7:	ret    0x1ff3
  4069ca:	cmp    eax,edx
  4069cc:	jmp    0x4069ed
  4069ce:	xor    eax,edx
  4069d0:	jecxz  0x4069f1
  4069d2:	sub    eax,edx
  4069d4:	fistp  DWORD PTR [edi]
  4069d6:	and    eax,edx
  4069d8:	aam    0x20
  4069da:	sbb    al,bl
  4069dc:	int3   
  4069dd:	and    BYTE PTR [edx],dl
  4069df:	ret    
  4069e0:	add    al,0x21
  4069e2:	dec    edx
  4069e3:	ret    
  4069e4:	cld    
  4069e5:	and    BYTE PTR [edx-0x3d],al
  4069e8:	hlt    
  4069e9:	and    BYTE PTR [edx],bh
  4069eb:	ret    
  4069ec:	in     al,dx
  4069ed:	and    BYTE PTR [edx],dh
  4069ef:	ret    
  4069f0:	in     al,0x20
  4069f2:	sub    al,bl
  4069f4:	fsub   QWORD PTR [eax]
  4069f6:	and    al,bl
  4069f8:	add    ah,dl
  4069fa:	movnti DWORD PTR [ebx],ebx
  4069fd:	int3   
  4069fe:	movnti DWORD PTR [ebx],ebx
  406a01:	add    al,0x4e
  406a03:	rcr    DWORD PTR [ebx],0xfc
  406a06:	add    BYTE PTR [eax],al
  406a08:	dec    edi
  406a09:	rcr    DWORD PTR [ebx],0xf4
  406a0c:	dec    edi
  406a0d:	rcr    DWORD PTR [ebx],0xec
  406a10:	dec    edi
  406a11:	rcr    DWORD PTR [ebx],0xe4
  406a14:	dec    edi
  406a15:	rcr    DWORD PTR [ebx],0xdc
  406a18:	dec    edi
  406a19:	rcr    DWORD PTR [ebx],0xe9
  406a1c:	xor    ebx,esp
  406a1e:	add    ebp,esp
  406a20:	daa    
  406a21:	fadd   DWORD PTR ds:0x7d534f1
  406a27:	repz ror DWORD PTR ss:[ecx],cl
  406a2b:	in     eax,0x28
  406a2d:	ror    BYTE PTR [esp+ebx*8],cl
  406a30:	aas    
  406a31:	ror    DWORD PTR [ebx],1
  406a33:	idiv   DWORD PTR [edx]
  406a35:	ror    BYTE PTR [esi],1
  406a37:	out    dx,al
  406a38:	xor    edi,ecx
  406a3a:	or     eax,0x10ce1cd9
  406a3f:	fstp   DWORD PTR [esi+ecx*8]
  406a42:	adc    al,bh
  406a44:	cmp    eax,0x3df80fcd
  406a49:	int    0xf
  406a4b:	sti    
  406a4c:	ds int3 
  406a4e:	adc    bh,bl
  406a50:	ds int3 
  406a52:	adc    bl,dl
  406a54:	pop    ds
  406a55:	retf   
  406a56:	adc    edx,ebx
  406a58:	pop    ds
  406a59:	retf   
  406a5a:	adc    ebp,ebx
  406a5c:	and    dl,cl
  406a5e:	adc    al,0xd5
  406a60:	sbb    dl,cl
  406a62:	adc    al,0xfd
  406a64:	inc    eax
  406a65:	retf   0xf514
  406a68:	cmp    dl,cl
  406a6a:	adc    al,0xfc
  406a6c:	add    BYTE PTR [eax],al
  406a6e:	inc    ecx
  406a6f:	leave  
  406a70:	adc    esi,esp
  406a72:	cmp    ecx,ecx
  406a74:	adc    eax,DWORD PTR [eax]
  406a76:	imul   ecx,eax,0x13
  406a79:	adc    eax,0x1513c85b
  406a7e:	pop    eax
  406a7f:	leave  
  406a80:	push   ss
  406a81:	push   ss
  406a82:	pop    eax
  406a83:	leave  
  406a84:	push   ss
  406a85:	push   ss
  406a86:	sub    cl,cl
  406a88:	push   ss
  406a89:	push   ss
  406a8a:	sbb    cl,cl
  406a8c:	push   ss
  406a8d:	push   ss
  406a8e:	sbb    edx,ecx
  406a90:	adc    eax,0x15ca1917
  406a95:	pop    ss
  406a96:	jmp    0xd9578064
  406a9b:	leave  
  406a9c:	adc    eax,0x18c2de17
  406aa1:	sbb    dh,bl
  406aa3:	ret    0x1818
  406aa6:	cs ret 0x1818
  406aaa:	cs ret 0x1818
  406aae:	faddp  st(2),st
  406ab0:	sbb    BYTE PTR [eax],bl
  406ab2:	faddp  st(2),st
  406ab4:	sbb    BYTE PTR [eax],bl
  406ab6:	into   
  406ab7:	ret    0x1818
  406aba:	into   
  406abb:	ret    0x1818
  406abe:	ffreep st(3)
  406ac0:	pop    ss
  406ac1:	sbb    edi,ebx
  406ac3:	ret    
  406ac4:	pop    ss
  406ac5:	sbb    DWORD PTR [edi],ebp
  406ac7:	ret    
  406ac8:	pop    ss
  406ac9:	sbb    DWORD PTR [edi],ebp
  406acb:	ret    
  406acc:	pop    ss
  406acd:	sbb    DWORD PTR [edi+0x1917c3],ebx
  406ad3:	add    BYTE PTR [edi-0x70e6e83d],bl
  406ad9:	ret    
  406ada:	pop    ss
  406adb:	sbb    DWORD PTR [edi+0x5c1917c3],ecx
  406ae1:	les    ebx,FWORD PTR [edx]
  406ae3:	sbb    bl,BYTE PTR [esp+eax*8+0x1a]
  406ae7:	sbb    ch,BYTE PTR [esp+eax*8]
  406aea:	sbb    bl,BYTE PTR [edx]
  406aec:	sub    al,0xc4
  406aee:	sbb    bl,BYTE PTR [edx]
  406af0:	das    
  406af1:	stos   DWORD PTR es:[edi],eax
  406af2:	sbb    BYTE PTR [edx],bl
  406af4:	xor    eax,0x251a18ab
  406af9:	mov    ebx,0xbb251a18
  406afe:	sbb    BYTE PTR [edx],bl
  406b00:	adc    eax,0x141b198c
  406b05:	mov    WORD PTR [ecx],ds
  406b07:	sbb    eax,DWORD PTR [eax+eiz*8+0x17]
  406b0b:	sbb    eax,DWORD PTR [eax+eiz*8+0x17]
  406b0f:	sbb    esi,DWORD PTR [eax+edx*4]
  406b12:	sbb    DWORD PTR [ebx],ebx
  406b14:	xor    al,0x90
  406b16:	sbb    DWORD PTR [ebx],ebx
  406b18:	and    al,0x80
  406b1a:	sbb    DWORD PTR [ebx],ebx
  406b1c:	and    al,0x80
  406b1e:	sbb    DWORD PTR [ebx],ebx
  406b20:	sbb    eax,DWORD PTR [edi-0x79d0fffe]
  406b26:	add    al,BYTE PTR [eax]
  406b28:	das    
  406b29:	mov    DWORD PTR [edx],eax
  406b2b:	add    BYTE PTR [edi],ch
  406b2d:	mov    BYTE PTR [edx],al
  406b2f:	add    BYTE PTR [edi],ch
  406b31:	mov    eax,DWORD PTR [edx]
  406b33:	add    BYTE PTR [edi],ch
  406b35:	add    BYTE PTR [edx],0x0
  406b38:	add    BYTE PTR [eax],al
  406b3a:	das    
  406b3b:	lea    eax,[edx]
  406b3d:	add    BYTE PTR [edi],ch
  406b3f:	test   BYTE PTR [edx],al
  406b41:	add    BYTE PTR [edi],ch
  406b43:	jg     0x406b47
  406b45:	add    BYTE PTR [edi],ch
  406b47:	add    DWORD PTR [edx],0x2932f00
  406b4d:	add    BYTE PTR [edi],ch
  406b4f:	lea    eax,[edx]
  406b51:	add    BYTE PTR [edi],ch
  406b53:	xchg   edi,eax
  406b54:	add    al,BYTE PTR [eax]
  406b56:	das    
  406b57:	xchg   ebx,eax
  406b58:	add    al,BYTE PTR [eax]
  406b5a:	das    
  406b5b:	jg     0x406b5f
  406b5d:	add    BYTE PTR [edi],ch
  406b5f:	mov    ebx,0xe72f0002
  406b64:	add    al,0x0
  406b66:	das    
  406b67:	fild   WORD PTR [eax+eax*1]
  406b6a:	das    
  406b6b:	(bad)  
  406b6d:	add    ebp,DWORD PTR [edi]
  406b6f:	(bad)  
  406b71:	add    ebp,DWORD PTR [edi]
  406b73:	fisub  WORD PTR [edi]
  406b75:	add    al,0x2f
  406b77:	fidiv  WORD PTR [edi]
  406b79:	add    al,0x2f
  406b7b:	fiadd  WORD PTR [edi]
  406b7d:	add    al,0x2f
  406b7f:	fdivrp st(7),st
  406b81:	add    ebp,DWORD PTR [edi]
  406b83:	fisub  WORD PTR [edi+0x4]
  406b86:	das    
  406b87:	fiadd  WORD PTR [edi+0x4]
  406b8a:	das    
  406b8b:	fisub  WORD PTR [edi]
  406b8d:	add    al,0x2f
  406b8f:	fiadd  WORD PTR [edi+0x4]
  406b92:	das    
  406b93:	fsubrp st(7),st
  406b95:	add    ebp,DWORD PTR [edi]
  406b97:	fsubrp st(7),st
  406b99:	add    ebp,DWORD PTR [edi]
  406b9b:	fsubrp st(7),st
  406b9d:	add    eax,DWORD PTR [eax]
  406b9f:	add    BYTE PTR [edi],ch
  406ba1:	fsubp  st(0),st
  406ba3:	add    ebp,DWORD PTR [edi]
  406ba5:	fsubp  st(1),st
  406ba7:	add    ebp,DWORD PTR [edi]
  406ba9:	fsubp  st(2),st
  406bab:	add    ebp,DWORD PTR [edi]
  406bad:	fsubp  st(3),st
  406baf:	add    ebp,DWORD PTR [edi]
  406bb1:	fsubrp st(5),st
  406bb3:	add    ebp,DWORD PTR [edi]
  406bb5:	(bad)  
  406bb7:	add    ebp,DWORD PTR [edi]
  406bb9:	(bad)  
  406bbb:	add    ebp,DWORD PTR [edi]
  406bbd:	(bad)  
  406bbf:	add    ebp,DWORD PTR [edi]
  406bc1:	(bad)  
  406bc3:	add    ebp,DWORD PTR [edi]
  406bc5:	faddp  st(7),st
  406bc7:	add    ebp,DWORD PTR [edi]
  406bc9:	fidiv  WORD PTR [edi+0x27de2f03]
  406bcf:	add    al,0x2f
  406bd1:	fiadd  WORD PTR [edi+0x4]
  406bd4:	das    
  406bd5:	fisub  WORD PTR [edi+0x3]
  406bd8:	das    
  406bd9:	fisub  WORD PTR [edi-0x1821d0fd]
  406bdf:	add    al,0x2f
  406be1:	fisub  WORD PTR [edi+0x4]
  406be4:	das    
  406be5:	fiadd  WORD PTR [eax]
  406be7:	jmp    0xe9414a16
  406bec:	xor    esi,ebx
  406bee:	add    cl,ch
  406bf0:	pusha  
  406bf1:	pushf  
  406bf2:	(bad)  
  406bf3:	jmp    0xe9414a26
  406bf8:	and    al,0xde
  406bfa:	add    cl,ch
  406bfc:	xor    dh,bl
  406bfe:	add    cl,ch
  406c00:	sbb    al,0xde
  406c02:	add    cl,ch
  406c04:	add    BYTE PTR [eax],al
  406c06:	adc    al,0xde
  406c08:	add    cl,ch
  406c0a:	or     al,0xde
  406c0c:	add    cl,ch
  406c0e:	pop    esp
  406c0f:	fiadd  WORD PTR [eax]
  406c11:	jmp    0xea3f0802
  406c16:	or     al,0x9c
  406c18:	(bad)  
  406c19:	jmp    0xe42c:0xe400e22c
  406c20:	add    dh,ch
  406c22:	sub    al,0xe6
  406c24:	add    al,dh
  406c26:	sub    al,0xe8
  406c28:	add    dl,ah
  406c2a:	sub    al,0xe9
  406c2c:	add    dh,bl
  406c2e:	sub    al,0xed
  406c30:	add    dl,bh
  406c32:	sub    al,0xf3
  406c34:	add    BYTE PTR [edx],al
  406c36:	xor    edi,ebx
  406c38:	add    dl,cl
  406c3a:	sub    al,0xc7
  406c3c:	add    dl,bl
  406c3e:	sub    al,0xd7
  406c40:	add    BYTE PTR [edx-0x75fed0d4],ch
  406c46:	sub    al,0xf
  406c48:	add    DWORD PTR [edx+0x2c],ebp
  406c4b:	aas    
  406c4c:	add    DWORD PTR [edx],ebp
  406c4e:	sub    al,0x7f
  406c50:	add    ebx,ebp
  406c52:	sub    eax,0x2ce900de
  406c57:	fiadd  WORD PTR [eax]
  406c59:	stc    
  406c5a:	sub    al,0xee
  406c5c:	add    cl,bh
  406c5e:	sub    al,0xee
  406c60:	add    BYTE PTR [eax],al
  406c62:	data16 fist WORD PTR [eax]
  406c65:	add    BYTE PTR [esi-0x21],dl
  406c68:	adc    BYTE PTR [eax],al
  406c6a:	add    BYTE PTR [eax],al
  406c6c:	push   edi
  406c6d:	fisttp WORD PTR [edi]
  406c6f:	add    BYTE PTR [edi+0x64000fdf],al
  406c75:	fist   WORD PTR [edx]
  406c77:	add    BYTE PTR [edi+ebx*8+0x12],dl
  406c7b:	add    BYTE PTR [ebp-0x21],dl
  406c7e:	adc    DWORD PTR [eax],eax
  406c80:	inc    ebp
  406c81:	fist   WORD PTR [ecx]
  406c83:	add    BYTE PTR [edx-0x21],ah
  406c86:	adc    al,0x0
  406c88:	(bad)  
  406c89:	fist   WORD PTR [eax+eax*1]
  406c8c:	push   ebx
  406c8d:	fist   WORD PTR [ebx]
  406c8f:	add    BYTE PTR [ebx],al
  406c91:	fist   WORD PTR [ebx]
  406c93:	add    BYTE PTR [esi],ah
  406c95:	(bad)  
  406c97:	add    bl,dl
  406c99:	fiadd  WORD PTR [eax]
  406c9b:	add    BYTE PTR [edi],al
  406c9d:	fild   WORD PTR [edx]
  406c9f:	add    BYTE PTR ds:0x130004df,dl
  406ca5:	fild   WORD PTR ds:0xbdeff00
  406cab:	add    bh,dl
  406cad:	ficom  WORD PTR [edi]
  406caf:	add    BYTE PTR [edi],dh
  406cb1:	loop   0x406ce2
  406cb3:	add    BYTE PTR [edi+0x47005fde],dl
  406cb9:	loop   0x406c7a
  406cbb:	add    bh,al
  406cbd:	fistp  QWORD PTR [edi+0x1]
  406cc0:	xlat   BYTE PTR ds:[ebx]
  406cc1:	loopne 0x406cc2
  406cc3:	add    dl,bh
  406cc5:	call   0xbff:0xe6c70601
  406ccc:	(bad)  
  406ccd:	out    dx,al
  406cce:	call   DWORD PTR [edi]
  406cd0:	add    BYTE PTR [eax],al
  406cd2:	xchg   edi,eax
  406cd3:	mov    esi,0x9e972fff
  406cd8:	add    DWORD PTR [eax-0x7a],esp
  406cdb:	fiadd  WORD PTR [eax]
  406cdd:	add    BYTE PTR [edi],ch
  406cdf:	xchg   ebp,eax
  406ce0:	add    dl,BYTE PTR [eax]
  406ce2:	das    
  406ce3:	xchg   ebp,eax
  406ce4:	add    dl,BYTE PTR [eax]
  406ce6:	das    
  406ce7:	mov    dh,0x2
  406ce9:	adc    DWORD PTR [edi],ebp
  406ceb:	mov    bh,0x2
  406ced:	adc    ch,BYTE PTR [edi]
  406cef:	mov    eax,0xb12f1302
  406cf4:	add    dl,BYTE PTR [edi+ebp*1]
  406cf7:	call   0x1602:0x932f1502
  406cfe:	das    
  406cff:	pushf  
  406d00:	add    dl,BYTE PTR [edi]
  406d02:	das    
  406d03:	lea    eax,[edx]
  406d05:	sbb    BYTE PTR [edi],ch
  406d07:	jle    0x406d0b
  406d09:	sbb    DWORD PTR [edi],ebp
  406d0b:	jg     0x406d0f
  406d0d:	sbb    ch,BYTE PTR [edi]
  406d0f:	mov    al,0x2
  406d11:	sbb    ebp,DWORD PTR [edi]
  406d13:	stos   DWORD PTR es:[edi],eax
  406d14:	add    bl,BYTE PTR [edi+ebp*1]
  406d17:	loop   0x406d1d
  406d19:	sbb    eax,0x4002472f
  406d1e:	das    
  406d1f:	ds call 0xeb9bfb9a
  406d25:	arpl   WORD PTR [edi+0x57],cx
  406d28:	jecxz  0x406d9b
  406d2a:	mov    gs,WORD PTR [edx+0x558a73df]
  406d30:	and    dh,BYTE PTR [eax+0x4e]
  406d33:	push   esp
  406d34:	cmc    
  406d35:	add    BYTE PTR fs:[eax],al
  406d38:	dec    ebx
  406d39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d3a:	out    dx,al
  406d3b:	outs   dx,BYTE PTR ds:[esi]
  406d3c:	cmove  esp,DWORD PTR [edx]
  406d3f:	jb     0x406d9b
  406d41:	popa   
  406d42:	out    dx,al
  406d43:	push   0x6622625a
  406d48:	cmp    dh,BYTE PTR [ecx-0x1b]
  406d4b:	jae    0x406d93
  406d4d:	push   0x87252de8
  406d52:	add    al,BYTE PTR [eax]
  406d54:	das    
  406d55:	test   DWORD PTR [eax+0x43],0x4c07de2f
  406d5c:	in     al,dx
  406d5d:	fucom  st(7)
  406d5f:	add    ebp,DWORD PTR [edi]
  406d61:	fsubp  st(5),st
  406d63:	sub    DWORD PTR [edi-0x507a97a0],0xffffffde
  406d6a:	out    0x13,eax
  406d6c:	sub    al,0x60
  406d6e:	push   0xdc5ead7e
  406d73:	add    BYTE PTR [edx],dh
  406d75:	and    esp,DWORD PTR ds:0x6d63abc1
  406d7b:	add    DWORD PTR [edi],ebp
  406d7d:	(bad)  
  406d7f:	xor    ebp,DWORD PTR [edi+0x2f84682e]
  406d85:	out    0xe7,al
  406d87:	sub    ecx,DWORD PTR [eax]
  406d89:	(bad)  
  406d8a:	pop    ss
  406d8b:	iret   
  406d8c:	mov    eax,0xf803e6dd
  406d91:	int    0xb7
  406d93:	sar    DWORD PTR [eax+0x66],cl
  406d96:	call   0xffe9c9e
  406d9b:	test   BYTE PTR [eax],al
  406d9d:	add    BYTE PTR [edi+0x2f04685d],ah
  406da3:	faddp  st(7),st
  406da5:	jecxz  0x406e0f
  406da7:	push   es
  406da8:	shr    bl,0x28
  406dab:	out    0xee,al
  406dad:	sti    
  406dae:	mov    BYTE PTR [esi],cl
  406db0:	mov    bh,0xf3
  406db2:	and    dh,0xdf
  406db5:	add    ebp,DWORD PTR [edi]
  406db7:	out    0xe7,al
  406db9:	or     ebp,DWORD PTR [edi]
  406dbb:	loope  0x406dac
  406dbd:	add    ebp,DWORD PTR [edi]
  406dbf:	fidivr WORD PTR [edx-0x4021eafd]
  406dc5:	add    edi,DWORD PTR [edx-0x22]
  406dc8:	fwait
  406dc9:	add    eax,DWORD PTR [esi+ebx*8]
  406dcc:	ret    0x6903
  406dcf:	ficomp WORD PTR [ecx+0xde6103]
  406dd5:	sahf   
  406dd6:	sub    al,0x28
  406dd8:	add    DWORD PTR [ecx+0x2200d52c],edx
  406dde:	xor    edx,ebp
  406de0:	add    BYTE PTR ds:0x1312b,ch
  406de6:	xor    ebx,esi
  406de8:	add    BYTE PTR [esi],cl
  406dea:	pop    edi
  406deb:	cwde   
  406dec:	inc    BYTE PTR [esi]
  406dee:	push   edi
  406def:	sbb    eax,DWORD PTR [ecx]
  406df1:	(bad)  
  406df2:	arpl   WORD PTR [eax-0xccb502],bx
  406df8:	add    BYTE PTR [ebx+0x2b],cl
  406dfb:	pop    es
  406dfc:	add    DWORD PTR [edi],edx
  406dfe:	xor    eax,DWORD PTR [ebx]
  406e00:	add    DWORD PTR ds:0xc82b0000,edx
  406e06:	add    BYTE PTR ds:0xfd010a33,cl
  406e0c:	sub    al,0xde
  406e0e:	add    BYTE PTR [edi],ch
  406e10:	ins    BYTE PTR es:[edi],dx
  406e11:	and    eax,0xfd4ffb42
  406e16:	je     0x406e24
  406e18:	xor    ebx,esi
  406e1a:	add    BYTE PTR [edi],ah
  406e1c:	in     al,dx
  406e1d:	es inc eax
  406e1f:	int    0xf8
  406e21:	and    DWORD PTR [eax-0x33],ebp
  406e24:	sets   dh
  406e27:	scas   eax,DWORD PTR es:[edi]
  406e28:	in     eax,dx
  406e29:	es inc edi
  406e2b:	mov    ebp,0xaa690cff
  406e30:	adc    edi,esi
  406e32:	addr16 iret 
  406e34:	(bad)  
  406e36:	add    DWORD PTR [edi-0x3bbad913],ebp
  406e3c:	fisttp QWORD PTR [ebx]
  406e3e:	jae    0x406dd6
  406e40:	fist   DWORD PTR [edi+0x1df390fe]
  406e46:	add    edx,edi
  406e48:	mov    ds:0x9bfa011e,eax
  406e4d:	push   ds
  406e4e:	add    DWORD PTR [eax],eax
  406e50:	into   
  406e51:	jb     0x406e94
  406e53:	add    BYTE PTR [edi-0x7affbf46],bl
  406e59:	jb     0x406e9c
  406e5b:	add    BYTE PTR [ebp-0x4affbe86],dh
  406e61:	jae    0x406ea4
  406e63:	add    BYTE PTR [ebx],ah
  406e65:	loop   0x406ed2
  406e67:	add    BYTE PTR [eax],al
  406e69:	add    BYTE PTR [esi+0x360000db],dl
  406e6f:	loop   0x406e9c
  406e71:	add    al,ch
  406e73:	loope  0x406e75
  406e75:	add    BYTE PTR [esi+0x330000db],al
  406e7b:	loop   0x406ee8
  406e7d:	add    BYTE PTR [ebx],ch
  406e7f:	loop   0x406ef1
  406e81:	add    BYTE PTR [ebx-0x25],ch
  406e84:	jno    0x406e86
  406e86:	inc    esi
  406e87:	fild   DWORD PTR [eax]
  406e89:	add    BYTE PTR [edx],ch
  406e8b:	loop   0x406ef8
  406e8d:	add    BYTE PTR [esi],ah
  406e8f:	loop   0x406e91
  406e91:	add    dh,dl
  406e93:	mov    edx,0xdb660000
  406e98:	add    BYTE PTR [eax],al
  406e9a:	and    eax,0x2b0068db
  406e9f:	loop   0x406f0d
  406ea1:	add    BYTE PTR [edx],al
  406ea3:	(bad)  [ecx]
  406ea5:	add    BYTE PTR [edx+eiz*8],dh
  406ea8:	cs add dl,bh
  406eab:	fisubr DWORD PTR [eax+eax*1-0x3e]
  406eaf:	fiadd  DWORD PTR [eax]
  406eb1:	add    BYTE PTR [ebp-0x459ab85e],dl
  406eb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406eb8:	ins    BYTE PTR es:[edi],dx
  406eb9:	outs   dx,DWORD PTR ds:[esi]
  406eba:	test   eax,0xa26f4480
  406ebf:	mov    dh,0x65
  406ec1:	jb     0x406e59
  406ec3:	jnp    0x406f37
  406ec5:	push   0xdac6
  406eca:	das    
  406ecb:	pop    edx
  406ecc:	mov    esi,0x2f000041
  406ed1:	and    BYTE PTR [ebp-0x5a75d0c0],0x40
  406ed8:	das    
  406ed9:	and    BYTE PTR [ebp-0x4185d0c0],0x41
  406ee0:	das    
  406ee1:	and    BYTE PTR [ebp-0x3f25d0c0],0x41
  406ee8:	das    
  406ee9:	xor    DWORD PTR [ecx+eax*2+0x63e0232f],ebp
  406ef0:	or     DWORD PTR [eax],esp
  406ef2:	in     eax,dx
  406ef3:	imul   eax,DWORD PTR [ecx+esi*1],0xd5ff6de6
  406efa:	bnd jb 0x406ee0
  406efd:	(bad)  
  406efe:	jmp    0x406f77
  406f00:	in     eax,0x25
  406f02:	fisubr WORD PTR [eax-0x38]
  406f05:	stc    
  406f06:	stc    
  406f07:	call   DWORD PTR [eax-0x14]
  406f0a:	lock jae 0x406ecc
  406f0d:	stos   BYTE PTR es:[edi],al
  406f0e:	and    eax,0xebefb82f
  406f13:	sub    eax,0x66e6edcd
  406f18:	add    esp,esp
  406f1a:	jecxz  0x406f88
  406f1c:	pop    eax
  406f1d:	xchg   DWORD PTR [edx],eax
  406f1f:	add    BYTE PTR [edi],ch
  406f21:	fcomip st,st(0)
  406f23:	jae    0x406ec4
  406f25:	shl    DWORD PTR [ebx],0x2f
  406f28:	cwde   
  406f29:	lods   al,BYTE PTR ds:[esi]
  406f2a:	in     eax,dx
  406f2b:	sub    eax,0x66e59c90
  406f30:	xchg   ebx,eax
  406f31:	call   0xaa88:0x6324
  406f38:	and    eax,0xc4eb2f00
  406f3d:	aas    
  406f3e:	das    
  406f3f:	or     eax,ebp
  406f41:	aas    
  406f42:	das    
  406f43:	mov    al,ds:0xde2f6502
  406f48:	cdq    
  406f49:	add    eax,DWORD PTR [ecx-0x22]
  406f4c:	test   BYTE PTR [ebx],al
  406f4e:	pop    ebx
  406f4f:	(bad)  
  406f51:	add    edi,ebp
  406f53:	fnstsw WORD PTR [ebp-0x6c21acfd]
  406f59:	add    eax,DWORD PTR [ebx-0x22]
  406f5c:	out    0x3,eax
  406f5e:	das    
  406f5f:	fisubr WORD PTR [esi+0x7a2e1cde]
  406f65:	in     al,0xc
  406f67:	or     ecx,DWORD PTR [ebx-0x8]
  406f6a:	out    0x3,eax
  406f6c:	inc    esi
  406f6d:	jecxz  0x406ef7
  406f6f:	xchg   ebp,eax
  406f70:	jmp    0xe81e9e7a
  406f75:	add    ebp,DWORD PTR [edi]
  406f77:	fsubp  st(1),st
  406f79:	add    eax,0x3e9de2f
  406f7e:	das    
  406f7f:	fsubp  st(0),st
  406f81:	add    al,0x2f
  406f83:	fsubrp st(3),st
  406f85:	add    ebp,DWORD PTR [edi]
  406f87:	fsubp  st(1),st
  406f89:	add    al,0x2f
  406f8b:	fsubrp st(5),st
  406f8d:	add    ebp,DWORD PTR [edi]
  406f8f:	fsubp  st(0),st
  406f91:	add    al,0x2e
  406f93:	fucomip st,st(0)
  406f95:	add    al,0x2e
  406f97:	fucomip st,st(0)
  406f99:	add    al,0x0
  406f9b:	add    BYTE PTR [esi],ch
  406f9d:	fucomip st,st(0)
  406f9f:	add    al,0x2e
  406fa1:	loope  0x406f8d
  406fa3:	add    al,0x2e
  406fa5:	fucomip st,st(0)
  406fa7:	add    al,0x2e
  406fa9:	fucomip st,st(0)
  406fab:	add    eax,0x5e9df2e
  406fb0:	sub    eax,0x2d05e9e0
  406fb5:	loopne 0x406fa0
  406fb7:	pop    es
  406fb8:	xor    ebx,edx
  406fba:	jmp    0xea1a9cc4
  406fbf:	add    eax,0xeb00e02d
  406fc4:	sub    bl,dl
  406fc6:	add    al,0xe5
  406fc8:	xor    ah,al
  406fca:	add    ch,ch
  406fcc:	sub    ah,al
  406fce:	add    ch,bl
  406fd0:	xor    ah,al
  406fd2:	add    al,0xed
  406fd4:	sub    al,ah
  406fd6:	add    ch,bl
  406fd8:	xor    bh,bl
  406fda:	jmp    edi
  406fdc:	sub    ebx,edi
  406fde:	jmp    ebx
  406fe0:	aaa    
  406fe1:	mov    edi,0xe129e91f
  406fe6:	push   es
  406fe7:	jmp    0xe129:0xea01e131
  406fee:	add    edx,ebp
  406ff0:	xor    ecx,esp
  406ff2:	add    ebp,edx
  406ff4:	sub    ebx,ebx
  406ff6:	add    edx,ebp
  406ff8:	xor    ecx,esp
  406ffa:	add    eax,ebp
  406ffc:	sub    ebx,edi
  406ffe:	add    eax,ebp
  407000:	add    BYTE PTR [eax],al
  407002:	xor    edi,ebx
  407004:	add    eax,ebp
  407006:	sub    edi,ebx
  407008:	jmp    edi
  40700a:	xor    edi,ebx
  40700c:	add    BYTE PTR [eax],ah
  40700e:	sub    ebx,esi
  407010:	add    BYTE PTR [ecx],cl
  407012:	lods   eax,DWORD PTR ds:[esi]
  407013:	pop    ds
  407014:	add    DWORD PTR [ebx],edx
  407016:	sub    ebx,esi
  407018:	add    BYTE PTR [eax],al
  40701a:	lods   eax,DWORD PTR ds:[esi]
  40701b:	pop    ds
  40701c:	add    DWORD PTR [edx],eax
  40701e:	sub    ebx,esi
  407020:	add    BYTE PTR [eax],dl
  407022:	lods   eax,DWORD PTR ds:[esi]
  407023:	and    BYTE PTR [ecx],al
  407025:	cmc    
  407026:	sub    al,0xde
  407028:	add    al,ah
  40702a:	cdq    
  40702b:	and    BYTE PTR [ecx],al
  40702d:	in     al,0x2c
  40702f:	fiadd  WORD PTR [eax]
  407031:	adc    DWORD PTR [eax+0x2cd70120],ecx
  407037:	fiadd  WORD PTR [eax]
  407039:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40703a:	jns    0x40705c
  40703c:	add    DWORD PTR [eax],eax
  40703e:	jmp    0x8e407122
  407043:	adc    al,0x43
  407045:	add    BYTE PTR [esi-0x21],dl
  407048:	add    BYTE PTR [eax],al
  40704a:	xchg   esp,eax
  40704b:	pop    ebp
  40704c:	inc    ebx
  40704d:	add    BYTE PTR [edi-0x21],al
  407050:	add    BYTE PTR [eax],al
  407052:	ss pop ebp
  407054:	inc    ebx
  407055:	add    BYTE PTR [edi+ebx*8+0x0],dl
  407059:	add    BYTE PTR [ebx+0x60],al
  40705c:	inc    ebx
  40705d:	add    BYTE PTR [ebp-0x21],al
  407060:	add    BYTE PTR [eax],al
  407062:	or     BYTE PTR [eax+0x43],ah
  407065:	add    BYTE PTR [eax],al
  407067:	add    BYTE PTR [edx],dl
  407069:	fild   WORD PTR [eax]
  40706b:	add    BYTE PTR [edi+0x3004314],ch
  407071:	fiadd  DWORD PTR [eax]
  407073:	add    dh,dl
  407075:	pop    esi
  407076:	inc    ebx
  407077:	add    BYTE PTR [eax],dl
  407079:	fiadd  DWORD PTR [eax]
  40707b:	add    ah,cl
  40707d:	pop    esi
  40707e:	inc    ebx
  40707f:	add    BYTE PTR [ecx],al
  407081:	fiadd  DWORD PTR [eax]
  407083:	add    bl,cl
  407085:	pop    esi
  407086:	inc    ebx
  407087:	add    dh,cl
  407089:	fld    DWORD PTR [eax]
  40708b:	add    BYTE PTR [ebx+0x5e],dh
  40708e:	inc    ebx
  40708f:	add    bh,bl
  407091:	fld    DWORD PTR [eax]
  407093:	add    BYTE PTR [ecx+0x14],ah
  407096:	inc    ebx
  407097:	add    ah,cl
  407099:	fld    DWORD PTR [eax]
  40709b:	add    BYTE PTR [esi],cl
  40709d:	adc    eax,DWORD PTR [ebx+0x0]
  4070a0:	mov    ebp,0x4f0000d9
  4070a5:	adc    eax,DWORD PTR [ebx+0x0]
  4070a8:	mov    bl,dl
  4070aa:	add    BYTE PTR [eax],al
  4070ac:	neg    BYTE PTR [ebx+eax*2+0x0]
  4070b0:	fiadd  DWORD PTR [eax]
  4070b3:	add    dl,bl
  4070b5:	pop    esp
  4070b6:	inc    ebx
  4070b7:	add    BYTE PTR [edi],ch
  4070b9:	sti    
  4070ba:	add    al,0x0
  4070bc:	das    
  4070bd:	dec    ebx
  4070be:	add    BYTE PTR [edx+0x2f],0x5d
  4070c2:	add    DWORD PTR [eax+0x2f],0x2f00028e
  4070c9:	xchg   BYTE PTR [edx],al
  4070cb:	add    BYTE PTR [eax],al
  4070cd:	add    BYTE PTR [edi],ch
  4070cf:	pop    ebp
  4070d0:	add    DWORD PTR [eax+0x2f],0x2f000283
  4070d7:	ins    DWORD PTR es:[edi],dx
  4070d8:	add    al,BYTE PTR [eax]
  4070da:	das    
  4070db:	add    eax,0x972f4081
  4070e0:	add    al,BYTE PTR [eax]
  4070e2:	das    
  4070e3:	jge    0x4070e7
  4070e5:	add    BYTE PTR [edi],ch
  4070e7:	jno    0x407167
  4070e9:	inc    eax
  4070ea:	das    
  4070eb:	mov    ch,0x2
  4070ed:	add    BYTE PTR [edi],ch
  4070ef:	lods   eax,DWORD PTR ds:[esi]
  4070f0:	add    al,BYTE PTR [eax]
  4070f2:	das    
  4070f3:	int    0x80
  4070f5:	inc    eax
  4070f6:	das    
  4070f7:	mov    es,WORD PTR [edx]
  4070f9:	add    BYTE PTR [edi],ch
  4070fb:	lea    eax,[edx]
  4070fd:	add    BYTE PTR [edi],ch
  4070ff:	xchg   ecx,eax
  407100:	jle    0x407142
  407102:	das    
  407103:	mov    al,BYTE PTR [edx]
  407105:	add    BYTE PTR [edi],ch
  407107:	jns    0x40710b
  407109:	add    BYTE PTR [edi],ch
  40710b:	jge    0x407105
  40710d:	inc    edx
  40710e:	das    
  40710f:	test   DWORD PTR [edx],eax
  407111:	add    BYTE PTR [edi],ch
  407113:	test   DWORD PTR [edx],eax
  407115:	add    BYTE PTR [edi],ch
  407117:	xchg   edi,eax
  407118:	pop    es
  407119:	inc    ecx
  40711a:	das    
  40711b:	das    
  40711c:	pop    es
  40711d:	inc    ecx
  40711e:	das    
  40711f:	test   DWORD PTR [edx],eax
  407121:	add    BYTE PTR [edi],ch
  407123:	nop
  407124:	or     BYTE PTR [ecx+0x2f],al
  407127:	sahf   
  407128:	or     BYTE PTR [ecx+0x2f],al
  40712b:	mov    dh,0x2
  40712d:	cmp    eax,0x407ac32f
  407132:	add    BYTE PTR [eax],al
  407134:	das    
  407135:	fisub  WORD PTR [ebx]
  407137:	add    al,0x32
  407139:	ficom  WORD PTR [ebx+0x12de6f7a]
  40713f:	add    al,0x48
  407141:	fisub  WORD PTR [ebx+0x7a]
  407144:	outs   dx,DWORD PTR ds:[esi]
  407145:	fdivp  st(3),st
  407147:	add    esi,DWORD PTR [edx]
  407149:	fidivr WORD PTR [ebx+0x17de6f7a]
  40714f:	add    esi,DWORD PTR [edx]
  407151:	fidiv  WORD PTR [ebx-0x73219086]
  407157:	add    edi,DWORD PTR [ecx]
  407159:	fiadd  WORD PTR [ebx-0x27219086]
  40715f:	add    esp,DWORD PTR [ebx]
  407161:	ficomp WORD PTR [ebx+0x7fde6f7a]
  407167:	add    esi,DWORD PTR [esi]
  407169:	fisub  WORD PTR [edi-0x13221086]
  40716f:	add    esi,DWORD PTR [ecx]
  407171:	fisubr WORD PTR [edi+0x58ddef7a]
  407177:	add    al,0x32
  407179:	ficom  WORD PTR [edi]
  40717b:	jge    0x40716c
  40717d:	fnstsw WORD PTR [eax]
  40717f:	add    al,0x2c
  407181:	fdivp  st(3),st
  407183:	jl     0x407174
  407185:	fisttp QWORD PTR [ecx-0x2021c3fc]
  40718b:	jl     0x40717c
  40718d:	fstp   QWORD PTR [ebx-0x2421dafc]
  407193:	jl     0x407184
  407195:	frstor [ebx]
  407197:	add    al,0x0
  407199:	add    BYTE PTR [ecx],dh
  40719b:	fsubrp st(3),st
  40719d:	jl     0x40718e
  40719f:	fst    st(1)
  4071a1:	add    esi,DWORD PTR [ecx]
  4071a3:	fimul  WORD PTR [ebx-0x8221084]
  4071a9:	add    esi,DWORD PTR [esi]
  4071ab:	fidiv  WORD PTR [edi+0x7c]
  4071ae:	outs   dx,DWORD PTR ds:[esi]
  4071af:	fiadd  WORD PTR [eax]
  4071b1:	jl     0x4071e6
  4071b3:	fiadd  DWORD PTR [eax]
  4071b5:	adc    DWORD PTR [ebx+0x334d011e],0x833d00e6
  4071bf:	push   ds
  4071c0:	add    edi,edi
  4071c2:	sub    al,0xe0
  4071c4:	add    BYTE PTR ds:0xa0011e73,bl
  4071ca:	sub    al,0xdd
  4071cc:	add    BYTE PTR [ecx],dh
  4071ce:	arpl   WORD PTR [esi],bx
  4071d0:	add    DWORD PTR [edx],ecx
  4071d2:	xor    ebx,edx
  4071d4:	add    BYTE PTR [ecx],ch
  4071d6:	push   ebx
  4071d7:	push   ds
  4071d8:	add    DWORD PTR [ebx+0x5500e72c],edi
  4071de:	inc    ebx
  4071df:	push   ds
  4071e0:	add    DWORD PTR [esi+0x33],edx
  4071e3:	into   
  4071e4:	add    BYTE PTR [ecx+0x33],ch
  4071e7:	push   ds
  4071e8:	add    esp,ebx
  4071ea:	sub    al,0xd9
  4071ec:	add    BYTE PTR [ecx+0x25011e24],al
  4071f2:	xor    esp,edi
  4071f4:	add    BYTE PTR [ebp+0x14],bh
  4071f7:	push   ds
  4071f8:	add    DWORD PTR [edi+0x4900e42c],ecx
  4071fe:	add    BYTE PTR [eax],al
  407200:	add    ebx,DWORD PTR [esi]
  407202:	add    edx,eax
  407204:	sub    al,0xec
  407206:	add    BYTE PTR ds:0x5f011df3,bl
  40720c:	sub    al,0xbe
  40720e:	add    BYTE PTR [ecx],dl
  407210:	jecxz  0x40722f
  407212:	add    DWORD PTR [esp+ebp*1-0x2cf6ff26],ebp
  407219:	sbb    eax,0xbf333601
  40721e:	add    BYTE PTR [ebp+0x50011da9],bl
  407224:	sub    al,0xcc
  407226:	add    BYTE PTR [ecx+0x11da9],ah
  40722c:	sub    al,0xda
  40722e:	and    al,BYTE PTR [eax]
  407230:	push   0x58
  407232:	inc    ecx
  407233:	add    ah,bl
  407235:	fisttp DWORD PTR [eax+eax*1]
  407238:	jp     0x407292
  40723a:	inc    ecx
  40723b:	add    BYTE PTR [edi-0x25],ch
  40723e:	sbb    DWORD PTR [eax],eax
  407240:	push   cs
  407241:	pop    ecx
  407242:	inc    ecx
  407243:	add    BYTE PTR [ebp-0x11fff225],dh
  407249:	pop    eax
  40724a:	inc    ecx
  40724b:	add    BYTE PTR [ebx-0x3dfff725],cl
  407251:	pop    eax
  407252:	inc    ecx
  407253:	add    BYTE PTR [ebp-0x25],dl
  407256:	add    eax,DWORD PTR [eax]
  407258:	mov    edx,0xb9004158
  40725d:	fild   DWORD PTR [edx]
  40725f:	add    BYTE PTR [esi+0x4158],al
  407265:	add    BYTE PTR ds:0xde0014db,dh
  40726b:	pop    eax
  40726c:	inc    ecx
  40726d:	add    BYTE PTR [ebx+ebx*8+0x586a000f],dh
  407274:	inc    ecx
  407275:	add    BYTE PTR [ebx+0x76000fdc],bl
  40727b:	pop    eax
  40727c:	inc    ecx
  40727d:	add    cl,cl
  40727f:	fiadd  DWORD PTR ds:0x415a7e00
  407285:	add    bl,cl
  407287:	fimul  DWORD PTR [esi]
  407289:	add    BYTE PTR [esi+0x58],bl
  40728c:	inc    ecx
  40728d:	add    BYTE PTR [edi+0x7e000cda],ah
  407293:	pop    eax
  407294:	inc    ecx
  407295:	add    ah,bh
  407297:	fld    DWORD PTR [eax+eax*1]
  40729a:	pop    ax
  40729c:	inc    ecx
  40729d:	add    BYTE PTR [ebx+0x6e0005da],bl
  4072a3:	pop    eax
  4072a4:	inc    ecx
  4072a5:	add    BYTE PTR [edi],ch
  4072a7:	lods   al,BYTE PTR ds:[esi]
  4072a8:	add    cl,BYTE PTR ds:0x40873d2f
  4072ae:	das    
  4072af:	mov    BYTE PTR [edx],al
  4072b1:	or     BYTE PTR [edi],ch
  4072b3:	rol    DWORD PTR [esi+0x5622f40],1
  4072b9:	or     BYTE PTR [edi],ch
  4072bb:	aad    0x86
  4072bd:	inc    eax
  4072be:	das    
  4072bf:	fiadd  WORD PTR [edi+eax*1]
  4072c2:	das    
  4072c3:	ins    DWORD PTR es:[edi],dx
  4072c4:	xchg   DWORD PTR [eax+0x2f],eax
  4072c7:	outs   dx,BYTE PTR ds:[esi]
  4072c8:	add    eax,0x2f000015
  4072cd:	adc    eax,0xd2f4087
  4072d2:	add    eax,0x86f92f0b
  4072d7:	inc    eax
  4072d8:	das    
  4072d9:	add    ax,0x2f0b
  4072dd:	dec    ebp
  4072de:	test   BYTE PTR [eax+0x2f],al
  4072e1:	inc    ebp
  4072e2:	add    dl,BYTE PTR [edx]
  4072e4:	das    
  4072e5:	pop    ecx
  4072e6:	test   BYTE PTR [eax+0x2f],al
  4072e9:	stos   BYTE PTR es:[edi],al
  4072ea:	add    cl,BYTE PTR [ecx]
  4072ec:	das    
  4072ed:	dec    ebp
  4072ee:	test   BYTE PTR [eax+0x2f],al
  4072f1:	das    
  4072f2:	add    eax,0x84392f13
  4072f7:	inc    eax
  4072f8:	das    
  4072f9:	mov    edx,0x4d2f0804
  4072fe:	test   BYTE PTR [eax+0x2f],al
  407301:	aas    
  407302:	add    cl,BYTE PTR [edi]
  407304:	das    
  407305:	in     eax,dx
  407306:	xchg   BYTE PTR [eax+0x2f],al
  407309:	xchg   edi,eax
  40730a:	add    al,BYTE PTR [edi]
  40730c:	das    
  40730d:	in     eax,0x86
  40730f:	inc    eax
  407310:	das    
  407311:	loope  0x407317
  407313:	or     al,0x2f
  407315:	mov    ch,0x84
  407317:	inc    eax
  407318:	das    
  407319:	cdq    
  40731a:	add    cl,BYTE PTR [ecx]
  40731c:	das    
  40731d:	jns    0x4072a3
  40731f:	inc    eax
  407320:	das    
  407321:	fimul  WORD PTR [ebx+0x3]
  407324:	xor    eax,0xef869fde
  407329:	fnsave [esi]
  40732b:	add    al,0x2b
  40732d:	ficom  WORD PTR [edi+0x6f000086]
  407333:	ficom  WORD PTR [eax]
  407335:	add    al,0x69
  407337:	fisttp WORD PTR [edi-0x79]
  40733a:	outs   dx,DWORD PTR ds:[esi]
  40733b:	fidivr WORD PTR [ebx+eax*1]
  40733e:	jp     0x40731e
  407340:	pop    ss
  407341:	mov    BYTE PTR [edi-0x22],ch
  407344:	cdq    
  407345:	add    edx,DWORD PTR [esi-0x22]
  407348:	add    ecx,DWORD PTR [eax+0x3bdde6f]
  40734e:	and    eax,0x6f87efde
  407353:	ficomp WORD PTR [ecx+0x3]
  407356:	sbb    al,0xde
  407358:	inc    ebx
  407359:	sub    BYTE PTR [edi-0x22],0x30
  40735d:	add    ebp,DWORD PTR [eax]
  40735f:	fimul  WORD PTR [ebx]
  407361:	sub    BYTE PTR [edi-0x22],0x26
  407365:	add    esi,DWORD PTR [esi]
  407367:	fidiv  WORD PTR [edi]
  407369:	sub    BYTE PTR [edi-0x22],0xd0
  40736d:	add    eax,DWORD PTR [ebx]
  40736f:	fiadd  WORD PTR [edi-0x80]
  407372:	out    dx,eax
  407373:	fstp   QWORD PTR [edi+0x3]
  407376:	xor    ebx,esi
  407378:	push   edi
  407379:	sub    bh,0xdd
  40737c:	add    BYTE PTR [ebx],0xeb
  40737f:	fstp   QWORD PTR [edi-0x5221080]
  407385:	add    ebp,DWORD PTR [ebx]
  407387:	fisub  WORD PTR [edi]
  407389:	xchg   edi,ebp
  40738b:	fld    QWORD PTR [edx]
  40738d:	add    al,0x2b
  40738f:	fimul  WORD PTR [edi]
  407391:	xchg   edi,ebp
  407393:	fnsave [ebx+0x35000004]
  407399:	fimul  WORD PTR [ebx]
  40739b:	xchg   edi,ebp
  40739d:	fld    QWORD PTR [eax]
  40739f:	(bad)  
  4073a0:	sub    esp,esp
  4073a2:	add    BYTE PTR ds:0x7d011eb0,al
  4073a8:	sub    eax,esp
  4073aa:	add    BYTE PTR [ebp-0x30fee14f],bl
  4073b0:	sub    al,0xe3
  4073b2:	add    BYTE PTR [ebp+0x53011db1],dl
  4073b8:	sub    esp,ebp
  4073ba:	add    BYTE PTR [ebp+0x13011db1],cl
  4073c0:	sub    esp,ecx
  4073c2:	add    BYTE PTR [ecx+0x7e011db1],al
  4073c8:	sub    esi,ebp
  4073ca:	add    BYTE PTR [ecx],bh
  4073cc:	mov    cl,0x1d
  4073ce:	add    DWORD PTR [edi],edi
  4073d0:	sub    ebx,ebp
  4073d2:	add    BYTE PTR [ecx],ch
  4073d4:	mov    cl,0x1d
  4073d6:	add    DWORD PTR [ebx-0x7eff1cd5],ecx
  4073dc:	mov    cl,0x1d
  4073de:	add    ebx,edx
  4073e0:	sub    al,0xf2
  4073e2:	add    BYTE PTR [ecx-0x6efee24f],cl
  4073e8:	sub    al,0xec
  4073ea:	add    BYTE PTR [ecx-0x4f],ch
  4073ed:	sbb    eax,0xe52b1e01
  4073f2:	add    BYTE PTR [ecx+0x44011db2],dl
  4073f8:	sub    ebp,esi
  4073fa:	add    BYTE PTR [ebp+0x1db20000],al
  407400:	add    DWORD PTR [edx-0x72ff1bd4],ebx
  407406:	mov    dl,0x1d
  407408:	add    DWORD PTR [ebp+0x2b],ebx
  40740b:	loope  0x40740d
  40740d:	inc    ecx
  40740e:	mov    cl,0x1d
  407410:	add    DWORD PTR [ebx+0x2c],ebp
  407413:	mov    ebp,0x1db10100
  407418:	add    DWORD PTR [eax],eax
  40741a:	adc    esp,edx
  40741c:	adc    eax,0x41627600
  407421:	add    BYTE PTR [ecx-0x7dffe520],dl
  407427:	popa   
  407428:	inc    ecx
  407429:	add    BYTE PTR [eax+eiz*8],bh
  40742c:	or     eax,0x4161b200
  407431:	add    BYTE PTR [ebx-0x20],dl
  407434:	adc    al,0x0
  407436:	retf   0x4162
  407439:	add    dh,dl
  40743b:	fistp  WORD PTR ds:0x41626a00
  407441:	add    BYTE PTR [edi-0x6dffdb21],ch
  407447:	bound  eax,QWORD PTR [ecx+0x0]
  40744a:	out    0xdf,al
  40744c:	or     al,BYTE PTR [eax]
  40744e:	push   cs
  40744f:	arpl   WORD PTR [ecx+0x0],ax
  407452:	cmp    al,0xdf
  407454:	add    al,0x0
  407456:	push   es
  407457:	arpl   WORD PTR [ecx+0x0],ax
  40745a:	(bad)  
  40745b:	fild   WORD PTR [eax+eax*1]
  40745e:	(bad)  
  40745f:	bound  eax,QWORD PTR [ecx+0x0]
  407462:	add    BYTE PTR [eax],al
  407464:	nop
  407465:	fisttp WORD PTR [eax+eax*1]
  407468:	sahf   
  407469:	bound  eax,QWORD PTR [ecx+0x0]
  40746c:	pop    ss
  40746d:	fisttp WORD PTR [edi]
  40746f:	add    BYTE PTR [edx+0x60004162],dl
  407475:	fisttp WORD PTR [esi]
  407477:	add    BYTE PTR [edx+0x5b004162],al
  40747d:	fisttp WORD PTR [eax+eax*1]
  407480:	jb     0x4074e4
  407482:	inc    ecx
  407483:	add    BYTE PTR [edi],al
  407485:	fist   WORD PTR [edx]
  407487:	add    BYTE PTR [esi+0x62],ah
  40748a:	inc    ecx
  40748b:	add    BYTE PTR [ebx],al
  40748d:	loop   0x4074ad
  40748f:	add    BYTE PTR [esi+0x62],dl
  407492:	inc    ecx
  407493:	add    BYTE PTR [edi],ch
  407495:	ja     0x407499
  407497:	xor    DWORD PTR [edi],ebp
  407499:	pop    ecx
  40749a:	test   DWORD PTR [eax+0x2f],eax
  40749d:	loope  0x4074a3
  40749f:	or     DWORD PTR [edi],ebp
  4074a1:	add    eax,0xe12f4085
  4074a6:	add    al,0xc
  4074a8:	das    
  4074a9:	push   ebp
  4074aa:	test   DWORD PTR [eax+0x2f],eax
  4074ad:	std    
  4074ae:	add    al,0xc
  4074b0:	das    
  4074b1:	add    eax,0xca2f4085
  4074b6:	add    al,0x7
  4074b8:	das    
  4074b9:	std    
  4074ba:	test   BYTE PTR [eax+0x2f],al
  4074bd:	jae    0x4074c4
  4074bf:	adc    al,0x2f
  4074c1:	test   DWORD PTR [edx+0x5032f40],eax
  4074c7:	add    al,0x0
  4074c9:	add    BYTE PTR [edi],ch
  4074cb:	fld    QWORD PTR [eax+eax*2+0x4050a2f]
  4074d2:	das    
  4074d3:	xchg   ebp,eax
  4074d4:	add    BYTE PTR [eax+0x2f],0x9c
  4074d8:	add    al,BYTE PTR [edi+ebp*1]
  4074db:	dec    ebp
  4074dc:	add    BYTE PTR [eax+0x2f],0x2d
  4074e0:	add    eax,0x82652f06
  4074e5:	inc    eax
  4074e6:	das    
  4074e7:	loop   0x4074ed
  4074e9:	or     al,0x2f
  4074eb:	xor    eax,0x8e2f4082
  4074f0:	add    al,BYTE PTR [edi+ebp*1]
  4074f3:	jge    0x407477
  4074f5:	inc    eax
  4074f6:	das    
  4074f7:	xchg   BYTE PTR [edx],al
  4074f9:	push   ds
  4074fa:	das    
  4074fb:	lea    eax,[edx+0x23e2f40]
  407501:	pop    es
  407502:	das    
  407503:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407504:	add    BYTE PTR [eax+0x2f],0x60
  407508:	add    cl,BYTE PTR [edi]
  40750a:	das    
  40750b:	jne    0x40748f
  40750d:	inc    eax
  40750e:	das    
  40750f:	fisubr WORD PTR [edx+0x3]
  407512:	and    al,0xde
  407514:	shr    eax,cl
  407516:	xor    dh,bl
  407518:	xor    BYTE PTR [esi+esi*1],al
  40751b:	fidivr WORD PTR [edi+0x6bde20e8]
  407521:	add    ebp,DWORD PTR [edx]
  407523:	ficomp WORD PTR [edi-0x21ef18]
  407529:	add    esi,DWORD PTR ds:0xe89bde
  40752f:	add    BYTE PTR [eax],al
  407531:	fisubr WORD PTR [esi+0x5bde2a03]
  407537:	call   0x3b9532c
  40753c:	inc    ecx
  40753d:	fiadd  WORD PTR [ebx-0x18]
  407540:	pusha  
  407541:	fisub  WORD PTR [esi+0x6bde4203]
  407547:	call   0x374539c
  40754c:	and    ebx,esi
  40754e:	repz call 0x4535394
  407554:	sub    dh,bl
  407556:	ret    
  407557:	call   0x36f538c
  40755c:	cmp    ebx,esi
  40755e:	mov    bl,0xe8
  407560:	and    dh,bl
  407562:	sahf   
  407563:	add    esp,DWORD PTR [esi+ebx*8]
  407566:	scas   eax,DWORD PTR es:[edi]
  407567:	call   0x36c537c
  40756c:	cmp    ebx,esi
  40756e:	out    dx,eax
  40756f:	call   0x34d5374
  407574:	pop    ds
  407575:	faddp  st(3),st
  407577:	call   0x3c5536c
  40757c:	cmp    al,0xde
  40757e:	imul   eax
  407580:	pusha  
  407581:	fiadd  WORD PTR [ebx+eax*1]
  407584:	sub    esi,ebx
  407586:	out    0xe8,eax
  407588:	push   eax
  407589:	fiadd  WORD PTR [eax]
  40758b:	cld    
  40758c:	sub    eax,0x97fd00ef
  407591:	leave  
  407592:	add    BYTE PTR [eax+eax*1+0xd83300],al
  407599:	mov    ebp,0x3900c989
  40759e:	xor    ebp,esi
  4075a0:	add    BYTE PTR [ecx+0x2b00c949],ah
  4075a6:	xor    ebp,edi
  4075a8:	add    BYTE PTR [ebp+0x49],dh
  4075ab:	leave  
  4075ac:	add    BYTE PTR [edi+0x33],bh
  4075af:	repz add BYTE PTR [ebp+0x49],cl
  4075b3:	leave  
  4075b4:	add    cl,dl
  4075b6:	sub    al,0xf2
  4075b8:	add    BYTE PTR [ebp+0x49],ah
  4075bb:	leave  
  4075bc:	add    BYTE PTR [esi],dh
  4075be:	xor    esi,ecx
  4075c0:	add    ch,bh
  4075c2:	or     cl,cl
  4075c4:	add    BYTE PTR [edx],bl
  4075c6:	xor    ebp,esp
  4075c8:	add    BYTE PTR [ecx],ah
  4075ca:	or     ecx,ecx
  4075cc:	add    BYTE PTR [ebx+esi*1],bl
  4075cf:	out    0x0,al
  4075d1:	lods   eax,DWORD PTR ds:[esi]
  4075d2:	or     cl,cl
  4075d4:	add    BYTE PTR [eax+0x33],bl
  4075d7:	out    0x0,eax
  4075d9:	or     DWORD PTR [ecx],ecx
  4075db:	leave  
  4075dc:	add    BYTE PTR [ecx+0x33],ch
  4075df:	mov    ebp,0xc8d64d00
  4075e4:	add    BYTE PTR [eax+0x1500c333],cl
  4075ea:	(bad)  
  4075eb:	enter  0xc700,0x2c
  4075ef:	in     eax,0x0
  4075f1:	jno    0x4075c9
  4075f3:	enter  0x9b00,0x2c
  4075f7:	fld    QWORD PTR [eax]
  4075f9:	push   ebp
  4075fa:	add    BYTE PTR [eax],al
  4075fc:	(bad)  
  4075fd:	enter  0xae00,0x2c
  407601:	loope  0x407603
  407603:	cmp    eax,0xc896
  407608:	sub    dl,ah
  40760a:	add    eax,0x3e76ea00
  40760f:	add    al,al
  407611:	fcomp  QWORD PTR [eax+eax*1]
  407614:	or     dh,BYTE PTR [edi+0x3e]
  407617:	add    BYTE PTR [edi],cl
  407619:	loop   0x407620
  40761b:	add    dl,dl
  40761d:	jbe    0x40765d
  40761f:	add    BYTE PTR [edi+0x6000adc],dl
  407625:	ja     0x407665
  407627:	add    BYTE PTR [ebp-0x24],bl
  40762a:	dec    esp
  40762b:	add    BYTE PTR [esi],ah
  40762d:	ja     0x40766d
  40762f:	add    BYTE PTR [eax-0x24],bl
  407632:	and    al,BYTE PTR [eax]
  407634:	jle    0x4075b6
  407636:	ds add dh,bl
  407639:	fsubr  QWORD PTR [esi]
  40763b:	add    BYTE PTR [esi-0x80],bh
  40763e:	ds add dl,ch
  407641:	fild   DWORD PTR [eax+eax*1]
  407644:	(bad)  
  407645:	jg     0x407685
  407647:	add    BYTE PTR [ebp+0x620011db],al
  40764d:	jg     0x40768d
  40764f:	add    al,dl
  407651:	fist   DWORD PTR [eax+eax*1]
  407654:	pop    edx
  407655:	jg     0x407695
  407657:	add    BYTE PTR [edi-0x25ffe125],al
  40765d:	jg     0x40769d
  40765f:	add    BYTE PTR [eax],al
  407661:	add    BYTE PTR [edx+eiz*8],bh
  407664:	sbb    eax,DWORD PTR [eax]
  407666:	call   0x20db:0xff003e7f
  40766d:	add    dh,dl
  40766f:	jg     0x4076af
  407671:	add    BYTE PTR [ebp+0x6003bdb],bh
  407677:	je     0x4076b7
  407679:	add    BYTE PTR [edi],bl
  40767b:	(bad)  [ebp+0x0]
  40767e:	ds je  0x4076bf
  407681:	add    BYTE PTR [edi],ch
  407683:	outs   dx,BYTE PTR ds:[esi]
  407684:	add    al,BYTE PTR ds:0x3feaf52f
  40768a:	das    
  40768b:	fadd   QWORD PTR [ecx]
  40768d:	or     ch,BYTE PTR [edi]
  40768f:	adc    ebx,ebp
  407691:	aas    
  407692:	das    
  407693:	jo     0x407697
  407695:	cmp    DWORD PTR [edi],ebp
  407697:	dec    ebp
  407698:	jmp    0x4076d9
  40769a:	das    
  40769b:	out    0x4,al
  40769d:	sub    eax,0x3fe98d2f
  4076a2:	das    
  4076a3:	pop    edi
  4076a4:	add    eax,0xe9752f07
  4076a9:	aas    
  4076aa:	das    
  4076ab:	xlat   BYTE PTR ds:[ebx]
  4076ac:	add    al,0xc
  4076ae:	das    
  4076af:	inc    ebp
  4076b0:	jmp    0x4076f1
  4076b2:	das    
  4076b3:	xchg   ecx,eax
  4076b4:	add    cl,BYTE PTR [ebx]
  4076b6:	das    
  4076b7:	mov    eax,ds:0x5f2f3feb
  4076bc:	add    eax,0xeb9d2f0b
  4076c1:	aas    
  4076c2:	das    
  4076c3:	hlt    
  4076c4:	add    al,0xa
  4076c6:	add    BYTE PTR [eax],al
  4076c8:	das    
  4076c9:	imul   ebp,ebx,0x2a32f3f
  4076cf:	or     ebp,DWORD PTR [edi]
  4076d1:	xor    eax,0xde2f3feb
  4076d6:	add    al,0xc
  4076d8:	das    
  4076d9:	(bad)
  4076dc:	das    
  4076dd:	dec    esi
  4076de:	add    ch,BYTE PTR [edi+ebp*1]
  4076e1:	cmc    
  4076e2:	jmp    0x2f0b:0x28c2f3f
  4076e9:	mov    cl,0xe8
  4076eb:	aas    
  4076ec:	das    
  4076ed:	rol    DWORD PTR [eax+edx*1],cl
  4076f0:	das    
  4076f1:	xchg   ebp,eax
  4076f2:	call   0x56da636
  4076f7:	or     ebp,DWORD PTR [edi]
  4076f9:	jno    0x4076e3
  4076fb:	aas    
  4076fc:	das    
  4076fd:	fidiv  WORD PTR [eax+0x4]
  407700:	and    al,0xde
  407702:	scas   eax,DWORD PTR es:[edi]
  407703:	jmp    0x4805570
  407708:	sub    dh,bl
  40770a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40770b:	jmp    0x4a35568
  407710:	cmp    eax,0x48e9cbde
  407715:	fmulp  st(0),st
  407717:	add    ecx,DWORD PTR [ecx-0x22]
  40771a:	jecxz  0x407705
  40771c:	cmp    dh,bl
  40771e:	arpl   WORD PTR [ebx+eiz*1],ax
  407721:	(bad)  
  407723:	jmp    0xde3a:0x40dde28
  40772a:	stos   DWORD PTR es:[edi],eax
  40772b:	jmp    0x403:0xde180000
  407732:	and    bl,dh
  407734:	stos   DWORD PTR es:[edi],eax
  407735:	jmp    0xde1e:0x3f0de08
  40773c:	outs   dx,DWORD PTR ds:[esi]
  40773d:	jmp    0xde24:0x349ddf8
  407744:	dec    ebx
  407745:	jmp    0xde40:0x39bde68
  40774c:	pop    ebx
  40774d:	jmp    0xde26:0x3d9de58
  407754:	addr16 jmp 0xde2c:0x33fde48
  40775c:	jmp    0x407748
  40775e:	cmp    dh,bl
  407760:	out    0x3,eax
  407762:	das    
  407763:	fsubrp st(7),st
  407765:	add    ebp,DWORD PTR [edi]
  407767:	fsubp  st(1),st
  407769:	add    ebp,DWORD PTR [edi]
  40776b:	fiadd  WORD PTR [edi]
  40776d:	mov    dh,0xd8
  40776f:	test   DWORD PTR [ebp-0x1721d0fd],esi
  407775:	add    ebp,DWORD PTR [edi]
  407777:	fiadd  WORD PTR [eax]
  407779:	out    dx,eax
  40777a:	sub    al,0xde
  40777c:	add    cl,bh
  40777e:	leave  
  40777f:	test   esi,edi
  407781:	in     al,dx
  407782:	sub    al,0xde
  407784:	add    cl,bl
  407786:	cdq    
  407787:	test   esi,edi
  407789:	jmp    0xe94155ba
  40778e:	sub    al,0xde
  407790:	add    cl,ch
  407792:	add    BYTE PTR [eax],al
  407794:	sub    al,0xde
  407796:	add    cl,ch
  407798:	sub    al,0xde
  40779a:	add    cl,ch
  40779c:	sub    al,0xde
  40779e:	add    cl,ch
  4077a0:	sub    al,0xde
  4077a2:	add    cl,ch
  4077a4:	sub    al,0xde
  4077a6:	add    cl,ch
  4077a8:	sub    al,0xde
  4077aa:	add    cl,ch
  4077ac:	or     ebx,esi
  4077ae:	and    DWORD PTR ds:0xe925bc06,eax
  4077b4:	sub    al,0xb8
  4077b6:	sub    ecx,ebp
  4077b8:	push   DWORD PTR [ebx-0x2fe40700]
  4077be:	xor    ebp,esi
  4077c0:	pop    ss
  4077c1:	int3   
  4077c2:	xor    eax,0xde13e1
  4077c7:	jmp    0xe94155f8
  4077cc:	or     edi,edi
  4077ce:	popa   
  4077cf:	add    eax,0x1165fb06
  4077d4:	add    dh,bh
  4077d6:	imul   ecx,DWORD PTR ds:0xf96df2fe,0xf5720edb
  4077e0:	xlat   BYTE PTR ds:[ebx]
  4077e1:	or     dh,BYTE PTR [esi-0x1f]
  4077e4:	rol    DWORD PTR [esi],cl
  4077e6:	add    ecx,ebp
  4077e8:	sub    al,0x24
  4077ea:	pop    esi
  4077eb:	leave  
  4077ec:	retf   
  4077ed:	(bad)  
  4077ee:	popa   
  4077ef:	(bad)
  4077f2:	gs add dh,bh
  4077f5:	jno    0x40785f
  4077f7:	imul   eax,DWORD PTR [eax],0x0
  4077fa:	cli    
  4077fb:	lea    ebp,[edi+ebp*2-0x7a]
  4077ff:	test   eax,0xa5827370
  407804:	je     0x40787d
  407806:	mov    fs,WORD PTR [ecx-0x1f35ff88]
  40780c:	jle    0x40780e
  40780e:	xchg   esi,eax
  40780f:	loopne 0x407811
  407811:	add    BYTE PTR [esi-0x79ffff20],al
  407817:	loopne 0x407819
  407819:	add    BYTE PTR [esi-0x69ffff20],dl
  40781f:	loopne 0x407821
  407821:	add    BYTE PTR [esi-0x79ffff20],al
  407827:	loopne 0x407829
  407829:	add    BYTE PTR [esi-0x20],dl
  40782c:	add    BYTE PTR [eax],al
  40782e:	push   esi
  40782f:	loopne 0x407831
  407831:	add    BYTE PTR [esi-0x20],al
  407834:	add    BYTE PTR [eax],al
  407836:	inc    esi
  407837:	loopne 0x407839
  407839:	add    BYTE PTR [esi-0x20],dl
  40783c:	add    BYTE PTR [eax],al
  40783e:	push   esi
  40783f:	loopne 0x407841
  407841:	add    BYTE PTR [esi-0x20],al
  407844:	add    BYTE PTR [eax],al
  407846:	inc    esi
  407847:	loopne 0x407849
  407849:	add    BYTE PTR [esi],dl
  40784b:	loopne 0x40784d
  40784d:	add    BYTE PTR [esi],dl
  40784f:	loopne 0x407851
  407851:	add    BYTE PTR [esi],al
  407853:	loopne 0x407855
  407855:	add    BYTE PTR [esi],al
  407857:	loopne 0x407859
  407859:	add    BYTE PTR [esi],dl
  40785b:	loopne 0x40785d
  40785d:	add    BYTE PTR [eax],al
  40785f:	add    BYTE PTR [esi],dl
  407861:	loopne 0x407863
  407863:	add    BYTE PTR [esi],al
  407865:	loopne 0x407867
  407867:	add    BYTE PTR [esi],al
  407869:	loopne 0x40786b
  40786b:	add    dh,dl
  40786d:	fild   WORD PTR [eax]
  40786f:	add    BYTE PTR [edi],ch
  407871:	jne    0x407875
  407873:	add    BYTE PTR [edi],ch
  407875:	jne    0x407879
  407877:	add    BYTE PTR [edi],ch
  407879:	jne    0x40787d
  40787b:	add    BYTE PTR [edi],ch
  40787d:	jne    0x407881
  40787f:	add    BYTE PTR [edi],ch
  407881:	jne    0x407885
  407883:	add    BYTE PTR [edi],ch
  407885:	jne    0x407889
  407887:	add    BYTE PTR [edi],ch
  407889:	jne    0x40788d
  40788b:	add    BYTE PTR [edi],ch
  40788d:	jne    0x407891
  40788f:	add    BYTE PTR [edi],ch
  407891:	in     al,dx
  407892:	(bad)  
  407893:	call   FWORD PTR [eax-0x6f009d2c]
  407899:	fsub   QWORD PTR [edx-0x1]
  40789c:	mov    BYTE PTR [eax+eiz*2+0x608c80ff],al
  4078a3:	(bad)  
  4078a4:	js     0x40791a
  4078a6:	pusha  
  4078a7:	push   DWORD PTR [eax+0x7c]
  4078aa:	pusha  
  4078ab:	jmp    FWORD PTR [eax-0x5c]
  4078ae:	pusha  
  4078af:	jmp    DWORD PTR [eax-0x54]
  4078b2:	pusha  
  4078b3:	call   FWORD PTR [eax-0x6c]
  4078b6:	pusha  
  4078b7:	call   DWORD PTR [eax-0x64]
  4078ba:	pusha  
  4078bb:	dec    DWORD PTR [eax+0x44]
  4078be:	pusha  
  4078bf:	inc    DWORD PTR [eax+0x75]
  4078c2:	add    eax,DWORD PTR [edx]
  4078c4:	add    BYTE PTR [eax],al
  4078c6:	sub    al,0x79
  4078c8:	pop    es
  4078c9:	push   es
  4078ca:	sub    BYTE PTR [ebp+0x6428ff0b],cl
  4078d0:	pusha  
  4078d1:	jmp    DWORD PTR [eax]
  4078d3:	ins    BYTE PTR es:[edi],dx
  4078d4:	ud2    
  4078d6:	sub    esp,DWORD PTR [edx+0x5c100f10]
  4078dc:	pusha  
  4078dd:	dec    DWORD PTR [eax]
  4078df:	add    al,0x60
  4078e1:	inc    DWORD PTR [eax]
  4078e3:	or     al,0x60
  4078e5:	(bad)  
  4078e6:	clc    
  4078e7:	repz pop edi
  4078e9:	push   eax
  4078eb:	frstor [esi+0x61]
  4078ee:	call   0xe0a1d875
  4078f3:	adc    BYTE PTR [edi+0xe],0x24
  4078f7:	rcr    ah,cl
  4078f9:	adc    DWORD PTR [eax],esp
  4078fb:	add    DWORD PTR [edi+0x61],0xffffffc8
  4078ff:	cmp    BYTE PTR [edi],0x61
  407902:	rol    BYTE PTR [edx-0x7d479ec9],0x2f
  407909:	popa   
  40790a:	mov    al,0x82
  40790c:	daa    
  40790d:	popa   
  40790e:	test   al,0x82
  407910:	pop    ds
  407911:	popa   
  407912:	mov    al,ds:0x2f03e882
  407917:	fsubrp st(7),st
  407919:	add    ebp,DWORD PTR [edi]
  40791b:	fsubrp st(7),st
  40791d:	add    ebp,DWORD PTR [edi]
  40791f:	fsubrp st(7),st
  407921:	add    ebp,DWORD PTR [edi]
  407923:	fsubrp st(7),st
  407925:	add    ebp,DWORD PTR [edi]
  407927:	fsubrp st(7),st
  407929:	add    eax,DWORD PTR [eax]
  40792b:	add    BYTE PTR [edi],ch
  40792d:	fsubrp st(7),st
  40792f:	add    ebp,DWORD PTR [edi]
  407931:	fsubrp st(7),st
  407933:	add    ebp,DWORD PTR [edi]
  407935:	fsubrp st(7),st
  407937:	add    ebp,DWORD PTR [edi]
  407939:	fsubrp st(7),st
  40793b:	add    ebp,DWORD PTR [edi]
  40793d:	fsubrp st(7),st
  40793f:	add    ebp,DWORD PTR [edi]
  407941:	fsubrp st(7),st
  407943:	add    ebp,DWORD PTR [edi]
  407945:	fsubrp st(7),st
  407947:	add    ebp,DWORD PTR [edi]
  407949:	fsubrp st(7),st
  40794b:	add    ebp,DWORD PTR [edi]
  40794d:	fsubrp st(7),st
  40794f:	add    ebp,DWORD PTR [edi]
  407951:	fsubrp st(7),st
  407953:	add    ebp,DWORD PTR [edi]
  407955:	fsubrp st(7),st
  407957:	add    ebp,DWORD PTR [edi]
  407959:	fsubrp st(7),st
  40795b:	add    ebp,DWORD PTR [edi]
  40795d:	fsubrp st(7),st
  40795f:	add    ebp,DWORD PTR [edi]
  407961:	fsubrp st(7),st
  407963:	add    ebp,DWORD PTR [edi]
  407965:	fiadd  WORD PTR [eax]
  407967:	jmp    0xe9415798
  40796c:	sub    al,0xde
  40796e:	add    cl,ch
  407970:	sub    al,0xde
  407972:	add    cl,ch
  407974:	sub    al,0xde
  407976:	add    cl,ch
  407978:	sub    al,0xde
  40797a:	add    cl,ch
  40797c:	sub    al,0xde
  40797e:	add    cl,ch
  407980:	sub    al,0xde
  407982:	add    cl,ch
  407984:	sub    al,0xde
  407986:	add    cl,ch
  407988:	sub    al,0xde
  40798a:	add    cl,ch
  40798c:	sub    al,0xde
  40798e:	add    cl,ch
  407990:	add    BYTE PTR [eax],al
  407992:	sub    al,0xde
  407994:	add    cl,ch
  407996:	sub    al,0xde
  407998:	add    cl,ch
  40799a:	sub    al,0xde
  40799c:	add    cl,ch
  40799e:	sub    al,0xde
  4079a0:	add    cl,ch
  4079a2:	sub    al,0xde
  4079a4:	add    cl,ch
  4079a6:	sub    al,0xde
  4079a8:	add    cl,ch
  4079aa:	sub    al,0xde
  4079ac:	add    cl,ch
  4079ae:	sub    al,0xde
  4079b0:	add    cl,ch
  4079b2:	sub    al,0xde
  4079b4:	add    cl,ch
  4079b6:	sub    al,0xde
  4079b8:	add    cl,ch
  4079ba:	xor    ebx,edi
  4079bc:	add    al,ch
  4079be:	sub    ebx,edi
  4079c0:	jmp    edi
  4079c2:	xor    ebx,edi
  4079c4:	jmp    edi
  4079c6:	sub    ebx,edi
  4079c8:	jmp    edi
  4079ca:	xor    ebx,edi
  4079cc:	jmp    edi
  4079ce:	sub    ebx,edi
  4079d0:	jmp    edi
  4079d2:	xor    ebx,edi
  4079d4:	jmp    edi
  4079d6:	sub    ebx,edi
  4079d8:	add    al,ch
  4079da:	xor    ebx,edi
  4079dc:	jmp    edi
  4079de:	sub    ebx,edi
  4079e0:	(bad)  
  4079e1:	call   DWORD PTR [edi]
  4079e3:	(bad)  
  4079e5:	add    BYTE PTR [edi],dl
  4079e7:	(bad)  
  4079e9:	add    BYTE PTR [edi],al
  4079eb:	(bad)  
  4079ed:	add    BYTE PTR [edi],al
  4079ef:	(bad)  
  4079f1:	add    bh,dl
  4079f3:	fcos   
  4079f5:	add    BYTE PTR [eax],al
  4079f7:	add    bh,dl
  4079f9:	fcos   
  4079fb:	add    bh,al
  4079fd:	fcos   
  4079ff:	add    bh,al
  407a01:	fcos   
  407a03:	add    bh,dl
  407a05:	fcos   
  407a07:	add    bh,dl
  407a09:	fcos   
  407a0b:	add    bh,al
  407a0d:	fcos   
  407a0f:	add    bh,al
  407a11:	fcos   
  407a13:	add    BYTE PTR [edi-0x68ff0027],dl
  407a19:	fcos   
  407a1b:	inc    DWORD PTR [esi-0x79ffff24]
  407a21:	fadd   QWORD PTR [eax]
  407a23:	add    BYTE PTR [esi-0x69ffff24],dl
  407a29:	fadd   QWORD PTR [eax]
  407a2b:	add    BYTE PTR [esi-0x79ffff24],al
  407a31:	fadd   QWORD PTR [eax]
  407a33:	add    BYTE PTR [esi-0x24],dl
  407a36:	add    BYTE PTR [eax],al
  407a38:	push   esi
  407a39:	fadd   QWORD PTR [eax]
  407a3b:	add    BYTE PTR [esi-0x24],al
  407a3e:	add    BYTE PTR [eax],al
  407a40:	inc    esi
  407a41:	fadd   QWORD PTR [eax]
  407a43:	add    BYTE PTR [esi-0x24],dl
  407a46:	add    BYTE PTR [eax],al
  407a48:	push   esi
  407a49:	fadd   QWORD PTR [eax]
  407a4b:	add    BYTE PTR [esi-0x24],al
  407a4e:	add    BYTE PTR [eax],al
  407a50:	inc    esi
  407a51:	fadd   QWORD PTR [eax]
  407a53:	add    BYTE PTR [esi],dl
  407a55:	fadd   QWORD PTR [eax]
  407a57:	add    BYTE PTR [esi],dl
  407a59:	fadd   QWORD PTR [eax]
  407a5b:	add    BYTE PTR [eax],al
  407a5d:	add    BYTE PTR [edi],ch
  407a5f:	jne    0x407a63
  407a61:	add    BYTE PTR [edi],ch
  407a63:	jne    0x407a67
  407a65:	add    BYTE PTR [edi],ch
  407a67:	jne    0x407a6b
  407a69:	add    BYTE PTR [edi],ch
  407a6b:	jne    0x407a6f
  407a6d:	add    BYTE PTR [edi],ch
  407a6f:	jne    0x407a73
  407a71:	add    BYTE PTR [edi],ch
  407a73:	jne    0x407a77
  407a75:	add    BYTE PTR [edi],ch
  407a77:	jne    0x407a7b
  407a79:	add    BYTE PTR [edi],ch
  407a7b:	jne    0x407a7f
  407a7d:	add    BYTE PTR [edi],ch
  407a7f:	jne    0x407a83
  407a81:	add    BYTE PTR [edi],ch
  407a83:	jne    0x407a87
  407a85:	add    BYTE PTR [edi],ch
  407a87:	jne    0x407a8b
  407a89:	add    BYTE PTR [edi],ch
  407a8b:	jne    0x407a8f
  407a8d:	add    BYTE PTR [edi],ch
  407a8f:	jne    0x407a93
  407a91:	add    BYTE PTR [edi],ch
  407a93:	jne    0x407a97
  407a95:	add    BYTE PTR [edi],ch
  407a97:	jne    0x407a9b
  407a99:	add    BYTE PTR [edi],ch
  407a9b:	jne    0x407a9f
  407a9d:	add    BYTE PTR [edi],ch
  407a9f:	jne    0x407aa3
  407aa1:	add    DWORD PTR [esi],ebp
  407aa3:	jne    0x407aa7
  407aa5:	add    BYTE PTR [edi],ch
  407aa7:	jne    0x407aab
  407aa9:	add    BYTE PTR [edi],ch
  407aab:	jbe    0x407ab2
  407aad:	add    BYTE PTR [edi],ch
  407aaf:	jne    0x407ab6
  407ab1:	add    ch,BYTE PTR [ecx+edi*2]
  407ab4:	or     DWORD PTR [esi],eax
  407ab6:	xor    BYTE PTR [ebp+0x71340a0b],cl
  407abc:	femms  
  407abe:	sub    BYTE PTR [ebp+0x11f3],al
  407ac4:	cmp    al,0x89
  407ac6:	not    DWORD PTR ds:0x19fb7d20
  407acc:	and    al,0xa1
  407ace:	call   FWORD PTR ds:0x2221d518
  407ad4:	or     al,0xd9
  407ad6:	and    eax,0xcfde5026
  407adb:	sub    dl,BYTE PTR [ebp-0x4d]
  407ade:	retf   
  407adf:	cs dec ecx
  407ae1:	scas   eax,DWORD PTR es:[edi]
  407ae2:	xlat   BYTE PTR ds:[ebx]
  407ae3:	adc    bl,BYTE PTR [ebp-0x35]
  407ae6:	rcl    DWORD PTR [esi],cl
  407ae8:	inc    ecx
  407ae9:	(bad)  
  407aea:	mov    edi,0xbbc3451a
  407aef:	push   ds
  407af0:	cmp    DWORD PTR [edi-0x4711cd9],edi
  407af6:	add    esp,edi
  407af8:	push   edx
  407af9:	test   edi,0xcbf356ea
  407aff:	out    dx,al
  407b00:	dec    edx
  407b01:	out    dx,eax
  407b02:	xlat   BYTE PTR ds:[ebx]
  407b03:	rcr    BYTE PTR [esi+0xb],cl
  407b06:	aam    0xd6
  407b08:	inc    edx
  407b09:	pop    es
  407b0a:	rcr    dl,0x46
  407b0d:	and    ebx,DWORD PTR [esi+edi*4-0x1d37e0a6]
  407b14:	dec    esi
  407b15:	sti    
  407b16:	ret    
  407b17:	out    0x12,al
  407b19:	test   DWORD PTR [edi-0x740ce916],0x97ef0aee
  407b23:	rcr    BYTE PTR [esi],cl
  407b25:	or     edx,DWORD PTR [esi+edx*8+0x7020000]
  407b2c:	sbb    dl,0x6
  407b2f:	add    edi,DWORD PTR [esi+ebx*8-0x6]
  407b33:	(bad)  
  407b34:	sub    DWORD PTR [di+0x645a],0xffffff87
  407b3a:	mov    cl,0x56
  407b3c:	jo     0x407ac8
  407b3e:	mov    ch,0x52
  407b40:	ins    BYTE PTR es:[edi],dx
  407b41:	mov    gs,WORD PTR [ecx-0x428d87b2]
  407b47:	push   0x74
  407b49:	jbe    0x407aec
  407b4b:	pushaw 
  407b4d:	jp     0x407af4
  407b4f:	bound  ebx,QWORD PTR [esi+edi*2-0x67]
  407b53:	pop    esi
  407b54:	add    DWORD PTR [ecx-0x7a5dc473],ecx
  407b5a:	rol    DWORD PTR [esi+eiz*4+0x51],1
  407b5e:	aad    0x48
  407b60:	stos   BYTE PTR es:[edi],al
  407b61:	dec    ebp
  407b62:	leave  
  407b63:	dec    esp
  407b64:	scas   al,BYTE PTR es:[edi]
  407b65:	pop    ecx
  407b66:	mov    ebp,0xa155b230
  407b6b:	xor    al,0xb6
  407b6d:	inc    ecx
  407b6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b6f:	cmp    BYTE PTR [edx-0x41c366c3],bh
  407b75:	test   eax,0xa5c2a06d
  407b7a:	jno    0x407b20
  407b7c:	(bad)  
  407b7d:	xor    DWORD PTR [ebp-0x58],esi
  407b80:	retf   0x692d
  407b83:	lods   al,BYTE PTR ds:[esi]
  407b84:	into   
  407b85:	cmp    DWORD PTR ds:0x135d290,ebx
  407b8b:	xchg   esp,eax
  407b8c:	(bad)  
  407b8d:	and    DWORD PTR [eax],eax
  407b8f:	add    BYTE PTR ds:0xf91dda98,al
  407b95:	fimul  WORD PTR [ecx+0x4d]
  407b99:	and    dl,0x45
  407b9c:	adc    DWORD PTR [esi+eiz*8-0x1577eaef],eax
  407ba3:	or     eax,0x19ee8c09
  407ba8:	std    
  407ba9:	outs   dx,DWORD PTR ds:[esi]
  407baa:	repnz adc eax,0x1f673e1
  407bb0:	in     eax,0x77
  407bb2:	cli    
  407bb3:	std    
  407bb4:	fidivr DWORD PTR [ebx-0x2]
  407bb7:	jmp    0xe5425be9
  407bbc:	xor    esp,esp
  407bbe:	add    eax,0x9e833f1
  407bc3:	in     eax,dx
  407bc4:	daa    
  407bc5:	in     al,dx
  407bc6:	or     eax,0x11cf5bf9
  407bcb:	cmc    
  407bcc:	aas    
  407bcd:	rcl    DWORD PTR ds:0x187a4e00,cl
  407bd3:	sbb    ebx,DWORD PTR [edx+0x76]
  407bd6:	sbb    al,0x1f
  407bd8:	es ret 
  407bda:	and    ah,BYTE PTR [ebx]
  407bdc:	xor    bh,BYTE PTR [edi-0x3601d8da]
  407be2:	sub    ch,BYTE PTR [ebx]
  407be4:	jmp    0x32d1:0xf62f2ec5
  407beb:	xor    esp,edx
  407bed:	int    0x36
  407bef:	aaa    
  407bf0:	out    dx,al
  407bf1:	fnstcw WORD PTR [edx]
  407bf3:	cmp    eax,DWORD PTR [eax]
  407bf5:	add    BYTE PTR [edx+0x463f3ed5],bh
  407bfb:	and    DWORD PTR [eax+0x63],0x32
  407bff:	jg     0x407c65
  407c01:	dec    BYTE PTR [bx+di+0x6b68]
  407c06:	jmp    0x7091:0xf66f6c85
  407c0d:	jae    0x407bf1
  407c0f:	lea    esi,[edi+esi*2-0x12]
  407c13:	cdq    
  407c14:	js     0x407c71
  407c16:	call   0x40a1:0xe65f5c35
  407c1d:	inc    ebx
  407c1e:	rcr    BYTE PTR [ebp-0x5621b8bc],cl
  407c24:	dec    eax
  407c25:	dec    ebx
  407c26:	retf   0x4ca5
  407c29:	dec    edi
  407c2a:	(bad)  
  407c2b:	xor    DWORD PTR [eax+0x53],edx
  407c2e:	ret    0x542d
  407c31:	push   edi
  407c32:	into   
  407c33:	cmp    DWORD PTR [eax+0x7b],ebx
  407c36:	cli    
  407c37:	xchg   ebp,eax
  407c38:	jl     0x407cb9
  407c3a:	push   es
  407c3b:	arpl   WORD PTR [ebx-0x78a12d7d],ax
  407c41:	xchg   esi,ebx
  407c43:	imul   ecx,DWORD PTR [ebx-0x709a3575],0x74f72f8f
  407c4d:	xchg   edx,eax
  407c4e:	pushf  
  407c4f:	bnd jo 0x407be8
  407c52:	cwde   
  407c53:	(bad)  
  407c54:	jl     0x407bf0
  407c56:	xchg   esp,eax
  407c57:	sbb    bh,BYTE PTR [ecx-0x62]
  407c5a:	add    BYTE PTR [eax],al
  407c5c:	nop
  407c5d:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  407c5f:	mov    ds:0xa6a161cc,al
  407c64:	enter  0xad0d,0xaa
  407c68:	les    ebp,FWORD PTR [ecx]
  407c6a:	test   eax,0x9515c0ae
  407c6f:	mov    dl,0xbc
  407c71:	adc    DWORD PTR [ecx-0x62e2474a],edx
  407c77:	mov    edx,0xbe98b9b4
  407c7c:	mov    al,0x45
  407c7e:	inc    ebp
  407c7f:	ret    0x41ec
  407c82:	inc    ecx
  407c83:	(bad)  
  407c84:	call   0xe50ac936
  407c89:	leave  
  407c8a:	dec    eax
  407c8b:	into   
  407c8c:	loopne 0x407c43
  407c8e:	xor    al,0xd2
  407c90:	fdiv   QWORD PTR [ecx-0x422729d0]
  407c96:	cmp    al,0xda
  407c98:	aam    0xd9
  407c9a:	cmp    dh,bl
  407c9c:	shl    BYTE PTR ds:0x218ce265,1
  407ca2:	popa   
  407ca3:	out    0x88,al
  407ca5:	int    0x6c
  407ca7:	jmp    0xd580:0xee68e984
  407cae:	push   esp
  407caf:	bnd jl 0x407c83
  407cb2:	push   eax
  407cb3:	idiv   BYTE PTR [eax-0x23]
  407cb6:	pop    esp
  407cb7:	cli    
  407cb8:	je     0x407d33
  407cba:	push   esi
  407cbb:	(bad)  
  407cbc:	jo     0x407c43
  407cbe:	sbb    BYTE PTR [eax],al
  407cc0:	add    BYTE PTR [eax],al
  407cc2:	das    
  407cc3:	xchg   BYTE PTR [edx],al
  407cc5:	add    BYTE PTR [edi],ch
  407cc7:	fsubrp st(7),st
  407cc9:	add    ebp,DWORD PTR [edi]
  407ccb:	fsubrp st(7),st
  407ccd:	add    ebp,DWORD PTR [edi]
  407ccf:	fsubrp st(7),st
  407cd1:	add    ebp,DWORD PTR [edi]
  407cd3:	fsubrp st(7),st
  407cd5:	add    ebp,DWORD PTR [edi]
  407cd7:	fsubrp st(7),st
  407cd9:	add    ebp,DWORD PTR [edi]
  407cdb:	fsubrp st(7),st
  407cdd:	add    ebp,DWORD PTR [edi]
  407cdf:	fsubrp st(7),st
  407ce1:	add    ebp,DWORD PTR [edi]
  407ce3:	fsubrp st(7),st
  407ce5:	add    esp,DWORD PTR [eax]
  407ce7:	fbld   TBYTE PTR ds:0x1dde2f04
  407ced:	add    al,0x2f
  407cef:	fsubrp st(7),st
  407cf1:	add    ebp,DWORD PTR [edi]
  407cf3:	fsubrp st(7),st
  407cf5:	add    ebp,DWORD PTR [edi]
  407cf7:	fsubrp st(7),st
  407cf9:	add    ebp,DWORD PTR [edi]
  407cfb:	fsubrp st(7),st
  407cfd:	add    ebp,DWORD PTR [edi]
  407cff:	fsubrp st(7),st
  407d01:	add    ebp,DWORD PTR [edi]
  407d03:	fsubrp st(7),st
  407d05:	add    esp,eax
  407d07:	fsubrp st(7),st
  407d09:	add    ebp,DWORD PTR [edi]
  407d0b:	fsubrp st(7),st
  407d0d:	add    ebp,DWORD PTR [edi]
  407d0f:	fsubrp st(7),st
  407d11:	add    ebp,DWORD PTR [edi]
  407d13:	fsubrp st(7),st
  407d15:	add    ebp,DWORD PTR [edi]
  407d17:	fsubrp st(7),st
  407d19:	add    ebp,DWORD PTR [edi]
  407d1b:	fsubrp st(7),st
  407d1d:	add    ebp,DWORD PTR [edi]
  407d1f:	fsubrp st(7),st
  407d21:	add    ebp,DWORD PTR [edi]
  407d23:	fsubrp st(7),st
  407d25:	add    eax,DWORD PTR [eax]
  407d27:	add    BYTE PTR [edi],ch
  407d29:	fisub  WORD PTR ds:0xe7e29859
  407d2f:	add    ebp,DWORD PTR [edi]
  407d31:	fsubrp st(7),st
  407d33:	add    ebp,DWORD PTR [edi]
  407d35:	fsubrp st(7),st
  407d37:	add    ebp,DWORD PTR [edi]
  407d39:	fsubrp st(7),st
  407d3b:	add    ebp,DWORD PTR [edi]
  407d3d:	fsubrp st(7),st
  407d3f:	add    ebp,DWORD PTR [edi]
  407d41:	fiadd  WORD PTR [eax]
  407d43:	jmp    0xe9415b74
  407d48:	sub    al,0xde
  407d4a:	add    cl,ch
  407d4c:	sub    al,0xde
  407d4e:	add    bh,bl
  407d50:	idiv   DWORD PTR [edx+0x6]
  407d53:	jmp    0xe9415b84
  407d58:	sub    al,0xde
  407d5a:	add    cl,ch
  407d5c:	sub    al,0xde
  407d5e:	add    cl,ch
  407d60:	sub    al,0xde
  407d62:	add    cl,ch
  407d64:	sub    al,0xde
  407d66:	add    cl,ch
  407d68:	sub    al,0x79
  407d6a:	add    ah,BYTE PTR [edi-0x60798689]
  407d70:	ja     0x407deb
  407d72:	push   es
  407d73:	jmp    0xe9415ba4
  407d78:	sub    al,0xde
  407d7a:	add    cl,ch
  407d7c:	sub    al,0xde
  407d7e:	add    cl,ch
  407d80:	sub    al,0xde
  407d82:	add    cl,ch
  407d84:	sub    al,0xde
  407d86:	add    BYTE PTR [edi-0x79],ch
  407d89:	jns    0x407d89
  407d8b:	data16 add BYTE PTR [eax],al
  407d8e:	ja     0x407e09
  407d90:	(bad)  
  407d91:	pop    esi
  407d92:	ja     0x407e0d
  407d94:	jle    0x407d7f
  407d96:	sub    al,0xde
  407d98:	add    cl,ch
  407d9a:	sub    al,0xde
  407d9c:	add    cl,ch
  407d9e:	sub    al,0xde
  407da0:	add    cl,ch
  407da2:	sub    al,0xde
  407da4:	add    cl,ch
  407da6:	sub    al,0xde
  407da8:	add    BYTE PTR [esi],ch
  407daa:	pop    es
  407dab:	jns    0x407dab
  407dad:	idiv   DWORD PTR es:[eax-0x2]
  407db1:	push   ds
  407db2:	idiv   DWORD PTR [eax+0x7e]
  407db5:	jmp    0xe9415be6
  407dba:	sub    al,0xde
  407dbc:	add    BYTE PTR [eax],al
  407dbe:	xchg   ch,bl
  407dc0:	add    BYTE PTR [eax],al
  407dc2:	xchg   ch,bl
  407dc4:	add    BYTE PTR [eax],al
  407dc6:	push   esi
  407dc7:	fld    QWORD PTR [eax]
  407dc9:	add    BYTE PTR [eax+0x11],dl
  407dcc:	add    esp,edi
  407dce:	inc    edi
  407dcf:	fld    QWORD PTR [eax]
  407dd1:	clc    
  407dd2:	inc    edi
  407dd3:	fld    QWORD PTR [eax]
  407dd5:	js     0x407e2d
  407dd7:	fld    QWORD PTR [eax]
  407dd9:	add    BYTE PTR [esi-0x23],dl
  407ddc:	add    BYTE PTR [eax],al
  407dde:	inc    esi
  407ddf:	fld    QWORD PTR [eax]
  407de1:	add    BYTE PTR [esi-0x23],al
  407de4:	add    BYTE PTR [eax],al
  407de6:	loope  0x407df8
  407de8:	(bad)  
  407de9:	call   DWORD PTR [esi]
  407deb:	fld    QWORD PTR [eax]
  407ded:	add    BYTE PTR [esi],al
  407def:	fld    QWORD PTR [eax]
  407df1:	add    BYTE PTR [eax],al
  407df3:	add    BYTE PTR [esi],al
  407df5:	fld    QWORD PTR [eax]
  407df7:	adc    BYTE PTR [esi],0xdd
  407dfa:	add    BYTE PTR [eax],al
  407dfc:	push   ss
  407dfd:	fld    QWORD PTR [eax]
  407dff:	add    BYTE PTR [esi],al
  407e01:	fld    QWORD PTR [eax]
  407e03:	add    BYTE PTR [esi],al
  407e05:	fld    QWORD PTR [eax]
  407e07:	add    BYTE PTR [esi-0x1e],dl
  407e0a:	add    BYTE PTR [eax],al
  407e0c:	(bad)  
  407e0d:	fadd   QWORD PTR [eax]
  407e0f:	add    dh,al
  407e11:	loope  0x407e12
  407e13:	inc    edi
  407e15:	loope  0x407e17
  407e17:	add    dh,dl
  407e19:	fadd   QWORD PTR [eax]
  407e1b:	add    dh,dl
  407e1d:	fadd   QWORD PTR [eax]
  407e1f:	add    dh,al
  407e21:	fadd   QWORD PTR [eax]
  407e23:	add    dh,al
  407e25:	fadd   QWORD PTR [eax]
  407e27:	add    BYTE PTR [edi+0x160000dc],dl
  407e2d:	loop   0x407e2f
  407e2f:	add    BYTE PTR [esi],al
  407e31:	bound  eax,QWORD PTR [ecx-0x7f237980]
  407e37:	add    BYTE PTR [edi],ch
  407e39:	jae    0x407e31
  407e3b:	sbb    esp,DWORD PTR [ebx]
  407e3d:	mov    esi,esi
  407e3f:	sbb    ebx,DWORD PTR [ebx]
  407e41:	xor    esi,0xffffffff
  407e44:	jo     0x407dcc
  407e46:	add    al,BYTE PTR [eax]
  407e48:	scas   eax,DWORD PTR es:[edi]
  407e49:	xchg   al,bh
  407e4b:	sbb    DWORD PTR [ebp-0x73],eax
  407e4e:	clc    
  407e4f:	sbb    DWORD PTR ds:0x3d11f075,edi
  407e55:	jne    0x407e47
  407e57:	adc    DWORD PTR [eax],eax
  407e59:	add    BYTE PTR ds:0x1d11f075,bl
  407e5f:	jne    0x407e51
  407e61:	adc    DWORD PTR ds:0xaf11f095,ebx
  407e67:	push   es
  407e68:	add    al,BYTE PTR [eax+0x19f8853f]
  407e6e:	inc    ebp
  407e6f:	mov    edi,eax
  407e71:	sbb    DWORD PTR ds:0x3d11f073,edi
  407e77:	jae    0x407e69
  407e79:	adc    DWORD PTR ds:0x1d11f073,ebx
  407e7f:	jae    0x407e71
  407e81:	adc    DWORD PTR ds:0xaf11f093,ebx
  407e87:	add    eax,0x852f0002
  407e8c:	add    al,BYTE PTR [eax]
  407e8e:	das    
  407e8f:	test   DWORD PTR [edx],eax
  407e91:	add    BYTE PTR [edi],ch
  407e93:	test   DWORD PTR [edx],eax
  407e95:	add    BYTE PTR [edi],ch
  407e97:	test   DWORD PTR [edx],eax
  407e99:	add    BYTE PTR [edi],ch
  407e9b:	test   DWORD PTR [edx],eax
  407e9d:	add    BYTE PTR [edi],ch
  407e9f:	test   DWORD PTR [edx],eax
  407ea1:	add    BYTE PTR [edi],ch
  407ea3:	test   DWORD PTR [edx],eax
  407ea5:	add    BYTE PTR [edi],ch
  407ea7:	test   DWORD PTR [edx],eax
  407ea9:	add    BYTE PTR [edi],ch
  407eab:	test   DWORD PTR [edx],eax
  407ead:	add    BYTE PTR [edi],ch
  407eaf:	test   DWORD PTR [edx],eax
  407eb1:	add    BYTE PTR [edi],ch
  407eb3:	fsubrp st(7),st
  407eb5:	add    ebp,DWORD PTR [edi]
  407eb7:	fsubrp st(7),st
  407eb9:	add    ebp,DWORD PTR [edi]
  407ebb:	fsubrp st(7),st
  407ebd:	add    eax,DWORD PTR [eax]
  407ebf:	add    BYTE PTR [edi],ch
  407ec1:	fsubrp st(7),st
  407ec3:	add    ebp,DWORD PTR [edi]
  407ec5:	fsubrp st(7),st
  407ec7:	add    ebp,DWORD PTR [edi]
  407ec9:	fsubrp st(7),st
  407ecb:	add    ebp,DWORD PTR [edi]
  407ecd:	fsubrp st(7),st
  407ecf:	add    ebp,DWORD PTR [edi]
  407ed1:	fsubrp st(7),st
  407ed3:	add    ebp,DWORD PTR [edi]
  407ed5:	fsubrp st(7),st
  407ed7:	add    ebp,DWORD PTR [edi]
  407ed9:	fsubrp st(7),st
  407edb:	add    ebp,DWORD PTR [edi]
  407edd:	fsubrp st(7),st
  407edf:	add    ebp,DWORD PTR [edi]
  407ee1:	fsubrp st(7),st
  407ee3:	add    ebp,DWORD PTR [edi]
  407ee5:	fsubrp st(7),st
  407ee7:	add    ebp,DWORD PTR [edi]
  407ee9:	fsubrp st(7),st
  407eeb:	add    ebp,DWORD PTR [edi]
  407eed:	fsubrp st(7),st
  407eef:	add    ebp,DWORD PTR [edi]
  407ef1:	fsubrp st(7),st
  407ef3:	add    ebp,DWORD PTR [edi]
  407ef5:	fsubrp st(7),st
  407ef7:	add    ebp,DWORD PTR [edi]
  407ef9:	fsubrp st(7),st
  407efb:	add    ebp,DWORD PTR [edi]
  407efd:	fsubrp st(7),st
  407eff:	add    ebp,DWORD PTR [edi]
  407f01:	fsubrp st(7),st
  407f03:	add    ebp,DWORD PTR [edi]
  407f05:	fsubrp st(7),st
  407f07:	add    ebp,DWORD PTR [edi]
  407f09:	fsubrp st(7),st
  407f0b:	add    ebp,DWORD PTR [edi]
  407f0d:	fmulp  st(1),st
  407f0f:	push   ebp
  407f10:	dec    esi
  407f11:	ffree  st(3)
  407f13:	cmp    ecx,DWORD PTR [esi-0x23]
  407f16:	frstor [edi+ecx*1+0x4e5003ae]
  407f1d:	fisttp QWORD PTR [eax+ebx*2]
  407f20:	dec    edi
  407f21:	fstp   st(6)
  407f23:	scas   eax,DWORD PTR es:[edi]
  407f24:	add    BYTE PTR [eax],al
  407f26:	test   al,0xf8
  407f28:	mov    al,ds:0x7f1bbe0f
  407f2d:	add    DWORD PTR [esi+eax*2],esi
  407f30:	add    ebx,edx
  407f32:	mov    edi,esp
  407f34:	or     dl,BYTE PTR [ebx-0x24c9e09]
  407f3a:	fucom  st(7)
  407f3c:	mov    BYTE PTR [edx],dl
  407f3e:	mov    DWORD PTR [edi+esi*1-0x4ec42000],ebx
  407f45:	fbstp  TBYTE PTR [eax]
  407f47:	mov    ch,0xca
  407f49:	xor    edx,eax
  407f4b:	(bad)  
  407f4e:	mov    ch,0x22
  407f50:	or     bl,BYTE PTR [ecx+0x2cea44ee]
  407f56:	stc    
  407f57:	clc    
  407f58:	retf   
  407f59:	add    al,0x8
  407f5b:	jp     0x407f4d
  407f5d:	ret    0x9b3b
  407f60:	push   ds
  407f61:	pop    ecx
  407f62:	inc    cx
  407f64:	scas   eax,DWORD PTR es:[edi]
  407f65:	pop    edx
  407f66:	and    dl,ch
  407f68:	jg     0x407f31
  407f6a:	aas    
  407f6b:	call   0x28a28f72
  407f70:	push   ecx
  407f71:	sub    DWORD PTR [esi],ebp
  407f73:	and    esi,DWORD PTR [ebx+0x590a4745]
  407f79:	mov    ecx,0xe9c5de8f
  407f7e:	into   
  407f7f:	sub    edi,0x140c19b5
  407f85:	sahf   
  407f86:	leave  
  407f87:	aas    
  407f88:	loopne 0x407f88
  407f8a:	add    BYTE PTR [eax],al
  407f8c:	std    
  407f8d:	adc    esi,eax
  407f8f:	das    
  407f90:	(bad)  
  407f91:	xor    ebp,DWORD PTR [ecx-0x36]
  407f94:	mov    WORD PTR [esi+ebp*1-0x29],ds
  407f98:	pop    eax
  407f99:	stc    
  407f9a:	inc    esi
  407f9b:	(bad)  [ecx]
  407f9d:	sbb    BYTE PTR [eax+0x7a],0x29
  407fa1:	lods   al,BYTE PTR ds:[esi]
  407fa2:	jmp    0x7feb:0x51c1f6e3
  407fa9:	sbb    DWORD PTR [ecx],edx
  407fab:	add    BYTE PTR [ecx],ah
  407fad:	dec    ecx
  407fae:	adc    esi,DWORD PTR [edx-0x6a22e702]
  407fb4:	nop
  407fb5:	test   eax,0xa92a60e3
  407fba:	inc    eax
  407fbb:	push   eax
  407fbc:	jne    0x407f73
  407fbe:	dec    ebp
  407fbf:	pushf  
  407fc0:	aad    0xf3
  407fc2:	inc    ebp
  407fc3:	out    0x3e,al
  407fc5:	adc    BYTE PTR [ebp+0x417b2ea],dh
  407fcb:	ret    
  407fcc:	dec    ebp
  407fcd:	cmc    
  407fce:	cmp    al,0xd5
  407fd0:	test   eax,0xe1e5d84d
  407fd5:	sub    DWORD PTR [esi+0x24],eax
  407fd8:	aam    0x64
  407fda:	or     BYTE PTR [ebx],dl
  407fdc:	pop    edi
  407fdd:	pop    edx
  407fde:	cli    
  407fdf:	push   ecx
  407fe0:	cmp    al,0x7d
  407fe2:	sub    al,0x14
  407fe4:	dec    edi
  407fe5:	cmc    
  407fe6:	mov    dl,dh
  407fe8:	xor    DWORD PTR [ebx],edi
  407fea:	rcr    DWORD PTR [ecx-0x7b],cl
  407fed:	ret    
  407fee:	dec    eax
  407fef:	lods   eax,DWORD PTR ds:[esi]
  407ff0:	add    BYTE PTR [eax],al
  407ff2:	hlt    
  407ff3:	xor    BYTE PTR [edx+esi*8-0x44b175a9],cl
  407ffa:	jmp    0xf1b97338
  407fff:	jp     0x407fed
  408001:	outs   dx,DWORD PTR ds:[esi]
  408002:	ret    
  408003:	cmp    DWORD PTR [ecx-0x7ba0cd9c],esi
  408009:	dec    esi
  40800a:	(bad)
  40800d:	jg     0x407ffe
  40800f:	enter  0xc586,0x71
  408013:	mov    DWORD PTR [edi],ebp
  408015:	mov    dl,0x4b
  408017:	add    ch,dh
  408019:	lahf   
  40801a:	jae    0x40806e
  40801c:	push   edi
  40801d:	pop    ebp
  40801e:	jns    0x407fe0
  408020:	(bad)
  408025:	call   0x3018aa59
  40802a:	mov    eax,DWORD PTR [esi+0x512f0002]
  408030:	add    eax,0x7072f00
  408035:	add    BYTE PTR [edi],ch
  408037:	loop   0x40803d
  408039:	add    BYTE PTR [edi],ch
  40803b:	pusha  
  40803c:	add    eax,0x1e72f00
  408041:	add    BYTE PTR [edi],ch
  408043:	call   0x5:0x1b2f0002
  40804a:	das    
  40804b:	out    0x1,eax
  40804d:	add    BYTE PTR [edi],ch
  40804f:	mov    ds:0x222f0002,al
  408054:	add    eax,0x2f000000
  408059:	pop    es
  40805a:	pop    es
  40805b:	add    BYTE PTR [edi],ch
  40805d:	call   0x2:0x4d2f0002
  408064:	das    
  408065:	pop    es
  408066:	add    al,0x0
  408068:	das    
  408069:	loop   0x40806f
  40806b:	add    BYTE PTR [edi],ch
  40806d:	hlt    
  40806e:	add    DWORD PTR [eax],eax
  408070:	das    
  408071:	pop    es
  408072:	add    al,0x0
  408074:	das    
  408075:	fiadd  DWORD PTR [eax+eax*1]
  408078:	das    
  408079:	cmc    
  40807a:	add    DWORD PTR [eax],eax
  40807c:	das    
  40807d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40807e:	add    eax,DWORD PTR [eax]
  408080:	das    
  408081:	mov    eax,ds:0x852f0002
  408086:	add    al,BYTE PTR [eax]
  408088:	das    
  408089:	es add eax,0x5272e04
  40808f:	fsubr  DWORD PTR ds:0x2e410528
  408095:	sbb    al,BYTE PTR ds:0x5232e3d
  40809b:	pop    edx
  40809c:	cs push ds
  40809e:	add    eax,0x91de2e60
  4080a3:	add    al,0x69
  4080a5:	fst    QWORD PTR [edx-0x7c22b4fc]
  4080ab:	add    al,0x36
  4080ad:	fnstsw WORD PTR [ebp+0x4]
  4080b0:	xor    bl,ch
  4080b2:	xchg   esi,eax
  4080b3:	add    al,0x24
  4080b5:	fnstsw WORD PTR [eax+0x4]
  4080b8:	sub    bl,ch
  4080ba:	jns    0x4080c0
  4080bc:	add    BYTE PTR [eax],al
  4080be:	je     0x4080a0
  4080c0:	jp     0x4080c6
  4080c2:	in     eax,dx
  4080c3:	fcomp  QWORD PTR [esp+eax*1+0x49]
  4080c7:	fst    QWORD PTR [ebp+0x4]
  4080ca:	in     al,0xdc
  4080cc:	pop    esi
  4080cd:	add    al,0x70
  4080cf:	loopne 0x408121
  4080d1:	add    al,0xe
  4080d3:	fld    QWORD PTR [ecx+0x4]
  4080d6:	or     ch,bl
  4080d8:	inc    edx
  4080d9:	add    al,0xca
  4080db:	fdiv   QWORD PTR [ebx]
  4080dd:	add    al,0xd5
  4080df:	fsubr  QWORD PTR [esp+eax*1]
  4080e2:	jb     0x4080c4
  4080e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080e5:	add    ecx,ecx
  4080e7:	fcomp  QWORD PTR [esi-0x58233cfd]
  4080ed:	add    esp,ebx
  4080ef:	fsubr  QWORD PTR [edx-0x5322d2fd]
  4080f5:	add    esp,DWORD PTR [esi-0x23]
  4080f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080f9:	add    ebp,DWORD PTR [ecx]
  4080fb:	fstp   QWORD PTR [edi-0x5e22d4fd]
  408101:	add    esi,DWORD PTR [edi]
  408103:	fnsave [ebx-0x5122dafd]
  408109:	add    esi,DWORD PTR [ecx]
  40810b:	fnsave [edi-0x4722e0fd]
  408111:	add    ebp,DWORD PTR [ebp+ebx*8-0x67]
  408115:	add    esi,DWORD PTR [eax-0x23]
  408118:	xchg   esp,eax
  408119:	add    edi,DWORD PTR [edi-0x23]
  40811c:	add    BYTE PTR [ecx-0x6fffe9d4],dl
  408122:	add    BYTE PTR [eax],al
  408124:	sub    al,0x4
  408126:	add    BYTE PTR [edx+0x2c],al
  408129:	out    dx,al
  40812a:	(bad)  
  40812b:	ds sub al,0x0
  40812e:	add    BYTE PTR [ecx+0x2c],cl
  408131:	or     DWORD PTR [eax],eax
  408133:	dec    edx
  408134:	sub    al,0xdf
  408136:	dec    DWORD PTR [ebx+0x2c]
  408139:	mov    eax,0xdb2c46ff
  40813e:	inc    DWORD PTR [eax+0x2c]
  408141:	loope  0x408142
  408143:	inc    edx
  408144:	sub    al,0xd5
  408146:	call   DWORD PTR [esp+ebp*1]
  408149:	xlat   BYTE PTR ds:[ebx]
  40814a:	dec    DWORD PTR ds:0x18ffe32c
  408150:	sub    al,0xcd
  408152:	call   DWORD PTR [edi]
  408154:	sub    al,0x1a
  408156:	add    bl,bh
  408158:	sub    eax,0x2df40026
  40815d:	or     eax,0x152df100
  408162:	add    al,dh
  408164:	sub    eax,0x2de20003
  408169:	in     eax,dx
  40816a:	(bad)  
  40816b:	fisubr WORD PTR ds:0x2dd5ffff
  408171:	xchg   ebp,eax
  408172:	add    ecx,DWORD PTR [eax-0x710043d6]
  408178:	xor    bh,BYTE PTR [edx-0x51d57001]
  40817e:	inc    DWORD PTR [ecx+0x7cffd032]
  408184:	sub    ch,BYTE PTR [edx+0x57ff]
  40818a:	xor    bh,BYTE PTR [ecx-0x44d5a901]
  408190:	dec    DWORD PTR [edi+0x32]
  408193:	scas   eax,DWORD PTR es:[edi]
  408194:	call   DWORD PTR [ecx+0x2a]
  408197:	sar    edi,1
  408199:	push   DWORD PTR [edx-0x25]
  40819c:	xor    eax,DWORD PTR [ecx]
  40819e:	mov    ebx,ebx
  4081a0:	or     al,BYTE PTR [ecx]
  4081a2:	mov    bl,bl
  4081a4:	or     BYTE PTR [ecx],al
  4081a6:	mov    ebx,0x6e0120db
  4081ab:	fistp  DWORD PTR [ecx+eax*1]
  4081ae:	add    ebx,ebx
  4081b0:	ins    BYTE PTR es:[edi],dx
  4081b1:	add    DWORD PTR [eax],eax
  4081b3:	fistp  DWORD PTR [ecx+eax*1+0x6b]
  4081b7:	fisttp DWORD PTR [ecx]
  4081b9:	add    eax,edi
  4081bb:	fiadd  DWORD PTR [edi]
  4081bd:	add    DWORD PTR [ebx-0x25],ebx
  4081c0:	pop    ds
  4081c1:	add    DWORD PTR [esi-0x25],ebx
  4081c4:	sbb    eax,DWORD PTR [ecx]
  4081c6:	inc    ebx
  4081c7:	fld    TBYTE PTR [ebx+0x1]
  4081ca:	push   eax
  4081cb:	fistp  DWORD PTR [ebx+0x1]
  4081ce:	hlt    
  4081cf:	fnstcw WORD PTR [eax]
  4081d1:	add    ebp,esp
  4081d3:	fst    DWORD PTR [esi+0x1]
  4081d6:	jmp    0x4081b1
  4081d8:	sub    BYTE PTR [ecx],al
  4081da:	clc    
  4081db:	fnstcw WORD PTR [ecx]
  4081dd:	add    esp,edi
  4081df:	fst    DWORD PTR [edx]
  4081e1:	add    ebp,ebp
  4081e3:	fldenv [edx]
  4081e5:	add    DWORD PTR [edx],edx
  4081e7:	fisub  DWORD PTR [esi+0x1]
  4081ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081eb:	fst    QWORD PTR [ebp+0x1]
  4081ee:	add    BYTE PTR [eax],al
  4081f0:	frstor [edi]
  4081f3:	add    DWORD PTR [eax-0x63fec323],ebx
  4081f9:	fst    QWORD PTR [ecx]
  4081fb:	add    DWORD PTR [ebp-0x5dfede24],ebp
  408201:	frstor [ebp+0x1]
  408204:	mov    ds:0x81014add,eax
  408209:	fisttp QWORD PTR [ecx+0x1]
  40820c:	(bad)  
  40820d:	fadd   QWORD PTR [eax]
  40820f:	add    ecx,ecx
  408211:	fsubr  QWORD PTR [esi]
  408213:	add    DWORD PTR [edi],ebp
  408215:	cmp    eax,DWORD PTR [edx]
  408217:	push   ss
  408218:	cs push eax
  40821a:	add    ch,BYTE PTR [edx]
  40821c:	cs push esi
  40821e:	add    al,BYTE PTR [ebp+0x2e]
  408221:	push   ebp
  408222:	add    cl,BYTE PTR [esi+ebp*1+0x54]
  408226:	add    dh,BYTE PTR [esi]
  408228:	cs dec esi
  40822a:	add    dh,BYTE PTR [edx+0x2e]
  40822d:	sbb    al,BYTE PTR [edx]
  40822f:	push   0x6a01b12e
  408234:	cs daa 
  408236:	add    al,BYTE PTR [ecx]
  408238:	sbb    BYTE PTR cs:[edx],al
  40823b:	das    
  40823c:	or     eax,DWORD PTR cs:[edx]
  40823f:	pop    ss
  408240:	and    BYTE PTR cs:[edx],al
  408243:	sub    ebp,DWORD PTR [esi]
  408245:	mov    dh,0x1
  408247:	inc    esi
  408248:	cs mov ch,0x1
  40824b:	dec    ebp
  40824c:	cs aam 0x1
  40824f:	aaa    
  408250:	cs mov esi,0x7301
  408256:	cs retf 0x6901
  40825a:	cs loope 0x40825e
  40825d:	imul   ebp,DWORD PTR [esi],0x59
  408260:	push   es
  408261:	ds (bad) 
  408264:	or     DWORD PTR [edx],eax
  408266:	pop    ds
  408267:	and    eax,0x241f0c09
  40826c:	or     DWORD PTR ds:0x10662ff,ecx
  408272:	call   FWORD PTR [ecx+0x6]
  408275:	sti    
  408276:	jmp    DWORD PTR [eax+0x6]
  408279:	bnd call DWORD PTR [edi+0x6]
  40827d:	mov    eax,ds:0xa3064d5f
  408282:	pop    edi
  408283:	dec    esi
  408284:	push   es
  408285:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408286:	pop    edi
  408287:	pop    ebx
  408288:	push   es
  408289:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40828a:	pop    edi
  40828b:	pop    esp
  40828c:	push   es
  40828d:	test   eax,0x753de3f
  408292:	or     al,0xaf
  408294:	dec    esp
  408295:	pop    es
  408296:	adc    ch,BYTE PTR [edi-0x50f7f8bb]
  40829c:	ds pop es
  40829e:	in     al,dx
  40829f:	scas   al,BYTE PTR es:[edi]
  4082a0:	aaa    
  4082a1:	pop    es
  4082a2:	jecxz  0x408252
  4082a4:	cmp    BYTE PTR [edi],al
  4082a6:	lea    ebp,[esi-0x5174f8c7]
  4082ac:	cmp    al,BYTE PTR [edi]
  4082ae:	xchg   ecx,eax
  4082af:	scas   al,BYTE PTR es:[edi]
  4082b0:	fwait
  4082b1:	pop    es
  4082b2:	xchg   edi,eax
  4082b3:	scas   al,BYTE PTR es:[edi]
  4082b4:	xchg   esp,eax
  4082b5:	pop    es
  4082b6:	test   DWORD PTR [esi+0x79d],ebp
  4082bc:	test   BYTE PTR [esi-0x5125f86a],ch
  4082c2:	jg     0x4082cb
  4082c4:	shr    BYTE PTR [esi-0x5121f880],1
  4082ca:	jno    0x4082d3
  4082cc:	fsubr  QWORD PTR [esi-0x513df88e]
  4082d2:	arpl   WORD PTR [edi],ax
  4082d4:	mov    eax,0xb6075cae
  4082d9:	scas   al,BYTE PTR es:[edi]
  4082da:	push   ebp
  4082db:	pop    es
  4082dc:	mov    ah,0xae
  4082de:	dec    esi
  4082df:	pop    es
  4082e0:	stos   BYTE PTR es:[edi],al
  4082e1:	scas   al,BYTE PTR es:[edi]
  4082e2:	daa    
  4082e3:	pop    es
  4082e4:	mov    al,ds:0x6e0728ae
  4082e9:	scas   al,BYTE PTR es:[edi]
  4082ea:	sub    DWORD PTR [edi],eax
  4082ec:	imul   ebp,DWORD PTR [esi-0x518ef8d6],0xffffffab
  4082f3:	or     BYTE PTR [edi-0x52],dh
  4082f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082f7:	or     BYTE PTR [ebp-0x52],ah
  4082fa:	lods   eax,DWORD PTR ds:[esi]
  4082fb:	or     BYTE PTR [esi+ebp*4-0x5a],ah
  4082ff:	or     bl,bh
  408301:	lods   eax,DWORD PTR ds:[esi]
  408302:	scas   eax,DWORD PTR es:[edi]
  408303:	or     dl,dh
  408305:	lods   eax,DWORD PTR ds:[esi]
  408306:	mov    al,0x8
  408308:	jmp    0x27e383ba
  40830d:	lahf   
  40830e:	xor    DWORD PTR [edx-0x4ace73c9],esp
  408314:	aaa    
  408315:	mov    DWORD PTR [ecx],esi
  408317:	lods   al,BYTE PTR ds:[esi]
  408318:	daa    
  408319:	xchg   esi,eax
  40831a:	xor    DWORD PTR [edi-0x61ce6cd9],esp
  408320:	add    BYTE PTR [eax],al
  408322:	aaa    
  408323:	nop
  408324:	xor    DWORD PTR [ecx-0x67ce70c9],ebx
  40832a:	daa    
  40832b:	jle    0x40835e
  40832d:	fwait
  40832e:	daa    
  40832f:	jge    0x408362
  408331:	call   0x7a37:0x3d317c37
  408338:	xor    DWORD PTR [edi+eiz*1],esi
  40833b:	js     0x40836e
  40833d:	aas    
  40833e:	daa    
  40833f:	xchg   BYTE PTR [ecx],dh
  408341:	ss aaa 
  408343:	test   DWORD PTR [ecx],esi
  408345:	and    DWORD PTR [edi],esi
  408347:	test   BYTE PTR [ecx],dh
  408349:	and    BYTE PTR [edi],ah
  40834b:	xor    DWORD PTR [ecx],0x13
  40834e:	daa    
  40834f:	xor    BYTE PTR [ecx],0x12
  408352:	aaa    
  408353:	xor    DWORD PTR [ecx],0x317f3745
  408359:	cmp    al,0x27
  40835b:	imul   esi,DWORD PTR [ecx],0x37
  40835e:	daa    
  40835f:	push   ebx
  408360:	xor    DWORD PTR [esi],ebp
  408362:	aaa    
  408363:	push   edx
  408364:	xor    DWORD PTR [ebp+0x28],edx
  408367:	loop   0x40836f
  408369:	inc    edx
  40836a:	xor    bl,dl
  40836c:	push   es
  40836d:	ss sub bh,cl
  408370:	push   es
  408371:	sub    BYTE PTR [eax],dh
  408373:	mov    ebp,0xbc29ab06
  408378:	push   es
  408379:	stos   BYTE PTR es:[edi],al
  40837a:	xor    DWORD PTR [ebx-0x45d652fa],edi
  408380:	push   es
  408381:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408382:	xor    ebx,eax
  408384:	push   es
  408385:	add    BYTE PTR [eax],al
  408387:	add    al,dl
  408389:	in     al,0x26
  40838b:	push   es
  40838c:	shl    esp,1
  40838e:	and    eax,0x28e4ce06
  408393:	push   es
  408394:	iret   
  408395:	in     al,0x27
  408397:	push   es
  408398:	mov    esp,0xbd062ae4
  40839d:	in     al,0x29
  40839f:	push   es
  4083a0:	retf   0x2ce4
  4083a3:	push   es
  4083a4:	retf   
  4083a5:	in     al,0x2b
  4083a7:	push   es
  4083a8:	cwde   
  4083a9:	in     al,0x2e
  4083ab:	push   es
  4083ac:	mov    esp,esp
  4083ae:	sub    eax,0x30e4b606
  4083b3:	push   es
  4083b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083b5:	in     al,0x2f
  4083b7:	push   es
  4083b8:	add    al,0xe4
  4083ba:	xor    al,BYTE PTR [esi]
  4083bc:	cmc    
  4083bd:	jecxz  0x4083f0
  4083bf:	push   es
  4083c0:	repnz jecxz 0x4083f7
  4083c3:	push   es
  4083c4:	arpl   sp,sp
  4083c6:	xor    eax,DWORD PTR [esi]
  4083c8:	inc    eax
  4083c9:	in     al,0x36
  4083cb:	push   es
  4083cc:	inc    ecx
  4083cd:	in     al,0x35
  4083cf:	push   es
  4083d0:	ds in  al,0x38
  4083d3:	push   es
  4083d4:	pop    ds
  4083d5:	in     al,0x37
  4083d7:	push   es
  4083d8:	in     al,dx
  4083d9:	jecxz  0x408415
  4083db:	push   es
  4083dc:	es in  al,0x40
  4083df:	push   es
  4083e0:	daa    
  4083e1:	in     al,0x3f
  4083e3:	push   es
  4083e4:	xor    al,0xe4
  4083e6:	inc    edx
  4083e7:	push   es
  4083e8:	xor    eax,0x641e4
  4083ed:	add    BYTE PTR [edx],dh
  4083ef:	in     al,0x44
  4083f1:	push   es
  4083f2:	and    esp,esp
  4083f4:	inc    ebx
  4083f5:	push   es
  4083f6:	xor    ah,ah
  4083f8:	inc    esi
  4083f9:	push   es
  4083fa:	jno    0x4083db
  4083fc:	inc    ebp
  4083fd:	push   es
  4083fe:	pop    esi
  4083ff:	fisttp WORD PTR [eax+0x6]
  408402:	das    
  408403:	sahf   
  408404:	add    BYTE PTR [ecx+0x31],cl
  408407:	mov    eax,ds:0x90294a00
  40840c:	add    BYTE PTR [ebx+0x31],cl
  40840f:	fwait
  408410:	add    BYTE PTR [ecx+ebp*1-0x5e],cl
  408414:	add    BYTE PTR [ebp+0x31],cl
  408417:	sub    eax,0x54294e00
  40841c:	add    BYTE PTR [edi+0x31],cl
  40841f:	inc    edi
  408420:	add    BYTE PTR [eax+0x29],dl
  408423:	inc    esi
  408424:	add    BYTE PTR [ecx+0x31],dl
  408427:	dec    ecx
  408428:	add    BYTE PTR [edx+0x29],dl
  40842b:	push   ss
  40842c:	add    edx,DWORD PTR [edx+0x33]
  40842f:	sbb    DWORD PTR [ebx],eax
  408431:	push   ebx
  408432:	sub    ebx,DWORD PTR [eax]
  408434:	add    edx,DWORD PTR [ecx+0x33]
  408437:	and    eax,DWORD PTR [ebx]
  408439:	push   esp
  40843a:	sub    ebx,DWORD PTR [edx+0x3]
  40843d:	push   ebp
  40843e:	xor    esp,DWORD PTR [ebp+0x3]
  408441:	push   esi
  408442:	sub    ebx,DWORD PTR [ebx+eax*1+0x57]
  408446:	xor    ebx,DWORD PTR [edi+0x3]
  408449:	pop    eax
  40844a:	sub    ecx,DWORD PTR [esi+0x3]
  40844d:	pop    ecx
  40844e:	xor    edx,DWORD PTR [ecx+0x3]
  408451:	pop    edx
  408452:	add    BYTE PTR [eax],al
  408454:	sub    esp,DWORD PTR [eax+0x3]
  408457:	pop    ebx
  408458:	xor    ebp,ebx
  40845a:	add    bl,BYTE PTR [ebx+ebp*1+0x12]
  40845e:	add    edx,DWORD PTR [ecx+0x5e031d33]
  408464:	sub    esp,DWORD PTR [ebx+eax*1]
  408467:	pop    edi
  408468:	xor    eax,DWORD PTR [edi]
  40846a:	add    edx,DWORD PTR [esi]
  40846c:	push   cs
  40846d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40846e:	add    al,BYTE PTR [edx]
  408470:	xor    ebp,DWORD PTR [ecx-0x57d4fcfe]
  408476:	add    al,BYTE PTR [ecx]
  408478:	xor    esi,DWORD PTR [ebx-0x21d4fbfe]
  40847e:	pushf  
  40847f:	add    DWORD PTR [edx],esi
  408481:	loop   0x408418
  408483:	add    DWORD PTR [ecx],ebp
  408485:	loop   0x408425
  408487:	add    DWORD PTR [eax],esi
  408489:	loop   0x40841a
  40848b:	add    DWORD PTR [edi],esi
  40848d:	loop   0x40840f
  40848f:	add    DWORD PTR [esi],esp
  408491:	loop   0x408414
  408493:	add    DWORD PTR ds:0x340172e2,esp
  408499:	loop   0x408506
  40849b:	add    DWORD PTR [ebx],esi
  40849d:	loop   0x408503
  40849f:	add    DWORD PTR [edi+0x21015de2],ebx
  4084a5:	loop   0x4084fd
  4084a7:	add    DWORD PTR [eax],edi
  4084a9:	loop   0x408452
  4084ab:	add    DWORD PTR [ecx-0x1e],esi
  4084ae:	test   al,0x1
  4084b0:	pop    ds
  4084b1:	loop   0x40845c
  4084b3:	add    DWORD PTR [esi],ebx
  4084b5:	loop   0x408461
  4084b7:	add    DWORD PTR [eax],eax
  4084b9:	add    BYTE PTR [ecx-0x1e],dh
  4084bc:	mov    ds:0x2ce1fb01,eax
  4084c1:	add    DWORD PTR [edx],eax
  4084c3:	loop   0x4084ea
  4084c5:	add    DWORD PTR [ebx-0x1e],ebp
  4084c8:	add    DWORD PTR cs:[edx+eiz*8+0x1f],ebx
  4084cd:	add    edx,ebp
  4084cf:	loope  0x408501
  4084d1:	add    DWORD PTR [edi-0x1e],edx
  4084d4:	xor    DWORD PTR [ecx],eax
  4084d6:	push   esi
  4084d7:	loop   0x4084fb
  4084d9:	add    DWORD PTR [ebp-0x1e],eax
  4084dc:	sbb    eax,DWORD PTR [ecx]
  4084de:	inc    esp
  4084df:	loop   0x408515
  4084e1:	add    DWORD PTR [ebx],edi
  4084e3:	loop   0x408512
  4084e5:	add    DWORD PTR [edx],esi
  4084e7:	loop   0x40850f
  4084e9:	add    DWORD PTR [ecx],ebp
  4084eb:	loop   0x408524
  4084ed:	add    DWORD PTR [eax],esp
  4084ef:	loop   0x408509
  4084f1:	add    eax,ebp
  4084f3:	loope  0x40850e
  4084f5:	add    edi,ebp
  4084f7:	loope  0x4084f9
  4084f9:	sbb    ch,BYTE PTR [esi]
  4084fb:	sbb    eax,0x202e1505
  408500:	add    eax,0x51f2dbc
  408505:	mov    bh,0x2d
  408507:	mov    ah,0x4
  408509:	mov    esi,0xb104b02d
  40850e:	sub    eax,0x2da0051a
  408513:	pop    ss
  408514:	add    eax,0x4b32da3
  408519:	xchg   edx,eax
  40851a:	sub    eax,0x8d0516
  40851f:	add    BYTE PTR ds:0x2dc40519,ch
  408525:	adc    eax,0x232dbf05
  40852a:	add    eax,0x5182db6
  40852f:	mov    DWORD PTR ds:0x2d8804bc,ebp
  408535:	into   
  408536:	add    al,0x8b
  408538:	sub    eax,0x2d8a04cd
  40853d:	les    eax,FWORD PTR [eax*4+0x4c04d22d]
  408544:	sub    eax,0x2d4704d1
  408549:	ret    0x4e04
  40854c:	sub    eax,0x2d4104cf
  408551:	rol    DWORD PTR [eax+edx*2],0x2d
  408555:	mov    BYTE PTR [ebx+edx*2],0x2d
  408559:	lds    eax,FWORD PTR [edx+eax*2]
  40855c:	sub    eax,0x2d3d04c8
  408561:	mov    DWORD PTR [esp+edx*1],0xf04ca2d
  408568:	sub    eax,0x2d0604c9
  40856d:	int3   
  40856e:	add    al,0x19
  408570:	sub    eax,0x570004cb
  408575:	fsubr  QWORD PTR ds:0x20dc5404
  40857b:	add    al,0x45
  40857d:	fcomp  QWORD PTR [edi]
  40857f:	add    al,0x3a
  408581:	fsub   QWORD PTR [edx]
  408583:	add    al,0x0
  408585:	add    BYTE PTR [ebx-0x24],bl
  408588:	and    DWORD PTR [eax+ebx*2],eax
  40858b:	fcom   QWORD PTR [esi]
  40858d:	add    al,0x9
  40858f:	loopne 0x4085a3
  408591:	add    al,0xfe
  408593:	fild   QWORD PTR [esp+eax*1]
  408596:	out    dx,eax
  408597:	fild   QWORD PTR [ecx]
  408599:	add    al,0xec
  40859b:	fist   WORD PTR ds:0x28dfbd04
  4085a1:	add    al,0xd2
  4085a3:	fild   QWORD PTR [ebx]
  4085a5:	add    al,0xd3
  4085a7:	fbld   TBYTE PTR [edi]
  4085a9:	add    al,0x90
  4085ab:	fbld   TBYTE PTR ds:0x2adfc104
  4085b1:	add    al,0x77
  4085b3:	fiadd  WORD PTR [esi-0x77219bfd]
  4085b9:	add    esp,DWORD PTR [ebp-0x22]
  4085bc:	xchg   DWORD PTR [ebx],eax
  4085be:	jp     0x40859e
  4085c0:	mov    al,BYTE PTR [ebx]
  4085c2:	imul   ebx,esi,0xffffffaa
  4085c5:	add    ebp,DWORD PTR [ecx-0x61fc7322]
  4085cb:	fimul  WORD PTR [esi-0x562150fd]
  4085d1:	add    ebp,DWORD PTR [ebp-0x3ffc7222]
  4085d7:	fiadd  WORD PTR [ebx+0x13dea103]
  4085dd:	and    BYTE PTR [edi],al
  4085df:	fisubr WORD PTR [ebx+eax*1+0x3abde04]
  4085e6:	aad    0xdd
  4085e8:	scas   al,BYTE PTR es:[edi]
  4085e9:	add    eax,DWORD PTR [eax]
  4085eb:	add    dl,bl
  4085ed:	(bad)  [ebp+0x10a2f03]
  4085f3:	retf   0x112c
  4085f6:	add    DWORD PTR [eax-0x33ff57d4],edx
  4085fc:	sub    al,0x1f
  4085fe:	add    ebp,ecx
  408600:	sub    al,0xae
  408602:	add    bl,cl
  408604:	sub    al,0xad
  408606:	add    BYTE PTR [eax-0x3201c3d4],dh
  40860c:	sub    al,0x36
  40860e:	(bad)  
  40860f:	nop
  408610:	sub    al,0x35
  408612:	(bad)  
  408613:	xchg   ecx,eax
  408614:	sub    al,0x34
  408616:	(bad)  
  408617:	xchg   edx,eax
  408618:	sub    al,0x3b
  40861a:	(bad)  
  40861b:	xchg   ebx,eax
  40861c:	sub    al,0x42
  40861e:	(bad)  
  40861f:	xchg   esp,eax
  408620:	sub    al,0x39
  408622:	(bad)  
  408623:	xchg   ebp,eax
  408624:	sub    al,0x40
  408626:	(bad)  
  408627:	xchg   esi,eax
  408628:	sub    al,0x2f
  40862a:	(bad)  
  40862b:	xchg   edi,eax
  40862c:	sub    al,0x2e
  40862e:	(bad)  
  40862f:	cwde   
  408630:	sub    al,0x3d
  408632:	(bad)  
  408633:	cdq    
  408634:	sub    al,0x3c
  408636:	(bad)  
  408637:	call   0x3a2c:0x9bfe332c
  40863e:	(bad)  
  40863f:	pushf  
  408640:	sub    al,0x41
  408642:	(bad)  
  408643:	popf   
  408644:	sub    al,0x48
  408646:	(bad)  
  408647:	sahf   
  408648:	sub    al,0xa7
  40864a:	std    
  40864b:	lahf   
  40864c:	sub    al,0xa6
  40864e:	std    
  40864f:	mov    al,ds:0xa52c0000
  408654:	std    
  408655:	mov    ds:0xa3fdb32c,al
  40865a:	sub    al,0xca
  40865c:	std    
  40865d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40865e:	sub    al,0xd1
  408660:	std    
  408661:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408662:	sub    al,0xc8
  408664:	std    
  408665:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408666:	sub    al,0xcf
  408668:	std    
  408669:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40866a:	sub    al,0xde
  40866c:	inc    eax
  40866d:	inc    edi
  40866f:	fmul   QWORD PTR [eax]
  408671:	call   FWORD PTR [edi-0x6100f624]
  408677:	fmul   QWORD PTR [edx]
  408679:	call   FWORD PTR [ebp-0x6300f424]
  40867f:	fadd   QWORD PTR [edi+edi*8]
  408682:	sbb    esp,0xd
  408685:	(bad)  
  408686:	jp     0x408664
  408688:	push   es
  408689:	inc    DWORD PTR [ecx+0x78fecfdc]
  40868f:	(bad)  
  408691:	(bad)  
  408692:	out    0xdb,eax
  408694:	sar    esi,0xe6
  408697:	fcmovnb st,st(2)
  408699:	(bad)  
  40869a:	aad    0xdb
  40869c:	sar    esi,cl
  40869e:	aam    0xdb
  4086a0:	int3   
  4086a1:	dec    bl
  4086a3:	fcmovnb st,st(5)
  4086a5:	inc    dl
  4086a7:	fstp   TBYTE PTR [esi-0x68244602]
  4086ad:	(bad)  
  4086ae:	mov    al,0xdb
  4086b0:	cwde   
  4086b1:	(bad)  
  4086b2:	out    dx,eax
  4086b3:	fistp  DWORD PTR [ecx-0x12ffff02]
  4086b9:	fistp  DWORD PTR [edx+0x7bdbeefe]
  4086bf:	(bad)  
  4086c0:	in     al,dx
  4086c1:	(bad)  [esi+edi*8-0xd]
  4086c5:	fstp   TBYTE PTR [ebp-0x2]
  4086c8:	jmp    0x5fdb:0xf1fe76db
  4086cf:	(bad)  
  4086d0:	call   0x783ee7b0
  4086d5:	fisttp DWORD PTR [eax-0x76442605]
  4086db:	sti    
  4086dc:	and    al,0xc1
  4086de:	mov    bh,bl
  4086e0:	nop
  4086e1:	ret    0xfb83
  4086e4:	sub    BYTE PTR [ebx-0x417b7400],bh
  4086ea:	and    DWORD PTR [edi+0x4e23dd74],eax
  4086f0:	je     0x408730
  4086f2:	and    dl,BYTE PTR [ecx+0x64]
  4086f5:	cmp    al,0x22
  4086f7:	inc    eax
  4086f8:	cmp    esp,DWORD PTR fs:[edx]
  4086fb:	inc    ebx
  4086fc:	push   esp
  4086fd:	inc    ecx
  4086fe:	and    dl,BYTE PTR [edx+0x54]
  408701:	inc    esp
  408702:	and    cl,BYTE PTR [ebp+0x44]
  408705:	dec    edx
  408706:	and    al,BYTE PTR [esp+eax*2+0x49]
  40870a:	and    bh,BYTE PTR [edi]
  40870c:	xor    al,0x47
  40870e:	and    dl,BYTE PTR [esi-0x66ddc0cd]
  408714:	sub    esi,DWORD PTR [ebx]
  408716:	and    dl,BYTE PTR [ebp-0x73dd04dd]
  40871c:	add    BYTE PTR [eax],al
  40871e:	sbb    eax,DWORD PTR [edi]
  408720:	and    eax,DWORD PTR [edi+0x7e230213]
  408726:	or     esi,DWORD PTR [edx+eiz*1+0x22ab03a9]
  40872d:	test   al,0xfb
  40872f:	leave  
  408730:	and    ch,BYTE PTR [ebx-0x5bdd370d]
  408736:	jmp    0x408717
  408738:	and    ah,BYTE PTR [ecx-0x5fdd5d1d]
  40873e:	fistp  DWORD PTR [ebx]
  408740:	and    esi,DWORD PTR [ebx+edx*8-0x3450df76]
  408747:	mov    WORD PTR [eax],fs
  408749:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40874a:	ret    
  40874b:	std    
  40874c:	and    dl,BYTE PTR [edi+0x4322c4bb]
  408752:	mov    bl,0x5c
  408754:	and    eax,DWORD PTR [edx-0x55]
  408757:	pop    ebx
  408758:	and    esi,DWORD PTR ds:0x2c22b5a3
  40875e:	fwait
  40875f:	mov    ah,0x22
  408761:	add    BYTE PTR [eax+0x6a],cl
  408764:	daa    
  408765:	and    ch,BYTE PTR [ecx]
  408767:	push   0x26
  408769:	and    ch,cl
  40876b:	imul   eax,DWORD PTR [eax],0x906a4022
  408771:	add    DWORD PTR [ebp+0x6a],ecx
  408774:	mov    fs,WORD PTR [ecx]
  408776:	dec    edx
  408777:	push   0xffffff91
  408779:	and    DWORD PTR [ebx],edi
  40877b:	push   0xffffff90
  40877d:	and    DWORD PTR [eax],ebp
  40877f:	push   0xffffff93
  408781:	and    DWORD PTR [eax],eax
  408783:	add    BYTE PTR [ecx],cl
  408785:	arpl   WORD PTR [eax],sp
  408787:	and    al,0x36
  408789:	arpl   sp,ax
  40878b:	and    eax,0x25906337
  408790:	and    al,0x63
  408792:	or     DWORD PTR [eiz*2-0xddbf59d],esp
  408799:	push   0x68f3240d
  40879e:	or     BYTE PTR [esi+ebp*8],ah
  4087a1:	push   0x68ff2422
  4087a6:	or     esp,DWORD PTR [esp+ebx*8]
  4087a9:	push   0x68ed2516
  4087ae:	push   cs
  4087af:	and    eax,0x250a68ba
  4087b4:	fwait
  4087b5:	push   0x68b82512
  4087ba:	cmp    ah,BYTE PTR ds:0x23b868a9
  4087c0:	mov    dh,0x68
  4087c2:	mov    ebx,0xfe685723
  4087c7:	and    al,0x44
  4087c9:	push   0x684523ba
  4087ce:	mov    ebp,0x1a684223
  4087d3:	and    eax,0x25226853
  4087d8:	add    BYTE PTR [eax+0x32],ch
  4087db:	and    eax,0x2bfb042f
  4087e0:	push   edx
  4087e1:	psubq  mm0,QWORD PTR [ecx]
  4087e4:	dec    edx
  4087e5:	push   esi
  4087e6:	clc    
  4087e7:	add    al,BYTE PTR [eax]
  4087e9:	add    BYTE PTR [edi+0x59],cl
  4087ec:	clc    
  4087ed:	add    DWORD PTR [edi+0x58],ecx
  4087f0:	clc    
  4087f1:	add    ecx,DWORD PTR [edi+0x5b]
  4087f4:	clc    
  4087f5:	add    al,0x4f
  4087f7:	adc    bh,al
  4087f9:	push   es
  4087fa:	nop    eax
  4087fd:	pop    es
  4087fe:	unpcklps xmm7,xmm0
  408801:	or     BYTE PTR [edi],cl
  408803:	pop    ds
  408804:	clc    
  408805:	or     DWORD PTR [edi],ecx
  408807:	push   cs
  408808:	clc    
  408809:	adc    ecx,DWORD PTR [edi]
  40880b:	adc    eax,edi
  40880d:	adc    cl,BYTE PTR [edi]
  40880f:	sbb    edi,eax
  408811:	and    dl,BYTE PTR [ebx]
  408813:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408814:	mul    DWORD PTR ds:0x250f4c0f
  40881a:	dec    edi
  40881b:	inc    edi
  40881c:	rcpps  xmm1,XMMWORD PTR [esi+0x46]
  408820:	andps  xmm1,XMMWORD PTR [esi+0x49]
  408824:	andnps xmm1,XMMWORD PTR [esi-0x18]
  408828:	push   cs
  408829:	push   esi
  40882a:	dec    esi
  40882b:	jmp    0x40883b
  40882d:	push   edi
  40882e:	dec    esi
  40882f:	loop   0x40883f
  408831:	pop    eax
  408832:	dec    esi
  408833:	in     eax,dx
  408834:	push   cs
  408835:	pop    ecx
  408836:	dec    esi
  408837:	add    al,0xf
  408839:	pop    edx
  40883a:	push   cs
  40883b:	dec    DWORD PTR [esi]
  40883d:	add    eax,0x120f100e
  408842:	movlps QWORD PTR [edi],xmm1
  408845:	sub    DWORD PTR [edx+ebx*1],ecx
  408848:	ucomiss xmm5,DWORD PTR [edi]
  40884b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40884c:	push   cs
  40884d:	sub    al,BYTE PTR [eax]
  40884f:	add    BYTE PTR [eax+edi*1],cl
  408852:	cvtdq2ps xmm1,XMMWORD PTR [esi]
  408855:	cmp    ecx,DWORD PTR [edi]
  408857:	pop    esp
  408858:	push   cs
  408859:	fisubr WORD PTR [esi+ecx*1]
  40885c:	or     bh,BYTE PTR [edi-0x40fef1db]
  408862:	and    BYTE PTR [esi],cl
  408864:	dec    ebp
  408865:	mov    edi,0xbc3c0e21
  40886a:	xor    ecx,DWORD PTR [esi]
  40886c:	outs   dx,BYTE PTR ds:[esi]
  40886d:	mov    edx,0xbab80e2c
  408872:	and    eax,0x1eba640e
  408877:	push   cs
  408878:	sar    BYTE PTR [edx-0x41b8f1c9],0x38
  40887f:	push   cs
  408880:	inc    esi
  408881:	mov    esi,0xbe3b0e39
  408886:	cmp    cl,BYTE PTR [esi]
  408888:	xor    bh,BYTE PTR [esi-0x40d6f1e5]
  40888e:	adc    eax,0x1ebdfd0e
  408893:	push   cs
  408894:	cld    
  408895:	mov    ebp,0xbd120e10
  40889a:	ret    0xdb0d
  40889d:	mov    ecx,0xb9ef0dbb
  4088a2:	mov    ah,0xd
  4088a4:	loope  0x40885f
  4088a6:	lods   eax,DWORD PTR ds:[esi]
  4088a7:	or     eax,0xda6b9e0
  4088ac:	fnstcw WORD PTR [ecx-0x45f6f239]
  4088b2:	enter  0xd,0x0
  4088b6:	les    edi,FWORD PTR [ecx-0x463df237]
  4088bc:	mov    cl,BYTE PTR ds:0xd83b99c
  4088c2:	mov    ds:0x310d8cb9,al
  4088c7:	mov    esp,0xbe0d0d85
  4088cc:	mov    cs,WORD PTR ds:0xd8fb995
  4088d2:	jge    0x40888d
  4088d4:	add    BYTE PTR [eax-0x7cdbddd6],al
  4088da:	and    al,dl
  4088dc:	es push edx
  4088de:	cmp    al,ah
  4088e0:	es dec ebp
  4088e2:	xor    bh,bh
  4088e4:	es inc esp
  4088e6:	sub    bh,ah
  4088e8:	es aas 
  4088ea:	and    bh,cl
  4088ec:	cmp    DWORD PTR es:[edx],edi
  4088ef:	mov    esi,0xbe323825
  4088f4:	and    BYTE PTR [ebx],bh
  4088f6:	sub    bh,BYTE PTR [ebp-0x30ddc5e0]
  4088fc:	and    eax,0x25cb3a1d
  408901:	adc    al,0x32
  408903:	repz es pop ds
  408906:	sub    dh,cl
  408908:	es push ss
  40890a:	and    ah,BYTE PTR [eax]
  40890c:	daa    
  40890d:	add    DWORD PTR [edx],edi
  40890f:	push   ds
  408910:	daa    
  408911:	add    BYTE PTR [edx],dh
  408913:	aam    0x26
  408915:	repz sub ecx,ecx
  408918:	and    edx,esi
  40891a:	add    BYTE PTR [eax],al
  40891c:	and    ecx,ebx
  40891e:	pop    ds
  40891f:	in     eax,0x39
  408921:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408922:	and    ah,bl
  408924:	xor    eax,ecx
  408926:	and    bh,dl
  408928:	sub    esp,eax
  40892a:	and    BYTE PTR [edx-0x70ff5dde],cl
  408930:	cmp    ah,BYTE PTR [eax+eax*1+0x22b63291]
  408937:	sub    BYTE PTR [edx],0xbb
  40893a:	and    ch,BYTE PTR [ecx-0x54feccde]
  408940:	cmp    bh,BYTE PTR [ecx]
  408942:	and    ebp,DWORD PTR [edx-0x52dd4ace]
  408948:	sub    bl,al
  40894a:	and    DWORD PTR [edi+0x10322],esp
  408950:	jl     0x408922
  408952:	sbb    BYTE PTR [edx],ah
  408954:	xchg   edx,eax
  408955:	rcl    BYTE PTR [ebx-0x5b2f6fdd],1
  40895b:	and    dl,BYTE PTR [ecx+0x6525c9d0]
  408961:	ror    DWORD PTR [eax],1
  408963:	and    ebx,DWORD PTR [eax-0x2f]
  408966:	sub    ah,BYTE PTR [edx]
  408968:	pop    esi
  408969:	rol    DWORD PTR [ecx-0x7d2ea3de],1
  40896f:	and    dl,BYTE PTR [edx-0x2f]
  408972:	mov    ds:0xa1d14222,al
  408977:	and    ah,BYTE PTR [ecx]
  408979:	into   
  40897a:	adc    eax,0xd0cde620
  40897f:	add    eax,0xce370000
  408984:	iret   
  408985:	add    eax,0x5d2ce34
  40898a:	and    eax,0x2a05d1ce
  40898f:	into   
  408990:	aam    0x5
  408992:	cmp    ecx,esi
  408994:	rol    DWORD PTR ds:0x5d6ce28,cl
  40899a:	sub    esi,ecx
  40899c:	aad    0x5
  40899e:	cs into 
  4089a0:	fadd   DWORD PTR ds:0x5d7d1ff
  4089a6:	cld    
  4089a7:	rcr    edx,1
  4089a9:	add    eax,0x5d9d1ed
  4089ae:	rcl    cl,cl
  4089b0:	fadd   QWORD PTR ds:0x5dbd1e3
  4089b6:	lock rcr esi,1
  4089b9:	add    eax,0x5ddd1f1
  4089be:	mov    dh,0xd1
  4089c0:	loopne 0x4089c7
  4089c2:	(bad)  
  4089c3:	rcr    edi,1
  4089c5:	add    eax,0x5e2d1c4
  4089ca:	das    
  4089cb:	inc    esp
  4089cc:	push   cs
  4089cd:	jecxz  0x4089f9
  4089cf:	dec    ebx
  4089d0:	push   cs
  4089d1:	in     al,0x32
  4089d3:	loop   0x4089e2
  4089d5:	in     eax,0x2a
  4089d7:	jmp    0xe0736fe9
  4089dc:	or     eax,0xdef2ae7
  4089e1:	call   0xe94e8818
  4089e6:	add    BYTE PTR [eax],al
  4089e8:	sub    bh,ch
  4089ea:	or     eax,0xf5632ea
  4089ef:	add    DWORD PTR [ecx],esp
  4089f1:	push   ebp
  4089f2:	lar    edi,WORD PTR [ecx]
  4089f5:	push   esp
  4089f6:	lsl    esi,WORD PTR [ecx]
  4089f9:	pop    ebx
  4089fa:	(bad)  
  4089fc:	sub    DWORD PTR [edx+0xf],edx
  4089ff:	add    eax,0x60f5921
  408a04:	cmp    DWORD PTR [eax],edx
  408a06:	sysret 
  408a08:	xor    DWORD PTR [edi],ecx
  408a0a:	invd   
  408a0c:	sub    DWORD PTR [esi],ebx
  408a0e:	wbinvd 
  408a10:	and    DWORD PTR ds:0xc390a0f,ebx
  408a16:	ud2    
  408a18:	xor    DWORD PTR [ebx],edx
  408a1a:	(bad)  
  408a1c:	sub    DWORD PTR [edx],ebx
  408a1e:	prefetch BYTE PTR [ecx]
  408a21:	mov    eax,ds:0x48390e0e
  408a26:	adc    BYTE PTR [edi],cl
  408a28:	xor    DWORD PTR [edi+0x10],eax
  408a2b:	adc    BYTE PTR [ecx],ch
  408a2d:	inc    esi
  408a2e:	adc    BYTE PTR [ecx],dl
  408a30:	and    DWORD PTR [ebp+0x10],eax
  408a33:	adc    bh,BYTE PTR [ecx]
  408a35:	in     al,0xf
  408a37:	adc    esi,DWORD PTR [ecx]
  408a39:	jmp    0x408a4a
  408a3b:	adc    al,0x29
  408a3d:	loop   0x408a4e
  408a3f:	adc    eax,0x160fe921
  408a44:	cmp    esi,ebx
  408a46:	pop    esi
  408a47:	adc    DWORD PTR [eax],edi
  408a49:	rcr    BYTE PTR [edi+0x11],1
  408a4c:	add    BYTE PTR [eax],al
  408a4e:	aaa    
  408a4f:	rcl    BYTE PTR [eax+0x11],1
  408a52:	rcl    BYTE PTR ss:[ecx+0x11],1
  408a56:	and    eax,0x241142d0
  408a5b:	sar    BYTE PTR [ebx],1
  408a5d:	adc    DWORD PTR [ebx],ebx
  408a5f:	shl    BYTE PTR [ecx+edx*1],1
  408a62:	adc    dl,al
  408a64:	sub    eax,0xa6d04911
  408a69:	adc    DWORD PTR [eax-0x30],eax
  408a6c:	daa    
  408a6d:	adc    DWORD PTR [edi-0x30],ecx
  408a70:	sub    BYTE PTR [ecx],dl
  408a72:	dec    esi
  408a73:	shr    BYTE PTR [ecx],1
  408a75:	adc    DWORD PTR [ebp-0x30],ecx
  408a78:	sub    dl,BYTE PTR [ecx]
  408a7a:	dec    esp
  408a7b:	shl    BYTE PTR [ebx],1
  408a7d:	adc    DWORD PTR [ebx-0x30],edx
  408a80:	sub    al,0x11
  408a82:	dec    edx
  408a83:	shl    BYTE PTR ds:0x2ed01111,1
  408a89:	adc    DWORD PTR [eax],ecx
  408a8b:	shr    BYTE PTR [edi],1
  408a8d:	adc    DWORD PTR [edi],eax
  408a8f:	shl    BYTE PTR [eax],1
  408a91:	adc    DWORD PTR [esi],eax
  408a93:	shl    BYTE PTR [ecx],1
  408a95:	adc    DWORD PTR ds:0x141132d0,edx
  408a9b:	shr    BYTE PTR [ebx],1
  408a9d:	adc    DWORD PTR [ebx],ecx
  408a9f:	shl    BYTE PTR [ecx+edx*1],1
  408aa2:	add    dl,al
  408aa4:	sbb    eax,0xb6d05911
  408aa9:	adc    BYTE PTR [eax-0x30],dl
  408aac:	mov    bh,0x10
  408aae:	pop    edi
  408aaf:	sar    BYTE PTR [eax+0x5e000010],1
  408ab5:	sar    BYTE PTR [ecx-0x652fc2f0],1
  408abb:	adc    BYTE PTR [eax+edx*8],bh
  408abe:	xchg   ebx,eax
  408abf:	adc    BYTE PTR [ebx-0x30],al
  408ac2:	add    BYTE PTR [edi+ebx*1+0x3f970ea9],bl
  408ac9:	test   al,0xe
  408acb:	mov    esi,0xc10ea73f
  408ad0:	aas    
  408ad1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ad2:	push   cs
  408ad3:	mov    al,0x3f
  408ad5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ad6:	push   cs
  408ad7:	mov    bl,0x1f
  408ad9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ada:	push   cs
  408adb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408adc:	pop    ds
  408add:	mov    al,ds:0x9f1f9e0e
  408ae2:	push   cs
  408ae3:	mov    DWORD PTR [edi],ebx
  408ae5:	push   ds
  408ae6:	js     0x4b4fa82b
  408aec:	aas    
  408aed:	sbb    al,0xf
  408aef:	dec    edx
  408af0:	aas    
  408af1:	sbb    ecx,DWORD PTR [edi]
  408af3:	dec    ebp
  408af4:	aas    
  408af5:	sbb    cl,BYTE PTR [edi]
  408af7:	inc    esp
  408af8:	pop    ds
  408af9:	sbb    DWORD PTR [edi],ecx
  408afb:	dec    edi
  408afc:	pop    ds
  408afd:	sbb    BYTE PTR [edi],cl
  408aff:	inc    esi
  408b00:	pop    ds
  408b01:	pop    ss
  408b02:	cmovno ebx,DWORD PTR [edi]
  408b05:	push   ss
  408b06:	cmovo  edi,DWORD PTR [edi]
  408b09:	adc    eax,0x143f130f
  408b0e:	movlps xmm7,QWORD PTR [edi]
  408b11:	adc    ecx,DWORD PTR [edi]
  408b13:	add    eax,0xfc0f123f
  408b18:	add    BYTE PTR [eax],al
  408b1a:	cmp    BYTE PTR [ecx],dl
  408b1c:	psubw  mm6,QWORD PTR [eax]
  408b1f:	push   cs
  408b20:	psubb  mm5,QWORD PTR [eax]
  408b23:	or     eax,0xc20fb0f
  408b28:	psubd  mm7,QWORD PTR [eax]
  408b2b:	or     ecx,DWORD PTR [edi]
  408b2d:	fnsave [eax]
  408b2f:	or     cl,BYTE PTR [edi]
  408b31:	aam    0x28
  408b33:	or     DWORD PTR [edi],ecx
  408b35:	fbld   TBYTE PTR [eax]
  408b37:	or     BYTE PTR [edi],cl
  408b39:	(bad)  
  408b3a:	cmp    BYTE PTR [edi],al
  408b3c:	verw   si
  408b3f:	into   
  408b40:	pop    eax
  408b41:	push   cs
  408b42:	out    dx,eax
  408b43:	into   
  408b44:	push   edi
  408b45:	push   cs
  408b46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b47:	iret   
  408b48:	das    
  408b49:	xor    DWORD PTR [edi+ecx*8-0x2f8acece],esi
  408b50:	xor    DWORD PTR [ecx],esi
  408b52:	jb     0x408b24
  408b54:	xor    al,0x31
  408b56:	arpl   ax,dx
  408b58:	xor    esi,DWORD PTR [ecx]
  408b5a:	jo     0x408b2c
  408b5c:	xor    DWORD PTR ss:[ecx-0x30],esi
  408b60:	xor    eax,0x38d05e31
  408b65:	xor    DWORD PTR [edi-0x30],ebp
  408b68:	aaa    
  408b69:	xor    esp,ebp
  408b6b:	iret   
  408b6c:	cmp    dh,BYTE PTR [ecx]
  408b6e:	mov    ebp,0xaa3139cf
  408b73:	iret   
  408b74:	cmp    al,0x31
  408b76:	stos   DWORD PTR es:[edi],eax
  408b77:	iret   
  408b78:	cmp    esi,DWORD PTR [ecx]
  408b7a:	or     al,dl
  408b7c:	xor    DWORD PTR ds:[eax],eax
  408b7f:	add    BYTE PTR [ecx-0x9cec231],bl
  408b85:	iret   
  408b86:	inc    eax
  408b87:	xor    edi,esi
  408b89:	iret   
  408b8a:	aas    
  408b8b:	xor    esp,esp
  408b8d:	iret   
  408b8e:	inc    edx
  408b8f:	xor    DWORD PTR ds:0x23141d0,eax
  408b95:	rol    BYTE PTR [ecx+esi*1-0xd],1
  408b99:	iret   
  408b9a:	inc    ebx
  408b9b:	xor    eax,esp
  408b9d:	iret   
  408b9e:	inc    esi
  408b9f:	xor    DWORD PTR [ecx],eax
  408ba1:	rol    BYTE PTR [ebp+0x31],1
  408ba4:	out    dx,al
  408ba5:	iret   
  408ba6:	dec    eax
  408ba7:	xor    edi,edi
  408ba9:	iret   
  408baa:	inc    edi
  408bab:	xor    DWORD PTR [esp+ebp*8+0x4a],ebx
  408baf:	xor    ebp,ecx
  408bb1:	jmp    0x408bfc
  408bb3:	xor    DWORD PTR [edx+0x2f314ceb],edi
  408bb9:	jb     0x408bc7
  408bbb:	dec    ebp
  408bbc:	ds ins DWORD PTR es:[edi],dx
  408bbe:	or     al,0x4e
  408bc0:	ds fs or al,0x4f
  408bc4:	xchg   DWORD PTR ds:[eax+edx*2],ecx
  408bc8:	xchg   BYTE PTR ds:[ecx+edx*2],cl
  408bcc:	push   ds
  408bcd:	mov    DWORD PTR [edx+edx*2],ecx
  408bd0:	push   ds
  408bd1:	mov    BYTE PTR [ebx+edx*2],cl
  408bd4:	push   ds
  408bd5:	or     DWORD PTR [esp+edx*2],0x1e
  408bd9:	mov    cl,BYTE PTR [edx*2+0x560c84fe]
  408be0:	dec    BYTE PTR [ebx+0x570c]
  408be6:	dec    BYTE PTR [esi+0x7dfe580c]
  408bec:	or     al,0x59
  408bee:	pop    esi
  408bef:	or     DWORD PTR [edx+ebx*2],0x5b0c105e
  408bf6:	pop    esi
  408bf7:	or     ecx,DWORD PTR [esp+ebx*2]
  408bfa:	pop    esi
  408bfb:	add    cl,BYTE PTR [ebx*2+0x5e0bfd3e]
  408c02:	ds adc al,0xc
  408c05:	pop    edi
  408c06:	test   DWORD PTR ds:[ebx],0xbf63e60
  408c0d:	popa   
  408c0e:	push   ds
  408c0f:	stc    
  408c10:	or     esp,DWORD PTR [edx+0x1e]
  408c13:	sbb    BYTE PTR [ebx+eiz*2],cl
  408c16:	push   ds
  408c17:	adc    ecx,DWORD PTR [eax+ebp*4]
  408c1a:	sbb    cl,BYTE PTR ds:[ecx+ebp*4]
  408c1e:	push   ds
  408c1f:	adc    eax,0xfc1eaa0c
  408c24:	or     ebp,DWORD PTR [ebx-0x53f400e2]
  408c2a:	push   ds
  408c2b:	out    dx,al
  408c2c:	or     ebp,DWORD PTR [ebp-0x51f40ec2]
  408c32:	ds faddp st(2),st
  408c35:	or     cl,al
  408c37:	out    dx,al
  408c38:	mov    ebx,0xb4eedf0a
  408c3d:	or     bh,BYTE PTR [esi-0x42f55212]
  408c43:	out    dx,al
  408c44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c45:	or     bh,BYTE PTR [esi+ebp*8+0xac7]
  408c4c:	mov    ebx,0xa20ac8ee
  408c51:	out    dx,al
  408c52:	leave  
  408c53:	or     bl,BYTE PTR [ecx-0x5ff57512]
  408c59:	out    dx,al
  408c5a:	or     DWORD PTR [edx],0xffffff97
  408c5d:	out    dx,al
  408c5e:	mov    WORD PTR [edx],cs
  408c60:	xchg   dh,ch
  408c62:	test   DWORD PTR [edx],ecx
  408c64:	test   esi,ebp
  408c66:	mov    cs,WORD PTR [edx]
  408c68:	je     0x408c58
  408c6a:	(bad)
  408c6e:	or     BYTE PTR [edx],0xea
  408c71:	out    dx,al
  408c72:	or     DWORD PTR [edx],0xa52eee1
  408c78:	fsubr  st,st(6)
  408c7a:	dec    ebx
  408c7b:	or     ch,BYTE PTR [edi-0x12]
  408c7e:	inc    esp
  408c7f:	or     ch,BYTE PTR [esi-0x12]
  408c82:	cmp    eax,0x56ee6d0a
  408c87:	or     cl,BYTE PTR [edx]
  408c89:	psignd mm7,mm6
  408c8d:	push   cs
  408c8e:	cmp    DWORD PTR [edx],ecx
  408c90:	out    0xe,eax
  408c92:	cmp    cl,BYTE PTR [edx]
  408c94:	loopne 0x408ca4
  408c96:	sbb    ecx,DWORD PTR [edx]
  408c98:	scas   al,BYTE PTR es:[edi]
  408c99:	push   cs
  408c9a:	adc    al,0xa
  408c9c:	stos   DWORD PTR es:[edi],eax
  408c9d:	push   cs
  408c9e:	sbb    eax,0x160eb10a
  408ca3:	or     dh,BYTE PTR [edx-0x56f600f2]
  408ca9:	push   cs
  408caa:	add    BYTE PTR [edx],cl
  408cac:	inc    esp
  408cad:	out    dx,al
  408cae:	add    al,dh
  408cb0:	add    BYTE PTR [eax],al
  408cb2:	ss dec esi
  408cb4:	adc    bl,dh
  408cb6:	ss push ebp
  408cb8:	adc    dh,ah
  408cba:	test   DWORD PTR es:[ecx],esp
  408cbd:	test   DWORD PTR [ecx],edi
  408cbf:	mov    ah,BYTE PTR [ecx]
  408cc1:	xchg   ebp,eax
  408cc2:	and    DWORD PTR [eax-0x50e67401],esi
  408cc8:	inc    DWORD PTR [esi-0x770029df]
  408cce:	or     al,0x7c
  408cd0:	and    DWORD PTR [eax-0x74de8134],ecx
  408cd6:	int3   
  408cd7:	jge    0x408cfa
  408cd9:	dec    edx
  408cda:	int3   
  408cdb:	and    BYTE PTR [ecx],0x45
  408cde:	int3   
  408cdf:	jg     0x408d02
  408ce1:	dec    esp
  408ce2:	int3   
  408ce3:	and    BYTE PTR [ecx],0x47
  408ce6:	int3   
  408ce7:	and    DWORD PTR [ecx],0x2184cc4e
  408ced:	push   ecx
  408cee:	int3   
  408cef:	and    DWORD PTR [ecx],0x40
  408cf2:	mov    WORD PTR [esi-0x7a73bcdf],es
  408cf8:	and    DWORD PTR [edx-0x72de7774],edx
  408cfe:	mov    WORD PTR [edi-0x21ba1edf],es
  408d04:	add    cl,ah
  408d06:	sub    al,0xde
  408d08:	add    al,dh
  408d0a:	xor    eax,0x2cf000de
  408d0f:	fiadd  WORD PTR [eax]
  408d11:	loop   0x408d38
  408d13:	fiadd  WORD PTR [eax]
  408d15:	fld    QWORD PTR [eax]
  408d17:	add    BYTE PTR [esi+ebx*8],ch
  408d1a:	add    ah,dh
  408d1c:	adc    eax,0x2cec00de
  408d21:	fiadd  WORD PTR [eax]
  408d23:	cli    
  408d24:	add    eax,0x2cfa00de
  408d29:	fiadd  WORD PTR [eax]
  408d2b:	add    BYTE PTR [ebp+0x18],cl
  408d2e:	add    DWORD PTR [eax],eax
  408d30:	dec    ebp
  408d31:	fild   WORD PTR [eax]
  408d33:	add    BYTE PTR [ecx],ah
  408d35:	adc    eax,0xe1e00001
  408d3a:	add    BYTE PTR [eax],al
  408d3c:	push   esi
  408d3d:	adc    eax,0xdf2a0001
  408d42:	add    BYTE PTR [eax],al
  408d44:	inc    edi
  408d45:	adc    eax,0xdf2b0001
  408d4a:	add    BYTE PTR [eax],al
  408d4c:	adc    al,0x15
  408d4e:	add    DWORD PTR [eax],eax
  408d50:	sub    bh,bl
  408d52:	add    BYTE PTR [eax],al
  408d54:	inc    ebp
  408d55:	adc    eax,0xdf290001
  408d5a:	add    BYTE PTR [eax],al
  408d5c:	sbb    dl,BYTE PTR ds:0xdffe0001
  408d62:	add    BYTE PTR [eax],al
  408d64:	or     edx,DWORD PTR ds:0xdff70001
  408d6a:	add    BYTE PTR [eax],al
  408d6c:	sbb    BYTE PTR ds:0xdfe40001,dl
  408d72:	add    BYTE PTR [eax],al
  408d74:	dec    ecx
  408d75:	adc    eax,0xdf750001
  408d7a:	add    BYTE PTR [eax],al
  408d7c:	add    BYTE PTR [eax],al
  408d7e:	adc    ax,0x1
  408d82:	aas    
  408d83:	loop   0x408d85
  408d85:	add    BYTE PTR [edi+0x15],dh
  408d88:	add    DWORD PTR [eax],eax
  408d8a:	sbb    dh,0x0
  408d8d:	add    BYTE PTR [ebp+edx*1+0x1],ah
  408d91:	add    BYTE PTR ds:0x750000e2,bl
  408d97:	adc    eax,0xdf630001
  408d9c:	add    BYTE PTR [eax],al
  408d9e:	mov    esp,0x61000115
  408da3:	fiadd  WORD PTR [eax]
  408da5:	add    BYTE PTR [edi],ch
  408da7:	pusha  
  408da8:	cmp    DWORD PTR [eax],eax
  408daa:	das    
  408dab:	dec    eax
  408dac:	add    eax,DWORD PTR [eax]
  408dae:	das    
  408daf:	lds    esi,FWORD PTR [edi]
  408db1:	add    BYTE PTR [edi],ch
  408db3:	and    eax,0xbe2f0002
  408db8:	aaa    
  408db9:	add    BYTE PTR [edi],ch
  408dbb:	add    al,BYTE PTR ds:[eax]
  408dbe:	das    
  408dbf:	sar    BYTE PTR [eax],cl
  408dc1:	add    BYTE PTR [edi],ch
  408dc3:	dec    edx
  408dc4:	add    eax,DWORD PTR [eax]
  408dc6:	das    
  408dc7:	(bad)  
  408dc8:	cmp    BYTE PTR [eax],al
  408dca:	das    
  408dcb:	mov    bh,0x4
  408dcd:	add    BYTE PTR [edi],ch
  408dcf:	mov    ch,0x38
  408dd1:	add    BYTE PTR [edi],ch
  408dd3:	push   ss
  408dd4:	add    eax,0x38b42f00
  408dd9:	add    BYTE PTR [edi],ch
  408ddb:	adc    eax,0xdb2f0005
  408de0:	cmp    BYTE PTR [eax],al
  408de2:	add    BYTE PTR [eax],al
  408de4:	das    
  408de5:	hlt    
  408de6:	add    al,0x0
  408de8:	das    
  408de9:	fidivr DWORD PTR [eax]
  408deb:	add    BYTE PTR [edi],ch
  408ded:	and    eax,DWORD PTR [edx]
  408def:	add    BYTE PTR [edi],ch
  408df1:	mov    ecx,0x222f0038
  408df6:	add    al,BYTE PTR [eax]
  408df8:	das    
  408df9:	mov    eax,0x212f0038
  408dfe:	add    al,BYTE PTR [eax]
  408e00:	das    
  408e01:	pop    edi
  408e02:	cmp    DWORD PTR [eax],eax
  408e04:	das    
  408e05:	loopne 0x408e0b
  408e07:	add    BYTE PTR [edi],ch
  408e09:	into   
  408e0a:	cmp    BYTE PTR [eax],al
  408e0c:	das    
  408e0d:	fild   WORD PTR [eax+eax*1]
  408e10:	das    
  408e11:	ret    
  408e12:	cmp    BYTE PTR [eax],al
  408e14:	das    
  408e15:	in     al,0x4
  408e17:	add    BYTE PTR [edi],ch
  408e19:	lods   eax,DWORD PTR ds:[esi]
  408e1a:	cmp    BYTE PTR [eax],al
  408e1c:	das    
  408e1d:	out    0x4,al
  408e1f:	add    BYTE PTR [edi],ch
  408e21:	fiadd  WORD PTR [edx-0x3621d0c8]
  408e27:	add    ebp,DWORD PTR [edi]
  408e29:	fidiv  WORD PTR [eax+edi*1+0x2f]
  408e2d:	(bad)  
  408e2f:	add    ebp,DWORD PTR [edi]
  408e31:	fisub  WORD PTR [ebp+0x38]
  408e34:	das    
  408e35:	fmulp  st(4),st
  408e37:	add    ebp,DWORD PTR [edi]
  408e39:	ficom  WORD PTR [esi+0x38]
  408e3c:	das    
  408e3d:	fidivr WORD PTR [ebp-0x6e21d0fd]
  408e43:	aaa    
  408e44:	das    
  408e45:	ficom  WORD PTR [ecx+0x4]
  408e48:	add    BYTE PTR [eax],al
  408e4a:	das    
  408e4b:	fiadd  WORD PTR [edx+0x42de2f37]
  408e51:	add    al,0x2f
  408e53:	ficom  WORD PTR [ebx+0x4bde2f37]
  408e59:	add    al,0x2f
  408e5b:	fiadd  WORD PTR [edi+esi*1+0x43cde2f]
  408e62:	das    
  408e63:	ficom  WORD PTR [ebp+0x37]
  408e66:	das    
  408e67:	fimul  WORD PTR ds:0x46de2f04
  408e6d:	aaa    
  408e6e:	das    
  408e6f:	fdivp  st(6),st
  408e71:	add    al,0x2f
  408e73:	fidiv  WORD PTR [edi]
  408e75:	aaa    
  408e76:	das    
  408e77:	fiadd  WORD PTR [edi]
  408e79:	add    al,0x2f
  408e7b:	fidivr WORD PTR [eax]
  408e7d:	aaa    
  408e7e:	das    
  408e7f:	fimul  WORD PTR [eax]
  408e81:	add    al,0x2f
  408e83:	ficomp WORD PTR [ecx-0x3621d0c9]
  408e89:	add    ebp,DWORD PTR [edi]
  408e8b:	ficomp WORD PTR [edx-0x3521d0c9]
  408e91:	add    ebp,DWORD PTR [edi]
  408e93:	fidivr WORD PTR [ebx+0x37]
  408e96:	das    
  408e97:	faddp  st(3),st
  408e99:	add    ebp,DWORD PTR [edi]
  408e9b:	fiadd  WORD PTR [eax]
  408e9d:	jl     0x408eb7
  408e9f:	fiadd  WORD PTR [eax]
  408ea1:	les    ebp,FWORD PTR [esi+ebx*8]
  408ea4:	add    BYTE PTR [edi+0x18],bl
  408ea7:	fiadd  WORD PTR [eax]
  408ea9:	xchg   DWORD PTR [esi+ebx*8],ebp
  408eac:	add    BYTE PTR [esi+0x0],bl
  408eaf:	add    al,bh
  408eb1:	fld    QWORD PTR [eax]
  408eb3:	xchg   BYTE PTR [esi+ebx*8],ch
  408eb6:	add    BYTE PTR [ecx-0x8],al
  408eb9:	fld    QWORD PTR [eax]
  408ebb:	xchg   ecx,eax
  408ebc:	sub    al,0xde
  408ebe:	add    BYTE PTR [eax],dh
  408ec0:	pop    eax
  408ec1:	fiadd  WORD PTR [eax]
  408ec3:	sub    BYTE PTR [esi+ebx*8],0x0
  408ec7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ec8:	pop    ecx
  408ec9:	fiadd  WORD PTR [eax]
  408ecb:	pop    ecx
  408ecc:	xor    ebx,esi
  408ece:	add    BYTE PTR [esi+0x5800de39],dl
  408ed4:	xor    ebx,esi
  408ed6:	add    BYTE PTR [ecx+0x3b00de39],ch
  408edc:	xor    ebx,esi
  408ede:	add    BYTE PTR [eax+0x3a00de19],ch
  408ee4:	xor    ebx,esi
  408ee6:	add    BYTE PTR [ebx+0x1500de19],ch
  408eec:	xor    ebx,esi
  408eee:	add    BYTE PTR [edx+0x1400ddf9],ch
  408ef4:	xor    ebx,esi
  408ef6:	add    BYTE PTR [ebp-0x8ff2207],ch
  408efc:	sub    al,0xde
  408efe:	add    BYTE PTR [ecx+ebx*2+0x2cf600de],ch
  408f05:	fiadd  WORD PTR [eax]
  408f07:	das    
  408f08:	pop    ecx
  408f09:	fiadd  WORD PTR [eax]
  408f0b:	loope  0x408f39
  408f0d:	fiadd  WORD PTR [eax]
  408f0f:	cs cmp esi,ebx
  408f12:	add    al,dl
  408f14:	add    BYTE PTR [eax],al
  408f16:	sub    al,0xde
  408f18:	add    BYTE PTR [eax],al
  408f1a:	adc    BYTE PTR ds:[ecx],al
  408f1d:	add    BYTE PTR [ebx+ebx*8+0x0],ch
  408f21:	add    BYTE PTR [edi],cl
  408f23:	adc    BYTE PTR [ecx],al
  408f25:	add    BYTE PTR [ebp+0x1c0000db],bl
  408f2b:	adc    BYTE PTR [ecx],al
  408f2d:	add    BYTE PTR [edx+0xd0000db],ch
  408f33:	adc    BYTE PTR [ecx],al
  408f35:	add    BYTE PTR [ebx-0x5ffff25],ch
  408f3b:	sgdtd  [eax]
  408f3e:	test   al,0xdb
  408f40:	add    BYTE PTR [eax],al
  408f42:	dec    ebx
  408f43:	adc    BYTE PTR [ecx],al
  408f45:	add    BYTE PTR [ecx-0x27ffff25],cl
  408f4b:	adc    BYTE PTR [ecx],al
  408f4d:	add    BYTE PTR [esi-0x36ffff1e],dl
  408f53:	adc    BYTE PTR [ecx],al
  408f55:	add    BYTE PTR [edi-0x69ffff1e],al
  408f5b:	adc    BYTE PTR [ecx],al
  408f5d:	add    BYTE PTR [edx+eiz*8+0x0],dl
  408f61:	add    bh,al
  408f63:	adc    BYTE PTR [ecx],al
  408f65:	add    BYTE PTR [ebp-0x1e],al
  408f68:	add    BYTE PTR [eax],al
  408f6a:	xchg   esp,eax
  408f6b:	adc    BYTE PTR [ecx],al
  408f6d:	add    BYTE PTR [edx-0x1e],dl
  408f70:	add    BYTE PTR [eax],al
  408f72:	test   DWORD PTR [eax],edx
  408f74:	add    DWORD PTR [eax],eax
  408f76:	push   ebx
  408f77:	loop   0x408f79
  408f79:	add    BYTE PTR [eax],al
  408f7b:	add    BYTE PTR [edx+0x10000110],dl
  408f81:	loop   0x408f83
  408f83:	add    bl,al
  408f85:	adc    BYTE PTR [ecx],al
  408f87:	add    BYTE PTR [ecx],dl
  408f89:	loop   0x408f8b
  408f8b:	add    bh,ah
  408f8d:	adc    BYTE PTR [ecx],al
  408f8f:	add    BYTE PTR [esi+0x2f0000e1],dh
  408f95:	mov    ds:0x662f0033,eax
  408f9a:	add    eax,0x33a42f00
  408f9f:	add    BYTE PTR [edi],ch
  408fa1:	arpl   WORD PTR ds:0x33a92f00,ax
  408fa7:	add    BYTE PTR [edi],ch
  408fa9:	add    al,BYTE PTR fs:[eax]
  408fac:	das    
  408fad:	out    dx,al
  408fae:	xor    eax,DWORD PTR [eax]
  408fb0:	das    
  408fb1:	mov    eax,ds:0xdb2f0004
  408fb6:	xor    eax,DWORD PTR [eax]
  408fb8:	das    
  408fb9:	mov    ds:0xec2f0001,al
  408fbe:	xor    eax,DWORD PTR [eax]
  408fc0:	das    
  408fc1:	add    BYTE PTR [edx],0x0
  408fc4:	das    
  408fc5:	(bad)  [ebx]
  408fc7:	add    BYTE PTR [edi],ch
  408fc9:	arpl   WORD PTR [edx],ax
  408fcb:	add    BYTE PTR [edi],ch
  408fcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fce:	xor    eax,DWORD PTR [eax]
  408fd0:	das    
  408fd1:	adc    al,BYTE PTR ds:0x54782f00
  408fd7:	call   0x97e08084
  408fdc:	jg     0x408f78
  408fde:	dec    ebx
  408fdf:	ret    0x0
  408fe2:	push   esp
  408fe3:	stos   DWORD PTR es:[edi],eax
  408fe4:	jg     0x409025
  408fe6:	icebp  
  408fe7:	jl     0x408f83
  408fe9:	xlat   BYTE PTR ds:[ebx]
  408fea:	adc    ah,BYTE PTR [esi+edi*4+0x1e81814a]
  408ff1:	dec    ebp
  408ff2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ff3:	and    BYTE PTR [ebp+0x17],dh
  408ff6:	cmp    BYTE PTR [ecx+0x37],ch
  408ff9:	mov    bl,0x1a
  408ffb:	mov    cl,0xb6
  408ffd:	xor    DWORD PTR [eax+0x19],0xda6851f4
  409004:	repz cmp BYTE PTR [eax+0x3b],ah
  409008:	cmc    
  409009:	(bad)  
  40900a:	cmc    
  40900b:	imul   ecx,DWORD PTR [ebx],0x33
  40900e:	ret    0xddde
  409011:	xchg   ecx,eax
  409012:	loop   0x40906f
  409014:	pop    esi
  409015:	push   0xba2c52c8
  40901a:	pop    eax
  40901b:	or     ah,BYTE PTR [eax]
  40901d:	in     eax,0xa2
  40901f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409020:	mov    edx,0x536bb64e
  409025:	add    eax,0x469837f2
  40902a:	jno    0x408fe6
  40902c:	inc    ecx
  40902d:	and    DWORD PTR [edx-0x101109f2],esi
  409033:	adc    al,0xae
  409035:	dec    esi
  409036:	nop
  409037:	repnz mov edx,0x10a33e3
  40903d:	jle    0x409022
  40903f:	stos   DWORD PTR es:[edi],eax
  409040:	add    eax,0x978457b6
  409045:	outs   dx,BYTE PTR ds:[esi]
  409046:	add    BYTE PTR [eax],al
  409048:	push   esi
  409049:	(bad)  
  40904b:	(bad)  
  40904c:	mov    bh,0x4e
  40904e:	mov    esp,0x9b16420a
  409053:	mov    cl,0xa9
  409055:	rcl    DWORD PTR [edx+0x1f],1
  409058:	in     eax,0x48
  40905a:	fnsave [edi]
  40905c:	mov    al,0x74
  40905e:	push   0x7e4c2737
  409063:	or     bh,BYTE PTR [ecx+0x68737c84]
  409069:	sub    esp,DWORD PTR [edx+0x27a662a8]
  40906f:	mov    edx,ebx
  409071:	ds iret 
  409073:	mov    bh,0xc2
  409075:	cmp    eax,0xe7dec90
  40907a:	xchg   esp,eax
  40907b:	cmc    
  40907c:	sub    al,0x10
  40907e:	fdivr  st(5),st
  409080:	sbb    al,0x10
  409082:	in     al,0xf5
  409084:	dec    esp
  409085:	adc    ah,cl
  409087:	cmc    
  409088:	pop    esp
  409089:	adc    BYTE PTR [ecx],al
  40908b:	mov    ch,0xa2
  40908d:	pop    ebx
  40908e:	pop    ebx
  40908f:	pop    esi
  409090:	adc    DWORD PTR [edi-0x69],ebp
  409093:	lods   al,BYTE PTR ds:[esi]
  409094:	mov    ebp,0xc0b23548
  409099:	sti    
  40909a:	std    
  40909b:	inc    edi
  40909c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40909d:	and    eax,0x13daf95
  4090a2:	bound  eax,QWORD PTR [edi-0x72f7936e]
  4090a8:	pop    ecx
  4090a9:	nop
  4090aa:	xor    esi,DWORD PTR [ebp+0x0]
  4090ad:	add    BYTE PTR [ecx+0x20],ah
  4090b0:	xor    ebx,DWORD PTR ds:0x45333059
  4090b6:	inc    ecx
  4090b7:	inc    eax
  4090b8:	xor    ecx,DWORD PTR ds:0x4b735039
  4090be:	outs   dx,DWORD PTR ds:[esi]
  4090bf:	mov    ds:0x60c4827b,eax
  4090c4:	jno    0x409078
  4090c6:	mov    ch,0x95
  4090c8:	repnz shl BYTE PTR ds:0xf8007bbe,1
  4090cf:	ds ins DWORD PTR es:[edi],dx
  4090d1:	icebp  
  4090d2:	xor    DWORD PTR [ecx-0x3fffa86c],eax
  4090d8:	xor    DWORD PTR [ebp-0x8],ecx
  4090db:	iret   
  4090dc:	xor    DWORD PTR [ebp+0x0],edx
  4090df:	pusha  
  4090e0:	xor    bl,BYTE PTR [ebp-0x7]
  4090e3:	outs   dx,DWORD PTR ds:[esi]
  4090e4:	xor    ah,BYTE PTR [ebp-0x1f]
  4090e7:	jg     0x40911b
  4090e9:	(bad)  
  4090ea:	fwait
  4090eb:	adc    edi,eax
  4090ed:	(bad)  
  4090ee:	int    0x45
  4090f0:	mov    edi,0x56163b4a
  4090f5:	aas    
  4090f6:	add    esp,DWORD PTR [ebp-0x12]
  4090f9:	pop    ecx
  4090fa:	add    al,0x4f
  4090fc:	push   es
  4090fd:	sub    esp,DWORD PTR [ecx-0x39]
  409100:	sub    DWORD PTR [esi],edi
  409102:	sub    al,0xea
  409104:	xor    al,0x0
  409106:	xchg   edx,eax
  409107:	dec    ebx
  409108:	and    dh,BYTE PTR [edx+esi*2]
  40910b:	dec    ebx
  40910c:	xor    dh,BYTE PTR [edx+eiz*8]
  40910f:	dec    ebx
  409110:	inc    edx
  409111:	xor    al,0x0
  409113:	add    BYTE PTR [edx],dh
  409115:	push   esi
  409116:	push   edx
  409117:	xor    al,0x72
  409119:	adc    BYTE PTR [esp+ebx*1-0x53],bl
  40911d:	push   cs
  40911e:	outs   dx,DWORD PTR ds:[esi]
  40911f:	mov    DWORD PTR [ebx],eax
  409121:	push   0x4e
  409123:	inc    edi
  409124:	out    dx,eax
  409125:	js     0x409153
  409127:	outs   dx,BYTE PTR ds:[esi]
  409128:	arpl   WORD PTR [esi],bx
  40912a:	out    0x29,eax
  40912c:	sti    
  40912d:	rol    BYTE PTR ds:0xfe9f8aad,1
  409133:	xor    al,0x32
  409135:	dec    ebx
  409136:	shl    BYTE PTR [edx+esi*8],cl
  409139:	dec    edx
  40913a:	loop   0x409170
  40913c:	xor    cl,BYTE PTR [ebx-0xe]
  40913f:	xor    al,0x22
  409141:	dec    ebx
  409142:	add    dh,BYTE PTR ds:0x6edb5652
  409148:	pop    ebp
  409149:	adc    eax,0x40b5e801
  40914e:	sbb    dl,ch
  409150:	mov    ebx,0xd35457ce
  409155:	cmp    ecx,DWORD PTR [edi-0x270cf5fb]
  40915b:	sub    eax,0x47c257f9
  409160:	bound  ecx,QWORD PTR [ebx-0x7e]
  409163:	xor    eax,0x35924b52
  409168:	push   edx
  409169:	dec    ebx
  40916a:	mov    ds:0xb24ab235,al
  40916f:	xor    eax,0xb1c24b62
  409174:	inc    eax
  409175:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409176:	iret   
  409177:	add    eax,DWORD PTR [eax]
  409179:	add    BYTE PTR [eax],ah
  40917b:	jne    0x409156
  40917d:	into   
  40917e:	and    DWORD PTR [edi-0x3f],edx
  409181:	popf   
  409182:	das    
  409183:	cmc    
  409184:	jg     0x40913a
  409186:	jmp    FWORD PTR [esi+0x6b]
  409189:	int3   
  40918a:	push   cs
  40918b:	push   eax
  40918c:	sub    al,0x4d
  40918e:	mov    al,0x2b
  409190:	clc    
  409191:	xor    esp,DWORD PTR [ecx-0x77]
  409194:	clc    
  409195:	inc    ebx
  409196:	pop    ecx
  409197:	icebp  
  409198:	cli    
  409199:	push   ebx
  40919a:	inc    ecx
  40919b:	sbb    eax,edi
  40919d:	arpl   WORD PTR [ecx],di
  40919f:	and    eax,edi
  4091a1:	jae    0x4091e4
  4091a3:	cmp    al,0xa1
  4091a5:	and    cl,BYTE PTR [ebp+0x65f3212a]
  4091ab:	jnp    0x40918a
  4091ad:	mov    bl,0xa
  4091af:	iret   
  4091b0:	sar    esi,1
  4091b2:	inc    ebp
  4091b3:	add    eax,0xc6ad61cf
  4091b8:	xchg   ecx,eax
  4091b9:	xchg   edi,eax
  4091ba:	fadd   st,st(1)
  4091bc:	add    al,0xe4
  4091be:	stc    
  4091bf:	loopne 0x4091bb
  4091c1:	repz add ecx,ebp
  4091c4:	cli    
  4091c5:	add    edi,eax
  4091c7:	xor    cl,bh
  4091c9:	adc    esp,DWORD PTR [eax+0x3b]
  4091cc:	stc    
  4091cd:	and    ebx,DWORD PTR [eax+0x23]
  4091d0:	into   
  4091d1:	jmp    FWORD PTR [ebx+0x12]
  4091d4:	ds push eax
  4091d6:	jle    0x409175
  4091d8:	mov    bl,0x84
  4091da:	sub    al,0xf6
  4091dc:	and    eax,DWORD PTR fs:[eax]
  4091df:	add    BYTE PTR [eax],bh
  4091e1:	(bad)  
  4091e2:	sbb    esp,DWORD PTR [esi+ebx*8-0x41]
  4091e6:	mov    eax,ds:0x7188cd8f
  4091eb:	test   eax,0xa3f8bb20
  4091f0:	sbb    BYTE PTR [ebx-0x7],ah
  4091f3:	mov    bl,0x20
  4091f5:	retf   
  4091f6:	clc    
  4091f7:	ret    
  4091f8:	sbb    BYTE PTR [ebx-0x7],dh
  4091fb:	rol    DWORD PTR [eax],cl
  4091fd:	fsubrp st(7),st
  4091ff:	mov    bl,0xdf
  409201:	push   es
  409202:	or     eax,0x3a92e7ba
  409207:	sbb    bh,BYTE PTR [eax]
  409209:	mov    dl,0x5f
  40920b:	mov    ebx,ebp
  40920d:	push   esi
  40920e:	or     eax,edi
  409210:	lods   eax,DWORD PTR ds:[esi]
  409211:	aad    0x78
  409213:	jg     0x40926b
  409215:	in     al,dx
  409216:	pop    ecx
  409217:	lods   al,BYTE PTR ds:[esi]
  409218:	xor    cl,dl
  40921a:	aas    
  40921b:	jmp    0x4091f1
  40921d:	push   ss
  40921e:	cwde   
  40921f:	jmp    0x4091dd
  409221:	push   ss
  409222:	mov    al,ds:0x2816b4eb
  409227:	jmp    0x409275
  409229:	pop    ss
  40922a:	mov    ah,0xea
  40922c:	add    BYTE PTR [edi],bh
  40922e:	outs   dx,BYTE PTR ds:[esi]
  40922f:	sub    esp,ebx
  409231:	sbb    al,0x5e
  409233:	jbe    0x40928b
  409235:	xor    al,BYTE PTR [ecx]
  409237:	pop    eax
  409238:	mov    bl,0x8d
  40923a:	mov    cl,0x67
  40923c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40923d:	sar    DWORD PTR [ebx+0x79120876],1
  409243:	mov    dl,0x0
  409245:	add    BYTE PTR [ebx],ah
  409247:	div    BYTE PTR [edx]
  409249:	jmp    0x1430:0xede41730
  409250:	hlt    
  409251:	in     eax,dx
  409252:	dec    eax
  409253:	adc    al,0xcc
  409255:	in     eax,dx
  409256:	dec    eax
  409257:	adc    al,0xbc
  409259:	in     eax,dx
  40925a:	push   eax
  40925b:	adc    al,0x65
  40925d:	inc    esi
  40925e:	inc    ebp
  40925f:	cmp    eax,edx
  409261:	add    BYTE PTR [esi-0x39],bh
  409264:	xlat   BYTE PTR ds:[ebx]
  409265:	cli    
  409266:	adc    ebp,DWORD PTR [ecx]
  409268:	jge    0x409264
  40926a:	mov    edi,0xf53ee9e2
  40926f:	fistp  QWORD PTR [ebp-0x51452c9d]
  409275:	iret   
  409276:	xchg   esp,eax
  409277:	adc    eax,DWORD PTR [ecx]
  409279:	mov    ebp,0xad3d48df
  40927e:	mov    edi,0xbfed3d50
  409283:	fdivr  DWORD PTR [ebx]
  409285:	in     eax,dx
  409286:	mov    edi,0xfd3be0
  40928b:	nop
  40928c:	stc    
  40928d:	push   edx
  40928e:	jecxz  0x409266
  409290:	ret    0x486f
  409293:	sti    
  409294:	push   esi
  409295:	adc    DWORD PTR [edi+0x6a],eax
  409298:	mov    edi,0xb787a41f
  40929d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40929e:	int3   
  40929f:	cld    
  4092a0:	pop    ebx
  4092a1:	cdq    
  4092a2:	sub    ah,ch
  4092a4:	cmp    ebx,DWORD PTR [ecx-0x6ec37382]
  4092aa:	add    BYTE PTR [eax],al
  4092ac:	jle    0x409242
  4092ae:	cmp    al,0x29
  4092b0:	pop    esi
  4092b1:	sbb    al,0x3c
  4092b3:	xor    DWORD PTR [esi+0x24],ebx
  4092b6:	cmp    al,0x19
  4092b8:	pop    esi
  4092b9:	scas   eax,DWORD PTR es:[edi]
  4092ba:	outs   dx,BYTE PTR ds:[esi]
  4092bb:	pop    eax
  4092bc:	ja     0x40933a
  4092be:	aad    0x3b
  4092c0:	push   eax
  4092c1:	jnp    0x409311
  4092c3:	pushf  
  4092c4:	rcl    BYTE PTR [eax+0x6f],0xd9
  4092c8:	ds repz dec ecx
  4092cb:	pop    eax
  4092cc:	sub    edi,DWORD PTR [edi+0x4d]
  4092cf:	das    
  4092d0:	dec    ebp
  4092d1:	cwde   
  4092d2:	ins    BYTE PTR es:[edi],dx
  4092d3:	in     eax,dx
  4092d4:	adc    eax,ebx
  4092d6:	cmp    eax,0x3de009ed
  4092db:	fld    QWORD PTR [ecx]
  4092dd:	call   0xf05a601f
  4092e2:	cmp    eax,0xc750100d
  4092e7:	add    bh,dh
  4092e9:	ror    DWORD PTR [ebp*4-0x695b598c],cl
  4092f0:	jp     0x4092f5
  4092f2:	popa   
  4092f3:	add    BYTE PTR [eax-0x2a],dh
  4092f6:	aas    
  4092f7:	stos   BYTE PTR es:[edi],al
  4092f8:	sub    esp,DWORD PTR [edx-0x45]
  4092fb:	(bad)  
  4092fd:	mov    bh,BYTE PTR [edx]
  4092ff:	icebp  
  409300:	retf   0x834b
  409303:	xor    BYTE PTR [esi+0x4b],al
  409306:	mov    ecx,0x364b7530
  40930b:	xor    bl,BYTE PTR [eax]
  40930d:	dec    esp
  40930e:	call   0xfe4d:0xac000032
  409315:	xor    dl,BYTE PTR [eax-0x50ca225b]
  40931b:	ins    DWORD PTR es:[edi],dx
  40931c:	out    dx,eax
  40931d:	or     DWORD PTR [ebp-0x38],ecx
  409320:	daa    
  409321:	cmc    
  409322:	xor    al,0xab
  409324:	jg     0x409344
  409326:	jl     0x409338
  409328:	push   es
  409329:	xchg   esp,eax
  40932a:	loop   0x40934b
  40932c:	xor    bh,al
  40932e:	and    BYTE PTR ds:[edx+0x36],bl
  409332:	jne    0x40937d
  409334:	mov    dl,0x36
  409336:	lods   al,BYTE PTR ds:[esi]
  409337:	dec    ecx
  409338:	shl    DWORD PTR [esi],1
  40933a:	inc    ecx
  40933b:	dec    ecx
  40933c:	in     eax,0x36
  40933e:	in     al,dx
  40933f:	dec    eax
  409340:	hlt    
  409341:	ss push ebx
  409343:	pop    es
  409344:	pop    ecx
  409345:	dec    edi
  409346:	lods   eax,DWORD PTR ds:[esi]
  409347:	call   0x1d21a874
  40934c:	pop    ss
  40934d:	mov    al,ds:0x97b3c132
  409352:	xchg   esi,eax
  409353:	dec    esp
  409354:	jno    0x4092da
  409356:	adc    bh,BYTE PTR [esi-0x3d]
  409359:	ins    DWORD PTR es:[edi],dx
  40935a:	push   esp
  40935b:	pop    esi
  40935c:	sub    edi,DWORD PTR [eax]
  40935e:	into   
  40935f:	inc    edx
  409360:	dec    ebp
  409361:	cmp    BYTE PTR [edx+eax*2+0x41b23858],ah
  409368:	sbb    BYTE PTR [ecx],bh
  40936a:	stc    
  40936b:	inc    ebx
  40936c:	and    bh,BYTE PTR [ecx]
  40936e:	das    
  40936f:	fsub   st(1),st
  409371:	mov    ah,0x72
  409373:	xchg   ch,dh
  409375:	add    BYTE PTR [eax],al
  409377:	add    al,bl
  409379:	mov    ds:0xa1ceac8d,al
  40937e:	sbb    DWORD PTR [edi],0xa75ee5d2
  409384:	or     ebp,DWORD PTR [ebp+0x18]
  409387:	(bad)  
  409388:	dec    esp
  409389:	div    DWORD PTR [ebp+0x3e]
  40938c:	xor    dh,BYTE PTR ds:0xfbf444e9
  409392:	out    0xd6,eax
  409394:	fs pop edx
  409396:	call   0xf13df6d4
  40939b:	imul   ebx,DWORD PTR [ebx+0x54],0xffffffee
  40939f:	xchg   ebx,eax
  4093a0:	fnstenv [ecx+0x6bdcde39]
  4093a6:	push   edi
  4093a7:	rcl    ch,0xe0
  4093aa:	dec    ecx
  4093ab:	inc    ebp
  4093ac:	mov    cl,0x83
  4093ae:	js     0x4093b5
  4093b0:	scas   eax,DWORD PTR es:[edi]
  4093b1:	push   edx
  4093b2:	push   esi
  4093b3:	fdivr  DWORD PTR [ecx+0x1f358910]
  4093b9:	mov    ah,0xee
  4093bb:	in     al,dx
  4093bc:	sbb    DWORD PTR [ebp+ebp*8+0x1f],ecx
  4093c0:	adc    BYTE PTR [edx+0x67084eed],al
  4093c6:	in     eax,dx
  4093c7:	lods   eax,DWORD PTR ds:[esi]
  4093c8:	add    BYTE PTR [ebx+0x9f8e9eb],bl
  4093ce:	push   0x1ac61871
  4093d3:	inc    esi
  4093d4:	push   0x40
  4093d6:	jl     0x40935c
  4093d8:	push   0x32
  4093da:	pusha  
  4093db:	inc    BYTE PTR [eax]
  4093dd:	add    ch,bh
  4093df:	inc    ebx
  4093e0:	push   ebp
  4093e1:	outs   dx,BYTE PTR ds:[esi]
  4093e2:	cwde   
  4093e3:	pop    ebx
  4093e4:	stos   BYTE PTR es:[edi],al
  4093e5:	jns    0x409374
  4093e7:	int3   
  4093e8:	shl    esp,0x3d
  4093eb:	fsubrp st(2),st
  4093ed:	icebp  
  4093ee:	xor    dl,BYTE PTR [ecx]
  4093f0:	in     al,dx
  4093f1:	lock sbb eax,0x1df0f211
  4093f7:	adc    DWORD PTR [ecx],ebp
  4093f9:	icebp  
  4093fa:	jle    0x40940d
  4093fc:	mov    dh,0xd0
  4093fe:	add    eax,0x10e3e1a4
  409403:	fnstsw ax
  409405:	xchg   ebx,eax
  409406:	cwde   
  409407:	or     eax,0xcfabf86d
  40940c:	jns    0x40946a
  40940e:	call   esi
  409410:	mov    WORD PTR [ebx],ss
  409412:	mov    ds:0x9c8fe3d4,eax
  409417:	cld    
  409418:	sbb    esp,ecx
  40941a:	call   0xf73c:0xbdba1a61
  409421:	lods   al,BYTE PTR ds:[esi]
  409422:	add    bl,bl
  409424:	pushf  
  409425:	popf   
  409426:	ret    0xf0b7
  409429:	mov    bh,0xd4
  40942b:	fmul   st(3),st
  40942d:	sub    bl,dl
  40942f:	sub    al,0xd
  409431:	pusha  
  409432:	idiv   BYTE PTR [edi]
  409434:	cmc    
  409435:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409436:	xlat   BYTE PTR ds:[ebx]
  409437:	clc    
  409438:	std    
  409439:	jb     0x409417
  40943b:	cmp    ebx,DWORD PTR [ebx-0x56]
  40943e:	pop    ebx
  40943f:	sub    ebp,DWORD PTR [eax-0x6fffff39]
  409445:	add    eax,0x2991917a
  40944a:	mov    ebx,0xf913fe8b
  40944f:	cmp    esi,DWORD PTR [ebx+0x70636ff]
  409455:	mov    ch,0x3f
  409457:	shl    BYTE PTR [ebp+0x77],cl
  40945a:	xchg   esi,eax
  40945b:	fst    QWORD PTR [ebx+edi*4-0x59]
  40945f:	xor    ecx,esi
  409461:	stos   BYTE PTR es:[edi],al
  409462:	and    DWORD PTR [eax-0xfe9082],ecx
  409468:	imul   ebx,DWORD PTR [eax-0x7aae5c6f],0xcef1bbac
  409472:	push   ss
  409473:	aam    0x32
  409475:	lds    edx,FWORD PTR [esi-0x3ee51375]
  40947b:	jno    0x40942c
  40947d:	imul   ebp,edx,0x0
  409480:	mov    al,0xdb
  409482:	jl     0x409489
  409484:	inc    eax
  409485:	xchg   edx,eax
  409486:	inc    eax
  409487:	pop    eax
  409488:	push   ds
  409489:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40948a:	xor    BYTE PTR [edi-0x7c],cl
  40948d:	int    0xea
  40948f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409490:	dec    edi
  409491:	pop    edx
  409492:	and    DWORD PTR [esp+esi*8],esi
  409495:	adc    al,0x5d
  409497:	xlat   BYTE PTR ds:[bx]
  409499:	push   ebx
  40949a:	xchg   edi,eax
  40949b:	std    
  40949c:	ss jbe 0x409481
  40949f:	sbb    al,0x7a
  4094a1:	ret    0xa49c
  4094a4:	mov    ds:0x21b44b,al
  4094a9:	add    ah,dh
  4094ab:	push   ss
  4094ac:	pop    ecx
  4094ad:	dec    edx
  4094ae:	test   al,0xa2
  4094b0:	jmp    0x8bc7:0x8e43f582
  4094b7:	shl    DWORD PTR [ecx],cl
  4094b9:	inc    edx
  4094ba:	loop   0x4094bf
  4094bc:	push   ebx
  4094bd:	dec    esp
  4094be:	mov    ds:0x2108e7b7,al
  4094c3:	sbb    eax,0xd204722c
  4094c8:	mov    bh,0xeb
  4094ca:	inc    ebp
  4094cb:	push   ebp
  4094cc:	loop   0x409521
  4094ce:	or     dl,BYTE PTR [eax+0x200913da]
  4094d4:	jmp    0x409547
  4094d6:	jb     0x409515
  4094d8:	test   DWORD PTR [edx-0x5f],edi
  4094db:	imul   ebx,DWORD PTR [edi-0x3edc3e5f],0x0
  4094e2:	jae    0x40947c
  4094e4:	xchg   edx,eax
  4094e5:	mov    ah,0x26
  4094e7:	push   ebx
  4094e8:	das    
  4094e9:	xchg   esp,eax
  4094ea:	rep ins BYTE PTR es:[edi],dx
  4094ec:	xchg   ebp,eax
  4094ed:	test   DWORD PTR [ecx+0x3fd687a5],edx
  4094f3:	add    eax,0xa981a0fb
  4094f9:	sbb    al,0x77
  4094fb:	leave  
  4094fc:	js     0x409574
  4094fe:	je     0x4094db
  409500:	fdivr  QWORD PTR [eax]
  409502:	loope  0x4094f6
  409504:	push   ebp
  409505:	imul   BYTE PTR [eax]
  409507:	popf   
  409508:	icebp  
  409509:	and    ebp,DWORD PTR [eax+0x4f]
  40950c:	scas   eax,DWORD PTR es:[edi]
  40950d:	inc    edi
  40950e:	add    BYTE PTR [eax],al
  409510:	mov    esp,0xbf836a40
  409515:	int3   
  409516:	xchg   ebx,eax
  409517:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409518:	xor    cl,BYTE PTR [edi+0x67]
  40951b:	pop    ds
  40951c:	outs   dx,DWORD PTR ds:[esi]
  40951d:	jle    0x409594
  40951f:	jle    0x4094e6
  409521:	adc    eax,0x3d448557
  409526:	push   0xf54f616f
  40952b:	int    0x64
  40952d:	lock jmp 0xea8fa7ff
  409533:	inc    edi
  409534:	sub    eax,0x284f3ecd
  409539:	jmp    0x4094d3
  40953b:	loop   0x4095b2
  40953d:	aaa    
  40953e:	loopne 0x409573
  409540:	dec    edx
  409541:	les    edx,FWORD PTR [eax]
  409543:	mov    ebp,0x1fa6fe24
  409548:	cmp    al,0x6a
  40954a:	cs pop esi
  40954c:	add    ch,dh
  40954e:	out    0x48,al
  409550:	mov    ds:0xeaddd63d,al
  409555:	xor    ch,BYTE PTR [edi]
  409557:	aad    0xfa
  409559:	push   edi
  40955a:	out    0xe4,eax
  40955c:	das    
  40955d:	mov    ecx,0x8f289c7a
  409562:	xor    al,0xe4
  409564:	mov    eax,0x94a2624c
  409569:	jnp    0x40957d
  40956b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40956c:	jl     0x409505
  40956e:	push   ebx
  40956f:	push   ebp
  409570:	int3   
  409571:	or     edx,DWORD PTR cs:[esi]
  409574:	add    BYTE PTR [eax],al
  409576:	sub    esi,DWORD PTR ds:0xfa2f0002
  40957c:	add    al,0x59
  40957e:	das    
  40957f:	xor    eax,0x4b2f0002
  409584:	add    dh,BYTE PTR [edi+ebp*1-0x63]
  409588:	add    al,0x74
  40958a:	das    
  40958b:	xor    eax,0xfc2f0002
  409590:	popf   
  409591:	jae    0x4095fc
  409593:	sahf   
  409594:	cwde   
  409595:	data16 repz mov fs:0xa1da3d6e,al
  40959d:	jae    0x4095b5
  40959f:	in     al,0x9a
  4095a1:	inc    ecx
  4095a2:	es std 
  4095a4:	mov    eax,ds:0x9df1136d
  4095a9:	inc    esp
  4095aa:	pop    ss
  4095ab:	xor    eax,0xe82f0002
  4095b0:	popf   
  4095b1:	jae    0x40959c
  4095b3:	fstp   QWORD PTR [eax-0x5fcd199c]
  4095b9:	outs   dx,BYTE PTR ds:[esi]
  4095ba:	std    
  4095bb:	sbb    DWORD PTR [ebx-0x67dc298d],esp
  4095c1:	inc    ecx
  4095c2:	out    0x7c,al
  4095c4:	mov    ds:0x9f30d36d,eax
  4095c9:	call   DWORD PTR [eax-0x7d]
  4095cc:	lahf   
  4095cd:	jae    0x4095ae
  4095cf:	xchg   BYTE PTR [ecx-0x61df119e],bl
  4095d5:	jno    0x4095a9
  4095d7:	fstp   QWORD PTR [edx+0x300000b4]
  4095dd:	dec    edx
  4095de:	lods   al,BYTE PTR ds:[esi]
  4095df:	cwde   
  4095e0:	pop    edx
  4095e2:	mov    ds:0x88cc8e9a,eax
  4095e7:	mov    ch,0x97
  4095e9:	lahf   
  4095ea:	out    0x3,eax
  4095ec:	das    
  4095ed:	fisubr WORD PTR [ebp-0x73339251]
  4095f3:	mov    ds:0x9b93c37c,al
  4095f8:	jle    0x4095bd
  4095fa:	dec    eax
  4095fb:	mov    al,ds:0xb02e49f0
  409600:	ins    DWORD PTR es:[edi],dx
  409601:	int3   
  409602:	dec    esp
  409603:	mov    ds:0xb534c35c,eax
  409608:	push   ebx
  409609:	int3   
  40960a:	pop    ss
  40960b:	mov    dh,0x41
  40960d:	mov    ebp,0xde3db544
  409612:	and    eax,0x44d35fb0
  409617:	mov    dh,0x37
  409619:	xchg   edi,eax
  40961a:	adc    eax,0xccc41a2
  40961f:	mov    ds:0x9a06b71c,eax
  409624:	lock retf 
  409626:	(bad)  
  409627:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409628:	adc    ecx,ebp
  40962a:	cli    
  40962b:	add    ebp,DWORD PTR [edi]
  40962d:	ficomp WORD PTR [ecx]
  40962f:	mov    al,0x14
  409631:	mov    bl,0xfa
  409633:	sahf   
  409634:	(bad)  
  409635:	mov    cl,0xff
  409637:	mov    ch,0x13
  409639:	mov    edi,0xbefcd4cb
  40963e:	fldcw  WORD PTR [edi+0x49680000]
  409644:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409645:	lahf   
  409646:	ficomp WORD PTR [ecx-0x5e335d42]
  40964c:	rcl    DWORD PTR [edi-0x6053b6b0],cl
  409652:	mov    esi,0x90cc00a0
  409657:	popf   
  409658:	ins    BYTE PTR es:[edi],dx
  409659:	mov    ebp,0x8d6ebe74
  40965e:	cwde   
  40965f:	ret    0xcf00
  409662:	sub    al,0xc2
  409664:	add    BYTE PTR [eax-0x16ff2dd4],cl
  40966a:	sub    al,0xde
  40966c:	add    BYTE PTR [edx-0x58ff66d4],bl
  409672:	sub    al,0xb2
  409674:	add    BYTE PTR [esi-0x64ff60d4],bl
  40967a:	sub    al,0xa3
  40967c:	add    BYTE PTR [ebp+0x2b],al
  40967f:	fwait
  409680:	add    BYTE PTR [eax+0x33],dl
  409683:	mov    ebp,0xb92b5b00
  409688:	add    BYTE PTR [edx+0x33],bl
  40968b:	mov    ecx,0xd22b4f00
  409690:	add    BYTE PTR ds:0x4000b133,bl
  409696:	sub    edi,DWORD PTR [eax-0x46ccbb00]
  40969c:	add    BYTE PTR [esi],bl
  40969e:	sub    ecx,ebp
  4096a0:	add    cl,cl
  4096a2:	sub    al,0x98
  4096a4:	add    BYTE PTR ds:0xaa2b0000,bh
  4096aa:	add    BYTE PTR [edx],ch
  4096ac:	xor    edx,ebx
  4096ae:	add    bl,bh
  4096b0:	sub    al,0xcc
  4096b2:	add    BYTE PTR [ebx+esi*1],al
  4096b5:	mov    eax,0xb02cfd00
  4096ba:	add    BYTE PTR [ebx+esi*1],al
  4096bd:	int3   
  4096be:	add    dl,bl
  4096c0:	sub    al,0xb7
  4096c2:	add    dh,cl
  4096c4:	sub    al,0xb8
  4096c6:	add    BYTE PTR [ebp-0x24ff51d4],dh
  4096cc:	sub    al,0xb9
  4096ce:	add    BYTE PTR [eax],al
  4096d0:	pusha  
  4096d1:	fsub   QWORD PTR [edi+0x0]
  4096d4:	jp     0x4096b2
  4096d6:	arpl   WORD PTR [eax],ax
  4096d8:	mov    bl,ah
  4096da:	add    BYTE PTR [di-0x24],dh
  4096de:	je     0x4096e0
  4096e0:	push   0xffffffdc
  4096e2:	and    eax,DWORD PTR [eax]
  4096e4:	(bad)
  4096e7:	add    dh,ah
  4096e9:	(bad)  [edx+0x0]
  4096ec:	cdq    
  4096ed:	(bad)  [esi+0x0]
  4096f0:	mov    edi,0xb3006cdb
  4096f5:	fild   DWORD PTR [edi+0x0]
  4096f8:	stos   DWORD PTR es:[edi],eax
  4096f9:	fistp  DWORD PTR [edi+0x0]
  4096fc:	mov    cl,0xdb
  4096fe:	arpl   WORD PTR [eax],ax
  409700:	ss loop 0x409762
  409703:	add    BYTE PTR [edx-0x29ff971e],al
  409709:	fild   DWORD PTR [eax]
  40970b:	add    BYTE PTR [eax],al
  40970d:	add    dh,al
  40970f:	ja     0x409745
  409711:	sbb    edi,eax
  409713:	ja     0x409749
  409715:	sbb    ebp,esp
  409717:	popf   
  409718:	sar    BYTE PTR [eax-0x1e],1
  40971b:	popf   
  40971c:	sar    BYTE PTR [eax-0x2c],1
  40971f:	cmp    al,0x38
  409721:	mov    ds:0x4dcc7,al
  409726:	cmp    dl,ah
  409728:	jno    0x40972a
  40972a:	inc    esi
  40972b:	loop   0x40979f
  40972d:	add    BYTE PTR [edx+0x22002edb],al
  409733:	loop   0x4097a1
  409735:	add    BYTE PTR [edx],bh
  409737:	loop   0x409739
  409739:	add    BYTE PTR [ebx-0x79f5f2bb],cl
  40973f:	fild   DWORD PTR [eax]
  409741:	add    BYTE PTR [esi],dl
  409743:	inc    ebp
  409744:	or     BYTE PTR ds:0xdb5c,cl
  40974a:	das    
  40974b:	fisubr DWORD PTR [edi+edi*8-0x7d5a8]
  409752:	push   eax
  409753:	fnsetpm(287 only) 
  409755:	dec    DWORD PTR [eax-0x7f]
  409758:	add    cl,BYTE PTR [ecx+0x2f]
  40975b:	add    dl,BYTE PTR fs:[eax+0x2f]
  40975f:	imul   eax,DWORD PTR [edx],0x21e2f41
  409765:	add    BYTE PTR [edi],ch
  409767:	mov    BYTE PTR ds:0xbc832f41,dl
  40976d:	inc    ecx
  40976e:	dec    edi
  40976f:	and    eax,0x32f2
  409774:	inc    ecx
  409775:	test   edx,esi
  409777:	xor    dh,BYTE PTR ds:0x2f000235
  40977d:	arpl   WORD PTR [ecx+eax*2+0x2354f],di
  409784:	das    
  409785:	(bad)  
  409786:	add    al,0x0
  409788:	das    
  409789:	xchg   ebx,eax
  40978a:	add    al,0x63
  40978c:	das    
  40978d:	xor    eax,0x52f0002
  409792:	into   
  409793:	push   ecx
  409794:	push   0x2f0004fa
  409799:	in     eax,0xc1
  40979b:	push   ebx
  40979c:	ins    BYTE PTR es:[edi],dx
  40979d:	std    
  40979e:	add    al,0x0
  4097a0:	das    
  4097a1:	repnz mov dh,0x52
  4097a4:	pop    edx
  4097a5:	repz iret 
  4097a7:	inc    edx
  4097a8:	std    
  4097a9:	or     eax,0x42f44c3
  4097ae:	into   
  4097af:	inc    ecx
  4097b0:	cld    
  4097b1:	repz ror BYTE PTR [eax-0x13],cl
  4097b5:	stc    
  4097b6:	add    al,0x0
  4097b8:	das    
  4097b9:	div    DWORD PTR [ebx-0x360909ad]
  4097bf:	(bad)  
  4097c0:	js     0x4097ab
  4097c2:	aad    0x52
  4097c4:	jmp    0xe795:0xedd1a8dd
  4097cb:	add    ebp,DWORD PTR [edi]
  4097cd:	fisub  WORD PTR [esi+edi*4+0x3a49efe]
  4097d4:	das    
  4097d5:	fisubr WORD PTR [edx-0xcffff45]
  4097db:	call   0x3e7:0xb1dbb4b2
  4097e2:	das    
  4097e3:	ficomp WORD PTR [eax+edi*4-0x45446511]
  4097ea:	adc    BYTE PTR [edi+0x4620cab3],0xba
  4097f1:	mov    esi,0xcfb99568
  4097f6:	adc    BYTE PTR [esi-0x63],al
  4097f9:	mov    ch,0x74
  4097fb:	xchg   ebp,eax
  4097fc:	stos   BYTE PTR es:[edi],al
  4097fd:	mov    eax,0xbe9b4600
  409802:	outs   dx,DWORD PTR ds:[esi]
  409803:	mov    al,0xaa
  409805:	mov    ebx,0xd23845f0
  40980a:	jns    0x4097ba
  40980c:	aaa    
  40980d:	ret    
  40980e:	jl     0x4097b1
  409810:	pop    ds
  409811:	add    al,0x2f
  409813:	fidiv  WORD PTR [edi]
  409815:	shl    BYTE PTR [ecx-0x52],cl
  409818:	sub    eax,0xe79a7abb
  40981d:	add    ebp,DWORD PTR [edi]
  40981f:	fisub  WORD PTR [esi*4+0x3e79b62]
  409826:	das    
  409827:	fidiv  WORD PTR [ecx+edi*4]
  40982a:	in     eax,dx
  40982b:	xchg   esp,eax
  40982c:	sub    eax,DWORD PTR [edi+ebp*1]
  40982f:	fisub  WORD PTR [ebx]
  409831:	mov    ch,0xed
  409833:	cwde   
  409834:	out    0x3,eax
  409836:	das    
  409837:	fisubr WORD PTR [edx]
  409839:	mov    ch,0xf8
  40983b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40983c:	out    0x3,eax
  40983e:	add    BYTE PTR [eax],al
  409840:	das    
  409841:	fiadd  WORD PTR [eax]
  409843:	sbb    eax,0x24419e5d
  409848:	sub    ebx,esi
  40984a:	add    BYTE PTR [esi-0x51b84e84],dh
  409850:	call   0x4e93:0xa3aa00b0
  409857:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409858:	outs   dx,DWORD PTR ds:[esi]
  409859:	mov    cl,0x0
  40985b:	cdq    
  40985c:	jns    0x40980f
  40985e:	add    BYTE PTR [ecx-0x16ab4f85],bl
  409864:	sub    al,0xde
  409866:	add    BYTE PTR [ecx-0x16bb618f],ah
  40986c:	sub    al,0xde
  40986e:	add    BYTE PTR [esi-0x52ff4f1f],ah
  409874:	fstp   DWORD PTR [eax+0x44d1b543]
  40987a:	dec    BYTE PTR [edx-0x7b914d5d]
  409880:	iret   
  409881:	shl    BYTE PTR [edi-0x7a],1
  409884:	mov    ds:0xbe79fe44,al
  409889:	mov    bl,0x78
  40988b:	pusha  
  40988c:	fidivr WORD PTR [edi-0x4662b093]
  409892:	popa   
  409893:	pop    ebp
  409894:	mov    dh,BYTE PTR [ebx-0x21d31692]
  40989a:	add    BYTE PTR [edx+0x7c],cl
  40989d:	mov    dl,0x74
  40989f:	inc    esp
  4098a0:	jge    0x409872
  4098a2:	sub    eax,DWORD PTR [ebp+0x0]
  4098a5:	add    BYTE PTR [esi-0x7cca9a4e],al
  4098ab:	inc    esp
  4098ac:	(bad)  
  4098ad:	sbb    eax,0x1a6ebdc1
  4098b2:	aad    0xb9
  4098b4:	jb     0x40987a
  4098b6:	(bad)  
  4098b7:	mov    dl,0x61
  4098b9:	dec    al
  4098bb:	mov    ch,0x6e
  4098bd:	add    BYTE PTR [ecx],bh
  4098bf:	fiadd  DWORD PTR [eax]
  4098c1:	add    BYTE PTR [ebx+0x70],bh
  4098c4:	addr16 jb 0x4098ee
  4098c7:	jbe    0x40992e
  4098c9:	add    BYTE PTR ds:0x7d6e7572,ah
  4098cf:	jne    0x409933
  4098d1:	add    BYTE PTR [ebp+0x75],bh
  4098d4:	gs jo  0x40990a
  4098d7:	jnp    0x409943
  4098d9:	imul   edi,DWORD PTR [eax+0x75],0x7475fffe
  4098e0:	outs   dx,DWORD PTR ds:[esi]
  4098e1:	jae    0x40994e
  4098e3:	loopne 0x4098e5
  4098e5:	add    ch,cl
  4098e7:	pop    esp
  4098e8:	inc    eax
  4098e9:	add    BYTE PTR ds:0x5f00405d,al
  4098ef:	pop    ebx
  4098f0:	inc    eax
  4098f1:	add    BYTE PTR [esi+0x3e004055],bl
  4098f7:	imul   eax,DWORD PTR [ebx+0x0],0x4059a9
  4098fe:	jle    0x409955
  409900:	inc    eax
  409901:	add    BYTE PTR [edx-0x56ffbfa7],dh
  409907:	pop    ecx
  409908:	inc    eax
  409909:	add    BYTE PTR [eax],al
  40990b:	add    BYTE PTR [esi],al
  40990d:	loopne 0x40990f
  40990f:	add    dh,dl
  409911:	fild   WORD PTR [eax]
  409913:	add    dh,dl
  409915:	fild   WORD PTR [eax]
  409917:	add    dh,al
  409919:	(bad)  
  40991b:	push   DWORD PTR [esi]
  40991d:	and    al,0x2e
  40991f:	add    BYTE PTR [esi+0x52004054],cl
  409925:	retf   0x3f
  409928:	das    
  409929:	int3   
  40992a:	aas    
  40992b:	add    BYTE PTR [edx],ah
  40992d:	int3   
  40992e:	aas    
  40992f:	add    BYTE PTR [ebp-0x68ffc037],bh
  409935:	xchg   ecx,eax
  409936:	inc    edx
  409937:	add    BYTE PTR [edi],ch
  409939:	sub    edi,DWORD PTR [edi+0x41]
  40993c:	das    
  40993d:	pop    ds
  40993e:	repz sub DWORD PTR [edi],ebp
  409941:	or     eax,0x13df53b9
  409946:	aad    0x2d
  409948:	ds xor eax,0xf62f0002
  40994e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40994f:	(bad)
  409954:	repz adc eax,0x15e266b0
  40995a:	stos   DWORD PTR es:[edi],eax
  40995b:	fs adc eax,0x2f0004d5
  409961:	js     0x409916
  409963:	ins    DWORD PTR es:[edi],dx
  409964:	rcr    DWORD PTR [ecx],1
  409966:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409967:	jae    0x40992f
  409969:	sbb    esi,DWORD PTR [eax-0x5187f0c7]
  40996f:	outs   dx,BYTE PTR ds:[esi]
  409970:	add    BYTE PTR [eax],al
  409972:	pushf  
  409973:	push   edx
  409974:	adc    DWORD PTR [edx],ecx
  409976:	das    
  409977:	push   0xffffff94
  409979:	imul   ecx,DWORD PTR [edx-0x74d24fa4],0xffffffc1
  409980:	lods   eax,DWORD PTR ds:[esi]
  409981:	dec    DWORD PTR [eax]
  409983:	mov    WORD PTR [ebx+esi*2+0x54b06e8e],fs
  40998a:	jl     0x4099de
  40998c:	xchg   esp,eax
  40998d:	inc    eax
  40998e:	mov    BYTE PTR [edx-0x50],bl
  409991:	jae    0x409a0f
  409993:	mov    eax,ds:0x9c516896
  409998:	add    al,0x0
  40999a:	das    
  40999b:	fild   WORD PTR [eax+eax*1]
  40999e:	das    
  40999f:	and    ebp,DWORD PTR [esi+0x41]
  4099a2:	das    
  4099a3:	call   0xe96ffeac
  4099a8:	add    al,0x63
  4099aa:	das    
  4099ab:	xchg   edi,eax
  4099ac:	add    al,0x50
  4099ae:	das    
  4099af:	pop    es
  4099b0:	add    eax,0x1dde2f69
  4099b5:	add    al,0x16
  4099b7:	fimul  WORD PTR [ebx]
  4099b9:	add    al,0x12
  4099bb:	fimul  WORD PTR [esi]
  4099bd:	add    al,0xa
  4099bf:	fsubrp st(7),st
  4099c1:	add    ebp,DWORD PTR [edi]
  4099c3:	(bad)  
  4099c5:	add    ecx,DWORD PTR [edx]
  4099c7:	fdivp  st(7),st
  4099c9:	add    edx,DWORD PTR [edx]
  4099cb:	fsubrp st(7),st
  4099cd:	add    ebp,DWORD PTR [edi]
  4099cf:	fsubp  st(0),st
  4099d1:	dec    ebp
  4099d2:	in     eax,dx
  4099d3:	fnsave [edi+0x59]
  4099d6:	add    BYTE PTR [eax],al
  4099d8:	out    dx,al
  4099d9:	fnsave [edi+eax*8+0x70ecddee]
  4099e0:	out    dx,eax
  4099e1:	fucom  st(4)
  4099e3:	jo     0x4099d4
  4099e5:	fucomp st(4)
  4099e7:	jo     0x4099d8
  4099e9:	fst    QWORD PTR [edi+eax*8+0x70ecddee]
  4099f0:	out    dx,eax
  4099f1:	frstor [edx]
  4099f3:	dec    edx
  4099f4:	ins    DWORD PTR es:[edi],dx
  4099f5:	ficomp WORD PTR [ebx+0x3bde6e58]
  4099fb:	dec    eax
  4099fc:	cmc    
  4099fd:	ficom  WORD PTR [ebx-0x6e3c6358]
  409a03:	ficomp DWORD PTR [eax+0x2f037dc7]
  409a09:	fidivr WORD PTR [edx]
  409a0b:	je     0x4099ba
  409a0d:	lea    ebx,[ebp+0x79]
  409a10:	pushf  
  409a11:	pop    eax
  409a12:	pop    eax
  409a13:	mov    edx,DWORD PTR [edx+edx*2+0x57958c85]
  409a1a:	jae    0x4099a0
  409a1c:	test   al,0x55
  409a1e:	ins    DWORD PTR es:[edi],dx
  409a1f:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a21:	outs   dx,DWORD PTR ds:[esi]
  409a22:	popa   
  409a23:	xchg   ecx,eax
  409a24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a25:	pop    esi
  409a26:	bound  esi,QWORD PTR [ebx-0x7e]
  409a29:	ficom  WORD PTR [esi+0x12df233]
  409a2f:	stos   BYTE PTR es:[edi],al
  409a30:	gs sub al,0x8a
  409a33:	lahf   
  409a34:	neg    DWORD PTR [ecx]
  409a36:	add    DWORD PTR [edi],edx
  409a38:	fistp  QWORD PTR [ecx+0x3169]
  409a3e:	aam    0x92
  409a40:	inc    ebp
  409a41:	or     eax,0x840ab6a
  409a46:	retf   0x51a5
  409a49:	cs sub ebx,esi
  409a4c:	add    BYTE PTR [edx],dl
  409a4e:	les    esi,FWORD PTR [edx-0x5f90dc89]
  409a54:	jbe    0x409a6e
  409a56:	stos   DWORD PTR es:[edi],eax
  409a57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a58:	inc    ebx
  409a59:	mov    al,0x2c
  409a5b:	fiadd  WORD PTR [eax]
  409a5d:	fadd   st,st(3)
  409a5f:	enter  0xa560,0x96
  409a63:	xchg   edx,eax
  409a64:	inc    esp
  409a65:	lods   eax,DWORD PTR ds:[esi]
  409a66:	pop    esi
  409a67:	test   eax,0xa45ec048
  409a6c:	pop    edx
  409a6d:	sahf   
  409a6e:	je     0x409a17
  409a70:	inc    esi
  409a71:	int3   
  409a72:	sub    al,0xde
  409a74:	add    dl,ah
  409a76:	xor    eax,0x1cf11ed3
  409a7b:	xchg   esi,eax
  409a7c:	inc    edi
  409a7d:	ret    
  409a7e:	sbb    eax,0x2ce919e7
  409a83:	fiadd  WORD PTR [eax]
  409a85:	fistp  WORD PTR [ecx-0x561664aa]
  409a8c:	inc    ecx
  409a8d:	je     0x409a54
  409a8f:	mov    ds:0xa3e1805a,eax
  409a94:	dec    ebp
  409a95:	ins    BYTE PTR es:[edi],dx
  409a96:	out    dx,eax
  409a97:	pushf  
  409a98:	outs   dx,BYTE PTR ds:[esi]
  409a99:	dec    edi
  409a9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a9b:	lods   eax,DWORD PTR ds:[esi]
  409a9c:	inc    edx
  409a9d:	das    
  409a9e:	call   0xba00:0x485d95
  409aa5:	stos   BYTE PTR es:[edi],al
  409aa6:	pop    ebx
  409aa7:	pop    edx
  409aa8:	cwde   
  409aa9:	mov    al,0x6b
  409aab:	add    BYTE PTR [ebp+0x6a],dh
  409aae:	(bad)  
  409aaf:	(bad)  
  409ab0:	jle    0x409a98
  409ab2:	std    
  409ab3:	in     al,dx
  409ab4:	out    dx,al
  409ab5:	loopne 0x409aa4
  409ab7:	stc    
  409ab8:	leave  
  409ab9:	add    cl,bh
  409abb:	repz mov bl,0xe2
  409abe:	out    0xfb,al
  409ac0:	stos   DWORD PTR es:[edi],eax
  409ac1:	fild   WORD PTR [eax]
  409ac3:	add    bl,bl
  409ac5:	cwde   
  409ac6:	mov    edi,0xc103d5c5
  409acb:	add    BYTE PTR [ecx-0x5814020e],bl
  409ad1:	or     al,0xeb
  409ad3:	cld    
  409ad4:	cmc    
  409ad5:	lock out dx,eax
  409ad7:	add    BYTE PTR [ebx],bl
  409ad9:	hlt    
  409ada:	ret    
  409adb:	mov    esi,0xbac6b6ba
  409ae0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ae1:	mov    dl,0xca
  409ae3:	add    BYTE PTR [eax+0x16],ah
  409ae6:	inc    edi
  409ae7:	dec    eax
  409ae8:	test   BYTE PTR [edx],bl
  409aea:	inc    esi
  409aeb:	jne    0x409a7b
  409aed:	sbb    BYTE PTR [edx+0x5c],cl
  409af0:	mov    eax,DWORD PTR [ebx-0x23b9b69b]
  409af6:	add    BYTE PTR [eax],al
  409af8:	les    esp,FWORD PTR [edi+0x68]
  409afb:	ins    BYTE PTR es:[edi],dx
  409afc:	enter  0x716d,0x58
  409b00:	mov    ah,0x79
  409b02:	jb     0x409b04
  409b04:	sbb    al,0xd9
  409b06:	or     ebx,DWORD PTR [esi]
  409b08:	add    BYTE PTR [eax],al
  409b0a:	cld    
  409b0b:	out    dx,al
  409b0c:	sbb    ecx,DWORD PTR [ebx]
  409b0e:	or     ebp,edi
  409b10:	sub    ah,BYTE PTR [ecx]
  409b12:	shl    DWORD PTR [edx+esi*1],0x29
  409b16:	mov    ecx,0xa20d072f
  409b1b:	sub    eax,0x3b30313b
  409b20:	jae    0x409b3e
  409b22:	(bad)  
  409b23:	rcl    DWORD PTR [ebx+eiz*1],cl
  409b26:	das    
  409b27:	dec    esp
  409b28:	clc    
  409b29:	or     eax,0x9d84e33
  409b2e:	and    esp,DWORD PTR [ebx]
  409b30:	or     eax,0x2352b0c
  409b35:	add    BYTE PTR [edi],ch
  409b37:	cmp    edx,esi
  409b39:	sbb    dh,BYTE PTR [ecx]
  409b3b:	xor    edi,esp
  409b3d:	or     DWORD PTR [ebx+0x8],eax
  409b40:	or     BYTE PTR [ebx],bl
  409b42:	xor    BYTE PTR ds:0xd52f0002,dh
  409b48:	xchg   ebp,eax
  409b49:	pop    edi
  409b4a:	std    
  409b4b:	jmp    0x7ca1:0xd844639e
  409b52:	das    
  409b53:	push   ebp
  409b54:	adc    al,0xe7
  409b56:	sbb    BYTE PTR [ebp+0x2a],0xab
  409b5a:	dec    esi
  409b5b:	les    ebp,FWORD PTR [esi]
  409b5d:	add    BYTE PTR [edi],ch
  409b5f:	scas   al,BYTE PTR es:[edi]
  409b60:	sub    eax,0x208f5cff
  409b65:	loope  0x409aff
  409b67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b68:	cs icebp 
  409b6a:	das    
  409b6b:	jge    0x409b2b
  409b6d:	dec    esp
  409b6e:	add    BYTE PTR [eax],al
  409b70:	fstp   TBYTE PTR [ecx-0x49]
  409b73:	pop    esp
  409b74:	and    ah,BYTE PTR [esi-0x2f]
  409b77:	push   edx
  409b78:	das    
  409b79:	arpl   sp,ax
  409b7b:	push   esi
  409b7c:	jns    0x409bf9
  409b7e:	into   
  409b7f:	push   edx
  409b80:	jp     0x409bb7
  409b82:	enter  0x6753,0x35
  409b86:	add    al,BYTE PTR [eax]
  409b88:	das    
  409b89:	sti    
  409b8a:	cmp    ecx,eax
  409b8c:	lods   al,BYTE PTR ds:[esi]
  409b8d:	fbstp  TBYTE PTR [edx]
  409b8f:	int    0x2f
  409b91:	push   ebx
  409b92:	mov    edi,0xb9737154
  409b97:	inc    esp
  409b98:	pop    esp
  409b99:	push   edx
  409b9a:	cdq    
  409b9b:	push   ecx
  409b9c:	xchg   BYTE PTR [eax-0x4d],ah
  409b9f:	dec    ebx
  409ba0:	jle    0x409b80
  409ba2:	cs mov eax,0xca2bc959
  409ba8:	ins    DWORD PTR es:[edi],dx
  409ba9:	xchg   ebp,eax
  409baa:	xor    eax,0x2fb541b9
  409baf:	mov    esi,0xa8469363
  409bb4:	push   ebx
  409bb5:	mov    DWORD PTR [esi-0x5b],0xc83ec532
  409bbc:	imul   DWORD PTR [esi-0x21d0fbc6]
  409bc2:	sbb    al,0x94
  409bc4:	push   edi
  409bc5:	or     esp,eax
  409bc7:	loope  0x409bc0
  409bc9:	retf   
  409bca:	adc    dh,ch
  409bcc:	inc    edi
  409bcd:	test   edx,0xc6c005b1
  409bd3:	fld    QWORD PTR [eax]
  409bd5:	add    BYTE PTR [edi],dh
  409bd7:	or     dh,BYTE PTR [ebx]
  409bd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bda:	or     edx,esi
  409bdc:	mov    edi,0xfcaff3e6
  409be1:	fst    DWORD PTR [ebx]
  409be3:	or     esp,edi
  409be5:	mov    bh,0xfd
  409be7:	shl    edx,1
  409be9:	or     eax,0x1b0abd6
  409bee:	cmp    bl,dh
  409bf0:	fidivr DWORD PTR [ebx+0x1e9e8e1]
  409bf6:	retf   0xa497
  409bf9:	stc    
  409bfa:	and    edx,eax
  409bfc:	into   
  409bfd:	add    ebp,DWORD PTR [edi]
  409bff:	ficom  WORD PTR [edi+0x7d]
  409c02:	ret    
  409c03:	data16 cmp bh,BYTE PTR [ebp-0x42]
  409c07:	push   ebx
  409c08:	gs jne 0x409c3a
  409c0b:	fdivrp st(1),st
  409c0d:	neg    DWORD PTR [edi+eiz*8]
  409c10:	out    dx,eax
  409c11:	add    ebp,DWORD PTR [edi]
  409c13:	fiadd  WORD PTR [eax+0x65]
  409c16:	mov    bh,0x7c
  409c18:	sub    eax,0x15a9741
  409c1d:	popa   
  409c1e:	addr16 fs ret 
  409c21:	cmp    al,0x7b
  409c23:	jno    0x409bdc
  409c25:	mov    edi,0xd9ca1365
  409c2a:	cmp    dh,BYTE PTR [ebp-0x70]
  409c2d:	imul   esi,DWORD PTR [eax+0x3d78d327],0x4f
  409c34:	xchg   esi,eax
  409c35:	test   DWORD PTR [eax+0x7d],edx
  409c38:	(bad)  
  409c39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c3a:	add    BYTE PTR [eax],al
  409c3c:	mov    eax,ds:0xfc8dac8a
  409c41:	je     0x409c31
  409c43:	imul   edx,DWORD PTR [esi],0xfd64a882
  409c49:	jb     0x409c07
  409c4b:	xchg   BYTE PTR [ebp+0x13],bl
  409c4e:	pushf  
  409c4f:	push   edi
  409c50:	jmp    0xb87c:0xc57b67a
  409c57:	scas   al,BYTE PTR es:[edi]
  409c58:	(bad)  
  409c59:	push   0x830d9f8e
  409c5e:	in     al,dx
  409c5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c60:	cli    
  409c61:	adc    al,0xc6
  409c63:	mov    ds:0x45eb681c,al
  409c68:	and    bl,BYTE PTR [edx]
  409c6a:	iret   
  409c6b:	xor    al,0xaa
  409c6d:	pop    ebp
  409c6e:	call   0x2171:0xeb76e92d
  409c75:	xor    DWORD PTR [ebp-0x79c43670],ecx
  409c7b:	lods   ax,WORD PTR ds:[esi]
  409c7d:	arpl   WORD PTR [ecx],ax
  409c7f:	mov    ch,0xcb
  409c81:	leave  
  409c82:	sbb    cl,bl
  409c84:	not    BYTE PTR [ebp+ecx*2+0x64b61eae]
  409c8b:	mov    cl,dl
  409c8d:	(bad)  
  409c8e:	add    ebp,esp
  409c90:	pop    es
  409c91:	add    DWORD PTR [ebx],esp
  409c93:	xchg   ch,ch
  409c95:	call   0x4543:0xdf0f0058
  409c9c:	(bad)  
  409c9d:	and    DWORD PTR [esi+0x48],ecx
  409ca0:	add    BYTE PTR [eax],al
  409ca2:	mov    cl,0x31
  409ca4:	adc    ebx,DWORD PTR [ebx+0x66]
  409ca7:	push   ecx
  409ca8:	jae    0x409d23
  409caa:	jbe    0x409c2c
  409cac:	jbe    0x409d2d
  409cae:	dec    edi
  409caf:	inc    esi
  409cb0:	xor    eax,0x7989707f
  409cb5:	and    eax,0x7a628400
  409cba:	push   0xc30d09e9
  409cbf:	loopne 0x409cc1
  409cc1:	add    BYTE PTR [ebp+eax*2+0x18a02f27],bl
  409cc8:	dec    edi
  409cc9:	inc    esp
  409cca:	inc    edi
  409ccb:	inc    eax
  409ccc:	xor    DWORD PTR ds:0x8247c7e,ebp
  409cd2:	xchg   ebx,eax
  409cd3:	xor    DWORD PTR [esi],esp
  409cd5:	or     cl,BYTE PTR [edx+0x5a0c1eeb]
  409cdb:	inc    eax
  409cdc:	add    DWORD PTR ds:0x214e157,ebx
  409ce2:	push   esi
  409ce3:	loopne 0x409ce5
  409ce5:	add    BYTE PTR [edi],ch
  409ce7:	pop    eax
  409ce8:	jb     0x409d66
  409cea:	push   ebx
  409ceb:	mov    ebx,DWORD PTR [edx]
  409ced:	pop    ss
  409cee:	push   esp
  409cef:	dec    ebp
  409cf0:	pusha  
  409cf1:	jle    0x409d50
  409cf3:	das    
  409cf4:	jo     0x409d52
  409cf6:	jle    0x409d1e
  409cf8:	pop    edi
  409cf9:	dec    eax
  409cfa:	test   BYTE PTR [ebx],ah
  409cfc:	jp     0x409d5d
  409cfe:	sbb    DWORD PTR [edi],0x55
  409d01:	inc    edx
  409d02:	(bad)  
  409d03:	fild   WORD PTR [eax]
  409d05:	add    BYTE PTR [eax],al
  409d07:	add    BYTE PTR [ebp+ebx*4-0x33],al
  409d0b:	(bad)  
  409d0c:	dec    eax
  409d0d:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d0f:	lods   al,BYTE PTR ds:[esi]
  409d10:	jg     0x409cba
  409d12:	xlat   BYTE PTR ds:[ebx]
  409d13:	lds    ebp,FWORD PTR [edi]
  409d15:	add    eax,0xe30fce69
  409d1a:	sbb    eax,ebp
  409d1c:	hlt    
  409d1d:	in     al,dx
  409d1e:	and    esp,esp
  409d20:	jmp    0xd93faef5
  409d25:	xor    ebp,DWORD PTR [edx]
  409d27:	add    BYTE PTR [edi],ch
  409d29:	or     DWORD PTR [ebp-0x5d],esp
  409d2c:	xchg   esi,eax
  409d2d:	mov    ebx,0x5885ad79
  409d32:	push   ecx
  409d33:	lods   eax,DWORD PTR ds:[esi]
  409d34:	jle    0x409d86
  409d36:	and    BYTE PTR [ebp-0x51a3a070],0xc8
  409d3d:	inc    ebp
  409d3e:	add    al,BYTE PTR [eax]
  409d40:	das    
  409d41:	jbe    0x409d6c
  409d43:	out    dx,al
  409d44:	mov    ds:0x88e03150,eax
  409d49:	mov    ebx,DWORD PTR [edx]
  409d4b:	loopne 0x409ce8
  409d4d:	pop    ebx
  409d4e:	dec    ecx
  409d4f:	call   0xe35401e1
  409d54:	das    
  409d55:	lahf   
  409d56:	jns    0x409d16
  409d58:	rol    BYTE PTR [ebp+0x2],cl
  409d5b:	add    BYTE PTR [edi],ch
  409d5d:	gs sub bh,al
  409d60:	and    BYTE PTR [eax+0x26],0xfc
  409d64:	push   ebp
  409d65:	mov    cl,0x20
  409d67:	out    0x5f,eax
  409d69:	fs adc ebp,edi
  409d6c:	add    BYTE PTR [eax],al
  409d6e:	pusha  
  409d6f:	xchg   ecx,eax
  409d70:	adc    ebp,esi
  409d72:	pop    edx
  409d73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d74:	daa    
  409d75:	(bad)  
  409d76:	jnp    0x409d81
  409d78:	fist   WORD PTR cs:[eax-0x6c]
  409d7c:	xor    eax,ebx
  409d7e:	ins    BYTE PTR es:[edi],dx
  409d7f:	lahf   
  409d80:	sub    esi,esp
  409d82:	push   esp
  409d83:	sti    
  409d84:	and    ebp,ebp
  409d86:	adc    eax,0x1eed13f8
  409d8b:	int    0x50
  409d8d:	add    BYTE PTR [edi],ch
  409d8f:	fisubr WORD PTR [edi-0x166b914a]
  409d95:	mov    ah,0x73
  409d97:	mov    ds:0xaa750ab4,eax
  409d9c:	lods   eax,DWORD PTR ds:[esi]
  409d9d:	fnsave [esi]
  409d9f:	in     eax,0x97
  409da1:	mov    cl,0x30
  409da3:	add    al,ah
  409da5:	test   BYTE PTR [edx+0x12e7a18e],0xd9
  409dac:	mov    es,esi
  409dae:	jp     0x409d46
  409db0:	pop    ecx
  409db1:	loope  0x409d83
  409db3:	cmp    ch,al
  409db5:	add    ebp,DWORD PTR [edi]
  409db7:	ficomp WORD PTR [eax]
  409db9:	stos   BYTE PTR es:[edi],al
  409dba:	sub    al,0xe0
  409dbc:	dec    esp
  409dbd:	scas   al,BYTE PTR es:[edi]
  409dbe:	or     edi,edi
  409dc0:	pop    ss
  409dc1:	out    0x2,al
  409dc3:	lea    eax,[esi]
  409dc5:	loopne 0x409e0f
  409dc7:	mov    bl,0xf0
  409dc9:	lock cmp eax,0x5eda32c8
  409dcf:	stos   DWORD PTR es:[edi],eax
  409dd0:	fcmovbe st,st(6)
  409dd2:	add    BYTE PTR [eax],al
  409dd4:	push   eax
  409dd5:	out    dx,al
  409dd6:	aam    0xd4
  409dd8:	adc    dh,ah
  409dda:	int    0xe3
  409ddc:	inc    eax
  409ddd:	lods   al,BYTE PTR ds:[esi]
  409dde:	fmulp  st(4),st
  409de0:	jecxz  0x409d82
  409de2:	pop    ss
  409de3:	mov    dl,0x2f
  409de5:	loopne 0x409dd0
  409de7:	scas   al,BYTE PTR es:[edi]
  409de8:	xor    edx,esp
  409dea:	adc    ebp,DWORD PTR [edi-0x42316d0d]
  409df0:	or     ah,dh
  409df2:	shr    DWORD PTR [edi-0x47516ec1],0xf2
  409df9:	popf   
  409dfa:	ret    0xd4ab
  409dfd:	idiv   BYTE PTR [ecx+ebp*4-0x190100fa]
  409e04:	iret   
  409e05:	add    eax,ebp
  409e07:	add    ebp,DWORD PTR [edi]
  409e09:	fiadd  WORD PTR [eax]
  409e0b:	or     DWORD PTR [eax+0x4a89a47c],0x8655b78b
  409e15:	fiadd  WORD PTR [eax]
  409e17:	in     eax,dx
  409e18:	(bad)  
  409e19:	jmp    0xcf749932
  409e1e:	add    BYTE PTR [eax+eax*8-0x3e59a755],bl
  409e25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e26:	dec    edi
  409e27:	mov    al,ds:0xde67a0f3
  409e2c:	in     al,dx
  409e2d:	lds    edx,FWORD PTR [edi+ecx*8]
  409e30:	fisttp DWORD PTR [ebp-0x162c098e]
  409e36:	dec    edi
  409e37:	icebp  
  409e38:	add    BYTE PTR [eax],al
  409e3a:	icebp  
  409e3b:	lea    eax,[edx-0x17]
  409e3e:	sub    al,0xde
  409e40:	add    BYTE PTR [ebx-0x4e],ch
  409e43:	pop    esp
  409e44:	test   DWORD PTR [esi-0x59],ebx
  409e47:	push   edx
  409e48:	add    ecx,ebx
  409e4a:	xchg   edi,eax
  409e4b:	add    al,0x36
  409e4d:	dec    BYTE PTR [ebx+0x74ec00ae]
  409e53:	fwait
  409e54:	add    dl,ah
  409e56:	sub    eax,0x80e401e1
  409e5b:	jecxz  0x409ea4
  409e5d:	in     al,dx
  409e5e:	xor    al,0xe7
  409e60:	or     dl,ch
  409e62:	xor    edx,esp
  409e64:	aas    
  409e65:	out    0x23,al
  409e67:	call   0x1a57:0xda59da0f
  409e6e:	sub    DWORD PTR [eax+eax*1-0x30dc127a],edx
  409e75:	sub    esp,ebp
  409e77:	pusha  
  409e78:	shl    DWORD PTR [edi],cl
  409e7a:	mov    ah,0x28
  409e7c:	shl    DWORD PTR [ecx],cl
  409e7e:	not    DWORD PTR [ebx]
  409e80:	(bad)  ds:0xdc0dbc
  409e86:	push   cs
  409e87:	hlt    
  409e88:	(bad)  
  409e89:	fmul   DWORD PTR [ebx-0x4b]
  409e8c:	fcmove st,st(6)
  409e8e:	jnp    0x409e7d
  409e90:	(bad)  
  409e91:	shl    BYTE PTR [edx-0x43],1
  409e94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e95:	idiv   DWORD PTR [ebp-0x23]
  409e98:	add    BYTE PTR [eax],al
  409e9a:	push   eax
  409e9b:	std    
  409e9c:	jmp    0x37409f90
  409ea1:	cld    
  409ea2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ea3:	repz xor esp,eax
  409ea6:	out    0xe4,al
  409ea8:	sbb    eax,DWORD PTR [edi+ebp*4]
  409eab:	jecxz  0x409e96
  409ead:	shl    ecx,1
  409eaf:	jmp    DWORD PTR [edx]
  409eb1:	iret   
  409eb2:	idiv   ecx
  409eb4:	enter  0xfbcb,0xee
  409eb8:	clc    
  409eb9:	aad    0xea
  409ebb:	neg    BYTE PTR [ecx-0x61ff7360]
  409ec1:	scas   eax,DWORD PTR es:[edi]
  409ec2:	adc    DWORD PTR [ebx-0x296e48c1],0x53
  409ec9:	mov    bh,0x93
  409ecb:	popf   
  409ecc:	pop    ds
  409ecd:	scas   al,BYTE PTR es:[edi]
  409ece:	fst    QWORD PTR [ecx-0x7e6f5def]
  409ed4:	add    DWORD PTR [edi-0x6a],esp
  409ed7:	xchg   edx,eax
  409ed8:	shl    ecx,0x0
  409edb:	add    BYTE PTR [eax+0x773f2527],dl
  409ee1:	sbb    BYTE PTR [ebx+0x33],dh
  409ee4:	push   edi
  409ee5:	inc    edx
  409ee6:	cmp    BYTE PTR [edi],bh
  409ee8:	imul   eax,DWORD PTR [ecx+0x7b],0x3f
  409eec:	stos   DWORD PTR es:[edi],eax
  409eed:	inc    ecx
  409eee:	and    dh,BYTE PTR [ebx]
  409ef0:	mov    ds:0x466c273d,eax
  409ef5:	fadd   QWORD PTR [eax]
  409ef7:	add    BYTE PTR [ebx],ch
  409ef9:	pop    ss
  409efa:	and    eax,0x381a2470
  409eff:	and    DWORD PTR [edi],ebp
  409f01:	rcl    edx,cl
  409f03:	js     0x409f05
  409f05:	add    BYTE PTR [edx],al
  409f07:	int    0xd1
  409f09:	xor    DWORD PTR [ecx],eax
  409f0b:	(bad)  [eax-0x1833d701]
  409f11:	aaa    
  409f12:	push   ecx
  409f13:	dec    ecx
  409f14:	(bad)  
  409f15:	xor    al,0x56
  409f17:	loope  0x409eef
  409f19:	and    al,0x57
  409f1b:	adc    ebp,ebx
  409f1d:	xor    ecx,DWORD PTR [ebp+0x35]
  409f20:	(bad)  
  409f21:	daa    
  409f22:	dec    esi
  409f23:	sub    esi,edx
  409f25:	sub    ebp,DWORD PTR [edi]
  409f27:	mov    bh,BYTE PTR [eax-0x354ba9b2]
  409f2d:	inc    ecx
  409f2e:	jns    0x409f84
  409f30:	int    0x51
  409f32:	jo     0x409ebe
  409f34:	mov    dh,0x42
  409f36:	and    BYTE PTR [eax-0x4c],0x5e
  409f3a:	pusha  
  409f3b:	inc    ebp
  409f3c:	add    al,BYTE PTR [eax]
  409f3e:	das    
  409f3f:	test   BYTE PTR [esi],bh
  409f41:	shr    eax,1
  409f43:	and    ch,BYTE PTR [ebx*8-0x20cc8f21]
  409f4a:	ficom  WORD PTR [esp+esi*1-0x2a]
  409f4e:	jp     0x409fa2
  409f50:	sbb    al,bl
  409f52:	outs   dx,DWORD PTR ds:[esi]
  409f53:	push   edi
  409f54:	add    al,BYTE PTR [eax]
  409f56:	das    
  409f57:	xor    dl,dl
  409f59:	and    al,0x5c
  409f5b:	fsubrp st(5),st
  409f5d:	sub    dl,BYTE PTR [edi+0x28]
  409f60:	fld    TBYTE PTR [eax]
  409f62:	push   ecx
  409f63:	sbb    al,0xf2
  409f65:	ds inc edi
  409f67:	pop    ds
  409f68:	add    al,BYTE PTR [eax]
  409f6a:	add    BYTE PTR [eax],al
  409f6c:	das    
  409f6d:	sub    ah,al
  409f6f:	ss push cs
  409f71:	sub    al,0xe2
  409f73:	and    esp,DWORD PTR [eax+ecx*2]
  409f76:	out    0x33,al
  409f78:	push   ss
  409f79:	jne    0x409f4b
  409f7b:	cmp    al,0x1b
  409f7d:	fsubrp st(7),st
  409f7f:	add    ebp,DWORD PTR [edi]
  409f81:	fimul  WORD PTR [edi+0x26]
  409f84:	inc    ebp
  409f85:	dec    edx
  409f86:	sub    BYTE PTR cs:[esi+0x30],al
  409f8a:	and    cl,BYTE PTR ds:0x1a3a3534
  409f90:	das    
  409f91:	fisub  WORD PTR [edi+0x7e]
  409f94:	mov    ebp,0xc1728661
  409f99:	pop    ebp
  409f9a:	popa   
  409f9b:	xchg   bh,cl
  409f9d:	imul   eax,DWORD PTR [eax+esi*2+0x36869a3],0x865fde2f
  409fa8:	xchg   ebp,eax
  409fa9:	imul   eax,DWORD PTR [esi+0x7a],0x7e696591
  409fb0:	xchg   edi,eax
  409fb1:	dec    esp
  409fb2:	push   esp
  409fb3:	jg     0x409fe4
  409fb5:	fmulp  st(7),st
  409fb7:	mul    BYTE PTR [esi]
  409fb9:	fidiv  DWORD PTR [ebp-0xa1ed4f6]
  409fbf:	push   es
  409fc0:	sub    eax,0x2af21dd1
  409fc5:	out    0xf9,eax
  409fc7:	or     DWORD PTR ds:0xad6d77de,edx
  409fcd:	push   ecx
  409fce:	xchg   BYTE PTR [ecx+0x68bb0000],al
  409fd4:	data16 jg 0x409f8c
  409fd7:	pop    eax
  409fd8:	jle    0x409f5f
  409fda:	test   eax,0x2f03e857
  409fdf:	ficomp WORD PTR [eax+0x4e]
  409fe2:	int3   
  409fe3:	jo     0x40a064
  409fe5:	pusha  
  409fe6:	lds    edi,FWORD PTR [edi+0x47]
  409fe9:	pop    esp
  409fea:	mov    ch,0x83
  409fec:	call   0xca1ecef4
  409ff1:	ficomp WORD PTR [eax]
  409ff3:	add    ah,ch
  409ff5:	aad    0x22
  409ff7:	out    dx,eax
  409ff8:	add    BYTE PTR [ecx+0x3b00f374],bh
  409ffe:	loopne 0x40a07d
  40a000:	mov    bh,0x85
  40a002:	jmp    0xe7e35288
  40a007:	jnp    0x409fbd
  40a009:	jmp    0x9c417e3a
  40a00e:	jne    0x409fc0
  40a010:	dec    esi
  40a011:	scas   eax,DWORD PTR es:[edi]
  40a012:	in     al,dx
  40a013:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a014:	jno    0x409fbd
  40a016:	out    0xa1,al
  40a018:	inc    ecx
  40a019:	fdivrp st(5),st
  40a01c:	add    BYTE PTR [ebx],dl
  40a01e:	imul   edi,DWORD PTR [edi],0x145a38d8
  40a024:	in     eax,0x34
  40a026:	cmp    al,0x10
  40a028:	jmp    0xc569df5f
  40a02d:	sub    bh,BYTE PTR [edx]
  40a02f:	sub    ch,bl
  40a031:	jmp    0x3c417e62
  40a036:	add    BYTE PTR [eax],al
  40a038:	jl     0x409fc1
  40a03a:	cmp    BYTE PTR [edx],0x51
  40a03d:	sub    DWORD PTR [ecx-0x4f8a8cd1],0xffffff99
  40a044:	push   0x64
  40a046:	mov    ah,0x88
  40a048:	dec    ebx
  40a049:	test   DWORD PTR [ecx+0xde2c87],esp
  40a04f:	ficomp DWORD PTR [ebx]
  40a051:	cmp    eax,0x414cc4cc
  40a056:	out    0xb9,eax
  40a058:	xor    ch,BYTE PTR [edi]
  40a05a:	(bad)  
  40a05b:	mov    bh,0x44
  40a05d:	push   ds
  40a05e:	sti    
  40a05f:	sar    DWORD PTR [edi],0x40
  40a062:	loope  0x409ff4
  40a064:	dec    ebp
  40a065:	fiadd  WORD PTR [eax]
  40a067:	inc    esp
  40a068:	adc    eax,0xd489a6f
  40a06d:	push   esp
  40a06e:	mov    bl,0x43
  40a070:	jo     0xe140a131
  40a076:	add    BYTE PTR [eax],al
  40a078:	sbb    al,0x74
  40a07a:	pop    esp
  40a07b:	je     0x40a08d
  40a07d:	sbb    al,0x71
  40a07f:	dec    esi
  40a080:	or     dh,BYTE PTR [ebp-0x2]
  40a083:	(bad)  
  40a084:	clc    
  40a085:	push   es
  40a086:	repz fcomp st(3)
  40a089:	stc    
  40a08a:	jmp    0xee18827c
  40a08f:	jecxz  0x40a07b
  40a091:	loopne 0x40a093
  40a093:	add    BYTE PTR [eax],ch
  40a095:	inc    esi
  40a096:	add    ch,BYTE PTR [eax]
  40a098:	cs or  al,0x2e
  40a09b:	xor    DWORD PTR [eax],eax
  40a09d:	add    BYTE PTR [ebx],ch
  40a09f:	fiadd  DWORD PTR [eax]
  40a0a1:	add    BYTE PTR [edx-0x30],dl
  40a0a4:	fdivrp st(3),st
  40a0a6:	and    esi,ecx
  40a0a8:	out    dx,eax
  40a0a9:	loopne 0x40a0d5
  40a0ab:	int3   
  40a0ac:	in     eax,0x0
  40a0ae:	add    BYTE PTR ds:0x38060600,dh
  40a0b4:	add    esi,DWORD PTR [eax]
  40a0b6:	or     ch,bl
  40a0b8:	or     cl,BYTE PTR [esi]
  40a0ba:	fisubr WORD PTR [edi]
  40a0bc:	or     eax,DWORD PTR [eax]
  40a0be:	mov    al,ds:0x81383846
  40a0c3:	pop    ss
  40a0c4:	cmp    eax,DWORD PTR [eax]
  40a0c6:	fs push edi
  40a0c8:	popa   
  40a0c9:	pushw  0x3072
  40a0cd:	or     ecx,DWORD PTR gs:[edi]
  40a0d0:	inc    bp
  40a0d2:	push   ds
  40a0d3:	ds sub eax,0x3347506b
  40a0d9:	xor    BYTE PTR [esi-0x7b],ah
  40a0dc:	and    BYTE PTR [esi],dh
  40a0de:	mov    ds:0xed7a254d,eax
  40a0e3:	push   ebp
  40a0e4:	(bad)  
  40a0e5:	dec    DWORD PTR [edi+0x53]
  40a0e8:	jbe    0x40a163
  40a0ea:	xchg   esi,eax
  40a0eb:	loopne 0x40a0ed
  40a0ed:	add    BYTE PTR [edi],ch
  40a0ef:	out    dx,eax
  40a0f0:	mov    cl,0x49
  40a0f2:	rol    DWORD PTR [esi],cl
  40a0f4:	retf   
  40a0f5:	inc    ecx
  40a0f6:	or     DWORD PTR [eax],esi
  40a0f8:	lds    ebx,FWORD PTR [esi-0x14]
  40a0fb:	inc    esi
  40a0fc:	add    al,BYTE PTR [eax]
  40a0fe:	das    
  40a0ff:	jg     0x40a145
  40a101:	mov    ecx,0xa6970000
  40a106:	dec    eax
  40a107:	add    BYTE PTR [edi],ch
  40a109:	int    0xdd
  40a10b:	and    edi,ebx
  40a10d:	inc    esi
  40a10e:	add    al,BYTE PTR [eax]
  40a110:	das    
  40a111:	add    ch,BYTE PTR [esi]
  40a113:	(bad)  
  40a114:	mov    al,BYTE PTR [esi+0x2]
  40a117:	add    BYTE PTR [edi],ch
  40a119:	cli    
  40a11a:	inc    esi
  40a11b:	fadd   DWORD PTR [edx]
  40a11d:	inc    esi
  40a11e:	add    al,BYTE PTR [eax]
  40a120:	das    
  40a121:	add    BYTE PTR [ecx-0x4d],dh
  40a124:	rcl    DWORD PTR [esp+edi*2+0x4cc8a49d],1
  40a12b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a12c:	mov    ch,0xc1
  40a12e:	jg     0x40a0b5
  40a130:	lods   eax,DWORD PTR ds:[esi]
  40a131:	mov    edi,0x459c937a
  40a136:	add    al,BYTE PTR [eax]
  40a138:	das    
  40a139:	mov    ch,0xea
  40a13b:	pop    es
  40a13c:	sub    DWORD PTR [ebx-0x1c],esi
  40a13f:	es das 
  40a141:	mov    bh,BYTE PTR [esi]
  40a143:	in     eax,0xc4
  40a145:	loop   0x40a189
  40a147:	int    0xf7
  40a149:	sbb    al,0x47
  40a14b:	(bad)  
  40a14c:	scas   al,BYTE PTR es:[edi]
  40a14d:	inc    ebp
  40a14e:	add    al,BYTE PTR [eax]
  40a150:	das    
  40a151:	ds mov al,0x70
  40a154:	xor    eax,0x2357c0f0
  40a159:	vpcomuw xmm0,xmm6,XMMWORD PTR [edx+eax*1+0x0],0x2f
  40a161:	push   cs
  40a162:	shl    BYTE PTR [eax+0x3],0xe2
  40a166:	mov    ebp,0xe900004b
  40a16b:	(bad)  ds:0xc6de2f04
  40a171:	xchg   ebx,eax
  40a172:	ss out 0xe6,eax
  40a175:	mov    bh,0xf
  40a177:	stos   DWORD PTR es:[edi],eax
  40a178:	or     esp,DWORD PTR [edx-0x222a111a]
  40a17e:	loope  0x40a16a
  40a180:	mov    dh,0xa9
  40a182:	and    eax,eax
  40a184:	shl    ecx,cl
  40a186:	out    dx,eax
  40a187:	mov    ebx,0xb5c29cee
  40a18c:	fimul  DWORD PTR [ebp-0x4c190ef6]
  40a192:	push   es
  40a193:	push   es
  40a194:	fmulp  st(1),st
  40a196:	(bad)  [ebx-0x5e793854]
  40a19c:	fild   DWORD PTR [edx]
  40a19e:	ss xchg esp,eax
  40a1a0:	inc    DWORD PTR [ebx]
  40a1a2:	das    
  40a1a3:	fidiv  WORD PTR [edi+0x2a]
  40a1a6:	stc    
  40a1a7:	sub    BYTE PTR [edx],bh
  40a1a9:	adc    dl,BYTE PTR [ecx]
  40a1ab:	xor    dl,BYTE PTR [ecx]
  40a1ad:	dec    edi
  40a1ae:	(bad)  
  40a1af:	xor    dl,BYTE PTR [eax+edx*1]
  40a1b2:	into   
  40a1b3:	ja     0x40a1fd
  40a1b5:	sbb    ah,BYTE PTR [edx-0x32dfc3e2]
  40a1bb:	inc    esi
  40a1bc:	or     DWORD PTR [ecx-0x70],ebx
  40a1bf:	xchg   BYTE PTR [edx],al
  40a1c1:	test   DWORD PTR [edi],ebp
  40a1c3:	ficomp WORD PTR [ecx]
  40a1c5:	inc    eax
  40a1c6:	clc    
  40a1c7:	movlps xmm0,QWORD PTR [ebp+edx*8+0x3a]
  40a1cc:	enter  0x28,0x0
  40a1d0:	(bad)  [esi]
  40a1d2:	rcr    DWORD PTR [edx+edi*4],1
  40a1d5:	inc    esi
  40a1d6:	retf   0x2f25
  40a1d9:	ficomp WORD PTR [ebx+0x61]
  40a1dc:	fstp   TBYTE PTR [esp+eax*4+0x6a]
  40a1e0:	loopne 0x40a22a
  40a1e2:	jae    0x40a24b
  40a1e4:	lds    edi,FWORD PTR [esi+0x1]
  40a1e7:	jmp    0xc2418018
  40a1ec:	icebp  
  40a1ed:	or     dl,bh
  40a1ef:	stos   BYTE PTR es:[edi],al
  40a1f0:	neg    DWORD PTR [eax]
  40a1f2:	loope  0x40a1a0
  40a1f4:	out    dx,eax
  40a1f5:	push   ds
  40a1f6:	fldcw  WORD PTR [ebp+0x7700de3e]
  40a1fc:	add    al,0x81
  40a1fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1ff:	push   ebx
  40a200:	cli    
  40a201:	imul   esp,edi,0xae70cc64
  40a207:	test   BYTE PTR [ebx+eax*4-0x21ccd35a],ch
  40a20e:	add    BYTE PTR [eax],cl
  40a210:	cmp    eax,0x30fc0fd4
  40a215:	fisttp WORD PTR [edi+0x1a]
  40a218:	cmp    eax,0x2ce90fc9
  40a21d:	fiadd  WORD PTR [eax]
  40a21f:	leave  
  40a220:	add    eax,0x2ce920a9
  40a225:	fiadd  WORD PTR [eax]
  40a227:	pusha  
  40a228:	popa   
  40a229:	push   0xffffffac
  40a22b:	jmp    0xca41805c
  40a230:	sub    ebx,edx
  40a232:	push   edi
  40a234:	add    BYTE PTR [eax],al
  40a236:	sar    ebp,0x18
  40a239:	(bad)  
  40a23a:	icebp  
  40a23b:	xor    esi,edi
  40a23d:	push   ebx
  40a23e:	mov    dh,0x63
  40a240:	lahf   
  40a241:	arpl   WORD PTR [eax+0x53],sp
  40a244:	mov    bh,BYTE PTR [eax+edi*2]
  40a247:	sbb    BYTE PTR fs:[esi+0x52],0x4a
  40a24c:	mov    BYTE PTR [esi-0x51],cl
  40a24f:	jns    0x40a1fd
  40a251:	jge    0x40a28d
  40a253:	push   ebp
  40a254:	nop
  40a255:	addr16 mov bl,0xd
  40a258:	mov    edi,0xd74caa75
  40a25d:	gs add eax,0x9600a77c
  40a263:	fld    QWORD PTR [eax]
  40a265:	add    ch,dh
  40a267:	mov    esi,0xb915b7a4
  40a26c:	mov    ah,0xa2
  40a26e:	loop   0x40a2c8
  40a270:	mov    ds:0xbbbb08a8,al
  40a275:	mov    al,ds:0x848eb7e0
  40a27a:	(bad)  [ecx-0x6cd6474e]
  40a280:	cli    
  40a281:	xchg   esi,eax
  40a282:	jmp    0x40a20c
  40a284:	mov    dl,0x0
  40a286:	inc    edx
  40a287:	ja     0x40a2db
  40a289:	pop    ecx
  40a28a:	add    ch,BYTE PTR [edi+eax*2+0x49]
  40a28e:	popa   
  40a28f:	sbb    al,0x11
  40a291:	push   ecx
  40a292:	push   0xffffff84
  40a294:	push   esi
  40a295:	pop    ecx
  40a296:	jl     0x40a304
  40a298:	dec    ecx
  40a299:	push   edx
  40a29a:	add    BYTE PTR [eax],al
  40a29c:	inc    esi
  40a29d:	fld    QWORD PTR [eax]
  40a29f:	add    bl,dl
  40a2a1:	dec    esi
  40a2a2:	jp     0x40a309
  40a2a4:	idiv   DWORD PTR [edi+eiz*2+0x2d]
  40a2a8:	shl    DWORD PTR [ecx+0x6e],1
  40a2ab:	jae    0x40a292
  40a2ad:	dec    eax
  40a2ae:	ja     0x40a2b0
  40a2b0:	jle    0x40a30c
  40a2b2:	sbb    BYTE PTR [eax-0x2f654056],0x8c
  40a2b9:	mov    WORD PTR [bp-0x4b88],cs
  40a2be:	mov    bl,al
  40a2c0:	sbb    DWORD PTR [edx-0x79],0xffffff8d
  40a2c4:	test   DWORD PTR [edx-0x3fb2717c],esi
  40a2ca:	add    BYTE PTR [eax],al
  40a2cc:	hlt    
  40a2cd:	movaps XMMWORD PTR [edx],xmm4
  40a2d0:	mov    BYTE PTR ds:0x3dd6622e,dl
  40a2d6:	and    al,0x22
  40a2d8:	pop    edi
  40a2d9:	inc    esp
  40a2da:	sub    al,0x29
  40a2dc:	das    
  40a2dd:	retf   
  40a2de:	call   0xe920ff20
  40a2e3:	pop    ds
  40a2e4:	das    
  40a2e5:	sbb    BYTE PTR [edi],0xe1
  40a2e8:	xchg   DWORD PTR [edi+eax*2],ecx
  40a2eb:	loopne 0x40a27b
  40a2ed:	outs   dx,BYTE PTR ds:[esi]
  40a2ee:	pop    ds
  40a2ef:	sti    
  40a2f0:	test   DWORD PTR [ecx+0x25],edx
  40a2f3:	loopne 0x40a283
  40a2f5:	dec    edi
  40a2f6:	adc    eax,0xc7d77e4
  40a2fb:	mov    ebx,0xf10b4f5f
  40a300:	add    BYTE PTR [eax],al
  40a302:	bound  edi,QWORD PTR [edi+0xa]
  40a305:	clc    
  40a306:	push   eax
  40a307:	jg     0x40a33e
  40a309:	rcl    DWORD PTR [ebp-0x3d],cl
  40a30c:	xor    bh,cl
  40a30e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a30f:	pop    ebx
  40a310:	ds int3 
  40a312:	fs jnp 0x40a346
  40a315:	fild   QWORD PTR [edi]
  40a317:	sub    BYTE PTR [ebx-0x67cad0bb],0x60
  40a31e:	iret   
  40a31f:	pop    ds
  40a320:	idiv   edi
  40a322:	sub    BYTE PTR [edi+esi*1+0x3dd005d1],bl
  40a329:	enter  0xe7b5,0x29
  40a32d:	fldln2 
  40a32f:	aad    0x31
  40a331:	(bad)  
  40a332:	out    dx,al
  40a333:	inc    ebp
  40a334:	add    al,BYTE PTR [eax]
  40a336:	das    
  40a337:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a338:	push   ebp
  40a339:	mov    bh,0xb4
  40a33b:	les    esi,FWORD PTR [ebp-0x61]
  40a33e:	das    
  40a33f:	or     al,0xe4
  40a341:	sub    ebp,DWORD PTR [eax]
  40a343:	or     al,0xde
  40a345:	cmp    edx,DWORD PTR ds:0x2f0ade19
  40a34b:	pop    es
  40a34c:	clc    
  40a34d:	adc    al,0x27
  40a34f:	pop    es
  40a350:	add    DWORD PTR [esi],esp
  40a352:	sbb    eax,DWORD PTR [edx-0x21fbde31]
  40a358:	and    edx,ecx
  40a35a:	push   cs
  40a35b:	int3   
  40a35c:	out    0xf0,eax
  40a35e:	mov    al,0x2f
  40a360:	and    eax,0x58b12292
  40a365:	pushf  
  40a366:	add    BYTE PTR [eax],al
  40a368:	adc    ecx,esi
  40a36a:	sbb    dl,BYTE PTR [edi-0x57c544e4]
  40a370:	or     ecx,ebp
  40a372:	pop    ds
  40a373:	test   al,0x11
  40a375:	mov    esp,0xde2f03e7
  40a37a:	outs   dx,DWORD PTR ds:[esi]
  40a37b:	sbb    BYTE PTR [eax+eiz*1-0x4e],0x3
  40a380:	das    
  40a381:	ficom  WORD PTR [edi+0x4a]
  40a384:	mov    ds:0xa3625278,al
  40a389:	outs   dx,BYTE PTR ds:[esi]
  40a38a:	dec    edi
  40a38b:	dec    ecx
  40a38c:	mov    DWORD PTR [ebx],ebp
  40a38e:	inc    ecx
  40a38f:	dec    ecx
  40a390:	xchg   ebp,eax
  40a391:	ficom  WORD PTR [ecx+0x6c384116]
  40a397:	push   cs
  40a398:	cmp    ebp,DWORD PTR [edx]
  40a39a:	pop    esi
  40a39b:	push   cs
  40a39c:	outs   dx,BYTE PTR ds:[esi]
  40a39d:	adc    al,0x57
  40a39f:	or     al,BYTE PTR [ebp+0x2e]
  40a3a2:	(bad)  
  40a3a3:	xor    eax,0x26523916
  40a3a8:	sbb    al,0xde
  40a3aa:	fst    st(7)
  40a3ac:	dec    ecx
  40a3ad:	fisub  WORD PTR [edi+0x1a]
  40a3b0:	lods   eax,DWORD PTR ds:[esi]
  40a3b1:	push   esi
  40a3b2:	adc    dh,BYTE PTR [esi]
  40a3b4:	out    0xdd,eax
  40a3b6:	retf   0x5cb9
  40a3b9:	(bad)  
  40a3ba:	ret    0x2f03
  40a3bd:	fisubr WORD PTR [edx]
  40a3bf:	maskmovq mm5,(bad)
  40a3c0:	imul   DWORD PTR [edi]
  40a3c2:	push   ss
  40a3c3:	pop    ss
  40a3c4:	shl    DWORD PTR [edx+0x35],1
  40a3c7:	adc    dl,ch
  40a3c9:	xor    edx,DWORD PTR [edx]
  40a3cb:	push   ss
  40a3cc:	add    BYTE PTR [eax],al
  40a3ce:	fdivr  DWORD PTR [esi]
  40a3d0:	inc    esp
  40a3d1:	inc    ebx
  40a3d2:	shl    DWORD PTR [esi],1
  40a3d4:	add    DWORD PTR ds:0xefe72e2a,eax
  40a3da:	dec    ecx
  40a3db:	sub    ch,0xce
  40a3de:	adc    DWORD PTR ds:0x6269b8e3,edi
  40a3e4:	mov    esp,0xde4d7c
  40a3e9:	mov    ds:0x61c80e10,eax
  40a3ee:	push   ebx
  40a3ef:	fiadd  WORD PTR [eax]
  40a3f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3f2:	add    BYTE PTR [edi-0x46],bh
  40a3f5:	mov    DWORD PTR [esi],ebx
  40a3f7:	inc    esp
  40a3f8:	out    dx,eax
  40a3f9:	jbe    0x40a43d
  40a3fb:	fiadd  WORD PTR [eax]
  40a3fd:	add    edi,DWORD PTR [edi-0x2b]
  40a400:	psubsw mm5,QWORD PTR [esi+ebx*8]
  40a404:	add    bl,cl
  40a406:	push   edx
  40a407:	std    
  40a408:	es jmp 0xc341823a
  40a40e:	xor    esp,ecx
  40a410:	push   ds
  40a411:	jecxz  0x40a464
  40a413:	ror    DWORD PTR [ecx],1
  40a415:	mov    ah,0x69
  40a417:	in     al,0xff
  40a419:	aad    0x47
  40a41b:	retf   0x607
  40a41e:	das    
  40a41f:	imul   DWORD PTR [ebx]
  40a421:	cmc    
  40a422:	ror    DWORD PTR ds:[edi],cl
  40a425:	out    dx,eax
  40a426:	das    
  40a427:	std    
  40a428:	das    
  40a429:	jmp    0xe528758
  40a42e:	dec    edx
  40a430:	sub    eax,0xe30000fe
  40a435:	add    esp,DWORD PTR [eax]
  40a437:	push   es
  40a438:	call   edi
  40a43a:	sub    al,0xf8
  40a43c:	or     eax,0xd8e528f3
  40a441:	test   al,0x7
  40a443:	loope  0x40a419
  40a445:	clc    
  40a446:	xor    eax,0xece03d6
  40a44b:	fdivrp st(7),st
  40a44d:	out    0x31,al
  40a44f:	add    BYTE PTR [ebp+edx*2-0x1e39a0f4],cl
  40a456:	add    BYTE PTR [eax],al
  40a458:	sbb    eax,0xc4fafdd5
  40a45d:	sti    
  40a45e:	out    dx,eax
  40a45f:	lock int 0xd9
  40a462:	cmc    
  40a463:	loopne 0x40a42b
  40a465:	loope  0x40a467
  40a467:	add    ah,ch
  40a469:	jb     0x40a4c8
  40a46b:	dec    esi
  40a46c:	dec    esp
  40a46d:	jge    0x40a4bc
  40a46f:	pop    ebx
  40a470:	add    ebx,DWORD PTR [ebp+0x58]
  40a473:	push   ecx
  40a474:	dec    ecx
  40a475:	ja     0x40a4b9
  40a477:	pop    ecx
  40a478:	push   ecx
  40a479:	outs   dx,BYTE PTR ds:[esi]
  40a47a:	ja     0x40a4df
  40a47c:	push   ebp
  40a47d:	jp     0x40a4c7
  40a47f:	pop    esp
  40a480:	inc    ecx
  40a481:	and    eax,0x6e260257
  40a486:	push   edi
  40a487:	dec    edx
  40a488:	dec    eax
  40a489:	dec    eax
  40a48a:	jl     0x40a4f4
  40a48c:	pop    ss
  40a48d:	push   ds
  40a48e:	ins    DWORD PTR es:[edi],dx
  40a48f:	ja     0x40a4ba
  40a491:	push   ecx
  40a492:	outs   dx,BYTE PTR ds:[esi]
  40a493:	imul   eax,DWORD PTR [esi-0x1f],0x0
  40a497:	add    BYTE PTR [eax],al
  40a499:	add    ah,bh
  40a49b:	mov    al,0x9c
  40a49d:	sahf   
  40a49e:	fnstcw WORD PTR [ecx-0x1efe5165]
  40a4a4:	add    BYTE PTR [eax],al
  40a4a6:	xchg   edx,eax
  40a4a7:	mov    bl,0x9a
  40a4a9:	cwde   
  40a4aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4ab:	mov    eax,0xdd570099
  40a4b0:	mul    ch
  40a4b2:	addr16 shl esi,cl
  40a4b5:	lock dec eax
  40a4b7:	repz out dx,eax
  40a4b9:	cli    
  40a4ba:	jb     0x40a48d
  40a4bc:	in     eax,dx
  40a4bd:	repnz push 0xffffffd2
  40a4c0:	fmul   st(0),st
  40a4c2:	push   ds
  40a4c3:	into   
  40a4c4:	fcomip st,st(7)
  40a4c6:	sub    cl,bl
  40a4c8:	cld    
  40a4c9:	test   eax,0xfc15002f
  40a4ce:	into   
  40a4cf:	stc    
  40a4d0:	inc    edx
  40a4d1:	aad    0xec
  40a4d3:	shl    BYTE PTR [esp+ebx*8],1
  40a4d6:	repz in eax,dx
  40a4d8:	xor    cl,dl
  40a4da:	loopne 0x40a4a9
  40a4dc:	or     dl,ch
  40a4de:	(bad)  
  40a4e0:	inc    ebx
  40a4e1:	shr    BYTE PTR [edi],cl
  40a4e3:	cmp    ah,bh
  40a4e5:	xor    al,0x8
  40a4e7:	in     eax,0x95
  40a4e9:	call   FWORD PTR [eax-0x32]
  40a4ec:	into   
  40a4ed:	jmp    DWORD PTR [eax+0x72d62915]
  40a4f3:	jne    0x40a528
  40a4f5:	(bad)  
  40a4f6:	jg     0x40a51c
  40a4f8:	adc    edx,ecx
  40a4fa:	xor    BYTE PTR gs:0x5d0000cf,0x82
  40a502:	xor    bh,ah
  40a504:	xchg   DWORD PTR [esi+0x36],ebp
  40a507:	rcr    DWORD PTR [eax-0x7e],0x3b
  40a50b:	fdiv   QWORD PTR [esi+0x6edc325f]
  40a511:	pop    ecx
  40a512:	and    al,0xf5
  40a514:	dec    esp
  40a515:	jo     0x40a546
  40a517:	cmc    
  40a518:	push   ebx
  40a519:	mov    dl,0x4
  40a51b:	add    BYTE PTR [edi],ch
  40a51d:	ja     0x40a561
  40a51f:	shr    BYTE PTR [ebx-0x54],cl
  40a522:	inc    esp
  40a523:	shl    DWORD PTR [eax-0x61],0x70
  40a527:	popf   
  40a528:	push   ebx
  40a529:	out    dx,eax
  40a52a:	xor    esp,ecx
  40a52c:	div    ch
  40a52e:	xor    cl,BYTE PTR [ecx-0x2ebc0d06]
  40a534:	add    esi,edi
  40a536:	sub    BYTE PTR [ecx-0x31bffc17],al
  40a53c:	in     eax,0xe9
  40a53e:	adc    eax,0x54babbf2
  40a543:	mov    cl,0xc0
  40a545:	ficom  WORD PTR ds:0x7481b94a
  40a54b:	jbe    0x40a526
  40a54d:	xor    eax,0x35071208
  40a552:	sbb    esp,DWORD PTR [ecx]
  40a554:	sar    BYTE PTR [eax+0x57],cl
  40a557:	sbb    dl,dl
  40a559:	cmp    eax,0x26d90efe
  40a55e:	adc    eax,DWORD PTR [ebx-0x7f94ac54]
  40a564:	add    BYTE PTR [eax],al
  40a566:	mov    cl,0x60
  40a568:	mov    ebx,0x7c459177
  40a56d:	sub    eax,0x38bc0880
  40a572:	xor    DWORD PTR [edi],0xffffffc3
  40a575:	add    ebp,DWORD PTR [edi]
  40a577:	fsubrp st(3),st
  40a579:	out    dx,al
  40a57a:	and    al,dh
  40a57c:	stc    
  40a57d:	out    0x2b,eax
  40a57f:	xlat   BYTE PTR ds:[ebx]
  40a580:	out    dx,al
  40a581:	mov    ebx,0xf3e7d9ef
  40a586:	sub    ch,dl
  40a588:	repnz neg bl
  40a58b:	(bad)  
  40a58c:	stc    
  40a58d:	idiv   BYTE PTR [ebx+edx*8]
  40a590:	sti    
  40a591:	test   eax,0xeaf1c930
  40a596:	cmp    cl,bh
  40a598:	repnz fmul DWORD PTR ds:0x28e0c2f7
  40a59f:	jmp    0x8afb:0xafcd980a
  40a5a6:	out    0x99,al
  40a5a8:	adc    ebx,edi
  40a5aa:	repnz cmc 
  40a5ac:	jmp    0x1f280188
  40a5b1:	mov    WORD PTR [edi+0x4fc90700],ds
  40a5b7:	repz mov cl,0xb4
  40a5ba:	sub    edx,DWORD PTR [ebp-0x75854358]
  40a5c0:	add    bh,al
  40a5c2:	(bad)  
  40a5c3:	mov    edx,0x9fbc994a
  40a5c8:	inc    edi
  40a5c9:	mov    bh,0x0
  40a5cb:	add    BYTE PTR [esi-0x5e44a82f],bh
  40a5d1:	mov    ss,WORD PTR [ebp-0x43]
  40a5d4:	jmp    0xa334c4a6
  40a5d9:	nop
  40a5da:	pop    edx
  40a5db:	xor    DWORD PTR [edi+0x2ee92ffc],0xffffffa8
  40a5e2:	jnp    0x40a571
  40a5e4:	call   0x2ebd:0x93767286
  40a5eb:	and    dl,BYTE PTR [edx-0x3aae8858]
  40a5f1:	mov    al,0x6a
  40a5f3:	inc    ecx
  40a5f4:	jne    0x40a5b4
  40a5f6:	jno    0x40a63e
  40a5f8:	test   eax,0x186960a2
  40a5fd:	dec    edx
  40a5fe:	sub    BYTE PTR [edx+0xa],0x6e
  40a602:	and    BYTE PTR [ecx+0x13],0x64
  40a606:	xchg   DWORD PTR [esi-0x7e7edcc5],esp
  40a60c:	call   DWORD PTR [ebp-0x62]
  40a60f:	mov    ch,0xee
  40a611:	das    
  40a612:	cmc    
  40a613:	ins    DWORD PTR es:[edi],dx
  40a614:	stos   BYTE PTR es:[edi],al
  40a615:	push   ebx
  40a616:	add    DWORD PTR [ebx-0x51],0xb569260
  40a61d:	xor    eax,0x67e651b8
  40a622:	mov    ebp,0xed67df41
  40a627:	cmp    ebx,eax
  40a629:	jo     0x40a5d4
  40a62b:	outs   dx,DWORD PTR ds:[esi]
  40a62c:	aad    0x6f
  40a62e:	mov    esi,0x78000093
  40a633:	outs   dx,DWORD PTR ds:[esi]
  40a634:	mov    eax,0xab646867
  40a639:	cdq    
  40a63a:	and    DWORD PTR [edi],0xffffffa4
  40a63d:	add    BYTE PTR [edi-0x61],al
  40a640:	fdivr  st(5),st
  40a642:	push   esp
  40a643:	mov    al,ds:0xa695cbcc
  40a648:	add    esp,0xc3d4ea52
  40a64e:	jbe    0x40a6b3
  40a650:	mov    bh,0xb0
  40a652:	push   ds
  40a653:	out    0xda,eax
  40a655:	int3   
  40a656:	sub    BYTE PTR [edx-0x49ea2841],ah
  40a65c:	xchg   ebx,eax
  40a65d:	lds    edi,FWORD PTR [edx]
  40a65f:	retf   
  40a660:	(bad)  
  40a661:	clc    
  40a662:	xor    bl,dl
  40a664:	mul    BYTE PTR [eax-0x13100340]
  40a66a:	sbb    al,0xcf
  40a66c:	repnz in al,0xd2
  40a66f:	int3   
  40a670:	in     eax,dx
  40a671:	lds    eax,FWORD PTR [edx-0x7b04132d]
  40a677:	enter  0xf7df,0xc1
  40a67b:	xchg   ebp,eax
  40a67c:	mov    ch,0xf0
  40a67e:	sahf   
  40a67f:	sub    DWORD PTR [esi],edx
  40a681:	rsqrtps xmm5,XMMWORD PTR [edi+0x60]
  40a685:	bound  esi,QWORD PTR fs:[edx]
  40a688:	add    al,0x10
  40a68a:	jl     0x40a6c5
  40a68c:	adc    eax,0x59722903
  40a691:	or     DWORD PTR [esi],ebp
  40a693:	aaa    
  40a694:	or     BYTE PTR [eax+eax*1],cl
  40a697:	add    BYTE PTR [esi+0x29],bl
  40a69a:	or     BYTE PTR [esp+eax*2+0x38],bl
  40a69e:	add    eax,0x3c1a7018
  40a6a3:	sub    BYTE PTR [esi+0x8],dh
  40a6a6:	cmp    edx,DWORD PTR [ecx]
  40a6a8:	outs   dx,BYTE PTR ds:[esi]
  40a6a9:	pop    es
  40a6aa:	cs daa 
  40a6ac:	jo     0x40a6ba
  40a6ae:	xor    eax,0x330a5123
  40a6b3:	xor    eax,0x3030e33c
  40a6b8:	das    
  40a6b9:	(bad)
  40a6bc:	cdq    
  40a6bd:	adc    dl,ah
  40a6bf:	xor    eax,0x1b77d55
  40a6c4:	push   ds
  40a6c5:	xlat   BYTE PTR ds:[ebx]
  40a6c6:	loop   0x40a6c7
  40a6c8:	add    BYTE PTR [eax-0x37],al
  40a6cb:	sub    BYTE PTR [ebx+0x37],al
  40a6ce:	add    al,BYTE PTR [eax]
  40a6d0:	das    
  40a6d1:	shr    BYTE PTR [edi],cl
  40a6d3:	hlt    
  40a6d4:	in     eax,dx
  40a6d5:	cli    
  40a6d6:	inc    ecx
  40a6d7:	(bad)  
  40a6d8:	cmc    
  40a6d9:	in     al,dx
  40a6da:	cmp    DWORD PTR [eax],eax
  40a6dc:	das    
  40a6dd:	fwait
  40a6de:	push   0x7eb5a681
  40a6e3:	(bad)  
  40a6e4:	stc    
  40a6e5:	test   DWORD PTR [ecx],eax
  40a6e7:	add    BYTE PTR [edi],ch
  40a6e9:	dec    ebx
  40a6ea:	mov    cl,0x48
  40a6ec:	outs   dx,BYTE PTR ds:[esi]
  40a6ed:	jle    0x40a6a6
  40a6ef:	inc    esi
  40a6f0:	pop    edi
  40a6f1:	xor    eax,0x36f13fbe
  40a6f6:	add    al,BYTE PTR [eax]
  40a6f8:	das    
  40a6f9:	lods   al,BYTE PTR ds:[esi]
  40a6fa:	push   0xb8000089
  40a6ff:	add    BYTE PTR [ebx+ebx*4-0x41a353d1],0xdb
  40a707:	pop    eax
  40a708:	push   esi
  40a709:	mov    eax,ds:0xbe5ebea2
  40a70e:	(bad)  
  40a70f:	stos   BYTE PTR es:[edi],al
  40a710:	pusha  
  40a711:	mov    al,0x2f
  40a713:	ja     0x40a754
  40a715:	jmp    0x36a6:0xee1d43aa
  40a71c:	add    al,BYTE PTR [eax]
  40a71e:	das    
  40a71f:	jns    0x40a763
  40a721:	shr    BYTE PTR [edx-0x5f],0x4e
  40a725:	in     eax,0x88
  40a727:	fwait
  40a728:	sbb    bh,BYTE PTR [eax+edx*4+0x61b8599c]
  40a72f:	dec    ecx
  40a730:	jnp    0x40a6c0
  40a732:	das    
  40a733:	(bad)  
  40a735:	xchg   esi,eax
  40a736:	xchg   esp,eax
  40a737:	enter  0xacb4,0x6e
  40a73b:	xchg   DWORD PTR [esi-0x821d0fd],ebp
  40a741:	repnz xor esp,edx
  40a744:	or     ch,dl
  40a746:	and    esi,esi
  40a748:	adc    ah,dl
  40a74a:	push   ecx
  40a74b:	out    0xea,eax
  40a74d:	enter  0x36,0xef
  40a751:	(bad)  
  40a752:	lock daa 
  40a754:	sbb    DWORD PTR [edx],edx
  40a756:	jmp    0x40a799
  40a758:	sub    BYTE PTR [ecx*8-0x9c0ccee],dh
  40a75f:	fisubr WORD PTR [edi]
  40a761:	sub    eax,DWORD PTR [eax]
  40a763:	add    dl,bh
  40a765:	push   es
  40a766:	adc    DWORD PTR ds:0x15fa29f4,ecx
  40a76c:	mov    edi,0xd31a00de
  40a771:	sub    DWORD PTR [eax],edx
  40a773:	cmp    al,0xbe
  40a775:	pop    es
  40a776:	les    esi,FWORD PTR [eax]
  40a778:	mov    ds:0x7c08a709,al
  40a77d:	or     ebp,DWORD PTR [edi-0x4bf792d9]
  40a783:	add    ebp,DWORD PTR [edi]
  40a785:	fidivr WORD PTR [eax]
  40a787:	cwde   
  40a788:	sbb    DWORD PTR [esi+eax*1+0x64de50d3],esi
  40a78f:	jae    0x40a72d
  40a791:	push   eax
  40a792:	pop    edx
  40a793:	sub    DWORD PTR [ebx+0x19],esp
  40a796:	call   0x271ed69e
  40a79b:	stos   BYTE PTR es:[edi],al
  40a79c:	pop    es
  40a79d:	mov    cl,bl
  40a79f:	retf   0xe511
  40a7a2:	out    0x3,eax
  40a7a4:	das    
  40a7a5:	fiadd  WORD PTR [ecx]
  40a7a7:	mov    bh,0xfb
  40a7a9:	lea    edx,[edi]
  40a7ab:	mov    eax,0x1b009fdc
  40a7b0:	jns    0x40a741
  40a7b2:	pop    ebp
  40a7b3:	adc    BYTE PTR [ebx],ch
  40a7b5:	fiadd  WORD PTR [eax]
  40a7b7:	jle    0x40a74c
  40a7b9:	jge    0x40a75d
  40a7bb:	call   0x3328:0x3b016d8f
  40a7c2:	in     al,dx
  40a7c3:	jmp    0x7b4185f4
  40a7c8:	add    BYTE PTR [eax],al
  40a7ca:	xchg   ecx,eax
  40a7cb:	dec    ecx
  40a7cc:	xchg   DWORD PTR [ecx-0x6a],ebx
  40a7cf:	pop    ebx
  40a7d0:	fiadd  DWORD PTR [ebx+esi*4+0x2ce99e52]
  40a7d7:	fiadd  WORD PTR [eax]
  40a7d9:	outs   dx,DWORD PTR ds:[esi]
  40a7da:	test   DWORD PTR [ebp-0x4d],esi
  40a7dd:	inc    ebp
  40a7de:	jp     0x40a84f
  40a7e0:	out    dx,al
  40a7e1:	push   0x4ca87d7b
  40a7e6:	dec    esp
  40a7e7:	fiadd  WORD PTR [eax]
  40a7e9:	cmp    eax,0x41bb7e72
  40a7ee:	jno    0x40a861
  40a7f0:	add    DWORD PTR [eax+0x3a],ecx
  40a7f3:	push   eax
  40a7f4:	cdq    
  40a7f5:	imul   eax,DWORD PTR [edx+0x50],0xffffff81
  40a7f9:	mov    ecx,0x779c4cf4
  40a7fe:	pop    ss
  40a7ff:	dec    esp
  40a800:	xchg   ebp,eax
  40a801:	imul   esi,DWORD PTR [ebx],0xffffffde
  40a804:	add    BYTE PTR [edx],al
  40a806:	nop
  40a807:	cdq    
  40a808:	sub    al,0xf0
  40a80a:	das    
  40a80b:	fld    DWORD PTR [ecx]
  40a80d:	jmp    0xdc7a:0xf444d27a
  40a814:	push   cs
  40a815:	(bad)  
  40a816:	sub    al,0xde
  40a818:	add    bl,al
  40a81a:	aas    
  40a81b:	push   0xffffffdc
  40a81d:	mov    eax,ds:0x9bf32a3d
  40a822:	xor    ch,BYTE PTR [ecx]
  40a824:	mov    ah,0x9d
  40a826:	and    ch,BYTE PTR [ebx]
  40a828:	inc    BYTE PTR [eax]
  40a82a:	mov    eax,0x8a8c99
  40a82f:	add    BYTE PTR [esi-0x26],dl
  40a832:	add    BYTE PTR [eax],al
  40a834:	jne    0x40a873
  40a836:	(bad)  
  40a837:	jmp    FWORD PTR [ecx-0x2c427628]
  40a83d:	fiadd  DWORD PTR [eax]
  40a83f:	add    BYTE PTR [edx+0x6bf8f2ca],al
  40a845:	fxam   
  40a847:	jmp    0x40a84f
  40a849:	loop   0x40a84b
  40a84b:	add    ah,ah
  40a84d:	adc    BYTE PTR [eax],dh
  40a84f:	xor    eax,0x11764029
  40a854:	sti    
  40a855:	sbb    BYTE PTR [esp+edi*1],dh
  40a858:	clc    
  40a859:	adc    DWORD PTR [eax],edi
  40a85b:	add    BYTE PTR [esi+0x73bfb897],ch
  40a861:	xor    dl,0x9b
  40a864:	or     DWORD PTR [edi-0x679d4944],0xc11fecb0
  40a86e:	lods   eax,DWORD PTR ds:[esi]
  40a86f:	scas   eax,DWORD PTR es:[edi]
  40a870:	jne    0x40a804
  40a872:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a873:	mov    edx,0xc7ecfe
  40a878:	int    0x28
  40a87a:	movhps QWORD PTR [eax-0x6aecf5d0],xmm4
  40a881:	sub    BYTE PTR ds:0xe18644,dl
  40a887:	add    BYTE PTR [ebx+ecx*1],dh
  40a88a:	sub    ch,BYTE PTR [ecx]
  40a88c:	push   eax
  40a88d:	cmp    al,0x9
  40a88f:	or     DWORD PTR [ebx+esi*1+0x51c],ecx
  40a896:	popa   
  40a897:	xor    eax,0x25850115
  40a89c:	add    al,0x49
  40a89e:	sbb    BYTE PTR [eax],ch
  40a8a0:	add    BYTE PTR [esi],cl
  40a8a2:	push   ebx
  40a8a3:	and    al,BYTE PTR ds:0xa5fc2f05
  40a8a9:	inc    ebx
  40a8aa:	out    dx,eax
  40a8ab:	cmp    eax,0xa648ffb3
  40a8b0:	adc    eax,0x268255ef
  40a8b5:	retf   0x4e65
  40a8b8:	das    
  40a8b9:	(bad)  [ecx+0x53]
  40a8bc:	sub    eax,0x3cf6edd6
  40a8c1:	lds    edi,FWORD PTR [edi-0x1b23d54f]
  40a8c7:	out    0x33,eax
  40a8c9:	ret    0xf6e0
  40a8cc:	push   0xffffff85
  40a8ce:	lods   al,BYTE PTR ds:[esi]
  40a8cf:	nop
  40a8d0:	inc    edi
  40a8d1:	mov    bh,0xc5
  40a8d3:	xchg   ecx,eax
  40a8d4:	push   es
  40a8d5:	in     al,dx
  40a8d6:	or     dl,BYTE PTR [ebp+0x5ef9e104]
  40a8dc:	dec    esp
  40a8dd:	mov    dl,0xd2
  40a8df:	(bad)  
  40a8e0:	jg     0x40a8e2
  40a8e2:	das    
  40a8e3:	adc    eax,0x190f3cc4
  40a8e8:	(bad)  [edi]
  40a8ea:	adc    esp,DWORD PTR [ebp-0x25]
  40a8ed:	sub    dl,BYTE PTR [eax+eiz*1-0x6b]
  40a8f1:	xor    eax,0x3a910ef8
  40a8f6:	cld    
  40a8f7:	sbb    eax,0x73cd
  40a8fc:	add    bl,BYTE PTR [edx]
  40a8fe:	enter  0x652f,0xc7
  40a902:	aas    
  40a903:	xor    eax,0x2305a
  40a908:	das    
  40a909:	stos   BYTE PTR es:[edi],al
  40a90a:	jmp    0x40a890
  40a90c:	stos   BYTE PTR es:[edi],al
  40a90d:	add    al,BYTE PTR ss:[eax]
  40a910:	das    
  40a911:	inc    esp
  40a912:	stc    
  40a913:	idiv   BYTE PTR [edi+0x18]
  40a916:	jmp    0x76f3:0x16663bc
  40a91d:	addr16 clc 
  40a91f:	dec    BYTE PTR [ebp+ebx*8+0x3162e44d]
  40a926:	call   0x70ed:0x833ab8b3
  40a92d:	xor    DWORD PTR [esi-0x179f4c0e],ecx
  40a933:	add    ebp,DWORD PTR [edi]
  40a935:	fimul  WORD PTR [edi-0x77]
  40a938:	mov    cl,0x41
  40a93a:	bound  eax,QWORD PTR [edi+edx*4-0x4060c8e2]
  40a941:	pop    ecx
  40a942:	inc    ebp
  40a943:	retf   0x4be0
  40a946:	push   esi
  40a947:	hlt    
  40a948:	sbb    BYTE PTR [esi+ebp*2],ah
  40a94b:	xchg   ecx,eax
  40a94c:	or     dh,BYTE PTR [esi]
  40a94e:	cmp    eax,0x523b15e4
  40a953:	mov    DWORD PTR [eax],eax
  40a955:	and    al,0x46
  40a957:	pushf  
  40a958:	js     0x40a9b4
  40a95a:	outs   dx,BYTE PTR ds:[esi]
  40a95b:	mov    dl,BYTE PTR [ebx+0x43e59]
  40a961:	add    BYTE PTR [edi],ch
  40a963:	fsubrp st(6),st
  40a965:	push   esp
  40a966:	test   DWORD PTR [esp+eiz*4+0x71de164c],ebx
  40a96d:	sar    DWORD PTR [eax-0x1b13a6ed],1
  40a973:	add    al,0x1a
  40a975:	enter  0x1cf0,0x71
  40a979:	xchg   esi,eax
  40a97a:	pushf  
  40a97b:	aas    
  40a97c:	dec    ebp
  40a97d:	call   edx
  40a97f:	adc    eax,0x1ce88e11
  40a984:	mov    edi,0x6b447fd6
  40a989:	mov    bh,BYTE PTR [esi+0x78]
  40a98c:	xchg   edx,eax
  40a98d:	lock arpl WORD PTR [edi],cx
  40a990:	mov    al,ds:0xbe22c7d1
  40a995:	in     eax,0x7c
  40a997:	je     0x40a9fa
  40a999:	fwait
  40a99a:	mov    esp,0x2ce9011f
  40a99f:	fiadd  WORD PTR [eax]
  40a9a1:	cli    
  40a9a2:	out    dx,eax
  40a9a3:	loop   0x40a9e2
  40a9a5:	(bad)  
  40a9a6:	and    ah,bh
  40a9a8:	and    al,dl
  40a9aa:	sub    al,0xde
  40a9ac:	add    BYTE PTR [edx],bh
  40a9ae:	dec    BYTE PTR [ecx+edx*1+0xde2ce9]
  40a9b5:	(bad)  
  40a9b6:	adc    bh,dh
  40a9b8:	add    BYTE PTR [edx-0x4bc50c30],bh
  40a9be:	idiv   BYTE PTR [esi-0x7d674dd7]
  40a9c4:	cmp    al,dl
  40a9c6:	add    BYTE PTR [eax],al
  40a9c8:	pop    eax
  40a9c9:	fiadd  WORD PTR [eax]
  40a9cb:	sub    BYTE PTR [edi+eax*1+0x1bf07ac3],bh
  40a9d2:	xchg   ecx,eax
  40a9d3:	jmp    0x94418804
  40a9d8:	jecxz  0x40aa3a
  40a9da:	mov    bl,0xe9
  40a9dc:	sub    al,0xde
  40a9de:	add    BYTE PTR [ecx],al
  40a9e0:	(bad)  
  40a9e1:	(bad)  
  40a9e2:	push   ss
  40a9e3:	aam    0x4b
  40a9e5:	xchg   DWORD PTR [esi],edi
  40a9e7:	shr    DWORD PTR [esi+ebx*8],1
  40a9ea:	add    BYTE PTR [esi-0xde84a53],cl
  40a9f0:	(bad)  
  40a9f1:	fiadd  WORD PTR [eax]
  40a9f3:	shr    DWORD PTR [esi-0xc],0x5d
  40a9f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9f8:	xor    dh,bl
  40a9fa:	add    BYTE PTR ds:0x3a67c93,bh
  40aa00:	cs and edi,esi
  40aa03:	mov    ds:0x7eccfe22,al
  40aa09:	adc    eax,edx
  40aa0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa0c:	push   0x2a
  40aa0e:	xor    DWORD PTR [ebx-0x46],0xa66f8d32
  40aa15:	mov    DWORD PTR cs:[eax],eax
  40aa18:	adc    al,0x51
  40aa1a:	out    0x0,al
  40aa1c:	xor    DWORD PTR [eax-0x27bffd0],esp
  40aa22:	adc    BYTE PTR [ecx],bl
  40aa24:	push   eax
  40aa25:	fiadd  WORD PTR [eax]
  40aa27:	add    BYTE PTR [ecx-0x10],bh
  40aa2a:	and    dh,BYTE PTR [esi]
  40aa2c:	add    BYTE PTR [eax],al
  40aa2e:	dec    edi
  40aa2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa30:	add    BYTE PTR [eax],al
  40aa32:	sbb    edx,DWORD PTR [edi-0x7dfbfcbe]
  40aa38:	dec    esi
  40aa39:	inc    edi
  40aa3a:	fiadd  WORD PTR ds:[eax]
  40aa3d:	add    BYTE PTR [ecx+ebp*4],dh
  40aa40:	jne    0x40aaa9
  40aa42:	ds mov edx,0xb2fa160b
  40aa48:	das    
  40aa49:	outs   dx,BYTE PTR ds:[esi]
  40aa4a:	fld    DWORD PTR [eax-0x25d2a9b4]
  40aa50:	push   es
  40aa51:	jno    0x40aa59
  40aa53:	fiadd  WORD PTR [eax]
  40aa55:	add    dh,dl
  40aa57:	(bad)  
  40aa58:	pop    edx
  40aa59:	inc    ebx
  40aa5a:	in     al,0x82
  40aa5c:	inc    ecx
  40aa5d:	adc    cl,BYTE PTR [edx]
  40aa5f:	mov    BYTE PTR ds:0x8ac053,0x0
  40aa66:	pop    eax
  40aa67:	push   ds
  40aa68:	jle    0x40aa20
  40aa6a:	test   dl,bl
  40aa6c:	add    BYTE PTR [eax],al
  40aa6e:	in     al,dx
  40aa6f:	test   DWORD PTR [ecx+0x7e],esp
  40aa72:	mov    dl,0xdd
  40aa74:	add    BYTE PTR [eax],al
  40aa76:	test   DWORD PTR [edi-0x2685b7b5],ecx
  40aa7c:	adc    dl,BYTE PTR [ebx]
  40aa7e:	iret   
  40aa7f:	rcl    BYTE PTR [edx+edx*2-0x6e],0xb4
  40aa84:	push   eax
  40aa85:	push   esi
  40aa86:	into   
  40aa87:	ret    0x1e10
  40aa8a:	sub    ch,bl
  40aa8c:	dec    eax
  40aa8d:	dec    esi
  40aa8e:	inc    esi
  40aa8f:	retf   
  40aa90:	sbb    BYTE PTR [esi],dl
  40aa92:	add    BYTE PTR [eax],al
  40aa94:	das    
  40aa95:	and    DWORD PTR [edx],ecx
  40aa97:	inc    esp
  40aa98:	loopne 0x40aa35
  40aa9a:	xor    al,0x24
  40aa9c:	cmc    
  40aa9d:	pushf  
  40aa9e:	jae    0x40ab12
  40aaa0:	pop    es
  40aaa1:	jmp    0xef392908
  40aaa6:	jl     0x40aae7
  40aaa8:	das    
  40aaa9:	lds    edx,FWORD PTR [esp+ebp*2+0x5]
  40aaad:	cdq    
  40aaae:	add    al,0x0
  40aab0:	das    
  40aab1:	(bad)  
  40aab2:	push   0x32d0cd67
  40aab7:	cmp    BYTE PTR [esi],al
  40aab9:	fnstsw WORD PTR [ebp+0x78]
  40aabc:	rol    bh,1
  40aabe:	jns    0x40ab31
  40aac0:	lds    esp,FWORD PTR [ebx]
  40aac2:	jnp    0x40ab24
  40aac4:	ret    0x761f
  40aac7:	sub    DWORD PTR [ebx+0x19],ebx
  40aaca:	dec    ebx
  40aacb:	jle    0x40aa6e
  40aacd:	adc    ch,BYTE PTR [ebx+0x61]
  40aad0:	xchg   ebp,eax
  40aad1:	pop    ds
  40aad2:	push   ebp
  40aad3:	push   edx
  40aad4:	imul   ebp,DWORD PTR [ebx+0x5d],0x5c742659
  40aadb:	pop    ebp
  40aadc:	sbb    al,BYTE PTR [ebx+0x54]
  40aadf:	pop    ebx
  40aae0:	push   esp
  40aae1:	jle    0x40ab04
  40aae3:	or     DWORD PTR [ecx+0x7d],ebp
  40aae6:	dec    ebx
  40aae7:	inc    esi
  40aae8:	js     0x40ab62
  40aaea:	arpl   WORD PTR [edi+0x38],cx
  40aaed:	xor    BYTE PTR [edx],al
  40aaef:	add    BYTE PTR [edi],ch
  40aaf1:	aaa    
  40aaf2:	mov    ebp,0xbdbd2f40
  40aaf7:	inc    eax
  40aaf8:	add    BYTE PTR [eax],al
  40aafa:	das    
  40aafb:	or     bl,BYTE PTR [edi]
  40aafd:	inc    edx
  40aafe:	das    
  40aaff:	mov    eax,ds:0xe62f3f96
  40ab04:	enter  0x2f40,0x47
  40ab08:	add    dh,BYTE PTR [edx+0x2f]
  40ab0b:	mov    al,ds:0xde2f6801
  40ab10:	push   eax
  40ab11:	add    al,0xd
  40ab13:	ficom  WORD PTR [eax+0x4]
  40ab16:	sbb    ebx,esi
  40ab18:	sub    eax,DWORD PTR [ebx+eiz*8]
  40ab1b:	frstor [ebx]
  40ab1d:	add    al,0x2f
  40ab1f:	ficom  WORD PTR [eax+0x5d]
  40ab22:	in     eax,dx
  40ab23:	fstp   st(2)
  40ab25:	xchg   esp,eax
  40ab26:	xor    dh,bl
  40ab28:	fstp   st(0)
  40ab2a:	out    dx,eax
  40ab2b:	fnstsw WORD PTR [edx-0x63]
  40ab2e:	and    dh,bl
  40ab30:	loope  0x40ab35
  40ab32:	sti    
  40ab33:	fucom  st(7)
  40ab35:	add    ebp,DWORD PTR [edi]
  40ab37:	ficomp WORD PTR [esi]
  40ab39:	call   0xea49892d
  40ab3e:	out    dx,eax
  40ab3f:	fld    QWORD PTR [edx+ebp*8-0x147f2211]
  40ab46:	out    dx,eax
  40ab47:	fucom  st(5)
  40ab49:	out    dx,eax
  40ab4a:	outs   dx,DWORD PTR ds:[esi]
  40ab4b:	ficomp WORD PTR [eax]
  40ab4d:	lock outs dx,DWORD PTR ds:[esi]
  40ab4f:	fisubr WORD PTR [esi-0x312174fd]
  40ab55:	add    ecx,DWORD PTR [ebp-0x64fc3722]
  40ab5b:	fisubr WORD PTR [ebx+0x2f000003]
  40ab61:	fidiv  WORD PTR [ebx-0x352177fd]
  40ab67:	add    ecx,DWORD PTR [esi-0x74fc3c22]
  40ab6d:	fsubrp st(7),st
  40ab6f:	add    ebp,DWORD PTR [edi]
  40ab71:	(bad)  
  40ab73:	add    ebp,DWORD PTR [edi]
  40ab75:	faddp  st(3),st
  40ab77:	pop    esi
  40ab78:	jg     0x40ab06
  40ab7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab7b:	pop    ebx
  40ab7c:	data16 jg 0x40ab39
  40ab7f:	dec    eax
  40ab80:	pop    ebp
  40ab81:	mov    BYTE PTR [ecx+edx*2+0x52ae9658],ch
  40ab88:	pop    ebx
  40ab89:	jg     0x40ab8b
  40ab8b:	int    0x2c
  40ab8d:	fiadd  WORD PTR [eax]
  40ab8f:	adc    BYTE PTR [edx],0xb4
  40ab92:	arpl   WORD PTR [edx+0x17],cx
  40ab95:	fiadd  WORD PTR [eax]
  40ab97:	adc    al,0x4e
  40ab99:	pushf  
  40ab9a:	add    BYTE PTR [eax],bh
  40ab9c:	dec    esi
  40ab9d:	pushf  
  40ab9e:	add    BYTE PTR ds:0x3009c4e,bh
  40aba4:	sbb    BYTE PTR [eax+eax*1+0x9c4f26],bl
  40abab:	ins    DWORD PTR es:[edi],dx
  40abac:	dec    eax
  40abad:	pushf  
  40abae:	add    BYTE PTR [ecx-0x49],ah
  40abb1:	sahf   
  40abb2:	add    bh,ch
  40abb4:	setl   BYTE PTR [eax]
  40abb7:	(bad)  
  40abb8:	setl   BYTE PTR [eax]
  40abbb:	sub    ch,ch
  40abbd:	call   0x3048:0x96e92444
  40abc4:	add    BYTE PTR [eax],al
  40abc6:	in     eax,0x92
  40abc8:	dec    esp
  40abc9:	sub    al,0xe1
  40abcb:	mov    ss,WORD PTR [eax+0x18]
  40abce:	jge    0x40ab5b
  40abd0:	push   esp
  40abd1:	adc    al,0x79
  40abd3:	xchg   DWORD PTR [eax-0x40],ebx
  40abd6:	jbe    0x40ab95
  40abd8:	(bad)  
  40abd9:	retf   0xb988
  40abdc:	data16 into 
  40abde:	xchg   esp,eax
  40abdf:	mov    ch,0x6a
  40abe1:	ret    0xb190
  40abe4:	outs   dx,BYTE PTR ds:[esi]
  40abe5:	(bad)  
  40abe6:	jl     0x40ab95
  40abe8:	jb     0x40aba4
  40abea:	js     0x40ab95
  40abec:	jbe    0x40abac
  40abee:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40abf0:	jp     0x40abeb
  40abf2:	sbb    ebp,esp
  40abf4:	xor    ebp,ebx
  40abf6:	pop    ss
  40abf7:	call   0xf3548d31
  40abfc:	sub    eax,0xde2ce9
  40ac01:	jmp    0x418a32
  40ac06:	mov    dl,0xf6
  40ac08:	and    al,0x24
  40ac0a:	xor    ebp,DWORD PTR [ebp-0x56d48b8f]
  40ac10:	jne    0x40ac8a
  40ac12:	pop    ds
  40ac13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac14:	jns    0x40ac3a
  40ac16:	sub    dh,dh
  40ac18:	and    al,0x24
  40ac1a:	sub    dh,dh
  40ac1c:	ds aas 
  40ac1e:	push   esi
  40ac1f:	fwait
  40ac20:	inc    edx
  40ac21:	inc    ebx
  40ac22:	dec    edx
  40ac23:	xchg   edi,eax
  40ac24:	inc    esi
  40ac25:	inc    edi
  40ac26:	ds xchg ebx,eax
  40ac28:	dec    edx
  40ac29:	dec    ebx
  40ac2a:	add    BYTE PTR [eax],al
  40ac2c:	inc    edx
  40ac2d:	(bad)  
  40ac2e:	dec    esi
  40ac2f:	dec    edi
  40ac30:	inc    esi
  40ac31:	mov    edx,DWORD PTR [edx+0x53]
  40ac34:	cmp    al,BYTE PTR [edi-0x995a8aa]
  40ac3a:	and    al,0x24
  40ac3c:	push   0xfffffff6
  40ac3e:	pop    eax
  40ac3f:	pop    ecx
  40ac40:	cld    
  40ac41:	test   BYTE PTR [ebp+ebx*2+0x10],bl
  40ac45:	and    DWORD PTR [eax+0x61],0x6564bd24
  40ac4c:	sub    BYTE PTR [ecx-0x78d39698],bh
  40ac52:	ins    BYTE PTR es:[edi],dx
  40ac53:	ins    DWORD PTR es:[edi],dx
  40ac54:	and    BYTE PTR [ebx-0x1df98e90],cl
  40ac5a:	add    BYTE PTR [eax],al
  40ac5c:	and    esp,edx
  40ac5e:	jbe    0x40ac60
  40ac60:	push   ss
  40ac61:	loop   0x40ac63
  40ac63:	add    cl,cl
  40ac65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac66:	push   esp
  40ac67:	and    BYTE PTR [esi],al
  40ac69:	loop   0x40ac6b
  40ac6b:	add    BYTE PTR [esi+0x365451aa],dl
  40ac71:	loop   0x40ac73
  40ac73:	add    cl,ch
  40ac75:	test   DWORD PTR [edi+0x70],esp
  40ac78:	ret    0x7194
  40ac7b:	cs stos BYTE PTR es:[edi],al
  40ac7d:	lea    ebp,[eax+eax*1+0x2f]
  40ac81:	dec    esp
  40ac82:	imul   di,WORD PTR [edi],0x769b
  40ac87:	jae    0x40ace5
  40ac89:	fwait
  40ac8a:	bound  esi,QWORD PTR [edx+0x3b]
  40ac8d:	xchg   edx,eax
  40ac8e:	jno    0x40ac90
  40ac90:	add    BYTE PTR [eax],al
  40ac92:	das    
  40ac93:	dec    esp
  40ac94:	imul   bx,WORD PTR [edi],0x769b
  40ac99:	jae    0x40ac97
  40ac9b:	scas   al,BYTE PTR es:[edi]
  40ac9c:	jne    0x40ad12
  40ac9e:	or     ebp,DWORD PTR [ebx+esi*2+0x68cc2f6e]
  40aca5:	imul   edi,edi,0xe6572c7
  40acab:	(bad)  [ebp+0x42]
  40acae:	push   es
  40acaf:	shr    DWORD PTR [ebp+0x61],cl
  40acb2:	(bad)  
  40acb4:	jb     0x40ad25
  40acb6:	sar    BYTE PTR [esi-0x2dfcb6be],cl
  40acbc:	inc    ecx
  40acbd:	push   eax
  40acbe:	das    
  40acbf:	les    ebp,FWORD PTR [eax+0x69]
  40acc2:	mov    edi,0xbf7369ca
  40acc7:	sbb    esi,DWORD PTR [ecx+0x65]
  40acca:	out    0xf1,al
  40accc:	popa   
  40accd:	addr16 retf 0x206
  40acd1:	add    BYTE PTR [edi],ch
  40acd3:	int3   
  40acd4:	push   0x65c49f69
  40acd9:	je     0x40ad41
  40acdb:	xor    ah,BYTE PTR [ebx+0x67]
  40acde:	mov    al,BYTE PTR [edx+0x6c]
  40ace1:	arpl   WORD PTR [eax+0x7c72672b],bx
  40ace7:	pop    eax
  40ace8:	imul   edi,DWORD PTR [edx-0x6e],0x7
  40acec:	add    al,BYTE PTR [eax]
  40acee:	das    
  40acef:	inc    esp
  40acf0:	imul   bx,WORD PTR [edi+0x4c],0x7467
  40acf6:	add    BYTE PTR [eax],al
  40acf8:	jbe    0x40ad54
  40acfa:	arpl   WORD PTR [edi+0x52],sp
  40acfd:	fisubr WORD PTR [ebp+ebp*2+0x66838d4c]
  40ad04:	cmp    eax,0x2f03e791
  40ad09:	fisub  WORD PTR [esi-0x6571b999]
  40ad0f:	bound  edi,QWORD PTR [ecx]
  40ad11:	xor    DWORD PTR [eax-0x737af192],0x57
  40ad18:	adc    BYTE PTR [ecx+0x7f127173],dh
  40ad1e:	push   esp
  40ad1f:	add    al,0x2f
  40ad21:	ficom  WORD PTR [eax+eiz*8-0x1de051b]
  40ad28:	push   ebx
  40ad29:	mov    ds:0x50dbd96b,eax
  40ad2e:	sbb    DWORD PTR [ecx],eax
  40ad30:	mov    BYTE PTR [eax],cl
  40ad32:	sbb    eax,DWORD PTR [esi+eiz*8]
  40ad35:	fnstsw WORD PTR [edx]
  40ad37:	add    al,0xf3
  40ad39:	fld    QWORD PTR [eax+0x4]
  40ad3c:	(bad)  
  40ad3e:	sbb    eax,DWORD PTR [ecx+edi*8]
  40ad41:	fst    QWORD PTR [eax]
  40ad43:	add    al,0xd2
  40ad45:	fstp   QWORD PTR [esi]
  40ad47:	add    al,0xfc
  40ad49:	fstp   st(1)
  40ad4b:	add    ebp,DWORD PTR [edi]
  40ad4d:	fidiv  WORD PTR [esp+eax*1]
  40ad50:	jmp    0x40ad2f
  40ad52:	xor    BYTE PTR [esp+ebp*2],al
  40ad55:	fiadd  WORD PTR [ebx]
  40ad57:	add    al,0x96
  40ad59:	fiadd  WORD PTR [esp+eax*1]
  40ad5c:	add    BYTE PTR [eax],al
  40ad5e:	mov    esi,ebx
  40ad60:	fild   DWORD PTR [ebx]
  40ad62:	das    
  40ad63:	fisubr WORD PTR [edx-0x352169fd]
  40ad69:	add    ecx,DWORD PTR [edx-0x77fc2622]
  40ad6f:	ficomp WORD PTR [ebx+eax*1+0x396de66]
  40ad76:	pop    ecx
  40ad77:	fiadd  WORD PTR [eax]
  40ad79:	int    0x2c
  40ad7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad7c:	add    BYTE PTR [ebx-0x6bff82d4],bh
  40ad82:	sub    al,0x81
  40ad84:	add    cl,ch
  40ad86:	sub    al,0xde
  40ad88:	add    BYTE PTR [edx+0x7f008b2c],ch
  40ad8e:	sub    al,0x8f
  40ad90:	add    BYTE PTR [esi-0x7bff75d4],dl
  40ad96:	sub    al,0xb3
  40ad98:	add    BYTE PTR [eax-0x7aff73d4],al
  40ad9e:	sub    al,0x8b
  40ada0:	add    BYTE PTR [esi+0x2b],bl
  40ada3:	lahf   
  40ada4:	add    BYTE PTR [ebp+0x33],cl
  40ada7:	jge    0x40ada9
  40ada9:	pop    edx
  40adaa:	sub    ecx,DWORD PTR [edi-0x21d31700]
  40adb0:	add    BYTE PTR [edx],cl
  40adb2:	sub    ecx,edi
  40adb4:	add    bl,bh
  40adb6:	sub    al,0xd3
  40adb8:	add    bh,bh
  40adba:	sub    al,0xd6
  40adbc:	add    cl,ch
  40adbe:	sub    al,0xde
  40adc0:	add    BYTE PTR [edx],bh
  40adc2:	add    BYTE PTR [eax],al
  40adc4:	sub    edx,DWORD PTR [ebp-0x50cce600]
  40adca:	add    BYTE PTR [ecx],al
  40adcc:	sub    edi,DWORD PTR [ebp+0x0]
  40adcf:	add    eax,0xfe008b33
  40add4:	sub    al,0xde
  40add6:	add    BYTE PTR [edi],ah
  40add8:	jp     0x40ad90
  40adda:	dec    ebx
  40addb:	sub    al,0x2b
  40addd:	fiadd  WORD PTR [eax]
  40addf:	dec    eax
  40ade0:	sub    al,0x40
  40ade2:	add    DWORD PTR [edx-0x3aff21d4],ecx
  40ade8:	sub    al,0x85
  40adea:	add    dl,bl
  40adec:	sub    al,0x8e
  40adee:	add    BYTE PTR [ebp+0x7d2c],bh
  40adf4:	out    dx,eax
  40adf5:	fimul  WORD PTR [esi+0x0]
  40adf8:	neg    esi
  40adfa:	imul   eax,DWORD PTR [eax],0xfffffff3
  40adfd:	fiadd  WORD PTR [eax]
  40adff:	add    BYTE PTR [ebx-0x46],dl
  40ae02:	inc    edx
  40ae03:	add    dl,dl
  40ae05:	mov    eax,0xbc2c0042
  40ae0a:	inc    edx
  40ae0b:	add    bh,bh
  40ae0d:	mov    eax,0xbbd80042
  40ae12:	inc    edx
  40ae13:	add    ch,ch
  40ae15:	mov    ebx,0xbc260042
  40ae1a:	inc    edx
  40ae1b:	add    BYTE PTR [edi-0x14ffbef8],bl
  40ae21:	or     eax,DWORD PTR [ecx+0x0]
  40ae24:	push   0x8
  40ae26:	inc    ecx
  40ae27:	add    BYTE PTR [eax],al
  40ae29:	add    bh,bl
  40ae2b:	mov    dh,0x42
  40ae2d:	add    bh,al
  40ae2f:	mov    ecx,0xb74f0042
  40ae34:	inc    edx
  40ae35:	add    ch,dh
  40ae37:	jbe    0x40ae77
  40ae39:	add    BYTE PTR [ebx-0xd],ah
  40ae3c:	inc    edx
  40ae3d:	add    BYTE PTR [esi-0x61ffbe72],bl
  40ae43:	mov    es,WORD PTR [ecx+0x0]
  40ae46:	std    
  40ae47:	mov    eax,DWORD PTR [edx+0x0]
  40ae4a:	pop    ebp
  40ae4b:	mov    DWORD PTR [edx+0x0],eax
  40ae4e:	xor    cl,BYTE PTR [ecx-0x7722ffbe]
  40ae54:	inc    edx
  40ae55:	add    BYTE PTR [edx+eax*4],dh
  40ae58:	inc    edx
  40ae59:	add    BYTE PTR [edx],bh
  40ae5b:	test   DWORD PTR [eax],eax
  40ae5d:	add    BYTE PTR [esi],ch
  40ae5f:	int3   
  40ae60:	add    BYTE PTR [eax],al
  40ae62:	cs leave 
  40ae64:	add    BYTE PTR [eax],al
  40ae66:	dec    cl
  40ae68:	add    BYTE PTR [eax],al
  40ae6a:	(bad)  
  40ae6c:	add    BYTE PTR [eax],al
  40ae6e:	das    
  40ae6f:	pop    ds
  40ae70:	xor    al,0x0
  40ae72:	das    
  40ae73:	pop    ds
  40ae74:	xor    eax,DWORD PTR [eax]
  40ae76:	das    
  40ae77:	sub    ebp,DWORD PTR [ebx+0x76]
  40ae7a:	das    
  40ae7b:	push   ebx
  40ae7c:	pop    esi
  40ae7d:	add    BYTE PTR [edi],ch
  40ae7f:	pop    ebx
  40ae80:	je     0x40ae82
  40ae82:	das    
  40ae83:	pop    ds
  40ae84:	je     0x40ae86
  40ae86:	das    
  40ae87:	gs je  0x40ae8a
  40ae8a:	das    
  40ae8b:	add    eax,0x204
  40ae90:	sub    eax,0x2d020404
  40ae95:	add    eax,0xd2d0204
  40ae9a:	or     al,0xa
  40ae9c:	dec    edi
  40ae9d:	or     eax,0xfd350a0c
  40aea2:	or     ecx,DWORD PTR [edx]
  40aea4:	and    eax,0x6726494
  40aea9:	mov    bh,0x70
  40aeab:	add    BYTE PTR [edi],ch
  40aead:	test   eax,0xebff7366
  40aeb2:	add    al,0x0
  40aeb4:	das    
  40aeb5:	lds    esp,FWORD PTR [ecx+0x73]
  40aeb8:	push   es
  40aeb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aeba:	and    al,0x0
  40aebc:	das    
  40aebd:	or     al,BYTE PTR [edx]
  40aebf:	add    BYTE PTR [edi],ch
  40aec1:	mov    ebp,DWORD PTR [esi+0x42]
  40aec4:	das    
  40aec5:	enter  0x426d,0x2f
  40aec9:	imul   edi,DWORD PTR [edx+0x42],0x2f
  40aecd:	(bad)  
  40aece:	outs   dx,DWORD PTR ds:[esi]
  40aecf:	inc    edx
  40aed0:	das    
  40aed1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aed2:	outs   dx,BYTE PTR ds:[esi]
  40aed3:	inc    edx
  40aed4:	das    
  40aed5:	add    ch,BYTE PTR [ecx+0x6f682f3f]
  40aedb:	inc    edx
  40aedc:	das    
  40aedd:	leave  
  40aede:	jb     0x40af22
  40aee0:	das    
  40aee1:	mov    ds:0x22f426e,al
  40aee6:	test   eax,0x8ede2f3f
  40aeeb:	outs   dx,BYTE PTR ds:[esi]
  40aeec:	ins    DWORD PTR es:[edi],dx
  40aeed:	fisub  WORD PTR ds:0xbade6d71
  40aef3:	add    eax,DWORD PTR [eax]
  40aef5:	add    BYTE PTR [edx-0x78fc4522],dl
  40aefb:	fidivr WORD PTR [ebx+eax*1+0x3c3de63]
  40af02:	push   eax
  40af03:	fidivr WORD PTR [esi-0x6821b6fd]
  40af09:	add    ebx,DWORD PTR [ebp-0x22]
  40af0c:	nop
  40af0d:	add    eax,DWORD PTR [ecx-0x22]
  40af10:	nop
  40af11:	add    edx,DWORD PTR [ebx-0x22]
  40af14:	mov    WORD PTR [ebx],es
  40af16:	push   eax
  40af17:	fiadd  WORD PTR [ebx+eax*1-0xf721d1]
  40af1e:	cmc    
  40af1f:	push   0xffffffb9
  40af21:	adc    al,0x7f
  40af23:	out    dx,al
  40af24:	push   0x9f5898bb
  40af29:	fcomi  st,st(6)
  40af2b:	push   ecx
  40af2c:	imul   edx,DWORD PTR [eax-0xf],0x5f13641a
  40af33:	out    dx,al
  40af34:	cmp    BYTE PTR [ecx-0x28810788],0x5f
  40af3b:	jecxz  0x40aee1
  40af3d:	cmp    BYTE PTR [edx+0x7f77661a],dh
  40af43:	out    dx,al
  40af44:	imul   edx,DWORD PTR [edx+0x2f],0xf6dc1f1e
  40af4b:	push   ecx
  40af4c:	cmp    DWORD PTR [ebx+0x776622e0],eax
  40af52:	pop    edi
  40af53:	out    dx,al
  40af54:	imul   edx,DWORD PTR [edx+0x2f],0xdc1f1e
  40af5b:	add    dh,dl
  40af5d:	push   ecx
  40af5e:	popf   
  40af5f:	cmp    BYTE PTR [edx-0x8899e7],dh
  40af65:	in     eax,dx
  40af66:	add    BYTE PTR [ebx+0x7d],ch
  40af69:	faddp  st(0),st
  40af6b:	push   ds
  40af6c:	repz mov ch,0xb4
  40af6f:	nop
  40af70:	popf   
  40af71:	jecxz  0x40af58
  40af73:	pop    esp
  40af74:	je     0x40afa3
  40af76:	adc    BYTE PTR [ebx-0x62],ah
  40af79:	pop    ss
  40af7a:	mov    esi,0xf1aeb39e
  40af7f:	xchg   ebx,eax
  40af80:	mov    ebp,0x743ce5e3
  40af85:	sub    eax,0x17be6310
  40af8a:	mov    esi,0xf1ae939e
  40af8f:	repz sub al,0xde
  40af92:	add    BYTE PTR [eax-0x5ff639d],dl
  40af98:	mov    ds:0x965b00d7,eax
  40af9d:	popf   
  40af9e:	add    BYTE PTR [edx],bh
  40afa0:	retf   0xd7
  40afa3:	cdq    
  40afa4:	(bad)  
  40afa5:	mov    dh,0x4d
  40afa7:	jns    0x40afb8
  40afa9:	mov    BYTE PTR [edx+ebp*4-0x4],dl
  40afad:	stos   BYTE PTR es:[edi],al
  40afae:	ins    DWORD PTR es:[edi],dx
  40afaf:	dec    edx
  40afb0:	adc    al,0x81
  40afb2:	je     0x40af9d
  40afb4:	sub    al,0xde
  40afb6:	add    BYTE PTR [ecx],bh
  40afb8:	fnsave [esi-0x74f7c2bf]
  40afbe:	arpl   cx,bp
  40afc0:	add    BYTE PTR [eax],al
  40afc2:	sub    al,0xde
  40afc4:	add    BYTE PTR [ecx],bl
  40afc6:	std    
  40afc7:	mov    dh,0x50
  40afc9:	inc    esi
  40afca:	(bad)  
  40afcb:	mov    DWORD PTR [eax],eax
  40afcd:	sbb    ebp,edi
  40afcf:	mov    dh,0x52
  40afd1:	or     al,0xd2
  40afd3:	add    DWORD PTR [eax],0x55b6dd39
  40afd9:	sbb    ecx,edx
  40afdb:	xchg   ecx,eax
  40afdc:	arpl   cx,bp
  40afde:	sub    al,0xde
  40afe0:	add    BYTE PTR [eax],al
  40afe2:	push   ecx
  40afe3:	dec    ebx
  40afe4:	inc    eax
  40afe5:	add    bl,ch
  40afe7:	fidiv  DWORD PTR [ecx+0x0]
  40afea:	jmp    0x40afc6
  40afec:	xor    BYTE PTR [eax],al
  40afee:	(bad)  
  40aff0:	js     0x40aff2
  40aff2:	and    dl,ah
  40aff4:	and    eax,DWORD PTR [eax]
  40aff6:	in     eax,0xda
  40aff8:	add    BYTE PTR [eax],al
  40affa:	sub    esp,edx
  40affc:	jno    0x40affe
  40affe:	sub    esp,edx
  40b000:	xor    BYTE PTR [eax],al
  40b002:	cs loop 0x40b07d
  40b005:	add    dh,dl
  40b007:	fiadd  DWORD PTR [eax]
  40b009:	add    BYTE PTR [edx+ebx*2+0x40],ah
  40b00d:	add    bh,al
  40b00f:	and    al,0x40
  40b011:	add    BYTE PTR [edx],dl
  40b013:	pop    ecx
  40b014:	inc    eax
  40b015:	add    BYTE PTR [ebx-0x2a],bh
  40b018:	inc    edx
  40b019:	add    bl,cl
  40b01b:	aas    
  40b01c:	ds add bl,cl
  40b01f:	aas    
  40b020:	add    BYTE PTR ds:[ebx+0x3e3f],bl
  40b027:	add    BYTE PTR [ebx-0x2ffbd2a],bh
  40b02d:	pop    eax
  40b02e:	inc    eax
  40b02f:	add    BYTE PTR [ebp+0x59],cl
  40b032:	inc    eax
  40b033:	add    BYTE PTR [esi+0x57],ch
  40b036:	inc    eax
  40b037:	add    BYTE PTR [edi-0x5fffbefc],cl
  40b03d:	and    al,0x40
  40b03f:	add    BYTE PTR [edi+0x1f00401e],al
  40b045:	lea    edx,[ebp+0x6f]
  40b048:	sbb    eax,ecx
  40b04a:	xor    al,0x50
  40b04c:	adc    al,0x81
  40b04e:	popa   
  40b04f:	gs adc eax,0x7400008d
  40b055:	fisub  DWORD PTR [ebx]
  40b057:	add    BYTE PTR ds:0x2f0022e2,ah
  40b05d:	add    eax,0x232f0002
  40b062:	add    ah,BYTE PTR ds:0x2202182f
  40b068:	das    
  40b069:	daa    
  40b06a:	add    ah,BYTE PTR ds:0x2182f
  40b070:	das    
  40b071:	or     dh,BYTE PTR [ecx+0x65]
  40b074:	jge    0x40b098
  40b076:	fs jbe 0x40b0ca
  40b079:	sbb    esp,DWORD PTR [esi+0x6c]
  40b07c:	das    
  40b07d:	dec    eax
  40b07e:	jo     0x40b0e5
  40b080:	mov    gs,WORD PTR [ebx]
  40b082:	pop    edi
  40b083:	inc    ebp
  40b084:	pop    ecx
  40b085:	push   ebp
  40b086:	imul   esi,DWORD PTR [edx+0x50],0x25
  40b08a:	add    BYTE PTR gs:[bx+si],al
  40b08e:	dec    ecx
  40b08f:	push   ebx
  40b090:	inc    eax
  40b091:	ins    BYTE PTR es:[edi],dx
  40b092:	inc    eax
  40b093:	sub    BYTE PTR [ecx+0x0],ch
  40b096:	das    
  40b097:	inc    ebx
  40b098:	pop    edi
  40b099:	jae    0x40b0d6
  40b09b:	jns    0x40b102
  40b09d:	jns    0x40b111
  40b09f:	pop    ebp
  40b0a0:	ins    BYTE PTR es:[edi],dx
  40b0a1:	imul   edi,DWORD PTR ds:0x126d6394,0x13426e6d
  40b0ab:	fs popa 
  40b0ad:	imul   ebp,DWORD PTR [edi],0x51
  40b0b0:	pop    esi
  40b0b1:	or     eax,0x6c5f5b25
  40b0b6:	dec    edi
  40b0b7:	jmp    0x28e23d9
  40b0bc:	or     BYTE PTR [ecx+0x11],ch
  40b0bf:	out    0x5d,eax
  40b0c1:	js     0x40b0c9
  40b0c3:	mov    eax,0xe20d2070
  40b0c8:	outs   dx,DWORD PTR ds:[esi]
  40b0c9:	and    cl,BYTE PTR [edi]
  40b0cb:	pushf  
  40b0cc:	arpl   WORD PTR [eax+ecx*8-0x1a],si
  40b0d0:	pusha  
  40b0d1:	add    BYTE PTR [edi],ch
  40b0d3:	test   eax,0xde2f6104
  40b0d8:	sbb    eax,DWORD PTR [edi+ebp*1]
  40b0db:	fisub  WORD PTR [edi]
  40b0dd:	pop    edi
  40b0de:	int3   
  40b0df:	test   DWORD PTR [esi],eax
  40b0e1:	and    al,0xc0
  40b0e3:	jnp    0x40b0ea
  40b0e5:	pop    es
  40b0e6:	xor    eax,0x3506fabb
  40b0eb:	jp     0x40b0f1
  40b0ed:	push   0x242dc54f
  40b0f2:	add    BYTE PTR [eax],al
  40b0f4:	dec    ebp
  40b0f5:	mov    ebx,0xe83a21fa
  40b0fa:	out    0x3,eax
  40b0fc:	das    
  40b0fd:	fimul  WORD PTR [esi]
  40b0ff:	add    al,0x8c
  40b101:	fiadd  WORD PTR [edi]
  40b103:	add    al,0x4d
  40b105:	fiadd  WORD PTR [esp+eax*1]
  40b108:	pop    esp
  40b109:	fimul  WORD PTR [ecx]
  40b10b:	add    al,0x2f
  40b10d:	fisubr WORD PTR [edx-0x3b21b7fd]
  40b113:	add    edi,DWORD PTR [esi+ebx*8-0x49]
  40b117:	add    edx,DWORD PTR [edx-0x22]
  40b11a:	mov    al,BYTE PTR [ebx]
  40b11c:	das    
  40b11d:	fidiv  WORD PTR [esi-0x5c21a1fd]
  40b123:	add    ebp,DWORD PTR [edi]
  40b125:	(bad)  
  40b127:	(bad)  
  40b129:	fstp   QWORD PTR [ebx-0x19]
  40b12c:	out    dx,al
  40b12d:	fld    QWORD PTR ds:0x3ddeef1
  40b133:	icebp  
  40b134:	out    dx,al
  40b135:	fucom  st(7)
  40b137:	add    ebp,DWORD PTR [edi]
  40b139:	fsubrp st(7),st
  40b13b:	add    ebp,DWORD PTR [edi]
  40b13d:	fsubrp st(7),st
  40b13f:	add    ebp,DWORD PTR [edi]
  40b141:	fidivr WORD PTR [edi+edi*2]
  40b144:	test   BYTE PTR [eax-0x44],ah
  40b147:	adc    al,0xfc
  40b149:	xchg   eax,ebp
  40b14b:	pop    edx
  40b14c:	pusha  
  40b14d:	jmp    0x6c00:0xddef13e3
  40b154:	imul   edx,DWORD PTR [eax+0xfa77],0x79
  40b15b:	scas   eax,DWORD PTR es:[edi]
  40b15c:	push   ecx
  40b15d:	adc    ebp,DWORD PTR [edx]
  40b15f:	lods   eax,DWORD PTR ds:[esi]
  40b160:	std    
  40b161:	hlt    
  40b162:	xor    al,0xe4
  40b164:	inc    eax
  40b165:	jmp    0x1b60611
  40b16a:	and    BYTE PTR [ecx+0x44],0x85
  40b16e:	jnp    0x40b0f8
  40b170:	call   DWORD PTR [eax]
  40b172:	lahf   
  40b173:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b174:	inc    eax
  40b175:	jmp    0xd94d9c97
  40b17a:	ins    BYTE PTR es:[edi],dx
  40b17b:	fiadd  WORD PTR [ebx-0x742a78d7]
  40b181:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b182:	add    BYTE PTR [ebx+ecx*4-0x745bfb54],ah
  40b189:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b18a:	fsub   QWORD PTR [ebx+0x66d0bcfd]
  40b190:	pop    esp
  40b191:	inc    ecx
  40b192:	fsub   st(2),st
  40b194:	add    cl,bl
  40b196:	ins    BYTE PTR es:[edi],dx
  40b197:	fiadd  WORD PTR [ebx-0x215b8d7]
  40b19d:	pushf  
  40b19e:	mov    eax,0xbc217414
  40b1a3:	mov    dh,al
  40b1a5:	mov    esi,0xf910eabd
  40b1aa:	in     al,dx
  40b1ab:	fld    QWORD PTR [ebx-0x21ed9d7]
  40b1b1:	je     0x40b13b
  40b1b3:	adc    al,0x14
  40b1b5:	leave  
  40b1b6:	cmp    DWORD PTR [esi+0x11ee6a00],ebx
  40b1bc:	(bad)  
  40b1bd:	and    al,BYTE PTR [eax]
  40b1bf:	add    BYTE PTR [eax-0x71],bh
  40b1c2:	or     al,0xa6
  40b1c4:	es loop 0x40b1c7
  40b1c7:	jmp    0xe5c016f8
  40b1cc:	jmp    0x40b17e
  40b1ce:	or     BYTE PTR [eax],al
  40b1d0:	frstor [ebp-0x33bb1404]
  40b1d6:	rcr    BYTE PTR [ebx-0x71],0x1c
  40b1da:	push   ebp
  40b1db:	mov    ecx,DWORD PTR [edx+0x638b56aa]
  40b1e1:	pop    edi
  40b1e2:	push   cs
  40b1e3:	inc    eax
  40b1e4:	inc    esi
  40b1e5:	mov    eax,0xaf9a458b
  40b1ea:	push   0x0
  40b1ec:	sub    al,0xda
  40b1ee:	push   0x1
  40b1f0:	test   eax,0xc0ff0895
  40b1f5:	gs mov esi,0x150fdc75
  40b1fb:	adc    ch,ah
  40b1fd:	sahf   
  40b1fe:	add    BYTE PTR [ebx+0x2f73818e],al
  40b204:	jge    0x40b1ac
  40b206:	cld    
  40b207:	test   DWORD PTR [esi-0x75],eax
  40b20a:	sub    al,ch
  40b20c:	leave  
  40b20d:	call   0xff85:0x75d0000
  40b214:	mov    ds:0x1a458bed,al
  40b219:	scas   eax,DWORD PTR es:[edi]
  40b21a:	std    
  40b21b:	jne    0x40b237
  40b21d:	mov    eax,0x9609016a
  40b222:	or     bh,bh
  40b224:	add    BYTE PTR [eax],al
  40b226:	add    BYTE PTR [esi-0x42],ah
  40b229:	je     0x40b1ed
  40b22b:	xchg   ebx,eax
  40b22c:	(bad)  
  40b22d:	jmp    0x40b1bd
  40b22f:	mov    bh,0xe8
  40b231:	pop    edi
  40b232:	rcr    dh,cl
  40b234:	add    BYTE PTR [ebx],dh
  40b236:	inc    esi
  40b237:	mov    al,0x5e
  40b239:	leave  
  40b23a:	inc    esp
  40b23b:	fild   DWORD PTR [eax]
  40b23d:	xor    edx,DWORD PTR [esi+0x19]
  40b240:	push   es
  40b241:	add    ah,bl
  40b243:	fistp  DWORD PTR [eax-0x3e]
  40b246:	mov    bl,dh
  40b248:	std    
  40b249:	je     0x40b27a
  40b24b:	loope  0x40b255
  40b24d:	call   0x456b5e
  40b252:	ins    BYTE PTR es:[edi],dx
  40b253:	sbb    edi,DWORD PTR [ecx+0x24]
  40b256:	xor    ebp,DWORD PTR ds:0x52f442a
  40b25c:	lds    edx,FWORD PTR [esp+esi*4+0x50]
  40b260:	push   edx
  40b261:	mov    ebp,edx
  40b263:	or     BYTE PTR [ebp+0x56],dl
  40b266:	loopne 0x40b256
  40b268:	add    ebx,DWORD PTR [ebx+0xc]
  40b26b:	dec    eax
  40b26c:	test   bh,ah
  40b26e:	das    
  40b26f:	jmp    0x40b293
  40b271:	dec    eax
  40b272:	fwait
  40b273:	and    eax,0x8c41743a
  40b278:	inc    ebp
  40b279:	adc    BYTE PTR [edx+0x2f840047],ch
  40b27f:	push   es
  40b280:	add    al,BYTE PTR [eax]
  40b282:	call   0x2f410b8e
  40b287:	pop    es
  40b288:	fcomi  st,st(4)
  40b28a:	add    BYTE PTR [eax],al
  40b28c:	das    
  40b28d:	pop    es
  40b28e:	add    al,bh
  40b290:	jb     0x40b235
  40b292:	add    al,0x0
  40b294:	das    
  40b295:	(bad)  
  40b296:	fisttp DWORD PTR [edi]
  40b298:	lock cmp ch,dh
  40b29b:	call   eax
  40b29d:	pop    es
  40b29e:	inc    edx
  40b29f:	jmp    0x40b2d1
  40b2a1:	mov    eax,0x72ffc45
  40b2a6:	add    al,BYTE PTR [eax-0x4601c55c]
  40b2ac:	das    
  40b2ad:	add    BYTE PTR [edx],al
  40b2af:	add    BYTE PTR [ebp+eax*8-0x57],cl
  40b2b3:	jmp    FWORD PTR [edi+eax*1]
  40b2b6:	add    bh,BYTE PTR [ebx]
  40b2b8:	outs   dx,BYTE PTR ds:[esi]
  40b2b9:	nop
  40b2ba:	and    eax,0xc4825874
  40b2bf:	jae    0x40b2fd
  40b2c1:	inc    edx
  40b2c2:	add    al,BYTE PTR [ecx]
  40b2c4:	das    
  40b2c5:	fsubrp st(7),st
  40b2c7:	ja     0x40b2e6
  40b2c9:	shl    edi,cl
  40b2cb:	add    eax,0x315bde2f
  40b2d0:	sub    bl,dh
  40b2d2:	jmp    0x2d5d:0x8a8b2f03
  40b2d9:	add    eax,0xb52b5dea
  40b2de:	ret    0xa16
  40b2e1:	fsubrp st(4),st
  40b2e3:	add    ebp,DWORD PTR [edi]
  40b2e5:	mov    dh,dl
  40b2e7:	cs das 
  40b2e9:	fsub   st,st(7)
  40b2eb:	add    edi,DWORD PTR [ebx+0xc5d2be]
  40b2f1:	add    BYTE PTR [ebx+0x6dccdb66],ah
  40b2f7:	test   bh,ch
  40b2f9:	push   eax
  40b2fa:	add    BYTE PTR [esi],0x2
  40b2fd:	inc    ebp
  40b2fe:	das    
  40b2ff:	fisub  WORD PTR [edx-0xd]
  40b302:	mov    bl,0x7
  40b304:	cmc    
  40b305:	add    BYTE PTR [edx+ebx*4-0x76477909],dh
  40b30c:	loope  0x40b388
  40b30e:	cmp    BYTE PTR ds:0x5325dde,al
  40b314:	and    bl,BYTE PTR [ebp+0x2b]
  40b317:	push   es
  40b318:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b319:	inc    esp
  40b31a:	das    
  40b31b:	fisub  WORD PTR [ebx+eax*8+0x5c]
  40b31f:	fld    TBYTE PTR [edx-0x5]
  40b322:	leave  
  40b323:	add    al,0xea
  40b325:	xor    al,0xef
  40b327:	fs mov ch,0xff
  40b32a:	out    dx,eax
  40b32b:	push   es
  40b32c:	jmp    0x40b2b1
  40b32e:	iret   
  40b32f:	fisub  WORD PTR [eax+0x9]
  40b332:	mov    bh,0x9f
  40b334:	jecxz  0x40b2bc
  40b336:	loopne 0x40b2c2
  40b338:	bnd jl 0x40b32e
  40b33b:	in     eax,dx
  40b33c:	fs ret 
  40b33e:	sbb    al,0x9f
  40b340:	add    BYTE PTR [eax+0x54],ah
  40b343:	add    eax,0x10ac813c
  40b348:	(bad)  
  40b349:	jmp    0xde42372b
  40b34e:	not    BYTE PTR [ecx]
  40b350:	(bad)  
  40b351:	pop    esp
  40b352:	imul   edi,eax,0x5c
  40b355:	adc    al,BYTE PTR [eax]
  40b357:	add    BYTE PTR [ebx],ch
  40b359:	fiadd  WORD PTR [ecx+ebp*4-0x58762629]
  40b360:	je     0x40b325
  40b362:	mov    DWORD PTR [ebx+eiz*1],esi
  40b365:	pop    ebx
  40b366:	(bad)  
  40b367:	xor    eax,0xf9140f43
  40b36c:	sbb    eax,0x2870009e
  40b371:	gs aas 
  40b373:	ins    BYTE PTR es:[edi],dx
  40b374:	sbb    BYTE PTR [ebx+ecx*1+0x23f7e862],cl
  40b37b:	ret    0xde2c
  40b37e:	push   ebp
  40b37f:	xchg   ecx,eax
  40b380:	and    bl,BYTE PTR [ebx+0x662e900]
  40b386:	adc    ch,BYTE PTR [edx]
  40b388:	sub    ebx,esi
  40b38a:	xor    DWORD PTR [ecx],0xc25eb108
  40b390:	mov    bl,0x1d
  40b392:	or     eax,0x754fb7e9
  40b397:	push   cs
  40b398:	lods   al,BYTE PTR ds:[esi]
  40b399:	pop    es
  40b39a:	(bad)  
  40b39b:	mov    ebp,0x57d5b06
  40b3a0:	daa    
  40b3a1:	fidiv  WORD PTR [edx+edi*8-0x53]
  40b3a5:	xchg   ebx,eax
  40b3a6:	and    al,0xe1
  40b3a8:	sub    al,0x63
  40b3aa:	add    DWORD PTR [esi+esi*4+0x161e5585],esp
  40b3b1:	mov    edx,0x32ca912
  40b3b6:	adc    ecx,DWORD PTR [esi]
  40b3b8:	daa    
  40b3b9:	mov    edx,0x8
  40b3be:	xor    DWORD PTR [esi+0x33b60824],edx
  40b3c4:	fistp  QWORD PTR [ebx]
  40b3c6:	xchg   esi,eax
  40b3c7:	fild   DWORD PTR [ebx-0x7c1c0040]
  40b3cd:	neg    dl
  40b3cf:	cmc    
  40b3d0:	std    
  40b3d1:	adc    eax,0x40ec76
  40b3d6:	iret   
  40b3d7:	fsubr  st,st(1)
  40b3d9:	or     cl,bl
  40b3db:	or     BYTE PTR [edx+0x6],dh
  40b3de:	mov    ecx,ebx
  40b3e0:	push   ebp
  40b3e1:	add    BYTE PTR [esi-0x25],al
  40b3e4:	or     eax,0x61d81
  40b3ea:	sbb    edx,DWORD PTR [ebx-0x6d07ac17]
  40b3f0:	in     eax,dx
  40b3f1:	xor    ebp,DWORD PTR [ebp-0x3c]
  40b3f4:	icebp  
  40b3f5:	je     0x40b444
  40b3f7:	pop    ebx
  40b3f8:	cld    
  40b3f9:	(bad)  
  40b3fa:	cmp    bl,BYTE PTR [eax-0x78e1a2c9]
  40b400:	aas    
  40b401:	cmp    BYTE PTR [eax],dh
  40b403:	out    0x74,al
  40b405:	or     ecx,DWORD PTR [ebp+0x25026ad9]
  40b40b:	stos   DWORD PTR es:[edi],eax
  40b40c:	call   0x11b0188
  40b411:	mov    ebx,DWORD PTR [eax]
  40b413:	stos   DWORD PTR es:[edi],eax
  40b414:	mov    eax,DWORD PTR [ebp-0x32]
  40b417:	stos   BYTE PTR es:[edi],al
  40b418:	push   ebp
  40b419:	(bad)  
  40b41a:	sti    
  40b41b:	adc    bh,bh
  40b41d:	ss jno 0x40b416
  40b420:	cmp    al,0x12
  40b422:	add    BYTE PTR [eax],al
  40b424:	xchg   dl,bl
  40b426:	add    eax,0xffffff8a
  40b429:	in     eax,0x37
  40b42b:	jge    0x40b3fb
  40b42d:	xchg   BYTE PTR [edi],cl
  40b42f:	mov    ebx,DWORD PTR [ebx-0x650cc4f2]
  40b435:	jecxz  0x40b434
  40b437:	adc    eax,0x4013152f
  40b43c:	das    
  40b43d:	jle    0x40b442
  40b43f:	jmp    0x40b47f
  40b441:	mov    esi,es
  40b443:	jmp    0xc444:0xc488c3f
  40b44a:	jne    0x40b452
  40b44c:	push   0x2f005704
  40b451:	add    eax,0xce70c781
  40b456:	inc    edi
  40b457:	pop    ebp
  40b458:	ins    DWORD PTR es:[edi],dx
  40b459:	cld    
  40b45a:	add    DWORD PTR [ebp-0x4c],edx
  40b45d:	push   eax
  40b45e:	push   edx
  40b45f:	push   ecx
  40b460:	add    DWORD PTR [ecx+esi*8+0x3bc85984],ecx
  40b467:	or     DWORD PTR [ecx+0x47],0x79
  40b46b:	dec    edx
  40b46c:	lods   al,BYTE PTR ds:[esi]
  40b46d:	sbb    al,0x5
  40b46f:	je     0x40b490
  40b471:	int    0x78
  40b473:	or     bh,ah
  40b475:	jmp    0xcf6e1ea5
  40b47a:	xlat   BYTE PTR ds:[ebx]
  40b47b:	push   es
  40b47c:	pop    esp
  40b47d:	aaa    
  40b47e:	inc    ebp
  40b47f:	jmp    0x40b4ae
  40b481:	dec    eax
  40b482:	ret    0xa44f
  40b485:	ret    0x98fc
  40b488:	add    BYTE PTR [eax],al
  40b48a:	pop    ebp
  40b48b:	out    0x77,eax
  40b48d:	add    eax,0x2a9217
  40b492:	das    
  40b493:	jnp    0x40b459
  40b495:	jae    0x40b4b3
  40b497:	lods   al,BYTE PTR ds:[esi]
  40b498:	lea    esp,ss:[edx-0x51]
  40b49c:	fsubr  QWORD PTR [ecx-0x7bfe08db]
  40b4a2:	out    dx,eax
  40b4a3:	dec    ebx
  40b4a4:	pop    es
  40b4a5:	mov    ebp,DWORD PTR [edx-0x61]
  40b4a8:	xlat   BYTE PTR ds:[ebx]
  40b4a9:	sbb    dh,BYTE PTR [edx-0x3feb872c]
  40b4af:	xor    dl,BYTE PTR [edx]
  40b4b1:	adc    ebp,DWORD PTR [edi-0x22]
  40b4b4:	out    0x7a,eax
  40b4b6:	sub    ecx,edi
  40b4b8:	icebp  
  40b4b9:	xchg   BYTE PTR [ecx+0x29c4ed92],ch
  40b4bf:	mov    ch,0xe7
  40b4c1:	add    ebp,DWORD PTR [edi]
  40b4c3:	popa   
  40b4c4:	xor    ch,ch
  40b4c6:	repnz push ss
  40b4c8:	sub    cl,BYTE PTR [eax]
  40b4ca:	das    
  40b4cb:	arpl   si,di
  40b4cd:	ja     0x40b51b
  40b4cf:	popa   
  40b4d0:	out    dx,al
  40b4d1:	in     al,dx
  40b4d2:	cld    
  40b4d3:	jmp    0x40b513
  40b4d5:	jns    0x40b509
  40b4d7:	arpl   di,bx
  40b4d9:	ja     0x40b515
  40b4db:	pop    ecx
  40b4dc:	scas   eax,DWORD PTR es:[edi]
  40b4dd:	(bad)  [esi-0x39]
  40b4e0:	out    0x3,eax
  40b4e2:	add    dh,dh
  40b4e4:	test   DWORD PTR [edx+0x2f],eax
  40b4e7:	ficom  WORD PTR ds:0xe79f80dc
  40b4ed:	add    eax,DWORD PTR [eax]
  40b4ef:	add    ah,bh
  40b4f1:	sbb    eax,0x1eb3c10f
  40b4f6:	sbb    al,0x6
  40b4f8:	push   0x2f0436de
  40b4fd:	fisubr WORD PTR [edx-0x45]
  40b500:	and    DWORD PTR [ecx],esp
  40b502:	xor    eax,0x945f0479
  40b507:	sti    
  40b508:	cs fsubrp st(7),st
  40b50b:	push   esp
  40b50c:	mov    ah,0x8a
  40b50e:	iret   
  40b50f:	jle    0x40b4bc
  40b511:	add    eax,0xadf9ec6d
  40b516:	jb     0x40b55e
  40b518:	daa    
  40b519:	not    BYTE PTR [edi]
  40b51b:	add    ch,BYTE PTR [edi]
  40b51d:	fidiv  WORD PTR [esi-0xc6e5f79]
  40b523:	in     al,dx
  40b524:	arpl   dx,si
  40b526:	je     0x40b4ae
  40b528:	fmul   DWORD PTR [edx]
  40b52a:	aas    
  40b52b:	in     al,dx
  40b52c:	leave  
  40b52d:	xchg   edx,eax
  40b52e:	add    ch,ah
  40b530:	pop    esp
  40b531:	idiv   BYTE PTR [ecx]
  40b533:	sub    al,0xcb
  40b535:	or     ecx,eax
  40b537:	sub    dh,BYTE PTR [edi]
  40b539:	mov    ds:0x906c6414,al
  40b53e:	push   es
  40b53f:	cs sub al,0xb5
  40b542:	add    cl,ch
  40b544:	sub    al,0x61
  40b546:	leave  
  40b547:	push   es
  40b548:	aad    0x1f
  40b54a:	mov    ah,BYTE PTR [ebp-0x9a91db0]
  40b550:	stc    
  40b551:	rcl    DWORD PTR [eax],0x62
  40b554:	add    BYTE PTR [eax],al
  40b556:	add    dl,al
  40b558:	sbb    dh,ah
  40b55a:	inc    ecx
  40b55c:	adc    cl,dl
  40b55e:	repz or edi,esi
  40b561:	(bad)  
  40b562:	cmc    
  40b563:	and    BYTE PTR [edx+0x55e20f25],cl
  40b569:	(bad)  
  40b56a:	ffreep st(1)
  40b56c:	adc    al,0x72
  40b56e:	xlat   BYTE PTR ds:[ebx]
  40b56f:	rcl    DWORD PTR [esi+esi*4],0xbf
  40b573:	rcl    DWORD PTR [eax],0xc1
  40b576:	enter  0xfe0b,0xa6
  40b57a:	in     al,0x20
  40b57c:	mov    ah,BYTE PTR ds:0x6256d64f
  40b582:	lahf   
  40b583:	ret    0x8108
  40b586:	ins    DWORD PTR es:[edi],dx
  40b587:	or     edi,esi
  40b589:	xchg   BYTE PTR [ebp+0x1f],ah
  40b58c:	mov    ah,BYTE PTR ds:0x2589da4f
  40b592:	dec    edi
  40b593:	loop   0x40b5ea
  40b595:	outs   dx,BYTE PTR ds:[esi]
  40b596:	jg     0x40b55a
  40b598:	or     al,0x72
  40b59a:	xchg   edx,eax
  40b59c:	sbb    BYTE PTR [ecx-0xe],dl
  40b59f:	or     esi,edi
  40b5a1:	push   esi
  40b5a2:	je     0x40b5c3
  40b5a4:	push   esp
  40b5a5:	(bad)  
  40b5a6:	neg    DWORD PTR [esi-0x13]
  40b5a9:	add    dh,bl
  40b5ab:	loope  0x40b5ad
  40b5ad:	add    BYTE PTR [ecx+0x4b107c8c],ah
  40b5b3:	pop    ebp
  40b5b4:	idiv   ch
  40b5b6:	or     edi,esi
  40b5b8:	dec    ebp
  40b5b9:	mov    eax,DWORD PTR [eax]
  40b5bb:	add    BYTE PTR [ebx-0x686e19f9],al
  40b5c1:	fild   WORD PTR [eax]
  40b5c3:	pop    edi
  40b5c4:	adc    ah,BYTE PTR [edx]
  40b5c6:	jb     0x40b5dc
  40b5c8:	sti    
  40b5c9:	pop    esp
  40b5ca:	idiv   ch
  40b5cc:	sub    edi,esi
  40b5ce:	dec    ebp
  40b5cf:	call   0x416c21
  40b5d4:	adc    ah,BYTE PTR [edx]
  40b5d6:	jb     0x40b5dc
  40b5d8:	mov    ch,0x1f
  40b5da:	leave  
  40b5db:	ret    
  40b5dc:	add    eax,0x95c9ff47
  40b5e1:	scas   al,BYTE PTR es:[edi]
  40b5e2:	mov    esp,ebp
  40b5e4:	xlat   BYTE PTR ds:[ebx]
  40b5e5:	xor    cl,BYTE PTR [esi]
  40b5e7:	add    al,BYTE PTR [esi-0x21]
  40b5ea:	push   ecx
  40b5eb:	push   esi
  40b5ec:	xor    DWORD PTR [ecx+eax*1+0x5efa038d],ebp
  40b5f3:	push   0xfffffff7
  40b5f5:	stos   DWORD PTR es:[edi],eax
  40b5f6:	jp     0x40b650
  40b5f8:	outs   dx,BYTE PTR ds:[esi]
  40b5f9:	in     eax,dx
  40b5fa:	sbb    al,0x0
  40b5fc:	inc    esi
  40b5fd:	jge    0x40b586
  40b5ff:	push   es
  40b600:	xchg   ebp,eax
  40b601:	sbb    eax,0x25434f00
  40b606:	xor    eax,eax
  40b608:	xor    BYTE PTR [ecx-0x616201bc],cl
  40b60e:	adc    BYTE PTR [ebx],dh
  40b610:	int    0x63
  40b612:	jbe    0x40b618
  40b614:	pop    ss
  40b615:	mov    es,WORD PTR [ebx]
  40b617:	mov    esi,esi
  40b619:	push   es
  40b61a:	jmp    0x40b61e
  40b61c:	adc    eax,0x858d10
  40b621:	add    BYTE PTR [esi+0x2ffffef6],al
  40b627:	inc    ebp
  40b628:	fimul  DWORD PTR [edx+0x5001f534]
  40b62e:	mov    ds:0xae4fea39,al
  40b633:	ret    0x41f
  40b636:	das    
  40b637:	cmc    
  40b638:	dec    edi
  40b639:	jmp    DWORD PTR [edx]
  40b63b:	sub    eax,0x7a2f4017
  40b640:	shl    DWORD PTR [ebx+0x18],0x7a
  40b644:	sub    bh,0xa2
  40b647:	repz jmp 0xef12:0xba11984f
  40b64f:	hlt    
  40b650:	jle    0x40b619
  40b652:	mov    edx,0x80fcf181
  40b657:	adc    edi,DWORD PTR [edx+0x4c]
  40b65a:	pop    ds
  40b65b:	push   eax
  40b65c:	mov    edx,0x658fdc73
  40b661:	or     al,0xb4
  40b663:	mov    cl,0xfc
  40b665:	sub    BYTE PTR [eax+0x32],0x84
  40b669:	lds    ebp,FWORD PTR ds:0x2ff2891d
  40b66f:	cmc    
  40b670:	sub    al,0xc3
  40b672:	retf   
  40b673:	or     dl,BYTE PTR [ebp+0x53]
  40b676:	fsubr  st,st(2)
  40b678:	push   esp
  40b679:	inc    edx
  40b67b:	and    al,0x55
  40b67d:	push   ebx
  40b67e:	xor    BYTE PTR [ecx],cl
  40b680:	jle    0x40b692
  40b682:	outs   dx,DWORD PTR ds:[esi]
  40b683:	imul   DWORD PTR [ebx+eax*8]
  40b686:	add    BYTE PTR [eax],al
  40b688:	mov    eax,ds:0x99fb2d1d
  40b68d:	sub    DWORD PTR [edi+0xb],esi
  40b690:	pop    edi
  40b691:	pop    ds
  40b692:	dec    ebx
  40b693:	inc    DWORD PTR [ebx-0x7d38d2ff]
  40b699:	sub    eax,0xf585187a
  40b69e:	pop    ecx
  40b69f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6a0:	popa   
  40b6a1:	fisub  WORD PTR [edi-0x106c17fd]
  40b6a7:	call   0x443e50e7
  40b6ac:	das    
  40b6ad:	int    0x27
  40b6af:	test   esp,ebp
  40b6b1:	fisub  DWORD PTR [edi+0x27cd2edc]
  40b6b7:	dec    ecx
  40b6b8:	popa   
  40b6b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6ba:	and    ch,al
  40b6bc:	std    
  40b6bd:	sbb    eax,0x1dfdc4a8
  40b6c2:	sub    ecx,DWORD PTR [edi-0x4c]
  40b6c5:	cli    
  40b6c6:	push   0xffffffd8
  40b6c8:	fs mov al,0xbe
  40b6cb:	jl     0x40b6e8
  40b6cd:	jmp    0x391:0xe61be8b6
  40b6d4:	adc    eax,0x376efede
  40b6d9:	div    BYTE PTR [edi+0x630979e9]
  40b6df:	hlt    
  40b6e0:	lods   eax,DWORD PTR ds:[esi]
  40b6e1:	and    bh,ah
  40b6e3:	jle    0x40b747
  40b6e5:	xchg   edx,eax
  40b6e6:	dec    esi
  40b6e7:	test   DWORD PTR [edx+0x9],esp
  40b6ea:	pop    esp
  40b6eb:	pop    esi
  40b6ec:	add    BYTE PTR [eax],al
  40b6ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6ef:	loopne 0x40b74d
  40b6f1:	imul   ebp,DWORD PTR ss:[edi-0xcb7cc3a],0xffffffdf
  40b6f9:	adc    eax,0xc36cddef
  40b6fe:	ret    
  40b6ff:	fisub  DWORD PTR [edx+0x3e]
  40b702:	pop    ss
  40b703:	idiv   BYTE PTR [edx+0x6b0929e6]
  40b709:	mov    ebx,0x7722f521
  40b70e:	jae    0x40b716
  40b710:	cmp    BYTE PTR [edi+0x6b],dh
  40b713:	es sbb cl,ch
  40b716:	and    ecx,DWORD PTR [esi]
  40b718:	fiadd  DWORD PTR [ebx+0x2f]
  40b71b:	arpl   WORD PTR [ecx],ax
  40b71d:	test   eax,0xf4fdee88
  40b722:	sbb    al,0x5b
  40b724:	inc    esp
  40b725:	popa   
  40b726:	xlat   BYTE PTR ds:[ebx]
  40b727:	xchg   ecx,eax
  40b728:	or     al,0xb9
  40b72a:	xlat   BYTE PTR ds:[ebx]
  40b72b:	icebp  
  40b72c:	sbb    al,0xfa
  40b72e:	ins    BYTE PTR es:[edi],dx
  40b72f:	fimul  WORD PTR [ecx+0x4c5390a4]
  40b735:	fnsave [ebx+0x45c72628]
  40b73b:	fiadd  WORD PTR [ecx+0x73ddb8b6]
  40b741:	in     al,0x33
  40b743:	mov    BYTE PTR [eax],cl
  40b745:	adc    dh,BYTE PTR [edx]
  40b747:	int    0xfd
  40b749:	imul   edx,DWORD PTR [edi],0x949bfff2
  40b74f:	fld    DWORD PTR [eax+0x2c0000e9]
  40b755:	fisub  WORD PTR [esi+0x70]
  40b758:	sub    eax,0xf69ec755
  40b75d:	push   ss
  40b75e:	ret    0xfb9c
  40b761:	hlt    
  40b762:	jg     0x40b761
  40b764:	jne    0x40b744
  40b766:	add    cl,ch
  40b768:	std    
  40b769:	scas   eax,DWORD PTR es:[edi]
  40b76a:	mov    DWORD PTR [edi+eiz*2],edx
  40b76d:	jmp    0x40b7af
  40b76f:	jmp    0x81a9e849
  40b774:	sbb    DWORD PTR [esi+0x32501a00],ebx
  40b77a:	test   BYTE PTR [ecx+0x2e89efbe],ch
  40b780:	cmp    esp,ecx
  40b782:	push   ds
  40b783:	jmp    0x40b7b1
  40b785:	ficom  WORD PTR [eax-0x5a]
  40b788:	sahf   
  40b789:	(bad)  
  40b78a:	std    
  40b78b:	hlt    
  40b78c:	clc    
  40b78d:	in     eax,dx
  40b78e:	inc    eax
  40b78f:	jmp    0x2e2a9670
  40b794:	jae    0x40b7d0
  40b796:	dec    edi
  40b797:	add    BYTE PTR [esi-0x1e],dl
  40b79a:	push   ecx
  40b79b:	call   FWORD PTR [eax+0xe75be5d]
  40b7a1:	test   DWORD PTR [esi+0x8],eax
  40b7a4:	test   DWORD PTR [edx],esp
  40b7a6:	adc    al,0xeb
  40b7a8:	jo     0x40b74e
  40b7aa:	add    ch,BYTE PTR [eax-0x56]
  40b7ad:	rol    BYTE PTR [eax+0x0],1
  40b7b0:	xchg   ebp,eax
  40b7b1:	add    BYTE PTR ds:0x9bd5c0,dl
  40b7b7:	test   DWORD PTR [eax],eax
  40b7b9:	add    BYTE PTR [esi],dl
  40b7bb:	lea    esi,[eax+ebp*2]
  40b7be:	retf   0xe2
  40b7c1:	add    BYTE PTR [ebp+0x1b],al
  40b7c4:	add    BYTE PTR [ebx-0x6a],dl
  40b7c7:	xchg   BYTE PTR [eax+edi*8-0x7c0100ad],dh
  40b7ce:	pop    esi
  40b7cf:	jmp    ebp
  40b7d1:	inc    ebx
  40b7d2:	fild   DWORD PTR gs:[eax]
  40b7d5:	test   DWORD PTR [esi-0x80],eax
  40b7d8:	sbb    BYTE PTR [ebx+0x4789b258],cl
  40b7de:	jle    0x40b7be
  40b7e0:	es add al,0x86
  40b7e3:	fist   DWORD PTR [eax-0x1]
  40b7e6:	sti    
  40b7e7:	add    ah,dh
  40b7e9:	repz imul ebx,ebx,0x0
  40b7ed:	test   DWORD PTR [esi-0x79cd5d72],edx
  40b7f3:	mov    eax,ds:0x784c959
  40b7f8:	(bad)  
  40b7f9:	push   edx
  40b7fa:	inc    ebp
  40b7fb:	adc    al,0x39
  40b7fd:	pop    esi
  40b7fe:	dec    edx
  40b7ff:	adc    BYTE PTR [ebp+0xdb46a5],al
  40b805:	push   0x40d0b6
  40b80a:	shr    ebp,1
  40b80c:	add    BYTE PTR [ebx],dl
  40b80e:	push   esi
  40b80f:	loop   0x40b798
  40b811:	push   es
  40b812:	das    
  40b813:	sub    al,0xc3
  40b815:	push   cs
  40b816:	stos   DWORD PTR es:[edi],eax
  40b817:	test   BYTE PTR [ecx],al
  40b819:	add    BYTE PTR [edi],ch
  40b81b:	in     eax,dx
  40b81c:	dec    esp
  40b81d:	or     DWORD PTR [eax],eax
  40b81f:	add    BYTE PTR [edi],ch
  40b821:	cmc    
  40b822:	push   edi
  40b823:	or     al,bh
  40b825:	dec    ecx
  40b826:	sbb    dl,dh
  40b828:	ins    BYTE PTR es:[edi],dx
  40b829:	cmc    
  40b82a:	out    0x14,al
  40b82c:	pop    ebx
  40b82d:	add    eax,DWORD PTR [edx+0x0]
  40b830:	mov    dh,0x3e
  40b832:	cli    
  40b833:	cmp    ch,ah
  40b835:	sub    BYTE PTR [esi+0x57],dl
  40b838:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b839:	f2xm1  
  40b83b:	adc    DWORD PTR [edi-0xb],ebp
  40b83e:	pop    ecx
  40b83f:	enter  0x3571,0x2
  40b843:	inc    DWORD PTR [ecx]
  40b845:	ror    dh,1
  40b847:	mov    ah,BYTE PTR [ecx-0x3]
  40b84a:	pop    ecx
  40b84b:	aam    0xf9
  40b84d:	xor    al,0x2
  40b84f:	mov    esi,ebp
  40b851:	add    bh,ah
  40b853:	xor    eax,0x4d7ac798
  40b858:	daa    
  40b859:	pop    ebp
  40b85a:	loop   0x40b8a9
  40b85c:	out    dx,eax
  40b85d:	hlt    
  40b85e:	jl     0x40b8a0
  40b860:	aaa    
  40b861:	or     BYTE PTR ds:0x337b60ff,ch
  40b867:	or     BYTE PTR [edi],al
  40b869:	add    eax,0x8e2f4035
  40b86e:	inc    ecx
  40b86f:	or     al,0x60
  40b871:	out    dx,al
  40b872:	jecxz  0x40b84a
  40b874:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b875:	mov    esi,0x4ee88fc
  40b87a:	jns    0x40b8c1
  40b87c:	aaa    
  40b87d:	shr    BYTE PTR [ecx],0x58
  40b880:	sub    edx,ecx
  40b882:	or     edi,DWORD PTR [ecx]
  40b884:	add    BYTE PTR [eax],al
  40b886:	xlat   BYTE PTR ds:[ebx]
  40b887:	cld    
  40b888:	ins    DWORD PTR es:[edi],dx
  40b889:	adc    dh,dh
  40b88b:	in     al,dx
  40b88c:	clc    
  40b88d:	jae    0x40b8c9
  40b88f:	fsubrp st(0),st
  40b891:	dec    ebx
  40b892:	aas    
  40b893:	mov    ch,bh
  40b895:	xor    bh,ch
  40b897:	sahf   
  40b898:	pusha  
  40b899:	sub    ebp,DWORD PTR ds:[ecx-0x19e8ab56]
  40b8a0:	lds    eax,FWORD PTR [ebx]
  40b8a2:	das    
  40b8a3:	push   edi
  40b8a4:	push   ds
  40b8a5:	cld    
  40b8a6:	stc    
  40b8a7:	int3   
  40b8a8:	jbe    0x40b8b9
  40b8aa:	sub    esi,ecx
  40b8ac:	daa    
  40b8ad:	add    al,0xb6
  40b8af:	in     al,0x19
  40b8b1:	les    eax,FWORD PTR [ebp+0x273e7321]
  40b8b7:	lods   eax,DWORD PTR ds:[esi]
  40b8b8:	in     al,dx
  40b8b9:	sbb    eax,0x53e7de2b
  40b8be:	mov    dl,bl
  40b8c0:	call   0x3eede7c8
  40b8c5:	movzx  esi,ax
  40b8c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8c9:	add    ebp,DWORD PTR [edx+0x5efcb51e]
  40b8cf:	push   ds
  40b8d0:	adc    esp,ebp
  40b8d2:	mov    al,ds:0xea78e805
  40b8d7:	aad    0x62
  40b8d9:	push   eax
  40b8da:	dec    ebx
  40b8db:	(bad)  
  40b8dc:	mov    dh,0x82
  40b8de:	outs   dx,DWORD PTR ds:[esi]
  40b8df:	in     al,0xe9
  40b8e1:	add    ebp,DWORD PTR [edi]
  40b8e3:	idiv   BYTE PTR [edx+esi*8+0x78]
  40b8e7:	add    eax,0xc46d
  40b8ec:	sti    
  40b8ed:	jmp    DWORD PTR [edx+0x36]
  40b8f0:	aaa    
  40b8f1:	inc    esi
  40b8f2:	out    0xe4,eax
  40b8f4:	popa   
  40b8f5:	test   DWORD PTR [eax-0x7e],esi
  40b8f8:	or     ah,bl
  40b8fa:	out    0x3,eax
  40b8fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8fd:	xchg   esp,eax
  40b8fe:	fistp  QWORD PTR [edx-0x51]
  40b901:	retf   0x3ed
  40b904:	das    
  40b905:	pop    ecx
  40b906:	es cld 
  40b908:	fst    st(0)
  40b90a:	add    BYTE PTR [edx-0x18c6934b],dl
  40b910:	sub    al,0xde
  40b912:	mov    DWORD PTR [edi],ebp
  40b914:	and    edx,DWORD PTR [esi-0x67]
  40b917:	fstp   QWORD PTR [edx]
  40b919:	add    eax,0xd65262fe
  40b91e:	xchg   DWORD PTR [ecx+0x6c],esi
  40b921:	fadd   QWORD PTR [eax]
  40b923:	jmp    0xa64954af
  40b928:	lods   al,BYTE PTR ds:[esi]
  40b929:	mov    al,ds:0xdf2ce906
  40b92e:	add    cl,ch
  40b930:	sub    al,0x59
  40b932:	inc    edi
  40b933:	icebp  
  40b934:	gs ins DWORD PTR es:[edi],dx
  40b936:	dec    ecx
  40b937:	out    0x2c,eax
  40b939:	fimul  WORD PTR [ecx-0x38302b51]
  40b93f:	mov    DWORD PTR [ebp+0x5d],0xde2cef51
  40b946:	mov    DWORD PTR [edi-0x6466a34c],esp
  40b94c:	mov    dl,0x4
  40b94e:	(bad)  
  40b94f:	bound  eax,QWORD PTR [eax]
  40b951:	add    BYTE PTR [edx-0x2a],ch
  40b954:	push   0x9e5a53
  40b959:	in     al,0xfe
  40b95b:	fadd   QWORD PTR [eax]
  40b95d:	jmp    0x554be5e
  40b962:	push   ds
  40b963:	sahf   
  40b964:	add    BYTE PTR [edx+0x42],dh
  40b967:	(bad)  
  40b968:	push   0xffffffea
  40b96a:	aam    0x35
  40b96c:	dec    edi
  40b96d:	test   eax,0xe152db2c
  40b972:	sub    al,0xde
  40b974:	push   eax
  40b975:	out    0x66,al
  40b977:	fcom   QWORD PTR [ecx]
  40b979:	sub    DWORD PTR [ebx],esi
  40b97b:	pop    ecx
  40b97c:	inc    edi
  40b97d:	loope  0x40b995
  40b97f:	push   ebx
  40b980:	mov    DWORD PTR [ecx],ebx
  40b982:	xor    eax,0x270000de
  40b987:	jb     0x40b924
  40b989:	xchg   esp,eax
  40b98a:	push   es
  40b98b:	fisubr DWORD PTR [eax+0x63]
  40b98e:	rcr    BYTE PTR [ecx-0x79b29800],cl
  40b994:	cmp    eax,0x94e33e00
  40b999:	inc    eax
  40b99a:	push   es
  40b99b:	js     0x40b9be
  40b99d:	xchg   esp,eax
  40b99e:	inc    esi
  40b99f:	fisubr DWORD PTR [eax+0xb]
  40b9a2:	sbb    BYTE PTR [edx-0x742d9800],0x3d
  40b9a9:	add    BYTE PTR [esi],bl
  40b9ab:	mov    dl,0x8f
  40b9ad:	inc    eax
  40b9ae:	push   es
  40b9af:	js     0x40b9cf
  40b9b1:	xchg   ecx,eax
  40b9b2:	push   ss
  40b9b3:	fimul  DWORD PTR [ebx-0x25ffffb2]
  40b9b9:	ja     0x40ba31
  40b9bb:	xchg   ebp,eax
  40b9bc:	xchg   bh,bl
  40b9be:	dec    edi
  40b9bf:	call   DWORD PTR [esi-0x31b17625]
  40b9c5:	push   edx
  40b9c6:	add    DWORD PTR [ebx-0x3b7e2870],ecx
  40b9cc:	ret    0xc7ec
  40b9cf:	cmp    esi,ebx
  40b9d1:	les    ecx,FWORD PTR ds:0xc29f5695
  40b9d7:	add    al,0x96
  40b9d9:	push   esp
  40b9da:	inc    esp
  40b9db:	add    al,0xde
  40b9dd:	stos   DWORD PTR es:[edi],eax
  40b9de:	add    DWORD PTR [eax-0x4d],ecx
  40b9e1:	or     ecx,DWORD PTR [ebx+0x365c8e46]
  40b9e7:	add    BYTE PTR [edx],al
  40b9e9:	sar    ebp,cl
  40b9eb:	xor    BYTE PTR [ecx-0x31],bh
  40b9ee:	adc    BYTE PTR [ebx+0x2081d7c0],cl
  40b9f4:	push   esi
  40b9f5:	ret    0x55c1
  40b9f8:	(bad)  
  40b9fa:	sub    ah,0x4a
  40b9fd:	int3   
  40b9fe:	push   ebp
  40b9ff:	jmp    FWORD PTR [edi]
  40ba01:	mov    ds:0x1122ff10,al
  40ba06:	hlt    
  40ba07:	aas    
  40ba08:	das    
  40ba09:	nop
  40ba0a:	fnstenv [edx]
  40ba0c:	push   esp
  40ba0d:	jb     0x40ba59
  40ba0f:	jmp    DWORD PTR [esi-0x75772716]
  40ba15:	xor    DWORD PTR [ecx],esp
  40ba17:	(bad)  
  40ba18:	das    
  40ba19:	cmc    
  40ba1a:	add    DWORD PTR [edi],ecx
  40ba1c:	add    BYTE PTR [eax],al
  40ba1e:	mov    al,0x87
  40ba20:	add    DWORD PTR [eax],eax
  40ba22:	das    
  40ba23:	or     BYTE PTR [edi+0x8],0xb4
  40ba27:	leave  
  40ba28:	or     al,0x68
  40ba2a:	sub    esi,esi
  40ba2c:	add    DWORD PTR [eax],eax
  40ba2e:	lods   al,BYTE PTR ds:[esi]
  40ba2f:	xor    eax,0x8535e7f8
  40ba34:	add    DWORD PTR [eax],eax
  40ba36:	mov    dl,0x34
  40ba38:	pop    ecx
  40ba39:	jl     0x40bab3
  40ba3b:	jl     0x40ba95
  40ba3d:	or     al,0xaa
  40ba3f:	cmp    esi,edx
  40ba41:	dec    edi
  40ba42:	(bad)  
  40ba43:	mov    ecx,0x792f008e
  40ba48:	shl    DWORD PTR [ebx+0x54],0x76
  40ba4c:	pusha  
  40ba4d:	cld    
  40ba4e:	das    
  40ba4f:	test   BYTE PTR [ecx],0x0
  40ba52:	xor    esp,DWORD PTR [edx]
  40ba54:	aaa    
  40ba55:	push   edi
  40ba56:	test   al,0x49
  40ba58:	push   cs
  40ba59:	push   ebx
  40ba5a:	xchg   edi,eax
  40ba5b:	push   es
  40ba5c:	retf   
  40ba5d:	add    BYTE PTR [edi],ch
  40ba5f:	nop
  40ba60:	(bad)  [edx+0x5789fce9]
  40ba66:	and    esp,eax
  40ba68:	or     ecx,DWORD PTR [ebx+0x7c8f0ce9]
  40ba6e:	cmp    DWORD PTR [edx+0x502e1441],0xffffffdf
  40ba75:	jae    0x40ba8e
  40ba77:	add    BYTE PTR [edi+0x8],0xd5
  40ba7b:	fucomp st(0)
  40ba7d:	imul   edx,esi,0x68
  40ba80:	sub    BYTE PTR [eax+eax*1],al
  40ba83:	add    bh,al
  40ba85:	mov    edi,DWORD PTR [esp+eax*2+0x2f]
  40ba89:	jbe    0x40bae4
  40ba8b:	ja     0x40ba8d
  40ba8d:	ficomp WORD PTR [edx]
  40ba8f:	cmp    edi,eax
  40ba91:	xor    DWORD PTR [esi],ebp
  40ba93:	inc    esp
  40ba94:	das    
  40ba95:	add    edi,eax
  40ba97:	loopne 0x40bb11
  40ba99:	(bad)  
  40ba9a:	push   0xffffffc8
  40ba9c:	inc    eax
  40ba9d:	pop    ebx
  40ba9e:	test   al,0x11
  40baa0:	ret    0xe31d
  40baa3:	pop    esi
  40baa4:	sbb    ecx,DWORD PTR [ebx-0x41e8c713]
  40baaa:	retf   
  40baab:	add    ebp,DWORD PTR [edi]
  40baad:	add    ebp,edi
  40baaf:	xlat   BYTE PTR ds:[ebx]
  40bab0:	adc    dh,ah
  40bab2:	mov    ebx,0xab542f03
  40bab7:	in     eax,dx
  40bab8:	ss add ebp,esi
  40babb:	xlat   BYTE PTR ds:[ebx]
  40babc:	enter  0x23d1,0x4
  40bac0:	das    
  40bac1:	int3   
  40bac2:	daa    
  40bac3:	inc    ecx
  40bac4:	je     0x40badd
  40bac6:	sub    cl,BYTE PTR [edi+ebp*1]
  40bac9:	stos   DWORD PTR es:[edi],eax
  40baca:	(bad)  
  40bacb:	lock mov ch,0x9b
  40bace:	repz add ah,0xd6
  40bad2:	jmp    0x6ae9e9da
  40bad7:	les    edx,FWORD PTR [esi+ebp*4+0x2e]
  40badb:	push   edi
  40badc:	aaa    
  40badd:	push   ebx
  40bade:	ins    DWORD PTR es:[edi],dx
  40badf:	fcomp  QWORD PTR [ebx-0x5bcbe0ff]
  40bae5:	pop    es
  40bae6:	add    BYTE PTR [ebx],cl
  40bae8:	add    BYTE PTR [eax],al
  40baea:	sbb    al,0xde
  40baec:	out    0x86,eax
  40baee:	ror    BYTE PTR [edx-0x2e0e7336],0x95
  40baf5:	mov    ecx,?
  40baf7:	fld    DWORD PTR [eax]
  40baf9:	fs mov bh,0x9a
  40bafc:	clc    
  40bafd:	in     al,dx
  40bafe:	dec    edi
  40baff:	add    BYTE PTR [ecx+0x74],dl
  40bb02:	mov    cl,0x9
  40bb04:	cld    
  40bb05:	fimul  WORD PTR [edi-0x6f]
  40bb08:	call   0xfe4109e7
  40bb0d:	das    
  40bb0e:	mov    bh,0x41
  40bb10:	jne    0x40bafc
  40bb12:	dec    edi
  40bb13:	cwde   
  40bb14:	or     dl,bh
  40bb16:	ins    BYTE PTR es:[edi],dx
  40bb17:	mov    al,ds:0xde34abc7
  40bb1c:	xor    DWORD PTR [ecx-0x16f2e394],ebp
  40bb22:	popa   
  40bb23:	push   ebp
  40bb24:	in     eax,dx
  40bb25:	push   0x0
  40bb27:	int    0x51
  40bb29:	aas    
  40bb2a:	and    ah,BYTE PTR ds:0x99b1dd6b
  40bb30:	fcomp  QWORD PTR [edx]
  40bb32:	inc    ebx
  40bb33:	push   edi
  40bb34:	pop    esp
  40bb35:	cdq    
  40bb36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb37:	mov    eax,ds:0x262960d4
  40bb3c:	(bad)  
  40bb3d:	aam    0x1c
  40bb3f:	call   0x1cf4a484
  40bb44:	or     eax,0x882e796c
  40bb49:	mov    ah,0xd4
  40bb4b:	clc    
  40bb4c:	ror    BYTE PTR [ebp+0x0],0x0
  40bb50:	iret   
  40bb51:	inc    DWORD PTR [ecx+ebp*1-0x165ba5e1]
  40bb58:	sub    al,0xde
  40bb5a:	std    
  40bb5b:	mov    esp,0x2c63f634
  40bb60:	(bad)  
  40bb61:	inc    DWORD PTR [ecx+ebp*1-0x166ba5c1]
  40bb68:	sub    al,0xde
  40bb6a:	mov    DWORD PTR [esi+0x39445330],ebx
  40bb70:	inc    esi
  40bb71:	sbb    DWORD PTR [eax+eax*1+0x22],eax
  40bb75:	ror    DWORD PTR [ebp+0x40],1
  40bb78:	xchg   BYTE PTR [ebx+0x45],dl
  40bb7b:	lock iret 
  40bb7d:	mov    edi,0x207bfff4
  40bb82:	adc    BYTE PTR [eax+0x46],al
  40bb85:	push   ecx
  40bb86:	inc    ebp
  40bb87:	clc    
  40bb88:	or     eax,0xf80c741d
  40bb8d:	pop    esp
  40bb8e:	jp     0x40bbd6
  40bb90:	jo     0x40bb2f
  40bb92:	je     0x40bb98
  40bb94:	push   es
  40bb95:	push   ebx
  40bb96:	inc    ebp
  40bb97:	clc    
  40bb98:	jno    0x40bb42
  40bb9a:	add    al,0x8d
  40bb9c:	pop    ebx
  40bb9d:	push   cs
  40bb9e:	mov    ecx,edi
  40bba0:	(bad)  
  40bba1:	xlat   BYTE PTR ds:[ebx]
  40bba2:	call   0x11bdd43
  40bba7:	cmp    DWORD PTR [ebx+0x26],edx
  40bbaa:	je     0x40bbca
  40bbac:	lea    edx,[ebp-0x7ae79728]
  40bbb2:	cmp    eax,0x1e000000
  40bbb7:	lods   al,BYTE PTR ds:[esi]
  40bbb8:	xchg   ebx,eax
  40bbb9:	inc    eax
  40bbba:	push   es
  40bbbb:	int    0xfd
  40bbbd:	xor    BYTE PTR [ecx-0x36],ah
  40bbc0:	or     al,0x83
  40bbc2:	mov    cl,BYTE PTR [edx]
  40bbc4:	les    eax,FWORD PTR [ebp-0x23]
  40bbc7:	fiadd  DWORD PTR [ebx-0x77230440]
  40bbcd:	pop    ebp
  40bbce:	int    0x6e
  40bbd0:	jne    0x40bba2
  40bbd2:	or     DWORD PTR [ebp-0x647f0314],edx
  40bbd8:	add    al,ch
  40bbda:	mov    edi,0xdffff21
  40bbdf:	xchg   ebp,eax
  40bbe0:	aam    0x48
  40bbe2:	fcmovu st,st(4)
  40bbe4:	dec    eax
  40bbe5:	jne    0x40bb85
  40bbe7:	and    BYTE PTR [ebp-0x28],dh
  40bbea:	ds icebp 
  40bbec:	aaa    
  40bbed:	add    BYTE PTR [edi],ch
  40bbef:	cmc    
  40bbf0:	sbb    al,0x5d
  40bbf2:	pop    edi
  40bbf3:	imul   ecx,DWORD PTR ds:0xdde502ff,0x42242b14
  40bbfd:	add    BYTE PTR [ebp+0x16eb0b32],dh
  40bc03:	mov    ds:0x1a47d057,al
  40bc08:	loope  0x40bc08
  40bc0a:	push   eax
  40bc0b:	mov    WORD PTR [eax-0x2c],cs
  40bc0e:	mul    DWORD PTR [eax-0x345b7ff]
  40bc14:	fidiv  WORD PTR [edi+edx*2+0x2d]
  40bc18:	mov    eax,ds:0x2f000039
  40bc1d:	cmc    
  40bc1e:	sbb    al,0x5d
  40bc20:	inc    eax
  40bc22:	or     edi,edi
  40bc24:	call   0x4204:0x3314df65
  40bc2b:	add    BYTE PTR [ebp+0x35],bl
  40bc2e:	cmp    al,0x5b
  40bc30:	div    BYTE PTR [edx]
  40bc32:	push   es
  40bc33:	add    BYTE PTR [esi+esi*4+0xef8508],dh
  40bc3a:	or     edx,DWORD PTR [eax-0x10]
  40bc3d:	sub    DWORD PTR [edx-0x7d0a90ef],edi
  40bc43:	gs sub esi,ebp
  40bc46:	mov    al,BYTE PTR ds:0xa55b4b2
  40bc4c:	jg     0x40bbee
  40bc4e:	clc    
  40bc4f:	mov    edi,0x8302351d
  40bc54:	or     ebp,esi
  40bc56:	ret    0x1f67
  40bc59:	hlt    
  40bc5a:	add    DWORD PTR [eax],eax
  40bc5c:	inc    edi
  40bc5d:	lods   eax,DWORD PTR ds:[esi]
  40bc5e:	push   esi
  40bc5f:	inc    ebx
  40bc60:	das    
  40bc61:	popf   
  40bc62:	neg    dl
  40bc64:	sub    eax,0xa6ff12f5
  40bc69:	frstor [ebx+eiz*8+0x693b80a7]
  40bc70:	sub    eax,0xeb90bea7
  40bc75:	std    
  40bc76:	mov    bh,0xde
  40bc78:	add    edx,edx
  40bc7a:	push   es
  40bc7b:	sbb    BYTE PTR [ebx],ah
  40bc7d:	and    DWORD PTR [ebx-0x2afffffd],ebp
  40bc83:	(bad)  
  40bc84:	bound  ebx,QWORD PTR [eax]
  40bc86:	imul   ebp,ebx,0xffffffa7
  40bc89:	add    ebx,DWORD PTR [eax+0x27]
  40bc8c:	ins    DWORD PTR es:[edi],dx
  40bc8d:	(bad)  
  40bc8e:	fcmovnbe st,st(6)
  40bc90:	sbb    esp,eax
  40bc92:	push   edi
  40bc93:	repz out 0x3,eax
  40bc96:	das    
  40bc97:	je     0x40bc82
  40bc99:	xor    al,0xe0
  40bc9b:	push   eax
  40bc9c:	sub    eax,0x34fee0c0
  40bca1:	adc    BYTE PTR [eax],ch
  40bca3:	mov    ah,0xd7
  40bca5:	mov    esi,0xdd41de6d
  40bcaa:	sbb    DWORD PTR ds:0xfe9cc46d,edx
  40bcb0:	nop/reserved BYTE PTR [edi]
  40bcb3:	fsubrp st(7),st
  40bcb5:	imul   esi,DWORD PTR [edi],0xe12bd4fd
  40bcbb:	mov    eax,ds:0x8a1bdce7
  40bcc0:	fld    DWORD PTR [ebx+0x2f]
  40bcc3:	imul   edx,DWORD PTR [eax-0x4ce97c75],0xd2225cbc
  40bccd:	add    dl,BYTE PTR [edi+0x2f03e7fd]
  40bcd3:	push   es
  40bcd4:	ret    
  40bcd5:	test   al,0xfd
  40bcd8:	pop    edi
  40bcd9:	add    DWORD PTR [eax-0x52],edi
  40bcdc:	out    dx,eax
  40bcdd:	add    ebp,DWORD PTR [edi]
  40bcdf:	addr16 ret 
  40bce1:	pop    es
  40bce2:	jo     0x40bc85
  40bce4:	add    ch,ah
  40bce6:	add    BYTE PTR [eax],al
  40bce8:	dec    ebp
  40bce9:	fiadd  WORD PTR [eax]
  40bceb:	jmp    0xb9515d99
  40bcf0:	test   BYTE PTR [esi+0x53],dl
  40bcf3:	jmp    0x9852624
  40bcf8:	mov    ah,0xa0
  40bcfa:	cmp    al,0x62
  40bcfc:	lock sbb DWORD PTR [eax-0x4b951356],ecx
  40bd03:	or     ecx,DWORD PTR [edi-0x4]
  40bd06:	std    
  40bd07:	add    DWORD PTR [ecx+0x3c],edi
  40bd0a:	add    cl,ch
  40bd0c:	sbb    al,0x6
  40bd0e:	xchg   esi,eax
  40bd0f:	test   al,0x2d
  40bd11:	fidiv  WORD PTR [edi+0xde2dcf]
  40bd17:	bound  ebp,QWORD PTR [edx+0x23]
  40bd1a:	add    ecx,ebp
  40bd1c:	in     al,dx
  40bd1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd1e:	jae    0x40bce0
  40bd20:	imul   esp,DWORD PTR [edx-0x2f],0xffffffbf
  40bd24:	or     edi,esp
  40bd26:	add    al,0xe9
  40bd28:	sub    al,0xde
  40bd2a:	mov    DWORD PTR [esi+0x6c8befa7],edx
  40bd30:	fdiv   st(2),st
  40bd32:	std    
  40bd33:	sahf   
  40bd34:	adc    al,0xe9
  40bd36:	test   eax,ebp
  40bd38:	sub    al,0x24
  40bd3a:	inc    esp
  40bd3b:	fisubr WORD PTR ds:0x2c856461
  40bd41:	imul   esi,DWORD PTR [ecx+esi*8+0xb],0x2b030873
  40bd49:	std    
  40bd4a:	jbe    0x40bd31
  40bd4c:	add    BYTE PTR [eax],al
  40bd4e:	sti    
  40bd4f:	rcl    DWORD PTR [eax-0x1],1
  40bd52:	ins    BYTE PTR es:[edi],dx
  40bd53:	fiadd  WORD PTR [ecx+0x51953825]
  40bd59:	push   esi
  40bd5a:	pop    edx
  40bd5b:	loop   0x40bd5a
  40bd5d:	hlt    
  40bd5e:	push   0xc60040d4
  40bd63:	pop    ebp
  40bd64:	ret    0x150c
  40bd67:	lods   al,BYTE PTR ds:[esi]
  40bd68:	cld    
  40bd69:	(bad)  
  40bd6a:	in     eax,dx
  40bd6b:	out    dx,al
  40bd6c:	xor    al,al
  40bd6e:	(bad)  
  40bd6f:	sbb    eax,0x233e658b
  40bd74:	inc    ebp
  40bd75:	setbe  BYTE PTR [ebp+0x4d]
  40bd79:	cld    
  40bd7a:	sbb    DWORD PTR [esi+0x5d],esp
  40bd7d:	fdiv   DWORD PTR [ebp-0x79c6a1f8]
  40bd83:	loopne 0x40bd0f
  40bd85:	inc    ebp
  40bd86:	pop    ecx
  40bd87:	or     BYTE PTR ds:0xc2e054da,dh
  40bd8d:	or     BYTE PTR [esi-0x4d],al
  40bd90:	mov    esp,ebp
  40bd92:	mov    DWORD PTR ds:0xe0560576,0x56cb5756
  40bd9c:	xchg   dl,bh
  40bd9e:	imul   ebx,DWORD PTR [eax],0xe2034fe6
  40bda4:	add    BYTE PTR [ebx+0x78662a63],cl
  40bdaa:	adc    esp,eax
  40bdac:	add    BYTE PTR [ebx+0x50008cd1],cl
  40bdb2:	add    BYTE PTR [eax],al
  40bdb4:	leave  
  40bdb5:	in     eax,dx
  40bdb6:	dec    ebp
  40bdb7:	push   ss
  40bdb8:	push   esi
  40bdb9:	loop   0x40bd3c
  40bdbb:	les    ecx,FWORD PTR [edx]
  40bdbd:	pop    edi
  40bdbe:	(bad)  [esp+eax*1+0x6b]
  40bdc2:	xor    esi,DWORD PTR [ebx]
  40bdc4:	(bad)  
  40bdc5:	pop    ebp
  40bdc6:	hlt    
  40bdc7:	pop    edi
  40bdc8:	(bad)  [ebx+0x238f5ebd]
  40bdce:	data16 and al,0xc7
  40bdd1:	fild   WORD PTR [eax]
  40bdd3:	push   0x418f6e
  40bdd8:	pop    esi
  40bdd9:	dec    ebx
  40bdda:	fld    DWORD PTR [edx]
  40bddc:	das    
  40bddd:	add    eax,0x4aa6db17
  40bde2:	loop   0x40bd70
  40bde4:	push   0xffffffd9
  40bde6:	xor    al,0xff
  40bde8:	inc    edx
  40bde9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdea:	idiv   BYTE PTR [edi]
  40bdec:	das    
  40bded:	push   ebp
  40bdee:	fist   DWORD PTR [edi+esi*8]
  40bdf1:	pop    ss
  40bdf2:	inc    edx
  40bdf3:	add    BYTE PTR [esi+0x6c3ab64a],ah
  40bdf9:	or     al,0x7e
  40bdfb:	ucomiss xmm0,DWORD PTR ds:0xb0da3902
  40be02:	pop    edx
  40be03:	cmp    eax,0x8ab64aa4
  40be08:	and    edi,DWORD PTR [ebp+0x7f]
  40be0b:	cmc    
  40be0c:	fistp  DWORD PTR [esp+ebp*2]
  40be0f:	add    al,bh
  40be11:	sub    BYTE PTR [ebx+0x40],cl
  40be14:	das    
  40be15:	mov    ebx,0x14d9
  40be1a:	mov    edi,eax
  40be1c:	inc    ecx
  40be1d:	add    BYTE PTR [edx-0x55e9aebb],ch
  40be23:	mov    bl,0x0
  40be25:	lea    esi,[edx+0x3295ea3c]
  40be2b:	add    eax,0xb9ef8502
  40be30:	add    DWORD PTR [ebx-0x407eb28e],ecx
  40be36:	call   0x5631:0x6a3b46ed
  40be3d:	enter  0x814,0x8d
  40be41:	inc    esp
  40be42:	(bad)  
  40be44:	push   ecx
  40be45:	fdivr  st(0),st
  40be47:	sbb    DWORD PTR [edx],esp
  40be49:	adc    ebp,DWORD PTR [edi+0x5]
  40be4c:	xchg   DWORD PTR [edi+ecx*8+0x4],edi
  40be50:	or     eax,DWORD PTR [esp+edx*4-0x53fffdfc]
  40be57:	fucom  st(4)
  40be59:	jecxz  0x40be24
  40be5b:	jmp    0x99e7:0xfac09463
  40be62:	mov    eax,0x5903e7ea
  40be67:	push   es
  40be68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be69:	sbb    ebp,DWORD PTR [edi]
  40be6b:	fidiv  WORD PTR [edx-0x25]
  40be6e:	mov    bh,0x78
  40be70:	jo     0x7ca4a90f
  40be76:	nop
  40be77:	cli    
  40be78:	out    0x31,eax
  40be7a:	adc    eax,0x391de
  40be7f:	add    BYTE PTR ds:0x7836b2e2,dl
  40be85:	jo     0x40be8e
  40be87:	ficomp DWORD PTR [ebx]
  40be89:	sbb    bl,dl
  40be8b:	inc    ebx
  40be8c:	das    
  40be8d:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40be8f:	mov    bh,0xab
  40be91:	sbb    eax,0x80ac457c
  40be96:	jmp    0x40be9a
  40be98:	stc    
  40be99:	lea    edi,[esi]
  40be9b:	fldenv [ebx]
  40be9d:	stos   BYTE PTR es:[edi],al
  40be9e:	cmc    
  40be9f:	inc    ebx
  40bea0:	das    
  40bea1:	pop    edi
  40bea2:	lods   al,BYTE PTR ds:[esi]
  40bea3:	or     BYTE PTR [esi+0x31da9c58],ah
  40bea9:	cli    
  40beaa:	jb     0x40be5e
  40beac:	mov    ch,0x29
  40beae:	ins    DWORD PTR es:[edi],dx
  40beaf:	jg     0x40bea5
  40beb1:	clc    
  40beb2:	mov    dh,0xd9
  40beb4:	adc    BYTE PTR [edi+0x66],cl
  40beb7:	add    ebp,DWORD PTR [edi]
  40beb9:	pop    ebp
  40beba:	xor    eax,0xee0609d8
  40bebf:	adc    al,0xef
  40bec1:	sahf   
  40bec2:	stos   BYTE PTR es:[edi],al
  40bec3:	lea    edx,[ebx-0xcb894fa]
  40bec9:	stc    
  40beca:	jb     0x40bf23
  40becc:	pop    es
  40becd:	cli    
  40bece:	hlt    
  40becf:	mov    bh,0xe1
  40bed1:	rol    DWORD PTR [eax],cl
  40bed3:	xchg   ecx,eax
  40bed4:	loope  0x40be8f
  40bed6:	add    BYTE PTR [ecx],dh
  40bed8:	cmp    esp,esi
  40beda:	add    cl,ch
  40bedc:	and    eax,0x29d504a1
  40bee1:	xchg   ecx,eax
  40bee2:	mov    DWORD PTR [eax+eax*1+0x57062400],esi
  40bee9:	jmp    0xe99a:0x218ade2c
  40bef0:	push   eax
  40bef1:	xchg   esi,eax
  40bef2:	xchg   DWORD PTR [edx+0x8],esi
  40bef5:	mov    BYTE PTR ss:[ebp+0x5d2ca916],ah
  40befc:	(bad)
  40beff:	ficom  WORD PTR [ebp+0x11]
  40bf02:	xchg   esp,eax
  40bf03:	mov    al,0x0
  40bf05:	jmp    0xdcb5d302
  40bf0a:	push   edi
  40bf0b:	jb     0x40beed
  40bf0d:	push   es
  40bf0e:	pop    eax
  40bf0f:	cmp    DWORD PTR [ebx],edx
  40bf11:	test   eax,0x2002e2c
  40bf16:	xor    DWORD PTR [eax+eax*8+0x3118501],ebp
  40bf1d:	jmp    0xd5419c94
  40bf22:	xor    al,0x16
  40bf24:	ss sub al,0xda
  40bf27:	xor    bl,BYTE PTR [ecx+0x64]
  40bf2a:	lods   eax,DWORD PTR ds:[esi]
  40bf2b:	lods   eax,DWORD PTR ds:[esi]
  40bf2c:	mov    ah,0xbb
  40bf2e:	fnstcw WORD PTR [ebx-0x7b]
  40bf31:	inc    ebx
  40bf32:	xor    DWORD PTR [esi-0x70],edi
  40bf35:	js     0x40bf5b
  40bf37:	sub    ebx,DWORD PTR [ebp-0x53]
  40bf3a:	jns    0x40bf61
  40bf3c:	dec    edx
  40bf3d:	int3   
  40bf3e:	jae    0x40bedf
  40bf40:	mov    cl,0x7a
  40bf42:	imul   ebx,DWORD PTR [ebx],0x4e
  40bf45:	dec    eax
  40bf46:	mov    bl,0xac
  40bf48:	xor    al,0xad
  40bf4a:	add    BYTE PTR [eax],al
  40bf4c:	mov    ds:0x7900bfb1,eax
  40bf51:	fisttp QWORD PTR [ecx-0x48]
  40bf54:	push   esi
  40bf55:	sub    BYTE PTR [eax],dh
  40bf57:	aaa    
  40bf58:	shl    BYTE PTR [ebp+0x15],0xc7
  40bf5c:	or     dl,ch
  40bf5e:	jno    0x40bee8
  40bf60:	cmp    ah,BYTE PTR [ebx-0x6e984cc0]
  40bf66:	pop    ds
  40bf67:	js     0x40befe
  40bf69:	and    DWORD PTR [edx],esi
  40bf6b:	aas    
  40bf6c:	push   0x4b74b122
  40bf71:	pusha  
  40bf72:	mov    bh,0x4c
  40bf74:	ror    BYTE PTR ds:0x31c0de3d,0xcb
  40bf7b:	mov    eax,ds:0xb4716bd7
  40bf80:	pop    esp
  40bf81:	test   al,0xb7
  40bf83:	call   0xfa1ae193
  40bf88:	and    DWORD PTR [edx+0x32],0xb0e6dbde
  40bf8f:	nop
  40bf90:	jmp    0x67f4f1f7
  40bf95:	dec    ebx
  40bf96:	out    dx,eax
  40bf97:	out    0x72,eax
  40bf99:	or     eax,0xa964900e
  40bf9e:	leave  
  40bf9f:	pop    esp
  40bfa0:	cmp    eax,0x41b43174
  40bfa5:	jmp    0x40bf86
  40bfa7:	mul    DWORD PTR [edi-0x60350e09]
  40bfad:	fbstp  TBYTE PTR [eax-0x70]
  40bfb0:	add    BYTE PTR [eax],al
  40bfb2:	scas   eax,DWORD PTR es:[edi]
  40bfb3:	sub    esp,DWORD PTR [eax+0x4b]
  40bfb6:	mov    ebx,0xdd5c2a57
  40bfbb:	xor    dh,BYTE PTR gs:[edx+ebp*1+0x3721399b]
  40bfc3:	pop    ecx
  40bfc4:	test   ecx,0x9078ea5e
  40bfca:	das    
  40bfcb:	xchg   esi,eax
  40bfcc:	xchg   esp,eax
  40bfcd:	repz fstp QWORD PTR ds:0x8adfb880
  40bfd4:	shl    DWORD PTR [ebx-0x7d],0xaf
  40bfd8:	inc    ecx
  40bfd9:	xor    eax,0xca833ca3
  40bfde:	out    dx,eax
  40bfdf:	sub    BYTE PTR [ebp-0x48],0xbf
  40bfe3:	mov    cl,cl
  40bfe5:	arpl   WORD PTR [ebx+0x36],sp
  40bfe8:	test   eax,0x41ea8334
  40bfed:	inc    ecx
  40bfee:	(bad)  
  40bfef:	in     eax,dx
  40bff0:	push   0x766e335
  40bff5:	jo     0x40bfb6
  40bff7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bff8:	or     DWORD PTR [ebx+eiz*4],ebp
  40bffb:	popf   
  40bffc:	into   
  40bffd:	int    0xf2
  40bfff:	mov    eax,ds:0x10f4cb58
  40c004:	mov    edi,0xafd6cb0f
  40c009:	fisttp DWORD PTR [eax]
  40c00b:	jne    0x40bf8e
  40c00d:	xor    edi,DWORD PTR [edi]
  40c00f:	iretw  
  40c011:	and    eax,0x239dea26
  40c016:	add    BYTE PTR [eax],al
  40c018:	dec    ebx
  40c019:	and    eax,0xa6a2e83e
  40c01e:	and    DWORD PTR [edx+0x4d],0x816d533e
  40c025:	sbb    dx,bx
  40c028:	jp     0x40c090
  40c02a:	and    DWORD PTR [ecx-0xa],0x29
  40c02e:	lahf   
  40c02f:	outs   dx,DWORD PTR ds:[esi]
  40c030:	dec    ebx
  40c031:	ds sbb ebp,esi
  40c034:	and    BYTE PTR [esi+0x56],ah
  40c037:	and    DWORD PTR [edi],esp
  40c039:	jo     0x40bffd
  40c03b:	xor    esp,DWORD PTR [eax-0x56]
  40c03e:	test   DWORD PTR [eax-0x443d7de1],edi
  40c044:	fcmovnu st,st(5)
  40c046:	mov    al,cl
  40c048:	outs   dx,DWORD PTR ds:[esi]
  40c049:	test   al,0xf8
  40c04b:	add    DWORD PTR [ebp-0x21f46dfc],0xe8ffaa04
  40c055:	xchg   ecx,eax
  40c056:	jb     0x40c03f
  40c058:	scas   eax,DWORD PTR es:[edi]
  40c059:	or     DWORD PTR [ebx+eax*1+0x2f],ecx
  40c05d:	ficomp WORD PTR [edx]
  40c05f:	cs js  0x40bfe6
  40c062:	fisttp DWORD PTR [eax+0x6bd01673]
  40c068:	fstp   DWORD PTR [edx+0x37d412e7]
  40c06e:	call   0xb8377166
  40c073:	mov    WORD PTR [ebx],cs
  40c075:	div    BYTE PTR [eax+0x50]
  40c078:	mov    ds:0x47d4f6,eax
  40c07d:	add    BYTE PTR [ecx-0x62],al
  40c080:	out    0x82,eax
  40c082:	ins    BYTE PTR es:[edi],dx
  40c083:	jmp    0x861cee22
  40c088:	jmp    0x40c08d
  40c08a:	das    
  40c08b:	out    0x6c,al
  40c08d:	inc    eax
  40c08e:	push   edi
  40c08f:	lea    eax,[ecx+0x7a069d6]
  40c095:	add    al,0x2f
  40c097:	fsubrp st(7),st
  40c099:	(bad)  
  40c09a:	cmp    esp,DWORD PTR [esi]
  40c09c:	fiadd  DWORD PTR [ebx+0x2f]
  40c09f:	arpl   ax,si
  40c0a1:	mov    edx,ebx
  40c0a3:	icebp  
  40c0a4:	mov    dl,0xda
  40c0a6:	mov    esp,0xdc313dd2
  40c0ab:	and    ebp,0x2c
  40c0ae:	cmp    al,dl
  40c0b0:	mov    bl,0xf2
  40c0b2:	lock frstor [eax+0x3f]
  40c0b6:	daa    
  40c0b7:	mov    edx,0x63464faa
  40c0bc:	xor    eax,0x14f10d0
  40c0c1:	mov    dl,0xfa
  40c0c3:	hlt    
  40c0c4:	mov    esi,DWORD PTR [edi+ebx*8]
  40c0c7:	std    
  40c0c8:	mov    BYTE PTR [edx-0x56cd0b26],ah
  40c0ce:	inc    edx
  40c0cf:	xchg   esp,eax
  40c0d0:	pop    ecx
  40c0d1:	mov    al,ds:0x5100dded
  40c0d6:	shld   DWORD PTR [eax-0x17],eax,cl
  40c0da:	inc    esp
  40c0db:	xchg   ebx,eax
  40c0dc:	or     al,0xf4
  40c0de:	fldcw  WORD PTR ds:0x262d
  40c0e4:	imul   ebx,esi,0x50
  40c0e7:	push   ss
  40c0e8:	pop    ebx
  40c0e9:	scas   al,BYTE PTR es:[edi]
  40c0ea:	dec    ebp
  40c0eb:	test   eax,0x648b912c
  40c0f0:	push   esp
  40c0f2:	std    
  40c0f3:	push   esi
  40c0f4:	sti    
  40c0f5:	xchg   DWORD PTR [esi],ebx
  40c0f7:	mov    al,0x94
  40c0f9:	xchg   edi,eax
  40c0fa:	jmp    0x19d5:0xc5612ce9
  40c101:	xor    eax,0x9e052b74
  40c106:	mov    esp,DWORD PTR [eax+ebx*1-0xfeeaf70]
  40c10d:	lsl    ebp,cx
  40c110:	pop    ds
  40c111:	push   ds
  40c112:	mov    BYTE PTR [eax+edx*2-0x69fe839e],dh
  40c119:	pusha  
  40c11a:	(bad)
  40c11d:	dec    eax
  40c11e:	mov    WORD PTR [eax+edi*2-0x2353745b],fs
  40c125:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c126:	push   ecx
  40c127:	call   0x90ff:0xe86ad9d6
  40c12e:	mov    esp,DWORD PTR [eax+ecx*1-0xb]
  40c132:	std    
  40c133:	(bad)  
  40c134:	cld    
  40c135:	hlt    
  40c136:	jae    0x40c119
  40c138:	jmp    0x40c0d3
  40c13a:	nop
  40c13b:	add    BYTE PTR [edx-0x26],dl
  40c13e:	add    BYTE PTR [eax],al
  40c140:	fld    DWORD PTR [ebx]
  40c142:	rcl    BYTE PTR [edx],cl
  40c144:	inc    esi
  40c145:	fiadd  DWORD PTR [ebx+0x430000c0]
  40c14b:	fisttp DWORD PTR [ebx+0x508a275]
  40c151:	sti    
  40c152:	cdq    
  40c153:	or     DWORD PTR [eax-0x267503d],ecx
  40c159:	(bad)  
  40c15a:	mov    ecx,0x5be47509
  40c15f:	mov    ah,0xf4
  40c161:	push   eax
  40c162:	mov    esi,0x59fffb03
  40c167:	jne    0x40c126
  40c169:	je     0x40c151
  40c16b:	or     DWORD PTR [ebp-0x18],esi
  40c16e:	dec    ecx
  40c16f:	add    al,0xba
  40c171:	adc    al,BYTE PTR [esi+0x59f881e0]
  40c177:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c178:	add    dh,BYTE PTR [ebx-0x1b8af669]
  40c17e:	sbb    eax,0xc612c0e4
  40c183:	loopne 0x40c182
  40c185:	(bad)  
  40c186:	pop    ecx
  40c187:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c188:	call   0xbf46e28c
  40c18d:	push   ebp
  40c18e:	std    
  40c18f:	cld    
  40c190:	mov    cl,BYTE PTR [ebp+0x7e]
  40c193:	pop    edi
  40c194:	jmp    0xa053:0xe0840c
  40c19b:	shl    DWORD PTR [ecx],0xc0
  40c19e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c19f:	and    ah,dh
  40c1a1:	mov    WORD PTR [esi+ebx*8-0x5af97b00],cs
  40c1a8:	sub    dh,bh
  40c1aa:	xchg   esi,eax
  40c1ab:	hlt    
  40c1ac:	std    
  40c1ad:	inc    DWORD PTR [eax]
  40c1af:	add    BYTE PTR [esi-0x10],dl
  40c1b2:	jno    0x40c1c5
  40c1b4:	mov    ebp,0x2ff982f1
  40c1b9:	out    0x56,al
  40c1bb:	or     dh,BYTE PTR [edx+0x6404590b]
  40c1c1:	jmp    0x40c21a
  40c1c3:	add    ah,BYTE PTR [ebp+esi*1+0x1d274c7e]
  40c1ca:	imul   ebx,DWORD PTR [edx+0x2d],0x5
  40c1ce:	mov    DWORD PTR [edi-0xa77e086],edi
  40c1d4:	cmp    cl,0x13
  40c1d7:	rol    BYTE PTR [ebx+edx*8],0x84
  40c1db:	jl     0x40c218
  40c1dd:	add    eax,0x1bac0559
  40c1e2:	and    eax,0x5774de74
  40c1e7:	or     BYTE PTR [ebx+ebp*8-0x306d1803],ah
  40c1ee:	push   es
  40c1ef:	add    BYTE PTR [ebp+ebx*4-0x5abc2579],dh
  40c1f6:	jg     0x40c17c
  40c1f8:	mov    bh,0x8a
  40c1fa:	sar    esi,1
  40c1fc:	call   FWORD PTR [edx+eax*2]
  40c1ff:	dec    edi
  40c200:	out    dx,eax
  40c201:	add    al,0xc8
  40c203:	inc    esp
  40c204:	sub    BYTE PTR ds:0x73bb5da,al
  40c20a:	add    al,BYTE PTR [edi+ebp*2-0x23a8e4d7]
  40c211:	imul   eax,DWORD PTR [edi+0x7a0000f7],0x874fd1d4
  40c21b:	dec    ecx
  40c21c:	test   DWORD PTR [ecx],0x73c4792f
  40c222:	or     cl,BYTE PTR [eax-0x76d7deee]
  40c228:	les    ecx,FWORD PTR [esi]
  40c22a:	cdq    
  40c22b:	lds    esi,FWORD PTR [ecx*4-0x12f124e]
  40c232:	inc    eax
  40c233:	fidiv  WORD PTR [edi]
  40c235:	fadd   QWORD PTR [edi]
  40c237:	hlt    
  40c238:	(bad)  
  40c23a:	test   al,0x99
  40c23c:	out    0x80,al
  40c23e:	mov    bl,0xf5
  40c240:	int3   
  40c241:	shl    BYTE PTR [ecx],cl
  40c243:	mov    cs,edi
  40c245:	xchg   ecx,eax
  40c246:	dec    eax
  40c247:	fsubrp st(7),st
  40c249:	ss pop es
  40c24b:	sub    edi,esp
  40c24d:	add    ebp,DWORD PTR [edi]
  40c24f:	push   0x94600325
  40c254:	inc    edx
  40c255:	mov    ebp,0x38e7e5ee
  40c25a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c25b:	add    DWORD PTR [ecx-0x21],ebp
  40c25e:	(bad)  
  40c260:	out    0x3,eax
  40c262:	jns    0x40c2cb
  40c264:	std    
  40c265:	sti    
  40c266:	scas   eax,DWORD PTR es:[edi]
  40c267:	jae    0x40c251
  40c269:	hlt    
  40c26a:	sub    dh,bl
  40c26c:	out    0x3a,eax
  40c26e:	inc    ebx
  40c26f:	fstp   TBYTE PTR [ecx-0x1781283d]
  40c275:	add    ebp,DWORD PTR [edi]
  40c277:	xor    ebx,DWORD PTR [eax]
  40c279:	cld    
  40c27a:	add    BYTE PTR [eax],al
  40c27c:	mov    al,0xf2
  40c27e:	mov    esi,0x4e8f2f5d
  40c283:	clc    
  40c284:	lock retf 
  40c286:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c287:	add    esp,DWORD PTR [esi-0x15811c8a]
  40c28d:	in     al,0x6a
  40c28f:	(bad)  
  40c290:	xor    al,0x65
  40c292:	stos   DWORD PTR es:[edi],eax
  40c293:	push   DWORD PTR [ebx+0x533f49b]
  40c299:	leave  
  40c29a:	mov    esi,0x62cde580
  40c29f:	retf   0x8d50
  40c2a2:	inc    DWORD PTR [edx]
  40c2a4:	das    
  40c2a5:	scas   al,BYTE PTR es:[di]
  40c2a7:	sbb    ah,BYTE PTR [esi-0x15814462]
  40c2ad:	mov    dh,0x0
  40c2af:	pusha  
  40c2b0:	icebp  
  40c2b1:	popf   
  40c2b2:	mov    esp,DWORD PTR [edi+0x256a8df5]
  40c2b8:	(bad)  
  40c2b9:	pusha  
  40c2ba:	dec    edx
  40c2bb:	sub    eax,0x1ae91bb2
  40c2c0:	or     esi,edx
  40c2c2:	std    
  40c2c3:	bound  esi,QWORD PTR [ebp+0x2ce90130]
  40c2c9:	gs cmp al,0x2d
  40c2cc:	adc    eax,0xb26000b2
  40c2d1:	sbb    eax,0x842ce901
  40c2d6:	adc    BYTE PTR [ebp+eiz*4+0x1c],dh
  40c2da:	add    ecx,ebp
  40c2dc:	sub    al,0x8e
  40c2de:	mov    ebp,DWORD PTR [edx+0x0]
  40c2e1:	add    BYTE PTR [ebx+0x1ce9fdf1],ch
  40c2e7:	icebp  
  40c2e8:	aad    0x6a
  40c2ea:	out    0xe5,eax
  40c2ec:	push   0xde2deb
  40c2f1:	fs mov ch,0xc
  40c2f4:	add    ecx,ebp
  40c2f6:	sub    al,0x8e
  40c2f8:	mov    ebp,DWORD PTR [edx-0x75]
  40c2fb:	icebp  
  40c2fc:	std    
  40c2fd:	jmp    0x6b16b3fe
  40c302:	ja     0x40c2e9
  40c304:	mov    ebp,0xde2de5
  40c309:	push   0xe9000a65
  40c30e:	sub    al,0x88
  40c310:	mov    esp,DWORD PTR [edx-0x41]
  40c313:	fiadd  WORD PTR [eax]
  40c315:	jmp    0x4329db1d
  40c31a:	xchg   cl,dh
  40c31c:	std    
  40c31d:	fs imul esp,eax,0xffffff83
  40c321:	mov    ecx,0x83fdf07f
  40c326:	sub    eax,0x7600b463
  40c32b:	ud0    edi,edi
  40c32e:	div    DWORD PTR ds:[edi-0x3c8da9ff]
  40c335:	push   eax
  40c336:	bound  edx,QWORD PTR cs:[ebx-0x41a6ba00]
  40c33d:	jne    0x40c374
  40c33f:	fs in  al,dx
  40c341:	add    DWORD PTR [esi],edx
  40c343:	fisttp QWORD PTR [ecx-0x37ffff3a]
  40c349:	fadd   QWORD PTR [eax]
  40c34b:	inc    eax
  40c34c:	pop    edi
  40c34d:	mov    edi,esi
  40c34f:	jmp    0x3fd27e
  40c354:	sub    DWORD PTR [ecx+0x44],esi
  40c357:	ret    0x7126
  40c35a:	mov    dl,0xf8
  40c35c:	add    eax,0x66a00dd
  40c361:	pop    edx
  40c362:	(bad)  
  40c363:	jmp    FWORD PTR [esi-0x29ffe725]
  40c369:	push   edi
  40c36a:	mov    esi,0xec63f97f
  40c36f:	add    esi,eax
  40c371:	fmul   QWORD PTR [ebx-0xf1197b]
  40c377:	dec    DWORD PTR [eax+0x7f4000dc]
  40c37d:	xchg   edi,esi
  40c37f:	jmp    0x3fd2de
  40c384:	or     eax,0x1589de98
  40c389:	cmc    
  40c38a:	add    eax,DWORD PTR [eax]
  40c38c:	xchg   BYTE PTR [edx+0x36cb8d08],dl
  40c392:	dec    esi
  40c393:	lea    edx,ds:0x960006dd
  40c399:	lods   al,BYTE PTR ds:[esi]
  40c39a:	std    
  40c39b:	adc    eax,0x3df6c2
  40c3a0:	add    eax,0x2fb90a19
  40c3a5:	fld    DWORD PTR [edx]
  40c3a7:	add    BYTE PTR [edi],ch
  40c3a9:	xchg   edx,eax
  40c3aa:	xchg   BYTE PTR [edi],cl
  40c3ac:	add    BYTE PTR [eax],al
  40c3ae:	pop    ecx
  40c3af:	xlat   BYTE PTR ds:[ebx]
  40c3b0:	rol    ch,1
  40c3b2:	das    
  40c3b3:	pop    es
  40c3b4:	inc    edx
  40c3b5:	dec    ecx
  40c3b6:	ret    0x79ed
  40c3b9:	je     0x40c3f2
  40c3bb:	xchg   edx,eax
  40c3bc:	xchg   esp,esp
  40c3be:	xor    al,BYTE PTR [edi]
  40c3c0:	add    dl,BYTE PTR [eax-0x5e]
  40c3c3:	imul   edi,eax,0x5
  40c3c6:	das    
  40c3c7:	add    eax,0xf117c67b
  40c3cc:	out    0xff,al
  40c3ce:	sbb    BYTE PTR [ebx+0x59aa0ec4],al
  40c3d4:	iret   
  40c3d5:	dec    BYTE PTR [eax]
  40c3d7:	jge    0x40c35f
  40c3d9:	cld    
  40c3da:	sub    BYTE PTR ds:0xd9ac8902,al
  40c3e0:	cld    
  40c3e1:	push   eax
  40c3e3:	xchg   ebp,eax
  40c3e4:	add    ebx,DWORD PTR [edi-0x77]
  40c3e7:	ds ret 
  40c3e9:	add    ebp,DWORD PTR [edi]
  40c3eb:	adc    al,0xc2
  40c3ed:	cmp    bh,bh
  40c3ef:	icebp  
  40c3f0:	push   edi
  40c3f1:	sets   bl
  40c3f4:	arpl   WORD PTR [ebx],di
  40c3f6:	div    ecx
  40c3f8:	pop    edi
  40c3f9:	push   esi
  40c3fa:	cld    
  40c3fb:	cmp    ax,0x11ff
  40c400:	repz push cs
  40c402:	js     0x40c42f
  40c404:	add    BYTE PTR [ebx+0x5560da6],al
  40c40a:	lods   al,BYTE PTR ds:[esi]
  40c40b:	mov    gs,WORD PTR [esi*2+0x58060b32]
  40c412:	add    BYTE PTR [eax],al
  40c414:	sub    al,0xd5
  40c416:	xor    DWORD PTR [edi],ecx
  40c418:	sar    bl,0x80
  40c41b:	pop    eax
  40c41c:	pop    edi
  40c41d:	pop    ss
  40c41e:	cmp    edx,0x26
  40c421:	ficomp WORD PTR [esi+0x6ce82dfb]
  40c427:	pop    eax
  40c428:	pop    esi
  40c429:	push   cs
  40c42a:	add    esp,DWORD PTR [edx+esi*4]
  40c42d:	xchg   ebp,eax
  40c42e:	dec    esi
  40c42f:	data16 lods al,BYTE PTR ds:[esi]
  40c431:	repz in al,dx
  40c433:	push   esi
  40c434:	daa    
  40c435:	fcomi  st,st(5)
  40c437:	cmp    BYTE PTR [esp+ebp*8+0x6131db20],0x91
  40c43f:	outs   dx,BYTE PTR ds:[esi]
  40c440:	rcr    BYTE PTR [edx-0x1d],cl
  40c443:	or     BYTE PTR [eax-0x442a151e],bh
  40c449:	imul   ebx,eax,0xea1bad9c
  40c44f:	(bad)  
  40c451:	xchg   edx,eax
  40c452:	dec    ebp
  40c453:	mov    edi,esp
  40c455:	imul   ebp,edx,0x60dcf082
  40c45b:	push   ss
  40c45c:	popa   
  40c45d:	sbb    eax,DWORD PTR [edx-0x4]
  40c460:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c461:	(bad)  
  40c462:	aas    
  40c463:	ret    
  40c464:	pop    ebx
  40c465:	mov    BYTE PTR [esi],dh
  40c467:	iret   
  40c468:	pop    esp
  40c469:	mov    edx,0xf23bcef7
  40c46e:	stc    
  40c46f:	inc    ebx
  40c470:	das    
  40c471:	arpl   WORD PTR [eax-0x18253770],ax
  40c477:	add    eax,DWORD PTR [eax]
  40c479:	add    BYTE PTR [ecx+esi*8],al
  40c47c:	cmc    
  40c47d:	adc    DWORD PTR [ecx+0x2f42a2dd],eax
  40c483:	mov    BYTE PTR [esi-0x8],ah
  40c486:	mov    ebx,cs
  40c488:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c489:	add    ebp,DWORD PTR [eax-0x1246a458]
  40c48f:	fnstsw WORD PTR [edi]
  40c491:	test   BYTE PTR [esi-0x22],bl
  40c494:	out    0x82,eax
  40c496:	dec    ebx
  40c497:	jmp    0xfa00:0xde2f4231
  40c49e:	ins    BYTE PTR es:[edi],dx
  40c49f:	mov    BYTE PTR [esi-0x76],ah
  40c4a2:	push   0x61e94224
  40c4a7:	leave  
  40c4a8:	lods   al,BYTE PTR ds:[esi]
  40c4a9:	sti    
  40c4aa:	in     al,dx
  40c4ab:	fucom  st(7)
  40c4ad:	dec    edi
  40c4ae:	sub    al,0xde
  40c4b0:	add    BYTE PTR [edx-0x5536220c],bh
  40c4b6:	sub    al,0xef
  40c4b8:	adc    eax,DWORD PTR [ebp+0x3e]
  40c4bb:	scas   al,BYTE PTR es:[edi]
  40c4bc:	add    dh,ah
  40c4be:	cdq    
  40c4bf:	sar    esp,1
  40c4c1:	and    ebp,ebp
  40c4c3:	fld    QWORD PTR [ecx]
  40c4c5:	(bad)  
  40c4c6:	mov    eax,ds:0x332acaea
  40c4cb:	test   eax,0x27665fdb
  40c4d0:	shl    esi,1
  40c4d2:	sub    al,0xde
  40c4d4:	call   0x11f011e
  40c4d9:	gs repz jno 0x40c54b
  40c4dd:	out    0x0,al
  40c4df:	add    BYTE PTR [ebx+0x6ea3fcda],bl
  40c4e5:	fimul  WORD PTR [ecx+0x2a2516ac]
  40c4eb:	mov    cl,0x68
  40c4ed:	rol    DWORD PTR [eax],1
  40c4ef:	dec    eax
  40c4f0:	pop    es
  40c4f1:	sbb    BYTE PTR [edx-0x17],al
  40c4f4:	push   ds
  40c4f5:	pop    ebx
  40c4f6:	or     eax,0xe88e1c31
  40c4fb:	pop    ss
  40c4fc:	sbb    eax,0xb9ea00de
  40c501:	icebp  
  40c502:	retf   0x332a
  40c505:	pop    ebx
  40c506:	add    eax,0x74ecfb26
  40c50b:	add    eax,0xabe88f9b
  40c510:	fiadd  WORD PTR ds:[eax]
  40c513:	(bad)  
  40c514:	adc    eax,0x5c00fcba
  40c519:	lahf   
  40c51a:	add    bl,ch
  40c51c:	xchg   DWORD PTR [ecx+ecx*1+0x1b],ebp
  40c520:	out    dx,al
  40c521:	into   
  40c522:	das    
  40c523:	add    BYTE PTR [esi+0x6374be65],al
  40c529:	data16 or al,0xf4
  40c52c:	sbb    al,0x9f
  40c52e:	add    BYTE PTR [ebp+0xf50da52],cl
  40c534:	add    ebp,esp
  40c536:	cld    
  40c537:	retf   0xe185
  40c53a:	std    
  40c53b:	je     0x40c5af
  40c53d:	stc    
  40c53e:	mov    WORD PTR [edi+edx*4],es
  40c541:	mov    cl,0xe8
  40c543:	sldt   WORD PTR [eax]
  40c546:	je     0x40c529
  40c548:	add    BYTE PTR [esi-0x41],ah
  40c54b:	sti    
  40c54c:	stc    
  40c54d:	retf   0xe255
  40c550:	push   0x9dcd00
  40c555:	jmp    DWORD PTR [ebx]
  40c557:	dec    ebp
  40c558:	adc    BYTE PTR [eax+0x6],al
  40c55b:	mov    dh,0x5d
  40c55d:	pop    esi
  40c55e:	sub    esp,DWORD PTR [eax]
  40c560:	add    al,BYTE PTR [eax]
  40c562:	and    BYTE PTR [esi+edi*8-0x36],bl
  40c566:	inc    ebp
  40c567:	loop   0x40c5bf
  40c569:	push   ebx
  40c56b:	inc    esp
  40c56c:	adc    BYTE PTR [eax-0x2a],al
  40c56f:	xchg   BYTE PTR [eax+ebx*2],dl
  40c572:	mov    ecx,0x5caf0d3
  40c577:	loop   0x40c5df
  40c579:	mov    ds:0x4326ae,eax
  40c57e:	sahf   
  40c57f:	ja     0x40c5b1
  40c581:	add    dh,dl
  40c583:	int    0xc0
  40c585:	cmp    DWORD PTR [edx],edx
  40c587:	mov    dh,0x8
  40c589:	je     0x40c546
  40c58b:	sbb    DWORD PTR [edx+0x24],esi
  40c58e:	sahf   
  40c58f:	mov    al,0x81
  40c591:	enter  0x942f,0xd9
  40c595:	sbb    al,BYTE PTR [ecx-0x9]
  40c598:	add    DWORD PTR [esi-0x34],edx
  40c59b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c59c:	mov    bh,0x42
  40c59e:	das    
  40c59f:	lods   al,BYTE PTR ds:[esi]
  40c5a0:	imul   BYTE PTR [ebx+0x5e02371d]
  40c5a6:	ins    DWORD PTR es:[edi],dx
  40c5a7:	add    al,BYTE PTR [edx]
  40c5a9:	push   ebp
  40c5aa:	add    BYTE PTR [eax],al
  40c5ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5ad:	rol    BYTE PTR [eax-0x228a981d],cl
  40c5b3:	jae    0x40c5e1
  40c5b5:	test   DWORD PTR [ecx],0x79340153
  40c5bb:	jl     0x40c5e4
  40c5bd:	jp     0x40c58b
  40c5bf:	push   cs
  40c5c0:	mov    bl,0x2b
  40c5c2:	add    eax,DWORD PTR [eax]
  40c5c4:	das    
  40c5c5:	fistp  QWORD PTR [eax-0x7a08d0c6]
  40c5cb:	mov    edi,0x1167b20
  40c5d0:	das    
  40c5d1:	cmc    
  40c5d2:	jle    0x40c61a
  40c5d4:	sub    edx,edx
  40c5d6:	add    eax,DWORD PTR [edx]
  40c5d8:	das    
  40c5d9:	cmc    
  40c5da:	cli    
  40c5db:	test   ah,bl
  40c5dd:	cmc    
  40c5de:	add    DWORD PTR [eax],eax
  40c5e0:	xchg   edi,eax
  40c5e1:	cmc    
  40c5e2:	mov    esi,0xf0342f42
  40c5e7:	mov    ds:0x6604b51d,eax
  40c5ec:	lods   al,BYTE PTR ds:[esi]
  40c5ed:	add    cl,dl
  40c5ef:	leave  
  40c5f0:	ins    BYTE PTR es:[edi],dx
  40c5f1:	cmc    
  40c5f2:	add    DWORD PTR [edi],ecx
  40c5f4:	test   eax,0x2f000482
  40c5f9:	(bad)  
  40c5fa:	leave  
  40c5fb:	(bad)  
  40c5fc:	das    
  40c5fd:	cmc    
  40c5fe:	pop    edi
  40c5ff:	add    DWORD PTR [edx],esi
  40c601:	pop    ebp
  40c602:	mov    edi,0x50822f42
  40c607:	and    al,0x13
  40c609:	lods   eax,DWORD PTR ds:[esi]
  40c60a:	outs   dx,BYTE PTR ds:[esi]
  40c60b:	push   DWORD PTR [eax+0xdbe7de]
  40c611:	add    BYTE PTR [ecx-0x2c],dl
  40c614:	call   0xb8657a1c
  40c619:	fistp  DWORD PTR [edx+0x77]
  40c61c:	out    0x3,eax
  40c61e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c61f:	mov    ds:0x1eb3f80b,al
  40c624:	mov    ah,0x66
  40c626:	mov    dl,0x72
  40c628:	or     ecx,DWORD PTR [eax]
  40c62a:	mov    bh,0x46
  40c62c:	call   0xf136f534
  40c631:	icebp  
  40c632:	das    
  40c633:	fisubr WORD PTR [eax+edx*2+0xb]
  40c637:	into   
  40c638:	dec    edi
  40c639:	ins    DWORD PTR es:[edi],dx
  40c63a:	pop    eax
  40c63b:	jmp    0x40c624
  40c63d:	fist   DWORD PTR [ebp-0x2f]
  40c640:	call   0x322f5448
  40c645:	inc    edi
  40c646:	das    
  40c647:	popa   
  40c648:	sub    BYTE PTR [eax+0x2d],dl
  40c64b:	push   edi
  40c64c:	clc    
  40c64d:	retf   0x321b
  40c650:	cli    
  40c651:	inc    ebx
  40c652:	das    
  40c653:	mov    ds,esi
  40c655:	adc    bl,cl
  40c657:	pop    es
  40c658:	sub    eax,DWORD PTR [edx+ebp*4]
  40c65b:	mov    eax,ds:0x8e794003
  40c660:	cmp    bh,0x2f
  40c663:	fsubrp st(7),st
  40c665:	js     0x40c62b
  40c667:	rcr    DWORD PTR [edi+0x4],0x2f
  40c66b:	fidivr WORD PTR [edi-0x1821eeaa]
  40c671:	jle    0x40c6cf
  40c673:	ret    0x86fb
  40c676:	add    BYTE PTR [eax],al
  40c678:	in     al,dx
  40c679:	int    0x62
  40c67b:	ret    0xf668
  40c67e:	mov    ah,0x79
  40c680:	shr    dl,1
  40c682:	jb     0x40c685
  40c684:	popa   
  40c685:	jmp    0x40c69e
  40c687:	cld    
  40c688:	mov    ch,0x68
  40c68a:	add    cl,ah
  40c68c:	push   esp
  40c68d:	fmulp  st(1),st
  40c68f:	sub    ch,BYTE PTR [ebx]
  40c691:	jmp    0x40c6a6
  40c693:	xchg   ebp,eax
  40c694:	mov    ds:0xfb5200aa,al
  40c699:	test   al,0x0
  40c69b:	call   0xc3b4a4cc
  40c6a0:	test   eax,0xf8e2086b
  40c6a5:	or     DWORD PTR [ebx+0x506620a5],0x15427f36
  40c6af:	test   eax,0x9dc1612c
  40c6b4:	pop    ds
  40c6b5:	js     0x40c6b7
  40c6b7:	xchg   ebx,eax
  40c6b8:	arpl   WORD PTR [ecx+0x45],bx
  40c6bb:	int    0x44
  40c6bd:	call   0xe901:0x6230658b
  40c6c4:	sub    al,0x8e
  40c6c6:	or     eax,0x23dbed3e
  40c6cb:	imul   BYTE PTR ds:0x659900de
  40c6d1:	jae    0x40c6db
  40c6d3:	out    0x18,al
  40c6d5:	dec    edx
  40c6d6:	adc    eax,0xc1632b29
  40c6db:	push   edi
  40c6dc:	add    BYTE PTR [eax],al
  40c6de:	inc    eax
  40c6df:	pop    ebp
  40c6e0:	stc    
  40c6e1:	call   0x46c2a247
  40c6e6:	or     esp,edx
  40c6e8:	jae    0x40c6da
  40c6ea:	fs xchg esi,eax
  40c6ec:	dec    ebp
  40c6ed:	sub    DWORD PTR [ebx],esi
  40c6ef:	cmc    
  40c6f0:	push   ss
  40c6f1:	repz add DWORD PTR cs:[ecx+0x20ce0f25],0x1b
  40c6fa:	fsubr  QWORD PTR [edi+eax*8+0x4495540f]
  40c701:	stc    
  40c702:	pop    ecx
  40c703:	popf   
  40c704:	and    al,0x0
  40c706:	out    0xad,al
  40c708:	call   0xff580a78
  40c70d:	push   edi
  40c70e:	inc    ecx
  40c70f:	stc    
  40c710:	test   eax,0x5de20614
  40c715:	pop    esi
  40c716:	ins    DWORD PTR es:[edi],dx
  40c717:	push   0xffffffe4
  40c719:	pop    ebp
  40c71a:	push   esp
  40c71b:	fiadd  WORD PTR [eax]
  40c71d:	push   ebp
  40c71e:	or     eax,0x7b8b5406
  40c723:	in     eax,0x56
  40c725:	push   esi
  40c726:	icebp  
  40c727:	clc    
  40c728:	mov    eax,ds:0x89ddd614
  40c72d:	clc    
  40c72e:	pop    fs
  40c730:	or     al,ch
  40c732:	outs   dx,BYTE PTR ds:[esi]
  40c733:	fild   DWORD PTR [eax]
  40c735:	add    dl,bl
  40c737:	and    DWORD PTR [ebp+0x7],esi
  40c73a:	fstp   QWORD PTR [esi]
  40c73c:	jmp    0x11e0dce
  40c741:	test   DWORD PTR [eax],eax
  40c743:	add    BYTE PTR [ecx],ah
  40c745:	out    0x81,eax
  40c747:	adc    BYTE PTR [esi-0x23],0x0
  40c74b:	add    DWORD PTR [eax-0x24],0x74
  40c74f:	or     al,ch
  40c751:	adc    ecx,DWORD PTR ds:0xfc624b74
  40c757:	pop    es
  40c758:	mov    edx,DWORD PTR [ebx-0x7fea8af]
  40c75e:	mov    ch,0x12
  40c760:	inc    esi
  40c761:	loop   0x40c6ec
  40c763:	fmul   DWORD PTR [ebx+0x7d64723a]
  40c769:	pop    ds
  40c76a:	inc    esi
  40c76b:	je     0x40c750
  40c76d:	popa   
  40c76e:	out    0x6,al
  40c770:	cmp    ah,ch
  40c772:	sub    al,0x8
  40c775:	cwde   
  40c776:	sbb    BYTE PTR [ebx+0x5317098d],cl
  40c77c:	cmp    al,0xdd
  40c77e:	or     eax,0x3ada502f
  40c784:	cmp    esi,edi
  40c786:	add    DWORD PTR [ebx+0x52fa4bc7],ecx
  40c78c:	push   ebp
  40c78d:	neg    esp
  40c78f:	out    dx,al
  40c790:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c791:	icebp  
  40c792:	stc    
  40c793:	test   BYTE PTR [eax+0x2fbe16f2],dh
  40c799:	lods   al,BYTE PTR ds:[esi]
  40c79a:	inc    esp
  40c79b:	add    cl,bh
  40c79d:	xchg   esi,ebp
  40c79f:	mov    ds:0x6802373d,eax
  40c7a4:	jecxz  0x40c7ed
  40c7a6:	inc    edx
  40c7a7:	add    BYTE PTR [eax],al
  40c7a9:	add    BYTE PTR [edi-0x7f013a50],dl
  40c7af:	dec    edi
  40c7b0:	fcmovb st,st(7)
  40c7b2:	jnp    0x40c763
  40c7b4:	enter  0x7055,0x11
  40c7b8:	xchg   esi,eax
  40c7b9:	adc    edi,ebp
  40c7bb:	test   BYTE PTR [ebx+edi*8],0xdb
  40c7bf:	add    BYTE PTR [ecx],dh
  40c7c1:	call   0x42e796
  40c7c6:	push   eax
  40c7c7:	push   ecx
  40c7c8:	cli    
  40c7c9:	(bad)  
  40c7ca:	and    cl,BYTE PTR [edi+0x3c2f3ff3]
  40c7d0:	jge    0x40c816
  40c7d2:	daa    
  40c7d3:	push   eax
  40c7d4:	sub    BYTE PTR [ebp+0x6d],bl
  40c7d7:	add    al,BYTE PTR [edx]
  40c7d9:	mov    esi,DWORD PTR [edi]
  40c7db:	les    esi,FWORD PTR [edx+0x512eaa55]
  40c7e1:	adc    ebp,DWORD PTR [ebp+esi*1-0x33a074ff]
  40c7e8:	push   eax
  40c7e9:	and    al,0x37
  40c7eb:	test   eax,0x35ac41f6
  40c7f0:	add    DWORD PTR [ebx],edi
  40c7f2:	fisub  WORD PTR [ebx-0x2810ce2c]
  40c7f8:	ret    0x2f03
  40c7fb:	ficom  WORD PTR [edi+0x5]
  40c7fe:	aam    0xe6
  40c800:	xor    al,0x7b
  40c802:	les    ebx,FWORD PTR [ebp-0x7c]
  40c805:	clc    
  40c806:	das    
  40c807:	fsubrp st(7),st
  40c809:	sub    eax,0x4172effc
  40c80e:	add    BYTE PTR [eax],al
  40c810:	pop    ds
  40c811:	mov    ds:0x5b6a4ea5,eax
  40c816:	jo     0x40c7df
  40c818:	cmp    al,0xd1
  40c81a:	mov    edx,0xeaf6e7b1
  40c81f:	add    ebp,DWORD PTR [edi]
  40c821:	out    dx,eax
  40c822:	pop    eax
  40c823:	pop    ebp
  40c824:	jge    0x40c81c
  40c826:	jmp    0xb7cb:0xa5552f03
  40c82d:	xchg   ecx,eax
  40c82e:	inc    ebx
  40c82f:	jnp    0x40c81c
  40c831:	int    0xa7
  40c833:	into   
  40c834:	pusha  
  40c835:	ret    
  40c836:	daa    
  40c837:	jns    0x40c81c
  40c839:	in     eax,0xa
  40c83b:	(bad)  
  40c83e:	mov    ebp,0x1df2ab78
  40c843:	(bad)  
  40c844:	pop    ecx
  40c845:	mov    ?,WORD PTR [ebp+0xdf2abbe]
  40c84b:	(bad)  
  40c84c:	dec    ecx
  40c84d:	fucom  st(7)
  40c84f:	add    ebp,DWORD PTR [edi]
  40c851:	push   ebp
  40c852:	cmp    eax,0xf6e73acc
  40c857:	(bad)  
  40c858:	sbb    ecx,DWORD PTR [esi]
  40c85a:	aad    0x43
  40c85c:	das    
  40c85d:	pop    ebx
  40c85e:	loopne 0x40c864
  40c860:	call   0xd6da:0xa3c735b4
  40c867:	push   eax
  40c868:	daa    
  40c869:	(bad)  
  40c86a:	into   
  40c86b:	lock and al,0xd0
  40c86e:	daa    
  40c86f:	add    al,0x44
  40c871:	and    BYTE PTR [esi],bh
  40c873:	in     al,dx
  40c874:	add    BYTE PTR [eax],al
  40c876:	inc    edi
  40c877:	mov    eax,ds:0xa12be500
  40c87c:	or     al,dh
  40c87e:	jg     0x40c85a
  40c880:	jge    0x40c8f8
  40c882:	cmp    eax,0xd714381e
  40c887:	xlat   BYTE PTR ds:[ebx]
  40c888:	xchg   esp,eax
  40c889:	test   eax,0xddc3150a
  40c88e:	sub    al,0xac
  40c890:	rcl    BYTE PTR [edx-0x72766e0f],0x3
  40c897:	(bad)
  40c89b:	jno    0x40c8ad
  40c89d:	(bad)  
  40c89e:	not    ebp
  40c8a0:	std    
  40c8a1:	mov    ah,0x98
  40c8a3:	je     0x40c8a4
  40c8a5:	imul   ebp,edi,0xffffffe6
  40c8a8:	push   eax
  40c8a9:	inc    ecx
  40c8aa:	inc    ecx
  40c8ab:	out    0xfd,eax
  40c8ad:	dec    esi
  40c8ae:	or     BYTE PTR [edi],ah
  40c8b0:	jne    0x40c8a6
  40c8b2:	lods   eax,DWORD PTR ds:[esi]
  40c8b3:	imul   ecx,DWORD PTR [ecx+ebp*8],0xe8b0fbdf
  40c8ba:	dec    ecx
  40c8bb:	adc    eax,0xac2cddc3
  40c8c0:	rcl    BYTE PTR [edx],0x71
  40c8c3:	je     0x40c8c5
  40c8c5:	push   ds
  40c8c6:	call   0xe056d98c
  40c8cb:	rcl    DWORD PTR [eax],0xe
  40c8ce:	clc    
  40c8cf:	rcl    DWORD PTR [eax],0x6
  40c8d2:	aas    
  40c8d3:	stos   BYTE PTR es:[edi],al
  40c8d4:	push   ss
  40c8d5:	test   eax,0xcd44a32c
  40c8da:	add    BYTE PTR [eax],al
  40c8dc:	cmp    bh,dl
  40c8de:	xchg   esp,eax
  40c8df:	sub    esi,ebp
  40c8e1:	fld    DWORD PTR [eax]
  40c8e3:	div    BYTE PTR [ebx+0x195356dc]
  40c8e9:	js     0x40c8ea
  40c8eb:	cmp    dl,ch
  40c8ed:	retf   0xf724
  40c8f0:	ins    BYTE PTR es:[edi],dx
  40c8f1:	fimul  WORD PTR [ecx-0x3a03a00]
  40c8f7:	inc    DWORD PTR [edx-0x3d]
  40c8fa:	xor    eax,eax
  40c8fc:	pusha  
  40c8fd:	pop    edi
  40c8fe:	aas    
  40c8ff:	add    cl,BYTE PTR [ecx]
  40c901:	jne    0x40c8c0
  40c903:	dec    eax
  40c904:	push   ebp
  40c905:	cli    
  40c906:	icebp  
  40c907:	add    DWORD PTR [esi+0x10574df6],0x1b
  40c90e:	adc    eax,0xa1c3dc
  40c913:	test   DWORD PTR [esi+0x39560a8e],edx
  40c919:	cmc    
  40c91a:	sub    eax,0x81da0616
  40c91f:	into   
  40c920:	sbb    DWORD PTR [edi-0x3d],esp
  40c923:	pop    esi
  40c924:	push   ebp
  40c925:	mov    ch,0x89
  40c927:	in     al,dx
  40c928:	xlat   BYTE PTR ds:[ebx]
  40c929:	mov    al,0x51
  40c92b:	push   edi
  40c92c:	pusha  
  40c92d:	and    BYTE PTR [esi-0x29ad96f8],bh
  40c933:	xor    ebp,ecx
  40c935:	ins    BYTE PTR es:[edi],dx
  40c936:	inc    esp
  40c937:	or     BYTE PTR [esi-0x4c00aa4e],dl
  40c93d:	jmp    0x4146ca
  40c942:	sbb    ch,BYTE PTR [ecx+0x7c]
  40c945:	clc    
  40c946:	or     ebp,esi
  40c948:	rcl    DWORD PTR ds:0xc083e186,1
  40c94e:	mov    dl,0xe9
  40c950:	or     al,0x39
  40c953:	or     DWORD PTR [eax+0x56e15600],eax
  40c959:	mov    eax,ebx
  40c95b:	call   0xa40df84a
  40c960:	add    al,0x83
  40c962:	push   ds
  40c963:	fbstp  TBYTE PTR [ebx+0x10]
  40c966:	or     DWORD PTR [ebx-0xd7f00f0],edx
  40c96c:	in     eax,0x35
  40c96e:	das    
  40c96f:	fld    QWORD PTR [eax+eax*1]
  40c972:	mov    dh,0xb9
  40c974:	enter  0x1cea,0x78
  40c978:	leave  
  40c979:	push   ss
  40c97a:	xor    ch,0xc4
  40c97d:	jne    0x40c99e
  40c97f:	sub    al,0x4c
  40c981:	sbb    bh,dl
  40c983:	(bad)  
  40c984:	push   ss
  40c985:	add    BYTE PTR [edi],ch
  40c987:	outs   dx,BYTE PTR ds:[esi]
  40c988:	ds clc 
  40c98a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c98b:	int3   
  40c98c:	call   0xb702a1cb
  40c991:	inc    BYTE PTR [edx-0x1]
  40c994:	les    edx,FWORD PTR [edi+edx*1]
  40c997:	add    eax,0xb9a40042
  40c99c:	enter  0xe182,0x6b
  40c9a0:	or     bh,al
  40c9a2:	and    eax,DWORD PTR [edx]
  40c9a4:	jns    0x40c99d
  40c9a6:	add    BYTE PTR [eax],al
  40c9a8:	or     DWORD PTR [esi+0x29],ebp
  40c9ab:	add    al,BYTE PTR [edi-0x6f013c42]
  40c9b1:	jg     0x40c984
  40c9b3:	mov    cl,BYTE PTR [edx]
  40c9b5:	(bad)  
  40c9b6:	jle    0x40c9b6
  40c9b8:	sti    
  40c9b9:	push   es
  40c9ba:	cmp    ebp,0x65f92978
  40c9c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9c1:	dec    ebx
  40c9c2:	add    al,ch
  40c9c4:	push   cs
  40c9c5:	mov    ah,0xc4
  40c9c7:	(bad)  
  40c9c8:	mov    ah,0xc6
  40c9ca:	les    esi,FWORD PTR [ebx+ebx*2-0x32]
  40c9ce:	pop    edx
  40c9cf:	sub    eax,0x74c4f72f
  40c9d4:	inc    edi
  40c9d5:	fisub  WORD PTR [edx+0x2d]
  40c9d8:	das    
  40c9d9:	idiv   DWORD PTR [eax-0x3b]
  40c9dc:	fld    DWORD PTR [ebx+0x29]
  40c9df:	leave  
  40c9e0:	ins    DWORD PTR es:[edi],dx
  40c9e1:	repnz add DWORD PTR [esi-0x80],edx
  40c9e5:	or     cl,0xe
  40c9e8:	fcomp  st(6)
  40c9ea:	out    dx,al
  40c9eb:	sub    eax,0x53e87831
  40c9f0:	adc    dl,cl
  40c9f2:	or     ebx,DWORD PTR [edx]
  40c9f4:	outs   dx,DWORD PTR ds:[esi]
  40c9f5:	fisub  WORD PTR [edx-0x4c]
  40c9f8:	lods   eax,DWORD PTR ds:[esi]
  40c9f9:	in     al,0xc6
  40c9fb:	cmp    BYTE PTR [edi+ebp*4-0x59],ch
  40c9ff:	sub    ch,BYTE PTR [ebx+eiz*4+0x1ec212e9]
  40ca06:	and    BYTE PTR [edi-0x3b951500],al
  40ca0c:	add    BYTE PTR [eax],al
  40ca0e:	xor    al,0x8e
  40ca10:	ss pop edx
  40ca12:	ror    cl,1
  40ca14:	(bad)  
  40ca15:	sbb    DWORD PTR [edi-0x22],ebp
  40ca18:	les    edi,FWORD PTR fs:[ebx]
  40ca1b:	rcl    DWORD PTR [ecx],1
  40ca1d:	add    eax,0xfbd4e361
  40ca22:	sbb    bl,BYTE PTR [esi+0x6ae888e7]
  40ca28:	rol    dl,1
  40ca2a:	cmp    edx,DWORD PTR [edx]
  40ca2c:	std    
  40ca2d:	inc    ebx
  40ca2e:	das    
  40ca2f:	mov    WORD PTR [edx-0x44],?
  40ca32:	xchg   ecx,eax
  40ca33:	leave  
  40ca34:	pop    ss
  40ca35:	sbb    ch,bh
  40ca37:	fnsave [esi-0x224de43e]
  40ca3d:	inc    ebx
  40ca3e:	das    
  40ca3f:	pop    edi
  40ca40:	cs ret 
  40ca42:	rcl    DWORD PTR [esi+0x2e],1
  40ca45:	bound  ebp,QWORD PTR [ecx+ecx*4+0x5c]
  40ca49:	xor    BYTE PTR [ebx],cl
  40ca4b:	push   edx
  40ca4c:	imul   esi,DWORD PTR [eax+0x3e7d928],0x1628af9
  40ca56:	pop    edi
  40ca57:	leave  
  40ca58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca59:	add    edi,esp
  40ca5b:	jmp    0x40ca6f
  40ca5d:	sub    DWORD PTR [esi+0x7bfc7769],esp
  40ca63:	jp     0x40ca65
  40ca65:	imul   ch
  40ca67:	jecxz  0x40cadf
  40ca69:	xchg   ebx,eax
  40ca6a:	mov    cl,0x99
  40ca6c:	jo     0x40cae0
  40ca6e:	mov    al,0x59
  40ca70:	imul   ebx,esi,0xe3ed0000
  40ca76:	cmp    DWORD PTR [edx+0x1c89d647],ebp
  40ca7c:	outs   dx,DWORD PTR ds:[esi]
  40ca7d:	push   ebp
  40ca7e:	dec    esp
  40ca7f:	push   ebp
  40ca80:	enter  0x87df,0x1c
  40ca84:	aas    
  40ca85:	mov    WORD PTR [eax-0x17],gs
  40ca88:	xor    dh,bl
  40ca8a:	add    BYTE PTR [edi+edi*4+0x7e],bl
  40ca8e:	stc    
  40ca8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca90:	in     eax,dx
  40ca91:	lea    edx,[eax-0x62]
  40ca94:	aaa    
  40ca95:	ret    0x2916
  40ca98:	xor    edx,DWORD PTR [ebp+0x44]
  40ca9b:	add    DWORD PTR [eax+0x5704ffea],ebp
  40caa1:	mov    WORD PTR [eax+0x6c],ss
  40caa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40caa5:	jle    0x40caa0
  40caa7:	jbe    0x40cb16
  40caa9:	xchg   edx,eax
  40caaa:	std    
  40caab:	hlt    
  40caac:	push   eax
  40caad:	jecxz  0x40cac2
  40caaf:	sbb    eax,0x22009e35
  40cab4:	out    0x75,al
  40cab6:	jae    0x40cacc
  40cab8:	ins    BYTE PTR es:[edi],dx
  40cab9:	cdq    
  40caba:	jo     0x40cb1e
  40cabc:	imul   DWORD PTR [ebp+0x39]
  40cabf:	ins    BYTE PTR es:[edi],dx
  40cac0:	push   eax
  40cac1:	jecxz  0x40cac0
  40cac3:	cmp    bh,BYTE PTR ds:[edx+ecx*4]
  40cac7:	lods   al,BYTE PTR ds:[esi]
  40cac8:	sub    BYTE PTR [esi+edx*2-0x28948a0],cl
  40cacf:	es ins DWORD PTR es:[edi],dx
  40cad1:	mov    BYTE PTR [ebx-0x21cf79c],cl
  40cad7:	push   ss
  40cad8:	add    BYTE PTR [eax],al
  40cada:	fmul   QWORD PTR [ebx-0x1cf79b3b]
  40cae0:	std    
  40cae1:	add    BYTE PTR [ecx],dh
  40cae3:	fld    DWORD PTR [eax]
  40cae5:	add    BYTE PTR [esi+0x51],al
  40cae8:	popf   
  40cae9:	push   0xffff2021
  40caee:	cmp    DWORD PTR [eax-0xa],ebx
  40caf1:	add    DWORD PTR [ecx],esp
  40caf3:	push   ecx
  40caf4:	push   0xffffffff
  40caf6:	icebp  
  40caf7:	pop    ds
  40caf8:	pop    edi
  40caf9:	pop    esi
  40cafa:	xchg   ebp,eax
  40cafb:	sbb    DWORD PTR [edx-0x37],esi
  40cafe:	aam    0xd6
  40cb00:	add    BYTE PTR [ebp+0x7d],dl
  40cb03:	cs sub esp,0xdd02
  40cb0a:	inc    ebp
  40cb0b:	push   ebx
  40cb0c:	pop    ebp
  40cb0d:	or     BYTE PTR [eax],bh
  40cb0f:	push   ebx
  40cb10:	out    dx,al
  40cb11:	mov    ecx,DWORD PTR [ebx]
  40cb13:	into   
  40cb14:	mov    ecx,DWORD PTR [esi-0x39]
  40cb17:	pop    edx
  40cb18:	stc    
  40cb19:	inc    eax
  40cb1a:	and    eax,0x1ac083a5
  40cb1f:	ret    0xd231
  40cb22:	ins    DWORD PTR es:[edi],dx
  40cb23:	xor    al,BYTE PTR [ebx]
  40cb25:	add    dh,al
  40cb27:	repz mov eax,DWORD PTR es:[ebx-0x2e]
  40cb2c:	shr    BYTE PTR [bp+0xdb],cl
  40cb31:	add    BYTE PTR [edi],bl
  40cb33:	cdq    
  40cb34:	clc    
  40cb35:	mov    ebx,ebx
  40cb37:	and    DWORD PTR [eax+0x4],ebp
  40cb3a:	lds    edx,FWORD PTR [eax-0x7b]
  40cb3d:	clc    
  40cb3e:	add    BYTE PTR [eax],al
  40cb40:	lock push ds
  40cb42:	call   DWORD PTR [eax-0x1]
  40cb45:	push   eax
  40cb46:	repnz (bad) 
  40cb48:	xor    DWORD PTR [edi],ebx
  40cb4a:	out    0x33,al
  40cb4c:	xor    bl,dl
  40cb4e:	add    BYTE PTR [ebp-0x74ec59e8],al
  40cb54:	or     BYTE PTR ds:0x1e9602de,bl
  40cb5a:	jne    0x40cb6c
  40cb5c:	das    
  40cb5d:	jp     0x40cae4
  40cb5f:	sti    
  40cb60:	inc    ecx
  40cb61:	sar    BYTE PTR [edi-0x1202b8b1],1
  40cb67:	push   DWORD PTR [eax]
  40cb69:	and    al,0xc2
  40cb6b:	cmp    dh,BYTE PTR [edx-0x5]
  40cb6e:	mov    cs,WORD PTR [edi+eiz*1+0xc]
  40cb72:	ret    0xee22
  40cb75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb76:	add    BYTE PTR cs:[ebp+0x3848ef7],al
  40cb7d:	or     ecx,eax
  40cb7f:	(bad)  
  40cb80:	pop    edi
  40cb81:	popf   
  40cb82:	add    al,0xff
  40cb84:	and    al,BYTE PTR [edi+0x17]
  40cb87:	inc    eax
  40cb88:	das    
  40cb89:	jp     0x40cb4c
  40cb8b:	je     0x40cbd0
  40cb8d:	lahf   
  40cb8e:	push   eax
  40cb8f:	daa    
  40cb90:	das    
  40cb91:	test   eax,0x41e10b14
  40cb97:	add    BYTE PTR [esi+ebp*1+0x3e645dc1],ch
  40cb9e:	les    ecx,FWORD PTR [ebx]
  40cba0:	das    
  40cba1:	je     0x40cb5c
  40cba3:	inc    BYTE PTR [eax]
  40cba5:	add    BYTE PTR [ebx+0x65],al
  40cba8:	hlt    
  40cba9:	cmc    
  40cbaa:	mov    al,0x2a
  40cbac:	jne    0x40cb3a
  40cbae:	mov    dl,0x62
  40cbb0:	mov    edi,0xff5ea0fe
  40cbb5:	sti    
  40cbb6:	cwde   
  40cbb7:	ja     0x40cb3e
  40cbb9:	mov    edi,0x8347ef1a
  40cbbe:	mov    ebp,esi
  40cbc0:	xor    ebp,eax
  40cbc2:	xchg   esp,eax
  40cbc3:	test   al,0x8c
  40cbc5:	add    edi,DWORD PTR [ebx+ecx*4-0x6d5bab2b]
  40cbcc:	shl    BYTE PTR [ebx+edi*1-0x1c],0xc1
  40cbd1:	imul   ebp,DWORD PTR [edi],0xef0836b0
  40cbd7:	fisttp QWORD PTR [edi]
  40cbd9:	in     eax,dx
  40cbda:	push   ecx
  40cbdb:	loopne 0x40cbfb
  40cbdd:	test   BYTE PTR [eax-0x20],al
  40cbe0:	fwait
  40cbe1:	pop    ss
  40cbe2:	mov    dl,0x92
  40cbe4:	fist   DWORD PTR [edx-0x3b]
  40cbe7:	fst    QWORD PTR [edi+0x67d1ebc8]
  40cbed:	add    ebp,DWORD PTR [edi]
  40cbef:	fdivrp st(6),st
  40cbf1:	adc    eax,0x3a7c863
  40cbf6:	jp     0x40cc14
  40cbf8:	lock add ebp,DWORD PTR [eax+eiz*8+0x741f38de]
  40cc00:	jmp    0xf40acc5a
  40cc05:	adc    eax,0xbf1dde6f
  40cc0a:	add    BYTE PTR [eax],al
  40cc0c:	sbb    ebp,DWORD PTR [esi+0x1b2f43d5]
  40cc12:	out    0x76,eax
  40cc14:	sub    al,BYTE PTR [edi-0x23baeabf]
  40cc1a:	aaa    
  40cc1b:	mov    edi,0x43f5ba3b
  40cc20:	das    
  40cc21:	push   ebx
  40cc22:	nop
  40cc23:	add    ecx,0xffffffdf
  40cc26:	adc    esp,edi
  40cc28:	std    
  40cc29:	sbb    eax,0xdbf2830e
  40cc2e:	out    dx,al
  40cc2f:	cwde   
  40cc30:	call   0x9ce536cb
  40cc35:	pop    ebx
  40cc36:	test   al,0x20
  40cc38:	inc    DWORD PTR [edi-0x41c44142]
  40cc3e:	cmc    
  40cc3f:	inc    ebx
  40cc40:	das    
  40cc41:	pop    ecx
  40cc42:	sub    BYTE PTR [eax],bh
  40cc44:	xor    eax,0x3f194e87
  40cc49:	enter  0x3a7,0xac
  40cc4d:	(bad)  
  40cc4f:	mov    esi,DWORD PTR [ecx+0x7f]
  40cc52:	add    BYTE PTR [edx],ch
  40cc54:	lods   al,BYTE PTR ds:[esi]
  40cc55:	arpl   WORD PTR [eiz*8+0x1889882e],sp
  40cc5c:	and    BYTE PTR [eax],ch
  40cc5e:	or     DWORD PTR [eax+ebx*2-0x71c07a4],edx
  40cc65:	rol    DWORD PTR [ecx+0x5b691e10],0xb7
  40cc6c:	xor    eax,0xf27219
  40cc71:	add    BYTE PTR [esi+eiz*2-0x26981d01],ch
  40cc78:	push   0xffffffeb
  40cc7a:	je     0x40cc6f
  40cc7c:	add    DWORD PTR [edx],ebx
  40cc7e:	jmp    0x40cc1e
  40cc80:	xchg   ebx,ebp
  40cc82:	aad    0xd8
  40cc84:	(bad)
  40cc87:	fiadd  WORD PTR [eax]
  40cc89:	jmp    0xd281eb8b
  40cc8e:	das    
  40cc8f:	pop    ebx
  40cc90:	clc    
  40cc91:	repz sub BYTE PTR [eax+0x6030b081],ch
  40cc98:	jmp    0x75126807
  40cc9d:	mov    dh,0xab
  40cc9f:	in     eax,0x83
  40cca1:	jmp    0xf1b5aad2
  40cca6:	stos   DWORD PTR es:[edi],eax
  40cca7:	in     eax,0x25
  40cca9:	leave  
  40ccaa:	sub    al,0xde
  40ccac:	jle    0x40cc93
  40ccae:	stos   DWORD PTR es:[edi],eax
  40ccaf:	in     eax,0x27
  40ccb1:	leave  
  40ccb2:	sub    al,0xde
  40ccb4:	jge    0x40cc93
  40ccb6:	imul   ebx,esp,0xde2ce901
  40ccbc:	jmp    0x385f69f6
  40ccc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ccc2:	nop
  40ccc3:	ror    BYTE PTR ds:0xe99e6c7c,cl
  40ccc9:	xchg   edi,eax
  40ccca:	jge    0x40ccea
  40cccc:	pop    edi
  40cccd:	add    BYTE PTR [ebx+edx*8+0x0],al
  40ccd1:	dec    eax
  40ccd2:	aad    0x9e
  40ccd4:	and    al,0x4
  40ccd6:	add    BYTE PTR [eax],al
  40ccd8:	push   esp
  40ccd9:	iret   
  40ccda:	mov    dh,0x8
  40ccdc:	mov    ds:0x5cf981c6,eax
  40cce1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cce2:	push   ecx
  40cce3:	xor    edx,DWORD PTR [esi]
  40cce5:	pop    esp
  40cce6:	stc    
  40cce7:	or     eax,0x2c5b5a3
  40ccec:	inc    edi
  40cced:	fiadd  DWORD PTR [eax]
  40ccef:	add    BYTE PTR ds:0x1cf9817f,bl
  40ccf5:	push   ss
  40ccf6:	ds jle 0x40ccd8
  40ccf9:	pusha  
  40ccfa:	clc    
  40ccfb:	or     eax,0xf980cd88
  40cd00:	and    edx,0x0
  40cd03:	add    BYTE PTR [edx-0x6],ah
  40cd06:	jg     0x40cd01
  40cd08:	xor    edx,eax
  40cd0a:	std    
  40cd0b:	jmp    FWORD PTR [eax-0x3a]
  40cd0e:	cmp    cl,0x1f
  40cd11:	ret    0xfffd
  40cd14:	sub    esi,edi
  40cd16:	lds    eax,FWORD PTR [edx]
  40cd18:	aad    0xe1
  40cd1a:	add    BYTE PTR [eax],al
  40cd1c:	in     eax,dx
  40cd1d:	int3   
  40cd1e:	xor    al,al
  40cd20:	iret   
  40cd21:	and    eax,0x74d90c25
  40cd26:	mov    ebp,0xc6c2ad40
  40cd2b:	add    al,bh
  40cd2d:	loope  0x40cd2f
  40cd2f:	add    BYTE PTR [ebp-0x423fce08],bl
  40cd35:	stc    
  40cd36:	cmp    DWORD PTR [edx+esi*2-0x17],eax
  40cd3a:	jbe    0x40cd47
  40cd3c:	add    BYTE PTR [eax],al
  40cd3e:	push   es
  40cd3f:	sbb    bh,dh
  40cd41:	or     eax,0x26ae473
  40cd46:	outs   dx,BYTE PTR ds:[esi]
  40cd47:	xchg   BYTE PTR [edx],al
  40cd49:	xor    ebp,DWORD PTR [edi]
  40cd4b:	pop    es
  40cd4c:	inc    ebp
  40cd4d:	mov    DWORD PTR ds:0x6d3fc4f8,ebp
  40cd53:	rol    DWORD PTR [ecx],cl
  40cd55:	push   ebp
  40cd56:	mov    ah,0x2b
  40cd58:	push   eax
  40cd59:	xor    eax,DWORD PTR [ebp+edi*2-0xc5c7ac]
  40cd60:	fiadd  WORD PTR [edx+0x2f]
  40cd63:	jp     0x40cd50
  40cd65:	mov    ebp,0x401c2f
  40cd6a:	fpatan 
  40cd6c:	adc    eax,0x1871da4
  40cd71:	cmp    BYTE PTR [edx],dl
  40cd73:	pandn  mm0,QWORD PTR [edx+0x2f]
  40cd77:	push   edx
  40cd78:	adc    DWORD PTR [ecx+0x42c8af42],ecx
  40cd7e:	das    
  40cd7f:	ds push ds
  40cd81:	int3   
  40cd82:	icebp  
  40cd83:	pop    es
  40cd84:	add    eax,0xdb8f32c6
  40cd89:	inc    edx
  40cd8a:	das    
  40cd8b:	(bad)  
  40cd8c:	push   ebx
  40cd8d:	jmp    DWORD PTR [edx]
  40cd8f:	pop    ebx
  40cd90:	adc    BYTE PTR [eax+0x2f],al
  40cd93:	push   eax
  40cd94:	inc    edi
  40cd95:	or     BYTE PTR [eax+ecx*4],dl
  40cd98:	xor    eax,0x38ff7735
  40cd9d:	sub    BYTE PTR [edi+0x13],ah
  40cda0:	and    DWORD PTR [eax+0x0],ecx
  40cda3:	add    BYTE PTR [ebx-0x29],bl
  40cda6:	dec    ecx
  40cda7:	lss    eax,FWORD PTR [ecx+0x342f0001]
  40cdae:	mov    ds:0x27c76f15,al
  40cdb3:	and    al,0xc4
  40cdb5:	test   al,0x7c
  40cdb7:	iret   
  40cdb8:	inc    ecx
  40cdb9:	pop    es
  40cdba:	add    eax,0x1a604a6a
  40cdbf:	mov    edi,0x41b49f
  40cdc4:	add    eax,0x38a90fde
  40cdc9:	popf   
  40cdca:	daa    
  40cdcb:	adc    eax,0x1fc1ddef
  40cdd0:	test   ah,ah
  40cdd2:	mov    ?,WORD PTR [ebx+0x1a]
  40cdd5:	push   ds
  40cdd6:	call   0xdfc01304
  40cddb:	enter  0xdded,0x95
  40cddf:	clc    
  40cde0:	ins    DWORD PTR es:[edi],dx
  40cde1:	push   edx
  40cde2:	sti    
  40cde3:	sub    edi,edi
  40cde5:	sub    al,0xa8
  40cde7:	add    ecx,DWORD PTR [eax-0xe]
  40cdea:	jnp    0x40cdfd
  40cdec:	out    dx,eax
  40cded:	fst    st(2)
  40cdef:	sar    BYTE PTR [esp+edi*8+0x1de02b7f],0xe8
  40cdf7:	push   ebx
  40cdf8:	sub    dl,dh
  40cdfa:	repz adc BYTE PTR [edi-0x22],ch
  40cdfe:	dec    edx
  40cdff:	sbb    esp,esp
  40ce01:	pop    ds
  40ce02:	call   0xf792bbff
  40ce07:	xchg   BYTE PTR [eax],al
  40ce09:	add    al,dh
  40ce0b:	fisttp DWORD PTR [edx-0x17e00be4]
  40ce11:	scas   al,BYTE PTR es:[edi]
  40ce12:	xor    edi,DWORD PTR [ebp-0x11]
  40ce15:	into   
  40ce16:	ins    DWORD PTR es:[edi],dx
  40ce17:	fisubr WORD PTR [edx-0x44]
  40ce1a:	jmp    0xee3ff771
  40ce1f:	push   edx
  40ce20:	cmc    
  40ce21:	mov    BYTE PTR [ebx-0x1a],ch
  40ce24:	sbb    BYTE PTR [edi+0x47],dl
  40ce27:	fdivrp st(7),st
  40ce29:	add    ebp,DWORD PTR [edi]
  40ce2b:	xor    ebx,DWORD PTR [edi+0x1c9eabd4]
  40ce31:	inc    edi
  40ce32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce33:	xor    eax,esp
  40ce35:	mov    fs,WORD PTR [ebx-0x16]
  40ce38:	verw   WORD PTR [esi]
  40ce3b:	fsubrp st(7),st
  40ce3d:	stos   DWORD PTR es:[edi],eax
  40ce3e:	in     eax,0xba
  40ce40:	add    cl,ch
  40ce42:	sub    al,0xdb
  40ce44:	jae    0x40ce27
  40ce46:	mov    eax,ds:0x14fcfdcb
  40ce4b:	icebp  
  40ce4c:	inc    eax
  40ce4d:	jmp    0xdb49ed3
  40ce52:	mov    ah,0x52
  40ce54:	or     eax,0x11961e4e
  40ce59:	test   eax,0x51ff8e2c
  40ce5e:	inc    edx
  40ce5f:	(bad)  [ebx-0x1b]
  40ce62:	mov    bl,0xa9
  40ce64:	add    cl,bh
  40ce66:	sub    al,0xde
  40ce68:	push   ecx
  40ce69:	mov    edx,0xf4fe2ede
  40ce6e:	add    BYTE PTR [eax],al
  40ce70:	lock out dx,al
  40ce72:	inc    eax
  40ce73:	jmp    0x342a6a27
  40ce78:	cmp    DWORD PTR [ebx+0x3989a75d],ebx
  40ce7e:	ret    
  40ce7f:	icebp  
  40ce80:	sub    al,0x31
  40ce82:	mov    al,BYTE PTR ds:0xd97b5f82
  40ce88:	sub    al,0x52
  40ce8a:	or     al,0x72
  40ce8c:	outs   dx,DWORD PTR ds:[esi]
  40ce8d:	out    dx,al
  40ce8e:	pushw  0x4
  40ce91:	aaa    
  40ce92:	je     0x40ce81
  40ce94:	mov    cl,0x21
  40ce96:	adc    ebx,ebp
  40ce98:	pop    ecx
  40ce99:	xor    al,0x8a
  40ce9b:	cmp    al,0x3b
  40ce9d:	xor    eax,DWORD PTR [edi+esi*4-0x162c9dcb]
  40cea4:	sub    al,0xde
  40cea6:	mov    DWORD PTR [edi+eiz*1],ebx
  40cea9:	(bad)  
  40ceaa:	or     al,ch
  40ceac:	sub    al,0xde
  40ceae:	mov    ecx,eax
  40ceb0:	inc    ebp
  40ceb1:	(bad)  
  40ceb3:	call   0xdf1ee5e4
  40ceb8:	test   eax,0x96000098
  40cebd:	fimul  WORD PTR [ecx-0xd7979b3]
  40cec3:	fild   DWORD PTR [esi+0x24587de]
  40cec9:	fadd   st(6),st
  40cecb:	unpckhps xmm1,XMMWORD PTR [esi+edi*8-0x1]
  40ced0:	xchg   esi,eax
  40ced1:	pop    ebp
  40ced2:	fidiv  DWORD PTR [ebp+0x0]
  40ced5:	add    BYTE PTR [esi+0xa0fbd5d],cl
  40cedb:	js     0x40ceda
  40cedd:	call   DWORD PTR [esi+0x5d]
  40cee0:	mov    ebp,0x74db3c75
  40cee5:	or     al,0x9a
  40cee7:	lock mov eax,DWORD PTR [ebp+edi*2-0x20]
  40ceec:	push   eax
  40ceed:	jmp    FWORD PTR [ebx+0x3bff56e2]
  40cef3:	and    dl,BYTE PTR [edi]
  40cef5:	inc    eax
  40cef6:	inc    esi
  40cef7:	arpl   cx,ax
  40cef9:	or     al,0x78
  40cefb:	xchg   edi,eax
  40cefc:	adc    al,0xb8
  40cefe:	add    eax,0x508b011e
  40cf03:	test   DWORD PTR [edx-0x7421f925],esi
  40cf09:	add    al,0xc8
  40cf0b:	mov    BYTE PTR [edx-0x7b],dh
  40cf0e:	in     eax,dx
  40cf0f:	push   cs
  40cf10:	dec    esp
  40cf11:	mov    edx,DWORD PTR [ebx-0x1a]
  40cf14:	mov    esi,DWORD PTR [edi*8-0x2f837e01]
  40cf1b:	xchg   edi,eax
  40cf1c:	pop    ecx
  40cf1d:	jnp    0x9673dd3c
  40cf23:	fiadd  DWORD PTR [edi+ecx*1-0x2f]
  40cf27:	push   0x960b03bd
  40cf2c:	add    al,bl
  40cf2e:	int    0x9e
  40cf30:	jb     0x40cf7e
  40cf32:	iret   
  40cf33:	and    BYTE PTR [ecx],cl
  40cf35:	je     0x40cf66
  40cf37:	ror    DWORD PTR [edi+0x51],0x0
  40cf3b:	add    BYTE PTR [eax+0x42ff0cf2],dh
  40cf41:	adc    edx,DWORD PTR [ebx]
  40cf43:	inc    eax
  40cf44:	das    
  40cf45:	inc    esp
  40cf46:	ror    DWORD PTR [ebx],0x2e
  40cf49:	fimul  DWORD PTR [ecx]
  40cf4b:	adc    BYTE PTR [edx],0xb8
  40cf4e:	add    DWORD PTR [edx+edi*1+0x4c],esi
  40cf52:	inc    esi
  40cf53:	or     BYTE PTR [edx+eax*4-0x6cfafdf7],ch
  40cf5a:	pop    ecx
  40cf5b:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf5d:	(bad)  
  40cf5e:	mov    WORD PTR [edi+esi*1+0x4c],?
  40cf62:	ds cld 
  40cf64:	mov    dl,0x83
  40cf66:	add    DWORD PTR [edx],eax
  40cf68:	dec    DWORD PTR [edi]
  40cf6a:	cs adc cl,bh
  40cf6d:	pop    es
  40cf6e:	push   cs
  40cf6f:	dec    esp
  40cf70:	and    DWORD PTR [edi-0x34947cff],eax
  40cf76:	dec    edi
  40cf77:	jmp    DWORD PTR [edx]
  40cf79:	das    
  40cf7a:	adc    al,0x40
  40cf7c:	das    
  40cf7d:	cmp    al,0xc3
  40cf7f:	jmp    0x7c81:0x5ec1942d
  40cf86:	retf   0x2bc1
  40cf89:	(bad)  
  40cf8a:	dec    esi
  40cf8b:	mov    eax,DWORD PTR [ebx]
  40cf8d:	je     0x40cf1b
  40cf8f:	pop    esp
  40cf90:	aaa    
  40cf91:	les    edx,FWORD PTR [esi+0x10]
  40cf94:	mov    ah,0x7f
  40cf96:	mov    edx,ss
  40cf98:	pop    es
  40cf99:	loope  0x40cf9f
  40cf9b:	add    BYTE PTR [edi],ch
  40cf9d:	inc    ebx
  40cf9e:	ret    0x74
  40cfa1:	add    BYTE PTR [ebx],dh
  40cfa3:	aam    0xc1
  40cfa5:	jmp    0x3c3f:0x74b7f10e
  40cfac:	icebp  
  40cfad:	add    bl,BYTE PTR [edx-0x41]
  40cfb0:	mov    eax,0x3dde3b74
  40cfb5:	mov    ecx,0x43f62a1b
  40cfba:	das    
  40cfbb:	pop    ebp
  40cfbc:	stos   DWORD PTR es:[edi],eax
  40cfbd:	pop    es
  40cfbe:	hlt    
  40cfbf:	cmp    ah,ah
  40cfc1:	xor    DWORD PTR [edi+eiz*2],ebp
  40cfc4:	add    BYTE PTR es:[edi+ebx*4-0x6405a2e3],dh
  40cfcc:	jecxz  0x40cfd1
  40cfce:	stc    
  40cfcf:	fs ja  0x40d022
  40cfd2:	inc    esp
  40cfd3:	xor    al,dh
  40cfd5:	xor    DWORD PTR [ebp+eiz*2-0x53],ecx
  40cfd9:	pop    es
  40cfda:	stos   BYTE PTR es:[edi],al
  40cfdb:	push   ds
  40cfdc:	push   edi
  40cfdd:	jle    0x40d04d
  40cfdf:	push   ecx
  40cfe0:	loop   0x40cf92
  40cfe2:	js     0x40cfe0
  40cfe4:	sub    DWORD PTR [esi+ebp*2],eax
  40cfe7:	fs aas 
  40cfe9:	lods   al,BYTE PTR ds:[esi]
  40cfea:	cs xor DWORD PTR gs:[eax+0x47],edx
  40cfef:	iret   
  40cff0:	add    eax,0x27622f04
  40cff5:	das    
  40cff6:	sub    ah,BYTE PTR [edi-0x63]
  40cff9:	or     edi,DWORD PTR [edi-0x22]
  40cffc:	mov    dh,0x59
  40cffe:	ins    BYTE PTR es:[edi],dx
  40cfff:	mov    al,fs:0x6ddb41b
  40d005:	adc    eax,DWORD PTR [eax]
  40d007:	add    BYTE PTR [ebp+eiz*4+0x63],bl
  40d00b:	ret    
  40d00c:	sub    DWORD PTR [ecx+0x28],esi
  40d00f:	xchg   BYTE PTR [edi-0x29],ch
  40d012:	sub    bh,BYTE PTR [eax-0x7513fd84]
  40d018:	ja     0x40d010
  40d01a:	jb     0x40d021
  40d01c:	pop    ebp
  40d01d:	xlat   BYTE PTR ds:[ebx]
  40d01e:	aaa    
  40d01f:	add    BYTE PTR [eiz*4+0x7139c463],bh
  40d026:	test   al,0x89
  40d028:	outs   dx,DWORD PTR ds:[esi]
  40d029:	xlat   BYTE PTR ds:[ebx]
  40d02a:	test   eax,0xd72f00
  40d02f:	cmp    eax,0x2089dbcf
  40d034:	sub    esp,DWORD PTR [ebx-0x1]
  40d037:	cmp    bh,BYTE PTR [eax+0x27]
  40d03a:	or     edx,ebx
  40d03c:	jmp    0x40d099
  40d03e:	shl    dh,0x9f
  40d041:	sahf   
  40d042:	mov    ebp,DWORD PTR [eax]
  40d044:	loopne 0x40cfe3
  40d046:	add    al,0xe9
  40d048:	(bad)  [ebx+0x25]
  40d04b:	in     eax,0xa5
  40d04d:	sbb    DWORD PTR es:[edx+0x2a],esp
  40d051:	sub    al,0xfe
  40d053:	sbb    DWORD PTR [edi],esi
  40d055:	or     ecx,eax
  40d057:	ins    DWORD PTR es:[edi],dx
  40d058:	imul   ebp,eax,0xffffff93
  40d05b:	sub    BYTE PTR [esi+0x2f2bfe1e],ah
  40d061:	fimul  WORD PTR [ecx-0x9cbb60]
  40d067:	inc    ebp
  40d068:	sti    
  40d069:	in     eax,dx
  40d06a:	xor    DWORD PTR [eax],esi
  40d06c:	add    BYTE PTR [eax],al
  40d06e:	scas   eax,DWORD PTR es:[edi]
  40d06f:	xchg   edi,eax
  40d070:	or     eax,0x3f6a6a5c
  40d075:	cs ins BYTE PTR es:[edi],dx
  40d077:	fdiv   DWORD PTR [ebp+ecx*8+0x40]
  40d07b:	fs inc edi
  40d07d:	add    DWORD PTR [esi+ebx*8-0xe24e9ae],esp
  40d084:	xor    DWORD PTR [eax],esp
  40d086:	scas   eax,DWORD PTR es:[edi]
  40d087:	xchg   esi,eax
  40d088:	or     eax,0x3f69ea5c
  40d08d:	(bad)  
  40d08e:	out    dx,al
  40d08f:	fiadd  DWORD PTR [eax]
  40d091:	bound  esp,QWORD PTR [edx-0xa]
  40d094:	mov    eax,ebp
  40d096:	shl    DWORD PTR [esi],0x19
  40d099:	sbb    dh,dl
  40d09b:	pop    edx
  40d09c:	shr    dh,0x9f
  40d09f:	popf   
  40d0a0:	mov    ebp,DWORD PTR [eax]
  40d0a2:	mov    eax,0xb639569b
  40d0a7:	dec    edi
  40d0a8:	adc    DWORD PTR [eax],eax
  40d0aa:	xchg   ecx,eax
  40d0ab:	xlat   BYTE PTR ds:[ebx]
  40d0ac:	jge    0x40d0fd
  40d0ae:	push   es
  40d0af:	loop   0x40d038
  40d0b1:	inc    edi
  40d0b2:	into   
  40d0b3:	add    BYTE PTR [ecx-0x2d],0xd6
  40d0b7:	fiadd  DWORD PTR [edi+0x4697de7f]
  40d0bd:	xor    ch,al
  40d0bf:	inc    eax
  40d0c0:	add    BYTE PTR ds:[ecx+0x68153517],al
  40d0c7:	sbb    eax,DWORD PTR [ecx]
  40d0c9:	(bad)  
  40d0ca:	push   ecx
  40d0cb:	fisubr DWORD PTR [esi]
  40d0cd:	scas   al,BYTE PTR es:[edi]
  40d0ce:	inc    esi
  40d0cf:	loop   0x40d096
  40d0d1:	inc    edi
  40d0d2:	add    BYTE PTR [eax],al
  40d0d4:	fisubr DWORD PTR [ecx]
  40d0d6:	scas   eax,DWORD PTR es:[edi]
  40d0d7:	inc    eax
  40d0d8:	xchg   esi,eax
  40d0d9:	xchg   edi,eax
  40d0da:	inc    esi
  40d0db:	inc    eax
  40d0dc:	jne    0x40d11e
  40d0de:	add    BYTE PTR ds:[ecx+0x18],dl
  40d0e2:	inc    ebp
  40d0e3:	jbe    0x40d08d
  40d0e5:	sbb    al,BYTE PTR [ecx]
  40d0e7:	(bad)  
  40d0e8:	xchg   ecx,eax
  40d0e9:	and    dl,BYTE PTR [ecx-0x76256952]
  40d0ef:	(bad)  
  40d0f0:	mov    eax,0x2274fe9b
  40d0f5:	jmp    0x2471:0x8f46488b
  40d0fc:	ds pop ebx
  40d0fe:	mov    ebp,0x92827710
  40d103:	mov    edi,0x8c2da46
  40d108:	push   ss
  40d109:	push   edx
  40d10a:	add    edx,eax
  40d10c:	push   ds
  40d10d:	loop   0x40d140
  40d10f:	leave  
  40d110:	gs ror edx,0x43
  40d114:	push   es
  40d115:	sbb    edi,DWORD PTR [ecx+0x1204d20]
  40d11b:	push   esi
  40d11c:	jge    0x40d108
  40d11e:	mov    edx,esi
  40d120:	(bad)  
  40d121:	jl     0x40d13e
  40d123:	xor    ebp,DWORD PTR [edi]
  40d125:	mov    ecx,0x3e52f629
  40d12a:	cld    
  40d12b:	imul   ebp,DWORD PTR [esi+edx*4],0xffffff89
  40d12f:	outs   dx,DWORD PTR ds:[esi]
  40d130:	xor    ecx,DWORD PTR [eax-0x3b]
  40d133:	add    ebp,DWORD PTR [esi-0x36]
  40d136:	aad    0xd3
  40d138:	add    BYTE PTR [eax],al
  40d13a:	ins    BYTE PTR es:[edi],dx
  40d13b:	(bad)  
  40d13c:	xor    eax,0x15cab6e1
  40d141:	retf   
  40d142:	ins    BYTE PTR es:[edi],dx
  40d143:	(bad)  
  40d144:	push   ebx
  40d145:	ret    
  40d146:	mov    cs,ebx
  40d148:	enter  0x2f42,0xa2
  40d14c:	xor    DWORD PTR [edx],eax
  40d14e:	das    
  40d14f:	mov    DWORD PTR [esp+ecx*4],0x1c7df
  40d156:	stc    
  40d157:	repz out dx,eax
  40d159:	ror    ecx,1
  40d15b:	inc    esp
  40d15c:	mov    ah,0xfe
  40d15e:	add    BYTE PTR [eax-0x35],dl
  40d161:	mov    dh,BYTE PTR [ebx]
  40d163:	inc    edx
  40d164:	loope  0x40d130
  40d166:	in     al,dx
  40d167:	(bad)  
  40d168:	lock add edi,DWORD PTR [edx+0x2f42c7e7]
  40d16f:	call   0x42740432
  40d174:	in     eax,0xca
  40d176:	in     al,dx
  40d177:	(bad)  
  40d178:	mov    bh,dh
  40d17a:	pop    esi
  40d17b:	pop    ds
  40d17c:	and    dh,0x2e
  40d17f:	mov    eax,0x7dfbcfd
  40d184:	inc    eax
  40d185:	add    ah,bh
  40d187:	ret    0x5386
  40d18a:	inc    BYTE PTR [edi-0x3d49bdff]
  40d190:	xchg   BYTE PTR [edi],bl
  40d192:	in     al,0x87
  40d194:	add    DWORD PTR [ecx+0x4e815],eax
  40d19a:	das    
  40d19b:	inc    ebx
  40d19c:	rol    BYTE PTR [eax-0x21fb0000],0x56
  40d1a3:	add    ch,BYTE PTR [edi]
  40d1a5:	ficomp WORD PTR [ecx+esi*8-0x5d]
  40d1a9:	loope  0x40d227
  40d1ab:	jecxz  0x40d1a2
  40d1ad:	and    al,ch
  40d1af:	mov    BYTE PTR [edi],ch
  40d1b1:	adc    DWORD PTR [ecx],ebp
  40d1b3:	add    BYTE PTR [esp+ebx*4],cl
  40d1b6:	cli    
  40d1b7:	add    ah,BYTE PTR [ebp+edx*8+0x692f9c6a]
  40d1be:	jmp    0x40d236
  40d1c0:	jo     0x40d163
  40d1c2:	sub    al,BYTE PTR [esp+edi*8]
  40d1c5:	xchg   esi,eax
  40d1c6:	adc    edi,DWORD PTR [eax-0x54472b4f]
  40d1cc:	pop    ebp
  40d1cd:	(bad)  
  40d1ce:	pusha  
  40d1cf:	cli    
  40d1d0:	lods   eax,DWORD PTR ds:[esi]
  40d1d1:	sahf   
  40d1d2:	jmp    0x40d156
  40d1d4:	xchg   edi,eax
  40d1d5:	mov    cl,0x93
  40d1d7:	inc    eax
  40d1d8:	das    
  40d1d9:	push   edx
  40d1da:	pushf  
  40d1db:	mov    BYTE PTR [ebx],bh
  40d1dd:	mov    dl,0x93
  40d1df:	inc    eax
  40d1e0:	das    
  40d1e1:	jg     0x40d1ea
  40d1e3:	leave  
  40d1e4:	in     eax,dx
  40d1e5:	fstp   QWORD PTR [edx]
  40d1e7:	ret    
  40d1e8:	dec    ebp
  40d1e9:	pushf  
  40d1ea:	sbb    al,bl
  40d1ec:	mov    ch,0xa5
  40d1ee:	cmp    BYTE PTR [ebx-0xf174153],ch
  40d1f4:	sub    al,0x63
  40d1f6:	xchg   edi,eax
  40d1f7:	shr    ch,0xdd
  40d1fa:	xchg   esi,eax
  40d1fb:	lock xor ebp,DWORD PTR [esi]
  40d1fe:	sbb    DWORD PTR [eax+0x2f],eax
  40d201:	xor    al,0x4b
  40d203:	xlat   BYTE PTR ds:[ebx]
  40d204:	add    BYTE PTR [eax],al
  40d206:	pop    esp
  40d207:	and    al,ch
  40d209:	lock jo 0x40d274
  40d20c:	jecxz  0x40d28c
  40d20e:	dec    eax
  40d20f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d210:	stos   BYTE PTR es:[edi],al
  40d211:	add    ebp,DWORD PTR [edi+0x7f]
  40d214:	jecxz  0x40d1de
  40d216:	ins    DWORD PTR es:[edi],dx
  40d217:	fidiv  WORD PTR [edx-0x3e]
  40d21a:	out    dx,eax
  40d21b:	mov    BYTE PTR [eax],0xe2
  40d21e:	call   FWORD PTR [ebx-0x7d1ed777]
  40d224:	pop    eax
  40d225:	and    edi,DWORD PTR [esi+ebx*4-0x64061920]
  40d22c:	mov    DWORD PTR [eax-0x3122982a],ebp
  40d232:	pushf  
  40d233:	sahf   
  40d234:	loopne 0x40d22c
  40d236:	loope  0x40d1d3
  40d238:	mov    DWORD PTR [eax-0x5ed4416],ebp
  40d23e:	repz mov al,ds:0x2e8f6253
  40d244:	push   eax
  40d245:	adc    DWORD PTR [ebx+0x7de941af],edx
  40d24b:	jmp    0x248b:0xddecfbb0
  40d252:	shl    DWORD PTR [ebx],cl
  40d254:	(bad)  
  40d255:	fsub   QWORD PTR [ebp+ebp*8-0x6c5816c0]
  40d25c:	jae    0x40d23f
  40d25e:	mov    ebp,0xecdbb4ea
  40d263:	fucomp st(1)
  40d265:	jmp    0x0:0x51f919f9
  40d26c:	rcl    al,cl
  40d26e:	std    
  40d26f:	push   esi
  40d270:	jecxz  0x40d24f
  40d272:	(bad)  
  40d273:	sub    al,BYTE PTR [ebx-0x42]
  40d276:	aam    0xaa
  40d278:	sub    al,0xd3
  40d27a:	adc    ecx,DWORD PTR [ecx+0x2a011e39]
  40d280:	mov    bl,0x12
  40d282:	mov    cl,0xf
  40d284:	call   0xb9fad366
  40d289:	icebp  
  40d28a:	lods   al,BYTE PTR ds:[esi]
  40d28b:	sti    
  40d28c:	in     al,dx
  40d28d:	fst    QWORD PTR [esi-0x42]
  40d290:	test   eax,0x6cfba512
  40d295:	fidiv  WORD PTR [ebx+0x0]
  40d298:	add    BYTE PTR [ebp-0x2],cl
  40d29b:	faddp  st(5),st
  40d29d:	ficom  WORD PTR [esi-0x1]
  40d2a0:	sub    DWORD PTR [edx+0x3c],ebx
  40d2a3:	mov    al,0x30
  40d2a5:	sbb    eax,DWORD PTR [ecx]
  40d2a7:	add    BYTE PTR [ebx-0x1c],bl
  40d2aa:	call   0xfed0a443
  40d2af:	test   BYTE PTR [esi-0x3438eff6],dl
  40d2b5:	dec    edx
  40d2b6:	fadd   QWORD PTR [ebx-0x3a]
  40d2b9:	add    eax,0xa4c640b1
  40d2be:	add    al,0xb0
  40d2c0:	mov    al,ds:0x1801011b
  40d2c5:	(bad)  
  40d2c6:	sar    BYTE PTR [esi+0x42aaa6],cl
  40d2cc:	clc    
  40d2cd:	mov    ss,esi
  40d2cf:	call   0x907dd2d4
  40d2d4:	(bad)  
  40d2d5:	call   FWORD PTR [eax+0x53]
  40d2d8:	idiv   bh
  40d2da:	mov    ch,0x53
  40d2dc:	(bad)  
  40d2dd:	pop    edi
  40d2de:	xor    BYTE PTR [ebx],ah
  40d2e0:	ret    0x5a3b
  40d2e3:	mov    BYTE PTR [ecx],0x76
  40d2e6:	jo     0x40d29b
  40d2e8:	inc    ecx
  40d2e9:	and    al,0x8a
  40d2eb:	xor    al,0x41
  40d2ed:	mov    edx,esi
  40d2ef:	adc    eax,0x74163305
  40d2f4:	push   cs
  40d2f5:	call   0x3f62c9
  40d2fa:	push   ebp
  40d2fb:	test   al,0xf6
  40d2fd:	neg    ch
  40d2ff:	cwde   
  40d300:	add    al,BYTE PTR [edx+edi*1-0x2e]
  40d304:	pop    ebx
  40d305:	ret    0xde4a
  40d308:	push   esi
  40d309:	xor    ebx,DWORD PTR [eax]
  40d30b:	ret    0x2471
  40d30e:	inc    edx
  40d30f:	adc    al,0x21
  40d311:	push   edi
  40d312:	das    
  40d313:	mov    eax,0xcb4b7b77
  40d318:	pop    edx
  40d319:	mov    eax,0x1c818
  40d31e:	pop    es
  40d31f:	adc    DWORD PTR [ebx+0x3e3d08fe],esi
  40d325:	and    al,0x33
  40d327:	aas    
  40d328:	push   es
  40d329:	push   cs
  40d32a:	jno    0x40d328
  40d32c:	cmp    BYTE PTR [edi+ebx*1],ah
  40d32f:	xor    eax,0x85895ea8
  40d334:	add    BYTE PTR [eax],al
  40d336:	add    BYTE PTR [eax],al
  40d338:	jp     0x40d376
  40d33a:	mov    eax,ds:0x57b3cb82
  40d33f:	call   FWORD PTR [edx-0x49]
  40d342:	cdq    
  40d343:	pushf  
  40d344:	enter  0xaf88,0x8a
  40d348:	mov    edi,0xc7f8363e
  40d34d:	mov    dl,0xb0
  40d34f:	(bad)  
  40d350:	mov    al,0x2e
  40d352:	add    eax,0x35c72f01
  40d357:	adc    BYTE PTR [eax-0x6],ch
  40d35a:	mov    al,ds:0x506e89f
  40d35f:	(bad)  
  40d360:	jmp    0x9cc6:0xef4e7956
  40d367:	or     eax,0xb3a0fa68
  40d36c:	call   0xeb07d4f7
  40d371:	ss gs dec esi
  40d374:	out    dx,eax
  40d375:	(bad)  
  40d376:	push   esp
  40d377:	xor    eax,DWORD PTR [esi+edi*1+0x7aa6fc4e]
  40d37e:	adc    DWORD PTR [ebx],edi
  40d380:	pop    esp
  40d381:	rol    BYTE PTR [edi+0x1c72e1a],0x8b
  40d388:	jmp    0x70de:0x1fdf84be
  40d38f:	inc    edi
  40d390:	cmp    ebp,DWORD PTR [ecx]
  40d392:	imul   ebp,DWORD PTR [edi],0x3f
  40d395:	fcomp  QWORD PTR [ecx+eiz*8-0x4ef23bf8]
  40d39c:	add    BYTE PTR [eax],al
  40d39e:	sbb    DWORD PTR [edi-0x21d0fd19],eax
  40d3a4:	jae    0x40d3b9
  40d3a6:	lock sbb al,BYTE PTR [esp+eiz*2]
  40d3aa:	jno    0x40d3ca
  40d3ac:	call   0x9c0f4779
  40d3b1:	inc    eax
  40d3b2:	outs   dx,DWORD PTR ds:[esi]
  40d3b3:	(bad)  
  40d3b5:	add    eax,esi
  40d3b7:	sbb    al,ah
  40d3b9:	ja     0x40d42c
  40d3bb:	push   ds
  40d3bc:	call   0x880f4789
  40d3c1:	inc    eax
  40d3c2:	outs   dx,DWORD PTR ds:[esi]
  40d3c3:	fisubr WORD PTR [edx+0x26]
  40d3c6:	pop    ds
  40d3c7:	fisubr WORD PTR [edx+0x2e]
  40d3ca:	mov    ebx,0xa5e233dd
  40d3cf:	pushf  
  40d3d0:	rol    BYTE PTR [esi-0x4d],cl
  40d3d3:	pop    esp
  40d3d4:	lahf   
  40d3d5:	add    ah,BYTE PTR [ecx]
  40d3d7:	cli    
  40d3d8:	jg     0x40d439
  40d3da:	mov    ds:0x707c8ed0,al
  40d3df:	xchg   ebp,eax
  40d3e0:	call   0xcb1f02e7
  40d3e5:	mov    ebx,0x15fca645
  40d3ea:	mov    ah,0x22
  40d3ec:	fcomp  QWORD PTR ds:0x7ace364f
  40d3f2:	sub    al,0x37
  40d3f4:	jno    0x40d444
  40d3f6:	imul   eax,esi,0x73
  40d3f9:	add    ebp,DWORD PTR [edi]
  40d3fb:	ficom  WORD PTR [ebp+0x46]
  40d3fe:	daa    
  40d3ff:	(bad)  
  40d400:	mov    ebx,0xab0000f4
  40d405:	mov    ah,0xb4
  40d407:	or     DWORD PTR [ecx+0x1a],eax
  40d40a:	add    ecx,esp
  40d40c:	lods   al,BYTE PTR ds:[esi]
  40d40d:	dec    esp
  40d40e:	sub    BYTE PTR [ecx+0x4],al
  40d411:	sar    ch,1
  40d413:	es adc bl,bl
  40d416:	xor    DWORD PTR [ebx],edi
  40d418:	jne    0x40d3e1
  40d41a:	out    dx,eax
  40d41b:	ins    BYTE PTR es:[edi],dx
  40d41c:	cli    
  40d41d:	dec    edx
  40d41e:	sbb    BYTE PTR [ebx+0x1158e53a],bh
  40d424:	jmp    0xd22:0x84fefdd1
  40d42b:	out    0x86,al
  40d42d:	(bad)  
  40d42e:	pushw  0xffec
  40d431:	jmp    DWORD PTR [esi+0x70]
  40d434:	daa    
  40d435:	xor    eax,0x1a644aea
  40d43a:	adc    DWORD PTR [edx+0x27],esp
  40d43d:	pop    ecx
  40d43e:	in     al,dx
  40d43f:	bound  esp,QWORD PTR [esi-0x1e]
  40d442:	mov    eax,DWORD PTR ds:0x68c10b63
  40d448:	cdq    
  40d449:	outs   dx,DWORD PTR ds:[esi]
  40d44a:	dec    ebp
  40d44b:	sub    DWORD PTR [ebx],ebp
  40d44d:	fist   WORD PTR [ebx+0x48de15a9]
  40d453:	push   0xffffff8b
  40d455:	loope  0x40d3d8
  40d457:	test   eax,0x978cc636
  40d45c:	rcl    al,1
  40d45e:	mul    BYTE PTR [ebx+ebx*4]
  40d461:	fisub  WORD PTR [esi-0xa]
  40d464:	add    bl,bl
  40d466:	xor    BYTE PTR [edi],al
  40d468:	add    BYTE PTR [eax],al
  40d46a:	or     bl,al
  40d46c:	jae    0x40d43b
  40d46e:	mov    edx,0x40eb091a
  40d473:	fild   WORD PTR [ebx-0x761cc8be]
  40d479:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d47a:	push   0xf4d58239
  40d47f:	iret   
  40d480:	and    ch,dl
  40d482:	pop    ecx
  40d483:	leave  
  40d484:	inc    ebx
  40d485:	add    BYTE PTR [esi-0x2d],bl
  40d488:	jno    0x40d49b
  40d48a:	fcompp 
  40d48c:	(bad)  
  40d48d:	(bad)  
  40d48e:	stc    
  40d48f:	xor    DWORD PTR [ecx],eax
  40d491:	je     0x40d4e1
  40d493:	inc    ebx
  40d494:	fdivp  st(7),st
  40d496:	inc    esi
  40d497:	(bad)  [esi+0x1]
  40d49a:	adc    DWORD PTR [ebp+esi*2-0x8],edx
  40d49e:	aad    0x7f
  40d4a0:	inc    esp
  40d4a1:	adc    ch,bh
  40d4a3:	mov    al,ds:0x8116820e
  40d4a8:	(bad)  
  40d4a9:	jmp    FWORD PTR [ecx-0x19f7bb78]
  40d4af:	and    esi,DWORD PTR [ebp+0x19]
  40d4b2:	xchg   ebx,eax
  40d4b3:	mov    BYTE PTR [ecx+0x15],dh
  40d4b6:	jge    0x40d4de
  40d4b8:	or     eax,0xff0a1a8d
  40d4bd:	push   bp
  40d4bf:	ret    0x751d
  40d4c2:	int    0x5b
  40d4c4:	call   0xf555eccb
  40d4c9:	jmp    0x40d4a0
  40d4cb:	push   ebx
  40d4cc:	inc    ebp
  40d4cd:	or     al,0x0
  40d4cf:	add    ch,al
  40d4d1:	xchg   ecx,eax
  40d4d2:	repz inc ebp
  40d4d4:	into   
  40d4d5:	fsub   DWORD PTR [esi-0x77]
  40d4d8:	mov    edx,0x9913750a
  40d4dd:	inc    edi
  40d4de:	push   es
  40d4df:	cmp    DWORD PTR [edi+0x50b72f9],0xffffff82
  40d4e6:	ja     0x40d55f
  40d4e8:	sbb    BYTE PTR [ebx-0x40],0xe0
  40d4ec:	xor    BYTE PTR [ecx+0x6],dl
  40d4ef:	mov    edx,eax
  40d4f1:	and    al,cl
  40d4f3:	ret    0xda5a
  40d4f6:	push   ebx
  40d4f7:	mov    ebx,edx
  40d4f9:	pop    ebx
  40d4fa:	jmp    0xedba857
  40d4ff:	test   BYTE PTR [edi],ch
  40d501:	stc    
  40d502:	add    DWORD PTR [eax],eax
  40d504:	das    
  40d505:	cmp    dh,BYTE PTR [esi+ecx*1+0x200ab]
  40d50c:	das    
  40d50d:	inc    esi
  40d50e:	jmp    0x1574:0x5183dd44
  40d515:	xor    al,BYTE PTR [ecx-0x54]
  40d518:	fisubr WORD PTR [edx+0x1]
  40d51b:	lea    edi,[edx+0x1f]
  40d51e:	push   ebp
  40d51f:	call   0x40a384
  40d524:	mov    dl,0xf7
  40d526:	cmp    BYTE PTR [edi],al
  40d528:	test   ebx,esp
  40d52a:	pushf  
  40d52b:	mov    ds:0x8301b72f,eax
  40d530:	add    al,0xc5
  40d532:	inc    BYTE PTR [esi-0x485e0000]
  40d538:	add    DWORD PTR [eax],eax
  40d53a:	lock fisttp DWORD PTR [ebp+0x4f79cb5]
  40d541:	mov    ebp,DWORD PTR [edi-0x41]
  40d544:	out    0x7e,al
  40d546:	push   ebp
  40d547:	fucomip st,st(2)
  40d54a:	push   ecx
  40d54b:	push   eax
  40d54c:	inc    ebp
  40d54d:	add    al,0xd4
  40d54f:	push   ds
  40d550:	and    BYTE PTR ds:0xf36a02f,0x80
  40d557:	not    DWORD PTR [ebx+ebp*8]
  40d55a:	inc    ecx
  40d55b:	aam    0x74
  40d55d:	aas    
  40d55e:	cmp    eax,0xd80f1c70
  40d563:	inc    DWORD PTR [eax]
  40d565:	imul   BYTE PTR [esi-0x47]
  40d568:	xor    eax,0x450c2006
  40d56d:	adc    al,0x94
  40d56f:	(bad)  
  40d570:	ja     0x40d532
  40d572:	outs   dx,BYTE PTR ds:[esi]
  40d573:	pop    edi
  40d574:	inc    DWORD PTR [edx+0x4e983d67]
  40d57a:	lods   al,BYTE PTR ds:[esi]
  40d57b:	fdivrp st(5),st
  40d57d:	lods   al,BYTE PTR ds:[esi]
  40d57e:	push   ebp
  40d57f:	sbb    dl,BYTE PTR [esi+0x44]
  40d582:	xor    esp,edx
  40d584:	fild   DWORD PTR ds:0x15a79528
  40d58a:	inc    esp
  40d58b:	or     al,0x6b
  40d58d:	mov    esp,0xfd00b949
  40d592:	jns    0x40d5b2
  40d594:	rcr    BYTE PTR [eax+0x4476dcfd],cl
  40d59a:	add    BYTE PTR [eax],al
  40d59c:	adc    edi,DWORD PTR [ecx+0x15e1fcd4]
  40d5a2:	add    BYTE PTR [ecx],al
  40d5a4:	not    DWORD PTR [esi-0x1b]
  40d5a7:	cwde   
  40d5a8:	push   ebx
  40d5a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5aa:	in     eax,0x13
  40d5ac:	je     0x40d5cc
  40d5ae:	call   0x371e014b
  40d5b3:	inc    esp
  40d5b4:	xor    edx,ebp
  40d5b6:	pop    ss
  40d5b7:	cdq    
  40d5b8:	sub    ch,bl
  40d5ba:	ss inc esp
  40d5bc:	and    ebx,DWORD PTR [edi-0x1b2bf831]
  40d5c2:	out    dx,al
  40d5c3:	je     0x40d5e5
  40d5c5:	fisubr DWORD PTR [eax-0x389ecc65]
  40d5cb:	add    ah,BYTE PTR [esi-0x83c051d]
  40d5d1:	mov    al,ds:0xdfd5af51
  40d5d6:	inc    ecx
  40d5d7:	scas   al,BYTE PTR es:[edi]
  40d5d8:	pusha  
  40d5d9:	xchg   edi,eax
  40d5da:	stos   BYTE PTR es:[edi],al
  40d5db:	xchg   ebx,eax
  40d5dc:	adc    dl,BYTE PTR [ecx-0x6ea8fbd9]
  40d5e2:	daa    
  40d5e3:	add    al,0x5d
  40d5e5:	xchg   ecx,eax
  40d5e6:	daa    
  40d5e7:	add    al,0x57
  40d5e9:	xchg   ecx,eax
  40d5ea:	daa    
  40d5eb:	add    al,0x51
  40d5ed:	xchg   ecx,eax
  40d5ee:	daa    
  40d5ef:	add    al,0x5a
  40d5f1:	xchg   ecx,eax
  40d5f2:	daa    
  40d5f3:	add    al,0xe3
  40d5f5:	nop
  40d5f6:	add    BYTE PTR [ecx],ch
  40d5f8:	xor    edi,DWORD PTR [ebx]
  40d5fa:	mov    dl,0x29
  40d5fc:	sub    edx,DWORD PTR [ecx-0x4e]
  40d5ff:	test   eax,0x472c0000
  40d604:	mov    dl,0xa9
  40d606:	sub    al,0xfb
  40d608:	mov    cl,0xa9
  40d60a:	sub    al,0x61
  40d60c:	mov    cl,0xa9
  40d60e:	sub    al,0x59
  40d610:	mov    cl,0xa9
  40d612:	sub    al,0x71
  40d614:	mov    cl,0xa9
  40d616:	sub    al,0x6a
  40d618:	mov    cl,0xa9
  40d61a:	sub    al,0x35
  40d61c:	mov    dl,0xa9
  40d61e:	sub    al,0x33
  40d620:	mov    dl,BYTE PTR ds:0xba10b7af
  40d626:	pop    ds
  40d627:	test   eax,0xa629d156
  40d62c:	fisubr WORD PTR [edx+0x4738512c]
  40d632:	sub    al,0xab
  40d634:	inc    ecx
  40d635:	jmp    0x4d54a194
  40d63a:	push   ds
  40d63b:	push   ds
  40d63c:	add    DWORD PTR [ecx+0x2adea621],esi
  40d642:	xor    edx,DWORD PTR [ecx+0x1f]
  40d645:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d646:	cs enter 0x2aca,0x33
  40d64b:	retf   
  40d64c:	(bad)
  40d64f:	scas   eax,DWORD PTR es:[edi]
  40d650:	inc    ecx
  40d651:	jmp    0xe981f2f6
  40d656:	inc    ebx
  40d657:	jmp    0xe4c6:0xde7097dc
  40d65e:	in     al,0xa9
  40d660:	inc    ecx
  40d661:	jmp    0xf53f0a99
  40d666:	add    BYTE PTR [eax],al
  40d668:	clc    
  40d669:	in     al,dx
  40d66a:	inc    eax
  40d66b:	jmp    0x6132008b
  40d670:	out    0xd1,al
  40d672:	xchg   DWORD PTR [eax],eax
  40d674:	push   ebx
  40d675:	jp     0x40d5fc
  40d677:	pop    ebp
  40d678:	add    edi,eax
  40d67a:	mov    bl,0x45
  40d67c:	add    DWORD PTR [ebx+0xd],ecx
  40d67f:	clc    
  40d680:	call   0x80cd:0xd1530123
  40d687:	lea    ecx,[ebx+0x38e84d8f]
  40d68d:	xchg   esp,eax
  40d68e:	std    
  40d68f:	dec    edx
  40d691:	mov    eax,ds:0x1cf00b74
  40d696:	inc    BYTE PTR [eax+0x71ff7883]
  40d69c:	and    ch,BYTE PTR [ebx-0x1]
  40d69f:	mov    dl,0x47
  40d6a1:	inc    esi
  40d6a2:	inc    ebp
  40d6a3:	lock ds cwde 
  40d6a6:	jmp    0x40d6a8
  40d6a8:	push   ss
  40d6a9:	adc    eax,0x89ddc38b
  40d6ae:	ret    0x8d55
  40d6b1:	data16 sub ah,0xea
  40d6b5:	xor    esi,DWORD PTR [edx]
  40d6b7:	fistp  DWORD PTR [eax+0x20d81cb6]
  40d6bd:	and    eax,DWORD PTR [ecx]
  40d6bf:	jne    0x40d680
  40d6c1:	xor    al,0xfe
  40d6c3:	ficom  WORD PTR ds:0xdbff56e2
  40d6c9:	sub    dl,BYTE PTR [eax]
  40d6cb:	inc    eax
  40d6cc:	add    BYTE PTR [eax],al
  40d6ce:	(bad)  
  40d6cf:	mov    dh,0x1c
  40d6d1:	fadd   DWORD PTR [eax-0x2f8afedd]
  40d6d7:	pushf  
  40d6d8:	add    al,0xfa
  40d6da:	jl     0x40d6ff
  40d6dc:	add    edi,edi
  40d6de:	mov    ebp,ebx
  40d6e0:	clc    
  40d6e1:	aam    0x5
  40d6e3:	loop   0x40d6d1
  40d6e5:	dec    edi
  40d6e6:	push   esi
  40d6e7:	loop   0x40d670
  40d6e9:	sbb    eax,0x4294e2
  40d6ee:	das    
  40d6ef:	jnp    0x40d6f1
  40d6f1:	fdiv   DWORD PTR [ecx-0x9]
  40d6f4:	add    al,0x1
  40d6f6:	loope  0x40d75b
  40d6f8:	adc    BYTE PTR [ebp+ebx*1+0x1f6a04f5],ch
  40d6ff:	ds dec ecx
  40d701:	in     al,dx
  40d702:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d703:	fnstenv [eax+ecx*4+0x5c7a290a]
  40d70a:	pusha  
  40d70b:	mov    bh,dl
  40d70d:	mov    ch,0xf2
  40d70f:	xor    edi,DWORD PTR [edi+0xc]
  40d712:	push   edi
  40d713:	adc    BYTE PTR [edi+0x0],al
  40d716:	fsub   QWORD PTR [ebx]
  40d718:	out    dx,al
  40d719:	xor    BYTE PTR [edx+0x474f9581],0x5a
  40d720:	mov    ah,0xff
  40d722:	xor    BYTE PTR [eax-0x3e],al
  40d725:	jae    0x40d770
  40d727:	test   BYTE PTR [eax+0x44],bh
  40d72a:	daa    
  40d72b:	mov    BYTE PTR [edx+0x313e2774],ch
  40d731:	clc    
  40d732:	add    BYTE PTR [eax],al
  40d734:	xchg   DWORD PTR [esi-0x1f90ffff],edi
  40d73a:	xor    ah,dh
  40d73c:	add    BYTE PTR [ebx-0x4890eb3f],dh
  40d742:	xchg   bh,dh
  40d744:	cs push ebx
  40d746:	or     eax,0x84c072fe
  40d74b:	jl     0x40d72d
  40d74d:	mov    ch,0x33
  40d74f:	mov    esi,0x74a80481
  40d754:	daa    
  40d755:	cwde   
  40d756:	or     eax,0x4f72150
  40d75b:	sub    ebx,0xffffffbb
  40d75e:	pushf  
  40d75f:	add    DWORD PTR [esi+esi*4+0x76],edi
  40d763:	inc    esp
  40d764:	ret    
  40d765:	lahf   
  40d766:	out    0xed,al
  40d768:	das    
  40d769:	fsubrp st(7),st
  40d76b:	dec    ecx
  40d76c:	mov    ch,0x9d
  40d76e:	inc    edx
  40d76f:	mov    ebx,0x4ee7e26e
  40d774:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d775:	mov    edx,0x304c986a
  40d77a:	inc    esi
  40d77b:	cld    
  40d77c:	pop    ebx
  40d77d:	sbb    eax,0xe37051e8
  40d782:	(bad)  
  40d784:	in     eax,dx
  40d785:	(bad)  
  40d787:	add    ch,BYTE PTR [edi]
  40d789:	fisub  WORD PTR [esi+0xf]
  40d78c:	mov    edi,0xb203a7ec
  40d791:	sahf   
  40d792:	out    0x7f,al
  40d794:	and    al,0xdf
  40d796:	out    0x3,eax
  40d798:	add    BYTE PTR [eax],al
  40d79a:	aad    0xdb
  40d79c:	mov    al,ds:0x14e633ea
  40d7a1:	inc    ebp
  40d7a2:	das    
  40d7a3:	fldcw  WORD PTR [edi+eiz*4+0x30]
  40d7a7:	leave  
  40d7a8:	out    0x63,eax
  40d7aa:	dec    esi
  40d7ab:	mov    al,0xaa
  40d7ad:	add    ebx,DWORD PTR [esp+ebp*4-0x25]
  40d7b1:	add    ah,BYTE PTR [edx-0x407b6d4]
  40d7b7:	sbb    al,0xe8
  40d7b9:	test   BYTE PTR [eax],al
  40d7bb:	jecxz  0x40d839
  40d7bd:	in     al,0xcf
  40d7bf:	in     eax,dx
  40d7c0:	adc    al,0x45
  40d7c2:	das    
  40d7c3:	add    eax,0xa0262f2a
  40d7c8:	in     al,0x3
  40d7ca:	add    bl,BYTE PTR ds:0x49d402e8
  40d7d0:	imul   ebp,DWORD PTR [ebx-0x1313add1],0xffffffef
  40d7d7:	push   edx
  40d7d8:	pop    ebx
  40d7d9:	jl     0x40d816
  40d7db:	ficomp WORD PTR [esp+eax*2-0x7aad4ad1]
  40d7e2:	rcr    bh,0x0
  40d7e5:	cmp    al,0xd
  40d7e7:	jg     0x40d7f9
  40d7e9:	xchg   esp,eax
  40d7ea:	repz fnstsw WORD PTR [ecx]
  40d7ed:	stos   DWORD PTR es:[edi],eax
  40d7ee:	push   ecx
  40d7ef:	xlat   BYTE PTR ds:[ebx]
  40d7f0:	(bad)  
  40d7f1:	in     al,0x2c
  40d7f3:	mov    bl,0x41
  40d7f5:	jmp    0x6a958b8a
  40d7fa:	aam    0xdd
  40d7fc:	jae    0x40d834
  40d7fe:	add    BYTE PTR [eax],al
  40d800:	ins    DWORD PTR es:[edi],dx
  40d801:	loope  0x40d803
  40d803:	xchg   esp,eax
  40d804:	repz fld QWORD PTR [esi]
  40d807:	sub    dh,0x3
  40d80a:	shl    ch,0x68
  40d80d:	add    al,0x2
  40d80f:	fcom   QWORD PTR [esi+0x7d]
  40d812:	or     al,0x34
  40d814:	repz fld QWORD PTR [ecx+0x10515151]
  40d81b:	adc    BYTE PTR [eax-0x28],al
  40d81e:	shr    DWORD PTR [edx+0x272d532c],cl
  40d824:	cmp    eax,ecx
  40d826:	aam    0xaa
  40d828:	sub    al,0xdd
  40d82a:	jmp    0x7108a39
  40d82f:	pushf  
  40d830:	ss jge 0x40d843
  40d833:	xor    al,0x73
  40d835:	fidivr WORD PTR [ecx]
  40d837:	sub    eax,DWORD PTR [ecx-0x2b]
  40d83a:	(bad)  
  40d83b:	in     al,0x2c
  40d83d:	mov    cl,0x41
  40d83f:	jmp    0x6a4d8d45
  40d844:	(bad)  
  40d845:	fidiv  WORD PTR [ebx-0x12]
  40d848:	out    dx,al
  40d849:	loop   0x40d84b
  40d84b:	adc    al,0x73
  40d84d:	fiadd  WORD PTR ds:0x41b13f88
  40d853:	jmp    0xea3ea0a3
  40d858:	sub    al,0x3
  40d85a:	leave  
  40d85b:	repnz mov edx,eax
  40d85e:	iret   
  40d85f:	add    BYTE PTR ds:0xffb58a,dh
  40d865:	add    dh,al
  40d867:	fild   DWORD PTR [eax]
  40d869:	dec    di
  40d86b:	(bad)  
  40d86e:	push   ebp
  40d86f:	loop   0x40d8d7
  40d871:	cmp    DWORD PTR [ebx-0x79bc2921],edx
  40d877:	clc    
  40d878:	adc    esp,DWORD PTR [esi+0x7f]
  40d87b:	out    dx,al
  40d87c:	push   ds
  40d87d:	(bad)  
  40d87e:	push   ebp
  40d87f:	loop   0x40d8f4
  40d881:	or     al,0xf6
  40d883:	aad    0xd6
  40d885:	inc    ebx
  40d886:	xchg   BYTE PTR ds:0xe245d502,bh
  40d88c:	jmp    0x52da697
  40d891:	aad    0x95
  40d893:	fisttp DWORD PTR [ebx-0x1cde5bb]
  40d899:	adc    eax,0x40ebd2
  40d89e:	jo     0x40d8e4
  40d8a0:	inc    ebp
  40d8a1:	fdiv   QWORD PTR [eax+0x3c]
  40d8a4:	add    al,0xd5
  40d8a6:	test   ebx,ebx
  40d8a8:	mov    al,0x1
  40d8aa:	in     eax,dx
  40d8ab:	retf   0xd232
  40d8ae:	and    eax,0x171c659b
  40d8b3:	fild   DWORD PTR [eax]
  40d8b5:	data16 gs (bad) 
  40d8b9:	inc    ebx
  40d8ba:	push   es
  40d8bb:	sub    eax,0xe239ffb9
  40d8c0:	add    BYTE PTR [esi+0x7e],dl
  40d8c3:	in     eax,dx
  40d8c4:	add    ch,dl
  40d8c6:	(bad)
  40d8c9:	adc    eax,0xae020000
  40d8ce:	inc    edx
  40d8cf:	add    BYTE PTR [eax+0x15d5043b],dh
  40d8d5:	loop   0x40d8d4
  40d8d7:	adc    eax,0x40d816
  40d8dc:	das    
  40d8dd:	xor    al,0xbe
  40d8df:	or     edi,ebp
  40d8e1:	je     0x40d926
  40d8e3:	leave  
  40d8e4:	in     al,dx
  40d8e5:	xor    al,0xe9
  40d8e7:	out    dx,eax
  40d8e8:	fpatan 
  40d8ea:	add    al,0x0
  40d8ec:	cmp    cl,dl
  40d8ee:	dec    ebx
  40d8ef:	mov    esi,0x42582f
  40d8f4:	stc    
  40d8f5:	jg     0x40d907
  40d8f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8f8:	cmp    eax,0x528004f5
  40d8fd:	gs ret 
  40d8ff:	inc    edx
  40d900:	das    
  40d901:	mov    ch,0x30
  40d903:	pop    ss
  40d904:	xchg   edi,eax
  40d905:	leave  
  40d906:	mov    ds:0xc24078fe,eax
  40d90b:	jae    0x40d92e
  40d90d:	xor    al,0xe1
  40d90f:	repz mov ebx,esi
  40d912:	add    al,0x0
  40d914:	imul   edi,DWORD PTR [ecx-0x4b13224f],0xc9505604
  40d91e:	push   ebp
  40d91f:	adc    edi,ebp
  40d921:	mov    ah,0x43
  40d923:	mov    al,ds:0x42ea2f
  40d928:	ins    BYTE PTR es:[edi],dx
  40d929:	xor    al,0xe9
  40d92b:	out    dx,eax
  40d92c:	push   ecx
  40d92d:	jae    0x40d930
  40d92f:	add    BYTE PTR [eax],al
  40d931:	add    BYTE PTR [edx+0x2fbe4bca],ah
  40d937:	sbb    al,0x43
  40d939:	add    BYTE PTR [ecx+0x3da410e4],al
  40d93f:	ja     0x40d942
  40d941:	or     BYTE PTR [edx-0x19],0xc3
  40d945:	inc    edx
  40d946:	das    
  40d947:	mov    bh,0x30
  40d949:	pop    ss
  40d94a:	pop    es
  40d94b:	xchg   DWORD PTR [ebx-0x3dcc0f02],esp
  40d951:	jae    0x40d98c
  40d953:	cmp    cl,ah
  40d955:	repz add edi,ebx
  40d958:	sub    al,BYTE PTR [edi+ebp*1]
  40d95b:	pushf  
  40d95c:	in     al,0xb3
  40d95e:	repnz and eax,ebp
  40d961:	add    ah,BYTE PTR [ecx-0x3b]
  40d964:	hlt    
  40d965:	push   edi
  40d966:	push   ds
  40d967:	push   ds
  40d968:	call   0x951b68b2
  40d96d:	inc    ecx
  40d96e:	das    
  40d96f:	mov    eax,ds:0x2f94791c
  40d974:	sbb    esi,ecx
  40d976:	test   DWORD PTR [esi],eax
  40d978:	add    eax,0xe8217ab4
  40d97d:	cs pop esp
  40d97f:	sub    al,0x56
  40d981:	add    al,0x68
  40d983:	and    eax,ebp
  40d985:	dec    ebp
  40d986:	sub    bl,0x4b
  40d989:	adc    ch,bh
  40d98b:	fnstsw WORD PTR [edi+0x2aa47f06]
  40d991:	add    al,0xe2
  40d993:	jmp    0x40da14
  40d995:	pushf  
  40d996:	add    BYTE PTR [eax],al
  40d998:	arpl   bp,ax
  40d99a:	data16 sbb BYTE PTR [eax+0x337aed4a],0xca
  40d9a2:	xor    eax,0xe49c2f41
  40d9a7:	mov    bl,0x62
  40d9a9:	and    eax,ebp
  40d9ab:	add    ah,cl
  40d9ad:	(bad)  
  40d9ae:	aam    0x57
  40d9b0:	push   ds
  40d9b1:	push   ds
  40d9b2:	call   0x9f0b70fc
  40d9b7:	inc    ebx
  40d9b8:	das    
  40d9b9:	push   edi
  40d9ba:	les    esp,FWORD PTR [edi+0x127beb19]
  40d9c0:	outs   dx,DWORD PTR ds:[esi]
  40d9c1:	(bad)  
  40d9c3:	sar    BYTE PTR [edi+eax*1-0x80],0x13
  40d9c8:	pop    edi
  40d9c9:	push   ds
  40d9ca:	call   0xf42bd222
  40d9cf:	adc    DWORD PTR [edi-0x22],ebp
  40d9d2:	add    BYTE PTR [edx+0x5c2850ef],dh
  40d9d8:	sbb    dl,al
  40d9da:	dec    edi
  40d9db:	test   BYTE PTR [ebx-0x2e],0x1e
  40d9df:	mov    bh,0x6f
  40d9e1:	fimul  WORD PTR [edi-0x1a]
  40d9e4:	pop    ebx
  40d9e5:	rcr    BYTE PTR [edi+esi*4],cl
  40d9e8:	outs   dx,DWORD PTR ds:[esi]
  40d9e9:	fimul  WORD PTR [edi-0x3a]
  40d9ec:	leave  
  40d9ed:	aam    0xd3
  40d9ef:	sub    ch,BYTE PTR [ebx]
  40d9f1:	lds    esi,FWORD PTR [ebx]
  40d9f3:	in     eax,0x79
  40d9f5:	pop    ds
  40d9f6:	add    DWORD PTR [esi+0x1cc0597c],ebp
  40d9fc:	add    BYTE PTR [eax],al
  40d9fe:	cs push edi
  40da00:	pop    ebx
  40da01:	popf   
  40da02:	pop    ss
  40da03:	sbb    bh,ch
  40da05:	xor    al,ah
  40da07:	lahf   
  40da08:	push   ebx
  40da09:	bound  ebx,QWORD PTR [eax-0x2de1add3]
  40da0f:	dec    ecx
  40da10:	or     DWORD PTR [edx-0xc96d099],edi
  40da16:	push   0xe961fdc4
  40da1b:	(bad)  
  40da1c:	std    
  40da1d:	cld    
  40da1e:	loopne 0x40da0e
  40da20:	inc    eax
  40da21:	jmp    0x527aa6fd
  40da26:	sbb    BYTE PTR [esi],bh
  40da28:	push   edi
  40da29:	mov    edx,0x510d498b
  40da2e:	cmp    edi,ebx
  40da30:	add    cl,ch
  40da32:	mov    bh,0xb4
  40da34:	cmp    DWORD PTR [edx],edi
  40da36:	pop    eax
  40da37:	push   ss
  40da38:	sub    ah,ah
  40da3a:	pusha  
  40da3b:	lods   al,BYTE PTR ds:[esi]
  40da3c:	inc    ecx
  40da3d:	jmp    0xe49309c1
  40da42:	(bad)  
  40da43:	mov    edi,0x2f5ce940
  40da48:	push   edx
  40da49:	mov    dh,0xcb
  40da4b:	jmp    0x8901:0x1fd70080
  40da52:	retf   
  40da53:	(bad)  
  40da54:	cmp    al,bl
  40da56:	push   0xffffffd6
  40da58:	push   0xdfe910
  40da5d:	push   eax
  40da5e:	rol    ebp,1
  40da60:	int    0x12
  40da62:	add    BYTE PTR [eax],al
  40da64:	push   es
  40da65:	(bad)  
  40da67:	jne    0x40da37
  40da69:	adc    BYTE PTR [eax+eax*8],0xc4
  40da6d:	pop    ds
  40da6e:	add    esi,eax
  40da70:	or     edi,DWORD PTR [edi+0x0]
  40da73:	jmp    0x40da35
  40da75:	test   DWORD PTR [eax],0x51df9680
  40da7b:	push   esi
  40da7c:	cmp    DWORD PTR [edi+0x14],edi
  40da7f:	test   BYTE PTR [edi+ebx*1-0x3a4ea8ff],dl
  40da86:	mov    ebp,0x5eda5612
  40da8b:	mov    cl,BYTE PTR [ebx+0x7f]
  40da8e:	pop    esi
  40da8f:	pop    ebx
  40da90:	mov    edi,0x1b00059c
  40da95:	push   ebx
  40da96:	jmp    0x34b8d1c
  40da9b:	add    BYTE PTR [esi+0xc],dl
  40da9e:	mov    bl,BYTE PTR ds:0x3dcc06
  40daa4:	cwde   
  40daa5:	or     BYTE PTR [edx],dh
  40daa7:	call   FWORD PTR [eax]
  40daa9:	adc    eax,0xfccf00fe
  40daae:	hlt    
  40daaf:	mov    DWORD PTR [ebx+0x67],esi
  40dab2:	push   esi
  40dab3:	push   0x44
  40dab5:	adc    BYTE PTR [eax+edi*2],0x4
  40dab9:	pop    ds
  40daba:	add    DWORD PTR [ecx+0x7d886ecb],ecx
  40dac0:	inc    edx
  40dac1:	pop    ebx
  40dac2:	cmc    
  40dac3:	inc    DWORD PTR [ecx]
  40dac5:	pop    ebx
  40dac6:	xor    DWORD PTR [ecx],eax
  40dac8:	add    BYTE PTR [eax],al
  40daca:	das    
  40dacb:	mov    ch,0x1
  40dacd:	lea    ebp,[edx-0x7015fdc]
  40dad3:	mov    fs:0x87fbff74,al
  40dad9:	scas   eax,DWORD PTR es:[edi]
  40dada:	jmp    0x1b5:0x2d2ba2cb
  40dae1:	inc    DWORD PTR [edx+0x35]
  40dae4:	hlt    
  40dae5:	aas    
  40dae6:	das    
  40dae7:	scas   al,BYTE PTR es:[edi]
  40dae8:	mov    ds:0x8eb4c8ff,al
  40daed:	mov    WORD PTR [edi-0xb015d6f],es
  40daf3:	mov    edx,DWORD PTR [edx]
  40daf5:	xchg   dh,cl
  40daf7:	mov    ah,0x1
  40daf9:	add    BYTE PTR [edx+edi*4+0x65],ah
  40dafd:	fldlg2 
  40daff:	mov    ah,0x12
  40db01:	test   BYTE PTR [edx+0x5c0001b4],al
  40db07:	jne    0x40dae5
  40db09:	jl     0x40da92
  40db0b:	loop   0x40db03
  40db0d:	mov    bl,dl
  40db0f:	push   0xcbad0bdc
  40db14:	test   ecx,eax
  40db16:	das    
  40db17:	mov    ch,0x1
  40db19:	inc    eax
  40db1a:	and    al,0xf2
  40db1c:	pushf  
  40db1d:	jno    0x40db70
  40db1f:	in     eax,0xac
  40db21:	(bad)  
  40db22:	adc    esi,DWORD PTR [ebp+0x2cea8901]
  40db28:	ffreep st(6)
  40db2a:	cmp    BYTE PTR [ecx],dh
  40db2c:	outs   dx,DWORD PTR ds:[esi]
  40db2d:	inc    DWORD PTR [eax]
  40db2f:	add    BYTE PTR [eax-0x4c],al
  40db32:	mov    ds:0xa31977b4,al
  40db37:	(bad)  
  40db38:	fsubr  DWORD PTR [ecx+eax*1-0x5d48d0fc]
  40db3f:	adc    al,0xb3
  40db41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db42:	inc    ecx
  40db43:	add    BYTE PTR [esi+ebx*8-0x2de621e9],ah
  40db4a:	arpl   WORD PTR [ebp-0x6f183df8],cx
  40db50:	imul   edi,DWORD PTR [edx+0x260739b7],0xffffffdc
  40db57:	add    eax,0x9b73282f
  40db5c:	jmp    0x5ce3480e
  40db61:	dec    ebx
  40db62:	arpl   WORD PTR [eax-0x2d],cx
  40db65:	add    eax,0x1df943ed
  40db6a:	call   0x1f022e85
  40db6f:	mov    eax,ds:0x43f7ea1b
  40db74:	das    
  40db75:	add    eax,0x1ddadbed
  40db7a:	call   0xe695de95
  40db7f:	xor    ecx,esi
  40db81:	or     dl,BYTE PTR [esi-0x18aad0bb]
  40db87:	stos   DWORD PTR es:[edi],eax
  40db88:	lahf   
  40db89:	loop   0x40db72
  40db8b:	add    esi,DWORD PTR [edx-0x4bbce362]
  40db91:	adc    edx,DWORD PTR [eax+0x2400008f]
  40db97:	push   ebx
  40db98:	jmp    0x40db9d
  40db9a:	das    
  40db9b:	fisubr WORD PTR [edi+edx*1+0x63]
  40db9f:	mov    dh,0x1b
  40dba1:	std    
  40dba2:	pusha  
  40dba3:	shl    DWORD PTR [ebx-0x3c],0xdc
  40dba7:	hlt    
  40dba8:	jb     0x40dbe1
  40dbaa:	push   edi
  40dbab:	push   ebp
  40dbac:	fs pop esp
  40dbae:	dec    ebx
  40dbaf:	rcl    DWORD PTR [esi-0x73],0xf3
  40dbb3:	leave  
  40dbb4:	dec    esi
  40dbb5:	pop    ss
  40dbb6:	inc    edi
  40dbb7:	shr    DWORD PTR [ebx+ebx*4-0x74b3e4cf],0x2c
  40dbbf:	outs   dx,DWORD PTR ds:[esi]
  40dbc0:	add    BYTE PTR [esi],dh
  40dbc2:	js     0x40db4d
  40dbc4:	sti    
  40dbc5:	cs into 
  40dbc7:	mov    eax,0xbfce2748
  40dbcc:	test   BYTE PTR [ecx],ch
  40dbce:	daa    
  40dbcf:	fcmovb st,st(6)
  40dbd1:	lods   al,BYTE PTR ds:[esi]
  40dbd2:	iret   
  40dbd3:	fst    QWORD PTR [ebp+0x1]
  40dbd6:	int3   
  40dbd7:	jecxz  0x40dbd9
  40dbd9:	jmp    0x753e9bb9
  40dbde:	xchg   esp,eax
  40dbdf:	mov    edi,0x70a864d1
  40dbe4:	sti    
  40dbe5:	out    dx,al
  40dbe6:	(bad)  
  40dbe7:	adc    dh,bh
  40dbe9:	pop    esp
  40dbea:	mov    ebx,0xc15d13bf
  40dbef:	add    BYTE PTR [ecx],al
  40dbf1:	ins    BYTE PTR es:[edi],dx
  40dbf2:	in     al,dx
  40dbf3:	iret   
  40dbf4:	adc    eax,0xffffff8e
  40dbf7:	mov    edi,0xc6fd
  40dbfc:	sbb    esi,ecx
  40dbfe:	std    
  40dbff:	call   0x8ca9:0xe6ed4185
  40dc06:	(bad)  
  40dc07:	scas   al,BYTE PTR es:[edi]
  40dc08:	iret   
  40dc09:	mov    edi,0x74c49d73
  40dc0e:	sbb    ecx,ebp
  40dc10:	sub    al,0x54
  40dc12:	inc    ebx
  40dc13:	xchg   esi,eax
  40dc14:	out    dx,eax
  40dc15:	pop    ds
  40dc16:	pop    edx
  40dc17:	mov    al,ds:0x958a2973
  40dc1c:	stos   DWORD PTR es:[edi],eax
  40dc1d:	enter  0xf4fd,0x35
  40dc21:	shl    DWORD PTR [ebx-0x1b],0x8f
  40dc25:	jmp    0xde2db79e
  40dc2a:	std    
  40dc2b:	fcomp  QWORD PTR [edx+ebp*1+0x51]
  40dc2f:	pop    esi
  40dc30:	and    edx,edx
  40dc32:	push   0xffffffe9
  40dc34:	(bad)
  40dc38:	inc    ecx
  40dc39:	xor    BYTE PTR [ebx],dl
  40dc3b:	add    BYTE PTR [esi+0x67d81dc],al
  40dc41:	fdivr  QWORD PTR [esi+0xd]
  40dc44:	sbb    eax,0x47c1119
  40dc49:	stos   DWORD PTR es:[edi],eax
  40dc4a:	mov    ebp,0x87f55f33
  40dc4f:	or     al,0xd0
  40dc51:	add    bl,al
  40dc53:	or     al,0x16
  40dc55:	or     DWORD PTR [edx-0x2aad4a14],ecx
  40dc5b:	push   esi
  40dc5c:	xchg   ecx,eax
  40dc5d:	pop    edx
  40dc5e:	cli    
  40dc5f:	inc    DWORD PTR [eax]
  40dc61:	add    BYTE PTR [ebx-0x2e],ah
  40dc64:	std    
  40dc65:	jne    0x40dc31
  40dc67:	jle    0x40dc7d
  40dc69:	je     0x40dc5f
  40dc6b:	sbb    eax,DWORD PTR [ecx]
  40dc6d:	mov    ebp,esi
  40dc6f:	hlt    
  40dc70:	add    bh,bh
  40dc72:	arpl   si,bp
  40dc74:	xor    esi,esi
  40dc76:	fxam   
  40dc78:	or     BYTE PTR [ebx-0x668d7b],cl
  40dc7e:	jmp    0x143966e2
  40dc83:	pop    edi
  40dc84:	jnp    0x40dcab
  40dc86:	push   ecx
  40dc87:	ins    DWORD PTR es:[edi],dx
  40dc88:	add    DWORD PTR [edi],edi
  40dc8a:	adc    ebx,DWORD PTR [edx+0x64be1d71]
  40dc90:	pop    ss
  40dc91:	add    BYTE PTR [esi-0x5f7a12ac],dl
  40dc97:	out    0x12,al
  40dc99:	push   edi
  40dc9a:	test   eax,0xc58b0ce5
  40dc9f:	pop    edi
  40dca0:	je     0x40dcaa
  40dca2:	mov    esi,0xd9fffde5
  40dca7:	push   edx
  40dca8:	ret    
  40dca9:	jmp    0x40dcef
  40dcab:	lods   al,BYTE PTR ds:[esi]
  40dcac:	mov    ebp,0x5c04685f
  40dcb1:	ret    0xdb3e
  40dcb4:	push   ebx
  40dcb5:	mov    ebp,DWORD PTR [edi]
  40dcb7:	sbb    DWORD PTR [ebx+edx*2],esi
  40dcba:	loope  0x40dc43
  40dcbc:	sahf   
  40dcbd:	je     0x40dce6
  40dcbf:	dec    esp
  40dcc0:	popf   
  40dcc1:	mov    bl,BYTE PTR [esi]
  40dcc3:	add    al,bh
  40dcc5:	sti    
  40dcc6:	add    BYTE PTR [eax],al
  40dcc8:	cmp    eax,0xf78b0175
  40dccd:	and    DWORD PTR [ecx],ecx
  40dccf:	cmp    esp,DWORD PTR [edx-0x49fdfe90]
  40dcd5:	jns    0x40dc74
  40dcd7:	sub    BYTE PTR [edx-0x17],0x4
  40dcdb:	add    al,0x2f
  40dcdd:	mov    ch,0x84
  40dcdf:	ret    0xb32f
  40dce2:	add    DWORD PTR [eax],eax
  40dce4:	scas   al,BYTE PTR es:[edi]
  40dce5:	fild   DWORD PTR [eax+eax*1]
  40dce8:	(bad)  
  40dce9:	mov    ah,0x16
  40dceb:	cmp    BYTE PTR [ecx+eiz*2-0x24dd1863],ah
  40dcf2:	add    al,0x0
  40dcf4:	mov    bl,0x74
  40dcf6:	adc    eax,0x1121c02c
  40dcfb:	mov    esi,DWORD PTR [ecx]
  40dcfd:	nop
  40dcfe:	sbb    BYTE PTR [eax],cl
  40dd00:	mov    ds:0xff5319b0,al
  40dd05:	jg     0x40dcff
  40dd07:	mov    bl,0x3c
  40dd09:	cmc    
  40dd0a:	add    al,0x85
  40dd0c:	outs   dx,DWORD PTR ds:[esi]
  40dd0d:	or     al,0xcd
  40dd0f:	mov    esp,fs
  40dd11:	ja     0x40dced
  40dd13:	ror    BYTE PTR [edx],0x76
  40dd16:	add    bh,al
  40dd18:	mov    ah,0xae
  40dd1a:	ror    al,cl
  40dd1c:	adc    DWORD PTR [esi],edi
  40dd1e:	push   cs
  40dd1f:	js     0x40dcc5
  40dd21:	outs   dx,DWORD PTR ds:[esi]
  40dd22:	stos   BYTE PTR es:[edi],al
  40dd23:	add    ch,BYTE PTR [esp+ecx*4-0x13fea162]
  40dd2a:	retf   
  40dd2b:	rol    DWORD PTR [eax],0x0
  40dd2e:	daa    
  40dd2f:	mov    ch,0x33
  40dd31:	push   edi
  40dd32:	push   eax
  40dd33:	fstp   st(3)
  40dd35:	out    0x34,eax
  40dd37:	push   ebx
  40dd38:	push   edi
  40dd39:	sahf   
  40dd3a:	sbb    ecx,DWORD PTR [edx-0x6]
  40dd3d:	inc    ebx
  40dd3e:	das    
  40dd3f:	push   ebx
  40dd40:	dec    edi
  40dd41:	test   BYTE PTR [ecx-0x23],ch
  40dd44:	jmp    0x3ea00c4c
  40dd49:	add    ebp,DWORD PTR [edi]
  40dd4b:	jle    0x40dd34
  40dd4d:	push   ss
  40dd4e:	pop    edi
  40dd4f:	imul   ebx,DWORD PTR [esi+0x8c0704],0x4
  40dd56:	das    
  40dd57:	bound  esp,QWORD PTR [edi]
  40dd59:	pop    ss
  40dd5a:	dec    ebx
  40dd5b:	mov    ebp,0xbd28e79b
  40dd60:	xchg   ebx,eax
  40dd61:	out    0x20,eax
  40dd63:	adc    eax,0xd3e9d507
  40dd68:	aaa    
  40dd69:	repnz and dh,bl
  40dd6c:	ins    BYTE PTR es:[edi],dx
  40dd6d:	ret    
  40dd6e:	pusha  
  40dd6f:	(bad)  
  40dd70:	pop    esp
  40dd71:	dec    esi
  40dd72:	sar    cl,1
  40dd74:	test   al,0x1f
  40dd76:	cmc    
  40dd77:	imul   ebp,ebp,0xe7e62cc5
  40dd7d:	test   al,0x2d
  40dd7f:	popa   
  40dd80:	lahf   
  40dd81:	popf   
  40dd82:	push   ecx
  40dd83:	sbb    al,0xaa
  40dd85:	or     al,0x2f
  40dd87:	adc    al,0x72
  40dd89:	mov    ah,0xe0
  40dd8b:	enter  0xceb,0xe1
  40dd8f:	nop
  40dd90:	inc    ecx
  40dd91:	or     eax,DWORD PTR [eax]
  40dd93:	add    cl,dh
  40dd95:	add    edi,esi
  40dd97:	and    eax,0x9602b044
  40dd9c:	lods   eax,DWORD PTR ds:[esi]
  40dd9d:	(bad)  
  40dd9e:	out    dx,al
  40dd9f:	xor    BYTE PTR [edx-0x12],0x5
  40dda3:	add    DWORD PTR [ebp-0x13],edi
  40dda6:	cmp    eax,0x21e6d6c4
  40ddab:	es and al,0x8e
  40ddae:	add    dl,dl
  40ddb0:	sahf   
  40ddb1:	pusha  
  40ddb2:	loop   0x40dd9a
  40ddb4:	scas   eax,DWORD PTR es:[edi]
  40ddb5:	lahf   
  40ddb6:	xor    bh,cl
  40ddb8:	das    
  40ddb9:	mov    fs,WORD PTR [esi+0x70]
  40ddbc:	pop    esp
  40ddbd:	inc    ebx
  40ddbe:	mov    BYTE PTR [eax+0x6ac21c2e],bh
  40ddc4:	xchg   ebx,eax
  40ddc5:	mov    esp,0x30cbf373
  40ddca:	and    eax,0xfcd1c3e5
  40ddcf:	fld    TBYTE PTR [esi+ebx*8+0x1]
  40ddd3:	sub    DWORD PTR [ebx-0x43],ebx
  40ddd6:	je     0x40dda5
  40ddd8:	xor    al,0x14
  40ddda:	jmp    0xfdfde4a6
  40dddf:	(bad)  
  40dde1:	inc    edx
  40dde2:	mov    ch,bl
  40dde4:	fcomp  QWORD PTR [esi-0x4b5016fc]
  40ddea:	std    
  40ddeb:	je     0x40de23
  40dded:	mov    ebp,0xbd30cd74
  40ddf2:	adc    esi,DWORD PTR [ebp-0x22]
  40ddf5:	cld    
  40ddf6:	add    BYTE PTR [ecx],bh
  40ddf8:	add    BYTE PTR [eax],al
  40ddfa:	stos   BYTE PTR es:[edi],al
  40ddfb:	xor    BYTE PTR ds:0x1c5faf1,ah
  40de01:	repz sub al,0xde
  40de04:	(bad)  
  40de05:	in     eax,0x2a
  40de07:	faddp  st(2),st
  40de09:	in     eax,dx
  40de0a:	sub    al,0x61
  40de0c:	jl     0x40de13
  40de0e:	aaa    
  40de0f:	fidiv  WORD PTR [ebx-0x13]
  40de12:	jg     0x40de90
  40de14:	jmp    0xfdf58e17
  40de19:	sbb    al,0x35
  40de1b:	mov    ebp,0xbd28c574
  40de20:	adc    edx,DWORD PTR [ebp+0x3700fc7e]
  40de26:	mov    al,ds:0xe30000f0
  40de2b:	and    al,BYTE PTR [ebx]
  40de2d:	test   DWORD PTR [esi+0x25e814d4],edx
  40de33:	mov    ecx,0xa0cbfffd
  40de38:	jno    0x40de45
  40de3a:	mov    BYTE PTR [ecx+0x71],bl
  40de3d:	and    al,0x52
  40de3f:	lock call 0x1211e08
  40de45:	pop    esi
  40de46:	add    al,0xe5
  40de48:	add    BYTE PTR [ebx+0x1c3f2],al
  40de4e:	mov    eax,0xa75ed66
  40de53:	(bad)  
  40de54:	mov    ebp,0xfb5f12eb
  40de59:	jmp    FWORD PTR [ebx+0x74fdeb]
  40de5f:	add    dl,ch
  40de61:	out    0xfd,eax
  40de63:	adc    eax,0x3dad9a
  40de68:	lea    ecx,[edi-0x74]
  40de6b:	inc    esi
  40de6c:	xlat   BYTE PTR ds:[ebx]
  40de6d:	fs mov ebp,0x24872a74
  40de73:	sbb    esi,eax
  40de75:	fild   WORD PTR [ebx+0x56e65ac0]
  40de7b:	jmp    FWORD PTR [edx-0x42]
  40de7e:	or     DWORD PTR [eax-0x22],edx
  40de81:	pop    ebp
  40de82:	sbb    BYTE PTR [eax],al
  40de84:	(bad)  
  40de85:	cmc    
  40de86:	ret    0xc604
  40de89:	hlt    
  40de8a:	push   esi
  40de8b:	mov    esp,edi
  40de8d:	out    dx,eax
  40de8e:	mov    eax,edi
  40de90:	or     edx,DWORD PTR [eax+0x71]
  40de93:	inc    eax
  40de94:	or     eax,0x4612f9b5
  40de99:	loop   0x40de1c
  40de9b:	call   ecx
  40de9d:	int    0x8
  40de9f:	call   FWORD PTR [edx]
  40dea1:	mov    esi,0x782fff0d
  40dea6:	(bad)  
  40dea7:	div    DWORD PTR [eax-0x6d]
  40deaa:	call   0x240b:0x877db4d2
  40deb1:	dec    edx
  40deb2:	dec    ecx
  40deb3:	or     DWORD PTR ds:0x2f18355d,ebp
  40deb9:	lds    edi,FWORD PTR [ebp-0x41]
  40debc:	ret    
  40debd:	mov    ebx,0x75000388
  40dec2:	mov    es,WORD PTR ds:0x99380000
  40dec8:	fst    QWORD PTR [ebx]
  40deca:	mov    ds:0x175039c1,al
  40decf:	(bad)  
  40ded1:	jmp    DWORD PTR [eax]
  40ded3:	xor    eax,0xb72deb04
  40ded8:	rcr    DWORD PTR [esi+0x71],0x50
  40dedc:	ret    
  40dedd:	add    ebp,DWORD PTR [edi]
  40dedf:	dec    eax
  40dee0:	sbb    DWORD PTR [ebx+ebp*1],esp
  40dee3:	lds    esi,FWORD PTR [esi]
  40dee5:	push   esi
  40dee6:	pusha  
  40dee7:	inc    eax
  40dee8:	mov    ebp,0xdc50fe8a
  40deed:	mov    ch,BYTE PTR [edx]
  40deef:	cmp    esp,esi
  40def1:	aas    
  40def2:	das    
  40def3:	dec    eax
  40def4:	sahf   
  40def5:	(bad)  
  40def6:	bound  edi,QWORD PTR [ebp-0x6af48c66]
  40defc:	call   0xc035:0x9a9cb4d6
  40df03:	jae    0x40de93
  40df05:	imul   DWORD PTR [edx-0x38ff0600]
  40df0b:	(bad)  
  40df0c:	stc    
  40df0d:	jmp    FWORD PTR [eax+0x3c73c248]
  40df13:	xor    BYTE PTR [eax],al
  40df15:	push   ebx
  40df16:	cwde   
  40df17:	clc    
  40df18:	loopne 0x40df2d
  40df1a:	sub    al,0x84
  40df1c:	xor    eax,ebp
  40df1e:	xchg   esp,eax
  40df1f:	(bad)  
  40df21:	add    ebp,DWORD PTR [edi]
  40df23:	outs   dx,BYTE PTR ds:[esi]
  40df24:	call   0xa8310dd7
  40df29:	cmp    al,BYTE PTR [eax]
  40df2b:	add    cl,dl
  40df2d:	push   ss
  40df2e:	stos   BYTE PTR es:[edi],al
  40df2f:	jmp    FWORD PTR [eax+0x10]
  40df32:	xchg   eax,esi
  40df34:	fs iret 
  40df36:	daa    
  40df37:	add    al,0xb2
  40df39:	popf   
  40df3a:	cmc    
  40df3b:	cmp    BYTE PTR [eiz*4+0x60e1b5ba],bl
  40df42:	daa    
  40df43:	sbb    DWORD PTR [edi],esp
  40df45:	jmp    0x40dedd
  40df47:	xlat   BYTE PTR ds:[ebx]
  40df48:	loop   0x40dfa8
  40df4a:	push   esi
  40df4b:	jecxz  0x40df09
  40df4d:	in     al,0x6a
  40df4f:	ret    0x4121
  40df52:	imul   ebx,DWORD PTR [edx+0x44e6312c],0x6d
  40df59:	cmc    
  40df5a:	pop    ss
  40df5b:	pop    ss
  40df5c:	pop    es
  40df5d:	push   es
  40df5e:	sub    DWORD PTR [eax+0x4b75281c],ecx
  40df64:	add    BYTE PTR [eax+esi*1+0x1b],ah
  40df68:	and    ecx,ebp
  40df6a:	pop    esi
  40df6b:	xlat   BYTE PTR ds:[ebx]
  40df6c:	pop    bp
  40df6e:	push   cs
  40df6f:	jecxz  0x40dfcd
  40df71:	out    0x6a,eax
  40df73:	ret    0x40d9
  40df76:	imul   ebx,DWORD PTR [edx+0x4bec312c],0x66
  40df7d:	aaa    
  40df7e:	add    bh,BYTE PTR [edx]
  40df80:	add    al,0x90
  40df82:	pop    ebp
  40df83:	or     DWORD PTR [edx-0x55f2a262],ebp
  40df89:	jmp    0x17c0:0x105d32e7
  40df90:	add    BYTE PTR [eax],al
  40df92:	inc    edi
  40df93:	fsubrp st(7),st
  40df95:	aam    0x77
  40df97:	inc    eax
  40df98:	jno    0x40dfa2
  40df9a:	icebp  
  40df9b:	pushf  
  40df9c:	add    BYTE PTR [edx],bl
  40df9e:	pop    ebp
  40df9f:	in     al,dx
  40dfa0:	fldenv [edx-0x5d]
  40dfa3:	call   0x29eacf5d
  40dfa8:	rol    DWORD PTR [edi],1
  40dfaa:	mov    dl,0xb7
  40dfac:	pop    es
  40dfad:	push   ds
  40dfae:	jo     0x40df98
  40dfb0:	mov    ch,0xab
  40dfb2:	call   0x8243:0x6198bdb
  40dfb9:	sbb    DWORD PTR [eax+0x30],0x6
  40dfbd:	in     al,dx
  40dfbe:	gs mov eax,0xeb9be900
  40dfc4:	mov    edi,DWORD PTR [ecx+0x638242c7]
  40dfca:	cmp    BYTE PTR [eax],dh
  40dfcc:	sbb    eax,0xb7c5ec
  40dfd1:	jmp    0xeeb5747e
  40dfd6:	xor    al,0xdf
  40dfd8:	aas    
  40dfd9:	sti    
  40dfda:	fcmovnb st,st(3)
  40dfdc:	add    eax,0x88dccb29
  40dfe1:	call   0x2fc2be49
  40dfe6:	sub    ebp,eax
  40dfe8:	mov    edx,0x73797987
  40dfed:	loope  0x40e05f
  40dfef:	xchg   esp,eax
  40dff0:	jae    0x40dfd7
  40dff2:	jl     0x40dfd2
  40dff4:	jmp    0xfa40e0e4
  40dff9:	js     0x40e059
  40dffb:	mov    ds:0x58a11f3,al
  40e000:	stos   BYTE PTR es:[edi],al
  40e001:	les    ecx,FWORD PTR [edx+ebp*2]
  40e004:	sub    BYTE PTR [edx+0x64fd3a00],bh
  40e00a:	jae    0x40dffd
  40e00c:	mov    cl,0xe4
  40e00e:	push   es
  40e00f:	(bad)  
  40e011:	jmp    0x1173e997
  40e016:	mov    BYTE PTR [eax],al
  40e018:	pop    ebx
  40e019:	pop    edx
  40e01a:	cmp    dh,cl
  40e01c:	mov    DWORD PTR [ecx-0x7],esp
  40e01f:	add    BYTE PTR [esi+0x664589dc],al
  40e025:	popa   
  40e026:	fld    QWORD PTR [edx]
  40e028:	push   edi
  40e02a:	hlt    
  40e02b:	jmp    0x40dfc0
  40e02d:	imul   esi,DWORD PTR [eax+ecx*1+0xd],0xc27d82a5
  40e035:	fmul   QWORD PTR [ecx-0x754f9d22]
  40e03b:	(bad)  
  40e03c:	ins    DWORD PTR es:[edi],dx
  40e03d:	dec    ebx
  40e03e:	jb     0x40e04c
  40e040:	int3   
  40e041:	lods   al,BYTE PTR ds:[esi]
  40e042:	aaa    
  40e043:	push   ebp
  40e044:	(bad)  
  40e045:	call   0x9d4e204d
  40e04a:	outs   dx,DWORD PTR ds:[esi]
  40e04b:	hlt    
  40e04c:	mov    ebp,0x86fe2a54
  40e051:	arpl   WORD PTR [eax+ecx*1+0x6d],ax
  40e055:	loopne 0x40e0ad
  40e057:	(bad)  
  40e058:	jmp    0x40e03d
  40e05a:	mov    ecx,esi
  40e05c:	add    BYTE PTR [eax],al
  40e05e:	jle    0x40e042
  40e060:	add    eax,0xf56b0600
  40e065:	mov    ebp,DWORD PTR [ebx-0x58a75b1]
  40e06b:	pusha  
  40e06c:	or     DWORD PTR [ebp+0xdc12],ecx
  40e072:	cs inc edx
  40e074:	adc    al,0x0
  40e076:	(bad)  
  40e077:	aaa    
  40e078:	mov    esi,0xfe4a520f
  40e07d:	inc    esi
  40e07f:	cmp    bh,bh
  40e081:	je     0x40e07f
  40e083:	repnz mov edi,eax
  40e086:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40e088:	cld    
  40e089:	dec    ecx
  40e08b:	arpl   WORD PTR [esp+edi*8+0x3d],dx
  40e08f:	mov    al,ds:0x3e2f098a
  40e094:	add    DWORD PTR [ecx-0x7bfa7a4e],edx
  40e09a:	mov    dl,0xc5
  40e09c:	add    DWORD PTR [eax],eax
  40e09e:	mov    eax,ds:0x1b00f502
  40e0a3:	pop    ds
  40e0a4:	mov    cl,BYTE PTR [ebx+ecx*4+0x3c]
  40e0a8:	mov    edi,0x1322f8a
  40e0ad:	mov    BYTE PTR [ebp+edi*4+0x3bd07401],ch
  40e0b4:	aad    0x55
  40e0b6:	push   0xef120db2
  40e0bb:	les    eax,FWORD PTR [eax-0x2e2d2641]
  40e0c1:	rol    DWORD PTR [eax],1
  40e0c3:	add    BYTE PTR [eax+esi*1],bl
  40e0c6:	cmp    BYTE PTR [edi+0xb878ec9],0xf8
  40e0cd:	inc    esp
  40e0ce:	pushf  
  40e0cf:	pop    ds
  40e0d0:	ret    
  40e0d1:	lods   al,BYTE PTR ds:[esi]
  40e0d2:	sub    eax,0x39c4526
  40e0d8:	mov    al,ds:0x64473fbf
  40e0dd:	sbb    eax,0x344ea19
  40e0e2:	mov    BYTE PTR [ebx],bh
  40e0e4:	pop    ebp
  40e0e5:	inc    edx
  40e0e6:	xor    eax,0x1cd2b2ff
  40e0eb:	adc    al,0xb5
  40e0ed:	mov    al,0xd7
  40e0ef:	jg     0x40e0e7
  40e0f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0f2:	or     eax,0xbddaf08
  40e0f7:	and    dh,0xc0
  40e0fa:	push   cs
  40e0fb:	add    al,0x77
  40e0fd:	imul   ebx,DWORD PTR [esp+ebp*8],0x14
  40e101:	mov    bh,0xb
  40e103:	or     al,0xaa
  40e105:	add    al,0x17
  40e107:	or     BYTE PTR [edi+0x50],bl
  40e10a:	sub    ebp,eax
  40e10c:	xor    al,0xde
  40e10e:	inc    BYTE PTR [ebx]
  40e110:	das    
  40e111:	mov    al,ds:0x63b0d3e3
  40e116:	sub    al,0x9c
  40e118:	test   eax,0xebdccc20
  40e11d:	in     eax,0xf6
  40e11f:	sub    DWORD PTR [ecx],0xa596beb7
  40e125:	and    BYTE PTR [esi+esi*1+0x12e90000],dh
  40e12c:	mov    eax,ds:0x72de30c1
  40e131:	inc    eax
  40e132:	jnp    0x40e196
  40e134:	popf   
  40e135:	stos   DWORD PTR es:[edi],eax
  40e136:	ins    BYTE PTR es:[edi],dx
  40e137:	iret   
  40e138:	out    0x3,eax
  40e13a:	lods   al,BYTE PTR ds:[esi]
  40e13b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e13c:	mov    gs,WORD PTR [edx-0x588cefaa]
  40e142:	lods   eax,DWORD PTR ds:[esi]
  40e143:	leave  
  40e144:	jmp    0x40e0c8
  40e146:	retf   
  40e147:	mov    ch,0xe7
  40e149:	xor    ah,cl
  40e14b:	bound  edi,QWORD PTR [ecx-0x7e]
  40e14e:	or     bl,dh
  40e150:	je     0x40e141
  40e152:	xor    BYTE PTR [edi],cl
  40e154:	jno    0x40e196
  40e156:	xor    esp,DWORD PTR [esp+edi*4-0x71]
  40e15a:	mov    al,gs:0xdeef82de
  40e160:	out    0x3,eax
  40e162:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e163:	out    0x67,al
  40e165:	pushf  
  40e166:	xor    BYTE PTR [edx],ch
  40e168:	loop   0x40e0ed
  40e16a:	pop    es
  40e16b:	call   0xb7efea1b
  40e170:	hlt    
  40e171:	push   ss
  40e172:	daa    
  40e173:	push   ds
  40e174:	jno    0x40e1b6
  40e176:	repz stc 
  40e178:	sub    DWORD PTR [ecx],edx
  40e17a:	sar    cl,1
  40e17c:	sub    DWORD PTR [esi],eax
  40e17e:	lods   al,BYTE PTR ds:[esi]
  40e17f:	jle    0x40e168
  40e181:	add    ebp,DWORD PTR [edi]
  40e183:	push   0xdf5888df
  40e188:	add    BYTE PTR [ecx-0x5b],ch
  40e18b:	cld    
  40e18c:	je     0x40e172
  40e18e:	add    BYTE PTR [eax],al
  40e190:	lods   al,BYTE PTR ds:[esi]
  40e191:	mov    eax,0x66ca5c22
  40e196:	jnp    0x40e175
  40e198:	xchg   cl,dh
  40e19a:	mov    ah,dh
  40e19c:	lods   al,BYTE PTR ds:[esi]
  40e19d:	mov    dh,0x20
  40e19f:	push   ebp
  40e1a0:	sub    bl,BYTE PTR [esi-0x9]
  40e1a3:	lock inc eax
  40e1a5:	fild   DWORD PTR [eax+0x43428c0]
  40e1ab:	cs data16 mov bh,0x72
  40e1af:	ret    
  40e1b0:	mov    dh,0x94
  40e1b2:	sub    ecx,eax
  40e1b4:	(bad)  
  40e1b5:	std    
  40e1b6:	cmp    dh,bh
  40e1b8:	and    ecx,edx
  40e1ba:	xor    DWORD PTR [eax-0x7d01e350],esp
  40e1c0:	sub    eax,0x7b69491f
  40e1c5:	sbb    DWORD PTR [ebp-0x80],esi
  40e1c8:	mov    eax,ds:0x49fcff9e
  40e1cd:	sbb    al,0x3a
  40e1cf:	jae    0x40e1ee
  40e1d1:	mov    edx,0xe1286339
  40e1d6:	std    
  40e1d7:	lods   al,BYTE PTR ds:[esi]
  40e1d8:	cwde   
  40e1d9:	push   0xb26002dd
  40e1de:	mov    DWORD PTR [esp+eax*8+0x2f740c61],ebx
  40e1e5:	fiadd  WORD PTR [eax]
  40e1e7:	jmp    0xe954ccb0
  40e1ec:	sub    al,0x5a
  40e1ee:	shl    BYTE PTR [ebp-0x6326a61a],0x0
  40e1f5:	add    BYTE PTR [esi],ah
  40e1f7:	icebp  
  40e1f8:	rcl    BYTE PTR [ecx-0x16bed60c],0x6c
  40e1ff:	leave  
  40e200:	add    ecx,DWORD PTR [esi]
  40e202:	xor    BYTE PTR [edx-0x7dfaff77],dh
  40e208:	pop    eax
  40e209:	cld    
  40e20a:	ror    DWORD PTR [ecx-0x76],1
  40e20d:	push   cs
  40e20e:	dec    ebp
  40e20f:	add    eax,0x2fca89f9
  40e214:	test   eax,eax
  40e216:	pop    edx
  40e217:	(bad)  
  40e218:	inc    BYTE PTR [ebp-0x32]
  40e21b:	gs push esp
  40e21d:	hlt    
  40e21e:	pop    ecx
  40e21f:	imul   edi,DWORD PTR [esp+edi*8+0xd],0x7137e872
  40e227:	dec    ecx
  40e228:	dec    BYTE PTR [ebx+0xdea524b]
  40e22e:	or     eax,0x908bf8f4
  40e233:	mov    cl,cl
  40e235:	adc    eax,0xc881e086
  40e23a:	xchg   ecx,eax
  40e23b:	jmp    0x9dd03d9e
  40e240:	push   esp
  40e241:	mov    esp,edx
  40e243:	pop    ebp
  40e244:	jmp    0xf914a755
  40e249:	add    BYTE PTR ds:0xd5f28a04,dh
  40e24f:	xchg   edx,eax
  40e250:	std    
  40e251:	mov    WORD PTR [edx+0x28],?
  40e254:	push   esi
  40e255:	mov    DWORD PTR [ebx+0x5d884c],ecx
  40e25b:	add    dl,bl
  40e25d:	xchg   ebp,eax
  40e25e:	ret    0x950f
  40e261:	test   ch,bh
  40e263:	call   DWORD PTR [esi]
  40e265:	(bad)  [ebp+0x1d588508]
  40e26b:	je     0x40e289
  40e26d:	pop    edi
  40e26e:	clc    
  40e26f:	or     esp,eax
  40e271:	fiadd  DWORD PTR [ecx+0xae2e3f9]
  40e277:	add    DWORD PTR [esi-0x23],0xffffff87
  40e27b:	inc    ebp
  40e27c:	adc    dl,BYTE PTR [esi-0x1ed08d3e]
  40e282:	fadd   st,st(2)
  40e284:	xor    BYTE PTR [eax+0x53],cl
  40e287:	(bad)  
  40e288:	fadd   st,st(5)
  40e28a:	add    al,0xb7
  40e28c:	daa    
  40e28d:	inc    edx
  40e28e:	sbb    al,BYTE PTR [edx]
  40e290:	lods   al,BYTE PTR ds:[esi]
  40e291:	scas   al,BYTE PTR es:[edi]
  40e292:	fnstenv [ebx+0x2a]
  40e295:	dec    eax
  40e296:	fwait
  40e297:	and    DWORD PTR [edx-0x27],eax
  40e29a:	jge    0x40e26c
  40e29c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e29d:	adc    dl,BYTE PTR [ecx+0x5abc6aea]
  40e2a3:	push   cs
  40e2a4:	lods   al,BYTE PTR ds:[esi]
  40e2a5:	mov    fs,esp
  40e2a7:	jae    0x40e2e7
  40e2a9:	dec    eax
  40e2aa:	mov    WORD PTR [eax],cs
  40e2ac:	sbb    eax,0x3af886ba
  40e2b1:	repz or DWORD PTR [ebx-0x5313898],eax
  40e2b8:	std    
  40e2b9:	arpl   WORD PTR [ebp-0x22],di
  40e2bc:	inc    esp
  40e2bd:	popf   
  40e2be:	popf   
  40e2bf:	add    BYTE PTR cs:[eax],al
  40e2c2:	ror    DWORD PTR [ebp-0x67c68b06],1
  40e2c8:	mov    esp,0x9d5af08c
  40e2cd:	add    ebp,esi
  40e2cf:	inc    edi
  40e2d0:	popf   
  40e2d1:	add    ecx,edx
  40e2d3:	inc    edi
  40e2d4:	int    0x5b
  40e2d6:	mov    ebx,0x2ec09b2a
  40e2db:	xchg   ecx,eax
  40e2dc:	or     al,BYTE PTR [ebx-0x5313898]
  40e2e2:	popf   
  40e2e3:	jmp    0x40e2b2
  40e2e5:	cli    
  40e2e6:	call   0x7ec7:0x1b6c86b9
  40e2ed:	fiadd  WORD PTR [edx+edx*2-0x73]
  40e2f1:	mov    bh,BYTE PTR [edx-0x13]
  40e2f4:	jg     0x40e301
  40e2f6:	mov    dl,0xb8
  40e2f8:	add    DWORD PTR [eax],eax
  40e2fa:	das    
  40e2fb:	fidivr WORD PTR [eax]
  40e2fd:	(bad)
  40e301:	add    ebp,DWORD PTR [edi]
  40e303:	pop    edx
  40e304:	daa    
  40e305:	sbb    BYTE PTR [ebx],ah
  40e307:	pop    ecx
  40e308:	xor    bl,BYTE PTR [ecx]
  40e30a:	and    eax,0x31c27ef
  40e30f:	and    ebp,DWORD PTR [eax-0x133890fd]
  40e315:	xchg   edx,eax
  40e316:	cmp    esi,DWORD PTR [edx-0x1d2f389e]
  40e31c:	loop   0x40e2b0
  40e31e:	mov    cl,0x66
  40e320:	in     eax,dx
  40e321:	jle    0x40e326
  40e323:	mov    dh,0x60
  40e325:	pop    es
  40e326:	add    BYTE PTR [eax],al
  40e328:	mov    esi,0x3717a758
  40e32d:	mov    bl,0x2c
  40e32f:	mov    WORD PTR [ebp+0x7186b410],fs
  40e335:	fbld   TBYTE PTR [eax+0x10]
  40e338:	and    DWORD PTR [esi-0x5a],0xffffff9c
  40e33c:	dec    ebp
  40e33d:	mov    bl,0xa6
  40e33f:	xchg   edx,eax
  40e340:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e341:	sbb    BYTE PTR [eax+0x2c673b9e],ah
  40e347:	mov    WORD PTR [ebp+0x3c507ff3],?
  40e34d:	fsubrp st(7),st
  40e34f:	xchg   BYTE PTR [eax-0x4e],ch
  40e352:	push   ds
  40e353:	xor    ah,ah
  40e355:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e356:	stos   BYTE PTR es:[edi],al
  40e357:	cmp    BYTE PTR [ecx+eax*8+0xf1c9f6a],dh
  40e35e:	mov    esi,0x1b0a55d6
  40e363:	xchg   ebx,eax
  40e364:	mov    bh,0x13
  40e366:	pop    esp
  40e367:	jl     0x40e2ec
  40e369:	mov    dh,0x10
  40e36b:	xor    DWORD PTR [ebx],ebp
  40e36d:	loope  0x40e3dc
  40e36f:	pop    esi
  40e370:	adc    BYTE PTR [edx-0x49848119],dh
  40e376:	add    BYTE PTR [edx+0x77],ah
  40e379:	out    0x8b,al
  40e37b:	in     eax,0x74
  40e37d:	adc    BYTE PTR fs:[edi],ch
  40e380:	addr16 mov cl,0x0
  40e383:	jo     0x40e3fc
  40e385:	ret    0x2389
  40e388:	ror    edx,0x66
  40e38b:	push   0x0
  40e38d:	add    BYTE PTR [ecx+edx*8+0x5d06e074],ah
  40e394:	clc    
  40e395:	lock and bl,al
  40e398:	pushw  0xffb4
  40e39b:	loop   0x40e413
  40e39d:	fdiv   QWORD PTR [ecx+0x57f6029e]
  40e3a3:	fisub  WORD PTR [esi+0x64]
  40e3a6:	jae    0x40e3d2
  40e3a8:	loop   0x40e36c
  40e3aa:	aaa    
  40e3ab:	cwde   
  40e3ac:	inc    ebx
  40e3ad:	into   
  40e3ae:	sub    al,0xc
  40e3b0:	(bad)  
  40e3b1:	fsub   QWORD PTR [eax+0x9e940cf]
  40e3b7:	in     eax,0x38
  40e3b9:	fs out dx,eax
  40e3bb:	out    0x8,al
  40e3bd:	pop    esp
  40e3be:	and    BYTE PTR [edx-0x4664d379],ch
  40e3c4:	addr16 cli 
  40e3c6:	sub    al,0xde
  40e3c8:	test   BYTE PTR [ecx+0xc821047],ch
  40e3ce:	stos   DWORD PTR es:[edi],eax
  40e3cf:	mov    cl,0x8a
  40e3d1:	and    al,0xb7
  40e3d3:	sub    ecx,DWORD PTR [ecx]
  40e3d5:	adc    edx,DWORD PTR [ebx+0x9]
  40e3d8:	addr16 pusha 
  40e3da:	aaa    
  40e3db:	xor    eax,0xb1286946
  40e3e0:	add    ch,bl
  40e3e2:	xor    al,0x47
  40e3e4:	and    eax,ecx
  40e3e6:	push   esi
  40e3e7:	addr16 add al,0xd2
  40e3ea:	ja     0x40e451
  40e3ec:	inc    ebx
  40e3ed:	cmp    eax,0x8a00be
  40e3f2:	add    BYTE PTR [eax],al
  40e3f4:	ret    
  40e3f5:	dec    esp
  40e3f6:	mov    WORD PTR [ebp*8+0x39f9ef54],?
  40e3fd:	dec    edi
  40e3fe:	add    bh,BYTE PTR [ebp+0x36]
  40e401:	pop    edx
  40e402:	jl     0x40e403
  40e404:	push   es
  40e405:	leave  
  40e406:	push   cs
  40e407:	push   0xfffffff4
  40e409:	add    al,0x67
  40e40b:	mov    edx,edx
  40e40d:	loope  0x40e454
  40e40f:	xor    eax,DWORD PTR [esi]
  40e411:	add    al,0x88
  40e413:	add    al,0xad
  40e415:	dec    ebp
  40e416:	inc    esp
  40e417:	clc    
  40e418:	cmp    eax,0x933bf919
  40e41d:	mov    al,0xe
  40e41f:	and    BYTE PTR [ebx+0x3dfffe4d],0x9a
  40e426:	pop    esi
  40e427:	pop    esi
  40e428:	in     eax,dx
  40e429:	je     0x40e3ea
  40e42b:	or     BYTE PTR [esi+0x6ef4744d],dl
  40e431:	fwait
  40e432:	adc    al,BYTE PTR [eax]
  40e434:	xchg   BYTE PTR [ecx-0x18841443],cl
  40e43a:	mov    esp,ebp
  40e43c:	and    bh,dh
  40e43e:	mov    ecx,edi
  40e440:	or     eax,0x968b08f0
  40e445:	push   edi
  40e446:	enter  0x5a75,0x57
  40e44a:	(bad)  
  40e44b:	je     0x40e4af
  40e44d:	pop    ecx
  40e44e:	(bad)  
  40e451:	inc    eax
  40e452:	(bad)  
  40e453:	inc    DWORD PTR [esi+0x57]
  40e456:	(bad)  
  40e457:	jne    0x40e459
  40e459:	add    BYTE PTR [ecx-0x77],bl
  40e45c:	mov    ebp,0xfe2caf40
  40e461:	inc    DWORD PTR [esi-0x77]
  40e464:	mov    ebp,0xdcbfe9
  40e469:	add    ch,ah
  40e46b:	xor    bl,BYTE PTR ds:0x41b32f74
  40e471:	add    BYTE PTR [edi+ebx*1+0x445f7491],ch
  40e478:	(bad)  
  40e47a:	or     BYTE PTR [ebx-0x1d],ch
  40e47d:	mov    DWORD PTR [eax],ebp
  40e47f:	mov    eax,0x3f28304f
  40e484:	mov    dl,0x2a
  40e486:	std    
  40e487:	push   edx
  40e488:	cmp    BYTE PTR [ebx],ch
  40e48a:	clc    
  40e48b:	cmp    edx,eax
  40e48d:	jae    0x40e50d
  40e48f:	cmp    BYTE PTR [ebx+0x6],0x28
  40e493:	pop    ds
  40e494:	(bad)  
  40e495:	cmp    BYTE PTR [eax],ah
  40e497:	pop    ss
  40e498:	mov    dl,0x2a
  40e49a:	mov    ebp,0x6eeaa029
  40e49f:	push   esi
  40e4a0:	nop
  40e4a1:	shl    BYTE PTR [edx+edx*2+0x44bf8af9],cl
  40e4a8:	adc    BYTE PTR [eax+ebp*4],cl
  40e4ab:	or     bh,ah
  40e4ad:	push   esi
  40e4ae:	mov    al,ds:0x274c7974
  40e4b3:	ds dec eax
  40e4b5:	or     al,0xa4
  40e4b7:	rol    BYTE PTR [eax],cl
  40e4b9:	cmp    edi,DWORD PTR [ebp-0x16]
  40e4bc:	jecxz  0x40e442
  40e4be:	add    BYTE PTR [eax],al
  40e4c0:	jns    0x40e4b3
  40e4c2:	out    dx,eax
  40e4c3:	test   BYTE PTR [ebp-0x17],bl
  40e4c6:	jmp    0x40e4fa
  40e4c8:	outs   dx,DWORD PTR ds:[esi]
  40e4c9:	inc    edx
  40e4ca:	mov    bl,0x7d
  40e4cc:	inc    edx
  40e4cd:	ror    BYTE PTR [ebx+0x30],0x30
  40e4d1:	pop    es
  40e4d2:	out    dx,al
  40e4d3:	sub    bl,BYTE PTR [edx+ecx*8-0x7]
  40e4d7:	inc    eax
  40e4d8:	call   0xcc02aee1
  40e4dd:	pop    edi
  40e4de:	cdq    
  40e4df:	add    DWORD PTR [ebx+esi*1],edx
  40e4e2:	ror    al,cl
  40e4e4:	mov    dl,0x27
  40e4e6:	(bad)  
  40e4e7:	sahf   
  40e4e8:	outs   dx,BYTE PTR ds:[esi]
  40e4e9:	fidiv  WORD PTR [edx-0x3a]
  40e4ec:	and    DWORD PTR [esi+0x6185c402],edx
  40e4f2:	mov    ds:0x28fb19fc,eax
  40e4f7:	das    
  40e4f8:	jno    0x40e50b
  40e4fa:	sub    bh,ah
  40e4fc:	or     BYTE PTR [edx],cl
  40e4fe:	jae    0x40e4a0
  40e500:	pop    edx
  40e501:	pop    es
  40e502:	arpl   WORD PTR [ebp+0x7ae020a5],cx
  40e508:	add    BYTE PTR [ecx+0x30],bl
  40e50b:	sbb    DWORD PTR [ebx],edi
  40e50d:	pop    ecx
  40e50e:	push   ds
  40e50f:	sbb    BYTE PTR [ebx],bh
  40e511:	pop    ebx
  40e512:	pop    ds
  40e513:	pop    edi
  40e515:	dec    esi
  40e516:	out    0x3,eax
  40e518:	das    
  40e519:	pop    ecx
  40e51a:	push   es
  40e51b:	sbb    DWORD PTR [eax],edi
  40e51d:	jmp    0x40e546
  40e51f:	inc    esp
  40e520:	(bad)  
  40e521:	dec    edx
  40e522:	out    0x3,eax
  40e524:	add    BYTE PTR [eax],al
  40e526:	das    
  40e527:	jmp    0x40e550
  40e529:	popf   
  40e52a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e52b:	fucom  st(7)
  40e52d:	add    edi,esp
  40e52f:	(bad)  
  40e530:	cld    
  40e531:	(bad)  
  40e532:	ds push ds
  40e534:	call   0x54ef7fbb
  40e539:	fild   QWORD PTR [ebp+0x38ef430]
  40e53f:	std    
  40e540:	out    dx,al
  40e541:	push   esi
  40e542:	sub    edi,ebx
  40e544:	jle    0x40e51a
  40e546:	inc    ebp
  40e547:	scas   al,BYTE PTR es:[edi]
  40e548:	xor    al,0x30
  40e54a:	inc    esp
  40e54b:	lahf   
  40e54c:	or     eax,0x3529a889
  40e551:	sub    DWORD PTR [ecx-0x25],0xffffffe6
  40e555:	push   esi
  40e556:	xor    edi,ebx
  40e558:	push   esi
  40e559:	xlat   BYTE PTR ds:[ebx]
  40e55a:	pop    ss
  40e55b:	add    edi,DWORD PTR [eax+0x17]
  40e55e:	pop    edx
  40e55f:	ret    0x3524
  40e562:	inc    eax
  40e563:	mov    al,BYTE PTR [eax]
  40e565:	(bad)  
  40e566:	out    dx,eax
  40e567:	in     eax,0x89
  40e569:	jns    0x40e518
  40e56b:	xor    DWORD PTR ds:0x55d74766,ecx
  40e571:	pop    esi
  40e572:	fstp   QWORD PTR [eax+0x4b]
  40e575:	loope  0x40e512
  40e577:	and    cl,BYTE PTR ds:0x39da5762
  40e57d:	cmp    esp,DWORD PTR [edi]
  40e57f:	add    eax,DWORD PTR [edi+esi*1+0x1b83ff18]
  40e586:	and    bl,cl
  40e588:	xor    DWORD PTR [ecx],ebp
  40e58a:	add    BYTE PTR [eax],al
  40e58c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e58d:	(bad)  
  40e58e:	jle    0x40e590
  40e590:	call   0x7a2f1509
  40e595:	int3   
  40e596:	sub    DWORD PTR [edx],ebx
  40e598:	aaa    
  40e599:	fld    QWORD PTR [ecx-0x3a9ed1d8]
  40e59f:	jmp    0x40e60d
  40e5a1:	jmp    0xb8e66368
  40e5a6:	add    al,dl
  40e5a8:	sahf   
  40e5a9:	lock (bad) 
  40e5ab:	fs call 0xf5a3:0x26a89ddc
  40e5b3:	rcl    DWORD PTR [esi-0x109ba693],0xd6
  40e5ba:	std    
  40e5bb:	or     ch,BYTE PTR [esp+ecx*1+0x5f]
  40e5bf:	and    al,0x6d
  40e5c1:	in     eax,0x0
  40e5c3:	adc    al,0x6
  40e5c5:	mov    ecx,0xd5f0624f
  40e5ca:	xchg   DWORD PTR [edi+ebx*4],esp
  40e5cd:	(bad)  
  40e5ce:	fldenv [esi]
  40e5d0:	xor    BYTE PTR [ecx-0x38],ah
  40e5d3:	sahf   
  40e5d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5d5:	mov    al,ds:0xc8776456
  40e5da:	push   esi
  40e5db:	ss mov bl,0xd2
  40e5de:	adc    DWORD PTR [eax],eax
  40e5e0:	push   esi
  40e5e1:	loope  0x40e56e
  40e5e3:	inc    ebp
  40e5e4:	push   edx
  40e5e5:	icebp  
  40e5e6:	std    
  40e5e7:	jne    0x40e5ab
  40e5e9:	out    dx,al
  40e5ea:	push   ebp
  40e5eb:	call   FWORD PTR [ebx+0x15]
  40e5ee:	adc    eax,DWORD PTR [eax+0x0]
  40e5f1:	add    BYTE PTR [esi],dl
  40e5f3:	mov    cs,eax
  40e5f5:	data16 lahf 
  40e5f7:	push   ds
  40e5f8:	aas    
  40e5f9:	(bad)  
  40e5fa:	loopne 0x40e659
  40e5fc:	cmc    
  40e5fd:	(bad)  
  40e5fe:	sti    
  40e5ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e600:	push   esi
  40e601:	(bad)  
  40e602:	jmp    0x40e660
  40e604:	cmovo  edx,DWORD PTR [esi]
  40e607:	push   0x44f33c2
  40e60c:	mov    BYTE PTR [ecx+ecx*8],cl
  40e60f:	addr16 ret 0x5d53
  40e613:	out    dx,al
  40e614:	and    al,0x8
  40e616:	dec    ebx
  40e617:	pop    ebx
  40e618:	jle    0x40e61f
  40e61a:	inc    ebp
  40e61b:	push   0xfffffffe
  40e61d:	pop    ebx
  40e61e:	add    eax,0x25e856f3
  40e623:	mov    al,0xfd
  40e625:	call   DWORD PTR [ebx+0x16]
  40e628:	and    eax,0x55ed960c
  40e62d:	push   esi
  40e62e:	shl    DWORD PTR [ebx-0x1da9ec53],0xc6
  40e635:	inc    esp
  40e636:	inc    eax
  40e637:	pop    ebx
  40e638:	std    
  40e639:	cmp    BYTE PTR [esi+0x59],0x74
  40e63d:	or     DWORD PTR [eax+0x5b],ebx
  40e640:	adc    al,0x74
  40e642:	and    BYTE PTR fs:[ecx],al
  40e645:	pop    ebx
  40e646:	aad    0xa2
  40e648:	add    DWORD PTR [eax],esi
  40e64a:	xchg   ch,dh
  40e64c:	rcl    DWORD PTR [ebp+0xd],0x4d
  40e650:	push   eax
  40e651:	cmp    DWORD PTR [ebx],0x4e
  40e654:	std    
  40e655:	push   ebp
  40e656:	add    BYTE PTR [eax],al
  40e658:	shl    DWORD PTR [ebx],cl
  40e65a:	adc    DWORD PTR [eax+0x2f],edx
  40e65d:	push   esp
  40e65e:	push   ss
  40e65f:	or     al,0x1c
  40e661:	ja     0x40e6e1
  40e663:	dec    esp
  40e664:	dec    ebx
  40e665:	dec    esi
  40e666:	jb     0x40e65d
  40e668:	inc    eax
  40e669:	sub    edi,DWORD PTR [ecx-0x11]
  40e66c:	mov    dl,0x2c
  40e66e:	or     ecx,DWORD PTR [edx]
  40e670:	xor    BYTE PTR [ecx-0x59471873],dh
  40e676:	add    DWORD PTR [eax],eax
  40e678:	adc    al,0xae
  40e67a:	js     0x40e6c0
  40e67c:	sbb    eax,DWORD PTR [ecx+0x3f]
  40e67f:	or     BYTE PTR [esi+0x69c578b6],ah
  40e685:	out    dx,al
  40e686:	rcl    BYTE PTR [esp+esi*4+0x19],0x33
  40e68b:	push   esi
  40e68c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e68d:	in     eax,0x34
  40e68f:	mov    esi,DWORD PTR [ecx]
  40e691:	or     al,BYTE PTR [edi+0xc]
  40e694:	jg     0x40e69a
  40e696:	pop    ss
  40e697:	or     BYTE PTR [eax+edi*8+0x6fc7cd78],dh
  40e69e:	xchg   ebx,eax
  40e69f:	(bad)  
  40e6a0:	sar    BYTE PTR [esi],1
  40e6a2:	inc    edi
  40e6a3:	cld    
  40e6a4:	lods   al,BYTE PTR ds:[esi]
  40e6a5:	fisttp QWORD PTR [esp+esi*2+0x74a94225]
  40e6ac:	sub    bh,BYTE PTR [edx]
  40e6ae:	lea    esi,[esi+eiz*1-0x44]
  40e6b2:	aam    0xe7
  40e6b4:	clc    
  40e6b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6b6:	add    DWORD PTR [eax],eax
  40e6b8:	dec    esi
  40e6b9:	retf   
  40e6ba:	ja     0x40e707
  40e6bc:	add    BYTE PTR [eax],al
  40e6be:	xor    al,0xb7
  40e6c0:	cdq    
  40e6c1:	cmp    DWORD PTR [edi],0xf28b01b5
  40e6c7:	mov    al,ds:0x78765e29
  40e6cc:	das    
  40e6cd:	mov    ecx,DWORD PTR [ebx+0x736485c6]
  40e6d3:	mov    ch,0x2f
  40e6d5:	(bad)  
  40e6d6:	repnz (bad) 
  40e6d9:	xor    esp,DWORD PTR [eax+0x31]
  40e6dc:	in     al,dx
  40e6dd:	js     0x40e6d2
  40e6df:	test   eax,0xab5a747f
  40e6e4:	mov    ?,WORD PTR [edi+0x58]
  40e6e7:	popa   
  40e6e8:	jge    0x40e6f7
  40e6ea:	xor    eax,0x5087f4ab
  40e6ef:	rcr    eax,cl
  40e6f1:	add    ebp,DWORD PTR [edi]
  40e6f3:	mov    bh,0xdf
  40e6f5:	jle    0x40e76a
  40e6f7:	stos   BYTE PTR es:[edi],al
  40e6f8:	jb     0x40e733
  40e6fa:	aaa    
  40e6fb:	push   ebp
  40e6fc:	call   0x214cd97f
  40e701:	(bad)  
  40e702:	adc    esp,esi
  40e704:	aas    
  40e705:	add    eax,0x1de7de1e
  40e70a:	xor    edx,DWORD PTR [eax+edx*2]
  40e70d:	call   0x5759:0xc6e7de1f
  40e714:	das    
  40e715:	xchg   ecx,ebp
  40e717:	stos   BYTE PTR es:[edi],al
  40e718:	pushf  
  40e719:	mul    ecx
  40e71b:	xor    esp,eax
  40e71d:	sti    
  40e71e:	fnop   
  40e720:	adc    esi,esi
  40e722:	add    BYTE PTR [eax],al
  40e724:	adc    dh,bl
  40e726:	bound  ecx,QWORD PTR [ebx+esi*4+0x56db85aa]
  40e72d:	ficom  WORD PTR [esi-0x27fdc376]
  40e733:	sbb    eax,esi
  40e735:	test   al,0xe7
  40e737:	add    edx,DWORD PTR [edi+0x2f04832e]
  40e73d:	push   ebp
  40e73e:	in     eax,0x80
  40e740:	fdiv   DWORD PTR [ecx]
  40e742:	stc    
  40e743:	xor    esp,DWORD PTR [esi+0x238ae42b]
  40e749:	xor    bl,dl
  40e74b:	inc    ebx
  40e74c:	das    
  40e74d:	push   ebp
  40e74e:	and    eax,0xdcc8fc
  40e753:	ret    0xf02a
  40e756:	ror    BYTE PTR [esi],0x71
  40e759:	fiadd  WORD PTR [eax]
  40e75b:	xchg   edx,eax
  40e75c:	js     0x40e79e
  40e75e:	and    BYTE PTR [ecx+0xf102e52],0xa8
  40e765:	mov    dl,0x25
  40e767:	adc    eax,0x81824048
  40e76c:	or     BYTE PTR [edx],dh
  40e76e:	add    al,0x7
  40e770:	scas   al,BYTE PTR es:[edi]
  40e771:	push   0x73
  40e773:	loopne 0x40e787
  40e775:	or     bl,BYTE PTR [ecx+0x7]
  40e778:	stos   BYTE PTR es:[edi],al
  40e779:	fild   WORD PTR [ecx-0x75bfd5d5]
  40e77f:	call   0x6a433ed2
  40e784:	jmp    0x3200:0x2881df
  40e78b:	fnstenv [ebp-0x3f9cb118]
  40e791:	mov    ah,0xc0
  40e793:	in     al,dx
  40e794:	ror    bh,0x73
  40e797:	ffreep st(1)
  40e799:	bound  esp,QWORD PTR [eax]
  40e79b:	add    al,BYTE PTR ds:0xff57e112
  40e7a1:	(bad)  
  40e7a3:	sub    eax,0x2dd7d508
  40e7a8:	add    al,0xa8
  40e7aa:	stc    
  40e7ab:	fwait
  40e7ac:	jb     0x40e7a6
  40e7ae:	inc    edx
  40e7af:	sahf   
  40e7b0:	sub    DWORD PTR [ebp+0x2739ddd8],esp
  40e7b6:	and    dl,dl
  40e7b8:	mov    ebx,DWORD PTR [eax+0x5ad6e533]
  40e7be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7bf:	sub    DWORD PTR [eax],edi
  40e7c1:	in     al,dx
  40e7c2:	sub    ecx,esp
  40e7c4:	adc    BYTE PTR [ebx],0x91
  40e7c7:	xor    al,BYTE PTR [ebx]
  40e7c9:	(bad)  
  40e7ca:	leave  
  40e7cb:	push   ds
  40e7cc:	mov    BYTE PTR [eax],al
  40e7ce:	jns    0x40e773
  40e7d0:	add    DWORD PTR [eax],eax
  40e7d2:	and    ebp,DWORD PTR [ebx]
  40e7d4:	jmp    0xcd56:0x528e6a83
  40e7db:	dec    esp
  40e7dc:	repz inc esi
  40e7de:	sub    dh,BYTE PTR [edx-0x37eb8baa]
  40e7e4:	and    BYTE PTR [esi-0x35],dl
  40e7e7:	call   0x1ef38bc
  40e7ec:	adc    DWORD PTR [eax],eax
  40e7ee:	add    BYTE PTR [eax],al
  40e7f0:	push   esi
  40e7f1:	bound  esp,QWORD PTR [esp+ebp*8-0x57]
  40e7f5:	xchg   ebx,eax
  40e7f6:	fidiv  DWORD PTR [ebx]
  40e7f8:	mov    ecx,0x20105b94
  40e7fd:	ret    
  40e7fe:	mov    al,BYTE PTR [esi+0x1a]
  40e801:	loop   0x40e7c8
  40e803:	mov    ebx,edx
  40e805:	or     BYTE PTR [edx-0x3975e9ba],0x8d
  40e80c:	stos   DWORD PTR es:[edi],eax
  40e80d:	ins    BYTE PTR es:[edi],dx
  40e80e:	mov    BYTE PTR [ebp+0x76],al
  40e811:	dec    edx
  40e812:	mov    ebx,0x815739ff
  40e817:	shl    BYTE PTR [ebx-0x67c4b95a],0xac
  40e81e:	outs   dx,DWORD PTR ds:[esi]
  40e81f:	ficomp WORD PTR [edi-0xc]
  40e822:	adc    al,0x89
  40e824:	cwde   
  40e825:	mov    ah,0xea
  40e827:	inc    ecx
  40e828:	dec    ebp
  40e829:	jmp    0x2551ec16
  40e82e:	jl     0x40e844
  40e830:	aas    
  40e831:	sbb    al,0x19
  40e833:	mov    al,0xc7
  40e835:	dec    ecx
  40e836:	xor    DWORD PTR [ebx],esi
  40e838:	push   es
  40e839:	xchg   ebx,eax
  40e83a:	dec    BYTE PTR [ecx+0x4588b8d0]
  40e840:	xchg   BYTE PTR [ebx+0x28890843],dl
  40e846:	std    
  40e847:	add    BYTE PTR [edi],ch
  40e849:	mov    bh,0x1
  40e84b:	xor    esi,DWORD PTR [esi-0xb]
  40e84e:	jns    0x40e89c
  40e850:	jnp    0x40e87f
  40e852:	aaa    
  40e853:	clc    
  40e854:	add    BYTE PTR [eax],al
  40e856:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e857:	clc    
  40e858:	add    BYTE PTR [edx+0x1dcbbf13],cl
  40e85e:	loop   0x40e7e3
  40e860:	int3   
  40e861:	jge    0x40e8a2
  40e863:	mov    al,0x7e
  40e865:	int3   
  40e866:	das    
  40e867:	mov    bh,0x1
  40e869:	mov    ecx,edx
  40e86b:	scas   al,BYTE PTR es:[edi]
  40e86c:	sar    DWORD PTR [edi-0x36d40718],cl
  40e872:	ins    BYTE PTR es:[edi],dx
  40e873:	pushf  
  40e874:	daa    
  40e875:	add    DWORD PTR [eax],ebp
  40e877:	inc    ebx
  40e878:	sahf   
  40e879:	push   DWORD PTR [eax]
  40e87b:	mov    dh,0xcc
  40e87d:	jge    0x40e8be
  40e87f:	mov    cl,0x99
  40e881:	mov    dh,BYTE PTR [ecx-0x4f]
  40e884:	jnp    0x40e899
  40e886:	sub    BYTE PTR [eax+edi*1],ch
  40e889:	sbb    al,0xa7
  40e88b:	push   0xffffff88
  40e88d:	cmc    
  40e88e:	out    dx,al
  40e88f:	mov    DWORD PTR ds:0xf9f6f942,ecx
  40e895:	jae    0x40e8b1
  40e897:	cmp    bh,BYTE PTR ds:0xeaeeafbf
  40e89d:	jbe    0x40e8cb
  40e89f:	xor    eax,0x6bb21fc5
  40e8a4:	dec    eax
  40e8a5:	jg     0x40e87d
  40e8a7:	fimul  WORD PTR [edi]
  40e8a9:	add    eax,0xeae1f3af
  40e8ae:	adc    bh,BYTE PTR ds:0xc2d4ff2f
  40e8b4:	clc    
  40e8b5:	mov    ebp,0x148845ec
  40e8ba:	add    BYTE PTR [eax],al
  40e8bc:	jg     0x40e847
  40e8be:	inc    ecx
  40e8bf:	add    BYTE PTR [ebp-0x15420733],dh
  40e8c5:	fucom  st(6)
  40e8c7:	xor    al,0x98
  40e8c9:	rcl    DWORD PTR [edi+0x5fde50f0],1
  40e8cf:	inc    ecx
  40e8d0:	mov    BYTE PTR [ebx+0x24],dl
  40e8d3:	xchg   esp,eax
  40e8d4:	mov    dh,0x11
  40e8d6:	(bad)  
  40e8d7:	retf   0x3256
  40e8da:	push   ds
  40e8db:	mov    gs,edx
  40e8dd:	leave  
  40e8de:	jmp    0xb29f9cf2
  40e8e3:	cli    
  40e8e4:	fild   DWORD PTR [ecx]
  40e8e6:	push   0xff312b8a
  40e8eb:	jp     0x40e8d0
  40e8ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8ee:	shl    BYTE PTR ds:0x116ad71f,cl
  40e8f4:	inc    eax
  40e8f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8f6:	xchg   BYTE PTR [ebx-0x16],bh
  40e8f9:	fnstcw WORD PTR [edi-0x192309d9]
  40e8ff:	adc    BYTE PTR [eax+0x69876ea7],0xa7
  40e906:	lods   al,BYTE PTR ds:[esi]
  40e907:	mov    eax,DWORD PTR ds:0x268a67f7
  40e90d:	xlat   BYTE PTR ds:[ebx]
  40e90e:	ins    BYTE PTR es:[edi],dx
  40e90f:	sub    eax,0x844ea708
  40e914:	add    eax,0x6880f6d9
  40e919:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e91a:	xchg   DWORD PTR ds:[ebp+0xcb3c18],esp
  40e921:	add    BYTE PTR [edx-0x2a],bh
  40e924:	fiadd  WORD PTR [edx-0x78d95894]
  40e92a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e92b:	pop    ss
  40e92c:	in     al,0xcb
  40e92e:	jl     0x40e90d
  40e930:	call   0xf2f9d2b
  40e935:	xchg   ecx,eax
  40e937:	sbb    eax,0x1ec34107
  40e93c:	inc    DWORD PTR [eax-0x49]
  40e93f:	sbb    eax,0xb1eff601
  40e944:	xchg   DWORD PTR [esp+edi*4-0x5e0eb91d],esp
  40e94b:	popa   
  40e94c:	or     al,0xde
  40e94e:	test   eax,0xbaa931a7
  40e953:	and    BYTE PTR ds:0x192903e8,bl
  40e959:	cmp    eax,0xd97ee31f
  40e95e:	jns    0x40e9aa
  40e960:	rol    al,0x62
  40e963:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e964:	std    
  40e965:	scas   al,BYTE PTR es:[edi]
  40e966:	in     eax,0x8
  40e968:	or     DWORD PTR [ebx+0x22],esi
  40e96b:	fisttp QWORD PTR [ecx+0x3a1e2f37]
  40e971:	stos   BYTE PTR es:[edi],al
  40e972:	sbb    eax,0x2edd38df
  40e977:	xor    dh,bh
  40e979:	ret    0x316d
  40e97c:	or     DWORD PTR [edx-0xe],esi
  40e97f:	int    0xe7
  40e981:	cmp    eax,0x3fda4b2
  40e986:	add    BYTE PTR [eax],al
  40e988:	or     ecx,DWORD PTR [esp+ecx*4]
  40e98b:	mov    ah,0xdc
  40e98d:	push   cs
  40e98e:	jmp    0xfde703ba
  40e993:	call   0xa4687407
  40e998:	aam    0x56
  40e99a:	jle    0x40e97d
  40e99c:	xchg   ebp,eax
  40e99d:	test   BYTE PTR [ecx-0x3a1f0759],0x60
  40e9a4:	outs   dx,DWORD PTR ds:[esi]
  40e9a5:	or     BYTE PTR [ecx-0x3a072359],0x74
  40e9ac:	pop    ss
  40e9ad:	mov    es,WORD PTR [edi+0x27bd8ca4]
  40e9b3:	pop    ss
  40e9b4:	mov    cl,0xa4
  40e9b6:	mov    DWORD PTR [esp+eiz*4+0x3f00cde0],ebx
  40e9bd:	jmp    0x40e9d7
  40e9bf:	test   BYTE PTR [esi],al
  40e9c1:	lods   al,BYTE PTR ds:[esi]
  40e9c2:	test   BYTE PTR [eax-0x60],bh
  40e9c5:	pop    ebx
  40e9c6:	inc    BYTE PTR [edi-0x23]
  40e9c9:	fist   DWORD PTR [eax]
  40e9cb:	jb     0x40e9a1
  40e9cd:	dec    ecx
  40e9ce:	mov    ds:0x3d5b71fe,al
  40e9d3:	jmp    0x3f45d9
  40e9d8:	cmp    esp,DWORD PTR [edi]
  40e9da:	jmp    0xfd57:0x53b66283
  40e9e1:	dec    ecx
  40e9e2:	addr16 sbb al,0xd3
  40e9e5:	in     al,0xe4
  40e9e7:	push   eax
  40e9e8:	cmp    al,cl
  40e9ea:	std    
  40e9eb:	xor    eax,DWORD PTR [eax]
  40e9ed:	add    BYTE PTR [ecx+0x5468145b],dl
  40e9f3:	and    DWORD PTR [ecx],eax
  40e9f5:	test   DWORD PTR [esi+0x338120ce],edx
  40e9fb:	dec    esi
  40e9fc:	std    
  40e9fd:	cmovbe esp,ecx
  40ea00:	jae    0x40ea19
  40ea02:	mov    ecx,0x1701f8e4
  40ea07:	loope  0x40ea09
  40ea09:	jne    0x40ea0b
  40ea0b:	xchg   BYTE PTR [esp+eiz*8-0x63],dh
  40ea0f:	in     eax,0xf0
  40ea11:	cmp    ecx,DWORD PTR [eax-0x2c]
  40ea14:	add    al,0x2b
  40ea16:	pop    eax
  40ea17:	daa    
  40ea18:	test   BYTE PTR [ebx-0x36a104b7],0x45
  40ea1f:	cmc    
  40ea20:	mov    esp,ebp
  40ea22:	test   DWORD PTR [esi+0x29],eax
  40ea25:	push   esi
  40ea26:	in     eax,0x52
  40ea28:	mov    al,bl
  40ea2a:	dec    edi
  40ea2b:	aad    0xf8
  40ea2d:	call   0x3f45b0
  40ea32:	inc    ebp
  40ea33:	push   edx
  40ea34:	sbb    ecx,DWORD PTR [edi]
  40ea36:	das    
  40ea37:	cmp    DWORD PTR [edi+0x76b6c0ff],ecx
  40ea3d:	inc    esp
  40ea3e:	mov    ebx,0x45401746
  40ea43:	test   DWORD PTR [eax],esi
  40ea45:	push   0xffffffa8
  40ea47:	stos   DWORD PTR es:[edi],eax
  40ea48:	out    dx,al
  40ea49:	pop    edi
  40ea4a:	cmp    eax,0x6f850177
  40ea4f:	stos   DWORD PTR es:[edi],eax
  40ea50:	jge    0x40ea2e
  40ea52:	add    BYTE PTR [eax],al
  40ea54:	das    
  40ea55:	mov    bh,0x1
  40ea57:	push   0x4c
  40ea59:	cmp    bh,BYTE PTR [edi]
  40ea5b:	aam    0x15
  40ea5d:	daa    
  40ea5e:	xor    bh,bh
  40ea60:	and    al,bh
  40ea62:	out    dx,al
  40ea63:	aas    
  40ea64:	das    
  40ea65:	cmp    BYTE PTR [esi-0x18defef5],bh
  40ea6b:	mov    edx,gs
  40ea6d:	dec    edx
  40ea6e:	xor    DWORD PTR [ebx-0x3b],edx
  40ea71:	jnp    0x40e9f7
  40ea73:	adc    al,0xcb
  40ea75:	test   al,0x41
  40ea77:	add    BYTE PTR [edx-0x727c0b8a],dh
  40ea7d:	mov    dh,0x1
  40ea7f:	add    al,ah
  40ea81:	sub    DWORD PTR [edi],eax
  40ea83:	aam    0xd9
  40ea85:	das    
  40ea86:	mov    ebp,0x66144f
  40ea8b:	lock lods al,BYTE PTR ds:[esi]
  40ea8d:	xor    esp,esp
  40ea8f:	push   cs
  40ea90:	mov    al,0x29
  40ea92:	add    al,BYTE PTR [eax]
  40ea94:	das    
  40ea95:	das    
  40ea96:	cmc    
  40ea97:	jg     0x40ea9f
  40ea99:	pop    ds
  40ea9a:	push   cs
  40ea9b:	add    eax,0x749a0eaf
  40eaa0:	sub    bh,BYTE PTR [eax]
  40eaa2:	mov    al,BYTE PTR [edx+edi*2]
  40eaa5:	lods   eax,DWORD PTR ds:[esi]
  40eaa6:	js     0x40ea6a
  40eaa8:	adc    al,0x72
  40eaaa:	cmc    
  40eaab:	add    BYTE PTR [eax-0x4a],ch
  40eaae:	pop    ss
  40eaaf:	add    BYTE PTR [esi+ebx*8-0x32a201db],ch
  40eab6:	ins    BYTE PTR es:[edi],dx
  40eab7:	pop    es
  40eab8:	add    BYTE PTR [eax],al
  40eaba:	add    cl,BYTE PTR [edx+0x73c69bbe]
  40eac0:	jmp    0x6e796c8
  40eac5:	push   cs
  40eac6:	jmp    0x6db98d82
  40eacb:	imul   DWORD PTR [edi+esi*8-0x7f1adb4d]
  40ead2:	nop
  40ead3:	fnstenv [eax-0x38]
  40ead6:	pop    ebx
  40ead7:	mov    DWORD PTR [esi],esi
  40ead9:	xchg   ecx,eax
  40eada:	xrelease mov DWORD PTR [edi],esi
  40eadd:	cmp    ebx,0xffffffd1
  40eae0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eae1:	enter  0x8a43,0xd0
  40eae5:	(bad)  
  40eae6:	cmp    eax,DWORD PTR [esi]
  40eae8:	fcmovb st,st(3)
  40eaea:	push   0x7a83b735
  40eaef:	pop    ecx
  40eaf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eaf1:	clc    
  40eaf2:	pop    ds
  40eaf3:	push   edi
  40eaf4:	sub    al,0xc
  40eaf6:	add    al,0x9f
  40eaf8:	push   0x6c
  40eafa:	xor    ebx,DWORD PTR [edi+0x14]
  40eafd:	adc    al,0x2f
  40eaff:	pushf  
  40eb00:	and    al,0x58
  40eb02:	inc    edi
  40eb03:	push   ebp
  40eb04:	sub    al,0x59
  40eb06:	mov    esp,0x34d972d5
  40eb0b:	push   edi
  40eb0c:	mov    ds:0x1ce7b83,al
  40eb11:	add    al,0x85
  40eb13:	fnstenv [ecx+ecx*8-0x4]
  40eb17:	or     eax,0xa309edbb
  40eb1c:	cmp    eax,0xc0000089
  40eb21:	sub    ebx,ebp
  40eb23:	mov    WORD PTR [ebx-0x5a],?
  40eb26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb27:	nop
  40eb28:	imul   esp,DWORD PTR [edx-0x5d9c7d69],0x0
  40eb2f:	ret    
  40eb30:	push   cs
  40eb31:	packssdw mm5,QWORD PTR [esi]
  40eb34:	lods   al,BYTE PTR ds:[esi]
  40eb35:	leave  
  40eb36:	pusha  
  40eb37:	sti    
  40eb38:	in     al,dx
  40eb39:	mov    ds:0x144a48a,al
  40eb3e:	enter  0x1f2b,0xde
  40eb42:	push   ebx
  40eb43:	bound  edi,QWORD PTR [edi]
  40eb45:	push   cs
  40eb46:	push   eax
  40eb47:	push   0xffffffc6
  40eb49:	stos   BYTE PTR es:[edi],al
  40eb4a:	add    BYTE PTR [esi+0x7437a361],dl
  40eb50:	xor    al,0x2a
  40eb52:	dec    edi
  40eb53:	xchg   edi,eax
  40eb54:	test   eax,0x6cfdb8e9
  40eb59:	mov    ds:0x130b248c,al
  40eb5e:	push   esi
  40eb5f:	fs ja  0x40eb08
  40eb62:	push   eax
  40eb63:	inc    ebx
  40eb64:	xor    DWORD PTR [ebx-0x77520e8d],esp
  40eb6a:	sub    DWORD PTR [ecx+0x2c89ec67],0xffffffe3
  40eb71:	pop    ecx
  40eb72:	shl    BYTE PTR ds:0xebc05f08,0x58
  40eb79:	(bad)  
  40eb7a:	call   0x11f0a95
  40eb7f:	(bad)  
  40eb80:	les    ebx,FWORD PTR [ecx-0x3]
  40eb83:	adc    eax,0x51180000
  40eb88:	inc    ebx
  40eb89:	icebp  
  40eb8a:	pop    esp
  40eb8b:	mov    ds:0x38058173,eax
  40eb90:	add    esi,DWORD PTR [esi+0x27]
  40eb93:	(bad)  
  40eb95:	xchg   edi,eax
  40eb96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb97:	popa   
  40eb98:	jae    0x40eb8b
  40eb9a:	cmc    
  40eb9b:	mov    ecx,0xde2ced89
  40eba0:	xor    DWORD PTR [esi+0xe],edx
  40eba3:	push   ebp
  40eba4:	lds    ebp,FWORD PTR [esi+0x49f6b]
  40ebaa:	push   es
  40ebab:	mov    DWORD PTR [esi-0x1],edx
  40ebae:	mov    ds:0x3d320cf9,al
  40ebb3:	xor    eax,0x5c09ff8d
  40ebb8:	mov    bh,al
  40ebba:	inc    ebx
  40ebbb:	pop    esp
  40ebbc:	jno    0x40ebe9
  40ebbe:	sbb    BYTE PTR [ecx+esi*2+0x24],0xc2
  40ebc3:	xor    eax,0x5c29ff7d
  40ebc8:	mov    dh,al
  40ebca:	inc    ebx
  40ebcb:	daa    
  40ebcc:	jb     0x40ebe2
  40ebce:	rol    BYTE PTR [esi+edi*8+0x40cbc215],0x0
  40ebd6:	adc    ebx,DWORD PTR ds:0x1b880275
  40ebdc:	push   esp
  40ebdd:	call   0x41ba1e
  40ebe2:	inc    ecx
  40ebe3:	xor    al,BYTE PTR [edx+0xc]
  40ebe6:	xchg   ch,bl
  40ebe8:	pop    esi
  40ebe9:	pop    edi
  40ebea:	add    BYTE PTR [eax],al
  40ebec:	cld    
  40ebed:	sbb    bl,BYTE PTR [ebx-0x3e]
  40ebf0:	pop    esi
  40ebf1:	(bad)  
  40ebf3:	je     0x40ec27
  40ebf5:	(bad)  
  40ebf6:	std    
  40ebf7:	adc    eax,0x40c8ee
  40ebfc:	push   ss
  40ebfd:	xor    ch,BYTE PTR [ebx-0x7ea05601]
  40ec03:	shl    BYTE PTR [ebx],0xcc
  40ec06:	std    
  40ec07:	je     0x40ec7b
  40ec09:	fscale 
  40ec0b:	adc    eax,0x40c8fe
  40ec10:	xchg   ebx,eax
  40ec11:	sbb    dh,BYTE PTR [edx+0x3]
  40ec14:	in     eax,0x1c
  40ec16:	ds ret 0xdd12
  40ec1a:	push   ebx
  40ec1b:	mov    edi,DWORD PTR [edx+0x5b]
  40ec1e:	jmp    0x32c7b14f
  40ec23:	fld    TBYTE PTR [edi]
  40ec25:	pusha  
  40ec26:	mov    ?,WORD PTR [ebx+edx*1+0x4f]
  40ec2a:	call   0xe85c:0x89b6f0ff
  40ec31:	push   cs
  40ec32:	sbb    ecx,esi
  40ec34:	das    
  40ec35:	mov    bh,0xc0
  40ec37:	(bad)  
  40ec38:	fdiv   DWORD PTR [esi+0x2c7c5711]
  40ec3e:	dec    ebx
  40ec3f:	dec    edi
  40ec40:	enter  0xb5a9,0x13
  40ec44:	outs   dx,DWORD PTR ds:[esi]
  40ec45:	mov    bh,0x8a
  40ec47:	inc    esp
  40ec48:	mov    bh,0x8b
  40ec4a:	inc    esp
  40ec4b:	je     0x40ec65
  40ec4d:	inc    esp
  40ec4e:	fcom   DWORD PTR [edx+0x0]
  40ec51:	add    BYTE PTR [eax+edi*8-0x70c5012c],dh
  40ec58:	push   ss
  40ec59:	inc    eax
  40ec5a:	das    
  40ec5b:	ds (bad) 
  40ec5d:	not    DWORD PTR [esp+esi*2+0x10]
  40ec61:	test   al,dl
  40ec63:	mov    dh,0x1
  40ec65:	add    BYTE PTR [eax-0x10eb165f],al
  40ec6b:	mov    dh,0x80
  40ec6d:	je     0x40ece6
  40ec6f:	sub    eax,0xe057f3c7
  40ec74:	jg     0x40ec74
  40ec76:	pusha  
  40ec77:	xor    al,BYTE PTR [edx+0xe]
  40ec7a:	mov    bl,0x39
  40ec7c:	add    al,BYTE PTR [eax]
  40ec7e:	das    
  40ec7f:	sub    al,0xc7
  40ec81:	pop    es
  40ec82:	mov    dh,0xf9
  40ec84:	or     al,0x3b
  40ec86:	ins    BYTE PTR es:[edi],dx
  40ec87:	rcl    DWORD PTR [esi],0x8d
  40ec8a:	repnz push 0xffffff8a
  40ec8d:	inc    esp
  40ec8e:	daa    
  40ec8f:	sub    al,0x72
  40ec91:	mov    bh,0xc0
  40ec93:	mov    ch,0x1
  40ec95:	add    BYTE PTR [edi],dl
  40ec97:	out    0x71,eax
  40ec99:	call   FWORD PTR [eax]
  40ec9b:	leave  
  40ec9c:	rcl    DWORD PTR [edx+0x10],cl
  40ec9f:	(bad)  
  40eca1:	or     ecx,DWORD PTR [eax]
  40eca3:	retf   0x1723
  40eca6:	outs   dx,DWORD PTR ds:[esi]
  40eca7:	fisub  WORD PTR [edx+0x73]
  40ecaa:	xor    eax,0x5c17d4ab
  40ecaf:	pop    es
  40ecb0:	fwait
  40ecb1:	aam    0x7d
  40ecb3:	lahf   
  40ecb4:	mov    ah,0xb
  40ecb6:	add    BYTE PTR [eax],al
  40ecb8:	loopne 0x40ec83
  40ecba:	mov    ds:0x62de6f16,eax
  40ecbf:	jae    0x40ecd6
  40ecc1:	stos   DWORD PTR es:[edi],eax
  40ecc2:	fwait
  40ecc3:	cmp    eax,ecx
  40ecc5:	leave  
  40ecc6:	mov    bh,0x15
  40ecc8:	outs   dx,DWORD PTR ds:[esi]
  40ecc9:	fidiv  WORD PTR [edi-0xae5dc80]
  40eccf:	ret    
  40ecd0:	mov    al,0x9
  40ecd2:	cwde   
  40ecd3:	imul   eax,DWORD PTR [ebp-0x53800160],0xffffff9e
  40ecda:	jl     0x40eced
  40ecdc:	add    DWORD PTR [edi+0x1e3cbfd4],ebx
  40ece2:	call   0x64dfd872
  40ece7:	inc    esp
  40ece8:	cld    
  40ece9:	fldcw  WORD PTR [ebp+0x35dd79c9]
  40ecef:	jg     0x40ed0c
  40ecf1:	sahf   
  40ecf2:	fcmovnb st,st(3)
  40ecf4:	push   0xdb7f1ce7
  40ecf9:	shl    al,1
  40ecfb:	loopne 0x40ed59
  40ecfd:	sub    ah,al
  40ecff:	jle    0x40ecdc
  40ed01:	test   eax,0x9f4a758f
  40ed06:	sahf   
  40ed07:	jg     0x40ecc4
  40ed09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed0a:	xchg   esi,eax
  40ed0b:	sbb    DWORD PTR [ebx],ebx
  40ed0d:	leave  
  40ed0e:	daa    
  40ed0f:	add    al,0xa5
  40ed11:	sbb    DWORD PTR [edi-0x4efc7521],eax
  40ed17:	inc    edx
  40ed18:	sub    al,0xde
  40ed1a:	add    BYTE PTR [eax+eax*1],bl
  40ed1d:	add    BYTE PTR [edx+esi*4-0x515be8b1],ah
  40ed24:	mov    ebp,DWORD PTR [eax+ecx*4+0x2ed3570f]
  40ed2b:	xchg   edi,eax
  40ed2c:	inc    ebx
  40ed2d:	push   ebp
  40ed2e:	daa    
  40ed2f:	fld    QWORD PTR [eax]
  40ed31:	jmp    0xdb11b7a7
  40ed36:	in     al,dx
  40ed37:	sahf   
  40ed38:	sub    DWORD PTR [ecx],0xac89ece7
  40ed3e:	pop    eax
  40ed3f:	pop    edx
  40ed40:	shl    BYTE PTR [ebp-0x703814fb],0xbb
  40ed47:	rol    BYTE PTR [esi+0x72],cl
  40ed4a:	imul   edi,DWORD PTR [ecx],0xf8c0e738
  40ed50:	or     eax,0xf75b2356
  40ed55:	(bad)  
  40ed56:	mov    al,ds:0x8f0081d9
  40ed5b:	sub    DWORD PTR [edi],eax
  40ed5d:	sbb    DWORD PTR [eax+0x23606705],0x5b
  40ed64:	shr    bl,0x92
  40ed67:	pop    ebx
  40ed68:	cmp    cl,ch
  40ed6a:	xchg   DWORD PTR [edx+0x2686e1e9],edi
  40ed70:	pop    ecx
  40ed71:	rcl    eax,0xaf
  40ed74:	add    cl,ch
  40ed76:	mov    dl,BYTE PTR [ebp-0x4d4beb3f]
  40ed7c:	or     ebp,0x35ec5dd4
  40ed82:	add    BYTE PTR [eax],al
  40ed84:	sub    al,0xde
  40ed86:	add    BYTE PTR [edx],bh
  40ed88:	popa   
  40ed89:	pop    es
  40ed8a:	xor    al,dl
  40ed8c:	push   esp
  40ed8d:	ret    0x2973
  40ed90:	xor    ecx,DWORD PTR [ebx]
  40ed92:	mov    DWORD PTR ds:0xfdc707,ebp
  40ed98:	or     edi,DWORD PTR [esi+0xd]
  40ed9b:	inc    eax
  40ed9c:	push   ss
  40ed9d:	imul   eax,DWORD PTR [ecx+0x24],0xfffffff6
  40eda1:	fadd   st,st(1)
  40eda3:	jp     0x1640ee49
  40eda9:	imul   esi,DWORD PTR [eax+edx*4],0x52fda206
  40edb0:	mov    dh,0xd0
  40edb2:	std    
  40edb3:	(bad)  
  40edb4:	cmp    al,bl
  40edb6:	shl    DWORD PTR [esi+eax*1-0x4e],0xfe
  40edbb:	je     0x40ede7
  40edbd:	test   BYTE PTR [ebp-0x1],0x38
  40edc1:	fadd   st,st(1)
  40edc3:	jne    0x40eddf
  40edc5:	fdivr  st,st(1)
  40edc7:	jne    0x40ed85
  40edc9:	and    eax,DWORD PTR [edx+0x24]
  40edcc:	shl    edx,1
  40edce:	out    0xe,eax
  40edd0:	(bad)  
  40edd1:	loope  0x40edd3
  40edd3:	push   0xffffff9b
  40edd5:	outs   dx,BYTE PTR ds:[esi]
  40edd6:	jno    0x40edfc
  40edd8:	jbe    0x40ed93
  40edda:	mov    BYTE PTR [edx+ebp*2-0x7],bl
  40edde:	xchg   DWORD PTR [edx+ebp*2-0xb],ebx
  40ede2:	call   0x1217f55
  40ede7:	push   0x0
  40ede9:	add    BYTE PTR [edx-0x2397552],bl
  40edef:	aam    0x88
  40edf1:	adc    BYTE PTR [esi-0x1e],al
  40edf4:	push   eax
  40edf5:	lea    ecx,[edx-0x3a]
  40edf8:	and    BYTE PTR [eax+0x71],dl
  40edfb:	xchg   esi,eax
  40edfc:	and    DWORD PTR [eax],esp
  40edfe:	mov    eax,ds:0x51c08534
  40ee03:	fiadd  DWORD PTR gs:[eax]
  40ee06:	inc    esi
  40ee07:	loope  0x40ed92
  40ee09:	inc    esp
  40ee0a:	jp     0x40ee01
  40ee0c:	cmp    ebx,eax
  40ee0e:	sbb    esp,esi
  40ee10:	xor    eax,eax
  40ee12:	das    
  40ee13:	pusha  
  40ee14:	add    eax,0x17e3fe8
  40ee19:	add    BYTE PTR [esi+0x641828ca],dh
  40ee1f:	dec    eax
  40ee20:	or     eax,DWORD PTR [ecx+ebx*8-0x7afffe7a]
  40ee27:	adc    eax,0xffffff8c
  40ee2a:	jae    0x40ee17
  40ee2c:	sub    BYTE PTR [eax-0x4e],dl
  40ee2f:	inc    edx
  40ee30:	and    eax,0xf9345f20
  40ee35:	and    ecx,DWORD PTR [edi+0x2c]
  40ee38:	push   edi
  40ee39:	test   bh,ch
  40ee3b:	xchg   ebx,eax
  40ee3c:	test   DWORD PTR [ecx+0x6801872f],ebx
  40ee42:	cmp    ebx,DWORD PTR [edx-0x3f]
  40ee45:	jmp    FWORD PTR [ebp+0x438c7bbe]
  40ee4b:	stos   DWORD PTR es:[edi],eax
  40ee4c:	std    
  40ee4d:	out    0x0,eax
  40ee4f:	add    dl,cl
  40ee51:	jmp    0x40eece
  40ee53:	(bad)  
  40ee54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee55:	int3   
  40ee56:	aam    0xfe
  40ee58:	sbb    dl,BYTE PTR [edi+0x16]
  40ee5b:	inc    eax
  40ee5c:	das    
  40ee5d:	adc    cl,cl
  40ee5f:	and    edx,DWORD PTR [edi+0x77]
  40ee62:	jl     0x40ee78
  40ee64:	jmp    0x40ee1e
  40ee66:	sar    edi,0x6
  40ee69:	adc    eax,0xc353738f
  40ee6e:	fsubr  st(7),st
  40ee70:	mov    DWORD PTR [ecx+eax*1+0x260aaa00],ebp
  40ee77:	js     0x40eea7
  40ee79:	xchg   DWORD PTR [ecx],eax
  40ee7b:	call   0xfebd9312
  40ee80:	xor    BYTE PTR [esi+eax*8],dl
  40ee83:	and    eax,DWORD PTR [edi]
  40ee85:	test   DWORD PTR [ebx],0x2ee2ebb7
  40ee8b:	push   eax
  40ee8c:	cmp    dh,bl
  40ee8e:	pop    esi
  40ee8f:	(bad)  
  40ee90:	or     al,0xd4
  40ee92:	aaa    
  40ee93:	(bad)  
  40ee94:	lods   al,BYTE PTR ds:[esi]
  40ee95:	shr    DWORD PTR [ebx+0x3],0x2f
  40ee99:	fidiv  WORD PTR [edi]
  40ee9b:	(bad)  
  40ee9c:	lods   al,BYTE PTR ds:[esi]
  40ee9d:	ret    0x26f
  40eea0:	das    
  40eea1:	ficom  WORD PTR [edi]
  40eea3:	mov    edx,esi
  40eea5:	add    bh,BYTE PTR cs:[esi]
  40eea8:	je     0x40ef13
  40eeaa:	sub    esp,DWORD PTR [edi]
  40eeac:	pop    ds
  40eead:	fucom  st(7)
  40eeaf:	add    edx,DWORD PTR [edi]
  40eeb1:	sub    dl,BYTE PTR [edi+0x7c]
  40eeb4:	add    BYTE PTR [eax],al
  40eeb6:	stc    
  40eeb7:	pop    edi
  40eeb8:	sub    ebx,DWORD PTR [ebx]
  40eeba:	stos   BYTE PTR es:[edi],al
  40eebb:	sahf   
  40eebc:	int    0x23
  40eebe:	call   0xb458fad5
  40eec3:	mov    ds:0xfa0cf73e,eax
  40eec8:	xchg   edi,eax
  40eec9:	jmp    0x40eeff
  40eecb:	adc    DWORD PTR [eax+0xfe05503],ebp
  40eed1:	adc    eax,0x87e7de49
  40eed6:	js     0x40eeea
  40eed8:	in     eax,dx
  40eed9:	inc    ebp
  40eeda:	ins    BYTE PTR es:[edi],dx
  40eedb:	ret    0x2de
  40eede:	pop    esp
  40eedf:	mov    bh,0x6
  40eee1:	test   DWORD PTR [esi+esi*8+0xf],0xe7de27da
  40eee9:	rcl    BYTE PTR [ecx-0x77e83bee],1
  40eeef:	icebp  
  40eef0:	jg     0x40ef06
  40eef2:	out    dx,eax
  40eef3:	fnsave [ecx-0x40]
  40eef6:	dec    esp
  40eef7:	jmp    0x40ef2f
  40eef9:	fcmovbe st,st(5)
  40eefb:	data16 (bad) 
  40eefd:	fldcw  WORD PTR [ebp+0x31]
  40ef00:	jae    0x40ef6a
  40ef02:	lods   eax,DWORD PTR ds:[esi]
  40ef03:	cmp    BYTE PTR [edi+0x9a4485],0xeb
  40ef0a:	sub    al,0xde
  40ef0c:	push   ecx
  40ef0d:	pop    ss
  40ef0e:	mov    eax,0xc43e0912
  40ef13:	adc    DWORD PTR [ecx],edx
  40ef15:	sahf   
  40ef16:	ds out 0x56,eax
  40ef19:	xchg   esi,eax
  40ef1a:	add    BYTE PTR [eax],al
  40ef1c:	push   ds
  40ef1d:	jb     0x40ef2f
  40ef1f:	sub    DWORD PTR [ebx],esi
  40ef21:	gs inc esp
  40ef23:	int    0x3c
  40ef25:	popa   
  40ef26:	shr    dh,0x98
  40ef29:	out    dx,al
  40ef2a:	(bad)  
  40ef2b:	call   0xd984825c
  40ef30:	sub    al,0xde
  40ef32:	add    cl,bh
  40ef34:	xor    eax,0x2ce80461
  40ef39:	fiadd  WORD PTR [ebx-0x39ddba1]
  40ef3f:	jmp    0x7c2cd70
  40ef44:	sub    ebp,ebx
  40ef46:	xchg   BYTE PTR [edx],bh
  40ef48:	xor    ebx,esi
  40ef4a:	add    BYTE PTR [edx-0x2b],ch
  40ef4d:	fiadd  WORD PTR [eax]
  40ef4f:	fimul  WORD PTR [eax-0x7a]
  40ef52:	add    cl,ch
  40ef54:	sub    al,0x86
  40ef56:	pop    edi
  40ef57:	cli    
  40ef58:	sub    al,0xde
  40ef5a:	test   BYTE PTR [ecx],ch
  40ef5c:	and    al,0x62
  40ef5e:	fsub   st(1),st
  40ef60:	sub    al,0xde
  40ef62:	mov    ebp,DWORD PTR [ebp-0x1af41c0]
  40ef68:	aas    
  40ef69:	sub    dl,BYTE PTR [ebx]
  40ef6b:	test   eax,0x5c77082c
  40ef70:	mov    edi,0x2ce9c4be
  40ef75:	ficomp WORD PTR [eax-0x2f]
  40ef78:	fmul   DWORD PTR [ecx+0x1382e900]
  40ef7e:	mov    WORD PTR [ebp+0x0],ss
  40ef81:	add    BYTE PTR [edi],cl
  40ef83:	rcr    BYTE PTR [eax+0x0],cl
  40ef86:	jle    0x40efbe
  40ef88:	in     eax,dx
  40ef89:	add    BYTE PTR [esi+0x65],al
  40ef8c:	and    DWORD PTR [esi+eax*2],0x6e0000e1
  40ef93:	outs   dx,DWORD PTR ds:[esi]
  40ef94:	cld    
  40ef95:	dec    DWORD PTR [ecx+0x7244b5e7]
  40ef9b:	mov    esi,0x5ad10f50
  40efa0:	and    DWORD PTR [esi],esp
  40efa2:	in     ax,0xb5
  40efa5:	inc    esp
  40efa6:	repnz (bad) 
  40efa8:	push   eax
  40efa9:	mov    edx,eax
  40efab:	lods   eax,DWORD PTR ds:[esi]
  40efac:	mov    WORD PTR [edx+eiz*8+0x16ffffed],es
  40efb3:	scas   al,BYTE PTR es:[edi]
  40efb4:	mov    WORD PTR [edx+esi*1+0x6fffe2e],es
  40efbb:	scas   al,BYTE PTR es:[edi]
  40efbc:	addr16 ds mov ebp,0x9e247966
  40efc3:	add    eax,0x1469f640
  40efc8:	add    esp,0xffffffce
  40efcb:	pop    esi
  40efcc:	mov    ebp,0x4468947e
  40efd1:	or     BYTE PTR [ecx],bl
  40efd3:	int    0xfd
  40efd5:	jo     0x40efa9
  40efd7:	push   0x14d550c6
  40efdc:	push   edi
  40efdd:	push   0xffffffc4
  40efdf:	add    eax,0xdd96650d
  40efe4:	test   al,al
  40efe6:	add    BYTE PTR [eax],al
  40efe8:	and    bh,BYTE PTR [edx-0x27758a76]
  40efee:	cmc    
  40efef:	je     0x40efa5
  40eff1:	jg     0x40f02b
  40eff3:	add    ah,BYTE PTR ds:[esi-0x5dcdbb74]
  40effa:	dec    ebp
  40effb:	inc    DWORD PTR [ebx+0x2f401011]
  40f001:	xchg   ebx,ebp
  40f003:	pop    es
  40f004:	xlat   BYTE PTR ds:[ebx]
  40f005:	loop   0x40eff4
  40f007:	aas    
  40f008:	das    
  40f009:	adc    al,cl
  40f00b:	inc    ebx
  40f00c:	out    0xf6,eax
  40f00e:	ins    BYTE PTR es:[edi],dx
  40f00f:	jae    0x40f038
  40f011:	xchg   DWORD PTR [ecx],eax
  40f013:	xor    esi,DWORD PTR [esi+0x21]
  40f016:	mov    al,BYTE PTR [edi+0x37]
  40f019:	fld    DWORD PTR [ebp-0x7c20ec8d]
  40f01f:	(bad)  
  40f020:	xor    BYTE PTR [edi+0x25],bl
  40f023:	imul   DWORD PTR [eax]
  40f025:	push   0x7d9bbf80
  40f02a:	js     0x40f09f
  40f02c:	push   ebx
  40f02d:	mov    ebx,0xcb4b4386
  40f032:	ja     0x40f0a7
  40f034:	push   ebx
  40f035:	scas   eax,DWORD PTR es:[edi]
  40f036:	rcl    DWORD PTR [esi-0x6b],1
  40f039:	test   DWORD PTR [ecx-0x4c],ebp
  40f03c:	xchg   ebx,eax
  40f03d:	xchg   DWORD PTR [ecx],eax
  40f03f:	call   0xfeb92934
  40f044:	mov    ah,0x42
  40f046:	sbb    eax,0xdc418010
  40f04b:	mov    al,BYTE PTR [eax]
  40f04d:	add    dl,dl
  40f04f:	jns    0x40f094
  40f051:	or     ebp,DWORD PTR [edi]
  40f053:	cld    
  40f054:	add    al,0x83
  40f056:	mov    edi,0xc6aa0af0
  40f05c:	lock push es
  40f05e:	pop    edi
  40f05f:	clc    
  40f060:	or     eax,0x1471dc0
  40f065:	ret    
  40f066:	add    bh,ah
  40f068:	push   0x83de8b82
  40f06d:	jmp    0x40f09a
  40f06f:	je     0x40f05c
  40f071:	jmp    DWORD PTR [ebp+0x27448bee]
  40f077:	mov    ds:0xde00fe78,al
  40f07c:	out    0xd3,al
  40f07e:	jns    0x40f092
  40f080:	hlt    
  40f081:	in     eax,dx
  40f082:	jo     0x40f01b
  40f084:	pop    esp
  40f085:	adc    al,0x68
  40f087:	adc    bl,ah
  40f089:	js     0x40f066
  40f08b:	in     eax,0xc6
  40f08d:	push   cs
  40f08e:	pop    ds
  40f08f:	in     al,dx
  40f090:	daa    
  40f091:	add    al,0xac
  40f093:	xchg   ebp,eax
  40f094:	mov    dh,0xee
  40f096:	sub    al,0xcc
  40f098:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f099:	ins    BYTE PTR es:[edi],dx
  40f09a:	or     edx,DWORD PTR [ecx-0x21d0e3d4]
  40f0a0:	add    esp,DWORD PTR [bp+0x1bdc]
  40f0a5:	sbb    al,0xac
  40f0a7:	sub    al,ah
  40f0a9:	or     esp,DWORD PTR [eax]
  40f0ab:	pop    esp
  40f0ac:	xor    esp,DWORD PTR [eax]
  40f0ae:	sub    edx,DWORD PTR [edi+0xbf6c]
  40f0b4:	dec    esp
  40f0b5:	out    0x17,al
  40f0b7:	aam    0x78
  40f0b9:	add    al,0xe8
  40f0bb:	imul   edx,DWORD PTR [esi],0xffffffdd
  40f0be:	out    0x3,eax
  40f0c0:	mov    edi,0xb8cc2dd
  40f0c5:	cmp    ch,BYTE PTR [edx]
  40f0c7:	comiss xmm6,DWORD PTR [ecx]
  40f0ca:	arpl   WORD PTR [edi+0x7f],sp
  40f0cd:	sub    eax,0x2ee0be75
  40f0d2:	jae    0x40f092
  40f0d4:	sub    BYTE PTR [edi-0x39dc8709],dl
  40f0da:	fld    st(3)
  40f0dc:	shl    BYTE PTR [edx+0x27],0xee
  40f0e0:	sub    al,0xcc
  40f0e2:	daa    
  40f0e3:	ins    BYTE PTR es:[edi],dx
  40f0e4:	and    esp,DWORD PTR [ebx-0x54]
  40f0e7:	jnp    0x40f0a0
  40f0e9:	loopne 0x40f14d
  40f0eb:	mov    esi,0xffad65a4
  40f0f0:	enter  0x30dd,0x45
  40f0f4:	sub    al,0xde
  40f0f6:	add    BYTE PTR [ebx+edi*4+0x1dfd8183],bl
  40f0fd:	pop    ebx
  40f0fe:	arpl   bp,bx
  40f100:	xor    ebp,DWORD PTR [edi]
  40f102:	xor    ch,BYTE PTR [ecx+0x548bde85]
  40f108:	jmp    0x40f14d
  40f10a:	mov    esp,DWORD PTR [edi+ebx*8]
  40f10d:	es (bad) 
  40f10f:	cmp    al,0xdb
  40f111:	arpl   WORD PTR [ebx-0xf],ax
  40f114:	fst    DWORD PTR [ecx]
  40f116:	cmc    
  40f117:	mov    dh,0x0
  40f119:	add    BYTE PTR [ebx],al
  40f11b:	xchg   edi,eax
  40f11c:	adc    esp,DWORD PTR ds:0x6c011e1d
  40f122:	repz adc DWORD PTR ds:0xb83ecdb,eax
  40f129:	(bad)  
  40f12a:	out    dx,al
  40f12b:	mov    al,BYTE PTR [edi-0x6de4a19]
  40f131:	jo     0x40f10c
  40f133:	fidiv  DWORD PTR [eax-0x3d5a0618]
  40f139:	in     eax,dx
  40f13a:	sub    al,0x97
  40f13c:	je     0x40f103
  40f13e:	sub    BYTE PTR [ecx+eax*1],al
  40f141:	data16 (bad) 
  40f143:	mov    edx,0xbaff5e10
  40f148:	adc    BYTE PTR [esi+0x23],dl
  40f14b:	xchg   edi,eax
  40f14c:	adc    esp,DWORD PTR [ebp+0x3e011e3e]
  40f152:	jnp    0x40f148
  40f154:	shl    BYTE PTR [esi],0x73
  40f157:	popf   
  40f158:	or     al,0xe9
  40f15a:	fbld   TBYTE PTR [ebx-0x14]
  40f15d:	ret    
  40f15e:	sub    al,0x69
  40f160:	inc    ebx
  40f161:	stc    
  40f162:	fcom   QWORD PTR [edi+0x21a5f973]
  40f168:	or     DWORD PTR [esi],edx
  40f16a:	sahf   
  40f16b:	loop   0x40f16a
  40f16d:	fstp   DWORD PTR [ecx]
  40f16f:	repnz xor al,0x0
  40f172:	je     0x40f10e
  40f174:	std    
  40f175:	test   BYTE PTR [esi-0x73],al
  40f178:	add    al,0x83
  40f17a:	dec    esi
  40f17b:	por    mm0,QWORD PTR [ebx]
  40f17e:	add    BYTE PTR [eax],al
  40f180:	or     eax,0xc45d0d9d
  40f185:	fiadd  WORD PTR [eax]
  40f187:	push   ebx
  40f188:	adc    eax,0x961d3633
  40f18d:	xor    BYTE PTR [ebx+0x0],al
  40f190:	sti    
  40f191:	(bad)  
  40f192:	push   esi
  40f193:	mov    esi,0x432f46
  40f198:	cmp    BYTE PTR [edi],cl
  40f19a:	adc    eax,0xfd9a64a4
  40f19f:	aaa    
  40f1a0:	jae    0x40f1bc
  40f1a2:	fadd   QWORD PTR [ebx+0x46]
  40f1a5:	lea    ebx,[eax]
  40f1a7:	mov    DWORD PTR [ebx],esi
  40f1a9:	not    dh
  40f1ab:	inc    ebx
  40f1ac:	push   ss
  40f1ad:	arpl   WORD PTR [esp+edi*8],bx
  40f1b0:	fisub  DWORD PTR [eax-0x29ec7703]
  40f1b6:	fild   DWORD PTR [ebx+0x6]
  40f1b9:	aam    0x4
  40f1bb:	shl    BYTE PTR [eax+0x1800fda0],0xd
  40f1c2:	adc    eax,0xfda1f4ac
  40f1c7:	pop    ebp
  40f1c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1c9:	or     eax,0xd8d643d2
  40f1ce:	shl    DWORD PTR [ebp+0x2e],0x82
  40f1d2:	icebp  
  40f1d3:	dec    edi
  40f1d4:	xchg   cl,ah
  40f1d6:	std    
  40f1d7:	adc    eax,0x40ef72
  40f1dc:	mov    ebp,0xee157220
  40f1e1:	shl    DWORD PTR [ebx+0x40],1
  40f1e4:	add    BYTE PTR [eax],al
  40f1e6:	(bad)  
  40f1e7:	mov    cl,0xfe
  40f1e9:	adc    eax,0x40ef1a
  40f1ee:	das    
  40f1ef:	sub    BYTE PTR [esi-0x2d],dh
  40f1f2:	in     al,dx
  40f1f3:	xchg   BYTE PTR [edx],bh
  40f1f5:	ret    
  40f1f6:	and    al,BYTE PTR [ebx-0x557b3fd1]
  40f1fc:	mov    cl,BYTE PTR [ebx+0x53]
  40f1ff:	jg     0x40f1e8
  40f201:	daa    
  40f202:	or     BYTE PTR [ebx],0x1e
  40f205:	adc    ah,bl
  40f207:	jnp    0x40f23a
  40f209:	call   FWORD PTR [edi-0x54]
  40f20c:	pop    esp
  40f20d:	sbb    ch,BYTE PTR [edi-0x4c]
  40f210:	pop    esp
  40f211:	pop    edx
  40f212:	ins    DWORD PTR es:[edi],dx
  40f213:	jg     0x40f216
  40f215:	push   ebx
  40f216:	sbb    al,0x40
  40f218:	cmp    al,0x1d
  40f21a:	outs   dx,DWORD PTR ds:[esi]
  40f21b:	jne    0x40f1dc
  40f21d:	inc    ebx
  40f21f:	xchg   esp,eax
  40f220:	retf   
  40f221:	mov    ebp,0xffbf642f
  40f226:	loop   0x40f263
  40f228:	or     eax,0x4c71da4
  40f22d:	cmp    BYTE PTR [edx+0x47],cl
  40f230:	push   esi
  40f231:	inc    edx
  40f232:	das    
  40f233:	jmp    0x424b:0xa33a8919
  40f23a:	das    
  40f23b:	push   cs
  40f23c:	push   ss
  40f23d:	cld    
  40f23e:	jecxz  0x40f207
  40f240:	add    al,0x89
  40f242:	and    bh,BYTE PTR [ebx]
  40f244:	push   esi
  40f245:	inc    edx
  40f246:	das    
  40f247:	(bad)  
  40f24a:	add    BYTE PTR [eax],al
  40f24c:	rol    DWORD PTR [edi+0x1],1
  40f24f:	add    DWORD PTR [ecx+0x3dac0e2c],eax
  40f255:	inc    edi
  40f256:	add    DWORD PTR [esi-0x72],ebx
  40f259:	loop   0x40f2a9
  40f25b:	inc    edx
  40f25c:	das    
  40f25d:	loopne 0x40f29e
  40f25f:	je     0x40f278
  40f261:	lahf   
  40f262:	ins    DWORD PTR es:[edi],dx
  40f263:	dec    esi
  40f264:	outs   dx,DWORD PTR ds:[esi]
  40f265:	xchg   DWORD PTR [esp+edx*1-0x65],esi
  40f269:	(bad)  
  40f26b:	ret    
  40f26c:	mov    al,0xd7
  40f26e:	sub    dh,al
  40f270:	inc    ebx
  40f271:	push   es
  40f272:	mov    eax,0xb7de60ee
  40f277:	je     0x40f2bc
  40f279:	mov    bl,cl
  40f27b:	ret    
  40f27c:	nop
  40f27d:	aas    
  40f27e:	ret    
  40f27f:	dec    ebp
  40f280:	in     eax,dx
  40f281:	fnsave [edx-0x462604c0]
  40f287:	inc    ebx
  40f288:	test   edx,ebp
  40f28a:	jb     0x40f253
  40f28c:	dec    esp
  40f28d:	out    0x51,al
  40f28f:	sub    al,0x68
  40f291:	or     DWORD PTR [esp+edx*1],ecx
  40f294:	cld    
  40f295:	xchg   esp,eax
  40f296:	sbb    BYTE PTR [ebp+0x68],dh
  40f299:	mov    WORD PTR [edi-0x607390e8],ds
  40f29f:	fsubr  DWORD PTR [esi-0x1b]
  40f2a2:	out    0xce,eax
  40f2a4:	mov    ch,0x81
  40f2a6:	push   0x67
  40f2a8:	add    al,0x2c
  40f2aa:	aas    
  40f2ab:	mov    DWORD PTR [ebx+0x7372ed],esi
  40f2b1:	add    BYTE PTR [ebx+0x8df1b93],dh
  40f2b7:	jle    0x40f23e
  40f2b9:	je     0x40f2d4
  40f2bb:	shr    ebx,cl
  40f2bd:	icebp  
  40f2be:	je     0x40f321
  40f2c0:	and    al,0x50
  40f2c2:	js     0x40f2f0
  40f2c4:	cmp    BYTE PTR ds:0x7f6e9402,0xb8
  40f2cb:	or     esp,ebp
  40f2cd:	xor    edi,ebp
  40f2cf:	xchg   edx,esp
  40f2d1:	sub    BYTE PTR [ebx-0x1a],0xe7
  40f2d5:	mov    BYTE PTR [ebx],bl
  40f2d7:	and    dh,dh
  40f2d9:	ret    
  40f2da:	fadd   DWORD PTR ds:0xe15cd4f0
  40f2e0:	xchg   esi,eax
  40f2e1:	xchg   BYTE PTR [ebx-0x56],dh
  40f2e4:	add    BYTE PTR [ecx+0x2e090a3b],bl
  40f2ea:	push   0x60
  40f2ec:	(bad)  
  40f2ed:	cmc    
  40f2ee:	scas   eax,DWORD PTR es:[edi]
  40f2ef:	adc    cl,BYTE PTR ds:0x55e298e9
  40f2f5:	fs loope 0x40f2af
  40f2f8:	push   eax
  40f2f9:	push   cs
  40f2fa:	mov    edi,esp
  40f2fc:	std    
  40f2fd:	pop    ds
  40f2fe:	scas   eax,DWORD PTR es:[edi]
  40f2ff:	lahf   
  40f300:	or     al,0x64
  40f302:	out    0xe,eax
  40f304:	or     bl,BYTE PTR [esi-0x661ae557]
  40f30a:	pop    edi
  40f30b:	xchg   esp,eax
  40f30c:	(bad)  
  40f30d:	push   0xffffffe7
  40f30f:	out    0x55,al
  40f311:	ins    BYTE PTR es:[edi],dx
  40f312:	jbe    0x40f29b
  40f314:	push   eax
  40f315:	(bad)  
  40f316:	add    BYTE PTR [eax],al
  40f318:	data16 jecxz 0x40f318
  40f31b:	mov    bh,0xf8
  40f31d:	mov    BYTE PTR [ebx+0xd9bd0a2],0x24
  40f324:	lock and bh,dh
  40f327:	cmp    al,0x2f
  40f329:	xchg   ebx,eax
  40f32a:	jae    0x40f30d
  40f32c:	mov    ebp,0xcfcfdc8
  40f331:	lock inc eax
  40f333:	jmp    0x71b545ef
  40f338:	mov    dh,0x93
  40f33a:	je     0x40f334
  40f33c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f33d:	mov    bh,0x74
  40f33f:	hlt    
  40f340:	repnz ficom DWORD PTR [ecx+0x16]
  40f344:	jl     0x40f330
  40f346:	dec    esp
  40f347:	fucomip st,st(4)
  40f349:	xchg   edx,eax
  40f34a:	and    BYTE PTR [ebp-0x3a00b1d1],0xde
  40f351:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f352:	ret    0x2ced
  40f355:	sub    DWORD PTR [edx-0x1d005bb],ecx
  40f35b:	aam    0xd4
  40f35d:	xchg   ebx,eax
  40f35e:	adc    eax,DWORD PTR [eax]
  40f360:	cs in  al,dx
  40f362:	inc    eax
  40f363:	add    BYTE PTR [ebp+0x2],dl
  40f366:	push   DWORD PTR [edx+ecx*4+0x5b]
  40f36a:	dec    esp
  40f36b:	cld    
  40f36c:	or     DWORD PTR [ebx-0x23],ebx
  40f36f:	adc    BYTE PTR [edi],al
  40f371:	cli    
  40f372:	adc    al,0x50
  40f374:	mov    esp,0xae076adb
  40f379:	fiadd  WORD PTR [eax]
  40f37b:	add    BYTE PTR [eax],al
  40f37d:	add    BYTE PTR [esi],al
  40f37f:	pcmpeqw mm1,QWORD PTR [eax]
  40f382:	sbb    esp,DWORD PTR [ebp+0x285e8f9]
  40f388:	(bad)  
  40f389:	call   DWORD PTR [edx]
  40f38b:	sbb    dh,BYTE PTR [edx+0x21]
  40f38e:	lods   al,BYTE PTR ds:[esi]
  40f38f:	fisubr WORD PTR [edx+0x0]
  40f392:	mov    DWORD PTR [ebp+0x5d6d3309],edx
  40f398:	inc    esp
  40f399:	cld    
  40f39a:	outs   dx,BYTE PTR ds:[esi]
  40f39b:	xchg   edx,eax
  40f39c:	(bad)  
  40f39d:	jmp    FWORD PTR [ecx+0x5a]
  40f3a0:	mov    ebp,0x445d5a74
  40f3a5:	cld    
  40f3a6:	pop    esi
  40f3a7:	dec    edi
  40f3a8:	stc    
  40f3a9:	(bad)  
  40f3aa:	jns    0x40f3fa
  40f3ac:	add    bl,ch
  40f3ae:	dec    esp
  40f3af:	pop    ebp
  40f3b0:	inc    esp
  40f3b1:	cld    
  40f3b2:	sahf   
  40f3b3:	dec    ebx
  40f3b4:	stc    
  40f3b5:	dec    ecx
  40f3b7:	retf   
  40f3b8:	rcr    BYTE PTR [ebx-0x31],0x1b
  40f3bc:	push   es
  40f3bd:	add    BYTE PTR [ebx+0x11],ah
  40f3c0:	jmp    0xfaec:0x8305a283
  40f3c7:	pop    eax
  40f3c8:	jl     0x40f3de
  40f3ca:	push   ss
  40f3cb:	mov    eax,0x1cae7971
  40f3d0:	in     eax,0xff
  40f3d2:	mov    ecx,eax
  40f3d4:	add    al,0x72
  40f3d6:	push   es
  40f3d7:	pop    edi
  40f3d8:	inc    ecx
  40f3d9:	and    al,0x2f
  40f3db:	jg     0x40f3ae
  40f3dd:	push   edx
  40f3de:	(bad)  
  40f3df:	je     0x40f451
  40f3e1:	inc    BYTE PTR [eax]
  40f3e3:	add    al,dl
  40f3e5:	add    eax,DWORD PTR [edx+0x73]
  40f3e8:	inc    edi
  40f3e9:	add    al,0xf1
  40f3eb:	pop    es
  40f3ec:	das    
  40f3ed:	cld    
  40f3ee:	cmp    BYTE PTR [ecx+eiz*1+0x47],cl
  40f3f2:	add    DWORD PTR [eax+eiz*1+0x6d],esi
  40f3f6:	stc    
  40f3f7:	(bad)  
  40f3f8:	and    cl,BYTE PTR [edi-0x68b4bc80]
  40f3fe:	sar    esi,1
  40f400:	add    DWORD PTR [esi+eax*2],0xfd5aac0b
  40f407:	(bad)  
  40f408:	cld    
  40f409:	jg     0x40f3e6
  40f40b:	pop    es
  40f40c:	adc    BYTE PTR [edx],0xfe
  40f40f:	mov    ebx,?
  40f411:	call   0xc383:0x51705009
  40f418:	cmp    eax,DWORD PTR [esi+ebp*8]
  40f41b:	comiss xmm6,DWORD PTR [ebx]
  40f41e:	add    BYTE PTR [edx+0x27],ch
  40f421:	mov    al,ds:0xc3a20ff5
  40f426:	sub    BYTE PTR [eax],ah
  40f428:	fisttp WORD PTR [edi+0x5a]
  40f42b:	sub    BYTE PTR [ebx+0x7b],0xdb
  40f42f:	pop    es
  40f430:	cmp    dl,cl
  40f432:	sbb    BYTE PTR [ebp+0x5019a2eb],cl
  40f438:	sub    BYTE PTR [ecx-0x7d],cl
  40f43b:	ret    
  40f43c:	xor    edi,edx
  40f43e:	enter  0x2723,0xd7
  40f442:	shl    edi,cl
  40f444:	hlt    
  40f445:	pop    ecx
  40f446:	outs   dx,DWORD PTR ds:[esi]
  40f447:	inc    BYTE PTR [eax]
  40f449:	add    BYTE PTR [eax+ebp*4],dl
  40f44c:	jo     0x40f4c2
  40f44e:	pop    ds
  40f44f:	or     dh,dh
  40f451:	or     edi,eax
  40f453:	mov    ecx,edi
  40f455:	(bad)  
  40f456:	cmp    al,0xde
  40f458:	popw   ss
  40f45a:	outs   dx,DWORD PTR ds:[esi]
  40f45b:	in     al,dx
  40f45c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f45d:	add    ebx,eax
  40f45f:	mov    ch,0xf2
  40f461:	inc    ebx
  40f462:	loope  0x40f419
  40f464:	lods   eax,DWORD PTR ds:[esi]
  40f465:	jl     0x40f432
  40f467:	xor    ch,BYTE PTR [edx]
  40f469:	adc    al,0x2f
  40f46b:	push   es
  40f46c:	push   0x36de2f04
  40f471:	clc    
  40f472:	or     al,0xe6
  40f474:	cs pop ss
  40f476:	(bad)  
  40f477:	jmp    0x40f420
  40f479:	add    ebp,DWORD PTR [eax-0x5ff83bf7]
  40f47f:	jmp    0x4c16:0xddef15f3
  40f486:	xor    eax,0x6e4bfe9e
  40f48b:	(bad)  
  40f48d:	(bad)  
  40f48e:	mov    ch,0x81
  40f490:	push   0x60
  40f492:	sbb    al,0x5d
  40f494:	pushf  
  40f495:	outs   dx,DWORD PTR ds:[esi]
  40f496:	jno    0x40f4c4
  40f498:	ds fsub st(0),st
  40f49b:	fucom  st(7)
  40f49d:	add    edx,ebp
  40f49f:	fadd   QWORD PTR [ecx+0x5]
  40f4a2:	(bad)  
  40f4a3:	fucom  st(7)
  40f4a5:	add    ebp,DWORD PTR [edi-0x4403c370]
  40f4ab:	sbb    bh,BYTE PTR [ebx+ebx*2-0x6ba10000]
  40f4b2:	mov    dh,0x70
  40f4b4:	lods   al,BYTE PTR ds:[esi]
  40f4b5:	popf   
  40f4b6:	xor    esp,esp
  40f4b8:	mov    ds:0xbbd3a41a,eax
  40f4bd:	or     DWORD PTR [eax-0x696db0a5],ebx
  40f4c3:	jo     0x40f471
  40f4c5:	sahf   
  40f4c6:	adc    edx,esp
  40f4c8:	pop    ebp
  40f4c9:	mov    bl,0xc0
  40f4cb:	into   
  40f4cc:	cld    
  40f4cd:	pop    es
  40f4ce:	xor    DWORD PTR [ebp+0x7b],edi
  40f4d1:	mov    es,WORD PTR [eax]
  40f4d3:	sti    
  40f4d4:	stc    
  40f4d5:	pop    esi
  40f4d6:	(bad)  
  40f4d7:	jmp    0xde413308
  40f4dc:	sbb    ch,dl
  40f4de:	pop    ebx
  40f4df:	push   ebp
  40f4e0:	out    0xdb,eax
  40f4e2:	cmp    DWORD PTR [edx-0x2a],ebx
  40f4e5:	sbb    al,0x57
  40f4e7:	inc    ecx
  40f4e8:	int    0xdc
  40f4ea:	add    cl,ch
  40f4ec:	inc    ebp
  40f4ed:	fdivr  DWORD PTR [ecx]
  40f4ef:	sub    bh,BYTE PTR [eax+0x796451b8]
  40f4f5:	xlat   BYTE PTR ds:[ebx]
  40f4f6:	dec    edi
  40f4f7:	xchg   edi,eax
  40f4f8:	fcom   QWORD PTR [eax-0x15e0da8d]
  40f4fe:	xor    al,0xfb
  40f500:	ins    BYTE PTR es:[edi],dx
  40f501:	pop    DWORD PTR [ecx+ebp*1-0x5b761c60]
  40f508:	xchg   esp,eax
  40f509:	aam    0xc6
  40f50b:	jl     0x40f53e
  40f50d:	gs inc ebp
  40f50f:	in     eax,0xe3
  40f511:	repnz std 
  40f513:	mov    esi,0x2ad40000
  40f518:	add    ch,cl
  40f51a:	sub    al,0x61
  40f51c:	inc    ebx
  40f51d:	in     eax,0xb
  40f51f:	sub    eax,0xccd0defa
  40f524:	shl    BYTE PTR [edi],0x64
  40f527:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f528:	ret    0x2ce5
  40f52b:	gs sbb eax,0x8bdb7870
  40f531:	and    al,0xbf
  40f533:	jbe    0x40f570
  40f535:	mov    dl,0xc8
  40f537:	(bad)  
  40f538:	mov    al,0xe8
  40f53a:	aad    0x85
  40f53c:	and    DWORD PTR [esi+0x6a040c53],0xe2771190
  40f546:	scas   eax,DWORD PTR es:[edi]
  40f547:	push   edi
  40f548:	pusha  
  40f549:	mov    es,WORD PTR [eax-0x51ff7e70]
  40f54f:	sahf   
  40f550:	jbe    0x40f556
  40f552:	sub    BYTE PTR [ebx],dl
  40f554:	mov    ebx,0x25178d
  40f55a:	push   es
  40f55b:	(bad)  
  40f55d:	cmp    eax,0x100dad6
  40f562:	cli    
  40f563:	xor    BYTE PTR [ebx+esi*1+0x78],dl
  40f567:	inc    ecx
  40f568:	push   es
  40f569:	add    eax,esi
  40f56b:	fimul  DWORD PTR [ebx+0x2a61c704]
  40f571:	ret    0x227
  40f574:	movzx  ebx,dx
  40f577:	gs mov ebp,0x86000060
  40f57d:	fidivr DWORD PTR [ecx]
  40f57f:	xlat   BYTE PTR ds:[ebx]
  40f580:	(bad)
  40f583:	jo     0x40f51c
  40f585:	xor    eax,DWORD PTR ds:0x455d8d76
  40f58b:	(bad)  
  40f58c:	jge    0x40f55e
  40f58e:	jl     0x40f56e
  40f590:	lds    ebx,FWORD PTR [edx]
  40f592:	pop    esp
  40f593:	ret    
  40f594:	test   al,0x13
  40f596:	add    al,BYTE PTR [ebp+0x3d7a44]
  40f59c:	mov    al,ds:0x828b551b
  40f5a1:	test   eax,0x2dd5752
  40f5a6:	xor    eax,eax
  40f5a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5aa:	or     DWORD PTR [edi],ecx
  40f5ac:	fistp  DWORD PTR [edx]
  40f5ae:	inc    esi
  40f5af:	and    eax,0xc000da56
  40f5b4:	mov    edi,0x8632f9a5
  40f5b9:	(bad)  
  40f5ba:	mov    bl,0xc8
  40f5bc:	aas    
  40f5bd:	mov    esi,0xa242e0cb
  40f5c2:	std    
  40f5c3:	jae    0x40f624
  40f5c5:	cld    
  40f5c6:	mov    ebp,0xf2cf2f3c
  40f5cb:	in     eax,dx
  40f5cc:	pop    esp
  40f5cd:	push   eax
  40f5ce:	jecxz  0x40f554
  40f5d0:	in     al,0x94
  40f5d2:	test   DWORD PTR [edi-0xfe88d1],ecx
  40f5d8:	add    BYTE PTR [ebx+0x6da4c277],0x59
  40f5df:	inc    ebx
  40f5e0:	add    BYTE PTR [eax],al
  40f5e2:	pop    edi
  40f5e3:	jbe    0x40f5e6
  40f5e5:	setns  BYTE PTR [eax]
  40f5e8:	fdivr  st,st(7)
  40f5ea:	xor    DWORD PTR [ecx+ebx*1],0x1373a58
  40f5f1:	test   edi,ebp
  40f5f3:	dec    ebx
  40f5f4:	cld    
  40f5f5:	push   cs
  40f5f6:	jns    0x40f5af
  40f5f8:	inc    esp
  40f5f9:	fistp  WORD PTR [edi]
  40f5fb:	jle    0x40f5c5
  40f5fd:	sti    
  40f5fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5ff:	inc    ebp
  40f600:	adc    esi,esi
  40f602:	out    dx,eax
  40f603:	mov    BYTE PTR [ecx-0x3e0aa98d],al
  40f609:	adc    BYTE PTR [edi+0x2eb0226a],ch
  40f60f:	loopne 0x40f635
  40f611:	xadd   DWORD PTR [edi-0x3dcc4a02],esi
  40f618:	push   0xfe76ef6b
  40f61d:	mov    ch,0x2b
  40f61f:	ret    0x6b65
  40f622:	out    dx,eax
  40f623:	jbe    0x40f608
  40f625:	ror    BYTE PTR [esi-0x71],0xe3
  40f629:	or     ah,BYTE PTR [edi-0x7c]
  40f62c:	mov    ah,0xd8
  40f62e:	inc    esp
  40f62f:	push   edi
  40f630:	xor    al,al
  40f632:	cld    
  40f633:	dec    ebp
  40f634:	sub    al,0x4d
  40f636:	xor    edx,ebx
  40f638:	inc    BYTE PTR [ebx-0x3f697b91]
  40f63e:	mov    ds:0x2fff7e83,al
  40f643:	fsubrp st(7),st
  40f645:	add    eax,DWORD PTR [eax]
  40f647:	add    BYTE PTR [edx+ebx*8],dl
  40f64a:	arpl   WORD PTR [ecx+ebp*1+0x73],ax
  40f64e:	test   al,0x7f
  40f650:	sub    al,0x5b
  40f652:	call   0x871f2559
  40f657:	test   DWORD PTR [esi*1-0x297c92e8],0xf35b1776
  40f662:	daa    
  40f663:	add    al,0xe0
  40f665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f666:	add    al,BYTE PTR [ecx+ebx*8-0x5b]
  40f66a:	push   edx
  40f66b:	xor    al,0xaf
  40f66d:	or     ah,ah
  40f66f:	add    ebx,DWORD PTR [ebx-0x4a]
  40f672:	aas    
  40f673:	ds retf 0x468c
  40f677:	std    
  40f678:	jns    0x40f617
  40f67a:	lds    eax,FWORD PTR [esi+0x78d31178]
  40f680:	(bad)  
  40f681:	out    dx,al
  40f682:	xor    eax,0x9b5e3ec3
  40f687:	add    al,0xae
  40f689:	sbb    bl,BYTE PTR [esp+eax*1]
  40f68c:	das    
  40f68d:	faddp  st(7),st
  40f68f:	ins    BYTE PTR es:[edi],dx
  40f690:	sbb    ecx,DWORD PTR [edx-0x20d12449]
  40f696:	out    0x3,eax
  40f698:	xchg   esp,eax
  40f699:	sahf   
  40f69a:	mov    ecx,0x2128d943
  40f69f:	inc    edx
  40f6a0:	sub    dh,bl
  40f6a2:	(bad)  
  40f6a3:	(bad)  
  40f6a4:	xor    al,0x63
  40f6a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6a7:	imul   DWORD PTR [ecx]
  40f6a9:	fist   WORD PTR cs:[esi]
  40f6ac:	add    BYTE PTR [eax],al
  40f6ae:	adc    ebp,esi
  40f6b0:	daa    
  40f6b1:	add    al,0xa4
  40f6b3:	mov    ds:0xde5cc9c0,eax
  40f6b8:	out    0xd5,eax
  40f6ba:	mov    ch,0x8d
  40f6bc:	iret   
  40f6bd:	dec    eax
  40f6be:	pop    ebp
  40f6bf:	fiadd  WORD PTR [eax]
  40f6c1:	jmp    0xf2b5436e
  40f6c6:	add    ebx,DWORD PTR [ebx+0x7e]
  40f6c9:	cmc    
  40f6ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6cb:	in     al,0x83
  40f6cd:	test   eax,0x9650e520
  40f6d2:	cmp    edx,eax
  40f6d4:	adc    BYTE PTR [ecx],ch
  40f6d6:	xor    ebx,DWORD PTR [edi+0x7c]
  40f6d9:	int    0x0
  40f6db:	mov    WORD PTR [ecx-0x37],?
  40f6de:	jecxz  0x40f6d5
  40f6e0:	add    BYTE PTR [ebx],al
  40f6e2:	sub    esi,esi
  40f6e4:	adc    al,0xe8
  40f6e6:	sub    al,0xde
  40f6e8:	std    
  40f6e9:	fisttp QWORD PTR [eax]
  40f6eb:	jmp    0xf920:0xf24a17fd
  40f6f2:	in     al,dx
  40f6f3:	mov    eax,DWORD PTR [ecx+ebp*1-0x11e01e3f]
  40f6fa:	(bad)  
  40f6fb:	popf   
  40f6fc:	jmp    0x5e1f73ec
  40f701:	xchg   edi,eax
  40f702:	outs   dx,BYTE PTR ds:[esi]
  40f703:	fild   WORD PTR [eax]
  40f705:	xchg   esp,eax
  40f706:	daa    
  40f707:	ja     0x40f758
  40f709:	mov    eax,0x260ccb27
  40f70e:	jno    0x40f697
  40f710:	add    al,0xe9
  40f712:	add    BYTE PTR [eax],al
  40f714:	sub    al,0xde
  40f716:	sub    DWORD PTR [ecx],0xffffff80
  40f719:	mov    edi,0x1a01e96a
  40f71e:	std    
  40f71f:	cwde   
  40f720:	stc    
  40f721:	sbb    ecx,edi
  40f723:	cwde   
  40f724:	push   esi
  40f725:	(bad)  
  40f726:	push   eax
  40f727:	out    dx,al
  40f728:	inc    edx
  40f729:	jmp    0x55c0:0x612b2910
  40f730:	push   esi
  40f731:	pusha  
  40f732:	jnp    0x40f709
  40f734:	das    
  40f735:	adc    DWORD PTR [esi],eax
  40f737:	bound  ebp,QWORD PTR [esi-0x6d]
  40f73a:	test   al,0x0
  40f73c:	push   ecx
  40f73d:	jnp    0x40f73e
  40f73f:	xor    al,BYTE PTR [esi+0x41e28259]
  40f745:	in     al,0xc2
  40f747:	rcr    esi,0xe2
  40f74a:	mov    ebx,0x53ea0b63
  40f750:	popf   
  40f751:	sbb    cl,BYTE PTR [ebx-0x1995139]
  40f757:	(bad)  
  40f758:	mov    ecx,0x1274d8ba
  40f75d:	rol    eax,1
  40f75f:	jmp    0x40f781
  40f761:	mov    al,0x52
  40f763:	push   ebx
  40f765:	xchg   ch,ah
  40f767:	adc    edi,0x868b00de
  40f76d:	pop    ebp
  40f76e:	repz jne 0x40f743
  40f771:	rol    al,1
  40f773:	jmp    0x40f6fc
  40f775:	add    eax,0x1e42
  40f77a:	jns    0x40f787
  40f77c:	int3   
  40f77d:	cmp    eax,DWORD PTR [esi]
  40f77f:	xchg   ebx,eax
  40f780:	adc    DWORD PTR [edx+0xb5506d7],ecx
  40f786:	dec    esp
  40f787:	repnz mov BYTE PTR [ecx],dl
  40f78a:	or     al,0xad
  40f78c:	or     al,BYTE PTR [ecx+0x1e]
  40f78f:	repnz dec eax
  40f791:	cmp    ebx,DWORD PTR [esi-0x6c]
  40f794:	jmp    0xfde97e03
  40f799:	(bad)  
  40f79a:	mov    eax,ds:0x29565292
  40f79f:	pop    DWORD PTR [ecx]
  40f7a1:	jmp    DWORD PTR [ebx-0x2a]
  40f7a4:	adc    BYTE PTR [eax-0x7a],al
  40f7a7:	add    eax,0x1b61ff56
  40f7ac:	sbb    bl,bl
  40f7ae:	and    al,bh
  40f7b0:	ret    0x9ce8
  40f7b3:	fiadd  WORD PTR [eax]
  40f7b5:	add    BYTE PTR [edi],ch
  40f7b7:	inc    DWORD PTR [esi+0x5d]
  40f7ba:	in     al,0xb9
  40f7bc:	inc    esi
  40f7bd:	add    ebp,DWORD PTR [edi]
  40f7bf:	cli    
  40f7c0:	cmp    al,0x74
  40f7c2:	sub    ecx,DWORD PTR [edi+ebp*1-0x18]
  40f7c6:	js     0x40f83c
  40f7c8:	add    DWORD PTR [eax],eax
  40f7ca:	lods   al,BYTE PTR ds:[esi]
  40f7cb:	loope  0x40f7d1
  40f7cd:	jmp    0x40f82c
  40f7cf:	or     al,0x0
  40f7d1:	sub    esi,0xffffff83
  40f7d4:	aam    0x84
  40f7d6:	out    dx,eax
  40f7d7:	jmp    0x2830:0x58376a14
  40f7de:	add    BYTE PTR [eax],al
  40f7e0:	fnstenv [esp+eax*1+0x16db22ff]
  40f7e7:	inc    eax
  40f7e8:	das    
  40f7e9:	pop    esp
  40f7ea:	cli    
  40f7eb:	dec    edi
  40f7ec:	push   ebp
  40f7ed:	jg     0x40f859
  40f7ef:	xor    al,0x17
  40f7f1:	leave  
  40f7f2:	(bad)  
  40f7f3:	(bad)  
  40f7f4:	fst    DWORD PTR [edx+0x776f120d]
  40f7fa:	cmp    BYTE PTR [edi-0x3fcc8bbe],0xec
  40f801:	push   cs
  40f802:	add    BYTE PTR [eax+0x7b86b42e],dh
  40f808:	or     edi,DWORD PTR [ebx+0x1]
  40f80b:	jne    0x40f848
  40f80d:	mov    eax,0x7710e82f
  40f812:	add    DWORD PTR [eax],eax
  40f814:	lods   al,BYTE PTR ds:[esi]
  40f815:	mov    eax,ds:0xfc5deb01
  40f81a:	(bad)  
  40f81b:	inc    BYTE PTR [ebx]
  40f81d:	mov    ds:0xa6f84fd,eax
  40f822:	sti    
  40f823:	dec    edi
  40f824:	js     0x40f878
  40f826:	sbb    esi,edx
  40f828:	in     al,dx
  40f829:	jbe    0x40f895
  40f82b:	adc    al,0xdb
  40f82d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f82e:	sar    edi,0x55
  40f831:	fdivrp st(6),st
  40f833:	rol    esi,cl
  40f835:	fstp   st(6)
  40f837:	das    
  40f838:	pop    es
  40f839:	mov    al,0x2a
  40f83b:	add    al,0x48
  40f83d:	repz repz adc eax,0x446cddef
  40f844:	add    BYTE PTR [eax],al
  40f846:	ret    
  40f847:	loope  0x40f842
  40f849:	inc    ebx
  40f84a:	inc    ebp
  40f84b:	loop   0x40f8ad
  40f84d:	add    bl,bh
  40f84f:	fisubr WORD PTR [ecx-0x58a2d100]
  40f855:	add    BYTE PTR [edi-0xc],bh
  40f858:	out    dx,eax
  40f859:	push   0xc5bdb65b
  40f85e:	or     BYTE PTR [eax+0x1e1ed7f4],cl
  40f864:	call   0xc44aa5ad
  40f869:	push   eax
  40f86b:	adc    esp,ebp
  40f86d:	xor    al,0xef
  40f86f:	je     0x40f84a
  40f871:	push   0xddebc25c
  40f876:	fadd   DWORD PTR [edi+0x1cf91c14]
  40f87c:	call   0xfa3b1be9
  40f881:	ret    
  40f882:	rcr    BYTE PTR [esi+0x9ac03eb],0x4
  40f889:	add    BYTE PTR [edi],ch
  40f88b:	adc    bl,dl
  40f88d:	push   0xdde3c21c
  40f892:	mov    al,ds:0x811bdc87
  40f897:	sbb    al,0xe8
  40f899:	push   0xc3f9da3b
  40f89e:	mov    BYTE PTR [esi+0x54d903e3],bl
  40f8a4:	idiv   DWORD PTR [esi+0x79]
  40f8a7:	adc    edi,edx
  40f8a9:	jle    0x40f8ab
  40f8ab:	add    BYTE PTR [edx+0x11],bh
  40f8ae:	add    edx,ebx
  40f8b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8b1:	xchg   DWORD PTR [esi+esi*1],esi
  40f8b4:	add    ebx,DWORD PTR [ecx+0x61c7e6fd]
  40f8ba:	not    BYTE PTR [edx+ebx*8+0x2f]
  40f8be:	jmp    0xfdc8d072
  40f8c3:	das    
  40f8c4:	jmp    0x250c:0xba185632
  40f8cb:	aad    0xb3
  40f8cd:	add    al,0x25
  40f8cf:	fldcw  WORD PTR [ebx-0x642edaed]
  40f8d5:	cmp    edx,DWORD PTR [edi+0x46]
  40f8d8:	in     eax,0x9d
  40f8da:	or     al,0xe9
  40f8dc:	xchg   ecx,eax
  40f8dd:	xchg   esi,eax
  40f8de:	je     0x40f8dd
  40f8e0:	ficom  WORD PTR [esp+esi*2-0x3b]
  40f8e4:	add    al,0x5b
  40f8e6:	add    al,0xf3
  40f8e8:	sbb    ecx,DWORD PTR [eax+ecx*2+0x6eb7130]
  40f8ef:	popa   
  40f8f0:	cmp    al,0x11
  40f8f2:	test   BYTE PTR [edi],0x69
  40f8f5:	fild   DWORD PTR [eax]
  40f8f7:	mov    edi,0xed250b47
  40f8fc:	je     0x40f8fd
  40f8fe:	std    
  40f8ff:	push   esi
  40f900:	push   edi
  40f901:	push   esp
  40f902:	lock fs or edx,DWORD PTR ds:[ebx]
  40f907:	inc    esi
  40f908:	enter  0xcbb,0x3e
  40f90c:	sar    BYTE PTR [ebx+0x9f0c],0x17
  40f913:	repnz dec esp
  40f915:	xlat   BYTE PTR ds:[ebx]
  40f916:	ins    BYTE PTR es:[edi],dx
  40f917:	xchg   DWORD PTR [edx-0x39ab5fd3],eax
  40f91d:	mov    edi,0x6200deea
  40f922:	xchg   DWORD PTR [ecx],esi
  40f924:	mov    bl,BYTE PTR [ecx]
  40f926:	sub    edx,DWORD PTR [ebx-0xaedff18]
  40f92c:	(bad)  
  40f92d:	dec    DWORD PTR [edx]
  40f92f:	sbb    esi,DWORD PTR [edx+0x19]
  40f932:	int    0xcc
  40f934:	add    DWORD PTR [edi],esi
  40f936:	(bad)
  40f939:	and    al,0x62
  40f93b:	cdq    
  40f93c:	(bad)  
  40f93d:	adc    eax,0x40d802
  40f942:	aad    0x1d
  40f944:	or     al,BYTE PTR [ecx]
  40f946:	push   ecx
  40f947:	add    al,0xc4
  40f949:	jmp    0x40f98f
  40f94b:	int3   
  40f94c:	rcr    BYTE PTR [esi-0x7c],0xde
  40f950:	add    BYTE PTR [esi+0x49],dl
  40f953:	retf   
  40f954:	std    
  40f955:	cmp    DWORD PTR [edx-0x42],edx
  40f958:	or     al,0x76
  40f95a:	sbb    eax,DWORD PTR [ecx+esi*8]
  40f95d:	sub    esi,DWORD PTR [esi-0x73f9f5fd]
  40f963:	repnz cmp cl,dl
  40f966:	sbb    ecx,DWORD PTR [edi+0x7eed4046]
  40f96c:	and    DWORD PTR [esp+esi*8],ecx
  40f96f:	das    
  40f970:	xor    eax,eax
  40f972:	inc    ecx
  40f973:	mov    al,ds:0x4bf
  40f978:	(bad)  
  40f979:	(bad)  
  40f97a:	mov    bl,0xd2
  40f97c:	loope  0x40f9b6
  40f97e:	shr    BYTE PTR [ebx],0x4
  40f981:	and    esi,ecx
  40f983:	(bad)  
  40f984:	jmp    0x71ff:0xd66a08e6
  40f98b:	and    al,0xc2
  40f98d:	call   DWORD PTR [eax+edx*2]
  40f990:	fcomp  DWORD PTR [edx-0x79a57d03]
  40f996:	mov    edi,0x56989608
  40f99b:	cmp    DWORD PTR [edx-0x1a],esi
  40f99e:	or     al,0x72
  40f9a0:	gs jmp 0x81701e02
  40f9a6:	xor    bh,bh
  40f9a8:	mov    ah,0xe4
  40f9aa:	sar    esi,1
  40f9ac:	add    ebx,DWORD PTR [ecx-0x4e8fa9f3]
  40f9b2:	int    0x15
  40f9b4:	out    dx,eax
  40f9b5:	je     0x40f939
  40f9b7:	ret    
  40f9b8:	xor    eax,DWORD PTR [edx]
  40f9ba:	inc    ebp
  40f9bb:	jae    0x40f9e5
  40f9bd:	mov    eax,0xe0d33abe
  40f9c2:	clc    
  40f9c3:	jne    0x40fa17
  40f9c5:	jecxz  0x40fa0b
  40f9c7:	pop    esi
  40f9c8:	loope  0x40f9fc
  40f9ca:	stc    
  40f9cb:	jmp    DWORD PTR [ebp-0x909a5ca]
  40f9d1:	shl    BYTE PTR [eax],0x4
  40f9d4:	pushf  
  40f9d5:	mov    al,0x2a
  40f9d7:	enter  0xac98,0xed
  40f9db:	adc    BYTE PTR [eax],al
  40f9dd:	add    BYTE PTR [esi+esi*1-0x2f],al
  40f9e1:	push   eax
  40f9e2:	adc    ah,ch
  40f9e4:	and    BYTE PTR [eax+ecx*1],cl
  40f9e7:	xor    DWORD PTR [ebp-0x7d8890eb],0xffffffc3
  40f9ee:	sub    eax,edi
  40f9f0:	add    al,0xeb
  40f9f2:	sub    eax,0x33c14149
  40f9f7:	ja     0x40fa73
  40f9f9:	inc    esi
  40f9fa:	and    ebp,eax
  40f9fc:	into   
  40f9fd:	mov    ah,BYTE PTR [ebx-0x41]
  40fa00:	in     al,dx
  40fa01:	add    bl,al
  40fa03:	call   0x8faa3251
  40fa08:	jmp    0x40fa2d
  40fa0a:	mov    dl,0x7b
  40fa0c:	xchg   BYTE PTR [edx],al
  40fa0e:	jno    0x40f9e7
  40fa10:	lock adc eax,0xfed78fa4
  40fa16:	test   al,0x43
  40fa18:	sbb    eax,0x82e42c10
  40fa1d:	(bad)  
  40fa1e:	cwde   
  40fa1f:	fimul  WORD PTR [edi]
  40fa21:	mov    bl,0x86
  40fa23:	test   DWORD PTR [esi],ebx
  40fa25:	or     al,0xa
  40fa28:	in     eax,0xc2
  40fa2a:	inc    ebp
  40fa2b:	and    al,0xf0
  40fa2d:	icebp  
  40fa2e:	push   esp
  40fa2f:	shl    DWORD PTR [edi],1
  40fa31:	(bad)
  40fa34:	jecxz  0x40fa39
  40fa36:	mov    ah,0x1c
  40fa38:	int3   
  40fa39:	jp     0x40fa2d
  40fa3b:	loope  0x40fa99
  40fa3d:	inc    DWORD PTR [eax]
  40fa3f:	aad    0x9e
  40fa41:	add    BYTE PTR [eax],al
  40fa43:	add    BYTE PTR [edi],dl
  40fa45:	push   ebx
  40fa46:	jecxz  0x40f9ca
  40fa48:	mov    ch,0xda
  40fa4a:	(bad)  
  40fa4c:	push   0xa5cfc379
  40fa51:	jb     0x40fa65
  40fa53:	(bad)  
  40fa54:	in     al,dx
  40fa55:	stos   DWORD PTR es:[edi],eax
  40fa56:	sub    al,BYTE PTR [esp+edi*2]
  40fa59:	sub    al,0x63
  40fa5b:	das    
  40fa5c:	jmp    0x40fa4d
  40fa5e:	daa    
  40fa5f:	add    al,0x80
  40fa61:	clc    
  40fa62:	jmp    0x376e0a97
  40fa67:	jns    0x40fa49
  40fa69:	push   edx
  40fa6a:	sub    al,0x14
  40fa6c:	pop    edi
  40fa6d:	test   DWORD PTR [esp+edi*8],edx
  40fa70:	stc    
  40fa71:	or     bl,al
  40fa73:	fyl2x  
  40fa75:	test   BYTE PTR [ebp-0x3df65781],dl
  40fa7b:	add    BYTE PTR [edx+0x2cda16d2],al
  40fa81:	push   ebx
  40fa82:	lods   al,BYTE PTR ds:[esi]
  40fa83:	adc    edi,DWORD PTR [edi+0x31]
  40fa86:	pop    edi
  40fa87:	out    dx,eax
  40fa88:	xor    BYTE PTR [ebp+0x1e1ecbfc],al
  40fa8e:	call   0xec4a7311
  40fa93:	mov    bl,0x2f
  40fa95:	jns    0x40fa6e
  40fa97:	fldcw  WORD PTR [edi]
  40fa99:	sub    eax,0x2b739e01
  40fa9e:	(bad)  
  40fa9f:	mov    ah,0x3c
  40faa1:	test   DWORD PTR [ebx-0xf],esi
  40faa4:	or     ebp,DWORD PTR [ebx+0x2932]
  40faaa:	jb     0x40face
  40faac:	pop    edx
  40faad:	mov    ah,0xee
  40faaf:	fadd   DWORD PTR [eax]
  40fab1:	mov    bh,0x6b
  40fab3:	mov    BYTE PTR [edx+esi*2+0x20],ah
  40fab7:	into   
  40fab8:	add    cl,ch
  40faba:	sub    al,0x59
  40fabc:	push   edx
  40fabd:	in     eax,0xe7
  40fabf:	cs adc eax,0xb7bc5d62
  40fac5:	add    DWORD PTR [ebx],ebp
  40fac7:	fiadd  WORD PTR [eax]
  40fac9:	sbb    dl,dl
  40facb:	iret   
  40facc:	rol    BYTE PTR [ebp-0x148300f8],0x20
  40fad3:	mov    esi,0xdf39b6bf
  40fad8:	clc    
  40fad9:	retf   
  40fada:	pushf  
  40fadb:	pop    esi
  40fadc:	std    
  40fadd:	adc    dl,bh
  40fadf:	adc    eax,0xd3ee626b
  40fae4:	mov    ebx,edi
  40fae6:	add    DWORD PTR [edi+0x2a6e3f5d],esp
  40faec:	mov    al,BYTE PTR [ebp-0x7eeb8851]
  40faf2:	mov    DWORD PTR [ebp+edi*8-0x28e4307a],0xc059332a
  40fafd:	cld    
  40fafe:	jecxz  0x40facd
  40fb00:	rol    BYTE PTR [eax-0x16ff2129],0x42
  40fb07:	sbb    cl,BYTE PTR [ecx]
  40fb09:	call   0x755c53ed
  40fb0e:	add    BYTE PTR [eax],al
  40fb10:	push   ds
  40fb11:	push   ds
  40fb12:	add    DWORD PTR [esi+0x6ad2c9],esi
  40fb18:	(bad)  
  40fb19:	cli    
  40fb1a:	shl    BYTE PTR [ebx+0x4311d2],cl
  40fb20:	adc    ebx,DWORD PTR [edi]
  40fb22:	jmp    0x40fb4f
  40fb24:	outs   dx,BYTE PTR ds:[esi]
  40fb25:	stos   DWORD PTR es:[edi],eax
  40fb26:	je     0x40fb68
  40fb28:	xchg   BYTE PTR [esi],al
  40fb2a:	imul   al
  40fb2c:	inc    edi
  40fb2d:	stc    
  40fb2e:	(bad)  
  40fb2f:	dec    DWORD PTR ds:0xc5d648bc
  40fb35:	fist   WORD PTR [eax+0x68]
  40fb38:	stos   BYTE PTR es:[edi],al
  40fb39:	je     0x40fb78
  40fb3b:	add    BYTE PTR [esi],bh
  40fb3d:	pop    ds
  40fb3e:	cld    
  40fb3f:	call   FWORD PTR [ecx+0xb]
  40fb42:	or     eax,0xfd9e4044
  40fb47:	dec    edi
  40fb48:	jle    0x40fb89
  40fb4a:	and    DWORD PTR [ecx],eax
  40fb4c:	push   esi
  40fb4d:	pop    ebx
  40fb4e:	mov    ebp,0xc0e95175
  40fb53:	jmp    0x41d5f4
  40fb58:	adc    BYTE PTR [ebp+0x74],ch
  40fb5b:	in     al,dx
  40fb5c:	scas   al,BYTE PTR es:[edi]
  40fb5d:	ds std 
  40fb5f:	call   DWORD PTR [esi]
  40fb61:	test   DWORD PTR [esi-0x1e],0xc689df06
  40fb68:	push   esi
  40fb69:	call   edx
  40fb6b:	xor    ebp,DWORD PTR [ecx+0x55d6493a]
  40fb71:	fidivr DWORD PTR [ecx]
  40fb73:	mov    DWORD PTR [eax],0x945ad900
  40fb79:	add    BYTE PTR [esi],al
  40fb7b:	fisttp WORD PTR [ecx+0x3d8c6235]
  40fb81:	add    BYTE PTR [esi],ch
  40fb83:	outs   dx,BYTE PTR ds:[esi]
  40fb84:	je     0x40fbc6
  40fb86:	(bad)  
  40fb87:	dec    esi
  40fb88:	(bad)  
  40fb89:	(bad)  
  40fb8a:	inc    BYTE PTR [edx]
  40fb8c:	jne    0x40fbce
  40fb8e:	(bad)  
  40fb8f:	push   DWORD PTR [esp+ecx*2]
  40fb92:	das    
  40fb93:	ret    
  40fb94:	(bad)  
  40fb97:	inc    esp
  40fb98:	aaa    
  40fb99:	inc    edx
  40fb9a:	das    
  40fb9b:	sbb    al,0x3b
  40fb9d:	fisttp WORD PTR [bx+di-0x3f]
  40fba1:	jmp    DWORD PTR [ecx-0x132a327f]
  40fba7:	je     0x40fb4f
  40fba9:	push   ebx
  40fbaa:	jns    0x40fbe3
  40fbac:	add    edi,edi
  40fbae:	popa   
  40fbaf:	ins    BYTE PTR es:[edi],dx
  40fbb0:	dec    ebp
  40fbb1:	je     0x40fba2
  40fbb3:	je     0x40fc17
  40fbb5:	xor    al,0xeb
  40fbb7:	retf   0xffc5
  40fbba:	int    0x3c
  40fbbc:	aaa    
  40fbbd:	inc    edx
  40fbbe:	das    
  40fbbf:	test   BYTE PTR [edi],dh
  40fbc1:	addr16 dec edi
  40fbc3:	add    edx,eax
  40fbc5:	call   FWORD PTR [ecx+0x49]
  40fbc8:	int    0xd5
  40fbca:	in     al,dx
  40fbcb:	je     0x40fb73
  40fbcd:	pop    ebx
  40fbce:	popa   
  40fbcf:	mov    bh,0x4
  40fbd1:	call   FWORD PTR [ecx+0x1c]
  40fbd4:	jno    0x40fc4a
  40fbd6:	out    dx,eax
  40fbd7:	je     0x40fc3b
  40fbd9:	xor    al,0x0
  40fbdb:	add    bl,ah
  40fbdd:	(bad)  
  40fbde:	(bad)  
  40fbdf:	dec    ebp
  40fbe1:	pop    ss
  40fbe2:	cmp    eax,DWORD PTR [edx+0x2f]
  40fbe5:	dec    eax
  40fbe6:	aaa    
  40fbe7:	mov    ds:0xffc66993,al
  40fbec:	push   edi
  40fbed:	jp     0x40fba0
  40fbef:	aad    0x6c
  40fbf1:	ja     0x40fbcb
  40fbf3:	pop    es
  40fbf4:	inc    esi
  40fbf5:	stos   BYTE PTR es:[edi],al
  40fbf6:	mov    ch,0xd5
  40fbf8:	ins    BYTE PTR es:[edi],dx
  40fbf9:	ja     0x40fbd0
  40fbfb:	pop    ss
  40fbfc:	ss call 0xfd5:0x776cd5b9
  40fc04:	es dec edx
  40fc06:	loope  0x40fbdd
  40fc08:	ins    BYTE PTR es:[edi],dx
  40fc09:	ja     0x40fbe0
  40fc0b:	pop    es
  40fc0c:	adc    al,0xde
  40fc0e:	xlat   BYTE PTR cs:[ebx]
  40fc10:	sub    al,0x4e
  40fc12:	call   0x280d2a85
  40fc17:	rcr    DWORD PTR [ecx+0x25],0x21
  40fc1b:	inc    ebp
  40fc1c:	sub    al,0xde
  40fc1e:	call   0x1a04:0x4a5d808e
  40fc25:	out    dx,al
  40fc26:	aas    
  40fc27:	call   0x8828dbce
  40fc2c:	ror    BYTE PTR [edx],1
  40fc2e:	out    dx,eax
  40fc2f:	xchg   BYTE PTR [ebx],bh
  40fc31:	into   
  40fc32:	xor    eax,0xbdde80c6
  40fc37:	mov    edx,0xc6360ab9
  40fc3c:	jo     0x40fc81
  40fc3e:	(bad)  
  40fc3f:	cmp    DWORD PTR [eax],eax
  40fc41:	add    ch,ch
  40fc43:	fisttp QWORD PTR [edi]
  40fc45:	adc    bl,BYTE PTR [eax-0x723e097f]
  40fc4b:	push   esi
  40fc4c:	adc    eax,0x6d2350c6
  40fc51:	inc    esp
  40fc52:	ret    
  40fc53:	fstp   DWORD PTR [ecx]
  40fc55:	inc    esp
  40fc56:	in     eax,0x9c
  40fc58:	ins    BYTE PTR es:[edi],dx
  40fc59:	cmp    eax,0xac3fd3c3
  40fc5e:	push   esi
  40fc5f:	sbb    eax,0xb8a06be8
  40fc64:	call   0x954c136c
  40fc69:	popa   
  40fc6a:	sbb    edx,eax
  40fc6c:	jmp    0xeb70846
  40fc71:	push   edi
  40fc72:	das    
  40fc73:	fimul  WORD PTR [ecx-0x5c]
  40fc76:	out    0x1c,al
  40fc78:	call   0xf84bb504
  40fc7d:	imul   edx,DWORD PTR [edx-0x5d],0xffffff86
  40fc81:	popa   
  40fc82:	and    al,0xda
  40fc84:	cli    
  40fc85:	push   ecx
  40fc86:	nop
  40fc87:	fild   DWORD PTR [eax]
  40fc89:	dec    ebx
  40fc8a:	xchg   ebx,eax
  40fc8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc8c:	inc    ecx
  40fc8d:	jmp    0xedb4a03b
  40fc92:	sub    ah,bl
  40fc94:	jb     0x40fc34
  40fc96:	fstp   QWORD PTR [ecx+0x2a]
  40fc9a:	retf   
  40fc9b:	rcl    dh,0xaa
  40fc9e:	sub    al,0xf4
  40fca0:	std    
  40fca1:	push   ecx
  40fca2:	add    al,0x8c
  40fca4:	(bad)  
  40fca5:	call   0xcd0bfcaa
  40fcaa:	(bad)  
  40fcab:	stos   BYTE PTR es:[edi],al
  40fcac:	sub    al,0x5b
  40fcae:	shl    BYTE PTR [ebp-0x2601d6b9],0xf
  40fcb5:	jmp    0x4a4d:0x806cf914
  40fcbc:	sbb    ebp,DWORD PTR [eax-0x333216bf]
  40fcc2:	(bad)  
  40fcc3:	stos   BYTE PTR es:[edi],al
  40fcc4:	sub    al,0x81
  40fcc6:	xor    BYTE PTR [esi],bh
  40fcc8:	push   gs
  40fcca:	inc    ecx
  40fccb:	jmp    0x199db1a
  40fcd0:	(bad)  [edi-0x22631701]
  40fcd6:	pop    ebp
  40fcd7:	stos   BYTE PTR es:[edi],al
  40fcd8:	sbb    bl,BYTE PTR [esi+0x74aa3cc1]
  40fcde:	jg     0x40fc9d
  40fce0:	and    al,0xdc
  40fce2:	add    cl,ch
  40fce4:	xchg   BYTE PTR [edx],bl
  40fce6:	or     eax,ebp
  40fce8:	stc    
  40fce9:	mov    ebx,0x1c565968
  40fcee:	add    DWORD PTR [ebx+0x2b],eax
  40fcf1:	jbe    0x40fca0
  40fcf3:	mov    eax,0xa984808f
  40fcf8:	(bad)  
  40fcfa:	xor    ch,BYTE PTR [ecx+0x7168c58b]
  40fd00:	xor    al,0x1c
  40fd02:	add    DWORD PTR [eax],eax
  40fd04:	cmp    al,0xd8
  40fd06:	call   0xff3fc4a6
  40fd0b:	test   BYTE PTR [eax],al
  40fd0d:	add    BYTE PTR [esi-0x35971659],al
  40fd13:	fadd   QWORD PTR [eax]
  40fd15:	add    BYTE PTR [ebx+0x58],al
  40fd18:	cmc    
  40fd19:	std    
  40fd1a:	popa   
  40fd1b:	dec    BYTE PTR [ebp+0x6a]
  40fd1e:	(bad)  
  40fd1f:	(bad)  
  40fd20:	adc    al,0x8
  40fd22:	mov    bh,0x9b
  40fd24:	std    
  40fd25:	mov    WORD PTR [ebx],fs
  40fd27:	and    edi,ebp
  40fd29:	jmp    DWORD PTR [ecx+0x4c]
  40fd2c:	in     eax,0xb7
  40fd2e:	out    0xfd,eax
  40fd30:	inc    BYTE PTR [ebp-0x2976c5ba]
  40fd36:	aad    0xdb
  40fd38:	or     eax,0xc0145695
  40fd3d:	add    al,0x86
  40fd3f:	dec    eax
  40fd40:	mov    ch,ah
  40fd42:	pop    es
  40fd43:	out    dx,eax
  40fd44:	xchg   ebp,eax
  40fd45:	add    al,0x56
  40fd47:	fcomi  st,st(6)
  40fd49:	inc    ebp
  40fd4a:	pop    esi
  40fd4b:	fcom   QWORD PTR [ecx+0x56]
  40fd4e:	mov    ecx,0x468684ee
  40fd53:	fild   DWORD PTR [eax]
  40fd55:	adc    BYTE PTR [ebx],0x3a
  40fd58:	xlat   BYTE PTR ds:[ebx]
  40fd59:	inc    ebx
  40fd5a:	push   esi
  40fd5b:	fimul  DWORD PTR ds:0xd9d286
  40fd61:	add    BYTE PTR ds:0x78ff32c3,dl
  40fd67:	push   ebx
  40fd68:	xchg   BYTE PTR [eax+0x76],ch
  40fd6b:	call   0xfffa:0x729b8cfd
  40fd72:	add    BYTE PTR [eax],al
  40fd74:	shl    ecx,0x4a
  40fd77:	loopne 0x40fd8f
  40fd79:	fisttp DWORD PTR [ebx-0x103317b]
  40fd7f:	jmp    FWORD PTR [edi]
  40fd81:	lds    edx,FWORD PTR [ecx]
  40fd83:	rcr    BYTE PTR [edi-0x3b],0x5d
  40fd87:	mov    dh,0x5f
  40fd89:	aad    0xc4
  40fd8b:	push   DWORD PTR [eax+0x0]
  40fd8e:	clc    
  40fd8f:	push   ebx
  40fd90:	cmp    al,0xb5
  40fd92:	add    al,0x85
  40fd94:	out    dx,eax
  40fd95:	mov    DWORD PTR [edx],ebp
  40fd97:	mov    esi,ecx
  40fd99:	inc    esp
  40fd9a:	nop
  40fd9b:	test   bh,al
  40fd9d:	and    DWORD PTR [esi-0x2],ebx
  40fda0:	pop    edi
  40fda1:	inc    ebp
  40fda2:	imul   esp,DWORD PTR [edi],0x845e0fdd
  40fda8:	outs   dx,DWORD PTR ds:[esi]
  40fda9:	inc    eax
  40fdaa:	idiv   dh
  40fdac:	pop    edx
  40fdad:	icebp  
  40fdae:	ss inc edx
  40fdb0:	das    
  40fdb1:	cli    
  40fdb2:	xchg   edi,esi
  40fdb4:	xchg   edx,eax
  40fdb5:	scas   eax,DWORD PTR es:[edi]
  40fdb6:	pop    ebp
  40fdb7:	dec    edi
  40fdb8:	mov    BYTE PTR [ecx+0x74ef11b5],al
  40fdbe:	mov    BYTE PTR [edi-0x397d83fd],bh
  40fdc4:	and    esi,DWORD PTR [edx+eax*4]
  40fdc7:	inc    BYTE PTR [ebx]
  40fdc9:	add    edi,DWORD PTR [edx+ebp*8+0xb]
  40fdcd:	ins    BYTE PTR es:[edi],dx
  40fdce:	cmp    cl,BYTE PTR [ebx]
  40fdd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fdd1:	repz lock pop edi
  40fdd4:	out    dx,eax
  40fdd5:	je     0x40fde3
  40fdd7:	add    eax,0x3eff0000
  40fddc:	ret    0x55ff
  40fddf:	adc    DWORD PTR [ebx+0x4],0xffffffff
  40fde3:	ds ret 0x2fff
  40fde7:	sub    DWORD PTR [ebx],ecx
  40fde9:	cmp    DWORD PTR [edx],0x2f423377
  40fdef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdf0:	push   cs
  40fdf1:	add    BYTE PTR [edi],ch
  40fdf3:	aam    0xbe
  40fdf5:	scas   eax,DWORD PTR es:[edi]
  40fdf6:	ror    BYTE PTR cs:[ebx-0x3f],1
  40fdfa:	xor    ebx,esi
  40fdfc:	out    0xb8,eax
  40fdfe:	mov    ch,0x8a
  40fe00:	push   0xe7e41c6f
  40fe05:	add    ebx,DWORD PTR [esp+edx*1+0x37]
  40fe09:	mov    ebp,DWORD PTR [ebx]
  40fe0b:	cs fld st(3)
  40fe0e:	loopne 0x40fe15
  40fe10:	call   0x771f6b5f
  40fe15:	ss sbb eax,0xfc240199
  40fe1b:	popf   
  40fe1c:	mov    edx,0xaa9d209d
  40fe21:	add    esp,DWORD PTR [ecx+0x67]
  40fe24:	hlt    
  40fe25:	push   edi
  40fe26:	out    0x21,al
  40fe28:	call   0x31bbcc12
  40fe2d:	ret    0x3a0
  40fe30:	mov    ebx,DWORD PTR [ebx+0x66]
  40fe33:	and    eax,ebp
  40fe35:	mov    WORD PTR [ebx],?
  40fe37:	outs   dx,BYTE PTR ds:[esi]
  40fe38:	and    edx,eax
  40fe3a:	mov    BYTE PTR [esp+edi*8-0x4d],bh
  40fe3e:	add    BYTE PTR [eax],al
  40fe40:	sbb    bl,BYTE PTR [esi]
  40fe42:	call   0xbe2b6ac9
  40fe47:	pop    esi
  40fe48:	pop    ecx
  40fe49:	imul   edx,DWORD PTR [edi+ebp*2+0x67],0x7d
  40fe4e:	push   es
  40fe4f:	imul   esp,ebx,0x5d
  40fe52:	call   0x745fa25a
  40fe57:	mov    ds:0x3aa9d10,al
  40fe5c:	xchg   BYTE PTR [eax+ebp*8-0x5a96d0fd],cl
  40fe63:	mov    WORD PTR [eax],fs
  40fe65:	push   ds
  40fe66:	and    edi,edx
  40fe68:	imul   edx,DWORD PTR ss:[edx+edi*1+0x6cc67d25],0xffffff83
  40fe71:	pop    esi
  40fe72:	call   0x71307a
  40fe77:	call   0xd5abdca8
  40fe7c:	mov    esp,0x3b1c8c0f
  40fe81:	pusha  
  40fe82:	enter  0x8b9e,0x61
  40fe86:	ficom  WORD PTR [esi+0xfc06252]
  40fe8c:	call   0xd35ac4f8
  40fe91:	push   esp
  40fe92:	fsubr  DWORD PTR [edx]
  40fe94:	xor    ebp,DWORD PTR [ebx-0x7d]
  40fe97:	mov    eax,ds:0x19fd7c70
  40fe9c:	pop    ebx
  40fe9d:	mov    cl,0xcf
  40fe9f:	bound  sp,DWORD PTR [edx-0x40]
  40fea3:	out    dx,al
  40fea4:	add    BYTE PTR [eax],al
  40fea6:	inc    ecx
  40fea7:	cmp    eax,0xe5d82a3a
  40feac:	xor    DWORD PTR [ecx],ebp
  40feae:	xchg   ecx,eax
  40feaf:	xor    DWORD PTR gs:[ecx],0x0
  40feb3:	jl     0x40feb2
  40feb5:	or     BYTE PTR [ecx],0xde
  40feb8:	add    cl,ch
  40feba:	mov    eax,ds:0xea32da61
  40febf:	jnp    0x40fe49
  40fec1:	add    DWORD PTR [ebx+0x25],ebp
  40fec4:	je     0x40fee9
  40fec6:	mov    edi,DWORD PTR [eax+0x73]
  40fec9:	test   eax,0x21836b2c
  40fece:	or     BYTE PTR [ebp+edi*8-0x67],bh
  40fed2:	add    edx,edx
  40fed4:	adc    al,0xd8
  40fed6:	ins    BYTE PTR es:[edi],dx
  40fed7:	jl     0x40fe5b
  40fed9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40feda:	hlt    
  40fedb:	jnp    0x40ff2e
  40fedd:	call   0x62c:0x5351df56
  40fee4:	add    ecx,ebp
  40fee6:	sub    al,0x5e
  40fee8:	mov    ebp,DWORD PTR [esp+eiz*8+0x79]
  40feec:	std    
  40feed:	into   
  40feee:	fsub   QWORD PTR [ebx+eax*2+0x119ea00]
  40fef5:	add    BYTE PTR [esi],al
  40fef7:	sbb    edx,DWORD PTR ds:0xfd9ff430
  40fefd:	mov    al,dh
  40feff:	pop    esi
  40ff00:	sti    
  40ff01:	jmp    DWORD PTR [edx]
  40ff03:	rcl    DWORD PTR [ecx-0x73],0x53
  40ff07:	dec    BYTE PTR [ebp-0x1]
  40ff0a:	add    BYTE PTR [eax],al
  40ff0c:	adc    edi,esi
  40ff0e:	mov    WORD PTR [ebp-0xe372],es
  40ff14:	inc    esi
  40ff15:	xor    al,0xfe
  40ff17:	adc    eax,0x3d6da2
  40ff1c:	inc    ebx
  40ff1d:	pop    ds
  40ff1e:	jb     0x40ff26
  40ff20:	dec    ebp
  40ff21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff22:	stc    
  40ff23:	mov    DWORD PTR [ebx-0x3c00abe9],edx
  40ff29:	pop    ds
  40ff2a:	adc    BYTE PTR [eax-0x3a],al
  40ff2d:	inc    sp
  40ff2f:	clc    
  40ff30:	adc    eax,0x9274ff17
  40ff35:	inc    edi
  40ff36:	add    BYTE PTR [esp+eax*4-0x32],dh
  40ff3a:	rcl    cl,0xee
  40ff3d:	int    0xc7
  40ff3f:	packssdw xmm0,XMMWORD PTR [eax+ecx*8+0x4b]
  40ff45:	sbb    bh,bh
  40ff47:	lea    edx,[ebx]
  40ff49:	daa    
  40ff4a:	std    
  40ff4b:	call   FWORD PTR [ecx]
  40ff4d:	pop    es
  40ff4e:	mov    ds:0x8bdf56f5,eax
  40ff53:	test   DWORD PTR [esi],ebx
  40ff55:	sbb    al,0xff
  40ff57:	(bad)  
  40ff58:	ds aam 0x1e
  40ff5b:	add    BYTE PTR [esi-0x79],al
  40ff5e:	dec    ecx
  40ff5f:	fist   WORD PTR [ebp-0x1e27821]
  40ff65:	mov    dh,0x42
  40ff67:	add    BYTE PTR [edi+0x2fdf6174],bh
  40ff6d:	enter  0xff04,0x0
  40ff71:	add    BYTE PTR [eax],al
  40ff73:	popf   
  40ff74:	mov    ds:0xe9852e66,eax
  40ff79:	mov    ebx,0xff04c5a1
  40ff7e:	cmp    dl,BYTE PTR [ecx]
  40ff80:	idiv   DWORD PTR [edi]
  40ff82:	das    
  40ff83:	jo     0x40ffcb
  40ff85:	jae    0x40ffbd
  40ff87:	lock pop esp
  40ff89:	out    0x94,eax
  40ff8b:	xor    al,BYTE PTR [ebx]
  40ff8d:	add    BYTE PTR [edi+eax*4],al
  40ff90:	adc    eax,eax
  40ff92:	and    eax,0xac06d048
  40ff97:	jno    0x40ff52
  40ff99:	(bad)  [ebp+eax*4+0x4]
  40ff9d:	call   0x4458a6
  40ffa2:	push   0x640094eb
  40ffa7:	scas   al,BYTE PTR es:[edi]
  40ffa8:	inc    ebp
  40ffa9:	push   esp
  40ffaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffab:	sub    BYTE PTR [esi+0x6905b7e3],al
  40ffb1:	or     esi,DWORD PTR [eax]
  40ffb3:	test   DWORD PTR [ecx],eax
  40ffb5:	push   ebx
  40ffb6:	stc    
  40ffb7:	pop    ebx
  40ffb8:	mov    ?,WORD PTR [edi+eiz*1+0x78]
  40ffbc:	or     BYTE PTR ds:[eax+0x231c8c85],0xea
  40ffc4:	(bad)  
  40ffc7:	mov    cl,BYTE PTR [esp+ebx*1-0x3a4cc1]
  40ffce:	jno    0x410029
  40ffd0:	or     eax,ebp
  40ffd2:	and    al,dl
  40ffd4:	pop    ecx
  40ffd5:	inc    BYTE PTR [eax]
  40ffd7:	add    BYTE PTR [ebx+0x1d06cfc4],ch
  40ffdd:	lds    ebp,FWORD PTR [ebx+0x3d]
  40ffe0:	test   DWORD PTR cs:[ecx],eax
  40ffe3:	push   ebx
  40ffe4:	xlat   BYTE PTR ds:[ebx]
  40ffe5:	test   BYTE PTR [ecx],al
  40ffe7:	or     BYTE PTR [edi],ch
  40ffe9:	fidivr WORD PTR [edx]
  40ffeb:	pop    ebx
  40ffec:	and    esi,DWORD PTR [edx-0x9]
  40ffef:	ret    
  40fff0:	xor    BYTE PTR [edi],bh
  40fff2:	push   DWORD PTR [ecx]
  40fff4:	ins    DWORD PTR es:[edi],dx
  40fff5:	ficom  WORD PTR [edx]
  40fff7:	inc    edi
  40fff8:	fwait
  40fff9:	int    0xc6
  40fffb:	lock sub ah,cl
  40fffe:	daa    
  40ffff:	add    al,0xcc
  410001:	(bad)  
  410002:	popf   
  410003:	(bad)  
  410004:	or     BYTE PTR [edx-0x34],ah
  410007:	pop    esi
  410008:	neg    BYTE PTR ds:0xa0316ee8
  41000e:	in     al,0x5e
  410010:	out    0x1d,al
  410012:	call   0x502b551b
  410017:	mov    ds:0xbce81e02,eax
  41001c:	mov    al,0xd6
  41001e:	push   0x43
  410020:	sub    BYTE PTR [edi],ah
  410022:	std    
  410023:	pop    ebx
  410024:	mov    ch,0xb3
  410026:	aaa    
  410027:	cmc    
  410028:	add    dh,bl
  41002a:	iret   
  41002b:	add    ebx,eax
  41002d:	sbb    eax,0x6da5ae8
  410032:	test   al,0x39
  410034:	in     eax,dx
  410035:	fisttp QWORD PTR [esi+0x31]
  410038:	mov    bl,0x22
  41003a:	or     al,0xf4
  41003c:	add    BYTE PTR [eax],al
  41003e:	call   0x2f46ea48
  410043:	fisub  WORD PTR [eax-0x8]
  410046:	loopne 0x40ffdf
  410048:	stos   BYTE PTR es:[edi],al
  410049:	add    eax,DWORD PTR [eax+0x38f03fd3]
  41004f:	fidiv  WORD PTR [edx-0x40]
  410052:	sub    BYTE PTR [esi+0x79695e0b],al
  410058:	arpl   WORD PTR [ebx-0x24],ax
  41005b:	pop    esp
  41005c:	ret    0xe35e
  41005f:	mov    esp,0xdec6b69a
  410064:	add    BYTE PTR [ecx-0x16be6cac],al
  41006a:	in     eax,0xd1
  41006c:	or     al,0xf8
  41006e:	ins    BYTE PTR es:[edi],dx
  41006f:	jns    0x40fff3
  410071:	in     al,dx
  410072:	cmp    al,0x9a
  410074:	inc    ecx
  410075:	jmp    0xac4d3d01
  41007a:	jmp    0x5c62:0x26aa3a78
  410081:	mov    esi,0x4e87876
  410086:	addr16 js 0x410086
  410089:	gs imul ebp,eax,0xffffff84
  41008d:	ss push esi
  41008f:	js     0x41008e
  410091:	sahf   
  410092:	loopne 0x410074
  410094:	call   0xfdb987ce
  410099:	gs imul ebp,eax,0xffffff84
  41009d:	(bad)  
  41009e:	ja     0x410118
  4100a0:	std    
  4100a1:	jle    0x4100a3
  4100a3:	add    al,al
  4100a5:	aam    0xf
  4100a7:	sub    DWORD PTR [ebx],esi
  4100a9:	cmp    eax,0x78ea93a4
  4100ae:	cmp    ah,BYTE PTR [edx-0x18]
  4100b1:	or     eax,0x9270f48a
  4100b6:	inc    ecx
  4100b7:	jmp    0xe85c6ad0
  4100bc:	sub    al,0xb5
  4100be:	shl    esi,0x18
  4100c1:	(bad)  
  4100c3:	ds test bl,0x3
  4100c7:	lods   eax,DWORD PTR ds:[esi]
  4100c8:	ds sbb al,0x1
  4100cb:	mov    dh,BYTE PTR [ebx]
  4100cd:	fwait
  4100ce:	inc    ecx
  4100cf:	jmp    0xceb475ef
  4100d4:	test   eax,0x2c492434
  4100d9:	fiadd  WORD PTR [eax]
  4100db:	add    esp,edi
  4100dd:	fild   DWORD PTR [eax]
  4100df:	add    BYTE PTR [esi+0x31],al
  4100e2:	mov    WORD PTR [edx+ebp*2+0x56000467],es
  4100e9:	sub    al,0xfe
  4100eb:	xor    eax,0x42ae92
  4100f0:	(bad)  
  4100f1:	push   esp
  4100f2:	fld    DWORD PTR [ebx+0x46]
  4100f5:	test   BYTE PTR [ebp-0x471daa26],ah
  4100fb:	adc    ah,BYTE PTR [ebp-0x42177e0e]
  410101:	sar    edi,0xff
  410104:	shr    DWORD PTR [eax+0xe805],1
  41010a:	push   ebx
  41010b:	push   ss
  41010c:	(bad)  
  41010d:	dec    DWORD PTR [edx-0x3e7bf0e5]
  410113:	adc    eax,0x3898ffff
  410118:	add    eax,0xe8dd4a02
  41011d:	repnz mov dl,0x16
  410120:	(bad)  
  410121:	jmp    0x4100e7
  410123:	dec    ebx
  410124:	add    BYTE PTR [edx],bh
  410126:	test   esi,esp
  410128:	xchg   ebx,eax
  410129:	shl    BYTE PTR [ecx],0x34
  41012c:	pop    edx
  41012d:	mov    ebp,DWORD PTR [ebx-0x39fb40d0]
  410133:	dec    eax
  410134:	mov    ch,ah
  410136:	inc    ebp
  410137:	pop    ss
  410138:	test   BYTE PTR [ecx+0x6aaf2],0x96
  41013f:	sub    eax,0xd7b28d56
  410144:	pusha  
  410145:	add    al,BYTE PTR [esi-0x6a781725]
  41014b:	fild   DWORD PTR [eax]
  41014d:	lea    edi,[edx+0x1e872d7]
  410153:	nop
  410154:	add    BYTE PTR [eax],al
  410156:	std    
  410157:	pop    edx
  410158:	jecxz  0x41015b
  41015a:	das    
  41015b:	test   DWORD PTR [ecx],eax
  41015d:	push   0x2d
  41015f:	sbb    al,BYTE PTR [esi+0x186e223]
  410165:	add    dh,bh
  410167:	ja     0x410134
  410169:	pop    es
  41016a:	mov    edx,0x141d41
  41016f:	add    bh,dl
  410171:	sbb    al,0x3c
  410173:	inc    edx
  410174:	das    
  410175:	lea    ebx,[edx]
  410177:	and    ch,BYTE PTR [esi]
  410179:	test   DWORD PTR [ebp+ebp*8-0x74fe7ad2],ebx
  410180:	jmp    0x6f4105c3
  410185:	scas   al,BYTE PTR es:[edi]
  410186:	iret   
  410187:	clc    
  410188:	mov    ds:0x5f0820c0,al
  41018d:	sbb    eax,DWORD PTR [eax+ebp*2]
  410190:	xchg   edi,eax
  410191:	dec    edi
  410192:	sar    edi,0xf9
  410195:	jns    0x410210
  410197:	adc    BYTE PTR [edi-0x7b],ch
  41019a:	mov    ch,bh
  41019c:	mov    dl,0x56
  41019e:	rcl    BYTE PTR ds:0x12f171e0,1
  4101a4:	outs   dx,DWORD PTR ds:[esi]
  4101a5:	test   DWORD PTR [eax],ebx
  4101a7:	mov    bh,0x2f
  4101a9:	test   DWORD PTR [ecx],eax
  4101ab:	jne    0x4101e3
  4101ad:	xlat   BYTE PTR ds:[ebx]
  4101ae:	push   ebp
  4101af:	adc    al,0xef
  4101b1:	xchg   edx,eax
  4101b2:	sar    edi,0xfd
  4101b5:	push   ss
  4101b6:	mov    dh,0x8a
  4101b8:	jmp    0xb258bf3
  4101bd:	ret    
  4101be:	add    BYTE PTR [eax],al
  4101c0:	cli    
  4101c1:	sti    
  4101c2:	push   0x841c9382
  4101c7:	jmp    0x4101dc
  4101c9:	add    BYTE PTR [ecx],0x0
  4101cc:	loopne 0x4101cf
  4101ce:	fldenv [ebx]
  4101d0:	aaa    
  4101d1:	sbb    eax,0x304
  4101d6:	das    
  4101d7:	fsubrp st(7),st
  4101d9:	push   esi
  4101da:	sti    
  4101db:	int    0x72
  4101dd:	leave  
  4101de:	xor    al,0x69
  4101e0:	imul   esp,DWORD PTR [eax],0x42
  4101e3:	loop   0x4101cc
  4101e5:	add    edi,edi
  4101e7:	jbe    0x4101a5
  4101e9:	pop    ss
  4101ea:	jns    0x410206
  4101ec:	call   0x8026f57b
  4101f1:	stos   DWORD PTR es:[edi],eax
  4101f2:	data16 sbb ch,al
  4101f5:	imul   edi,DWORD PTR [ebx-0x44],0xffffffe8
  4101f9:	add    edx,eax
  4101fb:	(bad)  
  4101fc:	les    edi,FWORD PTR [eax-0x4f181d12]
  410202:	mov    ch,0x82
  410204:	push   0x67
  410206:	nop
  410207:	or     al,0xc7
  410209:	shl    BYTE PTR [ebx+eiz*2],1
  41020c:	and    al,0x7c
  41020e:	js     0x410285
  410210:	cmp    al,0xc
  410212:	pop    ss
  410213:	inc    ebx
  410214:	scas   al,BYTE PTR es:[edi]
  410215:	push   esi
  410216:	stc    
  410217:	arpl   WORD PTR [esp+edi*2],bp
  41021a:	pusha  
  41021b:	or     al,ch
  41021d:	jmp    0x41026f
  41021f:	mov    WORD PTR [edx],gs
  410221:	add    al,0xe0
  410223:	retf   
  410224:	outs   dx,DWORD PTR ds:[esi]
  410225:	hlt    
  410226:	sbb    dh,bl
  410228:	jb     0x41027d
  41022a:	stos   DWORD PTR es:[edi],eax
  41022b:	ins    BYTE PTR es:[edi],dx
  41022c:	repz cli 
  41022e:	push   esi
  41022f:	jne    0x41024e
  410231:	push   edi
  410232:	sbb    ecx,DWORD PTR [esi+0x5ab8c3d9]
  410238:	daa    
  410239:	iret   
  41023a:	add    BYTE PTR [eax],al
  41023c:	sbb    esi,DWORD PTR [ebx-0x21d0fc99]
  410242:	fild   DWORD PTR ds:0x43f474f9
  410248:	ds push ds
  41024a:	call   0x31557161
  41024f:	inc    ecx
  410250:	xor    dh,bl
  410252:	add    BYTE PTR [edx+0x42],ah
  410255:	mov    ch,dh
  410257:	xchg   esp,eax
  410258:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410259:	mov    DWORD PTR [edi-0x48],ecx
  41025c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41025d:	loop   0x4102a3
  41025f:	aaa    
  410260:	ins    DWORD PTR es:[edi],dx
  410261:	jne    0x4102b5
  410263:	mov    esi,0xe81bbbd4
  410268:	sub    al,0xb1
  41026a:	fnstenv [eax+0x6f]
  41026d:	ins    DWORD PTR es:[edi],dx
  41026e:	cmp    DWORD PTR [edx],ebp
  410270:	pop    edi
  410271:	fdiv   QWORD PTR [ecx]
  410273:	sub    ebx,edx
  410275:	cdq    
  410276:	add    cl,ch
  410278:	sub    al,0x8
  41027a:	add    edi,DWORD PTR [edx]
  41027c:	jle    0x4102e0
  41027e:	inc    ebx
  41027f:	icebp  
  410280:	fmul   QWORD PTR [ebx]
  410282:	(bad)  
  410283:	pop    esp
  410284:	xor    esp,DWORD PTR [esi+0x5b]
  410287:	into   
  410288:	add    eax,0x50dcfd74
  41028d:	iret   
  41028e:	inc    eax
  41028f:	jmp    0xedb4381d
  410294:	inc    edx
  410295:	sbb    bh,dh
  410297:	call   0x2b17c769
  41029c:	sub    esp,DWORD PTR [ecx-0x20]
  41029f:	cmc    
  4102a0:	add    BYTE PTR [eax],al
  4102a2:	xor    eax,0xb63f0d1b
  4102a7:	test   eax,0x74ecfb58
  4102ac:	push   edx
  4102ad:	inc    ecx
  4102ae:	cmp    ecx,DWORD PTR [ecx+eax*2+0x44db17e9]
  4102b5:	lahf   
  4102b6:	out    dx,al
  4102b7:	je     0x410320
  4102b9:	in     eax,0x2f
  4102bb:	sbb    edi,ecx
  4102bd:	je     0x4102a7
  4102bf:	call   0x741cbc13
  4102c4:	(bad)  
  4102c5:	ins    BYTE PTR es:[edi],dx
  4102c6:	jmp    0x4102b1
  4102c8:	add    DWORD PTR [edi-0x28],ecx
  4102cb:	jae    0x41031e
  4102cd:	add    BYTE PTR [esi-0x69bc2c63],ch
  4102d3:	lds    eax,FWORD PTR [ebx]
  4102d5:	inc    esp
  4102d6:	and    BYTE PTR [edi-0x226d9603],bl
  4102dc:	inc    ebx
  4102dd:	clc    
  4102de:	sti    
  4102df:	pushf  
  4102e0:	cmc    
  4102e1:	push   ecx
  4102e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102e3:	inc    ecx
  4102e4:	(bad)  
  4102e5:	(bad)  
  4102e6:	cwde   
  4102e7:	repz mov ebp,0x450a4575
  4102ed:	jmp    FWORD PTR [ecx]
  4102ef:	in     eax,0xc
  4102f1:	fst    QWORD PTR [ebp+0x1b0cb8e0]
  4102f7:	lahf   
  4102f8:	std    
  4102f9:	inc    bl
  4102fb:	sbb    BYTE PTR [edi-0x18],dl
  4102fe:	mov    edi,0x92ffff21
  410303:	pop    ds
  410304:	jne    0x410309
  410306:	add    BYTE PTR [eax],al
  410308:	clc    
  410309:	xor    al,0xfe
  41030b:	inc    DWORD PTR [ebx+0x6a]
  41030e:	fadd   QWORD PTR [ebx+0x6]
  410311:	pop    eax
  410312:	or     eax,0xfdda55dd
  410317:	jne    0x4102d7
  410319:	inc    edx
  41031a:	in     eax,0x6e
  41031c:	ror    DWORD PTR [edx],0xff
  41031f:	test   dh,al
  410321:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410322:	add    bh,dh
  410324:	adc    ecx,DWORD PTR [ecx]
  410326:	ss pop ebp
  410328:	mov    ecx,0xc66814a3
  41032d:	pop    edi
  41032e:	std    
  41032f:	push   DWORD PTR ds:0x21f87509
  410335:	or     DWORD PTR ds:0xfd9fe484,edx
  41033b:	call   0x400dc1
  410340:	cmp    eax,0x5f5bf534
  410345:	sbb    eax,0x9f2f0006
  41034a:	add    edi,edi
  41034c:	bound  edx,QWORD PTR [ecx+0x1c2f4236]
  410352:	out    dx,eax
  410353:	iret   
  410354:	sbb    eax,0x67f70145
  410359:	nop
  41035a:	inc    ecx
  41035b:	not    BYTE PTR [edi-0x38]
  41035e:	scas   al,BYTE PTR es:[edi]
  41035f:	mov    WORD PTR [ebx],es
  410361:	mov    eax,ds:0x795b8085
  410366:	(bad)  
  410367:	jmp    FWORD PTR [edi]
  410369:	xor    eax,DWORD PTR [esi-0x2cffffbc]
  41036f:	xor    al,0x86
  410371:	inc    esp
  410372:	inc    edi
  410373:	push   ebp
  410374:	cmp    al,0x44
  410376:	ror    DWORD PTR [ecx+eax*1-0x1493d100],cl
  41037d:	call   FWORD PTR [edi]
  41037f:	inc    ebp
  410380:	add    DWORD PTR [ebp-0x72ffed91],eax
  410386:	mov    ds:0x2fb58c8d,al
  41038b:	test   DWORD PTR [ecx],eax
  41038d:	call   0x45330b
  410392:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410393:	jno    0x410346
  410395:	adc    eax,0x56b6856f
  41039a:	les    ecx,FWORD PTR [eax-0x27d0fffc]
  4103a0:	adc    eax,0xd501a2ff
  4103a5:	std    
  4103a6:	call   0xe090bcfe
  4103ab:	xor    al,BYTE PTR [ebp-0x77edd43d]
  4103b1:	outs   dx,DWORD PTR ds:[esi]
  4103b2:	rcr    DWORD PTR [ebx+0x51],1
  4103b5:	dec    edi
  4103b6:	mov    dh,0x11
  4103b8:	aad    0xfd
  4103ba:	shr    bl,0x51
  4103bd:	adc    al,0x9f
  4103bf:	xchg   esi,eax
  4103c0:	sar    edi,0xab
  4103c3:	frstor [edi]
  4103c5:	fnstenv [edi]
  4103c7:	(bad)  
  4103c9:	mov    DWORD PTR [eax],edx
  4103cb:	je     0x410423
  4103cd:	push   ebx
  4103ce:	test   esi,esp
  4103d0:	mov    edi,0x2e000003
  4103d5:	fsubrp st(7),st
  4103d7:	xor    BYTE PTR [ebx-0x7eacc2a7],0xa
  4103de:	cwde   
  4103df:	push   edx
  4103e0:	bound  ebx,QWORD PTR [esi+0x23]
  4103e3:	add    BYTE PTR [edx-0x60738c18],ah
  4103e9:	fucom  st(7)
  4103eb:	add    edx,DWORD PTR [edi-0x21]
  4103ee:	xor    DWORD PTR [edi+ebp*1],eax
  4103f1:	popa   
  4103f2:	xchg   esp,eax
  4103f3:	ret    
  4103f4:	cwde   
  4103f5:	das    
  4103f6:	out    0x3,eax
  4103f8:	das    
  4103f9:	xchg   ah,dh
  4103fb:	sub    al,0x40
  4103fd:	jb     0x410461
  4103ff:	dec    edx
  410400:	call   0xe0c0a865
  410405:	xor    ch,cl
  410407:	add    ebp,DWORD PTR [edi]
  410409:	pop    esi
  41040a:	jb     0x410456
  41040c:	or     BYTE PTR [esi+edi*4],ch
  41040f:	add    al,0x2f
  410411:	addr16 and al,0xb0
  410414:	mov    ds:0xbd8bffeb,eax
  410419:	fsubrp st(7),st
  41041b:	add    edx,DWORD PTR [edi]
  41041d:	lea    edx,[eax+0x24632f03]
  410423:	aam    0x60
  410425:	add    al,0xe9
  410427:	push   ss
  410428:	loope  0x410432
  41042a:	ins    DWORD PTR es:[edi],dx
  41042b:	enter  0xeb4,0x3f
  41042f:	jge    0x410494
  410431:	add    ah,BYTE PTR [ecx-0x30]
  410434:	inc    eax
  410435:	addr16 cld 
  410437:	fild   DWORD PTR [eax]
  410439:	add    cl,cl
  41043b:	retf   
  41043c:	sbb    esi,esp
  41043e:	add    dh,bl
  410440:	add    BYTE PTR [esp+ebp*2-0x16],ch
  410444:	adc    DWORD PTR [edi+eiz*8-0x7],ebx
  410448:	push   eax
  410449:	mov    edi,0xb9391aaf
  41044e:	scas   eax,DWORD PTR es:[edi]
  41044f:	bnd jo 0x410493
  410452:	outs   dx,DWORD PTR ds:[esi]
  410453:	mov    edi,edi
  410455:	call   0x31c2e04b
  41045a:	fstp   QWORD PTR [ebx-0x8]
  41045d:	ds pop eax
  41045f:	aam    0x39
  410461:	das    
  410462:	push   esi
  410463:	enter  0x2e50,0x57
  410467:	stc    
  410468:	mov    esp,DWORD PTR [eax+ecx*4+0x4c10307]
  41046f:	(bad)  
  410470:	enter  0x2ce8,0x71
  410474:	jae    0x4103f7
  410476:	hlt    
  410477:	adc    ch,dh
  410479:	push   es
  41047a:	frstor [ebx+0x43]
  41047d:	(bad)  
  41047e:	ret    
  41047f:	sbb    DWORD PTR [ecx+0x64],esp
  410482:	push   edi
  410483:	mov    cl,0xb8
  410485:	xor    eax,0xd100de2c
  41048a:	or     edx,DWORD PTR [esi+0x61dbe900]
  410490:	sbb    DWORD PTR [ecx+0x7d],0x70
  410494:	std    
  410495:	cmp    ecx,esi
  410497:	fimul  WORD PTR [ebx-0x16f71cbc]
  41049d:	ret    0x0
  4104a0:	jbe    0x410480
  4104a2:	add    BYTE PTR [ebx-0x5],al
  4104a5:	popa   
  4104a6:	inc    ebx
  4104a7:	or     eax,0x740306bb
  4104ac:	clc    
  4104ad:	add    al,0x59
  4104af:	xchg   ecx,eax
  4104b0:	sbb    DWORD PTR [eax-0x15801701],0x78e85c6c
  4104ba:	std    
  4104bb:	add    bl,cl
  4104bd:	mov    WORD PTR [ebp-0x75],cs
  4104c0:	mov    dl,dh
  4104c2:	je     0x410540
  4104c4:	push   ss
  4104c5:	nop
  4104c6:	cmp    DWORD PTR [ebx+0x4d],ebx
  4104c9:	or     al,0xe6
  4104cb:	shl    edi,1
  4104cd:	push   cs
  4104ce:	inc    DWORD PTR [ebx-0x76a195b6]
  4104d4:	retf   
  4104d5:	js     0x410531
  4104d7:	cmp    esi,0xffffffdc
  4104da:	jnp    0x4104e6
  4104dc:	scas   al,BYTE PTR es:[edi]
  4104dd:	dec    eax
  4104de:	std    
  4104df:	call   DWORD PTR [esi-0x7926ecec]
  4104e5:	fcomp  QWORD PTR [esi-0x7d]
  4104e8:	dec    ebx
  4104e9:	xchg   esi,eax
  4104ea:	enter  0x5ac2,0xdc
  4104ee:	push   esi
  4104ef:	mov    esi,0xd78e
  4104f4:	cwde   
  4104f5:	xchg   esp,eax
  4104f6:	popf   
  4104f7:	outs   dx,DWORD PTR ds:[esi]
  4104f8:	xchg   ah,bl
  4104fa:	push   ebp
  4104fb:	jmp    FWORD PTR [ebx+0x30]
  4104fe:	adc    eax,DWORD PTR [eax+0x56]
  410501:	icebp  
  410502:	or     al,0x8
  410504:	add    BYTE PTR [eax],al
  410506:	and    ebx,DWORD PTR [ebx-0x67acfd03]
  41050c:	rol    DWORD PTR [ebx+0x16],cl
  41050f:	pop    ebx
  410510:	ror    DWORD PTR [ebx*4-0x7330d4da],0x67
  410518:	add    BYTE PTR [eax],dh
  41051a:	push   ss
  41051b:	pushf  
  41051c:	dec    ebx
  41051d:	jne    0x4104e8
  41051f:	sub    eax,0xf7d55c2
  410524:	sub    esp,0xdad6
  41052a:	adc    eax,0xd6057592
  41052f:	fld    TBYTE PTR [eax-0x60]
  410532:	xor    DWORD PTR [edx+0x22f8cfd],ebx
  410538:	push   esi
  410539:	std    
  41053a:	shl    BYTE PTR [eax+0x59],1
  41053d:	push   ebx
  41053e:	outs   dx,DWORD PTR ds:[esi]
  41053f:	xchg   BYTE PTR [ecx],al
  410541:	mov    esi,DWORD PTR [ecx]
  410543:	aad    0x7b
  410545:	inc    esp
  410546:	daa    
  410547:	pop    ebp
  410548:	add    al,0x1
  41054a:	test   DWORD PTR cs:[eax+0x5],ecx
  41054e:	das    
  41054f:	add    DWORD PTR [ecx],0x0
  410552:	stos   BYTE PTR es:[edi],al
  410553:	(bad)
  410556:	stos   BYTE PTR es:[edi],al
  410557:	cli    
  410558:	push   ebp
  410559:	std    
  41055a:	nop
  41055b:	and    BYTE PTR [ebx+0x6ee9df55],dh
  410561:	repz xor DWORD PTR [eax-0x579318b0],0x1
  410569:	add    BYTE PTR [eax],al
  41056b:	add    BYTE PTR [ebx+0x680bd5c5],ch
  410571:	(bad)  
  410572:	jl     0x410536
  410574:	dec    esp
  410576:	cmp    dl,dh
  410578:	pop    eax
  410579:	enter  0x15c,0x1c
  41057d:	lds    ebp,FWORD PTR [eax+ecx*8+0x5501816d]
  410584:	mov    ah,0xe1
  410586:	sub    bl,0xf7
  410589:	test   DWORD PTR [ecx],eax
  41058b:	add    ah,bl
  41058d:	inc    esi
  41058e:	mov    eax,0x18643ba
  410593:	add    BYTE PTR [esp+ebp*8+0x4c],bh
  410597:	addr16 jg 0x410542
  41059a:	(bad)  
  41059b:	jmp    DWORD PTR [ebx+0x8fd40f9]
  4105a1:	cwde   
  4105a2:	mov    ah,0xc6
  4105a4:	push   0xffffff9d
  4105a6:	sub    ah,bh
  4105a8:	mov    es,WORD PTR [esi+0x3ffc6f59]
  4105ae:	dec    ebp
  4105af:	xor    ah,cl
  4105b1:	fstp   st(2)
  4105b3:	inc    ebx
  4105b4:	mov    dh,0x21
  4105b6:	in     eax,0x4b
  4105b8:	or     BYTE PTR [edx-0x24],ah
  4105bb:	aas    
  4105bc:	shr    BYTE PTR [esi-0x72],cl
  4105bf:	les    ebp,FWORD PTR [ebp+0x2ed8eb75]
  4105c5:	stos   DWORD PTR es:[edi],eax
  4105c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105c7:	(bad)  
  4105c8:	cmc    
  4105c9:	push   0xfffffff9
  4105cb:	pop    ebx
  4105cc:	std    
  4105cd:	popf   
  4105ce:	daa    
  4105cf:	add    DWORD PTR [eax],0x4f862300
  4105d5:	mov    dl,0x6b
  4105d7:	fsubr  st(7),st
  4105d9:	adc    BYTE PTR [ebx],0x6a
  4105dc:	out    0x80,eax
  4105de:	stos   DWORD PTR es:[edi],eax
  4105df:	mov    eax,ds:0xd894f4d
  4105e4:	jae    0x41062c
  4105e6:	mov    BYTE PTR [ebx+0x59794f38],dh
  4105ec:	daa    
  4105ed:	fsubr  st,st(4)
  4105ef:	bound  esp,QWORD PTR ds:0x266ce65c
  4105f5:	dec    edi
  4105f6:	mov    ch,0x6d
  4105f8:	jo     0x4105d3
  4105fa:	pusha  
  4105fb:	pop    eax
  4105fc:	sbb    eax,0xdb31cce
  410601:	(bad)  
  410602:	sbb    bl,al
  410604:	add    eax,0xefe841b7
  410609:	xor    bl,0x85
  41060c:	push   DWORD PTR [esi+0x6b]
  41060f:	fsubr  st(7),st
  410611:	xchg   eax,ebp
  410613:	repnz add eax,0x72d6a203
  410619:	inc    ebp
  41061a:	sbb    DWORD PTR [ebx+0x54],0xd850085c
  410621:	dec    esi
  410622:	or     DWORD PTR [ebx-0x59],esp
  410625:	xlat   BYTE PTR ds:[ebx]
  410626:	xor    al,0x59
  410628:	mov    dh,0x5b
  41062a:	push   cs
  41062b:	outs   dx,DWORD PTR ds:[esi]
  41062c:	add    BYTE PTR [esi-0x4e8ca79f],dh
  410632:	test   edi,edx
  410634:	mov    ebx,DWORD PTR [eax+eax*1]
  410637:	add    BYTE PTR [ebx+0x6999d385],al
  41063d:	ins    BYTE PTR es:[edi],dx
  41063e:	xor    DWORD PTR [edi-0x627ca563],ebx
  410644:	jp     0x4106b2
  410646:	std    
  410647:	adc    ebp,DWORD PTR [ebx]
  410649:	push   cs
  41064a:	(bad)  
  41064b:	aam    0x7c
  41064d:	rol    DWORD PTR [eax-0x17],cl
  410650:	lods   eax,DWORD PTR ds:[esi]
  410651:	mov    eax,ds:0xa3240e0c
  410656:	pop    esi
  410657:	ret    0x9f63
  41065a:	add    al,0xe9
  41065c:	xlat   BYTE PTR ds:[ebx]
  41065d:	pop    eax
  41065e:	in     al,dx
  41065f:	push   0xe903ecf0
  410664:	sub    al,0x11
  410666:	push   edi
  410667:	sahf   
  410668:	shr    ax,0xa3
  41066c:	fisubr WORD PTR [ebx-0x3]
  41066f:	cli    
  410670:	inc    ebp
  410671:	test   al,0xc1
  410673:	mov    ch,0x6b
  410675:	pop    eax
  410676:	lock adc DWORD PTR [ebx+eiz*4-0x1],edi
  41067b:	call   0x2972e575
  410680:	lea    edi,[ecx-0x56d3552a]
  410686:	shl    esi,0xa8
  410689:	imul   eax,DWORD PTR [eax],0xffffffe9
  41068c:	sub    al,0x3f
  41068e:	xor    BYTE PTR [edi],bl
  410690:	ins    DWORD PTR es:[edi],dx
  410691:	ins    DWORD PTR es:[edi],dx
  410692:	test   al,0x9
  410694:	sub    DWORD PTR [ebp-0x3],ebp
  410697:	imul   BYTE PTR [eax+0xe9007a]
  41069d:	add    BYTE PTR [edi+esi*1],ch
  4106a0:	add    cl,ah
  4106a2:	sub    al,0xde
  4106a4:	je     0x4106a8
  4106a6:	jmp    0x4106e0
  4106a8:	(bad)  
  4106a9:	call   DWORD PTR [esi]
  4106ab:	loope  0x410695
  4106ad:	sbb    esi,DWORD PTR [edx+ebx*1-0x7a3ac401]
  4106b4:	adc    bh,bh
  4106b6:	jecxz  0x410724
  4106b8:	fadd   QWORD PTR [ebx-0x2a]
  4106bb:	in     eax,0xed
  4106bd:	call   0x40713f
  4106c2:	dec    ebp
  4106c3:	adc    ch,bl
  4106c5:	add    ah,ch
  4106c7:	adc    ah,BYTE PTR [ecx-0x2615fd4]
  4106cd:	out    0xba,eax
  4106cf:	bound  eax,QWORD PTR [eax]
  4106d1:	add    BYTE PTR [eax],dh
  4106d3:	in     eax,0x30
  4106d5:	(bad)  
  4106d6:	push   ebp
  4106d7:	loop   0x4106f9
  4106d9:	je     0x410678
  4106db:	jmp    0x410699
  4106dd:	test   BYTE PTR [ebx+ebx*1],cl
  4106e0:	(bad)  
  4106e1:	call   0x402176
  4106e6:	loope  0x4106cc
  4106e8:	xor    dh,dl
  4106ea:	aad    0xe0
  4106ec:	add    BYTE PTR [ecx],al
  4106ee:	xchg   al,ah
  4106f0:	je     0x410705
  4106f2:	or     eax,0x95d62cdd
  4106f7:	loopne 0x41074a
  4106f9:	push   ebx
  4106fa:	mov    esi,0x4642c1cc
  4106ff:	sub    eax,0xade5
  410704:	add    cl,ah
  410706:	add    dh,dh
  410708:	push   ebx
  410709:	rcl    dh,1
  41070b:	inc    ebx
  41070c:	push   esi
  41070d:	mov    al,ds:0x6c9c4c71
  410712:	in     eax,0xb7
  410714:	aaa    
  410715:	sbb    edi,edi
  410717:	mov    edi,0x3de87a
  41071c:	dec    ebp
  41071d:	sbb    eax,0xd79f0c72
  410722:	mov    BYTE PTR [eax+0x2f],bl
  410725:	jns    0x4107a1
  410727:	push   edi
  410728:	aaa    
  410729:	add    BYTE PTR [edx-0x16],dl
  41072c:	sub    eax,0x4ba05368
  410731:	push   ebx
  410732:	sar    bh,0x8
  410735:	mov    es,WORD PTR [ebx+0x11f2f00]
  41073b:	call   0xfe8d4df0
  410740:	adc    al,0x38
  410742:	aad    0xc
  410744:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410745:	lea    eax,[ebx+0x3f]
  410748:	xor    esi,DWORD PTR [esi+0x7a]
  41074b:	push   edi
  41074c:	aaa    
  41074d:	lock push ecx
  41074f:	jmp    0x4b03:0xa053282d
  410756:	sar    bh,0x90
  410759:	icebp  
  41075a:	xchg   BYTE PTR [eax],al
  41075c:	das    
  41075d:	or     eax,DWORD PTR [edi]
  41075f:	xor    BYTE PTR [ecx+0x1b800138],al
  410765:	jp     0x4107c0
  410767:	leave  
  410768:	add    BYTE PTR [eax],al
  41076a:	sub    DWORD PTR [esi+0x1],esi
  41076d:	cmp    dl,ah
  41076f:	ins    BYTE PTR es:[edi],dx
  410770:	aad    0x20
  410772:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410773:	jb     0x410792
  410775:	(bad)  
  410776:	in     al,dx
  410777:	je     0x4107d2
  410779:	div    DWORD PTR [ecx+0x76]
  41077c:	add    DWORD PTR [ecx-0x3f54ed],esp
  410782:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410783:	lds    ecx,FWORD PTR [eax]
  410785:	ret    
  410786:	fstp   TBYTE PTR [edi+0x59]
  410789:	jge    0x4107fd
  41078b:	jbe    0x41078e
  41078d:	push   esi
  41078e:	push   edi
  41078f:	inc    ebx
  410790:	push   edx
  410791:	(bad)  
  410792:	cmp    BYTE PTR [ebx+ebp*4+0x5a],cl
  410796:	data16 mov bh,0x5
  410799:	add    BYTE PTR [edx+0x13805e00],al
  41079f:	fdivrp st(3),st
  4107a1:	add    eax,0xc16cde2f
  4107a6:	sub    BYTE PTR [esi],cl
  4107a8:	xlat   BYTE PTR ds:[ebx]
  4107a9:	shl    DWORD PTR [eax],1
  4107ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107ac:	and    al,0x4b
  4107ae:	add    BYTE PTR [esp+ebx*8+0x13],ch
  4107b2:	pop    ds
  4107b3:	push   ds
  4107b4:	call   0x4132b839
  4107b9:	mov    bh,0x81
  4107bb:	imul   esi,DWORD PTR [esp+edi*8],0xffffffa5
  4107bf:	loope  0x4107a9
  4107c1:	add    ebp,DWORD PTR [edi]
  4107c3:	imul   bh
  4107c5:	rcl    DWORD PTR [eax],1
  4107c7:	fisub  WORD PTR [ecx+ecx*4-0x44]
  4107cb:	push   0x4b8e
  4107d0:	enter  0xa57c,0x4b
  4107d4:	mov    ecx,0x70812104
  4107d9:	jmp    0x410790
  4107db:	fld    TBYTE PTR [eax]
  4107dd:	hlt    
  4107de:	daa    
  4107df:	add    al,0xb4
  4107e1:	mov    ds:0xde2e8bb7,al
  4107e6:	out    0x83,eax
  4107e8:	mov    BYTE PTR [ecx+0x612f053a],ch
  4107ee:	daa    
  4107ef:	ror    BYTE PTR [eax+0x5f],1
  4107f2:	aas    
  4107f3:	dec    ebx
  4107f4:	cld    
  4107f5:	mov    esi,0x6ae04372
  4107fa:	(bad)  
  4107fc:	cmp    eax,0x61b6e81e
  410801:	lock repz jle 0x410876
  410805:	or     eax,0xcc6cf11f
  41080a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41080b:	add    esi,edi
  41080d:	pop    eax
  41080e:	mov    ds:0xe196054a,al
  410813:	inc    ebx
  410814:	cmp    bl,BYTE PTR [ebp+0x6a31c16f]
  41081a:	add    BYTE PTR [esp+0x69],bh
  41081e:	adc    ecx,ecx
  410820:	sbb    DWORD PTR [edx+0x57c84600],ebp
  410826:	inc    ebx
  410827:	ficom  WORD PTR [ebx-0x61]
  41082a:	or     cl,ch
  41082c:	mov    edi,0x606aec54
  410831:	jno    0x41089d
  410833:	jmp    0xbef5:0x35540000
  41083a:	gs pop ebp
  41083c:	sar    BYTE PTR ds:0xc100f7e3,0x40
  410843:	push   0xce74a6fd
  410848:	mov    al,0xe8
  41084a:	sub    al,0x2e
  41084c:	inc    DWORD PTR [ecx+0x62c0ac32]
  410852:	dec    edi
  410853:	or     al,dl
  410855:	xchg   ecx,eax
  410856:	or     BYTE PTR [eax-0x3],ch
  410859:	jle    0x41088b
  41085b:	sub    DWORD PTR [edi+ecx*8-0x76],esi
  41085f:	imul   edi,esi,0x40cf08d4
  410865:	jmp    0xe99c2315
  41086a:	sub    al,0x0
  41086c:	cmp    cl,ah
  41086e:	pop    edi
  41086f:	int    0x89
  410871:	mov    eax,ds:0xe83c5f28
  410876:	mov    esp,0x5fe90122
  41087b:	loope  0x410806
  41087d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41087e:	xor    esi,DWORD PTR [esi+0x7df52101]
  410884:	xor    DWORD PTR [ecx],ebp
  410886:	icebp  
  410887:	and    BYTE PTR [edx+0x3167e51e],0x29
  41088e:	repnz fadd QWORD PTR [eax]
  410891:	mov    ah,0xc1
  410893:	je     0x410816
  410895:	add    BYTE PTR [edx],ah
  410897:	test   DWORD PTR [edx+0x56],edx
  41089a:	add    BYTE PTR [eax],al
  41089c:	je     0x410856
  41089e:	push   cs
  41089f:	mov    dh,0x25
  4108a1:	mov    bh,bh
  4108a3:	mov    ebx,cs
  4108a5:	hlt    
  4108a6:	dec    ebp
  4108a7:	lea    edi,[edx]
  4108a9:	pop    ecx
  4108aa:	mov    eax,ds:0xfde24676
  4108af:	ss out dx,al
  4108b1:	shl    edi,cl
  4108b3:	push   ecx
  4108b5:	lock inc esp
  4108b7:	cwde   
  4108b8:	push   ss
  4108b9:	or     bh,BYTE PTR [ebx+esi*2+0x7]
  4108bd:	fld    QWORD PTR [eax+eax*8+0x16ac92b]
  4108c4:	sub    DWORD PTR [ecx],0xffffff95
  4108c7:	push   eax
  4108c8:	xchg   ecx,eax
  4108c9:	retf   
  4108ca:	call   0xff5797f3
  4108cf:	lea    ebx,[ebx]
  4108d1:	cli    
  4108d2:	dec    ebp
  4108d3:	call   0x419c02
  4108d8:	dec    edx
  4108d9:	and    dh,BYTE PTR [ebp+0xb]
  4108dc:	xor    BYTE PTR [ebx],ah
  4108de:	jle    0x4108db
  4108e0:	fwait
  4108e1:	xchg   edx,eax
  4108e2:	mov    edx,0xc2a53d5e
  4108e7:	mov    al,0x87
  4108e9:	or     esi,esi
  4108eb:	push   ebp
  4108ec:	sbb    eax,0xdee48306
  4108f1:	pop    esp
  4108f2:	jmp    0x11d961b
  4108f7:	push   ebx
  4108f8:	cwde   
  4108f9:	sub    eax,0xac0235fe
  4108fe:	inc    edx
  4108ff:	add    BYTE PTR [eax],al
  410901:	add    bl,dl
  410903:	lea    esp,[ecx]
  410905:	sbb    al,0x8
  410907:	sahf   
  410908:	and    DWORD PTR [ebx],edx
  41090a:	inc    esi
  41090b:	add    al,0xe7
  41090d:	into   
  41090e:	inc    edi
  41090f:	fadd   QWORD PTR [eax+eax*8-0x74e8b4d1]
  410916:	jmp    0x4108ba
  410918:	in     eax,0xfe
  41091a:	ret    
  41091b:	call   0x88ed:0xa2bb8ce9
  410922:	jae    0x4108bd
  410924:	in     eax,dx
  410925:	out    0x3b,eax
  410927:	jns    0x410971
  410929:	(bad)  
  41092a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41092b:	jge    0x4109a7
  41092d:	jnp    0x41097a
  41092f:	jno    0x4109af
  410931:	inc    BYTE PTR [edx+0x4b442279]
  410937:	gs jbe 0x41097d
  41093a:	push   ebx
  41093b:	jge    0x410996
  41093d:	push   edx
  41093e:	loopne 0x4109b6
  410940:	add    ebx,ebp
  410942:	xor    edi,esp
  410944:	lds    esp,FWORD PTR [ebx]
  410946:	cmp    esi,esi
  410948:	lds    esp,FWORD PTR [ebx]
  41094a:	aas    
  41094b:	dec    edi
  41094c:	add    al,BYTE PTR [eax]
  41094e:	das    
  41094f:	js     0x4109cf
  410951:	es cs jne 0x410956
  410955:	push   edi
  410956:	xlat   BYTE PTR ds:[ebx]
  410957:	push   ds
  410958:	ss (bad) 
  41095a:	mov    eax,0xab0e41f9
  41095f:	cli    
  410960:	add    eax,DWORD PTR [eax]
  410962:	das    
  410963:	fild   DWORD PTR [ecx]
  410965:	lea    eax,[eax]
  410967:	add    bl,ch
  410969:	mov    al,ds:0xc5074fdd
  41096e:	icebp  
  41096f:	(bad)  
  410970:	push   edi
  410971:	or     eax,0x1088f784
  410976:	ja     0x4109bb
  410978:	dec    ebx
  410979:	xchg   ebp,eax
  41097a:	mov    cl,0x69
  41097c:	cs (bad) 
  41097e:	(bad)  
  410980:	in     al,dx
  410981:	je     0x4109cb
  410983:	adc    al,0xc7
  410985:	xchg   cl,al
  410987:	push   DWORD PTR [ebp+0x28f57ea5]
  41098d:	fisubr WORD PTR [ebx-0x1d]
  410990:	cs fsubrp st(7),st
  410993:	dec    eax
  410994:	and    ecx,esi
  410996:	cli    
  410997:	ret    
  410998:	inc    eax
  410999:	push   esp
  41099a:	in     al,dx
  41099b:	inc    ebx
  41099c:	push   ds
  41099d:	push   ds
  41099e:	call   0xe81f81a9
  4109a3:	add    esp,DWORD PTR [edx-0x2b7621f]
  4109a9:	stos   BYTE PTR es:[edi],al
  4109aa:	cmc    
  4109ab:	jge    0x4109cf
  4109ad:	xlat   BYTE PTR ds:[ebx]
  4109ae:	imul   eax,esp,0x2e
  4109b1:	fsubrp st(7),st
  4109b3:	pop    ebx
  4109b4:	mov    bh,bl
  4109b6:	out    0x3,eax
  4109b8:	xlat   BYTE PTR ds:[ebx]
  4109b9:	mov    ebp,0xd8adff53
  4109be:	imul   DWORD PTR ds:0x78d7de6d
  4109c4:	lods   al,BYTE PTR ds:[esi]
  4109c5:	shl    DWORD PTR [ebx+0x17de2f04],0x5c
  4109cc:	add    BYTE PTR [eax],al
  4109ce:	mov    bh,0xde
  4109d0:	out    0x3,eax
  4109d2:	stos   DWORD PTR es:[edi],eax
  4109d3:	popf   
  4109d4:	adc    al,0xbc
  4109d6:	mov    ebx,0x2c03cb29
  4109db:	fsubrp st(7),st
  4109dd:	pop    ebx
  4109de:	or     BYTE PTR [ebx-0x7a],ah
  4109e1:	inc    edi
  4109e2:	dec    edx
  4109e3:	pop    ebx
  4109e4:	cmp    esp,DWORD PTR [eax]
  4109e6:	push   edi
  4109e7:	(bad)  
  4109e9:	add    ebp,DWORD PTR [edi]
  4109eb:	(bad)
  4109ef:	pop    ecx
  4109f0:	jnp    0x410a12
  4109f2:	inc    ebx
  4109f3:	(bad)  
  4109f5:	add    edi,DWORD PTR [edx-0x68f3f3e7]
  4109fb:	aas    
  4109fc:	mov    DWORD PTR [edi+ebp*1],eax
  4109ff:	pop    ecx
  410a00:	stos   DWORD PTR es:[edi],eax
  410a01:	pop    ds
  410a02:	cmp    ecx,DWORD PTR [esi]
  410a04:	aas    
  410a05:	icebp  
  410a06:	fs retf 
  410a08:	add    BYTE PTR [ecx+0x54c592c],ch
  410a0e:	aas    
  410a0f:	fcmovnb st,st(0)
  410a11:	mov    eax,0xe96adaf5
  410a16:	sbb    eax,0xe4eb6a9e
  410a1b:	and    al,BYTE PTR [ecx+ebp*8]
  410a1e:	sub    al,0x76
  410a20:	mov    edi,0xf667e818
  410a25:	in     al,0x3c
  410a27:	mov    WORD PTR [ecx-0x17],es
  410a2a:	sbb    al,0xf2
  410a2c:	or     eax,DWORD PTR [ecx+0x6900de2c]
  410a32:	add    BYTE PTR [eax],al
  410a34:	not    cl
  410a36:	std    
  410a37:	hlt    
  410a38:	ror    dl,1
  410a3a:	inc    eax
  410a3b:	jmp    0x25cce926
  410a40:	dec    edi
  410a41:	cli    
  410a42:	push   eax
  410a43:	push   ecx
  410a44:	sub    BYTE PTR [ecx],dl
  410a46:	inc    edx
  410a47:	adc    ecx,DWORD PTR [ebx+0x69b6f52e]
  410a4d:	push   edx
  410a4e:	inc    esp
  410a4f:	add    eax,0xe96b15d3
  410a54:	neg    bh
  410a56:	std    
  410a57:	hlt    
  410a58:	aam    0xce
  410a5a:	inc    eax
  410a5b:	jmp    0x8ec477a5
  410a60:	call   0xbfc7603c
  410a65:	cdq    
  410a66:	adc    ch,BYTE PTR [ecx]
  410a68:	xor    ecx,DWORD PTR ds:0xde869afe
  410a6e:	call   0xfda4fb57
  410a73:	mov    edi,0xfa252152
  410a78:	xor    esp,DWORD PTR [ebp-0x2f]
  410a7b:	bound  ebp,QWORD PTR [eax-0x3f]
  410a7e:	adc    al,0x40
  410a80:	push   0x860000de
  410a85:	pusha  
  410a86:	jns    0x410aac
  410a88:	xchg   BYTE PTR [ecx+0xe],dh
  410a8b:	test   DWORD PTR [edi-0x26],ebp
  410a8e:	add    BYTE PTR [eax],al
  410a90:	ins    BYTE PTR es:[edi],dx
  410a91:	fild   QWORD PTR [eax+0x7b]
  410a94:	jb     0x410a78
  410a96:	xchg   al,ch
  410a98:	add    BYTE PTR [eax],al
  410a9a:	not    DWORD PTR [ebx]
  410a9c:	(bad)  
  410a9d:	dec    edi
  410a9f:	and    al,0x21
  410aa1:	adc    bl,dl
  410aa3:	and    BYTE PTR [edi],cl
  410aa5:	test   BYTE PTR [esi-0x64ffff26],al
  410aab:	in     eax,0x21
  410aad:	add    BYTE PTR ds:0xd45000e1,dl
  410ab3:	mov    bh,0xe5
  410ab5:	aaa    
  410ab6:	mov    bl,0x1a
  410ab8:	inc    DWORD PTR [esi+edx*8-0x2a020073]
  410abf:	inc    eax
  410ac0:	xor    esi,edx
  410ac2:	inc    ebp
  410ac3:	fisubr DWORD PTR [edx+0x16]
  410ac6:	jmp    0x3a570894
  410acb:	push   0x3d
  410acd:	add    BYTE PTR [ebp+0x12],dl
  410ad0:	add    DWORD PTR [ebp-0x8],esi
  410ad3:	or     dl,bh
  410ad5:	retf   
  410ad6:	(bad)  
  410ad7:	loopne 0x410a61
  410ad9:	inc    esp
  410ada:	repnz imul ebp,eax,0xe0d700
  410ae1:	sbb    BYTE PTR [ebp-0x56d28c20],0xd2
  410ae8:	mov    DWORD PTR ds:0x42b452,ebx
  410aee:	sbb    DWORD PTR [ebx-0x31597ff],edx
  410af4:	cmp    eax,0xf961fe00
  410af9:	add    BYTE PTR [esi+0x87519],dl
  410aff:	add    BYTE PTR [edi],ch
  410b01:	cli    
  410b02:	jo     0x410b27
  410b04:	jnp    0x410b7c
  410b06:	add    DWORD PTR [eax],eax
  410b08:	mov    ds:0x2c0420ea,al
  410b0d:	ja     0x410b10
  410b0f:	call   0xfe84f02a
  410b14:	inc    esp
  410b15:	fs pop ecx
  410b17:	mov    DWORD PTR [edx-0x45],edx
  410b1a:	inc    ebx
  410b1b:	sub    DWORD PTR [edi+0x73],0x7e
  410b1f:	shr    BYTE PTR [edi],0x77
  410b22:	add    edi,edi
  410b24:	add    BYTE PTR [eax],al
  410b26:	out    0x43,al
  410b28:	pop    ecx
  410b29:	aaa    
  410b2a:	add    edi,edi
  410b2c:	mov    al,ds:0xde33d96d
  410b31:	ss add eax,ebp
  410b34:	jmp    0xa2410ca9
  410b39:	jmp    0x7571035b
  410b3e:	add    eax,ebp
  410b40:	sahf   
  410b41:	add    DWORD PTR ds:[eax],eax
  410b44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b45:	mov    ecx,0x76330f20
  410b4a:	hlt    
  410b4b:	test   bl,al
  410b4d:	jne    0x410b50
  410b4f:	add    BYTE PTR [edx+0x7f2420b1],dh
  410b55:	push   0xe5475228
  410b5a:	sub    eax,DWORD PTR [edx+0x2f]
  410b5d:	test   al,0x75
  410b5f:	or     DWORD PTR [ebx],0x7d
  410b62:	add    al,BYTE PTR [eax]
  410b64:	add    BYTE PTR [eax],al
  410b66:	das    
  410b67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b68:	pop    esp
  410b69:	push   ebp
  410b6a:	(bad)  
  410b6b:	jbe    0x410b6e
  410b6d:	test   DWORD PTR [edi+0x74],ebp
  410b70:	outs   dx,BYTE PTR ds:[esi]
  410b71:	inc    ebx
  410b72:	dec    ebx
  410b73:	jl     0x410b7e
  410b75:	pop    esp
  410b76:	push   ebx
  410b77:	test   ch,cl
  410b79:	imul   eax,DWORD PTR ds:0xec76e8de,0xffffffb9
  410b80:	ret    
  410b81:	mov    bl,0x8
  410b83:	mov    ds:0x7646c0ba,eax
  410b88:	ror    BYTE PTR [ebp+0x71],cl
  410b8b:	arpl   WORD PTR [edi+edi*4+0xc],si
  410b8f:	(bad)  
  410b90:	xchg   edi,eax
  410b91:	mov    al,0xd6
  410b93:	fdivr  QWORD PTR [edi-0x17e07d25]
  410b99:	inc    esp
  410b9a:	cmp    edx,edx
  410b9c:	clc    
  410b9d:	ret    
  410b9e:	dec    eax
  410b9f:	pop    eax
  410ba0:	xchg   ebx,eax
  410ba1:	pop    ds
  410ba2:	or     edx,DWORD PTR [ebp-0x55]
  410ba5:	pop    ds
  410ba6:	pop    ss
  410ba7:	push   ebp
  410ba8:	xchg   ebx,eax
  410ba9:	pop    ds
  410baa:	adc    edi,eax
  410bac:	push   es
  410bad:	or     ah,ch
  410baf:	call   0xc962b9a4
  410bb4:	pop    ss
  410bb5:	icebp  
  410bb6:	pop    eax
  410bb7:	fiadd  WORD PTR [edx]
  410bb9:	cmc    
  410bba:	jge    0x410c0d
  410bbc:	sub    ebp,eax
  410bbe:	sub    BYTE PTR [esi],cl
  410bc0:	push   edx
  410bc1:	push   es
  410bc2:	add    cl,cl
  410bc4:	not    DWORD PTR [edi+ebp*2]
  410bc7:	fisub  WORD PTR [edx+0x1]
  410bca:	add    BYTE PTR [eax],al
  410bcc:	out    dx,eax
  410bcd:	iret   
  410bce:	daa    
  410bcf:	add    al,0x26
  410bd1:	add    al,BYTE PTR [esp+ebx*1]
  410bd4:	pop    ebx
  410bd5:	fdiv   QWORD PTR [esi-0x5139f348]
  410bdb:	pop    ebx
  410bdc:	shr    ecx,1
  410bde:	retf   
  410bdf:	jmp    0x410baa
  410be1:	mov    dh,BYTE PTR ds:0x1356d943
  410be7:	call   0xe8546f08
  410bec:	and    BYTE PTR [esi+0x17],dh
  410bef:	mov    ah,0x2f
  410bf1:	fisub  WORD PTR [edi-0x3f]
  410bf4:	xor    al,0xdd
  410bf6:	add    ah,bh
  410bf8:	sub    DWORD PTR [ebx+0x33],esp
  410bfb:	pop    ebp
  410bfc:	cmc    
  410bfd:	pop    ds
  410bfe:	add    DWORD PTR [ecx-0x2e],edx
  410c01:	jne    0x410c02
  410c03:	call   0x4446866d
  410c08:	in     al,dx
  410c09:	arpl   WORD PTR [edx+0x5dd388a5],cx
  410c0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c10:	mov    DWORD PTR [edi-0x1d],edx
  410c13:	pushf  
  410c14:	jmp    0x4f76:0xa99c00da
  410c1b:	call   0x8742:0xbff6af76
  410c22:	call   0xfda5046a
  410c27:	ins    DWORD PTR es:[edi],dx
  410c28:	repz rol DWORD PTR [esi+ebp*1-0x61ff21d5],cl
  410c30:	add    BYTE PTR [eax],al
  410c32:	aam    0xd8
  410c34:	sub    cl,0x2c
  410c37:	popa   
  410c38:	adc    esi,ebp
  410c3a:	cmp    al,0x1e
  410c3c:	add    DWORD PTR [esi+eiz*8+0x65],ebx
  410c40:	push   eax
  410c41:	sbb    ch,BYTE PTR [eax+0x60]
  410c44:	adc    ecx,ecx
  410c46:	sbb    bl,BYTE PTR [esi]
  410c48:	add    DWORD PTR [ecx],edi
  410c4a:	ins    BYTE PTR es:[edi],dx
  410c4b:	retf   0xfa58
  410c4e:	in     al,dx
  410c4f:	popa   
  410c50:	mov    al,cl
  410c52:	jmp    0xe26480ba
  410c57:	add    bh,ch
  410c59:	aaa    
  410c5a:	std    
  410c5b:	push   esp
  410c5c:	add    al,0x76
  410c5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c5f:	and    DWORD PTR [eax+ebp*1-0x6b],esi
  410c63:	pop    esp
  410c64:	cmp    ah,cl
  410c66:	xchg   DWORD PTR [ebp+ecx*1-0x7e201ba2],esp
  410c6d:	add    BYTE PTR [esi+0x15002ded],0xb2
  410c74:	add    eax,0xe8586b74
  410c79:	pop    es
  410c7a:	call   0xca58:0x6b7547d5
  410c81:	add    bl,ch
  410c83:	jl     0x410c07
  410c85:	ror    BYTE PTR [edx-0x79c77dc9],0x29
  410c8c:	push   ss
  410c8d:	push   eax
  410c8e:	loope  0x410c55
  410c90:	pop    eax
  410c91:	push   ss
  410c92:	xchg   esi,eax
  410c93:	fst    QWORD PTR [edi-0x5d]
  410c96:	add    BYTE PTR [eax],al
  410c98:	jp     0x410c98
  410c9a:	inc    edx
  410c9b:	add    ch,ch
  410c9d:	aam    0x81
  410c9f:	retf   
  410ca0:	jbe    0x410c52
  410ca2:	add    al,BYTE PTR [ebx+0x3b46d4fd]
  410ca8:	fwait
  410ca9:	mov    eax,ds:0x1c79b279
  410cae:	adc    eax,0xfd9d3520
  410cb3:	pop    esi
  410cb4:	sub    BYTE PTR [ebx],bl
  410cb6:	add    BYTE PTR [ebp+esi*8-0x4c],dh
  410cba:	mov    ch,0x5a
  410cbc:	pop    es
  410cbd:	fucomp st(0)
  410cbf:	int    0xca
  410cc1:	fld    DWORD PTR [eax]
  410cc3:	neg    BYTE PTR [ebx]
  410cc5:	ins    DWORD PTR es:[edi],dx
  410cc6:	rol    DWORD PTR [ebx+0x16],cl
  410cc9:	(bad)  [edx+0x676e5ad8]
  410ccf:	add    BYTE PTR [esi-0x29bc21cf],bl
  410cd5:	mov    ah,0x14
  410cd7:	pop    ecx
  410cd8:	xlat   BYTE PTR ds:[ebx]
  410cd9:	fsub   st(1),st
  410cdb:	push   ds
  410cdc:	dec    ebp
  410cdd:	sbb    eax,ecx
  410cdf:	call   0x250eb3ae
  410ce4:	xlat   BYTE PTR ds:[ebx]
  410ce5:	int    0xb6
  410ce7:	rcl    BYTE PTR [edi+0x2f5002b2],0xf7
  410cee:	and    eax,DWORD PTR [eax]
  410cf0:	and    BYTE PTR [ecx],cl
  410cf2:	inc    esp
  410cf3:	dec    edi
  410cf4:	xchg   edi,eax
  410cf5:	addr16 cmp eax,0x5ceca0fe
  410cfb:	add    DWORD PTR [eax],0x0
  410cfe:	je     0x410d62
  410d00:	push   ss
  410d01:	imul   BYTE PTR [edx]
  410d03:	daa    
  410d04:	push   edi
  410d05:	inc    edx
  410d06:	das    
  410d07:	jne    0x410cbe
  410d09:	or     edx,DWORD PTR ds:0x33144000
  410d0f:	sar    di,0xd2
  410d13:	sub    ecx,DWORD PTR [edx-0x3e]
  410d16:	sbb    al,0xb7
  410d18:	mov    dl,bl
  410d1a:	xor    BYTE PTR [ebx],cl
  410d1c:	inc    ebp
  410d1d:	dec    edi
  410d1e:	pop    eax
  410d1f:	cmp    DWORD PTR [ecx],0x4d76ef0f
  410d25:	push   esp
  410d26:	mov    ah,0xca
  410d28:	sub    ebx,0x174ef
  410d2e:	loope  0x410d4f
  410d30:	test   eax,0x1772fd9
  410d35:	push   0x2f
  410d37:	sbb    BYTE PTR ds:0xd8756cdd,bl
  410d3d:	inc    BYTE PTR [edx+0x45]
  410d40:	pop    ss
  410d41:	inc    eax
  410d42:	das    
  410d43:	hlt    
  410d44:	dec    eax
  410d45:	or     edx,DWORD PTR [ebp-0x1d72568d]
  410d4b:	mov    ah,0x4
  410d4d:	push   0x112cd636
  410d52:	pop    es
  410d53:	dec    ebp
  410d54:	xor    eax,0x76eae8fe
  410d59:	shl    edx,0x20
  410d5c:	inc    eax
  410d5d:	out    0xf7,eax
  410d5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d60:	add    DWORD PTR [eax],eax
  410d62:	add    BYTE PTR [eax],al
  410d64:	sub    al,BYTE PTR [ebx+0x2]
  410d67:	add    BYTE PTR [edi],ch
  410d69:	ficom  WORD PTR [ecx]
  410d6b:	sbb    BYTE PTR [edi-0xc],bl
  410d6e:	out    0x8e,eax
  410d70:	inc    ebx
  410d71:	cs push 0x4b
  410d74:	mov    cl,0x76
  410d76:	lea    edx,[eax-0x57]
  410d79:	pop    edi
  410d7a:	ins    BYTE PTR es:[edi],dx
  410d7b:	inc    ebx
  410d7c:	and    bh,BYTE PTR [ebx+0x2680b66c]
  410d82:	add    ebp,DWORD PTR ds:[edi]
  410d85:	fidivr WORD PTR [edi+0x6f]
  410d88:	js     0x410d68
  410d8a:	out    0x8e,eax
  410d8c:	jmp    0x410dbb
  410d8e:	mov    bh,0x8c
  410d90:	jb     0x410da0
  410d92:	mov    edi,0x4e9cc82b
  410d97:	inc    eax
  410d98:	mov    bl,0x9e
  410d9a:	not    BYTE PTR [esi-0x49d8a560]
  410da0:	xor    BYTE PTR [ebx-0x397256d9],ch
  410da6:	or     al,0xc4
  410da8:	dec    eax
  410da9:	add    BYTE PTR [ecx+0x31],ah
  410dac:	das    
  410dad:	fsubrp st(7),st
  410daf:	mov    ?,WORD PTR [ebx+0x3140149c]
  410db5:	add    BYTE PTR [esi],ah
  410db7:	add    ebp,DWORD PTR [edi]
  410db9:	push   ds
  410dba:	mov    cl,0xb6
  410dbc:	daa    
  410dbd:	cs call 0xed93fb0d
  410dc3:	xchg   al,dl
  410dc5:	jmp    0x41e1aa
  410dca:	adc    BYTE PTR [ebp+0x55],bl
  410dcd:	add    eax,0x4055b2f
  410dd2:	in     al,dx
  410dd3:	pop    ebp
  410dd4:	adc    al,0x24
  410dd6:	rcr    BYTE PTR [edx],cl
  410dd8:	call   0xfb2a8ee0
  410ddd:	jge    0x410dbf
  410ddf:	jg     0x410e0b
  410de1:	add    al,0x81
  410de3:	pop    edi
  410de4:	add    ah,bl
  410de6:	dec    eax
  410de7:	int    0x40
  410de9:	jmp    0xc821af9a
  410dee:	in     al,dx
  410def:	pop    esi
  410df0:	std    
  410df1:	adc    al,0x20
  410df3:	jbe    0x410e26
  410df5:	xchg   esi,eax
  410df6:	lock pop edi
  410df8:	test   BYTE PTR [ecx-0x337e2f19],ch
  410dfe:	dec    eax
  410dff:	add    DWORD PTR [ecx-0x17],0x8903982c
  410e06:	icebp  
  410e07:	sbb    eax,DWORD PTR [ecx]
  410e09:	call   0x95546d70
  410e0e:	sbb    eax,0xaad1011e
  410e13:	add    DWORD PTR [ecx-0x17],0xc1655ec6
  410e1a:	add    bl,BYTE PTR [ecx+eax*1]
  410e1d:	inc    esi
  410e1e:	inc    esi
  410e1f:	inc    esi
  410e20:	pop    gs
  410e22:	sub    al,0x53
  410e24:	lock ins BYTE PTR es:[edi],dx
  410e26:	sbb    ebx,ebp
  410e28:	sbb    ebx,eax
  410e2a:	or     DWORD PTR [ecx],ecx
  410e2c:	(bad)  
  410e2d:	cld    
  410e2e:	add    BYTE PTR [eax],al
  410e30:	fmul   st(4),st
  410e32:	inc    eax
  410e33:	jmp    0xf6b52cdf
  410e38:	das    
  410e39:	pop    esi
  410e3a:	add    cl,ch
  410e3c:	sub    al,0xd2
  410e3e:	sbb    BYTE PTR [edi-0x243f0d9f],bl
  410e44:	in     al,dx
  410e45:	pop    ebp
  410e46:	xor    ch,BYTE PTR [ecx]
  410e48:	icebp  
  410e49:	(bad)  
  410e4a:	shl    BYTE PTR [ebp+0x3a],0x69
  410e4e:	dec    esp
  410e4f:	or     eax,0x98ff6737
  410e54:	xor    ecx,DWORD PTR [ecx+0x6]
  410e57:	bound  ebp,QWORD PTR [edx+0x48]
  410e5a:	jmp    0x410e77
  410e5c:	jae    0x410e7d
  410e5e:	add    al,0x0
  410e60:	(bad)  
  410e61:	ss mov ch,ah
  410e64:	inc    ebp
  410e65:	or     eax,0x1db800e
  410e6a:	fadd   QWORD PTR [ebx-0x2a]
  410e6d:	loope  0x410ec5
  410e6f:	push   edi
  410e70:	and    edx,DWORD PTR [ecx-0x45]
  410e73:	add    BYTE PTR [ecx+0x20],bh
  410e76:	std    
  410e77:	push   ebp
  410e78:	cdq    
  410e79:	mul    BYTE PTR [edx+edx*1+0x3d80e256]
  410e80:	mov    dh,0xbb
  410e82:	inc    edx
  410e83:	add    BYTE PTR [esi-0x1b17e96a],al
  410e89:	sbb    bh,bh
  410e8b:	call   DWORD PTR [edx]
  410e8d:	mov    eax,ds:0x46150e71
  410e92:	loope  0x410e72
  410e94:	add    BYTE PTR [eax],al
  410e96:	(bad)
  410e99:	mov    BYTE PTR [ebx+0x5643dc01],0xe2
  410ea0:	push   esi
  410ea1:	inc    DWORD PTR [ebx+0x46400fcd]
  410ea7:	xchg   edi,edi
  410ea9:	push   edi
  410eaa:	retf   
  410eab:	xchg   ebp,eax
  410eac:	in     eax,dx
  410ead:	call   0x41eb73
  410eb2:	mov    ebp,0xb6050525
  410eb7:	loopne 0x410eb9
  410eb9:	add    BYTE PTR [esi+0x16ffffdf],ch
  410ebf:	xor    DWORD PTR [edx-0x4403c13a],ecx
  410ec5:	add    DWORD PTR [esi],eax
  410ec7:	xchg   DWORD PTR [ecx],eax
  410ec9:	(bad)  
  410eca:	ret    
  410ecb:	in     al,dx
  410ecc:	push   eax
  410ecd:	mov    edx,DWORD PTR [eax+0x9]
  410ed0:	adc    BYTE PTR [ebp+0x7d8be117],bh
  410ed6:	fisub  DWORD PTR [esi-0x3d]
  410ed9:	call   0xbe700d
  410ede:	das    
  410edf:	mov    eax,ds:0x375aff18
  410ee4:	cmp    al,0x74
  410ee6:	fistp  DWORD PTR [ebx+0x7395c15]
  410eec:	add    eax,0x883af383
  410ef1:	(bad)
  410ef4:	add    BYTE PTR [eax],0x2f
  410ef7:	sbb    al,0xdf
  410ef9:	enter  0x0,0xed
  410efd:	inc    edx
  410efe:	add    DWORD PTR [ebp-0x4c],edx
  410f01:	fiadd  DWORD PTR [ecx+0x14aebeb]
  410f07:	add    BYTE PTR [edi-0x13269e67],ch
  410f0d:	inc    esi
  410f0e:	add    dl,BYTE PTR [ebx-0x1f]
  410f11:	repz xchg edi,edx
  410f14:	clc    
  410f15:	dec    ebx
  410f16:	out    dx,eax
  410f17:	mov    edi,0x25186
  410f1c:	das    
  410f1d:	ret    0xcf75
  410f20:	push   0xffffffab
  410f22:	cmp    esp,edi
  410f24:	seta   BYTE PTR [edx]
  410f27:	add    BYTE PTR [edx+0x504f4581],ch
  410f2d:	cdq    
  410f2e:	or     DWORD PTR [ebx+0x2e297671],ecx
  410f34:	inc    eax
  410f35:	add    edi,DWORD PTR [esp+eax*4]
  410f38:	push   esp
  410f39:	jno    0x410f29
  410f3b:	mov    edx,gs
  410f3d:	or     dl,ch
  410f3f:	addr16 inc edi
  410f41:	or     al,al
  410f43:	dec    DWORD PTR [eax-0x50fffeba]
  410f49:	pop    esp
  410f4a:	push   ss
  410f4b:	ins    BYTE PTR es:[edi],dx
  410f4c:	cmp    al,0x85
  410f4e:	add    edi,esi
  410f50:	out    0x2f,eax
  410f52:	inc    ecx
  410f53:	std    
  410f54:	out    dx,eax
  410f55:	fisub  WORD PTR [ecx-0x1821d0d3]
  410f5b:	mov    dl,ah
  410f5d:	and    al,0xe8
  410f5f:	add    eax,DWORD PTR [eax]
  410f61:	add    BYTE PTR [esi-0x58],ch
  410f64:	push   esp
  410f65:	cmp    edx,edi
  410f67:	sub    bh,ah
  410f69:	add    ebp,DWORD PTR [edi]
  410f6b:	pop    edi
  410f6c:	test   BYTE PTR [ebx-0x2c],cl
  410f6f:	pop    ebx
  410f70:	mov    dh,0x3
  410f72:	mov    edx,0xc13e4761
  410f77:	pop    ebx
  410f78:	aaa    
  410f79:	(bad)  
  410f7a:	mov    bl,0x26
  410f7c:	fwait
  410f7d:	cmp    al,0xb1
  410f7f:	inc    esi
  410f80:	push   ebx
  410f81:	cmc    
  410f82:	das    
  410f83:	fisub  WORD PTR [edx-0x4a]
  410f86:	xor    al,0x67
  410f88:	call   0x913c:0x7b26b38e
  410f8f:	inc    esi
  410f90:	jno    0x410f87
  410f92:	das    
  410f93:	fisubr WORD PTR [eax+0x38]
  410f96:	and    BYTE PTR [ebx],0xe7
  410f99:	add    eax,DWORD PTR [ecx]
  410f9b:	loope  0x410f6e
  410f9d:	add    al,dl
  410f9f:	inc    esi
  410fa0:	mov    ah,0xf0
  410fa2:	ja     0x411003
  410fa4:	push   edx
  410fa5:	pop    es
  410fa6:	xor    BYTE PTR [ecx+0x28],dh
  410fa9:	test   eax,0x4572bc2e
  410fae:	(bad)  
  410faf:	fld    QWORD PTR [edx]
  410fb1:	inc    ebx
  410fb2:	push   eax
  410fb3:	and    edi,DWORD PTR ss:[ecx+eax*2]
  410fb7:	jmp    0x411016
  410fb9:	jnp    0x410f3b
  410fbb:	aam    0xa7
  410fbd:	add    ebp,DWORD PTR [ebx+ebx*2+0x6960b6e8]
  410fc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410fc5:	or     eax,DWORD PTR [eax]
  410fc7:	add    BYTE PTR [edi+0x69],bh
  410fca:	ins    BYTE PTR es:[edi],dx
  410fcb:	inc    ebx
  410fcc:	adc    eax,0xa5d2fe5b
  410fd1:	push   ds
  410fd2:	add    BYTE PTR [edx-0x17],ah
  410fd5:	out    0x87,al
  410fd7:	xor    al,0x6c
  410fd9:	pop    eax
  410fda:	std    
  410fdb:	out    0x4b,al
  410fdd:	mov    ds:0x672ce835,eax
  410fe2:	lock ins BYTE PTR es:[edi],dx
  410fe4:	sbb    eax,0x15901bd2
  410fe9:	fiadd  WORD PTR [eax]
  410feb:	jmp    0xbd117197
  410ff0:	adc    al,0x5c
  410ff2:	(bad)  
  410ff3:	jmp    0x3488ae24
  410ff8:	add    al,BYTE PTR [esi+0x1e]
  410ffb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ffc:	hlt    
  410ffd:	pop    ebx
  410ffe:	mov    DWORD PTR [edi+eiz*1],edx
  411001:	gs pop ebx
  411003:	loope  0x41106a
  411005:	ror    BYTE PTR [eax],cl
  411007:	pop    esp
  411008:	outs   dx,BYTE PTR ds:[esi]
  411009:	push   ds
  41100a:	push   esi
  41100b:	push   ds
  41100c:	add    edx,0x18
  41100f:	pushf  
  411010:	push   0xf763e55a
  411015:	fld    QWORD PTR [eax]
  411017:	arpl   bx,sp
  411019:	pop    ss
  41101a:	je     0x411011
  41101c:	enter  0x56e0,0x51
  411020:	and    al,BYTE PTR [ebp-0x3]
  411023:	push   esi
  411024:	jmp    0x8369:0x2ce8ff48
  41102b:	sbb    DWORD PTR [eax],eax
  41102d:	add    BYTE PTR [esi],dl
  41102f:	pop    esp
  411030:	std    
  411031:	daa    
  411032:	sub    ebx,esi
  411034:	inc    eax
  411035:	mov    al,ds:0x2a8a557f
  41103a:	fs mov eax,0xe2f13059
  411040:	add    BYTE PTR [ecx+eiz*4+0x6b0d8146],dh
  411047:	pop    esi
  411048:	in     al,dx
  411049:	popf   
  41104a:	and    BYTE PTR [edx-0x3],bl
  41104d:	add    BYTE PTR [ebp+0x5a8d562f],dh
  411053:	ds pop ebp
  411055:	add    DWORD PTR [esi],edx
  411057:	fsubp  st(0),st
  411059:	hlt    
  41105a:	and    dl,0x0
  41105d:	lea    ecx,[edx+0x3e]
  411060:	sbb    DWORD PTR [eax-0x2f],edx
  411063:	mov    es,WORD PTR ds:0xe52d988b
  411069:	add    dh,al
  41106b:	adc    al,0xff
  41106d:	lea    esp,[edx]
  41106f:	ds or  eax,0x31e37c51
  411075:	(bad)  ds:0xd60000da
  41107b:	pop    ebp
  41107c:	gs sbb bl,dh
  41107f:	and    ch,bh
  411081:	dec    edi
  411082:	aas    
  411083:	cdq    
  411084:	and    DWORD PTR [edi+ecx*1],esp
  411087:	xor    DWORD PTR [ecx],esp
  411089:	and    BYTE PTR [ecx+0x46105cee],dh
  41108f:	loop   0x411014
  411091:	rol    BYTE PTR [eax],0x0
  411094:	fwait
  411095:	sti    
  411096:	mov    eax,DWORD PTR [edx+edi*2-0x1f]
  41109a:	push   eax
  41109b:	lea    ecx,[edx+0x3e]
  41109e:	sbb    DWORD PTR [eax+0x3],edx
  4110a1:	cdq    
  4110a2:	and    DWORD PTR [esi+esi*4],esp
  4110a5:	data16 jns 0x4110cc
  4110a8:	bound  eax,QWORD PTR ds:0xdd57cc4a
  4110ae:	jmp    0xfee5d5b6
  4110b3:	mov    DWORD PTR [edx-0x17ceec7],ecx
  4110b9:	adc    ecx,DWORD PTR [edi]
  4110bb:	test   bl,ah
  4110bd:	fadd   QWORD PTR [eax]
  4110bf:	add    BYTE PTR [ebp-0x60],cl
  4110c2:	push   cs
  4110c3:	test   bl,cl
  4110c5:	fadd   QWORD PTR [eax]
  4110c7:	add    BYTE PTR [edi],ch
  4110c9:	les    esi,FWORD PTR [ebp-0x4fb9b8dd]
  4110cf:	xor    BYTE PTR [edi-0x20],bh
  4110d2:	lods   eax,DWORD PTR ds:[esi]
  4110d3:	and    edi,DWORD PTR [edi]
  4110d5:	retf   0x23d5
  4110d8:	sub    eax,edx
  4110da:	ins    DWORD PTR es:[edi],dx
  4110db:	and    esp,DWORD PTR [edi+0x44]
  4110de:	add    DWORD PTR [eax],eax
  4110e0:	lock retf 0x57e0
  4110e4:	sub    al,0x47
  4110e6:	add    DWORD PTR [edx],eax
  4110e8:	das    
  4110e9:	inc    edi
  4110ea:	add    eax,ebp
  4110ec:	imul   esi,eax,0x1ad80001
  4110f2:	loope  0x4110ff
  4110f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110f5:	xchg   esi,eax
  4110f6:	sub    al,0x37
  4110f8:	add    BYTE PTR [eax],al
  4110fa:	xlat   BYTE PTR ds:[ebx]
  4110fb:	(bad)  
  4110fc:	aaa    
  4110fd:	mov    BYTE PTR [ebx],bh
  4110ff:	jecxz  0x411109
  411101:	xor    edx,esp
  411103:	rol    DWORD PTR [eax+0x145bf23],1
  411109:	add    bh,bh
  41110b:	rol    eax,0x23
  41110e:	add    edi,DWORD PTR [esi+0x6efb23d8]
  411114:	repz xor al,0x2e
  411117:	inc    edi
  411118:	mov    WORD PTR [ebx+0x53],?
  41111b:	cmp    edi,esp
  41111d:	repnz sti 
  41111f:	aaa    
  411120:	mov    WORD PTR [ebx+0x53],cs
  411123:	push   ebx
  411124:	mov    ebp,ss
  411126:	mov    ds:0x5757dd82,al
  41112b:	and    ebp,edi
  41112d:	add    BYTE PTR [edi],ch
  41112f:	mov    esp,0x4140bbd
  411134:	mov    cl,0x1
  411136:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411137:	push   esi
  411138:	jp     0x411127
  41113a:	cs inc edi
  41113c:	add    DWORD PTR [ebp+0xa4e2ab],ecx
  411142:	das    
  411143:	fsubrp st(7),st
  411145:	mov    ebx,DWORD PTR [eax]
  411147:	sahf   
  411148:	mov    al,0xae
  41114a:	es fs stos DWORD PTR es:[edi],eax
  41114d:	fbstp  TBYTE PTR [ebx+eax*2]
  411150:	repz jp 0x41115d
  411153:	fsubrp st(7),st
  411155:	add    esp,DWORD PTR [edx+0x2fa3c362]
  41115b:	fsubrp st(7),st
  41115d:	mov    eax,DWORD PTR [eax]
  41115f:	add    BYTE PTR [eax],bl
  411161:	sahf   
  411162:	mov    al,ds:0xa80bf6ae
  411167:	fcom   DWORD PTR [edx-0x4d]
  41116a:	jb     0x41118a
  41116c:	mov    ebx,DWORD PTR [edi+ebx*8]
  41116f:	add    edi,DWORD PTR [edx+0x63]
  411172:	mov    ebx,0x2c6982d2
  411177:	cmp    BYTE PTR [eax-0x3c],ah
  41117a:	call   0xb69a07aa
  41117f:	cmp    BYTE PTR [ebx-0x53e9cce2],ch
  411185:	fldenv [ebx+0x72ea3bff]
  41118b:	repz clc 
  41118d:	inc    ebp
  41118e:	dec    ebp
  41118f:	and    BYTE PTR [ecx-0x7abe9da9],ah
  411195:	out    0x17,al
  411197:	sub    al,0xb4
  411199:	aas    
  41119a:	jle    0x4111d4
  41119c:	cmp    eax,0x6d4b151e
  4111a1:	mov    cl,0x62
  4111a3:	daa    
  4111a4:	fild   QWORD PTR [edi+0x59eb86be]
  4111aa:	mov    bh,0xad
  4111ac:	cs inc esi
  4111ae:	outs   dx,DWORD PTR ds:[esi]
  4111af:	cmp    DWORD PTR [ecx+0x57],esp
  4111b2:	bound  esi,QWORD PTR [ebx]
  4111b4:	mov    bl,0x50
  4111b6:	mov    ebx,0x3ba1a418
  4111bb:	imul   ebp,DWORD PTR [edi],0xffffffd1
  4111be:	add    cl,dl
  4111c0:	mov    bl,0xaa
  4111c2:	or     BYTE PTR [edi-0xd760000],dl
  4111c8:	iret   
  4111c9:	adc    DWORD PTR [edi+0x3f],edx
  4111cc:	pop    eax
  4111cd:	sub    BYTE PTR [esi+ebx*8],0x56
  4111d1:	add    ecx,eax
  4111d3:	aas    
  4111d4:	std    
  4111d5:	push   cs
  4111d6:	pushf  
  4111d7:	fsubp  st(1),st
  4111d9:	icebp  
  4111da:	(bad)  
  4111db:	ds pop ecx
  4111dd:	push   es
  4111de:	inc    edi
  4111df:	pop    eax
  4111e0:	xor    ch,BYTE PTR [ecx]
  4111e2:	out    0xb8,eax
  4111e4:	(bad)  
  4111e5:	sub    edi,eax
  4111e7:	push   esi
  4111e8:	push   esp
  4111e9:	jb     0x411232
  4111eb:	pop    esp
  4111ec:	in     al,0xe1
  4111ee:	mov    dl,0x42
  4111f0:	jl     0x4111de
  4111f2:	sub    al,0xde
  4111f4:	push   ebp
  4111f5:	into   
  4111f6:	sahf   
  4111f7:	fsubp  st(0),st
  4111f9:	mov    ds,WORD PTR [eax]
  4111fb:	pop    eax
  4111fc:	std    
  4111fd:	gs jae 0x4111d2
  411200:	xor    BYTE PTR [edi+eax*4-0x6],ah
  411204:	or     cl,al
  411206:	repnz dec ebx
  411208:	std    
  411209:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41120a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41120b:	test   eax,0xfa6f6c08
  411210:	xor    BYTE PTR [ecx],bh
  411212:	aad    0xf1
  411214:	pop    ebp
  411215:	bound  ebx,QWORD PTR [eax+0x3f]
  411218:	or     al,0x62
  41121a:	sub    ebx,esi
  41121c:	push   0xde2e01
  411221:	outs   dx,DWORD PTR fs:[esi]
  411223:	cli    
  411224:	or     al,0x3
  411226:	xor    ebp,DWORD PTR [esi+0xfcfd]
  41122c:	pop    esp
  41122d:	lock inc eax
  41122f:	jmp    0xb64d2ce1
  411234:	mov    ch,0x41
  411236:	pop    ebx
  411237:	sub    ebp,DWORD PTR [edi]
  411239:	ficom  WORD PTR [ebx+0x0]
  41123c:	fld    QWORD PTR ds:0x84a05151
  411242:	or     edi,edi
  411244:	and    edx,0xffffffe8
  411247:	call   0x8e40213d
  41124c:	or     DWORD PTR [esi],0x4e
  41124f:	push   0xffffffb3
  411251:	or     eax,edi
  411253:	std    
  411254:	cmp    DWORD PTR ds:0x493f08b,ecx
  41125a:	jne    0x411260
  41125c:	aam    0xa1
  41125e:	jmp    0xfe83:0xf91f7d21
  411265:	fnsave [esi+0x3]
  411268:	lods   al,BYTE PTR ds:[esi]
  411269:	fstp   QWORD PTR [eax+0x50]
  41126c:	xor    BYTE PTR ds:0xef090875,cl
  411272:	dec    esp
  411273:	push   ss
  411274:	push   ss
  411275:	fiadd  DWORD PTR [ecx-0x1adc053c]
  41127b:	mov    edi,0xb0ff0ce0
  411280:	xlat   BYTE PTR ds:[ebx]
  411281:	sub    ecx,eax
  411283:	ret    0xe1d2
  411286:	push   ebx
  411287:	mov    edi,DWORD PTR [edx+0x2a]
  41128a:	push   eax
  41128b:	push   esi
  41128c:	icebp  
  41128d:	inc    sp
  41128f:	cld    
  411290:	add    BYTE PTR [eax],al
  411292:	data16 add ch,0x0
  411296:	xchg   esi,eax
  411297:	loope  0x411281
  411299:	mov    ch,0xab
  41129b:	or     al,0xff
  41129d:	mov    edx,DWORD PTR [esi]
  41129f:	pop    esi
  4112a0:	repz je 0x41130d
  4112a3:	push   0xdb2cfc44
  4112a8:	push   0x0
  4112aa:	or     eax,0x792fe59b
  4112af:	fild   WORD PTR [eax]
  4112b1:	mov    ecx,esi
  4112b3:	pop    ebp
  4112b4:	(bad)  
  4112b5:	jne    0x4112e6
  4112b7:	inc    ebp
  4112b8:	retf   
  4112b9:	out    0xac,eax
  4112bb:	popf   
  4112bc:	ss (bad) 
  4112be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112bf:	add    al,0xd7
  4112c1:	pop    ebp
  4112c2:	jbe    0x4112cc
  4112c4:	ror    DWORD PTR [edx+0x7b8c853],1
  4112ca:	das    
  4112cb:	js     0x41127d
  4112cd:	pextrw eax,(bad),0xc5
  4112cf:	inc    esi
  4112d0:	test   eax,0x1472fc7
  4112d5:	xor    ebp,edi
  4112d7:	fdivp  st(0),st
  4112d9:	sti    
  4112da:	sbb    ah,ah
  4112dc:	sub    dh,BYTE PTR [eax]
  4112de:	mov    ds:0x95500981,al
  4112e3:	inc    edi
  4112e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112e5:	add    BYTE PTR [eax],al
  4112e7:	ror    BYTE PTR [ecx],cl
  4112e9:	call   0x4045a9
  4112ee:	stos   BYTE PTR es:[edi],al
  4112ef:	xchg   BYTE PTR [ebp+0x27871d03],ch
  4112f5:	sbb    BYTE PTR [eax],al
  4112f7:	add    al,ah
  4112f9:	mov    cl,0xc
  4112fb:	push   0x146e7
  411300:	(bad)  
  411301:	xor    al,0x35
  411303:	dec    al
  411305:	xchg   ebx,eax
  411306:	lods   eax,DWORD PTR ds:[esi]
  411307:	pop    es
  411308:	mov    ch,0x6e
  41130a:	sub    al,0x33
  41130c:	rol    DWORD PTR [ebx-0x601376cd],1
  411312:	aad    0xc1
  411314:	xor    eax,DWORD PTR [edi-0x32]
  411317:	mov    dl,BYTE PTR [ebx+0x5369cf15]
  41131d:	loope  0x411323
  41131f:	call   FWORD PTR [edx]
  411321:	dec    edi
  411322:	xor    al,0x14
  411324:	fild   QWORD PTR [ecx+eax*8]
  411327:	jmp    FWORD PTR [ebp-0xd72f77e]
  41132d:	ret    0x69d4
  411330:	or     esi,ebx
  411332:	dec    edi
  411333:	adc    eax,0x895e546a
  411338:	push   eax
  411339:	pop    edx
  41133a:	pop    ebp
  41133b:	scas   eax,DWORD PTR es:[edi]
  41133c:	sub    al,0x10
  41133e:	sub    BYTE PTR [ecx],ch
  411340:	punpckhwd mm5,QWORD PTR [edi+esi*1-0x51fcaa53]
  411348:	sub    eax,0xe8dc0bc8
  41134d:	stos   DWORD PTR es:[edi],eax
  41134e:	cs scas eax,DWORD PTR es:[edi]
  411350:	sub    BYTE PTR [ebp-0x4],dl
  411353:	mov    DWORD PTR [edx-0x62],0xe2ec80e7
  41135a:	mov    ebp,0xc00002b
  41135f:	cmp    cl,BYTE PTR [esi]
  411361:	xor    eax,0x4aa5ddc0
  411366:	out    dx,al
  411367:	(bad)  
  411369:	into   
  41136a:	mov    ch,0x42
  41136c:	push   0x28
  41136e:	dec    esp
  41136f:	pop    edi
  411370:	ins    BYTE PTR es:[edi],dx
  411371:	or     ebp,DWORD PTR [edi]
  411373:	retf   0xaa04
  411376:	or     al,0x53
  411378:	push   esp
  411379:	or     al,0xb2
  41137b:	cdq    
  41137c:	mov    bl,0xd3
  41137e:	fldl2t 
  411380:	sbb    ecx,DWORD PTR [esi]
  411382:	outs   dx,DWORD PTR ds:[esi]
  411383:	fisubr WORD PTR [edx+0x3f]
  411386:	xor    al,0x61
  411388:	and    al,0x58
  41138a:	jo     0x411354
  41138c:	dec    ebp
  41138d:	stos   BYTE PTR es:[edi],al
  41138e:	or     al,0xb6
  411390:	ret    0x46fd
  411393:	ficom  WORD PTR [ecx]
  411395:	sahf   
  411396:	pop    ebp
  411397:	push   ds
  411398:	pop    DWORD PTR [edx+0x4a9653a5]
  41139e:	outs   dx,BYTE PTR ds:[esi]
  41139f:	(bad)  
  4113a1:	or     BYTE PTR [eax-0x8f60422],0xc9
  4113a8:	jmp    0x7e03:0x1fc0f0
  4113af:	stos   DWORD PTR es:[edi],eax
  4113b0:	rol    DWORD PTR [ebx],0x7d
  4113b3:	stos   DWORD PTR es:[edi],eax
  4113b4:	sar    DWORD PTR [edi+esi*4+0x384d8147],0x67
  4113bc:	inc    ebx
  4113bd:	in     eax,0x7f
  4113bf:	adc    dl,bl
  4113c1:	mov    bh,0x0
  4113c3:	add    BYTE PTR [ebx+0x66],ah
  4113c6:	pop    ebx
  4113c7:	inc    ebp
  4113c8:	inc    esp
  4113c9:	jmp    0x4113d8
  4113cb:	gs (bad) 
  4113cd:	push   edx
  4113ce:	std    
  4113cf:	jmp    0x9a3dae85
  4113d4:	add    al,0xfa
  4113d6:	cli    
  4113d7:	arpl   WORD PTR es:[edi-0x40],bx
  4113db:	out    dx,al
  4113dc:	mov    al,ds:0x2ce90085
  4113e1:	addr16 inc ebx
  4113e3:	loope  0x411429
  4113e5:	cwde   
  4113e6:	std    
  4113e7:	push   es
  4113e8:	inc    ebx
  4113e9:	bound  ecx,QWORD PTR [ebx-0xf]
  4113ec:	frstor [edx+0x3b34ac87]
  4113f2:	arpl   bp,bp
  4113f4:	cmp    al,0x54
  4113f6:	mov    DWORD PTR [ebx+ebp*8+0x67],esp
  4113fa:	lock ss pusha 
  4113fd:	and    eax,ebp
  4113ff:	popa   
  411400:	xor    dh,bl
  411402:	add    BYTE PTR [ebp+0x6b],ah
  411405:	retf   0x1f0a
  411408:	sub    edx,DWORD PTR [edi]
  41140a:	in     al,0xbe
  41140c:	cld    
  41140d:	maskmovq mm7,mm2
  411410:	std    
  411411:	xadd   DWORD PTR [ecx-0x22],esp
  411415:	cmp    al,BYTE PTR [edi+0x73664f24]
  41141b:	cdq    
  41141c:	and    dh,BYTE PTR [edx-0x309e2d0c]
  411422:	psrlw  mm7,QWORD PTR [esi]
  411425:	leave  
  411426:	push   es
  411427:	add    BYTE PTR [eax],al
  411429:	add    BYTE PTR [esi+0x42],dl
  41142c:	pop    ebx
  41142d:	add    DWORD PTR [edx-0x25],edi
  411430:	inc    esi
  411431:	jmp    0x411428
  411433:	inc    edx
  411434:	ret    0x477f
  411437:	pcmpeqw mm1,QWORD PTR [ebx+eiz*8]
  41143b:	mov    ebp,fs
  41143d:	call   0x41eea6
  411442:	retf   0x7199
  411445:	inc    eax
  411446:	loope  0x4113dc
  411448:	in     eax,dx
  411449:	mov    ebx,DWORD PTR [ebx-0x118a010e]
  41144f:	icebp  
  411450:	int    0xfa
  411452:	add    DWORD PTR [edi],ecx
  411454:	mov    al,bl
  411456:	rcl    DWORD PTR [ebp+eiz*8+0xd92ae8],cl
  41145d:	add    BYTE PTR [ebx-0x72170669],dl
  411463:	add    edi,edi
  411465:	dec    DWORD PTR [ecx+ebx*4-0x68ced116]
  41146c:	or     DWORD PTR [eax+0x1],edx
  41146f:	test   DWORD PTR [ebx+edx*1],0xc083ddc6
  411476:	jp     0x411427
  411478:	mov    WORD PTR [ebp-0x2],es
  41147b:	cmc    
  41147c:	xchg   ebx,eax
  41147d:	add    edx,esi
  41147f:	fnstsw WORD PTR [ecx]
  411481:	ret    
  411482:	jnp    0x411488
  411484:	jmp    0x411437
  411486:	jae    0x41141e
  411488:	in     eax,0xe8
  41148a:	cli    
  41148b:	fild   DWORD PTR [eax]
  41148d:	add    BYTE PTR [eax],al
  41148f:	add    BYTE PTR [ebx-0x6a],dl
  411492:	stc    
  411493:	call   0x4017b5
  411498:	mov    ah,0x9d
  41149a:	pop    esi
  41149b:	pop    esi
  41149c:	in     eax,dx
  41149d:	adc    al,al
  41149f:	or     BYTE PTR [esi+0x2fec8a36],dl
  4114a5:	push   ss
  4114a6:	aam    0x52
  4114a8:	stc    
  4114a9:	pop    es
  4114aa:	add    BYTE PTR [edi+eax*4-0x9],0x9c
  4114af:	xchg   esi,eax
  4114b0:	das    
  4114b1:	inc    edi
  4114b2:	add    eax,ebp
  4114b4:	(bad)  
  4114b5:	int3   
  4114b6:	xor    bh,dh
  4114b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114b9:	xlat   BYTE PTR ds:[ebx]
  4114ba:	inc    edi
  4114bb:	inc    esp
  4114bc:	push   0xdbf58847
  4114c1:	bnd jge 0x411510
  4114c4:	push   edi
  4114c5:	sbb    eax,0xbc7d3309
  4114ca:	inc    esp
  4114cb:	pop    esi
  4114cc:	inc    eax
  4114cd:	adc    BYTE PTR [ecx+0x7fe2bad1],cl
  4114d3:	sbb    edi,esi
  4114d5:	mov    ebx,0x943c3a2f
  4114da:	out    0x69,al
  4114dc:	inc    ebx
  4114dd:	clc    
  4114de:	mov    eax,0x577b207
  4114e3:	push   eax
  4114e4:	sbb    BYTE PTR [edx-0x2b],dl
  4114e7:	adc    eax,0xc386476f
  4114ec:	cmp    eax,edx
  4114ee:	inc    ecx
  4114ef:	jae    0x411527
  4114f1:	les    ecx,FWORD PTR [edx+0x17]
  4114f4:	add    BYTE PTR [eax],al
  4114f6:	xor    al,0x4c
  4114f8:	mov    ah,0xe2
  4114fa:	add    al,0x3b
  4114fc:	inc    edi
  4114fd:	inc    esp
  4114fe:	call   0x7528ec48
  411503:	sbb    ebp,DWORD PTR [edi]
  411505:	(bad)  
  411506:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411507:	add    DWORD PTR [eax],esi
  411509:	pop    esi
  41150a:	jno    0x411518
  41150c:	cmp    al,cl
  41150e:	xor    eax,DWORD PTR [edi-0x2a]
  411511:	mov    dl,bl
  411513:	ret    
  411514:	lods   eax,DWORD PTR ds:[esi]
  411515:	pop    es
  411516:	das    
  411517:	hlt    
  411518:	fidiv  DWORD PTR [ebx-0x6]
  41151b:	ret    
  41151c:	lods   eax,DWORD PTR ds:[esi]
  41151d:	or     ebp,DWORD PTR [edi]
  41151f:	ficomp WORD PTR ds:0xebcaa1e1
  411525:	xor    BYTE PTR [ebx],ah
  411527:	out    0x7f,al
  411529:	xchg   ebp,eax
  41152a:	mov    WORD PTR [eax-0x72],ss
  41152d:	jge    0x4114c7
  41152f:	pop    edx
  411530:	jge    0x4114e9
  411532:	sub    al,0xc
  411534:	test   al,0x1d
  411536:	push   eax
  411537:	gs sub al,0x0
  41153a:	fld    st(5)
  41153c:	dec    edi
  41153d:	add    al,0x2f
  41153f:	fimul  WORD PTR [edi+0x27]
  411542:	addr16 push eax
  411544:	pop    esi
  411545:	fisub  DWORD PTR [esi+0x4b073f35]
  41154b:	push   eax
  41154c:	dec    esi
  41154d:	jle    0x4115bc
  41154f:	inc    esp
  411550:	cmc    
  411551:	popf   
  411552:	inc    eax
  411553:	mov    eax,0xde2f045f
  411558:	cli    
  411559:	inc    ebx
  41155a:	add    BYTE PTR [eax],al
  41155c:	dec    eax
  41155d:	and    al,0x30
  41155f:	xor    DWORD PTR [ecx],ebp
  411561:	mov    cl,0xc2
  411563:	into   
  411564:	out    dx,al
  411565:	out    0xe7,al
  411567:	(bad)  
  411568:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411569:	inc    edx
  41156a:	mov    eax,0xa4617ad2
  41156f:	das    
  411570:	js     0x411538
  411572:	pusha  
  411573:	add    al,0x2f
  411575:	fimul  WORD PTR [edi]
  411577:	sbb    eax,0x7cf64ff6
  41157c:	call   0x44f935da
  411581:	arpl   WORD PTR [eax+esi*1],bp
  411584:	push   esi
  411585:	out    0x1a,eax
  411587:	push   esi
  411588:	jp     0x4115d1
  41158a:	fld    QWORD PTR [esi-0x15223602]
  411590:	inc    ebx
  411591:	push   edx
  411592:	cmp    ebx,edi
  411594:	mov    ch,0xa9
  411596:	out    dx,eax
  411597:	jp     0x4115c7
  411599:	arpl   WORD PTR [eax],ax
  41159b:	test   al,0x13
  41159d:	xlat   BYTE PTR ds:[ebx]
  41159e:	dec    edi
  41159f:	rcr    DWORD PTR ds:0x9ba6fd3c,0x8f
  4115a6:	pop    esi
  4115a7:	mov    al,0xf2
  4115a9:	fiadd  DWORD PTR [eax]
  4115ab:	cmp    BYTE PTR [edx+0x2ce124d3],ch
  4115b1:	stos   DWORD PTR es:[edi],eax
  4115b2:	push   esi
  4115b3:	push   ds
  4115b4:	(bad)  
  4115b5:	or     DWORD PTR [ecx+ebp*4-0x5695f240],eax
  4115bc:	pop    ss
  4115bd:	arpl   ax,di
  4115bf:	push   ss
  4115c0:	add    BYTE PTR [eax],al
  4115c2:	push   ds
  4115c3:	retf   
  4115c4:	and    al,0x1
  4115c6:	inc    ebx
  4115c7:	push   ebp
  4115c8:	loope  0x411628
  4115ca:	pop    ds
  4115cb:	fs lock ins BYTE PTR es:[edi],dx
  4115ce:	push   ss
  4115cf:	retf   0x1b04
  4115d2:	repz inc ebx
  4115d4:	and    eax,0x76a49f
  4115d9:	jmp    0x4206790a
  4115de:	jno    0x411636
  4115e0:	std    
  4115e1:	cs push es
  4115e3:	fcom   DWORD PTR gs:[ecx]
  4115e6:	sar    DWORD PTR [ebx],0xfd
  4115e9:	push   ds
  4115ea:	call   0x654e:0xb2e7e91c
  4115f1:	jo     0x41161f
  4115f3:	fiadd  WORD PTR [eax]
  4115f5:	mov    edx,0x31376c
  4115fa:	aas    
  4115fb:	push   eax
  4115fc:	pop    ebp
  4115fd:	xchg   edi,eax
  4115fe:	jecxz  0x4115b5
  411600:	ret    0x2ce5
  411603:	test   eax,0xa8fad589
  411608:	push   ebp
  411609:	ins    BYTE PTR es:[edi],dx
  41160a:	out    0x52,al
  41160c:	push   eax
  41160d:	inc    ecx
  41160e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41160f:	dec    esi
  411610:	std    
  411611:	jmp    0x13bc33a
  411616:	jmp    0x5431a119
  41161b:	or     BYTE PTR [edx+0x20],dh
  41161e:	dec    ebp
  41161f:	and    eax,0xd8bdb9f9
  411624:	add    BYTE PTR [eax],al
  411626:	add    BYTE PTR [eax],al
  411628:	test   DWORD PTR [edx+ecx*4-0x7af93e07],ebp
  41162f:	shl    BYTE PTR [ebx],cl
  411631:	push   eax
  411632:	cmp    BYTE PTR [ebp-0x46],cl
  411635:	mov    ecx,DWORD PTR [eax]
  411637:	mov    edi,DWORD PTR [ebx]
  411639:	push   edx
  41163a:	mov    BYTE PTR [ecx],al
  41163c:	std    
  41163d:	xchg   edi,eax
  41163e:	jmp    0xd9e3:0x11f21008
  411645:	(bad)  
  411646:	xor    al,al
  411648:	imul   esp,DWORD PTR [eax],0xda52c2c8
  41164e:	dec    edi
  41164f:	cmp    DWORD PTR [edx+0x36],0x5
  411653:	add    BYTE PTR [ebp+0x2f745628],al
  411659:	gs mov ebp,0xbd714374
  41165f:	fild   DWORD PTR [edi-0x26]
  411662:	add    BYTE PTR [ebx+0x74fe355e],cl
  411668:	repnz fld1 
  41166b:	pop    ecx
  41166c:	and    eax,0x368bfefd
  411671:	push   edi
  411672:	repz jne 0x411687
  411675:	push   eax
  411676:	mov    ebp,0x6533f1eb
  41167b:	call   0xea41:0x8b00e206
  411682:	test   eax,0x53fcd9f8
  411687:	mov    ch,dh
  411689:	jmp    0x41f957
  41168e:	stc    
  41168f:	cld    
  411690:	xchg   ebx,eax
  411692:	das    
  411693:	and    bl,bh
  411695:	imul   ebp,DWORD PTR [edi],0xc0ff8a9f
  41169b:	aaa    
  41169c:	repnz mov edi,0xfe29a9c7
  4116a2:	mov    al,0xf4
  4116a4:	into   
  4116a5:	pop    edx
  4116a6:	push   es
  4116a7:	jns    0x4116ae
  4116a9:	add    dl,bh
  4116ab:	iret   
  4116ac:	sbb    eax,0x8014fe50
  4116b1:	inc    esp
  4116b2:	xchg   ebx,eax
  4116b3:	pop    es
  4116b4:	popf   
  4116b5:	xchg   ebp,eax
  4116b6:	das    
  4116b7:	aaa    
  4116b8:	add    eax,ebp
  4116ba:	mov    esi,0xa4fe2e5e
  4116bf:	(bad)
  4116c3:	xor    bh,BYTE PTR [edx+0x44]
  4116c6:	imul   esp,ecx,0xffffffec
  4116c9:	xor    bh,BYTE PTR [ebp+0x25]
  4116cc:	ss cmc 
  4116ce:	mov    dl,0x9
  4116d0:	mov    ecx,0x2d2a160d
  4116d5:	jno    0x41170d
  4116d7:	rcr    al,0x7
  4116da:	mov    dh,0x39
  4116dc:	jp     0x41169e
  4116de:	inc    esp
  4116df:	dec    edi
  4116e0:	aam    0xe7
  4116e2:	mov    eax,0x5cfe2e98
  4116e7:	test   ebx,0x13aedc8
  4116ed:	push   ebp
  4116ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116ef:	fcmovbe st,st(4)
  4116f1:	push   eax
  4116f2:	add    BYTE PTR [eax],al
  4116f4:	jns    0x4116b8
  4116f6:	enter  0x5ffb,0x61
  4116fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116fb:	out    0x7e,eax
  4116fd:	fisubr WORD PTR [esi]
  4116ff:	(bad)  
  411700:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411701:	push   cs
  411702:	mov    eax,ecx
  411704:	jnp    0x411739
  411706:	jp     0x41174c
  411708:	jmp    0x41176a
  41170a:	out    0x32,eax
  41170c:	std    
  41170d:	fld    QWORD PTR [ebp+0x35]
  411710:	loop   0x411774
  411712:	mov    ecx,0x5d0722b7
  411717:	xor    BYTE PTR [esi],bh
  411719:	xlat   BYTE PTR ds:[ebx]
  41171a:	(bad)  
  41171b:	xlat   BYTE PTR ds:[ebx]
  41171c:	sub    BYTE PTR [edi-0x17],dl
  41171f:	js     0x411710
  411721:	cmp    bh,ch
  411723:	ror    al,cl
  411725:	adc    al,0xca
  411727:	sub    eax,0xcea810a9
  41172c:	ja     0x41174d
  41172e:	jmp    0x411733
  411730:	add    bl,BYTE PTR [ecx-0x75]
  411733:	or     DWORD PTR [ebp+eax*2-0x29f47ec8],0xb4dad0e7
  41173e:	sti    
  41173f:	icebp  
  411740:	mov    bl,0x1d
  411742:	repz fld QWORD PTR ds:0x6078b11e
  411749:	mov    ah,0x6e
  41174b:	mov    bh,0x28
  41174d:	ss jecxz 0x411771
  411750:	pop    ecx
  411751:	dec    esp
  411752:	jb     0x411788
  411754:	stos   DWORD PTR es:[edi],eax
  411755:	push   ebx
  411756:	fadd   QWORD PTR [edi]
  411758:	add    BYTE PTR [eax],al
  41175a:	std    
  41175b:	sbb    eax,0xb7dae342
  411760:	retf   
  411761:	js     0x4117d4
  411763:	xor    eax,0x4c313519
  411768:	popf   
  411769:	jns    0x41176b
  41176b:	aaa    
  41176c:	cmp    DWORD PTR [ebx],esp
  41176e:	and    DWORD PTR [ecx+esi*2+0x41],ecx
  411772:	add    eax,0x850391d8
  411777:	ret    0x43da
  41177a:	adc    BYTE PTR [eax-0x53fed2ea],cl
  411780:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411781:	enter  0x41a5,0x9c
  411785:	inc    ecx
  411786:	sub    al,0xde
  411788:	add    BYTE PTR [edx-0x30c7d721],bl
  41178e:	cdq    
  41178f:	jecxz  0x41178e
  411791:	pop    edi
  411792:	fild   DWORD PTR [ebx-0x37]
  411795:	enter  0x4c03,0x88
  411799:	test   DWORD PTR [ebp-0x57],0xe3f26004
  4117a0:	xchg   DWORD PTR [edi],esp
  4117a2:	das    
  4117a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117a4:	rcl    DWORD PTR [ebx+0x2f],0xb6
  4117a8:	cwde   
  4117a9:	outs   dx,BYTE PTR ds:[esi]
  4117ab:	dec    ebx
  4117ac:	in     eax,0x15
  4117ae:	lods   eax,DWORD PTR ds:[esi]
  4117af:	fld    QWORD PTR [eax]
  4117b1:	(bad)  
  4117b3:	pop    es
  4117b4:	retf   
  4117b5:	adc    eax,0xe17b6086
  4117ba:	cs int3 
  4117bc:	xor    esp,DWORD PTR [eax+0x0]
  4117bf:	add    BYTE PTR [ecx+0x47],bl
  4117c2:	xor    DWORD PTR [ecx-0x3d1b5e0b],ebp
  4117c8:	imul   esp,ebx,0xef54cd7b
  4117ce:	or     ah,dh
  4117d0:	cmp    DWORD PTR [esi],eax
  4117d2:	push   ebp
  4117d3:	icebp  
  4117d4:	sub    eax,0xec6a0dd1
  4117d9:	fdivr  QWORD PTR [ecx]
  4117db:	lods   al,BYTE PTR ds:[esi]
  4117dc:	inc    esp
  4117dd:	fcom   QWORD PTR [ecx+ebp*1+0x46fc9aaf]
  4117e4:	pop    ss
  4117e5:	fild   DWORD PTR [eax+0x52]
  4117e8:	out    0xf,eax
  4117ea:	shr    DWORD PTR [ecx+0x4163586f],0xaf
  4117f1:	cdq    
  4117f2:	cld    
  4117f3:	es push ds
  4117f5:	mov    ebp,eax
  4117f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117f8:	scas   al,BYTE PTR es:[edi]
  4117f9:	fadd   QWORD PTR [eax]
  4117fb:	sub    esi,DWORD PTR [eax]
  4117fd:	fidiv  WORD PTR [ecx]
  4117ff:	cmp    edx,DWORD PTR ds:0xa0024af
  411805:	xchg   ebx,eax
  411806:	and    cl,BYTE PTR [ebx-0x3dc5b939]
  41180c:	push   0xffffffdb
  41180e:	xor    ecx,ecx
  411810:	sahf   
  411811:	out    dx,al
  411812:	jae    0x411820
  411814:	push   cs
  411815:	xor    al,BYTE PTR [eax]
  411817:	je     0x4117f5
  411819:	and    DWORD PTR [edx],edi
  41181b:	dec    esp
  41181c:	cmp    bl,dh
  41181e:	je     0x411827
  411820:	push   ss
  411821:	jmp    0x41180f
  411823:	xor    eax,DWORD PTR [eax]
  411825:	add    BYTE PTR [esi-0x22bffc16],al
  41182b:	loop   0x4117b6
  41182d:	inc    ecx
  41182e:	mov    fs,WORD PTR [eax-0x75f2ffff]
  411834:	or     DWORD PTR [ebp-0x74fa7321],eax
  41183a:	pop    esi
  41183b:	dec    edx
  41183c:	mov    BYTE PTR [eax-0x6e],cl
  41183f:	jmp    0x41186b
  411841:	mov    eax,DWORD PTR [esi+0x4a]
  411844:	cmp    cl,dl
  411846:	je     0x411886
  411848:	push   ebx
  411849:	mov    esi,DWORD PTR [esi+0x4a]
  41184c:	add    dh,dl
  41184e:	popf   
  41184f:	add    al,0x5c
  411851:	jae    0x4118ce
  411853:	enter  0x4110,0xdf
  411857:	mov    DWORD PTR [ecx],ecx
  411859:	test   BYTE PTR [ecx*4-0x72b8c70d],dl
  411860:	or     al,BYTE PTR [ecx-0x31]
  411863:	mov    DWORD PTR [ecx],ecx
  411865:	xor    eax,DWORD PTR [esi]
  411867:	mov    ds:0xde426082,eax
  41186c:	mov    DWORD PTR [eax+0x12],eax
  41186f:	mov    eax,ds:0x7a163f7d
  411874:	push   es
  411875:	xor    al,BYTE PTR [esi-0x15]
  411878:	mov    al,BYTE PTR [eax]
  41187a:	push   es
  41187b:	ficom  WORD PTR [ecx-0x1]
  41187e:	das    
  41187f:	imul   ebx,ebp,0x7
  411882:	add    BYTE PTR [ebx-0x53],dl
  411885:	adc    DWORD PTR [edi+0x37],ebp
  411888:	jle    0x411861
  41188a:	add    BYTE PTR [eax],al
  41188c:	stos   BYTE PTR es:[edi],al
  41188d:	cld    
  41188e:	test   eax,0x1df71d03
  411893:	je     0x41190e
  411895:	stos   BYTE PTR es:[edi],al
  411896:	mov    cl,0x7
  411898:	lods   al,BYTE PTR ds:[esi]
  411899:	add    DWORD PTR ds:0xc6ba0c75,eax
  41189f:	add    DWORD PTR [edi+0x1f],ebx
  4118a2:	pusha  
  4118a3:	ffreep st(0)
  4118a5:	sbb    BYTE PTR [ebp+eax*1-0x4e],bh
  4118a9:	ja     0x411858
  4118ab:	and    ebx,DWORD PTR [eax+ecx*4-0x53]
  4118af:	and    edi,DWORD PTR [edi]
  4118b1:	out    0x29,eax
  4118b3:	adc    al,0xf3
  4118b5:	xor    cl,al
  4118b7:	jmp    FWORD PTR [ebp-0xf770a85]
  4118bd:	inc    edx
  4118be:	push   ds
  4118bf:	sub    eax,0x8d00f8b4
  4118c4:	repz dec esi
  4118c6:	add    al,0xe8
  4118c8:	pop    edx
  4118c9:	sub    BYTE PTR [edx],0xfe
  4118cc:	stos   DWORD PTR es:[edi],eax
  4118cd:	ja     0x41187f
  4118cf:	add    ebx,DWORD PTR ds:0xb4331e77
  4118d5:	sub    DWORD PTR [edx],ebp
  4118d7:	dec    esi
  4118d8:	xor    esi,DWORD PTR [edx+edi*4]
  4118db:	add    edi,esp
  4118dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118de:	lods   eax,DWORD PTR ds:[esi]
  4118df:	and    ebx,DWORD PTR [edi]
  4118e1:	xchg   BYTE PTR [edx],ch
  4118e3:	adc    al,0xf3
  4118e5:	push   eax
  4118e6:	sar    edi,0xad
  4118e9:	sti    
  4118ea:	cmc    
  4118eb:	add    al,dl
  4118ed:	inc    edx
  4118ee:	jle    0x411936
  4118f0:	add    BYTE PTR [eax],al
  4118f2:	xor    edi,DWORD PTR [edi+esi*8+0x13f2bc5]
  4118f9:	push   DWORD PTR [eax-0x22]
  4118fc:	jmp    0x41197c
  4118fe:	imul   esp,edx,0xe1f2f972
  411904:	fild   WORD PTR [ebx]
  411906:	add    BYTE PTR [ecx-0x57d08c1d],ah
  41190c:	mov    ds:0x94de2c45,al
  411911:	jle    0x4118e7
  411913:	pop    ebp
  411914:	mov    dh,0x3
  411916:	pop    ebx
  411917:	loop   0x4118d2
  411919:	inc    ebx
  41191a:	lds    edi,FWORD PTR [esi-0x29a4d6c3]
  411920:	jb     0x41195b
  411922:	sar    BYTE PTR ds:0x54c129d5,1
  411928:	xlat   BYTE PTR ds:[ebx]
  411929:	jnp    0x41196e
  41192b:	(bad)  
  41192c:	ins    BYTE PTR es:[edi],dx
  41192d:	xor    bh,BYTE PTR [ebx]
  41192f:	loop   0x41192a
  411931:	inc    ebx
  411932:	xchg   ebp,eax
  411933:	xchg   ebp,eax
  411934:	sbb    dl,dl
  411936:	mov    eax,ds:0xef1633f2
  41193b:	fnsave [edx-0x47]
  41193e:	sub    al,0x5b
  411940:	aas    
  411941:	add    edi,DWORD PTR [edx+0x68dcdae1]
  411947:	pop    edx
  411948:	push   ss
  411949:	cld    
  41194a:	sub    eax,0x71d418d8
  41194f:	shr    bh,cl
  411951:	sub    BYTE PTR [ebx-0x66],al
  411954:	ffree  st(3)
  411956:	add    BYTE PTR [eax],al
  411958:	pusha  
  411959:	cmc    
  41195a:	push   cs
  41195b:	add    BYTE PTR [eax+ebx*4-0x26937b15],ah
  411962:	ret    0x4784
  411965:	(bad)  
  411967:	clc    
  411968:	inc    ecx
  411969:	cmovo  eax,DWORD PTR [ebx]
  41196c:	dec    edi
  41196d:	dec    eax
  41196e:	inc    esi
  41196f:	test   DWORD PTR [edx],ecx
  411971:	fidivr WORD PTR [esi]
  411973:	mov    ecx,0xec00332c
  411978:	inc    esp
  411979:	or     eax,0x77462ede
  41197e:	inc    esi
  411980:	jmp    0x8a2a1da2
  411985:	push   ecx
  411986:	je     0x411950
  411988:	sbb    edx,0x30
  41198b:	das    
  41198c:	repnz inc edi
  41198e:	xor    ch,BYTE PTR [ecx]
  411990:	jo     0x4119a8
  411992:	je     0x411968
  411994:	imul   esi,edx,0x2c
  411997:	pop    ss
  411998:	jmp    0x40d9:0x88bb3847
  41199f:	push   0xe9005f6a
  4119a4:	sub    al,0x3
  4119a6:	rcr    BYTE PTR [ebx-0x4],0x5b
  4119aa:	enter  0x73ce,0x54
  4119ae:	or     edi,ecx
  4119b0:	pushfw 
  4119b2:	add    BYTE PTR [edx],bl
  4119b4:	js     0x411967
  4119b6:	and    DWORD PTR [edi+edx*2+0x16c10c],0x5f0a00
  4119c1:	jmp    0x16087af2
  4119c6:	(bad)  
  4119c7:	push   esp
  4119c8:	xor    eax,ebp
  4119ca:	neg    BYTE PTR [ebx+0x5bde6200]
  4119d0:	cmp    ch,cl
  4119d2:	rcl    dh,0x40
  4119d5:	jmp    0x3410:0xfbc00403
  4119dc:	push   cs
  4119dd:	bound  eax,QWORD PTR [esi+esi*4]
  4119e0:	std    
  4119e1:	jno    0x411a0f
  4119e3:	fiadd  WORD PTR [eax]
  4119e5:	jmp    0x9e3d:0xdce85416
  4119ec:	and    BYTE PTR [si-0x2ba],dh
  4119f1:	add    BYTE PTR [esi-0x4b],al
  4119f4:	sub    esi,ebx
  4119f6:	aad    0xda
  4119f8:	call   0xff3752b2
  4119fd:	test   BYTE PTR [esi+0x77],al
  411a00:	aas    
  411a01:	mov    edi,ebx
  411a03:	dec    edx
  411a04:	fild   DWORD PTR [ebx+0x16]
  411a07:	test   BYTE PTR [eax+esi*1],0x38
  411a0b:	and    bh,ch
  411a0d:	mov    ch,BYTE PTR [ebx]
  411a0f:	dec    BYTE PTR fs:[eax+0x300db06]
  411a16:	stos   DWORD PTR es:[edi],eax
  411a17:	fild   DWORD PTR cs:[ebx-0x2a]
  411a1b:	jbe    0x411a40
  411a1d:	push   ebx
  411a1e:	shl    edx,0x44
  411a21:	loopne 0x411a23
  411a23:	add    cl,cl
  411a25:	dec    BYTE PTR [edx+0x31ee3244]
  411a2b:	fist   DWORD PTR ds:0x618cfd64
  411a31:	fiadd  DWORD PTR [edi+0x11f3f07]
  411a37:	call   0x3edd18
  411a3c:	inc    ebp
  411a3d:	lds    esi,FWORD PTR [esi+0x38]
  411a40:	outs   dx,BYTE PTR ds:[esi]
  411a41:	mov    al,ds:0x1f86008a
  411a46:	pop    ebx
  411a47:	mov    edx,ebx
  411a49:	adc    al,0x5a
  411a4b:	ret    0xda92
  411a4e:	mov    DWORD PTR [ebx+0x76],ecx
  411a51:	sbb    BYTE PTR [esi+0x33],dl
  411a54:	test   eax,0x9f85bd4a
  411a59:	lea    ebx,[ebx+ecx*4]
  411a5c:	gs dec esi
  411a5e:	mov    dl,dh
  411a60:	loopne 0x411a3d
  411a62:	add    dh,BYTE PTR [ebp+0x5c]
  411a65:	sbb    al,BYTE PTR [edx-0x3fccd93e]
  411a6b:	jb     0x411a9c
  411a6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a6e:	sbb    DWORD PTR [eax],ecx
  411a70:	(bad)  
  411a71:	hlt    
  411a72:	hlt    
  411a73:	add    ch,BYTE PTR [ecx-0x35]
  411a76:	sub    al,0x74
  411a78:	dec    ebp
  411a79:	jbe    0x411a15
  411a7b:	enter  0xba5f,0xb1
  411a7f:	or     eax,DWORD PTR [edi]
  411a81:	dec    eax
  411a82:	inc    ebx
  411a83:	(bad)  
  411a84:	adc    BYTE PTR [esp+eax*2+0x24000073],dh
  411a8b:	rol    cl,1
  411a8d:	(bad)  
  411a8f:	out    dx,eax
  411a90:	cdq    
  411a91:	(bad)  
  411a92:	aas    
  411a93:	cmp    bl,ah
  411a95:	mov    WORD PTR [edi+0x36],gs
  411a98:	jl     0x411adc
  411a9a:	aas    
  411a9b:	retf   
  411a9c:	cld    
  411a9d:	mov    ch,BYTE PTR [edi+edi*1+0x7c]
  411aa1:	inc    esi
  411aa2:	xor    edi,ebp
  411aa4:	std    
  411aa5:	add    DWORD PTR [esp+esi*2+0xdec5dc6],esp
  411aac:	jp     0x411b1e
  411aae:	pop    ds
  411aaf:	call   0x2df370f8
  411ab4:	lods   eax,DWORD PTR ds:[esi]
  411ab5:	sbb    DWORD PTR [esi+ebx*4+0x32f68b00],esp
  411abc:	jp     0x411a8e
  411abe:	adc    WORD PTR [ecx],ax
  411ac1:	jne    0x411af5
  411ac3:	(bad)  
  411ac4:	inc    DWORD PTR [ecx]
  411ac6:	sbb    ecx,DWORD PTR [edx-0x3f]
  411ac9:	sub    BYTE PTR [ebp+0x27],0xea
  411acd:	vsubpd ymm6,ymm0,ymm2
  411ad1:	mov    edi,0x6a41f4d8
  411ad6:	outs   dx,DWORD PTR ds:[esi]
  411ad7:	xchg   DWORD PTR [edx],eax
  411ad9:	rcl    DWORD PTR [ebp+ecx*8+0x77],0x5
  411ade:	xchg   edi,eax
  411adf:	cmp    DWORD PTR [eax-0x52c978b8],esi
  411ae5:	push   cs
  411ae6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ae7:	fisubr WORD PTR [ebp-0x2ce14c05]
  411aed:	repnz add BYTE PTR [eax],al
  411af0:	lock xor eax,0x453871fd
  411af6:	inc    edx
  411af7:	fidiv  DWORD PTR [ecx]
  411af9:	int3   
  411afa:	repz jp 0x411b6f
  411afd:	out    dx,al
  411afe:	dec    edi
  411aff:	lds    ecx,FWORD PTR [esi-0x21]
  411b02:	out    0x26,eax
  411b04:	mov    ds:0xf2b43fd6,al
  411b09:	inc    esp
  411b0a:	es es sub dl,0xf
  411b0f:	pushf  
  411b10:	loop   0x411b56
  411b12:	push   ss
  411b13:	es cmp dh,0xff
  411b17:	mov    ds:0x260644d2,eax
  411b1c:	(bad)  
  411b1d:	test   BYTE PTR [edi],0xcc
  411b20:	add    al,BYTE PTR [ebp-0xa]
  411b23:	cwde   
  411b24:	or     BYTE PTR [edi+edi*8-0x19bb0e44],ch
  411b2b:	ds xor ah,al
  411b2e:	stos   BYTE PTR es:[edi],al
  411b2f:	rcr    DWORD PTR [ebx-0x54],1
  411b32:	ds jns 0x411af5
  411b35:	mov    dh,0xce
  411b37:	jl     0x411ae9
  411b39:	inc    esp
  411b3a:	out    0x0,eax
  411b3c:	push   0xfffffff2
  411b3e:	popf   
  411b3f:	shl    DWORD PTR [eax+0x2125c50f],0xa6
  411b46:	pusha  
  411b47:	aad    0x88
  411b49:	hlt    
  411b4a:	lds    esp,FWORD PTR ds:0xb4164489
  411b50:	mov    ah,bh
  411b52:	mov    ch,0x25
  411b54:	add    BYTE PTR [eax],al
  411b56:	jns    0x411b9c
  411b58:	push   esi
  411b59:	test   BYTE PTR [eax+0x44],dh
  411b5c:	out    0x1b,eax
  411b5e:	inc    esp
  411b5f:	and    al,0x7e
  411b61:	and    eax,0xb000291d
  411b66:	ret    
  411b67:	aam    0x76
  411b69:	fcmovbe st,st(7)
  411b6b:	retf   
  411b6c:	or     al,0xea
  411b6e:	sbb    DWORD PTR ds:0x440a5e6e,edi
  411b74:	inc    ecx
  411b75:	push   0xfffffff8
  411b77:	hlt    
  411b78:	cmp    DWORD PTR [esi+0x46ebd01c],ebp
  411b7e:	fcmovbe st,st(7)
  411b80:	call   0xfd8583c8
  411b85:	mov    BYTE PTR [ebx],ah
  411b87:	and    al,BYTE PTR [ecx-0x17]
  411b8a:	xchg   edi,eax
  411b8b:	dec    ebx
  411b8c:	sub    DWORD PTR [ecx],0xffffffbf
  411b8f:	scas   al,BYTE PTR es:[edi]
  411b90:	mov    esp,esi
  411b92:	fsub   DWORD PTR [ecx]
  411b94:	inc    ecx
  411b95:	jmp    0x20a83711
  411b9a:	jae    0x411bdf
  411b9c:	std    
  411b9d:	jmp    0x81507303
  411ba2:	or     eax,DWORD PTR [ebp+edi*8+0x6a]
  411ba6:	les    eax,FWORD PTR [ebx+0x74]
  411ba9:	loopne 0x411b58
  411bab:	ss mov cl,ch
  411bae:	sub    al,0xde
  411bb0:	dec    ebp
  411bb1:	push   esp
  411bb2:	std    
  411bb3:	pop    es
  411bb4:	stc    
  411bb5:	pop    ebp
  411bb6:	aad    0x5a
  411bb8:	std    
  411bb9:	push   esp
  411bba:	add    BYTE PTR [eax],al
  411bbc:	mov    ecx,0xf187e8ad
  411bc1:	inc    ebx
  411bc2:	std    
  411bc3:	or     BYTE PTR [eax+0x332adef7],cl
  411bc9:	aaa    
  411bca:	adc    ah,BYTE PTR [edx+0x5b]
  411bcd:	mov    dh,0xc7
  411bcf:	jno    0x411bfd
  411bd1:	fiadd  WORD PTR [eax]
  411bd3:	pop    edi
  411bd4:	pop    eax
  411bd5:	and    DWORD PTR [ecx-0x17],eax
  411bd8:	adc    al,0x3d
  411bda:	fmul   QWORD PTR [esi+0x3b564b]
  411be0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411be1:	cdq    
  411be2:	inc    edx
  411be3:	add    BYTE PTR [ecx+0x1c],al
  411be6:	pop    esp
  411be7:	pop    ebx
  411be8:	test   DWORD PTR [edx+ecx*4],edx
  411beb:	in     al,dx
  411bec:	(bad)  
  411bed:	jmp    0x6a56:0xdf5608a9
  411bf4:	bswap  ebx
  411bf6:	mov    ah,0x74
  411bf8:	loope  0x411bf3
  411bfa:	(bad)  
  411bfb:	pop    eax
  411bfc:	out    dx,al
  411bfd:	pop    edx
  411bfe:	mov    edi,0x84cc1600
  411c03:	fs ins DWORD PTR es:[edi],dx
  411c05:	cli    
  411c06:	(bad)  
  411c07:	push   eax
  411c08:	in     al,dx
  411c09:	fsubp  st(0),st
  411c0b:	jae    0x411ba2
  411c0d:	cli    
  411c0e:	inc    BYTE PTR [esi+edx*2+0x1755814a]
  411c15:	fild   WORD PTR [eax]
  411c17:	mov    ecx,DWORD PTR [eax+0x2f]
  411c1a:	mov    WORD PTR [ebp-0x10a56],es
  411c20:	add    BYTE PTR [eax],al
  411c22:	(bad)  
  411c23:	cs in  eax,0x7f
  411c26:	sbb    bh,dl
  411c28:	inc    BYTE PTR [ebp+0x3d814a06]
  411c2e:	(bad)  
  411c2f:	fiadd  WORD PTR [eax]
  411c31:	push   0xd
  411c33:	ins    DWORD PTR es:[edi],dx
  411c34:	je     0x411bca
  411c36:	outs   dx,BYTE PTR ds:[esi]
  411c37:	(bad)
  411c3d:	(bad)  
  411c3e:	imul   BYTE PTR [esp+eax*4+0x64]
  411c42:	ins    DWORD PTR es:[edi],dx
  411c43:	(bad)  
  411c44:	(bad)  
  411c45:	push   eax
  411c46:	adc    edx,DWORD PTR [ebp+0x59]
  411c49:	stc    
  411c4a:	loope  0x411c4a
  411c4c:	dec    ebp
  411c4d:	call   0x3fc28a
  411c52:	sbb    ebx,DWORD PTR [edx-0x26857bf2]
  411c58:	add    BYTE PTR [eax],al
  411c5a:	das    
  411c5b:	mov    edx,0x53765b87
  411c60:	and    DWORD PTR [edi+0x68],ecx
  411c63:	and    ecx,ebx
  411c65:	adc    edi,ebp
  411c67:	xor    al,0x86
  411c69:	neg    DWORD PTR [eax+0x3b]
  411c6c:	test   ebp,edi
  411c6e:	das    
  411c6f:	xor    eax,0xca0b6a01
  411c74:	xchg   edi,eax
  411c75:	(bad)  
  411c76:	out    0xac,eax
  411c78:	call   0xab764c3e
  411c7d:	cmp    al,0xa2
  411c7f:	sub    DWORD PTR [ecx+0x57],edx
  411c82:	pop    ss
  411c83:	aas    
  411c84:	inc    ebx
  411c85:	inc    DWORD PTR [eax]
  411c87:	add    BYTE PTR [eax],ah
  411c89:	fisttp WORD PTR cs:[edx+eiz*4+0x21e7bd07]
  411c91:	cmc    
  411c92:	add    al,0x0
  411c94:	pop    esp
  411c95:	icebp  
  411c96:	(bad)  
  411c97:	(bad)  
  411c98:	das    
  411c99:	mov    BYTE PTR [edx],dl
  411c9b:	mov    dh,0x72
  411c9d:	call   0xffaba956
  411ca2:	mov    ah,0x69
  411ca4:	xor    eax,0x37c907c
  411ca9:	lock jge 0x411c75
  411cac:	fmul   DWORD PTR [eax-0x44]
  411caf:	pop    eax
  411cb0:	lods   al,BYTE PTR ds:[esi]
  411cb1:	dec    edi
  411cb2:	add    al,0xf
  411cb4:	mov    ebx,0x2f000161
  411cb9:	mov    dl,0x88
  411cbb:	pop    ebx
  411cbc:	mov    dh,0x28
  411cbe:	and    cl,BYTE PTR [edi+0x45]
  411cc1:	adc    BYTE PTR [eax-0x721820bc],dl
  411cc7:	(bad)  
  411cc8:	(bad)  
  411cc9:	jg     0x411cc3
  411ccb:	and    edi,DWORD PTR [esi]
  411ccd:	test   DWORD PTR [ebx+ecx*4],0xfe22b497
  411cd4:	cmp    dh,bl
  411cd6:	imul   edi,DWORD PTR [eax-0x80],0x41
  411cda:	out    0x90,eax
  411cdc:	mov    bl,0xa2
  411cde:	nop
  411cdf:	and    dh,BYTE PTR [ecx-0x52]
  411ce2:	inc    DWORD PTR [edi]
  411ce4:	cs fsubrp st(7),st
  411ce7:	nop
  411ce8:	stos   DWORD PTR es:[edi],eax
  411ce9:	mov    dl,0x7c
  411ceb:	and    al,BYTE PTR [eax]
  411ced:	add    BYTE PTR [ecx-0x52],bl
  411cf0:	mov    edx,0x2452fa19
  411cf5:	adc    al,0xf8
  411cf7:	push   edx
  411cf8:	lods   al,BYTE PTR ds:[esi]
  411cf9:	aas    
  411cfa:	lock inc eax
  411cfc:	hlt    
  411cfd:	jecxz  0x411d1e
  411cff:	sahf   
  411d00:	out    0x88,eax
  411d02:	jo     0x411cce
  411d04:	(bad)  
  411d05:	nop
  411d06:	mov    bl,0xb1
  411d08:	inc    esp
  411d09:	and    ah,BYTE PTR [ecx]
  411d0b:	mov    eax,0x43845900
  411d10:	and    bl,BYTE PTR ss:[edx+ebp*8-0xebf793b]
  411d18:	pushf  
  411d19:	or     DWORD PTR [ebp-0x58563f5e],edx
  411d1f:	aad    0x6a
  411d21:	inc    ebx
  411d22:	cs mov eax,0x3263d3d0
  411d28:	push   0x22
  411d2a:	das    
  411d2b:	retf   
  411d2c:	lds    edx,FWORD PTR [eax+0x21f4b1b3]
  411d32:	shr    DWORD PTR [ebp+0x454c885c],1
  411d38:	out    0x21,al
  411d3a:	jo     0x411d8f
  411d3c:	fs mov eax,0xb4d640c1
  411d42:	enter  0x9ab8,0x21
  411d46:	test   eax,0x4698a75a
  411d4b:	push   ebx
  411d4c:	ins    BYTE PTR es:[edi],dx
  411d4d:	mov    eax,0xb60040a1
  411d52:	add    BYTE PTR [eax],al
  411d54:	inc    edx
  411d55:	fisttp DWORD PTR [ebx-0x2be40a4]
  411d5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d5c:	mov    dl,0xa9
  411d5e:	or     BYTE PTR [ecx-0x1602bf85],dl
  411d64:	test   al,0x80
  411d66:	je     0x411d44
  411d68:	push   cs
  411d69:	call   0xeefa:0x3fc069fd
  411d70:	mov    dl,0xf3
  411d72:	std    
  411d73:	jbe    0x411d83
  411d75:	mov    al,ds:0x1ef40f59
  411d7a:	add    al,0xe9
  411d7c:	jns    0x411dd1
  411d7e:	in     al,dx
  411d7f:	push   0xe901b4ff
  411d84:	sub    al,0xa8
  411d86:	push   ebp
  411d87:	ret    
  411d88:	or     dl,BYTE PTR [ebx+0x73]
  411d8b:	dec    ebp
  411d8c:	jecxz  0x411de4
  411d8e:	push   ebx
  411d8f:	xor    eax,0xd8e846aa
  411d94:	ins    DWORD PTR es:[edi],dx
  411d95:	aas    
  411d96:	std    
  411d97:	bound  esi,QWORD PTR [ebp-0x71]
  411d9a:	push   ebp
  411d9b:	je     0x411d45
  411d9d:	imul   edi,esp,0x1e
  411da0:	dec    esi
  411da1:	(bad)
  411da5:	inc    eax
  411da6:	std    
  411da7:	fs jae 0x411d7a
  411daa:	test   BYTE PTR ds:0xba00de2b,bh
  411db0:	ss test eax,0xde2b6968
  411db6:	add    BYTE PTR [ebx-0x57ce0000],al
  411dbc:	push   0xffffffe8
  411dbe:	xchg   esp,eax
  411dbf:	aas    
  411dc0:	std    
  411dc1:	jmp    0x7dc470b2
  411dc6:	adc    BYTE PTR [eax-0x3],al
  411dc9:	cmp    DWORD PTR [esi-0x16],ecx
  411dcc:	xor    BYTE PTR [eax],al
  411dce:	test   BYTE PTR [ebx],bl
  411dd0:	std    
  411dd1:	mov    BYTE PTR [ebx-0x2],dl
  411dd4:	cmp    al,0xd9
  411dd7:	out    dx,al
  411dd8:	test   BYTE PTR [ecx+0x5300db96],cl
  411dde:	sbb    al,0x3d
  411de0:	mov    WORD PTR [ebp-0x10306],?
  411de6:	ds sub dl,bl
  411de9:	call   0x3eb8bf
  411dee:	inc    eax
  411def:	push   ecx
  411df0:	xor    al,0x3c
  411df2:	je     0x411e0f
  411df4:	std    
  411df5:	mov    WORD PTR [ebx],es
  411df7:	loop   0x411e46
  411df9:	mov    edi,0xdb10
  411dfe:	adc    DWORD PTR [eax-0x7c],0xfefdd89c
  411e05:	push   eax
  411e06:	fldenv [edi-0x7]
  411e09:	jmp    DWORD PTR [eax+0x58]
  411e0c:	mov    ebp,0x7c242274
  411e11:	clc    
  411e12:	jecxz  0x411e61
  411e14:	cmp    BYTE PTR [ebp+0x52],0xdb
  411e18:	je     0x411e3d
  411e1a:	pop    ecx
  411e1b:	push   0xfff1
  411e20:	add    esp,DWORD PTR [edi+0xf]
  411e23:	inc    eax
  411e24:	push   es
  411e25:	jno    0x411e24
  411e27:	mov    bl,BYTE PTR [esi]
  411e29:	push   eax
  411e2a:	inc    esp
  411e2b:	clc    
  411e2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e2d:	test   esi,edi
  411e2f:	jne    0x411e13
  411e31:	fidiv  WORD PTR [esp+edi*8-0x27]
  411e35:	add    eax,0xd452c085
  411e3a:	aaa    
  411e3b:	jge    0x411dfb
  411e3d:	push   0xf3d7b301
  411e42:	push   DWORD PTR [ecx]
  411e44:	in     eax,dx
  411e45:	fidiv  WORD PTR [esp+edi*8+0x2f]
  411e49:	sub    bh,dh
  411e4b:	sub    edi,DWORD PTR ds:0x1aff04f5
  411e51:	sbb    DWORD PTR ds:0xc1226f14,ebx
  411e57:	jmp    FWORD PTR [ebx+ebp*2-0x5dc48b47]
  411e5e:	xchg   DWORD PTR [ebx+0x4f1d7783],edx
  411e64:	xchg   DWORD PTR [ebx],ebp
  411e66:	ss (bad) 
  411e68:	jo     0x411e71
  411e6a:	push   ebp
  411e6b:	add    BYTE PTR [ecx],cl
  411e6d:	jle    0x411eb0
  411e6f:	push   esp
  411e70:	mov    ah,0x68
  411e72:	sub    ebx,0x9fdfb4c7
  411e78:	jne    0x411e6d
  411e7a:	add    al,0x1
  411e7c:	fsubr  st(6),st
  411e7e:	mov    ch,0x8a
  411e80:	aas    
  411e81:	inc    edi
  411e82:	sbb    DWORD PTR [ebx+0x352f0000],0x1
  411e89:	push   0xffc11e73
  411e8e:	sub    DWORD PTR [ebx],esi
  411e90:	jge    0x411ea3
  411e92:	outs   dx,DWORD PTR ds:[esi]
  411e93:	inc    edi
  411e94:	mov    BYTE PTR [edi-0x743cd8],bh
  411e9a:	adc    BYTE PTR [eax-0x78],cl
  411e9d:	cmc    
  411e9e:	or     DWORD PTR [ebp+0x474182a3],0xffffff95
  411ea5:	ja     0x411f08
  411ea7:	fdivr  st(7),st
  411ea9:	sti    
  411eaa:	sbb    eax,0x338d0187
  411eaf:	ret    0x2
  411eb2:	das    
  411eb3:	inc    edi
  411eb4:	mov    cl,0xe7
  411eb6:	xchg   esp,eax
  411eb7:	add    DWORD PTR [esi],ebx
  411eb9:	(bad)  
  411eba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ebb:	das    
  411ebc:	mov    dh,bh
  411ebe:	inc    ebx
  411ebf:	bound  ecx,QWORD PTR [edx-0x4a214b2a]
  411ec5:	sub    edx,DWORD PTR [esi]
  411ec7:	sub    dh,bl
  411ec9:	push   ds
  411eca:	pop    ecx
  411ecb:	imul   ebx,DWORD PTR [esp+edx*1-0x53],0x26
  411ed0:	into   
  411ed1:	sub    ebp,DWORD PTR [eax+0x27]
  411ed4:	(bad)  
  411ed5:	push   ds
  411ed6:	add    DWORD PTR [eax-0x61],ebp
  411ed9:	sub    ebx,eax
  411edb:	sbb    BYTE PTR [esi+0x3319ac1e],dh
  411ee1:	enter  0x9e16,0x74
  411ee5:	mov    al,ds:0x8d8f96a0
  411eea:	add    BYTE PTR [eax],al
  411eec:	mov    cl,0xde
  411eee:	out    0x1e,eax
  411ef0:	jecxz  0x411f1f
  411ef2:	bound  eax,QWORD PTR [esi-0x10]
  411ef5:	push   0x2c
  411ef7:	and    al,ch
  411ef9:	inc    ebp
  411efa:	sbb    al,0x4d
  411efc:	push   ecx
  411efd:	cmp    eax,0x6334476a
  411f02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f03:	push   cs
  411f04:	mov    al,ds:0x67884f21
  411f09:	cmp    eax,0xb255875e
  411f0e:	lock push ds
  411f10:	mov    ds:0x242b3f3a,eax
  411f15:	cmp    eax,0x3aa31e46
  411f1a:	dec    edi
  411f1b:	pushf  
  411f1c:	idiv   BYTE PTR [esi+esi*1]
  411f1f:	sub    dh,BYTE PTR [ecx]
  411f21:	enter  0x2be7,0xd9
  411f25:	cmp    DWORD PTR [esi],esp
  411f27:	push   ds
  411f28:	pop    ecx
  411f29:	pushf  
  411f2a:	ret    0xed4c
  411f2d:	xchg   edx,eax
  411f2e:	bound  ebp,QWORD PTR [edi]
  411f30:	lods   eax,DWORD PTR ds:[esi]
  411f31:	dec    ecx
  411f32:	out    dx,eax
  411f33:	mov    dl,0x7a
  411f35:	xchg   ebp,eax
  411f36:	mov    edx,0x1dce503a
  411f3b:	ret    0x67d0
  411f3e:	add    cl,bh
  411f40:	mov    ah,0xd9
  411f42:	sub    al,0xf
  411f44:	in     eax,dx
  411f45:	cmp    al,0x88
  411f47:	add    al,0xe3
  411f49:	sbb    al,BYTE PTR [ecx-0x17]
  411f4c:	adc    edx,edx
  411f4e:	mov    al,0xfb
  411f50:	add    BYTE PTR [eax],al
  411f52:	ins    BYTE PTR es:[edi],dx
  411f53:	cmp    al,0x8a
  411f55:	and    al,0x33
  411f57:	sub    DWORD PTR [eax],0x8a3c6ea7
  411f5d:	and    al,0x3f
  411f5f:	add    DWORD PTR [eax],0x8a3c6e97
  411f65:	and    al,0x7b
  411f67:	jg     0x411f6d
  411f69:	(bad)  
  411f6a:	outs   dx,BYTE PTR ds:[esi]
  411f6b:	cmp    al,0x8a
  411f6d:	and    al,0x77
  411f6f:	jg     0x411fa9
  411f71:	mov    bh,0x6e
  411f73:	cmp    al,0x8a
  411f75:	and    al,0x63
  411f77:	(bad)  
  411f78:	xor    cl,BYTE PTR [edx+0xf]
  411f7b:	sbb    al,BYTE PTR [ecx-0x17]
  411f7e:	mov    eax,ds:0xb411e8b9
  411f83:	icebp  
  411f84:	or     BYTE PTR [edi+0x5ae53c6e],cl
  411f8a:	fnstcw WORD PTR [edi*8+0x56acea72]
  411f91:	bound  eax,QWORD PTR [eax]
  411f93:	xor    BYTE PTR [edx],dl
  411f95:	test   eax,0xd3d63b2c
  411f9a:	inc    DWORD PTR [eax+0x3bee1cf8]
  411fa0:	mov    WORD PTR [esp+ebx*1+0x6116e893],?
  411fa7:	cmp    edi,ebp
  411fa9:	jb     0x41201d
  411fab:	stos   DWORD PTR es:[edi],eax
  411fac:	std    
  411fad:	aam    0x24
  411faf:	sbb    al,0x41
  411fb1:	jmp    0xd5ab3101
  411fb6:	add    BYTE PTR [eax],al
  411fb8:	dec    edi
  411fb9:	out    0xde,eax
  411fbb:	add    BYTE PTR [ebp-0x29827421],al
  411fc1:	ja     0x411fa8
  411fc3:	mov    esp,0x8b00e200
  411fc8:	or     DWORD PTR [edx-0x2],esi
  411fcb:	xor    eax,0x42f9be
  411fd0:	shl    ecx,1
  411fd2:	addr16 xor eax,0x43dcd3b5
  411fd8:	xchg   esi,eax
  411fd9:	ins    BYTE PTR es:[edi],dx
  411fda:	jl     0x411fc4
  411fdc:	dec    esi
  411fdd:	or     ah,BYTE PTR [ecx-0x76207942]
  411fe3:	(bad)  
  411fe4:	fnstenv es:[eax+ecx*1]
  411fe8:	mov    al,0x1e
  411fea:	std    
  411feb:	(bad)  
  411fec:	mov    eax,0x45de31be
  411ff1:	loop   0x41202a
  411ff3:	sbb    eax,0x42fcbe
  411ff8:	cmp    dh,BYTE PTR ds:0xf9621d38
  411ffe:	inc    edx
  411fff:	add    BYTE PTR [edx+0x2e],bl
  412002:	cmp    BYTE PTR ds:0x42fbca,bl
  412008:	cmp    ah,dh
  41200a:	mov    BYTE PTR ds:0x42a4d0,0x47
  412011:	push   ss
  412012:	ret    0x1875
  412015:	addr16 sbb al,0xfe
  412018:	dec    esp
  412019:	push   ds
  41201a:	std    
  41201b:	pop    esi
  41201c:	add    BYTE PTR [eax],al
  41201e:	shl    BYTE PTR [ebp-0x38],1
  412021:	ret    0xdefa
  412024:	push   ebx
  412025:	mov    esi,DWORD PTR [edx+0x5e]
  412028:	jmp    0x67b2b899
  41202d:	inc    esp
  41202e:	mov    ch,0x6
  412030:	popa   
  412031:	ficom  DWORD PTR [ecx]
  412033:	fisub  DWORD PTR [edi+0x2f]
  412036:	das    
  412037:	ret    0xb39e
  41203a:	xchg   ebp,ebx
  41203c:	ret    
  41203d:	mov    ebp,0x2ba7452f
  412042:	mov    ds:0xd75741b9,al
  412047:	outs   dx,DWORD PTR ds:[esi]
  412048:	pop    ebx
  412049:	inc    eax
  41204b:	mov    edi,0xc1a40f96
  412050:	or     BYTE PTR [ebp+0x69b4256a],cl
  412056:	sub    eax,0x10e7b1fb
  41205b:	xchg   edx,eax
  41205c:	add    eax,DWORD PTR [eax]
  41205e:	mov    dl,0x84
  412060:	or     DWORD PTR [ebx+esi*2+0x15000146],eax
  412067:	cmp    eax,0x24ea8ab1
  41206c:	xchg   DWORD PTR [ebx+eax*8+0x4c],ecx
  412070:	xchg   esp,eax
  412071:	les    esi,FWORD PTR [eax+0x5b]
  412074:	jg     0x412035
  412076:	cmp    dl,cl
  412078:	inc    edx
  412079:	add    DWORD PTR [edi],ebp
  41207b:	inc    ebp
  41207c:	mov    BYTE PTR [ebx+ecx*2-0x2c],al
  412080:	scas   al,BYTE PTR es:[edi]
  412081:	add    BYTE PTR [eax],al
  412083:	add    cl,bh
  412085:	shr    DWORD PTR [ebx+eax*2],cl
  412088:	ret    0x145
  41208b:	mov    edx,ebp
  41208d:	push   eax
  41208e:	jg     0x41204f
  412090:	sub    cl,cl
  412092:	push   0x1
  412094:	das    
  412095:	inc    ebp
  412096:	xchg   BYTE PTR [ebx+ebx*1+0x48],bh
  41209a:	or     al,BYTE PTR [ebx+ecx*8-0x55fffebb]
  4120a1:	mov    ch,BYTE PTR [ecx]
  4120a3:	dec    edi
  4120a4:	test   DWORD PTR [edi-0x51],eax
  4120a7:	push   esi
  4120a8:	pop    ss
  4120a9:	out    0x8f,al
  4120ab:	add    BYTE PTR [edi],ch
  4120ad:	mov    esi,0xdeb2cbbf
  4120b2:	daa    
  4120b3:	or     ebp,DWORD PTR [ebx+0x2f03e96a]
  4120b9:	pop    ebp
  4120ba:	xchg   esp,eax
  4120bb:	sub    esp,eax
  4120bd:	call   0xde6fa725
  4120c2:	out    0x88,eax
  4120c4:	imul   ebp,DWORD PTR [esi],0xffffff97
  4120c7:	mov    BYTE PTR [ebx+0x1e],dh
  4120ca:	xchg   edi,eax
  4120cb:	mov    cl,0x59
  4120cd:	inc    esi
  4120ce:	in     eax,dx
  4120cf:	(bad)  
  4120d0:	das    
  4120d1:	fidiv  WORD PTR [eax-0x40]
  4120d4:	fsub   DWORD PTR [ebx-0x59]
  4120d7:	or     dh,BYTE PTR [ebx+0x2f03e9c6]
  4120dd:	pop    ebp
  4120de:	dec    esp
  4120df:	adc    al,0x98
  4120e1:	call   0xde6fda51
  4120e6:	out    0x88,eax
  4120e8:	add    BYTE PTR [eax],al
  4120ea:	repz inc ecx
  4120ec:	pop    ss
  4120ed:	scas   al,BYTE PTR es:[edi]
  4120ee:	sub    eax,0x542c1690
  4120f3:	mov    dl,0xe8
  4120f5:	add    esp,DWORD PTR [esi-0x577f505d]
  4120fb:	jmp    0xde6fe26b
  412100:	out    0x86,eax
  412102:	shl    DWORD PTR [ecx],cl
  412104:	out    0xad,eax
  412106:	push   es
  412107:	imul   edi,esp,0x6f
  41210a:	loopne 0x412151
  41210c:	repnz pop eax
  41210e:	inc    eax
  41210f:	cmp    DWORD PTR [eax+eax*8+0x40],ebx
  412113:	mov    ?,WORD PTR [edx+0x42]
  412116:	loopne 0x4120a7
  412118:	pop    esi
  412119:	nop
  41211a:	xor    al,0x46
  41211c:	cdq    
  41211d:	(bad)  
  41211e:	das    
  41211f:	fisub  WORD PTR [ebx+eax*2-0x64]
  412123:	popf   
  412124:	push   0xffffff98
  412126:	sbb    dh,bl
  412128:	out    dx,al
  412129:	jg     0x412152
  41212b:	fadd   QWORD PTR [eax]
  41212d:	jmp    0x31bc7e5e
  412132:	sub    ch,cl
  412134:	test   esi,esi
  412136:	sub    bl,dh
  412138:	add    BYTE PTR [ecx+0x64f8a1b9],bh
  41213e:	mov    edi,0x7668e87c
  412143:	cmp    ch,bh
  412145:	je     0x4120fe
  412147:	sub    al,0x89
  412149:	pop    ss
  41214a:	adc    al,0x9f
  41214c:	adc    ch,cl
  41214e:	add    BYTE PTR [eax],al
  412150:	sub    al,0x86
  412152:	add    bl,dh
  412154:	scas   eax,DWORD PTR es:[edi]
  412155:	sub    eax,0x652ce8ff
  41215a:	inc    ebx
  41215b:	lds    eax,FWORD PTR [ecx+eiz*4+0x41aae6f4]
  412162:	(bad)  
  412163:	call   0xbd852894
  412168:	inc    edx
  412169:	out    0x81,eax
  41216b:	cmp    al,0x4f
  41216d:	cmp    DWORD PTR [esi],ecx
  41216f:	ins    BYTE PTR es:[edi],dx
  412170:	cmp    eax,0xabe900de
  412175:	mov    eax,ds:0xdc2aae08
  41217a:	add    cl,ch
  41217c:	sub    al,0x65
  41217e:	inc    eax
  41217f:	std    
  412180:	xchg   edx,eax
  412181:	ffreep st(5)
  412183:	and    al,0x13
  412185:	out    dx,al
  412186:	add    cl,ch
  412188:	sub    al,0x98
  41218a:	sub    DWORD PTR [ecx+0x7650eca5],0x50
  412191:	xor    bl,bl
  412193:	sub    dh,BYTE PTR [ebx]
  412195:	xchg   edi,eax
  412196:	xchg   DWORD PTR [eax+edi*8+0x9d5c061],ebp
  41219d:	(bad)  
  41219e:	ss fs mov eax,0x4d41587f
  4121a5:	jae    0x4121a7
  4121a7:	add    BYTE PTR [esi],al
  4121a9:	imul   ecx,DWORD PTR [esp+ebx*8-0x24],0xffffffe4
  4121ae:	mov    edi,eax
  4121b0:	outs   dx,BYTE PTR ds:[esi]
  4121b1:	cwde   
  4121b2:	aad    0xff
  4121b4:	add    BYTE PTR [eax],al
  4121b6:	dec    ecx
  4121b7:	mov    bh,0xbd
  4121b9:	jne    0x4121b7
  4121bb:	mov    DWORD PTR ds:0x2dfb93c7,eax
  4121c1:	add    dh,dl
  4121c3:	fistp  DWORD PTR [esi-0x75]
  4121c6:	xchg   ebx,eax
  4121c7:	retf   
  4121c8:	mov    cl,BYTE PTR [ebp+0x3a]
  4121cb:	in     eax,0xb5
  4121cd:	not    ch
  4121cf:	popf   
  4121d0:	mov    WORD PTR [esi+ecx*8-0x24],es
  4121d4:	add    eax,0x42
  4121d7:	cmp    ch,ah
  4121d9:	pushf  
  4121da:	jno    0x4121b2
  4121dc:	dec    BYTE PTR [ecx-0x3f7c15ab]
  4121e2:	add    ebp,edx
  4121e4:	mov    DWORD PTR [ebp-0x7e],eax
  4121e7:	add    al,0x62
  4121e9:	add    DWORD PTR [esi-0x2077625],eax
  4121ef:	ja     0x4121ce
  4121f1:	call   0x3eb0d3
  4121f6:	or     eax,0x3d8bed78
  4121fb:	jmp    0xce02:0xfa43ff50
  412202:	daa    
  412203:	arpl   WORD PTR [edx+0xc],si
  412206:	scas   al,BYTE PTR es:[edi]
  412207:	lock (bad) 
  412209:	jmp    FWORD PTR [ecx-0x42f3be24]
  41220f:	pop    ds
  412210:	rol    DWORD PTR [eax+0x438a467f],1
  412216:	pop    edx
  412217:	addr16 pop es
  412219:	mov    eax,DWORD PTR [eax]
  41221b:	add    BYTE PTR [ebp-0x1d],dh
  41221e:	mov    BYTE PTR [esi+eiz*1],0x46
  412222:	inc    BYTE PTR [ebx+0x2f]
  412225:	inc    ecx
  412226:	mov    WORD PTR [ebx+ecx*1+0x75],es
  41222a:	mov    dl,0x8a
  41222c:	xor    DWORD PTR fs:[ebx+ecx*2],eax
  412230:	aaa    
  412231:	push   esi
  412232:	sub    DWORD PTR [ebx+0x18efd8],esi
  412238:	ins    BYTE PTR es:[edi],dx
  412239:	sbb    DWORD PTR [edx+eax*2+0x7ccac23],ecx
  412240:	push   ebp
  412241:	sub    bh,BYTE PTR [edi]
  412243:	add    esi,DWORD PTR [edi]
  412245:	inc    ebp
  412246:	xchg   BYTE PTR [edi+edi*8+0x6c],bh
  41224a:	sub    DWORD PTR [ebx+edx*4+0x44],eax
  41224e:	add    DWORD PTR [ebp-0x754e228e],ecx
  412254:	call   0x1fb53aad
  412259:	dec    eax
  41225a:	mov    ecx,DWORD PTR [ebx]
  41225c:	(bad)  
  41225d:	mov    edx,0xc22f0091
  412262:	inc    esp
  412263:	jae    0x41229f
  412265:	mov    esp,0xeb2f78f
  41226a:	nop
  41226b:	or     eax,0xe73eabff
  412270:	(bad)  
  412271:	mov    ecx,0x3b6fe15
  412276:	cmc    
  412277:	mov    ah,bh
  412279:	adc    BYTE PTR [edx+0x4aa6344],cl
  41227f:	cmp    al,0x0
  412281:	add    bh,bh
  412283:	ror    DWORD PTR [eax],1
  412285:	and    edx,0x5c
  412288:	add    BYTE PTR [ebp+0x31],dh
  41228b:	jg     0x41224e
  41228d:	pop    ss
  41228e:	cs dec esp
  412290:	out    dx,al
  412291:	cmp    esi,eax
  412293:	inc    edi
  412294:	or     BYTE PTR [edi+0x40],0xaf
  412298:	adc    eax,0x15cba82
  41229d:	rsm    
  41229f:	(bad)  [ebp+0x25362916]
  4122a5:	ret    
  4122a6:	cmp    dh,bl
  4122a8:	shr    edx,0xab
  4122ab:	mov    bl,0x83
  4122ad:	mov    esp,0x4823b08
  4122b2:	das    
  4122b3:	arpl   WORD PTR [ebx+ebx*1-0x4bd19690],sp
  4122ba:	stc    
  4122bb:	stos   DWORD PTR es:[edi],eax
  4122bc:	xlat   BYTE PTR ds:[ebx]
  4122bd:	push   ss
  4122be:	jnp    0x4122a2
  4122c0:	paddw  mm3,QWORD PTR [ebp-0x21]
  4122c4:	out    0x80,eax
  4122c6:	mov    al,ds:0x638afcaa
  4122cb:	ss fs push cs
  4122ce:	pop    esp
  4122cf:	in     al,0x97
  4122d1:	mov    dh,dl
  4122d3:	inc    esi
  4122d4:	xchg   esi,eax
  4122d5:	pop    eax
  4122d6:	shl    DWORD PTR ds:0x6714c360,0x7a
  4122dd:	jecxz  0x412284
  4122df:	fwait
  4122e0:	retf   
  4122e1:	mov    al,dh
  4122e3:	xor    al,0x68
  4122e5:	sbb    al,0x0
  4122e7:	add    BYTE PTR [ecx+0x2003e635],ah
  4122ed:	out    0x62,eax
  4122ef:	enter  0x6768,0x32
  4122f3:	loopne 0x4122ac
  4122f5:	mov    eax,ds:0x6352aa0f
  4122fa:	xor    al,0x60
  4122fc:	loopne 0x412343
  4122fe:	push   esi
  4122ff:	pop    edx
  412300:	jo     0x412337
  412302:	je     0x4122c4
  412304:	pusha  
  412305:	mov    ?,WORD PTR [edx+0x3e]
  412308:	lock xor al,0x1c
  41230b:	hlt    
  41230c:	pop    ecx
  41230d:	stos   DWORD PTR es:[edi],eax
  41230e:	fld    TBYTE PTR [ebx]
  412310:	fs mov al,0xe8
  412313:	add    esi,DWORD PTR [esi+ebp*1+0x5bc0d64]
  41231a:	add    DWORD PTR [edx-0x69],ebp
  41231d:	sub    eax,0x624ef700
  412322:	inc    ecx
  412323:	sbb    ebx,esp
  412325:	popa   
  412326:	inc    ecx
  412327:	or     eax,0x517333db
  41232c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41232d:	sbb    ch,al
  41232f:	inc    edi
  412330:	mov    edi,0x6c6d00dd
  412335:	stos   BYTE PTR es:[edi],al
  412336:	or     al,0x72
  412338:	out    dx,eax
  412339:	sub    al,0x56
  41233b:	inc    ecx
  41233c:	push   ds
  41233d:	jns    0x41233c
  41233f:	mov    cs:0x7f11349f,eax
  412345:	inc    esp
  412346:	std    
  412347:	push   ds
  412348:	mov    bl,0x9f
  41234a:	inc    eax
  41234b:	bound  eax,QWORD PTR [eax]
  41234d:	add    bh,ch
  41234f:	fadd   QWORD PTR [edi-0x6aba2f56]
  412355:	pop    es
  412356:	and    DWORD PTR [ecx+eax*4],esi
  412359:	xor    DWORD PTR [ecx],ebx
  41235b:	xchg   esp,eax
  41235c:	pop    esi
  41235d:	and    BYTE PTR [esi-0x17],ch
  412360:	add    BYTE PTR [ebp+eiz*4-0x702a7eb8],dl
  412367:	(bad)
  41236b:	cdq    
  41236c:	adc    dl,ch
  41236e:	out    dx,eax
  41236f:	mov    dh,BYTE PTR [edx+eiz*8+0x44]
  412373:	loop   0x41234b
  412375:	(bad)  
  412376:	and    ch,BYTE PTR [eax-0x10]
  412379:	xor    DWORD PTR fs:[edx+0x45ecfa05],ebp
  412380:	lods   al,BYTE PTR ds:[esi]
  412381:	jmp    0x139701b2
  412386:	push   ebp
  412387:	popa   
  412388:	jnp    0x412347
  41238a:	mov    ds:0x33520c3c,eax
  41238f:	fimul  WORD PTR [ebx-0x765ac8dc]
  412395:	add    BYTE PTR [ecx+0x3bff5269],bl
  41239b:	call   0xdf756788
  4123a0:	add    BYTE PTR [ecx-0x3f7b2df5],cl
  4123a6:	or     dl,BYTE PTR [ebp+0x67]
  4123a9:	or     dl,BYTE PTR [ebx-0x7eaf168d]
  4123af:	arpl   WORD PTR ds:0x1b0000ff,cx
  4123b5:	adc    BYTE PTR [ebx],0x40
  4123b8:	push   ss
  4123b9:	pop    edi
  4123ba:	ror    DWORD PTR [ebx+edx*4],0x73
  4123be:	jmp    0x71846513
  4123c3:	adc    al,dh
  4123c5:	fisttp WORD PTR [ecx+0x54450e55]
  4123cb:	or     BYTE PTR [edx+ecx*8+0x7980874],ah
  4123d2:	push   ds
  4123d3:	(bad)  
  4123d4:	and    ecx,ecx
  4123d6:	dec    ebp
  4123d7:	lea    eax,[ebx-0x2d72af05]
  4123dd:	or     eax,0x1d4e850
  4123e2:	(bad)  
  4123e3:	call   DWORD PTR [ebx+0x16]
  4123e6:	dec    DWORD PTR [edx-0x25d529a5]
  4123ec:	cmp    eax,0x7e4502f2
  4123f1:	outs   dx,BYTE PTR ds:[esi]
  4123f2:	dec    ebp
  4123f3:	lea    ecx,[edx+0x6ce84d09]
  4123f9:	add    al,0xff
  4123fb:	call   DWORD PTR [ebx]
  4123fd:	je     0x4123f8
  4123ff:	push   eax
  412400:	in     al,dx
  412401:	fadd   QWORD PTR [ecx]
  412403:	sti    
  412404:	sbb    DWORD PTR [ebp+eiz*8+0xdf47db],eax
  41240b:	test   DWORD PTR [esi+0x2f560764],edx
  412411:	pop    ebp
  412412:	pop    esi
  412413:	aam    0x50
  412415:	sar    BYTE PTR fs:[edi+0x3e540000],1
  41241c:	adc    al,0x74
  41241e:	pop    ds
  41241f:	mov    ah,0x8e
  412421:	or     ebx,edi
  412423:	pop    esp
  412424:	xor    dl,ah
  412426:	xor    ah,al
  412428:	mov    BYTE PTR [ebx+eax*2-0x52],al
  41242c:	ror    DWORD PTR [edx-0x4423018],1
  412432:	sub    al,0x82
  412434:	icebp  
  412435:	pop    esi
  412436:	jno    0x4124a8
  412438:	dec    edx
  412439:	rcr    DWORD PTR [edi],0x45
  41243c:	scas   al,BYTE PTR es:[edi]
  41243d:	mov    dl,BYTE PTR [ebx]
  41243f:	enter  0x7b25,0xac
  412443:	and    DWORD PTR [ebp-0x1],edi
  412446:	mov    ds:0xe84f7d79,eax
  41244b:	push   ecx
  41244c:	or     edi,edi
  41244e:	cmp    cl,BYTE PTR [ecx]
  412450:	xor    eax,DWORD PTR [edx+0x2f]
  412453:	outs   dx,BYTE PTR ds:[esi]
  412454:	mov    edx,0xfb49ef84
  412459:	aas    
  41245a:	push   es
  41245b:	add    BYTE PTR [ebp+0x41782d73],0xc8
  412462:	in     eax,dx
  412463:	inc    eax
  412464:	add    DWORD PTR [edi-0x50],edx
  412467:	test   al,0xdd
  412469:	pop    es
  41246a:	test   al,0x31
  41246c:	(bad)  
  41246e:	in     al,dx
  41246f:	inc    esp
  412470:	jle    0x412469
  412472:	test   cl,0x11
  412475:	jae    0x4124b9
  412477:	(bad)
  41247a:	jne    0x412483
  41247c:	add    eax,0xfb000000
  412481:	fcomp  DWORD PTR [ebp*4-0x7cee94a8]
  412488:	outs   dx,DWORD PTR ds:[esi]
  412489:	call   0xddea7a7b
  41248e:	div    DWORD PTR [ecx]
  412490:	in     eax,dx
  412491:	fnsave ds:0xf97a4313
  412497:	ret    
  412498:	push   eax
  412499:	mov    edi,DWORD PTR [edi-0x4f]
  41249c:	inc    ebx
  41249d:	xor    al,BYTE PTR [esi+0x4bc841ba]
  4124a3:	idiv   al
  4124a5:	fst    QWORD PTR ds:0xaa92697f
  4124ab:	mov    bh,0x82
  4124ad:	gs (bad) 
  4124b0:	xor    al,0x88
  4124b2:	pop    esi
  4124b3:	stc    
  4124b4:	sbb    BYTE PTR [edx+ebp*4],dl
  4124b7:	add    esp,DWORD PTR [esi+edx*1-0x541a7750]
  4124be:	add    BYTE PTR [ecx-0x340b5506],cl
  4124c4:	xor    esi,DWORD PTR [eax]
  4124c6:	and    edi,eax
  4124c8:	lock lods eax,DWORD PTR ds:[esi]
  4124ca:	cld    
  4124cb:	sbb    edx,DWORD PTR [edx+0x11]
  4124ce:	adc    ebp,DWORD PTR es:[esi+ebx*1+0x7181e793]
  4124d6:	div    DWORD PTR [ecx]
  4124d8:	ins    DWORD PTR es:[edi],dx
  4124d9:	fidiv  WORD PTR [esi-0x2685dcee]
  4124df:	ret    
  4124e0:	sar    BYTE PTR [ecx],0xc
  4124e3:	sbb    BYTE PTR [eax],al
  4124e5:	add    BYTE PTR [ecx-0x4ef395cf],bh
  4124eb:	stos   BYTE PTR es:[edi],al
  4124ec:	in     al,0x1b
  4124ee:	lods   eax,DWORD PTR ds:[esi]
  4124ef:	sub    dh,ah
  4124f1:	adc    bh,cl
  4124f3:	xor    ah,dh
  4124f5:	pop    edi
  4124f6:	ds sahf 
  4124f8:	out    0xb2,eax
  4124fa:	repnz fs stos BYTE PTR es:[edi],al
  4124fd:	scas   al,BYTE PTR es:[edi]
  4124fe:	ins    DWORD PTR es:[edi],dx
  4124ff:	mov    DWORD PTR [edx-0x75],esi
  412502:	cld    
  412503:	add    al,0x40
  412505:	mov    esp,?
  412507:	cmc    
  412508:	add    dl,dh
  41250a:	mov    al,ds:0xa4620cfd
  41250f:	ror    DWORD PTR ds:0xcfdbf34,0xea
  412516:	xchg   esp,eax
  412517:	test   eax,0xad3c3855
  41251c:	and    al,0xf9
  41251e:	and    al,0x15
  412520:	aam    0x86
  412522:	sbb    eax,0xb80178de
  412527:	cwde   
  412528:	js     0x4124dc
  41252a:	je     0x4124d9
  41252c:	jae    0x412515
  41252e:	lods   al,BYTE PTR ds:[esi]
  41252f:	test   al,0x7b
  412531:	jmp    0xf9aa06ee
  412536:	pop    esi
  412537:	pushf  
  412538:	add    BYTE PTR [esi+0x17],dl
  41253b:	test   DWORD PTR [edx],edx
  41253d:	test   eax,0x6938452c
  412542:	mov    ah,0xb4
  412544:	add    BYTE PTR [edi-0x6763460],dl
  41254a:	add    BYTE PTR [eax],al
  41254c:	adc    al,0x58
  41254e:	hlt    
  41254f:	cs cmp eax,0xb826f85c
  412555:	aad    0xe8
  412557:	cld    
  412558:	ss xor ch,bh
  41255b:	add    bl,dl
  41255d:	popa   
  41255e:	jo     0x4124f9
  412560:	sbb    eax,0xf8a7e8eb
  412565:	das    
  412566:	std    
  412567:	xchg   ebx,eax
  412568:	mov    esp,0xf7a2e88a
  41256d:	das    
  41256e:	std    
  41256f:	sbb    DWORD PTR [edx+edx*1-0x35c016bf],0x306cfbac
  41257a:	pop    ebx
  41257b:	(bad)  
  41257c:	out    0x8f,al
  41257e:	ret    0x2ce1
  412581:	gs (bad) 
  412583:	call   DWORD PTR [ebx]
  412585:	call   0x2451:0xb33e1b71
  41258c:	xor    BYTE PTR [edx-0x2029efef],0xc
  412593:	je     0x4125e8
  412595:	pop    esp
  412596:	test   DWORD PTR [edx],0x9fe3543
  41259c:	int    0xe9
  41259e:	inc    ebp
  41259f:	test   DWORD PTR [eax+ecx*2-0x23ad3d1d],eax
  4125a6:	push   ebx
  4125a7:	mov    ebp,DWORD PTR [edx-0x38071ea6]
  4125ad:	std    
  4125ae:	xchg   ecx,eax
  4125af:	add    BYTE PTR [eax],al
  4125b1:	add    BYTE PTR [esi],dl
  4125b3:	fcom   QWORD PTR [ecx+0x56]
  4125b6:	popf   
  4125b7:	inc    edi
  4125b8:	add    eax,0x5633d08b
  4125bd:	push   eax
  4125be:	(bad)  
  4125bf:	and    DWORD PTR es:[ecx+edi*2],ebx
  4125c3:	daa    
  4125c4:	jno    0x4125d8
  4125c6:	(bad)  
  4125c7:	fild   DWORD PTR [edi-0x75d1cdbc]
  4125cd:	inc    esi
  4125ce:	es mov bl,0x41
  4125d1:	and    al,0x2e
  4125d3:	mov    cl,0x43
  4125d5:	and    al,0xbc
  4125d7:	adc    cl,BYTE PTR [eax-0x73f40dbc]
  4125dd:	jl     0x4125c1
  4125df:	imul   edx,DWORD PTR [ebp-0x18],0x11
  4125e3:	mov    ds:0x263bfffd,al
  4125e8:	and    DWORD PTR [esi+edx*4],esp
  4125eb:	mov    dl,0xc6
  4125ed:	lea    ebx,[eax-0x1a00b2bd]
  4125f3:	pop    edx
  4125f4:	ret    
  4125f5:	adc    al,0x89
  4125f7:	adc    eax,0x3a325c88
  4125fc:	mov    BYTE PTR [edi+ebp*1-0x1f],dh
  412600:	call   0x231beec
  412605:	add    BYTE PTR [ecx+ebx*4-0x51d0d818],ch
  41260c:	lds    esp,FWORD PTR [ebx]
  41260e:	dec    edi
  41260f:	mov    esp,0xfdb407c6
  412614:	add    BYTE PTR [ebx+0x34ef0000],cl
  41261a:	jp     0x412667
  41261c:	adc    edx,DWORD PTR ds:0x110b437a
  412622:	add    BYTE PTR [esi+ebx*8-0x4dfffebb],al
  412629:	add    ecx,ebp
  41262b:	pop    ss
  41262c:	fisttp WORD PTR [ebp+ebp*8+0x14]
  412630:	cs inc ebp
  412632:	test   DWORD PTR [edi+0xd0b938],edi
  412638:	das    
  412639:	inc    ebp
  41263a:	fwait
  41263b:	daa    
  41263c:	stos   BYTE PTR es:[edi],al
  41263d:	adc    ch,ah
  41263f:	cmp    esi,DWORD PTR [edi-0x63]
  412642:	fwait
  412643:	mov    bh,0x2f
  412645:	inc    ebp
  412646:	jl     0x41260e
  412648:	pop    edi
  412649:	cwde   
  41264a:	aam    0xfe
  41264c:	inc    ecx
  41264d:	lea    ecx,[eax+0x6f]
  412650:	cs inc ebp
  412652:	adc    BYTE PTR ds:0x27afbb4,dh
  412658:	xlat   BYTE PTR ds:[ebx]
  412659:	or     dl,BYTE PTR [eax]
  41265b:	(bad)  
  41265c:	fmul   DWORD PTR [edx-0x5]
  41265f:	mov    WORD PTR [ebx+0x21],gs
  412662:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412663:	dec    edi
  412664:	enter  0xe548,0x33
  412668:	rcl    BYTE PTR [ecx],0xa1
  41266b:	adc    eax,0xc384456f
  412670:	and    ebx,DWORD PTR [ebx-0x25]
  412673:	mov    WORD PTR [ebx],gs
  412675:	sbb    ebp,ecx
  412677:	push   edi
  412678:	xchg   edi,eax
  412679:	fstp   QWORD PTR [edx]
  41267b:	dec    esp
  41267c:	add    BYTE PTR [eax],al
  41267e:	cwde   
  41267f:	cs ins BYTE PTR es:[edi],dx
  412681:	enter  0x924c,0x37
  412685:	jnp    0x4126f8
  412687:	(bad)  
  412688:	into   
  412689:	rol    DWORD PTR [ecx+0x99dcfe7],cl
  41268f:	fucom  st(7)
  412691:	mov    BYTE PTR [eax-0x137f0e57],dh
  412697:	stc    
  412698:	inc    edi
  412699:	mov    ah,0x61
  41269b:	enter  0xf21b,0x18
  41269f:	fidiv  WORD PTR [edx+0x3c]
  4126a2:	sub    eax,0x5ea37fe3
  4126a7:	mov    cs,WORD PTR cs:[eax+0x3b6bde80]
  4126ae:	cmp    BYTE PTR [esi],ch
  4126b0:	out    0x80,eax
  4126b2:	in     al,dx
  4126b3:	stc    
  4126b4:	pop    es
  4126b5:	mov    ah,0xb5
  4126b7:	and    eax,0x2d5d0f17
  4126bc:	sbb    eax,0xe8af151c
  4126c1:	add    edx,DWORD PTR [eax]
  4126c3:	cmc    
  4126c4:	bound  edi,QWORD PTR [ebx]
  4126c6:	mov    bh,0xe1
  4126c8:	aas    
  4126c9:	push   ecx
  4126ca:	add    ch,BYTE PTR [esi]
  4126cc:	inc    esi
  4126cd:	sbb    esp,DWORD PTR [ebp-0x48]
  4126d0:	inc    DWORD PTR [eax-0x5467fd8c]
  4126d6:	rol    BYTE PTR [esi],1
  4126d8:	jbe    0x4126de
  4126da:	das    
  4126db:	pop    ebx
  4126dc:	stos   DWORD PTR es:[edi],eax
  4126dd:	out    0x78,eax
  4126df:	mov    gs,WORD PTR [eax+ecx*8+0x0]
  4126e3:	add    BYTE PTR [edx+ebp*8],cl
  4126e6:	mov    bh,0x7a
  4126e8:	icebp  
  4126e9:	mov    es,WORD PTR [ecx+0x3b5b61df]
  4126ef:	call   0x429052c
  4126f4:	mov    DWORD PTR [edx+0x0],0x812c3829
  4126fb:	and    eax,0x5dc0632f
  412700:	test   eax,0x9b057c58
  412705:	pop    eax
  412706:	into   
  412707:	bound  edx,QWORD PTR [eax+ebx*2+0x44]
  41270b:	add    eax,0x1de88e87
  412710:	cmp    al,0x2c
  412712:	std    
  412713:	fs in  al,dx
  412715:	mov    al,0x68
  412717:	(bad)  
  412718:	rol    BYTE PTR [ecx],0x15
  41271b:	bound  edx,QWORD PTR [ecx]
  41271d:	pop    eax
  41271e:	add    DWORD PTR [edx-0x58],esi
  412721:	add    DWORD PTR ds:0x4f5906c,ebp
  412727:	or     DWORD PTR ds:0xa88efd0e,0xb436746d
  412731:	fild   WORD PTR [ecx]
  412733:	out    0x96,eax
  412735:	loope  0x41279f
  412737:	cdq    
  412738:	ret    0xec
  41273b:	sbb    DWORD PTR [ebx+0x19],eax
  41273e:	shl    BYTE PTR [esi+0x29],cl
  412741:	pop    eax
  412742:	push   cs
  412743:	push   0x2d
  412745:	loop   0x412748
  412747:	loop   0x412749
  412749:	add    cl,al
  41274b:	sub    esi,DWORD PTR [ebp+eax*1+0xf]
  41274f:	mov    gs,eax
  412751:	cmp    DWORD PTR [esi],0x2c
  412754:	std    
  412755:	call   0xe1bc7f3f
  41275a:	cmp    DWORD PTR [eax+ebp*1-0x2f144bf],esi
  412761:	es push ebp
  412763:	jecxz  0x412762
  412765:	xchg   ebp,eax
  412766:	enter  0x8804,0xae
  41276a:	in     al,0x57
  41276c:	add    DWORD PTR [eax-0x17],esp
  41276f:	clc    
  412770:	call   0xff2fb775
  412775:	call   FWORD PTR [esp+esi*1-0x103217ad]
  41277c:	(bad)  
  41277d:	jmp    DWORD PTR [esi-0x1e]
  412780:	jmp    0x5ee35b87
  412785:	pop    esi
  412786:	in     eax,dx
  412787:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412788:	in     al,0x5d
  41278a:	aam    0xd5
  41278c:	add    BYTE PTR [ebp+0xd],dl
  41278f:	inc    BYTE PTR [edx+0x536eeaec]
  412795:	mov    edi,DWORD PTR [ebx]
  412797:	fiadd  WORD PTR [eax+0x55e0527e]
  41279d:	bswap  ebx
  41279f:	into   
  4127a0:	std    
  4127a1:	inc    DWORD PTR [esi-0x5b]
  4127a4:	jae    0x4127ae
  4127a6:	lds    eax,FWORD PTR [ecx+edi*8-0x6db2d00]
  4127ad:	push   eax
  4127ae:	add    BYTE PTR [eax],al
  4127b0:	sub    al,0x34
  4127b2:	push   ebx
  4127b3:	call   0x3ee9f7
  4127b8:	mov    ebp,0x9e5d88f9
  4127bd:	arpl   dx,bx
  4127bf:	jne    0x4127ca
  4127c1:	push   cs
  4127c2:	mov    ebp,0xdf94e9
  4127c7:	add    ah,bh
  4127c9:	add    eax,0x7a4a7d8c
  4127ce:	in     eax,0xe8
  4127d0:	cwde   
  4127d1:	loop   0x4127d3
  4127d3:	push   0x1e
  4127d5:	stos   DWORD PTR es:[edi],eax
  4127d6:	jl     0x412798
  4127d8:	into   
  4127d9:	(bad)  
  4127da:	fdiv   QWORD PTR [esi+0x458bdfd6]
  4127e0:	cmp    dh,BYTE PTR [edx-0x2]
  4127e3:	jne    0x4127f7
  4127e5:	ins    DWORD PTR es:[edi],dx
  4127e6:	in     eax,0x39
  4127e8:	mov    eax,ds:0x2f8b00e0
  4127ed:	add    al,0xb2
  4127ef:	dec    edi
  4127f0:	pop    esp
  4127f1:	fstp   st(3)
  4127f3:	outs   dx,BYTE PTR ds:[esi]
  4127f4:	cs xor eax,0x29628cb0
  4127fa:	jp     0x412840
  4127fc:	stos   DWORD PTR es:[edi],eax
  4127fd:	fnsave [ecx-0x4]
  412800:	mov    al,ds:0x2f3a813c
  412805:	mov    bh,ah
  412807:	push   edx
  412808:	xchg   DWORD PTR [edi+0x32],ebp
  41280b:	dec    BYTE PTR [eax+0x47695020]
  412811:	mov    cl,BYTE PTR [esi-0x28ffff1d]
  412817:	or     al,0x5f
  412819:	mov    ch,0x2f
  41281b:	xor    eax,0xf2ba2897
  412820:	adc    al,0x57
  412822:	push   edi
  412823:	xchg   esp,eax
  412824:	push   ebx
  412825:	call   FWORD PTR [eax-0x50]
  412828:	inc    esp
  412829:	dec    edi
  41282a:	mov    ds:0xba4f4502,al
  41282f:	cli    
  412830:	sub    BYTE PTR [edi-0x2b],cl
  412833:	pop    ss
  412834:	lods   al,BYTE PTR ds:[esi]
  412835:	mov    edx,es
  412837:	rcr    BYTE PTR [ecx],0xa8
  41283a:	jo     0x4127e8
  41283c:	or     al,0x82
  41283e:	repz inc eax
  412840:	xchg   BYTE PTR [edi-0x32877d65],bh
  412846:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412847:	pushf  
  412848:	mov    dl,0x8c
  41284a:	xchg   edx,eax
  41284b:	mov    DWORD PTR [esi+0x44],edi
  41284e:	pop    es
  41284f:	popf   
  412850:	call   0x86dd2926
  412855:	mov    edi,0xcf9ce083
  41285a:	jns    0x4128d1
  41285c:	add    DWORD PTR [edx+0x33],ebp
  41285f:	push   eax
  412860:	jle    0x4128a6
  412862:	out    0x9c,eax
  412864:	add    al,0xd2
  412866:	fcomp  st(5)
  412868:	xchg   BYTE PTR es:[eax+0x7378c6b1],dl
  41286f:	(bad)  
  412870:	bound  edi,QWORD PTR [esi+0xfb456b8]
  412876:	std    
  412877:	push   es
  412878:	outs   dx,DWORD PTR ds:[esi]
  412879:	out    dx,eax
  41287a:	add    BYTE PTR [eax],al
  41287c:	pop    ds
  41287d:	push   ebp
  41287e:	scas   eax,DWORD PTR es:[edi]
  41287f:	xchg   ebx,eax
  412880:	mov    bh,0x8d
  412882:	jnp    0x4128fe
  412884:	clc    
  412885:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412886:	test   DWORD PTR [edx+0x0],edi
  412889:	stos   BYTE PTR es:[edi],al
  41288a:	jb     0x41284d
  41288c:	and    al,0x24
  41288e:	daa    
  41288f:	clc    
  412890:	das    
  412891:	xor    eax,0xde2f049f
  412896:	bound  ebp,QWORD PTR [ecx+0xb553480]
  41289c:	jno    0x4128c8
  41289e:	dec    edi
  41289f:	cld    
  4128a0:	cmp    dh,bl
  4128a2:	out    0x1b,eax
  4128a4:	cmp    al,0xd
  4128a6:	scas   al,BYTE PTR es:[edi]
  4128a7:	or     esp,DWORD PTR [ebp+0x212f6c05]
  4128ad:	(bad)  
  4128ae:	hlt    
  4128af:	or     cl,BYTE PTR [ecx+0x2a]
  4128b2:	fs mov ecx,0x3ff8d34
  4128b8:	pop    ds
  4128b9:	fsubrp st(7),st
  4128bb:	js     0x4128aa
  4128bd:	jecxz  0x4128d6
  4128bf:	or     esp,DWORD PTR [edx-0x1b0e892a]
  4128c5:	shl    DWORD PTR [edi],cl
  4128c7:	add    al,0xac
  4128c9:	es call 0x5f26d4c9
  4128cf:	or     ecx,DWORD PTR [ecx]
  4128d1:	pop    esi
  4128d2:	aam    0xf7
  4128d4:	add    BYTE PTR [ebx-0x79cc6212],dh
  4128da:	xchg   edi,eax
  4128db:	fdiv   DWORD PTR [eax+0x3a7]
  4128e2:	jl     0x41291a
  4128e4:	add    bl,bh
  4128e6:	sbb    ebp,DWORD PTR [eax]
  4128e8:	std    
  4128e9:	pusha  
  4128ea:	out    dx,al
  4128eb:	aad    0xe8
  4128ed:	mov    eax,0x72fd283a
  4128f2:	out    dx,al
  4128f3:	loope  0x4128f2
  4128f5:	test   eax,0xe5334c0
  4128fa:	sahf   
  4128fb:	aad    0x89
  4128fd:	cli    
  4128fe:	xchg   esp,eax
  4128ff:	or     DWORD PTR [esi-0x57],esi
  412902:	sub    al,0xb4
  412904:	add    edx,DWORD PTR [esi-0x1141c1bc]
  41290a:	and    eax,0x246a5786
  41290f:	sub    BYTE PTR ds:0xfd2b3b65,cl
  412915:	(bad)  
  412916:	into   
  412917:	and    BYTE PTR [ecx+esi*8],al
  41291a:	ja     0x4128f3
  41291c:	sub    DWORD PTR [ecx-0x1807a2d6],0x3cfdd9b8
  412926:	addr16 pop edx
  412928:	dec    ecx
  412929:	out    0xa3,eax
  41292b:	pop    edx
  41292c:	or     al,0x1
  41292e:	call   0xff28:0x35b9e541
  412935:	sub    eax,DWORD PTR [edi+0x54]
  412938:	inc    ebx
  412939:	fucomp st(6)
  41293b:	fcomp  QWORD PTR [eax]
  41293d:	hlt    
  41293e:	and    eax,0xef720ca2
  412943:	aam    0xc6
  412945:	in     eax,dx
  412946:	add    BYTE PTR [eax],al
  412948:	adc    al,0xd7
  41294a:	std    
  41294b:	and    al,0x17
  41294d:	push   esp
  41294e:	inc    ebx
  41294f:	icebp  
  412950:	xchg   ecx,eax
  412951:	call   0x6000:0xb0cc6a0c
  412958:	aam    0xb8
  41295a:	xchg   DWORD PTR [ecx+0xc5c2a8],esp
  412960:	(bad)  
  412961:	pusha  
  412962:	std    
  412963:	jmp    DWORD PTR [esi-0x1e]
  412966:	pop    ebp
  412967:	pop    esi
  412968:	mov    ebp,0xc608bfe9
  41296d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41296e:	cmp    eax,0x71d39104
  412973:	and    al,0xbe
  412975:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412976:	jne    0x412990
  412978:	push   ebp
  412979:	popf   
  41297a:	adc    eax,ebp
  41297c:	push   ds
  41297d:	in     eax,dx
  41297e:	(bad)  
  41297f:	push   DWORD PTR [ecx-0x5e3fe50d]
  412985:	repz pop esi
  412987:	ret    0xdc92
  41298a:	push   ebx
  41298b:	mov    ebx,DWORD PTR [edx+0x5534e962]
  412991:	ins    BYTE PTR es:[edi],dx
  412992:	mov    dh,cl
  412994:	std    
  412995:	sbb    edx,DWORD PTR ds:0x55de4e8b
  41299b:	mov    DWORD PTR [ebx-0x26],eax
  41299e:	mov    BYTE PTR [ebp+0x6a],al
  4129a1:	test   al,0xc8
  4129a3:	psrld  mm4,QWORD PTR [ecx-0x3]
  4129a7:	call   DWORD PTR [esi+0x61]
  4129aa:	js     0x4129c0
  4129ac:	add    BYTE PTR [eax],al
  4129ae:	inc    esi
  4129af:	push   edi
  4129b0:	cmp    eax,0x7caf716a
  4129b5:	in     al,0xee
  4129b7:	leave  
  4129b8:	or     al,0xb5
  4129ba:	push   esi
  4129bb:	fmul   QWORD PTR ds:0x4d3010b7
  4129c1:	psllw  mm3,QWORD PTR [ebx]
  4129c4:	or     eax,0x4d9d9d50
  4129c9:	push   0xfffffffe
  4129cb:	jbe    0x412959
  4129cd:	jne    0x412989
  4129cf:	retf   0xbe1c
  4129d2:	mov    ebp,edx
  4129d4:	add    ah,0x1a
  4129d7:	test   eax,0x262f74bd
  4129dc:	jl     0x4129ab
  4129de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129df:	in     eax,dx
  4129e0:	jnp    0x412a26
  4129e2:	repz inc esi
  4129e4:	sbb    DWORD PTR [esi-0x7cf81718],eax
  4129ea:	out    dx,eax
  4129eb:	push   0xffffffe4
  4129ed:	and    bh,0xf8
  4129f0:	sbb    edi,DWORD PTR [ebx]
  4129f2:	inc    ebp
  4129f3:	xor    ebp,DWORD PTR [edi+esi*1+0x188e2966]
  4129fa:	mov    ah,0xf6
  4129fc:	jne    0x412a75
  4129fe:	pop    ss
  4129ff:	pop    ebp
  412a00:	sbb    eax,0x84356f75
  412a05:	mov    edi,0xcf97cd43
  412a0a:	mov    al,ds:0x84bf7e30
  412a0f:	int3   
  412a10:	jnp    0x412a56
  412a12:	add    BYTE PTR [eax],al
  412a14:	xchg   ebx,eax
  412a15:	lods   al,BYTE PTR ds:[esi]
  412a16:	rol    DWORD PTR [ebx],0x88
  412a19:	xchg   edx,eax
  412a1a:	or     al,0x8a
  412a1c:	loop   0x412a5a
  412a1e:	aas    
  412a1f:	aas    
  412a20:	sbb    esi,DWORD PTR [esi]
  412a22:	jl     0x412a68
  412a24:	jae    0x412a33
  412a26:	mov    ecx,0x7d6868fe
  412a2b:	mov    edi,0xbfd475db
  412a30:	clc    
  412a31:	(bad)  
  412a32:	stos   DWORD PTR es:[edi],eax
  412a33:	enter  0x396d,0x1
  412a37:	push   ebx
  412a38:	loop   0x412a28
  412a3a:	jnp    0x412aac
  412a3c:	daa    
  412a3d:	mov    esp,0x5ba403bf
  412a42:	jle    0x412a03
  412a44:	mov    ebx,0x4b77811a
  412a49:	ss fwait
  412a4b:	add    DWORD PTR [edx+ebp*1+0x2caa56ec],eax
  412a52:	jmp    0xde1f31be
  412a57:	ret    
  412a58:	or     BYTE PTR [edi+eiz*1-0x11],bl
  412a5c:	or     cl,cl
  412a5e:	aaa    
  412a5f:	or     cl,bh
  412a61:	xchg   BYTE PTR [ebx+eax*2+0x7b],ah
  412a65:	loope  0x412ad1
  412a67:	cmp    ebp,ecx
  412a69:	xor    bl,bh
  412a6b:	jl     0x412ad7
  412a6d:	loop   0x412ace
  412a6f:	stos   DWORD PTR es:[edi],eax
  412a70:	xor    al,0x53
  412a72:	mov    ebx,edi
  412a74:	and    BYTE PTR [ecx+0x4172],dl
  412a7a:	shr    BYTE PTR [edi],1
  412a7c:	sbb    eax,0x2761c108
  412a81:	(bad)  
  412a82:	shr    edx,cl
  412a84:	daa    
  412a85:	test   eax,0xff298353
  412a8a:	test   al,0x53
  412a8c:	test   al,0xeb
  412a8e:	lods   eax,DWORD PTR ds:[esi]
  412a8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a90:	jmp    0x412a95
  412a92:	and    edi,esi
  412a94:	(bad)
  412a99:	test   al,0x4c
  412a9b:	(bad)  
  412a9c:	ss jns 0x412a97
  412a9f:	add    DWORD PTR [edx],edi
  412aa1:	cmp    DWORD PTR [eax+0x612fbffd],0x26
  412aa8:	(bad)  
  412aa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412aaa:	add    eax,0x2b91a761
  412aaf:	pop    ebx
  412ab0:	lahf   
  412ab1:	pop    es
  412ab2:	inc    ebp
  412ab3:	(bad)  
  412ab5:	inc    ebx
  412ab6:	outs   dx,BYTE PTR ds:[esi]
  412ab7:	loope  0x412aa0
  412ab9:	test   BYTE PTR [ecx-0x10850c74],0xc5
  412ac0:	cmp    eax,0xe7dd7046
  412ac5:	add    ecx,ecx
  412ac7:	loop   0x412a66
  412ac9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412aca:	popf   
  412acb:	fld    TBYTE PTR [edx+0xa]
  412ace:	mov    WORD PTR [ecx-0x2a6a1400],?
  412ad4:	std    
  412ad5:	sub    ebp,DWORD PTR [edi]
  412ad7:	mov    esp,0xb818b889
  412adc:	inc    esi
  412ade:	add    BYTE PTR [eax],al
  412ae0:	adc    DWORD PTR [ebp-0x57b5bef8],0x0
  412ae7:	jmp    0x9d0290c9
  412aec:	cmp    DWORD PTR gs:[ecx+0x3ba5df4d],eax
  412af3:	aaa    
  412af4:	adc    eax,0x9de900a0
  412af9:	mov    edx,DWORD PTR [ebp-0xa]
  412afc:	dec    eax
  412afd:	pusha  
  412afe:	add    ecx,ebp
  412b00:	sub    al,0x36
  412b02:	pop    ebx
  412b03:	xor    BYTE PTR [eax],dh
  412b05:	and    al,0x84
  412b07:	sub    DWORD PTR [eax+0x2cea7661],edi
  412b0d:	fiadd  WORD PTR [ecx+0xe25987c]
  412b13:	ins    DWORD PTR es:[edi],dx
  412b14:	mov    bh,0xe0
  412b16:	add    cl,ch
  412b18:	lods   eax,DWORD PTR ds:[esi]
  412b19:	mov    ds:0x5381e910,al
  412b1e:	(bad)  
  412b1f:	jmp    0x8b7b:0x5c89de2c
  412b26:	call   0xfd654d53
  412b2b:	ins    DWORD PTR es:[edi],dx
  412b2c:	in     al,dx
  412b2d:	rol    DWORD PTR [eax+ebx*1+0x6200de2c],cl
  412b34:	adc    DWORD PTR [bp+si],0x10692b29
  412b3b:	(bad)  
  412b3c:	ins    DWORD PTR es:[edi],dx
  412b3d:	and    eax,0x3d119e52
  412b42:	mov    edx,0x31000087
  412b47:	and    al,0x87
  412b49:	and    al,0x27
  412b4b:	pusha  
  412b4c:	clc    
  412b4d:	add    BYTE PTR [ecx+0x152b812b],dh
  412b53:	loope  0x412b55
  412b55:	imul   eax,esi,0x6fffda8
  412b5b:	loopne 0x412b60
  412b5d:	sub    al,0x70
  412b5f:	and    ch,bh
  412b61:	or     BYTE PTR [esi],0x55
  412b64:	std    
  412b65:	je     0x412b6f
  412b67:	popa   
  412b68:	jne    0x412be7
  412b6a:	push   es
  412b6b:	push   ebp
  412b6c:	or     eax,0xfe30abff
  412b71:	jne    0x412b45
  412b73:	enter  0xf9b4,0x21
  412b77:	fsub   st(0),st
  412b79:	sbb    al,0xc5
  412b7b:	loopne 0x412b7d
  412b7d:	mov    ebp,DWORD PTR [esi-0x58]
  412b80:	retf   0x8389
  412b83:	int3   
  412b84:	in     eax,0x99
  412b86:	xor    esp,ebx
  412b88:	dec    BYTE PTR [ecx-0x3fcd2f75]
  412b8e:	mov    eax,0x13f444a1
  412b93:	push   ds
  412b94:	jmp    0x8ab1f122
  412b99:	inc    ebp
  412b9a:	xchg   esi,eax
  412b9b:	push   cs
  412b9c:	repz cmp ebx,eax
  412b9f:	dec    ebp
  412ba0:	sbb    dh,dh
  412ba2:	xchg   esi,eax
  412ba3:	fbstp  TBYTE PTR [esi+edx*1+0x36]
  412ba7:	(bad)  [esp+ebp*8+0x0]
  412bab:	add    BYTE PTR [esi-0x29],ch
  412bae:	cli    
  412baf:	push   DWORD PTR [ecx+0x5d]
  412bb2:	mov    ebp,0xff87ca0f
  412bb7:	inc    DWORD PTR [esi-0x5b]
  412bba:	inc    esp
  412bbb:	in     al,dx
  412bbc:	ins    DWORD PTR es:[edi],dx
  412bbd:	nop
  412bbe:	mov    al,BYTE PTR [ebp-0x5e]
  412bc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bc2:	xchg   ebp,eax
  412bc3:	test   BYTE PTR [esi-0x20],dl
  412bc6:	add    BYTE PTR [ebx],bh
  412bc8:	das    
  412bc9:	ins    DWORD PTR es:[edi],dx
  412bca:	mov    ss,WORD PTR [edi-0xa]
  412bcd:	icebp  
  412bce:	hlt    
  412bcf:	push   cs
  412bd0:	ins    DWORD PTR es:[edi],dx
  412bd1:	cli    
  412bd2:	hlt    
  412bd3:	push   edx
  412bd4:	and    dh,ah
  412bd6:	test   bh,bh
  412bd8:	sbb    BYTE PTR [esi],dh
  412bda:	add    al,0x74
  412bdc:	and    ebx,DWORD PTR [ebp-0x4b]
  412bdf:	int    0x8
  412be1:	mov    ebp,0xcf134477
  412be6:	ins    BYTE PTR es:[edi],dx
  412be7:	sub    DWORD PTR [edi],0x35
  412bea:	add    DWORD PTR [ebx-0x78881e96],ecx
  412bf0:	mov    bl,0x35
  412bf2:	add    DWORD PTR [eax],eax
  412bf4:	and    al,0xf3
  412bf6:	lea    edx,ds:0xff84a5d8
  412bfc:	shl    BYTE PTR ds:0xfcfaef19,1
  412c02:	add    ecx,DWORD PTR [edx-0x50862e96]
  412c08:	scas   eax,DWORD PTR es:[edi]
  412c09:	xor    eax,0x26c40001
  412c0e:	js     0x412c8f
  412c10:	add    BYTE PTR [eax],al
  412c12:	scas   eax,DWORD PTR es:[edi]
  412c13:	xor    eax,0xb1fe0001
  412c18:	clc    
  412c19:	pop    ss
  412c1a:	inc    BYTE PTR [ecx+ebx*1+0xf]
  412c1e:	popa   
  412c1f:	xor    al,0x4
  412c21:	mov    dh,dl
  412c23:	or     BYTE PTR [eax],bl
  412c25:	jne    0x412be8
  412c27:	and    eax,0xe32f4223
  412c2c:	add    edx,DWORD PTR [ebx+eax*8]
  412c2f:	daa    
  412c30:	sar    edi,0x69
  412c33:	loop   0x412c29
  412c35:	(bad)  
  412c36:	fidiv  DWORD PTR [eax]
  412c38:	add    al,0x74
  412c3a:	daa    
  412c3b:	ins    BYTE PTR es:[edi],dx
  412c3c:	out    dx,al
  412c3d:	aaa    
  412c3e:	jno    0x412c38
  412c40:	add    al,0x8b
  412c42:	fisubr WORD PTR [bp+si+0x3f]
  412c46:	xor    al,0x59
  412c48:	ret    0xb0f4
  412c4b:	mov    gs,ecx
  412c4d:	add    ebp,DWORD PTR [edi]
  412c4f:	mov    WORD PTR [esi-0x10574ad4],cs
  412c55:	sbb    edx,ecx
  412c57:	xor    BYTE PTR [esi+0x4],bh
  412c5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c5b:	and    eax,0x5f148660
  412c60:	outs   dx,BYTE PTR ds:[esi]
  412c61:	add    al,0x39
  412c63:	pop    edx
  412c64:	data16 add ch,BYTE PTR [edi]
  412c67:	fisubr WORD PTR [edx-0x7a]
  412c6a:	or     dh,bl
  412c6c:	(bad)  
  412c6d:	into   
  412c6e:	inc    esp
  412c6f:	add    al,0xaa
  412c71:	add    esp,DWORD PTR [ebx-0x38]
  412c74:	jb     0x412caa
  412c76:	add    BYTE PTR [eax],al
  412c78:	push   edi
  412c79:	adc    eax,0xde2f036f
  412c7e:	jmp    0xc904:0x3d78c835
  412c85:	push   esp
  412c86:	lods   al,BYTE PTR ds:[esi]
  412c87:	adc    ebp,DWORD PTR [ebx-0x288011e3]
  412c8d:	fsubr  st(7),st
  412c8f:	add    esp,DWORD PTR [edx+ebx*1-0x224fbc80]
  412c96:	out    0x3,eax
  412c98:	sub    al,0x1c
  412c9a:	jo     0x412c5a
  412c9c:	test   dh,ch
  412c9e:	std    
  412c9f:	scas   eax,DWORD PTR es:[edi]
  412ca0:	xchg   ecx,eax
  412ca1:	test   al,0xdb
  412ca3:	or     al,0xe5
  412ca6:	dec    edi
  412ca7:	mov    eax,0xebe79df0
  412cac:	(bad)  
  412cad:	mov    ebx,0x25a603e7
  412cb2:	pusha  
  412cb3:	and    DWORD PTR [edi-0x45],0xab5b7900
  412cba:	dec    ebp
  412cbb:	(bad)  
  412cbc:	in     al,0x31
  412cbe:	add    BYTE PTR [edi],bl
  412cc0:	test   al,0x62
  412cc2:	cmp    cl,al
  412cc4:	ss test al,0x0
  412cc7:	jmp    0x3db52ddd
  412ccc:	test   al,0x9e
  412cce:	in     al,dx
  412ccf:	bound  esp,QWORD PTR [ebx+0x2ce90059]
  412cd5:	(bad)  
  412cd7:	je     0x412cb4
  412cd9:	pop    esi
  412cda:	add    cl,ch
  412cdc:	add    BYTE PTR [eax],al
  412cde:	sub    al,0x36
  412ce0:	push   ebx
  412ce1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ce2:	sub    al,0x20
  412ce4:	test   BYTE PTR [ecx-0x177fa5e4],ch
  412cea:	sub    al,0xde
  412cec:	mov    DWORD PTR [eax+ecx*1+0x2b6d8858],esp
  412cf3:	fiadd  WORD PTR [eax]
  412cf5:	fs cli 
  412cf7:	stos   BYTE PTR es:[edi],al
  412cf8:	adc    al,0x72
  412cfa:	stos   DWORD PTR es:[edi],eax
  412cfb:	pop    esi
  412cfc:	add    cl,ch
  412cfe:	sub    al,0x55
  412d00:	adc    al,0xd1
  412d02:	jp     0x412d5b
  412d04:	rol    BYTE PTR [ecx+0x77],1
  412d07:	adc    eax,0x9db026fd
  412d0c:	in     al,dx
  412d0d:	jb     0x412d6d
  412d0f:	rcl    BYTE PTR [ecx-0x16],cl
  412d12:	fst    QWORD PTR [ecx-0x214ca603]
  412d18:	add    cl,ch
  412d1a:	xchg   esp,eax
  412d1b:	(bad)  
  412d1c:	retf   
  412d1d:	(bad)  
  412d1e:	sub    eax,0x2a054354
  412d23:	inc    esi
  412d24:	test   cl,ch
  412d26:	sub    al,0xde
  412d28:	xor    edi,ebx
  412d2a:	mov    cl,0x3
  412d2c:	mov    DWORD PTR [ebx+eax*4],esp
  412d2f:	out    0xc6,eax
  412d31:	pop    ebp
  412d32:	dec    ecx
  412d33:	out    0xde,eax
  412d35:	dec    edi
  412d36:	or     eax,0x5a007323
  412d3b:	dec    esi
  412d3c:	js     0x412d6a
  412d3e:	lds    ebx,FWORD PTR [eax+ebp*1]
  412d41:	call   0xf4b2d46
  412d46:	sti    
  412d47:	call   ebx
  412d49:	sbb    al,0xb
  412d4b:	test   BYTE PTR [ecx],ch
  412d4d:	fild   DWORD PTR [eax]
  412d4f:	add    BYTE PTR [ebp+0x1b8bf095],bh
  412d55:	and    ch,BYTE PTR [edi]
  412d57:	div    BYTE PTR [eax]
  412d59:	jecxz  0x412dcc
  412d5b:	hlt    
  412d5c:	sbb    DWORD PTR [edi-0x78],edx
  412d5f:	add    BYTE PTR [esi],al
  412d61:	fnsave [edi]
  412d63:	(bad)  
  412d64:	or     DWORD PTR [ecx-0x80],ebx
  412d67:	add    BYTE PTR [esi],dl
  412d69:	fnsave [ebp+0xdd16c8]
  412d6f:	dec    di
  412d71:	(bad)  
  412d72:	hlt    
  412d73:	jne    0x412d84
  412d75:	(bad)  
  412d76:	call   0xff1dabde
  412d7b:	mov    edx,DWORD PTR [ebx+0x3e40872c]
  412d81:	push   ecx
  412d82:	dec    ecx
  412d83:	in     al,dx
  412d84:	dec    edi
  412d85:	call   0x4087:0x2c938b70
  412d8c:	fimul  DWORD PTR [edi+0x49]
  412d8f:	in     al,dx
  412d90:	aas    
  412d91:	call   0x7085:0x30838b74
  412d98:	mov    esi,0x50ec414f
  412d9d:	popf   
  412d9e:	jl     0x412da0
  412da0:	sbb    eax,0x383bec8e
  412da5:	int3   
  412da6:	xchg   esp,eax
  412da7:	rol    BYTE PTR [eax],0x0
  412daa:	push   cs
  412dab:	call   0x7085:0x2a538b79
  412db2:	push   ds
  412db3:	push   ebx
  412db4:	inc    ecx
  412db5:	hlt    
  412db6:	das    
  412db7:	mov    ah,0xc4
  412db9:	pushf  
  412dba:	shl    DWORD PTR [ebx-0x4fcf9e04],1
  412dc0:	mov    es,WORD PTR [eax]
  412dc2:	das    
  412dc3:	aaa    
  412dc4:	mov    WORD PTR [ebx+0x5f],es
  412dc7:	addr16 je 0x412dea
  412dca:	push   edi
  412dcb:	and    al,0xcd
  412dcd:	std    
  412dce:	inc    eax
  412dcf:	stos   DWORD PTR es:[edi],eax
  412dd0:	inc    ebp
  412dd1:	lock cmp dh,al
  412dd4:	sbb    al,ch
  412dd6:	or     BYTE PTR [ebx-0x1],bh
  412dd9:	std    
  412dda:	mov    ah,0xfa
  412ddc:	hlt    
  412ddd:	push   0x3b
  412ddf:	mov    ah,0xc4
  412de1:	adc    al,0x7f
  412de3:	dec    ebp
  412de4:	adc    cl,bl
  412de6:	adc    BYTE PTR [ecx-0x4ef52617],ch
  412dec:	dec    DWORD PTR [ecx+0x3ffa8972]
  412df2:	push   0x341d75b5
  412df7:	mov    WORD PTR [ebp+0x19],?
  412dfa:	and    al,0xf7
  412dfc:	js     0x412e61
  412dfe:	and    al,0xf7
  412e00:	sbb    BYTE PTR [edi-0x7f],0xd
  412e04:	xchg   ebx,eax
  412e05:	call   0x144116da
  412e0a:	cmp    ecx,edi
  412e0c:	inc    ebx
  412e0d:	add    BYTE PTR [eax],al
  412e0f:	add    BYTE PTR [esi+0x1e],ah
  412e12:	test   cl,cl
  412e14:	mov    eax,0xe93952cc
  412e19:	inc    ecx
  412e1a:	inc    ebx
  412e1b:	aaa    
  412e1c:	pop    ds
  412e1d:	popa   
  412e1e:	ja     0x412e5b
  412e20:	mov    ah,0x75
  412e22:	sub    DWORD PTR [edi+0x438ca4ee],eax
  412e28:	lahf   
  412e29:	mov    esp,0x42b42c44
  412e2e:	in     eax,dx
  412e2f:	xchg   esi,ebp
  412e31:	fstp   QWORD PTR [ebx-0x73]
  412e34:	in     al,dx
  412e35:	xor    DWORD PTR [eax+0x73],esi
  412e38:	not    DWORD PTR [edx+0x2c]
  412e3b:	lock jno 0x412ddc
  412e3e:	dec    ebx
  412e3f:	add    esi,DWORD PTR [esi+0x793cd391]
  412e45:	iret   
  412e46:	push   ebx
  412e47:	ret    
  412e48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e49:	popf   
  412e4a:	xor    al,0x8d
  412e4c:	in     al,dx
  412e4d:	sub    eax,0x53177360
  412e52:	sbb    al,0xf4
  412e54:	inc    edi
  412e55:	ror    BYTE PTR [eax+eax*1-0xfbcacf],1
  412e5c:	sub    bl,BYTE PTR [edi]
  412e5e:	bound  eax,QWORD PTR [esi+0x23]
  412e61:	ss sbb bh,ch
  412e64:	sbb    bl,BYTE PTR [edi]
  412e66:	unpcklps xmm6,xmm1
  412e69:	call   0x43d9:0x722300e7
  412e70:	das    
  412e71:	push   ebx
  412e72:	sub    ch,ah
  412e74:	add    BYTE PTR [eax],al
  412e76:	aaa    
  412e77:	mov    dh,0xf7
  412e79:	loope  0x412ee9
  412e7b:	ficom  WORD PTR [esi+0x16]
  412e7e:	fwait
  412e7f:	retf   
  412e80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e81:	add    edx,DWORD PTR [ebp-0x2a]
  412e84:	iret   
  412e85:	xchg   ebx,eax
  412e86:	(bad)  
  412e87:	push   ds
  412e88:	add    BYTE PTR ds:[ebx],bh
  412e8b:	rcl    BYTE PTR ds:0x90852f44,cl
  412e91:	test   bh,dh
  412e93:	push   ds
  412e94:	adc    bl,BYTE PTR [edx]
  412e96:	pop    esi
  412e97:	pop    ds
  412e98:	hlt    
  412e99:	scas   eax,DWORD PTR es:[edi]
  412e9a:	sbb    eax,0x2300e79e
  412e9f:	into   
  412ea0:	push   cs
  412ea1:	jbe    0x412ed6
  412ea3:	pop    ds
  412ea4:	jl     0x412eb1
  412ea6:	call   0xdd:0xeee1bfc8
  412ead:	push   0x70
  412eaf:	rcr    DWORD PTR [ebp-0x71],1
  412eb2:	jecxz  0x412eca
  412eb4:	shl    DWORD PTR [edx-0x15],0xbd
  412eb8:	push   ecx
  412eb9:	xor    al,0xd9
  412ebb:	push   esp
  412ebc:	jo     0x412eef
  412ebe:	add    BYTE PTR [ebp+0x78],dl
  412ec1:	sub    eax,0x2adecd6e
  412ec6:	xor    ecx,DWORD PTR [ebx+0x2704b801]
  412ecc:	std    
  412ecd:	fcomp  QWORD PTR [eax-0x2616bf35]
  412ed3:	xchg   DWORD PTR [ecx+0x56c2071d],ecx
  412ed9:	sahf   
  412eda:	add    BYTE PTR [eax],al
  412edc:	push   ss
  412edd:	and    bl,bl
  412edf:	sub    dh,BYTE PTR [ebx]
  412ee1:	fsubr  DWORD PTR [bp+si-0x9]
  412ee5:	jmp    0x1459:0x93188281
  412eec:	adc    dl,dh
  412eee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412eef:	fld    TBYTE PTR [esi+ebx*8-0x18]
  412ef3:	les    edx,FWORD PTR ds:0xfb6afd1c
  412ef9:	sbb    esi,DWORD PTR [ebx-0x6]
  412efc:	xchg   dh,ah
  412efe:	push   0xfd1bdb79
  412f03:	loop   0x412f09
  412f05:	sbb    al,0x13
  412f07:	cmc    
  412f08:	cli    
  412f09:	lahf   
  412f0a:	add    BYTE PTR [eax-0x3fcff88d],ah
  412f10:	in     al,dx
  412f11:	data16 add cl,ch
  412f14:	sub    al,0xdf
  412f16:	add    edx,ebp
  412f18:	ficomp DWORD PTR [edi-0x6e2e1e00]
  412f1e:	adc    eax,0x8b820b62
  412f23:	cdq    
  412f24:	add    al,0x1b
  412f26:	add    BYTE PTR ss:[esi],bh
  412f29:	dec    ecx
  412f2b:	call   DWORD PTR [ecx+0x2e561087]
  412f31:	sub    bh,al
  412f33:	call   DWORD PTR [ecx-0x11fefaf8]
  412f39:	cmp    ebx,0xd7d0ea48
  412f3f:	inc    ebx
  412f40:	add    BYTE PTR [eax],al
  412f42:	sub    ebx,DWORD PTR ds:0xa164ac11
  412f48:	add    BYTE PTR [edi+0x10],bl
  412f4b:	jg     0x412ed4
  412f4d:	ret    
  412f4e:	or     eax,0x25000420
  412f53:	mov    ah,0x87
  412f55:	lock (bad) 
  412f57:	call   0x2174:0x39bd006c
  412f5e:	mov    ebp,0xde3b68a2
  412f63:	xchg   ebx,eax
  412f64:	add    ebp,DWORD PTR [ebx]
  412f66:	aad    0x69
  412f68:	inc    esi
  412f69:	push   0xd827e2bd
  412f6e:	test   DWORD PTR [ebx-0xdd1ff98],eax
  412f74:	fiadd  WORD PTR [ebx+0x16]
  412f77:	sbb    al,0x11
  412f79:	lods   al,BYTE PTR ds:[esi]
  412f7a:	hlt    
  412f7b:	mov    al,ds:0xb3dceb00
  412f80:	mov    ebx,0xa02010
  412f85:	push   edi
  412f86:	jno    0x412f7e
  412f88:	lods   al,BYTE PTR ds:[esi]
  412f89:	adc    al,BYTE PTR [esi-0x1897820]
  412f8f:	xlat   BYTE PTR ds:[ebx]
  412f90:	fimul  WORD PTR [edi]
  412f92:	xchg   esp,eax
  412f93:	orps   xmm7,xmm7
  412f96:	jp     0x412f5c
  412f98:	sbb    BYTE PTR [ebx+0x5618c49a],cl
  412f9e:	adc    esi,esi
  412fa0:	cld    
  412fa1:	(bad)  [edi]
  412fa3:	dec    eax
  412fa4:	add    DWORD PTR [ecx-0x78790000],ecx
  412faa:	lds    ecx,FWORD PTR [esp+ebp*4]
  412fad:	(bad)  
  412faf:	je     0x413006
  412fb1:	je     0x412fb1
  412fb3:	adc    edx,ebx
  412fb5:	cmp    BYTE PTR [ecx+0x0],al
  412fb8:	xchg   edi,eax
  412fb9:	popa   
  412fba:	out    0xfd,eax
  412fbc:	js     0x412f45
  412fbe:	cld    
  412fbf:	std    
  412fc0:	cli    
  412fc1:	pop    ss
  412fc2:	addr16 or bh,dl
  412fc5:	xchg   esi,eax
  412fc6:	in     al,dx
  412fc7:	std    
  412fc8:	pusha  
  412fc9:	(bad)  
  412fca:	fdivr  st,st(5)
  412fcc:	inc    edx
  412fcd:	adc    ebx,ebx
  412fcf:	inc    ecx
  412fd0:	das    
  412fd1:	mov    esi,0x9e38e959
  412fd6:	les    ecx,FWORD PTR [eax+0x101072f]
  412fdc:	xor    dh,BYTE PTR [ebx]
  412fde:	fild   DWORD PTR [ecx+0x2f]
  412fe1:	cs pop ecx
  412fe3:	push   0xac157480
  412fe8:	cmp    eax,0x795d04c5
  412fed:	nop
  412fee:	mov    edi,0x10ded59
  412ff3:	push   ebx
  412ff4:	mov    ah,0x61
  412ff6:	jg     0x412fdc
  412ff8:	pop    es
  412ff9:	xchg   eax,esi
  412ffb:	test   BYTE PTR [edi],ch
  412ffd:	add    eax,0xa03c5101
  413002:	push   esi
  413003:	push   ebp
  413004:	daa    
  413005:	adc    bh,bl
  413007:	retf   0x56c
  41300a:	or     al,0x84
  41300c:	add    BYTE PTR [eax],al
  41300e:	popf   
  41300f:	add    eax,0x55c70001
  413014:	aad    0xfd
  413016:	enter  0xc489,0xd
  41301a:	stos   DWORD PTR es:[edi],eax
  41301b:	bound  eax,QWORD PTR [eax+eax*1]
  41301e:	das    
  41301f:	fsubrp st(0),st
  413021:	pop    esi
  413022:	and    ebp,ebx
  413024:	arpl   WORD PTR [eax+0x3ae7de2f],sp
  41302a:	add    al,0xee
  41302c:	fimul  WORD PTR [ebp+0x3e7debe]
  413032:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413033:	xchg   ecx,eax
  413034:	out    dx,eax
  413035:	push   ebp
  413036:	xchg   edi,eax
  413037:	mov    ah,0xfb
  413039:	cld    
  41303a:	and    BYTE PTR [edx+0x27],0xd
  41303e:	mov    bl,0x60
  413040:	out    0x3,eax
  413042:	das    
  413043:	pop    ebx
  413044:	neg    ebp
  413046:	out    dx,al
  413047:	fnstsw WORD PTR [esi]
  413049:	std    
  41304a:	cmp    al,0x42
  41304c:	stc    
  41304d:	inc    ebx
  41304e:	das    
  41304f:	push   es
  413050:	cwde   
  413051:	jmp    0x92b0:0xf3721b52
  413058:	or     ebx,DWORD PTR [esi+ebp*4]
  41305b:	sbb    al,0xae
  41305d:	ja     0x413039
  41305f:	test   BYTE PTR [ebp-0x1821d075],bl
  413065:	add    BYTE PTR [edx+ecx*8-0x4b],bl
  413069:	inc    eax
  41306a:	das    
  41306b:	aad    0x2d
  41306d:	pusha  
  41306e:	mov    eax,ds:0x7686ea
  413073:	add    BYTE PTR [edi],ah
  413075:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  413077:	jmp    0x4130ea
  413079:	sbb    al,0x76
  41307b:	cld    
  41307c:	push   ss
  41307d:	mov    bh,0xb0
  41307f:	pop    ebp
  413080:	xchg   DWORD PTR [ecx+edi*8+0x5eee6488],edx
  413087:	jbe    0x4130c4
  413089:	addr16 sub eax,0x3fe65cfc
  41308f:	(bad)  
  413090:	fstp   DWORD PTR [edx]
  413092:	inc    esi
  413093:	call   0x13f54c03
  413098:	mov    ah,0xb9
  41309a:	add    BYTE PTR ds:0xdd73195f,cl
  4130a0:	mov    ebx,0xbd11088e
  4130a5:	or     ch,bh
  4130a7:	push   ds
  4130a8:	mov    ch,0xa1
  4130aa:	and    al,0xf5
  4130ac:	scas   eax,DWORD PTR es:[edi]
  4130ad:	adc    eax,0x655c94fd
  4130b2:	inc    esp
  4130b3:	int    0x34
  4130b5:	push   es
  4130b6:	push   cs
  4130b7:	adc    cl,BYTE PTR [ebx-0x6bd576e8]
  4130bd:	xor    BYTE PTR [eax+ebp*8],cl
  4130c0:	sub    al,0xb1
  4130c2:	std    
  4130c3:	cld    
  4130c4:	enter  0x40ef,0xe9
  4130c8:	mov    ss,WORD PTR gs:[eax]
  4130cb:	(bad)  
  4130cc:	fsubp  st(1),st
  4130ce:	std    
  4130cf:	push   esp
  4130d0:	sub    ebx,DWORD PTR [ecx]
  4130d2:	adc    eax,ebp
  4130d4:	jbe    0x413072
  4130d6:	add    BYTE PTR [edx+0x0],ch
  4130d9:	add    BYTE PTR [edi-0x17],ch
  4130dc:	pop    ebp
  4130dd:	pop    ss
  4130de:	loopne 0x413144
  4130e0:	jecxz  0x4130ee
  4130e2:	jo     0x4130fc
  4130e4:	inc    esi
  4130e5:	icebp  
  4130e6:	stc    
  4130e7:	xor    al,0x37
  4130e9:	cmp    eax,0x6d0daa4f
  4130ee:	imul   ebx,esp,0xa2a7e900
  4130f4:	and    al,0x31
  4130f6:	jnp    0x4130fe
  4130f8:	jmp    0x881f647b
  4130fd:	sub    eax,0xe8a8be4f
  413102:	mov    BYTE PTR [edi-0x59ef5275],bh
  413108:	call   0xfd5a6879
  41310d:	mov    esi,0xfbacede5
  413112:	ins    BYTE PTR es:[edi],dx
  413113:	ficom  WORD PTR [ecx+0x0]
  413116:	inc    BYTE PTR [eax-0x18]
  413119:	dec    DWORD PTR [ecx]
  41311b:	adc    eax,0xa1180c11
  413120:	add    BYTE PTR [ecx-0x61],bl
  413123:	pusha  
  413124:	enter  0x1dff,0x4f
  413128:	test   DWORD PTR [edx+esi*2-0xb],ebx
  41312c:	test   DWORD PTR [edx+esi*2-0x17],ebx
  413130:	test   al,0x2
  413132:	jns    0x4130cd
  413134:	push   0x1
  413136:	xchg   ch,bl
  413138:	xchg   esi,ebx
  41313a:	push   ds
  41313b:	push   ebx
  41313c:	in     eax,0xff
  41313e:	add    BYTE PTR [eax],al
  413140:	jns    0x4131aa
  413142:	fadd   DWORD PTR [ebp-0x4b7b1ae3]
  413148:	xchg   ch,bl
  41314a:	add    BYTE PTR [ebx+0x84f9ca],al
  413150:	push   esi
  413151:	(bad)  
  413153:	push   cs
  413154:	shr    DWORD PTR [edi+0x0],cl
  413157:	add    BYTE PTR [esi+0x68],al
  41315a:	mov    WORD PTR [esi+edx*8],fs
  41315d:	fadd   QWORD PTR [eax]
  41315f:	add    ch,dl
  413161:	cdq    
  413162:	add    al,0x0
  413164:	pop    ecx
  413165:	cdq    
  413166:	add    BYTE PTR [eax],0x46
  413169:	fisttp QWORD PTR [ecx-0x765b0dbc]
  41316f:	jl     0x413163
  413171:	clc    
  413172:	call   0x1232a91
  413177:	call   DWORD PTR [edx-0x7]
  41317a:	add    BYTE PTR [eax],0x16
  41317d:	fisttp QWORD PTR [eax-0x78140dbc]
  413183:	test   dl,dh
  413185:	add    BYTE PTR fs:[eax],al
  413188:	push   es
  413189:	add    eax,0xdcd70c6d
  41318e:	cmp    BYTE PTR [edi+ebp*1-0x15],0x15
  413193:	add    BYTE PTR [eax],ch
  413195:	or     DWORD PTR [esi],0xffffffff
  413198:	rol    BYTE PTR [esi],1
  41319a:	imul   edi,ebp,0xffffffc8
  41319d:	push   edx
  41319e:	sbb    eax,0xd139c034
  4131a3:	adc    al,BYTE PTR [eax]
  4131a5:	add    BYTE PTR [edi+0x7],ch
  4131a8:	cli    
  4131a9:	je     0x4131b6
  4131ab:	das    
  4131ac:	jmp    0xfb38a91d
  4131b1:	std    
  4131b2:	sbb    ebp,DWORD PTR [ebx]
  4131b4:	xor    ebp,edi
  4131b6:	inc    edx
  4131b7:	(bad)  
  4131b8:	adc    eax,DWORD PTR [eax+0x2f]
  4131bb:	mov    WORD PTR [ebp+0x24],?
  4131be:	pop    ebx
  4131bf:	cmp    dl,0xd
  4131c2:	stos   DWORD PTR es:[edi],eax
  4131c3:	out    0x1,al
  4131c5:	add    BYTE PTR [edi],ch
  4131c7:	mov    edx,0x2ee7243d
  4131cc:	aam    0x9
  4131ce:	cs pop es
  4131d0:	mov    WORD PTR [ebx+0x3f],cs
  4131d3:	jl     0x413215
  4131d5:	and    al,0x3b
  4131d7:	inc    ecx
  4131d8:	inc    ebx
  4131d9:	or     al,0x2f
  4131db:	mov    ?,WORD PTR [ebx+0x8]
  4131de:	jno    0x4131e3
  4131e0:	add    al,BYTE PTR [ecx]
  4131e2:	outs   dx,BYTE PTR ds:[esi]
  4131e3:	jge    0x413227
  4131e5:	push   0xff68c071
  4131ea:	inc    edi
  4131eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131ec:	cli    
  4131ed:	std    
  4131ee:	sub    BYTE PTR [ecx+0x6d],bh
  4131f1:	adc    BYTE PTR [eax],ah
  4131f3:	sti    
  4131f4:	or     al,ch
  4131f6:	mov    esi,0xa6fdf73d
  4131fb:	leave  
  4131fc:	and    BYTE PTR [eax],bl
  4131fe:	mov    dl,0x45
  413200:	ins    DWORD PTR es:[edi],dx
  413201:	sbb    BYTE PTR [eax],al
  413203:	fisub  DWORD PTR [eax]
  413205:	sub    BYTE PTR [edi],0x5
  413208:	add    DWORD PTR [ecx-0x21550000],ecx
  41320e:	or     ecx,DWORD PTR [edi+ebp*1-0x2b141822]
  413215:	jecxz  0x4131ff
  413217:	add    edx,eax
  413219:	imul   esp,edi,0xea202f03
  41321f:	add    ecx,edx
  413221:	xchg   edx,eax
  413222:	add    edx,DWORD PTR [esi+esi*4-0x5e]
  413226:	or     ebx,DWORD PTR [edi+eax*8-0x72]
  41322a:	jge    0x413225
  41322c:	mov    dl,0x65
  41322e:	stos   BYTE PTR es:[edi],al
  41322f:	or     esi,DWORD PTR [esi+0x2f83c362]
  413235:	fsubrp st(7),st
  413237:	mov    ch,dh
  413239:	jmp    0x628cb2a0
  41323e:	out    0x3,eax
  413240:	das    
  413241:	test   cl,cl
  413243:	mov    ch,dh
  413245:	in     eax,dx
  413246:	fs js  0x41329c
  413249:	(bad)  
  41324a:	(bad)  
  41324b:	jmp    0x413209
  41324d:	dec    edx
  41324e:	out    0x3,eax
  413250:	aad    0xba
  413252:	ins    BYTE PTR es:[edi],dx
  413253:	ja     0x413260
  413255:	(bad)  
  413256:	das    
  413257:	in     al,dx
  413258:	nop
  413259:	dec    edx
  41325a:	out    0x3,eax
  41325c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41325d:	pop    ds
  41325e:	pop    ss
  41325f:	xchg   ebx,esi
  413261:	sar    edi,0x53
  413264:	inc    edx
  413265:	xchg   ecx,eax
  413266:	xlat   BYTE PTR ds:[ebx]
  413267:	clc    
  413268:	ret    
  413269:	rol    DWORD PTR [ebx],0xec
  41326c:	xchg   edx,eax
  41326d:	sub    eax,0x95000003
  413273:	shl    DWORD PTR [edx-0x25],0xb4
  413277:	cdq    
  413278:	retf   
  413279:	sbb    esi,DWORD PTR [edi+0x6]
  41327c:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41327e:	das    
  41327f:	fidiv  WORD PTR [edx-0x40]
  413282:	pop    edi
  413283:	stos   DWORD PTR es:[edi],eax
  413284:	jle    0x4132f5
  413286:	dec    ebx
  413287:	mov    esi,0x82138100
  41328c:	(bad)  
  41328d:	call   0x41caf414
  413292:	mov    cl,0x99
  413294:	and    al,0x21
  413296:	add    DWORD PTR [esi],0x6c
  413299:	test   DWORD PTR [esi+ebx*8],ebp
  41329c:	mov    DWORD PTR [esi],esp
  41329e:	jl     0x41324d
  4132a0:	std    
  4132a1:	mov    ebp,0x31e8be28
  4132a6:	pusha  
  4132a7:	pop    ss
  4132a8:	std    
  4132a9:	pusha  
  4132aa:	clc    
  4132ab:	rcl    DWORD PTR [edi+esi*1],0xf0
  4132af:	shl    DWORD PTR [eax],0xed
  4132b2:	sbb    BYTE PTR [ecx-0x9bf6277],dh
  4132b8:	adc    DWORD PTR [esi],0x9
  4132bb:	out    0x89,al
  4132bd:	mov    WORD PTR [eax],gs
  4132bf:	gs pop ebx
  4132c1:	fstp   DWORD PTR [ebx+0x209d89e1]
  4132c7:	repnz mov ebp,DWORD PTR [ebp-0x11af09e8]
  4132ce:	add    edx,eax
  4132d0:	je     0x413344
  4132d2:	ins    BYTE PTR es:[edi],dx
  4132d3:	sbb    BYTE PTR [ebp+eax*1+0x0],dh
  4132d7:	add    bh,bl
  4132d9:	mov    al,0xe8
  4132db:	fldenv [ebx+0x18]
  4132de:	std    
  4132df:	into   
  4132e0:	ffreep st(1)
  4132e2:	ins    BYTE PTR es:[edi],dx
  4132e3:	jo     0x4132d4
  4132e5:	rcr    DWORD PTR [eax],0xd1
  4132e8:	add    ah,BYTE PTR [ecx]
  4132ea:	std    
  4132eb:	mov    dh,0xac
  4132ed:	cdq    
  4132ee:	and    al,0xd5
  4132f0:	sub    al,0x8b
  4132f2:	or     eax,0x74e2a7e2
  4132f7:	xor    esi,DWORD PTR [edx-0x540edb6e]
  4132fd:	mov    dl,0x24
  4132ff:	cmc    
  413300:	add    eax,0x330039e8
  413305:	out    0x74,al
  413307:	push   es
  413308:	sbb    DWORD PTR [edx],eax
  41330a:	sbb    bh,al
  41330c:	or     DWORD PTR ds:0xf9ea7c87,0xc70aff81
  413316:	mov    DWORD PTR [edx+ebp*1-0x5e],eax
  41331a:	call   0x11bffa9
  41331f:	mov    ecx,DWORD PTR [edx-0x77ce30b]
  413325:	add    DWORD PTR [eax],0x87898889
  41332b:	inc    esp
  41332c:	sub    ch,dh
  41332e:	test   DWORD PTR [esi-0x5e],eax
  413331:	push   0xd4581041
  413336:	ins    BYTE PTR es:[edi],dx
  413337:	add    BYTE PTR [edi],bl
  413339:	mov    WORD PTR [eax-0x77],ds
  41333c:	add    BYTE PTR [eax],al
  41333e:	enter  0xe5b5,0x41
  413342:	and    ecx,DWORD PTR ds:0xf5da8dfb
  413348:	dec    eax
  413349:	call   0x3f1af1
  41334e:	or     eax,0xd1c249e
  413353:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413354:	adc    BYTE PTR [ebx],al
  413356:	xchg   edi,eax
  413357:	bound  eax,QWORD PTR [esi+0x68]
  41335a:	mov    bl,dl
  41335c:	ins    BYTE PTR es:[edi],dx
  41335d:	add    BYTE PTR [edi-0x3c],ch
  413360:	stc    
  413361:	jmp    DWORD PTR [ecx-0x52]
  413364:	xchg   esp,ebp
  413366:	(bad)  
  413367:	aad    0xfe
  413369:	retf   0xda15
  41336c:	add    BYTE PTR [ebx-0x33],dl
  41336f:	mov    ch,0x8
  413371:	push   esi
  413372:	sbb    DWORD PTR [esi-0x282ecc93],ecx
  413378:	(bad)  [ebp+edi*1-0x2d]
  41337c:	jns    0x41338a
  41337e:	das    
  41337f:	in     eax,dx
  413380:	pop    esi
  413381:	call   0xfe3789bc
  413386:	mov    bl,0x46
  413388:	ins    DWORD PTR es:[edi],dx
  413389:	pop    ebx
  41338a:	xchg   edi,eax
  41338b:	aaa    
  41338c:	rol    DWORD PTR [ecx+0x2f],cl
  41338f:	mov    WORD PTR [eax],ss
  413391:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413392:	sbb    eax,0x6a3704c7
  413397:	or     esi,DWORD PTR [ebx+0x42]
  41339a:	fnstcw WORD PTR [edx]
  41339c:	cli    
  41339d:	add    al,0x2e
  41339f:	xor    esi,DWORD PTR [eax]
  4133a1:	mov    DWORD PTR [eax],eax
  4133a3:	add    BYTE PTR [ebx],bl
  4133a5:	mov    al,0xe9
  4133a7:	xchg   ecx,eax
  4133a8:	rcr    DWORD PTR [ebx-0x2c387e0a],1
  4133ae:	ins    DWORD PTR es:[edi],dx
  4133af:	sub    BYTE PTR [esi-0x39],al
  4133b2:	mov    DWORD PTR [eax],eax
  4133b4:	das    
  4133b5:	pop    es
  4133b6:	add    al,BYTE PTR [ebx]
  4133b8:	pop    ebx
  4133b9:	popf   
  4133ba:	inc    edx
  4133bb:	add    BYTE PTR [esi+edi*1+0x2b22006d],ch
  4133c2:	cmp    DWORD PTR [eax+0x12],0xb4367007
  4133c9:	into   
  4133ca:	jmp    0xf354bc5d
  4133cf:	sub    DWORD PTR [edi-0x6e],0x0
  4133d3:	imul   BYTE PTR [edi]
  4133d5:	push   es
  4133d6:	jo     0x4133fe
  4133d8:	lock mov edi,0x74e30c75
  4133de:	ins    BYTE PTR es:[edi],dx
  4133df:	adc    BYTE PTR [ecx-0x39],bh
  4133e2:	add    al,0xfd
  4133e4:	cmp    dl,BYTE PTR [ebx+0x1c2f4012]
  4133ea:	ins    DWORD PTR es:[edi],dx
  4133eb:	adc    BYTE PTR [eax-0x37],al
  4133ee:	or     BYTE PTR [ecx+0x38],dl
  4133f1:	xor    ebp,edi
  4133f3:	fucomp st(4)
  4133f5:	push   es
  4133f6:	add    ah,0x3b
  4133f9:	fiadd  WORD PTR [esi+0x56]
  4133fc:	xchg   BYTE PTR [ecx+0x343f6caa],dh
  413402:	sub    al,BYTE PTR [edx+edx*1]
  413405:	jmp    0xde6f:0x123b
  41340c:	mov    edx,0x707c6fc3
  413411:	inc    eax
  413412:	neg    ah
  413414:	bound  edi,QWORD PTR [ebp-0x2d9c04fa]
  41341a:	arpl   WORD PTR [ecx+0x25ab0a71],bx
  413420:	shl    DWORD PTR [esi+ebx*1],cl
  413423:	push   ds
  413424:	addr16 sti 
  413426:	add    al,0x89
  413428:	in     al,0x69
  41342a:	sub    eax,0x40ff52b6
  41342f:	adc    eax,0x9db86f12
  413434:	popf   
  413435:	xor    BYTE PTR [ecx-0x5f7c28f9],bh
  41343b:	aad    0xa6
  41343d:	adc    DWORD PTR [esi],edx
  41343f:	or     al,0xf1
  413441:	add    al,0xd9
  413443:	and    eax,0x2e217064
  413448:	test   eax,0x5e3589
  41344d:	xor    al,0x4
  41344f:	add    eax,0xdf03cb63
  413454:	push   0xffffffcc
  413456:	jo     0x413493
  413458:	jmp    0xc54c61cc
  41345d:	mov    bl,BYTE PTR [edx]
  41345f:	mov    ah,0xaa
  413461:	adc    BYTE PTR [edx],0xde
  413464:	inc    ecx
  413465:	or     al,0xf7
  413467:	push   ds
  413468:	xor    al,0x89
  41346a:	pop    ebx
  41346b:	pop    edi
  41346c:	rcl    DWORD PTR [ebx+0x0],cl
  41346f:	add    dh,bl
  413471:	stos   DWORD PTR es:[edi],eax
  413472:	push   ss
  413473:	xor    DWORD PTR [esi-0x7a],edx
  413476:	add    BYTE PTR ds:0x60009ea6,bh
  41347c:	add    DWORD PTR [esi],0xe358fcfd
  413482:	inc    eax
  413483:	jmp    0xd315d32d
  413488:	out    dx,eax
  413489:	loopne 0x41340f
  41348b:	push   ss
  41348c:	sub    al,0xde
  41348e:	add    BYTE PTR [ecx],dl
  413490:	stos   DWORD PTR es:[edi],eax
  413491:	fs inc eax
  413493:	jmp    0x7d5445f4
  413498:	push   ds
  413499:	sahf   
  41349a:	add    BYTE PTR [esi-0x1700e5d7],ah
  4134a0:	sub    al,0xde
  4134a2:	xchg   DWORD PTR [esp+eiz*8-0x5adaa4a6],edi
  4134a9:	mov    dh,0xd0
  4134ab:	adc    ch,dh
  4134ad:	loopne 0x413433
  4134af:	mov    bl,0x2d
  4134b1:	fiadd  WORD PTR [eax]
  4134b3:	call   0xa6a9:0x98c4a6b1
  4134ba:	fcomp  DWORD PTR [eax+0x29832da3]
  4134c0:	sub    ebx,DWORD PTR [edi+0x35]
  4134c3:	call   0xba9312f4
  4134c8:	inc    DWORD PTR [ebp-0x22136814]
  4134ce:	std    
  4134cf:	fadd   st(4),st
  4134d1:	in     eax,dx
  4134d2:	inc    eax
  4134d3:	jmp    0x15e834d8
  4134d8:	xchg   DWORD PTR [esp+ecx*4-0x2c],esi
  4134dc:	stc    
  4134dd:	fsubp  st(0),st
  4134df:	(bad)  
  4134e1:	call   0xf53ede12
  4134e6:	push   eax
  4134e7:	in     eax,dx
  4134e8:	inc    eax
  4134e9:	jmp    0x1339d3c1
  4134ee:	jo     0x4134d0
  4134f0:	test   BYTE PTR [eax],al
  4134f2:	jno    0x4134cd
  4134f4:	add    BYTE PTR [eax],al
  4134f6:	ficomp WORD PTR [ecx-0x54b9ff80]
  4134fc:	dec    edi
  4134fd:	push   0x14
  4134ff:	mov    dh,0x0
  413501:	jg     0x413519
  413503:	fimul  WORD PTR [edi-0x1]
  413506:	and    ecx,DWORD PTR [esi-0x6cf9bfec]
  41350c:	inc    ecx
  41350d:	hlt    
  41350e:	fstp   QWORD PTR [eax]
  413510:	je     0x413532
  413512:	jnp    0x4134b3
  413514:	mov    al,0x51
  413516:	push   ss
  413517:	or     eax,0x9dd36411
  41351c:	add    BYTE PTR [ebp-0x72f1696a],al
  413522:	xchg   ebx,eax
  413523:	push   ecx
  413524:	push   eax
  413525:	jmp    ebx
  413527:	jge    0x41353a
  413529:	inc    eax
  41352a:	(bad)  
  41352b:	data16 shl BYTE PTR [ebp-0x2b],0x92
  413530:	pop    ecx
  413531:	hlt    
  413532:	cmp    eax,0x8610b0d7
  413537:	(bad)  [edx+0x8]
  41353a:	add    BYTE PTR [eax],al
  41353c:	xchg   ecx,eax
  41353d:	or     al,0xd6
  41353f:	push   0xffffff8c
  413541:	mov    ah,0x85
  413543:	inc    ebp
  413544:	inc    esi
  413545:	or     eax,0x973950d6
  41354a:	lock mov ebx,eax
  41354d:	stc    
  41354e:	push   edx
  41354f:	inc    DWORD PTR [ebx-0x69bff003]
  413555:	xchg   edx,eax
  413556:	inc    ecx
  413557:	in     al,dx
  413558:	ins    DWORD PTR es:[edi],dx
  413559:	sbb    BYTE PTR [edx+edi*2+0xd],dh
  41355d:	xlat   BYTE PTR ds:[ebx]
  41355e:	fcom   QWORD PTR [eax]
  413560:	xchg   esi,eax
  413561:	fst    QWORD PTR [eax-0x1]
  413564:	add    eax,DWORD PTR [edx]
  413566:	sti    
  413567:	(bad)  
  413568:	fbld   TBYTE PTR [ebp+0x442f3bdc]
  41356e:	jne    0x4135ce
  413570:	xlat   BYTE PTR ds:[ebx]
  413571:	out    0x4,al
  413573:	int3   
  413574:	out    dx,eax
  413575:	repz push ebp
  413577:	push   ebp
  413578:	cmp    dl,cl
  41357a:	call   0x5697f07c
  41357f:	push   ecx
  413580:	sub    dl,cl
  413582:	in     al,dx
  413583:	std    
  413584:	cmp    dl,BYTE PTR [ebx+0x11]
  413587:	inc    eax
  413588:	das    
  413589:	jp     0x41354c
  41358b:	je     0x4135e3
  41358d:	cs push eax
  41358f:	hlt    
  413590:	and    DWORD PTR [edi],0x7e
  413593:	dec    ebx
  413594:	repz sub eax,DWORD PTR [eax-0x4c]
  413598:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413599:	mov    ecx,0x937afdd4
  41359e:	add    cl,BYTE PTR [eax+0x0]
  4135a1:	add    ah,dh
  4135a3:	sbb    ecx,DWORD PTR [eax-0x48]
  4135a6:	xor    BYTE PTR [edi-0x3a],cl
  4135a9:	push   eax
  4135aa:	jle    0x41355c
  4135ac:	js     0x4135a6
  4135ae:	rcl    BYTE PTR [ecx],1
  4135b0:	adc    eax,0xf2076f13
  4135b5:	jae    0x4135ee
  4135b7:	mov    dh,BYTE PTR [eax-0x2c]
  4135ba:	mov    eax,0x9be8dd49
  4135bf:	fiadd  DWORD PTR [ebx]
  4135c1:	add    BYTE PTR [ecx+eax*2-0x1115781f],dh
  4135c8:	bnd jae 0x413646
  4135cb:	out    dx,eax
  4135cc:	js     0x4135c6
  4135ce:	nop
  4135cf:	shl    dl,1
  4135d1:	jae    0x41356e
  4135d3:	fistp  WORD PTR [eax]
  4135d5:	mov    esp,0xfd01471f
  4135da:	add    bl,bh
  4135dc:	repnz adc edx,DWORD PTR [edi+0x36]
  4135e0:	inc    ecx
  4135e1:	add    BYTE PTR [eax],al
  4135e3:	add    BYTE PTR ds:0x27de3fd8,dl
  4135e9:	add    al,0x20
  4135eb:	mov    bl,0xb3
  4135ed:	js     0x4135fe
  4135ef:	xchg   BYTE PTR [edi+0x7d],dh
  4135f2:	out    dx,eax
  4135f3:	(bad)  
  4135f5:	ja     0x413652
  4135f7:	adc    ah,bl
  4135f9:	neg    DWORD PTR ds:0x6e2ce79e
  4135ff:	mov    esp,ebp
  413601:	lock pushf 
  413603:	ss scas al,BYTE PTR es:[edi]
  413605:	aam    0x0
  413607:	add    BYTE PTR [edx],ah
  413609:	mov    bh,BYTE PTR [ebx-0x525c30f]
  41360f:	inc    ebx
  413610:	das    
  413611:	arpl   WORD PTR [esp+ebx*8],bp
  413614:	push   0xffffffb0
  413616:	xor    bh,BYTE PTR [ebx+0x5de7daed]
  41361c:	das    
  41361d:	test   bh,ah
  41361f:	enter  0x1229,0xfd
  413623:	inc    ebx
  413624:	das    
  413625:	paddq  mm1,QWORD PTR [ebx+0x7ae79e39]
  41362c:	jno    0x413608
  41362e:	jb     0x4135fa
  413630:	out    dx,al
  413631:	test   al,0x62
  413633:	repz xlat BYTE PTR ds:[ebx]
  413635:	jmp    0x41361e
  413637:	add    ebp,DWORD PTR [edi]
  413639:	or     BYTE PTR [ebx-0x4c22d8d9],ch
  41363f:	or     DWORD PTR [ecx+0x6],ebx
  413642:	cmp    eax,0x620faac5
  413647:	retf   0x1c01
  41364a:	jmp    0x41364f
  41364c:	add    DWORD PTR [ebx+0x18],esp
  41364f:	jge    0x41363a
  413651:	fldcw  WORD PTR [esi]
  413653:	or     cl,BYTE PTR [ebx-0x53fc5878]
  413659:	push   ds
  41365a:	jnp    0x413662
  41365c:	scas   al,BYTE PTR es:[edi]
  41365d:	push   ss
  41365e:	call   0x505bd9
  413663:	fmul   QWORD PTR [eax+ebp*8-0x5f5416c0]
  41366a:	add    al,0xe6
  41366c:	add    BYTE PTR [eax],al
  41366e:	(bad)  
  41366f:	sbb    al,0x89
  413671:	sub    DWORD PTR [edi],esp
  413673:	pop    ebx
  413674:	rcr    BYTE PTR [ebp+0x2e],0x5d
  413678:	clc    
  413679:	call   0xef7d1a36
  41367e:	sub    eax,0x2a357d0f
  413683:	int    0xc0
  413685:	stos   BYTE PTR es:[edi],al
  413686:	arpl   WORD PTR [esi],bx
  413688:	inc    eax
  413689:	stos   BYTE PTR es:[edi],al
  41368a:	jns    0x4136f1
  41368c:	in     al,dx
  41368d:	cmp    BYTE PTR [edx-0x6e160386],dh
  413693:	fwait
  413694:	cld    
  413695:	cmp    esi,edi
  413697:	mov    cl,BYTE PTR [ecx+eax*1]
  41369a:	sub    al,0x9a
  41369c:	add    cl,ch
  41369e:	pop    edx
  41369f:	fdivp  st(5),st
  4136a1:	hlt    
  4136a2:	hlt    
  4136a3:	adc    DWORD PTR [ebx],edx
  4136a5:	dec    ebp
  4136a6:	inc    esi
  4136a7:	sahf   
  4136a8:	add    BYTE PTR [esp+ebp*8-0x6b],ah
  4136ac:	add    eax,0x83127172
  4136b1:	sub    DWORD PTR [ecx-0x24],ebx
  4136b4:	xor    DWORD PTR [ecx],ebp
  4136b6:	test   DWORD PTR [ebx],ebx
  4136b8:	or     cl,ch
  4136ba:	inc    edx
  4136bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136bc:	aas    
  4136bd:	imul   eax,ebp,0xacd5710e
  4136c3:	push   es
  4136c4:	add    bh,BYTE PTR [edi+esi*1+0x25c7c7cd]
  4136cb:	in     al,0xe9
  4136cd:	icebp  
  4136ce:	lods   al,BYTE PTR ds:[esi]
  4136cf:	push   es
  4136d0:	add    al,0x94
  4136d2:	add    BYTE PTR [eax],al
  4136d4:	sub    ebx,DWORD PTR [ebp+0x22]
  4136d7:	jmp    0x6371dce6
  4136dc:	in     al,dx
  4136dd:	into   
  4136de:	cmp    al,BYTE PTR [eax]
  4136e0:	mov    al,BYTE PTR ds:[edx]
  4136e3:	mov    al,BYTE PTR [edi-0x22]
  4136e6:	mov    dh,0xc0
  4136e8:	(bad)  
  4136e9:	or     eax,0xa84e2474
  4136ee:	call   0xfb3fbc7e
  4136f3:	ret    0xda4a
  4136f6:	push   ecx
  4136f7:	mov    esi,DWORD PTR [edx-0x58]
  4136fa:	dec    ebp
  4136fb:	setns  BYTE PTR [esi-0x6143acf8]
  413702:	xor    BYTE PTR [esi+0x41],dl
  413705:	inc    edi
  413706:	jno    0x413718
  413708:	adc    DWORD PTR [ebp-0x3b],edx
  41370b:	lea    ebx,[edx+0xc]
  41370e:	cld    
  41370f:	jno    0xb6f0425f
  413715:	or     eax,0xaf8ed2b4
  41371a:	sti    
  41371b:	addps  xmm2,XMMWORD PTR [edi+0x6d0166fb]
  413722:	inc    ecx
  413723:	or     al,0x1
  413725:	push   esp
  413726:	xlat   BYTE PTR ds:[ebx]
  413727:	add    esp,DWORD PTR [ecx+eiz*8-0x36]
  41372b:	mov    ecx,db2
  41372e:	or     ebp,DWORD PTR [edi-0x7b674e3]
  413734:	rcl    DWORD PTR [eax+eax*8+0x3b],0x0
  413739:	add    BYTE PTR [eax],dl
  41373b:	or     eax,0xe1d69884
  413740:	add    BYTE PTR [edi],cl
  413742:	cmp    DWORD PTR [edx],esp
  413744:	test   DWORD PTR [ebp-0x2a],eax
  413747:	mov    BYTE PTR [ebx+0x14],bl
  41374a:	adc    eax,0x95000c77
  41374f:	sbb    bh,BYTE PTR [edi+0x7d]
  413752:	xchg   esi,eax
  413753:	loope  0x4137cb
  413755:	es sbb eax,0x2f8b0c97
  41375b:	dec    edx
  41375c:	stc    
  41375d:	add    BYTE PTR [edi+eax*2+0x7a],ch
  413761:	lds    eax,FWORD PTR [edi+0x70fdee3e]
  413767:	cld    
  413768:	mov    dl,0x45
  41376a:	out    dx,al
  41376b:	cmc    
  41376c:	inc    edi
  41376d:	or     BYTE PTR [eax],dh
  41376f:	aad    0x45
  413771:	xor    BYTE PTR [esi],ch
  413773:	mov    edx,0xfaea8900
  413778:	sub    DWORD PTR [ebx+0x1f],eax
  41377b:	test   eax,0xef089ca
  413780:	ja     0x4137c7
  413782:	out    dx,al
  413783:	idiv   DWORD PTR [edi]
  413785:	clc    
  413786:	repz cmc 
  413788:	ja     0x41379b
  41378a:	mov    ah,0xb9
  41378c:	adc    al,0x1
  41378e:	in     al,dx
  41378f:	pop    ds
  413790:	add    ecx,DWORD PTR [edx+0x3f148f3c]
  413796:	ins    BYTE PTR es:[edi],dx
  413797:	add    cl,cl
  413799:	jb     0x41379c
  41379b:	pusha  
  41379c:	sbb    eax,0x2d00003c
  4137a1:	repnz adc DWORD PTR [ecx-0x3efdd88e],ecx
  4137a8:	add    al,0x5
  4137aa:	ja     0x4137bd
  4137ac:	mov    bh,0x25
  4137ae:	inc    esp
  4137af:	inc    ecx
  4137b0:	and    al,0x6f
  4137b2:	outs   dx,DWORD PTR ds:[esi]
  4137b3:	test   ah,0x9
  4137b6:	sub    eax,0x7a065a04
  4137bb:	inc    ebx
  4137bc:	pop    ds
  4137bd:	clc    
  4137be:	shr    ecx,0x29
  4137c1:	adc    DWORD PTR [edx],0x42361e88
  4137c7:	cmp    edi,edx
  4137c9:	dec    eax
  4137ca:	repz mov edx,edi
  4137cd:	into   
  4137ce:	add    cl,BYTE PTR [ebp+0x33]
  4137d1:	jle    0x413813
  4137d3:	clc    
  4137d4:	push   esp
  4137d5:	fidiv  WORD PTR ds:0x1e7baafe
  4137db:	out    dx,al
  4137dc:	mov    ch,BYTE PTR [ebx-0x2692434e]
  4137e2:	out    0x58,eax
  4137e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137e5:	stc    
  4137e6:	imul   ebx,edi,0x5695b13f
  4137ec:	push   ds
  4137ed:	xor    BYTE PTR [edx+0x27d0eaee],bh
  4137f3:	jl     0x4137f1
  4137f5:	cmc    
  4137f6:	outs   dx,DWORD PTR ds:[esi]
  4137f7:	push   edi
  4137f8:	pop    edi
  4137f9:	push   esi
  4137fa:	xor    al,0xcc
  4137fc:	mov    al,0x8a
  4137fe:	retf   
  4137ff:	sub    ebx,esp
  413801:	icebp  
  413802:	fidivr WORD PTR [ebp+0x0]
  413805:	add    BYTE PTR [esi-0x59fc1822],ah
  41380b:	call   0x3f60:0x2a7c7aef
  413812:	adc    ebx,DWORD PTR [eax+0x1c]
  413815:	adc    al,0xb0
  413817:	mov    cl,0x9f
  413819:	sub    ebp,esp
  41381b:	fld    TBYTE PTR [ebp+0x68]
  41381e:	or     BYTE PTR [edi+eiz*8],cl
  413821:	js     0x413897
  413823:	cli    
  413824:	popa   
  413825:	push   edi
  413826:	neg    DWORD PTR [eax-0xd]
  413829:	adc    ah,BYTE PTR [edi+0x742a7e99]
  41382f:	out    0xe6,al
  413831:	xchg   DWORD PTR [ecx],esp
  413833:	fucom  st(7)
  413835:	add    esp,DWORD PTR [esi+ebp*4-0x1933a9a]
  41383c:	out    0x3,eax
  41383e:	das    
  41383f:	fisub  WORD PTR [edx-0xc]
  413842:	push   es
  413843:	mov    eax,ds:0x57556ef3
  413848:	(bad)  
  413849:	fild   QWORD PTR [eax+0x4793389]
  41384f:	adc    al,BYTE PTR [eax]
  413851:	bound  edx,QWORD PTR [eax]
  413853:	push   es
  413854:	cmp    ch,bl
  413856:	inc    edi
  413857:	pop    DWORD PTR [esi+0x72]
  41385a:	(bad)  
  41385b:	lds    ebx,FWORD PTR [ebx-0x7]
  41385e:	sbb    esp,ebx
  413860:	mov    DWORD PTR [eax+edi*2+0x1d20cc6],esi
  413867:	in     al,0x45
  413869:	ret    0x0
  41386c:	add    esi,ebp
  41386e:	jl     0x41386b
  413870:	sub    eax,ebp
  413872:	lock jl 0x41389f
  413875:	arpl   WORD PTR [ebx+0x1],di
  413878:	aam    0x86
  41387a:	lock and al,al
  41387d:	or     eax,0x86c5ea7b
  413882:	lock push 0xffffffd1
  413885:	std    
  413886:	dec    DWORD PTR [esi+0x3b]
  413889:	(bad)  
  41388a:	jnp    0x41385d
  41388c:	rcr    ah,0x42
  41388f:	shl    BYTE PTR [eax],cl
  413891:	pop    ebp
  413892:	arpl   cx,cx
  413894:	sub    al,0x55
  413896:	jnp    0x413871
  413898:	sub    eax,0x462ff487
  41389d:	(bad)  
  41389e:	adc    al,0x1d
  4138a0:	stos   BYTE PTR es:[edi],al
  4138a1:	push   esp
  4138a2:	jnp    0x413831
  4138a4:	xchg   DWORD PTR [edi+0x639c2e8],edx
  4138aa:	sub    DWORD PTR [ecx+0x1487a06d],ebx
  4138b0:	xlat   BYTE PTR ds:[ebx]
  4138b1:	push   esp
  4138b2:	push   ebx
  4138b3:	jns    0x4138fc
  4138b5:	scas   eax,DWORD PTR es:[edi]
  4138b6:	clc    
  4138b7:	bound  ebp,QWORD PTR [ecx+0x2]
  4138ba:	sub    DWORD PTR [ecx-0x2d],ebx
  4138bd:	cmp    edi,edx
  4138bf:	stos   DWORD PTR es:[edi],eax
  4138c0:	inc    ebp
  4138c1:	(bad)  
  4138c2:	aam    0xe6
  4138c4:	mov    ds:0x4a2f390f,eax
  4138c9:	(bad)  
  4138ca:	mov    DWORD PTR [eax],eax
  4138cc:	mov    eax,DWORD PTR [edx]
  4138ce:	test   DWORD PTR [ebp+0x0],ecx
  4138d1:	add    dh,dh
  4138d3:	and    eax,0x32bb8b06
  4138d8:	test   DWORD PTR [ebp-0x1a],edx
  4138db:	pop    esi
  4138dc:	jns    0x4138fa
  4138de:	xchg   BYTE PTR [ebx-0x225cfdb5],cl
  4138e4:	mov    DWORD PTR [edi-0x6b],ecx
  4138e7:	test   DWORD PTR [ecx+0x10],edx
  4138ea:	pop    ecx
  4138eb:	imul   edx,DWORD PTR [ecx+0x14],0x8f0b446d
  4138f2:	and    bh,bl
  4138f4:	add    BYTE PTR [eax],al
  4138f6:	pop    ecx
  4138f7:	mov    al,ds:0xdacb80d8
  4138fc:	add    BYTE PTR [ebx+0x77205f3],cl
  413902:	mov    esp,0x4a88fbc4
  413907:	iret   
  413908:	inc    ebx
  413909:	mov    bl,BYTE PTR [ebx]
  41390b:	cli    
  41390c:	mov    edi,0xc50842e1
  413911:	mov    BYTE PTR [edx],bl
  413913:	int    0x8a
  413915:	dec    ebp
  413916:	div    ah
  413918:	(bad)  
  413919:	shl    bh,0xde
  41391c:	mov    DWORD PTR [ebx-0x37],edx
  41391f:	or     bh,al
  413921:	add    ebp,esi
  413923:	mov    cl,BYTE PTR [edi+esi*1+0x17]
  413927:	popa   
  413928:	ret    
  413929:	add    cl,BYTE PTR [edi+0x4389e477]
  41392f:	push   cs
  413930:	test   DWORD PTR [ebp-0x3a],ebx
  413933:	mov    ecx,0x7dbf
  413938:	adc    eax,0x4de05189
  41393d:	xbegin 0x51cc5046
  413943:	aam    0x3d
  413945:	scas   eax,DWORD PTR es:[edi]
  413946:	fmul   QWORD PTR [ecx-0x161eb5d1]
  41394c:	adc    eax,0xc4f8377c
  413951:	sub    al,BYTE PTR [esi+0x70c8a37b]
  413957:	adc    al,0xb4
  413959:	push   0xffffffe1
  41395b:	mov    DWORD PTR [edx],esp
  41395d:	(bad)  
  41395e:	jp     0x4139bb
  413960:	aaa    
  413961:	hlt    
  413962:	ror    DWORD PTR [eax+0x3944252b],cl
  413968:	repnz retf 0xe668
  41396c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41396d:	push   0x11
  41396f:	std    
  413970:	jmp    0x378c:0x4f4b040a
  413977:	hlt    
  413978:	and    al,0x42
  41397a:	sar    DWORD PTR [edi+edi*2-0x8],1
  41397e:	aas    
  41397f:	clc    
  413980:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413981:	rcl    BYTE PTR [edi+esi*1],cl
  413984:	cli    
  413985:	(bad)  
  413986:	stc    
  413987:	mov    esp,DWORD PTR [ecx-0x30215cf]
  41398d:	inc    esp
  41398e:	add    al,0x4b
  413990:	push   ebx
  413991:	div    BYTE PTR [edi]
  413993:	in     al,dx
  413994:	outs   dx,DWORD PTR ds:[esi]
  413995:	fdivr  QWORD PTR [edi]
  413997:	adc    al,0x30
  413999:	and    DWORD PTR [edi-0x2],0x0
  41399d:	add    BYTE PTR [eax],bl
  41399f:	cmp    BYTE PTR [esi+0x43],bh
  4139a2:	and    ecx,DWORD PTR [ebp+0xeb7d838]
  4139a8:	jle    0x41396f
  4139aa:	pusha  
  4139ab:	ror    DWORD PTR [ebp-0x39],1
  4139ae:	in     eax,dx
  4139af:	push   cs
  4139b0:	add    DWORD PTR [ecx],esi
  4139b2:	out    dx,eax
  4139b3:	imul   esi,eax,0x53
  4139b6:	mov    ah,0x5a
  4139b8:	xchg   ah,ch
  4139ba:	ja     0x413a38
  4139bc:	cmp    BYTE PTR [eax],cl
  4139be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139bf:	mov    ebp,0xde785608
  4139c4:	jo     0x4139fe
  4139c6:	mov    edi,0xb60fac54
  4139cb:	add    esp,DWORD PTR [edx+0x50]
  4139ce:	pop    ds
  4139cf:	fstp   QWORD PTR [edi]
  4139d1:	push   es
  4139d2:	mov    ch,0xcc
  4139d4:	cmp    eax,0xe70aecc1
  4139d9:	shr    esp,0x7
  4139dc:	out    0x7c,eax
  4139de:	in     al,0x45
  4139e0:	pusha  
  4139e1:	push   0xdbac566f
  4139e6:	inc    esi
  4139e7:	pop    ds
  4139e8:	out    dx,al
  4139e9:	js     0x4139b0
  4139eb:	fsubrp st(7),st
  4139ed:	add    eax,DWORD PTR [esi+0x16]
  4139f0:	mov    edx,0x1219e47c
  4139f5:	push   es
  4139f6:	mov    dh,0xb2
  4139f8:	xlat   BYTE PTR ds:[ebx]
  4139f9:	jle    0x4139e7
  4139fb:	sbb    eax,0xc44b5060
  413a00:	pop    ss
  413a01:	cli    
  413a02:	add    BYTE PTR [eax],al
  413a04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a05:	pop    ecx
  413a06:	call   0xa9f6690e
  413a0b:	jnp    0x4139f9
  413a0d:	sub    eax,0xa2a605c2
  413a12:	mov    bh,0x5e
  413a14:	pop    ds
  413a15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a16:	jo     0x413a4f
  413a18:	and    edx,DWORD PTR [esi+0x2c]
  413a1b:	enter  0x1d66,0x34
  413a1f:	add    eax,0x7db3a1b0
  413a24:	ins    BYTE PTR es:[edi],dx
  413a25:	sbb    ah,dl
  413a27:	ret    0xdb84
  413a2a:	jo     0x413a6b
  413a2c:	jecxz  0x413a81
  413a2e:	xor    al,0xc8
  413a30:	sub    cl,BYTE PTR [edi+0x1c]
  413a33:	fsub   QWORD PTR [edx]
  413a35:	dec    edi
  413a36:	sbb    al,0xd8
  413a38:	mov    dh,0x89
  413a3a:	out    dx,eax
  413a3b:	push   esp
  413a3c:	loop   0x4139cf
  413a3e:	add    BYTE PTR [ebp-0x3a],bh
  413a41:	mov    esi,eax
  413a43:	adc    DWORD PTR [eax-0x399902f6],0x42555b3a
  413a4d:	xchg   ebx,eax
  413a4e:	or     al,0x62
  413a50:	clc    
  413a51:	or     eax,0xded0c481
  413a56:	or     esp,0xfd8bde8c
  413a5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a5d:	mov    eax,ds:0x5f2ceec6
  413a62:	jae    0x413ad1
  413a64:	adc    al,0xa3
  413a66:	fdiv   DWORD PTR [eax+0x0]
  413a69:	add    BYTE PTR [eax+0x16],cl
  413a6c:	(bad)  
  413a6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a6e:	xchg   edi,eax
  413a6f:	faddp  st(6),st
  413a71:	lods   al,BYTE PTR ds:[esi]
  413a72:	pop    ds
  413a73:	faddp  st(6),st
  413a75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a76:	pusha  
  413a77:	pop    es
  413a78:	ret    
  413a79:	lods   al,BYTE PTR ds:[esi]
  413a7a:	push   eax
  413a7b:	pop    es
  413a7c:	test   BYTE PTR [edx],ah
  413a7e:	aad    0xab
  413a80:	xor    DWORD PTR [eax+edi*2-0x22],0xedd2e473
  413a88:	mov    BYTE PTR [esi+edx*2],bh
  413a8b:	push   esp
  413a8c:	add    BYTE PTR [ebx],ah
  413a8e:	add    BYTE PTR [ecx],cl
  413a90:	jae    0x413a7e
  413a92:	inc    edi
  413a93:	fwait
  413a94:	in     al,0xc2
  413a96:	and    DWORD PTR [ebp+0x7b],ebx
  413a99:	leave  
  413a9a:	sub    al,0x8b
  413a9c:	add    eax,0xa61a7
  413aa1:	popa   
  413aa2:	pop    ecx
  413aa3:	icebp  
  413aa4:	cmp    ah,BYTE PTR [esi+edi*1]
  413aa7:	mov    edx,DWORD PTR [ebx]
  413aa9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413aaa:	dec    ecx
  413aab:	dec    BYTE PTR [eax+0x4b08c324]
  413ab1:	mov    cl,0x6c
  413ab3:	pop    ebp
  413ab4:	jnp    0x413a67
  413ab6:	sub    al,0x5f
  413ab8:	inc    ebx
  413ab9:	add    BYTE PTR [esi-0x35143b8b],bl
  413abf:	sbb    al,0x41
  413ac1:	aam    0xc6
  413ac3:	mov    DWORD PTR [ecx-0x1c],eax
  413ac6:	popf   
  413ac7:	(bad)  
  413ac8:	loopne 0x413b40
  413aca:	mov    esi,0xff4188
  413acf:	add    BYTE PTR [eax+ebx*4],bh
  413ad2:	adc    ebp,ebx
  413ad4:	enter  0x4188,0x17
  413ad8:	dec    esp
  413ad9:	cwde   
  413ada:	sti    
  413adb:	xor    BYTE PTR [ebx-0x1],0xff
  413adf:	xchg   DWORD PTR [ebx-0x63fa8b13],edi
  413ae5:	mov    esp,0xb5a7074
  413aeb:	add    bh,dh
  413aed:	push   es
  413aee:	or     eax,esi
  413af0:	retf   
  413af1:	(bad)  
  413af2:	cld    
  413af3:	xchg   ebx,ecx
  413af5:	inc    esi
  413af6:	inc    esi
  413af7:	and    BYTE PTR [ebx-0x24f10002],0x5c
  413afe:	add    BYTE PTR [eax],al
  413b00:	push   esi
  413b01:	pop    edx
  413b02:	or     ecx,DWORD PTR [eax]
  413b04:	(bad)  
  413b05:	jg     0x413adb
  413b07:	add    ah,cl
  413b09:	fnsave [edi+ebx*1-0x2a]
  413b0d:	je     0x413b0d
  413b0f:	add    BYTE PTR [esp+ebp*4-0x4bb48bed],bh
  413b16:	push   ecx
  413b17:	sti    
  413b18:	fcmovu st,st(0)
  413b1a:	or     al,0x4
  413b1c:	sahf   
  413b1d:	add    eax,0x44101485
  413b22:	inc    ecx
  413b23:	inc    BYTE PTR [edi]
  413b25:	mov    dl,BYTE PTR [ecx-0x5]
  413b28:	dec    eax
  413b29:	sub    DWORD PTR [eax],ecx
  413b2b:	or     al,0x6
  413b2d:	inc    esp
  413b2e:	inc    ecx
  413b2f:	(bad)  
  413b30:	push   ss
  413b31:	mov    al,BYTE PTR [ebx]
  413b33:	inc    DWORD PTR [eax]
  413b35:	add    BYTE PTR [edi],ch
  413b37:	loop   0x413b09
  413b39:	mov    ebp,DWORD PTR [ebx]
  413b3b:	and    eax,0x5cf373e6
  413b40:	outs   dx,DWORD PTR ds:[esi]
  413b41:	fsubr  st(0),st
  413b43:	or     ch,ch
  413b45:	push   eax
  413b46:	fadd   DWORD PTR [edx]
  413b48:	icebp  
  413b49:	call   0xfe26aecf
  413b4e:	sub    al,0xa7
  413b50:	jg     0x413b12
  413b52:	cmp    ch,ch
  413b54:	in     eax,0x73
  413b56:	(bad)  
  413b58:	lods   eax,DWORD PTR ds:[esi]
  413b59:	dec    ebx
  413b5a:	(bad)  
  413b5b:	xchg   esp,eax
  413b5c:	outs   dx,DWORD PTR ds:[esi]
  413b5d:	hlt    
  413b5e:	cmp    BYTE PTR [edi+ecx*2-0xeb55f14],al
  413b65:	mov    DWORD PTR [edx],esp
  413b67:	mov    edi,DWORD PTR [esi+0x67802e05]
  413b6d:	or     BYTE PTR [edi-0x157717ce],dh
  413b73:	in     al,0xdc
  413b75:	pushf  
  413b76:	je     0x413b64
  413b78:	in     eax,0x89
  413b7a:	jmp    0x206:0xe2fd5222
  413b81:	(bad)  
  413b82:	(bad)  
  413b83:	out    dx,al
  413b84:	bsr    ebx,DWORD PTR [eax+0xc]
  413b88:	add    dh,cl
  413b8a:	lods   al,BYTE PTR ds:[esi]
  413b8b:	cmp    dl,ch
  413b8d:	adc    BYTE PTR [edx+esi*4+0x46d281d8],dh
  413b94:	adc    DWORD PTR [ecx],edi
  413b96:	repnz test BYTE PTR ss:[ebx+0x14b40000],0xe6
  413b9f:	std    
  413ba0:	lods   al,BYTE PTR ds:[esi]
  413ba1:	mov    cl,0xdc
  413ba3:	adc    BYTE PTR [ecx+edi*4+0x3b8a81dc],dh
  413baa:	adc    DWORD PTR [ecx],edi
  413bac:	push   0xffffff8f
  413bae:	test   BYTE PTR [ebx-0x195a2188],0x2
  413bb5:	test   eax,0xa3f17b3e
  413bba:	mov    al,ds:0x34de1fc1
  413bbf:	jnp    0x413b9c
  413bc1:	pusha  
  413bc2:	xchg   ebx,eax
  413bc3:	pop    ss
  413bc4:	jle    0x413b72
  413bc6:	push   ss
  413bc7:	xor    edi,ebp
  413bc9:	shl    BYTE PTR [esi+0x3e],1
  413bcc:	push   ds
  413bcd:	push   ds
  413bce:	pusha  
  413bcf:	push   eax
  413bd0:	fist   DWORD PTR [esi-0x44]
  413bd3:	out    dx,eax
  413bd4:	test   al,0xaa
  413bd6:	cmp    edi,DWORD PTR [esp+esi*1-0xa]
  413bda:	sqrtps xmm3,XMMWORD PTR [ebx]
  413bdd:	aad    0x5d
  413bdf:	sahf   
  413be0:	test   al,0x4
  413be2:	out    0x7a,eax
  413be4:	hlt    
  413be5:	aad    0x70
  413be7:	push   eax
  413be8:	(bad)  
  413be9:	push   esi
  413bea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413beb:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413bed:	xchg   edx,eax
  413bee:	xlat   BYTE PTR ds:[ebx]
  413bef:	jl     0x413bcd
  413bf1:	add    edx,esp
  413bf3:	mov    ecx,0x49d5432
  413bf8:	das    
  413bf9:	fisub  WORD PTR [edx+0x38]
  413bfc:	jae    0x413c56
  413bfe:	mov    ah,0xf3
  413c00:	add    BYTE PTR [eax],al
  413c02:	cs pop ss
  413c04:	jo     0x413c3e
  413c06:	xchg   esp,edx
  413c08:	mul    DWORD PTR ss:[esi]
  413c0b:	jl     0x413bbf
  413c0d:	cmp    BYTE PTR [edi],dh
  413c0f:	aad    0x63
  413c11:	dec    edi
  413c12:	dec    eax
  413c13:	add    al,0xe7
  413c15:	js     0x413c6f
  413c17:	push   esi
  413c18:	cmp    al,0xd0
  413c1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c1b:	lods   eax,DWORD PTR ds:[esi]
  413c1c:	(bad)  
  413c1d:	mov    ebp,0x3e7f9ec
  413c22:	das    
  413c23:	fidiv  WORD PTR [edx-0xc]
  413c26:	cwd    
  413c28:	shl    DWORD PTR [esi+0x78],cl
  413c2b:	push   edi
  413c2c:	add    BYTE PTR [ebx+ebx*1],ah
  413c2f:	pop    esp
  413c30:	dec    ebx
  413c31:	mov    cl,0x86
  413c33:	xchg   edi,eax
  413c34:	fdiv   DWORD PTR [edx-0x78]
  413c37:	push   es
  413c38:	data16 loopne 0x413c6b
  413c3b:	shl    DWORD PTR [ebx+0x25],1
  413c3e:	jbe    0x413bc7
  413c40:	cld    
  413c41:	bound  esp,QWORD PTR [edx+0x49d94bc5]
  413c47:	ror    DWORD PTR [ecx+0x377ccb2c],1
  413c4d:	aad    0x45
  413c4f:	pop    DWORD PTR [esi]
  413c51:	es push ss
  413c53:	xchg   DWORD PTR [eax],edx
  413c55:	in     eax,0xbd
  413c57:	xchg   ecx,eax
  413c58:	cmp    DWORD PTR [ecx+0x48],ebx
  413c5b:	fadd   QWORD PTR [edi+0x7b5bd8d4]
  413c61:	push   ebp
  413c62:	push   esi
  413c63:	xchg   esp,esi
  413c65:	les    eax,FWORD PTR [eax]
  413c67:	add    BYTE PTR [edi],ch
  413c69:	pop    ebx
  413c6a:	jnp    0x413ca1
  413c6c:	scas   al,BYTE PTR es:[edi]
  413c6d:	xchg   esp,esp
  413c6f:	jmp    0xac7b127e
  413c74:	pusha  
  413c75:	add    BYTE PTR [ecx],0xab
  413c78:	fiadd  DWORD PTR [bx+di+0x5884]
  413c7d:	fimul  WORD PTR [ecx-0x3822e35c]
  413c83:	call   0xc28742a9
  413c88:	shr    ecx,1
  413c8a:	jl     0x413cdd
  413c8c:	(bad)  
  413c8d:	xchg   al,ch
  413c8f:	bound  ebx,QWORD PTR [eax]
  413c91:	repnz sub BYTE PTR [eax+edx*2-0x12d72f4b],bl
  413c99:	pop    edx
  413c9a:	push   ebx
  413c9b:	shl    DWORD PTR [edi-0x1ffd0b52],1
  413ca1:	add    DWORD PTR [ecx-0xf4af4d4],ecx
  413ca7:	add    BYTE PTR [ecx],bl
  413ca9:	push   0xffffffd5
  413cab:	inc    edx
  413cac:	lahf   
  413cad:	je     0x413c87
  413caf:	pop    gs
  413cb1:	or     al,0x37
  413cb3:	ficomp WORD PTR [eax+0x2]
  413cb6:	mov    BYTE PTR [ebp-0x62],bl
  413cb9:	xchg   DWORD PTR [ecx-0x1c],ecx
  413cbc:	popf   
  413cbd:	add    BYTE PTR [eax+0x5187be5d],cl
  413cc3:	in     al,0x56
  413cc5:	jl     0x413ce3
  413cc7:	add    BYTE PTR [ebx-0x36],bl
  413cca:	add    dh,BYTE PTR [ebp+0x0]
  413ccd:	add    ch,al
  413ccf:	mov    ecx,DWORD PTR [ebx+0x4]
  413cd2:	dec    ebp
  413cd3:	xchg   esp,eax
  413cd4:	adc    BYTE PTR [edi],cl
  413cd6:	or     DWORD PTR [esp+edx*1-0x3549fbfd],edx
  413cdd:	cmovns ebx,DWORD PTR [edi]
  413ce0:	add    BYTE PTR [eax],al
  413ce2:	(bad)  
  413ce3:	stc    
  413ce4:	inc    eax
  413ce5:	fcom   QWORD PTR [esi]
  413ce7:	jl     0x413d05
  413ce9:	add    BYTE PTR ds:0x8b750c74,bl
  413cef:	test   DWORD PTR [ecx-0x2c],ecx
  413cf2:	push   cs
  413cf3:	or     esi,DWORD PTR [eax+ecx*4]
  413cf6:	retf   0xfdb1
  413cf9:	adc    BYTE PTR [ecx-0x23],0x8a
  413cfd:	dec    ebp
  413cfe:	sbb    bl,BYTE PTR [edi]
  413d00:	fld    QWORD PTR [esp+ecx*4]
  413d03:	inc    esi
  413d04:	mov    BYTE PTR [ecx+eax*4],cl
  413d07:	test   BYTE PTR [ecx-0x1c],cl
  413d0a:	sub    BYTE PTR [eax-0x40],cl
  413d0d:	loope  0x413d61
  413d0f:	mov    ecx,DWORD PTR [edi-0x1]
  413d12:	dec    esp
  413d13:	inc    esp
  413d14:	call   edi
  413d16:	into   
  413d17:	retf   0x133
  413d1a:	aad    0x16
  413d1c:	add    cl,BYTE PTR [ecx+0x4584f1db]
  413d22:	das    
  413d23:	sub    eax,0xed035b8b
  413d28:	lds    edi,FWORD PTR [ebx+0x6a]
  413d2b:	mov    WORD PTR [edi],?
  413d2d:	in     al,0xa4
  413d2f:	mov    dl,0xe0
  413d31:	add    DWORD PTR [eax],eax
  413d33:	add    dh,bh
  413d35:	jle    0x413d6e
  413d37:	fdiv   DWORD PTR [edx+ebp*8+0x535a87e4]
  413d3e:	in     eax,dx
  413d3f:	sbb    al,0xa4
  413d41:	mov    dl,0xe0
  413d43:	jmp    0xf8a0b160
  413d48:	call   0x7aca3838
  413d4d:	push   ebx
  413d4e:	push   0xffffff89
  413d50:	(bad)  
  413d51:	dec    DWORD PTR [ebp-0x4c0bd8a5]
  413d57:	data16 mov dh,0x4b
  413d5a:	ss aas 
  413d5c:	add    al,0x4a
  413d5e:	mov    ecx,0x4f8cd37c
  413d63:	adc    BYTE PTR [eax-0x40026ce],dh
  413d69:	call   0xd44f:0xdca74b8d
  413d70:	sbb    esi,DWORD PTR [ecx+0x7c9343e1]
  413d76:	dec    edi
  413d77:	adc    BYTE PTR [esi+0x62],al
  413d7a:	fisttp QWORD PTR ds:0xfde273b3
  413d80:	js     0x413da6
  413d82:	mov    bl,0xff
  413d84:	jecxz  0x413d5c
  413d86:	add    eax,0xd1622ec7
  413d8b:	inc    eax
  413d8c:	and    al,0x32
  413d8e:	cmc    
  413d8f:	or     al,0xab
  413d91:	push   ebp
  413d92:	(bad)  
  413d94:	push   eax
  413d95:	jl     0x413dde
  413d97:	or     al,0x0
  413d99:	add    BYTE PTR [ebp+0x3788bd62],dh
  413d9f:	fidiv  WORD PTR [edx-0x36]
  413da2:	ficomp DWORD PTR [edi-0x199232be]
  413da8:	out    0x16,eax
  413daa:	out    dx,eax
  413dab:	hlt    
  413dac:	sar    DWORD PTR [eax],cl
  413dae:	mov    dh,0xf1
  413db0:	imul   ebp,edi,0xc2c557f
  413db6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413db7:	xchg   esi,eax
  413db8:	sar    DWORD PTR [ecx],cl
  413dba:	bound  edx,QWORD PTR [edi+0x1c]
  413dbd:	fdiv   DWORD PTR [esi-0xa71046e]
  413dc3:	push   esp
  413dc4:	xor    al,0xf4
  413dc6:	das    
  413dc7:	push   ss
  413dc8:	jmp    0xe148:0xa5081edd
  413dcf:	(bad)  [ebp+0x70ddda48]
  413dd5:	push   eax
  413dd6:	lahf   
  413dd7:	push   esi
  413dd8:	hlt    
  413dd9:	lahf   
  413dda:	mov    al,0x9a
  413ddc:	jnp    0x413dfc
  413dde:	adc    al,0x74
  413de1:	jmp    0xace7:0x2ee700b8
  413de8:	pusha  
  413de9:	push   eax
  413dea:	ja     0x413de0
  413dec:	jmp    0x732f3a7f
  413df1:	dec    eax
  413df2:	fist   DWORD PTR [esi-0x6c]
  413df5:	rcl    DWORD PTR [esi+0x2e],cl
  413df8:	out    0x90,al
  413dfa:	rcr    dh,0xe7
  413dfd:	add    eax,DWORD PTR [eax]
  413dff:	add    BYTE PTR [esi+0x1c],dl
  413e02:	jo     0x413e4c
  413e04:	imul   esi,esp,0xffffffe9
  413e07:	mov    gs,esp
  413e09:	adc    DWORD PTR [ecx-0x63a8fe0d],eax
  413e0f:	fld    TBYTE PTR [eax-0x67e1e06e]
  413e15:	sub    dl,0x8c
  413e18:	in     al,dx
  413e19:	add    eax,0x15f76200
  413e1e:	cmp    DWORD PTR [eax],ebp
  413e20:	iret   
  413e21:	fiadd  WORD PTR [edi+0x5b567b2c]
  413e27:	rcr    DWORD PTR [esi],0x4b
  413e2a:	dec    ebx
  413e2b:	lds    edi,FWORD PTR [esi]
  413e2d:	dec    ecx
  413e2e:	push   ebx
  413e2f:	fnstenv [edx+0xe1a0883]
  413e35:	mov    eax,?
  413e37:	mov    esi,0xc3e80a78
  413e3c:	jmp    0x413e3f
  413e3e:	std    
  413e3f:	fidivr WORD PTR [edi+0x6872f8a3]
  413e45:	ror    BYTE PTR [ecx+0x635dd724],cl
  413e4b:	mov    ch,0x33
  413e4d:	pop    ebp
  413e4e:	arpl   WORD PTR [ecx-0x6e9ca2d5],cx
  413e54:	xor    ebx,DWORD PTR [ebp+0x63]
  413e57:	test   DWORD PTR [ebx],ebp
  413e59:	push   ebx
  413e5a:	cmp    al,0xe7
  413e5c:	jbe    0x413e76
  413e5e:	add    eax,0xb48bb5e9
  413e63:	jo     0x413e65
  413e65:	add    al,bh
  413e67:	sub    DWORD PTR [edi+0x4318e8a4],eax
  413e6d:	cmp    DWORD PTR [eax+ebx*1],ebp
  413e70:	inc    ebx
  413e71:	imul   BYTE PTR ds:0x58c7d95b
  413e77:	pop    ebp
  413e78:	jnp    0x413ecb
  413e7a:	sub    ecx,DWORD PTR [ebx-0x115819fa]
  413e80:	xchg   DWORD PTR [eax+eax*8+0x6e9b5d1],edx
  413e87:	lds    eax,FWORD PTR [ebx+0x3d]
  413e8a:	fcomp  st(2)
  413e8c:	std    
  413e8d:	lods   al,BYTE PTR ds:[esi]
  413e8e:	push   esp
  413e8f:	cmc    
  413e90:	pop    ss
  413e91:	push   0x0
  413e93:	cli    
  413e94:	(bad)  
  413e95:	(bad)  
  413e96:	fcmovnbe st,st(3)
  413e98:	xchg   eax,edx
  413e9a:	or     BYTE PTR [edi-0x3930ffed],dl
  413ea0:	loopne 0x413f08
  413ea2:	jge    0x413e3c
  413ea4:	loopne 0x413f1b
  413ea6:	cmp    esi,edi
  413ea8:	inc    eax
  413ea9:	in     al,0xbd
  413eab:	xchg   edi,eax
  413eac:	(bad)  
  413ead:	call   DWORD PTR [ebx+0x46]
  413eb0:	jg     0x413e72
  413eb2:	adc    al,0x5a
  413eb4:	jns    0x413e8a
  413eb6:	push   es
  413eb7:	push   esp
  413eb8:	inc    ecx
  413eb9:	les    edx,FWORD PTR [ecx+0x3e]
  413ebc:	out    0x4,eax
  413ebe:	fcom   DWORD PTR [edi-0x6772ff30]
  413ec4:	call   0x76378a04
  413ec9:	or     al,BYTE PTR [eax]
  413ecb:	add    BYTE PTR [ecx],al
  413ecd:	inc    cx
  413ecf:	(bad)  
  413ed1:	gs push ecx
  413ed3:	loopne 0x413e82
  413ed5:	ror    BYTE PTR [ebx],cl
  413ed7:	mov    bh,0xb
  413ed9:	cli    
  413eda:	or     dh,BYTE PTR [edi+0x7d801e3b]
  413ee0:	inc    eax
  413ee1:	fild   DWORD PTR [ebp+0x6a6b255]
  413ee7:	or     ax,0xc097
  413eeb:	je     0x413f19
  413eed:	pop    edx
  413eee:	or     eax,DWORD PTR [edx]
  413ef0:	push   cs
  413ef1:	xlat   BYTE PTR ds:[ebx]
  413ef2:	push   cs
  413ef3:	ud1    ecx,DWORD PTR [edx-0x43]
  413ef7:	call   0xe85919a
  413efc:	xchg   DWORD PTR [ecx+eax*2],edx
  413eff:	(bad)  
  413f00:	xchg   edi,eax
  413f01:	push   ebx
  413f02:	push   ecx
  413f03:	rcl    BYTE PTR ds:0xd3800215,0x5
  413f0a:	std    
  413f0b:	push   cs
  413f0c:	or     eax,DWORD PTR [ecx-0xad10000]
  413f12:	or     BYTE PTR ds:0xd05e7537,0x2f
  413f19:	mov    ecx,DWORD PTR [eax]
  413f1b:	je     0x413f3b
  413f1d:	jne    0x413f7d
  413f1f:	std    
  413f20:	das    
  413f21:	or     DWORD PTR [ebx],0xbd69b466
  413f27:	data16 hlt 
  413f29:	rcr    DWORD PTR [esp+esi*2+0x5395f006],0x0
  413f31:	add    BYTE PTR [ebx],cl
  413f33:	add    al,0x5
  413f35:	mov    BYTE PTR [eax],ch
  413f37:	add    BYTE PTR [edi-0x24],0xa7
  413f3b:	or     ecx,DWORD PTR [ebx]
  413f3d:	mov    edi,0x4488f007
  413f42:	cmp    DWORD PTR [esi],eax
  413f44:	ret    
  413f45:	inc    ebx
  413f46:	add    BYTE PTR [edi],al
  413f48:	mov    WORD PTR [ebx-0x49],ss
  413f4b:	mov    dh,al
  413f4d:	add    al,BYTE PTR [eax+esi*8]
  413f50:	or     al,0x10
  413f52:	icebp  
  413f53:	retf   0xdd
  413f56:	mov    bh,0x4
  413f58:	fidiv  WORD PTR [ebx-0x1]
  413f5b:	jb     0x413f65
  413f5d:	push   cs
  413f5e:	shl    dl,1
  413f60:	sar    ch,0x42
  413f63:	dec    edi
  413f64:	fnsave [ebx-0x39]
  413f67:	xlat   BYTE PTR ds:[ebx]
  413f68:	fnsave [ebx-0x3d]
  413f6b:	(bad)  
  413f6c:	gs cld 
  413f6e:	mov    al,0x9c
  413f70:	add    eax,esi
  413f72:	mov    dl,0xc7
  413f74:	push   edi
  413f75:	cmp    BYTE PTR [eax-0x1ff246ee],ah
  413f7b:	xor    ch,ch
  413f7d:	std    
  413f7e:	sbb    bl,BYTE PTR [edi-0x491d4af3]
  413f84:	fnsave [ebx+0x7b]
  413f87:	adc    BYTE PTR [edi-0x4c],0x71
  413f8b:	fsubp  st(6),st
  413f8d:	add    al,0xa6
  413f8f:	jnp    0x413f80
  413f91:	mov    ebp,esp
  413f93:	sti    
  413f94:	pop    esi
  413f95:	dec    ecx
  413f96:	add    BYTE PTR [eax],al
  413f98:	bound  eax,QWORD PTR [esi]
  413f9a:	jne    0x413f73
  413f9c:	pop    edx
  413f9d:	std    
  413f9e:	jno    0x413fe9
  413fa0:	and    esp,ecx
  413fa2:	and    dh,BYTE PTR [ebx]
  413fa4:	dec    edx
  413fa5:	jae    0x413fa2
  413fa7:	add    ch,BYTE PTR [ecx-0x72]
  413faa:	call   DWORD PTR [eax]
  413fac:	jbe    0x413fab
  413fae:	in     eax,0x2
  413fb0:	ds popa 
  413fb2:	and    al,0xd4
  413fb4:	aas    
  413fb5:	imul   ebp,DWORD PTR [esp+edx*8],0xf39b8aae
  413fbc:	push   edi
  413fbd:	mov    ds:0xaba30e83,eax
  413fc2:	mov    ebp,0x2c610ade
  413fc7:	lock pop ds
  413fc9:	imul   esp,DWORD PTR [eax+esi*8],0xf3af8aae
  413fd0:	aaa    
  413fd1:	mov    ds:0xbfbb0e57,eax
  413fd6:	xchg   ebp,eax
  413fd7:	fsubrp st(2),st
  413fd9:	cwde   
  413fda:	cs mov esi,ecx
  413fdd:	fwait
  413fde:	mov    al,0xc1
  413fe0:	aas    
  413fe1:	ficom  WORD PTR [ebx+ecx*4]
  413fe4:	(bad)  [eax-0x7d]
  413fe7:	das    
  413fe8:	pop    esi
  413fe9:	xchg   esp,eax
  413fea:	push   ss
  413feb:	adc    ebx,ebp
  413fed:	mov    al,0x66
  413fef:	inc    esi
  413ff0:	(bad)  
  413ff1:	sbb    eax,0x669f3870
  413ff6:	mov    esp,0x2b92a8d7
  413ffb:	mov    WORD PTR [eax],es
  413ffd:	add    BYTE PTR [edx+ecx*1],dl
  414000:	add    BYTE PTR [ecx],bh
  414002:	cmp    ebp,ebp
  414004:	ins    DWORD PTR es:[edi],dx
  414005:	test   eax,0xe8fffc88
  41400a:	mov    ch,0xa8
  41400c:	or     BYTE PTR [eax+0x37],ah
  41400f:	add    al,BYTE PTR [edi+0x4b668cb4]
  414015:	stc    
  414016:	mov    ebx,0x76d2fc90
  41401b:	jmp    0x7200:0xde33698e
  414022:	(bad)  
  414023:	stc    
  414024:	mov    BYTE PTR [esp+ecx*2-0x4c1420c4],bl
  41402b:	test   al,0xd8
  41402d:	bound  ebp,QWORD PTR [eax]
  41402f:	out    0x39,eax
  414031:	xor    al,0x33
  414033:	jmp    0xde6d76bc
  414038:	add    BYTE PTR [eax+0x70],ah
  41403b:	test   BYTE PTR [edx+0x4321fa39],0xd1
  414042:	sub    al,0xde
  414044:	add    cl,ch
  414046:	mov    bh,0xee
  414048:	cmp    BYTE PTR [edi+eax*1],ch
  41404b:	jns    0x4140a4
  41404d:	bound  ebp,QWORD PTR [eax+0x16]
  414050:	mov    DWORD PTR [ebx+edx*8],esp
  414053:	mov    bl,0x3c
  414055:	repnz and DWORD PTR [ebp+0x65cf1489],0xce69d2cd
  414060:	jnp    0x414059
  414062:	add    BYTE PTR [eax],al
  414064:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414065:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414066:	clc    
  414067:	sar    BYTE PTR [eax],0x35
  41406a:	jae    0x41405b
  41406c:	imul   esi,DWORD PTR [ebp-0xfa72685],0x4c
  414073:	and    bl,bl
  414075:	outs   dx,DWORD PTR ds:[esi]
  414076:	push   es
  414077:	jo     0x414081
  414079:	out    dx,al
  41407a:	xchg   ah,dl
  41407c:	js     0x414033
  41407e:	jnp    0x4140d5
  414080:	clc    
  414081:	fadd   QWORD PTR [edi+0x7f136b00]
  414087:	jge    0x414067
  414089:	loope  0x414109
  41408b:	or     BYTE PTR [ebp-0x64],bh
  41408e:	lock jl 0x414016
  414091:	popf   
  414092:	out    0x4,eax
  414094:	add    eax,0xdd00e883
  414099:	call   0x346:0xe031c110
  4140a0:	or     ebp,edx
  4140a2:	jno    0x4140b8
  4140a4:	stos   BYTE PTR es:[edi],al
  4140a5:	inc    ebp
  4140a6:	xchg   DWORD PTR [ebp+0x3a],edi
  4140a9:	gs dec ecx
  4140ab:	lock ins DWORD PTR es:[edi],dx
  4140ad:	lods   al,BYTE PTR ds:[esi]
  4140ae:	cld    
  4140af:	sub    edx,DWORD PTR [esi]
  4140b1:	lahf   
  4140b2:	inc    edx
  4140b3:	mov    ebx,esi
  4140b5:	in     eax,dx
  4140b6:	xchg   BYTE PTR [ebp+0x2],dl
  4140b9:	(bad)  
  4140ba:	push   ecx
  4140bb:	cld    
  4140bc:	lea    edi,[esp+ebp*8-0x541609d5]
  4140c3:	fld    DWORD PTR [edi+eiz*2+0x71]
  4140c7:	fadd   DWORD PTR [eax]
  4140c9:	add    BYTE PTR [ecx],bl
  4140cb:	dec    edx
  4140cc:	repnz cmp ebx,DWORD PTR [eax+0x2b8b0898]
  4140d3:	out    dx,al
  4140d4:	test   BYTE PTR [ebp-0x62],cl
  4140d7:	add    eax,0x3a2b8b06
  4140dc:	test   DWORD PTR [ebp-0x52],edx
  4140df:	pop    esi
  4140e0:	jns    0x4140fe
  4140e2:	(bad)  
  4140e3:	imul   ecx,DWORD PTR [ebx+0x2],0xffffffd3
  4140e7:	fisttp QWORD PTR [ecx+0x5165d04f]
  4140ed:	adc    cl,cl
  4140ef:	dec    ecx
  4140f0:	push   ecx
  4140f1:	adc    al,0x87
  4140f3:	cld    
  4140f4:	add    DWORD PTR [ebx],edi
  4140f6:	cld    
  4140f7:	jmp    0xded80e87
  4140fc:	add    bh,bh
  4140fe:	das    
  4140ff:	dec    edx
  414100:	mov    ebp,0x1091a80
  414105:	mov    DWORD PTR [edx],ebx
  414107:	icebp  
  414108:	push   ebp
  414109:	sbb    DWORD PTR [ecx+ecx*2-0x3cc7727],esi
  414110:	xchg   BYTE PTR [ebx+0x75],cl
  414113:	jl     0x414182
  414115:	xor    eax,0x354d6d2e
  41411a:	sub    eax,0xb7f94e6f
  41411f:	inc    eax
  414120:	adc    al,0x1
  414122:	lods   al,BYTE PTR ds:[esi]
  414123:	ret    
  414124:	add    eax,0xc1e0e28a
  414129:	fbstp  TBYTE PTR [ebx]
  41412b:	out    dx,eax
  41412c:	enter  0x88,0x0
  414130:	xor    edi,DWORD PTR [edi+eax*4]
  414133:	dec    ebx
  414134:	inc    edi
  414135:	or     al,bh
  414137:	ror    BYTE PTR [esi+0x8],0x88
  41413b:	push   ecx
  41413c:	sub    dh,ch
  41413e:	retf   0x701
  414141:	or     BYTE PTR [eax+0x35],0x2e
  414145:	test   cl,al
  414147:	add    ah,BYTE PTR [esi+0x7287e8a2]
  41414d:	pop    ds
  41414e:	mov    ebx,DWORD PTR [ebx-0x25]
  414151:	in     al,dx
  414152:	lds    edi,FWORD PTR [ebx+0x6c]
  414155:	jl     0x414186
  414157:	call   0x219f400
  41415c:	(bad)  
  41415d:	outs   dx,BYTE PTR ds:[esi]
  41415e:	das    
  41415f:	fdiv   DWORD PTR [edx+edi*4+0x5f8287e0]
  414166:	in     eax,dx
  414167:	sbb    ah,BYTE PTR [edx+esi*4-0x7bdd1628]
  41416e:	push   edi
  41416f:	clc    
  414170:	sar    bl,0xec
  414173:	mov    BYTE PTR [edx+0x5f],ah
  414176:	lea    esi,[ebx+0x17]
  414179:	fidiv  WORD PTR [edx+0x39]
  41417c:	aaa    
  41417d:	fnstsw WORD PTR [eax]
  41417f:	lea    ebx,[ebx+0x4d]
  414182:	test   al,0x1e
  414184:	in     al,0x15
  414186:	retf   
  414187:	loope  0x41412f
  414189:	stos   DWORD PTR es:[edi],eax
  41418a:	xlat   BYTE PTR ds:[ebx]
  41418b:	(bad)  
  41418d:	cmc    
  41418e:	out    0x48,eax
  414190:	xchg   edi,eax
  414191:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  414193:	fild   DWORD PTR [eax]
  414195:	add    BYTE PTR [esi],dh
  414197:	stos   DWORD PTR es:[edi],eax
  414198:	adc    ebx,DWORD PTR [eax+0x5f]
  41419b:	stc    
  41419c:	stos   DWORD PTR es:[edi],eax
  41419d:	xlat   BYTE PTR ds:[ebx]
  41419e:	mov    dh,0xab
  4141a0:	neg    DWORD PTR [esp+esi*8]
  4141a3:	stc    
  4141a4:	in     eax,0x87
  4141a6:	lods   eax,DWORD PTR ds:[esi]
  4141a7:	clc    
  4141a8:	or     eax,0xe80c1edb
  4141ad:	dec    eax
  4141ae:	push   ebx
  4141af:	pop    ds
  4141b0:	or     BYTE PTR [esi],al
  4141b2:	inc    eax
  4141b3:	stos   BYTE PTR es:[edi],al
  4141b4:	pop    es
  4141b5:	inc    esp
  4141b6:	mul    BYTE PTR [edx-0x665cf52d]
  4141bc:	in     eax,0xda
  4141be:	sub    ah,BYTE PTR [ebp+0x24]
  4141c1:	or     BYTE PTR [ebp+0x278bb3aa],dh
  4141c7:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4141c9:	cmp    dh,BYTE PTR [ecx-0x6b]
  4141cc:	mov    al,0xc5
  4141ce:	daa    
  4141cf:	fdivp  st(2),st
  4141d1:	ret    
  4141d2:	push   ss
  4141d3:	repz sbb ecx,DWORD PTR [edi+0x33bb5d0b]
  4141da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141db:	stos   BYTE PTR es:[edi],al
  4141dc:	out    dx,eax
  4141dd:	mov    ?,WORD PTR [eax-0x26]
  4141e0:	xor    eax,0x97aaa833
  4141e5:	mov    fs,WORD PTR [esi+ecx*8+0x62]
  4141e9:	frstor [esi-0x8f90c6e]
  4141ef:	fadd   QWORD PTR [ecx+0x1fb916]
  4141f5:	sub    al,0xd5
  4141f7:	ffree  st(6)
  4141f9:	and    al,0x0
  4141fb:	add    ah,dl
  4141fd:	fld    QWORD PTR [edi+0x7b60bcb4]
  414203:	sub    DWORD PTR [ebx+0x7212e89c],esi
  414209:	jmp    0x1200:0xde2b468b
  414210:	jnp    0x414272
  414212:	dec    ebx
  414213:	xor    DWORD PTR [ecx+0x309c89de],edx
  414219:	addr16 inc ebx
  41421b:	sub    DWORD PTR [ebx-0x631d1374],esp
  414221:	jmp    0xc200:0xde2b628b
  414228:	jb     0x41428a
  41422a:	inc    ebx
  41422b:	sbb    eax,0xac89de41
  414230:	jo     0x4141b5
  414232:	adc    BYTE PTR [eax+0x60f4a4b3],ah
  414238:	out    0xf5,eax
  41423a:	cmp    BYTE PTR [eax],ch
  41423c:	xlat   BYTE PTR ds:[ebx]
  41423d:	fiadd  WORD PTR [edi+0x4365ff2c]
  414243:	mov    cl,0x42
  414245:	aaa    
  414246:	jnp    0x414232
  414248:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414249:	fwait
  41424a:	clc    
  41424b:	into   
  41424c:	pusha  
  41424d:	test   BYTE PTR [esi+edi*2],0x70
  414251:	push   es
  414252:	std    
  414253:	xor    al,0xdf
  414255:	jmp    0xfa485f0f
  41425a:	jb     0x414215
  41425c:	mov    ds:0x910873,al
  414261:	add    ah,cl
  414263:	repnz cld 
  414265:	sahf   
  414266:	mov    dl,0x9b
  414268:	clc    
  414269:	out    0x87,al
  41426b:	fwait
  41426c:	hlt    
  41426d:	push   0x70
  41426f:	push   ss
  414270:	add    BYTE PTR [eax],al
  414272:	push   ebp
  414273:	xchg   edi,eax
  414274:	fadd   QWORD PTR [eax]
  414276:	push   ebp
  414277:	xchg   edi,eax
  414278:	loopne 0x41427a
  41427a:	inc    ebp
  41427b:	xchg   edi,eax
  41427c:	in     al,0x0
  41427e:	dec    ebp
  41427f:	(bad)  
  414280:	lock lea edx,[edx-0xc]
  414284:	inc    edx
  414285:	(bad)  
  414286:	mov    ebx,ebx
  414288:	test   DWORD PTR [ebp-0x42],esi
  41428b:	arpl   WORD PTR [ecx-0x4c],ax
  41428e:	movzx  edx,sp
  414291:	(bad)  
  414292:	fld    TBYTE PTR [ebx]
  414294:	std    
  414295:	(bad)
  414298:	std    
  414299:	test   BYTE PTR [esi-0x6c],al
  41429c:	dec    esi
  41429d:	add    ebx,0xfffffffb
  4142a0:	push   DWORD PTR [ebx+ebx*2+0x6a]
  4142a4:	add    cl,BYTE PTR [ecx+0x287338b]
  4142aa:	jge    0x414264
  4142ac:	fdiv   DWORD PTR [ebp+0x4b]
  4142af:	push   ss
  4142b0:	inc    ecx
  4142b1:	loopne 0x4142d0
  4142b3:	pop    es
  4142b4:	cmp    BYTE PTR [ebp+0x2a],0xe2
  4142b8:	jno    0x4142c1
  4142ba:	or     BYTE PTR [edi-0x4930fff1],dh
  4142c0:	fdivr  QWORD PTR [ebx]
  4142c2:	pop    ebx
  4142c3:	ss jno 0x4142d7
  4142c6:	add    BYTE PTR [eax],al
  4142c8:	add    DWORD PTR [eax+0x2e53ffe4],edi
  4142ce:	jg     0x414292
  4142d0:	or     ah,BYTE PTR [edx+0x79]
  4142d3:	aam    0x16
  4142d5:	xchg   esi,eax
  4142d6:	enter  0xaeb,0x1d
  4142da:	inc    ecx
  4142db:	rol    BYTE PTR [esi],1
  4142dd:	push   0x41
  4142df:	in     al,0xff
  4142e1:	mov    bh,0xe0
  4142e3:	jbe    0x4142c3
  4142e5:	imul   eax,DWORD PTR [ecx-0x28],0xebdca05d
  4142ec:	das    
  4142ed:	pop    es
  4142ee:	mov    WORD PTR [ebx-0xd],es
  4142f1:	jnp    0x414339
  4142f3:	fsubr  DWORD PTR [edi+0x3b00dae1]
  4142f9:	add    bl,BYTE PTR [ebx+eax*2]
  4142fc:	repz clc 
  4142fe:	sub    DWORD PTR [eax+0x4890320],eax
  414304:	dec    ecx
  414305:	ins    BYTE PTR es:[edi],dx
  414306:	mov    cl,0xbf
  414308:	xchg   ebp,eax
  414309:	in     al,dx
  41430a:	mov    BYTE PTR [ecx+edi*1+0x6],dl
  41430e:	mov    eax,ss
  414310:	outs   dx,BYTE PTR ds:[esi]
  414311:	call   0xe8c2:0xc8f286f1
  414318:	daa    
  414319:	ins    DWORD PTR es:[edi],dx
  41431a:	sub    eax,0x3d7d2d1e
  41431f:	push   ds
  414320:	sub    al,0xbf
  414322:	ds (bad) 
  414324:	test   BYTE PTR cs:[edi-0xba650fc],bh
  41432b:	inc    DWORD PTR [eax]
  41432d:	add    BYTE PTR [ecx],ch
  41432f:	mov    ah,BYTE PTR [ebx-0x7efad100]
  414335:	or     eax,0xd0568537
  41433a:	das    
  41433b:	imul   eax,DWORD PTR [eax],0x74
  41433e:	add    BYTE PTR [ebp+0x712ffd56],al
  414344:	(bad)  
  414345:	cmp    BYTE PTR [edx+0x3b],bh
  414348:	push   eax
  414349:	xor    al,0x33
  41434b:	sti    
  41434c:	mov    BYTE PTR ds:0x88f2fba7,al
  414352:	out    dx,al
  414353:	inc    esi
  414354:	in     al,dx
  414355:	or     BYTE PTR [edi-0x4a01093d],dh
  41435b:	inc    esi
  41435c:	ret    
  41435d:	call   0xbc88c181
  414362:	out    dx,al
  414363:	push   ds
  414364:	cld    
  414365:	xchg   DWORD PTR [ebx-0x22],esi
  414368:	add    eax,0xfda2b702
  41436d:	add    dh,cl
  41436f:	fwait
  414370:	xchg   esi,eax
  414371:	add    eax,0xeae31cae
  414376:	aaa    
  414377:	loop   0x414350
  414379:	mov    ebp,0x8be6f56c
  41437e:	xor    dh,ch
  414380:	sti    
  414381:	mov    bl,0xa4
  414383:	fcmove st,st(5)
  414385:	(bad)  
  414386:	sbb    al,0x1a
  414388:	push   cx
  41438a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41438b:	cmc    
  41438c:	ror    edi,cl
  41438e:	push   esp
  414390:	fcmovnbe st,st(3)
  414392:	add    BYTE PTR [eax],al
  414394:	xchg   DWORD PTR [ebx+0x4b],edi
  414397:	xlat   BYTE PTR ds:[ebx]
  414398:	mov    ah,cl
  41439a:	aaa    
  41439b:	sub    DWORD PTR [edi+0x6b],0xf5fcd701
  4143a2:	in     eax,0x8e
  4143a4:	in     al,0x5
  4143a6:	cs push ecx
  4143a8:	arpl   bp,sp
  4143aa:	pop    esi
  4143ab:	xor    DWORD PTR [ebx-0xb],edx
  4143ae:	xchg   ebx,eax
  4143af:	shl    DWORD PTR [esi+0x2abe4f6b],cl
  4143b5:	fbld   TBYTE PTR [edx+0x59]
  4143b8:	aaa    
  4143b9:	data16 lods al,BYTE PTR ds:[esi]
  4143bb:	aad    0xb7
  4143bd:	fwait
  4143be:	(bad)  
  4143bf:	jmp    0x41436c
  4143c1:	icebp  
  4143c2:	cmc    
  4143c3:	(bad)  
  4143c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143c5:	fwait
  4143c6:	xor    eax,ebp
  4143c8:	pavgb  mm6,QWORD PTR [edi]
  4143cb:	xlat   BYTE PTR ds:[ebx]
  4143cc:	pushf  
  4143cd:	out    dx,al
  4143ce:	imul   eax,DWORD PTR [edi],0x39
  4143d1:	(bad)  
  4143d2:	mov    edi,0xcdf4da04
  4143d7:	add    bh,bh
  4143d9:	pusha  
  4143da:	sub    al,0xe8
  4143dc:	pop    ds
  4143dd:	imul   esp,DWORD PTR [eax+ebp*8],0xa50082ae
  4143e4:	cld    
  4143e5:	mov    ch,0x43
  4143e7:	test   eax,0xa74c6231
  4143ec:	stc    
  4143ed:	repnz and BYTE PTR [ebx+ecx*8],0xcd
  4143f2:	mov    DWORD PTR [ebx+eax*8],ebp
  4143f5:	pop    esi
  4143f6:	imul   esp,DWORD PTR [ecx-0x4a440000],0x43
  4143fd:	cmp    DWORD PTR [ecx],ebp
  4143ff:	bound  esp,QWORD PTR [eax]
  414401:	jg     0x4143e4
  414403:	repnz pop esp
  414405:	bound  esi,QWORD PTR [edx-0x6d]
  414408:	(bad)  
  414409:	stos   DWORD PTR es:[edi],eax
  41440a:	xor    dh,bl
  41440c:	push   ebx
  41440d:	jb     0x414397
  41440f:	inc    bx
  414411:	in     eax,dx
  414412:	xor    eax,0x11e610a1
  414417:	dec    esi
  414418:	add    cl,ch
  41441a:	sub    al,0x8f
  41441c:	push   esi
  41441d:	jb     0x414410
  41441f:	leave  
  414420:	add    DWORD PTR [eax+esi*1+0x37f0d9af],esi
  414427:	retf   0x976
  41442a:	mov    ah,0x90
  41442c:	or     BYTE PTR [eax+eiz*2-0x53],dh
  414430:	push   eax
  414431:	jb     0x4143cc
  414433:	add    eax,0xf2791be2
  414438:	or     al,0x57
  41443a:	or     DWORD PTR [ebp-0x1ccb5401],esi
  414440:	mov    dh,0xa6
  414442:	sbb    al,0xdf
  414444:	fdiv   DWORD PTR [edx+0x972c9f7]
  41444a:	mov    ch,0x99
  41444c:	sbb    BYTE PTR [edx+0x50],dh
  41444f:	retf   0x3e8a
  414452:	ins    BYTE PTR es:[edi],dx
  414453:	fld    QWORD PTR [ebx-0x1b]
  414456:	das    
  414457:	or     al,0x89
  414459:	lahf   
  41445a:	mov    bl,0xf5
  41445c:	(bad)  
  41445d:	inc    DWORD PTR [eax]
  41445f:	add    BYTE PTR [ebx-0x16],al
  414462:	aaa    
  414463:	repnz xor eax,0x8e198ace
  414469:	repnz cmp al,0x41
  41446c:	frstor ds:0xc2bdf672
  414472:	cmp    bl,0xc4
  414475:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414476:	adc    BYTE PTR [ebx],bh
  414478:	mov    ah,0x8d
  41447a:	sbb    ecx,DWORD PTR [edx+0x401867bf]
  414480:	pop    ss
  414481:	aad    0xca
  414483:	jb     0x4144c5
  414485:	add    eax,0xde3d800f
  41448a:	jno    0x41449a
  41448c:	fisttp QWORD PTR ds:0xf71c0a6f
  414492:	test   BYTE PTR [eax],bl
  414494:	(bad)  
  414495:	mov    al,ds:0x2174ca37
  41449a:	xchg   DWORD PTR [ebp+0x6a],eax
  41449d:	fiadd  WORD PTR [ebx+0xc]
  4144a0:	push   DWORD PTR [edx-0x102cc4f4]
  4144a6:	or     eax,DWORD PTR [esi-0x4f54e]
  4144ac:	mov    eax,0xe83c9db6
  4144b1:	pushf  
  4144b2:	add    BYTE PTR [ebp+0x4],bl
  4144b5:	jmp    0x4d87:0x5cd54fc
  4144bc:	push   0xffffffda
  4144be:	mov    bl,0x51
  4144c0:	push   ebx
  4144c1:	pop    esi
  4144c2:	in     al,dx
  4144c3:	inc    esp
  4144c4:	add    BYTE PTR [eax],al
  4144c6:	xchg   ebp,eax
  4144c7:	shr    DWORD PTR [edi],0xdb
  4144ca:	xchg   ecx,eax
  4144cb:	data16 clc 
  4144cd:	data16 (bad) ds:0xdd30840b
  4144d4:	add    BYTE PTR [eax],al
  4144d6:	or     DWORD PTR [edx+0x6d],esp
  4144d9:	pop    es
  4144da:	das    
  4144db:	mov    ds:0x7938f117,eax
  4144e0:	cli    
  4144e1:	add    BYTE PTR [edi],ch
  4144e3:	add    eax,0x66eb504
  4144e8:	add    al,dl
  4144ea:	and    BYTE PTR [edi+ebp*4-0x79],dh
  4144ee:	cmp    BYTE PTR ds:0x87e895b,0x5b
  4144f5:	add    DWORD PTR [ecx],eax
  4144f7:	add    al,0x8c
  4144f9:	shl    BYTE PTR [esi+0x6a87c0b1],cl
  4144ff:	inc    ecx
  414500:	mov    bl,BYTE PTR [ebx-0x2d]
  414503:	ins    DWORD PTR es:[edi],dx
  414504:	ss int3 
  414506:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414507:	push   esp
  414508:	mov    BYTE PTR [ebx-0x19],al
  41450b:	pop    ds
  41450c:	mov    edi,0x6744e00d
  414511:	pusha  
  414512:	add    DWORD PTR [esi+0x2e],ebp
  414515:	loopne 0x414528
  414517:	rcl    ah,0x71
  41451a:	sub    bh,BYTE PTR [esi+0x4e]
  41451d:	lock xchg esp,eax
  41451f:	cli    
  414520:	add    esi,DWORD PTR [ebp-0xfc19291]
  414526:	adc    eax,esp
  414528:	sub    eax,0x200000c8
  41452d:	mov    BYTE PTR [edx+eax*1+0x2f],dl
  414531:	add    eax,0xd4e2815b
  414536:	add    DWORD PTR ds:0xffff48b3,ecx
  41453c:	das    
  41453d:	cld    
  41453e:	mov    edx,DWORD PTR [ebx+0x3f]
  414541:	adc    ecx,DWORD PTR [ebx-0x5c1400bb]
  414547:	ret    0x39a6
  41454a:	jmp    0x86bd5c
  41454f:	xchg   DWORD PTR [edx+0xb438acb],eax
  414555:	fbstp  TBYTE PTR [edx+0x49]
  414558:	repz gs push esp
  41455b:	call   0x9b275da6
  414560:	out    dx,eax
  414561:	test   BYTE PTR [edi+0x2e],al
  414564:	mov    DWORD PTR [ebp+0x672c5797],esi
  41456a:	adc    al,0xd8
  41456c:	push   es
  41456d:	(bad)  
  41456f:	call   0xb549:0xd82467ef
  414576:	sbb    al,0xc8
  414578:	sub    bl,BYTE PTR [ebp-0x30]
  41457b:	add    eax,0x870dde2f
  414580:	inc    esp
  414581:	jmp    0x3e9:0xd0ab02e6
  414588:	das    
  414589:	loope  0x4145c1
  41458b:	cmp    DWORD PTR [ebx+0x4b3ee1],edi
  414591:	add    BYTE PTR [edi],dh
  414593:	loope  0x4145cb
  414595:	ret    0x2932
  414598:	fsubr  st(3),st
  41459a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41459b:	xchg   edx,eax
  41459c:	clc    
  41459d:	shl    BYTE PTR [edx],cl
  41459f:	inc    ecx
  4145a0:	das    
  4145a1:	add    ebx,edx
  4145a3:	pop    ds
  4145a4:	pusha  
  4145a5:	pop    ecx
  4145a6:	xchg   ecx,esp
  4145a8:	jge    0x414605
  4145aa:	aas    
  4145ab:	frstor [ebx+ecx*8+0x32f932e]
  4145b2:	call   0x56e1:0x7f416018
  4145b9:	mov    dl,0xa6
  4145bb:	mov    ds:0xde1883eb,eax
  4145c0:	pusha  
  4145c1:	cmp    DWORD PTR [edi+0x67],esp
  4145c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145c5:	(bad)  
  4145c6:	xor    bl,BYTE PTR [edx+0x1c]
  4145c9:	add    al,0x2f
  4145cb:	fidiv  WORD PTR [ecx+0x43]
  4145ce:	call   FWORD PTR [ebp+0x0]
  4145d1:	lock xor ebp,DWORD PTR [ebp+0x3d]
  4145d5:	(bad)  
  4145d6:	sti    
  4145d7:	mov    dh,0xc1
  4145d9:	mul    BYTE PTR [ebp+0x2ce8ff33]
  4145df:	addr16 inc ebp
  4145e1:	icebp  
  4145e2:	mov    DWORD PTR [ebp-0x21091518],esp
  4145e8:	enter  0x6f70,0x1e
  4145ec:	cmp    DWORD PTR [eax+0x2689d659],ebp
  4145f2:	out    0xc5,eax
  4145f4:	enter  0xea,0x0
  4145f8:	out    dx,al
  4145f9:	arpl   WORD PTR [eax+ebp*8],dx
  4145fc:	sub    cl,dh
  4145fe:	or     eax,0xdd8c64
  414603:	jmp    0xa984fd74
  414608:	pop    edx
  414609:	add    eax,DWORD PTR [ecx]
  41460b:	(bad)  
  41460c:	mov    eax,0x7cf7f1b5
  414611:	clc    
  414612:	sub    al,0x2c
  414615:	fiadd  WORD PTR [eax+0x3f6d2a70]
  41461b:	jb     0x4145f1
  41461d:	mov    dh,0xc1
  41461f:	out    dx,al
  414620:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414621:	addr16 (bad) 
  414623:	call   0xf186ad54
  414628:	add    DWORD PTR [ebp-0x218c1518],ecx
  41462e:	rol    BYTE PTR [edx],1
  414630:	imul   ebp,DWORD PTR [esi+0x1b],0x29ca0562
  414637:	cmp    DWORD PTR [ecx],ebp
  414639:	add    DWORD PTR [edi+0x73666c9c],eax
  41463f:	sub    esi,eax
  414641:	data16 xor al,0xef
  414644:	(bad)  
  414645:	mov    dh,0x30
  414647:	xchg   esp,eax
  414648:	adc    DWORD PTR [edi-0x40],ebx
  41464b:	add    BYTE PTR [edi+ebx*8-0x3e],al
  41464f:	jb     0x414674
  414651:	fmul   DWORD PTR [ebx+0xc]
  414654:	fnsave [eax]
  414656:	jbe    0x414626
  414658:	das    
  414659:	int3   
  41465a:	std    
  41465b:	inc    DWORD PTR [eax]
  41465d:	add    BYTE PTR [esi],al
  41465f:	pop    esp
  414660:	cmc    
  414661:	add    al,0x1
  414663:	pop    ecx
  414664:	add    DWORD PTR ss:[esi],edx
  414667:	fadd   QWORD PTR [edi+0xb191dc8]
  41466d:	xchg   DWORD PTR [edx],esp
  41466f:	fild   DWORD PTR [eax]
  414671:	add    BYTE PTR [ebp-0x5b],bh
  414674:	sbb    BYTE PTR [ebx-0x3f00edb5],cl
  41467a:	aad    0x2b
  41467c:	aaa    
  41467d:	ret    0x135
  414680:	mov    BYTE PTR [edi-0x26],dh
  414683:	shl    al,cl
  414685:	add    esp,DWORD PTR [edi+0x4dc07173]
  41468b:	xchg   eax,eax
  41468d:	mov    edi,DWORD PTR [edx-0x1b]
  414690:	aaa    
  414691:	xor    BYTE PTR [ebx-0x653f8016],bh
  414697:	loop   0x41465b
  414699:	jb     0x4146bc
  41469b:	(bad)  [ebx+0xc]
  41469e:	dec    ebp
  41469f:	xor    DWORD PTR [esi-0x30],esi
  4146a2:	call   DWORD PTR [eax+eax*1]
  4146a5:	add    BYTE PTR [esi-0x28b84922],dl
  4146ab:	xchg   esp,eax
  4146ac:	rol    BYTE PTR [eax],0x2a
  4146af:	fiadd  DWORD PTR [eax]
  4146b1:	xor    DWORD PTR [ecx+0x4c7401af],0xffffffdc
  4146b8:	inc    ecx
  4146b9:	cld    
  4146ba:	mov    ch,0xce
  4146bc:	fiadd  WORD PTR [ebx+0x46]
  4146bf:	adc    cl,BYTE PTR [edx]
  4146c1:	mov    eax,DWORD PTR [eax]
  4146c3:	add    BYTE PTR [ebx+0x2f44891f],al
  4146c9:	push   es
  4146ca:	adc    al,BYTE PTR [edi+0x437be0ea]
  4146d0:	dec    ebx
  4146d1:	ins    BYTE PTR es:[edi],dx
  4146d2:	cmp    eax,0x241a2fc
  4146d7:	or     al,0xba
  4146d9:	jno    0x414688
  4146db:	call   0xfe10fb1e
  4146e0:	mov    bl,0x44
  4146e2:	add    BYTE PTR [esi+edx*8-0x4bfffefc],al
  4146e9:	shl    eax,0x1
  4146ec:	push   0x41
  4146ee:	mov    DWORD PTR [bp+si+0x25],esp
  4146f2:	addr16 mov edi,0x8766eced
  4146f8:	aas    
  4146f9:	lahf   
  4146fa:	jnp    0x41474f
  4146fc:	retf   
  4146fd:	xchg   esi,eax
  4146fe:	rol    edx,0x27
  414701:	fistp  QWORD PTR [ecx+0x50]
  414704:	sub    eax,0xbf537bd7
  414709:	faddp  st(1),st
  41470b:	ret    0xd737
  41470e:	jns    0x414760
  414710:	xor    ebx,edi
  414712:	jnp    0x414767
  414714:	mov    ebx,0x37c2c1d6
  414719:	fistp  QWORD PTR [ecx+0x50]
  41471c:	sub    DWORD PTR [eax+edi*1+0x50],edi
  414720:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414721:	xor    al,0xf9
  414723:	adc    BYTE PTR [eax],0x41
  414726:	push   es
  414727:	mov    eax,DWORD PTR [eax]
  414729:	add    bh,dh
  41472b:	clc    
  41472c:	push   esp
  41472d:	or     eax,0x51d90980
  414732:	js     0x414765
  414734:	lea    ecx,[edi-0x79]
  414737:	xchg   edi,eax
  414738:	int    0xfd
  41473a:	push   0x990d339b
  41473f:	aaa    
  414740:	inc    edx
  414741:	dec    eax
  414742:	jecxz  0x414721
  414744:	fistp  QWORD PTR [ebx]
  414746:	fstp   TBYTE PTR [ebp-0x283cc451]
  41474c:	push   0x66
  41474e:	inc    ebx
  41474f:	fld    QWORD PTR [edx]
  414751:	xor    eax,0x7c1f683a
  414756:	fmul   QWORD PTR [ecx]
  414758:	(bad)  
  414759:	push   ebp
  41475a:	daa    
  41475b:	pop    edx
  41475c:	lods   al,BYTE PTR ds:[esi]
  41475d:	mov    bl,0x7a
  41475f:	pop    ecx
  414760:	adc    bl,bl
  414762:	shr    eax,0xe5
  414765:	iret   
  414766:	push   es
  414767:	mov    bh,0xde
  414769:	pop    ecx
  41476a:	out    0x59,eax
  41476c:	cmp    al,0xb8
  41476e:	add    dh,BYTE PTR [edi+ecx*8+0x7b]
  414772:	ins    BYTE PTR es:[edi],dx
  414773:	push   cs
  414774:	sbb    BYTE PTR [edi],dh
  414776:	pop    es
  414777:	jne    0x41472e
  414779:	iret   
  41477a:	jmp    0x6206:0x5cced9f9
  414781:	cmp    DWORD PTR [ebx],eax
  414783:	out    dx,al
  414784:	sbb    ecx,esp
  414786:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414787:	mov    ds:0xf66235b7,eax
  41478c:	ins    BYTE PTR es:[edi],dx
  41478d:	rol    BYTE PTR [eax],cl
  41478f:	add    dl,al
  414791:	in     eax,dx
  414792:	pop    edi
  414793:	dec    ecx
  414794:	mov    ebx,0x2458a763
  414799:	pop    ecx
  41479a:	sub    al,0xe0
  41479c:	stos   BYTE PTR es:[edi],al
  41479d:	mov    ds:0xdeeb81a3,eax
  4147a2:	fstp   TBYTE PTR [esp+ebp*8-0x7]
  4147a6:	jno    0x4147f1
  4147a8:	fbld   TBYTE PTR [edi+eiz*8+0x7ae39bb6]
  4147b0:	in     al,0x19
  4147b2:	inc    eax
  4147b3:	lahf   
  4147b4:	je     0x4147a3
  4147b6:	inc    ebp
  4147b7:	jnp    0x414795
  4147b9:	std    
  4147ba:	jmp    0x38a6f7
  4147bf:	(bad)  
  4147c0:	jg     0x4147ad
  4147c2:	cld    
  4147c3:	test   BYTE PTR fs:[ecx+0x3],dh
  4147c7:	xchg   ebx,eax
  4147c8:	cs mov ecx,gs
  4147cb:	loopne 0x4147ea
  4147cd:	push   ds
  4147ce:	pushaw 
  4147d0:	neg    cl
  4147d2:	push   0xffffffe5
  4147d4:	scas   eax,DWORD PTR es:[edi]
  4147d5:	mov    eax,ds:0x7161990c
  4147da:	or     BYTE PTR [edi-0x70f7e10d],al
  4147e0:	mov    ds:0x92010e89,eax
  4147e5:	(bad)  
  4147e6:	std    
  4147e7:	out    0xa8,al
  4147e9:	sbb    eax,0x70f9f674
  4147ee:	in     al,dx
  4147ef:	(bad)  
  4147f0:	addr16 or bh,ch
  4147f3:	push   esp
  4147f4:	add    BYTE PTR [eax],al
  4147f6:	sti    
  4147f7:	add    al,0x4d
  4147f9:	ins    DWORD PTR es:[edi],dx
  4147fa:	loope  0x4147e6
  4147fc:	sub    DWORD PTR [ecx-0x40ce1e80],0x6a
  414803:	test   DWORD PTR [ecx],0x72eb02fa
  414809:	(bad)
  41480c:	mov    dl,0x9e
  41480e:	stc    
  41480f:	push   esi
  414810:	mov    BYTE PTR [edx+0x2ec0af2e],0x9
  414817:	xchg   edi,eax
  414819:	stos   DWORD PTR es:[edi],eax
  41481a:	mov    ah,0xec
  41481c:	cs mov al,0x85
  41481f:	loope  0x4147f0
  414821:	xor    DWORD PTR [edx+0x2c],0xe600e8a8
  414828:	mov    BYTE PTR [ebp+0x7066e248],bh
  41482e:	cs push edi
  414830:	inc    esp
  414831:	or     eax,0x2b086483
  414836:	je     0x414824
  414838:	push   ebx
  414839:	add    ch,bh
  41483b:	or     al,0x7f
  41483d:	in     al,dx
  41483e:	pop    edx
  41483f:	scas   eax,DWORD PTR es:[edi]
  414840:	push   esi
  414841:	push   edi
  414842:	ins    BYTE PTR es:[edi],dx
  414843:	mov    eax,0xc609086a
  414848:	sub    dh,dl
  41484a:	test   eax,esp
  41484c:	xchg   eax,edi
  41484e:	mov    ebp,0xaa15fb39
  414853:	out    dx,al
  414854:	cmp    al,0x0
  414856:	int    0x10
  414858:	xor    esi,0x64390000
  41485e:	ins    BYTE PTR es:[edi],dx
  41485f:	add    DWORD PTR [esi],edx
  414861:	loopne 0x4148e2
  414863:	jge    0x414873
  414865:	loopne 0x4147ec
  414867:	push   ds
  414868:	mov    al,0x68
  41486a:	add    esp,DWORD PTR [esi-0x61]
  41486d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41486e:	or     BYTE PTR [edi],cl
  414870:	mov    eax,ds:0x53c604a1
  414875:	sbb    DWORD PTR [eax],eax
  414877:	data16 (bad) 
  414879:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41487a:	or     cl,BYTE PTR [edi]
  41487c:	sbb    BYTE PTR [ebp-0x15290003],0xb3
  414883:	dec    esi
  414884:	into   
  414885:	scas   eax,DWORD PTR es:[edi]
  414886:	dec    ebp
  414887:	push   ebx
  414888:	mov    ebx,esi
  41488a:	fcom   QWORD PTR [eax]
  41488c:	push   es
  41488d:	loop   0x414810
  41488f:	shl    BYTE PTR [edx],0xf7
  414892:	dec    esp
  414893:	push   0xe0ee
  414898:	test   eax,0x8d0893
  41489d:	out    0x4c,al
  41489f:	lea    edx,[ebx-0x16]
  4148a2:	dec    esp
  4148a3:	push   ebx
  4148a4:	scas   al,BYTE PTR es:[edi]
  4148a5:	mov    DWORD PTR [esi+0x1],edx
  4148a8:	xchg   BYTE PTR [esi],al
  4148aa:	add    dh,BYTE PTR [ebx]
  4148ac:	inc    esi
  4148ad:	addr16 inc esi
  4148af:	adc    BYTE PTR [ebx],dl
  4148b1:	and    cl,BYTE PTR [ebx]
  4148b3:	test   BYTE PTR [edi],ch
  4148b5:	add    DWORD PTR [edx],eax
  4148b7:	add    BYTE PTR [edi],ch
  4148b9:	or     BYTE PTR [ebp+0x8],0x9
  4148bd:	jo     0x414902
  4148bf:	push   cs
  4148c0:	add    BYTE PTR [eax],al
  4148c2:	cmp    BYTE PTR [esi+edi*1+0x8],dh
  4148c6:	leave  
  4148c7:	mov    ch,0xdc
  4148c9:	add    DWORD PTR [edi-0x66f2eebd],esp
  4148cf:	mov    ch,0xfb
  4148d1:	lods   al,BYTE PTR ds:[esi]
  4148d2:	outs   dx,BYTE PTR ds:[esi]
  4148d3:	outs   dx,BYTE PTR ds:[esi]
  4148d4:	inc    esi
  4148d5:	or     al,0x97
  4148d7:	clc    
  4148d8:	push   esp
  4148d9:	push   es
  4148da:	lods   al,BYTE PTR ds:[esi]
  4148db:	aad    0xd0
  4148dd:	sub    DWORD PTR [edi-0x7],0x6f3b4679
  4148e4:	inc    ebx
  4148e5:	push   cs
  4148e6:	mov    dl,0x52
  4148e8:	and    DWORD PTR [eax+0xe437f2c],ecx
  4148ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148ef:	mov    edx,0xd771c621
  4148f4:	add    al,0x66
  4148f6:	lods   al,BYTE PTR ds:[esi]
  4148f7:	xchg   ebx,eax
  4148f8:	inc    BYTE PTR [edi]
  4148fa:	sub    BYTE PTR [edx-0x3f],dh
  4148fd:	mov    BYTE PTR [ecx-0x28],ch
  414900:	adc    bh,bh
  414902:	arpl   WORD PTR [edi+0x368b4fb],cx
  414908:	cmp    al,0x3f
  41490b:	mov    dl,0xf3
  41490d:	les    ebp,FWORD PTR [edx-0x13]
  414910:	add    BYTE PTR [edi+ebp*1-0xb],bh
  414914:	ret    
  414915:	inc    ebx
  414916:	(bad)  
  414917:	push   esp
  414918:	add    BYTE PTR [eax],al
  41491a:	das    
  41491b:	inc    esp
  41491c:	inc    esi
  41491d:	hlt    
  41491e:	adc    ch,dh
  414920:	add    BYTE PTR [eax],al
  414922:	xchg   esp,eax
  414923:	(bad)  
  414924:	jg     0x41491e
  414926:	add    BYTE PTR [eax],al
  414928:	dec    edi
  414929:	jmp    0x0:0xfcf2c4f5
  414930:	nop
  414931:	fucom  st(7)
  414933:	(bad)  
  414934:	in     al,dx
  414935:	in     eax,0xe6
  414937:	int3   
  414938:	das    
  414939:	fisubr WORD PTR [esi]
  41493b:	inc    esi
  41493c:	sub    edx,0xffffffe6
  41493f:	add    ebp,DWORD PTR [edi]
  414941:	pop    ecx
  414942:	lods   eax,DWORD PTR ds:[esi]
  414943:	sbb    edi,edi
  414945:	pop    eax
  414946:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414947:	daa    
  414948:	call   DWORD PTR [esi-0x54]
  41494b:	sti    
  41494c:	push   eax
  41494d:	adc    DWORD PTR ds:0xad5852cc,ebp
  414953:	sbb    bh,bl
  414955:	pop    eax
  414956:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414957:	and    eax,0xcbac56df
  41495c:	inc    edi
  41495d:	and    DWORD PTR ds:0xad5832cc,ecx
  414963:	pop    ds
  414964:	jg     0x4149c1
  414966:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414967:	sbb    edi,DWORD PTR [edi+0x55]
  41496a:	lods   al,BYTE PTR ds:[esi]
  41496b:	xlat   BYTE PTR ds:[ebx]
  41496c:	pop    es
  41496d:	xor    ebp,ebp
  41496f:	retf   
  414970:	adc    dh,BYTE PTR [ebp-0x9]
  414973:	ss mov ah,0xa0
  414976:	sbb    BYTE PTR [edi+edx*1],dh
  414979:	pop    esi
  41497a:	cwde   
  41497b:	retf   
  41497c:	cli    
  41497d:	push   esp
  41497e:	and    eax,0x28a0a714
  414983:	sti    
  414984:	mov    ds:0x93faf1a0,eax
  414989:	mov    al,ds:0xc1e3
  41498e:	jno    0x414942
  414990:	call   0xecb43915
  414995:	fcmovnb st,st(0)
  414997:	cs sahf 
  414999:	retf   
  41499a:	test   al,0xa0
  41499c:	out    dx,eax
  41499d:	sub    bh,0x72
  4149a0:	cmc    
  4149a1:	retf   0xce39
  4149a4:	xchg   BYTE PTR [edx],dl
  4149a6:	stos   BYTE PTR es:[edi],al
  4149a7:	rcr    DWORD PTR [ebx+0xde60f4],cl
  4149ad:	pusha  
  4149ae:	in     eax,dx
  4149af:	loope  0x414934
  4149b1:	test   eax,0xacc6e1ff
  4149b6:	jne    0x4149a1
  4149b8:	push   ebp
  4149b9:	push   ecx
  4149ba:	cmp    BYTE PTR [eax],0xfd
  4149bd:	push   esi
  4149be:	mov    bl,0x65
  4149c0:	std    
  4149c1:	jmp    0xc03f22a5
  4149c6:	pop    esp
  4149c7:	jmp    0x9f00:0xa95b7d12
  4149ce:	je     0x4149c2
  4149d0:	scas   eax,DWORD PTR es:[edi]
  4149d1:	cs fs scas eax,DWORD PTR es:[edi]
  4149d4:	div    BYTE PTR [edx+0x6d]
  4149d7:	mov    ebx,DWORD PTR [esi-0x3e]
  4149da:	sbb    DWORD PTR [esp+eax*1],0xffffffe9
  4149de:	gs jo  0x4149e5
  4149e1:	push   cs
  4149e2:	sbb    eax,0x232512eb
  4149e7:	test   eax,0xce7efe00
  4149ec:	std    
  4149ed:	fdiv   QWORD PTR [eax+0xe940cd]
  4149f3:	add    ch,ah
  4149f5:	outs   dx,DWORD PTR ds:[esi]
  4149f6:	sbb    al,0xd1
  4149f8:	(bad)  
  4149f9:	sub    eax,0x6ff5defd
  4149fe:	sbb    cl,al
  414a00:	out    dx,eax
  414a01:	sub    eax,0x6fe5cefd
  414a06:	inc    esp
  414a07:	shl    DWORD PTR [edi+0x1ebefd2d],1
  414a0d:	div    BYTE PTR [ecx+edi*2+0x14c0eae5]
  414a14:	push   eax
  414a15:	cli    
  414a16:	dec    esi
  414a17:	aas    
  414a18:	hlt    
  414a19:	ins    BYTE PTR es:[edi],dx
  414a1a:	or     al,0x9e
  414a1c:	mov    edi,0x3329126c
  414a21:	push   edi
  414a22:	lock les ebp,FWORD PTR [esi+ebx*8]
  414a26:	std    
  414a27:	add    BYTE PTR [esi-0x403e3199],dl
  414a2d:	in     al,dx
  414a2e:	pop    es
  414a2f:	ror    DWORD PTR ds:0x86e17d27,0x13
  414a36:	add    BYTE PTR [eax],al
  414a38:	std    
  414a39:	cs mov ebp,0xc6e786e2
  414a3f:	shr    esi,0xe4
  414a42:	mov    ebp,0xbde78ee1
  414a47:	mov    DWORD PTR [ebx-0x2cfb95e0],ebx
  414a4d:	popf   
  414a4e:	cld    
  414a4f:	push   eax
  414a50:	and    DWORD PTR [esi+0x6244e808],ecx
  414a56:	sti    
  414a57:	inc    DWORD PTR [eax]
  414a59:	add    dl,bl
  414a5b:	sbb    al,0x74
  414a5d:	sbb    bl,cl
  414a5f:	push   cs
  414a60:	je     0x414a72
  414a62:	js     0x414a77
  414a64:	jno    0x414a72
  414a66:	and    DWORD PTR [esi+0x6240e808],ecx
  414a6c:	sti    
  414a6d:	dec    DWORD PTR [edx+0x5604741b]
  414a73:	loop   0x414a5c
  414a75:	add    dl,ah
  414a77:	sbb    ebx,DWORD PTR [esi-0x37]
  414a7a:	aam    0xea
  414a7c:	cld    
  414a7d:	push   esp
  414a7e:	jge    0x414a86
  414a80:	jge    0x414a6e
  414a82:	(bad)  
  414a83:	loopne 0x414a85
  414a85:	add    BYTE PTR ds:0x480c5969,dh
  414a8b:	lods   eax,DWORD PTR ds:[esi]
  414a8c:	xchg   DWORD PTR [ebp-0x22],edi
  414a8f:	mov    DWORD PTR [eax+ebp*2],ecx
  414a92:	(bad)  
  414a93:	mov    es,WORD PTR [eax+0x0]
  414a96:	cmp    DWORD PTR [edx],ecx
  414a98:	rol    BYTE PTR [ecx-0x3f7bea6f],0xd1
  414a9f:	addr16 sti 
  414aa1:	pop    es
  414aa2:	das    
  414aa3:	cmc    
  414aa4:	add    BYTE PTR [eax+0x6f],ch
  414aa7:	shr    bl,1
  414aa9:	call   DWORD PTR [esi]
  414aab:	icebp  
  414aac:	jne    0x414af1
  414aae:	ja     0x414a75
  414ab0:	fsub   st(2),st
  414ab2:	scas   eax,DWORD PTR es:[edi]
  414ab3:	jo     0x414a7c
  414ab5:	test   BYTE PTR [edi+0x8],ch
  414ab8:	jge    0x414a9f
  414aba:	xor    ch,dh
  414abc:	add    BYTE PTR [edx+0x0],ch
  414abf:	add    BYTE PTR [ebx],ch
  414ac1:	sbb    eax,0xbcea8b31
  414ac6:	xor    DWORD PTR [edi+0x41101f],esi
  414acc:	push   edi
  414acd:	ss gs std 
  414ad0:	pusha  
  414ad1:	add    ah,0xd
  414ad4:	mov    dl,0xc2
  414ad6:	(bad)  
  414ad7:	jmp    FWORD PTR [edi]
  414ad9:	jge    0x414b18
  414adb:	int    0xb7
  414add:	cmp    dh,BYTE PTR [ebx+ecx*4+0x4375c7c2]
  414ae4:	imul   ebx,ebp,0xffffffc3
  414ae7:	add    eax,0x7b75f52f
  414aec:	adc    dh,BYTE PTR [edx+0x3d]
  414aef:	rcl    BYTE PTR [edi],1
  414af1:	popf   
  414af2:	(bad)  
  414af3:	jmp    FWORD PTR [edi]
  414af5:	add    BYTE PTR [edi-0x70f7f5bd],cl
  414afb:	dec    ebx
  414afc:	or     BYTE PTR [edi-0x60c81f3f],dl
  414b02:	sti    
  414b03:	mov    esi,0x3c14828
  414b08:	repnz sbb al,cl
  414b0b:	std    
  414b0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b0d:	hlt    
  414b0e:	add    eax,DWORD PTR [eax]
  414b10:	das    
  414b11:	lahf   
  414b12:	or     edi,DWORD PTR [edi+0x5757828]
  414b18:	das    
  414b19:	cmc    
  414b1a:	jnp    0x414b25
  414b1c:	lods   al,BYTE PTR ds:[esi]
  414b1d:	fisttp QWORD PTR [esp+ebx*8]
  414b20:	das    
  414b21:	stos   DWORD PTR es:[edi],eax
  414b22:	sahf   
  414b23:	jbe    0x414b25
  414b25:	add    BYTE PTR [esi+esi*8+0x2d],ch
  414b29:	xor    al,0xa4
  414b2b:	nop
  414b2c:	jnp    0x414ba8
  414b2e:	and    al,0xfa
  414b30:	test   DWORD PTR [ebx+ebp*1],esi
  414b33:	push   ebx
  414b34:	and    al,0xd8
  414b36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b37:	adc    eax,0xf3d0b362
  414b3c:	(bad)  
  414b3d:	sub    BYTE PTR [eax-0x23],0xe7
  414b41:	enter  0xd32f,0x31
  414b45:	jl     0x414ba6
  414b47:	daa    
  414b48:	out    0xc8,eax
  414b4a:	das    
  414b4b:	fimul  WORD PTR [edx]
  414b4d:	mov    dl,0xa8
  414b4f:	std    
  414b50:	(bad)  
  414b51:	cld    
  414b52:	jo     0x414bc7
  414b54:	jecxz  0x414bcc
  414b56:	in     al,dx
  414b57:	std    
  414b58:	daa    
  414b59:	fisub  DWORD PTR [edi]
  414b5b:	sbb    eax,0xe6f8fb49
  414b60:	fwait
  414b61:	sti    
  414b62:	aaa    
  414b63:	adc    al,0x70
  414b65:	ss dec edi
  414b67:	cmc    
  414b68:	sbb    al,0x83
  414b6a:	xor    ah,dh
  414b6c:	(bad)
  414b71:	ss adc esp,esi
  414b74:	jno    0x414bb4
  414b76:	or     esp,DWORD PTR [edx-0x1]
  414b79:	add    ah,BYTE PTR [edx]
  414b7b:	pop    edx
  414b7c:	int    0x0
  414b7e:	das    
  414b7f:	fisubr WORD PTR [edi]
  414b81:	imul   DWORD PTR [ebp+0x2f03e6c0]
  414b87:	jbe    0x414bb0
  414b89:	dec    edi
  414b8a:	add    BYTE PTR [eax],al
  414b8c:	push   ss
  414b8d:	fidiv  WORD PTR [esi]
  414b8f:	jnp    0x414bf5
  414b91:	(bad)  
  414b92:	je     0x414bd5
  414b94:	loop   0x414b24
  414b96:	iret   
  414b97:	sti    
  414b98:	pop    eax
  414b99:	in     eax,0xff
  414b9b:	mov    ch,0xaf
  414b9d:	push   ds
  414b9e:	or     eax,0xdacb65
  414ba3:	jmp    0xea3eb554
  414ba8:	xor    eax,0xed7c0dd7
  414bad:	jecxz  0x414bff
  414baf:	loope  0x414bd9
  414bb1:	push   ds
  414bb2:	or     eax,0xdc7f6d
  414bb7:	jmp    0xcc322d1
  414bbc:	mov    ebx,esi
  414bbe:	mov    esp,DWORD PTR [ebx+ecx*1]
  414bc1:	mov    cs,WORD PTR [ebx+0x50e38cbc]
  414bc7:	in     eax,dx
  414bc8:	cmc    
  414bc9:	adc    eax,0x61782083
  414bce:	(bad)  
  414bd0:	sub    al,0xde
  414bd2:	std    
  414bd3:	mov    esp,0x7143585c
  414bd8:	jnp    0x414c4b
  414bda:	cld    
  414bdb:	ss push 0x9464d857
  414be1:	rol    DWORD PTR [esp+ebp*1+0x1efce541],cl
  414be8:	fdivp  st(5),st
  414bea:	cld    
  414beb:	cld    
  414bec:	loopne 0x414bbd
  414bee:	inc    eax
  414bef:	jmp    0x2b624bf4
  414bf4:	dec    ecx
  414bf5:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bf7:	out    0x65,al
  414bf9:	jb     0x414c67
  414bfb:	(bad)  
  414bfc:	data16 sub BYTE PTR [ebx],cl
  414bff:	(bad)  
  414c00:	data16 loop 0x414bf6
  414c03:	jnp    0x414b8c
  414c05:	sub    al,0x97
  414c07:	jl     0x414b92
  414c09:	sub    dh,ch
  414c0b:	shl    DWORD PTR [esi-0x40850bde],1
  414c11:	leave  
  414c12:	in     al,0x7a
  414c14:	or     DWORD PTR [eax],eax
  414c16:	xchg   edi,eax
  414c17:	add    BYTE PTR [ebp-0x3c9787bb],0x25
  414c1e:	(bad)  
  414c1f:	loopne 0x414c1c
  414c21:	add    BYTE PTR [ebp+0x2c],cl
  414c24:	mov    ebp,0xbde7c6e9
  414c29:	mov    ecx,DWORD PTR [ecx+0x4d10dd19]
  414c2f:	xor    al,0x1f
  414c31:	(bad)  
  414c32:	lea    esp,[esi]
  414c34:	mov    ebp,0xdd199ee8
  414c39:	or     BYTE PTR [ebp+0x56458519],bl
  414c3f:	xchg   DWORD PTR [eax],edx
  414c41:	lea    edx,[ebp-0x46]
  414c44:	push   eax
  414c45:	(bad)  
  414c46:	rol    DWORD PTR [eax+0x50],cl
  414c49:	call   0x3c979e
  414c4e:	pusha  
  414c4f:	sbb    DWORD PTR [ecx-0x5c],eax
  414c52:	dec    esi
  414c53:	cmp    BYTE PTR [ebp-0x4fffffbb],0xe8
  414c5a:	(bad)  
  414c5c:	xchg   ebx,eax
  414c5d:	dec    eax
  414c5e:	or     BYTE PTR [edx+0x7e],ch
  414c61:	gs inc ecx
  414c63:	pushf  
  414c64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c65:	sbb    esi,DWORD PTR [ecx+0x8]
  414c68:	push   ds
  414c69:	push   ss
  414c6a:	jnp    0x414c6b
  414c6c:	sbb    DWORD PTR [ebp-0x40],esp
  414c6f:	cmpnleps xmm1,xmm0
  414c73:	add    BYTE PTR [esi],dl
  414c75:	pop    edi
  414c76:	sti    
  414c77:	je     0x414c7b
  414c79:	mov    ch,0xfb
  414c7b:	jne    0x414ca3
  414c7d:	sbb    al,0x71
  414c7f:	or     BYTE PTR [esi],ch
  414c81:	(bad)  
  414c82:	jp     0x414c83
  414c84:	sbb    DWORD PTR [ebp-0x40],esp
  414c87:	setb   dl
  414c8a:	add    al,BYTE PTR [eax]
  414c8c:	push   es
  414c8d:	cmp    DWORD PTR [bx+si+0x2f],edx
  414c91:	jecxz  0x414cd3
  414c93:	add    BYTE PTR [edi+0x2f00c314],ah
  414c99:	pop    ebx
  414c9a:	ret    
  414c9b:	add    BYTE PTR [edi],ch
  414c9d:	cmc    
  414c9e:	ja     0x414c68
  414ca0:	jns    0x414c35
  414ca2:	jns    0x414ce7
  414ca4:	in     al,0x82
  414ca6:	jge    0x414c30
  414ca8:	sar    DWORD PTR [ebx+eax*8],0x6a
  414cac:	das    
  414cad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cae:	mov    esi,0x5af5d743
  414cb3:	xchg   edx,edi
  414cb5:	sub    eax,0x27f9d5c3
  414cba:	retf   
  414cbb:	mov    eax,DWORD PTR [eax]
  414cbd:	add    BYTE PTR [edx-0x6f023a93],dh
  414cc3:	ret    
  414cc4:	xor    al,0xfd
  414cc6:	pusha  
  414cc7:	js     0x414c89
  414cc9:	sbb    BYTE PTR [esi+0x287c902],dh
  414ccf:	xchg   ecx,eax
  414cd0:	jg     0x414d4d
  414cd2:	ja     0x414cc9
  414cd4:	repz test DWORD PTR [esi-0x2affff0b],eax
  414cdb:	hlt    
  414cdc:	pop    eax
  414cdd:	sub    al,0x2e
  414cdf:	cmc    
  414ce0:	add    BYTE PTR [ebx+0x3130fcea],cl
  414ce6:	outs   dx,DWORD PTR ds:[esi]
  414ce7:	popf   
  414ce8:	xchg   esi,eax
  414ce9:	jg     0x414d2b
  414ceb:	mov    esp,0xf438f87f
  414cf0:	jge    0x414cb0
  414cf2:	das    
  414cf3:	cmc    
  414cf4:	add    ch,bh
  414cf6:	inc    edx
  414cf7:	shr    ebp,0x3f
  414cfa:	das    
  414cfb:	sbb    dh,BYTE PTR ds:0xf3f52f25
  414d01:	and    BYTE PTR [esi-0x53ffff0f],0x71
  414d08:	in     eax,dx
  414d09:	(bad)  
  414d0a:	jl     0x414cea
  414d0c:	repnz pop ecx
  414d0e:	cli    
  414d0f:	loop   0x414d64
  414d11:	lock repz enter 0xf1b7,0x28
  414d17:	fisub  WORD PTR [edx+0x3e]
  414d1a:	xor    edx,DWORD PTR [edi-0x11]
  414d1d:	les    edi,FWORD PTR [edi-0x32]
  414d20:	jb     0x414d68
  414d22:	add    BYTE PTR [eax],al
  414d24:	xlat   BYTE PTR ds:[ebx]
  414d25:	pop    esi
  414d26:	dec    esp
  414d27:	hlt    
  414d28:	enter  0xae59,0x4f
  414d2c:	push   eax
  414d2d:	pop    edi
  414d2e:	or     al,0xdc
  414d30:	das    
  414d31:	ja     0x414cd1
  414d33:	cli    
  414d34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d35:	cwde   
  414d36:	cmp    DWORD PTR [eax-0xc],0xfffffff5
  414d3a:	pop    ebx
  414d3b:	push   fs
  414d3d:	js     0x414da9
  414d3f:	inc    ebp
  414d40:	sub    al,0xde
  414d42:	cmc    
  414d43:	cmp    BYTE PTR [ecx],cl
  414d45:	pop    edi
  414d46:	cmc    
  414d47:	cld    
  414d48:	mov    BYTE PTR [eax+0x23],ch
  414d4b:	sub    BYTE PTR cs:[eax-0x11],0x78
  414d50:	outs   dx,BYTE PTR ds:[esi]
  414d51:	cmc    
  414d52:	jge    0x414d20
  414d54:	jb     0x414d38
  414d56:	imul   ecx,ebx,0xe863d26a
  414d5c:	sub    eax,0x6f7ee7de
  414d61:	shl    BYTE PTR [ebx-0x10],cl
  414d64:	sub    eax,0x4780e7de
  414d69:	fdiv   QWORD PTR [eax+eiz*1+0x43f798b6]
  414d70:	neg    BYTE PTR [eax-0x1ce2b1e1]
  414d76:	mov    ds:0xdff1aecb,eax
  414d7b:	js     0x414d6f
  414d7d:	push   ebx
  414d7e:	jl     0x414d57
  414d80:	pop    es
  414d81:	dec    eax
  414d82:	dec    ebx
  414d83:	les    edx,FWORD PTR [edx]
  414d85:	idiv   bh
  414d87:	loopne 0x414d89
  414d89:	add    BYTE PTR [esi-0x27],ah
  414d8c:	push   esi
  414d8d:	add    DWORD PTR [edx+0x30],eax
  414d90:	std    
  414d91:	out    0xec,al
  414d93:	popf   
  414d94:	adc    BYTE PTR [edx+0x66],dh
  414d97:	into   
  414d98:	sub    DWORD PTR [ebx+ebx*4],0xa32439d9
  414d9f:	ins    BYTE PTR es:[edi],dx
  414da0:	xchg   esi,eax
  414da1:	push   0x6e
  414da3:	retf   0xee00
  414da6:	test   al,0xb7
  414da8:	std    
  414da9:	mov    dh,0xec
  414dab:	jecxz  0x414e1f
  414dad:	aad    0xed
  414daf:	int    0x28
  414db1:	clc    
  414db2:	ins    BYTE PTR es:[edi],dx
  414db3:	fsubrp st(7),st
  414db5:	cld    
  414db6:	in     eax,dx
  414db7:	jecxz  0x414db5
  414db9:	(bad)  
  414dba:	out    dx,al
  414dbb:	aad    0x68
  414dbd:	sub    DWORD PTR [edi+eax*8+0x0],esp
  414dc1:	adc    esi,DWORD PTR [edx]
  414dc3:	push   ebp
  414dc4:	inc    ebx
  414dc5:	jle    0x414dc2
  414dc7:	cmc    
  414dc8:	out    0xf4,al
  414dca:	ins    DWORD PTR es:[edi],dx
  414dcb:	jecxz  0x414d50
  414dcd:	test   eax,0xedbf5a1c
  414dd2:	sub    al,0xde
  414dd4:	or     eax,0x80e2e697
  414dd9:	inc    ecx
  414dda:	xor    edx,ebx
  414ddc:	test   ch,ch
  414dde:	sub    dh,bl
  414de0:	add    BYTE PTR [ecx+0x2484d2e4],dh
  414de6:	sub    esi,ebx
  414de8:	add    BYTE PTR [ecx-0x14d4a5e3],ah
  414dee:	add    BYTE PTR [eax],al
  414df0:	sub    al,0xde
  414df2:	dec    eax
  414df3:	div    BYTE PTR [eax+0x2ce8ff15]
  414df9:	xchg   esi,eax
  414dfa:	or     eax,0xde906d
  414dff:	jmp    0xc52178
  414e04:	jbe    0x414ddc
  414e06:	add    BYTE PTR [eax],al
  414e08:	mov    esi,0x161b739c
  414e0d:	mov    bl,0xff
  414e0f:	mov    ebx,cs
  414e11:	dec    esp
  414e12:	push   eax
  414e13:	call   0x3cebbe
  414e18:	mov    bl,BYTE PTR ds:0xd67e840b
  414e1e:	add    BYTE PTR [eax],al
  414e20:	outs   dx,BYTE PTR ds:[esi]
  414e21:	call   0x8d04:0xb2c61b73
  414e28:	or     edx,DWORD PTR [esi]
  414e2a:	push   eax
  414e2b:	call   0x3cec7e
  414e30:	dec    edx
  414e31:	sbb    eax,0xd626840b
  414e36:	add    BYTE PTR [eax],al
  414e38:	cmp    eax,0xd78bc48e
  414e3d:	cmc    
  414e3e:	cld    
  414e3f:	push   DWORD PTR [ecx-0x382e7824]
  414e45:	xor    dl,BYTE PTR [eax]
  414e47:	or     eax,esp
  414e49:	dec    edi
  414e4a:	int    0xc1
  414e4c:	mov    ah,0xcc
  414e4e:	jge    0x414e31
  414e50:	xchg   esi,eax
  414e51:	sbb    eax,DWORD PTR [eax]
  414e53:	add    BYTE PTR [eax],al
  414e55:	add    BYTE PTR [ebp+0x9],bh
  414e58:	mov    ebp,0xe2197ee8
  414e5d:	or     BYTE PTR [ebp+0x1a],cl
  414e60:	test   DWORD PTR [ebp+0xa],eax
  414e63:	popf   
  414e64:	or     eax,DWORD PTR [edi+edi*1-0x1ffff2a]
  414e6b:	xchg   esi,eax
  414e6c:	lods   al,BYTE PTR ds:[esi]
  414e6d:	inc    DWORD PTR [ecx]
  414e6f:	push   eax
  414e70:	lock test eax,edi
  414e73:	retf   
  414e74:	test   BYTE PTR [edx],bl
  414e76:	dec    edx
  414e77:	fadd   QWORD PTR [eax]
  414e79:	push   0x17a386
  414e7e:	das    
  414e7f:	enter  0xc438,0x79
  414e83:	(bad)  
  414e85:	jp     0x414e9f
  414e87:	fld    DWORD PTR [ebp+0xe7920c0]
  414e8d:	add    al,0x2f
  414e8f:	cmc    
  414e90:	lea    eax,[ebx+0x33]
  414e93:	jl     0x414eed
  414e95:	les    esp,FWORD PTR [ebp+ebp*8-0x1ea002aa]
  414e9c:	push   esi
  414e9d:	call   0xfe00a812
  414ea2:	(bad)  
  414ea3:	retf   0xfdc2
  414ea6:	fsubr  DWORD PTR [ebp+edi*1+0x8]
  414eaa:	inc    edi
  414eab:	mov    ch,0x37
  414ead:	sbb    DWORD PTR [edi],ebp
  414eaf:	fwait
  414eb0:	add    eax,0x54256a8b
  414eb5:	call   0xfe0108e8
  414eba:	add    BYTE PTR [eax],al
  414ebc:	stos   DWORD PTR es:[edi],eax
  414ebd:	xor    eax,0xf486840f
  414ec2:	add    BYTE PTR [eax],al
  414ec4:	or     DWORD PTR [esi],esi
  414ec6:	inc    ebp
  414ec7:	out    dx,eax
  414ec8:	daa    
  414ec9:	iret   
  414eca:	rol    DWORD PTR [ebx-0x64],0xed
  414ece:	sub    dl,BYTE PTR ds:0x82683c
  414ed4:	scas   eax,DWORD PTR es:[edi]
  414ed5:	cmc    
  414ed6:	add    ch,bh
  414ed8:	and    ah,ch
  414eda:	adc    eax,0xc47a2f40
  414edf:	data16 mov ah,0x32
  414ee2:	fimul  DWORD PTR ds:0x66143aba
  414ee8:	push   ss
  414ee9:	xor    dh,BYTE PTR [edx-0x73e8da8d]
  414eef:	inc    ebx
  414ef0:	psubd  mm0,QWORD PTR fs:[edx+0x3c]
  414ef5:	sub    DWORD PTR [esi],eax
  414ef7:	mov    esi,0x467de2e
  414efc:	das    
  414efd:	push   esp
  414efe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414eff:	(bad)  [ebp-0x71e870]
  414f05:	pop    ebp
  414f06:	or     BYTE PTR [ebx],al
  414f08:	scas   eax,DWORD PTR es:[edi]
  414f09:	sti    
  414f0a:	out    0xfd,eax
  414f0c:	out    0x69,al
  414f0e:	lds    eax,FWORD PTR [edi-0xb279610]
  414f14:	jmp    0x2a55ebbe
  414f19:	dec    edx
  414f1a:	test   al,0x4a
  414f1c:	scas   al,BYTE PTR es:[edi]
  414f1d:	cld    
  414f1e:	in     al,0x84
  414f20:	add    BYTE PTR [eax],al
  414f22:	test   al,0xdb
  414f24:	ret    0x1e10
  414f27:	adc    eax,0xcf3e4f0f
  414f2c:	pop    ebx
  414f2d:	ret    0x5b68
  414f30:	enter  0xae0f,0x1c
  414f34:	jmp    0x414f42
  414f36:	rcl    BYTE PTR [ebx+0x1c],1
  414f39:	mov    ah,0xa5
  414f3b:	or     eax,0x5e2ba267
  414f40:	mov    DWORD PTR [edi],eax
  414f42:	gs adc al,0x1b
  414f45:	jmp    0x155e:0x131314ac
  414f4c:	mov    edi,0x53cf3e4e
  414f51:	ret    0x5af0
  414f54:	mov    BYTE PTR [ebp-0x5320e352],bh
  414f5a:	sub    ch,BYTE PTR [ebx-0x351a04d0]
  414f60:	out    dx,al
  414f61:	xchg   edi,eax
  414f62:	test   al,0x94
  414f64:	push   0xffffffa2
  414f66:	pop    ebx
  414f67:	pop    edx
  414f68:	sub    BYTE PTR [ebx],dl
  414f6a:	es in  eax,dx
  414f6c:	jo     0x414fbc
  414f6e:	pop    edi
  414f6f:	pop    ebp
  414f70:	dec    eax
  414f71:	add    eax,0xf300dc13
  414f76:	je     0x414fe1
  414f78:	adc    dl,bh
  414f7a:	ins    BYTE PTR es:[edi],dx
  414f7b:	pop    ecx
  414f7c:	(bad)  
  414f7d:	neg    BYTE PTR [eax-0x3395b7e3]
  414f83:	mov    esi,0x2980
  414f88:	ins    BYTE PTR es:[edi],dx
  414f89:	out    0xf0,eax
  414f8b:	pop    ss
  414f8c:	jno    0x414f5c
  414f8e:	or     DWORD PTR [ebp+0x25],edi
  414f91:	dec    eax
  414f92:	jns    0x414ffc
  414f94:	(bad)  
  414f96:	or     cl,ch
  414f98:	sub    al,0x3b
  414f9a:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f9c:	mov    esp,0x46f074ee
  414fa1:	data16 sub BYTE PTR [edi-0x16ff19cd],0x81
  414fa9:	dec    eax
  414faa:	push   es
  414fab:	pop    esp
  414fac:	data16 into 
  414fae:	push   ecx
  414faf:	je     0x415017
  414fb1:	mov    dh,0x51
  414fb3:	rol    DWORD PTR [esi],1
  414fb5:	xchg   esp,edi
  414fb7:	mov    dh,0x30
  414fb9:	xchg   ebx,eax
  414fba:	inc    esi
  414fbb:	mov    edx,0x5e0c2e60
  414fc0:	data16 int 0x51
  414fc3:	jb     0x414fbb
  414fc5:	jmp    0xb4f73151
  414fca:	cld    
  414fcb:	cmp    DWORD PTR [ebx],edi
  414fcd:	lds    ecx,FWORD PTR [edi]
  414fcf:	test   al,dl
  414fd1:	fisttp DWORD PTR [eax+0x414634fc]
  414fd7:	(bad)  
  414fd8:	and    eax,0x9fe666de
  414fdd:	and    DWORD PTR [ebp+0x78bcc4b9],edx
  414fe3:	pop    esi
  414fe4:	test   al,0x62
  414fe6:	shl    esi,0xa8
  414fe9:	xchg   esp,eax
  414fea:	(bad)  
  414feb:	call   0x5e6d4ff0
  414ff0:	jle    0x414ff2
  414ff2:	repnz loope 0x415002
  414ff5:	xchg   ebp,eax
  414ff6:	push   ss
  414ff7:	in     eax,dx
  414ff8:	mov    dl,0xc0
  414ffa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ffb:	push   0xb1cd9740
  415000:	mov    cl,al
  415002:	pop    es
  415003:	mov    edx,DWORD PTR [ecx]
  415005:	xor    DWORD PTR [edx+eiz*8],0xe816ff00
  41500c:	retf   
  41500d:	mov    ecx,DWORD PTR [esi-0x5d]
  415010:	fcom   QWORD PTR [eax]
  415012:	jecxz  0x414ff4
  415014:	std    
  415015:	add    BYTE PTR [esi],dl
  415017:	call   0xed14dbe4
  41501c:	mov    ebx,0xe7a20ee1
  415021:	or     ch,bh
  415023:	mov    cl,0x8a
  415025:	or     BYTE PTR [ecx],cl
  415027:	xor    DWORD PTR ds:0xfe9cbfe9,edx
  41502d:	dec    DWORD PTR [ebp+0x1e]
  415030:	or     DWORD PTR [eax+0x6],ebp
  415033:	adc    eax,0xeb5c001a
  415038:	xchg   DWORD PTR [ebp-0x76],eax
  41503b:	xor    cl,ch
  41503d:	test   ebp,edi
  41503f:	pushf  
  415040:	inc    BYTE PTR [esi+eax*4-0x6ba27b15]
  415047:	loopne 0x415049
  415049:	data16 xlat BYTE PTR ds:[ebx]
  41504b:	and    eax,0xa33008c8
  415050:	inc    eax
  415051:	iret   
  415052:	add    BYTE PTR [eax],al
  415054:	sahf   
  415055:	add    bh,BYTE PTR [ebp+eax*2-0x3e9d1759]
  41505c:	push   ebx
  41505d:	mov    cl,0x9
  41505f:	or     BYTE PTR [ebx-0xcf0fe54],0xa0
  415066:	xor    cl,cl
  415068:	inc    ebp
  415069:	popf   
  41506a:	mov    DWORD PTR [ebp+0x2f],eax
  41506d:	add    edi,ebp
  41506f:	dec    edx
  415070:	push   edi
  415071:	mov    ah,0x1a
  415073:	mov    edx,ebp
  415075:	xor    bh,BYTE PTR [edi-0x40]
  415078:	xor    BYTE PTR [ebp-0x66beb803],ah
  41507e:	or     DWORD PTR [esi-0xa],esp
  415081:	mov    esi,0x47e80734
  415086:	rol    BYTE PTR [edi],0x64
  415089:	jp     0x415043
  41508b:	jb     0x4150a0
  41508d:	mov    cl,0x41
  41508f:	clc    
  415090:	mov    ds:0x1743bbce,al
  415095:	push   ecx
  415096:	push   ecx
  415097:	clc    
  415098:	xchg   esp,eax
  415099:	push   cs
  41509a:	or     eax,0xa7e17a8b
  41509f:	xchg   edx,eax
  4150a0:	(bad)  
  4150a1:	int3   
  4150a2:	mov    esi,0x84d4ef84
  4150a7:	(bad)  
  4150a8:	lds    eax,FWORD PTR cs:[eax]
  4150ab:	imul   esp,eax,0xcb7b01be
  4150b1:	pop    ds
  4150b2:	or     BYTE PTR [ebx+0x5555916a],cl
  4150b8:	add    BYTE PTR [eax],al
  4150ba:	xlat   BYTE PTR ds:[ebx]
  4150bb:	adc    esp,DWORD PTR [edi-0x3]
  4150be:	rcr    BYTE PTR [esi-0x73470413],0x2d
  4150c5:	inc    eax
  4150c6:	cmp    al,ah
  4150c8:	add    al,0x6a
  4150ca:	cs jl  0x415101
  4150cd:	or     BYTE PTR [edi-0x6702c5b5],dl
  4150d3:	inc    ecx
  4150d4:	lds    ecx,FWORD PTR ds:0x75ab
  4150da:	das    
  4150db:	push   eax
  4150dc:	cmp    al,0x8
  4150de:	pop    ss
  4150df:	add    eax,0xdf2f1936
  4150e4:	dec    BYTE PTR [edx+0x544dddea]
  4150ea:	push   edi
  4150eb:	mov    ecx,0x6262bce0
  4150f0:	sub    cl,BYTE PTR ds:0x3e991b3
  4150f6:	das    
  4150f7:	jmp    0x415173
  4150f9:	dec    edi
  4150fa:	push   ebx
  4150fb:	pop    edi
  4150fc:	(bad)  
  4150fd:	dec    edi
  4150fe:	das    
  4150ff:	addr16 sub edi,esp
  415102:	cmp    ebx,esi
  415104:	jmp    0xf2ffc10c
  415109:	ret    0xe610
  41510c:	out    dx,al
  41510d:	ret    0x6589
  415110:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415111:	dec    ebx
  415112:	xchg   ecx,eax
  415113:	popa   
  415114:	sub    cl,BYTE PTR ds:0x3ea6bab
  41511a:	das    
  41511b:	jmp    0x41514f
  41511d:	mov    esp,0xc2c00000
  415122:	call   0x5f63cfb5
  415127:	int    0x7
  415129:	jmp    0x622c0dbe
  41512e:	stos   BYTE PTR es:[edi],al
  41512f:	or     al,0xab
  415131:	push   esp
  415132:	jmp    0x2a87803a
  415137:	xor    eax,0xbd1ade36
  41513c:	add    DWORD PTR [edi+0x3d],esp
  41513f:	or     al,0xd7
  415141:	xor    BYTE PTR fs:[ebp+0xcaa61ba],bh
  415148:	stos   DWORD PTR es:[edi],eax
  415149:	cmp    al,0xe9
  41514b:	add    ebp,DWORD PTR [edi]
  41514d:	pop    edi
  41514e:	add    eax,0xaa0f2f14
  415153:	jns    0x415184
  415155:	fucomi st,st(2)
  415157:	add    ecx,DWORD PTR [ecx]
  415159:	pop    ss
  41515a:	daa    
  41515b:	dec    esp
  41515c:	(bad)  
  41515d:	das    
  41515e:	outs   dx,DWORD PTR ds:[esi]
  41515f:	add    eax,0x24019332
  415164:	and    ebx,DWORD PTR [ebx+0x26a5ebe2]
  41516a:	jmp    0x2a5c659
  41516f:	jb     0x41510d
  415171:	call   0x5320:0xd5a7f9e3
  415178:	daa    
  415179:	ror    DWORD PTR [edi+edi*2],1
  41517c:	add    eax,0x3447c1dd
  415181:	fwait
  415182:	jmp    0x27415268
  415187:	shl    DWORD PTR [eax],1
  415189:	sub    esp,DWORD PTR [edi]
  41518b:	into   
  41518c:	mov    bl,al
  41518e:	mov    bh,0x1f
  415190:	inc    ebp
  415191:	jb     0x4151ec
  415193:	(bad)  
  415194:	addr16 in al,dx
  415196:	jne    0x4151a9
  415198:	or     eax,0x89df59e7
  41519d:	mov    dl,0x78
  41519f:	fild   DWORD PTR [esi-0x27]
  4151a2:	dec    edx
  4151a3:	addr16 dec esi
  4151a5:	fst    DWORD PTR [edx+0x17]
  4151a8:	dec    eax
  4151a9:	mov    eax,ds:0xece8933e
  4151ae:	push   0xffffffde
  4151b0:	sti    
  4151b1:	jmp    0x2581b8e2
  4151b6:	test   al,0xa6
  4151b8:	ret    0x3bc8
  4151bb:	addr16 icebp 
  4151bd:	or     al,BYTE PTR [ecx+0x7b72cae7]
  4151c3:	cdq    
  4151c4:	jmp    0x4151a7
  4151c6:	ror    edi,1
  4151c8:	or     al,0x77
  4151ca:	pop    eax
  4151cb:	sub    eax,edx
  4151cd:	mov    BYTE PTR [ebx],bh
  4151cf:	out    0xca,eax
  4151d1:	bnd jb 0x415235
  4151d4:	dec    eax
  4151d5:	cmp    DWORD PTR [eax-0x79ebf92a],esi
  4151db:	pop    esi
  4151dc:	js     0x4151de
  4151de:	xchg   edx,eax
  4151df:	fisttp QWORD PTR ds:0xfe989385
  4151e5:	jmp    FWORD PTR [esi]
  4151e7:	fiadd  WORD PTR [eax+eax*1]
  4151ea:	add    BYTE PTR [eax],al
  4151ec:	xchg   BYTE PTR [ebx],cl
  4151ee:	or     edi,edi
  4151f0:	dec    ebx
  4151f1:	retf   0x43d6
  4151f4:	push   esi
  4151f5:	xchg   esp,eax
  4151f6:	adc    BYTE PTR [esp+edx*2+0x1d],ch
  4151fa:	add    DWORD PTR [ecx-0x3f800e7b],ecx
  415200:	inc    ecx
  415201:	pop    esi
  415202:	out    dx,al
  415203:	cli    
  415204:	add    DWORD PTR [ebp-0x22b9561c],edx
  41520a:	add    bh,bh
  41520c:	jne    0x4151ff
  41520e:	call   0xfed6d102
  415213:	xor    DWORD PTR [ebp+0x5fe900f0],0xffffff98
  41521a:	(bad)  
  41521b:	jmp    FWORD PTR [esi+0x161b761c]
  415221:	or     eax,DWORD PTR [edx]
  415223:	(bad)  
  415224:	jnp    0x41520b
  415226:	call   0xfed5ce62
  41522b:	test   BYTE PTR [esi-0x1b],al
  41522e:	test   BYTE PTR [ecx-0x74ff232a],al
  415234:	sub    edx,0x68
  415237:	inc    eax
  415238:	jns    0x415233
  41523a:	add    BYTE PTR [edx-0x2a],ch
  41523d:	gs inc eax
  41523f:	mov    ah,0x26
  415241:	mov    cl,BYTE PTR [ebx-0x7a6c7e87]
  415247:	sar    dl,0x7
  41524a:	cmp    DWORD PTR [ebp+0x3a],0xc70bd
  415251:	add    BYTE PTR [esi],dl
  415253:	push   ss
  415254:	mov    ch,0x10
  415256:	cmp    bl,ah
  415258:	cmp    BYTE PTR [ebp+0x2f],0x3b
  41525c:	or     BYTE PTR [ebx-0x9],dh
  41525f:	inc    esi
  415260:	cmp    DWORD PTR [ebp+0x6656db2f],esi
  415266:	outs   dx,BYTE PTR ds:[esi]
  415267:	add    DWORD PTR [ebp+0x8],edi
  41526a:	adc    DWORD PTR [esi-0x1ed845bf],eax
  415270:	lds    eax,FWORD PTR [ebx-0x55]
  415273:	into   
  415274:	cmp    BYTE PTR [ebx-0x67],0xc6
  415278:	adc    BYTE PTR cs:[eax],ch
  41527b:	pop    edx
  41527c:	ror    BYTE PTR [eax+0x438970ea],0x83
  415283:	jbe    0x41520e
  415285:	inc    ecx
  415286:	(bad)  
  415287:	jbe    0x41524b
  415289:	inc    ebx
  41528a:	add    ch,0xa8
  41528d:	mov    al,0x87
  41528f:	pop    es
  415290:	mov    bh,0x8a
  415292:	jb     0x4152cd
  415294:	shr    al,0x2c
  415297:	dec    ebp
  415298:	inc    ebx
  415299:	aas    
  41529a:	push   es
  41529b:	(bad)  
  41529c:	mov    esi,0x394510fd
  4152a1:	adc    al,0x2f
  4152a3:	pop    ecx
  4152a4:	push   ss
  4152a5:	std    
  4152a6:	jp     0x415259
  4152a8:	mov    bh,0x13
  4152aa:	inc    edi
  4152ab:	mov    dh,0x40
  4152ad:	add    BYTE PTR [ecx+eax*8],al
  4152b0:	cs add bh,dl
  4152b3:	(bad)  
  4152b5:	std    
  4152b6:	add    BYTE PTR [eax],al
  4152b8:	loopne 0x415306
  4152ba:	mov    dh,0xe8
  4152bc:	jns    0x415276
  4152be:	mov    edx,0xa932d0fd
  4152c3:	call   0xfdfbbfd0
  4152c8:	aam    0xb1
  4152ca:	(bad)  
  4152cb:	icebp  
  4152cc:	mov    DWORD PTR [edx],0x9cb0fdb2
  4152d2:	push   cs
  4152d3:	std    
  4152d4:	and    bl,dh
  4152d6:	xchg   ecx,eax
  4152d7:	mov    ecx,0x3591e61c
  4152dc:	mov    ds:0xf15993d7,al
  4152e1:	xor    ah,BYTE PTR [ecx+0x1bde1fc6]
  4152e7:	lea    edi,[edi+0x61]
  4152ea:	je     0x41531c
  4152ec:	call   0x6fc13f54
  4152f1:	push   edx
  4152f2:	pop    ds
  4152f3:	cmc    
  4152f4:	jle    0x415310
  4152f6:	adc    eax,0xe8442c2f
  4152fb:	pop    ebp
  4152fc:	inc    esi
  4152fd:	loop   0x415314
  4152ff:	in     eax,dx
  415300:	fstp   st(4)
  415302:	mov    ds:0x2a0c398d,eax
  415307:	test   BYTE PTR [eax],bh
  415309:	push   cs
  41530a:	mov    esi,0x315dde10
  41530f:	sti    
  415310:	mov    bl,0xed
  415312:	jbe    0x415322
  415314:	and    ebx,eax
  415316:	call   0xa44fa6dd
  41531b:	lea    eax,[eax]
  41531d:	add    BYTE PTR [ecx],ch
  41531f:	pop    esi
  415320:	adc    esp,esi
  415322:	xchg   ebp,eax
  415323:	ret    
  415324:	scas   eax,DWORD PTR es:[edi]
  415325:	jg     0x415317
  415327:	push   ecx
  415328:	out    0x84,eax
  41532a:	cmc    
  41532b:	fsub   st(2),st
  41532d:	jno    0x41531e
  41532f:	iret   
  415330:	sub    BYTE PTR [esi],al
  415332:	jnp    0x415314
  415334:	add    bl,0xea
  415337:	fucomp st(1)
  415339:	add    esi,DWORD PTR [edi+0x79c56ede]
  41533f:	fwait
  415340:	inc    eax
  415341:	or     al,0x77
  415343:	mov    al,ds:0x9b6903e3
  415348:	sbb    eax,0xce5cd38d
  41534d:	add    ebp,DWORD PTR ds:0x5be900de
  415353:	xor    BYTE PTR [ebx+eax*2+0x31],dl
  415357:	inc    esi
  415358:	icebp  
  415359:	push   edi
  41535a:	mov    ebx,0xc4a18860
  41535f:	mov    eax,0xcd796b1
  415364:	fsub   DWORD PTR [eax-0x11]
  415367:	in     eax,0x37
  415369:	stos   BYTE PTR es:[edi],al
  41536a:	aaa    
  41536b:	bound  eax,QWORD PTR [ebx]
  41536d:	call   0x3ccf319e
  415372:	sub    al,0xd8
  415374:	cld    
  415375:	outs   dx,BYTE PTR ds:[esi]
  415376:	xchg   esp,eax
  415377:	xchg   BYTE PTR [esi],ch
  415379:	call   0x2f87b8aa
  41537e:	mov    bl,0x22
  415380:	std    
  415381:	push   esi
  415382:	add    BYTE PTR [eax],al
  415384:	sub    esi,ebx
  415386:	add    BYTE PTR [ecx+0x2c],ch
  415389:	xor    BYTE PTR cs:[ecx],ch
  41538c:	inc    esp
  41538d:	xor    ecx,DWORD PTR [ecx]
  41538f:	out    dx,al
  415390:	test   eax,0x2b29809d
  415395:	cs addr16 call 0xe94231f0
  41539c:	in     al,dx
  41539d:	imul   eax,DWORD PTR [ecx+edi*8+0x7c],0xc4154669
  4153a5:	pop    ecx
  4153a6:	pushf  
  4153a7:	push   cs
  4153a8:	(bad)  
  4153a9:	pop    edx
  4153aa:	shl    esi,0x80
  4153ad:	test   BYTE PTR [ecx],al
  4153af:	jmp    0xf587bce0
  4153b4:	pop    ebp
  4153b5:	imul   esi,DWORD PTR [esi-0x7],0xe69c9d95
  4153bc:	cwde   
  4153bd:	pop    edx
  4153be:	shr    esi,0x58
  4153c1:	js     0x4153c4
  4153c3:	jmp    0xd59f60f4
  4153c8:	sbb    ch,bl
  4153ca:	add    DWORD PTR [eax],0x18a6b
  4153d0:	(bad)  
  4153d1:	icebp  
  4153d2:	outs   dx,BYTE PTR ds:[esi]
  4153d3:	aaa    
  4153d4:	adc    eax,0x538d5231
  4153d9:	xchg   esi,eax
  4153da:	jmp    0xfece49f6
  4153df:	test   dh,al
  4153e1:	push   cs
  4153e2:	or     bh,bh
  4153e4:	xor    edx,DWORD PTR [esi+0x15fe]
  4153ea:	dec    esi
  4153eb:	lock inc eax
  4153ed:	add    BYTE PTR [ebx],dl
  4153ef:	call   0xe8fd:0x1f0b1b70
  4153f6:	pop    edx
  4153f7:	ins    BYTE PTR es:[edi],dx
  4153f8:	(bad)  
  4153f9:	call   FWORD PTR [edi]
  4153fb:	jl     0x4153f9
  4153fd:	call   DWORD PTR [esi+0x66]
  415400:	add    BYTE PTR [eax],0xf8
  415403:	mov    esi,?
  415405:	mov    BYTE PTR [esi+0x21],bl
  415408:	inc    esp
  415409:	jne    0x4153e7
  41540b:	mov    BYTE PTR [ebx-0x75],ch
  41540e:	xchg   ebx,eax
  41540f:	(bad)  
  415410:	(bad)  
  415411:	jne    0x4153ef
  415413:	pusha  
  415414:	dec    eax
  415415:	cld    
  415416:	stc    
  415417:	sub    ecx,ebp
  415419:	fild   WORD PTR [esi+0x553b00da]
  41541f:	nop    DWORD PTR [ebx+0x3e]
  415423:	aaa    
  415424:	add    DWORD PTR [eax],eax
  415426:	push   es
  415427:	inc    ax
  415429:	cld    
  41542a:	cs jne 0x4153c8
  41542d:	jmp    FWORD PTR [ecx]
  41542f:	push   ebx
  415430:	jmp    0x415433
  415432:	push   es
  415433:	loope  0x4153bc
  415435:	test   DWORD PTR [esi],eax
  415437:	mov    edi,esi
  415439:	dec    DWORD PTR [esi-0xe]
  41543c:	inc    eax
  41543d:	dec    ecx
  41543e:	sbb    DWORD PTR [eax+0x145f39ea],0xd
  415445:	lea    ebp,[edi]
  415447:	add    bh,BYTE PTR [ecx-0x4cbb0918]
  41544d:	std    
  41544e:	add    BYTE PTR [eax],al
  415450:	xchg   BYTE PTR [ebp+eax*1-0x7ebdd100],ch
  415457:	add    BYTE PTR [ecx+0x4788b38b],dh
  41545d:	pop    es
  41545e:	dec    esi
  41545f:	jae    0x415406
  415461:	ss add eax,0x414234e9
  415467:	cld    
  415468:	xchg   DWORD PTR [edx],ebx
  41546a:	xchg   esi,eax
  41546b:	std    
  41546c:	mov    BYTE PTR ds:0xc680ffa6,ch
  415472:	mov    DWORD PTR [ebx-0x24caad1],eax
  415478:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415479:	scas   al,BYTE PTR es:[edi]
  41547a:	inc    eax
  41547b:	inc    edi
  41547c:	loop   0x4154ce
  41547e:	repnz mov edi,0xc7579d00
  415484:	ins    DWORD PTR es:[edi],dx
  415485:	mov    edx,0x1aa45300
  41548a:	test   esp,ebp
  41548c:	inc    ebx
  41548d:	lds    eax,FWORD PTR [eax]
  41548f:	add    ah,bl
  415491:	xlat   BYTE PTR ds:[ebx]
  415492:	xlat   BYTE PTR ds:[ebx]
  415493:	push   esi
  415494:	div    BYTE PTR [ebx+0x4]
  415497:	je     0x41546f
  415499:	into   
  41549a:	pop    ecx
  41549b:	or     BYTE PTR [edx+0x3fb389cc],ah
  4154a1:	sti    
  4154a2:	mov    dl,0xfd
  4154a4:	pop    es
  4154a5:	push   ecx
  4154a6:	in     al,0xfe
  4154a8:	adc    BYTE PTR [edi-0x457f25a7],ch
  4154ae:	std    
  4154af:	pop    edx
  4154b0:	fst    DWORD PTR [ebx+0x15]
  4154b3:	mov    DWORD PTR [eax],eax
  4154b5:	add    BYTE PTR [eax-0x3f],bl
  4154b8:	mov    DWORD PTR [ebx-0x27],eax
  4154bb:	jne    0x41550d
  4154bd:	push   eax
  4154be:	jg     0x41549d
  4154c0:	data16 lahf 
  4154c2:	loopne 0x4154a2
  4154c4:	loop   0x4154b7
  4154c6:	not    DWORD PTR [ebp-0x21d0fc34]
  4154cc:	fs jg  0x4154ee
  4154cf:	aam    0xcb
  4154d1:	mov    ch,0xb7
  4154d3:	imul   BYTE PTR [ecx]
  4154d5:	dec    ebx
  4154d6:	cmp    al,0xd8
  4154d8:	outs   dx,DWORD PTR ds:[esi]
  4154d9:	sub    eax,0x30b71723
  4154de:	sub    al,0xc6
  4154e0:	add    eax,DWORD PTR [edi+ebp*1]
  4154e3:	fidiv  WORD PTR [eax+0x55]
  4154e6:	sub    edx,DWORD PTR [esi]
  4154e8:	cmp    eax,0x64e51b0c
  4154ed:	cmp    eax,0xe2822e1f
  4154f2:	into   
  4154f3:	rol    DWORD PTR [ebx-0x411a0d77],cl
  4154f9:	sar    bl,0xe4
  4154fc:	sbb    DWORD PTR [ecx+esi*8-0x57fc16fc],ebp
  415503:	xor    esi,edx
  415505:	push   ebp
  415506:	mul    BYTE PTR [eax+ebp*1-0x1398d100]
  41550d:	add    BYTE PTR [edi-0x2d],0xd6
  415511:	or     BYTE PTR [esi+ebx*4-0x2d170342],ch
  415518:	aad    0xe7
  41551a:	add    BYTE PTR [eax],al
  41551c:	push   ds
  41551d:	push   ds
  41551e:	jmp    0x2297:0x32c5f188
  415525:	sar    DWORD PTR [ebx+ebp*4-0x4ae486f5],cl
  41552c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41552d:	fwait
  41552e:	daa    
  41552f:	dec    edi
  415530:	mov    dh,0xc1
  415532:	addr16 sbb eax,0x1d66de37
  415538:	sub    ebx,esi
  41553a:	push   0xe017a8
  41553f:	jmp    0x5c948270
  415544:	push   eax
  415545:	enter  0xe6fe,0xa3
  415549:	pop    sp
  41554b:	stc    
  41554c:	test   BYTE PTR [edx-0x20d317d8],bh
  415552:	scas   al,BYTE PTR es:[edi]
  415553:	call   0xdda83384
  415558:	pop    esp
  415559:	dec    eax
  41555a:	add    DWORD PTR [ecx+eax*1-0x4a],ebp
  41555e:	and    BYTE PTR [ecx+0x630cc5e3],0xdb
  415565:	rol    BYTE PTR [esi-0x78169d57],1
  41556b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41556c:	cld    
  41556d:	inc    ebp
  41556e:	cdq    
  41556f:	mov    cl,0xef
  415571:	fisttp QWORD PTR [edi-0x7f]
  415574:	rcl    DWORD PTR [ecx-0x4],0x86
  415578:	stc    
  415579:	popf   
  41557a:	or     al,0x54
  41557c:	ins    BYTE PTR es:[edi],dx
  41557d:	pop    ecx
  41557e:	sar    esp,0x0
  415581:	add    BYTE PTR [ecx+0xd],ch
  415584:	rol    DWORD PTR [edi],0xb4
  415587:	fdivr  QWORD PTR [ecx+0xde2d57]
  41558d:	ins    BYTE PTR es:[edi],dx
  41558e:	rol    edi,1
  415590:	(bad)  
  415591:	push   esi
  415592:	sbb    DWORD PTR [ebx+0x1aece901],0x76
  415599:	inc    eax
  41559a:	loop   0x415600
  41559c:	les    esp,FWORD PTR [edx+0x62569c65]
  4155a2:	rcr    BYTE PTR [edi-0x1b],1
  4155a5:	xor    DWORD PTR [ebp+0x2ceb01c2],ebp
  4155ab:	fiadd  WORD PTR [edi-0x35f0db5c]
  4155b1:	mov    edi,0xc54d597b
  4155b6:	sub    BYTE PTR [edi],dl
  4155b8:	ret    0x7a00
  4155bb:	fild   WORD PTR [ebx-0x3d9968f8]
  4155c1:	call   0x3fde50
  4155c6:	dec    edx
  4155c7:	popf   
  4155c8:	push   cs
  4155c9:	test   BYTE PTR [ecx+0x430000da],dh
  4155cf:	push   ss
  4155d0:	and    eax,0x25269818
  4155d5:	adc    dh,dl
  4155d7:	jne    0x415635
  4155d9:	sub    eax,edi
  4155db:	fisttp QWORD PTR [ecx+0x4d75c273]
  4155e1:	nop
  4155e2:	xchg   esi,eax
  4155e3:	fld    QWORD PTR [eax+eax*8+0x75a0000]
  4155ea:	mov    bh,BYTE PTR [ebx-0x5e]
  4155ed:	pop    esi
  4155ee:	test   DWORD PTR [esi+edi*8],esp
  4155f1:	fld    DWORD PTR [eax]
  4155f3:	add    BYTE PTR [esi+0x5f],al
  4155f6:	inc    ebp
  4155f7:	and    al,0x86
  4155f9:	sub    eax,0xd9d6a8e9
  4155fe:	add    BYTE PTR [esi+eax*8+0x6a8b4d16],al
  415605:	mov    ecx,0xb9528d08
  41560a:	adc    BYTE PTR [ecx-0x17ef4686],cl
  415610:	inc    ebx
  415611:	loopne 0x41560e
  415613:	(bad)  
  415614:	ficomp DWORD PTR [ecx-0x6c34e790]
  41561a:	jne    0x415629
  41561c:	icebp  
  41561d:	shl    esp,cl
  41561f:	sti    
  415620:	stos   BYTE PTR es:[edi],al
  415621:	(bad)  
  415622:	(bad)  
  415623:	push   esi
  415624:	outs   dx,BYTE PTR ds:[esi]
  415625:	xchg   edi,eax
  415626:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415627:	call   DWORD PTR [ecx+0x59]
  41562a:	gs and al,0x22
  41562d:	fucomp st(1)
  41562f:	and    al,0x9d
  415631:	daa    
  415632:	or     DWORD PTR [ebp+0x839072f],eax
  415638:	mov    ah,0x7b
  41563a:	cld    
  41563b:	mov    BYTE PTR [esi-0x51],ah
  41563e:	jge    0x415648
  415640:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415641:	cmp    esp,0xffffff88
  415644:	ja     0x415605
  415646:	jge    0x415651
  415648:	mov    ah,0x86
  41564a:	cld    
  41564b:	xchg   BYTE PTR [eax],al
  41564d:	add    BYTE PTR [ebx+eax*8-0x65],ch
  415651:	add    ebp,ecx
  415653:	cli    
  415654:	call   0x34e98468
  415659:	and    al,0x1f
  41565b:	cmp    al,0xab
  41565d:	call   0xfdf0ef5e
  415662:	jbe    0x415604
  415664:	add    eax,0x443a2f00
  415669:	and    al,0x47
  41566b:	jns    0x41566d
  41566d:	add    bh,ch
  41566f:	or     eax,0xfaa4f73a
  415674:	call   0x7c4a3e84
  415679:	jecxz  0x41565d
  41567b:	test   BYTE PTR [eax+eax*1],al
  41567e:	loop   0x4156cb
  415680:	pushf  
  415681:	or     DWORD PTR [ebx+0x2bec835e],0x575556f4
  41568b:	sub    eax,0x9658fd2f
  415690:	cwde   
  415691:	aad    0x63
  415693:	lds    eax,FWORD PTR [eax]
  415695:	mov    DWORD PTR [edi+0x41],esp
  415698:	retf   
  415699:	or     eax,0x5e6ab
  41569e:	das    
  41569f:	dec    edx
  4156a0:	sub    al,0x24
  4156a2:	pop    ds
  4156a3:	dec    esi
  4156a4:	dec    esp
  4156a5:	and    al,0x3f
  4156a7:	sbb    eax,0xc52e1a28
  4156ac:	test   al,al
  4156ae:	sub    dh,bl
  4156b0:	ins    DWORD PTR es:[edi],dx
  4156b1:	mov    cl,0x0
  4156b3:	add    BYTE PTR [edi],ch
  4156b5:	fsubp  st(1),st
  4156b7:	add    BYTE PTR [ebx-0x68643206],0xf3
  4156be:	call   0x6f3edbc6
  4156c3:	leave  
  4156c4:	pop    edi
  4156c5:	inc    esp
  4156c6:	xchg   edx,eax
  4156c7:	push   esi
  4156c8:	xlat   BYTE PTR ds:[ebx]
  4156c9:	cdq    
  4156ca:	and    al,BYTE PTR [edi+ebp*1]
  4156cd:	pop    edx
  4156ce:	sub    al,BYTE PTR [edx]
  4156d0:	mov    bl,0xbe
  4156d2:	jmp    0xd754:0xa3632f03
  4156d9:	mov    ds:0x5a2f02f0,al
  4156de:	stos   BYTE PTR es:[edi],al
  4156df:	add    DWORD PTR [ebx+0x2f03eaae],esi
  4156e5:	popa   
  4156e6:	ss call 0xfb51d28
  4156ec:	mov    al,ds:0xa7ff40cf
  4156f1:	cwde   
  4156f2:	cmp    bl,BYTE PTR [esi]
  4156f4:	add    al,0x2b
  4156f6:	xchg   edx,eax
  4156f7:	cdq    
  4156f8:	ja     0x4156d7
  4156fa:	jmp    0x6620c686
  4156ff:	jbe    0x415730
  415701:	fsubp  st(1),st
  415703:	jle    0x4156f0
  415705:	stc    
  415706:	fst    DWORD PTR [ebx+0x57]
  415709:	xchg   edx,ecx
  41570b:	add    ch,BYTE PTR [edi]
  41570d:	arpl   WORD PTR [edx-0x79],di
  415710:	popa   
  415711:	dec    edx
  415712:	or     BYTE PTR [ecx+0x59f9f9db],dh
  415718:	add    BYTE PTR [eax],al
  41571a:	aad    0x3e
  41571c:	mov    bh,0x9b
  41571e:	mov    ebp,0xe103e9a5
  415723:	gs scas al,BYTE PTR es:[edi]
  415725:	out    0x1f,eax
  415727:	mov    BYTE PTR [eax+0x65],0x2a
  41572b:	iret   
  41572c:	add    DWORD PTR [ecx+0x5f],ebp
  41572f:	cli    
  415730:	or     ebp,ecx
  415732:	das    
  415733:	pop    edx
  415734:	sub    ecx,0x9c80de2c
  41573a:	add    al,0xcf
  41573c:	jo     0x4156dd
  41573e:	sbb    DWORD PTR [edx],0xc65cf925
  415744:	push   ss
  415745:	out    0x2d,eax
  415747:	fiadd  WORD PTR [edi+0x75c7b1f9]
  41574d:	xlat   BYTE PTR ds:[ebx]
  41574e:	lahf   
  41574f:	dec    ecx
  415750:	and    eax,0x6b4476d9
  415755:	cmp    dh,BYTE PTR [ebx+0x2ce8c913]
  41575b:	sub    BYTE PTR [ecx-0x171228d3],cl
  415761:	stos   DWORD PTR es:[edi],eax
  415762:	push   ebx
  415763:	sar    esp,1
  415765:	imul   eax,DWORD PTR [eax],0x60e90bfa
  41576b:	and    cl,BYTE PTR [esi-0x171568cb]
  415771:	stos   BYTE PTR es:[edi],al
  415772:	xchg   edx,eax
  415773:	iret   
  415774:	cld    
  415775:	adc    edi,DWORD PTR [ebx]
  415777:	les    edi,FWORD PTR gs:[ecx]
  41577a:	sub    DWORD PTR [esi+0x50],ecx
  41577d:	add    DWORD PTR [eax],0x2a61b00
  415783:	jmp    0xbbb6f538
  415788:	icebp  
  415789:	sbb    DWORD PTR ds:0x77c5fcd9,esp
  41578f:	retf   0xde2d
  415792:	xchg   DWORD PTR [ecx-0x4f],edi
  415795:	(bad)  
  415796:	jne    0x41579f
  415798:	sahf   
  415799:	dec    ecx
  41579a:	and    eax,0x7243e6f9
  41579f:	mov    edx,0xe8c4cba4
  4157a4:	sub    al,0x28
  4157a6:	mov    DWORD PTR [eax],eax
  4157a8:	xor    BYTE PTR [esi+0x42ece811],0xfe
  4157af:	call   DWORD PTR [esi+0x60f24fd]
  4157b5:	push   ss
  4157b6:	add    eax,0xe6a458b
  4157bb:	jmp    ebp
  4157bd:	imul   ebp,DWORD PTR [ecx-0x5d],0xe8528e19
  4157c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157c5:	inc    edx
  4157c6:	(bad)  
  4157c7:	push   DWORD PTR [ebp-0x72a1a15f]
  4157cd:	dec    edx
  4157ce:	loopne 0x41582d
  4157d0:	adc    al,0xe5
  4157d2:	add    BYTE PTR [ebp+0x4d],dl
  4157d5:	ins    DWORD PTR es:[edi],dx
  4157d6:	and    ah,0xce
  4157d9:	arpl   bp,bp
  4157db:	and    al,0xd2
  4157dd:	loope  0x4157df
  4157df:	sbb    DWORD PTR [ebx-0x26],0x0
  4157e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157e7:	loop   0x41583a
  4157e9:	push   esi
  4157ea:	adc    ebp,ecx
  4157ec:	and    DWORD PTR [ebx-0x69],0x9be800e1
  4157f3:	sti    
  4157f4:	std    
  4157f5:	push   DWORD PTR [esi]
  4157f7:	push   0x7a
  4157f9:	retf   
  4157fa:	xchg   ecx,esp
  4157fc:	mov    eax,ebx
  4157fe:	gs jl  0x41583b
  415801:	fisttp WORD PTR [ecx-0x79feb29b]
  415807:	loope  0x415790
  415809:	inc    esp
  41580a:	(bad)  
  41580b:	cmc    
  41580c:	push   eax
  41580d:	mov    DWORD PTR [edx-0x4a],ecx
  415810:	adc    al,0xe8
  415812:	std    
  415813:	(bad)  
  415815:	call   edx
  415817:	mov    eax,ds:0xe33f840e
  41581c:	add    BYTE PTR [eax],al
  41581e:	fist   DWORD PTR ds:0x872f1025
  415824:	cwde   
  415825:	lds    edx,FWORD PTR ds:0x3f8900b6
  41582b:	loopne 0x4157e0
  41582d:	je     0x41587c
  41582f:	or     al,0x39
  415831:	and    al,0x3f
  415833:	ins    DWORD PTR es:[edi],dx
  415834:	sbb    ch,BYTE PTR [esp+edi*2+0x1f]
  415838:	dec    esp
  415839:	lds    ebp,FWORD PTR [esi]
  41583b:	mov    bh,0x56
  41583d:	mov    BYTE PTR [ebx-0x5d],dh
  415840:	psubsb mm1,QWORD PTR [eax]
  415843:	sbb    DWORD PTR [ebp+edi*8+0xce45aaf],ebp
  41584a:	add    BYTE PTR [eax],al
  41584c:	das    
  41584d:	aam    0x84
  41584f:	cmc    
  415850:	das    
  415851:	mov    bh,0x0
  415853:	mov    ebx,DWORD PTR [ebx-0x65]
  415856:	or     al,ch
  415858:	jnp    0x4157f5
  41585a:	add    eax,0x77d24500
  41585f:	(bad)  
  415860:	pop    edi
  415861:	xor    DWORD PTR [edx],esp
  415863:	push   ecx
  415864:	xlat   BYTE PTR ds:[ebx]
  415865:	jmp    0xdc0:0x42b8ffc3
  41586c:	stos   DWORD PTR es:[edi],eax
  41586d:	jge    0x41586f
  41586f:	add    BYTE PTR [edi],ch
  415871:	xor    DWORD PTR [ecx],ecx
  415873:	push   0x450c47
  415878:	add    eax,0x32e85012
  41587d:	jl     0x415884
  41587f:	add    BYTE PTR [ebx+0x6d83fb76],dh
  415885:	mov    dh,0x0
  415887:	add    BYTE PTR ds:0x274381c3,al
  41588d:	out    0x16,eax
  41588f:	jbe    0x41588d
  415891:	outs   dx,BYTE PTR ds:[esi]
  415892:	add    eax,ebp
  415894:	cs mov bh,0x84
  415897:	shr    BYTE PTR [eax],0x43
  41589a:	pop    esp
  41589b:	add    BYTE PTR [edi],ch
  41589d:	fsubp  st(1),st
  41589f:	in     al,dx
  4158a0:	vpsrlq ymm2,ymm3,XMMWORD PTR ds:0xaef25242
  4158a8:	mov    esp,0xde36bff1
  4158ad:	mov    ch,0x56
  4158af:	lds    eax,FWORD PTR [eax]
  4158b1:	add    BYTE PTR [eax],ch
  4158b3:	int3   
  4158b4:	retw   
  4158b6:	xor    ah,BYTE PTR [edx+0x59]
  4158b9:	add    ebp,DWORD PTR [edi]
  4158bb:	fdivrp st(0),st
  4158bd:	xor    BYTE PTR [ebx],ah
  4158bf:	push   edx
  4158c0:	repz scas al,BYTE PTR es:[edi]
  4158c2:	jl     0x41589e
  4158c4:	(bad)  
  4158c5:	sbb    al,0x5e
  4158c7:	mov    dh,0xbe
  4158c9:	xabort 0xcb
  4158cc:	retw   
  4158ce:	jnp    0x415919
  4158d0:	shl    DWORD PTR [eax],0x3f
  4158d3:	push   edx
  4158d4:	jmp    0x415884
  4158d6:	pop    esp
  4158d7:	out    dx,al
  4158d8:	jg     0x4158f3
  4158da:	jle    0x415892
  4158dc:	stos   BYTE PTR es:[edi],al
  4158dd:	(bad)  
  4158de:	ror    bl,1
  4158e0:	outs   dx,BYTE PTR ds:[esi]
  4158e1:	les    eax,FWORD PTR [ebx+0x35]
  4158e4:	ins    DWORD PTR es:[edi],dx
  4158e5:	xor    BYTE PTR [ebx],cl
  4158e7:	imul   BYTE PTR [ebx-0x1624ecb8]
  4158ed:	fwait
  4158ee:	pop    edx
  4158ef:	retf   0xadc3
  4158f2:	adc    eax,0x97c56edd
  4158f7:	push   ecx
  4158f8:	mov    al,0xad
  4158fa:	call   0x5e59:0x5f38aa62
  415901:	call   0x42b394e
  415906:	xchg   edi,eax
  415907:	push   ss
  415908:	ret    0x2f02
  41590b:	push   edi
  41590c:	push   cs
  41590d:	call   0xe8afb24e
  415912:	js     0x4158f4
  415914:	jmp    0xff41591c
  415919:	add    DWORD PTR cs:[ecx-0x16fea5fe],eax
  415920:	aam    0x21
  415922:	and    eax,0x2bbd5f6
  415927:	jmp    0x3004ae58
  41592c:	xor    ebx,esi
  41592e:	inc    eax
  41592f:	mov    al,ds:0xe967d2f9
  415934:	test   eax,0xc30d254a
  415939:	cmp    eax,edi
  41593b:	ss retf 0x30c8
  41593f:	inc    ecx
  415940:	fsubr  QWORD PTR [edx-0x4]
  415943:	es pop esi
  415945:	mov    dh,0xe8
  415947:	dec    eax
  415948:	ror    al,cl
  41594a:	xchg   DWORD PTR [ebp-0x211825f0],ebp
  415950:	ret    
  415951:	or     al,0xe9
  415953:	daa    
  415954:	dec    esp
  415955:	leave  
  415956:	cld    
  415957:	call   0xf8b:0xf6a2a5c4
  41595e:	ror    DWORD PTR [esi-0x3377da9e],0x79
  415965:	mov    al,ds:0x5559e915
  41596a:	in     eax,dx
  41596b:	bound  esi,QWORD PTR [edx]
  41596d:	pop    ebp
  41596e:	in     eax,dx
  41596f:	xor    eax,0xe867315e
  415974:	sub    DWORD PTR [edi],edx
  415976:	lods   eax,DWORD PTR ds:[esi]
  415977:	sbb    cl,bh
  415979:	or     al,0xd8
  41597b:	mov    dh,0x0
  41597d:	add    ah,bh
  41597f:	or     eax,0x2159a986
  415984:	mov    BYTE PTR [edi+eax*1],ch
  415987:	pop    es
  415988:	add    ecx,ebp
  41598a:	or     al,0xde
  41598c:	outs   dx,DWORD PTR ds:[esi]
  41598d:	aam    0x85
  41598f:	daa    
  415990:	mov    ecx,0x8a1a8314
  415995:	add    BYTE PTR [ebx],bl
  415997:	jp     0x415982
  415999:	jnp    0x415992
  41599b:	jns    0x41599b
  41599d:	mov    ebx,esi
  41599f:	mov    ch,0xf9
  4159a1:	je     0x415a12
  4159a3:	inc    ebp
  4159a4:	add    ecx,DWORD PTR [ebp-0xb3897d]
  4159aa:	pop    ebx
  4159ab:	jbe    0x415a03
  4159ad:	push   esi
  4159ae:	loope  0x4159de
  4159b0:	or     eax,0xc140685
  4159b5:	(bad)  
  4159b6:	jmp    0x415a2d
  4159b8:	push   esi
  4159b9:	(bad)  
  4159ba:	fcmovnb st,st(5)
  4159bc:	push   ecx
  4159bd:	push   0x4
  4159bf:	data16 sbb dh,bh
  4159c2:	inc    ecx
  4159c3:	jp     0x41594c
  4159c5:	fmul   st,st(1)
  4159c7:	gs ins DWORD PTR es:[edi],dx
  4159c9:	mov    eax,ds:0x8a5e7a21
  4159ce:	inc    ebp
  4159cf:	push   ss
  4159d0:	(bad)
  4159d4:	dec    edi
  4159d5:	mov    eax,DWORD PTR [edx+0x5e]
  4159d8:	in     eax,dx
  4159d9:	adc    al,0x55
  4159db:	add    ch,bh
  4159dd:	add    BYTE PTR [ebp+0x184048],dh
  4159e3:	add    BYTE PTR [esi+0x4314707a],dh
  4159e9:	pop    ds
  4159ea:	stc    
  4159eb:	push   eax
  4159ec:	push   ebx
  4159ed:	pop    ds
  4159ee:	std    
  4159ef:	push   eax
  4159f0:	out    dx,al
  4159f1:	xchg   DWORD PTR [eax+0x0],edx
  4159f4:	(bad)  
  4159f5:	pop    esi
  4159f6:	shl    DWORD PTR [edx+ebx*4-0x2d],0xbc
  4159fb:	jmp    0x415a5a
  4159fd:	dec    ecx
  4159fe:	inc    eax
  4159ff:	clc    
  415a00:	sub    eax,0xeb83fd1f
  415a05:	add    DWORD PTR gs:[ebx-0x2efe71c5],eax
  415a0c:	into   
  415a0d:	xor    bh,dh
  415a0f:	jne    0x415a40
  415a11:	jae    0x415a8d
  415a13:	inc    ebx
  415a14:	add    DWORD PTR [edi],0xffffff9d
  415a17:	gs pop edi
  415a19:	mov    bh,0x0
  415a1b:	std    
  415a1c:	fimul  DWORD PTR [edx+0x7b]
  415a1f:	fadd   DWORD PTR [edi-0x57]
  415a22:	gs std 
  415a24:	push   eax
  415a25:	inc    ebx
  415a26:	int3   
  415a27:	je     0x415a4a
  415a29:	inc    eax
  415a2a:	xor    dh,ah
  415a2c:	inc    eax
  415a2d:	mov    dl,0x94
  415a2f:	std    
  415a30:	ret    0xa7c6
  415a33:	jae    0x415a58
  415a35:	sbb    BYTE PTR [edx],dh
  415a37:	or     BYTE PTR [edi],dl
  415a39:	pop    eax
  415a3a:	stos   BYTE PTR es:[edi],al
  415a3b:	std    
  415a3c:	and    BYTE PTR [ebp-0x33],cl
  415a3f:	std    
  415a40:	mov    ds:0xcff49d23,al
  415a45:	mul    DWORD PTR [edi-0x13ffff76]
  415a4b:	fwait
  415a4c:	mov    ebp,0x994c5ac1
  415a51:	or     DWORD PTR [ebx],0xf05553c3
  415a57:	jno    0x415a51
  415a59:	mov    ch,BYTE PTR [edx-0x35]
  415a5c:	repz fcom st(7)
  415a5f:	leave  
  415a60:	test   ch,bh
  415a62:	fdivr  DWORD PTR [edx]
  415a64:	lds    esi,FWORD PTR [edx+ecx*1-0x48]
  415a68:	xor    eax,edi
  415a6a:	push   es
  415a6b:	and    bh,cl
  415a6d:	cld    
  415a6e:	cmp    dh,BYTE PTR [ebx-0x4fd8bc85]
  415a74:	xor    DWORD PTR [eax],edx
  415a76:	and    BYTE PTR [edx],al
  415a78:	inc    edx
  415a79:	or     al,0xff
  415a7b:	sub    al,0x3
  415a7d:	call   0xfde8e48d
  415a82:	cwde   
  415a83:	or     DWORD PTR [ecx+0x759e778a],esi
  415a89:	mov    al,ds:0x4aa2dd88
  415a8e:	mov    ch,0x9c
  415a90:	aas    
  415a91:	mov    ebp,0x50e9d96d
  415a96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a97:	mov    ecx,0xe2439769
  415a9c:	jmp    0x6f7258a4
  415aa1:	stos   DWORD PTR es:[edi],eax
  415aa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415aa3:	bound  eax,QWORD PTR [esi+0x1ac852ae]
  415aa9:	sbb    al,0x41
  415aab:	fucomp st(1)
  415aad:	add    eax,DWORD PTR [eax]
  415aaf:	add    dh,bh
  415ab1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ab2:	pop    ebx
  415ab3:	adc    BYTE PTR [edi],dh
  415ab5:	jmp    0x415a60
  415ab7:	add    esp,edi
  415ab9:	or     dl,BYTE PTR [ebp+0x3]
  415abc:	das    
  415abd:	fidivr WORD PTR [edx+0x3661b44a]
  415ac3:	test   al,0x1a
  415ac5:	enter  0x569a,0x87
  415ac9:	jmp    0x976d:0x592f43b2
  415ad0:	push   es
  415ad1:	enter  0x531b,0xfa
  415ad5:	icebp  
  415ad6:	icebp  
  415ad7:	push   ss
  415ad8:	outs   dx,DWORD PTR ds:[esi]
  415ad9:	fisub  WORD PTR [ebx+eax*8+0x63]
  415add:	sbb    eax,0xc9db8075
  415ae2:	sti    
  415ae3:	test   eax,0x879bb67f
  415ae8:	rol    bh,cl
  415aea:	retw   
  415aec:	inc    ebx
  415aed:	or     eax,0xc9bb7f75
  415af2:	fld    TBYTE PTR [ecx+0x207db65f]
  415af8:	mov    dl,0xc7
  415afa:	les    sp,DWORD PTR [ebx]
  415afd:	std    
  415afe:	ret    0x372f
  415b01:	push   ebx
  415b02:	and    eax,DWORD PTR [eax]
  415b04:	call   FWORD PTR [eax+0x1]
  415b07:	ins    BYTE PTR es:[edi],dx
  415b08:	ffreep st(3)
  415b0a:	cld    
  415b0b:	scas   al,BYTE PTR es:[edi]
  415b0c:	jecxz  0x415ac3
  415b0e:	inc    ecx
  415b0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b10:	(bad)  
  415b11:	leave  
  415b12:	xchg   ecx,eax
  415b14:	add    BYTE PTR [eax],al
  415b16:	add    BYTE PTR [ebx-0xb],bl
  415b19:	xchg   esp,eax
  415b1a:	(bad)  
  415b1b:	leave  
  415b1c:	push   ecx
  415b1d:	adc    DWORD PTR [ecx+0x63],0x53f686fc
  415b24:	shl    BYTE PTR [edx],0x94
  415b27:	pushf  
  415b28:	add    eax,0xed54e1e9
  415b2d:	push   0xe8ff02a7
  415b32:	sub    al,0x30
  415b34:	push   esp
  415b35:	push   ecx
  415b36:	and    eax,DWORD PTR [ebp-0x4]
  415b39:	push   esi
  415b3a:	adc    ebp,ebx
  415b3c:	das    
  415b3d:	cmp    esi,DWORD PTR [ecx+edx*8-0xe]
  415b41:	push   0xffffffc1
  415b43:	fnsave [esp+edx*8+0x5a]
  415b47:	push   edx
  415b48:	or     ch,BYTE PTR [esi]
  415b4a:	push   eax
  415b4b:	mov    BYTE PTR [ebx],0xe9
  415b4e:	sub    al,0xde
  415b50:	out    0xf9,eax
  415b52:	out    dx,eax
  415b53:	sbb    bh,cl
  415b55:	in     eax,0x2c
  415b57:	fiadd  WORD PTR [eax]
  415b59:	add    ch,BYTE PTR [esi]
  415b5b:	mov    eax,ds:0xde311146
  415b60:	add    cl,ch
  415b62:	inc    edx
  415b63:	fisttp QWORD PTR [ebp+0x672d8ea4]
  415b69:	jmp    0x19a38a0
  415b6e:	dec    ecx
  415b6f:	inc    ebp
  415b70:	cld    
  415b71:	out    0x22,al
  415b73:	clc    
  415b74:	pop    eax
  415b75:	inc    edi
  415b76:	xor    al,0x1b
  415b78:	in     eax,0x64
  415b7a:	add    BYTE PTR [eax],al
  415b7c:	xor    DWORD PTR [edx+0x2dd7cefe],ebp
  415b82:	mov    BYTE PTR [eax],al
  415b84:	push   ebx
  415b85:	jp     0x415b8f
  415b87:	add    BYTE PTR [esi+0xb5004da],al
  415b8d:	or     ch,ah
  415b8f:	push   eax
  415b90:	sbb    BYTE PTR [ebx-0x27],dl
  415b93:	inc    ebx
  415b94:	xchg   esi,eax
  415b95:	sub    al,0x67
  415b97:	add    BYTE PTR [esi-0x79fe3eae],bl
  415b9d:	dec    ecx
  415b9e:	stc    
  415b9f:	test   DWORD PTR [ecx-0x69cdfb09],edi
  415ba5:	imul   ebp,DWORD PTR [esi],0x5192138d
  415bab:	push   esi
  415bac:	scas   al,BYTE PTR es:[edi]
  415bad:	inc    ebx
  415bae:	xchg   edi,eax
  415baf:	(bad)  
  415bb0:	fld    DWORD PTR [esi-0x3f]
  415bb3:	jne    0x415bfc
  415bb5:	call   0x8ad4e8c2
  415bba:	add    BYTE PTR [bp+0x75],dh
  415bbe:	adc    BYTE PTR [eax+0x20],dl
  415bc1:	and    al,BYTE PTR [ecx]
  415bc3:	adc    DWORD PTR [edx-0x33],0xfffffffd
  415bc7:	jne    0x415c37
  415bc9:	dec    esp
  415bca:	inc    eax
  415bcb:	lock mov dh,0x2e
  415bce:	mov    bh,BYTE PTR [ebp+0xe]
  415bd1:	push   0x1a
  415bd3:	sub    DWORD PTR [edi],edx
  415bd5:	loop   0x415c34
  415bd7:	pop    esi
  415bd8:	aas    
  415bd9:	fwait
  415bda:	add    eax,0x7542b000
  415bdf:	and    al,0x0
  415be1:	add    dh,cl
  415be3:	cs mov bh,dl
  415be6:	pop    ebp
  415be7:	xor    DWORD PTR ds:0x8a4c028b,ecx
  415bed:	jo     0x415b9d
  415bef:	(bad)  
  415bf1:	mov    esp,DWORD PTR [esi+0xdd129ed]
  415bf7:	js     0x415c74
  415bf9:	add    al,0x15
  415bfb:	call   0x2441:0xa52f2aea
  415c02:	aas    
  415c03:	mov    dh,0x4f
  415c05:	je     0x415c64
  415c07:	xor    ah,BYTE PTR [esi+edi*2+0x30455035]
  415c0e:	inc    esp
  415c0f:	xchg   ah,dh
  415c11:	mov    ch,0x26
  415c13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c14:	outs   dx,BYTE PTR ds:[esi]
  415c15:	adc    al,0x31
  415c17:	push   ecx
  415c18:	or     DWORD PTR [ecx],eax
  415c1a:	call   0x2d5d4914
  415c1f:	loop   0x415c23
  415c21:	sub    DWORD PTR [eax-0x2c],0xffffff97
  415c25:	xor    DWORD PTR [edi-0x9],ebp
  415c28:	inc    edi
  415c29:	pop    ebp
  415c2a:	stc    
  415c2b:	js     0x415c2a
  415c2d:	jmp    DWORD PTR [esi-0x7f9855a]
  415c33:	cmc    
  415c34:	cmp    bh,BYTE PTR [edx]
  415c36:	ins    DWORD PTR es:[edi],dx
  415c37:	mov    ds:0xa43882fe,al
  415c3c:	mov    ch,0xe9
  415c3e:	dec    ecx
  415c3f:	call   0x8a544608
  415c44:	ja     0x415c32
  415c46:	add    BYTE PTR [eax],al
  415c48:	scas   al,BYTE PTR es:[edi]
  415c49:	sub    dl,BYTE PTR [ecx]
  415c4b:	call   FWORD PTR [eax]
  415c4d:	mov    bh,0x4f
  415c4f:	push   esi
  415c50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c51:	or     DWORD PTR [edx*2-0x2887ef4c],0x3ab16
  415c5c:	das    
  415c5d:	push   eax
  415c5e:	inc    edx
  415c5f:	and    al,0x34
  415c61:	jne    0x415c5b
  415c63:	or     al,0xac
  415c65:	stos   BYTE PTR es:[edi],al
  415c66:	add    eax,DWORD PTR [eax]
  415c68:	das    
  415c69:	lds    eax,FWORD PTR [ecx+0x20]
  415c6c:	sub    eax,0xa6184250
  415c71:	jno    0x415c0b
  415c73:	je     0x415cad
  415c75:	inc    eax
  415c76:	inc    edx
  415c77:	sbb    al,0xb6
  415c79:	(bad)  [esp+edi*4]
  415c7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c7d:	sbb    dh,BYTE PTR [edx+0x6192547c]
  415c83:	inc    eax
  415c84:	dec    ebx
  415c85:	pop    eax
  415c86:	fild   DWORD PTR [edx-0x7d1531f4]
  415c8c:	or     al,0xb2
  415c8e:	jmp    0x8b40:0x619edaf6
  415c95:	pusha  
  415c96:	mov    dl,0x2d
  415c98:	xor    bl,BYTE PTR [ebp+0x55]
  415c9b:	fdivr  QWORD PTR [eax-0x3c]
  415c9e:	jmp    0x415d0d
  415ca0:	lahf   
  415ca1:	popa   
  415ca2:	or     DWORD PTR [ebp+0x2f],eax
  415ca5:	(bad)
  415ca8:	fstp   TBYTE PTR ds:0x429
  415cae:	sub    cl,BYTE PTR [ebx+eiz*1+0x238c2205]
  415cb5:	add    cl,BYTE PTR [eax-0x7e051d43]
  415cbb:	pop    ebp
  415cbc:	jecxz  0x415cc0
  415cbe:	ficom  WORD PTR [esi-0x5b]
  415cc1:	mov    cr3,ebx
  415cc4:	jge    0x415cc9
  415cc6:	das    
  415cc7:	fisub  WORD PTR [esi-0x18]
  415cca:	push   eax
  415ccb:	mov    ecx,0xd32f03a7
  415cd0:	sub    BYTE PTR gs:[edi],0xde
  415cd4:	jmp    0xe65d1fcf
  415cd9:	jp     0x415d4c
  415cdb:	xor    dh,BYTE PTR [ecx+0x40]
  415cde:	fwait
  415cdf:	push   edi
  415ce0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ce1:	imul   DWORD PTR [ecx+0x717a4a19]
  415ce7:	ss mov edi,0x5211a8bb
  415ced:	jp     0x415d53
  415cef:	(bad)  
  415cf0:	into   
  415cf1:	mov    ebx,0x4d0119a8
  415cf6:	dec    ebx
  415cf7:	pop    ss
  415cf8:	lods   eax,DWORD PTR ds:[esi]
  415cf9:	bound  eax,QWORD PTR [ebp+0x4af6c8f5]
  415cff:	sbb    DWORD PTR [esi],eax
  415d01:	test   al,0x8b
  415d03:	(bad)  
  415d04:	mov    DWORD PTR [ebx+eiz*1],esp
  415d07:	shl    DWORD PTR [edx-0x3e295ee2],1
  415d0d:	test   BYTE PTR [edx],0x11
  415d10:	or     DWORD PTR [eax+0x0],esi
  415d13:	add    BYTE PTR [eax-0x62],dl
  415d16:	or     al,0x7f
  415d18:	dec    edx
  415d19:	fld    st(1)
  415d1b:	leave  
  415d1c:	adc    esi,0xffffffc1
  415d1f:	jo     0x415d59
  415d21:	call   0xab28:0x6b1b2488
  415d28:	jl     0x415cf0
  415d2a:	mov    ah,BYTE PTR [edi+ebx*8]
  415d2d:	push   esp
  415d2e:	sub    DWORD PTR [ebp+0x33],0xffffffde
  415d32:	add    BYTE PTR [eax+0x10],dh
  415d35:	xchg   BYTE PTR [eax+0xdebb6f],cl
  415d3b:	jmp    0x2eda73f9
  415d40:	clc    
  415d41:	gs add ch,cl
  415d44:	sub    al,0xde
  415d46:	mov    DWORD PTR [eax+edx*4-0x3fe6e93f],ebp
  415d4d:	sbb    al,0x1
  415d4f:	ins    BYTE PTR es:[edi],dx
  415d50:	repz ror BYTE PTR [ebx-0x33ceaa4],1
  415d57:	out    0x84,al
  415d59:	int3   
  415d5a:	sub    ecx,ebp
  415d5c:	sub    al,0x5d
  415d5e:	(bad)  
  415d5f:	out    dx,eax
  415d60:	sub    DWORD PTR [ecx],0xd882ee00
  415d66:	mov    DWORD PTR [esp+ebx*4-0x247805a4],esp
  415d6d:	pop    esi
  415d6e:	jmp    0x2f83:0xdec700
  415d75:	loope  0x415d84
  415d77:	test   BYTE PTR [eax],al
  415d79:	add    BYTE PTR [esi],dh
  415d7b:	fild   WORD PTR [eax]
  415d7d:	add    BYTE PTR [ebp+0x77],dl
  415d80:	gs je  0x415df0
  415d83:	pop    ebp
  415d84:	hlt    
  415d85:	gs pop edx
  415d87:	adc    al,0x82
  415d89:	stc    
  415d8a:	out    dx,al
  415d8b:	repnz adc al,0xf
  415d8e:	mov    eax,0x180efc01
  415d93:	or     bh,bh
  415d95:	shl    BYTE PTR [esi-0x3a],0x9
  415d99:	rcl    DWORD PTR [ebp-0x687d1b8a],0xde
  415da0:	add    BYTE PTR [ebx+0x503cbe4b],cl
  415da6:	sbb    al,0xdf
  415da8:	data16 add cl,al
  415dab:	repz sbb BYTE PTR [ebx+0x75fe108d],cl
  415db2:	jbe    0x415e2d
  415db4:	jo     0x415dc2
  415db6:	shl    ebx,1
  415db8:	or     al,ch
  415dba:	out    0x78,al
  415dbc:	(bad)  
  415dbd:	call   ebp
  415dbf:	jbe    0x415dbd
  415dc1:	push   cs
  415dc2:	retf   0x1d20
  415dc5:	add    BYTE PTR [esi+0x43],al
  415dc8:	shl    DWORD PTR [ebp+ecx*1-0x47],0x1e
  415dcd:	cld    
  415dce:	jno    0x415e4a
  415dd0:	push   cs
  415dd1:	test   DWORD PTR [esi+0x5fffca5],eax
  415dd7:	stc    
  415dd8:	adc    al,0xe9
  415dda:	fcmovnu st,st(4)
  415ddc:	add    BYTE PTR [eax],al
  415dde:	add    BYTE PTR [eax],al
  415de0:	loope  0x415e15
  415de2:	inc    esi
  415de3:	add    al,0x1
  415de5:	xor    al,0x56
  415de7:	add    eax,0xb097d47
  415dec:	das    
  415ded:	cmc    
  415dee:	add    al,al
  415df0:	and    al,0x7a
  415df2:	adc    BYTE PTR [ebx+0x2a],bh
  415df5:	dec    esp
  415df6:	dec    esi
  415df7:	or     al,0xac
  415df9:	add    DWORD PTR [edx-0x7ac5c800],0x2
  415e00:	das    
  415e01:	mov    bh,0x81
  415e03:	arpl   bx,ax
  415e05:	mov    bh,0x83
  415e07:	test   DWORD PTR [edx-0x50],0xb72e0289
  415e0e:	add    BYTE PTR [ecx+0x6383def1],cl
  415e14:	inc    ebx
  415e15:	mov    bh,0xb5
  415e17:	clc    
  415e18:	lods   al,BYTE PTR ds:[esi]
  415e19:	add    ebp,esp
  415e1b:	push   DWORD PTR [edi-0xd786b0e]
  415e21:	sbb    BYTE PTR [edi],0x22
  415e24:	sub    BYTE PTR [ecx],ah
  415e26:	push   es
  415e27:	or     eax,0xbf0606b9
  415e2c:	dec    edi
  415e2d:	mov    edi,0xfa24c20b
  415e32:	xchg   esp,eax
  415e33:	je     0x415e73
  415e35:	mov    ah,0x52
  415e37:	and    al,0x50
  415e39:	cli    
  415e3a:	clc    
  415e3b:	mov    dl,dh
  415e3d:	mov    ds:0x8c534b8d,al
  415e42:	dec    edx
  415e43:	and    BYTE PTR [eax],al
  415e45:	add    BYTE PTR [ebx+0x1b438c18],bh
  415e4b:	cld    
  415e4c:	inc    esi
  415e4d:	and    BYTE PTR [eax],bh
  415e4f:	cmp    ah,BYTE PTR [eax+0x0]
  415e52:	das    
  415e53:	mov    bh,0x8b
  415e55:	inc    ebx
  415e56:	or     ecx,DWORD PTR [esi+0x4a]
  415e59:	lock push esp
  415e5b:	jns    0x415e45
  415e5d:	jne    0x415eda
  415e5f:	cmp    al,0x4a
  415e61:	lock push esp
  415e63:	jns    0x415e49
  415e65:	xchg   BYTE PTR [edx-0x22],dh
  415e68:	sbb    DWORD PTR [edi-0x71462411],eax
  415e6e:	ins    BYTE PTR es:[edi],dx
  415e6f:	mov    dl,0x67
  415e71:	les    ebp,FWORD PTR ds:0x50f90b2e
  415e77:	call   0x27b96225
  415e7c:	les    edi,FWORD PTR gs:[edx+esi*8]
  415e80:	pop    esi
  415e81:	push   ecx
  415e82:	mov    edi,0x2a0533d0
  415e87:	mov    BYTE PTR [ecx],bh
  415e89:	add    eax,0xef2bd70
  415e8e:	ins    DWORD PTR es:[edi],dx
  415e8f:	fsubr  QWORD PTR [ecx+0x4cededde]
  415e95:	adc    DWORD PTR [esi+0x5386f627],esp
  415e9b:	pop    esp
  415e9c:	jmp    0x2f03:0xe7deb412
  415ea3:	pop    ebp
  415ea4:	inc    ebp
  415ea5:	cwde   
  415ea6:	das    
  415ea7:	add    eax,0xec34
  415eac:	sti    
  415ead:	mov    DWORD PTR [edi+0x48],ebp
  415eb0:	pop    ebx
  415eb1:	shr    BYTE PTR ds:0x9a1aa9f8,0x8e
  415eb8:	in     al,dx
  415eb9:	jmp    0x4350a87c
  415ebe:	adc    ecx,DWORD PTR [edi-0x3c984e14]
  415ec4:	sub    eax,0xa6b02557
  415ec9:	sbb    bl,BYTE PTR [edx+0x6]
  415ecc:	jmp    0x1f89cfca
  415ed1:	pop    esp
  415ed2:	sub    al,BYTE PTR ds:0xafd5bf7f
  415ed8:	sbb    ch,dl
  415eda:	sar    ecx,1
  415edc:	push   eax
  415edd:	fisub  WORD PTR [eax+0x19eac3c]
  415ee3:	mov    esp,0x394e56da
  415ee8:	sbb    eax,0x56f60288
  415eed:	pop    ss
  415eee:	add    ch,BYTE PTR [eax]
  415ef0:	mov    esi,ss
  415ef2:	pop    es
  415ef3:	sub    BYTE PTR [ecx],ch
  415ef5:	sahf   
  415ef6:	cmp    BYTE PTR [esp+ebx*8+0x7e720e44],ah
  415efd:	sar    BYTE PTR [edi-0x43],cl
  415f00:	mov    bl,0xde
  415f02:	or     esp,DWORD PTR [ebp+ebp*4-0x41]
  415f06:	cld    
  415f07:	jmp    0xea369abd
  415f0c:	(bad)  
  415f0d:	sbb    edx,DWORD PTR ds:0xf0000072
  415f13:	jmp    0x43cc8e4f
  415f18:	scas   eax,DWORD PTR es:[edi]
  415f19:	fdivrp st(6),st
  415f1b:	sbb    BYTE PTR [edx],al
  415f1d:	div    dh
  415f1f:	adc    bh,bh
  415f21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f22:	rcl    esi,cl
  415f24:	pop    es
  415f25:	test   al,0x2a
  415f27:	mov    BYTE PTR [eax+0x75de972c],0xf0
  415f2e:	lods   al,BYTE PTR ds:[esi]
  415f2f:	add    DWORD PTR [ebp-0x12],edx
  415f32:	mov    cl,0x24
  415f34:	add    cl,ch
  415f36:	sub    al,0x5d
  415f38:	(bad)  
  415f39:	jmp    0x5b3e:0xafd43b3
  415f40:	push   esi
  415f41:	(bad)  [esi+ebx*8]
  415f44:	xchg   DWORD PTR [edi+edx*2],ebp
  415f47:	call   DWORD PTR [eax+0x3]
  415f4a:	xor    ecx,eax
  415f4c:	jbe    0x415f53
  415f4e:	mov    ds:0x24d4fca9,al
  415f53:	sub    esp,edi
  415f55:	fcomp  QWORD PTR [esi+edx*2]
  415f58:	enter  0x404e,0xd2
  415f5c:	sti    
  415f5d:	add    bl,dl
  415f5f:	shr    al,cl
  415f61:	cmc    
  415f62:	dec    edx
  415f63:	jge    0x415f63
  415f65:	jmp    0x3e13a8
  415f6a:	lea    eax,[ebp+edx*4+0x0]
  415f6e:	push   es
  415f6f:	fstp   TBYTE PTR [edi-0x2e]
  415f72:	fst    DWORD PTR [esi+0x1c]
  415f75:	inc    BYTE PTR [eax]
  415f77:	add    BYTE PTR [ecx],bh
  415f79:	jge    0x415f89
  415f7b:	mov    dh,0x91
  415f7d:	(bad)  
  415f7e:	or     eax,0xbbd799b6
  415f83:	loopne 0x415f43
  415f85:	sar    DWORD PTR [ebx+0x38629389],1
  415f8b:	dec    ecx
  415f8d:	fiadd  DWORD PTR [eax]
  415f8f:	cmovb  eax,esi
  415f92:	sti    
  415f93:	call   DWORD PTR [esi-0x76fbbd5f]
  415f99:	push   esi
  415f9a:	or     eax,DWORD PTR [ecx]
  415f9c:	xchg   dl,bl
  415f9e:	and    DWORD PTR [ebp-0x2e],0xc67d81da
  415fa5:	cmc    
  415fa6:	or     eax,0xfe7d4685
  415fab:	dec    DWORD PTR ds:0x23832915
  415fb1:	(bad)  
  415fb2:	cld    
  415fb3:	or     BYTE PTR [eax-0x46],0xfc
  415fb7:	mov    BYTE PTR [ebx],dl
  415fb9:	mov    ?,WORD PTR [ebx+0x22]
  415fbc:	jns    0x415fe2
  415fbe:	or     DWORD PTR [edi],ecx
  415fc0:	adc    BYTE PTR [ebx],cl
  415fc2:	cld    
  415fc3:	shl    BYTE PTR [edi+0x7dca09d2],0xf
  415fca:	stc    
  415fcb:	je     0x416024
  415fcd:	fld    DWORD PTR [edx+0x24]
  415fd0:	leave  
  415fd1:	pop    ss
  415fd2:	adc    eax,0x83b5db8b
  415fd7:	inc    ebp
  415fd8:	das    
  415fd9:	and    ebx,ebp
  415fdb:	dec    ebp
  415fdc:	add    BYTE PTR [eax],al
  415fde:	dec    edi
  415fdf:	stos   DWORD PTR es:[edi],eax
  415fe0:	ret    0x6a89
  415fe3:	fld    QWORD PTR [ebp+0x4f]
  415fe7:	int3   
  415fe8:	mov    esi,DWORD PTR [edx]
  415fea:	add    ch,dh
  415fec:	mov    al,ds:0x86fb7289
  415ff1:	inc    ebx
  415ff2:	inc    eax
  415ff4:	dec    edx
  415ff5:	sub    BYTE PTR [ecx-0x7c],ah
  415ff8:	lea    eax,[ebx-0x21]
  415ffb:	mov    al,ds:0x82a6244a
  416000:	nop
  416001:	sub    edi,0x728930c9
  416007:	jmp    0x415f8d
  416009:	shr    BYTE PTR ds:0x4713a157,0x95
  416010:	inc    eax
  416011:	add    BYTE PTR [esi+0x1e],dl
  416014:	mov    al,al
  416016:	and    ah,ah
  416018:	xchg   DWORD PTR [ebx-0x61],ecx
  41601b:	les    edx,FWORD PTR [esi+0xf]
  41601e:	sub    BYTE PTR [ebp+0x46],dl
  416021:	jmp    FWORD PTR [edi-0x57]
  416024:	or     eax,0x73306d09
  416029:	xchg   esp,eax
  41602a:	das    
  41602b:	mov    DWORD PTR [eax],0x93c2ed29
  416031:	fcom   DWORD PTR [edi+eax*4]
  416034:	inc    ebp
  416035:	xchg   edx,esi
  416037:	push   edx
  416038:	sbb    bh,BYTE PTR [esp+0x5]
  41603c:	in     eax,dx
  41603d:	je     0x415fd5
  41603f:	inc    eax
  416040:	dec    edx
  416041:	in     al,dx
  416042:	add    BYTE PTR [eax],al
  416044:	push   eax
  416045:	or     bh,cl
  416047:	xchg   dl,dh
  416049:	mov    BYTE PTR ss:[ebx+0x1b],al
  41604d:	jo     0x416095
  41604f:	and    BYTE PTR [eax],ch
  416051:	sbb    cl,al
  416053:	(bad)  
  416054:	xor    dh,bl
  416056:	bound  ecx,QWORD PTR [ebx-0x3b983594]
  41605c:	sub    eax,0xa6afad67
  416061:	and    bl,BYTE PTR [edx+0x3]
  416064:	imul   eax,DWORD PTR [edx],0x60ff4971
  41606a:	sub    al,BYTE PTR [edx]
  41606c:	pop    edi
  41606d:	mov    ebp,0xd2faafbd
  416072:	shl    ebp,0x30
  416075:	faddp  st(0),st
  416077:	cmp    al,0xac
  416079:	popf   
  41607a:	jmp    0x416004
  41607c:	lea    edi,[ebx+0x2aa69f13]
  416082:	sbb    cl,BYTE PTR [edi]
  416084:	cdq    
  416085:	push   ds
  416086:	jmp    0x2927e199
  41608b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41608c:	aaa    
  41608d:	jmp    0x51eaebba
  416092:	jmp    0xa208:0x29092f03
  416099:	xchg   ebp,eax
  41609a:	inc    ebx
  41609c:	out    dx,eax
  41609d:	sub    ax,0x1c98
  4160a1:	aad    0xca
  4160a3:	dec    eax
  4160a4:	cmp    ebp,DWORD PTR [ecx+0x2d]
  4160a7:	clc    
  4160a8:	add    BYTE PTR [eax],al
  4160aa:	inc    edi
  4160ab:	and    al,0xa
  4160ad:	and    BYTE PTR [esi+0x7a9e3ac6],bh
  4160b3:	mov    esp,0xde7b48a3
  4160b8:	jmp    0xe7898fc0
  4160bd:	cmp    ecx,DWORD PTR [eax+0x4b]
  4160c0:	xchg   esp,eax
  4160c1:	sahf   
  4160c2:	pop    edx
  4160c3:	in     al,dx
  4160c4:	push   ebx
  4160c5:	inc    esi
  4160c6:	push   eax
  4160c7:	jmp    0x416104
  4160c9:	dec    esi
  4160ca:	sub    eax,0x360b8a9f
  4160cf:	lahf   
  4160d0:	add    DWORD PTR [eax+eax*2-0x44],esp
  4160d4:	mov    DWORD PTR [ebx+ebx*4],edx
  4160d7:	sub    DWORD PTR fs:[ebp+0x2c],0xffffffde
  4160dc:	add    BYTE PTR [edx],ah
  4160de:	pop    ecx
  4160df:	sar    BYTE PTR [ebp+eiz*8-0xf],cl
  4160e3:	and    al,0x39
  4160e5:	call   0x50423f16
  4160ea:	cdq    
  4160eb:	mov    ebx,0x2cb5e9fc
  4160f0:	or     eax,0x89e0ce28
  4160f5:	xchg   esp,eax
  4160f6:	clc    
  4160f7:	push   bx
  4160f9:	stc    
  4160fa:	aad    0xab
  4160fc:	mov    ch,dh
  4160fe:	pop    ebx
  4160ff:	gs inc esi
  416101:	std    
  416102:	stos   DWORD PTR es:[edi],eax
  416103:	ror    BYTE PTR [eax],cl
  416105:	bound  ebx,QWORD PTR [edx]
  416107:	jmp    0x7069:0x29d53287
  41610e:	add    BYTE PTR [eax],al
  416110:	jo     0x4160e0
  416112:	add    al,0x62
  416114:	scas   al,BYTE PTR es:[di]
  416116:	cmp    ah,BYTE PTR [esp+edi*4+0x2c698bea]
  41611d:	fiadd  WORD PTR [eax]
  41611f:	push   0x6b
  416121:	loopne 0x4160ac
  416123:	sub    al,0xa3
  416125:	les    esi,FWORD PTR [esi-0x18]
  416128:	sub    al,0xde
  41612a:	xchg   DWORD PTR [edi-0x16ff21f9],eax
  416130:	pop    edi
  416131:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416132:	cmp    BYTE PTR [eax-0x331b9dd6],dh
  416138:	sub    al,0xde
  41613a:	cmp    DWORD PTR [esi],esi
  41613c:	aaa    
  41613d:	jmp    0xbba220c7
  416142:	cld    
  416143:	bound  ebp,QWORD PTR [edx]
  416145:	arpl   WORD PTR [ebx+0xde2b75],cx
  41614b:	add    BYTE PTR [ebp-0x493eeee0],bh
  416151:	loopne 0x4161a3
  416153:	(bad)  
  416154:	cmp    ebx,ebp
  416156:	std    
  416157:	jbe    0x4161ab
  416159:	pop    edx
  41615a:	adc    BYTE PTR [eax+ebp*1+0x1f],ah
  41615e:	add    DWORD PTR [ebx+0x7f89b2c9],ecx
  416164:	push   cs
  416165:	push   0x238d1040
  41616a:	jmp    0x840fbbf2
  41616f:	inc    ebp
  416170:	push   cs
  416171:	mov    BYTE PTR [ebx+edi*8],ch
  416174:	add    BYTE PTR [eax],al
  416176:	inc    ecx
  416177:	pop    ecx
  416178:	push   cs
  416179:	mov    dh,0xc9
  41617b:	fild   WORD PTR [ebx-0x39a2d1bb]
  416181:	add    bh,BYTE PTR [edi]
  416183:	sar    cl,0xff
  416186:	inc    ecx
  416187:	gs inc eax
  416189:	and    al,0x86
  41618b:	out    dx,al
  41618c:	data16 add BYTE PTR [esi+ebx*8+0x6bce75fd],bl
  416194:	push   esi
  416195:	add    ebx,DWORD PTR [eax+0x4d107059]
  41619b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41619c:	(bad)  
  41619d:	jne    0x416141
  41619f:	pop    ecx
  4161a0:	jo     0x4161aa
  4161a2:	jle    0x416141
  4161a4:	idiv   edi
  4161a6:	sbb    DWORD PTR [ebp-0x7],0x37adfa01
  4161ad:	sbb    DWORD PTR [edx+0x59],esi
  4161b0:	(bad)  
  4161b1:	je     0x4161de
  4161b3:	arpl   cx,ax
  4161b5:	je     0x416144
  4161b7:	fwait
  4161b8:	push   ds
  4161b9:	cld    
  4161ba:	rcr    DWORD PTR [ecx+0xe],0x85
  4161be:	push   es
  4161bf:	ret    
  4161c0:	cld    
  4161c1:	call   DWORD PTR [ecx+0x10]
  4161c4:	inc    esi
  4161c5:	add    DWORD PTR [edi],ebp
  4161c7:	les    edx,FWORD PTR [esi+0x4d]
  4161ca:	sub    eax,0x3408a086
  4161cf:	xchg   BYTE PTR [ecx],al
  4161d1:	clc    
  4161d2:	scas   eax,DWORD PTR es:[edi]
  4161d3:	jnp    0x416209
  4161d5:	je     0x416255
  4161d7:	pop    edi
  4161d8:	push   es
  4161d9:	mov    DWORD PTR [eax],eax
  4161db:	add    cl,ch
  4161dd:	mov    ah,0x87
  4161df:	inc    ebx
  4161e0:	aaa    
  4161e1:	inc    edi
  4161e2:	fst    QWORD PTR [edx+0x30]
  4161e5:	inc    ebx
  4161e6:	xchg   ebx,eax
  4161e7:	sbb    al,0x2f
  4161e9:	(bad)  
  4161ea:	xchg   esi,eax
  4161eb:	inc    ebx
  4161ec:	dec    edi
  4161ed:	(bad)  
  4161ee:	or     eax,0xc28a83
  4161f3:	add    BYTE PTR [eax],dh
  4161f5:	xor    DWORD PTR [ebp-0x1],eax
  4161f8:	sub    DWORD PTR [ecx],edi
  4161fa:	dec    ebp
  4161fb:	add    ch,dh
  4161fd:	daa    
  4161fe:	or     BYTE PTR [ecx],cl
  416200:	out    dx,al
  416201:	les    ebx,FWORD PTR [eax+0x14732080]
  416207:	in     al,dx
  416208:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416209:	dec    ecx
  41620a:	add    BYTE PTR [eax],0x2f
  41620d:	mov    DWORD PTR [ecx+0x432e2cc5],0x9a14d610
  416217:	std    
  416218:	mov    eax,0x6f24433c
  41621d:	push   edi
  41621e:	sub    al,BYTE PTR [eax]
  416220:	adc    eax,0x477397c7
  416225:	dec    edx
  416226:	xor    BYTE PTR [ecx],al
  416228:	add    DWORD PTR [eax+0x7ca41012],edx
  41622e:	cwde   
  41622f:	jae    0x41626c
  416231:	mov    al,ds:0xb3970812
  416236:	sahf   
  416237:	std    
  416238:	js     0x41627e
  41623a:	popf   
  41623b:	jmp    DWORD PTR [ecx]
  41623d:	inc    ebx
  41623e:	jp     0x41625c
  416240:	add    BYTE PTR [eax],al
  416242:	das    
  416243:	fsubp  st(1),st
  416245:	fdivr  DWORD PTR [ecx]
  416247:	mov    edx,0x622a9b9b
  41624c:	js     0x416246
  41624e:	push   eax
  41624f:	mov    ecx,0xb944f7cd
  416254:	adc    DWORD PTR [eax],0xfffffffe
  416257:	cli    
  416258:	ficom  WORD PTR [edi-0x180146c6]
  41625e:	cmc    
  41625f:	shr    DWORD PTR [ebp-0x65],cl
  416262:	sub    dh,BYTE PTR [edx]
  416264:	or     eax,0xef31ef81
  416269:	fdivr  DWORD PTR [edx]
  41626b:	mov    edx,0x63229b53
  416270:	out    0xdf,al
  416272:	or     BYTE PTR [ecx-0x2095ae0d],bh
  416278:	jmp    0x27a4:0x28dc6a51
  41627f:	in     eax,0x28
  416281:	pop    es
  416282:	out    0x5d,eax
  416284:	jecxz  0x4162b5
  416286:	pop    ebx
  416287:	push   edx
  416288:	(bad)  
  41628a:	sub    esi,DWORD PTR [eax-0x55]
  41628d:	add    al,0x22
  41628f:	jo     0x41622c
  416291:	add    eax,0xef2bd88
  416296:	sbb    ah,0x1
  416299:	test   dl,bh
  41629b:	adc    DWORD PTR [esi-0x59],edi
  41629e:	mov    ecx,0x3a04ca22
  4162a3:	arpl   WORD PTR [esi-0x5fffff09],si
  4162a9:	mov    eax,0xc72ec267
  4162ae:	rcr    DWORD PTR [edx+edx*4-0xdae2448],cl
  4162b5:	fdivrp st(2),st
  4162b7:	push   ecx
  4162b8:	repnz fld TBYTE PTR [eax+0xe527a3]
  4162bf:	test   al,0x81
  4162c1:	nop
  4162c2:	cmp    BYTE PTR [edi],cl
  4162c4:	sbb    ebp,ebx
  4162c6:	jle    0x4162cb
  4162c8:	addr16 mov eax,0x3616e2fc
  4162ce:	jo     0x416282
  4162d0:	mov    ds:0x7e827917,eax
  4162d5:	pop    esi
  4162d6:	ds mov ecx,0xe9011e8f
  4162dc:	and    eax,0x2ce99762
  4162e1:	fimul  WORD PTR [ebx]
  4162e3:	aaa    
  4162e4:	ins    DWORD PTR es:[edi],dx
  4162e5:	mov    bh,0x87
  4162e7:	mov    bh,0x48
  4162e9:	pop    edi
  4162ea:	xchg   ch,cl
  4162ec:	mov    ch,0xb9
  4162ee:	cld    
  4162ef:	bound  ebp,QWORD PTR [esi-0x16]
  4162f2:	mov    DWORD PTR [esp+ebx*1-0x47],esp
  4162f6:	cld    
  4162f7:	inc    esi
  4162f8:	mov    cl,0x20
  4162fa:	imul   edx,DWORD PTR [edx],0xb18e5feb
  416300:	xchg   ebp,eax
  416301:	mov    ecx,0xe67762fc
  416306:	daa    
  416307:	xor    DWORD PTR [ebx+0x1e755b],esi
  41630d:	add    BYTE PTR [ebp+0x38648ab9],dh
  416313:	mov    ecx,0xa5b90efc
  416318:	sub    BYTE PTR [ecx],dh
  41631a:	xor    eax,0xf3eb4470
  41631f:	mov    esi,0x5e676009
  416324:	or     al,0x37
  416326:	cmc    
  416327:	fadd   QWORD PTR [edi]
  416329:	test   al,0x36
  41632b:	jo     0x416379
  41632d:	in     al,0xa5
  41632f:	sbb    edx,DWORD PTR [ecx+0x520fee6]
  416335:	test   al,0xd3
  416337:	out    0x7,al
  416339:	add    bh,dl
  41633b:	arpl   WORD PTR [eax-0x6c],ax
  41633e:	std    
  41633f:	not    BYTE PTR [eax]
  416341:	cdq    
  416342:	sub    eax,0xcff8cca0
  416347:	test   BYTE PTR [ebx+ecx*4+0x15dd0],0x46
  41634f:	fs inc eax
  416351:	mov    ch,cl
  416353:	pop    ebx
  416354:	cdq    
  416355:	add    BYTE PTR [esi-0x25],dl
  416358:	xchg   DWORD PTR [ebp-0x1aae2],ecx
  41635e:	xchg   ecx,eax
  41635f:	aaa    
  416360:	imul   edi,edi,0xfffc54b9
  416366:	push   ss
  416367:	fild   DWORD PTR [ebx+0x10559a45]
  41636d:	xor    BYTE PTR [ebx+0x21],dh
  416370:	add    DWORD PTR [ebp-0x1aba0000],eax
  416376:	lea    esp,[esi+0xf00db12]
  41637c:	jle    0x4163d3
  41637e:	pop    ds
  41637f:	add    BYTE PTR [esi],al
  416381:	(bad)  
  416382:	mov    BYTE PTR [esi],0x6f
  416385:	(bad)  
  416386:	repz call FWORD PTR [ecx]
  416389:	arpl   WORD PTR [eax+0x14],di
  41638c:	pop    edi
  41638d:	out    dx,eax
  41638e:	lock mov edx,DWORD PTR [ebx-0x53afc36a]
  416395:	(bad)  
  416397:	jne    0x416373
  416399:	pop    edi
  41639a:	push   esi
  41639b:	add    ebp,DWORD PTR [ecx]
  41639d:	out    0x18,eax
  41639f:	mov    edi,ebp
  4163a1:	jmp    0x4163a0
  4163a3:	jne    0x41637b
  4163a5:	push   ebp
  4163a6:	jo     0x4163b4
  4163a8:	cdq    
  4163a9:	out    0x8,eax
  4163ab:	call   0x3fb68e
  4163b0:	add    eax,0x2f73fc53
  4163b5:	jmp    0x1dd3:0xbc03c07b
  4163bc:	sbb    DWORD PTR [edi+0x38b20d99],0xffffffe6
  4163c3:	push   DWORD PTR [eax-0x41]
  4163c6:	push   edx
  4163c7:	inc    ebp
  4163c8:	cs cwde 
  4163ca:	push   edx
  4163cb:	dec    ebp
  4163cc:	sub    eax,0x2408a086
  4163d1:	xchg   BYTE PTR ds:0x2c8faff8,al
  4163d7:	je     0x4163d9
  4163d9:	add    BYTE PTR [eax-0x1676fda5],al
  4163df:	mov    ah,0x87
  4163e1:	inc    ebx
  4163e2:	daa    
  4163e3:	sub    eax,DWORD PTR [ecx]
  4163e5:	cmp    al,0xd2
  4163e7:	mov    eax,0x94833c08
  4163ec:	jnp    0x4163f1
  4163ee:	inc    esp
  4163ef:	mov    DWORD PTR [eax],0xff7ce10d
  4163f5:	or     al,0xd9
  4163f7:	jl     0x4163ff
  4163f9:	mov    edi,0xbf0dc00f
  4163fe:	sub    al,0x1f
  416400:	cmp    BYTE PTR ds:0x80a46b63,0x30
  416407:	push   edx
  416408:	lea    eax,[esi+0xc7af]
  41640e:	mov    ah,0x9d
  416410:	or     al,0x87
  416412:	jb     0x4163cb
  416414:	or     DWORD PTR [esi+esi*4+0x4fd98cd],eax
  41641b:	adc    BYTE PTR [eax-0x65e854f3],0xfd
  416422:	mov    eax,0xaf014142
  416427:	outs   dx,DWORD PTR ds:[esi]
  416428:	test   DWORD PTR [esi+0xd0ba6f2],0xfc34deb4
  416432:	sub    ebp,DWORD PTR [ebx+eiz*1+0x0]
  416436:	scas   al,BYTE PTR es:[edi]
  416437:	mov    edi,0x67c80bd2
  41643c:	and    eax,0xb70000fc
  416441:	sbb    ecx,DWORD PTR [esi]
  416443:	inc    esp
  416444:	scas   eax,DWORD PTR es:[edi]
  416445:	cmc    
  416446:	adc    cl,BYTE PTR [ebx-0x7f1cf19a]
  41644c:	dec    ebx
  41644d:	int    0xe9
  41644f:	add    esi,DWORD PTR [esi+0x2f29ca0b]
  416455:	mov    ch,0x15
  416457:	clc    
  416458:	push   ebx
  416459:	sub    esi,edx
  41645b:	sub    eax,0x96fa2b4a
  416460:	mov    esp,0x271182e1
  416465:	(bad)  
  416466:	(bad)  
  416467:	fwait
  416468:	xor    dh,BYTE PTR [ebp+0x5b3ac46d]
  41646e:	(bad)  
  41646f:	loope  0x416491
  416471:	mov    ch,0x6f
  416473:	sbb    DWORD PTR [ebx-0x39],eax
  416476:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416477:	out    dx,al
  416478:	adc    BYTE PTR [ebp-0x208db21d],dh
  41647e:	fimul  DWORD PTR [ebp+0x72]
  416481:	loopne 0x4164ab
  416483:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416484:	daa    
  416485:	jmp    0x5e3867b2
  41648a:	repz das 
  41648c:	arpl   dx,ax
  41648e:	inc    ecx
  41648f:	jmp    0xfa6c:0x8b23b4d8
  416496:	mov    ds:0xea487f43,al
  41649b:	xchg   esi,eax
  41649c:	cmp    al,0xd2
  41649e:	pop    esi
  41649f:	scas   eax,DWORD PTR es:[edi]
  4164a0:	ret    0xe22a
  4164a3:	mov    al,BYTE PTR [eax]
  4164a5:	add    dh,ah
  4164a7:	or     edi,ebx
  4164a9:	adc    BYTE PTR [edi],bl
  4164ab:	mov    ch,0x1
  4164ad:	jl     0x4164df
  4164af:	mov    bl,0x76
  4164b1:	loope  0x416487
  4164b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164b4:	hlt    
  4164b5:	out    0xc1,al
  4164b7:	pusha  
  4164b8:	shr    esi,0xaf
  4164bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164bc:	and    ch,cl
  4164be:	sub    al,0xe3
  4164c0:	mov    dl,0x26
  4164c2:	sub    ah,bl
  4164c4:	mov    dl,0x36
  4164c6:	sub    eax,0x25f1e175
  4164cb:	jne    0x4164cd
  4164cd:	mov    cl,0xac
  4164cf:	repnz push esp
  4164d1:	xor    eax,0xa4e2bc97
  4164d6:	shl    DWORD PTR [edx-0x1d6e8dbc],0xb2
  4164dd:	and    DWORD PTR [edx],esi
  4164df:	jecxz  0x416493
  4164e1:	cmp    DWORD PTR ds:0x25f1e275,ebp
  4164e7:	test   al,0x0
  4164e9:	test   al,0xac
  4164eb:	cmc    
  4164ec:	push   esp
  4164ed:	std    
  4164ee:	shl    BYTE PTR [ebp+0x4e],1
  4164f1:	lds    ebp,FWORD PTR [ebx+0x23]
  4164f4:	addr16 jmp 0x6c5e94bb
  4164fa:	pop    esp
  4164fb:	(bad)  
  4164fd:	fadd   QWORD PTR [edi+eiz*2]
  416500:	enter  0x99b7,0x2f
  416504:	adc    DWORD PTR [esi+0x1f],eax
  416507:	loop   0x416504
  416509:	mov    ah,0x0
  41650b:	add    BYTE PTR [esi+eax*8],ah
  41650e:	jb     0x41654e
  416510:	shl    DWORD PTR [ecx+0x5f292986],0x72
  416517:	enter  0xde2c,0xe9
  41651b:	dec    edx
  41651c:	mov    eax,ds:0x31aefcb1
  416521:	ins    BYTE PTR es:[edi],dx
  416522:	inc    esp
  416523:	call   0x8dd151
  416528:	les    ebx,FWORD PTR [edx-0x6542f71f]
  41652e:	add    bh,al
  416530:	push   ss
  416531:	mov    WORD PTR [eax+0x74],ss
  416534:	mov    ds:0x91fd7f87,al
  416539:	dec    ecx
  41653a:	push   cs
  41653b:	mov    dh,0x41
  41653d:	fisttp WORD PTR ds:0xbbe059b6
  416543:	loope  0x4164d3
  416545:	out    0xc8,al
  416547:	mov    ecx,ecx
  416549:	lds    edi,FWORD PTR [ebx-0x7c00d180]
  41654f:	inc    ebp
  416550:	mov    cl,ch
  416552:	adc    BYTE PTR [ebx+0x5189b643],cl
  416558:	dec    edx
  416559:	data16 add al,0x89
  41655c:	sbb    ecx,DWORD PTR [edx-0x7c]
  41655f:	dec    ebp
  416560:	inc    edx
  416561:	xchg   BYTE PTR ds:0x14a2b83,al
  416567:	mov    bh,BYTE PTR [esi]
  416569:	pop    edi
  41656a:	hlt    
  41656b:	pop    eax
  41656c:	inc    ecx
  41656d:	xor    ecx,ecx
  41656f:	sbb    eax,DWORD PTR [eax]
  416571:	add    BYTE PTR [esi],dl
  416573:	fild   WORD PTR [eax-0x7b26c007]
  416579:	mov    edi,0x8000da2d
  41657e:	(bad)  
  41657f:	clc    
  416580:	or     eax,0xfcb4a884
  416585:	call   DWORD PTR [esi-0x75f0a5a9]
  41658b:	cmp    ebx,DWORD PTR [edx]
  41658d:	add    BYTE PTR [esi],al
  41658f:	pop    edi
  416590:	hlt    
  416591:	pop    ebp
  416592:	shl    DWORD PTR [edx],1
  416594:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416595:	sbb    edx,esi
  416597:	fiadd  WORD PTR [eax+0x3e2f1f9]
  41659d:	or     BYTE PTR [edi],0x0
  4165a0:	push   cs
  4165a1:	test   DWORD PTR [edi],ebp
  4165a3:	xor    BYTE PTR ds:0x4e942f00,al
  4165a9:	dec    eax
  4165aa:	sub    al,0xac
  4165ac:	dec    esi
  4165ad:	inc    eax
  4165ae:	sub    eax,DWORD PTR [esi]
  4165b0:	mov    al,ds:0x83fd3408
  4165b5:	adc    al,0x36
  4165b7:	ds inc esp
  4165b9:	hlt    
  4165ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165bb:	sub    bh,BYTE PTR [eax+eax*1+0x2f]
  4165bf:	vandnpd xmm4,xmm4,XMMWORD PTR [ebx]
  4165c3:	or     DWORD PTR [eax],ecx
  4165c5:	(bad)
  4165c8:	(bad)  
  4165c9:	jmp    FWORD PTR [edi]
  4165cb:	lds    ebp,FWORD PTR [ecx+0x8faa42e]
  4165d1:	mov    DWORD PTR [ebp+0x3f],esi
  4165d4:	adc    BYTE PTR cs:[eax],al
  4165d7:	add    BYTE PTR [edx+ecx*8],dl
  4165da:	nop
  4165db:	mov    DWORD PTR [ebx+0x35],eax
  4165de:	xchg   DWORD PTR [edi+eiz*4],edx
  4165e1:	das    
  4165e2:	cs or  al,0xb4
  4165e5:	xchg   ecx,ebp
  4165e7:	inc    ebp
  4165e8:	xlat   BYTE PTR ds:[ebx]
  4165e9:	cmp    eax,0x30338a3c
  4165ee:	inc    ebx
  4165ef:	hlt    
  4165f0:	mov    ds:0x723707b8,al
  4165f5:	xchg   edi,eax
  4165f6:	adc    eax,0x287ac06
  4165fb:	xchg   DWORD PTR [edx-0x49],esi
  4165fe:	mov    DWORD PTR [esi+0xc7bb],edx
  416604:	mov    dl,0xf5
  416606:	or     esi,DWORD PTR [edi]
  416608:	inc    esi
  416609:	jge    0x416607
  41660b:	jb     0x416650
  41660d:	sub    al,0x9a
  41660f:	mov    DWORD PTR [eax],esp
  416611:	xchg   BYTE PTR cs:[edi+ebp*1+0x688900c7],dl
  416619:	xchg   edi,eax
  41661a:	mov    edi,0xb9de2de0
  41661f:	xchg   esp,eax
  416620:	pop    edx
  416621:	loop   0x41663d
  416623:	or     eax,0x47fdb13b
  416628:	sbb    DWORD PTR [esi],ebx
  41662a:	jmp    0x2714:0x6eca7288
  416631:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  416633:	repz mov bh,0x1b
  416636:	add    al,BYTE PTR [eax+0x3e60e26b]
  41663c:	add    BYTE PTR [eax],al
  41663e:	aaa    
  41663f:	(bad)  
  416640:	imul   ebx,DWORD PTR [edx+0x496fb192],0x23
  416647:	pop    esi
  416648:	adc    edi,DWORD PTR [ecx]
  41664a:	mov    dh,0x23
  41664c:	ret    0xe47d
  41664f:	aad    0xf2
  416651:	xchg   DWORD PTR [ecx],eax
  416653:	mov    dl,0xbb
  416655:	xchg   ebx,eax
  416656:	adc    edi,DWORD PTR es:[edx-0x51c454fd]
  41665d:	xchg   ebx,eax
  41665e:	pop    edx
  41665f:	pop    esi
  416660:	loop   0x416686
  416662:	ss sahf 
  416664:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  416666:	dec    ecx
  416667:	pop    ebp
  416668:	stos   BYTE PTR es:[edi],al
  416669:	push   es
  41666a:	scas   eax,DWORD PTR es:[edi]
  41666b:	icebp  
  41666c:	xor    bh,BYTE PTR [ebp-0x14]
  41666f:	std    
  416670:	repnz mov BYTE PTR [esi],al
  416673:	retf   
  416674:	jmp    0xce5c1c7c
  416679:	inc    ebx
  41667a:	jg     0x4166c0
  41667c:	jmp    0x2e3b:0x74d29c92
  416683:	lfs    edx,FWORD PTR [edx-0x40a13184]
  41668a:	add    ch,BYTE PTR [ebx]
  41668c:	ficom  WORD PTR [edx-0x64ae1984]
  416692:	cld    
  416693:	mov    al,0x3b
  416695:	mov    edi,ebp
  416697:	loopne 0x416699
  416699:	ins    BYTE PTR es:[edi],dx
  41669a:	(bad)  
  41669b:	rol    BYTE PTR [eax],cl
  41669d:	jmp    0xf662828d
  4166a2:	add    BYTE PTR [eax],al
  4166a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166a5:	push   edi
  4166a6:	pop    ss
  4166a7:	jmp    0xfdbfcdd8
  4166ac:	mov    ds:0x2ce915fb,eax
  4166b1:	pop    edi
  4166b2:	jnp    0x416679
  4166b4:	sub    al,0x2a
  4166b6:	or     al,dl
  4166b8:	pop    esi
  4166b9:	inc    esi
  4166ba:	or     al,0x6d
  4166bc:	jmp    0x191c:0xb6e900d5
  4166c3:	jmp    0x4166fd
  4166c5:	inc    esp
  4166c6:	mov    BYTE PTR [edi],ch
  4166c8:	sub    esi,edi
  4166ca:	fstp   DWORD PTR [ebp+0x3e]
  4166cd:	neg    DWORD PTR [edx+0x3d]
  4166d0:	sub    al,0x5a
  4166d2:	sub    cl,ah
  4166d4:	sub    al,0xde
  4166d6:	xchg   DWORD PTR [edi],esp
  4166d8:	pop    ebx
  4166d9:	pop    ebx
  4166da:	sar    DWORD PTR ds:0xded9f54b,0xa6
  4166e1:	rcr    DWORD PTR [eax],1
  4166e3:	jmp    0x3842ab14
  4166e8:	add    esp,DWORD PTR [ebp+0x53]
  4166eb:	cmc    
  4166ec:	rcr    DWORD PTR [esi-0x4ce53517],0xfc
  4166f3:	ins    BYTE PTR es:[edi],dx
  4166f4:	ins    BYTE PTR es:[edi],dx
  4166f5:	loop   0x41667b
  4166f7:	out    0x14,eax
  4166f9:	mov    al,0xfc
  4166fb:	or     BYTE PTR [edi],0x67
  4166fe:	inc    ebx
  4166ff:	int    0x31
  416701:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416702:	cmp    BYTE PTR [eax+0x2d],al
  416705:	pop    esp
  416706:	hlt    
  416707:	test   BYTE PTR [eax],0x0
  41670a:	sub    al,0xde
  41670c:	xchg   DWORD PTR [edx],esp
  41670e:	loope  0x4166a7
  416710:	xchg   eax,edi
  416712:	jmp    0xe966:0xf9002d09
  416719:	pop    ss
  41671a:	(bad)  
  41671b:	fild   DWORD PTR [ecx+0xcc7d7f8]
  416721:	mov    al,BYTE PTR [edi-0x4b9c926]
  416727:	fdivr  QWORD PTR [edi-0x29]
  41672a:	rcr    ebx,0x0
  41672d:	inc    edi
  41672e:	das    
  41672f:	sub    eax,0xa029fff0
  416734:	pop    esi
  416735:	push   0x868a7c1d
  41673a:	push   ds
  41673b:	fild   DWORD PTR [eax]
  41673d:	add    BYTE PTR [ebp+0x3e3b6925],dl
  416743:	push   eax
  416744:	fisttp WORD PTR [ecx-0x1c164e15]
  41674a:	pusha  
  41674b:	pop    ss
  41674c:	sbb    DWORD PTR [edx],eax
  41674e:	loop   0x416766
  416750:	mov    cl,BYTE PTR [esi+0x3a]
  416753:	mov    eax,ds:0x312e73d3
  416758:	inc    ebx
  416759:	sbb    bl,dl
  41675b:	cdq    
  41675c:	jne    0x41676d
  41675e:	in     al,dx
  41675f:	fst    DWORD PTR [eax-0x73]
  416762:	inc    eax
  416763:	scas   al,BYTE PTR es:[edi]
  416764:	mov    ebx,eax
  416766:	mov    esi,0xa9ff6396
  41676b:	push   ecx
  41676c:	test   BYTE PTR [ebx-0x51f00000],cl
  416772:	sub    eax,ecx
  416774:	pop    ebp
  416775:	test   BYTE PTR [esi],cl
  416777:	xchg   DWORD PTR [esp+esi*4-0x4e630004],edi
  41677e:	cmp    cl,BYTE PTR [esi-0x16]
  416781:	fnstsw WORD PTR [edi+0x7f]
  416784:	add    ebx,ebx
  416786:	add    BYTE PTR [ebx-0x5c8b2472],al
  41678c:	jl     0x4167a7
  41678e:	cld    
  41678f:	jmp    0xc56f:0x7e86322f
  416796:	popf   
  416797:	xchg   edx,eax
  416798:	lods   al,BYTE PTR ds:[esi]
  416799:	xchg   esi,eax
  41679a:	inc    eax
  41679b:	add    BYTE PTR [eax],bh
  41679d:	cmp    ah,BYTE PTR [edx*1+0x7e85c52f]
  4167a4:	jg     0x41676b
  4167a6:	adc    ebx,DWORD PTR [edi-0x5c]
  4167a9:	data16 sbb al,0x39
  4167ac:	out    0x48,al
  4167ae:	jg     0x416739
  4167b0:	imul   ebp,DWORD PTR [ebp-0x3fbc3f7d],0x4420d6cd
  4167ba:	cmp    BYTE PTR ds:0x1ec52f,dl
  4167c0:	(bad)  
  4167c1:	cmp    DWORD PTR [edi],esi
  4167c3:	sbb    al,0xa4
  4167c5:	add    ebx,DWORD PTR [ebp-0x6e47f82b]
  4167cb:	sub    DWORD PTR [edi-0x41],0xffffff84
  4167cf:	xor    al,0x18
  4167d1:	lds    eax,FWORD PTR [eax]
  4167d3:	jmp    0x3c8767d8
  4167d8:	dec    edx
  4167d9:	sbb    al,0x44
  4167db:	ins    DWORD PTR es:[edi],dx
  4167dc:	int    0xd6
  4167de:	cmp    BYTE PTR [eax],bh
  4167e0:	jecxz  0x4167f6
  4167e2:	das    
  4167e3:	lds    edi,FWORD PTR [esi+0x9]
  4167e6:	adc    eax,0xaa0ce0cf
  4167eb:	(bad)  
  4167ed:	dec    DWORD PTR [eax+0x43]
  4167f0:	mov    bh,bh
  4167f2:	mov    esp,0x2e417eb8
  4167f7:	mov    ecx,DWORD PTR [edx+0x2b]
  4167fa:	and    BYTE PTR [edx-0x9],al
  4167fd:	adc    al,0x2f
  4167ff:	mov    bh,0x7d
  416801:	inc    esi
  416802:	xchg   ebx,eax
  416803:	mov    al,ds:0x71061c4a
  416808:	xchg   ecx,eax
  416809:	std    
  41680a:	adc    bh,bl
  41680c:	push   ds
  41680d:	xor    bl,BYTE PTR [ebx+0x199667dd]
  416813:	fsubp  st(1),st
  416815:	call   0x1ca6:0x904bad20
  41681c:	(bad)  
  41681d:	int3   
  41681e:	add    esi,ebx
  416820:	gs add edx,esp
  416823:	lods   eax,DWORD PTR ds:[esi]
  416824:	xor    edi,DWORD PTR [ecx+esi*2-0x3a]
  416828:	fs ret 
  41682a:	pop    ebx
  41682b:	add    ebx,edi
  41682d:	stos   BYTE PTR es:[edi],al
  41682e:	ds iret 
  416830:	pop    DWORD PTR [ebx]
  416832:	pop    edi
  416833:	pop    ebx
  416834:	mov    esp,0x2a1a7ef
  416839:	sbb    eax,DWORD PTR [eax]
  41683b:	add    BYTE PTR [edi-0x53],al
  41683e:	add    eax,DWORD PTR [esi-0x2b32cc91]
  416844:	loopne 0x41689f
  416846:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416847:	push   DWORD PTR [ecx+0x2f034e5c]
  41684d:	(bad)  
  41684f:	aas    
  416850:	sub    esi,ebx
  416852:	jmp    0xff0b51d1
  416857:	mov    ebx,0xa7538736
  41685c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41685d:	fcos   
  41685f:	cmp    eax,0x83ca331b
  416864:	fistp  QWORD PTR [di]
  416867:	cld    
  416868:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416869:	and    ecx,ebp
  41686b:	leave  
  41686c:	jmp    0xe24:0xb6b31cfa
  416873:	fucomi st,st(2)
  416875:	leave  
  416876:	into   
  416877:	stos   DWORD PTR es:[edi],eax
  416878:	mov    esp,0x31568196
  41687d:	lods   eax,DWORD PTR ds:[esi]
  41687e:	or     ebx,0xffffff8a
  416881:	ss cmc 
  416883:	pop    es
  416884:	pop    esi
  416885:	xchg   edi,eax
  416886:	add    DWORD PTR [edx-0xea519e1],eax
  41688c:	cmp    esp,esp
  41688e:	lea    ebp,[edx-0x1ebc9b47]
  416894:	add    DWORD PTR [ebx+0x40],esi
  416897:	push   esi
  416898:	je     0x4168b6
  41689a:	xor    eax,0x8da5ade
  41689f:	sub    BYTE PTR [eax],al
  4168a1:	add    dl,cl
  4168a3:	loope  0x416924
  4168a5:	dec    eax
  4168a6:	sub    ah,bh
  4168a8:	pop    edx
  4168a9:	lds    edi,FWORD PTR [esi]
  4168ab:	int3   
  4168ac:	xchg   DWORD PTR [edi-0x623e9ee0],esp
  4168b2:	mov    ebp,0x1af15de5
  4168b7:	fsubr  QWORD PTR [edi]
  4168b9:	cmp    ebp,DWORD PTR [ebp+0x65]
  4168bc:	push   ebx
  4168bd:	lods   eax,DWORD PTR ds:[esi]
  4168be:	in     eax,0x9e
  4168c0:	or     al,0x76
  4168c2:	cld    
  4168c3:	fld    QWORD PTR [eax]
  4168c5:	jmp    0xda29d547
  4168ca:	cdq    
  4168cb:	jb     0x4168cd
  4168cd:	bound  ebx,QWORD PTR [ecx-0xe]
  4168d0:	or     ebx,DWORD PTR [edi-0x2e3e1fd0]
  4168d6:	sub    BYTE PTR [edi-0x1f],bl
  4168d9:	call   0x69853bd4
  4168de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168df:	loopne 0x416956
  4168e1:	lock jge 0x416872
  4168e4:	cmp    BYTE PTR [eax-0x3d40af9f],ch
  4168ea:	xor    edi,ebp
  4168ec:	into   
  4168ed:	repnz imul ebx,edx,0xffffff95
  4168f1:	stos   DWORD PTR es:[edi],eax
  4168f2:	lds    ebx,FWORD PTR [edi+0x6041a986]
  4168f8:	loope  0x416894
  4168fa:	test   eax,0xa024eaaa
  4168ff:	stos   BYTE PTR es:[edi],al
  416900:	cld    
  416901:	add    BYTE PTR [ebp+0x8b1921],bl
  416907:	add    BYTE PTR [eax-0x2],dl
  41690a:	jg     0x4168cc
  41690c:	sbb    bh,BYTE PTR [ecx-0x63ea26c7]
  416912:	push   0x0
  416914:	(bad)  
  416915:	pop    esi
  416916:	push   ebx
  416917:	sbb    al,0x7d
  416919:	mov    al,ds:0x5ce98ee9
  41691e:	inc    BYTE PTR [ebp+0x227fac46]
  416924:	jno    0x416982
  416926:	(bad)  
  416927:	jmp    0x416954
  416929:	daa    
  41692a:	inc    ebx
  41692b:	sbb    al,0x2d
  41692d:	push   0x3a
  41692f:	fstp   DWORD PTR [ecx-0x33f47545]
  416935:	jmp    0x60fcde66
  41693a:	stc    
  41693b:	add    ecx,edx
  41693d:	arpl   WORD PTR [esi],ax
  41693f:	jmp    DWORD PTR [ecx]
  416941:	pop    esp
  416942:	xchg   DWORD PTR [ebx-0x69],eax
  416945:	xchg   ebp,eax
  416946:	inc    esi
  416947:	sub    eax,0xfefa6391
  41694c:	mov    eax,ds:0xc5c38a59
  416951:	cwde   
  416952:	inc    esi
  416953:	ins    BYTE PTR es:[edi],dx
  416954:	sbb    DWORD PTR [ebp-0x24],0x8a5961fd
  41695b:	inc    esi
  41695c:	loop   0x4169c0
  41695e:	ror    DWORD PTR [edi],0xa
  416961:	jbe    0x41695e
  416963:	push   DWORD PTR [ecx-0x6b]
  416966:	push   edi
  416967:	or     BYTE PTR [ecx+0x61],dl
  41696a:	(bad)  
  41696c:	add    BYTE PTR [eax],al
  41696e:	mov    eax,ds:0x7c93259
  416973:	daa    
  416974:	dec    ebx
  416975:	pop    esp
  416976:	dec    ebp
  416977:	mov    al,ds:0x5c938e0e
  41697c:	(bad)  
  41697d:	jmp    FWORD PTR [edi]
  41697f:	fistp  WORD PTR [eax-0x747bb9a8]
  416985:	std    
  416986:	sub    BYTE PTR [eax+0x469c6c2e],ah
  41698c:	(bad)  
  41698d:	mov    ch,0x2c
  41698f:	inc    eax
  416990:	cmp    esi,DWORD PTR [esp+ebp*2]
  416993:	xor    ecx,DWORD PTR [ecx]
  416995:	or     BYTE PTR [ebx],dh
  416997:	push   cs
  416998:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416999:	inc    BYTE PTR [eax]
  41699b:	or     al,0xca
  41699d:	pop    ebp
  41699e:	mov    ecx,DWORD PTR [eax-0x4846f2b4]
  4169a4:	jns    0x4169f4
  4169a6:	and    edi,DWORD PTR [eax-0x6a]
  4169a9:	add    al,0x37
  4169ab:	sar    ebp,0x83
  4169ae:	mov    ch,0xf2
  4169b0:	(bad)  
  4169b1:	std    
  4169b2:	mov    BYTE PTR [ebx-0x74],0xfd
  4169b6:	enter  0x2ebf,0x6c
  4169ba:	cmp    al,0x16
  4169bc:	(bad)  
  4169bd:	mov    ch,0x2c
  4169bf:	inc    eax
  4169c0:	cmp    esi,DWORD PTR [esp+ebp*2]
  4169c3:	ror    DWORD PTR [eax],cl
  4169c5:	or     BYTE PTR [esi],ch
  4169c7:	into   
  4169c8:	push   ebx
  4169c9:	(bad)  
  4169ca:	mov    al,ds:0xb5dc9ab
  4169cf:	sub    BYTE PTR [ebp+ecx*1+0x0],bh
  4169d3:	add    cl,bl
  4169d5:	mov    bh,0x79
  4169d7:	dec    esi
  4169d8:	inc    ebx
  4169d9:	clc    
  4169da:	xchg   edx,eax
  4169db:	add    al,0x37
  4169dd:	mov    dh,0x99
  4169df:	into   
  4169e0:	xor    al,0xf3
  4169e2:	and    BYTE PTR ds:0xfd8e12ac,cl
  4169e8:	push   0xb40156b3
  4169ed:	cli    
  4169ee:	fadd   DWORD PTR [eax+0x61]
  4169f1:	mov    eax,0x3e460ff8
  4169f6:	mov    ?,ebp
  4169f8:	dec    eax
  4169f9:	fstp   st(6)
  4169fb:	sub    eax,0x2e66dad3
  416a00:	cmp    ch,BYTE PTR [edx-0x2185036d]
  416a06:	pop    esi
  416a07:	cmp    eax,0x77c1d63
  416a0c:	aaa    
  416a0d:	into   
  416a0e:	mov    gs,WORD PTR [esi+eiz*4+0x18]
  416a12:	push   es
  416a13:	leave  
  416a14:	stc    
  416a15:	fldenv [esi+0x46]
  416a18:	or     ch,BYTE PTR [edx-0x2245039d]
  416a1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a1f:	xor    bh,0xd4
  416a22:	loop   0x4169ab
  416a24:	sbb    BYTE PTR [ebx+0x603a8c4b],ch
  416a2a:	or     DWORD PTR [esi-0x7498561e],ecx
  416a30:	sub    esi,DWORD PTR [eax]
  416a32:	or     BYTE PTR [ecx-0x214a2429],al
  416a38:	add    BYTE PTR [eax],al
  416a3a:	add    eax,0x2f03ea63
  416a3f:	xor    dh,ah
  416a41:	into   
  416a42:	adc    edi,esi
  416a44:	jmp    0xe5a18c4c
  416a49:	lea    ebp,[edx+0x40dac5a9]
  416a4f:	fsubp  st(1),st
  416a51:	cld    
  416a52:	mov    bl,0xa4
  416a54:	cmc    
  416a55:	mov    edx,DWORD PTR [edx-0xd35d613]
  416a5b:	cmp    eax,0xab9080f3
  416a60:	fisttp DWORD PTR [ebx-0x74297570]
  416a66:	jb     0x416a4d
  416a68:	mov    al,0xfb
  416a6a:	scas   eax,DWORD PTR es:[edi]
  416a6b:	xchg   edx,eax
  416a6c:	(bad)  
  416a6d:	mov    esp,DWORD PTR [edx+0x5e]
  416a70:	(bad)  
  416a71:	std    
  416a72:	sub    esp,DWORD PTR [ebx+0x1]
  416a75:	mov    ds:0x2afcaba7,al
  416a7a:	stos   BYTE PTR es:[edi],al
  416a7b:	popf   
  416a7c:	std    
  416a7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a7e:	mov    ah,0xe7
  416a80:	pop    edx
  416a81:	or     eax,0x97d85e34
  416a86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a87:	stos   DWORD PTR es:[edi],eax
  416a88:	or     al,0x57
  416a8a:	xor    BYTE PTR [ecx+0xb],dh
  416a8d:	loope  0x416abb
  416a8f:	fidivr WORD PTR [edi]
  416a91:	ret    0x32f3
  416a94:	cs out 0x90,al
  416a97:	jae    0x416a97
  416a99:	outs   dx,BYTE PTR ds:[esi]
  416a9a:	mov    ah,0x5e
  416a9c:	stc    
  416a9d:	lock add BYTE PTR [eax],al
  416aa0:	add    eax,0xa45cab5d
  416aa5:	stos   BYTE PTR es:[edi],al
  416aa6:	adc    BYTE PTR [ecx+0xb],0xda
  416aaa:	test   BYTE PTR [esi+esi*4+0x4b04fcaa],al
  416ab1:	fiadd  WORD PTR [eax]
  416ab3:	jmp    0x34d8c78d
  416ab8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ab9:	stos   BYTE PTR es:[edi],al
  416aba:	imul   edi,DWORD PTR ds:[ebp-0x64ef0358],0xe61efca7
  416ac5:	test   al,0x1c
  416ac7:	jmp    0x96c045f8
  416acc:	mov    al,0xaa
  416ace:	cld    
  416acf:	les    esp,FWORD PTR [edx-0x6a16ff38]
  416ad5:	bound  esi,QWORD PTR [edi-0xc]
  416ad8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ad9:	stos   BYTE PTR es:[edi],al
  416ada:	ds mov esi,0xf6fca88c
  416ae0:	add    BYTE PTR [ebx],bh
  416ae2:	(bad)  
  416ae3:	fisub  WORD PTR [ebp+0x2b095be4]
  416ae9:	fimul  WORD PTR [ebx]
  416aeb:	gs dec eax
  416aed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416aee:	cld    
  416aef:	add    BYTE PTR [ecx-0x6b],ch
  416af2:	cld    
  416af3:	das    
  416af4:	inc    esi
  416af5:	fsubr  st(3),st
  416af7:	mov    edx,0x3bfe5398
  416afc:	cmp    dh,al
  416afe:	or     eax,0xfe543483
  416b03:	inc    DWORD PTR [eax]
  416b05:	add    BYTE PTR [ecx+0xe],cl
  416b08:	add    bh,BYTE PTR [ecx-0x34bb8]
  416b0e:	push   ebp
  416b0f:	xchg   edi,eax
  416b10:	mov    ebx,0x80a4fb77
  416b15:	xor    BYTE PTR [edx-0x617c01ac],bl
  416b1b:	stos   BYTE PTR es:[edi],al
  416b1c:	or     eax,0xfe5ff184
  416b21:	call   DWORD PTR [ebp-0x6df0dead]
  416b27:	mov    ch,0xf8
  416b29:	call   FWORD PTR [ecx-0x6a]
  416b2c:	pushf  
  416b2d:	add    dh,dl
  416b2f:	fisttp DWORD PTR ds:0xfe600584
  416b35:	(bad)  
  416b36:	fistp  DWORD PTR [ebx+0x13]
  416b39:	add    dh,al
  416b3b:	dec    edx
  416b3c:	dec    ebp
  416b3d:	std    
  416b3e:	sbb    DWORD PTR [eax+edi*1+0x0],edx
  416b42:	neg    bl
  416b44:	add    BYTE PTR [edi],cl
  416b46:	inc    esp
  416b47:	scas   eax,DWORD PTR es:[edi]
  416b48:	idiv   edi
  416b4a:	sbb    DWORD PTR [esi-0x2469dff6],edx
  416b50:	or     eax,0xfe59a586
  416b55:	(bad)  
  416b56:	fild   DWORD PTR [esp+ebx*1-0x7f5b7a00]
  416b5d:	call   0x3e3fc0df
  416b62:	jmp    0x8a416828
  416b67:	daa    
  416b68:	fdivr  st,st(3)
  416b6a:	add    BYTE PTR [eax],al
  416b6c:	das    
  416b6d:	nop
  416b6e:	mov    bh,BYTE PTR [ebx]
  416b70:	das    
  416b71:	lds    eax,FWORD PTR [eax+eax*1]
  416b74:	push   esi
  416b75:	xchg   DWORD PTR [ebx+0x26dc58fd],eax
  416b7b:	ins    BYTE PTR es:[edi],dx
  416b7c:	and    BYTE PTR [eax+ebx*4],dh
  416b7f:	sti    
  416b80:	dec    eax
  416b81:	js     0x416b7d
  416b83:	mov    ch,0x2c
  416b85:	hlt    
  416b86:	test   eax,edi
  416b88:	and    eax,0x34bb86b8
  416b8d:	push   eax
  416b8e:	mov    al,BYTE PTR [ecx-0x7a0675d9]
  416b94:	in     eax,dx
  416b95:	pusha  
  416b96:	mov    bh,ch
  416b98:	pop    edx
  416b99:	inc    edx
  416b9a:	add    eax,0x7cc02f00
  416b9f:	mov    ch,0xb
  416ba1:	cmp    BYTE PTR [edx+0x4d5483b],cl
  416ba7:	add    BYTE PTR [eax],ch
  416ba9:	aas    
  416baa:	addr16 stc 
  416bac:	lock pinsrw mm4,WORD PTR [esi],0xf
  416bb1:	mov    ch,0x0
  416bb3:	or     eax,0xfd8955a9
  416bb8:	fmul   DWORD PTR ds:0xefd0f977
  416bbe:	int    0x5d
  416bc0:	pop    ebx
  416bc1:	mov    BYTE PTR [ebp-0x76003d5c],al
  416bc7:	or     eax,0x8145b381
  416bcc:	mov    bh,0xba
  416bce:	stc    
  416bcf:	add    DWORD PTR [eax],0x89d8b100
  416bd5:	std    
  416bd6:	lods   al,BYTE PTR ds:[esi]
  416bd7:	fdivr  st(3),st
  416bd9:	or     al,0xb1
  416bdb:	push   edi
  416bdc:	(bad)  
  416bdd:	std    
  416bde:	nop
  416bdf:	jno    0x416c5c
  416be1:	add    BYTE PTR [edi],ch
  416be3:	mov    ch,0xf9
  416be5:	or     DWORD PTR [ebx],0xffffffde
  416be8:	fimul  WORD PTR [eax-0x1bfd1786]
  416bee:	jo     0x416b96
  416bf0:	jecxz  0x416b73
  416bf2:	shr    BYTE PTR [ecx-0xadb7735],cl
  416bf8:	or     DWORD PTR [edi+ebp*1],eax
  416bfb:	xlat   BYTE PTR ds:[ebx]
  416bfc:	bound  esp,QWORD PTR [edi]
  416bfe:	push   ebx
  416bff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c00:	mov    bl,0x9a
  416c02:	lock mov ds:0x703288ab,al
  416c08:	sub    eax,DWORD PTR [ebx]
  416c0a:	sub    dh,BYTE PTR [eax+0x2b]
  416c0d:	push   es
  416c0e:	jo     0x416bcd
  416c10:	loop   0x416c0e
  416c12:	jmp    0xeac615f8
  416c17:	loope  0x416c89
  416c19:	ds pop ds
  416c1b:	jmp    0x395e:0xd195f424
  416c22:	cmp    edx,DWORD PTR [ebx-0x1a]
  416c25:	xor    BYTE PTR [esi+0x77ba6cd6],0xdd
  416c2c:	outs   dx,BYTE PTR ds:[esi]
  416c2d:	xor    ebp,DWORD PTR [ebx]
  416c2f:	stc    
  416c30:	cmp    BYTE PTR [esp+esi*1+0xca37f1],bl
  416c37:	add    BYTE PTR [edx+0x16],bh
  416c3a:	mov    ebp,0xce0ca601
  416c3f:	fdiv   st(7),st
  416c41:	and    BYTE PTR [eax+0x0],ah
  416c44:	mov    al,0xb
  416c46:	ss (bad) 
  416c48:	push   0xffffffd5
  416c4a:	lods   eax,DWORD PTR ds:[si]
  416c4c:	das    
  416c4d:	fsubp  st(1),st
  416c4f:	(bad)  
  416c50:	addr16 sub al,0xae
  416c53:	(bad)  
  416c54:	cmc    
  416c55:	aam    0x62
  416c57:	mov    ecx,0xf8e9de2f
  416c5c:	loop   0x416c6b
  416c5e:	out    0xd4,al
  416c60:	imul   esp,edx,0x6b87a400
  416c66:	inc    esp
  416c67:	jmp    0x416bf0
  416c69:	push   ecx
  416c6a:	ret    0x3670
  416c6d:	mov    dl,0xc
  416c6f:	xchg   edi,eax
  416c70:	cmp    BYTE PTR [ebp-0x2994373f],ah
  416c76:	enter  0xf2de,0x1a
  416c7a:	add    BYTE PTR [eax-0x54f8296d],ch
  416c80:	rcr    BYTE PTR [eax],cl
  416c82:	std    
  416c83:	pusha  
  416c84:	out    dx,al
  416c85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c86:	jbe    0x416c69
  416c88:	hlt    
  416c89:	mov    ds:0x5d30a6fc,al
  416c8e:	inc    esi
  416c8f:	mov    eax,ds:0x6af510b4
  416c94:	call   0x19fe5479
  416c99:	imul   eax,ecx,0x74
  416c9c:	add    BYTE PTR [eax],al
  416c9e:	pop    ebx
  416c9f:	push   0x5d2a8880
  416ca4:	dec    esi
  416ca5:	test   DWORD PTR [eax],eax
  416ca7:	arpl   WORD PTR [ecx+0x11e5533],cx
  416cad:	div    BYTE PTR [edx+0x5e]
  416cb0:	mov    edi,0x43de6cc3
  416cb5:	pusha  
  416cb6:	mov    es:0x60b4a48a,al
  416cbc:	sar    DWORD PTR [esp+edx*8-0x57c10394],0x22
  416cc4:	mov    ch,BYTE PTR [esp+esi*4+0x40decf60]
  416ccb:	std    
  416ccc:	lock es mov al,0xee
  416cd0:	into   
  416cd1:	stos   DWORD PTR es:[edi],eax
  416cd2:	xor    edx,DWORD PTR [ecx]
  416cd4:	adc    eax,0x2b21e6d2
  416cd9:	push   cs
  416cda:	mov    BYTE PTR ds:[edi-0x1ab4500],0x75
  416ce2:	xchg   esi,eax
  416ce3:	daa    
  416ce4:	ret    
  416ce5:	mov    ecx,DWORD PTR [ebp+0x42]
  416ce8:	addr16 out dx,eax
  416cea:	xchg   ecx,eax
  416ceb:	pop    ebx
  416cec:	add    al,0x81
  416cef:	and    al,0x70
  416cf1:	adc    eax,0x5d01e086
  416cf6:	mov    bl,BYTE PTR [ebx+0x40]
  416cf9:	adc    al,0xcd
  416cfb:	sbb    eax,0x560b3b15
  416d00:	jnp    0x416cda
  416d02:	add    BYTE PTR [eax],al
  416d04:	fucom  st(5)
  416d06:	cld    
  416d07:	mov    ebx,DWORD PTR [ebx]
  416d09:	push   edx
  416d0a:	cmp    cl,al
  416d0c:	popa   
  416d0d:	and    al,0xe4
  416d0f:	out    dx,eax
  416d10:	xchg   ecx,eax
  416d11:	pop    ebx
  416d12:	cmp    BYTE PTR [ebp-0x5e],0xe0
  416d16:	or     eax,0xfcb38384
  416d1b:	dec    DWORD PTR [ebp+0x4b89fd1e]
  416d21:	scas   al,BYTE PTR es:[edi]
  416d22:	mov    DWORD PTR [ebp-0x16],eax
  416d25:	pop    ds
  416d26:	test   BYTE PTR [ebp-0x6],al
  416d29:	out    dx,eax
  416d2a:	jecxz  0x416cb2
  416d2c:	fcmovu st,st(7)
  416d2e:	add    bh,bh
  416d30:	(bad)  [edi+0x5c5a5589]
  416d36:	jo     0x416d28
  416d38:	dec    ebp
  416d39:	popa   
  416d3a:	mov    cl,bl
  416d3c:	outs   dx,BYTE PTR ds:[esi]
  416d3d:	mov    ah,0xed
  416d3f:	push   DWORD PTR [ecx+0x5e]
  416d42:	ror    DWORD PTR [edi],0x4a
  416d45:	mov    ebp,0xe0d6000f
  416d4a:	push   edi
  416d4b:	hlt    
  416d4c:	outs   dx,DWORD PTR ds:[esi]
  416d4d:	add    eax,0x2611ffee
  416d52:	inc    esi
  416d53:	add    DWORD PTR [ebp+0x64],eax
  416d56:	sbb    al,0x89
  416d58:	das    
  416d59:	jb     0x416ce7
  416d5b:	mov    ch,BYTE PTR [eax]
  416d5d:	xchg   ecx,eax
  416d5e:	ds jb  0x416d6b
  416d61:	cdq    
  416d62:	aaa    
  416d63:	jbe    0x416db7
  416d65:	popa   
  416d66:	cmp    DWORD PTR [ebp+0x0],esi
  416d69:	add    BYTE PTR [edx],dl
  416d6b:	mov    esp,0x682b554e
  416d70:	mov    ebp,0x4eabea3c
  416d75:	inc    ebp
  416d76:	sub    eax,0xb6bf6cb4
  416d7b:	cli    
  416d7c:	cwde   
  416d7d:	or     eax,0xbeffc499
  416d82:	dec    esi
  416d83:	lods   eax,DWORD PTR ds:[esi]
  416d84:	stc    
  416d85:	(bad)  
  416d86:	and    BYTE PTR [ebx],ch
  416d88:	add    DWORD PTR ds:[esi-0x6b],ebp
  416d8c:	std    
  416d8d:	or     BYTE PTR [ebp+0x3e],ch
  416d90:	xor    al,0xfc
  416d92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d93:	repnz mov WORD PTR [ebx+0x27],?
  416d97:	cmp    eax,0xcc28fd86
  416d9c:	ja     0x416de1
  416d9e:	daa    
  416d9f:	cmp    BYTE PTR [esi-0xa9bfbfd],bh
  416da5:	mov    ch,0xef
  416da7:	xor    DWORD PTR ds:0x55acba,edi
  416dad:	xchg   DWORD PTR [edx+0x21],esi
  416db0:	idiv   BYTE PTR [ebp+0x40277ea7]
  416db6:	das    
  416db7:	mov    ah,0x46
  416db9:	sub    ch,0x6e
  416dbc:	inc    eax
  416dbd:	add    BYTE PTR [eax+0x3e],ch
  416dc0:	xor    al,0xfc
  416dc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416dc3:	jno    0x416d4d
  416dc5:	sub    edi,0x69
  416dc8:	repnz mov bh,0xc8
  416dcb:	jmp    0x416d52
  416dcd:	jge    0x416dcf
  416dcf:	add    ah,dl
  416dd1:	mov    esp,0xde6ec6d1
  416dd6:	outs   dx,BYTE PTR ds:[esi]
  416dd7:	ret    
  416dd8:	test   al,0x10
  416dda:	push   ds
  416ddb:	jnp    0x416dc9
  416ddd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416dde:	xlat   BYTE PTR ds:[ebx]
  416ddf:	mov    cl,0xed
  416de1:	push   esp
  416de2:	mov    ch,0xef
  416de4:	push   edi
  416de5:	cwde   
  416de6:	xchg   ch,cl
  416de8:	push   edi
  416de9:	add    al,0x8e
  416deb:	hlt    
  416dec:	scas   eax,DWORD PTR es:[edi]
  416ded:	push   esi
  416dee:	out    dx,eax
  416def:	test   BYTE PTR [edx-0x59fecc2e],al
  416df5:	xchg   ebp,eax
  416df6:	pop    ss
  416df7:	mov    dl,0xae
  416df9:	mov    esp,0xbf7e41e3
  416dfe:	pop    edi
  416dff:	ss pop ebx
  416e01:	pushf  
  416e02:	ret    0xa500
  416e05:	fyl2x  
  416e07:	inc    eax
  416e08:	stos   DWORD PTR es:[edi],eax
  416e09:	(bad)  
  416e0a:	jmp    0x416e8b
  416e0c:	out    0xa7,al
  416e0e:	mov    bl,0x84
  416e10:	inc    edx
  416e11:	sbb    dh,dl
  416e13:	js     0x416df9
  416e15:	mov    eax,ds:0x241b36e1
  416e1a:	lods   eax,DWORD PTR ds:[esi]
  416e1b:	js     0x416e89
  416e1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e1e:	iret   
  416e1f:	mov    ebx,0x95af5a32
  416e24:	sbb    ah,BYTE PTR [edx-0x20fcf999]
  416e2a:	jo     0x416e62
  416e2c:	and    edx,ecx
  416e2e:	ins    DWORD PTR es:[edi],dx
  416e2f:	mov    ebp,0x78e9de1b
  416e34:	add    BYTE PTR [eax],al
  416e36:	ins    BYTE PTR es:[edi],dx
  416e37:	cli    
  416e38:	test   eax,0xb9fa6c7a
  416e3d:	call   0x18b6:0x3e9cabc
  416e44:	mov    esi,0x26f5f1d0
  416e49:	inc    edx
  416e4a:	push   ss
  416e4b:	lahf   
  416e4c:	jmp    0x416ec5
  416e4e:	pop    es
  416e4f:	retf   
  416e50:	add    cl,ch
  416e52:	sub    al,0x54
  416e54:	add    BYTE PTR [edx-0x9fde51c],ch
  416e5a:	xor    ebx,edx
  416e5c:	neg    BYTE PTR [esi]
  416e5e:	mov    bl,0xb9
  416e60:	jae    0x416e7c
  416e62:	stos   DWORD PTR es:[edi],eax
  416e63:	mov    ds:0xef40a788,eax
  416e68:	leave  
  416e69:	shr    BYTE PTR [edi-0x1f],cl
  416e6c:	aaa    
  416e6d:	sub    BYTE PTR [ebx+0x2cdc1455],al
  416e73:	fimul  WORD PTR [ebx]
  416e75:	aaa    
  416e76:	jg     0x416ece
  416e78:	inc    ebx
  416e79:	sbb    DWORD PTR [eax+ebp*2],ebx
  416e7c:	dec    esp
  416e7d:	call   0x2a40393c
  416e82:	and    ecx,edx
  416e84:	add    edx,eax
  416e86:	add    ebx,edx
  416e88:	mov    dl,0x2e
  416e8a:	sub    dl,bl
  416e8c:	mov    dl,0x2e
  416e8e:	xor    DWORD PTR [ecx-0x1f],esp
  416e91:	loope  0x416ec4
  416e93:	popa   
  416e94:	mov    ah,BYTE PTR [edi+ebp*4]
  416e97:	pop    edi
  416e98:	(bad)  
  416e99:	jmp    0x24c4:0x2bc10000
  416ea0:	mov    ds:0x2ce9fca1,eax
  416ea5:	shl    DWORD PTR [edx-0x4d2ccdda],cl
  416eab:	push   ds
  416eac:	sub    DWORD PTR [edi+0x66],ebx
  416eaf:	jge    0x416ee4
  416eb1:	popa   
  416eb2:	loope  0x416e95
  416eb4:	xor    DWORD PTR [eax+esi*1+0x23a8b39b],ebx
  416ebb:	neg    BYTE PTR [eax+0x58b48a9b]
  416ec1:	mov    bh,0xd3
  416ec3:	push   0xffffffd6
  416ec5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ec6:	add    DWORD PTR [esi],esp
  416ec8:	out    0xb0,al
  416eca:	add    al,BYTE PTR [eax]
  416ecc:	(bad)  
  416ecd:	fadd   QWORD PTR [eax]
  416ecf:	inc    edi
  416ed0:	pop    ebp
  416ed1:	loopne 0x416f04
  416ed3:	rcl    BYTE PTR [esi+0x4ff04051],0x97
  416eda:	clc    
  416edb:	jmp    0x416ef1
  416edd:	pop    ecx
  416ede:	pusha  
  416edf:	cld    
  416ee0:	xchg   esi,eax
  416ee1:	out    0xc0,eax
  416ee3:	inc    eax
  416ee4:	seta   ah
  416ee7:	inc    edi
  416ee8:	sub    eax,0x274887f5
  416eed:	pop    ecx
  416eee:	fadd   QWORD PTR [ecx]
  416ef0:	dec    DWORD PTR [esi+0x52380fe8]
  416ef6:	fcomp  QWORD PTR [edx-0x3a]
  416ef9:	fmul   QWORD PTR ds:0x573206be
  416eff:	inc    eax
  416f00:	add    BYTE PTR [eax],al
  416f02:	push   esi
  416f03:	xchg   ebx,eax
  416f04:	or     DWORD PTR [ebp+0x7a],0x51
  416f08:	inc    eax
  416f09:	clc    
  416f0a:	rcr    DWORD PTR [eax+esi*2],cl
  416f0d:	or     BYTE PTR [esi+0x9fffe5b],ch
  416f13:	push   ebx
  416f14:	inc    eax
  416f15:	clc    
  416f16:	dec    ecx
  416f17:	pushw  ss
  416f19:	inc    edi
  416f1a:	adc    BYTE PTR [ebp-0x7a40feec],0xf0
  416f21:	setb   BYTE PTR [edi]
  416f24:	add    DWORD PTR [eax],eax
  416f26:	push   ss
  416f27:	push   ecx
  416f28:	dec    ebx
  416f29:	xor    cl,bh
  416f2b:	gs or  eax,0x8409d511
  416f31:	dec    ebp
  416f32:	adc    BYTE PTR [eax+0x48],0xfc
  416f36:	push   esp
  416f37:	push   ecx
  416f38:	push   eax
  416f39:	adc    al,0xbd
  416f3b:	adc    DWORD PTR [ebp+0x2d],edi
  416f3e:	pop    ebp
  416f3f:	fdiv   DWORD PTR [ecx]
  416f41:	rcl    BYTE PTR [eax+eiz*8-0x47d093a6],cl
  416f48:	sbb    DWORD PTR [ebx+0x43],0xffffffb5
  416f4c:	add    BYTE PTR ds:0x4e8b8499,cl
  416f52:	jmp    FWORD PTR [edi+0x74350cba]
  416f58:	cmp    eax,0x8980c34b
  416f5d:	adc    DWORD PTR [esi-0xd028108],esi
  416f63:	test   al,0x8b
  416f65:	dec    ebx
  416f66:	add    BYTE PTR [eax],al
  416f68:	mov    ds:0x1913d18e,eax
  416f6d:	jmp    0xeb9a:0x3120c83a
  416f74:	mov    BYTE PTR [eax-0x4a6c847a],ah
  416f7a:	jae    0x41f865
  416f80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f81:	sbb    al,BYTE PTR [ecx+0x41027739]
  416f87:	xchg   edx,esi
  416f89:	mov    al,ds:0x3cb5e3d
  416f8e:	sbb    ecx,DWORD PTR ds:0x4e8d8499
  416f94:	jmp    FWORD PTR [edi-0x51caf346]
  416f9a:	retf   
  416f9b:	repz ret 0xc5d9
  416f9f:	cld    
  416fa0:	jmp    0x65c1:0x434337a0
  416fa7:	jmp    0x7c08abf1
  416fac:	mov    dl,0x74
  416fae:	stc    
  416faf:	adc    BYTE PTR [edx+edi*8+0xc],dl
  416fb3:	jbe    0x416fee
  416fb5:	fs inc edi
  416fb7:	aas    
  416fb8:	mov    dh,0xf6
  416fba:	loopne 0x416ff4
  416fbc:	out    dx,al
  416fbd:	jg     0x416f50
  416fbf:	out    0xf6,al
  416fc1:	frstor [edx-0x7f]
  416fc4:	scas   al,BYTE PTR es:[edi]
  416fc5:	and    BYTE PTR [edx+0x4],bl
  416fc8:	xor    bl,BYTE PTR [ecx+0x13]
  416fcb:	outs   dx,DWORD PTR ds:[esi]
  416fcc:	add    BYTE PTR [eax],al
  416fce:	ficomp DWORD PTR [esi-0x312b20f1]
  416fd4:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  416fd6:	(bad)  
  416fd7:	sahf   
  416fd8:	cmp    ecx,DWORD PTR [ebp-0x75560594]
  416fde:	ins    BYTE PTR es:[edi],dx
  416fdf:	cli    
  416fe0:	sub    dh,bh
  416fe2:	or     al,0x53
  416fe4:	cmp    ebp,esi
  416fe6:	test   al,0x9f
  416fe8:	xchg   ebp,eax
  416fe9:	pop    ds
  416fea:	mov    dh,0x92
  416fec:	adc    esi,edi
  416fee:	inc    eax
  416fef:	or     BYTE PTR [ebx],cl
  416ff1:	mul    DWORD PTR [eax]
  416ff3:	lahf   
  416ff4:	jge    0x417005
  416ff6:	mov    ch,BYTE PTR [eax]
  416ff8:	repnz imul ebx,DWORD PTR [ebp-0x4f],0xfffffff3
  416ffd:	and    dh,0x58
  417000:	sub    dl,BYTE PTR [ecx]
  417002:	lods   al,BYTE PTR ds:[esi]
  417003:	mov    esp,?
  417005:	add    ebp,DWORD PTR [edi]
  417007:	jecxz  0x417045
  417009:	sbb    dh,0x89
  41700c:	shr    ebx,0x60
  41700f:	sahf   
  417010:	retf   
  417011:	mov    esp,fs
  417013:	mov    eax,ds:0xdd1cc6ab
  417018:	jmp    0xb19c9f20
  41701d:	add    bh,BYTE PTR [ebx-0x3b1e1104]
  417023:	into   
  417024:	data16 loop 0x417048
  417027:	sahf   
  417028:	fwait
  417029:	adc    cl,bl
  41702b:	jmp    0x92a5ab56
  417030:	fild   DWORD PTR [esi-0x69920000]
  417036:	add    DWORD PTR [eax-0x7329dbf6],0x74
  41703d:	call   0x8e7a:0xf1e9b001
  417044:	xor    esp,DWORD PTR [esi-0x758992f4]
  41704a:	cld    
  41704b:	pop    esi
  41704c:	stos   DWORD PTR es:[edi],eax
  41704d:	sbb    ebp,ebp
  41704f:	jmp    0xde5699f9
  417054:	test   eax,0x2ce910b3
  417059:	gs pop esi
  41705b:	cmp    eax,0xfb7ea603
  417060:	sti    
  417061:	cmp    ebp,DWORD PTR [ebp-0x46]
  417064:	sbb    ebp,ebx
  417066:	mov    dl,0xf2
  417068:	gs sub ebp,esi
  41706b:	xchg   esp,eax
  41706c:	dec    ecx
  41706d:	pop    ds
  41706e:	cld    
  41706f:	lods   al,BYTE PTR ds:[esi]
  417070:	inc    eax
  417071:	aad    0x45
  417073:	cmc    
  417074:	nop
  417075:	xchg   eax,ebp
  417077:	jecxz  0x417034
  417079:	and    al,0x7d
  41707b:	fs in  al,dx
  41707d:	adc    DWORD PTR [eax],edx
  41707f:	mov    dl,0x59
  417081:	in     eax,0x72
  417083:	fistp  QWORD PTR [ebx]
  417085:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417086:	inc    edx
  417087:	jo     0x417102
  417089:	cmp    DWORD PTR [eax],edi
  41708b:	test   al,0x30
  41708d:	imul   ebx,DWORD PTR [esi],0xffffffd0
  417090:	fcomp  DWORD PTR [edx-0x2224b380]
  417096:	or     ebp,DWORD PTR [eax+eax*1+0x0]
  41709a:	inc    ecx
  41709b:	mov    esp,edi
  41709d:	mov    esi,0xe6fd3904
  4170a2:	scas   al,BYTE PTR es:[edi]
  4170a3:	mov    bl,0xf4
  4170a5:	scas   al,BYTE PTR es:[edi]
  4170a6:	mov    al,0x66
  4170a8:	inc    esi
  4170a9:	int    0xec
  4170ab:	arpl   WORD PTR [esi-0x3b],ax
  4170ae:	mov    eax,ds:0x80622511
  4170b3:	or     BYTE PTR [ecx],al
  4170b5:	mov    ss,WORD PTR [esi]
  4170b7:	stc    
  4170b8:	xchg   DWORD PTR [eax],eax
  4170ba:	mov    ebp,0x1818701c
  4170bf:	sbb    eax,0x97811070
  4170c4:	or     bh,bh
  4170c6:	sti    
  4170c7:	call   0x1dc37ab4
  4170cc:	dec    BYTE PTR [ebx+0x4b]
  4170cf:	and    cl,BYTE PTR [esi]
  4170d1:	test   esi,ecx
  4170d3:	repnz add BYTE PTR [eax],al
  4170d6:	cmp    eax,0x2a73f87f
  4170db:	or     ebx,DWORD PTR [esi+0x3a1d01f7]
  4170e1:	pop    esi
  4170e2:	bnd jmp 0x417066
  4170e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170e6:	(bad)  
  4170e7:	sbb    al,0xfe
  4170e9:	invd   
  4170eb:	jmp    0xf90d6731
  4170f0:	sti    
  4170f1:	jae    0x417090
  4170f3:	addr16 inc ebx
  4170f5:	xor    BYTE PTR [ecx+0x52],dh
  4170f8:	push   esi
  4170f9:	add    esp,edi
  4170fb:	in     eax,dx
  4170fc:	or     BYTE PTR [ebx-0x1fb70000],al
  417102:	cmp    BYTE PTR [esp+eax*4],cl
  417105:	jmp    0x417186
  417107:	or     al,0x72
  417109:	sbb    edi,esi
  41710b:	jmp    0x3f8617
  417110:	push   ecx
  417111:	push   edx
  417112:	inc    esi
  417113:	add    ebp,eax
  417115:	and    edi,edi
  417117:	cmp    al,BYTE PTR [edi-0x37f018f9]
  41711d:	mov    ds:0xabb80efb,eax
  417122:	add    al,cl
  417124:	callw  0x3231
  417128:	iret   
  417129:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41712a:	clc    
  41712b:	sbb    ecx,0xffffffe0
  41712e:	jecxz  0x4170b5
  417130:	push   ss
  417131:	loopne 0x417133
  417133:	comiss xmm7,DWORD PTR [ebx]
  417136:	ret    
  417137:	(bad)  
  417138:	and    DWORD PTR [ebx],esi
  41713a:	rol    DWORD PTR [ecx],cl
  41713c:	lods   al,BYTE PTR ds:[esi]
  41713d:	jmp    0x908:0x65ee0080
  417144:	in     eax,dx
  417145:	pop    eax
  417146:	push   edx
  417147:	xor    dh,0x58
  41714a:	or     edx,DWORD PTR [ebp+ebp*8-0x2b1426f2]
  417151:	pop    ds
  417152:	jg     0x4171b7
  417154:	fild   DWORD PTR [ebp-0x7920bcbd]
  41715a:	add    BYTE PTR [eax],al
  41715c:	das    
  41715d:	dec    esp
  41715e:	addr16 push esp
  417160:	cld    
  417161:	les    edi,FWORD PTR [edi+0x72000086]
  417167:	aad    0x8c
  417169:	inc    ebx
  41716a:	mov    bl,0x20
  41716c:	jb     0x4170ef
  41716e:	adc    al,cl
  417170:	push   DWORD PTR [eax]
  417172:	outs   dx,DWORD PTR ds:[esi]
  417173:	inc    ebp
  417174:	lea    eax,[ebx-0x61]
  417177:	dec    esp
  417178:	addr16 aas 
  41717a:	and    BYTE PTR [ebx],dh
  41717c:	ret    
  41717d:	(bad)  
  41717e:	cmp    ebx,ebx
  417180:	retf   0xac01
  417183:	bound  edi,QWORD PTR [eax+eax*1+0x6e]
  417187:	in     eax,0x7
  417189:	(bad)
  41718c:	add    BYTE PTR [eax],al
  41718e:	das    
  41718f:	test   DWORD PTR [ecx],ecx
  417191:	mov    edi,0x488c5f54
  417196:	or     DWORD PTR [eax],0x60
  417199:	jmp    DWORD PTR [edi-0x76f28f06]
  41719f:	or     eax,0x84ef5a59
  4171a4:	or     eax,0xd771afbe
  4171a9:	aas    
  4171aa:	das    
  4171ab:	les    eax,FWORD PTR [edi+0x70de2b4b]
  4171b1:	(bad)  
  4171b2:	sbb    BYTE PTR [ecx-0x56],ah
  4171b5:	div    DWORD PTR [eax]
  4171b7:	push   esi
  4171b8:	xchg   ebx,eax
  4171b9:	jge    0x4171cd
  4171bb:	sbb    esp,DWORD PTR [ecx-0x39]
  4171be:	add    bl,ch
  4171c0:	cmp    edx,DWORD PTR ds:0x1c25946a
  4171c6:	clc    
  4171c7:	gs sbb eax,0x22000078
  4171cd:	bound  eax,QWORD PTR [esi+0x6ede2f04]
  4171d3:	into   
  4171d4:	adc    bl,ch
  4171d6:	xchg   ebx,eax
  4171d7:	adc    BYTE PTR [eax],ch
  4171d9:	iret   
  4171da:	aaa    
  4171db:	mov    esp,DWORD PTR [edx+edx*4+0x5f]
  4171df:	iret   
  4171e0:	les    ebx,FWORD PTR [edi]
  4171e2:	jno    0x4171bb
  4171e4:	sbb    al,0xd7
  4171e6:	das    
  4171e7:	add    BYTE PTR [edi+eax*4],al
  4171ea:	out    0x30,eax
  4171ec:	fstp   QWORD PTR [edi]
  4171ee:	out    dx,eax
  4171ef:	fst    QWORD PTR [ebx+ebp*8]
  4171f2:	inc    si
  4171f4:	xor    dh,bl
  4171f6:	jmp    0x5f305307
  4171fb:	into   
  4171fc:	inc    eax
  4171fd:	jmp    0x417252
  4171ff:	adc    BYTE PTR ds:0x7ccec11f,dh
  417205:	jmp    0x7cf3:0x9a810065
  41720c:	in     al,dx
  41720d:	icebp  
  41720e:	pop    esi
  41720f:	iret   
  417210:	fs aam 0x34
  417213:	sbb    cl,ah
  417215:	mov    al,0x1f
  417217:	dec    esp
  417218:	sub    ah,BYTE PTR [edx-0x2d]
  41721b:	imul   edx,DWORD PTR [edx-0x66],0xdd54fe67
  417222:	jo     0x4171f2
  417224:	sbb    al,0xeb
  417226:	fs in  eax,0x1e
  417229:	fiadd  WORD PTR [eax]
  41722b:	jmp    0xf33ea8d5
  417230:	add    BYTE PTR [eax],al
  417232:	je     0x417249
  417234:	cmp    ah,dl
  417236:	add    al,BYTE PTR [esi]
  417238:	jo     0x41723d
  41723a:	sub    dl,BYTE PTR [eax+0x10]
  41723d:	(bad)  
  41723f:	leave  
  417240:	or     edx,DWORD PTR [edi+0x38]
  417243:	in     al,0x39
  417245:	xor    al,0x87
  417247:	adc    ah,BYTE PTR [esi]
  417249:	sub    bh,BYTE PTR [edx+0x1d]
  41724c:	adc    eax,0x7cede9b0
  417251:	mov    dl,BYTE PTR [edi-0xc]
  417254:	xchg   DWORD PTR [edi-0x2a3ea320],ebp
  41725a:	aas    
  41725b:	xlat   BYTE PTR ds:[ebx]
  41725c:	pop    ebp
  41725d:	loope  0x417239
  41725f:	jmp    0x417290
  417261:	and    ch,ch
  417263:	pusha  
  417264:	dec    ebx
  417265:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417266:	pop    es
  417267:	pop    ecx
  417268:	or     al,0x6e
  41726a:	jmp    0x4171fe
  41726c:	cld    
  41726d:	ss scas eax,DWORD PTR es:[edi]
  41726f:	adc    eax,0x5d3be9f1
  417274:	test   eax,0x389b2313
  417279:	mov    esp,0xe07eeb18
  41727e:	sbb    bl,BYTE PTR [ebx-0x428e9d04]
  417284:	inc    eax
  417285:	jo     0x4172f0
  417287:	mov    ebp,0x675074fb
  41728c:	aam    0x83
  41728e:	sub    al,0x9b
  417290:	jbe    0x41725f
  417292:	mov    bh,0xa7
  417294:	cld    
  417295:	pop    esp
  417296:	add    BYTE PTR [eax],al
  417298:	inc    ebx
  417299:	xor    ah,bh
  41729b:	push   esp
  41729c:	inc    ebx
  41729d:	fwait
  41729e:	jbe    0x417285
  4172a0:	aad    0xc
  4172a2:	or     ecx,eax
  4172a4:	or     BYTE PTR [esp+edi*8-0x3ea09700],al
  4172ab:	psrlq  mm3,mm0
  4172ae:	adc    al,0x0
  4172b0:	inc    esi
  4172b1:	test   al,0x39
  4172b3:	pop    ebp
  4172b4:	ficom  DWORD PTR [eax+0xee7e9d0]
  4172ba:	(bad)  
  4172bb:	call   FWORD PTR [ebp+0x43c7f8a7]
  4172c1:	out    dx,al
  4172c2:	sti    
  4172c3:	call   DWORD PTR [esi]
  4172c5:	fld    QWORD PTR [ecx+0x1b9117f9]
  4172cb:	cmp    ebx,DWORD PTR [eax]
  4172cd:	xchg   BYTE PTR ds:0xfe0bcc83,cl
  4172d3:	dec    DWORD PTR [ecx]
  4172d5:	dec    edi
  4172d6:	or     al,BYTE PTR [ebx+0xf]
  4172d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172da:	lock rsqrtps xmm0,XMMWORD PTR [esi-0x10]
  4172df:	(bad)  
  4172e0:	jns    0x4172f7
  4172e2:	inc    eax
  4172e3:	adc    al,0x4d
  4172e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172e6:	clc    
  4172e7:	cmp    DWORD PTR [ebx-0x18],edi
  4172ea:	jp     0x4172cb
  4172ec:	sub    eax,0x29840e2a
  4172f1:	or     dh,bh
  4172f3:	call   DWORD PTR ds:0x1f00e897
  4172f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172fa:	adc    BYTE PTR [edi],cl
  4172fc:	add    BYTE PTR [eax],al
  4172fe:	adc    edx,DWORD PTR [ecx]
  417300:	or     al,0x0
  417302:	xchg   BYTE PTR [ecx+0x58],ch
  417305:	cld    
  417306:	pop    ebp
  417307:	and    al,0x78
  417309:	xor    ch,BYTE PTR [ebp-0x4a]
  41730c:	push   0xb2e35573
  417311:	or     edi,DWORD PTR [edi+0x7374f0a5]
  417317:	lahf   
  417318:	std    
  417319:	inc    ebp
  41731a:	(bad)  
  41731b:	fnstcw WORD PTR [edi]
  41731d:	adc    al,0xfa
  41731f:	pop    es
  417320:	jmp    0xb27b:0xc1fc2f1a
  417327:	inc    esi
  417328:	in     al,dx
  417329:	adc    BYTE PTR [edx+eax*8],al
  41732c:	or     al,0x76
  41732e:	sub    DWORD PTR [ebp+ecx*2-0x273f59c1],edx
  417335:	cmp    dh,ch
  417337:	mov    eax,0x41198687
  41733c:	ja     0x4172bf
  41733e:	call   0x6d50:0xaa0d0075
  417345:	std    
  417346:	or     BYTE PTR [ebp+0x330fbd9],ch
  41734c:	shl    dl,0xf8
  41734f:	sbb    BYTE PTR [ebx-0x723ab4bd],cl
  417355:	inc    ebx
  417356:	adc    ecx,DWORD PTR [eax]
  417358:	icebp  
  417359:	and    esi,DWORD PTR [eax+ebx*8-0x4d260013]
  417360:	adc    al,0x89
  417362:	add    BYTE PTR [eax],al
  417364:	in     al,0x30
  417366:	icebp  
  417367:	pop    ss
  417368:	popa   
  417369:	sub    cl,dh
  41736b:	xadd   BYTE PTR [edx+0x4],bl
  41736f:	std    
  417370:	inc    edx
  417371:	lea    ebp,[eax+0x72]
  417374:	(bad)  
  417375:	shl    BYTE PTR [esi-0x7d],1
  417378:	outs   dx,DWORD PTR ds:[esi]
  417379:	mov    eax,0x853c7281
  41737e:	add    BYTE PTR [ecx+0x54],cl
  417381:	pop    edx
  417382:	je     0x4173f5
  417384:	jnp    0x417364
  417386:	pop    es
  417387:	repz mov al,ch
  41738a:	push   es
  41738b:	mov    dh,0xf0
  41738d:	test   DWORD PTR [edi],eax
  41738f:	mov    dh,0xf0
  417391:	add    BYTE PTR [ebp-0x21],0x27
  417395:	jl     0x4173df
  417397:	mov    DWORD PTR [esi-0x40],ebp
  41739a:	shr    bl,0x2e
  41739d:	fsubp  st(1),st
  41739f:	add    ebp,DWORD PTR [edi]
  4173a1:	gs and eax,0xe79fae78
  4173a7:	push   0xffffffb9
  4173a9:	fsubp  st(1),st
  4173ab:	add    esi,DWORD PTR [edx]
  4173ad:	push   eax
  4173ae:	xor    eax,DWORD PTR [ebx]
  4173b0:	sub    dl,BYTE PTR [eax+0x13]
  4173b3:	push   es
  4173b4:	jo     0x417433
  4173b6:	loop   0x4173c4
  4173b8:	cmc    
  4173b9:	fs sbb eax,0xd7a55e7c
  4173bf:	inc    ebx
  4173c0:	scas   eax,DWORD PTR es:[edi]
  4173c1:	(bad)  
  4173c2:	sub    DWORD PTR [ebx-0x701c6594],ecx
  4173c8:	add    BYTE PTR [eax],al
  4173ca:	enter  0xa35a,0x5
  4173ce:	test   al,0x28
  4173d0:	xchg   esi,eax
  4173d1:	lea    esp,[esi+edx*4-0x71]
  4173d5:	jmp    0x4173c2
  4173d7:	and    BYTE PTR [edx+0x3],bh
  4173da:	das    
  4173db:	fsubp  st(1),st
  4173dd:	xor    al,0xef
  4173df:	lods   eax,DWORD PTR fs:[esi]
  4173e1:	ja     0x417455
  4173e3:	cmp    DWORD PTR [eax+0x611def34],0xffffffbf
  4173ea:	fadd   DWORD PTR [edx+0x1ce83558]
  4173f0:	test   DWORD PTR [ebx-0x50],0x6c8b3a28
  4173f7:	call   0xc973:0xe7686cab
  4173fe:	mov    eax,ds:0x2ed15be7
  417403:	popf   
  417404:	or     DWORD PTR [esi+ebx*2],ecx
  417407:	sahf   
  417408:	sub    edi,DWORD PTR [edi+0x3e9dc98]
  41740e:	das    
  41740f:	jecxz  0x417440
  417411:	ins    DWORD PTR es:[edi],dx
  417412:	lahf   
  417413:	push   0x9ca640b2
  417418:	add    DWORD PTR [edx-0x2d],ebp
  41741b:	xchg   esi,eax
  41741c:	mov    DWORD PTR [eax+ecx*8+0x2c68bae8],esp
  417423:	xor    eax,0x5827e941
  417428:	mov    ah,cl
  41742a:	imul   edx,esi,0x0
  41742d:	add    BYTE PTR es:[eax],al
  417430:	mov    ah,0x1a
  417432:	std    
  417433:	jo     0x4174a6
  417435:	mov    es,WORD PTR [esi-0x4621be50]
  41743b:	mov    dh,0xa7
  41743d:	xchg   ebx,eax
  41743e:	jl     0x4174a0
  417440:	jmp    0x3fa080d2
  417445:	sbb    ecx,DWORD PTR [edx-0x3e9e60cc]
  41744b:	out    0xb6,al
  41744d:	sti    
  41744e:	(bad)  
  41744f:	call   0x8400d380
  417454:	mov    bl,0x98
  417456:	or     al,0xee
  417458:	scas   eax,DWORD PTR es:[edi]
  417459:	xchg   esi,eax
  41745a:	adc    ecx,ebp
  41745c:	sub    al,0x93
  41745e:	and    eax,0x42003054
  417463:	jmp    0x2281248b
  417468:	imul   esp,ebx,0xde33a08c
  41746e:	add    BYTE PTR [eax-0xf],ah
  417471:	icebp  
  417472:	out    0xea,eax
  417474:	add    esi,DWORD PTR [eax+0x9e6723f]
  41747a:	cmp    BYTE PTR [eax],dl
  41747c:	aaa    
  41747d:	pop    edi
  41747e:	dec    ebp
  41747f:	fisubr WORD PTR [esi+ebx*8]
  417482:	jg     0x41742b
  417484:	xor    al,0xde
  417486:	je     0x417485
  417488:	adc    BYTE PTR [ebp+0x69249ffb],0x53
  41748f:	in     eax,dx
  417490:	mov    bl,0x9f
  417492:	jmp    0xab417497
  417497:	lods   eax,DWORD PTR ds:[esi]
  417498:	std    
  417499:	dec    DWORD PTR [ebx]
  41749b:	and    DWORD PTR [esi],ecx
  41749d:	test   DWORD PTR [edi+0x11],ebx
  4174a0:	(bad)  
  4174a1:	dec    ebp
  4174a3:	push   ebx
  4174a4:	clc    
  4174a5:	jmp    0x4174d2
  4174a7:	imul   edx,DWORD PTR [ebx+0x1c],0xd93a283d
  4174ae:	jmp    0x1c4cfba8
  4174b3:	pushf  
  4174b4:	sub    BYTE PTR [ebp+0x5b],dh
  4174b7:	pusha  
  4174b8:	test   DWORD PTR [ecx],0xf3da1541
  4174be:	loope  0x4174cc
  4174c0:	xchg   DWORD PTR [ebx+0x17],ecx
  4174c3:	xlat   BYTE PTR ds:[ebx]
  4174c4:	dec    edx
  4174c5:	sub    eax,0xf3ce1521
  4174ca:	mov    cl,0xc
  4174cc:	mov    cl,BYTE PTR [ebp-0x62]
  4174cf:	mov    al,ds:0xd1fa45fd
  4174d4:	aas    
  4174d5:	adc    al,0x30
  4174d7:	ins    DWORD PTR es:[edi],dx
  4174d8:	in     al,0xde
  4174da:	add    al,0xe1
  4174dc:	add    BYTE PTR [ebx-0x2fd679b8],cl
  4174e2:	popf   
  4174e3:	ss push cs
  4174e5:	xchg   DWORD PTR [esi+ecx*1],eax
  4174e8:	(bad)  
  4174e9:	inc    ebp
  4174eb:	cmp    ah,ah
  4174ed:	retf   0xe0d4
  4174f0:	add    bh,al
  4174f2:	mov    esp,esp
  4174f4:	sti    
  4174f5:	inc    esi
  4174f7:	loopne 0x41747a
  4174f9:	clc    
  4174fa:	add    BYTE PTR [eax],al
  4174fc:	(bad)  
  4174fd:	fisttp DWORD PTR [edx+edi*4+0x3b00e094]
  417504:	mov    al,0x7c
  417506:	or     eax,0xfe0de483
  41750b:	inc    DWORD PTR [ecx+0x2f431242]
  417511:	or     BYTE PTR [edi+0xa],dh
  417514:	sti    
  417515:	pushf  
  417516:	add    ecx,DWORD PTR [esi-0x28c6853]
  41751c:	lods   al,BYTE PTR ds:[esi]
  41751d:	loopne 0x417527
  41751f:	jle    0x41755f
  417521:	or     BYTE PTR [edi+0xb],dh
  417524:	(bad)  [edi-0x794d057b]
  41752a:	add    BYTE PTR [eax],al
  41752c:	and    dl,bh
  41752e:	jecxz  0x417520
  417530:	dec    eax
  417531:	stos   DWORD PTR es:[edi],eax
  417532:	jg     0x4175b2
  417534:	iret   
  417535:	xchg   BYTE PTR [ebx],al
  417537:	or     ebp,0x57
  41753a:	jae    0x417539
  41753c:	xor    BYTE PTR [ecx-0x4e8dc8f0],bh
  417542:	idiv   BYTE PTR [edi-0x134ea]
  417548:	das    
  417549:	adc    dh,0x6b
  41754c:	pushf  
  41754d:	arpl   WORD PTR [eax+0x6df23539],ax
  417553:	inc    ecx
  417554:	adc    al,0x5c
  417556:	cmp    eax,DWORD PTR [ebx+0x23]
  417559:	xchg   BYTE PTR [eax],al
  41755b:	add    BYTE PTR [edi],ch
  41755d:	or     BYTE PTR [eax-0x1],bh
  417560:	add    BYTE PTR [eax],al
  417562:	cmp    ecx,edi
  417564:	xlat   BYTE PTR ds:[ebx]
  417565:	add    DWORD PTR [edi],ebp
  417567:	test   DWORD PTR [edi],esi
  417569:	pop    esi
  41756a:	dec    ebx
  41756b:	mov    WORD PTR [edi+0x40],?
  41756e:	(bad)  [ebx+esi*2]
  417571:	or     eax,0x80bf9881
  417576:	lds    edi,FWORD PTR [esi+0x3]
  417579:	test   BYTE PTR ds:0xacfd72d8,cl
  41757f:	pop    ds
  417580:	and    BYTE PTR ds:0xfd6faeb3,cl
  417586:	mov    al,ds:0x2fa07a06
  41758b:	fsubp  st(1),st
  41758d:	add    esp,DWORD PTR [edx]
  41758f:	pop    edx
  417590:	in     eax,dx
  417591:	jb     0x41751d
  417593:	xchg   ebx,eax
  417594:	adc    eax,eax
  417596:	sbb    al,0xd5
  417598:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417599:	psubw  mm4,QWORD PTR [eax-0x21d2dcef]
  4175a0:	jmp    0xe92b61e3
  4175a5:	add    ebp,DWORD PTR [edi]
  4175a7:	fisub  WORD PTR [esi+0x7b]
  4175aa:	pop    eax
  4175ab:	in     al,0x75
  4175ad:	adc    al,0x2d
  4175af:	fsubp  st(1),st
  4175b1:	cmp    cl,ch
  4175b3:	add    ebx,esp
  4175b5:	add    BYTE PTR [edi-0x71],0xcb
  4175b9:	jne    0x4175e5
  4175bb:	dec    esp
  4175bc:	xlat   BYTE PTR ds:[ebx]
  4175bd:	shr    BYTE PTR [edi+0x39eff198],0x5f
  4175c4:	mov    al,0x24
  4175c6:	add    BYTE PTR [eax],al
  4175c8:	fwait
  4175c9:	loop   0x417633
  4175cb:	jp     0x41759c
  4175cd:	fucomp st(1)
  4175cf:	add    esp,DWORD PTR [edx]
  4175d1:	pop    ecx
  4175d2:	lods   eax,DWORD PTR ds:[esi]
  4175d3:	jb     0x4175df
  4175d5:	xchg   ebx,eax
  4175d6:	xchg   ebx,eax
  4175d7:	mov    edi,0x1024d51c
  4175dc:	jns    0x417587
  4175de:	xchg   ecx,eax
  4175df:	fs lock xchg edx,eax
  4175e2:	jmp    0x2f03:0xe8ea6c3c
  4175e9:	fisub  WORD PTR [esi+0x7c]
  4175ec:	fsub   st,st(3)
  4175ee:	jne    0x417644
  4175f0:	rcl    BYTE PTR [edx+0x26938ea],1
  4175f6:	jecxz  0x417578
  4175f8:	xchg   DWORD PTR [esi+0x4c2a754b],ecx
  4175fe:	xlat   BYTE PTR ds:[ebx]
  4175ff:	shr    BYTE PTR [edi+0x3df7f097],0x5f
  417606:	add    DWORD PTR [ebx],esi
  417608:	sub    cl,ah
  41760a:	mov    dl,BYTE PTR [ebp+ebx*1-0x6f]
  41760e:	cld    
  41760f:	push   0xe9015f15
  417614:	sub    al,0xe1
  417616:	test   BYTE PTR [eax-0x3],ah
  417619:	nop
  41761a:	cld    
  41761b:	push   cs
  41761c:	mov    eax,0x20ac39ee
  417621:	adc    al,0xd2
  417623:	adc    bh,al
  417625:	xchg   edx,eax
  417626:	cld    
  417627:	jmp    0xe856954f
  41762c:	add    BYTE PTR [eax],al
  41762e:	sub    al,0xde
  417630:	add    BYTE PTR [edx-0x2c],ch
  417633:	xchg   edx,eax
  417634:	or     ebp,DWORD PTR [ebp-0x50]
  417637:	xchg   edx,eax
  417638:	cld    
  417639:	jmp    0xdeaeaa45
  41763e:	scas   eax,DWORD PTR es:[edi]
  41763f:	or     eax,esi
  417641:	(bad)  
  417642:	mov    ebx,0xefdab2e0
  417647:	pop    esi
  417648:	mul    ebx
  41764a:	sub    esp,DWORD PTR [edx+0x53]
  41764d:	mov    ebx,0xa38093a3
  417652:	sub    DWORD PTR [eax],edx
  417654:	or     eax,0x15d8668
  417659:	jmp    0x24c7598a
  41765e:	jge    0x4175f3
  417660:	cld    
  417661:	xchg   BYTE PTR [ecx+0x3f2439ed],dh
  417667:	adc    dl,dl
  417669:	add    BYTE PTR [ecx+edx*4],0xfc
  41766d:	jmp    0x70812291
  417672:	loope  0x417661
  417674:	aaa    
  417675:	sub    esi,DWORD PTR [ebx]
  417677:	bound  eax,QWORD PTR [edi-0x18]
  41767a:	sub    al,0xde
  41767c:	out    0xea,eax
  41767e:	jmp    FWORD PTR [ebx-0x57d2ffc1]
  417684:	push   0x7af150f
  417689:	add    BYTE PTR [esi+0xd0bb2da],dl
  41768f:	mov    ds:0x8a30,eax
  417694:	call   0xd91:0x378041ec
  41769b:	test   DWORD PTR [edi+0x29fffe0f],ecx
  4176a1:	push   eax
  4176a2:	adc    BYTE PTR [ecx],bh
  4176a4:	ret    
  4176a5:	loope  0x417721
  4176a7:	fnstcw WORD PTR [edi]
  4176a9:	hlt    
  4176aa:	sti    
  4176ab:	call   DWORD PTR [esi-0x32]
  4176ae:	into   
  4176af:	inc    edx
  4176b0:	iret   
  4176b1:	lahf   
  4176b2:	adc    BYTE PTR [ebx],bh
  4176b4:	test   ch,bl
  4176b6:	mov    WORD PTR [esi],cs
  4176b8:	push   edi
  4176b9:	fld    QWORD PTR [eax]
  4176bb:	jmp    0x417712
  4176bd:	enter  0x42ce,0x1d
  4176c1:	lods   al,BYTE PTR ds:[esi]
  4176c2:	push   0x7f3c50f
  4176c7:	add    BYTE PTR [esi],dl
  4176c9:	fdiv   QWORD PTR [edx+0x30b48d0b]
  4176cf:	mov    bh,dl
  4176d1:	jmp    0xe5e8f717
  4176d6:	or     eax,0xfe0adb84
  4176db:	call   FWORD PTR [ecx+0x533910a6]
  4176e1:	idiv   BYTE PTR [edx-0x27]
  4176e4:	lahf   
  4176e5:	add    DWORD PTR cs:[eax],eax
  4176e8:	(bad)  
  4176e9:	(bad)  
  4176ea:	into   
  4176eb:	inc    edx
  4176ec:	dec    edi
  4176ed:	mov    bh,0x10
  4176ef:	cmp    eax,DWORD PTR [esp+ebx*8-0x23392d74]
  4176f6:	add    bl,ch
  4176f8:	add    BYTE PTR [eax],al
  4176fa:	aad    0xc7
  4176fc:	into   
  4176fd:	inc    edx
  4176fe:	das    
  4176ff:	in     al,dx
  417700:	into   
  417701:	imul   ebp,DWORD PTR [eax],0x4
  417704:	dec    ebx
  417705:	or     al,0x2f
  417707:	xchg   edi,edi
  417709:	mov    ch,0x34
  41770b:	or     al,0xd7
  41770d:	xor    esi,DWORD PTR [ebp-0x50beea86]
  417713:	and    eax,0x15aa0d06
  417718:	jbe    0x417717
  41771a:	mov    bh,ch
  41771c:	leave  
  41771d:	adc    eax,DWORD PTR [esi+0x42]
  417720:	adc    al,0x7e
  417722:	push   esi
  417723:	frstor [ebp+0x33872f00]
  417729:	shr    ch,cl
  41772b:	or     eax,0xc52413da
  417730:	dec    DWORD PTR [ebx+0x86c1]
  417736:	inc    esp
  417737:	xor    DWORD PTR [ebx],0xffffffd2
  41773a:	in     eax,dx
  41773b:	mov    ebx,0x4306bce
  417740:	xchg   edx,eax
  417741:	or     al,0x2f
  417743:	xchg   edi,edi
  417745:	mov    ch,0x24
  417747:	or     al,0xda
  417749:	xor    esi,DWORD PTR [ebp-0x50beea7f]
  41774f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417750:	add    eax,0x75eab30d
  417755:	std    
  417756:	adc    BYTE PTR [ecx],bh
  417758:	leave  
  417759:	adc    eax,DWORD PTR [esi-0x46]
  41775c:	sbb    BYTE PTR [esi+0x0],bh
  41775f:	add    dh,ah
  417761:	pop    esp
  417762:	fdiv   DWORD PTR [eax]
  417764:	ffree  st(3)
  417766:	jge    0x4177bb
  417768:	sbb    ebx,DWORD PTR [esi+eax*2+0x36c4e7c]
  41776f:	xor    ebp,edi
  417771:	ret    
  417772:	sub    ebx,DWORD PTR [esi+0x4b]
  417775:	mov    al,0x83
  417777:	addr16 and ebx,esi
  41777a:	jmp    0xef89b182
  41777f:	jle    0x4177da
  417781:	retf   0xff5f
  417784:	sub    DWORD PTR [ebx],ebx
  417786:	push   0x64
  417788:	pop    ds
  417789:	fild   QWORD PTR [ebx+eiz*1-0x68]
  41778d:	(bad)  
  41778e:	cmp    esi,DWORD PTR [edx-0x14]
  417791:	jmp    0x107e4086
  417796:	adc    DWORD PTR [esi+0x5e],ebx
  417799:	retf   
  41779a:	aaa    
  41779b:	lds    esi,FWORD PTR [ecx+0x6d2ef629]
  4177a1:	adc    al,dh
  4177a3:	pop    esi
  4177a4:	cs retf 
  4177a6:	aaa    
  4177a7:	lds    esi,FWORD PTR [edi]
  4177a9:	xor    BYTE PTR [esi-0x123551fe],dl
  4177af:	add    ebp,DWORD PTR [edi]
  4177b1:	fistp  QWORD PTR [ebx]
  4177b3:	(bad)  
  4177b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177b5:	sub    BYTE PTR [esi+0x26ed237d],dh
  4177bb:	test   BYTE PTR [eax-0x12],ch
  4177be:	jmp    0x71:0xd38e5687
  4177c5:	add    BYTE PTR [edx],bh
  4177c7:	sbb    esi,esi
  4177c9:	sub    ch,ah
  4177cb:	jmp    0x20f7c313
  4177d0:	ret    0xe02d
  4177d3:	fisubr WORD PTR [ebp-0x1e]
  4177d6:	or     eax,0x9485ab8f
  4177db:	sub    dl,0x0
  4177de:	lods   al,BYTE PTR ds:[esi]
  4177df:	imul   ebp,ebp,0x3
  4177e2:	das    
  4177e3:	arpl   WORD PTR ds:0x909bae78,di
  4177e9:	jnp    0x41783f
  4177eb:	xchg   edx,eax
  4177ec:	outs   dx,BYTE PTR ds:[si]
  4177ee:	cmp    bl,bh
  4177f0:	(bad)  
  4177f1:	jmp    0x417828
  4177f3:	fiadd  WORD PTR [eax]
  4177f5:	jmp    0x15d73259
  4177fa:	leave  
  4177fb:	iret   
  4177fc:	add    BYTE PTR [eax-0x10],dh
  4177ff:	jmp    0xaf88:0x6d02837
  417806:	fcom   st(5)
  417808:	fcomp  st(2)
  41780a:	xlat   BYTE PTR ds:[ebx]
  41780b:	pop    ebp
  41780c:	jnp    0x4177ef
  41780e:	sub    al,0xa
  417810:	pop    ss
  417811:	shr    DWORD PTR [ecx+edx*4],cl
  417814:	jae    0x4177e7
  417816:	sbb    esp,DWORD PTR [esi+0x6520978e]
  41781c:	rcl    BYTE PTR [ecx],0x7
  41781f:	ss cld 
  417821:	push   ds
  417822:	test   al,0x9d
  417824:	jbe    0x4177e5
  417826:	sti    
  417827:	and    bh,cl
  417829:	add    al,BYTE PTR [eax]
  41782b:	add    BYTE PTR [eax],ah
  41782d:	gs push ebx
  41782f:	in     eax,0x4b
  417831:	pushf  
  417832:	cmp    BYTE PTR [ecx],ah
  417834:	jmp    0x180a:0xea86
  41783a:	sub    eax,0xf75d5174
  41783f:	call   0x2ac84a84
  417844:	sub    al,0xd4
  417846:	inc    edx
  417847:	add    al,0x37
  417849:	retf   0xce3f
  41784c:	imul   ebp,edx,0xa473439
  417852:	mov    al,0xd2
  417854:	inc    ebp
  417855:	mov    bh,0xc8
  417857:	(bad)  
  417858:	out    0xf9,al
  41785a:	xchg   DWORD PTR [ecx-0x4cc750cd],ebx
  417860:	push   es
  417861:	add    ecx,DWORD PTR [eax+0x7d2483c1]
  417867:	ins    BYTE PTR es:[edi],dx
  417868:	ins    BYTE PTR es:[edi],dx
  417869:	adc    dl,BYTE PTR [eax]
  41786b:	shl    cl,cl
  41786d:	in     eax,0x72
  41786f:	add    al,ah
  417871:	rol    bl,cl
  417873:	inc    ecx
  417874:	pop    edi
  417875:	lahf   
  417876:	pop    eax
  417877:	cmp    eax,DWORD PTR [edi+0x57698dde]
  41787d:	push   cs
  41787e:	inc    BYTE PTR [ebx+0xf0111d3]
  417884:	dec    ebx
  417885:	and    esp,ebp
  417887:	jmp    DWORD PTR [ecx-0x46]
  41788a:	push   edi
  41788b:	cld    
  41788c:	shl    DWORD PTR [ebx+0x22],1
  41788f:	lock add BYTE PTR [eax],al
  417892:	icebp  
  417893:	or     eax,0xa22a458a
  417898:	add    DWORD PTR [ebp+0x2a],0xf
  41789c:	jo     0x4178c2
  41789e:	or     eax,0x51006726
  4178a3:	xchg   esp,eax
  4178a4:	sbb    BYTE PTR [ebx+0x18700e3d],cl
  4178aa:	mov    eax,0x2110700e
  4178af:	xchg   esp,eax
  4178b0:	or     bh,bh
  4178b2:	jmp    0x41783c
  4178b4:	in     al,0x55
  4178b6:	sub    cl,BYTE PTR [esi]
  4178b8:	dec    BYTE PTR [ebx-0x35]
  4178bb:	and    BYTE PTR [esi],cl
  4178bd:	test   DWORD PTR [edx+0xd0000df],edi
  4178c3:	scas   eax,DWORD PTR es:[edi]
  4178c4:	clc    
  4178c5:	jae    0x417941
  4178c7:	sub    ebp,edx
  4178c9:	out    dx,eax
  4178ca:	popa   
  4178cb:	std    
  4178cc:	add    ecx,ebx
  4178ce:	ins    DWORD PTR es:[edi],dx
  4178cf:	push   ebx
  4178d0:	test   BYTE PTR [ebp+0xa],al
  4178d3:	mov    eax,0x8bc7dbb
  4178d8:	inc    ebx
  4178d9:	ins    BYTE PTR es:[edi],dx
  4178da:	sbb    eax,0xf1897219
  4178df:	push   edx
  4178e0:	adc    al,BYTE PTR [ebx+0xc6fdecc]
  4178e6:	push   ebp
  4178e7:	mov    ecx,0xd2f73d8
  4178ec:	test   DWORD PTR [ecx],edi
  4178ee:	and    eax,0xee928f2
  4178f3:	clc    
  4178f4:	data16 or al,BYTE PTR [eax]
  4178f7:	add    BYTE PTR [ebx-0x55],bl
  4178fa:	jg     0x41797a
  4178fc:	dec    edi
  4178fd:	ja     0x4178f8
  4178ff:	sub    DWORD PTR [eax+edx*1-0x7e18c08],0x66
  417907:	or     al,0x3b
  417909:	jnp    0x417890
  41790b:	cli    
  41790c:	mov    dl,0x76
  41790e:	add    BYTE PTR [eax],al
  417910:	and    BYTE PTR [edx],al
  417912:	(bad)  
  417914:	test   al,0x23
  417916:	sar    ah,0xea
  417919:	mov    dl,0x2d
  41791b:	dec    ebx
  41791c:	inc    ebx
  41791d:	push   ebx
  41791e:	scas   al,BYTE PTR es:[edi]
  41791f:	out    0xf,eax
  417921:	mov    esp,0xa544fd6b
  417926:	fmul   QWORD PTR [esp+ebp*4]
  417929:	test   eax,0x8378fd6b
  41792e:	mov    dh,0x11
  417930:	lods   al,BYTE PTR ds:[esi]
  417931:	lock std 
  417933:	or     al,0xb3
  417935:	dec    edi
  417936:	imul   edi,ebp,0x60
  417939:	mul    DWORD PTR [esi+0x20]
  41793c:	sub    bl,bh
  41793e:	mov    esi,0x857b50fc
  417943:	cli    
  417944:	(bad)  
  417945:	jbe    0x417947
  417947:	add    BYTE PTR [eax],dh
  417949:	add    esi,DWORD PTR [esi]
  41794b:	std    
  41794c:	cmp    BYTE PTR [ebx+0x35f43fbf],dh
  417952:	in     al,dx
  417953:	iret   
  417954:	push   ss
  417955:	icebp  
  417956:	imul   edi,ebp,0x20
  417959:	loope  0x417925
  41795b:	imul   eax,DWORD PTR [eax],0x0
  41795e:	sub    al,bh
  417960:	idiv   esp
  417962:	adc    BYTE PTR ds:0xde1cb5fb,bh
  417968:	imul   bp,WORD PTR [eax],0xf912
  41796d:	xor    ch,0xbe
  417970:	sbb    eax,0x4a887000
  417975:	add    ebp,DWORD PTR [edi]
  417977:	fdivrp st(2),st
  417979:	mov    BYTE PTR [eax],ch
  41797b:	mov    edi,DWORD PTR [ebx+0x6e]
  41797e:	outs   dx,BYTE PTR ds:[esi]
  41797f:	push   ds
  417980:	scas   eax,DWORD PTR es:[edi]
  417981:	inc    esp
  417982:	push   ebx
  417983:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417984:	sub    DWORD PTR [ebp-0x37],0x612a638b
  41798b:	cli    
  41798c:	jmp    0x226e:0x538cd682
  417993:	push   esp
  417994:	test   DWORD PTR [edx-0x780d275b],0x6e3b8c88
  41799e:	scas   al,BYTE PTR es:[edi]
  41799f:	mov    bh,bl
  4179a1:	(bad)  
  4179a2:	lods   al,BYTE PTR ds:[esi]
  4179a3:	jle    0x4179d1
  4179a5:	outs   dx,BYTE PTR ds:[esi]
  4179a6:	mov    bl,BYTE PTR [edi+0x20]
  4179a9:	push   DWORD PTR [ebx]
  4179ab:	bound  esi,QWORD PTR [ebx]
  4179ad:	ins    DWORD PTR es:[edi],dx
  4179ae:	jp     0x41793b
  4179b0:	imul   esp,DWORD PTR [si],0x693d65db
  4179b7:	mov    eax,DWORD PTR [ebx]
  4179b9:	test   BYTE PTR [ebp+0x61],ah
  4179bc:	jmp    0x41:0x6ddb2f03
  4179c3:	add    BYTE PTR [ecx-0x75],dl
  4179c6:	jmp    0x417989
  4179c8:	or     bh,al
  4179ca:	test   al,0xf0
  4179cc:	xor    BYTE PTR [ebp-0x6d],0x6e
  4179d0:	cmp    cl,BYTE PTR [ebx-0x253b31f1]
  4179d6:	cbw    
  4179d8:	sub    DWORD PTR [ebx-0x1125023d],ecx
  4179de:	pushw  0x25
  4179e1:	adc    al,BYTE PTR [ecx]
  4179e3:	shr    BYTE PTR [edi+0x21350887],cl
  4179e9:	pop    ebp
  4179ea:	div    ebp
  4179ec:	clc    
  4179ed:	fstp   TBYTE PTR [edi-0x5d]
  4179f0:	clc    
  4179f1:	push   cs
  4179f2:	or     eax,0x15f8568
  4179f7:	jmp    0x72c75328
  4179fc:	push   ecx
  4179fd:	mov    esp,edi
  4179ff:	sub    dh,bl
  417a01:	vpmaddwd xmm2,xmm7,XMMWORD PTR [edx]
  417a05:	add    DWORD PTR [ecx-0x7576a591],0xffffffac
  417a0c:	sbb    ch,al
  417a0e:	shr    esi,0x39
  417a11:	psubq  mm2,QWORD PTR [esi+0x42]
  417a15:	lds    ebx,FWORD PTR [edx-0x43]
  417a18:	stos   DWORD PTR es:[edi],eax
  417a19:	pop    ebp
  417a1a:	dec    edi
  417a1b:	inc    edi
  417a1c:	adc    cl,BYTE PTR [ecx+0x552e770c]
  417a22:	push   ebx
  417a23:	std    
  417a24:	sbb    ah,dl
  417a26:	adc    ch,ah
  417a28:	add    BYTE PTR [eax],al
  417a2a:	mov    ebx,DWORD PTR [edi+0x5d]
  417a2d:	daa    
  417a2e:	adc    cl,BYTE PTR [ecx-0x118fe1c0]
  417a34:	cmp    DWORD PTR [eax+ebx*1-0x56ff24f6],esp
  417a3b:	mov    ah,bh
  417a3d:	push   es
  417a3e:	in     al,0x1e
  417a40:	adc    eax,0x8dd8edc2
  417a45:	stos   BYTE PTR es:[edi],al
  417a46:	ret    0xfc88
  417a49:	mov    dl,0x7a
  417a4b:	test   BYTE PTR [ebx],0x6a
  417a4e:	or     al,0x8c
  417a50:	cld    
  417a51:	fidivr WORD PTR [ebx]
  417a53:	push   eax
  417a54:	add    BYTE PTR [edx+0x5a],ah
  417a57:	into   
  417a58:	repnz in eax,0x3c
  417a5b:	loop   0x417a68
  417a5d:	add    BYTE PTR [edx-0x26000519],dl
  417a63:	sahf   
  417a64:	std    
  417a65:	inc    ebp
  417a66:	repnz mov ah,0x47
  417a69:	adc    al,0x5a
  417a6b:	sbb    ah,ah
  417a6d:	sbb    al,0xc8
  417a6f:	cli    
  417a70:	std    
  417a71:	mov    DWORD PTR [ebx-0x1a],edx
  417a74:	cmp    ecx,eax
  417a76:	or     DWORD PTR [ecx],ecx
  417a78:	or     al,0xfe
  417a7a:	mov    ecx,0x3a5e39fa
  417a7f:	mov    eax,DWORD PTR [ecx-0x205a412]
  417a85:	movups xmm3,xmm6
  417a88:	mov    DWORD PTR [esi-0x7e],edx
  417a8b:	adc    eax,DWORD PTR ds:0xd7000010
  417a91:	mov    bh,BYTE PTR [edi-0x8]
  417a94:	pop    ebx
  417a95:	cli    
  417a96:	std    
  417a97:	inc    ebx
  417a98:	pop    ecx
  417a99:	mov    al,ds:0xf1cb3910
  417a9e:	jl     0x417a7e
  417aa0:	jmp    DWORD PTR [esi]
  417aa2:	clc    
  417aa3:	call   FWORD PTR [ecx+0x4]
  417aa6:	inc    eax
  417aa7:	adc    al,0x9d
  417aa9:	sbb    al,0xe
  417aab:	lea    edi,[ecx]
  417aad:	clc    
  417aae:	std    
  417aaf:	dec    DWORD PTR [ebp+0x50f689b]
  417ab5:	cmp    eax,edi
  417ab7:	call   FWORD PTR [ecx]
  417ab9:	mov    dh,BYTE PTR [esi+0x30b2cd03]
  417abf:	not    BYTE PTR [edx-0x13]
  417ac2:	sti    
  417ac3:	push   cs
  417ac4:	shl    BYTE PTR [edx],cl
  417ac6:	clc    
  417ac7:	call   FWORD PTR [ecx+0x49]
  417aca:	std    
  417acb:	inc    ebp
  417acc:	bound  esi,QWORD PTR [edi+eax*2-0x1bec35ec]
  417ad3:	mov    eax,0x89fdf55b
  417ad8:	das    
  417ad9:	mov    edx,0xa7ee3910
  417ade:	jns    0x417a8b
  417ae0:	and    ah,BYTE PTR [eax+0x1b793968]
  417ae6:	clc    
  417ae7:	and    BYTE PTR [ebp+0x38fd6851],0x11
  417aee:	add    al,0x89
  417af0:	pop    ecx
  417af1:	stos   DWORD PTR es:[edi],eax
  417af2:	jb     0x417af8
  417af4:	add    BYTE PTR [eax],al
  417af6:	pop    ds
  417af7:	xchg   edi,esi
  417af9:	sbb    BYTE PTR [ebx+0x6cfd6871],0x58
  417b00:	ret    0x2613
  417b03:	rcl    BYTE PTR [eax],cl
  417b05:	jl     0x417b00
  417b07:	ins    DWORD PTR es:[edi],dx
  417b08:	jg     0x417b05
  417b0a:	ror    BYTE PTR [edi],1
  417b0c:	jle    0x417b51
  417b0e:	and    ecx,DWORD PTR [ebp+eax*2+0xd]
  417b12:	mov    dl,0x7b
  417b14:	imul   edi,ebp,0x6bc6bbb8
  417b1a:	and    ah,dh
  417b1c:	int3   
  417b1d:	cli    
  417b1e:	test   al,0x17
  417b20:	clc    
  417b21:	mov    ch,0x2c
  417b23:	or     al,0xcf
  417b25:	xor    esp,DWORD PTR [ecx+0x20101082]
  417b2b:	sti    
  417b2c:	loop   0x417b28
  417b2e:	mov    BYTE PTR [edi-0x7515033d],dh
  417b34:	sub    eax,0x4a6b234b
  417b39:	out    0xdb,eax
  417b3b:	icebp  
  417b3c:	addr16 std 
  417b3e:	cmp    BYTE PTR [ecx],dh
  417b40:	rol    BYTE PTR [ebx],0x30
  417b43:	leave  
  417b44:	mov    bh,0x2
  417b46:	outs   dx,BYTE PTR ds:[esi]
  417b47:	(bad)  
  417b48:	cld    
  417b49:	or     BYTE PTR [esi+0x1],ch
  417b4c:	jmp    0xf81da755
  417b51:	or     al,0x79
  417b53:	(bad)  [edx]
  417b55:	add    eax,0x62b502a
  417b5a:	add    BYTE PTR [eax],al
  417b5c:	jo     0x417bdb
  417b5e:	loop   0x417b5e
  417b60:	jmp    0x62c54d40
  417b65:	xor    bh,BYTE PTR [esi]
  417b67:	pop    eax
  417b68:	adc    BYTE PTR [esi+eax*8+0x6a],ch
  417b6c:	adc    bl,al
  417b6e:	jnp    0x417b2a
  417b70:	das    
  417b71:	xlat   BYTE PTR ds:[ebx]
  417b72:	jae    0x417b46
  417b74:	sub    al,0x9d
  417b76:	mov    ebx,edi
  417b78:	daa    
  417b79:	xchg   esp,eax
  417b7a:	jno    0x417b34
  417b7c:	cld    
  417b7d:	(bad)  [eax-0x250d86d2]
  417b83:	ja     0x417ba9
  417b85:	fucomi st,st(1)
  417b87:	add    ebp,DWORD PTR [esi+0x29e80986]
  417b8d:	lahf   
  417b8e:	sub    eax,0xe9de2d24
  417b93:	add    edx,esi
  417b95:	pop    ss
  417b96:	addr16 loopne 0x417bb1
  417b99:	fimul  WORD PTR [esi-0x44]
  417b9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b9d:	and    DWORD PTR [esi],ecx
  417b9f:	(bad)  
  417ba0:	clc    
  417ba1:	xchg   ch,dl
  417ba3:	and    esi,DWORD PTR [edx]
  417ba5:	push   eax
  417ba6:	jmp    0x417c12
  417ba8:	sbb    al,0xea
  417baa:	jmp    0x88c3:0x9a1ebfb1
  417bb1:	mov    BYTE PTR [ebp-0x4350d1f5],dh
  417bb7:	push   0xfffffffc
  417bb9:	in     eax,dx
  417bba:	outs   dx,BYTE PTR ds:[esi]
  417bbb:	ds jb  0x417bcf
  417bbe:	out    0x6a,al
  417bc0:	add    BYTE PTR [eax],al
  417bc2:	(bad)  
  417bc4:	add    esi,ecx
  417bc6:	add    DWORD PTR [edi+0x126f8003],0x8a3128ef
  417bd0:	add    esi,esi
  417bd2:	(bad)  
  417bd3:	fadd   DWORD PTR [ebp-0x378be6b]
  417bd9:	idiv   BYTE PTR [esi+0x21]
  417bdc:	add    ch,dh
  417bde:	jle    0x417bf9
  417be0:	jmp    DWORD PTR [edi-0x57f8296d]
  417be6:	sub    al,BYTE PTR [esi-0x781180f4]
  417bec:	or     esi,DWORD PTR [edi-0x2a]
  417bef:	fadd   st(1),st
  417bf1:	leave  
  417bf2:	or     edx,esi
  417bf4:	shr    DWORD PTR [ecx+0x57],0xc6
  417bf8:	push   esp
  417bf9:	sbb    eax,0xc97e5ccf
  417bfe:	sub    al,0xd9
  417c00:	test   DWORD PTR [ebx+0x32],ecx
  417c03:	fiadd  WORD PTR [eax]
  417c05:	ficomp WORD PTR [esi-0x4cc0f420]
  417c0b:	sbb    eax,0xdd2b2951
  417c10:	clc    
  417c11:	sbb    ch,0x55
  417c14:	push   esi
  417c15:	aad    0xe2
  417c17:	fdiv   st(3),st
  417c19:	fdiv   QWORD PTR [eax]
  417c1b:	mov    DWORD PTR [esi+0x1],esi
  417c1e:	fisttp QWORD PTR [ecx+0xb17f976]
  417c24:	or     eax,0x9000004e
  417c29:	fsubp  st(0),st
  417c2b:	inc    ecx
  417c2c:	adc    ecx,DWORD PTR [ecx-0x27149b04]
  417c32:	test   DWORD PTR [ecx],esi
  417c34:	mov    DWORD PTR [esi-0x19779d04],eax
  417c3a:	out    0xd2,eax
  417c3c:	sti    
  417c3d:	adc    ah,BYTE PTR ds:0x41ea6072
  417c43:	mov    eax,0xed76897c
  417c48:	jecxz  0x417bde
  417c4a:	cld    
  417c4b:	add    bl,bl
  417c4d:	and    dl,BYTE PTR [ebx-0x1]
  417c50:	fucomi st,st(2)
  417c52:	std    
  417c53:	jne    0x417ca7
  417c55:	cmc    
  417c56:	outs   dx,DWORD PTR ds:[esi]
  417c57:	or     BYTE PTR [esi],ch
  417c59:	leave  
  417c5a:	loopne 0x417c5b
  417c5c:	push   ecx
  417c5d:	pop    es
  417c5e:	ror    DWORD PTR [edi],0xcb
  417c61:	leave  
  417c62:	push   es
  417c63:	add    BYTE PTR [esi],dl
  417c65:	pop    ebx
  417c66:	mov    BYTE PTR [ebx],0x95
  417c69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c6a:	sbb    al,0x0
  417c6c:	popf   
  417c6d:	fistp  QWORD PTR [ecx]
  417c6f:	inc    esi
  417c70:	or     dh,bh
  417c72:	add    cl,BYTE PTR [edi]
  417c74:	xchg   esp,eax
  417c75:	push   ds
  417c76:	loope  0x417c77
  417c78:	shl    DWORD PTR [ebx-0x7c9e160c],1
  417c7e:	cld    
  417c7f:	call   FWORD PTR [ebx+eiz*1]
  417c82:	in     al,0xa8
  417c84:	int3   
  417c85:	loope  0x417c87
  417c87:	mov    eax,DWORD PTR [ebx-0x42]
  417c8a:	or     eax,0x390000b6
  417c8f:	loope  0x417ccc
  417c91:	push   ecx
  417c92:	push   ecx
  417c93:	je     0x417cb1
  417c95:	lea    ebx,[ecx]
  417c97:	fdiv   st(5),st
  417c99:	jne    0x417c8d
  417c9b:	or     BYTE PTR [eax+0xc],al
  417c9e:	push   ecx
  417c9f:	je     0x417cb5
  417ca1:	mov    edi,ebp
  417ca3:	scas   al,BYTE PTR es:[edi]
  417ca4:	std    
  417ca5:	jne    0x417c4d
  417ca7:	mov    cl,0xd
  417ca9:	mov    dh,0x89
  417cab:	xchg   BYTE PTR [esi+0x3cb1c680],dh
  417cb1:	add    BYTE PTR [ecx+0x74],dl
  417cb4:	add    al,0x3
  417cb6:	pop    ecx
  417cb7:	fcmovbe st,st(0)
  417cb9:	call   0x3f7e80
  417cbe:	std    
  417cbf:	clc    
  417cc0:	jnp    0x417cc1
  417cc2:	jae    0x417cc1
  417cc4:	std    
  417cc5:	jmp    FWORD PTR [edi]
  417cc7:	bound  eax,QWORD PTR [ebx]
  417cc9:	std    
  417cca:	fldenv [esi+0x69]
  417ccd:	jae    0x417cfa
  417ccf:	fmul   QWORD PTR [edx]
  417cd1:	push   0x57003739
  417cd6:	out    0xf1,al
  417cd8:	aas    
  417cd9:	jae    0x417d0f
  417cdb:	dec    cl
  417cdd:	outs   dx,DWORD PTR ds:[esi]
  417cde:	stos   BYTE PTR es:[edi],al
  417cdf:	mov    ah,0x63
  417ce1:	out    0xe2,eax
  417ce3:	nop
  417ce4:	add    BYTE PTR [eax],al
  417ce6:	lods   al,BYTE PTR ds:[esi]
  417ce7:	ins    BYTE PTR es:[edi],dx
  417ce8:	mov    DWORD PTR [eax],eax
  417cea:	das    
  417ceb:	ja     0x417ced
  417ced:	jae    0x417d15
  417cef:	adc    dl,al
  417cf1:	or     eax,DWORD PTR [eax]
  417cf3:	add    BYTE PTR [esi+0x2f0088fc],ah
  417cf9:	ja     0x417d72
  417cfb:	lds    edx,FWORD PTR [esi]
  417cfd:	mov    edi,edx
  417cff:	(bad)  
  417d00:	clc    
  417d01:	cmpps  xmm4,XMMWORD PTR [ebx],0x6f
  417d05:	(bad)  
  417d06:	arpl   WORD PTR [ebx+0xf],si
  417d09:	jl     0x417cb9
  417d0b:	add    eax,0xd08e9e0
  417d10:	mov    eax,ds:0x6f4fc526
  417d15:	ja     0x417d7a
  417d17:	jae    0x417d40
  417d19:	js     0x417d66
  417d1b:	push   esi
  417d1c:	ror    BYTE PTR [ecx-0x41b76f0],0xf1
  417d23:	or     esi,DWORD PTR [eax+0x2ee7f8a9]
  417d29:	pop    ss
  417d2a:	fs std 
  417d2c:	stos   BYTE PTR es:[edi],al
  417d2d:	mov    dh,0xf3
  417d2f:	sub    BYTE PTR [esi],0x91
  417d32:	add    BYTE PTR [eax],al
  417d34:	xlat   BYTE PTR ds:[ebx]
  417d35:	and    BYTE PTR [ebp+edi*8-0x78],0x1d
  417d3a:	xchg   ecx,ebp
  417d3c:	xor    BYTE PTR [ebx-0x21acbc89],0xa9
  417d43:	shl    DWORD PTR [ebx+0xa],cl
  417d46:	retf   0xa2f6
  417d49:	fcom   QWORD PTR [edx]
  417d4b:	icebp  
  417d4c:	inc    esp
  417d4d:	aad    0x53
  417d4f:	xchg   esp,eax
  417d50:	out    dx,eax
  417d51:	sub    eax,0xa5203aa
  417d56:	loop   0x417d5a
  417d58:	add    BYTE PTR [eax],al
  417d5a:	bound  ebp,QWORD PTR [ebx]
  417d5c:	xrelease lock xor BYTE PTR [ecx+0x1f],bl
  417d61:	addr16 mov esp,0x28f0e2d1
  417d67:	jbe    0x417d0f
  417d69:	inc    esi
  417d6a:	sub    al,BYTE PTR [ebp+ebp*2-0x59a6cdbd]
  417d71:	cld    
  417d72:	sbb    BYTE PTR [edx+eax*4-0x447becf6],al
  417d79:	pop    esp
  417d7a:	fs ja  0x417d30
  417d7d:	data16 mov dh,0x19
  417d80:	push   es
  417d81:	test   edx,0x60c3e92b
  417d87:	adc    DWORD PTR ds:0xeb4c3a24,0x66
  417d8e:	pop    esp
  417d8f:	loop   0x417d6b
  417d91:	lods   eax,DWORD PTR ds:[esi]
  417d92:	scas   eax,DWORD PTR es:[edi]
  417d93:	push   ds
  417d94:	sbb    al,ah
  417d96:	rol    BYTE PTR [ebp+esi*8+0x1c9b2e0b],1
  417d9d:	addr16 cmp al,0xee
  417da0:	out    0x53,al
  417da2:	mov    edx,0xe67af609
  417da7:	adc    ebp,0xfffffffb
  417daa:	nop
  417dab:	pop    ebp
  417dac:	xor    esp,DWORD PTR [esi-0x5e]
  417daf:	pop    ecx
  417db0:	sub    dh,dh
  417db2:	lods   eax,DWORD PTR ds:[esi]
  417db3:	pop    ebp
  417db4:	icebp  
  417db5:	add    ebp,DWORD PTR [edi]
  417db7:	inc    esi
  417db8:	fbld   TBYTE PTR [edi-0x76]
  417dbb:	add    DWORD PTR [ecx],0x6a
  417dbe:	add    BYTE PTR [eax],al
  417dc0:	inc    ecx
  417dc1:	loopne 0x417d4c
  417dc3:	outs   dx,DWORD PTR ds:[esi]
  417dc4:	mov    al,0xde
  417dc6:	add    cl,ch
  417dc8:	shl    ebx,cl
  417dca:	or     ecx,ebp
  417dcc:	sub    al,0x55
  417dce:	inc    esi
  417dcf:	int    0x6c
  417dd1:	adc    edi,esp
  417dd3:	xchg   esp,eax
  417dd4:	or     al,0xd1
  417dd6:	mov    dl,0xee
  417dd8:	leave  
  417dd9:	push   cs
  417dda:	sbb    eax,0x416e9aee
  417ddf:	cdq    
  417de0:	ins    BYTE PTR es:[edi],dx
  417de1:	cmp    ebx,0x74
  417de4:	and    al,0xdd
  417de6:	sar    DWORD PTR [edi],cl
  417de8:	retf   0x110e
  417deb:	jb     0x417e53
  417ded:	xor    DWORD PTR [esi-0x1b],0xc1090f8b
  417df4:	inc    esi
  417df5:	mov    eax,ds:0x9e90c6fc
  417dfa:	or     al,0x64
  417dfc:	push   esi
  417dfd:	fild   DWORD PTR [eax]
  417dff:	jmp    0x71b2a289
  417e04:	daa    
  417e05:	cmp    ah,0xa6
  417e08:	push   esp
  417e09:	xchg   ebx,eax
  417e0a:	out    0x9e,eax
  417e0c:	push   edx
  417e0d:	push   ebp
  417e0e:	inc    esi
  417e0f:	int    0xdb
  417e11:	dec    eax
  417e12:	push   esp
  417e13:	call   0xfd3d9104
  417e18:	or     al,0xd1
  417e1a:	mov    dl,0xe6
  417e1c:	push   ebx
  417e1d:	nop    esi
  417e20:	xchg   edx,eax
  417e21:	pop    ebp
  417e22:	inc    ecx
  417e23:	sbb    DWORD PTR [eax],eax
  417e25:	add    bl,dh
  417e27:	cmp    bl,0xdc
  417e2a:	and    al,0xdd
  417e2c:	ret    
  417e2d:	mov    bh,0x13
  417e2f:	movups xmm2,xmm5
  417e32:	cld    
  417e33:	xor    BYTE PTR [esi-0x23],0x17
  417e37:	xchg   ebp,eax
  417e38:	cld    
  417e39:	add    bl,dl
  417e3b:	xchg   ah,ah
  417e3d:	cmc    
  417e3e:	sub    cl,bh
  417e40:	std    
  417e41:	test   DWORD PTR [esi-0x77],edx
  417e44:	jg     0x417e3b
  417e46:	mov    ds,esi
  417e48:	add    BYTE PTR [ebx+0x7e83e041],al
  417e4e:	(bad)  
  417e4f:	ss sbb ah,bh
  417e52:	cmp    ecx,edi
  417e54:	jecxz  0x417e3b
  417e56:	dec    esi
  417e57:	fiadd  WORD PTR [eax]
  417e59:	mov    eax,DWORD PTR [ebx+0x495040e2]
  417e5f:	jae    0x417e7d
  417e61:	sldt   WORD PTR [ecx-0x76958a03]
  417e68:	mov    dh,0x90
  417e6a:	push   es
  417e6b:	stos   BYTE PTR es:[edi],al
  417e6c:	cmp    al,0x0
  417e6e:	or     DWORD PTR [ecx+0x14],esi
  417e71:	add    esp,ecx
  417e73:	xchg   ebx,eax
  417e74:	std    
  417e75:	jne    0x417e8d
  417e77:	pop    es
  417e78:	retf   0x53ff
  417e7b:	xchg   ch,bh
  417e7d:	jne    0x417e7d
  417e7f:	and    eax,0xfab9deaf
  417e84:	jg     0x417e46
  417e86:	fld    DWORD PTR [eax]
  417e88:	scas   eax,DWORD PTR es:[edi]
  417e89:	or     BYTE PTR [eax],al
  417e8b:	add    BYTE PTR [esi],al
  417e8d:	fidivr WORD PTR [eax-0x20535e2]
  417e93:	jmp    0x3fa2a5
  417e98:	dec    ebp
  417e99:	inc    eax
  417e9a:	and    BYTE PTR [edi],cl
  417e9c:	adc    BYTE PTR [edx-0x4d9c005],dl
  417ea2:	outs   dx,DWORD PTR ds:[esi]
  417ea3:	and    cl,cl
  417ea5:	xor    eax,DWORD PTR [esi]
  417ea7:	inc    ebx
  417ea9:	(bad)  ds:0x4c9d46b6
  417eaf:	inc    eax
  417eb0:	xchg   esi,eax
  417eb1:	cli    
  417eb2:	outs   dx,DWORD PTR ds:[esi]
  417eb3:	sbb    BYTE PTR [edi],ch
  417eb5:	je     0x417ef4
  417eb7:	push   esi
  417eb8:	cwde   
  417eb9:	stos   BYTE PTR es:[edi],al
  417eba:	adc    BYTE PTR [ecx],al
  417ebc:	jg     0x417ed6
  417ebe:	jmp    0x417ecb
  417ec0:	mov    ah,0xcc
  417ec2:	fs jae 0x417efc
  417ec5:	pop    ds
  417ec6:	aad    0xdd
  417ec8:	js     0x417e7a
  417eca:	jp     0x417e8c
  417ecc:	and    dl,dh
  417ece:	aam    0x7
  417ed0:	das    
  417ed1:	ja     0x417e7b
  417ed3:	push   ds
  417ed4:	arpl   ax,bp
  417ed6:	fs out 0x46,eax
  417ed9:	shl    DWORD PTR [ebp+edi*8-0x5c],1
  417edd:	xor    esp,esi
  417edf:	mov    esi,0x1479754e
  417ee4:	cs (bad) 
  417ee6:	mov    dl,0x13
  417ee8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ee9:	arpl   di,di
  417eeb:	add    esp,DWORD PTR [esi+0x8970ca]
  417ef1:	add    BYTE PTR [ecx-0x79],bh
  417ef4:	sub    ecx,DWORD PTR [ebx+0x1b]
  417ef7:	(bad)  
  417ef8:	mov    ecx,0x887aaaef
  417efd:	mov    DWORD PTR [edi],esp
  417eff:	push   cs
  417f00:	shl    bh,cl
  417f02:	mov    ah,0xf0
  417f04:	mov    BYTE PTR [eax],al
  417f06:	das    
  417f07:	ja     0x417e96
  417f09:	dec    ebx
  417f0a:	pop    es
  417f0b:	cld    
  417f0c:	dec    ebx
  417f0d:	sub    DWORD PTR [ecx-0x11],esp
  417f10:	cmp    DWORD PTR [ebx-0x15],0xffffffd4
  417f14:	lea    ecx,[eax]
  417f16:	pop    edx
  417f17:	jle    0x417f60
  417f19:	inc    ebx
  417f1a:	pcmpeqw mm0,QWORD PTR [eax]
  417f1d:	add    BYTE PTR [edi],ch
  417f1f:	ins    BYTE PTR es:[edi],dx
  417f20:	or     DWORD PTR [ecx-0x76ff68ae],eax
  417f26:	push   0xffffff93
  417f28:	rol    BYTE PTR [esi+0x735f9b72],0xb
  417f2f:	fdivrp st(2),st
  417f31:	cdq    
  417f32:	xor    al,BYTE PTR [ecx+0x483223d5]
  417f38:	jp     0x417efe
  417f3a:	call   0x1ca4695c
  417f3f:	loop   0x417f27
  417f41:	cmp    cl,BYTE PTR [edx+0x768ee20a]
  417f47:	daa    
  417f48:	xor    ebx,ecx
  417f4a:	sub    BYTE PTR [ecx+0xa720fb5],al
  417f50:	repnz imul edx,DWORD PTR [ecx-0x5e],0x1b
  417f55:	arpl   WORD PTR [eax],ax
  417f57:	add    BYTE PTR [ebp+ebx*4-0x1febf162],ch
  417f5e:	or     eax,0x6cd05263
  417f63:	inc    ebx
  417f64:	xor    bl,dh
  417f66:	jmp    0x61b773f9
  417f6b:	xchg   edx,eax
  417f6c:	mov    bl,0xdd
  417f6e:	jmp    0x3389a176
  417f73:	add    eax,0x633483a
  417f78:	loopne 0x417ff7
  417f7a:	loop   0x417f8a
  417f7c:	in     eax,0xdb
  417f7e:	rol    BYTE PTR [ebx-0x50c1d5ae],1
  417f84:	mov    dh,0x28
  417f86:	out    dx,al
  417f87:	mov    ?,WORD PTR [edx+ebp*8+0x5e]
  417f8b:	loopne 0x417f95
  417f8d:	push   esi
  417f8e:	out    dx,al
  417f8f:	hlt    
  417f90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f91:	sub    dh,dh
  417f93:	mov    fs,WORD PTR [edx+esi*2+0x71]
  417f97:	fbstp  TBYTE PTR [ecx]
  417f99:	ficomp DWORD PTR [esi-0x2f]
  417f9c:	sub    BYTE PTR [ebx+0x28a6581c],dh
  417fa2:	test   BYTE PTR [esi+0x1f718644],0xb5
  417fa9:	rol    DWORD PTR [eax],0xd7
  417fac:	pop    eax
  417fad:	cmp    esp,0x465523f5
  417fb3:	cmc    
  417fb4:	mov    ebx,0x2ce99d58
  417fb9:	fisubr WORD PTR [edi]
  417fbb:	sub    DWORD PTR [eax],eax
  417fbd:	add    BYTE PTR [ebx],cl
  417fbf:	pop    eax
  417fc0:	add    al,0xe9
  417fc2:	sub    al,0x55
  417fc4:	inc    esi
  417fc5:	or     eax,0xb4fc0f73
  417fca:	dec    esp
  417fcb:	shl    DWORD PTR [edx+0x1d0b0dee],1
  417fd1:	ficom  WORD PTR [esi+0x6cb9416e]
  417fd7:	jg     0x417fd4
  417fd9:	xchg   esp,eax
  417fda:	fs (bad) 
  417fdd:	mov    edi,0x62110acd
  417fe2:	loope  0x417f64
  417fe4:	jbe    0x417fdb
  417fe6:	int    0xa
  417fe8:	or     DWORD PTR [ecx],edx
  417fea:	jns    0x417f90
  417fec:	cld    
  417fed:	div    BYTE PTR [eax+0x79640c9e]
  417ff3:	fiadd  DWORD PTR [eax]
  417ff5:	jmp    0xdf2aef8f
  417ffa:	mov    es,ebp
  417ffc:	pop    ebp
  417ffd:	loope  0x418000
  417fff:	out    0x39,eax
  418001:	pop    ds
  418002:	xlat   BYTE PTR ds:[ebx]
  418003:	or     ebp,DWORD PTR [ebx+0x7526dd00]
  418009:	out    dx,eax
  41800a:	mov    bl,0x57
  41800c:	mov    ecx,ebp
  41800e:	sub    al,0xde
  418010:	jmp    DWORD PTR [esi]
  418012:	add    ecx,eax
  418014:	inc    ebp
  418015:	icebp  
  418016:	add    BYTE PTR [esi-0x78],ah
  418019:	and    al,0xdb
  41801b:	push   edi
  41801c:	sub    DWORD PTR [ecx+0x33],0xffffffde
  418020:	add    BYTE PTR [edx+0x0],ah
  418023:	add    al,ch
  418025:	(bad)  
  418026:	mov    DWORD PTR [eax],eax
  418028:	sbb    BYTE PTR [edx+0x53d24589],ch
  41802e:	sbb    DWORD PTR [esi+eax*8+0xb8b00da],0xfffffffe
  418036:	cmc    
  418037:	fsubr  DWORD PTR ds:0x218201a
  41803d:	std    
  41803e:	std    
  41803f:	mov    eax,esp
  418041:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418042:	cmp    al,0xe9
  418044:	mov    dl,ch
  418046:	add    BYTE PTR [eax],al
  418048:	test   DWORD PTR [edx],ebx
  41804a:	inc    ecx
  41804b:	jmp    0x425492
  418050:	xchg   ecx,eax
  418051:	fs inc esi
  418053:	add    DWORD PTR [ecx+0x64],edx
  418056:	push   esi
  418057:	add    bl,ch
  418059:	stos   DWORD PTR es:[edi],eax
  41805a:	pusha  
  41805b:	shl    DWORD PTR [esi],0xd2
  41805e:	or     edx,eax
  418060:	inc    ebp
  418061:	sbb    eax,DWORD PTR [ebp+eax*2+0x75bbe166]
  418068:	pop    eax
  418069:	pop    ecx
  41806a:	pusha  
  41806b:	aam    0x56
  41806d:	icebp  
  41806e:	adc    BYTE PTR [edi],cl
  418070:	clc    
  418071:	xchg   ecx,eax
  418072:	add    DWORD PTR [edi],ecx
  418074:	clc    
  418075:	cdq    
  418076:	add    cl,al
  418078:	imul   ecx
  41807a:	or     eax,ecx
  41807c:	lahf   
  41807d:	lods   al,BYTE PTR ds:[esi]
  41807e:	ror    BYTE PTR [ebx+0xf588],1
  418084:	push   es
  418085:	imul   eax,DWORD PTR [eax-0x30],0xa4830000
  41808c:	int3   
  41808d:	mov    DWORD PTR [eax+0x60000f5],ecx
  418093:	imul   eax,DWORD PTR [ebx+0x10],0xffffff85
  418097:	add    cl,BYTE PTR es:[ecx+0x4583ba13]
  41809e:	mov    dh,0x62
  4180a0:	stc    
  4180a1:	push   ds
  4180a2:	das    
  4180a3:	aam    0xd
  4180a5:	mov    esp,DWORD PTR [edx-0x37029da9]
  4180ab:	out    dx,al
  4180ac:	retf   0xd4db
  4180af:	fwait
  4180b0:	(bad)  
  4180b1:	enter  0x66ee,0x6
  4180b5:	std    
  4180b6:	sbb    bl,BYTE PTR [edi-0x11d0beb7]
  4180bc:	ret    0xaadb
  4180bf:	(bad)  
  4180c0:	rol    BYTE PTR [eax*1+0x29836711],cl
  4180c7:	xchg   DWORD PTR [eax],eax
  4180c9:	mov    edx,esi
  4180cb:	es aas 
  4180cd:	loopne 0x4180fc
  4180cf:	push   edi
  4180d0:	popa   
  4180d1:	jbe    0x4180fe
  4180d3:	mov    ah,0xd2
  4180d5:	(bad)  [eax-0x6e]
  4180d8:	int3   
  4180d9:	adc    eax,0x438d86ef
  4180de:	aas    
  4180df:	lock retf 0xa623
  4180e3:	dec    edx
  4180e4:	fs mov edx,ebp
  4180e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180e8:	mov    es,WORD PTR [eax]
  4180ea:	lods   al,BYTE PTR ds:[esi]
  4180eb:	retf   
  4180ec:	or     edi,DWORD PTR [eax+eax*1]
  4180ef:	add    dh,cl
  4180f1:	jg     0x418154
  4180f3:	adc    DWORD PTR [eax+0x75],0x462dc580
  4180fa:	xchg   DWORD PTR [ebx+0x53],ecx
  4180fd:	test   dl,bl
  4180ff:	and    esi,DWORD PTR [eax]
  418101:	push   ebp
  418102:	inc    ebp
  418103:	or     eax,0x4fc4f6e1
  418108:	outs   dx,DWORD PTR ds:[esi]
  418109:	xchg   edi,edi
  41810b:	push   edx
  41810c:	dec    edi
  41810d:	fcomp  QWORD PTR [ebx+0x73]
  418110:	and    esi,eax
  418112:	inc    edi
  418113:	std    
  418114:	or     BYTE PTR [edi-0x6885034a],0x5b
  41811b:	jae    0x418158
  41811d:	fisub  WORD PTR [edx-0x3979d727]
  418123:	aas    
  418124:	fidivr DWORD PTR [ecx+eiz*2-0x37]
  418128:	cmp    al,0x61
  41812a:	xchg   edx,eax
  41812b:	add    eax,0x45e623a
  418130:	das    
  418131:	fidivr WORD PTR [esp+edi*8+0xf737cb4]
  418138:	stos   DWORD PTR es:[edi],eax
  418139:	jmp    0x2a63:0x2f03
  41813f:	fsubr  DWORD PTR [ebx]
  418141:	mov    ebx,0x7c9a5ffb
  418146:	fucom  st(2)
  418148:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418149:	and    bh,BYTE PTR [edx]
  41814b:	lea    esi,[ecx+0x2f03ea51]
  418151:	imul   esp,DWORD PTR [ebp-0x47ffff9d],0x73b3e87d
  41815b:	repnz or eax,0x22e9e15f
  418161:	stc    
  418162:	hlt    
  418163:	shr    DWORD PTR [ecx-0x35dd59fd],cl
  418169:	push   cs
  41816a:	cdq    
  41816b:	and    eax,0xd810ee9
  418170:	call   0xef26e1b9
  418175:	dec    ecx
  418176:	cs lahf 
  418178:	popa   
  418179:	leave  
  41817a:	adc    BYTE PTR [eax-0x16],ch
  41817d:	xor    bl,0xea
  418180:	and    eax,0x626233b8
  418185:	pop    edi
  418186:	sbb    bh,BYTE PTR [edi+ebx*2-0x38]
  41818a:	loopne 0x4181f3
  41818c:	sbb    eax,0x5e64b040
  418191:	add    ebp,DWORD PTR [edi]
  418193:	fisubr WORD PTR [eax+ecx*4-0x1]
  418197:	jl     0x41819a
  418199:	mov    dh,0x51
  41819b:	mov    ch,0xc8
  41819d:	fidiv  WORD PTR [eax-0x7e591bf3]
  4181a3:	jns    0x4181bb
  4181a5:	int    0x71
  4181a7:	sbb    eax,0x82e48001
  4181ac:	cld    
  4181ad:	mov    ?,WORD PTR [ebp-0x488b22d9]
  4181b3:	outs   dx,BYTE PTR ds:[esi]
  4181b4:	sti    
  4181b5:	jle    0x418210
  4181b7:	mov    ch,0xc8
  4181b9:	std    
  4181ba:	add    BYTE PTR [eax],al
  4181bc:	sub    bh,BYTE PTR [ecx+0x16]
  4181bf:	mov    ebp,0x72011cf1
  4181c4:	ja     0x418195
  4181c6:	jmp    0x11fa938
  4181cb:	bound  esp,QWORD PTR [edi-0x55]
  4181ce:	mov    BYTE PTR [eax+ecx*2+0x2c5d8363],bl
  4181d5:	fiadd  WORD PTR [eax]
  4181d7:	ins    BYTE PTR es:[edi],dx
  4181d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181d9:	outs   dx,BYTE PTR ds:[esi]
  4181da:	sti    
  4181db:	shl    DWORD PTR ss:[eax+ecx*8+0x167932b5],1
  4181e3:	aad    0xe9
  4181e5:	sbb    al,0x1
  4181e7:	(bad)  
  4181e9:	sbb    eax,0x78c9e2ea
  4181ee:	cld    
  4181ef:	bound  esi,QWORD PTR [edi-0x41]
  4181f2:	xchg   DWORD PTR [eax+edi*1+0x60fe50bb],ebx
  4181f9:	(bad)  
  4181fb:	jl     0x41822d
  4181fd:	jp     0x418275
  4181ff:	add    DWORD PTR [ebx-0x7d1924de],ebx
  418205:	gs inc esi
  418207:	stc    
  418208:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418209:	arpl   WORD PTR [ecx-0x7821d317],ax
  41820f:	and    al,0x3b
  418211:	arpl   WORD PTR [ebx+0x0],bx
  418214:	inc    edx
  418215:	addr16 inc ebx
  418217:	jo     0x4181f6
  418219:	sub    ecx,DWORD PTR [edx+0x3fd6be45]
  41821f:	adc    al,0x0
  418221:	add    BYTE PTR [ecx],cl
  418223:	ins    BYTE PTR es:[edi],dx
  418224:	shl    dh,cl
  418226:	mov    DWORD PTR [eax],ebx
  418228:	(bad)  
  418229:	jne    0x418259
  41822b:	gs push eax
  41822d:	hlt    
  41822e:	mov    ecx,0x908bec92
  418233:	fs retf 0x2e8
  418237:	mov    eax,0x2253fffd
  41823c:	push   cs
  41823d:	test   cl,bh
  41823f:	loope  0x418241
  418241:	add    BYTE PTR [ebp-0x2c000fc5],dl
  418247:	jb     0x418246
  418249:	jne    0x41827d
  41824b:	mov    ah,bh
  41824d:	(bad)  
  41824e:	jae    0x4182ca
  418250:	mov    edi,edx
  418252:	stc    
  418253:	xchg   edx,eax
  418254:	adc    al,0x8b
  418256:	cmp    eax,0x5675fd34
  41825b:	sbb    DWORD PTR [eax+0xc],esi
  41825e:	cmp    DWORD PTR [ebx-0x47d517fc],edx
  418264:	std    
  418265:	call   ebx
  418267:	and    DWORD PTR [ebp-0x4e],esi
  41826a:	aas    
  41826b:	add    eax,0x67460005
  418270:	pop    eax
  418271:	cld    
  418272:	iret   
  418273:	stos   BYTE PTR es:[edi],al
  418274:	adc    BYTE PTR [ebx],bh
  418276:	(bad)  
  418277:	call   0x5589:0x76c3ff4e
  41827e:	xor    bl,BYTE PTR [ecx]
  418280:	jo     0x418272
  418282:	lea    esp,[eax]
  418284:	mov    cl,bl
  418286:	add    BYTE PTR [eax],al
  418288:	(bad)  
  418289:	jle    0x418265
  41828b:	(bad)  
  41828c:	stc    
  41828d:	pusha  
  41828e:	shl    DWORD PTR [edi+ebp*1+0x77],0x1
  418293:	pop    ebx
  418294:	add    ebp,DWORD PTR [ecx-0x354bec3d]
  41829a:	clc    
  41829b:	cmp    BYTE PTR [edx-0x61],dh
  41829e:	(bad)  
  4182a0:	add    al,0x91
  4182a2:	mov    DWORD PTR [esi+0x6b],ecx
  4182a5:	add    al,BYTE PTR [edi+0x74]
  4182a8:	inc    edi
  4182a9:	jl     0x418269
  4182ab:	imul   ebx,DWORD PTR [ebp+0x74],0x19
  4182af:	pop    ebx
  4182b0:	daa    
  4182b1:	(bad)  [edx]
  4182b3:	xor    edi,ebp
  4182b5:	mov    DWORD PTR [edi+0x489c6346],0x6577a80d
  4182bf:	std    
  4182c0:	mov    al,0x2c
  4182c2:	mov    ebx,0x140538fb
  4182c7:	out    0xa0,al
  4182c9:	add    BYTE PTR [ecx-0x78b8acbd],cl
  4182cf:	inc    ebx
  4182d0:	dec    ebx
  4182d1:	adc    bl,dl
  4182d3:	and    esi,DWORD PTR [eax+esi*4+0x3a81ffe9]
  4182da:	cld    
  4182db:	mov    BYTE PTR [eax+edi*4-0x2e],ah
  4182df:	pop    ss
  4182e0:	fldcw  WORD PTR [edi+0x32680fd2]
  4182e6:	or     al,0xfd
  4182e8:	fisubr DWORD PTR [esi+0x68]
  4182eb:	data16 add BYTE PTR [eax],al
  4182ee:	jne    0x4182c8
  4182f0:	pop    esp
  4182f1:	sub    DWORD PTR [edi-0x80],0xffffff83
  4182f5:	xor    ax,WORD PTR [edi+0x7ae22900]
  4182fc:	adc    al,0x5b
  4182fe:	cmp    esi,esp
  418300:	xor    edi,esp
  418302:	xor    eax,0xb4fd5cea
  418307:	pop    eax
  418308:	fadd   QWORD PTR [edx+0x7ff2ddf6]
  41830e:	or     al,BYTE PTR [ebx+0x18565bdb]
  418314:	inc    esi
  418315:	or     ebp,DWORD PTR [ebp+0x25bc57f]
  41831b:	mov    ch,0x24
  41831d:	or     al,0x2a
  41831f:	pusha  
  418320:	popf   
  418321:	popa   
  418322:	bnd js 0x41831c
  418325:	inc    ebx
  418326:	outs   dx,DWORD PTR ds:[esi]
  418327:	addr16 and al,0xb8
  41832a:	daa    
  41832b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41832c:	xchg   ecx,eax
  41832d:	pop    ecx
  41832e:	sar    DWORD PTR [eax-0x65],1
  418331:	(bad)  
  418332:	ins    BYTE PTR es:[edi],dx
  418333:	jbe    0x418306
  418335:	rcr    BYTE PTR [ecx+ebp*8],0x5c
  418339:	inc    eax
  41833a:	int3   
  41833b:	js     0x4182c0
  41833d:	pop    ds
  41833e:	pop    ecx
  41833f:	or     ch,bl
  418341:	xchg   bl,ah
  418343:	jg     0x4183b8
  418345:	pop    ebx
  418346:	cmp    dh,BYTE PTR [eax]
  418348:	out    0x8e,eax
  41834a:	ja     0x4182f8
  41834c:	aaa    
  41834d:	xchg   DWORD PTR [eax-0x20],edi
  418350:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418351:	add    BYTE PTR ss:[eax],al
  418354:	lea    esp,[ebp+eiz*4+0x4f]
  418358:	enter  0xe785,0x8d
  41835c:	sub    esp,esi
  41835e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41835f:	jg     0x4183c0
  418361:	call   0x78cdfbcb
  418366:	xor    ebx,DWORD PTR [ebx-0x14]
  418369:	shr    DWORD PTR [edx],1
  41836b:	ror    DWORD PTR [esp+eax*1],1
  41836e:	jmp    0x5233:0x6ed9dc5a
  418375:	repnz icebp 
  418377:	mov    ?,WORD PTR [esi+0xf]
  41837a:	or     edx,ecx
  41837c:	xor    BYTE PTR [ecx+0x7d],bh
  41837f:	pop    es
  418380:	cmp    dh,dl
  418382:	icebp  
  418383:	imul   ebx,DWORD PTR [ebp-0x6a],0x1
  418387:	test   BYTE PTR [ebp-0x328a3ea5],0x7f
  41838e:	shr    dl,cl
  418390:	sub    al,0xde
  418392:	mov    DWORD PTR [edi+esi*2],edi
  418395:	mov    ch,0xc8
  418397:	push   esp
  418398:	ret    
  418399:	mov    dh,0x5a
  41839b:	cmp    eax,0x7f0bbfd8
  4183a0:	xor    DWORD PTR [ebp-0x37],esp
  4183a3:	cli    
  4183a4:	cmp    bl,BYTE PTR [ebp-0x1e]
  4183a7:	out    dx,al
  4183a8:	repnz mov ds,edi
  4183ab:	(bad)  
  4183ac:	imul   DWORD PTR [ebx-0x3e]
  4183af:	xchg   ecx,eax
  4183b0:	xor    DWORD PTR [ebp+eax*1-0xf],esp
  4183b4:	push   eax
  4183b5:	mov    ?,WORD PTR [ebp-0x3f]
  4183b8:	add    BYTE PTR [eax],al
  4183ba:	icebp  
  4183bb:	jp     0x418403
  4183bd:	cmc    
  4183be:	mov    cl,0x1b
  4183c0:	adc    eax,0x7d6fefc2
  4183c5:	xchg   esp,eax
  4183c6:	inc    ecx
  4183c7:	aam    0x87
  4183c9:	das    
  4183ca:	xchg   DWORD PTR [ecx+eax*8-0xb],ebx
  4183ce:	cdq    
  4183cf:	mov    dh,0x5d
  4183d1:	icebp  
  4183d2:	jle    0x4183bd
  4183d4:	das    
  4183d5:	xor    BYTE PTR [ebx+0x60],ch
  4183d8:	dec    ebx
  4183d9:	mov    ch,0x29
  4183db:	aaa    
  4183dc:	or     al,0x5e
  4183de:	mov    ebp,0x1946fc81
  4183e3:	adc    edi,ebp
  4183e5:	out    dx,al
  4183e6:	stos   BYTE PTR es:[edi],al
  4183e7:	aad    0xe5
  4183e9:	ss add eax,0x6b054665
  4183ef:	pusha  
  4183f0:	inc    esi
  4183f1:	int    0xf5
  4183f3:	jmp    0x1601:0x41d7224
  4183fa:	pop    edi
  4183fb:	rol    DWORD PTR [edi+0x18eae522],cl
  418401:	add    BYTE PTR [eax+0x31107014],bl
  418407:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418408:	or     bh,bh
  41840a:	stos   DWORD PTR es:[edi],eax
  41840b:	jecxz  0x4183f5
  41840d:	dec    ebp
  41840e:	aas    
  41840f:	adc    al,0xfe
  418411:	test   esi,eax
  418413:	in     al,0x7f
  418415:	dec    ebp
  418416:	add    eax,0x1d4b00db
  41841b:	das    
  41841c:	clc    
  41841d:	jae    0x41841f
  41841f:	add    BYTE PTR [edx-0xe1b1dfe],bh
  418425:	adc    al,0x8a
  418427:	inc    esi
  418428:	xor    dh,bh
  41842a:	ror    BYTE PTR [edi],0x5a
  41842d:	mov    edx,0xd891ffe4
  418432:	push   edi
  418433:	or     cl,ah
  418435:	pop    esp
  418436:	into   
  418437:	in     al,0xb1
  418439:	adc    al,0xe4
  41843b:	repnz mov ebx,0x88bfe14
  418441:	xchg   esi,eax
  418442:	jg     0x418404
  418444:	shl    esi,0xbd
  418447:	in     al,0x31
  418449:	adc    eax,0xe58e5d3a
  41844e:	xor    BYTE PTR [esi-0x7601eb56],0xd8
  418455:	cs cmp edx,eax
  418458:	push   DWORD PTR [edx+0x68e1ffdf]
  41845e:	inc    eax
  41845f:	and    al,0xd6
  418461:	arpl   WORD PTR [eax+0x14],cx
  418464:	push   DWORD PTR [esi]
  418466:	and    BYTE PTR [eax-0x23],dl
  418469:	les    ecx,FWORD PTR [ecx+0x3fd31e45]
  41846f:	adc    al,0x81
  418471:	pop    edi
  418472:	xchg   edx,eax
  418473:	in     al,0x11
  418475:	adc    eax,0xe5a25e3a
  41847a:	sbb    DWORD PTR [ebx-0x2a615d1],0x89060f30
  418484:	add    BYTE PTR [eax],al
  418486:	jmp    0x2bf78dbf
  41848b:	ins    DWORD PTR es:[edi],dx
  41848c:	lds    esi,FWORD PTR [esi]
  41848e:	jb     0x418503
  418490:	or     DWORD PTR [ebx-0x2a62467],eax
  418496:	sbb    bl,al
  418498:	lock cld 
  41849a:	call   0xf913:0x9ffeadb
  4184a1:	mov    al,bl
  4184a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184a4:	retf   
  4184a5:	pop    ss
  4184a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184a7:	xor    BYTE PTR [edx+0x59977afc],dh
  4184ad:	jae    0x4184ea
  4184af:	sub    al,0xcb
  4184b1:	pop    es
  4184b2:	xlat   BYTE PTR ds:[ebx]
  4184b3:	repz aaa 
  4184b5:	std    
  4184b6:	fadd   DWORD PTR [edx]
  4184b8:	inc    eax
  4184b9:	je     0x418458
  4184bb:	dec    esi
  4184bc:	lods   eax,DWORD PTR ds:[esi]
  4184bd:	add    ch,BYTE PTR [edi]
  4184bf:	xchg   DWORD PTR [ebp-0x7838f4bd],ecx
  4184c5:	inc    ebx
  4184c6:	adc    edx,edi
  4184c8:	ins    DWORD PTR es:[edi],dx
  4184c9:	sub    BYTE PTR [edx+edi*4-0x6d0dc8a4],ah
  4184d0:	or     DWORD PTR [ebx-0x2a6a4a7],ecx
  4184d6:	push   esp
  4184d7:	popf   
  4184d8:	in     al,0xc
  4184da:	lods   al,BYTE PTR ds:[esi]
  4184db:	aad    0x5b
  4184dd:	std    
  4184de:	mov    BYTE PTR [edx+edx*4+0x1],bh
  4184e2:	in     al,dx
  4184e3:	int    0xbb
  4184e5:	repz sub BYTE PTR [edx],al
  4184e8:	and    ah,ah
  4184ea:	add    BYTE PTR [eax],al
  4184ec:	jo     0x4184a2
  4184ee:	pop    eax
  4184ef:	inc    ebx
  4184f0:	inc    ebx
  4184f1:	lods   al,BYTE PTR ds:[esi]
  4184f2:	retf   0xd523
  4184f5:	xchg   BYTE PTR [ecx+0x73],bl
  4184f8:	cmp    ebx,esi
  4184fa:	outs   dx,BYTE PTR ds:[esi]
  4184fb:	xor    BYTE PTR [edx-0x15],dl
  4184fe:	add    DWORD PTR [ebp-0x31ecf38a],ecx
  418504:	xor    BYTE PTR [ebp-0x6b],dh
  418507:	pop    es
  418508:	cmp    ch,bl
  41850a:	icebp  
  41850b:	imul   ebx,ecx,0xffffff95
  41850e:	sti    
  41850f:	push   edi
  418510:	lods   al,BYTE PTR ds:[esi]
  418511:	popf   
  418512:	jle    0x4184ae
  418514:	or     BYTE PTR [ebx],cl
  418516:	call   0x2daab41e
  41851b:	and    BYTE PTR [edi+0x67],ch
  41851e:	and    eax,0x3895f20
  418523:	mov    ebp,DWORD PTR [esi+esi*2+0x11]
  418527:	rcr    DWORD PTR [eiz*8+0x750e6474],0xbb
  41852f:	sbb    ecx,DWORD PTR [ecx-0x287d1cfe]
  418535:	jns    0x4184e2
  418537:	push   edi
  418538:	sub    ch,BYTE PTR [edi+eiz*8]
  41853b:	mov    ah,BYTE PTR [ecx-0x52]
  41853e:	jmp    0x6c1d:0x26e6338d
  418545:	push   0xffffffdb
  418547:	jg     0x418537
  418549:	add    BYTE PTR [ebx-0x29e54da9],0x56
  418550:	add    BYTE PTR [eax],al
  418552:	sbb    al,0xba
  418554:	inc    DWORD PTR [ebx]
  418556:	mov    ds:0x828acdea,al
  41855b:	je     0x41853a
  41855d:	sti    
  41855e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41855f:	test   al,0xb4
  418561:	push   esi
  418562:	cld    
  418563:	int    0x52
  418565:	shl    DWORD PTR [esi*2+0x76870bd5],1
  41856c:	sbb    edx,DWORD PTR [edi+0x72]
  41856f:	pop    edx
  418570:	sub    dl,al
  418572:	sahf   
  418573:	xchg   BYTE PTR [ecx],al
  418575:	xor    DWORD PTR [edx],ebp
  418577:	fiadd  WORD PTR [eax]
  418579:	bound  ebp,QWORD PTR [esi-0x40]
  41857c:	inc    eax
  41857d:	jo     0x4185ed
  41857f:	rcl    BYTE PTR [eax+0x12],0x1b
  418583:	addr16 inc esi
  418585:	adc    DWORD PTR [edx],esp
  418587:	and    DWORD PTR ds:0xe05ea7de,edx
  41858d:	push   es
  41858e:	fdiv   DWORD PTR [esi+0x5d318d5a]
  418594:	mov    BYTE PTR ds:0x370c7178,cl
  41859a:	sub    al,0x1d
  41859c:	cmp    ch,BYTE PTR [edi+edi*2]
  41859f:	loope  0x418525
  4185a1:	dec    esp
  4185a2:	mov    WORD PTR [ecx-0x4],?
  4185a5:	(bad)  
  4185a6:	out    dx,eax
  4185a7:	iret   
  4185a8:	sti    
  4185a9:	push   esp
  4185aa:	dec    edi
  4185ab:	or     BYTE PTR [ecx],al
  4185ad:	(bad)  
  4185ae:	(bad)  
  4185b0:	xchg   DWORD PTR [esi+0x6218ef81],edx
  4185b6:	add    BYTE PTR [eax],al
  4185b8:	jne    0x4185c6
  4185ba:	cld    
  4185bb:	xor    al,0xe3
  4185bd:	jb     0x418635
  4185bf:	cmc    
  4185c0:	jns    0x4185b1
  4185c2:	or     BYTE PTR [ecx-0x69037673],dl
  4185c8:	scas   eax,DWORD PTR es:[edi]
  4185c9:	sahf   
  4185ca:	jne    0x41861c
  4185cc:	dec    ebx
  4185cd:	inc    eax
  4185ce:	add    ch,cl
  4185d0:	sub    al,0x8
  4185d2:	out    dx,eax
  4185d3:	nop
  4185d4:	es jae 0x4185d3
  4185d7:	jmp    0x613ea591
  4185dc:	outs   dx,DWORD PTR ds:[esi]
  4185dd:	iret   
  4185de:	xchg   DWORD PTR [eax+esi*1+0x28a48a1e],ebp
  4185e5:	push   cs
  4185e6:	jmp    0x6f62:0xde2bc9
  4185ed:	imul   edi,DWORD PTR [edx],0x0
  4185f0:	ret    
  4185f1:	or     DWORD PTR ds:0xfe008b8d,0xffffffff
  4185f8:	int    0x98
  4185fa:	push   0x81dc3f3b
  4185ff:	and    esp,DWORD PTR [edx]
  418601:	or     al,0xfe
  418603:	sub    DWORD PTR [ebx-0x6a8af2dd],0x68
  41860a:	inc    ebx
  41860b:	sbb    bl,dl
  41860d:	push   ds
  41860e:	jne    0x418627
  418610:	pushf  
  418611:	fist   WORD PTR [eax-0x73]
  418614:	shr    BYTE PTR [edx-0x77],0xc3
  418618:	sub    ecx,DWORD PTR cs:[ecx-0x1]
  41861c:	add    BYTE PTR [eax],al
  41861e:	or     ebx,esi
  418620:	ror    BYTE PTR [edi],0x83
  418623:	or     bl,bh
  418625:	(bad)  
  418626:	jmp    0x50cca62f
  41862b:	jbe    0x418656
  41862d:	enter  0xb71d,0x75
  418631:	sbb    al,0x7c
  418633:	in     eax,0x36
  418635:	dec    esi
  418636:	cmp    ah,BYTE PTR [ebx-0x21617cf1]
  41863c:	or     eax,0xfdffc384
  418641:	call   FWORD PTR [ebp+ebx*4-0x5]
  418645:	cmp    DWORD PTR [eax],edx
  418647:	mov    ebx,0xff8f840d
  41864c:	std    
  41864d:	dec    DWORD PTR [ebp-0x65]
  418650:	lock (bad) 
  418653:	fadd   QWORD PTR [ecx-0x7e63533f]
  418659:	stc    
  41865a:	mov    ecx,ebx
  41865c:	test   DWORD PTR [ebx+0x9],esi
  41865f:	or     esi,edi
  418661:	jmp    DWORD PTR [edx]
  418663:	pop    ebx
  418664:	xchg   ebp,eax
  418665:	(bad)  
  418666:	xlat   BYTE PTR ds:[ebx]
  418667:	fiadd  WORD PTR [ecx+0x57f2ff8]
  41866d:	test   BYTE PTR [eax-0x7c],ah
  418670:	add    BYTE PTR [eax],al
  418672:	and    BYTE PTR [ebx],al
  418674:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418675:	loop   0x4186df
  418677:	mov    bl,0x81
  418679:	clc    
  41867a:	xor    esi,DWORD PTR [ebx]
  41867c:	lock adc BYTE PTR [edi-0x6f],0xcc
  418681:	sbb    BYTE PTR [eax],al
  418683:	add    BYTE PTR [edx],dl
  418685:	add    al,BYTE PTR ds:0x7b842f00
  41868b:	mov    DWORD PTR [ebp-0x35],ecx
  41868e:	push   ebp
  41868f:	xor    DWORD PTR [edi-0x73],ebp
  418692:	mov    esi,0x7f02205f
  418697:	loop   0x4186c1
  418699:	jno    0x418702
  41869b:	lods   al,BYTE PTR ds:[esi]
  41869c:	das    
  41869d:	xchg   DWORD PTR [eax],eax
  41869f:	cmp    DWORD PTR [ecx-0xd],edi
  4186a2:	add    al,0x81
  4186a4:	int3   
  4186a5:	xchg   DWORD PTR [eax],eax
  4186a7:	add    BYTE PTR [edi-0x55f2f944],ch
  4186ad:	in     eax,dx
  4186ae:	(bad)  
  4186af:	jmp    FWORD PTR [edi]
  4186b1:	les    esp,FWORD PTR [edi-0x6c]
  4186b4:	das    
  4186b5:	xchg   DWORD PTR [eax],eax
  4186b7:	and    edi,0x8584056e
  4186bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186be:	push   ebp
  4186bf:	std    
  4186c0:	lods   al,BYTE PTR ds:[esi]
  4186c1:	das    
  4186c2:	and    BYTE PTR ds:0xfd5eb6ab,cl
  4186c8:	enter  0xa092,0x0
  4186cc:	das    
  4186cd:	xchg   DWORD PTR [ecx+0x73],ebp
  4186d0:	lods   al,BYTE PTR ds:[esi]
  4186d1:	dec    edi
  4186d2:	pop    es
  4186d3:	je     0x41870e
  4186d5:	add    al,0x58
  4186d7:	and    BYTE PTR [ebx],ah
  4186d9:	jbe    0x4186ee
  4186db:	mov    al,ds:0xd00872f
  4186e0:	mov    dl,0x2a
  4186e2:	(bad)  
  4186e3:	std    
  4186e4:	nop
  4186e5:	fimul  WORD PTR [esi-0x21]
  4186e8:	add    BYTE PTR [eax],al
  4186ea:	scas   eax,DWORD PTR es:[edi]
  4186eb:	jbe    0x4186dd
  4186ed:	shl    ebx,1
  4186ef:	pop    esp
  4186f0:	push   edx
  4186f1:	push   es
  4186f2:	sub    bl,BYTE PTR [eax+0x5]
  4186f5:	bound  esi,QWORD PTR [edx+0x71]
  4186f8:	add    eax,0xe9de2f7f
  4186fd:	push   0x9325ce8
  418702:	sub    bl,BYTE PTR [ebp+edx*8+0x61]
  418706:	push   edx
  418707:	jno    0x418770
  418709:	pop    ebx
  41870a:	xor    al,0xe8
  41870c:	test   al,0x16
  41870e:	lods   al,BYTE PTR ds:[esi]
  41870f:	fsubp  st(1),st
  418711:	add    eax,DWORD PTR [esi-0x60]
  418714:	pop    edi
  418715:	(bad)  
  418718:	out    dx,al
  418719:	or     esi,DWORD PTR [ebx]
  41871b:	test   DWORD PTR ds:0xfbaa7188,esp
  418721:	(bad)  
  418722:	xor    dl,bl
  418724:	(bad)  
  418725:	and    BYTE PTR [esi+0x335a1e1f],ah
  41872b:	out    0xe8,al
  41872d:	pop    esi
  41872e:	mov    esi,0x1182464
  418733:	(bad)  
  418735:	add    al,0x6
  418737:	into   
  418738:	outs   dx,BYTE PTR ds:[esi]
  418739:	ret    0x681c
  41873c:	out    0xfb,al
  41873e:	xor    BYTE PTR [ebp-0x55968077],al
  418744:	mov    bl,0x8
  418746:	daa    
  418747:	into   
  418748:	repnz xchg edx,edi
  41874b:	jle    0x4186e8
  41874d:	push   ebx
  41874e:	add    BYTE PTR [eax],al
  418750:	ret    0xfe1a
  418753:	push   edx
  418754:	cmp    al,0xba
  418756:	inc    DWORD PTR [ebx]
  418758:	mov    dl,0xea
  41875a:	in     eax,0x7e
  41875c:	xor    BYTE PTR [eax-0xb],0xeb
  418760:	mov    bh,0xa4
  418762:	add    DWORD PTR [edi],ebx
  418764:	cld    
  418765:	in     al,dx
  418766:	adc    BYTE PTR [esi+0x76],ch
  418769:	in     al,0xfb
  41876b:	fadd   QWORD PTR [eax+edi*2+0x72dc3706]
  418772:	xchg   BYTE PTR [ecx],ch
  418774:	sub    al,0x5a
  418776:	jle    0x4187c7
  418778:	fdiv   QWORD PTR [edx-0x18]
  41877b:	jmp    0x159e:0x9e59758a
  418782:	retf   0x132b
  418785:	ficom  WORD PTR [eax+0xb12006]
  41878b:	in     al,dx
  41878c:	jae    0x41873d
  41878e:	add    bl,dh
  418790:	imul   ebp,DWORD PTR [edi-0x508c0200],0x0
  418797:	mov    al,ds:0xb100af6a
  41879c:	icebp  
  41879d:	mov    al,0x0
  41879f:	pushf  
  4187a0:	jmp    0xf1b28855
  4187a5:	mov    al,0x0
  4187a7:	pop    esp
  4187a8:	call   0xf1c7885d
  4187ad:	mov    al,0x0
  4187af:	mov    eax,ds:0xa100b0e9
  4187b4:	add    BYTE PTR [eax],al
  4187b6:	repnz mov al,0x0
  4187b9:	sti    
  4187ba:	jmp    0xf1f8886f
  4187bf:	mov    al,0x0
  4187c1:	add    esi,edi
  4187c3:	mov    al,0x0
  4187c5:	jp     0x4187b7
  4187c7:	mov    al,0x0
  4187c9:	std    
  4187ca:	out    0xb0,eax
  4187cc:	add    BYTE PTR [eax],bl
  4187ce:	div    BYTE PTR [eax-0x4f147900]
  4187d4:	add    BYTE PTR [ecx+0x1b00b0f3],dh
  4187da:	and    BYTE PTR [edi-0x64e80000],ch
  4187e0:	cmp    eax,DWORD PTR [eax]
  4187e2:	sbb    BYTE PTR [edx-0x5b5bffc5],0x3b
  4187e9:	add    BYTE PTR [ebp+0x60003b33],al
  4187ef:	xor    DWORD PTR [ebx],edi
  4187f1:	add    BYTE PTR [eax],cl
  4187f3:	xor    edi,DWORD PTR [ebx]
  4187f5:	add    ah,al
  4187f7:	xor    edi,DWORD PTR [ebx]
  4187f9:	add    BYTE PTR [eax],ch
  4187fb:	xor    bh,BYTE PTR [ebx]
  4187fd:	add    BYTE PTR [esi+0x33],dh
  418800:	cmp    eax,DWORD PTR [eax]
  418802:	jo     0x418837
  418804:	cmp    eax,DWORD PTR [eax]
  418806:	lahf   
  418807:	xor    edi,DWORD PTR [ebx]
  418809:	add    BYTE PTR [ebp+0x33],bl
  41880c:	cmp    eax,DWORD PTR [eax]
  41880e:	xor    ebp,DWORD PTR [edi]
  418810:	cmp    eax,DWORD PTR [eax]
  418812:	loope  0x418844
  418814:	cmp    eax,DWORD PTR [eax]
  418816:	jmp    0x41c34b
  41881b:	add    BYTE PTR [ebx],al
  41881d:	xor    DWORD PTR [ebx],edi
  41881f:	add    BYTE PTR ds:0x18003b31,bh
  418825:	xor    bh,BYTE PTR [ebx]
  418827:	add    BYTE PTR ds:0x8d003b30,al
  41882d:	sahf   
  41882e:	cmp    eax,DWORD PTR [eax]
  418830:	cmp    BYTE PTR [edi],ch
  418832:	cmp    eax,DWORD PTR [eax]
  418834:	or     esi,DWORD PTR [eax]
  418836:	cmp    eax,DWORD PTR [eax]
  418838:	push   eax
  418839:	das    
  41883a:	cmp    eax,DWORD PTR [eax]
  41883c:	inc    ebx
  41883d:	das    
  41883e:	cmp    eax,DWORD PTR [eax]
  418840:	jnp    0x418871
  418842:	cmp    eax,DWORD PTR [eax]
  418844:	and    eax,0x9f003b2f
  418849:	mov    ds:0x9758003b,eax
  41884e:	cmp    eax,DWORD PTR [eax]
  418850:	es inc ebx
  418852:	cmp    eax,DWORD PTR [eax]
  418854:	mov    ch,cl
  418856:	cmp    eax,DWORD PTR [eax]
  418858:	das    
  418859:	in     eax,0xe
  41885b:	aas    
  41885c:	das    
  41885d:	imul   edx,DWORD PTR [ecx],0x3f
  418860:	das    
  418861:	push   es
  418862:	push   cs
  418863:	aas    
  418864:	das    
  418865:	xchg   ebp,eax
  418866:	or     al,0x3f
  418868:	das    
  418869:	and    DWORD PTR [ecx],edx
  41886b:	aas    
  41886c:	das    
  41886d:	push   0xb
  41886f:	aas    
  418870:	das    
  418871:	stos   DWORD PTR es:[edi],eax
  418872:	mov    eax,0xb9602f3e
  418877:	ds das 
  418879:	mov    ebx,0x8e2f3f16
  41887e:	adc    bh,BYTE PTR [edi]
  418880:	add    BYTE PTR [eax],al
  418882:	das    
  418883:	pop    esp
  418884:	(bad)  
  418886:	das    
  418887:	les    esi,FWORD PTR [ebx-0x45cdd0c2]
  41888d:	ds das 
  41888f:	repz mov dh,0x3e
  418892:	das    
  418893:	mov    bh,0xb6
  418895:	ds das 
  418897:	(bad)  
  418898:	mov    ecx,0xba002f3e
  41889d:	ds das 
  41889f:	mov    ecx,0x9f2f3eb9
  4188a4:	mov    edx,0xc67a2f3e
  4188a9:	ds das 
  4188ab:	mov    eax,0x772f3f0a
  4188b0:	adc    DWORD PTR [edi],edi
  4188b2:	das    
  4188b3:	push   cs
  4188b4:	in     eax,0x3e
  4188b6:	das    
  4188b7:	ja     0x4188b8
  4188b9:	add    DWORD PTR [ebx+edi*2],ebp
  4188bc:	add    al,0x3
  4188be:	sub    DWORD PTR [eax+edi*8-0x38fcafa],eax
  4188c5:	or     esi,DWORD PTR [esi-0x52]
  4188c8:	sti    
  4188c9:	or     eax,0x46ef8728
  4188ce:	cmp    eax,0x2112f488
  4188d3:	fdivp  st(2),st
  4188d5:	jmp    0x4188f0
  4188d7:	enter  0xedff,0x16
  4188db:	enter  0xecef,0x17
  4188df:	retf   0xf1ec
  4188e2:	dec    ebx
  4188e3:	mov    esi,0x22c8
  4188e8:	inc    eax
  4188e9:	mov    edi,0xc04d22c8
  4188ee:	(bad)  
  4188ef:	daa    
  4188f0:	dec    esp
  4188f1:	(bad)
  4188f5:	mov    dh,0x11
  4188f7:	sbb    al,0x57
  4188f9:	mov    bh,0x10
  4188fb:	push   ds
  4188fc:	inc    esi
  4188fd:	mov    edx,0x16e82204
  418902:	mov    eax,ds:0xb116f1ba
  418907:	mov    edx,0x13b0bd13
  41890c:	or     BYTE PTR [eax-0x4de4e80a],dh
  418912:	hlt    
  418913:	sbb    esp,edi
  418915:	mov    bl,0xda
  418917:	or     edi,eax
  418919:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41891a:	fimul  WORD PTR [edx]
  41891c:	cmc    
  41891d:	test   al,0xa0
  41891f:	mov    edx,0xfa116e9
  418924:	lods   al,BYTE PTR fs:[esi]
  418926:	ret    0x61c3
  418929:	and    BYTE PTR [edi-0x15db9239],ah
  41892f:	enter  0x4e68,0x15
  418933:	ror    BYTE PTR [ecx-0x22],0xf8
  418937:	mov    bl,0x41
  418939:	fisubr WORD PTR [esp+esi*4]
  41893c:	cmp    esi,ebx
  41893e:	pusha  
  41893f:	mov    ah,0x31
  418941:	fisub  WORD PTR [edi-0x4521d64c]
  418947:	mov    ah,0x21
  418949:	fisub  WORD PTR [eax+0x190000c1]
  41894f:	fiadd  WORD PTR [eax]
  418951:	es xchg ecx,eax
  418953:	stos   DWORD PTR es:[edi],eax
  418954:	add    BYTE PTR [esi],bl
  418956:	mov    DWORD PTR [ebx-0x546e4d00],ebp
  41895c:	add    BYTE PTR [ebx+0xa00ab89],dh
  418962:	jno    0x41890f
  418964:	add    BYTE PTR [ecx+ebp*8-0x1e0bff55],ah
  41896b:	stos   DWORD PTR es:[edi],eax
  41896c:	add    BYTE PTR [eax+ebx*8],ch
  41896f:	stos   DWORD PTR es:[edi],eax
  418970:	add    BYTE PTR [eax-0x30],bl
  418973:	stos   DWORD PTR es:[edi],eax
  418974:	add    BYTE PTR [esi],dl
  418976:	mov    esp,0xbc7000ab
  41897b:	stos   DWORD PTR es:[edi],eax
  41897c:	add    BYTE PTR [edx+0x4400abbc],ah
  418982:	mov    esp,0xa0ee00ab
  418987:	stos   DWORD PTR es:[edi],eax
  418988:	add    BYTE PTR [eax-0x5eff5468],bl
  41898e:	mov    ds:0x9a8700ab,eax
  418993:	stos   DWORD PTR es:[edi],eax
  418994:	add    BYTE PTR [edi-0x7e],bh
  418997:	stos   DWORD PTR es:[edi],eax
  418998:	add    BYTE PTR [ebx],dh
  41899a:	xchg   ecx,eax
  41899b:	stos   DWORD PTR es:[edi],eax
  41899c:	add    BYTE PTR [ebx],dh
  41899e:	mov    DWORD PTR [ebx-0x54813100],ebp
  4189a4:	add    BYTE PTR [edx-0x23],cl
  4189a7:	lods   al,BYTE PTR ds:[esi]
  4189a8:	add    BYTE PTR [ecx],bl
  4189aa:	(bad)  [eax+eax*1+0xacddd6]
  4189b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189b2:	add    BYTE PTR [eax],al
  4189b4:	(bad)  [eax+eax*1+0xad0ce5]
  4189bb:	hlt    
  4189bc:	or     al,0xad
  4189be:	add    bh,dh
  4189c0:	or     al,0xad
  4189c2:	add    dh,dh
  4189c4:	or     al,0xad
  4189c6:	add    BYTE PTR [ecx],al
  4189c8:	shr    DWORD PTR [eax+eax*1+0x3b7fe700],cl
  4189cf:	add    al,bl
  4189d1:	jg     0x418a0e
  4189d3:	add    al,bl
  4189d5:	jg     0x418a12
  4189d7:	add    al,bl
  4189d9:	jg     0x418a16
  4189db:	add    BYTE PTR [ecx+edi*1+0x3b],bh
  4189df:	add    BYTE PTR [ecx+edi*1+0x3b],bh
  4189e3:	add    al,bh
  4189e5:	cmp    bh,BYTE PTR [ebx]
  4189e7:	add    ah,ch
  4189e9:	cmp    edi,DWORD PTR [ebx]
  4189eb:	add    ch,dl
  4189ed:	cmp    al,0x3b
  4189ef:	add    ah,cl
  4189f1:	cmp    al,0x3b
  4189f3:	add    BYTE PTR [ecx+0x23003b3c],ch
  4189f9:	out    0xec,eax
  4189fb:	sbb    edx,0x86fffbd2
  418a01:	pusha  
  418a02:	dec    eax
  418a03:	hlt    
  418a04:	fstp   DWORD PTR [edi+0x48]
  418a07:	lock stc 
  418a09:	pop    edi
  418a0a:	dec    eax
  418a0b:	int3   
  418a0c:	jmp    0x5e9f1340
  418a11:	xor    DWORD PTR [ecx],esi
  418a13:	shl    BYTE PTR [ecx+0x8df8e8],cl
  418a19:	add    BYTE PTR [ebp+0x3655841c],dl
  418a1f:	jmp    0x89d8:0x25bfc84f
  418a26:	jnp    0x418a43
  418a28:	test   BYTE PTR [ebp+0x2e],dl
  418a2b:	jmp    0xfa3a:0x149dd03f
  418a32:	or     DWORD PTR [ebx+0x25],esp
  418a35:	pop    es
  418a36:	push   es
  418a37:	fistp  QWORD PTR [ecx]
  418a39:	fucompp 
  418a3b:	bound  ebx,QWORD PTR ds:0x33df1607
  418a41:	push   ebp
  418a42:	not    BYTE PTR [ebx-0x55d0c6fd]
  418a48:	clc    
  418a49:	or     al,0xb8
  418a4b:	mov    al,BYTE PTR ds:0xb3de2f00
  418a51:	adc    ebx,DWORD PTR [edx-0x7c]
  418a54:	(bad)  
  418a56:	(bad)  
  418a57:	js     0x418a5e
  418a59:	add    BYTE PTR [edi],ch
  418a5b:	mov    WORD PTR [ebp+0x45782745],ss
  418a61:	xchg   DWORD PTR [edx-0x4f02b25c],esi
  418a67:	adc    DWORD PTR [ebp-0x7c01b4bb],0x48
  418a6e:	mov    al,ds:0xe00d4e63
  418a73:	ret    
  418a74:	out    0x86,al
  418a76:	stos   BYTE PTR es:[edi],al
  418a77:	ror    BYTE PTR [ebp-0x3],0x88
  418a7b:	lods   al,BYTE PTR ds:[esi]
  418a7c:	les    eax,FWORD PTR [ecx+0x0]
  418a7f:	add    BYTE PTR [eax],dh
  418a81:	jne    0x418afa
  418a83:	or     DWORD PTR [ebx+0xc],0x4e
  418a87:	std    
  418a88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a89:	stc    
  418a8a:	adc    al,0xfd
  418a8c:	push   0xf457a1b
  418a91:	out    dx,al
  418a92:	mov    bl,0xbf
  418a94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a95:	inc    ecx
  418a96:	dec    eax
  418a97:	cmp    DWORD PTR [ebp+0x29],ebp
  418a9a:	add    eax,0xf4acf2c5
  418a9f:	pop    eax
  418aa0:	out    dx,eax
  418aa1:	je     0x418b22
  418aa3:	cmp    eax,0x4fc126f2
  418aa8:	mov    ebx,0xfb837b9a
  418aad:	(bad)  [ebp-0x3]
  418ab0:	jg     0x418aff
  418ab2:	add    BYTE PTR [ebx-0x2b5204e],cl
  418ab8:	adc    BYTE PTR [eax+0x79],cl
  418abb:	lds    edx,FWORD PTR [edi]
  418abd:	push   ds
  418abe:	(bad)  
  418ac0:	add    bh,bl
  418ac2:	outs   dx,BYTE PTR ds:[esi]
  418ac3:	push   ebx
  418ac4:	lods   al,BYTE PTR ds:[esi]
  418ac5:	jo     0x418b1c
  418ac7:	add    eax,0x70c16a85
  418acc:	xor    esi,ebx
  418ace:	jmp    0x2c9787e3
  418ad3:	cld    
  418ad4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ad5:	xchg   esi,eax
  418ad6:	test   eax,0xc19f3d5b
  418adb:	pop    es
  418adc:	scas   al,BYTE PTR es:[edi]
  418add:	jle    0x418ac8
  418adf:	and    al,0xdf
  418ae2:	jo     0x418aaa
  418ae4:	add    BYTE PTR [eax],al
  418ae6:	(bad)  
  418ae8:	push   edx
  418ae9:	lds    edx,FWORD PTR [esi]
  418aeb:	push   edi
  418aec:	and    eax,0x1c313a2c
  418af1:	add    al,ah
  418af3:	ja     0x418adc
  418af5:	cmp    BYTE PTR [eax-0x21],0x70
  418af9:	jle    0x418b46
  418afb:	imul   esi,DWORD PTR [ebx+0x4c],0xf01c313a
  418b02:	xor    edi,DWORD PTR [ecx]
  418b04:	xor    bh,ah
  418b06:	ret    
  418b07:	and    BYTE PTR [edx],al
  418b09:	jnp    0x418adf
  418b0b:	dec    ebp
  418b0c:	out    0xae,eax
  418b0e:	xor    al,0xdd
  418b10:	sbb    al,BYTE PTR [eax]
  418b12:	mov    al,ds:0xb07fad57
  418b17:	adc    edi,DWORD PTR [edx+0x7a]
  418b1a:	hlt    
  418b1b:	push   ecx
  418b1c:	pop    edi
  418b1d:	lds    esi,FWORD PTR [eax]
  418b1f:	lahf   
  418b20:	inc    edx
  418b21:	push   es
  418b22:	(bad)  
  418b23:	xchg   esi,eax
  418b24:	test   eax,0x65577820
  418b29:	retf   
  418b2a:	xor    ebp,DWORD PTR [ecx+0x13]
  418b2d:	js     0x418ba0
  418b2f:	(bad)  
  418b30:	sub    BYTE PTR [ebx+0x36],bl
  418b33:	mov    ebp,0x826c7a28
  418b38:	jno    0x418ac0
  418b3a:	sub    DWORD PTR [ecx+0x1],0xfffffff6
  418b3e:	je     0x418b97
  418b40:	inc    ebx
  418b41:	loope  0x418bb0
  418b43:	jbe    0x418b63
  418b45:	or     dh,BYTE PTR [edx+0x61]
  418b48:	xchg   BYTE PTR [ebp+0x0],dl
  418b4b:	add    BYTE PTR [ebx+ebp*2-0x4],ah
  418b4f:	(bad)  
  418b50:	in     eax,dx
  418b51:	loopne 0x418b14
  418b53:	rcl    edx,0xbd
  418b56:	shl    DWORD PTR [eax-0x52],0xed
  418b5a:	sti    
  418b5b:	mov    esi,0xb1465764
  418b60:	dec    edx
  418b61:	pop    ebp
  418b62:	pop    ecx
  418b63:	scas   al,BYTE PTR es:[edi]
  418b64:	je     0x418bd1
  418b66:	push   es
  418b67:	sub    DWORD PTR [eax],esi
  418b69:	fiadd  WORD PTR [eax]
  418b6b:	jo     0x418bab
  418b6d:	add    bh,ah
  418b6f:	xchg   esi,eax
  418b70:	hlt    
  418b71:	pusha  
  418b72:	xchg   esi,eax
  418b73:	add    esp,esi
  418b75:	push   0xfffffffc
  418b77:	jo     0x418b97
  418b79:	jmp    0x6956:0x60e47efb
  418b80:	or     cl,BYTE PTR ds:0x5cbe60a5
  418b86:	mov    bh,BYTE PTR [eax+edi*1-0xd62a99f]
  418b8d:	pop    esp
  418b8e:	pop    ebp
  418b8f:	push   esi
  418b90:	hlt    
  418b91:	push   0xffffff88
  418b93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b94:	fs pop edi
  418b96:	pop    esi
  418b97:	cmc    
  418b98:	mov    ebx,0x2a6900dd
  418b9d:	repnz push es
  418b9f:	sub    bl,ch
  418ba1:	rcr    BYTE PTR [edi],cl
  418ba3:	sub    dl,al
  418ba5:	sbb    al,0x89
  418ba7:	adc    dh,BYTE PTR [eax]
  418ba9:	popa   
  418baa:	push   esi
  418bab:	jno    0x418b5d
  418bad:	pop    ds
  418bae:	or     esp,ecx
  418bb0:	add    BYTE PTR [eax],al
  418bb2:	sub    al,0xde
  418bb4:	jo     0x418b9f
  418bb6:	add    bl,dh
  418bb8:	pop    ebx
  418bb9:	add    BYTE PTR [edx+0x600377d],bl
  418bbf:	ins    BYTE PTR es:[edi],dx
  418bc0:	cld    
  418bc1:	jae    0x418b68
  418bc3:	(bad)  
  418bc4:	add    BYTE PTR [eax],al
  418bc6:	neg    bl
  418bc8:	je     0x418c11
  418bca:	push   ebx
  418bcb:	loop   0x418bcd
  418bcd:	xor    BYTE PTR [esi],al
  418bcf:	cwde   
  418bd0:	(bad)  
  418bd2:	(bad)  
  418bd3:	fild   DWORD PTR [eax+0x0]
  418bd6:	jp     0x418c00
  418bd8:	aaa    
  418bd9:	add    dh,al
  418bdb:	sub    edi,esp
  418bdd:	jae    0x418c0c
  418bdf:	mov    bl,ah
  418be1:	jmp    0x426a40
  418be6:	imul   eax,DWORD PTR ds:[edi],0x8feac600
  418bed:	inc    eax
  418bee:	xchg   ecx,eax
  418bef:	adc    al,0xfe
  418bf1:	cmp    eax,0xdbc1
  418bf6:	xor    al,dl
  418bf8:	mov    eax,ecx
  418bfa:	(bad)  
  418bfb:	sbb    cl,BYTE PTR [ecx]
  418bfd:	mov    DWORD PTR [ebx+0x27],edx
  418c00:	std    
  418c01:	inc    DWORD PTR [ecx]
  418c03:	jecxz  0x418b8c
  418c05:	push   esp
  418c06:	adc    DWORD PTR [esi+edi*8],edx
  418c09:	mov    BYTE PTR [ebx],cl
  418c0b:	cs std 
  418c0d:	call   ecx
  418c0f:	pop    es
  418c10:	and    BYTE PTR [edx+0x4c],ch
  418c13:	xor    ebp,ecx
  418c15:	aad    0x0
  418c17:	add    BYTE PTR [esi+eiz*2-0x17],ch
  418c1b:	stc    
  418c1c:	fist   WORD PTR [ebp+0x41]
  418c1f:	call   DWORD PTR [ecx]
  418c21:	adc    al,0xea
  418c23:	adc    al,0xcf
  418c25:	in     eax,0x40
  418c27:	call   DWORD PTR [ecx]
  418c29:	adc    al,0xea
  418c2b:	or     al,0xbf
  418c2d:	in     eax,0x44
  418c2f:	call   DWORD PTR [ecx]
  418c31:	adc    al,0x89
  418c33:	test   DWORD PTR [edi],ebp
  418c35:	sub    DWORD PTR [edi-0x3],eax
  418c38:	and    ah,bh
  418c3a:	rol    DWORD PTR [edi],0xa4
  418c3d:	popa   
  418c3e:	in     al,dx
  418c3f:	or     BYTE PTR [edi],0x80
  418c42:	jge    0x418bc7
  418c44:	dec    edi
  418c45:	jo     0x418c91
  418c47:	std    
  418c48:	mov    ah,0xbf
  418c4a:	ins    BYTE PTR es:[edi],dx
  418c4b:	push   0x2c
  418c4d:	push   ds
  418c4e:	push   edx
  418c4f:	mul    DWORD PTR [eax]
  418c51:	push   eax
  418c52:	mov    edi,0xdf8b1411
  418c57:	sub    bh,0x10
  418c5a:	push   cs
  418c5b:	mov    edi,esp
  418c5d:	jmp    0x418ca0
  418c5f:	push   0x2c
  418c61:	(bad)  
  418c62:	lods   eax,DWORD PTR ds:[esi]
  418c63:	hlt    
  418c64:	les    ebp,FWORD PTR [ebx+0x38]
  418c67:	jl     0x418c7b
  418c69:	or     cl,al
  418c6b:	inc    BYTE PTR [ebp+0x40]
  418c6e:	push   es
  418c6f:	mov    eax,esp
  418c71:	xor    eax,0x69a80260
  418c76:	sbb    ch,al
  418c78:	in     al,dx
  418c79:	je     0x418cf8
  418c7b:	fadd   DWORD PTR [eax]
  418c7d:	add    BYTE PTR [esi-0x6f02eeff],ah
  418c83:	out    0x7b,eax
  418c85:	fld    DWORD PTR [edx]
  418c87:	js     0x418c67
  418c89:	stc    
  418c8a:	xchg   esi,eax
  418c8b:	push   esp
  418c8c:	add    DWORD PTR [eax],eax
  418c8e:	das    
  418c8f:	mov    eax,0x752edfbb
  418c94:	add    BYTE PTR [eax],al
  418c96:	push   esp
  418c97:	jnp    0x418d16
  418c99:	inc    ebx
  418c9a:	aas    
  418c9b:	(bad)  
  418c9c:	jnp    0x418cd2
  418c9e:	pop    eax
  418c9f:	pop    ds
  418ca0:	dec    edx
  418ca1:	mov    DWORD PTR [edi-0x7],esi
  418ca4:	add    BYTE PTR ds:0x57059aa6,bh
  418caa:	cmp    BYTE PTR [ebp-0x22305c7b],ch
  418cb0:	and    cl,BYTE PTR [ecx+0x32]
  418cb3:	frstor [esi-0x49]
  418cb6:	aam    0x65
  418cb8:	popa   
  418cb9:	xchg   DWORD PTR [edi+0x65],esp
  418cbc:	or     ecx,DWORD PTR [ecx-0x50]
  418cbf:	pop    ebx
  418cc0:	(bad)  
  418cc1:	dec    eax
  418cc2:	adc    ah,BYTE PTR [esi-0x15]
  418cc5:	nop
  418cc6:	jno    0x418c96
  418cc8:	rol    BYTE PTR fs:[eax],0xe0
  418ccc:	pusha  
  418ccd:	mov    edi,0xf02caa04
  418cd2:	jb     0x418cb5
  418cd4:	jo     0x418c9c
  418cd6:	aam    0x5b
  418cd8:	scas   eax,DWORD PTR es:[edi]
  418cd9:	iret   
  418cda:	push   ss
  418cdb:	pop    ecx
  418cdc:	and    eax,0xa7b9c058
  418ce1:	adc    al,0x0
  418ce3:	add    ch,bh
  418ce5:	pop    edx
  418ce7:	lds    esi,FWORD PTR [ebp-0x20e3912e]
  418ced:	push   ebx
  418cee:	out    0x72,al
  418cf0:	scas   al,BYTE PTR es:[edi]
  418cf1:	ja     0x418ce1
  418cf3:	or     al,0xe7
  418cf5:	lock stc 
  418cf7:	test   BYTE PTR [eax],dh
  418cf9:	gs addr16 pop edx
  418cfc:	sub    ebp,DWORD PTR [ecx+0x59a2d4a1]
  418d02:	setb   BYTE PTR gs:[ebp+0x7b]
  418d07:	test   BYTE PTR [esi+eax*4],al
  418d0a:	jmp    0x2ef8:0x246c55ce
  418d11:	jmp    0x7cf6:0x1cbbf90a
  418d18:	ja     0x418d79
  418d1a:	dec    ecx
  418d1b:	dec    eax
  418d1c:	das    
  418d1d:	fsubp  st(1),st
  418d1f:	inc    edx
  418d20:	inc    edi
  418d21:	(bad)  
  418d22:	data16 arpl WORD PTR [eax+0x56],dx
  418d26:	lods   eax,DWORD PTR ds:[esi]
  418d27:	dec    edi
  418d28:	mov    al,0x1b
  418d2a:	add    DWORD PTR [ecx],esp
  418d2c:	jo     0x418d06
  418d2e:	xchg   DWORD PTR [esp+eax*4+0x62],esp
  418d32:	cld    
  418d33:	es aaa 
  418d35:	sub    eax,DWORD PTR ds:0xf521a5f1
  418d3b:	pop    ds
  418d3c:	out    dx,al
  418d3d:	fadd   DWORD PTR [edx*4-0x504c2cb2]
  418d44:	push   ds
  418d45:	push   esi
  418d46:	leave  
  418d47:	sub    BYTE PTR [eax],al
  418d49:	add    BYTE PTR [esi+edx*8-0x7f],ah
  418d4d:	or     BYTE PTR [edi-0x22],dh
  418d50:	add    cl,ch
  418d52:	mov    bl,0x7d
  418d54:	add    dh,BYTE PTR [eax-0x12]
  418d57:	mov    BYTE PTR [eax-0x4d2c84dc],cl
  418d5d:	ins    DWORD PTR es:[edi],dx
  418d5e:	jecxz  0x418dc4
  418d60:	add    ecx,ebp
  418d62:	sub    al,0x5d
  418d64:	dec    esi
  418d65:	mov    ecx,0x72cd2152
  418d6a:	out    dx,al
  418d6b:	fadd   DWORD PTR [edi+0x465d771c]
  418d71:	mov    cl,0xae
  418d73:	xchg   BYTE PTR [ebp+0x1],dh
  418d76:	xor    al,0x21
  418d78:	in     eax,dx
  418d79:	ins    BYTE PTR es:[edi],dx
  418d7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d7b:	pop    ebp
  418d7c:	cmp    BYTE PTR [eax-0x5dd82d84],dh
  418d82:	fisub  DWORD PTR [ebx]
  418d84:	jmp    0x47e:0xc95d6beb
  418d8b:	addr16 lock inc edx
  418d8e:	lods   al,BYTE PTR ds:[esi]
  418d8f:	call   0xfaaa7768
  418d94:	xchg   DWORD PTR [ebx+0x24],esp
  418d97:	adc    DWORD PTR [ebp-0x41a26f26],edx
  418d9d:	test   eax,0xe9fc62e9
  418da2:	push   0x9300fbbe
  418da7:	add    al,0x8a
  418da9:	dec    ebp
  418daa:	loop   0x418dc8
  418dac:	mov    al,0x40
  418dae:	add    BYTE PTR [eax],al
  418db0:	stc    
  418db1:	sbb    al,0xfe
  418db3:	(bad)  
  418db4:	jecxz  0x418d53
  418db6:	std    
  418db7:	dec    DWORD PTR [ecx]
  418db9:	jmp    0x9f897683
  418dbe:	std    
  418dbf:	dec    DWORD PTR [ebp+0x4685f82d]
  418dc5:	lea    esi,[ecx]
  418dc7:	jmp    0x418dc6
  418dc9:	call   0x5f1f220d
  418dce:	inc    ebp
  418dcf:	(bad)  
  418dd0:	stc    
  418dd1:	sbb    al,0x3a
  418dd3:	clc    
  418dd4:	cmp    DWORD PTR [ecx-0x76],0x555d4c07
  418ddb:	dec    DWORD PTR [ecx]
  418ddd:	sbb    eax,0x56551470
  418de2:	inc    ebp
  418de3:	(bad)  
  418de4:	jmp    0xf7b58a05
  418de9:	in     eax,0x45
  418deb:	add    DWORD PTR [ebx*2+0x1c79ff50],ebp
  418df2:	jne    0x418dfa
  418df4:	adc    edi,edx
  418df6:	ja     0x418d8c
  418df8:	adc    al,0x3e
  418dfa:	test   BYTE PTR [ebp-0x66],bh
  418dfd:	rol    al,1
  418dff:	cmp    DWORD PTR [ebx+0xe],edx
  418e02:	jge    0x418e49
  418e04:	jg     0x418da4
  418e06:	les    esi,FWORD PTR [eax+edx*8+0x8]
  418e0a:	pop    ss
  418e0b:	cmovo  ebx,ebp
  418e0e:	mov    DWORD PTR [ebp-0x1e4e2],ecx
  418e14:	add    BYTE PTR [eax],al
  418e16:	pop    ecx
  418e17:	push   ecx
  418e18:	add    eax,0xf09d4d08
  418e1d:	psrld  mm5,QWORD PTR [edx+0x752f0000]
  418e24:	ret    0x286
  418e27:	adc    DWORD PTR [edi],eax
  418e29:	push   ebx
  418e2a:	and    esp,DWORD PTR [edi]
  418e2c:	gs out 0x89,eax
  418e2f:	jne    0x418e31
  418e31:	add    BYTE PTR [eax],dh
  418e33:	jecxz  0x418e36
  418e35:	cmp    edx,esi
  418e37:	test   al,0xf2
  418e39:	cmp    DWORD PTR [ebp+0x75],0x0
  418e3d:	add    BYTE PTR [ebp-0x12],ch
  418e40:	mov    al,0xfb
  418e42:	fs and dh,ah
  418e45:	jno    0x418e4b
  418e47:	ficomp WORD PTR [ebx+0xd752f00]
  418e4d:	adc    DWORD PTR [ebx+0x64],0x46
  418e51:	std    
  418e52:	xor    cl,dh
  418e54:	add    BYTE PTR [bx],ch
  418e57:	jne    0x418e60
  418e59:	push   ebx
  418e5a:	lahf   
  418e5b:	imul   edi,DWORD PTR [esi-0x73],0x2f
  418e5f:	jne    0x418e61
  418e61:	jmp    0x40c586b3
  418e66:	fcom   DWORD PTR [ebx-0x32a4ffba]
  418e6c:	or     DWORD PTR [ebx-0x61],edx
  418e6f:	stos   BYTE PTR es:[edi],al
  418e70:	mov    ah,0xfc
  418e72:	cmp    dl,BYTE PTR [ecx+0x33bb437a]
  418e78:	int3   
  418e79:	pop    DWORD PTR [eax]
  418e7b:	add    BYTE PTR [edx-0x57033f1f],ah
  418e81:	inc    ebx
  418e82:	inc    esi
  418e83:	mov    bl,0xef
  418e85:	dec    ebx
  418e86:	inc    esi
  418e87:	std    
  418e88:	xchg   DWORD PTR [edi],edx
  418e8a:	ret    0x90fc
  418e8d:	out    dx,eax
  418e8e:	stos   DWORD PTR es:[edi],eax
  418e8f:	sti    
  418e90:	mov    dl,0x34
  418e92:	int3   
  418e93:	aaa    
  418e94:	xchg   esp,eax
  418e95:	cdq    
  418e96:	jns    0x418e53
  418e98:	repz repz inc ebp
  418e9b:	std    
  418e9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e9d:	(bad)  [ebx+esi*2+0x341f9b2e]
  418ea4:	ffree  st(3)
  418ea6:	pop    edi
  418ea7:	ja     0x418eac
  418ea9:	arpl   WORD PTR [ebx+0x45],cx
  418eac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ead:	lahf   
  418eae:	(bad)  
  418eb0:	pop    es
  418eb1:	(bad)  
  418eb2:	mov    ah,0xf3
  418eb4:	scas   eax,DWORD PTR es:[edi]
  418eb5:	(bad)  
  418eb6:	jmp    0x5d99ab8a
  418ebb:	scas   eax,DWORD PTR es:[edi]
  418ebc:	xor    esp,DWORD PTR [edx+0x23]
  418ebf:	or     al,0x77
  418ec1:	fist   WORD PTR [ebp-0x42a89106]
  418ec7:	inc    edi
  418ec8:	push   esi
  418ec9:	or     ebx,esi
  418ecb:	sar    DWORD PTR [ecx+0x3444805e],1
  418ed1:	jmp    0x418e9c
  418ed3:	add    ah,0x1e
  418ed6:	repz inc esp
  418ed8:	cli    
  418ed9:	fbstp  TBYTE PTR [ebp-0x6]
  418edc:	scas   eax,DWORD PTR es:[edi]
  418edd:	and    ebp,DWORD PTR [edx]
  418edf:	inc    ebp
  418ee0:	add    BYTE PTR [eax],al
  418ee2:	jmp    0x3ca5:0x32cee861
  418ee9:	clc    
  418eea:	pop    edi
  418eeb:	xlat   BYTE PTR ds:[ebx]
  418eec:	imul   ecx,DWORD PTR [ecx],0xc1edeb25
  418ef2:	mov    cl,0xb
  418ef4:	mov    esi,0xf7664478
  418ef9:	cmp    dh,BYTE PTR [eax+0x640adde3]
  418eff:	cmp    bl,BYTE PTR ds:0x9a1361e1
  418f05:	mov    DWORD PTR [edx],0x6d18ab55
  418f0b:	mov    ds:0xde2f0081,eax
  418f10:	add    al,0xb1
  418f12:	aas    
  418f13:	sahf   
  418f14:	shl    DWORD PTR [esi+0x5400d17c],0xec
  418f1b:	fidivr WORD PTR [esi+0x7391b1b2]
  418f21:	lods   eax,DWORD PTR ds:[esi]
  418f22:	xor    eax,0x48d5dd15
  418f27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f28:	ret    
  418f29:	out    0xaf,al
  418f2b:	icebp  
  418f2c:	add    ecx,ebp
  418f2e:	sub    al,0xd3
  418f30:	mov    dl,0xf1
  418f32:	ins    BYTE PTR es:[edi],dx
  418f33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f34:	dec    ebp
  418f35:	cmp    DWORD PTR [eax-0x41],esi
  418f38:	aaa    
  418f39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f3a:	add    dl,ch
  418f3c:	sbb    eax,0xeaebf3f2
  418f41:	adc    dl,BYTE PTR [esi+eiz*4]
  418f44:	ret    
  418f45:	out    dx,al
  418f46:	add    BYTE PTR [eax],al
  418f48:	scas   eax,DWORD PTR es:[edi]
  418f49:	or     al,0x2
  418f4b:	jmp    0xe1f4627c
  418f50:	in     al,dx
  418f51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f52:	dec    ebp
  418f53:	stc    
  418f54:	stc    
  418f55:	fidiv  DWORD PTR [edi]
  418f57:	fisubr WORD PTR es:[ebp-0x18]
  418f5b:	call   0xdf053514
  418f60:	scas   eax,DWORD PTR es:[edi]
  418f61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f62:	add    ecx,ebp
  418f64:	sub    al,0x59
  418f66:	inc    esi
  418f67:	mov    ecx,0x62fce4b0
  418f6c:	not    BYTE PTR [eax+esi*1-0x57]
  418f70:	sti    
  418f71:	adc    BYTE PTR [ecx-0x3a],dl
  418f74:	inc    esi
  418f75:	mov    esi,0x556cbefb
  418f7a:	mov    es,WORD PTR [ecx]
  418f7c:	ins    BYTE PTR es:[edi],dx
  418f7d:	arpl   sp,di
  418f7f:	sbb    BYTE PTR [ecx-0x47c1af22],al
  418f85:	xchg   edx,eax
  418f86:	mov    bl,BYTE PTR [ebx+eax*8]
  418f89:	pop    eax
  418f8a:	jle    0x418fd5
  418f8c:	stos   BYTE PTR es:[edi],al
  418f8d:	pop    esp
  418f8e:	sub    DWORD PTR [esi+0xe962ec],ecx
  418f94:	mov    cs,WORD PTR [esi]
  418f96:	(bad)  
  418f97:	inc    ebp
  418f99:	adc    DWORD PTR [edx-0x7f724028],ecx
  418f9f:	je     0x418f2e
  418fa1:	popa   
  418fa2:	inc    edi
  418fa3:	call   0x45cb6633
  418fa8:	mov    dh,0x52
  418faa:	inc    eax
  418fab:	call   0xa1088fb0
  418fb0:	push   ss
  418fb1:	cld    
  418fb2:	loope  0x418fd0
  418fb4:	push   cs
  418fb5:	test   cl,ah
  418fb7:	fld    DWORD PTR [eax]
  418fb9:	add    bh,dl
  418fbb:	mov    al,ds:0x1d01fc19
  418fc0:	jne    0x418fe1
  418fc2:	mov    esi,0x51fffcbd
  418fc7:	pop    edi
  418fc8:	aam    0x74
  418fca:	in     al,0xcc
  418fcc:	mov    bl,dl
  418fce:	push   es
  418fcf:	fadd   QWORD PTR [eax]
  418fd1:	cmp    DWORD PTR ds:0x31fffcbc,0x4f3b049c
  418fdb:	retf   
  418fdc:	jg     0x418fa8
  418fde:	push   es
  418fdf:	fadd   QWORD PTR [eax]
  418fe1:	mov    eax,DWORD PTR [ebx-0x12ccba61]
  418fe7:	bound  edx,QWORD PTR [edi-0x2c]
  418fea:	jp     0x41901d
  418fec:	mov    DWORD PTR [ebp+0x2],eax
  418fef:	arpl   WORD PTR [edi-0x1e31ec0],dx
  418ff5:	je     0x418fbd
  418ff7:	pusha  
  418ff8:	aas    
  418ff9:	xchg   esp,eax
  418ffa:	add    eax,0xea75fd81
  418fff:	push   eax
  419000:	dec    eax
  419001:	xchg   esp,eax
  419002:	and    esi,0x1cd1ff40
  419008:	mov    BYTE PTR [ebp-0x1e4b6],dl
  41900e:	das    
  41900f:	pop    ebp
  419010:	ins    BYTE PTR es:[edi],dx
  419011:	aas    
  419012:	add    BYTE PTR [eax],al
  419014:	nop
  419015:	push   eax
  419016:	mov    eax,eax
  419018:	cmp    dl,dh
  41901a:	sahf   
  41901b:	add    BYTE PTR [edi],ch
  41901d:	jne    0x41904a
  41901f:	cmp    BYTE PTR [esi],dh
  419021:	push   0xffffff98
  419023:	je     0x418fd5
  419025:	cld    
  419026:	rcl    BYTE PTR [edi+0x4b8b3754],0xbb
  41902d:	int3   
  41902e:	xchg   ecx,eax
  41902f:	inc    esp
  419030:	pop    eax
  419031:	or     BYTE PTR [edi],bh
  419033:	cmp    DWORD PTR [esi-0x78],ebp
  419036:	in     eax,0x89
  419038:	mov    edx,0x40fd3f41
  41903d:	fisttp QWORD PTR [ebx+esi*2]
  419040:	and    ah,dh
  419042:	add    BYTE PTR [eax+esi*1-0x50],0x3e
  419047:	call   FWORD PTR [esp+eax*2-0x3f857c72]
  41904e:	ds std 
  419050:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419051:	cmp    DWORD PTR [eax+edi*1],edi
  419054:	outs   dx,BYTE PTR ds:[esi]
  419055:	jbe    0x41900b
  419057:	bound  esi,QWORD PTR [esi+0x62373c59]
  41905d:	mov    ebp,0xea345ab8
  419062:	aaa    
  419063:	jne    0x4190bc
  419065:	cmc    
  419066:	mov    esi,0xf2023afc
  41906b:	cmp    BYTE PTR [edx+0x7d],ah
  41906e:	mov    dh,0x29
  419070:	scas   eax,DWORD PTR es:[edi]
  419071:	(bad)  
  419072:	or     dh,BYTE PTR [ebx+0xa]
  419075:	xchg   edi,eax
  419077:	or     eax,DWORD PTR [eax]
  419079:	add    BYTE PTR [edi],cl
  41907b:	mov    ds:0xb4828121,al
  419080:	inc    ecx
  419081:	std    
  419082:	mov    eax,0xac11b475
  419087:	icebp  
  419088:	(bad)  
  419089:	cld    
  41908a:	test   al,0xdd
  41908c:	mov    ds:0x66d51b06,al
  419091:	jg     0x419086
  419093:	pop    esi
  419094:	xchg   ebx,eax
  419095:	inc    ecx
  419096:	sub    eax,0xb1c8e5e9
  41909b:	loopne 0x419022
  41909d:	jecxz  0x419084
  41909f:	cdq    
  4190a0:	outs   dx,DWORD PTR ds:[esi]
  4190a1:	lahf   
  4190a2:	inc    ebx
  4190a3:	pop    edi
  4190a4:	jae    0x4190e7
  4190a6:	mov    BYTE PTR [eax-0x5595be92],cl
  4190ac:	ds sub eax,0xf53eab30
  4190b2:	pop    ebx
  4190b3:	push   ss
  4190b4:	punpcklwd mm3,mm3
  4190b7:	add    eax,0x62203d69
  4190bc:	inc    ebx
  4190bd:	inc    ecx
  4190be:	mov    ebx,0x58bf670d
  4190c3:	fnstsw WORD PTR [ebp-0x9af59f1]
  4190c9:	inc    eax
  4190ca:	sub    bl,BYTE PTR [esi+0x23]
  4190cd:	pop    ss
  4190ce:	push   ebx
  4190cf:	and    eax,0x528503a7
  4190d4:	mov    dl,0x86
  4190d6:	not    dl
  4190d8:	fdivp  st(4),st
  4190da:	loopne 0x4190ae
  4190dc:	jmp    0x5147:0xee00008c
  4190e3:	add    al,0x2f
  4190e5:	ficomp WORD PTR [esi-0x31]
  4190e8:	or     BYTE PTR [ecx+eiz*1-0x48],ah
  4190ec:	dec    eax
  4190ed:	popa   
  4190ee:	gs sbb al,ah
  4190f1:	in     al,dx
  4190f2:	imul   ebx,DWORD PTR [ebx-0x131621d1],0x65
  4190f9:	out    0x5e,al
  4190fb:	(bad)  
  4190fc:	cmp    BYTE PTR [edi-0x10],ah
  4190ff:	mov    WORD PTR [esi+edx*2+0xf],?
  419103:	iret   
  419104:	xor    BYTE PTR [edi+0x1],ah
  419107:	and    esp,DWORD PTR [edi]
  419109:	inc    ebp
  41910a:	jg     0x4190f5
  41910c:	sub    al,0xde
  41910e:	jg     0x4190c1
  419110:	out    dx,eax
  419111:	inc    esi
  419112:	jle    0x419186
  419114:	loope  0x419107
  419116:	cmp    DWORD PTR [ebx+ecx*2],esp
  419119:	sar    BYTE PTR [edx],cl
  41911b:	push   0xffffffee
  41911d:	loope  0x41919b
  41911f:	retf   
  419120:	mov    cl,0xe2
  419122:	mov    ch,0x81
  419124:	out    dx,eax
  419125:	pop    edx
  419126:	cld    
  419127:	sbb    DWORD PTR [edx-0x1091ca9f],esp
  41912d:	pop    edx
  41912e:	sub    BYTE PTR [ecx],0x34
  419131:	scas   al,BYTE PTR es:[edi]
  419132:	xchg   DWORD PTR [esp+edi*1+0x7ce1c15f],esp
  419139:	pop    edx
  41913a:	push   ss
  41913b:	popf   
  41913c:	es sahf 
  41913e:	add    BYTE PTR [edx-0x18],ch
  419141:	jmp    0x42457f
  419146:	(bad)  
  419147:	fild   DWORD PTR [edx]
  419149:	pusha  
  41914a:	mov    cl,0xbd
  41914c:	sti    
  41914d:	outs   dx,DWORD PTR cs:[esi]
  41914f:	addr16 mov ds,ebp
  419152:	outs   dx,DWORD PTR ds:[esi]
  419153:	pop    ebx
  419154:	cld    
  419155:	push   ds
  419156:	inc    ecx
  419157:	or     al,ah
  419159:	stos   BYTE PTR es:[edi],al
  41915a:	sub    al,0x5f
  41915c:	mov    esi,0xfc5b6f89
  419161:	jmp    0x2971721e
  419166:	dec    ebx
  419167:	out    0x87,al
  419169:	lods   al,BYTE PTR ds:[esi]
  41916a:	test   BYTE PTR [ebp+0x28],dh
  41916d:	sub    edi,DWORD PTR [ebp+0x56]
  419170:	and    bh,0x2d
  419173:	fld    DWORD PTR [edx+ebx*1]
  419176:	jae    0x4191bf
  419178:	sbb    ah,BYTE PTR [edx-0xa]
  41917b:	je     0x4191a5
  41917d:	xor    al,0xa3
  41917f:	dec    si
  419181:	add    dh,ah
  419183:	imul   ecx,DWORD PTR [ebx+ecx*4],0x552a7e23
  41918a:	push   esi
  41918b:	imul   ecx,DWORD PTR [esp+eax*1+0x6d],0xffffffe0
  419190:	data16 (bad) 
  419192:	out    dx,al
  419193:	cmp    al,0x5e
  419195:	pop    ebx
  419196:	fistp  WORD PTR [edi+0x69530010]
  41919c:	in     eax,dx
  41919d:	xor    DWORD PTR [edx+0x76ec8219],0x2f
  4191a4:	push   ebp
  4191a5:	call   0x3f2880
  4191aa:	add    BYTE PTR [eax],al
  4191ac:	or     eax,0x9684101f
  4191b1:	xchg   ebp,eax
  4191b2:	js     0x419141
  4191b4:	xchg   edx,eax
  4191b5:	inc    esp
  4191b6:	or     BYTE PTR [eax+0x7c],dl
  4191b9:	clc    
  4191ba:	xchg   DWORD PTR [edx+eiz*1-0x6],eax
  4191be:	push   eax
  4191bf:	push   0x56
  4191c1:	xor    edi,ebp
  4191c3:	adc    eax,0x41b28e
  4191c8:	shl    DWORD PTR [ecx+0x1dc56378],cl
  4191ce:	and    BYTE PTR [esi+edx*1],dl
  4191d1:	xchg   esp,eax
  4191d2:	pop    eax
  4191d3:	or     edx,0x43
  4191d6:	sbb    al,0x0
  4191d8:	ret    0xfdee
  4191db:	je     0x4191bf
  4191dd:	aas    
  4191de:	in     al,0x3d
  4191e0:	mov    ch,0xe2
  4191e2:	add    BYTE PTR [ebp-0xbb6aaa],al
  4191e8:	add    BYTE PTR [ebx+0x1c],0xe8
  4191ec:	ret    
  4191ed:	nop
  4191ee:	std    
  4191ef:	dec    DWORD PTR [ebp-0x46]
  4191f2:	jg     0x4191cf
  4191f4:	sbb    BYTE PTR [ecx+0x6a],0x0
  4191f8:	adc    eax,0x2f744f0a
  4191fd:	xor    al,0x3b
  4191ff:	sub    edi,0xffffffb1
  419202:	loop   0x41922c
  419204:	sub    cl,BYTE PTR [ecx]
  419206:	push   ebx
  419207:	inc    ecx
  419208:	das    
  419209:	inc    edx
  41920a:	dec    eax
  41920b:	in     al,0x6f
  41920d:	inc    ebp
  41920e:	add    eax,DWORD PTR ss:[eax]
  419211:	add    BYTE PTR [edi+0x73],bl
  419214:	mov    edi,0xdf930ff
  419219:	mov    edx,ebp
  41921b:	pop    eax
  41921c:	out    dx,eax
  41921d:	jle    0x4191fe
  41921f:	inc    ebp
  419220:	add    BYTE PTR [eax],al
  419222:	mov    ah,0xfa
  419224:	and    BYTE PTR [edi+0x15ae],al
  41922a:	das    
  41922b:	clc    
  41922c:	cmp    edx,DWORD PTR [ebx]
  41922e:	outs   dx,DWORD PTR ds:[esi]
  41922f:	aaa    
  419230:	sar    bh,0x69
  419233:	push   edx
  419234:	in     al,0xfc
  419236:	(bad)  
  419238:	cmp    esi,DWORD PTR [ebx+0x3b]
  41923b:	mov    esp,0xb3f817b8
  419240:	mov    eax,0xc32480f
  419245:	std    
  419246:	mov    edx,0xdf133b4c
  41924b:	repnz mov esi,0x876fd1ff
  419251:	jecxz  0x4191dd
  419253:	pop    es
  419254:	loopne 0x419255
  419256:	jnp    0x419228
  419258:	sub    edi,DWORD PTR [edi+0xb]
  41925b:	or     DWORD PTR [edx],eax
  41925d:	add    BYTE PTR [edi],ch
  41925f:	cwde   
  419260:	cmp    esi,DWORD PTR [ebx+0x3f]
  419263:	shl    al,0x7
  419266:	add    dl,bl
  419268:	jmp    0x419266
  41926a:	sub    BYTE PTR ds:0x544b733b,0xb4
  419271:	pop    ds
  419272:	call   0x13eae48
  419277:	add    BYTE PTR [edx-0x22],bl
  41927a:	add    DWORD PTR ds:0xb7daf25c,edi
  419280:	and    BYTE PTR [ebx+0x5d],bl
  419283:	adc    BYTE PTR [esi+0x5b],bl
  419286:	cmc    
  419287:	xlat   BYTE PTR ds:[ebx]
  419288:	ficomp DWORD PTR [esi+0xa6c8ae9]
  41928e:	gs inc esp
  419290:	and    ah,BYTE PTR [esi-0x3e]
  419293:	add    al,0x2f
  419295:	fidiv  WORD PTR [ebx-0xd22b339]
  41929b:	xchg   DWORD PTR [ecx-0x23],edi
  41929e:	jmp    0xe3783ea6
  4192a3:	xchg   DWORD PTR [ecx-0x23],esp
  4192a6:	jmp    0xf61a40ae
  4192ab:	add    ebp,DWORD PTR [edx]
  4192ad:	bound  ebp,QWORD PTR [esi-0x7e21d0fc]
  4192b3:	mov    ebx,esp
  4192b5:	pop    edx
  4192b6:	imul   ecx,DWORD PTR [eax+0x7d6dea6f],0x2f
  4192bd:	fsubp  st(1),st
  4192bf:	cmp    al,0x1e
  4192c1:	pop    ebx
  4192c2:	std    
  4192c3:	idiv   DWORD PTR [ecx]
  4192c5:	sahf   
  4192c6:	jmp    0x6e2c0251
  4192cb:	ins    DWORD PTR es:[edi],dx
  4192cc:	das    
  4192cd:	fsubp  st(1),st
  4192cf:	ror    DWORD PTR [eax-0x3d],cl
  4192d2:	mov    bh,0x3c
  4192d4:	sub    ch,BYTE PTR [eax-0x5b]
  4192d7:	rep lods eax,DWORD PTR ds:[esi]
  4192d9:	push   ds
  4192da:	xrelease xchg DWORD PTR [eax],eax
  4192dd:	add    BYTE PTR [ecx+0x7903e9de],bh
  4192e3:	mov    cl,0x5e
  4192e5:	stc    
  4192e6:	xchg   esi,eax
  4192e7:	fidivr WORD PTR [ecx+0x2cd952b]
  4192ed:	cmp    eax,0xb7714ea6
  4192f2:	dec    esp
  4192f3:	arpl   WORD PTR [ecx],ax
  4192f5:	jmp    DWORD PTR [eax-0x174bd825]
  4192fb:	xor    eax,DWORD PTR [eax-0x17]
  4192fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192ff:	aad    0xc
  419301:	ins    BYTE PTR es:[edi],dx
  419302:	test   eax,0xbd6fe12
  419307:	scas   al,BYTE PTR es:[edi]
  419308:	sti    
  419309:	push   ss
  41930a:	lods   al,BYTE PTR ds:[esi]
  41930b:	and    cl,cl
  41930d:	int    0xec
  41930f:	pop    ecx
  419310:	ret    
  419311:	fs mov eax,0x2fb6fc54
  419317:	fiadd  WORD PTR [ecx]
  419319:	jmp    0xf86e8081
  41931e:	ins    BYTE PTR es:[edi],dx
  41931f:	pop    ecx
  419320:	test   DWORD PTR [ecx+0x6c8819d8],ebp
  419326:	pop    eax
  419327:	push   ebp
  419328:	cld    
  419329:	mov    es,WORD PTR [edi+0x6f9f5cdc]
  41932f:	pop    ecx
  419330:	jne    0x4192ed
  419332:	cmp    bl,ch
  419334:	xor    BYTE PTR [edi-0xaf3a691],bl
  41933a:	sub    cl,BYTE PTR [edi]
  41933c:	mov    dh,0x4d
  41933e:	sbb    DWORD PTR [ebx-0x4],ebx
  419341:	ins    BYTE PTR es:[edi],dx
  419342:	add    BYTE PTR [eax],al
  419344:	test   eax,0xb56fe12
  419349:	scas   al,BYTE PTR es:[edi]
  41934a:	sti    
  41934b:	push   ss
  41934c:	mov    ah,0x8d
  41934e:	in     eax,0x44
  419350:	sti    
  419351:	pop    edx
  419352:	les    esp,FWORD PTR [eax+edi*1+0x54]
  419356:	cld    
  419357:	ss fiadd WORD PTR cs:[ecx]
  41935b:	jmp    0xf87280c3
  419360:	in     al,dx
  419361:	pop    eax
  419362:	test   DWORD PTR [ecx],ebp
  419364:	fldz   
  419366:	push   0xddace9
  41936b:	sub    DWORD PTR [ebx+ebx*2],0x76
  41936f:	add    dl,ch
  419371:	sbb    DWORD PTR [edx],esi
  419373:	(bad)  
  419374:	(bad)  [eax+0xf]
  419377:	inc    eax
  419378:	(bad)  
  419379:	sbb    DWORD PTR [eax+0x30],esi
  41937c:	shl    edx,1
  41937e:	rcl    BYTE PTR [edx],0x6
  419381:	loop   0x4193e0
  419383:	pop    esi
  419384:	pop    ebp
  419385:	pop    ds
  419386:	sub    BYTE PTR [ebx-0x71],bl
  419389:	lahf   
  41938a:	sub    al,0x0
  41938c:	sti    
  41938d:	push   0x913ae8ed
  419392:	std    
  419393:	dec    DWORD PTR [edx-0x5e]
  419396:	outs   dx,DWORD PTR ds:[esi]
  419397:	pop    es
  419398:	inc    ebx
  419399:	adc    eax,0x20b86020
  41939e:	cld    
  41939f:	push   edx
  4193a0:	pop    eax
  4193a1:	imul   esi,DWORD PTR [eax+0x14],0x75fd2c59
  4193a8:	add    BYTE PTR [eax],al
  4193aa:	xchg   BYTE PTR [edx-0x15e40104],cl
  4193b0:	std    
  4193b1:	adc    eax,0x41ac2a
  4193b6:	sbb    BYTE PTR ds:0x19cd1070,dl
  4193bc:	(bad)  
  4193bd:	jne    0x419341
  4193bf:	adc    esi,DWORD PTR [eax+0x8]
  4193c2:	shr    esi,1
  4193c4:	pusha  
  4193c5:	(bad)  
  4193c6:	test   esp,ebx
  4193c8:	mov    eax,ebx
  4193ca:	fist   DWORD PTR [esp+esi*2]
  4193cd:	push   esp
  4193ce:	retf   
  4193cf:	mov    eax,0xbcb5078
  4193d4:	jne    0x419422
  4193d6:	lds    edx,FWORD PTR [ebx-0x4]
  4193d9:	jae    0x4193b4
  4193db:	pusha  
  4193dc:	js     0x4193ee
  4193de:	push   ss
  4193df:	mov    BYTE PTR [ebx],bh
  4193e1:	mov    esi,0x41b5c6
  4193e6:	fcom   DWORD PTR [eax+edx*1]
  4193e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193ea:	das    
  4193eb:	push   ebx
  4193ec:	sar    bh,0xfa
  4193ef:	inc    edx
  4193f0:	fcomp  st(5)
  4193f2:	ins    BYTE PTR es:[edi],dx
  4193f3:	inc    ebp
  4193f4:	add    eax,0x746d4a73
  4193f9:	jbe    0x41946a
  4193fb:	inc    ebp
  4193fc:	aaa    
  4193fd:	adc    eax,ebx
  4193ff:	xor    eax,eax
  419401:	push   DWORD PTR [ebx-0x5bf9537b]
  419407:	cmp    eax,0x46713828
  41940c:	add    cl,ch
  41940e:	add    BYTE PTR [eax],al
  419410:	sub    eax,0xef8444f3
  419415:	sbb    DWORD PTR [eax],eax
  419417:	and    DWORD PTR [edx],0x2f4156fd
  41941d:	inc    esi
  41941e:	sar    ah,cl
  419420:	cmp    bl,cl
  419422:	adc    eax,0xd6a02f40
  419427:	mov    BYTE PTR [esp+ebx*4-0x27],ch
  41942b:	rcr    DWORD PTR [edi],0x45
  41942e:	mov    DWORD PTR [eax-0x6e],edx
  419431:	les    edi,FWORD PTR ds:0x84c8280d
  419437:	push   DWORD PTR [eax+0x45]
  41943a:	aaa    
  41943b:	and    al,0xc2
  41943d:	cli    
  41943e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41943f:	ds das 
  419441:	lds    edi,FWORD PTR [ebp*1-0x87b211d]
  419448:	add    eax,0x76801d31
  41944d:	in     eax,0x84
  41944f:	test   esi,0x2e648637
  419455:	inc    ebp
  419456:	add    BYTE PTR [eax-0x7af8e4ca],al
  41945c:	test   BYTE PTR [esi+0x0],al
  41945f:	add    BYTE PTR [ebp-0x7afdd4cf],dl
  419465:	fiadd  WORD PTR [ebx]
  419467:	fsub   st(7),st
  419469:	arpl   WORD PTR [ecx],di
  41946b:	xor    ebp,0xfffffffd
  41946e:	imul   edi,DWORD PTR ds:0x83e0cc60,0xd3f50000
  419478:	repnz sub DWORD PTR [esi-0x23],0x54af03e9
  419480:	mov    al,0xa
  419482:	lods   al,BYTE PTR ds:[esi]
  419483:	push   cs
  419484:	jmp    0xfd05c38c
  419489:	fucomi st,st(7)
  41948b:	pop    ebp
  41948c:	loope  0x419477
  41948e:	cmp    esp,DWORD PTR [ecx+0x0]
  419491:	add    ebp,DWORD PTR [edi]
  419493:	fidivr WORD PTR [edi]
  419495:	adc    dl,BYTE PTR [edi+0x1b]
  419498:	push   0x3b
  41949a:	add    ah,bh
  41949c:	fs pop ss
  41949e:	test   al,0x56
  4194a0:	jmp    0xa084:0xa6b63bad
  4194a7:	mov    dl,0x1c
  4194a9:	add    BYTE PTR ds:0xb54541f6,al
  4194af:	sbb    al,0xe6
  4194b1:	jecxz  0x4194f7
  4194b3:	mov    ebp,0xd43b0017
  4194b8:	sti    
  4194b9:	sbb    ebp,DWORD PTR [edi+0x2db7ba54]
  4194bf:	pop    esi
  4194c0:	jno    0x4194bd
  4194c2:	loop   0x4194ab
  4194c4:	imul   edi,DWORD PTR [ebx],0x83f0d209
  4194ca:	pop    eax
  4194cb:	or     bl,ch
  4194cd:	jle    0x41952a
  4194cf:	fucomp st(1)
  4194d1:	add    edx,ebp
  4194d3:	repnz mov cl,0x44
  4194d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194d7:	sbb    al,0xf6
  4194d9:	jecxz  0x4194db
  4194db:	add    ah,dh
  4194dd:	mov    esp,0xd864ffb7
  4194e2:	add    BYTE PTR [edi-0x605a1a4],bh
  4194e8:	loopne 0x4194ca
  4194ea:	and    BYTE PTR [eax],0x14
  4194ed:	aam    0xe2
  4194ef:	imul   eax,DWORD PTR [esp+eax*1+0x75],0x2e4dab08
  4194f7:	xchg   ebp,eax
  4194f8:	pusha  
  4194f9:	pop    esi
  4194fa:	cli    
  4194fb:	(bad)  
  4194fc:	daa    
  4194fd:	pop    edx
  4194fe:	imul   edi,esi,0xf0815327
  419504:	loop   0x4194d7
  419506:	or     eax,0xc131469
  41950b:	ins    BYTE PTR es:[edi],dx
  41950c:	pop    ebp
  41950d:	fiadd  WORD PTR [eax]
  41950f:	jmp    0xaa9a87ae
  419514:	xchg   edx,eax
  419515:	stc    
  419516:	pop    eax
  419517:	stos   BYTE PTR es:[edi],al
  419518:	lods   al,BYTE PTR ds:[esi]
  419519:	dec    ebp
  41951a:	pop    esi
  41951b:	cmp    al,0x2f
  41951d:	enter  0x2116,0xf2
  419521:	pop    ebp
  419522:	cli    
  419523:	stc    
  419524:	fsub   st,st(0)
  419526:	xor    BYTE PTR [eax+0x7315d395],0xed
  41952d:	loope  0x41954f
  41952f:	(bad)  
  419531:	iret   
  419532:	add    al,0xd5
  419534:	into   
  419535:	retf   
  419536:	or     DWORD PTR [ecx+0x35],ebp
  419539:	sbb    BYTE PTR [esp+ebp*2],cl
  41953c:	lods   eax,DWORD PTR ds:[esi]
  41953d:	fiadd  WORD PTR [eax]
  41953f:	jmp    0xecdb9544
  419544:	pop    eax
  419545:	stos   BYTE PTR es:[edi],al
  419546:	lods   al,BYTE PTR ds:[esi]
  419547:	dec    ebp
  419548:	sub    al,0xde
  41954a:	fdivr  st,st(0)
  41954c:	sti    
  41954d:	popw   ss
  41954f:	pop    esi
  419550:	cli    
  419551:	push   ds
  419552:	jg     0x4194e7
  419554:	add    DWORD PTR [eax+0x3c],0x7fe0f9d5
  41955b:	mov    edx,0x394b0066
  419560:	ror    DWORD PTR [edi],0xa0
  419563:	mov    al,0x80
  419565:	mov    edx,0x3c3316
  41956a:	push   es
  41956b:	test   BYTE PTR [edx-0x80],bl
  41956e:	dec    edi
  41956f:	cmp    ch,BYTE PTR [edi-0x68]
  419572:	pushf  
  419573:	aas    
  419574:	push   esp
  419575:	ret    
  419576:	or     edi,ecx
  419578:	mov    ebx,0x56e15e80
  41957d:	inc    eax
  41957e:	push   es
  41957f:	loope  0x4195f5
  419581:	add    al,0xbc
  419583:	inc    eax
  419584:	push   esp
  419585:	ret    
  419586:	push   esi
  419587:	sbb    BYTE PTR [edx],ah
  419589:	je     0x4195bc
  41958b:	popa   
  41958c:	hlt    
  41958d:	aas    
  41958e:	jae    0x4195de
  419590:	jmp    0xcc046f85
  419595:	sbb    BYTE PTR [ecx+ebx*8-0x1f39bfaa],0x74
  41959d:	add    al,0x5c
  41959f:	inc    eax
  4195a0:	push   esp
  4195a1:	ret    
  4195a2:	push   ss
  4195a3:	adc    esp,DWORD PTR [edx]
  4195a5:	je     0x4195a7
  4195a7:	add    BYTE PTR [esi],dh
  4195a9:	pop    edx
  4195aa:	hlt    
  4195ab:	aas    
  4195ac:	arpl   dx,si
  4195ae:	jmp    0xcc042fa3
  4195b3:	or     BYTE PTR [edx+ebx*8],0x56
  4195b7:	inc    eax
  4195b8:	xchg   esi,eax
  4195b9:	loopne 0x41962a
  4195bb:	or     eax,0x74221306
  4195c0:	jle    0x419622
  4195c2:	hlt    
  4195c3:	aas    
  4195c4:	(bad)  
  4195c5:	fbstp  TBYTE PTR [ecx]
  4195c7:	rcl    BYTE PTR [esi],0xa1
  4195ca:	xchg   DWORD PTR [ecx+0x46],ecx
  4195cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195ce:	ins    BYTE PTR es:[edi],dx
  4195cf:	inc    ecx
  4195d0:	inc    esi
  4195d1:	pop    ss
  4195d2:	ins    DWORD PTR es:[edi],dx
  4195d3:	inc    ecx
  4195d4:	push   esi
  4195d5:	mul    DWORD PTR [edi+0x41]
  4195d8:	das    
  4195d9:	inc    edi
  4195da:	call   0xf1888449
  4195df:	push   0xffffffee
  4195e1:	inc    esi
  4195e2:	imul   bp,WORD PTR [esi+0x45],0x61
  4195e7:	imul   ebp,DWORD PTR [esi+0x45],0x7e
  4195eb:	imul   ebp,DWORD PTR [esi+0x45],0xffffff9e
  4195ef:	push   0x6e
  4195f1:	inc    ebp
  4195f2:	push   ebx
  4195f3:	imul   ebp,DWORD PTR [esi+0x45],0x55
  4195f7:	imul   ebp,DWORD PTR [esi+0x45],0x27
  4195fb:	imul   ebp,DWORD PTR [esi+0x45],0x0
  4195ff:	outs   dx,BYTE PTR ds:[esi]
  419600:	outs   dx,BYTE PTR ds:[esi]
  419601:	inc    ebp
  419602:	add    BYTE PTR [esi+0x6e],ch
  419605:	inc    ebp
  419606:	adc    al,0x6e
  419608:	outs   dx,BYTE PTR ds:[esi]
  419609:	inc    ebp
  41960a:	clc    
  41960b:	ins    DWORD PTR es:[edi],dx
  41960c:	add    BYTE PTR [eax],al
  41960e:	outs   dx,BYTE PTR ds:[esi]
  41960f:	inc    ebp
  419610:	ror    DWORD PTR [eax-0x7e4373d],1
  419616:	lods   al,BYTE PTR ds:[esi]
  419617:	and    esp,esp
  419619:	mov    BYTE PTR [edx+0x55],dh
  41961c:	iret   
  41961d:	mov    BYTE PTR [edx+0x3d],bl
  419620:	into   
  419621:	mov    BYTE PTR [edi-0xc78bfa8],bh
  419627:	fcomp  DWORD PTR [edi+eax*4]
  41962a:	jmp    0x41960c
  41962c:	adc    al,0x87
  41962e:	repz fcomp DWORD PTR [eax]
  419631:	xchg   ebx,ebp
  419633:	and    BYTE PTR [edx+ecx*4],cl
  419636:	icebp  
  419637:	dec    ebx
  419638:	mov    BYTE PTR [ebx+ecx*2+0x40],al
  41963c:	and    BYTE PTR [ebx+edx*2+0x40],0xb3
  419641:	push   esp
  419642:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419643:	fimul  DWORD PTR [eax]
  419645:	je     0x419677
  419647:	cwde   
  419648:	inc    eax
  419649:	out    0xe3,eax
  41964b:	xor    eax,0x7eb20000
  419650:	mov    cl,0x42
  419652:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419653:	fidiv  WORD PTR [ebx-0x29da4cfc]
  419659:	out    0xc0,al
  41965b:	push   esp
  41965c:	call   0x519fe80e
  419661:	(bad)  
  419662:	mov    esp,0x383c6a39
  419667:	retf   0x831a
  41966a:	sbb    BYTE PTR [ecx],dl
  41966c:	mov    ebp,0xd19ea61a
  419671:	add    BYTE PTR [eax],0x0
  419674:	out    dx,eax
  419675:	leave  
  419676:	ss mov bh,cl
  419679:	push   edx
  41967a:	cmp    al,BYTE PTR [eax-0x76e13611]
  419680:	jno    0x41966d
  419682:	lds    edi,FWORD PTR [esi+0x23]
  419685:	(bad)  [ecx-0x43]
  419688:	inc    ebx
  419689:	inc    edi
  41968a:	cmp    ebx,edi
  41968c:	test   al,0xe1
  41968e:	loope  0x41961b
  419690:	jno    0x41967d
  419692:	mov    dh,0x43
  419694:	outs   dx,DWORD PTR ds:[esi]
  419695:	inc    ebp
  419696:	pop    ss
  419697:	adc    ebp,DWORD PTR [edi]
  419699:	fisubr WORD PTR [edi-0x42]
  41969c:	rcl    DWORD PTR [esi],0x4
  41969f:	scas   eax,DWORD PTR es:[edi]
  4196a0:	sub    al,0x65
  4196a2:	dec    esi
  4196a3:	loopne 0x4196b9
  4196a5:	adc    bh,dl
  4196a7:	scas   al,BYTE PTR es:[edi]
  4196a8:	sub    al,0x65
  4196aa:	ds loopne 0x4196e9
  4196ad:	add    bl,dh
  4196af:	imul   DWORD PTR [edx]
  4196b1:	retf   
  4196b2:	in     eax,0x8a
  4196b4:	adc    edi,edx
  4196b6:	leave  
  4196b7:	xchg   BYTE PTR [ebx],dh
  4196b9:	jecxz  0x41972b
  4196bb:	mov    eax,0xc060ee4c
  4196c0:	dec    esp
  4196c1:	cli    
  4196c2:	into   
  4196c3:	cmp    esp,DWORD PTR [edx]
  4196c5:	pop    edx
  4196c6:	adc    eax,DWORD PTR ds:0xb669de2f
  4196cc:	popa   
  4196cd:	or     al,BYTE PTR [ecx]
  4196cf:	arpl   WORD PTR [edx-0x37],ax
  4196d2:	adc    BYTE PTR [esi-0x6f],ch
  4196d5:	fiadd  WORD PTR [ecx+0x480000e7]
  4196db:	push   edx
  4196dc:	cmp    al,0xe8
  4196de:	sub    al,0xe1
  4196e0:	xor    DWORD PTR [edx+0x32],0xffffffde
  4196e4:	add    BYTE PTR [edx+0x78],ah
  4196e7:	fimul  DWORD PTR [ebx]
  4196e9:	jg     0x4196d4
  4196eb:	push   eax
  4196ec:	inc    esp
  4196ed:	push   0x63
  4196ef:	adc    eax,0xee426e0c
  4196f4:	add    cl,ch
  4196f6:	pop    ebx
  4196f7:	cli    
  4196f8:	test   eax,eax
  4196fa:	lods   al,BYTE PTR ds:[esi]
  4196fb:	adc    DWORD PTR [ecx],eax
  4196fd:	imul   eax,DWORD PTR [esi-0x1b],0xe3226d0b
  419704:	add    cl,ch
  419706:	lods   al,BYTE PTR ds:[esi]
  419707:	push   edi
  419708:	pop    es
  419709:	imul   BYTE PTR [eax-0x18]
  41970c:	or     ebp,ecx
  41970e:	sub    al,0x5e
  419710:	and    ebp,edx
  419712:	scas   eax,DWORD PTR es:[edi]
  419713:	mov    al,ds:0xa0afee08
  419718:	or     al,0xe6
  41971a:	mov    dh,0xd8
  41971c:	and    dl,0xf4
  41971f:	loop   0x4196a5
  419721:	mov    edx,0x500de2d
  419726:	mul    DWORD PTR [ebp+0x3]
  419729:	scas   eax,DWORD PTR es:[edi]
  41972a:	jmp    0xf85e:0x25d21150
  419731:	in     al,0x33
  419733:	pop    edx
  419734:	retf   
  419735:	out    0x2c,al
  419737:	fiadd  WORD PTR [eax-0x7a1cc95e]
  41973d:	scas   eax,DWORD PTR es:[edi]
  41973e:	add    BYTE PTR [eax],al
  419740:	adc    DWORD PTR [ecx-0x4],0xffffffaf
  419744:	mov    edx,0xd823350
  419749:	pop    esi
  41974a:	clc    
  41974b:	add    BYTE PTR [ebx-0x26],ah
  41974e:	test   cl,al
  419750:	pop    esp
  419751:	fld    QWORD PTR [eax]
  419753:	sbb    ch,0xe6
  419756:	or     eax,0xe7b785
  41975b:	add    ch,dl
  41975d:	mov    BYTE PTR [eax],ah
  41975f:	adc    al,0x56
  419761:	adc    eax,DWORD PTR [ebx+0x1]
  419764:	adc    al,0x8e
  419766:	or     BYTE PTR [ebx-0x3f802677],0xea
  41976d:	cmp    BYTE PTR [ecx-0x7611d5ac],cl
  419773:	dec    esp
  419774:	sub    ch,dl
  419776:	sub    edx,ecx
  419778:	mov    bh,0x65
  41977a:	retf   
  41977b:	inc    DWORD PTR [esi-0x30]
  41977e:	shl    BYTE PTR [esp+edi*8+0x66],0x43
  419783:	pop    ss
  419784:	jmp    0x1593:0x8e040cd0
  41978b:	mov    bl,BYTE PTR [eax+0x5e7f24e1]
  419791:	xchg   ecx,eax
  419792:	and    BYTE PTR [edi],cl
  419794:	ror    edi,1
  419796:	add    DWORD PTR [eax],0x6481dcc6
  41979c:	cmp    dh,dh
  41979e:	add    cl,ch
  4197a0:	or     DWORD PTR ds:0xfffe,ecx
  4197a6:	inc    esi
  4197a7:	add    DWORD PTR [ecx],esp
  4197a9:	cmovp  esp,ebp
  4197ac:	or     al,0x0
  4197ae:	xchg   esi,eax
  4197af:	pop    esp
  4197b0:	cli    
  4197b1:	or     DWORD PTR [ecx-0x79f404a8],edx
  4197b7:	fadd   st(2),st
  4197b9:	inc    esi
  4197ba:	xchg   DWORD PTR ds:0xcd12ce3,edi
  4197c0:	inc    BYTE PTR [eax-0x7af2b033]
  4197c6:	das    
  4197c7:	adc    BYTE PTR [eax+eax*1],al
  4197ca:	das    
  4197cb:	mov    ebp,0x4457c006
  4197d0:	pop    eax
  4197d1:	or     BYTE PTR [eax],dh
  4197d3:	mov    edx,0x472f091c
  4197d8:	dec    edx
  4197d9:	inc    esi
  4197da:	cs (bad) 
  4197dc:	pop    eax
  4197dd:	adc    dl,al
  4197df:	dec    esp
  4197e0:	cmp    BYTE PTR [esi+0x19],0x3a
  4197e4:	mov    ah,0x3
  4197e6:	cld    
  4197e7:	push   es
  4197e8:	sbb    al,0x1
  4197ea:	cld    
  4197eb:	push   es
  4197ec:	lds    edi,FWORD PTR [edi+0x43fe410f]
  4197f2:	dec    ebx
  4197f3:	inc    eax
  4197f4:	js     0x41983c
  4197f6:	inc    eax
  4197f7:	mov    esp,0x5aa0fc7
  4197fc:	mov    ecx,0x3007b410
  419801:	shr    BYTE PTR [ebp+ebp*8+0x7d257404],1
  419808:	inc    DWORD PTR [edx+0x2fc40000]
  41980e:	add    BYTE PTR [eax],al
  419810:	scas   eax,DWORD PTR es:[edi]
  419811:	inc    edi
  419812:	or     BYTE PTR [edx+0x7ce42869],0xa7
  419819:	and    esp,0x3eb9200c
  41981f:	dec    al
  419821:	cmp    BYTE PTR [ebx+0x44],bh
  419824:	or     edx,DWORD PTR [ebp-0x25]
  419827:	inc    edx
  419828:	sub    ebx,DWORD PTR [esi]
  41982a:	pop    esi
  41982b:	or     eax,0x437b452f
  419830:	cmp    ebp,esp
  419832:	enter  0x3f23,0xcc
  419836:	ror    DWORD PTR [ebx],0x2c
  419839:	add    dl,BYTE PTR ds:0x7d8ba497
  41983f:	inc    esp
  419840:	push   ebx
  419841:	(bad)  
  419843:	jle    0x41982e
  419845:	in     eax,0xde
  419847:	inc    edx
  419848:	add    ch,dh
  41984a:	pop    ss
  41984b:	or     dh,BYTE PTR [esi]
  41984d:	call   0x536e:0xe5dfdbc5
  419854:	test   al,0xa2
  419856:	(bad)
  419859:	out    0x5e,al
  41985b:	xlat   BYTE PTR ds:[ebx]
  41985c:	or     al,0x6
  41985e:	popa   
  41985f:	scas   eax,DWORD PTR es:[edi]
  419860:	or     al,0xa
  419862:	scas   eax,DWORD PTR es:[di]
  419864:	or     al,0xf6
  419866:	jmp    0xd6a4c923
  41986b:	out    0x20,eax
  41986d:	gs into 
  41986f:	out    0x0,eax
  419871:	add    BYTE PTR [eax+0x3],al
  419874:	sub    BYTE PTR [esi],cl
  419876:	jae    0x419872
  419878:	cmc    
  419879:	jl     0x4198ec
  41987b:	out    0x5e,al
  41987d:	(bad)  
  41987e:	dec    esp
  41987f:	out    dx,al
  419880:	pop    esp
  419881:	(bad)  
  419882:	cmp    BYTE PTR [edi+0x71],cl
  419885:	(bad)  
  419886:	dec    esp
  419887:	out    dx,al
  419888:	outs   dx,BYTE PTR ds:[esi]
  419889:	leave  
  41988a:	xor    bl,ah
  41988c:	sub    BYTE PTR [ecx+eiz*2-0x1e],bh
  419890:	fimul  DWORD PTR [eax+0x3e9e0c5]
  419896:	jmp    0x22338132
  41989b:	call   0x319e:0x5a220bcd
  4198a2:	retf   0x6f4e
  4198a5:	scas   eax,DWORD PTR es:[edi]
  4198a6:	sub    BYTE PTR [ebx+0x23],ah
  4198a9:	sbb    BYTE PTR [ebp+ebx*1-0x565820a2],ch
  4198b0:	add    eax,0xda1b60c
  4198b5:	adc    al,0x56
  4198b7:	and    al,0x29
  4198b9:	shl    DWORD PTR [edi-0x449fee1],cl
  4198bf:	pop    edx
  4198c0:	shl    DWORD PTR ds:0xfe436489,0x88
  4198c7:	pop    eax
  4198c8:	or     eax,0x1397f4e7
  4198cd:	arpl   WORD PTR [ebp-0x17],sp
  4198d0:	and    al,0xe
  4198d2:	jmp    0x41986d
  4198d4:	and    al,0xf6
  4198d6:	add    BYTE PTR [eax],al
  4198d8:	das    
  4198d9:	pop    ebx
  4198da:	inc    edi
  4198db:	jle    0x4198fb
  4198dd:	push   ecx
  4198de:	or     BYTE PTR ds:0x8000e647,0x2d
  4198e5:	push   eax
  4198e6:	cld    
  4198e7:	stos   WORD PTR es:[edi],ax
  4198e9:	push   esp
  4198ea:	push   cs
  4198eb:	out    dx,al
  4198ec:	mov    al,0x9b
  4198ee:	or     eax,0xf85e2ce9
  4198f3:	jecxz  0x419924
  4198f5:	bound  edi,QWORD PTR [edx]
  4198f7:	hlt    
  4198f8:	sub    al,0xde
  4198fa:	xchg   BYTE PTR [edi-0x1a78fdc9],ah
  419900:	adc    al,BYTE PTR [ebp+0x25]
  419903:	fild   QWORD PTR [esi+ebx*8]
  419906:	ret    0x2daf
  419909:	fild   WORD PTR [edi+0xc4bb1de]
  41990f:	ins    DWORD PTR es:[edi],dx
  419910:	push   ds
  419911:	fld    DWORD PTR [eax]
  419913:	jmp    0x1f3db583
  419918:	test   al,0x1e
  41991a:	jne    0x41990f
  41991c:	pop    edx
  41991d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41991e:	adc    ecx,ebp
  419920:	lods   eax,DWORD PTR ds:[esi]
  419921:	fiadd  DWORD PTR [ecx]
  419923:	popa   
  419924:	cmc    
  419925:	xacquire xchg BYTE PTR [edi],ch
  419928:	add    bh,BYTE PTR es:[ecx+esi*2-0x10]
  41992d:	add    DWORD PTR [esi+eiz*8],ecx
  419930:	test   al,0x4c
  419932:	or     eax,0x45572ce9
  419937:	add    BYTE PTR [edx],dh
  419939:	repnz sub DWORD PTR [ebp+0x0],eax
  41993d:	add    BYTE PTR [edx-0x77631cdf],cl
  419943:	loope  0x419945
  419945:	cmp    BYTE PTR [ebp-0x3f590cb],0xd6
  41994c:	and    al,0xfd
  41994e:	mov    ah,al
  419950:	mov    BYTE PTR [esi],al
  419952:	lods   eax,DWORD PTR ds:[esi]
  419953:	mov    WORD PTR [ebx+edi*8+0x13],?
  419957:	fistp  QWORD PTR [edi+0x40]
  41995a:	pop    ebx
  41995b:	loope  0x41995d
  41995d:	xor    BYTE PTR [eax-0x3],0xc2
  419961:	inc    esi
  419962:	jo     0x419947
  419964:	ret    0x5546
  419967:	jecxz  0x41992b
  419969:	inc    esi
  41996a:	push   edi
  41996b:	repz jecxz 0x419933
  41996e:	dec    edx
  41996f:	loope  0x419971
  419971:	and    BYTE PTR [eax],0xe3
  419974:	or     DWORD PTR [esi+0xe],0x1a4e820e
  41997b:	push   cs
  41997c:	cmp    ebx,0x8088951c
  419982:	pop    ebp
  419983:	dec    esp
  419984:	jo     0x41990d
  419986:	xchg   esi,eax
  419987:	cli    
  419988:	dec    eax
  419989:	setae  bh
  41998c:	pop    es
  41998d:	add    BYTE PTR [esi],al
  41998f:	xchg   edi,eax
  419990:	inc    edx
  419991:	add    DWORD PTR [ebx],eax
  419993:	call   0xe7b9907
  419998:	cmp    ebx,0x8c7fddc2
  41999e:	(bad)  
  41999f:	loopne 0x4199a1
  4199a1:	mov    BYTE PTR [eax],0x0
  4199a4:	sbb    bh,0x2
  4199a7:	jmp    0x3de716
  4199ac:	push   esi
  4199ad:	stc    
  4199ae:	push   esp
  4199af:	rcpps  xmm7,XMMWORD PTR [eax-0x5]
  4199b3:	jmp    FWORD PTR [edi]
  4199b5:	aaa    
  4199b6:	inc    esi
  4199b7:	inc    esi
  4199b8:	cs inc esp
  4199ba:	sbb    eax,0x37337a
  4199bf:	adc    BYTE PTR [esi+eiz*8+0x360782fb],0x0
  4199c7:	add    BYTE PTR [ecx+0x4],dh
  4199ca:	push   es
  4199cb:	or     BYTE PTR [esi+0x2f0000ee],dl
  4199d1:	mov    bh,0x27
  4199d3:	sub    eax,0xfed2ba20
  4199d8:	push   0x2e464636
  4199dd:	dec    esi
  4199de:	sbb    eax,0x372b56
  4199e3:	mov    ebp,esp
  4199e5:	data16 icebp 
  4199e7:	push   es
  4199e8:	shr    al,0xa2
  4199eb:	or     al,0x81
  4199ed:	mul    DWORD PTR [edx-0x5d19b880]
  4199f3:	xchg   cl,ch
  4199f5:	inc    esi
  4199f6:	inc    esi
  4199f7:	inc    esi
  4199f8:	cs aas 
  4199fa:	sbb    eax,0x35333a
  4199ff:	adc    BYTE PTR [esp+ebx*8],0xb9
  419a03:	push   es
  419a04:	jmp    0x4a9f84
  419a09:	add    BYTE PTR [esi],dl
  419a0b:	dec    edx
  419a0c:	cld    
  419a0d:	inc    DWORD PTR [eax]
  419a0f:	mov    dh,0x27
  419a11:	xor    BYTE PTR [ebx+0x2f],bh
  419a14:	cmp    cl,0x36
  419a17:	je     0x419a02
  419a19:	gs mov ah,0x83
  419a1c:	adc    BYTE PTR [esi+0x54],ah
  419a1f:	cmc    
  419a20:	mul    BYTE PTR [ebp+0x28]
  419a23:	or     edi,DWORD PTR [eax]
  419a25:	data16 sub al,0xf6
  419a28:	mov    ds:0xa685d780,al
  419a2d:	xchg   BYTE PTR [ecx-0x22],ch
  419a30:	stc    
  419a31:	ins    BYTE PTR es:[edi],dx
  419a32:	rcr    bh,cl
  419a34:	jmp    0xa948e33c
  419a39:	(bad)  
  419a3a:	mov    dl,0x49
  419a3c:	fild   WORD PTR [ebx]
  419a3e:	das    
  419a3f:	pop    eax
  419a40:	sub    al,0x17
  419a42:	push   ebx
  419a43:	push   edi
  419a44:	out    dx,al
  419a45:	cli    
  419a46:	mov    DWORD PTR [esi],esi
  419a48:	out    0x3,al
  419a4a:	das    
  419a4b:	pop    ecx
  419a4c:	daa    
  419a4d:	push   esp
  419a4e:	inc    ebx
  419a4f:	aad    0x1a
  419a51:	and    DWORD PTR [ecx],edx
  419a53:	fistp  DWORD PTR [ebx+0x42]
  419a56:	or     DWORD PTR [edi-0x7e],ebx
  419a59:	repz rcl BYTE PTR [esp+0x12],cl
  419a5e:	imul   esp,DWORD PTR [eax+ebp*8-0x10ceae01],0x6f5e2f03
  419a69:	jecxz  0x419a28
  419a6b:	aam    0xa3
  419a6d:	lds    eax,FWORD PTR [eax]
  419a6f:	add    BYTE PTR [ecx-0x26],al
  419a72:	push   eax
  419a73:	inc    esi
  419a74:	es fsubp st(1),st
  419a77:	xor    DWORD PTR [esi],0xe
  419a7a:	(bad)  
  419a7b:	dec    eax
  419a7c:	scas   eax,DWORD PTR es:[edi]
  419a7d:	inc    esi
  419a7e:	adc    DWORD PTR [edi-0x3a913c20],ebp
  419a84:	ds (bad) 
  419a86:	into   
  419a87:	inc    ebx
  419a88:	and    eax,0xf66de2c4
  419a8d:	ret    
  419a8e:	out    0x44,al
  419a90:	mov    DWORD PTR [edi+0x12],ebx
  419a93:	repz xchg edx,eax
  419a95:	push   ebp
  419a96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a97:	adc    DWORD PTR [esi],eax
  419a99:	gs gs ret 0x9f8
  419a9e:	loope  0x419a56
  419aa0:	cmp    eax,0xee6df2c4
  419aa5:	ret    
  419aa6:	sbb    bx,WORD PTR [edi]
  419aa9:	les    eax,FWORD PTR [eax]
  419aab:	pusha  
  419aac:	repnz out dx,al
  419aae:	ret    0x2ba7
  419ab1:	fsub   st(1),st
  419ab3:	jno    0x419a6b
  419ab5:	dec    edx
  419ab6:	cld    
  419ab7:	imul   eax,DWORD PTR [esi],0xda6d0bfe
  419abd:	aad    0x0
  419abf:	jmp    0xd553eea
  419ac4:	scas   eax,DWORD PTR es:[edi]
  419ac5:	(bad)  [eax+edx*8]
  419ac8:	mov    ch,0xd6
  419aca:	add    cl,ch
  419acc:	or     DWORD PTR [ebp-0x2e7a1230],ebx
  419ad2:	and    cl,BYTE PTR [edi]
  419ad4:	add    BYTE PTR [eax],al
  419ad6:	mul    BYTE PTR [ebx-0x7569f8ec]
  419adc:	pop    es
  419add:	punpckhdq mm1,QWORD PTR [eax-0x74d1f838]
  419ae4:	arpl   WORD PTR [edx+0x3b],bp
  419ae7:	push   cs
  419ae8:	mov    edx,0xde2e86
  419aed:	pinsrw mm4,WORD PTR [ebx-0x74a9f8ec],0x74
  419af5:	xor    eax,0xe907a414
  419afa:	sub    al,0x5e
  419afc:	clc    
  419afd:	jecxz  0x419adf
  419aff:	test   DWORD PTR [eax+0xfce2052],0x75fe4669
  419b09:	sub    DWORD PTR [ecx-0x60],0xf825e601
  419b10:	pop    es
  419b11:	jmp    0xf539f942
  419b16:	shl    eax,0xc2
  419b19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b1a:	sub    eax,0xe7c9e9ee
  419b1f:	dec    ecx
  419b20:	cld    
  419b21:	imul   edx,DWORD PTR [esi],0x4b000bd4
  419b27:	repz or DWORD PTR [eax],eax
  419b2a:	(bad)  
  419b2b:	mov    ds:0xe4f30142,eax
  419b30:	or     cl,BYTE PTR [ebx]
  419b32:	(bad)  
  419b33:	fld    QWORD PTR [eax-0xd6e4305]
  419b39:	mov    al,BYTE PTR [eax]
  419b3b:	add    BYTE PTR [eax],cl
  419b3d:	repz and al,0x9a
  419b40:	xchg   edx,eax
  419b41:	xlat   BYTE PTR ds:[ebx]
  419b42:	jecxz  0x419b38
  419b44:	(bad)  
  419b45:	fld    QWORD PTR [eax]
  419b47:	sub    BYTE PTR [ebp+0x48],0xd
  419b4b:	test   dl,bl
  419b4d:	inc    edi
  419b4e:	cld    
  419b4f:	call   DWORD PTR [esi]
  419b51:	test   BYTE PTR [esi],0xf
  419b54:	or     ah,dh
  419b56:	push   es
  419b57:	add    BYTE PTR [esi+0x503235d],al
  419b5d:	mov    eax,DWORD PTR [edi+edi*8]
  419b60:	aad    0x8a
  419b62:	or     bh,bh
  419b64:	int3   
  419b65:	popf   
  419b66:	or     al,0x20
  419b68:	jb     0x419be6
  419b6a:	or     eax,0xfc470982
  419b6f:	inc    DWORD PTR [edx-0x6e78f289]
  419b75:	inc    esi
  419b76:	cld    
  419b77:	inc    DWORD PTR [ecx-0x45]
  419b7a:	rol    esi,0x88
  419b7d:	repz add dh,al
  419b80:	fcomp  st(5)
  419b82:	sti    
  419b83:	cmp    BYTE PTR [esi-0x75],0x7d
  419b87:	dec    eax
  419b88:	ficomp DWORD PTR [ecx+eax*4]
  419b8b:	call   0x48712c55
  419b90:	retf   0x8128
  419b93:	call   0x485d2cad
  419b98:	call   0x791:0xae881d4
  419b9f:	dec    eax
  419ba0:	add    BYTE PTR [eax],al
  419ba2:	das    
  419ba3:	inc    eax
  419ba4:	or     DWORD PTR [edi],0x34
  419ba7:	aaa    
  419ba8:	add    dh,al
  419baa:	jno    0x419bd5
  419bac:	cli    
  419bad:	call   0x16079d22
  419bb2:	ss fadd st(6),st
  419bb5:	lds    ebp,FWORD PTR [ecx+0x31]
  419bb8:	add    ch,cl
  419bba:	pop    esp
  419bbb:	jns    0x419b7c
  419bbd:	adc    eax,0xc5ba2c2e
  419bc2:	icebp  
  419bc3:	dec    eax
  419bc4:	add    cl,ch
  419bc6:	call   0x32575b4b
  419bcb:	sub    al,0xc6
  419bcd:	(bad)
  419bd0:	adc    ecx,ebp
  419bd2:	inc    esp
  419bd3:	mov    ah,0x1c
  419bd5:	dec    ebp
  419bd6:	sti    
  419bd7:	inc    esp
  419bd8:	mov    eax,0xbd0f4673
  419bdd:	jae    0x419bef
  419bdf:	cmpxchg DWORD PTR ds:0x47f9eaf7,edx
  419be6:	xor    dl,al
  419be8:	or     ch,BYTE PTR ss:[edi]
  419beb:	aaa    
  419bec:	inc    edx
  419bed:	inc    esi
  419bee:	cmp    DWORD PTR [eax],edi
  419bf0:	sbb    ebx,DWORD PTR [ecx+esi*2]
  419bf3:	clc    
  419bf4:	push   cs
  419bf5:	add    eax,0x46423054
  419bfa:	and    DWORD PTR [ecx+0x1b],ecx
  419bfd:	adc    BYTE PTR [ecx-0x80],ch
  419c00:	adc    dl,BYTE PTR [eax]
  419c02:	adc    al,0x3c
  419c04:	inc    edx
  419c05:	inc    esi
  419c06:	add    BYTE PTR [eax],al
  419c08:	cmp    DWORD PTR [ebx+ebx*1],esi
  419c0b:	add    al,0xf1
  419c0d:	ja     0x419c21
  419c0f:	push   es
  419c10:	jmp    0x1653a194
  419c15:	cmp    DWORD PTR [ecx],ebp
  419c17:	std    
  419c18:	add    dl,al
  419c1a:	dec    ebx
  419c1b:	or     eax,0xfe7edeb3
  419c20:	lock inc edi
  419c22:	jo     0x419bde
  419c24:	inc    edx
  419c25:	xlat   BYTE PTR ds:[ebx]
  419c26:	pop    ebx
  419c27:	inc    ebp
  419c28:	mov    dh,0xe2
  419c2a:	fs hlt 
  419c2c:	repz fwait
  419c2e:	jmp    0x754072b6
  419c33:	adc    BYTE PTR [ebp+0x7afae6b0],dh
  419c39:	inc    esp
  419c3a:	push   0xffffffe8
  419c3c:	xor    ebx,esi
  419c3e:	pop    esp
  419c3f:	std    
  419c40:	jmp    0xe8f3:0x9016e8a0
  419c47:	add    ebp,DWORD PTR [edi]
  419c49:	push   esp
  419c4a:	xor    al,0x7
  419c4c:	sub    dl,BYTE PTR [eax-0x20cb1240]
  419c52:	jmp    0xaf03:0xe9dd2b7f
  419c59:	inc    ebp
  419c5a:	in     eax,0xb0
  419c5c:	dec    edx
  419c5d:	pop    esi
  419c5e:	mov    al,ds:0x69d7fc04
  419c63:	cs not eax
  419c66:	loopne 0x419ca9
  419c68:	jmp    0x5e945c
  419c6d:	add    BYTE PTR [ebx],dh
  419c6f:	fucomp st(1)
  419c71:	add    ebp,DWORD PTR [edi-0x520517bc]
  419c77:	adc    esp,eax
  419c79:	add    ebp,DWORD PTR [edi]
  419c7b:	pop    esi
  419c7c:	outs   dx,DWORD PTR ds:[esi]
  419c7d:	shr    DWORD PTR [ebx],cl
  419c7f:	popa   
  419c80:	sub    ch,bh
  419c82:	xor    BYTE PTR [edi+0x24],al
  419c85:	rol    DWORD PTR [edx-0x2a],0x40
  419c89:	sbb    al,0x2f
  419c8b:	fsubp  st(1),st
  419c8d:	and    DWORD PTR [eax],0xffffffd4
  419c90:	mov    esp,0xe94490cf
  419c95:	mov    al,0x3c
  419c97:	pop    esi
  419c98:	add    DWORD PTR [edx],esi
  419c9a:	(bad)
  419c9d:	daa    
  419c9e:	out    dx,al
  419c9f:	lock pop es
  419ca1:	adc    BYTE PTR [ebx-0x22],bl
  419ca4:	add    cl,ch
  419ca6:	lods   al,BYTE PTR ds:[esi]
  419ca7:	inc    ebx
  419ca8:	add    bl,BYTE PTR [ebx+ecx*8-0x605b083a]
  419caf:	ffreep st(2)
  419cb1:	scas   eax,DWORD PTR es:[edi]
  419cb2:	ds in  eax,dx
  419cb4:	jmp    0x11fc8f8
  419cb9:	imul   edx,DWORD PTR [edx],0xacdf7547
  419cbf:	inc    esp
  419cc0:	cs pop esp
  419cc2:	mov    ah,0x20
  419cc4:	inc    ebx
  419cc5:	idiv   DWORD PTR [eax]
  419cc7:	aas    
  419cc8:	test   al,0xe9
  419cca:	sub    al,0xde
  419ccc:	adc    bl,0x31
  419ccf:	fld    DWORD PTR [ebp-0x6effffc5]
  419cd5:	inc    esi
  419cd6:	cld    
  419cd7:	imul   ebx,DWORD PTR [edx+0x7],0xd4a46c0c
  419cde:	add    cl,ch
  419ce0:	out    dx,al
  419ce1:	lahf   
  419ce2:	adc    bh,al
  419ce4:	adc    eax,0x2ce9016e
  419ce9:	pop    esi
  419cea:	cli    
  419ceb:	call   DWORD PTR [ecx+0x2c9380ee]
  419cf1:	fld    DWORD PTR [ebp-0x3b9aee5]
  419cf7:	imul   ebx,DWORD PTR [edx],0x846c0b9b
  419cfd:	aam    0x0
  419cff:	jmp    0xf7543cf2
  419d04:	adc    ecx,ebp
  419d06:	and    BYTE PTR [ebx+0x2c],0xd1
  419d0a:	imul   edx,DWORD PTR es:[edi+ebx*8+0x75],0x4f47b304
  419d13:	add    bl,dl
  419d15:	ffreep st(2)
  419d17:	inc    esi
  419d18:	loopne 0x419d67
  419d1a:	jmp    0x5035337d
  419d1f:	jne    0x419d31
  419d21:	mov    al,ds:0xe3021642
  419d26:	push   ecx
  419d27:	or     BYTE PTR ds:0xdc850d21,0x43
  419d2e:	cld    
  419d2f:	call   DWORD PTR [eax]
  419d31:	and    BYTE PTR [esi],dl
  419d33:	sbb    BYTE PTR ds:0xfa7c1e,bh
  419d39:	add    ah,dl
  419d3b:	je     0x419d59
  419d3d:	cmp    BYTE PTR [edi+0x460b6f45],0xf3
  419d44:	dec    esi
  419d45:	jne    0x419d5a
  419d47:	mov    al,ds:0xe32f1642
  419d4c:	sub    eax,0x6f467f80
  419d51:	sub    al,BYTE PTR [esi]
  419d53:	repnz push ecx
  419d55:	jne    0x419d7a
  419d57:	mov    al,ds:0xe2611642
  419d5c:	sbb    eax,0xd45bc80
  419d61:	test   DWORD PTR [ecx],ebp
  419d63:	dec    ecx
  419d64:	cld    
  419d65:	inc    DWORD PTR [esi]
  419d67:	clc    
  419d68:	or     al,0xf
  419d6a:	shr    DWORD PTR [esi],cl
  419d6c:	add    eax,DWORD PTR [eax]
  419d6e:	push   esi
  419d6f:	popa   
  419d70:	cli    
  419d71:	push   eax
  419d72:	jns    0x419d38
  419d74:	inc    edi
  419d75:	or     DWORD PTR [esi-0x1f],eax
  419d78:	ret    0x6046
  419d7b:	dec    esp
  419d7c:	inc    dl
  419d7e:	into   
  419d7f:	cs add ecx,ebp
  419d82:	call   0x20f1:0xc6fffc49
  419d89:	setb   BYTE PTR [edx+0x372f0008]
  419d90:	test   DWORD PTR [ebx+edx*2-0x29],edi
  419d94:	add    al,0x73
  419d96:	daa    
  419d97:	sar    BYTE PTR [ebx-0x4431e0dd],1
  419d9d:	and    eax,DWORD PTR [eax]
  419d9f:	add    BYTE PTR [edi-0x49],cl
  419da2:	test   eax,0xfc8a3215
  419da7:	lds    ebp,FWORD PTR [ecx+0x36]
  419daa:	adc    DWORD PTR ds:0x89ff7ca1,ecx
  419db0:	hlt    
  419db1:	fisub  WORD PTR [ebx-0xa]
  419db4:	fcom   st(3)
  419db6:	ja     0x419dfe
  419db8:	cs sbb edi,edi
  419dbb:	or     al,0xb2
  419dbd:	stos   BYTE PTR es:[edi],al
  419dbe:	idiv   edi
  419dc0:	rol    al,0xc1
  419dc3:	adc    al,0x13
  419dc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419dc6:	repz or eax,0xfffdbbc6
  419dcc:	test   al,0xb6
  419dce:	daa    
  419dcf:	or     bl,BYTE PTR [ebx]
  419dd1:	sbb    al,0x85
  419dd3:	stc    
  419dd4:	sub    ch,BYTE PTR [ebx-0x296b7fea]
  419dda:	mov    al,0xe2
  419ddc:	xchg   esp,eax
  419ddd:	jno    0x419d64
  419ddf:	stc    
  419de0:	xor    eax,0x74801503
  419de5:	and    DWORD PTR [eax+ecx*1+0x72e57faf],ebp
  419dec:	test   eax,0xdfebb7c
  419df1:	pusha  
  419df2:	or     eax,0x7ddc6f31
  419df7:	inc    esi
  419df8:	aas    
  419df9:	icebp  
  419dfa:	std    
  419dfb:	push   edi
  419dfc:	scas   eax,DWORD PTR es:[edi]
  419dfd:	pop    edi
  419dfe:	cli    
  419dff:	gs mov dh,0xf4
  419e02:	push   cs
  419e03:	or     eax,0x76a20000
  419e08:	add    DWORD PTR [edi+eiz*4],ebp
  419e0b:	(bad)  [ebx+0x5aab604]
  419e11:	in     al,0xad
  419e13:	xor    bl,ah
  419e15:	jg     0x419e70
  419e17:	(bad)  
  419e18:	jmp    0xee054420
  419e1d:	or     BYTE PTR [edx],0xcb
  419e20:	adc    DWORD PTR [ebx+0x6b],edi
  419e23:	cli    
  419e24:	(bad)  
  419e26:	out    dx,al
  419e27:	scas   al,BYTE PTR es:[edi]
  419e28:	pop    esi
  419e29:	repnz sub ebp,DWORD PTR ss:[ebp+0x44]
  419e2e:	arpl   ax,bx
  419e30:	outs   dx,DWORD PTR ds:[esi]
  419e31:	mov    esi,0xf867fa3b
  419e36:	cs push esi
  419e38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e39:	push   cs
  419e3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e3b:	pushf  
  419e3c:	fcmovu st,st(7)
  419e3e:	dec    ebx
  419e3f:	push   esi
  419e40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e41:	fbstp  TBYTE PTR [ebx]
  419e43:	shr    DWORD PTR [ebp+edx*1-0x4a],cl
  419e47:	inc    ebx
  419e48:	jmp    0x419dcc
  419e4a:	dec    ebx
  419e4b:	cli    
  419e4c:	or     DWORD PTR [eax+edx*4],eax
  419e4f:	fyl2x  
  419e51:	add    ebp,DWORD PTR [edi]
  419e53:	pop    esi
  419e54:	iret   
  419e55:	jecxz  0x419e82
  419e57:	pop    edx
  419e58:	into   
  419e59:	(bad)  
  419e5a:	nop
  419e5b:	inc    ebx
  419e5c:	push   0x2a
  419e5e:	not    edx
  419e60:	fs leave 
  419e62:	sub    dh,bl
  419e64:	jmp    0x61e8fa6
  419e69:	sbb    eax,0xdb850000
  419e6e:	jmp    0x36894d76
  419e73:	imul   DWORD PTR [ebp+0x5a269626]
  419e79:	sbb    al,0x24
  419e7b:	add    eax,0xfea2350c
  419e80:	dec    eax
  419e81:	inc    ebx
  419e82:	push   0x2a
  419e84:	fcmovnbe st,st(2)
  419e86:	add    BYTE PTR [edx+edi*8+0x41],ch
  419e8a:	cld    
  419e8b:	outs   dx,BYTE PTR ds:[esi]
  419e8c:	repnz fwait
  419e8e:	add    DWORD PTR [edi],ecx
  419e90:	dec    edx
  419e91:	sbb    al,0x4
  419e93:	jmp    0xba39fcc4
  419e98:	and    DWORD PTR [eax-0x4b],esp
  419e9b:	dec    ebp
  419e9c:	dec    ecx
  419e9d:	inc    ecx
  419e9e:	ret    
  419e9f:	scas   eax,DWORD PTR es:[edi]
  419ea0:	xor    edi,ecx
  419ea2:	jmp    0xfc84a01c
  419ea7:	imul   eax,DWORD PTR [ebp-0xf],0x428e640b
  419eae:	cld    
  419eaf:	sub    bl,BYTE PTR es:[ecx+eax*1+0x48043d1]
  419eb7:	jmp    0x1e81f5e8
  419ebc:	enter  0xbda,0x6e
  419ec0:	mov    dh,0x44
  419ec2:	cld    
  419ec3:	(bad)  
  419ec4:	mov    ds:0x9a2abad1,eax
  419ec9:	pop    ebp
  419eca:	jmp    0x439d3188
  419ecf:	stc    
  419ed0:	add    BYTE PTR [eax],al
  419ed2:	push   0xffffff9c
  419ed4:	add    DWORD PTR [eax],edx
  419ed6:	inc    esp
  419ed7:	pusha  
  419ed8:	add    al,0xe9
  419eda:	sub    al,0x5e
  419edc:	clc    
  419edd:	call   FWORD PTR [ebx+0x52c24e5f]
  419ee3:	inc    ecx
  419ee4:	ret    
  419ee5:	daa    
  419ee6:	sub    al,0xf8
  419ee8:	jmp    0xfc841926
  419eed:	pop    esp
  419eee:	outs   dx,BYTE PTR ds:[esi]
  419eef:	adc    bh,BYTE PTR ds:0x695963f0
  419ef5:	mov    ds:0xe663410a,al
  419efa:	rcr    BYTE PTR [ebx+eiz*2],cl
  419efd:	push   0x33
  419eff:	push   cs
  419f00:	arpl   WORD PTR [eax],ax
  419f02:	mov    edi,0x8c61283
  419f07:	fild   QWORD PTR [ecx]
  419f09:	jmp    0x3de024
  419f0e:	(bad)  
  419f0f:	hlt    
  419f10:	pop    es
  419f11:	jne    0x419f32
  419f13:	add    al,0x43
  419f15:	add    DWORD PTR [edx],esi
  419f17:	in     eax,0x3e
  419f19:	pop    es
  419f1a:	push   es
  419f1b:	fiadd  WORD PTR [eax-0x7fb4f305]
  419f21:	and    dh,BYTE PTR [edx-0x5]
  419f24:	std    
  419f25:	jmp    0x3f961d
  419f2a:	xchg   bh,dh
  419f2c:	push   es
  419f2d:	jp     0x12419c21
  419f33:	les    eax,FWORD PTR [edx+0x17]
  419f36:	add    BYTE PTR [eax],al
  419f38:	jmp    0x8d0:0x2f140d51
  419f3f:	add    dh,al
  419f41:	add    eax,DWORD PTR [ebx+0x1]
  419f44:	mov    esp,esp
  419f46:	adc    al,BYTE PTR [edi]
  419f48:	(bad)  
  419f49:	fisttp QWORD PTR ds:0x80c405b6
  419f4f:	add    BYTE PTR [esi-0x297c03e3],bl
  419f55:	dec    edx
  419f56:	add    BYTE PTR [ecx-0x7cff2277],0x2
  419f5d:	sbb    BYTE PTR ds:[eax],al
  419f60:	sti    
  419f61:	inc    ecx
  419f62:	mov    DWORD PTR [edx+edi*1-0x16],ecx
  419f66:	or     DWORD PTR [edx+ebp*1-0x2a],0xd
  419f6b:	mov    esi,0x63e95ec6
  419f70:	enter  0x183,0x0
  419f74:	cwde   
  419f75:	cmp    ebx,0x2d
  419f78:	cmp    ah,BYTE PTR [esi]
  419f7a:	sub    eax,0x1dac3a2f
  419f80:	lods   al,BYTE PTR ds:[esi]
  419f81:	pop    edi
  419f82:	cld    
  419f83:	jae    0x419fa4
  419f85:	psadbw mm0,QWORD PTR [edx+0x35e1]
  419f8c:	jno    0x419f7f
  419f8e:	inc    BYTE PTR [edi]
  419f90:	inc    esi
  419f91:	arpl   si,di
  419f93:	jmp    FWORD PTR [eax]
  419f95:	icebp  
  419f96:	mov    ebp,0x40ae2801
  419f9b:	push   es
  419f9c:	add    BYTE PTR [eax],al
  419f9e:	das    
  419f9f:	aaa    
  419fa0:	ds inc esi
  419fa2:	sub    eax,0x31ba173a
  419fa7:	aaa    
  419fa8:	add    dh,al
  419faa:	imul   esi,DWORD PTR ds:0x30bee6ff,0xc9200000
  419fb4:	inc    eax
  419fb5:	mov    ch,BYTE PTR [edi+0x2f3fc836]
  419fbb:	mov    ebx,0x24b30d3f
  419fc0:	(bad)  
  419fc1:	jmp    FWORD PTR [edi]
  419fc3:	and    BYTE PTR [esi+0x4e],ch
  419fc6:	sub    eax,0x34f7818e
  419fcb:	xor    BYTE PTR [ebp-0x6e],bh
  419fce:	xor    DWORD PTR [edi],esi
  419fd0:	add    ch,bh
  419fd2:	or     esp,DWORD PTR [edx+0x36ee7ece]
  419fd8:	and    al,BYTE PTR [esi+0x2c]
  419fdb:	jecxz  0x419f8c
  419fdd:	or     al,0xc2
  419fdf:	jbe    0x41a000
  419fe1:	enter  0x354b,0x2d
  419fe5:	pop    esi
  419fe6:	sub    eax,0xe9fe0037
  419feb:	xor    ebx,esp
  419fed:	ins    DWORD PTR es:[edi],dx
  419fee:	sub    BYTE PTR [edx-0x259801bc],ah
  419ff4:	add    esp,edi
  419ff6:	cli    
  419ff7:	fucom  st(7)
  419ff9:	add    ebp,DWORD PTR [edi]
  419ffb:	inc    eax
  419ffc:	and    al,0x7
  419ffe:	sbb    esi,DWORD PTR [eax+0x121d]
  41a004:	adc    ecx,edx
  41a006:	fidivr DWORD PTR [eax+0x6f]
  41a009:	aas    
  41a00a:	mov    dl,0xe8
  41a00c:	sub    dh,BYTE PTR [edi]
  41a00e:	ret    0x2f05
  41a011:	fisubr WORD PTR [ebx-0x7f25d136]
  41a017:	iret   
  41a018:	xor    bl,dh
  41a01a:	jmp    0x701d0940
  41a01f:	shr    BYTE PTR [edi],cl
  41a021:	pop    esi
  41a022:	push   ecx
  41a023:	push   cs
  41a024:	and    dl,BYTE PTR [edi+0x25]
  41a027:	add    al,0x2f
  41a029:	fdivrp st(2),st
  41a02b:	pop    ecx
  41a02c:	lock add al,0x68
  41a02f:	or     al,0x77
  41a031:	sahf   
  41a032:	jmp    0xeaca4c49
  41a037:	add    ebp,DWORD PTR [edi]
  41a039:	pop    esi
  41a03a:	and    DWORD PTR ds:0x9c65932,ecx
  41a040:	das    
  41a041:	fisubr WORD PTR [ebx]
  41a043:	retf   0xd52e
  41a046:	add    bh,bh
  41a048:	xor    bl,dh
  41a04a:	jmp    0x701d0970
  41a04f:	shr    BYTE PTR [edi],cl
  41a051:	pop    esi
  41a052:	icebp  
  41a053:	repz and edx,DWORD PTR [edi+0x55]
  41a057:	add    al,0x2f
  41a059:	fdivrp st(2),st
  41a05b:	pop    ecx
  41a05c:	jo     0x41a062
  41a05e:	push   0xe99e20f7
  41a063:	adc    ch,BYTE PTR [eax+ebx*2+0x3ea]
  41a06a:	das    
  41a06b:	pop    esi
  41a06c:	rcl    DWORD PTR [edx],0x96
  41a06f:	adc    BYTE PTR [ecx+ecx*8+0x2701542f],bh
  41a076:	sub    BYTE PTR [esi-0x6],bl
  41a079:	ffreep st(5)
  41a07b:	leave  
  41a07c:	or     ebx,DWORD PTR [edi+0x1b]
  41a07f:	add    al,0x7f
  41a081:	shl    DWORD PTR [edi+edi*8-0x407fe400],1
  41a088:	stc    
  41a089:	fcomp  QWORD PTR ds:0x2cecda5b
  41a08f:	faddp  st(2),st
  41a091:	daa    
  41a092:	xor    esp,edx
  41a094:	jmp    0x11fc832
  41a099:	outs   dx,DWORD PTR ds:[esi]
  41a09a:	neg    ch
  41a09c:	xchg   BYTE PTR [edi-0x705a1d7],dh
  41a0a2:	mov    ch,0x90
  41a0a4:	or     ebx,DWORD PTR [edi+0x117f045b]
  41a0aa:	stos   DWORD PTR es:[edi],eax
  41a0ab:	inc    BYTE PTR [eax]
  41a0ad:	mov    esp,0xd9f9bee9
  41a0b2:	sbb    eax,0x2cecb25b
  41a0b7:	faddp  st(2),st
  41a0b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0ba:	xor    dl,ch
  41a0bc:	jmp    0x11fd812
  41a0c1:	pop    ds
  41a0c2:	out    0xdd,al
  41a0c4:	xchg   BYTE PTR [edi-0x1905a1d7],ah
  41a0ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0cb:	clc    
  41a0cc:	or     edi,DWORD PTR [edi]
  41a0ce:	add    BYTE PTR [eax],al
  41a0d0:	sti    
  41a0d1:	add    edi,DWORD PTR [edi-0x53]
  41a0d4:	xchg   esp,eax
  41a0d5:	inc    BYTE PTR [eax]
  41a0d7:	jl     0x41a08a
  41a0d9:	mov    esi,0x5b3de7f9
  41a0de:	mov    ch,ah
  41a0e0:	sub    al,0xde
  41a0e2:	ret    0x3127
  41a0e5:	shr    cl,cl
  41a0e7:	imul   ebp,DWORD PTR [eax],0x2a6900de
  41a0ed:	dec    BYTE PTR [ebx]
  41a0ef:	add    BYTE PTR [edx],dl
  41a0f1:	gs (bad) 
  41a0f3:	inc    DWORD PTR [esi-0x79fdbd6c]
  41a0f9:	repz push 0x5
  41a0fc:	push   esi
  41a0fd:	fiadd  DWORD PTR [eax+0x43674cfb]
  41a103:	(bad)  
  41a104:	adc    bl,bl
  41a106:	sub    eax,0x1836128b
  41a10b:	test   DWORD PTR [esp+ebp*8-0x25aca67c],eax
  41a112:	add    BYTE PTR [ebx-0x802dc7],cl
  41a118:	xor    dh,BYTE PTR [edx]
  41a11a:	mov    DWORD PTR [edx+esi*8+0x31],eax
  41a11e:	sub    edx,eax
  41a120:	out    0x6a,al
  41a122:	retf   
  41a123:	jmp    DWORD PTR [ecx+0x65]
  41a126:	shl    DWORD PTR [esp+ecx*1+0x6c],0x43
  41a12b:	pop    ss
  41a12c:	xor    ah,BYTE PTR [ebx+0xd]
  41a12f:	add    edi,DWORD PTR [esi+0x28]
  41a132:	adc    eax,0xd000008a
  41a137:	and    BYTE PTR ss:[edi-0x72],bh
  41a13b:	and    BYTE PTR es:[edi],cl
  41a13e:	or     DWORD PTR [ebp+0x2d],esp
  41a141:	clc    
  41a142:	or     edi,edi
  41a144:	and    DWORD PTR [edx+esi*8+0x3d],0xe4e6e8fc
  41a14c:	add    BYTE PTR [eax],al
  41a14e:	push   esi
  41a14f:	fild   DWORD PTR [edi]
  41a151:	jne    0x41a123
  41a153:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a154:	inc    edx
  41a155:	add    DWORD PTR [edx+ecx*1-0x4f],esi
  41a159:	cmp    BYTE PTR [ebp+0xe850deb],0xe5
  41a160:	add    BYTE PTR [eax],al
  41a162:	shl    BYTE PTR [edi],1
  41a164:	sti    
  41a165:	sub    al,0x7d
  41a167:	rol    BYTE PTR [eax+0x11e72ffb],0x84
  41a16e:	mov    al,BYTE PTR [ebx+0x0]
  41a171:	add    BYTE PTR [edi-0x4cf2f8e0],ch
  41a177:	jae    0x41a17d
  41a179:	add    BYTE PTR [edi],ch
  41a17b:	cmp    BYTE PTR [eax+0x37],al
  41a17e:	repz loop 0x41a179
  41a181:	jb     0x41a1ba
  41a183:	mov    al,0xcb
  41a185:	and    edi,DWORD PTR [edi]
  41a187:	scas   al,BYTE PTR es:[edi]
  41a188:	retf   
  41a189:	and    edi,DWORD PTR [ebx]
  41a18b:	(bad)  
  41a18c:	retf   0x18fe
  41a18f:	mov    edi,0x60af00c9
  41a194:	or     esi,DWORD PTR [ebx-0x16]
  41a197:	in     al,0x49
  41a199:	inc    esi
  41a19a:	add    BYTE PTR [eax],al
  41a19c:	cs jns 0x41a19f
  41a19f:	aaa    
  41a1a0:	jae    0x41a1c5
  41a1a2:	hlt    
  41a1a3:	or     al,0xab
  41a1a5:	out    dx,al
  41a1a6:	add    eax,DWORD PTR [eax]
  41a1a8:	das    
  41a1a9:	mov    al,0xa0
  41a1ab:	or     edx,DWORD PTR [edi+ecx*4-0x6d]
  41a1af:	sub    esi,DWORD PTR [edx+esi*2-0x754bec1c]
  41a1b6:	in     al,0xf
  41a1b8:	inc    esp
  41a1b9:	or     DWORD PTR [eax+0x38f3e188],esi
  41a1bf:	sub    edi,0x72
  41a1c2:	push   cs
  41a1c3:	mov    ch,BYTE PTR [ecx+0x3c]
  41a1c6:	in     al,0x83
  41a1c8:	sub    eax,DWORD PTR [ebx-0x78]
  41a1cb:	inc    esi
  41a1cc:	cmp    cl,al
  41a1ce:	leave  
  41a1cf:	adc    al,0x13
  41a1d1:	ins    BYTE PTR es:[edi],dx
  41a1d2:	mov    BYTE PTR [ebx+ecx*1+0x34],al
  41a1d6:	adc    DWORD PTR [ebx-0x2e3cc60],eax
  41a1dc:	lods   al,BYTE PTR ds:[esi]
  41a1dd:	push   0xffffffe4
  41a1df:	adc    ebp,DWORD PTR [edi]
  41a1e1:	fimul  WORD PTR [esp+eax*1-0x7c1621d1]
  41a1e8:	xchg   esi,eax
  41a1e9:	out    0x54,eax
  41a1eb:	push   es
  41a1ec:	imul   esp,DWORD PTR [ebx-0x74680f18],0xdff155db
  41a1f6:	outs   dx,DWORD PTR ds:[esi]
  41a1f7:	inc    ebx
  41a1f8:	sub    edi,esi
  41a1fa:	sub    ax,0xb228
  41a1fe:	sub    ch,cl
  41a200:	add    BYTE PTR [eax],al
  41a202:	fdiv   st(6),st
  41a204:	and    BYTE PTR [eax-0x395458c1],bl
  41a20a:	cs fsubp st(2),st
  41a20d:	mov    ch,cl
  41a20f:	loope  0x41a1fa
  41a211:	add    ebp,DWORD PTR [edi-0x1ad2d615]
  41a217:	loope  0x41a202
  41a219:	add    edi,ebx
  41a21b:	shr    dl,0x78
  41a21e:	outs   dx,DWORD PTR ds:[esi]
  41a21f:	cmp    esp,DWORD PTR [edx-0x48b8ca18]
  41a225:	nop
  41a226:	outs   dx,BYTE PTR ds:[esi]
  41a227:	push   cs
  41a228:	es or  eax,0x831632a
  41a22e:	das    
  41a22f:	fsubrp st(2),st
  41a231:	pop    ebp
  41a232:	out    dx,al
  41a233:	pop    edi
  41a234:	inc    edx
  41a235:	aam    0x99
  41a237:	lods   al,BYTE PTR gs:[esi]
  41a239:	or     esi,DWORD PTR [eax+0x3d2ced94]
  41a23f:	loop   0x41a22a
  41a241:	add    ebp,DWORD PTR [ebx]
  41a243:	(bad)  
  41a244:	mov    ah,0xc
  41a246:	jmp    0xd04f89ef
  41a24b:	add    esi,esp
  41a24d:	add    ebp,DWORD PTR [edi]
  41a24f:	cli    
  41a250:	xchg   BYTE PTR [esi],cl
  41a252:	pushf  
  41a253:	push   ds
  41a254:	or     al,0x4c
  41a256:	or     ebp,ebx
  41a258:	jno    0x41a220
  41a25a:	cs inc ebp
  41a25c:	(bad)  
  41a25d:	pop    es
  41a25e:	das    
  41a25f:	fiadd  WORD PTR [eax]
  41a261:	push   0xffffffcf
  41a263:	call   DWORD PTR [ecx+ebp*8]
  41a266:	add    BYTE PTR [eax],al
  41a268:	jmp    0x662:0x281b01a3
  41a26f:	in     eax,0x2c
  41a271:	fiadd  WORD PTR [edi-0x3a0e0aa]
  41a277:	shl    BYTE PTR [edx+edi*1-0x4],0xc6
  41a27c:	sub    DWORD PTR [ebx+ecx*2-0x15],esi
  41a280:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a281:	sbb    eax,0x33ac090d
  41a286:	push   cs
  41a287:	fidiv  WORD PTR [ecx+0x2ce90177]
  41a28d:	jmp    0xde6e0916
  41a292:	add    BYTE PTR [edx+0x1b],ch
  41a295:	fimul  WORD PTR [ebx]
  41a297:	gs add eax,0xade900dd
  41a29d:	inc    ebx
  41a29e:	or     ch,dh
  41a2a0:	test   al,0x10
  41a2a2:	add    cl,ch
  41a2a4:	sub    al,0xa3
  41a2a6:	je     0x41a285
  41a2a8:	repz jmp 0xde6ed432
  41a2ae:	add    BYTE PTR [eax-0x80],dl
  41a2b1:	fiadd  WORD PTR [eax]
  41a2b3:	jmp    0xde62d764
  41a2b8:	test   al,0x77
  41a2ba:	add    cl,ch
  41a2bc:	sub    al,0x5e
  41a2be:	clc    
  41a2bf:	stc    
  41a2c0:	and    DWORD PTR [edx+0x33],ebp
  41a2c3:	in     eax,dx
  41a2c4:	sub    al,0xde
  41a2c6:	xor    BYTE PTR [edx],0x3
  41a2c9:	jmp    0xde30:0xd48b
  41a2d0:	add    BYTE PTR [edx-0x1e],dh
  41a2d3:	loop   0x41a33b
  41a2d5:	jmp    0x84021f13
  41a2da:	cmp    DWORD PTR ss:[ebx+0x0],esi
  41a2de:	ret    0xe95f
  41a2e1:	xor    BYTE PTR [edi+0x72],cl
  41a2e4:	mov    eax,edi
  41a2e6:	or     eax,0x9c39e8f5
  41a2eb:	fiadd  WORD PTR [eax]
  41a2ed:	add    ecx,DWORD PTR [esi+0x503bda2c]
  41a2f3:	into   
  41a2f4:	or     eax,0xe29b82
  41a2f9:	add    cl,bl
  41a2fb:	out    0x39,al
  41a2fd:	jle    0x41a37d
  41a2ff:	jmp    0xdec79d82
  41a304:	add    BYTE PTR [ebx-0x7c3ec367],cl
  41a30a:	sahf   
  41a30b:	fmul   DWORD PTR ds:0xdcc384
  41a311:	add    bh,bl
  41a313:	pop    ebx
  41a314:	add    al,0x89
  41a316:	add    dh,cl
  41a318:	jecxz  0x41a377
  41a31a:	push   ebp
  41a31b:	fiadd  WORD PTR [eax]
  41a31d:	dec    BYTE PTR [eax]
  41a31f:	fld    QWORD PTR [esi-0xba1bab2]
  41a325:	pop    es
  41a326:	adc    DWORD PTR [ebx-0x2a],esp
  41a329:	std    
  41a32a:	xchg   ecx,eax
  41a32b:	fisttp DWORD PTR ds:0x821457b6
  41a331:	push   esp
  41a332:	add    BYTE PTR [eax],al
  41a334:	push   cs
  41a335:	push   ds
  41a336:	cld    
  41a337:	push   cs
  41a338:	fwait
  41a339:	stos   BYTE PTR es:[edi],al
  41a33a:	idiv   edi
  41a33c:	jno    0x41a3a0
  41a33e:	hlt    
  41a33f:	push   es
  41a340:	add    DWORD PTR [ecx+0x33],esp
  41a343:	add    eax,DWORD PTR [esi]
  41a345:	faddp  st(2),st
  41a347:	inc    esi
  41a348:	aam    0x2d
  41a34a:	jecxz  0x41a379
  41a34c:	aad    0xdd
  41a34e:	add    BYTE PTR [ebx+0x4c74e80f],al
  41a354:	inc    ebp
  41a355:	aad    0xd
  41a357:	je     0x41a388
  41a359:	cmp    BYTE PTR [ecx+0x17c4bfbf],al
  41a35f:	add    ch,BYTE PTR [eax]
  41a361:	leave  
  41a362:	jne    0x41a35f
  41a364:	mov    al,0x38
  41a366:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a367:	(bad)  
  41a368:	icebp  
  41a369:	inc    ebp
  41a36a:	sar    bh,1
  41a36c:	xchg   edi,eax
  41a36d:	sbb    eax,DWORD PTR [ecx]
  41a36f:	add    BYTE PTR [edi],ch
  41a371:	inc    ecx
  41a372:	mov    BYTE PTR [eax],0xa5
  41a375:	or     DWORD PTR [edx],eax
  41a377:	add    BYTE PTR [esi-0x567af2b6],0x2a
  41a37e:	sbb    eax,0x2eb928fd
  41a383:	cmp    ch,BYTE PTR [ebp+0x2f3f9c8f]
  41a389:	inc    eax
  41a38a:	xor    DWORD PTR [ebp+0x62],0xffffff88
  41a38e:	sbb    eax,0xd4b5680
  41a393:	or     DWORD PTR [edx+0x45],0x0
  41a397:	add    BYTE PTR [eax],al
  41a399:	add    BYTE PTR [ecx+0x9],dh
  41a39c:	call   DWORD PTR [ecx]
  41a39e:	push   esi
  41a39f:	mov    eax,DWORD PTR [edx]
  41a3a1:	add    BYTE PTR [edi],ch
  41a3a3:	popa   
  41a3a4:	mov    BYTE PTR [eax],0xa5
  41a3a7:	or     DWORD PTR [edx],eax
  41a3a9:	and    BYTE PTR [esi],0x3d
  41a3ac:	or     eax,0x1cca7985
  41a3b1:	std    
  41a3b2:	sub    BYTE PTR [ecx+0x2f],bl
  41a3b5:	cmp    ch,BYTE PTR [ebp+0x2f3f987a]
  41a3bb:	inc    eax
  41a3bc:	add    DWORD PTR [ebp+0x2],0xffffffa8
  41a3c0:	sbb    al,0x80
  41a3c2:	imul   BYTE PTR ds:0x44ba830d
  41a3c8:	add    BYTE PTR [eax],al
  41a3ca:	icebp  
  41a3cb:	mov    BYTE PTR [edx],al
  41a3cd:	(bad)  
  41a3cf:	mov    edx,0xde2f0001
  41a3d4:	imul   ebx,DWORD PTR [eax],0x7964e925
  41a3da:	ret    0x1338
  41a3dd:	or     al,0x79
  41a3df:	lahf   
  41a3e0:	out    0x80,eax
  41a3e2:	(bad)  
  41a3e3:	int    0x2b
  41a3e5:	lds    esi,FWORD PTR [ecx-0xf068a13]
  41a3eb:	mov    cl,0xe2
  41a3ed:	retf   
  41a3ee:	xor    esp,DWORD PTR [ebx+0x5e]
  41a3f1:	add    DWORD PTR [edi],ebp
  41a3f3:	fisubr WORD PTR [ecx+0xa]
  41a3f6:	aas    
  41a3f7:	inc    edi
  41a3f8:	pushw  es
  41a3fa:	das    
  41a3fb:	fisubr WORD PTR [ecx+0xa]
  41a3fe:	add    BYTE PTR [eax],al
  41a400:	aaa    
  41a401:	inc    edi
  41a402:	dec    esi
  41a403:	push   es
  41a404:	das    
  41a405:	fisubr WORD PTR [ecx+0xa]
  41a408:	sub    eax,DWORD PTR [edi+0x36]
  41a40b:	push   es
  41a40c:	das    
  41a40d:	fisubr WORD PTR [ebx-0x3ef89e3e]
  41a413:	scas   eax,DWORD PTR es:[edi]
  41a414:	cs fsubp st(1),st
  41a417:	mov    gs,WORD PTR [ecx+0x45]
  41a41a:	imul   eax,DWORD PTR [ecx],0x2f
  41a41d:	fisubr WORD PTR [esp+eax*2-0x45]
  41a421:	int3   
  41a422:	pop    edi
  41a423:	add    dl,BYTE PTR [ebx]
  41a425:	(bad)  
  41a427:	push   ecx
  41a428:	outs   dx,DWORD PTR ds:[esi]
  41a429:	xor    BYTE PTR [edx-0x75a41701],ah
  41a42f:	pop    ss
  41a430:	scas   al,BYTE PTR es:[edi]
  41a431:	push   ds
  41a432:	fldcw  WORD PTR [esi]
  41a434:	cs jmp 0x41a460
  41a437:	les    ebp,FWORD PTR [eax-0x75711760]
  41a43d:	(bad)  
  41a43e:	ins    BYTE PTR es:[edi],dx
  41a43f:	sbb    esi,DWORD PTR [edx]
  41a441:	bound  ecx,QWORD PTR [esi]
  41a443:	push   es
  41a444:	das    
  41a445:	fisubr WORD PTR [esi+0x4a]
  41a448:	repnz (bad)
  41a44b:	inc    esp
  41a44c:	cmp    ah,BYTE PTR [edx+0x1]
  41a44f:	or     bh,BYTE PTR [esi]
  41a451:	cmp    esp,edi
  41a453:	arpl   bp,bp
  41a455:	shl    BYTE PTR [esi+ebp*2],cl
  41a458:	daa    
  41a459:	loope  0x41a444
  41a45b:	cmc    
  41a45c:	pop    ds
  41a45d:	cmp    esp,edi
  41a45f:	imul   esp,DWORD PTR [eax],0x640be4
  41a465:	add    cl,al
  41a467:	xor    bh,ah
  41a469:	push   es
  41a46a:	test   al,0xc0
  41a46c:	add    al,0xe9
  41a46e:	mov    al,ds:0x5b346913
  41a474:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a475:	jmp    0x41a4a3
  41a477:	fiadd  WORD PTR [esi-0x3ee25ef9]
  41a47d:	shl    DWORD PTR [edx],1
  41a47f:	xchg   BYTE PTR [ecx],ah
  41a481:	pop    esp
  41a482:	jg     0x41a503
  41a484:	add    bl,dh
  41a486:	scas   eax,DWORD PTR es:[edi]
  41a487:	xor    BYTE PTR [edx],al
  41a489:	jmp    0xf18509ba
  41a48e:	mov    ecx,0x1c620ca8
  41a493:	in     eax,0xd1
  41a495:	xor    al,0x60
  41a497:	retw   
  41a499:	xchg   ecx,eax
  41a49a:	pop    edx
  41a49b:	fadd   QWORD PTR [eax]
  41a49d:	jmp    0x7fb6c351
  41a4a2:	lods   al,BYTE PTR ds:[esi]
  41a4a3:	cmp    eax,0x1cdede00
  41a4a8:	call   0x80b9ee18
  41a4ad:	add    DWORD PTR [ebp-0x4e],0x37eeaf09
  41a4b4:	cmp    BYTE PTR [eax-0x1603c897],al
  41a4ba:	lods   al,BYTE PTR ds:[esi]
  41a4bb:	cmp    al,0x0
  41a4bd:	aad    0x2
  41a4bf:	aas    
  41a4c0:	fwait
  41a4c1:	in     eax,dx
  41a4c2:	sub    al,0xde
  41a4c4:	test   DWORD PTR [ecx],ebp
  41a4c6:	test   al,0xdf
  41a4c8:	ret    0x0
  41a4cb:	add    al,al
  41a4cd:	loope  0x41a506
  41a4cf:	jmp    0x428736
  41a4d4:	dec    ebp
  41a4d5:	popf   
  41a4d6:	call   0x11c77b3
  41a4db:	test   DWORD PTR [esi],eax
  41a4dd:	in     al,0x84
  41a4df:	pop    eax
  41a4e0:	sub    esp,edx
  41a4e2:	std    
  41a4e3:	xor    edx,DWORD PTR [esi]
  41a4e5:	mov    bh,0xd9
  41a4e7:	cmovae ebx,DWORD PTR [ebx-0x19d97cb8]
  41a4ee:	add    eax,0xff490992
  41a4f4:	cdq    
  41a4f5:	aam    0x81
  41a4f7:	jl     0x41a56b
  41a4f9:	xor    bh,ah
  41a4fb:	je     0x41a49b
  41a4fd:	imul   eax,DWORD PTR [ebp+0x24],0x24456386
  41a504:	jle    0x41a56f
  41a506:	inc    ebp
  41a507:	and    al,0x32
  41a509:	sub    al,BYTE PTR [ebx-0x1ccdddbc]
  41a50f:	jne    0x41a568
  41a511:	fiadd  DWORD PTR [eax]
  41a513:	pavgb  mm4,QWORD PTR [eax+0x73468086]
  41a51a:	cmp    al,0x0
  41a51c:	dec    edx
  41a51d:	aad    0xd
  41a51f:	test   ch,bh
  41a521:	fild   WORD PTR [eax]
  41a523:	add    BYTE PTR [ecx-0x6c],cl
  41a526:	rcr    BYTE PTR [ecx-0x76fbe431],0x10
  41a52d:	out    0xc2,al
  41a52f:	inc    esi
  41a530:	add    BYTE PTR [eax],al
  41a532:	pop    ss
  41a533:	es jecxz 0x41a587
  41a536:	pop    ss
  41a537:	loop   0x41a539
  41a539:	sbb    BYTE PTR [ebp+0x40096fdd],0x20
  41a540:	sti    
  41a541:	xor    eax,0xfffb1b5f
  41a546:	das    
  41a547:	inc    edi
  41a548:	or     DWORD PTR [esi+0x74c1ec],esi
  41a54e:	push   esi
  41a54f:	xchg   DWORD PTR [eax],eax
  41a551:	and    ch,0xf4
  41a554:	mov    edx,DWORD PTR [edi+ebp*4]
  41a557:	lock fnsave [ebx+0x26]
  41a55b:	(bad)  
  41a55c:	sbb    eax,0x6c22020
  41a561:	add    ch,BYTE PTR [edi]
  41a563:	inc    edi
  41a564:	inc    edx
  41a565:	inc    esi
  41a566:	adc    ah,BYTE PTR cs:[edi]
  41a569:	push   ds
  41a56a:	cs inc edi
  41a56c:	add    BYTE PTR [ecx+0x468d2b31],cl
  41a572:	aaa    
  41a573:	mov    al,0x49
  41a575:	or     eax,0xbf0106cb
  41a57a:	(bad)  
  41a57b:	cmp    ecx,DWORD PTR [ebp+0x467d20d8]
  41a581:	xchg   edi,eax
  41a582:	sub    al,0x1f
  41a584:	cmc    
  41a585:	leave  
  41a586:	inc    esp
  41a587:	jl     0x41a592
  41a589:	sub    BYTE PTR [ebp-0x7ffffba],0x2d
  41a590:	fstp   QWORD PTR [ebp+0x37]
  41a593:	inc    esp
  41a594:	xchg   BYTE PTR [ebp+0x0],dh
  41a597:	add    BYTE PTR [esi],ch
  41a599:	inc    edi
  41a59a:	add    BYTE PTR [ecx-0x7ec01794],cl
  41a5a0:	push   edi
  41a5a1:	jl     0x41a5ac
  41a5a3:	test   ch,dl
  41a5a5:	inc    ebp
  41a5a6:	add    BYTE PTR [eax],al
  41a5a8:	mov    dh,0xed
  41a5aa:	or     al,0x87
  41a5ac:	jmp    0x301bccc3
  41a5b1:	inc    edi
  41a5b2:	add    BYTE PTR [eax-0x7cf6bddc],al
  41a5b8:	inc    BYTE PTR [esi+0x0]
  41a5bb:	add    BYTE PTR [eax+ecx*8],al
  41a5be:	jg     0x41a5b9
  41a5c0:	and    eax,0xc47ef2de
  41a5c5:	sub    bl,BYTE PTR [ebx+0x18]
  41a5c8:	mov    dh,0x9b
  41a5ca:	loope  0x41a550
  41a5cc:	xchg   ecx,eax
  41a5cd:	fucompp 
  41a5cf:	or     al,0x69
  41a5d1:	loop   0x41a58f
  41a5d3:	or     ebp,DWORD PTR [edi-0x39d4f61d]
  41a5d9:	sub    dh,BYTE PTR [ebx]
  41a5db:	sbb    cl,dh
  41a5dd:	fwait
  41a5de:	call   0xeac86fbd
  41a5e3:	add    ebp,DWORD PTR [edi]
  41a5e5:	imul   esp,DWORD PTR [ebp-0x324e49f9],0xdda3a7f3
  41a5ef:	mov    WORD PTR [ecx-0x1a],ss
  41a5f2:	into   
  41a5f3:	inc    eax
  41a5f4:	fstcw  WORD PTR cs:[edx+0x66]
  41a5f9:	sub    BYTE PTR [ebx+0xd],bh
  41a5fc:	add    BYTE PTR [eax],al
  41a5fe:	sbb    eax,0x1e3baeda
  41a603:	fisubr DWORD PTR [esi+0x43]
  41a606:	mov    dh,0xe
  41a608:	addr16 cwde 
  41a60a:	dec    esp
  41a60b:	(bad)  
  41a60c:	jmp    0x4ea8d2a1
  41a611:	loopne 0x41a62b
  41a613:	or     DWORD PTR [edx-0x45230c77],esp
  41a619:	(bad)  
  41a61a:	jmp    0x41a615
  41a61c:	fsqrt  
  41a61e:	pushw  0xba7
  41a622:	nop
  41a623:	inc    sp
  41a625:	or     al,0xb0
  41a627:	mov    ds:0x1bcd90ed,eax
  41a62c:	sub    al,0x5
  41a62e:	cmc    
  41a62f:	dec    eax
  41a630:	sub    eax,DWORD PTR [esi+esi*1+0x7480f2e2]
  41a637:	sub    DWORD PTR [ebx+0x17],edi
  41a63a:	scas   al,BYTE PTR es:[edi]
  41a63b:	mov    dl,0x0
  41a63d:	int    0x14
  41a63f:	xor    al,0xc6
  41a641:	daa    
  41a642:	sub    dh,ch
  41a644:	je     0x41a5f8
  41a646:	mov    ch,0xb1
  41a648:	adc    al,0x64
  41a64a:	sbb    BYTE PTR [edx-0x409dd4],ch
  41a650:	sbb    BYTE PTR [edx-0x11],ah
  41a653:	call   DWORD PTR [eax]
  41a655:	adc    ch,BYTE PTR [ebp-0x72]
  41a658:	xchg   DWORD PTR [edi],ebp
  41a65a:	cmp    BYTE PTR [ecx],cl
  41a65c:	xchg   BYTE PTR [ecx],ch
  41a65e:	mov    edi,0xa786e5
  41a663:	add    cl,al
  41a665:	inc    DWORD PTR [edx+0x435bcaf5]
  41a66b:	div    BYTE PTR [esi-0x5e32ec64]
  41a671:	pop    ebx
  41a672:	inc    ebp
  41a673:	lds    ebp,FWORD PTR [ecx]
  41a675:	loope  0x41a5fc
  41a677:	jecxz  0x41a6b6
  41a679:	xor    esp,edi
  41a67b:	push   0xffffffcf
  41a67d:	call   FWORD PTR [eax]
  41a67f:	jmp    0xf2c289c9
  41a684:	es loope 0x41a60c
  41a687:	out    0x38,al
  41a689:	xor    esp,edi
  41a68b:	push   0xffffffa2
  41a68d:	fild   WORD PTR [eax]
  41a68f:	scas   eax,DWORD PTR es:[edi]
  41a690:	mov    edx,0xb0ce2f34
  41a695:	call   DWORD PTR [eax]
  41a697:	jb     0x41a641
  41a699:	call   DWORD PTR [eax]
  41a69b:	jb     0x41a6e1
  41a69d:	cmc    
  41a69e:	inc    esp
  41a69f:	or     eax,0x5585e24f
  41a6a4:	cmp    al,0x31
  41a6a6:	cld    
  41a6a7:	jb     0x41a630
  41a6a9:	fstp   TBYTE PTR [edi+0x1d]
  41a6ac:	dec    edi
  41a6ad:	xlat   BYTE PTR ds:[ebx]
  41a6ae:	add    dh,ah
  41a6b0:	mov    eax,0x2ce9013a
  41a6b5:	gs inc eax
  41a6b7:	add    BYTE PTR [esi],bl
  41a6b9:	pop    esi
  41a6ba:	ror    DWORD PTR [edi],0x8a
  41a6bd:	jmp    0x6847a6c2
  41a6c2:	push   ebp
  41a6c3:	and    al,0xe2
  41a6c5:	addr16 into 
  41a6c7:	sub    eax,DWORD PTR [eax]
  41a6c9:	add    dl,al
  41a6cb:	adc    bl,BYTE PTR [eax]
  41a6cd:	push   ecx
  41a6ce:	jge    0x41a669
  41a6d0:	std    
  41a6d1:	ror    BYTE PTR [ebx-0x73f58b61],1
  41a6d7:	jno    0x41a6ee
  41a6d9:	and    al,0x55
  41a6db:	fild   DWORD PTR [ecx]
  41a6dd:	mov    BYTE PTR [eax-0x6b909bd],cl
  41a6e3:	dec    ebx
  41a6e4:	or     eax,0xdf5984
  41a6e9:	add    BYTE PTR ds:0x279ee3f4,bh
  41a6ef:	int3   
  41a6f0:	std    
  41a6f1:	mov    cl,BYTE PTR [eax-0x2d76dfbd]
  41a6f7:	loope  0x41a6dc
  41a6f9:	nop
  41a6fa:	xchg   esi,eax
  41a6fb:	fiadd  WORD PTR [eax]
  41a6fd:	mov    cl,al
  41a6ff:	inc    ebx
  41a700:	and    BYTE PTR [eax-0x7b1cc96e],bl
  41a706:	xchg   dh,bl
  41a708:	add    BYTE PTR [edx-0x72dfbea8],cl
  41a70e:	xchg   edx,eax
  41a70f:	fucomi st,st(1)
  41a711:	jnp    0x41a71f
  41a713:	je     0x41a72a
  41a715:	and    al,0xfb
  41a717:	in     eax,0xf
  41a719:	jmp    0x41a73f
  41a71b:	push   0xc42a1743
  41a720:	or     al,0x16
  41a722:	ins    DWORD PTR es:[edi],dx
  41a723:	xchg   BYTE PTR [edx+0x7f127946],cl
  41a729:	or     al,0x5b
  41a72b:	inc    bx
  41a72d:	pop    ss
  41a72e:	add    BYTE PTR [eax],al
  41a730:	lahf   
  41a731:	jno    0x41a71e
  41a733:	jmp    FWORD PTR [edi]
  41a735:	dec    esp
  41a736:	mov    al,dh
  41a738:	inc    edi
  41a739:	mov    ebx,0xc22ffffe
  41a73e:	inc    esp
  41a73f:	je     0x41a77d
  41a741:	lods   eax,DWORD PTR ds:[esi]
  41a742:	cli    
  41a743:	and    ebp,DWORD PTR [eax+edi*1]
  41a746:	dec    esi
  41a747:	rcr    BYTE PTR [eax],0x50
  41a74a:	cli    
  41a74b:	mov    edi,0x8111a7ac
  41a750:	out    dx,eax
  41a751:	sub    DWORD PTR ss:[ecx],eax
  41a754:	cmp    al,0x7
  41a756:	lds    eax,FWORD PTR [edi+0x7d894669]
  41a75c:	inc    edi
  41a75d:	ret    0xd15
  41a760:	stos   DWORD PTR es:[edi],eax
  41a761:	sub    DWORD PTR [edx],edx
  41a763:	std    
  41a764:	fdivr  DWORD PTR [edx+eax*2+0x44baf8fd]
  41a76b:	or     eax,0xfd120db3
  41a770:	shr    BYTE PTR [ebp-0x3feceb46],0x8
  41a777:	add    eax,0xe6ed79a7
  41a77c:	inc    esp
  41a77d:	xor    eax,0x79b5fd15
  41a782:	in     eax,dx
  41a783:	and    eax,eax
  41a785:	cmp    ebp,ebp
  41a787:	call   0x14fc64b4
  41a78c:	push   ebx
  41a78d:	pop    esi
  41a78e:	add    al,0x17
  41a790:	mov    bh,0xf9
  41a792:	in     eax,dx
  41a793:	mov    DWORD PTR [eax],eax
  41a795:	add    cl,dh
  41a797:	das    
  41a798:	push   0xfba207d
  41a79d:	lock push 0x339bdc18
  41a7a3:	adc    ebp,DWORD PTR [ecx]
  41a7a5:	mov    ch,BYTE PTR [ebx+ebp*8-0x14d0ec20]
  41a7ac:	loop   0x41a736
  41a7ae:	in     al,dx
  41a7af:	(bad)  
  41a7b1:	jle    0x41a822
  41a7b3:	stos   BYTE PTR es:[edi],al
  41a7b4:	ret    0xe388
  41a7b7:	stc    
  41a7b8:	std    
  41a7b9:	mov    BYTE PTR [edx+0x5],ah
  41a7bc:	push   ds
  41a7bd:	loopne 0x41a7fb
  41a7bf:	(bad)  
  41a7c0:	outs   dx,BYTE PTR ds:[esi]
  41a7c1:	inc    ebp
  41a7c2:	and    cl,BYTE PTR [esi]
  41a7c4:	gs inc ebx
  41a7c6:	mov    ds:0x3bbd5fe4,eax
  41a7cb:	cli    
  41a7cc:	gs pop es
  41a7ce:	xor    esp,DWORD PTR [esi-0x54]
  41a7d1:	in     al,dx
  41a7d2:	cli    
  41a7d3:	xchg   edi,eax
  41a7d4:	repnz xchg esp,eax
  41a7d6:	sub    ebx,DWORD PTR [ebx-0x2]
  41a7d9:	adc    al,0xf2
  41a7db:	xor    BYTE PTR [edi-0x69],ah
  41a7de:	or     al,0xfe
  41a7e0:	jmp    0xa7a6ba74
  41a7e5:	jmp    FWORD PTR [ebp-0x582341e3]
  41a7eb:	mov    DWORD PTR ds:0xcf20b7e4,eax
  41a7f1:	(bad)  
  41a7f2:	or     al,0xfe
  41a7f4:	mov    eax,0x3a30e988
  41a7f9:	jle    0x41a7fb
  41a7fb:	add    bh,ch
  41a7fd:	test   eax,0xc8f189df
  41a802:	int    0x81
  41a804:	xor    ebx,esp
  41a806:	jno    0x41a7c5
  41a808:	inc    ebx
  41a809:	sub    BYTE PTR [esp+ebp*8+0x3464e113],ch
  41a810:	mov    DWORD PTR [eax],esi
  41a812:	jecxz  0x41a79b
  41a814:	add    edi,edx
  41a816:	add    DWORD PTR [ebx+eax*1],eax
  41a819:	add    bl,BYTE PTR [edi-0x39]
  41a81c:	sbb    al,0x5b
  41a81e:	stos   BYTE PTR es:[edi],al
  41a81f:	cwde   
  41a820:	or     eax,0x38e81e65
  41a825:	gs stos DWORD PTR es:[edi],eax
  41a827:	fbld   TBYTE PTR [esi-0x72]
  41a82a:	add    BYTE PTR [edx-0x13],ah
  41a82d:	xor    dl,cl
  41a82f:	fs repz test eax,0xc9757306
  41a836:	and    al,0x67
  41a838:	das    
  41a839:	fmul   DWORD PTR [eax+0x432a342f]
  41a83f:	idiv   BYTE PTR [ebp+0x3d5585e2]
  41a845:	xor    esp,edi
  41a847:	jb     0x41a82f
  41a849:	fistp  WORD PTR [ebx+0x17]
  41a84c:	shl    BYTE PTR [esi-0x1a],0xc
  41a850:	jno    0x41a834
  41a852:	add    BYTE PTR [ecx-0x2e],bh
  41a855:	rol    BYTE PTR [ecx-0x17],0xa8
  41a859:	ret    0xe941
  41a85c:	pop    ecx
  41a85d:	mov    edi,0xe941
  41a862:	sbb    eax,0x36e941bf
  41a867:	lods   al,BYTE PTR ds:[esi]
  41a868:	inc    ecx
  41a869:	jmp    0xe9835632
  41a86e:	repnz lods eax,DWORD PTR ds:[esi]
  41a870:	inc    ecx
  41a871:	jmp    0xe983566e
  41a876:	out    dx,al
  41a877:	lods   eax,DWORD PTR ds:[esi]
  41a878:	inc    ecx
  41a879:	jmp    0xe9835618
  41a87e:	pop    ecx
  41a87f:	lods   al,BYTE PTR ds:[esi]
  41a880:	inc    ecx
  41a881:	jmp    0xe9835473
  41a886:	sub    al,0xad
  41a888:	inc    ecx
  41a889:	jmp    0xe9835711
  41a88e:	mov    dh,0xae
  41a890:	inc    ecx
  41a891:	jmp    0xe983559c
  41a896:	adc    eax,0xa0e941ad
  41a89b:	stos   DWORD PTR es:[edi],eax
  41a89c:	inc    ecx
  41a89d:	jmp    0xe98353e6
  41a8a2:	pop    eax
  41a8a3:	test   eax,0x3f560041
  41a8a8:	jbe    0x41a8eb
  41a8aa:	inc    esi
  41a8ab:	aas    
  41a8ac:	jbe    0x41a8ef
  41a8ae:	inc    esi
  41a8af:	aas    
  41a8b0:	jbe    0x41a8f3
  41a8b2:	push   esi
  41a8b3:	aas    
  41a8b4:	jbe    0x41a8f7
  41a8b6:	push   esi
  41a8b7:	aas    
  41a8b8:	jbe    0x41a8fb
  41a8ba:	inc    esi
  41a8bb:	ds jbe 0x41a8ff
  41a8be:	inc    esi
  41a8bf:	ds jbe 0x41a903
  41a8c2:	push   ss
  41a8c3:	aas    
  41a8c4:	jbe    0x41a907
  41a8c6:	add    BYTE PTR [eax],al
  41a8c8:	push   ss
  41a8c9:	ds jbe 0x41a90d
  41a8cc:	push   es
  41a8cd:	ds jbe 0x41a911
  41a8d0:	push   es
  41a8d1:	ds jbe 0x41a915
  41a8d4:	push   ss
  41a8d5:	ds jbe 0x41a919
  41a8d8:	push   ss
  41a8d9:	ds jbe 0x41a91d
  41a8dc:	push   es
  41a8dd:	ds jbe 0x41a921
  41a8e0:	push   es
  41a8e1:	lods   al,BYTE PTR ds:[esi]
  41a8e2:	jb     0x41a925
  41a8e4:	(bad)  
  41a8e5:	mov    al,ds:0xeed64172
  41a8ea:	jb     0x41a92d
  41a8ec:	(bad)  
  41a8ed:	in     al,dx
  41a8ee:	jb     0x41a931
  41a8f0:	(bad)  
  41a8f1:	retf   0x4172
  41a8f4:	(bad)  
  41a8f5:	fdiv   DWORD PTR [ebp+0x41]
  41a8f8:	(bad)  
  41a8f9:	cmp    BYTE PTR [ebp+0x41],dh
  41a8fc:	mov    BYTE PTR [esi],0x75
  41a8ff:	inc    ecx
  41a900:	(bad)  
  41a901:	data16 jne 0x41a945
  41a904:	xchg   esi,eax
  41a905:	dec    edx
  41a906:	jne    0x41a949
  41a908:	xchg   esi,eax
  41a909:	mov    esp,0xc786416d
  41a90e:	jne    0x41a951
  41a910:	xchg   BYTE PTR [ebx+esi*2+0x6da49641],ch
  41a917:	inc    ecx
  41a918:	xchg   esi,eax
  41a919:	cmp    ch,BYTE PTR [ecx+eax*2-0x7a]
  41a91d:	loop   0x41a998
  41a91f:	inc    ecx
  41a920:	das    
  41a921:	inc    ebp
  41a922:	loope  0x41a99e
  41a924:	out    dx,al
  41a925:	inc    esp
  41a926:	mov    ch,0x7a
  41a928:	out    dx,al
  41a929:	inc    esp
  41a92a:	ds jnp 0x41a92d
  41a92d:	add    dh,ch
  41a92f:	inc    esp
  41a930:	xor    edi,DWORD PTR [ebx-0x12]
  41a933:	inc    esp
  41a934:	int    0x6f
  41a936:	out    dx,al
  41a937:	inc    esp
  41a938:	cmp    BYTE PTR [esi+ebp*8+0x44],0xd
  41a93d:	jnp    0x41a92d
  41a93f:	inc    esp
  41a940:	ret    
  41a941:	jge    0x41a931
  41a943:	inc    esp
  41a944:	jne    0x41a9c4
  41a946:	outs   dx,BYTE PTR ds:[esi]
  41a947:	aaa    
  41a948:	arpl   WORD PTR [eax+0x6e],si
  41a94b:	aaa    
  41a94c:	idiv   BYTE PTR [edx+0x6e]
  41a94f:	aaa    
  41a950:	(bad)  
  41a951:	jnp    0x41a9c1
  41a953:	aaa    
  41a954:	out    0x77,eax
  41a956:	outs   dx,BYTE PTR ds:[esi]
  41a957:	aaa    
  41a958:	fidiv  WORD PTR [edi+0x6e]
  41a95b:	aaa    
  41a95c:	int    0x77
  41a95e:	outs   dx,BYTE PTR ds:[esi]
  41a95f:	aaa    
  41a960:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a961:	ja     0x41a9d1
  41a963:	aaa    
  41a964:	ja     0x41a9de
  41a966:	outs   dx,BYTE PTR ds:[esi]
  41a967:	aaa    
  41a968:	pop    esp
  41a969:	js     0x41a9d9
  41a96b:	aaa    
  41a96c:	xor    al,0x78
  41a96e:	outs   dx,BYTE PTR ds:[esi]
  41a96f:	aaa    
  41a970:	or     al,0x78
  41a972:	outs   dx,BYTE PTR ds:[esi]
  41a973:	aaa    
  41a974:	in     al,0x76
  41a976:	outs   dx,BYTE PTR ds:[esi]
  41a977:	aaa    
  41a978:	in     al,0x76
  41a97a:	outs   dx,BYTE PTR ds:[esi]
  41a97b:	aaa    
  41a97c:	in     al,0x76
  41a97e:	outs   dx,BYTE PTR ds:[esi]
  41a97f:	aaa    
  41a980:	in     al,0x76
  41a982:	outs   dx,BYTE PTR ds:[esi]
  41a983:	aaa    
  41a984:	mov    ch,0x89
  41a986:	dec    ecx
  41a987:	aad    0x45
  41a989:	add    DWORD PTR [ebx],ebx
  41a98b:	jns    0x41a98e
  41a98d:	mov    ch,0xe9
  41a98f:	adc    bh,BYTE PTR [ecx+0x6e000088]
  41a995:	popa   
  41a996:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a997:	xchg   esi,eax
  41a998:	call   0xac9ebad0
  41a99d:	fsubrp st(1),st
  41a99f:	add    al,BYTE PTR [ebx]
  41a9a1:	std    
  41a9a2:	mov    eax,ds:0xe9de2f3f
  41a9a7:	test   eax,0xe7561627
  41a9ac:	scas   eax,DWORD PTR es:[edi]
  41a9ad:	push   ds
  41a9ae:	dec    esi
  41a9af:	stos   BYTE PTR es:[edi],al
  41a9b0:	pop    ss
  41a9b1:	push   ss
  41a9b2:	ss out dx,eax
  41a9b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9b5:	and    DWORD PTR [edx+0xa762d1b],ebp
  41a9bb:	xchg   edi,eax
  41a9bc:	sbb    al,0x76
  41a9be:	jmp    0x249ad259
  41a9c3:	cld    
  41a9c4:	shld   ebp,esp,0x84
  41a9c8:	daa    
  41a9c9:	sub    eax,0x1e5e0715
  41a9ce:	sub    ch,BYTE PTR [ebp-0x53560f11]
  41a9d4:	out    dx,eax
  41a9d5:	xchg   ebx,eax
  41a9d6:	pop    esi
  41a9d7:	adc    edx,DWORD PTR [ecx+0xf3ec61]
  41a9dd:	mov    bl,0xf9
  41a9df:	test   eax,0x3f7abaf
  41a9e4:	jns    0x41a9bd
  41a9e6:	pop    ebx
  41a9e7:	or     DWORD PTR [edi],edi
  41a9e9:	mov    dl,0xe0
  41a9eb:	aam    0xa0
  41a9ed:	mov    esp,DWORD PTR [esi]
  41a9ef:	sbb    DWORD PTR [ecx],esi
  41a9f1:	(bad)  
  41a9f2:	mov    ch,0x18
  41a9f4:	(bad)  
  41a9f5:	pop    ebx
  41a9f6:	xor    edx,DWORD PTR [eax]
  41a9f8:	add    BYTE PTR [eax],al
  41a9fa:	retf   0x1234
  41a9fd:	in     al,dx
  41a9fe:	sbb    BYTE PTR [ebp+0x596244c3],0x9c
  41aa05:	jmp    0x41aa4d
  41aa07:	(bad)  
  41aa08:	jg     0x41aa0d
  41aa0a:	add    DWORD PTR ds:0x9e3ab3f5,ebp
  41aa10:	jmp    0xa631db92
  41aa15:	out    0x3c,eax
  41aa17:	popa   
  41aa18:	add    DWORD PTR ds:0xb9000088,ebp
  41aa1e:	ss pop edi
  41aa20:	jge    0x41aa2f
  41aa22:	jnp    0x41aa50
  41aa24:	mov    DWORD PTR [edi-0x7d],ebx
  41aa27:	mov    DWORD PTR [ebp-0x14],esi
  41aa2a:	(bad)  
  41aa2b:	fistp  DWORD PTR [eax-0x3e]
  41aa2e:	popa   
  41aa2f:	in     eax,dx
  41aa30:	shr    BYTE PTR [edx-0x41],0x0
  41aa34:	add    eax,0xc15051e8
  41aa39:	fs ja  0x41aa68
  41aa3c:	add    ch,BYTE PTR [ecx-0x77]
  41aa3f:	rol    DWORD PTR [eax-0x3dd48e8f],1
  41aa45:	in     eax,0x2c
  41aa47:	pop    eax
  41aa48:	inc    edx
  41aa49:	(bad)  
  41aa4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa4b:	push   cs
  41aa4c:	or     DWORD PTR [ebx+0x6905afb0],0xd675c525
  41aa56:	lods   eax,DWORD PTR ds:[esi]
  41aa57:	stos   BYTE PTR es:[edi],al
  41aa58:	and    al,0xed
  41aa5a:	sub    al,0xd9
  41aa5c:	xchg   esp,eax
  41aa5d:	stos   DWORD PTR es:[edi],eax
  41aa5e:	add    BYTE PTR [eax],al
  41aa60:	xor    DWORD PTR [eax],ebx
  41aa62:	or     DWORD PTR [ebx+0x4],0x4d69d0ee
  41aa69:	test   eax,0x9b6b392e
  41aa6e:	adc    ebp,DWORD PTR [ebx]
  41aa70:	aaa    
  41aa71:	fidiv  WORD PTR [eax+0xe26ee8]
  41aa77:	xchg   esp,eax
  41aa78:	push   ebp
  41aa79:	cmp    al,BYTE PTR [edx+0xe05345]
  41aa7f:	jmp    0xf71c0101
  41aa84:	popa   
  41aa85:	popf   
  41aa86:	add    al,0xb7
  41aa88:	jns    0x41aa4b
  41aa8a:	test   DWORD PTR [ecx],ebp
  41aa8c:	(bad)  
  41aa8d:	loop   0x41aa47
  41aa8f:	je     0x41aabc
  41aa91:	fiadd  WORD PTR [eax]
  41aa93:	add    BYTE PTR ds:0x9e7b8114,bh
  41aa99:	fdiv   QWORD PTR [eax+esi*1+0x13]
  41aa9d:	lea    esp,[eax-0x3]
  41aaa0:	xchg   ecx,eax
  41aaa1:	fsub   st(0),st
  41aaa3:	mov    ah,0x19
  41aaa5:	loop   0x41aaa7
  41aaa7:	call   ebp
  41aaa9:	sub    DWORD PTR [ecx-0x7fa2d939],ecx
  41aaaf:	test   al,0x70
  41aab1:	fdiv   st(5),st
  41aab3:	push   0x46
  41aab5:	outs   dx,DWORD PTR ds:[esi]
  41aab6:	mov    bl,0x51
  41aab8:	inc    edi
  41aab9:	fild   WORD PTR [eax]
  41aabb:	call   0x428df9
  41aac0:	aad    0xa2
  41aac2:	adc    BYTE PTR [ebp+0x53860000],al
  41aac8:	or     al,0xb8
  41aaca:	rcr    esi,0x0
  41aacd:	add    BYTE PTR [ebx-0x4e015772],dl
  41aad3:	fucomi st,st(0)
  41aad5:	test   cl,bl
  41aad7:	fiadd  WORD PTR [eax]
  41aad9:	call   0x3ee945
  41aade:	es retf 0x7add
  41aae2:	pop    ss
  41aae3:	fisttp WORD PTR [ecx+0x2aa0275]
  41aae9:	test   DWORD PTR [esi+0x2c],eax
  41aaec:	sbb    BYTE PTR [edi-0x76ff212a],0x8b
  41aaf3:	sub    dh,BYTE PTR [ecx]
  41aaf5:	shr    al,0x19
  41aaf8:	inc    ecx
  41aaf9:	add    al,0x43
  41aafb:	dec    esi
  41aafc:	or     BYTE PTR [edi],cl
  41aafe:	imul   ebx,DWORD PTR [edi-0x38edba7d],0x71
  41ab05:	enter  0xdec6,0x84
  41ab09:	rcr    BYTE PTR [edx+0x2f046a51],0x5d
  41ab10:	call   0x98769a89
  41ab15:	(bad)  
  41ab16:	das    
  41ab17:	xor    eax,0xcd59fd00
  41ab1c:	inc    edx
  41ab1d:	jbe    0x41ab4d
  41ab1f:	xor    eax,0x4efbc084
  41ab24:	call   0x68:0x87780f
  41ab2b:	add    BYTE PTR [edi+0x34],ah
  41ab2e:	add    BYTE PTR [eax],al
  41ab30:	push   0xd9b21cca
  41ab35:	xor    eax,0xe86f8400
  41ab3a:	ret    
  41ab3b:	imul   ebp,DWORD PTR [ebx],0xdffbc3ba
  41ab41:	pushf  
  41ab42:	add    BYTE PTR ss:[edi],ch
  41ab45:	xor    eax,0x6047360d
  41ab4a:	xchg   ebx,eax
  41ab4b:	(bad)  
  41ab4c:	xor    al,al
  41ab4e:	inc    esp
  41ab4f:	je     0x41aba9
  41ab51:	ret    0xa883
  41ab54:	and    DWORD PTR [ecx+0xe],ebx
  41ab57:	push   eax
  41ab58:	sbb    BYTE PTR [ebx],cl
  41ab5a:	xchg   esp,eax
  41ab5b:	adc    DWORD PTR [edi+0x37],ebp
  41ab5e:	mov    al,0x8a
  41ab60:	mov    dl,0x9f
  41ab62:	or     bh,ch
  41ab64:	add    al,cl
  41ab66:	pushf  
  41ab67:	enter  0x372f,0x0
  41ab6b:	std    
  41ab6c:	cmp    DWORD PTR [edi+0x372e7595],ecx
  41ab72:	test   al,al
  41ab74:	pop    ebx
  41ab75:	cmp    eax,0xf93f4379
  41ab7a:	add    al,0xff
  41ab7c:	xor    BYTE PTR [esi],0x19
  41ab7f:	adc    esi,DWORD PTR [ecx+ebp*1+0xa3bf683]
  41ab86:	or     eax,0x13dec736
  41ab8b:	mov    bl,0xb3
  41ab8d:	sub    DWORD PTR [ebx+ebx*1-0x70690000],esi
  41ab94:	adc    cl,BYTE PTR ds:0xadab1e5d
  41ab9a:	not    DWORD PTR [esi]
  41ab9c:	sub    BYTE PTR [eax],al
  41ab9e:	das    
  41ab9f:	nop
  41aba0:	outs   dx,BYTE PTR ds:[esi]
  41aba1:	adc    esp,edx
  41aba3:	push   esp
  41aba4:	je     0x41abad
  41aba6:	push   0xffffffe0
  41aba8:	jns    0x41ab35
  41abaa:	cmp    dh,bl
  41abac:	ins    BYTE PTR es:[edi],dx
  41abad:	or     al,0xfb
  41abaf:	fcmovu st,st(2)
  41abb1:	aam    0x50
  41abb3:	and    DWORD PTR [ecx],edi
  41abb5:	or     eax,0x42c19162
  41abba:	call   0xeb576ee7
  41abbf:	add    esi,ebp
  41abc1:	add    dh,BYTE PTR [edx-0x20]
  41abc4:	add    eax,0x35ddef7f
  41abc9:	push   es
  41abca:	loope  0x41ac01
  41abcc:	push   esp
  41abcd:	mov    dl,0x33
  41abcf:	sub    DWORD PTR [ebx],edi
  41abd1:	jns    0x41abc4
  41abd3:	xchg   DWORD PTR [edi+0x71662f07],esp
  41abd9:	pusha  
  41abda:	mov    dl,0x5c
  41abdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abdd:	mov    dh,0xa7
  41abdf:	cmp    DWORD PTR [edi+0x27],esp
  41abe2:	pop    es
  41abe3:	pop    ebp
  41abe4:	xchg   bh,dl
  41abe6:	pop    edi
  41abe7:	pop    ebx
  41abe8:	es call 0xb580990a
  41abee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abef:	scas   al,BYTE PTR es:[edi]
  41abf0:	in     eax,0x7a
  41abf2:	jae    0x41abf6
  41abf4:	adc    dl,cl
  41abf6:	add    BYTE PTR [eax],al
  41abf8:	mov    al,ds:0xcbf6090
  41abfd:	into   
  41abfe:	jo     0x41abaf
  41ac00:	or     al,0xda
  41ac02:	and    al,bh
  41ac04:	or     al,0xca
  41ac06:	add    BYTE PTR [ecx-0x4c],ah
  41ac09:	call   0xfd31d20e
  41ac0e:	sub    al,0x1d
  41ac10:	xor    bl,BYTE PTR [esi-0x5dda7900]
  41ac16:	and    al,0xfd
  41ac18:	and    eax,0x35f1248a
  41ac1d:	ja     0x41ac20
  41ac1f:	jmp    0xedbe0b50
  41ac24:	jl     0x41abff
  41ac26:	adc    BYTE PTR [ecx+0x2c],0xde
  41ac2a:	add    BYTE PTR [edi-0x3616cd09],dl
  41ac30:	popf   
  41ac31:	daa    
  41ac32:	cld    
  41ac33:	jb     0x41ac50
  41ac35:	pop    ebp
  41ac36:	fsub   st,st(6)
  41ac38:	loopne 0x41ac9b
  41ac3a:	add    ecx,ebp
  41ac3c:	sub    al,0x8f
  41ac3e:	call   0xfc6902b1
  41ac43:	push   0xffffff87
  41ac45:	cld    
  41ac46:	and    al,0xb6
  41ac48:	lea    ebx,[edi+0x45]
  41ac4b:	add    eax,0xcd5d5f53
  41ac50:	push   esp
  41ac51:	ret    0xa985
  41ac54:	mov    esi,0x272e878c
  41ac59:	push   ebp
  41ac5a:	dec    eax
  41ac5b:	stc    
  41ac5c:	add    BYTE PTR [eax],al
  41ac5e:	jecxz  0x41acbe
  41ac60:	jmp    0xfe82613e
  41ac65:	jmp    0xbcece296
  41ac6a:	xor    eax,0xae798829
  41ac6f:	xor    BYTE PTR [esi-0xb],dh
  41ac72:	fs pop ecx
  41ac74:	add    ecx,ebp
  41ac76:	sub    al,0xc0
  41ac78:	mov    DWORD PTR [ebp-0x1183800],ebp
  41ac7e:	push   edi
  41ac7f:	mov    ds:0x72220024,al
  41ac84:	xchg   DWORD PTR [edx+esi*1+0x3a],eax
  41ac88:	dec    esp
  41ac89:	mov    edx,DWORD PTR [eax]
  41ac8b:	retf   0xb2b
  41ac8e:	(bad)  
  41ac8f:	fist   DWORD PTR [edx+0x66]
  41ac92:	aas    
  41ac93:	push   ds
  41ac94:	and    BYTE PTR [esi+edi*1],ah
  41ac97:	leave  
  41ac98:	push   eax
  41ac99:	(bad)  
  41ac9a:	cmp    DWORD PTR [edi+0x5e9e244c],esp
  41aca0:	les    esi,FWORD PTR [ebp+ebx*4-0x58]
  41aca4:	sti    
  41aca5:	imul   edx,DWORD PTR [edi-0x4d7cef2c],0xac001407
  41acaf:	fild   DWORD PTR [edi+0x4c322244]
  41acb5:	lea    eax,[edx]
  41acb7:	ds xor al,ch
  41acba:	call   FWORD PTR [ebx+edi*8]
  41acbd:	call   DWORD PTR ds:0x50c0ca
  41acc3:	add    BYTE PTR [ecx-0x2c],ch
  41acc6:	xor    ebx,ebx
  41acc8:	mov    ebp,0xcd102066
  41accd:	dec    edx
  41acce:	add    BYTE PTR [ebx-0x1735576f],cl
  41acd4:	imul   ecx,DWORD PTR [esi-0x5],0x39d39dff
  41acdb:	sti    
  41acdc:	or     DWORD PTR [esi+0x45],ebx
  41acdf:	jmp    FWORD PTR [ecx-0x1dbb0d2d]
  41ace5:	ss or  al,0x74
  41ace8:	dec    edi
  41ace9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acea:	inc    esp
  41aceb:	and    al,0xa
  41aced:	imul   eax,DWORD PTR [ebx-0x1bd50da4],0x44
  41acf4:	jecxz  0x41acc9
  41acf6:	std    
  41acf7:	test   BYTE PTR [esi],dl
  41acf9:	push   edi
  41acfa:	cmp    al,ch
  41acfc:	das    
  41acfd:	dec    edi
  41acfe:	cwde   
  41acff:	cld    
  41ad00:	fdiv   DWORD PTR [ebx+0x78a62037]
  41ad06:	fmul   QWORD PTR [edi]
  41ad08:	mov    edx,0x5f0fdc80
  41ad0d:	sbb    eax,DWORD PTR ds:0x184d336a
  41ad13:	dec    eax
  41ad14:	dec    ecx
  41ad15:	add    BYTE PTR [edi],al
  41ad17:	std    
  41ad18:	and    esp,DWORD PTR [ecx]
  41ad1a:	hlt    
  41ad1b:	out    0xc6,eax
  41ad1d:	jecxz  0x41ad1e
  41ad1f:	jmp    FWORD PTR [ecx+ecx*1+0x34ecd5d0]
  41ad26:	lock add BYTE PTR [bx+si],al
  41ad2a:	das    
  41ad2b:	xor    eax,0x9158000
  41ad30:	jge    0x41ad8e
  41ad32:	push   ebx
  41ad33:	adc    DWORD PTR [edi],eax
  41ad35:	adc    edx,ebx
  41ad37:	sub    eax,eax
  41ad39:	(bad)  
  41ad3a:	mov    ebx,0x570be090
  41ad3f:	sbb    esp,DWORD PTR [ecx-0x4be4a704]
  41ad45:	cmc    
  41ad46:	jmp    0x41ad20
  41ad48:	lock pop es
  41ad4a:	ret    
  41ad4b:	inc    ecx
  41ad4c:	sbb    BYTE PTR [esi-0x1],dl
  41ad4f:	xor    al,0x0
  41ad51:	div    bl
  41ad53:	loopne 0x41ad45
  41ad55:	add    BYTE PTR [ebx-0x452067ea],bh
  41ad5b:	test   DWORD PTR [eax+ebp*8],0x7
  41ad62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad63:	sti    
  41ad64:	loopne 0x41ad79
  41ad66:	xchg   DWORD PTR [edi],esi
  41ad68:	add    BYTE PTR [eax],al
  41ad6a:	scas   eax,DWORD PTR es:[edi]
  41ad6b:	inc    esi
  41ad6c:	sbb    eax,0xb0370f81
  41ad71:	imul   ebp,DWORD PTR [esi],0xf050b5c8
  41ad77:	fdivp  st(4),st
  41ad79:	ret    
  41ad7a:	cmp    BYTE PTR [esi+0x2c3b1ce9],bl
  41ad80:	scas   al,BYTE PTR es:[edi]
  41ad81:	fistp  QWORD PTR [edx+ebx*8]
  41ad84:	aad    0xf6
  41ad86:	dec    eax
  41ad87:	fsubp  st(1),st
  41ad89:	add    ebp,DWORD PTR [edi+0x8d5b8]
  41ad8f:	add    BYTE PTR [edx+eax*4],bl
  41ad92:	fadd   st(3),st
  41ad94:	mov    eax,0x18df9e58
  41ad99:	jmp    0x59743dcc
  41ad9e:	jmp    0xfa664f40
  41ada3:	test   al,0xfa
  41ada5:	mov    BYTE PTR [esi+0x1f],bl
  41ada8:	hlt    
  41ada9:	and    ah,bh
  41adab:	mov    edi,0xb1e8da4c
  41adb0:	mov    bh,0x2f
  41adb2:	sub    eax,DWORD PTR [edx]
  41adb4:	sti    
  41adb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41adb6:	test   eax,0x3bdbfb03
  41adbb:	sbb    al,0x7b
  41adbd:	xchg   ebp,eax
  41adbe:	fimul  DWORD PTR [eax]
  41adc0:	mov    dh,0x1c
  41adc2:	xor    al,0x46
  41adc4:	xor    ebx,esi
  41adc6:	ss mov dl,0xa7
  41adc9:	cs sbb edx,ebp
  41adcc:	mov    BYTE PTR [ecx-0x54],bl
  41adcf:	aam    0x67
  41add1:	icebp  
  41add2:	mov    dl,0x1b
  41add4:	dec    esp
  41add5:	stos   BYTE PTR es:[edi],al
  41add6:	call   0x1e62a3de
  41addb:	hlt    
  41addc:	mov    bh,0x13
  41adde:	and    ebx,DWORD PTR [eax+edi*8]
  41ade1:	test   eax,0x215603e8
  41ade6:	adc    eax,0xfd295610
  41adeb:	(bad)  
  41adec:	fcomp  st(6)
  41adee:	mov    es,WORD PTR [esi+0x7600dbb7]
  41adf4:	add    BYTE PTR [eax],al
  41adf6:	pushf  
  41adf7:	rcl    BYTE PTR [eax-0x7f],1
  41adfa:	daa    
  41adfb:	xchg   ebx,eax
  41adfc:	sti    
  41adfd:	imul   bp,WORD PTR [esi],0x38
  41ae01:	pop    edx
  41ae02:	mov    al,0xf9
  41ae04:	in     ax,dx
  41ae06:	xor    al,0xba
  41ae08:	dec    ebx
  41ae09:	dec    esi
  41ae0a:	daa    
  41ae0b:	out    0xbf,eax
  41ae0d:	mov    ebp,0x52195bc8
  41ae12:	sub    ch,bh
  41ae14:	shl    dl,0x73
  41ae17:	stos   BYTE PTR es:[edi],al
  41ae18:	add    ah,BYTE PTR [eax-0x24]
  41ae1b:	push   ebp
  41ae1c:	stc    
  41ae1d:	adc    ah,BYTE PTR [edx+ecx*4+0x21e793e8]
  41ae24:	cld    
  41ae25:	fisub  DWORD PTR [edi]
  41ae27:	out    0xf7,eax
  41ae29:	xchg   esp,eax
  41ae2a:	nop
  41ae2b:	out    dx,al
  41ae2c:	rcl    BYTE PTR [edx],0x6d
  41ae2f:	mov    dh,0x8
  41ae31:	adc    DWORD PTR [ebp-0x6f],esi
  41ae34:	sti    
  41ae35:	mul    BYTE PTR [ebp+ebx*1+0x75]
  41ae39:	loop   0x41ae2a
  41ae3b:	fnsave [eax+0x61]
  41ae3e:	jae    0x41ae64
  41ae40:	mov    DWORD PTR [ecx+0x2f],esp
  41ae43:	aaa    
  41ae44:	call   FWORD PTR [ecx]
  41ae46:	repz out 0xbf,al
  41ae49:	push   esp
  41ae4a:	pop    eax
  41ae4b:	and    DWORD PTR [ecx+edx*8],esi
  41ae4e:	jbe    0x41ade1
  41ae50:	sti    
  41ae51:	mov    esi,0x26343c90
  41ae56:	xor    BYTE PTR [ebx],ah
  41ae58:	call   0xb441aef5
  41ae5d:	sub    eax,0xde4cc7e9
  41ae62:	add    dl,ah
  41ae64:	ins    DWORD PTR es:[edi],dx
  41ae65:	stos   BYTE PTR es:[edi],al
  41ae66:	or     DWORD PTR [ecx],edi
  41ae68:	jl     0x41ae8d
  41ae6a:	sti    
  41ae6b:	hlt    
  41ae6c:	ins    BYTE PTR es:[edi],dx
  41ae6d:	rol    BYTE PTR [eax+0x0],1
  41ae70:	push   ss
  41ae71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae72:	rcr    DWORD PTR [edi+0x20],0x77
  41ae76:	rcl    DWORD PTR [edi-0x73],0xd2
  41ae7a:	dec    ebx
  41ae7b:	push   edi
  41ae7c:	scas   al,BYTE PTR es:[edi]
  41ae7d:	mov    ebx,edi
  41ae7f:	call   esi
  41ae81:	pop    esi
  41ae82:	sar    DWORD PTR [eax+0x7],0x5f
  41ae86:	iret   
  41ae87:	jne    0x41ae54
  41ae89:	xchg   ebp,eax
  41ae8a:	sbb    BYTE PTR [ebp-0x7a],dh
  41ae8d:	fbstp  TBYTE PTR [ecx]
  41ae8f:	shl    BYTE PTR [ebp-0x278a3ba2],0x17
  41ae96:	add    dh,BYTE PTR [esp+edx*4+0x5e]
  41ae9a:	(bad)  
  41ae9b:	jne    0x41ae66
  41ae9d:	xchg   edi,eax
  41ae9e:	push   ebp
  41ae9f:	add    BYTE PTR [ecx+0xe51ea5f],bl
  41aea5:	pop    eax
  41aea6:	cld    
  41aea7:	push   es
  41aea8:	push   es
  41aea9:	mov    DWORD PTR [eax+0x56],0x14204e21
  41aeb0:	add    ecx,DWORD PTR [ecx-0x3]
  41aeb3:	push   edx
  41aeb4:	cwde   
  41aeb5:	je     0x41aee8
  41aeb7:	fild   DWORD PTR [ecx-0x39e98fd2]
  41aebd:	fild   WORD PTR [ecx+0x660000c4]
  41aec3:	xchg   edx,eax
  41aec4:	jbe    0x41aec6
  41aec6:	dec    ecx
  41aec7:	pop    edi
  41aec8:	add    al,0xfe
  41aecb:	sub    bh,BYTE PTR [ecx]
  41aecd:	(bad)  
  41aece:	stc    
  41aecf:	outs   dx,DWORD PTR es:[esi]
  41aed1:	add    eax,0xeb3e3abe
  41aed6:	aas    
  41aed7:	test   al,0xf0
  41aed9:	jmp    0x41af26
  41aedb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aedc:	sbb    al,0x3e
  41aede:	int    0xf1
  41aee0:	add    esi,edi
  41aee2:	popf   
  41aee3:	mov    al,ds:0x51ed855a
  41aee8:	add    BYTE PTR [ebx],bh
  41aeea:	das    
  41aeeb:	outs   dx,BYTE PTR ds:[esi]
  41aeec:	xchg   ecx,eax
  41aeed:	or     DWORD PTR [eax+eax*8+0x6db20be0],esp
  41aef4:	mov    WORD PTR [ecx],es
  41aef6:	mov    dh,0x1d
  41aef8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aef9:	pop    esp
  41aefa:	in     eax,dx
  41aefb:	cmp    al,0x0
  41aefd:	push   ecx
  41aefe:	pop    eax
  41aeff:	rol    BYTE PTR [edi],0x4f
  41af02:	or     BYTE PTR [ebp+0x34e0fed8],0xcf
  41af09:	fcom   DWORD PTR [eax+edi*8]
  41af0c:	sub    DWORD PTR [edx+0x14],0xffffffe8
  41af10:	nop
  41af11:	add    al,BYTE PTR [ebp+0x2f3fb3c8]
  41af17:	sub    BYTE PTR [eax+0x39],al
  41af1a:	in     al,0x61
  41af1c:	jmp    0x41af83
  41af1e:	test   BYTE PTR [esi],0x8c
  41af21:	dec    esp
  41af22:	add    BYTE PTR fs:[ecx-0x18fffffc],dl
  41af29:	imul   eax,DWORD PTR [eax],0x5
  41af2c:	scas   eax,DWORD PTR es:[edi]
  41af2d:	fbstp  TBYTE PTR [ebp-0x4caea49]
  41af33:	jg     0x41aec9
  41af35:	sbb    DWORD PTR [esi-0x13e70404],ebp
  41af3b:	mov    bh,dh
  41af3d:	sub    esi,DWORD PTR [ecx-0x13cc27ab]
  41af43:	outs   dx,DWORD PTR ds:[esi]
  41af44:	inc    ecx
  41af45:	cmc    
  41af46:	add    al,0x81
  41af48:	imul   esp,DWORD PTR [edi+eax*2],0x7a
  41af4c:	das    
  41af4d:	xor    al,0x80
  41af4f:	sub    DWORD PTR [edi-0x74],0xfffffff6
  41af53:	cmp    BYTE PTR [ecx-0x1d],dh
  41af56:	cli    
  41af57:	jae    0x41af82
  41af59:	mov    al,0x14
  41af5b:	jmp    0x31696f87
  41af60:	outs   dx,DWORD PTR ds:[esi]
  41af61:	call   0xc874:0xdea00477
  41af68:	fwait
  41af69:	push   ebp
  41af6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af6c:	lods   eax,DWORD PTR ds:[esi]
  41af6d:	add    eax,0x7560011
  41af72:	adc    eax,0xcd92b7fa
  41af77:	imul   DWORD PTR [ebp-0x4ffe09e9]
  41af7d:	out    0x12,eax
  41af7f:	test   eax,0x7ee9d6ee
  41af84:	lock stos BYTE PTR es:[edi],al
  41af86:	pop    ss
  41af87:	dec    esp
  41af88:	loop   0x41afab
  41af8a:	pop    ebx
  41af8b:	test   DWORD PTR [eax],eax
  41af8d:	add    BYTE PTR [ebx-0x2c2ec5ab],al
  41af93:	pop    esi
  41af94:	adc    DWORD PTR [ebx+eax*2],eax
  41af97:	fisubr DWORD PTR [eax+0x65293db9]
  41af9d:	xor    bh,BYTE PTR [ebx+ebx*8]
  41afa0:	jb     0x41af4f
  41afa2:	mov    al,0xd8
  41afa4:	imul   edi,DWORD PTR [edi-0x5f],0xa27ef4aa
  41afab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afac:	jecxz  0x41af86
  41afae:	outs   dx,BYTE PTR ds:[esi]
  41afaf:	push   edi
  41afb0:	in     al,dx
  41afb1:	sbb    BYTE PTR [esi],ch
  41afb3:	pop    ebp
  41afb4:	les    eax,FWORD PTR [ebx]
  41afb6:	mov    dh,0x19
  41afb8:	mov    ds:0x93662c18,eax
  41afbd:	add    esi,DWORD PTR [edx]
  41afbf:	pop    esi
  41afc0:	ins    DWORD PTR es:[edi],dx
  41afc1:	inc    esp
  41afc2:	clc    
  41afc3:	fsub   DWORD PTR [esi+ecx*1-0x1d]
  41afc7:	fsub   QWORD PTR [esi-0x23]
  41afca:	pusha  
  41afcb:	sbb    al,0x65
  41afcd:	cmp    ah,bl
  41afcf:	jmp    0x2193b465
  41afd4:	dec    ebx
  41afd5:	lods   eax,DWORD PTR ds:[esi]
  41afd6:	mov    bh,0xe
  41afd8:	test   DWORD PTR [ecx+ecx*8],0x329000e6
  41afdf:	pop    ebp
  41afe0:	add    DWORD PTR [eax-0x4b8a6bd2],ebp
  41afe6:	test   eax,0x6bec760c
  41afeb:	mov    eax,DWORD PTR [eax]
  41afed:	out    0xac,al
  41afef:	pop    esp
  41aff0:	repz sbb eax,0x5c180000
  41aff6:	cld    
  41aff7:	adc    DWORD PTR [ecx],ecx
  41aff9:	idiv   BYTE PTR [esi+0x360270]
  41afff:	push   0xffffffda
  41b001:	and    BYTE PTR [edi+0x635cbae],al
  41b007:	xor    DWORD PTR [ebx+0x61690320],ebx
  41b00d:	push   ds
  41b00e:	jp     0x41aff6
  41b010:	pop    ecx
  41b011:	sub    BYTE PTR [ebp-0x16],dh
  41b014:	scas   eax,DWORD PTR es:[edi]
  41b015:	test   DWORD PTR [eax],0x3860df2a
  41b01b:	xor    DWORD PTR [eax+0x320081d2],esi
  41b021:	and    edi,esp
  41b023:	mov    dh,0x9e
  41b025:	fidivr DWORD PTR [eax-0x7f24d36a]
  41b02b:	sub    dh,BYTE PTR [ebp-0x22]
  41b02e:	jne    0x41b01d
  41b030:	pop    ebx
  41b031:	fsubr  QWORD PTR [esi+eiz*4]
  41b034:	ins    BYTE PTR es:[edi],dx
  41b035:	and    BYTE PTR [edi],dh
  41b037:	and    DWORD PTR [eax-0x10177622],edi
  41b03d:	out    dx,al
  41b03e:	rol    al,0xb8
  41b041:	cld    
  41b042:	add    al,0x7c
  41b044:	jb     0x41b02d
  41b046:	inc    esp
  41b047:	lds    esp,FWORD PTR [ebx+ebp*4+0x6]
  41b04b:	push   0xde08f9af
  41b050:	sub    al,0x23
  41b052:	jl     0x41b0b3
  41b054:	es push sp
  41b057:	jmp    0x5e76b05c
  41b05c:	mov    edi,0x51dc3e00
  41b061:	push   esi
  41b062:	and    DWORD PTR [eax-0x178b74d2],esi
  41b068:	shl    BYTE PTR [ebx],0xbd
  41b06b:	mov    ebx,0x439bf129
  41b070:	enter  0xb9ff,0x5b
  41b074:	adc    dl,0x32
  41b077:	int3   
  41b078:	xchg   BYTE PTR [eax+ebp*8],dl
  41b07b:	push   edi
  41b07c:	shl    BYTE PTR [ecx+edx*1+0x54],cl
  41b080:	or     eax,DWORD PTR [ecx+0x45]
  41b083:	mov    ebp,DWORD PTR [edi-0x18]
  41b086:	sbb    ebx,0x6f
  41b089:	pop    es
  41b08a:	jg     0xd5182b48
  41b090:	add    dh,0xc7
  41b093:	fisttp DWORD PTR [ecx+0x7fca224c]
  41b099:	leave  
  41b09a:	loop   0x41b075
  41b09c:	sbb    DWORD PTR [ecx],0xffffff89
  41b09f:	mov    ebp,0xdbd2c259
  41b0a4:	dec    edi
  41b0a5:	mov    ebp,DWORD PTR [edx-0x77]
  41b0a8:	and    DWORD PTR [ebp+0x5a],0x1d5651da
  41b0af:	sub    BYTE PTR [ecx],dh
  41b0b1:	fist   DWORD PTR [ebx]
  41b0b3:	and    al,0x70
  41b0b5:	and    edx,ecx
  41b0b7:	push   eax
  41b0b8:	ja     0x41b0c6
  41b0ba:	ins    DWORD PTR es:[edi],dx
  41b0bb:	and    bh,BYTE PTR [edi-0x40]
  41b0be:	add    BYTE PTR [eax],al
  41b0c0:	add    al,bh
  41b0c2:	or     eax,0x62cc62b7
  41b0c7:	test   DWORD PTR [esi+eiz*4],edx
  41b0ca:	or     DWORD PTR [esi-0x31],esp
  41b0cd:	enter  0xc181,0x54
  41b0d1:	xchg   ebx,eax
  41b0d2:	inc    ecx
  41b0d3:	dec    esi
  41b0d4:	add    esi,DWORD PTR [edx]
  41b0d6:	pop    ebp
  41b0d7:	test   DWORD PTR [edi],ebp
  41b0d9:	(bad)  
  41b0da:	js     0x41b0e5
  41b0dc:	lods   al,BYTE PTR ds:[esi]
  41b0dd:	push   ds
  41b0de:	push   es
  41b0df:	dec    ecx
  41b0e0:	push   0x2f7a00f2
  41b0e5:	cmp    BYTE PTR [eax-0x727090d0],al
  41b0eb:	(bad)  
  41b0ec:	mov    ch,0xf9
  41b0ee:	or     al,0x83
  41b0f0:	out    dx,eax
  41b0f1:	rol    BYTE PTR [edx],0x87
  41b0f4:	aaa    
  41b0f5:	lods   al,BYTE PTR ds:[esi]
  41b0f6:	dec    eax
  41b0f7:	cld    
  41b0f8:	jno    0x41b0e6
  41b0fa:	int    0xc1
  41b0fc:	aaa    
  41b0fd:	xor    eax,0xc6138959
  41b102:	mov    esi,eax
  41b104:	cmp    BYTE PTR [ecx],0x33
  41b107:	shl    dh,0x73
  41b10a:	pop    edx
  41b10b:	mov    esp,DWORD PTR [edx-0x4f]
  41b10e:	out    0xc1,eax
  41b110:	loope  0x41b0c9
  41b112:	(bad)  
  41b113:	pop    ebp
  41b114:	mov    dl,0xf4
  41b116:	jae    0x41b11b
  41b118:	lods   al,BYTE PTR ds:[esi]
  41b119:	cld    
  41b11a:	inc    dh
  41b11c:	in     al,dx
  41b11d:	mov    ebx,0xf3f6fc48
  41b122:	pop    eax
  41b123:	mov    DWORD PTR [eax],eax
  41b125:	add    bl,cl
  41b127:	inc    ebp
  41b128:	mov    esi,eax
  41b12a:	cmp    dh,BYTE PTR [ecx]
  41b12c:	xor    eax,eax
  41b12e:	jbe    0x41b123
  41b130:	pop    ecx
  41b131:	mov    ebx,DWORD PTR [edx]
  41b133:	stc    
  41b134:	out    0x54,eax
  41b136:	cdq    
  41b137:	mov    edi,0xf4aa5dfe
  41b13c:	jae    0x41b141
  41b13e:	lods   al,BYTE PTR ds:[esi]
  41b13f:	cld    
  41b140:	inc    dh
  41b142:	ins    BYTE PTR es:[edi],dx
  41b143:	stos   DWORD PTR es:[edi],eax
  41b144:	dec    eax
  41b145:	cld    
  41b146:	repz pop ax
  41b149:	mov    DWORD PTR [ebx-0x1f78bd9],eax
  41b14f:	fdivr  st(4),st
  41b151:	std    
  41b152:	pusha  
  41b153:	fucom  st(2)
  41b155:	xchg   DWORD PTR [eax+0x7e8713a5],ebx
  41b15b:	test   al,0xec
  41b15d:	mov    ebp,0x4298f14
  41b162:	(bad)  
  41b163:	sbb    eax,0xa9274701
  41b168:	aad    0x69
  41b16a:	clc    
  41b16b:	fstp   TBYTE PTR ds:0xcf382223
  41b171:	retf   0xffaf
  41b174:	(bad)  
  41b175:	mov    ds,WORD PTR [ecx-0x50f7164b]
  41b17b:	or     eax,edi
  41b17d:	push   ebp
  41b17e:	mov    dh,0xb3
  41b180:	loope  0x41b110
  41b182:	ins    DWORD PTR es:[edi],dx
  41b183:	out    0x19,al
  41b185:	mov    esp,0x817b1dfa
  41b18a:	add    BYTE PTR [eax],al
  41b18c:	pop    es
  41b18d:	cli    
  41b18e:	jb     0x41b191
  41b190:	jmp    0x6eb3:0x2f08a7bb
  41b197:	lock imul esi,DWORD PTR [eax+esi*2-0x52962cb9],0x5969620b
  41b1a3:	pop    edx
  41b1a4:	test   al,0xa3
  41b1a6:	icebp  
  41b1a7:	jmp    0x41b13d
  41b1a9:	sbb    al,0x3b
  41b1ab:	add    DWORD PTR [esi+ebx*1-0x544bb14e],ebp
  41b1b2:	sub    eax,0x11e5fd8f
  41b1b7:	ins    BYTE PTR es:[edi],dx
  41b1b8:	cdq    
  41b1b9:	sbb    eax,0x96d0871b
  41b1be:	fadd   QWORD PTR [esi+0x3aed938b]
  41b1c4:	add    al,0x1a
  41b1c6:	jle    0x41b1fe
  41b1c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1c9:	stos   DWORD PTR es:[edi],eax
  41b1ca:	icebp  
  41b1cb:	imul   edi,DWORD PTR [eax],0x197d00d7
  41b1d1:	adc    ebx,ebx
  41b1d3:	shl    BYTE PTR [esi+0x5e],cl
  41b1d6:	jecxz  0x41b1e2
  41b1d8:	test   al,0x63
  41b1da:	push   esp
  41b1db:	jmp    0xf82a1007
  41b1e0:	das    
  41b1e1:	xchg   ecx,eax
  41b1e2:	or     BYTE PTR [ecx+ebp*8-0x1b],bl
  41b1e6:	push   eax
  41b1e7:	jb     0x41b1da
  41b1e9:	sbb    DWORD PTR [eax-0x16d45c6a],ecx
  41b1ef:	jae    0x41b1f1
  41b1f1:	add    BYTE PTR [esi],ch
  41b1f3:	sbb    edi,esp
  41b1f5:	ret    0x6135
  41b1f8:	cld    
  41b1f9:	sbb    eax,0x7c9cf30
  41b1fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1ff:	jmp    0x6200:0xe0f2a05a
  41b206:	pop    eax
  41b207:	ret    0x740c
  41b20a:	jo     0x41b1ce
  41b20c:	adc    BYTE PTR [ecx],bl
  41b20e:	cs xchg edx,eax
  41b210:	and    al,0xe5
  41b212:	mov    ebx,0xd4dd24a0
  41b217:	adc    al,0xfd
  41b219:	data16 das 
  41b21b:	pop    ds
  41b21c:	mov    BYTE PTR [ebp-0x527215f8],dh
  41b222:	adc    dh,ch
  41b224:	push   eax
  41b225:	dec    esi
  41b226:	cmp    dl,al
  41b228:	or     al,0x72
  41b22a:	jo     0x41b1ee
  41b22c:	or     al,0x51
  41b22e:	dec    esi
  41b22f:	sbb    bh,ah
  41b231:	ss jae 0x41b1e3
  41b234:	xchg   DWORD PTR ds:0xa47facfd,edi
  41b23a:	and    al,0xde
  41b23c:	jne    0x41b224
  41b23e:	aam    0xb1
  41b240:	add    dh,ch
  41b242:	lods   al,BYTE PTR ds:[esi]
  41b243:	add    eax,0xedf16270
  41b248:	dec    edi
  41b249:	add    BYTE PTR [esi],bl
  41b24b:	pop    ecx
  41b24c:	(bad)  
  41b24d:	push   DWORD PTR [ecx+0x68]
  41b250:	aam    0x85
  41b252:	cmp    eax,0xb80598
  41b257:	add    BYTE PTR [ecx+0x7d8005e0],bh
  41b25d:	jge    0x41b1e0
  41b25f:	gs dec esi
  41b261:	loope  0x41b225
  41b263:	inc    ebp
  41b264:	popa   
  41b265:	loope  0x41b2b9
  41b267:	adc    DWORD PTR [ebp+0x46fffbe1],0x71fffd58
  41b271:	pushf  
  41b272:	cmp    eax,ebx
  41b274:	(bad)  
  41b275:	in     al,0x89
  41b277:	fmul   st,st(0)
  41b279:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b27a:	std    
  41b27b:	add    DWORD PTR [ebx-0x7cafe61a],esp
  41b281:	xchg   ebp,eax
  41b282:	clc    
  41b283:	call   0x3f5af7
  41b288:	mov    ah,BYTE PTR [edx]
  41b28a:	jo     0x41b2bf
  41b28c:	mov    cl,0x95
  41b28e:	adc    al,0x8b
  41b290:	sbb    esi,edx
  41b292:	std    
  41b293:	jne    0x41b267
  41b295:	push   0x274df83f
  41b29a:	in     al,0x77
  41b29c:	push   edx
  41b29d:	sbb    edi,ebp
  41b29f:	mov    esi,DWORD PTR [esi+0x61]
  41b2a2:	(bad)  
  41b2a3:	jp     0x41b27b
  41b2a5:	in     al,0x80
  41b2a7:	jne    0x41b27c
  41b2a9:	pop    edi
  41b2aa:	ja     0x41b2ab
  41b2ac:	(bad)  
  41b2ad:	xchg   ebx,eax
  41b2ae:	mov    eax,0xe4177bff
  41b2b3:	test   esp,0x488bfd1c
  41b2b9:	mov    esp,0xc959
  41b2be:	inc    esp
  41b2bf:	repnz add BYTE PTR [esi-0x7ffa2034],bh
  41b2c6:	das    
  41b2c7:	loopne 0x41b2b6
  41b2c9:	cmp    BYTE PTR [ecx+0x72],0xe9
  41b2cd:	mov    dl,dh
  41b2cf:	or     al,0x87
  41b2d1:	dec    edx
  41b2d2:	ja     0x41b262
  41b2d4:	or     al,0x31
  41b2d6:	outs   dx,DWORD PTR ds:[esi]
  41b2d7:	loopne 0x41b2b8
  41b2d9:	push   edx
  41b2da:	mov    ah,0x19
  41b2dc:	push   ebp
  41b2dd:	dec    edi
  41b2de:	lods   al,BYTE PTR ds:[esi]
  41b2df:	or     BYTE PTR [eax+eax*1],0xda
  41b2e3:	add    edi,DWORD PTR [eax-0x7ff3d0ac]
  41b2e9:	call   0x109232a7
  41b2ee:	fsubr  QWORD PTR [esp+edi*1]
  41b2f1:	(bad)  
  41b2f2:	xor    BYTE PTR [edi+eax*4-0x29],bl
  41b2f6:	mov    dl,0x6f
  41b2f8:	jge    0x41b2ff
  41b2fa:	out    0xf3,eax
  41b2fc:	add    al,0x5
  41b2fe:	scas   eax,DWORD PTR es:[edi]
  41b2ff:	outs   dx,DWORD PTR ds:[esi]
  41b300:	pop    ebx
  41b301:	or     DWORD PTR [edx+0x72c6003d],0xae560074
  41b30b:	inc    edi
  41b30c:	add    bh,bh
  41b30e:	clc    
  41b30f:	add    al,0x89
  41b311:	fdiv   DWORD PTR [ecx+0xd]
  41b314:	test   eax,edi
  41b316:	call   0x63beadae
  41b31b:	(bad)  
  41b31c:	mov    dh,0xfc
  41b31e:	fadd   DWORD PTR [ebx+0xc67a]
  41b324:	push   0xffffffbc
  41b326:	add    al,0x51
  41b328:	mov    edx,0x29e7f839
  41b32d:	aas    
  41b32e:	sti    
  41b32f:	cld    
  41b330:	mov    bl,0xc4
  41b332:	jae    0x41b365
  41b334:	mov    al,0x51
  41b336:	adc    al,0x89
  41b338:	add    dh,BYTE PTR ds:0x803372fb
  41b33e:	dec    eax
  41b33f:	clc    
  41b340:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b341:	(bad)  [esi]
  41b343:	jmp    0x41b326
  41b345:	push   ss
  41b346:	sbb    edi,esi
  41b348:	mov    bh,0xd
  41b34a:	imul   edi,ebp,0x83e2de06
  41b350:	std    
  41b351:	clc    
  41b352:	imul   eax,DWORD PTR [eax-0x478a228e],0xeaf1906b
  41b35c:	cld    
  41b35d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b35e:	jmp    0x6859:0x4423a7fd
  41b365:	pop    ds
  41b366:	cli    
  41b367:	add    ecx,DWORD PTR [ecx-0x50fb1669]
  41b36d:	push   es
  41b36e:	rol    DWORD PTR [edi-0x76336fbe],0xed
  41b375:	adc    eax,0x67374f6f
  41b37a:	jmp    0xc747a2af
  41b37f:	(bad)  
  41b380:	ins    BYTE PTR es:[edi],dx
  41b381:	ret    0x53f9
  41b384:	adc    dl,BYTE PTR [ebx+0x13c5]
  41b38a:	or     dl,BYTE PTR [ebx-0x6cfdec33]
  41b390:	lds    edx,FWORD PTR [ebx]
  41b392:	pop    es
  41b393:	mov    ds:0x1df3fd82,al
  41b398:	adc    eax,0x8e5dd489
  41b39d:	cld    
  41b39e:	popa   
  41b39f:	or     bl,BYTE PTR [edx+0x3]
  41b3a2:	das    
  41b3a3:	fidiv  WORD PTR [eax+ecx*1+0xb]
  41b3a7:	scas   al,BYTE PTR es:[edi]
  41b3a8:	rol    DWORD PTR [ecx],1
  41b3aa:	sub    eax,0x1dfce9de
  41b3af:	ss cmc 
  41b3b1:	inc    ebx
  41b3b2:	das    
  41b3b3:	adc    DWORD PTR [edx],esp
  41b3b5:	sbb    edi,ebp
  41b3b7:	sahf   
  41b3b8:	outs   dx,BYTE PTR ds:[esi]
  41b3b9:	out    0x5,eax
  41b3bb:	sbb    eax,0xf6483601
  41b3c0:	adc    ch,BYTE PTR [ecx+0x5103232c]
  41b3c6:	adc    ebx,DWORD PTR [esi+0x2e486900]
  41b3cc:	fld    TBYTE PTR [edx-0x2e8a21d4]
  41b3d2:	jecxz  0x41b42e
  41b3d4:	add    DWORD PTR [esi],esp
  41b3d6:	out    dx,al
  41b3d7:	fst    QWORD PTR [ebx-0x2]
  41b3da:	inc    ecx
  41b3db:	inc    edx
  41b3dc:	pop    gs
  41b3de:	sub    al,0x5e
  41b3e0:	sbb    DWORD PTR ds:[ecx-0x62],edi
  41b3e4:	add    cl,ch
  41b3e6:	fpatan 
  41b3e8:	call   0xfc5bff7a
  41b3ed:	ins    DWORD PTR es:[edi],dx
  41b3ee:	add    BYTE PTR [eax],al
  41b3f0:	ins    BYTE PTR es:[edi],dx
  41b3f1:	lea    edx,[ecx]
  41b3f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3f4:	xor    DWORD PTR [edx],esi
  41b3f6:	fld    TBYTE PTR [edx]
  41b3f8:	sub    ecx,DWORD PTR [esi+0x20332887]
  41b3fe:	push   es
  41b3ff:	cdq    
  41b400:	add    bl,BYTE PTR [esi+0x1b83e800]
  41b406:	push   ss
  41b407:	push   ebp
  41b408:	ds sahf 
  41b40a:	add    BYTE PTR [esi],bh
  41b40c:	mov    ch,0x9c
  41b40e:	and    al,0xed
  41b410:	scas   eax,DWORD PTR es:[edi]
  41b411:	stos   BYTE PTR es:[edi],al
  41b412:	add    al,0x8e
  41b414:	scas   eax,DWORD PTR es:[edi]
  41b415:	or     BYTE PTR [eax],0xe9
  41b418:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b419:	mov    ds:0xc270730c,al
  41b41e:	or     BYTE PTR [ecx+0x6a],ah
  41b421:	in     eax,0x87
  41b423:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b424:	out    dx,al
  41b425:	loopne 0x41b427
  41b427:	mov    edi,0x3fe907a7
  41b42c:	sub    al,0xde
  41b42e:	add    BYTE PTR [edi+0x68],bl
  41b431:	ret    0xe808
  41b434:	inc    eax
  41b435:	loopne 0x41b489
  41b437:	add    BYTE PTR [esi-0x68],bl
  41b43a:	inc    ebx
  41b43b:	jmp    FWORD PTR [ecx+0x66]
  41b43e:	(bad)  
  41b43f:	pop    esi
  41b440:	push   esp
  41b441:	loope  0x41b443
  41b443:	push   ebp
  41b444:	or     eax,0xceec7b09
  41b449:	fild   DWORD PTR [eax]
  41b44b:	add    BYTE PTR [ecx-0x1d],dl
  41b44e:	test   al,0x78
  41b450:	(bad)  
  41b451:	fadd   QWORD PTR [eax+0x3600003d]
  41b457:	cmp    eax,DWORD PTR [ecx+0x0]
  41b45a:	xchg   BYTE PTR [ecx-0x22d6c991],dh
  41b460:	fld    QWORD PTR [ebx+0x56]
  41b463:	mov    cl,0xfd
  41b465:	adc    eax,0x40eef2
  41b46a:	(bad)  
  41b46b:	(bad)  
  41b46c:	rcr    dh,1
  41b46e:	adc    eax,0x3c7500e2
  41b473:	add    al,0x26
  41b475:	jmp    FWORD PTR [ecx+0x14]
  41b478:	add    al,0xf2
  41b47b:	repnz lds eax,FWORD PTR ds:0x4134c2
  41b482:	cmp    ax,WORD PTR [bx+si]
  41b486:	rcr    ch,1
  41b488:	rcr    dh,1
  41b48a:	inc    ebp
  41b48b:	loop   0x41b488
  41b48d:	push   esi
  41b48e:	test   eax,0x5612aced
  41b493:	loop   0x41b41c
  41b495:	inc    ebp
  41b496:	stos   BYTE PTR es:[edi],al
  41b497:	mov    dl,0x87
  41b499:	test   DWORD PTR [esi+0x14],edi
  41b49c:	std    
  41b49d:	inc    DWORD PTR [esi-0x76]
  41b4a0:	add    al,0x20
  41b4a2:	(bad)  
  41b4a3:	fld    TBYTE PTR [eax-0x1]
  41b4a6:	dec    ecx
  41b4a7:	loop   0x41b4a9
  41b4a9:	push   ebx
  41b4ab:	jecxz  0x41b46a
  41b4ad:	je     0x41b486
  41b4af:	fild   DWORD PTR [eax]
  41b4b1:	mov    DWORD PTR [edi],ebp
  41b4b3:	xor    dh,ah
  41b4b5:	cld    
  41b4b6:	and    ah,BYTE PTR [ecx+0x4011]
  41b4bc:	das    
  41b4bd:	mov    al,ah
  41b4bf:	jae    0x41b4fd
  41b4c1:	jo     0x41b44c
  41b4c3:	xor    BYTE PTR [edi+0x5fcf7cf],0x5
  41b4ca:	push   eax
  41b4cb:	std    
  41b4cc:	cmp    dl,BYTE PTR [ebp+0x12]
  41b4cf:	inc    eax
  41b4d0:	das    
  41b4d1:	test   al,al
  41b4d3:	or     ebp,DWORD PTR [edx+esi*4-0x17870220]
  41b4da:	(bad)  
  41b4db:	pop    esp
  41b4dc:	sti    
  41b4dd:	xor    eax,DWORD PTR [ebx-0x8e8ac46]
  41b4e3:	cld    
  41b4e4:	add    BYTE PTR ds:[ecx+0x20bd59bf],dl
  41b4eb:	add    ah,BYTE PTR [edi+0x33e909c7]
  41b4f1:	aas    
  41b4f2:	inc    edx
  41b4f3:	or     ebp,DWORD PTR [esi]
  41b4f5:	jl     0x41b477
  41b4f7:	sar    DWORD PTR [ecx],cl
  41b4f9:	sub    bh,dh
  41b4fb:	out    0x84,eax
  41b4fd:	push   es
  41b4fe:	add    BYTE PTR [eax],al
  41b500:	lods   al,BYTE PTR ds:[esi]
  41b501:	sahf   
  41b502:	or     al,0x0
  41b504:	mov    bh,0xc6
  41b506:	or     BYTE PTR [ecx+0x458cfd72],cl
  41b50c:	sub    ecx,DWORD PTR [ecx+eax*8+0xedc6]
  41b513:	push   esi
  41b514:	mov    ah,0x75
  41b516:	mov    edi,0x44ecd0fe
  41b51b:	add    BYTE PTR [edi],al
  41b51d:	xchg   bh,bh
  41b51f:	inc    DWORD PTR [eax]
  41b521:	add    BYTE PTR [edi],ch
  41b523:	test   ebx,0xf7096180
  41b529:	jae    0x41b557
  41b52b:	aad    0x4
  41b52d:	shl    DWORD PTR [eax],0xde
  41b530:	fwait
  41b531:	inc    ecx
  41b532:	xor    al,0xa6
  41b534:	aad    0x8
  41b536:	ja     0x41b4ca
  41b538:	out    0x35,al
  41b53a:	out    dx,eax
  41b53b:	sbb    al,al
  41b53d:	add    eax,0xeed88458
  41b542:	sub    eax,0x154430cb
  41b547:	loopne 0x41b5a8
  41b549:	inc    ecx
  41b54a:	sub    esi,DWORD PTR [ecx+eax*2-0x15e96fb4]
  41b551:	push   ebp
  41b552:	clc    
  41b553:	lods   eax,DWORD PTR ds:[esi]
  41b554:	sbb    dl,BYTE PTR [eax]
  41b556:	dec    ebx
  41b557:	lock test eax,0x67253e03
  41b55d:	sti    
  41b55e:	jae    0x41b5c4
  41b560:	lods   al,BYTE PTR ds:[esi]
  41b561:	(bad)  
  41b562:	cmp    esi,DWORD PTR [ecx+0x2a]
  41b565:	(bad)  
  41b566:	scas   eax,DWORD PTR es:[edi]
  41b567:	xchg   edi,eax
  41b568:	loope  0x41b56d
  41b56a:	jecxz  0x41b54a
  41b56c:	mov    al,0x79
  41b56e:	aas    
  41b56f:	out    0x7d,eax
  41b571:	les    ebp,FWORD PTR [edi+0x16]
  41b574:	cmc    
  41b575:	jmp    0x41b594
  41b577:	sahf   
  41b578:	jmp    0x6527a807
  41b57d:	les    edi,FWORD PTR [ebx+edi*4-0x72d5abe6]
  41b584:	in     eax,0xf8
  41b586:	add    BYTE PTR [eax],al
  41b588:	cmp    eax,0x2f43dbe6
  41b58d:	pop    ebx
  41b58e:	stos   BYTE PTR es:[edi],al
  41b58f:	outs   dx,DWORD PTR ds:[esi]
  41b590:	sub    DWORD PTR [edi+0x24],esp
  41b593:	adc    al,0xbf
  41b595:	fbld   TBYTE PTR [esi-0x6d198507]
  41b59b:	lsl    ebp,sp
  41b59e:	sub    DWORD PTR [esi+ebp*4],eax
  41b5a1:	jl     0x41b594
  41b5a3:	add    ebx,DWORD PTR ds:0x6a8da71e
  41b5a9:	fiadd  DWORD PTR [eax]
  41b5ab:	push   0xffffffdb
  41b5ad:	adc    dh,BYTE PTR [ebp-0x29]
  41b5b0:	inc    edx
  41b5b1:	loopne 0x41b603
  41b5b3:	data16 cmp dl,ch
  41b5b6:	adc    ch,BYTE PTR [ecx-0x128cecd4]
  41b5bc:	mov    bh,0xf0
  41b5be:	xor    bh,dh
  41b5c0:	ins    BYTE PTR es:[edi],dx
  41b5c1:	fidivr WORD PTR [edi-0x49]
  41b5c4:	test   al,0x12
  41b5c6:	mov    BYTE PTR [edi-0x423e9ecc],ah
  41b5cc:	sub    ebp,DWORD PTR [esi-0xf7f2b05]
  41b5d2:	inc    eax
  41b5d3:	jmp    0xe94a318b
  41b5d8:	imul   esi,DWORD PTR [eax+0x9b20587],0x4d
  41b5df:	mov    bh,0xa3
  41b5e1:	add    eax,0x8b67e867
  41b5e6:	add    al,0xfe
  41b5e8:	xor    edx,ebp
  41b5ea:	adc    ch,BYTE PTR [ecx+0x612c0000]
  41b5f0:	shl    DWORD PTR [edi+edi*8+0x66],0x3
  41b5f5:	push   ebx
  41b5f6:	adc    ebp,DWORD PTR [ecx+0x4e]
  41b5f9:	leave  
  41b5fa:	frstor [esi-0x35]
  41b5fd:	(bad)  
  41b5fe:	(bad)  
  41b600:	test   DWORD PTR [ecx+0x327502b7],ebp
  41b606:	es lock int3 
  41b609:	aam    0x6c
  41b60b:	fidivr WORD PTR ds:0xde4ffa
  41b611:	xor    al,0x5e
  41b613:	xchg   BYTE PTR [eax],dl
  41b615:	into   
  41b616:	sub    al,0xde
  41b618:	lea    esp,[edi+edi*4]
  41b61b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b61c:	xchg   DWORD PTR [ebx+ebp*1],ebp
  41b61f:	mov    BYTE PTR [ecx],ah
  41b621:	sub    DWORD PTR [eax-0x1f],0x93d60000
  41b628:	mov    ebx,0x3f0ef675
  41b62d:	mov    ah,0xe6
  41b62f:	test   bh,bh
  41b631:	cmp    BYTE PTR [ebx],cl
  41b633:	outs   dx,DWORD PTR es:[esi]
  41b635:	and    BYTE PTR [eax-0x2c],ch
  41b638:	mov    ah,0x1
  41b63a:	ficomp DWORD PTR [eax-0x7f]
  41b63d:	jge    0x41b5dd
  41b63f:	loopne 0x41b6b5
  41b641:	mov    dl,0x61
  41b643:	test   BYTE PTR [eax+0x12bc8bff],bh
  41b649:	inc    eax
  41b64a:	xchg   esi,eax
  41b64b:	retf   0x5ec0
  41b64e:	dec    edi
  41b64f:	sbb    eax,DWORD PTR [eax]
  41b651:	add    BYTE PTR [eax],al
  41b653:	add    BYTE PTR [esi],dl
  41b655:	loopne 0x41b640
  41b657:	not    DWORD PTR [ecx-0x7c]
  41b65a:	int3   
  41b65b:	jmp    0x41b679
  41b65d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b65e:	mov    esp,ebp
  41b660:	pop    es
  41b661:	std    
  41b662:	jae    0x41b665
  41b664:	xchg   al,ah
  41b666:	xchg   DWORD PTR [ebp+0x32],eax
  41b669:	mov    cl,0x87
  41b66b:	test   esi,ebx
  41b66d:	push   ss
  41b66e:	std    
  41b66f:	push   DWORD PTR [esi+0x46200488]
  41b675:	loopne 0x41b6df
  41b677:	call   DWORD PTR [ecx-0x27]
  41b67a:	add    bh,bh
  41b67c:	fndisi(8087 only) 
  41b67e:	lds    eax,FWORD PTR [ebp+0x62]
  41b681:	(bad)  
  41b682:	sti    
  41b683:	inc    DWORD PTR [esi+0xb]
  41b686:	pmulhuw mm1,QWORD PTR [ebx]
  41b689:	mov    al,ds:0x8dd68500
  41b68e:	pop    es
  41b68f:	mov    ecx,DWORD PTR [ebx-0x3e0001d2]
  41b695:	add    bl,BYTE PTR [eax]
  41b697:	add    BYTE PTR [esi],dl
  41b699:	loopne 0x41b684
  41b69b:	add    ah,ah
  41b69d:	pop    ds
  41b69e:	ret    
  41b69f:	ret    0x12f
  41b6a2:	add    BYTE PTR ds:0x744d45b9,cl
  41b6a8:	xor    eax,0x1c0170cd
  41b6ad:	inc    ebp
  41b6ae:	shr    BYTE PTR [ecx+0x40],0xed
  41b6b2:	mov    edi,0xbfed2d69
  41b6b7:	inc    edi
  41b6b8:	add    BYTE PTR [eax],al
  41b6ba:	ja     0x41b6ed
  41b6bc:	pop    es
  41b6bd:	adc    edi,0xfd016c0a
  41b6c3:	les    edi,FWORD PTR [edi-0x4b37d251]
  41b6c9:	(bad)  
  41b6ca:	ins    DWORD PTR es:[edi],dx
  41b6cb:	or     al,0xae
  41b6cd:	aas    
  41b6ce:	xor    ecx,DWORD PTR [ebp+0x6c]
  41b6d1:	or     ah,bh
  41b6d3:	push   eax
  41b6d4:	push   DWORD PTR [eax]
  41b6d6:	outs   dx,DWORD PTR ds:[esi]
  41b6d7:	enter  0x1c66,0xe7
  41b6db:	(bad)  
  41b6dc:	data16 adc bh,ah
  41b6df:	mov    DWORD PTR [ebx],0x483d2fb5
  41b6e5:	je     0x41b70a
  41b6e7:	mov    ah,ch
  41b6e9:	adc    ah,bl
  41b6eb:	pop    es
  41b6ec:	das    
  41b6ed:	shr    BYTE PTR [edi+ebp*2+0x14],0x58
  41b6f2:	ins    BYTE PTR es:[edi],dx
  41b6f3:	pop    edi
  41b6f4:	adc    BYTE PTR [eax+0x6c],bl
  41b6f7:	push   0xffffff87
  41b6f9:	jmp    0x41b6d9
  41b6fb:	(bad)  
  41b6fc:	mov    ebp,0xf33476e7
  41b701:	cld    
  41b702:	fistp  WORD PTR [esi-0x34502fc]
  41b708:	mov    WORD PTR [edx+0x2b],es
  41b70b:	sbb    al,0x11
  41b70d:	push   eax
  41b70e:	cmp    ebp,eax
  41b710:	add    al,0x81
  41b712:	repz clc 
  41b714:	mov    BYTE PTR [edx+0x13],al
  41b717:	cmc    
  41b718:	repz jb 0x41b752
  41b71b:	fisub  WORD PTR [edx+0x2b00006d]
  41b721:	adc    esi,ebp
  41b723:	pop    es
  41b724:	and    DWORD PTR [esi-0x9271117],ebx
  41b72a:	test   eax,0xee1ff043
  41b72f:	add    edi,DWORD PTR [edi+eiz*2-0x72]
  41b733:	push   esp
  41b734:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b735:	sbb    eax,DWORD PTR [edx+0x6b12d392]
  41b73b:	push   ebx
  41b73c:	push   ebp
  41b73d:	fisub  WORD PTR [edx+0x70]
  41b740:	aaa    
  41b741:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41b743:	idiv   DWORD PTR [ebx+0x6f0db9e8]
  41b749:	fisub  WORD PTR [esi-0x41]
  41b74c:	xor    al,0x61
  41b74e:	lods   eax,DWORD PTR ds:[esi]
  41b74f:	div    eax
  41b751:	adc    dh,BYTE PTR [ebp-0x127465f5]
  41b757:	idiv   BYTE PTR ds:0x2f43d516
  41b75d:	or     eax,DWORD PTR [edx+0x1a]
  41b760:	outs   dx,DWORD PTR ds:[esi]
  41b761:	popf   
  41b762:	xor    cl,al
  41b764:	sub    al,0xde
  41b766:	adc    ch,BYTE PTR [edi+0x4b]
  41b769:	fimul  DWORD PTR [edx]
  41b76b:	jae    0x41b7a4
  41b76d:	adc    edi,DWORD PTR [edx-0x1]
  41b770:	arpl   ax,bp
  41b772:	in     eax,0xd
  41b774:	out    dx,eax
  41b775:	(bad)  
  41b777:	fidiv  DWORD PTR [edi]
  41b779:	push   ds
  41b77a:	stos   BYTE PTR es:[edi],al
  41b77b:	shr    DWORD PTR [esi+ebx*8],0x3c
  41b77f:	mov    DWORD PTR [esi+ebx*2-0x32],edx
  41b783:	xor    al,0x0
  41b785:	add    dh,bl
  41b787:	stos   DWORD PTR es:[edi],eax
  41b788:	cmp    cl,BYTE PTR [ecx-0x134d99bf]
  41b78e:	int3   
  41b78f:	adc    eax,ebx
  41b791:	cmc    
  41b792:	lods   al,BYTE PTR ds:[esi]
  41b793:	push   ds
  41b794:	ss cs test ebp,ecx
  41b798:	add    BYTE PTR [esi],dl
  41b79a:	add    ebp,DWORD PTR [edx]
  41b79c:	(bad)  
  41b79d:	scas   al,BYTE PTR es:[edi]
  41b79e:	add    bl,BYTE PTR [esi-0x3f]
  41b7a1:	sbb    eax,0xeab3e355
  41b7a6:	scas   eax,DWORD PTR es:[edi]
  41b7a7:	or     edi,edi
  41b7a9:	sbb    esi,eax
  41b7ab:	xchg   DWORD PTR [eax],edx
  41b7ad:	xor    esi,edx
  41b7af:	jecxz  0x41b7e0
  41b7b1:	mov    al,0xae
  41b7b3:	or     DWORD PTR [esi+ebp*8],edx
  41b7b6:	test   eax,0xda288e50
  41b7bb:	pop    esi
  41b7bc:	loope  0x41b78b
  41b7be:	pop    esp
  41b7bf:	scas   eax,DWORD PTR es:[edi]
  41b7c0:	sti    
  41b7c1:	ffreep st(0)
  41b7c3:	adc    dl,BYTE PTR [esi]
  41b7c5:	cmp    eax,0x6c009e28
  41b7ca:	jmp    0x41b759
  41b7cc:	bound  esp,QWORD PTR es:[eax+0x22]
  41b7d0:	push   ss
  41b7d1:	test   eax,0x82d4132c
  41b7d6:	pop    esi
  41b7d7:	mov    ebx,0x9ca5e900
  41b7dc:	cld    
  41b7dd:	repnz outs dx,DWORD PTR ds:[esi]
  41b7df:	lea    ecx,[edx]
  41b7e1:	adc    DWORD PTR [ebx+0x14],ebx
  41b7e4:	cld    
  41b7e5:	push   ds
  41b7e6:	or     BYTE PTR [esp+edi*8+0x20000016],0xc2
  41b7ee:	adc    ch,BYTE PTR [ecx-0x3d2becd4]
  41b7f4:	outs   dx,DWORD PTR ds:[esi]
  41b7f5:	mov    WORD PTR [esi],gs
  41b7f7:	adc    ah,BYTE PTR ds:0x902024e
  41b7fd:	or     BYTE PTR [esi+0x19],al
  41b800:	and    ecx,DWORD PTR [ebp-0x1a2e19ed]
  41b806:	lea    esp,[ebx+eiz*2]
  41b809:	mov    eax,ds:0x84272c87
  41b80e:	adc    cl,al
  41b810:	nop
  41b811:	fild   WORD PTR [eax]
  41b813:	add    BYTE PTR [esi],dl
  41b815:	nop
  41b816:	mov    ebx,0xd05f374
  41b81b:	sbb    DWORD PTR [ebx-0x2],0xfffffffb
  41b81f:	jae    0x41b7c0
  41b821:	or     DWORD PTR [edi-0x1c],ebp
  41b824:	leave  
  41b825:	fild   QWORD PTR [esi+edx*1]
  41b828:	inc    esi
  41b829:	fisubr DWORD PTR [esi]
  41b82b:	sar    BYTE PTR [ecx],0xa8
  41b82e:	pop    ecx
  41b82f:	leave  
  41b830:	xchg   esp,eax
  41b831:	in     al,0x0
  41b833:	push   esi
  41b834:	pop    ebp
  41b835:	or     eax,0x8b46c031
  41b83a:	pop    es
  41b83b:	add    DWORD PTR [ecx],esi
  41b83d:	fisttp DWORD PTR [edi-0x26a9440]
  41b843:	xor    DWORD PTR [ecx+0x10],0xffffff87
  41b847:	jg     0x41b80e
  41b849:	add    al,0xe8
  41b84b:	cld    
  41b84c:	pop    ecx
  41b84d:	or     al,BYTE PTR [eax-0x7dffff40]
  41b853:	cwde   
  41b854:	call   0xfd4ba37c
  41b859:	test   BYTE PTR [esi-0x7f],al
  41b85c:	inc    ecx
  41b85d:	movups xmm6,xmm3
  41b860:	cmp    eax,0x69ff7f94
  41b866:	xchg   BYTE PTR [ecx+ebp*8-0x7edcaaf2],dh
  41b86d:	clc    
  41b86e:	jno    0x41b849
  41b870:	pop    ecx
  41b872:	or     ebx,DWORD PTR [ebp+edi*8+0x50e93683]
  41b879:	push   ebx
  41b87a:	pop    ecx
  41b87b:	add    DWORD PTR [edi+edi*8],0x4012bc73
  41b882:	push   esi
  41b883:	(bad)  
  41b884:	mov    ebx,0x7e5a2f75
  41b889:	or     eax,0x6a0d9547
  41b88e:	das    
  41b88f:	adc    ebp,edi
  41b891:	jne    0x41b8c6
  41b893:	and    BYTE PTR [edx],bl
  41b895:	cmp    BYTE PTR [ecx],bh
  41b897:	lds    eax,FWORD PTR [ebx+eax*4]
  41b89a:	out    dx,eax
  41b89b:	retf   0xb008
  41b89e:	cs sbb al,0x17
  41b8a1:	std    
  41b8a2:	and    dh,BYTE PTR [ecx+0x1a]
  41b8a5:	inc    eax
  41b8a6:	das    
  41b8a7:	mov    esp,gs
  41b8a9:	out    0x29,eax
  41b8ab:	jb     0x41b89d
  41b8ad:	cld    
  41b8ae:	pop    eax
  41b8af:	push   0xc5412c1a
  41b8b4:	add    al,0x32
  41b8b6:	add    BYTE PTR [eax],al
  41b8b8:	out    dx,eax
  41b8b9:	mov    eax,0x8c82c14e
  41b8be:	loopne 0x41b93e
  41b8c0:	ret    
  41b8c1:	mov    ch,0x4
  41b8c3:	add    BYTE PTR [edi],ch
  41b8c5:	hlt    
  41b8c6:	pop    edx
  41b8c7:	jle    0x41b87b
  41b8c9:	xor    BYTE PTR [esi-0x3],0xb8
  41b8cd:	mov    al,0x5a
  41b8cf:	add    BYTE PTR [edi-0x63],bl
  41b8d2:	sbb    esi,0x427b052e
  41b8d8:	aaa    
  41b8d9:	mov    eax,DWORD PTR [esp+ecx*1-0x54]
  41b8dd:	mov    ecx,0xca60e800
  41b8e2:	out    dx,eax
  41b8e3:	cld    
  41b8e4:	adc    DWORD PTR [esi-0x77],edi
  41b8e7:	jae    0x41b869
  41b8e9:	mov    eax,0x181f67ef
  41b8ee:	add    BYTE PTR [eax],al
  41b8f0:	mov    bh,0x35
  41b8f2:	jns    0x41b8f4
  41b8f4:	das    
  41b8f5:	fld    QWORD PTR [esi+0x20]
  41b8f8:	pusha  
  41b8f9:	fadd   DWORD PTR [ebx+0x7d056362]
  41b8ff:	inc    edx
  41b900:	push   edi
  41b901:	pop    edi
  41b902:	jnp    0x41b946
  41b904:	inc    edi
  41b905:	push   edi
  41b906:	lds    edi,FWORD PTR [edi+0x7d4bde37]
  41b90c:	lods   eax,DWORD PTR ds:[esi]
  41b90d:	mov    dl,bl
  41b90f:	repnz xor esp,DWORD PTR [ebx+0x2d]
  41b913:	cld    
  41b914:	mov    ch,0x70
  41b916:	push   esi
  41b917:	repz and ecx,DWORD PTR [edi]
  41b91a:	ror    BYTE PTR ds:0xf1a0000,cl
  41b920:	mov    ebx,0xfc88d087
  41b925:	repnz sbb eax,0x2f43d522
  41b92b:	shr    DWORD PTR [ecx],1
  41b92d:	sub    ebp,DWORD PTR [edi]
  41b92f:	ficom  WORD PTR [eiz*1-0x7b6e670e]
  41b936:	gs push ss
  41b938:	fidivr DWORD PTR [eax+0x2f]
  41b93b:	fdivp  st(3),st
  41b93d:	or     dh,dl
  41b93f:	cwde   
  41b940:	adc    DWORD PTR [ebx],0xf2e9de0a
  41b946:	ins    DWORD PTR es:[edi],dx
  41b947:	or     dh,BYTE PTR [edx]
  41b949:	and    esi,DWORD PTR [ecx-0x22]
  41b94c:	jmp    0x55dab9ba
  41b951:	jne    0x41b8d3
  41b953:	retf   
  41b954:	sub    DWORD PTR [esi+0x70],ecx
  41b957:	sbb    esp,esi
  41b959:	add    ebx,edi
  41b95b:	fmul   QWORD PTR [esi-0x6]
  41b95e:	std    
  41b95f:	bound  ecx,QWORD PTR [esi+0x54]
  41b962:	cli    
  41b963:	bound  ebp,QWORD PTR [ecx]
  41b965:	(bad)  
  41b967:	adc    BYTE PTR [ebx],ch
  41b969:	repnz test eax,0xed7e2598
  41b96f:	in     eax,0x12
  41b971:	retf   
  41b972:	pop    ss
  41b973:	push   ds
  41b974:	gs pop eax
  41b976:	imul   edi,DWORD PTR [edx-0x779dacd9],0xfffffff1
  41b97d:	repnz leave 
  41b97f:	fsqrt  
  41b981:	pop    ss
  41b982:	add    BYTE PTR [eax],al
  41b984:	adc    ebp,eax
  41b986:	add    BYTE PTR [ecx+0x6af9652c],ch
  41b98c:	cmp    eax,0xd90a7511
  41b991:	frstor [esi-0x17]
  41b994:	xlat   BYTE PTR ds:[ebx]
  41b995:	adc    BYTE PTR [esi],dl
  41b997:	loope  0x41b9df
  41b999:	sahf   
  41b99a:	add    BYTE PTR [edi],dh
  41b99c:	xor    edx,0xb70e7e8
  41b9a2:	cld    
  41b9a3:	fs jmp 0x41b937
  41b9a6:	adc    BYTE PTR [esi],bl
  41b9a8:	mov    bh,ch
  41b9aa:	call   0xfc4ccb21
  41b9af:	jb     0x41b9b4
  41b9b1:	test   DWORD PTR [edx],0x43f6ecda
  41b9b7:	(bad)  
  41b9b9:	scas   al,BYTE PTR es:[edi]
  41b9ba:	test   DWORD PTR [edi-0x35991199],edx
  41b9c0:	jg     0x41b9b8
  41b9c2:	mov    ebx,0x850ade82
  41b9c7:	test   eax,0xa787f547
  41b9cc:	loop   0x41b989
  41b9ce:	data16 icebp 
  41b9d0:	imul   edi,DWORD PTR [eax-0x2],0xffffffb5
  41b9d4:	mov    edi,0xecff14f0
  41b9d9:	fst    QWORD PTR [ebx+0x4e]
  41b9dc:	cmp    dh,cl
  41b9de:	adc    ch,BYTE PTR [ecx+0x3e10f72c]
  41b9e4:	cmp    BYTE PTR [edx],bl
  41b9e6:	push   ss
  41b9e7:	test   eax,0x572c0000
  41b9ec:	fldenv [edx+0x35]
  41b9ef:	js     0x41b9f2
  41b9f1:	jb     0x41ba60
  41b9f3:	or     dl,BYTE PTR [ecx]
  41b9f5:	mov    edx,0xff2cf07f
  41b9fa:	in     al,dx
  41b9fb:	(bad)  [edi]
  41b9fd:	sub    edx,esi
  41b9ff:	stos   DWORD PTR es:[edi],eax
  41ba00:	pop    ebx
  41ba01:	add    BYTE PTR [edi],bl
  41ba03:	and    al,0x0
  41ba05:	add    BYTE PTR [ecx+eiz*8+0xd7a74fd],bh
  41ba0c:	std    
  41ba0d:	je     0x41ba79
  41ba0f:	or     eax,0xe4a71fd
  41ba14:	nop    DWORD PTR [eax]
  41ba17:	mov    eax,ds:0xe10ec200
  41ba1c:	dec    edi
  41ba1d:	mov    esp,edx
  41ba1f:	popa   
  41ba20:	call   0x55e9ef51
  41ba25:	mov    ebp,esi
  41ba27:	mov    edx,ebp
  41ba29:	mov    ebx,DWORD PTR [ecx+ebp*1-0x59f774b4]
  41ba30:	push   ecx
  41ba31:	mov    eax,eax
  41ba33:	or     eax,0x218b044c
  41ba38:	jle    0x41ba40
  41ba3a:	aad    0x18
  41ba3c:	sub    eax,edi
  41ba3e:	lods   eax,DWORD PTR ds:[esi]
  41ba3f:	mov    ebx,0xf3b14874
  41ba44:	int3   
  41ba45:	adc    eax,0x3337e206
  41ba4a:	stc    
  41ba4b:	loopne 0x41ba4d
  41ba4d:	jne    0x41ba4f
  41ba4f:	add    BYTE PTR [eax],cl
  41ba51:	stos   BYTE PTR es:[edi],al
  41ba52:	xor    BYTE PTR [ebp-0x3a],dh
  41ba55:	loopne 0x41b9de
  41ba57:	inc    ebp
  41ba58:	cli    
  41ba59:	mov    al,0x89
  41ba5b:	inc    ebp
  41ba5c:	mov    gs,WORD PTR [edx-0x205c17e5]
  41ba62:	add    BYTE PTR [eax],al
  41ba64:	or     esp,DWORD PTR [ecx]
  41ba66:	outs   dx,DWORD PTR ds:[esi]
  41ba67:	das    
  41ba68:	pop    eax
  41ba69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba6a:	aam    0x20
  41ba6c:	retf   0x33e3
  41ba6f:	inc    ebp
  41ba70:	inc    edx
  41ba71:	xchg   esp,eax
  41ba72:	sub    dh,dh
  41ba74:	retf   
  41ba75:	xor    al,0xfb
  41ba77:	jae    0x41ba01
  41ba79:	popa   
  41ba7a:	ja     0x41ba54
  41ba7c:	das    
  41ba7d:	div    DWORD PTR [edx+0x1f]
  41ba80:	stos   BYTE PTR es:[edi],al
  41ba81:	(bad)  [eax-0x54]
  41ba84:	lahf   
  41ba85:	cmc    
  41ba86:	push   eax
  41ba87:	pop    esi
  41ba88:	hlt    
  41ba89:	int    0xc5
  41ba8b:	add    ebp,DWORD PTR [edi]
  41ba8d:	pop    edi
  41ba8e:	jae    0x41bab5
  41ba90:	das    
  41ba91:	div    eax
  41ba93:	adc    cl,BYTE PTR [ebx]
  41ba95:	or     eax,0x36fd0040
  41ba9a:	fsubr  st,st(1)
  41ba9c:	sub    BYTE PTR [ebx+0x1d1ee8e0],ch
  41baa2:	jp     0x41ba7c
  41baa4:	add    al,0x32
  41baa6:	pop    edx
  41baa7:	mov    DWORD PTR [ebx],eax
  41baa9:	out    0x77,eax
  41baab:	mov    esi,0xfcec0a17
  41bab0:	add    BYTE PTR [edi+0x49],bh
  41bab3:	cld    
  41bab4:	add    BYTE PTR [eax],al
  41bab6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bab7:	mov    edx,0xe0d7f4fc
  41babc:	les    ecx,FWORD PTR [edx-0x3ddf8e7e]
  41bac2:	jg     0x41bb20
  41bac4:	jp     0x41bace
  41bac6:	inc    ebp
  41bac7:	cmc    
  41bac8:	jmp    0xc80c:0x798c3f72
  41bacf:	push   es
  41bad0:	add    al,0xfd
  41bad2:	sbb    dh,ch
  41bad4:	adc    eax,0xbece2f40
  41bad9:	or     ebp,DWORD PTR [edi]
  41badb:	das    
  41badc:	add    ch,bh
  41bade:	and    ebx,ecx
  41bae0:	add    ch,bh
  41bae2:	sbb    esp,ecx
  41bae4:	add    ch,bh
  41bae6:	push   ds
  41bae7:	stc    
  41bae8:	jmp    0x6d00:0x40335b12
  41baef:	std    
  41baf0:	call   DWORD PTR [edx-0x4c]
  41baf3:	leave  
  41baf4:	jg     0x41bae1
  41baf6:	dec    ebx
  41baf7:	fidiv  WORD PTR [esi+0x2256da55]
  41bafd:	jnp    0x41bb58
  41baff:	push   edi
  41bb00:	xor    bl,bl
  41bb02:	hlt    
  41bb03:	push   esi
  41bb04:	hlt    
  41bb05:	stos   DWORD PTR es:[edi],eax
  41bb06:	pop    eax
  41bb07:	jecxz  0x41baf2
  41bb09:	add    edx,DWORD PTR [esi]
  41bb0b:	push   es
  41bb0c:	jmp    0x41bb4b
  41bb0e:	jb     0x41babe
  41bb10:	xchg   esi,eax
  41bb11:	jp     0x41bb85
  41bb13:	or     ebx,DWORD PTR [eax+0x641eadff]
  41bb19:	push   es
  41bb1a:	add    BYTE PTR [eax],al
  41bb1c:	cs paddsb mm2,QWORD PTR es:[edi]
  41bb21:	mov    ebx,0xf1222a5d
  41bb26:	popf   
  41bb27:	sbb    BYTE PTR [edi-0x22],ch
  41bb2a:	add    al,0x33
  41bb2c:	dec    edx
  41bb2d:	fsubp  st(1),st
  41bb2f:	js     0x41bb85
  41bb31:	or     edi,DWORD PTR ds:0x95a0b5fc
  41bb37:	push   ebx
  41bb38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb39:	mov    al,ds:0xf62d59f5
  41bb3e:	xor    al,0x4
  41bb40:	das    
  41bb41:	fisubr WORD PTR [ebx+eax*8+0x5d]
  41bb45:	out    0x93,al
  41bb47:	dec    eax
  41bb48:	add    esp,eax
  41bb4a:	std    
  41bb4b:	or     BYTE PTR [eax],bl
  41bb4d:	mov    eax,ds:0x6138789d
  41bb52:	jae    0x41bbc2
  41bb54:	jg     0x41bba3
  41bb56:	jmp    0x30e914a9
  41bb5b:	shr    DWORD PTR [eax],0xde
  41bb5e:	pop    ss
  41bb5f:	les    edx,FWORD PTR [edi-0x7c87acf0]
  41bb65:	or     dh,ch
  41bb67:	pop    ds
  41bb68:	inc    ecx
  41bb69:	sahf   
  41bb6a:	jmp    0x29983d49
  41bb6f:	fild   DWORD PTR [edx]
  41bb71:	pop    es
  41bb72:	add    DWORD PTR [esi],esi
  41bb74:	xchg   ecx,eax
  41bb75:	call   0xe966:0xd650b5fb
  41bb7c:	or     DWORD PTR [esi+0x124],0xf1248e58
  41bb86:	push   ecx
  41bb87:	jnp    0x41bb8d
  41bb89:	push   cs
  41bb8a:	aaa    
  41bb8b:	sahf   
  41bb8c:	adc    ch,BYTE PTR [ecx+0x6ac9cd2c]
  41bb92:	push   esp
  41bb93:	or     DWORD PTR [esp+ebx*2],ecx
  41bb96:	ins    BYTE PTR es:[edi],dx
  41bb97:	sbb    al,0xd
  41bb99:	jmp    0x6b2f1075
  41bb9e:	dec    edi
  41bb9f:	(bad)  
  41bba0:	jg     0x41bbe6
  41bba2:	pop    ds
  41bba3:	or     cl,BYTE PTR [edi+0x3e]
  41bba6:	adc    cl,BYTE PTR [ebp-0x29b79df8]
  41bbac:	adc    ch,BYTE PTR [ecx]
  41bbae:	sub    ecx,DWORD PTR [ebx]
  41bbb0:	jae    0x41bba3
  41bbb2:	xchg   DWORD PTR [ecx],esi
  41bbb4:	cld    
  41bbb5:	aas    
  41bbb6:	aaa    
  41bbb7:	or     edx,esp
  41bbb9:	repz lea ecx,fs:[eax]
  41bbbd:	push   0xffffffb6
  41bbbf:	or     ch,dl
  41bbc1:	jo     0x41bbf6
  41bbc3:	fiadd  WORD PTR [eax]
  41bbc5:	bound  esp,QWORD PTR [ecx]
  41bbc7:	(bad)  
  41bbc8:	mov    al,0xe8
  41bbca:	push   ebp
  41bbcb:	xchg   esp,eax
  41bbcc:	hlt    
  41bbcd:	ins    BYTE PTR es:[edi],dx
  41bbce:	out    0x8d,al
  41bbd0:	add    eax,0xfb067870
  41bbd5:	test   eax,0x60c153c2
  41bbda:	jo     0x41bbb2
  41bbdc:	sti    
  41bbdd:	fcomp  QWORD PTR [edx*2-0x21faaaba]
  41bbe4:	push   eax
  41bbe5:	push   esi
  41bbe6:	add    BYTE PTR [eax],al
  41bbe8:	sbb    dh,dl
  41bbea:	sti    
  41bbeb:	hlt    
  41bbec:	cmp    al,0xd9
  41bbee:	inc    eax
  41bbef:	add    BYTE PTR [esi+0x4d85d386],al
  41bbf5:	xchg   ecx,eax
  41bbf6:	sbb    al,0xff
  41bbf8:	ret    
  41bbf9:	or     DWORD PTR [ecx-0x69d113a],ecx
  41bbff:	dec    DWORD PTR [ecx+0x56]
  41bc02:	mov    esp,0x3e865f74
  41bc07:	or     al,0x7f
  41bc09:	aad    0x74
  41bc0b:	shr    DWORD PTR ds:0x29cb81bc,cl
  41bc11:	daa    
  41bc12:	pop    ss
  41bc13:	sub    DWORD PTR ds:0x11096fdd,0xffffffa1
  41bc1a:	cld    
  41bc1b:	jecxz  0x41bc62
  41bc1d:	fld    QWORD PTR [eax]
  41bc1f:	jmp    0x41bc5a
  41bc21:	pop    esp
  41bc22:	stc    
  41bc23:	add    dl,BYTE PTR [edi]
  41bc25:	fld    QWORD PTR [eax]
  41bc27:	jne    0x41bc3a
  41bc29:	and    bh,BYTE PTR [edi]
  41bc2b:	cld    
  41bc2c:	cmp    al,bl
  41bc2e:	add    BYTE PTR [eax],al
  41bc30:	jmp    0x4140ccc7
  41bc35:	or     bh,ch
  41bc37:	jbe    0x41bc4b
  41bc39:	cli    
  41bc3a:	aam    0x85
  41bc3c:	(bad)  
  41bc3d:	nop
  41bc3e:	add    DWORD PTR [ebx+0x7d80f9bd],eax
  41bc44:	retf   0x74dc
  41bc47:	or     DWORD PTR [ecx+0xfffc8f],edi
  41bc4d:	add    bl,ah
  41bc4f:	call   0x9a07fc66
  41bc54:	mov    ebx,eax
  41bc56:	or     eax,0xd60cc245
  41bc5b:	scas   eax,DWORD PTR es:[edi]
  41bc5c:	mov    esp,ebp
  41bc5e:	inc    ebp
  41bc5f:	sub    DWORD PTR [eax],ecx
  41bc61:	xor    eax,DWORD PTR [esi]
  41bc63:	lods   eax,DWORD PTR ds:[esi]
  41bc64:	push   eax
  41bc65:	(bad)  
  41bc66:	fild   DWORD PTR [ebx+ecx*2]
  41bc69:	push   eax
  41bc6a:	das    
  41bc6b:	inc    edi
  41bc6c:	pop    edx
  41bc6d:	or     al,0xaa
  41bc6f:	inc    ecx
  41bc70:	hlt    
  41bc71:	dec    edi
  41bc72:	pop    es
  41bc73:	sti    
  41bc74:	(bad)  
  41bc75:	jmp    DWORD PTR [edi+0x680872c7]
  41bc7b:	cmp    esp,esi
  41bc7d:	(bad)  
  41bc7e:	js     0x41bc76
  41bc80:	inc    esp
  41bc82:	jmp    0xc4f7:0x2f250fbe
  41bc89:	inc    edx
  41bc8a:	arpl   WORD PTR [esi+0x10],di
  41bc8d:	add    BYTE PTR [edi],ch
  41bc8f:	fcom   DWORD PTR [edx]
  41bc91:	cld    
  41bc92:	cmp    dh,BYTE PTR [edi]
  41bc94:	add    ch,dh
  41bc96:	addr16 sti 
  41bc98:	mov    edi,0x3b4763f
  41bc9d:	add    dl,ah
  41bc9f:	jnp    0x41bc7c
  41bca1:	dec    esi
  41bca2:	(bad)  
  41bca5:	sar    BYTE PTR [edx+0x6f4ee8ba],0xc5
  41bcac:	pop    edx
  41bcad:	push   es
  41bcae:	sbb    BYTE PTR [ebx+0x86fc],dh
  41bcb4:	push   0x21
  41bcb6:	call   0x4070dbcd
  41bcbb:	add    al,bh
  41bcbd:	ins    DWORD PTR es:[edi],dx
  41bcbe:	or     al,0xc0
  41bcc0:	outs   dx,DWORD PTR ds:[esi]
  41bcc1:	ds ret 
  41bcc3:	add    ebp,DWORD PTR [edi]
  41bcc5:	les    edx,FWORD PTR [ecx+0x31]
  41bcc8:	add    al,0xd0
  41bcca:	inc    ebx
  41bccb:	and    BYTE PTR [edx],0x45
  41bcce:	mov    DWORD PTR [eax+0x2f],0x1a734ef5
  41bcd5:	lahf   
  41bcd6:	add    al,0xdd
  41bcd8:	ins    BYTE PTR es:[edi],dx
  41bcd9:	cmc    
  41bcda:	push   ecx
  41bcdb:	std    
  41bcdc:	sbb    bl,BYTE PTR [ecx+0x752f4012]
  41bce2:	sub    eax,edx
  41bce4:	rcr    esi,1
  41bce6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bce7:	add    ebp,DWORD PTR [edi]
  41bce9:	xchg   ecx,eax
  41bcea:	add    ah,bl
  41bcec:	xchg   esi,eax
  41bced:	adc    BYTE PTR [ebx-0x15],dl
  41bcf0:	lods   al,BYTE PTR ds:[esi]
  41bcf1:	push   ds
  41bcf2:	(bad)  
  41bcf3:	adc    ebp,DWORD PTR [edx-0x1f]
  41bcf6:	sbb    eax,0xb9ddefca
  41bcfb:	jle    0x41bd3e
  41bcfd:	fisub  WORD PTR [ecx+0x9]
  41bd00:	pop    edi
  41bd01:	sub    BYTE PTR [edi-0x2f926fd],ah
  41bd07:	xchg   edi,eax
  41bd08:	ds sahf 
  41bd0a:	jmp    0xfe03a98c
  41bd0f:	fist   DWORD PTR [ebp+eax*1-0x2e5814f5]
  41bd16:	int    0x11
  41bd18:	add    BYTE PTR [eax],al
  41bd1a:	out    dx,eax
  41bd1b:	fisttp QWORD PTR [edi-0x68f949ff]
  41bd21:	push   edx
  41bd22:	cmp    dh,BYTE PTR [eax]
  41bd24:	adc    BYTE PTR [eax*8+0x107f3adb],0x7
  41bd2c:	mov    ah,0x7e
  41bd2e:	sbb    BYTE PTR [ebx-0x2b],bl
  41bd31:	jmp    0x9113:0xea66e19c
  41bd38:	out    0x35,eax
  41bd3a:	out    0x52,al
  41bd3c:	cmc    
  41bd3d:	xor    ebx,DWORD PTR [ecx]
  41bd3f:	sahf   
  41bd40:	jmp    0x1371b795
  41bd45:	jmp    0x41bd21
  41bd47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd48:	inc    ebx
  41bd49:	dec    ecx
  41bd4a:	mov    ch,0x1a
  41bd4c:	aas    
  41bd4d:	(bad)  
  41bd4e:	sub    al,0xde
  41bd50:	cmp    al,0x7f
  41bd52:	les    ebx,FWORD PTR [edx+0x7e]
  41bd55:	movd   ebx,mm1
  41bd58:	sahf   
  41bd59:	push   ecx
  41bd5a:	pop    es
  41bd5b:	jmp    0xdeb186f9
  41bd60:	add    ah,bh
  41bd62:	inc    DWORD PTR [edi+0x1]
  41bd65:	mov    gs,WORD PTR [ecx-0x22]
  41bd68:	push   edx
  41bd69:	data16 aas 
  41bd6b:	inc    edx
  41bd6c:	pop    gs
  41bd6e:	sub    al,0xc6
  41bd70:	sbb    eax,0x9d6639
  41bd75:	aam    0x22
  41bd77:	mul    BYTE PTR [ecx+0x3f]
  41bd7a:	xchg   ebp,eax
  41bd7b:	or     DWORD PTR [ebp+0x10000029],eax
  41bd81:	xlat   BYTE PTR ds:[ebx]
  41bd82:	ret    
  41bd83:	in     al,dx
  41bd84:	push   0xfce94028
  41bd89:	push   esp
  41bd8a:	inc    edx
  41bd8b:	jmp    0x401298fe
  41bd90:	jmp    0x4600bf72
  41bd95:	jmp    0x41bd43
  41bd97:	sti    
  41bd98:	in     al,dx
  41bd99:	fld    QWORD PTR [esi+0x66ad44ac]
  41bd9f:	jmp    0x41be05
  41bda1:	mov    dh,0xf9
  41bda3:	test   BYTE PTR [esi-0x6a],0xfb
  41bda7:	aam    0x10
  41bda9:	lock inc eax
  41bdab:	jmp    0x6b3a5e55
  41bdb0:	adc    eax,DWORD PTR [ebx]
  41bdb2:	jbe    0x41bda1
  41bdb4:	arpl   WORD PTR [esi],bx
  41bdb6:	call   0xfd12500c
  41bdbb:	fsubr  QWORD PTR [esi+ebx*8+0x53]
  41bdbf:	sbb    bl,BYTE PTR [edx+0x59]
  41bdc2:	dec    esi
  41bdc3:	mov    ch,0x5c
  41bdc5:	scas   eax,DWORD PTR es:[edi]
  41bdc6:	lea    ebx,[edi+edx*8]
  41bdc9:	xchg   esp,eax
  41bdca:	dec    edi
  41bdcb:	cmp    dl,BYTE PTR [esi+0x24e900eb]
  41bdd1:	stos   DWORD PTR es:[edi],eax
  41bdd2:	push   eax
  41bdd3:	pusha  
  41bdd4:	jo     0x41bdac
  41bdd6:	mov    DWORD PTR [edi+eax*8],ebp
  41bdd9:	add    dl,bl
  41bddb:	add    BYTE PTR [ebp-0xe],dl
  41bdde:	cld    
  41bddf:	jne    0x41bdf6
  41bde1:	test   DWORD PTR [esi],0xdb0000cc
  41bde7:	mov    eax,ds:0xbee03d00
  41bdec:	add    BYTE PTR [eax],al
  41bdee:	mov    ecx,edi
  41bdf0:	mov    DWORD PTR [ebp+0x2],eax
  41bdf3:	mov    bl,0xc1
  41bdf5:	je     0x41be29
  41bdf7:	and    cl,bl
  41bdf9:	aas    
  41bdfa:	loope  0x41bdf2
  41bdfc:	add    BYTE PTR [ebp+0x7e],0xb2
  41be00:	shl    DWORD PTR [ebp+esi*1-0x55],0x51
  41be05:	(bad)  
  41be06:	retf   
  41be07:	std    
  41be08:	dec    ebx
  41be09:	(bad)  
  41be0a:	mov    ebx,0x5e75fcfd
  41be0f:	stos   BYTE PTR es:[edi],al
  41be10:	push   ecx
  41be11:	push   edi
  41be12:	inc    ecx
  41be13:	jne    0x41be0d
  41be15:	call   FWORD PTR [eax]
  41be17:	test   DWORD PTR [ebx+0x6ef64d74],edi
  41be1d:	or     BYTE PTR [esi],bl
  41be1f:	sbb    eax,0x8841ff3d
  41be24:	push   esi
  41be25:	or     BYTE PTR [ecx+0x74],al
  41be28:	clc    
  41be29:	call   FWORD PTR [ebx-0x2f]
  41be2c:	adc    al,BYTE PTR [eax+0x16]
  41be2f:	cmp    BYTE PTR [esi],0x8
  41be32:	popa   
  41be33:	cwde   
  41be34:	pop    ecx
  41be35:	leave  
  41be36:	les    eax,FWORD PTR [esp+edi*8]
  41be39:	push   esp
  41be3a:	lea    ebp,ds:0xaa02ec81
  41be40:	push   edx
  41be41:	push   edi
  41be42:	add    al,0x21
  41be44:	in     al,0x8f
  41be46:	mov    esi,0x83fcf5
  41be4b:	add    BYTE PTR [ebx-0xe],ch
  41be4e:	sti    
  41be4f:	mov    ch,dh
  41be51:	sbb    eax,0x8d6f43f
  41be56:	cld    
  41be57:	jmp    FWORD PTR [edi]
  41be59:	xor    eax,0x542ffd3b
  41be5e:	imul   esi,esp,0xffffffba
  41be61:	add    eax,ebp
  41be63:	out    0x21,eax
  41be65:	inc    esp
  41be66:	jmp    0xe84b6367
  41be6b:	sub    edi,0xa
  41be6e:	es mov esi,edx
  41be71:	mov    ds:0xf715554f,al
  41be76:	pop    ebp
  41be77:	cs cld 
  41be79:	stos   DWORD PTR es:[edi],eax
  41be7a:	or     ch,ah
  41be7c:	aas    
  41be7d:	aaa    
  41be7e:	add    BYTE PTR [ecx+0x6ce9777f],cl
  41be84:	cli    
  41be85:	hlt    
  41be86:	jmp    0x62b836cd
  41be8b:	std    
  41be8c:	sub    al,0x49
  41be8e:	mov    edx,0xf87130e8
  41be93:	pop    ebp
  41be94:	stos   BYTE PTR es:[edi],al
  41be95:	in     al,dx
  41be96:	imul   ecx,DWORD PTR [eax],0x0
  41be99:	fistp  WORD PTR [edx+0x3d]
  41be9c:	push   eax
  41be9d:	shl    DWORD PTR [edi*8+0x240adbe1],cl
  41bea4:	sbb    eax,0x70890037
  41bea9:	imul   ecx,DWORD PTR [edx+0x59],0x66
  41bead:	mov    bh,0x4a
  41beaf:	mov    DWORD PTR [eax],eax
  41beb1:	add    BYTE PTR [ebx],bl
  41beb3:	mov    DWORD PTR [edx+edi*1+0x4043ff],0x562ca22f
  41bebe:	shl    ebp,1
  41bec0:	ret    0x2f40
  41bec3:	jecxz  0x41bea8
  41bec5:	adc    cl,bl
  41bec7:	daa    
  41bec8:	inc    eax
  41bec9:	add    BYTE PTR [edi+0x6cddd00a],ch
  41becf:	cmc    
  41bed0:	push   DWORD PTR [edx+0x45]
  41bed3:	ficom  WORD PTR [ecx-0x64fc2209]
  41bed9:	sbb    BYTE PTR [eax+0x2dbef88a],0x2a
  41bee0:	lods   al,BYTE PTR ds:[esi]
  41bee1:	inc    ebx
  41bee2:	das    
  41bee3:	mov    gs,WORD PTR [esi+0x45]
  41bee6:	das    
  41bee7:	sbb    al,0xe5
  41bee9:	rcr    edx,cl
  41beeb:	lahf   
  41beec:	jmp    0xd54517f5
  41bef1:	xchg   edi,eax
  41bef2:	ds sahf 
  41bef4:	jmp    0x5ddb733e
  41bef9:	push   esp
  41befa:	call   0xbfd5:0xed7ae589
  41bf01:	add    esi,DWORD PTR [edx-0x67]
  41bf04:	inc    ebp
  41bf05:	xor    al,0x2f
  41bf07:	fsubp  st(1),st
  41bf09:	(bad)  [edi]
  41bf0b:	push   es
  41bf0c:	xor    esp,edi
  41bf0e:	loopne 0x41bf12
  41bf10:	mov    ch,0xfb
  41bf12:	imul   ebp,ecx,0x9
  41bf15:	adc    DWORD PTR [eax],eax
  41bf17:	add    bh,ch
  41bf19:	frstor [esp+eax*8-0x24]
  41bf1d:	out    dx,eax
  41bf1e:	sbb    DWORD PTR [edi-0x19166228],0x1102d1bd
  41bf28:	dec    ebx
  41bf29:	lock test eax,0xff1dfd03
  41bf2f:	add    DWORD PTR [edi-0x23],edi
  41bf32:	and    dl,al
  41bf34:	xor    dh,bl
  41bf36:	cmp    al,0x7b
  41bf38:	adc    al,0x5f
  41bf3a:	into   
  41bf3b:	dec    edi
  41bf3c:	xchg   esi,ebx
  41bf3e:	loope  0x41bf43
  41bf40:	das    
  41bf41:	test   BYTE PTR [edi+0x71030a25],0x40
  41bf48:	call   FWORD PTR [eax-0x56]
  41bf4b:	jo     0x41bf77
  41bf4d:	js     0x41bf4f
  41bf4f:	loope  0x41bf5a
  41bf51:	lock sub al,0xd7
  41bf54:	ins    BYTE PTR es:[edi],dx
  41bf55:	fisubr WORD PTR [esi]
  41bf57:	test   eax,0xe9022b03
  41bf5c:	sub    al,0xad
  41bf5e:	xchg   DWORD PTR [ebx+edx*8],esi
  41bf61:	int    0xc0
  41bf63:	aaa    
  41bf64:	js     0x41bfbd
  41bf66:	jle    0x41bee8
  41bf68:	sbb    BYTE PTR [edi+0x5596e9f8],0x40
  41bf6f:	loope  0x41bfa6
  41bf71:	mov    BYTE PTR [eax+eiz*2],cl
  41bf74:	out    dx,eax
  41bf75:	and    eax,0x5ba4ae88
  41bf7a:	inc    esi
  41bf7b:	cmp    eax,0xa0150000
  41bf80:	adc    al,0x2e
  41bf82:	out    dx,eax
  41bf83:	stc    
  41bf84:	(bad)  
  41bf85:	call   0x29c79db6
  41bf8a:	adc    al,bl
  41bf8c:	mov    DWORD PTR [esp+ecx*4+0x2d4d4619],esp
  41bf93:	fiadd  WORD PTR [eax]
  41bf95:	jmp    0x6a524eeb
  41bf9a:	iret   
  41bf9b:	or     DWORD PTR [ecx],eax
  41bf9d:	xchg   ebx,eax
  41bf9e:	sub    al,0x57
  41bfa0:	inc    esi
  41bfa1:	xor    esp,edi
  41bfa3:	add    BYTE PTR [esi+0x5],dh
  41bfa6:	mov    bl,BYTE PTR [edi-0x10b61605]
  41bfac:	adc    al,bl
  41bfae:	in     al,dx
  41bfaf:	fnstsw WORD PTR ds:0xde2beb
  41bfb5:	fisubr WORD PTR [eax+0x2ce901b1]
  41bfbb:	test   DWORD PTR [edx],0x87d67072
  41bfc1:	push   esp
  41bfc2:	pop    ss
  41bfc3:	pop    ebp
  41bfc4:	rcl    DWORD PTR [ebp+0x1e],0x5f
  41bfc8:	stc    
  41bfc9:	add    BYTE PTR [edi],dl
  41bfcb:	or     edi,DWORD PTR [edi+0x2a]
  41bfce:	pop    es
  41bfcf:	fiadd  WORD PTR [eax]
  41bfd1:	mov    esi,DWORD PTR [ecx-0x7417a97b]
  41bfd7:	jns    0x41bfcc
  41bfd9:	jmp    0x41bfb9
  41bfdb:	test   BYTE PTR [esi-0x18],dh
  41bfde:	pop    ebp
  41bfdf:	ja     0xbe41c062
  41bfe5:	mov    DWORD PTR [esi],edi
  41bfe7:	lods   al,BYTE PTR ds:[esi]
  41bfe8:	push   es
  41bfe9:	sti    
  41bfea:	jne    0x41bff4
  41bfec:	test   eax,0xe3ff0470
  41bff1:	add    DWORD PTR [esi],edx
  41bff3:	inc    eax
  41bff4:	mov    BYTE PTR [eax-0x45ecf045],0xfb
  41bffb:	call   DWORD PTR [esi-0x7853c10d]
  41c001:	or     al,BYTE PTR [eax+0xdd8698]
  41c007:	mov    edx,ebx
  41c009:	dec    ebp
  41c00a:	jg     0x41bfcc
  41c00c:	jns    0x41bf8e
  41c00e:	add    DWORD PTR [ecx],eax
  41c010:	xchg   ch,bl
  41c012:	mov    DWORD PTR [esi],eax
  41c014:	outs   dx,BYTE PTR ds:[esi]
  41c015:	fisttp QWORD PTR [eax]
  41c017:	add    BYTE PTR [esi-0x6],dl
  41c01a:	outs   dx,BYTE PTR ds:[esi]
  41c01b:	lock fld QWORD PTR [edi-0x3]
  41c01f:	push   eax
  41c020:	push   edx
  41c021:	test   BYTE PTR [esi],bh
  41c023:	in     al,dx
  41c024:	ret    
  41c025:	sbb    DWORD PTR [edx+ebp*2-0x33],esi
  41c029:	enter  0xf18,0xe2
  41c02d:	push   ds
  41c02e:	jg     0x41bff9
  41c030:	ret    0x89e3
  41c033:	add    ebx,ecx
  41c035:	nop
  41c036:	in     al,dx
  41c037:	push   edx
  41c038:	sbb    DWORD PTR [eax-0x10],esi
  41c03b:	inc    DWORD PTR [ebx+0x56ff5622]
  41c041:	fiadd  WORD PTR [eax+eax*8-0x2f8407d1]
  41c048:	add    BYTE PTR [eax],al
  41c04a:	das    
  41c04b:	idiv   edi
  41c04d:	and    esp,0x7
  41c050:	jnp    0x41bff4
  41c052:	das    
  41c053:	idiv   edi
  41c055:	mov    BYTE PTR [edx+0x1b],ch
  41c058:	jnp    0x41c019
  41c05a:	imul   edx,DWORD PTR [eax],0x1bab03d9
  41c060:	imul   ebp,DWORD PTR ds:0x8910e9d8,0x7a
  41c067:	addr16 in eax,0x72
  41c06a:	pop    ds
  41c06b:	jl     0x41c09f
  41c06d:	call   0xfd2b5149
  41c072:	mov    eax,0xab0cbf7a
  41c077:	xchg   ecx,eax
  41c078:	(bad)  
  41c079:	jmp    FWORD PTR [edi]
  41c07b:	jl     0x41c07a
  41c07d:	addr16 das 
  41c07f:	sldt   WORD PTR [eax]
  41c082:	cwde   
  41c083:	sub    eax,esi
  41c085:	mov    BYTE PTR [ecx-0x59],ah
  41c088:	dec    edi
  41c089:	add    al,0xb6
  41c08b:	cmp    esp,edx
  41c08d:	sub    BYTE PTR [edi+0x1d],0x8a
  41c091:	sub    BYTE PTR [edi+0x1d],0xf3
  41c095:	cld    
  41c096:	sbb    bh,BYTE PTR [ebx-0xdd0bff6]
  41c09c:	xor    BYTE PTR ds:0x7e6af72f,ah
  41c0a2:	popa   
  41c0a3:	cmp    DWORD PTR [edi+ebx*1+0x427916db],edx
  41c0aa:	jae    0x41c125
  41c0ac:	mov    edi,0xd7000072
  41c0b1:	push   ds
  41c0b2:	std    
  41c0b3:	jb     0x41c0d2
  41c0b5:	mov    WORD PTR [edx],?
  41c0b7:	call   0x7026b681
  41c0bc:	xor    esi,eax
  41c0be:	or     eax,0x29de3914
  41c0c3:	add    al,0xac
  41c0c5:	push   ds
  41c0c6:	push   ebp
  41c0c7:	aas    
  41c0c8:	jmp    0x85c5a9a4
  41c0cd:	push   es
  41c0ce:	jmp    0x459fea2b
  41c0d3:	(bad)  
  41c0d5:	mov    esi,DWORD PTR [ecx]
  41c0d7:	jecxz  0x41c156
  41c0d9:	out    dx,al
  41c0da:	fs dec ecx
  41c0dc:	pop    es
  41c0dd:	jne    0x41c0c8
  41c0df:	xor    esp,edx
  41c0e1:	mov    DWORD PTR [ebp-0x711c21d],ecx
  41c0e7:	inc    ebx
  41c0e8:	das    
  41c0e9:	shl    edi,0x4
  41c0ec:	das    
  41c0ed:	(bad)  
  41c0ef:	mov    dh,bl
  41c0f1:	add    BYTE PTR [ebx+0x7599f3e3],al
  41c0f7:	push   eax
  41c0f8:	or     bl,dh
  41c0fa:	jmp    0x59d13ed
  41c0ff:	lock mov al,ds:0x701787f4
  41c105:	pop    ebx
  41c106:	bound  eax,QWORD PTR [esi]
  41c108:	and    ch,BYTE PTR [ecx+0x29]
  41c10b:	dec    ebp
  41c10c:	or     ch,bh
  41c10e:	sub    al,0x7
  41c110:	das    
  41c111:	fisub  WORD PTR [esi-0x3b]
  41c114:	add    BYTE PTR [eax],al
  41c116:	xor    dl,BYTE PTR [ebp-0x53]
  41c119:	xlat   BYTE PTR ds:[ebx]
  41c11a:	xchg   ebp,edx
  41c11c:	pusha  
  41c11d:	dec    ecx
  41c11e:	arpl   bx,si
  41c120:	in     eax,0xc9
  41c122:	in     eax,dx
  41c123:	(bad)  
  41c124:	call   0x124f9f0b
  41c129:	in     eax,dx
  41c12a:	adc    al,0xff
  41c12c:	adc    al,BYTE PTR [edi+0x42ea09c5]
  41c132:	loope  0x41c0d6
  41c134:	jge    0x41c142
  41c136:	cmp    cl,BYTE PTR [ecx-0x4de21d0b]
  41c13c:	add    bh,bl
  41c13e:	ins    BYTE PTR es:[edi],dx
  41c13f:	fiadd  WORD PTR [esi-0x40e7f25c]
  41c145:	std    
  41c146:	sub    al,0xa8
  41c148:	push   ebx
  41c149:	jb     0x41c13f
  41c14b:	pop    ebx
  41c14c:	cld    
  41c14d:	pop    esp
  41c14e:	cmp    ebx,DWORD PTR [ebx-0x28]
  41c151:	push   ebp
  41c152:	and    edi,ebx
  41c154:	call   ecx
  41c156:	push   ss
  41c157:	pop    ebx
  41c158:	fdiv   DWORD PTR ds:0xeb445315
  41c15e:	mov    bh,0x3e
  41c160:	jne    0x41c160
  41c162:	aam    0x83
  41c164:	cmp    al,0xa6
  41c166:	int    0x55
  41c168:	icebp  
  41c169:	test   BYTE PTR fs:[edx-0x74dcfedc],0x0
  41c171:	jmp    0xcdbf167b
  41c176:	shr    BYTE PTR [eax+0xde8],0x1e
  41c17d:	add    esp,edi
  41c17f:	ins    DWORD PTR es:[edi],dx
  41c180:	ins    BYTE PTR es:[edi],dx
  41c181:	mov    eax,DWORD PTR [esi]
  41c183:	pop    ss
  41c184:	xchg   ebx,eax
  41c185:	dec    esi
  41c186:	cmp    eax,0xc0cc8d66
  41c18b:	push   edx
  41c18c:	dec    esp
  41c18d:	push   edi
  41c18e:	xor    BYTE PTR [ecx-0x3ee90acd],bl
  41c194:	sbb    al,0x8b
  41c196:	add    cl,ch
  41c198:	xor    eax,0x77057501
  41c19d:	not    bl
  41c19f:	in     al,0x4d
  41c1a1:	add    DWORD PTR [esi+0xc16b212],eax
  41c1a7:	jl     0x41c215
  41c1a9:	add    cl,cl
  41c1ab:	retf   
  41c1ac:	imul   esp,DWORD PTR [ecx-0x21cfd4a6],0x55
  41c1b3:	bound  edx,QWORD PTR [eax+0x5d]
  41c1b6:	in     eax,dx
  41c1b7:	add    BYTE PTR [esi+0x57],cl
  41c1ba:	ja     0x41c1c8
  41c1bc:	inc    esi
  41c1bd:	je     0x41c142
  41c1bf:	jne    0x41c1ed
  41c1c1:	imul   edi,DWORD PTR [edi],0x66eb9bec
  41c1c7:	add    eax,0x4583886e
  41c1cc:	(bad)  
  41c1cd:	mov    dl,0xe9
  41c1cf:	pop    ss
  41c1d0:	ins    BYTE PTR es:[edi],dx
  41c1d1:	cmc    
  41c1d2:	push   ebx
  41c1d3:	push   0x6
  41c1d5:	jmp    FWORD PTR [esi+0xc]
  41c1d8:	push   0x83e83f69
  41c1dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1de:	out    0x50,eax
  41c1e0:	add    BYTE PTR [eax],al
  41c1e2:	out    dx,al
  41c1e3:	xchg   ecx,eax
  41c1e4:	cmp    al,0xff
  41c1e6:	xchg   ecx,eax
  41c1e7:	mov    WORD PTR [edi],cs
  41c1e9:	lea    ecx,[ebx]
  41c1eb:	or     cl,BYTE PTR [edi+edi*8+0x3b]
  41c1ef:	jmp    0x84fc:0xfed3b7e8
  41c1f6:	xchg   esi,eax
  41c1f7:	xchg   esi,eax
  41c1f8:	pop    ss
  41c1f9:	dec    bx
  41c1fb:	sbb    BYTE PTR [eax+0x13],dh
  41c1fe:	rcl    DWORD PTR [esi-0x3a],0x50
  41c202:	and    DWORD PTR [ebp-0x166400f0],edx
  41c208:	call   0xfd4065ac
  41c20d:	test   BYTE PTR [esi-0x6a],al
  41c210:	push   DWORD PTR [edx]
  41c212:	push   esi
  41c213:	mov    ds:0x222502e9,al
  41c218:	ret    
  41c219:	ret    0xe182
  41c21c:	dec    edi
  41c21d:	mov    esp,edx
  41c21f:	(bad)  
  41c220:	call   0x812b8e55
  41c225:	shl    DWORD PTR [esi+0x69],0x47
  41c229:	lock fsubr QWORD PTR [ecx-0x5e06f102]
  41c230:	add    dl,BYTE PTR [edi+0x2f]
  41c233:	outs   dx,BYTE PTR ds:[esi]
  41c234:	push   0x5
  41c236:	mov    bh,0x5a
  41c238:	iret   
  41c239:	push   esi
  41c23a:	inc    eax
  41c23b:	fimul  WORD PTR [edx-0x74fc3a3a]
  41c241:	jp     0x41c242
  41c243:	cld    
  41c244:	out    0x87,al
  41c246:	add    BYTE PTR [eax],al
  41c248:	push   0xfffffff9
  41c24a:	mov    WORD PTR [edx+0x27],es
  41c24d:	outs   dx,BYTE PTR ds:[esi]
  41c24e:	inc    edx
  41c24f:	icebp  
  41c250:	mov    ds:0x3c4fd4c1,al
  41c255:	inc    edi
  41c256:	call   0x47f2dd
  41c25b:	test   bh,ch
  41c25d:	repz and esp,0x2f
  41c261:	pop    es
  41c262:	add    BYTE PTR [ebx+0x32355772],cl
  41c268:	add    al,0x7e
  41c26a:	inc    edx
  41c26b:	clc    
  41c26c:	lock leave 
  41c26e:	aam    0xf
  41c270:	das    
  41c271:	pop    es
  41c272:	add    BYTE PTR [ecx-0x71b08e],cl
  41c278:	mov    dh,0x3e
  41c27a:	shl    bh,0x33
  41c27d:	or     ecx,DWORD PTR [edi-0x80]
  41c280:	into   
  41c281:	or     ecx,DWORD PTR [eax-0x417957be]
  41c287:	pop    esi
  41c288:	pop    ebp
  41c289:	inc    edi
  41c28a:	cmp    BYTE PTR [edx-0x68],0x0
  41c28e:	pop    edx
  41c28f:	adc    BYTE PTR [edi+0x38b5e141],ch
  41c295:	pop    ebp
  41c296:	mov    edi,0x41011596
  41c29b:	cmc    
  41c29c:	js     0x41c30f
  41c29e:	inc    ebp
  41c29f:	xor    BYTE PTR [eax],ah
  41c2a1:	jne    0x41c257
  41c2a3:	std    
  41c2a4:	ins    BYTE PTR es:[edi],dx
  41c2a5:	jle    0x41c2b2
  41c2a7:	xor    dh,BYTE PTR [ebp+0xce151]
  41c2ad:	add    BYTE PTR [ecx+0x6fe12edd],ah
  41c2b3:	not    BYTE PTR gs:[edx]
  41c2b6:	mov    bl,0x1d
  41c2b8:	sahf   
  41c2b9:	or     esi,DWORD PTR [edx]
  41c2bb:	xor    al,0x1f
  41c2bd:	mov    ebp,DWORD PTR [edi+ebp*4]
  41c2c0:	add    eax,esp
  41c2c2:	xor    esp,DWORD PTR [edx-0x118a1fff]
  41c2c8:	jl     0x41c279
  41c2ca:	xor    esi,DWORD PTR [edi+eiz*1]
  41c2cd:	leave  
  41c2ce:	sub    al,0xae
  41c2d0:	adc    ecx,DWORD PTR [ebx+0x64fe66d]
  41c2d6:	adc    BYTE PTR ds:[ebx],dh
  41c2d9:	xlat   BYTE PTR ds:[ebx]
  41c2da:	sti    
  41c2db:	cld    
  41c2dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2dd:	xadd   DWORD PTR [edi],esp
  41c2e0:	out    0xcd,eax
  41c2e2:	lods   eax,DWORD PTR ds:[esi]
  41c2e3:	adc    BYTE PTR ds:0x37ddf20b,dh
  41c2e9:	pop    ecx
  41c2ea:	das    
  41c2eb:	fisubr WORD PTR [ecx-0x3d]
  41c2ee:	cs pop es
  41c2f0:	cmp    BYTE PTR [ebx+0x90fe66d],cl
  41c2f6:	dec    BYTE PTR [edi]
  41c2f8:	xor    edx,edi
  41c2fa:	mov    ebx,0x2759b861
  41c2ff:	and    ebp,ecx
  41c301:	popa   
  41c302:	dec    eax
  41c303:	js     0x41c2ee
  41c305:	jmp    0xdfd7:0xc2d6761
  41c30c:	hlt    
  41c30d:	or     dh,BYTE PTR [edx-0x23]
  41c310:	shr    BYTE PTR [ebp+0x0],1
  41c313:	add    BYTE PTR [ecx],cl
  41c315:	mov    ebp,DWORD PTR [ecx-0x3d]
  41c318:	sub    al,0x7
  41c31a:	add    BYTE PTR [edx+0x2e],ch
  41c31d:	scas   eax,DWORD PTR es:[edi]
  41c31e:	aaa    
  41c31f:	aas    
  41c320:	xor    bl,0x6c
  41c323:	mov    dl,0xfd
  41c325:	in     eax,0x22
  41c327:	add    eax,0xce006fda
  41c32c:	sub    al,0x5
  41c32e:	adc    eax,0x1e5e637
  41c333:	pushf  
  41c334:	and    al,0x21
  41c336:	add    cl,BYTE PTR [edi+0x20071d7]
  41c33c:	sub    DWORD PTR [ecx],esp
  41c33e:	add    cl,BYTE PTR [edx+0x690086c9]
  41c344:	ins    BYTE PTR es:[edi],dx
  41c345:	fimul  WORD PTR [ebx]
  41c347:	aaa    
  41c348:	in     al,dx
  41c349:	and    BYTE PTR ds:0xc0682cb9,al
  41c34f:	xchg   edx,eax
  41c350:	pop    ecx
  41c351:	and    edi,DWORD PTR [edi-0x7870d313]
  41c357:	int    0xad
  41c359:	push   es
  41c35a:	push   ecx
  41c35b:	aas    
  41c35c:	cmp    BYTE PTR [edi+0x46],ah
  41c35f:	sar    DWORD PTR [esi+eax*1],0xd9
  41c363:	loopne 0x41c336
  41c365:	stc    
  41c366:	test   BYTE PTR [ecx-0x6d471a80],ch
  41c36c:	sub    esi,ebx
  41c36e:	add    BYTE PTR [edi+0x3a],al
  41c371:	lahf   
  41c372:	call   0x46a8e891
  41c377:	xchg   ecx,eax
  41c378:	add    BYTE PTR [eax],al
  41c37a:	cld    
  41c37b:	clc    
  41c37c:	adc    eax,0xbabd25
  41c381:	add    DWORD PTR [edi+ecx*8+0x7fad86fb],0x9fbbe9f8
  41c38c:	cld    
  41c38d:	ss loopne 0x41c36f
  41c390:	add    cl,ch
  41c392:	lods   eax,DWORD PTR ds:[esi]
  41c393:	ja     0x41c39d
  41c395:	jmp    0x5e4a32f3
  41c39a:	xchg   esi,ebx
  41c39c:	adc    DWORD PTR [ecx+0x4e11052c],ebp
  41c3a2:	xlat   BYTE PTR ds:[ebx]
  41c3a3:	in     eax,0xfb
  41c3a5:	add    BYTE PTR [ebx+0x2e],dl
  41c3a8:	adc    al,BYTE PTR [eax+0x56]
  41c3ab:	mov    ebp,0xde5600fe
  41c3b0:	outs   dx,DWORD PTR ds:[esi]
  41c3b1:	ds int 0xa5
  41c3b4:	cld    
  41c3b5:	xor    edx,DWORD PTR [edx+ebx*2]
  41c3b8:	in     al,0x3
  41c3ba:	push   esi
  41c3bb:	fdivrp st(5),st
  41c3bd:	icebp  
  41c3be:	retf   
  41c3bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3c0:	call   0x52906752
  41c3c5:	call   0x3edc52
  41c3ca:	sub    DWORD PTR [edx-0x6ea97b04],esp
  41c3d0:	sbb    eax,0x89e9c38b
  41c3d5:	into   
  41c3d6:	dec    BYTE PTR [ebp+0x25]
  41c3d9:	add    BYTE PTR [esi],dl
  41c3db:	pop    edi
  41c3dc:	in     al,0x0
  41c3de:	add    BYTE PTR [eax],al
  41c3e0:	(bad)  
  41c3e1:	cli    
  41c3e2:	inc    ebx
  41c3e3:	dec    eax
  41c3e4:	(bad)  
  41c3e5:	into   
  41c3e6:	std    
  41c3e7:	inc    ebp
  41c3e8:	out    dx,al
  41c3e9:	pop    ebp
  41c3ea:	ja     0x41c3e4
  41c3ec:	(bad)  
  41c3ed:	fild   WORD PTR [eax]
  41c3ef:	add    BYTE PTR [edi+edi*1],ah
  41c3f2:	xor    al,al
  41c3f4:	sub    DWORD PTR [eax-0x22213d3d],edi
  41c3fa:	mov    al,0x1
  41c3fc:	popf   
  41c3fd:	adc    BYTE PTR [ecx+eax*1-0x74ff316c],ch
  41c404:	adc    al,dh
  41c406:	or     al,0x8b
  41c408:	cli    
  41c409:	lds    ecx,FWORD PTR [eax]
  41c40b:	push   esi
  41c40c:	sbb    eax,0x19082496
  41c411:	rol    BYTE PTR [ecx-0x7e528640],1
  41c417:	rcr    DWORD PTR [ecx-0x6934d7fb],0xdd
  41c41e:	cmp    BYTE PTR [esi+0x2f],0xb
  41c422:	add    BYTE PTR [esi+0x2],bl
  41c425:	add    eax,0x5a6cd7d5
  41c42a:	mov    ebx,ebp
  41c42c:	(bad)  
  41c42d:	push   ebp
  41c42e:	xchg   DWORD PTR [edx+0x67],eax
  41c431:	add    BYTE PTR [ebx-0x8],0xff
  41c435:	push   ds
  41c436:	inc    ecx
  41c437:	cdq    
  41c438:	out    dx,al
  41c439:	push   es
  41c43a:	push   0x72ed9
  41c43f:	std    
  41c440:	mov    edx,0x42c602
  41c445:	add    BYTE PTR [ebx],bh
  41c447:	push   es
  41c448:	fnsave [edx+0x27]
  41c44b:	iret   
  41c44c:	add    edi,ecx
  41c44e:	cs pop es
  41c450:	add    ebx,0x7bebe3b
  41c456:	das    
  41c457:	push   edx
  41c458:	mov    ebx,ebp
  41c45a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c45b:	leave  
  41c45c:	adc    BYTE PTR [ecx-0x7ece20e5],al
  41c462:	out    dx,eax
  41c463:	ss ss push ebp
  41c466:	cmp    ah,BYTE PTR [edi-0x1]
  41c469:	jmp    FWORD PTR [edi]
  41c46b:	lock test cl,ah
  41c46e:	das    
  41c46f:	pop    es
  41c470:	add    BYTE PTR [ecx-0x407f0096],cl
  41c476:	xor    ebx,DWORD PTR [ebp-0x3659b008]
  41c47c:	fsub   st,st(7)
  41c47e:	in     al,dx
  41c47f:	sub    eax,DWORD PTR [eax]
  41c481:	add    BYTE PTR [edi+0x50],bl
  41c484:	repz push ebx
  41c486:	and    edi,eax
  41c488:	add    al,0x81
  41c48a:	jmp    0x41c47e
  41c48c:	cmp    BYTE PTR [edi-0x637cc8],0xa0
  41c493:	push   es
  41c494:	call   0x48c430
  41c499:	xchg   edx,ebp
  41c49b:	frstor [ecx-0x72]
  41c49e:	in     eax,dx
  41c49f:	or     DWORD PTR [edi],edx
  41c4a1:	(bad)  
  41c4a2:	lock data16 fst st(3)
  41c4a6:	nop
  41c4a7:	enter  0xdcb3,0x0
  41c4ab:	add    BYTE PTR [ebx+0x66],dh
  41c4ae:	lods   eax,DWORD PTR ds:[esi]
  41c4af:	fbld   TBYTE PTR [edi]
  41c4b1:	and    BYTE PTR [ebp+0x3ef91e07],dh
  41c4b7:	push   edi
  41c4b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4b9:	jp     0x41c4f8
  41c4bb:	adc    BYTE PTR [ebx-0x2f],0x97
  41c4bf:	add    ch,dl
  41c4c1:	sar    DWORD PTR [edx-0x3c90bee8],1
  41c4c7:	mov    fs,eax
  41c4c9:	call   0x7275bc4d
  41c4ce:	std    
  41c4cf:	das    
  41c4d0:	sub    dl,dl
  41c4d2:	xchg   ebp,eax
  41c4d3:	cmc    
  41c4d4:	pusha  
  41c4d5:	fisub  WORD PTR [esi-0x39]
  41c4d8:	and    al,0x61
  41c4da:	sub    dl,BYTE PTR [edi+0x24]
  41c4dd:	mov    al,ds:0xdde7c768
  41c4e2:	jmp    0x58310aea
  41c4e7:	out    0x7,al
  41c4e9:	in     al,0x40
  41c4eb:	rcl    bh,cl
  41c4ed:	fucomp st(1)
  41c4ef:	add    ebp,DWORD PTR [esi]
  41c4f1:	jno    0x41c4b0
  41c4f3:	push   ecx
  41c4f4:	push   eax
  41c4f5:	stos   DWORD PTR es:[edi],eax
  41c4f6:	xchg   edi,eax
  41c4f7:	sbb    ebx,0x6d8ef872
  41c4fd:	cli    
  41c4fe:	les    bp,DWORD PTR [esi+ebx*2]
  41c502:	and    al,BYTE PTR [eax]
  41c504:	imul   ebx,DWORD PTR cs:[edx],0x5e9a43d8
  41c50b:	or     al,0xac
  41c50d:	and    eax,0xf5fe
  41c512:	popa   
  41c513:	test   eax,0x63345281
  41c518:	add    DWORD PTR [ebx+edi*2],edx
  41c51b:	(bad)  
  41c51c:	fldcw  WORD PTR [eax+0x70]
  41c51f:	ja     0x41c4ae
  41c521:	ret    0x6d2c
  41c524:	inc    esp
  41c525:	stos   DWORD PTR es:[edi],eax
  41c526:	das    
  41c527:	adc    eax,0xb52ce902
  41c52c:	rcr    ebx,cl
  41c52e:	mov    edi,0xa9d0dc66
  41c533:	push   ss
  41c534:	add    ch,cl
  41c536:	sub    al,0x63
  41c538:	mov    BYTE PTR [edx],dl
  41c53a:	xor    bl,dh
  41c53c:	add    BYTE PTR [esi+edi*8-0x7],bl
  41c540:	call   0xfc3aea1a
  41c545:	imul   ebp,DWORD PTR gs:[ecx+ebx*1+0x16],0xffffffde
  41c54b:	stc    
  41c54c:	call   0xfc3ad85c
  41c551:	je     0x41c5d1
  41c553:	out    dx,al
  41c554:	call   0xfc3b3cd7
  41c559:	mov    ebx,0x925a99ec
  41c55e:	jecxz  0x41c57c
  41c560:	or     eax,0xfc9bb9e9
  41c565:	ins    BYTE PTR es:[edi],dx
  41c566:	xor    ch,bl
  41c568:	inc    ebx
  41c569:	inc    ecx
  41c56a:	mov    eax,0x82e9fbf7
  41c56f:	ficom  WORD PTR [edx-0x3a]
  41c572:	fbld   TBYTE PTR [esi+0x2912]
  41c578:	sub    ebp,ecx
  41c57a:	mov    dl,0x2c
  41c57c:	jecxz  0x41c5db
  41c57e:	vpaddw ymm1,ymm4,YMMWORD PTR [esi]
  41c582:	sbb    BYTE PTR [ecx-0x580764ef],ch
  41c588:	outs   dx,BYTE PTR ds:[esi]
  41c589:	out    0x0,al
  41c58b:	pusha  
  41c58c:	outs   dx,BYTE PTR ds:[esi]
  41c58d:	loop   0x41c516
  41c58f:	and    al,0x27
  41c591:	mov    ?,ebx
  41c593:	add    BYTE PTR [ebx+0x488962e2],ch
  41c599:	jmp    0xaccf8c1f
  41c59e:	std    
  41c59f:	adc    eax,0x3bec32
  41c5a4:	adc    eax,0xe1830837
  41c5a9:	loope  0x41c61d
  41c5ab:	cmp    eax,0xc975ee
  41c5b0:	xchg   BYTE PTR [edi+0x6f],ah
  41c5b3:	cld    
  41c5b4:	leave  
  41c5b5:	lods   al,BYTE PTR ds:[esi]
  41c5b6:	call   0xfd55e634
  41c5bb:	and    DWORD PTR [ecx],0x7
  41c5be:	jbe    0x41c5e9
  41c5c0:	outs   dx,DWORD PTR ds:[esi]
  41c5c1:	adc    ebx,ecx
  41c5c3:	add    DWORD PTR [esi-0x26],edx
  41c5c6:	data16 adc al,0x21
  41c5c9:	mov    ?,esp
  41c5cb:	(bad)  
  41c5cc:	retf   0x34cb
  41c5cf:	(bad)  
  41c5d0:	and    DWORD PTR [esp+ecx*2],edx
  41c5d3:	dec    DWORD PTR [ebx]
  41c5d5:	(bad)  
  41c5d6:	adc    al,BYTE PTR [eax+0x16]
  41c5d9:	pop    ebp
  41c5da:	ror    BYTE PTR [eax+eax*1],0x0
  41c5de:	mov    esp,DWORD PTR [ecx]
  41c5e0:	or     eax,0x14834595
  41c5e5:	pop    edi
  41c5e6:	xchg   esi,eax
  41c5e7:	adc    edi,ebx
  41c5e9:	je     0x41c5fd
  41c5eb:	pop    ss
  41c5ec:	outs   dx,DWORD PTR ds:[esi]
  41c5ed:	cld    
  41c5ee:	lea    ebx,[edi]
  41c5f0:	in     al,0x37
  41c5f2:	cmp    edx,DWORD PTR [edi]
  41c5f4:	std    
  41c5f5:	mov    cl,BYTE PTR [esi-0x10390e9]
  41c5fb:	fnstcw WORD PTR [eax]
  41c5fd:	jmp    DWORD PTR [ecx-0x110f90a3]
  41c603:	xor    BYTE PTR [eax-0x1],cl
  41c606:	xchg   ecx,eax
  41c607:	fs shr ecx,0x4
  41c60b:	pop    ss
  41c60c:	std    
  41c60d:	jmp    FWORD PTR [edi]
  41c60f:	mov    dl,0x8d
  41c611:	jmp    0x41c5bf
  41c613:	jae    0x41c609
  41c615:	push   eax
  41c616:	add    esp,edx
  41c618:	add    DWORD PTR [edx-0x5d],0xffffffd7
  41c61c:	in     al,dx
  41c61d:	ret    
  41c61e:	add    ebp,DWORD PTR [ecx+ebx*8-0x78]
  41c622:	xchg   edi,eax
  41c623:	jle    0x41c678
  41c625:	hlt    
  41c626:	mov    dl,0x7c
  41c628:	dec    ebx
  41c629:	add    al,0x3d
  41c62b:	(bad)  
  41c62c:	in     eax,dx
  41c62d:	imul   esp,DWORD PTR [edx+edx*1-0x915772c],0x9b575531
  41c638:	sar    esp,cl
  41c63a:	pusha  
  41c63b:	mov    dh,dl
  41c63d:	add    ebx,ebp
  41c63f:	pop    es
  41c640:	outs   dx,BYTE PTR ds:[esi]
  41c641:	add    al,0x0
  41c643:	add    cl,dh
  41c645:	mov    esp,0x822f113b
  41c64a:	into   
  41c64b:	jae    0x41c638
  41c64d:	add    DWORD PTR [ecx+0x9],0x86d842a6
  41c654:	mov    edx,0x70b509e2
  41c659:	out    dx,al
  41c65a:	mov    WORD PTR [edx+0x33],cs
  41c65d:	push   edi
  41c65e:	fnstenv [edx+0x17]
  41c661:	popa   
  41c662:	add    BYTE PTR [edx+0x29],ch
  41c665:	fbstp  TBYTE PTR [edi]
  41c667:	or     eax,0xef8d072f
  41c66c:	stos   BYTE PTR es:[edi],al
  41c66d:	or     al,0x4c
  41c66f:	sbb    al,0xa4
  41c671:	ror    DWORD PTR [ecx+ecx*4],0x37
  41c675:	cmp    BYTE PTR [ecx-0x543619],0xff
  41c67c:	stos   DWORD PTR es:[edi],eax
  41c67d:	inc    esi
  41c67e:	dec    esp
  41c67f:	add    al,0xf1
  41c681:	shl    ebp,0xfe
  41c684:	enter  0xeb47,0xfe
  41c688:	enter  0x6edd,0x56
  41c68c:	mov    ebx,0x3dd82cf4
  41c691:	sbb    edi,DWORD PTR [ebx]
  41c693:	in     al,dx
  41c694:	mov    WORD PTR [edx+ecx*4-0x29654928],gs
  41c69b:	cmp    BYTE PTR [ecx],al
  41c69d:	cdq    
  41c69e:	mov    al,0xc5
  41c6a0:	and    al,0xde
  41c6a2:	sbb    al,0x8d
  41c6a4:	test   BYTE PTR [esi+0x3518],cl
  41c6aa:	mov    dh,0x97
  41c6ac:	stc    
  41c6ad:	xor    DWORD PTR [esi+0x17b952f0],esi
  41c6b3:	in     al,dx
  41c6b4:	fs inc ebp
  41c6b6:	sbb    ecx,eax
  41c6b8:	pop    ecx
  41c6b9:	sub    edx,0xffffffe0
  41c6bc:	div    DWORD PTR [eax]
  41c6be:	mov    dh,0x27
  41c6c0:	jmp    0x41c731
  41c6c2:	in     eax,dx
  41c6c3:	cmc    
  41c6c4:	inc    ecx
  41c6c5:	push   0x34
  41c6c7:	fsubp  st(1),st
  41c6c9:	popa   
  41c6ca:	scas   al,BYTE PTR es:[edi]
  41c6cb:	cmc    
  41c6cc:	fst    DWORD PTR [ebx+ebp*1-0x50]
  41c6d0:	sub    esp,ebp
  41c6d2:	mov    ch,0x5a
  41c6d4:	das    
  41c6d5:	dec    esi
  41c6d6:	sub    al,0xbf
  41c6d8:	lods   al,BYTE PTR ds:[esi]
  41c6d9:	xlat   BYTE PTR ds:[ebx]
  41c6da:	pop    ss
  41c6db:	frstor [esi-0x3c]
  41c6de:	push   esp
  41c6df:	gs popf 
  41c6e1:	xlat   BYTE PTR ds:[ebx]
  41c6e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6e3:	sub    BYTE PTR [edx],al
  41c6e5:	dec    edx
  41c6e6:	xor    al,0xde
  41c6e8:	jmp    0xf33444c5
  41c6ed:	mov    ?,eax
  41c6ef:	addr16 mov ds:0x10ec,eax
  41c6f3:	mov    al,ds:0x1eadd7d2
  41c6f8:	dec    esp
  41c6f9:	mov    cl,0x68
  41c6fb:	jno    0x41c6be
  41c6fd:	add    eax,0x416ed65c
  41c702:	daa    
  41c703:	addr16 add ecx,ebp
  41c706:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c707:	dec    ebx
  41c708:	(bad)  
  41c709:	call   0xa695a53a
  41c70e:	add    BYTE PTR [eax],al
  41c710:	pop    esi
  41c711:	bnd call 0xfc34d7fb
  41c717:	ins    DWORD PTR es:[edi],dx
  41c718:	jmp    0x41c789
  41c71a:	mov    bl,0x8e
  41c71c:	(bad)  
  41c71d:	cmc    
  41c71e:	push   ebx
  41c71f:	xchg   dh,bh
  41c721:	icebp  
  41c722:	call   0xfc343d4c
  41c727:	imul   esi,esi,0x28f401f5
  41c72d:	push   0x3300e843
  41c732:	jne    0x41c730
  41c734:	dec    ecx
  41c735:	icebp  
  41c736:	jne    0x41c78d
  41c738:	pop    ecx
  41c739:	sbb    ecx,DWORD PTR [edi+edx*4]
  41c73c:	jae    0x41c6e1
  41c73e:	lea    ebp,[edi+0x770ba360]
  41c744:	sbb    ebp,ebx
  41c746:	push   eax
  41c747:	(bad)  
  41c748:	out    dx,al
  41c749:	in     eax,0xfb
  41c74b:	stc    
  41c74c:	push   esp
  41c74d:	loope  0x41c79f
  41c74f:	call   0xbe43f580
  41c754:	add    dl,BYTE PTR [ebp-0x21d0d437]
  41c75a:	push   ebp
  41c75b:	bound  edx,QWORD PTR [edi]
  41c75d:	je     0x41c74b
  41c75f:	and    DWORD PTR [esi+ebx*8],ebp
  41c762:	add    BYTE PTR [edx-0x537276b6],bl
  41c768:	aam    0xa2
  41c76a:	call   0xfc3304de
  41c76f:	jb     0x41c74d
  41c771:	lods   eax,DWORD PTR ds:[esi]
  41c772:	sti    
  41c773:	jo     0x41c775
  41c775:	add    BYTE PTR [edi+0x12],bl
  41c778:	cmp    dh,bl
  41c77a:	pop    edi
  41c77b:	fldcw  WORD PTR [esi]
  41c77d:	test   eax,0x4badb
  41c782:	(bad)  
  41c783:	fimul  WORD PTR [ecx-0x222871a3]
  41c789:	je     0x41c753
  41c78b:	addr16 shr eax,0x19
  41c78f:	in     al,0xfd
  41c791:	(bad)  
  41c792:	aas    
  41c793:	sahf   
  41c794:	loopne 0x41c7d1
  41c796:	xchg   ecx,eax
  41c797:	lea    ecx,[eax]
  41c799:	push   esi
  41c79a:	scas   al,BYTE PTR es:[edi]
  41c79b:	cmp    eax,0x7b9ff36
  41c7a0:	fmul   DWORD PTR [ecx-0x47ed1d5]
  41c7a6:	xchg   DWORD PTR [eax+0x62438d38],esp
  41c7ac:	dec    esp
  41c7ad:	call   0x3f71e5
  41c7b2:	adc    bl,BYTE PTR [edi]
  41c7b4:	jo     0x41c7e1
  41c7b6:	dec    ebp
  41c7b7:	sub    esi,DWORD PTR [esi+0x27]
  41c7ba:	add    eax,0x626a0d31
  41c7bf:	gs aas 
  41c7c1:	cwde   
  41c7c2:	shr    BYTE PTR [esi+0xc215fd],0x3c
  41c7c9:	add    ch,al
  41c7cb:	xor    cl,BYTE PTR [eax]
  41c7cd:	test   DWORD PTR [esi],edx
  41c7cf:	mov    ds:0x30d74707,eax
  41c7d4:	fld    DWORD PTR [ecx]
  41c7d6:	inc    esi
  41c7d7:	fidivr WORD PTR [ecx]
  41c7d9:	sti    
  41c7da:	add    BYTE PTR [eax],al
  41c7dc:	xchg   esp,eax
  41c7dd:	stc    
  41c7de:	call   0xd4d856e6
  41c7e3:	xor    esp,DWORD PTR [eax]
  41c7e5:	ret    
  41c7e6:	push   0xde06cc
  41c7eb:	push   esi
  41c7ec:	mov    ebx,DWORD PTR [esi+0x58]
  41c7ef:	call   FWORD PTR [ecx]
  41c7f1:	or     al,0xe4
  41c7f3:	(bad)  
  41c7f4:	sub    bl,dl
  41c7f6:	add    BYTE PTR [ebp+0x4582f712],cl
  41c7fc:	das    
  41c7fd:	aas    
  41c7fe:	add    al,al
  41c800:	icebp  
  41c801:	jp     0x41c836
  41c803:	std    
  41c804:	loopne 0x41c81e
  41c806:	add    esi,eax
  41c808:	jb     0x41c826
  41c80a:	add    eax,0x883b6a87
  41c80f:	jb     0x41c7e8
  41c811:	in     al,dx
  41c812:	mov    ebp,0x184a90c
  41c817:	add    BYTE PTR [edi],ch
  41c819:	dec    esp
  41c81a:	add    cl,BYTE PTR [ecx+0x428a2f52]
  41c820:	add    DWORD PTR [ebx+edi*1],0xffffffe8
  41c824:	pop    esp
  41c825:	push   ebp
  41c826:	into   
  41c827:	lock pop esp
  41c829:	inc    edi
  41c82a:	addr16 push es
  41c82c:	or     DWORD PTR [esi+0x3b],edi
  41c82f:	lods   al,BYTE PTR ds:[esi]
  41c830:	out    0x91,al
  41c832:	push   ebx
  41c833:	scas   al,BYTE PTR es:[edi]
  41c834:	jl     0x41c882
  41c836:	pop    ebx
  41c837:	test   eax,0xf66795a4
  41c83c:	push   esp
  41c83d:	push   es
  41c83e:	add    BYTE PTR [eax],al
  41c840:	add    BYTE PTR [eax],al
  41c842:	sub    al,0xa
  41c844:	mov    ah,0x86
  41c846:	cli    
  41c847:	mov    dl,0x5
  41c849:	mov    ch,0xe9
  41c84b:	xlat   BYTE PTR ds:[ebx]
  41c84c:	xchg   DWORD PTR [edx+0x7f],esi
  41c84f:	and    DWORD PTR [ebx-0x3a],edi
  41c852:	cmp    BYTE PTR [edx-0x54],bh
  41c855:	inc    DWORD PTR [eax+0x7]
  41c858:	pop    esi
  41c859:	aaa    
  41c85a:	jmp    0x91c4cd5c
  41c85f:	pop    es
  41c860:	add    BYTE PTR [eax],al
  41c862:	mov    ah,0x39
  41c864:	loopne 0x41c89d
  41c866:	xor    edx,DWORD PTR [edi]
  41c868:	add    eax,0x5a083
  41c86d:	add    BYTE PTR [ecx+eiz*2-0x50d0034],ch
  41c874:	out    dx,eax
  41c875:	(bad)  
  41c876:	mov    bl,0xdd
  41c878:	sub    al,0xe8
  41c87a:	push   0xf2325406
  41c87f:	lock pop esi
  41c881:	mov    ebx,0x665614ad
  41c886:	push   ds
  41c887:	icebp  
  41c888:	add    BYTE PTR [edi-0x35],dl
  41c88b:	addr16 dec eax
  41c88d:	sub    edx,0xd34e60e0
  41c893:	bound  esi,QWORD PTR [edi]
  41c895:	add    eax,0x4ea2ca55
  41c89a:	rol    DWORD PTR [edi-0x37a31166],cl
  41c8a0:	sub    DWORD PTR [esi+ebp*4],eax
  41c8a3:	sbb    esi,ebx
  41c8a5:	jle    0x41c8a7
  41c8a7:	add    al,ah
  41c8a9:	imul   esi,ebx,0x9f18183c
  41c8af:	add    ch,BYTE PTR [edi]
  41c8b1:	fisubr WORD PTR [esi-0x779464aa]
  41c8b7:	call   0xb8a44ff7
  41c8bc:	jns    0x41c8ae
  41c8be:	jmp    0x4ef63ec3
  41c8c3:	push   ecx
  41c8c4:	inc    eax
  41c8c5:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41c8c7:	out    0xc9,eax
  41c8c9:	sbb    eax,0xde2f021f
  41c8ce:	out    0xc0,al
  41c8d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8d1:	pusha  
  41c8d2:	lar    ebp,WORD PTR [edi]
  41c8d5:	ficom  WORD PTR [edx+0x22a791eb]
  41c8db:	aam    0x47
  41c8dd:	fcmovnbe st,st(7)
  41c8df:	ret    
  41c8e0:	lods   al,BYTE PTR ds:[esi]
  41c8e1:	sbb    eax,0xa22a079e
  41c8e6:	std    
  41c8e7:	xchg   DWORD PTR [ebp+0x2],ebp
  41c8ea:	xchg   edi,eax
  41c8eb:	jmp    0x41c955
  41c8ed:	mov    edx,?
  41c8ef:	sar    DWORD PTR [edi+0x6],cl
  41c8f2:	add    DWORD PTR [edi+0x5cfbf139],ebx
  41c8f8:	jno    0x41c8e4
  41c8fa:	call   0xfc3303d9
  41c8ff:	rol    BYTE PTR [esi],1
  41c901:	icebp  
  41c902:	sti    
  41c903:	jmp    0x1b2a6571
  41c908:	cdq    
  41c909:	jmp    0xd28:0xb175
  41c910:	jo     0x41c921
  41c912:	inc    ebp
  41c913:	pop    ebx
  41c914:	retf   0xb0e6
  41c917:	pop    ds
  41c918:	add    ch,cl
  41c91a:	sub    al,0x84
  41c91c:	inc    BYTE PTR [eax+0x45]
  41c91f:	push   edi
  41c920:	inc    esi
  41c921:	dec    ebp
  41c922:	sub    al,0x28
  41c924:	inc    ebx
  41c925:	rcl    DWORD PTR [esi],0x65
  41c928:	dec    ebx
  41c929:	(bad)  
  41c92a:	push   ss
  41c92b:	das    
  41c92c:	loop   0x41c91f
  41c92e:	push   es
  41c92f:	in     eax,0xc1
  41c931:	pop    es
  41c932:	adc    bl,BYTE PTR [edx+ebp*4+0x66bcf564]
  41c939:	in     eax,0x3c
  41c93b:	arpl   WORD PTR [esi-0x67],ax
  41c93e:	pop    eax
  41c93f:	shl    DWORD PTR [edx+0x6a],0xdd
  41c943:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c944:	add    dh,ah
  41c946:	mov    al,0x4f
  41c948:	add    ch,cl
  41c94a:	sub    al,0x84
  41c94c:	adc    esp,DWORD PTR [ecx-0x72b9a93a]
  41c952:	sub    al,0x28
  41c954:	inc    ebx
  41c955:	repz (bad) 
  41c957:	fs dec ebx
  41c959:	lock (bad) 
  41c95b:	cs loop 0x41c94f
  41c95e:	(bad)  
  41c95f:	in     al,0xc1
  41c961:	xchg   DWORD PTR [ebx+0x7564aa9b],esi
  41c967:	mov    bh,0x66
  41c969:	stc    
  41c96a:	pop    esp
  41c96b:	arpl   WORD PTR [esi+0x0],ax
  41c96e:	pop    edx
  41c96f:	stos   BYTE PTR es:[edi],al
  41c970:	std    
  41c971:	adc    eax,0xf4c20000
  41c976:	cmp    eax,DWORD PTR [eax]
  41c978:	adc    DWORD PTR [edi+edi*1-0x54],edx
  41c97c:	xchg   ebp,eax
  41c97d:	or     BYTE PTR es:[edx+0x7],ch
  41c981:	adc    esi,DWORD PTR [ebp+ebp*8-0x49f2f42f]
  41c988:	xchg   esi,eax
  41c989:	stos   BYTE PTR es:[edi],al
  41c98a:	xchg   DWORD PTR [ebp-0x2e11e],eax
  41c990:	(bad)  
  41c991:	das    
  41c992:	ret    
  41c993:	add    dh,al
  41c995:	outs   dx,DWORD PTR ds:[esi]
  41c996:	or     BYTE PTR ds:[ecx-0x1eb17836],al
  41c99d:	nop
  41c99e:	add    DWORD PTR [ebx+0x43],ebx
  41c9a1:	dec    esi
  41c9a2:	sub    ah,bh
  41c9a4:	xchg   ecx,eax
  41c9a5:	or     eax,DWORD PTR [ebx+0x1412ba4d]
  41c9ab:	retf   0xda96
  41c9ae:	std    
  41c9af:	jne    0x41ca27
  41c9b1:	pop    ebp
  41c9b2:	aas    
  41c9b3:	lods   al,BYTE PTR ds:[esi]
  41c9b4:	cmp    BYTE PTR ds:[ecx],0x0
  41c9b8:	xchg   esi,eax
  41c9b9:	outs   dx,DWORD PTR ds:[esi]
  41c9ba:	int3   
  41c9bb:	call   0x3ec616
  41c9c0:	or     bl,BYTE PTR [ebx]
  41c9c2:	jo     0x41ca00
  41c9c4:	rcl    DWORD PTR [ebp-0x6ab940f0],1
  41c9ca:	add    BYTE PTR [eax],al
  41c9cc:	cdq    
  41c9cd:	nop
  41c9ce:	sub    al,0x58
  41c9d0:	jecxz  0x41ca47
  41c9d2:	push   edi
  41c9d3:	call   DWORD PTR [ecx]
  41c9d5:	or     al,0x87
  41c9d7:	lea    eax,[eax]
  41c9d9:	add    BYTE PTR [edx],dh
  41c9db:	push   cs
  41c9dc:	std    
  41c9dd:	(bad)  
  41c9de:	out    dx,al
  41c9df:	mov    eax,ds:0x5711ffeb
  41c9e4:	mov    esp,0x6f0b2d74
  41c9e9:	adc    BYTE PTR [edi],ch
  41c9eb:	add    BYTE PTR [eax+0xc],0xb4
  41c9ef:	div    BYTE PTR [esi]
  41c9f1:	mov    eax,edx
  41c9f3:	adc    ecx,esp
  41c9f5:	cld    
  41c9f6:	adc    BYTE PTR [edx-0x31],cl
  41c9f9:	dec    edi
  41c9fa:	xor    edi,DWORD PTR [ebx-0x41]
  41c9fd:	or     al,0xaa
  41c9ff:	stc    
  41ca00:	add    al,0x0
  41ca02:	das    
  41ca03:	jo     0x41ca58
  41ca05:	hlt    
  41ca06:	sub    al,0x92
  41ca08:	in     al,0x7f
  41ca0a:	sub    edi,esi
  41ca0c:	add    BYTE PTR [ebx-0x805],al
  41ca12:	(bad)  
  41ca13:	xor    ebx,esi
  41ca15:	cld    
  41ca16:	rol    BYTE PTR [ebx+0x3cb30cc4],1
  41ca1c:	add    eax,0x438a2f00
  41ca21:	lock cld 
  41ca23:	inc    ebx
  41ca24:	xor    eax,0x76f629c6
  41ca29:	jp     0x41c9ce
  41ca2b:	pop    edi
  41ca2c:	mov    al,0x4f
  41ca2e:	mov    al,ds:0x54d77e5c
  41ca33:	inc    esp
  41ca34:	pop    ecx
  41ca35:	outs   dx,DWORD PTR ds:[esi]
  41ca36:	push   esi
  41ca37:	jmp    0x69d5:0x801175cf
  41ca3e:	add    BYTE PTR [eax],al
  41ca40:	sbb    edi,DWORD PTR [ebx+edx*2-0x1c]
  41ca44:	stos   BYTE PTR es:[edi],al
  41ca45:	cmp    eax,0xf2705001
  41ca4a:	xor    edx,DWORD PTR [esi]
  41ca4c:	out    dx,eax
  41ca4d:	test   BYTE PTR [ebx+eax*8+0x73c48233],0x29
  41ca55:	cmp    al,0x7f
  41ca57:	lds    esi,FWORD PTR [esi+esi*8-0x1]
  41ca5b:	inc    DWORD PTR [edx+esi*1]
  41ca5e:	shl    BYTE PTR [ecx+0x61],1
  41ca61:	mov    al,ds:0xddf1fe44
  41ca66:	icebp  
  41ca67:	xor    DWORD PTR [edx+0x5959e6d5],0x77
  41ca6e:	adc    ch,BYTE PTR [ebp+0x4e9ed21]
  41ca74:	push   ss
  41ca75:	test   eax,0x593855fe
  41ca7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca7b:	rcl    DWORD PTR [ecx+0x2f030f1e],cl
  41ca81:	fsubrp st(6),st
  41ca83:	les    esp,FWORD PTR [ebp+0x2f02bf5c]
  41ca89:	fidiv  WORD PTR [edx]
  41ca8b:	fdiv   QWORD PTR [ecx]
  41ca8d:	mov    bl,0xd2
  41ca8f:	rcl    bh,1
  41ca91:	fist   WORD PTR [edi]
  41ca93:	les    ebp,FWORD PTR [ebp+ebx*1-0x652dfac2]
  41ca9a:	mov    ecx,0x16ee6d7c
  41ca9f:	fmul   QWORD PTR [eax+0xd0aa8d]
  41caa5:	add    BYTE PTR [edi-0xa],bl
  41caa8:	push   ebx
  41caa9:	adc    al,0xb2
  41caab:	in     al,dx
  41caac:	ins    BYTE PTR es:[edi],dx
  41caad:	push   esi
  41caae:	mov    ds:0xa23c1ef5,eax
  41cab3:	in     al,dx
  41cab4:	data16 mov ds:0xa74674dd,ax
  41cabb:	lea    edx,[ecx+0x72ecf45f]
  41cac1:	xchg   eax,eax
  41cac3:	jno    0x41ca90
  41cac5:	pop    ebp
  41cac6:	and    ebp,ebp
  41cac8:	fsubr  st(7),st
  41caca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cacb:	mov    ds:0xd26a3381,al
  41cad0:	mov    ebp,0x66de20f9
  41cad5:	(bad)  
  41cad6:	and    al,0x63
  41cad8:	sub    dl,BYTE PTR [esi+0x27]
  41cadb:	mov    cs,edi
  41cadd:	imul   edx,DWORD PTR [edi-0x64],0xe95fa000
  41cae4:	lea    esi,[eax+eiz*2+0x5fb11504]
  41caeb:	jmp    0xea8a1f7d
  41caf0:	sti    
  41caf1:	push   ss
  41caf2:	add    al,0x2c
  41caf4:	leave  
  41caf5:	jmp    0x1187b426
  41cafa:	xchg   ebx,eax
  41cafb:	mov    al,ds:0x1a71c2e8
  41cb00:	or     al,0x6b
  41cb02:	and    eax,0xd6eefbe7
  41cb07:	inc    eax
  41cb08:	add    ecx,ebp
  41cb0a:	add    BYTE PTR [eax],al
  41cb0c:	sub    al,0x57
  41cb0e:	inc    esi
  41cb0f:	stc    
  41cb10:	cmp    eax,0x1e605105
  41cb15:	(bad)  
  41cb17:	mov    edi,0x70fbe918
  41cb1c:	data16 (bad) 
  41cb1e:	aaa    
  41cb1f:	stos   BYTE PTR es:[edi],al
  41cb20:	addr16 mov ds:0x1439,eax
  41cb24:	mov    ebx,0x695c3c71
  41cb29:	fld    DWORD PTR [edi-0x722daa67]
  41cb2f:	daa    
  41cb30:	test   al,0x92
  41cb32:	push   eax
  41cb33:	xchg   esi,eax
  41cb34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb35:	(bad)  
  41cb36:	adc    ch,BYTE PTR [ecx]
  41cb38:	xor    ebx,DWORD PTR [ebp-0x3b]
  41cb3b:	cmc    
  41cb3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb3d:	sub    esi,DWORD PTR [ebp-0x11]
  41cb40:	in     eax,dx
  41cb41:	push   0xffffffc2
  41cb43:	xchg   edx,eax
  41cb44:	sub    bl,dh
  41cb46:	add    BYTE PTR [edx+0x496ece3f],dh
  41cb4c:	push   esp
  41cb4d:	rol    BYTE PTR [eax+0x6feb64df],1
  41cb53:	out    0x71,al
  41cb55:	jo     0x41cb5f
  41cb57:	(bad)  
  41cb58:	out    0xcd,al
  41cb5a:	ret    0x8000
  41cb5d:	out    0xfb,eax
  41cb5f:	out    0xf8,eax
  41cb61:	stos   BYTE PTR es:[edi],al
  41cb62:	std    
  41cb63:	(bad)  
  41cb64:	stc    
  41cb65:	test   BYTE PTR [eax],cl
  41cb67:	call   0x3f9b60
  41cb6c:	mov    ebx,0xe80c84
  41cb71:	add    BYTE PTR [ecx-0x5300025d],bl
  41cb77:	ret    0x4587
  41cb7a:	mov    cs,WORD PTR [eax-0x1ad6b000]
  41cb80:	dec    ebx
  41cb81:	push   ss
  41cb82:	(bad)  
  41cb83:	fimul  WORD PTR [ecx-0x3fa0d9bb]
  41cb89:	or     al,0x85
  41cb8b:	and    cl,BYTE PTR ds:0x87aef26a
  41cb91:	inc    ebp
  41cb92:	scas   al,BYTE PTR es:[edi]
  41cb93:	scas   al,BYTE PTR es:[edi]
  41cb94:	std    
  41cb95:	adc    eax,0x3bf40a
  41cb9a:	inc    ebp
  41cb9b:	and    ecx,DWORD PTR [eax]
  41cb9d:	lea    eax,[ebx]
  41cb9f:	push   0x4b
  41cba1:	call   0x3f7651
  41cba6:	dec    ebx
  41cba7:	inc    esi
  41cba8:	sub    ah,bh
  41cbaa:	mov    DWORD PTR [ebx],ebx
  41cbac:	mov    BYTE PTR [ebp-0x73],0xe1
  41cbb0:	call   0x120a9bc
  41cbb5:	inc    DWORD PTR [ebx+0x2e]
  41cbb8:	in     al,0xa3
  41cbba:	je     0x41cbd7
  41cbbc:	std    
  41cbbd:	call   DWORD PTR [ebx-0x3b641c02]
  41cbc3:	sbb    edi,ebp
  41cbc5:	mov    dl,BYTE PTR [ebx+0x17]
  41cbc8:	pop    ebp
  41cbc9:	pop    esi
  41cbca:	sbb    eax,0x860cc229
  41cbcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cbd0:	mov    esp,ebp
  41cbd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cbd3:	mov    bl,0x89
  41cbd5:	mov    BYTE PTR [eax],0x0
  41cbd8:	das    
  41cbd9:	popf   
  41cbda:	push   ebp
  41cbdb:	add    BYTE PTR [edi],ch
  41cbdd:	cmc    
  41cbde:	xlat   BYTE PTR ds:[ebx]
  41cbdf:	push   ss
  41cbe0:	sub    esi,ebp
  41cbe2:	push   DWORD PTR [eax]
  41cbe4:	fs inc edi
  41cbe6:	das    
  41cbe7:	push   ecx
  41cbe8:	inc    eax
  41cbe9:	sub    eax,esi
  41cbeb:	mov    BYTE PTR [edi],dh
  41cbed:	push   ebx
  41cbee:	retf   
  41cbef:	adc    cl,BYTE PTR [ebx-0x7fffc017]
  41cbf5:	outs   dx,BYTE PTR ds:[esi]
  41cbf6:	add    eax,0xcb0588e8
  41cbfb:	cld    
  41cbfc:	push   esi
  41cbfd:	stc    
  41cbfe:	pop    eax
  41cbff:	add    al,0x5d
  41cc01:	mov    bh,0xd6
  41cc03:	dec    ecx
  41cc04:	enter  0x32d7,0x40
  41cc08:	das    
  41cc09:	mov    eax,0xf7331048
  41cc0e:	(bad)  
  41cc0f:	inc    DWORD PTR [ebp+0x33447afb]
  41cc15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc16:	int    0x34
  41cc18:	loopne 0x41cbe3
  41cc1a:	int    0x12
  41cc1c:	mov    ds:0xac003ff2,eax
  41cc21:	cmp    ch,bh
  41cc23:	cld    
  41cc24:	jp     0x41cc2d
  41cc26:	push   ebx
  41cc27:	call   0x1989088
  41cc2c:	pop    esp
  41cc2d:	(bad)  
  41cc2e:	int    0x72
  41cc30:	and    eax,DWORD PTR [eax+0x54]
  41cc33:	or     BYTE PTR [eax+0x6b12cd11],ch
  41cc39:	jmp    0xc1a6:0x3f
  41cc40:	or     BYTE PTR [ecx],bh
  41cc42:	ins    BYTE PTR es:[edi],dx
  41cc43:	jmp    0xfff7:0x4f7188f6
  41cc4a:	xor    bh,0xd8
  41cc4d:	mov    bl,0xbf
  41cc4f:	imul   BYTE PTR [ecx+ebx*2]
  41cc52:	rcr    ch,cl
  41cc54:	daa    
  41cc55:	add    BYTE PTR [edi],ch
  41cc57:	nop
  41cc58:	mov    dl,0x78
  41cc5a:	push   eax
  41cc5b:	test   BYTE PTR [esi],0x4
  41cc5e:	das    
  41cc5f:	ficomp WORD PTR [esi+0x46]
  41cc62:	sub    edx,DWORD PTR [ebp+0x5]
  41cc65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc66:	sbb    eax,0x8086e99e
  41cc6b:	jb     0x41cc57
  41cc6d:	xor    edi,DWORD PTR [edx]
  41cc6f:	adc    DWORD PTR [edi+0x66],esp
  41cc72:	sub    ebx,esi
  41cc74:	outs   dx,BYTE PTR ds:[esi]
  41cc75:	push   es
  41cc76:	lods   al,BYTE PTR ds:[esi]
  41cc77:	sbb    eax,0xe97f0596
  41cc7c:	cmp    al,BYTE PTR [ecx+0x2daade52]
  41cc82:	out    dx,al
  41cc83:	push   esp
  41cc84:	lods   al,BYTE PTR ds:[esi]
  41cc85:	sti    
  41cc86:	lods   eax,DWORD PTR ds:[esi]
  41cc87:	sbb    eax,0xe970f876
  41cc8c:	fsub   QWORD PTR [ebx-0x7f1661e3]
  41cc92:	mov    dl,dh
  41cc94:	jmp    0xce974a59
  41cc99:	adc    ah,0xc5
  41cc9c:	call   0x33cefba4
  41cca1:	jnp    0x41cca3
  41cca3:	add    BYTE PTR [ebp-0x16],ch
  41cca6:	data16 retfw 
  41cca9:	fist   DWORD PTR [edx]
  41ccab:	jns    0x41cc7e
  41ccad:	and    al,0xea
  41ccaf:	int3   
  41ccb0:	and    al,0x62
  41ccb2:	ss pop es
  41ccb4:	jbe    0x41cc93
  41ccb6:	mov    ds:0xe635b33f,al
  41ccbb:	push   edi
  41ccbc:	sub    DWORD PTR [edi-0x61],ebx
  41ccbf:	add    ebp,DWORD PTR [edi]
  41ccc1:	pop    esi
  41ccc2:	jmp    0xd704:0x2970848c
  41ccc9:	fdivrp st(4),st
  41cccb:	push   es
  41cccc:	ret    0xe9
  41cccf:	(bad)  
  41ccd0:	in     al,dx
  41ccd1:	fucomp st(0)
  41ccd3:	ds arpl cx,bp
  41ccd6:	sti    
  41ccd7:	shr    DWORD PTR [edi+ecx*4],cl
  41ccda:	push   0x9d6b81
  41ccdf:	ret    
  41cce0:	sub    al,0x76
  41cce2:	enter  0xecd1,0xdd
  41cce6:	sti    
  41cce7:	mov    esp,0xb7fb9144
  41ccec:	sub    bl,ch
  41ccee:	adc    eax,0xa84179
  41ccf3:	pusha  
  41ccf4:	jmp    0xf25c:0x2b2985d5
  41ccfb:	jmp    0xeda8ab2c
  41cd00:	cdq    
  41cd01:	xchg   esp,eax
  41cd02:	or     BYTE PTR [eax+0x2e509376],bh
  41cd08:	add    BYTE PTR [eax],al
  41cd0a:	jno    0x41cce2
  41cd0c:	add    ecx,ebp
  41cd0e:	sub    al,0xde
  41cd10:	sti    
  41cd11:	fsub   QWORD PTR [eax-0x2b16bf34]
  41cd17:	pop    ecx
  41cd18:	(bad)  
  41cd1a:	hlt    
  41cd1b:	push   esi
  41cd1c:	ds (bad) 
  41cd1e:	fisub  WORD PTR [edi-0x21cc6e00]
  41cd24:	add    BYTE PTR [ecx-0xb8a1dd9],cl
  41cd2a:	in     al,0x29
  41cd2c:	movsx  esi,ah
  41cd2f:	pop    ebx
  41cd30:	shl    esi,0x38
  41cd33:	pop    esp
  41cd34:	add    ecx,ebp
  41cd36:	sub    al,0x53
  41cd38:	inc    esi
  41cd39:	icebp  
  41cd3a:	pop    esp
  41cd3b:	push   ebx
  41cd3c:	xchg   BYTE PTR [eax+0x39fbea75],ah
  41cd42:	ins    BYTE PTR es:[edi],dx
  41cd43:	pushf  
  41cd44:	or     cl,ch
  41cd46:	sub    ebx,esi
  41cd48:	add    BYTE PTR [eax],al
  41cd4a:	mov    cl,0xed
  41cd4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd4d:	adc    edx,DWORD PTR [esi-0x1e]
  41cd50:	jg     0x41cd12
  41cd52:	jnp    0x41ccde
  41cd54:	mov    eax,0xdb86ff
  41cd59:	cmp    DWORD PTR [ebx-0x74bdf31d],ebx
  41cd5f:	jecxz  0x41cd26
  41cd61:	test   BYTE PTR [ebx+0x1a],cl
  41cd64:	(bad)  
  41cd65:	jmp    ecx
  41cd67:	loope  0x41ccf0
  41cd69:	test   edi,ebp
  41cd6b:	adc    edi,ebp
  41cd6d:	inc    DWORD PTR [eax]
  41cd6f:	add    BYTE PTR [esi+0x54740f14],ah
  41cd75:	fwait
  41cd76:	add    BYTE PTR [ecx-0x3f811c75],cl
  41cd7c:	retf   0x66a1
  41cd7f:	adc    DWORD PTR [ebx+0x41fee45d],edx
  41cd85:	adc    esp,DWORD PTR [esp+edx*8-0x42]
  41cd89:	call   0x1647:0xed315000
  41cd90:	(bad)  
  41cd91:	fimul  DWORD PTR [ecx-0x3f9ff1bb]
  41cd97:	or     al,0xae
  41cd99:	push   es
  41cd9a:	jbe    0x41cddc
  41cd9c:	(bad)  
  41cd9d:	gs jg  0x41cda5
  41cda0:	iret   
  41cda1:	adc    al,0xfd
  41cda3:	call   DWORD PTR [esi]
  41cda5:	adc    ecx,DWORD PTR [edi]
  41cda7:	in     al,0xd4
  41cda9:	call   0x8350:0xea1b8b00
  41cdb0:	xchg   esi,eax
  41cdb1:	out    dx,eax
  41cdb2:	dec    ebx
  41cdb3:	lea    ecx,[ebx+0x3]
  41cdb6:	(bad)  
  41cdb7:	inc    DWORD PTR [ecx-0x61890256]
  41cdbd:	adc    edx,ebp
  41cdbf:	add    DWORD PTR [ebx+0x16],0xfffffffc
  41cdc3:	je     0x41cdf4
  41cdc5:	jecxz  0x41cdf9
  41cdc7:	push   0x3c
  41cdc9:	fstp   st(4)
  41cdcb:	ja     0x41cdbc
  41cdcd:	hlt    
  41cdce:	(bad)  
  41cdcf:	jne    0x41ce08
  41cdd1:	push   0x80ae
  41cdd6:	ja     0x41cdcd
  41cdd8:	push   eax
  41cdd9:	sbb    BYTE PTR [esi*1+0x24ff5030],bh
  41cde0:	(bad)  
  41cde1:	jne    0x41ce1a
  41cde3:	mov    al,dh
  41cde5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cde6:	inc    edx
  41cde7:	xor    eax,0xf5578100
  41cdec:	push   eax
  41cded:	add    al,0xb5
  41cdef:	mov    ah,0xda
  41cdf1:	add    al,0x57
  41cdf3:	(bad)  
  41cdf7:	loop   0x41cdb8
  41cdf9:	pop    esp
  41cdfa:	ror    DWORD PTR [ebx-0x43],1
  41cdfd:	shl    DWORD PTR [ebx],0xf7
  41ce00:	xor    BYTE PTR [ecx+0x51352713],cl
  41ce06:	add    DWORD PTR [eax-0x3255ab31],0xef950e4b
  41ce10:	pop    ebp
  41ce11:	add    BYTE PTR [ecx-0x1c],bl
  41ce14:	jmp    0x41ce65
  41ce16:	and    DWORD PTR [edi],esi
  41ce18:	add    BYTE PTR [ecx+0x628303eb],al
  41ce1e:	out    0xf7,eax
  41ce20:	mov    bh,bh
  41ce22:	xor    bh,dh
  41ce24:	call   DWORD PTR [edi+eax*8-0x2b]
  41ce28:	adc    al,0xfd
  41ce2a:	rol    BYTE PTR [eax-0x131b7d54],1
  41ce30:	jnp    0x41cdbd
  41ce32:	das    
  41ce33:	idiv   edi
  41ce35:	cmp    BYTE PTR [edx],0xfb
  41ce38:	push   DWORD PTR [ebx+0x0]
  41ce3b:	add    BYTE PTR ds:0x22fd04a1,bl
  41ce41:	fdivrp st(5),st
  41ce43:	enter  0xe3d,0xf8
  41ce47:	inc    ebx
  41ce48:	das    
  41ce49:	mov    ds:0xde2f02e7,eax
  41ce4e:	adc    al,0x65
  41ce50:	mov    ah,0x9b
  41ce52:	test   DWORD PTR [esi+esi*4],esi
  41ce55:	fwait
  41ce56:	icebp  
  41ce57:	xor    dh,bl
  41ce59:	in     al,0xf9
  41ce5b:	sti    
  41ce5c:	test   eax,0x3dc96d63
  41ce61:	and    bh,ch
  41ce63:	inc    ebx
  41ce64:	das    
  41ce65:	pop    ebx
  41ce66:	sub    dl,BYTE PTR [eax-0x1b]
  41ce69:	pop    eax
  41ce6a:	lods   eax,DWORD PTR ds:[esi]
  41ce6b:	(bad)  
  41ce6c:	lods   eax,DWORD PTR ds:[esi]
  41ce6d:	push   ds
  41ce6e:	(bad)  
  41ce6f:	or     cl,BYTE PTR [eax-0x66]
  41ce72:	inc    ecx
  41ce73:	add    ebp,0xffffffe5
  41ce76:	das    
  41ce77:	clc    
  41ce78:	cmp    ch,ah
  41ce7a:	mov    edx,0xb5ecac10
  41ce7f:	mov    esi,DWORD PTR [edi-0x8fb126d]
  41ce85:	cmc    
  41ce86:	rcr    DWORD PTR [eax],1
  41ce88:	sbb    ah,ch
  41ce8a:	ins    DWORD PTR es:[edi],dx
  41ce8b:	les    ebx,FWORD PTR [ebx+edi*4+0x590b4f0a]
  41ce92:	in     al,dx
  41ce93:	add    al,0x69
  41ce95:	ficom  DWORD PTR [esi-0x5a3505cd]
  41ce9b:	icebp  
  41ce9c:	xor    dh,bl
  41ce9e:	pop    esi
  41ce9f:	aas    
  41cea0:	add    BYTE PTR [eax],al
  41cea2:	jmp    0x41cf04
  41cea4:	scas   al,BYTE PTR es:[edi]
  41cea5:	mul    ecx
  41cea7:	call   0xbec1:0x90abdce5
  41ceae:	add    esp,ebp
  41ceb0:	retf   0xc993
  41ceb3:	not    esi
  41ceb5:	xor    al,0xd7
  41ceb7:	sub    BYTE PTR [ebx],cl
  41ceb9:	leave  
  41ceba:	mov    ebx,0x60bf015a
  41cebf:	(bad)  
  41cec1:	test   DWORD PTR [esp+esi*1-0x518859d4],0x87453ec0
  41cecc:	leave  
  41cecd:	stos   DWORD PTR es:[edi],eax
  41cece:	xchg   esp,eax
  41cecf:	in     al,0x54
  41ced1:	bound  esp,QWORD PTR [eax+0x5d]
  41ced4:	in     eax,dx
  41ced5:	fnstsw WORD PTR [ebx]
  41ced7:	mov    ebp,DWORD PTR [edi]
  41ced9:	mov    ds:0xe9807643,al
  41cede:	sub    al,0xde
  41cee0:	data16 jmp 0x41cf06
  41cee3:	js     0x41cee6
  41cee5:	shr    DWORD PTR [esi+ebx*8],1
  41cee8:	add    BYTE PTR [ecx+0x610c6f67],ch
  41ceee:	or     ebx,esp
  41cef0:	sti    
  41cef1:	hlt    
  41cef2:	sbb    al,0xd0
  41cef4:	inc    eax
  41cef5:	jmp    0x3ec1bbbd
  41cefa:	rol    DWORD PTR [si+0x2c54],1
  41ceff:	fiadd  WORD PTR [eax]
  41cf01:	xchg   edi,eax
  41cf02:	mov    dh,0xe3
  41cf04:	or     ebp,ecx
  41cf06:	add    BYTE PTR [eax],al
  41cf08:	sub    al,0x8c
  41cf0a:	call   0xfc2306c2
  41cf0f:	pusha  
  41cf10:	push   ecx
  41cf11:	jmp    0xa489:0x6f782a37
  41cf18:	hlt    
  41cf19:	lods   al,BYTE PTR ds:[esi]
  41cf1a:	pop    ebp
  41cf1b:	fldcw  WORD PTR [eax-0x2d]
  41cf1e:	dec    edi
  41cf1f:	mul    BYTE PTR [edx-0x32]
  41cf22:	sti    
  41cf23:	aam    0x9c
  41cf25:	int    0x40
  41cf27:	jmp    0xe943af63
  41cf2c:	sub    al,0x6f
  41cf2e:	push   esp
  41cf2f:	outs   dx,BYTE PTR fs:[esi]
  41cf31:	out    dx,al
  41cf32:	push   eax
  41cf33:	bound  ebp,QWORD PTR [esi-0x2a]
  41cf36:	push   edx
  41cf37:	add    cl,ch
  41cf39:	(bad)  
  41cf3a:	hlt    
  41cf3b:	push   esi
  41cf3d:	loope  0x41cf3b
  41cf3f:	adc    eax,0x3bed3a
  41cf44:	adc    ebx,DWORD PTR [edx]
  41cf46:	jo     0x41cf84
  41cf48:	sbb    eax,0xc53bf09d
  41cf4d:	mov    fs,WORD PTR [esi]
  41cf4f:	add    DWORD PTR [ebx+0x12],eax
  41cf52:	jnp    0x41cfd1
  41cf54:	sahf   
  41cf55:	fiadd  DWORD PTR [eax]
  41cf57:	mov    al,ds:0x53239496
  41cf5c:	or     esp,DWORD PTR [ebp+0x1b1651ec]
  41cf62:	outs   dx,DWORD PTR ds:[esi]
  41cf63:	hlt    
  41cf64:	inc    ecx
  41cf65:	sbb    ecx,DWORD PTR [edi]
  41cf67:	cmp    al,0x64
  41cf69:	lahf   
  41cf6a:	add    BYTE PTR [ebp-0x71fa0000],al
  41cf70:	jnp    0x457adef9
  41cf76:	or     cl,BYTE PTR [esi-0x4bc2145f]
  41cf7c:	std    
  41cf7d:	adc    eax,0x3bf02a
  41cf82:	add    BYTE PTR [ebp-0x72a6fe03],bl
  41cf88:	hlt    
  41cf89:	call   0x3f9bc6
  41cf8e:	loope  0x41cfab
  41cf90:	xadd   BYTE PTR [edi+ebx*4],dl
  41cf94:	add    BYTE PTR [esi-0x22],bl
  41cf97:	mov    ch,0xfd
  41cf99:	jne    0x41cf99
  41cf9b:	sbb    ebp,DWORD PTR [edi+0xc]
  41cf9e:	push   ds
  41cf9f:	cmp    BYTE PTR [edx],ch
  41cfa1:	(bad)  
  41cfa2:	stc    
  41cfa3:	fs ds (bad) 
  41cfa6:	mov    ecx,0xdac2c3b7
  41cfab:	fimul  WORD PTR [edi-0x75]
  41cfae:	jmp    0x2aa8:0x2f18e85f
  41cfb5:	push   ebp
  41cfb6:	enter  0xf889,0x8a
  41cfba:	cmp    cl,BYTE PTR [ecx]
  41cfbc:	fsubr  st,st(0)
  41cfbe:	icebp  
  41cfbf:	hlt    
  41cfc0:	inc    DWORD PTR [ebx-0x7fc95f11]
  41cfc6:	sub    ch,BYTE PTR [edi]
  41cfc8:	add    dh,BYTE PTR [ebx+0x2a]
  41cfcb:	iret   
  41cfcc:	add    BYTE PTR [ebp-0x7c],bl
  41cfcf:	test   BYTE PTR [esi],0xfd
  41cfd2:	add    BYTE PTR [eax],al
  41cfd4:	nop
  41cfd5:	shl    esp,0x88
  41cfd8:	add    bh,ch
  41cfda:	ret    0x8772
  41cfdd:	pop    ebx
  41cfde:	push   ecx
  41cfdf:	in     al,dx
  41cfe0:	xchg   ebp,ebp
  41cfe2:	ret    
  41cfe3:	cld    
  41cfe4:	jo     0x41d056
  41cfe6:	mov    edi,0x50744373
  41cfeb:	lock mov ah,0xb3
  41cfee:	jbe    0x41cfbd
  41cff0:	inc    edi
  41cff1:	ds (bad) 
  41cff3:	cld    
  41cff4:	push   eax
  41cff5:	jo     0x41cfb6
  41cff7:	jae    0x41d02c
  41cff9:	dec    eax
  41cffa:	add    eax,0xa6e72de9
  41cfff:	cld    
  41d000:	ret    0xd790
  41d003:	ja     0x41d006
  41d005:	lods   al,BYTE PTR ds:[esi]
  41d006:	ret    0xa2fc
  41d009:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d00a:	xlat   BYTE PTR ds:[ebx]
  41d00b:	outs   dx,DWORD PTR ds:[esi]
  41d00c:	push   ecx
  41d00d:	mov    eax,0x20ec89c2
  41d012:	es pop ecx
  41d014:	out    0xb5,al
  41d016:	repz jmp DWORD PTR [ebx+0x7c]
  41d01a:	ror    DWORD PTR [esi+0x5e],cl
  41d01d:	dec    edi
  41d01e:	les    esi,FWORD PTR [edi+0x6f]
  41d021:	test   edx,0x40063312
  41d027:	add    BYTE PTR [esi-0x107d37c6],dh
  41d02d:	ficomp WORD PTR [edx+eax*1-0x10]
  41d031:	sbb    eax,0xd6472d37
  41d036:	push   eax
  41d037:	inc    esp
  41d038:	add    BYTE PTR [eax],al
  41d03a:	das    
  41d03b:	mov    ss,WORD PTR [esi]
  41d03d:	(bad)
  41d040:	mov    ebp,0x6eddf8f2
  41d045:	lods   al,BYTE PTR ds:[esi]
  41d046:	lods   eax,DWORD PTR ds:[esi]
  41d047:	add    eax,0xda17403e
  41d04c:	fld    DWORD PTR [ebx]
  41d04e:	das    
  41d04f:	je     0x41d042
  41d051:	les    ebx,FWORD PTR [ebp-0x4a]
  41d054:	mov    bl,0x41
  41d056:	das    
  41d057:	loope  0x41d055
  41d059:	push   edi
  41d05a:	sbb    eax,0x7878e99e
  41d05f:	pop    ebx
  41d060:	adc    DWORD PTR [eax+0x46],0xffffff88
  41d064:	ins    BYTE PTR es:[edi],dx
  41d065:	aas    
  41d066:	jae    0x41cff6
  41d068:	sbb    al,BYTE PTR [esi+0x3e9d16b]
  41d06e:	aad    0xdd
  41d070:	jo     0x41d0c1
  41d072:	pop    ebx
  41d073:	loope  0x41d0ab
  41d075:	jg     0x41d007
  41d077:	imul   esp,ebx,0x78
  41d07a:	in     eax,dx
  41d07b:	loope  0x41d08b
  41d07d:	mov    esi,0xbe2b9d33
  41d082:	sub    al,0xd9
  41d084:	jmp    0x41cafb61
  41d089:	iret   
  41d08a:	push   ebp
  41d08b:	loope  0x41d0b7
  41d08d:	and    ch,BYTE PTR es:[ebx+0x21]
  41d091:	lds    edi,FWORD PTR ds:0x2f43f6da
  41d097:	push   ebp
  41d098:	sub    esp,DWORD PTR ds:0x2f271766
  41d09e:	add    BYTE PTR [eax],al
  41d0a0:	mov    dh,0xf1
  41d0a2:	cwde   
  41d0a3:	or     BYTE PTR [ebp-0x59d2161e],0xaa
  41d0aa:	add    BYTE PTR [ebp-0x28],dl
  41d0ad:	mov    al,ds:0x9c599600
  41d0b2:	cld    
  41d0b3:	cmp    DWORD PTR [ebp-0x22],esi
  41d0b6:	or     bp,dx
  41d0b9:	imul   ecx,DWORD PTR [eax],0xffffffd6
  41d0bc:	call   0x45a9:0x354c15b
  41d0c3:	lds    ebp,FWORD PTR [eax-0x61]
  41d0c6:	sti    
  41d0c7:	aam    0xbc
  41d0c9:	int    0x40
  41d0cb:	jmp    0x34b8b97f
  41d0d0:	xor    edx,DWORD PTR [edi+0x46]
  41d0d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0d4:	in     al,dx
  41d0d5:	imul   ebp,DWORD PTR [esi],0xfbb4e291
  41d0db:	xchg   esi,eax
  41d0dc:	pop    es
  41d0dd:	jmp    0xbb325f67
  41d0e2:	lea    ebp,[edi+eiz*2]
  41d0e5:	nop
  41d0e6:	push   ebx
  41d0e7:	adc    ecx,DWORD PTR [ebp-0x1d]
  41d0ea:	jne    0x41d0cd
  41d0ec:	jae    0x41d0f8
  41d0ee:	xor    BYTE PTR [ecx+0x2d],0x6d
  41d0f2:	adc    BYTE PTR [edx+0x19],dh
  41d0f5:	rol    BYTE PTR [ebp-0x78231fd7],cl
  41d0fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0fc:	jo     0x41d155
  41d0fe:	or     DWORD PTR [edx-0x7d],esp
  41d101:	cmc    
  41d102:	or     BYTE PTR [esi+0x64540000],bl
  41d108:	sub    eax,0xc0ad6b3e
  41d10d:	xchg   esi,eax
  41d10e:	push   edx
  41d10f:	pop    ss
  41d110:	mov    edi,0x878b2ce1
  41d115:	adc    eax,0x1d665d5d
  41d11a:	sub    al,0x88
  41d11c:	xchg   esp,ebx
  41d11e:	mov    ah,0xcc
  41d120:	inc    eax
  41d121:	jmp    0x882479
  41d126:	xor    ch,BYTE PTR [ebx-0x6e0eff9a]
  41d12c:	or     al,0xff
  41d12e:	imul   esp,ebx,0xfffffffc
  41d131:	(bad)  
  41d132:	dec    ebx
  41d133:	sbb    ebp,DWORD PTR [edi+0x3f]
  41d136:	setne  ah
  41d139:	je     0x41d147
  41d13b:	sbb    ecx,DWORD PTR [edi]
  41d13d:	adc    ch,al
  41d13f:	fwait
  41d140:	add    BYTE PTR [ebx+0x2f6fa0de],al
  41d146:	cmp    eax,0x8683fc95
  41d14b:	fdiv   DWORD PTR [edi+eiz*1+0x6e]
  41d14f:	fsub   DWORD PTR [edi]
  41d151:	call   ecx
  41d153:	dec    edi
  41d154:	hlt    
  41d155:	test   ecx,edx
  41d157:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d158:	sbb    al,0x8d
  41d15a:	dec    ebx
  41d15b:	push   ds
  41d15c:	dec    esp
  41d15d:	push   edi
  41d15e:	mov    eax,ds:0x1bff0ca5
  41d163:	sar    ch,cl
  41d165:	(bad)  
  41d166:	add    eax,0x74fb22
  41d16b:	add    BYTE PTR [edx+0x4eebc550],cl
  41d171:	test   al,ch
  41d173:	adc    esp,DWORD PTR [ebx+0x633fd1c]
  41d179:	jnp    0x41d1d5
  41d17b:	leave  
  41d17c:	add    al,0xd2
  41d17e:	add    BYTE PTR [ebp-0x33],dl
  41d181:	sub    eax,0xb4d5514b
  41d186:	cld    
  41d187:	add    BYTE PTR [ebp+0x7bff5585],dl
  41d18d:	iret   
  41d18e:	std    
  41d18f:	adc    eax,0x40c8ea
  41d194:	push   ecx
  41d195:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d196:	adc    al,0x8b
  41d198:	sti    
  41d199:	sbb    cl,BYTE PTR [edi]
  41d19b:	inc    eax
  41d19c:	push   es
  41d19d:	push   eax
  41d19e:	aam    0x8d
  41d1a0:	das    
  41d1a1:	xor    bh,BYTE PTR [edi+ecx*2-0x42f3b600]
  41d1a8:	clc    
  41d1a9:	xlat   BYTE PTR ds:[ebx]
  41d1aa:	add    al,0x0
  41d1ac:	pop    eax
  41d1ad:	loopne 0x41d1e7
  41d1af:	or     al,ch
  41d1b1:	mov    esi,0x515abf89
  41d1b6:	mov    edi,0x3fe43f12
  41d1bb:	add    BYTE PTR [esp+edi*8+0x7c5e733d],ch
  41d1c2:	dec    eax
  41d1c3:	cld    
  41d1c4:	add    al,0x2d
  41d1c6:	cmovne ebp,esp
  41d1c9:	mov    ah,0x38
  41d1cb:	inc    esi
  41d1cc:	(bad)  
  41d1cd:	ja     0x41d1ba
  41d1cf:	cld    
  41d1d0:	add    BYTE PTR [eax],al
  41d1d2:	test   al,0x7d
  41d1d4:	dec    eax
  41d1d5:	clc    
  41d1d6:	stos   BYTE PTR es:[edi],al
  41d1d7:	xor    al,0x34
  41d1d9:	cmp    ch,ah
  41d1db:	mov    ds:0xa52372bf,eax
  41d1e0:	mov    edi,0x3fe43712
  41d1e5:	add    BYTE PTR [eax-0xd74e737],al
  41d1eb:	pop    eax
  41d1ec:	push   eax
  41d1ed:	std    
  41d1ee:	cli    
  41d1ef:	pop    esp
  41d1f0:	push   edi
  41d1f1:	std    
  41d1f2:	loop   0x41d1f0
  41d1f4:	mov    esi,0x46cacd5
  41d1f9:	jae    0x41d239
  41d1fb:	ins    BYTE PTR es:[edi],dx
  41d1fc:	dec    eax
  41d1fd:	adc    BYTE PTR [edx-0x4bfccc4c],ch
  41d203:	cmp    DWORD PTR [esi+eax*4-0x7b783c9],edi
  41d20a:	inc    esp
  41d20b:	jmp    0x2c3c:0x8c3772be
  41d212:	sub    BYTE PTR ds:0x6d80bff3,dl
  41d218:	pop    edx
  41d219:	(bad)  
  41d21a:	in     eax,dx
  41d21b:	fdivp  st(1),st
  41d21d:	add    edi,DWORD PTR [ecx+ebp*2+0xd]
  41d221:	xchg   BYTE PTR [ebx+ebp*8],dl
  41d224:	mov    dh,0x59
  41d226:	mov    dh,0x13
  41d228:	outs   dx,BYTE PTR ds:[esi]
  41d229:	sbb    BYTE PTR [edi-0x22],ch
  41d22c:	call   0xeb48:0x6d392b2d
  41d233:	cs gs dec eax
  41d236:	add    BYTE PTR [eax],al
  41d238:	fld    TBYTE PTR [esi]
  41d23a:	sbb    BYTE PTR [eax],0xda
  41d23d:	push   ebx
  41d23e:	repnz mov dh,BYTE PTR [ebp-0x26]
  41d242:	fcmovu st,st(2)
  41d244:	mov    bh,0x1b
  41d246:	mov    dl,BYTE PTR [edi]
  41d248:	outs   dx,DWORD PTR ds:[esi]
  41d249:	fidivr WORD PTR [esi-0x41dc59e2]
  41d24f:	xchg   DWORD PTR [eax+0x52],esi
  41d252:	or     DWORD PTR [edi-0x70e7260b],ecx
  41d258:	cmc    
  41d259:	rcr    DWORD PTR [eax],1
  41d25b:	cs cmp al,0x2e
  41d25e:	jno    0x41d2a7
  41d260:	daa    
  41d261:	addr16 cmp al,0xc0
  41d264:	mov    esi,DWORD PTR [edx+edx*4+0x24673737]
  41d26b:	mov    esp,0x3f66b57b
  41d270:	ja     0x41d250
  41d272:	hlt    
  41d273:	fisttp DWORD PTR [ebx]
  41d275:	cmp    al,0xf
  41d277:	retf   
  41d278:	outs   dx,BYTE PTR ds:[esi]
  41d279:	loop   0x41d264
  41d27b:	push   esi
  41d27c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d27d:	retf   0x52b8
  41d280:	pop    edx
  41d281:	and    ebp,esi
  41d283:	add    ebp,DWORD PTR [edi]
  41d285:	fmulp  st(1),st
  41d287:	aaa    
  41d288:	sub    edx,DWORD PTR [ecx]
  41d28a:	sub    ch,BYTE PTR [ebp-0x44339f3c]
  41d290:	xor    BYTE PTR [eax],dh
  41d292:	xchg   esp,eax
  41d293:	mov    WORD PTR [ebp-0x62],ds
  41d296:	add    ah,bl
  41d298:	ins    BYTE PTR es:[edi],dx
  41d299:	fisub  WORD PTR [esi-0x17]
  41d29c:	add    BYTE PTR [eax],al
  41d29e:	test   eax,0xa1b9f91f
  41d2a3:	pop    ds
  41d2a4:	cld    
  41d2a5:	mov    ecx,0x160d4fef
  41d2aa:	cmp    dh,ah
  41d2ac:	sti    
  41d2ad:	aaa    
  41d2ae:	mov    al,0x9c
  41d2b0:	jne    0x41d261
  41d2b2:	out    dx,eax
  41d2b3:	out    dx,eax
  41d2b4:	adc    dl,bl
  41d2b6:	ins    BYTE PTR es:[edi],dx
  41d2b7:	fidivr WORD PTR [edi-0xf]
  41d2ba:	and    dl,BYTE PTR [ecx+0x38]
  41d2bd:	bound  esi,QWORD PTR [eax-0x2a]
  41d2c0:	inc    eax
  41d2c1:	pop    ebp
  41d2c2:	fadd   st,st(4)
  41d2c4:	cwde   
  41d2c5:	adc    ch,dh
  41d2c7:	fld    DWORD PTR [edi+0x74b5a9b1]
  41d2cd:	add    ecx,DWORD PTR [ecx]
  41d2cf:	fimul  WORD PTR [ebp+0x502c732c]
  41d2d5:	mov    esi,0x3cfbea61
  41d2da:	xor    ebx,ebx
  41d2dc:	shr    BYTE PTR [edx-0x2c],cl
  41d2df:	(bad)  [ecx+edi*8-0x5d]
  41d2e3:	pop    ds
  41d2e4:	adc    DWORD PTR [esp+ebp*2+0x50],esp
  41d2e8:	push   es
  41d2e9:	vpsraw xmm5{k1}{z},xmm5,XMMWORD PTR [ebx-0x240e1863]
  41d2f3:	lds    edx,FWORD PTR [edi+0x2fd96fd2]
  41d2f9:	test   eax,0xabca36ce
  41d2fe:	sub    dh,bl
  41d300:	push   ebp
  41d301:	jb     0x41d303
  41d303:	add    BYTE PTR [eax+0x30c9ed5b],al
  41d309:	fiadd  WORD PTR [eax]
  41d30b:	mov    edx,0xb70937b3
  41d310:	xlat   BYTE PTR ds:[ebx]
  41d311:	inc    ebp
  41d312:	and    DWORD PTR [eax],eax
  41d314:	outs   dx,DWORD PTR ds:[esi]
  41d315:	and    BYTE PTR [ecx],al
  41d317:	push   ebx
  41d318:	fwait
  41d319:	fs lahf 
  41d31b:	sti    
  41d31c:	pop    ecx
  41d31d:	sahf   
  41d31e:	dec    ebx
  41d31f:	mov    edx,DWORD PTR [edi-0x79]
  41d322:	pop    DWORD PTR [edx]
  41d324:	dec    ecx
  41d325:	sahf   
  41d326:	jle    0x41d2e8
  41d328:	mov    ds:0xbe0366e7,eax
  41d32d:	mov    BYTE PTR [esi+0x1],cl
  41d330:	push   es
  41d331:	loopne 0x41d2ba
  41d333:	test   DWORD PTR [edx-0x64],ebx
  41d336:	cld    
  41d337:	inc    esi
  41d339:	ins    BYTE PTR es:[edi],dx
  41d33a:	jle    0x41d2e0
  41d33c:	fstp   QWORD PTR [ebx-0xe36af04]
  41d342:	inc    eax
  41d343:	adc    DWORD PTR [esi],eax
  41d345:	loop   0x41d2ca
  41d347:	inc    ebp
  41d348:	mov    esi,0x63fff360
  41d34d:	out    0x66,al
  41d34f:	add    al,0xed
  41d351:	mov    eax,0x653bff30
  41d356:	sar    ebp,cl
  41d358:	jmp    0x8a65b6f8
  41d35d:	loop   0x41d35f
  41d35f:	test   dh,al
  41d361:	jmp    0x41d3e2
  41d363:	aad    0x86
  41d365:	fild   WORD PTR [eax]
  41d367:	mov    eax,DWORD PTR [eax]
  41d369:	add    BYTE PTR [eax+0x38cfa68],bl
  41d36f:	dec    esi
  41d370:	idiv   edi
  41d372:	test   eax,0x16ff5230
  41d377:	out    0x7f,al
  41d379:	shl    BYTE PTR [edx-0x19],0x81
  41d37d:	clc    
  41d37e:	push   edi
  41d37f:	mov    dh,BYTE PTR [ebx-0xd20ba00]
  41d385:	test   DWORD PTR [edx+0x46fffc9d],edi
  41d38b:	in     al,dx
  41d38c:	test   BYTE PTR [edi+ebp*1+0x41ffffc5],al
  41d393:	add    DWORD PTR [edi],0x2
  41d396:	mov    ebx,0x78291e7
  41d39b:	sbb    bh,BYTE PTR [esp+edi*8-0x4de281]
  41d3a2:	sbb    ch,al
  41d3a4:	cmp    DWORD PTR [edi+0xd86d89b],0xffffffb4
  41d3ab:	lds    edx,FWORD PTR [eax-0x440e2c6e]
  41d3b1:	cld    
  41d3b2:	pop    ebp
  41d3b3:	cwde   
  41d3b4:	mov    edx,0xc54a274f
  41d3b9:	jb     0x41d3a8
  41d3bb:	rol    BYTE PTR [ebp+0x8],cl
  41d3be:	cs pop ecx
  41d3c0:	mov    esi,DWORD PTR ds:[edx-0x2f033e14]
  41d3c7:	adc    al,0x50
  41d3c9:	mov    esi,DWORD PTR [edx+0xfcb660]
  41d3cf:	add    al,al
  41d3d1:	adc    al,0xad
  41d3d3:	out    0x2e,eax
  41d3d5:	lods   al,BYTE PTR ds:[esi]
  41d3d6:	mov    edx,0xa19ef82
  41d3db:	push   0x2c
  41d3dd:	cld    
  41d3de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3df:	sbb    eax,0xf86449b2
  41d3e4:	cwde   
  41d3e5:	mov    ecx,DWORD PTR [edi-0x77]
  41d3e8:	popa   
  41d3e9:	ins    BYTE PTR es:[edi],dx
  41d3ea:	sbb    ebp,edi
  41d3ec:	mov    BYTE PTR [ebx-0x7a],bh
  41d3ef:	imul   DWORD PTR [edx-0x53b4cc8d]
  41d3f5:	imul   eax,DWORD PTR [esp+esi*2],0x2
  41d3f9:	dec    eax
  41d3fa:	mov    ebx,0x87ece301
  41d3ff:	or     eax,0x8b52c5b4
  41d404:	ret    0xc118
  41d407:	cld    
  41d408:	push   eax
  41d409:	fnsave [edi-0x11d2b5ae]
  41d40f:	cmp    BYTE PTR [eax],0xde
  41d412:	fnsave [ebx+0x51]
  41d415:	inc    edx
  41d416:	dec    ebx
  41d417:	mov    esi,0xbabd333
  41d41c:	xor    edx,DWORD PTR [edx+0x7]
  41d41f:	xchg   ecx,eax
  41d420:	lods   eax,DWORD PTR ds:[esi]
  41d421:	mov    dh,0x34
  41d423:	mov    esi,0x2c422f1b
  41d428:	das    
  41d429:	fsubp  st(1),st
  41d42b:	xchg   eax,ecx
  41d42d:	push   edx
  41d42e:	test   DWORD PTR [edx-0x6f179ace],0x8a9d0000
  41d438:	or     al,0xbe
  41d43a:	repz sub al,0x97
  41d43d:	mov    esi,0xc364e678
  41d442:	pop    ebp
  41d443:	hlt    
  41d444:	mov    BYTE PTR fs:[ebx+ebx*8-0x269f4216],al
  41d44c:	pop    esp
  41d44d:	or     al,0xca
  41d44f:	repz xor DWORD PTR [ebx],edx
  41d452:	outs   dx,DWORD PTR ds:[esi]
  41d453:	fisubr WORD PTR [esp+eax*8+0x2b]
  41d457:	arpl   cx,bp
  41d459:	mov    esp,0x9ced9b3
  41d45e:	pop    esi
  41d45f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d460:	mov    sp,0xe92e
  41d464:	pop    esp
  41d465:	ret    
  41d466:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d467:	push   edi
  41d468:	jmp    0xf7301229
  41d46d:	inc    ebx
  41d46e:	das    
  41d46f:	gs cdq 
  41d471:	xchg   DWORD PTR [ebx+0x7a80e253],eax
  41d477:	in     al,dx
  41d478:	adc    eax,0x22e20501
  41d47d:	mov    ebp,0x177ae5dd
  41d482:	jmp    0x41d472
  41d484:	add    BYTE PTR [ecx],ch
  41d486:	xor    esi,DWORD PTR [eax]
  41d488:	cld    
  41d489:	aam    0x48
  41d48b:	out    dx,eax
  41d48c:	inc    eax
  41d48d:	jmp    0xbf9d7749
  41d492:	out    0xa0,eax
  41d494:	mov    esi,0x30332ced
  41d499:	dec    esi
  41d49a:	add    BYTE PTR [eax],al
  41d49c:	xor    al,0x55
  41d49e:	and    eax,0x2ee261f1
  41d4a3:	sub    esi,edx
  41d4a5:	sub    ecx,DWORD PTR [eax-0x3bf8bf51]
  41d4ab:	mov    ch,0x60
  41d4ad:	es jne 0x41d47d
  41d4b0:	je     0x41d4ff
  41d4b2:	in     al,dx
  41d4b3:	loopne 0x41d4f7
  41d4b5:	out    dx,al
  41d4b6:	jb     0x41d4bb
  41d4b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4b9:	and    cl,BYTE PTR ds:0xfb90f70e
  41d4bf:	jge    0x41d491
  41d4c1:	in     al,0xfb
  41d4c3:	aam    0x54
  41d4c5:	out    dx,al
  41d4c6:	inc    eax
  41d4c7:	jmp    0xbcb76d7d
  41d4cc:	imul   edx,DWORD PTR [edi],0x7b
  41d4cf:	stc    
  41d4d0:	(bad)  
  41d4d1:	mov    edi,0x22b7afe7
  41d4d6:	or     eax,0xe7e9f460
  41d4db:	ficomp WORD PTR [ebx+ebx*8+0x74]
  41d4df:	or     eax,0x9115db3f
  41d4e4:	aas    
  41d4e5:	push   ds
  41d4e6:	add    DWORD PTR [esp+ebp*2+0x4b],ebp
  41d4ea:	or     esp,DWORD PTR [edx-0x16]
  41d4ed:	jmp    0xde6ecada
  41d4f2:	add    dl,ah
  41d4f4:	imul   ecx,DWORD PTR [ebx-0x1a],0xffffff82
  41d4f8:	add    eax,0x6d2e0189
  41d4fd:	fadd   QWORD PTR [eax]
  41d4ff:	add    BYTE PTR [eax],al
  41d501:	add    ch,bl
  41d503:	and    al,0xd
  41d505:	test   DWORD PTR [edi+0xe8b090f],ebx
  41d50b:	jmp    0x8b30:0x85724883
  41d512:	xchg   ah,ah
  41d514:	cmp    edx,ecx
  41d516:	les    edx,FWORD PTR fs:[ebp-0x75]
  41d51a:	push   esi
  41d51b:	loopne 0x41d4a4
  41d51d:	adc    al,0x54
  41d51f:	cmp    bh,BYTE PTR [edx]
  41d521:	retf   0xf7e5
  41d524:	bound  ecx,QWORD PTR [ebx+0x2ba5f07]
  41d52a:	(bad)  
  41d52b:	and    ecx,DWORD PTR ds:0x6ead8b66
  41d531:	repnz mov eax,0x13750ad4
  41d537:	pop    edi
  41d538:	mov    edx,0xd238f02
  41d53d:	xor    eax,DWORD PTR [esi-0x62]
  41d540:	and    BYTE PTR [eax-0x1e],0xdb
  41d544:	mov    DWORD PTR [eax-0x2e],eax
  41d547:	sahf   
  41d548:	push   ebp
  41d549:	push   edi
  41d54a:	dec    ebp
  41d54b:	xchg   esp,eax
  41d54c:	mov    BYTE PTR [edi+0x56],dh
  41d54f:	mov    ds:0x224f2404,al
  41d554:	add    DWORD PTR [ebp-0x17fff128],eax
  41d55a:	stc    
  41d55b:	(bad)  
  41d55d:	dec    DWORD PTR [ebp-0x75]
  41d560:	jecxz  0x41d552
  41d562:	mov    al,ds:0xf600db
  41d567:	add    BYTE PTR [edx-0x42],cl
  41d56a:	pop    es
  41d56b:	add    DWORD PTR [edx-0x24],ebx
  41d56e:	push   ebp
  41d56f:	call   0x3ea008
  41d574:	std    
  41d575:	call   0x5500:0xded45e5c
  41d57c:	das    
  41d57d:	cmp    al,0xa9
  41d57f:	dec    esi
  41d580:	fmul   QWORD PTR [esi]
  41d582:	push   eax
  41d583:	std    
  41d584:	loop   0x41d546
  41d586:	repnz fsub DWORD PTR [eax-0x2e]
  41d58a:	pop    ss
  41d58b:	mov    DWORD PTR [edi+0x50],edx
  41d58e:	xor    dl,BYTE PTR [eax+edx*2]
  41d591:	ror    BYTE PTR [edi],cl
  41d593:	std    
  41d594:	ret    0xb6d0
  41d597:	jb     0x41d5d0
  41d599:	xchg   esp,eax
  41d59a:	push   edx
  41d59b:	call   0x419b09
  41d5a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5a1:	xor    eax,0xa0a3f0fc
  41d5a6:	and    DWORD PTR [edi],esi
  41d5a8:	and    ch,0x30
  41d5ab:	xor    BYTE PTR [ebp+0x6b4588b5],al
  41d5b1:	je     0x41d602
  41d5b3:	std    
  41d5b4:	and    dl,BYTE PTR [ebp+0x442f4011]
  41d5ba:	ror    DWORD PTR [ebx],0x85
  41d5bd:	ret    
  41d5be:	push   edi
  41d5bf:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5c1:	jle    0x41d5fe
  41d5c3:	or     eax,0x65e487a1
  41d5c8:	mov    ah,0x87
  41d5ca:	fbld   TBYTE PTR [ebp+0x0]
  41d5cd:	add    dh,ch
  41d5cf:	in     eax,0xc
  41d5d1:	data16 and al,0x6
  41d5d4:	pop    ds
  41d5d5:	xchg   DWORD PTR [ecx+0x7],esi
  41d5d8:	mov    WORD PTR [ebx+eiz*1+0x4e],es
  41d5dc:	inc    edx
  41d5dd:	dec    eax
  41d5de:	push   ecx
  41d5df:	out    dx,al
  41d5e0:	push   edi
  41d5e1:	xor    al,0x3b
  41d5e3:	add    al,0x2b
  41d5e5:	sbb    al,0xba
  41d5e7:	push   es
  41d5e8:	push   ecx
  41d5e9:	push   ecx
  41d5ea:	call   DWORD PTR [edi+0x5415010]
  41d5f0:	add    eax,0x2db86b81
  41d5f5:	adc    eax,0x8d0bdde7
  41d5fa:	jmp    0xc10:0xf371eb31
  41d601:	(bad)  
  41d602:	jecxz  0x41d615
  41d604:	add    al,0xc5
  41d606:	mov    ebp,esp
  41d608:	or     ecx,DWORD PTR [edi]
  41d60a:	mov    al,ds:0xb021da43
  41d60f:	pop    ds
  41d610:	sbb    al,0x87
  41d612:	imul   eax,DWORD PTR [ecx],0x5d
  41d615:	inc    ecx
  41d616:	jmp    0x41d646
  41d618:	mov    edx,0x5b35e28c
  41d61d:	adc    bl,ch
  41d61f:	out    dx,eax
  41d620:	test   eax,0xdda1ae03
  41d625:	mov    WORD PTR [edx-0x15715cbe],cs
  41d62b:	xor    al,0x9f
  41d62d:	pop    esp
  41d62e:	je     0x41d5d0
  41d630:	rol    DWORD PTR [ebx],1
  41d632:	add    BYTE PTR [eax],al
  41d634:	jl     0x41d69f
  41d636:	cmp    eax,0x5ae57854
  41d63b:	add    al,0x3e
  41d63d:	mov    al,0x66
  41d63f:	mov    ebx,0x8ce24b2e
  41d644:	gs (bad) 
  41d646:	pusha  
  41d647:	push   eax
  41d648:	jmp    0x41d613
  41d64a:	out    dx,al
  41d64b:	xchg   al,bl
  41d64d:	in     eax,dx
  41d64e:	je     0x41d651
  41d650:	mov    al,0x2b
  41d652:	repnz mov esp,DWORD PTR [ebp-0x2e]
  41d656:	xchg   edi,eax
  41d657:	mov    edx,0x2fe2ea3d
  41d65c:	pop    ds
  41d65d:	xor    bl,bl
  41d65f:	das    
  41d660:	sub    edx,ebp
  41d662:	pop    esp
  41d663:	or     al,0xb2
  41d665:	dec    ebx
  41d666:	into   
  41d667:	mov    ecx,0xd1d61d
  41d66c:	das    
  41d66d:	fsubp  st(1),st
  41d66f:	retf   0xee6e
  41d672:	add    cl,ch
  41d674:	loope  0x41d6dc
  41d676:	in     al,dx
  41d677:	push   0xe901e9d7
  41d67c:	sub    al,0x2f
  41d67e:	mov    eax,0xfbd57805
  41d683:	aas    
  41d684:	fimul  WORD PTR [esi+ebx*2]
  41d687:	leave  
  41d688:	pop    ds
  41d689:	push   esp
  41d68a:	addr16 std 
  41d68c:	xchg   esp,eax
  41d68d:	fldenv [ebx]
  41d68f:	jle    0x41d627
  41d691:	lock mov dx,0x1697
  41d696:	hlt    
  41d697:	cmc    
  41d698:	add    BYTE PTR [eax],al
  41d69a:	sub    al,dh
  41d69c:	je     0x41d692
  41d69e:	sub    al,0xde
  41d6a0:	das    
  41d6a1:	sub    DWORD PTR [ebx+edx*2-0x5d2d18f],esp
  41d6a8:	jns    0x41d653
  41d6aa:	sub    al,0x3c
  41d6ac:	mov    ch,BYTE PTR [edi-0x5875c3a0]
  41d6b2:	push   0xd66cfa67
  41d6b7:	push   eax
  41d6b8:	push   edx
  41d6b9:	imul   eax,DWORD PTR [eax-0x6],0x46709d00
  41d6c0:	leave  
  41d6c1:	jmp    0x302ab4f2
  41d6c6:	push   cs
  41d6c7:	sar    bl,cl
  41d6c9:	bound  esp,QWORD PTR [ebx+0x3b7df25f]
  41d6cf:	mov    BYTE PTR [eax-0x14],0x2c
  41d6d3:	fisubr WORD PTR [edi]
  41d6d5:	sub    esi,ebp
  41d6d7:	(bad)  
  41d6d9:	pop    edi
  41d6da:	jae    0x41d6ba
  41d6dc:	bound  esi,QWORD PTR [eax+0x6e]
  41d6df:	es call 0x8a0c9ad0
  41d6e5:	pop    esi
  41d6e6:	sti    
  41d6e7:	pusha  
  41d6e8:	repnz push ebp
  41d6ea:	repz add BYTE PTR ds:[bp+0x6f],bh
  41d6f0:	push   es
  41d6f1:	add    BYTE PTR [esi-0x758b43ac],al
  41d6f7:	popa   
  41d6f8:	je     0x41d76a
  41d6fa:	outs   dx,BYTE PTR ds:[esi]
  41d6fb:	push   ebx
  41d6fc:	pop    es
  41d6fd:	add    BYTE PTR [eax],al
  41d6ff:	add    BYTE PTR [esi+0x7775bc54],dl
  41d705:	popa   
  41d706:	add    al,0x6a
  41d708:	xchg   DWORD PTR [ecx-0x34],esp
  41d70b:	jmp    DWORD PTR [esi-0x37]
  41d70e:	mov    ebx,0xc433085f
  41d713:	ret    0xe066
  41d716:	mov    DWORD PTR [ebp+0x66],ecx
  41d719:	pop    eax
  41d71a:	int3   
  41d71b:	add    DWORD PTR [esi-0x20],edx
  41d71e:	cmp    eax,ecx
  41d720:	(bad)  
  41d721:	int    0x38
  41d723:	retf   
  41d724:	(bad)  
  41d725:	leave  
  41d726:	xchg   BYTE PTR [ecx+0xe10e],dl
  41d72c:	or     DWORD PTR [edi-0xe],ecx
  41d72f:	cmp    ebx,DWORD PTR [esi+0xc]
  41d732:	add    al,0x66
  41d734:	sub    eax,0x8d0d708a
  41d739:	popf   
  41d73a:	call   0x65df6448
  41d73f:	cmp    esp,DWORD PTR ds:0x458aff09
  41d745:	sar    DWORD PTR [edx+0x699f500f],0x1
  41d74c:	cs popf 
  41d74e:	add    edi,edi
  41d750:	sub    DWORD PTR [edx+0x46],esp
  41d753:	and    BYTE PTR [esi+0x14],bl
  41d756:	and    eax,0x3e9dc2eb
  41d75b:	and    al,0xd6
  41d75d:	out    0xb2,al
  41d75f:	inc    ebp
  41d760:	xor    dh,ah
  41d762:	add    ecx,eax
  41d764:	add    BYTE PTR [eax],al
  41d766:	jo     0x41d7c7
  41d768:	mov    ebx,0x8e232f2c
  41d76d:	inc    esp
  41d76e:	inc    ebx
  41d76f:	mov    ah,0x6a
  41d771:	mov    edi,0x2519acff
  41d776:	cwde   
  41d777:	xchg   esp,eax
  41d778:	lea    eax,[edi+edi*1+0x42]
  41d77c:	lds    esi,FWORD PTR [ebx-0x4a]
  41d77f:	dec    eax
  41d780:	cmp    cl,BYTE PTR [eax]
  41d782:	das    
  41d783:	push   eax
  41d784:	sbb    cl,BYTE PTR [ecx+eiz*1+0x5]
  41d788:	add    eax,0x14df2174
  41d78d:	std    
  41d78e:	loop   0x41d74c
  41d790:	mov    BYTE PTR [ebx+ebp*8-0xc],al
  41d794:	mov    bl,0xd0
  41d796:	lods   al,BYTE PTR ds:[esi]
  41d797:	jns    0x41d7a1
  41d799:	adc    edx,0x3973ffb8
  41d79f:	fistp  WORD PTR [eax]
  41d7a1:	std    
  41d7a2:	mov    edx,0xe34488c8
  41d7a7:	xchg   esp,eax
  41d7a8:	mov    dl,0xd0
  41d7aa:	lods   al,BYTE PTR ds:[esi]
  41d7ab:	add    DWORD PTR [ecx],ecx
  41d7ad:	std    
  41d7ae:	mov    ds:0x3f4289c9,al
  41d7b3:	sbb    al,0x32
  41d7b5:	adc    BYTE PTR [ebx-0x29],cl
  41d7b8:	mov    dl,0x72
  41d7ba:	dec    ebx
  41d7bb:	cmp    bh,BYTE PTR [esi+edx*1]
  41d7be:	sub    BYTE PTR [ebp-0x3acd6359],0xff
  41d7c5:	jg     0x41d841
  41d7c7:	fld    QWORD PTR [eax]
  41d7c9:	jbe    0x41d7cb
  41d7cb:	add    BYTE PTR [ebx],ch
  41d7cd:	mov    eax,0xb433e8bf
  41d7d2:	ins    DWORD PTR es:[edi],dx
  41d7d3:	inc    edx
  41d7d4:	inc    edi
  41d7d5:	dec    ebp
  41d7d6:	cmp    al,0x15
  41d7d8:	les    edi,FWORD PTR [ecx-0x3add7b59]
  41d7de:	dec    DWORD PTR [eax+0x2c29b540]
  41d7e4:	mov    dl,0xdd
  41d7e6:	sub    cl,BYTE PTR [esi]
  41d7e8:	pop    edi
  41d7e9:	sub    al,0xdb
  41d7eb:	shl    BYTE PTR [ebx+0x72830a48],cl
  41d7f1:	add    ebx,ecx
  41d7f3:	xor    BYTE PTR [ebx+0x2c],al
  41d7f6:	ret    
  41d7f7:	shr    BYTE PTR [ebx],cl
  41d7f9:	mov    WORD PTR [eax+eiz*8],fs
  41d7fc:	das    
  41d7fd:	dec    ecx
  41d7fe:	or     al,BYTE PTR [ebx+0x53ff56c]
  41d804:	fild   QWORD PTR [ebx]
  41d806:	xchg   edx,eax
  41d807:	cld    
  41d808:	rcr    DWORD PTR cs:[edx-0x1d545fa],cl
  41d80f:	mov    esi,0xb68bd5ad
  41d814:	arpl   cx,bx
  41d816:	jmp    0x979b071e
  41d81b:	das    
  41d81c:	and    DWORD PTR [edi-0x6],esp
  41d81f:	adc    esi,DWORD PTR [eax+ebx*2-0x2dbc4a8f]
  41d826:	push   ecx
  41d827:	mov    ah,0xbf
  41d829:	fucomp st(1)
  41d82b:	mov    ch,BYTE PTR [ebx-0x3c]
  41d82e:	inc    esi
  41d82f:	mov    ch,0x0
  41d831:	add    BYTE PTR [ebx],ch
  41d833:	sar    BYTE PTR [eax+0x42f880ab],cl
  41d839:	mov    dh,0xef
  41d83b:	das    
  41d83c:	push   edx
  41d83d:	cmp    al,0x49
  41d83f:	shl    DWORD PTR [edx],1
  41d841:	ret    0x655d
  41d844:	cmp    eax,0x6d285e54
  41d849:	mov    dh,0x7d
  41d84b:	cld    
  41d84c:	(bad)  
  41d84d:	fidivr DWORD PTR [edi]
  41d84f:	enter  0x405e,0x37
  41d853:	sub    BYTE PTR [edi+0x2ee5db6],dh
  41d859:	xor    BYTE PTR [ebx],ch
  41d85b:	(bad)  
  41d85c:	and    eax,0xd1d372
  41d861:	bound  edi,QWORD PTR [esp+ebx*2-0xe]
  41d865:	jo     0x41d838
  41d867:	cs jmp 0xfc14b1a4
  41d86d:	rol    al,cl
  41d86f:	inc    bp
  41d871:	loope  0x41d8c9
  41d873:	fmul   QWORD PTR [ebp-0x16c918ac]
  41d879:	xchg   ebx,eax
  41d87a:	cs sar ebx,cl
  41d87d:	imul   ecx,DWORD PTR fs:[esi+eiz*1+0x62],0x58
  41d883:	rol    BYTE PTR [edx+0x42],cl
  41d886:	rcr    esi,1
  41d888:	xchg   DWORD PTR [edi+0x38feb16c],ebp
  41d88e:	ret    
  41d88f:	fldenv [edx]
  41d891:	xchg   esi,eax
  41d892:	mov    ds:0x64d866,al
  41d897:	add    BYTE PTR [esi-0x6aec46b4],al
  41d89d:	sub    eax,ebp
  41d89f:	icebp  
  41d8a0:	rcl    ecx,1
  41d8a2:	je     0x41d88f
  41d8a4:	mov    ch,0xf2
  41d8a6:	xchg   DWORD PTR [edi+0x2bca36d9],esp
  41d8ac:	daa    
  41d8ad:	ficom  WORD PTR [ebp+0x72]
  41d8b0:	xchg   DWORD PTR [eax-0x13],edx
  41d8b3:	loope  0x41d8e3
  41d8b5:	fiadd  WORD PTR [eax]
  41d8b7:	pop    esp
  41d8b8:	mov    al,ds:0xe246fdc9
  41d8bd:	and    BYTE PTR [ecx+0x69],ch
  41d8c0:	sub    ebx,esi
  41d8c2:	add    al,0xc3
  41d8c4:	sub    al,0xd3
  41d8c6:	jne    0x41d8a9
  41d8c8:	push   esi
  41d8c9:	(bad)  
  41d8cb:	inc    esp
  41d8cc:	cmp    ecx,edx
  41d8ce:	sti    
  41d8cf:	fs jmp 0x41d91e
  41d8d2:	adc    BYTE PTR [ebx+0x1185652c],al
  41d8d8:	cwde   
  41d8d9:	sar    ebx,1
  41d8db:	add    BYTE PTR [esi-0x8b3f177],dh
  41d8e1:	sbb    al,0x1
  41d8e3:	test   DWORD PTR [esi],edx
  41d8e5:	add    DWORD PTR ds:0x1b871632,eax
  41d8eb:	call   FWORD PTR [ebx-0x1a]
  41d8ee:	xchg   DWORD PTR [ebp-0x37832],eax
  41d8f4:	out    dx,al
  41d8f5:	pop    ecx
  41d8f6:	sti    
  41d8f7:	call   DWORD PTR [esi+0x794904]
  41d8fd:	add    BYTE PTR [esi-0x26],al
  41d900:	push   eax
  41d901:	push   0xffffff86
  41d903:	test   BYTE PTR [esi+eax*2-0x3f802369],ah
  41d90a:	popa   
  41d90b:	pop    edi
  41d90c:	mov    ebx,0xe4c4c9
  41d911:	push   ebp
  41d912:	std    
  41d913:	js     0x41d89b
  41d915:	inc    ebp
  41d916:	push   edx
  41d917:	sub    al,0xfe
  41d919:	jne    0x41d89d
  41d91b:	mov    DWORD PTR [esi+0x8],ecx
  41d91e:	retf   
  41d91f:	pushf  
  41d920:	outs   dx,DWORD PTR ds:[esi]
  41d921:	pop    esp
  41d922:	cmp    DWORD PTR [ebx-0x5851f392],ecx
  41d928:	(bad)  
  41d92a:	shl    DWORD PTR [ebp-0xd],1
  41d92d:	test   ecx,edx
  41d92f:	add    BYTE PTR [edx-0x1],al
  41d932:	pop    ebx
  41d933:	in     al,dx
  41d934:	std    
  41d935:	aaa    
  41d936:	and    eax,0xdbd61034
  41d93c:	jg     0x41d8fe
  41d93e:	fidivr DWORD PTR [ecx-0x202400ab]
  41d944:	mov    DWORD PTR [ebp+0x12],esi
  41d947:	pop    ecx
  41d948:	ds or  dh,ch
  41d94b:	ror    DWORD PTR [eax+eax*2-0x4b16d3fa],cl
  41d952:	cmc    
  41d953:	mov    bh,ah
  41d955:	sub    DWORD PTR [edi],0x1
  41d958:	add    al,0x83
  41d95a:	out    dx,eax
  41d95b:	pop    edi
  41d95c:	push   cs
  41d95d:	std    
  41d95e:	(bad)  
  41d95f:	int    0x4d
  41d961:	call   0xa584d966
  41d966:	(bad)  
  41d967:	dec    eax
  41d969:	push   edx
  41d96a:	or     al,ch
  41d96c:	pop    esp
  41d96d:	call   0x4b9d:0x1059fcb4
  41d974:	or     dh,BYTE PTR [eax-0x46dd0351]
  41d97a:	scas   al,BYTE PTR es:[edi]
  41d97b:	adc    ch,BYTE PTR [edi-0x2d]
  41d97e:	aas    
  41d97f:	add    al,bh
  41d981:	stc    
  41d982:	ret    0x2f0f
  41d985:	jmp    0x5620:0x99aceb7b
  41d98c:	mov    dl,0xa
  41d98e:	cdq    
  41d98f:	mov    bh,0xb6
  41d991:	(bad)  
  41d994:	xchg   edx,edi
  41d996:	cli    
  41d997:	jmp    FWORD PTR [eax+0x3c]
  41d99a:	(bad)  
  41d99b:	dec    edi
  41d99c:	pusha  
  41d99d:	retf   0x10ff
  41d9a0:	out    dx,eax
  41d9a1:	les    edi,FWORD PTR [edx+eax*2+0x53]
  41d9a5:	cmp    al,ch
  41d9a7:	or     al,0xb3
  41d9a9:	ins    BYTE PTR es:[edi],dx
  41d9aa:	add    al,0x0
  41d9ac:	das    
  41d9ad:	hlt    
  41d9ae:	push   edi
  41d9af:	mov    edi,DWORD PTR [edx+0x2fb96c74]
  41d9b5:	(bad)  
  41d9b8:	sbb    edi,DWORD PTR [esi-0x164b0001]
  41d9be:	mov    eax,0x7ac56f11
  41d9c3:	les    edi,FWORD PTR [edi+0x10]
  41d9c6:	cmp    bh,ah
  41d9c8:	add    BYTE PTR [eax],al
  41d9ca:	or     bh,ch
  41d9cc:	jnp    0x41d9a5
  41d9ce:	mov    dl,0x81
  41d9d0:	retf   
  41d9d1:	mov    bh,0xb4
  41d9d3:	fucomp st(1)
  41d9d5:	add    ebp,DWORD PTR [edi]
  41d9d7:	(bad)  
  41d9d8:	sub    bh,ch
  41d9da:	call   0x710d38ad
  41d9df:	iret   
  41d9e0:	xchg   esp,eax
  41d9e1:	scas   eax,DWORD PTR es:[edi]
  41d9e2:	(bad)  [edi+0x60df4970]
  41d9e8:	jl     0x41d9a5
  41d9ea:	adc    BYTE PTR [ecx-0x39d0fc17],0x32
  41d9f1:	std    
  41d9f2:	mov    eax,0x60ca6ece
  41d9f7:	iret   
  41d9f8:	push   esp
  41d9f9:	mov    al,0xab
  41d9fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9fc:	push   ss
  41d9fd:	mov    edx,0xd20ed5b7
  41da02:	sbb    al,0x52
  41da04:	add    DWORD PTR [ecx],edi
  41da06:	lahf   
  41da07:	dec    ecx
  41da08:	xor    ebp,edi
  41da0a:	mov    cl,BYTE PTR [ecx+0x37]
  41da0d:	sbb    al,0x57
  41da0f:	push   ebp
  41da10:	sub    al,BYTE PTR [edi+eax*4]
  41da13:	cmp    eax,0xcf2f0505
  41da18:	hlt    
  41da19:	push   ebx
  41da1a:	cmp    BYTE PTR [esi],bl
  41da1c:	jmp    0x5bab:0x66c1ed7c
  41da23:	dec    ecx
  41da24:	cmc    
  41da25:	mov    dl,0xdd
  41da27:	loope  0x41daa3
  41da29:	cmp    BYTE PTR [edi],dh
  41da2b:	sbb    ebx,DWORD PTR cs:[eax+eax*1+0x6acf4d00]
  41da33:	mov    dl,0xa5
  41da35:	sbb    BYTE PTR [edx+0x53],ah
  41da38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da39:	sbb    BYTE PTR [esi+0x53],dl
  41da3c:	xchg   ebp,eax
  41da3d:	fistp  QWORD PTR [ebx+0x64b22259]
  41da43:	ret    
  41da44:	pushf  
  41da45:	or     dh,bh
  41da47:	into   
  41da48:	pop    ecx
  41da49:	push   ebx
  41da4a:	inc    edx
  41da4b:	cmp    DWORD PTR [edx+0x59],ebx
  41da4e:	add    BYTE PTR [eax+edi*4+0x79e70c58],ch
  41da55:	or     al,0x9
  41da57:	ins    BYTE PTR es:[edi],dx
  41da58:	in     al,dx
  41da59:	push   ecx
  41da5a:	push   es
  41da5b:	push   0xffffff94
  41da5d:	loope  0x41dad4
  41da5f:	std    
  41da60:	popa   
  41da61:	int3   
  41da62:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41da64:	mov    eax,0x17060e51
  41da69:	(bad)  
  41da6b:	je     0x41da31
  41da6d:	sbb    eax,0xcb560154
  41da72:	sti    
  41da73:	out    dx,al
  41da74:	jb     0x41dad5
  41da76:	ret    0xc3f5
  41da79:	sub    cl,bh
  41da7b:	pop    ebx
  41da7c:	jl     0x41da48
  41da7e:	jne    0x41da5d
  41da80:	fidiv  WORD PTR [eax]
  41da82:	icebp  
  41da83:	into   
  41da84:	pusha  
  41da85:	retf   0xdcfb
  41da88:	sub    bh,ch
  41da8a:	inc    eax
  41da8b:	jmp    0xa09d016f
  41da90:	imul   esp,ebp,0xb500
  41da96:	jnp    0x41da4d
  41da98:	xor    ebp,DWORD PTR [edx+eax*2]
  41da9b:	xchg   ecx,eax
  41da9c:	pop    eax
  41da9d:	xchg   esp,eax
  41da9e:	mov    dh,0x11
  41daa0:	mov    ch,0x9b
  41daa2:	js     0x41dae2
  41daa4:	cmp    cl,BYTE PTR [esi+eax*8-0x396bc200]
  41daab:	clc    
  41daac:	pop    esp
  41daad:	add    eax,0xcc479824
  41dab2:	jmp    0x41dad1
  41dab4:	mov    al,0x5a
  41dab6:	repnz test al,0xb7
  41dab9:	mov    DWORD PTR [edx-0x69cbc5ef],ebp
  41dabf:	push   ecx
  41dac0:	or     eax,0xb510abff
  41dac5:	(bad)  
  41dac6:	out    0xdc,eax
  41dac8:	mov    bh,0x0
  41daca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dacb:	jmp    0x30b2:0x62b7bd21
  41dad2:	xchg   ebx,eax
  41dad3:	fwait
  41dad4:	xor    eax,0x8cb2a7b4
  41dad9:	and    al,0x91
  41dadb:	mov    al,ds:0x179fe72f
  41dae0:	les    ecx,FWORD PTR [ebx-0x68]
  41dae3:	aad    0xf4
  41dae5:	mov    ebx,0xb4352ef3
  41daea:	addr16 loopne 0x41db5d
  41daed:	nop
  41daee:	pop    ebx
  41daef:	mov    bl,0xbc
  41daf1:	jb     0x41daba
  41daf3:	jmp    0x63a9d4b4
  41daf8:	stos   DWORD PTR es:[edi],eax
  41daf9:	je     0x41dafb
  41dafb:	add    BYTE PTR [eax-0x484b032b],bl
  41db01:	popa   
  41db02:	mov    ah,0xd0
  41db04:	adc    ebp,DWORD PTR [esi+0x2f]
  41db07:	xchg   edi,esp
  41db09:	fisttp WORD PTR [eax-0x70]
  41db0c:	pop    es
  41db0d:	mov    cl,0x9c
  41db0f:	dec    ebx
  41db10:	add    cl,BYTE PTR [esi]
  41db12:	and    esi,esp
  41db14:	mov    bh,0xfc
  41db16:	inc    eax
  41db17:	nop
  41db18:	neg    esi
  41db1a:	mov    al,dh
  41db1c:	leave  
  41db1d:	pop    edi
  41db1e:	das    
  41db1f:	mov    ah,0x7a
  41db21:	test   DWORD PTR [ebx],ecx
  41db23:	fsubr  DWORD PTR [esi-0x73]
  41db26:	or     ebp,DWORD PTR [edi+ecx*1-0x184b67d2]
  41db2d:	imul   ebp,DWORD PTR [edi-0x4d9e084c],0x6041d3f0
  41db37:	jecxz  0x41dba5
  41db39:	sti    
  41db3a:	fsub   QWORD PTR [edi+0x3b]
  41db3d:	popa   
  41db3e:	das    
  41db3f:	cmp    DWORD PTR [ebx+0x36],esi
  41db42:	adc    al,0xe4
  41db44:	das    
  41db45:	fild   WORD PTR [ebx-0x24]
  41db48:	dec    esi
  41db49:	test   eax,0x9c503384
  41db4e:	aam    0xdb
  41db50:	loope  0x41db29
  41db52:	xor    cl,cl
  41db54:	inc    eax
  41db55:	pushf  
  41db56:	aam    0xdb
  41db58:	rep stos BYTE PTR es:[edi],al
  41db5a:	test   BYTE PTR [ebx],dh
  41db5c:	rcl    DWORD PTR [esi],1
  41db5e:	add    dh,BYTE PTR [eax-0x15410000]
  41db64:	jle    0x41db99
  41db66:	fwait
  41db67:	out    0xf7,al
  41db69:	icebp  
  41db6a:	sar    DWORD PTR [esi-0x3d],cl
  41db6d:	sub    al,0x9b
  41db6f:	push   ss
  41db70:	jmp    0x41db4b
  41db72:	adc    BYTE PTR [esi],0x85
  41db75:	scas   eax,DWORD PTR es:[edi]
  41db76:	cmp    ebp,edx
  41db78:	mov    ebp,0x6942bfb6
  41db7d:	arpl   ax,cx
  41db7f:	push   cs
  41db80:	mov    edi,0x40af429
  41db85:	hlt    
  41db86:	outs   dx,DWORD PTR ds:[esi]
  41db87:	arpl   dx,di
  41db89:	outs   dx,DWORD PTR ds:[esi]
  41db8a:	mov    edi,0x6fc8d042
  41db8f:	cmp    cl,BYTE PTR [eax-0x3663149c]
  41db95:	xor    bh,BYTE PTR [ebx-0x60900574]
  41db9b:	push   0xffffffcf
  41db9d:	pop    ebx
  41db9e:	and    eax,DWORD PTR [eax]
  41dba0:	lds    esi,FWORD PTR [ebx]
  41dba2:	hlt    
  41dba3:	xor    BYTE PTR [ecx+eiz*1-0xffae9a5],bh
  41dbaa:	xchg   edi,eax
  41dbab:	mov    DWORD PTR [edx],eax
  41dbad:	adc    BYTE PTR [ebx+0x18],al
  41dbb0:	xor    BYTE PTR [ebx],0x53
  41dbb3:	jmp    0x41db68
  41dbb5:	seta   bl
  41dbb8:	xchg   edx,eax
  41dbb9:	xlat   BYTE PTR ds:[ebx]
  41dbba:	xchg   ecx,eax
  41dbbb:	push   esi
  41dbbc:	jg     0x41dbaf
  41dbbe:	aas    
  41dbbf:	fisubr WORD PTR [eax+eax*4+0x5d]
  41dbc3:	add    eax,0x6745
  41dbc8:	test   BYTE PTR [eax-0x77],dl
  41dbcb:	sbb    DWORD PTR [eax+ecx*8-0x322ed5cb],0x6c
  41dbd3:	adc    BYTE PTR [edi-0xe03c048],0xb4
  41dbda:	es pop ecx
  41dbdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbdd:	mov    ecx,0xe24ca068
  41dbe2:	jmp    0x5b755cea
  41dbe7:	sahf   
  41dbe8:	loope  0x41dbb4
  41dbea:	jmp    0xe292b645
  41dbef:	sbb    edx,DWORD PTR [edi-0x35fc5959]
  41dbf5:	lock lods eax,DWORD PTR ds:[esi]
  41dbf7:	adc    eax,0xc866de6f
  41dbfc:	and    al,0x59
  41dbfe:	xor    al,0xa8
  41dc00:	mov    ch,0xca
  41dc02:	loop   0x41db9f
  41dc04:	xchg   ebp,eax
  41dc05:	jne    0x41dbf0
  41dc07:	add    edx,DWORD PTR ds:0xc8864ee
  41dc0d:	int3   
  41dc0e:	retf   0xd9ae
  41dc11:	jne    0x41dbb2
  41dc13:	inc    edx
  41dc14:	das    
  41dc15:	mov    dh,0x3a
  41dc17:	jecxz  0x41db9c
  41dc19:	retf   0xc36c
  41dc1c:	cld    
  41dc1d:	fcomp  DWORD PTR [esi-0x3b]
  41dc20:	push   0xffffffdd
  41dc22:	jmp    0xa192d66a
  41dc27:	icebp  
  41dc28:	mov    al,ds:0x1a02b6
  41dc2d:	add    BYTE PTR [ebx+0x59],al
  41dc30:	fs xor eax,0x5382ca52
  41dc36:	aad    0xdd
  41dc38:	ins    BYTE PTR es:[edi],dx
  41dc39:	cmp    BYTE PTR [ebx+0x5e],bl
  41dc3c:	add    BYTE PTR [ecx-0x18143d77],ah
  41dc42:	or     ecx,0xe55a2985
  41dc48:	xchg   DWORD PTR [edi],esp
  41dc4a:	jl     0x41dc82
  41dc4c:	xchg   ecx,eax
  41dc4d:	aas    
  41dc4e:	ins    DWORD PTR es:[edi],dx
  41dc4f:	fimul  WORD PTR [ebp-0x4391f9c]
  41dc55:	inc    esi
  41dc56:	pop    esp
  41dc57:	mov    dh,0x9b
  41dc59:	inc    eax
  41dc5a:	ror    dl,cl
  41dc5c:	test   DWORD PTR [ecx],ebp
  41dc5e:	stc    
  41dc5f:	ins    BYTE PTR es:[edi],dx
  41dc60:	shl    BYTE PTR [ebp-0x14],0x4c
  41dc64:	or     bl,dl
  41dc66:	in     al,dx
  41dc67:	inc    ebx
  41dc68:	mov    ah,BYTE PTR [eax+esi*8-0x3a]
  41dc6c:	sti    
  41dc6d:	push   ss
  41dc6e:	mov    DWORD PTR [ecx*4-0x722192c9],ecx
  41dc75:	ins    BYTE PTR es:[edi],dx
  41dc76:	clc    
  41dc77:	(bad)  
  41dc78:	sti    
  41dc79:	(bad)  
  41dc7a:	pop    ebp
  41dc7b:	retf   
  41dc7c:	adc    eax,0x11e1e9d
  41dc81:	fs in  al,dx
  41dc83:	push   esp
  41dc84:	test   ebp,ecx
  41dc86:	fmul   st,st(2)
  41dc88:	sti    
  41dc89:	push   ebp
  41dc8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc8b:	mov    ds:0x1aece900,eax
  41dc90:	jbe    0x41dc62
  41dc92:	add    BYTE PTR [eax],al
  41dc94:	mov    dh,0x73
  41dc96:	ret    0x2ce9
  41dc99:	push   ds
  41dc9a:	dec    esp
  41dc9b:	xor    al,0xd4
  41dc9d:	jns    0x41dca0
  41dc9f:	push   ss
  41dca0:	jmp    0x2d279b45
  41dca5:	sub    eax,0xb5ac9588
  41dcaa:	je     0x41dc93
  41dcac:	sub    al,0xde
  41dcae:	dec    edi
  41dcaf:	aas    
  41dcb0:	pop    esi
  41dcb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dcb2:	push   ebx
  41dcb3:	pop    esp
  41dcb4:	sbb    BYTE PTR [edx-0x1e0cff48],bl
  41dcba:	add    BYTE PTR [eax],al
  41dcbc:	mov    esi,0x77e8fe18
  41dcc1:	loop   0x41dcc3
  41dcc3:	add    ch,cl
  41dcc5:	lahf   
  41dcc6:	dec    ebx
  41dcc7:	jmp    FWORD PTR [ebx]
  41dcc9:	fst    QWORD PTR [ecx]
  41dccb:	inc    eax
  41dccc:	push   ss
  41dccd:	inc    esp
  41dcce:	aas    
  41dccf:	hlt    
  41dcd0:	cmp    eax,0xa4840c9f
  41dcd5:	loope  0x41dcd7
  41dcd7:	add    BYTE PTR [ebx-0x7f475307],al
  41dcdd:	loop   0x41dcdf
  41dcdf:	add    BYTE PTR [esi-0x6c],ch
  41dce2:	add    eax,0xc5460600
  41dce7:	push   eax
  41dce8:	adc    DWORD PTR [ecx],edx
  41dcea:	cmc    
  41dceb:	(bad)  
  41dcec:	fist   DWORD PTR [eax-0x4a39bfef]
  41dcf2:	shl    BYTE PTR [ecx+edi*4+0x47],0x47
  41dcf7:	clc    
  41dcf8:	add    BYTE PTR [eax],al
  41dcfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcfb:	inc    edi
  41dcfc:	xchg   DWORD PTR [eax+0x51fc79c3],esp
  41dd02:	or     DWORD PTR [ecx],esp
  41dd04:	stc    
  41dd05:	add    al,0xc7
  41dd07:	fadd   QWORD PTR [eax]
  41dd09:	jmp    esi
  41dd0b:	pop    ebp
  41dd0c:	repz add ebx,edi
  41dd0f:	pop    ss
  41dd10:	mov    BYTE PTR [ebp-0x389e2],al
  41dd16:	push   esi
  41dd17:	in     al,0xfb
  41dd19:	imul   esi,DWORD PTR [ecx-0x1a],0xefc15305
  41dd20:	push   esp
  41dd21:	adc    eax,DWORD PTR [esi-0x1e]
  41dd24:	jg     0x41dce6
  41dd26:	cmp    esp,DWORD PTR [eax]
  41dd28:	mov    BYTE PTR [ebp-0x3880a],al
  41dd2e:	es jnp 0x41dd3f
  41dd31:	cld    
  41dd32:	das    
  41dd33:	lds    edi,FWORD PTR [edi]
  41dd35:	add    bh,bh
  41dd37:	cmp    eax,0x39baf843
  41dd3c:	mov    al,bh
  41dd3e:	inc    eax
  41dd3f:	inc    edi
  41dd40:	push   eax
  41dd41:	mov    esi,DWORD PTR [edx+0x30fcab16]
  41dd47:	out    0xad,al
  41dd49:	adc    dl,bl
  41dd4b:	les    edi,FWORD PTR [edi]
  41dd4d:	add    BYTE PTR [edx-0x5be4cd0b],ch
  41dd53:	jp     0x41dcfc
  41dd55:	mov    ch,BYTE PTR [ebx+0x8f88782]
  41dd5b:	and    DWORD PTR [eax-0x7f],edx
  41dd5e:	add    BYTE PTR [eax],al
  41dd60:	test   DWORD PTR [eax],0xc97b27b
  41dd66:	lods   eax,DWORD PTR ds:[esi]
  41dd67:	cld    
  41dd68:	pop    es
  41dd69:	mov    al,BYTE PTR [edi*8-0x2bd0818]
  41dd70:	cs call 0xcb1ad1a8
  41dd76:	add    edx,DWORD PTR [ecx]
  41dd78:	outs   dx,DWORD PTR ds:[esi]
  41dd79:	mov    ch,0xe7
  41dd7b:	pop    edx
  41dd7c:	enter  0x54a,0x32
  41dd80:	out    dx,eax
  41dd81:	out    dx,al
  41dd82:	xor    edi,edi
  41dd84:	mov    eax,0xb05a77b5
  41dd89:	ds dec ebx
  41dd8b:	call   0x406feb78
  41dd90:	das    
  41dd91:	cmp    al,BYTE PTR [edx-0x18]
  41dd94:	inc    DWORD PTR [ecx+0x42]
  41dd97:	in     al,0xff
  41dd99:	sub    DWORD PTR [edx-0x10],eax
  41dd9c:	fild   QWORD PTR [edx]
  41dd9e:	test   al,0x8a
  41dda0:	jmp    0x53e4:0x2d6a549c
  41dda7:	xchg   edx,edx
  41dda9:	mov    WORD PTR [edi-0x921e4ee],fs
  41ddaf:	inc    ebx
  41ddb0:	das    
  41ddb1:	push   ebp
  41ddb2:	and    al,0x98
  41ddb4:	pop    ss
  41ddb5:	fwait
  41ddb6:	sbb    eax,0xe9b415ff
  41ddbb:	add    ebp,DWORD PTR [edi]
  41ddbd:	xlat   BYTE PTR ds:[ebx]
  41ddbe:	ins    BYTE PTR es:[edi],dx
  41ddbf:	mov    al,ds:0xece9c740
  41ddc4:	add    BYTE PTR [eax],al
  41ddc6:	aad    0xc5
  41ddc8:	loop   0x41de49
  41ddca:	(bad)  
  41ddcb:	fsubp  st(1),st
  41ddcd:	add    ebx,DWORD PTR [esi-0x30]
  41ddd0:	and    BYTE PTR [ecx+0x1f],cl
  41ddd3:	xlat   BYTE PTR ds:[ebx]
  41ddd4:	arpl   WORD PTR [esi+0x18],bp
  41ddd7:	(bad)  
  41ddd8:	jmp    0xba144b55
  41dddd:	jle    0x41de4c
  41dddf:	(bad)  
  41dde0:	iret   
  41dde1:	adc    al,BYTE PTR [edx]
  41dde3:	adc    bh,BYTE PTR [edx+0x57]
  41dde6:	cli    
  41dde7:	lock std 
  41dde9:	push   ss
  41ddea:	outs   dx,DWORD PTR ds:[esi]
  41ddeb:	fisub  WORD PTR [esp+eax*8+0x3b]
  41ddef:	popa   
  41ddf0:	jl     0x41ddf6
  41ddf2:	das    
  41ddf3:	fisubr WORD PTR [esi+0x41]
  41ddf6:	jecxz  0x41ddfa
  41ddf8:	daa    
  41ddf9:	sti    
  41ddfa:	lods   al,BYTE PTR ds:[esi]
  41ddfb:	push   ebx
  41ddfc:	jmp    0x749b0d04
  41de01:	(bad)
  41de05:	push   esp
  41de06:	mov    edx,0x359bda4d
  41de0b:	imul   edx
  41de0d:	stos   BYTE PTR es:[edi],al
  41de0e:	lods   al,BYTE PTR ds:[esi]
  41de0f:	popf   
  41de10:	pop    ebp
  41de11:	sbb    dh,BYTE PTR [eax+eiz*2-0x3964517f]
  41de18:	cmp    DWORD PTR [ecx-0x53],edi
  41de1b:	jge    0x41dde9
  41de1d:	stos   BYTE PTR es:[edi],al
  41de1e:	mov    ebp,DWORD PTR ds:0xce609c1a
  41de24:	mov    ebx,0x9dadaa
  41de29:	cmp    eax,0x52dd0000
  41de2e:	test   DWORD PTR [ecx+0x39fbc997],ecx
  41de34:	ret    
  41de35:	mov    BYTE PTR [ecx],al
  41de37:	call   0x1e024068
  41de3c:	in     eax,dx
  41de3d:	push   edx
  41de3e:	test   DWORD PTR [ecx-0x65],edi
  41de41:	leave  
  41de42:	sti    
  41de43:	sbb    DWORD PTR [ebx],esp
  41de45:	pop    esi
  41de46:	add    cl,ch
  41de48:	cmp    BYTE PTR [ecx],dh
  41de4a:	mov    gs,WORD PTR [esp+ecx*8-0x3d]
  41de4e:	sti    
  41de4f:	outs   dx,BYTE PTR ds:[esi]
  41de50:	jl     0x41de81
  41de52:	jmp    0xfc074a3b
  41de57:	fs in  al,dx
  41de59:	push   ecx
  41de5a:	sub    DWORD PTR [edx+0x50906097],edi
  41de60:	aad    0xc2
  41de62:	push   eax
  41de63:	call   0x5a2c:0xe9193fa4
  41de6a:	sar    BYTE PTR [ebp+0x5985591e],0x9b
  41de71:	ret    0xb9fb
  41de74:	popa   
  41de75:	and    ch,dh
  41de77:	push   ds
  41de78:	sbb    al,0xee
  41de7a:	ret    0x85ac
  41de7d:	(bad)
  41de81:	ret    0x6fb
  41de84:	dec    ecx
  41de86:	sti    
  41de87:	aam    0xbc
  41de89:	out    dx,al
  41de8a:	inc    eax
  41de8b:	jmp    0xf9b7e5fe
  41de90:	add    BYTE PTR [eax],al
  41de92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de93:	pop    edi
  41de94:	inc    edx
  41de95:	out    0xd6,al
  41de97:	ret    0x54fb
  41de9a:	retf   
  41de9b:	ret    0x1915
  41de9e:	cmp    bl,BYTE PTR [esi]
  41dea0:	add    DWORD PTR [eax+0x50],ebp
  41dea3:	mov    dl,0xe6
  41dea5:	add    BYTE PTR [esi+0x120f00e1],dl
  41deab:	arpl   bp,di
  41dead:	(bad)  
  41deae:	mov    ecx,0x9d987f4d
  41deb3:	ja     0x41deb1
  41deb5:	push   eax
  41deb6:	cmp    al,0xe1
  41deb8:	data16 (bad) 
  41deba:	fild   WORD PTR ds:[eax-0x1d5ba00]
  41dec1:	adc    eax,0x40eb02
  41dec6:	rcr    DWORD PTR [ecx+0x44cb346e],cl
  41decc:	mov    ecx,?
  41dece:	mov    ecx,0x96684b76
  41ded3:	fiadd  DWORD PTR [eax]
  41ded5:	add    al,0xe1
  41ded7:	dec    ebx
  41ded8:	jg     0x41de72
  41deda:	lea    esi,[edi-0x4]
  41dedd:	push   eax
  41dede:	aad    0x68
  41dee0:	lock inc eax
  41dee2:	pop    ss
  41dee3:	loope  0x41df64
  41dee5:	rol    dl,0xee
  41dee8:	push   ecx
  41dee9:	lea    edx,[ebx+0x39fff26a]
  41deef:	sub    dl,BYTE PTR [edx-0x18]
  41def2:	ds out dx,eax
  41def4:	add    BYTE PTR [eax],al
  41def6:	add    BYTE PTR [eax],al
  41def8:	push   edx
  41def9:	call   0x1fe:0x510046f
  41df00:	dec    esp
  41df01:	add    eax,0x11985ffe
  41df06:	(bad)
  41df0a:	call   0xca00990
  41df0f:	add    dh,al
  41df11:	sub    DWORD PTR [ebx+0x57],edx
  41df14:	or     esi,DWORD PTR ds:0x7589f6fc
  41df1a:	jecxz  0x41df08
  41df1c:	mov    bl,0xe0
  41df1e:	add    BYTE PTR [edx+0x2f],ch
  41df21:	ret    
  41df22:	jb     0x41dea6
  41df24:	popf   
  41df25:	scas   al,BYTE PTR es:[edi]
  41df26:	test   al,0xfc
  41df28:	fbstp  TBYTE PTR [edi]
  41df2a:	mov    ebp,0x72b705fc
  41df2f:	mov    dl,0xf
  41df31:	mov    WORD PTR [eax-0x68884b04],gs
  41df37:	or     ebp,DWORD PTR [ebx]
  41df39:	jl     0x41dee3
  41df3b:	sub    BYTE PTR [edi-0x1c],0x3
  41df3f:	mov    DWORD PTR [ecx+0x6],ebp
  41df42:	sbb    eax,0x4f76190
  41df47:	mov    ebp,DWORD PTR [edx+0x38fca3b6]
  41df4d:	out    0x9c,al
  41df4f:	mov    ebx,0x82a94c39
  41df54:	out    dx,eax
  41df55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df56:	mov    bh,BYTE PTR [edi+0x72af5ab]
  41df5c:	add    BYTE PTR [eax],al
  41df5e:	pop    esp
  41df5f:	cmc    
  41df60:	and    DWORD PTR [edi-0x35c4a56],eax
  41df66:	or     BYTE PTR [ecx-0x1d],al
  41df69:	ret    
  41df6a:	sbb    al,0x75
  41df6c:	dec    DWORD PTR [edx-0x35c4a4e]
  41df72:	lock gs test al,0xd4
  41df76:	push   ebp
  41df77:	test   eax,0xfd9d8272
  41df7c:	test   al,0xfc
  41df7e:	jg     0x41dfef
  41df80:	dec    DWORD PTR [edx-0x3f82daa6]
  41df86:	xlat   BYTE PTR ds:[ebx]
  41df87:	adc    eax,DWORD PTR ds:0xc032c0fd
  41df8d:	jge    0x41dfa9
  41df8f:	push   eax
  41df90:	ret    0x474f
  41df93:	sub    eax,0x222f40c8
  41df98:	jnp    0x41df91
  41df9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df9b:	fsubrp st(2),st
  41df9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df9e:	call   0x92f02b58
  41dfa3:	ret    
  41dfa4:	ins    BYTE PTR es:[edi],dx
  41dfa5:	les    edi,FWORD PTR [ebx]
  41dfa7:	imul   ebp,DWORD PTR [ecx-0xeb63f80],0x713cb8f2
  41dfb1:	cmp    DWORD PTR [eax-0x3b],0x59b5a7b2
  41dfb8:	mov    cl,0xad
  41dfba:	arpl   bx,ax
  41dfbc:	cmp    DWORD PTR [edi-0x82b3c7d],esp
  41dfc2:	add    BYTE PTR [eax],al
  41dfc4:	jne    0x41dfe5
  41dfc6:	jmp    0x2f43:0xb40e3582
  41dfcd:	loopne 0x41df51
  41dfcf:	adc    DWORD PTR [ebx-0x10],ebp
  41dfd2:	sub    DWORD PTR [eax+edx*4],eax
  41dfd5:	out    dx,al
  41dfd6:	xchg   esp,eax
  41dfd7:	inc    ebx
  41dfd8:	das    
  41dfd9:	pop    es
  41dfda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfdb:	xor    BYTE PTR [edi],dh
  41dfdd:	das    
  41dfde:	mov    edx,0xf7ae3da6
  41dfe3:	inc    ebx
  41dfe4:	das    
  41dfe5:	mov    dh,0x62
  41dfe7:	cmp    BYTE PTR [edi],ch
  41dfe9:	ficomp WORD PTR [ecx+edi*2+0x0]
  41dfed:	mov    DWORD PTR [edx-0x59],0x4ea4a10
  41dff4:	das    
  41dff5:	push   ecx
  41dff6:	lods   al,BYTE PTR fs:[esi]
  41dff8:	loope  0x41dfbc
  41dffa:	sub    bl,BYTE PTR [ecx+ecx*2+0x4503e8de]
  41e001:	jmp    0xa712:0xc5fe816c
  41e008:	js     0x41e042
  41e00a:	jmp    0xd0c3:0x6e563d78
  41e011:	or     ah,bh
  41e013:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e014:	mov    bl,0x58
  41e016:	add    BYTE PTR [ecx],ch
  41e018:	push   ecx
  41e019:	sti    
  41e01a:	lea    esi,[esp+esi*2-0x76]
  41e01e:	mov    bl,0xe9
  41e020:	sub    al,0xde
  41e022:	call   0x1200deb
  41e027:	add    BYTE PTR fs:[eax],al
  41e02a:	out    dx,eax
  41e02b:	push   ebp
  41e02c:	push   eax
  41e02d:	(bad)  
  41e02f:	adc    cl,BYTE PTR [esi-0x4313b94]
  41e035:	mov    esi,0xbcd7b5dc
  41e03a:	xchg   edx,eax
  41e03b:	rol    DWORD PTR [ebp-0x3f90a657],0x6d
  41e042:	ins    BYTE PTR es:[edi],dx
  41e043:	dec    edi
  41e044:	or     bl,dl
  41e046:	ins    BYTE PTR es:[edi],dx
  41e047:	cmp    BYTE PTR [edx-0x4316b94],cl
  41e04d:	mov    es,edi
  41e04f:	pop    edi
  41e050:	clc    
  41e051:	jge    0x41dfe4
  41e053:	rcl    DWORD PTR [eax+0x11],0x2a
  41e057:	fiadd  WORD PTR [eax]
  41e059:	imul   edx,ecx,0x6cda68ec
  41e05f:	fiadd  WORD PTR [edi+0x40ed171c]
  41e065:	jmp    0x52323d01
  41e06a:	rol    edx,1
  41e06c:	push   eax
  41e06d:	pop    esp
  41e06e:	scas   eax,DWORD PTR es:[edi]
  41e06f:	shl    edi,0x46
  41e072:	rcl    DWORD PTR [ecx],1
  41e074:	cld    
  41e075:	pop    ss
  41e076:	ja     0x41e0d4
  41e078:	or     BYTE PTR [edi],dh
  41e07a:	xchg   ecx,eax
  41e07b:	ret    0x5c50
  41e07e:	scas   eax,DWORD PTR es:[edi]
  41e07f:	leave  
  41e080:	stc    
  41e081:	es xchg ecx,eax
  41e083:	adc    esp,edi
  41e085:	aaa    
  41e086:	push   edi
  41e087:	test   BYTE PTR [eax],dl
  41e089:	push   ss
  41e08a:	xchg   ecx,eax
  41e08b:	ret    0x72b8
  41e08e:	add    BYTE PTR [eax],al
  41e090:	sub    al,0xde
  41e092:	add    BYTE PTR [eax],al
  41e094:	push   ds
  41e095:	pop    ds
  41e096:	add    al,BYTE PTR [eax]
  41e098:	mov    BYTE PTR [esi+0x7f],0x8
  41e09c:	mov    al,ds:0x350fc7b
  41e0a1:	pop    esi
  41e0a2:	jmp    0x41e09c
  41e0a4:	xchg   ecx,eax
  41e0a5:	jnp    0x41e0f2
  41e0a7:	lea    ecx,[ebx]
  41e0a9:	ret    0xfffd
  41e0ac:	popa   
  41e0ad:	sub    cl,BYTE PTR [eax-0x38d997b]
  41e0b3:	call   DWORD PTR [esi]
  41e0b5:	inc    edi
  41e0b6:	lds    edx,FWORD PTR [eax-0xf]
  41e0b9:	or     eax,0x48560005
  41e0be:	scas   eax,DWORD PTR es:[edi]
  41e0bf:	and    BYTE PTR [esi+0x4de8fc7b],0xc9
  41e0c6:	cld    
  41e0c7:	inc    ebp
  41e0c9:	popf   
  41e0ca:	jne    0x8b4ad966
  41e0d0:	mov    BYTE PTR [edx],ch
  41e0d2:	jmp    0x11e2da5
  41e0d7:	cmp    DWORD PTR [ebx-0x13],edx
  41e0da:	xlat   BYTE PTR ds:[ebx]
  41e0db:	inc    ebx
  41e0dc:	push   ss
  41e0dd:	lock or BYTE PTR [edx+0x16],ch
  41e0e1:	jp     0x41e0f1
  41e0e3:	clc    
  41e0e4:	push   ss
  41e0e5:	sbb    eax,0xdd60b901
  41e0ea:	add    BYTE PTR [eax],al
  41e0ec:	xchg   ebx,eax
  41e0ed:	inc    ecx
  41e0ee:	cld    
  41e0ef:	div    BYTE PTR [ecx+0x7b]
  41e0f2:	lds    eax,FWORD PTR [eax]
  41e0f4:	add    BYTE PTR [eax],al
  41e0f6:	push   es
  41e0f7:	sbb    eax,0x1b6f7544
  41e0fc:	pop    ebx
  41e0fd:	mov    al,0xd7
  41e0ff:	adc    eax,0x1e18c3c4
  41e104:	and    eax,0x8a12c704
  41e109:	icebp  
  41e10a:	or     eax,eax
  41e10c:	jnp    0x41e15d
  41e10e:	das    
  41e10f:	ja     0x41e110
  41e111:	jae    0x41e13c
  41e113:	mov    DWORD PTR [edi-0x5a27e521],edx
  41e119:	mov    cl,ch
  41e11b:	pusha  
  41e11c:	rol    DWORD PTR [ebx],0x2f
  41e11f:	bound  edi,QWORD PTR [eax-0x15]
  41e122:	lods   al,BYTE PTR ds:[esi]
  41e123:	fisubr DWORD PTR [esi+edi*2-0x97575]
  41e12a:	nop
  41e12b:	add    ecx,DWORD PTR [ebx+0x55]
  41e12e:	mov    edx,0x2f97db6a
  41e133:	mov    bh,0xff
  41e135:	mov    bh,0xd3
  41e137:	mov    dh,0xff
  41e139:	jmp    DWORD PTR [esi+0x570fe0f2]
  41e13f:	sub    eax,DWORD PTR [edx]
  41e141:	add    BYTE PTR [edi],ch
  41e143:	jo     0x41e16f
  41e145:	adc    BYTE PTR [ecx+ebx*1-0x4d250303],ah
  41e14c:	js     0x41e122
  41e14e:	aad    0xa9
  41e150:	inc    edi
  41e151:	mov    DWORD PTR [esi+ebx*2+0x56],esi
  41e155:	fnstcw WORD PTR [eax]
  41e157:	push   edi
  41e158:	jnp    0x41e119
  41e15a:	add    BYTE PTR [eax],al
  41e15c:	mov    ebx,0x6fbff09c
  41e161:	cmp    ah,BYTE PTR [esp]
  41e164:	ja     0x41e1c3
  41e166:	mov    ecx,0xbd3919f5
  41e16b:	inc    ebx
  41e16c:	dec    ebx
  41e16d:	lea    eax,[ebx+0x77]
  41e170:	outs   dx,DWORD PTR ds:[esi]
  41e171:	mov    ch,0x64
  41e173:	cmovs  esi,DWORD PTR [ebp-0x871701]
  41e17a:	cmp    esp,DWORD PTR [ebx+edx*1]
  41e17d:	aad    0x2b
  41e17f:	push   cs
  41e180:	loope  0x41e1f3
  41e182:	fistp  DWORD PTR [ebx]
  41e184:	mov    DWORD PTR cs:[esi],ebp
  41e187:	sbb    DWORD PTR [ebx-0x22],0x4bd0e3cd
  41e18e:	fcomi  st,st(1)
  41e190:	mov    BYTE PTR [edx+0x29],bl
  41e193:	hlt    
  41e194:	lods   eax,DWORD PTR ds:[esi]
  41e195:	ins    BYTE PTR es:[edi],dx
  41e196:	jmp    0x2a4e109e
  41e19b:	call   0x5101:0x3e9dd04
  41e1a2:	ins    DWORD PTR es:[edi],dx
  41e1a3:	fild   WORD PTR [ebp+ebx*8+0x50ff03e9]
  41e1aa:	ins    DWORD PTR es:[edi],dx
  41e1ab:	call   0x42bbfc0
  41e1b0:	fist   WORD PTR [eax+0x2d]
  41e1b3:	call   0x5a7e97c4
  41e1b8:	jnp    0x41e179
  41e1ba:	dec    cl
  41e1bc:	std    
  41e1bd:	mov    ds:0x486f,al
  41e1c2:	adc    ebp,DWORD PTR [edi]
  41e1c4:	push   cs
  41e1c5:	and    ebx,ebx
  41e1c7:	fldln2 
  41e1c9:	(bad)  
  41e1ca:	fisttp QWORD PTR [esi+0x13dcfee5]
  41e1d0:	outs   dx,DWORD PTR ds:[esi]
  41e1d1:	pop    es
  41e1d2:	xlat   BYTE PTR ds:[ebx]
  41e1d3:	fucom  st(1)
  41e1d5:	add    ebp,DWORD PTR [edi]
  41e1d7:	push   ecx
  41e1d8:	pop    ebp
  41e1d9:	call   0x42bbf32
  41e1de:	loopne 0x41e232
  41e1e0:	scas   al,BYTE PTR es:[edi]
  41e1e1:	mov    ds:0x945eda78,eax
  41e1e6:	lods   eax,DWORD PTR ds:[esi]
  41e1e7:	(bad)  
  41e1e8:	lock pop ebx
  41e1ea:	sbb    ebp,ecx
  41e1ec:	xor    eax,0x1cde50f9
  41e1f1:	xlat   BYTE PTR ds:[ebx]
  41e1f2:	push   ebx
  41e1f3:	fsubp  st(1),st
  41e1f5:	sbb    BYTE PTR [ebp-0x5ee7aca8],ah
  41e1fb:	es jne 0x41e246
  41e1fe:	dec    ebx
  41e1ff:	(bad)  
  41e200:	cdq    
  41e201:	mov    gs,WORD PTR [ebp-0x12]
  41e204:	add    bl,al
  41e206:	retf   
  41e207:	push   ebp
  41e208:	out    dx,eax
  41e209:	inc    ecx
  41e20a:	scas   eax,DWORD PTR es:[edi]
  41e20b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e20c:	sti    
  41e20d:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41e20f:	jle    0x41e21c
  41e211:	gs adc al,0xc1
  41e214:	sti    
  41e215:	push   ss
  41e216:	xchg   edx,eax
  41e217:	dec    ecx
  41e218:	cld    
  41e219:	push   cs
  41e21a:	mov    WORD PTR [esi-0x21d31638],es
  41e220:	(bad)  
  41e221:	shl    al,0xf9
  41e224:	ins    BYTE PTR es:[edi],dx
  41e225:	rol    DWORD PTR [eax],cl
  41e227:	add    BYTE PTR [eax+eax*8-0x40],ch
  41e22b:	add    BYTE PTR [ebp-0x3f],al
  41e22e:	sti    
  41e22f:	out    0xa1,al
  41e231:	dec    edx
  41e232:	and    eax,0x528b9f9
  41e237:	ins    BYTE PTR es:[edi],dx
  41e238:	mov    edx,0x17ce194a
  41e23d:	out    dx,al
  41e23e:	xchg   DWORD PTR [edx+0x530d4bcd],esi
  41e244:	ss es jmp 0xfc0385c2
  41e24b:	gs ins BYTE PTR es:[edi],dx
  41e24d:	rol    DWORD PTR [edx+esi*1+0x13fbc18c],1
  41e254:	inc    ebx
  41e255:	push   ebx
  41e256:	jl     0x41e225
  41e258:	inc    esp
  41e259:	es jmp 0x12015c5
  41e25f:	adc    ebp,DWORD PTR [eax]
  41e261:	shl    DWORD PTR [edx-0xf],0xcd
  41e265:	xor    eax,DWORD PTR ds:0xe5017864
  41e26b:	jmp    0x842ac09c
  41e270:	lea    edi,[ebp+0x64f572fb]
  41e276:	test   BYTE PTR ds:0xe9fbbdd3,cl
  41e27c:	les    edx,FWORD PTR [ecx+eax*1]
  41e27f:	add    BYTE PTR [esi],al
  41e281:	loop   0x41e20c
  41e283:	lock push ebx
  41e285:	push   edi
  41e286:	outs   dx,DWORD PTR ds:[esi]
  41e287:	pop    ss
  41e288:	shr    BYTE PTR [esp+eax*8+0x50],0x0
  41e28d:	add    BYTE PTR [ebx+0x65],bh
  41e290:	pop    ds
  41e291:	loopne 0x41e259
  41e293:	loope  0x41e295
  41e295:	push   eax
  41e296:	push   ds
  41e297:	leave  
  41e298:	mov    ebx,0xe8f7d600
  41e29d:	arpl   dx,cx
  41e29f:	cmp    ah,0x8d
  41e2a2:	inc    edx
  41e2a3:	(bad)
  41e2a6:	xchg   esi,eax
  41e2a7:	loope  0x41e2f9
  41e2a9:	jmp    DWORD PTR [ebx]
  41e2ab:	mov    cl,0x88
  41e2ad:	inc    esp
  41e2ae:	jb     0x41e269
  41e2b0:	cld    
  41e2b1:	jne    0x41e24d
  41e2b3:	repnz std 
  41e2b5:	jo     0x41e335
  41e2b7:	mov    DWORD PTR [ebp-0x23],esi
  41e2ba:	pop    ecx
  41e2bb:	jg     0x41e245
  41e2bd:	mov    ah,0x32
  41e2bf:	jb     0x41e2bb
  41e2c1:	inc    DWORD PTR [esi-0x71db4894]
  41e2c7:	loop   0x41e2c9
  41e2c9:	add    BYTE PTR [esi-0x54],ch
  41e2cc:	mov    esp,0xf5644600
  41e2d1:	psrlq  mm4,QWORD PTR [ecx+0x6aed5e5c]
  41e2d8:	ficomp WORD PTR [ebp-0x6c]
  41e2db:	into   
  41e2dc:	add    BYTE PTR [ebp-0x33],dl
  41e2df:	ins    DWORD PTR es:[edi],dx
  41e2e0:	jp     0x41e2ce
  41e2e2:	add    ah,ah
  41e2e4:	add    BYTE PTR [eax],al
  41e2e6:	inc    ebp
  41e2e7:	clc    
  41e2e8:	push   ebp
  41e2e9:	lea    esp,[ebx-0x5e]
  41e2ec:	idiv   bh
  41e2ee:	mov    DWORD PTR [edx+0xa22a],ecx
  41e2f4:	push   es
  41e2f5:	loope  0x41e328
  41e2f7:	fistp  DWORD PTR [ebx+0x2f50b125]
  41e2fd:	ds cmp al,0xf0
  41e300:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e301:	mov    DWORD PTR [ebx-0x7804ad7a],ebp
  41e307:	pop    edx
  41e308:	out    0x2d,eax
  41e30a:	cmp    al,0xfc
  41e30c:	xlat   BYTE PTR ds:[ebx]
  41e30d:	addr16 fdivr st,st(4)
  41e310:	fsub   DWORD PTR [esi+edx*8-0x30a560a6]
  41e317:	mov    dh,BYTE PTR [edx+0x17]
  41e31a:	xor    eax,0x34db6a8b
  41e31f:	call   0x4142a7
  41e324:	stos   DWORD PTR es:[edi],eax
  41e325:	push   es
  41e326:	sbb    DWORD PTR ds:0xfc9c31a8,ebx
  41e32c:	sbb    bh,BYTE PTR [ebx-0x391f2f59]
  41e332:	(bad)  
  41e333:	cld    
  41e334:	sbb    bl,BYTE PTR [ebx-0x7180bd7a]
  41e33a:	(bad)  
  41e33b:	sbb    BYTE PTR [eax-0x7ca5796d],al
  41e341:	cmp    eax,0x1a6f83b
  41e346:	mov    eax,ds:0x9a82b28a
  41e34b:	cld    
  41e34c:	pusha  
  41e34d:	(bad)  
  41e34e:	mov    eax,DWORD PTR [edx+0x63]
  41e351:	(bad)  
  41e352:	lods   al,BYTE PTR ds:[esi]
  41e353:	jle    0x41e319
  41e355:	(bad)  
  41e356:	inc    DWORD PTR [ebx-0x2d910000]
  41e35c:	add    ebp,edi
  41e35e:	mov    edx,0x4372a052
  41e363:	pop    esi
  41e364:	pop    edi
  41e365:	mov    ah,0x2f
  41e367:	(bad)  
  41e368:	mov    al,ds:0x432f2372
  41e36d:	in     al,dx
  41e36e:	pop    ss
  41e36f:	sbb    al,0xfd
  41e371:	cld    
  41e372:	sbb    BYTE PTR [edi],bh
  41e374:	cmp    esi,esp
  41e376:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e377:	faddp  st(4),st
  41e379:	fwait
  41e37a:	mov    cl,0x19
  41e37c:	pop    esi
  41e37d:	mov    al,ds:0x8641b27d
  41e382:	pop    ss
  41e383:	mov    ebx,0x69202d4a
  41e388:	les    edi,FWORD PTR [edi+0x39ac680]
  41e38e:	das    
  41e38f:	ficomp WORD PTR [esi+0x4e]
  41e392:	retf   
  41e393:	neg    DWORD PTR [esi]
  41e395:	pop    ebx
  41e396:	cmp    BYTE PTR [ecx],dh
  41e398:	stos   BYTE PTR es:[edi],al
  41e399:	add    edi,DWORD PTR [edx]
  41e39b:	and    dh,BYTE PTR [edx]
  41e39d:	fisub  DWORD PTR [ebp-0x52]
  41e3a0:	mov    eax,0x1a216c10
  41e3a5:	xor    esi,DWORD PTR [edx-0x545e3a8f]
  41e3ab:	mov    ebx,0x68f0c86e
  41e3b0:	lods   al,BYTE PTR ds:[esi]
  41e3b1:	stos   DWORD PTR es:[edi],eax
  41e3b2:	dec    DWORD PTR ds:0xbb61ff02
  41e3b8:	loop   0x41e33d
  41e3ba:	ins    BYTE PTR es:[edi],dx
  41e3bb:	(bad)  
  41e3bc:	ficomp DWORD PTR [ecx]
  41e3be:	add    BYTE PTR [eax],al
  41e3c0:	jg     0x41e429
  41e3c2:	fldcw  WORD PTR [esp+ebp*8+0x739fcad6]
  41e3c9:	xor    esi,edx
  41e3cb:	lods   al,BYTE PTR ds:[esi]
  41e3cc:	and    al,0xd7
  41e3ce:	mov    edx,0xce9c5b9f
  41e3d3:	xchg   ebp,eax
  41e3d4:	arpl   WORD PTR [esi+eax*1-0x6c87b8e7],dx
  41e3db:	add    eax,0xc66ede2f
  41e3e0:	mov    ch,0x69
  41e3e2:	test   eax,0x61bb3ba1
  41e3e7:	std    
  41e3e8:	icebp  
  41e3e9:	daa    
  41e3ea:	std    
  41e3eb:	cdq    
  41e3ec:	mov    ebx,DWORD PTR [edi+ebx*1]
  41e3ef:	int    0xef
  41e3f1:	jmp    0xa404:0x67f33e00
  41e3f8:	fld    TBYTE PTR [ebx]
  41e3fa:	inc    ecx
  41e3fb:	jmp    0x307170dd
  41e400:	dec    ecx
  41e401:	cmc    
  41e402:	push   eax
  41e403:	jmp    0x41e422
  41e405:	rcl    DWORD PTR [edx+0x62],cl
  41e408:	cmp    esp,edx
  41e40a:	or     edi,DWORD PTR [esi-0x3e]
  41e40d:	fs adc al,0xfb
  41e410:	(bad)  
  41e411:	jmp    0xef14:0x6672182e
  41e418:	or     dh,ch
  41e41a:	dec    eax
  41e41b:	jmp    0x41e43b
  41e41d:	ret    
  41e41e:	pop    edx
  41e41f:	out    dx,al
  41e420:	pop    ecx
  41e421:	sti    
  41e422:	(bad)  
  41e423:	add    BYTE PTR cs:[eax],al
  41e426:	daa    
  41e427:	test   BYTE PTR [eax],0x2a
  41e42a:	and    BYTE PTR [ecx-0x40],dh
  41e42d:	je     0x41e466
  41e42f:	lahf   
  41e430:	rcr    BYTE PTR [eax+0x202fddec],1
  41e436:	jl     0x41e3c4
  41e438:	bound  esi,QWORD PTR [edx+0x126fdfe4]
  41e43e:	cmp    al,0x11
  41e440:	mov    BYTE PTR [ecx+0x37],ah
  41e443:	jmp    0x716bd5fa
  41e448:	mov    BYTE PTR [edi+0x20],0x7c
  41e44c:	cmp    al,0xf6
  41e44e:	adc    ch,ch
  41e450:	test   DWORD PTR [edi+0x7c],0x2cb6b7b4
  41e457:	fiadd  WORD PTR [eax]
  41e459:	inc    edi
  41e45a:	dec    esp
  41e45b:	mov    ch,0x3e
  41e45d:	btr    esi,0x4a
  41e461:	pop    es
  41e462:	fs sub bh,bh
  41e465:	sbb    bh,BYTE PTR [edx+0x19]
  41e468:	pop    eax
  41e469:	fcompp 
  41e46b:	cli    
  41e46c:	(bad)  
  41e46d:	jmp    ebp
  41e46f:	stos   BYTE PTR es:[edi],al
  41e470:	mov    DWORD PTR gs:[edx],edx
  41e473:	and    al,0xc2
  41e475:	xor    eax,esi
  41e477:	pop    es
  41e478:	sub    eax,0x9238f50
  41e47d:	mov    eax,ebx
  41e47f:	jmp    0x4f482b07
  41e484:	inc    ebp
  41e485:	push   ss
  41e486:	adc    eax,0xc74bab
  41e48b:	add    al,cl
  41e48d:	loope  0x41e48a
  41e48f:	call   esi
  41e491:	ffree  st(5)
  41e493:	push   es
  41e494:	and    ch,BYTE PTR [edx+0x3b]
  41e497:	add    al,ch
  41e499:	push   0x4d
  41e49b:	adc    al,0x1
  41e49d:	mov    dh,0x4b
  41e49f:	push   ss
  41e4a0:	xchg   esi,eax
  41e4a1:	fld    QWORD PTR [ecx-0x3a9b2d3c]
  41e4a7:	ret    
  41e4a8:	js     0x41e50e
  41e4aa:	jmp    0xa800:0xddb5e8
  41e4b1:	and    BYTE PTR ds:0x2d19708,ah
  41e4b7:	push   esi
  41e4b8:	not    BYTE PTR cs:[esi]
  41e4bb:	inc    DWORD PTR [ecx-0x2ba13a99]
  41e4c1:	out    0x0,al
  41e4c3:	mov    ecx,DWORD PTR [eax-0x16]
  41e4c6:	lds    eax,FWORD PTR [esi]
  41e4c8:	bound  esp,QWORD PTR [ebp+0x3b]
  41e4cb:	add    BYTE PTR [ebx],cl
  41e4cd:	mov    ds:0x5b46076f,al
  41e4d2:	push   cs
  41e4d3:	rol    BYTE PTR [ebp+ebx*1-0x4de700ff],0xe3
  41e4db:	xor    edi,DWORD PTR [edx+ebx*2-0x4]
  41e4df:	(bad)  
  41e4e0:	pop    eax
  41e4e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4e2:	lea    eax,[eax+0x56]
  41e4e5:	sahf   
  41e4e6:	cmp    BYTE PTR [esi+0x2f],0xbf
  41e4ea:	push   DWORD PTR [edx+0x19]
  41e4ed:	fld    QWORD PTR [edx+ebp*2]
  41e4f0:	add    BYTE PTR [eax],al
  41e4f2:	das    
  41e4f3:	int    0xff
  41e4f5:	imul   ebp,DWORD PTR [edi],0x3e0bf438
  41e4fb:	pop    es
  41e4fc:	add    eax,0x82bf6987
  41e501:	mov    edi,0x30c0c682
  41e506:	out    dx,eax
  41e507:	xchg   al,al
  41e509:	or     al,0xc0
  41e50b:	test   ebx,esi
  41e50d:	xor    bh,0xba
  41e510:	adc    al,0x1
  41e512:	sbb    al,0x7
  41e514:	ret    0x990c
  41e517:	ins    DWORD PTR es:[edi],dx
  41e518:	test   DWORD PTR [eax-0x41162511],0xeb8851ec
  41e522:	lods   al,BYTE PTR ds:[esi]
  41e523:	shl    ah,cl
  41e525:	push   ebp
  41e526:	pop    eax
  41e527:	sub    al,0x9d
  41e529:	xor    bh,ch
  41e52b:	xchg   BYTE PTR [edx-0x1d21348e],cl
  41e531:	jmp    0x41e562
  41e533:	(bad)  
  41e534:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e535:	loopne 0x41e4d2
  41e537:	mov    eax,0xb2f2869c
  41e53c:	mov    al,BYTE PTR [edx-0x61]
  41e53f:	push   esi
  41e540:	pushf  
  41e541:	adc    ah,BYTE PTR [edi-0x55ffc04c]
  41e547:	xchg   BYTE PTR [edx],dl
  41e549:	or     al,0x4e
  41e54b:	or     bl,BYTE PTR [ecx-0xeace504]
  41e551:	aas    
  41e552:	das    
  41e553:	cs inc ebx
  41e555:	lock add BYTE PTR [eax],al
  41e558:	aad    0x92
  41e55a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e55b:	iret   
  41e55c:	test   dh,al
  41e55e:	dec    DWORD PTR [edi-0x5e]
  41e561:	add    DWORD PTR [ecx-0x6a224119],ebp
  41e567:	add    ebp,DWORD PTR [edi]
  41e569:	bound  ebp,QWORD PTR [ecx-0x1dbc00e9]
  41e56f:	mov    gs,ebp
  41e571:	lods   eax,DWORD PTR ds:[esi]
  41e572:	cmp    DWORD PTR [edi+0x3c91c26d],ecx
  41e578:	adc    ebx,edi
  41e57a:	jmp    0xd474be06
  41e57f:	sub    DWORD PTR [ebx],ebp
  41e581:	imul   esp,DWORD PTR [eax+eiz*4],0xa7ac6978
  41e588:	or     BYTE PTR [edx],ch
  41e58a:	dec    esi
  41e58b:	add    ebp,DWORD PTR [edi]
  41e58d:	bound  ebp,QWORD PTR [ecx]
  41e58f:	pop    ss
  41e590:	and    ebp,DWORD PTR [ecx-0x5c]
  41e593:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e594:	sar    BYTE PTR [ebx+0x622f0355],1
  41e59a:	sub    DWORD PTR [esi],edx
  41e59c:	cmp    DWORD PTR [esi+ebx*8+0x29],eax
  41e5a0:	das    
  41e5a1:	(bad)  
  41e5a3:	idiv   BYTE PTR [eax-0x30]
  41e5a6:	test   eax,0x6ce65503
  41e5ab:	inc    esi
  41e5ac:	mov    edi,0x24c4670e
  41e5b1:	ud2    
  41e5b3:	div    ah
  41e5b5:	iret   
  41e5b6:	test   eax,0xe1a2ae03
  41e5bb:	mov    es,WORD PTR [eax]
  41e5bd:	add    ch,ch
  41e5bf:	rol    DWORD PTR [ecx],0xad
  41e5c2:	xchg   esi,ebx
  41e5c4:	jmp    0xa6e6cf05
  41e5c9:	xor    bl,dl
  41e5cb:	(bad)  
  41e5cc:	fldcw  WORD PTR [ebx+ebp*8+0x239bd3b1]
  41e5d3:	jo     0x41e57e
  41e5d5:	jge    0x41e582
  41e5d7:	mov    bh,0xe9
  41e5d9:	add    ebp,DWORD PTR [edi]
  41e5db:	arpl   WORD PTR [edx+0xb86193],bp
  41e5e1:	stos   DWORD PTR es:[edi],eax
  41e5e2:	mov    ds:0xb8f0e8d1,eax
  41e5e7:	mov    ecx,0x76def6fb
  41e5ec:	cdq    
  41e5ed:	xchg   esi,eax
  41e5ee:	xchg   esp,eax
  41e5ef:	gs inc esp
  41e5f1:	int    0x28
  41e5f3:	gs cmp eax,0xf71d1d
  41e5f9:	jno    0x41e668
  41e5fb:	fadd   QWORD PTR [esi-0x7718f0db]
  41e601:	das    
  41e602:	sub    BYTE PTR [ebx+0x42],ah
  41e605:	in     eax,0xa6
  41e607:	pushf  
  41e608:	jg     0x41e5ef
  41e60a:	loopne 0x41e5d6
  41e60c:	add    BYTE PTR [ecx+0x3d],dh
  41e60f:	mov    bh,0x6f
  41e611:	out    0x42,eax
  41e613:	sar    bl,cl
  41e615:	aad    0x8
  41e617:	iret   
  41e618:	push   eax
  41e619:	inc    esi
  41e61a:	pushf  
  41e61b:	pop    ebp
  41e61c:	(bad)  
  41e61d:	in     eax,dx
  41e61e:	mov    ebx,ebx
  41e620:	call   0xb541e70e
  41e625:	mov    ecx,0xbed8c3fb
  41e62a:	add    edx,DWORD PTR [edx+0x2b]
  41e62d:	ficom  WORD PTR [eax+0x6a]
  41e630:	in     eax,dx
  41e631:	into   
  41e632:	push   edx
  41e633:	push   ss
  41e634:	jl     0x41e693
  41e636:	(bad)  
  41e637:	frstor [ebp+0x18]
  41e63a:	mov    edi,0x88102cf5
  41e63f:	clc    
  41e640:	(bad)  
  41e641:	int    0x0
  41e643:	jmp    0xc5869674
  41e648:	xor    al,0xb7
  41e64a:	outs   dx,DWORD PTR ds:[esi]
  41e64b:	out    dx,eax
  41e64c:	ds mov bh,0x1
  41e650:	xchg   esp,eax
  41e651:	mov    ecx,0x9c36af87
  41e656:	add    al,0xe9
  41e658:	mov    ecx,0x91000920
  41e65d:	fadd   QWORD PTR [eax]
  41e65f:	mov    al,BYTE PTR [esi]
  41e661:	loop   0x41e6e2
  41e663:	rcl    BYTE PTR [edx],0xe8
  41e666:	mov    DWORD PTR [eax],ecx
  41e668:	es push ebx
  41e66a:	dec    edx
  41e66b:	or     ch,dl
  41e66d:	cld    
  41e66e:	or     BYTE PTR [eax],al
  41e670:	mov    ebp,0xf2b7e2a4
  41e675:	push   edx
  41e676:	cld    
  41e677:	push   ebp
  41e678:	lea    edi,[ebp+0x4a]
  41e67b:	push   ecx
  41e67c:	xchg   ebp,eax
  41e67d:	aam    0x8
  41e67f:	add    BYTE PTR [edx],ah
  41e681:	mov    dh,0xab
  41e683:	add    edi,ecx
  41e685:	pushf  
  41e686:	and    BYTE PTR [ebp+0x0],0x0
  41e68a:	jle    0x41e66d
  41e68c:	push   edx
  41e68d:	push   0x3bb0d6
  41e692:	fiadd  WORD PTR [ecx]
  41e694:	push   ss
  41e695:	inc    eax
  41e696:	push   es
  41e697:	mov    cl,ah
  41e699:	push   esp
  41e69a:	jns    0x41e6f4
  41e69c:	mov    al,dh
  41e69e:	push   ebx
  41e69f:	dec    edi
  41e6a0:	outs   dx,DWORD PTR ds:[esi]
  41e6a1:	cmp    bl,BYTE PTR [ebp-0x21]
  41e6a4:	and    DWORD PTR [ebp+0x1a],0x1a4d87e1
  41e6ab:	jmp    0xc07e:0xad86ff52
  41e6b2:	mov    ds:0x1a4588bb,eax
  41e6b7:	pop    esi
  41e6b8:	mov    ebx,0x3649d74
  41e6bd:	(bad)  
  41e6be:	ret    
  41e6bf:	pop    ecx
  41e6c0:	push   ecx
  41e6c1:	push   eax
  41e6c2:	cdq    
  41e6c3:	icebp  
  41e6c4:	sbb    al,0x85
  41e6c6:	inc    esi
  41e6c7:	in     eax,0x4
  41e6c9:	xor    DWORD PTR [ebx+0x538afb59],0x56
  41e6d0:	mov    BYTE PTR [eax],cl
  41e6d2:	ss push edi
  41e6d4:	dec    edx
  41e6d5:	or     BYTE PTR [edi],ch
  41e6d7:	inc    eax
  41e6d8:	call   DWORD PTR [ebp+0x68]
  41e6db:	test   DWORD PTR [ecx+ecx*4],0x83369eea
  41e6e2:	outs   dx,DWORD PTR ds:[esi]
  41e6e3:	jmp    0x41e6e0
  41e6e5:	xchg   ah,ch
  41e6e7:	mov    esi,0x86fd98ac
  41e6ec:	mov    eax,0x2fda0000
  41e6f2:	test   eax,0xd07a44e
  41e6f7:	or     edx,0x3789044a
  41e6fd:	adc    ch,BYTE PTR [esp+edi*8]
  41e700:	jge    0x41e6d9
  41e702:	cdq    
  41e703:	dec    esi
  41e704:	addr16 cmp al,ch
  41e707:	jae    0x41e734
  41e709:	dec    eax
  41e70a:	sbb    al,0xfc
  41e70c:	das    
  41e70d:	inc    eax
  41e70e:	cmp    al,0xfc
  41e710:	test   BYTE PTR [edi],0x2f
  41e713:	push   0x3fac3f
  41e718:	xchg   DWORD PTR [edi-0x10],esi
  41e71b:	aas    
  41e71c:	das    
  41e71d:	pop    ds
  41e71e:	dec    ecx
  41e71f:	push   esp
  41e720:	loopne 0x41e73d
  41e722:	mov    gs,edi
  41e724:	mov    dl,0xec
  41e726:	adc    BYTE PTR [eax+0x78],bl
  41e729:	in     al,dx
  41e72a:	adc    BYTE PTR [ebx+edi*1],ah
  41e72d:	add    al,0xec
  41e72f:	inc    edi
  41e730:	sbb    al,0x87
  41e732:	dec    DWORD PTR [eax+0x739a39b7]
  41e738:	cli    
  41e739:	aas    
  41e73a:	call   DWORD PTR [ecx+eax*1-0x1c]
  41e73e:	xor    al,0x20
  41e740:	stos   BYTE PTR es:[edi],al
  41e741:	push   es
  41e742:	or     al,0x2a
  41e744:	sub    ah,ch
  41e746:	dec    eax
  41e747:	and    al,0x3f
  41e749:	inc    eax
  41e74a:	dec    DWORD PTR [esi-0x1f]
  41e74d:	ret    
  41e74e:	das    
  41e74f:	cmp    BYTE PTR [edx+0xea9dd],ch
  41e755:	add    BYTE PTR ds:0x1ce055b5,dl
  41e75b:	imul   ebp,ebx,0x1a0d6a31
  41e761:	jg     0x41e703
  41e763:	sub    dh,dh
  41e765:	mov    WORD PTR [edx],?
  41e767:	dec    eax
  41e768:	jmp    0x887f:0x2a0d5231
  41e76f:	sub    edx,esp
  41e771:	mov    WORD PTR [edx],gs
  41e773:	or     al,0xa3
  41e775:	xor    esp,DWORD PTR [edi]
  41e777:	icebp  
  41e778:	xchg   ebx,eax
  41e779:	xor    BYTE PTR [edx],dh
  41e77b:	retf   0xf52d
  41e77e:	push   0x83c15ede
  41e783:	adc    al,0xa8
  41e785:	pop    es
  41e786:	das    
  41e787:	or     DWORD PTR [edi-0x59],ebp
  41e78a:	popa   
  41e78b:	addr16 sub al,0xc
  41e78e:	popa   
  41e78f:	or     eax,DWORD PTR [edx+0x62b40239]
  41e795:	mov    WORD PTR [eax],cs
  41e797:	pop    edx
  41e798:	push   ebx
  41e799:	punpckhwd mm3,QWORD PTR [edi-0x34]
  41e79d:	xchg   edi,eax
  41e79e:	call   0x75c8cb0b
  41e7a3:	mov    dl,0x98
  41e7a5:	cwde   
  41e7a6:	pop    ebp
  41e7a7:	retf   0x50ea
  41e7aa:	gs into 
  41e7ac:	cwde   
  41e7ad:	xor    edx,ecx
  41e7af:	push   cs
  41e7b0:	add    bh,BYTE PTR [edi-0x80]
  41e7b3:	sub    ch,dh
  41e7b5:	test   BYTE PTR [ebp-0x4e],cl
  41e7b8:	jmp    0x2a41e849
  41e7bd:	or     al,0x13
  41e7bf:	xor    esi,DWORD PTR [edi]
  41e7c1:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41e7c3:	xchg   edi,eax
  41e7c4:	mov    bh,0xae
  41e7c6:	ins    BYTE PTR es:[edi],dx
  41e7c7:	ret    
  41e7c8:	sbb    al,0xd5
  41e7ca:	outs   dx,BYTE PTR ds:[esi]
  41e7cb:	or     eax,DWORD PTR ds:0xa79900b3
  41e7d1:	and    al,0x51
  41e7d3:	bound  esp,QWORD PTR [esi+eiz*2+0x23a03f02]
  41e7da:	or     DWORD PTR [edx],ebx
  41e7dc:	imul   esp,DWORD PTR [eax-0x5],0xffffffe6
  41e7e0:	fdiv   DWORD PTR [edx-0x19]
  41e7e3:	and    DWORD PTR [eax+0x3ec61530],edi
  41e7e9:	into   
  41e7ea:	sti    
  41e7eb:	xor    al,0x27
  41e7ed:	(bad)  
  41e7ee:	and    dh,BYTE PTR [esi-0x4e784d60]
  41e7f4:	scas   al,BYTE PTR es:[edi]
  41e7f5:	mov    dl,0x75
  41e7f7:	in     eax,dx
  41e7f8:	pop    esi
  41e7f9:	jae    0x41e7e2
  41e7fb:	fldenv [ebp-0x24c5f6e0]
  41e801:	ret    
  41e802:	cli    
  41e803:	mov    ?,WORD PTR [eax-0x56930f9b]
  41e809:	das    
  41e80a:	add    eax,0x14c5d5bb
  41e80f:	bound  ecx,QWORD PTR [ecx]
  41e811:	or     dl,BYTE PTR [ebx+0x6e]
  41e814:	cmp    edi,esi
  41e816:	xchg   DWORD PTR [ecx-0x5c],eax
  41e819:	fcom   DWORD PTR [edx+0x5e]
  41e81c:	cmp    esp,esi
  41e81e:	test   DWORD PTR [edx],esi
  41e820:	add    BYTE PTR [eax],al
  41e822:	xor    BYTE PTR [edx-0x41],cl
  41e825:	(bad)  
  41e826:	loopne 0x41e831
  41e828:	cld    
  41e829:	cdq    
  41e82a:	and    al,0x68
  41e82c:	mov    edi,0xca1419a2
  41e831:	sub    eax,ebx
  41e833:	mov    dl,0x54
  41e835:	bound  edx,QWORD PTR [edi-0x3fe13a3]
  41e83b:	in     al,dx
  41e83c:	xlat   BYTE PTR ds:[ebx]
  41e83d:	mov    bh,0xfd
  41e83f:	or     al,0x50
  41e841:	(bad)  
  41e842:	call   0xb40b43a2
  41e847:	adc    DWORD PTR ds:0x28eb1f00,esp
  41e84d:	call   0x3fc396
  41e852:	sbb    bl,BYTE PTR [edx-0x25c17bf4]
  41e858:	add    BYTE PTR [eax],al
  41e85a:	cmp    DWORD PTR [ebp+0x6e],esp
  41e85d:	call   0xff5004c0
  41e862:	xor    DWORD PTR [edx],0x13ca0fbc
  41e868:	cld    
  41e869:	inc    DWORD PTR [esi+0x61]
  41e86c:	push   esi
  41e86d:	lock fcomip st,st(5)
  41e870:	hlt    
  41e871:	jmp    0x41e8c7
  41e873:	(bad)  
  41e874:	fsubr  DWORD PTR [edx+0x4b]
  41e877:	gs ds clc 
  41e87a:	test   BYTE PTR [edx],0xe9
  41e87d:	mov    dl,0x41
  41e87f:	dec    ebx
  41e880:	cld    
  41e881:	cmp    edx,ebp
  41e883:	fadd   DWORD PTR [ebp+eax*4-0x21ea0000]
  41e88a:	add    BYTE PTR [ebx+0x626fdeae],al
  41e890:	popf   
  41e891:	push   ds
  41e892:	stc    
  41e893:	xor    ebx,DWORD PTR [ecx-0x4e]
  41e896:	mov    DWORD PTR [edi-0x22],ecx
  41e899:	lea    eax,[esi-0x4]
  41e89c:	adc    eax,0x5d88860
  41e8a1:	div    eax
  41e8a3:	mov    DWORD PTR [ebx+0x7a751055],ebx
  41e8a9:	pop    esp
  41e8aa:	rol    BYTE PTR ds:0x3afb8345,0x9b
  41e8b1:	jns    0x41e927
  41e8b3:	cmp    al,0x84
  41e8b5:	fidivr WORD PTR [ecx]
  41e8b7:	pop    ebp
  41e8b8:	outs   dx,BYTE PTR ds:[esi]
  41e8b9:	loopne 0x41e8ea
  41e8bb:	cmp    eax,0xa0ddc6
  41e8c0:	cdq    
  41e8c1:	mov    ebx,0x712f0069
  41e8c6:	mov    DWORD PTR cs:[eax-0x21],ebp
  41e8ca:	dec    esp
  41e8cb:	or     eax,0xbf7bd898
  41e8d0:	sbb    eax,DWORD PTR [esi+edi*2-0x7339b0bc]
  41e8d7:	pop    edx
  41e8d8:	jg     0x41e918
  41e8da:	adc    esp,esi
  41e8dc:	lods   al,BYTE PTR ds:[esi]
  41e8dd:	lock loopne 0x41e8df
  41e8e0:	jp     0x41e8dc
  41e8e2:	cwde   
  41e8e3:	(bad)  
  41e8e4:	jecxz  0x41e91c
  41e8e6:	cmp    BYTE PTR [edx+0x67],0xc7
  41e8ea:	or     eax,0x5800008a
  41e8ef:	add    ch,ch
  41e8f1:	call   0x50fa9da0
  41e8f6:	dec    eax
  41e8f7:	repnz nop
  41e8f9:	mov    BYTE PTR [eax-0x80],ch
  41e8fc:	or     esi,eax
  41e8fe:	inc    edi
  41e8ff:	mov    cl,0x4
  41e901:	std    
  41e902:	xor    BYTE PTR [ebx],bh
  41e904:	lds    esi,FWORD PTR [ebx+0x3f]
  41e907:	dec    eax
  41e908:	int    0xfc
  41e90a:	cmp    bh,bh
  41e90c:	out    dx,al
  41e90d:	aas    
  41e90e:	das    
  41e90f:	inc    edx
  41e910:	lds    esi,FWORD PTR [ebx+0x2b]
  41e913:	idiv   edi
  41e915:	call   0x5e015e47
  41e91a:	fs jle 0x41e8de
  41e91d:	dec    esi
  41e91e:	popa   
  41e91f:	jo     0x41e94a
  41e921:	xor    BYTE PTR [edi],al
  41e923:	or     eax,0x41e8fcec
  41e928:	lds    esi,FWORD PTR [ebx+0x41]
  41e92b:	cmp    al,0x49
  41e92d:	and    al,0x43
  41e92f:	inc    esp
  41e930:	or     eax,0x76eacfd
  41e935:	std    
  41e936:	lods   al,BYTE PTR ds:[esi]
  41e937:	jle    0x41e93c
  41e939:	std    
  41e93a:	lods   al,BYTE PTR ds:[esi]
  41e93b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e93c:	out    dx,eax
  41e93d:	jmp    FWORD PTR [ebp-0x4f107623]
  41e943:	gs mov cl,0xfb
  41e946:	mov    bh,0xad
  41e948:	inc    BYTE PTR [ecx]
  41e94a:	pop    esi
  41e94b:	test   al,0x64
  41e94d:	mov    ds,WORD PTR ds:0xc3b6da
  41e953:	add    BYTE PTR [edi+0x53406ed3],al
  41e959:	into   
  41e95a:	pop    esi
  41e95b:	xchg   esi,eax
  41e95c:	test   eax,0x7aba01d7
  41e961:	mov    al,0xe2
  41e963:	jg     0x41e915
  41e965:	sub    ah,bl
  41e967:	stos   DWORD PTR es:[edi],eax
  41e968:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e969:	inc    eax
  41e96a:	rcl    DWORD PTR [edi+edx*2-0x442a147],cl
  41e971:	mov    edx,db0
  41e974:	sub    dh,bl
  41e976:	adc    al,0x89
  41e978:	push   esp
  41e979:	pop    esp
  41e97a:	(bad)  
  41e97d:	pop    es
  41e97e:	pop    ebp
  41e97f:	sub    ecx,DWORD PTR ds:[esi]
  41e982:	mov    ds:0xbeed230e,eax
  41e987:	xor    BYTE PTR [edx],ch
  41e989:	sub    ah,dl
  41e98b:	stos   DWORD PTR es:[edi],eax
  41e98c:	xor    eax,0xb003e8f2
  41e991:	sbb    edx,esi
  41e993:	fsubr  st,st(7)
  41e995:	fbld   TBYTE PTR [ebp+0x5e]
  41e998:	or     BYTE PTR [eax+0xb2d29e9],dh
  41e99e:	pop    ss
  41e99f:	mov    ebx,esi
  41e9a1:	(bad)  
  41e9a2:	fild   DWORD PTR ds:0xc365aff2
  41e9a8:	cmp    ebx,DWORD PTR [edx+0x5f]
  41e9ab:	add    ebp,DWORD PTR [edi]
  41e9ad:	fidiv  WORD PTR [edx+0x51c65d86]
  41e9b3:	loopne 0x41e9d7
  41e9b5:	scas   eax,DWORD PTR es:[edi]
  41e9b6:	cmp    bh,BYTE PTR [edi+0x0]
  41e9b9:	add    BYTE PTR [eax-0x484bfed6],cl
  41e9bf:	sbb    bl,BYTE PTR [ecx]
  41e9c1:	cli    
  41e9c2:	stc    
  41e9c3:	in     eax,0x87
  41e9c5:	(bad)  
  41e9c7:	int    0x40
  41e9c9:	jmp    0x64370683
  41e9ce:	arpl   si,dx
  41e9d0:	dec    edi
  41e9d1:	popa   
  41e9d2:	pop    ecx
  41e9d3:	mov    dh,0x8d
  41e9d5:	lods   al,BYTE PTR ds:[esi]
  41e9d6:	mov    eax,0xb1e4671f
  41e9db:	sbb    al,0xf5
  41e9dd:	cdq    
  41e9de:	fwait
  41e9df:	jmp    0x2674:0x6ef917fb
  41e9e6:	test   al,0x34
  41e9e8:	std    
  41e9e9:	in     al,0x47
  41e9eb:	out    0x4f,eax
  41e9ed:	div    BYTE PTR fs:[ecx-0x19c931b0]
  41e9f4:	sti    
  41e9f5:	cmp    al,0x2f
  41e9f7:	mov    cl,0x33
  41e9f9:	mov    esi,0x3dc05c85
  41e9fe:	push   ebp
  41e9ff:	inc    bp
  41ea01:	loope  0x41ea6e
  41ea03:	sbb    al,0xfd
  41ea05:	sbb    al,0x3d
  41ea07:	pop    esi
  41ea08:	inc    ebx
  41ea09:	leave  
  41ea0a:	xor    esi,DWORD PTR [ecx-0x5a207cd]
  41ea10:	sti    
  41ea11:	es sti 
  41ea13:	mov    cl,0x15
  41ea15:	aad    0x1a
  41ea17:	out    dx,eax
  41ea18:	add    BYTE PTR [esi+0x26],bh
  41ea1b:	loop   0x41ea05
  41ea1d:	fild   WORD PTR [eax]
  41ea1f:	add    BYTE PTR [edi],al
  41ea21:	mov    dl,0xfb
  41ea23:	cmp    DWORD PTR [edx],esi
  41ea25:	lds    esp,FWORD PTR [eax]
  41ea27:	mov    edx,0x72ed2b9d
  41ea2c:	hlt    
  41ea2d:	mov    cl,0x75
  41ea2f:	inc    ecx
  41ea30:	ret    
  41ea31:	ret    0x4e0d
  41ea34:	mov    esp,0x690033b1
  41ea39:	mov    ch,0x43
  41ea3b:	adc    dl,BYTE PTR [esi-0x358a0226]
  41ea41:	push   edx
  41ea42:	out    dx,eax
  41ea43:	adc    al,0x9
  41ea45:	dec    ebx
  41ea46:	xor    eax,eax
  41ea48:	call   0x9f04ae4c
  41ea4d:	fimul  DWORD PTR [edi-0x75]
  41ea50:	sub    dl,BYTE PTR [edi-0x19]
  41ea53:	adc    ch,dl
  41ea55:	das    
  41ea56:	pop    esi
  41ea57:	adc    al,0xb1
  41ea59:	das    
  41ea5a:	jle    0x41ea6c
  41ea5c:	sbb    eax,0xb0569a0
  41ea61:	and    eax,0x52a050f9
  41ea66:	aam    0xd
  41ea68:	mov    DWORD PTR [ebx-0x80],ecx
  41ea6b:	clc    
  41ea6c:	push   ebx
  41ea6d:	aad    0x38
  41ea6f:	mov    edx,DWORD PTR [ebx]
  41ea71:	bound  esi,QWORD PTR [eax]
  41ea73:	inc    esi
  41ea74:	pop    esi
  41ea75:	xor    BYTE PTR [edi-0x4],al
  41ea78:	push   esp
  41ea79:	sbb    al,0x19
  41ea7b:	lea    esp,[esi]
  41ea7d:	in     eax,0x83
  41ea7f:	jge    0x41ea07
  41ea81:	xlat   BYTE PTR ds:[ebx]
  41ea82:	test   BYTE PTR [ecx+0x562b0000],0x80
  41ea89:	rol    DWORD PTR [esi+0x31],cl
  41ea8c:	aas    
  41ea8d:	clc    
  41ea8e:	sahf   
  41ea8f:	push   ds
  41ea90:	std    
  41ea91:	not    bh
  41ea93:	loop   0x41eb04
  41ea95:	add    al,0x93
  41ea97:	mov    eax,ds:0xe23c156e
  41ea9c:	push   ecx
  41ea9d:	push   edi
  41ea9e:	jge    0x41ea37
  41eaa0:	jecxz  0x41eb21
  41eaa2:	or     edx,DWORD PTR [ecx-0x4]
  41eaa5:	test   dh,al
  41eaa7:	(bad)  
  41eaa8:	mov    ch,0x32
  41eaaa:	inc    esi
  41eaab:	lock pop ecx
  41eaad:	leave  
  41eaae:	adc    eax,0x2ff03f2c
  41eab3:	ds dec edx
  41eab5:	or     BYTE PTR [edx+eax*4-0x4c96796d],ah
  41eabc:	jl     0x41eb3b
  41eabe:	pop    ds
  41eabf:	xor    dl,BYTE PTR cs:[edi+edi*2]
  41eac3:	mov    dh,0x9a
  41eac5:	in     eax,0x5e
  41eac7:	inc    eax
  41eac8:	inc    edi
  41eac9:	or     BYTE PTR [esp+esi*2-0x67807705],ah
  41ead0:	mov    ah,0x50
  41ead2:	stc    
  41ead3:	aaa    
  41ead4:	mov    ?,esp
  41ead6:	and    esp,DWORD PTR [ecx-0x7e]
  41ead9:	mov    edi,0x80ff512a
  41eade:	pop    esi
  41eadf:	mov    bh,0x34
  41eae1:	push   eax
  41eae2:	mov    ah,0xfc
  41eae4:	xchg   edi,eax
  41eae5:	cmp    ebp,DWORD PTR [edx]
  41eae7:	mov    esp,0x8391
  41eaec:	outs   dx,DWORD PTR ds:[esi]
  41eaed:	or     esi,DWORD PTR [ecx+ecx*4]
  41eaf0:	loopne 0x41ea98
  41eaf2:	fdiv   QWORD PTR [edi+esi*1+0x38]
  41eaf6:	lahf   
  41eaf7:	add    al,BYTE PTR [ecx]
  41eaf9:	lahf   
  41eafa:	fist   WORD PTR [ebx]
  41eafc:	push   eax
  41eafd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eafe:	jge    0x41ead7
  41eb00:	mov    dl,0x80
  41eb02:	sbb    BYTE PTR [eax-0x56],al
  41eb05:	ins    DWORD PTR es:[edi],dx
  41eb06:	pop    es
  41eb07:	or     eax,ebp
  41eb09:	rcl    DWORD PTR [ecx+0x3fa90b12],cl
  41eb0f:	add    BYTE PTR [esi+ebp*2-0x12c8176f],ch
  41eb16:	xor    eax,0xfa9e0755
  41eb1b:	cld    
  41eb1c:	adc    BYTE PTR [eax-0x2ed58d37],ah
  41eb22:	(bad)  
  41eb23:	cld    
  41eb24:	jnp    0x41eac1
  41eb26:	out    0x88,eax
  41eb28:	icebp  
  41eb29:	aas    
  41eb2a:	mov    esi,0x25ddc0e7
  41eb2f:	add    ebp,DWORD PTR [edi]
  41eb31:	pop    ecx
  41eb32:	lods   eax,DWORD PTR ds:[esi]
  41eb33:	out    0x30,eax
  41eb35:	push   edi
  41eb36:	call   0xe67383c1
  41eb3b:	push   ebx
  41eb3c:	shl    DWORD PTR [edi-0x5728cb0f],1
  41eb42:	(bad)  
  41eb43:	nop
  41eb44:	ret    
  41eb45:	out    dx,eax
  41eb46:	sub    DWORD PTR [edx],esi
  41eb48:	push   esi
  41eb49:	pop    es
  41eb4a:	sub    ah,bh
  41eb4c:	mov    al,0x11
  41eb4e:	outs   dx,DWORD PTR ds:[esi]
  41eb4f:	mov    al,ds:0x22b70000
  41eb54:	repnz test BYTE PTR [ebp+ecx*8-0x260a834a],dl
  41eb5c:	mov    ah,0xfa
  41eb5f:	pusha  
  41eb60:	add    DWORD PTR [ecx+0x470623b],edx
  41eb66:	das    
  41eb67:	ficomp WORD PTR [edx+0x1adfd7e]
  41eb6d:	and    ebp,DWORD PTR ds:[ebp+0x31a887e2]
  41eb74:	pop    esi
  41eb75:	int    0x5
  41eb77:	mov    dl,0x5a
  41eb79:	sbb    ebp,ebx
  41eb7b:	aad    0x5e
  41eb7d:	inc    esi
  41eb7e:	daa    
  41eb7f:	jmp    0x3b017fb0
  41eb84:	addr16 es aas 
  41eb87:	frstor [esi+0x26]
  41eb8a:	inc    ebx
  41eb8b:	fnstsw WORD PTR [edi]
  41eb8d:	add    al,0x32
  41eb8f:	xor    bl,BYTE PTR [esi+0x14abf37c]
  41eb95:	xchg   esp,eax
  41eb96:	or     BYTE PTR [ebp+eiz*8-0x70],bl
  41eb9a:	sbb    esp,DWORD PTR [ebx-0x57]
  41eb9d:	pop    ss
  41eb9e:	jge    0x41ebd8
  41eba0:	in     eax,dx
  41eba1:	jle    0x41ec10
  41eba3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eba4:	sbb    DWORD PTR [ecx],edi
  41eba6:	pop    ss
  41eba7:	dec    ebp
  41eba8:	add    ch,ah
  41ebaa:	lahf   
  41ebab:	stos   BYTE PTR es:[edi],al
  41ebac:	jg     0x41ec1f
  41ebae:	sub    DWORD PTR [edi],ebp
  41ebb0:	inc    edx
  41ebb1:	jb     0x41ebf4
  41ebb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebb4:	das    
  41ebb5:	(bad)  
  41ebb6:	add    BYTE PTR [eax],al
  41ebb8:	aam    0x55
  41ebba:	inc    ebx
  41ebbb:	icebp  
  41ebbc:	cld    
  41ebbd:	and    ch,bh
  41ebbf:	bound  ebx,QWORD PTR [ecx]
  41ebc1:	(bad)  
  41ebc2:	das    
  41ebc3:	sub    DWORD PTR [ebx-0x67],ecx
  41ebc6:	jmp    FWORD PTR [ebx+0x3175649c]
  41ebcc:	ret    
  41ebcd:	and    ch,dh
  41ebcf:	push   0xffffffed
  41ebd1:	loopne 0x41ec52
  41ebd3:	cmp    DWORD PTR [ebx+esi*8],ebp
  41ebd6:	push   ebp
  41ebd7:	sbb    DWORD PTR [ecx],edi
  41ebd9:	(bad)  
  41ebda:	xchg   DWORD PTR [eax+eax*8+0x38dd55e6],edi
  41ebe1:	enter  0xb489,0x9c
  41ebe5:	fs inc ebp
  41ebe7:	cmc    
  41ebe8:	je     0x41ec0a
  41ebea:	or     eax,0xa130277e
  41ebef:	mov    dl,0x31
  41ebf1:	(bad)  
  41ebf2:	jb     0x41eb76
  41ebf4:	jge    0x41ec61
  41ebf6:	pop    edx
  41ebf7:	inc    edx
  41ebf8:	mov    ds:0xc2e9089d,al
  41ebfd:	and    ch,bh
  41ebff:	call   0xbfc79c3b
  41ec04:	daa    
  41ec05:	mov    esp,0x649b3487
  41ec0a:	inc    ebx
  41ec0b:	fnstsw WORD PTR [ebx-0x79ff6cf]
  41ec11:	(bad)  [ecx+0x17b2336]
  41ec17:	xchg   edx,eax
  41ec18:	fimul  WORD PTR [edi]
  41ec1a:	mov    BYTE PTR [ebp+0x21940000],al
  41ec20:	or     DWORD PTR [edx+0x51],esp
  41ec23:	fiadd  DWORD PTR [edi-0x35415a00]
  41ec29:	xor    DWORD PTR [edx-0x7e057f4f],0xffffffc6
  41ec30:	jne    0x41ec9c
  41ec32:	push   es
  41ec33:	repnz push eax
  41ec35:	mov    ebx,DWORD PTR [eax]
  41ec37:	dec    edx
  41ec38:	out    dx,eax
  41ec39:	or     eax,DWORD PTR [ecx-0x53f80a5]
  41ec3f:	(bad)  
  41ec40:	add    ax,0x1573
  41ec44:	cmc    
  41ec45:	push   eax
  41ec46:	test   al,0x46
  41ec48:	add    BYTE PTR [ecx+eax*1],cl
  41ec4b:	pop    ebx
  41ec4c:	cmp    al,0xcb
  41ec4f:	lds    edx,FWORD PTR [ebp-0x75]
  41ec52:	nop
  41ec53:	mov    dh,0x2a
  41ec55:	dec    ebp
  41ec56:	dec    edx
  41ec57:	xchg   ecx,eax
  41ec58:	inc    esi
  41ec59:	hlt    
  41ec5a:	sbb    al,0x71
  41ec5c:	mov    ecx,eax
  41ec5e:	je     0x41ec75
  41ec60:	stc    
  41ec61:	push   0xffffff86
  41ec63:	pop    ebx
  41ec64:	jne    0x41ec72
  41ec66:	and    cl,0xfd
  41ec69:	jbe    0x41ece9
  41ec6b:	mov    ecx,es
  41ec6d:	mov    bl,cl
  41ec6f:	push   esi
  41ec70:	mov    dh,al
  41ec72:	sbb    DWORD PTR cs:[ecx],ecx
  41ec75:	call   DWORD PTR [ecx+0x62]
  41ec78:	mov    ebx,0xc83374
  41ec7d:	lea    ecx,[ebx]
  41ec7f:	dec    esi
  41ec80:	dec    ebx
  41ec81:	push   0x0
  41ec83:	add    BYTE PTR [ebx+0x5d],cl
  41ec86:	ds hlt 
  41ec88:	es pop ebx
  41ec8a:	xor    eax,0x119a5bff
  41ec8f:	inc    eax
  41ec90:	inc    esi
  41ec91:	push   ebp
  41ec92:	mov    ebx,0x765f5b74
  41ec97:	cld    
  41ec98:	sbb    eax,edi
  41ec9a:	or     eax,0x4d58f8ff
  41ec9f:	sub    BYTE PTR [edi],ch
  41eca1:	push   eax
  41eca2:	clc    
  41eca3:	sub    edi,DWORD PTR ds:0x2eb004f7
  41eca9:	outs   dx,BYTE PTR ds:[esi]
  41ecaa:	mov    esi,0xbe6eef31
  41ecaf:	push   edx
  41ecb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ecb1:	arpl   WORD PTR [esi-0x1d],di
  41ecb4:	div    DWORD PTR [esp+ebx*4]
  41ecb7:	arpl   WORD PTR [esp+ebp*1-0x56],di
  41ecbb:	cld    
  41ecbc:	ins    BYTE PTR es:[edi],dx
  41ecbd:	mov    ebx,0xb627787f
  41ecc2:	jbe    0x41ed04
  41ecc4:	and    esi,DWORD PTR [ecx+0x32]
  41ecc7:	mov    DWORD PTR [esi-0x387eff96],edi
  41eccd:	mov    ds:0xb5450815,eax
  41ecd2:	daa    
  41ecd3:	out    0xcf,eax
  41ecd5:	mov    bh,0xff
  41ecd7:	call   DWORD PTR ds:0x4b7b80b3
  41ecdd:	xchg   edi,eax
  41ecde:	daa    
  41ecdf:	call   0xfcccb4cf
  41ece4:	stc    
  41ece5:	cmp    eax,ebx
  41ece7:	dec    edi
  41ece8:	add    BYTE PTR [eax],al
  41ecea:	adc    eax,0xfb8b2a75
  41ecef:	mov    ds:0xb713e7cf,al
  41ecf4:	mov    bh,ah
  41ecf6:	(bad)  
  41ecf7:	dec    ebp
  41ecf8:	mov    BYTE PTR [edi-0x402f5118],bh
  41ecfe:	out    dx,eax
  41ecff:	lea    edx,[edx-0x1]
  41ed02:	pop    eax
  41ed03:	mov    bh,0xd0
  41ed05:	cld    
  41ed06:	call   0x138568fa
  41ed0b:	shl    DWORD PTR [ecx+esi*1],cl
  41ed0e:	cmp    DWORD PTR [edx],edi
  41ed10:	dec    ecx
  41ed11:	and    al,0x13
  41ed13:	(bad)  
  41ed14:	ja     0x41ed89
  41ed16:	or     ebx,edi
  41ed18:	ja     0x41ed8d
  41ed1a:	push   ebx
  41ed1b:	(bad)  
  41ed1d:	jp     0x41ecbb
  41ed1f:	add    bl,dl
  41ed21:	fwait
  41ed22:	cmp    BYTE PTR [ebp-0x6253726e],0x5c
  41ed29:	dec    eax
  41ed2a:	push   ebx
  41ed2b:	retf   0x87f2
  41ed2e:	scas   al,BYTE PTR es:[edi]
  41ed2f:	fucomp st(1)
  41ed31:	add    edi,edx
  41ed33:	in     al,dx
  41ed34:	sbb    DWORD PTR [edi+0x6c],edi
  41ed37:	add    cl,dh
  41ed39:	fwait
  41ed3a:	retf   
  41ed3b:	mov    esi,0x9dac8d62
  41ed40:	aad    0x1d
  41ed42:	fidiv  DWORD PTR [ecx]
  41ed44:	push   cs
  41ed45:	clc    
  41ed46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed47:	and    DWORD PTR [esi],eax
  41ed49:	lock ror BYTE PTR [eax-0x1d],1
  41ed4d:	mov    WORD PTR [eax],es
  41ed4f:	add    bl,al
  41ed51:	mul    BYTE PTR [ebp+0x2be520e7]
  41ed57:	push   cs
  41ed58:	pop    edi
  41ed59:	push   ebp
  41ed5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed5b:	out    0x40,eax
  41ed5d:	xor    al,0xd5
  41ed5f:	sar    BYTE PTR [esi+0x6],1
  41ed62:	adc    edx,DWORD PTR [ebx+0x429c9057]
  41ed68:	test   al,0x31
  41ed6a:	(bad)  
  41ed6b:	repz inc edi
  41ed6d:	mov    al,ds:0x29b7ef7b
  41ed72:	(bad)  
  41ed73:	mul    DWORD PTR [edi+0x2b10f2ad]
  41ed79:	mov    dh,0x45
  41ed7b:	fs push 0xdcc36da8
  41ed81:	loope  0x41ed5d
  41ed83:	inc    edi
  41ed84:	adc    ecx,esi
  41ed86:	les    ax,DWORD PTR ds:0x4b9a5518
  41ed8d:	xor    DWORD PTR [esi],ecx
  41ed8f:	clc    
  41ed90:	dec    eax
  41ed91:	fmul   DWORD PTR fs:[ebx+edi*1+0x472d005a]
  41ed99:	(bad)  
  41ed9a:	call   0xfbecc929
  41ed9f:	(bad)  
  41eda1:	lock je 0x41ed69
  41eda4:	sbb    al,0xdb
  41eda6:	xchg   esp,eax
  41eda7:	test   eax,0x15fbcbb7
  41edac:	pop    ss
  41edad:	int3   
  41edae:	call   0xfbeceb1a
  41edb3:	ins    BYTE PTR es:[edi],dx
  41edb4:	add    BYTE PTR [eax],al
  41edb6:	jo     0x41edba
  41edb8:	sbb    eax,0xfb8aaa81
  41edbd:	outs   dx,BYTE PTR ds:[esi]
  41edbe:	addr16 mov ds:0xc75b,al
  41edc2:	pop    ss
  41edc3:	push   ebp
  41edc4:	in     eax,0xbc
  41edc6:	out    dx,eax
  41edc7:	or     al,0x88
  41edc9:	inc    ebp
  41edca:	lods   eax,DWORD PTR ds:[esi]
  41edcb:	mov    bl,0x4c
  41edcd:	out    0x2c,eax
  41edcf:	fimul  WORD PTR [edi-0x6]
  41edd2:	xchg   edi,eax
  41edd3:	adc    DWORD PTR [eax+esi*2+0x9],edx
  41edd7:	mov    esi,0x60889489
  41eddc:	pop    ebp
  41eddd:	cmp    DWORD PTR ds:0x5170f504,esp
  41ede3:	mov    ds:0x60d4bc89,al
  41ede8:	pop    ebp
  41ede9:	cmp    eax,0x9f749e67
  41edee:	mov    ebx,DWORD PTR [ecx-0x6b]
  41edf1:	jmp    0x1c1cc22
  41edf6:	sub    BYTE PTR cs:[ebx],dl
  41edf9:	push   0xffffffa4
  41edfb:	fimul  WORD PTR [ebx]
  41edfd:	fs mov bl,0xa7
  41ee00:	sti    
  41ee01:	jmp    0x6c4f1abb
  41ee06:	out    dx,al
  41ee07:	lods   eax,DWORD PTR ds:[esi]
  41ee08:	call   0xfbe8b3e7
  41ee0d:	ret    0x5539
  41ee10:	dec    ebp
  41ee11:	add    BYTE PTR [esi],bh
  41ee13:	sub    BYTE PTR [ebx+0x4],al
  41ee16:	mov    ebp,0x18c28
  41ee1b:	add    BYTE PTR [esi-0x25],al
  41ee1e:	cmp    eax,0xc08fa414
  41ee24:	sahf   
  41ee25:	sbb    eax,0x6538db5
  41ee2a:	dec    esp
  41ee2b:	lea    edx,[ebx+0x52]
  41ee2e:	dec    edx
  41ee2f:	mov    DWORD PTR [ebx],ebp
  41ee31:	push   es
  41ee32:	adc    DWORD PTR [ebp+0x46],0x29
  41ee36:	push   edi
  41ee37:	mov    eax,0xffd2e89e
  41ee3c:	jns    0x41ee85
  41ee3e:	inc    esi
  41ee3f:	lea    ebx,[ebx]
  41ee41:	sbb    dh,bl
  41ee43:	dec    DWORD PTR [ecx+0x4a]
  41ee46:	pop    ss
  41ee47:	sbb    eax,0xbd865379
  41ee4c:	cmp    bl,BYTE PTR [eax-0x4]
  41ee4f:	call   DWORD PTR [ecx]
  41ee51:	sbb    eax,0xdad614e9
  41ee56:	add    BYTE PTR [ebp-0x239bd],cl
  41ee5c:	stc    
  41ee5d:	dec    ecx
  41ee5e:	mov    ds:0x166da96,ax
  41ee64:	sbb    eax,0x364d869c
  41ee69:	dec    edx
  41ee6a:	pop    edi
  41ee6b:	lahf   
  41ee6c:	xchg   dl,bl
  41ee6e:	add    edi,0xe84653cb
  41ee74:	add    eax,DWORD PTR [edx-0x256c879d]
  41ee7a:	add    BYTE PTR [ebp-0xce5fd],cl
  41ee80:	add    BYTE PTR [eax],al
  41ee82:	pop    ecx
  41ee83:	out    dx,eax
  41ee84:	push   eax
  41ee85:	jmp    DWORD PTR [ebx-0x16]
  41ee88:	adc    al,BYTE PTR [eax+0x46]
  41ee8b:	pop    edi
  41ee8c:	mov    edi,0x61b2f0c
  41ee91:	mov    esi,edx
  41ee93:	test   BYTE PTR [edi],ch
  41ee95:	mov    edx,ebp
  41ee97:	lods   al,BYTE PTR ds:[esi]
  41ee98:	jp     0x41eef1
  41ee9a:	xor    ecx,DWORD PTR [ebp-0x4ad1d44b]
  41eea0:	shl    ch,cl
  41eea2:	jmp    0xe544:0x7290
  41eea8:	pushf  
  41eea9:	stos   DWORD PTR es:[edi],eax
  41eeaa:	aas    
  41eeab:	inc    esp
  41eeac:	xchg   ah,bh
  41eeae:	call   0x8654:0x1fa39747
  41eeb5:	push   ebp
  41eeb6:	pop    ss
  41eeb7:	ds lock cld 
  41eeba:	clc    
  41eebb:	imul   edi,DWORD PTR [edi-0x46271a],0xa3aab6ff
  41eec5:	xchg   BYTE PTR [edx+0xb],bl
  41eec8:	cwde   
  41eec9:	mov    ds:0x86ffb78d,eax
  41eece:	push   0x4b
  41eed0:	cmp    BYTE PTR [edx-0x2d],0xb6
  41eed4:	rol    DWORD PTR [edx-0x40],0xb7
  41eed8:	or     BYTE PTR [ebx],al
  41eeda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eedb:	jp     0x41ee68
  41eedd:	call   0x5843900e
  41eee2:	mov    dh,0x7a
  41eee4:	scas   eax,DWORD PTR es:[edi]
  41eee5:	xchg   BYTE PTR [eax],al
  41eee7:	add    BYTE PTR [edx],bl
  41eee9:	iret   
  41eeea:	int3   
  41eeeb:	jb     0x41ee90
  41eeed:	mov    ah,0x79
  41eeef:	ds sub eax,0xea88ffb7
  41eef5:	mov    ds:0x2e1bd91d,al
  41eefa:	sub    eax,ebx
  41eefc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eefd:	sub    dh,BYTE PTR [esi+esi*1-0x72093906]
  41ef04:	sbb    edi,DWORD PTR [ecx-0x214b0001]
  41ef0a:	sub    al,0xfc
  41ef0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef0d:	push   ds
  41ef0e:	out    0x9b,al
  41ef10:	xor    ebx,0xffffffe8
  41ef13:	add    esi,DWORD PTR [ebx+0x197fda9e]
  41ef19:	loopne 0x41ef04
  41ef1b:	add    esp,DWORD PTR [esi-0x4bfa51dd]
  41ef21:	lods   eax,DWORD PTR ds:[esi]
  41ef22:	pusha  
  41ef23:	(bad)  
  41ef25:	push   edi
  41ef26:	sub    al,0x60
  41ef28:	pop    ecx
  41ef29:	sub    edx,DWORD PTR [esi+0x14595212]
  41ef2f:	test   al,0x86
  41ef31:	retf   0x4164
  41ef34:	aaa    
  41ef35:	or     al,0x3a
  41ef37:	mov    DWORD PTR ds:0x2f43dc0a,ebx
  41ef3d:	popa   
  41ef3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef3f:	clc    
  41ef40:	lods   eax,DWORD PTR ds:[esi]
  41ef41:	popf   
  41ef42:	std    
  41ef43:	stc    
  41ef44:	jmp    0x41ef60
  41ef46:	jb     0x41efc5
  41ef48:	ins    DWORD PTR es:[edi],dx
  41ef49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef4a:	retw   0x0
  41ef4e:	cmp    al,0xe9
  41ef50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef51:	xchg   edi,eax
  41ef52:	pop    esi
  41ef53:	test   BYTE PTR [esi],dl
  41ef55:	xchg   edx,eax
  41ef56:	mov    bh,0x1a
  41ef58:	ds retf 
  41ef5a:	ins    DWORD PTR es:[edi],dx
  41ef5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef5c:	bnd jle 0x41ef4d
  41ef5f:	fsubp  st(1),st
  41ef61:	add    esi,esp
  41ef63:	dec    ebx
  41ef64:	jmp    0x67171e6c
  41ef69:	mov    esi,0x76e9a4a1
  41ef6e:	out    0xc9,eax
  41ef70:	ins    BYTE PTR es:[edi],dx
  41ef71:	(bad)  
  41ef73:	mov    ch,0xcd
  41ef75:	clc    
  41ef76:	mov    esp,DWORD PTR [ebp+eiz*2-0x703c033c]
  41ef7d:	out    dx,eax
  41ef7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef7f:	sbb    al,0xf2
  41ef81:	xor    esp,DWORD PTR [esi+0x3215011a]
  41ef87:	lahf   
  41ef88:	push   eax
  41ef89:	out    dx,al
  41ef8a:	push   ecx
  41ef8b:	sbb    BYTE PTR [ebx],dl
  41ef8d:	sub    DWORD PTR [ebx],esi
  41ef8f:	pop    edi
  41ef90:	(bad)  
  41ef91:	in     eax,dx
  41ef92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef93:	pop    ds
  41ef94:	in     eax,dx
  41ef95:	push   0x73
  41ef97:	ror    BYTE PTR [ecx+0x5b57932c],1
  41ef9d:	icebp  
  41ef9e:	add    ebx,DWORD PTR [ecx+0x75]
  41efa1:	leave  
  41efa2:	mov    ch,0x7
  41efa4:	test   eax,0x7e5cc1
  41efa9:	jmp    0x704d534f
  41efae:	mov    ss:0xe9fb,eax
  41efb4:	pop    ebx
  41efb5:	mov    dh,0xff
  41efb7:	dec    edx
  41efb8:	sub    al,0xde
  41efba:	test   BYTE PTR [ecx-0x179f9ef9],ch
  41efc0:	sub    al,0xde
  41efc2:	xchg   DWORD PTR [esi+0x36e89173],esp
  41efc8:	push   eax
  41efc9:	mov    ds:0xd2ec65fb,eax
  41efce:	test   DWORD PTR [esi+0x6a00de2d],esi
  41efd4:	sbb    DWORD PTR [esi-0x45ce9505],ebx
  41efda:	cs int 0xd1
  41efdd:	mov    ds:0x9e3b8575,al
  41efe2:	call   0xfbe53769
  41efe7:	pusha  
  41efe8:	imul   ebx,DWORD PTR [esi+0x5ba72985],0xde2ce830
  41eff2:	xchg   DWORD PTR [esp+edx*4+0xbed4056],esp
  41eff9:	jae    0x41ef7b
  41effb:	call   0x13dce2c
  41f000:	ret    
  41f001:	outs   dx,DWORD PTR ds:[esi]
  41f002:	imul   edx,DWORD PTR [ebx+eax*1],0xc65388e4
  41f009:	push   esi
  41f00a:	push   cs
  41f00b:	dec    esp
  41f00c:	js     0x41f02d
  41f00e:	add    DWORD PTR [ebx+0x169a68a],eax
  41f014:	cld    
  41f015:	mov    eax,ds:0x4586
  41f01a:	ret    0xe8e9
  41f01d:	iret   
  41f01e:	ins    BYTE PTR es:[edi],dx
  41f01f:	pop    esp
  41f020:	cld    
  41f021:	push   0x47
  41f023:	lds    ebx,FWORD PTR [ecx*4+0x6a4c220b]
  41f02a:	push   ss
  41f02b:	lds    eax,FWORD PTR [eax]
  41f02d:	push   0x14
  41f02f:	sub    ch,al
  41f031:	call   0x3e313b
  41f036:	popf   
  41f037:	jb     0x41f0b7
  41f039:	fist   DWORD PTR [ecx]
  41f03b:	and    ebx,edi
  41f03d:	add    BYTE PTR [esi],dl
  41f03f:	fild   QWORD PTR [eax-0x68]
  41f042:	in     al,dx
  41f043:	fiadd  WORD PTR [eax]
  41f045:	(bad)  
  41f046:	mov    eax,0xd728e546
  41f04b:	fiadd  WORD PTR [ebx-0xca0a1bb]
  41f051:	add    ebx,edx
  41f053:	stos   BYTE PTR es:[edi],al
  41f054:	mov    bl,dh
  41f056:	jle    0x41f010
  41f058:	out    0x0,al
  41f05a:	(bad)  
  41f05b:	daa    
  41f05c:	aas    
  41f05d:	clc    
  41f05e:	ins    DWORD PTR es:[edi],dx
  41f05f:	dec    DWORD PTR [ecx+0x3b27764b]
  41f065:	adc    BYTE PTR [ebx-0x66],cl
  41f068:	outs   dx,BYTE PTR ds:[esi]
  41f069:	add    al,0xa5
  41f06b:	push   eax
  41f06c:	call   0x2d0bf374
  41f071:	call   0x3e3e9a
  41f076:	adc    DWORD PTR [ebx],0xc32f85bc
  41f07c:	adc    BYTE PTR [eax+eax*1],bh
  41f07f:	add    BYTE PTR ds:0xd6d1ce62,dl
  41f085:	mov    ds:0x295d8294,eax
  41f08a:	aad    0xc
  41f08c:	mov    al,ds:0xc9c6cff4
  41f091:	outs   dx,DWORD PTR ds:[esi]
  41f092:	mov    bh,0x70
  41f094:	adc    BYTE PTR [eax],dh
  41f096:	xchg   BYTE PTR [esi-0x4d874316],al
  41f09c:	add    ecx,DWORD PTR [edx+eax*4+0x65cf57fc]
  41f0a3:	(bad)  
  41f0a4:	cmp    BYTE PTR [esi],cl
  41f0a6:	push   es
  41f0a7:	mov    DWORD PTR [ecx+0x31],ebp
  41f0aa:	cmp    esp,eax
  41f0ac:	pop    ss
  41f0ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0ae:	push   0xbb3520ff
  41f0b3:	sub    bl,BYTE PTR [eax]
  41f0b5:	jmp    0x41f043
  41f0b7:	jb     0x41f0c7
  41f0b9:	sub    eax,0x44b4a409
  41f0be:	xchg   edi,eax
  41f0bf:	mov    dl,0x13
  41f0c1:	mov    eax,0xf7ef30ff
  41f0c6:	iret   
  41f0c7:	cmc    
  41f0c8:	imul   ebx,DWORD PTR [ebp+edi*4+0x413c847b],0xffb408
  41f0d3:	mov    DWORD PTR [esi+0x2f000537],esp
  41f0d9:	imul   ebp,DWORD PTR [edx],0x601ff189
  41f0df:	sbb    DWORD PTR [esi],ebp
  41f0e1:	mov    bh,0x76
  41f0e3:	dec    edx
  41f0e4:	add    BYTE PTR [eax],al
  41f0e6:	out    dx,eax
  41f0e7:	sub    al,0xbb
  41f0e9:	and    dh,0x9e
  41f0ec:	not    BYTE PTR [ebp-0x46]
  41f0ef:	jp     0x41f090
  41f0f1:	out    0x90,eax
  41f0f3:	adc    eax,DWORD PTR [eax]
  41f0f5:	add    BYTE PTR [esi+ebx*8-0x420a870f],al
  41f0fc:	adc    DWORD PTR [edx],ebp
  41f0fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0ff:	fsubp  st(1),st
  41f101:	jg     0x41f0c3
  41f103:	sub    al,ah
  41f105:	jp     0x41f104
  41f107:	shr    DWORD PTR [ebx],1
  41f109:	inc    eax
  41f10a:	jb     0x41f0eb
  41f10c:	fs (bad) 
  41f10e:	(bad)  
  41f110:	repnz seta BYTE PTR [esi-0x5ea79b04]
  41f118:	ins    BYTE PTR es:[edi],dx
  41f119:	(bad)  
  41f11a:	fnop   
  41f11c:	ins    BYTE PTR es:[edi],dx
  41f11d:	aaa    
  41f11e:	dec    edi
  41f11f:	mov    dh,0x63
  41f121:	push   0x40
  41f123:	mov    eax,ds:0xde2b1f66
  41f128:	ret    0x5b3f
  41f12b:	push   ebp
  41f12c:	sbb    al,0xac
  41f12e:	pop    edi
  41f12f:	test   al,0xb2
  41f131:	aas    
  41f132:	pop    ss
  41f133:	push   ebp
  41f134:	and    al,0x9c
  41f136:	scas   eax,DWORD PTR es:[edi]
  41f137:	sbb    dh,BYTE PTR [esi-0x69e4a834]
  41f13d:	cmc    
  41f13e:	mov    ah,0x94
  41f140:	xchg   esp,eax
  41f141:	test   DWORD PTR [ebx],eax
  41f143:	mov    eax,ds:0xc1109414
  41f148:	repz test BYTE PTR [eax],al
  41f14b:	add    bl,dh
  41f14d:	push   esp
  41f14e:	adc    al,0x48
  41f150:	mov    bh,0x1a
  41f152:	mov    ds:0x609a7579,al
  41f157:	das    
  41f158:	mov    ds:0x7e4fbc52,eax
  41f15d:	ss pop eax
  41f15f:	and    ch,BYTE PTR [ebp-0x22]
  41f162:	mov    edi,0x610f70cb
  41f167:	aaa    
  41f168:	mov    edi,0xa98fac56
  41f16d:	sub    ah,BYTE PTR [esi]
  41f16f:	jnp    0x41f18e
  41f171:	xchg   esi,eax
  41f172:	add    BYTE PTR [edi],ch
  41f174:	pusha  
  41f175:	add    WORD PTR [ecx-0x76],ax
  41f179:	jnp    0x41f17c
  41f17b:	jmp    0x69568e2f
  41f180:	xor    BYTE PTR [ebx+0x600e601],ah
  41f186:	dec    BYTE PTR [esi]
  41f188:	mov    dl,0xa1
  41f18a:	jne    0x41f1b1
  41f18c:	xchg   ebx,eax
  41f18d:	test   BYTE PTR ds:0xe90ab3fe,cl
  41f193:	pop    ds
  41f194:	pop    eax
  41f195:	mov    eax,ds:0xae29eefb
  41f19a:	call   0xfbe34b56
  41f19f:	fidivr WORD PTR [ecx]
  41f1a1:	mov    esi,0xa139afe8
  41f1a6:	sti    
  41f1a7:	adc    BYTE PTR [eax],ch
  41f1a9:	mov    cl,BYTE PTR [ebx]
  41f1ab:	data16 ins BYTE PTR es:[edi],dx
  41f1ad:	add    DWORD PTR [ebx+0x22],ebx
  41f1b0:	add    BYTE PTR [eax],al
  41f1b2:	in     al,0x9d
  41f1b4:	or     cl,ch
  41f1b6:	push   ecx
  41f1b7:	push   ebp
  41f1b8:	in     al,dx
  41f1b9:	push   0xffffffb8
  41f1bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1bc:	jg     0x41f153
  41f1be:	add    al,0xf
  41f1c0:	push   esi
  41f1c1:	aaa    
  41f1c2:	pop    edx
  41f1c3:	push   ebp
  41f1c4:	stc    
  41f1c5:	xchg   esi,eax
  41f1c6:	adc    DWORD PTR [esi+ecx*1+0x29],ebp
  41f1ca:	xor    edx,DWORD PTR [edi+0x44]
  41f1cd:	int    0x8
  41f1cf:	push   edi
  41f1d0:	inc    ebx
  41f1d1:	in     eax,0x77
  41f1d3:	dec    ebx
  41f1d4:	add    ecx,ebp
  41f1d6:	sub    al,0xdd
  41f1d8:	mov    edi,0xa4ccb219
  41f1dd:	sti    
  41f1de:	ins    BYTE PTR es:[edi],dx
  41f1df:	fsubp  st(0),st
  41f1e1:	fcom   DWORD PTR [ebp-0x61]
  41f1e4:	sti    
  41f1e5:	bound  ebx,QWORD PTR [esi+ebp*8+0x2ca812ed]
  41f1ec:	push   edx
  41f1ed:	add    BYTE PTR [ebx-0x13fce0e],dl
  41f1f3:	inc    edi
  41f1f4:	clc    
  41f1f5:	call   FWORD PTR [ecx+0x1f]
  41f1f8:	mov    esp,0x31ef3175
  41f1fd:	rcl    cl,0x1b
  41f200:	jmp    0xfc9c3fe4
  41f205:	test   BYTE PTR [esi-0x30],dl
  41f208:	adc    ecx,DWORD PTR [ebx-0x7f77602f]
  41f20e:	(bad)  
  41f20f:	fild   DWORD PTR [eax]
  41f211:	add    BYTE PTR [esi+0x9249b],bh
  41f217:	add    BYTE PTR [esi-0x15],dl
  41f21a:	std    
  41f21b:	adc    eax,0x3bad36
  41f220:	ret    
  41f221:	sbb    DWORD PTR [eax+0x15],esi
  41f224:	imul   eax,ebp,0xda1612b4
  41f22a:	add    DWORD PTR [edx+esi*1-0x2],0xffffffe8
  41f22f:	es iret 
  41f231:	fld    DWORD PTR [eax]
  41f233:	mov    esp,esi
  41f235:	fsubp  st(7),st
  41f237:	je     0x41f1da
  41f239:	fucomip st,st(7)
  41f23b:	setb   BYTE PTR [ebp-0x6]
  41f23f:	inc    DWORD PTR [esi]
  41f241:	push   eax
  41f242:	(bad)
  41f245:	aas    
  41f246:	sti    
  41f247:	dec    DWORD PTR [ebx+0x36241f96]
  41f24d:	adc    al,0x40
  41f24f:	and    al,0xd
  41f251:	fild   DWORD PTR [ebx-0x17090d94]
  41f257:	ret    
  41f258:	out    dx,eax
  41f259:	pop    ebx
  41f25a:	cld    
  41f25b:	cmp    edx,DWORD PTR [ebx+0x7e5011a5]
  41f261:	int    0x7
  41f263:	jmp    FWORD PTR [ecx+0x57]
  41f266:	ja     0x41f28c
  41f268:	das    
  41f269:	ror    DWORD PTR [eax],1
  41f26b:	or     eax,0xbf88f49d
  41f270:	cmp    ebp,DWORD PTR [ebp-0x2aacbcba]
  41f276:	add    eax,0x3cb52f00
  41f27b:	outs   dx,BYTE PTR ds:[esi]
  41f27c:	add    BYTE PTR [eax],al
  41f27e:	xor    eax,DWORD PTR [eax-0x4ad0516f]
  41f284:	inc    DWORD PTR [esi-0x76e866e5]
  41f28a:	call   0x458a5a3f
  41f28f:	mov    dh,0xff
  41f291:	sub    DWORD PTR [edi-0x59],0xffffff83
  41f295:	call   0xb441:0x88ffb52f
  41f29c:	(bad)  [ebx]
  41f29e:	aaa    
  41f29f:	add    al,ah
  41f2a1:	pop    es
  41f2a2:	dec    DWORD PTR [esp+ebp*1-0x7c4ad063]
  41f2a9:	mov    edi,0x438d0fba
  41f2ae:	adc    esp,DWORD PTR [edi+0x7f0b7b7f]
  41f2b4:	push   DWORD PTR [ebp+0x46]
  41f2b7:	adc    bh,al
  41f2b9:	add    esi,DWORD PTR [edi+eax*1-0x77e70170]
  41f2c0:	out    0x87,eax
  41f2c2:	cmp    al,0x87
  41f2c4:	dec    DWORD PTR [edi+0x8]
  41f2c7:	xchg   ebx,eax
  41f2c8:	dec    edi
  41f2c9:	adc    DWORD PTR [edi-0x79],ebp
  41f2cc:	mov    BYTE PTR [edi+0x448aab83],bh
  41f2d2:	sub    edx,DWORD PTR [eax]
  41f2d4:	mov    BYTE PTR [edi+0x2e],bh
  41f2d7:	xchg   edi,edi
  41f2d9:	mov    BYTE PTR [ebx-0x55],ch
  41f2dc:	pop    ds
  41f2dd:	push   0x2e
  41f2df:	clc    
  41f2e0:	ins    BYTE PTR es:[edi],dx
  41f2e1:	test   al,0x0
  41f2e3:	add    BYTE PTR [edi],dh
  41f2e5:	fsubp  st(0),st
  41f2e7:	add    ebp,DWORD PTR [esi+ebx*4-0xe28e620]
  41f2ee:	cmp    DWORD PTR ds:[ebx+0x16f72962],0x4127ad9c
  41f2f9:	pop    esi
  41f2fa:	mov    ebp,0xb7e33927
  41f2ff:	mov    dh,0x87
  41f301:	jmp    0x41f344
  41f303:	clc    
  41f304:	dec    edi
  41f305:	fsubp  st(1),st
  41f307:	mov    edi,gs
  41f309:	loope  0x41f32e
  41f30b:	(bad)  
  41f30c:	dec    esp
  41f30d:	cmc    
  41f30e:	call   0xf403e796
  41f313:	or     ah,bh
  41f315:	icebp  
  41f316:	outs   dx,BYTE PTR ds:[esi]
  41f317:	dec    eax
  41f318:	mov    bh,0xac
  41f31a:	adc    ebp,esp
  41f31c:	(bad)  
  41f31d:	fsubp  st(1),st
  41f31f:	shr    BYTE PTR [edi+0x171bc60a],1
  41f325:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f326:	sub    eax,0x66df2228
  41f32b:	enter  0xf60c,0x11
  41f32f:	(bad)  
  41f330:	test   DWORD PTR [ebx],0x31a310e6
  41f336:	ret    
  41f337:	sub    DWORD PTR [ebx],0x95081a69
  41f33d:	loopne 0x41f35a
  41f33f:	ins    BYTE PTR es:[edi],dx
  41f340:	gs (bad) 
  41f342:	call   0x1ddf9e4a
  41f347:	pop    es
  41f348:	add    BYTE PTR [eax],al
  41f34a:	icebp  
  41f34b:	and    esi,eax
  41f34d:	sbb    BYTE PTR [eax],al
  41f34f:	shr    BYTE PTR [esi-0xd3da4c4],1
  41f355:	imul   DWORD PTR [ebx]
  41f357:	imul   esi,DWORD PTR [ebx-0x1689b394],0x123b603
  41f361:	in     eax,dx
  41f362:	mov    bl,0x94
  41f364:	cs in  al,dx
  41f366:	adc    ebx,DWORD PTR [edi-0x8]
  41f369:	add    al,cl
  41f36b:	fdiv   st(3),st
  41f36d:	hlt    
  41f36e:	js     0x41f35e
  41f370:	inc    eax
  41f371:	jmp    0xed671581
  41f376:	icebp  
  41f377:	pop    ebp
  41f378:	(bad)  
  41f379:	lea    esi,[ebx]
  41f37b:	adc    al,0x2c
  41f37d:	xchg   edi,eax
  41f37e:	xchg   DWORD PTR [esi],eax
  41f380:	add    BYTE PTR [ecx+0x2ef70504],dl
  41f386:	scas   al,BYTE PTR es:[edi]
  41f387:	pusha  
  41f388:	rcr    BYTE PTR [edi+eiz*1-0x1325abd1],0x84
  41f390:	push   edi
  41f391:	adc    ebp,DWORD PTR [esi+0x78298499]
  41f397:	out    0x4f,al
  41f399:	sahf   
  41f39a:	pop    edx
  41f39b:	ficomp WORD PTR [eax+0x11]
  41f39e:	jo     0x41f336
  41f3a0:	sti    
  41f3a1:	imul   BYTE PTR [edi+0x6cdbb4ef]
  41f3a7:	pushf  
  41f3a8:	mov    BYTE PTR ds:0x17fbfa17,ch
  41f3ae:	add    BYTE PTR [eax],al
  41f3b0:	shl    DWORD PTR [edi+eax*1-0x16cd502a],cl
  41f3b7:	stos   DWORD PTR es:[edi],eax
  41f3b8:	and    ebx,DWORD PTR [ebx-0x20088d05]
  41f3be:	add    eax,0xde2d55
  41f3c3:	sbb    DWORD PTR [esi-0x13245310],ebp
  41f3c9:	fwait
  41f3ca:	xchg   BYTE PTR [esi],ch
  41f3cc:	aaa    
  41f3cd:	cmp    BYTE PTR gs:[ecx+0x2d],0xde
  41f3d2:	add    BYTE PTR [ecx],al
  41f3d4:	repz adc bl,BYTE PTR [eax]
  41f3d7:	jmp    0x578eb8
  41f3dc:	(bad)  
  41f3dd:	icebp  
  41f3de:	inc    eax
  41f3df:	add    BYTE PTR [ebx+0x1f],cl
  41f3e2:	or     eax,0xfd1c5885
  41f3e7:	jmp    FWORD PTR [ebp-0x25b87615]
  41f3ed:	loop   0x41f3b0
  41f3ef:	push   eax
  41f3f0:	popa   
  41f3f1:	hlt    
  41f3f2:	lods   al,BYTE PTR ds:[esi]
  41f3f3:	adc    al,BYTE PTR [esi-0x7ca1a221]
  41f3f9:	mov    edx,0x22d3e588
  41f3fe:	dec    edi
  41f3ff:	mov    esi,edx
  41f401:	pop    edi
  41f402:	out    0x58,eax
  41f404:	xchg   edi,ebx
  41f406:	add    BYTE PTR [ebx-0x6b],dl
  41f409:	cmp    dl,BYTE PTR [esi+0x38]
  41f40c:	jae    0x41f401
  41f40e:	je     0x41f41a
  41f410:	and    DWORD PTR [ebx+ecx*1+0x250000e8],edx
  41f417:	adc    dh,bh
  41f419:	jmp    FWORD PTR ds:0xebff50e8
  41f41f:	out    dx,al
  41f420:	call   0x120dd7f
  41f425:	mov    edx,DWORD PTR [esi-0x29]
  41f428:	icebp  
  41f429:	je     0x41f3cd
  41f42b:	push   0x3e
  41f42d:	or     al,0x9
  41f42f:	ins    DWORD PTR es:[edi],dx
  41f430:	mov    dh,0xa8
  41f432:	pusha  
  41f433:	sbb    edi,ebp
  41f435:	call   0x3f0667
  41f43a:	in     al,dx
  41f43b:	in     al,0x87
  41f43d:	jge    0x41f425
  41f43f:	mov    ecx,0x1ae620e3
  41f444:	std    
  41f445:	push   esi
  41f446:	xchg   ebx,eax
  41f447:	mov    gs:0x4c1ac1fe,eax
  41f44d:	mov    ebx,ecx
  41f44f:	mov    cl,0x86
  41f451:	inc    ebp
  41f452:	cli    
  41f453:	scas   al,BYTE PTR es:[edi]
  41f454:	jecxz  0x41f440
  41f456:	das    
  41f457:	outs   dx,BYTE PTR ds:[esi]
  41f458:	jp     0x41f456
  41f45a:	lods   al,BYTE PTR ds:[esi]
  41f45b:	inc    eax
  41f45c:	adc    al,0x5d
  41f45e:	lods   al,BYTE PTR ds:[esi]
  41f45f:	pop    esp
  41f460:	jnp    0x41f4d5
  41f462:	inc    eax
  41f463:	sbb    al,0xfa
  41f465:	adc    esp,DWORD PTR [ecx+ecx*8-0x6b2faef4]
  41f46c:	pop    es
  41f46d:	std    
  41f46e:	and    bl,BYTE PTR [ebp+0x19]
  41f471:	inc    eax
  41f472:	das    
  41f473:	or     BYTE PTR [ebp-0x2],bh
  41f476:	inc    ebx
  41f477:	xchg   DWORD PTR [ecx-0x4fffff29],ecx
  41f47d:	mov    cl,0x13
  41f47f:	call   0xfcbc832c
  41f484:	stc    
  41f485:	sub    al,0x7e
  41f487:	or     DWORD PTR [eax+0x6c89dad3],ebx
  41f48d:	outs   dx,DWORD PTR ds:[esi]
  41f48e:	dec    esp
  41f48f:	rcr    DWORD PTR [edi],0x85
  41f492:	fmul   DWORD PTR [eax+0x4b710793]
  41f498:	or     DWORD PTR [ecx+0x7],0x21ffdc10
  41f49f:	je     0x41f4de
  41f4a1:	inc    ebp
  41f4a2:	call   DWORD PTR [ebx+ebx*8+0x6b]
  41f4a6:	jle    0x41f525
  41f4a8:	sub    edx,DWORD PTR [edi-0xb]
  41f4ab:	pop    cx
  41f4ad:	add    BYTE PTR [esp+esi*2],0xd3
  41f4b1:	dec    DWORD PTR cs:[edx-0x1828bb3e]
  41f4b8:	mov    esp,DWORD PTR [ebx+0x3230fc7a]
  41f4be:	adc    DWORD PTR [ecx+0x7f5a0f0],ecx
  41f4c4:	jg     0x41f51e
  41f4c6:	dec    esi
  41f4c7:	dec    edi
  41f4c8:	test   DWORD PTR [edi-0x29],edi
  41f4cb:	mov    al,ah
  41f4cd:	lahf   
  41f4ce:	ins    DWORD PTR es:[edi],dx
  41f4cf:	aaa    
  41f4d0:	das    
  41f4d1:	fsubp  st(1),st
  41f4d3:	xchg   eax,eax
  41f4d5:	adc    bl,bl
  41f4d7:	jmp    0x7856600b
  41f4dc:	pop    eax
  41f4dd:	xchg   BYTE PTR [edx+0x6e],ah
  41f4e0:	add    BYTE PTR [eax],al
  41f4e2:	jmp    0x41f47d
  41f4e4:	je     0x41f4ae
  41f4e6:	sub    BYTE PTR [esi],ch
  41f4e8:	jnp    0x41f4df
  41f4ea:	or     al,0x86
  41f4ec:	mov    ecx,0x6499d0a1
  41f4f1:	inc    ebx
  41f4f2:	cmp    al,0xfd
  41f4f4:	data16 add BYTE PTR [edi],dh
  41f4f7:	(bad)  
  41f4f9:	loopne 0x41f541
  41f4fb:	fistp  QWORD PTR [ecx-0x40199276]
  41f501:	add    al,BYTE PTR [ecx]
  41f503:	xchg   BYTE PTR [ebx+0x7d],al
  41f506:	mov    ds:0x3cc56e99,eax
  41f50b:	arpl   WORD PTR [ecx],bp
  41f50d:	imul   eax
  41f50f:	add    ebp,edx
  41f511:	jle    0x41f515
  41f513:	out    dx,al
  41f514:	pop    DWORD PTR [edi]
  41f516:	xchg   esi,eax
  41f517:	xlat   BYTE PTR ds:[ebx]
  41f518:	imul   edi,ebp,0x3c9cde20
  41f51e:	jns    0x41f500
  41f520:	call   0x84ad121c
  41f525:	mov    bh,0x1f
  41f527:	sahf   
  41f528:	adc    DWORD PTR ds:0x7df2994a,edi
  41f52e:	fucompp 
  41f530:	pop    esi
  41f531:	inc    esi
  41f532:	dec    ebx
  41f533:	adc    dl,dh
  41f535:	rol    DWORD PTR [ebx-0x53],cl
  41f538:	cmp    edx,ebp
  41f53a:	xor    BYTE PTR [esi],dh
  41f53c:	pop    edi
  41f53d:	dec    ebp
  41f53e:	dec    eax
  41f53f:	pop    esi
  41f540:	adc    DWORD PTR [edi+ebp*1],eax
  41f543:	bound  ebp,QWORD PTR [ecx+0x300000f8]
  41f549:	and    edx,DWORD PTR gs:[eax]
  41f54c:	test   esi,ebx
  41f54e:	add    BYTE PTR [esi-0x17991ee7],dh
  41f554:	loop   0x41f4d6
  41f556:	stos   DWORD PTR es:[edi],eax
  41f557:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f558:	sbb    BYTE PTR [edx-0x609bbda5],0x4
  41f55f:	jmp    0x6b2e5b3d
  41f564:	pop    edi
  41f565:	in     eax,dx
  41f566:	dec    edi
  41f567:	pop    ds
  41f568:	cli    
  41f569:	add    BYTE PTR [ecx],al
  41f56b:	(bad)  
  41f56c:	in     al,dx
  41f56d:	cwde   
  41f56e:	arpl   cx,cx
  41f570:	cmp    ebx,DWORD PTR [esi]
  41f572:	add    DWORD PTR [ecx+0x66fc22cf],eax
  41f578:	mov    dh,0xb0
  41f57a:	das    
  41f57b:	push   edi
  41f57c:	div    BYTE PTR [edi-0x22582e8c]
  41f582:	push   edx
  41f583:	mov    edx,0xe9fc692b
  41f588:	sub    al,0xde
  41f58a:	xchg   edx,ebp
  41f58c:	sub    BYTE PTR ds:0x994b59fc,0xfb
  41f593:	jmp    0x26a8d34f
  41f598:	pop    esi
  41f599:	cdq    
  41f59a:	nop
  41f59b:	add    DWORD PTR [esi+ebx*8],ebp
  41f59e:	add    BYTE PTR [edx+0x2e],ah
  41f5a1:	xor    BYTE PTR [eax+0xe],dl
  41f5a4:	ret    
  41f5a5:	call   0x676edeab
  41f5aa:	jmp    FWORD PTR [ebx+0x0]
  41f5ad:	add    BYTE PTR [eax-0x6c],ch
  41f5b0:	push   ecx
  41f5b1:	cmp    DWORD PTR [ebx+esi*8],0x995fe940
  41f5b8:	adc    BYTE PTR [esp+ebp*8+0xb],ch
  41f5bc:	ds ins BYTE PTR es:[edi],dx
  41f5be:	jno    0x41f544
  41f5c0:	push   eax
  41f5c1:	(bad)  
  41f5c2:	sbb    edx,ebx
  41f5c4:	movaps XMMWORD PTR [ebx],xmm6
  41f5c7:	add    al,0x8
  41f5c9:	add    BYTE PTR [esi-0x80],cl
  41f5cc:	add    BYTE PTR [ebp-0x16],0x5e
  41f5d0:	out    0x10,eax
  41f5d2:	adc    eax,0x5389661c
  41f5d7:	push   ss
  41f5d8:	mov    DWORD PTR [ebp-0x36],eax
  41f5db:	add    cx,WORD PTR [ebx-0x13919766]
  41f5e2:	arpl   WORD PTR [eax-0x62],ax
  41f5e5:	push   0x3b65e6
  41f5ea:	inc    esi
  41f5eb:	aas    
  41f5ec:	cld    
  41f5ed:	xchg   ecx,eax
  41f5ee:	push   es
  41f5ef:	fild   DWORD PTR [eax]
  41f5f1:	add    BYTE PTR [ebp-0x60],cl
  41f5f4:	test   DWORD PTR [ebx+0x51fcabce],0x8b5dbabe
  41f5fe:	add    eax,0x73c3c2b6
  41f603:	out    0x83,ax
  41f606:	push   0xfffffff3
  41f608:	push   ecx
  41f609:	push   esi
  41f60a:	shl    DWORD PTR [ecx],0x3f
  41f60d:	inc    DWORD PTR [esi+0xff4d03]
  41f613:	add    BYTE PTR [ecx+0x1a],bl
  41f616:	mov    eax,ebx
  41f618:	adc    esi,DWORD PTR [esi]
  41f61a:	jo     0x41f67d
  41f61c:	sti    
  41f61d:	lahf   
  41f61e:	jecxz  0x41f670
  41f620:	sbb    eax,esi
  41f622:	cmp    al,0x13
  41f624:	(bad)  
  41f625:	(bad)  [esi+0x8]
  41f628:	sahf   
  41f629:	sbb    ch,BYTE PTR [edi+0x8]
  41f62c:	mov    al,0x64
  41f62e:	ds call 0x138ae78d
  41f634:	xchg   bl,bl
  41f636:	add    DWORD PTR [ebp+0x46],0x61
  41f63a:	mov    ebx,0x670e74
  41f63f:	lea    ecx,[ebx]
  41f641:	sbb    cl,BYTE PTR [ebx-0x7d]
  41f644:	das    
  41f645:	mov    eax,ds:0x3a2b8914
  41f64a:	repnz out 0xca,eax
  41f64d:	imul   esp,DWORD PTR [ecx-0x6ba82db0],0xff852fe7
  41f657:	sub    bh,0xd1
  41f65a:	or     esp,DWORD PTR [esi-0x54]
  41f65d:	sar    DWORD PTR [esp+edi*8-0x7e],0x81
  41f662:	inc    ecx
  41f663:	inc    edx
  41f664:	lock test DWORD PTR [eax+0x77d4d742],ecx
  41f66b:	adc    ch,BYTE PTR [edi-0x4c]
  41f66e:	mov    edi,0x769a58ff
  41f673:	call   FWORD PTR [ebx+0x7d]
  41f676:	mov    al,BYTE PTR [eax]
  41f678:	add    BYTE PTR [eax],al
  41f67a:	pop    esp
  41f67b:	or     ch,dl
  41f67d:	pop    es
  41f67e:	cld    
  41f67f:	sbb    ebx,eax
  41f681:	pop    ebp
  41f682:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f683:	ret    
  41f684:	fcmovnb st,st(6)
  41f686:	in     eax,dx
  41f687:	mov    bh,bh
  41f689:	push   edx
  41f68a:	mov    ah,0xd8
  41f68c:	aad    0x88
  41f68e:	sub    DWORD PTR [edx],edx
  41f690:	retf   0xfefb
  41f693:	outs   dx,BYTE PTR ds:[esi]
  41f694:	jbe    0x41f6e5
  41f696:	pop    es
  41f697:	or     al,BYTE PTR [ebp+0x73]
  41f69a:	xor    eax,DWORD PTR [edx+eiz*8]
  41f69d:	sti    
  41f69e:	das    
  41f69f:	or     al,0xff
  41f6a1:	push   ebp
  41f6a2:	js     0x41f6f8
  41f6a4:	pop    es
  41f6a5:	mov    edx,ebp
  41f6a7:	lock dec ebp
  41f6a9:	rol    BYTE PTR [edx],0xfc
  41f6ac:	push   0xfb80537e
  41f6b1:	call   FWORD PTR [eax+0x73]
  41f6b4:	shl    DWORD PTR [ecx],1
  41f6b6:	je     0x41f72f
  41f6b8:	jbe    0x41f6cc
  41f6ba:	pop    es
  41f6bb:	mov    bl,0xbf
  41f6bd:	jmp    FWORD PTR [ebp-0x43851e23]
  41f6c3:	sbb    DWORD PTR [edx+0x5ee4bb13],edx
  41f6c9:	dec    edx
  41f6ca:	adc    bl,dl
  41f6cc:	mov    edi,0xeb892f03
  41f6d1:	rcl    BYTE PTR [eax],cl
  41f6d3:	push   ebx
  41f6d4:	in     eax,0x7a
  41f6d6:	adc    ebx,DWORD PTR [ebx-0x57]
  41f6d9:	lock lea eax,[esi]
  41f6dc:	out    0x4,al
  41f6de:	add    BYTE PTR [eax],al
  41f6e0:	das    
  41f6e1:	fisubr WORD PTR [esi+0x52]
  41f6e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6e5:	arpl   WORD PTR [ebp-0x7e6a0c88],cx
  41f6eb:	retf   
  41f6ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6ed:	xchg   ebp,eax
  41f6ee:	mov    cl,BYTE PTR [eax+0x7a8482ad]
  41f6f4:	fld    TBYTE PTR [esi]
  41f6f6:	jnp    0x41f708
  41f6f8:	jmp    0x41f6eb
  41f6fa:	sub    DWORD PTR [esp+esi*4],eax
  41f6fd:	or     esi,DWORD PTR [esi-0x45]
  41f700:	sbb    dh,0xe9
  41f703:	add    eax,edi
  41f705:	cmp    al,0x4c
  41f707:	jp     0x41f6bc
  41f709:	arpl   WORD PTR [edi+ebx*2-0x59],bp
  41f70d:	xchg   ebp,eax
  41f70e:	dec    edx
  41f70f:	rcl    DWORD PTR [esi],cl
  41f711:	fisubr WORD PTR [esi+0x41]
  41f714:	call   0x95a95b7b
  41f719:	xchg   ebp,eax
  41f71a:	xor    dl,bl
  41f71c:	mov    ebp,ebx
  41f71e:	rcl    DWORD PTR [esi],1
  41f720:	out    dx,eax
  41f721:	(bad)  [ebx+eax*2-0x4]
  41f725:	icebp  
  41f726:	pop    DWORD PTR [esp+eiz*4]
  41f729:	pop    ebx
  41f72a:	or     eax,0xb9956b7e
  41f72f:	shl    BYTE PTR [ebx-0x15],cl
  41f732:	popf   
  41f733:	adc    al,0xef
  41f735:	(bad)  [eax+eax*4+0x4c]
  41f739:	cdq    
  41f73a:	add    dh,dh
  41f73c:	(bad)  
  41f73d:	and    al,0xe9
  41f73f:	call   0x0:0xe6fb9240
  41f746:	dec    eax
  41f747:	jmp    0x2b654c47
  41f74c:	jmp    0xfbd78506
  41f751:	imul   edx,DWORD PTR gs:[eax],0x1d
  41f755:	add    eax,ebx
  41f757:	in     al,0x75
  41f759:	in     al,0xac
  41f75b:	xchg   ebp,eax
  41f75c:	push   es
  41f75d:	cmp    eax,0x611061d
  41f762:	sub    ebx,esi
  41f764:	sti    
  41f765:	cld    
  41f766:	clc    
  41f767:	jecxz  0x41f7a9
  41f769:	jmp    0x262b95e4
  41f76e:	xchg   dx,ax
  41f770:	sti    
  41f771:	pop    ecx
  41f772:	sub    al,0x87
  41f774:	(bad)  
  41f775:	mov    edx,0xb058336c
  41f77a:	imul   ebp,ecx,0x88ba1c00
  41f780:	cmp    DWORD PTR [ebp+0x23],0xe3e9fb95
  41f787:	sub    dl,BYTE PTR [esi+ebx*2+0x0]
  41f78b:	(bad)  
  41f78d:	stos   BYTE PTR es:[edi],al
  41f78e:	sub    al,0x69
  41f790:	jne    0x41f7eb
  41f792:	adc    edx,DWORD PTR [esi+0x5a2ce9e2]
  41f798:	shr    dh,0x10
  41f79b:	imul   eax,DWORD PTR [eax],0xffffffe9
  41f79e:	sub    al,0x5f
  41f7a0:	jge    0x41f783
  41f7a2:	sub    al,0x9c
  41f7a4:	inc    ebp
  41f7a5:	xor    edx,DWORD PTR es:[ecx]
  41f7a8:	sbb    ebx,DWORD PTR [esi]
  41f7aa:	add    BYTE PTR [eax],al
  41f7ac:	and    ah,0x87
  41f7af:	xchg   esp,eax
  41f7b0:	xor    BYTE PTR [ebx+0xfe61575],dl
  41f7b6:	icebp  
  41f7b7:	add    BYTE PTR [esi],bh
  41f7b9:	adc    dh,bh
  41f7bb:	call   DWORD PTR [ecx+0x68]
  41f7be:	notrack call ebx
  41f7c1:	push   esp
  41f7c2:	jmp    0x41f7ac
  41f7c4:	scas   eax,DWORD PTR es:[edi]
  41f7c5:	std    
  41f7c6:	sti    
  41f7c7:	call   FWORD PTR [ebp-0x7f]
  41f7ca:	mov    BYTE PTR [ebp+0x5a],bh
  41f7cd:	lods   eax,DWORD PTR ds:[esi]
  41f7ce:	cld    
  41f7cf:	jne    0x41f7d7
  41f7d1:	or     BYTE PTR [edx],dh
  41f7d3:	or     cl,dh
  41f7d5:	push   ss
  41f7d6:	mov    eax,esi
  41f7d8:	mov    ds:0x37e8eb54,eax
  41f7dd:	std    
  41f7de:	sti    
  41f7df:	call   FWORD PTR [ebx+0x6e51700d]
  41f7e5:	xchg   edx,eax
  41f7e6:	(bad)  
  41f7e7:	inc    DWORD PTR [esi]
  41f7e9:	mov    BYTE PTR [ebx-0x7825b991],bl
  41f7ef:	test   DWORD PTR [esi-0x510002eb],ebp
  41f7f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7f6:	dec    edi
  41f7f7:	add    dh,al
  41f7f9:	scas   eax,DWORD PTR es:[edi]
  41f7fa:	mov    bh,cl
  41f7fc:	pop    ebp
  41f7fd:	sbb    eax,0xdfeb05e4
  41f802:	add    BYTE PTR [ebp-0x72dc7c6a],al
  41f808:	inc    ebx
  41f809:	pop    es
  41f80a:	(bad)  
  41f80b:	call   DWORD PTR [ecx-0x50]
  41f80e:	cld    
  41f80f:	jne    0x41f811
  41f811:	add    BYTE PTR [esi-0x69fe12ae],cl
  41f817:	fucomip st,st(0)
  41f819:	arpl   WORD PTR [edx-0x21],di
  41f81c:	add    BYTE PTR [esi+eax*2-0x3400f47d],al
  41f823:	out    dx,eax
  41f824:	push   ebp
  41f825:	mov    edx,ebx
  41f827:	fist   DWORD PTR [edx-0x18]
  41f82a:	or     DWORD PTR ds:0x53fefffd,edx
  41f830:	cld    
  41f831:	push   esi
  41f832:	das    
  41f833:	fstp   st(2)
  41f835:	add    al,0x60
  41f837:	in     al,0x8d
  41f839:	inc    edx
  41f83a:	pop    eax
  41f83b:	cmp    al,0xd9
  41f83d:	pop    eax
  41f83e:	mov    WORD PTR [ebx],0xb200
  41f843:	xchg   ebx,eax
  41f844:	jmp    0xecdd:0x93b2b41d
  41f84b:	test   BYTE PTR [esi],ch
  41f84d:	shr    BYTE PTR [edx-0x4bee0fb2],0x91
  41f854:	xchg   edi,eax
  41f855:	(bad)  [ebp+eax*4+0x3c]
  41f859:	xor    ah,BYTE PTR [ebx-0x127f4070]
  41f85f:	in     al,dx
  41f860:	aaa    
  41f861:	mov    edi,0xc77f517d
  41f866:	add    BYTE PTR [eax-0x31],cl
  41f869:	push   edx
  41f86a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f86b:	call   0x4cee0490
  41f870:	jae    0x41f8a2
  41f872:	add    al,0xd4
  41f874:	xchg   edi,esi
  41f876:	add    BYTE PTR [eax],al
  41f878:	and    al,0x60
  41f87a:	add    eax,DWORD PTR [ebx+esi*4-0x5b00007c]
  41f881:	adc    DWORD PTR [ebx+0x2e856cdd],0x465059c0
  41f88b:	jne    0x41f89b
  41f88d:	adc    BYTE PTR [edx],dl
  41f88f:	cwde   
  41f890:	rol    DWORD PTR [edi-0x1],1
  41f893:	mov    BYTE PTR [ebp+0x357412ed],bl
  41f899:	inc    ebp
  41f89a:	jle    0x41f861
  41f89c:	inc    edi
  41f89d:	loopne 0x41f8e4
  41f89f:	jno    0x41f83c
  41f8a1:	das    
  41f8a2:	or     BYTE PTR [ecx+0x276d9f7f],cl
  41f8a8:	sub    al,0xd7
  41f8aa:	xchg   edi,esi
  41f8ac:	add    bl,dh
  41f8ae:	into   
  41f8af:	les    eax,FWORD PTR [edi]
  41f8b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8b2:	shl    DWORD PTR [ebp+0x3a6b3c0],1
  41f8b8:	push   edi
  41f8b9:	mov    esp,0x595b76e3
  41f8be:	sub    eax,esi
  41f8c0:	adc    DWORD PTR [edi-0x44],esp
  41f8c3:	xchg   edi,eax
  41f8c4:	push   0x1e
  41f8c6:	jmp    0x38c3:0xb722d76
  41f8cd:	addr16 (bad) 
  41f8d0:	cmp    al,ch
  41f8d2:	out    0x30,al
  41f8d4:	(bad)  
  41f8d5:	mov    al,0x26
  41f8d7:	add    al,0x9b
  41f8d9:	(bad)  
  41f8da:	rol    DWORD PTR ss:[eax],cl
  41f8dd:	add    BYTE PTR [edi+0x2d],bh
  41f8e0:	jno    0x41f907
  41f8e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8e3:	xor    dh,ah
  41f8e5:	jbe    0x41f904
  41f8e7:	loop   0x41f8c1
  41f8e9:	ret    
  41f8ea:	add    BYTE PTR [ebp+0x1b],bl
  41f8ed:	sbb    dl,bh
  41f8ef:	sub    ecx,DWORD PTR [si]
  41f8f2:	test   al,0x30
  41f8f4:	out    dx,al
  41f8f5:	mov    WORD PTR [edx+0x3cd560ee],cs
  41f8fb:	sub    ebx,DWORD PTR [si]
  41f8fe:	mov    al,0x30
  41f900:	retf   0x728c
  41f903:	mov    edx,0x316a3e6e
  41f908:	adc    eax,0xe9daeedb
  41f90d:	int    0xa7
  41f90f:	mov    cs,esi
  41f911:	ins    DWORD PTR es:[edi],dx
  41f912:	or     ch,bl
  41f914:	adc    al,0x9c
  41f916:	mov    bl,BYTE PTR ds:0x8a3ceea
  41f91c:	loop   0x41f8a0
  41f91e:	push   edx
  41f91f:	fiadd  WORD PTR [edx+0x10]
  41f922:	outs   dx,DWORD PTR ds:[esi]
  41f923:	in     al,dx
  41f924:	test   eax,0x1088a03
  41f929:	in     eax,0x14
  41f92b:	or     eax,0x92012e03
  41f930:	jb     0x41f92b
  41f932:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f933:	sbb    edx,DWORD PTR ds:0x1277211
  41f939:	jmp    0x15b0417
  41f93e:	push   ebx
  41f93f:	(bad)  
  41f941:	push   es
  41f942:	add    BYTE PTR [eax],al
  41f944:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f945:	or     esp,DWORD PTR ds:0x30cda64
  41f94b:	lahf   
  41f94c:	aam    0x7c
  41f94e:	fldz   
  41f950:	ret    0x9c6f
  41f953:	(bad)  
  41f954:	outs   dx,BYTE PTR ds:[esi]
  41f955:	xchg   ecx,eax
  41f956:	xchg   cl,ah
  41f958:	test   al,0x51
  41f95a:	je     0x41f988
  41f95c:	mov    dh,0xeb
  41f95e:	cwde   
  41f95f:	scas   eax,DWORD PTR es:[edi]
  41f960:	out    dx,al
  41f961:	nop
  41f962:	xchg   BYTE PTR [ecx+0x6c289806],dh
  41f968:	neg    edi
  41f96a:	fsubr  DWORD PTR [edx+0x44]
  41f96d:	fidiv  WORD PTR [ebp-0x19]
  41f970:	scas   eax,DWORD PTR es:[edi]
  41f971:	ja     0x41f99b
  41f973:	add    BYTE PTR ss:[edi+esi*1-0x7a46205f],cl
  41f97b:	xchg   esi,eax
  41f97c:	shl    dl,1
  41f97e:	dec    esi
  41f97f:	or     DWORD PTR [eax+ebx*8],0xd50c86fb
  41f986:	cwde   
  41f987:	lahf   
  41f988:	out    dx,al
  41f989:	nop
  41f98a:	out    0xe6,al
  41f98c:	mov    bh,0xa1
  41f98e:	addr16 mov al,ds:0x500b
  41f992:	cwde   
  41f993:	inc    edi
  41f994:	out    dx,al
  41f995:	nop
  41f996:	jecxz  0x41f949
  41f998:	test   eax,0x5860fb91
  41f99d:	jb     0x41f979
  41f99f:	stos   BYTE PTR es:[edi],al
  41f9a0:	sub    al,0x33
  41f9a2:	pop    ebx
  41f9a3:	add    BYTE PTR [ebp-0x5f],al
  41f9a6:	mov    ah,ch
  41f9a8:	add    BYTE PTR [eax],al
  41f9aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9ab:	stos   DWORD PTR es:[edi],eax
  41f9ac:	push   ebp
  41f9ad:	mov    eax,0x40828e
  41f9b2:	dec    ecx
  41f9b3:	sub    al,BYTE PTR [ebx+0x62024e45]
  41f9b9:	adc    BYTE PTR [ecx+0xb],cl
  41f9bc:	mov    DWORD PTR [ebp+0x4e],esi
  41f9bf:	adc    BYTE PTR [edi+ecx*1-0x3ed2e],bh
  41f9c6:	inc    esi
  41f9c7:	gs ds adc ch,dl
  41f9cb:	adc    DWORD PTR [ecx],esi
  41f9cd:	je     0x41f950
  41f9cf:	pop    ebp
  41f9d0:	repz inc esi
  41f9d2:	ret    0x81ce
  41f9d5:	clc    
  41f9d6:	loop   0x41f965
  41f9d8:	or     DWORD PTR es:[esi],0x7a
  41f9dc:	outs   dx,BYTE PTR ds:[esi]
  41f9dd:	jo     0x41f96c
  41f9df:	cwde   
  41f9e0:	jae    0x833e1059
  41f9e6:	arpl   dx,sp
  41f9e8:	add    BYTE PTR [ebp-0x72af1dad],cl
  41f9ee:	push   ebx
  41f9ef:	push   ss
  41f9f0:	dec    esp
  41f9f1:	inc    DWORD PTR [ebx-0xe]
  41f9f4:	push   edx
  41f9f5:	call   0x42e097
  41f9fa:	push   ebx
  41f9fb:	sbb    ebp,DWORD PTR [edi+0x50]
  41f9fe:	and    BYTE PTR [edx],al
  41fa00:	inc    ecx
  41fa01:	adc    dh,al
  41fa03:	fucomi st,st(1)
  41fa05:	dec    eax
  41fa06:	xor    eax,0xa880bca1
  41fa0b:	sahf   
  41fa0c:	sti    
  41fa0d:	push   esi
  41fa0e:	add    BYTE PTR [eax],al
  41fa10:	cmp    eax,esp
  41fa12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa13:	adc    al,BYTE PTR [esi]
  41fa15:	(bad)  
  41fa17:	xor    al,0x48
  41fa19:	or     bh,ch
  41fa1b:	xor    ch,ch
  41fa1d:	pop    ebp
  41fa1e:	repz jmp FWORD PTR [edi]
  41fa21:	mov    cl,0x18
  41fa23:	mov    DWORD PTR [edx],ebp
  41fa25:	or     eax,0xac2f4056
  41fa2a:	aas    
  41fa2b:	daa    
  41fa2c:	inc    edi
  41fa2d:	jno    0x41fa36
  41fa2f:	add    al,0xfb
  41fa31:	js     0x41faa7
  41fa33:	jae    0x41fa5c
  41fa35:	jge    0x41faab
  41fa37:	adc    ah,BYTE PTR [ebx-0x6d]
  41fa3a:	mov    edi,0xccc46aff
  41fa3f:	cld    
  41fa40:	cmp    bl,BYTE PTR [ecx]
  41fa42:	adc    al,BYTE PTR [eax+0x2f]
  41fa45:	inc    eax
  41fa46:	jnp    0x41fa20
  41fa48:	hlt    
  41fa49:	adc    dh,bh
  41fa4b:	or     dl,0xb4
  41fa4e:	(bad)  [ebx+0x1f]
  41fa51:	mov    ch,ch
  41fa53:	pop    ss
  41fa54:	cmp    BYTE PTR [edx],cl
  41fa56:	or     al,0xfd
  41fa58:	mov    edx,0x3b726e94
  41fa5d:	(bad)  
  41fa5e:	outs   dx,DWORD PTR ds:[esi]
  41fa5f:	push   edx
  41fa60:	daa    
  41fa61:	(bad)  
  41fa62:	cmp    eax,0xd48543c1
  41fa67:	push   eax
  41fa68:	jp     0x41fa76
  41fa6a:	dec    esi
  41fa6b:	xor    BYTE PTR [edx],bl
  41fa6d:	fcom   QWORD PTR [ecx+0x72]
  41fa70:	sub    BYTE PTR [ebx+0xe63f],dl
  41fa76:	sub    eax,DWORD PTR [esi+0x1987ffff]
  41fa7c:	dec    edi
  41fa7d:	inc    eax
  41fa7e:	das    
  41fa7f:	jo     0x41fa9a
  41fa81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa82:	cmp    eax,0x73c604c5
  41fa87:	cdq    
  41fa88:	cli    
  41fa89:	call   DWORD PTR [edi]
  41fa8b:	stos   BYTE PTR es:[edi],al
  41fa8c:	repz (bad) [ebp+eax*4-0x8]
  41fa91:	sbb    DWORD PTR [edx-0xe],ebx
  41fa94:	fdiv   st(6),st
  41fa96:	mov    eax,0x1afcff78
  41fa9b:	ficomp WORD PTR [ebp+0x14]
  41fa9e:	out    dx,eax
  41fa9f:	fld    QWORD PTR [esi-0x15e57d08]
  41faa5:	cs ins BYTE PTR es:[edi],dx
  41faa7:	fisub  WORD PTR [ebp+0x3f]
  41faaa:	nop
  41faab:	mov    gs,ecx
  41faad:	jle    0x41fae4
  41faaf:	adc    bl,BYTE PTR [edi+eax*8]
  41fab2:	or     bl,0x29
  41fab5:	das    
  41fab6:	fs pop es
  41fab8:	(bad)  
  41fab9:	jle    0x41fad8
  41fabb:	push   ss
  41fabc:	inc    esp
  41fabd:	(bad)  
  41fabe:	push   0x3385fdd5
  41fac3:	pop    edx
  41fac4:	pop    esi
  41fac5:	add    al,0x2f
  41fac7:	fisubr WORD PTR [ecx+0x160b902e]
  41facd:	fidiv  DWORD PTR [ebp+0x2f086ce1]
  41fad3:	fsubp  st(1),st
  41fad5:	mov    cl,0xc0
  41fad7:	scas   eax,DWORD PTR es:[edi]
  41fad8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fad9:	add    eax,DWORD PTR [eax]
  41fadb:	add    BYTE PTR [edi-0x20],al
  41fade:	in     eax,dx
  41fadf:	jb     0x41fb0c
  41fae1:	arpl   WORD PTR [ecx-0x169154fe],bp
  41fae7:	add    ebp,DWORD PTR [edi]
  41fae9:	aas    
  41faea:	dec    ebp
  41faeb:	push   edx
  41faec:	outs   dx,DWORD PTR ds:[esi]
  41faed:	fisubr WORD PTR [esi+0x0]
  41faf0:	xchg   DWORD PTR [esi+eiz*1+0x45d3b604],ebp
  41faf7:	push   ss
  41faf8:	outs   dx,DWORD PTR ds:[esi]
  41faf9:	ficom  WORD PTR [edx]
  41fafb:	fimul  WORD PTR [edi+0x57]
  41fafe:	add    eax,0x1de3eb85
  41fb03:	push   edx
  41fb04:	outs   dx,DWORD PTR ds:[esi]
  41fb05:	fidivr WORD PTR [ebx+esi*2]
  41fb08:	sbb    eax,0xd0c6ac12
  41fb0d:	mov    WORD PTR [ebx+0x7cc9c07e],ds
  41fb13:	mul    DWORD PTR [ebp-0x8]
  41fb16:	add    dl,ah
  41fb18:	xlat   BYTE PTR ds:[ebx]
  41fb19:	mov    dh,BYTE PTR ds:0x11e5ef5
  41fb1f:	pushw  es
  41fb21:	push   esi
  41fb22:	lock and ah,BYTE PTR [esi]
  41fb25:	push   esi
  41fb26:	sub    eax,0x11e42e5
  41fb2b:	aad    0x41
  41fb2d:	clc    
  41fb2e:	add    BYTE PTR [esi-0x7cfd5c9a],bl
  41fb34:	add    ecx,DWORD PTR [ebx]
  41fb36:	add    ch,BYTE PTR [edi]
  41fb38:	data16 loopne 0x41fba3
  41fb3b:	es data16 jecxz 0x41fba8
  41fb3f:	add    BYTE PTR ss:[eax],al
  41fb42:	jae    0x41fad1
  41fb44:	lds    esp,FWORD PTR [edi-0x7317619e]
  41fb4a:	(bad)  
  41fb4b:	mov    bh,bl
  41fb4d:	fs in  al,dx
  41fb4f:	adc    BYTE PTR [ebx],cl
  41fb51:	das    
  41fb52:	jo     0x41fb15
  41fb54:	psubsb mm4,mm1
  41fb57:	mov    ebp,0xd710adc2
  41fb5c:	add    DWORD PTR [edx],eax
  41fb5e:	push   ds
  41fb5f:	xor    al,0x67
  41fb61:	jmp    0xbfb6cc05
  41fb66:	jmp    0xf6:0xf6bcfa8c
  41fb6d:	into   
  41fb6e:	pop    eax
  41fb6f:	adc    bl,bl
  41fb71:	sub    dh,BYTE PTR [ebx]
  41fb73:	mov    edx,ebp
  41fb75:	mov    esi,0x2adb0900
  41fb7a:	xor    ebp,DWORD PTR [ebx]
  41fb7c:	pop    ebx
  41fb7d:	inc    ecx
  41fb7e:	fild   QWORD PTR [edx-0xfa016c1]
  41fb84:	lods   al,BYTE PTR ds:[esi]
  41fb85:	sti    
  41fb86:	in     al,dx
  41fb87:	mov    WORD PTR [ecx+0x5dd7072d],cs
  41fb8d:	xor    ah,ah
  41fb8f:	popf   
  41fb90:	push   ebp
  41fb91:	add    BYTE PTR ds:0xd2ec80fe,bh
  41fb97:	mov    cl,0x55
  41fb99:	mov    edi,DWORD PTR [ebx+0x5c]
  41fb9c:	push   cs
  41fb9d:	inc    eax
  41fb9e:	(bad)  
  41fb9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fba0:	imul   eax,DWORD PTR [ebx*1+0x8d5d1a],0x4bfccb00
  41fbab:	(bad)  
  41fbac:	retf   
  41fbad:	adc    al,0x4c
  41fbaf:	push   0xffffff87
  41fbb1:	mov    cl,0x82
  41fbb3:	jge    0x41fba7
  41fbb5:	push   cs
  41fbb6:	(bad)  
  41fbb7:	test   DWORD PTR [esi-0x7a],edx
  41fbba:	or     ecx,DWORD PTR [ebx-0x3680eb2d]
  41fbc0:	mov    edx,0x10aae387
  41fbc5:	paddw  mm0,QWORD PTR [esi+edx*1-0x7472e37a]
  41fbcd:	cld    
  41fbce:	dec    ebx
  41fbcf:	lea    ecx,[ebx+0x6b6a4bf8]
  41fbd5:	mov    cl,0x82
  41fbd7:	jge    0x41fc1b
  41fbd9:	or     eax,0x860685d6
  41fbde:	or     al,0x83
  41fbe0:	ret    
  41fbe1:	clc    
  41fbe2:	sti    
  41fbe3:	jae    0x41fc04
  41fbe5:	or     edx,DWORD PTR [edi-0x8]
  41fbe8:	std    
  41fbe9:	cmp    al,0x31
  41fbeb:	shr    ch,0xe1
  41fbee:	mov    al,0x1
  41fbf0:	inc    ecx
  41fbf1:	mov    al,0x58
  41fbf3:	leave  
  41fbf4:	aad    0xb4
  41fbf6:	xchg   BYTE PTR [edx+ebp*1+0xa],ch
  41fbfa:	jnp    0x41fbe8
  41fbfc:	cmp    bl,bh
  41fbfe:	add    BYTE PTR [eax],al
  41fc00:	adc    eax,0x863588a8
  41fc05:	icebp  
  41fc06:	inc    eax
  41fc07:	add    BYTE PTR [ecx],bl
  41fc09:	sar    ebp,1
  41fc0b:	push   0xf52f0000
  41fc10:	push   ecx
  41fc11:	inc    eax
  41fc12:	das    
  41fc13:	add    BYTE PTR [eax-0x7a],cl
  41fc16:	or     bh,ch
  41fc18:	push   ecx
  41fc19:	inc    eax
  41fc1a:	das    
  41fc1b:	push   cs
  41fc1c:	sub    ebx,DWORD PTR [ecx+ebx*8-0x2602fb48]
  41fc23:	fild   QWORD PTR [eax]
  41fc25:	push   ebp
  41fc26:	call   0x2f824dcc
  41fc2b:	push   esp
  41fc2c:	jo     0x41fc40
  41fc2e:	dec    DWORD PTR [edx-0x3e520041]
  41fc34:	sti    
  41fc35:	push   esp
  41fc36:	mov    bl,ch
  41fc38:	jg     0x41fc74
  41fc3a:	iret   
  41fc3b:	mov    edi,0x842fffc4
  41fc40:	mov    DWORD PTR [eax-0x7d008ad2],ebp
  41fc46:	test   BYTE PTR [ecx+0x38],ch
  41fc49:	data16 lods al,BYTE PTR ds:[esi]
  41fc4b:	cmp    bh,0x73
  41fc4e:	push   ds
  41fc4f:	pop    edi
  41fc50:	lds    ecx,FWORD PTR [edx-0x1838bb26]
  41fc56:	(bad)
  41fc59:	cld    
  41fc5a:	aad    0x35
  41fc5c:	jp     0x41fcd0
  41fc5e:	push   edi
  41fc5f:	ins    DWORD PTR es:[edi],dx
  41fc60:	push   edi
  41fc61:	ins    BYTE PTR es:[edi],dx
  41fc62:	inc    edi
  41fc63:	jl     0x41fcd0
  41fc65:	push   eax
  41fc66:	sub    BYTE PTR [edx+0x756f116b],cl
  41fc6c:	add    BYTE PTR [ebx+0x2f],0x77
  41fc70:	iret   
  41fc71:	push   eax
  41fc72:	add    BYTE PTR [eax],al
  41fc74:	test   DWORD PTR [esi-0x80],esi
  41fc77:	inc    edx
  41fc78:	pop    edi
  41fc79:	in     eax,0x77
  41fc7b:	lds    ebx,FWORD PTR [edi-0x53]
  41fc7e:	mov    eax,ds:0xd9752fe5
  41fc83:	inc    eax
  41fc84:	mov    ds:0xd75748d1,al
  41fc89:	fnsave [eax]
  41fc8b:	pop    esp
  41fc8c:	jecxz  0x41fc18
  41fc8e:	bswap  eax
  41fc90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc91:	adc    BYTE PTR [esi],bh
  41fc93:	int3   
  41fc94:	enter  0x81cb,0x6f
  41fc98:	retf   
  41fc99:	imul   DWORD PTR [ecx+eax*4]
  41fc9c:	cmp    eax,0xff5c21ce
  41fca1:	jne    0x41fd15
  41fca3:	outs   dx,DWORD PTR ds:[esi]
  41fca4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fca5:	and    BYTE PTR [esi],dl
  41fca7:	jge    0x41fc96
  41fca9:	cmc    
  41fcaa:	outs   dx,BYTE PTR ds:[esi]
  41fcab:	inc    esi
  41fcac:	test   eax,0x1d80ce20
  41fcb1:	imul   BYTE PTR [edx]
  41fcb3:	leave  
  41fcb4:	sbb    al,0xe0
  41fcb6:	jmp    0xe3992bbe
  41fcbb:	shl    BYTE PTR [ebp-0x442bd9e0],cl
  41fcc1:	fsub   st(1),st
  41fcc3:	add    ebp,DWORD PTR [edi-0x75a3ddaa]
  41fcc9:	sub    cl,0x3
  41fccc:	lods   al,BYTE PTR ds:[esi]
  41fccd:	popf   
  41fcce:	xchg   ebp,eax
  41fccf:	adc    eax,0x39a00ae
  41fcd4:	vsubpd xmm1,xmm3,xmm1
  41fcd8:	add    BYTE PTR [eax],al
  41fcda:	fsubr  DWORD PTR ds:0x58de0790
  41fce0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fce1:	inc    edi
  41fce2:	call   0x30a79c5c
  41fce7:	mov    ah,BYTE PTR [esi+0x46]
  41fcea:	sub    al,0x89
  41fcec:	xor    al,0xf8
  41fcee:	popf   
  41fcef:	xchg   ebp,eax
  41fcf0:	dec    edi
  41fcf1:	(bad)  
  41fcf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fcf3:	adc    edi,DWORD PTR [esi-0x3d56f735]
  41fcf9:	outs   dx,BYTE PTR ds:[esi]
  41fcfa:	or     esi,ebp
  41fcfc:	sub    al,BYTE PTR [ecx+0x5c221a7d]
  41fd02:	fild   WORD PTR [ecx+0x5481b600]
  41fd08:	inc    ebp
  41fd09:	xor    eax,0xda01f803
  41fd0e:	jne    0x41fd3e
  41fd10:	mov    fs,WORD PTR [edi+esi*2]
  41fd13:	sbb    DWORD PTR [eax+eiz*2-0x21],edx
  41fd17:	or     eax,0xd9f8f4fc
  41fd1c:	inc    eax
  41fd1d:	jmp    0xecb746d9
  41fd22:	xor    eax,0xb76450a3
  41fd27:	or     eax,0x891288e9
  41fd2c:	sti    
  41fd2d:	push   edx
  41fd2e:	cs int3 
  41fd30:	shl    BYTE PTR [ebp-0x14],0xc
  41fd34:	adc    BYTE PTR [edi+eiz*2+0x15],ah
  41fd38:	push   ecx
  41fd39:	pop    esp
  41fd3a:	ja     0x41fce9
  41fd3c:	push   eax
  41fd3d:	jb     0x41fd3f
  41fd3f:	add    cl,ch
  41fd41:	sub    BYTE PTR [ecx+0x44],0x2c
  41fd45:	fiadd  WORD PTR [ebp+0x66f17829]
  41fd4b:	in     eax,0xaf
  41fd4d:	sbb    al,0x71
  41fd4f:	mov    ecx,0xa48ddd86
  41fd54:	cwde   
  41fd55:	sbb    DWORD PTR [esi-0x75e70754],ecx
  41fd5b:	lods   al,BYTE PTR ds:[esi]
  41fd5c:	cmp    al,0x81
  41fd5e:	iret   
  41fd5f:	or     al,0x2c
  41fd61:	fisub  WORD PTR [esi-0x4f]
  41fd64:	scas   eax,DWORD PTR es:[edi]
  41fd65:	or     al,0xa5
  41fd67:	xchg   ecx,eax
  41fd68:	aam    0xf9
  41fd6a:	jecxz  0x41fd5a
  41fd6c:	call   0x58d1:0x187449f7
  41fd73:	rol    DWORD PTR [edi],1
  41fd75:	cmp    bl,0xd6
  41fd78:	cmc    
  41fd79:	push   ss
  41fd7a:	mov    ss,WORD PTR [edi+ebx*8+0x30]
  41fd7e:	jmp    0xfd454c83
  41fd83:	dec    DWORD PTR [ebx+0x438933a1]
  41fd89:	xchg   esi,eax
  41fd8a:	mov    dh,al
  41fd8c:	dec    edi
  41fd8d:	mov    eax,ds:0x866b8943
  41fd92:	les    eax,FWORD PTR [ebp+0x36]
  41fd95:	loope  0x41fd97
  41fd97:	add    dh,al
  41fd99:	stc    
  41fd9a:	outs   dx,BYTE PTR ds:[esi]
  41fd9b:	je     0x41fe08
  41fd9d:	mov    eax,ds:0x4b1c509f
  41fda2:	pop    eax
  41fda3:	lea    eax,[eax]
  41fda5:	add    bl,bh
  41fda7:	aad    0xfd
  41fda9:	(bad)  
  41fdaa:	cmp    DWORD PTR [edx],ebp
  41fdac:	(bad)  
  41fdad:	out    dx,eax
  41fdae:	sbb    bl,bh
  41fdb0:	push   edx
  41fdb1:	pop    ecx
  41fdb2:	adc    esp,DWORD PTR [edx]
  41fdb4:	jle    0x41fdf3
  41fdb6:	jl     0x41fd96
  41fdb8:	xchg   DWORD PTR [ebp-0x3e],edi
  41fdbb:	call   0x47f:0x7c51f88
  41fdc2:	jmp    0xae92fac1
  41fdc7:	fadd   QWORD PTR [eax]
  41fdc9:	add    BYTE PTR [esi],al
  41fdcb:	sub    ah,dl
  41fdcd:	in     al,0x56
  41fdcf:	fdivr  QWORD PTR [edi-0x40]
  41fdd2:	ret    0x81d3
  41fdd5:	gs stos BYTE PTR es:[edi],al
  41fdd7:	fsub   QWORD PTR [esi+0x4]
  41fdda:	retf   
  41fddb:	mov    al,ds:0xe0ac5067
  41fde0:	push   ecx
  41fde1:	(bad)  
  41fde2:	rcl    ebp,cl
  41fde4:	std    
  41fde5:	(bad)  
  41fde6:	cmp    DWORD PTR [ebx+eiz*8+0xe2234b],ebp
  41fded:	adc    DWORD PTR [ecx-0x2a],0x4a
  41fdf1:	jne    0x41fdd2
  41fdf3:	cli    
  41fdf4:	ds je  0x41fdf0
  41fdf7:	dec    eax
  41fdf8:	imul   esi,DWORD PTR [ebp+0x2f],0x55
  41fdfc:	int3   
  41fdfd:	pop    ebp
  41fdfe:	fs hlt 
  41fe00:	inc    edx
  41fe01:	ja     0x41fdf9
  41fe03:	xor    al,0xd2
  41fe05:	mov    BYTE PTR [ebx],cl
  41fe07:	neg    DWORD PTR [ebx+0x5f]
  41fe0a:	add    BYTE PTR [eax],al
  41fe0c:	daa    
  41fe0d:	jne    0x41fe0e
  41fe0f:	push   eax
  41fe10:	cmp    DWORD PTR [eax],0x9c1c07f2
  41fe16:	jp     0x41fe8a
  41fe18:	ror    DWORD PTR [esi],cl
  41fe1a:	retf   
  41fe1b:	sti    
  41fe1c:	(bad)  
  41fe1d:	push   ss
  41fe1e:	pusha  
  41fe1f:	dec    eax
  41fe21:	add    DWORD PTR [eax+0xc],eax
  41fe24:	stos   DWORD PTR es:[edi],eax
  41fe25:	mov    dh,0xff
  41fe27:	jmp    FWORD PTR [edi]
  41fe29:	in     al,0xd6
  41fe2b:	(bad)  
  41fe2c:	mov    ds:0xa84f78ba,eax
  41fe31:	xchg   edx,eax
  41fe32:	arpl   WORD PTR [eax-0x50a7d316],cx
  41fe38:	xchg   BYTE PTR [edi],ah
  41fe3a:	ins    DWORD PTR es:[edi],dx
  41fe3b:	mov    BYTE PTR [edi-0x491c3cfe],bl
  41fe41:	mov    dl,0x67
  41fe43:	out    0x19,eax
  41fe45:	push   ss
  41fe46:	add    BYTE PTR [eax],al
  41fe48:	lods   al,BYTE PTR ds:[esi]
  41fe49:	(bad)  
  41fe4a:	ins    BYTE PTR es:[edi],dx
  41fe4b:	or     al,0xab
  41fe4d:	scas   al,BYTE PTR es:[edi]
  41fe4e:	(bad)  
  41fe4f:	jmp    FWORD PTR [edi]
  41fe51:	jo     0x41fe2c
  41fe53:	push   es
  41fe54:	sbb    al,0xc3
  41fe56:	js     0x41fe1d
  41fe58:	imul   bh
  41fe5a:	outs   dx,BYTE PTR ds:[esi]
  41fe5b:	cmp    BYTE PTR [ebp-0x80],0x82
  41fe5f:	clc    
  41fe60:	das    
  41fe61:	jne    0x41fe62
  41fe63:	imul   esi,esp,0xd7e3eb11
  41fe69:	in     al,dx
  41fe6a:	sub    eax,0xd89030e6
  41fe6f:	dec    ebx
  41fe70:	add    BYTE PTR [eax],al
  41fe72:	mov    edx,0x175747f9
  41fe77:	ficom  WORD PTR [esi]
  41fe79:	bound  ebx,QWORD PTR [ebx]
  41fe7b:	xchg   DWORD PTR [esi],edx
  41fe7d:	push   esi
  41fe7e:	test   eax,0xfe2ee228
  41fe83:	(bad)  
  41fe84:	arpl   WORD PTR [eax+eax*1-0x79],cx
  41fe88:	jmp    0x6f18640b
  41fe8d:	sar    esp,0x52
  41fe90:	std    
  41fe91:	jnp    0x41fe44
  41fe93:	adc    BYTE PTR [edx+0x6dd6da81],bh
  41fe99:	lods   al,BYTE PTR ds:[esi]
  41fe9a:	fadd   DWORD PTR [esi-0x21ed7c17]
  41fea0:	loop   0x41ff21
  41fea2:	fucomp st(1)
  41fea5:	add    esi,DWORD PTR [esi-0x4fff8df7]
  41feab:	or     BYTE PTR [edx+0x6dd6b381],cl
  41feb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41feb2:	test   al,0x86
  41feb4:	jmp    0xf320623c
  41feb9:	jg     0x41fe7e
  41febb:	fucomp st(1)
  41febd:	add    esp,DWORD PTR [esi-0x52039dd7]
  41fec3:	mov    ds:0xddb77fda,al
  41fec8:	jmp    0xea04add0
  41fecd:	cli    
  41fece:	lods   al,BYTE PTR ds:[esi]
  41fecf:	pop    ebx
  41fed0:	jmp    0x219d2dd8
  41fed5:	imul   eax,DWORD PTR [eax],0x0
  41fed8:	lock sub ebp,DWORD PTR [edi+0x3f]
  41fedc:	push   eax
  41fedd:	mov    bh,0xc
  41fedf:	push   0x53
  41fee1:	pusha  
  41fee2:	sub    eax,esi
  41fee4:	sbb    DWORD PTR [ecx-0x5c],ebx
  41fee7:	pop    edi
  41fee8:	fild   QWORD PTR ds:0xde272c43
  41feee:	jmp    0x7f7c6b
  41fef3:	(bad)  
  41fef4:	xchg   ebp,eax
  41fef5:	sub    al,0xe
  41fef8:	test   DWORD PTR [ebx+0x5eea40fb],eax
  41fefe:	clc    
  41feff:	fiadd  WORD PTR [eax]
  41ff01:	and    al,0x88
  41ff03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff04:	jecxz  0x41ff5e
  41ff06:	dec    ebp
  41ff07:	int    0x64
  41ff09:	xchg   ebx,eax
  41ff0a:	jecxz  0x41fed3
  41ff0c:	test   DWORD PTR [ecx-0x40],esp
  41ff0f:	xor    eax,0xb97556b4
  41ff14:	imul   ecx,DWORD PTR [eax],0x58fd16e1
  41ff1a:	inc    ebp
  41ff1b:	sar    esp,0x42
  41ff1e:	cmp    cl,dh
  41ff20:	sub    al,0xde
  41ff22:	lea    ebx,[esp+ecx*4-0x76]
  41ff26:	sti    
  41ff27:	mov    fs,WORD PTR [eax+edi*1-0x16]
  41ff2b:	xchg   DWORD PTR [ebp+0x5e],eax
  41ff2e:	(bad)  
  41ff2f:	in     eax,dx
  41ff30:	test   eax,0x49fdfb8d
  41ff35:	push   edi
  41ff36:	retf   0x2618
  41ff39:	sbb    ch,bh
  41ff3b:	push   ecx
  41ff3c:	add    BYTE PTR [eax],al
  41ff3e:	test   eax,0x105efa7a
  41ff43:	inc    ebp
  41ff44:	je     0x41ff3b
  41ff46:	mov    cl,0x20
  41ff48:	or     eax,esp
  41ff4a:	add    DWORD PTR [eax],esp
  41ff4c:	or     DWORD PTR [edx-0x1f],esi
  41ff4f:	lds    eax,FWORD PTR [ebp+0x41]
  41ff52:	jne    0x41ffb3
  41ff54:	xor    dh,BYTE PTR [esi]
  41ff56:	aad    0x81
  41ff58:	out    0xdd,eax
  41ff5a:	aad    0xf
  41ff5c:	std    
  41ff5d:	adc    DWORD PTR [edi-0x7b],esi
  41ff60:	cli    
  41ff61:	push   ds
  41ff62:	test   eax,0xc9e9fd00
  41ff67:	pop    ds
  41ff68:	stc    
  41ff69:	bound  edx,QWORD PTR [edi-0x6f]
  41ff6c:	call   0xfe23ab71
  41ff71:	call   DWORD PTR [ecx-0x3f03c0fc]
  41ff77:	xchg   ebx,eax
  41ff78:	ret    0xac2
  41ff7b:	loope  0x41ffcc
  41ff7d:	mov    eax,DWORD PTR [edx]
  41ff7f:	add    edi,DWORD PTR [edi]
  41ff81:	or     al,0x87
  41ff83:	es add al,0x2
  41ff86:	push   ss
  41ff87:	loope  0x41ffde
  41ff89:	adc    esi,0xffffffe5
  41ff8c:	push   eax
  41ff8d:	(bad)  
  41ff8e:	cmp    eax,DWORD PTR [edx-0x3117a7a]
  41ff94:	cld    
  41ff95:	inc    DWORD PTR [esi+0x3]
  41ff98:	repz call 0x402ed6
  41ff9e:	dec    ebx
  41ff9f:	sbb    dh,BYTE PTR [eax+0x67]
  41ffa2:	add    BYTE PTR [eax],al
  41ffa4:	mov    eax,0x2a01ff9e
  41ffa9:	inc    edi
  41ffaa:	xchg   BYTE PTR [ebp-0x30362],al
  41ffb0:	push   ss
  41ffb1:	and    bl,BYTE PTR [ecx-0x2]
  41ffb4:	xor    edi,esi
  41ffb6:	add    BYTE PTR [ebp-0x6e],0x3
  41ffba:	mov    esp,0x55a9d274
  41ffbf:	push   eax
  41ffc0:	adc    ebp,edx
  41ffc2:	je     0x41ffd6
  41ffc4:	(bad)  
  41ffc5:	loopne 0x41ff50
  41ffc7:	dec    edi
  41ffc8:	xchg   edx,eax
  41ffc9:	add    esp,edx
  41ffcb:	lea    ebx,[ecx-0x78]
  41ffce:	add    bl,cl
  41ffd0:	fidiv  WORD PTR [edx+0x5e31fefd]
  41ffd6:	mov    ebx,0x45018874
  41ffdb:	or     al,0x55
  41ffdd:	ficom  WORD PTR [ecx-0x1]
  41ffe0:	mov    ebx,0x5bff4b8c
  41ffe5:	dec    esp
  41ffe6:	adc    eax,0x84772f40
  41ffeb:	ret    
  41ffec:	xor    esi,DWORD PTR [esi-0x38]
  41ffef:	or     edi,DWORD PTR [eax]
  41fff1:	add    esp,esi
  41fff3:	out    0x54,eax
  41fff5:	sub    DWORD PTR [ecx-0x4],0xffffff89
  41fff9:	jo     0x42006c
  41fffb:	inc    esp
  41fffc:	sub    esi,DWORD PTR [esi-0x15]
  41ffff:	or     ebp,DWORD PTR [edx+0x10fa67f2]
  420005:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420006:	iret   
  420007:	out    0x0,eax
  420009:	add    bh,dh
  42000b:	mov    al,0x69
  42000d:	cld    
  42000e:	cmp    al,0x35
  420010:	enter  0xedc6,0x8d
  420014:	call   DWORD PTR [edx-0x5c]
  420017:	xchg   ecx,eax
  420018:	test   bl,ah
  42001a:	out    0xf6,eax
  42001c:	push   ebx
  42001d:	dec    ebx
  42001e:	sub    eax,0x4555ff75
  420023:	int3   
  420024:	jae    0x420099
  420026:	or     esp,DWORD PTR [ecx+0x51ede7c7]
  42002c:	push   0x723bb4fc
  420031:	dec    ebx
  420032:	adc    ecx,ebp
  420034:	iret   
  420035:	xchg   BYTE PTR [ebx-0x67],ch
  420038:	div    DWORD PTR [eax]
  42003a:	outs   dx,DWORD PTR ds:[esi]
  42003b:	in     eax,0xd4
  42003d:	imul   ecx,DWORD PTR [esi-0x1b],0xd9534341
  420044:	sbb    al,0x8a
  420046:	out    dx,eax
  420047:	je     0x4200bf
  420049:	pop    ebx
  42004a:	push   ebx
  42004b:	aad    0x77
  42004d:	inc    ebx
  42004e:	dec    ebx
  42004f:	fnstenv [edi+0x43]
  420052:	push   ebx
  420053:	in     eax,dx
  420054:	imul   edx,DWORD PTR [edx],0xffbfa7db
  42005a:	mov    bl,0xb5
  42005c:	jmp    0x1373:0x7264d56d
  420063:	(bad)  
  420065:	retf   
  420066:	dec    eax
  420067:	pop    esp
  420068:	add    eax,0xad514b68
  42006d:	pop    ds
  42006e:	add    BYTE PTR [eax],al
  420070:	aaa    
  420071:	push   ebp
  420072:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420073:	pop    ds
  420074:	pop    ss
  420075:	push   ecx
  420076:	lods   eax,DWORD PTR ds:[esi]
  420077:	pop    ds
  420078:	out    0x54,eax
  42007a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42007b:	pop    ds
  42007c:	dec    ebx
  42007d:	push   ecx
  42007e:	lods   eax,DWORD PTR ds:[esi]
  42007f:	pop    ds
  420080:	sub    edx,DWORD PTR [ebp-0x5b]
  420083:	pop    ds
  420084:	push   ebx
  420085:	push   ecx
  420086:	sub    eax,0x6d2e6720
  42008b:	mov    eax,0xc0aae24c
  420090:	dec    esp
  420091:	mov    edx,0xde2f03e5
  420096:	stos   BYTE PTR es:[edi],al
  420097:	ror    BYTE PTR [edx+esi*4-0x18],0x3
  42009c:	das    
  42009d:	fisubr WORD PTR [edx-0x1831f340]
  4200a3:	add    ebp,DWORD PTR [edi]
  4200a5:	ficom  WORD PTR [ecx-0x657d0076]
  4200ab:	jnp    0x42009f
  4200ad:	sub    eax,0x120cc065
  4200b2:	cmp    dl,ah
  4200b4:	rcr    BYTE PTR [esi],1
  4200b6:	pushf  
  4200b7:	data16 mov bl,0x58
  4200ba:	test   eax,0x2d513ef0
  4200bf:	and    bh,dh
  4200c1:	sub    eax,0xe24cb85d
  4200c6:	jo     0x420088
  4200c8:	dec    esp
  4200c9:	mov    esi,0x825fee51
  4200ce:	push   edx
  4200cf:	outs   dx,BYTE PTR ds:[esi]
  4200d0:	outs   dx,DWORD PTR ds:[esi]
  4200d1:	(bad)  
  4200d3:	adc    DWORD PTR [eax],eax
  4200d5:	add    BYTE PTR [esi-0x59ebf1e7],ah
  4200db:	adc    dl,dh
  4200dd:	jl     0x420148
  4200df:	push   edi
  4200e0:	add    BYTE PTR [ebp-0x637815c0],ch
  4200e6:	pusha  
  4200e7:	pop    ebx
  4200e8:	add    edi,eax
  4200ea:	aad    0x7f
  4200ec:	pop    ebp
  4200ed:	sub    ecx,DWORD PTR [ebx-0x7e]
  4200f0:	push   esp
  4200f1:	(bad)  
  4200f2:	out    0x5d,eax
  4200f4:	in     al,dx
  4200f5:	test   DWORD PTR [ebp+0x28],ebx
  4200f8:	push   esp
  4200f9:	je     0x420169
  4200fb:	xchg   BYTE PTR [eax+0x6c],dl
  4200fe:	out    dx,al
  4200ff:	lea    edx,[eax-0x7d]
  420102:	cs daa 
  420104:	jmp    0xfbc492e4
  420109:	sbb    ah,BYTE PTR [eax+ecx*8+0x5d]
  42010d:	fucom  st(6)
  42010f:	adc    al,0xc
  420111:	sub    al,0xf6
  420113:	lea    ecx,[ebp-0x16d62cac]
  420119:	mov    al,ds:0x53fb828d
  42011e:	mov    eax,ds:0xf4bd7d54
  420123:	jns    0x4200bd
  420125:	retf   0x8251
  420128:	xchg   DWORD PTR [esi-0x148b5951],ebp
  42012e:	inc    ebp
  42012f:	sahf   
  420130:	push   eax
  420131:	fs out dx,eax
  420133:	popa   
  420134:	push   eax
  420135:	add    esi,DWORD PTR [ebx]
  420137:	hlt    
  420138:	add    BYTE PTR [ebx],dl
  42013a:	add    BYTE PTR [eax],al
  42013c:	sub    dh,BYTE PTR [esi+0x33]
  42013f:	sbb    al,0x10
  420141:	cmp    BYTE PTR [edi-0x53],0x30
  420145:	das    
  420146:	jmp    0xfbc513a6
  42014b:	(bad)  
  42014c:	push   0x26
  42014e:	retf   0x5f2a
  420151:	push   esi
  420152:	in     al,dx
  420153:	push   0xffffffd8
  420155:	enter  0xb74f,0x69
  420159:	stc    
  42015a:	add    al,0x0
  42015c:	push   esi
  42015d:	fld    QWORD PTR [eax]
  42015f:	mov    ebp,esi
  420161:	add    edi,DWORD PTR [edi]
  420163:	adc    ch,dl
  420165:	mov    esp,0xda318300
  42016a:	data16 or BYTE PTR [ecx],cl
  42016d:	into   
  42016e:	sub    dh,dl
  420170:	xchg   ebp,eax
  420171:	(bad)  
  420173:	adc    eax,0x40efaa
  420178:	int    0x14
  42017a:	sbb    DWORD PTR [ebp+0x32],0x1
  42017e:	fnstenv [ebp+0x11]
  420181:	iret   
  420182:	shr    cl,0x6c
  420185:	fld    QWORD PTR [eax]
  420187:	add    BYTE PTR [ecx],cl
  420189:	jno    0x420192
  42018b:	call   DWORD PTR [ebx]
  42018d:	xchg   ebp,eax
  42018e:	or     al,BYTE PTR [eax+0x16]
  420191:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420192:	and    ebx,DWORD PTR [esi+0x40]
  420195:	or     DWORD PTR [edi],edi
  420197:	int3   
  420198:	ins    BYTE PTR es:[edi],dx
  420199:	ficom  DWORD PTR [eax-0x3a]
  42019c:	inc    ebx
  42019d:	idiv   edx
  42019f:	inc    BYTE PTR [eax]
  4201a1:	add    BYTE PTR [ebx],al
  4201a3:	lods   eax,DWORD PTR ds:[esi]
  4201a4:	adc    eax,0x6f03d640
  4201a9:	int3   
  4201aa:	inc    ebp
  4201ab:	push   ds
  4201ac:	or     BYTE PTR [ecx+0xbdfa6b],cl
  4201b2:	(bad)  
  4201b3:	fadd   QWORD PTR [eax]
  4201b5:	sbb    BYTE PTR [ebx],0xee
  4201b8:	add    BYTE PTR [ebp-0x4b],dh
  4201bb:	pop    es
  4201bc:	aas    
  4201bd:	in     al,0x16
  4201bf:	nop
  4201c0:	cld    
  4201c1:	jne    0x4201e5
  4201c3:	sti    
  4201c4:	outs   dx,BYTE PTR ds:[esi]
  4201c5:	or     BYTE PTR [ecx],bl
  4201c7:	sar    DWORD PTR [ebp+edx*1+0x15e9da46],1
  4201ce:	or     DWORD PTR [ecx+0x13],esi
  4201d1:	(bad)  
  4201d2:	ror    eax,cl
  4201d4:	imul   ecx,DWORD PTR [eax],0x7264472f
  4201da:	daa    
  4201db:	(bad)  
  4201dc:	jmp    0x4201c1
  4201de:	jo     0x420181
  4201e0:	jnp    0x4201f4
  4201e2:	out    dx,eax
  4201e3:	jbe    0x42025f
  4201e5:	mov    edi,0x1264aeda
  4201ea:	aas    
  4201eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201ec:	mov    edi,0x1d213ff
  4201f1:	add    BYTE PTR [edi],ch
  4201f3:	push   0x1e
  4201f5:	mov    ebp,edx
  4201f7:	jp     0x4201c8
  4201f9:	out    0x81,eax
  4201fb:	test   BYTE PTR [eax+eax*1],0x44
  4201ff:	sar    BYTE PTR [ecx+0x5a],0x13
  420203:	sti    
  420204:	dec    ecx
  420205:	jae    0x420207
  420207:	add    BYTE PTR [eax+ecx*4],bh
  42020a:	jmp    0x8ae8:0xf3aa4f3
  420211:	ja     0x420278
  420213:	cld    
  420214:	mov    dl,0x35
  420216:	jmp    0xf9ff:0x69b2e99f
  42021d:	sub    dh,BYTE PTR [ecx-0x19]
  420220:	mov    al,0x9a
  420222:	gs cld 
  420224:	scas   eax,DWORD PTR es:[edi]
  420225:	ret    0xff69
  420228:	pop    ebx
  420229:	jnp    0x4202a3
  42022b:	inc    edx
  42022c:	aas    
  42022d:	xor    BYTE PTR [edi],ch
  42022f:	call   0xfca73cb4
  420234:	mov    ch,0xba
  420236:	imul   ebx,DWORD PTR [ecx+eiz*2-0x34],0x7523c137
  42023e:	retf   0xc388
  420241:	hlt    
  420242:	pop    ebx
  420243:	imul   DWORD PTR [ecx+edx*2-0x6f0c7ed5]
  42024a:	idiv   esp
  42024c:	cld    
  42024d:	sti    
  42024e:	add    ah,BYTE PTR [ebp+edi*1-0x1efc5622]
  420255:	rol    BYTE PTR es:[ebx+0x78ea1b62],cl
  42025c:	cmp    BYTE PTR [edi+0x36],0x78
  420260:	cmp    esi,DWORD PTR [esi+0x6]
  420263:	outs   dx,BYTE PTR ds:[esi]
  420264:	imul   edi,DWORD PTR [edi+0x66],0x6b
  420268:	arpl   di,cx
  42026a:	ins    DWORD PTR es:[edi],dx
  42026b:	add    eax,DWORD PTR [eax]
  42026d:	add    BYTE PTR ds:0x2578e9de,ch
  420273:	inc    bx
  420275:	ror    BYTE PTR [eax-0xc],0x29
  420279:	sbb    esi,DWORD PTR [edx+ecx*8-0x3a8fcf1f]
  420280:	fwait
  420281:	mov    cr3,eax
  420284:	adc    BYTE PTR [edx],al
  420286:	das    
  420287:	fisub  WORD PTR [esi-0x1b]
  42028a:	cmp    al,0xdd
  42028c:	jl     0x42029f
  42028e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42028f:	pop    ss
  420290:	fisubr DWORD PTR [edx]
  420292:	ficomp DWORD PTR [di+0xe]
  420296:	mov    dh,0x17
  420298:	push   es
  420299:	lea    ebp,[ebx]
  42029b:	jne    0x420255
  42029d:	add    eax,0xc95ede2f
  4202a2:	and    bl,al
  4202a4:	test   al,0xd8
  4202a6:	cs push ebp
  4202a8:	icebp  
  4202a9:	xchg   BYTE PTR [edx-0x1e],ah
  4202ac:	mov    dl,0x13
  4202ae:	lods   al,BYTE PTR ds:[esi]
  4202af:	imul   eax
  4202b1:	add    ebp,DWORD PTR [edi]
  4202b3:	push   ebx
  4202b4:	sub    ecx,DWORD PTR [ecx+esi*8]
  4202b7:	pop    ss
  4202b8:	out    0x4,al
  4202ba:	sbb    DWORD PTR [ebp-0x4d],0x6128b8c7
  4202c1:	enter  0xe20c,0x82
  4202c5:	stc    
  4202c6:	aam    0xeb
  4202c8:	sub    DWORD PTR [edx+eiz*4],eax
  4202cb:	or     BYTE PTR [ecx],al
  4202cd:	sar    DWORD PTR [edi+0xb5251a],1
  4202d3:	add    BYTE PTR ds:0xdb9150c,cl
  4202d9:	or     esp,DWORD PTR ds:0x251a9e05
  4202df:	lods   eax,DWORD PTR ds:[esi]
  4202e0:	or     eax,0xed4e8ca
  4202e5:	cmp    bl,0x9f
  4202e8:	mov    ah,0x1a
  4202ea:	and    eax,0x87adcdd6
  4202ef:	inc    ah
  4202f1:	addr16 cmc 
  4202f3:	cs int3 
  4202f5:	push   ebp
  4202f6:	lock push 0xffffffcd
  4202f9:	or     DWORD PTR [ebx],0xfb7f9f65
  4202ff:	jmp    0xfa6705b0
  420304:	sub    al,0xd1
  420306:	test   BYTE PTR [eax+0x32],bl
  420309:	fiadd  WORD PTR [eax]
  42030b:	xchg   edx,eax
  42030c:	xchg   ch,al
  42030e:	(bad)  
  42030f:	mov    ebx,0xe93f9b94
  420314:	mov    edi,0xc30d2521
  420319:	mov    ds:0x7b2ce542,eax
  42031e:	xor    eax,ecx
  420320:	mov    WORD PTR [ebx+0x299fcefb],gs
  420326:	and    eax,0x4464a215
  42032b:	add    eax,0x43036717
  420330:	xor    cl,BYTE PTR [esi]
  420332:	jmp    0xfbbc1f83
  420337:	jo     0x420339
  420339:	add    al,dh
  42033b:	shr    DWORD PTR [eax],0x72
  42033e:	imul   ch
  420340:	mov    DWORD PTR ds:0x2787b607,ebp
  420346:	mov    bh,0xae
  420348:	xlat   BYTE PTR ds:[ebx]
  420349:	add    BYTE PTR [edi],bl
  42034b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42034c:	pop    ds
  42034d:	cmp    al,0x6f
  42034f:	cmp    eax,0x6591201f
  420354:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420355:	add    BYTE PTR [esi+0x3a4487e1],al
  42035b:	ret    0xe850
  42035e:	xchg   ebx,eax
  42035f:	mov    edi,0x210a0000
  420364:	or     eax,0xe0fb84
  420369:	add    BYTE PTR [edx+eax*8-0x3],bh
  42036d:	aaa    
  42036e:	(bad)  
  42036f:	in     eax,0xcd
  420371:	jmp    DWORD PTR [ecx]
  420373:	ins    BYTE PTR es:[edi],dx
  420374:	repz cmp ebx,DWORD PTR ds:0x4f661295
  42037b:	loopne 0x4203f1
  42037d:	push   cs
  42037e:	and    DWORD PTR [ebp-0x6adecbe1],edx
  420384:	pop    ds
  420385:	xor    al,0x79
  420387:	or     esi,esi
  420389:	ficom  DWORD PTR [esi]
  42038b:	loope  0x4203e2
  42038d:	call   0x40205e
  420392:	and    DWORD PTR [edi+ebx*1+0x1fa58d20],edx
  420399:	sub    BYTE PTR [ebp+0xa],al
  42039c:	loope  0x42037e
  42039e:	add    BYTE PTR [eax],al
  4203a0:	loopne 0x4203a0
  4203a2:	add    BYTE PTR [edx+ebp*1+0x7a],0x38
  4203a7:	ret    
  4203a8:	pop    edx
  4203a9:	aaa    
  4203aa:	mov    bl,0x0
  4203ac:	push   es
  4203ad:	loope  0x4203af
  4203af:	mov    DWORD PTR [edx],ecx
  4203b1:	(bad)  
  4203b2:	sbb    al,0xe8
  4203b4:	lds    ebx,FWORD PTR [esi+edi*8]
  4203b7:	dec    DWORD PTR [ebp+0x1a]
  4203ba:	cmp    ebx,edi
  4203bc:	sub    bl,ah
  4203be:	xchg   DWORD PTR [edx+ebp*8+0x7c],eax
  4203c2:	dec    ebx
  4203c3:	push   edi
  4203c4:	das    
  4203c5:	push   esp
  4203c6:	fsub   DWORD PTR [ebx]
  4203c8:	cmove  ecx,DWORD PTR [ecx]
  4203cb:	push   eax
  4203cc:	das    
  4203cd:	xchg   edi,edi
  4203cf:	cld    
  4203d0:	cmp    bh,BYTE PTR [ebx-0xe]
  4203d3:	aas    
  4203d4:	das    
  4203d5:	or     al,BYTE PTR [ebp+0x73]
  4203d8:	xor    eax,0x4407ca00
  4203dd:	enter  0x10d8,0x9
  4203e1:	mov    esi,0x142973fc
  4203e6:	fldenv [ebx]
  4203e8:	cmp    ebp,DWORD PTR [ecx+ebx*8]
  4203eb:	and    esp,DWORD PTR [ebx]
  4203ed:	push   edi
  4203ee:	addr16 xchg ecx,eax
  4203f0:	test   DWORD PTR [esi-0x43b8ab01],eax
  4203f6:	pop    ebp
  4203f7:	std    
  4203f8:	push   eax
  4203f9:	retf   
  4203fa:	fsub   DWORD PTR [ebx]
  4203fc:	daa    
  4203fd:	iret   
  4203fe:	imul   edi,eax,0x41
  420401:	(bad)  [ecx+0x73]
  420404:	add    BYTE PTR [eax],al
  420406:	adc    esp,DWORD PTR [edi-0x13cb1c99]
  42040c:	popa   
  42040d:	cld    
  42040e:	mov    ds:0x4e827a9,eax
  420413:	loope  0x420473
  420415:	cld    
  420416:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420417:	dec    ecx
  420418:	and    esi,DWORD PTR [eax]
  42041a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42041b:	inc    ebx
  42041c:	test   DWORD PTR [eax-0x78e7168d],0x458c7969
  420426:	sbb    ecx,DWORD PTR [eax]
  420428:	pop    eax
  420429:	cld    
  42042a:	jnp    0x4203e1
  42042c:	sub    eax,0x57f00f46
  420431:	jae    0x42045a
  420433:	or     bl,bl
  420435:	pop    es
  420436:	das    
  420437:	mov    edx,0x952f67f2
  42043c:	(bad)  
  42043d:	inc    DWORD PTR [edi+0x2f23e9de]
  420443:	ficom  WORD PTR [ecx-0x6d831def]
  420449:	mov    ch,BYTE PTR [ebp-0x16]
  42044c:	rcr    dh,1
  42044e:	xor    al,0xeb
  420450:	daa    
  420451:	fbstp  TBYTE PTR [edi+ebx*2]
  420454:	cld    
  420455:	or     ebp,DWORD PTR [edi]
  420457:	repnz (bad) 
  420459:	mov    edx,gs
  42045b:	aad    0xe6
  42045d:	leave  
  42045e:	sub    BYTE PTR [ebx],dl
  420460:	mov    edx,0x51e5fd60
  420465:	inc    esi
  420466:	ja     0x4204e4
  420468:	push   edx
  420469:	add    al,BYTE PTR [eax]
  42046b:	add    cl,dh
  42046d:	mov    ebp,0x6138c65e
  420472:	sub    edi,edx
  420474:	cs add DWORD PTR gs:[ecx-0x14],ecx
  420479:	rcr    ebp,0x2
  42047c:	das    
  42047d:	fsubp  st(1),st
  42047f:	jmp    0x420449
  420481:	fwait
  420482:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420483:	add    eax,DWORD PTR [edx-0x2f]
  420486:	dec    ebp
  420487:	cmc    
  420488:	clc    
  420489:	fstp   QWORD PTR [esi-0x39]
  42048c:	or     al,0xd2
  42048e:	stos   BYTE PTR es:[edi],al
  42048f:	rol    DWORD PTR [edi-0x1141f399],0xd1
  420496:	jmp    0xd704991e
  42049b:	add    ebx,DWORD PTR [ebx+0x4cd6ead7]
  4204a1:	scas   al,BYTE PTR es:[edi]
  4204a2:	rcl    ecx,1
  4204a4:	pop    es
  4204a5:	jl     0x420481
  4204a7:	cmp    edx,0x7a
  4204aa:	pop    ebp
  4204ab:	adc    DWORD PTR [eax-0x173c54ab],edx
  4204b1:	pop    es
  4204b2:	mov    esp,0xe421e92c
  4204b7:	pop    es
  4204b8:	das    
  4204b9:	pop    edi
  4204ba:	add    BYTE PTR [ebp+0x7],cl
  4204bd:	rol    BYTE PTR [eax],cl
  4204bf:	inc    ecx
  4204c0:	push   edi
  4204c1:	leave  
  4204c2:	add    cl,ch
  4204c4:	popa   
  4204c5:	shl    BYTE PTR [ebx+edi*8],1
  4204c8:	in     al,dx
  4204c9:	jp     0x4204b1
  4204cb:	pop    ebp
  4204cc:	jbe    0x420533
  4204ce:	in     al,dx
  4204cf:	push   0x0
  4204d1:	add    BYTE PTR [edi],bl
  4204d3:	jmp    0x420524
  4204d5:	adc    esi,DWORD PTR [edi+0x10]
  4204d8:	mov    BYTE PTR [ecx+0x77fce80b],ah
  4204de:	lock gs inc ebp
  4204e1:	loope  0x4204d4
  4204e3:	loopne 0x4204e6
  4204e5:	jmp    0xa7cbe316
  4204ea:	xor    BYTE PTR [edi-0x5],bl
  4204ed:	fstp   QWORD PTR ds:0x87e8bf74
  4204f3:	fidivr DWORD PTR [edi+0x42]
  4204f6:	aaa    
  4204f7:	hlt    
  4204f8:	pop    ss
  4204f9:	push   0xbd010638
  4204fe:	sub    al,0xef
  420500:	(bad)  
  420502:	aam    0x4
  420504:	add    DWORD PTR [edx-0x1698ee83],esi
  42050a:	stos   DWORD PTR es:[edi],eax
  42050b:	sbb    BYTE PTR ds:0x5fa201,cl
  420511:	jmp    0xaacfd6ab
  420516:	adc    DWORD PTR [edx],0x8628a78a
  42051c:	push   esp
  42051d:	or     BYTE PTR [ecx+0x7a],dh
  420520:	out    0xe3,eax
  420522:	lahf   
  420523:	sub    ecx,DWORD PTR ds:0xe281bb38
  420529:	lods   eax,DWORD PTR ds:[esi]
  42052a:	pop    ecx
  42052b:	jp     0x4204b6
  42052d:	das    
  42052e:	and    ebx,DWORD PTR [ebp-0x40]
  420531:	push   esp
  420532:	xor    BYTE PTR [eax+eax*8-0x1000000],ch
  420539:	push   ss
  42053a:	cld    
  42053b:	inc    esi
  42053d:	dec    esi
  42053e:	inc    ebp
  42053f:	adc    al,0x36
  420541:	addr16 cld 
  420543:	rcpps  xmm0,XMMWORD PTR [esi-0x5]
  420547:	call   esi
  420549:	test   DWORD PTR [eax],esp
  42054b:	add    dh,al
  42054d:	pop    ebp
  42054e:	cld    
  42054f:	jne    0x42051f
  420551:	add    eax,0x18b9ce8d
  420556:	push   ebp
  420557:	mov    DWORD PTR [eax+0x72],edx
  42055a:	xchg   BYTE PTR [ebp+0x1a],al
  42055d:	sub    eax,0x2d164586
  420562:	imul   ebp,DWORD PTR ds:0xc7039619,0x319d3
  42056c:	xchg   ch,bl
  42056e:	std    
  42056f:	adc    eax,0x3b7646
  420574:	aad    0x14
  420576:	sti    
  420577:	je     0x4204fb
  420579:	fidivr DWORD PTR [edi]
  42057b:	cld    
  42057c:	mov    al,ds:0x167d80e8
  420581:	sub    eax,0x7dd57b6e
  420586:	test   DWORD PTR [ebx+eiz*4],0x2e468349
  42058d:	dec    edi
  42058e:	inc    ebp
  42058f:	and    BYTE PTR [esi-0x7b],dh
  420592:	cli    
  420593:	call   DWORD PTR [esi]
  420595:	pop    ebp
  420596:	cld    
  420597:	jne    0x4205b7
  420599:	add    eax,0xce45
  42059e:	sbb    DWORD PTR [ebx],ebx
  4205a0:	add    DWORD PTR [esi-0x6],0x63
  4205a4:	adc    BYTE PTR ds:[ebx-0x5b],ch
  4205a8:	cld    
  4205a9:	or     DWORD PTR [edi],0x60ffd1b
  4205af:	xchg   edx,eax
  4205b0:	push   es
  4205b1:	mov    ebp,DWORD PTR [edi]
  4205b3:	ret    0x8310
  4205b6:	not    BYTE PTR [edx]
  4205b8:	add    eax,DWORD PTR [edi+0x4587eb71]
  4205be:	pop    es
  4205bf:	or     eax,0x7f5afd01
  4205c4:	addr16 mov edi,0x885d47fb
  4205ca:	out    0x9,eax
  4205cc:	cmp    dh,BYTE PTR [ebx+0x61]
  4205cf:	loope  0x420552
  4205d1:	cmp    BYTE PTR [edi],ch
  4205d3:	(bad)  [ecx+ebp*2+0x7d3684a]
  4205da:	xchg   edi,eax
  4205db:	or     al,0x51
  4205dd:	cld    
  4205de:	cwde   
  4205df:	add    DWORD PTR [ebp+0x73],eax
  4205e2:	push   ebx
  4205e3:	jmp    0x73713d69
  4205e8:	adc    eax,0x87d2e187
  4205ed:	inc    ebp
  4205ee:	aas    
  4205ef:	or     al,0x17
  4205f1:	std    
  4205f2:	cli    
  4205f3:	jle    0x42065c
  4205f5:	sbb    al,0x7b
  4205f7:	daa    
  4205f8:	pop    esi
  4205f9:	xchg   cl,ch
  4205fb:	xchg   esi,eax
  4205fc:	inc    ebp
  4205fd:	inc    ebp
  4205fe:	aaa    
  4205ff:	xchg   DWORD PTR [eax-0x46],ebp
  420602:	add    BYTE PTR [eax],al
  420604:	scas   eax,DWORD PTR es:[edi]
  420605:	xor    DWORD PTR [edi+0x44],ecx
  420608:	cmp    BYTE PTR [edx],al
  42060a:	sub    al,0xfd
  42060c:	inc    eax
  42060d:	mov    edi,0x833b7a81
  420612:	or     al,0x83
  420614:	or     al,0xd0
  420616:	pop    ebp
  420617:	cld    
  420618:	icebp  
  420619:	aas    
  42061a:	idiv   edi
  42061c:	pop    ss
  42061d:	neg    DWORD PTR [esp+edi*8+0x18]
  420621:	push   esi
  420622:	xlat   BYTE PTR ds:[bx]
  420624:	push   ss
  420625:	jo     0x420683
  420627:	push   eax
  420628:	pop    ss
  420629:	aam    0x57
  42062b:	std    
  42062c:	add    bh,bl
  42062e:	shl    esi,1
  420630:	pop    ds
  420631:	ja     0x42060d
  420633:	mov    ch,BYTE PTR [edx+0x1e]
  420636:	call   0x2f0f:0xa7a58602
  42063d:	adc    DWORD PTR [edi+0x6f],ebp
  420640:	scas   eax,DWORD PTR es:[edi]
  420641:	add    cl,0x80
  420644:	(bad)  
  420645:	cli    
  420646:	pop    esi
  420647:	(bad)  
  420648:	sbb    al,0xb
  42064a:	adc    al,0xb5
  42064c:	ret    
  42064d:	scas   al,BYTE PTR es:[edi]
  42064e:	outs   dx,BYTE PTR ds:[esi]
  42064f:	(bad)  
  420650:	sub    BYTE PTR [edi-0x27],dh
  420653:	mov    BYTE PTR [ebp-0x16],ch
  420656:	xchg   edx,eax
  420657:	(bad)  
  420658:	xor    BYTE PTR [ebx-0x62],bl
  42065b:	pop    esp
  42065c:	mov    bh,0x75
  42065e:	je     0x420637
  420660:	dec    esp
  420661:	sub    dh,BYTE PTR [ecx-0x41]
  420664:	dec    esp
  420665:	mov    esi,0xef81
  42066a:	mov    dh,BYTE PTR [edi+0x6a]
  42066d:	xchg   eax,eax
  42066f:	out    0x6d,eax
  420671:	std    
  420672:	cs fsubp st(1),st
  420675:	mov    ch,ch
  420677:	in     eax,0x41
  420679:	loope  0x4206d8
  42067b:	ja     0x4206c7
  42067d:	mov    ebp,esp
  42067f:	shl    edx,0x88
  420682:	jb     0x420692
  420684:	push   edx
  420685:	retf   0xde00
  420688:	jmp    0xd203f317
  42068d:	stos   DWORD PTR es:[edi],eax
  42068e:	inc    ecx
  42068f:	jmp    0x42068d
  420691:	jmp    0x420653
  420693:	(bad)  
  420694:	jmp    0xce13389c
  420699:	icebp  
  42069a:	push   0x4ce766de
  42069f:	shr    cl,cl
  4206a1:	push   0x5
  4206a3:	fucomp st(1)
  4206a5:	add    eax,edi
  4206a7:	fild   DWORD PTR [eax]
  4206a9:	out    0xb0,al
  4206ab:	pop    esp
  4206ac:	add    ecx,ebp
  4206ae:	sub    al,0x5d
  4206b0:	fs or  eax,0xd72e7703
  4206b6:	in     eax,dx
  4206b7:	mov    al,ds:0x77350d44
  4206bc:	cmp    BYTE PTR [ebp+0xf],dl
  4206bf:	cli    
  4206c0:	jne    0x4206f5
  4206c2:	test   al,0x22
  4206c4:	and    eax,0x4efa841
  4206c9:	jmp    0x25cfbdc6
  4206ce:	add    BYTE PTR [eax],al
  4206d0:	nop    DWORD PTR [esi-0x173df0db]
  4206d7:	dec    eax
  4206d8:	adc    al,0xde
  4206da:	add    BYTE PTR [ebp-0xd],ch
  4206dd:	jmp    0x1930:0xba6f5c32
  4206e4:	or     ecx,DWORD PTR [edx+0x792ce977]
  4206ea:	je     0x4206b9
  4206ec:	push   esp
  4206ed:	xchg   BYTE PTR [edi],cl
  4206ef:	jo     0x4206d6
  4206f1:	jns    0x4206ee
  4206f3:	fstp   QWORD PTR [eax]
  4206f5:	scas   al,BYTE PTR es:[edi]
  4206f6:	sti    
  4206f7:	hlt    
  4206f8:	in     al,dx
  4206f9:	int3   
  4206fa:	inc    eax
  4206fb:	jmp    0xfd6721b9
  420700:	mov    bl,0x1a
  420702:	and    eax,0x7436afd9
  420707:	in     al,dx
  420708:	mov    ds:0xd9dd24ea,eax
  42070d:	cli    
  42070e:	sub    BYTE PTR [ebp-0x63ff16e0],0x2d
  420715:	mov    al,ds:0xde26c544
  42071a:	out    0xbf,eax
  42071c:	sbb    dl,ch
  42071e:	lea    ecx,[ebp+0x58c640]
  420724:	ds sbb al,0xd7
  420727:	call   DWORD PTR [ecx]
  420729:	gs lods al,BYTE PTR cs:[esi]
  42072c:	jmp    0x4206cf
  42072e:	sti    
  42072f:	addr16 push ss
  420731:	loop   0x420733
  420733:	mov    al,ds:0x65350000
  420738:	les    edx,FWORD PTR [eax-0x2f]
  42073b:	mov    es,WORD PTR [ebx]
  42073d:	jmp    FWORD PTR [eax+0x728d1f83]
  420743:	mov    esi,0x3bfe5820
  420748:	(bad)  
  420749:	call   DWORD PTR [ecx-0x290004ac]
  42074f:	popa   
  420750:	push   eax
  420751:	push   0xffffff91
  420753:	les    edx,FWORD PTR fs:[eax-0x6f]
  420757:	mov    es,WORD PTR [ebx]
  420759:	(bad)  
  42075a:	js     0x4206df
  42075c:	and    eax,0x28be428d
  420761:	pop    eax
  420762:	scas   al,BYTE PTR es:[edi]
  420763:	pop    edi
  420764:	(bad)  
  420765:	push   DWORD PTR [ecx+0x1dff692c]
  42076b:	and    BYTE PTR [edi+edi*8-0x75],cl
  42076f:	jmp    0x2457de71
  420774:	std    
  420775:	mov    edi,0x40b706
  42077a:	mov    ecx,0x64a40f18
  42077f:	mov    eax,ds:0xd5727ffb
  420784:	or     al,BYTE PTR [eax]
  420786:	popa   
  420787:	cmc    
  420788:	jp     0x42078a
  42078a:	inc    esi
  42078b:	loope  0x420716
  42078d:	jne    0x4207dd
  42078f:	or     DWORD PTR [ebx],edx
  420791:	icebp  
  420792:	adc    DWORD PTR [eax],ebx
  420794:	cmp    ebx,eax
  420796:	fwait
  420797:	jecxz  0x4207eb
  420799:	call   0xa9d079e
  42079e:	std    
  42079f:	jmp    FWORD PTR [edi]
  4207a1:	nop
  4207a2:	inc    edx
  4207a3:	jae    0x420739
  4207a5:	add    BYTE PTR [eax-0x62],dl
  4207a8:	mov    bh,0xbc
  4207aa:	ret    0x85ff
  4207ad:	ins    DWORD PTR es:[edi],dx
  4207ae:	es std 
  4207b0:	xor    DWORD PTR [edi],0xffffffef
  4207b3:	mov    BYTE PTR [ebx+0x37],ch
  4207b6:	jmp    0x42079f
  4207b8:	inc    ebx
  4207b9:	mov    ebx,0x5ece0004
  4207be:	ss inc eax
  4207c0:	das    
  4207c1:	mov    eax,ss
  4207c3:	add    eax,0xf7bf9f47
  4207c8:	fstp   DWORD PTR [ebx-0x380e6861]
  4207ce:	add    al,0x81
  4207d0:	push   ebx
  4207d1:	test   edi,esi
  4207d3:	dec    DWORD PTR [edi+0x2f40370e]
  4207d9:	or     cl,ah
  4207db:	add    eax,0x979e870f
  4207e0:	mov    edi,eax
  4207e2:	add    al,0x87
  4207e4:	add    edi,DWORD PTR [ebp-0xd]
  4207e7:	sahf   
  4207e8:	mov    bh,0x3c
  4207ea:	(bad)  
  4207ed:	ret    0x7820
  4207f0:	mov    dh,0xba
  4207f2:	dec    BYTE PTR [edi]
  4207f4:	into   
  4207f5:	push   cs
  4207f6:	aaa    
  4207f7:	inc    eax
  4207f8:	das    
  4207f9:	lock enter 0xf323,0xed
  4207fe:	enter  0x5,0x0
  420802:	inc    ebx
  420803:	data16 jl 0x4207e3
  420806:	in     al,dx
  420807:	xchg   BYTE PTR [ebx+ecx*2+0x4b869713],cl
  42080e:	sub    ebx,ebx
  420810:	ins    DWORD PTR es:[edi],dx
  420811:	pop    ds
  420812:	dec    eax
  420813:	xor    bl,BYTE PTR [ebx]
  420815:	js     0x4207cb
  420817:	cli    
  420818:	and    BYTE PTR [eax+0x3e9de2f],al
  42081e:	inc    edi
  42081f:	(bad)  
  420820:	fiadd  WORD PTR [ebx]
  420822:	das    
  420823:	pop    edi
  420824:	xchg   ebp,eax
  420825:	pop    ds
  420826:	aas    
  420827:	ficom  WORD PTR [ebp-0x3214e5f6]
  42082d:	repz or BYTE PTR [eax],cl
  420830:	das    
  420831:	pop    ecx
  420832:	or     ecx,DWORD PTR [ebx+esi*8]
  420835:	out    dx,al
  420836:	aam    0xd0
  420838:	test   eax,0xa2da0603
  42083d:	adc    edx,0x1f
  420840:	jmp    0x5cff:0xf1ba6c51
  420847:	or     ebx,DWORD PTR [edi-0x41]
  42084a:	or     al,0xfa
  42084c:	outs   dx,BYTE PTR ds:[esi]
  42084d:	(bad)  
  42084e:	and    BYTE PTR [ebp-0x18],ah
  420851:	mov    WORD PTR [edx+edi*4+0x41],gs
  420855:	lea    esi,[ebp-0x36]
  420858:	adc    cl,BYTE PTR [ebx-0x60038b47]
  42085e:	push   ds
  42085f:	push   ds
  420860:	jmp    0xcd:0x81e61d8c
  420867:	add    BYTE PTR [eax+0x6e1c8a73],dl
  42086d:	jmp    0xfccaba61
  420872:	jns    0x4208cc
  420874:	mov    esi,DWORD PTR [edi+0x6721cfa6]
  42087a:	jns    0x42081e
  42087c:	mov    al,ds:0x603a694
  420881:	ins    BYTE PTR es:[edi],dx
  420882:	adc    DWORD PTR [ecx-0x24],ebx
  420885:	frstpm(287 only) 
  420887:	imul   ebp,DWORD PTR [ebx+ebp*2+0x1aa7584b],0xe
  42088f:	loopne 0x420838
  420891:	loope  0x4208f4
  420893:	cmp    edi,ebp
  420895:	fld    QWORD PTR [eax]
  420897:	pusha  
  420898:	and    cl,0xc
  42089b:	xchg   esi,eax
  42089c:	xlat   BYTE PTR ds:[ebx]
  42089d:	iret   
  42089e:	lods   al,BYTE PTR ds:[esi]
  42089f:	sti    
  4208a0:	ins    BYTE PTR es:[edi],dx
  4208a1:	jae    0x42082f
  4208a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208a4:	dec    eax
  4208a5:	push   ds
  4208a6:	jmp    0x1204aab
  4208ab:	(bad)  
  4208ac:	fdivr  DWORD PTR [esi+0x15d6a614]
  4208b2:	mov    BYTE PTR [ecx+eax*8],al
  4208b5:	pushf  
  4208b6:	adc    cl,ch
  4208b8:	shl    DWORD PTR [ebp-0x14],1
  4208bb:	add    DWORD PTR [edi+0x74],ebp
  4208be:	cli    
  4208bf:	out    0xaf,al
  4208c1:	xor    dh,BYTE PTR [ecx+ebp*1-0x67]
  4208c5:	lods   eax,DWORD PTR ds:[esi]
  4208c6:	repnz adc dh,bh
  4208c9:	loop   0x42093f
  4208cb:	out    dx,al
  4208cc:	add    BYTE PTR [eax],al
  4208ce:	cmp    ebp,edi
  4208d0:	or     al,0x3d
  4208d2:	aad    0xfa
  4208d4:	add    cl,ch
  4208d6:	sub    al,0x3e
  4208d8:	sti    
  4208d9:	cmp    al,0xbb
  4208db:	jno    0x420952
  4208dd:	frstor [ecx-0x10]
  4208e0:	or     BYTE PTR [esi+0x2915eebe],ah
  4208e6:	xor    ebx,DWORD PTR [ebx+0x75]
  4208e9:	stc    
  4208ea:	mov    bl,0xef
  4208ec:	or     al,0x5c
  4208ee:	outs   dx,BYTE PTR ds:[esi]
  4208ef:	retf   0x7450
  4208f2:	outs   dx,BYTE PTR ds:[esi]
  4208f3:	into   
  4208f4:	push   eax
  4208f5:	pop    ss
  4208f6:	loopne 0x4208e7
  4208f8:	or     BYTE PTR [edx+0x6c507af3],bh
  4208fe:	loopne 0x420971
  420900:	pop    edx
  420901:	push   0xffffffd3
  420903:	jno    0x42097a
  420905:	out    0xa7,al
  420907:	jno    0x42092e
  420909:	imul   ebx,DWORD PTR [esi-0x4e],0xceeeac00
  420910:	add    BYTE PTR [eax],al
  420912:	mov    bl,0x67
  420914:	out    0xe8,eax
  420916:	xchg   cl,bl
  420918:	std    
  420919:	call   edx
  42091b:	sbb    DWORD PTR [eax+0x40],esi
  42091e:	mov    al,ds:0x9339f2cf
  420923:	outs   dx,BYTE PTR ds:[esi]
  420924:	outs   dx,DWORD PTR ds:[esi]
  420925:	pop    ds
  420926:	jg     0x865e7d33
  42092c:	sti    
  42092d:	inc    DWORD PTR [esi]
  42092f:	ds cld 
  420931:	jne    0x420933
  420933:	add    dh,dh
  420935:	or     BYTE PTR [edi+0xc],ch
  420938:	or     DWORD PTR [edi+0x39e3ff03],ecx
  42093e:	push   cs
  42093f:	inc    eax
  420940:	push   es
  420941:	arpl   WORD PTR [esi+0x10],bp
  420944:	jg     0x4208d4
  420946:	pop    es
  420947:	lea    edx,[ebx]
  420949:	jb     0x420996
  42094b:	lea    edx,[ebx]
  42094d:	outs   dx,BYTE PTR ds:[esi]
  42094e:	dec    ebx
  42094f:	push   esi
  420950:	jmp    0x9f750ce3
  420955:	add    eax,0x889fcf3
  42095a:	pop    esi
  42095b:	cmp    DWORD PTR [esi+0x8],0x6f
  42095f:	pop    es
  420960:	sub    ecx,DWORD PTR [ecx]
  420962:	pop    ds
  420963:	test   al,0xb3
  420965:	popf   
  420966:	sti    
  420967:	pop    esp
  420968:	aam    0x81
  42096a:	sti    
  42096b:	push   esp
  42096c:	or     eax,0xbee480f9
  420971:	pop    esp
  420972:	out    0x2c,eax
  420974:	xor    BYTE PTR [edx],al
  420976:	adc    al,BYTE PTR [ecx]
  420978:	or     DWORD PTR [eax],ecx
  42097a:	add    al,0x82
  42097d:	mov    ?,WORD PTR [eax]
  42097f:	imul   BYTE PTR [edx+eax*8]
  420982:	xchg   DWORD PTR [edx+eiz*1-0x1a],eax
  420986:	xor    esi,DWORD PTR [ebp+0x5a]
  420989:	mov    cs,WORD PTR [esi]
  42098b:	push   esi
  42098c:	das    
  42098d:	aaa    
  42098e:	push   edx
  42098f:	adc    bh,bh
  420991:	push   0xc3adffbf
  420996:	add    eax,ebp
  420998:	add    BYTE PTR [eax],al
  42099a:	repz fimul DWORD PTR [eax+ebp*1]
  42099e:	das    
  42099f:	xchg   edi,edi
  4209a1:	call   0xc12c9a2
  4209a6:	(bad)  
  4209a8:	lods   al,BYTE PTR ds:[esi]
  4209a9:	cmc    
  4209aa:	sub    eax,edx
  4209ac:	sbb    al,0x74
  4209ae:	dec    ebx
  4209af:	jae    0x42097c
  4209b1:	and    edx,DWORD PTR [esi+0x4b]
  4209b4:	sbb    edx,DWORD PTR [eax]
  4209b6:	fwait
  4209b7:	jns    0x4209a0
  4209b9:	dec    DWORD PTR [eax]
  4209bb:	xchg   DWORD PTR [edi-0x85c8404],ebx
  4209c1:	cld    
  4209c2:	sbb    DWORD PTR [ebx+0x6f7afcf7],0x54
  4209c9:	adc    ah,BYTE PTR [ebx+0x6a]
  4209cc:	mov    edi,0x2112b7ff
  4209d1:	adc    BYTE PTR [esi-0x5debdef6],ah
  4209d7:	ret    0x2020
  4209da:	pop    edi
  4209db:	add    al,cl
  4209dd:	and    ecx,DWORD PTR [edi]
  4209df:	xlat   BYTE PTR ds:[ebx]
  4209e0:	stos   BYTE PTR es:[edi],al
  4209e1:	cld    
  4209e2:	inc    edx
  4209e3:	jg     0x4209f5
  4209e5:	mov    edi,0xa8fc58cb
  4209eb:	add    ebx,DWORD PTR [ebp-0x4]
  4209ee:	sbb    ch,BYTE PTR [ebx-0x7e]
  4209f1:	inc    ebx
  4209f2:	push   ebx
  4209f3:	jg     0x420a5d
  4209f5:	add    BYTE PTR [ecx+eax*8+0x7f02fd08],ah
  4209fc:	push   esp
  4209fd:	jb     0x4209ff
  4209ff:	add    BYTE PTR [ebx],bl
  420a01:	call   0x2119d1
  420a06:	retf   
  420a07:	pop    es
  420a08:	jo     0x4209e7
  420a0a:	cld    
  420a0b:	jae    0x420a4a
  420a0d:	push   ds
  420a0e:	jmp    0x3c41:0xb47ab7b5
  420a15:	fidiv  WORD PTR [eax+ecx*4+0x5c4d5c44]
  420a1c:	scas   eax,DWORD PTR es:[edi]
  420a1d:	or     DWORD PTR ds:0xea0248ae,0x29593b54
  420a27:	sar    BYTE PTR [ebp+0x50ea1bac],1
  420a2d:	popa   
  420a2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a2f:	pop    ds
  420a30:	xor    esi,DWORD PTR [ebp-0x3663f864]
  420a36:	mov    bl,0xb3
  420a38:	adc    ecx,edx
  420a3a:	cdq    
  420a3b:	in     eax,dx
  420a3c:	dec    eax
  420a3d:	fisub  WORD PTR [esi+0x40]
  420a40:	xor    al,0x97
  420a42:	lods   eax,DWORD PTR ds:[esi]
  420a43:	pop    ds
  420a44:	daa    
  420a45:	(bad)  
  420a46:	jmp    0x16c5394e
  420a4b:	push   ebp
  420a4c:	pop    ebp
  420a4d:	loop   0x420a88
  420a4f:	ins    BYTE PTR es:[edi],dx
  420a50:	sub    al,0x68
  420a52:	rcl    DWORD PTR [ecx+eiz*1-0x16],cl
  420a56:	add    eax,0xba5cf0
  420a5b:	ror    BYTE PTR [esi+ecx*8],1
  420a5e:	xor    eax,0xe9de48f6
  420a63:	add    eax,DWORD PTR [eax]
  420a65:	add    BYTE PTR [edi+0x1720356f],cl
  420a6b:	outs   dx,DWORD PTR ds:[esi]
  420a6c:	sbb    eax,0x146f4720
  420a71:	or     al,0xa2
  420a73:	leave  
  420a74:	inc    ebp
  420a75:	out    dx,al
  420a76:	pop    eax
  420a77:	fisub  WORD PTR [eax-0x31]
  420a7a:	dec    esp
  420a7b:	into   
  420a7c:	jo     0x420a4d
  420a7e:	dec    esp
  420a7f:	retf   0xbf6c
  420a82:	dec    esp
  420a83:	mov    esi,0x1bb01900
  420a88:	and    eax,0xfc09bcc9
  420a8d:	fdiv   QWORD PTR [ebp*4+0x762251c9]
  420a94:	sti    
  420a95:	push   esi
  420a96:	scas   eax,DWORD PTR es:[edi]
  420a97:	addr16 sti 
  420a99:	aam    0x58
  420a9b:	fs inc esp
  420a9d:	or     eax,0x71ff853b
  420aa2:	and    ebx,0x7234bcfb
  420aa8:	jne    0x420a7f
  420aaa:	fucomi st,st(3)
  420aac:	adc    BYTE PTR [ecx+0x1e08ec83],bh
  420ab2:	adc    DWORD PTR [ebx+0x15],ecx
  420ab5:	test   eax,0x488102c
  420aba:	fstp   DWORD PTR [esp+edx*1-0x77f74017]
  420ac1:	jne    0x420ae3
  420ac3:	loop   0x420b17
  420ac5:	test   BYTE PTR [edx],0x4f
  420ac8:	adc    eax,0x2c0000a9
  420acd:	gs fcom st(1)
  420ad0:	jo     0x420b44
  420ad2:	cli    
  420ad3:	fidiv  WORD PTR [edi-0x6bf28bd2]
  420ad9:	xor    DWORD PTR [eax+0x526ee8af],eax
  420adf:	mov    dh,0x3a
  420ae2:	push   cs
  420ae3:	sub    DWORD PTR [ebx],ebp
  420ae5:	xchg   ah,bl
  420ae7:	les    ebx,FWORD PTR [edx+esi*2+0x7f]
  420aeb:	mov    cl,0x5c
  420aed:	jmp    0x420af4
  420aef:	xchg   ecx,eax
  420af0:	sbb    eax,DWORD PTR [ecx+0x71e49efb]
  420af6:	adc    eax,0xaea145
  420afb:	frstor cs:[ebp-0x41]
  420aff:	add    BYTE PTR [ebp+0x18],cl
  420b02:	add    BYTE PTR [eax],al
  420b04:	sbb    ebp,edi
  420b06:	out    0xe8,eax
  420b08:	adc    cl,BYTE PTR [ebx]
  420b0a:	(bad)  
  420b0b:	dec    DWORD PTR [edx]
  420b0d:	sbb    dh,BYTE PTR [eax+0x29]
  420b10:	inc    ebp
  420b11:	sbb    dh,BYTE PTR [ebx]
  420b13:	inc    ebp
  420b14:	push   edx
  420b15:	xchg   BYTE PTR [ecx],ah
  420b17:	cmp    DWORD PTR [ebx+0x3f1d756a],ecx
  420b1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b1e:	pcmpeqb mm1,QWORD PTR [esi+0x2a]
  420b22:	dec    ebx
  420b23:	(bad)  
  420b24:	jnp    0x420b8c
  420b26:	xchg   BYTE PTR [ebp+0x4e],al
  420b29:	or     ebp,DWORD PTR [edi+0x10]
  420b2c:	add    DWORD PTR [ebp+0xe807],edx
  420b32:	fisttp WORD PTR [eax]
  420b34:	std    
  420b35:	call   DWORD PTR [ebp+0x975fd1a]
  420b3b:	das    
  420b3c:	cld    
  420b3d:	and    eax,0x3b6762
  420b42:	shl    DWORD PTR [ebx],cl
  420b44:	or     al,0x0
  420b46:	fwait
  420b47:	in     al,dx
  420b48:	out    0x56,eax
  420b4a:	cs sub eax,0xed01fefc
  420b50:	outs   dx,BYTE PTR ds:[esi]
  420b51:	or     al,0x5a
  420b53:	and    DWORD PTR [eax+0x29],esi
  420b56:	dec    ebx
  420b57:	pop    es
  420b58:	jo     0x420b7f
  420b5a:	dec    ebp
  420b5b:	daa    
  420b5c:	jne    0x8d5fa0f6
  420b62:	sbb    BYTE PTR [edx-0x78],bh
  420b65:	or     BYTE PTR [ebx-0x56],cl
  420b68:	outs   dx,DWORD PTR ds:[esi]
  420b69:	adc    eax,0x6a0f8681
  420b6e:	(bad)  
  420b6f:	xor    DWORD PTR [edx+0x52],ecx
  420b72:	and    edx,DWORD PTR [esi+0x88be803]
  420b78:	std    
  420b79:	jmp    FWORD PTR [edi]
  420b7b:	clc    
  420b7c:	inc    edi
  420b7d:	cld    
  420b7e:	sbb    ah,BYTE PTR [edi+0x4e]
  420b81:	jb     0x420ba6
  420b83:	fmul   DWORD PTR fs:[edi]
  420b86:	fldpi  
  420b88:	fadd   DWORD PTR [edi]
  420b8a:	js     0x420b16
  420b8c:	adc    DWORD PTR [edx],0xffffffef
  420b8f:	jbe    0x420b42
  420b91:	pop    edx
  420b92:	ins    DWORD PTR es:[edi],dx
  420b93:	call   DWORD PTR [bp+si+0x0]
  420b97:	add    BYTE PTR [ebx+ebx*1+0x1559fd58],dh
  420b9e:	dec    edi
  420b9f:	sub    DWORD PTR [edi-0x6d],0xffffffec
  420ba3:	cld    
  420ba4:	ret    0x808a
  420ba7:	inc    edx
  420ba8:	aaa    
  420ba9:	xchg   ecx,eax
  420baa:	add    eax,0xdd82c2fd
  420baf:	inc    esi
  420bb1:	jbe    0x420c0a
  420bb3:	enter  0xc421,0x4e
  420bb7:	and    BYTE PTR [edi],0xcc
  420bba:	fadd   DWORD PTR [edx+edi*2]
  420bbd:	aam    0x28
  420bbf:	mov    BYTE PTR [edx],bh
  420bc1:	aaa    
  420bc2:	call   FWORD PTR [edx-0x13]
  420bc5:	xchg   bh,bh
  420bc7:	push   edx
  420bc8:	mov    ah,0xda
  420bca:	push   edi
  420bcb:	int    0xf9
  420bcd:	je     0x420c20
  420bcf:	sub    edi,0xfffffff2
  420bd2:	lds    edx,FWORD PTR [ebp-0x80]
  420bd5:	inc    esp
  420bd6:	test   ch,bl
  420bd8:	ins    BYTE PTR es:[edi],dx
  420bd9:	ja     0x420b93
  420bdb:	cld    
  420bdc:	inc    edx
  420bdd:	pop    ebx
  420bde:	repnz aas 
  420be0:	das    
  420be1:	add    ah,dl
  420be3:	pop    es
  420be4:	xlat   BYTE PTR ds:[ebx]
  420be5:	xchg   edi,eax
  420be6:	pusha  
  420be7:	cld    
  420be8:	shl    bh,0x4c
  420beb:	cld    
  420bec:	inc    ebx
  420bed:	xchg   ebp,eax
  420bee:	fdivr  QWORD PTR [edi-0x67fd87f9]
  420bf4:	mov    ebp,ebx
  420bf6:	es add al,0xae
  420bf9:	in     eax,0xf5
  420bfb:	add    al,BYTE PTR [eax]
  420bfd:	add    BYTE PTR [ebx*8+0x6120bc5e],bl
  420c04:	adc    BYTE PTR [eax],cl
  420c06:	das    
  420c07:	bnd jmp 0x420c86
  420c0a:	inc    eax
  420c0b:	ret    0xc770
  420c0e:	xor    BYTE PTR ds:0xcfc4f773,dl
  420c14:	sub    DWORD PTR [edx+ecx*1],eax
  420c17:	or     al,0xc5
  420c19:	push   eax
  420c1a:	or     eax,0x58c3f49e
  420c1f:	test   ch,dl
  420c21:	push   ecx
  420c22:	push   edx
  420c23:	ins    BYTE PTR es:[edi],dx
  420c24:	gs inc esp
  420c26:	mov    esp,0xcc06ed6
  420c2b:	(bad)  
  420c2c:	push   ecx
  420c2d:	cwde   
  420c2e:	dec    edx
  420c2f:	ins    BYTE PTR es:[edi],dx
  420c30:	xor    dl,BYTE PTR [ecx+0xd]
  420c33:	out    0xd4,al
  420c35:	ret    
  420c36:	sub    BYTE PTR [ebp+ecx*4+0x656c2251],al
  420c3d:	inc    esp
  420c3e:	pushf  
  420c3f:	aad    0x5e
  420c41:	ror    BYTE PTR [esi+edx*8+0x1],0x70
  420c46:	sbb    ch,BYTE PTR [edx+eax*1+0x51]
  420c4a:	dec    ebp
  420c4b:	pop    edx
  420c4c:	aam    0xc3
  420c4e:	clc    
  420c4f:	adc    bl,BYTE PTR [edi+0x60]
  420c52:	scas   eax,DWORD PTR es:[edi]
  420c53:	jmp    0xd39e0f35
  420c58:	data16 into 
  420c5a:	cmp    al,0xe2
  420c5c:	push   esp
  420c5d:	repz shr BYTE PTR [ecx+0x51d3],1
  420c64:	shl    DWORD PTR [edx-0x57],cl
  420c67:	xlat   BYTE PTR ds:[ebx]
  420c68:	xor    BYTE PTR [edi+0x34],dl
  420c6b:	hlt    
  420c6c:	enter  0xcbf4,0x50
  420c70:	mov    ebx,0x9b60109
  420c75:	xor    dl,BYTE PTR ds:0x880f3329
  420c7b:	xchg   ebp,eax
  420c7c:	and    esp,DWORD PTR [eax]
  420c7e:	or     eax,0x1d6f868
  420c83:	jmp    0xe9fd20b4
  420c88:	xor    bl,dh
  420c8a:	add    BYTE PTR [esi],bl
  420c8c:	xor    al,0xae
  420c8e:	outs   dx,BYTE PTR ds:[esi]
  420c8f:	add    BYTE PTR [ebp-0x441e8a96],dh
  420c95:	or     ebx,0x7a
  420c98:	(bad)  
  420c99:	imul   edi,DWORD PTR [edi-0x1c],0x56f6b5c
  420ca0:	(bad)  
  420ca1:	out    dx,eax
  420ca2:	adc    BYTE PTR [edx-0x77],ch
  420ca5:	outs   dx,DWORD PTR ds:[esi]
  420ca6:	cli    
  420ca7:	dec    esi
  420ca8:	fild   QWORD PTR [edx-0x74]
  420cab:	ins    BYTE PTR es:[edi],dx
  420cac:	fsubr  DWORD PTR [eax-0x5]
  420caf:	ds aam 0x58
  420cb2:	inc    eax
  420cb3:	jmp    0x631461e4
  420cb8:	imul   ebx,DWORD PTR [eax-0x7b],0x1d
  420cbc:	jle    0x420d28
  420cbe:	sti    
  420cbf:	adc    DWORD PTR [esi-0x54],esp
  420cc2:	add    cl,ch
  420cc4:	lods   eax,DWORD PTR ds:[esi]
  420cc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420cc6:	inc    esp
  420cc7:	test   al,0x0
  420cc9:	add    dh,al
  420ccb:	pop    ds
  420ccc:	jbe    0x420c92
  420cce:	in     al,0x72
  420cd0:	add    ecx,ebp
  420cd2:	sub    al,0x57
  420cd4:	outs   dx,DWORD PTR ds:[esi]
  420cd5:	loope  0x420c8d
  420cd7:	hlt    
  420cd8:	(bad)  
  420cd9:	pop    ebx
  420cda:	stc    
  420cdb:	loop   0x420d35
  420cdd:	shl    ecx,1
  420cdf:	mov    eax,ds:0x2055e900
  420ce4:	or     DWORD PTR [edx],edx
  420ce6:	in     al,dx
  420ce7:	fidiv  WORD PTR [ebp+0x8]
  420cea:	mov    ebx,0xd6000170
  420cef:	fisub  WORD PTR [edx+0x39]
  420cf2:	rcl    BYTE PTR [ebx-0x1bcef0ec],1
  420cf8:	mov    DWORD PTR [ebp-0x76],ecx
  420cfb:	add    BYTE PTR cs:[ecx],0x1b
  420cff:	lahf   
  420d00:	or     DWORD PTR [eax+0x55],edx
  420d03:	or     ah,BYTE PTR [eax-0xd]
  420d06:	mov    eax,0xad01ac1a
  420d0b:	fild   QWORD PTR [esi]
  420d0d:	ror    BYTE PTR [ecx+0x3c],0xc2
  420d11:	ret    0xde8a
  420d14:	dec    edi
  420d15:	mov    ebp,DWORD PTR [edx+0x5708e760]
  420d1b:	fiadd  WORD PTR [eax]
  420d1d:	push   esi
  420d1e:	mov    eax,ds:0x4601f55b
  420d23:	fimul  WORD PTR [ecx+0x6622cdf0]
  420d29:	cmp    edi,esi
  420d2b:	xchg   ebx,eax
  420d2c:	push   DWORD PTR [ecx]
  420d2e:	add    BYTE PTR [eax],al
  420d30:	push   ss
  420d31:	pop    es
  420d32:	xadd   DWORD PTR gs:[esi],ebx
  420d36:	dec    esp
  420d37:	push   DWORD PTR [ebx+0x66]
  420d3a:	xchg   BYTE PTR [esi+0xc],dl
  420d3d:	xor    bl,ah
  420d3f:	sub    eax,DWORD PTR [ebp+0x18]
  420d42:	std    
  420d43:	push   0x6
  420d45:	vxorps xmm0,xmm0,XMMWORD PTR ds:0x88e84c20
  420d4d:	stos   DWORD PTR es:[edi],eax
  420d4e:	std    
  420d4f:	call   FWORD PTR [esi+0x6fffb15]
  420d55:	pop    edi
  420d56:	inc    ebp
  420d57:	or     BYTE PTR [esi+0x4f660187],dl
  420d5d:	jp     0x420ce5
  420d5f:	jle    0x420d33
  420d61:	xor    eax,0xa31206c4
  420d66:	push   ebp
  420d67:	inc    ebp
  420d68:	das    
  420d69:	lahf   
  420d6a:	test   ebp,eax
  420d6c:	das    
  420d6d:	ja     0x420ded
  420d6f:	jp     0x420da4
  420d71:	ja     0x420d46
  420d73:	and    bh,BYTE PTR [eax-0x757eff4e]
  420d79:	das    
  420d7a:	dec    ebp
  420d7b:	cld    
  420d7c:	test   al,0x77
  420d7e:	add    BYTE PTR [edx-0x3b5be59],0x87
  420d85:	aaa    
  420d86:	or     al,BYTE PTR [eax]
  420d88:	das    
  420d89:	or     eax,0x772f0200
  420d8e:	add    BYTE PTR [edx-0x3b59e79],0x0
  420d95:	add    BYTE PTR [edi+0x2f000ae9],al
  420d9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d9c:	add    al,0x5d
  420d9e:	or     DWORD PTR [esi],edi
  420da0:	inc    ecx
  420da1:	pop    es
  420da2:	das    
  420da3:	sub    dh,BYTE PTR [esi-0x15]
  420da6:	scas   al,BYTE PTR es:[edi]
  420da7:	sbb    ebp,esp
  420da9:	add    BYTE PTR [edi],ch
  420dab:	ja     0x420d5b
  420dad:	push   ebp
  420dae:	scas   al,BYTE PTR es:[edi]
  420daf:	push   cs
  420db0:	add    BYTE PTR [edx],al
  420db2:	das    
  420db3:	ja     0x420d86
  420db5:	ins    DWORD PTR es:[edi],dx
  420db6:	stos   BYTE PTR es:[edi],al
  420db7:	sti    
  420db8:	idiv   edi
  420dba:	xor    dh,BYTE PTR [eax-0x1e077b6]
  420dc0:	shl    bl,0x64
  420dc3:	mov    dh,0xd2
  420dc5:	pop    ebp
  420dc6:	lods   al,BYTE PTR ds:[esi]
  420dc7:	dec    ecx
  420dc8:	idiv   edi
  420dca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420dcb:	js     0x420e49
  420dcd:	inc    edx
  420dce:	pop    es
  420dcf:	push   ebx
  420dd0:	and    eax,0x7e6f7afd
  420dd5:	mov    ds:0xfc4d6907,al
  420dda:	das    
  420ddb:	add    cl,BYTE PTR [ecx+0x4d77e9e7]
  420de1:	out    0x4a,eax
  420de3:	fisub  WORD PTR [edx]
  420de5:	add    al,0x2f
  420de7:	hlt    
  420de8:	in     eax,0xa9
  420dea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420deb:	sbb    dl,dl
  420ded:	jg     0x420d9c
  420def:	jne    0x420dbc
  420df1:	dec    ebp
  420df2:	ret    
  420df3:	jne    0x420e53
  420df5:	les    edi,FWORD PTR [eax+0xcf6868]
  420dfb:	add    BYTE PTR [eax-0x1249d6df],bh
  420e01:	repnz retf 
  420e03:	dec    esp
  420e04:	sbb    eax,0x88c774d6
  420e09:	or     eax,0x81b57f34
  420e0e:	xchg   ebp,eax
  420e0f:	dec    ebp
  420e10:	mov    esp,DWORD PTR [eax-0x217fabdc]
  420e16:	jmp    0x7c42951e
  420e1b:	dec    ebp
  420e1c:	jae    0x420e7f
  420e1e:	test   eax,0xaf203ad7
  420e23:	(bad)  
  420e24:	pop    esp
  420e25:	out    dx,eax
  420e26:	xchg   DWORD PTR [ecx],edx
  420e28:	outs   dx,DWORD PTR ds:[esi]
  420e29:	pop    es
  420e2a:	mov    edi,0xe9e16e3a
  420e2f:	js     0x420ea3
  420e31:	je     0x420e86
  420e33:	mov    bh,0xb7
  420e35:	jns    0x420e9d
  420e37:	pusha  
  420e38:	and    al,0x55
  420e3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e3b:	(bad)  
  420e3c:	ficom  DWORD PTR [esi+esi*4+0xf]
  420e40:	mov    dh,0x12
  420e42:	int3   
  420e43:	pop    ss
  420e44:	jp     0x420e99
  420e46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e47:	sti    
  420e48:	inc    edi
  420e49:	arpl   si,sp
  420e4b:	inc    esp
  420e4c:	pusha  
  420e4d:	movzx  edi,WORD PTR [eax-0x9]
  420e51:	push   ebp
  420e52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e53:	push   edi
  420e54:	or     BYTE PTR [edx+0x592f03da],bl
  420e5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e5b:	dec    ebx
  420e5c:	pusha  
  420e5d:	hlt    
  420e5e:	add    BYTE PTR [ecx-0x13850000],ch
  420e64:	or     al,0xee
  420e66:	stc    
  420e67:	(bad)  
  420e69:	cld    
  420e6a:	mov    al,bl
  420e6c:	inc    eax
  420e6d:	jmp    0x17b6361b
  420e72:	push   ds
  420e73:	lahf   
  420e74:	mov    BYTE PTR [edx+esi*2],bl
  420e77:	mov    al,0x4d
  420e79:	cmc    
  420e7a:	loop   0x420e44
  420e7c:	or     esi,DWORD PTR [edi+0x79]
  420e7f:	push   0xffffff87
  420e81:	sub    al,0xab
  420e83:	push   ebp
  420e84:	push   esp
  420e85:	aam    0x9c
  420e87:	mov    bh,0x14
  420e89:	icebp  
  420e8a:	jmp    0x46a:0x6169fc1b
  420e91:	sbb    al,0x37
  420e93:	mov    al,ds:0xa72c8e45
  420e98:	aaa    
  420e99:	xor    al,0x2f
  420e9b:	in     al,dx
  420e9c:	fld    TBYTE PTR [ecx+ebp*2+0x6f]
  420ea0:	push   eax
  420ea1:	jbe    0x420e24
  420ea3:	outs   dx,DWORD PTR ds:[esi]
  420ea4:	sti    
  420ea5:	hlt    
  420ea6:	pusha  
  420ea7:	push   0x75
  420ea9:	icebp  
  420eaa:	jmp    0x420e77
  420eac:	pop    esp
  420ead:	clc    
  420eae:	ins    BYTE PTR es:[edi],dx
  420eaf:	addr16 cli 
  420eb1:	fsubr  st(0),st
  420eb3:	push   ebp
  420eb4:	iret   
  420eb5:	mov    dh,0xf3
  420eb7:	jmp    0xd1e8:0x95b7fd1a
  420ebe:	cmp    esp,DWORD PTR [edi-0x5]
  420ec1:	xchg   esi,eax
  420ec2:	ficomp DWORD PTR [edi+0xddbe]
  420ec8:	sub    al,0x10
  420eca:	push   esp
  420ecb:	xchg   ebx,eax
  420ecc:	xor    BYTE PTR [ebx+0x70],dl
  420ecf:	test   eax,0x297269c3
  420ed4:	fs sti 
  420ed6:	icebp  
  420ed7:	(bad)  
  420ed9:	push   0x72
  420edb:	add    BYTE PTR [esi],ah
  420edd:	add    ebx,DWORD PTR [eax-0xf]
  420ee0:	lock adc bh,ch
  420ee3:	ss cs xor dl,ch
  420ee7:	(bad)  
  420ee8:	shl    esi,1
  420eea:	lds    eax,FWORD PTR [ecx+eiz*1]
  420eed:	(bad)  
  420eee:	loopne 0x420f4f
  420ef0:	adc    BYTE PTR [edi],bl
  420ef2:	push   ecx
  420ef3:	(bad)  
  420ef4:	fstp   DWORD PTR [edx-0x3029bf77]
  420efa:	fst    DWORD PTR [esi+0x3f]
  420efd:	xor    eax,DWORD PTR [ebx]
  420eff:	mov    DWORD PTR [ecx],edx
  420f01:	les    ax,DWORD PTR [edi-0x66]
  420f05:	push   0xffffff86
  420f07:	inc    eax
  420f08:	xchg   esi,eax
  420f09:	xor    BYTE PTR [ebx],0x8a
  420f0c:	inc    esi
  420f0d:	loop   0x420e96
  420f0f:	inc    edi
  420f10:	call   0x1b33:0xf1c5ce2
  420f17:	mov    DWORD PTR [ecx-0x42],edx
  420f1a:	sbb    DWORD PTR [edi+0x5e],0x2a
  420f1e:	lds    eax,FWORD PTR [edi+0x56]
  420f21:	adc    edi,ebp
  420f23:	adc    eax,0x3b6fb2
  420f28:	add    ecx,DWORD PTR [ebx+0xb827]
  420f2e:	mov    esi,0xfe0000e1
  420f33:	mov    ebp,0xe8e1ffd2
  420f38:	je     0x420f5e
  420f3a:	nop
  420f3b:	jmp    0x9b4a379c
  420f40:	pop    ss
  420f41:	add    DWORD PTR [ecx],ecx
  420f43:	fwait
  420f44:	sbb    edi,DWORD PTR [edx]
  420f46:	push   ss
  420f47:	loop   0x420f49
  420f49:	mov    ecx,DWORD PTR [ecx+0x35]
  420f4c:	rcl    BYTE PTR [edi-0x63],0x13
  420f50:	in     al,0x13
  420f52:	push   es
  420f53:	loop   0x420f55
  420f55:	imul   BYTE PTR [edi]
  420f57:	xor    ebx,DWORD PTR [ebx]
  420f59:	or     BYTE PTR [esi],ch
  420f5b:	dec    ebx
  420f5c:	add    DWORD PTR [ebp+0x7],edx
  420f5f:	mov    esi,0xf0f0fd54
  420f64:	aas    
  420f65:	pop    esp
  420f66:	in     eax,dx
  420f67:	jae    0x420f68
  420f69:	push   edx
  420f6a:	mov    ah,0x63
  420f6c:	mov    ah,0x4e
  420f6e:	lods   al,BYTE PTR ds:[esi]
  420f6f:	adc    cl,BYTE PTR [ecx-0x1]
  420f72:	lods   eax,DWORD PTR ds:[esi]
  420f73:	add    al,0xf9
  420f75:	jmp    DWORD PTR [edx+0x34]
  420f78:	(bad)  
  420f79:	aas    
  420f7a:	mov    ch,0xb7
  420f7c:	add    al,0x76
  420f7e:	pop    esp
  420f7f:	enter  0x447b,0x27
  420f83:	lock mov eax,0x7763bafb
  420f89:	mov    BYTE PTR [ecx],ch
  420f8b:	push   0x6ef7362a
  420f90:	rcr    DWORD PTR [ecx],1
  420f92:	add    BYTE PTR [eax],al
  420f94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f95:	mov    ds:0x72ef884c,al
  420f9a:	add    al,BYTE PTR [ebx-0x79]
  420f9d:	pop    edi
  420f9e:	sbb    ch,bh
  420fa0:	js     0x420ffe
  420fa2:	jp     0x420fa9
  420fa4:	lods   al,BYTE PTR ds:[esi]
  420fa5:	mov    edx,0x2fec5f4c
  420faa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420fab:	pop    es
  420fac:	fstp   QWORD PTR [ebp+0x7a]
  420faf:	xor    eax,0x13cc05b2
  420fb4:	push   eax
  420fb5:	(bad)  
  420fb6:	sti    
  420fb7:	les    esi,FWORD PTR [ecx]
  420fb9:	cmp    edi,DWORD PTR [ebp+0x3f]
  420fbc:	das    
  420fbd:	pop    ds
  420fbe:	test   edi,ebp
  420fc0:	cmp    DWORD PTR [edx+esi*4],ebx
  420fc3:	out    0xb4,eax
  420fc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fc6:	dec    ecx
  420fc7:	cld    
  420fc8:	sub    BYTE PTR [edx],dh
  420fca:	inc    ebx
  420fcb:	mov    BYTE PTR [edx-0x4d],ch
  420fce:	or     al,BYTE PTR [ebp+0x2b]
  420fd1:	ficom  WORD PTR [edi-0x6dac8866]
  420fd7:	out    0x10,eax
  420fd9:	push   ebx
  420fda:	jecxz  0x421026
  420fdc:	add    esp,DWORD PTR [ebp-0x6e]
  420fdf:	sti    
  420fe0:	repz sbb al,0xee
  420fe3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420fe5:	sbb    eax,0x6e805bea
  420fea:	repz dec ecx
  420fec:	jmp    0x420fca
  420fee:	mov    ebp,0x43de1878
  420ff3:	cmp    ebp,edi
  420ff5:	or     ch,BYTE PTR [edi+0x58]
  420ff8:	add    BYTE PTR [eax],al
  420ffa:	jns    0x420ff4
  420ffc:	in     eax,0x5b
  420ffe:	or     al,0x6e
  421000:	retf   
  421001:	dec    ecx
  421002:	lods   eax,DWORD PTR ds:[esi]
  421003:	popf   
  421004:	cmp    eax,0xe5fdaff5
  421009:	add    ebp,DWORD PTR [esi+0x6a03e1fd]
  42100f:	fstp   QWORD PTR ds:0x70de587e
  421015:	mov    edi,0x84e57894
  42101a:	or     eax,0x584e962
  42101f:	(bad)  
  421020:	jmp    0x6f400cd6
  421025:	shl    DWORD PTR [ebx+edx*2],0xe5
  421029:	jle    0x421057
  42102b:	fsubp  st(1),st
  42102d:	add    esi,DWORD PTR [esp+ebp*8+0x4f50b3e1]
  421034:	push   edx
  421035:	dec    edx
  421036:	push   ebx
  421037:	pop    ecx
  421038:	sub    eax,edx
  42103a:	adc    al,0x59
  42103c:	jecxz  0x42101b
  42103e:	sub    al,0x53
  421040:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421041:	inc    edi
  421042:	call   0xa639ba9f
  421047:	fldcw  WORD PTR [eax-0x4c]
  42104a:	sub    ecx,edx
  42104c:	add    BYTE PTR [ebp+0x6200a41e],ah
  421052:	out    dx,al
  421053:	xlat   BYTE PTR ds:[ebx]
  421054:	xchg   edi,esi
  421056:	stos   DWORD PTR es:[edi],eax
  421057:	lahf   
  421058:	or     al,0x6c
  42105a:	pop    es
  42105b:	in     eax,0x40
  42105d:	pusha  
  42105e:	add    BYTE PTR [eax],al
  421060:	out    dx,al
  421061:	xlat   BYTE PTR ds:[ebx]
  421062:	test   DWORD PTR [eax],esp
  421064:	(bad)  
  421066:	mov    al,0xe8
  421068:	push   ebx
  421069:	ret    0xa487
  42106c:	jo     0x4210c4
  42106e:	lock ins BYTE PTR es:[edi],dx
  421070:	imul   ebp,edi,0x14
  421073:	out    dx,al
  421074:	(bad)  
  421075:	ffreep st(3)
  421077:	jmp    0xe9826614
  42107c:	fs fwait
  42107e:	jmp    0x421057
  421080:	ja     0x42108b
  421082:	jmp    0xfba36832
  421087:	sti    
  421088:	ins    BYTE PTR es:[edi],dx
  421089:	add    edx,ecx
  42108b:	stos   BYTE PTR es:[edi],al
  42108c:	fst    DWORD PTR [esi-0x14]
  42108f:	push   0xfffffff8
  421091:	test   BYTE PTR [edi+0x530e971c],0x3e
  421098:	repz fstp DWORD PTR [edi+0x455bf79e]
  42109f:	xchg   ecx,eax
  4210a0:	add    DWORD PTR [ebx],esp
  4210a2:	or     ebx,DWORD PTR [edi+0x3]
  4210a5:	fs sti 
  4210a7:	jmp    0x6a4b309f
  4210ac:	je     0x421085
  4210ae:	add    esi,esp
  4210b0:	stos   BYTE PTR es:[edi],al
  4210b1:	pop    ecx
  4210b2:	add    ecx,ebp
  4210b4:	sub    al,0x5d
  4210b6:	sub    DWORD PTR gs:[ebp*4+0x47716cc0],0x136282a7
  4210c2:	test   al,0x5c
  4210c4:	add    BYTE PTR [eax],al
  4210c6:	jns    0x421103
  4210c8:	data16 add BYTE PTR [esi+0x2f],al
  4210cc:	jecxz  0x4210d1
  4210ce:	call   0xc56b:0x528300e0
  4210d5:	inc    ebp
  4210d6:	dec    ecx
  4210d7:	fistp  QWORD PTR [ecx+0xdf06ff]
  4210dd:	jmp    DWORD PTR [ebx+0x1e45886a]
  4210e3:	pop    es
  4210e4:	mov    al,ds:0xd1628d5
  4210e9:	mov    dh,0xbb
  4210eb:	adc    eax,0xf75b7487
  4210f0:	add    BYTE PTR [esi],0x53
  4210f3:	pop    ds
  4210f4:	or     eax,0xdf8a84
  4210f9:	add    BYTE PTR [ebp-0x63],bl
  4210fc:	repz lea ebp,[edx-0x1b]
  421100:	mov    ds:0x82209603,eax
  421105:	pop    es
  421106:	(bad)  
  421107:	retf   
  421108:	inc    ebx
  421109:	je     0x42112f
  42110b:	and    DWORD PTR [esi+0x31],ebp
  42110e:	jmp    0x46580ee6
  421113:	ins    DWORD PTR es:[edi],dx
  421114:	cmp    eax,DWORD PTR [eax]
  421116:	or     eax,0x86b70c64
  42111b:	mov    edi,0x6ca950c1
  421120:	add    edx,DWORD PTR ds:0xe89da56
  421126:	gs pop ds
  421128:	mov    WORD PTR [eax],ax
  42112b:	add    BYTE PTR [edi-0x5f00edf9],al
  421131:	sbb    ecx,DWORD PTR [edi]
  421133:	push   eax
  421134:	sbb    DWORD PTR [esi+0x1b4eeafb],0x36
  42113b:	call   DWORD PTR [ebx+0x66]
  42113e:	push   cs
  42113f:	inc    eax
  421140:	push   esi
  421141:	pop    esi
  421142:	jbe    0x421143
  421144:	das    
  421145:	jne    0x421112
  421147:	push   ds
  421148:	cmp    bl,cl
  42114a:	inc    ebx
  42114b:	jb     0x421170
  42114d:	sbb    al,0xb
  42114f:	std    
  421150:	inc    edx
  421151:	dec    ebx
  421152:	in     eax,dx
  421153:	aas    
  421154:	das    
  421155:	hlt    
  421156:	inc    eax
  421157:	or     esi,DWORD PTR [edx+0x100ad1b7]
  42115d:	adc    BYTE PTR [edi-0x15],0x19
  421161:	ret    0x8043
  421164:	dec    ecx
  421165:	ja     0x4211e5
  421167:	and    al,0x2f
  421169:	rol    ecx,1
  42116b:	cld    
  42116c:	scas   eax,DWORD PTR es:[edi]
  42116d:	pop    edx
  42116e:	inc    edx
  42116f:	add    edi,DWORD PTR [eax]
  421171:	cmc    
  421172:	(bad)  
  421173:	cld    
  421174:	loopne 0x4211de
  421176:	js     0x4211ea
  421178:	mov    bh,0xb8
  42117a:	ror    DWORD PTR [ebx],0x2b
  42117d:	ja     0x42117e
  42117f:	push   DWORD PTR [ecx+edi*2-0x54c44080]
  421186:	jns    0x421205
  421188:	(bad)  
  421189:	sti    
  42118a:	mov    ds:0x564658df,al
  42118f:	push   eax
  421190:	add    BYTE PTR [eax],al
  421192:	dec    DWORD PTR [eax*1+0x4ae04e8]
  421199:	add    BYTE PTR [esi+0x6f8254b8],ah
  42119f:	ret    0x1efe
  4211a2:	xor    ah,ch
  4211a4:	add    eax,0x26f26c89
  4211a9:	jbe    0x4211cf
  4211ab:	cld    
  4211ac:	xor    ah,bh
  4211ae:	jne    0x4211c6
  4211b0:	inc    ebx
  4211b1:	cld    
  4211b2:	mov    dl,0x37
  4211b4:	(bad)  
  4211b5:	adc    ebx,DWORD PTR [esi+edi*1]
  4211b8:	cmp    BYTE PTR [edi-0x7f226127],0x13
  4211bf:	fidiv  WORD PTR [edx-0x57273c3a]
  4211c5:	or     dh,BYTE PTR [edi-0x1e]
  4211c8:	pop    ebp
  4211c9:	pop    edx
  4211ca:	push   ss
  4211cb:	push   ebx
  4211cc:	retf   
  4211cd:	mov    bl,0xdb
  4211cf:	or     al,0x43
  4211d1:	or     eax,0x33c7797
  4211d6:	das    
  4211d7:	jbe    0x4211a8
  4211d9:	int3   
  4211da:	sbb    BYTE PTR [ecx+0x60],ah
  4211dd:	mov    ebp,0xd0295b50
  4211e2:	cs mov edi,0xd9ea82e2
  4211e8:	adc    bh,BYTE PTR [eax+0x7a73eb24]
  4211ee:	ins    DWORD PTR es:[edi],dx
  4211ef:	(bad)  
  4211f0:	outs   dx,BYTE PTR ds:[esi]
  4211f1:	mov    ebx,0xfba95534
  4211f6:	add    BYTE PTR [eax],al
  4211f8:	mov    bh,0xe1
  4211fa:	popa   
  4211fb:	inc    edi
  4211fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211fd:	sbb    dl,ah
  4211ff:	ret    
  421200:	inc    edi
  421201:	sahf   
  421202:	dec    ecx
  421203:	ja     0x421248
  421205:	fidivr DWORD PTR [ecx]
  421207:	pop    esp
  421208:	div    DWORD PTR [edx-0x2d]
  42120b:	inc    ebp
  42120c:	lods   al,BYTE PTR ds:[esi]
  42120d:	popf   
  42120e:	push   ebp
  42120f:	push   ss
  421210:	inc    ebp
  421211:	(bad)  
  421212:	je     0x4211d3
  421214:	ror    BYTE PTR ds:0xf528bd6f,0xa9
  42121b:	in     al,0x2f
  42121d:	fcomp  DWORD PTR [ecx]
  42121f:	inc    ebp
  421220:	cmp    eax,0x88c3fc12
  421225:	push   ebx
  421226:	and    bh,ah
  421228:	mov    bh,0x95
  42122a:	(bad)  
  42122b:	cmp    bl,al
  42122d:	pop    esp
  42122e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42122f:	clc    
  421230:	das    
  421231:	shl    BYTE PTR [esp+eax*8+0x69],1
  421235:	push   ebp
  421236:	and    bh,ah
  421238:	(bad)  
  42123a:	add    BYTE PTR [ecx],bh
  42123c:	sub    al,0x77
  42123e:	push   es
  42123f:	pop    esp
  421240:	nop
  421241:	dec    eax
  421242:	call   0xfba409ca
  421247:	sbb    ebp,ebx
  421249:	add    DWORD PTR [ebx-0x4e],ebx
  42124c:	cmc    
  42124d:	sahf   
  42124e:	or     cl,ch
  421250:	push   esi
  421251:	les    ebp,FWORD PTR [eax-0x6f]
  421254:	cli    
  421255:	push   ds
  421256:	add    DWORD PTR [ecx-0x6a],edx
  421259:	push   ecx
  42125a:	add    ecx,ebp
  42125c:	add    BYTE PTR [eax],al
  42125e:	scas   eax,DWORD PTR es:[edi]
  42125f:	cld    
  421260:	cld    
  421261:	jmp    0xea230f15
  421266:	xchg   DWORD PTR [ecx+ecx*1],ebx
  421269:	jb     0x421223
  42126b:	jg     0x4212a4
  42126d:	mov    eax,ds:0x277fd300
  421272:	sub    ebx,esi
  421274:	add    BYTE PTR [edx-0xd],dh
  421277:	xlat   BYTE PTR ds:[ebx]
  421278:	(bad)  
  421279:	in     eax,0x64
  42127b:	pop    eax
  42127c:	inc    ebp
  42127d:	sbb    eax,0x7489683e
  421282:	or     BYTE PTR [esi+0x8],dl
  421285:	jb     0x42120c
  421287:	xlat   BYTE PTR ds:[ebx]
  421288:	mov    DWORD PTR [ebx+edx*1],ebp
  42128b:	pop    esp
  42128c:	leave  
  42128d:	out    0x38,al
  42128f:	dec    eax
  421290:	add    cl,ch
  421292:	sub    al,0xa5
  421294:	jne    0x421237
  421296:	mov    ds:0x2ce9805e,eax
  42129b:	fiadd  WORD PTR [edi+0x606977e9]
  4212a1:	jmp    0x5eea:0x2cc2db7c
  4212a8:	jnp    0x4212c6
  4212aa:	loop   0x421286
  4212ac:	outs   dx,DWORD PTR ds:[esi]
  4212ad:	xor    al,0x82
  4212af:	sub    DWORD PTR [ebp-0x7a],edi
  4212b2:	test   DWORD PTR [edx],0xe08600bb
  4212b8:	fdivr  DWORD PTR [esi-0x7c]
  4212bb:	sbb    dh,BYTE PTR [eax]
  4212bd:	mov    esi,0x8b0b8fe1
  4212c2:	add    BYTE PTR [eax],al
  4212c4:	or     esp,DWORD PTR [esi-0x1d]
  4212c7:	call   0x9016:0x85fd18e0
  4212ce:	cmp    BYTE PTR [ebx-0x7ad4a67e],cl
  4212d4:	std    
  4212d5:	cwde   
  4212d6:	adc    bh,bh
  4212d8:	jmp    0x886a:0xdbff1b58
  4212df:	inc    ebp
  4212e0:	adc    al,BYTE PTR [ebx]
  4212e2:	jge    0x4212d2
  4212e4:	inc    eax
  4212e5:	sbb    bh,BYTE PTR [edi-0x40]
  4212e8:	stos   DWORD PTR es:[edi],eax
  4212e9:	mov    edx,0x2b605c89
  4212ee:	jle    0x4212cb
  4212f0:	mov    al,ds:0x6074fc6d
  4212f5:	fwait
  4212f6:	cld    
  4212f7:	jne    0x4212ff
  4212f9:	out    0x3e,al
  4212fb:	or     al,0x3e
  4212fd:	jg     0x4212ec
  4212ff:	(bad)  
  421300:	loope  0x4212e2
  421302:	mov    ebx,0x3f18cb75
  421307:	out    0xdd,eax
  421309:	clc    
  42130a:	jnp    0x421389
  42130c:	jmp    0x4d5187e6
  421311:	and    eax,0x254f46d7
  421316:	xlat   BYTE PTR ds:[ebx]
  421317:	mov    ebx,DWORD PTR [ebx+0x6]
  42131a:	jecxz  0x421393
  42131c:	loope  0x421338
  42131e:	std    
  42131f:	mov    ecx,DWORD PTR [ebx+0x2]
  421322:	xor    eax,DWORD PTR [ebp-0x5e]
  421325:	and    al,0x3
  421327:	add    DWORD PTR [eax],0x0
  42132a:	inc    ebx
  42132b:	push   ds
  42132c:	std    
  42132d:	mov    al,0x97
  42132f:	scas   eax,DWORD PTR es:[edi]
  421330:	push   cs
  421331:	jmp    FWORD PTR [edi]
  421333:	mov    dl,0x24
  421335:	out    0x3d,al
  421337:	push   eax
  421338:	aas    
  421339:	cld    
  42133a:	sbb    al,0x35
  42133c:	(bad)  
  42133d:	shl    BYTE PTR [ecx+ebx*8-0x17157fd4],0x3f
  421345:	xor    DWORD PTR [edi+0x5c],ebp
  421348:	mov    ch,BYTE PTR cs:[esi]
  42134b:	jne    0x421392
  42134d:	or     ebp,DWORD PTR [edi]
  42134f:	sub    cl,BYTE PTR [edx-0x2ee75315]
  421355:	or     dl,0x10
  421358:	add    eax,0x3e7c8151
  42135d:	jb     0x421392
  42135f:	retf   0xfbc9
  421362:	jg     0x421303
  421364:	xchg   esp,eax
  421365:	or     al,0x2f
  421367:	inc    edi
  421368:	cmp    DWORD PTR [edi-0xd334c8],0x0
  42136f:	dec    eax
  421370:	nop
  421371:	inc    edx
  421372:	sti    
  421373:	xchg   edi,eax
  421374:	daa    
  421375:	cmp    BYTE PTR [edi],bl
  421377:	inc    edi
  421378:	inc    DWORD PTR [edx-0x2b77ab11]
  42137e:	das    
  42137f:	inc    edi
  421380:	inc    DWORD PTR [edi+0x42904472]
  421386:	xchg   edi,eax
  421387:	ja     0x421319
  421389:	inc    edx
  42138a:	retf   
  42138b:	pop    ss
  42138c:	sub    eax,0x1f000098
  421391:	inc    edi
  421392:	inc    DWORD PTR [edx-0x6677bb11]
  421398:	das    
  421399:	inc    edi
  42139a:	dec    DWORD PTR [eax+0x428a76fa]
  4213a0:	jnp    0x421368
  4213a2:	inc    esp
  4213a3:	call   FWORD PTR [ecx+0x7f803e94]
  4213a9:	mov    WORD PTR [eax+0x6ade38bf],cs
  4213af:	xchg   BYTE PTR [eax+0x30b5e95d],al
  4213b5:	pop    edi
  4213b6:	nop
  4213b7:	add    esi,DWORD PTR [edx+0x7d]
  4213ba:	jmp    0x2cacf579
  4213bf:	inc    eax
  4213c0:	lock inc ebp
  4213c2:	and    DWORD PTR ds:0x436cde2f,edx
  4213c8:	(bad)  
  4213ca:	push   0xffffffb8
  4213cc:	js     0x421414
  4213ce:	shr    DWORD PTR [edi],cl
  4213d0:	inc    edx
  4213d1:	pop    ebp
  4213d2:	outs   dx,BYTE PTR ds:[esi]
  4213d3:	pop    ebx
  4213d4:	lods   eax,DWORD PTR ds:[esi]
  4213d5:	cmp    ebp,ebx
  4213d7:	shl    BYTE PTR [edi+0x1f8e39db],cl
  4213dd:	xchg   esi,eax
  4213de:	jmp    0xff2042f6
  4213e3:	cmp    esp,DWORD PTR [ebp+0x23d431aa]
  4213e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213ea:	and    dl,bl
  4213ec:	bound  ebp,QWORD PTR [ebx-0x54]
  4213ef:	aas    
  4213f0:	jo     0x421438
  4213f2:	inc    edi
  4213f3:	adc    al,0x0
  4213f5:	add    BYTE PTR [edi],ch
  4213f7:	fisubr WORD PTR [ebx+eax*2+0x7d]
  4213fb:	add    eax,0x8e0b8e7
  421400:	test   DWORD PTR [ebx],edi
  421402:	sbb    DWORD PTR [ebx+0x632cc101],esp
  421408:	repnz mov bh,0xfc
  42140b:	or     bh,dh
  42140d:	cmc    
  42140e:	mov    BYTE PTR [esi+0x5c],ah
  421411:	cmp    BYTE PTR [ebp+0x610f541d],ch
  421417:	mov    cl,0xd2
  421419:	mov    bh,0x28
  42141b:	inc    esi
  42141c:	or     al,0x42
  42141e:	stos   DWORD PTR es:[edi],eax
  42141f:	pop    esp
  421420:	jno    0x4213e9
  421422:	xor    esi,DWORD PTR [ecx+0x5b84fbd1]
  421428:	add    BYTE PTR [esi+0x19fc9fa0],dh
  42142e:	pop    ebx
  42142f:	or     DWORD PTR [edx],edx
  421431:	jmp    0xeebf7262
  421436:	sub    al,0xd1
  421438:	adc    DWORD PTR [eax+ebp*2+0x58],esp
  42143c:	push   eax
  42143d:	and    edi,0xa9e900e9
  421443:	pushf  
  421444:	or     esp,DWORD PTR [ebp+0x73]
  421447:	pop    ecx
  421448:	sti    
  421449:	jbe    0x4213f5
  42144b:	xlat   BYTE PTR ds:[ebx]
  42144c:	cld    
  42144d:	jmp    0xaccff7d2
  421452:	add    BYTE PTR [ebp-0x21e1f218],ch
  421458:	add    BYTE PTR [ebx+0x0],ah
  42145b:	add    BYTE PTR [eax-0x17],ch
  42145e:	out    0xf8,eax
  421460:	mov    bl,0xd8
  421462:	cld    
  421463:	jmp    0xa4cff940
  421468:	pop    eax
  421469:	stos   DWORD PTR es:[edi],eax
  42146a:	call   0x1205440
  42146f:	sti    
  421470:	ins    BYTE PTR es:[edi],dx
  421471:	mov    edx,0x1d75c25a
  421476:	or     cl,ch
  421478:	loope  0x4214e0
  42147a:	in     al,dx
  42147b:	push   0x3f
  42147d:	out    0x4f,eax
  42147f:	mov    bh,0x7
  421481:	paddb  mm3,QWORD PTR [esi-0x6a0039f9]
  421488:	mov    ah,dl
  42148a:	push   0x80de2ce9
  42148f:	out    dx,al
  421490:	and    edi,0xd8b5c187
  421496:	clc    
  421497:	jo     0x421512
  421499:	push   edi
  42149a:	sti    
  42149b:	cld    
  42149c:	mov    esp,0xb5e940ed
  4214a1:	mov    al,ds:0x171500f4
  4214a6:	std    
  4214a7:	je     0x42143e
  4214a9:	das    
  4214aa:	xchg   BYTE PTR [ebp-0x2e],al
  4214ad:	das    
  4214ae:	jecxz  0x4214f2
  4214b0:	arpl   di,bx
  4214b2:	add    BYTE PTR [esi+edx*8+0x23ff4194],al
  4214b9:	push   ss
  4214ba:	std    
  4214bb:	adc    eax,0x40f1c6
  4214c0:	add    BYTE PTR [eax],al
  4214c2:	jg     0x421460
  4214c4:	div    DWORD PTR [edi+ebx*2-0x62]
  4214c8:	outs   dx,BYTE PTR ds:[esi]
  4214c9:	cld    
  4214ca:	fpatan 
  4214cc:	fcom   DWORD PTR [edx]
  4214ce:	push   es
  4214cf:	loop   0x421504
  4214d1:	jge    0x421491
  4214d3:	xchg   edx,eax
  4214d4:	add    bh,bh
  4214d6:	arpl   WORD PTR [edi],dx
  4214d8:	std    
  4214d9:	adc    eax,0x40f106
  4214de:	pop    ds
  4214df:	fwait
  4214e0:	out    dx,eax
  4214e1:	je     0x4214ec
  4214e3:	bound  esi,QWORD PTR [esi-0xc]
  4214e6:	imul   edx,DWORD PTR [ebx+0x12e3ff02],0xf14615fd
  4214f0:	inc    eax
  4214f1:	add    BYTE PTR [edi+ebx*4],al
  4214f4:	pop    esp
  4214f5:	pop    esi
  4214f6:	in     eax,dx
  4214f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214f8:	ror    DWORD PTR [eax],0x6
  4214fb:	push   0x40
  4214fd:	and    BYTE PTR [ebp-0x69ed2cac],cl
  421503:	fiadd  WORD PTR [ebx+0x7657da45]
  421509:	cld    
  42150a:	(bad)  
  42150b:	in     al,0xfd
  42150d:	jne    0x4214e9
  42150f:	sbb    dl,dh
  421511:	inc    DWORD PTR [ebx-0x15]
  421514:	push   ebp
  421515:	push   edi
  421516:	pop    esp
  421517:	out    0xfd,al
  421519:	jne    0x4214e9
  42151b:	sbb    cl,BYTE PTR [edi]
  42151d:	fsubr  QWORD PTR [edi]
  42151f:	push   edi
  421520:	mov    edi,0x4101b7ff
  421525:	cmp    BYTE PTR [eax],al
  421527:	add    BYTE PTR [eax+0x18],ch
  42152a:	ins    DWORD PTR es:[edi],dx
  42152b:	cld    
  42152c:	sbb    al,0xe5
  42152e:	aam    0xfc
  421530:	sbb    bh,BYTE PTR ds:0x8b8a2c27
  421536:	cmp    edi,esp
  421538:	cli    
  421539:	add    BYTE PTR [esi-0x786d8729],0x32
  421540:	outs   dx,DWORD PTR ds:[esi]
  421541:	push   esi
  421542:	mov    edi,0x3cea27ff
  421547:	jae    0x421573
  421549:	fs mov ecx,0xfd7258f7
  42154f:	jp     0x4215ac
  421551:	pop    eax
  421552:	push   es
  421553:	or     edx,0x2a733bd0
  421559:	les    edi,FWORD PTR [ecx-0x78edc70d]
  42155f:	rol    BYTE PTR [ecx+ebx*8-0x2e],0x54
  421564:	mov    ah,0xb6
  421566:	cmp    edx,DWORD PTR [edx]
  421568:	mov    esi,DWORD PTR [esi]
  42156a:	mov    edi,0x279fa5ff
  42156f:	xor    DWORD PTR [edi+eax*1-0x3b],ebx
  421573:	ror    BYTE PTR [edi],1
  421575:	ret    
  421576:	inc    ebx
  421577:	jae    0x4215cf
  421579:	imul   ecx,DWORD PTR [edx],0xc2cae6be
  42157f:	adc    DWORD PTR [ecx+0x7f3e45c4],ecx
  421585:	popa   
  421586:	mov    WORD PTR [edi],es
  421588:	loopne 0x4215c4
  42158a:	lahf   
  42158b:	push   cs
  42158c:	add    BYTE PTR [eax],al
  42158e:	outs   dx,DWORD PTR ds:[esi]
  42158f:	inc    edi
  421590:	jle    0x421589
  421592:	sub    al,0xdb
  421594:	in     al,0x80
  421596:	mov    DWORD PTR [ebx-0x4d],0xe1deac1b
  42159d:	add    DWORD PTR [ebx+eiz*8],edi
  4215a0:	and    esi,eax
  4215a2:	and    bl,bl
  4215a4:	idiv   DWORD PTR ds:0xcd5fedf2
  4215aa:	xor    BYTE PTR [esi-0x40],bl
  4215ad:	sbb    DWORD PTR [ebx],ebx
  4215af:	sbb    eax,0xb7f343f7
  4215b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4215b5:	pop    es
  4215b6:	das    
  4215b7:	gs and eax,0x336b34e8
  4215bd:	adc    dh,BYTE PTR [eax-0x1d6f1a5a]
  4215c3:	stc    
  4215c4:	(bad)  
  4215c5:	xor    eax,0x8e19e73
  4215ca:	das    
  4215cb:	fsubp  st(1),st
  4215cd:	cli    
  4215ce:	push   0xffffffd3
  4215d0:	in     al,0x8c
  4215d2:	shl    cl,0x7e
  4215d5:	out    0xb1,al
  4215d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4215d8:	fisttp QWORD PTR [edx+0x5216e5e9]
  4215de:	mul    DWORD PTR [edi]
  4215e0:	aad    0x14
  4215e2:	leave  
  4215e3:	push   ss
  4215e4:	sbb    DWORD PTR [ecx-0x33c63cd],edi
  4215ea:	xchg   ecx,eax
  4215eb:	fdivr  QWORD PTR [ebp-0x18e151f8]
  4215f1:	sub    al,BYTE PTR [eax]
  4215f3:	add    BYTE PTR [ebx],al
  4215f5:	addr16 cdq 
  4215f7:	adc    esi,edx
  4215f9:	popf   
  4215fa:	aad    0x4
  4215fc:	das    
  4215fd:	fsubp  st(1),st
  4215ff:	jae    0x4215fa
  421601:	inc    ebx
  421602:	pop    eax
  421603:	fsub   DWORD PTR [edi-0x1fd899b7]
  421609:	pop    esi
  42160a:	std    
  42160b:	push   cs
  42160c:	sub    eax,0x82d2e9de
  421611:	gs je  0x421623
  421614:	scas   al,BYTE PTR es:[edi]
  421615:	xlat   BYTE PTR ds:[ebx]
  421616:	add    ch,dl
  421618:	sub    al,0xb3
  42161a:	mov    DWORD PTR [ebp+0x6075e4c8],ebx
  421620:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421621:	mov    ds:0xde2b1c20,al
  421626:	mov    al,ds:0x3dc9e3e9
  42162b:	jmp    0x3b42f45d
  421630:	retf   
  421631:	arpl   WORD PTR [edx+0xd],bx
  421634:	jle    0x42168f
  421636:	adc    eax,0x9e1e89
  42163b:	sbb    al,BYTE PTR [edx-0x34]
  42163e:	or     BYTE PTR [edx+0x3b],dh
  421641:	fs inc esp
  421643:	lds    edx,FWORD PTR [esi+ebp*4]
  421646:	call   0xfb9d026e
  42164b:	fs jmp 0x42161a
  42164e:	inc    esi
  42164f:	jb     0x42163b
  421651:	inc    eax
  421652:	jb     0x4216b0
  421654:	adc    bl,BYTE PTR [edx+0x7f]
  421657:	jno    0x421659
  421659:	add    BYTE PTR [eax],dh
  42165b:	int    0x1a
  42165d:	fidivr WORD PTR [ebx-0x495f75f]
  421663:	shl    BYTE PTR [esp+eiz*8-0x51],1
  421667:	push   eax
  421668:	pop    eax
  421669:	fdivr  QWORD PTR [ebx+eiz*2]
  42166c:	inc    esp
  42166d:	add    eax,0xbdfbae3b
  421672:	adc    al,ch
  421674:	call   0xfb9c85c6
  421679:	inc    edx
  42167a:	and    esp,DWORD PTR [ebx+0x44]
  42167d:	add    eax,0x9dfbae1b
  421682:	adc    al,ch
  421684:	xchg   DWORD PTR [edi],esp
  421686:	inc    ebx
  421687:	push   esi
  421688:	std    
  421689:	push   ss
  42168a:	sub    bl,BYTE PTR [ebx-0x40]
  42168d:	xchg   ebp,eax
  42168e:	xor    BYTE PTR [ebp+0x3f8a008d],ch
  421694:	(bad)  
  421696:	mov    dh,0x3
  421698:	jecxz  0x4216e2
  42169a:	rcr    DWORD PTR [edx],0x5d
  42169d:	pop    esi
  42169e:	push   es
  42169f:	fistp  DWORD PTR [ecx-0x75]
  4216a2:	jmp    0x4216dc
  4216a4:	ror    DWORD PTR [eax],0xc6
  4216a7:	data16 aas 
  4216a9:	and    al,0x9a
  4216ab:	xor    DWORD PTR [ebx+ecx*4+0x7f],edx
  4216af:	push   0xe91d0474
  4216b4:	xchg   DWORD PTR [edi+eax*1],edx
  4216b7:	inc    sp
  4216b9:	or     BYTE PTR [ebx],dl
  4216bb:	fistp  QWORD PTR [ebx+0x3b]
  4216be:	add    BYTE PTR [eax],al
  4216c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4216c1:	lea    ecx,[eax]
  4216c3:	lea    edi,[esi+eiz*8]
  4216c6:	dec    esi
  4216c7:	call   0x401c69
  4216cc:	lods   eax,DWORD PTR ds:[esi]
  4216cd:	(bad)  [esi]
  4216cf:	ror    dl,0x9a
  4216d2:	outs   dx,DWORD PTR ds:[esi]
  4216d3:	cmpxchg DWORD PTR [edx],ebp
  4216d6:	add    ecx,DWORD PTR [ebx-0x1f4415f7]
  4216dc:	push   esp
  4216dd:	sub    esp,ebx
  4216df:	push   ss
  4216e0:	scas   eax,DWORD PTR es:[edi]
  4216e1:	sbb    ebp,edi
  4216e3:	pop    edi
  4216e4:	jo     0x421683
  4216e6:	(bad)  
  4216e7:	(bad)  
  4216e8:	mov    ebp,0x3d041f1e
  4216ed:	sbb    eax,DWORD PTR [ebx]
  4216ef:	jae    0x421718
  4216f1:	xor    DWORD PTR [edx-0x2463e1bf],eax
  4216f7:	add    dh,BYTE PTR [esi+0x6e046a67]
  4216fd:	adc    esp,esp
  4216ff:	(bad)  
  421700:	push   ecx
  421701:	cmp    ecx,eax
  421703:	add    al,0x6
  421705:	xor    DWORD PTR [eax-0x6eee0f],ecx
  42170b:	out    0x2f,eax
  42170d:	addr16 es std 
  421710:	loopne 0x4216d5
  421712:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421713:	add    ebp,DWORD PTR [edi]
  421715:	les    esp,FWORD PTR [ebp+0x40772f07]
  42171b:	mov    BYTE PTR [ebx+0x29],ah
  42171e:	add    edx,DWORD PTR [esi+0x54]
  421721:	repz lahf 
  421723:	push   esp
  421724:	add    BYTE PTR [eax],al
  421726:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421727:	cmp    eax,0xac27448b
  42172c:	inc    esp
  42172d:	pop    edi
  42172e:	mov    edx,0x318900b7
  421733:	inc    esp
  421734:	push   esp
  421735:	add    BYTE PTR [esi-0x25],ch
  421738:	push   ebp
  421739:	jno    0x42175f
  42173b:	retf   0x5fca
  42173e:	fstp   QWORD PTR [esi+ebp*4]
  421741:	jmp    0x16d9ec7
  421746:	cmp    eax,0xfbbf8085
  42174b:	inc    edi
  42174c:	ss dec esp
  42174e:	aaa    
  42174f:	mov    esp,0x67d407b7
  421754:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421755:	push   esp
  421756:	inc    edi
  421757:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421758:	sub    al,0xfd
  42175a:	push   eax
  42175b:	not    esi
  42175d:	shl    DWORD PTR [ebx],0x45
  421760:	mov    al,BYTE PTR [ebx+0xb]
  421763:	inc    ecx
  421764:	cli    
  421765:	ds daa 
  421767:	xor    al,0x14
  421769:	xchg   esi,ebp
  42176b:	dec    esp
  42176c:	stos   BYTE PTR es:[edi],al
  42176d:	mov    edi,0x8acf958f
  421772:	sahf   
  421773:	cmp    esp,DWORD PTR [edi]
  421775:	add    BYTE PTR [edi],0x9e
  421778:	aaa    
  421779:	pop    ebp
  42177a:	in     eax,dx
  42177b:	cmp    edi,edi
  42177d:	push   edx
  42177e:	mov    ah,0x9b
  421780:	sub    ebx,0x1f
  421783:	mov    dl,0xc1
  421785:	out    dx,eax
  421786:	pop    edi
  421787:	fisub  WORD PTR [edx]
  421789:	adc    DWORD PTR [eax],eax
  42178b:	add    BYTE PTR [ebx-0x10],ah
  42178e:	test   eax,0x199bb403
  421793:	aam    0xc8
  421795:	loopne 0x421780
  421797:	add    ebp,DWORD PTR [edi]
  421799:	daa    
  42179a:	shl    DWORD PTR es:[edi-0x4a2b67be],1
  4217a1:	fwait
  4217a2:	icebp  
  4217a3:	rol    ebx,cl
  4217a5:	retf   
  4217a6:	loope  0x4217e2
  4217a8:	sbb    eax,0xb0c3f8c6
  4217ad:	push   0xa3b73c24
  4217b2:	aad    0xad
  4217b4:	mov    al,ds:0xd983e9da
  4217b9:	or     BYTE PTR [edx-0x7c],dl
  4217bc:	mov    edx,0x7984e976
  4217c1:	jmp    DWORD PTR [ebx]
  4217c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217c4:	sub    BYTE PTR [edi+0x67d22c19],0xe8
  4217cb:	add    ebp,DWORD PTR [eax+0x20]
  4217ce:	in     eax,0x3
  4217d0:	cld    
  4217d1:	push   0xe5ed8e85
  4217d6:	data16 daa 
  4217d8:	and    al,0xb1
  4217da:	sbb    edx,ebx
  4217dc:	(bad)  
  4217dd:	in     eax,0x6c
  4217df:	mov    al,0x44
  4217e1:	mov    ecx,0x54690481
  4217e6:	push   0xfffffff6
  4217e8:	cmp    ebx,DWORD PTR [ecx]
  4217ea:	sub    esi,DWORD PTR [eax+0x37dd16cf]
  4217f0:	add    BYTE PTR [eax],al
  4217f2:	stos   BYTE PTR es:[edi],al
  4217f3:	mov    ecx,0xc828c05e
  4217f8:	loop   0x421782
  4217fa:	popf   
  4217fb:	push   esi
  4217fc:	sahf   
  4217fd:	sub    ecx,DWORD PTR [eax]
  4217ff:	sbb    edi,DWORD PTR [ebx]
  421801:	cmp    al,BYTE PTR [edi+0x1d]
  421804:	add    BYTE PTR [eax+ebp*8-0x351eba9b],bh
  42180b:	fisttp DWORD PTR [ebp-0x1748db64]
  421811:	aaa    
  421812:	outs   dx,DWORD PTR ds:[esi]
  421813:	push   ebx
  421814:	sti    
  421815:	shr    BYTE PTR [ebp-0x30],cl
  421818:	ss (bad) 
  42181a:	out    dx,eax
  42181b:	pop    eax
  42181c:	jmp    FWORD PTR ds:0x72bf05b3
  421822:	fs and al,0xf7
  421825:	(bad)  
  421826:	stc    
  421827:	loope  0x4217d4
  421829:	je     0x42181f
  42182b:	fnsave [ebp-0xf]
  42182e:	test   eax,0x6638fe9a
  421833:	ror    BYTE PTR [esi+edx*8],1
  421836:	xor    dh,al
  421838:	adc    ch,BYTE PTR [ecx]
  42183a:	xor    ebp,DWORD PTR [ebp-0x2f1493a7]
  421840:	sbb    DWORD PTR [edi],edi
  421842:	mov    BYTE PTR [edi+0x77],ah
  421845:	call   0xccbf69d
  42184a:	aaa    
  42184b:	or     al,0x7e
  42184d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42184e:	mov    dh,0x1b
  421850:	data16 mov al,ds:0x325ab18b
  421856:	add    BYTE PTR [eax],al
  421858:	hlt    
  421859:	push   ds
  42185a:	or     cl,ch
  42185c:	daa    
  42185d:	mov    WORD PTR [edx],es
  42185f:	neg    dh
  421861:	mov    ds:0xdd13a801,al
  421866:	jmp    DWORD PTR [edi+0x3534612]
  42186c:	not    BYTE PTR [ecx+0x72]
  42186f:	std    
  421870:	imul   edi
  421872:	sar    bl,1
  421874:	in     al,dx
  421875:	push   ebx
  421876:	xchg   BYTE PTR [edi-0x1e479ac4],ch
  42187c:	sub    eax,0x9d0000de
  421881:	es pop ds
  421883:	or     BYTE PTR [edi+0x62],bh
  421886:	pop    es
  421887:	add    DWORD PTR [esi],edx
  421889:	loopne 0x421814
  42188b:	inc    esi
  42188c:	(bad)  
  42188d:	jge    0x421817
  42188f:	dec    esp
  421890:	loop   0x42186d
  421892:	sbb    DWORD PTR [eax+0xe0de],0x4d
  421899:	and    BYTE PTR [ebx],cl
  42189b:	dec    di
  42189d:	bound  ecx,QWORD PTR [ebx]
  42189f:	add    esi,eax
  4218a1:	(bad)  
  4218a3:	jbe    0x421887
  4218a5:	push   ss
  4218a6:	movaps xmm4,xmm7
  4218a9:	pop    ds
  4218aa:	sti    
  4218ab:	push   esi
  4218ac:	leave  
  4218ad:	in     al,0xec
  4218af:	adc    al,0x6
  4218b1:	fidivr DWORD PTR [edi-0x40]
  4218b4:	add    bh,al
  4218b6:	push   ecx
  4218b7:	xor    edx,esi
  4218b9:	das    
  4218ba:	arpl   WORD PTR ds:0xdf840000,dx
  4218c0:	add    BYTE PTR [edi+0x2e],dl
  4218c3:	push   ds
  4218c4:	pop    ds
  4218c5:	and    BYTE PTR [edx-0x1e],al
  4218c8:	std    
  4218c9:	adc    eax,0x40e322
  4218ce:	ins    DWORD PTR es:[edi],dx
  4218cf:	(bad)  
  4218d1:	adc    eax,0x40e392
  4218d6:	fstp   QWORD PTR [ebp-0x20b53da4]
  4218dc:	dec    edi
  4218dd:	mov    ebx,edx
  4218df:	pop    ecx
  4218e0:	out    0x1c,eax
  4218e2:	xor    eax,0xc48b5430
  4218e7:	cmp    ah,0xff
  4218ea:	inc    eax
  4218eb:	jecxz  0x421876
  4218ed:	fmul   st,st(5)
  4218ef:	pop    ss
  4218f0:	std    
  4218f1:	adc    eax,0x40e8f6
  4218f6:	popf   
  4218f7:	sbb    eax,0xbd2f8b0b
  4218fc:	pop    es
  4218fd:	call   FWORD PTR [eax]
  4218ff:	inc    ebp
  421900:	or     BYTE PTR [ebp-0x1cb51],dh
  421906:	das    
  421907:	adc    al,0xb2
  421909:	adc    esi,DWORD PTR [esi+0x72863379]
  42190f:	or     eax,0x56471239
  421914:	mov    edi,0x2779bbff
  421919:	dec    edi
  42191a:	loopne 0x42198d
  42191c:	xor    edi,esp
  42191e:	inc    edx
  42191f:	cmc    
  421920:	adc    al,0x40
  421922:	add    BYTE PTR [eax],al
  421924:	das    
  421925:	ret    0xc3f
  421928:	mov    bl,0x2
  42192a:	add    BYTE PTR [eax],al
  42192c:	das    
  42192d:	arpl   WORD PTR [edx+edi*2+0x1aaa46b7],ax
  421934:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421935:	mov    dl,0x14
  421937:	sub    ecx,ebp
  421939:	inc    esp
  42193a:	add    al,0x0
  42193c:	das    
  42193d:	loopne 0x4218d1
  42193f:	add    ebp,DWORD PTR [esi]
  421941:	inc    ebp
  421942:	(bad)  
  421943:	(bad)  
  421944:	adc    ebp,DWORD PTR ds:0x459b5b05
  42194a:	mov    eax,0x30ea2eef
  42194f:	call   0x42ac4d3d
  421954:	ja     0x42191d
  421956:	cmp    al,0xa
  421958:	call   0xf754c4ad
  42195d:	cld    
  42195e:	mov    al,0xe
  421960:	out    0xfc,eax
  421962:	mov    al,0x1f
  421964:	lods   al,BYTE PTR ds:[esi]
  421965:	ins    BYTE PTR es:[edi],dx
  421966:	cli    
  421967:	jae    0x42197a
  421969:	or     eax,0x51f718b1
  42196e:	out    dx,eax
  42196f:	call   0xe7fbd778
  421974:	inc    esp
  421975:	fisttp QWORD PTR [ebx]
  421977:	adc    DWORD PTR [eax],0xffffffe1
  42197a:	aad    0x15
  42197c:	ja     0x421948
  42197e:	sti    
  42197f:	retf   
  421980:	pushf  
  421981:	in     eax,0xa1
  421983:	mov    al,0x37
  421985:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  421987:	das    
  421988:	add    BYTE PTR [eax],al
  42198a:	mov    cl,0xd3
  42198c:	cmp    DWORD PTR [ebx],ebp
  42198e:	pop    ds
  42198f:	addr16 xchg esp,eax
  421991:	das    
  421992:	mov    cl,0xd3
  421994:	inc    ecx
  421995:	sub    esp,DWORD PTR [edi]
  421997:	les    ebp,FWORD PTR [bx]
  42199a:	xlat   BYTE PTR ds:[ebx]
  42199b:	fdiv   DWORD PTR [eax-0x47]
  42199e:	shl    BYTE PTR [edi-0x4c],1
  4219a1:	daa    
  4219a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219a3:	fwait
  4219a4:	add    esp,edx
  4219a6:	shr    ebx,cl
  4219a8:	in     eax,dx
  4219a9:	adc    BYTE PTR [edi-0x22],ch
  4219ac:	fs inc esp
  4219ae:	cmp    eax,0xbb337fa0
  4219b3:	retf   
  4219b4:	in     eax,dx
  4219b5:	ss sbb eax,0xa8c3fd2a
  4219bb:	xchg   cl,ch
  4219bd:	add    ebp,DWORD PTR [edi]
  4219bf:	sahf   
  4219c0:	pop    ebp
  4219c1:	sbb    al,0x5
  4219c3:	fcomp  QWORD PTR [eax+eax*8-0x78]
  4219c7:	scas   al,BYTE PTR es:[edi]
  4219c8:	ret    0x84b0
  4219cb:	push   ecx
  4219cc:	aam    0x37
  4219ce:	pop    ds
  4219cf:	sahf   
  4219d0:	jmp    0xab2020a8
  4219d5:	adc    BYTE PTR [edi-0x16],dh
  4219d8:	sub    DWORD PTR [esi+esi*4],eax
  4219db:	fwait
  4219dc:	xchg   ebp,eax
  4219dd:	jmp    0xddce:0x80141ed
  4219e4:	jmp    0x79ddc1bc
  4219e9:	jmp    0x0:0x371945ed
  4219f0:	mov    ebp,0x7f760041
  4219f5:	cmp    DWORD PTR [esi-0x17],esp
  4219f8:	stc    
  4219f9:	retf   
  4219fa:	cld    
  4219fb:	data16 aas 
  4219fd:	cmp    dl,BYTE PTR [ecx+ebp*4]
  421a00:	sub    al,0xb3
  421a02:	pop    edx
  421a03:	mov    dl,0x6b
  421a05:	push   ds
  421a06:	push   ebp
  421a07:	bound  ecx,QWORD PTR [eax-0x60]
  421a0a:	xchg   DWORD PTR [eax+esi*1+0x2ce9a205],ebp
  421a11:	fimul  WORD PTR [edi-0x62]
  421a14:	enter  0x66a3,0xea
  421a18:	rol    DWORD PTR ds:0x5e79dc2,cl
  421a1e:	ret    0xdc95
  421a21:	add    edx,DWORD PTR [edi-0x18]
  421a24:	sub    al,0xde
  421a26:	je     0x4219f1
  421a28:	lds    ecx,FWORD PTR [edi-0x702a258c]
  421a2e:	or     esp,DWORD PTR [esp+edx*2+0x51]
  421a32:	sti    
  421a33:	jmp    0xe13eb631
  421a38:	fiadd  WORD PTR cs:[eax]
  421a3b:	sbb    eax,DWORD PTR [esi]
  421a3d:	inc    esi
  421a3e:	sub    eax,0x254e0a6
  421a43:	jmp    0x421a71
  421a45:	fsubrp st(7),st
  421a47:	ficom  DWORD PTR [edx-0x64]
  421a4a:	cld    
  421a4b:	jmp    0x1a55:0xd200de2e
  421a52:	inc    ebp
  421a53:	mov    ch,0x0
  421a55:	add    BYTE PTR [ecx+edx*2],al
  421a58:	sti    
  421a59:	jmp    0x2d05fba5
  421a5e:	daa    
  421a5f:	jnp    0x421a61
  421a61:	jmp    0xae456192
  421a66:	cwde   
  421a67:	push   esp
  421a68:	lahf   
  421a69:	jmp    0xf1f89a
  421a6e:	push   edi
  421a6f:	or     DWORD PTR [edi],ecx
  421a71:	mov    ah,0x64
  421a73:	sbb    al,0xfb
  421a75:	mov    bh,BYTE PTR [esi+0x7f083e66]
  421a7b:	shl    BYTE PTR [edi+0x1],cl
  421a7e:	push   ss
  421a7f:	fsubr  QWORD PTR [edi+0x48]
  421a82:	popf   
  421a83:	pop    eax
  421a84:	arpl   WORD PTR [ecx],ax
  421a86:	push   es
  421a87:	fdivr  QWORD PTR [ecx]
  421a89:	dec    ebp
  421a8a:	repnz xor BYTE PTR [esi],0x8b
  421a8e:	inc    ecx
  421a8f:	inc    ebp
  421a90:	lea    esp,[edi+edx*1-0x24]
  421a94:	add    BYTE PTR [ecx+0x1023f],al
  421a9a:	push   es
  421a9b:	and    DWORD PTR [esi],0xffffff84
  421a9e:	ins    DWORD PTR es:[edi],dx
  421a9f:	jg     0x421aa7
  421aa1:	push   0x28
  421aa3:	sub    bh,ah
  421aa5:	adc    eax,0x40ee0e
  421aaa:	outs   dx,BYTE PTR ds:[esi]
  421aab:	loop   0x421b21
  421aad:	sbb    DWORD PTR [ebp-0x61797d65],eax
  421ab3:	fadd   QWORD PTR [eax]
  421ab5:	add    BYTE PTR [edi-0x30],cl
  421ab8:	pop    edi
  421ab9:	add    DWORD PTR [eax],eax
  421abb:	add    dh,al
  421abd:	fild   DWORD PTR [ebx+0xdb0286]
  421ac3:	add    BYTE PTR ds:0x9debf790,bl
  421ac9:	data16 or BYTE PTR ds:0x890718,cl
  421ad1:	cmp    edx,0xffffffff
  421ad4:	xchg   esi,eax
  421ad5:	fs mov ebp,0xdb8764
  421adb:	mov    DWORD PTR [eax],ecx
  421add:	ja     0x421ad9
  421adf:	call   DWORD PTR [esi+0x66]
  421ae2:	ds or  al,0x21
  421ae5:	xor    eax,0x3d2fc2c2
  421aea:	call   DWORD PTR [edx-0x5c]
  421aed:	ror    esi,1
  421aef:	push   eax
  421af0:	loope  0x421ae1
  421af2:	mov    DWORD PTR [edx+0x1b],edi
  421af5:	int3   
  421af6:	das    
  421af7:	jle    0x421b31
  421af9:	inc    esi
  421afa:	add    DWORD PTR [eax],eax
  421afc:	das    
  421afd:	dec    ecx
  421afe:	movq   QWORD PTR [eax],mm5
  421b01:	inc    eax
  421b02:	add    DWORD PTR [eax],eax
  421b04:	das    
  421b05:	sub    DWORD PTR [edi],eax
  421b07:	jg     0x421b21
  421b09:	inc    ecx
  421b0a:	add    DWORD PTR [eax],eax
  421b0c:	das    
  421b0d:	sub    cl,bl
  421b0f:	imul   ebp,DWORD PTR ds:0x7aa98,0x6f13572a
  421b19:	inc    ebp
  421b1a:	mov    bh,dl
  421b1c:	xor    al,0x9f
  421b1e:	scas   eax,DWORD PTR es:[edi]
  421b1f:	inc    BYTE PTR [eax]
  421b21:	add    al,ch
  421b23:	inc    esp
  421b24:	stos   DWORD PTR es:[edi],eax
  421b25:	cmp    al,0x30
  421b27:	test   al,0xc2
  421b29:	rsm    
  421b2b:	xor    DWORD PTR [ebx],0x459454f
  421b31:	mov    ch,0xf0
  421b33:	push   0x1
  421b35:	mov    edi,0xbf0834cf
  421b3a:	pop    edi
  421b3b:	je     0x421ae6
  421b3d:	push   ds
  421b3e:	mov    al,0xc9
  421b40:	pop    es
  421b41:	std    
  421b42:	inc    edx
  421b43:	sub    eax,0xba2f4018
  421b48:	inc    esp
  421b49:	jae    0x421b8e
  421b4b:	les    esi,FWORD PTR [ecx-0x7ccfd205]
  421b51:	push   ss
  421b52:	cs inc ebp
  421b54:	inc    DWORD PTR [eax+0xd089102]
  421b5a:	mov    bl,0x37
  421b5c:	add    al,0x0
  421b5e:	das    
  421b5f:	mov    esi,0xde2e6f8e
  421b64:	jmp    0x3cc94d6c
  421b69:	adc    al,0x2a
  421b6b:	xchg   DWORD PTR [edx-0xb55ea81],ebp
  421b71:	ret    
  421b72:	dec    eax
  421b73:	sbb    eax,0x1b361489
  421b78:	sbb    DWORD PTR [ebx],esi
  421b7a:	mov    ebp,0x34d160e5
  421b7f:	ret    
  421b80:	leave  
  421b81:	xor    bl,BYTE PTR [ebp+0x5b62d6]
  421b87:	add    BYTE PTR [edx+0x1813dc61],cl
  421b8d:	rol    DWORD PTR [esi],cl
  421b8f:	sahf   
  421b90:	adc    BYTE PTR [eax],dl
  421b92:	sub    bh,BYTE PTR [edi-0x6]
  421b95:	ss ja  0x421b6e
  421b98:	add    BYTE PTR [esi+0x3a],cl
  421b9b:	mov    ecx,0x447add14
  421ba0:	pusha  
  421ba1:	dec    ebp
  421ba2:	mov    ah,0x17
  421ba4:	jmp    0x1a4c:0x4d1bf1d3
  421bab:	xor    ebp,DWORD PTR [eax+0x37]
  421bae:	dec    edi
  421baf:	add    al,0x2f
  421bb1:	fimul  WORD PTR [edx]
  421bb3:	mov    ecx,0xfb7c4d20
  421bb8:	enter  0xfbb2,0x32
  421bbc:	mov    ebx,0xae0bac57
  421bc1:	dec    ecx
  421bc2:	loope  0x421bc6
  421bc4:	mov    edx,0x2f03e8ef
  421bc9:	frstor [ebp+0x20]
  421bcc:	cwde   
  421bcd:	dec    ebp
  421bce:	jmp    0xdb22b359
  421bd3:	xchg   DWORD PTR [esi-0x51fc1622],edi
  421bd9:	dec    ecx
  421bda:	out    0xb7,al
  421bdc:	add    esp,DWORD PTR [ecx+0x0]
  421bdf:	mov    dl,0x27
  421be1:	rcl    BYTE PTR [ebp+0x5c],cl
  421be4:	test   eax,0x2ba07f47
  421be9:	rol    DWORD PTR [esp+ebx*8+0x0],cl
  421bed:	add    bl,dl
  421bef:	dec    esp
  421bf0:	sti    
  421bf1:	jmp    0x4b80088e
  421bf6:	sub    al,0xde
  421bf8:	add    ch,bh
  421bfa:	inc    esi
  421bfb:	or     BYTE PTR [eax+0x74de2ce9],ah
  421c01:	(bad)  
  421c02:	aas    
  421c03:	ins    DWORD PTR es:[edi],dx
  421c04:	add    cl,ch
  421c06:	sub    al,0xd2
  421c08:	sub    BYTE PTR [esi+edx*4],ah
  421c0b:	dec    ebp
  421c0c:	sti    
  421c0d:	jmp    0xb72bdce9
  421c12:	sub    ebx,esi
  421c14:	add    BYTE PTR [edx-0x21],ah
  421c17:	in     al,0x66
  421c19:	call   0xe9ab68c0
  421c1e:	loope  0x421c69
  421c20:	adc    eax,0x9e17e9
  421c25:	cdq    
  421c26:	inc    esp
  421c27:	mov    ah,0xfc
  421c29:	es sbb eax,0x58014556
  421c2f:	test   al,0xfc
  421c31:	push   ss
  421c32:	xchg   edi,eax
  421c33:	in     al,dx
  421c34:	dec    edi
  421c35:	add    BYTE PTR [edi-0x40f904b7],al
  421c3b:	imul   eax,DWORD PTR [eax],0xffffffe9
  421c3e:	sub    al,0xd1
  421c40:	or     DWORD PTR [ebx-0x110447d4],eax
  421c46:	out    0xe4,eax
  421c48:	out    0xc,eax
  421c4a:	nop
  421c4b:	ins    BYTE PTR es:[edi],dx
  421c4c:	add    cl,ch
  421c4e:	sub    al,0xd1
  421c50:	pop    ds
  421c51:	inc    ebx
  421c52:	add    BYTE PTR [eax],al
  421c54:	sub    edi,DWORD PTR [eax+0x84dc2fa]
  421c5a:	mov    al,ds:0xe09600
  421c5f:	jne    0x421cbc
  421c61:	mov    eax,0xe086f05b
  421c66:	std    
  421c67:	jne    0x421c9f
  421c69:	fbstp  TBYTE PTR [ebp+0x116a26c0]
  421c6f:	add    DWORD PTR [esi-0x20],eax
  421c72:	std    
  421c73:	jne    0x421cc3
  421c75:	or     eax,0x1b185fd5
  421c7a:	ret    0x4ac2
  421c7d:	loopne 0x421cb6
  421c7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c80:	inc    esi
  421c81:	loopne 0x421c83
  421c83:	cmpps  xmm7,xmm7,0xfb
  421c87:	call   DWORD PTR [esi]
  421c89:	cmp    eax,0xe016009a
  421c8e:	jmp    0xfc035814
  421c93:	inc    DWORD PTR [esi]
  421c95:	xchg   esp,eax
  421c96:	xchg   esi,eax
  421c97:	cmp    eax,0xe2b3
  421c9c:	stc    
  421c9d:	arpl   si,cx
  421c9f:	add    BYTE PTR [esi],al
  421ca1:	loopne 0x421cda
  421ca3:	mov    eax,ds:0x7500e006
  421ca8:	dec    eax
  421ca9:	leave  
  421caa:	push   esi
  421cab:	or     BYTE PTR [eax+eiz*8+0x69d675fd],bh
  421cb2:	sti    
  421cb3:	push   edx
  421cb4:	cmp    ebx,esi
  421cb6:	add    BYTE PTR ds:0xdf960000,dl
  421cbc:	push   eax
  421cbd:	call   0x3f15d3
  421cc2:	sbb    eax,0xc6a236d3
  421cc7:	fild   WORD PTR [eax]
  421cc9:	movlps QWORD PTR [ebp-0x4],xmm1
  421ccd:	dec    DWORD PTR [ecx-0x7ef3c136]
  421cd3:	pop    ds
  421cd4:	pop    ds
  421cd5:	add    BYTE PTR [edi],ch
  421cd7:	xor    eax,0xbb030005
  421cdc:	addr16 pop ds
  421cde:	jg     0x421d15
  421ce0:	(bad)  
  421ce1:	call   0x66ed597
  421ce6:	sti    
  421ce7:	push   edx
  421ce8:	add    BYTE PTR [esi-0x3cf840a],cl
  421cee:	lods   al,BYTE PTR ds:[esi]
  421cef:	or     BYTE PTR [esi],0x7e
  421cf2:	popf   
  421cf3:	mov    eax,0x52db132c
  421cf8:	test   al,bh
  421cfa:	and    ch,BYTE PTR [edx+eax*4]
  421cfd:	xor    eax,0x3a306440
  421d02:	lea    esi,ds:0xba20ffff
  421d08:	add    al,0xfd
  421d0a:	sub    BYTE PTR [edi+eiz*2-0xcae181],bh
  421d11:	out    0x7c,al
  421d13:	lods   al,BYTE PTR ds:[esi]
  421d14:	xor    ah,bh
  421d16:	push   edx
  421d17:	push   edi
  421d18:	(bad)  
  421d19:	jmp    FWORD PTR [edi]
  421d1b:	sub    al,0x82
  421d1d:	in     eax,dx
  421d1e:	add    BYTE PTR [eax],al
  421d20:	add    DWORD PTR [eax+esi*1+0x310c39e6],esp
  421d27:	cld    
  421d28:	mov    dh,0x13
  421d2a:	xor    edi,edi
  421d2c:	call   0xe141826a
  421d31:	xor    al,0xb2
  421d33:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  421d35:	cmp    ebx,0x56196f88
  421d3b:	dec    eax
  421d3d:	xor    eax,0x8bab0cff
  421d42:	xor    ah,bh
  421d44:	mov    eax,0x2fffff21
  421d49:	ss cmp bh,dl
  421d4c:	inc    esp
  421d4d:	cmc    
  421d4e:	loop   0x421d3f
  421d50:	das    
  421d51:	fsubp  st(1),st
  421d53:	add    ebp,DWORD PTR [esi+ecx*1]
  421d56:	fiadd  DWORD PTR [edi+ebp*1]
  421d59:	fistp  DWORD PTR [edx+0xcd89744]
  421d5f:	imul   eax,DWORD PTR [eax-0x520116b6],0x732fbaf1
  421d69:	push   esi
  421d6a:	test   al,0xa6
  421d6c:	lods   eax,DWORD PTR ds:[esi]
  421d6d:	sbb    eax,0x4b2987da
  421d72:	mov    ds:0xa906d22f,al
  421d77:	jmp    FWORD PTR [ebp+0x4b2f933a]
  421d7d:	dec    edx
  421d7e:	adc    al,0xe4
  421d80:	inc    ebx
  421d81:	shl    cl,1
  421d83:	cdq    
  421d84:	add    BYTE PTR [eax],al
  421d86:	mov    bh,0x34
  421d88:	mov    ebp,DWORD PTR [esi]
  421d8a:	xor    ecx,DWORD PTR [edx+0x1c]
  421d8d:	jnp    0x421da3
  421d8f:	pop    esi
  421d90:	jge    0x421d62
  421d92:	jg     0x421d44
  421d94:	outs   dx,BYTE PTR ds:[esi]
  421d95:	xor    al,0xa7
  421d97:	mov    al,ds:0x495fd6f9
  421d9c:	pusha  
  421d9d:	mov    cl,0xfc
  421d9f:	rcl    BYTE PTR [eax],0x6c
  421da2:	xor    bh,bl
  421da4:	jmp    0x3436a0ac
  421da9:	leave  
  421daa:	sub    bh,bl
  421dac:	mov    ebp,0xd9a3b614
  421db1:	jp     0x421e28
  421db3:	fisubr DWORD PTR [esi+0x56]
  421db6:	rcr    BYTE PTR [ebp+0x5dd32f1e],1
  421dbc:	mov    ebx,?
  421dbe:	retf   0xa450
  421dc1:	sti    
  421dc2:	sub    al,0xd2
  421dc4:	rcr    BYTE PTR [ecx-0xd6d4f47],cl
  421dca:	xlat   BYTE PTR ds:[ebx]
  421dcb:	add    BYTE PTR ss:[esi],dh
  421dce:	push   ebp
  421dcf:	dec    edx
  421dd0:	sti    
  421dd1:	add    cl,BYTE PTR [ebp+0x33f18056]
  421dd7:	fiadd  WORD PTR [eax]
  421dd9:	jo     0x421e42
  421ddb:	dec    ebp
  421ddc:	aaa    
  421ddd:	scas   al,BYTE PTR es:[edi]
  421dde:	(bad)  
  421ddf:	fmul   QWORD PTR [ecx+0x1036574c]
  421de5:	push   ds
  421de6:	jge    0x421d71
  421de8:	xchg   DWORD PTR [edi-0x4aec0000],ebp
  421dee:	push   eax
  421def:	jmp    0xa9f5f920
  421df4:	jecxz  0x421d91
  421df6:	in     al,0x72
  421df8:	jb     0x421dd3
  421dfa:	xchg   DWORD PTR [edi+ebp*1],ebp
  421dfd:	push   edi
  421dfe:	pop    ebp
  421dff:	loope  0x421dcc
  421e01:	pusha  
  421e02:	add    al,ch
  421e04:	sub    al,0xde
  421e06:	xchg   DWORD PTR [edi],ebp
  421e08:	and    edx,DWORD PTR [edi+0x4d]
  421e0b:	fnstenv [ebx+0x2ce80460]
  421e11:	fidiv  WORD PTR [edi]
  421e13:	mov    fs,WORD PTR [ecx]
  421e15:	pop    ebp
  421e16:	jp     0x421e03
  421e18:	sub    al,0xde
  421e1a:	mov    DWORD PTR [esp+ebx*2+0x2e59655e],edi
  421e21:	rol    BYTE PTR [ebx+eax*8],cl
  421e24:	sub    esi,DWORD PTR [edi]
  421e26:	add    bh,BYTE PTR [edi]
  421e28:	ins    DWORD PTR es:[edi],dx
  421e29:	fnsave [ebx+esi*8-0x27]
  421e2d:	js     0x421e30
  421e2f:	bound  ebp,QWORD PTR [edx]
  421e31:	inc    ecx
  421e32:	and    ebx,DWORD PTR [ecx-0x3b7621d4]
  421e38:	cmp    BYTE PTR [esi+0x65],bl
  421e3b:	or     eax,0x8304cccc
  421e40:	xor    esi,DWORD PTR [edi]
  421e42:	add    dl,BYTE PTR [edi]
  421e44:	ins    DWORD PTR es:[edi],dx
  421e45:	or     DWORD PTR [ebp+0x0],esi
  421e48:	mov    esp,0x3d04ab2f
  421e4d:	or     esp,esp
  421e4f:	or     eax,DWORD PTR [eax]
  421e51:	add    dh,al
  421e53:	fadd   QWORD PTR [eax]
  421e55:	mov    DWORD PTR [ebx+0x7e6580e4],esi
  421e5b:	dec    ecx
  421e5c:	outs   dx,DWORD PTR ds:[esi]
  421e5d:	add    al,0xfc
  421e5f:	fsub   st(1),st
  421e61:	push   es
  421e62:	push   0x8c740b9e
  421e67:	xor    DWORD PTR [ebx-0x1bf802fe],ebp
  421e6d:	out    dx,eax
  421e6e:	inc    ecx
  421e6f:	loop   0x421e71
  421e71:	mov    ebx,DWORD PTR [eax]
  421e73:	repnz std 
  421e75:	mov    al,0x4a
  421e77:	fild   DWORD PTR [eax]
  421e79:	add    bl,ah
  421e7b:	xor    bl,dh
  421e7d:	push   esi
  421e7f:	loope  0x421e7c
  421e81:	call   DWORD PTR [esi+0x66]
  421e84:	pop    edi
  421e85:	pop    ecx
  421e86:	scas   al,BYTE PTR es:[edi]
  421e87:	push   ds
  421e88:	ret    
  421e89:	add    BYTE PTR [esi-0x3b],al
  421e8c:	repz mov ecx,DWORD PTR [ebx]
  421e8f:	cli    
  421e90:	add    al,0xa8
  421e93:	ret    
  421e94:	jbe    0x421e92
  421e96:	xchg   ebp,eax
  421e97:	cli    
  421e98:	add    al,0x77
  421e9a:	cmp    ah,BYTE PTR [ebx+ebp*8+0x57]
  421e9e:	jno    0x421e8f
  421ea0:	aam    0x14
  421ea2:	(bad)  
  421ea3:	(bad)  [ebx+0x40dc1600]
  421ea9:	je     0x421ed5
  421eab:	mov    bl,0xfb
  421ead:	inc    DWORD PTR [esi-0x1e]
  421eb0:	mov    eax,edx
  421eb2:	xor    eax,0xd138ab
  421eb7:	add    BYTE PTR [edx-0x39ff5c0e],bl
  421ebd:	fild   WORD PTR [eax-0x3cd298b]
  421ec3:	adc    eax,0x4011f12f
  421ec8:	das    
  421ec9:	ret    0x7344
  421ecc:	xor    cl,dh
  421ece:	ret    
  421ecf:	sti    
  421ed0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ed1:	fld    QWORD PTR [ebx-0x2bdddc04]
  421ed7:	out    0x72,eax
  421ed9:	jl     0x421eda
  421edb:	inc    edi
  421edd:	cmc    
  421ede:	mov    eax,0x38aa5420
  421ee3:	jae    0x421f07
  421ee5:	fwait
  421ee6:	add    al,0x55
  421ee8:	adc    BYTE PTR [edx-0x1],0x12
  421eec:	out    dx,eax
  421eed:	xor    al,0x99
  421eef:	inc    BYTE PTR [esi]
  421ef1:	xor    eax,0x1d8888cf
  421ef6:	(bad)  
  421ef7:	mul    BYTE PTR [eax+0x78]
  421efa:	inc    esp
  421efb:	inc    edx
  421efc:	push   edi
  421efd:	ss (bad) 
  421eff:	jmp    FWORD PTR [edi]
  421f01:	ins    BYTE PTR es:[edi],dx
  421f02:	ret    
  421f03:	mov    dl,ch
  421f05:	push   0x19bbd882
  421f0a:	sar    ah,1
  421f0c:	and    dh,BYTE PTR [ecx+0x13]
  421f0f:	inc    eax
  421f10:	das    
  421f11:	ret    0x733f
  421f14:	dec    ebx
  421f15:	mov    edx,0x8c35732c
  421f1a:	dec    esp
  421f1b:	jae    0x421f1d
  421f1d:	add    BYTE PTR [ecx],dh
  421f1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f20:	ret    0x28e3
  421f23:	xor    ebp,edi
  421f25:	xchg   BYTE PTR [edx-0x4f],ch
  421f28:	inc    esp
  421f29:	inc    edx
  421f2a:	pop    es
  421f2b:	ss (bad) 
  421f2d:	jmp    FWORD PTR [edi]
  421f2f:	int3   
  421f30:	sub    al,ch
  421f32:	sbb    DWORD PTR [esi-0x4ad1f856],esi
  421f38:	(bad)  
  421f39:	call   FWORD PTR [ebx+0x2a]
  421f3c:	cdq    
  421f3d:	inc    BYTE PTR [esi-0x22]
  421f40:	jmp    0x3f4defde
  421f45:	sbb    edi,DWORD PTR [ecx+0x45]
  421f48:	adc    ch,BYTE PTR [ebp*4+0x6b87da46]
  421f4f:	fucomp st(1)
  421f51:	add    esp,DWORD PTR [eax+eiz*4+0x1f03d351]
  421f58:	lods   al,BYTE PTR ds:[esi]
  421f59:	pop    ebx
  421f5a:	fs fsubp st(1),st
  421f5d:	add    ebx,DWORD PTR [edx-0x10f01610]
  421f63:	frstor [esp+eax*2+0x3b]
  421f67:	bound  ebx,QWORD PTR [eax*1+0x72dade2f]
  421f6e:	aad    0xed
  421f70:	bnd jb 0x421f60
  421f73:	fldcw  WORD PTR [eax-0x6e2cc7d9]
  421f79:	xchg   ebp,esp
  421f7b:	inc    ebp
  421f7c:	call   0x91f13331
  421f81:	jecxz  0x421f83
  421f83:	add    bh,ah
  421f85:	fucomp st(1)
  421f87:	pop    ebx
  421f88:	sub    dl,dl
  421f8a:	in     eax,dx
  421f8b:	jle    0x421fd4
  421f8d:	xor    ch,ch
  421f8f:	jle    0x421f7e
  421f91:	in     eax,dx
  421f92:	into   
  421f93:	shl    BYTE PTR [eax-0x2a],0x32
  421f97:	sub    al,0xb7
  421f99:	fwait
  421f9a:	in     eax,0xde
  421f9c:	ins    DWORD PTR es:[edi],dx
  421f9d:	sub    BYTE PTR [eax-0x652ad7dd],0x44
  421fa4:	daa    
  421fa5:	inc    esi
  421fa6:	dec    esi
  421fa7:	pop    es
  421fa8:	mov    dh,0xc3
  421faa:	loope  0x421f32
  421fac:	test   DWORD PTR [esi-0x17],ecx
  421faf:	scas   eax,DWORD PTR es:[edi]
  421fb0:	sub    dh,BYTE PTR [ecx-0x216e6466]
  421fb6:	jmp    0x12176be
  421fbb:	jmp    0x421fe9
  421fbd:	fsubrp st(7),st
  421fbf:	fistp  DWORD PTR [esi]
  421fc1:	mov    al,ds:0xe880ed08
  421fc6:	dec    edi
  421fc7:	mov    dh,0xa4
  421fc9:	jg     0x421fcb
  421fcb:	jmp    0xeb40d5fc
  421fd0:	sub    al,0xde
  421fd2:	sti    
  421fd3:	jl     0x421fd9
  421fd5:	pop    eax
  421fd6:	inc    ebp
  421fd7:	push   ecx
  421fd8:	add    DWORD PTR [edx+0x75],0xfffffff5
  421fdc:	and    DWORD PTR [ebx],ebx
  421fde:	call   0xfb8469a6
  421fe3:	push   0xffffffc7
  421fe5:	cmp    DWORD PTR [eax],eax
  421fe7:	push   ebp
  421fe8:	add    BYTE PTR [eax],al
  421fea:	test   DWORD PTR [esi+0x450c4153],ebp
  421ff0:	sti    
  421ff1:	jmp    0xe940fa8a
  421ff6:	sub    al,0x37
  421ff8:	push   cs
  421ff9:	mov    bh,0x6f
  421ffb:	fld    QWORD PTR [eax+0x3d]
  421ffe:	ss scas eax,DWORD PTR es:[edi]
  422000:	push   ebx
  422001:	inc    ecx
  422002:	sti    
  422003:	inc    esp
  422004:	sti    
  422005:	jmp    0xe940fdbe
  42200a:	sub    al,0x43
  42200c:	jne    0x421f9f
  42200e:	(bad)  
  42200f:	lahf   
  422010:	test   al,0x39
  422012:	add    al,0xd0
  422014:	cld    
  422015:	jb     0x422005
  422017:	cmp    al,0xef
  422019:	adc    DWORD PTR [ebp+0x42],0x7f
  42201d:	hlt    
  42201e:	inc    esp
  42201f:	inc    ebp
  422020:	outs   dx,DWORD PTR ds:[esi]
  422021:	fild   WORD PTR [ecx]
  422023:	stos   BYTE PTR es:[edi],al
  422024:	push   0xde2c8d
  422029:	ror    DWORD PTR [eax],1
  42202b:	fild   WORD PTR [eax]
  42202d:	jmp    0xa5350f53
  422032:	hlt    
  422033:	aam    0x74
  422035:	add    BYTE PTR [ebx],cl
  422037:	sub    al,0x54
  422039:	push   0xe0b3
  42203e:	out    dx,al
  42203f:	(bad)  
  422041:	inc    esi
  422043:	imul   DWORD PTR [esi-0x8]
  422046:	pop    ebx
  422047:	push   ds
  422048:	mov    ds:0xf78e2950,eax
  42204d:	mov    eax,DWORD PTR [eax]
  42204f:	add    BYTE PTR [eax],dl
  422051:	jmp    0xf86c1b0d
  422056:	cmc    
  422057:	inc    ebp
  422058:	mov    esi,0xc51d74d9
  42205d:	das    
  42205e:	arpl   WORD PTR [eax+0x6800e096],sp
  422064:	xchg   dl,bl
  422066:	add    BYTE PTR [eax],al
  422068:	mov    DWORD PTR [ebx+esi*8-0x73],esi
  42206c:	push   ebx
  42206d:	mov    ds:0xf5e3ff4b,al
  422072:	mov    dh,al
  422074:	outs   dx,BYTE PTR ds:[esi]
  422075:	pop    eax
  422076:	stc    
  422077:	jmp    FWORD PTR [ecx+0xe]
  42207a:	aas    
  42207b:	or     BYTE PTR [esi+0x48],dl
  42207e:	sti    
  42207f:	jmp    DWORD PTR [edx]
  422081:	aas    
  422082:	imul   eax,DWORD PTR [eax],0xce88a054
  422088:	mov    esi,0x56004700
  42208d:	inc    ebp
  42208e:	mov    ah,0x4d
  422090:	inc    edx
  422091:	inc    ebp
  422092:	mov    ah,0xc0
  422094:	cmc    
  422095:	mov    al,ds:0x83d10da
  42209a:	dec    ebx
  42209b:	push   0xda1c
  4220a0:	cdq    
  4220a1:	jae    0x42209a
  4220a3:	inc    DWORD PTR [ebx]
  4220a5:	adc    al,0xe
  4220a7:	inc    eax
  4220a8:	push   es
  4220a9:	pop    ss
  4220aa:	pop    ebp
  4220ab:	pop    ebx
  4220ac:	aas    
  4220ad:	pushf  
  4220ae:	or     eax,DWORD PTR [eax]
  4220b0:	das    
  4220b1:	mov    ds:0x2ffb,eax
  4220b6:	loope  0x422130
  4220b8:	inc    DWORD PTR [ebx]
  4220ba:	jnp    0x422094
  4220bc:	sbb    al,0x71
  4220be:	aad    0x3
  4220c0:	sub    al,BYTE PTR [ebx-0x76f27e11]
  4220c6:	sub    cl,BYTE PTR [ebp+0x4c2f4048]
  4220cc:	jo     0x42214c
  4220ce:	xor    esi,DWORD PTR [esi]
  4220d0:	(bad)  
  4220d1:	push   DWORD PTR [eax]
  4220d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220d4:	ja     0x4220d5
  4220d6:	das    
  4220d7:	xor    eax,0x25cfbeff
  4220dc:	cld    
  4220dd:	mov    esi,0xfbda446c
  4220e2:	cmp    esi,DWORD PTR [ebp-0x1]
  4220e5:	cmc    
  4220e6:	xor    al,BYTE PTR [ebp+0x312f4051]
  4220ec:	stos   DWORD PTR es:[edi],eax
  4220ed:	aaa    
  4220ee:	xchg   edi,eax
  4220ef:	cmc    
  4220f0:	sbb    bh,ch
  4220f2:	xor    BYTE PTR [ecx-0x3fb78cc1],0xbb
  4220f9:	and    ebp,DWORD PTR [ebx]
  4220fb:	mov    dl,0x3f
  4220fd:	jae    0x42210b
  4220ff:	shl    dl,1
  422101:	ja     0x422083
  422103:	clc    
  422104:	add    al,0x89
  422106:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422107:	xor    eax,0xce2ffffe
  42210c:	test   DWORD PTR [eax+0x4049fd3a],0x376c02f
  422116:	cs xor eax,0x86ff
  42211c:	out    0x30,eax
  42211e:	hlt    
  42211f:	mov    edi,0xfffb776f
  422124:	pop    ebp
  422125:	jne    0x422143
  422127:	neg    BYTE PTR [eax]
  422129:	sbb    bl,BYTE PTR [edi-0x162190ee]
  42212f:	xor    DWORD PTR ds:0xc4340e,ebp
  422135:	(bad)  
  422137:	fst    DWORD PTR [eax]
  422139:	inc    ebp
  42213a:	inc    eax
  42213b:	sub    ebx,esi
  42213d:	pop    ecx
  42213e:	sub    DWORD PTR [edi+0x48c17d0d],ebp
  422144:	outs   dx,DWORD PTR ds:[esi]
  422145:	ficomp WORD PTR [esi-0x49]
  422148:	or     al,0xda
  42214a:	pusha  
  42214b:	jnp    0x42211d
  42214d:	fucomp st(1)
  42214f:	add    esi,DWORD PTR [esi-0x48043a67]
  422155:	rcl    BYTE PTR [ecx+0x60de6f48],1
  42215b:	sub    BYTE PTR [ebx*8+0x1e5e03e9],0xa9
  422163:	inc    ebp
  422164:	sub    dh,bl
  422166:	repnz (bad) [eax-0x17]
  42216a:	test   eax,0x19d89903
  42216f:	dec    esi
  422170:	out    dx,eax
  422171:	fucom  st(5)
  422173:	rcr    dl,cl
  422175:	stos   BYTE PTR es:[edi],al
  422176:	pop    ebp
  422177:	rcl    DWORD PTR [eax+0x7326c084],0x59
  42217e:	test   eax,0x240000b0
  422183:	push   edi
  422184:	sbb    eax,0xbc0f30e0
  422189:	jmp    0x422205
  42218b:	enter  0xcdd4,0xfa
  42218f:	stos   DWORD PTR es:[edi],eax
  422190:	(bad)  
  422191:	dec    edx
  422192:	mov    dh,BYTE PTR [ebp+0x3a40c3ba]
  422198:	loop   0x4221c8
  42219a:	cmp    eax,DWORD PTR [edx+0x2a]
  42219d:	(bad)  
  42219e:	xlat   BYTE PTR ds:[ebx]
  42219f:	pop    ds
  4221a0:	in     eax,dx
  4221a1:	add    ebp,DWORD PTR [edx]
  4221a3:	in     al,dx
  4221a4:	sbb    DWORD PTR [edx],edx
  4221a6:	outs   dx,DWORD PTR ds:[esi]
  4221a7:	fiadd  WORD PTR [eax]
  4221a9:	pop    ds
  4221aa:	cld    
  4221ab:	push   esi
  4221ac:	clc    
  4221ad:	outs   dx,BYTE PTR ds:[esi]
  4221ae:	ficom  WORD PTR ds:0xf9072ca9
  4221b5:	aam    0x2f
  4221b7:	test   al,0x52
  4221b9:	mov    esi,0x292f2a15
  4221be:	adc    al,0x24
  4221c0:	pop    ebx
  4221c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221c2:	cmc    
  4221c3:	inc    edx
  4221c4:	and    eax,0x9e3c41
  4221c9:	aas    
  4221ca:	cs push cs
  4221cc:	shr    DWORD PTR [edx-0x578b25d4],cl
  4221d2:	and    al,0xbf
  4221d4:	jmp    0xc09f29f8
  4221d9:	popf   
  4221da:	les    eax,FWORD PTR [edx+0x15]
  4221dd:	mov    ecx,0x72009e1e
  4221e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221e3:	leave  
  4221e4:	fld    TBYTE PTR [edx+0x92c0000]
  4221ea:	and    ch,0x33
  4221ed:	fiadd  WORD PTR [eax]
  4221ef:	je     0x422214
  4221f1:	scas   eax,DWORD PTR es:[edi]
  4221f2:	push   edx
  4221f3:	sbb    dh,bl
  4221f5:	nop
  4221f6:	push   eax
  4221f7:	cmp    DWORD PTR [esi+eiz*1-0x46],edi
  4221fb:	inc    ecx
  4221fc:	lock popf 
  4221fe:	add    cl,al
  422200:	(bad)  
  422201:	dec    edx
  422202:	sti    
  422203:	(bad)  
  422204:	pop    ebp
  422205:	sbb    DWORD PTR [edx+0x29],0xec661e74
  42220c:	adc    esp,ebp
  42220e:	and    al,0xdb
  422210:	ins    BYTE PTR es:[edi],dx
  422211:	inc    ecx
  422212:	cs test eax,0x992541ed
  422218:	xor    BYTE PTR [esi+0xe2f9f00],bl
  42221e:	shr    DWORD PTR [edx],cl
  422220:	sub    ebx,edx
  422222:	push   edx
  422223:	add    BYTE PTR [edx],ch
  422225:	test   bl,ah
  422227:	adc    DWORD PTR [edi-0x397b0306],edi
  42222d:	jo     0x422270
  42222f:	(bad)  
  422230:	sti    
  422231:	sub    al,0x11
  422233:	inc    eax
  422234:	push   ss
  422235:	les    eax,FWORD PTR [esi]
  422237:	js     0x42227a
  422239:	sbb    al,0xfb
  42223b:	cmp    BYTE PTR [edi+0x6fffa49],al
  422241:	mov    fs,WORD PTR ds:0xfa45678b
  422247:	call   esi
  422249:	pop    ebp
  42224a:	cmc    
  42224b:	je     0x42224d
  42224d:	add    BYTE PTR [esi],ah
  42224f:	adc    ah,bh
  422251:	adc    eax,0x40d112
  422256:	pop    ebx
  422257:	popf   
  422258:	outs   dx,BYTE PTR ds:[esi]
  422259:	adc    eax,0x504b2c85
  42225e:	aad    0x93
  422260:	mov    ebp,0xfb1c0168
  422265:	out    0xd9,eax
  422267:	repnz cld 
  422269:	dec    ebp
  42226b:	dec    ebx
  42226c:	mov    ebx,0xc5c4455e
  422271:	pop    esi
  422272:	inc    ebp
  422273:	sbb    edi,esp
  422275:	and    eax,0x40edc2
  42227a:	adc    eax,0x86041f76
  42227f:	jo     0x4222b3
  422281:	and    edx,0x3d
  422284:	(bad)  
  422285:	(bad)  
  422286:	sub    cl,BYTE PTR [esi+edi*2-0xa]
  42228a:	sbb    ch,BYTE PTR [eax]
  42228c:	cmc    
  42228d:	add    eax,0x409256
  422292:	dec    edx
  422293:	jo     0x4222b3
  422295:	call   0x400494
  42229a:	retf   0x6f99
  42229d:	sbb    al,0x2f
  42229f:	xchg   esi,eax
  4222a0:	lods   al,BYTE PTR ds:[esi]
  4222a1:	fsub   st(4),st
  4222a3:	ss js  0x422325
  4222a6:	das    
  4222a7:	ss (bad) 
  4222a9:	push   DWORD PTR [esi-0x6860ef09]
  4222af:	push   0xffc1
  4222b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222b5:	mov    ch,0x0
  4222b7:	dec    DWORD PTR [eax]
  4222b9:	ss jbe 0x422301
  4222bc:	daa    
  4222bd:	repz add BYTE PTR [eax],al
  4222c0:	popa   
  4222c1:	mov    esp,0x882723b0
  4222c6:	and    al,0x73
  4222c8:	adc    edi,DWORD PTR ds:0x3d0b7324
  4222ce:	and    al,0x73
  4222d0:	adc    ebp,DWORD PTR ds:0x93afccd
  4222d6:	adc    al,BYTE PTR [eax+0x2f]
  4222d9:	int3   
  4222da:	sub    al,0x54
  4222dc:	xlat   BYTE PTR ds:[ebx]
  4222dd:	shl    DWORD PTR ds:0x3dbcb8fc,0x5c
  4222e4:	push   ecx
  4222e5:	repz adc al,0x0
  4222e8:	add    esp,ecx
  4222ea:	mov    al,0x23
  4222ec:	aaa    
  4222ed:	push   0x2d537324
  4222f2:	and    al,0x73
  4222f4:	dec    ebx
  4222f5:	sub    eax,0xdd537324
  4222fa:	retf   0x1afc
  4222fd:	adc    DWORD PTR [eax],edx
  4222ff:	inc    eax
  422300:	das    
  422301:	mov    esp,0xa9875427
  422306:	and    eax,0x3ccc68fc
  42230b:	pop    esp
  42230c:	add    DWORD PTR [ebx+0xf],esi
  42230f:	add    BYTE PTR [edx],al
  422311:	mov    esp,0xaa45513
  422316:	std    
  422317:	push   esp
  422318:	add    BYTE PTR [eax],al
  42231a:	dec    eax
  42231b:	ficomp WORD PTR [esp+ecx*1]
  42231e:	inc    edx
  42231f:	leave  
  422320:	cmc    
  422321:	and    al,0xbd
  422323:	in     eax,dx
  422324:	xchg   edx,eax
  422325:	scas   al,BYTE PTR es:[edi]
  422326:	and    al,0xa8
  422328:	mov    cl,BYTE PTR [esi]
  42232a:	or     ebp,edx
  42232c:	sub    DWORD PTR [esi+esi*4],eax
  42232f:	inc    ebp
  422330:	adc    bl,BYTE PTR [esi+eiz*2]
  422333:	aas    
  422334:	jb     0x42235a
  422336:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422337:	push   ss
  422338:	or     al,dh
  42233a:	gs sbb al,0xfd
  42233d:	add    ebx,DWORD PTR [ebx+edx*2+0x4d]
  422341:	int    0xa7
  422343:	enter  0xcce1,0xf3
  422347:	enter  0x24f1,0x5d
  42234b:	jmp    0xf7b4:0x3f30ae42
  422352:	cmp    BYTE PTR [edi],0xdc
  422355:	and    edi,DWORD PTR [esi+ebx*4]
  422358:	jmp    0x11e8e3d5
  42235d:	add    al,0xc2
  42235f:	sbb    bh,BYTE PTR ds:[eax-0xd]
  422363:	sahf   
  422364:	mov    bl,0xc6
  422366:	out    dx,al
  422367:	jmp    0xb692bd55
  42236c:	xor    DWORD PTR [edi+ebp*8+0x152811dd],ebp
  422373:	fucomp st(1)
  422375:	js     0x422394
  422377:	(bad)  
  422378:	mov    dh,0x48
  42237a:	inc    eax
  42237b:	loope  0x42231e
  42237d:	inc    edx
  42237e:	add    BYTE PTR [eax],al
  422380:	out    dx,eax
  422381:	fst    QWORD PTR [ebp+edx*8-0x45]
  422385:	fnsave [edx-0x35588f39]
  42238b:	stc    
  42238c:	mov    ebx,gs
  42238e:	sub    DWORD PTR [edi+eiz*1],eax
  422391:	loope  0x422314
  422393:	inc    edx
  422394:	out    dx,eax
  422395:	fld    QWORD PTR [eax]
  422397:	cmp    al,0x55
  422399:	ss (bad) 
  42239c:	sub    al,0xde
  42239e:	test   BYTE PTR [ecx-0x3762c59],ch
  4223a4:	fsub   DWORD PTR [eax]
  4223a6:	aas    
  4223a7:	jmp    0xaffaff92
  4223ac:	lock cmp eax,0xd04c1e00
  4223b2:	lods   al,BYTE PTR ds:[esi]
  4223b3:	fucomi st,st(4)
  4223b5:	cmp    eax,0x684f1488
  4223ba:	inc    ebp
  4223bb:	mov    eax,ds:0xa6545c3
  4223c0:	sub    bl,dh
  4223c2:	lea    esp,[esp+eiz*2+0x20dcfbad]
  4223c9:	inc    esi
  4223ca:	imul   ebp,esp,0xef89de33
  4223d0:	adc    ebx,ebp
  4223d2:	das    
  4223d3:	sub    ebx,esi
  4223d5:	push   ds
  4223d6:	xchg   esp,ecx
  4223d8:	add    al,0xee
  4223da:	xlat   BYTE PTR ds:[ebx]
  4223db:	bound  esp,QWORD PTR [esi-0x57f8761b]
  4223e1:	test   al,0xfc
  4223e3:	push   ds
  4223e4:	add    BYTE PTR [eax],al
  4223e6:	loopne 0x422465
  4223e8:	cmp    edi,esi
  4223ea:	sbb    eax,0xd01c051
  4223ef:	mov    eax,0xe4eae901
  4223f4:	add    BYTE PTR [ebx+0x7e88c624],dl
  4223fa:	imul   edi,DWORD PTR ds:0x3ccf75e3,0x39d76afb
  422404:	add    BYTE PTR [edx+0x67],dh
  422407:	in     eax,0xfb
  422409:	sbb    DWORD PTR [ebx+0x67],eax
  42240c:	sbb    eax,0x3472ce8
  422411:	add    BYTE PTR [ebp-0x5f],ah
  422414:	cmp    eax,ebx
  422416:	fld    QWORD PTR [ebp-0x1f47c1d]
  42241c:	cld    
  42241d:	mov    edx,DWORD PTR [ebx]
  42241f:	jmp    0x7d83:0x9562081
  422426:	inc    edi
  422427:	loope  0x4223e7
  422429:	add    al,0x46
  42242b:	mov    eax,DWORD PTR [edi]
  42242d:	push   0x40593e
  422432:	mov    esi,0x601763f
  422437:	fs pop esi
  422439:	cld    
  42243a:	push   es
  42243b:	ins    BYTE PTR es:[edi],dx
  42243c:	or     BYTE PTR ds:[ecx+0x415e311],bl
  422443:	loop   0x422445
  422445:	mov    ebx,edx
  422447:	add    al,0xe9
  422449:	push   cs
  42244a:	add    BYTE PTR [eax],al
  42244c:	adc    eax,0x4dc33ba2
  422451:	xchg   bl,ah
  422453:	(bad)  
  422454:	xchg   ebx,eax
  422455:	add    al,0x94
  422457:	call   FWORD PTR [ecx]
  422459:	add    BYTE PTR [ecx-0x76ffe5b3],al
  42245f:	inc    ebp
  422460:	jb     0x42246b
  422462:	inc    edi
  422463:	jge    0x42243c
  422465:	loopne 0x422425
  422467:	add    al,0xc6
  422469:	mov    al,BYTE PTR [edi]
  42246b:	push   0x4057ae
  422470:	cs in  al,0x77
  422473:	add    DWORD PTR [esi-0x7903a19d],edx
  422479:	imul   edi,DWORD PTR [esi],0x8
  42247c:	cdq    
  42247d:	pavgw  mm1,QWORD PTR [ecx+0x64]
  422481:	loope  0x422483
  422483:	mov    DWORD PTR [ebx+0x6],edx
  422486:	jmp    0x3be43999
  42248b:	ret    
  42248c:	das    
  42248d:	shl    BYTE PTR [ebx+0x290170e7],0x97
  422494:	pusha  
  422495:	and    esp,DWORD PTR [ecx]
  422497:	sub    dl,0x7a
  42249a:	and    DWORD PTR [eax+0xe2c2aea],ecx
  4224a0:	retf   0xff45
  4224a3:	shr    DWORD PTR [ebx],0x47
  4224a6:	lods   eax,DWORD PTR ds:[esi]
  4224a7:	addr16 (bad) 
  4224a9:	sahf   
  4224aa:	cdq    
  4224ab:	inc    eax
  4224ac:	das    
  4224ad:	pop    edi
  4224ae:	dec    ecx
  4224af:	jnp    0x4224b1
  4224b1:	add    BYTE PTR [esi],ch
  4224b3:	inc    ebp
  4224b4:	mov    WORD PTR [edx+0x33],?
  4224b7:	js     0x4224d9
  4224b9:	xchg   BYTE PTR [edx+0x7854b9b9],bl
  4224bf:	fdivr  QWORD PTR [ecx-0x72fd45ac]
  4224c5:	dec    edi
  4224c6:	mov    ah,0x8a
  4224c8:	pop    es
  4224c9:	std    
  4224ca:	aas    
  4224cb:	(bad)  
  4224cc:	ror    DWORD PTR [esi],0x2e
  4224cf:	inc    ebp
  4224d0:	xchg   BYTE PTR [edx-0x2d],al
  4224d3:	enter  0xfbcb,0xe0
  4224d7:	nop
  4224d8:	div    BYTE PTR [eax]
  4224da:	out    dx,eax
  4224db:	test   DWORD PTR [eax+ecx*4+0x4a],eax
  4224df:	popf   
  4224e0:	stos   BYTE PTR es:[edi],al
  4224e1:	xchg   edi,eax
  4224e2:	addr16 mov esi,0x72ace3c3
  4224e8:	sbb    edi,esp
  4224ea:	cld    
  4224eb:	fisttp DWORD PTR [ebp+0x48102372]
  4224f1:	or     al,0xb2
  4224f3:	lods   eax,DWORD PTR ds:[esi]
  4224f4:	add    al,0x0
  4224f6:	das    
  4224f7:	and    BYTE PTR [eax],bl
  4224f9:	or     al,0xb3
  4224fb:	retf   
  4224fc:	add    al,0x0
  4224fe:	das    
  4224ff:	pop    edi
  422500:	xlat   BYTE PTR ds:[ebx]
  422501:	push   esp
  422502:	loope  0x42254f
  422504:	repnz dec edi
  422506:	sbb    esi,ebx
  422508:	sub    DWORD PTR [esi+ebp*4],eax
  42250b:	and    ch,ch
  42250d:	test   eax,0xa961a1a7
  422512:	mov    cl,0xe4
  422514:	inc    ebx
  422515:	lea    eax,[eax]
  422517:	add    ch,ch
  422519:	imul   ecx,DWORD PTR [ebx-0x75],0x8d43dff2
  422520:	in     eax,dx
  422521:	dec    ebp
  422522:	dec    ebx
  422523:	mov    esi,edx
  422525:	loope  0x42256a
  422527:	(bad)  
  422528:	in     eax,dx
  422529:	push   ecx
  42252a:	or     ecx,DWORD PTR [ebx-0x39911c0e]
  422530:	xchg   esp,eax
  422531:	sub    ecx,DWORD PTR gs:[esi+esi*4]
  422535:	mov    al,ds:0xce6a8a49
  42253a:	outs   dx,BYTE PTR ds:[esi]
  42253b:	(bad)  
  42253c:	int3   
  42253d:	fs and edi,eax
  422540:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422541:	mov    al,ds:0xd6728a41
  422546:	pop    esi
  422547:	(bad)  
  422548:	aam    0x64
  42254a:	stos   DWORD PTR es:[edi],eax
  42254b:	call   DWORD PTR [edx-0x75ac5b99]
  422551:	gs stos DWORD PTR es:[edi],eax
  422553:	jecxz  0x4225a7
  422555:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  422557:	push   edi
  422558:	dec    edx
  422559:	gs stos DWORD PTR es:[edi],eax
  42255b:	in     eax,0x52
  42255d:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  42255f:	pop    ebx
  422560:	dec    edx
  422561:	gs stos DWORD PTR es:[edi],eax
  422563:	out    0x52,eax
  422565:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  422567:	pop    edi
  422568:	dec    edx
  422569:	gs stos DWORD PTR es:[edi],eax
  42256b:	jmp    0x43e68cc2
  422570:	dec    edx
  422571:	gs stos DWORD PTR es:[edi],eax
  422573:	jmp    0x42252c
  422575:	mov    al,ds:0x9ea8a25
  42257a:	outs   dx,DWORD PTR ds:[esi]
  42257b:	mov    BYTE PTR [eax],0x0
  42257e:	shl    dh,0x22
  422581:	xchg   edi,eax
  422582:	and    ebx,DWORD PTR [edi+0x0]
  422585:	das    
  422586:	pop    esp
  422587:	nop
  422588:	push   eax
  422589:	sub    BYTE PTR [ebx+ebp*8+0x50],dl
  42258d:	out    0x76,al
  42258f:	into   
  422590:	movaps XMMWORD PTR [ebx],xmm5
  422593:	in     eax,dx
  422594:	rol    cl,0x4d
  422597:	mov    dh,0x1
  422599:	jmp    0x5343088c
  42259e:	aas    
  42259f:	(bad)  
  4225a0:	dec    eax
  4225a1:	ss ins BYTE PTR es:[edi],dx
  4225a3:	cmp    ah,bl
  4225a5:	xchg   ecx,eax
  4225a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225a7:	cmp    edi,ebx
  4225a9:	push   0xffffff96
  4225ab:	add    BYTE PTR ss:[ebx],dl
  4225ae:	xor    esp,DWORD PTR [ebp+0x45]
  4225b1:	icebp  
  4225b2:	adc    DWORD PTR [ebx],ecx
  4225b4:	jmp    0xfb7b4f1e
  4225b9:	pusha  
  4225ba:	idiv   BYTE PTR ds:0x79fdf7e7
  4225c0:	inc    eax
  4225c1:	stos   BYTE PTR es:[edi],al
  4225c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225c3:	mov    esp,0x3df6aee8
  4225c8:	cwde   
  4225c9:	outs   dx,BYTE PTR ds:[esi]
  4225ca:	and    BYTE PTR [edx],bh
  4225cc:	jg     0x422582
  4225ce:	sbb    BYTE PTR [edx],bh
  4225d0:	xchg   DWORD PTR [eax+ecx*2+0x33d2e441],esp
  4225d7:	fidivr WORD PTR [esi+0xcc42ce5]
  4225dd:	shl    esp,1
  4225df:	mov    dl,0x3f
  4225e1:	jmp    0x574625e6
  4225e6:	ja     0x4225d0
  4225e8:	sub    al,0x5f
  4225ea:	gs sub eax,0xf145672b
  4225f0:	sbb    DWORD PTR [ecx],ecx
  4225f2:	jmp    0xfb7ae080
  4225f7:	pusha  
  4225f8:	jbe    0x422637
  4225fa:	out    0xdf,eax
  4225fc:	jge    0x422677
  4225fe:	inc    eax
  4225ff:	add    BYTE PTR [ebp+0x65],al
  422602:	pop    esi
  422603:	call   0x99214d51
  422608:	sbb    eax,0xd9a383fc
  42260e:	cld    
  42260f:	mov    ecx,DWORD PTR [ebx+0x6]
  422612:	in     al,0xa8
  422614:	or     eax,0x5ac200e3
  422619:	frstor [esi+0xc]
  42261c:	out    dx,al
  42261d:	dec    ecx
  42261e:	je     0x422663
  422620:	inc    esi
  422621:	add    eax,0xdd477b5e
  422626:	and    DWORD PTR [ebp-0x7e],0x6675fddd
  42262d:	fsubr  DWORD PTR [esi+0xc]
  422630:	mov    ebp,0x56ff0325
  422635:	add    eax,0xdd17138e
  42263a:	jg     0x4225fc
  42263c:	ds in  eax,0x89
  42263f:	dec    ebp
  422640:	cli    
  422641:	imul   edi,edx,0xfc062b82
  422647:	jmp    0xe43e:0x69e50000
  42264e:	lods   eax,DWORD PTR ds:[esi]
  42264f:	jmp    0x6588:0x9bc6c031
  422656:	pop    esi
  422657:	mov    al,ds:0xd85ee43e
  42265c:	cld    
  42265d:	call   DWORD PTR [ebp+0xe]
  422660:	idiv   edi
  422662:	pop    ebp
  422663:	es fucomip st,st(0)
  422666:	mov    ecx,0x14fffa53
  42266b:	sub    eax,0x84e269fb
  422670:	adc    esi,DWORD PTR [edi-0x7b]
  422673:	fsub   st(0),st
  422675:	or     eax,0x3300e18d
  42267a:	das    
  42267b:	ftst   
  42267d:	jb     0x422622
  42267f:	mov    ebx,0x52c3bc1
  422684:	or     esi,DWORD PTR [ebp+0x4b9012e7]
  42268a:	cs (bad) 
  42268d:	mov    ch,0xef
  42268f:	inc    eax
  422690:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422691:	sub    BYTE PTR [edi-0x66],0xe1
  422695:	imul   ebp,DWORD PTR ds:0x6738a2f8,0xde88f993
  42269f:	or     al,BYTE PTR [edx]
  4226a1:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226a3:	stc    
  4226a4:	sub    ah,bh
  4226a6:	fdivp  st(6),st
  4226a8:	mov    dl,0xfc
  4226aa:	and    bh,bl
  4226ac:	out    dx,eax
  4226ad:	aas    
  4226ae:	add    BYTE PTR [eax],al
  4226b0:	das    
  4226b1:	ret    0x7344
  4226b4:	xor    dl,BYTE PTR [edx*1-0x7e9d457a]
  4226bb:	dec    edx
  4226bc:	sub    edx,DWORD PTR [ecx-0x77]
  4226bf:	lds    edx,FWORD PTR [ebx+ebx*1]
  4226c2:	sar    BYTE PTR [edi+0x6289846f],1
  4226c8:	pop    es
  4226c9:	(bad)
  4226cc:	or     BYTE PTR [ebp+0x3f],dh
  4226cf:	out    0xff,eax
  4226d1:	sub    edi,esi
  4226d3:	(bad)  
  4226d4:	in     al,dx
  4226d5:	or     ebp,edi
  4226d7:	addr16 daa 
  4226d9:	adc    al,al
  4226db:	call   eax
  4226dd:	pop    ebp
  4226de:	xchg   esi,eax
  4226df:	(bad)  
  4226e0:	loopne 0x42269e
  4226e2:	ret    
  4226e3:	shld   ebx,esi,0x89
  4226e7:	jp     0x422710
  4226e9:	les    esp,FWORD PTR [ebx-0x5043d005]
  4226ef:	cmp    ebp,DWORD PTR [ecx+ecx*8-0x21d05bfa]
  4226f6:	jmp    0x662955fe
  4226fb:	jle    0x4226a5
  4226fd:	aaa    
  4226fe:	jmp    0x4a26eb8b
  422703:	add    al,0x2f
  422705:	fidiv  WORD PTR [eax-0x41]
  422708:	and    BYTE PTR [ecx+0x1e],ah
  42270b:	or     eax,0x3e96ab3
  422710:	das    
  422711:	arpl   WORD PTR [edi+ecx*1+0x152e0000],cx
  422718:	jo     0x4226d8
  42271a:	sub    BYTE PTR [ecx-0x3],ch
  42271d:	add    ah,BYTE PTR [edx+0x16]
  422720:	out    dx,al
  422721:	inc    ebx
  422722:	bndstx [esi-0x49],bnd3
  422726:	es repnz push cs
  422729:	adc    al,BYTE PTR [edi]
  42272b:	xor    al,0x70
  42272d:	sahf   
  42272e:	xor    al,0x63
  422730:	adc    al,0xf4
  422732:	das    
  422733:	adc    eax,0x5b58be60
  422738:	fiadd  WORD PTR [ebx]
  42273a:	mov    ebx,0x2cb06e91
  42273f:	pop    ebx
  422740:	(bad)  
  422741:	or     ebx,DWORD PTR [ebp+0x20995c9f]
  422747:	or     eax,0xce958a92
  42274c:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42274e:	or     al,0xde
  422750:	pop    esi
  422751:	mov    dh,0xc
  422753:	repz xchg edx,eax
  422755:	nop
  422756:	cmp    al,0xe7
  422758:	call   0xfe86:0xc3e65fb7
  42275f:	mov    cl,0xc
  422761:	or     esi,0x36
  422764:	fiadd  DWORD PTR [ebx]
  422766:	das    
  422767:	fcmovnbe st,st(6)
  422769:	add    al,ah
  42276b:	repnz xchg esp,eax
  42276d:	or     edi,DWORD PTR ds:0x6c6c00d0
  422773:	stos   DWORD PTR es:[edi],eax
  422774:	add    al,0xf2
  422776:	cld    
  422777:	mov    cl,0xa
  422779:	jb     0x42277b
  42277b:	add    BYTE PTR [ecx-0x481cd61e],dl
  422781:	hlt    
  422782:	call   DWORD PTR [esi]
  422784:	mov    ch,0xf4
  422786:	xchg   DWORD PTR [esp+ebx*4+0x470d4539],ecx
  42278d:	sbb    al,0xff
  42278f:	mov    eax,ds:0x6aa44530
  422794:	jno    0x4227c8
  422796:	sti    
  422797:	cmp    DWORD PTR ds:0xeb1a0d45,ebp
  42279d:	idiv   BYTE PTR [edi+0x7f3e8e72]
  4227a3:	and    al,0x47
  4227a5:	cmp    ch,BYTE PTR [esi]
  4227a7:	test   eax,0xe876d40b
  4227ac:	sub    al,0x1c
  4227ae:	or     al,0xe9
  4227b0:	call   0x9d:0x9c7168ca
  4227b7:	rol    DWORD PTR [eax],0xb0
  4227ba:	add    ecx,ebp
  4227bc:	mov    eax,ds:0xbac22f47
  4227c1:	cwde   
  4227c2:	cld    
  4227c3:	(bad)  
  4227c4:	in     eax,dx
  4227c5:	stc    
  4227c6:	xchg   DWORD PTR ds:0x2488a603,ecx
  4227cc:	dec    esp
  4227cd:	mov    DWORD PTR [eax+0x11],0xe900ee33
  4227d4:	mov    ebp,0x24f4fb8e
  4227d9:	xor    edx,DWORD PTR ds:0xf5fac5
  4227df:	jo     0x4227e1
  4227e1:	add    dh,ch
  4227e3:	adc    eax,0x96bf2a37
  4227e8:	push   ebx
  4227e9:	mov    bh,0x4
  4227eb:	ret    
  4227ec:	fld    DWORD PTR [eax]
  4227ee:	push   0x3fc888d9
  4227f3:	daa    
  4227f4:	xlat   BYTE PTR ds:[ebx]
  4227f5:	cmp    ecx,DWORD PTR ds:0x95532a4e
  4227fb:	outs   dx,DWORD PTR ds:[esi]
  4227fc:	mov    BYTE PTR [ebp+0x26],dl
  4227ff:	add    bl,dl
  422801:	dec    BYTE PTR [ecx-0x27]
  422804:	jg     0x4227c6
  422806:	ret    0x5033
  422809:	push   edi
  42280a:	sub    DWORD PTR [edi-0x29],ecx
  42280d:	call   DWORD PTR [ebx]
  42280f:	add    ebp,edi
  422811:	jne    0x422891
  422813:	fmul   DWORD PTR [esi]
  422815:	pop    eax
  422816:	fs and ebx,edi
  422819:	neg    BYTE PTR [esi]
  42281b:	xor    eax,0x696ef7bb
  422820:	ds out 0x89,eax
  422823:	dec    esi
  422824:	xlat   BYTE PTR ds:[ebx]
  422825:	call   0x4021ba
  42282a:	ds ja  0x422811
  42282d:	jne    0x4228a2
  42282f:	mov    ebx,edi
  422831:	jg     0x422889
  422833:	loope  0x422886
  422835:	inc    DWORD PTR [ebx]
  422837:	cli    
  422838:	cld    
  422839:	jne    0x422889
  42283b:	fmul   DWORD PTR [esi]
  42283d:	test   BYTE PTR [ecx+eiz*1],dh
  422840:	sti    
  422841:	mov    BYTE PTR [ebx-0x6],ch
  422844:	or     BYTE PTR [ebp+0x0],0x0
  422848:	mov    edx,0xa64588d7
  42284d:	add    eax,DWORD PTR [edi]
  42284f:	xor    eax,esi
  422851:	and    al,al
  422853:	mov    esi,DWORD PTR [ebx]
  422855:	add    al,BYTE PTR [ecx+0x30d87a4d]
  42285b:	shr    BYTE PTR [esi+0x6017286],0x9b
  422862:	(bad)  
  422863:	(bad)  
  422864:	cld    
  422865:	cmp    BYTE PTR [ebx-0x8],ah
  422868:	das    
  422869:	adc    eax,0xdad0ffc2
  42286e:	popf   
  42286f:	(bad)  
  422870:	shr    BYTE PTR [edi-0xcad7fe4],1
  422876:	dec    DWORD PTR [eax-0x3afdd498]
  42287c:	lods   al,BYTE PTR ds:[esi]
  42287d:	sahf   
  42287e:	jg     0x422808
  422880:	inc    ecx
  422882:	adc    DWORD PTR [ebx+0xe],esi
  422885:	enter  0x397,0x3b
  422889:	push   ebp
  42288a:	mov    edx,0x90bda000
  42288f:	xlat   BYTE PTR ds:[ebx]
  422890:	lods   al,BYTE PTR ds:[esi]
  422891:	sbb    al,0xff
  422893:	jae    0x422873
  422895:	scas   eax,DWORD PTR es:[edi]
  422896:	ror    DWORD PTR [ebx],0x2c
  422899:	add    al,0xb0
  42289b:	cld    
  42289c:	loop   0x4228dc
  42289e:	mov    WORD PTR [edx-0x71],es
  4228a1:	rol    DWORD PTR [ebx+esi*2-0x1],0xaf
  4228a6:	test   BYTE PTR [eax],0x80
  4228a9:	mov    edi,0xfbe
  4228ae:	sub    al,0x7c
  4228b0:	xchg   DWORD PTR [edx+0x4b],eax
  4228b3:	lods   eax,DWORD PTR ds:[esi]
  4228b4:	mov    bl,0xdb
  4228b6:	mov    ah,0x47
  4228b8:	jp     0x422879
  4228ba:	mov    ebx,0x120497e3
  4228bf:	test   BYTE PTR [ecx],bl
  4228c1:	push   DWORD PTR [eax]
  4228c3:	dec    edi
  4228c4:	sti    
  4228c5:	add    al,dh
  4228c7:	enter  0x144,0x7f
  4228cb:	dec    esp
  4228cc:	mov    ebx,edi
  4228ce:	sbb    bl,ch
  4228d0:	or     BYTE PTR [ebx-0x771ace11],al
  4228d6:	jp     0x422931
  4228d8:	xchg   esi,edi
  4228da:	lods   eax,DWORD PTR ds:[esi]
  4228db:	mov    BYTE PTR [eax],al
  4228dd:	xor    DWORD PTR [edx+0x59],0xdedfe900
  4228e4:	inc    dx
  4228e6:	cmp    al,0x47
  4228e8:	add    BYTE PTR [ebp+0x54523275],0xd9
  4228ef:	dec    eax
  4228f0:	(bad)  
  4228f2:	nop
  4228f3:	sahf   
  4228f4:	lea    ecx,es:[ebp+0x46]
  4228f8:	mov    sp,0xf733
  4228fd:	inc    ebx
  4228fe:	ror    BYTE PTR [esi],1
  422900:	mov    cl,0x2
  422902:	das    
  422903:	and    cl,dh
  422905:	add    edx,DWORD PTR ds:0x1a2b91d6
  42290b:	lahf   
  42290c:	jmp    0xe8f8db3c
  422911:	add    eax,DWORD PTR [eax]
  422913:	add    BYTE PTR [esi+0x17],bl
  422916:	jno    0x4228cf
  422918:	xchg   ebx,eax
  422919:	gs pushf 
  42291b:	pop    ss
  42291c:	mov    bh,0x9d
  42291e:	mov    ch,0x8c
  422920:	pushf  
  422921:	out    0x69,al
  422923:	add    al,0x2f
  422925:	ficomp WORD PTR [esi]
  422927:	xor    eax,0x57668de2
  42292c:	sub    BYTE PTR [edx-0x17],bl
  42292f:	add    ebp,DWORD PTR [edi]
  422931:	retf   0xc253
  422934:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422935:	jmp    0x16e:0x15bd8aef
  42293c:	push   es
  42293d:	pop    ds
  42293e:	cmp    eax,0xe1f2a5de
  422943:	mov    edx,gs
  422945:	int    0xe6
  422947:	inc    edx
  422948:	mov    cl,0x98
  42294a:	mov    ebp,0xd03ea58a
  42294f:	clc    
  422950:	pushf  
  422951:	(bad)  
  422952:	pop    esi
  422953:	scas   al,BYTE PTR es:[edi]
  422954:	sub    bh,dh
  422956:	(bad)  [esi+0x8146731]
  42295c:	test   al,0xcd
  42295e:	add    BYTE PTR [edi+0x6a0139b9],ch
  422964:	outs   dx,DWORD PTR ds:[esi]
  422965:	fistp  QWORD PTR [edi+0x29]
  422968:	call   0x6ead03b2
  42296d:	iret   
  42296e:	out    0x21,eax
  422970:	add    esi,DWORD PTR [ebx+0x40]
  422973:	sub    ah,BYTE PTR [ebx+0x2fe8bf]
  422979:	add    BYTE PTR [ecx-0x1695ffc7],cl
  42297f:	ss sti 
  422981:	arpl   WORD PTR [ecx+0x39],di
  422984:	call   0xfb75be27
  422989:	sub    esi,DWORD PTR [esi+ebx*8]
  42298c:	xchg   DWORD PTR [ebp+0x460bda80],esp
  422992:	fdivr  st,st(6)
  422994:	or     al,0xb9
  422996:	inc    esp
  422997:	repz rol DWORD PTR [edi],cl
  42299a:	daa    
  42299b:	push   ds
  42299c:	sti    
  42299d:	jne    0x4229ff
  42299f:	(bad)  
  4229a1:	lahf   
  4229a2:	aas    
  4229a3:	xor    ebx,edi
  4229a5:	sub    ch,bh
  4229a7:	fistp  WORD PTR [eax]
  4229a9:	(bad)  
  4229aa:	ins    BYTE PTR es:[edi],dx
  4229ab:	xor    dh,dh
  4229ad:	fsubr  QWORD PTR [edx+0x32]
  4229b0:	ret    0x60ec
  4229b3:	adc    DWORD PTR [edi],edi
  4229b5:	jmp    0xe9835ddf
  4229ba:	fdiv   QWORD PTR [ebx]
  4229bc:	mov    esi,0x8c46753
  4229c1:	mov    dh,0x5e
  4229c3:	cli    
  4229c4:	shr    BYTE PTR [edx],cl
  4229c6:	sub    esi,DWORD PTR [ecx]
  4229c8:	adc    eax,0xf21d15
  4229cd:	imul   ebp,DWORD PTR fs:[ebp-0x62c95f2],0x0
  4229d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4229d6:	jmp    0x4229a9
  4229d8:	test   DWORD PTR [eax],0xc6fb1bb3
  4229de:	add    BYTE PTR [eax],al
  4229e0:	push   esi
  4229e1:	ds or  dh,bh
  4229e4:	inc    edi
  4229e5:	fcmovb st,st(1)
  4229e7:	mov    ecx,DWORD PTR [eax]
  4229e9:	pop    edi
  4229ea:	mov    ebx,0x4d653b74
  4229ef:	add    al,0x9f
  4229f1:	popa   
  4229f2:	or     BYTE PTR [ecx-0x5],cl
  4229f5:	fist   DWORD PTR [eax-0x18]
  4229f8:	mov    ds,WORD PTR [edx]
  4229fa:	cli    
  4229fb:	call   FWORD PTR [ebp+0x30]
  4229fe:	dec    ebx
  4229ff:	call   0x3c610a
  422a04:	add    DWORD PTR [eax],esp
  422a06:	jecxz  0x4229fb
  422a08:	sbb    al,cl
  422a0a:	cld    
  422a0b:	cmp    DWORD PTR [eax-0x23],0xffffff81
  422a0f:	data16 mov bl,ch
  422a12:	rcl    DWORD PTR [ebp+0xd],0x6
  422a16:	sub    esp,0xf45e5c72
  422a1c:	xchg   esi,eax
  422a1d:	pop    esp
  422a1e:	pop    esi
  422a1f:	clc    
  422a20:	xchg   esi,eax
  422a21:	adc    DWORD PTR [ebx+ecx*4+0x7e],0x5
  422a26:	xchg   esi,eax
  422a27:	inc    DWORD PTR [ecx-0x240f7738]
  422a2d:	loop   0x422a9e
  422a2f:	dec    edx
  422a30:	cld    
  422a31:	adc    DWORD PTR [ebx+0x18],esp
  422a34:	sti    
  422a35:	sbb    ebx,edi
  422a37:	imul   esi,DWORD PTR [edi-0x7d],0xdb1cd5e3
  422a3e:	add    BYTE PTR [ebp-0x74d5b16a],al
  422a44:	add    BYTE PTR [eax],al
  422a46:	or     esp,edx
  422a48:	add    DWORD PTR [esi],0xffffffcd
  422a4b:	sbb    eax,0xde588907
  422a50:	mov    DWORD PTR [ebp+0x26],eax
  422a53:	bound  eax,QWORD PTR [ebp+0xc]
  422a56:	das    
  422a57:	mov    esp,0xe92b69fa
  422a5c:	lea    esi,[edx+0x3]
  422a5f:	add    al,0xf7
  422a62:	sub    eax,0xa6ffff47
  422a67:	add    ch,dh
  422a69:	out    0x86,eax
  422a6b:	jae    0x422a71
  422a6d:	add    BYTE PTR [eax+ebp*2-0x53cf7915],dh
  422a74:	pop    ss
  422a75:	call   0x83699ba0
  422a7a:	stc    
  422a7b:	mov    al,ds:0x77cb6912
  422a80:	mov    BYTE PTR [edx-0x45],dh
  422a83:	mov    fs,WORD PTR [ecx-0x79184704]
  422a89:	les    edx,FWORD PTR [eax+0x61]
  422a8c:	dec    esp
  422a8d:	sar    DWORD PTR [ebx],0x47
  422a90:	test   eax,0xa94716ff
  422a95:	inc    DWORD PTR [esi]
  422a97:	inc    ebp
  422a98:	test   eax,0xdb4a91ff
  422a9d:	sbb    ecx,DWORD PTR [eax-0x10eeb8ef]
  422aa3:	inc    esi
  422aa4:	xchg   BYTE PTR [ebx+0x53],cl
  422aa7:	inc    ebx
  422aa8:	mov    WORD PTR [esi],?
  422aaa:	add    BYTE PTR [eax],al
  422aac:	sub    esi,DWORD PTR [esp+ecx*2-0x7e]
  422ab0:	outs   dx,DWORD PTR ds:[esi]
  422ab1:	daa    
  422ab2:	push   0xffffffbf
  422ab4:	ins    DWORD PTR es:[edi],dx
  422ab5:	call   DWORD PTR cs:[edx-0x5c]
  422ab9:	sbb    al,BYTE PTR [ecx-0x550bc015]
  422abf:	mov    BYTE PTR [edx],al
  422ac1:	fcomip st,st(4)
  422ac3:	aas    
  422ac4:	das    
  422ac5:	xor    al,0x38
  422ac7:	push   eax
  422ac8:	stos   BYTE PTR es:[edi],al
  422ac9:	add    DWORD PTR ds:0x9cdc4f,ebx
  422acf:	push   ecx
  422ad0:	jl     0x422ab0
  422ad2:	ss adc eax,0xb771e69d
  422ad8:	sbb    eax,edi
  422ada:	call   0x8aa059e2
  422adf:	lods   eax,DWORD PTR cs:[esi]
  422ae1:	push   ds
  422ae2:	cld    
  422ae3:	mov    al,0x5b
  422ae5:	arpl   WORD PTR [edi+edx*8-0x751661d8],di
  422aec:	push   ebp
  422aed:	out    0xff,al
  422aef:	(bad)  
  422af0:	jmp    0xe3c4:0x2ca9f5a9
  422af7:	mov    ebx,0x16981ed0
  422afc:	shl    DWORD PTR [ecx-0x5c],cl
  422aff:	adc    edi,DWORD PTR [eax+0x61]
  422b02:	lods   al,BYTE PTR ds:[esi]
  422b03:	pshufw mm1,QWORD PTR [ebx-0x74a1ff31],0x96
  422b0b:	adc    al,0x3d
  422b0d:	loop   0x422b39
  422b0f:	pop    DWORD PTR [eax]
  422b11:	add    BYTE PTR [eax-0x1f80c4d1],ah
  422b17:	test   eax,0x2a1d14ee
  422b1c:	adc    ch,BYTE PTR ds:0x319b1af
  422b22:	add    esp,ebx
  422b24:	add    bh,BYTE PTR [edi+0xb7c5b28]
  422b2a:	adc    ebp,DWORD PTR [esi+eiz*1-0x5be7d3d7]
  422b31:	adc    al,0x69
  422b33:	xor    BYTE PTR [esp+ebx*1+0x63],bl
  422b37:	pop    es
  422b38:	cmp    cl,BYTE PTR [edx-0x46ccd113]
  422b3e:	imul   ebx,DWORD PTR [ecx+eiz*8],0x5560dc03
  422b45:	loopne 0x422afb
  422b47:	pop    ebp
  422b48:	int    0x33
  422b4a:	fiadd  WORD PTR cs:[eax]
  422b4d:	jmp    0xfa95b4d1
  422b52:	ins    BYTE PTR es:[edi],dx
  422b53:	lea    ecx,fs:[ebp+0x39]
  422b57:	xor    bh,bl
  422b59:	cmp    bl,ah
  422b5b:	sahf   
  422b5c:	data16 int 0xdc
  422b5f:	in     al,dx
  422b60:	xlat   BYTE PTR ds:[ebx]
  422b61:	mov    ds,WORD PTR [ecx]
  422b63:	mov    ecx,DWORD PTR [edi]
  422b65:	sub    DWORD PTR [ebx],ebp
  422b67:	pop    ebx
  422b68:	shl    ah,0x9f
  422b6b:	gs xor eax,0xeeff55
  422b71:	pop    esp
  422b72:	imul   edi,DWORD PTR [ebx-0x3],0x3b000066
  422b79:	lahf   
  422b7a:	sti    
  422b7b:	aaa    
  422b7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b7d:	repz js 0x422b78
  422b80:	in     al,dx
  422b81:	cs out 0x6,al
  422b84:	mov    al,0x5b
  422b86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b87:	inc    esp
  422b88:	sbb    esi,DWORD PTR [edx]
  422b8a:	push   eax
  422b8b:	ds leave 
  422b8d:	popw   gs
  422b90:	sub    al,0x63
  422b92:	test   DWORD PTR [ebp-0x4604cdbf],eax
  422b98:	cmp    ecx,esp
  422b9a:	(bad)  
  422b9b:	cli    
  422b9c:	ins    BYTE PTR es:[edi],dx
  422b9d:	test   BYTE PTR cs:[ecx],ch
  422ba0:	mov    al,ds:0xe8648df0
  422ba5:	xor    edi,ebx
  422ba7:	push   es
  422ba8:	mov    esp,0x9893d231
  422bad:	arpl   WORD PTR [ebp+0x45],ax
  422bb0:	mov    esp,0x41458563
  422bb5:	xor    bh,bl
  422bb7:	cmp    DWORD PTR [edx+ecx*1],edi
  422bba:	test   DWORD PTR [ecx+0x6a6218b7],ebp
  422bc0:	mov    esi,0x5854776e
  422bc5:	xor    DWORD PTR [ebp+0x0],esi
  422bc8:	jmp    0x724:0xbf66bb06
  422bcf:	lea    eax,[ebx]
  422bd1:	call   0x4015:0xb603ff4b
  422bd8:	push   ss
  422bd9:	push   edi
  422bda:	mov    ebx,0x12000075
  422bdf:	xchg   ebp,eax
  422be0:	cli    
  422be1:	jmp    0x4e23:0xff0b4c0c
  422be8:	jecxz  0x422bfe
  422bea:	mov    al,ds:0x185ffcd0
  422bef:	lods   al,BYTE PTR ds:[esi]
  422bf0:	rcr    BYTE PTR [ebx-0x7b],0x97
  422bf4:	outs   dx,DWORD PTR ds:[esi]
  422bf5:	leave  
  422bf6:	xchg   esp,eax
  422bf7:	(bad)  
  422bf8:	add    BYTE PTR [ebp+0x5d],dl
  422bfb:	(bad)  
  422bfc:	jp     0x422bea
  422bfe:	(bad)  
  422c00:	add    BYTE PTR [eax],al
  422c02:	xchg   ebp,eax
  422c03:	addr16 push esp
  422c05:	push   0xffffffc6
  422c07:	shr    BYTE PTR [esi+0x8],1
  422c0a:	cmp    eax,0xf64d86fb
  422c0f:	jb     0x422bf4
  422c11:	xor    edx,DWORD PTR [ebx]
  422c13:	sar    ah,1
  422c15:	xor    ebx,edx
  422c17:	shl    DWORD PTR [ebp+0x31],1
  422c1a:	rcl    ebp,cl
  422c1c:	mov    edx,0x2a7796e8
  422c21:	inc    ebp
  422c22:	xor    BYTE PTR ds:0x154f33fc,dl
  422c28:	mov    ebx,0xcd6a28a
  422c2d:	xor    BYTE PTR [edx+0x540f8de],ah
  422c33:	(bad)  
  422c35:	push   cs
  422c36:	xchg   edx,eax
  422c37:	cwde   
  422c38:	cmp    al,BYTE PTR [ebx-0x148ed6b1]
  422c3e:	cmovg  ecx,DWORD PTR [ebx]
  422c41:	je     0x422c43
  422c43:	add    BYTE PTR [edi],ch
  422c45:	fimul  DWORD PTR [edi]
  422c47:	jb     0x422c68
  422c49:	mov    cl,BYTE PTR [eax+0xe2441e7]
  422c4f:	xchg   BYTE PTR [edx+0xf],bh
  422c52:	adc    esp,edi
  422c54:	xor    BYTE PTR [edi],bl
  422c56:	cmp    bl,BYTE PTR [esi]
  422c58:	das    
  422c59:	aaa    
  422c5a:	popf   
  422c5b:	jne    0xab31c513
  422c61:	rcl    DWORD PTR [edi],0xfd
  422c64:	adc    BYTE PTR [edi+edx*1+0x7],dl
  422c68:	dec    ebp
  422c69:	aaa    
  422c6a:	dec    DWORD PTR [ecx+edi*4]
  422c6d:	stc    
  422c6e:	clc    
  422c6f:	sub    al,dh
  422c71:	xor    ah,bl
  422c73:	inc    edi
  422c74:	jnp    0x422cb9
  422c76:	mov    bh,0x72
  422c78:	dec    ecx
  422c79:	out    dx,eax
  422c7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c7b:	mov    DWORD PTR [edi+0x37],ebp
  422c7e:	popf   
  422c7f:	add    al,0xc4
  422c81:	inc    ebx
  422c82:	inc    edi
  422c83:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  422c85:	jbe    0x422c86
  422c87:	imul   esi,DWORD PTR [ecx],0xe888af7c
  422c8d:	scas   eax,DWORD PTR es:[edi]
  422c8e:	adc    ah,bh
  422c90:	inc    edx
  422c91:	popa   
  422c92:	adc    esp,edi
  422c94:	mov    ds:0x57698a12,al
  422c99:	dec    eax
  422c9a:	add    BYTE PTR [edx-0x61],0x66
  422c9e:	push   cs
  422c9f:	adc    bh,BYTE PTR [edi-0xe0040cc]
  422ca5:	je     0x422c51
  422ca7:	mov    BYTE PTR [eax],0x0
  422caa:	ins    DWORD PTR es:[edi],dx
  422cab:	call   DWORD PTR es:[edx-0x4c]
  422caf:	rol    BYTE PTR [edx-0x47b8881d],cl
  422cb5:	push   ebp
  422cb6:	fsub   DWORD PTR [eax+0x4]
  422cb9:	push   0x16d9b32f
  422cbe:	push   edi
  422cbf:	(bad)  [edi+ebp*1+0x5a]
  422cc3:	sub    al,0x6e
  422cc5:	sbb    al,0xad
  422cc7:	cmp    bl,BYTE PTR [ebp+eax*1-0x11]
  422ccb:	cmp    BYTE PTR [esp+ebx*1],bl
  422cce:	jp     0x422cdb
  422cd0:	ret    
  422cd1:	adc    DWORD PTR [ebp+ebx*1+0x2ec6d035],ebp
  422cd8:	mov    dl,0xf7
  422cda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422cdb:	int    0x29
  422cdd:	add    al,0x7f
  422cdf:	sub    edi,esp
  422ce1:	jnp    0x422d21
  422ce3:	sahf   
  422ce4:	jmp    0xf7508a65
  422ce9:	ret    
  422cea:	or     BYTE PTR [ecx+0x61],ch
  422ced:	cmc    
  422cee:	add    BYTE PTR [esi+edx*1],ch
  422cf1:	adc    DWORD PTR ds:0xf0c59cda,edi
  422cf7:	sub    al,0x9b
  422cf9:	push   ecx
  422cfa:	cs fucomp st(1)
  422cfd:	add    edx,esi
  422cff:	fcom   QWORD PTR [ecx+0x21]
  422d02:	mov    ds:0xd3b55a2c,al
  422d07:	icebp  
  422d08:	in     eax,0x2e
  422d0a:	outs   dx,DWORD PTR ds:[esi]
  422d0b:	fimul  WORD PTR [edx+0x3a]
  422d0e:	add    BYTE PTR [eax],al
  422d10:	pop    es
  422d11:	and    edi,DWORD PTR [ebp+0xd365d21]
  422d17:	mov    ecx,0x43f62bb0
  422d1c:	or     ecx,DWORD PTR [esp+ecx*4-0x3bbe4854]
  422d23:	inc    ebp
  422d24:	sub    al,0xde
  422d26:	mov    ah,0x7e
  422d28:	add    al,0x2
  422d2a:	adc    WORD PTR [esi+esi*1-0x70d0fc1b],0xffb6
  422d33:	sub    al,0xdf
  422d35:	sub    dl,ah
  422d37:	(bad)  
  422d38:	and    DWORD PTR [esi+0x2a9ce900],ebx
  422d3e:	adc    eax,0xeb5961
  422d43:	push   ebx
  422d44:	sub    al,0xb6
  422d46:	add    DWORD PTR [ebp+0x75],edx
  422d49:	aam    0xe8
  422d4b:	aam    0x18
  422d4d:	sub    ebx,edi
  422d4f:	pusha  
  422d50:	imul   esi,DWORD PTR [edi-0x1c5e55c9],0x446ca92f
  422d5a:	cmc    
  422d5b:	jmp    0x1a950b8c
  422d60:	mov    al,ds:0xbb3984a0
  422d65:	std    
  422d66:	or     bl,cl
  422d68:	aas    
  422d69:	inc    ebx
  422d6a:	mov    al,ds:0x8d2a1eb5
  422d6f:	push   esp
  422d70:	scas   al,BYTE PTR es:[edi]
  422d71:	and    eax,0x86fb
  422d76:	adc    al,0x68
  422d78:	pop    ecx
  422d79:	jmp    0xe8d10caa
  422d7e:	sub    al,0xde
  422d80:	data16 aad 0x9c
  422d83:	lea    ecx,[ebp-0x37a20f24]
  422d89:	pop    esi
  422d8a:	xor    al,0x3f
  422d8c:	mov    bl,0x57
  422d8e:	pop    ds
  422d8f:	pusha  
  422d90:	ror    bh,0xd1
  422d93:	push   ebp
  422d94:	ret    0x9499
  422d97:	pop    edx
  422d98:	shr    BYTE PTR [edx-0x4a7aa8d4],cl
  422d9e:	cmp    DWORD PTR [edx],ebp
  422da0:	sti    
  422da1:	cdq    
  422da2:	inc    esp
  422da3:	dec    edi
  422da4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422da5:	daa    
  422da6:	aas    
  422da7:	pusha  
  422da8:	shr    dh,0x19
  422dab:	imul   esi,DWORD PTR [esi],0x2a
  422dae:	mov    eax,ds:0xd6292fe3
  422db3:	arpl   WORD PTR [ebp-0x3244e00],ax
  422db9:	(bad)  
  422dba:	out    dx,eax
  422dbb:	cld    
  422dbc:	cli    
  422dbd:	call   DWORD PTR [esi-0x55]
  422dc0:	jle    0x422d50
  422dc2:	pop    ebp
  422dc3:	(bad)  
  422dc5:	mov    BYTE PTR [esi],ch
  422dc7:	and    al,BYTE PTR [edx+0x75]
  422dca:	dec    esp
  422dcb:	pop    esp
  422dcc:	jle    0x422e4a
  422dce:	arpl   dx,bx
  422dd0:	cld    
  422dd1:	push   eax
  422dd2:	jno    0x422df8
  422dd4:	xchg   ebx,eax
  422dd5:	adc    eax,DWORD PTR [esi]
  422dd7:	loop   0x422d60
  422dd9:	test   DWORD PTR [eax],eax
  422ddb:	add    dl,dh
  422ddd:	int3   
  422dde:	cld    
  422ddf:	inc    DWORD PTR [esi-0x27]
  422de2:	push   cs
  422de3:	cld    
  422de4:	add    al,0x1e
  422de6:	sti    
  422de7:	mov    BYTE PTR [ebx+0x52],cl
  422dea:	jecxz  0x422d8d
  422dec:	rcr    eax,cl
  422dee:	cld    
  422def:	test   dh,dl
  422df1:	inc    esi
  422df2:	pop    ecx
  422df3:	push   edi
  422df4:	arpl   WORD PTR [edi-0x1d],ax
  422df7:	mov    eax,0xe25f
  422dfc:	sahf   
  422dfd:	push   es
  422dfe:	mov    bl,0xff
  422e00:	popa   
  422e01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e02:	rol    BYTE PTR cs:[esi+ebx*1],1
  422e06:	sti    
  422e07:	mov    edx,0xe21e
  422e0c:	xchg   ebp,eax
  422e0d:	fsubr  DWORD PTR [esi]
  422e0f:	or     al,0x3
  422e11:	sbb    eax,0x5ef8fefb
  422e16:	js     0x422e52
  422e18:	sub    eax,0x3d306ea1
  422e1d:	pop    ss
  422e1e:	imul   ecx,DWORD PTR [ebp-0x77012226],0xffffffcb
  422e25:	dec    ebp
  422e26:	cld    
  422e27:	jne    0x422ddf
  422e29:	pop    esi
  422e2a:	jle    0x422ea8
  422e2c:	xor    ebx,ecx
  422e2e:	cld    
  422e2f:	push   eax
  422e30:	das    
  422e31:	pop    ebp
  422e32:	add    al,0x8b
  422e34:	jmp    0xb4ce:0xf28ab4c2
  422e3b:	out    0xe0,eax
  422e3d:	lock add al,0x0
  422e40:	add    BYTE PTR [eax],al
  422e42:	cld    
  422e43:	das    
  422e44:	fmul   DWORD PTR [ebx]
  422e46:	xor    BYTE PTR [edi+edi*8-0x4],0x81
  422e4b:	cld    
  422e4c:	inc    ebx
  422e4d:	jae    0x422ec4
  422e4f:	call   0x1f1da05f
  422e54:	adc    dl,BYTE PTR [edx+0x2f]
  422e57:	aaa    
  422e58:	into   
  422e59:	mov    edi,0xc27ffbd9
  422e5e:	mov    ebx,0x2f03416d
  422e63:	retf   0xeb77
  422e66:	jle    0x422e2c
  422e68:	mov    dl,0x54
  422e6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e6b:	inc    ecx
  422e6c:	fcmovnbe st,st(5)
  422e6e:	ins    BYTE PTR es:[edi],dx
  422e6f:	aaa    
  422e70:	into   
  422e71:	fcomp  DWORD PTR [esp+eiz*8-0x64]
  422e75:	add    eax,0x5104f52e
  422e7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e7c:	pop    ss
  422e7d:	popa   
  422e7e:	enter  0xff36,0x50
  422e82:	jl     0x422e63
  422e84:	nop
  422e85:	(bad)  
  422e86:	outs   dx,BYTE PTR ds:[esi]
  422e87:	aaa    
  422e88:	scas   al,BYTE PTR es:[edi]
  422e89:	xchg   DWORD PTR [edx-0x40],esi
  422e8c:	pop    ss
  422e8d:	push   ecx
  422e8e:	mov    BYTE PTR [esi],dh
  422e90:	push   DWORD PTR [edi]
  422e92:	push   0xffffff90
  422e94:	cwde   
  422e95:	pop    es
  422e96:	add    eax,0xfc0398f4
  422e9b:	not    BYTE PTR [esi]
  422e9d:	add    ah,bh
  422e9f:	idiv   BYTE PTR [edi+0x3c4c095c]
  422ea5:	rol    BYTE PTR [eax],0x0
  422ea8:	cli    
  422ea9:	mov    ebx,0xdd8b7e1b
  422eae:	cmp    DWORD PTR [ebx],eax
  422eb0:	das    
  422eb1:	fidiv  WORD PTR [esi-0x164c1c4b]
  422eb7:	sub    BYTE PTR [ebp+0x7b0e0aed],0x8d
  422ebe:	xchg   ecx,eax
  422ebf:	loop   0x422ee9
  422ec1:	cld    
  422ec2:	cli    
  422ec3:	sbb    bh,cl
  422ec5:	add    al,0xf3
  422ec7:	or     eax,0x4b51b2b5
  422ecc:	xchg   ecx,eax
  422ecd:	fucomp st(1)
  422ecf:	add    eax,DWORD PTR [edi-0x41]
  422ed2:	xchg   edx,eax
  422ed3:	or     eax,0x4daeeb4b
  422ed8:	inc    ecx
  422ed9:	sub    cl,ch
  422edb:	and    DWORD PTR [ebp+0x330cf962],0x28
  422ee2:	sbb    DWORD PTR [edi+0x6d],edi
  422ee5:	inc    esi
  422ee6:	sbb    DWORD PTR [ebp-0xec22ddd],esi
  422eec:	pop    eax
  422eed:	fisubr WORD PTR [esp+eax*2-0x63]
  422ef1:	fwait
  422ef2:	adc    DWORD PTR [eax],ebx
  422ef4:	or     DWORD PTR [eax],ebp
  422ef6:	jmp    0xf9244c07
  422efb:	ret    
  422efc:	clc    
  422efd:	pop    edx
  422efe:	sub    al,0x10
  422f00:	pusha  
  422f01:	mov    ah,0xe8
  422f03:	cdq    
  422f04:	call   0x70ae5b63
  422f09:	(bad)  
  422f0a:	pusha  
  422f0b:	pop    DWORD PTR [eax]
  422f0d:	add    ah,dl
  422f0f:	daa    
  422f10:	cld    
  422f11:	scas   eax,DWORD PTR es:[edi]
  422f12:	and    BYTE PTR [esi-0x4e777917],bl
  422f18:	clc    
  422f19:	jle    0x422ec8
  422f1b:	out    dx,al
  422f1c:	dec    edx
  422f1d:	or     eax,0x97748ebb
  422f22:	mov    ah,0x36
  422f24:	mov    al,0x55
  422f26:	test   al,0x27
  422f28:	add    BYTE PTR [edx+0x2d],al
  422f2b:	in     al,dx
  422f2c:	shl    BYTE PTR [ebp-0xd],0xaa
  422f30:	or     ah,BYTE PTR [edi]
  422f32:	out    dx,al
  422f33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f34:	mul    esp
  422f36:	sahf   
  422f37:	sub    BYTE PTR [esi],0x29
  422f3a:	ror    BYTE PTR [ecx+0x76ee2057],cl
  422f40:	add    DWORD PTR [edx],edx
  422f42:	sbb    ch,BYTE PTR [edx]
  422f44:	xor    eax,0x9e1bc1
  422f49:	add    DWORD PTR [eax],ebx
  422f4b:	sbb    dl,bh
  422f4d:	out    dx,al
  422f4e:	jg     0x422fb7
  422f50:	lahf   
  422f51:	and    DWORD PTR [edx],eax
  422f53:	sahf   
  422f54:	add    BYTE PTR [edx-0x16c0f588],cl
  422f5a:	iret   
  422f5b:	call   0x7255:0x1d332adb
  422f62:	adc    BYTE PTR [esi-0x14],bl
  422f65:	add    eax,0x62e094a4
  422f6a:	loope  0x422f4a
  422f6c:	mov    DWORD PTR [edi+eax*2],ebx
  422f6f:	push   esi
  422f70:	dec    ebp
  422f71:	cmc    
  422f72:	add    BYTE PTR [eax],al
  422f74:	xchg   ebp,eax
  422f75:	xchg   esp,eax
  422f76:	call   0x8a18f8ed
  422f7b:	and    al,0x4f
  422f7d:	pop    esi
  422f7e:	enter  0x79e8,0x94
  422f82:	fmul   QWORD PTR [edi]
  422f84:	push   0xffffff9c
  422f86:	fmul   st(2),st
  422f88:	push   es
  422f89:	pusha  
  422f8a:	inc    ebp
  422f8b:	jno    0x422fd1
  422f8d:	xchg   ecx,eax
  422f8e:	shr    DWORD PTR [edi+0x2b],0x20
  422f92:	mov    esi,0x878b2cf5
  422f97:	dec    ebp
  422f98:	scas   eax,DWORD PTR es:[edi]
  422f99:	xor    dl,BYTE PTR [edx+ebp*2]
  422f9c:	mov    DWORD PTR [esi],esi
  422f9e:	add    BYTE PTR [edx-0x57],ch
  422fa1:	ror    BYTE PTR [eax],cl
  422fa3:	add    BYTE PTR [eax-0x6182778f],dl
  422fa9:	mov    al,ds:0x4f96ff3e
  422fae:	sbb    al,0x8b
  422fb0:	shl    DWORD PTR [esi],1
  422fb2:	and    BYTE PTR [ebp+0x4e],0xdb
  422fb6:	jg     0x422f78
  422fb8:	mov    ds:0x8e4f882e,al
  422fbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422fbe:	outs   dx,BYTE PTR ds:[esi]
  422fbf:	clc    
  422fc0:	push   es
  422fc1:	pop    ss
  422fc2:	sub    bh,BYTE PTR [ebx]
  422fc4:	repnz and bh,ah
  422fc7:	inc    ebp
  422fc8:	cs adc al,0x3e
  422fcb:	clc    
  422fcc:	in     al,0xc9
  422fce:	mov    BYTE PTR [ebp+0x76],dh
  422fd1:	mov    ds:0xd7c5f44e,eax
  422fd6:	pop    es
  422fd7:	sldt   WORD PTR [eax]
  422fda:	aam    0x24
  422fdc:	cli    
  422fdd:	call   DWORD PTR [esi-0x59]
  422fe0:	add    eax,0xc255e83
  422fe5:	xor    BYTE PTR [ebx-0x1f],0x0
  422fe9:	add    BYTE PTR ds:0x910fef1f,ch
  422fef:	(bad)  
  422ff0:	sti    
  422ff1:	inc    DWORD PTR [esi]
  422ff3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ff4:	dec    ebp
  422ff5:	add    al,0x83
  422ff7:	addr16 pop es
  422ff9:	setb   cl
  422ffc:	sti    
  422ffd:	call   DWORD PTR [esi]
  422fff:	sar    DWORD PTR [edx-0x3f1dfa00],1
  423005:	jb     0xd7422ba8
  42300b:	popa   
  42300c:	jbe    0x42300d
  42300e:	(bad)  
  42300f:	push   ebp
  423010:	pop    es
  423011:	test   DWORD PTR [edi-0x79ffff26],0xd6b17f28
  42301b:	loope  0x42301d
  42301d:	mov    ebp,DWORD PTR [edi]
  42301f:	out    0x85,al
  423021:	loope  0x423052
  423023:	aaa    
  423024:	(bad)  
  423025:	jg     0x423062
  423027:	cmp    BYTE PTR [esi],al
  423029:	inc    edx
  42302a:	lahf   
  42302b:	mov    al,0xc1
  42302d:	or     esi,edi
  42302f:	bound  esi,QWORD PTR [edi-0x48cddcb9]
  423035:	inc    edi
  423036:	sbb    eax,DWORD PTR [esi]
  423038:	and    bh,0x33
  42303b:	dec    ebx
  42303c:	fild   DWORD PTR [eax+0x3f970000]
  423042:	mov    edx,DWORD PTR [esp+ebp*4]
  423045:	fcomip st,st(4)
  423047:	or     al,0xaa
  423049:	mov    bl,0x4
  42304b:	add    BYTE PTR [edi],ch
  42304d:	xchg   esi,eax
  42304e:	(bad)  
  42304f:	fsub   st(4),st
  423051:	ss retf 0x2745
  423055:	stos   BYTE PTR es:[edi],al
  423056:	lea    eax,[edx-0x7770ef83]
  42305c:	lock es jp 0x4230ac
  423060:	sbb    esp,DWORD PTR [eax]
  423062:	int3   
  423063:	mov    al,dh
  423065:	ds jp  0x4230b2
  423068:	aaa    
  423069:	adc    ah,dl
  42306b:	mov    BYTE PTR [ebx+ebx*8+0x7b],ch
  42306f:	dec    eax
  423070:	push   edi
  423071:	and    ah,bl
  423073:	mov    BYTE PTR [edi+eax*1+0x7a],ch
  423077:	dec    eax
  423078:	cmp    edx,DWORD PTR [eax-0x1c]
  42307b:	mov    DWORD PTR [edi+ebx*8-0x80],ebp
  42307f:	mov    edi,0xbe0e3f7a
  423084:	das    
  423085:	daa    
  423086:	(bad)  
  423087:	(bad)  
  423088:	jp     0x4230b5
  42308a:	ret    
  42308b:	(bad)  
  42308c:	arpl   ax,di
  42308e:	movsx  ebp,BYTE PTR [edi]
  423091:	pop    ss
  423092:	(bad)  
  423093:	jmp    DWORD PTR [ebx+0x70]
  423096:	jp     0x4230d8
  423098:	daa    
  423099:	fisubr WORD PTR [esi-0x42]
  42309c:	xor    al,0x59
  42309e:	repz xchg dh,al
  4230a1:	rcr    ebp,1
  4230a3:	in     al,0x0
  4230a5:	add    BYTE PTR [edi+0x991f527],ch
  4230ab:	popa   
  4230ac:	daa    
  4230ad:	punpcklwd mm1,DWORD PTR [ecx+ebx*8-0x6670be70]
  4230b5:	js     0x4230a9
  4230b7:	rcr    DWORD PTR [ecx+0x1b3593d6],1
  4230bd:	pop    esp
  4230be:	mov    esp,DWORD PTR [esi+ebp*2]
  4230c1:	mov    BYTE PTR [eax],ch
  4230c3:	pop    ebx
  4230c4:	sub    DWORD PTR [ebx-0x5cd2db],ecx
  4230ca:	jo     0x4230f0
  4230cc:	jmp    0x243b0d54
  4230d1:	shl    BYTE PTR [ebx-0x22],0x5e
  4230d5:	add    DWORD PTR [eax],edx
  4230d7:	fwait
  4230d8:	cmc    
  4230d9:	add    eax,0x1064605f
  4230de:	xor    al,0xd5
  4230e0:	data16 add al,0x42
  4230e3:	and    al,0xd2
  4230e5:	test   BYTE PTR [ebp+0x2b8ee924],dh
  4230eb:	icebp  
  4230ec:	test   eax,0x342e6dcb
  4230f1:	add    eax,0xa9291e5e
  4230f6:	jp     0x42310d
  4230f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230f9:	clc    
  4230fa:	adc    dh,ch
  4230fc:	test   eax,0x6e8a021d
  423101:	sbb    BYTE PTR [ecx-0x700cece],al
  423107:	and    esi,DWORD PTR [esi]
  423109:	mov    dl,0x0
  42310b:	add    BYTE PTR [ebx+0x57],bl
  42310e:	add    al,0xfc
  423110:	mov    bh,0x9b
  423112:	sub    DWORD PTR [edi-0x60],edi
  423115:	test   eax,0x6402ee00
  42311a:	jmp    0xfb66020f
  42311f:	shr    DWORD PTR [esi+ebx*8],1
  423122:	add    cl,bh
  423124:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423125:	sub    eax,0x8e2ce955
  42312a:	lea    ebp,[eax+ebx*1+0x333f2a3b]
  423131:	fimul  WORD PTR [ecx-0x3fa0175c]
  423137:	mov    ebp,0x3d7d5e47
  42313c:	xchg   ebx,eax
  42313d:	pop    esp
  42313e:	inc    ebp
  42313f:	adc    DWORD PTR [esi+0x2ce5415d],eax
  423145:	fsubrp st(7),st
  423147:	jmp    0x5e73:0x62e89ffb
  42314e:	stc    
  42314f:	icebp  
  423150:	addr16 pop ebp
  423152:	xor    ebp,esp
  423154:	sub    al,0xde
  423156:	aaa    
  423157:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423158:	inc    eax
  423159:	rol    BYTE PTR [ebx-0x4dcaf3f],cl
  42315f:	push   0xffffffec
  423161:	ficom  DWORD PTR [eax+0x72]
  423164:	sbb    eax,0x9ae1ea5e
  423169:	ret    
  42316a:	jmpw   0x3a21
  42316e:	xchg   DWORD PTR [esi-0x4f5b0000],esp
  423174:	loopne 0x4231e6
  423176:	loope  0x4231b6
  423178:	call   0xfb64568c
  42317d:	gs ins BYTE PTR es:[edi],dx
  42317f:	rol    BYTE PTR [esp+ecx*2-0x61ff21cd],cl
  423186:	mov    cl,0x3e
  423188:	xchg   DWORD PTR [edi-0x1696dc66],edi
  42318e:	adc    al,0xd3
  423190:	cli    
  423191:	add    BYTE PTR [ecx-0x2e3f802b],dh
  423197:	mov    ds:0xdec6038c,al
  42319c:	std    
  42319d:	jne    0x423149
  42319f:	mov    eax,ds:0x40d46ad5
  4231a4:	sti    
  4231a5:	out    0x4c,eax
  4231a7:	fdiv   st(4),st
  4231a9:	dec    DWORD PTR [edx-0x61]
  4231ac:	or     al,0x84
  4231ae:	(bad)  
  4231b0:	add    BYTE PTR [eax],al
  4231b2:	icebp  
  4231b3:	push   ebx
  4231b4:	fisttp WORD PTR [ebx+0x69ff4138]
  4231ba:	xchg   dh,al
  4231bc:	(bad)  
  4231be:	inc    ecx
  4231bf:	(bad)  
  4231c0:	jg     0x423182
  4231c2:	and    DWORD PTR [edx-0x2169fca0],0xa1925f89
  4231cc:	inc    esp
  4231cd:	or     BYTE PTR [edi],cl
  4231cf:	fs out dx,eax
  4231d1:	test   DWORD PTR ds:0x500858,ecx
  4231d7:	add    BYTE PTR [ecx+0x30],ah
  4231da:	outs   dx,DWORD PTR ds:[esi]
  4231db:	adc    al,BYTE PTR [esi-0x34277622]
  4231e1:	icebp  
  4231e2:	jge    0x42321b
  4231e4:	ret    
  4231e5:	sbb    al,0xcb
  4231e7:	push   eax
  4231e8:	fmul   QWORD PTR [esi]
  4231ea:	jecxz  0x423245
  4231ec:	push   0x138bfcdb
  4231f1:	jmp    0x4d83:0xdae26580
  4231f8:	retf   0x886b
  4231fb:	enter  0x1fc8,0xbb
  4231ff:	add    BYTE PTR [edi+0x26e8c31f],cl
  423205:	(bad)  
  423206:	std    
  423207:	dec    DWORD PTR [edx+0x2f850c9a]
  42320d:	dec    ebx
  42320e:	add    al,0x0
  423210:	das    
  423211:	adc    BYTE PTR [ecx+0x19f3d7bf],0xfd
  423218:	loopne 0x4231c6
  42321a:	xchg   ecx,eax
  42321b:	fbld   TBYTE PTR [edx+ecx*8-0x53953ae0]
  423222:	add    al,0xc6
  423224:	jb     0x4231aa
  423226:	add    al,0x87
  423228:	cmp    cl,BYTE PTR [ebx+0x382bfd7f]
  42322e:	and    DWORD PTR [edx],0x88ff372d
  423234:	sub    al,0xb4
  423236:	or     al,0xb
  423238:	xor    BYTE PTR [ebp+0x1e6],dh
  42323e:	das    
  42323f:	aaa    
  423240:	mov    BYTE PTR [edx-0x65],0x0
  423244:	jp     0x423254
  423246:	sub    eax,0xf488ff37
  42324b:	cmp    cl,BYTE PTR [edx]
  42324d:	mov    esi,0x1fff372f
  423252:	and    BYTE PTR [ebx+0x3768fe15],bh
  423258:	jle    0x423251
  42325a:	xor    esi,DWORD PTR [eax]
  42325c:	jge    0x423245
  42325e:	cs aaa 
  423260:	push   ebp
  423262:	outs   dx,BYTE PTR ds:[esi]
  423263:	repnz sub DWORD PTR ss:[eax+0x36],0xffffffff
  423269:	push   DWORD PTR [ebp+0x6f83ecf8]
  42326f:	cmp    ah,0xf4
  423272:	outs   dx,BYTE PTR ds:[esi]
  423273:	aaa    
  423274:	out    dx,eax
  423275:	jmp    FWORD PTR [eax]
  423277:	loop   0x423269
  423279:	cmp    ebp,DWORD PTR [esi]
  42327b:	xor    BYTE PTR [eax-0xc8d139],al
  423281:	hlt    
  423282:	out    dx,al
  423283:	ss (bad) 
  423286:	or     dh,bl
  423288:	bnd jg 0x42324f
  42328b:	fsubp  st(1),st
  42328d:	add    ebp,DWORD PTR [edi+0x220396a2]
  423293:	pop    ebx
  423294:	xchg   ebx,eax
  423295:	add    ebp,DWORD PTR [edi]
  423297:	fimul  WORD PTR [edi]
  423299:	add    eax,DWORD PTR [edx-0x29aacbad]
  42329f:	and    BYTE PTR [edx+0x1b],dh
  4232a2:	add    BYTE PTR [eax],al
  4232a4:	popf   
  4232a5:	mov    ecx,ebp
  4232a7:	add    esi,DWORD PTR [esi-0x6cc5aed3]
  4232ad:	pop    ds
  4232ae:	pop    edx
  4232af:	(bad)  
  4232b0:	sub    al,0xad
  4232b2:	out    0x99,al
  4232b4:	sbb    DWORD PTR cs:[ebp+edi*2+0x7e],0x1503e9de
  4232bd:	retf   0x9999
  4232c0:	cwde   
  4232c1:	push   ecx
  4232c2:	jl     0x42325f
  4232c4:	xchg   ebx,eax
  4232c5:	and    BYTE PTR [edx],ch
  4232c7:	xor    BYTE PTR [eax+0x20],0x11
  4232cb:	cmp    al,0xbe
  4232cd:	pop    ds
  4232ce:	sbb    al,BYTE PTR [eax+0x6963d0b8]
  4232d4:	jo     0x4232f6
  4232d6:	jmp    0x7d1d9e5d
  4232db:	lods   eax,DWORD PTR ds:[esi]
  4232dc:	mov    ch,0x6a
  4232de:	test   eax,0x31205b06
  4232e3:	dec    esi
  4232e4:	push   eax
  4232e5:	and    cl,ch
  4232e7:	sbb    edx,edi
  4232e9:	ins    BYTE PTR es:[edi],dx
  4232ea:	loop   0x4232f1
  4232ec:	mov    ch,0x5a
  4232ee:	push   ecx
  4232ef:	add    eax,0x7939203b
  4232f4:	push   0xffffff8d
  4232f6:	mov    esi,0x3c1f7fa0
  4232fb:	adc    BYTE PTR [edx+0x1f],bh
  4232fe:	aam    0x8f
  423300:	ds sahf 
  423302:	add    cl,ch
  423304:	fdiv   QWORD PTR [ebp+0x1108]
  42330a:	xchg   BYTE PTR [ecx],dl
  42330c:	call   0xfb646a23
  423311:	gs jae 0x4232c0
  423314:	pcmpgtb mm6,QWORD PTR [eax+0x477de85f]
  42331b:	and    ebx,edi
  42331d:	jb     0x42335a
  42331f:	pop    esp
  423320:	repnz hlt 
  423322:	add    al,0x38
  423324:	icebp  
  423325:	ja     0x423351
  423327:	and    cl,BYTE PTR [ebp+0x35376cf4]
  42332d:	push   ebp
  42332e:	sub    DWORD PTR [edx],esp
  423330:	jmp    0x120621d
  423335:	push   0x2a
  423337:	fidiv  WORD PTR [ebp-0xe]
  42333a:	and    DWORD PTR [esp+eiz*4+0x47],ebp
  42333e:	sub    ah,BYTE PTR [edx]
  423340:	mov    eax,0xde3381
  423345:	inc    ecx
  423346:	fwait
  423347:	outs   dx,BYTE PTR ds:[esi]
  423348:	sti    
  423349:	add    BYTE PTR cs:[eax+ebp*2+0x26],bl
  42334e:	sub    ah,BYTE PTR [edx]
  423350:	push   eax
  423351:	jb     0x42338c
  423353:	ss lahf 
  423355:	fs lock mov dh,0xfb
  423359:	push   cs
  42335a:	xor    cl,BYTE PTR [edi+0x54647cfb]
  423360:	test   DWORD PTR [ebp+0x27],ebx
  423363:	and    bh,bl
  423365:	cdq    
  423366:	xor    al,0x27
  423368:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423369:	out    dx,eax
  42336a:	xor    ebx,DWORD PTR [eax+eax*8-0xa]
  42336e:	add    BYTE PTR [eax],al
  423370:	rcr    DWORD PTR [esi-0x7c],1
  423373:	test   eax,0xa92fd8a9
  423378:	xchg   edx,eax
  423379:	pop    eax
  42337a:	test   DWORD PTR [ebp+0x30],ebp
  42337d:	and    bh,bl
  42337f:	add    BYTE PTR [edi+0x6fffac8],ch
  423385:	test   al,0x7e
  423387:	scas   al,BYTE PTR es:[edi]
  423388:	(bad)  
  42338a:	cld    
  42338b:	(bad)  
  42338c:	push   ss
  42338d:	fild   DWORD PTR [eax+0x49]
  423390:	and    edx,ebx
  423392:	lds    eax,FWORD PTR [ebp-0x6b]
  423395:	fisttp DWORD PTR [ecx+0x7c38503]
  42339b:	push   eax
  42339c:	mov    ebx,DWORD PTR [esi]
  42339e:	pop    es
  42339f:	push   eax
  4233a0:	pop    ebx
  4233a1:	pop    eax
  4233a2:	mov    esi,DWORD PTR [ebx]
  4233a4:	xchg   dl,al
  4233a6:	push   edx
  4233a7:	mov    eax,ds:0xc084dac6
  4233ac:	jmp    0xd643b34f
  4233b1:	fidiv  DWORD PTR [ecx]
  4233b3:	dec    DWORD PTR [ebx-0x58]
  4233b6:	out    dx,eax
  4233b7:	(bad)  
  4233b8:	pop    ecx
  4233b9:	fidiv  DWORD PTR [eax]
  4233bb:	test   BYTE PTR [edi+ebx*2],0x2e
  4233bf:	nop
  4233c0:	(bad)  
  4233c1:	sbb    BYTE PTR [eax-0x7f9ea602],dh
  4233c7:	rol    DWORD PTR [edx-0x3bef02a3],0xc8
  4233ce:	xor    al,al
  4233d0:	mov    al,0xa3
  4233d2:	cli    
  4233d3:	mov    WORD PTR [eax],es
  4233d5:	add    bl,cl
  4233d7:	test   BYTE PTR [edx+0x6a],0x87
  4233db:	jno    0x423363
  4233dd:	(bad)  
  4233de:	fcmovbe st,st(6)
  4233e0:	cld    
  4233e1:	(bad)  
  4233e2:	out    dx,al
  4233e3:	fild   DWORD PTR [eax]
  4233e5:	add    dh,al
  4233e7:	imul   ecx,DWORD PTR [ebx-0x39],0xffffff83
  4233eb:	repnz (bad) 
  4233ed:	call   DWORD PTR [esi-0x26]
  4233f0:	add    DWORD PTR [ebp+0x6a],0x56
  4233f4:	(bad)  
  4233f5:	call   FWORD PTR [ecx-0x3c]
  4233f8:	pop    esp
  4233f9:	adc    BYTE PTR [edi],ch
  4233fb:	cmc    
  4233fc:	add    al,0x85
  4233fe:	out    dx,eax
  4233ff:	mov    dl,0x4a
  423401:	lea    ebp,[edx+0x3f]
  423404:	push   esp
  423405:	lea    esi,[edx+0x5f]
  423408:	push   esp
  423409:	push   ebx
  42340a:	js     0x42338e
  42340c:	mov    esp,esi
  42340e:	or     DWORD PTR [ebp-0x1],ecx
  423411:	push   eax
  423412:	add    bl,bh
  423414:	loopne 0x423411
  423416:	and    bl,BYTE PTR [edi+0x742f4014]
  42341c:	jns    0x4233fa
  42341e:	mov    dl,0x47
  423420:	cmove  ebx,DWORD PTR [edx+0x3f]
  423424:	call   DWORD PTR ds:0x3f371b
  42342a:	lods   al,BYTE PTR ds:[esi]
  42342b:	xchg   ebp,eax
  42342c:	or     BYTE PTR [ebp+0x2b],dh
  42342f:	dec    esi
  423430:	jp     0x42343a
  423432:	xor    BYTE PTR [ebx+0x72f0105],cl
  423438:	out    0xc,eax
  42343a:	add    BYTE PTR [eax],al
  42343c:	retf   
  42343d:	mov    ah,0xff
  42343f:	xchg   esp,esi
  423441:	inc    BYTE PTR [ecx]
  423443:	dec    ebp
  423444:	out    0xe0,eax
  423446:	int3   
  423447:	or     esi,DWORD PTR [eax+0x2f0004ad]
  42344d:	add    BYTE PTR [ecx-0x20ad4bf8],0xc2
  423454:	jmp    0x482e:0x2c8705bf
  42345b:	hlt    
  42345c:	sub    al,0xcf
  42345e:	cmp    DWORD PTR [ebp+0x63],0x3b
  423462:	push   cs
  423463:	jg     0x4233e9
  423465:	loop   0x423466
  423467:	sti    
  423468:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423469:	inc    edx
  42346a:	out    0xb,eax
  42346c:	cwde   
  42346d:	inc    edi
  42346e:	or     DWORD PTR [eax+0x2f],ebp
  423471:	pop    es
  423472:	(bad)  
  423473:	aas    
  423474:	(bad)  
  423476:	loop   0x4234f2
  423478:	out    dx,eax
  423479:	push   0x3c
  42347b:	fadd   DWORD PTR [edi+0x14]
  42347e:	xlat   BYTE PTR ds:[ebx]
  42347f:	add    ebp,DWORD PTR [edi]
  423481:	imul   esp,DWORD PTR [ecx+0x6bfe728c],0x786224cc
  42348b:	add    ebp,DWORD PTR [edi]
  42348d:	ficomp WORD PTR [esi+0x60]
  423490:	jecxz  0x423462
  423492:	test   eax,0x8e126a8c
  423497:	sbb    BYTE PTR [eax+0x2dfd66ee],dh
  42349d:	nop
  42349e:	repz add BYTE PTR ds:[eax],al
  4234a2:	clc    
  4234a3:	xchg   esp,eax
  4234a4:	out    dx,eax
  4234a5:	stc    
  4234a6:	outs   dx,BYTE PTR ds:[esi]
  4234a7:	loop   0x423491
  4234a9:	js     0x4234db
  4234ab:	leave  
  4234ac:	lahf   
  4234ad:	push   es
  4234ae:	jmp    0x584ba313
  4234b3:	add    al,0x7e
  4234b5:	or     al,0xb2
  4234b7:	sahf   
  4234b8:	jmp    0x423446
  4234ba:	jb     0x4234ce
  4234bc:	ins    BYTE PTR es:[edi],dx
  4234bd:	inc    ebp
  4234be:	mov    ecx,0x58f7dc1c
  4234c3:	daa    
  4234c4:	adc    DWORD PTR [ecx-0x68],edx
  4234c7:	in     al,dx
  4234c8:	pop    esp
  4234c9:	les    esp,FWORD PTR [esi-0x65147656]
  4234cf:	dec    edi
  4234d0:	xor    eax,DWORD PTR [edx]
  4234d2:	fcomp  QWORD PTR [esp+esi*4]
  4234d5:	out    0xb6,eax
  4234d7:	mov    ds:0x2961eb4d,al
  4234dc:	sbb    eax,DWORD PTR [edx]
  4234de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4234df:	stos   BYTE PTR es:[edi],al
  4234e0:	or     DWORD PTR [edx+edi*8+0x7b505e4d],ecx
  4234e7:	rcr    BYTE PTR [esi],1
  4234e9:	mov    edx,?
  4234eb:	inc    ebp
  4234ec:	jo     0x423566
  4234ee:	and    DWORD PTR [esi+0x0],0xffffffa4
  4234f2:	adc    dh,0x5d
  4234f5:	inc    ebp
  4234f6:	(bad)  
  4234f7:	loop   0x423532
  4234f9:	inc    esp
  4234fa:	aaa    
  4234fb:	xchg   edx,eax
  4234fc:	add    al,0x22
  4234fe:	push   0xffffff92
  423500:	push   es
  423501:	mov    al,fs:0xdfe83e
  423507:	add    BYTE PTR [esi+ebx*8],bh
  42350a:	add    dl,dl
  42350c:	push   esi
  42350d:	aad    0x5d
  42350f:	mov    ch,0x98
  423511:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423512:	xchg   DWORD PTR [esi],esp
  423514:	outs   dx,DWORD PTR ds:[esi]
  423515:	popf   
  423516:	addr16 mov al,ds:0x6923
  42351a:	jae    0x4234fd
  42351c:	add    al,0x85
  42351e:	(bad)  
  42351f:	lahf   
  423520:	cs popa 
  423522:	rcr    BYTE PTR ds:0xcd4b6350,0xb3
  423529:	sbb    eax,0x1b3ba967
  42352e:	add    eax,0x3ca7a428
  423533:	add    ebp,DWORD PTR [ebx]
  423535:	imul   ecx,DWORD PTR [ebp+0x49],0xb3e8ae5c
  42353c:	call   0x2a953059
  423541:	arpl   WORD PTR [ebp-0x1f],di
  423544:	mov    ebx,0x2b62e8a1
  423549:	lds    eax,FWORD PTR [ebp+0x55]
  42354c:	sub    al,0xa1
  42354e:	call   0x84c45bd
  423553:	out    0xb3,al
  423555:	jecxz  0x423553
  423557:	cs cs push es
  42355a:	dec    eax
  42355b:	es not ch
  42355e:	xchg   DWORD PTR [esi-0x1933f9d0],esp
  423564:	sub    al,0xde
  423566:	data16 icebp 
  423568:	mov    cl,0xa1
  42356a:	mov    al,ds:0xb6000000
  42356f:	push   0xa53e3c57
  423574:	int3   
  423575:	inc    BYTE PTR [ecx+0x68]
  423578:	aas    
  423579:	cmp    BYTE PTR [ebp+0x22],bh
  42357c:	je     0x423583
  42357e:	push   ecx
  42357f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423580:	cmp    al,0xeb
  423582:	and    eax,0xeea0756b
  423587:	outs   dx,DWORD PTR ds:[esi]
  423588:	pop    es
  423589:	add    BYTE PTR [esi],dl
  42358b:	or     bl,BYTE PTR [ecx]
  42358d:	lea    ebx,[ebx+0x42]
  423590:	call   0x121371c
  423595:	dec    DWORD PTR [ecx-0x26]
  423598:	add    DWORD PTR [edi+0x12],0x7
  42359c:	xchg   ebp,eax
  42359d:	clts   
  42359f:	fisttp WORD PTR [ecx+0x57680e5f]
  4235a5:	cmp    al,0xc1
  4235a7:	xchg   ebx,eax
  4235a8:	mov    esp,0xf62a74e8
  4235ad:	call   DWORD PTR [ebp-0x6db8cce2]
  4235b3:	stc    
  4235b4:	shl    bh,0x9e
  4235b7:	jge    0x42360f
  4235b9:	pop    ebx
  4235ba:	(bad)  
  4235bb:	and    BYTE PTR [eax+eax*1],al
  4235be:	jnp    0x423629
  4235c0:	in     al,dx
  4235c1:	and    DWORD PTR [edx-0x49],0x4b
  4235c5:	push   esi
  4235c6:	jmp    0xd4ab334
  4235cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235cc:	inc    eax
  4235cd:	test   DWORD PTR [esi-0x12],eax
  4235d0:	test   BYTE PTR [edx+0x0],al
  4235d3:	add    BYTE PTR [esi+ebx*8-0x393e7d00],al
  4235da:	add    BYTE PTR [edi],cl
  4235dc:	or     dl,bh
  4235de:	cli    
  4235df:	inc    DWORD PTR [esi-0x79ffff7a]
  4235e5:	out    dx,al
  4235e6:	push   0xff5a2ff4
  4235eb:	(bad)  
  4235ec:	(bad)  
  4235ed:	mov    ecx,0x9147d85a
  4235f2:	out    dx,al
  4235f3:	add    BYTE PTR [edi],ch
  4235f5:	mov    BYTE PTR [edx-0x2c],ah
  4235f8:	das    
  4235f9:	sub    bh,0x87
  4235fc:	jmp    0x494a:0x69874fec
  423603:	enter  0x8e2f,0x49
  423607:	int3   
  423608:	mov    dh,0xba
  42360a:	aam    0xe8
  42360c:	stos   BYTE PTR es:[edi],al
  42360d:	push   ds
  42360e:	cli    
  42360f:	sti    
  423610:	mov    bl,0x47
  423612:	or     eax,DWORD PTR [ebp+edx*1+0x3cffff07]
  423619:	inc    edi
  42361a:	mov    edx,esi
  42361c:	jnp    0x423656
  42361e:	jg     0x42365a
  423620:	das    
  423621:	cli    
  423622:	add    eax,DWORD PTR [eax-0x51]
  423625:	stc    
  423626:	add    eax,0x45046300
  42362b:	out    0xde,eax
  42362d:	and    al,BYTE PTR [eax+eax*1]
  423630:	das    
  423631:	xchg   DWORD PTR [ebp+0x5],edi
  423634:	addr16 test ah,cl
  423637:	cli    
  423638:	add    BYTE PTR [eax],al
  42363a:	outs   dx,DWORD PTR ds:[esi]
  42363b:	add    BYTE PTR [eax-0xf8d131],cl
  423641:	shl    DWORD PTR [edx+0x7c],0x4
  423645:	out    0xff,eax
  423647:	mov    DWORD PTR [ecx-0x38],ecx
  42364a:	xchg   edi,eax
  42364b:	xlat   BYTE PTR ds:[ebx]
  42364c:	in     eax,dx
  42364d:	cli    
  42364e:	mov    al,ds:0xb2e4497e
  423653:	(bad)  
  423654:	or     eax,DWORD PTR [edx+eax*8-0x770000fa]
  42365b:	pop    eax
  42365c:	or     eax,DWORD PTR [edi+0x4011533a]
  423662:	das    
  423663:	fisub  WORD PTR [edx]
  423665:	ja     0x42368e
  423667:	lods   eax,DWORD PTR ds:[esi]
  423668:	sbb    dl,dh
  42366a:	dec    esp
  42366c:	sub    DWORD PTR [ebx-0x315f998],ecx
  423672:	push   esp
  423673:	sbb    DWORD PTR [ebp-0x3c],ebp
  423676:	(bad)  
  423678:	ins    BYTE PTR es:[edi],dx
  423679:	dec    ecx
  42367a:	ja     0x423682
  42367c:	dec    ecx
  42367d:	in     eax,dx
  42367e:	inc    ebp
  42367f:	sbb    DWORD PTR [esi-0x24],ebx
  423682:	mov    dl,0x35
  423684:	pop    esp
  423685:	ret    0x9b46
  423688:	call   0xbc66590
  42368d:	push   0x21
  42368f:	push   0x24
  423691:	hlt    
  423692:	jg     0x4236ad
  423694:	cmp    ch,BYTE PTR [eax]
  423696:	test   al,0xa0
  423698:	adc    esp,ebp
  42369a:	jmp    0x4236e7
  42369c:	mov    bl,0xfe
  42369e:	add    BYTE PTR [eax],al
  4236a0:	mov    dh,0xa2
  4236a2:	leave  
  4236a3:	xor    bh,0x18
  4236a6:	xacquire xchg DWORD PTR [ebp-0x21],edx
  4236aa:	jmp    0x1787b2
  4236af:	add    DWORD PTR [edx-0x2bac4e5e],esi
  4236b5:	xchg   edx,eax
  4236b6:	(bad)  
  4236b7:	(bad)  
  4236b8:	std    
  4236b9:	sbb    ah,dh
  4236bb:	out    0xd7,eax
  4236bd:	push   esp
  4236be:	aaa    
  4236bf:	std    
  4236c0:	les    esp,FWORD PTR [esi+0x24]
  4236c3:	call   0xea44d00
  4236c8:	stos   DWORD PTR es:[edi],eax
  4236c9:	retf   
  4236ca:	call   0xaaa765d2
  4236cf:	sub    edx,DWORD PTR [eax+0x35]
  4236d2:	push   cs
  4236d3:	ret    
  4236d4:	and    ah,bl
  4236d6:	jo     0x423738
  4236d8:	fwait
  4236d9:	add    al,0xf1
  4236db:	jmp    0x4236cf
  4236dd:	and    eax,DWORD PTR [eax]
  4236df:	aaa    
  4236e0:	and    DWORD PTR [esi+0x45],0x891e3d35
  4236e7:	les    eax,FWORD PTR [esi+edx*8+0x62391545]
  4236ee:	jmp    edi
  4236f0:	sub    al,0xde
  4236f2:	mov    DWORD PTR [eax+ecx*2+0x210945d6],esp
  4236f9:	pop    esp
  4236fa:	int3   
  4236fb:	jmp    0x7cca152c
  423700:	push   eax
  423701:	pusha  
  423702:	inc    ebp
  423703:	stc    
  423704:	add    BYTE PTR [eax],al
  423706:	scas   al,BYTE PTR es:[edi]
  423707:	fnstenv [eax-0x529ddc17]
  42370d:	jmp    0xedca153e
  423712:	fsub   QWORD PTR [eax+0x8]
  423715:	gs in  al,0xe3
  423718:	test   BYTE PTR [ecx-0x5ff21d5],cl
  42371e:	or     eax,DWORD PTR [eax]
  423720:	or     BYTE PTR [ebp-0xc],ch
  423723:	xchg   edx,eax
  423724:	or     DWORD PTR [esi],esp
  423726:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423727:	jmp    0x9a75:0xd9f46938
  42372e:	push   ds
  42372f:	push   ds
  423730:	mov    DWORD PTR [edi+ecx*8],ebp
  423733:	aad    0x45
  423735:	test   DWORD PTR [ecx-0x59],esp
  423738:	xchg   DWORD PTR [ebx+esi*8],esi
  42373b:	imul   eax,DWORD PTR [eax+ebp*2],0xfd00d6ae
  423742:	add    BYTE PTR [edi+0x0],bl
  423745:	imul   edi,ebx,0xa61c74dd
  42374b:	test   eax,0x4d4f72f0
  423750:	push   eax
  423751:	iret   
  423752:	imul   esp,DWORD PTR [ecx+0x65450ea8],0x45
  423759:	add    BYTE PTR [edx+0x64741519],bh
  42375f:	fwait
  423760:	add    BYTE PTR [ebp+0x458943cb],cl
  423766:	mul    BYTE PTR [edx+0x5d]
  423769:	mov    ah,0x0
  42376b:	add    bh,bh
  42376d:	xchg   esi,eax
  42376e:	mov    eax,0xfb1f93c7
  423773:	call   DWORD PTR [esi-0x25]
  423776:	call   0xf75a3720
  42377b:	mov    ecx,DWORD PTR [ebx-0x3c3f7bfd]
  423781:	aad    0x83
  423783:	inc    ebp
  423784:	sbb    ah,BYTE PTR [edx-0x2ad5ba77]
  42378a:	inc    ebp
  42378b:	in     al,0xd4
  42378d:	inc    esi
  42378e:	test   ebx,ebx
  423790:	sub    dl,0x83
  423793:	inc    ebp
  423794:	add    ah,BYTE PTR [ecx]
  423796:	add    al,0x3
  423798:	xor    BYTE PTR [ebp+0x19d64583],bl
  42379e:	xor    al,0xb0
  4237a0:	leave  
  4237a1:	out    dx,eax
  4237a2:	je     0x4237b6
  4237a4:	push   esi
  4237a5:	loop   0x42372a
  4237a7:	dec    ebp
  4237a8:	mov    dh,0xaa
  4237aa:	div    DWORD PTR [edi+edx*2]
  4237ad:	dec    bp
  4237af:	hlt    
  4237b0:	aad    0x25
  4237b2:	push   ecx
  4237b3:	call   0x385b6c
  4237b8:	lds    esi,FWORD PTR [edx]
  4237ba:	mov    DWORD PTR [ebp-0x42],ebx
  4237bd:	gs jge 0x4237c8
  4237c0:	dec    ecx
  4237c1:	mov    al,ds:0xe138bec
  4237c6:	xor    eax,DWORD PTR [ebp-0x5a]
  4237c9:	jmp    0x1a8b6c48
  4237ce:	idiv   DWORD PTR [ebx]
  4237d0:	add    BYTE PTR [eax],al
  4237d2:	jmp    0x2f4cad99
  4237d7:	mov    al,0x72
  4237d9:	hlt    
  4237da:	xchg   DWORD PTR [edx-0x546f053a],eax
  4237e0:	sbb    eax,DWORD PTR [ebp-0x4f7ae9c]
  4237e6:	cli    
  4237e7:	fsub   st,st(7)
  4237e9:	je     0x423851
  4237eb:	(bad)  
  4237ec:	cld    
  4237ed:	and    edx,edx
  4237ef:	clc    
  4237f0:	mov    BYTE PTR [ebp+0x63],al
  4237f3:	lea    eax,[esp-0x4a]
  4237f7:	dec    edi
  4237f8:	daa    
  4237f9:	ret    0xebf2
  4237fc:	inc    BYTE PTR [esi+0x7d88e8ea]
  423802:	addr16 in al,dx
  423804:	jb     0x4237cf
  423806:	inc    ecx
  423807:	jae    0x7abd8752
  42380d:	lock inc edi
  42380f:	stos   BYTE PTR es:[edi],al
  423810:	int    0xfa
  423812:	sub    BYTE PTR [ebx-0x63e8378f],al
  423818:	(bad)  
  42381a:	sbb    BYTE PTR [edx+0x1204f741],al
  423820:	mov    BYTE PTR [ebp-0x9],dh
  423823:	das    
  423824:	push   edi
  423825:	jecxz  0x423828
  423827:	dec    ebp
  423828:	xor    al,al
  42382a:	pop    eax
  42382b:	in     eax,0x5b
  42382d:	leave  
  42382e:	in     eax,dx
  42382f:	add    edi,edi
  423831:	push   esp
  423832:	mov    ah,0x63
  423834:	test   esp,ebp
  423836:	add    BYTE PTR [eax],al
  423838:	ud0    edi,esi
  42383b:	jmp    FWORD PTR [edx+ebx*8-0xa83ff04]
  423842:	dec    edi
  423843:	push   0x43740f
  423848:	jmp    0xb93e280f
  42384d:	sub    bl,BYTE PTR [ebx-0x162190f2]
  423853:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423854:	imul   esi,DWORD PTR ds:0xcba803a6,0x11
  42385b:	fistp  DWORD PTR [eax-0x22]
  42385e:	pusha  
  42385f:	inc    ecx
  423860:	lahf   
  423861:	popa   
  423862:	inc    ecx
  423863:	or     BYTE PTR [eax+0x26ecb],dl
  423869:	push   ss
  42386a:	in     eax,0x75
  42386c:	dec    eax
  42386d:	fldenv [ebx+esi*8+0x421bc3fc]
  423874:	xor    ebx,edi
  423876:	xchg   ebp,eax
  423877:	sbb    ebp,DWORD PTR [eax-0x37051e4d]
  42387d:	loope  0x4238db
  42387f:	inc    edx
  423880:	and    edx,DWORD PTR ds:0x15180b76
  423886:	cdq    
  423887:	jmp    0x423858
  423889:	aas    
  42388a:	repnz cli 
  42388c:	mov    dl,0x1e
  42388e:	jo     0x4238f5
  423890:	test   al,0xdc
  423892:	adc    BYTE PTR [ecx+0x1f],al
  423895:	loope  0x423870
  423897:	xchg   BYTE PTR [edx+0x8ce50e],ah
  42389d:	add    BYTE PTR [edx-0x573da9fa],ah
  4238a3:	mov    dl,0xf1
  4238a5:	imul   ecx,DWORD PTR [edi+0x35],0x26
  4238a9:	add    al,0x4
  4238ab:	jmp    0x423832
  4238ad:	adc    eax,0x465ede6f
  4238b2:	outs   dx,DWORD PTR ds:[esi]
  4238b3:	pop    ebx
  4238b4:	test   eax,0xe836b30a
  4238b9:	add    ebp,DWORD PTR [edi]
  4238bb:	xchg   cl,ch
  4238bd:	add    ebp,DWORD PTR [edi]
  4238bf:	out    dx,al
  4238c0:	add    edi,esi
  4238c2:	jp     0x4238a2
  4238c4:	jmp    0xadf4f31c
  4238c9:	jmp    0x4238b7
  4238cb:	add    eax,DWORD PTR [eax]
  4238cd:	jmp    0x9d8f95fe
  4238d2:	test   eax,0xbbe9c87a
  4238d7:	mov    ds:0x25b1b8c0,al
  4238dc:	ret    0xe0ac
  4238df:	fisttp QWORD PTR [ecx-0x3efa2f5c]
  4238e5:	dec    edi
  4238e6:	xchg   BYTE PTR [eax],bl
  4238e8:	test   BYTE PTR [ecx],ch
  4238ea:	xor    eax,0x2ce8965a
  4238ef:	fsubp  st(1),st
  4238f1:	sub    bx,si
  4238f4:	add    BYTE PTR [ebx+0x548db931],dl
  4238fa:	dec    esi
  4238fb:	adc    bl,bh
  4238fd:	push   ss
  4238fe:	inc    esp
  4238ff:	pop    edx
  423900:	dec    edx
  423901:	jmp    0x5d6e3906
  423906:	lock adc DWORD PTR [ecx-0x60105ba],ebp
  42390d:	fldcw  WORD PTR [edi-0x16]
  423910:	retf   0x5a13
  423913:	pop    esp
  423914:	scas   al,BYTE PTR es:[edi]
  423915:	and    eax,DWORD PTR [ecx]
  423917:	jmp    0x3956b548
  42391c:	xchg   ecx,eax
  42391d:	fimul  WORD PTR [ebp-0x4e8a064]
  423923:	into   
  423924:	stos   BYTE PTR es:[edi],al
  423925:	es sti 
  423927:	shl    DWORD PTR [edx+eax*2+0x1e80befa],1
  42392e:	jp     0x423979
  423930:	mov    dl,0x17
  423932:	(bad)  
  423933:	xor    edx,DWORD PTR [edi]
  423935:	popa   
  423936:	mov    ch,0x7d
  423938:	in     eax,0x17
  42393a:	sti    
  42393b:	popa   
  42393c:	sahf   
  42393d:	fiadd  WORD PTR [eax]
  42393f:	jmp    0x8ef01108
  423944:	(bad)  
  423945:	popa   
  423946:	test   DWORD PTR [eax],eax
  423948:	mov    dl,BYTE PTR [esi]
  42394a:	idiv   edi
  42394c:	es popa 
  42394e:	mov    esi,0x7bc4ad50
  423953:	inc    ebp
  423955:	test   BYTE PTR [ebx],dl
  423957:	(bad)  
  423958:	retf   
  423959:	dec    esi
  42395a:	std    
  42395b:	inc    DWORD PTR [ecx]
  42395d:	push   edx
  42395e:	mov    eax,0xe8df8600
  423963:	push   ds
  423964:	adc    edx,DWORD PTR ds:0x8df7
  42396a:	sbb    ecx,esi
  42396c:	idiv   edi
  42396e:	inc    ecx
  42396f:	stos   BYTE PTR es:[edi],al
  423970:	add    esi,0xffffffed
  423973:	sub    cl,BYTE PTR [ebp-0x8e9857b]
  423979:	jmp    DWORD PTR [esi-0x2cf78aea]
  42397f:	xchg   edx,eax
  423980:	fdiv   st(2),st
  423982:	inc    ecx
  423983:	adc    eax,0x7648e850
  423988:	idiv   bh
  42398a:	fistp  DWORD PTR [ecx]
  42398c:	pop    es
  42398d:	xchg   ebp,eax
  42398e:	push   ss
  42398f:	pop    esi
  423990:	shl    BYTE PTR [ebp+0x4f],0xca
  423994:	shl    BYTE PTR [esi-0x31],0x92
  423998:	fdiv   st(2),st
  42399a:	adc    DWORD PTR [esi],edx
  42399c:	mov    ecx,0xdf17ee
  4239a1:	lea    ecx,[ebx-0x1e001103]
  4239a7:	sbb    al,0x0
  4239a9:	add    BYTE PTR [esi-0x59],dl
  4239ac:	jne    0x4239a7
  4239ae:	jge    0x423984
  4239b0:	call   0xe99c4840
  4239b5:	or     al,0x85
  4239b7:	pop    ds
  4239b8:	or     al,0x51
  4239ba:	es pop ebx
  4239bc:	jge    0x423956
  4239be:	add    eax,0x2f68e81f
  4239c3:	nop
  4239c4:	(bad)  
  4239c5:	jmp    FWORD PTR [ebx-0x45c194bc]
  4239cb:	mov    DWORD PTR [ebx-0x6],eax
  4239ce:	add    BYTE PTR [eax],al
  4239d0:	rcl    BYTE PTR [ebx-0x3f5a0dcc],0x2b
  4239d7:	cwde   
  4239d8:	(bad)  
  4239d9:	mul    DWORD PTR [ebx-0x7bbd5706]
  4239df:	shr    DWORD PTR [ebx],0x88
  4239e2:	stc    
  4239e3:	adc    BYTE PTR ds:0x9c0349b,bl
  4239e9:	jle    0x4239e9
  4239eb:	out    0xac,eax
  4239ed:	mov    edx,0x39b6fbf8
  4239f2:	out    dx,eax
  4239f3:	xor    di,WORD PTR [edx+0x3a]
  4239f7:	lock fistp WORD PTR [esi]
  4239fa:	sti    
  4239fb:	mov    WORD PTR [edx+0x60fbf948],?
  423a01:	push   esp
  423a02:	add    BYTE PTR [ebp-0x4071185],0xff
  423a09:	fmul   st(2),st
  423a0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a0c:	das    
  423a0d:	add    eax,0x133a7ce7
  423a12:	repz jmp 0xfc3544b9
  423a18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a19:	sti    
  423a1a:	xor    ah,BYTE PTR [ecx]
  423a1c:	mov    ds:0x9b2d38db,eax
  423a21:	or     esi,DWORD PTR [ebx]
  423a23:	inc    eax
  423a24:	mov    ds:0x9b5a32fb,eax
  423a29:	sti    
  423a2a:	xor    bh,dl
  423a2c:	adc    al,0x9
  423a2e:	scas   al,BYTE PTR es:[edi]
  423a2f:	add    al,0x14
  423a31:	push   cs
  423a32:	scas   al,BYTE PTR es:[edi]
  423a33:	inc    BYTE PTR [eax]
  423a35:	add    BYTE PTR ds:0x5ffae02,al
  423a3b:	push   es
  423a3c:	scas   al,BYTE PTR es:[edi]
  423a3d:	add    DWORD PTR [eax-0x22],esi
  423a40:	outs   dx,BYTE PTR ds:[esi]
  423a41:	jno    0x423a7a
  423a43:	adc    DWORD PTR [ebx],edx
  423a45:	or     ah,dl
  423a47:	mov    cl,ah
  423a49:	dec    esi
  423a4a:	aam    0xeb
  423a4c:	adc    eax,0x19de6f12
  423a51:	xor    ebp,edi
  423a53:	gs stos BYTE PTR es:[edi],al
  423a55:	in     al,dx
  423a56:	bound  ecx,QWORD PTR [ebx]
  423a58:	jb     0x423a51
  423a5a:	stos   DWORD PTR es:[edi],eax
  423a5b:	push   ds
  423a5c:	cmc    
  423a5d:	sub    al,0x34
  423a5f:	push   eax
  423a60:	adc    DWORD PTR es:[edi-0x18e42a22],0xffffffe0
  423a68:	ins    DWORD PTR es:[edi],dx
  423a69:	add    ch,BYTE PTR [esi]
  423a6b:	fsubp  st(1),st
  423a6d:	dec    ebx
  423a6e:	xor    al,0x5a
  423a70:	je     0x423a76
  423a72:	das    
  423a73:	fidiv  WORD PTR [ecx-0x43668791]
  423a79:	or     esi,eax
  423a7b:	mov    ds:0x9b6d0531,al
  423a80:	sbb    al,BYTE PTR ds:0x70e715af
  423a86:	and    eax,0x47b7ac63
  423a8b:	inc    ebx
  423a8c:	add    al,0xf6
  423a8e:	inc    esp
  423a8f:	add    DWORD PTR gs:[ecx-0x769c74bc],eax
  423a96:	ret    0x151
  423a99:	sti    
  423a9a:	add    BYTE PTR [eax],al
  423a9c:	dec    ebx
  423a9d:	adc    dl,ch
  423a9f:	mov    cl,BYTE PTR [edx+0x2740dbe6]
  423aa5:	fucomip st,st(2)
  423aa7:	sub    BYTE PTR ds:0xa803e9df,0x8c
  423aae:	fisttp QWORD PTR [edx+0x4070e648]
  423ab4:	aaa    
  423ab5:	pop    ebx
  423ab6:	mov    bl,0x7c
  423ab8:	xor    BYTE PTR [esi-0x75e04a00],ch
  423abe:	push   cs
  423abf:	sub    DWORD PTR [ebx],esi
  423ac1:	pop    ecx
  423ac2:	lock ins BYTE PTR es:[edi],dx
  423ac4:	shl    ah,cl
  423ac6:	mov    dl,BYTE PTR [ecx+0x6400de2c]
  423acc:	outs   dx,DWORD PTR ds:[esi]
  423acd:	cs push eax
  423acf:	add    edi,ebp
  423ad1:	add    eax,0x14baa4b1
  423ad6:	xchg   DWORD PTR [ebx+eiz*8],ebp
  423ad9:	nop
  423ada:	mov    DWORD PTR gs:[edi+eiz*2],ebp
  423ade:	dec    ebp
  423adf:	xchg   ecx,eax
  423ae0:	add    ebx,DWORD PTR [ecx-0x38]
  423ae3:	das    
  423ae4:	out    dx,eax
  423ae5:	sub    DWORD PTR [eax],eax
  423ae7:	jo     0x423ad8
  423ae9:	xor    eax,ebp
  423aeb:	and    DWORD PTR [eax+0x13],esi
  423aee:	sti    
  423aef:	gs ins BYTE PTR es:[edi],dx
  423af1:	in     al,0x85
  423af3:	fs sub al,0xde
  423af6:	add    BYTE PTR [edi+edi*8+0x29],ch
  423afa:	call   0xfb558b54
  423aff:	inc    eax
  423b00:	add    BYTE PTR [eax],al
  423b02:	xchg   ecx,eax
  423b03:	fld    QWORD PTR [eax]
  423b05:	jmp    0xb69e0ce0
  423b0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b0b:	pop    edx
  423b0c:	pop    esp
  423b0d:	push   ss
  423b0e:	pop    ecx
  423b0f:	adc    al,0x66
  423b11:	jmp    0x99574ff2
  423b16:	xor    bl,BYTE PTR [esi-0x1e879600]
  423b1c:	lea    ebp,[eax+eiz*2+0x16]
  423b20:	sti    
  423b21:	out    dx,al
  423b22:	mov    ah,0x59
  423b24:	ins    BYTE PTR es:[edi],dx
  423b25:	out    0x1a,al
  423b27:	adc    al,0x8d
  423b29:	fs ja  0x423b3f
  423b2c:	sti    
  423b2d:	(bad)  
  423b2e:	jnp    0x423ba8
  423b30:	add    dh,cl
  423b32:	cdq    
  423b33:	loop   0x423abe
  423b35:	add    BYTE PTR [ebx-0x4600084a],ch
  423b3b:	or     DWORD PTR [esi+0x8],ebp
  423b3e:	ror    DWORD PTR [edi+0x999ff70],0xfb
  423b45:	add    dh,dl
  423b47:	fcomi  st,st(7)
  423b49:	adc    eax,0x40df36
  423b4e:	inc    ebp
  423b4f:	adc    al,BYTE PTR [ecx]
  423b51:	rcpps  xmm1,xmm3
  423b54:	idiv   edi
  423b56:	test   eax,0x3970bd5d
  423b5b:	or     edi,esi
  423b5d:	add    cl,cl
  423b5f:	xchg   ecx,eax
  423b60:	and    al,0xff
  423b62:	sbb    DWORD PTR [ecx],ecx
  423b64:	lea    eax,[ebp+0x13620000]
  423b6a:	idiv   edi
  423b6c:	(bad)  
  423b6d:	add    eax,DWORD PTR [esi-0x6c]
  423b70:	clc    
  423b71:	or     cl,ch
  423b73:	adc    edi,ecx
  423b75:	or     bh,dh
  423b77:	(bad)  
  423b78:	rol    DWORD PTR [edx],cl
  423b7a:	add    cl,ch
  423b7c:	jl     0x423b88
  423b7e:	idiv   edi
  423b80:	nop
  423b81:	or     dh,BYTE PTR [ebp+0x8]
  423b84:	ror    DWORD PTR [edx],0x15
  423b87:	je     0x423bed
  423b89:	fwait
  423b8a:	add    BYTE PTR [eax+0x75],dl
  423b8d:	sbb    eax,DWORD PTR [ebx-0xb43d131]
  423b93:	(bad)  
  423b94:	cmp    DWORD PTR [esi-0x40],ebx
  423b97:	jne    0x423bfe
  423b99:	pop    eax
  423b9a:	inc    ebp
  423b9b:	aam    0x1e
  423b9d:	cmp    eax,0x6639fee4
  423ba2:	clc    
  423ba3:	test   DWORD PTR [ecx],ebx
  423ba5:	sbb    cl,0xe9
  423ba8:	or     di,si
  423bab:	dec    DWORD PTR [ebx+0x2fe8d480]
  423bb1:	sbb    eax,esp
  423bb3:	cli    
  423bb4:	or     BYTE PTR [edx+eax*2+0x78842ef8],al
  423bbb:	and    BYTE PTR [esi-0x2d],cl
  423bbe:	and    eax,0xb27a1266
  423bc3:	mov    esp,0x58f43fe9
  423bc8:	xlat   BYTE PTR ds:[ebx]
  423bc9:	xchg   ebx,eax
  423bca:	test   eax,0xd80000fb
  423bcf:	mov    esi,DWORD PTR [eax+0x1c]
  423bd2:	inc    ebp
  423bd3:	es mov bl,al
  423bd6:	mov    ah,0x6e
  423bd8:	out    0x65,eax
  423bda:	jmp    0xefc83035
  423bdf:	or     DWORD PTR [esi+eax*4],eax
  423be2:	imul   esp,DWORD PTR [esi],0xf9233733
  423be8:	jp     0x423baa
  423bea:	sbb    al,BYTE PTR [ecx]
  423bec:	or     BYTE PTR [ebp-0x69],0x14
  423bf0:	mov    BYTE PTR [edi],bh
  423bf2:	inc    ebx
  423bf3:	hlt    
  423bf4:	cmc    
  423bf5:	mov    DWORD PTR [edx],ecx
  423bf7:	sar    DWORD PTR [eax],1
  423bf9:	ret    
  423bfa:	sti    
  423bfb:	push   cs
  423bfc:	pop    ebp
  423bfd:	cmp    DWORD PTR [edi],esi
  423bff:	dec    ecx
  423c00:	cs xchg esp,ebp
  423c03:	adc    al,0x38
  423c05:	ret    
  423c06:	jecxz  0x423be2
  423c08:	pop    edx
  423c09:	cmp    DWORD PTR [edi],esp
  423c0b:	jno    0x423c27
  423c0d:	cmp    WORD PTR [edx-0x18ac1b56],ax
  423c14:	hlt    
  423c15:	pop    eax
  423c16:	push   edi
  423c17:	popa   
  423c18:	test   eax,0x70d740fb
  423c1d:	xor    BYTE PTR [esi+esi*4+0x75036ff4],ah
  423c24:	add    BYTE PTR [ebp+0x1b],0x68
  423c28:	out    0x99,eax
  423c2a:	(bad)  
  423c2c:	jecxz  0x423c21
  423c2e:	cwde   
  423c2f:	and    bh,cl
  423c31:	fiadd  WORD PTR [eax]
  423c33:	add    BYTE PTR [ebx+0x59],al
  423c36:	cmp    BYTE PTR es:[eax+0x25],al
  423c3a:	push   ebp
  423c3b:	push   eax
  423c3c:	scas   eax,DWORD PTR es:[edi]
  423c3d:	(bad)  
  423c3e:	jmp    0xdaba98ba
  423c43:	cmp    BYTE PTR [edx-0x1b0c4c1e],0xa6
  423c4a:	rol    DWORD PTR [eax-0x77],0xd
  423c4e:	mov    ds:0x6ed248f3,al
  423c53:	retf   0x5b7f
  423c56:	sub    al,0xe0
  423c58:	pop    edi
  423c59:	idiv   ch
  423c5b:	mov    dh,0xc5
  423c5d:	or     eax,0xc92bc866
  423c62:	mov    ds:0xa9e10072,al
  423c67:	push   esp
  423c68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c69:	xchg   ebx,eax
  423c6a:	jge    0x423bed
  423c6c:	and    al,BYTE PTR [edx]
  423c6e:	iret   
  423c6f:	add    eax,0x8c2df5f7
  423c74:	das    
  423c75:	ficomp WORD PTR [esi+0x49]
  423c78:	xchg   ebx,eax
  423c79:	(bad)  
  423c7a:	in     al,0x47
  423c7c:	mov    eax,fs:0xd2578e9
  423c82:	mov    ah,0xdf
  423c84:	xchg   DWORD PTR ds:0x6164f22d,edx
  423c8a:	(bad)  
  423c8b:	fild   QWORD PTR [edi]
  423c8d:	stc    
  423c8e:	out    dx,eax
  423c8f:	xchg   dl,ch
  423c91:	add    eax,0x2ceba6c9
  423c96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c97:	add    eax,DWORD PTR [eax]
  423c99:	add    BYTE PTR [edi-0x450ced75],ch
  423c9f:	icebp  
  423ca0:	imul   ebp,DWORD PTR [edi+0x17],0xb00974df
  423ca7:	mov    BYTE PTR [eax],al
  423ca9:	shr    DWORD PTR [ecx+edx*4],0xa
  423cad:	div    DWORD PTR [edi+0x6]
  423cb0:	and    BYTE PTR [ebp+0x2f],bl
  423cb3:	add    eax,0x119f6902
  423cb8:	add    DWORD PTR [edi+esi*1-0x73],ebx
  423cbc:	dec    ebp
  423cbd:	rol    DWORD PTR [edi+ecx*1],1
  423cc0:	inc    ebp
  423cc1:	shl    esp,0xd7
  423cc4:	test   BYTE PTR [edx+0x6200de2b],bl
  423cca:	jno    0x423c82
  423ccc:	ret    0xe024
  423ccf:	or     al,0x84
  423cd1:	test   eax,0xf666dc57
  423cd6:	scas   eax,DWORD PTR es:[edi]
  423cd7:	mov    dh,BYTE PTR [ecx+esi*1-0x7156a915]
  423cde:	mov    ebp,0x5919c364
  423ce3:	loope  0x423ccc
  423ce5:	and    dh,BYTE PTR [ebp+0x20d9f8a2]
  423ceb:	aad    0xfb
  423ced:	cli    
  423cee:	dec    eax
  423cef:	test   BYTE PTR [ebx],0x92
  423cf2:	sahf   
  423cf3:	or     BYTE PTR [edi-0xf4cecc7],al
  423cf9:	ins    BYTE PTR es:[edi],dx
  423cfa:	(bad)  
  423cfb:	fadd   DWORD PTR [esi+esi*2-0x21d50000]
  423d02:	add    dl,bh
  423d04:	ins    BYTE PTR es:[edi],dx
  423d05:	(bad)  
  423d06:	aas    
  423d07:	adc    ebp,esi
  423d09:	retf   
  423d0a:	xchg   ch,ah
  423d0c:	cmp    al,0x5e
  423d0e:	stc    
  423d0f:	pop    es
  423d10:	out    0xdf,al
  423d12:	ret    0x3ced
  423d15:	in     al,0xe7
  423d17:	lock lods al,BYTE PTR ds:[esi]
  423d19:	push   es
  423d1a:	daa    
  423d1b:	pushf  
  423d1c:	xor    BYTE PTR [eax],ah
  423d1e:	add    al,0xf9
  423d20:	or     al,0x9e
  423d22:	aaa    
  423d23:	add    BYTE PTR [ebp+0x1de36ae8],al
  423d29:	les    edi,FWORD PTR [ebx+0x7b]
  423d2c:	neg    bh
  423d2e:	pop    es
  423d2f:	test   DWORD PTR [ecx+0x7c0000e2],ebp
  423d35:	fimul  DWORD PTR [ebp-0x17654183]
  423d3b:	sub    al,0xaf
  423d3d:	or     eax,0xb2c98bf7
  423d42:	bound  ecx,QWORD PTR [ecx]
  423d44:	dec    esi
  423d45:	sub    bh,BYTE PTR [ecx-0x76f24f56]
  423d4b:	inc    ebp
  423d4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d4d:	popa   
  423d4e:	jge    0x423d40
  423d50:	(bad)  
  423d51:	fiadd  WORD PTR [esp+eax*2-0x7cff2039]
  423d58:	sub    ebp,DWORD PTR [edx]
  423d5a:	add    BYTE PTR [esi+0x3b4ad6],bh
  423d60:	clc    
  423d61:	or     al,0x15
  423d63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d64:	add    BYTE PTR [eax],al
  423d66:	aam    0x9f
  423d68:	add    BYTE PTR [esi+0x67],ah
  423d6b:	push   cs
  423d6c:	ret    0x9643
  423d6f:	jne    0x423cf6
  423d71:	rcr    BYTE PTR [edx-0x5f27c60],0x4b
  423d78:	cmp    eax,DWORD PTR [eax]
  423d7a:	or     eax,DWORD PTR [edi+0x74]
  423d7d:	aaa    
  423d7e:	xchg   ecx,eax
  423d7f:	inc    esi
  423d80:	rcl    BYTE PTR [ecx-0x12],0x9e
  423d84:	mov    ds:0xc062f1fe,al
  423d89:	je     0x423da7
  423d8b:	(bad)  [edi+0x3b4c2215]
  423d91:	add    BYTE PTR [ebp+0x48],ah
  423d94:	mov    DWORD PTR [ebp+0x3e],eax
  423d97:	arpl   dx,cx
  423d99:	je     0x423dc7
  423d9b:	js     0x423e18
  423d9d:	cmp    al,0x2f
  423d9f:	cmp    eax,0x5f286f1f
  423da4:	pop    ds
  423da5:	push   esi
  423da6:	ror    DWORD PTR [ebp-0x2bdfb7e8],1
  423dac:	adc    edi,esp
  423dae:	cmc    
  423daf:	aaa    
  423db0:	inc    DWORD PTR [eax+0x64]
  423db3:	mov    edi,0x481e272
  423db8:	adc    ch,BYTE PTR [ebp+edi*1+0x7cfb04b5]
  423dbf:	std    
  423dc0:	jnp    0x423e01
  423dc2:	xor    ebx,DWORD PTR [edi+0x6d61e804]
  423dc8:	icebp  
  423dc9:	sti    
  423dca:	add    BYTE PTR [eax],al
  423dcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423dcd:	sbb    al,0x82
  423dcf:	sti    
  423dd0:	cmp    BYTE PTR [ecx-0x4d],bh
  423dd3:	add    BYTE PTR [edi],ch
  423dd5:	cmc    
  423dd6:	pop    esp
  423dd7:	cmp    al,0x79
  423dd9:	retf   
  423dda:	jnp    0x423d61
  423ddc:	iret   
  423ddd:	push   0xfffffff0
  423ddf:	sti    
  423de0:	push   ebp
  423de1:	cmc    
  423de2:	dec    esi
  423de3:	sti    
  423de4:	sbb    al,ch
  423de6:	push   ss
  423de7:	inc    eax
  423de8:	das    
  423de9:	js     0x423dae
  423deb:	or     al,0xa2
  423ded:	sbb    edi,0x4f93a8fa
  423df3:	data16 das 
  423df5:	jl     0x423e6b
  423df7:	or     al,0xa6
  423df9:	imul   ebx,edi,0xf0ab90fa
  423dff:	outs   dx,DWORD PTR ds:[esi]
  423e00:	aaa    
  423e01:	mov    ah,0x12
  423e03:	jo     0x423e1f
  423e05:	xor    eax,0xf5777eff
  423e0a:	jno    0x423e84
  423e0c:	add    eax,0xfbb57a33
  423e11:	shl    eax,1
  423e13:	sti    
  423e14:	pop    es
  423e15:	popf   
  423e16:	jnp    0x423dc0
  423e18:	pop    eax
  423e19:	frstor [edx]
  423e1b:	pop    ebp
  423e1c:	ss pop ecx
  423e1e:	push   esp
  423e1f:	cmove  ecx,DWORD PTR [edx]
  423e22:	adc    cl,BYTE PTR [ebx+0x57]
  423e25:	mov    eax,DWORD PTR [ecx-0x10]
  423e28:	xor    al,0x5e
  423e2a:	test   bh,bl
  423e2c:	das    
  423e2d:	push   edi
  423e2e:	xchg   esp,eax
  423e2f:	fild   DWORD PTR [eax]
  423e31:	add    BYTE PTR [eax+0x53abd995],dh
  423e37:	cdq    
  423e38:	test   eax,0xf20eb003
  423e3d:	dec    eax
  423e3e:	call   0xb9a2:0x34d263fa
  423e45:	mov    esi,esi
  423e47:	xchg   ebx,eax
  423e48:	in     al,0xac
  423e4a:	ja     0x423ea0
  423e4c:	sub    DWORD PTR [edi*8+0x6305c1a3],eax
  423e53:	loopne 0x423eb9
  423e55:	mov    DWORD PTR [ebx+0x9],eax
  423e58:	stos   BYTE PTR es:[edi],al
  423e59:	out    dx,eax
  423e5a:	aam    0x93
  423e5c:	cdq    
  423e5d:	push   esi
  423e5e:	popa   
  423e5f:	scas   eax,DWORD PTR es:[edi]
  423e60:	cmp    DWORD PTR [edi-0x46],edx
  423e63:	arpl   WORD PTR ds:0x3909c4f1,sp
  423e69:	xor    ebp,edi
  423e6b:	pop    ebp
  423e6c:	inc    esp
  423e6d:	loopne 0x423e24
  423e6f:	or     DWORD PTR [edx+0x8],edi
  423e72:	adc    esi,ebx
  423e74:	loop   0x423e0d
  423e76:	outs   dx,DWORD PTR ds:[esi]
  423e77:	mov    cl,0x66
  423e79:	les    esi,FWORD PTR [eax]
  423e7b:	scas   al,BYTE PTR es:[edi]
  423e7c:	push   ecx
  423e7d:	popf   
  423e7e:	dec    esi
  423e7f:	or     DWORD PTR [edx-0x7d],ebx
  423e82:	jae    0x423e3a
  423e84:	popa   
  423e85:	dec    ecx
  423e86:	sub    BYTE PTR [ecx+0x8b80541],dh
  423e8c:	inc    edx
  423e8d:	out    dx,eax
  423e8e:	cli    
  423e8f:	cmc    
  423e90:	push   eax
  423e91:	in     eax,dx
  423e92:	test   eax,0x360008
  423e97:	add    BYTE PTR [eax-0x6d],dl
  423e9a:	lock inc ecx
  423e9c:	bound  ecx,QWORD PTR [eax-0x6]
  423e9f:	es stos DWORD PTR es:[edi],eax
  423ea1:	mov    eax,DWORD PTR [edi]
  423ea3:	jmp    0x8cc2206f
  423ea8:	push   esp
  423ea9:	or     eax,0xf65894fb
  423eae:	fisubr DWORD PTR [ebx]
  423eb0:	inc    ecx
  423eb1:	add    eax,0xdf14a4f2
  423eb6:	jne    0x423e70
  423eb8:	jge    0x423eb0
  423eba:	mov    ds:0x840509fb,eax
  423ebf:	test   eax,0x2c7fe298
  423ec4:	sbb    ecx,DWORD PTR [eax]
  423ec6:	cmc    
  423ec7:	sub    al,0x13
  423ec9:	out    dx,al
  423eca:	je     0x423eb8
  423ecc:	lods   eax,DWORD PTR ds:[esi]
  423ecd:	nop
  423ece:	cmp    al,0xe8
  423ed0:	ja     0x423ea9
  423ed2:	xchg   DWORD PTR [edx],ebp
  423ed4:	sbb    ecx,DWORD PTR [ecx-0x6cd31288]
  423eda:	or     bl,BYTE PTR [edx]
  423edc:	sti    
  423edd:	jecxz  0x423ed2
  423edf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ee0:	shl    DWORD PTR [ecx-0x40],0x15
  423ee4:	aaa    
  423ee5:	mov    DWORD PTR [ebp-0x6f],ecx
  423ee8:	sub    BYTE PTR ds:0xf9359175,al
  423eee:	out    0x54,eax
  423ef0:	jns    0x423ef6
  423ef2:	sti    
  423ef3:	jb     0x423eec
  423ef5:	add    eax,0x16f4175b
  423efa:	mov    esi,0x2c0000e5
  423eff:	mov    bl,0x87
  423f01:	push   ebp
  423f02:	adc    eax,0x686a18a3
  423f07:	icebp  
  423f08:	dec    edi
  423f09:	mov    edi,0xa487ce05
  423f0e:	sub    BYTE PTR [ecx+0x0],ah
  423f11:	add    BYTE PTR [ecx+0x29067c5d],dl
  423f17:	sub    bl,BYTE PTR [esi]
  423f19:	add    DWORD PTR [esi-0x24],edx
  423f1c:	cmp    BYTE PTR [esi],0x33
  423f1f:	or     DWORD PTR [esp+ebx*1-0x75ff23b9],eax
  423f26:	and    cl,0x80
  423f29:	cli    
  423f2a:	popw   es
  423f2c:	jge    0x423f3e
  423f2e:	inc    edi
  423f2f:	fadd   QWORD PTR [eax]
  423f31:	sub    BYTE PTR [edx+edi*4],0x7
  423f35:	xchg   DWORD PTR [ecx],edx
  423f37:	jecxz  0x423f39
  423f39:	add    BYTE PTR [ebp+0xf8b189e],cl
  423f3f:	int    0xd3
  423f41:	lea    eax,[eax-0x7]
  423f44:	loop   0x423f4d
  423f46:	xchg   esi,eax
  423f47:	mov    edx,0x9f107525
  423f4c:	dec    eax
  423f4d:	cmp    ecx,esi
  423f4f:	nop
  423f50:	cmc    
  423f51:	test   ch,0xdb
  423f54:	pop    es
  423f55:	test   ecx,esi
  423f57:	loop   0x423f59
  423f59:	add    BYTE PTR [esi-0xc],dl
  423f5c:	das    
  423f5d:	jne    0x423f31
  423f5f:	into   
  423f60:	shr    bl,0x0
  423f63:	add    bl,ah
  423f65:	mov    BYTE PTR [ebp-0x4],al
  423f68:	push   es
  423f69:	stc    
  423f6a:	je     0x423f74
  423f6c:	dec    esi
  423f6d:	scas   eax,DWORD PTR es:[edi]
  423f6e:	cld    
  423f6f:	(bad)  
  423f70:	adc    esi,edi
  423f72:	jmp    edi
  423f74:	mov    ah,0x14
  423f76:	idiv   edi
  423f78:	adc    eax,0xa0f00fa
  423f7d:	sbb    al,0x0
  423f7f:	add    BYTE PTR [esi-0x66efba4a],al
  423f85:	pop    esi
  423f86:	mov    ecx,0x83db9600
  423f8b:	dec    ebp
  423f8c:	das    
  423f8d:	add    DWORD PTR [edx+0x4],edi
  423f90:	outs   dx,BYTE PTR ds:[esi]
  423f91:	jl     0x423f8f
  423f93:	xchg   bh,dh
  423f95:	clc    
  423f96:	pop    ss
  423f97:	stc    
  423f98:	sub    al,0x3a
  423f9a:	adc    edx,DWORD PTR [ebx-0x2]
  423f9d:	pushf  
  423f9e:	popa   
  423f9f:	mov    esi,0x4577b859
  423fa4:	push   edi
  423fa5:	jp     0x423f94
  423fa7:	je     0x423fe0
  423fa9:	add    ah,0xb
  423fac:	stos   DWORD PTR es:[edi],eax
  423fad:	call   0xd878:0x502f0004
  423fb4:	inc    edi
  423fb5:	mov    ebp,0x8c2f0049
  423fba:	push   ebx
  423fbb:	sbb    al,0xb4
  423fbd:	and    bh,BYTE PTR [eax-0x28]
  423fc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423fc1:	inc    ecx
  423fc2:	or     eax,DWORD PTR [edi+0x186b922f]
  423fc8:	add    BYTE PTR [eax],al
  423fca:	or     DWORD PTR [edx+eax*2+0x77f4b418],ecx
  423fd1:	enter  0x6744,0x7a
  423fd5:	dec    esp
  423fd6:	push   ds
  423fd7:	pop    ds
  423fd8:	sbb    al,dh
  423fda:	mov    dh,0xb9
  423fdc:	clc    
  423fdd:	mov    DWORD PTR [edx+0x45],ebx
  423fe0:	js     0x424057
  423fe2:	aaa    
  423fe3:	stos   BYTE PTR es:[edi],al
  423fe4:	cmp    al,0x1
  423fe6:	(bad)  
  423fe7:	jo     0x423fa8
  423fe9:	cli    
  423fea:	enter  0xbf80,0x74
  423fee:	push   edx
  423fef:	jl     0x423fb6
  423ff1:	xchg   edi,edi
  423ff3:	repz jno 0x423fe6
  423ff6:	lods   al,BYTE PTR ds:[esi]
  423ff7:	pop    ebx
  423ff8:	add    DWORD PTR [edi+0x3d],ebp
  423ffb:	mov    BYTE PTR [edx-0xc],dh
  423ffe:	mov    dl,0xb6
  424000:	dec    BYTE PTR [edi-0x56]
  424003:	add    BYTE PTR [eax],dh
  424005:	push   eax
  424006:	xchg   ebp,ebx
  424008:	das    
  424009:	ret    0x685
  42400c:	dec    esi
  42400d:	adc    bh,ch
  42400f:	(bad)  
  424010:	pop    esi
  424011:	sbb    DWORD PTR ds:[eax-0x5d],0x1
  424016:	fistp  WORD PTR [eax-0x23]
  424019:	xor    BYTE PTR [edi+0x17],dl
  42401c:	sub    ch,ch
  42401e:	fs stos BYTE PTR es:[edi],al
  424020:	xor    dh,BYTE PTR [esi+0x57]
  424023:	scas   eax,DWORD PTR es:[edi]
  424024:	sub    dl,BYTE PTR [esi]
  424026:	jecxz  0x424017
  424028:	test   eax,0xed21c803
  42402d:	in     al,dx
  42402e:	add    BYTE PTR [eax],al
  424030:	mov    edx,0x6e660105
  424035:	pop    es
  424036:	or     bh,BYTE PTR [eax-0x16]
  424039:	jmp    0x9bf26bae
  42403e:	loope  0x4240b8
  424040:	das    
  424041:	push   ebx
  424042:	jge    0x424051
  424044:	adc    al,0x54
  424046:	ins    DWORD PTR es:[edi],dx
  424047:	sub    edx,DWORD PTR [ebx*4+0x6034f31e]
  42404e:	mov    bh,0xea
  424050:	add    al,0x6
  424052:	cdq    
  424053:	add    eax,0xbd2ea454
  424058:	mov    cl,0xe6
  42405a:	jmp    0xb43c2f94
  42405f:	jmp    0x4240bb
  424061:	push   es
  424062:	shl    DWORD PTR [ecx],0xee
  424065:	add    al,0xaa
  424067:	ffreep st(1)
  424069:	stos   DWORD PTR es:[edi],eax
  42406a:	outs   dx,BYTE PTR ds:[esi]
  42406b:	fmul   DWORD PTR [eax-0xe]
  42406e:	cmp    al,0x7f
  424070:	push   0xffffffd6
  424072:	pop    esi
  424073:	add    al,0x68
  424075:	lods   al,BYTE PTR ds:[esi]
  424076:	pop    esi
  424077:	jno    0x42409c
  424079:	pop    ecx
  42407a:	repz push edx
  42407c:	test   al,0x1d
  42407e:	adc    DWORD PTR [eax-0x57],ebp
  424081:	sahf   
  424082:	add    cl,ch
  424084:	sbb    edx,DWORD PTR [ebx-0x502b3d08]
  42408a:	data16 cld 
  42408c:	stc    
  42408d:	pop    ds
  42408e:	inc    ebp
  42408f:	pop    esi
  424090:	sub    esi,esi
  424092:	or     eax,0x8500002b
  424097:	or     DWORD PTR [edi+0xb2dae31],eax
  42409d:	ins    DWORD PTR es:[edi],dx
  42409e:	mov    dh,0xde
  4240a0:	add    cl,ch
  4240a2:	loope  0x424026
  4240a4:	or     al,0x69
  4240a6:	(bad)  
  4240a7:	or     BYTE PTR [eax],al
  4240a9:	mov    ah,0x4
  4240ab:	jl     0x4240cd
  4240ad:	je     0x424085
  4240af:	and    eax,0x3b851158
  4240b4:	sti    
  4240b5:	push   ss
  4240b6:	mov    dh,0x9a
  4240b8:	call   0xd9659576
  4240bd:	pop    es
  4240be:	adc    al,0x5a
  4240c0:	shl    BYTE PTR [ebp+0x36],0xd9
  4240c4:	mov    bl,0xac
  4240c6:	add    BYTE PTR [esi+0x7c7b2687],ch
  4240cc:	xor    BYTE PTR [esi-0x7a],al
  4240cf:	mov    ebp,DWORD PTR [eax-0x5c8212f]
  4240d5:	(bad)  
  4240d6:	jns    0x424063
  4240d8:	or     al,0x62
  4240da:	add    al,0xa7
  4240dc:	pop    ecx
  4240dd:	ins    BYTE PTR es:[edi],dx
  4240de:	aad    0x88
  4240e0:	(bad)  
  4240e1:	stc    
  4240e2:	aad    0x5c
  4240e4:	dec    ebp
  4240e5:	mov    cl,0x39
  4240e7:	sbb    eax,0xaf3fc07f
  4240ec:	lea    esi,[edx]
  4240ee:	push   ds
  4240ef:	push   ebx
  4240f0:	add    al,0xfe
  4240f2:	pop    ebx
  4240f3:	scas   al,BYTE PTR es:[edi]
  4240f4:	mov    DWORD PTR [edi+edi*4],ebp
  4240f7:	or     BYTE PTR ds:0x1d000005,dl
  4240fd:	sahf   
  4240fe:	add    BYTE PTR [eax],al
  424100:	adc    eax,0x13570c45
  424105:	sahf   
  424106:	test   al,0x50
  424108:	xor    eax,0x784c14f9
  42410d:	mov    al,ds:0x8c38b00
  424112:	or     BYTE PTR [ecx],0x13
  424115:	mov    al,ds:0xdb8801e3
  42411a:	push   es
  42411b:	mov    ecx,ebx
  42411d:	hlt    
  42411e:	jp     0x4240e4
  424120:	bound  ebp,QWORD PTR [eax-0x1f697584]
  424126:	mov    DWORD PTR [ebp+0x1e],ecx
  424129:	in     al,0xc8
  42412b:	push   ecx
  42412c:	ins    BYTE PTR es:[edi],dx
  42412d:	in     eax,dx
  42412e:	push   ebx
  42412f:	(bad)  
  424130:	fwait
  424131:	test   DWORD PTR [eax],0xf6199be8
  424137:	dec    ebp
  424139:	sbb    BYTE PTR [ebp+0x5e5d51db],al
  42413f:	push   DWORD PTR [ecx]
  424141:	clc    
  424142:	add    DWORD PTR [ebp+0x21],0x4f5b5696
  424149:	sbb    DWORD PTR [eax],ecx
  42414b:	add    BYTE PTR [ebx-0x1d7c137c],bh
  424151:	jmp    0x6af0:0x8139564b
  424158:	or     BYTE PTR [ebx+0x738f5ad2],al
  42415e:	hlt    
  42415f:	mov    eax,DWORD PTR [eax]
  424161:	add    BYTE PTR [edi+0x172eab1],dl
  424167:	xor    DWORD PTR [eax],0x3b
  42416a:	xchg   esp,eax
  42416b:	mov    WORD PTR [ecx],ds
  42416d:	cmp    ebx,DWORD PTR [ebx]
  42416f:	push   cs
  424170:	outs   dx,DWORD PTR ds:[esi]
  424171:	adc    al,0x38
  424173:	cmp    DWORD PTR [ebp+0x10],0x4788328
  42417a:	das    
  42417b:	loop   0x42418c
  42417d:	sub    DWORD PTR [edx],edi
  42417f:	imul   eax,DWORD PTR ds:0xf0e266c2,0xbf478e6f
  424189:	jmp    0x41384a
  42418e:	lods   al,BYTE PTR ds:[esi]
  42418f:	inc    BYTE PTR ss:[esi-0x3d150f77]
  424196:	jmp    0x77a4:0xea8904a3
  42419d:	jge    0x42421a
  42419f:	sub    eax,edi
  4241a1:	push   edx
  4241a2:	lods   al,BYTE PTR ds:[esi]
  4241a3:	mov    ch,0xfe
  4241a5:	dec    edi
  4241a6:	push   edi
  4241a7:	sub    eax,0x7e58fabf
  4241ac:	cmp    edi,eax
  4241ae:	inc    esp
  4241af:	stc    
  4241b0:	and    DWORD PTR [ebp+0x47],0xfffffff5
  4241b4:	jns    0x4241b1
  4241b6:	mov    ebx,0x377d844f
  4241bb:	cmc    
  4241bc:	push   0x10
  4241be:	mov    ds:0xba50eb3a,al
  4241c3:	xor    edi,esp
  4241c5:	push   eax
  4241c6:	add    BYTE PTR [eax],al
  4241c8:	pop    ss
  4241c9:	pushf  
  4241ca:	out    0xfb,al
  4241cc:	sbb    BYTE PTR [eax-0xc550b9d],al
  4241d2:	push   0x31
  4241d4:	lods   al,BYTE PTR ds:[esi]
  4241d5:	jns    0x4241c3
  4241d7:	add    BYTE PTR [eax],dh
  4241d9:	jns    0x424208
  4241db:	add    DWORD PTR [edi],ebp
  4241dd:	cmc    
  4241de:	jnp    0x424255
  4241e0:	daa    
  4241e1:	mov    ds:0x8a7ff43a,al
  4241e6:	cmp    bh,al
  4241e8:	jg     0x42422e
  4241ea:	je     0x4241fc
  4241ec:	fadd   st,st(1)
  4241ee:	clc    
  4241ef:	push   ecx
  4241f0:	ror    cl,1
  4241f2:	hlt    
  4241f3:	call   0xe8e7201c
  4241f8:	les    ebx,FWORD PTR [ecx-0x57]
  4241fb:	clc    
  4241fc:	lods   al,BYTE PTR ds:[esi]
  4241fd:	in     eax,0xe8
  4241ff:	add    ebp,DWORD PTR [edi]
  424201:	push   edi
  424202:	or     al,0xf0
  424204:	nop
  424205:	fisubr WORD PTR [esi+0x6e]
  424208:	aaa    
  424209:	jl     0x424271
  42420b:	data16 aas 
  42420d:	(bad)  
  42420e:	loop   0x42428e
  424210:	int    0xdd
  424212:	jmp    0x6fac591a
  424217:	inc    ebx
  424218:	das    
  424219:	add    edx,esp
  42421b:	xrelease xchg DWORD PTR [esi],esp
  42421e:	cmp    ebp,eax
  424220:	je     0x424280
  424222:	push   ecx
  424223:	jmp    0x1daa:0xc3f6dfe2
  42422a:	jmp    0xe9dd:0x4600007b
  424231:	add    ebx,DWORD PTR [eax]
  424233:	cdq    
  424234:	(bad)  
  424236:	leave  
  424237:	std    
  424238:	call   0x9e997140
  42423d:	rsm    
  42423f:	leave  
  424240:	sub    ebx,DWORD PTR [esi*4+0x2829e6d9]
  424247:	cmp    ebp,0xfffffff7
  42424a:	lods   al,BYTE PTR ds:[esi]
  42424b:	adc    ch,cl
  42424d:	add    ebp,DWORD PTR [edi]
  42424f:	push   ebp
  424250:	sub    bl,bl
  424252:	dec    esi
  424253:	inc    ecx
  424254:	jmp    0x42423d
  424256:	mov    dh,0x9b
  424258:	stc    
  424259:	sub    bh,0xd1
  42425c:	gs stos BYTE PTR es:[edi],al
  42425e:	das    
  42425f:	fsubp  st(1),st
  424261:	out    0x3d,al
  424263:	add    DWORD PTR [esi+0x14],edx
  424266:	jg     0x424269
  424268:	fdiv   QWORD PTR [edi]
  42426a:	cmp    eax,0x2d7ae99e
  42426f:	fld    QWORD PTR [eax]
  424271:	sub    al,0x3b
  424273:	add    esp,0xf48bd1dd
  424279:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42427a:	ds push es
  42427c:	push   eax
  42427d:	sahf   
  42427e:	push   ds
  42427f:	xchg   edx,eax
  424280:	adc    ch,BYTE PTR [ecx]
  424282:	sub    ebx,DWORD PTR [ecx+0x42]
  424285:	in     eax,0x25
  424287:	cdq    
  424288:	adc    al,0xd2
  42428a:	in     al,0x81
  42428c:	(bad)  
  42428d:	in     eax,dx
  42428e:	add    ebx,DWORD PTR [ecx+0x47]
  424291:	fld    DWORD PTR [eax]
  424293:	add    BYTE PTR ds:0x5e78716,ch
  424299:	mov    edx,DWORD PTR [eax]
  42429b:	jmp    0xade2:0x554401c2
  4242a2:	sti    
  4242a3:	cld    
  4242a4:	cmp    ah,ch
  4242a6:	inc    eax
  4242a7:	jmp    0x464e5d59
  4242ac:	fsub   st(5),st
  4242ae:	call   0xfb46d3f6
  4242b3:	pusha  
  4242b4:	fsub   st(5),st
  4242b6:	mov    DWORD PTR [edx+0x26451c38],esi
  4242bc:	sub    bh,cl
  4242be:	pop    edx
  4242bf:	push   0xffffffc6
  4242c1:	add    eax,0x59119c00
  4242c6:	add    ah,BYTE PTR [edx-0x6f]
  4242c9:	fiadd  DWORD PTR [edi-0x746c34e]
  4242cf:	xchg   esi,eax
  4242d0:	sub    eax,0x6c015116
  4242d5:	inc    ebp
  4242d6:	cli    
  4242d7:	out    dx,al
  4242d8:	mov    ebx,DWORD PTR [ebx-0x76139308]
  4242de:	cmp    esi,DWORD PTR [esi]
  4242e0:	je     0x424308
  4242e2:	call   0x120a790
  4242e7:	pusha  
  4242e8:	outs   dx,DWORD PTR ds:[esi]
  4242e9:	or     al,BYTE PTR [edi+0x5d83ee00]
  4242ef:	sbb    BYTE PTR [ebp-0x24],bl
  4242f2:	xor    DWORD PTR [ebp-0xe],0xffffff85
  4242f6:	dec    esp
  4242f7:	cmp    BYTE PTR [eax],al
  4242f9:	add    bh,dl
  4242fb:	and    al,0xe6
  4242fd:	mov    ebp,0xc083f788
  424302:	and    dl,bh
  424304:	add    DWORD PTR [esi],0xffffffc5
  424307:	fisttp DWORD PTR [edi-0x1]
  42430a:	inc    ebx
  42430b:	repnz dec edi
  42430d:	inc    DWORD PTR [ebx-0x79bff138]
  424313:	(bad)  [ebx]
  424315:	mov    eax,DWORD PTR [eax-0x2ff33ba5]
  42431b:	add    dh,bh
  42431d:	or     ecx,edx
  42431f:	xor    DWORD PTR [ebx],0xe7f463ff
  424325:	xchg   DWORD PTR [eax-0x6c750906],ebx
  42432b:	not    DWORD PTR [esi+0x5e]
  42432e:	lea    eax,[ecx-0x46]
  424331:	adc    al,0x46
  424333:	lods   eax,DWORD PTR ds:[esi]
  424334:	sub    esp,0xffffffc5
  424337:	sub    BYTE PTR [eax],ah
  424339:	push   ebx
  42433a:	mov    al,ds:0xbd57c0cb
  42433f:	jne    0x424349
  424341:	mov    DWORD PTR [ebx+0x2e458920],edx
  424347:	mov    dl,0x3f
  424349:	sbb    al,0x9
  42434b:	or     bl,0x1
  42434e:	push   ss
  42434f:	fmul   QWORD PTR [ecx+0x6f842a45]
  424355:	sbb    BYTE PTR ds:0x1d33ec8f,al
  42435b:	clc    
  42435c:	ins    DWORD PTR es:[edi],dx
  42435d:	or     BYTE PTR [eax],al
  42435f:	add    BYTE PTR [ebp-0x70],bh
  424362:	or     al,0x6a
  424364:	(bad)  
  424365:	xchg   edx,eax
  424366:	call   0xe55b7322
  42436b:	sti    
  42436c:	mov    bl,0x35
  42436e:	cmc    
  42436f:	add    eax,0xfffffff6
  424372:	(bad)  
  424373:	(bad)  
  424374:	fadd   st,st(7)
  424376:	cld    
  424377:	xchg   BYTE PTR [ecx-0x7],bh
  42437a:	pop    eax
  42437b:	adc    BYTE PTR [eax+0x1d],ah
  42437e:	lahf   
  42437f:	in     al,dx
  424380:	sar    BYTE PTR [eax],0x80
  424383:	shr    BYTE PTR [eax],0x79
  424386:	ja     0x424389
  424388:	das    
  424389:	cmc    
  42438a:	ja     0x4243ce
  42438c:	inc    ebx
  42438d:	push   ss
  42438e:	inc    edx
  42438f:	lock dec esi
  424391:	mov    edx,0x24f987f0
  424396:	jbe    0x4243dd
  424398:	xchg   ebx,eax
  424399:	je     0x424387
  42439b:	add    bh,BYTE PTR [eax]
  42439d:	jae    0x42436c
  42439f:	add    BYTE PTR [edi],ch
  4243a1:	cmc    
  4243a2:	ja     0x4243a3
  4243a4:	lods   eax,DWORD PTR ds:[esi]
  4243a5:	jge    0x4243a1
  4243a7:	or     ch,BYTE PTR [ebp+0x2f000485]
  4243ad:	in     al,dx
  4243ae:	cmp    edi,esp
  4243b0:	xor    BYTE PTR [eax+0x7d],dh
  4243b3:	add    BYTE PTR [edi],ch
  4243b5:	cmc    
  4243b6:	repz mov dl,0xe4
  4243b9:	lock in al,dx
  4243bb:	shl    DWORD PTR [ebx],0x49
  4243be:	push   edx
  4243bf:	or     BYTE PTR [esi-0xf],0xf3
  4243c3:	mov    cl,0x0
  4243c5:	add    BYTE PTR [esi-0x18],ah
  4243c8:	(bad)  
  4243c9:	pop    ss
  4243ca:	data16 je 0x4243ac
  4243cd:	call   0xb66f97e
  4243d2:	fmul   st,st(5)
  4243d4:	ja     0x424423
  4243d6:	pcmpeqb mm5,mm4
  4243d9:	or     bl,BYTE PTR [ecx+0x5c08063]
  4243df:	dec    esi
  4243e0:	inc    eax
  4243e1:	push   es
  4243e2:	jp     0x4243c2
  4243e4:	das    
  4243e5:	in     eax,0x7c
  4243e7:	jmp    0x1459:0xff2d406c
  4243ee:	mov    edx,0xd753d180
  4243f3:	xchg   esi,eax
  4243f4:	pop    edx
  4243f5:	in     al,0xd4
  4243f7:	pop    edx
  4243f8:	rol    DWORD PTR [edx],0x53
  4243fb:	into   
  4243fc:	pop    esi
  4243fd:	dec    esi
  4243fe:	aaa    
  4243ff:	push   ecx
  424400:	sbb    al,0xf0
  424402:	pop    esi
  424403:	push   ecx
  424404:	xor    al,0xf4
  424406:	pop    esi
  424407:	call   DWORD PTR [ebx]
  424409:	in     al,0xa8
  42440b:	adc    bh,BYTE PTR [ecx]
  42440d:	in     eax,0x22
  42440f:	push   es
  424410:	pop    esi
  424411:	mov    ds:0x94e730f5,eax
  424417:	(bad)  
  424418:	fs ret 
  42441a:	sbb    ebx,ebx
  42441c:	jb     0x42445c
  42441e:	xchg   ebx,eax
  42441f:	(bad)  
  424420:	repz jmp 0x4243ea
  424423:	(bad)  [ecx+0x3]
  424426:	das    
  424427:	imul   BYTE PTR [esi-0x5a]
  42442a:	add    BYTE PTR [eax],al
  42442c:	jne    0x42442c
  42442e:	pop    ebp
  42442f:	data16 aaa 
  424431:	push   ebx
  424432:	out    0x1a,al
  424434:	jmp    0x3d80:0xd8cbe601
  42443b:	std    
  42443c:	and    eax,0x44e4cc5b
  424441:	(bad)  
  424442:	gs cmp bx,bp
  424446:	fwait
  424447:	sub    eax,0x3c6ec634
  42444c:	sub    esi,DWORD PTR [esi+0x0]
  42444f:	out    0x2f,al
  424451:	fiadd  WORD PTR [ecx]
  424453:	jmp    0x424423
  424455:	cld    
  424456:	add    DWORD PTR [eax-0x9],edi
  424459:	arpl   WORD PTR [esi],bx
  42445b:	outs   dx,DWORD PTR ds:[esi]
  42445c:	ss std 
  42445e:	(bad)  
  42445f:	jnp    0x424479
  424461:	cli    
  424462:	je     0x42445d
  424464:	fimul  WORD PTR [bx+0x51]
  424468:	jmp    0x18f0:0x4e900de
  42446f:	(bad)  
  424470:	int3   
  424471:	lods   eax,DWORD PTR ds:[esi]
  424472:	call   0xfb3ad2a2
  424477:	(bad)  
  424478:	jbe    0x424468
  42447a:	out    0x3,eax
  42447c:	mov    ?,eax
  42447e:	cli    
  42447f:	mov    edi,0x650bdf35
  424484:	cmp    bl,dh
  424486:	add    cl,ch
  424488:	inc    esp
  424489:	mov    esi,0xf92b2adb
  42448e:	adc    al,0x4d
  424490:	add    BYTE PTR [eax],al
  424492:	mov    eax,ds:0xea8100bd
  424497:	add    al,0xfb
  424499:	xchg   BYTE PTR [eax-0x128df360],ch
  42449f:	in     eax,0x89
  4244a1:	sub    al,0x8f
  4244a3:	jge    0x42449d
  4244a5:	fstp   st(2)
  4244a7:	test   DWORD PTR [edi+0xbf6b1ea],eax
  4244ad:	fisttp DWORD PTR [ebx]
  4244af:	mov    ch,0x45
  4244b1:	push   ebp
  4244b2:	add    al,0x9a
  4244b4:	xchg   DWORD PTR [edx-0x163f0ed8],esp
  4244ba:	sub    al,0xde
  4244bc:	and    BYTE PTR [ebp-0x1a078318],dh
  4244c2:	out    0xb8,al
  4244c4:	repnz sub BYTE PTR [edx],ch
  4244c7:	jb     0x4244ff
  4244c9:	jb     0x4244e9
  4244cb:	mov    edx,0xfd2caadb
  4244d0:	ret    0x4b57
  4244d3:	sbb    DWORD PTR [edi],edi
  4244d5:	jmp    0xff1cee
  4244da:	xor    BYTE PTR [ecx],al
  4244dc:	test   al,al
  4244de:	call   0x38cf:0x8d33f7c2
  4244e5:	(bad)  
  4244e7:	loopne 0x4244e4
  4244e9:	or     al,0x52
  4244eb:	and    DWORD PTR [ebx],edi
  4244ed:	add    BYTE PTR ds:0x1215f7b3,dh
  4244f3:	clc    
  4244f4:	cmp    al,BYTE PTR [eax]
  4244f6:	add    BYTE PTR [eax],al
  4244f8:	dec    ebp
  4244f9:	in     al,0x7b
  4244fb:	vphsubw xmm7,xmm3,XMMWORD PTR [ecx+esi*4]
  424501:	mov    ds:0xea038b00,eax
  424506:	add    DWORD PTR [ebx],0x2f
  424509:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42450a:	cld    
  42450b:	add    ebp,esi
  42450d:	arpl   WORD PTR [ebp-0x4],di
  424510:	ret    0x9893
  424513:	push   0x3b1f76
  424518:	mov    cl,0xf5
  42451a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42451b:	adc    al,BYTE PTR [esi-0x1e]
  42451e:	test   DWORD PTR [ebp-0x42],0x15e8456b
  424525:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424526:	in     al,dx
  424527:	sbb    BYTE PTR [ebp+0x40f1ca7],bh
  42452d:	shl    esi,1
  42452f:	call   ecx
  424531:	rol    eax,cl
  424533:	cmp    ebx,DWORD PTR [ebx+0x161b5704]
  424539:	lahf   
  42453a:	out    dx,eax
  42453b:	fmul   DWORD PTR [ebp+0x4604ba29]
  424541:	mov    dh,0x83
  424543:	lock add DWORD PTR [edi+0x5c84e808],edx
  42454a:	idiv   bh
  42454c:	adc    DWORD PTR [edi+0x5c9ce810],edx
  424552:	idiv   bh
  424554:	das    
  424555:	aam    0x59
  424557:	sbb    al,0x17
  424559:	push   0xfa9b
  42455e:	sbb    ch,ah
  424560:	pop    ecx
  424561:	sub    al,0x7
  424563:	inc    eax
  424564:	fwait
  424565:	cli    
  424566:	or     ch,dh
  424568:	push   edi
  424569:	xor    BYTE PTR [edi],dl
  42456b:	pop    eax
  42456c:	fwait
  42456d:	cli    
  42456e:	clc    
  42456f:	add    al,0x56
  424571:	xor    al,0x7
  424573:	mov    al,0xa0
  424575:	cli    
  424576:	call   0xaa829bfb
  42457b:	adc    ebx,DWORD PTR [eax+0xd]
  42457e:	fdivr  st,st(3)
  424580:	out    0x3c,al
  424582:	xchg   ebx,eax
  424583:	cmp    esp,ecx
  424585:	push   edx
  424586:	xlat   BYTE PTR ds:[ebx]
  424587:	sti    
  424588:	call   0x41fb:0xc5ebc0fa
  42458f:	or     edi,esp
  424591:	sub    al,0x73
  424593:	pop    ebx
  424594:	loope  0x424591
  424596:	and    ebp,edi
  424598:	out    0x24,al
  42459a:	jecxz  0x424607
  42459c:	loope  0x424599
  42459e:	and    DWORD PTR ds:0x7bd31ce7,edx
  4245a4:	loope  0x424565
  4245a6:	loopne 0x424627
  4245a8:	fadd   QWORD PTR [ebp+0x51f8f180]
  4245ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4245af:	pushf  
  4245b0:	ins    DWORD PTR es:[edi],dx
  4245b1:	repnz pop ss
  4245b3:	or     BYTE PTR [ebx+0x24],dl
  4245b6:	cmp    ecx,DWORD PTR [eax-0x24a8e712]
  4245bc:	loope  0x4245b9
  4245be:	pop    eax
  4245bf:	xor    al,0x52
  4245c1:	cmc    
  4245c2:	add    BYTE PTR [eax],al
  4245c4:	icebp  
  4245c5:	pop    ebx
  4245c6:	out    0xf8,al
  4245c8:	test   BYTE PTR [ebx-0x464baa1f],dh
  4245ce:	test   esp,esp
  4245d0:	aaa    
  4245d1:	fisubr WORD PTR [esi+0x47]
  4245d4:	daa    
  4245d5:	pop    edi
  4245d6:	or     eax,0xba947840
  4245db:	loopne 0x42457c
  4245dd:	loop   0x42463b
  4245df:	pop    eax
  4245e0:	push   ebx
  4245e1:	mov    dh,0x11
  4245e3:	adc    BYTE PTR [ebx-0x22],bh
  4245e6:	jmp    0x6e2d3572
  4245eb:	sub    BYTE PTR [esi],0xde
  4245ee:	jmp    0xaac62607
  4245f3:	inc    edi
  4245f4:	dec    ebx
  4245f5:	shr    cl,cl
  4245f7:	add    dh,BYTE PTR [edi-0x370af267]
  4245fd:	cdq    
  4245fe:	pop    esp
  4245ff:	loopne 0x4245d5
  424601:	mov    cx,0x9510
  424605:	mov    eax,ds:0x3c35f505
  42460a:	sub    eax,0x168f1b08
  42460f:	xor    eax,0xf6a2945f
  424614:	mov    eax,ss
  424616:	sub    DWORD PTR [edi*8+0x43282d64],eax
  42461d:	push   es
  42461e:	inc    edi
  42461f:	pushf  
  424620:	xchg   ebp,eax
  424621:	cli    
  424622:	mov    edi,0xead64b3f
  424627:	xchg   DWORD PTR [eax],eax
  424629:	add    BYTE PTR [ebp-0x23],al
  42462c:	jmp    0xffd13634
  424631:	add    al,0xe8
  424633:	mov    fs,WORD PTR [edx+0x57]
  424636:	dec    ebx
  424637:	xchg   edx,eax
  424638:	pop    edx
  424639:	push   edi
  42463a:	adc    ebp,DWORD PTR [edx-0x4df4a8ae]
  424640:	dec    edx
  424641:	imul   BYTE PTR [eax+edx*8-0x57]
  424645:	add    esp,DWORD PTR [esi+0x2805a1]
  42464b:	pop    ds
  42464c:	add    dh,ah
  42464e:	test   al,0xcd
  424650:	add    ecx,ebp
  424652:	sub    al,0x63
  424654:	inc    ebp
  424655:	icebp  
  424656:	mov    ds:0x24a180dd,eax
  42465b:	fistp  QWORD PTR [edx+0x9e8705]
  424661:	xchg   ebp,eax
  424662:	xor    DWORD PTR [esp+edi*8],esi
  424665:	jle    0x4246d3
  424667:	fisubr WORD PTR [edi]
  424669:	xor    BYTE PTR [edx+edi*2-0x56d554dc],ch
  424670:	or     edx,DWORD PTR [ebp+ebp*8-0x59]
  424674:	or     eax,0xe980de2b
  42467a:	mov    bl,0x27
  42467c:	add    dh,bl
  42467e:	aas    
  42467f:	bound  edx,QWORD PTR [ecx+0x3a]
  424682:	clc    
  424683:	outs   dx,BYTE PTR ds:[esi]
  424684:	or     BYTE PTR [ecx-0x1d],dl
  424687:	jbe    0x4246c9
  424689:	jmp    0x2566b977
  42468e:	add    BYTE PTR [eax],al
  424690:	stc    
  424691:	hlt    
  424692:	jae    0x424699
  424694:	jae    0x42468b
  424696:	adc    al,0x59
  424698:	mov    dh,0xb9
  42469a:	add    BYTE PTR [edx-0x7d],dh
  42469d:	mov    cl,0xef
  42469f:	out    0xa8,al
  4246a1:	sub    al,0x0
  4246a3:	jmp    0x7459c6d4
  4246a8:	cmpps  xmm1,XMMWORD PTR [eax+0x21],0x9b
  4246ad:	sti    
  4246ae:	call   0x2ce9:0x866076
  4246b5:	data16 data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4246b9:	sbb    eax,0xd389b750
  4246be:	lods   al,BYTE PTR ds:[esi]
  4246bf:	cld    
  4246c0:	in     al,dx
  4246c1:	frstor [esi-0xd]
  4246c4:	mov    edi,0x9e00247a
  4246c9:	mov    ch,0xe8
  4246cb:	loopne 0x4246b6
  4246cd:	sbb    bh,dh
  4246cf:	mov    edi,DWORD PTR [ebx-0x1b]
  4246d2:	add    DWORD PTR [edi],0x3f
  4246d5:	mov    ch,0x20
  4246d7:	jbe    0x42472b
  4246d9:	sbb    BYTE PTR [eax+0x1c],dh
  4246dc:	fwait
  4246dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4246de:	and    al,0x48
  4246e0:	out    0x4d,al
  4246e2:	inc    esp
  4246e3:	and    al,0xf2
  4246e5:	lods   al,BYTE PTR ds:[esi]
  4246e6:	call   0xf75ac68d
  4246eb:	adc    DWORD PTR [edx-0x32],0xffffff85
  4246ef:	sar    BYTE PTR [eax-0xc],0x62
  4246f3:	add    BYTE PTR [eax],al
  4246f5:	add    BYTE PTR [esi],al
  4246f7:	frstor [eax+0x7418096a]
  4246fd:	and    al,0x32
  4246ff:	mov    al,0xf7
  424701:	adc    eax,0x3af5aa
  424706:	jmp    0xfe5e6b9b
  42470b:	cmp    eax,0x6389feb2
  424710:	(bad)  
  424711:	inc    BYTE PTR [esi]
  424713:	retf   0x70f7
  424716:	xor    ch,BYTE PTR [ebp-0xa76a9b5]
  42471c:	mov    ds:0x7be25615,al
  424721:	clc    
  424722:	xchg   edi,eax
  424723:	xchg   ebp,eax
  424724:	sub    dl,BYTE PTR [ebx-0x5]
  424727:	mov    al,ds:0x4f362c24
  42472c:	inc    esp
  42472d:	and    al,0x5e
  42472f:	lods   al,BYTE PTR ds:[esi]
  424730:	push   0x20dc9613
  424735:	push   esi
  424736:	shl    DWORD PTR [eax-0x237dc3dc],1
  42473c:	add    BYTE PTR [eax],al
  42473e:	fistp  QWORD PTR [eax-0x6fd0cbdc]
  424744:	clc    
  424745:	mov    edi,0x7eff4742
  42474a:	push   edi
  42474b:	add    eax,0x3aae0658
  424750:	and    esp,DWORD PTR [eax]
  424752:	ja     0x42475a
  424754:	(bad)  
  424755:	inc    ebx
  424757:	aas    
  424758:	xor    eax,0x1a0000fb
  42475d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42475e:	clc    
  42475f:	aas    
  424760:	das    
  424761:	fcom   DWORD PTR [ebx+0x24]
  424764:	dec    ebx
  424765:	sar    al,1
  424767:	lahf   
  424768:	inc    edx
  424769:	inc    ebp
  42476a:	(bad)  
  42476b:	cli    
  42476c:	fwait
  42476d:	sub    edi,esi
  42476f:	cli    
  424770:	and    ah,BYTE PTR [ebp-0x10d0c008]
  424776:	inc    ecx
  424777:	and    al,0x1c
  424779:	test   DWORD PTR [ebx+0x24],ebx
  42477c:	sbb    al,0x3
  42477e:	or     al,0x7e
  424780:	lods   al,BYTE PTR ds:[esi]
  424781:	pop    ss
  424782:	(bad)  
  424784:	loopne 0x42471f
  424786:	sub    BYTE PTR [edi+eax*8],dh
  424789:	ret    
  42478a:	xchg   esi,eax
  42478b:	cli    
  42478c:	shl    BYTE PTR [eax],1
  42478e:	pop    eax
  42478f:	and    al,0x7
  424791:	or     eax,0x30c1b617
  424796:	cmp    eax,0x3944fc5a
  42479b:	xchg   edx,ecx
  42479d:	mov    ds:0x582f04be,al
  4247a2:	pop    eax
  4247a3:	and    al,0x5b
  4247a5:	pop    ebp
  4247a6:	and    esi,DWORD PTR [esi+0x74dd6899]
  4247ac:	dec    ebx
  4247ad:	sbb    eax,0x77c51ce7
  4247b2:	frstor [esi+0x23]
  4247b5:	jle    0x42480c
  4247b7:	or     BYTE PTR [edx-0x28cfdcf7],ch
  4247bd:	fst    QWORD PTR [ecx-0x2e]
  4247c0:	add    BYTE PTR [eax],al
  4247c2:	vmulsd xmm1,xmm1,QWORD PTR [ebx-0x170a3dfd]
  4247ca:	cmc    
  4247cb:	cmp    ebp,0x69
  4247ce:	push   eax
  4247cf:	push   0xffffffad
  4247d1:	daa    
  4247d2:	jle    0xbe4d9046
  4247d8:	call   0xdcdd:0x2b3c17eb
  4247df:	lods   eax,DWORD PTR fs:[esi]
  4247e1:	daa    
  4247e2:	push   edi
  4247e3:	push   es
  4247e4:	setnp  BYTE PTR ds:0x53485df7
  4247eb:	ret    0xdc66
  4247ee:	adc    al,0x72
  4247f0:	rcl    DWORD PTR [eax],0x4
  4247f3:	mov    bl,0x26
  4247f5:	push   esi
  4247f6:	push   esi
  4247f7:	arpl   WORD PTR [ebp-0x1a96e8d9],bp
  4247fd:	fwait
  4247fe:	ss (bad) 
  424800:	pop    ebp
  424801:	mul    ebp
  424803:	lods   eax,DWORD PTR ds:[esi]
  424804:	(bad)  
  424806:	pop    esp
  424807:	int3   
  424808:	sub    DWORD PTR [edi+edi*2],eax
  42480b:	arpl   WORD PTR ds:0xfcf73328,sp
  424811:	fwait
  424812:	xlat   BYTE PTR ds:[ebx]
  424813:	inc    ebx
  424814:	push   0x3
  424816:	das    
  424817:	arpl   WORD PTR ds:0xee9f1328,bp
  42481d:	fild   DWORD PTR [ecx+0xf]
  424820:	outs   dx,BYTE PTR ds:[esi]
  424821:	pop    edi
  424822:	push   ebx
  424823:	(bad)  
  424824:	xchg   ecx,eax
  424825:	mov    BYTE PTR [eax],0x0
  424828:	out    0xf7,al
  42482a:	xchg   ecx,eax
  42482b:	mov    ?,ebx
  42482d:	shr    ebp,0x33
  424830:	mov    ds:0xf8fbcda1,al
  424835:	push   0x8e3b2825
  42483a:	add    BYTE PTR [edi],bl
  42483c:	mov    esp,DWORD PTR [esp+ecx*4+0x6e]
  424840:	push   ebx
  424841:	pop    esi
  424842:	clc    
  424843:	and    al,BYTE PTR [esi+0x1c508370]
  424849:	repz cli 
  42484b:	push   esi
  42484c:	and    DWORD PTR [edi-0x14],ebx
  42484f:	mov    eax,0x7052a71d
  424854:	xor    eax,edi
  424856:	xlat   BYTE PTR ds:[ebx]
  424857:	jo     0x42485c
  424859:	out    0xfb,al
  42485b:	mov    eax,0xe16ff330
  424860:	inc    esp
  424861:	mov    dl,0x58
  424863:	jmp    0xe5b5ab94
  424868:	pop    esp
  424869:	add    dl,BYTE PTR ds:0x7221
  42486e:	push   cs
  42486f:	test   eax,0x545672c
  424874:	mov    ecx,0x3a99fc9b
  424879:	push   es
  42487a:	and    al,0xf1
  42487c:	aam    0xf9
  42487e:	xchg   bh,ah
  424880:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424881:	mov    ds:0xdee771fc,eax
  424886:	cmp    edi,edi
  424888:	jo     0x42485e
  42488a:	dec    edi
  42488b:	cmp    al,BYTE PTR [eax]
  42488d:	add    BYTE PTR [esi+eax*4],bl
  424890:	outs   dx,BYTE PTR ds:[esi]
  424891:	lock push 0xffffffde
  424894:	dec    edi
  424895:	sbb    ah,ah
  424897:	retf   
  424898:	and    al,0xda
  42489a:	ins    BYTE PTR es:[edi],dx
  42489b:	fimul  WORD PTR [ecx-0x4052d8d2]
  4248a1:	xor    eax,0x92012e2f
  4248a6:	cmp    bh,cl
  4248a8:	xor    DWORD PTR [ecx-0x6905c8ae],edx
  4248ae:	inc    ecx
  4248af:	push   ds
  4248b0:	pop    edx
  4248b1:	xor    ah,BYTE PTR [edx+0x35]
  4248b4:	push   ebp
  4248b5:	add    ch,bh
  4248b7:	add    eax,0x9f135351
  4248bc:	cld    
  4248bd:	push   eax
  4248be:	adc    esi,DWORD PTR [ebx-0x132617f8]
  4248c4:	cmc    
  4248c5:	(bad)  
  4248c6:	frstor [esi-0x4ba876f4]
  4248cc:	test   eax,eax
  4248ce:	jnp    0x4248c5
  4248d0:	sub    al,0xc0
  4248d2:	in     eax,dx
  4248d3:	repz jns 0x424953
  4248d6:	repnz fisubr DWORD PTR [esi+0xa]
  4248da:	aad    0x96
  4248dc:	or     BYTE PTR [edx],dh
  4248de:	jne    0x4248d5
  4248e0:	sub    eax,eax
  4248e2:	in     eax,dx
  4248e3:	fsubr  QWORD PTR [ebx]
  4248e5:	rcl    dh,0x63
  4248e8:	dec    ebp
  4248e9:	adc    BYTE PTR [esi+0x4f01b0db],bl
  4248ef:	sbb    al,0xc
  4248f1:	add    BYTE PTR [eax],al
  4248f3:	add    bl,bl
  4248f5:	arpl   sp,bp
  4248f7:	cmp    DWORD PTR [edx],0x12
  4248fa:	jnp    0x4248e8
  4248fc:	adc    ch,BYTE PTR [esi+ecx*2-0x72500875]
  424903:	pop    esi
  424904:	push   cs
  424905:	add    DWORD PTR [eax],0xffffff8b
  424908:	xchg   ebp,eax
  424909:	popa   
  42490a:	je     0x424930
  42490c:	cs add bh,dh
  42490f:	adc    BYTE PTR [ecx],al
  424911:	sbb    BYTE PTR [eax+eax*8+0x73f79e7a],al
  424918:	fisub  DWORD PTR [ebx+0x73]
  42491b:	or     al,0x81
  42491d:	retf   
  42491e:	call   0xf759f3e7
  424923:	test   BYTE PTR [esi+0x458b11a4],al
  424929:	out    0xe8,al
  42492b:	jg     0x424918
  42492d:	pop    ss
  42492e:	test   esi,0xf20c32f
  424934:	cs jnp 0x4248f6
  424937:	jne    0x42496b
  424939:	inc    ebp
  42493a:	cmp    esp,DWORD PTR [esp+ebx*1]
  42493d:	pop    es
  42493e:	mov    bh,BYTE PTR [edi]
  424940:	sub    ecx,DWORD PTR [eax-0x7fd0d7a9]
  424946:	fimul  DWORD PTR [ebx]
  424948:	ret    
  424949:	(bad)  
  42494a:	das    
  42494b:	call   0xfc183eb0
  424950:	scas   eax,DWORD PTR es:[edi]
  424951:	or     bl,BYTE PTR [ebx]
  424953:	comiss xmm1,DWORD PTR [edx]
  424956:	or     BYTE PTR [edi-0x1d3d0000],al
  42495c:	lock jle 0x4249c8
  42495f:	(bad)  
  424960:	xor    al,ch
  424962:	mov    bh,0x72
  424964:	fsincos 
  424966:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424967:	cmp    DWORD PTR [edi],eax
  424969:	call   0xfc189744
  42496e:	xor    BYTE PTR [ebx],0x8f
  424971:	add    DWORD PTR [eax+eax*4-0x20],esi
  424975:	pop    ebp
  424976:	in     eax,dx
  424977:	stc    
  424978:	dec    BYTE PTR [edx]
  42497a:	rol    DWORD PTR [esi-0x5],0x4f
  42497e:	pop    ss
  42497f:	lods   eax,DWORD PTR ds:[esi]
  424980:	repnz cli 
  424982:	clc    
  424983:	add    BYTE PTR [ebx+0x24],0x27
  424987:	jle    0x42498d
  424989:	xchg   DWORD PTR [ebx-0x1f],esi
  42498c:	or     dl,al
  42498e:	das    
  42498f:	push   es
  424990:	adc    al,0xc0
  424992:	push   ss
  424993:	push   es
  424994:	or     BYTE PTR [ebp+0x847ef],dl
  42499a:	mov    ah,0xc1
  42499c:	and    BYTE PTR [edi+edx*8],al
  42499f:	test   eax,0x75b8fb6c
  4249a4:	(bad)  
  4249a5:	mov    ebp,0x44d1052b
  4249aa:	push   ebx
  4249ab:	fsubp  st(5),st
  4249ad:	add    bh,ch
  4249af:	cbw    
  4249b1:	shr    DWORD PTR ds:0x2f4464c2,0x6a
  4249b8:	jecxz  0x4249eb
  4249ba:	xchg   edi,eax
  4249bb:	rol    DWORD PTR [ecx-0x26],cl
  4249be:	add    BYTE PTR [eax],al
  4249c0:	test   BYTE PTR [edi-0x5d],ah
  4249c3:	cmp    bh,BYTE PTR [ecx-0x42f71626]
  4249c9:	popf   
  4249ca:	in     eax,0x84
  4249cc:	push   edi
  4249cd:	(bad)  
  4249cf:	pop    es
  4249d0:	imul   DWORD PTR [ecx-0x1a]
  4249d3:	adc    al,0x6f
  4249d5:	pop    ds
  4249d6:	xchg   ecx,eax
  4249d7:	lock xchg edx,eax
  4249d9:	push   cs
  4249da:	rol    esp,1
  4249dc:	xchg   edi,ecx
  4249de:	daa    
  4249df:	mov    ah,0xc7
  4249e1:	push   ds
  4249e2:	xchg   esp,eax
  4249e3:	mov    WORD PTR [ebx+0x5f],cs
  4249e6:	dec    ebp
  4249e7:	fsubr  QWORD PTR [esi+0x28ffbd02]
  4249ed:	repz mov ch,0x31
  4249f0:	test   al,0xec
  4249f2:	jmp    0x671cb788
  4249f7:	in     al,dx
  4249f8:	das    
  4249f9:	mov    esp,DWORD PTR [eax+0x50]
  4249fc:	push   ebx
  4249fd:	sar    BYTE PTR [ebp-0x5],cl
  424a00:	push   0x156dcf69
  424a05:	xchg   edi,eax
  424a06:	sub    al,BYTE PTR [eax+0x4b]
  424a09:	retf   0x3df
  424a0c:	das    
  424a0d:	fisubr WORD PTR [edx+0x19d60b3f]
  424a13:	dec    edi
  424a14:	das    
  424a15:	fidivr WORD PTR [esi+0x2eca4afa]
  424a1b:	shl    DWORD PTR [ebx-0x46],0xdd
  424a1f:	or     eax,0xc0e9de2f
  424a24:	add    BYTE PTR [eax],al
  424a26:	jae    0x4249e2
  424a28:	add    cl,dl
  424a2a:	dec    esp
  424a2b:	cld    
  424a2c:	(bad)  
  424a2d:	call   0x45ca23cd
  424a32:	dec    edi
  424a33:	rol    BYTE PTR [edi+0x69ca4f25],cl
  424a39:	mov    dl,0xc
  424a3b:	cld    
  424a3c:	(bad)  
  424a3d:	call   0xe166b3a9
  424a42:	adc    eax,0x2c93601e
  424a47:	fidivr WORD PTR [edi+0xd]
  424a4a:	dec    edi
  424a4b:	mov    edx,0xba286000
  424a50:	sbb    BYTE PTR [eax+0x47],dl
  424a53:	fld    QWORD PTR [eax]
  424a55:	jmp    0xf166e40b
  424a5a:	sbb    al,0x6
  424a5c:	sub    esi,DWORD PTR ds:0x2984f666
  424a62:	lock loopne 0x424ab5
  424a65:	push   ecx
  424a66:	aad    0x2e
  424a68:	cli    
  424a69:	ss stos DWORD PTR es:[edi],eax
  424a6b:	jno    0x424a91
  424a6d:	shr    DWORD PTR [ebx+ebp*2],1
  424a70:	push   es
  424a71:	popa   
  424a72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a73:	test   al,0x0
  424a75:	jmp    0xe944227f
  424a7a:	sub    al,0x5e
  424a7c:	jp     0x424a63
  424a7e:	sub    al,0xe5
  424a80:	test   DWORD PTR [esp+ebp*1-0x22],ecx
  424a84:	add    BYTE PTR [eax+eiz*2-0x46],ch
  424a88:	inc    eax
  424a89:	das    
  424a8a:	add    BYTE PTR [eax],al
  424a8c:	xor    BYTE PTR [edx+0x7dd4e90f],bh
  424a92:	adc    esi,esp
  424a94:	clc    
  424a95:	js     0x424a97
  424a97:	jb     0x424a31
  424a99:	push   es
  424a9a:	test   esi,esp
  424a9c:	stc    
  424a9d:	cmc    
  424a9e:	sub    DWORD PTR [ecx+0x87d45f],0x12
  424aa5:	mov    esi,0xc26e834c
  424aaa:	add    BYTE PTR [edi],cl
  424aac:	push   ecx
  424aad:	sahf   
  424aae:	and    al,0x13
  424ab0:	push   ss
  424ab1:	xchg   esi,eax
  424ab2:	and    al,0x13
  424ab4:	xchg   esi,eax
  424ab5:	fcom   DWORD PTR [eax+eax*8+0x50c06389]
  424abc:	scas   al,BYTE PTR es:[edi]
  424abd:	jae    0x424acf
  424abf:	(bad)  
  424ac0:	mov    ecx,0x2a8d0084
  424ac5:	mov    esi,0xea08e844
  424aca:	cmc    
  424acb:	inc    DWORD PTR [esi]
  424acd:	xchg   esi,eax
  424ace:	and    al,0x13
  424ad0:	push   esi
  424ad1:	mov    ?,edi
  424ad3:	mov    dl,BYTE PTR ds:0x4600bd03
  424ad9:	fisttp QWORD PTR [ebp-0x585dd44]
  424adf:	call   DWORD PTR [esi+0x30]
  424ae2:	test   BYTE PTR [esi+ecx*4],ah
  424ae5:	fild   WORD PTR [eax]
  424ae7:	add    BYTE PTR [esi-0x11ffbf9c],bl
  424aed:	in     eax,0x11
  424aef:	inc    DWORD PTR [eax]
  424af1:	add    BYTE PTR [ecx+0x9],bl
  424af4:	xor    eax,0x9d6b0c
  424af9:	lea    edx,[edx+0x6025cbe]
  424aff:	fisttp QWORD PTR [ecx-0x72630dbc]
  424b05:	inc    esp
  424b06:	repnz rcl BYTE PTR [eax-0x73],1
  424b0a:	adc    cl,0x34
  424b0d:	mov    edx,0x88f434d0
  424b13:	call   0x0:0x4457e800
  424b1a:	jl     0x424af6
  424b1c:	mov    BYTE PTR [edi+ebp*1-0x1d],al
  424b20:	jmp    0x424ae4
  424b22:	jae    0x424aff
  424b24:	adc    al,0xbc
  424b26:	inc    edi
  424b27:	mov    DWORD PTR [eax+ebp*8],0xfbd21708
  424b2e:	(bad)  
  424b2f:	int    0xd3
  424b31:	adc    eax,0x3f14e3
  424b36:	mov    ah,0xa8
  424b38:	or     al,0x85
  424b3a:	retfw  0x8708
  424b3e:	jg     0x424b5b
  424b40:	mov    ah,0x81
  424b42:	test   DWORD PTR [esi],eax
  424b44:	xor    esp,DWORD PTR [edx]
  424b46:	sub    dh,cl
  424b48:	std    
  424b49:	mov    cl,dh
  424b4b:	out    dx,al
  424b4c:	shl    DWORD PTR ds:0x3e4a23,1
  424b52:	mov    edx,0x2820ba
  424b57:	add    BYTE PTR [esi-0x55bfe4be],dh
  424b5d:	cmp    bl,BYTE PTR [ebx]
  424b5f:	and    al,0xff
  424b61:	jns    0x424bae
  424b63:	and    al,0x3
  424b65:	mov    eax,0x7313243b
  424b6a:	mov    DWORD PTR [eax+0x2f],eax
  424b6d:	mov    ecx,0x6ff243b
  424b72:	mov    edx,0xcae95344
  424b77:	mov    ch,BYTE PTR [edi+0x5]
  424b7a:	out    0x1b,eax
  424b7c:	les    eax,FWORD PTR ds:0x216b87ff
  424b82:	out    dx,al
  424b83:	ret    0x1973
  424b86:	sbb    edi,DWORD PTR [edi+eax*4+0x45]
  424b8a:	(bad)  
  424b8b:	jg     0x424c08
  424b8d:	sbb    esi,ebp
  424b8f:	jmp    DWORD PTR [ebp-0x4be3e48f]
  424b95:	les    edx,FWORD PTR [eax+0x4]
  424b98:	mov    ah,0xde
  424b9a:	sub    eax,0xda8e4320
  424b9f:	mov    db2,ecx
  424ba2:	es add al,0xc4
  424ba5:	leave  
  424ba6:	mov    ecx,0x4de00f2
  424bab:	add    ch,BYTE PTR [esi]
  424bad:	fsubp  st(1),st
  424baf:	add    al,0xab
  424bb1:	inc    esp
  424bb2:	mov    bl,0xd5
  424bb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424bb5:	(bad)  
  424bb6:	or     edi,DWORD PTR [ecx]
  424bb8:	test   al,0xf9
  424bba:	inc    ebx
  424bbb:	rol    DWORD PTR [eax],0x0
  424bbe:	std    
  424bbf:	xchg   BYTE PTR [esi-0x2d],ch
  424bc2:	or     esi,ebx
  424bc4:	fs push esi
  424bc6:	aaa    
  424bc7:	push   es
  424bc8:	jae    0x424bcf
  424bca:	test   bh,ch
  424bcc:	jp     0x424c0e
  424bce:	push   ebx
  424bcf:	loop   0x424bb9
  424bd1:	mov    esp,0x43f1722d
  424bd6:	das    
  424bd7:	push   0xffffffe3
  424bd9:	sub    eax,0xd69bdf57
  424bde:	push   esp
  424bdf:	(bad)  
  424be0:	outs   dx,BYTE PTR ds:[esi]
  424be1:	mov    esi,0x3ed1bf5
  424be6:	loop   0x424c4a
  424be8:	cmp    eax,0x6e86de33
  424bed:	(bad)  [ecx+0x2f02e966]
  424bf3:	fisub  WORD PTR [ecx+0x47]
  424bf6:	and    al,0x64
  424bf8:	popa   
  424bf9:	add    ebp,DWORD PTR [esi]
  424bfb:	fsubp  st(1),st
  424bfd:	mov    ebp,DWORD PTR [edx-0x10]
  424c00:	arpl   WORD PTR [edx+0x475ea59b],si
  424c06:	aaa    
  424c07:	ret    
  424c08:	sbb    dh,BYTE PTR [ecx]
  424c0a:	mov    dh,0xa0
  424c0c:	add    DWORD PTR [ebx-0x2a6c199e],ecx
  424c12:	push   0xffffffef
  424c14:	jmp    ebp
  424c16:	mov    edx,0xdf63fb68
  424c1b:	fadd   QWORD PTR [eax]
  424c1d:	cmp    al,0x1
  424c1f:	jecxz  0x424bd3
  424c21:	sub    al,0x0
  424c23:	add    cl,bh
  424c25:	push   edi
  424c26:	sbb    al,0xe8
  424c28:	mov    ah,0xd1
  424c2a:	add    ah,BYTE PTR [ecx-0x30]
  424c2d:	fisttp QWORD PTR [ebx]
  424c2f:	jg     0x424c61
  424c31:	fmul   QWORD PTR [ebx]
  424c33:	ja     0x424cb3
  424c35:	out    dx,al
  424c36:	enter  0x5962,0xf6
  424c3a:	or     al,0x7b
  424c3d:	fld    QWORD PTR [eax]
  424c3f:	jmp    0xdb442dea
  424c44:	sub    BYTE PTR [eax-0xcb41978],ch
  424c4a:	dec    esp
  424c4b:	loope  0x424c3e
  424c4d:	sbb    ebx,DWORD PTR [edx+0x22]
  424c50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c51:	mov    al,ds:0xdda471fb
  424c56:	add    ecx,ebp
  424c58:	sub    al,0x58
  424c5a:	dec    ebp
  424c5b:	outs   dx,DWORD PTR ds:[esi]
  424c5c:	mov    ah,0x65
  424c5e:	add    eax,ebp
  424c60:	sub    al,0xde
  424c62:	pop    ebx
  424c63:	xor    BYTE PTR [esi-0x27],ch
  424c66:	add    BYTE PTR [esi+0x202ef4b7],bh
  424c6c:	shl    edx,0x73
  424c6f:	or     dh,bh
  424c71:	mov    eax,DWORD PTR [edi-0x7a11f8c5]
  424c77:	(bad)  [edx]
  424c79:	gs pop esp
  424c7b:	add    eax,0x14bc1b
  424c80:	ins    BYTE PTR es:[edi],dx
  424c81:	push   esi
  424c82:	adc    dl,ah
  424c84:	push   0x9c14c2
  424c89:	add    BYTE PTR [esi],ch
  424c8b:	mov    ebp,0x736ba9c9
  424c90:	jecxz  0x424c92
  424c92:	shl    BYTE PTR [esi-0x1e013da9],1
  424c98:	push   ebp
  424c99:	mov    esi,DWORD PTR [edx]
  424c9b:	push   esi
  424c9c:	inc    ebp
  424c9d:	or     BYTE PTR [ebp+0x5],dl
  424ca0:	or     al,0x83
  424ca2:	push   ebx
  424ca3:	fiadd  WORD PTR [eax]
  424ca5:	cmovs  esp,DWORD PTR [edi]
  424ca8:	add    BYTE PTR [eax],al
  424caa:	(bad)  
  424cab:	mov    ah,0x8d
  424cad:	push   ebp
  424cae:	fisubr WORD PTR [eax+0x6d19ca23]
  424cb4:	stc    
  424cb5:	push   0xffffffc5
  424cb7:	pop    ss
  424cb8:	inc    ebp
  424cb9:	call   DWORD PTR [esi+0x30f84d5e]
  424cbf:	gs jge 0x424cce
  424cc2:	xchg   BYTE PTR [edi-0x1f6575f3],al
  424cc8:	test   DWORD PTR [ebp-0x6e],0xeff450f
  424ccf:	repz loope 0x424cd5
  424cd2:	enter  0xe3,0x41
  424cd6:	inc    eax
  424cd7:	xchg   esi,ebx
  424cd9:	movaps xmm3,XMMWORD PTR [edi+0x23c78bf8]
  424ce0:	loop   0x424ce4
  424ce2:	fdivr  QWORD PTR [ebx-0x40]
  424ce5:	mov    al,BYTE PTR [esi-0x7449f81f]
  424ceb:	sbb    bh,BYTE PTR [ebx-0x1f]
  424cee:	add    BYTE PTR [eax],al
  424cf0:	push   ebp
  424cf1:	ins    BYTE PTR es:[edi],dx
  424cf2:	jmp    0x4aee:0xc1d5e7c1
  424cf9:	in     al,dx
  424cfa:	out    dx,eax
  424cfb:	mov    dl,BYTE PTR [eax+0x16408222]
  424d01:	fs mov edi,0xf78f8603
  424d07:	add    DWORD PTR [esi+0x2f76f59f],ebx
  424d0d:	in     al,dx
  424d0e:	std    
  424d0f:	mov    cl,0x72
  424d11:	rol    DWORD PTR [ebx-0x1d49d722],1
  424d17:	(bad)  
  424d18:	out    dx,eax
  424d19:	int    0x6
  424d1b:	pop    es
  424d1c:	cmc    
  424d1d:	xor    BYTE PTR [ebp-0x40],0xb5
  424d21:	ss jmp esi
  424d24:	sub    eax,0x52801049
  424d29:	or     al,0x5
  424d2b:	jb     0x424d65
  424d2d:	add    al,0x99
  424d2f:	dec    ebp
  424d30:	lds    esi,FWORD PTR [edi-0x1c]
  424d33:	cmp    esp,DWORD PTR [ebp+0x6f86bf6d]
  424d39:	neg    ecx
  424d3b:	(bad)  
  424d3c:	fcomip st,st(1)
  424d3e:	jle    0x424dbd
  424d40:	aas    
  424d41:	not    DWORD PTR [edx+0x21]
  424d44:	sub    BYTE PTR [ebp+0x6a662d2],cl
  424d4a:	(bad)  
  424d4b:	mov    cl,0x2
  424d4d:	dec    edx
  424d4e:	(bad)  
  424d4f:	mov    cl,0x5d
  424d51:	or     ebx,DWORD PTR [ecx+0x110000c9]
  424d57:	outs   dx,BYTE PTR ds:[esi]
  424d58:	dec    edi
  424d59:	dec    BYTE PTR [edx]
  424d5b:	outs   dx,BYTE PTR ds:[esi]
  424d5c:	das    
  424d5d:	add    al,0xd1
  424d5f:	jge    0x424d98
  424d61:	add    ch,BYTE PTR [esi+esi*1+0x6f3ee6f7]
  424d68:	out    0x85,eax
  424d6a:	repnz xchg ecx,eax
  424d6c:	ja     0x424dc6
  424d6e:	cs jg  0x424da0
  424d71:	(bad)  
  424d72:	test   al,0x3e
  424d74:	add    bh,BYTE PTR [edi+0x6f]
  424d77:	cli    
  424d78:	cmp    DWORD PTR [ebp+0x23],0x6782fdf7
  424d7f:	mov    ah,0xce
  424d81:	sti    
  424d82:	sbb    BYTE PTR [ebx+0x2a],0x27
  424d86:	jb     0x424d66
  424d88:	icebp  
  424d89:	mov    esp,0x38e9dad1
  424d8e:	mov    al,0xfa
  424d90:	fbstp  TBYTE PTR gs:[ebx]
  424d93:	(bad)  
  424d94:	mov    dl,0x80
  424d96:	cmp    ebx,ebp
  424d98:	outs   dx,BYTE PTR ds:[esi]
  424d99:	dec    eax
  424d9a:	daa    
  424d9b:	push   edi
  424d9c:	and    BYTE PTR [edx+esi*2-0xe],bh
  424da0:	lods   eax,DWORD PTR ds:[esi]
  424da1:	ret    0x5f34
  424da4:	cmp    al,BYTE PTR [ebx]
  424da6:	das    
  424da7:	fidivr WORD PTR [ebx]
  424da9:	adc    eax,0xdb7afdd
  424dae:	in     al,0x6f
  424db0:	and    edx,DWORD PTR [esi]
  424db2:	mul    BYTE PTR [edx-0x60]
  424db5:	push   edi
  424db6:	add    BYTE PTR [esi+0x44],bl
  424db9:	add    BYTE PTR [eax],al
  424dbb:	add    BYTE PTR [edi],ch
  424dbd:	pop    eax
  424dbe:	out    dx,al
  424dbf:	push   edi
  424dc0:	xor    bl,BYTE PTR [edi-0x5a]
  424dc3:	push   es
  424dc4:	mov    ch,bl
  424dc6:	es jg  0x424db7
  424dc9:	adc    ch,ah
  424dcb:	inc    eax
  424dcc:	sbb    al,0xd7
  424dce:	jmp    0xa9af:0x61586e99
  424dd5:	sahf   
  424dd6:	jmp    0xb0efc7b7
  424ddb:	mov    BYTE PTR [esi+0x72],ah
  424dde:	in     al,dx
  424ddf:	and    DWORD PTR [esi-0x3e],0x64
  424de3:	inc    ebx
  424de4:	mov    al,ds:0x55c355db
  424de9:	adc    eax,0xb18bc07
  424dee:	xlat   BYTE PTR ds:[ebx]
  424def:	(bad)  
  424df0:	mov    bl,0x15
  424df2:	fisttp QWORD PTR [eax]
  424df4:	in     eax,dx
  424df5:	jmp    0x424e16
  424df7:	jl     0x424de4
  424df9:	rol    BYTE PTR [ecx+0x46],1
  424dfc:	mov    al,0xe7
  424dfe:	in     al,0x4f
  424e00:	aad    0x60
  424e02:	add    BYTE PTR [edi],bh
  424e04:	xchg   DWORD PTR [ebx+0x63e49c86],esp
  424e0a:	inc    ebp
  424e0b:	and    BYTE PTR [ecx+0xc29f991],dl
  424e11:	in     al,dx
  424e12:	mov    edx,0xc1e43701
  424e17:	arpl   WORD PTR [eax],di
  424e19:	hlt    
  424e1a:	xchg   DWORD PTR [eax+eiz*8+0x29c163],ebp
  424e21:	add    ah,cl
  424e23:	fild   WORD PTR [esi]
  424e25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424e26:	repz sbb eax,0xf5ece5de
  424e2c:	std    
  424e2d:	repnz jmp 0xfb90:0x49df4d55
  424e35:	sbb    al,BYTE PTR [ebp+edx*2+0x1bb1cc45]
  424e3c:	jp     0x424e1a
  424e3e:	xor    esi,DWORD PTR [ecx-0xc]
  424e41:	jae    0x424e33
  424e43:	fdivr  st,st(4)
  424e45:	mov    dh,0xe9
  424e47:	icebp  
  424e48:	xchg   edi,esp
  424e4a:	mov    cl,0x14
  424e4c:	jne    0x424e37
  424e4e:	in     eax,dx
  424e4f:	mov    dl,0xc6
  424e51:	sbb    eax,0xe6dbb26a
  424e56:	stos   BYTE PTR es:[edi],al
  424e57:	call   0x2c87:0x875f8efb
  424e5e:	push   edi
  424e5f:	ret    0xf145
  424e62:	pop    ds
  424e63:	xchg   ebx,eax
  424e64:	leave  
  424e65:	stos   DWORD PTR es:[edi],eax
  424e66:	fs jmp 0x7102:0x637c6254
  424e6e:	sub    eax,0xe6e8f66b
  424e73:	ror    DWORD PTR [ebp-0xe3cd258],1
  424e79:	pop    esp
  424e7a:	cli    
  424e7b:	out    0x85,al
  424e7d:	add    BYTE PTR [edx-0x2c],dl
  424e80:	sub    dl,BYTE PTR [eax+0x69]
  424e83:	adc    BYTE PTR gs:[eax+0x0],al
  424e87:	add    bh,cl
  424e89:	nop
  424e8a:	hlt    
  424e8b:	pop    esi
  424e8c:	inc    ebp
  424e8d:	aam    0x74
  424e8f:	and    al,0x2
  424e91:	xchg   edx,eax
  424e92:	pop    es
  424e93:	push   edi
  424e94:	sub    DWORD PTR [ecx+0xec00824],edx
  424e9a:	adc    eax,0x9e004c
  424e9f:	add    DWORD PTR [edx-0x17],0xffffff8b
  424ea3:	inc    edi
  424ea4:	jmp    0xccb70f0c
  424ea9:	imul   ecx,DWORD PTR [eax+esi*1-0x37],0xffffffcc
  424eae:	or     al,0x30
  424eb0:	push   ds
  424eb1:	xchg   esi,ebp
  424eb3:	ret    0xddd2
  424eb6:	push   ebp
  424eb7:	mov    ebp,edx
  424eb9:	mov    bl,0x4b
  424ebb:	xor    ecx,DWORD PTR [edi-0x477b050]
  424ec1:	sbb    BYTE PTR [eax-0x767f17b3],cl
  424ec7:	mov    BYTE PTR [esi+0xd0000e2],dl
  424ecd:	adc    dh,BYTE PTR [edx+0xdd8700]
  424ed3:	mov    BYTE PTR [eax+0x5d663ea2],bl
  424ed9:	daa    
  424eda:	push   0xfffffff7
  424edc:	or     eax,0x79fa8312
  424ee1:	push   ebx
  424ee2:	dec    ebp
  424ee3:	(bad)  
  424ee4:	(bad)  [esi-0x5b575f8]
  424eea:	test   BYTE PTR [esi],dl
  424eec:	add    BYTE PTR [eax],al
  424eee:	inc    esp
  424eef:	daa    
  424ef0:	add    BYTE PTR [ebp-0x38],cl
  424ef3:	call   0x642a9ca8
  424ef8:	sbb    al,0x1
  424efa:	das    
  424efb:	xchg   ecx,eax
  424efc:	dec    ecx
  424efd:	sti    
  424efe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424eff:	stc    
  424f00:	jbe    0x424f16
  424f02:	cs lock xchg esp,eax
  424f05:	dec    ebp
  424f06:	sub    ah,bl
  424f08:	inc    ecx
  424f09:	or     al,0x9a
  424f0b:	sti    
  424f0c:	les    eax,FWORD PTR [ebp+0x18]
  424f0f:	test   DWORD PTR [ebx+ecx*2-0x66],0x645a2bb0
  424f17:	scas   al,BYTE PTR es:[edi]
  424f18:	mov    esi,0x15f2f08
  424f1d:	add    DWORD PTR [edi],ebp
  424f1f:	test   ecx,0x7def4b74
  424f25:	shl    BYTE PTR [ebx],0x47
  424f28:	retf   0x7315
  424f2b:	or     DWORD PTR [edi],edi
  424f2d:	add    BYTE PTR [edx+eax*8-0x8d44200],ch
  424f34:	push   esi
  424f35:	(bad)  
  424f36:	das    
  424f37:	idiv   esi
  424f39:	jle    0x424f2a
  424f3b:	cli    
  424f3c:	cs sti 
  424f3e:	inc    ebx
  424f3f:	jecxz  0x424f41
  424f41:	sti    
  424f42:	sbb    dh,BYTE PTR [ebx+0x742f3ff2]
  424f48:	ret    
  424f49:	or     al,0x6d
  424f4b:	cli    
  424f4c:	inc    BYTE PTR [esi+0xdc7427]
  424f52:	add    BYTE PTR [eax],al
  424f54:	sbb    ebp,ebp
  424f56:	cmp    esi,DWORD PTR [ebp+0x1e]
  424f59:	outs   dx,BYTE PTR ds:[esi]
  424f5a:	dec    edi
  424f5b:	add    al,0xb6
  424f5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f5e:	cld    
  424f5f:	mov    esi,0x4bf73dd
  424f64:	(bad)  [esi+0x34]
  424f67:	sti    
  424f68:	push   0x3787be67
  424f6d:	je     0x424f4b
  424f6f:	add    bl,ah
  424f71:	sbb    eax,0xde3c743c
  424f76:	data16 fmul QWORD PTR [eax+0x6c]
  424f7a:	out    0x11,al
  424f7c:	outs   dx,DWORD PTR ds:[esi]
  424f7d:	sbb    al,0x5e
  424f7f:	mov    ebp,0xd9411fb0
  424f84:	xor    eax,0x45da41e8
  424f89:	out    0xb8,eax
  424f8b:	sti    
  424f8c:	test   eax,0x33533214
  424f91:	push   ebx
  424f92:	and    edi,DWORD PTR [edx-0x3]
  424f95:	test   BYTE PTR [edi+ecx*8],0x4
  424f99:	call   0x1ec449ab
  424f9e:	in     eax,dx
  424f9f:	xor    eax,0x2c0118b0
  424fa4:	repz out 0x1,eax
  424fa7:	xchg   ebx,eax
  424fa8:	sbb    esp,DWORD PTR cs:[ebp+edx*8+0x5a]
  424fad:	(bad)  [esi-0x1eac673d]
  424fb3:	add    dh,0xde
  424fb6:	pop    ebp
  424fb7:	adc    BYTE PTR [eax],al
  424fb9:	add    BYTE PTR [esi+0x72],dh
  424fbc:	add    edi,DWORD PTR [ebx]
  424fbe:	cmp    ecx,edi
  424fc0:	and    BYTE PTR [eax+0x1f],bl
  424fc3:	xchg   ebp,eax
  424fc4:	push   esp
  424fc5:	fisubr DWORD PTR [eax-0x4f4291f0]
  424fcb:	sbb    edx,ecx
  424fcd:	mov    ds:0xd9b1e7a5,al
  424fd2:	pop    edi
  424fd3:	je     0x424fbe
  424fd5:	fcom   DWORD PTR [ecx-0x23ca178b]
  424fdb:	push   edx
  424fdc:	scas   al,BYTE PTR es:[edi]
  424fdd:	fdiv   QWORD PTR [ebx-0x16]
  424fe0:	xchg   ecx,eax
  424fe1:	int    0xb8
  424fe3:	out    0x18,eax
  424fe5:	cld    
  424fe6:	test   eax,0x33548218
  424feb:	push   ebx
  424fec:	mov    ds:0xfff67079,al
  424ff1:	fs jg  0x424fd7
  424ff4:	cli    
  424ff5:	adc    BYTE PTR [eax+0x68],0xc0
  424ff9:	in     eax,dx
  424ffa:	call   FWORD PTR [esi-0x2e]
  424ffd:	jb     0x424f81
  424fff:	idiv   dl
  425001:	push   edx
  425002:	push   0xffffffe3
  425004:	xchg   BYTE PTR [edi],ah
  425006:	outs   dx,BYTE PTR ds:[esi]
  425007:	pop    edi
  425008:	dec    esp
  425009:	or     eax,0x97095f37
  42500e:	gs xchg ebp,eax
  425010:	push   ebx
  425011:	bound  eax,QWORD PTR [ebx]
  425013:	jb     0x425023
  425015:	mov    al,ds:0xea66ca79
  42501a:	pop    ds
  42501b:	sbb    BYTE PTR [ebp+0x2e0000a7],cl
  425021:	test   ebx,esi
  425023:	sbb    ah,ch
  425025:	std    
  425026:	std    
  425027:	add    eax,esi
  425029:	cmp    bh,0xb9
  42502c:	sahf   
  42502d:	pop    eax
  42502e:	inc    edx
  42502f:	jmp    0x425046
  425031:	jmp    0x425023
  425033:	sub    bl,dl
  425035:	out    0x4a,al
  425037:	add    DWORD PTR [esp+ebp*1-0x19b81906],edi
  42503e:	test   dh,bl
  425040:	pop    eax
  425041:	iret   
  425042:	xchg   DWORD PTR ds:0x45e8da07,ebp
  425048:	loop   0x42502c
  42504a:	cli    
  42504b:	ins    BYTE PTR es:[edi],dx
  42504c:	ins    BYTE PTR es:[edi],dx
  42504d:	jno    0x425059
  42504f:	jb     0x4250b1
  425051:	ret    0x6c10
  425054:	aad    0x71
  425056:	(bad)  
  425057:	pop    edi
  425058:	sub    eax,0x8492c35f
  42505d:	mov    ebp,eax
  42505f:	push   ebx
  425060:	popf   
  425061:	jecxz  0x42505d
  425063:	fisubr DWORD PTR [edx+eax*4+0x5a]
  425067:	stos   DWORD PTR es:[edi],eax
  425068:	je     0x425050
  42506a:	push   esp
  42506b:	add    ch,bl
  42506d:	or     eax,DWORD PTR [ebx+0x3d508]
  425073:	je     0x4250e2
  425075:	mov    ds:0x3c51574,eax
  42507a:	sti    
  42507b:	jae    0x4250d7
  42507d:	int3   
  42507e:	rcr    BYTE PTR [esi+0x15],0xb2
  425082:	dec    esi
  425083:	mov    eax,DWORD PTR [eax]
  425085:	add    ah,bl
  425087:	add    al,BYTE PTR [edi]
  425089:	(bad)  
  42508a:	loope  0x4250a5
  42508c:	push   edi
  42508d:	jmp    0x42509f
  42508f:	adc    esi,DWORD PTR [eax+0x8]
  425092:	popf   
  425093:	daa    
  425094:	div    DWORD PTR [eax+0xa]
  425097:	addr16 mov esi,0xde09388b
  42509d:	sti    
  42509e:	push   ecx
  42509f:	adc    ah,bl
  4250a1:	or     edx,DWORD PTR [ebp-0x72a9fbdf]
  4250a7:	and    ebp,eax
  4250a9:	pop    ebx
  4250aa:	sbb    eax,0xd7b0f712
  4250af:	mov    bl,0xbb
  4250b1:	push   esi
  4250b2:	mov    ecx,0xd2247c66
  4250b7:	data16 icebp 
  4250b9:	test   ecx,eax
  4250bb:	mov    eax,DWORD PTR [ebx+esi*1]
  4250be:	xchg   esi,eax
  4250bf:	add    eax,0x5cbe8b4d
  4250c4:	jmp    0x4a13aac9
  4250c9:	je     0x4250f0
  4250cb:	mov    ds:0x8e5f1274,eax
  4250d0:	add    ecx,DWORD PTR [ecx+0x5b]
  4250d3:	add    ecx,DWORD PTR [edx-0x18]
  4250d6:	(bad)  
  4250d7:	pop    ss
  4250d8:	idiv   edi
  4250da:	ins    DWORD PTR es:[edi],dx
  4250db:	retf   0x62
  4250de:	popf   
  4250df:	fsub   QWORD PTR [edx+0x1]
  4250e2:	cmp    BYTE PTR [ebp-0x41],ah
  4250e5:	mov    ebp,DWORD PTR [edi]
  4250e7:	inc    ecx
  4250e8:	fdiv   QWORD PTR [ebx+0x54730000]
  4250ee:	(bad)  
  4250ef:	out    0xf,eax
  4250f1:	pop    esp
  4250f2:	push   esp
  4250f3:	or     BYTE PTR [esp+esi*1-0x7fcc8f39],dh
  4250fa:	mov    esi,0xc770a6e8
  4250ff:	sti    
  425100:	push   esp
  425101:	jmp    0xd379:0xfb6f7f34
  425108:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425109:	mov    ebp,0x9435fcdc
  42510e:	mov    DWORD PTR [edi-0x41d6c410],0x279f72b
  425118:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425119:	cmp    bl,BYTE PTR [ebx]
  42511b:	or     BYTE PTR [edi+0x3f],ah
  42511e:	push   eax
  42511f:	(bad)  
  425120:	(bad)  
  425122:	das    
  425123:	push   ecx
  425124:	pop    ss
  425125:	mov    cl,0x94
  425127:	cli    
  425128:	clc    
  425129:	jg     0x4250f7
  42512b:	test   eax,esi
  42512d:	dec    edx
  42512e:	out    0xfa,al
  425130:	arpl   WORD PTR [ebx],dx
  425132:	xrelease xchg BYTE PTR [ebx+0x1b],bh
  425136:	repz xchg al,ch
  425139:	jg     0x4250f9
  42513b:	call   0xfc08459b
  425140:	mov    dl,0x36
  425142:	dec    ebx
  425143:	push   es
  425144:	stos   BYTE PTR es:[edi],al
  425145:	pop    ds
  425146:	dec    ebx
  425147:	(bad)  
  425148:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425149:	idiv   DWORD PTR [ecx-0x3d]
  42514c:	(bad)  
  42514d:	(bad)  
  42514e:	sub    eax,0xe80000e8
  425153:	leavew 
  425155:	sti    
  425156:	pop    esp
  425157:	aaa    
  425158:	es mov esi,0x872ff727
  42515e:	add    ebp,0x33
  425161:	das    
  425162:	fs fucom st(0)
  425165:	sub    BYTE PTR [edi],bl
  425167:	gs jmp 0xa7eb:0x60d5f27e
  42516f:	test   ebp,esp
  425171:	jl     0x42517a
  425173:	(bad)  
  425174:	cmp    DWORD PTR [eax+ecx*2],eax
  425177:	ja     0x42518c
  425179:	xor    esi,DWORD PTR [eax+0x10f46da2]
  42517f:	ficom  WORD PTR [esi]
  425181:	aaa    
  425182:	clc    
  425183:	nop
  425184:	bound  edx,QWORD PTR [eax+0x1f]
  425187:	in     eax,0xd3
  425189:	imul   ecx
  42518b:	jne    0x4251cd
  42518d:	enter  0xde2f,0x4a
  425191:	mov    dl,0xb0
  425193:	out    dx,al
  425194:	std    
  425195:	(bad)  
  425196:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425197:	mov    ah,0x6c
  425199:	inc    ecx
  42519a:	mov    es,WORD PTR cs:[ecx+0x30]
  42519e:	(bad)  
  4251a0:	sub    DWORD PTR [edx+esi*2-0x1e],edi
  4251a4:	ffree  st(6)
  4251a6:	jnp    0x42516c
  4251a8:	mov    dh,0x36
  4251aa:	pop    ebp
  4251ab:	mov    ss,WORD PTR [edx]
  4251ad:	push   eax
  4251ae:	pop    ds
  4251af:	jecxz  0x425144
  4251b1:	idiv   DWORD PTR [ecx+0x76]
  4251b4:	adc    al,cl
  4251b6:	add    BYTE PTR [eax],al
  4251b8:	das    
  4251b9:	fdivp  st(2),st
  4251bb:	mov    cl,0x20
  4251bd:	sbb    al,0x7d
  4251bf:	not    ebp
  4251c1:	imul   ebp,ebp,0xe32e5fda
  4251c7:	leave  
  4251c8:	adc    DWORD PTR [esi],ebx
  4251ca:	into   
  4251cb:	repnz mov cl,0x91
  4251ce:	aad    0x7d
  4251d0:	push   0xffffffd6
  4251d2:	popa   
  4251d3:	call   0x7d33a737
  4251d8:	repnz int 0x70
  4251db:	cmp    al,0x33
  4251dd:	push   ebp
  4251de:	add    BYTE PTR [ecx],bh
  4251e0:	xchg   ebx,eax
  4251e1:	xor    eax,DWORD PTR [ecx]
  4251e3:	push   cs
  4251e4:	push   ebp
  4251e5:	mov    ecx,ecx
  4251e7:	stos   DWORD PTR es:[edi],eax
  4251e8:	xchg   ebx,esp
  4251ea:	test   DWORD PTR ds:0x68e8d64f,ebp
  4251f0:	or     ah,bh
  4251f2:	cli    
  4251f3:	fs jae 0x42525b
  4251f6:	add    al,0xbb
  4251f8:	ins    BYTE PTR es:[edi],dx
  4251f9:	sti    
  4251fa:	or     DWORD PTR [ecx],ebx
  4251fc:	pushw  0x24
  4251ff:	in     eax,0x67
  425201:	push   0x24
  425203:	frstor [edi+ecx*4-0x5]
  425207:	data16 jbe 0x42522e
  42520a:	or     cl,ch
  42520c:	or     DWORD PTR [ebx-0x14],ebx
  42520f:	push   0x57
  425211:	rol    BYTE PTR [edi-0x786bdb48],cl
  425217:	loopne 0x425277
  425219:	pop    DWORD PTR [edi+0x16000041]
  42521f:	sub    eax,0x6f93f143
  425224:	xor    al,0x2
  425226:	ret    0xabd6
  425229:	cmp    DWORD PTR [esi],eax
  42522b:	cmp    BYTE PTR [edi+0x7554e2d2],bh
  425231:	adc    eax,0x60046d72
  425236:	js     0x425222
  425238:	or     dl,BYTE PTR [esi+0x7e]
  42523b:	stos   BYTE PTR es:[edi],al
  42523c:	(bad)  
  42523d:	clc    
  42523e:	xor    ebp,DWORD PTR [edi+0x18]
  425241:	imul   ebp,DWORD PTR [eax-0x2a],0xe6186000
  425248:	jae    0x42523b
  42524a:	inc    ebx
  42524b:	lahf   
  42524c:	and    BYTE PTR [eax-0x7],dh
  42524f:	aad    0xe7
  425251:	out    dx,eax
  425252:	xor    eax,0xff620869
  425257:	mov    ebp,0xe64f0087
  42525c:	and    DWORD PTR [ebp-0x1e],ebx
  42525f:	in     eax,0xa5
  425261:	pop    edi
  425262:	xchg   edx,eax
  425263:	fstp   DWORD PTR [ebp+0x8]
  425266:	fpatan 
  425268:	mov    esi,0x82da5610
  42526d:	inc    edi
  42526e:	mov    ds,edx
  425270:	add    DWORD PTR [ebp+0x65],esi
  425273:	popa   
  425274:	inc    ebp
  425275:	or     BYTE PTR [ebp-0x51b27e0a],ch
  42527b:	imul   edi,DWORD PTR [eax+ecx*1],0xffffffbd
  42527f:	fadd   QWORD PTR [edx-0x31fffff8]
  425285:	in     al,0x40
  425287:	inc    eax
  425288:	jge    0x4252a7
  42528a:	push   0xfffffff6
  42528c:	push   ebp
  42528d:	xchg   ebx,eax
  42528e:	cld    
  42528f:	add    edx,DWORD PTR [ebx+0x54c3331a]
  425295:	add    ah,bl
  425297:	push   esp
  425298:	cmp    bl,al
  42529a:	jne    0x4252c4
  42529c:	popf   
  42529d:	mov    al,ds:0x62fbeb08
  4252a2:	dec    ebp
  4252a3:	clc    
  4252a4:	add    eax,0xf00ce326
  4252a9:	bound  edx,QWORD PTR [eax]
  4252ab:	data16 jg 0x42529d
  4252ae:	jns    0x425276
  4252b0:	add    al,0x5b
  4252b2:	rol    BYTE PTR [edx],0xdd
  4252b5:	sbb    al,0x6a
  4252b7:	lock aad 0x90
  4252ba:	cld    
  4252bb:	add    edx,DWORD PTR [ebx+0x54c33319]
  4252c1:	ss jecxz 0x4252ec
  4252c4:	call   0x8a0:0x4d2473e1
  4252cb:	jmp    0x4252fa
  4252cd:	gs dec ebp
  4252cf:	clc    
  4252d0:	lds    esp,FWORD PTR ds:0x7c2f0ae3
  4252d6:	hlt    
  4252d7:	mov    BYTE PTR [ecx+0x74],al
  4252da:	mov    edx,0x37ac04
  4252df:	aaa    
  4252e0:	outs   dx,BYTE PTR ds:[esi]
  4252e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4252e2:	into   
  4252e3:	call   FWORD PTR [ebx]
  4252e5:	sub    edi,edi
  4252e7:	inc    esp
  4252e8:	add    BYTE PTR [eax],al
  4252ea:	mov    ebp,esp
  4252ec:	mov    ebp,0x22988e6e
  4252f1:	push   edi
  4252f2:	xor    ax,0x0
  4252f6:	fidivr DWORD PTR [ebx-0x28]
  4252f9:	sbb    DWORD PTR [ebx-0x69],0xc42f0004
  425300:	sub    dl,BYTE PTR [ebx+0x58]
  425303:	jmp    0x18f3:0x5f5786f2
  42530a:	das    
  42530b:	div    ecx
  42530d:	mov    dl,0x6f
  42530f:	outs   dx,BYTE PTR ds:[esi]
  425310:	inc    ecx
  425311:	hlt    
  425312:	xchg   esi,esi
  425314:	dec    edx
  425315:	add    edi,DWORD PTR [edi-0xa]
  425318:	(bad)  [esp+ebp*1]
  42531b:	idiv   esi
  42531d:	cs add al,0x11
  425320:	push   es
  425321:	mov    edi,0x45b9eda2
  425326:	sbb    esi,ebp
  425328:	(bad)  
  425329:	jmp    FWORD PTR [edi]
  42532b:	jl     0x42536e
  42532d:	hlt    
  42532e:	inc    edi
  42532f:	sbb    ch,bh
  425331:	jae    0x42535b
  425333:	(bad)  
  425334:	(bad)  
  425335:	jae    0x42535b
  425337:	adc    cl,al
  425339:	sti    
  42533a:	das    
  42533b:	idiv   DWORD PTR [ebp-0x38]
  42533e:	aaa    
  42533f:	outs   dx,BYTE PTR ds:[esi]
  425340:	inc    ecx
  425341:	hlt    
  425342:	stos   BYTE PTR es:[edi],al
  425343:	jns    0x4253a9
  425345:	sti    
  425346:	shl    bh,1
  425348:	cs sti 
  42534a:	inc    edx
  42534b:	add    edi,DWORD PTR [ebp+ebx*2+0x0]
  42534f:	add    bl,dl
  425351:	fnsave [eax+0x28]
  425354:	mov    edi,0xa6dc3c56
  425359:	or     ch,0xbe
  42535c:	mov    dl,0x7d
  42535e:	retf   0xa4c6
  425361:	mov    eax,ds:0xe12f03e9
  425366:	rol    DWORD PTR [ebx],cl
  425368:	cmp    ebx,DWORD PTR [esi+0x6a6f80e9]
  42536e:	loop   0x425381
  425370:	outs   dx,DWORD PTR ds:[esi]
  425371:	div    BYTE PTR [edx+0x6ede2f01]
  425377:	adc    BYTE PTR [ebx-0x3fbd637],ah
  42537d:	push   edx
  42537e:	fs pop edi
  425380:	fs loopne 0x425304
  425383:	xor    ebp,DWORD PTR [edx+0x5433a59a]
  425389:	pop    es
  42538a:	ins    BYTE PTR es:[edi],dx
  42538b:	ret    
  42538c:	xor    al,0x4b
  42538e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42538f:	jnp    0x42536b
  425391:	jecxz  0x4253b1
  425393:	mov    bl,0xc3
  425395:	mov    esp,0x552b366e
  42539a:	ins    BYTE PTR es:[edi],dx
  42539b:	pop    ebx
  42539c:	and    al,0xe0
  42539e:	dec    ecx
  42539f:	or     ch,dh
  4253a1:	popa   
  4253a2:	in     al,dx
  4253a3:	sbb    ch,dh
  4253a5:	push   ebp
  4253a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4253a7:	shr    DWORD PTR [eax-0x6c7fa131],cl
  4253ad:	fild   QWORD PTR [ecx]
  4253af:	(bad)  
  4253b0:	cmp    BYTE PTR ds:0xa4,bl
  4253b6:	push   eax
  4253b7:	sbb    eax,0x54034070
  4253bc:	lods   al,BYTE PTR ds:[esi]
  4253bd:	iret   
  4253be:	push   0x6a7ce6fe
  4253c3:	and    bh,BYTE PTR [ebp+0x37]
  4253c6:	fcomp  QWORD PTR [ecx-0x21d0fc9b]
  4253cc:	add    cl,cl
  4253ce:	js     0x4253a9
  4253d0:	mov    BYTE PTR [ebp+edi*4+0x403e40f8],cl
  4253d7:	pop    ecx
  4253d8:	je     0x4253b8
  4253da:	jmp    0x500a:0x68644fe3
  4253e1:	into   
  4253e2:	rcr    DWORD PTR [ecx-0x40],1
  4253e5:	test   BYTE PTR [ecx],0x99
  4253e8:	sidtd  [eax-0x31]
  4253ec:	je     0x4253ef
  4253ee:	push   es
  4253ef:	xchg   ebx,eax
  4253f0:	add    al,0x62
  4253f2:	add    BYTE PTR [esi-0x5],ah
  4253f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4253f6:	jb     0x42539f
  4253f8:	rcr    DWORD PTR [eax+esi*2],0xb8
  4253fc:	shl    DWORD PTR [eax+0x28],0xfa
  425400:	xchg   dh,bl
  425402:	out    0x58,eax
  425404:	je     0x42538c
  425406:	jb     0x4253eb
  425408:	ss test al,0xe8
  42540b:	xlat   BYTE PTR ds:[ebx]
  42540c:	daa    
  42540d:	test   al,0xc4
  42540f:	cwde   
  425410:	call   0x55988297
  425415:	cli    
  425416:	and    al,0x81
  425418:	not    ah
  42541a:	add    BYTE PTR [eax],al
  42541c:	xor    eax,0x23fa5da7
  425421:	pop    ebx
  425422:	clc    
  425423:	dec    edi
  425424:	jmp    0x14db:0x8464ee2
  42542b:	test   eax,0xf2f8572c
  425430:	not    edx
  425432:	test   ah,ch
  425434:	jmp    0x425418
  425436:	cli    
  425437:	mov    esi,0xf9e4c8f3
  42543c:	ins    BYTE PTR es:[edi],dx
  42543d:	ficom  WORD PTR [ebx-0x46]
  425440:	addr16 out dx,al
  425442:	cli    
  425443:	hlt    
  425444:	xchg   esp,eax
  425445:	into   
  425446:	inc    eax
  425447:	add    dh,al
  425449:	aad    0xeb
  42544b:	cmovp  edi,DWORD PTR [esi+0x65c1fff7]
  425452:	jge    0x42545c
  425454:	rcl    DWORD PTR [ecx-0x102ea9e4],1
  42545a:	(bad)  
  42545b:	adc    BYTE PTR [esi],al
  42545d:	fimul  DWORD PTR [ecx-0x442a29bb]
  425463:	jne    0x4253e7
  425465:	mov    al,0xf7
  425467:	adc    eax,0x3aeace
  42546c:	jg     0x42544c
  42546e:	cmc    
  42546f:	inc    ecx
  425471:	and    BYTE PTR [ebp-0x5],al
  425474:	xchg   edi,eax
  425475:	cmp    BYTE PTR [ecx],0x5d
  425478:	adc    ch,dl
  42547a:	jle    0x4254ed
  42547c:	xchg   edx,ebx
  42547e:	add    BYTE PTR [ebx-0x19e50000],cl
  425484:	xchg   DWORD PTR [ebp-0xa],eax
  425487:	gs inc ebp
  425489:	fdivr  QWORD PTR [ebp-0x61]
  42548c:	aam    0x89
  42548e:	pop    ebx
  42548f:	mov    DWORD PTR ds:[ebp+0x6],eax
  425493:	inc    bp
  425495:	loopne 0x425504
  425497:	lahf   
  425498:	fadd   st,st(7)
  42549a:	mov    edx,DWORD PTR [edx+0x1]
  42549d:	add    BYTE PTR [esi-0x26],al
  4254a0:	mov    DWORD PTR [ebp-0x36],eax
  4254a3:	push   esp
  4254a4:	inc    esp
  4254a5:	pushf  
  4254a6:	out    0xa2,al
  4254a8:	xor    al,0x6c
  4254aa:	push   ecx
  4254ab:	push   ds
  4254ac:	add    DWORD PTR [ecx+0x5d8879b3],ecx
  4254b2:	mov    dl,0xa2
  4254b4:	adc    al,0x8c
  4254b6:	out    0x21,eax
  4254b8:	add    DWORD PTR [eax-0x74ff582d],eax
  4254be:	shr    DWORD PTR [ebp-0x38d0bfeb],cl
  4254c4:	dec    ebx
  4254c5:	jge    0x425479
  4254c7:	cmp    BYTE PTR [edx-0x557555b0],0x50
  4254ce:	shl    BYTE PTR [edx-0x3890f022],1
  4254d4:	jnp    0x425496
  4254d6:	cmp    ah,BYTE PTR [eax+0x2c]
  4254d9:	sti    
  4254da:	and    dl,BYTE PTR [ebx+0x4e2f4015]
  4254e0:	dec    eax
  4254e1:	hlt    
  4254e2:	data16 adc dh,BYTE PTR [ecx+0x2a000075]
  4254e9:	out    dx,al
  4254ea:	pop    edi
  4254eb:	lock and edx,ebp
  4254ee:	push   ebx
  4254ef:	sti    
  4254f0:	sbb    dl,BYTE PTR [edi-0x2648a42]
  4254f6:	mov    ebp,0x3eb76f15
  4254fb:	add    BYTE PTR [edx+ecx*1+0xaa24f0d],ah
  425502:	leave  
  425503:	call   0xfc00c74d
  425508:	cld    
  425509:	loopne 0x42550e
  42550b:	push   0xfffec7b2
  425510:	push   eax
  425511:	ror    BYTE PTR [edx],cl
  425513:	mov    dl,ch
  425515:	xor    bh,BYTE PTR [esi-0x5f15f82d]
  42551b:	jne    0x42553b
  42551d:	mov    cl,0x4
  42551f:	push   edx
  425520:	(bad)  
  425521:	rol    DWORD PTR [ebx],cl
  425523:	add    BYTE PTR [edi],ch
  425525:	xor    al,0x38
  425527:	or     al,0x20
  425529:	shl    BYTE PTR [esi-0x743890f1],cl
  42552f:	inc    ebp
  425530:	daa    
  425531:	mov    cl,0x5
  425533:	lea    edi,[edx+0xb]
  425536:	lods   eax,DWORD PTR ds:[esi]
  425537:	jecxz  0x42553c
  425539:	or     al,0xbe
  42553b:	sti    
  42553c:	sbb    dh,0x1b
  42553f:	pop    edx
  425540:	hlt    
  425541:	repnz aaa 
  425543:	adc    al,0x6f
  425545:	fisub  WORD PTR [edi+0x41]
  425548:	xor    bh,bl
  42554a:	fimul  DWORD PTR [eax-0x22440000]
  425550:	out    0x3,eax
  425552:	push   ss
  425553:	cmp    edx,DWORD PTR [eax]
  425555:	cmp    DWORD PTR [edi],esi
  425557:	xchg   bp,ax
  425559:	push   ss
  42555a:	push   es
  42555b:	cmp    eax,DWORD PTR [eax+edi*1]
  42555e:	xor    esp,DWORD PTR [ebp+ebp*1-0x24cbd1e9]
  425565:	sbb    BYTE PTR [ebx-0x13],bh
  425568:	daa    
  425569:	add    al,0xb6
  42556b:	and    dl,ah
  42556d:	sti    
  42556e:	sti    
  42556f:	lock cmp edx,DWORD PTR [edx]
  425572:	loopne 0x425550
  425574:	xor    eax,0xc05284a8
  425579:	pop    ecx
  42557a:	test   dl,dh
  42557c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42557d:	adc    ebp,edi
  42557f:	(bad)  [esi+0x48]
  425582:	daa    
  425583:	xor    DWORD PTR [ebp+0x50],ebp
  425586:	add    ebp,0x71
  425589:	mov    edi,0x5a37dc64
  42558e:	shl    ecx,1
  425590:	cmp    BYTE PTR [eax],0x23
  425593:	fst    QWORD PTR [ebx+0x7bd1c2c2]
  425599:	fistp  DWORD PTR [eax]
  42559b:	sahf   
  42559c:	sub    BYTE PTR [edx-0x5a],bl
  42559f:	and    ah,BYTE PTR [eax-0x751e53e]
  4255a5:	inc    ebx
  4255a6:	das    
  4255a7:	push   ss
  4255a8:	mov    ch,0x16
  4255aa:	fwait
  4255ab:	in     al,dx
  4255ac:	mov    dh,0xc2
  4255ae:	mov    ds:0x3843c2,al
  4255b3:	add    BYTE PTR [edi],al
  4255b5:	xor    eax,0xeeef183b
  4255ba:	add    BYTE PTR [ecx-0x3cb1d4d4],ch
  4255c0:	sbb    eax,0xa4f574d7
  4255c5:	cmp    DWORD PTR [ebp+0x5c17051e],ebx
  4255cb:	jne    0x4255f4
  4255cd:	in     eax,dx
  4255ce:	in     ax,0x76
  4255d1:	inc    esi
  4255d2:	adc    ch,dl
  4255d4:	sub    al,0xde
  4255d6:	stc    
  4255d7:	je     0x425611
  4255d9:	xlat   BYTE PTR ds:[ebx]
  4255da:	adc    al,0x1
  4255dc:	sbb    DWORD PTR [esi],ebx
  4255de:	add    DWORD PTR [edx+0x67],esp
  4255e1:	out    0x66,al
  4255e3:	call   0xd2177f89
  4255e8:	das    
  4255e9:	(bad)  
  4255eb:	(bad)  
  4255ec:	cli    
  4255ed:	(bad)  
  4255ee:	xor    al,0x3d
  4255f0:	mov    ds,WORD PTR [ebx]
  4255f2:	add    esi,eax
  4255f4:	cmp    BYTE PTR [edx+0x10],ch
  4255f7:	sub    DWORD PTR [ebx],esi
  4255f9:	ret    
  4255fa:	inc    ebx
  4255fb:	mov    edi,0x3505d1e8
  425600:	ficom  DWORD PTR [esp+ebx*2]
  425603:	xchg   ebp,eax
  425604:	cmp    cl,ah
  425606:	aaa    
  425607:	cmp    al,0xa3
  425609:	push   edx
  42560a:	or     edi,DWORD PTR [edx]
  42560c:	outs   dx,BYTE PTR ds:[esi]
  42560d:	push   ecx
  42560e:	icebp  
  42560f:	mov    fs,WORD PTR [eax]
  425611:	retf   0x8653
  425614:	cmp    BYTE PTR [esi+0x2911],bl
  42561a:	xor    ebp,DWORD PTR [ebx]
  42561c:	mov    WORD PTR [edi+esi*2],fs
  42561f:	arpl   dx,ax
  425621:	and    DWORD PTR [edi],0x166fada
  425627:	call   0xdb8a277e
  42562c:	cli    
  42562d:	jmp    0x4e4fa721
  425632:	inc    eax
  425633:	(bad)  
  425634:	push   cs
  425635:	add    dh,al
  425637:	fisub  WORD PTR [edx+0x1]
  42563a:	fwait
  42563b:	sub    eax,ebp
  42563d:	mov    edx,DWORD PTR [ecx-0x76]
  425640:	fdivp  st(3),st
  425642:	dec    ecx
  425643:	popf   
  425644:	div    BYTE PTR [ebp+0x46]
  425647:	cmp    dh,dh
  425649:	adc    eax,0x40f22a
  42564e:	mov    al,ds:0xd6d8149d
  425653:	push   ds
  425654:	add    DWORD PTR [edx+0x5e569983],ecx
  42565a:	lea    esp,[edi-0x6b29f345]
  425660:	inc    esp
  425661:	hlt    
  425662:	into   
  425663:	adc    dl,dh
  425665:	cmp    DWORD PTR [ebx-0x72],ebp
  425668:	je     0x42566f
  42566a:	dec    edi
  42566b:	cmp    esi,ecx
  42566d:	je     0x4255f7
  42566f:	xor    esi,esi
  425671:	jne    0x4256e9
  425673:	popf   
  425674:	je     0x425662
  425676:	xor    BYTE PTR [ebp+0x1e66c014],bl
  42567c:	add    DWORD PTR [ebx+0x0],edx
  42567f:	add    BYTE PTR [ebx],cl
  425681:	sub    al,0xc5
  425683:	mov    edx,ecx
  425685:	xchg   BYTE PTR [edx+0x4a9dc9fb],bl
  42568b:	push   esi
  42568c:	leave  
  42568d:	adc    ecx,DWORD PTR ds:0xa8263ff
  425693:	inc    eax
  425694:	inc    esi
  425695:	arpl   cx,ax
  425697:	jne    0x425680
  425699:	pop    sp
  42569b:	sti    
  42569c:	popf   
  42569d:	inc    esi
  42569e:	out    dx,eax
  42569f:	add    eax,0x3ab486
  4256a4:	push   edx
  4256a5:	xor    DWORD PTR [edx+0x4eea225c],eax
  4256ab:	push   edi
  4256ac:	popf   
  4256ad:	sbb    DWORD PTR ds:0x50bb2f14,esp
  4256b3:	call   0xfc02c9ce
  4256b8:	stos   DWORD PTR es:[edi],eax
  4256b9:	pop    es
  4256ba:	xor    al,BYTE PTR [ebp-0x4e]
  4256bd:	sbb    BYTE PTR [edx],dh
  4256bf:	inc    ecx
  4256c0:	add    bl,bl
  4256c2:	sub    bl,bl
  4256c4:	ins    BYTE PTR es:[edi],dx
  4256c5:	mov    ecx,0x3ed6a715
  4256cb:	add    BYTE PTR [edi+esi*8-0x5fa40d7e],dh
  4256d2:	std    
  4256d3:	pop    ecx
  4256d4:	xor    esi,DWORD PTR [edx-0x14]
  4256d7:	outs   dx,DWORD PTR gs:[esi]
  4256d9:	js     0x425681
  4256db:	push   ecx
  4256dc:	fstcw  WORD PTR [edx-0x78409679]
  4256e3:	add    eax,DWORD PTR [eax]
  4256e5:	add    BYTE PTR [ecx+eax*4-0x349776e6],ah
  4256ec:	sub    BYTE PTR [eax],dl
  4256ee:	mov    edx,0xac501101
  4256f3:	mov    BYTE PTR ds:0x66298753,cl
  4256f9:	cli    
  4256fa:	nop
  4256fb:	dec    esp
  4256fc:	inc    ebx
  4256fd:	or     BYTE PTR [ecx-0x3f],dh
  425700:	add    eax,0x4df837e7
  425705:	sti    
  425706:	and    bh,BYTE PTR [ebx+0x202f4012]
  42570c:	pop    ebx
  42570d:	push   edi
  42570e:	ins    DWORD PTR es:[edi],dx
  42570f:	iret   
  425710:	(bad)  
  425711:	icebp  
  425712:	sub    dh,BYTE PTR [edi-0x3cd0c02c]
  425718:	push   esp
  425719:	xchg   ebx,ebx
  42571b:	stos   BYTE PTR es:[edi],al
  42571c:	push   es
  42571d:	je     0x42572b
  42571f:	outs   dx,DWORD PTR ds:[esi]
  425720:	mov    dh,BYTE PTR [ebp-0x3f76afbf]
  425726:	ret    
  425727:	lods   al,BYTE PTR ds:[esi]
  425728:	mov    ebx,0x42ddc335
  42572d:	inc    ebx
  42572e:	das    
  42572f:	fprem1 
  425731:	mov    edi,DWORD PTR [esi]
  425733:	push   ds
  425734:	call   0xde9446c1
  425739:	cli    
  42573a:	and    dl,0xbc
  42573d:	or     BYTE PTR [eax-0x62],bl
  425740:	test   al,0xaa
  425742:	sub    cl,bl
  425744:	mov    esp,0x2b3024e7
  425749:	sbb    DWORD PTR [eax],eax
  42574b:	add    BYTE PTR [edi-0xe],cl
  42574e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42574f:	add    eax,DWORD PTR [ebp+0x7a03f09c]
  425755:	gs add al,0xb6
  425758:	xor    cl,BYTE PTR [esi]
  42575a:	xor    al,BYTE PTR [ebx+0x2f]
  42575d:	loop   0x4256f8
  42575f:	push   esi
  425760:	mov    al,0x5a
  425762:	lock aaa 
  425764:	cld    
  425765:	lds    esp,FWORD PTR [eax+edi*2-0x3b9b274b]
  42576c:	cmp    ecx,DWORD PTR [eax]
  42576e:	jecxz  0x425768
  425770:	adc    al,0xb9
  425772:	daa    
  425773:	add    al,0xa4
  425775:	repnz pop edi
  425777:	adc    al,0xef
  425779:	fstp   QWORD PTR [esi-0x4d]
  42577c:	stos   BYTE PTR es:[edi],al
  42577d:	iret   
  42577e:	cmp    al,0x20
  425780:	inc    eax
  425781:	pop    eax
  425782:	in     al,0x38
  425784:	sbb    al,0xd0
  425786:	sub    eax,0xe1516f14
  42578b:	mov    esi,0x18a2e9fa
  425790:	stos   DWORD PTR es:[edi],eax
  425791:	in     eax,dx
  425792:	daa    
  425793:	add    al,0xa8
  425795:	pop    ds
  425796:	loopne 0x42575d
  425798:	sub    eax,0x54107edf
  42579d:	push   edx
  42579e:	fdivr  DWORD PTR [esi-0x40ed163e]
  4257a4:	sbb    dl,BYTE PTR [edx]
  4257a6:	add    ebp,ebx
  4257a8:	in     al,dx
  4257a9:	fstp   QWORD PTR [ecx+0xf]
  4257ac:	into   
  4257ad:	xchg   edi,eax
  4257ae:	or     eax,0xe20000e9
  4257b3:	loope  0x4257e5
  4257b5:	aaa    
  4257b6:	ins    DWORD PTR es:[edi],dx
  4257b7:	fiadd  WORD PTR [edi+edi*4]
  4257ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4257bb:	push   edx
  4257bc:	and    eax,0xe8fc58e1
  4257c1:	cmp    eax,0x65fad480
  4257c6:	in     al,dx
  4257c7:	push   edx
  4257c8:	sbb    al,0x36
  4257ca:	test   DWORD PTR [ebx-0x26],0x14d32caa
  4257d1:	jno    0x425816
  4257d3:	push   ds
  4257d4:	add    DWORD PTR [esp+ebp*8+0x52],esp
  4257d8:	or     al,0xd2
  4257da:	sbb    al,0xe2
  4257dc:	jae    0x4257bf
  4257de:	jmp    0xe5e6:0x6c71ffde
  4257e5:	out    0x5a,al
  4257e7:	rcl    DWORD PTR [ebp*8-0x70fee1e0],cl
  4257ee:	out    dx,al
  4257ef:	loop   0x4257f1
  4257f1:	fbstp  TBYTE PTR [eax]
  4257f3:	push   cs
  4257f4:	shr    DWORD PTR [edx],cl
  4257f6:	sub    esp,edx
  4257f8:	push   edx
  4257f9:	bound  edx,QWORD PTR [edi+0x2]
  4257fc:	or     DWORD PTR [ebp-0x77],edx
  4257ff:	mov    edi,0xd3c97db4
  425804:	test   DWORD PTR [ecx-0x30606b9],ebp
  42580a:	dec    eax
  42580b:	mov    bl,0x3e
  42580d:	jmp    0xf8cb49c5
  425812:	in     al,dx
  425813:	fld    QWORD PTR [ebx+0x270000a9]
  425819:	jmp    0x51697153
  42581e:	or     DWORD PTR [edi+0x85dd2b],esp
  425824:	push   ss
  425825:	jmp    0x1814:0x991807e1
  42582c:	pop    edx
  42582d:	sbb    eax,DWORD PTR [ecx]
  42582f:	pop    esi
  425830:	test   dh,ah
  425832:	add    dh,dh
  425834:	sbb    ecx,ebx
  425836:	rol    BYTE PTR [ebx+0x16],1
  425839:	fisttp WORD PTR [esi-0x75]
  42583c:	cli    
  42583d:	mov    esi,0x8a257406
  425842:	outs   dx,DWORD PTR ds:[esi]
  425843:	mov    ah,0x70
  425845:	cdq    
  425846:	test   eax,eax
  425848:	mov    edx,0xf235f5f4
  42584d:	mov    ecx,0xef41003a
  425852:	mov    BYTE PTR [ecx],dl
  425854:	xchg   esi,eax
  425855:	fiadd  DWORD PTR [ebx+0x31e4bac0]
  42585b:	jo     0x42582b
  42585d:	(bad)  
  42585f:	xor    eax,DWORD PTR [esi]
  425861:	and    ah,dl
  425863:	or     ebp,DWORD PTR [eax-0x2ddb8a67]
  425869:	cdq    
  42586a:	adc    al,0xd8
  42586c:	aad    0x1a
  42586e:	add    DWORD PTR [esi+0x4],ebx
  425871:	jmp    0x5ef:0x871d5500
  425878:	inc    esi
  425879:	mov    al,0x3a
  42587b:	add    BYTE PTR [eax],al
  42587d:	add    BYTE PTR [edx-0x71a27dd3],cl
  425883:	xor    BYTE PTR [ebp+0x6f],dh
  425886:	pop    esi
  425887:	int    0xae
  425889:	inc    cl
  42588b:	pop    esi
  42588c:	shl    DWORD PTR [eax+ebp*8-0x68],0x34
  425891:	ins    BYTE PTR es:[edi],dx
  425892:	mov    eax,ds:0x6bff011d
  425897:	bound  edx,QWORD PTR [eax]
  425899:	inc    eax
  42589a:	push   esi
  42589b:	gs icebp 
  42589d:	test   DWORD PTR [edi],ebp
  42589f:	ja     0x4258d3
  4258a1:	push   esp
  4258a2:	adc    al,0x7
  4258a4:	or     DWORD PTR [ebp-0x8],esi
  4258a7:	inc    ebx
  4258a8:	cmp    ecx,DWORD PTR [edi+ebp*1]
  4258ab:	ror    DWORD PTR ds:0x44421f66,1
  4258b1:	or     al,0xdf
  4258b3:	cmp    DWORD PTR [ebx+0xc],eax
  4258b6:	jg     0x4258e7
  4258b8:	(bad)  
  4258b9:	test   eax,0x7d813521
  4258be:	aas    
  4258bf:	(bad)  
  4258c0:	xor    ch,BYTE PTR ds:0x8342478
  4258c6:	or     BYTE PTR [ebx-0x3890ef36],dh
  4258cc:	sub    BYTE PTR [eax],al
  4258ce:	clc    
  4258cf:	xchg   ebp,eax
  4258d0:	push   es
  4258d1:	xchg   edi,esi
  4258d3:	mov    eax,ds:0xd2e84f12
  4258d8:	mov    dl,0x14
  4258da:	outs   dx,DWORD PTR ds:[esi]
  4258db:	(bad)  
  4258dc:	mov    ch,0xd8
  4258de:	xor    al,0x7
  4258e0:	push   ebp
  4258e1:	sti    
  4258e2:	add    BYTE PTR [eax],al
  4258e4:	pop    ecx
  4258e5:	mov    edi,0xbb71893e
  4258ea:	mov    ebp,0x3eb7df15
  4258ef:	add    BYTE PTR [eax-0x68],bl
  4258f2:	mov    esi,0xa9bda740
  4258f7:	or     eax,0xfb1532a8
  4258fc:	sbb    al,bl
  4258fe:	push   ebx
  4258ff:	sti    
  425900:	inc    edx
  425901:	mov    edi,0x52f400a
  425906:	pop    edx
  425907:	pop    ebp
  425908:	ins    DWORD PTR es:[edi],dx
  425909:	retf   
  42590a:	(bad)  
  42590b:	push   esp
  42590c:	mov    ah,0xa3
  42590e:	scas   eax,DWORD PTR es:[edi]
  42590f:	add    eax,0x42753f
  425914:	sub    edi,eax
  425916:	mov    DWORD PTR [ebp+0x37],ebx
  425919:	fidivr WORD PTR [ecx]
  42591b:	xor    bh,bl
  42591d:	lds    ecx,FWORD PTR [eax+0x77]
  425920:	push   ebp
  425921:	aad    0x6c
  425923:	(bad)  
  425924:	fstp   TBYTE PTR [ebx+ecx*4]
  425927:	icebp  
  425928:	aam    0xb4
  42592a:	daa    
  42592b:	add    al,0x44
  42592d:	jmp    0x42599e
  42592f:	adc    eax,0xb45eddef
  425934:	stos   BYTE PTR es:[edi],al
  425935:	int3   
  425936:	hlt    
  425937:	push   eax
  425938:	pusha  
  425939:	xor    al,0xec
  42593b:	xor    BYTE PTR [edi-0x2b],bh
  42593e:	rcr    BYTE PTR [ebx],cl
  425940:	adc    al,0x4c
  425942:	cld    
  425943:	mov    edx,0x324aee9d
  425948:	add    BYTE PTR [eax],al
  42594a:	cmp    edx,ebp
  42594c:	mov    ebp,0x2feb0407
  425951:	adc    al,0x6f
  425953:	fisub  WORD PTR [esi+0x39]
  425956:	pop    ds
  425957:	fidiv  WORD PTR [ebx-0x652a8218]
  42595d:	or     esp,esp
  42595f:	jmp    0x37d:0xde6f142b
  425966:	aam    0x4b
  425968:	loopne 0x4258f8
  42596a:	mov    DWORD PTR [edi-0x24],0xf3eac456
  425971:	movq   mm3,mm6
  425974:	cli    
  425975:	fistp  DWORD PTR [eax]
  425977:	sahf   
  425978:	xchg   ebx,eax
  425979:	mov    edx,0x8d27e61d
  42597e:	in     eax,dx
  42597f:	icebp  
  425980:	ficom  DWORD PTR [eax]
  425982:	jg     0x425971
  425984:	daa    
  425985:	add    al,0xf4
  425987:	inc    edi
  425988:	out    0xc1,al
  42598a:	sub    eax,0x32af1fdf
  42598f:	aad    0x35
  425991:	adc    al,0x74
  425993:	dec    edx
  425994:	add    ebp,esp
  425996:	(bad)  
  425998:	adc    al,0xcd
  42599a:	cmp    BYTE PTR [esi],bl
  42599c:	add    DWORD PTR [edi+0x0],eax
  42599f:	xor    edi,DWORD PTR [edi-0x79d4d313]
  4259a5:	test   DWORD PTR [ecx+0x2ce88160],esp
  4259ab:	fidivr WORD PTR [edi-0x6b]
  4259ae:	add    BYTE PTR [eax],al
  4259b0:	mov    ecx,ds
  4259b2:	add    cl,ch
  4259b4:	loope  0x4259e5
  4259b6:	test   BYTE PTR [ecx-0x16991600],ch
  4259bc:	jl     0x425995
  4259be:	adc    al,0x39
  4259c0:	cmp    bl,BYTE PTR [esi]
  4259c2:	add    DWORD PTR [ecx+esi*1],ebx
  4259c5:	fld    QWORD PTR [eax]
  4259c7:	jmp    0xea34b3f1
  4259cc:	sub    al,0xde
  4259ce:	mov    esp,DWORD PTR [esi+0x38]
  4259d1:	fld    QWORD PTR [eax]
  4259d3:	jmp    0xc02c1d81
  4259d8:	push   eax
  4259d9:	fiadd  WORD PTR [eax]
  4259db:	pop    esp
  4259dc:	pop    edi
  4259dd:	hlt    
  4259de:	cmc    
  4259df:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4259e1:	(bad)  
  4259e2:	(bad)  
  4259e3:	iret   
  4259e4:	sub    al,0xde
  4259e6:	add    edi,DWORD PTR [ebx+0x2b]
  4259e9:	fiadd  WORD PTR [eax]
  4259eb:	cmp    DWORD PTR [eax],0x2e
  4259ee:	addr16 jmp 0x6ac3a3ab
  4259f4:	in     al,0xd7
  4259f6:	jmp    0xfb1b0236
  4259fb:	fs ins BYTE PTR es:[edi],dx
  4259fd:	pop    eax
  4259fe:	sbb    al,0x72
  425a00:	ins    DWORD PTR es:[edi],dx
  425a01:	imul   edi,DWORD PTR cs:[ecx+0x7d],0x10640113
  425a09:	out    dx,al
  425a0a:	sti    
  425a0b:	into   
  425a0c:	(bad)  
  425a0d:	cs jmp 0xf7574e13
  425a13:	inc    DWORD PTR [eax]
  425a15:	add    BYTE PTR [ebx],dl
  425a17:	call   0x75c1:0x5ec69506
  425a1e:	dec    edi
  425a1f:	retf   0x66ba
  425a22:	fist   WORD PTR [edx+0x11]
  425a25:	std    
  425a26:	mov    ecx,0x47eeb895
  425a2b:	fild   WORD PTR [eax]
  425a2d:	(bad)  
  425a2e:	sar    DWORD PTR [ebx-0x5f56000d],cl
  425a34:	add    DWORD PTR [eax],eax
  425a36:	push   es
  425a37:	daa    
  425a38:	je     0x425a33
  425a3a:	pop    ss
  425a3b:	pop    ebx
  425a3c:	test   BYTE PTR [eax],bl
  425a3e:	cdq    
  425a3f:	xchg   ebp,eax
  425a40:	not    BYTE PTR [eax-0x2]
  425a43:	pop    ebx
  425a44:	dec    eax
  425a45:	aaa    
  425a46:	aas    
  425a47:	add    BYTE PTR [eax],0xb1
  425a4a:	js     0x4259e1
  425a4c:	arpl   WORD PTR [eax+ebx*8+0x2c],ax
  425a50:	mov    WORD PTR [ebp-0x62],es
  425a53:	add    eax,DWORD PTR [ecx]
  425a55:	push   eax
  425a56:	cmp    ebx,esp
  425a58:	push   eax
  425a59:	push   ss
  425a5a:	(bad)  
  425a5b:	fidivr WORD PTR [ecx-0x3c]
  425a5e:	or     dl,BYTE PTR [esi+0x535b0c6e]
  425a64:	sbb    edi,edi
  425a66:	cmp    DWORD PTR [ebp+0x676e7588],edx
  425a6c:	inc    esp
  425a6d:	mov    al,0x39
  425a6f:	jecxz  0x425ac9
  425a71:	adc    DWORD PTR [esi-0x49ba7422],edx
  425a77:	mov    WORD PTR cs:[ebp+0x0],es
  425a7b:	add    BYTE PTR [esi+0x2a],ch
  425a7e:	arpl   WORD PTR [eax],ax
  425a80:	scas   al,BYTE PTR es:[edi]
  425a81:	sub    al,BYTE PTR [edx-0x7ba469c0]
  425a87:	adc    BYTE PTR [ebx-0x6b],bh
  425a8a:	not    BYTE PTR [eax+0x2f]
  425a8d:	popf   
  425a8e:	cmp    eax,0x7bc52f9e
  425a93:	sar    dl,0xc0
  425a96:	hlt    
  425a97:	mov    edi,0x102cd784
  425a9c:	mov    ds:0xfc50b501,al
  425aa1:	pushf  
  425aa2:	mov    ds:0x267b61a3,eax
  425aa7:	call   0xfb411fd8
  425aac:	fdivr  DWORD PTR [eax-0x29a0ea47]
  425ab2:	add    BYTE PTR ds:[edx-0x3af0d57c],ch
  425ab9:	les    edi,FWORD PTR [ecx-0x714ecfd1]
  425abf:	adc    DWORD PTR [edi-0x39],ebp
  425ac2:	(bad)  
  425ac3:	out    dx,eax
  425ac4:	pop    ss
  425ac5:	dec    edx
  425ac6:	add    BYTE PTR gs:[edi],ch
  425ac9:	sub    al,0xcd
  425acb:	mov    al,0x2e
  425acd:	mov    DWORD PTR [ebp-0x37],ebx
  425ad0:	in     al,dx
  425ad1:	mov    cl,BYTE PTR [ebp-0x49dc5314]
  425ad7:	jg     0x425ae4
  425ad9:	call   0xc6c7ae2c
  425ade:	mov    ecx,0x6b000015
  425ae3:	mov    dh,0x3e
  425ae5:	add    BYTE PTR [edi-0x8],bh
  425ae8:	or     cl,BYTE PTR [eax-0x50178c3]
  425aee:	sbb    dh,BYTE PTR [ebx-0x27]
  425af1:	aas    
  425af2:	das    
  425af3:	cmp    al,0xf3
  425af5:	retf   
  425af6:	sbb    eax,0xe0fafe87
  425afb:	dec    esp
  425afc:	jmp    0x425af1
  425afe:	sbb    al,0x87
  425b00:	(bad)  
  425b01:	out    0xf2,al
  425b03:	cmp    DWORD PTR [esi+0x6eddfc74],edi
  425b09:	inc    eax
  425b0a:	push   ebx
  425b0b:	out    dx,al
  425b0c:	push   ds
  425b0d:	add    DWORD PTR [edi],ebx
  425b0f:	mov    cl,0x27
  425b11:	add    al,0x2
  425b13:	or     esp,DWORD PTR [edi+0x38]
  425b16:	dec    ebx
  425b17:	jmp    0xd740:0x7f4531c3
  425b1e:	xor    dh,bl
  425b20:	cmp    eax,0x44a6405
  425b25:	sbb    BYTE PTR [edx],ch
  425b27:	jmp    0xd710:0x462f03e8
  425b2e:	adc    dh,bl
  425b30:	jg     0x425aec
  425b32:	cmp    al,0xd1
  425b34:	mov    ecx,DWORD PTR [ebx+0x43a35632]
  425b3a:	das    
  425b3b:	imul   sp,ax,0xde2f
  425b40:	out    0xb6,eax
  425b42:	bound  ecx,QWORD PTR [edx-0x75]
  425b45:	inc    ebx
  425b46:	add    BYTE PTR [eax],al
  425b48:	das    
  425b49:	sar    DWORD PTR [ebx],1
  425b4b:	sub    ch,BYTE PTR [edi]
  425b4d:	inc    esp
  425b4e:	call   0xaca56f7c
  425b53:	fbld   TBYTE PTR [eax]
  425b55:	cs dec ebx
  425b57:	into   
  425b58:	adc    dh,0x43
  425b5b:	xor    esi,eax
  425b5d:	or     al,0x31
  425b5f:	sub    edi,0xef8fe330
  425b65:	das    
  425b66:	pop    edi
  425b67:	mov    eax,ds:0x8abd9d82
  425b6c:	retf   
  425b6d:	pop    esi
  425b6e:	or     al,0x8c
  425b70:	das    
  425b71:	fsubrp st(7),st
  425b73:	dec    ebp
  425b74:	pop    esp
  425b75:	rcl    DWORD PTR [ebp+0x10d5a80b],1
  425b7b:	iret   
  425b7c:	pop    ds
  425b7d:	fsubrp st(7),st
  425b7f:	push   es
  425b80:	jl     0x425b1f
  425b82:	add    DWORD PTR [eax-0x12],esp
  425b85:	leave  
  425b86:	test   eax,0x435b29e8
  425b8b:	call   0x24ce39bc
  425b90:	shr    DWORD PTR ds:0xd53b5cfa,cl
  425b96:	adc    al,0xe9
  425b98:	pop    ds
  425b99:	push   ds
  425b9a:	add    DWORD PTR [esp+ebp*2+0x49],ebp
  425b9e:	sub    eax,0x42632d53
  425ba3:	sbb    DWORD PTR [ebx],eax
  425ba5:	aad    0x74
  425ba7:	mov    cl,0xb7
  425ba9:	sbb    al,0x3d
  425bab:	cmp    DWORD PTR [eax],eax
  425bad:	add    BYTE PTR [esp+ebx*1+0x55a76c4d],ah
  425bb4:	cli    
  425bb5:	xchg   esi,eax
  425bb6:	add    ebp,0xd479b891
  425bbc:	mov    WORD PTR [esp+esi*8-0x2c],gs
  425bc0:	cli    
  425bc1:	jle    0x425b9f
  425bc3:	(bad)
  425bc6:	sub    al,0xde
  425bc8:	mov    BYTE PTR [eax+ebx*8],ah
  425bcb:	mov    bh,0x5
  425bcd:	das    
  425bce:	outs   dx,DWORD PTR ds:[esi]
  425bcf:	rol    DWORD PTR [ecx],cl
  425bd1:	imul   edx,DWORD PTR [edi-0x2d],0x27ff6201
  425bd8:	adc    BYTE PTR [ecx+0x3f484a2c],ch
  425bde:	outs   dx,DWORD PTR ds:[esi]
  425bdf:	retf   0xb411
  425be2:	ins    DWORD PTR es:[edi],dx
  425be3:	shl    DWORD PTR [edx-0x1b],cl
  425be6:	mov    eax,ds:0x6d760aac
  425beb:	loop   0x425bf6
  425bed:	pop    esi
  425bee:	gs out 0xbf,al
  425bf1:	or     DWORD PTR [edi+edx*8],edi
  425bf4:	mov    edi,0x50d759e6
  425bf9:	ficom  WORD PTR [ecx+0xf]
  425bfc:	add    eax,0x117b0700
  425c01:	or     eax,DWORD PTR [edi]
  425c03:	sub    esi,esi
  425c05:	ja     0x425b95
  425c07:	mov    BYTE PTR [eax+ecx*1-0x6f],dh
  425c0b:	fist   WORD PTR [ebp+edx*1+0x46]
  425c0f:	fiadd  DWORD PTR [ebx-0x5ffff40]
  425c15:	in     al,dx
  425c16:	bound  esp,QWORD PTR [ecx+eiz*2+0x1]
  425c1a:	or     eax,0xbab7bff
  425c1f:	inc    eax
  425c20:	xchg   BYTE PTR [eax-0x3f],dl
  425c23:	(bad)  
  425c25:	dec    edx
  425c26:	add    DWORD PTR [eax],eax
  425c28:	push   esi
  425c29:	or     DWORD PTR [ecx-0x7a766e03],0xffffffc0
  425c30:	cmp    dh,al
  425c32:	add    DWORD PTR [edi+0x56],0x5b531105
  425c39:	(bad)  
  425c3b:	call   DWORD PTR [esi+0x2b]
  425c3e:	jmp    0xf6ca449e
  425c43:	(bad)  
  425c44:	cmp    edi,edx
  425c46:	cmc    
  425c47:	(bad)  
  425c48:	mov    eax,ds:0x926a08ff
  425c4d:	mov    DWORD PTR [esi+0x8],ebp
  425c50:	xchg   ecx,eax
  425c51:	inc    ecx
  425c52:	mov    DWORD PTR [ecx],eax
  425c54:	push   es
  425c55:	fcomi  st,st(5)
  425c57:	adc    eax,0x40ed42
  425c5c:	mov    ebx,DWORD PTR [edx-0x7d21c78b]
  425c62:	cli    
  425c63:	inc    DWORD PTR [esi]
  425c65:	mov    ch,BYTE PTR [esi+0xc]
  425c68:	and    edi,ebx
  425c6a:	rcl    BYTE PTR [edx],1
  425c6c:	xchg   esi,eax
  425c6d:	fiadd  DWORD PTR [ebx-0x7e144440]
  425c73:	inc    edi
  425c74:	(bad)  
  425c75:	pop    edx
  425c76:	mov    ecx,0x2f000024
  425c7b:	(bad)  
  425c7c:	(bad)  
  425c7d:	jmp    FWORD PTR [esi]
  425c7f:	push   0x18
  425c81:	xchg   BYTE PTR [edx-0x28],dh
  425c84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c85:	pop    eax
  425c86:	inc    ebp
  425c87:	lds    eax,FWORD PTR [ebx-0x139d44d]
  425c8d:	jmp    DWORD PTR [eax-0x40ea4a7a]
  425c93:	aad    0x3e
  425c95:	add    BYTE PTR [edi+0x2f005f8a],al
  425c9b:	cmp    al,0x3b
  425c9d:	or     al,0x78
  425c9f:	add    al,0xe1
  425ca1:	(bad)  
  425ca2:	js     0x425c68
  425ca4:	ds jne 0x425ce1
  425ca7:	hlt    
  425ca8:	jg     0x425c6a
  425caa:	xor    esi,ebp
  425cac:	add    DWORD PTR [ebp+0x4b],0xab15b3f4
  425cb3:	sar    BYTE PTR [esi],1
  425cb5:	add    ch,al
  425cb7:	mov    dh,0x83
  425cb9:	inc    ebp
  425cba:	push   ebx
  425cbb:	adc    al,0xb4
  425cbd:	mov    bl,0xdb
  425cbf:	(bad)  
  425cc2:	cmp    BYTE PTR [ecx-0x3b10ebf6],dh
  425cc8:	sub    BYTE PTR [ebx],cl
  425cca:	xchg   ebp,eax
  425ccb:	rol    DWORD PTR [ebx-0x4c17f4bb],0xb3
  425cd2:	xor    DWORD PTR [esi-0x2cef0002],0xe
  425cd9:	adc    al,0x6f
  425cdb:	mov    bh,0x6e
  425cdd:	add    DWORD PTR [eax],eax
  425cdf:	add    BYTE PTR [eax+0x7d],ah
  425ce2:	(bad)  
  425ce3:	mov    esi,0x874bb727
  425ce8:	add    edi,DWORD PTR [ecx]
  425cea:	call   0x794f:0x1223acf8
  425cf1:	inc    eax
  425cf2:	mov    al,0x87
  425cf4:	jno    0x425cd4
  425cf6:	sti    
  425cf7:	dec    esp
  425cf8:	in     al,dx
  425cf9:	(bad)  
  425cfb:	add    ebp,DWORD PTR [edi]
  425cfd:	ficom  WORD PTR [edx]
  425cff:	sub    eax,0xdf9c571b
  425d04:	sub    BYTE PTR [edi],ch
  425d06:	add    ecx,DWORD PTR [esi]
  425d08:	das    
  425d09:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425d0b:	add    esi,DWORD PTR [edx-0x3a801c62]
  425d11:	fsubrp st(7),st
  425d13:	add    esi,DWORD PTR [eax-0x188103dc]
  425d19:	add    ebx,edx
  425d1b:	lds    ebp,FWORD PTR [edi]
  425d1d:	fsubrp st(7),st
  425d1f:	inc    ebx
  425d20:	sti    
  425d21:	loop   0x425d7f
  425d23:	xor    dh,BYTE PTR [ebx]
  425d25:	mov    ecx,0x61357eed
  425d2a:	mov    ds:0xe89f5de8,eax
  425d2f:	add    ebp,DWORD PTR [edi]
  425d31:	out    dx,al
  425d32:	xor    eax,DWORD PTR [esi-0x50]
  425d35:	jmp    0x425daa
  425d37:	sbb    bh,ch
  425d39:	fnsave [edx]
  425d3b:	xchg   DWORD PTR [edi-0xe],ebp
  425d3e:	aaa    
  425d3f:	sub    ebx,0x53ec01
  425d45:	add    BYTE PTR [ecx+esi*4],dh
  425d48:	ins    DWORD PTR es:[edi],dx
  425d49:	les    esp,FWORD PTR [ebx+esi*2]
  425d4c:	test   al,0x88
  425d4e:	out    dx,eax
  425d4f:	push   edx
  425d50:	lds    edi,FWORD PTR [esi+0x6d]
  425d53:	repnz les ax,DWORD PTR [ebx+0x2e]
  425d58:	arpl   WORD PTR [ecx],bx
  425d5a:	sub    esi,ebx
  425d5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425d5d:	add    esi,DWORD PTR [edx-0x57aa2363]
  425d63:	and    esi,esp
  425d65:	pop    edx
  425d66:	js     0x425d06
  425d68:	in     al,dx
  425d69:	push   ebx
  425d6a:	mov    ds:0x7f100421,al
  425d6f:	int    0x1
  425d71:	sbb    dh,BYTE PTR [esi-0xcabf563]
  425d77:	(bad)  
  425d78:	(bad)  
  425d79:	(bad)  
  425d7b:	popa   
  425d7c:	rcl    DWORD PTR [ebp-0x28c383a],0x41
  425d83:	loopne 0x425d7e
  425d85:	xchg   ebp,eax
  425d86:	rcr    ah,1
  425d88:	test   DWORD PTR [esi],esp
  425d8a:	xchg   ebx,eax
  425d8b:	ret    
  425d8c:	cld    
  425d8d:	(bad)  
  425d8e:	frstor [ebx+eax*1-0xa]
  425d92:	pop    eax
  425d93:	add    cl,BYTE PTR ds:0x1501e760
  425d99:	jb     0x425d81
  425d9b:	icebp  
  425d9c:	xchg   DWORD PTR ds:0xfcfa0497,esp
  425da2:	and    dl,dh
  425da4:	inc    eax
  425da5:	jmp    0xf2b7fb51
  425daa:	add    BYTE PTR [eax],al
  425dac:	fcomp  QWORD PTR [edx+0x45]
  425daf:	add    eax,0x80e92e47
  425db4:	loop   0x425d93
  425db6:	add    BYTE PTR [esi],cl
  425db8:	std    
  425db9:	lea    eax,[eax]
  425dbb:	inc    edx
  425dbc:	rol    dl,1
  425dbe:	pop    esp
  425dbf:	stos   BYTE PTR es:[edi],al
  425dc0:	out    0x64,eax
  425dc2:	in     eax,dx
  425dc3:	push   0xffffffa0
  425dc5:	in     eax,dx
  425dc6:	dec    ebp
  425dc7:	aaa    
  425dc8:	aam    0xfc
  425dca:	stc    
  425dcb:	jb     0x425e49
  425dcd:	push   es
  425dce:	jl     0x425dc1
  425dd0:	pusha  
  425dd1:	and    al,0x52
  425dd3:	add    ebx,esp
  425dd5:	fiadd  WORD PTR [eax]
  425dd7:	jmp    0x744bafb9
  425ddc:	jg     0x425da8
  425dde:	jmp    0x1212883
  425de3:	pusha  
  425de4:	ja     0x425db8
  425de6:	ss es sub eax,0x700b162
  425ded:	loopne 0x425def
  425def:	mov    edx,DWORD PTR [ebx+0x1f87a7b]
  425df5:	loope  0x425e71
  425df7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425df8:	(bad)  
  425df9:	fild   WORD PTR [eax]
  425dfb:	push   0xffffffd1
  425dfd:	aam    0xcc
  425dff:	pop    ecx
  425e00:	and    DWORD PTR [edx+0x56c9d732],edx
  425e06:	xchg   esp,eax
  425e07:	add    esi,eax
  425e09:	fisttp WORD PTR [ebp+0x6a]
  425e0c:	mov    ds:0x87490,al
  425e11:	add    BYTE PTR [ebx],bl
  425e13:	cs stc 
  425e15:	mov    ebx,edx
  425e17:	jnp    0x425e02
  425e19:	or     BYTE PTR [edi+ebx*8+0x0],0xeb
  425e1e:	and    al,0x4b
  425e20:	inc    esp
  425e21:	cld    
  425e22:	inc    esi
  425e23:	push   0x52
  425e25:	rcr    BYTE PTR [eax-0x73],0x88
  425e29:	inc    ebp
  425e2a:	bound  edi,QWORD PTR [ecx+0x20fbf]
  425e30:	add    BYTE PTR [eax],al
  425e32:	push   esi
  425e33:	dec    esp
  425e34:	inc    esp
  425e35:	clc    
  425e36:	inc    esi
  425e37:	jmp    0x41e8:0xdf460098
  425e3e:	int    0x8f
  425e40:	test   BYTE PTR [ebx+0xff6638e],0xd2
  425e47:	or     DWORD PTR [eax],eax
  425e49:	add    BYTE PTR [esi+0x62],al
  425e4c:	jl     0x425e46
  425e4e:	jbe    0x425e2e
  425e50:	jp     0x425e90
  425e52:	pop    ss
  425e53:	fild   WORD PTR [eax]
  425e55:	mov    edx,DWORD PTR [ebx+0x7a]
  425e58:	dec    esi
  425e59:	call   0x39b0b2
  425e5e:	and    DWORD PTR [edx-0x20c471fa],0x0
  425e65:	add    BYTE PTR [edi],ch
  425e67:	cmp    BYTE PTR [edx],ch
  425e69:	or     BYTE PTR [edi],ch
  425e6b:	mov    cl,0xf3
  425e6d:	push   ecx
  425e6e:	pop    es
  425e6f:	sbb    eax,DWORD PTR [edi]
  425e71:	add    BYTE PTR [edi],ch
  425e73:	inc    ecx
  425e74:	lds    esi,FWORD PTR [ebp+0x0]
  425e77:	add    BYTE PTR [eax],bh
  425e79:	enter  0xfbb8,0x62
  425e7d:	adc    DWORD PTR [ebp-0x4ffd7310],ebx
  425e83:	push   ebx
  425e84:	xlat   BYTE PTR ds:[ebx]
  425e85:	out    dx,al
  425e86:	arpl   dx,di
  425e88:	sar    BYTE PTR [edi],0xc7
  425e8b:	jmp    0x4114b0
  425e90:	mov    al,0x49
  425e92:	mov    dl,0x87
  425e94:	repnz enter 0x2a96,0x6f
  425e99:	shl    BYTE PTR [ecx+0x59cd22fb],cl
  425e9f:	call   0xfbf2e245
  425ea4:	mov    ah,0x1
  425ea6:	mov    cl,0x67
  425ea8:	outs   dx,DWORD PTR ds:[esi]
  425ea9:	rol    BYTE PTR [ebx-0x6956fc40],0x8d
  425eb0:	int3   
  425eb1:	mov    ds:0xccf289b1,al
  425eb6:	add    eax,0xffffffda
  425eb9:	mov    ecx,0x9ff9fa1c
  425ebe:	push   0xffffff8d
  425ec0:	icebp  
  425ec1:	int3   
  425ec2:	push   ebp
  425ec3:	sti    
  425ec4:	and    ah,BYTE PTR [ecx]
  425ec6:	adc    al,0x40
  425ec8:	das    
  425ec9:	inc    eax
  425eca:	enter  0xffe8,0xb7
  425ece:	(bad)  
  425ecf:	jmp    DWORD PTR [ecx+edi*8-0x508e7648]
  425ed6:	jge    0x425f1d
  425ed8:	and    edi,DWORD PTR [edi]
  425eda:	dec    eax
  425edb:	sub    al,0x0
  425edd:	add    BYTE PTR [edx+eax*1-0x21967703],ah
  425ee4:	pop    ss
  425ee5:	pushf  
  425ee6:	mov    eax,0x50b05a48
  425eeb:	lods   al,BYTE PTR ds:[esi]
  425eec:	pop    ebx
  425eed:	ss sti 
  425eef:	push   ebp
  425ef0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425ef1:	stos   DWORD PTR es:[edi],eax
  425ef2:	pusha  
  425ef3:	push   edi
  425ef4:	ret    0xb7e3
  425ef7:	and    BYTE PTR [ebx+edi*2],al
  425efa:	jge    0x425f0e
  425efc:	xor    edx,DWORD PTR [esi]
  425efe:	mov    ebp,esp
  425f00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425f01:	add    eax,DWORD PTR [eax]
  425f03:	leave  
  425f04:	loope  0x425f37
  425f06:	or     edx,DWORD PTR [ebx-0x3a]
  425f09:	pop    eax
  425f0a:	pop    esp
  425f0b:	xor    DWORD PTR [ebx-0x725dd50],edi
  425f11:	inc    ebx
  425f12:	das    
  425f13:	push   edi
  425f14:	stos   BYTE PTR es:[edi],al
  425f15:	out    dx,eax
  425f16:	popa   
  425f17:	mov    eax,ds:0xb5fc1275
  425f1c:	call   0xff9b:0x93c99564
  425f23:	jl     0x425f07
  425f25:	scas   eax,DWORD PTR es:[edi]
  425f26:	adc    eax,ecx
  425f28:	inc    eax
  425f29:	fwait
  425f2a:	add    al,0xc9
  425f2c:	pop    edx
  425f2d:	lock jne 0x425f23
  425f30:	fwait
  425f31:	adc    ch,bh
  425f33:	fnsave [esi+ecx*2+0x27]
  425f37:	push   ebp
  425f38:	out    0xea,eax
  425f3a:	ins    DWORD PTR es:[edi],dx
  425f3b:	push   edx
  425f3c:	push   es
  425f3d:	sub    edx,0x5418d5
  425f43:	add    BYTE PTR [ebx+esi*8+0x7b],dl
  425f47:	adc    eax,0xc464ddef
  425f4c:	mov    ebx,0x273168ec
  425f51:	fucomp st(0)
  425f53:	add    ebp,DWORD PTR [edi]
  425f55:	push   edx
  425f56:	out    dx,al
  425f57:	scas   al,BYTE PTR es:[edi]
  425f58:	pop    eax
  425f59:	leave  
  425f5a:	aad    0xc3
  425f5c:	xor    DWORD PTR [esi],ebx
  425f5e:	add    ecx,ebp
  425f60:	fwait
  425f61:	adc    DWORD PTR [eax],edi
  425f63:	mov    dl,0x57
  425f65:	add    eax,DWORD PTR [esi+0x531930e7]
  425f6b:	ror    ecx,1
  425f6d:	adc    DWORD PTR [edi],edi
  425f6f:	jmp    0xe1433d88
  425f74:	sub    al,0xb6
  425f76:	les    edi,FWORD PTR [esi+0x2984de2c]
  425f7c:	es loope 0x425fe5
  425f7f:	jmp    0x2fe23138
  425f84:	cmp    BYTE PTR [edi],0x1
  425f87:	adc    dh,BYTE PTR [eax+edi*8-0x4a5b4907]
  425f8e:	lahf   
  425f8f:	pop    ss
  425f90:	mov    BYTE PTR [ecx+ebp*8],ch
  425f93:	or     ecx,DWORD PTR [ebp-0x3c]
  425f96:	cli    
  425f97:	mov    edx,0xd8e61d6c
  425f9c:	rcl    DWORD PTR [edx-0xb],1
  425f9f:	add    DWORD PTR [esi+0x67],esi
  425fa2:	sti    
  425fa3:	out    dx,al
  425fa4:	stc    
  425fa5:	mov    ch,0xca
  425fa7:	mov    eax,DWORD PTR [eax]
  425fa9:	add    dl,bl
  425fab:	les    edi,FWORD PTR [esi-0x4f]
  425fae:	shl    DWORD PTR [ebx+ebx*2],1
  425fb1:	xor    bh,BYTE PTR [edx-0x2816fa79]
  425fb7:	pusha  
  425fb8:	in     eax,dx
  425fb9:	sbb    BYTE PTR [edx],al
  425fbb:	sbb    DWORD PTR [edx+0x6c],edx
  425fbe:	adc    dl,dh
  425fc0:	push   ecx
  425fc1:	pusha  
  425fc2:	pop    ds
  425fc3:	(bad)  
  425fc4:	cli    
  425fc5:	aam    0xc8
  425fc7:	xlat   BYTE PTR ds:[ebx]
  425fc8:	inc    eax
  425fc9:	jmp    0x3f7b0f0b
  425fce:	arpl   WORD PTR [ebp+esi*2+0x62],cx
  425fd2:	repnz stc 
  425fd4:	xor    eax,0x883af8aa
  425fd9:	add    BYTE PTR [ebx-0x72],dl
  425fdc:	outs   dx,DWORD PTR ds:[esi]
  425fdd:	mov    eax,ss:0x488b3521
  425fe3:	(bad)  
  425fe4:	sub    edx,edx
  425fe6:	cdq    
  425fe7:	adc    DWORD PTR ds:0x63cfc889,ebp
  425fed:	rcl    BYTE PTR [edx],cl
  425fef:	fisttp QWORD PTR [esi+0x30]
  425ff2:	lea    esi,[ebp+0x38]
  425ff5:	pop    edi
  425ff6:	push   cs
  425ff7:	adc    BYTE PTR [ecx],ch
  425ff9:	dec    DWORD PTR [ebx]
  425ffb:	push   eax
  425ffc:	or     eax,DWORD PTR [eax-0x2a]
  425fff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426000:	aas    
  426001:	or     bl,ah
  426003:	jnp    0x425f8f
  426005:	add    al,0xc6
  426007:	or     al,0x11
  426009:	call   FWORD PTR [ebx+0x458277]
  42600f:	add    BYTE PTR [edx],ah
  426011:	mov    ah,0x40
  426013:	sub    al,0x94
  426015:	test   esi,esi
  426017:	jne    0x426037
  426019:	fs daa 
  42601b:	mov    DWORD PTR [ecx+0x1f04564a],edx
  426021:	sbb    BYTE PTR [ecx],cl
  426023:	mov    ecx,eax
  426025:	iret   
  426026:	arpl   ax,ax
  426028:	jns    0x426006
  42602a:	ds sub ah,bl
  42602d:	lock push eax
  42602f:	(bad)  
  426030:	fcmovne st,st(1)
  426032:	not    DWORD PTR ds:0x40f052
  426038:	add    eax,0x2bff0d96
  42603d:	jp     0x426035
  42603f:	adc    eax,0x40ecb2
  426044:	(bad)  
  426045:	(bad)  
  426047:	or     DWORD PTR [ecx],edi
  426049:	jns    0x42605f
  42604b:	lods   al,BYTE PTR ds:[esi]
  42604c:	inc    esp
  42604d:	sbb    eax,DWORD PTR [ecx]
  42604f:	xor    dl,BYTE PTR [esi+0x2fc95219]
  426055:	jae    0x426060
  426057:	add    dl,bl
  426059:	cmp    esp,DWORD PTR [ecx+0x51a51b7f]
  42605f:	push   ebx
  426060:	jmp    0x18430c66
  426065:	stos   BYTE PTR es:[edi],al
  426066:	jb     0x426076
  426068:	outs   dx,DWORD PTR ds:[esi]
  426069:	mov    ch,0x79
  42606b:	clc    
  42606c:	mov    edx,0xb64ff676
  426071:	sub    DWORD PTR [esi+0x220000fb],0x2f400f59
  42607b:	in     al,0xc7
  42607d:	mov    DWORD PTR [edx+0x1359e61d],ecx
  426083:	(bad)  
  426084:	sub    eax,0x81bd7287
  426089:	shr    BYTE PTR [ebx],0x3e
  42608c:	inc    edx
  42608d:	hlt    
  42608e:	mov    dh,0xa1
  426090:	test   BYTE PTR [esi+0xf18ad69],0xaa
  426097:	js     0x42609f
  426099:	add    al,0x5f
  42609b:	fdiv   DWORD PTR [ecx]
  42609d:	hlt    
  42609e:	test   al,0xa9
  4260a0:	push   edx
  4260a1:	adc    ch,bh
  4260a3:	mov    ah,0x81
  4260a5:	les    ebp,FWORD PTR [ebx]
  4260a7:	cmp    al,ch
  4260a9:	jne    0x426093
  4260ab:	cmp    eax,DWORD PTR [ebx+0x30]
  4260ae:	sub    al,0xfa
  4260b0:	cld    
  4260b1:	jg     0x4260b5
  4260b3:	mov    ecx,0xe42b74fe
  4260b8:	mov    ch,0x89
  4260ba:	daa    
  4260bb:	ds ss add al,0xb6
  4260bf:	or     al,0xfd
  4260c1:	out    0x14,al
  4260c3:	dec    esp
  4260c4:	test   BYTE PTR [esi+eiz*2+0x78870108],0xdb
  4260cc:	int    0x81
  4260ce:	inc    ebp
  4260cf:	(bad)  [edi+0x10]
  4260d2:	das    
  4260d3:	ficom  WORD PTR ds:0xec1d340f
  4260d9:	sbb    DWORD PTR [eax],eax
  4260db:	add    BYTE PTR [edx],ch
  4260dd:	and    eax,0x1667eb61
  4260e2:	in     al,dx
  4260e3:	xor    DWORD PTR [edi],esi
  4260e5:	push   edi
  4260e6:	add    ah,bh
  4260e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4260e9:	push   ss
  4260ea:	in     al,dx
  4260eb:	cwde   
  4260ec:	sub    esp,DWORD PTR [ecx+0x8]
  4260ef:	cld    
  4260f0:	or     BYTE PTR [ebp+ebp*4-0x5a3ad154],bl
  4260f7:	stos   DWORD PTR es:[edi],eax
  4260f8:	mov    al,0x1b
  4260fa:	push   eax
  4260fb:	sub    BYTE PTR [edx-0x2a],0xdb
  4260ff:	sub    BYTE PTR [eax+0x1345feed],0x50
  426106:	ins    DWORD PTR es:[edi],dx
  426107:	lods   al,BYTE PTR ds:[esi]
  426108:	(bad)  
  426109:	into   
  42610a:	xor    edx,DWORD PTR [esi]
  42610c:	xor    eax,0xffffffa7
  42610f:	add    esi,DWORD PTR [ecx+0x584c231b]
  426115:	xchg   edi,eax
  426116:	es sti 
  426118:	mov    eax,0x309f5f2a
  42611d:	mov    edx,0xee9b8010
  426122:	outs   dx,BYTE PTR ds:[esi]
  426123:	add    BYTE PTR [eax+0x2f02585e],ch
  426129:	ficomp WORD PTR [ecx-0x24061486]
  42612f:	js     0x426179
  426131:	add    bh,BYTE PTR [ebx]
  426133:	jge    0x426120
  426135:	stc    
  426136:	xrelease xchg BYTE PTR [ebp-0x3b],ah
  42613a:	cmp    bl,BYTE PTR [esi]
  42613c:	das    
  42613d:	push   ebx
  42613e:	and    al,0xe0
  426140:	add    BYTE PTR [eax],al
  426142:	inc    eax
  426143:	cs dec esi
  426145:	push   es
  426146:	fs jmp 0x426120
  426149:	adc    al,0xef
  42614b:	fld    QWORD PTR [eax]
  42614d:	hlt    
  42614e:	sub    bl,bh
  426150:	add    cl,ch
  426152:	sbb    bh,dl
  426154:	jge    0x4260f7
  426156:	sub    bl,cl
  426158:	or     DWORD PTR [eax+0x33],0xffffffde
  42615c:	add    BYTE PTR [edx+0xf],ch
  42615f:	cli    
  426160:	or     cl,ch
  426162:	and    DWORD PTR [ebp-0x26f0fa74],eax
  426168:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426169:	ins    BYTE PTR es:[edi],dx
  42616a:	jo     0x426142
  42616c:	push   eax
  42616d:	jbe    0x4261ad
  42616f:	jp     0x426180
  426171:	sub    DWORD PTR [ebx],esi
  426173:	pop    ebp
  426174:	or     DWORD PTR ds:[esi+0x780b759d],ebp
  42617b:	sbb    eax,0x49b26c25
  426180:	push   ss
  426181:	mov    eax,0x886cb67c
  426186:	xchg   ebp,eax
  426187:	enter  0x4186,0x58
  42618b:	add    eax,0xfa6f6025
  426190:	or     al,0x64
  426192:	xchg   esp,eax
  426193:	dec    edx
  426194:	or     esp,DWORD PTR [edi-0x55]
  426197:	sbb    BYTE PTR [edi],cl
  426199:	jmp    0x95c84237
  42619e:	rcr    ah,1
  4261a0:	jge    0x4261c1
  4261a2:	aam    0x52
  4261a4:	ds icebp 
  4261a6:	add    BYTE PTR [eax],al
  4261a8:	cld    
  4261a9:	enter  0x4d14,0x41
  4261ad:	push   ds
  4261ae:	add    DWORD PTR [esp+eax*8+0x49],ebp
  4261b2:	lea    ebx,[edx-0x17017a5c]
  4261b8:	sub    al,0x5a
  4261ba:	rcl    DWORD PTR [ebp-0x79],0x3a
  4261be:	add    DWORD PTR [edx],edi
  4261c0:	xchg   ebx,eax
  4261c1:	ins    BYTE PTR es:[edi],dx
  4261c2:	add    ecx,ebp
  4261c4:	sub    al,0x5a
  4261c6:	rol    DWORD PTR [eax],0x22
  4261c9:	retf   0x74f7
  4261cc:	xor    al,dh
  4261ce:	dec    edi
  4261cf:	push   0x42
  4261d1:	loop   0x4261d3
  4261d3:	push   0x44
  4261d5:	ja     0x426201
  4261d7:	call   0x439356
  4261dc:	dec    ecx
  4261dd:	dec    esi
  4261de:	icebp  
  4261df:	idiv   DWORD PTR [eax-0x2d]
  4261e2:	out    dx,al
  4261e3:	xor    DWORD PTR [eax+0x162495df],0x4980bf5b
  4261ed:	in     al,dx
  4261ee:	add    BYTE PTR [edi-0x52],dl
  4261f1:	outs   dx,BYTE PTR ds:[esi]
  4261f2:	mov    eax,ds:0x3f6299fe
  4261f7:	dec    DWORD PTR [ecx-0x367f4888]
  4261fd:	jmp    0x18ab4d02
  426202:	push   edi
  426203:	mov    esi,DWORD PTR [ebx+0x16]
  426206:	mov    edx,0x251b5d53
  42620b:	or     BYTE PTR [eax],al
  42620d:	add    BYTE PTR [esi-0x3b],bh
  426210:	idiv   edi
  426212:	sbb    esp,ecx
  426214:	mov    edx,0xfac3145b
  426219:	push   edx
  42621a:	add    BYTE PTR [ecx+esi*8+0x57],0x4b
  42621f:	adc    eax,0xee195309
  426224:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426225:	adc    dl,dh
  426227:	fisttp WORD PTR [ebx+0x2e787e7e]
  42622d:	call   0x39a1fe
  426232:	cdq    
  426233:	push   cs
  426234:	xor    eax,ebp
  426236:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426237:	aas    
  426238:	idiv   edi
  42623a:	fsub   st(1),st
  42623c:	pop    eax
  42623d:	(bad)  
  42623e:	xchg   ecx,eax
  42623f:	fistp  QWORD PTR ds:0xa6222f48
  426245:	jg     0x4262b8
  426247:	aad    0xa7
  426249:	xor    dl,BYTE PTR [edi-0x25]
  42624c:	fs cli 
  42624e:	pop    eax
  42624f:	das    
  426250:	std    
  426251:	push   edi
  426252:	imul   esi,DWORD PTR [ebx+0x9f741fe],0xc2404fa6
  42625c:	push   edx
  42625d:	push   cs
  42625e:	out    dx,eax
  42625f:	mov    ah,0x49
  426261:	pop    edx
  426262:	aam    0x77
  426264:	dec    edx
  426265:	xchg   DWORD PTR [ebx],ebx
  426267:	ss cdq 
  426269:	lods   al,BYTE PTR ds:[esi]
  42626a:	cs mov ch,0xfe
  42626d:	dec    esi
  42626e:	sub    esp,0x7d7b
  426274:	daa    
  426275:	inc    eax
  426276:	add    BYTE PTR [edi-0x1db51],al
  42627c:	das    
  42627d:	call   0x3db4ec4d
  426282:	mov    edi,0x45b4f045
  426287:	lea    esi,[edx+0x15]
  42628a:	push   ebp
  42628b:	xchg   eax,ebx
  42628d:	sub    al,0xed
  42628f:	cld    
  426290:	fadd   DWORD PTR [ebx]
  426292:	add    eax,0x523120
  426298:	das    
  426299:	mov    ch,0x7c
  42629b:	inc    ebp
  42629c:	retf   
  42629d:	in     al,dx
  42629e:	mov    ecx,0x7be3b858
  4262a3:	lock lods al,BYTE PTR ds:[esi]
  4262a5:	jmp    0xe70e:0x5f337502
  4262ac:	sub    BYTE PTR [eax],bh
  4262ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4262af:	adc    esp,DWORD PTR [edx]
  4262b1:	mov    edx,0xdff71c1c
  4262b6:	add    ch,BYTE PTR [edi]
  4262b8:	outs   dx,DWORD PTR ds:[esi]
  4262b9:	fs jae 0x426301
  4262bc:	retf   
  4262bd:	fisttp QWORD PTR [ebp+0x4]
  4262c0:	ffreep st(2)
  4262c2:	cmc    
  4262c3:	push   ebx
  4262c4:	sbb    eax,0x7384e81e
  4262c9:	rol    DWORD PTR [ecx+0x7b],1
  4262cc:	fidivr DWORD PTR [ecx+0x32]
  4262cf:	cmp    ah,bl
  4262d1:	out    0x66,eax
  4262d3:	cdq    
  4262d4:	cmp    cl,BYTE PTR [ecx+0x2e]
  4262d7:	push   ds
  4262d8:	add    BYTE PTR [eax],al
  4262da:	pop    ds
  4262db:	push   ecx
  4262dc:	and    eax,0x2d50df9f
  4262e1:	pop    eax
  4262e2:	ffreep st(2)
  4262e4:	cmc    
  4262e5:	aaa    
  4262e6:	sbb    eax,0xf384e81e
  4262eb:	sar    BYTE PTR [esi+0x1],cl
  4262ee:	test   al,0x1b
  4262f0:	lea    edi,[edx+0x72]
  4262f3:	jbe    0x4262f7
  4262f5:	jge    0x426361
  4262f7:	retf   
  4262f8:	pop    ss
  4262f9:	test   eax,0xc302ba82
  4262fe:	out    dx,eax
  4262ff:	(bad)  
  426300:	je     0x426330
  426302:	jmp    0x42633c
  426304:	jno    0x426344
  426306:	int    0xb6
  426308:	jbe    0x426358
  42630a:	in     al,0xc1
  42630c:	dec    ebx
  42630d:	cs out 0x53,eax
  426310:	lods   eax,DWORD PTR ds:[esi]
  426311:	pop    edi
  426312:	inc    edi
  426313:	out    dx,al
  426314:	add    al,BYTE PTR [edi+ebp*1]
  426317:	push   ebp
  426318:	and    bl,BYTE PTR [ebx-0x57d4d8d7]
  42631e:	stos   DWORD PTR es:[edi],eax
  42631f:	sahf   
  426320:	popf   
  426321:	call   0xa3e7b68f
  426326:	pop    edi
  426327:	push   ebp
  426328:	sbb    ebx,DWORD PTR [ebx-0x57f43c96]
  42632e:	mov    dl,0x4b
  426330:	xor    al,0xc0
  426332:	repnz xchg ecx,eax
  426334:	push   eax
  426335:	sub    ebp,edi
  426337:	fld    QWORD PTR [eax]
  426339:	add    DWORD PTR [esp+ebp*1+0xeefa],edx
  426340:	xlat   BYTE PTR ds:[ebx]
  426341:	sbb    edi,edx
  426343:	imul   eax,DWORD PTR [esi-0x3b],0x1eaeedfe
  42634a:	cli    
  42634b:	(bad)  
  42634c:	nop
  42634d:	lock shr BYTE PTR [esi],0xe9
  426351:	sub    al,cl
  426353:	stos   DWORD PTR es:[edi],eax
  426354:	pop    ebx
  426355:	ror    DWORD PTR [edi+0x6c],0xee
  426359:	mov    ebp,0xb6986251
  42635e:	or     eax,0xe6c588ac
  426363:	lds    ebp,FWORD PTR [ebx+eax*2-0x1e0016f3]
  42636a:	stc    
  42636b:	sbb    al,0xdb
  42636d:	push   edx
  42636e:	inc    esp
  42636f:	popf   
  426370:	ret    
  426371:	or     DWORD PTR [edx-0x7a],edx
  426374:	rcl    BYTE PTR [edi-0x27],1
  426377:	gs in  al,0xd4
  42637a:	test   BYTE PTR [ebx+esi*1-0x22],al
  42637e:	add    BYTE PTR [edx-0x30],ah
  426381:	mov    dh,0x96
  426383:	jmp    0xeea941b4
  426388:	ja     0x4263cd
  42638a:	shl    DWORD PTR [ecx+0x4e7eb6c4],0x88
  426391:	adc    dl,bh
  426393:	mov    esp,0xa1b451e0
  426398:	mov    al,ah
  42639a:	cli    
  42639b:	ret    
  42639c:	sub    al,0xb6
  42639e:	cli    
  42639f:	test   al,0x2c
  4263a1:	fiadd  WORD PTR [ebp-0x3fffff64]
  4263a7:	push   edi
  4263a8:	ret    0xae70
  4263ab:	xor    eax,0x52d016fb
  4263b0:	inc    esp
  4263b1:	popa   
  4263b2:	sti    
  4263b3:	mov    ch,0x3a
  4263b5:	add    dh,cl
  4263b7:	ja     0x4263af
  4263b9:	test   BYTE PTR [esi+0xe],al
  4263bc:	aaa    
  4263bd:	cmovns ebx,DWORD PTR [edi]
  4263c0:	mov    DWORD PTR [eax-0x32],ecx
  4263c3:	lock add eax,DWORD PTR [ebx+0x673ed5e]
  4263ca:	adc    eax,0x1b895f9a
  4263cf:	inc    esp
  4263d0:	mov    WORD PTR [ebp-0x986e2],es
  4263d6:	ss inc edi
  4263d8:	inc    esp
  4263d9:	mov    BYTE PTR [esi],dh
  4263db:	bound  ebx,QWORD PTR [edx+0x5f]
  4263de:	xor    DWORD PTR [edi-0x7b],0x8bd0fac0
  4263e5:	test   esi,ebp
  4263e7:	js     0x4263df
  4263e9:	push   esi
  4263eb:	inc    esi
  4263ec:	inc    esp
  4263ed:	shl    BYTE PTR [esi+0x45],0x84
  4263f1:	pop    eax
  4263f2:	mov    al,0x78
  4263f4:	not    BYTE PTR [eax-0x42]
  4263f7:	pop    ss
  4263f8:	cmp    eax,DWORD PTR [eax]
  4263fa:	push   es
  4263fb:	inc    edi
  4263fc:	test   BYTE PTR [eax-0x80],bl
  4263ff:	js     0x4263f7
  426401:	push   eax
  426402:	xchg   ecx,eax
  426403:	push   cs
  426404:	stc    
  426405:	(bad)  
  426406:	retf   
  426407:	xchg   DWORD PTR [ecx+0x30],ebp
  42640a:	add    BYTE PTR [eax],al
  42640c:	fcmovnu st,st(3)
  42640e:	add    BYTE PTR [esi-0x5a],dl
  426411:	arpl   WORD PTR [ebx-0x73878ea1],bp
  426417:	mov    ebp,0xfff6798e
  42641c:	pop    esp
  42641d:	xchg   ebx,eax
  42641e:	jmp    0x11df82f
  426423:	mov    edi,DWORD PTR [ebx-0x3d]
  426426:	add    BYTE PTR fs:[ebx+0x1e],al
  42642a:	loope  0x42647c
  42642c:	push   ds
  42642d:	sbb    eax,0xe82ffffd
  426432:	js     0x4264a9
  426434:	jae    0x42642e
  426436:	inc    eax
  426437:	int3   
  426438:	(bad)  
  426439:	pop    ebp
  42643a:	add    BYTE PTR ds:[edi-0x7704b37e],al
  426441:	cmp    edi,DWORD PTR [edi-0x5b4fcd17]
  426447:	sti    
  426448:	loop   0x426495
  42644a:	cdq    
  42644b:	add    DWORD PTR [ebx+0x68fffa49],0x3afb4c04
  426455:	imul   ecx,DWORD PTR [edi],0x324c2f40
  42645b:	or     BYTE PTR [esi+0x318798fa],ah
  426461:	mov    BYTE PTR [ebp-0x70],dh
  426464:	cs mov ch,0xfe
  426467:	mov    edx,fs
  426469:	push   0xb4ba301d
  42646e:	(bad)  
  42646f:	add    BYTE PTR gs:[eax],al
  426472:	xor    ecx,DWORD PTR ds:0x50842c9d
  426478:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426479:	test   bh,ch
  42647b:	sar    ebp,0x2d
  42647e:	out    dx,eax
  42647f:	ins    DWORD PTR es:[edi],dx
  426480:	test   al,0x0
  426482:	das    
  426483:	mov    ch,0x79
  426485:	add    al,BYTE PTR [eax]
  426487:	retf   0x86f6
  42648a:	scas   eax,DWORD PTR es:[edi]
  42648b:	xor    al,0xfe
  42648d:	jmp    FWORD PTR [edi]
  42648f:	xor    al,0x32
  426491:	clc    
  426492:	call   0xd832a6d0
  426497:	and    ebx,DWORD PTR [ecx+0x0]
  42649a:	das    
  42649b:	xor    ebp,eax
  42649d:	je     0x426490
  42649f:	jmp    FWORD PTR [ecx]
  4264a1:	lock mov ah,0x71
  4264a4:	stos   BYTE PTR es:[edi],al
  4264a5:	call   0xfbe5bf46
  4264aa:	cld    
  4264ab:	fnstsw WORD PTR [esi]
  4264ad:	jnp    0x426519
  4264af:	mov    dh,0xdf
  4264b1:	shl    BYTE PTR [eax+edx*2],0x4c
  4264b5:	add    al,0x2f
  4264b7:	ficomp WORD PTR [edi+eiz*2+0xb]
  4264bb:	les    eax,FWORD PTR [ebx]
  4264bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4264be:	xchg   DWORD PTR [edx+0x5284a651],esi
  4264c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4264c5:	mov    bl,0x9
  4264c7:	fstp   QWORD PTR [edi+edi*2-0x6]
  4264cb:	mov    edi,0x52dfa4e3
  4264d0:	and    eax,0xc01910b0
  4264d5:	fwait
  4264d6:	add    BYTE PTR [eax],al
  4264d8:	retf   
  4264d9:	xchg   edi,eax
  4264da:	call   0x814e2
  4264df:	test   al,0xdb
  4264e1:	inc    ecx
  4264e2:	outs   dx,DWORD PTR ds:[esi]
  4264e3:	cld    
  4264e4:	mov    cl,0x1d
  4264e6:	aam    0x7a
  4264e8:	loop   0x4264b7
  4264ea:	out    dx,eax
  4264eb:	ds dec ebx
  4264ed:	dec    ecx
  4264ee:	jmp    0x8b98:0x9bc5e280
  4264f5:	adc    DWORD PTR [eax],eax
  4264f7:	mov    esp,0x4ce7de2f
  4264fc:	pop    es
  4264fd:	in     eax,0xa6
  4264ff:	add    ebp,DWORD PTR [edi]
  426501:	stc    
  426502:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426503:	das    
  426504:	xor    dh,bh
  426506:	psubb  mm7,QWORD PTR [ebx-0x30]
  42650a:	push   ss
  42650b:	sbb    dl,BYTE PTR [ebx-0x4e50afeb]
  426511:	fsubrp st(7),st
  426513:	call   0xeb3897c1
  426518:	js     0x426504
  42651a:	shl    esi,cl
  42651c:	jge    0x426587
  42651e:	sub    bl,BYTE PTR [ebx-0x5bc4491c]
  426524:	mov    dh,0x23
  426526:	add    DWORD PTR [ecx],esi
  426528:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426529:	push   es
  42652a:	xchg   BYTE PTR [edi],ah
  42652c:	xchg   esp,eax
  42652d:	mov    ebx,0x2d8b26fd
  426532:	imul   eax,DWORD PTR [eax-0x25ff21d4],0x5a36c66c
  42653c:	add    BYTE PTR [eax],al
  42653e:	sar    BYTE PTR [ecx-0x215b6eb2],cl
  426544:	add    cl,ch
  426546:	jg     0x4265c5
  426548:	jmp    0xfafa6514
  42654d:	cmp    DWORD PTR es:[esi-0x21d31700],esi
  426554:	stc    
  426555:	push   ss
  426556:	fwait
  426557:	es pushf 
  426559:	xlat   BYTE PTR ds:[ebx]
  42655a:	mov    WORD PTR [ecx],ss
  42655c:	jmp    0xfafb138c
  426561:	(bad)  
  426562:	ss scas al,BYTE PTR es:[edi]
  426564:	jmp    0xfafb136c
  426569:	bound  esi,QWORD PTR ds:0xa8b174b9
  42656f:	sub    ecx,DWORD PTR [ecx]
  426571:	jb     0x42651e
  426573:	pop    esi
  426574:	add    cl,ch
  426576:	sub    al,0xc6
  426578:	jg     0x4265bf
  42657a:	sub    ebx,esi
  42657c:	sub    eax,0xf93ab0a9
  426581:	call   0x1f03b7c3
  426586:	dec    eax
  426587:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426588:	mov    edi,0x15442ced
  42658d:	or     DWORD PTR [edx],0x3ce90108
  426593:	imul   eax,DWORD PTR [edx-0x1b],0x1c
  426597:	mov    ecx,0xfce6bd14
  42659c:	add    BYTE PTR [edx-0x19],ch
  42659f:	jmp    0x426627
  4265a4:	push   es
  4265a5:	(bad)  
  4265a6:	std    
  4265a7:	xor    DWORD PTR [esi],edx
  4265a9:	mov    edi,DWORD PTR [edi+0x5e0d600]
  4265af:	mov    bh,0x91
  4265b1:	mov    esp,0x6dd5554b
  4265b6:	dec    edi
  4265b7:	lea    sp,[ebp+0xe0d5475]
  4265be:	and    eax,0x5eeb0d10
  4265c3:	cmp    DWORD PTR [edi],eax
  4265c5:	fdivp  st(7),st
  4265c7:	call   DWORD PTR [esi-0x6895bc2b]
  4265cd:	mov    BYTE PTR [ebx],ah
  4265cf:	pop    esp
  4265d0:	mov    DWORD PTR [edi-0x7e],edi
  4265d3:	lock dec ebp
  4265d5:	push   edi
  4265d6:	jne    0x426610
  4265d8:	cmpxchg BYTE PTR [eax+0x2e],bh
  4265dc:	retf   
  4265dd:	push   ds
  4265de:	add    eax,0x10e5fd83
  4265e3:	jne    0x426630
  4265e5:	imul   edi,edx,0xffffff84
  4265e8:	xchg   esi,eax
  4265e9:	aam    0xd
  4265eb:	adc    DWORD PTR [esi+0x160462e4],0x4f
  4265f2:	ds sbb dh,dh
  4265f5:	adc    BYTE PTR [esp+edx*2],0x20
  4265f9:	and    BYTE PTR [ecx],al
  4265fb:	adc    edx,0xffffffeb
  4265fe:	add    eax,0x42
  426601:	aad    0x43
  426603:	add    ebp,0xffffffe7
  426606:	xor    DWORD PTR [esi],ebp
  426608:	add    BYTE PTR [eax],al
  42660a:	or     dh,BYTE PTR [edi+0x4f]
  42660d:	call   0x39a172
  426612:	fstp   DWORD PTR [eax]
  426614:	ds cs adc eax,0x133b5f6d
  42661b:	rcl    DWORD PTR [ebx+ecx*4+0x2f],cl
  42661f:	and    edx,0x28bea40f
  426625:	cmp    DWORD PTR [esi+0x2f0005c3],ebp
  42662b:	jb     0x426676
  42662d:	sub    ax,0xcb1d
  426631:	push   edi
  426632:	mov    eax,0xf4f08b0c
  426637:	fst    DWORD PTR [ecx]
  426639:	cmp    BYTE PTR [esi-0x55],ah
  42663c:	and    BYTE PTR [edx],ch
  42663e:	mov    dl,0x73
  426640:	add    bh,BYTE PTR [edi+0x14]
  426643:	sar    edx,0x74
  426646:	xor    dh,BYTE PTR [eax]
  426648:	add    eax,DWORD PTR [ebp+0x7ef7316f]
  42664e:	outs   dx,DWORD PTR ds:[esi]
  42664f:	mov    ebp,0x19df102c
  426654:	inc    edi
  426655:	sbb    bl,bh
  426657:	ret    
  426658:	repnz push ebx
  42665a:	inc    ecx
  42665b:	add    eax,0xc16b7f05
  426660:	add    eax,0xffffffe3
  426663:	mov    dl,0x43
  426665:	jg     0x4266d3
  426667:	lods   eax,DWORD PTR ds:[esi]
  426668:	(bad)  [ecx]
  42666a:	retf   
  42666b:	push   ecx
  42666c:	aaa    
  42666d:	call   0x113a6672
  426672:	lahf   
  426673:	sti    
  426674:	std    
  426675:	test   BYTE PTR [edi],bh
  426677:	pop    ebp
  426678:	aam    0x86
  42667a:	or     DWORD PTR [eax],eax
  42667c:	or     DWORD PTR [ebp-0x1a],0x5554219b
  426683:	add    DWORD PTR [edx*2-0x7b74f274],eax
  42668a:	inc    esp
  42668b:	add    BYTE PTR [ecx+0x78],ah
  42668e:	mov    esi,0x197daa53
  426693:	and    BYTE PTR [ecx+ecx*4-0x219324ba],ah
  42669a:	out    0x8c,eax
  42669c:	cld    
  42669d:	pushw  ss
  42669f:	fstp   QWORD PTR [edx+eax*1-0x1c]
  4266a3:	push   ss
  4266a4:	xor    bl,BYTE PTR [edi+0x4a]
  4266a7:	mov    eax,ds:0x82a7d05a
  4266ac:	mov    ebp,esp
  4266ae:	out    dx,eax
  4266af:	add    ebp,DWORD PTR [edi]
  4266b1:	imul   DWORD PTR [eax]
  4266b3:	push   ss
  4266b4:	(bad)  
  4266b5:	out    dx,al
  4266b6:	daa    
  4266b7:	inc    ecx
  4266b8:	push   ebp
  4266b9:	mov    al,ds:0x9e1603ec
  4266be:	lock or ebp,DWORD PTR [edi]
  4266c1:	fsubrp st(6),st
  4266c3:	enter  0xac90,0x5f
  4266c7:	ud2    
  4266c9:	fwait
  4266ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266cb:	add    ebx,ebp
  4266cd:	adc    dh,BYTE PTR [edi+0x6d9e50a0]
  4266d3:	retf   
  4266d4:	add    BYTE PTR [eax],al
  4266d6:	add    eax,DWORD PTR [edi+ebx*2]
  4266d9:	imul   eax
  4266db:	call   0xe167:0xafb00427
  4266e2:	gs xor ebp,esp
  4266e5:	inc    ebx
  4266e6:	scas   al,BYTE PTR es:[edi]
  4266e7:	mov    ds:0xde2f0be0,eax
  4266ec:	inc    dl
  4266ee:	fldcw  WORD PTR [ebp-0x6229f031]
  4266f4:	loopne 0x426701
  4266f6:	das    
  4266f7:	fsubrp st(6),st
  4266f9:	lds    ebp,FWORD PTR [eax+0x6ff11db5]
  4266ff:	inc    edi
  426700:	mov    cl,0xb
  426702:	aaa    
  426703:	fsubrp st(7),st
  426705:	popa   
  426706:	addr16 cdq 
  426708:	daa    
  426709:	add    al,0x7
  42670b:	pushf  
  42670c:	pop    esi
  42670d:	mov    eax,ds:0x17a86304
  426712:	dec    edi
  426713:	add    DWORD PTR gs:[eax+edx*2+0x45e93e95],esi
  42671b:	mov    ch,0x9
  42671d:	icebp  
  42671e:	sub    al,0xde
  426720:	stc    
  426721:	in     al,0x8
  426723:	xchg   ebp,eax
  426724:	ds jmp 0x2e8b625d
  42672a:	imul   ebx,esi,0x74
  42672d:	out    dx,eax
  42672e:	mov    ebx,0xb5ed2522
  426733:	fld    QWORD PTR [ebp-0x40eb90d2]
  426739:	in     eax,0x0
  42673b:	add    BYTE PTR [edi+edi*2],ch
  42673e:	gs inc esi
  426740:	repz fst QWORD PTR [ecx+0x72]
  426744:	les    esp,FWORD PTR [ebx-0x3f]
  426747:	popf   
  426748:	in     eax,dx
  426749:	pusha  
  42674a:	adc    al,0xa1
  42674c:	outs   dx,DWORD PTR ds:[esi]
  42674d:	stc    
  42674e:	add    BYTE PTR [edx+0x74],dh
  426751:	inc    edi
  426752:	enter  0x34f1,0xde
  426756:	add    BYTE PTR [eax+ebp*4-0x31],ah
  42675a:	clc    
  42675b:	not    BYTE PTR [eax-0x37df814b]
  426761:	xor    ecx,DWORD PTR [eax]
  426763:	push   0xe908e692
  426768:	sub    al,0x25
  42676a:	je     0x426747
  42676c:	je     0x42671f
  42676e:	jne    0x426753
  426770:	mov    ch,0xa5
  426772:	push   0xe633b0
  426777:	jmp    0x8e8bdb7e
  42677c:	in     al,dx
  42677d:	fucomp st(0)
  42677f:	adc    eax,0x70fab4a5
  426784:	push   cs
  426785:	cmp    eax,0x14332ada
  42678a:	pop    edx
  42678b:	stos   BYTE PTR es:[edi],al
  42678c:	push   esi
  42678d:	popa   
  42678e:	in     eax,dx
  42678f:	add    BYTE PTR ds:0x55df4d15,ah
  426795:	loop   0x4267e0
  426797:	(bad)  
  426798:	fild   DWORD PTR [eax+0xb]
  42679b:	inc    eax
  42679c:	push   es
  42679d:	pop    esp
  42679e:	jl     0x4267a8
  4267a0:	add    BYTE PTR [eax],al
  4267a2:	push   ecx
  4267a3:	jmp    0xdd193f2c
  4267a8:	add    BYTE PTR [ebx+0xf00e903],al
  4267ae:	dec    edx
  4267af:	pop    DWORD PTR [ecx]
  4267b1:	add    dh,dl
  4267b3:	pop    ebx
  4267b4:	jl     0x4267c6
  4267b6:	(bad)  
  4267b7:	out    0x84,eax
  4267b9:	ret    
  4267ba:	(bad)  
  4267bb:	fadd   QWORD PTR [eax]
  4267bd:	(bad)  
  4267be:	jnp    0x4267a4
  4267c0:	call   0xf69bb88f
  4267c5:	test   DWORD PTR [esi-0x29],edx
  4267c8:	adc    bh,bh
  4267ca:	mov    ebx,0x20fde8e4
  4267cf:	pop    ecx
  4267d0:	test   BYTE PTR [ebp-0x587b16aa],0x96
  4267d7:	fadd   QWORD PTR [eax]
  4267d9:	test   bl,0xb0
  4267dc:	add    DWORD PTR [esi-0x67],edx
  4267df:	rol    BYTE PTR [esi],1
  4267e1:	lea    ecx,[esi+0x560004e2]
  4267e7:	dec    ebp
  4267e8:	mov    cl,0x6
  4267ea:	dec    esi
  4267eb:	fadd   QWORD PTR [eax]
  4267ed:	jmp    0x42683e
  4267ef:	dec    ebp
  4267f0:	jns    0x4267f6
  4267f2:	ret    
  4267f3:	or     al,0x5
  4267f5:	add    al,0x56
  4267f7:	fdivr  QWORD PTR [ecx+0x7d]
  4267fa:	push   esi
  4267fb:	fadd   QWORD PTR [ecx+0x44695245]
  426801:	or     BYTE PTR [eax-0x2f],cl
  426804:	mov    dl,0x0
  426806:	add    BYTE PTR [eax],al
  426808:	adc    al,0xdc
  42680a:	add    BYTE PTR [ecx],bh
  42680c:	das    
  42680d:	cli    
  42680e:	hlt    
  42680f:	outs   dx,BYTE PTR ds:[esi]
  426810:	sub    ebx,DWORD PTR [eax-0x4fe0aaad]
  426816:	push   ebx
  426817:	add    dh,BYTE PTR [eax]
  426819:	lock mov bh,0xff
  42681c:	in     eax,dx
  42681d:	out    dx,al
  42681e:	std    
  42681f:	add    ebp,DWORD PTR [edi]
  426821:	(bad)
  426824:	popa   
  426825:	mov    bl,0xe7
  426827:	ror    BYTE PTR [ecx-0x32],0x2
  42682b:	or     esp,DWORD PTR [eax-0x1600ca41]
  426831:	jne    0x426866
  426833:	call   0xfbdea3bc
  426838:	xor    BYTE PTR [eax],dh
  42683a:	add    al,0x4f
  42683c:	mov    eax,0xe9ff067a
  426841:	push   ebp
  426842:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426843:	lods   al,BYTE PTR ds:[esi]
  426844:	(bad)  
  426847:	bound  ebp,QWORD PTR [esi]
  426849:	scas   eax,DWORD PTR es:[edi]
  42684a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42684b:	adc    BYTE PTR [ecx],dl
  42684d:	sahf   
  42684e:	add    al,0xb
  426850:	fcom   DWORD PTR [edi+0x5571ff35]
  426856:	xor    ebp,eax
  426858:	cwde   
  426859:	cmp    ebx,DWORD PTR [ebx+edi*8+0x6603f828]
  426860:	das    
  426861:	push   eax
  426862:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426863:	pop    esp
  426864:	aam    0xc4
  426866:	inc    BYTE PTR [edi+ebp*2+0x19e12]
  42686d:	add    dl,bh
  42686f:	mov    esp,0x123f5ce7
  426874:	jns    0x42682d
  426876:	sti    
  426877:	jg     0x4268b9
  426879:	add    ah,bl
  42687b:	ja     0x42686f
  42687d:	stos   DWORD PTR es:[edi],eax
  42687e:	sbb    eax,0xd15b0505
  426883:	fwait
  426884:	add    al,0x4f
  426886:	sub    dh,bl
  426888:	cld    
  426889:	outs   dx,DWORD PTR ds:[esi]
  42688a:	xor    DWORD PTR [esi],ebx
  42688c:	call   0xf8dee2c9
  426891:	add    edi,DWORD PTR [ecx+ebp*2+0xa]
  426895:	or     BYTE PTR [eax],dl
  426897:	(bad)  
  426898:	or     ebx,ebp
  42689a:	scas   al,BYTE PTR es:[edi]
  42689b:	loope  0x426880
  42689d:	add    ebp,DWORD PTR [edi]
  42689f:	out    0x3a,eax
  4268a1:	mov    gs,WORD PTR [ebx]
  4268a3:	loop   0x42688c
  4268a5:	add    edi,DWORD PTR [esi-0x25]
  4268a8:	sub    dh,BYTE PTR [esp+edi*2]
  4268ab:	(bad)  
  4268ac:	mov    ds:0xe3b6d579,al
  4268b1:	push   esp
  4268b2:	lods   eax,DWORD PTR ds:[esi]
  4268b3:	loope  0x426898
  4268b5:	add    ebp,DWORD PTR [edi]
  4268b7:	inc    esp
  4268b8:	jmp    0xcf213ff1
  4268bd:	add    ebp,DWORD PTR [edi]
  4268bf:	popa   
  4268c0:	sub    BYTE PTR [edi],dl
  4268c2:	ficom  DWORD PTR [esi]
  4268c4:	daa    
  4268c5:	xor    eax,0x414329e4
  4268ca:	das    
  4268cb:	nop    edi
  4268ce:	int3   
  4268cf:	retf   
  4268d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4268d1:	add    eax,DWORD PTR [eax]
  4268d3:	add    BYTE PTR [eax],dl
  4268d5:	cmp    al,ah
  4268d7:	or     eax,DWORD PTR [ecx+esi*1+0x1fb9cda]
  4268de:	lock stos DWORD PTR es:[edi],eax
  4268e0:	enter  0xf3b8,0x9c
  4268e4:	stos   BYTE PTR es:[edi],al
  4268e5:	popf   
  4268e6:	je     0x4268f2
  4268e8:	std    
  4268e9:	(bad)  
  4268ea:	fsubr  DWORD PTR [ebx-0x63244975]
  4268f0:	cmc    
  4268f1:	push   cs
  4268f2:	shl    esi,cl
  4268f4:	test   bl,cl
  4268f6:	daa    
  4268f7:	add    al,0xe4
  4268f9:	fwait
  4268fa:	in     al,dx
  4268fb:	add    edx,DWORD PTR [edi-0x14]
  4268fe:	sbb    DWORD PTR [ebp-0x56fe9ecc],0x18
  426905:	not    DWORD PTR [edx+0x16]
  426908:	mov    ah,BYTE PTR [edx]
  42690a:	fisubr DWORD PTR [edx]
  42690c:	sub    edx,DWORD PTR [ecx]
  42690e:	cli    
  42690f:	hlt    
  426910:	nop
  426911:	in     al,0x40
  426913:	jmp    0xdd6793cb
  426918:	aam    0x2d
  42691a:	cld    
  42691b:	xchg   BYTE PTR [ebx-0x5d9b0ea3],ah
  426921:	sub    bl,BYTE PTR [ecx+eax*4]
  426924:	inc    ecx
  426925:	mov    ecx,0xe8af6efa
  42692a:	stc    
  42692b:	sbb    ch,bl
  42692d:	inc    eax
  42692e:	mov    BYTE PTR [edi+0x30],ah
  426931:	fiadd  DWORD PTR [eax]
  426933:	jmp    0xe7c5d042
  426938:	add    BYTE PTR [eax],al
  42693a:	xor    al,0xde
  42693c:	add    BYTE PTR [ecx+0x35],dl
  42693f:	mov    eax,0xb9033efa
  426944:	adc    al,0x85
  426946:	mov    esi,0x6a8e00f5
  42694b:	mov    ecx,0xf59ad924
  426950:	add    BYTE PTR [edi+eiz*4+0x391653c2],dh
  426957:	retf   0x94f9
  42695a:	jl     0x426914
  42695c:	je     0x426953
  42695e:	mov    ds:0x82fe092b,eax
  426963:	icebp  
  426964:	adc    ch,BYTE PTR [ecx+0x64f15d2c]
  42696a:	ret    0x1238
  42696d:	shr    DWORD PTR [eax+0x55],1
  426970:	sti    
  426971:	fisubr WORD PTR [edi+0x2e7759e]
  426977:	fist   WORD PTR [edx-0x32]
  42697a:	push   ds
  42697b:	loop   0x426976
  42697d:	add    BYTE PTR [ebx],al
  42697f:	loop   0x426969
  426981:	push   ss
  426982:	js     0x4269dd
  426984:	test   BYTE PTR [ebx-0x3da40780],0x6
  42698b:	loope  0x4269e0
  42698d:	mov    edi,DWORD PTR [edx+0x227581ef]
  426993:	lock cmc 
  426995:	jne    0x42697d
  426997:	arpl   WORD PTR [esp+ecx*1-0x47],di
  42699b:	into   
  42699c:	sbb    al,0xff
  42699e:	add    BYTE PTR [eax],al
  4269a0:	add    edi,DWORD PTR [ecx-0x4efc00b0]
  4269a6:	dec    edi
  4269a7:	push   ebx
  4269a9:	call   0xafa87fa3
  4269ae:	cmp    al,BYTE PTR [eax]
  4269b0:	pop    edi
  4269b1:	pop    ds
  4269b2:	sbb    eax,0x40cf0685
  4269b7:	test   DWORD PTR [eax-0x32],esi
  4269ba:	cmp    al,0xe8
  4269bc:	fidivr WORD PTR [ebx]
  4269be:	idiv   edi
  4269c0:	push   edx
  4269c1:	call   0x334b:0x903d3375
  4269c8:	sbb    eax,0x2f74ef5f
  4269cd:	xchg   ebp,eax
  4269ce:	pop    ebp
  4269cf:	adc    ch,al
  4269d1:	xchg   esp,eax
  4269d2:	add    DWORD PTR [ecx+ebx*2],0x63
  4269d6:	inc    esp
  4269d7:	and    BYTE PTR [ebp-0x62],bh
  4269da:	imul   eax,DWORD PTR [ebx],0xf
  4269dd:	iret   
  4269de:	and    BYTE PTR [edx-0x69],ch
  4269e1:	push   edi
  4269e2:	je     0x426a04
  4269e4:	jns    0x4269ca
  4269e6:	aad    0x4
  4269e8:	jns    0x4269b7
  4269ea:	or     al,ch
  4269ec:	sub    edx,DWORD PTR [edi-0xa]
  4269ef:	call   DWORD PTR ds:0x32075c5
  4269f5:	jno    0x426a49
  4269f7:	mov    ebp,DWORD PTR [edi]
  4269f9:	add    bh,cl
  4269fb:	pop    edx
  4269fc:	jmp    0x2f5f2d02
  426a01:	ror    BYTE PTR [ecx-0x1effff14],cl
  426a07:	jae    0x426a1a
  426a09:	adc    al,0x30
  426a0b:	icebp  
  426a0c:	hlt    
  426a0d:	cli    
  426a0e:	mov    ds:0x37759791,al
  426a13:	jl     0x426a06
  426a15:	sbb    eax,DWORD PTR [ecx+0x5]
  426a18:	add    eax,0x90431f87
  426a1d:	js     0x426a71
  426a1f:	pop    ebp
  426a20:	out    dx,eax
  426a21:	sahf   
  426a22:	add    DWORD PTR [ebp+0x7a],ebx
  426a25:	rol    BYTE PTR [ebx+0x7af28191],0xbf
  426a2c:	xchg   edi,eax
  426a2d:	jne    0x426a66
  426a2f:	pop    ebp
  426a30:	jb     0x426a2c
  426a32:	loopne 0x426a70
  426a34:	stos   DWORD PTR es:[edi],eax
  426a35:	or     al,BYTE PTR [ebp-0x3b]
  426a38:	xor    bl,bh
  426a3a:	pop    edx
  426a3b:	mov    ecx,0x1d377597
  426a40:	xor    bh,ch
  426a42:	rcr    BYTE PTR [ebx+ecx*4],0xc2
  426a46:	pop    ecx
  426a47:	push   edx
  426a48:	les    edx,FWORD PTR [eax]
  426a4a:	das    
  426a4b:	push   edx
  426a4c:	mov    ebp,esp
  426a4e:	cld    
  426a4f:	dec    edx
  426a50:	mov    esi,DWORD PTR [ebp+0x3b]
  426a53:	je     0x4269ec
  426a55:	jne    0x426aa6
  426a57:	xor    BYTE PTR [ecx],bl
  426a59:	or     al,0x90
  426a5b:	push   edx
  426a5c:	repnz cli 
  426a5e:	add    ch,BYTE PTR [ebp-0x6b0504d0]
  426a64:	das    
  426a65:	sti    
  426a66:	add    ch,BYTE PTR [ebp+0x1597]
  426a6c:	adc    DWORD PTR [edx+0x7ab6003e],0xfffffff2
  426a73:	test   BYTE PTR [edi-0x22],ch
  426a76:	pop    esp
  426a77:	inc    esp
  426a78:	mov    dl,0xac
  426a7a:	push   esp
  426a7b:	cmp    DWORD PTR [edi+0x71],eax
  426a7e:	xchg   BYTE PTR [edx+0x10a85a44],bl
  426a84:	frstor [esi-0x6]
  426a87:	aam    0x61
  426a89:	pop    ecx
  426a8a:	mov    dl,0x10
  426a8c:	in     eax,0xf6
  426a8e:	adc    al,0xf4
  426a90:	cdq    
  426a91:	and    eax,0x6504005f
  426a96:	sub    eax,0x169c61e4
  426a9b:	add    eax,0x2dc828a6
  426aa0:	das    
  426aa1:	mov    bl,0x15
  426aa3:	in     al,0x5
  426aa5:	sub    ah,BYTE PTR [ebx-0xfd70c00]
  426aab:	stos   DWORD PTR es:[edi],eax
  426aac:	add    BYTE PTR [edx+0x7289973],dh
  426ab2:	cmc    
  426ab3:	jecxz  0x426b10
  426ab5:	mov    ecx,DWORD PTR [edi-0x1b]
  426ab8:	pop    ecx
  426ab9:	mov    dh,0x5b
  426abb:	sysexit 
  426abd:	mov    bl,0xfd
  426abf:	(bad)  
  426ac0:	and    bl,BYTE PTR [esi]
  426ac2:	call   0xe83da69d
  426ac7:	add    eax,DWORD PTR [edx-0x33]
  426aca:	dec    edi
  426acb:	sub    DWORD PTR [ecx+0x8033b3],edx
  426ad1:	add    BYTE PTR [edi+0x29],ch
  426ad4:	loopne 0x426a6e
  426ad6:	sbb    ah,dh
  426ad8:	setl   BYTE PTR [edx-0x1572e44e]
  426adf:	shl    DWORD PTR [edx+0x2610e039],1
  426ae5:	clc    
  426ae6:	or     BYTE PTR [ecx],0x6f
  426ae9:	test   al,0xde
  426aeb:	or     al,0x97
  426aed:	xor    DWORD PTR [eax+0x62fd00e8],ebp
  426af3:	repnz add BYTE PTR [ecx-0x16bea534],al
  426afa:	mov    bh,0xee
  426afc:	stc    
  426afd:	mov    bh,0x4
  426aff:	jb     0x426a87
  426b01:	sub    DWORD PTR [ebx],esi
  426b03:	mov    bh,0x32
  426b05:	bound  eax,QWORD PTR [esi+esi*4-0x49e6952d]
  426b0c:	add    DWORD PTR [edx-0x64],esi
  426b0f:	pop    eax
  426b10:	(bad)  
  426b11:	cmp    eax,0x35f35b1b
  426b16:	packsswb mm0,QWORD PTR [ebp+eiz*4+0x5c]
  426b1b:	cmp    BYTE PTR [ecx],al
  426b1d:	sahf   
  426b1e:	and    esi,esp
  426b20:	stc    
  426b21:	mov    edx,0xf4749e89
  426b26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426b27:	sub    ecx,DWORD PTR ds:0x74b5ef72
  426b2d:	jge    0x426af3
  426b2f:	iret   
  426b30:	add    cl,ch
  426b32:	sub    al,0xb5
  426b34:	je     0x426ba3
  426b36:	add    BYTE PTR [eax],al
  426b38:	mov    ch,0x1b
  426b3a:	stc    
  426b3b:	data16 sahf 
  426b3d:	pop    ecx
  426b3e:	inc    esp
  426b3f:	popa   
  426b40:	push   ss
  426b41:	or     eax,ecx
  426b43:	sub    esi,DWORD PTR [esi+ebx*8]
  426b46:	push   ebx
  426b47:	bound  ecx,QWORD PTR [eax+0x3b5ed31]
  426b4d:	or     al,0x86
  426b4f:	hlt    
  426b50:	mov    al,ds:0x5fe940e0
  426b55:	pop    ecx
  426b56:	stc    
  426b57:	rcr    esp,0x59
  426b5a:	inc    ecx
  426b5b:	jmp    0xa5045917
  426b60:	enter  0xd4,0xe9
  426b64:	sub    al,0xb5
  426b66:	rol    DWORD PTR [ecx+0x4159c8],cl
  426b6c:	xchg   BYTE PTR [esi+0x2e],dl
  426b6f:	mov    ecx,DWORD PTR [esi+0x56]
  426b72:	iret   
  426b73:	push   0x41595a
  426b78:	push   ecx
  426b79:	mov    eax,ds:0x49764589
  426b7e:	iret   
  426b7f:	xor    edi,DWORD PTR [eax+0x63]
  426b82:	inc    esp
  426b83:	call   0x8448d3a5
  426b88:	and    eax,0x2f0000db
  426b8d:	iret   
  426b8e:	lock bswap edx
  426b91:	ret    
  426b92:	add    DWORD PTR [eax],eax
  426b94:	push   ss
  426b95:	xchg   esp,eax
  426b96:	ror    BYTE PTR [edi],0x8a
  426b99:	mov    esp,0x1
  426b9e:	push   es
  426b9f:	inc    sp
  426ba1:	hlt    
  426ba2:	push   esi
  426ba3:	addr16 inc esp
  426ba5:	cld    
  426ba6:	inc    esi
  426ba7:	arpl   WORD PTR [eax+edi*8-0x71],si
  426bab:	iret   
  426bac:	cld    
  426bad:	mov    ebx,edi
  426baf:	pusha  
  426bb0:	not    bl
  426bb2:	mov    ebx,DWORD PTR [edx-0x262b7afa]
  426bb8:	add    BYTE PTR [eax],al
  426bba:	dec    ebp
  426bbb:	pop    ds
  426bbc:	cmc    
  426bbd:	cmp    ecx,DWORD PTR [eax]
  426bbf:	fld    DWORD PTR [edi+esi*8+0x3900dcc6]
  426bc6:	jmp    0x426c10
  426bc8:	push   es
  426bc9:	test   BYTE PTR [eax],al
  426bcb:	fiadd  DWORD PTR [eax]
  426bcd:	add    BYTE PTR [esi-0x5c],bl
  426bd0:	(bad)  
  426bd1:	(bad)  
  426bd2:	icebp  
  426bd3:	fnstcw WORD PTR fs:[ebx]
  426bd6:	inc    eax
  426bd7:	fld    DWORD PTR [edi+ebx*8+0x5300dc96]
  426bde:	push   ecx
  426bdf:	iret   
  426be0:	hlt    
  426be1:	(bad)  
  426be2:	mov    ebx,0x2f55f648
  426be7:	xlat   BYTE PTR ds:[ebx]
  426be8:	jg     0x426baa
  426bea:	cli    
  426beb:	(bad)  
  426bec:	fnsave [ebx+edi*2+0x30]
  426bf0:	retf   0xf48c
  426bf3:	jbe    0x426b88
  426bf5:	xor    ebp,DWORD PTR [eax+0x31]
  426bf8:	add    bh,bl
  426bfa:	cmp    cl,BYTE PTR [ebx-0x10]
  426bfd:	aas    
  426bfe:	das    
  426bff:	inc    edx
  426c00:	mov    esi,0x24000074
  426c05:	stc    
  426c06:	jge    0x426bcb
  426c08:	sti    
  426c09:	retf   
  426c0a:	paddb  mm7,QWORD PTR [ebp-0x3bea5862]
  426c11:	jo     0x426c55
  426c13:	popw   ds
  426c15:	les    ecx,FWORD PTR [edi-0x42fd45ae]
  426c1b:	push   eax
  426c1c:	pop    ss
  426c1d:	jo     0x426c8b
  426c1f:	cli    
  426c20:	sbb    BYTE PTR [ebp+0x21],al
  426c23:	cld    
  426c24:	das    
  426c25:	xchg   esp,eax
  426c26:	mov    WORD PTR [edi+0x17],cs
  426c29:	and    BYTE PTR [edx+edi*8+0x0],ch
  426c2d:	(bad)  
  426c2e:	adc    esp,edi
  426c30:	sub    BYTE PTR [edx-0x73],al
  426c33:	add    BYTE PTR [edi],ch
  426c35:	lds    ecx,FWORD PTR [ecx-0x322a18bb]
  426c3b:	cli    
  426c3c:	push   0x42fb2ac8
  426c41:	sub    esp,ebp
  426c43:	aas    
  426c44:	das    
  426c45:	cmp    bh,BYTE PTR [esi+0xfce4175]
  426c4b:	clc    
  426c4c:	cmp    edx,DWORD PTR [esi-0x21888a73]
  426c52:	paddsb mm7,QWORD PTR [ecx]
  426c55:	frstor [esi]
  426c57:	adc    BYTE PTR [edi],dl
  426c59:	mov    DWORD PTR [edx+0x41122f40],eax
  426c5f:	mov    esp,0x6c0fddff
  426c64:	mov    ebp,0x8a1bb0
  426c69:	add    dl,dh
  426c6b:	jne    0x426cec
  426c6d:	ret    
  426c6e:	and    edx,DWORD PTR [edi-0x25a0ff5c]
  426c74:	out    0x3,eax
  426c76:	das    
  426c77:	arpl   WORD PTR [ebp-0x2b622fa5],sp
  426c7d:	mov    ebx,fs
  426c7f:	fcomp  DWORD PTR [ebx]
  426c81:	mov    dh,dl
  426c83:	jne    0x426cd4
  426c85:	les    esi,FWORD PTR [ebx]
  426c87:	popa   
  426c88:	sub    eax,0xed22b6a8
  426c8d:	scas   eax,DWORD PTR es:[edi]
  426c8e:	inc    esp
  426c8f:	sbb    DWORD PTR [eax+0x1875f287],edx
  426c95:	xchg   edx,ebp
  426c97:	xchg   ebp,eax
  426c98:	sbb    BYTE PTR [ebp+0xfb3b6a2],dl
  426c9e:	aaa    
  426c9f:	scas   eax,DWORD PTR es:[edi]
  426ca0:	adc    eax,0x6f9db2ac
  426ca5:	aas    
  426ca6:	pop    ss
  426ca7:	sub    ch,bh
  426ca9:	mov    BYTE PTR [edi],dh
  426cab:	push   cs
  426cac:	xchg   ebx,eax
  426cad:	xor    esi,DWORD PTR [edi]
  426caf:	gs adc eax,0x6ee0109c
  426cb5:	fcomp  QWORD PTR [esi+0x8]
  426cb8:	mov    bh,0xca
  426cba:	jle    0x426ca7
  426cbc:	xchg   ebp,eax
  426cbd:	xor    bh,BYTE PTR [edi-0x51]
  426cc0:	adc    esi,eax
  426cc2:	mov    cl,0x18
  426cc4:	pusha  
  426cc5:	test   eax,0x3527ebd1
  426cca:	adc    esp,DWORD PTR gs:[ecx]
  426ccd:	ret    0x0
  426cd0:	aaa    
  426cd1:	fidiv  WORD PTR [eax+ecx*4+0x545ccb]
  426cd8:	mov    cl,0xae
  426cda:	call   0x1496a0f
  426cdf:	shr    DWORD PTR ds:0xb1e900dd,0x58
  426ce6:	std    
  426ce7:	and    al,0xba
  426ce9:	mov    dl,0x51
  426ceb:	push   ds
  426cec:	cmp    dh,ah
  426cee:	stc    
  426cef:	cld    
  426cf0:	dec    esp
  426cf1:	retf   0xe940
  426cf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426cf5:	xchg   ebp,eax
  426cf6:	test   BYTE PTR [edx],ah
  426cf8:	sbb    edi,esi
  426cfa:	sub    eax,0xfaac7ffe
  426cff:	aas    
  426d00:	pop    ss
  426d01:	or     eax,0x63a7e941
  426d06:	imul   edi,DWORD PTR [eax],0x648bddeb
  426d0c:	mov    al,ds:0xfcd6fab0
  426d11:	push   esi
  426d12:	mov    esi,0xfb2f6ec1
  426d17:	(bad)  
  426d18:	mov    cl,0x9d
  426d1a:	jne    0x426cf7
  426d1c:	scas   eax,DWORD PTR es:[edi]
  426d1d:	mov    al,ds:0xa8ae2e0d
  426d22:	dec    ecx
  426d23:	cmp    edx,esp
  426d25:	std    
  426d26:	rol    BYTE PTR [esi+0x59],0x15
  426d2a:	enter  0x8ab,0xae
  426d2e:	addr16 xchg esi,eax
  426d30:	sub    BYTE PTR [eax-0x7a],al
  426d33:	data16 add BYTE PTR [eax],al
  426d36:	sbb    al,0xf
  426d38:	inc    ecx
  426d39:	jmp    0x72972905
  426d3e:	nop
  426d3f:	pop    edi
  426d40:	in     eax,dx
  426d41:	(bad)  
  426d42:	jecxz  0x426cf1
  426d44:	cli    
  426d45:	pop    ss
  426d46:	or     dh,BYTE PTR [esi]
  426d48:	(bad)  
  426d49:	call   0x51904b7a
  426d4e:	and    dl,BYTE PTR [eax-0x5]
  426d51:	push   esi
  426d52:	fwait
  426d53:	rcr    DWORD PTR [eax+edi*8+0x87de6c],cl
  426d5a:	test   DWORD PTR [ebp-0x23960785],ebp
  426d60:	std    
  426d61:	xor    DWORD PTR [esi+0x78],edx
  426d64:	add    al,BYTE PTR ds:[esi-0x2f09d61f]
  426d6b:	fs inc esp
  426d6d:	test   dh,al
  426d6f:	stc    
  426d70:	setns  BYTE PTR [esi]
  426d73:	sub    eax,0x53085ce9
  426d78:	test   BYTE PTR [ebp-0xaed23d],0x83
  426d7f:	sub    DWORD PTR ds:0x3a585640,edx
  426d85:	or     BYTE PTR [ebp-0x3288a95],bl
  426d8b:	loop   0x426d18
  426d8d:	inc    ebp
  426d8e:	shl    cl,cl
  426d90:	push   0x8529bf12
  426d95:	call   0x399db7
  426d9a:	add    BYTE PTR [eax],al
  426d9c:	mov    ebx,0x40508516
  426da1:	int3   
  426da2:	(bad)  
  426da3:	mov    esi,0x3a686e
  426da8:	inc    ecx
  426da9:	push   ecx
  426daa:	adc    al,0xc
  426dac:	pop    ss
  426dad:	and    DWORD PTR [ecx],eax
  426daf:	mov    DWORD PTR [ebp-0x22],edx
  426db2:	xor    esi,eax
  426db4:	and    bh,BYTE PTR [edi]
  426db6:	arpl   WORD PTR [ecx],ax
  426db8:	pop    ebx
  426db9:	pop    ss
  426dba:	test   DWORD PTR [eax+0x1e],edx
  426dbd:	les    esp,FWORD PTR [edx]
  426dbf:	js     0x426d8f
  426dc1:	dec    eax
  426dc2:	adc    BYTE PTR [esi+0x458c5158],bl
  426dc8:	push   edx
  426dc9:	repnz dec esi
  426dcb:	push   edi
  426dcc:	dec    ecx
  426dcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426dce:	xchg   edx,eax
  426dcf:	adc    DWORD PTR [esi+0x2f4387e0],edx
  426dd5:	stos   DWORD PTR es:[edi],eax
  426dd6:	retf   
  426dd7:	rol    DWORD PTR [ebx+0x41],0x1b
  426ddb:	add    DWORD PTR [edx+0x17508279],esp
  426de1:	fldenv [edx+0x78]
  426de4:	(bad)  
  426de5:	push   ds
  426de6:	lahf   
  426de7:	popf   
  426de8:	cdq    
  426de9:	sti    
  426dea:	jg     0x426e31
  426dec:	stos   DWORD PTR es:[edi],eax
  426ded:	pushw  ss
  426def:	sub    BYTE PTR [esi+0x155201e6],bl
  426df5:	mov    ebx,0xb1785237
  426dfa:	mov    dh,0xe
  426dfc:	out    dx,eax
  426dfd:	mov    dh,0x7d
  426dff:	inc    DWORD PTR [eax]
  426e01:	add    BYTE PTR ds:0x383fe05,ah
  426e07:	mov    ah,0x8f
  426e09:	sti    
  426e0a:	add    DWORD PTR [ebp+0x38],edx
  426e0d:	sub    ax,0x8de7
  426e11:	adc    eax,0x3ea86b
  426e16:	add    al,0x7d
  426e18:	inc    DWORD PTR [ebx-0x4706419]
  426e1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e1f:	div    esp
  426e21:	add    al,0x57
  426e23:	mov    dh,0xfe
  426e25:	(bad)  
  426e26:	jns    0x426e66
  426e28:	inc    ebx
  426e29:	sbb    cl,dh
  426e2b:	add    cl,BYTE PTR [edx+0x2ab1000]
  426e31:	adc    al,0x6f
  426e33:	mov    ch,0x7d
  426e35:	inc    ebp
  426e36:	sti    
  426e37:	nop
  426e38:	enter  0xb30b,0xc7
  426e3c:	add    eax,DWORD PTR [eax]
  426e3e:	das    
  426e3f:	xor    cl,dl
  426e41:	scas   eax,DWORD PTR es:[edi]
  426e42:	aas    
  426e43:	cmc    
  426e44:	add    al,0x66
  426e46:	aaa    
  426e47:	lds    edi,FWORD PTR [ebx+0x6f]
  426e4a:	adc    edi,DWORD PTR [esi]
  426e4c:	adc    ebp,DWORD PTR [eax]
  426e4e:	rcr    dh,1
  426e50:	cmp    bl,BYTE PTR ds:0x97d5ab31
  426e56:	mov    dh,0x1f
  426e58:	add    al,0x93
  426e5a:	fcom   QWORD PTR [edi-0x61]
  426e5d:	fbld   TBYTE PTR [eax+0xd]
  426e60:	inc    ebx
  426e61:	sbb    BYTE PTR [ebx+0xd3a755],ah
  426e67:	add    BYTE PTR [ebp+0x58f347d1],ah
  426e6d:	fsubp  st(6),st
  426e6f:	leave  
  426e70:	sbb    edx,ecx
  426e72:	mov    bh,0x39
  426e74:	fstp   QWORD PTR [eax-0x59]
  426e77:	jecxz  0x426e69
  426e79:	pop    eax
  426e7a:	lods   eax,DWORD PTR ds:[esi]
  426e7b:	xchg   ebx,eax
  426e7c:	fild   QWORD PTR [edx+0x65879795]
  426e82:	rol    BYTE PTR [ebx],0x2f
  426e85:	mov    bh,0xe6
  426e87:	(bad)  
  426e88:	mov    al,ds:0xa6977dab
  426e8d:	pop    ds
  426e8e:	int3   
  426e8f:	cmp    DWORD PTR [ecx+edx*8-0x41],edx
  426e93:	cmc    
  426e94:	or     dh,bl
  426e96:	and    BYTE PTR ds:0xf76bdb23,dl
  426e9c:	das    
  426e9d:	fsubrp st(7),st
  426e9f:	jl     0x426e83
  426ea1:	lods   eax,DWORD PTR ds:[esi]
  426ea2:	dec    edx
  426ea3:	jge    0x426f13
  426ea5:	fadd   QWORD PTR [ecx-0x3d]
  426ea8:	pop    ss
  426ea9:	fistp  WORD PTR [edi+0x45]
  426eac:	push   edi
  426ead:	(bad)  [ecx-0x3c]
  426eb0:	and    al,0x7b
  426eb2:	daa    
  426eb3:	loopne 0x426e6c
  426eb5:	push   ds
  426eb6:	aam    0x5b
  426eb8:	add    BYTE PTR [edi],ch
  426eba:	jmp    0x2bc4:0x67aa0f84
  426ec1:	or     eax,0xb6234571
  426ec6:	fidiv  WORD PTR [edi-0x1b]
  426ec9:	stos   BYTE PTR es:[edi],al
  426eca:	add    DWORD PTR [ecx+0x0],ebp
  426ecd:	add    BYTE PTR [eax],ch
  426ecf:	(bad)  
  426ed0:	jmp    DWORD PTR [esi-0x9ff4c98]
  426ed6:	mov    cl,0x89
  426ed8:	add    ecx,ebp
  426eda:	sub    al,0x59
  426edc:	mov    esp,0xfaa6a4f5
  426ee1:	daa    
  426ee2:	push   0xa85101b3
  426ee7:	dec    edx
  426ee8:	sti    
  426ee9:	ds inc ecx
  426eeb:	into   
  426eec:	push   0xeac981
  426ef1:	pop    esp
  426ef2:	jmp    0xfb4e:0x641150e9
  426ef9:	push   ds
  426efa:	add    BYTE PTR [ecx-0x6d],dh
  426efd:	adc    al,0x9e
  426eff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426f00:	jmp    0xfaecf1ef
  426f05:	jb     0x426eba
  426f07:	mov    edi,0x552ce900
  426f0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f0e:	in     eax,0xb7
  426f10:	add    cl,ch
  426f12:	sub    al,0x63
  426f14:	ret    
  426f15:	scas   eax,DWORD PTR es:[edi]
  426f16:	sub    al,0xde
  426f18:	inc    eax
  426f19:	xor    BYTE PTR [eax],bl
  426f1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f1c:	imul   ebp,ebx,0x5c00de2d
  426f22:	test   eax,0xbfc6fcf8
  426f27:	push   cs
  426f28:	mov    WORD PTR [edx],gs
  426f2a:	pop    ebx
  426f2b:	push   cs
  426f2c:	jmp    0xfae712ec
  426f31:	inc    ebx
  426f32:	add    BYTE PTR [eax],al
  426f34:	sub    al,0x5b
  426f36:	inc    esp
  426f37:	ins    DWORD PTR es:[edi],dx
  426f38:	cmp    al,0x36
  426f3a:	pop    ds
  426f3b:	pop    eax
  426f3c:	xchg   esp,eax
  426f3d:	(bad)  
  426f3e:	call   0xfae6f7b9
  426f43:	pop    esp
  426f44:	imul   esp,DWORD PTR [edx+0x51],0x4e4ea500
  426f4b:	push   0x3a643e
  426f50:	popa   
  426f51:	mov    al,0x92
  426f53:	adc    DWORD PTR [esi],eax
  426f55:	loop   0x426ede
  426f57:	xor    esi,0xffffffdc
  426f5a:	add    BYTE PTR [eax],al
  426f5c:	or     eax,0xcd840697
  426f61:	dec    edi
  426f62:	idiv   bh
  426f64:	jns    0x426fb4
  426f66:	adc    al,0x4
  426f68:	mov    bl,BYTE PTR ds:0x9a668b01
  426f6e:	out    dx,eax
  426f6f:	je     0x426f40
  426f71:	out    0xf5,eax
  426f73:	adc    eax,0x3aacea
  426f78:	jmp    DWORD PTR [ecx+0x55]
  426f7b:	add    DWORD PTR [esi-0x6538ce23],edx
  426f81:	lea    esp,[ecx+eax*1-0x54]
  426f85:	fmul   QWORD PTR [esi-0x1]
  426f88:	mov    edi,DWORD PTR [ebp+0x11]
  426f8b:	inc    eax
  426f8c:	push   esi
  426f8d:	and    al,0x7a
  426f8f:	pop    esp
  426f90:	inc    edi
  426f91:	fld    QWORD PTR [eax]
  426f93:	cmp    ecx,DWORD PTR [ecx]
  426f95:	rcl    DWORD PTR [ecx],1
  426f97:	push   eax
  426f98:	add    BYTE PTR [eax],al
  426f9a:	push   ecx
  426f9b:	or     eax,0xdd560155
  426fa0:	cmc    
  426fa1:	adc    eax,0x3ab282
  426fa6:	iret   
  426fa7:	pop    esp
  426fa8:	pop    ecx
  426fa9:	add    DWORD PTR [esi],edx
  426fab:	fnsave [ecx]
  426fad:	(bad)  
  426fae:	pop    edx
  426faf:	(bad)  
  426fb0:	mov    esi,0x4ee2dd45
  426fb5:	push   edi
  426fb6:	shl    DWORD PTR [esi-0x1da9ec2e],0x82
  426fbd:	inc    ebp
  426fbe:	int    0xf8
  426fc0:	push   esi
  426fc1:	leave  
  426fc2:	das    
  426fc3:	jne    0x426fce
  426fc5:	add    BYTE PTR [esp+edi*1-0x10],bl
  426fc9:	mov    ebx,0x5204f73f
  426fce:	mov    ah,0x26
  426fd0:	jbe    0x427014
  426fd2:	cmp    ecx,eax
  426fd4:	xchg   eax,eax
  426fd6:	pop    ebx
  426fd7:	mov    ah,0x2e
  426fd9:	sti    
  426fda:	fsubr  QWORD PTR [ebx]
  426fdc:	inc    ebx
  426fdd:	or     al,0xb4
  426fdf:	leave  
  426fe0:	les    ecx,FWORD PTR [esi]
  426fe2:	outs   dx,DWORD PTR ds:[esi]
  426fe3:	mov    bh,0x89
  426fe5:	sar    BYTE PTR [ebx],0xb4
  426fe8:	cs sti 
  426fea:	sub    BYTE PTR [ebx],0x43
  426fed:	add    al,0xac
  426fef:	push   ds
  426ff0:	mov    dh,BYTE PTR [eax+esi*1+0x47]
  426ff4:	mov    edx,DWORD PTR ds:0x3e85cf
  426ffa:	mov    ah,0x78
  426ffc:	repnz test BYTE PTR [eax],al
  426fff:	add    BYTE PTR [edi+0x52],ch
  427002:	dec    DWORD PTR [edi+0x78]
  427005:	out    0x75,eax
  427007:	inc    edx
  427008:	pop    ds
  427009:	inc    edx
  42700a:	lds    esi,FWORD PTR [eax+esi*1+0x47]
  42700e:	mov    edx,DWORD PTR ds:0x3e8487
  427014:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427015:	mov    eax,0xb3dbc089
  42701a:	cs sti 
  42701c:	pusha  
  42701d:	or     ah,BYTE PTR ss:[edi+ebx*1]
  427021:	mov    bh,0x12
  427023:	jns    0x426fc9
  427025:	cmp    BYTE PTR [esi],ah
  427027:	add    DWORD PTR [edi],ebp
  427029:	mov    bh,0x89
  42702b:	shl    BYTE PTR [ebx-0x2604d14e],0xd1
  427032:	add    eax,DWORD PTR [eax]
  427034:	das    
  427035:	jo     0x427030
  427037:	fstp   TBYTE PTR [edi]
  427039:	cmc    
  42703a:	add    al,0x87
  42703c:	mov    cl,0xde
  42703e:	inc    ebx
  42703f:	add    eax,0xc364de2f
  427044:	sbb    ebx,0x37
  427047:	(bad)  
  427048:	loopne 0x42709d
  42704a:	bound  esi,QWORD PTR [edi]
  42704c:	cs fsubrp st(7),st
  42704f:	mov    bh,ch
  427051:	xor    ah,bl
  427053:	xor    edx,esp
  427055:	ror    DWORD PTR [edi+0x5ede10f3],1
  42705b:	test   DWORD PTR [edi-0x23],ecx
  42705e:	out    0x3,eax
  427060:	stos   BYTE PTR es:[edi],al
  427061:	sahf   
  427062:	aam    0x2
  427064:	add    BYTE PTR [eax],al
  427066:	pop    edi
  427067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427068:	cmp    edi,DWORD PTR [edx-0x53]
  42706b:	pop    esi
  42706c:	jmp    0x28a39f74
  427071:	pop    ss
  427072:	inc    ecx
  427073:	xor    al,0xe8
  427075:	xor    edx,DWORD PTR [ecx+edx*8-0x21af0ee9]
  42707c:	in     al,dx
  42707d:	add    DWORD PTR [esi],ebp
  42707f:	fsubrp st(7),st
  427081:	pop    ss
  427082:	xor    DWORD PTR [eax+ebp*8],esi
  427085:	sbb    DWORD PTR [edi],ebp
  427087:	xor    al,0xf6
  427089:	mov    ?,WORD PTR [ebp+0x2f03e956]
  42708f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427090:	(bad)  [edi-0x7b17e1d0]
  427096:	ins    DWORD PTR es:[edi],dx
  427097:	sub    ch,cl
  427099:	add    ebp,DWORD PTR [edi]
  42709b:	mov    dh,0x96
  42709d:	jge    0x4270ce
  42709f:	fiadd  WORD PTR [edx+0x2e]
  4270a2:	fcomp  DWORD PTR [ebx+0x15b003e4]
  4270a8:	clc    
  4270a9:	dec    ecx
  4270aa:	scas   eax,DWORD PTR es:[edi]
  4270ab:	fsubrp st(7),st
  4270ad:	add    esi,DWORD PTR [ebx-0x50e8c363]
  4270b3:	sub    DWORD PTR [eax+ecx*1],eax
  4270b6:	das    
  4270b7:	or     eax,DWORD PTR [ecx]
  4270b9:	out    0x98,al
  4270bb:	addr16 push ebx
  4270bd:	scas   eax,DWORD PTR es:[edi]
  4270be:	(bad)  
  4270bf:	shl    BYTE PTR [edx-0x766ef267],cl
  4270c5:	std    
  4270c6:	cli    
  4270c7:	add    al,0x56
  4270c9:	aad    0x0
  4270cb:	add    BYTE PTR [eax+edi*1+0x2c4dcd56],cl
  4270d2:	cmp    eax,ebp
  4270d4:	dec    edi
  4270d5:	sub    al,0x1a
  4270d7:	mov    ebp,0x6d4a2b51
  4270dc:	pop    esp
  4270dd:	add    BYTE PTR [ecx],0xe9
  4270e0:	sub    al,0x31
  4270e2:	or     eax,0x1813c6d
  4270e7:	jmp    0x1a47a218
  4270ec:	jmp    0x4270ac
  4270ee:	jmp    DWORD PTR [ecx+0x6d]
  4270f1:	push   ebp
  4270f2:	inc    eax
  4270f3:	fcmovnb st,st(7)
  4270f5:	icebp  
  4270f6:	test   BYTE PTR [eax+0xd],bl
  4270f9:	fiadd  WORD PTR [eax]
  4270fb:	jmp    0x58c74b39
  427100:	push   cs
  427101:	fiadd  WORD PTR [eax]
  427103:	jmp    0x29705321
  427108:	xchg   esi,eax
  427109:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42710a:	xchg   DWORD PTR [ebx],ebp
  42710c:	repz sbb al,0x10
  42710f:	add    dl,BYTE PTR [edx+ebx*2-0x70]
  427113:	dec    ecx
  427114:	sub    ebx,esi
  427116:	add    BYTE PTR [eax+ebx*2+0x5a],dh
  42711a:	nop
  42711b:	dec    eax
  42711c:	sub    ebx,esi
  42711e:	add    BYTE PTR [eax+esi*1-0x9],dh
  427122:	rcl    dl,0x2e
  427125:	pop    edi
  427126:	mov    edi,0x2dcded71
  42712b:	test   eax,0x55000ca8
  427130:	add    BYTE PTR [eax],al
  427132:	sub    al,0x1e
  427134:	test   DWORD PTR [eax],eax
  427136:	inc    edi
  427137:	loopne 0x4271ad
  427139:	add    eax,DWORD PTR [ebp+0x3783fb69]
  42713f:	(bad)  
  427140:	je     0x427145
  427142:	xchg   ebp,eax
  427143:	imul   edx,DWORD PTR [ecx],0x6eaa4784
  427149:	add    eax,DWORD PTR [ebp+0x37840569]
  42714f:	mov    cl,0x6e
  427151:	add    edx,DWORD PTR [ebp+0x69]
  427154:	or     edx,eax
  427156:	shl    cl,cl
  427158:	push   ebx
  427159:	mov    ebp,DWORD PTR [edx+0x47f8e55e]
  42715f:	inc    ebp
  427160:	aad    0x0
  427162:	(bad)  
  427163:	loope  0x4271ae
  427165:	inc    ebx
  427167:	icebp  
  427168:	or     al,BYTE PTR [eax-0x3a]
  42716b:	icebp  
  42716c:	cmc    
  42716d:	adc    eax,0x3aac82
  427172:	adc    esp,DWORD PTR [ecx-0x1ae49a8b]
  427178:	and    al,0x4
  42717a:	mov    bh,0xc7
  42717c:	fs (bad) 
  42717e:	retf   0x72bd
  427181:	push   ecx
  427182:	ins    BYTE PTR es:[edi],dx
  427183:	fist   WORD PTR [eax-0x1]
  427186:	sbb    DWORD PTR [ecx],0x15
  427189:	inc    eax
  42718a:	xchg   BYTE PTR [ecx+eax*8+0x74],bl
  42718e:	retf   0x7d5e
  427191:	and    al,0x52
  427193:	jecxz  0x427208
  427195:	inc    ebp
  427196:	add    BYTE PTR [eax],al
  427198:	mov    esp,0x72448be1
  42719d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42719e:	dec    edx
  42719f:	push   0x292de7cb
  4271a4:	cs out 0x92,eax
  4271a7:	dec    BYTE PTR [ecx-0x3c]
  4271aa:	dec    esp
  4271ab:	lea    edx,[edx]
  4271ad:	mov    esi,0xfb2f8d06
  4271b2:	loopne 0x427227
  4271b4:	pop    ss
  4271b5:	mov    esp,0x3220fa74
  4271ba:	lds    esi,FWORD PTR [ebp+0x4e]
  4271bd:	(bad)  
  4271be:	dec    ecx
  4271bf:	push   0xe804f7f0
  4271c4:	mov    ds:0xabfb866f,eax
  4271c9:	jbe    0x4271dc
  4271cb:	or     DWORD PTR [ecx+esi*4-0x48932e32],ebp
  4271d2:	cli    
  4271d3:	out    0x36,al
  4271d5:	loope  0x4271db
  4271d7:	xchg   esp,ebp
  4271d9:	dec    esi
  4271da:	(bad)  
  4271db:	std    
  4271dc:	fsub   DWORD PTR [ebx]
  4271de:	sub    al,BYTE PTR [edi-0x413e3636]
  4271e4:	xor    esi,DWORD PTR [edi+0x2fec014e]
  4271ea:	inc    ecx
  4271eb:	and    al,0x33
  4271ed:	cld    
  4271ee:	add    cl,ah
  4271f0:	mov    ds:0xfe86fe76,eax
  4271f5:	mov    ds:0x2e4b50db,al
  4271fa:	cmc    
  4271fb:	xchg   BYTE PTR [eax],al
  4271fd:	add    dh,bh
  4271ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427200:	fist   DWORD PTR [eax+0x47]
  427203:	ds xor eax,0x3135b404
  427209:	add    DWORD PTR [edi],ebp
  42720b:	mov    bh,0xc4
  42720d:	add    al,0x2f
  42720f:	push   0x7b
  427211:	in     al,dx
  427212:	lods   al,BYTE PTR ds:[esi]
  427213:	fisubr DWORD PTR [edi+eax*4]
  427216:	outs   dx,BYTE PTR ds:[esi]
  427217:	add    DWORD PTR [eax],edi
  427219:	lods   al,BYTE PTR ds:[esi]
  42721a:	aad    0x86
  42721c:	jge    0x42726b
  42721e:	pop    ebx
  42721f:	xor    DWORD PTR ds:0x3839fd24,esi
  427225:	in     al,dx
  427226:	fidivr WORD PTR ds:0xdd57e840
  42722c:	in     eax,dx
  42722d:	je     0x427264
  42722f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427230:	dec    esi
  427231:	push   es
  427232:	loope  0x4271d8
  427234:	cwde   
  427235:	das    
  427236:	cs fsubrp st(7),st
  427239:	mov    bh,BYTE PTR [edx]
  42723b:	retf   0x43db
  42723e:	das    
  42723f:	cmp    al,ch
  427241:	mov    bh,BYTE PTR [edx]
  427243:	xor    bl,ah
  427245:	inc    ebx
  427246:	das    
  427247:	pop    ecx
  427248:	test   al,0xf
  42724a:	sub    DWORD PTR [esi],ecx
  42724c:	jne    0x42728e
  42724e:	pop    es
  42724f:	seto   BYTE PTR [edi+0x7d]
  427253:	fsubrp st(7),st
  427255:	mov    esp,0x7f330ca8
  42725a:	ficom  WORD PTR [edi+0x2a]
  42725d:	hlt    
  42725e:	aad    0x6e
  427260:	in     al,0x4
  427262:	add    BYTE PTR [eax],al
  427264:	das    
  427265:	ficomp WORD PTR [esi+0x7b]
  427268:	das    
  427269:	fucom  st(7)
  42726b:	add    ebx,DWORD PTR [esi+0x38]
  42726e:	int3   
  42726f:	jle    0x427232
  427271:	out    dx,eax
  427272:	xor    eax,0xda75c72c
  427277:	add    ebp,DWORD PTR [edi]
  427279:	pop    ecx
  42727a:	sub    BYTE PTR [edi],cl
  42727c:	xor    esp,DWORD PTR [ebx+0xe24dfbc]
  427282:	outs   dx,DWORD PTR ds:[esi]
  427283:	ret    0x7f87
  427286:	mov    DWORD PTR gs:[ebx+eax*1-0x21d43a76],eax
  42728e:	and    cl,BYTE PTR [edi]
  427290:	push   ebx
  427291:	shr    BYTE PTR [esi-0x3c],cl
  427294:	je     0x4272c0
  427296:	int3   
  427297:	mul    DWORD PTR [ebp+0x2a]
  42729a:	(bad)  
  42729b:	div    edx
  42729d:	mov    ch,0xac
  42729f:	pop    eax
  4272a0:	push   esp
  4272a1:	mov    ds:0xa50f726,eax
  4272a6:	add    DWORD PTR [edx-0x60],esp
  4272a9:	and    esp,ebp
  4272ab:	icebp  
  4272ac:	ret    0xd18
  4272af:	push   0xffffff97
  4272b1:	ret    0x374d
  4272b4:	(bad)  
  4272b5:	and    bh,cl
  4272b7:	aam    0x26
  4272b9:	pop    edi
  4272ba:	outs   dx,BYTE PTR ds:[esi]
  4272bb:	call   0x6f4c50ec
  4272c0:	out    0xdd,eax
  4272c2:	add    cl,ch
  4272c4:	stos   DWORD PTR es:[edi],eax
  4272c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4272c6:	cli    
  4272c7:	out    0x0,al
  4272c9:	add    BYTE PTR [edi+0x2ce8fff2],ch
  4272cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4272d0:	je     0x4272c3
  4272d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4272d3:	enter  0xf438,0x6c
  4272d7:	fiadd  WORD PTR [ebp+0xaa76891]
  4272dd:	gs or  ch,bl
  4272e0:	add    cl,ch
  4272e2:	mov    bl,0x11
  4272e4:	and    eax,0xfa0ea7d5
  4272e9:	fadd   QWORD PTR [eax]
  4272eb:	retf   0xe940
  4272ee:	fisttp DWORD PTR [ebx-0x2d275278]
  4272f4:	mov    edx,0xfaa2b0e9
  4272f9:	ins    BYTE PTR es:[edi],dx
  4272fa:	jae    0x427323
  4272fc:	and    eax,0xfa0f5bb7
  427301:	fcom   QWORD PTR [eax-0x36]
  427304:	inc    eax
  427305:	jmp    0xd9bb111a
  42730a:	adc    edx,DWORD PTR ds:[edx+0x2e]
  42730e:	xor    dh,dl
  427310:	stc    
  427311:	cld    
  427312:	in     al,dx
  427313:	leave  
  427314:	inc    eax
  427315:	jmp    0xfd67750f
  42731a:	repz jmp 0xdd:0x265cc55c
  427322:	out    0xd1,eax
  427324:	aad    0x43
  427326:	inc    esi
  427327:	push   ebp
  427328:	mov    cl,0x4
  42732a:	push   edi
  42732b:	fiadd  WORD PTR [eax]
  42732d:	inc    DWORD PTR [eax]
  42732f:	add    BYTE PTR [esi],al
  427331:	(bad)  
  427333:	inc    DWORD PTR [esi-0x13]
  427336:	cmc    
  427337:	jne    0x427377
  427339:	push   ebp
  42733a:	adc    al,0x34
  42733c:	sub    ebx,DWORD PTR [esi]
  42733e:	add    DWORD PTR [ebx-0xda522],ecx
  427344:	and    DWORD PTR [edx],esp
  427346:	stc    
  427347:	add    BYTE PTR [esi],al
  427349:	fimul  WORD PTR [esi+0x53]
  42734c:	sub    DWORD PTR [edi+0x14],edx
  42734f:	pop    esp
  427350:	ficomp DWORD PTR ds:0xbe4a8901
  427356:	or     bh,BYTE PTR [ecx]
  427358:	xor    bh,BYTE PTR [esi+0x56d8740e]
  42735e:	adc    al,0x88
  427360:	ficomp DWORD PTR ds:0xa1466801
  427366:	cli    
  427367:	push   DWORD PTR ds:0xce75f5ef
  42736d:	push   esi
  42736e:	adc    al,0x40
  427370:	ficomp DWORD PTR ds:0xa9d38301
  427376:	clc    
  427377:	cmovp  esp,DWORD PTR [eax+0x1]
  42737b:	add    BYTE PTR [esi-0x59dbbab1],dl
  427381:	fiadd  DWORD PTR ds:0xddac85
  427387:	add    BYTE PTR [eax-0x1f],bl
  42738a:	and    al,0x10
  42738c:	rol    WORD PTR [ebx+0x53],1
  427390:	cdq    
  427391:	push   esi
  427392:	adc    al,0x24
  427394:	add    BYTE PTR [eax],al
  427396:	jnp    0x4273b5
  427398:	add    DWORD PTR [ebx+0xfef2016],ecx
  42739e:	das    
  42739f:	xor    ebx,DWORD PTR [edi+0x0]
  4273a2:	das    
  4273a3:	mov    bh,0x73
  4273a5:	inc    esp
  4273a6:	adc    edi,DWORD PTR [edi-0x6007b0d2]
  4273ac:	or     al,0x8
  4273ae:	dec    eax
  4273af:	cmp    BYTE PTR [esi],0x15
  4273b2:	out    dx,eax
  4273b3:	mov    dh,0x7b
  4273b5:	shr    BYTE PTR [eax],0x33
  4273b8:	jl     0x4273ba
  4273ba:	das    
  4273bb:	mov    bh,0x18
  4273bd:	add    BYTE PTR [eax],ch
  4273bf:	add    bh,ch
  4273c1:	cli    
  4273c2:	fcmovnu st,st(0)
  4273c5:	cli    
  4273c6:	mov    ds:0x2f67e0d3,eax
  4273cb:	test   DWORD PTR [eax+eax*1],0x67f06861
  4273d2:	sbb    esi,edi
  4273d4:	add    al,0xe7
  4273d6:	mov    DWORD PTR [eax+0x41],eax
  4273d9:	and    al,0x1f
  4273db:	mov    bh,0xf6
  4273dd:	(bad)  
  4273de:	call   0xef7174a5
  4273e3:	pop    ebx
  4273e4:	clc    
  4273e5:	dec    esi
  4273e6:	sbb    BYTE PTR [eax-0x10],0x9b
  4273ea:	cmp    esi,edi
  4273ec:	add    al,0x7f
  4273ee:	(bad)  
  4273ef:	daa    
  4273f0:	adc    DWORD PTR [edi+0x55],ecx
  4273f3:	mov    bh,0xf3
  4273f5:	mov    dl,0xef
  4273f7:	pushw  ss
  4273f9:	adc    DWORD PTR [eax],eax
  4273fb:	add    BYTE PTR [esi],ch
  4273fd:	mov    bh,0xfe
  4273ff:	cli    
  427400:	and    bh,BYTE PTR [edi-0x5564ea7d]
  427406:	add    BYTE PTR ds:[ecx+ebx*8-0xa804d0f],al
  42740e:	pushf  
  42740f:	adc    BYTE PTR [esi+0x301bda72],dh
  427415:	sub    ah,al
  427417:	data16 das 
  427419:	fisub  WORD PTR [edx]
  42741b:	adc    DWORD PTR [edi],esp
  42741d:	push   edi
  42741e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42741f:	fist   WORD PTR [eax]
  427421:	lahf   
  427422:	add    esp,esi
  427424:	enter  0x2b35,0x43
  427428:	das    
  427429:	push   ebx
  42742a:	lods   al,BYTE PTR ds:[esi]
  42742b:	fisttp WORD PTR [edi+edx*2]
  42742e:	xchg   esp,eax
  42742f:	fisttp WORD PTR [edi+edx*2]
  427432:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427433:	fist   WORD PTR [eax]
  427435:	mov    dh,0x43
  427437:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427438:	xor    al,0xa0
  42743a:	iret   
  42743b:	div    DWORD PTR ds:0x68a75fea
  427441:	(bad)  
  427443:	lock inc eax
  427445:	leave  
  427446:	daa    
  427447:	add    al,0x14
  427449:	jmp    0xf0ba:0xde50a73b
  427450:	hlt    
  427451:	int3   
  427452:	daa    
  427453:	add    al,0x64
  427455:	add    bh,dh
  427457:	ret    
  427458:	pusha  
  427459:	push   ebx
  42745a:	lea    ebp,[eax]
  42745c:	mov    cl,0xd6
  42745e:	out    0x30,eax
  427460:	add    BYTE PTR [eax],al
  427462:	mov    al,0xb2
  427464:	addr16 xchg edi,eax
  427466:	dec    ebx
  427467:	test   al,0xe5
  427469:	sar    esi,cl
  42746b:	sbb    ebp,eax
  42746d:	call   FWORD PTR [eax+esi*8-0x71]
  427471:	mul    BYTE PTR [edi-0x10808c60]
  427477:	sub    al,ch
  427479:	sbb    DWORD PTR [edi],ebp
  42747b:	push   ecx
  42747c:	lods   eax,DWORD PTR ds:[esi]
  42747d:	addr16 pop edi
  42747f:	ss ins DWORD PTR es:[edi],dx
  427481:	cmp    al,0x5c
  427483:	cmc    
  427484:	aas    
  427485:	add    eax,0x864ba0bc
  42748a:	and    cl,dh
  42748c:	je     0x4274ce
  42748e:	mov    bl,0x9f
  427490:	mov    ch,0xf7
  427492:	test   DWORD PTR [ecx],ebp
  427494:	add    ecx,esp
  427496:	cmp    al,0xa3
  427498:	adc    al,0x25
  42749a:	mov    bh,bl
  42749c:	add    BYTE PTR [edx],dl
  42749e:	jns    0x427444
  4274a0:	je     0x42749b
  4274a2:	mov    cl,0x29
  4274a4:	or     eax,0xf9d63f16
  4274a9:	hlt    
  4274aa:	jl     0x427476
  4274ac:	inc    eax
  4274ad:	jmp    0xe94fd545
  4274b2:	mov    edx,0xed1f30d9
  4274b7:	fld    QWORD PTR [esi*2-0x7e3b48bf]
  4274be:	test   eax,0x3fa985a3
  4274c3:	fsubr  QWORD PTR ds:0x6b0000a9
  4274c9:	pusha  
  4274ca:	add    eax,0x50f8b3e9
  4274cf:	(bad)  [esi+ebx*8+0x53]
  4274d3:	jb     0x42747c
  4274d5:	stos   DWORD PTR es:[edi],eax
  4274d6:	add    al,0xf9
  4274d8:	rcr    dh,cl
  4274da:	add    ch,ah
  4274dc:	dec    edx
  4274dd:	push   edi
  4274de:	je     0x4274d5
  4274e0:	and    ch,bh
  4274e2:	call   0xfae6d030
  4274e7:	ins    DWORD PTR es:[edi],dx
  4274e8:	jmp    0x427513
  4274ea:	sbb    edx,edx
  4274ec:	jmp    0x2b6d4f1f
  4274f1:	sub    DWORD PTR [ecx],edx
  4274f3:	jle    0x42752d
  4274f5:	into   
  4274f6:	test   DWORD PTR [edi+edi*4],esp
  4274f9:	mov    ds:0x6894e174,eax
  4274fe:	cld    
  4274ff:	data16 stos BYTE PTR es:[edi],al
  427501:	mov    dh,0x11
  427503:	pop    esi
  427504:	cmp    dl,cl
  427506:	stc    
  427507:	fcomp  QWORD PTR [esp+ecx*1-0x5c6b2b06]
  42750e:	adc    al,0x0
  427510:	(bad)  
  427511:	lods   al,BYTE PTR ds:[esi]
  427512:	cmp    al,BYTE PTR [eax]
  427514:	test   al,0xf7
  427516:	mov    edx,0x81ef9610
  42751b:	in     al,dx
  42751c:	inc    eax
  42751d:	lahf   
  42751e:	sub    dl,dh
  427520:	(bad)
  427523:	push   esi
  427524:	(bad)  
  427526:	or     al,0x74
  427528:	ja     0x42756c
  42752a:	push   ebx
  42752b:	cwde   
  42752c:	add    BYTE PTR [eax],al
  42752e:	sub    BYTE PTR [ecx-0x7b],bl
  427531:	rcl    dl,0xb2
  427534:	xor    esi,DWORD PTR ds:0x3a79c6
  42753a:	ret    
  42753b:	stos   BYTE PTR es:[edi],al
  42753c:	div    DWORD PTR [ebp+0x56]
  42753f:	and    eax,0xcf49144c
  427544:	or     al,ch
  427546:	jns    0x4275ad
  427548:	idiv   bh
  42754a:	in     eax,dx
  42754b:	xchg   ecx,eax
  42754c:	div    DWORD PTR [ebp+0x22]
  42754f:	arpl   WORD PTR [eax+edx*1+0x30],si
  427553:	arpl   WORD PTR [eax+ecx*1-0x37],si
  427557:	mov    WORD PTR [edx+0x14],ss
  42755a:	push   esi
  42755b:	loop   0x4275b3
  42755d:	pop    ebp
  42755e:	les    edx,FWORD PTR [ecx+0x757d54fa]
  427564:	out    dx,eax
  427565:	add    eax,0x3a4c06
  42756a:	ror    bl,cl
  42756c:	xor    DWORD PTR [ebp-0x6],0xf2e81fed
  427573:	or     edi,esi
  427575:	call   DWORD PTR [edx-0x5f]
  427578:	jne    0x427592
  42757a:	jge    0x427528
  42757c:	push   0xffffffdf
  42757e:	add    eax,0x491073e2
  427583:	in     al,dx
  427584:	adc    BYTE PTR [ebx+0x75f78ddb],cl
  42758a:	das    
  42758b:	jg     0x427523
  42758d:	sub    DWORD PTR [edx+0xe7852c],ebx
  427593:	add    BYTE PTR [edi],bh
  427595:	and    al,0xb
  427597:	adc    al,0x88
  427599:	push   edx
  42759a:	out    dx,al
  42759b:	push   ecx
  42759c:	sbb    BYTE PTR [edx-0xa],0xfa
  4275a0:	and    bl,bh
  4275a2:	jmp    0x23e7a4e6
  4275a7:	mov    esi,0x872b873f
  4275ac:	push   ebx
  4275ad:	std    
  4275ae:	cli    
  4275af:	das    
  4275b0:	or     DWORD PTR [eax-0x2],0xb0ff903
  4275b7:	or     al,0xc3
  4275b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4275ba:	xchg   esi,eax
  4275bb:	retf   0x9598
  4275be:	jle    0x427544
  4275c0:	outs   dx,DWORD PTR ds:[esi]
  4275c1:	adc    esp,esi
  4275c3:	ss cli 
  4275c5:	ss pop esi
  4275c7:	aas    
  4275c8:	das    
  4275c9:	xor    dl,BYTE PTR ds:0x8b979afb
  4275cf:	dec    ebp
  4275d0:	inc    ebx
  4275d1:	lods   al,BYTE PTR ds:[esi]
  4275d2:	clc    
  4275d3:	pop    es
  4275d4:	pop    es
  4275d5:	test   al,0x81
  4275d7:	sti    
  4275d8:	or     BYTE PTR [eax-0x448504eb],dh
  4275de:	jg     0x427655
  4275e0:	pop    ds
  4275e1:	cmc    
  4275e2:	jge    0x427659
  4275e4:	daa    
  4275e5:	inc    esp
  4275e6:	sbb    BYTE PTR [eax+0x43],cl
  4275e9:	mov    DWORD PTR [edx+ebx*2],0x154982
  4275f0:	add    BYTE PTR [eax],0x71
  4275f3:	repnz sub dl,BYTE PTR [edi+0x58]
  4275f7:	aas    
  4275f8:	add    BYTE PTR [eax],al
  4275fa:	das    
  4275fb:	sbb    eax,0xffffff86
  4275fe:	cmp    dh,BYTE PTR [edi-0x138df0e]
  427604:	xchg   ebp,eax
  427605:	cli    
  427606:	mov    al,0xdd
  427608:	imul   eax,DWORD PTR [ebx+eiz*1-0xa],0x1e
  42760d:	cmp    DWORD PTR [edi],ebx
  42760f:	mov    ebp,0xee2203a7
  427614:	dec    edx
  427615:	stc    
  427616:	cmp    al,0x69
  427618:	mov    ch,0x1b
  42761a:	test   BYTE PTR [edx],dl
  42761c:	lock imul esp,DWORD PTR [edx-0x6f7ccc67],0xfffffff0
  427624:	sub    bh,cl
  427626:	sbb    BYTE PTR [ebp-0x6302e863],bl
  42762c:	xchg   ebp,eax
  42762d:	pcmpgtb mm2,QWORD PTR [edx]
  427630:	loopne 0x4275b4
  427632:	inc    edx
  427633:	retf   0xc3f3
  427636:	push   eax
  427637:	cmp    ah,BYTE PTR [ebp-0x6b21dcbb]
  42763d:	mov    ss,WORD PTR [ebx-0x6d]
  427640:	in     eax,dx
  427641:	xor    ebx,DWORD PTR [ebp+0x20]
  427644:	call   0x5dab5350
  427649:	adc    al,0xa3
  42764b:	mov    ebp,0x9cbc42cf
  427650:	rol    DWORD PTR [edi+0x3ef012ef],cl
  427656:	pop    edx
  427657:	push   cs
  427658:	mov    ds:0xd81308c6,eax
  42765d:	add    BYTE PTR [eax],0x0
  427660:	jp     0x427654
  427662:	pop    esi
  427663:	shl    BYTE PTR [eax],1
  427665:	fwait
  427666:	xor    eax,0xa433070c
  42766b:	and    ah,0x87
  42766e:	test   DWORD PTR [edx-0x76d09a6],0xf88b343c
  427678:	and    al,0x9b
  42767a:	std    
  42767b:	or     eax,esp
  42767d:	icebp  
  42767e:	retf   
  42767f:	sbb    BYTE PTR [edi-0x22],ch
  427682:	add    BYTE PTR [edi],dl
  427684:	into   
  427685:	pop    ecx
  427686:	adc    eax,0xed64d7e9
  42768b:	pop    edi
  42768c:	aaa    
  42768d:	into   
  42768e:	shr    BYTE PTR [edx+0x6252e22c],cl
  427694:	xchg   edi,eax
  427695:	out    0x74,eax
  427697:	or     BYTE PTR [ebx],al
  427699:	nop
  42769a:	xchg   ebx,eax
  42769b:	inc    edi
  42769c:	lods   eax,DWORD PTR ds:[esi]
  42769d:	vpsrlq ymm6{k4},ymm1,XMMWORD PTR [ebx]
  4276a3:	mov    ecx,0xb400db0d
  4276a8:	sbb    al,0x97
  4276aa:	je     0x4276a5
  4276ac:	mov    ecx,0x671e1529
  4276b1:	jecxz  0x42769b
  4276b3:	loop   0x42768d
  4276b5:	xchg   esi,eax
  4276b6:	cli    
  4276b7:	add    bh,BYTE PTR [edi+edx*4]
  4276ba:	je     0x427699
  4276bc:	lods   eax,DWORD PTR ds:[esi]
  4276bd:	adc    DWORD PTR [ecx],edx
  4276bf:	xchg   edi,eax
  4276c0:	lods   eax,DWORD PTR ds:[esi]
  4276c1:	adc    DWORD PTR [ecx],ecx
  4276c3:	test   BYTE PTR [eax],0x0
  4276c6:	and    BYTE PTR [edx],dh
  4276c8:	adc    eax,0x5c382ca9
  4276cd:	stos   DWORD PTR es:[edi],eax
  4276ce:	inc    ebx
  4276cf:	ficom  WORD PTR [ebx+0x72]
  4276d2:	lahf   
  4276d3:	nop
  4276d4:	add    al,0x19
  4276d6:	jne    0x4276b3
  4276d8:	add    ch,ah
  4276da:	mul    BYTE PTR [ebx+0x74]
  4276dd:	cmc    
  4276de:	add    BYTE PTR [esi-0x685a8618],bh
  4276e4:	cli    
  4276e5:	ins    DWORD PTR es:[edi],dx
  4276e6:	jae    0x4276fa
  4276e8:	sbb    edx,esi
  4276ea:	cmp    DWORD PTR [esi],ecx
  4276ec:	fisubr DWORD PTR [edx]
  4276ee:	xor    edx,DWORD PTR [ecx]
  4276f0:	adc    DWORD PTR [esi+0x2485ead8],ebx
  4276f6:	aaa    
  4276f7:	xchg   edi,eax
  4276f8:	je     0x4276db
  4276fa:	inc    esp
  4276fb:	mov    eax,ds:0x5cb100f6
  427700:	loop   0x427712
  427702:	inc    ecx
  427703:	xchg   ebx,eax
  427704:	push   cs
  427705:	(bad)  
  427706:	mov    ebx,0xbbff4eee
  42770b:	out    0xf5,al
  42770d:	adc    eax,0x40f2da
  427712:	loopne 0x4276cf
  427714:	mov    esp,0x83b38610
  427719:	in     al,dx
  42771a:	clc    
  42771b:	loop   0x42774d
  42771d:	(bad)  
  42771e:	aad    0xde
  427720:	add    al,0x56
  427722:	std    
  427723:	xchg   edx,eax
  427724:	or     dh,BYTE PTR [edi+eiz*1+0xa]
  427728:	arpl   WORD PTR [esi+0x5d400000],dx
  42772e:	test   eax,eax
  427730:	retf   0x31f6
  427733:	xor    eax,0x39fdc6
  427738:	mov    ebx,0x5a75f5ee
  42773d:	imul   ecx,DWORD PTR [eax+ebx*1+0x31],0xc1e80693
  427745:	sbb    esi,esi
  427747:	jmp    FWORD PTR ds:0x5e75f5f1
  42774d:	pop    ebp
  42774e:	je     0x427764
  427750:	push   0x10c745f
  427755:	xchg   ecx,eax
  427756:	add    bh,bh
  427758:	sbb    ecx,esi
  42775a:	adc    al,0x40
  42775c:	push   es
  42775d:	sbb    BYTE PTR [ebp-0x3e],0xea
  427761:	fst    QWORD PTR [ebx-0x75]
  427764:	repnz pop ss
  427766:	add    al,0x30
  427768:	cwde   
  427769:	mov    ds:0x6b1803fa,al
  42776e:	je     0x427780
  427770:	dec    edx
  427771:	mov    ebp,0x5f5821e8
  427776:	test   BYTE PTR [edi+ebp*1+0x1417f247],0xb2
  42777e:	out    dx,al
  42777f:	fisubr DWORD PTR [edi+eax*4-0xd]
  427783:	xadd   BYTE PTR [edx-0x509578ee],dl
  42778a:	xor    DWORD PTR [ebp+0x23],0xf7385f
  427791:	add    BYTE PTR [eax-0x5ff09300],ch
  427797:	mov    dl,0x16
  427799:	sti    
  42779a:	and    bl,BYTE PTR [ebx-0x44e50528]
  4277a0:	xor    DWORD PTR [ebp+0x37],0x1b381320
  4277a7:	inc    edi
  4277a8:	(bad)  
  4277a9:	pop    ecx
  4277aa:	fcmovb st,st(4)
  4277ac:	adc    DWORD PTR [eax],eax
  4277ae:	xor    al,0x82
  4277b0:	pxor   xmm0,XMMWORD PTR [esi-0x5358fe0d]
  4277b8:	leave  
  4277b9:	cmp    eax,0x53cc42f
  4277be:	not    DWORD PTR [edx-0x773c0042]
  4277c4:	mov    dh,0x71
  4277c6:	call   0xf501760f
  4277cb:	mov    edx,edx
  4277cd:	adc    ebp,edi
  4277cf:	xchg   bl,dh
  4277d1:	add    edi,esp
  4277d3:	pop    ecx
  4277d4:	int    0x3d
  4277d6:	das    
  4277d7:	inc    esp
  4277d8:	es add eax,0xffbe9b73
  4277de:	sbb    DWORD PTR [edi+0x16],ecx
  4277e1:	rol    BYTE PTR [eax],0x77
  4277e4:	sub    BYTE PTR [edi],dl
  4277e6:	jbe    0x4277ad
  4277e8:	add    al,0xbf
  4277ea:	(bad)  
  4277eb:	cld    
  4277ec:	jo     0x42786d
  4277ee:	add    ebx,edi
  4277f0:	jb     0x4277f7
  4277f2:	pop    ds
  4277f3:	fidivr WORD PTR [ecx-0x1fffff3d]
  4277f9:	fdiv   QWORD PTR [ecx]
  4277fb:	mov    esp,DWORD PTR [edx-0x1a]
  4277fe:	sbb    ebp,DWORD PTR [esi]
  427800:	(bad)  
  427801:	jbe    0x427878
  427803:	jle    0x4277c9
  427805:	popa   
  427806:	test   al,0xf8
  427808:	or     esp,DWORD PTR [ebx+0x72]
  42780b:	clc    
  42780c:	pcmpgtw mm5,QWORD PTR [edx]
  42780f:	or     bh,al
  427811:	jns    0x42787e
  427813:	jg     0x4277b9
  427815:	bound  ebp,QWORD PTR [eax]
  427817:	clc    
  427818:	cmp    eax,DWORD PTR [eax+edx*1]
  42781b:	(bad)  
  42781c:	stos   DWORD PTR es:[edi],eax
  42781d:	sub    dh,BYTE PTR [eax]
  42781f:	aad    0x88
  427821:	fcomp  DWORD PTR [esi+0x7e]
  427824:	test   BYTE PTR [esi-0x53],ah
  427827:	pop    edi
  427828:	mov    dl,0x22
  42782a:	and    ah,dl
  42782c:	xchg   ecx,eax
  42782d:	ficomp WORD PTR [ecx-0x2c25e582]
  427833:	ret    
  427834:	push   0x2b42313a
  427839:	fidiv  WORD PTR [edx+ecx*4+0x2c045c4b]
  427840:	pop    ebp
  427841:	loop   0x42781a
  427843:	push   ebp
  427844:	or     dh,bl
  427846:	jmp    0x42781d
  427848:	test   eax,0x6f7f012
  42784d:	xchg   BYTE PTR [eax+ebx*4+0x44649835],ah
  427854:	mov    ds:0x9b756cc1,eax
  427859:	mov    ebp,0xc56e
  42785e:	sub    al,0x86
  427860:	and    edi,DWORD PTR [edi+0x14]
  427863:	cwde   
  427864:	gs inc ebx
  427866:	xor    ecx,0x4d
  427869:	sub    al,0x5d
  42786b:	imul   ebp,DWORD PTR ds:0x1865e5c,0xfa94a6bb
  427875:	pusha  
  427876:	div    DWORD PTR [ebx+0x2e832c8c]
  42787c:	out    0xe8,al
  42787e:	add    dl,BYTE PTR [ebp+0x1e38c114]
  427884:	add    DWORD PTR [edi],ebp
  427886:	jp     0x4278e0
  427888:	add    eax,0xed60e7e9
  42788d:	push   0x48
  42788f:	into   
  427890:	repnz in al,dx
  427892:	cld    
  427893:	stos   DWORD PTR es:[edi],eax
  427894:	ds jmp 0xdcc8a4ca
  42789a:	xor    al,0x12
  42789c:	cs push ecx
  42789e:	sbb    DWORD PTR [edx-0x5],esi
  4278a1:	push   esi
  4278a2:	test   al,0x9e
  4278a4:	jne    0x4278a9
  4278a6:	mov    dh,0x8c
  4278a8:	jne    0x4278b9
  4278aa:	lods   al,BYTE PTR ds:[esi]
  4278ab:	aam    0x30
  4278ad:	mov    ah,0x53
  4278af:	pop    edi
  4278b0:	inc    ebx
  4278b1:	loope  0x4278b7
  4278b3:	cdq    
  4278b4:	sti    
  4278b5:	cs jmp 0x47e03a1b
  4278bb:	add    BYTE PTR [ecx],dh
  4278bd:	mov    bh,0xbf
  4278bf:	sub    ecx,edx
  4278c1:	mov    eax,0x3dc40000
  4278c6:	xchg   DWORD PTR [edi],ecx
  4278c8:	leave  
  4278c9:	fs inc esp
  4278cb:	and    DWORD PTR [edi-0x3a662edf],ebx
  4278d1:	fcom   QWORD PTR [edx-0xa]
  4278d4:	sbb    dl,bl
  4278d6:	adc    ebp,DWORD PTR [ecx-0x5437cbd4]
  4278dc:	aaa    
  4278dd:	ficom  WORD PTR [ebx+0x72]
  4278e0:	lahf   
  4278e1:	pop    ss
  4278e2:	in     eax,dx
  4278e3:	sbb    DWORD PTR [ecx-0x1148cf1f],ebx
  4278e9:	xchg   esi,eax
  4278ea:	(bad)  
  4278eb:	jmp    DWORD PTR [eax]
  4278ed:	gs je  0x4278f8
  4278f0:	inc    edx
  4278f1:	int    0xe8
  4278f3:	lods   eax,DWORD PTR ds:[esi]
  4278f4:	push   edx
  4278f5:	sbb    dh,dh
  4278f7:	test   BYTE PTR [esi-0x3f7adb6b],dl
  4278fd:	xchg   ebp,eax
  4278fe:	and    BYTE PTR [ebx+0x2173caf8],al
  427904:	dec    ebp
  427905:	mov    al,ds:0x186de802
  42790a:	idiv   bh
  42790c:	push   ebx
  42790d:	and    dh,BYTE PTR [ebp+0x15]
  427910:	sbb    al,0xd2
  427912:	dec    esi
  427913:	lea    ecx,[ebx]
  427915:	xor    dl,BYTE PTR [eax-0x18]
  427918:	dec    eax
  427919:	fs idiv edi
  42791c:	pop    ds
  42791d:	lahf   
  42791e:	ror    BYTE PTR [ebp-0x14aed52d],cl
  427924:	xchg   DWORD PTR [eax+0x15f7],esi
  42792a:	add    dh,dh
  42792c:	inc    eax
  42792d:	add    al,cl
  42792f:	and    edi,DWORD PTR [ebx-0x7c5079fc]
  427935:	in     al,dx
  427936:	pop    es
  427937:	push   cs
  427938:	and    eax,0x4eda5602
  42793d:	lea    eax,[ebx]
  42793f:	add    bh,ah
  427941:	(bad)  
  427942:	cmp    DWORD PTR [edx],ecx
  427944:	or     BYTE PTR [eax],dl
  427946:	inc    esi
  427947:	fimul  DWORD PTR [ebx-0x9e8cd7b]
  42794d:	jmp    DWORD PTR [esi-0x7e009a7c]
  427953:	add    bh,BYTE PTR [edi-0x7b25b952]
  427959:	rcr    BYTE PTR [edi+0x4],0x0
  42795d:	add    BYTE PTR [esi],dl
  42795f:	addr16 mov edi,0x11c1d75
  427965:	add    BYTE PTR [edi],ch
  427967:	mov    ebp,0x44fa0674
  42796d:	out    0x6b,eax
  42796f:	inc    ebp
  427970:	(bad)  
  427971:	jmp    FWORD PTR [edi-0x32]
  427974:	icebp  
  427975:	clc    
  427976:	pop    es
  427977:	sbb    DWORD PTR ds:[eax],eax
  42797a:	das    
  42797b:	and    DWORD PTR [ecx],ebx
  42797d:	call   0x475a6a
  427982:	jg     0x427975
  427984:	loop   0x427980
  427986:	sbb    BYTE PTR [edi+0x11],bl
  427989:	stos   BYTE PTR es:[edi],al
  42798a:	das    
  42798b:	xchg   DWORD PTR [edx+0x3b0000c0],eax
  427991:	inc    eax
  427992:	mov    eax,DWORD PTR [ebp-0x1d]
  427995:	imul   DWORD PTR [ebp+eax*2-0x73]
  427999:	or     eax,0x82ac627d
  42799e:	push   edx
  42799f:	add    BYTE PTR [ebx],bl
  4279a1:	xchg   esi,eax
  4279a2:	mov    eax,DWORD PTR [ebp-0x7d]
  4279a5:	push   edi
  4279a6:	call   0x6d370a0d
  4279ab:	outs   dx,BYTE PTR ds:[esi]
  4279ac:	fld    DWORD PTR [edi+0x536f83fe]
  4279b2:	mov    eax,0x47752eb0
  4279b7:	mov    edi,0x8169ffda
  4279bc:	pop    ebx
  4279bd:	pop    ds
  4279be:	(bad)  
  4279bf:	jmp    FWORD PTR [edi]
  4279c1:	push   ebp
  4279c2:	jge    0x4279d9
  4279c4:	mov    ds:0xa5ffbe99,eax
  4279c9:	test   DWORD PTR [edx+0x45574345],0xfe8f3b45
  4279d3:	jmp    FWORD PTR [edi]
  4279d5:	xchg   esp,eax
  4279d6:	adc    al,0x90
  4279d8:	sbb    eax,DWORD PTR [edi-0x2]
  4279db:	test   bh,ch
  4279dd:	or     al,BYTE PTR [ebx]
  4279df:	xchg   ecx,ebp
  4279e1:	fisttp QWORD PTR [esi]
  4279e3:	shl    DWORD PTR [eax],0x67
  4279e6:	and    eax,0xcd1aa67c
  4279eb:	mov    DWORD PTR [edx-0x52],esi
  4279ee:	cmp    BYTE PTR [edx+0x6a],al
  4279f1:	jle    0x4279dc
  4279f3:	mov    WORD PTR [eax],es
  4279f5:	add    BYTE PTR [edx+0x7f11bb7f],al
  4279fb:	out    dx,eax
  4279fc:	daa    
  4279fd:	add    al,0xba
  4279ff:	sbb    bl,BYTE PTR [eax+0x4823c8d4]
  427a05:	jnp    0x4279db
  427a07:	and    ax,0xa26d
  427a0b:	pop    edx
  427a0c:	hlt    
  427a0d:	jp     0x4279d3
  427a0f:	xchg   esp,eax
  427a10:	cmp    BYTE PTR [ebx+0x1a],bh
  427a13:	add    bl,cl
  427a15:	ret    
  427a16:	mov    eax,0xb4186567
  427a1b:	xchg   esp,eax
  427a1c:	jae    0x427a0d
  427a1e:	call   0x9403dbbc
  427a23:	pop    es
  427a24:	stc    
  427a25:	mov    dl,dh
  427a27:	jge    0x4279e1
  427a29:	mov    gs,edx
  427a2b:	in     eax,0xbd
  427a2d:	out    dx,al
  427a2e:	test   ebp,ecx
  427a30:	aas    
  427a31:	jmp    0x427a06
  427a33:	fucom  st(7)
  427a35:	fldenv [edi-0x61]
  427a38:	in     al,0x3
  427a3a:	fisubr DWORD PTR [eax+0x44]
  427a3d:	xchg   DWORD PTR [ebx-0x13],ebx
  427a40:	xchg   edx,eax
  427a41:	in     eax,dx
  427a42:	invd   
  427a44:	call   0xb82cd01a
  427a49:	adc    edi,ebp
  427a4b:	frstor [esi+0x40]
  427a4e:	cmp    ecx,DWORD PTR [eax]
  427a50:	leave  
  427a51:	fcmovne st,st(6)
  427a53:	data16 stos BYTE PTR es:[edi],al
  427a55:	add    al,0xaa
  427a57:	sbb    bh,al
  427a59:	rol    DWORD PTR [eax],cl
  427a5b:	add    BYTE PTR [esi-0x25],ch
  427a5e:	add    al,ch
  427a60:	xchg   esp,eax
  427a61:	lods   eax,DWORD PTR ds:[esi]
  427a62:	mov    al,ds:0x8600a5ef
  427a67:	sub    al,0xa3
  427a69:	add    BYTE PTR [eax-0x79ffd1d9],cl
  427a6f:	sub    al,0x81
  427a71:	add    BYTE PTR [eax+0x44612c27],cl
  427a77:	(bad)
  427a7a:	or     DWORD PTR [edi-0x4945688a],eax
  427a80:	fiadd  WORD PTR gs:[eax]
  427a83:	fs ins BYTE PTR es:[edi],dx
  427a85:	or     cl,BYTE PTR [edi]
  427a87:	jb     0x427a70
  427a89:	xchg   edi,eax
  427a8a:	ss scas al,BYTE PTR es:[edi]
  427a8c:	and    eax,0xcd39ca1f
  427a91:	dec    bx
  427a93:	loopne 0x427ae9
  427a95:	mov    DWORD PTR ds:[edi+0x7d446135],eax
  427a9c:	fdivr  QWORD PTR [ebx+0x3e]
  427a9f:	dec    esp
  427aa0:	es xchg edi,eax
  427aa2:	test   BYTE PTR [ecx-0x4b7a1e70],ch
  427aa8:	and    bl,cl
  427aaa:	leave  
  427aab:	out    dx,al
  427aac:	ins    DWORD PTR es:[edi],dx
  427aad:	test   al,0x51
  427aaf:	iret   
  427ab0:	mov    ebx,0xab410628
  427ab5:	data16 sti 
  427ab7:	inc    esi
  427ab8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427ab9:	sbb    ebp,edi
  427abb:	cdq    
  427abc:	add    al,0x5b
  427abe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427abf:	aaa    
  427ac0:	add    BYTE PTR [eax],al
  427ac2:	in     eax,0x58
  427ac4:	shl    DWORD PTR [ebp+0x257bd53b],0x7c
  427acb:	call   0x1b1712
  427ad0:	xchg   DWORD PTR [edi+0x615e8637],edx
  427ad6:	(bad)  
  427ad7:	xchg   esi,eax
  427ad8:	mov    WORD PTR [eax],es
  427ada:	mov    ecx,DWORD PTR [ebx]
  427adc:	push   ecx
  427add:	push   0xdece
  427ae2:	adc    BYTE PTR cs:[edi-0x7a4aee02],0xc0
  427aea:	jp     0x427adb
  427aec:	jns    0x427b6b
  427aee:	repnz leave 
  427af0:	push   0x5
  427af2:	js     0x427b4d
  427af4:	inc    edi
  427af5:	add    edx,DWORD PTR [edi]
  427af7:	scas   eax,DWORD PTR es:[edi]
  427af8:	loop   0x427b39
  427afa:	jle    0x427b14
  427afc:	test   cl,0xc5
  427aff:	mov    ds:0x657ec83,al
  427b04:	pop    ecx
  427b05:	add    dl,dh
  427b07:	fimul  WORD PTR [ecx+0x56]
  427b0a:	sbb    DWORD PTR [ecx+0x5],edx
  427b0d:	add    esi,eax
  427b0f:	fimul  WORD PTR [ecx-0x73]
  427b12:	pop    ebx
  427b13:	inc    esi
  427b14:	cld    
  427b15:	push   DWORD PTR [ecx-0x4eff9b57]
  427b1b:	loop   0x427b25
  427b1d:	adc    DWORD PTR [esi],eax
  427b1f:	fiadd  DWORD PTR [ecx+0x40f0463d]
  427b25:	add    BYTE PTR [eax],al
  427b27:	add    BYTE PTR [edi],cl
  427b29:	push   ebx
  427b2a:	repnz test DWORD PTR [esi-0x72],eax
  427b2e:	or     ecx,DWORD PTR [ebp-0x3b9fd]
  427b34:	loope  0x427ae4
  427b36:	lea    esi,[ebp+0x3a]
  427b39:	add    cl,BYTE PTR [ecx]
  427b3b:	ja     0x427b2d
  427b3d:	adc    al,0x85
  427b3f:	sar    BYTE PTR [ebx-0x2cf39d25],0x52
  427b46:	into   
  427b47:	push   0x56
  427b49:	scas   al,BYTE PTR es:[edi]
  427b4a:	not    edi
  427b4c:	lds    ebx,FWORD PTR ds:0xfe5bff0d
  427b52:	or     al,BYTE PTR [eax+0x2f]
  427b55:	test   DWORD PTR [ebp+0x9e3d9f0],ecx
  427b5b:	cld    
  427b5c:	sbb    eax,0x2cb8fe45
  427b61:	xchg   dh,bh
  427b63:	jmp    DWORD PTR [esi+eax*8-0x32]
  427b67:	mov    WORD PTR [edx-0x11b2f66d],ds
  427b6d:	scas   eax,DWORD PTR es:[edi]
  427b6e:	dec    ebx
  427b6f:	jb     0x427b82
  427b71:	mov    cl,0x7a
  427b73:	rol    BYTE PTR [edx-0x4bf41385],0x39
  427b7a:	in     al,dx
  427b7b:	jmp    FWORD PTR [eax-0x68]
  427b7e:	push   ecx
  427b7f:	jg     0x427b6c
  427b81:	add    DWORD PTR [ebx-0x7e0818bb],0xffffff85
  427b88:	xchg   ebx,eax
  427b89:	inc    edx
  427b8a:	jns    0x427b87
  427b8c:	add    BYTE PTR [eax],al
  427b8e:	jg     0x427b7d
  427b90:	add    cl,BYTE PTR [ecx+0x15793f72]
  427b96:	fist   WORD PTR [esi+edi*4-0x15b85301]
  427b9d:	adc    DWORD PTR [edx-0x4f025dfe],ebp
  427ba3:	adc    dh,cl
  427ba5:	xchg   dl,dh
  427ba7:	push   cs
  427ba8:	xor    DWORD PTR [ebp-0x71],0x5f
  427bac:	xchg   edi,eax
  427bad:	jb     0x427b48
  427baf:	clc    
  427bb0:	jns    0x427b72
  427bb2:	sbb    al,BYTE PTR [edx+0x42ba0bec]
  427bb8:	pop    esi
  427bb9:	data16 das 
  427bbb:	push   edi
  427bbc:	jns    0x427b91
  427bbe:	lods   al,BYTE PTR ds:[esi]
  427bbf:	ret    
  427bc0:	add    DWORD PTR [ebp-0x73323d16],ecx
  427bc6:	bnd ret 0x8ccd
  427bca:	jmp    0x5bdd:0xf28cce02
  427bd1:	ror    edx,cl
  427bd3:	nop
  427bd4:	sbb    ecx,DWORD PTR [esi]
  427bd6:	xchg   edi,eax
  427bd7:	out    dx,eax
  427bd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427bd9:	add    ebp,DWORD PTR [edx+0x9ff959e]
  427bdf:	mov    BYTE PTR [edi],cl
  427be1:	and    ch,BYTE PTR [eax+0x7a8c341b]
  427be7:	push   esi
  427be8:	jle    0x427bed
  427bea:	sub    bl,dh
  427bec:	addr16 inc edx
  427bee:	push   ecx
  427bef:	push   es
  427bf0:	push   0xb700008e
  427bf5:	(bad)  [eax+0x55]
  427bf8:	dec    esi
  427bf9:	and    BYTE PTR [esi+0x76],al
  427bfc:	pop    esi
  427bfd:	shr    BYTE PTR cs:[edi],0x47
  427c01:	(bad)  
  427c03:	mov    bh,bh
  427c05:	fs sub eax,0xbc21e86c
  427c0b:	mov    ebp,DWORD PTR [edx-0x4e]
  427c0e:	pop    ebp
  427c0f:	fsubr  DWORD PTR [edi]
  427c11:	in     al,dx
  427c12:	jo     0x427bed
  427c14:	fcomp  DWORD PTR [edx-0x41]
  427c17:	icebp  
  427c18:	sub    eax,0xac6d92cd
  427c1d:	fucom  st(7)
  427c1f:	add    esi,DWORD PTR [eax-0x52956f64]
  427c25:	(bad)  
  427c26:	jnp    0x427bb3
  427c28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c29:	pop    edx
  427c2a:	jae    0x427c1c
  427c2c:	sbb    bl,BYTE PTR [eax+0x39ce04e3]
  427c32:	ds ret 
  427c34:	nop
  427c35:	mov    gs:0x2e3dcf04,eax
  427c3b:	ret    
  427c3c:	and    BYTE PTR [ecx-0x55],0x11
  427c40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c41:	sbb    ch,ch
  427c43:	jbe    0x427c5f
  427c45:	dec    edx
  427c46:	fld    st(3)
  427c48:	push   0xa06000fa
  427c4d:	fiadd  WORD PTR [edi-0x7a03db4a]
  427c53:	lods   al,BYTE PTR ds:[esi]
  427c54:	clc    
  427c55:	pop    eax
  427c56:	xor    al,0xad
  427c58:	add    BYTE PTR [eax],al
  427c5a:	cmp    bl,BYTE PTR [esi]
  427c5c:	add    DWORD PTR [edi-0x78f2e34d],ecx
  427c62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c63:	sbb    dh,ch
  427c65:	(bad)  
  427c66:	mov    ds:0xb5870b1c,eax
  427c6b:	sbb    ecx,ebp
  427c6d:	(bad)  
  427c6e:	mov    bl,0x1b
  427c70:	adc    esi,ebx
  427c72:	leave  
  427c73:	sbb    ecx,DWORD PTR ds:0xd5099839
  427c79:	cmp    al,BYTE PTR [eax-0x3e61f554]
  427c7f:	jecxz  0x427c7e
  427c81:	mov    al,0x31
  427c83:	dec    ebx
  427c84:	inc    edx
  427c85:	imul   DWORD PTR [ebp+0x60190d9a]
  427c8b:	or     ebp,ebp
  427c8d:	sbb    bl,BYTE PTR [eax-0x54]
  427c90:	or     dh,BYTE PTR [esi-0x67]
  427c93:	fistp  QWORD PTR [ebp-0x53]
  427c96:	sub    BYTE PTR [esi],ch
  427c98:	or     dl,BYTE PTR [esi-0x77]
  427c9b:	in     eax,0xf9
  427c9d:	sbb    al,0x4b
  427c9f:	(bad)  
  427ca0:	mov    edi,0x86ac4039
  427ca5:	and    al,0x33
  427ca7:	pextrw ebp,mm5,0xb7
  427cab:	or     ebp,edx
  427cad:	xor    DWORD PTR [edi-0x589104f7],0xaf51ed09
  427cb7:	or     ebx,edi
  427cb9:	pop    esi
  427cba:	mov    bh,0x9
  427cbc:	loope  0x427cff
  427cbe:	add    BYTE PTR [eax],al
  427cc0:	xchg   DWORD PTR [edx],ecx
  427cc2:	sti    
  427cc3:	dec    esi
  427cc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427cc5:	sbb    DWORD PTR [ecx],ecx
  427cc7:	add    bh,bh
  427cc9:	repnz add edi,0xc953a9c9
  427cd0:	adc    al,0x8f
  427cd2:	cli    
  427cd3:	push   edx
  427cd4:	ret    
  427cd5:	mov    al,ds:0x34706c0
  427cda:	mov    ds:0x82082867,eax
  427cdf:	sub    eax,0x40ecf2
  427ce4:	push   ebp
  427ce5:	xor    al,0x89
  427ce7:	inc    esi
  427ce8:	inc    edi
  427ce9:	dec    eax
  427cea:	add    edi,ebx
  427cec:	aad    0xda
  427cee:	cmp    BYTE PTR ds:0x3a2a26,bl
  427cf4:	mov    ds:0xd3ff4dc3,eax
  427cf9:	rcr    DWORD PTR [ebx],1
  427cfb:	lock enter 0xfa9c,0x74
  427d00:	add    BYTE PTR [ebx],al
  427d02:	adc    ah,BYTE PTR [esi-0x18]
  427d05:	or     BYTE PTR [ebp-0x7828cd40],al
  427d0b:	sbb    eax,0x3a27a2
  427d10:	nop
  427d11:	mov    gs,edx
  427d13:	fiadd  WORD PTR ds:0x8956ffda
  427d19:	fisubr WORD PTR [edx+edx*1-0x5ea125ea]
  427d20:	aam    0x1f
  427d22:	cmp    al,BYTE PTR [eax]
  427d24:	add    BYTE PTR [eax],al
  427d26:	xor    BYTE PTR [ebx+0x3f],ah
  427d29:	add    bl,BYTE PTR [esi+0x29fe5e68]
  427d2f:	bound  edi,QWORD PTR [edi]
  427d31:	add    al,0xde
  427d33:	out    0xf0,eax
  427d35:	fiadd  WORD PTR [ebp-0x26]
  427d38:	jae    0x427d62
  427d3a:	ror    DWORD PTR [ecx],1
  427d3c:	aam    0x38
  427d3e:	mov    ecx,DWORD PTR [edx]
  427d40:	xlat   BYTE PTR ds:[ebx]
  427d41:	inc    ebx
  427d42:	das    
  427d43:	test   ebx,ebp
  427d45:	adc    DWORD PTR [edi+0x70f9d9cd],eax
  427d4b:	add    BYTE PTR [ebp+0x74],al
  427d4e:	cmp    cl,BYTE PTR [esi]
  427d50:	adc    dh,ah
  427d52:	add    DWORD PTR [ebx-0x2],0x52d532c1
  427d59:	aas    
  427d5a:	das    
  427d5b:	xchg   ch,cl
  427d5d:	cli    
  427d5e:	and    ah,BYTE PTR [ecx]
  427d60:	cmovo  ebp,DWORD PTR [edi]
  427d63:	pop    edi
  427d64:	lahf   
  427d65:	add    ah,BYTE PTR [edx+0x43]
  427d68:	(bad)  
  427d69:	popa   
  427d6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427d6b:	ds sti 
  427d6d:	out    0xce,eax
  427d6f:	fs je  0x427d6d
  427d72:	mov    dh,0x3d
  427d74:	std    
  427d75:	cli    
  427d76:	inc    edx
  427d77:	and    ecx,DWORD PTR [esi]
  427d79:	inc    eax
  427d7a:	das    
  427d7b:	and    al,0xd2
  427d7d:	popa   
  427d7e:	mov    dh,0xc5
  427d80:	pop    es
  427d81:	push   edi
  427d82:	in     al,dx
  427d83:	retf   0xec87
  427d86:	lods   al,BYTE PTR ds:[esi]
  427d87:	mov    ds:0x8176,eax
  427d8c:	add    ebp,DWORD PTR [eax+eax*1]
  427d8f:	add    BYTE PTR [edi],ch
  427d91:	call   0xab22d060
  427d96:	ficom  DWORD PTR [eax]
  427d98:	outs   dx,DWORD PTR ds:[esi]
  427d99:	ja     0x427dcc
  427d9b:	xlat   BYTE PTR ds:[ebx]
  427d9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427d9d:	mov    ebx,0x38043420
  427da2:	jmp    0x427da6
  427da4:	cld    
  427da5:	ss addr16 aaa 
  427da8:	sub    eax,0xd567fe77
  427dad:	jbe    0x427dad
  427daf:	call   DWORD PTR ds:0x5735758f
  427db5:	ins    DWORD PTR es:[edi],dx
  427db6:	sar    edi,0x71
  427db9:	ret    
  427dba:	and    BYTE PTR [eax],ah
  427dbc:	sub    eax,0x2f03e7de
  427dc1:	(bad)  
  427dc2:	cmc    
  427dc3:	out    0x32,eax
  427dc5:	push   ds
  427dc6:	call   0x4f0bf553
  427dcb:	out    dx,eax
  427dcc:	pop    eax
  427dcd:	pop    ebx
  427dce:	ins    BYTE PTR es:[edi],dx
  427dcf:	pop    ds
  427dd0:	mov    edi,0xff03e7de
  427dd5:	xor    BYTE PTR [edi-0x1801f315],dl
  427ddb:	add    esp,eax
  427ddd:	mov    ds:0x2ab602eb,eax
  427de2:	les    esp,FWORD PTR [edi]
  427de4:	inc    esp
  427de5:	repz mov ebx,0x64ddef10
  427deb:	inc    ebx
  427dec:	mov    edx,0x7f74ef
  427df1:	add    BYTE PTR [ebx+0x6e],dl
  427df4:	call   0xf370acfc
  427df9:	or     eax,0x3a7f0c3
  427dfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427dff:	and    DWORD PTR [esp+ecx*1],ecx
  427e02:	xchg   edi,eax
  427e03:	(bad)  
  427e04:	ins    DWORD PTR es:[edi],dx
  427e05:	les    eax,FWORD PTR [eax]
  427e07:	pop    edx
  427e08:	sub    al,0x28
  427e0a:	sbb    DWORD PTR [esi],ebp
  427e0c:	retf   
  427e0d:	sbb    DWORD PTR [ebx],eax
  427e0f:	lock daa 
  427e11:	add    al,0xba
  427e13:	adc    DWORD PTR [esp+edi*4],eax
  427e16:	cwde   
  427e17:	imul   ebp,eax,0x1d762f03
  427e1d:	(bad)  
  427e1f:	mov    WORD PTR [edi+0x4a],gs
  427e22:	in     eax,dx
  427e23:	and    esp,eax
  427e25:	daa    
  427e26:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  427e28:	sub    al,0x28
  427e2a:	pop    es
  427e2b:	shl    edi,0x3
  427e2e:	das    
  427e2f:	push   edi
  427e30:	sub    al,0x28
  427e32:	pop    ebx
  427e33:	push   edi
  427e34:	sbb    al,0x28
  427e36:	pop    edi
  427e37:	push   esi
  427e38:	add    DWORD PTR ds:0xd87d947,edx
  427e3e:	inc    edi
  427e3f:	out    dx,al
  427e40:	test   DWORD PTR [ebp+0x292dee50],esi
  427e46:	imul   ebx,DWORD PTR [ebx-0x3f98931f],0x34
  427e4d:	fisubr WORD PTR [eax+0x2ce8fff6]
  427e53:	gs inc ebp
  427e55:	add    eax,0x88470000
  427e5a:	inc    edx
  427e5b:	call   0xd567a011
  427e60:	cmp    bl,BYTE PTR [ebx+0x35]
  427e63:	out    dx,al
  427e64:	retf   0x2521
  427e67:	out    dx,al
  427e68:	(bad)  
  427e69:	fisttp WORD PTR [ecx]
  427e6b:	pop    edi
  427e6c:	repz (bad) 
  427e6e:	jge    0x427e99
  427e70:	push   0xfffffffe
  427e72:	xchg   DWORD PTR [ebp-0x5a7415b0],ebp
  427e78:	dec    eax
  427e79:	jmp    0xe90f:0xbfe72f50
  427e80:	popf   
  427e81:	icebp  
  427e82:	pusha  
  427e83:	clc    
  427e84:	in     al,dx
  427e85:	mov    eax,DWORD PTR [edx+0x31]
  427e88:	sub    al,0x62
  427e8a:	mov    edi,0x48de2ce9
  427e8f:	fisubr WORD PTR [eax+0x2ce9014d]
  427e95:	push   ss
  427e96:	or     ah,BYTE PTR [ebp-0x77]
  427e99:	fiadd  WORD PTR [eax]
  427e9b:	jmp    0x54c75734
  427ea0:	sub    al,0xde
  427ea2:	add    BYTE PTR [ecx],dh
  427ea4:	sub    al,0x61
  427ea6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427ea7:	jmp    0x2e055cd8
  427eac:	pop    es
  427ead:	fld    DWORD PTR [ebx]
  427eaf:	pop    ecx
  427eb0:	sub    esp,DWORD PTR [eax-0x2285ffbb]
  427eb6:	add    BYTE PTR [esi+edx*8+0xe684e0],al
  427ebd:	add    BYTE PTR [esi-0x7497ff21],al
  427ec3:	loop   0x427ec5
  427ec5:	add    BYTE PTR [ebx],al
  427ec7:	arpl   WORD PTR ds:0xdf9694,sp
  427ecd:	push   eax
  427ece:	mov    ch,0xb4
  427ed0:	dec    ebx
  427ed1:	push   ebx
  427ed2:	mov    ch,0x5e
  427ed4:	inc    ebp
  427ed5:	and    al,0x2e
  427ed7:	mov    dl,0xf7
  427ed9:	adc    eax,0x40f1e2
  427ede:	retf   
  427edf:	push   ds
  427ee0:	push   es
  427ee1:	test   ch,cl
  427ee3:	fiadd  WORD PTR [eax]
  427ee5:	add    BYTE PTR [ebp+0x1f],ah
  427ee8:	pop    edi
  427ee9:	mov    edx,ecx
  427eeb:	ret    0x298
  427eee:	inc    esi
  427eef:	fisttp WORD PTR [ebx+0x16f6a84]
  427ef5:	add    BYTE PTR [esi],dl
  427ef7:	scas   eax,DWORD PTR es:[edi]
  427ef8:	not    DWORD PTR ds:0x40e61e
  427efe:	(bad)  
  427eff:	fwait
  427f00:	push   ds
  427f01:	xor    ah,dl
  427f03:	sbb    ecx,DWORD PTR [esp+eax*2-0x561749c6]
  427f0a:	ins    BYTE PTR es:[edi],dx
  427f0b:	or     eax,0x85c685f6
  427f10:	pop    eax
  427f11:	push   eax
  427f12:	push   ebx
  427f13:	push   esi
  427f14:	and    eax,0xded694
  427f19:	push   eax
  427f1a:	mov    eax,ds:0x611acf2
  427f1f:	loop   0x427ea4
  427f21:	rol    BYTE PTR [eax],0x0
  427f24:	sbb    edx,DWORD PTR [ebp-0x2fd52482]
  427f2a:	cmp    bl,0xd7
  427f2d:	xchg   edx,eax
  427f2e:	sub    al,0x8d
  427f30:	das    
  427f31:	mov    eax,0xf42c3c6e
  427f36:	aaa    
  427f37:	ret    0x98f3
  427f3a:	add    BYTE PTR [eax],dl
  427f3c:	xchg   esp,eax
  427f3d:	inc    esp
  427f3e:	dec    eax
  427f3f:	inc    esp
  427f40:	push   ebx
  427f41:	add    BYTE PTR [edx],0xe7
  427f44:	cmp    DWORD PTR [ebx-0x37],eax
  427f47:	and    edi,DWORD PTR [edx]
  427f49:	js     0x427fa8
  427f4b:	or     ebp,DWORD PTR [ecx+0x40]
  427f4e:	and    cl,BYTE PTR ds:0xfad01e2d
  427f54:	jo     0x427f71
  427f56:	inc    edi
  427f57:	inc    esp
  427f58:	adc    edx,DWORD PTR [edx+0x2d6f2dff]
  427f5e:	sar    dl,cl
  427f60:	pop    eax
  427f61:	rol    DWORD PTR [esi+0x44],cl
  427f64:	or     ebp,DWORD PTR [ebx-0x44cd18d2]
  427f6a:	enter  0x3123,0x95
  427f6e:	jo     0x427f2f
  427f70:	inc    esp
  427f71:	or     DWORD PTR [edi+edx*8],esi
  427f74:	mov    ds:0x7f402240,al
  427f79:	adc    cl,cl
  427f7b:	and    esp,DWORD PTR [ebx+0x67]
  427f7e:	aad    0x8c
  427f80:	jae    0x427f1d
  427f82:	push   ss
  427f83:	push   eax
  427f84:	adc    BYTE PTR [ebx+0x11a6],dh
  427f8a:	outs   dx,DWORD PTR ds:[esi]
  427f8b:	ja     0x427f10
  427f8d:	sar    BYTE PTR [ebx-0x75],0x7d
  427f91:	inc    esp
  427f92:	push   ebx
  427f93:	out    dx,eax
  427f94:	jne    0x427fd8
  427f96:	sub    eax,0x2b23c1fc
  427f9b:	push   cs
  427f9c:	enter  0xb401,0xc3
  427fa0:	sub    BYTE PTR [eax-0x5a],al
  427fa3:	mov    ecx,0xe36b86fa
  427fa8:	enter  0x7188,0xde
  427fac:	icebp  
  427fad:	jge    0x42801a
  427faf:	ret    0xfde9
  427fb2:	ins    BYTE PTR es:[edi],dx
  427fb3:	ret    0x7ce4
  427fb6:	arpl   dx,ax
  427fb8:	idiv   DWORD PTR [ebx-0x13]
  427fbb:	faddp  st(0),st
  427fbd:	mov    edi,0x6f4e64c
  427fc2:	sub    ebx,DWORD PTR [esi+0x60]
  427fc5:	leave  
  427fc6:	das    
  427fc7:	mov    BYTE PTR [eax+ebp*1],ah
  427fca:	xor    al,0x89
  427fcc:	lods   al,BYTE PTR ds:[esi]
  427fcd:	daa    
  427fce:	pop    ds
  427fcf:	pop    esi
  427fd0:	fsub   QWORD PTR [edi]
  427fd2:	and    al,0xe4
  427fd4:	loop   0x427f5b
  427fd6:	inc    BYTE PTR [edi+0xaaf704b]
  427fdc:	or     al,0x28
  427fde:	das    
  427fdf:	push   ebp
  427fe0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427fe1:	sti    
  427fe2:	mov    cl,0x1a
  427fe4:	or     al,0x18
  427fe6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427fe7:	(bad)  
  427fe8:	mov    ah,0xfa
  427fea:	inc    ebp
  427feb:	adc    cl,ah
  427fed:	pop    ds
  427fee:	add    BYTE PTR [eax],al
  427ff0:	push   edi
  427ff1:	cmc    
  427ff2:	data16 jno 0x428029
  427ff5:	push   ebp
  427ff6:	sub    edx,eax
  427ff8:	(bad)  
  427ff9:	and    al,0x5f
  427ffb:	data16 mov bl,BYTE PTR [esp+ebp*8+0xc557a03]
  428003:	test   BYTE PTR [ebx],dl
  428005:	xchg   BYTE PTR [edi+0x5f],ah
  428008:	push   ebx
  428009:	sub    eax,0xd692d892
  42800e:	push   ss
  42800f:	dec    ebx
  428010:	gs push ebp
  428012:	mov    dl,0x81
  428014:	jae    0x427fd8
  428016:	repz jl 0x42806c
  428019:	ret    0x7ceb
  42801c:	mov    eax,edx
  42801e:	pop    es
  42801f:	jge    0x427fa4
  428021:	ret    0x4703
  428024:	jae    0x427fe8
  428026:	add    BYTE PTR [ecx],al
  428028:	jmp    0x427fb2
  42802a:	cli    
  42802b:	jmp    0xa798e694
  428030:	push   eax
  428031:	popa   
  428032:	dec    ebp
  428033:	lds    ebp,FWORD PTR [eax]
  428035:	(bad)
  42803a:	inc    ebp
  42803b:	lds    ecx,FWORD PTR [ecx+ecx*4-0x3f]
  42803f:	jo     0x427fe8
  428041:	mov    esp,0x12edc220
  428046:	or     al,0x18
  428048:	repz icebp 
  42804a:	jge    0x4280bb
  42804c:	sbb    BYTE PTR [ecx-0x77d9af40],bh
  428052:	cli    
  428053:	jmp    0x9e7f8058
  428058:	mov    ebp,ss
  42805a:	dec    eax
  42805b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42805d:	mov    ebp,0x8adc33f
  428063:	bnd call DWORD PTR [eax+0x1d]
  428067:	leave  
  428068:	stc    
  428069:	ss aam 0x8d
  42806c:	mov    BYTE PTR [ebp+0x1a35ee10],dh
  428072:	inc    eax
  428073:	pop    esp
  428074:	sbb    ch,al
  428076:	sub    al,0xde
  428078:	test   esp,esi
  42807a:	jo     0x42806a
  42807c:	inc    eax
  42807d:	jmp    0x6a839d27
  428082:	xchg   ebx,eax
  428083:	out    0x9,al
  428085:	mov    al,gs:0x5fe900de
  42808b:	pop    es
  42808c:	add    ecx,ebp
  42808e:	sub    al,0xd3
  428090:	test   ch,dl
  428092:	sub    al,0xde
  428094:	add    BYTE PTR [edx+0xa],ch
  428097:	sbb    al,0x0
  428099:	out    0xa7,al
  42809b:	test   al,0x1
  42809d:	jmp    0x13ef6ce
  4280a2:	jne    0x42809c
  4280a4:	cmc    
  4280a5:	cmp    al,0xd2
  4280a7:	lea    ecx,[ecx]
  4280a9:	test   DWORD PTR [eax],0xd60180ba
  4280af:	fndisi(8087 only) 
  4280b1:	or     dl,BYTE PTR [ebp+0x79]
  4280b4:	(bad)  
  4280b5:	jmp    DWORD PTR [ebx]
  4280b7:	test   BYTE PTR [ebx+0x7e],bh
  4280ba:	add    BYTE PTR [eax],al
  4280bc:	push   cs
  4280bd:	loop   0x4280c4
  4280bf:	test   dh,dl
  4280c1:	fild   DWORD PTR [eax]
  4280c3:	add    ch,ah
  4280c5:	sbb    esp,DWORD PTR [ebx+0x6]
  4280c8:	xor    BYTE PTR [ecx],cl
  4280ca:	inc    ebp
  4280cb:	and    al,0xd6
  4280cd:	call   0xabe9:0xe9727c8d
  4280d4:	pushf  
  4280d5:	add    al,0x77
  4280d7:	adc    ch,bl
  4280d9:	scas   eax,DWORD PTR es:[edi]
  4280da:	add    DWORD PTR [edi-0x76],0x56
  4280de:	shl    DWORD PTR [ebx+ecx*8+0x4],0x46
  4280e3:	adc    ch,dl
  4280e5:	stc    
  4280e6:	adc    BYTE PTR [ebp+0x78],dh
  4280e9:	cmp    DWORD PTR [ebx+0x38],0x8a128644
  4280f0:	stos   BYTE PTR es:[edi],al
  4280f1:	mov    edi,0xbf92fe2f
  4280f6:	das    
  4280f7:	test   bh,bh
  4280f9:	test   DWORD PTR [ebx],ebp
  4280fb:	add    DWORD PTR [esi],0xffffffdf
  4280fe:	bound  eax,QWORD PTR [esi+eiz*8]
  428101:	pop    ebp
  428102:	inc    ebp
  428103:	and    al,0xed
  428105:	and    esp,DWORD PTR [eax]
  428107:	sub    DWORD PTR [edi],0xffffffd7
  42810a:	jae    0x42812e
  42810c:	mov    al,ds:0x8317395b
  428111:	xlat   BYTE PTR ds:[ebx]
  428112:	or     BYTE PTR [edx+esi*1-0x34],0xf6
  428117:	inc    esp
  428118:	xor    cl,ah
  42811a:	test   cl,cl
  42811c:	das    
  42811d:	sub    dl,BYTE PTR ds:0xef00007f
  428123:	jl     0x4280fd
  428125:	movq   QWORD PTR [edx],mm2
  428128:	leave  
  428129:	and    ebx,DWORD PTR [eax]
  42812b:	in     eax,0x6b
  42812d:	iret   
  42812e:	lods   al,BYTE PTR ds:[esi]
  42812f:	cmp    BYTE PTR [ecx],al
  428131:	xchg   DWORD PTR [eax+0x7d],ecx
  428134:	cmp    ebx,0x3a
  428137:	sbb    ah,bl
  428139:	xchg   BYTE PTR [ecx+0x7d],dh
  42813c:	in     al,0x88
  42813e:	imul   ebx,DWORD PTR [ecx-0x4b0e78e6],0xffffffa5
  428145:	sti    
  428146:	das    
  428147:	jne    0x428147
  428149:	ss addr16 jp 0x428184
  42814d:	bnd jle 0x4280e2
  428150:	ss xchg ecx,esi
  428153:	cmp    BYTE PTR [esi+0x4c],dh
  428156:	dec    ebx
  428157:	out    dx,eax
  428158:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428159:	sti    
  42815a:	js     0x4281d0
  42815c:	(bad)  
  42815d:	popa   
  42815e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42815f:	inc    eax
  428160:	and    ch,BYTE PTR [ebx]
  428162:	and    al,0xb6
  428164:	repz add al,0xc9
  428167:	or     eax,0xab0823c9
  42816c:	or     DWORD PTR [ebp+0x5034d8eb],ecx
  428172:	dec    eax
  428173:	push   eax
  428174:	and    ch,BYTE PTR [eax]
  428176:	mov    dl,0x40
  428178:	and    ch,BYTE PTR [eax]
  42817a:	inc    edi
  42817b:	test   eax,ecx
  42817d:	stc    
  42817e:	xor    cl,bh
  428180:	inc    esp
  428181:	je     0x4281b6
  428183:	aad    0xc8
  428185:	and    eax,DWORD PTR [eax]
  428187:	add    BYTE PTR [esi+0x10],al
  42818a:	repz pop es
  42818c:	mov    dl,0x8d
  42818e:	std    
  42818f:	test   BYTE PTR ds:0x8fb6d8e,bl
  428195:	or     al,0x22
  428197:	adc    BYTE PTR [edi],dl
  428199:	fbstp  TBYTE PTR [ecx+0x1785f582]
  42819f:	dec    ecx
  4281a0:	mov    edi,ebx
  4281a2:	mov    edi,0xcb856e08
  4281a7:	js     0x428188
  4281a9:	leave  
  4281aa:	mov    dh,0xf7
  4281ac:	addr16 push edi
  4281ae:	sbb    al,0x28
  4281b0:	aas    
  4281b1:	(bad)  
  4281b2:	shr    ebp,1
  4281b4:	add    DWORD PTR [ebx+0xa],edx
  4281b7:	or     BYTE PTR [eax+0x9],al
  4281ba:	in     al,dx
  4281bb:	adc    eax,DWORD PTR [edx-0x41]
  4281be:	outs   dx,BYTE PTR ds:[esi]
  4281bf:	add    BYTE PTR [edx+0x11091c9e],ch
  4281c5:	fisub  DWORD PTR [esi+0x43]
  4281c8:	sub    ebp,DWORD PTR [esi]
  4281ca:	xor    edi,0x4c
  4281cd:	mov    dh,0x6c
  4281cf:	out    dx,eax
  4281d0:	dec    esp
  4281d1:	mov    dh,0x7f
  4281d3:	scas   eax,DWORD PTR es:[edi]
  4281d4:	out    0x83,al
  4281d6:	imul   eax,DWORD PTR [esi+0x6dec0a6f],0xfffffff3
  4281dd:	mov    ecx,0xb9eb6cfd
  4281e2:	idiv   DWORD PTR [eax-0xd]
  4281e5:	mov    ecx,0xd6a080f7
  4281ea:	inc    BYTE PTR ds:0x97db0000
  4281f0:	test   DWORD PTR [eax-0x3],0x4582ba75
  4281f7:	test   DWORD PTR [esi-0x5764a8ff],edi
  4281fd:	ins    BYTE PTR es:[edi],dx
  4281fe:	xor    al,0x59
  428200:	sbb    BYTE PTR [eax],ch
  428202:	inc    eax
  428203:	or     ah,BYTE PTR [ecx-0x8457486]
  428209:	sub    al,BYTE PTR [ebp+0x4]
  42820c:	mov    edi,0x66da757e
  428211:	call   0x7c436442
  428216:	dec    ebp
  428217:	pop    ebp
  428218:	(bad)  
  428219:	arpl   WORD PTR [edx+ecx*1+0x16],bp
  42821d:	push   ebx
  42821e:	and    eax,DWORD PTR ds:0x87dcf1c1
  428224:	jne    0x428233
  428226:	dec    ebx
  428227:	push   ebx
  428228:	jge    0x42822f
  42822a:	inc    ebx
  42822b:	jbe    0x428290
  42822d:	and    BYTE PTR [ebp-0x77],al
  428230:	test   BYTE PTR [ecx+0x2dfae0df],ch
  428236:	paddsw mm7,mm1
  428239:	and    eax,0x2d85ee0f
  42823e:	pmaxsw mm7,QWORD PTR [ebp-0x56]
  428242:	mov    bl,0xcb
  428244:	add    dl,BYTE PTR ds:0x37d5b569
  42824a:	add    edi,DWORD PTR [esi-0x3fb7881]
  428250:	or     BYTE PTR [eax+eax*1+0x0],ch
  428254:	outs   dx,DWORD PTR ds:[esi]
  428255:	rcr    BYTE PTR [eax],0x19
  428258:	pusha  
  428259:	push   ecx
  42825a:	jge    0x428221
  42825c:	and    al,0x57
  42825e:	pop    ebp
  42825f:	or     eax,0xc02f7652
  428264:	push   es
  428265:	mov    DWORD PTR [esi-0x7a41b753],eax
  42826b:	pushf  
  42826c:	adc    ecx,DWORD PTR fs:[eax-0x7e7e0b18]
  428273:	aas    
  428274:	les    ebx,FWORD PTR [ebp+eax*2+0xd]
  428278:	aaa    
  428279:	sub    DWORD PTR [ebx-0x6e],ebx
  42827c:	sar    DWORD PTR [edx+0x5c],0x2b
  428280:	das    
  428281:	ficom  WORD PTR [ebx+0x72]
  428284:	xlat   BYTE PTR ds:[ebx]
  428285:	add    al,0xed
  428287:	cdq    
  428288:	add    DWORD PTR [esi],ebp
  42828a:	addr16 stc 
  42828c:	add    al,BYTE PTR [ebx+edx*2+0x50ed3100]
  428293:	push   ss
  428294:	(bad)  
  428295:	fistp  QWORD PTR [ecx-0x3c]
  428298:	adc    al,BYTE PTR [edi]
  42829a:	inc    esp
  42829b:	test   al,0xa6
  42829d:	sbb    eax,0x9ec900fe
  4282a2:	mov    ds:0xe00640,al
  4282a7:	(bad)  
  4282a8:	jmp    0x4282f9
  4282aa:	adc    BYTE PTR [eax-0x2a],al
  4282ad:	pop    esi
  4282ae:	shl    DWORD PTR [ebp+eiz*1+0x3],0x44
  4282b3:	mov    ah,0x5d
  4282b5:	inc    esi
  4282b6:	stos   BYTE PTR es:[edi],al
  4282b7:	sldt   WORD PTR [eax]
  4282ba:	mov    dl,0x1a
  4282bc:	adc    eax,0x83d3eec1
  4282c1:	rcr    BYTE PTR [ebx],0xdd
  4282c4:	jns    0x4282bf
  4282c6:	xchg   ecx,eax
  4282c7:	(bad)  
  4282c8:	push   DWORD PTR [edx]
  4282ca:	iret   
  4282cb:	mov    edx,0xdcadf44b
  4282d0:	xchg   DWORD PTR [ebp+0x1a],eax
  4282d3:	add    al,BYTE PTR [esi+0x1]
  4282d6:	add    ebx,DWORD PTR [esi-0x11feaf3e]
  4282dc:	xchg   esp,eax
  4282dd:	adc    dl,BYTE PTR [esi-0x26]
  4282e0:	mov    eax,0xdf11ff
  4282e5:	cmp    ecx,ebx
  4282e7:	sbb    ecx,DWORD PTR [ebp+esi*2-0x83f2c1a]
  4282ee:	es mov esp,0x268dc43
  4282f4:	ds add eax,0x156ae
  4282fa:	push   esi
  4282fb:	daa    
  4282fc:	xchg   BYTE PTR [ebp+0x11],ah
  4282ff:	clc    
  428300:	mov    esi,DWORD PTR [ebp+0x16]
  428303:	aaa    
  428304:	xchg   edi,eax
  428305:	add    BYTE PTR [esi-0x21],al
  428308:	call   0x6794b28f
  42830d:	sti    
  42830e:	mov    ah,0xba
  428310:	int    0x8c
  428312:	jb     0x428339
  428314:	into   
  428315:	mov    bh,0x2d
  428317:	jne    0x428317
  428319:	jg     0x428332
  42831b:	xor    ebx,esp
  42831d:	inc    DWORD PTR [eax]
  42831f:	add    BYTE PTR [eax],al
  428321:	add    BYTE PTR [ecx],dh
  428323:	adc    BYTE PTR [edx],ah
  428325:	mov    ch,0x4
  428327:	pop    di
  428329:	push   cs
  42832a:	rol    BYTE PTR [edx],0xe8
  42832d:	inc    edx
  42832e:	fisttp DWORD PTR [ecx-0x49]
  428331:	mov    ebx,0x2f01fafb
  428336:	mov    eax,0x4f43f786
  42833b:	lea    ebx,[esp+ecx*2-0x5a]
  42833f:	std    
  428340:	shl    BYTE PTR [esi+edi*8+0x36],0xde
  428345:	jecxz  0x42833e
  428347:	mov    WORD PTR [edi+0x64],ds
  42834a:	sub    al,0xd1
  42834c:	and    BYTE PTR [ebp-0x20],bh
  42834f:	mov    BYTE PTR [eax],al
  428351:	mov    eax,ds:0x8af088e0
  428356:	enter  0x6656,0x37
  42835a:	retf   0x9b86
  42835d:	mul    DWORD PTR [eax-0x8]
  428360:	scas   al,BYTE PTR es:[edi]
  428361:	add    BYTE PTR [ecx],dh
  428363:	add    DWORD PTR [edi],ebp
  428365:	jne    0x42833c
  428367:	push   ecx
  428368:	fsub   st,st(7)
  42836a:	inc    esp
  42836b:	das    
  42836c:	test   ch,bh
  42836e:	enter  0xf723,0x21
  428372:	jmp    0x9cb26e9a
  428377:	das    
  428378:	outs   dx,DWORD PTR ds:[esi]
  428379:	or     eax,0xf9e323c9
  42837e:	call   0x9ca26aa6
  428383:	mov    DWORD PTR [eax],eax
  428385:	add    bl,bl
  428387:	(bad)  
  428389:	jecxz  0x42838c
  42838b:	sahf   
  42838c:	ins    DWORD PTR es:[edi],dx
  42838d:	call   0x77817dde
  428392:	fwait
  428393:	mov    edx,0xba7b7acf
  428398:	mov    bh,0x9c
  42839a:	pop    es
  42839b:	inc    ebp
  42839c:	aas    
  42839d:	push   0x4
  42839f:	push   esp
  4283a0:	cmp    al,0x20
  4283a2:	stos   DWORD PTR es:[edi],eax
  4283a3:	fsubrp st(7),st
  4283a5:	add    esi,DWORD PTR [edi+0x2f03e861]
  4283ab:	cdq    
  4283ac:	and    al,0x20
  4283ae:	daa    
  4283af:	fidiv  DWORD PTR [edi-0x3d]
  4283b2:	loopne 0x42840a
  4283b4:	sub    al,0x20
  4283b6:	outs   dx,DWORD PTR ds:[esi]
  4283b7:	push   edi
  4283b8:	and    al,0x20
  4283ba:	imul   esi,DWORD PTR [esi-0x6b],0xffffffdf
  4283be:	lds    eax,FWORD PTR [ecx+0x320baf65]
  4283c4:	call   0x4888b2cc
  4283c9:	add    ebp,DWORD PTR [edi]
  4283cb:	fimul  WORD PTR [edi-0x6c7eecc1]
  4283d1:	jl     0x428440
  4283d3:	cs pop ebp
  4283d5:	mov    edi,0x5c17c24c
  4283da:	ret    0xe85d
  4283dd:	add    esi,DWORD PTR [ebx-0x4df20262]
  4283e3:	pop    edx
  4283e4:	les    edi,FWORD PTR [edi+0x2f]
  4283e7:	fsubrp st(7),st
  4283e9:	rol    DWORD PTR [eax],cl
  4283eb:	add    BYTE PTR [ebx-0xd7fbe6],ah
  4283f1:	jne    0x42846e
  4283f3:	test   BYTE PTR [edi],ch
  4283f5:	fisub  WORD PTR [ebx+0x43]
  4283f8:	and    al,0x5a
  4283fa:	test   al,0x2
  4283fc:	das    
  4283fd:	fisubr WORD PTR [esi+0x26]
  428400:	imul   esp
  428402:	add    BYTE PTR [ecx+0x545532c],ch
  428408:	jnp    0x428460
  42840a:	inc    ebp
  42840b:	int    0xc
  42840d:	push   ebx
  42840e:	inc    ebp
  42840f:	vandnps xmm0,xmm0,XMMWORD PTR [ebp-0x33]
  428414:	inc    eax
  428415:	push   ebx
  428416:	inc    ebp
  428417:	lds    ecx,FWORD PTR [esi+edx*2]
  42841a:	inc    ebp
  42841b:	int    0x34
  42841d:	push   ebx
  42841e:	inc    ebp
  42841f:	lds    ecx,FWORD PTR [edi+edx*2+0x45]
  428423:	int    0x30
  428425:	popf   
  428426:	inc    ebp
  428427:	lds    esi,FWORD PTR [eax]
  428429:	stos   BYTE PTR es:[edi],al
  42842a:	lea    ebp,[ecx]
  42842c:	sub    ebx,DWORD PTR [ebp-0x7eb8fabb]
  428432:	cli    
  428433:	jmp    0x587dd64
  428438:	daa    
  428439:	cld    
  42843a:	test   ecx,ebp
  42843c:	push   edi
  42843d:	dec    edx
  42843e:	and    eax,0xde33a1
  428443:	rcr    ebx,0xfc
  428446:	stc    
  428447:	scas   al,BYTE PTR es:[edi]
  428448:	or     ah,BYTE PTR [edx]
  42844a:	and    eax,0x68cfbe2d
  42844f:	popf   
  428450:	add    BYTE PTR [eax],al
  428452:	and    BYTE PTR [esi],bl
  428454:	add    DWORD PTR [esi-0x3abaa910],edx
  42845a:	fadd   st,st(7)
  42845c:	mov    ebp,0x19810f6
  428461:	jmp    0xcdc7d792
  428466:	hlt    
  428467:	fld    QWORD PTR [eax]
  428469:	jmp    0xd9fd9ca
  42846e:	pop    ds
  42846f:	test   edx,edx
  428471:	jb     0x428456
  428473:	enter  0xdded,0x29
  428477:	pop    ecx
  428478:	inc    ebp
  428479:	add    eax,0x95773
  42847e:	fld    TBYTE PTR [ebp-0x545befe2]
  428484:	xor    BYTE PTR fs:[eax-0x5ddb8b09],ah
  42848b:	lods   al,BYTE PTR ds:[esi]
  42848c:	not    DWORD PTR [ecx+0x76]
  42848f:	pop    ebp
  428490:	shl    DWORD PTR [edx+edx*1+0x3],0x5d
  428495:	and    al,0x26
  428497:	xchg   edx,eax
  428498:	not    DWORD PTR ds:0x40ecd2
  42849e:	popf   
  42849f:	sahf   
  4284a0:	push   ds
  4284a1:	adc    BYTE PTR [edi-0x62],bh
  4284a4:	push   ds
  4284a5:	sbb    BYTE PTR [ebp-0x797bf9e4],bh
  4284ab:	fiadd  DWORD PTR [eax]
  4284ad:	add    BYTE PTR [ebp-0x7d],bh
  4284b0:	lea    edx,[edx+esi*1-0x5a]
  4284b4:	dec    esp
  4284b5:	lea    eax,[eax]
  4284b7:	add    BYTE PTR [edx],ah
  4284b9:	mov    esi,0xd96c5238
  4284be:	push   0xda2110
  4284c3:	push   eax
  4284c4:	mov    DWORD PTR [edx-0x71697af6],ebp
  4284ca:	push   ebx
  4284cb:	or     DWORD PTR [edx],0xffffffbe
  4284ce:	ins    BYTE PTR es:[edi],dx
  4284cf:	add    DWORD PTR [ebx],edx
  4284d1:	scas   al,BYTE PTR es:[edi]
  4284d2:	add    DWORD PTR [edx+esi*2-0x51],0xffffff81
  4284d7:	or     BYTE PTR [ebp-0x55],ah
  4284da:	lea    edx,[edx+esi*2+0x73]
  4284de:	dec    esp
  4284df:	push   ebx
  4284e0:	ds push ss
  4284e2:	lea    eax,[eax-0x6a]
  4284e5:	stos   DWORD PTR es:[edi],eax
  4284e6:	not    DWORD PTR [ecx+0x66]
  4284e9:	pop    esi
  4284ea:	shl    DWORD PTR [ebp-0x47],0xa1
  4284ee:	jnp    0x42856c
  4284f0:	and    cl,BYTE PTR [edx+0x46a7502]
  4284f6:	inc    ebp
  4284f7:	and    al,0x2f
  4284f9:	lods   eax,DWORD PTR ds:[esi]
  4284fa:	daa    
  4284fb:	mov    edi,0x38dc88e3
  428500:	aaa    
  428501:	inc    ecx
  428502:	repz dec edi
  428504:	mov    ah,0x39
  428506:	sbb    bl,BYTE PTR [eax]
  428508:	mov    ah,0x85
  42850a:	jg     0x4284d4
  42850c:	cmp    BYTE PTR ds:0xb8316ced,bl
  428512:	js     0x428558
  428514:	push   ebx
  428515:	gs into 
  428517:	cli    
  428518:	cmp    dh,BYTE PTR ds:0x400f
  42851e:	das    
  42851f:	cld    
  428520:	mov    ecx,0xf60c5b23
  428525:	dec    edi
  428526:	or     BYTE PTR [esi-0xa],ah
  428529:	xchg   BYTE PTR [ebx-0x6f],ch
  42852c:	push   es
  42852d:	xchg   DWORD PTR [edi],esp
  42852f:	arpl   WORD PTR gs:[ecx+0x27],dx
  428533:	hlt    
  428534:	shl    BYTE PTR [ebx],0x4b
  428537:	jae    0x4284ba
  428539:	inc    esp
  42853a:	or     eax,DWORD PTR [ecx-0x26940506]
  428540:	sbb    BYTE PTR [ebx],cl
  428542:	stos   BYTE PTR es:[edi],al
  428543:	ds arpl bx,di
  428546:	enter  0xf0f1,0x23
  42854a:	pop    es
  42854b:	popf   
  42854c:	add    al,0x7e
  42854e:	das    
  42854f:	jne    0x4285c4
  428551:	je     0x42855e
  428553:	xchg   ebp,eax
  428554:	push   esi
  428555:	pop    es
  428556:	in     eax,0x5e
  428558:	mov    DWORD PTR fs:[ebx],eax
  42855b:	xchg   ecx,eax
  42855c:	push   ss
  42855d:	xchg   DWORD PTR [ecx+0x37],edi
  428560:	shl    DWORD PTR [ebx],0x4f
  428563:	jne    0x4285dd
  428565:	inc    eax
  428566:	das    
  428567:	ins    DWORD PTR es:[edi],dx
  428568:	out    dx,eax
  428569:	add    BYTE PTR fs:[edi],0x81
  42856d:	rol    BYTE PTR [ebx],0x41
  428570:	jns    0x4285b6
  428572:	dec    ebx
  428573:	fimul  WORD PTR [edi]
  428575:	jns    0x4285ae
  428577:	push   ecx
  428578:	mov    ah,0x1f
  42857a:	aas    
  42857b:	sub    al,0xb8
  42857d:	fs (bad) 
  42857f:	mov    ebp,0x4464
  428584:	fcmovbe st,st(2)
  428586:	leave  
  428587:	or     bl,0xb9
  42858a:	xlat   BYTE PTR ds:[ebx]
  42858b:	fs xor al,0x6a
  42858e:	sub    BYTE PTR [ecx+0x39],bl
  428591:	int3   
  428592:	daa    
  428593:	sub    BYTE PTR [edi+0x9],0xf0
  428597:	cmp    al,0x73
  428599:	ret    0x2d7
  42859c:	das    
  42859d:	fsubrp st(7),st
  42859f:	jbe    0x428544
  4285a1:	ret    0x5bc7
  4285a4:	cmp    BYTE PTR [ebx],al
  4285a6:	add    esp,DWORD PTR [ebp-0x50]
  4285a9:	sub    al,ah
  4285ab:	fild   DWORD PTR [ecx]
  4285ad:	sub    cl,ah
  4285af:	(bad)  
  4285b0:	mov    cl,0x22
  4285b2:	(bad)  
  4285b3:	shl    DWORD PTR [ebx-0x480416e6],cl
  4285b9:	sbb    al,BYTE PTR [esp+ecx*1]
  4285bc:	stos   BYTE PTR es:[edi],al
  4285bd:	cdq    
  4285be:	pop    ebp
  4285bf:	add    BYTE PTR [eax],cl
  4285c1:	jge    0x428582
  4285c3:	xlat   BYTE PTR ds:[ebx]
  4285c4:	test   eax,0x4a79d0a1
  4285c9:	jl     0x428586
  4285cb:	js     0x428594
  4285cd:	arpl   WORD PTR [ebx+0x246955ef],si
  4285d3:	and    bh,bh
  4285d5:	push   0x1e3eb7dd
  4285da:	call   0xaa217259
  4285df:	cld    
  4285e0:	das    
  4285e1:	push   0x65ff2024
  4285e6:	sub    edi,edi
  4285e8:	add    BYTE PTR [eax],al
  4285ea:	mov    dl,0x22
  4285ec:	(bad)  
  4285ed:	(bad)  
  4285ee:	test   al,0x25
  4285f0:	add    edi,ebp
  4285f2:	mul    BYTE PTR [ecx]
  4285f4:	and    eax,0x220f301
  4285f9:	neg    BYTE PTR [edx-0x3446fbdf]
  4285ff:	icebp  
  428600:	and    al,0xa5
  428602:	loope  0x42861c
  428604:	or     DWORD PTR [edx+0x7f0a8fcb],edi
  42860a:	mov    esp,edx
  42860c:	std    
  42860d:	and    BYTE PTR [ebx],bh
  42860f:	das    
  428610:	inc    edx
  428611:	out    dx,eax
  428612:	pop    esp
  428613:	js     0x42868a
  428615:	add    eax,0x3ffa2c4f
  42861a:	and    ebp,DWORD PTR [edi]
  42861c:	inc    edx
  42861d:	out    0xfc,al
  42861f:	out    0xb2,eax
  428621:	scas   al,BYTE PTR es:[edi]
  428622:	sbb    bh,BYTE PTR [eax+0x75]
  428625:	lds    ecx,FWORD PTR [eax]
  428627:	jl     0x4285e8
  428629:	cdq    
  42862a:	xchg   ebx,eax
  42862b:	nop
  42862c:	xchg   BYTE PTR [ebp+0x2d7dba20],bl
  428632:	sbb    BYTE PTR [ebx+0x75],ch
  428635:	lds    esi,FWORD PTR [esp+eax*4+0x794d5542]
  42863c:	mov    WORD PTR [ebp+0x17],ss
  42863f:	adc    ch,cl
  428641:	pop    ss
  428642:	fbstp  TBYTE PTR [esi-0x6]
  428645:	pop    esp
  428646:	test   eax,0xa26d160
  42864c:	sti    
  42864d:	mov    esi,0x22b00000
  428652:	or     DWORD PTR [eax-0x45],esp
  428655:	arpl   dx,ax
  428657:	push   cs
  428658:	in     eax,dx
  428659:	adc    eax,DWORD PTR [esi+0x53a6e8c]
  42865f:	jmp    0x6b2fea4b
  428664:	pop    ds
  428665:	mov    esi,0xbaa03652
  42866a:	fadd   QWORD PTR [eax]
  42866c:	push   0xffffffa0
  42866e:	cli    
  42866f:	xor    bh,al
  428671:	mov    edi,esi
  428673:	add    al,0x86
  428675:	loopne 0x4286d9
  428677:	call   FWORD PTR [eax]
  428679:	add    DWORD PTR [eax+ecx*1+0x7c],esi
  42867d:	loope  0x428674
  42867f:	adc    eax,0x3a75d6
  428684:	iret   
  428685:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428686:	test   BYTE PTR [ebx+0x2374e2fe],0xbd
  42868d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42868e:	neg    BYTE PTR [edi-0x60]
  428691:	sub    DWORD PTR [ebx+0x7c634604],edi
  428697:	in     al,0x54
  428699:	xchg   esp,eax
  42869a:	icebp  
  42869b:	(bad)  
  42869c:	(bad)  
  42869e:	push   eax
  42869f:	call   FWORD PTR [ebx]
  4286a1:	dec    esp
  4286a2:	adc    eax,0x444f0640
  4286a7:	loopne 0x42867f
  4286a9:	add    BYTE PTR [esp+eax*4],dl
  4286ac:	jmp    0x5036:0x1769fa9f
  4286b3:	push   esi
  4286b4:	add    BYTE PTR [eax],al
  4286b6:	xchg   ebx,eax
  4286b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4286b8:	ficom  DWORD PTR [eax+0x1]
  4286bb:	mov    ecx,0xb78bc083
  4286c0:	loope  0x428673
  4286c2:	add    DWORD PTR [esi+ebx*1+0x22770104],edx
  4286c9:	adc    DWORD PTR [esi],eax
  4286cb:	loop   0x4286c2
  4286cd:	and    eax,0x3a7196
  4286d2:	adc    DWORD PTR [ebx-0x1d93fbe2],0x6fc60068
  4286dc:	cli    
  4286dd:	(bad)  
  4286de:	stos   DWORD PTR es:[edi],eax
  4286df:	pop    ds
  4286e0:	adc    BYTE PTR [eax-0x6a],al
  4286e3:	shl    WORD PTR [edi+ebp*1-0x80],0xae
  4286e9:	cli    
  4286ea:	cmp    al,BYTE PTR [ebp-0xc]
  4286ed:	aas    
  4286ee:	das    
  4286ef:	mov    ch,0x4
  4286f1:	out    0x2d,eax
  4286f3:	aaa    
  4286f4:	ds mov esi,0x86b98533
  4286fa:	add    DWORD PTR [eax],0xffffffc9
  4286fd:	or     ebp,DWORD PTR [esi+0x60fe0611]
  428703:	test   DWORD PTR [eax+0x1316a452],edi
  428709:	sti    
  42870a:	sbb    al,0xbe
  42870c:	push   edi
  42870d:	add    BYTE PTR [edi],bl
  42870f:	cmp    DWORD PTR [ecx],esp
  428711:	jg     0x428782
  428713:	jmp    0x7d0581cc
  428718:	xchg   ecx,eax
  428719:	test   DWORD PTR [eax],eax
  42871b:	add    BYTE PTR [edi],dh
  42871d:	retf   0xfb5e
  428720:	jg     0x4286ef
  428722:	je     0x428773
  428724:	and    esp,ebx
  428726:	mov    al,al
  428728:	mov    ds:0x2b728b48,eax
  42872d:	mov    fs,eax
  42872f:	jno    0x338512b5
  428735:	jl     0x42874a
  428737:	mov    eax,0xfd5601aa
  42873c:	lock mov esp,DWORD PTR [edi+0x7e]
  428740:	test   DWORD PTR [ebp+0x10ef84fe],eax
  428746:	daa    
  428747:	inc    ebx
  428748:	adc    al,0x13
  42874a:	cmc    
  42874b:	ins    DWORD PTR es:[edi],dx
  42874c:	retf   0x2d1e
  42874f:	pop    ecx
  428750:	pop    esi
  428751:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428752:	adc    cl,BYTE PTR [edx+eiz*8]
  428755:	mov    DWORD PTR [ebx+edi*8],0x3ff35522
  42875c:	das    
  42875d:	xor    al,0x3d
  42875f:	pop    ss
  428760:	outs   dx,DWORD PTR ds:[esi]
  428761:	frstor [esi+0x64]
  428764:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428765:	pop    esi
  428766:	test   al,0x6
  428768:	hlt    
  428769:	sbb    esp,DWORD PTR [ecx-0x2921d8ba]
  42876f:	inc    ebx
  428770:	out    dx,eax
  428771:	xchg   BYTE PTR [ebp+0x61],bh
  428774:	sti    
  428775:	shr    edi,0x8c
  428778:	out    0xe5,al
  42877a:	jb     0x428754
  42877c:	dec    esp
  42877d:	out    0x5e,al
  42877f:	add    eax,DWORD PTR [eax]
  428781:	add    BYTE PTR [ebp+ecx*1-0x10],ah
  428785:	adc    BYTE PTR [ebp+0x403c539d],bl
  42878b:	sahf   
  42878c:	addr16 fs push ebp
  42878f:	pop    esi
  428790:	sub    BYTE PTR [esi],al
  428792:	mov    ebp,esp
  428794:	out    0x59,eax
  428796:	jmp    0x428759
  428798:	jecxz  0x42879c
  42879a:	frstor [esi+0x39]
  42879d:	dec    ecx
  42879e:	sub    eax,0x28c39a7a
  4287a3:	out    dx,al
  4287a4:	jmp    0x9fc89062
  4287a9:	popa   
  4287aa:	adc    al,0x66
  4287ac:	sub    al,dl
  4287ae:	shl    dl,cl
  4287b0:	out    0xb9,eax
  4287b2:	mov    cl,0x6f
  4287b4:	outs   dx,DWORD PTR ds:[esi]
  4287b5:	shr    BYTE PTR [ecx+eiz*4],cl
  4287b8:	loop   0x428811
  4287ba:	stos   DWORD PTR es:[edi],eax
  4287bb:	push   ds
  4287bc:	call   0xe2356e47
  4287c1:	mov    WORD PTR [esi],gs
  4287c3:	add    al,0xe9
  4287c5:	pusha  
  4287c6:	aas    
  4287c7:	imul   ebp,DWORD PTR [edx],0xc
  4287ca:	(bad)  
  4287cb:	(bad)  
  4287cc:	call   0x24b2b6d4
  4287d1:	sub    BYTE PTR [edi],dh
  4287d3:	fild   QWORD PTR [edx+0x286b1309]
  4287d9:	add    al,0x43
  4287db:	loopne 0x4287dd
  4287dd:	pop    ds
  4287de:	inc    ebx
  4287df:	xor    dh,BYTE PTR [esi-0x51]
  4287e2:	punpcklwd mm0,mm3
  4287e5:	inc    edi
  4287e6:	add    BYTE PTR [eax],al
  4287e8:	jmp    0x68b488ce
  4287ed:	mov    ebp,0x81d53a04
  4287f2:	sti    
  4287f3:	mov    edi,0xa984750f
  4287f8:	pop    eax
  4287f9:	mov    ebx,0xea50f5f9
  4287fe:	call   0xfaba15a2
  428803:	bound  esp,QWORD PTR [ebx+eiz*2]
  428806:	(bad)  
  428807:	fnstsw WORD PTR [ebx]
  428809:	sub    edx,edi
  42880b:	hlt    
  42880c:	mov    ah,0xe9
  42880e:	inc    eax
  42880f:	jmp    0x5c53a5b7
  428814:	xor    BYTE PTR [ebx+0x5],ah
  428817:	jmp    0xb6ce6648
  42881c:	sub    BYTE PTR [esi],cl
  42881e:	jmp    0xfab9da53
  428823:	gs ins BYTE PTR es:[edi],dx
  428825:	repnz or DWORD PTR [edx-0x9],esi
  428829:	call   0xd9e877b3
  42882e:	jg     0x428846
  428830:	out    0xe8,eax
  428832:	mov    al,0xe8
  428834:	fwait
  428835:	out    0x4d,al
  428837:	adc    ecx,eax
  428839:	out    dx,eax
  42883a:	cli    
  42883b:	(bad)  
  42883c:	and    ebx,DWORD PTR [esi-0x1d956da5]
  428842:	add    BYTE PTR [ecx],dh
  428844:	push   esi
  428845:	into   
  428846:	ret    0x6c95
  428849:	adc    eax,DWORD PTR [esi-0x53ffff33]
  42884f:	cmp    ecx,0x2dc25f6a
  428855:	test   eax,0x860e7c
  42885a:	xchg   DWORD PTR [edx+0x45],ebp
  42885d:	and    al,0xe2
  42885f:	imul   eax,DWORD PTR [ebp+0x24],0x244569de
  428866:	jp     0x4288d1
  428868:	inc    ebp
  428869:	and    al,0x7e
  42886b:	arpl   WORD PTR [edi],di
  42886d:	add    al,0x61
  42886f:	imul   eax,DWORD PTR [ebp+0x24],0xffffff92
  428873:	test   BYTE PTR [edx-0x472369f5],dh
  428879:	jo     0x4288dc
  42887b:	fadd   QWORD PTR [eax]
  42887d:	(bad)  
  42887e:	push   edx
  42887f:	(bad)  
  428880:	adc    BYTE PTR [ebx+ecx*1],bl
  428883:	mov    ds:0xc06288fa,al
  428888:	adc    al,0xe8
  42888a:	test   DWORD PTR [edx],esi
  42888c:	clc    
  42888d:	(bad)  
  42888e:	fnstsw WORD PTR [esi-0x2379ed30]
  428894:	push   eax
  428895:	jmp    DWORD PTR [ebx]
  428897:	into   
  428898:	fild   DWORD PTR [ebx+0x56]
  42889b:	pop    ss
  42889c:	into   
  42889d:	mov    ebx,0xe144
  4288a2:	in     eax,dx
  4288a3:	xlat   BYTE PTR ds:[ebx]
  4288a4:	or     DWORD PTR [esi+0x12],0xe28d0065
  4288ab:	mov    edi,0x32395218
  4288b0:	inc    BYTE PTR [ebx-0x69ba0000]
  4288b6:	xor    edi,edi
  4288b8:	mov    ds:0xd28d1cbf,al
  4288bd:	mov    edi,0xbfca8d10
  4288c2:	sbb    al,0x89
  4288c4:	ret    0x1cbf
  4288c7:	call   0x3a3165
  4288cc:	jle    0x428928
  4288ce:	add    al,BYTE PTR [eax]
  4288d0:	(bad)  
  4288d1:	push   ebx
  4288d2:	jno    0x4288eb
  4288d4:	das    
  4288d5:	test   esi,edi
  4288d7:	out    0x17,eax
  4288d9:	scas   eax,DWORD PTR es:[edi]
  4288da:	pop    edx
  4288db:	sti    
  4288dc:	pop    edi
  4288dd:	mov    al,ds:0xc4da0c19
  4288e2:	add    al,0xfb
  4288e4:	fsubr  DWORD PTR [edi+edi*1+0x74]
  4288e8:	jmp    0xb49943d5
  4288ed:	push   0xffffffc1
  4288ef:	mov    esi,0xc354ec01
  4288f4:	sub    DWORD PTR [ebp+0x5d2f4091],eax
  4288fa:	out    dx,al
  4288fb:	inc    DWORD PTR [eax+0x33725b85]
  428901:	inc    eax
  428902:	add    al,0x10
  428904:	mov    ds:0xbce804c5,al
  428909:	imul   ebx,DWORD PTR [ebx+edi*8+0x1],0xffffffc4
  42890e:	mov    bl,0x86
  428910:	pop    esi
  428911:	add    eax,0x992f0bdc
  428916:	clc    
  428917:	push   edx
  428918:	add    BYTE PTR [eax],al
  42891a:	cld    
  42891b:	daa    
  42891c:	sbb    eax,0xf537377a
  428921:	xchg   cl,dh
  428923:	sbb    BYTE PTR [ebx+0x34],0x77
  428927:	sbb    eax,0xc82975d9
  42892c:	ret    0xa136
  42892f:	ins    DWORD PTR es:[edi],dx
  428930:	shr    dl,1
  428932:	js     0x42890c
  428934:	rol    DWORD PTR [ebx],cl
  428936:	pop    es
  428937:	addr16 fdivr st,st(1)
  42893a:	or     BYTE PTR [esp+eiz*8],al
  42893d:	add    ebp,DWORD PTR [edi]
  42893f:	add    al,0xe4
  428941:	pop    es
  428942:	das    
  428943:	push   edi
  428944:	aas    
  428945:	push   edx
  428946:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428947:	jne    0x4289c8
  428949:	jp     0x428986
  42894b:	test   DWORD PTR [ebx+0xbde6386],esi
  428951:	adc    BYTE PTR [ebx-0x34],ah
  428954:	outs   dx,BYTE PTR ds:[esi]
  428955:	(bad)  
  428956:	sub    al,0x77
  428958:	sbb    al,0x9c
  42895a:	xlat   BYTE PTR ds:[ebx]
  42895b:	sbb    cl,BYTE PTR [esi+0x5e]
  42895e:	les    esp,FWORD PTR [edx+0x2a]
  428961:	or     BYTE PTR [eax],bh
  428963:	ret    0x47f
  428966:	pop    esp
  428967:	arpl   WORD PTR [edx-0x54b1f394],sp
  42896d:	pop    ebp
  42896e:	add    al,0x18
  428970:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428971:	or     BYTE PTR [edi],ch
  428973:	or     ebp,DWORD PTR [edi-0x40]
  428976:	dec    esp
  428977:	out    0x39,al
  428979:	mov    DWORD PTR [esi-0x4e],edi
  42897c:	sub    DWORD PTR [eax+eax*1],ecx
  42897f:	add    BYTE PTR [eax],dl
  428981:	mov    ebx,0xde24de67
  428986:	repz neg ch
  428989:	bound  ebp,QWORD PTR [edi-0x77]
  42898c:	in     eax,dx
  42898d:	loope  0x4289f9
  42898f:	sbb    BYTE PTR [edi+0x56d9f285],ah
  428995:	jbe    0x42893a
  428997:	sbb    ch,dl
  428999:	in     eax,0xd5
  42899b:	ins    BYTE PTR es:[edi],dx
  42899c:	in     al,0xa
  42899e:	pop    edi
  42899f:	dec    esi
  4289a0:	push   edi
  4289a1:	in     al,dx
  4289a2:	push   edi
  4289a3:	pop    ebp
  4289a4:	xor    al,0x17
  4289a6:	lahf   
  4289a7:	inc    ecx
  4289a8:	sub    ebx,esi
  4289aa:	cdq    
  4289ab:	mov    BYTE PTR [esi],bl
  4289ad:	xchg   DWORD PTR [edi+0x1a76245c],esp
  4289b3:	enter  0xe64c,0xe8
  4289b7:	xlat   BYTE PTR ds:[ebx]
  4289b8:	cs or  al,0x0
  4289bb:	xchg   BYTE PTR [si+0xb],dh
  4289bf:	mov    ebp,ebp
  4289c1:	adc    al,0x26
  4289c3:	or     BYTE PTR [edi],ch
  4289c5:	push   es
  4289c6:	or     al,BYTE PTR [ebx]
  4289c8:	das    
  4289c9:	fiadd  WORD PTR [eax]
  4289cb:	add    esp,0x9ae93e8c
  4289d1:	js     0x4289e7
  4289d3:	xor    eax,0x6a00b5e1
  4289d8:	push   0x6ec152e2
  4289dd:	je     0x4289d9
  4289df:	jmp    0x1d012a9b
  4289e4:	add    BYTE PTR [eax],al
  4289e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4289e7:	cmp    BYTE PTR [esi-0x33],0x4
  4289eb:	and    eax,0xdf1a7652
  4289f0:	add    cl,ch
  4289f2:	(bad)  
  4289f4:	add    BYTE PTR [edi],bh
  4289f6:	cli    
  4289f7:	retf   0xf750
  4289fa:	ins    BYTE PTR es:[edi],dx
  4289fb:	jne    0x428a7c
  4289fd:	lods   eax,DWORD PTR ds:[esi]
  4289fe:	cmp    BYTE PTR [ebx+0x43],ah
  428a01:	in     eax,0xbc
  428a03:	cmp    dx,WORD PTR [ecx+0x7efb5a44]
  428a0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428a0b:	sbb    ecx,DWORD PTR [ecx]
  428a0d:	pusha  
  428a0e:	jb     0x428a09
  428a10:	mov    esp,DWORD PTR [edi-0x54]
  428a13:	fiadd  WORD PTR [eax]
  428a15:	jmp    0x8b0507b6
  428a1a:	repz js 0x428a84
  428a1d:	jmp    0xa4ce4778
  428a22:	add    al,0xe
  428a24:	jmp    0xfaba0c1c
  428a29:	rol    DWORD PTR [ebx+eiz*2],cl
  428a2c:	dec    esp
  428a2d:	adc    DWORD PTR [ecx+0x2ce9915f],edi
  428a33:	fimul  WORD PTR [edi+0x11]
  428a36:	dec    ebp
  428a37:	mov    al,ds:0x78b31efa
  428a3c:	cli    
  428a3d:	jmp    0x6242866e
  428a42:	imul   eax,DWORD PTR [esi+0x129a00c5],0xfffffff6
  428a49:	sldt   WORD PTR [eax]
  428a4c:	cmp    DWORD PTR [ecx+0x1a4d0162],edi
  428a52:	shl    bl,0x6
  428a55:	or     DWORD PTR [esp+edx*2-0x48f9e730],esi
  428a5c:	xchg   ah,ah
  428a5e:	mov    ecx,0x5889
  428a63:	add    dh,dl
  428a65:	add    BYTE PTR [ecx],0x8b
  428a68:	mov    DWORD PTR [ecx],eax
  428a6a:	mov    al,ds:0x6187054
  428a6f:	mov    bh,0xbe
  428a71:	add    DWORD PTR [ecx],0xffffff8b
  428a74:	leave  
  428a75:	sbb    bl,dl
  428a77:	adc    BYTE PTR [esi-0x4e01ab15],bh
  428a7d:	call   0x1bd04b2f
  428a82:	push   esi
  428a83:	mov    DWORD PTR [eax],ecx
  428a85:	add    al,0x0
  428a87:	add    BYTE PTR [esi-0x40a4409d],al
  428a8d:	sbb    eax,DWORD PTR ds:0xed654b00
  428a93:	push   ecx
  428a94:	cmp    DWORD PTR [ecx-0x19],ebx
  428a97:	add    DWORD PTR [esi-0x20],eax
  428a9a:	dec    ebp
  428a9b:	push   0x46
  428a9d:	sub    esi,edi
  428a9f:	adc    eax,0x3a6e86
  428aa4:	aad    0x1d
  428aa6:	or     eax,0x4a9c888d
  428aab:	push   0x32
  428aad:	popa   
  428aae:	xor    bl,BYTE PTR [edi+0x0]
  428ab1:	add    BYTE PTR [ebx+0x498afea3],dl
  428ab7:	add    bl,ah
  428ab9:	sub    al,0x51
  428abb:	pop    ss
  428abc:	add    BYTE PTR [esi+0xda4a],0x2f
  428ac3:	add    BYTE PTR [eax],bl
  428ac5:	dec    esp
  428ac6:	sbb    DWORD PTR [ebp-0x2],eax
  428ac9:	mov    BYTE PTR [ecx+ebx*2-0x14],ch
  428acd:	cpuid  
  428acf:	sti    
  428ad0:	dec    esp
  428ad1:	add    BYTE PTR [edi],ch
  428ad3:	test   DWORD PTR [esi+0x505ac8c],ebp
  428ad9:	add    BYTE PTR [edi],ch
  428adb:	mov    ch,0x55
  428add:	rol    DWORD PTR [edi-0x79],cl
  428ae0:	add    eax,0x7ffa2f00
  428ae5:	fsubr  DWORD PTR [edi]
  428ae7:	test   esi,edi
  428ae9:	dec    edi
  428aea:	stos   BYTE PTR es:[edi],al
  428aeb:	or     BYTE PTR [esi+0x0],ch
  428aee:	das    
  428aef:	test   DWORD PTR [esi+0x3a0880fa],ebp
  428af5:	sbb    BYTE PTR [eax-0x67009e15],ah
  428afb:	test   DWORD PTR [ecx-0x177747e],ecx
  428b01:	(bad)  
  428b02:	(bad)  
  428b04:	jg     0x428ae2
  428b06:	cs test esi,edi
  428b09:	dec    edi
  428b0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428b0b:	pusha  
  428b0c:	data16 loopne 0x428b3d
  428b0f:	test   esi,edi
  428b11:	cli    
  428b12:	mov    eax,ds:0x7d
  428b17:	add    BYTE PTR [edi],ch
  428b19:	adc    al,BYTE PTR [eax-0x17acf00]
  428b1f:	dec    edi
  428b20:	mov    ds:0x48ff55fb,al
  428b25:	test   DWORD PTR [esi-0x178ee19],ebp
  428b2b:	jmp    FWORD PTR [edx+0x2f01ea03]
  428b31:	test   DWORD PTR [esi+0x7f1cec86],ebp
  428b37:	(bad)  
  428b38:	and    BYTE PTR [ebp-0x21e70469],al
  428b3e:	out    0x3,eax
  428b40:	mov    ebp,ebx
  428b42:	outs   dx,BYTE PTR ds:[esi]
  428b43:	inc    edx
  428b44:	pop    ss
  428b45:	mov    ds:0xe30459b7,al
  428b4a:	push   edx
  428b4b:	inc    ebx
  428b4c:	out    dx,al
  428b4d:	jge    0x428b27
  428b4f:	mov    WORD PTR [edx+0x72],gs
  428b52:	mov    es,WORD PTR [eax+esi*4]
  428b55:	call   0x9eb:0x74709d00
  428b5c:	pushf  
  428b5d:	popf   
  428b5e:	out    dx,eax
  428b5f:	mov    esi,0x857112d4
  428b64:	int    0xdc
  428b66:	out    0x3,eax
  428b68:	test   al,0x5b
  428b6a:	in     al,dx
  428b6b:	or     ebp,DWORD PTR [edi]
  428b6d:	fidiv  WORD PTR [eax-0x7b]
  428b70:	leave  
  428b71:	fsubr  st(7),st
  428b73:	add    esi,DWORD PTR [eax-0x5ba5e62]
  428b79:	data16 cmp al,0x20
  428b7c:	add    BYTE PTR [eax],al
  428b7e:	daa    
  428b7f:	or     al,0x3b
  428b81:	xchg   edx,ebp
  428b83:	fnstenv [edi]
  428b85:	out    dx,al
  428b86:	inc    esp
  428b87:	adc    esp,DWORD PTR [ebp-0x33]
  428b8a:	hlt    
  428b8b:	mov    ds:0x82c22a6c,ax
  428b91:	pop    ecx
  428b92:	test   al,0x18
  428b94:	cld    
  428b95:	mov    WORD PTR [edx],gs
  428b97:	and    bl,dl
  428b99:	ret    
  428b9a:	pusha  
  428b9b:	gs addr16 inc eax
  428b9e:	das    
  428b9f:	fsubrp st(7),st
  428ba1:	in     eax,dx
  428ba2:	and    BYTE PTR [ecx+0x65],ah
  428ba5:	test   BYTE PTR [edi],ch
  428ba7:	fsubrp st(7),st
  428ba9:	mov    bl,0xb3
  428bab:	pop    esi
  428bac:	and    BYTE PTR [edi+ebp*1],al
  428baf:	ficom  WORD PTR [edi-0x19faa3a8]
  428bb5:	add    ch,BYTE PTR [edi]
  428bb7:	fiadd  WORD PTR [eax]
  428bb9:	mov    al,fs:0x2ce9014e
  428bbf:	push   cs
  428bc0:	mov    WORD PTR [edx+0x53],gs
  428bc3:	fiadd  WORD PTR [eax]
  428bc5:	jmp    0x6b150086
  428bca:	outs   dx,DWORD PTR ds:[esi]
  428bcb:	(bad)  
  428bcc:	push   0xde2de5
  428bd1:	je     0x428c43
  428bd3:	pusha  
  428bd4:	add    cl,ch
  428bd6:	sub    al,0xe
  428bd8:	mov    WORD PTR [edx],?
  428bda:	daa    
  428bdb:	fild   WORD PTR [eax]
  428bdd:	jmp    0xb1c1fdac
  428be2:	add    BYTE PTR [eax],al
  428be4:	ja     0x428b6c
  428be6:	and    bh,BYTE PTR ds:0x6c867565
  428bec:	xchg   esi,eax
  428bed:	fild   WORD PTR [eax]
  428bef:	jmp    0xeb2f7d99
  428bf4:	sub    al,0xde
  428bf6:	data16 icebp 
  428bf8:	mov    cl,0x5b
  428bfa:	mov    ds:0x50de2ce8,eax
  428bff:	pop    esp
  428c00:	mov    bl,0x7a
  428c02:	(bad)  
  428c03:	call   0xb73c9a34
  428c08:	mov    bl,0x9a
  428c0a:	or     eax,0xdf2f01
  428c0f:	jmp    0xe8f1e7c5
  428c14:	sub    al,0xde
  428c16:	push   eax
  428c17:	ins    BYTE PTR es:[edi],dx
  428c18:	ret    
  428c19:	jbe    0x428c19
  428c1b:	call   0x6a43844c
  428c20:	in     al,0x74
  428c22:	jmp    0xfaba1f7a
  428c27:	jb     0x428bf2
  428c29:	mov    ds:0x672ce900,eax
  428c2e:	jle    0x428c11
  428c30:	fiadd  WORD PTR cs:[eax]
  428c33:	add    BYTE PTR [ebp+eiz*8-0x75],bl
  428c37:	test   DWORD PTR [eax-0x24],edx
  428c3a:	add    BYTE PTR [eax],al
  428c3c:	(bad)  
  428c3d:	push   edi
  428c3e:	jp     0x428c40
  428c40:	adc    ch,bl
  428c42:	add    BYTE PTR [eax+0x49],dl
  428c45:	scas   al,BYTE PTR es:[edi]
  428c46:	jns    0x428c0c
  428c48:	add    BYTE PTR [eax],al
  428c4a:	sbb    al,BYTE PTR [ebp-0x22e9ff02]
  428c50:	mov    eax,DWORD PTR [ebp+0xdc34]
  428c56:	xchg   esi,eax
  428c57:	push   edi
  428c58:	stos   BYTE PTR es:[edi],al
  428c59:	adc    al,0xd0
  428c5b:	fadd   QWORD PTR [eax]
  428c5d:	push   0xffffffd6
  428c5f:	pop    ecx
  428c60:	leave  
  428c61:	jmp    FWORD PTR [esi]
  428c63:	cmp    BYTE PTR [edx-0x2],dl
  428c66:	leave  
  428c67:	fs test dl,ch
  428c6a:	xlat   BYTE PTR ds:[ebx]
  428c6b:	fadd   QWORD PTR [eax]
  428c6d:	pop    edi
  428c6e:	clc    
  428c6f:	bound  edi,QWORD PTR [edx+0x1c]
  428c72:	into   
  428c73:	fadd   QWORD PTR [eax]
  428c75:	pop    ebp
  428c76:	test   ch,bl
  428c78:	add    BYTE PTR [ebp+0x1d],dl
  428c7b:	push   es
  428c7c:	sub    ah,0x8e
  428c7f:	fld    DWORD PTR [eax]
  428c81:	add    BYTE PTR ds:0xc9fef93f,al
  428c87:	or     BYTE PTR [ecx],al
  428c89:	add    eax,0xda06
  428c8e:	inc    esi
  428c8f:	addr16 test al,bh
  428c92:	test   al,0x8
  428c94:	imul   al
  428c96:	mov    dl,0xb0
  428c98:	cmc    
  428c99:	call   ebp
  428c9b:	xchg   esi,eax
  428c9c:	push   es
  428c9d:	add    BYTE PTR [edx+0x69],ah
  428ca0:	adc    DWORD PTR [ebp+0x7a],0x63
  428ca4:	dec    esp
  428ca5:	or     bl,bl
  428ca7:	pop    esi
  428ca8:	stc    
  428ca9:	(bad)  
  428caa:	jmp    0xa775b7
  428caf:	add    BYTE PTR [edi],ch
  428cb1:	ret    0xfb51
  428cb4:	les    cx,DWORD PTR [eax+eax*1]
  428cb8:	(bad)  
  428cba:	push   0x841e137f
  428cbf:	in     al,dx
  428cc0:	stos   DWORD PTR es:[edi],eax
  428cc1:	jg     0x428cc1
  428cc3:	inc    DWORD PTR [eax+0x3f249912]
  428cc9:	xchg   dh,bh
  428ccb:	call   DWORD PTR [edi]
  428ccd:	mov    esp,0x500fa7e
  428cd2:	loope  0x428cf7
  428cd4:	daa    
  428cd5:	test   DWORD PTR [ecx+0x1a64b84],ecx
  428cdb:	add    BYTE PTR [edi],ch
  428cdd:	push   ebp
  428cde:	mov    DWORD PTR [ebx+ecx*1+0x79],eax
  428ce2:	data16 out 0xec,al
  428ce5:	adc    BYTE PTR [ebx-0x79],0x62
  428ce9:	ins    DWORD PTR es:[edi],dx
  428cea:	cwde   
  428ceb:	jmp    0xe16b:0x8cfe852e
  428cf2:	or     al,0xe8
  428cf4:	(bad)  
  428cf7:	sti    
  428cf8:	push   eax
  428cf9:	in     al,dx
  428cfa:	pusha  
  428cfb:	pop    ebp
  428cfc:	ins    DWORD PTR es:[edi],dx
  428cfd:	jns    0x428cfd
  428cff:	xchg   bl,dh
  428d01:	loopne 0x428d03
  428d03:	dec    edi
  428d04:	add    DWORD PTR [edx],edx
  428d06:	mov    ecx,DWORD PTR [esi-0x18017ad2]
  428d0c:	xor    DWORD PTR [ebx+0x2c3cfb53],ecx
  428d12:	pop    ss
  428d13:	mov    edi,0xd0fb0000
  428d18:	lods   eax,DWORD PTR ds:[esi]
  428d19:	dec    esi
  428d1a:	add    eax,0x684fac91
  428d1f:	imul   ebx,DWORD PTR [edx],0x51d3fc20
  428d25:	adc    eax,0xffbe96b3
  428d2a:	adc    eax,0xfed526de
  428d2f:	pusha  
  428d30:	in     al,dx
  428d31:	adc    eax,DWORD PTR [edi]
  428d33:	adc    eax,0x5b2dcf53
  428d38:	push   eax
  428d39:	out    dx,eax
  428d3a:	mov    bl,0xc4
  428d3c:	outs   dx,DWORD PTR ds:[esi]
  428d3d:	cld    
  428d3e:	xchg   edx,eax
  428d3f:	out    0x3a,al
  428d41:	iret   
  428d42:	dec    esp
  428d43:	retf   0x7e64
  428d46:	int    0xdc
  428d48:	out    0x3,eax
  428d4a:	jg     0x428dbb
  428d4c:	std    
  428d4d:	(bad)  
  428d4e:	push   ds
  428d4f:	push   ds
  428d50:	call   0xc7fcf8df
  428d55:	mov    WORD PTR [edi+edi*1+0x5b2f03e9],gs
  428d5c:	sub    al,0x7
  428d5e:	lahf   
  428d5f:	fcomp  QWORD PTR [ecx-0x181e5d46]
  428d65:	adc    edi,ebp
  428d67:	xor    bl,0x89
  428d6a:	arpl   WORD PTR [edx+0x615eb0eb],di
  428d70:	xchg   ebx,eax
  428d71:	xchg   edx,eax
  428d72:	cs fsubrp st(7),st
  428d75:	imul   edx,DWORD PTR [esp+eax*8+0x55ca],0x0
  428d7d:	xchg   ebx,eax
  428d7e:	inc    DWORD PTR [eax+0x2b]
  428d81:	and    dl,BYTE PTR [edi]
  428d83:	mov    cl,0xa
  428d85:	retf   0xb419
  428d88:	xchg   ebp,eax
  428d89:	jmp    0xb22b191
  428d8e:	mov    ds:0x27ccacef,eax
  428d93:	add    al,0x38
  428d95:	fwait
  428d96:	adc    cl,BYTE PTR [esi]
  428d98:	stos   BYTE PTR es:[edi],al
  428d99:	loope  0x428d72
  428d9b:	sbb    edx,esi
  428d9d:	outs   dx,BYTE PTR ds:[esi]
  428d9e:	cld    
  428d9f:	cld    
  428da0:	jmp    0x1819621a
  428da5:	add    ax,dx
  428da8:	inc    esi
  428da9:	(bad)  
  428daa:	stc    
  428dab:	cmc    
  428dac:	xor    dl,cl
  428dae:	mov    ebp,DWORD PTR [esi+0x9]
  428db1:	fld    QWORD PTR [eax]
  428db3:	jmp    0xa5570134
  428db8:	dec    edx
  428db9:	scas   al,BYTE PTR es:[edi]
  428dba:	add    BYTE PTR [edx+0x6f],ah
  428dbd:	mov    edx,0x98aa7020
  428dc2:	add    cl,ch
  428dc4:	sub    al,0xed
  428dc6:	(bad)  
  428dc7:	in     eax,0xbc
  428dc9:	fistp  WORD PTR [edx-0x6e]
  428dcc:	outs   dx,BYTE PTR ds:[esi]
  428dcd:	fiadd  DWORD PTR [eax]
  428dcf:	fld    TBYTE PTR [ebp+eax*4-0xe]
  428dd3:	jb     0x428dcc
  428dd5:	rol    DWORD PTR [edx+edi*4],0xca
  428dd9:	pop    edx
  428dda:	mov    cl,0x3b
  428ddc:	sub    al,0xde
  428dde:	add    BYTE PTR [ecx],dl
  428de0:	add    BYTE PTR [eax],al
  428de2:	dec    ebx
  428de3:	mov    bh,0xf9
  428de5:	(bad)  
  428de6:	aas    
  428de7:	xchg   ebp,eax
  428de8:	ss sub dh,bh
  428deb:	mov    ecx,0xd1c69a4d
  428df0:	push   edx
  428df1:	cmp    DWORD PTR [edx-0xe],esp
  428df4:	and    al,0x9
  428df6:	jle    0x428e14
  428df8:	cli    
  428df9:	cld    
  428dfa:	cmp    bh,cl
  428dfc:	inc    eax
  428dfd:	jmp    0xdfbdbb19
  428e02:	mov    cl,0xda
  428e04:	xor    BYTE PTR [ecx],al
  428e06:	in     al,0x68
  428e08:	jne    0x428df8
  428e0a:	scas   eax,DWORD PTR es:[edi]
  428e0b:	adc    ax,0x242c
  428e0f:	push   esi
  428e10:	sbb    BYTE PTR [ecx+0x2d],bl
  428e13:	or     BYTE PTR [esi-0x55],dl
  428e16:	sub    BYTE PTR [ebp+0x30],0xa9
  428e1a:	pop    es
  428e1b:	jno    0x428e71
  428e1d:	bound  ecx,QWORD PTR [eax]
  428e1f:	sbb    eax,0xc68d002e
  428e24:	mov    ecx,0x4c56867d
  428e29:	or     al,0xae
  428e2b:	adc    DWORD PTR [ecx],ebp
  428e2d:	inc    ecx
  428e2f:	lds    edi,FWORD PTR [ecx-0x3f31a583]
  428e35:	jmp    0x428e69
  428e37:	das    
  428e38:	dec    ebx
  428e39:	call   FWORD PTR [ebx+0x71]
  428e3c:	push   eax
  428e3d:	push   eax
  428e3e:	loope  0x428ddb
  428e40:	push   es
  428e41:	push   ebx
  428e42:	jno    0x428de0
  428e44:	add    bh,bh
  428e46:	add    BYTE PTR [eax],al
  428e48:	sti    
  428e49:	in     al,dx
  428e4a:	cmovo  eax,DWORD PTR [esi]
  428e4d:	(bad)  
  428e4e:	mov    ecx,0x5bc86a7e
  428e53:	adc    al,dl
  428e55:	loope  0x428de2
  428e57:	or     al,0xe6
  428e59:	enter  0xff57,0x9a
  428e5d:	imul   esi,DWORD PTR [ebx],0xcc93f645
  428e63:	mov    bh,cl
  428e65:	and    eax,0xe0d2c25d
  428e6a:	push   ebx
  428e6b:	mov    esi,DWORD PTR [edx]
  428e6d:	push   esi
  428e6e:	inc    esp
  428e6f:	adc    BYTE PTR [eax-0x2eff9bc7],bh
  428e75:	xchg   BYTE PTR [esi],al
  428e77:	xor    ebx,eax
  428e79:	adc    BYTE PTR [eax+ecx*1-0x12],dh
  428e7d:	out    dx,eax
  428e7e:	cmc    
  428e7f:	jmp    ecx
  428e81:	in     al,dx
  428e82:	clc    
  428e83:	test   DWORD PTR [ecx-0x70],esi
  428e86:	(bad)  
  428e87:	xor    dl,dh
  428e89:	or     al,0x33
  428e8b:	inc    edi
  428e8c:	cmp    DWORD PTR [edx],ecx
  428e8e:	adc    eax,0x8210c075
  428e93:	lock sbb ecx,DWORD PTR [eax]
  428e96:	jne    0x428e87
  428e98:	std    
  428e99:	xchg   esi,eax
  428e9a:	or     dl,BYTE PTR [ebx+0x2f]
  428e9d:	lods   al,BYTE PTR ds:[esi]
  428e9e:	dec    ebp
  428e9f:	jne    0x428ec4
  428ea1:	or     ch,BYTE PTR [esi-0x9969706]
  428ea7:	out    0xdb,eax
  428ea9:	jmp    0x428ef8
  428eab:	sti    
  428eac:	add    BYTE PTR [eax],al
  428eae:	adc    al,0x38
  428eb0:	fld    DWORD PTR ds:0x74f45ef9
  428eb6:	dec    ecx
  428eb7:	add    edx,DWORD PTR [edx]
  428eb9:	rcl    BYTE PTR [edi+ebp*2+0x7b],0x45
  428ebe:	and    edi,edx
  428ec0:	inc    esp
  428ec1:	je     0x428ef0
  428ec3:	(bad)  
  428ec4:	in     al,dx
  428ec5:	xchg   cl,dh
  428ec7:	inc    eax
  428ec8:	scas   eax,DWORD PTR es:[edi]
  428ec9:	pop    ecx
  428eca:	xor    BYTE PTR [edi+0x83fff4],0x61
  428ed1:	jg     0x428ed6
  428ed3:	xchg   edx,eax
  428ed4:	and    DWORD PTR [ebp+0x3],0x76
  428ed8:	mov    bh,0x86
  428eda:	add    DWORD PTR [ecx+0x328fb89],0x752f006d
  428ee4:	and    DWORD PTR [ebp-0x19],0x75
  428ee8:	mov    bl,0x65
  428eea:	daa    
  428eeb:	inc    eax
  428eec:	inc    edi
  428eed:	inc    ebp
  428eee:	fbstp  TBYTE PTR [esi-0x2]
  428ef1:	jmp    FWORD PTR [edi]
  428ef3:	(bad)  
  428ef4:	scas   eax,DWORD PTR es:[edi]
  428ef5:	jmp    0x428eab
  428ef7:	jnp    0x428efc
  428ef9:	inc    ebp
  428efa:	(bad)  
  428efb:	lea    esi,[eax+0x5]
  428efe:	das    
  428eff:	jne    0x428e83
  428f01:	sar    BYTE PTR [edx],0x6d
  428f04:	jnp    0x428f4b
  428f06:	mov    ds:0x6be83ff0,eax
  428f0b:	cmp    esi,0x58c298ff
  428f11:	sti    
  428f12:	add    BYTE PTR [eax],al
  428f14:	loop   0x428f3a
  428f16:	sbb    eax,0xd0de9b5d
  428f1b:	mov    al,0x78
  428f1d:	ja     0x428f42
  428f1f:	jg     0x428f13
  428f21:	ins    DWORD PTR es:[edi],dx
  428f22:	popa   
  428f23:	enter  0xa774,0xa2
  428f27:	shr    BYTE PTR [ebx],1
  428f29:	push   edi
  428f2a:	add    eax,0x6ee4a860
  428f2f:	shl    BYTE PTR [eax+0x59],0x24
  428f33:	add    eax,0xb4d3f827
  428f38:	mov    ebx,0xf0fbeb22
  428f3d:	push   0xfffffff5
  428f3f:	mov    bh,0x1e
  428f41:	push   ds
  428f42:	call   0x651cfacd
  428f47:	inc    ebx
  428f48:	mov    ds:0x24c86edb,al
  428f4d:	push   edi
  428f4e:	sub    bl,BYTE PTR [ebx-0x52]
  428f51:	loope  0x428f3a
  428f53:	add    edx,DWORD PTR [ecx+ebx*1]
  428f56:	sub    al,0x1e
  428f58:	add    BYTE PTR [ebx-0x53],ch
  428f5b:	dec    edi
  428f5c:	test   al,0x20
  428f5e:	sbb    al,0x6
  428f60:	add    BYTE PTR [edi-0x5b8cf857],ah
  428f66:	or     ecx,eax
  428f68:	fcom   QWORD PTR [esi-0x7e]
  428f6b:	pop    es
  428f6c:	in     al,0x20
  428f6e:	clc    
  428f6f:	add    edi,DWORD PTR [edx+0x7a]
  428f72:	jmp    0x6ce76827
  428f77:	push   edi
  428f78:	add    BYTE PTR [eax],al
  428f7a:	xor    al,0x5a
  428f7c:	pop    edi
  428f7d:	push   ecx
  428f7e:	les    ebp,FWORD PTR [edx+0x3f]
  428f81:	mov    cl,0xe7
  428f83:	sahf   
  428f84:	cmp    bh,BYTE PTR [ebp-0x41]
  428f87:	push   esi
  428f88:	mov    ds:0xe7e1425c,eax
  428f8d:	add    ebp,DWORD PTR [ebx-0x540ecb63]
  428f93:	and    al,BYTE PTR [ecx]
  428f95:	loope  0x428f73
  428f97:	or     bl,0xe5
  428f9a:	sub    al,0xde
  428f9c:	sub    DWORD PTR [ecx-0x597a278c],0xfffffffa
  428fa3:	xchg   edi,eax
  428fa4:	jmp    0x120bbcf
  428fa9:	repz lock add edi,DWORD PTR gs:[edx-0x55a4e214]
  428fb2:	inc    edx
  428fb3:	sahf   
  428fb4:	pop    ebx
  428fb5:	stos   BYTE PTR es:[edi],al
  428fb6:	cwde   
  428fb7:	arpl   bp,bp
  428fb9:	sbb    BYTE PTR [edx+0x6874520c],al
  428fbf:	push   cx
  428fc1:	push   ecx
  428fc2:	jne    0x429011
  428fc4:	sti    
  428fc5:	push   esi
  428fc6:	mov    dl,0x65
  428fc8:	cs push edi
  428fca:	cmp    ah,BYTE PTR [ebp+esi*2+0x5]
  428fce:	mov    ds:0x6a6afd0b,al
  428fd3:	fistp  QWORD PTR [ebp+edi*8-0xe]
  428fd7:	loope  0x428fc1
  428fd9:	sbb    esp,edx
  428fdb:	addr16 cli 
  428fdd:	loop   0x428fdf
  428fdf:	add    BYTE PTR [esi-0xe],dh
  428fe2:	add    DWORD PTR [eax+0x23],esi
  428fe5:	push   edi
  428fe6:	jno    0x428fd5
  428fe8:	jae    0x429058
  428fea:	test   BYTE PTR [edi],dl
  428fec:	pop    es
  428fed:	enter  0xc787,0x65
  428ff1:	add    al,0x5
  428ff3:	adc    DWORD PTR ds:0xabf6fa64,ebx
  428ff9:	in     al,0x4
  428ffb:	call   0x203c73f9
  429000:	arpl   WORD PTR [edx+0xc5fdf6e],bx
  429006:	out    0xec,al
  429008:	xor    ebx,DWORD PTR [esi+eiz*8-0x457e181f]
  42900f:	add    BYTE PTR [ebp+0xc],ah
  429012:	div    BYTE PTR [ebx]
  429014:	(bad)  
  429015:	cs pop eax
  429017:	pop    ebx
  429018:	iret   
  429019:	and    al,BYTE PTR [edx+0x7ea9241]
  42901f:	push   ebx
  429020:	inc    eax
  429021:	daa    
  429022:	test   ecx,ecx
  429024:	and    dl,bl
  429026:	add    eax,0x12
  429029:	mov    edi,0xea7ec061
  42902e:	clc    
  42902f:	push   edi
  429030:	inc    edi
  429031:	or     al,BYTE PTR [ebx]
  429033:	je     0x42900d
  429035:	or     eax,0x6c3f082
  42903a:	je     0x429040
  42903c:	test   BYTE PTR ds:0x858027e2,bl
  429042:	nop
  429043:	add    BYTE PTR [eax],al
  429045:	add    BYTE PTR [esi-0x23],al
  429048:	add    edi,0xfe8937ee
  42904e:	jns    0x429077
  429050:	test   al,bl
  429052:	jle    0x428fec
  429054:	imul   edi,esi,0x59
  429057:	jmp    0x429012
  429059:	jmp    0x429063
  42905b:	mov    edi,edx
  42905d:	addr16 pusha 
  42905f:	fld    QWORD PTR [eax]
  429061:	add    ch,ah
  429063:	sbb    al,0xe9
  429065:	inc    ebx
  429066:	jg     0x429077
  429068:	neg    BYTE PTR [edi-0x48]
  42906b:	cmp    DWORD PTR [ebx+0x50094d55],edi
  429071:	push   ebx
  429072:	rcl    ecx,0xf5
  429075:	xor    ecx,DWORD PTR ds:0x9ffc7be4
  42907b:	mov    ?,esi
  42907d:	jge    0x42900a
  42907f:	jmp    0x7fd39382
  429084:	jnp    0x4290fe
  429086:	es loop 0x4290f7
  429089:	sbb    DWORD PTR [edi],ebp
  42908b:	sbb    eax,0x7a6f7f09
  429090:	scas   al,BYTE PTR es:[edi]
  429091:	cli    
  429092:	sbb    ch,BYTE PTR [edi+0x4b]
  429095:	adc    eax,0xffbe9103
  42909a:	lods   eax,DWORD PTR ds:[esi]
  42909b:	cmp    al,BYTE PTR [ecx]
  42909d:	test   DWORD PTR [edi-0x4f],ebp
  4290a0:	std    
  4290a1:	cli    
  4290a2:	jmp    0x77e:0x707ebe42
  4290a9:	pop    edx
  4290aa:	add    BYTE PTR [eax],al
  4290ac:	sub    edx,ebx
  4290ae:	sub    eax,0xaa5af287
  4290b3:	push   esi
  4290b4:	jbe    0x4290ea
  4290b6:	or     DWORD PTR [eax],eax
  4290b8:	add    ch,ah
  4290ba:	pusha  
  4290bb:	push   ecx
  4290bc:	cld    
  4290bd:	(bad)  
  4290be:	or     eax,0x7c4bfcfb
  4290c3:	jge    0x429108
  4290c5:	mov    ebp,0xd9b903ca
  4290ca:	jne    0x4290ce
  4290cc:	sub    al,0xb8
  4290ce:	loop   0x42914e
  4290d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4290d1:	rol    DWORD PTR [edx+esi*2],1
  4290d4:	inc    esi
  4290d5:	mov    ebp,esi
  4290d7:	jle    0x4290c8
  4290d9:	loope  0x42908f
  4290db:	cli    
  4290dc:	call   0xbe8f:0x63154b7d
  4290e3:	jmp    FWORD PTR [ebp-0x107aff47]
  4290e9:	push   edx
  4290ea:	(bad)  
  4290eb:	cli    
  4290ec:	push   0xffffffd1
  4290ee:	mov    ebp,0x78df07e
  4290f3:	pop    edx
  4290f4:	sub    esp,DWORD PTR [ecx+0x2f]
  4290f7:	xchg   DWORD PTR [edx+0x69],esi
  4290fa:	stos   DWORD PTR es:[edi],eax
  4290fb:	push   esi
  4290fc:	out    0xb3,al
  4290fe:	or     BYTE PTR [eax],al
  429100:	popa   
  429101:	push   eax
  429102:	ja     0x4290fc
  429104:	mov    dl,0xde
  429106:	sub    dh,al
  429108:	mov    cl,0x6d
  42910a:	cmp    BYTE PTR [esi+ecx*2+0x67],bl
  42910e:	ror    DWORD PTR [esi+0x0],cl
  429111:	add    BYTE PTR [eax],ch
  429113:	data16 out 0xd0,al
  429116:	xor    bl,BYTE PTR [ebx-0x55]
  429119:	daa    
  42911a:	cld    
  42911b:	jne    0x42917c
  42911d:	dec    esi
  42911e:	xchg   esp,eax
  42911f:	addr16 addr16 dec ebx
  429122:	mov    edx,ebp
  429124:	jecxz  0x429138
  429126:	outs   dx,DWORD PTR ds:[esi]
  429127:	jae    0x429110
  429129:	adc    ch,BYTE PTR [edi+0x1e]
  42912c:	cmp    ebp,DWORD PTR [esi+0x282c53b1]
  429132:	aaa    
  429133:	push   ebx
  429134:	sbb    al,0x28
  429136:	xor    edx,DWORD PTR [ebx+0x28]
  429139:	or     BYTE PTR [eax+0x6e0ae415],dh
  42913f:	icebp  
  429140:	out    0x12,al
  429142:	outs   dx,DWORD PTR ds:[esi]
  429143:	fwait
  429144:	iret   
  429145:	inc    ebx
  429146:	sar    BYTE PTR [ebp+0x62],0xc3
  42914a:	jns    0x429140
  42914c:	out    0xdb,eax
  42914e:	jne    0x42914c
  429150:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429151:	add    edx,DWORD PTR [ecx+0x2cd34aa6]
  429157:	addr16 clc 
  429159:	pop    ebx
  42915a:	mov    ecx,0x9003e8d4
  42915f:	mov    ds:0x21b042dc,al
  429164:	add    al,0x0
  429166:	test   al,0x19
  429168:	int3   
  429169:	sti    
  42916a:	pop    esi
  42916b:	push   ebx
  42916c:	xchg   esp,eax
  42916d:	daa    
  42916e:	daa    
  42916f:	fiadd  DWORD PTR [bp+si-0x2a11]
  429174:	mov    bh,0x82
  429176:	add    BYTE PTR [eax],al
  429178:	out    dx,al
  429179:	aad    0xf
  42917b:	rcr    cl,1
  42917d:	callw  0xe704
  429181:	loop   0x429183
  429183:	jmp    0xf6418322
  429188:	adc    eax,0x4f725427
  42918d:	out    0xec,eax
  42918f:	stc    
  429190:	jp     0x4291f1
  429192:	icebp  
  429193:	(bad)  
  429194:	jmp    0x70a4e373
  429199:	fdivp  st(5),st
  42919b:	xor    eax,0x1c7ff27
  4291a0:	repz jmp 0x429212
  4291a3:	mov    bh,0xfa
  4291a5:	popa   
  4291a6:	rcr    esi,0xa8
  4291a9:	push   eax
  4291aa:	add    ecx,ebp
  4291ac:	sub    al,0x5f
  4291ae:	inc    ebx
  4291af:	in     eax,0xbf
  4291b1:	mov    bh,0xd5
  4291b3:	pusha  
  4291b4:	jo     0x42922c
  4291b6:	mov    BYTE PTR [edi+eax*1],ch
  4291b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4291ba:	pop    ecx
  4291bb:	in     eax,dx
  4291bc:	push   0xffffffec
  4291be:	xchg   DWORD PTR [ebx+eiz*8],ebx
  4291c1:	jle    0x4291c2
  4291c3:	mov    ecx,0xea3a5f17
  4291c8:	jno    0x429238
  4291ca:	mov    ah,al
  4291cc:	call   0x619bed75
  4291d1:	mov    esi,0x1aa9ef85
  4291d6:	(bad)  
  4291d7:	loopne 0x4291df
  4291d9:	rcl    BYTE PTR [eax+0x74],cl
  4291dc:	add    BYTE PTR [eax],al
  4291de:	repnz fst QWORD PTR [eax+0x3e]
  4291e2:	sbb    BYTE PTR [edx],dl
  4291e4:	adc    ebp,DWORD PTR [ecx-0x223b1ad4]
  4291ea:	test   eax,0x6bc5759e
  4291ef:	sbb    edi,ebp
  4291f1:	jb     0x4291db
  4291f3:	imul   edi,DWORD PTR [esi+0x2a],0x1943ad3b
  4291fa:	dec    DWORD PTR [ebp-0x18f6ff7a]
  429200:	(bad)  
  429201:	call   0x38a4cb
  429206:	pop    edx
  429207:	sbb    dh,BYTE PTR [ebx+ebx*1+0x4d]
  42920b:	and    al,0xfe
  42920d:	mov    al,BYTE PTR [edi-0x3ac7457a]
  429213:	(bad)  [edx+0x38]
  429216:	push   edi
  429217:	sub    ecx,DWORD PTR [edx-0x77]
  42921a:	inc    eax
  42921b:	(bad)  
  42921c:	cmc    
  42921d:	adc    eax,0x3a6c62
  429222:	add    eax,0x5bff0d1d
  429227:	push   es
  429228:	cmp    BYTE PTR [ebp-0x72],0xe6
  42922c:	inc    ebx
  42922d:	hlt    
  42922e:	add    eax,0x8d38f29c
  429233:	call   0x446:0xe5d17bfe
  42923a:	sub    eax,0x92e838a9
  42923f:	xchg   ecx,eax
  429240:	clc    
  429241:	inc    DWORD PTR [eax]
  429243:	add    BYTE PTR [esi],dl
  429245:	loopne 0x429298
  429247:	pop    edi
  429248:	and    BYTE PTR [ecx-0x19a9fb46],ch
  42924e:	inc    ebx
  42924f:	cld    
  429250:	retf   
  429251:	and    BYTE PTR [ecx-0x55],bh
  429254:	pop    esp
  429255:	loope  0x4292a5
  429257:	call   0x43730a
  42925c:	ins    DWORD PTR es:[edi],dx
  42925d:	test   al,0x80
  42925f:	jl     0x42928b
  429261:	(bad)  
  429262:	add    BYTE PTR [esi-0x47],dl
  429265:	in     eax,0xf8
  429267:	mov    eax,DWORD PTR [edi-0x73]
  42926a:	add    ch,al
  42926c:	mov    eax,0x7ffff5e8
  429271:	call   0xfd17:0x9488afe
  429278:	das    
  429279:	int3   
  42927a:	dec    esp
  42927b:	test   bh,ch
  42927d:	dec    ecx
  42927e:	add    ch,BYTE PTR [esi]
  429280:	out    dx,eax
  429281:	iret   
  429282:	sbb    al,BYTE PTR [edi+0x66bf7b61]
  429288:	imul   BYTE PTR [esi]
  42928a:	push   esi
  42928b:	mov    ?,WORD PTR [edi]
  42928d:	jne    0x4292d5
  42928f:	test   bh,ch
  429291:	add    bl,BYTE PTR [ecx-0x79]
  429294:	popa   
  429295:	jnp    0x429312
  429297:	rcl    DWORD PTR [edi+esi*1],0xd
  42929b:	jmp    FWORD PTR [edx]
  42929d:	and    DWORD PTR ds:0x7bc70041,ecx
  4292a3:	dec    edx
  4292a4:	sub    esp,DWORD PTR [eax+esi*8]
  4292a7:	dec    ebx
  4292a8:	add    BYTE PTR [eax],al
  4292aa:	and    DWORD PTR [edi-0x7d9480fc],esi
  4292b0:	mov    es,WORD PTR [ecx]
  4292b2:	fcomp  DWORD PTR [ebx+eax*2]
  4292b5:	add    al,0x2f
  4292b7:	stos   BYTE PTR es:[edi],al
  4292b8:	jns    0x4292a6
  4292ba:	lods   al,BYTE PTR ds:[esi]
  4292bb:	pop    edx
  4292bc:	lds    edx,FWORD PTR [ecx-0x4e]
  4292bf:	leave  
  4292c0:	inc    eax
  4292c1:	call   0x410a7d
  4292c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4292c7:	mov    cl,0xfc
  4292c9:	gs add BYTE PTR cs:[edi],bh
  4292cd:	call   0xfb888682
  4292d2:	fldcw  WORD PTR [ebp+0x2d2f0442]
  4292d8:	scas   eax,DWORD PTR es:[edi]
  4292d9:	xchg   BYTE PTR [edi],ah
  4292db:	add    DWORD PTR [eax+ebp*8+0x28],edx
  4292df:	std    
  4292e0:	inc    ebp
  4292e1:	sti    
  4292e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4292e3:	xor    al,0xfa
  4292e5:	xchg   ah,ch
  4292e7:	or     eax,0xad08fc96
  4292ec:	add    al,0x7b
  4292ef:	mov    ebx,ebx
  4292f1:	icebp  
  4292f2:	aaa    
  4292f3:	fsubrp st(6),st
  4292f5:	push   ss
  4292f6:	mov    DWORD PTR [esi-0x361a4e4e],esp
  4292fc:	mov    ds:0x66de20f1,eax
  429301:	inc    eax
  429302:	sub    ebp,DWORD PTR [esi]
  429304:	jmp    0x95e209b3
  429309:	jle    0x4292e6
  42930b:	or     eax,0xb95f
  429310:	sub    bh,dh
  429312:	daa    
  429313:	or     al,0xb8
  429315:	fimul  WORD PTR [ecx-0x79]
  429318:	xor    al,0xbe
  42931a:	out    0xb6,eax
  42931c:	(bad)  
  42931d:	push   esi
  42931e:	mov    al,0x41
  429320:	jmp    0xebf7:0xf6cfe862
  429327:	js     0x429345
  429329:	ret    0xc66c
  42932c:	and    al,0xc
  42932e:	sbb    BYTE PTR [ebx+0x1a],cl
  429331:	or     dl,dl
  429333:	ret    
  429334:	js     0x429396
  429336:	lods   al,BYTE PTR ds:[esi]
  429337:	imul   DWORD PTR [ebx-0x2e4eb62]
  42933d:	push   esi
  42933e:	sbb    eax,0x8ca248fc
  429343:	dec    edx
  429344:	push   esp
  429345:	pop    edi
  429346:	add    BYTE PTR ds:0x7fa84124,0x6f
  42934d:	jmp    0xd22c9f0d
  429352:	hlt    
  429353:	not    dl
  429355:	fnstenv [edx+eax*8+0x14]
  429359:	push   cs
  42935a:	ins    DWORD PTR es:[edi],dx
  42935b:	mov    BYTE PTR [esi+ecx*1+0x53],0xf0
  429360:	je     0x42932e
  429362:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429363:	add    ebx,DWORD PTR [eax+0x6a41f49a]
  429369:	arpl   cx,bp
  42936b:	cli    
  42936c:	mov    ebp,0xd09011a
  429371:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429372:	cmp    eax,0xdf000009
  429377:	aam    0x80
  429379:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42937a:	clc    
  42937b:	bound  esi,QWORD PTR [ebp-0x1b]
  42937e:	into   
  42937f:	push   ebp
  429380:	ds leave 
  429382:	outs   dx,BYTE PTR ds:[esi]
  429383:	sbb    edx,edi
  429385:	call   0xbdbc7758
  42938a:	sub    al,0xea
  42938c:	pop    edx
  42938d:	xchg   ebx,eax
  42938e:	mov    esp,0x47cd7251
  429393:	mov    ds:0x677c9724,eax
  429398:	adc    al,0x3d
  42939a:	mov    ebp,0xef6a00a2
  42939f:	rol    DWORD PTR [ebx+0x52b77fa9],1
  4293a5:	bound  ebp,QWORD PTR [eax-0x26]
  4293a8:	call   0xfaa97d93
  4293ad:	push   0xfffffffb
  4293af:	arpl   WORD PTR [ebx],cx
  4293b1:	push   esp
  4293b2:	jmp    0x42940d
  4293b4:	shl    DWORD PTR [edi+ebx*1],0xa6
  4293b8:	inc    ebx
  4293b9:	cmc    
  4293ba:	popa   
  4293bb:	shl    DWORD PTR [esi-0x7],cl
  4293be:	loope  0x4293de
  4293c0:	and    eax,0x24a2d839
  4293c5:	cmp    esi,esp
  4293c7:	enter  0xdf4c,0x6c
  4293cb:	bound  edi,QWORD PTR [edi-0x5b]
  4293ce:	inc    edi
  4293cf:	pushf  
  4293d0:	inc    esp
  4293d1:	jbe    0x4293ff
  4293d3:	xlat   BYTE PTR ds:[ebx]
  4293d4:	mov    cl,0x26
  4293d6:	pop    ds
  4293d7:	add    BYTE PTR [eax],bh
  4293d9:	stos   BYTE PTR es:[edi],al
  4293da:	add    BYTE PTR [eax],al
  4293dc:	and    dl,ch
  4293de:	or     ch,BYTE PTR [ecx-0x10]
  4293e1:	aad    0x0
  4293e3:	fsub   QWORD PTR [eax]
  4293e5:	add    BYTE PTR [eax+0x449c28aa],cl
  4293eb:	add    BYTE PTR [ecx-0x23],ch
  4293ee:	add    BYTE PTR [ebp+0x49],0x34
  4293f2:	push   ebx
  4293f3:	leave  
  4293f4:	push   esp
  4293f5:	(bad)  
  4293f6:	cli    
  4293f7:	push   0x46
  4293f9:	ror    BYTE PTR [esi-0x75],cl
  4293fc:	pop    ss
  4293fd:	jecxz  0x429405
  4293ff:	(bad)  
  429400:	loop   0x4293de
  429402:	add    DWORD PTR [esi-0x2e],0xc538ba82
  429409:	sbb    al,0x32
  42940b:	rcl    DWORD PTR [edx+eiz*2-0x73],1
  42940f:	dec    edx
  429410:	out    dx,al
  429411:	sub    esp,edx
  429413:	sbb    BYTE PTR [edi+0x17],al
  429416:	imul   bl
  429418:	(bad)  
  429419:	retf   
  42941a:	rol    BYTE PTR [esi+eax*4+0x58ff0891],0xde
  429422:	or     DWORD PTR [esi-0x6e],0x6e38c982
  429429:	push   ss
  42942a:	addr16 (bad) 
  42942c:	imul   esi,DWORD PTR [edi],0x8fd55bb
  429432:	or     BYTE PTR [ebp-0x72],0x5a
  429436:	in     eax,dx
  429437:	sub    BYTE PTR ds:0x6e558d2f,dl
  42943d:	add    eax,0xab
  429442:	push   esi
  429443:	(bad)  [ecx]
  429445:	fstp   TBYTE PTR [edi+0x37]
  429448:	(bad)  
  429449:	jge    0x4294c0
  42944b:	retf   0x8bf5
  42944e:	inc    eax
  42944f:	loop   0x42949c
  429451:	or     bl,bl
  429453:	and    bh,bh
  429455:	pop    es
  429456:	retf   
  429457:	das    
  429458:	out    0xe8,al
  42945a:	(bad)  
  42945c:	add    BYTE PTR [eax],al
  42945e:	pop    esp
  42945f:	jno    0x4293ee
  429461:	inc    ebp
  429462:	jp     0x429491
  429464:	lea    eax,[ebp+0x2f]
  429467:	scas   eax,DWORD PTR es:[edi]
  429468:	lods   eax,DWORD PTR ds:[esi]
  429469:	cli    
  42946a:	inc    edx
  42946b:	sub    esi,eax
  42946d:	aas    
  42946e:	das    
  42946f:	hlt    
  429470:	cmp    DWORD PTR [edx+esi*4],ecx
  429473:	mov    dh,0xc5
  429475:	or     eax,0x3840f46c
  42947a:	xor    al,0x51
  42947c:	cli    
  42947d:	jnp    0x42945f
  42947f:	repz xor eax,0x379c88fb
  429485:	mov    esi,0xbf7d772b
  42948a:	(bad)  
  42948b:	enter  0x2eb4,0xf4
  42948f:	aas    
  429490:	pop    es
  429491:	pop    edx
  429492:	xor    esp,ecx
  429494:	sbb    ch,BYTE PTR [edi]
  429496:	sar    bl,0xff
  429499:	and    eax,DWORD PTR gs:[edx]
  42949c:	mov    edx,0x41a72702
  4294a1:	je     0x4294f6
  4294a3:	imul   eax,DWORD PTR [ebx+0x15],0x0
  4294a7:	add    bl,bh
  4294a9:	pusha  
  4294aa:	mov    esi,0xf93aadff
  4294af:	test   BYTE PTR [edi-0x5e],ch
  4294b2:	rep lods al,BYTE PTR ds:[esi]
  4294b5:	aaa    
  4294b6:	or     eax,0xc272e137
  4294bb:	fsubr  QWORD PTR [esi+edi*1+0x34d45b42]
  4294c2:	add    DWORD PTR [eax],eax
  4294c4:	mov    ah,0x33
  4294c6:	push   esi
  4294c7:	repz sbb al,0x25
  4294ca:	or     al,0x50
  4294cc:	xor    ecx,ebx
  4294ce:	sbb    DWORD PTR [edx+0x16],esp
  4294d1:	(bad)  
  4294d2:	and    al,0x75
  4294d4:	xor    ecx,ebx
  4294d6:	or     edx,DWORD PTR [eax-0x5]
  4294d9:	(bad)  
  4294da:	out    0x2d,eax
  4294dc:	enterw 0xf984,0x1b
  4294e1:	(bad)  
  4294e3:	cmc    
  4294e4:	xor    eax,0xee465928
  4294e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4294ea:	mov    ebx,0x57ea30fd
  4294ef:	test   BYTE PTR [esi],dl
  4294f1:	retf   
  4294f2:	bnd jo 0x4294e4
  4294f5:	add    BYTE PTR [edi],ah
  4294f7:	adc    ch,bh
  4294f9:	fwait
  4294fa:	call   0x49ef:0xbe6cb1ae
  429501:	xchg   esi,eax
  429502:	iret   
  429503:	push   ebx
  429504:	test   BYTE PTR [esp+esi*8+0x4],dl
  429508:	adc    esi,ecx
  42950a:	pop    edi
  42950b:	lock add BYTE PTR [eax],al
  42950e:	cs push ds
  429510:	fwait
  429511:	rcr    ah,1
  429513:	jmp    DWORD PTR [ecx+0xc536242]
  429519:	jnp    0x429585
  42951b:	shl    BYTE PTR [esi+0x58],cl
  42951e:	pop    es
  42951f:	push   ecx
  429520:	xchg   ebp,eax
  429521:	sub    eax,edi
  429523:	mov    ebx,esp
  429525:	inc    esi
  429526:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429527:	push   ebx
  429528:	and    eax,0xe011a9f8
  42952d:	js     0x429531
  42952f:	jb     0x4294f1
  429531:	ds xchg esp,eax
  429533:	pop    edi
  429534:	ret    
  429535:	fstp   DWORD PTR [ecx+edx*2]
  429538:	and    eax,0x2d50df58
  42953d:	sub    al,0xdf
  42953f:	pop    esi
  429540:	aad    0xaf
  429542:	push   ds
  429543:	push   ds
  429544:	call   0xb11508cb
  429549:	inc    ecx
  42954a:	aaa    
  42954b:	fidivr WORD PTR [ebx+edi*2]
  42954e:	dec    ebx
  42954f:	pop    ebp
  429550:	jl     0x429599
  429552:	cs fsubrp st(7),st
  429555:	lods   eax,DWORD PTR ds:[esi]
  429556:	fst    QWORD PTR [eax+0x35]
  429559:	inc    DWORD PTR [esi+0x5f]
  42955c:	add    DWORD PTR [esi-0x2c],esi
  42955f:	sub    ch,dh
  429561:	outs   dx,BYTE PTR ds:[esi]
  429562:	jmp    0xa7ec5615
  429567:	jmp    0x1e9ce760
  42956c:	add    ecx,ebp
  42956e:	xchg   edi,eax
  42956f:	pop    ecx
  429570:	or     DWORD PTR [edi+0x0],ecx
  429573:	add    BYTE PTR [ecx+0x63],ch
  429576:	push   ecx
  429577:	inc    esi
  429578:	jmp    DWORD PTR [edx+0xf]
  42957b:	test   eax,0x99ba5f2c
  429580:	ja     0x4295db
  429582:	or     DWORD PTR [edi],ebp
  429584:	imul   esp,DWORD PTR [ebx+0x51],0x2c762a72
  42958b:	test   al,0x2c
  42958d:	fidivr WORD PTR [ecx+0x9f4c1d]
  429593:	gs ins BYTE PTR es:[edi],dx
  429595:	jmp    0x6584:0x51bc933c
  42959c:	push   0x63
  42959e:	cli    
  42959f:	cdq    
  4295a0:	xor    eax,0xebd5e99c
  4295a5:	pop    esi
  4295a6:	cli    
  4295a7:	ins    DWORD PTR es:[edi],dx
  4295a8:	repz jmp 0x76a407d6
  4295ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4295af:	sub    BYTE PTR [ebx],dh
  4295b1:	fiadd  WORD PTR [ecx+ebp*4-0x507a3e81]
  4295b8:	jmp    0x429542
  4295ba:	inc    ecx
  4295bb:	jmp    0xe92dbaec
  4295c0:	sub    al,0xde
  4295c2:	mov    esp,DWORD PTR [edi+ebp*1+0x64]
  4295c6:	cli    
  4295c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4295c8:	sub    esi,ebx
  4295ca:	add    BYTE PTR [ecx],ch
  4295cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4295cd:	jmp    0x776eefc9
  4295d2:	aaa    
  4295d3:	add    ebx,DWORD PTR [edi-0x8]
  4295d6:	add    BYTE PTR [eax],al
  4295d8:	add    BYTE PTR [eax],al
  4295da:	sub    DWORD PTR [ecx],ebx
  4295dc:	adc    al,0x50
  4295de:	pop    eax
  4295df:	call   0x8483:0xe75669fa
  4295e6:	rcr    BYTE PTR [eax],0xf6
  4295e9:	push   eax
  4295ea:	jmp    0x188ea991
  4295ef:	and    bh,dl
  4295f1:	or     BYTE PTR [edx+0x4a],0x8d
  4295f5:	inc    ebp
  4295f6:	jp     0x4295b2
  4295f8:	xchg   edi,eax
  4295f9:	inc    eax
  4295fa:	push   ss
  4295fb:	loop   0x4295b4
  4295fd:	out    dx,al
  4295fe:	pop    ss
  4295ff:	loop   0x429601
  429601:	lea    ecx,[ebx+0x41fff6de]
  429607:	sbb    al,0x1
  429609:	add    BYTE PTR [esi+0x4f97598],dl
  42960f:	mov    ds:0x9f0f5e55,al
  429614:	cmp    BYTE PTR ds:0x3a042e,0xd6
  42961b:	sub    al,0x35
  42961d:	push   esi
  42961e:	add    dl,ah
  429620:	aad    0x43
  429622:	(bad)  
  429623:	mov    esi,edi
  429625:	adc    eax,0x3a506a
  42962a:	push   ss
  42962b:	in     al,0xe8
  42962d:	ficom  WORD PTR [ebp-0x1e]
  429630:	add    BYTE PTR [ebp-0x67],dh
  429633:	mov    ecx,0xa261ff12
  429638:	test   al,al
  42963a:	dec    edx
  42963b:	push   esp
  42963c:	jnp    0x429663
  42963e:	add    BYTE PTR [eax],al
  429640:	jb     0x429645
  429642:	cmp    al,BYTE PTR [eax]
  429644:	xchg   BYTE PTR [ebx],bl
  429646:	add    al,0xe8
  429648:	mov    al,ds:0x2800fa1e
  42964d:	mov    ds:0x2164ac13,eax
  429652:	cli    
  429653:	pop    ebp
  429654:	das    
  429655:	scas   eax,DWORD PTR es:[edi]
  429656:	dec    ecx
  429657:	loopne 0x429645
  429659:	inc    esi
  42965a:	inc    ecx
  42965b:	and    bp,WORD PTR [edi-0x75]
  42965f:	sti    
  429660:	inc    eax
  429661:	fsubr  QWORD PTR [ebp-0xdd53c06]
  429667:	cli    
  429668:	sbb    dh,bl
  42966a:	jmp    0x180c:0x39c82f3f
  429671:	lahf   
  429672:	call   0xfa4c0636
  429677:	(bad)  
  429678:	jge    0x42963a
  42967a:	loop   0x4296c7
  42967c:	and    DWORD PTR [edi+0x71ef2efe],eax
  429682:	fmul   QWORD PTR [eax-0x7725168f]
  429688:	imul   edx,DWORD PTR [ebp-0x28],0xff8bba13
  42968f:	dec    edi
  429690:	mov    dl,0x84
  429692:	imul   BYTE PTR [esi]
  429694:	retf   0x7796
  429697:	sub    ah,BYTE PTR [esi-0x23050624]
  42969d:	(bad)  
  42969e:	cmp    DWORD PTR [edx*2+0x38dc43],ecx
  4296a5:	add    BYTE PTR [eax+0x2e],cl
  4296a8:	retf   0xa20b
  4296ab:	sub    ebx,0x4f
  4296ae:	mov    edx,0xa050210c
  4296b3:	xchg   edi,eax
  4296b4:	sub    al,BYTE PTR [edi]
  4296b6:	stos   BYTE PTR es:[edi],al
  4296b7:	or     al,0x21
  4296b9:	push   ebp
  4296ba:	jmp    FWORD PTR [ebx]
  4296bc:	sbb    BYTE PTR [eax+0x21],dl
  4296bf:	pop    es
  4296c0:	add    eax,0x1c03b462
  4296c5:	jg     0x42973a
  4296c7:	inc    edx
  4296c8:	test   al,0x88
  4296ca:	jmp    0x2d45cdb5
  4296cf:	ficomp WORD PTR [ebx]
  4296d1:	pop    ds
  4296d2:	int    0x16
  4296d4:	or     ebp,edi
  4296d6:	fdivr  st(2),st
  4296d8:	std    
  4296d9:	adc    esp,DWORD PTR [edx-0x442c115c]
  4296df:	mov    ds:0x3045d3cb,eax
  4296e4:	add    cl,BYTE PTR [edi+0x486708ec]
  4296ea:	and    ecx,DWORD PTR [ecx-0x2a]
  4296ed:	lods   eax,DWORD PTR ds:[esi]
  4296ee:	cmp    BYTE PTR [ecx-0x56],ch
  4296f1:	out    0x7b,eax
  4296f3:	scas   al,BYTE PTR es:[edi]
  4296f4:	pop    edx
  4296f5:	sbb    DWORD PTR [edi-0xc],edi
  4296f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4296f9:	add    edx,DWORD PTR [eax-0x370923de]
  4296ff:	mov    ecx,0x126d8cc9
  429704:	lahf   
  429705:	inc    esi
  429706:	push   0xf15eb1
  42970b:	add    BYTE PTR [esp+esi*8-0x59],ah
  42970f:	add    edx,DWORD PTR [ecx-0xe]
  429712:	je     0x4296df
  429714:	sub    BYTE PTR [esi-0x51d03594],ch
  42971a:	sub    DWORD PTR [edx],ecx
  42971c:	das    
  42971d:	pop    ebx
  42971e:	xor    eax,0xd9ae2a8f
  429723:	ret    
  429724:	shl    BYTE PTR [eax+0x24],0x10
  429728:	dec    ebp
  429729:	pop    edi
  42972a:	jae    0x42970f
  42972c:	mov    al,0xc5
  42972e:	jecxz  0x4296e7
  429730:	xor    al,0x69
  429732:	sub    esp,DWORD PTR [eax]
  429734:	jmp    FWORD PTR [eax+0x22]
  429737:	sbb    edi,edi
  429739:	pop    edx
  42973a:	mov    ebp,0x2269272e
  42973f:	sbb    DWORD PTR [ecx],edx
  429741:	ficom  WORD PTR [edi]
  429743:	inc    ebx
  429744:	jo     0x42970a
  429746:	outs   dx,BYTE PTR ds:[esi]
  429747:	retf   0x5f18
  42974a:	add    DWORD PTR [ebp+0x2787c020],ebp
  429750:	dec    edx
  429751:	sar    BYTE PTR [ebp+0x26],0x67
  429755:	pop    ebx
  429756:	push   0x8beda0f9
  42975b:	cs inc edi
  42975d:	stos   DWORD PTR es:[edi],eax
  42975e:	mov    esp,DWORD PTR [edi]
  429760:	sub    BYTE PTR [esi+0x64969cf9],ch
  429766:	inc    edx
  429767:	mov    ch,0xb1
  429769:	and    cl,BYTE PTR ds:0xe75c1e69
  42976f:	fadd   QWORD PTR [eax]
  429771:	add    BYTE PTR [edi+0x2cd3159f],bh
  429777:	scas   al,BYTE PTR es:[edi]
  429778:	stc    
  429779:	cmp    dh,BYTE PTR [ecx+0x6b1a0d21]
  42977f:	mov    ecx,0x3f66062
  429784:	push   esi
  429785:	sub    bl,cl
  429787:	lods   al,BYTE PTR ds:[esi]
  429788:	add    cx,cx
  42978b:	pop    edx
  42978c:	push   ebx
  42978d:	bound  edi,QWORD PTR [edi+edx*2]
  429790:	adc    al,0x99
  429792:	inc    esi
  429793:	sahf   
  429794:	add    BYTE PTR [edx-0xa],dh
  429797:	jmp    0xe940:0xece8fc85
  42979e:	adc    eax,0x9f291636
  4297a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4297a4:	adc    cl,dl
  4297a6:	imul   ebx,ebx,0xffffffc0
  4297a9:	loope  0x429735
  4297ab:	out    dx,al
  4297ac:	push   eax
  4297ad:	fs in  eax,0xe2
  4297b0:	push   eax
  4297b1:	out    dx,al
  4297b2:	add    ch,BYTE PTR [ecx+0x43]
  4297b5:	xor    DWORD PTR [esi],edi
  4297b7:	(bad)  
  4297b8:	xor    DWORD PTR [edx-0x19],ebp
  4297bb:	cmc    
  4297bc:	icebp  
  4297bd:	mov    bh,0x32
  4297bf:	push   eax
  4297c0:	push   ds
  4297c1:	fstp   DWORD PTR [esi]
  4297c3:	pop    DWORD PTR [ebx]
  4297c5:	add    BYTE PTR [esi],bh
  4297c7:	sub    ch,BYTE PTR [esi+0x29]
  4297ca:	add    eax,0x4075140a
  4297cf:	mov    WORD PTR [edx],cs
  4297d1:	lea    edx,[eax]
  4297d3:	jmp    0x4611:0x8d50
  4297da:	dec    edx
  4297db:	call   DWORD PTR [ebp+0x44468387]
  4297e1:	in     eax,dx
  4297e2:	scas   al,BYTE PTR es:[edi]
  4297e3:	dec    esi
  4297e4:	push   ebp
  4297e5:	test   cl,al
  4297e7:	loopne 0x429827
  4297e9:	popa   
  4297ea:	lds    ecx,FWORD PTR [eax+esi*1]
  4297ed:	jmp    0x2511feb1
  4297f2:	cs jmp 0x4297e9
  4297f5:	mov    edi,esi
  4297f7:	mov    eax,ss
  4297f9:	loope  0x42984b
  4297fb:	(bad)  
  4297fc:	sar    ecx,1
  4297fe:	push   eax
  4297ff:	call   DWORD PTR [ebp-0x7c]
  429802:	add    DWORD PTR [esi+0x14],0xffffffef
  429806:	scas   al,BYTE PTR es:[edi]
  429807:	dec    esi
  429808:	adc    eax,0xfee0c188
  42980d:	(bad)  
  42980e:	lds    ecx,FWORD PTR [eax+eiz*8]
  429811:	jmp    0x5e1a:0x274f66bf
  429818:	in     eax,dx
  429819:	mov    ds:0x41c28b4e,al
  42981e:	add    cl,BYTE PTR [ebx-0x317cc940]
  429824:	cmp    DWORD PTR [edx],esi
  429826:	inc    BYTE PTR [esi+edx*1+0x9830591]
  42982d:	lahf   
  42982e:	loope  0x42983e
  429830:	lods   al,BYTE PTR ds:[esi]
  429831:	jecxz  0x429883
  429833:	call   0x3b28c7
  429838:	sbb    eax,0xff8415
  42983d:	add    BYTE PTR [edx],al
  42983f:	bnd call 0x3efbc782
  429845:	sti    
  429846:	mov    bl,0x87
  429848:	mov    dl,0x2
  42984a:	mov    ah,0x49
  42984c:	(bad)  
  42984d:	retf   0xf778
  429850:	or     al,0x7f
  429852:	jo     0x4297e4
  429854:	mov    dl,0x5
  429856:	mov    dl,0x88
  429858:	mov    dl,0x1
  42985a:	clc    
  42985b:	outs   dx,BYTE PTR ds:[esi]
  42985c:	popa   
  42985d:	jmp    0x45c5:0x28d7858
  429864:	(bad)  
  429865:	retf   0x5748
  429868:	loope  0x429898
  42986a:	outs   dx,DWORD PTR ds:[esi]
  42986b:	add    DWORD PTR [ebx+0x4],eax
  42986e:	das    
  42986f:	repnz mov ebp,esp
  429872:	fdivrp st(7),st
  429874:	mov    edi,eax
  429876:	mov    dl,0xd0
  429878:	mov    dl,0x3
  42987a:	pop    ebp
  42987b:	pop    es
  42987c:	sub    eax,0xb1b7b23c
  429881:	adc    eax,DWORD PTR [ebp-0x7a9827b9]
  429887:	push   ds
  429888:	(bad)  
  429889:	call   DWORD PTR [esi+0x6f3e2647]
  42988f:	inc    edi
  429890:	inc    BYTE PTR [edi+0xf2d106a]
  429896:	sbb    DWORD PTR [edi],0x476d68bc
  42989c:	lods   al,BYTE PTR ds:[esi]
  42989d:	call   eax
  42989f:	enter  0xffa8,0x0
  4298a3:	add    al,dl
  4298a5:	leave  
  4298a6:	cmp    eax,0x4181a20b
  4298ab:	add    BYTE PTR [edx-0x20],0xfd
  4298af:	je     0x4298d8
  4298b1:	int3   
  4298b2:	pop    es
  4298b3:	cs mov sp,0xfb4f
  4298b8:	aas    
  4298b9:	mov    ebp,0xde00fac2
  4298be:	mov    al,0x43
  4298c0:	mov    dl,0x4f
  4298c2:	push   ebp
  4298c3:	add    eax,DWORD PTR [eax+0x1e]
  4298c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4298c7:	xlat   BYTE PTR ds:[ebx]
  4298c8:	adc    bl,dh
  4298ca:	cmp    eax,0x3dc5dd04
  4298cf:	lods   eax,DWORD PTR ds:[esi]
  4298d0:	cmp    bl,dh
  4298d2:	dec    ebp
  4298d3:	add    al,0x9
  4298d5:	fidiv  WORD PTR [edx+0x27ed1319]
  4298db:	add    al,0xa8
  4298dd:	push   ebp
  4298de:	ins    DWORD PTR es:[edi],dx
  4298df:	aas    
  4298e0:	loop   0x4298c7
  4298e2:	outs   dx,BYTE PTR ds:[esi]
  4298e3:	push   es
  4298e4:	leave  
  4298e5:	ficomp WORD PTR [esi+0x4e]
  4298e8:	inc    esp
  4298e9:	in     eax,dx
  4298ea:	pop    esi
  4298eb:	inc    edi
  4298ec:	in     al,0x1c
  4298ee:	sbb    cl,BYTE PTR [ebx-0x17c5a3c1]
  4298f4:	xor    bl,BYTE PTR [eax-0x18]
  4298f7:	add    esp,DWORD PTR [edx+0x3703fffe]
  4298fd:	fsubrp st(7),st
  4298ff:	sub    ecx,DWORD PTR [ebx]
  429901:	lds    ebx,FWORD PTR [ecx+0x3f]
  429904:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429905:	pusha  
  429906:	or     al,0x2
  429908:	add    BYTE PTR [eax],al
  42990a:	das    
  42990b:	fisub  WORD PTR [esp+eax*2+0x7a]
  42990f:	jmp    0x160b:0xf1f40bcd
  429916:	outs   dx,DWORD PTR ds:[esi]
  429917:	fdivrp st(5),st
  429919:	inc    ebx
  42991a:	test   DWORD PTR [ebx],ebx
  42991c:	js     0x429923
  42991e:	test   DWORD PTR [ebx],ebx
  429920:	mov    edx,0xec02633e
  429925:	mov    bl,bh
  429927:	push   edi
  429928:	pushf  
  429929:	out    0x34,eax
  42992b:	inc    esi
  42992c:	cli    
  42992d:	jecxz  0x4298f4
  42992f:	push   edi
  429930:	mov    bh,0x43
  429932:	in     al,dx
  429933:	loopne 0x4298f4
  429935:	nop
  429936:	outs   dx,DWORD PTR ds:[esi]
  429937:	fiadd  WORD PTR [eax]
  429939:	pusha  
  42993a:	jno    0x429927
  42993c:	xchg   DWORD PTR [edi+0x4f],esp
  42993f:	fld    QWORD PTR [eax]
  429941:	jmp    0xeb67f5f1
  429946:	sub    al,0xde
  429948:	xchg   DWORD PTR [edi-0x6c],ebp
  42994b:	pop    ecx
  42994c:	cli    
  42994d:	jmp    0xab9db607
  429952:	and    al,0xde
  429954:	push   edx
  429955:	jb     0x429992
  429957:	inc    esi
  429958:	push   cs
  429959:	jmp    0x2635778a
  42995e:	push   edi
  42995f:	(bad)  
  429961:	sbb    al,0x31
  429963:	lods   al,BYTE PTR ds:[esi]
  429964:	call   0xfa981fbc
  429969:	(bad)  
  42996b:	mov    bl,0xbe
  42996d:	in     eax,0x0
  42996f:	add    BYTE PTR [ebx+edx*2],ch
  429972:	mov    bl,0xcd
  429974:	fiadd  WORD PTR cs:[eax]
  429977:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429978:	sub    dl,BYTE PTR [esi]
  42997a:	mov    WORD PTR [ecx],gs
  42997c:	xor    eax,DWORD PTR [esi-0x72]
  42997f:	add    esp,DWORD PTR [ecx+0x53]
  429982:	xchg   BYTE PTR [edi],dh
  429984:	dec    ebx
  429985:	and    BYTE PTR ds:[esi+0x51],bl
  429989:	lods   al,BYTE PTR ds:[esi]
  42998a:	repnz sub dh,BYTE PTR [ebx]
  42998d:	rcl    BYTE PTR [eax],cl
  42998f:	ret    
  429990:	sbb    BYTE PTR [ecx-0x7e],ch
  429993:	in     eax,0x33
  429995:	fiadd  WORD PTR [eax]
  429997:	mov    ds:0x77e94ca5,eax
  42999c:	popa   
  42999d:	push   ebx
  42999e:	cli    
  42999f:	aaa    
  4299a0:	ins    DWORD PTR es:[edi],dx
  4299a1:	pop    eax
  4299a2:	outs   dx,BYTE PTR ds:[esi]
  4299a3:	shl    DWORD PTR [ebp-0x580edb5f],1
  4299a9:	sbb    eax,0x1dade775
  4299ae:	add    eax,0x149a9fb9
  4299b3:	add    BYTE PTR [esi],bl
  4299b5:	mov    WORD PTR [edi+0xb04b1ff],gs
  4299bb:	call   0x38b070
  4299c0:	lods   al,BYTE PTR ds:[esi]
  4299c1:	out    dx,al
  4299c2:	xor    eax,0x143e66ec
  4299c8:	jle    0x429a34
  4299ca:	scas   al,BYTE PTR es:[edi]
  4299cb:	jmp    DWORD PTR [ecx+0x62]
  4299ce:	xchg   esi,eax
  4299cf:	sub    BYTE PTR [edx+ebx*8+0x5e00],dl
  4299d6:	(bad)  
  4299d7:	in     eax,0x0
  4299d9:	push   esi
  4299da:	sbb    DWORD PTR [ecx],ebx
  4299dc:	jne    0x429a02
  4299de:	xchg   BYTE PTR [ebp-0x10],ah
  4299e1:	call   FWORD PTR [edx]
  4299e3:	inc    esi
  4299e4:	or     ch,al
  4299e6:	push   ss
  4299e7:	inc    eax
  4299e8:	idiv   edi
  4299ea:	fstp   QWORD PTR [ecx]
  4299ec:	test   bh,bh
  4299ee:	and    ch,dh
  4299f0:	out    dx,al
  4299f1:	xchg   BYTE PTR [esi-0x24],ch
  4299f4:	add    BYTE PTR [eax],al
  4299f6:	inc    esp
  4299f7:	mov    cs,WORD PTR [eax*4-0x74f76a4f]
  4299fe:	push   edx
  4299ff:	inc    esi
  429a00:	push   es
  429a01:	lea    ecx,[eax-0xa]
  429a04:	adc    edi,0xffb2887e
  429a0a:	jno    0x429a73
  429a0c:	mov    esi,0x89fc05f
  429a11:	add    ch,al
  429a13:	sub    esi,edi
  429a15:	je     0x429a41
  429a17:	test   BYTE PTR [ecx+0x1e9631f1],0x14
  429a1e:	and    DWORD PTR [esi-0x3591ebe2],edx
  429a24:	push   ds
  429a25:	call   DWORD PTR [ecx]
  429a27:	fld    DWORD PTR [di-0x6b93]
  429a2c:	xor    eax,0xecc52ff6
  429a31:	std    
  429a32:	rol    BYTE PTR [edi+0x0],0x74
  429a36:	or     esi,DWORD PTR [ebx+ecx*4-0x46]
  429a3a:	add    BYTE PTR [eax],al
  429a3c:	add    ecx,DWORD PTR [ecx-0x2]
  429a3f:	jmp    FWORD PTR [ebp+eax*1-0x24bace7]
  429a46:	sub    al,0xfb
  429a48:	loope  0x429a86
  429a4a:	cmp    eax,0x9ab7485
  429a4f:	xchg   ebx,edi
  429a51:	loop   0x429a6b
  429a53:	xchg   DWORD PTR [eax+eax*8+0x43],ebx
  429a57:	call   0xfb7ff977
  429a5c:	fmul   st,st(7)
  429a5e:	inc    ebx
  429a5f:	call   0xfb7f6fde
  429a64:	add    ch,ah
  429a66:	xchg   DWORD PTR [edi+0xa88f4],edi
  429a6c:	cli    
  429a6d:	iret   
  429a6e:	sub    DWORD PTR [ecx-0x22],edx
  429a71:	adc    al,0x88
  429a73:	jne    0x429aa8
  429a75:	or     al,0x88
  429a77:	stc    
  429a78:	inc    ecx
  429a79:	(bad)  
  429a7a:	in     eax,0xfd
  429a7c:	xor    BYTE PTR [edi-0x1],al
  429a7f:	mov    BYTE PTR [edx-0x4c7bf335],ch
  429a85:	inc    esi
  429a86:	(bad)  
  429a87:	push   DWORD PTR [edx-0x5475f34c]
  429a8d:	inc    esi
  429a8e:	(bad)  
  429a8f:	push   DWORD PTR [ebx+eax*1-0x5bfea1da]
  429a96:	cmp    al,0x84
  429a98:	out    dx,eax
  429a99:	xchg   ecx,eax
  429a9a:	add    edi,DWORD PTR [edi-0x19]
  429a9d:	adc    ebp,DWORD PTR [ecx]
  429a9f:	jge    0x429aa1
  429aa1:	add    BYTE PTR [edx-0x1f021645],bh
  429aa7:	inc    esi
  429aa8:	mov    eax,DWORD PTR [ebx+0x3e8de3b]
  429aae:	das    
  429aaf:	scas   eax,DWORD PTR es:[edi]
  429ab0:	jo     0x429a80
  429ab2:	shl    BYTE PTR [esi-0x53],0xf
  429ab6:	xlat   BYTE PTR ds:[ebx]
  429ab7:	outs   dx,DWORD PTR ds:[esi]
  429ab8:	push   edx
  429ab9:	cmp    al,0xb4
  429abb:	push   0x54b2e743
  429ac0:	call   0xe828ca40
  429ac5:	add    ebx,DWORD PTR [eax+0x4e]
  429ac8:	fcmovne st,st(6)
  429aca:	mov    BYTE PTR [eax+0x2d],ch
  429acd:	or     al,ah
  429acf:	push   0x46970c3d
  429ad4:	call   0xdd38:0x4d68843b
  429adb:	push   esp
  429adc:	jnp    0x429abe
  429ade:	jb     0x429b34
  429ae0:	call   0x880f73
  429ae5:	loop   0x429b4c
  429ae7:	push   esp
  429ae8:	popa   
  429ae9:	shl    DWORD PTR [eax],0x19
  429aec:	stos   BYTE PTR es:[edi],al
  429aed:	mov    al,0x32
  429aef:	push   ebp
  429af0:	adc    eax,0xe39ab03c
  429af5:	sub    edi,ecx
  429af7:	mov    ecx,DWORD PTR [ebx-0x102d47c5]
  429afd:	add    esi,DWORD PTR [ebp+0x537b6eee]
  429b03:	loopne 0x429aec
  429b05:	add    eax,DWORD PTR [eax]
  429b07:	add    BYTE PTR [eax+0x728edfc9],ch
  429b0d:	loop   0x429b5e
  429b0f:	imul   ebx,ebp,0x53
  429b12:	pop    ebx
  429b13:	(bad)  
  429b14:	jb     0x429afc
  429b16:	scas   al,BYTE PTR es:[edi]
  429b17:	cs lods al,BYTE PTR ss:[esi]
  429b1a:	dec    edx
  429b1b:	mov    cl,0x30
  429b1d:	inc    esi
  429b1e:	cmp    cl,ah
  429b20:	cmc    
  429b21:	push   ebx
  429b22:	fincstp 
  429b25:	and    BYTE PTR [ecx],al
  429b27:	loope  0x429b55
  429b29:	test   eax,0x42b03d85
  429b2e:	or     eax,0x10c9a1bf
  429b33:	mov    dh,0xb9
  429b35:	push   ebp
  429b36:	rep outs dx,BYTE PTR ds:[esi]
  429b38:	rcl    DWORD PTR [ecx-0x6],cl
  429b3b:	jmp    0xfdbf0073
  429b40:	add    al,0x83
  429b43:	mul    esi
  429b45:	mov    ah,0x85
  429b47:	cs push ebx
  429b49:	test   ah,bh
  429b4b:	out    dx,al
  429b4c:	push   ebp
  429b4d:	pop    edx
  429b4e:	rcr    DWORD PTR [ebp-0x31],0x8b
  429b52:	add    ecx,esi
  429b54:	sub    al,0xde
  429b56:	xor    eax,0x2d67b7d9
  429b5b:	jmp    0x429b89
  429b5d:	fimul  WORD PTR [ecx]
  429b5f:	xor    al,0x3b
  429b61:	mov    ds:0xdd40668b,eax
  429b66:	add    cl,ch
  429b68:	jnp    0x429bd0
  429b6a:	dec    esp
  429b6b:	lods   eax,DWORD PTR ds:[esi]
  429b6c:	add    BYTE PTR [eax],al
  429b6e:	stos   DWORD PTR es:[edi],eax
  429b6f:	cdq    
  429b70:	adc    BYTE PTR [ecx-0x61057708],dl
  429b76:	mov    ecx,0xad640cb1
  429b7b:	cli    
  429b7c:	(bad)  
  429b7d:	call   0x707bf6ae
  429b82:	outs   dx,DWORD PTR ds:[esi]
  429b83:	dec    ebx
  429b84:	xchg   BYTE PTR [ebx+eax*2],ah
  429b87:	inc    esi
  429b88:	cmp    BYTE PTR [edi],bh
  429b8a:	gs push edi
  429b8c:	cli    
  429b8d:	hlt    
  429b8e:	pusha  
  429b8f:	pop    ebx
  429b90:	inc    esp
  429b91:	stc    
  429b92:	inc    esp
  429b93:	je     0x429b49
  429b95:	pop    esi
  429b96:	inc    ebp
  429b97:	pop    ebx
  429b98:	inc    esp
  429b99:	push   ecx
  429b9a:	mov    cl,0xa0
  429b9c:	hlt    
  429b9d:	mov    bh,0x35
  429b9f:	push   cs
  429ba0:	cli    
  429ba1:	add    BYTE PTR [ebx+0x33fce8e6],dh
  429ba7:	pop    ss
  429ba8:	neg    BYTE PTR [ebx+0x6d]
  429bab:	fisttp DWORD PTR [esi-0x1]
  429bae:	mov    ds:0xde75f5da,eax
  429bb3:	push   es
  429bb4:	in     al,dx
  429bb5:	and    eax,0x5e561829
  429bba:	setns  BYTE PTR [eax+eax*1]
  429bbe:	and    DWORD PTR [ebx-0x13],0x51
  429bc2:	xchg   ebp,eax
  429bc3:	sub    al,0x83
  429bc5:	jne    0x429b65
  429bc7:	das    
  429bc8:	not    DWORD PTR ds:0x40e922
  429bce:	nop    esi
  429bd1:	add    BYTE PTR [eax],0x0
  429bd4:	dec    ecx
  429bd5:	fiadd  DWORD PTR [ecx-0x7bb21d32]
  429bdb:	push   ds
  429bdc:	adc    dh,BYTE PTR [ecx+0xd2d2c74]
  429be2:	adc    bh,0x2
  429be5:	mov    cl,0x74
  429be7:	pop    ss
  429be8:	fdivr  st(3),st
  429bea:	test   bl,bl
  429bec:	and    bh,BYTE PTR [edx]
  429bee:	pop    es
  429bef:	mov    esi,0xbe05ec52
  429bf4:	ins    DWORD PTR es:[edi],dx
  429bf5:	inc    eax
  429bf6:	mov    ebx,0x32185075
  429bfb:	add    al,0x40
  429bfd:	sub    ecx,0xffffff80
  429c00:	pop    esp
  429c01:	fidiv  WORD PTR [edx+ecx*1+0x7]
  429c05:	sbb    BYTE PTR fs:[esi-0x6e],al
  429c09:	mov    bl,0x73
  429c0b:	(bad)  
  429c0c:	in     eax,0xa4
  429c0e:	or     ecx,0x22
  429c11:	push   ebx
  429c12:	add    DWORD PTR [ebp-0x76],0x59
  429c16:	xor    eax,0x3d549601
  429c1b:	jne    0x429c4c
  429c1d:	jno    0x429c1b
  429c1f:	dec    esp
  429c20:	daa    
  429c21:	sub    eax,DWORD PTR [eax]
  429c23:	xor    BYTE PTR [esi-0x68],0xde
  429c27:	je     0x429bbd
  429c29:	ret    0xb0
  429c2c:	cs sbb eax,0x2ad851e0
  429c32:	mov    dh,0xe
  429c34:	outs   dx,DWORD PTR ds:[esi]
  429c35:	inc    edi
  429c36:	jnp    0x429bf8
  429c38:	add    BYTE PTR [eax],al
  429c3a:	inc    edx
  429c3b:	dec    esi
  429c3c:	sar    dl,1
  429c3e:	sbb    dh,BYTE PTR [ebx+0x14]
  429c41:	inc    eax
  429c42:	das    
  429c43:	fadd   QWORD PTR [edx]
  429c45:	daa    
  429c46:	jmp    0xb64e5e17
  429c4b:	inc    esi
  429c4c:	(bad)  
  429c4d:	ret    0x4594
  429c50:	cmc    
  429c51:	mov    edi,0xbe476bf9
  429c56:	daa    
  429c57:	inc    edi
  429c58:	retf   
  429c59:	xchg   BYTE PTR [ebx-0x23c3de3c],bl
  429c5f:	bts    DWORD PTR [ebx],edi
  429c62:	fadd   DWORD PTR [edi]
  429c64:	hlt    
  429c65:	(bad)  
  429c66:	mov    ds:0xff4f4102,al
  429c6b:	(bad)  
  429c6c:	or     edx,DWORD PTR [eax+0x39]
  429c6f:	pop    es
  429c70:	add    eax,0x84076f2f
  429c75:	les    esp,FWORD PTR [ebx]
  429c77:	into   
  429c78:	mov    edx,0x30fab6d7
  429c7d:	mov    edx,ebp
  429c7f:	push   0xffffff83
  429c81:	inc    ebp
  429c82:	jae    0x429c9b
  429c84:	aam    0x4e
  429c86:	xor    BYTE PTR [edx+0x6],dl
  429c89:	mov    DWORD PTR [edx-0x60eac685],ebp
  429c8f:	xor    bh,BYTE PTR [esi-0x54794c01]
  429c95:	add    bl,BYTE PTR [ebp-0x22]
  429c98:	daa    
  429c99:	sub    bl,cl
  429c9b:	fucom  st(7)
  429c9d:	add    eax,DWORD PTR [eax]
  429c9f:	add    BYTE PTR [ecx+0x762bb9ee],cl
  429ca5:	(bad)  
  429ca6:	dec    ecx
  429ca7:	cmp    ah,dh
  429ca9:	retf   0x8c1b
  429cac:	jb     0x429ce4
  429cae:	push   eax
  429caf:	xor    DWORD PTR [edx+0x50],esi
  429cb2:	xor    ecx,DWORD PTR [edx-0x50d8ead3]
  429cb8:	lock inc esp
  429cba:	repnz mov WORD PTR [edx+0x4e],?
  429cbe:	push   0xdecb15fb
  429cc3:	cmp    BYTE PTR [edx+0x4a],ch
  429cc6:	or     edi,DWORD PTR [esi+0x2fa516c0]
  429ccc:	sbb    al,0x43
  429cce:	outs   dx,DWORD PTR ds:[esi]
  429ccf:	mov    esi,0x2fa564a4
  429cd4:	stos   BYTE PTR es:[edi],al
  429cd5:	rcr    edi,1
  429cd7:	add    ah,BYTE PTR [edx-0x36051768]
  429cdd:	retf   0xf2e3
  429ce0:	rol    BYTE PTR [ebp+ebp*8+0x2b],0x1e
  429ce5:	mov    ecx,0x97a637c9
  429cea:	jmp    0x429ce6
  429cec:	test   eax,0x1d36f0ca
  429cf1:	inc    esi
  429cf2:	cli    
  429cf3:	sahf   
  429cf4:	push   esi
  429cf5:	push   eax
  429cf6:	mov    edi,0x9bca5465
  429cfb:	les    eax,FWORD PTR [ebp-0x36]
  429cfe:	xchg   edi,eax
  429cff:	aam    0x48
  429d01:	mov    esp,0x360a
  429d06:	xor    al,0x50
  429d08:	adc    eax,0xeb97a838
  429d0d:	mov    bh,BYTE PTR [edx+0x4a]
  429d10:	jnp    0x429cc3
  429d12:	sbb    BYTE PTR [edx+0x1],ah
  429d15:	sub    eax,0x8150dd2b
  429d1a:	out    0xbc,al
  429d1c:	cli    
  429d1d:	data16 mov ah,0x9c
  429d20:	add    al,0x27
  429d22:	sub    eax,DWORD PTR [ebx]
  429d24:	xchg   BYTE PTR [edi-0x19e2a808],ch
  429d2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429d2b:	cdq    
  429d2c:	hlt    
  429d2d:	test   eax,0xc7089cbb
  429d32:	mov    ch,0x99
  429d34:	fmul   st(7),st
  429d36:	stos   DWORD PTR es:[edi],eax
  429d37:	pushf  
  429d38:	or     al,0x62
  429d3a:	out    dx,al
  429d3b:	pop    ds
  429d3c:	jle    0x429d4f
  429d3e:	sub    al,0xca
  429d40:	or     dh,BYTE PTR [ecx-0x48772570]
  429d46:	xor    dh,BYTE PTR [edi]
  429d48:	pop    es
  429d49:	daa    
  429d4a:	jno    0x429d31
  429d4c:	(bad)  
  429d4d:	adc    DWORD PTR [edi],ebp
  429d4f:	sbb    al,0x43
  429d51:	out    dx,eax
  429d52:	sub    ecx,DWORD PTR [esi+0x26759600]
  429d58:	mov    edi,0x85a92ce5
  429d5d:	aad    0xad
  429d5f:	inc    edx
  429d60:	adc    DWORD PTR [edx],edi
  429d62:	jno    0x429d10
  429d64:	stc    
  429d65:	pop    esp
  429d66:	sub    esp,DWORD PTR [ecx+0x74]
  429d69:	fld    DWORD PTR [eax]
  429d6b:	add    BYTE PTR [ebp+0x28],bh
  429d6e:	cs (bad) 
  429d70:	adc    al,0x37
  429d72:	sti    
  429d73:	mov    esi,0x3dc15a19
  429d78:	mov    ds,WORD PTR [eax+0x44]
  429d7b:	mov    ch,0xa5
  429d7d:	mov    eax,ds:0xa05013f8
  429d82:	mov    ch,bh
  429d84:	sub    edx,DWORD PTR [ebx+0x74]
  429d87:	popf   
  429d88:	add    ecx,ebp
  429d8a:	test   dl,bh
  429d8c:	ins    BYTE PTR es:[edi],dx
  429d8d:	dec    edi
  429d8e:	aaa    
  429d8f:	add    ch,dl
  429d91:	jle    0x429dc9
  429d93:	cmp    BYTE PTR [esi-0x27],cl
  429d96:	je     0x429dcf
  429d98:	ss pop ebx
  429d9a:	leave  
  429d9b:	jmp    FWORD PTR [esi-0x6e01b428]
  429da1:	fs icebp 
  429da3:	cmp    esp,DWORD PTR [ebp+0x7f]
  429da6:	and    ch,BYTE PTR [eax+0x6]
  429da9:	fist   DWORD PTR [eax]
  429dab:	add    BYTE PTR [ebp+0xbff502b],dh
  429db1:	imul   ecx,DWORD PTR [edx],0x40
  429db4:	(bad)  
  429db5:	pop    ebp
  429db6:	shl    DWORD PTR [ebp-0xa],0x20
  429dba:	(bad)  
  429dbb:	jmp    0x834378c3
  429dc0:	inc    BYTE PTR [edi]
  429dc2:	jmp    0xf64b1ac9
  429dc7:	mov    ebx,DWORD PTR [esi]
  429dc9:	and    edx,esp
  429dcb:	arpl   WORD PTR [eax+0xfff608],bp
  429dd1:	add    BYTE PTR [ebx],ch
  429dd3:	or     ebp,ecx
  429dd5:	pop    ebx
  429dd6:	test   al,0x8
  429dd8:	idiv   bh
  429dda:	sbb    edi,edi
  429ddc:	call   0xf64b4634
  429de1:	mov    ebx,ecx
  429de3:	sub    BYTE PTR [eax+0x5b],bl
  429de6:	mov    edi,0x3800049b
  429deb:	gs icebp 
  429ded:	and    BYTE PTR [eax],0x56
  429df0:	jne    0x429df3
  429df2:	sbb    BYTE PTR [edx+0x37],bl
  429df5:	das    
  429df6:	sbb    ebx,ebx
  429df8:	ds push edi
  429dfa:	mov    eax,ds:0x380c1e8d
  429dff:	or     DWORD PTR [esp+ecx*4],edx
  429e02:	inc    ebp
  429e03:	sbb    bh,dl
  429e05:	test   BYTE PTR [esi+0x2f8a177e],dl
  429e0b:	inc    ecx
  429e0c:	hlt    
  429e0d:	sub    DWORD PTR [edi-0x18],0x10
  429e11:	cmp    al,0x4f
  429e13:	dec    ebx
  429e14:	push   cs
  429e15:	cmp    al,0x36
  429e17:	dec    ecx
  429e18:	cli    
  429e19:	cmp    ebp,DWORD PTR [edx]
  429e1b:	dec    ebp
  429e1c:	push   es
  429e1d:	cmp    al,0x51
  429e1f:	push   ebx
  429e20:	cli    
  429e21:	cmp    ebx,DWORD PTR [eax+0x2a]
  429e24:	cli    
  429e25:	scas   eax,DWORD PTR es:[edi]
  429e26:	cs mov al,0xfe
  429e29:	sub    eax,0x44095ef
  429e2e:	das    
  429e2f:	xchg   edx,eax
  429e30:	mov    esp,ebp
  429e32:	lods   al,BYTE PTR ds:[esi]
  429e33:	mov    bl,0x14
  429e35:	das    
  429e36:	add    BYTE PTR [eax],al
  429e38:	div    BYTE PTR [ecx+esi*8-0x6]
  429e3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429e3d:	sub    BYTE PTR [edx],0x88
  429e40:	(bad)  
  429e41:	std    
  429e42:	test   DWORD PTR [ebp-0x41],edi
  429e45:	into   
  429e46:	shl    edi,0x6
  429e49:	jp     0x429e51
  429e4b:	or     esi,DWORD PTR [ecx+0x2fffff2d]
  429e51:	xchg   ebp,eax
  429e52:	sub    esi,edi
  429e54:	pop    ebp
  429e55:	push   cs
  429e56:	test   BYTE PTR [ebx+ebx*4-0x2d],0x3
  429e5b:	sbb    BYTE PTR [ebx+0x34],0xf4
  429e5f:	je     0x429e88
  429e61:	cmp    al,0xc3
  429e63:	repz xchg esi,eax
  429e65:	push   edx
  429e66:	(bad)  
  429e67:	jmp    FWORD PTR [edi]
  429e69:	mov    edx,0x3da51ae9
  429e6e:	repnz cmp esp,DWORD PTR [eax]
  429e71:	ret    0x62
  429e74:	das    
  429e75:	aaa    
  429e76:	mov    DWORD PTR [ebp+0x5b],eax
  429e79:	mov    WORD PTR [ebx+0x577b2f3],?
  429e7f:	test   DWORD PTR [ebp+0x37],ebx
  429e82:	(bad)  
  429e83:	push   DWORD PTR [esi+ebx*8+0x55080c1c]
  429e8a:	push   0x64de36b6
  429e8f:	mov    edi,0xf313df15
  429e94:	test   eax,0xad04eb4c
  429e99:	daa    
  429e9a:	call   0x2f429ea2
  429e9f:	pop    esi
  429ea0:	mov    al,0xe4
  429ea2:	and    eax,0x2f039963
  429ea7:	fmulp  st(7),st
  429ea9:	(bad)  
  429eaa:	mov    dl,0x9d
  429eac:	out    0xa9,eax
  429eae:	cs sahf 
  429eb0:	mov    dl,0x2b
  429eb2:	cmp    DWORD PTR [ebp+0x4b],ecx
  429eb5:	xor    al,0xb3
  429eb7:	sbb    eax,0xdd987ff3
  429ebc:	out    0x3,eax
  429ebe:	in     eax,dx
  429ebf:	mov    ds:0x8fc60331,al
  429ec4:	call   0xe9facdcc
  429ec9:	aam    0xf9
  429ecb:	push   esp
  429ecc:	xchg   edx,eax
  429ecd:	or     al,0x47
  429ecf:	jb     0x429f36
  429ed1:	ret    
  429ed2:	mov    al,0x44
  429ed4:	lock xor al,0xa4
  429ed7:	dec    esp
  429ed8:	ins    BYTE PTR es:[edi],dx
  429ed9:	inc    ebx
  429eda:	sbb    edx,edi
  429edc:	and    DWORD PTR [esi-0x70ff216a],edi
  429ee2:	das    
  429ee3:	fsubrp st(7),st
  429ee5:	cmp    eax,0x2e84cf2
  429eea:	mov    ebp,0xbd03daa2
  429eef:	test   DWORD PTR [ecx+eax*4-0x11],edx
  429ef3:	fisttp QWORD PTR [esi]
  429ef5:	cmp    ebx,ebp
  429ef7:	hlt    
  429ef8:	ret    0xabf8
  429efb:	jge    0x429ea0
  429efd:	(bad)  
  429efe:	pop    eax
  429eff:	push   edi
  429f00:	add    DWORD PTR [eax+eax*1],ebp
  429f03:	add    BYTE PTR [ebx],bl
  429f05:	pop    ebx
  429f06:	inc    ebp
  429f07:	shl    DWORD PTR [ebx],1
  429f09:	ss in  al,0xa7
  429f0c:	cld    
  429f0d:	dec    eax
  429f0e:	test   DWORD PTR [ecx+0x2cfae376],ebp
  429f14:	cld    
  429f15:	pop    ebp
  429f16:	jl     0x429ea6
  429f18:	das    
  429f19:	mov    esp,0xd8fc92cf
  429f1e:	mov    dl,0x24
  429f20:	pop    esp
  429f21:	and    DWORD PTR fs:[ecx-0x52],0xc982009e
  429f29:	push   es
  429f2a:	dec    esp
  429f2b:	pop    ebp
  429f2c:	(bad)  
  429f2d:	xchg   ebp,eax
  429f2e:	sbb    ah,0x3e
  429f31:	fidiv  WORD PTR [ebx-0x5f]
  429f34:	add    bl,bl
  429f36:	je     0x429edd
  429f38:	fsub   st,st(1)
  429f3a:	je     0x429ee5
  429f3c:	rcl    dh,1
  429f3e:	je     0x429f3d
  429f40:	enter  0x73fd,0x4
  429f44:	push   eax
  429f45:	mov    eax,ds:0xcb740208
  429f4a:	clc    
  429f4b:	in     al,dx
  429f4c:	xchg   ah,ch
  429f4e:	data16 in al,0x94
  429f51:	mov    WORD PTR [bx+di+0x592c],gs
  429f56:	inc    ebp
  429f57:	out    dx,al
  429f58:	xor    ebp,DWORD PTR [esi-0x24df2307]
  429f5e:	inc    eax
  429f5f:	jmp    0xe4b6be0b
  429f64:	adc    DWORD PTR [ecx+0x6af8],esp
  429f6a:	jbe    0x429fa7
  429f6c:	add    al,0xaf
  429f6e:	sub    dh,ah
  429f70:	and    dl,dl
  429f72:	je     0x429fd5
  429f74:	add    esp,DWORD PTR [edx+0x6f]
  429f77:	push   ebx
  429f78:	mov    ebp,esp
  429f7a:	cmp    eax,DWORD PTR [edi+0x44]
  429f7d:	add    BYTE PTR [esi-0x34],ch
  429f80:	jnp    0x429f72
  429f82:	adc    ecx,ecx
  429f84:	jnp    0x429f76
  429f86:	pop    ebp
  429f87:	mov    es,WORD PTR [edx]
  429f89:	paddq  mm3,QWORD PTR [esi+esi*8-0x7cd27601]
  429f91:	inc    ebp
  429f92:	mov    gs,WORD PTR [edi+edi*4]
  429f95:	add    eax,DWORD PTR [ebx]
  429f97:	dec    edx
  429f98:	push   edi
  429f99:	leave  
  429f9a:	aam    0xe2
  429f9c:	add    BYTE PTR [esi-0x63],dl
  429f9f:	cmovle esi,DWORD PTR [ebx]
  429fa2:	(bad)  
  429fa3:	push   ebx
  429fa4:	idiv   DWORD PTR [ecx]
  429fa6:	inc    edx
  429fa7:	or     cl,BYTE PTR ss:[edi]
  429faa:	nop
  429fab:	pop    eax
  429fac:	add    DWORD PTR [eax],eax
  429fae:	push   ss
  429faf:	xor    al,0x83
  429fb1:	dec    esp
  429fb2:	xor    dh,dl
  429fb4:	or     BYTE PTR [ecx+ecx*1],0x5f
  429fb8:	clc    
  429fb9:	and    BYTE PTR [ebx],al
  429fbb:	aad    0xbe
  429fbd:	add    al,0xe6
  429fbf:	sub    esp,ebx
  429fc1:	addr16 inc esi
  429fc3:	cli    
  429fc4:	xor    BYTE PTR [ebx-0x34],dh
  429fc7:	pop    esi
  429fc8:	clc    
  429fc9:	sub    eax,0xf980d582
  429fce:	add    BYTE PTR [eax],al
  429fd0:	fadd   DWORD PTR [ebp+0x220f8016]
  429fd6:	imul   eax,DWORD PTR ds:0x7737fa46,0xffffffa4
  429fdd:	pop    ebp
  429fde:	push   eax
  429fdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429fe0:	push   ss
  429fe1:	stc    
  429fe2:	add    esi,DWORD PTR [edi-0x6d]
  429fe5:	pop    esi
  429fe6:	clc    
  429fe7:	pop    edi
  429fe8:	adc    edx,esi
  429fea:	cmp    cl,0xfc
  429fed:	test   BYTE PTR [ecx],bh
  429fef:	mov    al,bh
  429ff1:	mov    eax,ds:0xff0604e2
  429ff6:	add    eax,0xf62f2f80
  429ffb:	or     cl,cl
  429ffd:	ja     0x42a02e
  429fff:	(bad)  
  42a000:	scas   eax,DWORD PTR es:[edi]
  42a001:	pop    ss
  42a002:	or     BYTE PTR [eax-0x29fbbb94],al
  42a008:	scas   eax,DWORD PTR es:[edi]
  42a009:	(bad)  
  42a00a:	test   BYTE PTR [edx],0xa9
  42a00d:	jbe    0x42a03e
  42a00f:	(bad)  
  42a010:	scas   eax,DWORD PTR es:[edi]
  42a011:	push   esi
  42a012:	or     BYTE PTR [eax+0x448246d],al
  42a018:	call   FWORD PTR [ecx]
  42a01a:	add    al,0xd1
  42a01c:	mov    bh,0xfb
  42a01e:	hlt    
  42a01f:	add    BYTE PTR [edi-0x52020b15],dh
  42a025:	ja     0x42a02a
  42a027:	out    0x2c,eax
  42a029:	mov    edi,0xf7703000
  42a02e:	jmp    0x42a0ab
  42a030:	dec    ebx
  42a031:	dec    ebx
  42a032:	add    DWORD PTR [esi+0x0],edi
  42a035:	add    BYTE PTR [eax+ebp*4+0x2f],dh
  42a039:	sti    
  42a03a:	push   esp
  42a03b:	nop
  42a03c:	dec    eax
  42a03d:	add    al,0x31
  42a03f:	aaa    
  42a040:	sar    BYTE PTR [ebp+0x447d3737],1
  42a046:	adc    ecx,DWORD PTR [edi-0x63]
  42a049:	mov    edi,0x73d8772c
  42a04e:	sub    ebx,DWORD PTR [edi+0xc15f6e]
  42a054:	jl     0x42a046
  42a056:	mov    dl,0xf1
  42a058:	mov    eax,0xe26bb010
  42a05d:	or     ebp,DWORD PTR [eax-0x68f41d8d]
  42a063:	sbb    al,0x31
  42a065:	sti    
  42a066:	cwde   
  42a067:	int3   
  42a068:	inc    esi
  42a069:	out    0x2d,eax
  42a06b:	test   BYTE PTR [esi],bh
  42a06d:	pop    edx
  42a06e:	ins    DWORD PTR es:[edi],dx
  42a06f:	aas    
  42a070:	(bad)  
  42a071:	push   esp
  42a072:	mov    ah,0xde
  42a074:	rol    DWORD PTR [ebx+ecx*4+0x20ae66da],cl
  42a07b:	loop   0x42a0d6
  42a07d:	add    ah,BYTE PTR [ebx+edx*8-0x9]
  42a081:	xor    BYTE PTR [edx],bh
  42a083:	rcl    ch,cl
  42a085:	ret    
  42a086:	pop    eax
  42a087:	push   esi
  42a088:	and    eax,0x66e24830
  42a08d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a08e:	inc    esp
  42a08f:	ficomp WORD PTR [esi-0x3a]
  42a092:	sub    BYTE PTR [ebp+0x35],dl
  42a095:	add    al,ch
  42a097:	scas   eax,DWORD PTR es:[edi]
  42a098:	ins    BYTE PTR es:[edi],dx
  42a099:	test   DWORD PTR [eax],0x25552800
  42a09f:	sbb    BYTE PTR [eax+0x77ce7ff],ch
  42a0a5:	mov    cl,0x70
  42a0a7:	into   
  42a0a8:	and    BYTE PTR ds:0xad63b4a2,al
  42a0ae:	fs scas al,BYTE PTR es:[edi]
  42a0b0:	add    BYTE PTR [esi],dh
  42a0b2:	int3   
  42a0b3:	aam    0x6
  42a0b5:	dec    ecx
  42a0b6:	outs   dx,DWORD PTR ds:[esi]
  42a0b7:	sub    ecx,DWORD PTR [eax+0x2c]
  42a0ba:	pop    ds
  42a0bb:	cs jnp 0x42a061
  42a0be:	push   cs
  42a0bf:	iret   
  42a0c0:	xor    bl,dl
  42a0c2:	clc    
  42a0c3:	jmp    0xcb59:0xbebbee7b
  42a0ca:	xlat   BYTE PTR ds:[ebx]
  42a0cb:	add    bl,BYTE PTR [ebx-0x5f]
  42a0ce:	data16 scas al,BYTE PTR es:[edi]
  42a0d0:	cmp    ah,bl
  42a0d2:	mov    bl,0xc2
  42a0d4:	stc    
  42a0d5:	retf   0xb923
  42a0d8:	and    cl,BYTE PTR [ecx-0x6b]
  42a0db:	das    
  42a0dc:	pusha  
  42a0dd:	dec    ecx
  42a0de:	popf   
  42a0df:	adc    esp,DWORD PTR [edx+esi*8-0x2210eba5]
  42a0e6:	ins    BYTE PTR es:[edi],dx
  42a0e7:	inc    ebx
  42a0e8:	and    dl,bh
  42a0ea:	outs   dx,BYTE PTR ds:[esi]
  42a0eb:	(bad)  
  42a0ec:	xchg   esp,eax
  42a0ed:	pop    ebp
  42a0ee:	add    DWORD PTR [ebp+0x6c751033],esi
  42a0f4:	add    ebp,DWORD PTR [ebx-0x4816dd08]
  42a0fa:	lods   eax,DWORD PTR ds:[esi]
  42a0fb:	sbb    ch,bl
  42a0fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a0fe:	pop    edx
  42a0ff:	xor    al,BYTE PTR [eax]
  42a101:	add    BYTE PTR [edx],ch
  42a103:	mov    BYTE PTR [ecx],dl
  42a105:	jmp    0xea536bb7
  42a10a:	xchg   edi,eax
  42a10b:	dec    ebp
  42a10c:	xchg   BYTE PTR [ebx+eax*1],ah
  42a10f:	popa   
  42a110:	dec    esp
  42a111:	frstor [ebp+0x38]
  42a114:	mov    al,bh
  42a116:	and    eax,0x29ed8c3d
  42a11b:	popa   
  42a11c:	out    dx,al
  42a11d:	loop   0x42a103
  42a11f:	mov    eax,0xc82963dc
  42a124:	test   ecx,0x8080e1d8
  42a12a:	sbb    al,ah
  42a12c:	or     DWORD PTR [ecx+0x42],ebp
  42a12f:	fnstcw WORD PTR [ecx-0x1d]
  42a132:	lods   eax,DWORD PTR ds:[esi]
  42a133:	push   eax
  42a134:	(bad)  
  42a135:	stc    
  42a136:	sub    BYTE PTR [ebp+0x75],dl
  42a139:	jl     0x42a172
  42a13b:	or     BYTE PTR [ebx+0x22],al
  42a13e:	cmp    edi,DWORD PTR [eax+0x48156ae0]
  42a144:	jo     0x42a0dc
  42a146:	lods   al,BYTE PTR ds:[esi]
  42a147:	leave  
  42a148:	adc    cl,ch
  42a14a:	mov    al,ds:0x3cbc7df0
  42a14f:	fnsave [ebp+eiz*8-0x53]
  42a153:	leave  
  42a154:	adc    bl,ch
  42a156:	xchg   ecx,ebx
  42a158:	test   esp,eax
  42a15a:	add    al,0x7
  42a15c:	out    0xed,al
  42a15e:	xor    eax,0x7662f4a9
  42a163:	dec    edi
  42a164:	add    al,BYTE PTR ds:[eax]
  42a167:	add    BYTE PTR [edi+ebx*2],ch
  42a16a:	inc    esp
  42a16b:	add    BYTE PTR [edx+0x7d144bc4],bl
  42a171:	pushf  
  42a172:	xchg   DWORD PTR [ecx],eax
  42a174:	sub    eax,0x710c8bd7
  42a179:	pop    esi
  42a17a:	pop    ebp
  42a17b:	add    eax,DWORD PTR [edi+0x263bf9c5]
  42a181:	xchg   BYTE PTR [edx],al
  42a183:	cmp    al,0x4f
  42a185:	ja     0x42a186
  42a187:	cmp    eax,DWORD PTR [ebx+0x7d42fb78]
  42a18d:	call   0x24bce713
  42a192:	ret    
  42a193:	mov    DWORD PTR [esi-0x3c],ecx
  42a196:	mov    ecx,0xf5f6e8e9
  42a19b:	(bad)  
  42a19c:	sti    
  42a19d:	ret    0x51ec
  42a1a0:	imul   DWORD PTR [edi]
  42a1a2:	dec    edi
  42a1a3:	dec    DWORD PTR [ebx-0xe]
  42a1a6:	cmc    
  42a1a7:	adc    eax,0x40ec3a
  42a1ac:	popf   
  42a1ad:	xchg   BYTE PTR [edx],al
  42a1af:	mov    DWORD PTR [ebx-0x6],ecx
  42a1b2:	add    DWORD PTR [ebp+0x12],0xbd063d5e
  42a1b9:	punpckhdq mm7,QWORD PTR [eax-0x4b]
  42a1bd:	ret    
  42a1be:	mov    ebp,0x642b482b
  42a1c3:	or     ch,BYTE PTR [eax-0x2787ec09]
  42a1c9:	sbb    bh,dl
  42a1cb:	add    BYTE PTR [eax],0x0
  42a1ce:	or     al,BYTE PTR [edi-0x77]
  42a1d1:	inc    ebp
  42a1d2:	adc    dl,BYTE PTR [esi-0x3f]
  42a1d5:	jne    0x42a1b2
  42a1d7:	leave  
  42a1d8:	jnp    0x42a1d6
  42a1da:	ins    DWORD PTR es:[edi],dx
  42a1db:	fdivr  st(5),st
  42a1dd:	inc    ebp
  42a1de:	adc    al,ah
  42a1e0:	pop    ebx
  42a1e1:	cld    
  42a1e2:	fstp   QWORD PTR [eax+0x362ffb79]
  42a1e8:	mov    dl,0x4b
  42a1ea:	lods   al,BYTE PTR ds:[esi]
  42a1eb:	jmp    0x42a1ec
  42a1ed:	je     0x42a221
  42a1ef:	mov    ch,0xeb
  42a1f1:	or     al,0x1b
  42a1f3:	jae    0x42a26c
  42a1f5:	inc    ebp
  42a1f6:	xchg   ecx,eax
  42a1f8:	mov    ch,0x0
  42a1fa:	inc    esp
  42a1fb:	out    dx,al
  42a1fc:	mov    bl,0x30
  42a1fe:	scas   eax,DWORD PTR es:[edi]
  42a1ff:	add    BYTE PTR [ebx],al
  42a201:	ss cli 
  42a203:	jmp    0x42a1d9
  42a205:	push   ecx
  42a206:	push   0x3afb14a9
  42a20b:	test   eax,0xba2f400f
  42a210:	inc    esp
  42a211:	jne    0x42a246
  42a213:	in     al,dx
  42a214:	test   eax,0xb28fe0fb
  42a219:	sti    
  42a21a:	fnstenv [edi+0x12]
  42a21d:	dec    esp
  42a21e:	and    ebp,esi
  42a220:	add    al,0x29
  42a222:	sar    BYTE PTR [eax],cl
  42a224:	jns    0x42a2a3
  42a226:	aaa    
  42a227:	mov    eax,0xd22c0c48
  42a22c:	add    bh,ah
  42a22e:	sub    al,0xd0
  42a230:	mov    cl,0xfb
  42a232:	add    BYTE PTR [eax],al
  42a234:	push   esp
  42a235:	int3   
  42a236:	scas   al,BYTE PTR es:[edi]
  42a237:	test   DWORD PTR [eax+eax*8-0x3f],esp
  42a23b:	or     esp,DWORD PTR [eax-0x2b]
  42a23e:	xor    eax,0xd3372bbe
  42a243:	xchg   BYTE PTR [ebx],al
  42a245:	mov    ecx,0x857c1020
  42a24a:	sub    eax,0xf1c03b75
  42a24f:	jae    0x42a28e
  42a251:	ja     0x42a251
  42a253:	cli    
  42a254:	stc    
  42a255:	add    al,0xb2
  42a257:	movzx  esi,BYTE PTR [edx+0x2a]
  42a25b:	sti    
  42a25c:	fld    st(0)
  42a25e:	mov    ecx,0xacdea60b
  42a263:	xor    ebp,DWORD PTR [eax+0x637eef9b]
  42a269:	(bad)  
  42a26a:	pop    esi
  42a26b:	dec    esp
  42a26c:	mov    dh,0xa3
  42a26e:	adc    ebp,ecx
  42a270:	outs   dx,BYTE PTR ds:[esi]
  42a271:	aad    0x66
  42a273:	popa   
  42a274:	das    
  42a275:	fsubrp st(7),st
  42a277:	aam    0xf9
  42a279:	push   edx
  42a27a:	jne    0x42a2b3
  42a27c:	xchg   edi,eax
  42a27d:	mov    ds:0x57742d98,eax
  42a282:	sub    eax,0xeb1eaa2c
  42a287:	xchg   DWORD PTR [edx-0x57fc1822],edi
  42a28d:	ret    
  42a28e:	xlat   BYTE PTR ds:[ebx]
  42a28f:	call   0xd5816f01
  42a294:	loope  0x42a2da
  42a296:	xor    eax,0x44000014
  42a29b:	jmp    0x42a300
  42a29d:	adc    bh,ch
  42a29f:	frstor [ebx+eax*2-0x3e]
  42a2a3:	mov    cl,0x67
  42a2a5:	out    dx,eax
  42a2a6:	stc    
  42a2a7:	pop    es
  42a2a8:	adc    eax,0x8f92b1a6
  42a2ad:	add    al,ch
  42a2af:	pushf  
  42a2b0:	mov    esi,0x6ef9a332
  42a2b5:	(bad)  
  42a2b6:	adc    al,0x59
  42a2b8:	mov    ds:0xebc9f986,eax
  42a2bd:	jle    0x42a32a
  42a2bf:	in     eax,dx
  42a2c0:	call   0xda8916ad
  42a2c5:	(bad)  
  42a2c6:	pop    edi
  42a2c7:	push   ebx
  42a2c8:	hlt    
  42a2c9:	or     esi,DWORD PTR [eax+0x4e4b4013]
  42a2cf:	inc    esp
  42a2d0:	dec    ebx
  42a2d1:	sbb    BYTE PTR [ebx],ch
  42a2d3:	shr    ebp,1
  42a2d5:	aad    0x7f
  42a2d7:	loope  0x42a2ff
  42a2d9:	rcl    eax,cl
  42a2db:	nop
  42a2dc:	add    eax,ecx
  42a2de:	adc    cl,BYTE PTR [ecx+0x7e]
  42a2e1:	lods   al,BYTE PTR ds:[esi]
  42a2e2:	or     dh,bl
  42a2e4:	jb     0x42a2e4
  42a2e6:	add    ecx,ebx
  42a2e8:	cld    
  42a2e9:	daa    
  42a2ea:	xor    cl,ch
  42a2ec:	and    BYTE PTR [esi],dl
  42a2ee:	f2xm1  
  42a2f0:	inc    ecx
  42a2f1:	pop    esp
  42a2f2:	xor    cl,ch
  42a2f4:	push   eax
  42a2f5:	adc    DWORD PTR [ebp-0x77010542],esp
  42a2fb:	sar    esp,0x62
  42a2fe:	add    BYTE PTR [eax],al
  42a300:	imul   ebx,esp,0x4f78f925
  42a306:	es fs inc ebx
  42a309:	inc    ebp
  42a30a:	out    dx,eax
  42a30b:	jo     0x42a2ab
  42a30d:	fdivr  st,st(5)
  42a30f:	fsubr  DWORD PTR [edx]
  42a311:	ret    
  42a312:	hlt    
  42a313:	bound  esp,QWORD PTR [esi+0x50]
  42a316:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  42a318:	push   esp
  42a319:	ret    0xbe59
  42a31c:	adc    al,0x49
  42a31e:	pop    edx
  42a31f:	bound  ebp,QWORD PTR [esi-0x28]
  42a322:	pop    edx
  42a323:	adc    bh,dl
  42a325:	adc    DWORD PTR [ecx],0xffffffe9
  42a328:	pop    edi
  42a329:	pop    ebx
  42a32a:	in     eax,dx
  42a32b:	cmp    BYTE PTR [eax],al
  42a32d:	scas   al,BYTE PTR es:[edi]
  42a32e:	test   esp,ebx
  42a330:	rcl    cl,1
  42a332:	inc    eax
  42a333:	jmp    0xf5b6ec35
  42a338:	inc    ebp
  42a339:	xor    dl,bh
  42a33b:	hlt    
  42a33c:	add    al,0x5d
  42a33e:	stc    
  42a33f:	jbe    0x42a39e
  42a341:	pop    ecx
  42a342:	cli    
  42a343:	out    dx,eax
  42a344:	int    0x5a
  42a346:	shl    edi,0xc9
  42a349:	mov    ecx,0xdb9e5e39
  42a34e:	stc    
  42a34f:	cld    
  42a350:	xchg   esp,eax
  42a351:	aam    0x40
  42a353:	jmp    0xb7c207
  42a358:	mov    dl,0x1f
  42a35a:	dec    edx
  42a35b:	mov    DWORD PTR [ebx+0x4fd6f747],edx
  42a361:	sbb    eax,0x8df6
  42a366:	xchg   edx,eax
  42a367:	aaa    
  42a368:	cld    
  42a369:	test   BYTE PTR [esi],al
  42a36b:	mov    ?,WORD PTR [eax+ebp*8]
  42a36e:	add    DWORD PTR [edx-0x8],edi
  42a371:	dec    DWORD PTR ds:0xc2db8392
  42a377:	push   eax
  42a378:	dec    edi
  42a379:	call   DWORD PTR [ebx]
  42a37b:	dec    ebx
  42a37c:	dec    ebx
  42a37d:	call   0x3b1de2
  42a382:	lods   al,BYTE PTR ds:[esi]
  42a383:	cmp    bh,dh
  42a385:	jne    0x42a3e1
  42a387:	clc    
  42a388:	adc    edi,DWORD PTR [eax+0x75]
  42a38b:	pop    ds
  42a38c:	cli    
  42a38d:	inc    BYTE PTR [ebx]
  42a38f:	inc    edx
  42a390:	test   eax,eax
  42a392:	dec    ecx
  42a393:	outs   dx,BYTE PTR ds:[esi]
  42a394:	sar    esi,0x8e
  42a397:	and    ebx,DWORD PTR [ecx]
  42a399:	lea    ebx,[edx+0x34]
  42a39c:	(bad)  
  42a39d:	and    eax,0x4581d9be
  42a3a2:	jp     0x42a36a
  42a3a4:	outs   dx,DWORD PTR ds:[esi]
  42a3a5:	add    DWORD PTR [esi-0x51],ebp
  42a3a8:	dec    BYTE PTR ds:[ecx+0x1cebb9c4]
  42a3af:	clc    
  42a3b0:	jae    0x42a3be
  42a3b2:	lea    esp,[eax-0x7aedf18]
  42a3b8:	cmc    
  42a3b9:	pop    edi
  42a3ba:	dec    eax
  42a3bb:	adc    ecx,ecx
  42a3bd:	ret    0xdefe
  42a3c0:	push   ebx
  42a3c1:	mov    ebp,DWORD PTR [edx+0x710ed59]
  42a3c7:	fild   WORD PTR [eax]
  42a3c9:	push   ebx
  42a3ca:	add    BYTE PTR [eax],al
  42a3cc:	mov    al,0x2f
  42a3ce:	fs push es
  42a3d0:	pop    ebp
  42a3d1:	mulps  xmm0,xmm6
  42a3d4:	das    
  42a3d5:	jb     0x42a402
  42a3d7:	add    BYTE PTR [esi],dl
  42a3d9:	jp     0x42a3d1
  42a3db:	or     ch,BYTE PTR [ecx+0x2ffffdcd]
  42a3e1:	gs xchg esi,eax
  42a3e3:	mov    ds:0x86fe74b2,eax
  42a3e8:	jmp    0xb18f0d89
  42a3ed:	sti    
  42a3ee:	add    al,0x22
  42a3f1:	jge    0x42a46c
  42a3f3:	inc    edx
  42a3f4:	sub    DWORD PTR [edi+0x14967ff5],edi
  42a3fa:	stos   BYTE PTR es:[edi],al
  42a3fb:	add    eax,0x7bfcddaf
  42a400:	aaa    
  42a401:	mov    ch,0x2c
  42a403:	or     eax,0xe6be3800
  42a408:	mov    ebx,DWORD PTR [edi]
  42a40a:	cs (bad) 
  42a40c:	sti    
  42a40d:	dec    esp
  42a40e:	jae    0x42a46d
  42a410:	aaa    
  42a411:	or     edx,ebp
  42a413:	mov    WORD PTR [edx+0x58fb2724],ds
  42a419:	jnp    0x42a495
  42a41b:	lock push ecx
  42a41d:	sbb    ebp,DWORD PTR [eax]
  42a41f:	dec    DWORD PTR [eax+0x34]
  42a422:	(bad)  
  42a423:	out    0x5,eax
  42a425:	pop    esp
  42a426:	sub    bl,bh
  42a428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a429:	ins    BYTE PTR es:[edi],dx
  42a42a:	jp     0x42a403
  42a42c:	mov    ebx,0x359c38
  42a431:	add    BYTE PTR [eax+eiz*2+0xa],bh
  42a435:	js     0x42a473
  42a437:	test   DWORD PTR [edi+eax*4],0x7427bb17
  42a43e:	dec    eax
  42a43f:	in     al,0x66
  42a441:	jmp    0x2740dc50
  42a446:	in     al,dx
  42a447:	loope  0x42a465
  42a449:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a44a:	jae    0x42a3fd
  42a44c:	daa    
  42a44d:	xchg   DWORD PTR [edx-0x22],esp
  42a450:	repz sar BYTE PTR [ebp+0x57],0xe9
  42a455:	shl    DWORD PTR [ecx+0x16],1
  42a458:	push   ebx
  42a459:	sbb    al,0xc0
  42a45b:	call   0x7ad7:0x93a82949
  42a462:	sbb    BYTE PTR cs:[ebp+0x3fad2e2c],ah
  42a469:	das    
  42a46a:	push   esp
  42a46b:	inc    eax
  42a46c:	sub    edi,DWORD PTR [esi+0x6a]
  42a46f:	inc    ebp
  42a470:	ret    
  42a471:	leave  
  42a472:	add    DWORD PTR [edi],edx
  42a474:	es clc 
  42a476:	mov    al,ds:0x3f45e971
  42a47b:	ficom  WORD PTR [ecx]
  42a47d:	ror    BYTE PTR [edx+ebx*8-0x18],0xd1
  42a482:	mov    cl,0x4f
  42a484:	and    eax,DWORD PTR [edx]
  42a486:	mov    edi,0x303a853
  42a48b:	fcom   DWORD PTR [ecx-0x1e5ea0e5]
  42a491:	sub    BYTE PTR [eax+0x463a18],dh
  42a497:	add    BYTE PTR [ebx],ch
  42a499:	ficom  WORD PTR [esi]
  42a49b:	inc    esp
  42a49c:	out    dx,eax
  42a49d:	push   esi
  42a49e:	sub    esp,edx
  42a4a0:	xchg   ecx,eax
  42a4a1:	inc    ecx
  42a4a2:	sub    DWORD PTR [eax+ebx*4-0x562e5921],ebx
  42a4a9:	dec    edi
  42a4aa:	addr16 test eax,0x834dce8
  42a4b0:	fdiv   QWORD PTR [ebx-0x555a891b]
  42a4b6:	mov    ebp,cr3
  42a4b9:	sahf   
  42a4ba:	out    0x28,eax
  42a4bc:	pushf  
  42a4bd:	fidivr DWORD PTR [edi+0x3b]
  42a4c0:	pop    esp
  42a4c1:	inc    eax
  42a4c2:	or     eax,0xffffffb3
  42a4c5:	sbb    eax,0x1e52fff5
  42a4ca:	add    DWORD PTR [edi],edx
  42a4cc:	jb     0x42a486
  42a4ce:	call   FWORD PTR [ebx-0x4a]
  42a4d1:	rol    cl,1
  42a4d3:	scas   eax,DWORD PTR es:[edi]
  42a4d4:	cld    
  42a4d5:	fadd   QWORD PTR [eax]
  42a4d7:	jmp    0xe598db08
  42a4dc:	pop    es
  42a4dd:	inc    ebp
  42a4de:	mov    cl,0xe8
  42a4e0:	out    0x7f,al
  42a4e2:	push   ebx
  42a4e3:	jb     0x42a4e2
  42a4e5:	pop    eax
  42a4e6:	inc    ebx
  42a4e7:	cdq    
  42a4e8:	test   BYTE PTR [ebx-0x6784f18c],ch
  42a4ee:	jae    0x42a4e2
  42a4f0:	xchg   edx,eax
  42a4f1:	inc    edx
  42a4f2:	lea    esp,[edi-0x681b4788]
  42a4f8:	ins    BYTE PTR es:[edi],dx
  42a4f9:	inc    eax
  42a4fa:	sti    
  42a4fb:	sahf   
  42a4fc:	add    BYTE PTR [eax],al
  42a4fe:	cwde   
  42a4ff:	cmp    BYTE PTR [edi-0x7bbab92a],al
  42a505:	sub    ecx,ebx
  42a507:	fsubr  QWORD PTR [esi]
  42a509:	sub    DWORD PTR [ebx],esp
  42a50b:	or     dl,al
  42a50d:	scas   eax,DWORD PTR es:[edi]
  42a50e:	pop    esp
  42a50f:	inc    edx
  42a510:	cli    
  42a511:	jmp    0x725bde42
  42a516:	outs   dx,DWORD PTR ds:[esi]
  42a517:	cld    
  42a518:	or     al,0x53
  42a51a:	sub    dl,BYTE PTR [ebx+0x4b]
  42a51d:	stc    
  42a51e:	fistp  DWORD PTR [ebx-0x6f6e599c]
  42a524:	(bad)  
  42a525:	call   0xf02b8356
  42a52a:	cmp    BYTE PTR [ebx-0x6],al
  42a52d:	mov    dh,0x7f
  42a52f:	cld    
  42a530:	adc    BYTE PTR [ecx+ecx*4-0x54],bl
  42a534:	stc    
  42a535:	sbb    eax,0x16f9d00f
  42a53a:	das    
  42a53b:	ss dec ebx
  42a53d:	ficom  WORD PTR [edx+0x43]
  42a540:	repnz mov cl,0x24
  42a543:	push   ds
  42a544:	repnz add dh,cl
  42a547:	pop    ss
  42a548:	pop    eax
  42a549:	ret    0xdbfe
  42a54c:	dec    esi
  42a54d:	mov    esi,DWORD PTR [edi-0x3d]
  42a550:	ds push eax
  42a552:	dec    esi
  42a553:	or     BYTE PTR [edi+0x75],0x37
  42a557:	fs cld 
  42a559:	mov    WORD PTR [eax],es
  42a55b:	adc    BYTE PTR [edx-0x18],ah
  42a55e:	clc    
  42a55f:	sbb    edi,edx
  42a561:	inc    BYTE PTR [eax]
  42a563:	add    cl,bh
  42a565:	aas    
  42a566:	loop   0x42a58e
  42a568:	leave  
  42a569:	stc    
  42a56a:	cmc    
  42a56b:	test   DWORD PTR [esi],edx
  42a56d:	(bad)  
  42a56e:	(bad)  
  42a56f:	xor    DWORD PTR [esi],eax
  42a571:	jecxz  0x42a593
  42a573:	(bad)  
  42a574:	mov    BYTE PTR [ebx],ch
  42a576:	sti    
  42a577:	call   DWORD PTR [esi+0x6a74f5db]
  42a57d:	jmp    0x42a50a
  42a57f:	jle    0x42a55b
  42a581:	clc    
  42a582:	je     0x42a5a8
  42a584:	xchg   esi,eax
  42a585:	clc    
  42a586:	ins    DWORD PTR es:[edi],dx
  42a587:	add    al,0x1e
  42a589:	fisubr WORD PTR ds:0xd8f081fe
  42a58f:	sbb    eax,DWORD PTR [esi-0x11]
  42a592:	fcomp  DWORD PTR [edi-0x60]
  42a595:	popf   
  42a596:	or     BYTE PTR [eax],al
  42a598:	sub    ebx,eax
  42a59a:	imul   eax
  42a59c:	push   ebp
  42a59d:	xor    edi,eax
  42a59f:	push   DWORD PTR ds:0x8607bd9a
  42a5a5:	mov    BYTE PTR [eax+0x0],0xbf
  42a5a9:	jg     0x42a5f9
  42a5ab:	mov    DWORD PTR [ecx],ecx
  42a5ad:	adc    cl,BYTE PTR [ecx+0x3dff2247]
  42a5b3:	pusha  
  42a5b4:	inc    esi
  42a5b5:	fld    QWORD PTR [eax]
  42a5b7:	add    BYTE PTR [edi+0x49c76280],bl
  42a5bd:	sub    al,BYTE PTR ds:0xfe352f00
  42a5c3:	xchg   al,ch
  42a5c5:	out    dx,eax
  42a5c6:	cmp    eax,0xb4000052
  42a5cb:	lds    edx,FWORD PTR ds:0xfe352f0f
  42a5d1:	icebp  
  42a5d2:	jae    0x42a5e5
  42a5d4:	test   BYTE PTR [eax],0x7b
  42a5d7:	aaa    
  42a5d8:	int3   
  42a5d9:	out    0xb8,eax
  42a5db:	push   ss
  42a5dc:	and    al,0xfb
  42a5de:	mov    ah,0xf6
  42a5e0:	ret    
  42a5e1:	mov    ebp,0x72233533
  42a5e6:	jnp    0x42a5e0
  42a5e8:	sti    
  42a5e9:	mov    edi,0xe7fe74ba
  42a5ee:	inc    esp
  42a5ef:	pop    edi
  42a5f0:	and    al,0xfb
  42a5f2:	lock cs jle 0x42a641
  42a5f6:	outs   dx,DWORD PTR ds:[esi]
  42a5f7:	xor    eax,0x4d297f3f
  42a5fc:	(bad)  
  42a5fd:	push   edx
  42a5fe:	mov    ah,0xfc
  42a600:	mov    al,0x35
  42a602:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a603:	jg     0x42a613
  42a605:	test   DWORD PTR [ebp+0x68],edi
  42a608:	push   es
  42a609:	xchg   ecx,esi
  42a60b:	jl     0x42a684
  42a60d:	dec    edx
  42a60e:	(bad)  [edx-0x32]
  42a611:	push   eax
  42a612:	xchg   DWORD PTR [eax-0x748f04da],edx
  42a618:	mov    esp,0xad31e357
  42a61d:	sbb    eax,0x86ccf6b6
  42a622:	call   0xdc0c2167
  42a627:	dec    eax
  42a628:	jns    0x42a66d
  42a62a:	daa    
  42a62b:	in     eax,0x71
  42a62d:	jp     0x42a62f
  42a62f:	add    bl,bl
  42a631:	in     eax,0x23
  42a633:	jae    0x42a668
  42a635:	sbb    eax,0x6f3131c9
  42a63a:	jp     0x42a5fc
  42a63c:	mov    ds:0x2e73ebde,eax
  42a641:	popf   
  42a642:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a643:	repnz fcomp DWORD PTR [ebp+0x4aa9cfa6]
  42a64a:	cmp    DWORD PTR [ecx+0x72],edi
  42a64d:	out    0x16,al
  42a64f:	jns    0x42a637
  42a651:	xchg   esp,eax
  42a652:	ins    BYTE PTR es:[edi],dx
  42a653:	mov    cl,0x18
  42a655:	stc    
  42a656:	add    BYTE PTR es:[ebx-0x1c],bh
  42a65a:	pop    esp
  42a65b:	jno    0x42a61c
  42a65d:	fsubrp st(7),st
  42a65f:	add    esp,DWORD PTR [eax-0x44]
  42a662:	mov    bh,0x3
  42a664:	(bad)  
  42a665:	in     eax,0x97
  42a667:	add    eax,esi
  42a669:	jecxz  0x42a653
  42a66b:	add    ebp,DWORD PTR [edi]
  42a66d:	imul   ebp,DWORD PTR [ebp-0x105c49ed],0x9ad27278
  42a677:	js     0x42a670
  42a679:	xchg   esp,eax
  42a67a:	sub    ch,BYTE PTR [edi+0x1c2a6930]
  42a680:	pop    ds
  42a681:	cmc    
  42a682:	sbb    DWORD PTR ds:0xdca27424,esp
  42a688:	adc    DWORD PTR [edi],edi
  42a68a:	mov    ebp,DWORD PTR [edi+0x9016137]
  42a690:	xor    al,0x63
  42a692:	push   es
  42a693:	add    al,0x0
  42a695:	add    BYTE PTR [edi],ch
  42a697:	fsubp  st(0),st
  42a699:	mov    esi,0x7af00928
  42a69e:	jmp    0x8562:0x343a6d39
  42a6a5:	add    ebp,DWORD PTR [edi]
  42a6a7:	ficomp WORD PTR [esi-0x43]
  42a6aa:	loopne 0x42a651
  42a6ac:	pop    ds
  42a6ad:	mov    al,0xc0
  42a6af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a6b0:	das    
  42a6b1:	cmc    
  42a6b2:	stos   DWORD PTR es:[edi],eax
  42a6b3:	push   0xffffffe8
  42a6b5:	add    ebp,DWORD PTR [edi]
  42a6b7:	test   DWORD PTR [eax],0x84e8632f
  42a6bd:	jae    0x42a6eb
  42a6bf:	fiadd  WORD PTR [eax]
  42a6c1:	ds dec edx
  42a6c3:	mov    bl,0x8
  42a6c5:	sahf   
  42a6c6:	leave  
  42a6c7:	in     al,dx
  42a6c8:	stc    
  42a6c9:	cld    
  42a6ca:	fmul   st,st(6)
  42a6cc:	inc    eax
  42a6cd:	jmp    0x70574a59
  42a6d2:	adc    al,0x64
  42a6d4:	inc    esp
  42a6d5:	fnstenv [ebp-0x5d]
  42a6d8:	or     BYTE PTR [edx+0x30],ch
  42a6db:	jmp    0x66f9:0xda44aa85
  42a6e2:	or     esp,DWORD PTR [edx-0x3f]
  42a6e5:	out    dx,al
  42a6e6:	pop    eax
  42a6e7:	dec    esi
  42a6e8:	add    ecx,ebp
  42a6ea:	sub    al,0xc4
  42a6ec:	call   FWORD PTR [ebx-0x6e]
  42a6ef:	nop
  42a6f0:	push   0x9e3995
  42a6f5:	ds mov esp,eax
  42a6f8:	call   0xc142a751
  42a6fd:	ss cli 
  42a6ff:	fs in  al,dx
  42a701:	mov    cl,0x76
  42a703:	es fucomip st,st(0)
  42a706:	test   DWORD PTR [edi-0x1e91c89c],esp
  42a70c:	pop    ss
  42a70d:	rol    DWORD PTR [ebp+0x6244809c],1
  42a713:	jecxz  0x42a760
  42a715:	cmp    DWORD PTR [ebp+0x7d9bc829],eax
  42a71b:	mov    ?,WORD PTR [eax+0x3c]
  42a71e:	xchg   DWORD PTR [eax+edx*1+0x21],ebp
  42a722:	inc    ebx
  42a723:	cmp    DWORD PTR [esi],esi
  42a725:	fiadd  WORD PTR [eax]
  42a727:	jmp    0x2fc88135
  42a72c:	xchg   DWORD PTR [ebx+0x54],esp
  42a72f:	stc    
  42a730:	pop    ecx
  42a731:	jp     0x42a7a8
  42a733:	add    BYTE PTR [edi+edi*8+0x69],ah
  42a737:	or     al,0xbd
  42a739:	push   cs
  42a73a:	push   es
  42a73b:	push   ebp
  42a73d:	jmp    0x13ee32a
  42a742:	test   BYTE PTR [esi+edx*8+0x66a2f56],0x4f
  42a74a:	inc    edi
  42a74b:	adc    BYTE PTR [esi-0x4600f827],ch
  42a751:	test   BYTE PTR gs:[edi],0x93
  42a755:	dec    eax
  42a756:	idiv   edi
  42a758:	jns    0x42a7c5
  42a75a:	aas    
  42a75b:	push   eax
  42a75c:	test   edx,ebx
  42a75e:	(bad)  
  42a75f:	jge    0x42a761
  42a761:	add    ah,cl
  42a763:	fs stc 
  42a765:	add    eax,0x4581e6cb
  42a76a:	loop   0x42a7ae
  42a76c:	xor    bh,BYTE PTR [eax+0xdfa6]
  42a772:	sbb    eax,0x161a5228
  42a777:	add    cl,al
  42a779:	pop    edi
  42a77a:	cwde   
  42a77b:	jl     0x42a746
  42a77d:	ret    0xdfd6
  42a780:	sub    al,al
  42a782:	in     eax,dx
  42a783:	aam    0x53
  42a785:	mov    edi,DWORD PTR [edx]
  42a787:	jno    0x42a7d4
  42a789:	push   edi
  42a78a:	jne    0x42a72b
  42a78c:	mov    ecx,DWORD PTR [esi+0x66]
  42a78f:	test   al,0xfe
  42a791:	mov    bh,0xeb
  42a793:	and    edx,edi
  42a795:	out    0x7a,eax
  42a797:	std    
  42a798:	cmc    
  42a799:	push   DWORD PTR [ebp-0x29717461]
  42a79f:	loope  0x42a7a1
  42a7a1:	add    BYTE PTR [esi+0x49fdf707],dl
  42a7a7:	add    BYTE PTR [edx-0x2cebb5bb],al
  42a7ad:	imul   BYTE PTR [edi]
  42a7af:	or     dh,ch
  42a7b1:	add    BYTE PTR [esi-0x1e76f6fd],dh
  42a7b7:	adc    al,0x8d
  42a7b9:	pop    edx
  42a7ba:	and    ebp,DWORD PTR [esi+0xfbb17bf]
  42a7c0:	fstp   QWORD PTR [edi+esi*1-0xf]
  42a7c4:	sti    
  42a7c5:	add    BYTE PTR gs:[eax],al
  42a7c8:	sub    al,BYTE PTR [ecx+ebx*4-0x4afd55f9]
  42a7cf:	dec    edi
  42a7d0:	mov    ds:0xf9e7d50a,al
  42a7d5:	push   ecx
  42a7d6:	and    bl,bh
  42a7d8:	lods   al,BYTE PTR ds:[esi]
  42a7d9:	pop    esp
  42a7da:	or     DWORD PTR [esp+ebp*1-0x52],esi
  42a7de:	mov    edi,0xf509f96f
  42a7e3:	std    
  42a7e4:	arpl   WORD PTR [ebx-0x73],ax
  42a7e7:	call   0xb078:0xfffe44cf
  42a7ee:	inc    edi
  42a7ef:	push   edi
  42a7f0:	jbe    0x42a864
  42a7f2:	inc    esp
  42a7f3:	or     al,0x2f
  42a7f5:	je     0x42a782
  42a7f7:	stc    
  42a7f8:	xlat   BYTE PTR ds:[ebx]
  42a7f9:	pop    ss
  42a7fa:	(bad)  
  42a7fb:	jmp    FWORD PTR [edi]
  42a7fd:	repz shl DWORD PTR [ebx],0x27
  42a801:	inc    esi
  42a802:	xchg   edx,eax
  42a803:	add    DWORD PTR [eax],eax
  42a805:	popf   
  42a806:	xchg   esp,eax
  42a807:	pop    ebx
  42a808:	mov    eax,ds:0xf8c38b03
  42a80d:	push   es
  42a80e:	add    al,BYTE PTR [eax]
  42a810:	stc    
  42a811:	rcl    DWORD PTR [esi+0x56437013],cl
  42a817:	(bad)  
  42a818:	out    dx,eax
  42a819:	inc    esp
  42a81a:	es pop esp
  42a81c:	fstp   TBYTE PTR [edx]
  42a81e:	and    BYTE PTR [ebp-0x26b48],cl
  42a824:	das    
  42a825:	fld    QWORD PTR [ebp-0x3]
  42a828:	pusha  
  42a829:	fucom  st(2)
  42a82b:	pop    DWORD PTR [eax]
  42a82d:	add    ah,bl
  42a82f:	std    
  42a830:	iret   
  42a831:	inc    esp
  42a832:	push   edx
  42a833:	cmp    dl,bl
  42a835:	dec    ecx
  42a836:	sub    al,0x6e
  42a838:	pop    ebp
  42a839:	les    eax,FWORD PTR [eax-0x68]
  42a83c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a83d:	mov    bh,0xb1
  42a83f:	dec    ecx
  42a840:	sbb    DWORD PTR [ebx-0x4b1c5757],esi
  42a846:	jle    0x42a7d9
  42a848:	mov    edi,0xa3393454
  42a84d:	lea    ebp,[edx-0x32]
  42a850:	outs   dx,BYTE PTR ds:[esi]
  42a851:	adc    al,0xa6
  42a853:	mov    bl,0x93
  42a855:	sub    al,0xa8
  42a857:	jmp    0xbbeac9e6
  42a85c:	out    dx,eax
  42a85d:	mov    dh,BYTE PTR [edx+0x36]
  42a860:	sbb    bh,BYTE PTR gs:[ebx-0x6d]
  42a864:	fs enter 0xe318,0x5c
  42a869:	sar    DWORD PTR [esi+ecx*4],0x6e
  42a86d:	adc    eax,0x21bf68c7
  42a872:	aam    0x62
  42a874:	sub    BYTE PTR [eax+0x1fd5390a],bl
  42a87a:	test   al,0xf5
  42a87c:	inc    edx
  42a87d:	xchg   edi,eax
  42a87e:	and    al,0x65
  42a880:	cmc    
  42a881:	iret   
  42a882:	push   ds
  42a883:	sahf   
  42a884:	out    0xb8,eax
  42a886:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a887:	adc    bh,ah
  42a889:	sahf   
  42a88a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a88b:	cmp    DWORD PTR [ebp-0x1cdef2e5],ebx
  42a891:	fld    QWORD PTR [eax]
  42a893:	add    BYTE PTR [eax],dh
  42a895:	cmp    DWORD PTR [ebp-0x19def60d],ebx
  42a89b:	mov    eax,0x9ee71085
  42a8a0:	and    BYTE PTR [ebp-0x5b],0xb
  42a8a4:	or     eax,0x39ee0121
  42a8a9:	loopne 0x42a928
  42a8ab:	and    eax,0xebc1b863
  42a8b0:	out    0xdc,al
  42a8b2:	add    BYTE PTR [edx],dl
  42a8b4:	jb     0x42a91c
  42a8b6:	jns    0x42a8a9
  42a8b8:	(bad)  
  42a8ba:	in     eax,0xf1
  42a8bc:	shrd   DWORD PTR [ecx+edx*8],edx,cl
  42a8c0:	fst    DWORD PTR [eax+0x795bbefa]
  42a8c6:	mov    al,cs:0x60fca205
  42a8cc:	test   esp,0xe41b2e87
  42a8d2:	xchg   esp,eax
  42a8d3:	test   eax,0xa05596ef
  42a8d8:	jb     0x42a8c4
  42a8da:	add    BYTE PTR [edx+esi*4],dh
  42a8dd:	dec    ecx
  42a8de:	push   eax
  42a8df:	sbb    dh,BYTE PTR [ebp+0x28cd688b]
  42a8e5:	fiadd  WORD PTR [eax]
  42a8e7:	add    edi,DWORD PTR [ebx]
  42a8e9:	xor    eax,0xf926c134
  42a8ee:	add    BYTE PTR [edx],bl
  42a8f0:	sbb    ah,BYTE PTR [edi+0x5c]
  42a8f3:	pop    ebp
  42a8f4:	psrlq  mm5,QWORD PTR [ebx+edi*8+0x0]
  42a8f9:	add    ah,ch
  42a8fb:	cmp    BYTE PTR [edi+0xa47e359],al
  42a901:	ins    DWORD PTR es:[edi],dx
  42a902:	jno    0x42a8e2
  42a904:	add    cl,ch
  42a906:	mov    ds:0x6cd9b4fa,eax
  42a90b:	cmp    BYTE PTR [edi-0x69],cl
  42a90e:	fcmovnb st,st(2)
  42a910:	(bad)  
  42a911:	mov    ecx,0x261cb34f
  42a916:	es push es
  42a918:	add    ecx,ebp
  42a91a:	sub    al,0x35
  42a91c:	je     0x42a8ff
  42a91e:	dec    edi
  42a91f:	or     eax,0xce460084
  42a924:	test   BYTE PTR [ebp+0x5300dc86],bl
  42a92a:	enter  0x6471,0x1
  42a92e:	(bad)  
  42a931:	sbb    al,0x51
  42a933:	push   esi
  42a934:	add    bh,bh
  42a936:	cdq    
  42a937:	ror    WORD PTR [edi],0xda
  42a93b:	pusha  
  42a93c:	add    DWORD PTR [eax],eax
  42a93e:	push   esi
  42a93f:	xlat   BYTE PTR ds:[ebx]
  42a940:	jae    0x42a95e
  42a942:	jno    0x42a97a
  42a944:	mov    dh,0x10
  42a946:	push   es
  42a947:	loop   0x42a93e
  42a949:	jbe    0x42a959
  42a94b:	gs cmp al,0x7c
  42a94e:	clc    
  42a94f:	sbb    edi,edx
  42a951:	mov    BYTE PTR [ebx-0x22],dh
  42a954:	cmc    
  42a955:	xlat   BYTE PTR ds:[ebx]
  42a956:	outs   dx,DWORD PTR ds:[esi]
  42a957:	arpl   cx,cx
  42a959:	punpckhwd mm4,QWORD PTR [eax]
  42a95c:	or     bh,dh
  42a95e:	add    BYTE PTR [eax],al
  42a960:	mov    edi,0xfe4e892a
  42a965:	dec    edi
  42a966:	or     BYTE PTR [ebx+0x974db9e],al
  42a96c:	push   ebp
  42a96d:	or     dl,BYTE PTR ds:0x1a860775
  42a973:	jmp    0x42a953
  42a975:	push   0x57
  42a977:	and    ah,bh
  42a979:	jecxz  0x42a902
  42a97b:	pop    esi
  42a97c:	cmp    bh,BYTE PTR [edx+0x60]
  42a97f:	mov    DWORD PTR [eax-0x7748fa17],ecx
  42a985:	jmp    0xdfcb588f
  42a98a:	add    eax,0x79b957af
  42a98f:	loop   0x42a91a
  42a991:	fdivr  QWORD PTR [edx+0x50db4ec1]
  42a997:	call   FWORD PTR [ecx+0x63]
  42a99a:	jl     0x42a9a8
  42a99c:	das    
  42a99d:	outs   dx,BYTE PTR ds:[esi]
  42a99e:	lea    eax,[edx+0x1b]
  42a9a1:	mov    esi,0xdc340fba
  42a9a6:	cwde   
  42a9a7:	std    
  42a9a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a9a9:	jo     0x42a9c6
  42a9ab:	jne    0x42a9f4
  42a9ad:	xor    BYTE PTR [ecx-0x124d9fed],bl
  42a9b3:	dec    esi
  42a9b4:	add    DWORD PTR [eax-0x67],eax
  42a9b7:	pop    es
  42a9b8:	push   eax
  42a9b9:	xor    ch,BYTE PTR [edx+0x10]
  42a9bc:	out    dx,eax
  42a9bd:	inc    esp
  42a9be:	lea    eax,[ebp+0x43]
  42a9c1:	int3   
  42a9c2:	cmp    eax,0x33000074
  42a9c7:	fcom   QWORD PTR ds:0x2ccf1b75
  42a9cd:	mov    eax,0x391b6f85
  42a9d2:	sub    BYTE PTR [ecx],0x92
  42a9d5:	or     BYTE PTR [eax],bl
  42a9d7:	fiadd  DWORD PTR [eax]
  42a9d9:	sti    
  42a9da:	cmp    bl,BYTE PTR [ecx-0x43d0c013]
  42a9e0:	enter  0x60fb,0x7
  42a9e4:	mov    dh,0xc8
  42a9e6:	in     eax,dx
  42a9e7:	cmp    al,0xfe
  42a9e9:	push   esp
  42a9ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a9eb:	push   0x4497ec85
  42a9f0:	(bad)  
  42a9f1:	jmp    FWORD PTR [ecx+ecx*2-0x36d704f6]
  42a9f8:	add    BYTE PTR [eax],0x2f
  42a9fb:	inc    ebp
  42a9fc:	adc    al,0x45
  42a9fe:	and    eax,DWORD PTR [ebx-0x6f]
  42aa01:	inc    ebp
  42aa02:	ret    
  42aa03:	je     0x42a996
  42aa05:	test   DWORD PTR [edi-0x60],edx
  42aa08:	sbb    bh,bl
  42aa0a:	pop    edi
  42aa0b:	clc    
  42aa0c:	cwde   
  42aa0d:	or     esi,DWORD PTR [eax-0x77]
  42aa10:	sbb    al,BYTE PTR [eax+0x73fe452f]
  42aa16:	cmp    eax,0x98f822de
  42aa1b:	shl    BYTE PTR [edi-0x63e24dfd],1
  42aa21:	repz add DWORD PTR [esi],esp
  42aa24:	or     ebp,DWORD PTR [ecx+ebp*2]
  42aa27:	fucom  st(7)
  42aa29:	add    eax,DWORD PTR [eax]
  42aa2b:	add    BYTE PTR [eax+edx*8-0x15],dh
  42aa2f:	cmc    
  42aa30:	sub    dh,bl
  42aa32:	(bad)  
  42aa33:	cs int 0x5a
  42aa36:	sub    eax,0xe33655bb
  42aa3b:	add    bl,dl
  42aa3d:	add    ecx,DWORD PTR [esi+0x8]
  42aa40:	mov    edx,0x441d3460
  42aa45:	cmp    BYTE PTR ss:[edi+0x46183df2],cl
  42aa4c:	jmp    0xb198:0xa32be8e6
  42aa53:	sbb    eax,0x875ce089
  42aa58:	xor    DWORD PTR ds:0x637f1da3,0x465f2825
  42aa62:	push   es
  42aa63:	mov    edx,0xb67f3606
  42aa68:	mov    fs,WORD PTR [ecx+0x45]
  42aa6b:	mov    esp,0xf57b35f5
  42aa70:	arpl   WORD PTR [eax-0x2],si
  42aa73:	repz mov bl,0x5b
  42aa76:	or     BYTE PTR ds:0x8eb835d4,bl
  42aa7c:	push   0x3e
  42aa7e:	mov    eax,0xebe57245
  42aa83:	sub    ebp,DWORD PTR [edi-0x68]
  42aa86:	dec    ecx
  42aa87:	sbb    eax,0x8774e051
  42aa8c:	pop    ecx
  42aa8d:	xor    eax,0x1d3b
  42aa92:	jmp    DWORD PTR [edx+0x1]
  42aa95:	lods   al,BYTE PTR ds:[esi]
  42aa96:	cmp    al,0x8e
  42aa98:	call   0xfa7a819c
  42aa9d:	adc    bl,BYTE PTR [eax+0x706c1cbb]
  42aaa3:	adc    eax,0x8c450151
  42aaa8:	cli    
  42aaa9:	push   cs
  42aaaa:	and    DWORD PTR [ebx-0x1d6717ec],ebx
  42aab0:	ret    0x3ba4
  42aab3:	fcmovb st,st(1)
  42aab5:	lods   al,BYTE PTR ds:[esi]
  42aab6:	inc    eax
  42aab7:	in     al,0x0
  42aab9:	jmp    0xaf48e7ea
  42aabe:	imul   ebp,eax,0x3971a5ff
  42aac4:	add    ebp,ecx
  42aac6:	sub    al,0xde
  42aac8:	xchg   BYTE PTR [ebx+eax*2],ah
  42aacb:	pop    ebp
  42aacc:	inc    esp
  42aacd:	hlt    
  42aace:	xchg   cl,ah
  42aad0:	mov    esp,DWORD PTR [edi+edi*1]
  42aad3:	mov    cs,WORD PTR [ebx-0x3d7190d4]
  42aad9:	and    al,0x3f
  42aadb:	fcmovnb st,st(2)
  42aadd:	sub    al,0x21
  42aadf:	fsubp  st(0),st
  42aae1:	xchg   ebp,eax
  42aae3:	ss cli 
  42aae5:	(bad)  
  42aae6:	jmp    0x30ec2923
  42aaeb:	mov    cs,WORD PTR [ebx-0x67190d4]
  42aaf1:	hlt    
  42aaf2:	xor    al,0x46
  42aaf4:	and    al,dl
  42aaf6:	add    BYTE PTR [eax],al
  42aaf8:	inc    edx
  42aaf9:	cmp    DWORD PTR [esi],ebp
  42aafb:	mov    al,ds:0x7c0a1db0
  42ab00:	ins    DWORD PTR es:[edi],dx
  42ab01:	pop    ebp
  42ab02:	shl    BYTE PTR [eax],0x6e
  42ab05:	into   
  42ab06:	add    BYTE PTR [edi+esi*4+0x1c3d8041],bh
  42ab0d:	fiadd  DWORD PTR [eax]
  42ab0f:	add    dh,al
  42ab11:	ins    DWORD PTR es:[edi],dx
  42ab12:	push   eax
  42ab13:	mov    esp,ebx
  42ab15:	call   0xe9310167
  42ab1a:	or     bh,bh
  42ab1c:	dec    ecx
  42ab1d:	push   cs
  42ab1e:	leave  
  42ab1f:	cmp    al,0x84
  42ab21:	loope  0x42aab7
  42ab23:	shl    DWORD PTR [ebp-0xb],0x49
  42ab27:	push   0xffffff97
  42ab29:	arpl   WORD PTR [ebx+edi*8-0x4a],ax
  42ab2d:	test   DWORD PTR gs:[ecx+0x2de900bb],0x84f5d27c
  42ab38:	push   ss
  42ab39:	loop   0x42aabf
  42ab3b:	inc    edx
  42ab3c:	inc    esp
  42ab3d:	loopne 0x42ab3f
  42ab3f:	cmp    bl,ch
  42ab41:	aam    0x5
  42ab43:	test   BYTE PTR [edi],cl
  42ab45:	fadd   QWORD PTR [eax]
  42ab47:	add    BYTE PTR [ecx-0x72],cl
  42ab4a:	inc    ebx
  42ab4b:	sti    
  42ab4c:	cmc    
  42ab4d:	imul   ecx,DWORD PTR [ebp-0xa2a2d7b],0x30246ff
  42ab57:	sub    bl,al
  42ab59:	xlat   BYTE PTR ds:[ebx]
  42ab5a:	test   al,al
  42ab5c:	add    BYTE PTR [eax],al
  42ab5e:	stc    
  42ab5f:	mov    bl,0x15
  42ab61:	add    al,BYTE PTR [esi]
  42ab63:	loopne 0x42ab6a
  42ab65:	mov    dh,0x53
  42ab67:	shl    ecx,cl
  42ab69:	or     cl,BYTE PTR [esi+0x12]
  42ab6c:	xchg   esi,eax
  42ab6d:	add    eax,0xfff5d682
  42ab72:	repnz push ss
  42ab74:	xor    eax,ebx
  42ab76:	jecxz  0x42ab41
  42ab78:	sub    eax,eax
  42ab7a:	popa   
  42ab7b:	repnz adc eax,eax
  42ab7e:	repz (bad) 
  42ab81:	dec    BYTE PTR [ecx-0x69]
  42ab84:	add    edi,edi
  42ab86:	(bad)  
  42ab87:	(bad)  
  42ab89:	(bad)  
  42ab8a:	das    
  42ab8b:	cmp    al,0x4f
  42ab8d:	shl    BYTE PTR [esi+0x2d661a7a],0xaa
  42ab94:	mov    edi,0x264affe3
  42ab99:	mov    BYTE PTR [ebp-0x15],dl
  42ab9c:	adc    eax,0x7a146f84
  42aba1:	fld    TBYTE PTR [esi]
  42aba3:	inc    ebp
  42aba4:	(bad)  
  42aba5:	popa   
  42aba6:	inc    esi
  42aba7:	push   edx
  42aba8:	sbb    dh,BYTE PTR [ebp+0x1f]
  42abab:	xchg   ebp,eax
  42abac:	add    ebp,ecx
  42abae:	arpl   WORD PTR [esi-0x2],ax
  42abb1:	jmp    DWORD PTR [edx+0x6b93ffc1]
  42abb7:	xor    al,0x17
  42abb9:	out    0x6f,eax
  42abbb:	pop    eax
  42abbc:	lods   al,BYTE PTR ds:[esi]
  42abbd:	add    ebp,DWORD PTR [edx+0x503a7a]
  42abc3:	add    BYTE PTR [ebx+edi*1+0xd405d86],ah
  42abca:	jnp    0x42abf5
  42abcc:	inc    ecx
  42abcd:	or     al,0x7a
  42abcf:	shr    BYTE PTR [eax],0xb9
  42abd2:	dec    ebp
  42abd3:	add    DWORD PTR [edi],ebp
  42abd5:	inc    ebp
  42abd6:	jle    0x42ac55
  42abd8:	repz cmp DWORD PTR [edi],eax
  42abdb:	test   ecx,ecx
  42abdd:	inc    ebp
  42abde:	(bad)  
  42abdf:	jmp    DWORD PTR [ecx]
  42abe1:	cli    
  42abe2:	and    al,0x1
  42abe4:	fwait
  42abe5:	xor    eax,0x2bc7453f
  42abea:	(bad)  
  42abeb:	jmp    FWORD PTR [edi]
  42abed:	test   cl,al
  42abef:	mov    ebx,0xfffe452d
  42abf4:	add    al,0x2b
  42abf6:	aas    
  42abf7:	inc    ebp
  42abf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42abf9:	inc    esi
  42abfa:	(bad)  
  42abfb:	jmp    FWORD PTR [edi]
  42abfd:	test   cl,al
  42abff:	mov    ebx,0xfffe4540
  42ac04:	and    dh,bl
  42ac06:	cdq    
  42ac07:	shr    ch,0xa5
  42ac0a:	outs   dx,BYTE PTR ds:[esi]
  42ac0b:	rcl    BYTE PTR [eax+edx*8-0x59],1
  42ac0f:	add    esp,DWORD PTR [esi-0x54f5d070]
  42ac15:	iret   
  42ac16:	call   0xafe8db1e
  42ac1b:	(bad)  
  42ac1c:	mul    BYTE PTR [ebp-0x23077f1e]
  42ac22:	out    0x3,eax
  42ac24:	test   al,0xb0
  42ac26:	out    dx,eax
  42ac27:	mov    dh,0x0
  42ac29:	add    BYTE PTR [edx],dl
  42ac2b:	into   
  42ac2c:	ins    BYTE PTR es:[edi],dx
  42ac2d:	and    BYTE PTR [ebx],0x33
  42ac30:	adc    ebx,DWORD PTR [edx]
  42ac32:	fild   WORD PTR [ebp-0x2c]
  42ac35:	in     al,dx
  42ac36:	jbe    0x42ac6a
  42ac38:	ins    BYTE PTR es:[edi],dx
  42ac39:	inc    ebx
  42ac3a:	xor    al,0x5a
  42ac3c:	mov    cl,0x4
  42ac3e:	das    
  42ac3f:	fidivr WORD PTR [ebp-0x1d]
  42ac42:	shl    ch,cl
  42ac44:	jmp    0x4404:0x270c08cf
  42ac4b:	or     esi,DWORD PTR [ecx-0x41]
  42ac4e:	pop    eax
  42ac4f:	mul    BYTE PTR [esi-0x17ce4cf7]
  42ac55:	add    ebp,DWORD PTR [edi]
  42ac57:	enter  0xbada,0x8e
  42ac5b:	lock lods eax,DWORD PTR ds:[si]
  42ac5e:	xor    BYTE PTR [ebx+0x65],ah
  42ac61:	clc    
  42ac62:	adc    eax,0xef85ab32
  42ac67:	out    0x90,al
  42ac69:	push   ds
  42ac6a:	das    
  42ac6b:	fsubrp st(7),st
  42ac6d:	mov    WORD PTR [edx+0x2fae36e6],es
  42ac73:	arpl   WORD PTR ds:0x78465f12,sp
  42ac79:	in     al,dx
  42ac7a:	out    0x31,al
  42ac7c:	fs inc esp
  42ac7e:	xor    al,0x5a
  42ac80:	add    esp,ebp
  42ac82:	sub    eax,0x99b100de
  42ac87:	das    
  42ac88:	or     ch,BYTE PTR [ebp+0x27]
  42ac8b:	fiadd  WORD PTR [eax]
  42ac8d:	jmp    0x6c79ac92
  42ac92:	inc    esp
  42ac93:	pop    edi
  42ac94:	and    BYTE PTR [ecx+0x28bf648b],0xfa
  42ac9b:	inc    esi
  42ac9c:	jecxz  0x42acd7
  42ac9e:	int3   
  42ac9f:	adc    DWORD PTR [ebp+0x35],eax
  42aca2:	test   DWORD PTR [ecx],ebp
  42aca4:	es pop edx
  42aca6:	fucomip st,st(1)
  42aca8:	sub    al,0xde
  42acaa:	or     DWORD PTR [edi-0x38],ebx
  42acad:	das    
  42acae:	mov    DWORD PTR [ebp-0x80],edi
  42acb1:	int    0xf5
  42acb3:	push   ss
  42acb4:	push   ss
  42acb5:	arpl   WORD PTR [ecx+eiz*1-0x45],ax
  42acb9:	mov    al,ds:0xc9e8744d
  42acbe:	cmc    
  42acbf:	inc    BYTE PTR [edi-0x72]
  42acc2:	xchg   DWORD PTR [esp+eiz*8+0x40151434],edx
  42acc9:	icebp  
  42acca:	add    BYTE PTR [esp+ebp*8-0x57],ch
  42acce:	pop    es
  42accf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42acd0:	sub    DWORD PTR [eax*1+0xddb5c0],0x86235ae9
  42acdb:	sub    al,0x7b
  42acdd:	jmp    0xe45ce29f
  42ace2:	mov    dl,0xa3
  42ace4:	stos   DWORD PTR es:[edi],eax
  42ace5:	mov    eax,ds:0x98f5718b
  42acea:	add    al,0x1d
  42acec:	add    BYTE PTR [eax+0x41],bl
  42acef:	std    
  42acf0:	jecxz  0x42ad61
  42acf2:	je     0x42ac91
  42acf4:	add    BYTE PTR [eax],al
  42acf6:	push   ss
  42acf7:	jo     0x42ac7a
  42acf9:	xchg   ebx,eax
  42acfa:	sub    al,al
  42acfc:	fld    DWORD PTR [eax]
  42acfe:	cwde   
  42acff:	outs   dx,DWORD PTR ds:[esi]
  42ad00:	out    dx,eax
  42ad01:	add    al,0x61
  42ad03:	pusha  
  42ad04:	ret    0xfbff
  42ad07:	inc    esp
  42ad08:	adc    BYTE PTR [eax-0x3a],al
  42ad0b:	add    DWORD PTR [esi-0x1],ebx
  42ad0e:	out    0x2c,al
  42ad10:	div    DWORD PTR [eax+0x2e]
  42ad13:	add    ch,bh
  42ad15:	push   edi
  42ad16:	pusha  
  42ad17:	(bad)  
  42ad18:	xchg   DWORD PTR [ebp-0x2],eax
  42ad1b:	adc    DWORD PTR [ebx+0x439e9875],edi
  42ad21:	not    DWORD PTR [edi+0x566dc01]
  42ad27:	adc    eax,0x6439750f
  42ad2c:	pop    ecx
  42ad2d:	sbb    bh,bh
  42ad2f:	je     0x42ad2f
  42ad31:	jmp    0x82b5:0x87c6251
  42ad38:	dec    BYTE PTR [ebx+ecx*8-0x5917af60]
  42ad3f:	inc    esp
  42ad40:	clc    
  42ad41:	dec    edx
  42ad43:	pushf  
  42ad44:	je     0x42ad8f
  42ad46:	lods   al,BYTE PTR ds:[esi]
  42ad47:	inc    eax
  42ad48:	or     BYTE PTR fs:[ecx+0x22],al
  42ad4c:	and    dl,dh
  42ad4e:	adc    eax,0xbfd6f5da
  42ad53:	push   ds
  42ad54:	sar    BYTE PTR [ebx],cl
  42ad56:	test   DWORD PTR [esi+0x0],ecx
  42ad59:	mov    BYTE PTR [eax],0x0
  42ad5c:	or     esp,ecx
  42ad5e:	(bad)  
  42ad5f:	jmp    0x6168:0x58fc860b
  42ad66:	or     DWORD PTR [edx+0xa],ebp
  42ad69:	addr16 dec esp
  42ad6b:	mov    ah,0x85
  42ad6d:	call   0x5769:0x2465104
  42ad74:	mov    al,ds:0x2f7d81c7
  42ad79:	cmp    eax,0x922d65af
  42ad7e:	mov    edi,0x224d7fbf
  42ad83:	and    esp,ecx
  42ad85:	mov    al,0x80
  42ad87:	shl    BYTE PTR [edx+0x16],0x13
  42ad8b:	jne    0x42ad84
  42ad8d:	pop    ebp
  42ad8e:	hlt    
  42ad8f:	push   edx
  42ad90:	leave  
  42ad91:	mov    eax,0x6f60bfce
  42ad96:	mov    bh,0xc8
  42ad98:	in     eax,dx
  42ad99:	inc    ecx
  42ad9a:	inc    cl
  42ad9c:	push   0xffffff8c
  42ad9e:	add    edi,DWORD PTR [eax]
  42ada0:	or     dh,al
  42ada2:	add    DWORD PTR [ebp-0x1c8b1],eax
  42ada8:	adc    DWORD PTR [edi+edi*4+0x366aa4bf],edi
  42adaf:	bound  esi,QWORD PTR [esi-0x46f4ff81]
  42adb5:	jp     0x42adf8
  42adb7:	dec    eax
  42adb8:	sub    cl,al
  42adba:	inc    esp
  42adbb:	add    eax,0xac6452f
  42adc0:	add    BYTE PTR [eax],al
  42adc2:	mov    bl,0x13
  42adc4:	add    DWORD PTR [eax],eax
  42adc6:	das    
  42adc7:	ins    DWORD PTR es:[edi],dx
  42adc8:	mov    cl,BYTE PTR [eax]
  42adca:	jno    0x42ad4e
  42adcc:	or     eax,DWORD PTR [ebx]
  42adce:	inc    esi
  42adcf:	sub    BYTE PTR [ecx],al
  42add1:	add    BYTE PTR [edi],ch
  42add3:	jge    0x42ae53
  42add5:	add    BYTE PTR [edi],ch
  42add7:	inc    ebp
  42add8:	lea    eax,[ebp+0x7f]
  42addb:	mov    esi,0xfaa2abc0
  42ade0:	push   esp
  42ade1:	push   eax
  42ade2:	mov    edx,0x20fae1c1
  42ade7:	jo     0x42ad97
  42ade9:	push   edx
  42adea:	sbb    BYTE PTR [edx],dl
  42adec:	add    dl,BYTE PTR [edx]
  42adee:	outs   dx,DWORD PTR ds:[esi]
  42adef:	inc    ebp
  42adf0:	add    eax,0x3b6cde38
  42adf6:	sub    ebx,esi
  42adf8:	out    0x88,eax
  42adfa:	jb     0x42ad7e
  42adfc:	cmp    BYTE PTR [ecx+0x168bc9aa],cl
  42ae02:	in     al,0x8d
  42ae04:	sbb    dl,BYTE PTR [edi]
  42ae06:	cmp    dh,BYTE PTR [esi]
  42ae08:	aad    0xc3
  42ae0a:	fcomp  DWORD PTR [ecx-0x58]
  42ae0d:	push   es
  42ae0e:	stos   BYTE PTR es:[edi],al
  42ae0f:	outs   dx,DWORD PTR ds:[esi]
  42ae10:	in     al,0x3
  42ae12:	das    
  42ae13:	mov    eax,0x2f135866
  42ae18:	pop    ebx
  42ae19:	push   ss
  42ae1a:	sbb    al,0xb8
  42ae1c:	pusha  
  42ae1d:	add    BYTE PTR ds:0x22164b2f,0xe2
  42ae24:	jo     0x42ae9e
  42ae26:	add    BYTE PTR [eax],al
  42ae28:	jmp    0x42ae58
  42ae2a:	cmp    edx,DWORD PTR [esi]
  42ae2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ae2d:	push   eax
  42ae2e:	clc    
  42ae2f:	push   ss
  42ae30:	xchg   esp,eax
  42ae31:	cs pop ebp
  42ae33:	push   eax
  42ae34:	pop    ebx
  42ae35:	das    
  42ae36:	and    edx,DWORD PTR [esi]
  42ae38:	xchg   edi,eax
  42ae39:	in     al,dx
  42ae3a:	into   
  42ae3b:	adc    eax,0x2bad6474
  42ae40:	lock xor eax,0x63b3060b
  42ae46:	in     al,dx
  42ae47:	add    ebp,DWORD PTR [edi]
  42ae49:	(bad)  
  42ae4a:	out    0x3,al
  42ae4c:	fidivr WORD PTR cs:[ebp+0xb]
  42ae50:	push   esp
  42ae51:	call   0xde4adc15
  42ae56:	loop   0x42ae47
  42ae58:	aam    0xcb
  42ae5a:	daa    
  42ae5b:	add    al,0xb0
  42ae5d:	xor    eax,0xe4ba190f
  42ae62:	mov    eax,ds:0xd0e01dbf
  42ae67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ae68:	sub    al,0xde
  42ae6a:	out    0x14,eax
  42ae6c:	mov    ds:0xa062013e,al
  42ae71:	in     eax,0x4d
  42ae73:	scas   al,BYTE PTR es:[edi]
  42ae74:	mov    eax,0xa8915345
  42ae79:	xor    eax,0x26ae9efa
  42ae7e:	add    dh,ah
  42ae80:	jno    0x42ae7f
  42ae82:	add    al,0xe9
  42ae84:	sub    al,0x65
  42ae86:	inc    esp
  42ae87:	xchg   ecx,eax
  42ae88:	scas   al,BYTE PTR es:[edi]
  42ae89:	fwait
  42ae8a:	in     al,dx
  42ae8b:	jle    0x42ae8d
  42ae8d:	add    BYTE PTR [esi+0x3a77215b],ch
  42ae93:	sub    edx,edi
  42ae95:	pusha  
  42ae96:	sbb    BYTE PTR ds:0x56f8c488,0x5c
  42ae9d:	inc    ebp
  42ae9e:	cli    
  42ae9f:	bound  edx,QWORD PTR ds:0xff291a57
  42aea5:	call   0x7cca8cd6
  42aeaa:	mov    ds:0xa43efa27,eax
  42aeaf:	arpl   WORD PTR ds:0xe8293a37,bx
  42aeb5:	ucomiss xmm3,xmm6
  42aeb8:	add    BYTE PTR [esi],ah
  42aeba:	mov    al,0xe5
  42aebc:	mov    esp,DWORD PTR [edi+edi*2+0x27]
  42aec0:	cli    
  42aec1:	push   ss
  42aec2:	inc    ebx
  42aec3:	dec    esi
  42aec4:	and    ecx,DWORD PTR [edi]
  42aec6:	inc    edx
  42aec7:	(bad)  {k4}
  42aecc:	push   0xde43fe
  42aed1:	sahf   
  42aed2:	cmp    esi,DWORD PTR [ebx-0x36a611f8]
  42aed8:	adc    ch,BYTE PTR [ecx]
  42aeda:	sub    esp,DWORD PTR [ebx-0x3f]
  42aedd:	out    dx,al
  42aede:	mov    dl,0x1b
  42aee0:	(bad)  
  42aee1:	call   0xc1b6d812
  42aee6:	mov    cl,0x62
  42aee8:	adc    eax,0xf5d1e800
  42aeed:	(bad)  
  42aeee:	push   ebx
  42aeef:	rol    BYTE PTR [eax+0x6000000],cl
  42aef5:	loope  0x42aedf
  42aef7:	pop    edi
  42aef8:	xor    ah,dl
  42aefa:	cmc    
  42aefb:	test   dh,dl
  42aefd:	loope  0x42ae83
  42aeff:	mov    eax,ds:0x8d00e104
  42af04:	inc    ebx
  42af05:	rcl    BYTE PTR [eax-0x73],cl
  42af08:	push   ebx
  42af09:	inc    ebp
  42af0a:	idiv   edi
  42af0c:	test   eax,0x59684b70
  42af11:	rol    BYTE PTR [eax],cl
  42af13:	add    BYTE PTR [ecx],dh
  42af15:	shl    DWORD PTR [ebx-0x18],cl
  42af18:	pop    ecx
  42af19:	cmp    al,0xfa
  42af1b:	adc    eax,0xf081e096
  42af20:	aas    
  42af21:	pop    esp
  42af22:	into   
  42af23:	cmp    edx,DWORD PTR [ebp-0x1e]
  42af26:	xchg   BYTE PTR [eax-0x7cff1f6b],cl
  42af2c:	call   0xd6c4b65b
  42af31:	fiadd  WORD PTR [eax]
  42af33:	add    BYTE PTR [eax+0x55],ah
  42af36:	test   BYTE PTR [ecx+ebx*2],ch
  42af39:	shl    ch,cl
  42af3b:	data16 (bad) 
  42af3d:	stos   DWORD PTR es:[edi],eax
  42af3e:	adc    al,0xfc
  42af40:	sbb    edx,edx
  42af42:	add    eax,0xdeba85
  42af47:	add    BYTE PTR [eax-0x1cfd06a3],dh
  42af4d:	loop   0x42aed0
  42af4f:	test   DWORD PTR [esi-0x2c],ecx
  42af52:	cmc    
  42af53:	call   FWORD PTR [ebp+0xff30ab]
  42af59:	add    BYTE PTR [ecx-0x30],bl
  42af5c:	loope  0x42af79
  42af5e:	lock fs stc 
  42af61:	pop    ss
  42af62:	jecxz  0x42afa0
  42af64:	adc    BYTE PTR fs:[edi],ch
  42af67:	ret    0x3487
  42af6a:	sub    BYTE PTR ds:0x41b28d0e,bl
  42af70:	or     bh,bl
  42af72:	sbb    BYTE PTR [esi],cl
  42af74:	andnps xmm2,XMMWORD PTR [ecx]
  42af77:	jne    0x42af01
  42af79:	sar    BYTE PTR [eax],0xc2
  42af7c:	in     eax,0xfd
  42af7e:	add    BYTE PTR [esi],dh
  42af80:	jle    0x42affd
  42af82:	sub    eax,0x1284ff35
  42af87:	aaa    
  42af88:	(bad)  
  42af89:	call   DWORD PTR [ecx+0xe]
  42af8c:	out    dx,eax
  42af8d:	or     ch,BYTE PTR [edx+0x2f000409]
  42af93:	push   ds
  42af94:	mov    cl,0xe3
  42af96:	pop    edx
  42af97:	pcmpeqw mm7,QWORD PTR [bx-0x7876]
  42af9d:	sub    al,0xc0
  42af9f:	les    ecx,FWORD PTR ds:0x78c2aa50
  42afa5:	std    
  42afa6:	mov    al,0x94
  42afa8:	mov    ah,0xe7
  42afaa:	push   0x9fb1072
  42afaf:	mov    eax,0xec9a944f
  42afb4:	or     eax,0x7d411a13
  42afb9:	popf   
  42afba:	(bad)  
  42afbc:	or     eax,0xb60000fb
  42afc1:	bound  ebp,QWORD PTR [ebp-0x3]
  42afc4:	js     0x42af92
  42afc6:	jns    0x42b00d
  42afc8:	jg     0x42af88
  42afca:	(bad)  
  42afcb:	jecxz  0x42afa4
  42afcd:	mov    ah,0x4
  42afcf:	add    BYTE PTR [edi],ch
  42afd1:	mov    dl,0x87
  42afd3:	sub    al,0x58
  42afd5:	sub    al,0xf
  42afd7:	dec    edi
  42afd8:	push   DWORD PTR [ebx]
  42afda:	stc    
  42afdb:	dec    edi
  42afdc:	and    DWORD PTR [ebp-0x2],esi
  42afdf:	or     bh,BYTE PTR [ecx-0x22]
  42afe2:	sub    al,BYTE PTR [edi]
  42afe4:	mov    eax,0x25bbec21
  42afe9:	(bad)  
  42afea:	fadd   QWORD PTR [ebx]
  42afec:	das    
  42afed:	ficomp WORD PTR [edi]
  42afef:	mov    esp,0x32fe89c
  42aff4:	mov    dl,0x6c
  42aff6:	jmp    0xb2a1defe
  42affb:	stc    
  42affc:	xor    eax,0x2f04805c
  42b001:	fimul  WORD PTR ds:0x70c460fb
  42b007:	mov    BYTE PTR [ebx+0x2b],al
  42b00a:	xchg   ebx,eax
  42b00b:	adc    dl,BYTE PTR [ecx-0x32]
  42b00e:	pop    esp
  42b00f:	retf   0x8e2c
  42b012:	je     0x42af9c
  42b014:	and    ebp,DWORD PTR [ebx]
  42b016:	jnp    0x42b02a
  42b018:	jg     0x42b03d
  42b01a:	sub    eax,0xe7de2b14
  42b01f:	add    edx,edi
  42b021:	push   ss
  42b022:	mov    esp,0xb4000011
  42b027:	mov    bh,0xf3
  42b029:	sbb    al,0xcb
  42b02b:	fucom  st(7)
  42b02d:	add    esi,DWORD PTR [ecx+0x6f87e3a2]
  42b033:	fisubr DWORD PTR [ebx-0x6a]
  42b036:	das    
  42b037:	fsubrp st(7),st
  42b039:	add    bl,ch
  42b03b:	sbb    eax,0xe72dbb65
  42b040:	cmp    BYTE PTR [edx],al
  42b042:	mov    ch,0xc0
  42b044:	call   0x6cd0df4c
  42b049:	ret    0x8d2b
  42b04c:	fs add bl,0x29
  42b050:	or     edx,DWORD PTR [edx]
  42b052:	(bad)  
  42b053:	xor    eax,0x2a56b75e
  42b058:	and    al,BYTE PTR [edi-0xafeadd6]
  42b05e:	push   ds
  42b05f:	daa    
  42b060:	add    DWORD PTR [esp+edx*4-0x1f],ebx
  42b064:	sub    eax,0xcc98b8a9
  42b069:	cmp    BYTE PTR [ebx-0x66],bh
  42b06c:	xchg   DWORD PTR [edi+ebp*2],ebp
  42b06f:	pop    ebx
  42b070:	test   BYTE PTR [ebp+0x3f],dh
  42b073:	and    eax,0xd33e19fa
  42b078:	aam    0xd4
  42b07a:	in     al,dx
  42b07b:	sub    DWORD PTR [ebp+0x28632ea9],eax
  42b081:	call   0xbb718eb2
  42b086:	loop   0x42b0b7
  42b088:	xchg   BYTE PTR [eax+eax*1],ah
  42b08b:	add    BYTE PTR [edi-0xf],ch
  42b08e:	ret    0xe21d
  42b091:	aam    0xb2
  42b093:	mov    ds:0x418b9a62,eax
  42b098:	in     al,0xa1
  42b09a:	add    al,0xf5
  42b09c:	(bad)  [eax+0x41]
  42b09f:	aad    0xfb
  42b0a1:	pop    ds
  42b0a2:	je     0x42b119
  42b0a4:	sbb    eax,0x31638168
  42b0a9:	mov    eax,0xde1e50d9
  42b0ae:	add    cl,ch
  42b0b0:	sub    edx,DWORD PTR [esi-0x64da47f0]
  42b0b6:	lock inc esi
  42b0b8:	ret    
  42b0b9:	ror    DWORD PTR [ebx-0x5db709c],1
  42b0bf:	ss ret 
  42b0c1:	inc    ecx
  42b0c2:	sub    dl,BYTE PTR [ebp+0x6a63251e]
  42b0c8:	call   0x1e61aac6
  42b0cd:	int    0x73
  42b0cf:	in     eax,0xe5
  42b0d1:	jb     0x42b118
  42b0d3:	push   cs
  42b0d4:	ds and eax,0x121b0088
  42b0da:	idiv   edi
  42b0dc:	push   ecx
  42b0dd:	into   
  42b0de:	jae    0x42b0ac
  42b0e0:	inc    ecx
  42b0e1:	xor    BYTE PTR [edx],ah
  42b0e3:	push   ss
  42b0e4:	xchg   esi,eax
  42b0e5:	fucom  st(1)
  42b0e7:	das    
  42b0e8:	(bad)
  42b0eb:	xadd   BYTE PTR [ebp+0x0],cl
  42b0f2:	push   ss
  42b0f3:	dec    ebx
  42b0f4:	cld    
  42b0f5:	push   edi
  42b0f6:	push   0xf12c83a5
  42b0fb:	int    0xf5
  42b0fd:	push   0xa
  42b0ff:	test   al,0x3d
  42b101:	add    al,0x26
  42b103:	test   eax,0xcdd13083
  42b108:	cmc    
  42b109:	push   eax
  42b10a:	leave  
  42b10b:	pop    ds
  42b10c:	jmp    0xb4e8:0xdd0610
  42b113:	jno    0x42b10d
  42b115:	jmp    FWORD PTR [edx+ebp*1]
  42b118:	push   ebx
  42b119:	pop    bp
  42b11b:	loope  0x42b132
  42b11d:	add    DWORD PTR [ebp-0x4d82861e],0xffffffcd
  42b124:	pop    esi
  42b125:	mov    DWORD PTR [ebx+0x3f],ecx
  42b128:	idiv   edi
  42b12a:	push   ecx
  42b12b:	push   eax
  42b12c:	push   ebp
  42b12d:	push   0xdd46
  42b132:	adc    esp,DWORD PTR [eax+0x15]
  42b135:	std    
  42b136:	icebp  
  42b137:	int    0x62
  42b139:	add    BYTE PTR [esi+0x785013cd],dh
  42b13f:	sbb    al,0xfa
  42b141:	gs or  eax,0x51ff2d60
  42b147:	into   
  42b148:	pop    esi
  42b149:	mov    DWORD PTR [ebx],ecx
  42b14b:	xor    ebp,edi
  42b14d:	call   DWORD PTR [ecx]
  42b14f:	fisubr WORD PTR [ebp+0x41b42fc0]
  42b155:	or     al,0x0
  42b157:	add    BYTE PTR [edx+0x58fcf191],dh
  42b15d:	fbstp  TBYTE PTR [esi+0x45]
  42b160:	jae    0x42b130
  42b162:	lock daa 
  42b164:	dec    ecx
  42b165:	das    
  42b166:	js     0x42b1ad
  42b168:	push   ebx
  42b169:	mov    bl,0x5
  42b16b:	sti    
  42b16c:	sub    BYTE PTR [ebx+0x372f00ae],bh
  42b172:	iret   
  42b173:	mov    edi,0x133092ac
  42b178:	xor    BYTE PTR [edx+0x15ac4844],dh
  42b17e:	add    DWORD PTR [edi-0x11],edi
  42b181:	sub    edi,DWORD PTR [ebp+0x45]
  42b184:	fild   QWORD PTR [esi]
  42b186:	mov    cl,0xd3
  42b188:	sbb    esp,0x11b2b2f9
  42b18e:	or     edi,ebx
  42b190:	lock ds leave 
  42b193:	(bad)  [edx+0x30]
  42b196:	or     esi,DWORD PTR [ebp-0x21]
  42b199:	mov    al,BYTE PTR [edi+0xa60d82c]
  42b19f:	push   eax
  42b1a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b1a1:	add    bh,BYTE PTR [ecx]
  42b1a3:	data16 das 
  42b1a5:	sbb    al,0x3f
  42b1a7:	push   eax
  42b1a8:	mov    dl,0x41
  42b1aa:	jmp    0x42b1fb
  42b1ac:	mov    eax,0x1afb1a0a
  42b1b1:	jne    0x42b1a7
  42b1b3:	aas    
  42b1b4:	das    
  42b1b5:	mov    ah,0x8f
  42b1b7:	jmp    0x42b159
  42b1b9:	or     BYTE PTR [edx+0x2f0000ba],al
  42b1bf:	xor    eax,0x991afafe
  42b1c4:	jg     0x42b14b
  42b1c6:	and    ebp,edi
  42b1c8:	or     ebx,edi
  42b1ca:	xchg   edi,eax
  42b1cb:	xchg   edi,eax
  42b1cc:	(bad)  
  42b1ce:	js     0x42b1ae
  42b1d0:	imul   eax,DWORD PTR [esp+0x62],0x50
  42b1d5:	add    al,0x2f
  42b1d7:	ficomp WORD PTR [esi-0x67]
  42b1da:	jo     0x42b235
  42b1dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b1dd:	adc    edi,edi
  42b1df:	pop    eax
  42b1e0:	ins    DWORD PTR es:[edi],dx
  42b1e1:	loopne 0x42b238
  42b1e3:	daa    
  42b1e4:	sti    
  42b1e5:	mov    bl,0x19
  42b1e7:	add    edx,DWORD PTR [edi-0x17d8bbb5]
  42b1ed:	add    edx,DWORD PTR [eax]
  42b1ef:	and    BYTE PTR [eax],bh
  42b1f1:	sub    DWORD PTR [ebx],0xa20f37ef
  42b1f7:	cmp    dl,bl
  42b1f9:	clc    
  42b1fa:	and    cl,dl
  42b1fc:	daa    
  42b1fd:	add    al,0x60
  42b1ff:	sbb    eax,DWORD PTR [ebx+0x0]
  42b202:	and    al,0x6f
  42b204:	ins    DWORD PTR es:[edi],dx
  42b205:	fild   WORD PTR ds:0x73ccb327
  42b20b:	or     dh,BYTE PTR ds:0xa154998
  42b211:	jge    0x42b237
  42b213:	push   esi
  42b214:	sub    eax,DWORD PTR [edx]
  42b216:	dec    ebp
  42b217:	pop    ebx
  42b218:	push   ebp
  42b219:	(bad)  
  42b21b:	es mov esi,esi
  42b21e:	and    eax,0xda951
  42b223:	add    dh,ah
  42b225:	pop    ebp
  42b226:	mov    DWORD PTR [edx],eax
  42b228:	lds    ebx,FWORD PTR [edi+eiz*2]
  42b22b:	nop
  42b22c:	in     al,0xce
  42b22e:	pop    edi
  42b22f:	mov    esi,0x99edb1b9
  42b234:	and    BYTE PTR [ecx+0x6d],bl
  42b237:	xlat   BYTE PTR ds:[ebx]
  42b238:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b239:	es push ebx
  42b23b:	sbb    dh,BYTE PTR ds:0x992fcd5b
  42b241:	mov    cl,0xa8
  42b243:	cdq    
  42b244:	sub    al,0x59
  42b246:	ins    DWORD PTR es:[edi],dx
  42b247:	rol    DWORD PTR [ebp-0x44c9feda],cl
  42b24d:	pop    ecx
  42b24e:	dec    edx
  42b24f:	in     eax,0xc3
  42b251:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b253:	mov    ebx,0xeb672322
  42b258:	scas   eax,DWORD PTR es:[edi]
  42b259:	pop    eax
  42b25a:	sub    edx,DWORD PTR [esi]
  42b25c:	xor    DWORD PTR [ebx],esp
  42b25e:	push   eax
  42b25f:	pop    esp
  42b260:	cwde   
  42b261:	jmp    0x42b25d
  42b263:	cwde   
  42b264:	xor    al,0x46
  42b266:	dec    edi
  42b267:	(bad)  
  42b268:	cmp    ah,BYTE PTR [ebx]
  42b26a:	je     0x42b279
  42b26c:	scas   eax,DWORD PTR es:[edi]
  42b26d:	pop    eax
  42b26e:	xchg   ebp,eax
  42b26f:	in     al,dx
  42b270:	sub    ah,BYTE PTR [ebx]
  42b272:	push   eax
  42b273:	cmp    ch,BYTE PTR [esi]
  42b275:	sbb    al,0x51
  42b277:	cmp    ch,BYTE PTR ss:[ebx-0x19e72918]
  42b27e:	adc    ch,BYTE PTR [ecx]
  42b280:	xor    edi,DWORD PTR ds:0x5d47f9ff
  42b286:	inc    esp
  42b287:	int    0x0
  42b289:	add    dh,bl
  42b28b:	push   ss
  42b28c:	jle    0x42b23f
  42b28e:	xor    bl,cl
  42b290:	xchg   ebx,eax
  42b291:	test   al,0x74
  42b293:	pop    ebx
  42b294:	and    DWORD PTR [edi-0x5781d6de],esp
  42b29a:	sub    eax,0x32fd8c57
  42b29f:	sub    edx,edi
  42b2a1:	bound  ebx,QWORD PTR [eax-0x3c8b7823]
  42b2a7:	daa    
  42b2a8:	cli    
  42b2a9:	jle    0x42b2f1
  42b2ab:	xchg   ebx,eax
  42b2ac:	call   0xfb04f311
  42b2b1:	outs   dx,BYTE PTR ds:[esi]
  42b2b2:	sub    dl,BYTE PTR [ebp+0x5b31ba4d]
  42b2b8:	adc    eax,0x51293a5f
  42b2bd:	mov    edx,0xf4d0cb33
  42b2c2:	ins    BYTE PTR es:[edi],dx
  42b2c3:	and    eax,0x23460085
  42b2c8:	xchg   DWORD PTR [ecx],ecx
  42b2ca:	dec    edx
  42b2cb:	shl    ebp,cl
  42b2cd:	mov    eax,ebx
  42b2cf:	(bad)
  42b2d2:	xor    ah,dl
  42b2d4:	cmc    
  42b2d5:	jmp    0x42b34f
  42b2d7:	pop    esi
  42b2d8:	stc    
  42b2d9:	inc    ebx
  42b2db:	fstp   TBYTE PTR [esi-0x1e1ebebb]
  42b2e1:	add    ecx,esi
  42b2e3:	je     0x42b2d8
  42b2e5:	push   edi
  42b2e6:	ds cmc 
  42b2e8:	dec    edi
  42b2e9:	dec    BYTE PTR [ecx-0x5a]
  42b2ec:	jae    0x42b2d6
  42b2ee:	add    BYTE PTR [eax],al
  42b2f0:	das    
  42b2f1:	int    0x0
  42b2f3:	add    BYTE PTR [esi-0x65],al
  42b2f6:	inc    ebx
  42b2f7:	test   DWORD PTR [edi-0x38],0xe11600ef
  42b2fe:	sub    eax,eax
  42b300:	jo     0x42b361
  42b302:	aaa    
  42b303:	pop    ss
  42b304:	jo     0x42b2af
  42b306:	add    dl,BYTE PTR ds:[ebx+0x25]
  42b30a:	adc    BYTE PTR fs:[ebx-0x11affde5],bl
  42b311:	xchg   BYTE PTR [edx-0x2],cl
  42b314:	leave  
  42b315:	(bad)  
  42b318:	push   0xbec681d6
  42b31d:	outs   dx,DWORD PTR ds:[esi]
  42b31e:	push   ds
  42b31f:	(bad)  
  42b320:	mov    ecx,0x4389f0a5
  42b325:	jmp    0x847e:0x21a9fe79
  42b32c:	(bad)  
  42b32d:	loopne 0x42b32f
  42b32f:	inc    ebx
  42b331:	add    BYTE PTR [edx+0x56],cl
  42b334:	and    edx,eax
  42b336:	lock test BYTE PTR [ecx-0x2e],0x81
  42b33b:	clc    
  42b33c:	adc    eax,0x2f74ffd2
  42b341:	cmp    BYTE PTR [ebx+0x45],0x27
  42b345:	addr16 jnp 0x42b38d
  42b348:	jg     0x42b390
  42b34a:	push   ss
  42b34b:	cld    
  42b34c:	push   edx
  42b34d:	in     eax,0xc
  42b34f:	xchg   edx,edi
  42b351:	(bad)  
  42b352:	js     0x42b34c
  42b354:	add    BYTE PTR [eax],al
  42b356:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b357:	jno    0x42b38b
  42b359:	call   0xfb4ec86e
  42b35e:	lods   al,BYTE PTR ds:[esi]
  42b35f:	ret    
  42b360:	or     al,0x74
  42b362:	mov    edx,0x3f0d1663
  42b367:	aam    0xc
  42b369:	xchg   edx,ebp
  42b36b:	(bad)  
  42b36c:	or     al,0x2d
  42b36f:	inc    edi
  42b370:	mov    cl,0x52
  42b372:	inc    eax
  42b373:	mov    eax,ds:0x2c7ce7f5
  42b378:	push   es
  42b379:	sti    
  42b37a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b37b:	ds cmp bl,0x2e
  42b37f:	mov    bh,cl
  42b381:	cli    
  42b382:	call   0xbb1d:0x275d7a61
  42b389:	and    edx,DWORD PTR [ecx]
  42b38b:	sbb    eax,0xde3757a
  42b390:	sbb    al,0x25
  42b392:	add    DWORD PTR [ebp-0x7e],ebp
  42b395:	sti    
  42b396:	clc    
  42b397:	add    al,0x7a
  42b399:	push   edi
  42b39a:	lock jl 0x42b3a3
  42b39d:	jg     0x42b387
  42b39f:	mov    cl,BYTE PTR ss:[edi-0x17]
  42b3a3:	repnz or DWORD PTR [eax],eax
  42b3a6:	(bad)  
  42b3a7:	(bad)  
  42b3a8:	jns    0x42b3a4
  42b3aa:	(bad)  
  42b3ab:	imul   esp,ebx,0x14b0c8f9
  42b3b1:	jg     0x42b374
  42b3b3:	lods   al,BYTE PTR ds:[esi]
  42b3b4:	pop    DWORD PTR [ecx]
  42b3b6:	icebp  
  42b3b7:	cli    
  42b3b8:	or     eax,0xc4000005
  42b3bd:	ficomp WORD PTR [ecx]
  42b3bf:	mov    dl,0x90
  42b3c1:	push   0xffffffeb
  42b3c3:	or     ah,BYTE PTR [ebx+eiz*1-0x7417dc23]
  42b3ca:	dec    edx
  42b3cb:	xchg   ecx,eax
  42b3cc:	sub    BYTE PTR [esi],dh
  42b3ce:	mov    ds:0x67238411,al
  42b3d3:	or     al,0x2e
  42b3d5:	test   eax,0xd5da7ede
  42b3da:	xchg   ecx,eax
  42b3db:	sbb    esi,DWORD PTR [esi-0x1]
  42b3de:	and    DWORD PTR [ebx],ecx
  42b3e0:	push   eax
  42b3e1:	aam    0x66
  42b3e3:	or     al,0x64
  42b3e5:	test   eax,0x2af241e9
  42b3ea:	jmp    0xa59e040d
  42b3ef:	push   cs
  42b3f0:	push   edi
  42b3f1:	push   edi
  42b3f2:	lds    ecx,FWORD PTR [ecx]
  42b3f4:	inc    esp
  42b3f5:	and    edi,DWORD PTR [ebp+0x2b]
  42b3f8:	inc    edi
  42b3f9:	sets   BYTE PTR [ecx]
  42b3fc:	xor    al,0x58
  42b3fe:	sub    eax,0xeadd6b0f
  42b403:	and    dh,0x24
  42b406:	ror    DWORD PTR [edx],cl
  42b408:	scas   eax,DWORD PTR es:[edi]
  42b409:	mov    al,ds:0x5a2403d2
  42b40e:	xchg   ebx,eax
  42b40f:	or     al,0x4
  42b411:	and    edi,DWORD PTR [ebx+0x3d22e090]
  42b417:	adc    edx,DWORD PTR [ecx+0x2890ab23]
  42b41d:	repnz adc DWORD PTR ss:[eax],eax
  42b421:	add    ah,ah
  42b423:	and    ah,BYTE PTR [ebp+0x43]
  42b426:	xor    al,0x49
  42b428:	test   al,0x1c
  42b42a:	ret    0x8b24
  42b42d:	or     bh,BYTE PTR [edx+0x57]
  42b430:	xchg   esp,eax
  42b431:	xchg   bl,bl
  42b433:	std    
  42b434:	data16 mov BYTE PTR [ebx+eiz*1],dh
  42b438:	add    ebp,edi
  42b43a:	jmp    0x2b17f86b
  42b43f:	push   ecx
  42b440:	inc    esp
  42b441:	fcom   QWORD PTR gs:[ecx+0x44]
  42b445:	inc    ebp
  42b446:	fsub   QWORD PTR [edi]
  42b448:	je     0x42b42f
  42b44a:	in     eax,dx
  42b44b:	cwde   
  42b44c:	cld    
  42b44d:	stc    
  42b44e:	sub    al,0xde
  42b450:	add    BYTE PTR [ebp+0x41142785],bh
  42b456:	jg     0x42b43a
  42b458:	add    BYTE PTR [esp+ebp*8-0x57],ch
  42b45c:	or     ebp,DWORD PTR [edx+0x34]
  42b45f:	daa    
  42b460:	out    0xe6,al
  42b462:	xor    eax,0x6cf70cc9
  42b467:	and    ah,bh
  42b469:	push   es
  42b46a:	fstp   DWORD PTR [eax+0x2a6f60e8]
  42b470:	arpl   WORD PTR [edx+0x6f],si
  42b473:	cmp    al,0xe6
  42b475:	out    0xa9,eax
  42b477:	mov    eax,0x6261e9f8
  42b47c:	arpl   WORD PTR [eax+0x6f],sp
  42b47f:	sub    al,0x87
  42b481:	sub    al,0x23
  42b483:	pop    edx
  42b484:	inc    esp
  42b485:	aam    0x0
  42b487:	add    cl,al
  42b489:	(bad)  [ebx-0x671c0d4]
  42b48f:	push   esp
  42b490:	adc    esp,DWORD PTR [eax]
  42b492:	inc    esp
  42b493:	mov    ebp,0x8c63633
  42b498:	xor    eax,0xafa02e25
  42b49d:	push   ds
  42b49e:	or     dl,BYTE PTR [esp+ebp*2+0x59]
  42b4a2:	shl    BYTE PTR [eax+0x3400ce71],0x62
  42b4a9:	xor    al,BYTE PTR [eax+0xdeeb85]
  42b4af:	jmp    0x9f0d4f
  42b4b4:	mov    esi,0x9e534f6f
  42b4b9:	xchg   BYTE PTR [eax],cl
  42b4bb:	inc    DWORD PTR [ecx+0xb]
  42b4be:	leave  
  42b4bf:	cmp    al,0xc4
  42b4c1:	es mov es,ecx
  42b4c4:	inc    ebp
  42b4c5:	int3   
  42b4c6:	dec    esi
  42b4c7:	push   0xffffff89
  42b4c9:	test   al,0x43
  42b4cb:	in     al,0xd6
  42b4cd:	mov    ds:0xc9b389f1,al
  42b4d2:	call   0xf616eba8
  42b4d7:	test   BYTE PTR [esi+0x51],dl
  42b4da:	pop    es
  42b4db:	xor    al,BYTE PTR [esi-0x3b]
  42b4de:	sahf   
  42b4df:	add    DWORD PTR [esi+0xd7d80dd],eax
  42b4e5:	fidiv  DWORD PTR [esp+edx*1-0x23]
  42b4e9:	ror    BYTE PTR [esi+0x6a],cl
  42b4ec:	add    BYTE PTR [eax],al
  42b4ee:	inc    edi
  42b4ef:	test   al,0x43
  42b4f1:	sti    
  42b4f2:	xchg   esi,eax
  42b4f3:	lds    ebp,FWORD PTR [edx-0x7b28cfe0]
  42b4f9:	sar    BYTE PTR [ebx-0x32201e3c],0x68
  42b500:	fisttp WORD PTR [ebx-0x5fef9]
  42b506:	adc    ebp,ebx
  42b508:	adc    ecx,0xb10c2d7
  42b50e:	les    esp,FWORD PTR [ecx-0x231b7e31]
  42b514:	cmc    
  42b515:	add    BYTE PTR [esi],dl
  42b517:	pushf  
  42b518:	fist   WORD PTR [eax]
  42b51a:	std    
  42b51b:	jmp    0x42b4dc
  42b51d:	call   0x91d5130
  42b522:	or     eax,0x1bc6489b
  42b527:	iret   
  42b528:	push   edx
  42b529:	cmp    eax,0xdcc0
  42b52e:	das    
  42b52f:	cmp    BYTE PTR [ecx-0x1c8d07c],al
  42b535:	gs das 
  42b537:	int    0xfd
  42b539:	mov    WORD PTR [edx+0x5c],gs
  42b53c:	scas   al,BYTE PTR es:[edi]
  42b53d:	xchg   BYTE PTR [esi+ebx*2-0x504ee05f],dh
  42b544:	jns    0x42b506
  42b546:	and    esp,DWORD PTR [ecx-0x515bba85]
  42b54c:	jns    0x42b583
  42b54e:	imul   ecx,DWORD PTR [eax+0xfb08],0xffffffab
  42b555:	test   BYTE PTR [ecx+0x7b5f109],0xfb
  42b55c:	das    
  42b55d:	aaa    
  42b55e:	(bad)  
  42b55f:	jns    0x42b5c2
  42b561:	popf   
  42b562:	mov    edi,edx
  42b564:	jo     0x42b555
  42b566:	jb     0x42b5ad
  42b568:	pop    edi
  42b569:	data16 aad 0xfa
  42b56c:	clc    
  42b56d:	addr16 jae 0x42b4f5
  42b570:	imul   ecx,eax,0x8
  42b573:	sti    
  42b574:	(bad)  
  42b575:	mov    ebp,0x148ef82
  42b57a:	sub    dl,BYTE PTR ds:0xc07b36ef
  42b580:	ret    
  42b581:	xor    BYTE PTR [eax+0x45],al
  42b584:	cmp    BYTE PTR [ebx+0x1d],cl
  42b587:	das    
  42b588:	mov    ah,0x82
  42b58a:	adc    al,0xe7
  42b58c:	ss mov ah,0x82
  42b58f:	add    ebp,DWORD PTR ds:0x9986fb81
  42b595:	xor    edi,eax
  42b597:	repnz and BYTE PTR [esi+edx*1+0xe],0xb4
  42b59d:	imul   esp
  42b59f:	xor    esi,DWORD PTR gs:[esp+eax*2-0x407da0fc]
  42b5a7:	loop   0x42b628
  42b5a9:	fimul  WORD PTR [edi-0x64df8a63]
  42b5af:	pop    es
  42b5b0:	bound  ebp,QWORD PTR [esi]
  42b5b2:	xchg   ebx,eax
  42b5b3:	icebp  
  42b5b4:	or     al,cl
  42b5b6:	daa    
  42b5b7:	add    al,0x0
  42b5b9:	add    BYTE PTR [eax],al
  42b5bb:	daa    
  42b5bc:	cld    
  42b5bd:	ds scas eax,DWORD PTR es:[edi]
  42b5bf:	mov    eax,ds:0x99eeaa72
  42b5c4:	outs   dx,BYTE PTR ds:[esi]
  42b5c5:	add    eax,0x4bf5924
  42b5ca:	das    
  42b5cb:	fmulp  st(5),st
  42b5cd:	repz mov bl,0x99
  42b5d0:	aaa    
  42b5d1:	call   0xc7e0:0xf1528f98
  42b5d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b5d9:	add    ecx,DWORD PTR [eax]
  42b5db:	sbb    dh,ah
  42b5dd:	cdq    
  42b5de:	add    BYTE PTR [edi+0xdf27cc1],0xe3
  42b5e5:	dec    ebp
  42b5e6:	jmp    0xe876:0xacf6a039
  42b5ed:	add    ebp,DWORD PTR [edi]
  42b5ef:	xchg   esi,eax
  42b5f0:	xchg   ebx,eax
  42b5f1:	cld    
  42b5f2:	outs   dx,BYTE PTR ds:[esi]
  42b5f3:	cdq    
  42b5f4:	sbb    ch,BYTE PTR [ebx+0x3e82247]
  42b5fa:	das    
  42b5fb:	push   ecx
  42b5fc:	lods   eax,DWORD PTR ds:[esi]
  42b5fd:	xor    edx,DWORD PTR [edi+0x5b]
  42b600:	leave  
  42b601:	add    eax,0x7cf85334
  42b606:	mov    edx,0x2406672d
  42b60b:	stos   BYTE PTR es:[edi],al
  42b60c:	int3   
  42b60d:	push   es
  42b60e:	call   0xbf8b:0x7eaa4e32
  42b615:	in     al,0x16
  42b617:	pop    ds
  42b618:	retf   
  42b619:	jp     0x42b622
  42b61b:	pop    ebx
  42b61c:	ret    
  42b61d:	add    al,0x0
  42b61f:	add    BYTE PTR [edx-0x78],bh
  42b622:	ins    BYTE PTR es:[edi],dx
  42b623:	shl    BYTE PTR [eax],0x8e
  42b626:	add    BYTE PTR [edi+ebp*8+0x2e],ah
  42b62a:	push   ecx
  42b62b:	rol    DWORD PTR [ebx],0xc0
  42b62e:	cli    
  42b62f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b630:	gs test eax,0x552472f0
  42b636:	jl     0x42b5c1
  42b638:	xor    al,0x8a
  42b63a:	sbb    eax,0xf99f318f
  42b63f:	xchg   BYTE PTR [edi-0x44e37a2e],bl
  42b645:	sbb    al,0x44
  42b647:	jle    0x42b5ce
  42b649:	xor    eax,0xde2ce9ad
  42b64e:	push   ecx
  42b64f:	push   ecx
  42b650:	jb     0x42b623
  42b652:	stc    
  42b653:	pop    esi
  42b654:	adc    eax,0xc762ec99
  42b659:	(bad)  
  42b65a:	jge    0x42b67d
  42b65c:	mov    fs,WORD PTR cs:[esi-0x5d]
  42b660:	ror    DWORD PTR [edi+0x232717e8],1
  42b666:	cli    
  42b667:	bound  esp,QWORD PTR [edi+ebx*4]
  42b66a:	stc    
  42b66b:	call   0x9d3c8d2f
  42b670:	or     al,0x36
  42b672:	jne    0x42b63c
  42b674:	xor    ah,BYTE PTR [ebx]
  42b676:	xchg   BYTE PTR [esp+ecx*1+0x32ca0e36],bl
  42b67d:	and    edi,DWORD PTR [esi+0x6]
  42b680:	sub    ebx,edx
  42b682:	test   BYTE PTR [edi+0x23310000],cl
  42b688:	cli    
  42b689:	push   0x29
  42b68b:	fnsave [ebp+eiz*8+0x6a]
  42b68f:	mov    ds:0xa3a6e9f5,eax
  42b694:	cmc    
  42b695:	shl    DWORD PTR ds:[edi+eax*8+0x62de2fab],1
  42b69d:	(bad)  
  42b69e:	enter  0x6302,0x0
  42b6a2:	jg     0x42b701
  42b6a4:	int3   
  42b6a5:	mov    edx,DWORD PTR [ebx-0x5]
  42b6a8:	mov    edi,DWORD PTR [ebp-0x6a]
  42b6ab:	cdq    
  42b6ac:	inc    ebx
  42b6ad:	aam    0xee
  42b6af:	ret    
  42b6b0:	adc    eax,0xf09789fe
  42b6b5:	cmp    DWORD PTR [eax-0x37bfa1d],0xffffffe2
  42b6bc:	cmc    
  42b6bd:	inc    DWORD PTR [eax]
  42b6bf:	cli    
  42b6c0:	(bad)  
  42b6c1:	or     al,0xa9
  42b6c3:	jecxz  0x42b6ba
  42b6c5:	jne    0x42b671
  42b6c7:	js     0x42b71d
  42b6c9:	push   esi
  42b6ca:	adc    eax,0x19fd70fa
  42b6cf:	jecxz  0x42b74a
  42b6d1:	clc    
  42b6d2:	xchg   edi,eax
  42b6d3:	ins    BYTE PTR es:[edi],dx
  42b6d4:	add    dl,BYTE PTR [esi-0x2]
  42b6d7:	mov    esi,db7
  42b6da:	stc    
  42b6db:	test   BYTE PTR ds:0x73e2de83,0x6
  42b6e2:	push   eax
  42b6e3:	pop    ebp
  42b6e4:	out    dx,eax
  42b6e5:	pop    ebx
  42b6e6:	fstp   st(5)
  42b6e8:	mov    esi,0x3d000045
  42b6ed:	loop   0x42b6d7
  42b6ef:	mov    ds:0x80f5e434,eax
  42b6f4:	mov    esp,esi
  42b6f6:	push   DWORD PTR [edx+ebx*8+0x61]
  42b6fa:	jl     0x42b6f3
  42b6fc:	pushf  
  42b6fd:	ins    DWORD PTR es:[edi],dx
  42b6fe:	nop
  42b6ff:	jmp    DWORD PTR [ebx+0x4175f5f5]
  42b705:	ja     0x42b6fe
  42b707:	push   ebx
  42b708:	push   ds
  42b709:	sub    eax,0x9c39fffd
  42b70e:	ror    BYTE PTR [edi],0x83
  42b711:	mov    ds:0x976384e1,al
  42b716:	in     al,dx
  42b717:	xor    edx,0xffffffe8
  42b71a:	jns    0x42b708
  42b71c:	das    
  42b71d:	sti    
  42b71e:	scas   eax,DWORD PTR es:[edi]
  42b71f:	push   ecx
  42b720:	pusha  
  42b721:	clc    
  42b722:	add    edi,DWORD PTR [edi-0x7e]
  42b725:	cmp    edi,edi
  42b727:	mov    BYTE PTR [ebx-0x1d],bh
  42b72a:	in     al,dx
  42b72b:	or     ch,BYTE PTR [ebp+0x2ffffd9f]
  42b731:	mov    edx,0xd74723b9
  42b736:	sbb    al,0x61
  42b738:	dec    ebp
  42b739:	jge    0x42b740
  42b73b:	test   bh,ch
  42b73d:	add    edi,DWORD PTR [edx+0x59]
  42b740:	cs pop es
  42b742:	(bad)  
  42b743:	cs out dx,eax
  42b745:	(bad)  
  42b746:	jne    0x42b78c
  42b748:	adc    esp,DWORD PTR [ebx]
  42b74a:	mov    DWORD PTR [ebx+ebx*1+0x4],0x3c7c
  42b752:	cs pop es
  42b754:	inc    BYTE PTR [esi+0x3ff03b42]
  42b75a:	das    
  42b75b:	nop
  42b75c:	mov    dl,0xf
  42b75e:	clc    
  42b75f:	and    BYTE PTR ds:0xac8643fb,al
  42b765:	out    0x4c,eax
  42b767:	mov    edi,0xd6a4fb04
  42b76c:	jbe    0x42b7e2
  42b76e:	dec    ebx
  42b76f:	out    0xc7,eax
  42b771:	repnz cmp BYTE PTR [ebx+0x72f00db],al
  42b778:	jle    0x42b7f7
  42b77a:	sub    eax,DWORD PTR [edi]
  42b77c:	mov    cl,BYTE PTR [ecx]
  42b77e:	stc    
  42b77f:	repz mov al,BYTE PTR [edi]
  42b782:	push   edi
  42b783:	(bad)  
  42b784:	pushf  
  42b785:	stc    
  42b786:	inc    eax
  42b787:	in     eax,dx
  42b788:	pop    ss
  42b789:	add    BYTE PTR [edi],ch
  42b78b:	pop    es
  42b78c:	jns    0x42b7d3
  42b78e:	daa    
  42b78f:	fisttp WORD PTR [ebp+0x63]
  42b792:	sub    DWORD PTR ds:0xde4b4478,ecx
  42b798:	add    edx,DWORD PTR [ecx+0x53f3c26c]
  42b79e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b79f:	call   0x249:0x17171c0b
  42b7a6:	add    al,0x63
  42b7a8:	test   al,0x13
  42b7aa:	mov    bl,0x5b
  42b7ac:	call   0x2cabe6b4
  42b7b1:	sub    BYTE PTR [edi],dl
  42b7b3:	scas   al,BYTE PTR es:[edi]
  42b7b4:	stos   BYTE PTR es:[edi],al
  42b7b5:	js     0x42b7b7
  42b7b7:	add    BYTE PTR [ebx],cl
  42b7b9:	mov    esi,0x1c53438f
  42b7be:	fwait
  42b7bf:	(bad)  
  42b7c0:	fs ret 0x8cbf
  42b7c4:	je     0x42b788
  42b7c6:	rcl    DWORD PTR [eax+ebp*4+0x26],cl
  42b7ca:	stos   BYTE PTR es:[edi],al
  42b7cb:	dec    eax
  42b7cc:	adc    edx,edx
  42b7ce:	out    0x8c,eax
  42b7d0:	ins    BYTE PTR es:[edi],dx
  42b7d1:	ret    0x8cb3
  42b7d4:	and    al,0xc2
  42b7d6:	daa    
  42b7d7:	in     al,dx
  42b7d8:	xacquire xchg BYTE PTR [ecx+0x3],ah
  42b7dc:	mov    bl,0x1e
  42b7de:	jmp    0x42b767
  42b7e0:	adc    esi,ebx
  42b7e2:	out    0x3,eax
  42b7e4:	frstor [ebx]
  42b7e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b7e7:	daa    
  42b7e8:	xor    dh,bl
  42b7ea:	inc    edx
  42b7eb:	xlat   BYTE PTR ds:[ebx]
  42b7ec:	(bad)  [eax-0x54]
  42b7ef:	daa    
  42b7f0:	cmp    esp,DWORD PTR [ebp-0x54]
  42b7f3:	daa    
  42b7f4:	pop    ds
  42b7f5:	lods   al,BYTE PTR gs:[esi]
  42b7f7:	daa    
  42b7f8:	cmp    eax,DWORD PTR [esi]
  42b7fa:	imul   ebp,DWORD PTR [edi+0x55],0x1b
  42b7fe:	outs   dx,DWORD PTR ds:[esi]
  42b7ff:	hlt    
  42b800:	sbb    DWORD PTR [ebx],edx
  42b802:	pushf  
  42b803:	data16 fstp QWORD PTR [edx]
  42b806:	aaa    
  42b807:	(bad)  
  42b808:	hlt    
  42b809:	rol    edi,0x53
  42b80c:	fstp   QWORD PTR [edx]
  42b80e:	je     0x42b837
  42b810:	sti    
  42b811:	into   
  42b812:	add    BYTE PTR [ecx],ch
  42b814:	sbb    ebp,esi
  42b816:	jne    0x42b806
  42b818:	sub    eax,0x5dc162
  42b81d:	add    BYTE PTR [edi+0x17],cl
  42b820:	jne    0x42b827
  42b822:	cmp    ebp,DWORD PTR [ecx+0x7d]
  42b825:	or     eax,0x3d640647
  42b82a:	sub    eax,0x80a98517
  42b82f:	in     eax,0xf9
  42b831:	sub    eax,0x2dc2ee47
  42b836:	pop    ss
  42b837:	out    0xff,eax
  42b839:	stc    
  42b83a:	sub    eax,0x3ccd4517
  42b83f:	pop    ss
  42b840:	jne    0x42b807
  42b842:	cmp    al,0x69
  42b844:	dec    ebp
  42b845:	int    0x0
  42b847:	push   es
  42b848:	cmp    eax,0x86172d02
  42b84d:	jns    0x42b848
  42b84f:	push   cs
  42b850:	je     0x42b886
  42b852:	lods   al,BYTE PTR ds:[esi]
  42b853:	xchg   esi,eax
  42b854:	and    al,0xe6
  42b856:	sub    al,0x92
  42b858:	movd   mm3,DWORD PTR [eax]
  42b85b:	ret    0x7238
  42b85e:	lock sar DWORD PTR [eax],0x5e
  42b862:	sbb    dl,al
  42b864:	and    BYTE PTR [ecx+0xf],al
  42b867:	mov    esp,0x8e9f4efa
  42b86c:	and    al,0xf9
  42b86e:	test   BYTE PTR [eax+0x67],bh
  42b871:	aas    
  42b872:	sub    eax,0x470d7569
  42b877:	push   es
  42b878:	sbb    eax,ecx
  42b87a:	cs pop ss
  42b87c:	cli    
  42b87d:	popf   
  42b87e:	adc    BYTE PTR [esi+0x93e8],bh
  42b884:	loopne 0x42b89d
  42b886:	cli    
  42b887:	(bad)  
  42b888:	lock shl DWORD PTR [ecx+ebp*4],0xb3
  42b88d:	sahf   
  42b88e:	and    al,0x0
  42b890:	push   0xffffffdb
  42b892:	inc    ebx
  42b893:	adc    al,0x41
  42b895:	pusha  
  42b896:	(bad)  
  42b897:	(bad)  
  42b898:	and    eax,esp
  42b89a:	mov    esi,DWORD PTR [edx+ebp*8-0xb]
  42b89e:	call   0xf61f1f97
  42b8a3:	mov    al,0x7
  42b8a5:	or     eax,DWORD PTR [ebx]
  42b8a7:	lea    ebp,[edx-0x3a]
  42b8aa:	sbb    al,ch
  42b8ac:	jmp    0xf542af33
  42b8b1:	sbb    eax,0x6b4d5e57
  42b8b6:	in     eax,0x5d
  42b8b8:	xchg   esp,eax
  42b8b9:	repnz add BYTE PTR [ebp+0x4d],dl
  42b8bd:	push   cs
  42b8be:	jnp    0x42b8a4
  42b8c0:	mov    ds,WORD PTR [ebp-0x1a]
  42b8c3:	test   dh,al
  42b8c5:	fld    QWORD PTR [eax]
  42b8c7:	push   ebx
  42b8c8:	or     BYTE PTR [edi-0x77fa24d7],dh
  42b8ce:	cmc    
  42b8cf:	mov    esi,DWORD PTR [esi]
  42b8d1:	fild   QWORD PTR [esi+0x4]
  42b8d4:	adc    eax,0x21d6b60a
  42b8d9:	fisttp WORD PTR [ecx+0x6a]
  42b8dc:	adc    edi,ebx
  42b8de:	outs   dx,BYTE PTR ds:[esi]
  42b8df:	or     BYTE PTR [edi],bl
  42b8e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b8e2:	and    al,0x2c
  42b8e4:	aad    0x5
  42b8e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b8e7:	(bad)  
  42b8e8:	add    BYTE PTR [eax],al
  42b8ea:	loope  0x42b8ca
  42b8ec:	dec    ecx
  42b8ed:	push   0xfffffff1
  42b8ef:	fisubr WORD PTR [esi+0xc]
  42b8f2:	jmp    DWORD PTR [ebp+0x5953424]
  42b8f8:	xchg   esi,eax
  42b8f9:	(bad)  
  42b8fa:	and    edi,ebx
  42b8fc:	xor    eax,0x302495cf
  42b902:	dec    edi
  42b903:	mov    ecx,0x61412024
  42b908:	popa   
  42b909:	add    DWORD PTR [edi],ebp
  42b90b:	pop    es
  42b90c:	(bad)  
  42b90d:	cmp    bl,ah
  42b90f:	and    ah,BYTE PTR [esi]
  42b911:	or     esi,DWORD PTR [ebx+0x2fffff78]
  42b917:	sbb    al,0xf5
  42b919:	or     dh,BYTE PTR [ebx+0x2fffff3f]
  42b91f:	dec    edi
  42b920:	pop    ebx
  42b921:	or     BYTE PTR [ebx+0x4b74011b],ah
  42b927:	out    dx,eax
  42b928:	push   DWORD PTR [ebx+0x53]
  42b92b:	jmp    0x42b919
  42b92d:	and    eax,DWORD PTR [edi+eax*1-0x2]
  42b931:	test   edi,edx
  42b933:	sub    eax,0x72f0138
  42b938:	mov    eax,DWORD PTR [ebx+0x13]
  42b93b:	jmp    0x42b991
  42b93d:	mov    DWORD PTR [ebx+0x18e834e3],eax
  42b943:	out    dx,al
  42b944:	(bad)  
  42b945:	cli    
  42b946:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b947:	xchg   DWORD PTR ds:[ebx+0x13],edi
  42b94b:	adc    edi,DWORD PTR ds:0x300000f7
  42b951:	or     DWORD PTR [esi],0x1
  42b954:	das    
  42b955:	pop    es
  42b956:	add    DWORD PTR [ebx+ecx*1+0x2f],esi
  42b95a:	mov    ebx,DWORD PTR [ebx+0x53]
  42b95d:	out    dx,eax
  42b95e:	push   DWORD PTR [ebx+0x4b]
  42b961:	and    esp,esi
  42b963:	mov    esi,0x86fe075d
  42b968:	sbb    esp,ebx
  42b96a:	sub    BYTE PTR [edi+0x13],bh
  42b96d:	jmp    0x42b98b
  42b96f:	add    BYTE PTR [ecx+0x42],ch
  42b972:	and    cl,BYTE PTR [ebx]
  42b974:	das    
  42b975:	mov    dh,bh
  42b977:	or     ch,BYTE PTR [ebx+0x2ffffdf7]
  42b97d:	sbb    al,0xf8
  42b97f:	xor    eax,0x478abfb4
  42b984:	adc    eax,0xd1f8e6de
  42b989:	sbb    eax,0x67016de4
  42b98e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b98f:	daa    
  42b990:	daa    
  42b991:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  42b993:	daa    
  42b994:	and    esi,DWORD PTR [ebp-0x3e537377]
  42b99a:	ins    DWORD PTR es:[edi],dx
  42b99b:	add    ebp,DWORD PTR [edi]
  42b99d:	fimul  WORD PTR [ecx-0x226d1f7a]
  42b9a3:	imul   edx,DWORD PTR [esi-0x61],0x5eaa0f19
  42b9aa:	call   0x5ec2e8b2
  42b9af:	mov    BYTE PTR [edx+ebp*2-0x18],cl
  42b9b3:	add    eax,DWORD PTR [eax]
  42b9b5:	add    BYTE PTR [edi],ch
  42b9b7:	sub    BYTE PTR [esp+eax*8+0x7c],0xe0
  42b9bc:	inc    ecx
  42b9bd:	cmp    eax,0x713cd66c
  42b9c2:	mov    dl,0xa2
  42b9c4:	add    ebx,DWORD PTR [edi+edi*2-0x80]
  42b9c8:	stos   BYTE PTR es:[edi],al
  42b9c9:	dec    eax
  42b9ca:	or     edx,esi
  42b9cc:	fisubr DWORD PTR [ecx]
  42b9ce:	mov    dh,0xa2
  42b9d0:	retf   
  42b9d1:	aas    
  42b9d2:	(bad)  
  42b9d3:	icebp  
  42b9d4:	adc    edx,DWORD PTR [edx]
  42b9d6:	outs   dx,DWORD PTR ds:[esi]
  42b9d7:	fidiv  WORD PTR [eax+0x48]
  42b9da:	or     ebx,edx
  42b9dc:	outs   dx,BYTE PTR ds:[esi]
  42b9dd:	dec    eax
  42b9de:	push   ebx
  42b9df:	out    dx,al
  42b9e0:	pop    ss
  42b9e1:	(bad)  
  42b9e2:	in     al,dx
  42b9e3:	shl    DWORD PTR [ebx],0xff
  42b9e6:	inc    ebx
  42b9e7:	xchg   edx,eax
  42b9e8:	cmc    
  42b9e9:	inc    ebx
  42b9ea:	das    
  42b9eb:	imul   ebp,DWORD PTR [edi+eiz*1+0x27ac6543],0x27a41eeb
  42b9f6:	(bad)  
  42b9f8:	out    0x3,eax
  42b9fa:	das    
  42b9fb:	push   es
  42b9fc:	jl     0x42ba38
  42b9fe:	gs pop ss
  42ba00:	add    DWORD PTR [ebp+0x6b],ebp
  42ba03:	mov    esp,DWORD PTR ds:0x1cc1d8f2
  42ba09:	fwait
  42ba0a:	and    BYTE PTR [edi+0x4d],bl
  42ba0d:	lds    esp,FWORD PTR [eax]
  42ba0f:	stos   DWORD PTR es:[edi],eax
  42ba10:	test   DWORD PTR [edi],ebp
  42ba12:	push   ebx
  42ba13:	ret    0xf4c
  42ba16:	cmp    BYTE PTR [ecx*2+0x80000cd],dl
  42ba1d:	lds    ebx,FWORD PTR [ebp+eax*8+0x3c]
  42ba21:	mov    edi,0xc270f6ed
  42ba26:	sbb    dl,al
  42ba28:	adc    eax,0x370d5cc6
  42ba2d:	sbb    al,0x45
  42ba2f:	add    eax,0x2df9dd38
  42ba34:	push   edi
  42ba35:	test   BYTE PTR [ebp-0x3db8db],0x24
  42ba3c:	inc    edi
  42ba3d:	out    dx,al
  42ba3e:	call   FWORD PTR [edi+edx*1]
  42ba41:	repnz std 
  42ba43:	mov    cl,0x23
  42ba45:	mov    ds:0x9829d124,al
  42ba4a:	dec    ebx
  42ba4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ba4c:	rcl    DWORD PTR [ebx],1
  42ba4e:	sbb    DWORD PTR ds:0x1d00e317,0xc575131e
  42ba58:	sbb    BYTE PTR [esi],al
  42ba5a:	push   0x11
  42ba5c:	mov    cl,0x13
  42ba5e:	xchg   DWORD PTR [ecx-0x6dcfe76b],esp
  42ba64:	mov    eax,ds:0x84cd248a
  42ba69:	inc    di
  42ba6b:	addr16 xchg ecx,eax
  42ba6d:	imul   esi,DWORD PTR [ebp+0x5],0xb62d063f
  42ba74:	adc    BYTE PTR [ebx],0xfa
  42ba77:	aad    0x50
  42ba79:	mov    esi,0xa46800e8
  42ba7e:	idiv   bh
  42ba80:	add    BYTE PTR [eax],al
  42ba82:	sub    DWORD PTR [edi-0x6a11d7dc],ecx
  42ba88:	inc    edx
  42ba89:	dec    BYTE PTR [ecx]
  42ba8b:	sbb    BYTE PTR [esi+0x24],ch
  42ba8e:	jbe    0x42ba92
  42ba90:	dec    dx
  42ba92:	sub    BYTE PTR [eax],bl
  42ba94:	push   edi
  42ba95:	pop    esi
  42ba96:	int3   
  42ba97:	sbb    edx,DWORD PTR [ebx-0x75]
  42ba9a:	xor    edi,DWORD PTR [esi-0x46]
  42ba9d:	add    al,0x46
  42ba9f:	mov    ch,0x81
  42baa1:	in     al,dx
  42baa2:	xchg   ebp,eax
  42baa3:	std    
  42baa4:	icebp  
  42baa5:	sbb    DWORD PTR [ebx+0x448b04e9],0xffffff8f
  42baac:	pop    es
  42baad:	push   0x7
  42baaf:	or     dl,BYTE PTR ds:0xe313e9fe
  42bab5:	add    ah,BYTE PTR [edx+ebx*1]
  42bab8:	and    ebp,0x4b
  42babb:	and    dh,bh
  42babd:	call   DWORD PTR [ebx]
  42babf:	addr16 out 0x83,al
  42bac2:	repnz adc bh,BYTE PTR [ebx+0x7d]
  42bac6:	into   
  42bac7:	fld    QWORD PTR [ecx+0x62e914c2]
  42bacd:	add    BYTE PTR [esi-0x560002f4],bh
  42bad3:	pop    es
  42bad4:	cld    
  42bad5:	xor    DWORD PTR [esi-0x7ba21a99],edx
  42badb:	out    0x0,al
  42badd:	push   DWORD PTR [edx+0x3c5204bd]
  42bae3:	loope  0x42bb47
  42bae5:	add    DWORD PTR [eax],eax
  42bae7:	add    BYTE PTR [esi+0x9fffc9f],ch
  42baed:	and    dh,bh
  42baef:	dec    DWORD PTR [ecx]
  42baf1:	xchg   esi,eax
  42baf2:	and    al,0x4
  42baf4:	les    eax,FWORD PTR [edi+0x62f6a00]
  42bafa:	out    0x2d,al
  42bafc:	jnp    0x42baa2
  42bafe:	sti    
  42baff:	mov    ebp,0x8753072b
  42bb04:	pop    ebx
  42bb05:	xchg   al,dh
  42bb07:	and    ebp,DWORD PTR ds:0x1c4efe07
  42bb0d:	lock jg 0x42bb8c
  42bb10:	daa    
  42bb11:	push   es
  42bb12:	push   ebp
  42bb13:	xchg   DWORD PTR [ebp-0x71],eax
  42bb16:	pop    ecx
  42bb17:	sti    
  42bb18:	xor    BYTE PTR [ebp+0x72f012e],al
  42bb1e:	mov    DWORD PTR [edx+0x2b],eax
  42bb21:	gs aaa 
  42bb23:	sbb    BYTE PTR [eax],bh
  42bb25:	jnp    0x42bb49
  42bb27:	add    DWORD PTR [edi],ebp
  42bb29:	pop    es
  42bb2a:	push   esp
  42bb2b:	push   eax
  42bb2c:	sbb    BYTE PTR [edx],ch
  42bb2e:	xchg   BYTE PTR [esi],cl
  42bb30:	outs   dx,DWORD PTR ds:[esi]
  42bb31:	pop    es
  42bb32:	xor    edi,0x9083042e
  42bb38:	das    
  42bb39:	pop    es
  42bb3a:	(bad)  
  42bb3b:	cli    
  42bb3c:	cmp    bl,0x8a
  42bb3f:	je     0x42bb4c
  42bb41:	mov    ch,al
  42bb43:	cli    
  42bb44:	xlat   BYTE PTR ds:[ebx]
  42bb45:	dec    eax
  42bb46:	ss cli 
  42bb48:	loopne 0x42bacc
  42bb4a:	mov    ebp,0xb300000a
  42bb4f:	inc    esp
  42bb50:	(bad)  
  42bb51:	jmp    FWORD PTR [edi]
  42bb53:	mov    al,BYTE PTR [edx-0x28c3525]
  42bb59:	dec    edi
  42bb5a:	xlat   BYTE PTR ds:[ebx]
  42bb5b:	add    BYTE PTR [eax],ch
  42bb5d:	add    BYTE PTR [edi],ch
  42bb5f:	jnp    0x42bb1e
  42bb61:	jae    0x42bbb1
  42bb63:	pop    esp
  42bb64:	jae    0x42bb4a
  42bb66:	xchg   edi,eax
  42bb67:	cmp    al,0xe0
  42bb69:	cli    
  42bb6a:	mov    al,ds:0x9c36ed7f
  42bb6f:	or     cl,BYTE PTR [ebx+0x52]
  42bb72:	mov    ds:0x8bdf6cdd,al
  42bb77:	adc    al,0x5b
  42bb79:	push   ebx
  42bb7a:	fild   WORD PTR ds:0x1475237e
  42bb80:	gs ret 
  42bb82:	cld    
  42bb83:	fcom   DWORD PTR [esi+0x6cf9e3fc]
  42bb89:	inc    esi
  42bb8a:	pop    edi
  42bb8b:	lods   eax,DWORD PTR ds:[esi]
  42bb8c:	pusha  
  42bb8d:	pop    esi
  42bb8e:	pop    edi
  42bb8f:	data16 (bad) 
  42bb91:	mul    DWORD PTR [edi-0x5b14e04e]
  42bb97:	neg    DWORD PTR [edx]
  42bb99:	cld    
  42bb9a:	lods   al,BYTE PTR ds:[esi]
  42bb9b:	sbb    eax,0xca341a9c
  42bba0:	fcmovnu st,st(6)
  42bba2:	icebp  
  42bba3:	fnsave [esi+eax*4+0x4]
  42bba7:	adc    bh,bl
  42bba9:	sti    
  42bbaa:	jo     0x42bc0d
  42bbac:	lods   eax,DWORD PTR ds:[esi]
  42bbad:	repz push 0x1a3f06
  42bbb3:	add    BYTE PTR [esp+edx*1],dl
  42bbb6:	jo     0x42bbf9
  42bbb8:	add    al,0x62
  42bbba:	and    eax,0xfad708f4
  42bbbf:	cli    
  42bbc0:	cmc    
  42bbc1:	lods   al,BYTE PTR ds:[esi]
  42bbc2:	mov    edi,0xc3146645
  42bbc7:	mov    DWORD PTR [ebx-0x6],esp
  42bbca:	iret   
  42bbcb:	xor    eax,0xefb31427
  42bbd0:	jbe    0xde71c0b9
  42bbd6:	je     0x42bb59
  42bbd8:	in     al,0x11
  42bbda:	fwait
  42bbdb:	sti    
  42bbdc:	jo     0x42bbf1
  42bbde:	sbb    eax,DWORD PTR [eax]
  42bbe0:	mov    ah,0xe9
  42bbe2:	mov    ds:0x2fde6f15,eax
  42bbe7:	cmp    DWORD PTR [ecx+0x1c03e7de],ebp
  42bbed:	jl     0x42bbef
  42bbef:	scas   eax,DWORD PTR es:[edi]
  42bbf0:	out    dx,al
  42bbf1:	push   ss
  42bbf2:	add    BYTE PTR [ecx-0x3b8ae909],dh
  42bbf8:	mov    ecx,0x7d1a089a
  42bbfd:	xchg   esp,eax
  42bbfe:	clc    
  42bbff:	jmp    0x42bbff
  42bc01:	cmc    
  42bc02:	jge    0x42bc2d
  42bc04:	jne    0x42bba9
  42bc06:	jge    0x42bc36
  42bc08:	cmp    ebp,DWORD PTR [edi+0x1810c8e8]
  42bc0e:	cli    
  42bc0f:	bound  esp,QWORD PTR [ebx-0x34]
  42bc12:	in     eax,dx
  42bc13:	mov    ah,0x2f
  42bc15:	pop    sp
  42bc17:	add    BYTE PTR es:[eax],al
  42bc1a:	pop    eax
  42bc1b:	int3   
  42bc1c:	callw  0x6bf9
  42bc20:	mov    ebp,DWORD PTR [edi+edx*2+0x12]
  42bc24:	cli    
  42bc25:	push   cs
  42bc26:	(bad)  [edx-0x51c1f9b3]
  42bc2c:	or     eax,0xf8932ca9
  42bc31:	leave  
  42bc32:	and    eax,0x54ee4477
  42bc37:	mov    cl,0xf9
  42bc39:	pop    esp
  42bc3a:	sbb    eax,0x5d3a4da3
  42bc3f:	popa   
  42bc40:	test   BYTE PTR [ebp+0x39fa17f7],dh
  42bc46:	add    ecx,DWORD PTR [ebp+0x592ce93d]
  42bc4c:	shr    esi,0xbf
  42bc4f:	cdq    
  42bc50:	stc    
  42bc51:	pop    ds
  42bc52:	retf   
  42bc53:	dec    esi
  42bc54:	dec    ecx
  42bc55:	scas   eax,DWORD PTR es:[edi]
  42bc56:	aad    0xb4
  42bc58:	xchg   BYTE PTR [esp+eax*8],ch
  42bc5b:	mov    bh,0x55
  42bc5d:	mov    al,0xea
  42bc5f:	fiadd  WORD PTR [eax]
  42bc61:	cmp    DWORD PTR [edx-0x5b],0xdd7c8ef9
  42bc68:	mov    esi,0x49de9a00
  42bc6d:	push   0xffffff96
  42bc6f:	retf   
  42bc70:	shr    DWORD PTR [edx-0x7a],1
  42bc73:	fwait
  42bc74:	call   0xf75a0b4c
  42bc79:	mov    dl,BYTE PTR [ebp-0x4c]
  42bc7c:	mov    edx,0x96000004
  42bc81:	push   es
  42bc82:	les    edi,FWORD PTR ds:0x4bc17e0
  42bc88:	xchg   BYTE PTR [ebx-0x72ad97b3],ch
  42bc8e:	inc    eax
  42bc8f:	add    BYTE PTR [esi+ebx*8+0x2a],bh
  42bc93:	(bad)  [ecx]
  42bc95:	out    dx,al
  42bc96:	pushf  
  42bc97:	adc    BYTE PTR [esi-0x24077e22],al
  42bc9d:	pop    ss
  42bc9e:	outs   dx,BYTE PTR ds:[esi]
  42bc9f:	xor    al,0x7b
  42bca1:	arpl   WORD PTR ds:0x9e3690,bp
  42bca7:	push   esi
  42bca8:	lods   al,BYTE PTR ds:[esi]
  42bca9:	fsubrp st(1),st
  42bcab:	adc    ecx,eax
  42bcad:	adc    al,0x15
  42bcaf:	mov    WORD PTR [esi],es
  42bcb1:	sahf   
  42bcb2:	add    BYTE PTR [ebp+0x4ffd8146],al
  42bcb8:	add    edx,esp
  42bcba:	mov    al,ds:0x4eda5610
  42bcbf:	push   edi
  42bcc0:	loope  0x42bce3
  42bcc2:	xor    eax,0xffffff8b
  42bcc5:	or     al,0x75
  42bcc7:	in     al,0x36
  42bcc9:	scas   eax,DWORD PTR es:[edi]
  42bcca:	test   eax,0x98e1f101
  42bccf:	adc    BYTE PTR [esi],dl
  42bcd1:	ficom  DWORD PTR [esi+0x5d]
  42bcd4:	inc    ecx
  42bcd5:	pusha  
  42bcd6:	mov    ebx,0xde845b
  42bcdb:	jmp    FWORD PTR [edx]
  42bcdd:	mov    esi,0xdd1c5204
  42bce2:	bound  eax,QWORD PTR [eax]
  42bce4:	add    BYTE PTR [eax],al
  42bce6:	das    
  42bce7:	pop    edi
  42bce8:	push   esp
  42bce9:	div    BYTE PTR [eax+0x2f03c360]
  42bcef:	pop    eax
  42bcf0:	jno    0x42bd16
  42bcf2:	sub    esi,ebp
  42bcf4:	push   0x0
  42bcf6:	add    eax,0x953de607
  42bcfb:	xor    bh,0xbd
  42bcfe:	xor    eax,DWORD PTR [edi]
  42bd00:	dec    ebx
  42bd01:	xchg   DWORD PTR [ebx+0x331fe886],edx
  42bd07:	pop    es
  42bd08:	(bad)  
  42bd09:	push   ecx
  42bd0a:	fdiv   DWORD PTR [ecx-0x679b2257]
  42bd10:	test   DWORD PTR [esi-0x35e5509b],0xadf9c858
  42bd1a:	cs pop es
  42bd1c:	(bad)  
  42bd1d:	and    edx,DWORD PTR gs:[edi+0x6c]
  42bd21:	add    BYTE PTR [edx+0x677ed66a],dh
  42bd27:	call   0xe145fd18
  42bd2c:	test   DWORD PTR [edi+ebp*8-0x1678eca8],0xf7986676
  42bd37:	inc    ebx
  42bd38:	dec    BYTE PTR [edx+ebp*4+0x8faf1f6]
  42bd3f:	xlat   BYTE PTR ds:[ebx]
  42bd40:	in     al,dx
  42bd41:	out    dx,eax
  42bd42:	and    DWORD PTR [ecx],esi
  42bd44:	stc    
  42bd45:	test   bh,ch
  42bd47:	test   DWORD PTR [edx-0x54ffff41],0x1c096b46
  42bd51:	inc    edi
  42bd52:	pusha  
  42bd53:	mov    DWORD PTR [edx-0x27050c8a],ebp
  42bd59:	(bad)  
  42bd5a:	out    0x0,eax
  42bd5c:	das    
  42bd5d:	pop    es
  42bd5e:	add    DWORD PTR [ebp+ecx*8-0x3a076123],0x17
  42bd66:	call   0x1cea2c6e
  42bd6b:	sti    
  42bd6c:	dec    eax
  42bd6d:	adc    dl,BYTE PTR ds:0x6d632f44
  42bd73:	shl    DWORD PTR [ebx-0x6bac84f0],cl
  42bd79:	jmp    0x7666:0xddef12db
  42bd80:	aaa    
  42bd81:	(bad)  
  42bd83:	pop    ds
  42bd84:	test   al,0x98
  42bd86:	jecxz  0x42bde9
  42bd88:	clc    
  42bd89:	aad    0xe7
  42bd8b:	outs   dx,DWORD PTR ds:[esi]
  42bd8c:	sbb    BYTE PTR [esi-0x1494f1b6],ch
  42bd92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bd93:	add    esp,DWORD PTR [eax+0x50]
  42bd96:	cwde   
  42bd97:	clc    
  42bd98:	fstp   st(1)
  42bd9a:	fs jle 0x42bdfd
  42bd9d:	adc    ch,BYTE PTR [ebx]
  42bd9f:	clc    
  42bda0:	clc    
  42bda1:	add    eax,0xde2f21ec
  42bda6:	push   cs
  42bda7:	pop    es
  42bda8:	stos   BYTE PTR es:[edi],al
  42bda9:	pop    edx
  42bdaa:	cmp    dh,dh
  42bdac:	xor    eax,0xebb810
  42bdb1:	add    BYTE PTR [edi-0x7a07fe65],cl
  42bdb7:	mov    al,0x30
  42bdb9:	lds    ebp,FWORD PTR [esi+ebx*8]
  42bdbc:	pushf  
  42bdbd:	mov    WORD PTR [esp+ebx*2],es
  42bdc0:	add    al,0xfb
  42bdc2:	pop    edi
  42bdc3:	lods   eax,DWORD PTR ds:[esi]
  42bdc4:	ss dec esi
  42bdc6:	mov    dl,0x8a
  42bdc8:	add    ecx,DWORD PTR [edi+eax*1]
  42bdcb:	mov    ecx,0x63f5f666
  42bdd0:	mov    ds:0xc25b5fec,al
  42bdd5:	imul   DWORD PTR [esi+ebx*1+0x5fc71a34]
  42bddc:	add    edi,ebx
  42bdde:	sub    al,0xde
  42bde0:	lods   eax,DWORD PTR ds:[esi]
  42bde1:	call   0xf167619d
  42bde6:	aam    0xd3
  42bde8:	jge    0x42bd89
  42bdea:	shl    BYTE PTR [ebp+0x5754aa86],0xe4
  42bdf1:	sub    al,0x6d
  42bdf3:	fild   DWORD PTR [eax]
  42bdf5:	mov    ebx,0x91e7f885
  42bdfa:	sub    eax,0xdce900db
  42bdff:	fidivr WORD PTR [esi+0x6a062ce5]
  42be05:	out    dx,al
  42be06:	sub    al,0xde
  42be08:	mov    al,0xe8
  42be0a:	outs   dx,BYTE PTR ds:[esi]
  42be0b:	fild   DWORD PTR [eax]
  42be0d:	sbb    ch,BYTE PTR [ebx-0x31]
  42be10:	(bad)  
  42be11:	loopne 0x42be46
  42be13:	push   eax
  42be14:	add    eax,0x20000e9
  42be19:	pop    DWORD PTR [edi]
  42be1b:	jmp    0x42bdb9
  42be1d:	fidivr WORD PTR [esi-0x7a56d313]
  42be23:	cmp    eax,0xb8f8fbac
  42be28:	lods   eax,DWORD PTR ds:[esi]
  42be29:	xchg   edx,eax
  42be2a:	or     al,ch
  42be2c:	(bad)  [ebx+0x58556251]
  42be32:	lock xchg esi,eax
  42be34:	sub    cl,al
  42be36:	rcl    BYTE PTR [edx],0x76
  42be39:	(bad)  
  42be3a:	jp     0x42be21
  42be3c:	sub    al,0x89
  42be3e:	and    BYTE PTR [ecx-0x1605f134],al
  42be44:	adc    al,0x3f
  42be46:	inc    ebx
  42be47:	out    0xf9,eax
  42be49:	pop    ecx
  42be4a:	rcl    DWORD PTR [ebp+0x2a],0x57
  42be4e:	stc    
  42be4f:	shl    DWORD PTR [ebx-0x57],0xf9
  42be53:	into   
  42be54:	aad    0x10
  42be56:	das    
  42be57:	add    BYTE PTR [esi+0x53044061],dl
  42be5d:	sbb    ebp,DWORD PTR [esi-0x2a]
  42be60:	dec    ebp
  42be61:	mov    DWORD PTR [eax+ebp*8],eax
  42be64:	jne    0x42be06
  42be66:	cmc    
  42be67:	call   DWORD PTR [edx+0x1b]
  42be6a:	outs   dx,BYTE PTR ds:[esi]
  42be6b:	retf   0x7d5
  42be6e:	aas    
  42be6f:	cmp    DWORD PTR [ebx],ebx
  42be71:	loop   0x42bee1
  42be73:	adc    DWORD PTR [ecx-0x5f004e42],edi
  42be79:	push   cs
  42be7a:	loop   0x42be5a
  42be7c:	add    BYTE PTR [eax],al
  42be7e:	inc    eax
  42be7f:	pop    es
  42be80:	test   DWORD PTR [edi-0x23],0x9720895
  42be87:	dec    ebx
  42be88:	add    DWORD PTR [edi+0x68],ebx
  42be8b:	mov    bl,0x81
  42be8d:	in     eax,0xbb
  42be8f:	sbb    al,0xfe
  42be91:	push   DWORD PTR [ebx+0x2a81e663]
  42be97:	jecxz  0x42be93
  42be99:	call   DWORD PTR [esi-0x55]
  42be9c:	sbb    ecx,0x56049bdd
  42bea2:	ret    
  42bea3:	sbb    al,BYTE PTR [edi]
  42bea5:	test   bl,ah
  42bea7:	fiadd  DWORD PTR [eax]
  42bea9:	add    BYTE PTR [ebp-0xccf356],bh
  42beaf:	pop    ebp
  42beb0:	int3   
  42beb1:	cmpps  xmm4,XMMWORD PTR [edx-0x6],0xff
  42beb6:	push   ss
  42beb7:	pop    ecx
  42beb8:	cmp    cl,BYTE PTR [eax]
  42beba:	popf   
  42bebb:	sar    ecx,1
  42bebd:	dec    ebp
  42bebe:	push   ds
  42bebf:	popa   
  42bec0:	mov    edx,0xf38ecc04
  42bec5:	test   DWORD PTR [edi+0x7d],ecx
  42bec8:	outs   dx,BYTE PTR ds:[esi]
  42bec9:	push   0x2e
  42becb:	cli    
  42becc:	and    eax,0x8513d846
  42bed1:	shr    BYTE PTR [edi],0xab
  42bed4:	pop    ds
  42bed5:	xchg   DWORD PTR [ebx+eax*1-0x43],esi
  42bed9:	(bad)  
  42beda:	fcom   QWORD PTR [ebx-0x6853ffbc]
  42bee0:	or     BYTE PTR [eax],al
  42bee2:	add    BYTE PTR [eax],al
  42bee4:	lods   al,BYTE PTR ds:[esi]
  42bee5:	xchg   edi,eax
  42bee6:	adc    al,0x0
  42bee8:	lock mov bh,0xc
  42beeb:	add    BYTE PTR [edx+0x6fc204b7],dh
  42bef1:	adc    edi,edi
  42bef3:	mov    BYTE PTR [edi-0x5],ah
  42bef6:	mov    bh,ch
  42bef8:	xchg   esp,eax
  42bef9:	stc    
  42befa:	xor    dl,dh
  42befc:	stos   BYTE PTR es:[edi],al
  42befd:	lea    esi,[eax+0x3e]
  42bf00:	stos   BYTE PTR es:[edi],al
  42bf01:	cmp    ah,0xfc
  42bf04:	nop
  42bf05:	xchg   esp,eax
  42bf06:	push   esp
  42bf07:	data16 xor bl,BYTE PTR [edi+0xe]
  42bf0b:	sbb    al,0x81
  42bf0d:	test   BYTE PTR [eax+0x4d0703bf],al
  42bf13:	lea    ebp,[edx+0x68faf1af]
  42bf19:	inc    edi
  42bf1a:	mov    ecx,edi
  42bf1c:	push   edi
  42bf1d:	addr16 enter 0x58fa,0x6c
  42bf22:	sbb    DWORD PTR [esi+0x2b],0x65a3e5f7
  42bf29:	mov    esp,0x6b6f84f3
  42bf2e:	or     DWORD PTR [eax+0x38],edx
  42bf31:	adc    bh,BYTE PTR [esi-0x520910f3]
  42bf37:	add    BYTE PTR [ecx+eax*1],dl
  42bf3a:	mov    DWORD PTR [ecx],eax
  42bf3c:	xchg   ebp,eax
  42bf3d:	test   BYTE PTR [eax+0x302718c9],0xc0
  42bf44:	jno    0x42bfb6
  42bf46:	(bad)  
  42bf47:	mov    ebp,0xf7330000
  42bf4c:	pop    ebx
  42bf4d:	jg     0x42bf85
  42bf4f:	fdivrp st(7),st
  42bf51:	mov    bl,0x2f
  42bf53:	and    ah,ah
  42bf55:	add    ecx,DWORD PTR [ebp-0x67001e9f]
  42bf5b:	fisub  WORD PTR [ebp+0x6eb1e0ff]
  42bf61:	out    0xaf,eax
  42bf63:	stc    
  42bf64:	pop    DWORD PTR [ecx]
  42bf66:	das    
  42bf67:	ficom  WORD PTR [esi]
  42bf69:	dec    esi
  42bf6a:	mov    al,0xd
  42bf6c:	pop    edi
  42bf6d:	xor    esp,DWORD PTR ds:[ecx-0x10]
  42bf71:	hlt    
  42bf72:	pop    ebp
  42bf73:	pop    ecx
  42bf74:	stos   BYTE PTR es:[edi],al
  42bf75:	jmp    0x42bf28
  42bf77:	add    eax,0x95bbf492
  42bf7c:	mov    al,BYTE PTR [edx+0x3e70ca7]
  42bf82:	das    
  42bf83:	frstor [edx-0x33]
  42bf86:	das    
  42bf87:	fsubrp st(7),st
  42bf89:	adc    BYTE PTR [ebx],0xa
  42bf8c:	call   0xe854cb11
  42bf91:	xchg   BYTE PTR [esp+eiz*4],dl
  42bf94:	outs   dx,BYTE PTR ds:[esi]
  42bf95:	int    0x39
  42bf97:	adc    ebx,esp
  42bf99:	cmp    DWORD PTR [esi+0x1003e7dd],0x573e711e
  42bfa3:	(bad)  
  42bfa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bfa5:	mul    DWORD PTR ds:0x2f028664
  42bfab:	fisub  WORD PTR [edx]
  42bfad:	add    BYTE PTR ds:[eax],al
  42bfb0:	aas    
  42bfb1:	fsubrp st(7),st
  42bfb3:	add    ebp,DWORD PTR [edi]
  42bfb5:	push   edi
  42bfb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bfb7:	jmp    0x42bf87
  42bfb9:	pusha  
  42bfba:	xchg   ebp,eax
  42bfbb:	sti    
  42bfbc:	sub    ch,bl
  42bfbe:	xchg   BYTE PTR fs:[edi],ch
  42bfc1:	fsubrp st(7),st
  42bfc3:	mov    BYTE PTR [ebx-0xa],dh
  42bfc6:	outs   dx,BYTE PTR ds:[esi]
  42bfc7:	inc    esi
  42bfc8:	sbb    ebx,DWORD PTR [eax+0x1]
  42bfcb:	mov    ebp,0x1cb6334
  42bfd0:	enter  0xfb13,0xe6
  42bfd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bfd5:	dec    ebx
  42bfd6:	or     ch,BYTE PTR [edi+0x63]
  42bfd9:	fld    QWORD PTR [eax]
  42bfdb:	jmp    0x34cee349
  42bfe0:	iret   
  42bfe1:	fs ret 
  42bfe3:	shl    DWORD PTR [esi+0x50befab8],1
  42bfe9:	xor    edi,DWORD PTR [esi-0x4e]
  42bfec:	mov    esp,0x2a1684d8
  42bff1:	fiadd  WORD PTR [eax]
  42bff3:	ins    BYTE PTR es:[edi],dx
  42bff4:	call   0x2c1144d1
  42bff9:	fiadd  WORD PTR [eax]
  42bffb:	ficomp DWORD PTR [ebp+0x15a6b1d8]
  42c001:	arpl   WORD PTR ds:0x409bcbac,ax
  42c007:	jmp    0x749c12bb
  42c00c:	jl     0x42c016
  42c00e:	jmp    0xfa49e2cf
  42c013:	jb     0x42c015
  42c015:	add    BYTE PTR [ebp+0x64],ah
  42c018:	je     0x42c067
  42c01a:	lock aam 0x50
  42c01d:	inc    ecx
  42c01e:	and    al,0xeb
  42c020:	add    cl,ch
  42c022:	mov    bh,0x4b
  42c024:	or     ch,BYTE PTR [ebp+0x67]
  42c027:	or     edi,edx
  42c029:	jmp    0x36c04013
  42c02e:	and    eax,0x4a40ca7c
  42c033:	or     edi,edx
  42c035:	jmp    0x713b71f3
  42c03a:	(bad)  
  42c03b:	stc    
  42c03c:	test   DWORD PTR [ebx],ebp
  42c03e:	pop    eax
  42c03f:	sbb    ebp,DWORD PTR [esi-0xb]
  42c042:	sub    eax,0x8500094f
  42c047:	stc    
  42c048:	add    esi,DWORD PTR [edx+eax*1+0x64]
  42c04c:	stc    
  42c04d:	or     eax,0xc079d88a
  42c052:	adc    al,0xbc
  42c054:	mov    ecx,0xf18be272
  42c059:	sub    ecx,DWORD PTR [edx+esi*1]
  42c05c:	idiv   DWORD PTR [ebx]
  42c05e:	xchg   ebp,eax
  42c05f:	xchg   edx,eax
  42c060:	sbb    BYTE PTR [ebp-0x34ce1bf2],cl
  42c066:	adc    eax,0x2e835ee0
  42c06b:	fnsave [ebx+0x8]
  42c06e:	js     0x42c0d3
  42c070:	cmp    DWORD PTR [edx],ecx
  42c072:	sti    
  42c073:	jecxz  0x42bff6
  42c075:	rol    DWORD PTR [ebp+0x1f],0xfc
  42c079:	mov    al,BYTE PTR [eax]
  42c07b:	add    BYTE PTR [ebx],al
  42c07d:	push   cs
  42c07e:	lea    ecx,[ebx+edx*1]
  42c081:	jecxz  0x42c083
  42c083:	add    BYTE PTR [esi+0x1ff4755d],dl
  42c089:	xchg   esi,eax
  42c08a:	clc    
  42c08b:	call   0x39645e
  42c090:	sbb    bl,BYTE PTR [edi]
  42c092:	outs   dx,BYTE PTR ds:[esi]
  42c093:	push   eax
  42c094:	or     edx,DWORD PTR [eax]
  42c096:	outs   dx,BYTE PTR ds:[esi]
  42c097:	pop    ss
  42c098:	adc    DWORD PTR [esi+0x27498bec],eax
  42c09e:	ret    0x2a
  42c0a1:	adc    BYTE PTR [ebx+0x548bfa4d],al
  42c0a7:	cld    
  42c0a8:	(bad)  
  42c0aa:	pop    DWORD PTR [ebp-0x74cc6cfa]
  42c0b0:	fwait
  42c0b1:	cli    
  42c0b2:	or     BYTE PTR [ebp-0x6],0x5d
  42c0b6:	inc    BYTE PTR [eax+0x7400b6c5]
  42c0bc:	dec    ecx
  42c0bd:	mov    ebp,DWORD PTR [ecx]
  42c0bf:	call   0xfa5d74f3
  42c0c4:	and    cl,bl
  42c0c6:	dec    eax
  42c0c7:	cld    
  42c0c8:	push   esi
  42c0c9:	inc    edx
  42c0ca:	out    0xa,al
  42c0cc:	lods   eax,DWORD PTR ds:[esi]
  42c0cd:	outs   dx,BYTE PTR ds:[esi]
  42c0ce:	out    dx,eax
  42c0cf:	cli    
  42c0d0:	or     BYTE PTR [ebp+0x70],dh
  42c0d3:	cld    
  42c0d4:	add    BYTE PTR [ecx],ch
  42c0d6:	mov    ebx,ecx
  42c0d8:	stc    
  42c0d9:	add    al,dh
  42c0db:	mov    bh,0xa0
  42c0dd:	idiv   ebp
  42c0df:	inc    DWORD PTR [eax]
  42c0e1:	add    dh,dl
  42c0e3:	jg     0x42c0e9
  42c0e5:	add    BYTE PTR [edi],ch
  42c0e7:	jl     0x42c12a
  42c0e9:	cld    
  42c0ea:	stos   BYTE PTR es:[edi],al
  42c0eb:	mov    ds:0xc378e7f8,al
  42c0f0:	out    dx,al
  42c0f1:	cli    
  42c0f2:	aam    0x1e
  42c0f4:	add    BYTE PTR [ebx-0x3af78318],dh
  42c0fa:	jnp    0x42c0c3
  42c0fc:	inc    esp
  42c0fd:	add    BYTE PTR [edx-0x4be886c9],ch
  42c103:	ret    0x4efc
  42c106:	mov    ah,0x51
  42c108:	lock iret 
  42c10a:	mov    bl,0x37
  42c10c:	jb     0x42c119
  42c10e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c10f:	ret    0x86f4
  42c112:	cli    
  42c113:	add    cl,cl
  42c115:	inc    esp
  42c116:	xchg   DWORD PTR [esp+eax*1-0x271d100],esp
  42c11d:	popa   
  42c11e:	lods   al,BYTE PTR ds:[esi]
  42c11f:	test   al,0x16
  42c121:	jne    0x42c15b
  42c123:	jl     0x42c166
  42c125:	lock mov ah,0x6a
  42c128:	cli    
  42c129:	ret    0x9ef2
  42c12c:	cwde   
  42c12d:	call   DWORD PTR [eax-0x9]
  42c130:	jbe    0x42c132
  42c132:	mov    ah,0x52
  42c134:	fiadd  DWORD PTR [esi+0x43f99f6c]
  42c13a:	cmp    esi,ebx
  42c13c:	and    al,BYTE PTR [ebp-0xf1c0a15]
  42c142:	jae    0x42c152
  42c144:	pop    edi
  42c145:	inc    edi
  42c146:	add    BYTE PTR [eax],al
  42c148:	pop    ds
  42c149:	xchg   esi,eax
  42c14a:	into   
  42c14b:	inc    esi
  42c14c:	sbb    ebx,ecx
  42c14e:	gs jae 0x42c166
  42c151:	or     ebx,edi
  42c153:	fsubr  QWORD PTR ds:0xb5ebad21
  42c159:	fucom  st(7)
  42c15b:	add    esi,DWORD PTR [eax+0x737ce3a2]
  42c161:	adc    dl,al
  42c163:	out    0x29,al
  42c165:	or     bl,dl
  42c167:	imul   ebp,DWORD PTR [eax+0x33dccfa2],0x2f035946
  42c171:	ficomp WORD PTR [edx]
  42c173:	push   edx
  42c174:	pusha  
  42c175:	pop    ss
  42c176:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c177:	sti    
  42c178:	shl    BYTE PTR [ecx-0x5c620a2],0x2f
  42c17f:	push   ebp
  42c180:	pop    ebp
  42c181:	mov    cl,0x6e
  42c183:	ss sti 
  42c185:	out    dx,eax
  42c186:	daa    
  42c187:	add    al,0x50
  42c189:	push   ds
  42c18a:	mov    ds:0x74dd8346,al
  42c18f:	outs   dx,BYTE PTR ds:[esi]
  42c190:	jp     0x42c1c6
  42c192:	dec    edi
  42c193:	pushf  
  42c194:	sar    DWORD PTR [edi+0x3e],1
  42c197:	pop    ebp
  42c198:	pop    ds
  42c199:	or     ebp,esi
  42c19b:	sti    
  42c19c:	rcr    BYTE PTR [edx-0x53],cl
  42c19f:	xlat   BYTE PTR ds:[ebx]
  42c1a0:	loopne 0x42c1aa
  42c1a2:	xor    al,BYTE PTR [ebx+edx*8+0x6c84e7f9]
  42c1a9:	fstp   DWORD PTR [esi+eax*2+0x0]
  42c1ad:	add    BYTE PTR [ebx-0x53],cl
  42c1b0:	dec    edi
  42c1b1:	xor    eax,0x873b07f7
  42c1b6:	mov    BYTE PTR [edx-0x6e3e2500],dl
  42c1bc:	in     al,dx
  42c1bd:	inc    ecx
  42c1be:	push   ss
  42c1bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c1c0:	cli    
  42c1c1:	test   BYTE PTR es:[edx+0x1],bl
  42c1c5:	jmp    0xe8d6b6f6
  42c1ca:	sub    al,0xde
  42c1cc:	mov    esp,DWORD PTR [eax+eax*1+0x7e38e898]
  42c1d3:	add    al,0xfa
  42c1d5:	gs in  al,dx
  42c1d7:	mov    ecx,DWORD PTR [esi]
  42c1d9:	fs jns 0x42c1d6
  42c1dc:	call   0xfa4722d7
  42c1e1:	mov    eax,ds:0xe9fa079b
  42c1e6:	or     ecx,DWORD PTR [esi-0x78d31701]
  42c1ec:	arpl   cx,bx
  42c1ee:	xor    ebx,DWORD PTR [ecx+0x44]
  42c1f1:	mov    ecx,0x16f0f67b
  42c1f6:	fld    DWORD PTR [eax*4-0x7426b957]
  42c1fd:	xor    al,0xc3
  42c1ff:	call   esp
  42c201:	rol    DWORD PTR ds:[eax+ebp*8],0xde
  42c206:	xor    ebx,esi
  42c208:	add    BYTE PTR [ebx],al
  42c20a:	inc    edi
  42c20b:	pop    ecx
  42c20c:	inc    esp
  42c20d:	mov    ch,0x3
  42c20f:	pop    ecx
  42c210:	inc    esp
  42c211:	test   eax,0x2fb0000
  42c216:	shr    DWORD PTR [edx+0x77],cl
  42c219:	shr    eax,cl
  42c21b:	shl    esi,cl
  42c21d:	add    bh,dl
  42c21f:	pusha  
  42c220:	out    0x49,al
  42c222:	mov    WORD PTR [eax+edi*2+0x33766897],gs
  42c229:	fiadd  WORD PTR [eax]
  42c22b:	inc    ecx
  42c22c:	cmp    BYTE PTR [eax-0x92bb106],dh
  42c232:	xchg   DWORD PTR [eax],eax
  42c234:	xchg   ebx,eax
  42c235:	and    eax,DWORD PTR [ebp-0x40a0a60a]
  42c23b:	add    BYTE PTR [esi-0x25],dl
  42c23e:	sbb    DWORD PTR [ebp+0x2],0xf43318a4
  42c245:	cmp    BYTE PTR [edx-0x7aeebea7],0xd2
  42c24c:	or     DWORD PTR [esi-0x55],edx
  42c24f:	add    BYTE PTR [esi],al
  42c251:	(bad)  
  42c253:	fstp   QWORD PTR [esi+0x88b01a5]
  42c259:	mov    ah,0xe9
  42c25b:	setne  BYTE PTR [ecx-0x6]
  42c25f:	inc    DWORD PTR [esi]
  42c261:	pop    esi
  42c262:	inc    eax
  42c263:	sbb    BYTE PTR [edi-0x6a],bh
  42c266:	clc    
  42c267:	or     BYTE PTR [ebx+0x3474fa03],0xa4
  42c26e:	adc    al,0x8d
  42c270:	adc    esp,DWORD PTR [esi]
  42c272:	dec    edx
  42c273:	lea    eax,[ecx]
  42c275:	(bad)  
  42c276:	push   eax
  42c277:	inc    DWORD PTR [eax]
  42c279:	add    bl,ah
  42c27b:	scas   al,BYTE PTR es:[edi]
  42c27c:	push   cs
  42c27d:	inc    eax
  42c27e:	(bad)  
  42c27f:	pop    ebx
  42c280:	mov    esi,0x751b530c
  42c285:	or     edi,DWORD PTR ds:0x9189bc96
  42c28b:	and    BYTE PTR [ebp+0xb],al
  42c28e:	xchg   edi,eax
  42c28f:	and    edi,DWORD PTR [ebx+ecx*4]
  42c292:	xchg   ecx,eax
  42c293:	mov    bl,0x43
  42c295:	mov    esp,0x4d81dd91
  42c29a:	dec    edx
  42c29b:	in     al,0xc8
  42c29d:	cmp    edi,0x8609345a
  42c2a3:	nop
  42c2a4:	cmp    DWORD PTR es:[ebx-0xe],ebp
  42c2a8:	push   0x1c
  42c2aa:	fstp   QWORD PTR [ebx]
  42c2ac:	and    eax,DWORD PTR [ebp+0x2f]
  42c2af:	lods   eax,DWORD PTR ds:[esi]
  42c2b0:	push   edi
  42c2b1:	sbb    dh,dh
  42c2b3:	(bad)  
  42c2b4:	repnz clc 
  42c2b6:	les    esi,FWORD PTR [ebp+eax*1-0x19aeb7b0]
  42c2bd:	push   edx
  42c2be:	inc    eax
  42c2bf:	sub    DWORD PTR [edx],edi
  42c2c1:	adc    ch,bh
  42c2c3:	hlt    
  42c2c4:	jle    0x42c289
  42c2c6:	and    ebp,DWORD PTR [ebx+0x6]
  42c2c9:	pop    eax
  42c2ca:	push   esi
  42c2cb:	cmp    dh,dl
  42c2cd:	es pop es
  42c2cf:	and    esi,esp
  42c2d1:	sub    BYTE PTR [edx-0x11],dh
  42c2d4:	jle    0x42c31a
  42c2d6:	pop    ss
  42c2d7:	add    BYTE PTR [edi-0x3e],bh
  42c2da:	daa    
  42c2db:	and    bh,ah
  42c2dd:	ins    DWORD PTR es:[edi],dx
  42c2de:	add    BYTE PTR [eax],al
  42c2e0:	mov    ah,0x77
  42c2e2:	jo     0x42c2eb
  42c2e4:	das    
  42c2e5:	mov    al,BYTE PTR [edx-0x73]
  42c2e8:	push   0x3b
  42c2ea:	push   ebp
  42c2eb:	inc    di
  42c2ed:	mov    al,ds:0x7adb7c79
  42c2f2:	inc    ecx
  42c2f3:	call   0xfa8212bf
  42c2f8:	shl    BYTE PTR [edx-0x3c],1
  42c2fb:	je     0x42c316
  42c2fd:	inc    esp
  42c2fe:	jb     0x42c2e8
  42c300:	xlat   BYTE PTR ds:[ebx]
  42c301:	add    eax,0x1eb8fa40
  42c306:	out    0xf9,eax
  42c308:	mov    al,0x3c
  42c30a:	push   ebx
  42c30b:	call   0xfb2d7c64
  42c310:	adc    eax,0xa650460f
  42c315:	mov    edx,0x9aea8cf8
  42c31a:	push   esp
  42c31b:	call   0xfb2d7cd6
  42c320:	mov    ah,0x87
  42c322:	xor    ecx,0xd8d6ff02
  42c328:	jno    0x42c308
  42c32a:	(bad)  
  42c32b:	in     eax,dx
  42c32c:	mov    cl,0x8b
  42c32e:	dec    edi
  42c32f:	jns    0x42c31c
  42c331:	or     DWORD PTR [edx-0x182143a5],edi
  42c337:	add    eax,DWORD PTR [edi+0x2d]
  42c33a:	fwait
  42c33b:	in     eax,dx
  42c33c:	inc    ebp
  42c33d:	lods   al,BYTE PTR ds:[esi]
  42c33e:	ins    DWORD PTR es:[edi],dx
  42c33f:	int3   
  42c340:	dec    eax
  42c341:	or     eax,0xeda9
  42c346:	xor    eax,0x48f3b553
  42c34b:	push   0xffffffba
  42c34d:	in     eax,dx
  42c34e:	and    eax,0x34773f5a
  42c353:	push   ebx
  42c354:	popf   
  42c355:	fist   WORD PTR [eax]
  42c357:	push   esi
  42c358:	mov    dl,0xed
  42c35a:	adc    eax,0x2f047346
  42c35f:	fimul  WORD PTR [esi]
  42c361:	cli    
  42c362:	mov    bl,0x8a
  42c364:	add    ebx,esp
  42c366:	ja     0x42c314
  42c368:	jmp    0x43610559
  42c36d:	dec    esi
  42c36e:	adc    BYTE PTR [edi],0xa6
  42c371:	pop    es
  42c372:	das    
  42c373:	stos   DWORD PTR es:[edi],eax
  42c374:	pop    esi
  42c375:	fild   QWORD PTR [edi+0x2f0183f1]
  42c37b:	ficomp WORD PTR [ecx]
  42c37d:	xchg   ecx,esp
  42c37f:	mov    DWORD PTR [ebx],esp
  42c381:	inc    ax
  42c383:	leave  
  42c384:	out    0x77,eax
  42c386:	cmc    
  42c387:	push   edx
  42c388:	jne    0x42c3ed
  42c38a:	mov    dl,0x4
  42c38c:	mov    ds:0x9abb6ddb,eax
  42c391:	in     al,dx
  42c392:	and    DWORD PTR [ebx-0x65],edi
  42c395:	add    ebx,DWORD PTR [eax]
  42c397:	jnp    0x42c324
  42c399:	add    esp,eax
  42c39b:	push   edx
  42c39c:	sub    eax,0xef5f8f8
  42c3a1:	xchg   ebx,eax
  42c3a2:	test   DWORD PTR [ecx+eax*1],eax
  42c3a5:	ins    DWORD PTR es:[edi],dx
  42c3a6:	ins    BYTE PTR es:[edi],dx
  42c3a7:	nop
  42c3a8:	adc    ebp,DWORD PTR [esi+0x0]
  42c3ab:	add    cl,bh
  42c3ad:	add    DWORD PTR [esi-0xb76a4d1],eax
  42c3b3:	shr    DWORD PTR [esi+ebp*4],cl
  42c3b6:	push   0xde2c25
  42c3bb:	inc    ecx
  42c3bc:	ss push 0x895b46fb
  42c3c2:	hlt    
  42c3c3:	push   ecx
  42c3c4:	aad    0x9e
  42c3c6:	cli    
  42c3c7:	ss fcomip st,st(5)
  42c3ca:	ins    DWORD PTR es:[edi],dx
  42c3cb:	test   al,0x42
  42c3cd:	pop    es
  42c3ce:	pop    ebx
  42c3cf:	xor    bh,ch
  42c3d1:	stos   BYTE PTR es:[edi],al
  42c3d2:	test   DWORD PTR ds:0x68f8ffaf,ecx
  42c3d8:	clc    
  42c3d9:	push   edi
  42c3da:	add    al,0xe9
  42c3dc:	sub    al,0x93
  42c3de:	push   edx
  42c3df:	sahf   
  42c3e0:	mov    DWORD PTR [edi+0x103fd524],ebx
  42c3e6:	push   ecx
  42c3e7:	pusha  
  42c3e8:	cmp    BYTE PTR [edx-0x4fd5fee8],0xfa
  42c3ef:	out    0xaf,al
  42c3f1:	inc    ebx
  42c3f2:	or     ah,BYTE PTR [ebp-0x4f]
  42c3f5:	add    edi,edx
  42c3f7:	jmp    0xcf9a4bf0
  42c3fc:	les    ebx,FWORD PTR [ecx+ebx*8+0x70]
  42c400:	ja     0x42c3bc
  42c402:	sbb    BYTE PTR [eax+0x77],dh
  42c405:	mov    edx,0xd3f0bf10
  42c40a:	jae    0x42c3df
  42c40c:	aam    0x9a
  42c40e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c410:	add    BYTE PTR [eax],al
  42c412:	xchg   esp,eax
  42c413:	lods   eax,DWORD PTR ds:[esi]
  42c414:	sub    eax,0xe8c2fdc2
  42c419:	pslld  mm0,QWORD PTR [esi]
  42c41c:	cli    
  42c41d:	push   0x57
  42c41f:	mov    edx,0x84660018
  42c424:	push   ebp
  42c425:	and    al,0x8e
  42c427:	and    al,0x4b
  42c429:	test   ch,0xd9
  42c42c:	jae    0x42c441
  42c42e:	scas   al,BYTE PTR es:[edi]
  42c42f:	stos   DWORD PTR es:[edi],eax
  42c430:	cs (bad) 
  42c432:	rol    DWORD PTR [ebp+esi*2+0x12223624],1
  42c439:	dec    ebp
  42c43a:	add    bh,dh
  42c43c:	jp     0x42c409
  42c43e:	inc    edi
  42c43f:	and    al,0x33
  42c441:	not    BYTE PTR ds:0xde0a74dc
  42c447:	sti    
  42c448:	stc    
  42c449:	inc    DWORD PTR [esi+0x5c]
  42c44c:	(bad)  
  42c44e:	in     eax,dx
  42c44f:	in     eax,0xee
  42c451:	ret    
  42c452:	sbb    dh,BYTE PTR [ebx+0x2]
  42c455:	call   0x439e36
  42c45a:	test   ebx,edi
  42c45c:	bnd jmp 0x42c462
  42c45f:	or     eax,0xca8b40bb
  42c464:	mov    esi,DWORD PTR [edx+ebp*8-0x2a]
  42c468:	call   0xf7384723
  42c46d:	call   0x43b35e
  42c472:	pop    ebp
  42c473:	inc    ebp
  42c474:	jnp    0x42c441
  42c476:	add    BYTE PTR [eax],al
  42c478:	push   ss
  42c479:	and    dl,dl
  42c47b:	jl     0x42c47d
  42c47d:	clc    
  42c47e:	xor    bl,BYTE PTR [edx+ebp*1-0x16]
  42c482:	je     0x42c497
  42c484:	inc    ebx
  42c485:	ret    
  42c486:	and    al,0x10
  42c488:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  42c48a:	jmp    FWORD PTR [ecx-0x36]
  42c48d:	xchg   esi,eax
  42c48e:	xchg   DWORD PTR [edx+ebp*1-0x2e],ebx
  42c492:	call   0xf73b2d1e
  42c497:	lea    edi,[edx]
  42c499:	mov    esi,0xc02fe814
  42c49e:	dec    edi
  42c49f:	cli    
  42c4a0:	nop
  42c4a1:	mov    bl,0x46
  42c4a3:	das    
  42c4a4:	outs   dx,DWORD PTR ds:[esi]
  42c4a5:	mov    edi,0x36e2e479
  42c4aa:	cli    
  42c4ab:	(bad)  
  42c4ac:	clc    
  42c4ad:	dec    ecx
  42c4ae:	sahf   
  42c4af:	aad    0xec
  42c4b1:	hlt    
  42c4b2:	add    al,0x72
  42c4b4:	and    al,0x43
  42c4b6:	dec    edi
  42c4b7:	das    
  42c4b8:	pusha  
  42c4b9:	dec    ebx
  42c4ba:	dec    edi
  42c4bb:	push   ebx
  42c4bc:	(bad)  
  42c4bd:	scas   al,BYTE PTR es:[edi]
  42c4be:	xchg   edx,eax
  42c4bf:	cmp    eax,0xfb4f4c2f
  42c4c4:	and    dl,cl
  42c4c6:	adc    DWORD PTR [eax+0x2f],eax
  42c4c9:	nop
  42c4ca:	in     eax,dx
  42c4cb:	ss inc eax
  42c4cd:	inc    eax
  42c4ce:	pop    es
  42c4cf:	push   0xfffe27a7
  42c4d4:	cmp    DWORD PTR [eax+0x373dd010],0x84fe
  42c4de:	out    dx,eax
  42c4df:	arpl   si,si
  42c4e1:	push   edx
  42c4e2:	jns    0x42c4b4
  42c4e4:	adc    al,cl
  42c4e6:	push   ds
  42c4e7:	aaa    
  42c4e8:	(bad)  
  42c4e9:	push   ecx
  42c4ea:	add    BYTE PTR [ebx],ch
  42c4ec:	mov    esi,0x46f76f0d
  42c4f1:	pop    edx
  42c4f2:	in     al,dx
  42c4f3:	push   0x7b
  42c4f5:	jmp    0x42c4a3
  42c4f7:	sub    esi,DWORD PTR ds:0x71c65552
  42c4fd:	je     0x42c4fe
  42c4ff:	iret   
  42c500:	fcomp  QWORD PTR [edx+0xa]
  42c503:	adc    al,ch
  42c505:	cli    
  42c506:	inc    edx
  42c507:	subps  xmm0,XMMWORD PTR [eax]
  42c50a:	xlat   BYTE PTR ds:[ebx]
  42c50b:	fisttp QWORD PTR [esi]
  42c50d:	cli    
  42c50e:	mov    eax,0x3bbf80e9
  42c513:	das    
  42c514:	jae    0x42c55a
  42c516:	jg     0x42c4f6
  42c518:	aaa    
  42c519:	jmp    0x6fdd9b39
  42c51e:	daa    
  42c51f:	neg    BYTE PTR ds:0x65019511
  42c525:	(bad)  
  42c526:	cld    
  42c527:	fidiv  DWORD PTR [esi-0x1a0abf3d]
  42c52d:	xor    al,0x6f
  42c52f:	pop    ss
  42c530:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c531:	add    BYTE PTR [edi],ch
  42c533:	stos   DWORD PTR es:[edi],eax
  42c534:	pop    esi
  42c535:	fsubr  st,st(1)
  42c537:	stc    
  42c538:	pop    edi
  42c539:	adc    DWORD PTR [edx+ebp*4-0x1b],0x3
  42c53e:	das    
  42c53f:	test   al,0xbd
  42c541:	push   esp
  42c542:	add    BYTE PTR [eax],al
  42c544:	mov    ds:0xe71c038a,al
  42c549:	cmc    
  42c54a:	loopne 0x42c56a
  42c54c:	inc    esp
  42c54d:	add    DWORD PTR [edi-0x3e],ebp
  42c550:	shr    BYTE PTR [ebx-0x2df4bfa0],cl
  42c556:	pop    esp
  42c557:	jo     0x42c5ac
  42c559:	retf   0xdbbf
  42c55c:	sub    eax,0xabe91abb
  42c561:	cdq    
  42c562:	retf   
  42c563:	push   ebx
  42c564:	jg     0x42c55c
  42c566:	pop    ebx
  42c567:	jmp    0xc4aec671
  42c56c:	jl     0x42c535
  42c56e:	pushaw 
  42c570:	push   ebx
  42c571:	shl    bh,cl
  42c573:	jbe    0x42c5e1
  42c575:	mov    edx,0xba6c7a97
  42c57a:	div    DWORD PTR [esi+0x6c]
  42c57d:	mov    edx,0xba6c7aef
  42c582:	out    dx,eax
  42c583:	jl     0x42c573
  42c585:	lods   eax,DWORD PTR ds:[esi]
  42c586:	pop    esp
  42c587:	aas    
  42c588:	adc    ebp,esi
  42c58a:	stos   BYTE PTR es:[edi],al
  42c58b:	aas    
  42c58c:	or     esp,esi
  42c58e:	in     al,0x3
  42c590:	das    
  42c591:	fiadd  WORD PTR [eax]
  42c593:	scas   al,BYTE PTR es:[edi]
  42c594:	lock mov ecx,0xde2ce820
  42c59a:	add    BYTE PTR [esi-0x14db45a0],ch
  42c5a0:	sub    al,0xde
  42c5a2:	add    BYTE PTR [ecx-0x71049978],al
  42c5a8:	add    BYTE PTR [eax],al
  42c5aa:	neg    BYTE PTR [eax-0x1c]
  42c5ad:	and    al,0x6a
  42c5af:	test   eax,0xf4ad8d85
  42c5b4:	or     bl,ch
  42c5b6:	sub    al,0xde
  42c5b8:	mov    esp,DWORD PTR [esp+edx*2+0x1]
  42c5bc:	cli    
  42c5bd:	data16 cld 
  42c5bf:	cmc    
  42c5c0:	xor    ebx,DWORD PTR [esi+0x47]
  42c5c3:	add    eax,DWORD PTR [ebp-0x74273fd7]
  42c5c9:	pop    esp
  42c5ca:	push   esp
  42c5cb:	add    edx,edi
  42c5cd:	inc    esi
  42c5ce:	or     DWORD PTR fs:[ecx],esp
  42c5d1:	jmp    0x9d00dd02
  42c5d6:	mov    bl,0xf4
  42c5d8:	jge    0x42c617
  42c5da:	xor    BYTE PTR [edi-0x296e8dae],cl
  42c5e0:	test   edi,esp
  42c5e2:	jg     0x42c639
  42c5e4:	dec    esp
  42c5e5:	sbb    eax,0xb8089299
  42c5ea:	pop    ss
  42c5eb:	mov    ecx,DWORD PTR [edx+esi*2]
  42c5ee:	bnd jns 0x42c5ea
  42c5f1:	xchg   ebx,eax
  42c5f2:	sub    al,0x78
  42c5f4:	call   FWORD PTR [esi-0x110f5d8b]
  42c5fa:	jge    0x42c5aa
  42c5fc:	sub    DWORD PTR [ecx-0x1623a528],0x2c
  42c603:	fiadd  WORD PTR [ebp-0x76da811]
  42c609:	cmp    BYTE PTR [edx+edx*4+0xc],al
  42c60d:	add    BYTE PTR [eax],al
  42c60f:	add    BYTE PTR [esi-0x3e],bl
  42c612:	xchg   BYTE PTR [eax-0x3a],al
  42c615:	clc    
  42c616:	jo     0x42c620
  42c618:	adc    bh,dh
  42c61a:	dec    ecx
  42c61b:	sub    BYTE PTR [ebx],dl
  42c61d:	sbb    al,BYTE PTR [edi]
  42c61f:	test   DWORD PTR [esi+0x1d0000da],ebp
  42c625:	popf   
  42c626:	clc    
  42c627:	mov    ecx,DWORD PTR [esi+0x44e85486]
  42c62d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c62e:	and    BYTE PTR [edx-0x76],ch
  42c631:	stos   DWORD PTR es:[edi],eax
  42c632:	cmc    
  42c633:	xchg   ecx,eax
  42c634:	retf   0xda
  42c637:	add    BYTE PTR [ebx],al
  42c639:	sbb    dh,BYTE PTR [ebp+0x77]
  42c63c:	ja     0x42c5dc
  42c63e:	cld    
  42c63f:	cmp    DWORD PTR [ebx+0x35627023],edx
  42c645:	adc    eax,DWORD PTR [ebx+0x7582ea45]
  42c64b:	add    ebx,DWORD PTR [edx+0x5e]
  42c64e:	div    DWORD PTR [edx+edx*4-0x5b]
  42c652:	inc    eax
  42c653:	push   edi
  42c654:	stc    
  42c655:	in     al,dx
  42c656:	js     0x42c66b
  42c658:	xchg   bl,bl
  42c65a:	add    eax,0xffffffe2
  42c65d:	scas   eax,DWORD PTR es:[edi]
  42c65e:	dec    ebp
  42c65f:	push   0x16
  42c661:	pop    esp
  42c662:	ret    0x3eff
  42c665:	pop    edx
  42c666:	sbb    edi,esi
  42c668:	cmp    DWORD PTR [ebx-0x71c67a0f],eax
  42c66e:	and    BYTE PTR [ebx-0x7cb23145],cl
  42c674:	add    BYTE PTR [eax],al
  42c676:	ds mul ecx
  42c679:	xchg   edx,eax
  42c67a:	jecxz  0x42c674
  42c67c:	test   BYTE PTR [esi+edx*1+0x1b8b108e],0xee
  42c684:	sub    eax,eax
  42c686:	jle    0x42c6fa
  42c688:	xchg   BYTE PTR [eax+0x2f],al
  42c68b:	cmc    
  42c68c:	cmp    eax,0xe2da49e8
  42c691:	cli    
  42c692:	pop    eax
  42c693:	sub    eax,0x3fb939a9
  42c698:	jecxz  0x42c6de
  42c69a:	mov    bl,0x7b
  42c69c:	inc    eax
  42c69d:	cld    
  42c69e:	lods   al,BYTE PTR ds:[esi]
  42c69f:	xor    edi,DWORD PTR [esi]
  42c6a1:	aaa    
  42c6a2:	jmp    0xf4c1:0xa49f706c
  42c6a9:	xchg   dl,ch
  42c6ab:	pusha  
  42c6ac:	ja     0x42c6b5
  42c6ae:	mov    edx,0xdf4ddcc9
  42c6b3:	push   edi
  42c6b4:	push   ebp
  42c6b5:	sub    BYTE PTR [ecx+edi*4-0x1ad87914],ah
  42c6bc:	loope  0x42c70e
  42c6be:	aaa    
  42c6bf:	jo     0x42c731
  42c6c1:	or     al,0xb4
  42c6c3:	out    dx,al
  42c6c4:	dec    ebx
  42c6c5:	sti    
  42c6c6:	dec    DWORD PTR [eax]
  42c6c8:	jecxz  0x42c73e
  42c6ca:	and    edi,DWORD PTR [ebx+edi*8+0x65]
  42c6ce:	cs nop
  42c6d0:	jo     0x42c6da
  42c6d2:	fst    DWORD PTR [edi-0x4b4dabb3]
  42c6d8:	repnz add DWORD PTR [eax],0x0
  42c6dc:	add    ecx,eax
  42c6de:	loop   0x42c6da
  42c6e0:	sub    BYTE PTR [ebx],dh
  42c6e2:	test   BYTE PTR [esi+0x4fe33d29],0x77
  42c6e9:	jo     0x42c753
  42c6eb:	adc    BYTE PTR [ebp+ecx*1+0x352f664b],ah
  42c6f2:	jecxz  0x42c743
  42c6f4:	xor    ecx,DWORD PTR [edx+0x1e5974bd]
  42c6fa:	cmp    ecx,DWORD PTR [eax]
  42c6fc:	jno    0x42c74c
  42c6fe:	ja     0x42c6fe
  42c700:	mov    ebx,0x7850f65a
  42c705:	fsubrp st(2),st
  42c707:	ins    DWORD PTR es:[edi],dx
  42c708:	xor    edx,DWORD PTR [ecx+0x636f54da]
  42c70e:	test   al,0x6f
  42c710:	ins    BYTE PTR es:[edi],dx
  42c711:	imul   esp,edi,0x18ce7376
  42c717:	pop    edx
  42c718:	das    
  42c719:	std    
  42c71a:	xor    al,BYTE PTR [eax]
  42c71c:	pusha  
  42c71d:	std    
  42c71e:	pop    ss
  42c71f:	or     al,0xb2
  42c721:	push   ds
  42c722:	xor    eax,0xfb73a407
  42c727:	js     0x42c714
  42c729:	icebp  
  42c72a:	xor    ah,ch
  42c72c:	sbb    ebp,edx
  42c72e:	pop    esi
  42c72f:	rol    DWORD PTR [ebp-0x3124088d],1
  42c735:	cld    
  42c736:	and    ch,0xb1
  42c739:	mov    ds:0x8e2878d7,eax
  42c73e:	jb     0x42c793
  42c740:	add    BYTE PTR [eax],al
  42c742:	aaa    
  42c743:	imul   esp,edi,0xef73644c
  42c749:	push   eax
  42c74a:	push   esp
  42c74b:	mov    fs,WORD PTR [ebx+0x2572907e]
  42c751:	in     eax,0xc3
  42c753:	in     eax,0x5e
  42c755:	add    eax,esi
  42c757:	cld    
  42c758:	xchg   edi,eax
  42c759:	cmp    edx,esp
  42c75b:	fwait
  42c75c:	sahf   
  42c75d:	mov    edx,0x4ee7ce72
  42c762:	mov    al,0x9
  42c764:	imul   ebx,eax,0x3e7df94
  42c76a:	push   0x875bb294
  42c76f:	ins    BYTE PTR es:[edi],dx
  42c770:	test   al,0x3
  42c772:	xchg   edi,eax
  42c773:	xchg   esi,eax
  42c774:	pop    ecx
  42c775:	inc    esp
  42c776:	das    
  42c777:	push   es
  42c778:	shr    DWORD PTR [ecx-0xb],1
  42c77b:	cld    
  42c77c:	outs   dx,BYTE PTR ds:[esi]
  42c77d:	hlt    
  42c77e:	inc    ecx
  42c77f:	sbb    DWORD PTR [ecx],eax
  42c781:	mov    dl,0xdf
  42c783:	out    0x84,eax
  42c785:	pop    esi
  42c786:	sub    ebx,esi
  42c788:	add    BYTE PTR [edx],bh
  42c78a:	jle    0x42c7f3
  42c78c:	pop    esp
  42c78d:	fst    QWORD PTR [edi-0x21]
  42c790:	push   edx
  42c791:	(bad)  
  42c792:	pop    esp
  42c793:	jmp    0xef85:0x7f51a983
  42c79a:	inc    ecx
  42c79b:	stos   BYTE PTR es:[edi],al
  42c79c:	clc    
  42c79d:	sbb    BYTE PTR [esi-0x7c],bl
  42c7a0:	(bad)  
  42c7a1:	push   ds
  42c7a2:	xchg   edx,eax
  42c7a3:	lods   al,BYTE PTR ds:[esi]
  42c7a4:	adc    al,0x64
  42c7a6:	add    BYTE PTR [eax],al
  42c7a8:	ins    BYTE PTR es:[edi],dx
  42c7a9:	jno    0x42c7fb
  42c7ab:	adc    DWORD PTR [ebx+0x68],ecx
  42c7ae:	inc    ecx
  42c7af:	jmp    0x29cd8da8
  42c7b4:	xor    eax,DWORD PTR [esi]
  42c7b6:	jmp    0x42c7c8
  42c7b8:	mov    edi,esi
  42c7ba:	test   DWORD PTR [ecx-0x448b0ab9],eax
  42c7c0:	stc    
  42c7c1:	mov    eax,ds:0x61e019fc
  42c7c6:	cdq    
  42c7c7:	outs   dx,DWORD PTR ds:[esi]
  42c7c8:	dec    ebx
  42c7c9:	not    DWORD PTR [eax+0x74]
  42c7cc:	sbb    DWORD PTR [esi],ebp
  42c7ce:	push   ecx
  42c7cf:	pop    esi
  42c7d0:	shl    ebp,0x85
  42c7d3:	aas    
  42c7d4:	(bad)  
  42c7d5:	daa    
  42c7d6:	ret    0x7ca4
  42c7d9:	mov    al,ds:0x212ce900
  42c7de:	test   BYTE PTR [ecx+0x4a],ah
  42c7e1:	idiv   ecx
  42c7e3:	shr    DWORD PTR ds:0x134100de,1
  42c7e9:	sti    
  42c7ea:	stc    
  42c7eb:	es xchg edi,eax
  42c7ed:	loopne 0x42c840
  42c7ef:	push   ds
  42c7f0:	jl     0x42c7d8
  42c7f2:	test   DWORD PTR [esp+edx*1+0xbb90965],ebp
  42c7f9:	(bad)
  42c7fd:	stc    
  42c7fe:	dec    edi
  42c7ff:	call   DWORD PTR [esi+0x95e1f7]
  42c805:	add    dh,bh
  42c807:	mov    esi,DWORD PTR [ebx+0x43603]
  42c80d:	add    BYTE PTR ds:0x45d8ef22,ch
  42c813:	and    dl,BYTE PTR [ebx+0xf]
  42c816:	test   eax,0xdd78e222
  42c81b:	push   esi
  42c81d:	pop    edi
  42c81e:	adc    BYTE PTR [ebx+0x6b1bc3c7],bh
  42c824:	out    0x81,al
  42c826:	jb     0x42c8a6
  42c828:	stc    
  42c829:	call   DWORD PTR [esi+0xd574eb4]
  42c82f:	loop   0x42c830
  42c831:	inc    DWORD PTR [esi+0x1a8d8bb4]
  42c837:	std    
  42c838:	idiv   bh
  42c83a:	inc    edi
  42c83b:	push   DWORD PTR [esp+ecx*1-0x3]
  42c83f:	adc    DWORD PTR [ebx+0x49ff1806],eax
  42c845:	adc    al,0xdb
  42c847:	and    DWORD PTR [esi+0x6],ebp
  42c84a:	aad    0x84
  42c84c:	or     al,0x0
  42c84e:	std    
  42c84f:	cmc    
  42c850:	mov    WORD PTR [ebp-0x90336],es
  42c856:	xchg   BYTE PTR [ecx-0xf17d00],cl
  42c85c:	loope  0x42c7f4
  42c85e:	daa    
  42c85f:	add    bh,dh
  42c861:	mov    DWORD PTR [ebx-0x3af97e15],ecx
  42c867:	dec    ebp
  42c868:	lea    eax,[eax+edx*2+0x5151f6ff]
  42c86f:	xchg   ebp,eax
  42c870:	sbb    BYTE PTR [esi+0x0],dl
  42c873:	add    BYTE PTR [ecx],dh
  42c875:	mov    dl,0x14
  42c877:	xor    ebp,DWORD PTR [edi]
  42c879:	aam    0x87
  42c87b:	mov    edi,0x7c8d027b
  42c880:	pop    ss
  42c881:	shl    cl,1
  42c883:	mov    WORD PTR [edx-0x17052180],gs
  42c889:	push   esp
  42c88a:	aaa    
  42c88b:	jg     0x42c884
  42c88d:	or     esp,esi
  42c88f:	bound  ecx,QWORD PTR [esi]
  42c891:	add    ebx,edi
  42c893:	mov    BYTE PTR [edx-0x23],ch
  42c896:	mov    DWORD PTR [ecx],eax
  42c898:	pop    esp
  42c899:	adc    BYTE PTR [eax-0x20d43c7d],0x50
  42c8a0:	mov    eax,0xb05200b9
  42c8a5:	aam    0xf8
  42c8a7:	test   BYTE PTR [edi-0x47],ch
  42c8aa:	repnz mov WORD PTR [edx-0x67052680],gs
  42c8b1:	mov    ah,0x35
  42c8b3:	jg     0x42c91c
  42c8b5:	pop    ebx
  42c8b6:	out    0x3a,al
  42c8b8:	dec    esi
  42c8b9:	push   ebx
  42c8ba:	fild   WORD PTR [esi-0x72f88079]
  42c8c0:	jmp    0x3814:0xfafb3560
  42c8c7:	sti    
  42c8c8:	call   DWORD PTR [ecx+ecx*4]
  42c8cb:	mov    edi,0x648300db
  42c8d0:	pop    ebx
  42c8d1:	add    al,0x8b
  42c8d3:	add    DWORD PTR [edx+0x50d649],esp
  42c8d9:	add    BYTE PTR [eax+0x19],cl
  42c8dc:	repnz push ecx
  42c8de:	inc    eax
  42c8df:	xor    al,0xee
  42c8e1:	test   BYTE PTR [edi+0x38],ch
  42c8e4:	add    bh,BYTE PTR [edi-0x36]
  42c8e7:	pushf  
  42c8e8:	std    
  42c8e9:	gs xchg ebp,eax
  42c8eb:	sbb    BYTE PTR [eax-0x7c],0x87
  42c8ef:	lahf   
  42c8f0:	mov    DWORD PTR [eax],esp
  42c8f2:	sbb    bh,bl
  42c8f4:	and    ch,BYTE PTR [ebp-0x80]
  42c8f7:	imul   edx,DWORD PTR [ebp+0x690660eb],0x24
  42c8fe:	add    al,0xfa
  42c900:	pop    esi
  42c901:	cmp    BYTE PTR [edi],dl
  42c903:	ss aam 0x52
  42c906:	outs   dx,DWORD PTR ds:[esi]
  42c907:	fisub  WORD PTR [edx+eiz*8-0x4f]
  42c90b:	out    dx,al
  42c90c:	loop   0x42c956
  42c90e:	fsub   QWORD PTR [ebx+0x16]
  42c911:	adc    dh,BYTE PTR [ebx+0xe]
  42c914:	addr16 pop edi
  42c916:	xlat   BYTE PTR ds:[ebx]
  42c917:	fisubr WORD PTR [esi-0x34]
  42c91a:	cmp    al,0xdd
  42c91c:	fs dec edi
  42c91e:	xlat   BYTE PTR ds:[ebx]
  42c91f:	pop    ebp
  42c920:	dec    ebp
  42c921:	adc    BYTE PTR [edi],ch
  42c923:	nop
  42c924:	repnz inc esi
  42c926:	push   0xffffffea
  42c928:	outs   dx,BYTE PTR ds:[esi]
  42c929:	push   edi
  42c92a:	dec    edi
  42c92b:	mov    WORD PTR [eax],ds
  42c92d:	loope  0x42c94a
  42c92f:	cli    
  42c930:	pop    ss
  42c931:	loope  0x42c956
  42c933:	out    0x74,al
  42c935:	inc    edi
  42c936:	stos   DWORD PTR es:[edi],eax
  42c937:	mov    ds,WORD PTR [edx-0x6c2c7be6]
  42c93d:	test   BYTE PTR [eax],0x0
  42c940:	inc    eax
  42c941:	ficomp WORD PTR [esi-0x44]
  42c944:	mov    cl,0x20
  42c946:	nop
  42c947:	jg     0x42c993
  42c949:	clc    
  42c94a:	jp     0x42c8d1
  42c94c:	ins    BYTE PTR es:[edi],dx
  42c94d:	fidiv  DWORD PTR [edx+0x57]
  42c950:	xor    eax,DWORD PTR [esi]
  42c952:	(bad)  
  42c953:	pop    ds
  42c954:	push   ebp
  42c955:	stc    
  42c956:	bound  edx,QWORD PTR [edi+0x37]
  42c959:	push   es
  42c95a:	out    dx,al
  42c95b:	pop    ds
  42c95c:	inc    ebp
  42c95d:	stc    
  42c95e:	mov    edx,0x49ba2ceb
  42c963:	loope  0x42c93a
  42c965:	xchg   edi,eax
  42c966:	sahf   
  42c967:	retf   0xda72
  42c96a:	out    0x36,eax
  42c96c:	mov    al,0x9
  42c96e:	add    DWORD PTR [eax+0x1f],ebp
  42c971:	pop    ebp
  42c972:	(bad)  
  42c973:	call   0xbe9572a4
  42c978:	test   dh,dl
  42c97a:	mov    ch,BYTE PTR [ecx+0x6708862c]
  42c980:	imul   ebx,esi,0xffffffe8
  42c983:	mov    esp,0x72f9f454
  42c988:	fcmovnb st,st(7)
  42c98a:	aad    0x70
  42c98c:	add    BYTE PTR [esi],0x36
  42c98f:	cli    
  42c990:	aas    
  42c991:	(bad)  
  42c992:	cli    
  42c993:	call   0xefc8a7c4
  42c998:	inc    edx
  42c999:	fisttp WORD PTR [ebp+0x37]
  42c99c:	mov    ah,0x99
  42c99e:	clc    
  42c99f:	(bad)  
  42c9a0:	cld    
  42c9a1:	popf   
  42c9a2:	sub    DWORD PTR [ecx+0x631f0000],0xffffffd7
  42c9a9:	call   0xe7c8a7da
  42c9ae:	mov    ecx,0x1118eca9
  42c9b3:	in     al,0x52
  42c9b5:	scas   al,BYTE PTR es:[edi]
  42c9b6:	pop    esp
  42c9b7:	rol    BYTE PTR [ebx-0x3c9cc057],cl
  42c9bd:	call   0x4b2aa7ee
  42c9c2:	sub    eax,0xf16200de
  42c9c7:	stc    
  42c9c8:	test   ecx,esi
  42c9ca:	mov    eax,ds:0x231bf491
  42c9cf:	cmc    
  42c9d0:	dec    edi
  42c9d1:	mov    cl,0xa9
  42c9d3:	cmp    BYTE PTR [edx],cl
  42c9d5:	fs mov cl,0xdd
  42c9d8:	add    cl,ch
  42c9da:	xor    eax,0xb0eef49b
  42c9df:	je     0x42c9e0
  42c9e1:	call   0x4d872b12
  42c9e6:	stos   DWORD PTR es:[edi],eax
  42c9e7:	loopne 0x42c9a3
  42c9e9:	add    BYTE PTR [esi-0x25],al
  42c9ec:	add    BYTE PTR [eax],al
  42c9ee:	shr    BYTE PTR [eax-0x6b],0x80
  42c9f2:	pop    eax
  42c9f3:	(bad)  
  42c9f4:	not    BYTE PTR [edx-0x12]
  42c9f7:	or     edi,ebx
  42c9f9:	xor    al,0x14
  42c9fb:	lods   al,BYTE PTR ds:[esi]
  42c9fc:	cmc    
  42c9fd:	push   ecx
  42c9fe:	add    ah,BYTE PTR [ecx-0x46]
  42ca01:	je     0x42ca16
  42ca03:	gs pop ebp
  42ca05:	lock sub eax,0x858cf2
  42ca0b:	add    BYTE PTR [esi-0x39000903],al
  42ca11:	mov    dl,0x79
  42ca13:	enter  0x4d9,0xe3
  42ca17:	pop    ds
  42ca18:	enter  0x8917,0x45
  42ca1c:	mul    BYTE PTR [ebx+0x45]
  42ca1f:	cld    
  42ca20:	cmp    eax,0x438d4eea
  42ca25:	(bad)  
  42ca26:	std    
  42ca27:	(bad)  
  42ca28:	jmp    0xc63332d9
  42ca2d:	int    0x14
  42ca2f:	push   eax
  42ca30:	jmp    0xd6c7dee6
  42ca35:	xchg   esi,eax
  42ca36:	add    al,0x33
  42ca38:	leave  
  42ca39:	add    ecx,DWORD PTR [ecx*4-0x29dfd]
  42ca40:	test   eax,0xce8349b2
  42ca45:	pop    ss
  42ca46:	loop   0x42ca02
  42ca48:	mov    DWORD PTR [ecx],ebx
  42ca4a:	test   DWORD PTR [ebx-0x72987b52],0xe8525f63
  42ca54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ca55:	mov    ebx,0xae1efff5
  42ca5a:	inc    ebp
  42ca5b:	inc    eax
  42ca5c:	inc    esi
  42ca5d:	fs retf 0xcd3b
  42ca61:	xchg   ebp,eax
  42ca62:	cli    
  42ca63:	mov    ch,BYTE PTR [edi]
  42ca65:	mov    eax,0x7c3f4c85
  42ca6a:	push   edi
  42ca6b:	clc    
  42ca6c:	hlt    
  42ca6d:	stos   DWORD PTR es:[edi],eax
  42ca6e:	or     DWORD PTR [eax+eax*1+0x0],eax
  42ca72:	neg    ebx
  42ca74:	int    0x73
  42ca76:	xor    eax,0xa31a1d27
  42ca7b:	add    dl,BYTE PTR [esi-0x1bb5e89]
  42ca81:	dec    ebp
  42ca82:	pop    esi
  42ca83:	xor    eax,0x34ab4491
  42ca88:	xor    al,0xfb
  42ca8a:	and    ch,cl
  42ca8c:	out    dx,al
  42ca8d:	aas    
  42ca8e:	das    
  42ca8f:	ins    BYTE PTR es:[edi],dx
  42ca90:	mov    esp,0xecdd728c
  42ca95:	push   edi
  42ca96:	push   ss
  42ca97:	out    dx,eax
  42ca98:	fidivr DWORD PTR [esi-0xd]
  42ca9b:	adc    al,0xdb
  42ca9d:	je     0x42ca7e
  42ca9f:	imul   ecx,ebp,0xffffffe7
  42caa2:	hlt    
  42caa3:	mov    edx,0x1d58fada
  42caa8:	leave  
  42caa9:	xor    eax,0xf97f27b9
  42caae:	mov    al,0xb9
  42cab0:	or     BYTE PTR [edi+0x12],bh
  42cab3:	xor    esi,edi
  42cab5:	icebp  
  42cab6:	jmp    0x4e9b:0x5c740038
  42cabd:	lea    ebx,[edx]
  42cabf:	dec    ecx
  42cac0:	ss call 0xfb1dc237
  42cac6:	mov    dl,0xc9
  42cac8:	fmul   QWORD PTR [edi+0x7]
  42cacb:	dec    edi
  42cacc:	call   DWORD PTR [ebp-0x12b32e3]
  42cad2:	(bad)  
  42cad3:	adc    ah,BYTE PTR [esi-0xb]
  42cad6:	add    BYTE PTR [eax],al
  42cad8:	sub    al,0x8f
  42cada:	out    dx,eax
  42cadb:	addr16 inc esi
  42cadd:	add    eax,DWORD PTR [ecx+0x57ddc70d]
  42cae3:	add    ah,BYTE PTR [edi-0xf3a9135]
  42cae9:	bound  ebp,QWORD PTR [ebp+0x4ca050df]
  42caef:	fidiv  WORD PTR ds:0x2cd7acef
  42caf5:	push   0xfffffff6
  42caf7:	imul   ebx,DWORD PTR [esi-0x7f4c429d],0x15fe5d06
  42cb01:	div    BYTE PTR [eax+ecx*2+0x7]
  42cb05:	(bad)  
  42cb06:	(bad)  
  42cb07:	aad    0x1
  42cb09:	sbb    al,0xf7
  42cb0b:	imul   edi,edi,0xffffffe1
  42cb0e:	and    al,0xf2
  42cb10:	mov    bl,ch
  42cb12:	out    0xc9,al
  42cb14:	cmp    DWORD PTR [esi-0x2e09fdf0],eax
  42cb1a:	jg     0x42caef
  42cb1c:	fldenv [ecx]
  42cb1e:	xlat   BYTE PTR ds:[ebx]
  42cb1f:	mov    ch,dh
  42cb21:	mov    gs,WORD PTR [esi+0x47]
  42cb24:	retf   
  42cb25:	push   es
  42cb26:	in     al,dx
  42cb27:	faddp  st(5),st
  42cb29:	cmc    
  42cb2a:	fld    DWORD PTR [edi-0x3d]
  42cb2d:	out    0x53,al
  42cb2f:	adc    DWORD PTR [ecx+0x6e],ecx
  42cb32:	je     0x42cb8b
  42cb34:	mov    edx,DWORD PTR [esi-0xabbc731]
  42cb3a:	mov    dl,0x8f
  42cb3c:	add    BYTE PTR [eax],al
  42cb3e:	repz cmc 
  42cb40:	pop    ss
  42cb41:	ins    BYTE PTR es:[edi],dx
  42cb42:	popf   
  42cb43:	loope  0x42cb12
  42cb45:	not    DWORD PTR [eax]
  42cb47:	out    dx,al
  42cb48:	out    0x2a,al
  42cb4a:	sbb    eax,DWORD PTR [esi-0x35bafe64]
  42cb50:	(bad)  
  42cb51:	jmp    0xe15f:0x6bdbc271
  42cb58:	iret   
  42cb59:	imul   DWORD PTR [ecx-0x59e6fee4]
  42cb5f:	call   0x66f9:0xf99e81fc
  42cb66:	mov    dh,0x6a
  42cb68:	call   0x449f5187
  42cb6d:	push   ebp
  42cb6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cb6f:	fst    QWORD PTR [eax+0x4e]
  42cb72:	cld    
  42cb73:	in     eax,0x85
  42cb75:	lods   al,BYTE PTR ds:[esi]
  42cb76:	sbb    BYTE PTR [ecx+ecx*1+0x6c],bl
  42cb7a:	pop    eax
  42cb7b:	repnz dec esi
  42cb7d:	cdq    
  42cb7e:	sti    
  42cb7f:	lea    edx,[esp+eiz*2]
  42cb82:	jmp    0x42cb6b
  42cb84:	test   BYTE PTR [ecx+0x72f9f7ea],dh
  42cb8a:	push   0x3ce18602
  42cb8f:	stc    
  42cb90:	dec    edi
  42cb91:	loope  0x42cb3a
  42cb93:	ficom  WORD PTR [edx+0x6]
  42cb96:	and    esp,esi
  42cb98:	test   DWORD PTR [esp+eax*1-0x3b6ea485],ebx
  42cb9f:	in     eax,0xf8
  42cba1:	out    dx,al
  42cba2:	add    BYTE PTR [eax],al
  42cba4:	repz xchg edi,eax
  42cba6:	pop    edx
  42cba7:	inc    edx
  42cba8:	hlt    
  42cba9:	xor    edx,DWORD PTR [edx+esi*2-0x30]
  42cbad:	pop    ebp
  42cbae:	in     eax,dx
  42cbaf:	gs sub al,0xde
  42cbb2:	add    BYTE PTR [edx],bh
  42cbb4:	stc    
  42cbb5:	nop
  42cbb6:	mov    edi,DWORD PTR [edi+esi*2]
  42cbb9:	cld    
  42cbba:	rcr    bh,cl
  42cbbc:	xor    edi,0xfffffff9
  42cbbf:	cmp    al,0x3f
  42cbc1:	pop    ebp
  42cbc2:	ret    
  42cbc3:	sbb    DWORD PTR ds:0xa97455c6,eax
  42cbc9:	jo     0x42cbc4
  42cbcb:	sahf   
  42cbcc:	arpl   sp,di
  42cbce:	addr16 into 
  42cbd0:	pop    edx
  42cbd1:	not    DWORD PTR [edi+0x30]
  42cbd4:	test   al,0x34
  42cbd6:	jnp    0x42cbd8
  42cbd8:	ja     0x42cc3f
  42cbda:	inc    ebp
  42cbdb:	or     ch,bl
  42cbdd:	call   0xae95216d
  42cbe2:	adc    edi,0x91f5aa34
  42cbe8:	retf   0xe0
  42cbeb:	add    bl,cl
  42cbed:	and    BYTE PTR [ebp+0xa],dh
  42cbf0:	int    0x8b
  42cbf2:	or     al,0xe8
  42cbf4:	pop    esp
  42cbf5:	shl    ch,1
  42cbf7:	(bad)  
  42cbf8:	jge    0x42cbd7
  42cbfa:	sub    eax,eax
  42cbfc:	shl    DWORD PTR [ecx-0x18bb36af],0x0
  42cc03:	push   ebp
  42cc04:	lea    eax,[ebx]
  42cc06:	sub    esp,0xdf5a0000
  42cc0c:	add    BYTE PTR [eax],al
  42cc0e:	lds    ebp,FWORD PTR [ecx-0x185c74b3]
  42cc14:	dec    ebp
  42cc15:	mov    edx,DWORD PTR [esi]
  42cc17:	test   eax,0x78e6b62
  42cc1c:	(bad)  
  42cc1d:	jmp    ecx
  42cc1f:	pop    ss
  42cc20:	dec    edi
  42cc21:	push   esi
  42cc22:	lods   al,BYTE PTR ds:[esi]
  42cc23:	add    DWORD PTR [edi-0x17472dbb],0xf717d180
  42cc2d:	push   edi
  42cc2e:	clc    
  42cc2f:	and    DWORD PTR [ebp-0x77],0xb
  42cc33:	or     dl,BYTE PTR [edx-0x18]
  42cc36:	push   ebp
  42cc37:	pop    ss
  42cc38:	idiv   edi
  42cc3a:	dec    ecx
  42cc3b:	mov    al,0x62
  42cc3d:	ins    BYTE PTR es:[edi],dx
  42cc3e:	pop    ds
  42cc3f:	popf   
  42cc40:	call   0xf5c33a9d
  42cc45:	inc    ecx
  42cc47:	scas   eax,DWORD PTR es:[edi]
  42cc48:	dec    esi
  42cc49:	push   0x23
  42cc4b:	popa   
  42cc4c:	inc    ebp
  42cc4d:	fsub   st(6),st
  42cc4f:	add    DWORD PTR [ecx-0x1],ebx
  42cc52:	das    
  42cc53:	dec    esp
  42cc54:	(bad)  
  42cc55:	cs push esp
  42cc57:	push   cs
  42cc58:	cmp    esp,ebp
  42cc5a:	mov    dh,0xc2
  42cc5c:	fmul   QWORD PTR [edx]
  42cc5e:	mov    edx,0xfa37d5ba
  42cc63:	imul   eax,DWORD PTR ds:0xfe061d84,0xffffffff
  42cc6a:	mov    dh,0x1a
  42cc6c:	fimul  WORD PTR [eax-0x671e0000]
  42cc72:	sbb    ebx,DWORD PTR [ebp+0x47]
  42cc75:	adc    DWORD PTR [ebx],ecx
  42cc77:	xchg   edx,ebx
  42cc79:	pushf  
  42cc7a:	xchg   DWORD PTR [ebx+edx*1-0x73],eax
  42cc7e:	jg     0x42cc87
  42cc80:	das    
  42cc81:	add    eax,0xee235c8d
  42cc86:	cmp    al,dh
  42cc88:	fild   QWORD PTR [edx+0x5f]
  42cc8c:	mov    edx,0x1757ae51
  42cc91:	cli    
  42cc92:	idiv   edx
  42cc94:	clc    
  42cc95:	retf   
  42cc96:	dec    edi
  42cc97:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cc99:	mov    edx,0x403b6634
  42cc9e:	mov    DWORD PTR [edi+ecx*4-0x34],edi
  42cca2:	jns    0x42ccc5
  42cca4:	fldpi  
  42cca6:	cmp    al,0x59
  42cca8:	mov    ds:0xe086de39,al
  42ccad:	or     al,0x31
  42ccaf:	or     BYTE PTR [edi],ch
  42ccb1:	add    eax,0x91b8d713
  42ccb6:	fadd   QWORD PTR [esi+0x3ff420f2]
  42ccbc:	das    
  42ccbd:	sbb    al,0xaf
  42ccbf:	cmp    BYTE PTR [edx],al
  42ccc1:	sbb    eax,0x2cac734a
  42ccc6:	add    eax,0xc5801d7a
  42cccb:	or     BYTE PTR [esi+0x2f03e8dd],0x5e
  42ccd2:	and    DWORD PTR [ecx],eax
  42ccd4:	add    BYTE PTR [eax],al
  42ccd6:	out    0x5e,al
  42ccd8:	mov    eax,ds:0x868efd9
  42ccdd:	jge    0x42ccf0
  42ccdf:	and    BYTE PTR [ecx-0x68674825],bl
  42cce5:	push   eax
  42cce6:	xor    ebp,DWORD PTR [edi+0x62beea7]
  42ccec:	or     ebx,DWORD PTR [eax*2+0x5b4070f2]
  42ccf3:	mov    dh,0x26
  42ccf5:	dec    edi
  42ccf6:	in     al,dx
  42ccf7:	data16 and BYTE PTR [esi+0x423ff5eb],cl
  42ccfe:	dec    edi
  42ccff:	lock inc edx
  42cd01:	jg     0x42cce3
  42cd03:	push   0xfffffff8
  42cd05:	mov    BYTE PTR [ebx+0x26],dh
  42cd08:	cwde   
  42cd09:	ss pusha 
  42cd0b:	lea    ebp,[edx]
  42cd0d:	push   eax
  42cd0e:	cmp    esp,DWORD PTR [ebx-0x53]
  42cd11:	mov    bl,0x71
  42cd13:	mov    ds,WORD PTR [edx]
  42cd15:	lock int3 
  42cd17:	into   
  42cd18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cd19:	add    esi,DWORD PTR [eax-0xa]
  42cd1c:	call   0x7d340971
  42cd21:	(bad)  
  42cd22:	test   eax,0xc0eb2f9b
  42cd27:	shl    cl,1
  42cd29:	(bad)  
  42cd2b:	imul   ebx,DWORD PTR [ebx],0xffffff8c
  42cd2e:	jae    0x42cd1a
  42cd30:	loop   0x42cd21
  42cd32:	and    ch,cl
  42cd34:	daa    
  42cd35:	add    al,0xb4
  42cd37:	imul   edi,DWORD PTR [ebx+0x6c0000ec],0xffffffb6
  42cd3e:	leave  
  42cd3f:	fst    DWORD PTR [edx]
  42cd41:	test   BYTE PTR [edi+ecx*4+0x64],dh
  42cd45:	icebp  
  42cd46:	mov    edx,0x10600d9
  42cd4b:	sbb    BYTE PTR [eax-0x1dbc060c],bl
  42cd51:	bound  esi,QWORD PTR [ecx+eiz*2+0x43]
  42cd55:	push   es
  42cd56:	inc    ebx
  42cd57:	cld    
  42cd58:	push   edi
  42cd59:	hlt    
  42cd5a:	test   DWORD PTR [edi+ebx*2],edi
  42cd5d:	pop    eax
  42cd5e:	dec    esp
  42cd5f:	lods   eax,DWORD PTR ds:[esi]
  42cd60:	dec    edx
  42cd61:	and    DWORD PTR [ecx+0x9df7d5],edi
  42cd67:	out    dx,al
  42cd68:	sbb    BYTE PTR [esi],cl
  42cd6a:	mov    ss:0xb0c89a26,al
  42cd70:	add    edx,edi
  42cd72:	je     0x42cd5f
  42cd74:	mov    bl,0x1f
  42cd76:	xchg   ah,dl
  42cd78:	cmp    al,0xa3
  42cd7a:	dec    edi
  42cd7b:	mov    ecx,0x5ce06a57
  42cd80:	test   al,0xb5
  42cd82:	stc    
  42cd83:	inc    esi
  42cd84:	push   es
  42cd85:	hlt    
  42cd86:	jae    0x42cdd5
  42cd88:	imul   BYTE PTR [ecx+0x8]
  42cd8b:	cdq    
  42cd8c:	imul   DWORD PTR [esi+0x8ba16f9]
  42cd92:	xchg   BYTE PTR [edi],ch
  42cd94:	adc    eax,DWORD PTR [ebp+0x6fd61f22]
  42cd9a:	(bad)  
  42cd9b:	cmc    
  42cd9c:	xlat   BYTE PTR ds:[ebx]
  42cd9d:	imul   esi,esp,0xcc000001
  42cda3:	stos   DWORD PTR es:[edi],eax
  42cda4:	cli    
  42cda5:	push   es
  42cda6:	push   es
  42cda7:	push   0xffffffec
  42cda9:	jb     0x42cdd3
  42cdab:	call   0xeed2:0xf52ca90d
  42cdb2:	jns    0x42cda2
  42cdb4:	stc    
  42cdb5:	mov    edi,0xdee869e7
  42cdba:	jle    0x42cdaf
  42cdbc:	jae    0x42cd73
  42cdbe:	xlat   BYTE PTR ds:[ebx]
  42cdbf:	push   cs
  42cdc0:	cli    
  42cdc1:	push   esp
  42cdc2:	mov    esi,ebx
  42cdc4:	rol    BYTE PTR [eax],cl
  42cdc6:	sbb    al,0xb0
  42cdc8:	cmc    
  42cdc9:	pop    edi
  42cdca:	cmp    BYTE PTR [ebx-0x23753d39],dh
  42cdd0:	push   ebx
  42cdd1:	mov    ecx,edx
  42cdd3:	pop    ebx
  42cdd4:	out    0xb8,al
  42cdd6:	xchg   esp,eax
  42cdd7:	fadd   QWORD PTR [eax]
  42cdd9:	mov    edx,DWORD PTR [ebx-0x1a]
  42cddc:	dec    esi
  42cddd:	add    esi,0xffffffb8
  42cde0:	push   eax
  42cde1:	inc    DWORD PTR [ebx-0x1e]
  42cde4:	mov    eax,DWORD PTR [ebp-0x8f6e2]
  42cdea:	ss gs dec ebp
  42cded:	hlt    
  42cdee:	scas   al,BYTE PTR es:[edi]
  42cdef:	push   ebx
  42cdf0:	or     dh,bh
  42cdf2:	fldcw  WORD PTR [edi-0x47]
  42cdf5:	psrld  mm0,QWORD PTR [ebx]
  42cdf8:	add    DWORD PTR [eax],eax
  42cdfa:	inc    esi
  42cdfb:	push   edi
  42cdfc:	test   DWORD PTR [eax-0x25],ecx
  42cdff:	adc    eax,0xe6e50f7
  42ce04:	sub    eax,0x690000ff
  42ce09:	(bad)  
  42ce0a:	jmp    0x9f6:0x850be389
  42ce11:	jo     0x42cddc
  42ce13:	add    DWORD PTR [esi],edx
  42ce15:	fadd   QWORD PTR [ecx+0xc987b06]
  42ce1b:	push   ecx
  42ce1c:	rcl    BYTE PTR [esi],0x8a
  42ce1f:	mov    ah,0x6
  42ce21:	fadd   QWORD PTR [eax]
  42ce23:	test   DWORD PTR [esi],edx
  42ce25:	out    0x83,al
  42ce27:	mov    ch,0xd7
  42ce29:	fild   DWORD PTR [eax]
  42ce2b:	mov    edx,DWORD PTR [ebx+0x4b0881d7]
  42ce31:	ror    BYTE PTR [eax],0x52
  42ce34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ce35:	push   ss
  42ce36:	push   ecx
  42ce37:	sbb    al,0x53
  42ce39:	sbb    al,BYTE PTR [edi]
  42ce3b:	test   DWORD PTR [ecx-0x27],eax
  42ce3e:	add    BYTE PTR [eax],al
  42ce40:	das    
  42ce41:	mov    ah,0x29
  42ce43:	adc    WORD PTR [edx+0xd07b84f],dx
  42ce4a:	cmp    eax,0x8630981c
  42ce4f:	dec    esp
  42ce50:	daa    
  42ce51:	fwait
  42ce52:	rol    DWORD PTR [esi+0xa66d571],1
  42ce58:	out    0x4c,eax
  42ce5a:	and    esp,DWORD PTR [ecx+edi*2]
  42ce5d:	push   eax
  42ce5e:	shl    BYTE PTR [edi+eiz*1+0x7c],cl
  42ce62:	pop    ss
  42ce63:	inc    esp
  42ce64:	cmp    al,0xc5
  42ce66:	add    al,0x87
  42ce68:	xchg   DWORD PTR [eax-0x4b],esi
  42ce6b:	adc    eax,0x70740000
  42ce70:	test   eax,0x79f86cf9
  42ce75:	pop    ebx
  42ce76:	cs add eax,0xecca7efe
  42ce7c:	std    
  42ce7d:	rol    BYTE PTR gs:[ecx-0x632843b1],1
  42ce84:	and    al,0x1c
  42ce86:	sub    BYTE PTR [eax+0x6c334485],ah
  42ce8c:	or     al,0x8d
  42ce8e:	cmp    BYTE PTR [ebp+0x52f9872e],0x2e
  42ce95:	sti    
  42ce96:	sahf   
  42ce97:	mov    BYTE PTR [eax+eax*1],al
  42ce9a:	das    
  42ce9b:	add    ah,0x74
  42ce9e:	sub    ch,BYTE PTR [edi+ecx*2-0x28]
  42cea2:	pop    es
  42cea3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cea4:	daa    
  42cea5:	sti    
  42cea6:	call   0xd53f0e28
  42ceab:	add    BYTE PTR [edi+0x64],bh
  42ceae:	fild   DWORD PTR [eax+ebp*2]
  42ceb1:	push   0x576d71a2
  42ceb6:	xlat   BYTE PTR ds:[ebx]
  42ceb7:	icebp  
  42ceb8:	idiv   dl
  42ceba:	rcr    ch,0x6e
  42cebd:	inc    eax
  42cebe:	sub    esp,DWORD PTR [ebx-0x10]
  42cec1:	mov    BYTE PTR [ebx-0x2],bl
  42cec4:	xor    eax,0x378b7e8b
  42cec9:	xlat   BYTE PTR ds:[ebx]
  42ceca:	mov    edi,0x2f03e849
  42cecf:	pop    ecx
  42ced0:	test   al,0x50
  42ced2:	add    BYTE PTR [eax],al
  42ced4:	and    ah,BYTE PTR [ebx+0x3d]
  42ced7:	in     al,0x90
  42ced9:	inc    edx
  42ceda:	std    
  42cedb:	(bad)  
  42cedc:	test   DWORD PTR [ebp+ebp*1-0x24],esp
  42cee0:	xchg   ecx,eax
  42cee1:	fldenv [esi+0x60]
  42cee4:	ja     0x42cec3
  42cee6:	std    
  42cee7:	ins    BYTE PTR es:[edi],dx
  42cee8:	mov    edx,0x65d73828
  42ceed:	out    dx,al
  42ceee:	pop    ds
  42ceef:	in     al,dx
  42cef0:	popf   
  42cef1:	sar    BYTE PTR [edx-0x2a],cl
  42cef4:	test   eax,0xe38a6f68
  42cef9:	icebp  
  42cefa:	pop    esi
  42cefb:	inc    eax
  42cefc:	cmp    ebx,DWORD PTR [eax+0x5a]
  42ceff:	pushf  
  42cf00:	add    al,0x9f
  42cf02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cf03:	add    esp,DWORD PTR [edx+ebx*4]
  42cf06:	pop    eax
  42cf07:	cmp    dl,0xdd
  42cf0a:	mov    ds:0xec1ea1b4,eax
  42cf0f:	mov    WORD PTR [ebx+0xa],?
  42cf12:	outs   dx,DWORD PTR ds:[esi]
  42cf13:	add    ebp,DWORD PTR [edx-0x72f543e2]
  42cf19:	popa   
  42cf1a:	lock add edi,DWORD PTR [ebx-0x1d]
  42cf1e:	pusha  
  42cf1f:	pop    ebx
  42cf20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cf21:	sahf   
  42cf22:	out    0x2d,eax
  42cf24:	popa   
  42cf25:	(bad)  
  42cf26:	cmp    BYTE PTR fs:[eax-0x13],0xa
  42cf2b:	(bad)  
  42cf2c:	jo     0x42cf89
  42cf2e:	lods   eax,DWORD PTR ds:[esi]
  42cf2f:	or     edi,DWORD PTR [edi-0xa]
  42cf32:	inc    esi
  42cf33:	pop    ds
  42cf34:	aad    0xed
  42cf36:	add    BYTE PTR [edx+0x0],ch
  42cf39:	add    BYTE PTR [eax-0x278b062f],cl
  42cf3f:	fs icebp 
  42cf41:	out    0x8a,al
  42cf43:	call   0x111db0bb
  42cf48:	test   bh,bl
  42cf4a:	add    ch,ah
  42cf4c:	das    
  42cf4d:	mov    dl,0xaf
  42cf4f:	adc    al,0xa
  42cf51:	ins    DWORD PTR es:[edi],dx
  42cf52:	sbb    ch,ch
  42cf54:	stc    
  42cf55:	jmp    0x3cce4b60
  42cf5a:	(bad)  
  42cf5b:	xchg   ebp,eax
  42cf5c:	cs xchg edx,eax
  42cf5e:	xchg   ebx,eax
  42cf5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cf60:	adc    eax,0x7c6462a6
  42cf65:	xchg   ebp,eax
  42cf66:	test   al,0xa2
  42cf68:	or     BYTE PTR [ecx],bh
  42cf6a:	scas   al,BYTE PTR es:[edi]
  42cf6b:	and    BYTE PTR [ecx],cl
  42cf6d:	ss mov dh,0x1f
  42cf70:	push   ecx
  42cf71:	jb     0x42cf8b
  42cf73:	(bad)  
  42cf75:	dec    edx
  42cf76:	ja     0x42cf60
  42cf78:	stc    
  42cf79:	ins    DWORD PTR es:[edi],dx
  42cf7a:	jae    0x42cfed
  42cf7c:	(bad)  
  42cf7d:	outs   dx,BYTE PTR ds:[esi]
  42cf7e:	outs   dx,BYTE PTR ds:[esi]
  42cf7f:	sub    DWORD PTR [edi+0x74],0xffffffe8
  42cf83:	add    DWORD PTR [ecx+0x51],ebx
  42cf86:	pmullw mm7,mm1
  42cf89:	push   esi
  42cf8a:	mov    al,0xa1
  42cf8c:	or     BYTE PTR [ecx-0x663c9aad],bh
  42cf92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cf93:	mov    eax,ds:0xe8ad510c
  42cf98:	stc    
  42cf99:	ss scas eax,DWORD PTR es:[edi]
  42cf9b:	sub    al,0x75
  42cf9d:	jmp    0x42cf9f
  42cf9f:	add    dl,bl
  42cfa1:	sub    esp,DWORD PTR [edi-0x67]
  42cfa4:	mov    cl,0x71
  42cfa6:	in     al,0xc1
  42cfa8:	add    al,0xec
  42cfaa:	push   ss
  42cfab:	push   ss
  42cfac:	add    bl,BYTE PTR [edx+0x44]
  42cfaf:	loope  0x42cfcd
  42cfb1:	xchg   ecx,eax
  42cfb2:	test   DWORD PTR [eax],eax
  42cfb4:	or     BYTE PTR [edx-0x73dba7f],dh
  42cfba:	pusha  
  42cfbb:	cld    
  42cfbc:	rcl    DWORD PTR [ecx],0x7e
  42cfbf:	sar    BYTE PTR [edx],0xdf
  42cfc2:	test   bl,0x4a
  42cfc5:	outs   dx,BYTE PTR es:[esi]
  42cfc7:	push   cs
  42cfc8:	rcr    DWORD PTR [ebx+0x26538b08],1
  42cfce:	jnp    0x42cf98
  42cfd0:	jno    0x42cfca
  42cfd2:	jb     0x42cff0
  42cfd4:	jo     0x42cfe7
  42cfd6:	div    DWORD PTR [ebp-0x62]
  42cfd9:	clc    
  42cfda:	mov    cl,0x35
  42cfdc:	rcl    BYTE PTR [ecx],0x83
  42cfdf:	jne    0x42cfa7
  42cfe1:	mov    cl,0x51
  42cfe3:	mov    ecx,DWORD PTR [ebx-0x2a]
  42cfe6:	or     DWORD PTR [eax],0x8511336
  42cfec:	int    0xea
  42cfee:	dec    edi
  42cfef:	jmp    DWORD PTR [esi]
  42cff1:	fisubr DWORD PTR [ecx]
  42cff3:	rcl    BYTE PTR [eax],0x19
  42cff6:	mov    esp,0x81bb4608
  42cffb:	in     al,dx
  42cffc:	xlat   BYTE PTR ds:[ebx]
  42cffd:	add    al,0x92
  42cfff:	add    dl,BYTE PTR [esi-0x20]
  42d002:	sub    eax,eax
  42d004:	add    BYTE PTR [eax],al
  42d006:	push   cs
  42d007:	lods   eax,DWORD PTR ds:[esi]
  42d008:	or     BYTE PTR [ebx+0x41],dl
  42d00b:	jnp    0x42cfc6
  42d00d:	push   esi
  42d00e:	jmp    0x71b78577
  42d013:	adc    dh,bh
  42d015:	(bad)  
  42d016:	retf   
  42d017:	div    DWORD PTR [ebp-0x72]
  42d01a:	(bad)  
  42d01b:	fistp  QWORD PTR [ecx-0x40]
  42d01e:	mov    eax,ds:0x511a86f7
  42d023:	adc    ah,BYTE PTR [ecx+eiz*2-0x7d]
  42d027:	pushf  
  42d028:	rcr    BYTE PTR [eax+0x1e],1
  42d02b:	imul   edx,DWORD PTR [ebx],0xffffffff
  42d02e:	das    
  42d02f:	aam    0x88
  42d031:	sar    DWORD PTR [edi-0x76],0x7a
  42d035:	jae    0x42d00f
  42d037:	in     al,0xd4
  42d039:	dec    edi
  42d03a:	xchg   esp,eax
  42d03b:	idiv   ch
  42d03d:	jmp    FWORD PTR [edi-0x3d946d7e]
  42d043:	cld    
  42d044:	int    0x86
  42d046:	in     al,dx
  42d047:	or     eax,0xf52f1283
  42d04c:	adc    bh,bl
  42d04e:	fs cmp al,0xfe
  42d051:	sub    DWORD PTR [esi-0xb],0xfffffffd
  42d055:	jmp    FWORD PTR [ebp+ebx*1+0x5dab0ace]
  42d05c:	add    eax,0x629f2f00
  42d061:	(bad)  
  42d062:	cli    
  42d063:	inc    eax
  42d064:	sub    eax,0xdd50fa89
  42d069:	inc    edx
  42d06a:	add    BYTE PTR [eax],al
  42d06c:	adc    eax,0xf28cce4c
  42d071:	dec    esp
  42d072:	xor    eax,0x7fb42e66
  42d077:	test   bl,ah
  42d079:	arpl   si,cx
  42d07b:	cli    
  42d07c:	inc    edi
  42d07e:	jnp    0x42d0dc
  42d080:	inc    edi
  42d081:	jle    0x42d0d2
  42d083:	hlt    
  42d084:	inc    eax
  42d085:	adc    ch,BYTE PTR [edx]
  42d087:	adc    bh,ch
  42d089:	hlt    
  42d08a:	mov    BYTE PTR [edi+0x4480f0ba],bh
  42d090:	and    esp,DWORD PTR ds:0x24e98737
  42d096:	cmp    DWORD PTR [edi+edx*1-0x73],0xf52f17c7
  42d09e:	adc    bh,bl
  42d0a0:	adc    al,0xf8
  42d0a2:	add    bh,0x0
  42d0a5:	jle    0x42d0ee
  42d0a7:	lock lods al,BYTE PTR ds:[esi]
  42d0a9:	fstp   QWORD PTR [edi]
  42d0ab:	sar    DWORD PTR [ebx-0x32],cl
  42d0ae:	(bad)  
  42d0af:	sti    
  42d0b0:	mov    ebx,0x7f3b17a0
  42d0b5:	jmp    0x42d0ab
  42d0b7:	xor    edi,DWORD PTR ds:0xec86e79e
  42d0bd:	(bad)  [ebp+0x5b70ba31]
  42d0c3:	sub    al,0xd7
  42d0c5:	sti    
  42d0c6:	rcl    dl,1
  42d0c8:	mov    ch,0x56
  42d0ca:	stos   BYTE PTR es:[edi],al
  42d0cb:	jl     0x42d138
  42d0cd:	out    0x6c,al
  42d0cf:	dec    eax
  42d0d0:	add    BYTE PTR [eax],al
  42d0d2:	xchg   edi,eax
  42d0d3:	push   esp
  42d0d4:	sub    eax,0x3c60b3b4
  42d0d9:	rcl    DWORD PTR [ebp+0x7b4870ea],1
  42d0df:	pop    eax
  42d0e0:	and    eax,0x93a0b7cc
  42d0e5:	sub    BYTE PTR [ebx+0x75d2ac79],0x8d
  42d0ec:	je     0x42d12e
  42d0ee:	pop    edi
  42d0ef:	and    ah,BYTE PTR ds:0xe7de33ac
  42d0f5:	add    ebp,DWORD PTR [eax+eiz*4-0x79]
  42d0f9:	add    al,0x2f
  42d0fb:	fsubrp st(7),st
  42d0fd:	retf   0x1eb
  42d100:	out    0x3,al
  42d102:	das    
  42d103:	fidivr WORD PTR [edi+0x5]
  42d106:	ss jmp 0x42d173
  42d109:	jle    0x42d0e6
  42d10b:	stc    
  42d10c:	push   ss
  42d10d:	(bad)  
  42d10e:	clc    
  42d10f:	mov    al,ds:0x1ec202ef
  42d114:	addr16 ret 
  42d116:	mov    esi,?
  42d118:	xchg   edx,eax
  42d119:	aad    0x15
  42d11b:	jmp    0x726:0x177831a2
  42d122:	das    
  42d123:	xchg   ebx,eax
  42d124:	add    BYTE PTR [edx-0x20],ah
  42d127:	pop    esi
  42d128:	in     eax,dx
  42d129:	pop    ebp
  42d12a:	xor    bl,dh
  42d12c:	add    BYTE PTR [edx-0x4b9972ca],bh
  42d132:	scas   eax,DWORD PTR es:[edi]
  42d133:	jb     0x42d0b5
  42d135:	mov    cl,0x0
  42d137:	add    BYTE PTR [eiz*2-0x4702f1e9],al
  42d13e:	aad    0x9a
  42d140:	push   ecx
  42d141:	pop    ds
  42d142:	push   ecx
  42d143:	ins    BYTE PTR es:[edi],dx
  42d144:	lahf   
  42d145:	jno    0x42d142
  42d147:	neg    dh
  42d149:	xor    edi,edi
  42d14b:	call   0x6b2c2f7c
  42d150:	mov    ch,0xe9
  42d152:	stc    
  42d153:	push   0x7b
  42d155:	in     al,0x9
  42d157:	ins    DWORD PTR es:[edi],dx
  42d158:	das    
  42d159:	call   0x296ebb57
  42d15e:	or     ch,BYTE PTR [ebp+0x27]
  42d161:	call   0x1c4ebb5f
  42d166:	push   ecx
  42d167:	mov    dh,0x78
  42d169:	jmp    0x5775fa7c
  42d16e:	inc    esp
  42d16f:	mov    ecx,0x650a2922
  42d174:	sbb    esi,0x0
  42d177:	jmp    0xcce5d7e
  42d17c:	addr16 xchg ecx,eax
  42d17e:	call   0xfa27176d
  42d183:	jb     0x42d1fb
  42d185:	cdq    
  42d186:	stc    
  42d187:	cld    
  42d188:	jl     0x42d16e
  42d18a:	adc    esi,DWORD PTR [ebp+0x41]
  42d18d:	test   eax,0xd46a2200
  42d192:	test   BYTE PTR [ecx],dh
  42d194:	sub    al,0xde
  42d196:	add    BYTE PTR [edx+0x4d4c5b5b],bh
  42d19c:	add    BYTE PTR [eax],al
  42d19e:	pop    esp
  42d19f:	pop    ebx
  42d1a0:	dec    esp
  42d1a1:	add    BYTE PTR [esi-0x53],ah
  42d1a4:	cmc    
  42d1a5:	rcl    BYTE PTR [ebx-0x7d7af8de],1
  42d1ab:	fld    QWORD PTR [eax]
  42d1ad:	add    BYTE PTR [ebp-0x1741f5f],cl
  42d1b3:	addr16 push esp
  42d1b5:	fsub   DWORD PTR [edi+eiz*2-0x535b33ac]
  42d1bc:	xchg   DWORD PTR [ebp+0x3e],ebx
  42d1bf:	sqrtps xmm4,XMMWORD PTR [ebx+eax*2+0x22]
  42d1c4:	pop    es
  42d1c5:	test   DWORD PTR [ebp+0x4d0000db],ebp
  42d1cb:	mov    eax,ds:0x67ce8be0
  42d1d0:	push   esp
  42d1d1:	aam    0xf4
  42d1d3:	push   0x8864c054
  42d1d8:	adc    BYTE PTR [ebx+0x79],dl
  42d1db:	(bad)  
  42d1dc:	fdivr  st,st(7)
  42d1de:	add    ebx,DWORD PTR [esi]
  42d1e0:	dec    edx
  42d1e1:	push   DWORD PTR [edi]
  42d1e3:	fiadd  DWORD PTR [ebx+0x4d5f99c0]
  42d1e9:	add    DWORD PTR [esi-0x39828624],edx
  42d1ef:	loopne 0x42d1f6
  42d1f1:	test   DWORD PTR [ebx+ebx*8-0x60230000],ecx
  42d1f8:	aam    0x8b
  42d1fa:	dec    esi
  42d1fb:	addr16 push esp
  42d1fd:	call   0x435c16
  42d202:	add    BYTE PTR [eax],al
  42d204:	data16 fcom QWORD PTR [eax-0x1]
  42d208:	daa    
  42d209:	fiadd  DWORD PTR [ebx+0x1a5f49c0]
  42d20f:	add    DWORD PTR [esi-0x24],eax
  42d212:	add    DWORD PTR [ebp-0x22],0xe38d0169
  42d219:	and    ecx,DWORD PTR [ebx+edx*2+0x2f]
  42d21d:	and    eax,0x825350d1
  42d222:	mov    ebp,0xfef6aa0a
  42d227:	jmp    FWORD PTR [edi]
  42d229:	ins    BYTE PTR es:[edi],dx
  42d22a:	inc    edx
  42d22b:	call   0x54bdcfe4
  42d230:	fild   DWORD PTR [ebx+0x35]
  42d233:	sti    
  42d234:	jp     0x42d1e3
  42d236:	sub    eax,0x83397efb
  42d23b:	mov    edi,0xffd57a30
  42d240:	fdiv   st,st(5)
  42d242:	jl     0x42d288
  42d244:	rep outs dx,BYTE PTR ds:[esi]
  42d246:	sub    dh,al
  42d248:	push   es
  42d249:	std    
  42d24a:	add    BYTE PTR [edx-0x20a21],al
  42d250:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d251:	pop    edx
  42d252:	loop   0x42d1da
  42d254:	bound  ebx,QWORD PTR [ecx]
  42d256:	xor    BYTE PTR [ebx+0x2e],0x1
  42d25a:	jge    0x42d2b8
  42d25c:	fwait
  42d25d:	into   
  42d25e:	sub    al,BYTE PTR [eax+ebp*1]
  42d261:	jg     0x42d2ce
  42d263:	call   DWORD PTR [eax+0x5c7cf5]
  42d269:	add    BYTE PTR [ebx+0x2c084a6c],bl
  42d26f:	mov    dl,0xe0
  42d271:	sub    eax,0x2d017c54
  42d276:	adc    ebp,esi
  42d278:	(bad)  
  42d279:	das    
  42d27a:	jecxz  0x42d29d
  42d27c:	ss jne 0x42d251
  42d27f:	jnp    0x42d2c2
  42d281:	or     ch,al
  42d283:	mov    ah,0x34
  42d285:	sti    
  42d286:	cmp    ah,cl
  42d288:	in     eax,dx
  42d289:	aas    
  42d28a:	das    
  42d28b:	add    ah,0x73
  42d28e:	loop   0x42d2ff
  42d290:	push   ecx
  42d291:	or     BYTE PTR [ebp+edi*1-0x221d7336],ch
  42d298:	pop    edi
  42d299:	fsub   st(5),st
  42d29b:	les    ebx,FWORD PTR [ecx-0x31]
  42d29e:	stos   BYTE PTR es:[edi],al
  42d29f:	add    eax,0x9eb0173f
  42d2a4:	fistp  WORD PTR [ecx+0x6f]
  42d2a7:	mov    es,WORD PTR [edx-0x7]
  42d2aa:	or     bl,0xa7
  42d2ad:	add    ebp,DWORD PTR [edx-0xbf543e3]
  42d2b3:	outs   dx,BYTE PTR ds:[esi]
  42d2b4:	fild   WORD PTR [edx+0x38de6e8]
  42d2ba:	xlat   BYTE PTR ds:[ebx]
  42d2bb:	pop    ebx
  42d2bc:	repz int 0xe5
  42d2bf:	push   edx
  42d2c0:	adc    BYTE PTR [ecx+0x36d971d5],cl
  42d2c6:	push   eax
  42d2c7:	push   ss
  42d2c8:	add    eax,DWORD PTR [ecx+0x780fe67b]
  42d2ce:	add    BYTE PTR [eax],al
  42d2d0:	daa    
  42d2d1:	call   0x8f234cc8
  42d2d6:	push   DWORD PTR [edx+eax*1-0x7e781d18]
  42d2dd:	jno    0x42d2d6
  42d2df:	adc    ch,BYTE PTR [edi+0x75]
  42d2e2:	dec    edi
  42d2e3:	jle    0x42d33d
  42d2e5:	fisub  WORD PTR [edi]
  42d2e7:	and    ebx,0x264bcfe5
  42d2ed:	call   0xf22ea1ac
  42d2f2:	pop    esi
  42d2f3:	dec    eax
  42d2f4:	sbb    DWORD PTR [edx+0x25],0xffffffe0
  42d2f8:	and    BYTE PTR [ebx+0x5c340829],ah
  42d2fe:	or     al,0xcf
  42d300:	gs out 0xd6,al
  42d303:	stos   BYTE PTR es:[edi],al
  42d304:	mov    cl,0xa0
  42d306:	mov    ecx,esi
  42d308:	(bad)  
  42d30a:	outs   dx,BYTE PTR ds:[esi]
  42d30b:	sti    
  42d30c:	clc    
  42d30d:	out    0x18,al
  42d30f:	in     al,dx
  42d310:	inc    ebp
  42d311:	mov    al,ds:0xa1b57900
  42d316:	fsub   QWORD PTR [edx-0x11]
  42d319:	in     eax,dx
  42d31a:	jge    0x42d2c8
  42d31c:	adc    dl,bl
  42d31e:	xor    eax,0x2d6421f1
  42d323:	push   esi
  42d324:	jmp    0xe0df5911
  42d329:	pop    esp
  42d32a:	adc    BYTE PTR [ecx-0x1eb116bd],bl
  42d330:	test   DWORD PTR [edx+0x62e8],ebx
  42d336:	hlt    
  42d337:	xchg   ebp,eax
  42d338:	stc    
  42d339:	cwde   
  42d33a:	hlt    
  42d33b:	pop    esp
  42d33c:	inc    esp
  42d33d:	cmp    eax,0x1e50dd65
  42d342:	sbb    edx,esi
  42d344:	test   DWORD PTR [eax+ebp*8+0x553173e8],ebp
  42d34b:	fst    QWORD PTR [eax+0x6]
  42d34e:	add    eax,esi
  42d350:	test   DWORD PTR [esp+ecx*8-0x1666f6a4],esp
  42d357:	mov    cs,WORD PTR [eax]
  42d359:	bound  esp,QWORD PTR [edi-0x1e]
  42d35c:	test   ecx,esi
  42d35e:	pop    esp
  42d35f:	jmp    0x826ac4b3
  42d364:	clc    
  42d365:	inc    ebx
  42d366:	push   edi
  42d367:	xchg   al,ch
  42d369:	push   esi
  42d36a:	jnp    0x42d354
  42d36c:	stc    
  42d36d:	(bad)  
  42d36e:	loopne 0x42d37d
  42d370:	cli    
  42d371:	aam    0x28
  42d373:	aad    0x40
  42d375:	jmp    0xa0985bc5
  42d37a:	outs   dx,BYTE PTR ds:[esi]
  42d37b:	mov    al,BYTE PTR [ebp-0x3b06536b]
  42d381:	call   0x3f90b1b2
  42d386:	and    dh,BYTE PTR [esi+0x70]
  42d389:	imul   ah
  42d38b:	(bad)  [eax+0x0]
  42d38e:	out    0xea,al
  42d390:	cmp    DWORD PTR [eax],eax
  42d392:	sahf   
  42d393:	jbe    0x42d3fb
  42d395:	inc    cl
  42d397:	data16 icebp 
  42d399:	mov    DWORD PTR [eax],eax
  42d39b:	add    BYTE PTR [ebx+0x1],al
  42d39e:	test   edi,edi
  42d3a0:	and    DWORD PTR [ebp+0x57],ebx
  42d3a3:	add    DWORD PTR [esi],edx
  42d3a5:	loope  0x42d409
  42d3a7:	pop    eax
  42d3a8:	xchg   ebx,eax
  42d3a9:	(bad)  
  42d3aa:	rcr    BYTE PTR [eax+0x6e],1
  42d3ad:	out    dx,al
  42d3ae:	push   cs
  42d3af:	push   DWORD PTR [ecx-0x78]
  42d3b2:	push   edi
  42d3b3:	lea    edi,[ebx-0x2817ae04]
  42d3b9:	jmp    0xdbd0d3b4
  42d3be:	jns    0x42d425
  42d3c0:	dec    edx
  42d3c1:	fiadd  DWORD PTR [ecx+0x4c63a7ce]
  42d3c7:	rcl    BYTE PTR [edi-0xdaf0a57],1
  42d3cd:	pop    ebx
  42d3ce:	mov    edx,0xf35b0f
  42d3d3:	add    dh,dl
  42d3d5:	dec    BYTE PTR gs:[ebx+edx*4-0x3ea8aee8]
  42d3dd:	mov    al,0x20
  42d3df:	test   esi,edx
  42d3e1:	loope  0x42d367
  42d3e3:	or     eax,0x6a00e097
  42d3e8:	pop    esp
  42d3e9:	gs mov ah,0x70
  42d3ec:	popa   
  42d3ed:	adc    edi,esi
  42d3ef:	pop    eax
  42d3f0:	pop    esi
  42d3f1:	cmp    BYTE PTR [eax],dl
  42d3f3:	inc    ecx
  42d3f5:	gs inc esp
  42d3f7:	clc    
  42d3f8:	or     eax,0x17ff49e9
  42d3fd:	fsubrp st(7),st
  42d3ff:	xlat   BYTE PTR ds:[ebx]
  42d400:	add    BYTE PTR [eax],al
  42d402:	push   esi
  42d403:	loopne 0x42d405
  42d405:	lea    ebx,[ebx]
  42d407:	dec    BYTE PTR [ebx+0x50]
  42d40a:	das    
  42d40b:	dec    esp
  42d40c:	das    
  42d40d:	adc    al,0xaa
  42d40f:	ss std 
  42d411:	test   BYTE PTR [eax-0xa],dh
  42d414:	std    
  42d415:	push   DWORD PTR [ecx+edi*4+0x7a2786e0]
  42d41c:	xor    dh,al
  42d41e:	fstp   st(6)
  42d420:	test   BYTE PTR [edx],dl
  42d422:	outs   dx,DWORD PTR ds:[esi]
  42d423:	cmc    
  42d424:	sub    eax,0xbd7a3efb
  42d429:	or     dh,BYTE PTR [edx+0x2ffffe52]
  42d42f:	mov    ebx,0xec2efb42
  42d434:	xchg   ebx,eax
  42d435:	inc    esp
  42d436:	add    BYTE PTR [esi+0x7b],al
  42d439:	test   BYTE PTR [edi-0x54],bh
  42d43c:	int3   
  42d43d:	cli    
  42d43e:	pop    edi
  42d43f:	pop    ds
  42d440:	adc    dl,BYTE PTR [edi-0x46]
  42d443:	jp     0x42d43a
  42d445:	cli    
  42d446:	loopne 0x42d40c
  42d448:	aad    0x25
  42d44a:	cmp    bl,cl
  42d44c:	int3   
  42d44d:	pop    eax
  42d44e:	jbe    0x42d4ca
  42d450:	mov    ebp,0x42704279
  42d455:	lock push ebp
  42d457:	pop    ecx
  42d458:	sub    DWORD PTR [ebp+0x4f2fdd62],ecx
  42d45e:	mov    ds:0xa8fa3d8a,al
  42d463:	cld    
  42d464:	xor    ah,BYTE PTR [esi+0x0]
  42d467:	add    BYTE PTR [edi],ch
  42d469:	jo     0x42d418
  42d46b:	dec    ebp
  42d46c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d46d:	stos   BYTE PTR es:[edi],al
  42d46e:	fadd   QWORD PTR [esi+0x50c5a527]
  42d474:	cmp    esi,DWORD PTR [edx-0x3c]
  42d477:	je     0x42d4bd
  42d479:	pop    DWORD PTR [ebp+ecx*4-0x4e]
  42d47d:	mov    ch,0xc6
  42d47f:	cli    
  42d480:	jo     0x42d447
  42d482:	lds    edx,FWORD PTR [ebx+ebp*8]
  42d485:	(bad)  
  42d487:	inc    ebx
  42d488:	das    
  42d489:	pop    ecx
  42d48a:	test   al,0x50
  42d48c:	or     DWORD PTR [ecx+0x6d],edx
  42d48f:	inc    esp
  42d490:	push   ebp
  42d491:	jecxz  0x42d41d
  42d493:	xor    al,0xc8
  42d495:	adc    eax,0xe9f37983
  42d49a:	(bad)  
  42d49b:	mov    al,0x1d
  42d49d:	in     al,0x72
  42d49f:	xor    BYTE PTR [eax+0x6a],0xcb
  42d4a3:	push   ss
  42d4a4:	out    dx,eax
  42d4a5:	jne    0x42d486
  42d4a7:	jns    0x42d509
  42d4a9:	fisub  WORD PTR [edi+0x3fea6b78]
  42d4af:	les    edi,FWORD PTR ds:0x32df4ae4
  42d4b5:	pop    edi
  42d4b6:	inc    eax
  42d4b7:	dec    esi
  42d4b8:	jnp    0x42d493
  42d4ba:	data16 int3 
  42d4bc:	das    
  42d4bd:	imul   esp,ebx,0xefe36bc9
  42d4c3:	sub    ah,ah
  42d4c5:	shr    BYTE PTR [ecx+0x5f],cl
  42d4c8:	in     al,0xe2
  42d4ca:	sbb    bh,BYTE PTR [edi+0x0]
  42d4cd:	add    BYTE PTR [ebx-0x12],dh
  42d4d0:	pop    esi
  42d4d1:	cld    
  42d4d2:	pusha  
  42d4d3:	jecxz  0x42d48d
  42d4d5:	sti    
  42d4d6:	mov    cl,0x60
  42d4d8:	pop    es
  42d4d9:	jg     0x42d546
  42d4db:	repnz outs dx,BYTE PTR ds:[esi]
  42d4dd:	cld    
  42d4de:	push   0xa9fb98e3
  42d4e3:	cwde   
  42d4e4:	out    dx,eax
  42d4e5:	jle    0x42d517
  42d4e7:	mov    fs,edx
  42d4e9:	xor    al,0x3f
  42d4eb:	pop    ecx
  42d4ec:	test   al,0x7e
  42d4ee:	repz in eax,0x5e
  42d4f1:	sti    
  42d4f2:	and    eax,0x85caf75a
  42d4f7:	loop   0x42d510
  42d4f9:	retf   
  42d4fa:	(bad)  
  42d4fc:	outs   dx,BYTE PTR ds:[esi]
  42d4fd:	add    bl,ah
  42d4ff:	loop   0x42d501
  42d501:	sbb    DWORD PTR [ebx+0x5b],esi
  42d504:	pop    esp
  42d505:	mov    ch,0xa
  42d507:	(bad)  
  42d508:	pop    eax
  42d509:	xchg   ecx,eax
  42d50a:	dec    edx
  42d50b:	hlt    
  42d50c:	stc    
  42d50d:	sahf   
  42d50e:	add    eax,0x69a05588
  42d513:	(bad)  
  42d514:	call   0xfa2718a2
  42d519:	lds    eax,FWORD PTR [eax+0x70]
  42d51c:	or     dl,BYTE PTR [ebx]
  42d51e:	xor    esi,esi
  42d520:	div    BYTE PTR [ebx+0x65]
  42d523:	out    0xe8,eax
  42d525:	pmaddwd mm4,mm4
  42d528:	stc    
  42d529:	push   edx
  42d52a:	and    bh,dl
  42d52c:	mov    dl,BYTE PTR [ebp-0x1b]
  42d52f:	in     al,0xe8
  42d531:	loop   0x42d533
  42d533:	add    al,ch
  42d535:	in     al,0xf9
  42d537:	inc    ecx
  42d538:	test   bl,dh
  42d53a:	stc    
  42d53b:	inc    esi
  42d53c:	(bad)  
  42d53d:	fucomip st,st(0)
  42d53f:	sbb    al,0xea
  42d541:	in     al,0xf9
  42d543:	nop
  42d544:	jmp    0xaf745ad5
  42d549:	adc    esi,DWORD PTR [ebp-0x30]
  42d54c:	in     eax,0x2c
  42d54e:	inc    DWORD PTR [esi-0x378ade51]
  42d554:	test   eax,0xbf9430e9
  42d559:	aam    0xb1
  42d55b:	stos   DWORD PTR es:[edi],eax
  42d55c:	sub    ah,BYTE PTR [ecx-0x8]
  42d55f:	sub    DWORD PTR [eax-0x25],0x6b05f17d
  42d566:	add    DWORD PTR [ecx],eax
  42d568:	dec    ecx
  42d569:	jecxz  0x42d566
  42d56b:	out    0x56,al
  42d56d:	and    ecx,ebp
  42d56f:	repz sub al,0xde
  42d572:	add    BYTE PTR [esi],dh
  42d574:	push   0x60
  42d576:	and    ecx,ebp
  42d578:	jmp    0x501b:0x490058d5
  42d57f:	xor    eax,eax
  42d581:	ror    esi,cl
  42d583:	je     0x42d5c5
  42d585:	out    0xae,eax
  42d587:	or     dh,al
  42d589:	rol    dh,cl
  42d58b:	je     0x42d5d5
  42d58d:	retf   0x83c0
  42d590:	(bad)
  42d594:	sub    al,0xd8
  42d596:	pop    eax
  42d597:	jmp    0x42d599
  42d599:	add    BYTE PTR [ecx+0x5a],al
  42d59c:	stc    
  42d59d:	sub    eax,DWORD PTR [ebx-0x10]
  42d5a0:	loop   0x42d5b2
  42d5a2:	xor    BYTE PTR [ebx-0x7],bl
  42d5a5:	cmp    DWORD PTR [ecx],esi
  42d5a7:	lock (bad) 
  42d5a9:	test   BYTE PTR [esi+eiz*8],0xae
  42d5ad:	leave  
  42d5ae:	fwait
  42d5af:	mov    es,WORD PTR [esi]
  42d5b1:	rol    BYTE PTR [ebp-0x4ef103e8],1
  42d5b7:	fistp  QWORD PTR [edx-0x7]
  42d5ba:	es mov esp,ebx
  42d5bd:	xchg   bx,ax
  42d5bf:	and    eax,0x2285036e
  42d5c4:	add    DWORD PTR [eax-0x9026efc],ebp
  42d5ca:	cmp    BYTE PTR [ebx],al
  42d5cc:	sti    
  42d5cd:	imul   ebx,esi,0x983787b4
  42d5d3:	sbb    DWORD PTR [ebx-0x73],ecx
  42d5d6:	mov    cs,WORD PTR [ecx]
  42d5d8:	push   eax
  42d5d9:	push   edi
  42d5da:	push   ebp
  42d5db:	adc    eax,0xc9787700
  42d5e0:	out    dx,al
  42d5e1:	xor    cl,BYTE PTR ds:0x2dff4169
  42d5e7:	les    eax,FWORD PTR [ecx-0x7c138dbc]
  42d5ed:	add    al,0x97
  42d5ef:	enter  0x3c30,0x9f
  42d5f3:	lea    edi,[eax]
  42d5f5:	test   BYTE PTR [edi],ch
  42d5f7:	sub    al,0x4a
  42d5f9:	adc    al,0x2d
  42d5fb:	aaa    
  42d5fc:	add    cl,BYTE PTR [ecx]
  42d5fe:	add    BYTE PTR [eax],al
  42d600:	add    ebx,ebp
  42d602:	clc    
  42d603:	mov    ecx,0x65b7d6f
  42d608:	rcr    BYTE PTR [edi],1
  42d60a:	leave  
  42d60b:	mov    ebp,gs
  42d60d:	cmc    
  42d60e:	jns    0x42d5e6
  42d610:	xor    BYTE PTR [ecx-0x43],bh
  42d613:	or     al,bl
  42d615:	xor    eax,DWORD PTR ds:0xc673e6f0
  42d61b:	cli    
  42d61c:	enter  0x1541,0xce
  42d620:	aad    0xec
  42d622:	jl     0x42d5e5
  42d624:	(bad)  
  42d625:	addr16 into 
  42d627:	xchg   BYTE PTR [ebp+0x5f],ch
  42d62a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d62b:	push   ss
  42d62c:	out    dx,eax
  42d62d:	mov    ch,0xdb
  42d62f:	std    
  42d630:	pop    esi
  42d631:	mov    ch,0x28
  42d633:	pop    edx
  42d634:	je     0x42d5e9
  42d636:	stc    
  42d637:	inc    DWORD PTR [esi-0x11c8d91b]
  42d63d:	add    al,0x5
  42d63f:	das    
  42d640:	out    dx,eax
  42d641:	mov    ah,0x34
  42d643:	lea    ebx,[ebx]
  42d645:	clc    
  42d646:	jnp    0x42d64a
  42d648:	xor    esp,esp
  42d64a:	dec    ecx
  42d64b:	push   es
  42d64c:	sbb    ebp,ecx
  42d64e:	add    esi,edi
  42d650:	pop    edx
  42d651:	out    dx,eax
  42d652:	adc    al,0xc0
  42d654:	je     0x42d60a
  42d656:	mov    cs,WORD PTR [edx]
  42d658:	jns    0x42d6d4
  42d65a:	push   eax
  42d65b:	add    esp,edx
  42d65d:	cld    
  42d65e:	jnp    0x42d661
  42d660:	add    esp,DWORD PTR ds:0x954
  42d666:	sti    
  42d667:	sbb    eax,0x2c690551
  42d66c:	aad    0x6d
  42d66e:	sahf   
  42d66f:	sub    al,0xd5
  42d671:	jae    0x42d679
  42d673:	fisub  WORD PTR [edi+0x6]
  42d676:	cmc    
  42d677:	push   0x1ddef733
  42d67c:	pop    edi
  42d67d:	mov    dh,0x51
  42d67f:	(bad)  
  42d680:	bsf    edi,ebx
  42d683:	xchg   esp,eax
  42d684:	sbb    bl,ah
  42d686:	call   0xad0a9169
  42d68b:	push   ds
  42d68c:	cmp    al,0x7
  42d68e:	in     eax,dx
  42d68f:	push   edx
  42d690:	mov    ds:0xe25e2edb,al
  42d695:	and    eax,0xb21d8e3
  42d69a:	inc    eax
  42d69b:	ins    BYTE PTR es:[edi],dx
  42d69c:	cdq    
  42d69d:	or     ebx,DWORD PTR [eax+0x6a]
  42d6a0:	mov    ebx,0xafb3767a
  42d6a5:	xor    DWORD PTR [edi],0xffffffdc
  42d6a8:	cmc    
  42d6a9:	and    ch,ch
  42d6ab:	push   edx
  42d6ac:	mov    ds:0xe25431db,al
  42d6b1:	pop    es
  42d6b2:	pop    edi
  42d6b3:	ins    BYTE PTR es:[edi],dx
  42d6b4:	lock pop es
  42d6b6:	push   esi
  42d6b7:	addr16 in al,0x3d
  42d6ba:	pop    eax
  42d6bb:	jmp    0x42d692
  42d6bd:	aam    0xb1
  42d6bf:	pop    ss
  42d6c0:	inc    esp
  42d6c2:	and    esi,0x532d51eb
  42d6c8:	and    bl,BYTE PTR [ebx]
  42d6ca:	add    BYTE PTR [eax],al
  42d6cc:	in     al,dx
  42d6cd:	repnz in eax,0x12
  42d6d0:	out    dx,eax
  42d6d1:	jg     0x42d661
  42d6d3:	ret    0x537b
  42d6d6:	adc    al,0x83
  42d6d8:	les    ebp,FWORD PTR [ecx-0x1257d24a]
  42d6de:	pop    esi
  42d6df:	inc    ecx
  42d6e0:	aaa    
  42d6e1:	xchg   DWORD PTR [eax+0x41],esp
  42d6e4:	(bad)  
  42d6e5:	repnz fstp TBYTE PTR [edx+0x3b]
  42d6e9:	out    0x6e,al
  42d6eb:	mov    esi,0xf60091c8
  42d6f0:	jno    0x42d6d5
  42d6f2:	test   DWORD PTR [ecx],edx
  42d6f4:	scas   al,BYTE PTR es:[edi]
  42d6f5:	pop    es
  42d6f6:	je     0x42d6f3
  42d6f8:	jno    0x42d693
  42d6fa:	clc    
  42d6fb:	das    
  42d6fc:	lods   al,BYTE PTR ds:[esi]
  42d6fd:	in     al,0x10
  42d6ff:	pop    esi
  42d700:	push   0x492ec0af
  42d705:	xchg   edi,eax
  42d707:	stos   DWORD PTR es:[edi],eax
  42d708:	je     0x42d6e8
  42d70a:	es mov edx,0xe90c61ac
  42d710:	jmp    0x42d77b
  42d712:	cld    
  42d713:	jno    0x42d6b9
  42d715:	fdivp  st(1),st
  42d717:	jmp    0x9978b11b
  42d71c:	(bad)  
  42d71d:	inc    BYTE PTR [ebp+0x635f7b24]
  42d723:	(bad)  [ecx+edx*2]
  42d726:	xor    eax,0xfc992bf2
  42d72b:	sti    
  42d72c:	sub    eax,0x754455
  42d731:	add    BYTE PTR [ebp+0x72e9fd5a],ch
  42d737:	stc    
  42d738:	test   DWORD PTR [eax+eiz*1+0x355d4365],esi
  42d73f:	lahf   
  42d740:	mov    edx,DWORD PTR ds:0x4ff8c622
  42d746:	jmp    0x5f6c5b23
  42d74b:	in     eax,0xf9
  42d74d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d74e:	clc    
  42d74f:	fs inc ebx
  42d751:	in     eax,0x35
  42d753:	and    edi,ebp
  42d755:	mov    ebx,0xf573d8cb
  42d75a:	or     al,dh
  42d75c:	xor    bp,cx
  42d75f:	fdivr  st,st(1)
  42d761:	pushf  
  42d762:	hlt    
  42d763:	fs clc 
  42d765:	(bad)  
  42d766:	in     eax,dx
  42d767:	(bad)
  42d76a:	fisub  DWORD PTR [ebx+0x5ac86af6]
  42d770:	inc    ebp
  42d771:	cld    
  42d772:	adc    ebp,DWORD PTR [esi]
  42d774:	int    0x58
  42d776:	cs xor eax,0xef91ff0a
  42d77c:	retf   0xeb8
  42d77f:	pop    eax
  42d780:	cmp    al,BYTE PTR [eax]
  42d782:	or     eax,0x61fa329a
  42d787:	sbb    al,0xc6
  42d789:	cmp    DWORD PTR [ebx],ebx
  42d78b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d78c:	push   eax
  42d78d:	cmovnp ebx,DWORD PTR ds:0x9bcd50fd
  42d794:	dec    ecx
  42d795:	push   edx
  42d796:	add    BYTE PTR [eax],al
  42d798:	inc    esp
  42d799:	cmp    al,bl
  42d79b:	add    BYTE PTR [esi-0x1f],al
  42d79e:	call   0xf6e69a6a
  42d7a3:	sbb    DWORD PTR [edx+0x74e84eca],0xfffffff3
  42d7aa:	idiv   bh
  42d7ac:	mov    cl,0x2d
  42d7ae:	std    
  42d7af:	call   0x39cb00
  42d7b4:	lea    ebx,ds:0xda4b2b0d
  42d7ba:	cli    
  42d7bb:	ret    0x1c05
  42d7be:	stc    
  42d7bf:	jmp    0x39798e
  42d7c4:	and    eax,0x8d086399
  42d7c9:	mov    eax,ds:0x2d07a853
  42d7ce:	or     cl,dl
  42d7d0:	pop    esi
  42d7d1:	in     eax,dx
  42d7d2:	and    BYTE PTR [ebx+0x2e2b55e],al
  42d7d8:	inc    edi
  42d7d9:	mov    edx,0x59407543
  42d7de:	dec    BYTE PTR [esi+ebx*8+0x2f003abf]
  42d7e5:	xchg   BYTE PTR [esi-0x8],bh
  42d7e8:	das    
  42d7e9:	(bad)  
  42d7ea:	std    
  42d7eb:	(bad)  
  42d7ec:	cmp    eax,0xec0094fe
  42d7f1:	inc    edi
  42d7f2:	add    eax,DWORD PTR [eax]
  42d7f4:	and    dh,BYTE PTR [eax-0x38d0bfab]
  42d7fa:	int    0x65
  42d7fc:	add    BYTE PTR [eax],al
  42d7fe:	xor    DWORD PTR cs:0xc4152f66,eax
  42d805:	adc    al,0xf7
  42d807:	(bad)  
  42d808:	cmp    eax,0x4a86aa00
  42d80d:	add    eax,0xc00fcd4e
  42d812:	ins    BYTE PTR es:[edi],dx
  42d813:	push   esi
  42d814:	(bad)  
  42d815:	mov    esi,0x47fd0cb6
  42d81a:	not    DWORD PTR [edx]
  42d81c:	idiv   BYTE PTR [esi+0x11]
  42d81f:	mov    DWORD PTR [eax-0x2738d49f],0xc4c4ac40
  42d829:	jg     0x42d82d
  42d82b:	pop    ds
  42d82c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d82d:	ds das 
  42d82f:	(bad)  
  42d830:	dec    edx
  42d831:	xor    eax,0xdafe1bd8
  42d836:	ins    BYTE PTR es:[edi],dx
  42d837:	lds    ebp,FWORD PTR [ebx+edi*8]
  42d83a:	cmp    ah,BYTE PTR [ecx]
  42d83c:	lock aas 
  42d83e:	das    
  42d83f:	inc    ebp
  42d840:	add    ebp,DWORD PTR [eax-0x2770f]
  42d846:	sbb    ah,0xd5
  42d849:	jne    0x42d84b
  42d84b:	sub    eax,0x99ef83c5
  42d850:	repz jle 0x42d89d
  42d853:	imul   esp,DWORD PTR [ebx-0x443ad0c2],0x40eb9704
  42d85d:	add    BYTE PTR [esi],ch
  42d85f:	fidivr WORD PTR [edx+0x3b0000c4]
  42d865:	mov    dh,ch
  42d867:	inc    ebx
  42d868:	das    
  42d869:	cmp    ebx,DWORD PTR [edi-0x43]
  42d86c:	xor    DWORD PTR [edi+ebx*2],0xf024b1d3
  42d873:	cmp    esp,DWORD PTR [edi+0x52]
  42d876:	fnstsw WORD PTR [eax-0x12]
  42d879:	loope  0x42d8e7
  42d87b:	ret    
  42d87c:	sbb    al,0xe3
  42d87e:	xchg   edi,eax
  42d87f:	les    eax,FWORD PTR [ebx+0x6]
  42d882:	clc    
  42d883:	inc    ebx
  42d884:	das    
  42d885:	adc    DWORD PTR [bx+di+0x527e],ecx
  42d88a:	loope  0x42d8b9
  42d88c:	das    
  42d88d:	xor    al,0xcb
  42d88f:	sbb    ebx,ebp
  42d891:	in     eax,dx
  42d892:	daa    
  42d893:	add    al,0xd5
  42d895:	sahf   
  42d896:	adc    al,0x8f
  42d898:	push   esp
  42d899:	sub    eax,0xcea85a17
  42d89e:	pop    esi
  42d89f:	dec    edx
  42d8a0:	daa    
  42d8a1:	xor    BYTE PTR es:[ebx-0x25],bl
  42d8a5:	cmp    BYTE PTR [eax-0x6d24bbb1],dl
  42d8ab:	mov    BYTE PTR [eax+0x78f5e451],al
  42d8b1:	mov    DWORD PTR [ecx],0xb6e1b691
  42d8b7:	fisub  WORD PTR [edi-0x5]
  42d8ba:	cld    
  42d8bb:	repz test eax,0xd9eee023
  42d8c1:	push   ecx
  42d8c2:	hlt    
  42d8c3:	dec    ebx
  42d8c4:	call   0xb00:0x4922ee
  42d8cb:	loop   0x42d934
  42d8cd:	add    al,0x2f
  42d8cf:	(bad)  
  42d8d0:	loop   0x42d89c
  42d8d2:	jae    0x42d8ae
  42d8d4:	out    0x83,al
  42d8d6:	lock ficom DWORD PTR [edx+0xdb7856]
  42d8dd:	mov    esp,0x2e32d7a0
  42d8e2:	ss adc DWORD PTR cs:[ecx-0x6b3f9ed4],ebp
  42d8ea:	xor    BYTE PTR [ebp+0x19],ah
  42d8ed:	add    ch,al
  42d8ef:	sub    edi,edx
  42d8f1:	xchg   esp,eax
  42d8f2:	sub    bh,dl
  42d8f4:	jae    0x42d8e7
  42d8f6:	in     eax,dx
  42d8f7:	psubd  mm2,mm4
  42d8fa:	add    dh,ch
  42d8fc:	inc    eax
  42d8fd:	jmp    0xd31ba7f6
  42d902:	ins    BYTE PTR es:[edi],dx
  42d903:	sbb    ah,dh
  42d905:	pop    ss
  42d906:	mov    al,ds:0x81c22ddc
  42d90b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d90c:	aaa    
  42d90d:	xor    al,0x1f
  42d90f:	push   eax
  42d910:	sbb    ah,BYTE PTR [edx-0x29]
  42d913:	in     eax,0x9
  42d915:	jg     0x42d92f
  42d917:	in     eax,dx
  42d918:	sub    eax,0xf9b8b399
  42d91d:	jmp    0xc202b74e
  42d922:	and    al,0xb
  42d924:	add    eax,0x3dbd247c
  42d929:	jmp    0xe58eec21
  42d92e:	add    BYTE PTR [eax],al
  42d930:	cli    
  42d931:	mov    esp,0xddbce787
  42d936:	pop    ecx
  42d937:	daa    
  42d938:	shl    BYTE PTR [esi+edi*4-0x79ccd30f],1
  42d93f:	test   DWORD PTR [ebx+0x61],edi
  42d942:	push   eax
  42d943:	loope  0x42d904
  42d945:	and    edi,edx
  42d947:	mov    al,0x76
  42d949:	push   edx
  42d94a:	inc    ebp
  42d94b:	push   0xffffffda
  42d94d:	fldcw  WORD PTR [ebp-0x1b]
  42d950:	jb     0x42d9a5
  42d952:	adc    DWORD PTR [esi],esp
  42d954:	ficom  DWORD PTR [si]
  42d957:	add    BYTE PTR [esi],al
  42d959:	fiadd  WORD PTR [eax]
  42d95b:	jmp    0x42d92e
  42d95d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d95e:	inc    esp
  42d95f:	cld    
  42d960:	push   es
  42d961:	fiadd  WORD PTR [eax]
  42d963:	add    BYTE PTR [ebp+0x1d],cl
  42d966:	add    eax,0x8499b38b
  42d96b:	shl    BYTE PTR [edx+0x4b0062ff],0x2e
  42d972:	std    
  42d973:	push   ecx
  42d974:	or     DWORD PTR [ebx],0xf6294ffb
  42d97a:	inc    esp
  42d97b:	adc    dh,dl
  42d97d:	fnstsw WORD PTR [ecx-0x8]
  42d980:	xchg   edi,eax
  42d981:	push   ss
  42d982:	add    al,0x39
  42d984:	and    ebx,DWORD PTR [ecx-0x5dcaef93]
  42d98a:	loop   0x42d998
  42d98c:	and    al,0xa2
  42d98e:	loop   0x42d998
  42d990:	or     eax,0xd0ede2
  42d995:	add    BYTE PTR [edi],cl
  42d997:	out    0xb0,eax
  42d999:	add    DWORD PTR [eax-0x5b],ecx
  42d99c:	mov    edx,0x7a8ddd55
  42d9a1:	in     al,dx
  42d9a2:	dec    edx
  42d9a3:	xor    cl,BYTE PTR [edi-0x73]
  42d9a6:	and    edx,DWORD PTR [esi-0x60778b1f]
  42d9ac:	idiv   bh
  42d9ae:	and    ebp,esi
  42d9b0:	add    esi,0xe8091199
  42d9b6:	mov    dl,0x9c
  42d9b8:	idiv   bh
  42d9ba:	ret    0x6da1
  42d9bd:	setge  BYTE PTR [ecx+eiz*8-0x9606685]
  42d9c5:	test   dh,al
  42d9c7:	adc    eax,0x8a07b305
  42d9cc:	sti    
  42d9cd:	xor    DWORD PTR [ebp+0x69],ebp
  42d9d0:	inc    esp
  42d9d1:	hlt    
  42d9d2:	das    
  42d9d3:	pop    ds
  42d9d4:	lahf   
  42d9d5:	stc    
  42d9d6:	clc    
  42d9d7:	daa    
  42d9d8:	pop    edi
  42d9d9:	xchg   ah,ch
  42d9db:	jnp    0x42d9a3
  42d9dd:	mov    ebp,0x418ac737
  42d9e2:	xor    esi,DWORD PTR [edi-0x40]
  42d9e5:	adc    al,0x9f
  42d9e7:	mov    ah,0x3d
  42d9e9:	add    BYTE PTR [edi+eax*1],bl
  42d9ec:	xchg   BYTE PTR [ecx],al
  42d9ee:	mov    dh,0x80
  42d9f0:	add    DWORD PTR [ecx-0x3e734097],ecx
  42d9f6:	in     al,dx
  42d9f7:	nop
  42d9f8:	pop    eax
  42d9f9:	xchg   DWORD PTR [eax],eax
  42d9fb:	add    BYTE PTR [edi+0x6938c093],bh
  42da01:	push   ecx
  42da02:	ja     0x3403a4f1
  42da08:	xlat   BYTE PTR ds:[ebx]
  42da09:	(bad)  
  42da0a:	adc    al,al
  42da0c:	cmp    eax,0x44430507
  42da11:	stc    
  42da12:	xor    ch,bl
  42da14:	cmp    BYTE PTR [eax],0x9
  42da17:	call   0xfb01b588
  42da1c:	lods   al,BYTE PTR ds:[esi]
  42da1d:	mov    BYTE PTR [ecx],cl
  42da1f:	push   edx
  42da20:	push   0xef0d5db1
  42da25:	(bad)  
  42da26:	pusha  
  42da27:	pop    edx
  42da28:	ins    BYTE PTR es:[edi],dx
  42da29:	cmc    
  42da2a:	push   ebx
  42da2b:	push   edx
  42da2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42da2d:	jbe    0x42d9b9
  42da2f:	inc    ecx
  42da30:	cmp    edx,DWORD PTR [edi]
  42da32:	xchg   BYTE PTR [ebx+0xb],al
  42da35:	ret    
  42da36:	rcl    BYTE PTR [ebx+edx*4],0xd4
  42da3a:	cmp    eax,0xf67bfc00
  42da3f:	pop    ecx
  42da40:	aaa    
  42da41:	rcl    BYTE PTR [ecx+0x55],cl
  42da44:	pop    esp
  42da45:	(bad)  
  42da46:	neg    BYTE PTR [ecx]
  42da48:	mov    eax,ds:0x6987588a
  42da4d:	fsubp  st(3),st
  42da4f:	mov    WORD PTR [ebx],cs
  42da51:	pop    esp
  42da52:	sbb    edi,DWORD PTR [eax+eax*1+0x4c]
  42da56:	jmp    FWORD PTR ds:0x7c13d72f
  42da5c:	cmc    
  42da5d:	icebp  
  42da5e:	pop    ss
  42da5f:	adc    eax,0xde6f0000
  42da64:	fs ret 
  42da66:	test   eax,0x2936ec20
  42da6b:	xlat   BYTE PTR ds:[ebx]
  42da6c:	repz jnp 0x42da44
  42da6f:	icebp  
  42da70:	daa    
  42da71:	adc    eax,0x496ede6f
  42da76:	sub    ebx,DWORD PTR [ebx-0x35]
  42da79:	jnp    0x42da33
  42da7b:	(bad)
  42da7f:	xchg   esi,eax
  42da80:	jo     0x42da91
  42da82:	(bad)  
  42da83:	sbb    esp,DWORD PTR [ebp+0x2d4c56fc]
  42da89:	pusha  
  42da8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42da8b:	clc    
  42da8c:	pop    esi
  42da8d:	int3   
  42da8e:	outs   dx,DWORD PTR ds:[esi]
  42da8f:	mov    ebp,0xe26e82e5
  42da94:	iret   
  42da95:	xchg   DWORD PTR [edx-0x28],ecx
  42da98:	shl    BYTE PTR [ecx+0x74],cl
  42da9b:	push   edx
  42da9c:	add    al,0xc
  42da9e:	je     0x42da91
  42daa0:	xchg   ebx,eax
  42daa1:	adc    ch,bh
  42daa3:	fstp   QWORD PTR [ecx]
  42daa5:	pop    ebx
  42daa6:	push   es
  42daa7:	fwait
  42daa8:	sbb    al,0x8b
  42daaa:	inc    esp
  42daab:	sub    eax,0x1fa25319
  42dab0:	hlt    
  42dab1:	push   ebp
  42dab2:	fbld   TBYTE PTR [esp-0x44]
  42dab6:	inc    ebp
  42dab7:	icebp  
  42dab8:	dec    ebx
  42dab9:	adc    ch,bh
  42dabb:	fst    st(6)
  42dabd:	(bad)  
  42dabf:	ss lock push cs
  42dac2:	mov    dl,0x67
  42dac4:	out    0x3,eax
  42dac6:	add    BYTE PTR [eax],al
  42dac8:	das    
  42dac9:	adc    eax,0xe33f1401
  42dace:	test   BYTE PTR [ebx+ebp*1-0x22],ah
  42dad2:	add    BYTE PTR [edx+0x38],dh
  42dad5:	imul   esi,DWORD PTR [ecx-0x1b],0xed8be29f
  42dadc:	sub    al,0xde
  42dade:	add    BYTE PTR [eax+0x36],ah
  42dae1:	(bad)  
  42dae3:	add    eax,0x65f9d4d5
  42dae8:	jmp    0x42db34
  42daea:	ins    BYTE PTR es:[edi],dx
  42daeb:	call   0xd33c:0xb4f9e206
  42daf2:	jae    0x42dae9
  42daf4:	mov    DWORD PTR [ecx+0x9],edx
  42daf7:	mov    edx,0xfa24f181
  42dafc:	ins    BYTE PTR es:[edi],dx
  42dafd:	fiadd  WORD PTR [ebp+0x74c7b419]
  42db03:	mov    ecx,0x751539ab
  42db08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42db09:	inc    eax
  42db0a:	call   FWORD PTR [ecx-0x2a8c2d03]
  42db10:	inc    esi
  42db11:	rcl    DWORD PTR [edx+0x53],cl
  42db14:	enter  0x13d3,0xa5
  42db18:	push   ds
  42db19:	push   ds
  42db1a:	add    DWORD PTR [esp+ebp*2+0x51],ebp
  42db1e:	and    eax,0xdee17ce
  42db23:	sub    DWORD PTR [ebx],esi
  42db25:	cs push ebx
  42db27:	mov    esi,0x290fa647
  42db2c:	add    BYTE PTR [eax],al
  42db2e:	xor    ebp,DWORD PTR [edx+edi*8]
  42db31:	aam    0x6c
  42db33:	call   0xe3f8c478
  42db38:	test   DWORD PTR [edi+ebp*2],edx
  42db3b:	popf   
  42db3c:	fucomip st,st(3)
  42db3e:	test   BYTE PTR [eax-0x408e70d9],bh
  42db44:	adc    eax,DWORD PTR [eax]
  42db46:	popf   
  42db47:	fadd   QWORD PTR [ecx+0x868a24d]
  42db4d:	mov    edx,ebx
  42db4f:	pop    edx
  42db50:	test   BYTE PTR [edi],0x38
  42db53:	xchg   ebp,eax
  42db54:	adc    al,0xbc
  42db56:	add    al,0x22
  42db58:	add    DWORD PTR [ebx-0x78b6ae9],esi
  42db5e:	popa   
  42db5f:	imul   BYTE PTR [edx+edx*1-0x75a91e3a]
  42db66:	adc    eax,0x6c2c838
  42db6b:	loop   0x42dbbc
  42db6d:	push   ebx
  42db6e:	dec    ebp
  42db6f:	(bad)  
  42db70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42db71:	adc    al,BYTE PTR [esi+0x435753e1]
  42db77:	adc    ecx,DWORD PTR ds:0xf6b02157
  42db7d:	inc    esi
  42db7e:	into   
  42db7f:	sub    al,0xf6
  42db81:	adc    eax,0x40eef2
  42db86:	in     eax,0x8e
  42db88:	mov    edi,0xffe46a44
  42db8d:	cmp    BYTE PTR [eax+0xb],dh
  42db90:	xor    DWORD PTR [ebx-0x37780000],ecx
  42db96:	les    eax,FWORD PTR [ebx+0x36b1a8e]
  42db9c:	fcomp  QWORD PTR [ecx]
  42db9e:	pop    ecx
  42db9f:	mov    edx,DWORD PTR [eax-0x1a]
  42dba2:	(bad)  
  42dba3:	(bad)  
  42dba4:	in     al,dx
  42dba5:	loopne 0x42db32
  42dba7:	or     al,0xbf
  42dba9:	xor    DWORD PTR [ecx-0x1],edx
  42dbac:	jnp    0x42db9f
  42dbae:	cmovo  eax,DWORD PTR [esi+0x5c]
  42dbb2:	mov    ecx,0xc45e4f75
  42dbb7:	inc    eax
  42dbb8:	dec    ebp
  42dbb9:	ret    
  42dbba:	imul   edx,edi,0xffffff9d
  42dbbd:	fnstsw WORD PTR [esi+0xca32f44]
  42dbc3:	add    al,bl
  42dbc5:	arpl   di,cx
  42dbc7:	cli    
  42dbc8:	jns    0x42db99
  42dbca:	push   esp
  42dbcb:	sti    
  42dbcc:	cmp    ah,BYTE PTR [ebx]
  42dbce:	cmovo  ebp,DWORD PTR [edi]
  42dbd1:	inc    ecx
  42dbd2:	dec    ecx
  42dbd3:	and    al,0x20
  42dbd5:	in     al,0x59
  42dbd7:	push   edi
  42dbd8:	data16 or BYTE PTR [edx-0x79],dl
  42dbdc:	adc    eax,DWORD PTR [esi-0x4f]
  42dbdf:	jae    0x42dc12
  42dbe1:	(bad)  
  42dbe2:	std    
  42dbe3:	dec    esi
  42dbe4:	pop    ecx
  42dbe5:	mov    WORD PTR [edx-0x43e6704c],cs
  42dbeb:	cli    
  42dbec:	xlat   BYTE PTR ds:[ebx]
  42dbed:	mov    edi,0xbd8fa6d
  42dbf2:	xor    cl,BYTE PTR [esp+eiz*4]
  42dbf5:	add    DWORD PTR [edi+0x420000fa],0xfcf27ecf
  42dbff:	pop    ebp
  42dc00:	or     eax,0xb169a6fb
  42dc05:	out    0x5e,eax
  42dc07:	mov    eax,ds:0x5cfabb
  42dc0c:	xchg   BYTE PTR [edi+eiz*4-0x61],al
  42dc10:	shl    BYTE PTR [ebx+0x9],0xcc
  42dc14:	xor    cl,BYTE PTR [edi+edi*8]
  42dc17:	aas    
  42dc18:	ret    
  42dc19:	out    0x9f,eax
  42dc1b:	js     0x42dbd9
  42dc1d:	cli    
  42dc1e:	adc    eax,0xdd848acb
  42dc23:	stos   DWORD PTR es:[edi],eax
  42dc24:	mov    esp,0x8a17dffa
  42dc29:	je     0x42dbd2
  42dc2b:	inc    edi
  42dc2c:	(bad)  
  42dc2d:	cli    
  42dc2e:	push   edi
  42dc2f:	lods   al,BYTE PTR ds:[esi]
  42dc30:	or     edi,edx
  42dc32:	pop    eax
  42dc33:	inc    ecx
  42dc34:	mov    esi,0xc4403279
  42dc39:	dec    edi
  42dc3a:	xlat   BYTE PTR ds:[ebx]
  42dc3b:	fnstsw WORD PTR [edi-0x25]
  42dc3e:	add    esi,ebx
  42dc40:	ins    BYTE PTR es:[edi],dx
  42dc41:	xchg   BYTE PTR [eax-0x1f436d28],ah
  42dc47:	lds    esp,FWORD PTR [ecx+0x6cd42503]
  42dc4d:	ret    
  42dc4e:	xor    eax,0xd9f9a769
  42dc53:	dec    ecx
  42dc54:	loope  0x42dc46
  42dc56:	sar    BYTE PTR [ecx+eiz*2],1
  42dc59:	xchg   BYTE PTR [eax+0xbc62d7],ah
  42dc5f:	add    BYTE PTR [ebx-0xa4780a7],dh
  42dc65:	shl    DWORD PTR [edi-0x965e444],cl
  42dc6b:	inc    ebx
  42dc6c:	das    
  42dc6d:	dec    eax
  42dc6e:	jmp    0x42dbfe
  42dc70:	pop    ebx
  42dc71:	mov    esi,0xe4a9ab9f
  42dc76:	xor    bh,BYTE PTR [eax+ebp*4+0x73c4df31]
  42dc7d:	shr    al,cl
  42dc7f:	add    ebp,DWORD PTR [edi]
  42dc81:	fimul  WORD PTR [esi]
  42dc83:	sbb    BYTE PTR [esi-0x3c],dh
  42dc86:	call   0x64a40b8e
  42dc8b:	arpl   WORD PTR [ebx+0x388b02d3],bp
  42dc91:	push   ds
  42dc92:	mov    cl,0x36
  42dc94:	mov    eax,ds:0x73aa2810
  42dc99:	fsubrp st(7),st
  42dc9b:	add    esi,DWORD PTR [eax-0x7bac23af]
  42dca1:	dec    ecx
  42dca2:	fmul   QWORD PTR [ecx+0x2e37bdf3]
  42dca8:	sbb    esi,DWORD PTR [edi]
  42dcaa:	pop    ebp
  42dcab:	cmp    DWORD PTR [edi+0x6512e7c6],edi
  42dcb1:	shl    DWORD PTR [esi-0x40],cl
  42dcb4:	and    al,0x5f
  42dcb6:	add    BYTE PTR [ecx+0x4f84e894],dh
  42dcbc:	xor    ebx,esi
  42dcbe:	add    BYTE PTR [edx+0x6c],dh
  42dcc1:	and    ecx,DWORD PTR [esp+eiz*2-0x33650000]
  42dcc8:	stc    
  42dcc9:	xchg   esi,eax
  42dcca:	(bad)  [eax-0x7d]
  42dccd:	jns    0x42dcb9
  42dccf:	xlat   BYTE PTR ds:[ebx]
  42dcd0:	stc    
  42dcd1:	sbb    ebx,edx
  42dcd3:	adc    al,BYTE PTR [ecx]
  42dcd5:	jg     0x42dcab
  42dcd7:	pop    ecx
  42dcd8:	shl    dh,0x90
  42dcdb:	push   ebx
  42dcdc:	add    ecx,ebp
  42dcde:	sub    al,0x3
  42dce0:	(bad)  
  42dce1:	mov    edx,0xe9005e54
  42dce6:	sub    al,0x3c
  42dce8:	add    BYTE PTR [edx-0x16feb9a7],bh
  42dcee:	sub    al,0x9e
  42dcf0:	mov    ebp,DWORD PTR [ebx+edi*4-0x2b]
  42dcf4:	stc    
  42dcf5:	ds adc edi,0x13
  42dcf9:	stc    
  42dcfa:	cmp    bl,BYTE PTR [esi]
  42dcfc:	add    DWORD PTR [edx-0x7d],esp
  42dcff:	push   ebx
  42dd00:	sti    
  42dd01:	es (bad) 
  42dd03:	hlt    
  42dd04:	stc    
  42dd05:	hlt    
  42dd06:	sbb    al,0xe3
  42dd08:	inc    eax
  42dd09:	jmp    0x9493a7b7
  42dd0e:	cld    
  42dd0f:	(bad)  
  42dd10:	inc    ebx
  42dd11:	add    eax,0x11fd51aa
  42dd16:	xor    dh,bl
  42dd18:	add    BYTE PTR [ebx+0x10],bh
  42dd1b:	mov    esp,0xe246623e
  42dd20:	dec    ebp
  42dd21:	je     0x42dd12
  42dd23:	rcl    DWORD PTR [eax+0x36],1
  42dd26:	mov    ah,0x49
  42dd28:	stc    
  42dd29:	aas    
  42dd2a:	add    BYTE PTR [eax],al
  42dd2c:	mov    ah,0xe9
  42dd2e:	cmp    al,0xfb
  42dd30:	in     al,dx
  42dd31:	fld    QWORD PTR [ebx+0x8029600]
  42dd37:	(bad)  
  42dd38:	adc    esp,ebx
  42dd3a:	(bad)  
  42dd3b:	cmp    BYTE PTR [ebx],bl
  42dd3d:	xchg   esi,eax
  42dd3e:	ins    DWORD PTR es:[edi],dx
  42dd3f:	add    ecx,esi
  42dd41:	xor    eax,0xed895602
  42dd46:	sub    al,0x12
  42dd48:	push   es
  42dd49:	fimul  DWORD PTR [esi-0x1]
  42dd4c:	xor    ebx,DWORD PTR [esi-0x29e9bff5]
  42dd52:	pop    esp
  42dd53:	or     esp,DWORD PTR [ebx]
  42dd55:	fimul  DWORD PTR [ebx-0x96d897b]
  42dd5b:	push   DWORD PTR [esi]
  42dd5d:	adc    BYTE PTR [esp+0x75f69498],0x8e
  42dd65:	test   DWORD PTR [ebp-0x476ba7d8],eax
  42dd6b:	out    dx,al
  42dd6c:	pop    es
  42dd6d:	fiadd  WORD PTR [eax]
  42dd6f:	lea    edx,[ebx+0x3d]
  42dd72:	std    
  42dd73:	jmp    FWORD PTR [ecx-0x61]
  42dd76:	stc    
  42dd77:	inc    DWORD PTR [esi+0x4cf97422]
  42dd7d:	push   ds
  42dd7e:	add    bl,BYTE PTR [edi-0x48]
  42dd81:	xor    al,cl
  42dd83:	ret    0xddbe
  42dd86:	push   ebx
  42dd87:	mov    ebp,DWORD PTR [edx]
  42dd89:	pop    edx
  42dd8a:	in     eax,0xd0
  42dd8c:	into   
  42dd8d:	fld    QWORD PTR [eax]
  42dd8f:	push   ebx
  42dd90:	add    BYTE PTR [eax],al
  42dd92:	loopne 0x42ddc0
  42dd94:	mov    WORD PTR [ebp-0x969fe],?
  42dd9a:	adc    esp,DWORD PTR ds:[edi+0x150299ff]
  42dda1:	pop    ebx
  42dda2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dda3:	data16 test BYTE PTR [esi-0x77],al
  42dda7:	xchg   edi,eax
  42dda8:	not    BYTE PTR [eax-0x24]
  42ddab:	(bad)  [ebx-0x7ca4d08b]
  42ddb1:	(bad)  
  42ddb2:	push   0x610b919f
  42ddb7:	cwde   
  42ddb8:	jns    0x42dd79
  42ddba:	fnstenv [ecx+0x1effc18c]
  42ddc0:	popf   
  42ddc1:	xlat   BYTE PTR ds:[ebx]
  42ddc2:	in     al,dx
  42ddc3:	mov    BYTE PTR [edx-0x48834c7c],0xfa
  42ddca:	fild   QWORD PTR [esi+0x41]
  42ddcd:	sti    
  42ddce:	xor    ch,BYTE PTR [eax+0x79]
  42ddd1:	mov    edi,0x83c54a38
  42ddd6:	out    dx,eax
  42ddd7:	rol    DWORD PTR [esi],1
  42ddd9:	das    
  42ddda:	out    dx,eax
  42dddb:	fadd   DWORD PTR [ebp-0x47b45c7c]
  42dde1:	cli    
  42dde2:	mov    edx,0xf68939
  42dde7:	cmp    BYTE PTR [ebp-0x5],dl
  42ddea:	and    bh,bl
  42ddec:	adc    eax,DWORD PTR [eax+0x2f]
  42ddef:	cmp    al,0x72
  42ddf1:	jns    0x42dddb
  42ddf3:	pop    ds
  42ddf4:	mov    eax,0x37000065
  42ddf9:	dec    edx
  42ddfa:	sub    dl,ah
  42ddfc:	ja     0x42de2d
  42ddfe:	adc    DWORD PTR ds:0xf27e07d0,ecx
  42de04:	cld    
  42de05:	sub    eax,0x4c58fb0e
  42de0a:	mov    edi,0x7971aa4f
  42de0f:	out    0x86,eax
  42de11:	shl    DWORD PTR [edi-0x7b71f906],1
  42de17:	mul    DWORD PTR [eax+0x2e7279c7]
  42de1d:	(bad)  
  42de1e:	std    
  42de1f:	xchg   BYTE PTR [eax+0x76],ch
  42de22:	add    BYTE PTR [ebx+edi*4-0x20054735],0xdd
  42de2a:	je     0x42deaa
  42de2c:	lods   al,BYTE PTR ds:[esi]
  42de2d:	(bad)  
  42de2e:	fidivr DWORD PTR [eax-0x46423a20]
  42de34:	imul   edx,eax,0x64
  42de37:	ret    
  42de38:	xor    eax,0x2f03205a
  42de3d:	fisubr WORD PTR [esi+edi*2+0x1c]
  42de41:	leave  
  42de42:	mov    dl,0xb8
  42de44:	clc    
  42de45:	bound  esp,QWORD PTR [edi+edi*2+0x47]
  42de49:	shl    BYTE PTR [edx+0x27ea3453],1
  42de4f:	adc    ebp,edi
  42de51:	frstor [esi+0x1e]
  42de54:	and    ebx,edi
  42de56:	pusha  
  42de57:	ds pop ds
  42de59:	pop    esp
  42de5a:	jg     0x42de14
  42de5c:	add    BYTE PTR [eax],al
  42de5e:	and    eax,0x2f02d95a
  42de63:	fisub  WORD PTR [esi+0x46]
  42de66:	pop    es
  42de67:	rcr    BYTE PTR [esi+edi*2+0x60],1
  42de6b:	(bad)  
  42de6c:	bound  edi,QWORD PTR [eax-0x789b9e98]
  42de72:	stc    
  42de73:	iret   
  42de74:	push   edx
  42de75:	push   ebx
  42de76:	mov    edx,0xe5ba6359
  42de7b:	iret   
  42de7c:	xchg   edi,eax
  42de7d:	stos   DWORD PTR es:[edi],eax
  42de7e:	mov    eax,0xabb83cd0
  42de83:	sahf   
  42de84:	loop   0x42df05
  42de86:	mov    ebx,esi
  42de88:	out    0x3,eax
  42de8a:	push   edi
  42de8b:	pop    esi
  42de8c:	out    0x3,eax
  42de8e:	das    
  42de8f:	inc    esp
  42de90:	out    0x2d,eax
  42de92:	mov    al,0x37
  42de94:	call   0x5ca10d9c
  42de99:	jle    0x42de47
  42de9b:	aad    0x2
  42de9d:	mov    eax,0xbba460e8
  42dea2:	mov    BYTE PTR [esi+0x1],cl
  42dea5:	(bad)  
  42dea6:	(bad)  
  42dea7:	aam    0x84
  42dea9:	sub    DWORD PTR [edi],esi
  42deab:	pop    edx
  42deac:	cwde   
  42dead:	jmp    0x24cebcde
  42deb2:	mov    bl,0x1f
  42deb4:	mov    WORD PTR [edi+ecx*4+0x1],ds
  42deb8:	(bad)  
  42deb9:	shl    ebp,0xf3
  42debc:	cli    
  42debd:	(bad)  
  42debe:	scas   eax,DWORD PTR es:[edi]
  42debf:	(bad)  
  42dec0:	je     0x42df0a
  42dec2:	add    BYTE PTR [eax],al
  42dec4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dec5:	dec    edx
  42dec6:	in     eax,0x62
  42dec8:	mov    eax,ebx
  42deca:	inc    ebx
  42decb:	sar    edi,0x2a
  42dece:	jle    0x42def4
  42ded0:	mov    ecx,edi
  42ded2:	jb     0x42df0c
  42ded4:	std    
  42ded5:	in     eax,0x7f
  42ded7:	xchg   edi,eax
  42ded8:	xor    ebx,esi
  42deda:	mov    al,ds:0x8c1b51e9
  42dedf:	das    
  42dee0:	sub    eax,0x6ef5c059
  42dee5:	(bad)  
  42dee6:	in     al,0xcf
  42dee8:	ret    0x85d3
  42deeb:	jno    0x42de9b
  42deed:	shl    DWORD PTR [esi+ebx*1-0x52],cl
  42def1:	int3   
  42def2:	ja     0x42dee0
  42def4:	inc    esi
  42def5:	sub    edi,edx
  42def7:	cld    
  42def8:	or     cl,ah
  42defa:	inc    eax
  42defb:	jmp    0x533c75ad
  42df00:	and    al,0x2c
  42df02:	push   edx
  42df03:	ins    BYTE PTR es:[edi],dx
  42df04:	outs   dx,BYTE PTR ds:[esi]
  42df05:	(bad)  
  42df06:	push   eax
  42df07:	inc    ecx
  42df08:	xchg   ebx,esi
  42df0a:	cli    
  42df0b:	les    ebx,FWORD PTR cs:[ebx+esi*2-0x73d4953b]
  42df13:	fs lahf 
  42df15:	sar    ecx,1
  42df17:	push   ss
  42df18:	fstp   TBYTE PTR [ecx-0x57]
  42df1b:	push   cs
  42df1c:	fcom   DWORD PTR [edi+0x43]
  42df1f:	add    BYTE PTR [esi+0x13892961],bl
  42df25:	jg     0x42ded1
  42df27:	add    DWORD PTR [eax],eax
  42df29:	add    BYTE PTR [ecx+0x5bfff90d],al
  42df2f:	call   0xf84c:0x5b86400b
  42df36:	push   ecx
  42df37:	dec    esi
  42df38:	shl    DWORD PTR [edx+edx*2+0x65],cl
  42df3c:	test   BYTE PTR [edi+edi*2+0x7e50f687],al
  42df43:	dec    eax
  42df44:	sbb    al,0xfe
  42df46:	xchg   ecx,eax
  42df47:	pop    ebx
  42df48:	jl     0x42df3e
  42df4a:	push   esi
  42df4b:	or     eax,0x920b8d23
  42df50:	loope  0x42df07
  42df52:	xor    BYTE PTR [eax-0x4134720a],cl
  42df58:	out    dx,al
  42df59:	inc    ecx
  42df5b:	xor    esi,esi
  42df5d:	jne    0x42df25
  42df5f:	xchg   esp,eax
  42df60:	adc    al,0x48
  42df62:	mul    DWORD PTR [ecx]
  42df64:	add    DWORD PTR [ebp-0x27c1b3a],eax
  42df6a:	adc    BYTE PTR [esi+esi*8-0x16e31915],0x8f
  42df72:	sub    BYTE PTR [esi+esi*8+0x445695eb],dl
  42df79:	clc    
  42df7a:	outs   dx,BYTE PTR ds:[esi]
  42df7b:	pop    eax
  42df7c:	pop    ss
  42df7d:	(bad)  
  42df7e:	jno    0x42df14
  42df80:	je     0x42df72
  42df82:	jno    0x42df72
  42df84:	inc    esp
  42df85:	adc    DWORD PTR [esi-0x2811481f],eax
  42df8b:	loope  0x42df8d
  42df8d:	lea    eax,[eax]
  42df8f:	add    BYTE PTR [ebx+0x5d],cl
  42df92:	cld    
  42df93:	call   DWORD PTR [ecx]
  42df95:	mov    edi,ecx
  42df97:	inc    DWORD PTR [esi+0x2ff9741a]
  42df9d:	inc    eax
  42df9e:	inc    ecx
  42df9f:	hlt    
  42dfa0:	xchg   esp,eax
  42dfa1:	sar    DWORD PTR [ecx+ebp*8+0x2e],cl
  42dfa5:	mov    bh,0xfd
  42dfa7:	mov    WORD PTR [edx-0x770546cd],gs
  42dfad:	std    
  42dfae:	std    
  42dfaf:	(bad)  
  42dfb0:	out    dx,eax
  42dfb1:	jge    0x42dfe3
  42dfb3:	stc    
  42dfb4:	cmp    al,0x77
  42dfb6:	push   ebx
  42dfb7:	pop    edx
  42dfb8:	aam    0x8d
  42dfba:	mov    esi,0x880a2f03
  42dfbf:	jmp    0x42df6d
  42dfc1:	mov    edx,DWORD PTR [edx+eax*8]
  42dfc4:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dfc6:	std    
  42dfc7:	test   BYTE PTR [edi+0x13],ch
  42dfca:	xor    al,0x4f
  42dfcc:	loope  0x42dfb9
  42dfce:	cmp    DWORD PTR [eax+0x37],0xa4f43a3e
  42dfd5:	mov    esp,0x423f4486
  42dfda:	lds    esi,FWORD PTR [ebx-0x73]
  42dfdd:	inc    eax
  42dfde:	sub    al,0xf8
  42dfe0:	xor    BYTE PTR ds:0x7ca40454,dh
  42dfe6:	mov    edx,0xa5b71044
  42dfeb:	int    0x20
  42dfed:	push   ebp
  42dfee:	mov    ah,0x7e
  42dff0:	pop    es
  42dff1:	popf   
  42dff2:	das    
  42dff3:	inc    ebx
  42dff4:	add    BYTE PTR [eax],al
  42dff6:	stos   BYTE PTR es:[edi],al
  42dff7:	jns    0x42dfae
  42dff9:	dec    edi
  42dffa:	test   DWORD PTR [edi+0x27],esi
  42dffd:	sbb    al,BYTE PTR [ecx+0x3afab4a1]
  42e003:	xchg   edi,eax
  42e004:	cmovo  ebp,DWORD PTR [edi]
  42e007:	cmp    al,ch
  42e009:	jae    0x42e028
  42e00b:	mov    cl,0xfd
  42e00d:	jle    0x42dffb
  42e00f:	movmskps edi,xmm3
  42e012:	cmp    al,BYTE PTR [edi]
  42e014:	dec    ebx
  42e015:	mov    ax,0x22dd
  42e019:	xorps  xmm6,xmm0
  42e01c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e01d:	add    esi,DWORD PTR [edx+0x6eff9b9d]
  42e023:	and    cl,BYTE PTR [ebx]
  42e025:	add    ebp,DWORD PTR [edx-0x6babffde]
  42e02b:	push   edx
  42e02c:	add    BYTE PTR [edx],ch
  42e02e:	and    eax,0x85b47e34
  42e033:	xacquire xchg DWORD PTR [ecx],edx
  42e036:	out    dx,eax
  42e037:	frstor [edi+0x36]
  42e03a:	je     0x42e019
  42e03c:	push   esp
  42e03d:	add    BYTE PTR [ebp+0x22],ch
  42e040:	rol    BYTE PTR [ebx],cl
  42e042:	loopne 0x42dfe8
  42e044:	div    DWORD PTR [ebx+ebp*8-0xa78c32f]
  42e04b:	sub    ebx,DWORD PTR [edi]
  42e04d:	mov    dh,bl
  42e04f:	retf   
  42e050:	mov    al,ds:0x5f34dec0
  42e055:	mov    ecx,0x66eceb1
  42e05a:	add    BYTE PTR [eax],al
  42e05c:	jmp    0x42e011
  42e05e:	es add al,0x7c
  42e061:	xor    al,0x80
  42e063:	outs   dx,BYTE PTR ds:[esi]
  42e064:	jae    0x42e031
  42e066:	mov    dh,al
  42e068:	out    0x5,eax
  42e06a:	cmp    DWORD PTR [ebx-0x3],edx
  42e06d:	pop    ds
  42e06e:	call   0x30980da1
  42e073:	push   ebx
  42e074:	fstp   QWORD PTR [edi]
  42e076:	call   0x6725cffb
  42e07b:	mov    edx,0x544e5018
  42e080:	test   DWORD PTR [edi+0x2dd488bc],ebx
  42e086:	mov    bh,0x4d
  42e088:	mov    al,0x51
  42e08a:	hlt    
  42e08b:	lock stc 
  42e08d:	rdtsc  
  42e08f:	clc    
  42e090:	fst    DWORD PTR [ecx+eax*1-0x2f]
  42e094:	mov    bh,0x22
  42e096:	or     DWORD PTR [edx-0x14],ebp
  42e099:	xlat   BYTE PTR ds:[ebx]
  42e09a:	aaa    
  42e09b:	rol    DWORD PTR [eax+0x4706c4f],0xca
  42e0a2:	mov    cl,dh
  42e0a4:	in     eax,dx
  42e0a5:	dec    edx
  42e0a6:	sar    ecx,0x97
  42e0a9:	xchg   ebp,eax
  42e0aa:	outs   dx,BYTE PTR ds:[esi]
  42e0ab:	pop    ss
  42e0ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e0ad:	popf   
  42e0ae:	sub    DWORD PTR gs:[edi+0x54a96730],ecx
  42e0b5:	fidiv  WORD PTR [eax]
  42e0b7:	jmp    0x53910ee8
  42e0bc:	mov    esp,0x3d13c8
  42e0c1:	add    BYTE PTR [ecx+0x1e],al
  42e0c4:	add    DWORD PTR [edx-0x6d],esp
  42e0c7:	adc    al,0xf6
  42e0c9:	push   ebp
  42e0ca:	in     al,dx
  42e0cb:	push   esp
  42e0cc:	pop    ebx
  42e0cd:	lds    eax,FWORD PTR [eax-0x44]
  42e0d0:	jb     0x42e0cb
  42e0d2:	leave  
  42e0d3:	push   ecx
  42e0d4:	or     DWORD PTR [edx+0x75],ebp
  42e0d7:	jecxz  0x42e05e
  42e0d9:	jnp    0xe9999022
  42e0df:	fst    QWORD PTR [ecx-0x62]
  42e0e2:	gs retf 0xcce8
  42e0e6:	inc    ebp
  42e0e7:	enter  0x64f9,0xf3
  42e0eb:	dec    esi
  42e0ec:	adc    al,0x70
  42e0ee:	sbb    eax,0x767ef1cc
  42e0f3:	retf   0x2f88
  42e0f6:	aaa    
  42e0f7:	arpl   WORD PTR [ebx+0x6d],ax
  42e0fa:	mov    al,0x9c
  42e0fc:	adc    BYTE PTR [edx],ah
  42e0fe:	data16 fisubr DWORD PTR [esi+0x37]
  42e102:	push   0x76100d22
  42e107:	retf   0xe173
  42e10a:	pop    esp
  42e10b:	fsubrp st(5),st
  42e10d:	add    al,bl
  42e10f:	sar    BYTE PTR [ecx+0x4d4bbdeb],1
  42e115:	or     BYTE PTR [esi+0x2b],ch
  42e118:	clc    
  42e119:	dec    DWORD PTR [ecx]
  42e11b:	aam    0xb9
  42e11d:	pop    edi
  42e11e:	call   0x9f05a93e
  42e123:	ficomp WORD PTR [edi+0x60000054]
  42e129:	and    eax,DWORD PTR [ecx]
  42e12b:	test   DWORD PTR [esi+0x6],eax
  42e12e:	or     eax,0xba1a83c7
  42e133:	inc    ebx
  42e134:	xchg   esi,eax
  42e135:	xchg   DWORD PTR [ebx+0x41],esp
  42e138:	xchg   esi,eax
  42e139:	imul   eax,DWORD PTR [esi],0xffffffa1
  42e13c:	xchg   esi,eax
  42e13d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e13e:	cmp    al,BYTE PTR [eax]
  42e140:	rcl    ebp,0x5c
  42e143:	ret    
  42e144:	adc    eax,0x176a40e2
  42e149:	loop   0x42e0e4
  42e14b:	pop    eax
  42e14c:	test   DWORD PTR [ebx],esp
  42e14e:	add    DWORD PTR [ecx+0x3aa7e6],esp
  42e154:	mov    ch,0xe6
  42e156:	mov    ecx,0x7a415643
  42e15b:	adc    eax,0x7899e206
  42e160:	test   DWORD PTR [ebx],esp
  42e162:	add    DWORD PTR [ecx+0x40e67e],esp
  42e168:	jne    0x42e1af
  42e16a:	mov    ebx,0x8a430643
  42e16f:	adc    eax,0x9899e246
  42e174:	aad    0x20
  42e176:	add    DWORD PTR [ecx+0x40e662],esp
  42e17c:	gs and eax,0x430643bb
  42e182:	call   0x2fb8:0x99dd9615
  42e189:	hlt    
  42e18a:	inc    edx
  42e18b:	add    BYTE PTR [eax],al
  42e18d:	add    BYTE PTR [esi+0x2f40185b],cl
  42e193:	push   esp
  42e194:	mov    ch,0xbe
  42e196:	ins    BYTE PTR es:[edi],dx
  42e197:	mov    bh,0x64
  42e199:	sbb    DWORD PTR [edx],0x77
  42e19c:	std    
  42e19d:	sahf   
  42e19e:	xlat   BYTE PTR ds:[ebx]
  42e19f:	hlt    
  42e1a0:	inc    edx
  42e1a1:	add    BYTE PTR [esi+0x2f40194f],cl
  42e1a7:	adc    al,0x96
  42e1a9:	mov    esi,0xbf64b6ec
  42e1ae:	inc    edx
  42e1af:	ja     0x42e1ae
  42e1b1:	sahf   
  42e1b2:	xchg   edi,eax
  42e1b3:	hlt    
  42e1b4:	inc    edx
  42e1b5:	add    dh,cl
  42e1b7:	pop    edi
  42e1b8:	sbb    BYTE PTR [eax+0x2f],al
  42e1bb:	adc    al,0xf6
  42e1bd:	ret    
  42e1be:	in     al,dx
  42e1bf:	mov    dh,0x64
  42e1c1:	mov    ebx,DWORD PTR [edx]
  42e1c3:	test   DWORD PTR [edi+ebx*4],0x438347
  42e1ca:	mov    gs,WORD PTR [ebx+0x11]
  42e1cd:	inc    eax
  42e1ce:	das    
  42e1cf:	push   esp
  42e1d0:	fadd   st(3),st
  42e1d2:	in     al,dx
  42e1d3:	mov    dh,0x5e
  42e1d5:	das    
  42e1d6:	and    edi,esi
  42e1d8:	add    al,0x9f
  42e1da:	pop    es
  42e1db:	jnp    0x42e220
  42e1dd:	add    BYTE PTR [esi+0x2f4017d3],cl
  42e1e3:	adc    al,0x3d
  42e1e5:	les    ebp,FWORD PTR [edi+esi*4+0x5e]
  42e1e9:	out    dx,eax
  42e1ea:	cmp    dh,bh
  42e1ec:	add    al,0x9f
  42e1ee:	ja     0x42e173
  42e1f0:	inc    ebx
  42e1f1:	add    BYTE PTR [eax],al
  42e1f3:	add    dh,cl
  42e1f5:	ret    0x4017
  42e1f8:	das    
  42e1f9:	adc    al,0x1d
  42e1fb:	les    ebp,FWORD PTR [edi+esi*4+0x5e]
  42e1ff:	jmp    0x42e223
  42e201:	test   DWORD PTR [edi+ebx*4],0x452bde77
  42e208:	das    
  42e209:	jg     0x42e222
  42e20b:	pop    ss
  42e20c:	outs   dx,DWORD PTR ds:[esi]
  42e20d:	fiadd  WORD PTR [esi-0x17e31384]
  42e213:	bound  esp,QWORD PTR [eax-0xe]
  42e216:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e217:	add    ebp,DWORD PTR [eax+0x2f452365]
  42e21d:	jg     0x42e25e
  42e21f:	adc    eax,0x5c86de6f
  42e224:	in     al,dx
  42e225:	sbb    al,0xe8
  42e227:	bound  eax,QWORD PTR [eax]
  42e229:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e22b:	add    eax,eax
  42e22d:	test   DWORD PTR [ebx],ebp
  42e22f:	inc    ebp
  42e230:	das    
  42e231:	jg     0x42e1f2
  42e233:	push   ss
  42e234:	out    dx,eax
  42e235:	fld    QWORD PTR [esi-0x44]
  42e238:	ins    BYTE PTR es:[edi],dx
  42e239:	sbb    al,0xe8
  42e23b:	(bad)  
  42e23c:	call   0x98468a32
  42e241:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e242:	and    eax,DWORD PTR [ebp+0x2f]
  42e245:	jg     0x42e25a
  42e247:	sbb    bh,ch
  42e249:	fld    QWORD PTR [esi-0x17e39365]
  42e24f:	bound  eax,QWORD PTR [ebx+esi*8]
  42e252:	daa    
  42e253:	add    al,0xb0
  42e255:	lds    ebp,FWORD PTR [ebx+0x2f000044]
  42e25b:	jg     0x42e270
  42e25d:	sbb    bh,ch
  42e25f:	fld    QWORD PTR [esi-0x17e38c05]
  42e265:	(bad)  
  42e266:	in     al,dx
  42e267:	icebp  
  42e268:	daa    
  42e269:	add    al,0xc8
  42e26b:	out    0xa4,al
  42e26d:	inc    esp
  42e26e:	das    
  42e26f:	jge    0x42e248
  42e271:	pop    ss
  42e272:	outs   dx,DWORD PTR ds:[esi]
  42e273:	fiadd  WORD PTR [esi-0x25]
  42e276:	jmp    0x42e293
  42e278:	call   0x283522df
  42e27d:	add    al,0xa0
  42e27f:	push   es
  42e280:	add    DWORD PTR [ebx+esi*2+0x18ad9fde],ebp
  42e287:	push   ds
  42e288:	add    DWORD PTR [edx-0x16c25edc],ecx
  42e28e:	dec    ebp
  42e28f:	call   DWORD PTR [ecx+ebp*4]
  42e292:	sub    al,0x67
  42e294:	pop    eax
  42e295:	and    al,0x6b
  42e297:	ficomp WORD PTR [edi+0x11e2005]
  42e29d:	mov    ah,BYTE PTR [ecx+eiz*4]
  42e2a0:	cmp    eax,0x146b4de9
  42e2a5:	test   eax,0x2c78672c
  42e2aa:	repz fstp QWORD PTR [edi+0x11e38ed]
  42e2b1:	dec    edx
  42e2b2:	adc    al,0xa2
  42e2b4:	cmp    eax,0x14e70de9
  42e2b9:	test   eax,0x2498672c
  42e2be:	add    BYTE PTR [eax],al
  42e2c0:	jmp    0x42e29f
  42e2c2:	lahf   
  42e2c3:	mov    ebp,0x4a011e20
  42e2c8:	aam    0xa1
  42e2ca:	cmp    eax,0x14dad3e9
  42e2cf:	sub    DWORD PTR [ebx],ebp
  42e2d1:	addr16 mov eax,0x9fddecac
  42e2d7:	icebp  
  42e2d8:	cmp    BYTE PTR [esi],bl
  42e2da:	add    DWORD PTR [edx-0x16c25d75],ecx
  42e2e0:	retf   
  42e2e1:	scas   al,BYTE PTR es:[edi]
  42e2e2:	or     eax,0xd8673329
  42e2e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e2e8:	in     al,dx
  42e2e9:	fstp   QWORD PTR [edi+0x11e40f1]
  42e2ef:	dec    edx
  42e2f0:	ret    
  42e2f1:	mov    eax,ds:0xe393e93d
  42e2f6:	adc    al,0x29
  42e2f8:	sub    esp,DWORD PTR [edi-0x8]
  42e2fb:	add    bl,bl
  42e2fd:	sbb    al,BYTE PTR [ecx]
  42e2ff:	mov    eax,ds:0x40e682
  42e304:	gs retf 0x43bf
  42e308:	push   es
  42e309:	inc    edx
  42e30a:	pop    edx
  42e30b:	adc    eax,0x1899da96
  42e310:	or     BYTE PTR [ebx],bl
  42e312:	add    DWORD PTR [ecx+0x40e616],esp
  42e318:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e319:	test   eax,0x41d643bf
  42e31e:	repnz adc edx,DWORD PTR [esi+0x3899da]
  42e325:	add    BYTE PTR [eax],cl
  42e327:	sbb    eax,DWORD PTR [ecx]
  42e329:	mov    eax,ds:0x40e5f6
  42e32e:	cmc    
  42e32f:	or     DWORD PTR [edi-0x39be69bd],edi
  42e335:	adc    al,0xc6
  42e337:	ficomp DWORD PTR [ecx+0x11b4858]
  42e33d:	mov    eax,ds:0x40eb8a
  42e342:	cmc    
  42e343:	jmp    0x41c92706
  42e348:	out    0x13,al
  42e34a:	(bad)  
  42e34b:	ficomp DWORD PTR [ecx+0x11b9878]
  42e351:	mov    eax,ds:0x40eea2
  42e356:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e357:	inc    edx
  42e358:	rol    BYTE PTR [ebx+0x46],0x41
  42e35c:	ficom  DWORD PTR [esi+edx*1]
  42e35f:	loop   0x42e2fa
  42e361:	cwde   
  42e362:	mov    BYTE PTR [ebx],bl
  42e364:	add    DWORD PTR [ecx+0x40eeb2],esp
  42e36a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e36b:	and    al,al
  42e36d:	inc    ebx
  42e36e:	push   ss
  42e36f:	cmp    ebx,DWORD PTR [esi-0x6625a9ec]
  42e375:	mov    eax,0x3e752f
  42e37a:	into   
  42e37b:	dec    ebx
  42e37c:	push   cs
  42e37d:	inc    eax
  42e37e:	das    
  42e37f:	icebp  
  42e380:	in     al,dx
  42e381:	addr16 addr16 js 0x42e3c3
  42e385:	add    ah,cl
  42e387:	jg     0x42e34c
  42e389:	add    BYTE PTR ds:[eax],al
  42e38c:	das    
  42e38d:	pop    edi
  42e38e:	add    bh,ch
  42e390:	call   0x7991a2d1
  42e395:	push   eax
  42e396:	stc    
  42e397:	repz cmp eax,0xa367fd77
  42e39d:	and    eax,0x1c60003e
  42e3a2:	aam    0x67
  42e3a4:	(bad)  
  42e3a5:	xor    eax,0x5860003e
  42e3aa:	vpunpcklqdq xmm6,xmm7,XMMWORD PTR [edi+0x2b17d1aa]
  42e3b2:	jl     0x42e3f3
  42e3b4:	das    
  42e3b5:	mov    WORD PTR [esi-0x19],ds
  42e3b8:	jno    0x42e432
  42e3ba:	std    
  42e3bb:	cli    
  42e3bc:	jns    0x42e41d
  42e3be:	jno    0x42e349
  42e3c0:	out    dx,eax
  42e3c1:	mov    dh,0x52
  42e3c3:	lahf   
  42e3c4:	xchg   ebp,edi
  42e3c6:	add    BYTE PTR ds:[eax-0x1b],bh
  42e3ca:	adc    eax,0xfd77a1bc
  42e3cf:	push   edx
  42e3d0:	mov    edi,cs
  42e3d2:	les    edi,FWORD PTR [esi]
  42e3d4:	das    
  42e3d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e3d6:	shl    BYTE PTR [ebp+0x32],cl
  42e3d9:	pop    ds
  42e3da:	int    0xc1
  42e3dc:	in     al,dx
  42e3dd:	mov    dh,0x60
  42e3df:	pop    ss
  42e3e0:	jo     0x42e3da
  42e3e2:	add    al,0xe8
  42e3e4:	jle    0x42e369
  42e3e6:	stos   DWORD PTR es:[edi],eax
  42e3e7:	cli    
  42e3e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e3e9:	outs   dx,DWORD PTR ds:[esi]
  42e3ea:	mov    dh,dl
  42e3ec:	mov    ebx,0x34abd9
  42e3f1:	add    BYTE PTR [edi-0x22],cl
  42e3f4:	stos   BYTE PTR es:[edi],al
  42e3f5:	inc    ecx
  42e3f6:	das    
  42e3f7:	pop    ecx
  42e3f8:	mov    ds:0xaaee63ad,al
  42e3fd:	inc    ecx
  42e3fe:	das    
  42e3ff:	(bad)
  42e402:	in     al,dx
  42e403:	and    al,ch
  42e405:	lods   al,BYTE PTR ds:[esi]
  42e406:	cmp    ecx,esi
  42e408:	mov    eax,ds:0xbcc52f41
  42e40d:	mov    ds:0x9be820ee,eax
  42e412:	xchg   ebx,eax
  42e413:	sbb    al,0x62
  42e415:	lods   eax,DWORD PTR ds:[esi]
  42e416:	xchg   BYTE PTR [eax+0x26],bl
  42e419:	dec    ecx
  42e41a:	cwde   
  42e41b:	retf   
  42e41c:	stos   DWORD PTR es:[edi],eax
  42e41d:	out    0x2c,eax
  42e41f:	fbstp  TBYTE PTR [ecx-0x16634088]
  42e425:	mov    ebx,0x37e81db6
  42e42a:	sub    eax,0xfb7402c
  42e42f:	les    ebp,FWORD PTR [edx]
  42e431:	jns    0x42e4a1
  42e433:	and    esp,DWORD PTR [esi]
  42e435:	or     BYTE PTR [edi],ch
  42e437:	sub    eax,0x2e33466d
  42e43c:	adc    edx,DWORD PTR [edi]
  42e43e:	jg     0x42e42e
  42e440:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e441:	add    esi,DWORD PTR [eax-0x452933b]
  42e447:	shl    DWORD PTR [esi+esi*4-0x4],1
  42e44b:	aad    0x5e
  42e44d:	push   es
  42e44e:	or     edi,ebx
  42e450:	pop    esi
  42e451:	mov    esi,0xc46eed65
  42e456:	add    BYTE PTR [eax],al
  42e458:	add    eax,0xdcba64a1
  42e45d:	jmp    0xda4e13c8
  42e462:	out    0x37,eax
  42e464:	cmp    al,ch
  42e466:	cmp    ebp,eax
  42e468:	sub    al,0x2f
  42e46a:	mov    ebx,0xf0af16
  42e46f:	sub    DWORD PTR [ebx],ebp
  42e471:	mov    ebp,0x5cfefa11
  42e476:	mov    edi,0x4fa68d2
  42e47b:	fs aad 0xd8
  42e47e:	xchg   ebx,eax
  42e47f:	stos   DWORD PTR es:[edi],eax
  42e480:	fld    TBYTE PTR [ebx+0x2f89a915]
  42e486:	jbe    0xe601669b
  42e48c:	sub    al,0x59
  42e48e:	(bad)  
  42e48f:	std    
  42e490:	sbb    BYTE PTR [ebx+0x7d],al
  42e493:	lds    esi,FWORD PTR [eax]
  42e495:	fidiv  WORD PTR [esp+esi*8-0x6d]
  42e499:	dec    edi
  42e49a:	and    eax,0x13c77de5
  42e49f:	cmp    eax,0x42011e3d
  42e4a4:	and    esi,ebx
  42e4a6:	into   
  42e4a7:	jb     0x42e496
  42e4a9:	cld    
  42e4aa:	inc    esp
  42e4ab:	add    eax,0xe6c75927
  42e4b0:	cdq    
  42e4b1:	xor    ecx,0x8b9e3711
  42e4b7:	mov    ebp,0x2b1dc73e
  42e4bc:	add    BYTE PTR [eax],al
  42e4be:	outs   dx,BYTE PTR ds:[esi]
  42e4bf:	fild   WORD PTR [eax]
  42e4c1:	mov    esp,0xb74db717
  42e4c6:	jg     0x42e474
  42e4c8:	dec    ebp
  42e4c9:	xchg   ecx,eax
  42e4ca:	lods   al,BYTE PTR ds:[esi]
  42e4cb:	ret    
  42e4cc:	stc    
  42e4cd:	jmp    0x8391a8e8
  42e4d2:	sub    eax,0x2ce90136
  42e4d7:	push   ds
  42e4d8:	cli    
  42e4d9:	pop    esp
  42e4da:	arpl   ax,cx
  42e4dc:	adc    ebx,DWORD PTR [ecx]
  42e4de:	inc    ecx
  42e4df:	push   ds
  42e4e0:	add    DWORD PTR [edx-0x65],esp
  42e4e3:	inc    esp
  42e4e4:	sti    
  42e4e5:	into   
  42e4e6:	dec    DWORD PTR [edi]
  42e4e8:	cmp    BYTE PTR [eax],al
  42e4ea:	or     eax,esi
  42e4ec:	ins    DWORD PTR es:[edi],dx
  42e4ed:	sbb    ebp,DWORD PTR [edi]
  42e4ef:	adc    eax,0x2c507411
  42e4f4:	mov    WORD PTR [ebp+0x6],es
  42e4f7:	das    
  42e4f8:	div    BYTE PTR [ebp+0x26]
  42e4fb:	js     0x42e571
  42e4fd:	or     al,0x60
  42e4ff:	ja     0x42e515
  42e501:	cmp    al,0x14
  42e503:	pop    ds
  42e504:	add    DWORD PTR [ebp-0x4d04f22a],eax
  42e50a:	pop    ss
  42e50b:	sub    eax,0xebc615f6
  42e510:	inc    eax
  42e511:	add    BYTE PTR [esi-0x318bff8d],al
  42e517:	ja     0x42e58d
  42e519:	or     BYTE PTR [esi-0x38],bh
  42e51c:	sbb    al,0xfe
  42e51e:	jns    0x42e538
  42e520:	add    ebx,0x0
  42e523:	add    BYTE PTR [ebp-0x29f344eb],bl
  42e529:	sub    eax,0x29a7ec82
  42e52e:	dec    esi
  42e52f:	xor    edi,ecx
  42e531:	cs dec esi
  42e533:	push   0xffffffc5
  42e535:	das    
  42e536:	arpl   WORD PTR [ecx],ax
  42e538:	outs   dx,BYTE PTR ds:[esi]
  42e539:	fiadd  WORD PTR [eax]
  42e53b:	add    BYTE PTR [esi],dl
  42e53d:	ja     0x42e5b3
  42e53f:	or     BYTE PTR [ecx],bh
  42e541:	in     eax,dx
  42e542:	xor    BYTE PTR [edx],dl
  42e544:	(bad)  
  42e545:	fiadd  WORD PTR [edi-0xea471ba]
  42e54b:	inc    DWORD PTR [edx]
  42e54d:	jl     0x516c13a0
  42e553:	call   DWORD PTR [ebx-0x5a]
  42e556:	or     eax,DWORD PTR [eax+0x56]
  42e559:	pop    ebp
  42e55a:	mov    ecx,0x7cb0ee74
  42e55f:	cld    
  42e560:	add    ebp,DWORD PTR [ebx]
  42e562:	add    BYTE PTR [ebp+0x2f],0xad
  42e566:	jl     0x42e5a9
  42e568:	xor    esi,eax
  42e56a:	mov    ebp,0xe84e2b74
  42e56f:	out    0xfc,al
  42e571:	add    DWORD PTR cs:[eax+0x2f],ebp
  42e575:	(bad)  
  42e578:	jg     0x42e562
  42e57a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e57b:	adc    al,0x3
  42e57d:	(bad)  
  42e57e:	cmp    eax,0xeab9a600
  42e583:	ret    0xa79b
  42e586:	dec    esi
  42e587:	lea    eax,[eax]
  42e589:	add    BYTE PTR [edx-0x41],bh
  42e58c:	push   esp
  42e58d:	sti    
  42e58e:	jns    0x42e543
  42e590:	dec    ebp
  42e591:	sti    
  42e592:	or     edi,0xa53b14a6
  42e598:	cmp    eax,0x2977b200
  42e59d:	or     al,0xb4
  42e59f:	jb     0x42e596
  42e5a1:	ss jno 0x42e55f
  42e5a4:	xor    BYTE PTR [edi+ebx*4],al
  42e5a7:	mov    dh,0x9a
  42e5a9:	sbb    BYTE PTR [edi-0x49],dl
  42e5ac:	jge    0x42e5ad
  42e5ae:	shl    BYTE PTR [eax-0x5a],0x31
  42e5b2:	mov    eax,0x6f10c5aa
  42e5b7:	mov    bh,0xa6
  42e5b9:	jno    0x42e5f2
  42e5bb:	lock adc al,al
  42e5be:	cmp    eax,0x6f2dfd77
  42e5c3:	cmp    BYTE PTR [ebp+edi*4-0x78b048d5],0x7f
  42e5cb:	cmp    al,0x0
  42e5cd:	test   DWORD PTR [edi+0x43],ebp
  42e5d0:	clc    
  42e5d1:	addr16 das 
  42e5d3:	aaa    
  42e5d4:	(bad)  
  42e5d5:	inc    DWORD PTR ds:0x42fb4db7
  42e5db:	out    dx,eax
  42e5dc:	adc    al,0x40
  42e5de:	das    
  42e5df:	fisubr WORD PTR [esi+0x32]
  42e5e2:	daa    
  42e5e3:	pop    ebx
  42e5e4:	shl    DWORD PTR [eax],1
  42e5e6:	sub    al,0x28
  42e5e8:	ror    DWORD PTR [edi],cl
  42e5ea:	outs   dx,DWORD PTR ds:[esi]
  42e5eb:	in     al,dx
  42e5ec:	daa    
  42e5ed:	add    al,0x0
  42e5ef:	add    ch,ah
  42e5f1:	pushf  
  42e5f2:	sbb    al,0x7d
  42e5f4:	inc    esp
  42e5f5:	pop    edi
  42e5f6:	retf   
  42e5f7:	adc    al,0x2b
  42e5f9:	fsubrp st(7),st
  42e5fb:	push   esp
  42e5fc:	jge    0x42e627
  42e5fe:	pop    ebp
  42e5ff:	jg     0x42e611
  42e601:	lds    esp,FWORD PTR [edx-0x6dc99757]
  42e607:	add    al,0x2f
  42e609:	ficom  WORD PTR [edx+0x27ec070f]
  42e60f:	add    al,0x77
  42e611:	add    edi,DWORD PTR [ebp+0x4]
  42e614:	das    
  42e615:	fdivrp st(2),st
  42e617:	pop    ss
  42e618:	inc    eax
  42e619:	enter  0x2f72,0x37
  42e61d:	mov    dh,0xd0
  42e61f:	lods   al,BYTE PTR ds:[esi]
  42e620:	jecxz  0x42e5e2
  42e622:	mov    bh,0x1b
  42e624:	outs   dx,DWORD PTR ds:[esi]
  42e625:	adc    DWORD PTR [eax+0x61924703],ebp
  42e62b:	inc    esp
  42e62c:	das    
  42e62d:	test   ebx,esp
  42e62f:	add    ch,BYTE PTR [edi]
  42e631:	fidiv  WORD PTR [edi+eiz*2-0x40]
  42e635:	ret    0xa93a
  42e638:	enter  0xe486,0xa9
  42e63c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e63d:	pop    esp
  42e63e:	and    edx,DWORD PTR [eax+eiz*1]
  42e641:	(bad)  
  42e642:	and    dh,BYTE PTR [eax]
  42e644:	push   esp
  42e645:	push   ebp
  42e646:	and    dl,BYTE PTR [edx+eiz*4+0x5a]
  42e64a:	pop    ss
  42e64b:	lods   eax,DWORD PTR ds:[esi]
  42e64c:	test   eax,eax
  42e64e:	mov    bh,0xa8
  42e650:	sti    
  42e651:	ror    DWORD PTR [edi],1
  42e653:	add    eax,DWORD PTR [eax]
  42e655:	add    BYTE PTR [edx+eax*8-0x6],bh
  42e659:	jle    0x42e60b
  42e65b:	dec    ecx
  42e65c:	add    ecx,ecx
  42e65e:	dec    edx
  42e65f:	fisubr WORD PTR [eax+0x69]
  42e662:	sub    ebx,esi
  42e664:	add    BYTE PTR [ebx+0x2c],dl
  42e667:	cmp    BYTE PTR [ecx],al
  42e669:	push   ebx
  42e66a:	sub    al,0x36
  42e66c:	add    ecx,ebp
  42e66e:	sub    al,0x9e
  42e670:	stc    
  42e671:	push   esp
  42e672:	inc    edi
  42e673:	ret    
  42e674:	adc    edi,ecx
  42e676:	and    bl,BYTE PTR [esi]
  42e678:	add    DWORD PTR [edx-0x7c],ebp
  42e67b:	ret    
  42e67c:	jae    0x42e659
  42e67e:	outs   dx,BYTE PTR ds:[esi]
  42e67f:	pop    ebp
  42e680:	cli    
  42e681:	mov    eax,ds:0x1b00de2c
  42e686:	mov    ebp,0x653ec0f1
  42e68b:	daa    
  42e68c:	enter  0x4ab,0xc0
  42e690:	dec    ecx
  42e691:	mov    ?,WORD PTR [ecx]
  42e693:	sahf   
  42e694:	push   cs
  42e695:	sub    DWORD PTR [ebx],esi
  42e697:	mov    ?,edi
  42e699:	xchg   ecx,eax
  42e69a:	xchg   esi,eax
  42e69b:	sub    al,BYTE PTR [esi+0x10b3ad85]
  42e6a1:	in     eax,0x2c
  42e6a3:	fimul  WORD PTR [ebp-0x41]
  42e6a6:	jg     0x42e6f9
  42e6a8:	sbb    DWORD PTR [ecx-0x7d],0xffffffc4
  42e6ac:	stc    
  42e6ad:	mov    ecx,0xe900cc24
  42e6b2:	sub    al,0xc3
  42e6b4:	adc    eax,DWORD PTR [ecx+0x22]
  42e6b7:	push   ds
  42e6b8:	add    DWORD PTR [ecx-0x35370000],esi
  42e6be:	add    cl,ch
  42e6c0:	sub    al,0x4b
  42e6c2:	push   esp
  42e6c3:	cli    
  42e6c4:	fidiv  WORD PTR [edi-0x3b2edc8e]
  42e6ca:	push   eax
  42e6cb:	xchg   ecx,eax
  42e6cc:	in     al,dx
  42e6cd:	adc    al,BYTE PTR [ecx-0x17]
  42e6d0:	and    al,0xbe
  42e6d2:	mov    ch,BYTE PTR [ecx+0x4872c]
  42e6d8:	xchg   ebx,ebx
  42e6da:	add    BYTE PTR [ebp-0x38ccd],cl
  42e6e0:	popa   
  42e6e1:	prefetchwt1 BYTE PTR fs:[eax+0x77]
  42e6e6:	jp     0x42e6ac
  42e6e8:	bound  ebx,QWORD PTR [ecx+esi*8-0x1]
  42e6ec:	cli    
  42e6ed:	mov    ds:0x4506c782,al
  42e6f2:	test   eax,esi
  42e6f4:	pop    ebp
  42e6f5:	ja     0x42e6ed
  42e6f7:	push   eax
  42e6f8:	jno    0x42e707
  42e6fa:	or     eax,ebp
  42e6fc:	adc    BYTE PTR [eax-0x4],dh
  42e6ff:	call   FWORD PTR [ebx+0x6c0f6d9a]
  42e705:	(bad)  
  42e707:	jne    0x42e727
  42e709:	js     0x42e71f
  42e70b:	dec    esp
  42e70c:	pop    ss
  42e70d:	sbb    eax,DWORD PTR [ecx]
  42e70f:	test   esi,edx
  42e711:	or     al,0x6
  42e713:	inc    esi
  42e714:	xchg   ebp,eax
  42e715:	js     0x42e774
  42e717:	jb     0x42e77c
  42e719:	int3   
  42e71a:	mov    ecx,0xc813105f
  42e71f:	ret    0x0
  42e722:	fcmovu st,st(2)
  42e724:	mov    al,0x1
  42e726:	lods   eax,DWORD PTR ds:[esi]
  42e727:	mov    WORD PTR [eax+eax*8-0x7ca12806],es
  42e72e:	push   cs
  42e72f:	test   al,0x74
  42e731:	sbb    ecx,edx
  42e733:	das    
  42e734:	inc    edx
  42e735:	add    ch,al
  42e737:	pop    ebp
  42e738:	enter  0xc274,0x5b
  42e73c:	clc    
  42e73d:	cs jnp 0x42e703
  42e740:	pop    edi
  42e741:	sbb    esi,0xffffffbe
  42e744:	stc    
  42e745:	je     0x42e6d1
  42e747:	retf   
  42e748:	mov    ecx,0xb9cb4540
  42e74d:	ret    
  42e74e:	aad    0x2d
  42e750:	sub    BYTE PTR [edi+ebp*1-0x6f],0xf1
  42e755:	push   ecx
  42e756:	fmul   DWORD PTR [ecx-0x5e872911]
  42e75c:	sub    DWORD PTR [edi],ecx
  42e75e:	out    dx,eax
  42e75f:	mov    ah,0x76
  42e761:	out    dx,eax
  42e762:	mov    dl,0xbe
  42e764:	xor    dh,bh
  42e766:	mov    ch,0xc9
  42e768:	repnz mov dl,0x31
  42e76b:	xor    al,0xa6
  42e76d:	pop    ebx
  42e76e:	fcmovne st,st(2)
  42e770:	jle    0x42e769
  42e772:	sbb    BYTE PTR [ecx],ah
  42e774:	add    BYTE PTR [edx-0x56],ah
  42e777:	je     0x42e7a9
  42e779:	sub    al,0xa4
  42e77b:	pushf  
  42e77c:	out    dx,al
  42e77d:	mov    edi,0x17c16da
  42e782:	sub    BYTE PTR [ebx+0xde5],bl
  42e788:	outs   dx,DWORD PTR ds:[esi]
  42e789:	(bad)  
  42e78a:	jle    0x42e783
  42e78c:	sbb    bl,bl
  42e78e:	mul    DWORD PTR [ebp+0x2f]
  42e791:	repnz mov eax,ds:0x3db67b14
  42e797:	add    BYTE PTR [edx-0x2f026979],ch
  42e79d:	xchg   edi,eax
  42e79e:	sub    DWORD PTR [ebx],ecx
  42e7a0:	mov    DWORD PTR [edx-0x5d],eax
  42e7a3:	jae    0x42e7dc
  42e7a5:	in     eax,dx
  42e7a6:	jnp    0x42e7e1
  42e7a8:	lods   al,BYTE PTR ds:[esi]
  42e7a9:	test   edi,edi
  42e7ab:	out    0x9a,al
  42e7ad:	pop    eax
  42e7ae:	add    al,0x5b
  42e7b0:	jno    0x42e82c
  42e7b2:	ja     0x42e772
  42e7b4:	fs or  edx,edi
  42e7b7:	call   FWORD PTR [ebx+0x40]
  42e7ba:	xchg   edx,eax
  42e7bb:	jle    0x42e790
  42e7bd:	pop    ds
  42e7be:	test   ebx,ebp
  42e7c0:	push   edi
  42e7c1:	ret    
  42e7c2:	std    
  42e7c3:	inc    DWORD PTR [ecx]
  42e7c5:	pop    esp
  42e7c6:	adc    eax,0xfd872620
  42e7cb:	xchg   BYTE PTR [esi-0x13874522],dl
  42e7d1:	add    eax,edi
  42e7d3:	push   ebx
  42e7d4:	xchg   edi,eax
  42e7d5:	imul   ebx,DWORD PTR [eax+ebp*4],0x2f276385
  42e7dc:	add    DWORD PTR [ebx+0x6b],ebp
  42e7df:	fbld   TBYTE PTR [eax]
  42e7e1:	loopne 0x42e7ca
  42e7e3:	add    edi,edi
  42e7e5:	push   0xffffffab
  42e7e7:	fbstp  TBYTE PTR [esi+ecx*1]
  42e7ea:	jmp    0x42e7fb
  42e7ec:	add    BYTE PTR [eax],al
  42e7ee:	out    dx,eax
  42e7ef:	into   
  42e7f0:	daa    
  42e7f1:	add    al,0xa8
  42e7f3:	scas   al,BYTE PTR es:[edi]
  42e7f4:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e7f6:	inc    ebp
  42e7f7:	xor    cl,BYTE PTR [eax+0x77]
  42e7fa:	lods   al,BYTE PTR ds:[esi]
  42e7fb:	add    cl,BYTE PTR [edx+eax*1]
  42e7fe:	das    
  42e7ff:	fmulp  st(7),st
  42e801:	(bad)  ds:0xe880babd
  42e807:	xor    bh,dl
  42e809:	jbe    0x42e7b7
  42e80b:	add    esp,ebp
  42e80d:	add    DWORD PTR [edi],ebp
  42e80f:	fidiv  WORD PTR [edi]
  42e811:	dec    ebp
  42e812:	mov    ds:0x5f13c421,al
  42e817:	(bad)  
  42e818:	sbb    eax,0x64bd03af
  42e81d:	les    edi,FWORD PTR [ebp+ebx*8+0x79]
  42e821:	or     BYTE PTR [esi+ecx*8-0x1b],0x3
  42e826:	das    
  42e827:	into   
  42e828:	sti    
  42e829:	clc    
  42e82a:	mov    bl,0x29
  42e82c:	(bad)  
  42e82d:	sti    
  42e82e:	shl    BYTE PTR [ebp+0x62],1
  42e831:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e832:	aad    0xc8
  42e834:	in     eax,dx
  42e835:	jbe    0x42e8a3
  42e837:	add    ah,al
  42e839:	push   ebx
  42e83a:	xlat   BYTE PTR ds:[ebx]
  42e83b:	loope  0x42e82a
  42e83d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e83e:	mov    ch,0x6a
  42e840:	imul   esp,eax,0x20
  42e843:	loopne 0x42e82c
  42e845:	add    edi,edi
  42e847:	adc    eax,DWORD PTR [ecx]
  42e849:	xor    BYTE PTR ss:[esi],ah
  42e84c:	adc    BYTE PTR [ecx-0x633f9cd4],ch
  42e852:	add    BYTE PTR [eax],al
  42e854:	repz push cs
  42e856:	cli    
  42e857:	hlt    
  42e858:	dec    eax
  42e859:	iret   
  42e85a:	inc    eax
  42e85b:	jmp    0xe9434684
  42e860:	sub    al,0x11
  42e862:	cli    
  42e863:	fcom   QWORD PTR [edx+ebp*8-0x470416c0]
  42e86a:	adc    ecx,DWORD PTR [ecx]
  42e86c:	cmp    al,0x1e
  42e86e:	add    DWORD PTR [ebx+esi*2+0x17],esp
  42e872:	or     bh,BYTE PTR [esp+ebp*2+0x16]
  42e876:	xchg   ah,al
  42e878:	icebp  
  42e879:	jl     0x42e8ce
  42e87b:	bound  ebx,QWORD PTR [eax-0x3fc8b1f3]
  42e881:	sub    ebp,edi
  42e883:	sbb    BYTE PTR ds:0xd3e966df,dl
  42e889:	xor    cl,BYTE PTR [ecx]
  42e88b:	pusha  
  42e88c:	popa   
  42e88d:	mov    edx,0x1a29ae50
  42e892:	adc    DWORD PTR [ecx],ebp
  42e894:	sub    esp,DWORD PTR [ecx-0x40]
  42e897:	adc    al,0x34
  42e899:	inc    esi
  42e89a:	or     ebx,ebp
  42e89c:	sub    al,0xde
  42e89e:	push   ecx
  42e89f:	pop    esp
  42e8a0:	cmp    esi,esp
  42e8a2:	push   eax
  42e8a3:	xchg   BYTE PTR [ecx-0x16],al
  42e8a6:	mov    esi,esp
  42e8a8:	nop
  42e8a9:	ret    
  42e8aa:	fsubr  st,st(1)
  42e8ac:	sub    al,0xde
  42e8ae:	test   DWORD PTR [ecx+0x327ebcb7],edx
  42e8b4:	mov    edi,DWORD PTR [esi+esi*8]
  42e8b7:	pop    esi
  42e8b8:	add    BYTE PTR [eax],al
  42e8ba:	sbb    BYTE PTR [esi],ch
  42e8bc:	repz sub ch,BYTE PTR ds:0x116a6631
  42e8c3:	out    0xff,al
  42e8c5:	push   DWORD PTR [edx-0x47]
  42e8c8:	jp     0x42e947
  42e8ca:	sahf   
  42e8cb:	fnsave [ebx+0x5f]
  42e8ce:	adc    esp,DWORD PTR [esi-0x606af88c]
  42e8d4:	pop    edi
  42e8d5:	mov    DWORD PTR [ecx+0x1dd14956],eax
  42e8db:	xor    al,0x3b
  42e8dd:	push   DWORD PTR [eax-0x79b8caa2]
  42e8e3:	or     al,0xfa
  42e8e5:	dec    edx
  42e8e6:	sbb    eax,0x523d40cf
  42e8eb:	loopne 0x42e8ed
  42e8ed:	add    ch,ah
  42e8ef:	ret    
  42e8f0:	sub    cl,cl
  42e8f2:	mov    al,0x38
  42e8f4:	push   es
  42e8f5:	inc    edi
  42e8f6:	fnstsw WORD PTR [ecx+0x7a]
  42e8f9:	clc    
  42e8fa:	push   esp
  42e8fb:	aad    0x2c
  42e8fd:	sbb    ebx,0xffffffe9
  42e900:	cli    
  42e901:	je     0x42e933
  42e903:	imul   eax
  42e905:	jg     0x42e94c
  42e907:	jge    0x42e8ff
  42e909:	mov    esp,esi
  42e90b:	fs out dx,eax
  42e90d:	je     0x42e916
  42e90f:	pop    es
  42e910:	add    eax,0x4ddf0601
  42e915:	push   esi
  42e916:	leave  
  42e917:	mov    ah,0xbd
  42e919:	adc    DWORD PTR [esi-0x1e],edx
  42e91c:	add    eax,0x0
  42e91f:	add    BYTE PTR [ebx],ah
  42e921:	jecxz  0x42e99c
  42e923:	retf   
  42e924:	test   eax,0xb1fe8f7
  42e929:	jge    0x42e921
  42e92b:	mov    edx,DWORD PTR [ebp-0x717d0576]
  42e931:	jle    0x42e98a
  42e933:	pop    ebx
  42e934:	(bad)  
  42e935:	mov    ds:0x6b930001,eax
  42e93a:	in     eax,0x51
  42e93c:	xchg   DWORD PTR [ebx+0x64],esp
  42e93f:	cld    
  42e940:	das    
  42e941:	lds    edx,FWORD PTR [eax+0x2b75b74c]
  42e947:	add    DWORD PTR [ebp-0x3b],eax
  42e94a:	sahf   
  42e94b:	je     0x42e984
  42e94d:	cs dec eax
  42e94f:	clc    
  42e950:	push   ebx
  42e952:	neg    DWORD PTR [ebx+0x3f]
  42e955:	test   ebp,edi
  42e957:	test   BYTE PTR [edi+0x59],ch
  42e95a:	cld    
  42e95b:	push   ecx
  42e95c:	adc    eax,0x834490c1
  42e961:	je     0x42e8f3
  42e963:	inc    esp
  42e964:	daa    
  42e965:	jne    0x42e905
  42e967:	je     0x42e98c
  42e969:	xor    bl,BYTE PTR [eax]
  42e96b:	clc    
  42e96c:	push   edi
  42e96d:	mov    edi,0x532ffffd
  42e972:	stos   BYTE PTR es:[edi],al
  42e973:	(bad)  
  42e974:	lods   eax,DWORD PTR ds:[esi]
  42e975:	cld    
  42e976:	popf   
  42e977:	jle    0x42e9d0
  42e979:	enter  0x518,0x6
  42e97d:	add    cl,BYTE PTR ds:0x29482b74
  42e983:	cld    
  42e984:	add    BYTE PTR [eax],al
  42e986:	das    
  42e987:	inc    eax
  42e988:	dec    ecx
  42e989:	cld    
  42e98a:	data16 xchg BYTE PTR ds:0xaa2c8200,al
  42e991:	push   edx
  42e992:	mov    dl,0xa
  42e994:	stc    
  42e995:	dec    edi
  42e996:	sbb    bl,dh
  42e998:	hlt    
  42e999:	jle    0x42e97b
  42e99b:	sbb    BYTE PTR [esi+0x4cd3b74],0xfb
  42e9a2:	jp     0x42e963
  42e9a4:	sahf   
  42e9a5:	xor    eax,edi
  42e9a7:	mov    dl,0x35
  42e9a9:	adc    BYTE PTR [edi-0x39],ch
  42e9ac:	sahf   
  42e9ad:	xor    DWORD PTR [edx+0x62440e87],esi
  42e9b3:	fwait
  42e9b4:	sahf   
  42e9b5:	adc    al,0x1b
  42e9b7:	xchg   edi,eax
  42e9b8:	cmp    eax,0x2adea400
  42e9bd:	inc    edx
  42e9be:	push   0xffffff9c
  42e9c0:	test   DWORD PTR [ebx],0x3443655a
  42e9c6:	push   0xa2362eed
  42e9cb:	sub    eax,DWORD PTR [esp+esi*1-0x8]
  42e9cf:	inc    ebx
  42e9d0:	out    0x36,al
  42e9d2:	lock or al,0x33
  42e9d5:	sbb    BYTE PTR [edi],ah
  42e9d7:	jbe    0x42e9c1
  42e9d9:	add    ebp,DWORD PTR [edi]
  42e9db:	pop    esi
  42e9dc:	mov    bh,0x8c
  42e9de:	repz mov ecx,0xce38f81a
  42e9e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e9e5:	add    esi,DWORD PTR [edx+0xe8949e]
  42e9eb:	add    BYTE PTR [ebp+0x33],dh
  42e9ee:	loopne 0x42e992
  42e9f0:	jecxz  0x42e9c3
  42e9f2:	cli    
  42e9f3:	pop    ss
  42e9f4:	aas    
  42e9f5:	or     eax,0xb92b17f3
  42e9fa:	je     0x42e99b
  42e9fc:	push   ebp
  42e9fd:	rol    DWORD PTR [edi-0xc],cl
  42ea00:	or     dh,bl
  42ea02:	les    edi,FWORD PTR fs:[ebx+0x340396db]
  42ea09:	xor    ecx,esp
  42ea0b:	mov    eax,ds:0x43d7fa1b
  42ea10:	das    
  42ea11:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  42ea13:	cmp    eax,0x3db9bf6
  42ea18:	and    BYTE PTR [ebp-0x45],0x85
  42ea1c:	add    al,0xea
  42ea1e:	dec    di
  42ea20:	pop    es
  42ea21:	mov    ecx,0xf2a83a36
  42ea26:	das    
  42ea27:	hlt    
  42ea28:	cmp    dh,bl
  42ea2a:	pop    esp
  42ea2b:	inc    edi
  42ea2c:	repz or eax,0xb979bcb7
  42ea32:	hlt    
  42ea33:	movzx  ebx,BYTE PTR [edx]
  42ea36:	add    DWORD PTR [ebp+0x22],esi
  42ea39:	mov    ch,0x73
  42ea3b:	loope  0x42e9cc
  42ea3d:	jmp    0x42ea38
  42ea3f:	aas    
  42ea40:	mov    al,0x78
  42ea42:	jae    0x42e9f6
  42ea44:	mov    bl,0x21
  42ea46:	std    
  42ea47:	adc    dh,dl
  42ea49:	xor    DWORD PTR [eax+eiz*2],eax
  42ea4c:	lock mov ch,0xe5
  42ea4f:	push   es
  42ea50:	add    BYTE PTR [eax],al
  42ea52:	mov    dl,0x78
  42ea54:	add    al,0x2
  42ea56:	push   0x2c
  42ea58:	cmp    DWORD PTR [ecx+0x71],eax
  42ea5b:	iret   
  42ea5c:	cli    
  42ea5d:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  42ea5f:	and    ebp,esi
  42ea61:	loop   0x42ead6
  42ea63:	sub    al,0x2d
  42ea65:	ins    BYTE PTR es:[edi],dx
  42ea66:	lock mov ecx,0x31cfb94f
  42ea6c:	or     eax,0x931cfba
  42ea71:	push   es
  42ea72:	xchg   BYTE PTR [ebx+0x316b64d2],dh
  42ea78:	adc    DWORD PTR [edx-0x10],esp
  42ea7b:	int    0x85
  42ea7d:	pushf  
  42ea7e:	mov    eax,0xf1720865
  42ea83:	mov    ecx,0xbfa32487
  42ea88:	or     dh,dl
  42ea8a:	and    DWORD PTR [edx-0x49cc5418],esi
  42ea90:	stc    
  42ea91:	mov    BYTE PTR [edi],0xb5
  42ea94:	adc    edi,ebp
  42ea96:	sbb    al,0xf8
  42ea98:	add    BYTE PTR [edx+0x71],ah
  42ea9b:	mov    dh,0x5a
  42ea9d:	adc    ah,ah
  42ea9f:	jns    0x42eaad
  42eaa1:	jmp    0x3a03f1e9
  42eaa6:	cmp    ecx,DWORD PTR [esi]
  42eaa8:	push   ecx
  42eaa9:	xchg   esi,eax
  42eaaa:	and    BYTE PTR [edx],al
  42eaac:	sbb    DWORD PTR [esi+0x13b4d6],ecx
  42eab2:	push   cs
  42eab3:	mov    dl,0x39
  42eab5:	add    BYTE PTR [eax],al
  42eab7:	add    BYTE PTR [ecx-0x6b],ah
  42eaba:	sbb    al,0x59
  42eabd:	jp     0x42ead2
  42eabf:	fild   DWORD PTR [eax-0x5e]
  42eac2:	not    BYTE PTR ds:0x39b212
  42eac8:	cmp    al,0xa2
  42eaca:	push   edx
  42eacb:	ret    0xdbca
  42eace:	dec    esi
  42eacf:	mov    edx,DWORD PTR [edi-0x5a]
  42ead2:	(bad)  
  42ead3:	out    dx,eax
  42ead4:	and    BYTE PTR [ebx],bl
  42ead6:	add    eax,ebp
  42ead8:	cmp    eax,0x58fff5db
  42eadd:	pop    ds
  42eade:	and    eax,0xfecf8708
  42eae3:	push   ebp
  42eae4:	push   ds
  42eae5:	or     BYTE PTR [edx],dl
  42eae7:	(bad)  
  42eae8:	and    DWORD PTR [edx-0x41],ebp
  42eaeb:	pop    esi
  42eaec:	inc    esp
  42eaed:	fild   WORD PTR [eax]
  42eaef:	push   ebp
  42eaf0:	or     eax,0x62ec8087
  42eaf5:	fadd   QWORD PTR [eax]
  42eaf7:	add    ch,al
  42eaf9:	cmc    
  42eafa:	dec    ebp
  42eafb:	mov    ebx,DWORD PTR [esi+0x5b]
  42eafe:	imul   BYTE PTR [ecx+esi*2]
  42eb01:	popa   
  42eb02:	xchg   esp,eax
  42eb03:	add    BYTE PTR [esi-0x25],dl
  42eb06:	jg     0x42eb07
  42eb08:	(bad)  
  42eb09:	in     al,0x0
  42eb0b:	add    BYTE PTR [ecx+0x68],dl
  42eb0e:	mov    BYTE PTR [eax],al
  42eb10:	inc    esi
  42eb11:	fild   DWORD PTR [ecx-0x2d99e1a3]
  42eb17:	je     0x42eb2c
  42eb19:	call   0x42eecb
  42eb1e:	test   DWORD PTR [edx-0x5],ebx
  42eb21:	jae    0x42eb2e
  42eb23:	pop    esp
  42eb24:	icebp  
  42eb25:	pop    ss
  42eb26:	sub    edx,ebp
  42eb28:	xor    DWORD PTR [ebp+0x12],0x2ff884a0
  42eb2f:	dec    edi
  42eb30:	cdq    
  42eb31:	cli    
  42eb32:	sub    eax,ebp
  42eb34:	std    
  42eb35:	push   DWORD PTR [edx-0x4bf4e7a1]
  42eb3b:	dec    edi
  42eb3c:	test   ecx,ecx
  42eb3e:	stos   BYTE PTR es:[edi],al
  42eb3f:	dec    ecx
  42eb40:	popf   
  42eb41:	stc    
  42eb42:	rol    BYTE PTR [edi-0x53],1
  42eb45:	ins    BYTE PTR es:[edi],dx
  42eb46:	push   esi
  42eb47:	inc    eax
  42eb48:	call   0x2850:0x11c5017f
  42eb4f:	push   edi
  42eb50:	inc    edx
  42eb51:	(bad)  
  42eb52:	mov    ds:0x7736b157,eax
  42eb57:	jb     0x42eba1
  42eb59:	push   0xfffdc477
  42eb5e:	xchg   esi,edx
  42eb60:	idiv   cl
  42eb62:	nop
  42eb63:	cmp    edx,DWORD PTR [ebp-0x11a77e7c]
  42eb69:	out    0xdf,eax
  42eb6b:	les    ebx,FWORD PTR [edx-0x3dfac306]
  42eb71:	add    DWORD PTR [edi+0x16],edi
  42eb74:	inc    ebp
  42eb75:	add    cl,dl
  42eb77:	sub    eax,0xc2544843
  42eb7c:	into   
  42eb7d:	icebp  
  42eb7e:	mov    dl,0xb6
  42eb80:	adc    DWORD PTR [eax+eax*1],ebx
  42eb83:	add    al,bh
  42eb85:	(bad)  
  42eb86:	sbb    BYTE PTR [ecx+edx*8],cl
  42eb89:	sub    eax,0xfc57141c
  42eb8e:	cmc    
  42eb8f:	stc    
  42eb90:	cmp    BYTE PTR ds:0x84aa1044,bh
  42eb96:	sbb    BYTE PTR [ecx],dl
  42eb98:	mov    ah,0xc5
  42eb9a:	daa    
  42eb9b:	add    DWORD PTR [ebp+eax*4-0x78a3f066],esi
  42eba2:	cmp    bl,BYTE PTR [edx+0x74]
  42eba5:	jle    0x42eb66
  42eba7:	pop    es
  42eba8:	das    
  42eba9:	fisubr WORD PTR [esi-0x20]
  42ebac:	je     0x42eb7a
  42ebae:	daa    
  42ebaf:	add    al,0xb2
  42ebb1:	cdq    
  42ebb2:	sbb    esp,esi
  42ebb4:	mov    BYTE PTR [esi-0x19],bl
  42ebb7:	add    ebp,DWORD PTR [edi]
  42ebb9:	arpl   WORD PTR [ecx],sp
  42ebbb:	dec    esp
  42ebbc:	dec    ecx
  42ebbd:	ficom  WORD PTR [esi]
  42ebbf:	lahf   
  42ebc0:	inc    ebx
  42ebc1:	push   cs
  42ebc2:	fiadd  DWORD PTR [ebx+0x2f]
  42ebc5:	imul   esp,DWORD PTR [esp+ecx*1],0xabf39a48
  42ebcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ebcd:	xchg   ecx,eax
  42ebce:	pop    ecx
  42ebcf:	sahf   
  42ebd0:	push   0x600bdcb5
  42ebd5:	mov    ch,0x32
  42ebd7:	sub    BYTE PTR [edx+eiz*8-0x33],0xef
  42ebdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ebdd:	sub    ebp,esp
  42ebdf:	nop
  42ebe0:	out    dx,al
  42ebe1:	retf   
  42ebe2:	xchg   edi,eax
  42ebe3:	sahf   
  42ebe4:	jge    0x42ec47
  42ebe6:	and    ecx,DWORD PTR [edi]
  42ebe8:	add    BYTE PTR [eax],al
  42ebea:	mov    al,0x9c
  42ebec:	push   cs
  42ebed:	push   esi
  42ebee:	icebp  
  42ebef:	or     dh,BYTE PTR [edx+0x12aeb036]
  42ebf5:	adc    eax,0xab10691f
  42ebfa:	or     al,bl
  42ebfc:	add    DWORD PTR [esi-0x7527e257],ebx
  42ec02:	or     esp,DWORD PTR [edx]
  42ec04:	fiadd  DWORD PTR [ebx+0x2f]
  42ec07:	addr16 mov eax,ds:0xcef3
  42ec0b:	push   0x66cef82a
  42ec10:	and    eax,edi
  42ec12:	mov    ecx,0x3f83c
  42ec17:	sahf   
  42ec18:	aas    
  42ec19:	test   BYTE PTR [eax],ch
  42ec1b:	mov    ch,0xe7
  42ec1d:	and    eax,0x8ed41cb6
  42ec22:	jne    0x42ec4a
  42ec24:	add    DWORD PTR [ecx+ebp*2+0x26],esp
  42ec28:	dec    esi
  42ec29:	sbb    DWORD PTR [edx+0x55a92d89],ebp
  42ec2f:	add    ah,BYTE PTR [ebx+0x70]
  42ec32:	cs mov ecx,0x9eaff972
  42ec38:	adc    dh,BYTE PTR [edi]
  42ec3a:	retf   0x6689
  42ec3d:	aad    0x16
  42ec3f:	fidivr WORD PTR [ebp-0x5a]
  42ec42:	loope  0x42ec53
  42ec44:	cli    
  42ec45:	fcomp  QWORD PTR [eax+edx*8]
  42ec48:	inc    eax
  42ec49:	jmp    0xc6678cfd
  42ec4e:	add    BYTE PTR [eax],al
  42ec50:	add    dl,BYTE PTR [ebx]
  42ec52:	push   esi
  42ec53:	sub    al,BYTE PTR [ecx]
  42ec55:	pop    ebp
  42ec56:	xor    edx,ebp
  42ec58:	mov    eax,0x56b600f4
  42ec5d:	(bad)  
  42ec5f:	mov    ebp,0xdbe5d088
  42ec64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ec65:	adc    BYTE PTR ds:0xe8a7a7e5,ah
  42ec6b:	mov    eax,0x6df9b920
  42ec70:	imul   esi,DWORD PTR [eax],0x6
  42ec73:	xchg   ebx,eax
  42ec74:	das    
  42ec75:	adc    edx,edi
  42ec77:	aas    
  42ec78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ec79:	lods   al,BYTE PTR ds:[esi]
  42ec7a:	or     DWORD PTR [esi],0x40
  42ec7d:	rcr    BYTE PTR [ecx-0x59],0x6e
  42ec81:	fadd   QWORD PTR [eax]
  42ec83:	xchg   esp,eax
  42ec84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ec85:	enter  0xd7d,0xb3
  42ec89:	xor    ebp,ebp
  42ec8b:	aad    0xff
  42ec8d:	rsqrtps xmm4,xmm6
  42ec90:	sbb    edx,esp
  42ec92:	test   ebx,ebx
  42ec94:	fwait
  42ec95:	sub    DWORD PTR [ecx],ecx
  42ec97:	pusha  
  42ec98:	sbb    dl,bh
  42ec9a:	and    al,0x60
  42ec9c:	js     0x42ec98
  42ec9e:	sbb    BYTE PTR [eax],al
  42eca0:	jmp    0x46575a51
  42eca5:	fiadd  DWORD PTR [ecx+0x67683d8]
  42ecab:	test   BYTE PTR [ebp-0x6ffff21],cl
  42ecb1:	or     cl,BYTE PTR [ebp+0x8]
  42ecb4:	add    BYTE PTR [eax],al
  42ecb6:	mov    ebx,DWORD PTR [ebx]
  42ecb8:	and    eax,0x6d513618
  42ecbd:	and    al,0xe2
  42ecbf:	loop   0x42ec6e
  42ecc1:	inc    ebp
  42ecc2:	fiadd  DWORD PTR ds:0xafa6c0fb
  42ecc8:	add    al,cl
  42ecca:	or     BYTE PTR ss:[ecx],al
  42eccd:	push   0xdf52
  42ecd2:	test   DWORD PTR [edx+0x14],edx
  42ecd5:	call   0x85440c9c
  42ecda:	push   es
  42ecdb:	int3   
  42ecdc:	add    al,0x33
  42ecde:	pop    ebp
  42ecdf:	xchg   BYTE PTR [ebp-0x75],dl
  42ece2:	sar    BYTE PTR [ebx+0x51ee8311],cl
  42ece8:	je     0x42ed37
  42ecea:	or     eax,0xd614cd8c
  42ecef:	fbld   TBYTE PTR [edx-0x10]
  42ecf2:	lds    ebp,FWORD PTR [eax+0x55]
  42ecf5:	and    al,0x7a
  42ecf7:	push   edx
  42ecf8:	iret   
  42ecf9:	mov    ebx,DWORD PTR [ebx-0x29]
  42ecfc:	adc    al,0x40
  42ecfe:	push   esi
  42ecff:	in     al,0x0
  42ed01:	add    BYTE PTR [esi-0x19],dl
  42ed04:	push   eax
  42ed05:	push   0x56
  42ed07:	add    esi,esi
  42ed09:	xlat   BYTE PTR ds:[ebx]
  42ed0a:	pop    ecx
  42ed0b:	leave  
  42ed0c:	or     al,0x8b
  42ed0e:	mov    ds:0xe3ff19bb,al
  42ed13:	loope  0x42ec96
  42ed15:	dec    esp
  42ed16:	xor    dh,BYTE PTR [edx+0x69e1]
  42ed1c:	das    
  42ed1d:	mov    WORD PTR [ebp-0x6a6a6a06],ss
  42ed23:	jae    0x42ed70
  42ed25:	mov    ebp,0x4b18d78a
  42ed2a:	(bad)  
  42ed2c:	adc    BYTE PTR [ebp+ecx*4+0x4f],ch
  42ed30:	xchg   ebp,eax
  42ed31:	jne    0x42ecc8
  42ed33:	jae    0x42ed80
  42ed35:	fst    DWORD PTR [ebp-0x7f44fb2e]
  42ed3b:	icebp  
  42ed3c:	jnp    0x42ed05
  42ed3e:	mov    WORD PTR [ecx],es
  42ed40:	mov    BYTE PTR [ebx],al
  42ed42:	mov    bh,BYTE PTR [esi+0x5ca03084]
  42ed48:	in     eax,dx
  42ed49:	lods   al,BYTE PTR ds:[esi]
  42ed4a:	std    
  42ed4b:	push   esp
  42ed4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ed4d:	pop    eax
  42ed4e:	xor    edx,DWORD PTR [ecx+0x60]
  42ed51:	fisttp WORD PTR [ebx]
  42ed53:	lea    eax,[edx+0x3d]
  42ed56:	cmp    eax,0x9711bfe8
  42ed5b:	cli    
  42ed5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ed5d:	jns    0x42ed64
  42ed5f:	xchg   DWORD PTR [eax+0x74],esi
  42ed62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ed63:	arpl   WORD PTR [eax+0x6f84961b],bx
  42ed69:	imul   edi,esi,0x4eb90b7
  42ed6f:	add    BYTE PTR [edi+eiz*8+0x79b2062a],dl
  42ed76:	xchg   ebp,eax
  42ed77:	push   edi
  42ed78:	xchg   DWORD PTR [ebx],eax
  42ed7a:	cwde   
  42ed7b:	stc    
  42ed7c:	jo     0x42edbd
  42ed7e:	dec    eax
  42ed7f:	or     BYTE PTR [eax],al
  42ed81:	add    BYTE PTR [ebx+edi*8-0x4c1317cc],dh
  42ed88:	xchg   esi,eax
  42ed89:	cli    
  42ed8a:	mov    dl,0x4
  42ed8c:	adc    BYTE PTR [ebx],al
  42ed8e:	xchg   edi,eax
  42ed8f:	stos   BYTE PTR es:[edi],al
  42ed90:	xchg   esi,eax
  42ed91:	dec    DWORD PTR [eax-0x21]
  42ed94:	add    ch,BYTE PTR [edi]
  42ed96:	outs   dx,DWORD PTR ds:[esi]
  42ed97:	fld    QWORD PTR [edx-0x33]
  42ed9a:	jp     0x42ed75
  42ed9c:	out    0x30,eax
  42ed9e:	test   al,0xc1
  42eda0:	cmp    eax,0x36de92de
  42eda5:	fwait
  42eda6:	cmp    ecx,DWORD PTR [esi]
  42eda8:	fiadd  DWORD PTR [ebx+0x2f]
  42edab:	gs adc al,0x8
  42edae:	nop
  42edaf:	call   0x1e:0x63592de3
  42edb6:	pop    esi
  42edb7:	(bad)  
  42edb8:	xor    edi,ecx
  42edba:	div    BYTE PTR [ecx-0x33873c9c]
  42edc0:	ins    BYTE PTR es:[edi],dx
  42edc1:	mov    ch,0x63
  42edc3:	fisttp DWORD PTR [ebp-0x5]
  42edc6:	pop    ebx
  42edc7:	push   ds
  42edc8:	call   0x18256155
  42edcd:	lods   al,BYTE PTR ds:[esi]
  42edce:	js     0x42ed75
  42edd0:	jno    0x42ed6c
  42edd2:	mov    bl,0xa8
  42edd4:	repz test BYTE PTR [eax-0x10],0xd
  42edd9:	adc    DWORD PTR ds:0x2f04d95e,esp
  42eddf:	sub    esp,eax
  42ede1:	(bad)  
  42ede2:	call   0x894f1f
  42ede7:	add    BYTE PTR [ebp-0x3b],bl
  42edea:	std    
  42edeb:	mov    BYTE PTR [ecx-0x18],bl
  42edee:	fs xchg ecx,eax
  42edf0:	sbb    al,0x0
  42edf2:	pop    esi
  42edf3:	or     DWORD PTR [ebx+0xebb3a7],esi
  42edf9:	mov    bh,0xd7
  42edfb:	adc    BYTE PTR ds:0xaf04a964,bl
  42ee01:	mov    bh,0x8f
  42ee03:	rdmsr  
  42ee05:	pop    esi
  42ee06:	adc    BYTE PTR [ebx],bh
  42ee08:	(bad)  
  42ee0a:	outs   dx,BYTE PTR ds:[esi]
  42ee0b:	leave  
  42ee0c:	push   eax
  42ee0d:	dec    edx
  42ee0e:	out    dx,eax
  42ee0f:	add    ebp,DWORD PTR [edi]
  42ee11:	lds    eax,FWORD PTR [eax]
  42ee13:	(bad)  
  42ee15:	pop    eax
  42ee16:	clc    
  42ee17:	bound  edi,QWORD PTR [esi-0x47]
  42ee1a:	sbb    eax,esi
  42ee1c:	sub    al,0xde
  42ee1e:	pop    ecx
  42ee1f:	shl    BYTE PTR [eax],cl
  42ee21:	add    al,cl
  42ee23:	dec    edi
  42ee24:	mov    ah,0xd8
  42ee26:	test   DWORD PTR [ebx+esi*1],esp
  42ee29:	pop    ebx
  42ee2a:	sar    BYTE PTR ds:0x13385e26,0x20
  42ee31:	fadd   DWORD PTR [eax+0x73de2c31]
  42ee37:	in     eax,0xdb
  42ee39:	jo     0x42ee20
  42ee3b:	out    dx,eax
  42ee3c:	cmp    al,0xc6
  42ee3e:	or     DWORD PTR [esi+0x6062b396],ebx
  42ee44:	jb     0x42ee3c
  42ee46:	pop    ebx
  42ee47:	stos   DWORD PTR es:[edi],eax
  42ee48:	xor    ebx,esi
  42ee4a:	push   ebx
  42ee4b:	jb     0x42ee4d
  42ee4d:	add    BYTE PTR [edi-0x537e1ad1],al
  42ee53:	les    eax,FWORD PTR [ebp+ebp*8+0x624dde2c]
  42ee5a:	clc    
  42ee5b:	in     eax,0x85
  42ee5d:	jmp    0x30fe:0xad486d27
  42ee64:	retf   
  42ee65:	push   esi
  42ee66:	or     DWORD PTR [ecx+edi*8-0x77f2d317],esi
  42ee6d:	mov    ebp,0xb587cc78
  42ee72:	jo     0x42ee54
  42ee74:	(bad)  
  42ee76:	jp     0x42eea4
  42ee78:	inc    esp
  42ee79:	mov    ds:0x9dc6e94e,eax
  42ee7e:	push   edi
  42ee7f:	cmp    bh,bh
  42ee81:	mov    edi,0xcd4c674e
  42ee86:	fs jecxz 0x42ee3b
  42ee89:	mov    eax,ds:0x863be9
  42ee8e:	xchg   BYTE PTR [eax],bl
  42ee90:	pop    edi
  42ee91:	shl    DWORD PTR [esi],0xe2
  42ee94:	pop    esi
  42ee95:	or     ecx,DWORD PTR [esi]
  42ee97:	pop    ecx
  42ee98:	jne    0x42eebe
  42ee9a:	pop    esi
  42ee9b:	inc    BYTE PTR [edi-0x414fd5b4]
  42eea1:	inc    esp
  42eea2:	sub    dh,BYTE PTR [esi-0x22e9ff8a]
  42eea8:	call   0xf68bde1e
  42eead:	mov    DWORD PTR [edx-0x42],ecx
  42eeb0:	or     eax,0xc800003b
  42eeb5:	out    0x84,al
  42eeb7:	inc    ebx
  42eeb8:	adc    al,0xdc
  42eeba:	add    BYTE PTR [eax-0x12],dl
  42eebd:	icebp  
  42eebe:	into   
  42eebf:	(bad)  
  42eec0:	shl    DWORD PTR [edx-0x6],1
  42eec3:	mov    WORD PTR [esi],?
  42eec5:	mov    dl,0x5f
  42eec7:	mov    edx,DWORD PTR [esi]
  42eec9:	and    BYTE PTR [eax-0x18],dl
  42eecc:	addr16 test ah,bh
  42eecf:	call   FWORD PTR [edi-0x11]
  42eed2:	and    al,0x10
  42eed4:	in     eax,dx
  42eed5:	popf   
  42eed6:	push   es
  42eed7:	test   ah,dh
  42eed9:	fld    DWORD PTR [eax]
  42eedb:	add    BYTE PTR [esi],ah
  42eedd:	cmp    BYTE PTR [eax],0xd6
  42eee0:	push   eax
  42eee1:	push   esi
  42eee2:	div    BYTE PTR [edx+ebp*1-0x56]
  42eee6:	loope  0x42eed6
  42eee8:	imul   edx,DWORD PTR [ebp-0xa],0xffffff8b
  42eeec:	xchg   ebp,eax
  42eeed:	dec    ebp
  42eeee:	stc    
  42eeef:	add    dl,bl
  42eef1:	mov    al,0x7a
  42eef3:	ror    BYTE PTR [edx+0x5632fb82],0x58
  42eefa:	inc    edx
  42eefb:	add    al,0xa7
  42eefd:	jmp    0x42eef4
  42eeff:	je     0x42ef6b
  42ef01:	mov    bl,0xa9
  42ef03:	add    ebx,DWORD PTR [edi+ebp*4-0x37d017a9]
  42ef0a:	mov    ebx,0xbe3960f9
  42ef0f:	or     dh,BYTE PTR [ebx+0x2ffffecb]
  42ef15:	sub    al,0x5
  42ef17:	or     eax,DWORD PTR [eax]
  42ef19:	add    BYTE PTR [eax+0x412d4185],al
  42ef1f:	sar    dh,0xff
  42ef22:	ret    
  42ef23:	sbb    al,0x4d
  42ef25:	je     0x42ef44
  42ef27:	nop
  42ef28:	adc    BYTE PTR [ebx+eax*2],ah
  42ef2b:	cmp    al,0x39
  42ef2d:	and    al,0x3b
  42ef2f:	popf   
  42ef30:	inc    esi
  42ef31:	out    0x1a,al
  42ef33:	cwde   
  42ef34:	stos   DWORD PTR es:[edi],eax
  42ef35:	les    ebp,FWORD PTR [esi]
  42ef37:	(bad)  
  42ef3a:	and    ecx,0xfffffff4
  42ef3d:	gs das 
  42ef3f:	sbb    eax,DWORD PTR [ecx*4+0x4feaa173]
  42ef46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ef47:	dec    esi
  42ef48:	lods   al,BYTE PTR ds:[esi]
  42ef49:	cmc    
  42ef4a:	ror    BYTE PTR [ecx-0x6f],1
  42ef4d:	sub    edi,0xffffffc8
  42ef50:	clc    
  42ef51:	jg     0x42efae
  42ef53:	mov    eax,ds:0xad5a0502
  42ef58:	sub    ebp,eax
  42ef5a:	mov    edx,0xd4fa91e9
  42ef5f:	xchg   ecx,eax
  42ef60:	jge    0x42efdd
  42ef62:	adc    ebp,DWORD PTR [eax+0x672974f9]
  42ef68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ef69:	aad    0x71
  42ef6b:	pop    es
  42ef6c:	xchg   edx,eax
  42ef6d:	out    0xdc,eax
  42ef6f:	sbb    ebx,DWORD PTR [eax-0x26975306]
  42ef75:	seto   BYTE PTR ds:0xc52f0080
  42ef7c:	daa    
  42ef7d:	add    DWORD PTR [eax],eax
  42ef7f:	add    BYTE PTR [eax-0x10eeee77],al
  42ef85:	fucom  st(7)
  42ef87:	xor    esi,DWORD PTR [eax+ecx*8+0x6f]
  42ef8b:	repnz sub dh,bl
  42ef8e:	jge    0x42ef93
  42ef90:	mov    dl,0x59
  42ef92:	ret    
  42ef93:	outs   dx,DWORD PTR ds:[esi]
  42ef94:	pop    eax
  42ef95:	scas   al,BYTE PTR es:[edi]
  42ef96:	out    0x33,eax
  42ef98:	(bad)  
  42ef99:	pusha  
  42ef9a:	mov    al,0xce
  42ef9c:	pop    ss
  42ef9d:	(bad)  
  42ef9e:	and    dh,bh
  42efa0:	inc    esi
  42efa1:	scas   al,BYTE PTR es:[edi]
  42efa2:	pop    esp
  42efa3:	or     BYTE PTR [esi+ecx*2],0xe7
  42efa7:	add    ebp,DWORD PTR [edi]
  42efa9:	push   cs
  42efaa:	rcl    BYTE PTR [eax+0x32],1
  42efad:	lods   al,BYTE PTR ds:[esi]
  42efae:	sar    BYTE PTR [edi-0x20],cl
  42efb1:	frstor [ebx+0x48]
  42efb4:	cs fsubrp st(7),st
  42efb7:	sub    DWORD PTR [esi],ebp
  42efb9:	pop    ebx
  42efba:	pop    ebx
  42efbb:	fild   WORD PTR [edi+ebx*8]
  42efbe:	out    0x3,eax
  42efc0:	pop    ss
  42efc1:	shr    DWORD PTR [eax-0x6a],cl
  42efc4:	cmc    
  42efc5:	bound  esp,QWORD PTR [edi-0x16fb54fa]
  42efcb:	add    ebp,DWORD PTR [edi]
  42efcd:	lods   eax,DWORD PTR ds:[esi]
  42efce:	cld    
  42efcf:	fistp  QWORD PTR [esi+ebx*1]
  42efd2:	call   0x5d208857
  42efd7:	aas    
  42efd8:	or     ebx,ebp
  42efda:	mov    dh,0xba
  42efdc:	add    BYTE PTR [edx],cl
  42efde:	int3   
  42efdf:	push   es
  42efe0:	xor    al,0x63
  42efe2:	push   eax
  42efe3:	add    eax,DWORD PTR [eax]
  42efe5:	add    BYTE PTR [edi],ch
  42efe7:	fmulp  st(5),st
  42efe9:	cpuid  
  42efeb:	xor    al,BYTE PTR [eax+ebp*8]
  42efee:	add    BYTE PTR [esi-0x52596578],dh
  42eff4:	pop    esp
  42eff5:	jg     0x42f043
  42eff7:	push   esi
  42eff8:	in     eax,0x3
  42effa:	das    
  42effb:	push   cs
  42effc:	into   
  42effd:	call   DWORD PTR [eax-0x58bafecb]
  42f003:	test   al,0x84
  42f005:	sub    DWORD PTR [eax],ebp
  42f007:	xor    al,0x86
  42f009:	das    
  42f00a:	cmp    al,0x5b
  42f00c:	test   ch,al
  42f00e:	mov    al,0xab
  42f010:	stc    
  42f011:	jmp    0x682bfe32
  42f016:	xchg   DWORD PTR [edx+0x316c6cf9],ebp
  42f01c:	fs xchg ebx,eax
  42f01e:	or     BYTE PTR [eax],cl
  42f020:	push   ebx
  42f021:	add    BYTE PTR fs:[edx],al
  42f024:	dec    ebp
  42f025:	call   0xed41:0x3913a8fc
  42f02c:	add    BYTE PTR [edx-0x11],ch
  42f02f:	fmul   DWORD PTR [ebx+0x5d0f6d]
  42f035:	jmp    0xd874766
  42f03a:	pop    ebx
  42f03b:	pop    ebx
  42f03c:	inc    esp
  42f03d:	add    eax,0x2d8c1d0b
  42f042:	nop    DWORD PTR [ecx+0x1a]
  42f046:	ds pop ebx
  42f048:	test   ch,cl
  42f04a:	add    BYTE PTR [eax],al
  42f04c:	je     0x42eff9
  42f04e:	stc    
  42f04f:	jmp    0xcdb74770
  42f054:	sbb    BYTE PTR [esi-0x21d30629],dh
  42f05a:	sub    DWORD PTR [ecx+0x7169003f],0xffffffbe
  42f061:	lods   al,BYTE PTR ds:[esi]
  42f062:	stc    
  42f063:	jbe    0x42f084
  42f065:	add    bl,BYTE PTR ds:0xe9cc86e
  42f06b:	test   eax,0x574a92c
  42f070:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f071:	arpl   WORD PTR [ebx],si
  42f073:	sub    DWORD PTR [ebp-0x36b1ff14],ebx
  42f079:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f07a:	je     0x42f07c
  42f07c:	and    ch,BYTE PTR [edx+0x1e50d6f6]
  42f082:	and    eax,0x49ed970f
  42f087:	push   ebx
  42f088:	outs   dx,BYTE PTR ds:[esi]
  42f089:	fst    QWORD PTR [eax]
  42f08b:	add    BYTE PTR [esi+0x62641451],al
  42f091:	and    BYTE PTR [ecx],al
  42f093:	cmp    BYTE PTR [edx-0x3cfef974],0xf1
  42f09a:	cmc    
  42f09b:	mov    ah,0x62
  42f09d:	call   0x6399f09c
  42f0a2:	jge    0x42f0c8
  42f0a4:	cmp    ah,al
  42f0a6:	add    BYTE PTR [eax],al
  42f0a8:	dec    ecx
  42f0a9:	sbb    al,0x1e
  42f0ab:	cld    
  42f0ac:	inc    esi
  42f0ad:	loopne 0x42f0af
  42f0af:	mov    DWORD PTR [eax],eax
  42f0b1:	add    BYTE PTR [edx-0x42],dl
  42f0b4:	sub    DWORD PTR [ebp+0x5029be52],ecx
  42f0ba:	jmp    0xc15f159a
  42f0bf:	jmp    0x42f0e5
  42f0c1:	cmp    al,0x24
  42f0c3:	push   ds
  42f0c4:	cmp    eax,DWORD PTR [eax]
  42f0c6:	shr    ebx,1
  42f0c8:	and    al,0x40
  42f0ca:	and    ebx,DWORD PTR [esi]
  42f0cc:	cmp    eax,DWORD PTR [eax]
  42f0ce:	shr    ebx,0x24
  42f0d1:	inc    esp
  42f0d2:	outs   dx,BYTE PTR ds:[esi]
  42f0d3:	push   ds
  42f0d4:	cmp    eax,DWORD PTR [eax]
  42f0d6:	xchg   ecx,eax
  42f0d7:	jmp    0x42f0fd
  42f0d9:	dec    eax
  42f0da:	sub    bl,BYTE PTR [esi]
  42f0dc:	cmp    eax,DWORD PTR [eax]
  42f0de:	sub    ebx,0xeb954c24
  42f0e4:	cmp    al,BYTE PTR [eax]
  42f0e6:	xchg   ecx,eax
  42f0e7:	jmp    0x42f10d
  42f0e9:	push   eax
  42f0ea:	ds jmp 0x42f127
  42f0ed:	add    BYTE PTR [ecx],al
  42f0ef:	jmp    0x42f115
  42f0f1:	push   esp
  42f0f2:	in     al,0xeb
  42f0f4:	cmp    al,BYTE PTR [eax]
  42f0f6:	das    
  42f0f7:	sbb    eax,0x1c9964cc
  42f0fc:	sub    BYTE PTR [ecx],al
  42f0fe:	mov    ds:0x2ffbda39,al
  42f103:	mov    ch,0xfd
  42f105:	out    0xdf,eax
  42f107:	ss xchg ebp,eax
  42f109:	cli    
  42f10a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f10b:	pop    edx
  42f10c:	add    eax,0xed98fb87
  42f111:	out    0x44,eax
  42f113:	iret   
  42f114:	xchg   edx,eax
  42f115:	cli    
  42f116:	add    BYTE PTR [eax],al
  42f118:	mov    ah,0x49
  42f11a:	fst    DWORD PTR [ebx]
  42f11c:	inc    edi
  42f11d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f11e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f11f:	cld    
  42f120:	push   eax
  42f121:	dec    eax
  42f122:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f123:	pop    ebx
  42f124:	and    ch,BYTE PTR [ebx+0x67e15a8d]
  42f12a:	mov    ebp,0x32e2a456
  42f12f:	mov    esi,0x8738b52b
  42f134:	sbb    esi,DWORD PTR [esi]
  42f136:	mov    eax,ds:0xfdb52d37
  42f13b:	dec    esi
  42f13c:	or     DWORD PTR [edx],0xf607b818
  42f142:	fwait
  42f143:	cli    
  42f144:	or     BYTE PTR [eax],dh
  42f146:	xor    BYTE PTR [eax],cl
  42f148:	mov    DWORD PTR [eax],edi
  42f14a:	or     cl,BYTE PTR [edi+ebp*1-0x7d]
  42f14e:	inc    edi
  42f14f:	sti    
  42f150:	das    
  42f151:	mov    ah,0x81
  42f153:	mov    DWORD PTR [esi],ebp
  42f155:	mov    ch,0xfd
  42f157:	mov    WORD PTR [ebp+ebp*4+0x7c],gs
  42f15b:	inc    esp
  42f15c:	(bad)  
  42f15d:	repz lea esi,[edi+eax*8-0x26]
  42f162:	jns    0x42f1a2
  42f164:	jne    0x42f1b3
  42f166:	cld    
  42f167:	loop   0x42f12b
  42f169:	xor    edi,DWORD PTR [edx-0x9]
  42f16c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f16d:	mov    ecx,0xddb07e85
  42f172:	bound  ebx,QWORD PTR [ecx]
  42f174:	push   ebx
  42f175:	mov    ah,0xe6
  42f177:	add    al,0x34
  42f179:	(bad)  
  42f17a:	retf   0x4
  42f17d:	add    BYTE PTR [edi],ch
  42f17f:	fidivr WORD PTR [edi-0x1821de85]
  42f185:	xchg   edx,eax
  42f186:	inc    ebx
  42f187:	ficomp DWORD PTR [edi+eax*2]
  42f18a:	das    
  42f18b:	stos   DWORD PTR es:[edi],eax
  42f18c:	fdiv   QWORD PTR [ebx-0x2f17e1d6]
  42f192:	jb     0x42f171
  42f194:	out    0x3,eax
  42f196:	push   esi
  42f197:	sbb    al,0xe9
  42f199:	add    ebp,DWORD PTR [edi]
  42f19b:	adc    eax,DWORD PTR [eax]
  42f19d:	sub    BYTE PTR [ecx-0x55],0xa
  42f1a1:	cmp    eax,DWORD PTR [edi+0x23]
  42f1a4:	pop    ss
  42f1a5:	xchg   edx,eax
  42f1a6:	inc    ebp
  42f1a7:	pop    eax
  42f1a8:	xor    al,0xbc
  42f1aa:	inc    ebx
  42f1ab:	stos   BYTE PTR es:[edi],al
  42f1ac:	repnz fwait
  42f1ae:	inc    ebx
  42f1af:	inc    edi
  42f1b0:	jmp    0x2590:0xb360a392
  42f1b7:	stos   BYTE PTR es:[edi],al
  42f1b8:	aaa    
  42f1b9:	sbb    DWORD PTR [ebx+0x15bb668a],0x15069db7
  42f1c3:	stos   BYTE PTR es:[edi],al
  42f1c4:	outs   dx,DWORD PTR ds:[esi]
  42f1c5:	dec    eax
  42f1c6:	add    eax,0x4917a763
  42f1cb:	push   ebp
  42f1cc:	out    0x92,al
  42f1ce:	or     DWORD PTR [edx+0x30b185e],0xffffffe9
  42f1d5:	add    bl,BYTE PTR [ebp+0x39ab929e]
  42f1db:	sahf   
  42f1dc:	fs ds xor edi,ebp
  42f1e0:	test   al,0x33
  42f1e2:	add    BYTE PTR [eax],al
  42f1e4:	jl     0x42f254
  42f1e6:	call   0x79c8f586
  42f1eb:	xchg   edx,eax
  42f1ec:	mov    bl,0x33
  42f1ee:	add    DWORD PTR [ebp-0x7e04ddcc],edx
  42f1f4:	xor    ebp,DWORD PTR [eax-0x49049905]
  42f1fa:	(bad)  
  42f1fb:	call   0x21c64d2c
  42f200:	mov    edi,0x2c27f9a4
  42f205:	fiadd  WORD PTR [eax-0x50]
  42f208:	daa    
  42f209:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f20a:	cmp    BYTE PTR [esi+ebx*4+0x2c2984d4],ch
  42f211:	fiadd  WORD PTR [eax]
  42f213:	ret    
  42f214:	sub    al,0x40
  42f216:	add    DWORD PTR [edi+esi*8-0x5b],esi
  42f21a:	push   eax
  42f21b:	fisubr DWORD PTR [ecx+eax*8+0x24]
  42f21f:	add    DWORD PTR [edi-0x5b5bca5c],edi
  42f225:	aam    0x83
  42f227:	push   ecx
  42f228:	sub    al,0xde
  42f22a:	add    BYTE PTR [edx+0x1f],dh
  42f22d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f22e:	push   0xde17b9
  42f233:	and    DWORD PTR [edi],0x5b
  42f236:	inc    ebx
  42f237:	fldenv [ebx-0x4a]
  42f23a:	sbb    eax,esp
  42f23c:	mov    al,0xa3
  42f23e:	test   BYTE PTR [ecx+0x6a62c737],ch
  42f244:	and    BYTE PTR [esi+0x3c03],ch
  42f24a:	add    esp,edx
  42f24c:	mov    cl,0x24
  42f24e:	cdq    
  42f24f:	or     ecx,DWORD PTR [esp+edx*1-0x69a23f31]
  42f256:	popf   
  42f257:	mov    ds:0xbfeb4485,eax
  42f25c:	(bad)  
  42f25d:	(bad)  
  42f25f:	pop    esp
  42f260:	rcr    BYTE PTR ds:0x24b2d541,0xb7
  42f267:	and    BYTE PTR [ecx+0x0],cl
  42f26a:	retf   0x41aa
  42f26d:	dec    eax
  42f26e:	mov    ebx,0x4145bef0
  42f273:	fucom  st(1)
  42f275:	dec    esi
  42f276:	sub    BYTE PTR [ebx+0x7c],ah
  42f279:	repnz call 0xe214:0xcb8d3dcf
  42f281:	push   ecx
  42f282:	out    dx,al
  42f283:	dec    esi
  42f284:	imul   BYTE PTR [edx+0x72]
  42f287:	retf   0xff08
  42f28a:	mov    eax,DWORD PTR [edi+ecx*8+0x144d9643]
  42f291:	ins    BYTE PTR es:[edi],dx
  42f292:	push   esp
  42f293:	sbb    al,0x1
  42f295:	mov    esi,DWORD PTR [esi]
  42f297:	popa   
  42f298:	out    dx,eax
  42f299:	je     0x42f31a
  42f29b:	sub    DWORD PTR [ebp-0x14],eax
  42f29e:	mov    esp,0x60894edc
  42f2a3:	sub    edx,edi
  42f2a5:	mov    DWORD PTR [bx],edx
  42f2a8:	cmp    al,0x0
  42f2aa:	sahf   
  42f2ab:	fadd   QWORD PTR [eax]
  42f2ad:	add    al,BYTE PTR [eax]
  42f2af:	add    BYTE PTR [esi+0x27],dl
  42f2b2:	jge    0x42f26c
  42f2b4:	iret   
  42f2b5:	adc    eax,DWORD PTR ds:0xf649dee8
  42f2bb:	call   FWORD PTR [edx+0x5806749b]
  42f2c1:	dec    edx
  42f2c2:	rcl    DWORD PTR [ebx],0x0
  42f2c5:	dec    edi
  42f2c6:	div    BYTE PTR [ebp-0x2e]
  42f2c9:	inc    ebx
  42f2ca:	mov    ecx,0x794ef013
  42f2cf:	jge    0x42f292
  42f2d1:	fild   DWORD PTR ds:0xf64d4684
  42f2d7:	dec    DWORD PTR [ebp+0x70e8f8d0]
  42f2dd:	dec    edx
  42f2de:	cld    
  42f2df:	call   DWORD PTR [esi-0x28]
  42f2e2:	cmc    
  42f2e3:	add    BYTE PTR [edi],ch
  42f2e5:	retf   0xf1f5
  42f2e8:	sub    al,0xb6
  42f2ea:	add    BYTE PTR [ebp-0x56fa0bb],al
  42f2f0:	pusha  
  42f2f1:	cmp    dl,BYTE PTR [ebx]
  42f2f3:	mov    eax,0xfa968bc7
  42f2f8:	mov    al,0x38
  42f2fa:	adc    eax,0x77f59750
  42f2ff:	cli    
  42f300:	mov    al,ds:0x3c879564
  42f305:	setno  BYTE PTR [esi-0x1d92e297]
  42f30c:	mov    BYTE PTR [eax],ah
  42f30e:	xor    BYTE PTR [edi],ch
  42f310:	outs   dx,DWORD PTR ds:[esi]
  42f311:	jl     0x42f2c9
  42f313:	mov    ebp,0xb5330000
  42f318:	xor    al,BYTE PTR [edi+0x739a3483]
  42f31e:	cld    
  42f31f:	data16 cmp BYTE PTR [esi+0x34],ah
  42f323:	cmp    dl,BYTE PTR [ebx]
  42f325:	int3   
  42f326:	neg    esp
  42f328:	jge    0x42f321
  42f32a:	push   ecx
  42f32b:	fdivr  DWORD PTR [esp+esi*2+0x37]
  42f32f:	xor    al,0x23
  42f331:	cld    
  42f332:	das    
  42f333:	scas   eax,DWORD PTR es:[edi]
  42f334:	or     BYTE PTR [ecx],al
  42f336:	lds    esi,FWORD PTR [edx+0x5b1f742c]
  42f33c:	in     eax,dx
  42f33d:	mov    WORD PTR [ecx-0x47],?
  42f340:	sub    eax,0x7589a28d
  42f345:	mov    esi,0xfaa2b807
  42f34a:	adc    BYTE PTR [edx],cl
  42f34c:	or     ebx,DWORD PTR [eax]
  42f34e:	pusha  
  42f34f:	mov    al,ds:0xf51d73f7
  42f354:	add    al,0x50
  42f356:	pusha  
  42f357:	inc    edx
  42f358:	adc    ah,dh
  42f35a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f35b:	jae    0x42f2f9
  42f35d:	lock rcr ebp,1
  42f360:	mov    ds:0x2159718f,al
  42f365:	cmp    bh,BYTE PTR [edi+0x59]
  42f368:	adc    al,0x8c
  42f36a:	test   eax,0xcea27f9a
  42f36f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f370:	or     BYTE PTR [edi+0x496ca63b],0xeb
  42f377:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f378:	cld    
  42f379:	xchg   edi,eax
  42f37a:	add    BYTE PTR [eax],al
  42f37c:	mov    ds:0x238f5c28,eax
  42f381:	stos   BYTE PTR es:[edi],al
  42f382:	mov    bh,0x19
  42f384:	dec    edi
  42f385:	add    edx,DWORD PTR [eax-0x45]
  42f388:	cwde   
  42f389:	test   al,0x52
  42f38b:	sub    DWORD PTR [ebp+ecx*8+0x66],0xffffff8c
  42f390:	and    eax,0x80566cd7
  42f395:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f396:	out    0x7a,eax
  42f398:	ins    DWORD PTR es:[edi],dx
  42f399:	or     eax,0x360704be
  42f39e:	adc    al,BYTE PTR [ebx+0x2f]
  42f3a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f3a2:	cld    
  42f3a3:	imul   edi,DWORD PTR [edi],0x1e
  42f3a6:	call   0x6d18e727
  42f3ab:	les    esp,FWORD PTR ds:0x2f046e62
  42f3b1:	fiadd  WORD PTR [edx]
  42f3b3:	stc    
  42f3b4:	xor    bl,cl
  42f3b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f3b7:	add    edi,edx
  42f3b9:	outs   dx,BYTE PTR ds:[esi]
  42f3ba:	out    0x3,eax
  42f3bc:	das    
  42f3bd:	xor    ebp,ebx
  42f3bf:	mov    fs,WORD PTR [ebx-0x1f071d2a]
  42f3c5:	shl    BYTE PTR [edi],1
  42f3c7:	add    al,0x98
  42f3c9:	cmp    esp,eax
  42f3cb:	add    edx,DWORD PTR [eax-0x7cfc1fdd]
  42f3d1:	sub    DWORD PTR [esi+0x2c],ecx
  42f3d4:	mov    esi,edx
  42f3d6:	mov    edx,0x8c50d8
  42f3db:	sub    ch,BYTE PTR [ebx]
  42f3dd:	test   eax,0x3d13
  42f3e2:	fucom  st(5)
  42f3e4:	add    BYTE PTR [edx-0x4c],dh
  42f3e7:	pop    edx
  42f3e8:	stc    
  42f3e9:	adc    eax,0x251b5d1e
  42f3ee:	fxam   
  42f3f0:	add    BYTE PTR [ebx],al
  42f3f2:	ret    
  42f3f3:	push   edx
  42f3f4:	inc    edx
  42f3f5:	in     eax,dx
  42f3f6:	cld    
  42f3f7:	push   edx
  42f3f8:	inc    ecx
  42f3f9:	in     eax,0xfc
  42f3fb:	test   al,0xcd
  42f3fd:	bound  ebp,QWORD PTR [edx]
  42f3ff:	cmp    al,0x37
  42f401:	pusha  
  42f402:	xor    DWORD PTR ds:0x20affdc3,esp
  42f408:	adc    eax,0xcda95cb7
  42f40d:	(bad)  
  42f40e:	out    0xd5,eax
  42f410:	jge    0x42f437
  42f412:	xchg   esp,eax
  42f413:	aas    
  42f414:	jle    0x42f3dc
  42f416:	inc    eax
  42f417:	fiadd  WORD PTR [edi+0x242a3ca6]
  42f41d:	imul   esp,DWORD PTR [ecx],0x59b500c6
  42f423:	aas    
  42f424:	jle    0x42f3cc
  42f426:	fidiv  WORD PTR es:[ecx+eax*1+0x20]
  42f42b:	sbb    BYTE PTR ss:[ecx],ch
  42f42e:	out    dx,al
  42f42f:	(bad)  [eax-0x17]
  42f432:	sub    al,0xd6
  42f434:	add    BYTE PTR [ecx],dl
  42f436:	stos   DWORD PTR es:[edi],eax
  42f437:	xlat   BYTE PTR ds:[ebx]
  42f438:	add    cl,ch
  42f43a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f43b:	gs je  0x42f42b
  42f43e:	(bad)  
  42f440:	in     eax,0xd9
  42f442:	popa   
  42f443:	mov    dh,0x49
  42f445:	sti    
  42f446:	add    BYTE PTR [eax],al
  42f448:	mov    dl,0xa7
  42f44a:	stc    
  42f44b:	push   esp
  42f44c:	sbb    edi,DWORD PTR [ebp-0x585d8389]
  42f452:	cs test eax,0x56085a
  42f458:	mov    edi,0x23fffd9f
  42f45d:	daa    
  42f45e:	out    0x83,al
  42f460:	loop   0x42f4b3
  42f462:	jp     0x42f450
  42f464:	sub    ch,bh
  42f466:	dec    esi
  42f467:	push   edi
  42f468:	cmp    al,0xe0
  42f46a:	push   0x6d94e321
  42f46f:	call   0x3aab8f
  42f474:	dec    edi
  42f475:	push   ss
  42f476:	and    eax,0x749a531c
  42f47b:	push   es
  42f47c:	push   es
  42f47d:	dec    ecx
  42f47e:	add    si,ax
  42f481:	loopne 0x42f4e5
  42f483:	icebp  
  42f484:	sbb    DWORD PTR [ebp-0x1f29ee8b],ebp
  42f48a:	push   eax
  42f48b:	jmp    DWORD PTR [ebx-0x79bff3d8]
  42f491:	dec    eax
  42f492:	jae    0x42f4b0
  42f494:	clc    
  42f495:	push   edx
  42f496:	jge    0x42f458
  42f498:	jns    0x42f4f6
  42f49a:	inc    ecx
  42f49b:	add    DWORD PTR [esi-0x78d81820],eax
  42f4a1:	loopne 0x42f4a3
  42f4a3:	mov    ecx,edx
  42f4a5:	mov    esp,0xbca28d09
  42f4aa:	or     eax,0x910000e8
  42f4af:	push   ebp
  42f4b0:	cld    
  42f4b1:	dec    edi
  42f4b3:	adc    eax,0x51d50c25
  42f4b8:	test   BYTE PTR [edi],0xd2
  42f4bb:	xor    eax,0x5d46fffa
  42f4c0:	pop    ebp
  42f4c1:	and    al,0x66
  42f4c3:	loopne 0x42f527
  42f4c5:	push   eax
  42f4c6:	mov    edx,DWORD PTR [esi]
  42f4c8:	and    eax,0x50da7c28
  42f4cd:	call   0x3cf926
  42f4d2:	das    
  42f4d3:	inc    eax
  42f4d4:	or     ah,BYTE PTR [edi+ecx*2]
  42f4d7:	cmp    dl,al
  42f4d9:	or     ebp,DWORD PTR [ecx+ebx*1-0x15ccf417]
  42f4e0:	push   es
  42f4e1:	sti    
  42f4e2:	cmp    BYTE PTR [edx+esi*8+0x73],ch
  42f4e6:	cmp    eax,0xe77f04f5
  42f4eb:	xchg   ebp,eax
  42f4ec:	adc    ch,BYTE PTR [ebp-0x5c]
  42f4ef:	mov    WORD PTR [edx+0x4b],?
  42f4f2:	or     edx,DWORD PTR [ecx-0x444a2931]
  42f4f8:	jp     0x42f549
  42f4fa:	fbstp  TBYTE PTR ds:0xb9400888
  42f500:	ja     0x42f4bf
  42f502:	les    eax,FWORD PTR [ebx+0x35e84f7a]
  42f508:	mov    BYTE PTR [eax+ebx*1],al
  42f50b:	mov    cl,0x1
  42f50d:	leave  
  42f50e:	test   BYTE PTR [edi+0x4f7a],ch
  42f514:	mov    al,0x35
  42f516:	mov    BYTE PTR [eax+eax*1],al
  42f519:	lods   al,BYTE PTR ds:[esi]
  42f51a:	add    DWORD PTR [ecx+0x31200ab],ebp
  42f520:	daa    
  42f521:	mov    dh,0x3e
  42f523:	cs push esp
  42f525:	and    BYTE PTR ds:0x75b94fc0,al
  42f52b:	add    BYTE PTR [esi+esi*4+0x3970e743],bl
  42f532:	mov    esi,0xa9310774
  42f537:	je     0x42f54c
  42f539:	cld    
  42f53a:	inc    ecx
  42f53b:	and    al,0xf
  42f53d:	mov    dh,0xfd
  42f53f:	jmp    FWORD PTR [edi]
  42f541:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f542:	or     eax,0xfa24a408
  42f547:	cli    
  42f548:	mov    al,ds:0x4b5b7ab9
  42f54d:	fisub  WORD PTR [ebx]
  42f54f:	pushf  
  42f550:	xchg   ebp,eax
  42f551:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f552:	fimul  DWORD PTR [ebx-0x1bf3e65d]
  42f558:	js     0x42f510
  42f55a:	mov    al,ds:0x6ea30589
  42f55f:	inc    eax
  42f560:	push   ebx
  42f561:	ror    bh,cl
  42f563:	xor    DWORD PTR [esi],ebx
  42f565:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f566:	mov    dl,0x79
  42f568:	ins    BYTE PTR es:[edi],dx
  42f569:	cli    
  42f56a:	xlat   BYTE PTR ds:[ebx]
  42f56b:	xor    edx,edi
  42f56d:	bound  ecx,QWORD PTR [edi-0x58a72a75]
  42f573:	sti    
  42f574:	stos   DWORD PTR es:[edi],eax
  42f575:	in     eax,dx
  42f576:	xchg   edx,eax
  42f577:	mov    eax,DWORD PTR [eax]
  42f579:	add    ch,al
  42f57b:	push   eax
  42f57c:	and    esp,eax
  42f57e:	sbb    BYTE PTR [esi],cl
  42f580:	nop
  42f581:	pop    ecx
  42f582:	push   es
  42f583:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f584:	jp     0x42f605
  42f586:	fcomp  DWORD PTR [eax-0x72]
  42f589:	adc    ah,ch
  42f58b:	push   esi
  42f58c:	jmp    0x42f56d
  42f58e:	cmp    BYTE PTR [ecx+0x62],bl
  42f591:	adc    BYTE PTR [esi+0x57],dl
  42f594:	push   esi
  42f595:	xchg   DWORD PTR [edx+edi*8],ecx
  42f598:	pop    es
  42f599:	add    al,0x11
  42f59b:	push   cs
  42f59c:	pop    ebp
  42f59d:	inc    eax
  42f59e:	dec    ebx
  42f59f:	test   ch,0x3
  42f5a2:	fbstp  TBYTE PTR [ebp-0x5d8fa69b]
  42f5a8:	data16 shl BYTE PTR [eax+edi*1],0xee
  42f5ad:	js     0x42f59b
  42f5af:	stc    
  42f5b0:	fbstp  TBYTE PTR [ecx]
  42f5b2:	jmp    DWORD PTR [edx+0x1e3d37f4]
  42f5b8:	call   0x5d146243
  42f5bd:	inc    eax
  42f5be:	or     edi,esi
  42f5c0:	xchg   edi,eax
  42f5c1:	fldenv [eax-0x644e7506]
  42f5c8:	add    BYTE PTR [ebx-0x6537d49b],dh
  42f5ce:	les    edx,FWORD PTR [ecx+0x39a5e710]
  42f5d4:	xor    DWORD PTR [ebx+ebp*1-0x22],edx
  42f5d8:	stc    
  42f5d9:	sbb    al,0x7
  42f5db:	cmp    DWORD PTR ds:0xb50000e9,0xffffffca
  42f5e2:	rcr    bl,1
  42f5e4:	ins    BYTE PTR es:[edi],dx
  42f5e5:	fidivr WORD PTR [ebx]
  42f5e7:	jmp    0x42f614
  42f5e9:	fiadd  WORD PTR [eax]
  42f5eb:	out    0x68,al
  42f5ed:	sub    dl,bh
  42f5ef:	scas   al,BYTE PTR es:[edi]
  42f5f0:	mov    ch,0xa4
  42f5f2:	je     0x42f5c1
  42f5f4:	sar    BYTE PTR [ecx-0x5b5a8525],1
  42f5fa:	sub    eax,0x560415a9
  42f5ff:	bound  ecx,QWORD PTR [edi+0x2cedbf02]
  42f605:	or     eax,DWORD PTR [esi+0x44b5a98d]
  42f60b:	sbb    bl,BYTE PTR [ebp+0xd]
  42f60e:	cli    
  42f60f:	hlt    
  42f610:	cwde   
  42f611:	push   edx
  42f612:	pop    ebx
  42f613:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f614:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f615:	sub    cl,BYTE PTR [ecx]
  42f617:	jb     0x42f5d5
  42f619:	mov    ecx,0xa4b55eb6
  42f61e:	jge    0x42f5e4
  42f620:	mov    ah,0xa1
  42f622:	mov    WORD PTR [eax+esi*4+0x56f3e911],gs
  42f629:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f62a:	stc    
  42f62b:	bound  edx,QWORD PTR [esi+edx*2-0x77501ea5]
  42f632:	jae    0x42f63a
  42f634:	(bad)  
  42f635:	sbb    DWORD PTR [ebp+0x406179b9],edi
  42f63b:	add    DWORD PTR [edi-0x9],ebx
  42f63e:	cli    
  42f63f:	push   cs
  42f640:	ret    0x8b88
  42f643:	add    BYTE PTR [eax],al
  42f645:	add    BYTE PTR [ebx+0x6b00e154],bh
  42f64b:	push   edi
  42f64c:	neg    BYTE PTR [edi-0x40]
  42f64f:	and    bh,BYTE PTR [ebx+0x19b4f5b]
  42f655:	add    BYTE PTR [ebp+0x6b83fcd1],bl
  42f65b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f65c:	stc    
  42f65d:	test   al,ch
  42f65f:	int    0x2f
  42f661:	lea    ebx,[ebp-0x74]
  42f664:	mov    WORD PTR [ebp-0x3a],es
  42f667:	jmp    0x420345f7
  42f66c:	xchg   ebp,eax
  42f66d:	out    dx,al
  42f66e:	mov    eax,ds:0x1bc08456
  42f673:	stos   DWORD PTR es:[edi],eax
  42f674:	pop    edi
  42f675:	mov    ecx,ecx
  42f677:	(bad)  
  42f678:	xor    DWORD PTR [ebp-0x4c],eax
  42f67b:	rol    BYTE PTR [edx],1
  42f67d:	dec    bp
  42f67f:	pop    ds
  42f680:	sti    
  42f681:	gs fstp st(7)
  42f684:	hlt    
  42f685:	je     0x42f68a
  42f687:	push   edi
  42f688:	inc    esp
  42f689:	or     al,0x45
  42f68b:	lahf   
  42f68c:	xor    edi,DWORD PTR [ecx]
  42f68e:	stos   DWORD PTR es:[edi],eax
  42f68f:	test   al,0x6b
  42f691:	shr    BYTE PTR ds:0xcb8d334c,cl
  42f697:	sbb    BYTE PTR [edx+0x6a],cl
  42f69a:	dec    esp
  42f69b:	repz mov edi,DWORD PTR [ebp-0x1e]
  42f69f:	sub    BYTE PTR [ebp+0x8],al
  42f6a2:	dec    eax
  42f6a3:	loope  0x42f6aa
  42f6a5:	add    bh,bh
  42f6a7:	sar    ah,1
  42f6a9:	call   0xaa18f6ae
  42f6ae:	idiv   edi
  42f6b0:	fistp  DWORD PTR [ecx-0x1f32ed93]
  42f6b6:	cld    
  42f6b7:	xor    edx,DWORD PTR [edi+ecx*2]
  42f6ba:	jmp    0x2fb7:0xe1a4bbff
  42f6c1:	call   0xfaf8:0x79b7fa87
  42f6c8:	ret    0x95ae
  42f6cb:	(bad)  [eax]
  42f6cd:	mov    eax,ds:0xb88a8588
  42f6d2:	xchg   esi,eax
  42f6d3:	jo     0x42f6f5
  42f6d5:	mov    cl,0x88
  42f6d7:	dec    esi
  42f6d8:	pop    es
  42f6d9:	push   0xc410f9f8
  42f6de:	stos   DWORD PTR es:[edi],eax
  42f6df:	call   0xfacb7f77
  42f6e4:	pop    ecx
  42f6e5:	cmp    al,0x8f
  42f6e7:	test   BYTE PTR [ecx],al
  42f6e9:	test   eax,0xb52f7d79
  42f6ee:	std    
  42f6ef:	test   DWORD PTR [ecx+0x31],eax
  42f6f2:	mov    ah,0x73
  42f6f4:	arpl   ax,cx
  42f6f6:	ror    eax,cl
  42f6f8:	sbb    al,0x78
  42f6fa:	jge    0x42f6f1
  42f6fc:	pop    ds
  42f6fd:	retf   0x85f3
  42f700:	popa   
  42f701:	mov    dh,0x7d
  42f703:	cmc    
  42f704:	inc    edi
  42f705:	leave  
  42f706:	stc    
  42f707:	jg     0x42f6be
  42f709:	std    
  42f70a:	or     DWORD PTR [edx],eax
  42f70c:	inc    ebp
  42f70d:	mov    ecx,0xc184
  42f712:	sub    eax,0x398633c8
  42f717:	add    ch,BYTE PTR [eax+edx*8]
  42f71a:	scas   eax,DWORD PTR es:[edi]
  42f71b:	cmp    al,0xf7
  42f71d:	jb     0x42f75e
  42f71f:	xchg   edi,eax
  42f720:	clc    
  42f721:	mov    ecx,0x39ef65d
  42f726:	or     DWORD PTR [ebx+edi*4-0x31f1539f],esi
  42f72d:	out    0x41,al
  42f72f:	xor    ch,BYTE PTR [ebx+edi*4]
  42f732:	scas   eax,DWORD PTR es:[edi]
  42f733:	in     al,dx
  42f734:	cli    
  42f735:	jb     0x42f776
  42f737:	xchg   edi,eax
  42f738:	clc    
  42f739:	mov    ecx,0xa228de7d
  42f73e:	sub    al,0x38
  42f740:	out    0xbd,eax
  42f742:	into   
  42f743:	pop    edx
  42f744:	add    al,dl
  42f746:	dec    ecx
  42f747:	enter  0x2d5c,0x94
  42f74b:	pop    esi
  42f74c:	(bad)  
  42f74d:	std    
  42f74e:	mov    ebp,0xe6f881c9
  42f753:	mov    ebp,DWORD PTR [eax]
  42f755:	mov    ds:0xbde7382c,al
  42f75a:	mov    ds,WORD PTR [ebx-0x30]
  42f75d:	das    
  42f75e:	and    al,0x67
  42f760:	mov    al,0x3e
  42f762:	adc    BYTE PTR [esi+ebp*1-0x80],ch
  42f766:	repnz sub edi,esp
  42f769:	and    ch,0xdc
  42f76c:	dec    ecx
  42f76d:	jge    0x42f797
  42f76f:	push   ebx
  42f770:	mov    ds:0xf69b8527,al
  42f775:	mov    esp,0xd64a0000
  42f77a:	inc    ecx
  42f77b:	jge    0x42f7ad
  42f77d:	push   es
  42f77e:	inc    edx
  42f77f:	ret    
  42f780:	stos   DWORD PTR es:[edi],eax
  42f781:	mov    edx,DWORD PTR [ebx]
  42f783:	xor    BYTE PTR [ecx+0x3cbd6bd3],dh
  42f789:	adc    bh,dl
  42f78b:	ret    
  42f78c:	cmp    BYTE PTR [ebp+0x342a10d4],ah
  42f792:	out    0x2b,al
  42f794:	nop
  42f795:	fsub   DWORD PTR [edi-0x73]
  42f798:	dec    ecx
  42f799:	sub    ecx,ebp
  42f79b:	inc    ecx
  42f79c:	std    
  42f79d:	jmp    0xcd60:0x5e3d9b59
  42f7a4:	add    eax,0x2a8dbec5
  42f7a9:	cmp    bl,bl
  42f7ab:	inc    ebp
  42f7ac:	addr16 aaa 
  42f7ae:	out    0x94,eax
  42f7b0:	push   cs
  42f7b1:	pop    ebx
  42f7b2:	dec    ecx
  42f7b3:	aam    0x35
  42f7b5:	add    BYTE PTR [bx],bh
  42f7b8:	in     eax,dx
  42f7b9:	push   edi
  42f7ba:	push   es
  42f7bb:	imul   ebp,DWORD PTR [edx-0x50f48412],0xadea7495
  42f7c5:	xchg   esi,eax
  42f7c6:	jmp    ebp
  42f7c8:	icebp  
  42f7c9:	xchg   esp,eax
  42f7ca:	test   al,0xeb
  42f7cc:	sub    ah,bl
  42f7ce:	xor    BYTE PTR [bx+si+0xa3],ch
  42f7d3:	jmp    0x974c5f22
  42f7d8:	in     eax,dx
  42f7d9:	int3   
  42f7da:	rol    BYTE PTR [ebx+0x140000],0x88
  42f7e1:	out    dx,al
  42f7e2:	inc    esp
  42f7e3:	pop    ebp
  42f7e4:	test   DWORD PTR [eax],ebp
  42f7e6:	aas    
  42f7e7:	popf   
  42f7e8:	cmp    eax,0xdb030d
  42f7ed:	jmp    0xe4b5957e
  42f7f2:	inc    ecx
  42f7f3:	cdq    
  42f7f4:	je     0x42f7fb
  42f7f6:	out    0x6a,eax
  42f7f8:	ja     0x42f813
  42f7fa:	test   al,0x11
  42f7fc:	and    eax,0x510b1dd
  42f801:	xchg   ecx,eax
  42f802:	cmp    BYTE PTR [edi-0x5],0x9e
  42f806:	adc    DWORD PTR [ebx-0x40],esp
  42f809:	sbb    eax,0x81ff4e2f
  42f80e:	cs int3 
  42f810:	shr    BYTE PTR [ebx-0x1798624c],0xad
  42f817:	sahf   
  42f818:	adc    BYTE PTR [ecx+0x6efa5543],al
  42f81e:	cld    
  42f81f:	fnstsw WORD PTR [ebp-0x671ea41]
  42f825:	xlat   BYTE PTR ds:[ebx]
  42f826:	cmp    al,0x86
  42f828:	and    edi,0xa5f298aa
  42f82e:	pop    eax
  42f82f:	in     eax,0xff
  42f831:	inc    DWORD PTR [ecx-0x65]
  42f834:	jns    0x42f885
  42f836:	xchg   esi,eax
  42f837:	loope  0x42f8ad
  42f839:	push   es
  42f83a:	sar    BYTE PTR [ecx+0x6d],0xe
  42f83e:	or     BYTE PTR [edx+eax*4-0x3a],ah
  42f842:	add    BYTE PTR [eax],al
  42f844:	push   0x83fffd9f
  42f849:	sbb    dh,ah
  42f84b:	xor    DWORD PTR [edx],0x69
  42f84e:	sub    ah,0x5a
  42f851:	cwde   
  42f852:	stc    
  42f853:	call   DWORD PTR [ebp-0x3e3fd635]
  42f859:	and    BYTE PTR [esp+edi*2-0x267d4f0e],cl
  42f860:	cs pop ss
  42f862:	(bad)  
  42f864:	or     DWORD PTR [edi+0x7e52c7b9],ebp
  42f86a:	sub    esp,edi
  42f86c:	mov    BYTE PTR [edx],ah
  42f86e:	add    DWORD PTR [ecx+0x797e92],ecx
  42f874:	push   es
  42f875:	loope  0x42f7fe
  42f877:	test   BYTE PTR [edx],dh
  42f879:	pop    esi
  42f87a:	stc    
  42f87b:	call   esi
  42f87d:	pop    ss
  42f87e:	jle    0x42f8a4
  42f880:	dec    esi
  42f881:	loop   0x42f883
  42f883:	add    BYTE PTR [ecx-0x2973e2a3],al
  42f889:	loopne 0x42f88b
  42f88b:	add    bh,dl
  42f88d:	loopne 0x42f88f
  42f88f:	mov    ecx,DWORD PTR ds:0x3b018292
  42f895:	out    0x8,eax
  42f897:	push   edi
  42f898:	sbb    ecx,esi
  42f89a:	and    al,0x1c
  42f89c:	inc    esp
  42f89d:	pop    ss
  42f89e:	dec    ebx
  42f89f:	add    al,0x44
  42f8a1:	sar    BYTE PTR [esi-0x678ddbc],1
  42f8a7:	inc    BYTE PTR [eax]
  42f8a9:	add    dh,al
  42f8ab:	pushf  
  42f8ac:	jge    0x42f86e
  42f8ae:	das    
  42f8af:	test   BYTE PTR [ecx+0x7c],bh
  42f8b2:	sub    eax,0xeb8cfd87
  42f8b7:	jmp    0x117:0x86d54fe8
  42f8be:	pusha  
  42f8bf:	pop    edx
  42f8c0:	fldenv [ebx]
  42f8c2:	inc    edi
  42f8c3:	outs   dx,DWORD PTR ds:[esi]
  42f8c4:	leave  
  42f8c5:	call   DWORD PTR [eax+0xd]
  42f8c8:	inc    ecx
  42f8c9:	and    al,0x1f
  42f8cb:	adc    BYTE PTR [ecx+0x24],al
  42f8ce:	daa    
  42f8cf:	add    ch,bh
  42f8d1:	xchg   dh,ah
  42f8d3:	mov    dh,BYTE PTR [esi+0x46]
  42f8d6:	and    esp,esp
  42f8d8:	aam    0x86
  42f8da:	pop    ds
  42f8db:	out    dx,al
  42f8dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f8dd:	or     al,0x21
  42f8df:	xchg   ebp,eax
  42f8e0:	sub    ebp,eax
  42f8e2:	cld    
  42f8e3:	mov    edx,0x1acfa83
  42f8e8:	loope  0x42f8f9
  42f8ea:	das    
  42f8eb:	mov    WORD PTR [ecx+0x40],?
  42f8ee:	sub    eax,0x387ffd85
  42f8f3:	test   DWORD PTR [edx+0x7b],esi
  42f8f6:	dec    ebx
  42f8f7:	jmp    0x85729a48
  42f8fc:	std    
  42f8fd:	je     0x42f92d
  42f8ff:	lds    ebx,FWORD PTR [eax+ebx*4-0x737bb423]
  42f906:	xchg   ebx,eax
  42f907:	test   eax,0x85c8ffbd
  42f90c:	inc    ebp
  42f90d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f90e:	add    BYTE PTR [eax],al
  42f910:	das    
  42f911:	test   ebp,edi
  42f913:	out    0xa7,eax
  42f915:	ja     0x42f89a
  42f917:	cli    
  42f918:	mov    ds:0x2e25d9d9,al
  42f91d:	test   ebp,edi
  42f91f:	out    0xe7,eax
  42f921:	cmp    BYTE PTR [ebp+0x19598fa],al
  42f927:	(bad)  
  42f928:	jmp    0x42f907
  42f92a:	or     ebx,esp
  42f92c:	test   DWORD PTR [edx],edx
  42f92e:	add    al,0xf0
  42f930:	lock data16 sub dh,BYTE PTR [ebx]
  42f934:	stos   BYTE PTR es:[edi],al
  42f935:	and    al,BYTE PTR [esp+edx*8]
  42f938:	loopne 0x42f9a2
  42f93a:	stos   DWORD PTR es:[edi],eax
  42f93b:	fist   WORD PTR [eax]
  42f93d:	cs push eax
  42f93f:	aas    
  42f940:	mov    al,ds:0x6c80329c
  42f945:	mul    BYTE PTR [ebx+eax*8+0x25]
  42f949:	jno    0x42f970
  42f94b:	dec    edx
  42f94c:	push   esi
  42f94d:	fucom  st(7)
  42f94f:	add    ebp,DWORD PTR [eax+0x2f0329a4]
  42f955:	push   ds
  42f956:	mov    eax,ds:0x7c67360e
  42f95b:	sti    
  42f95c:	lods   al,BYTE PTR ds:[esi]
  42f95d:	scas   eax,DWORD PTR es:[edi]
  42f95e:	je     0x42f99f
  42f960:	and    al,0x11
  42f962:	fdivr  DWORD PTR [eax+0x6c]
  42f965:	ret    0xd8c3
  42f968:	ins    BYTE PTR es:[edi],dx
  42f969:	ret    0x82ff
  42f96c:	sub    edx,0x6e
  42f96f:	fmul   DWORD PTR [edx+edi*8+0x5e]
  42f973:	push   edx
  42f974:	add    BYTE PTR [eax],al
  42f976:	adc    BYTE PTR [edi],ah
  42f978:	sahf   
  42f979:	xor    ch,0x61
  42f97c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f97d:	clc    
  42f97e:	inc    esi
  42f97f:	fwait
  42f980:	xor    al,0x14
  42f982:	test   al,0x21
  42f984:	or     al,0x18
  42f986:	aam    0x10
  42f988:	fmul   QWORD PTR [esi-0x71343d84]
  42f98e:	test   BYTE PTR [ebp-0x6539b22b],0x6b
  42f995:	inc    esp
  42f996:	cmp    al,0xe1
  42f998:	mov    eax,ds:0xe8eb0cc8
  42f99d:	sbb    BYTE PTR [edx+eax*8],0xd3
  42f9a1:	imul   edi,DWORD PTR [eax],0xffffffe9
  42f9a4:	add    BYTE PTR [edi-0x54],dh
  42f9a7:	xchg   edi,eax
  42f9a8:	je     0x42f96f
  42f9aa:	xor    BYTE PTR [esi-0x68510bf7],al
  42f9b0:	sbb    ch,0x48
  42f9b3:	out    0x0,eax
  42f9b5:	out    0xb0,al
  42f9b7:	sbb    DWORD PTR [eax],eax
  42f9b9:	jmp    0xe9e47eea
  42f9be:	sub    al,0xde
  42f9c0:	repnz gs pop ss
  42f9c3:	jb     0x42f9c5
  42f9c5:	jmp    0xdfb7d6f6
  42f9ca:	test   eax,0x33812456
  42f9cf:	fiadd  WORD PTR [eax]
  42f9d1:	jmp    0xe8a35af3
  42f9d6:	sub    al,0xde
  42f9d8:	repnz add BYTE PTR gs:[eax],al
  42f9dc:	pop    es
  42f9dd:	jb     0x42f9df
  42f9df:	jmp    0xefb7b810
  42f9e4:	test   eax,0x33452455
  42f9e9:	fiadd  WORD PTR [eax]
  42f9eb:	jmp    0xe88b5d2d
  42f9f0:	sub    al,0xde
  42f9f2:	mov    ecx,0xde34e9
  42f9f7:	ret    0x94e5
  42f9fa:	je     0x42fa01
  42f9fc:	sbb    ebp,DWORD PTR [ebx-0x7c]
  42f9ff:	or     eax,0xe9f9990f
  42fa04:	cld    
  42fa05:	push   0x44
  42fa07:	or     eax,0x258c29cb
  42fa0c:	pop    es
  42fa0d:	sub    ch,cl
  42fa0f:	rcl    BYTE PTR [edi-0x171d0669],0xbd
  42fa16:	adc    dh,ah
  42fa18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fa19:	cli    
  42fa1a:	(bad)  
  42fa1b:	call   0x875a4c
  42fa20:	jp     0x42f9d6
  42fa22:	sbb    eax,0x3ce59a7f
  42fa27:	sbb    edx,DWORD PTR [ecx-0x79fef39a]
  42fa2d:	fnstsw WORD PTR [ebx+ebx*1]
  42fa30:	and    DWORD PTR [ecx-0x2f],0x79dd9600
  42fa37:	jl     0x42fa63
  42fa39:	repnz add BYTE PTR [edi],cl
  42fa3c:	or     bl,BYTE PTR [ebx]
  42fa3e:	cli    
  42fa3f:	inc    DWORD PTR [eax]
  42fa41:	add    BYTE PTR [esi+0x68],dl
  42fa44:	call   DWORD PTR [esi-0x2d]
  42fa47:	push   0xdd451c1d
  42fa4c:	add    BYTE PTR [ecx-0x33],dl
  42fa4f:	not    DWORD PTR cs:[eax+0x5a]
  42fa53:	push   0x3d
  42fa55:	and    al,0x46
  42fa57:	mov    cx,0xe779
  42fa5b:	pop    ebx
  42fa5c:	adc    al,0xcc
  42fa5e:	cmp    ebx,DWORD PTR [ebp-0x3c1ac307]
  42fa64:	add    BYTE PTR [eax],al
  42fa66:	adc    DWORD PTR [esi-0x30],esp
  42fa69:	add    BYTE PTR [esi],al
  42fa6b:	(bad)  
  42fa6d:	jne    0x42fa61
  42fa6f:	ins    DWORD PTR es:[edi],dx
  42fa70:	jge    0x42fa96
  42fa72:	scas   al,BYTE PTR es:[edi]
  42fa73:	loope  0x42fa75
  42fa75:	add    BYTE PTR [esi+0x6b],al
  42fa78:	inc    esp
  42fa79:	adc    BYTE PTR [ebp+edi*4-0x18],ch
  42fa7d:	out    dx,al
  42fa7e:	iret   
  42fa7f:	pop    ebx
  42fa80:	test   BYTE PTR [ebp+0x3c84ee96],0xa1
  42fa87:	pop    esi
  42fa88:	div    BYTE PTR [ebx]
  42fa8a:	xchg   BYTE PTR [ecx+0x5ff1c084],ah
  42fa90:	test   al,0x0
  42fa92:	(bad)  
  42fa93:	fadd   QWORD PTR [ecx-0x6a31544]
  42fa99:	jmp    FWORD PTR [edi]
  42fa9b:	xchg   DWORD PTR [ebx+eax*4+0x5030b],ecx
  42faa2:	das    
  42faa3:	push   esp
  42faa4:	inc    esi
  42faa5:	add    BYTE PTR gs:[eax],al
  42faa8:	cs push cs
  42faaa:	xchg   ecx,eax
  42faab:	and    esi,DWORD PTR [ebx-0x5900027a]
  42fab1:	cmp    ch,BYTE PTR [ecx]
  42fab3:	mov    BYTE PTR [edi],ch
  42fab5:	xchg   ebp,edi
  42fab7:	mov    BYTE PTR [ebx+0x78ff90e2],dh
  42fabd:	xchg   dh,cl
  42fabf:	xchg   BYTE PTR [eax+0x1e],ah
  42fac2:	sahf   
  42fac3:	xor    ebp,DWORD PTR [edi]
  42fac5:	xchg   DWORD PTR [edi+ebp*8+0x69f8d0aa],ecx
  42facc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42facd:	mov    BYTE PTR [esi+eax*2+0x1bc58c23],cl
  42fad4:	ret    0x8c6c
  42fad7:	inc    esi
  42fad8:	pop    ds
  42fad9:	or     al,0xfe
  42fadb:	push   ecx
  42fadc:	cmp    BYTE PTR [esi+0x5],dl
  42fadf:	sti    
  42fae0:	stc    
  42fae1:	dec    al
  42fae3:	and    edi,DWORD PTR [ebp*8-0x66def9a7]
  42faea:	xlat   BYTE PTR ds:[ebx]
  42faeb:	out    0x0,eax
  42faed:	jge    0x42fb6e
  42faef:	cli    
  42faf0:	scas   eax,DWORD PTR es:[edi]
  42faf1:	or     DWORD PTR [edx],esp
  42faf3:	or     ebp,DWORD PTR [edi]
  42faf5:	cmp    esi,eax
  42faf7:	cli    
  42faf8:	ins    BYTE PTR es:[edi],dx
  42faf9:	cmp    DWORD PTR [ebp+0x76],0x3ff28527
  42fb00:	mov    ds:0xd74028c1,al
  42fb05:	in     al,0xbc
  42fb07:	stc    
  42fb08:	loopne 0x42fb0c
  42fb0a:	or     al,BYTE PTR ds:[eax]
  42fb0d:	add    BYTE PTR [eax-0x2f058500],ch
  42fb13:	pushf  
  42fb14:	sub    ah,BYTE PTR [esi+0x2f]
  42fb17:	fidiv  WORD PTR [edi+ecx*8+0xc]
  42fb1b:	and    dl,BYTE PTR [eax-0x6d677f02]
  42fb21:	jmp    0xd80725cf
  42fb26:	loopne 0x42face
  42fb28:	out    0x3,eax
  42fb2a:	das    
  42fb2b:	add    bh,cl
  42fb2d:	dec    ebx
  42fb2e:	and    eax,0x7878a84f
  42fb33:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fb35:	test   BYTE PTR [eax-0x24],ch
  42fb38:	push   eax
  42fb39:	(bad)  
  42fb3a:	test   DWORD PTR [edi+0x5f90d85a],edx
  42fb40:	fiadd  WORD PTR [ecx+0x7ce5b75]
  42fb46:	das    
  42fb47:	xchg   edi,eax
  42fb48:	jnp    0x42fb71
  42fb4a:	scas   eax,DWORD PTR es:[edi]
  42fb4b:	fsubrp st(7),st
  42fb4d:	add    esp,DWORD PTR [edi+ebp*2]
  42fb50:	es imul ebx,esp,0xffffffe2
  42fb54:	sub    DWORD PTR [eax+0x446e37e5],eax
  42fb5a:	fldenv [edx+0x4]
  42fb5d:	fidivr WORD PTR [edx-0x16]
  42fb60:	out    0x79,eax
  42fb62:	in     al,dx
  42fb63:	shl    ebx,0x2
  42fb66:	jge    0x42fbcb
  42fb68:	clc    
  42fb69:	inc    edi
  42fb6a:	cs pop edx
  42fb6c:	jg     0x42fb31
  42fb6e:	sbb    BYTE PTR [ebx],cl
  42fb70:	jmp    0xdf2b:0x80000d9
  42fb77:	add    DWORD PTR ds:0xc2dea963,0xf5d4e7e1
  42fb81:	adc    DWORD PTR [eax+edx*1],ecx
  42fb84:	jo     0x42fb86
  42fb86:	in     al,0x3
  42fb88:	jge    0x42fb21
  42fb8a:	cmp    ebp,DWORD PTR [eax]
  42fb8c:	aas    
  42fb8d:	mov    al,ds:0x862e0c21
  42fb92:	add    BYTE PTR [esi],ah
  42fb94:	ja     0x42fb2b
  42fb96:	stc    
  42fb97:	gs jae 0x42fba5
  42fb9a:	or     dl,bl
  42fb9c:	ins    BYTE PTR es:[edi],dx
  42fb9d:	rol    BYTE PTR [edx-0x1b],1
  42fba0:	adc    eax,0xd2b1f19e
  42fba5:	pop    eax
  42fba6:	or     cl,ch
  42fba8:	xchg   DWORD PTR [edi-0x14],ebx
  42fbab:	push   0x1f
  42fbad:	out    0x52,eax
  42fbaf:	push   ss
  42fbb0:	or     esi,ebx
  42fbb2:	push   ds
  42fbb3:	jbe    0x42fbc5
  42fbb5:	xchg   esp,eax
  42fbb6:	jae    0x42fb95
  42fbb8:	lods   eax,DWORD PTR ds:[esi]
  42fbb9:	sub    ecx,edi
  42fbbb:	data16 add BYTE PTR [edx],dl
  42fbbe:	or     DWORD PTR [eax+0x66],esi
  42fbc1:	xchg   edx,eax
  42fbc2:	data16 jmp 0x42fc02
  42fbc5:	mov    WORD PTR [ebx-0x77d12334],cs
  42fbcb:	mov    esp,0x1fbc7ed8
  42fbd0:	fcom   DWORD PTR [ebx+0x4236364d]
  42fbd6:	push   cs
  42fbd7:	test   eax,0x5f2c0000
  42fbdc:	inc    ebp
  42fbdd:	leave  
  42fbde:	std    
  42fbdf:	xchg   edx,eax
  42fbe0:	xor    DWORD PTR [eax],0x37
  42fbe3:	retf   0xaa85
  42fbe6:	adc    BYTE PTR [edi+0x10],bl
  42fbe9:	rol    BYTE PTR [edi],cl
  42fbeb:	xchg   BYTE PTR [eax+eax*8-0x49],dh
  42fbef:	(bad)  
  42fbf0:	jae    0x42fbd5
  42fbf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fbf3:	sub    bh,ch
  42fbf5:	mov    al,0xfc
  42fbf7:	(bad)  [ebp-0x1b]
  42fbfa:	mov    ch,0x85
  42fbfc:	in     eax,0xf7
  42fbfe:	mov    ch,0x25
  42fc00:	add    eax,0x6d8dd622
  42fc05:	out    dx,eax
  42fc06:	mov    ds:0x760f51a,eax
  42fc0b:	mov    es,WORD PTR [ecx+0x0]
  42fc0e:	push   ebp
  42fc0f:	and    DWORD PTR [esi],eax
  42fc11:	cmp    ebp,edi
  42fc13:	(bad)
  42fc17:	xchg   esi,eax
  42fc18:	pop    edx
  42fc19:	cmp    DWORD PTR [edi+0x9],0x8fd6fffb
  42fc20:	xor    al,0x8b
  42fc22:	and    edx,DWORD PTR [esi]
  42fc24:	test   esi,esi
  42fc26:	lods   eax,DWORD PTR ds:[esi]
  42fc27:	scas   eax,DWORD PTR es:[edi]
  42fc28:	or     BYTE PTR [ebp-0x46],0xd2
  42fc2c:	dec    eax
  42fc2d:	or     BYTE PTR [ebp+ebp*8-0x1e76ba42],ah
  42fc34:	dec    ecx
  42fc35:	push   DWORD PTR [ebx+0x45]
  42fc38:	or     eax,DWORD PTR [eax-0x6a]
  42fc3b:	addr16 inc esp
  42fc3d:	sldt   WORD PTR [eax]
  42fc40:	imul   esi,DWORD PTR [ebx-0x1e813d38],0x5a824887
  42fc4a:	shl    BYTE PTR [esi-0x76ff1eae],0x9e
  42fc51:	jmp    0xda8c4214
  42fc56:	loope  0x42fc36
  42fc58:	retf   
  42fc59:	cdq    
  42fc5a:	add    BYTE PTR [ebx+0x16],ch
  42fc5d:	in     eax,0x50
  42fc5f:	lea    esp,[ebp+0x3feee8f5]
  42fc65:	adc    esi,edi
  42fc67:	test   BYTE PTR [esi],al
  42fc69:	lea    edi,[esi-0x7e3f2a75]
  42fc6f:	lock mov ebp,0x9503060a
  42fc75:	cmc    
  42fc76:	mov    eax,DWORD PTR [eax+0x7]
  42fc79:	bound  edi,QWORD PTR [edx]
  42fc7b:	and    BYTE PTR [edx-0x19ba7db3],al
  42fc81:	push   0x5e538aff
  42fc86:	mov    BYTE PTR [esi+0x2f],al
  42fc89:	add    DWORD PTR [edx],0xffffffa2
  42fc8c:	xor    eax,DWORD PTR [edi-0x70967703]
  42fc92:	push   0xd2ec7cba
  42fc97:	cli    
  42fc98:	cmp    ah,BYTE PTR [ebx+0xe]
  42fc9b:	inc    eax
  42fc9c:	das    
  42fc9d:	cwde   
  42fc9e:	pop    eax
  42fc9f:	sar    BYTE PTR cs:[esi-0x25],0x23
  42fca4:	add    BYTE PTR [eax],al
  42fca6:	inc    ecx
  42fca7:	mov    ecx,0xa269b20c
  42fcac:	or     al,0xb2
  42fcae:	stc    
  42fcaf:	call   0xf073:0x795cc300
  42fcb6:	add    eax,0x4b737cab
  42fcbb:	mov    bh,0xe8
  42fcbd:	int    0x23
  42fcbf:	xor    cl,cl
  42fcc1:	sub    eax,0x147c5749
  42fcc6:	jecxz  0x42fc54
  42fcc8:	mov    ebp,0x10c2adff
  42fccd:	test   DWORD PTR [edi-0x56],ebp
  42fcd0:	sbb    BYTE PTR [ebx],cl
  42fcd2:	cdq    
  42fcd3:	inc    esp
  42fcd4:	and    DWORD PTR [ebx+0x14],eax
  42fcd7:	pop    ds
  42fcd8:	out    dx,eax
  42fcd9:	leave  
  42fcda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fcdb:	je     0x42fcfe
  42fcdd:	add    BYTE PTR [ebp-0x68],0xf0
  42fce1:	pop    ss
  42fce2:	xor    BYTE PTR ds:0xe6df947,dh
  42fce8:	shl    DWORD PTR [ebx],cl
  42fcea:	inc    esp
  42fceb:	test   al,0xd3
  42fced:	cli    
  42fcee:	inc    edx
  42fcef:	ror    DWORD PTR [esi],1
  42fcf1:	inc    eax
  42fcf2:	das    
  42fcf3:	cmp    al,0x87
  42fcf5:	mov    esi,0x8c774
  42fcfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fcfb:	inc    ebx
  42fcfc:	and    cl,BYTE PTR [ebx]
  42fcfe:	sar    DWORD PTR [ebp-0x21cf4086],0x99
  42fd05:	inc    ebx
  42fd06:	and    eax,0x9add4c
  42fd0b:	add    ch,bh
  42fd0d:	xchg   ebx,eax
  42fd0e:	pop    edi
  42fd0f:	aad    0x13
  42fd11:	pop    es
  42fd12:	mov    eax,ds:0xc2ea4917
  42fd17:	test   DWORD PTR [esi+ebp*8],0xbc1fc76c
  42fd1e:	pop    ss
  42fd1f:	jge    0x42fd44
  42fd21:	and    dl,dl
  42fd23:	ret    
  42fd24:	shl    BYTE PTR [eax-0x55],0xf
  42fd28:	mov    ch,bl
  42fd2a:	mov    es,WORD PTR [eax-0x57]
  42fd2d:	sub    cl,ah
  42fd2f:	pop    es
  42fd30:	std    
  42fd31:	push   es
  42fd32:	mov    dh,0xf
  42fd34:	cld    
  42fd35:	data16 or BYTE PTR [eax+0x440ee5ed],0x24
  42fd3d:	popa   
  42fd3e:	cli    
  42fd3f:	pop    es
  42fd40:	mov    al,0xe4
  42fd42:	out    0x52,al
  42fd44:	sbb    DWORD PTR [esi-0x18f5ace2],0x3024c96c
  42fd4e:	inc    eax
  42fd4f:	inc    ebp
  42fd50:	xor    dl,BYTE PTR [edx+ecx*2+0x27cd6268]
  42fd57:	xchg   DWORD PTR [eax-0x1a8314f6],ebx
  42fd5d:	in     eax,0x5e
  42fd5f:	cld    
  42fd60:	xor    BYTE PTR [edi],al
  42fd62:	sub    ecx,DWORD PTR [edi]
  42fd64:	fadd   QWORD PTR [ebp-0x6ccaf4e8]
  42fd6a:	mov    edx,0xe7da72dd
  42fd6f:	mov    BYTE PTR [eax],al
  42fd71:	add    BYTE PTR [edx+edi*4-0x1d],ch
  42fd75:	cmp    BYTE PTR [esi-0x1a],ch
  42fd78:	jbe    0x42fd8c
  42fd7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fd7b:	sbb    al,0xf0
  42fd7d:	call   0x9f43df52
  42fd82:	fsub   QWORD PTR [ecx+0x6f]
  42fd85:	in     eax,0x94
  42fd87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fd88:	or     bh,ah
  42fd8a:	je     0x42fdc1
  42fd8c:	mov    edi,0xbf5b2ce5
  42fd91:	bound  eax,QWORD PTR [edx+0xff9e69e]
  42fd97:	fiadd  WORD PTR [eax]
  42fd99:	(bad)  
  42fd9a:	xor    ebx,ebx
  42fd9c:	mov    esi,0xde5e7a72
  42fda1:	jmp    0xa93c90eb
  42fda6:	dec    edx
  42fda7:	jecxz  0x42fdae
  42fda9:	mov    eax,0xa8087b72
  42fdae:	dec    ecx
  42fdaf:	fild   DWORD PTR ds:0x8629f0ab
  42fdb5:	jge    0x42fe2f
  42fdb7:	pop    ebx
  42fdb8:	fdiv   DWORD PTR [edx+0x28]
  42fdbb:	xchg   cl,cl
  42fdbd:	jle    0x42fdd3
  42fdbf:	cwde   
  42fdc0:	cmp    ebp,DWORD PTR [ecx+eiz*2]
  42fdc3:	rcl    DWORD PTR [eax-0xb],cl
  42fdc6:	sub    eax,0x2f50c0c3
  42fdcb:	fld    QWORD PTR [eax]
  42fdcd:	jmp    0xd4c92d30
  42fdd2:	xor    al,0xfc
  42fdd4:	push   es
  42fdd5:	mov    al,0x0
  42fdd7:	add    BYTE PTR [ecx-0x5773127d],dh
  42fddd:	sbb    eax,DWORD PTR ds:0xf9978651
  42fde3:	ss mov eax,0x6d600909
  42fde9:	fiadd  WORD PTR [ebp-0x6679db4e]
  42fdef:	push   ds
  42fdf0:	mov    ah,0x97
  42fdf2:	xchg   DWORD PTR [edi-0x5d4e1acc],ebp
  42fdf8:	sub    BYTE PTR [ecx-0x31],bl
  42fdfb:	add    BYTE PTR [edi+0x0],al
  42fdfe:	add    al,cl
  42fe00:	daa    
  42fe01:	loop   0x42fdbb
  42fe03:	call   DWORD PTR [esi]
  42fe05:	fiadd  WORD PTR [eax]
  42fe07:	and    esp,DWORD PTR [esi]
  42fe09:	loope  0x42fdda
  42fe0b:	data16 jg 0x42fdbd
  42fe0e:	add    eax,0x9a0990f
  42fe13:	mov    esp,DWORD PTR [edi+0x3508e41a]
  42fe19:	sub    al,cl
  42fe1b:	loope  0x42fdfb
  42fe1d:	loopne 0x42fdee
  42fe1f:	pop    di
  42fe21:	scas   eax,DWORD PTR es:[edi]
  42fe22:	or     DWORD PTR [edi],ecx
  42fe24:	dec    ecx
  42fe25:	mov    al,ds:0x1aa78b0b
  42fe2a:	in     al,0x8
  42fe2c:	in     eax,0x2d
  42fe2e:	shl    ecx,0xbe
  42fe31:	loopne 0x42fe02
  42fe33:	imul   cx,WORD PTR [ebx]
  42fe37:	psubw  mm3,QWORD PTR [edi+0x8b0d]
  42fe3e:	mov    bh,0x1a
  42fe40:	in     al,0x8
  42fe42:	gs sub eax,0xe08ee1c1
  42fe48:	iret   
  42fe49:	imul   cx,WORD PTR ds:0xfa0990f
  42fe51:	mov    esi,DWORD PTR [edi]
  42fe53:	sbb    ah,ah
  42fe55:	or     BYTE PTR ds:0x4ee1c12a,dh
  42fe5b:	loopne 0x42fe2c
  42fe5d:	data16 fild QWORD PTR [esi-0x6026f0f1]
  42fe64:	adc    DWORD PTR [ebx+0x8e41a27],ecx
  42fe6a:	xor    eax,0x3ee1c12a
  42fe6f:	loopne 0x42fe40
  42fe71:	mov    di,0x11ae
  42fe75:	comiss xmm6,DWORD PTR [eax]
  42fe78:	retf   
  42fe79:	adc    eax,0xe544d5b4
  42fe7e:	daa    
  42fe7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fe80:	dec    ebp
  42fe81:	ror    BYTE PTR [esi],0x8f
  42fe84:	or     dl,cl
  42fe86:	xchg   ecx,eax
  42fe87:	dec    bh
  42fe89:	adc    eax,0x1bcac830
  42fe8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fe8f:	sbb    DWORD PTR [ecx],ecx
  42fe91:	xchg   esi,ebx
  42fe93:	inc    ebp
  42fe94:	push   0x7
  42fe96:	or     al,0x57
  42fe98:	cmp    eax,0x4e7c37e0
  42fe9d:	popa   
  42fe9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fe9f:	lock sbb BYTE PTR [ebp-0x350c0000],al
  42fea6:	daa    
  42fea7:	xchg   DWORD PTR [edx-0x49],ecx
  42feaa:	jmp    0x42feb2
  42feac:	data16 cld 
  42feae:	jae    0x42fe9e
  42feb0:	xchg   edx,eax
  42feb1:	or     ecx,DWORD PTR [eax+ebp*8]
  42feb4:	shl    BYTE PTR [eax+0x77],1
  42feb7:	cli    
  42feb8:	mov    ah,0xf1
  42feba:	adc    al,0x89
  42febc:	sub    esp,edi
  42febe:	retf   
  42febf:	add    eax,DWORD PTR [edi-0x6f05898c]
  42fec5:	or     eax,0xbbb403bf
  42feca:	sub    al,0xe8
  42fecc:	push   0xa6fa7800
  42fed1:	inc    eax
  42fed2:	and    eax,0xd88efa87
  42fed7:	xchg   BYTE PTR [ecx+0x48],dh
  42feda:	fcomp  QWORD PTR [ebp+ebp*2-0x4e]
  42fede:	std    
  42fedf:	push   esp
  42fee0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fee1:	sub    cl,dh
  42fee3:	push   ecx
  42fee4:	mov    ds:0xd5500539,al
  42fee9:	jle    0x42ff63
  42feeb:	je     0x42ff24
  42feed:	xchg   esp,eax
  42feee:	outs   dx,DWORD PTR ds:[esi]
  42feef:	cli    
  42fef0:	and    bl,dh
  42fef2:	mov    edx,DWORD PTR [ebx]
  42fef4:	out    dx,eax
  42fef5:	frstor [esp+eax*2-0x64]
  42fef9:	rcl    DWORD PTR [edx],1
  42fefb:	out    dx,eax
  42fefc:	sub    BYTE PTR [esi-0x6fe4bb43],al
  42ff02:	outs   dx,BYTE PTR ds:[esi]
  42ff03:	je     0x42feb0
  42ff05:	mov    BYTE PTR [ebx+0x21],dh
  42ff08:	add    BYTE PTR [eax],al
  42ff0a:	mov    BYTE PTR [ecx],dl
  42ff0c:	in     al,0x3
  42ff0e:	jnp    0x42fece
  42ff10:	pop    esp
  42ff11:	mov    edi,0x4e2ef4
  42ff16:	hlt    
  42ff17:	or     esp,ebp
  42ff19:	in     eax,dx
  42ff1a:	xor    al,0x8f
  42ff1c:	pop    esp
  42ff1d:	or     al,0xe4
  42ff1f:	jmp    0xdeb2128b
  42ff24:	ins    BYTE PTR es:[edi],dx
  42ff25:	inc    ebx
  42ff26:	pop    ebx
  42ff27:	out    0x11,al
  42ff29:	ins    BYTE PTR es:[edi],dx
  42ff2a:	adc    bh,0xb1
  42ff2d:	js     0x42ff40
  42ff2f:	mov    BYTE PTR [edx-0x370cf12],ch
  42ff35:	inc    ebx
  42ff36:	and    bl,BYTE PTR [esi]
  42ff38:	call   0xa1736dc9
  42ff3d:	inc    ebp
  42ff3e:	sub    dh,bl
  42ff40:	xor    al,0x8d
  42ff42:	test   BYTE PTR [ebx-0x6d],bl
  42ff45:	pop    ss
  42ff46:	std    
  42ff47:	es mov bh,0x78
  42ff4a:	fld    QWORD PTR [ebx]
  42ff4c:	in     al,dx
  42ff4d:	js     0x42ff6a
  42ff4f:	push   ss
  42ff50:	(bad)  
  42ff51:	ret    
  42ff52:	js     0x42ffb8
  42ff54:	push   edi
  42ff55:	test   BYTE PTR [eax-0x71],ch
  42ff58:	push   ds
  42ff59:	je     0x42ff37
  42ff5b:	enter  0xbe64,0x4c
  42ff5f:	cs mov dl,0x40
  42ff62:	repz jns 0x42ff48
  42ff65:	add    ebp,DWORD PTR [edi]
  42ff67:	fidivr WORD PTR [edx]
  42ff69:	push   cs
  42ff6a:	push   edi
  42ff6b:	in     eax,dx
  42ff6c:	add    BYTE PTR [ecx+0x772c0000],ch
  42ff72:	adc    al,0x62
  42ff74:	jns    0x42fff5
  42ff76:	xor    eax,0x924ac
  42ff7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ff7c:	mov    cl,0x19
  42ff7e:	in     eax,0xb9
  42ff80:	(bad)  
  42ff81:	xchg   ebx,eax
  42ff82:	adc    edi,ebp
  42ff84:	ds push ds
  42ff86:	add    DWORD PTR [esp+ebp*2+0xa],ebp
  42ff8a:	jmp    0xc12d8726
  42ff8f:	fucomi st,st(4)
  42ff91:	mov    es,WORD PTR [esi-0x37cb28da]
  42ff97:	stos   DWORD PTR es:[edi],eax
  42ff98:	das    
  42ff99:	ficom  WORD PTR [ebx+0x72]
  42ff9c:	push   edi
  42ff9d:	adc    ch,ch
  42ff9f:	icebp  
  42ffa0:	std    
  42ffa1:	popa   
  42ffa2:	inc    ebx
  42ffa3:	rol    DWORD PTR [ebx],1
  42ffa5:	rcl    ch,0x1a
  42ffa8:	(bad)
  42ffab:	aam    0xc0
  42ffad:	in     eax,dx
  42ffae:	inc    eax
  42ffaf:	jmp    0x3d569390
  42ffb4:	and    ebx,DWORD PTR [esi]
  42ffb6:	add    DWORD PTR [ebx+ebp*2+0xa],ebp
  42ffba:	adc    ebp,DWORD PTR [esi+ebp*2-0x7a]
  42ffbe:	push   eax
  42ffbf:	add    ecx,DWORD PTR [ebx-0x8]
  42ffc2:	stc    
  42ffc3:	mov    ?,WORD PTR [esi]
  42ffc5:	cli    
  42ffc6:	adc    BYTE PTR [ecx],ch
  42ffc8:	sub    ebx,DWORD PTR [ecx-0x40]
  42ffcb:	hlt    
  42ffcc:	mov    al,al
  42ffce:	rol    BYTE PTR [edx+0x7d436177],0x0
  42ffd5:	add    BYTE PTR [ebx-0x6d],ah
  42ffd8:	jae    0x42ffcb
  42ffda:	xor    DWORD PTR [edx],ebx
  42ffdc:	jmp    0x1212cc9
  42ffe1:	mov    edx,0xebf51a21
  42ffe6:	sub    al,0xde
  42ffe8:	add    BYTE PTR [eax],al
  42ffea:	jmp    0x965378db
  42ffef:	fiadd  DWORD PTR [ebx+0x49b982c0]
  42fff5:	push   ebx
  42fff6:	xchg   ebp,eax
  42fff7:	gs inc esp
  42fff9:	call   0x7639ab74
  42fffe:	dec    esi
  42ffff:	adc    eax,0xa2267c15
  430004:	stc    
  430005:	test   BYTE PTR [esi-0x72],al
  430008:	add    eax,0x9f1f3ff
  43000d:	inc    eax
  43000e:	push   ss
  43000f:	pop    edi
  430010:	mov    ecx,0x511475
  430015:	inc    DWORD PTR [ebx-0x39ea08f7]
  43001b:	out    dx,eax
  43001c:	inc    eax
  43001d:	add    BYTE PTR [eax+eiz*1+0x53],bl
  430021:	leave  
  430022:	xchg   esp,eax
  430023:	(bad)  
  430024:	stc    
  430025:	push   esp
  430026:	dec    ebp
  430027:	add    eax,0x57355151
  43002c:	inc    esp
  43002d:	clc    
  43002e:	es js  0x430032
  430031:	push   0x79
  430033:	rcl    cl,1
  430035:	jmp    ebx
  430037:	lods   eax,DWORD PTR ds:[esi]
  430038:	or     DWORD PTR [eax+0x0],eax
  43003b:	add    dh,al
  43003d:	pop    esi
  43003e:	mov    ecx,0xf95d120f
  430043:	call   DWORD PTR [esi+0x63d829c]
  430049:	icebp  
  43004a:	inc    eax
  43004b:	add    BYTE PTR [ebx],bl
  43004d:	sahf   
  43004e:	cmc    
  43004f:	push   eax
  430050:	and    eax,0xf91963b1
  430055:	(bad)  
  430056:	icebp  
  430057:	jmp    DWORD PTR [ecx+0x5475b95e]
  43005d:	adc    al,0x15
  43005f:	adc    BYTE PTR [ebp-0x5f],ah
  430062:	stc    
  430063:	sub    BYTE PTR [edi],0x2f
  430066:	clc    
  430067:	je     0x430039
  430069:	inc    eax
  43006b:	sti    
  43006c:	adc    al,0xb8
  43006e:	jmp    0xbc71e1d2
  430073:	add    DWORD PTR [ecx-0x2c],eax
  430076:	xchg   bh,ch
  430078:	hlt    
  430079:	(bad)  
  43007a:	jmp    0x717da2cd
  43007f:	dec    edi
  430080:	sub    BYTE PTR [edx+0x71],dh
  430083:	push   ecx
  430084:	xchg   ebp,eax
  430085:	mov    ?,WORD PTR [edx+0x74]
  430088:	pop    ss
  430089:	fmul   QWORD PTR [edx-0x7c]
  43008c:	out    dx,eax
  43008d:	or     bh,BYTE PTR [eax]
  43008f:	sti    
  430090:	inc    ecx
  430091:	mov    WORD PTR [ecx],cs
  430093:	jo     0x4300b4
  430095:	aaa    
  430096:	std    
  430097:	ss in  al,dx
  430099:	adc    ah,BYTE PTR [esi+eax*4]
  43009c:	das    
  43009d:	sar    DWORD PTR [edi],0x71
  4300a0:	add    BYTE PTR [eax],al
  4300a2:	pop    ss
  4300a3:	jl     0x430050
  4300a5:	mov    edi,0x3173c777
  4300aa:	fcom   DWORD PTR [ecx+0x776f0fe5]
  4300b0:	cmp    BYTE PTR [edi-0x774bbd],bh
  4300b6:	add    esi,DWORD PTR [edi+0x1d]
  4300b9:	add    BYTE PTR [edi],ch
  4300bb:	enter  0xaf00,0x2e
  4300bf:	jo     0x4300c7
  4300c1:	cmp    eax,0xfffda72f
  4300c6:	inc    ebp
  4300c7:	push   eax
  4300c8:	test   BYTE PTR [esi+0x1f6cd52c],bh
  4300ce:	sub    DWORD PTR [ebp+0x73],esp
  4300d1:	pop    ecx
  4300d2:	mov    BYTE PTR [ecx+0x371afa75],dl
  4300d8:	push   cs
  4300d9:	inc    eax
  4300da:	das    
  4300db:	fadd   QWORD PTR [esi+0x30ddd4be]
  4300e1:	inc    ecx
  4300e2:	add    ebx,DWORD PTR [ecx+0x4b]
  4300e5:	shl    ecx,cl
  4300e7:	add    dl,BYTE PTR [esp+eax*1-0x39]
  4300eb:	xchg   ecx,eax
  4300ec:	call   0x3a97:0xdc8b50c3
  4300f3:	push   ds
  4300f4:	call   0x8548177
  4300f9:	in     al,dx
  4300fa:	adc    BYTE PTR [ebp-0x59],bl
  4300fd:	add    ebx,edi
  4300ff:	mov    esp,?
  430101:	outs   dx,DWORD PTR ds:[esi]
  430102:	cmp    bl,BYTE PTR [esi]
  430104:	call   0xe0430187
  430109:	adc    bh,al
  43010b:	xchg   BYTE PTR [ebx-0x76],ch
  43010e:	mov    eax,0x178c15e9
  430113:	jg     0x4300dd
  430115:	adc    esp,esp
  430117:	xor    edi,ebp
  430119:	xchg   ebp,eax
  43011a:	cmp    DWORD PTR es:[ebx-0x76],0x9e9a04e7
  430122:	mov    al,0x40
  430124:	adc    DWORD PTR [edi-0x35],0xffffff80
  430128:	aam    0x26
  43012a:	cmp    dh,BYTE PTR [ecx]
  43012c:	out    0xcf,al
  43012e:	rcr    ebp,1
  430130:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430131:	sbb    esp,eax
  430133:	cmp    ch,ch
  430135:	adc    esi,ebx
  430137:	jmp    0xac6f5aa8
  43013c:	pop    esi
  43013d:	cs stos DWORD PTR es:[edi],eax
  43013f:	push   cs
  430140:	pop    edi
  430141:	hlt    
  430142:	daa    
  430143:	add    al,0x28
  430145:	mov    ds:0x35eb3ceb,al
  43014a:	sub    eax,DWORD PTR [edi+ebp*1]
  43014d:	ficomp WORD PTR [esi+edi*4-0x38]
  430151:	pop    ecx
  430152:	xor    al,0x78
  430154:	inc    edi
  430155:	adc    eax,esi
  430157:	out    dx,eax
  430158:	sbb    DWORD PTR [eax+0x0],0x53592b24
  43015f:	jge    0x4301bf
  430161:	sbb    edi,edx
  430163:	fdiv   QWORD PTR [eax]
  430165:	xor    BYTE PTR [ecx-0x17],ch
  430168:	sub    al,0xde
  43016a:	add    al,0xbf
  43016c:	add    BYTE PTR [eax],al
  43016e:	push   0x2d
  430170:	push   eax
  430171:	mov    bh,0xdb
  430173:	icebp  
  430174:	aam    0xdb
  430176:	ins    BYTE PTR es:[edi],dx
  430177:	mov    eax,DWORD PTR [ecx+ebp*1-0x43c83eb0]
  43017e:	sbb    al,0x12
  430180:	adc    ebx,eax
  430182:	sbb    al,0x59
  430184:	inc    ebx
  430185:	adc    eax,0xf97387fc
  43018a:	xchg   esp,eax
  43018b:	aas    
  43018c:	add    edx,DWORD PTR [edi]
  43018e:	mov    ds:0x10e1084,eax
  430193:	jnp    0x43011a
  430195:	mov    esp,0xe940d96c
  43019a:	jnp    0x430149
  43019c:	stc    
  43019d:	jl     0x43012f
  43019f:	mov    dl,dl
  4301a1:	bound  esi,QWORD PTR [ecx+0x21ebe58e]
  4301a7:	sahf   
  4301a8:	pop    edx
  4301a9:	mov    al,0x69
  4301ab:	xlat   BYTE PTR ds:[ebx]
  4301ac:	add    BYTE PTR [eax+ebx*2],bh
  4301af:	ja     0x430203
  4301b1:	sbb    dl,BYTE PTR [ebp+0x5a]
  4301b4:	inc    ebx
  4301b5:	cmc    
  4301b6:	sbb    edx,DWORD PTR [ecx]
  4301b8:	or     eax,0x73871834
  4301bd:	loope  0x430193
  4301bf:	ror    BYTE PTR [ecx-0x16d1d4d7],cl
  4301c5:	push   ds
  4301c6:	and    BYTE PTR [edx-0x29089507],cl
  4301cc:	in     eax,0xfd
  4301ce:	sbb    eax,0x8e0d12
  4301d3:	add    BYTE PTR [esi+0x5a0068e2],dl
  4301d9:	pop    edi
  4301da:	cmp    DWORD PTR [eax],eax
  4301dc:	sub    ah,BYTE PTR es:[ecx-0xd]
  4301e0:	add    ecx,DWORD PTR [edi]
  4301e2:	jnp    0x4301a8
  4301e4:	push   esi
  4301e5:	mov    ebx,0xf2d7ebe
  4301ea:	jne    0x430204
  4301ec:	fst    QWORD PTR [ebp+ecx*1-0xa118401]
  4301f3:	jne    0x430267
  4301f5:	es sub bh,bh
  4301f8:	icebp  
  4301f9:	push   cs
  4301fa:	div    DWORD PTR [ebp+0x52]
  4301fd:	or     ebp,edx
  4301ff:	call   0x39d7fc
  430204:	int    0x17
  430206:	pop    eax
  430207:	pop    ebp
  430208:	push   esp
  430209:	out    0x0,al
  43020b:	push   ebp
  43020c:	popf   
  43020d:	(bad)  
  43020e:	jp     0x4301fc
  430210:	scas   al,BYTE PTR es:[edi]
  430211:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430212:	sub    bh,bh
  430214:	scas   al,BYTE PTR es:[edi]
  430215:	mov    cl,0x86
  430217:	inc    eax
  430218:	push   ss
  430219:	or     edi,DWORD PTR [ebp-0x10]
  43021c:	add    edi,esp
  43021e:	cmp    al,0x11
  430220:	(bad)  
  430221:	fld    QWORD PTR [edi-0x424705bb]
  430227:	cvtps2pd xmm2,QWORD PTR [esi]
  43022a:	cli    
  43022b:	call   esi
  43022d:	mov    al,0x4f
  43022f:	mov    edi,DWORD PTR [ebx]
  430231:	push   es
  430232:	or     al,0x40
  430234:	(bad)  
  430235:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430236:	pop    ecx
  430237:	pop    DWORD PTR [eax]
  430239:	add    BYTE PTR [esi],dl
  43023b:	loop   0x43028d
  43023d:	call   FWORD PTR [eax+0x68f71a5]
  430243:	loop   0x43023a
  430245:	jne    0x4302c1
  430247:	or     dl,dl
  430249:	(bad)  
  43024a:	call   0x8e2f4759
  43024f:	sub    al,0x7
  430251:	test   BYTE PTR [edi],ch
  430253:	add    al,0xfe
  430255:	jmp    FWORD PTR [edi]
  430257:	lods   al,BYTE PTR ds:[esi]
  430258:	inc    esi
  430259:	or     dh,BYTE PTR [ebx+0x2ffffe0c]
  43025f:	lock ins DWORD PTR es:[edi],dx
  430261:	je     0x43028a
  430263:	add    cl,cl
  430265:	neg    edi
  430267:	std    
  430268:	lock imul DWORD PTR [eax-0x3c]
  43026c:	mov    BYTE PTR [edi+0x7c7c73da],bh
  430272:	push   edi
  430273:	popf   
  430274:	rcr    DWORD PTR [ecx+0x1c],0xb7
  430278:	xlat   BYTE PTR ds:[ebx]
  430279:	popa   
  43027a:	mov    dh,0x3a
  43027c:	imul   ecx,DWORD PTR [edx+ebp*8+0x384fd6fe],0xef11cdaa
  430287:	jbe    0x430303
  430289:	dec    esp
  43028a:	cmp    esi,esp
  43028c:	inc    ecx
  43028d:	or     esi,DWORD PTR [esi-0x65777a8f]
  430293:	pop    ss
  430294:	sub    ecx,ebx
  430296:	call   0xc912:0xb4c8074
  43029d:	fild   DWORD PTR [eax]
  43029f:	add    BYTE PTR [edi-0x6],bl
  4302a2:	enter  0x5f97,0xfc
  4302a6:	enter  0x58f7,0x67
  4302aa:	jbe    0x430283
  4302ac:	inc    esp
  4302ad:	aaa    
  4302ae:	and    DWORD PTR [eax],eax
  4302b0:	sub    esi,DWORD PTR [edi-0x3]
  4302b3:	or     al,0x2f
  4302b5:	ja     0x4302b4
  4302b7:	add    edi,DWORD PTR [edi-0x30]
  4302ba:	xlat   BYTE PTR ds:[ebx]
  4302bb:	push   edx
  4302bc:	pop    esi
  4302bd:	call   0x487a7731
  4302c2:	adc    DWORD PTR [edi+ebx*1-0x49],esi
  4302c6:	add    al,0x85
  4302c8:	out    dx,eax
  4302c9:	rcl    BYTE PTR [esi],cl
  4302cb:	sti    
  4302cc:	and    bl,dh
  4302ce:	xchg   DWORD PTR [ebp+0x5b],edi
  4302d1:	sahf   
  4302d2:	cmc    
  4302d3:	ret    
  4302d4:	cwde   
  4302d5:	xchg   DWORD PTR [ecx-0x7555e48f],edi
  4302db:	pop    edx
  4302dc:	mov    cl,0x22
  4302de:	mov    WORD PTR [ebx-0x15],?
  4302e1:	(bad)  
  4302e2:	shr    dh,0x80
  4302e5:	adc    edx,ebp
  4302e7:	jo     0x4302e4
  4302e9:	test   DWORD PTR [edx-0x29],ebp
  4302ec:	push   esp
  4302ed:	mov    ah,bl
  4302ef:	ja     0x430356
  4302f1:	repnz jecxz 0x430308
  4302f4:	out    dx,eax
  4302f5:	fnsave [ecx+0x5822a9cc]
  4302fb:	shl    DWORD PTR [edi-0x65],1
  4302fe:	out    dx,eax
  4302ff:	add    ebp,DWORD PTR [eax+0xd8e41f]
  430305:	add    BYTE PTR [ecx-0x10e9d836],dh
  43030b:	frstor [esp+eax*2-0x64]
  43030f:	(bad)  [edi-0x1eac0290]
  430315:	xchg   al,bl
  430317:	adc    ah,bh
  430319:	rcl    DWORD PTR ds:0x5d137db0,cl
  43031f:	jbe    0x430337
  430321:	or     BYTE PTR ds:0x63449a88,al
  430327:	push   ebx
  430328:	add    edi,DWORD PTR [edi+0x6b]
  43032b:	out    dx,al
  43032c:	xchg   edi,eax
  43032d:	fucomp st(0)
  43032f:	mov    BYTE PTR [esp+edx*1-0x1c],bl
  430333:	adc    esp,ebp
  430335:	jo     0x43039a
  430337:	(bad)  
  430338:	cmp    eax,0x3f1d404
  43033d:	adc    eax,0x436cde6f
  430342:	cmp    al,0xda
  430344:	pop    ss
  430345:	jno    0x43036a
  430347:	sahf   
  430348:	add    bl,bl
  43034a:	in     al,dx
  43034b:	xchg   DWORD PTR [esi-0x180bcdc],eax
  430351:	fldlg2 
  430353:	sub    DWORD PTR [edi-0x79ced313],edi
  430359:	test   DWORD PTR [ebp+0x2cea7073],ebp
  43035f:	ficom  WORD PTR [edx+0x1e]
  430362:	add    BYTE PTR [edx-0x4],ah
  430365:	jg     0x430366
  430367:	adc    DWORD PTR [eax+0x76],0x0
  43036b:	add    BYTE PTR [ecx-0x21],bh
  43036e:	stc    
  43036f:	aam    0x68
  430371:	repnz inc eax
  430373:	jmp    0x603f6559
  430378:	fild   WORD PTR [ebx+0x5774b950]
  43037e:	mov    DWORD PTR [ecx-0x1493bcd4],ebp
  430384:	sub    al,0xde
  430386:	mov    esi,DWORD PTR [esp+ebx*4-0x7d]
  43038a:	stc    
  43038b:	ss aam 0x5d
  43038e:	out    dx,eax
  43038f:	sub    al,0x9f
  430391:	or     ch,al
  430393:	cmc    
  430394:	jmp    DWORD PTR [esp+eax*4]
  430397:	sub    DWORD PTR [esi],ebx
  430399:	jmp    0x430326
  43039b:	ins    BYTE PTR es:[edi],dx
  43039c:	mov    esp,0xdc0ef982
  4303a1:	jle    0x4303ad
  4303a3:	jmp    0x29c7e1d4
  4303a8:	add    bl,bl
  4303aa:	mov    al,0xe8
  4303ac:	push   ebx
  4303ad:	mov    DWORD PTR [edi],ebp
  4303af:	sub    DWORD PTR ds:0x7e90449,esp
  4303b5:	pusha  
  4303b6:	in     al,dx
  4303b7:	push   0xe903f34f
  4303bc:	sub    al,0x17
  4303be:	push   edx
  4303bf:	pop    esp
  4303c0:	mov    dh,0x4a
  4303c2:	sti    
  4303c3:	add    cl,ch
  4303c5:	test   BYTE PTR [ecx+0x68],0x42
  4303c9:	pop    es
  4303ca:	cmp    al,BYTE PTR [eax]
  4303cc:	out    dx,al
  4303cd:	or     bl,ah
  4303cf:	inc    DWORD PTR [eax]
  4303d1:	add    cl,bl
  4303d3:	push   ebp
  4303d4:	mov    ecx,0xfa27120f
  4303d9:	inc    DWORD PTR [esi-0x454f7ba3]
  4303df:	div    dh
  4303e1:	push   eax
  4303e2:	jmp    0x430438
  4303e4:	lods   eax,DWORD PTR ds:[esi]
  4303e5:	std    
  4303e6:	test   eax,0x63ff49f6
  4303eb:	xchg   BYTE PTR [eax+eax*2],dl
  4303ee:	xchg   BYTE PTR [ebp-0x7c],bl
  4303f1:	mov    al,0xda
  4303f3:	div    dh
  4303f5:	push   eax
  4303f6:	leave  
  4303f7:	test   BYTE PTR [ecx],al
  4303f9:	lea    edx,[ebx-0x36439e7e]
  4303ff:	mov    eax,ds:0x15ee4ff9
  430404:	icebp  
  430405:	std    
  430406:	jmp    0xc553c165
  43040b:	stc    
  43040c:	test   BYTE PTR [edi],0xc2
  43040f:	(bad)  
  430410:	stc    
  430411:	call   DWORD PTR [esi]
  430413:	mov    dl,0xf6
  430415:	jne    0x430435
  430417:	pop    edi
  430418:	test   BYTE PTR [ebx+edi*1+0x2e50f6f5],dh
  43041f:	jns    0x430401
  430421:	(bad)  
  430422:	cmp    ebp,esi
  430424:	je     0x43042e
  430426:	jl     0x43043a
  430428:	loop   0x430405
  43042a:	add    al,0xf4
  43042c:	test   BYTE PTR [ebp+ebx*1-0x2976827b],0xe1
  430434:	add    BYTE PTR [ebp+0x4d530000],cl
  43043a:	cld    
  43043b:	(bad)  
  43043c:	stc    
  43043d:	mov    cl,0x61
  43043f:	fsubr  QWORD PTR [edi]
  430441:	cld    
  430442:	mov    ebp,0x4a585ff
  430447:	add    BYTE PTR [edi],ch
  430449:	or     dh,BYTE PTR [ecx+0x6a44b593]
  43044f:	out    0x36,eax
  430451:	inc    edi
  430452:	jo     0x43044e
  430454:	push   es
  430455:	out    dx,al
  430456:	jge    0x43044f
  430458:	mov    al,ds:0x3367e2bd
  43045d:	jbe    0x43045c
  43045f:	jmp    DWORD PTR [edx-0x77034e0e]
  430465:	push   esp
  430466:	int    0x67
  430468:	xchg   ebx,eax
  430469:	or     al,0xbe
  43046b:	(bad)  
  43046c:	jns    0x430418
  43046e:	popa   
  43046f:	adc    bh,ch
  430471:	jbe    0x430428
  430473:	cmp    al,0x2d
  430475:	jbe    0x430474
  430477:	(bad)  
  430478:	fdiv   DWORD PTR [ebx]
  43047a:	xlat   BYTE PTR ds:[ebx]
  43047b:	inc    ebx
  43047c:	sbb    al,0x24
  43047e:	add    DWORD PTR [ebx+edx*4+0x44],0x4722facd
  430486:	adc    eax,DWORD PTR [eax+0x2f]
  430489:	clc    
  43048a:	inc    ecx
  43048b:	or     edi,esp
  43048d:	mov    dh,0xe3
  43048f:	mov    dl,ch
  430491:	sbb    dl,bl
  430493:	mov    WORD PTR [edx-0xd],?
  430496:	int    0x52
  430498:	mov    dl,0xf1
  43049a:	xchg   ecx,eax
  43049b:	cmc    
  43049c:	add    BYTE PTR [eax],al
  43049e:	sbb    ah,ah
  4304a0:	int    0x8c
  4304a2:	stos   BYTE PTR es:[edi],al
  4304a3:	and    dh,BYTE PTR [ecx-0x6]
  4304a6:	or     BYTE PTR [edi+0x42],al
  4304a9:	inc    esp
  4304aa:	ret    
  4304ab:	xor    bh,ch
  4304ad:	jmp    FWORD PTR [edi]
  4304af:	mov    esp,0x772ee7c8
  4304b4:	std    
  4304b5:	call   edi
  4304b7:	jle    0x430529
  4304b9:	cli    
  4304ba:	loopne 0x430499
  4304bc:	fimul  DWORD PTR [ecx+eax*2-0x62]
  4304c0:	ror    BYTE PTR [ecx+ecx*8-0x2d],cl
  4304c4:	xchg   DWORD PTR fs:[edx+eax*4-0x36],edi
  4304c9:	ins    DWORD PTR es:[edi],dx
  4304ca:	jo     0x430542
  4304cc:	add    ch,BYTE PTR [esi-0x45]
  4304cf:	test   ch,dh
  4304d1:	inc    ebx
  4304d2:	push   ebp
  4304d3:	sub    DWORD PTR [ecx+0x14de2c42],esp
  4304d9:	jns    0x43046f
  4304db:	pop    esi
  4304dc:	xchg   ebx,eax
  4304dd:	test   BYTE PTR [ebx],dh
  4304df:	fsubrp st(7),st
  4304e1:	aad    0xfd
  4304e3:	div    edi
  4304e5:	(bad)  [eax-0x7a93a0d1]
  4304eb:	jmp    0x4866:0xddef1617
  4304f2:	and    al,0x5e
  4304f4:	hlt    
  4304f5:	sti    
  4304f6:	push   0xe380b409
  4304fb:	shl    edi,1
  4304fd:	test   DWORD PTR ds:0xf85a5b,0xdc853100
  430507:	push   DWORD PTR [ecx+0x36a33f9c]
  43050d:	test   BYTE PTR [edx+0x7b],al
  430510:	repz and DWORD PTR [esp+eax*2-0x4a],0xa36c9aef
  430519:	sar    BYTE PTR [edi],cl
  43051b:	int    0x22
  43051d:	and    BYTE PTR [edx],0x79
  430520:	or     BYTE PTR [esi-0x64],dl
  430523:	jmp    FWORD PTR [ebx+0x59bb9c8c]
  430529:	sahf   
  43052a:	add    BYTE PTR [ebx-0x3187c00],ch
  430530:	mov    esi,0x7cbbf019
  430535:	aam    0x0
  430537:	mov    eax,ds:0xa48b78e1
  43053c:	loopne 0x430551
  43053e:	imul   esi,DWORD PTR [eax-0x2dff21d4],0xe54352d5
  430548:	fdiv   st(3),st
  43054a:	(bad)  
  43054b:	jmp    0x9a2be37c
  430550:	and    al,0x88
  430552:	stc    
  430553:	jb     0x430591
  430555:	pop    edx
  430556:	repnz cmp eax,0xdd435c03
  43055c:	jp     0x4305d9
  43055e:	dec    ecx
  43055f:	test   DWORD PTR [edx],0x1f248788
  430565:	pop    edx
  430566:	rcl    BYTE PTR [esi],0x0
  430569:	add    BYTE PTR [ebx+0x2d4be92d],cl
  43056f:	mov    cl,bh
  430571:	xchg   edx,eax
  430572:	les    edx,FWORD PTR [edx-0x45]
  430575:	imul   eax,DWORD PTR [esi],0x9181f988
  43057b:	sar    dl,cl
  43057d:	outs   dx,BYTE PTR ds:[esi]
  43057e:	xchg   BYTE PTR [ebx-0x7a429374],al
  430584:	stc    
  430585:	pop    esi
  430586:	jl     0x4305e4
  430588:	inc    ebx
  430589:	in     eax,0x27
  43058b:	sbb    ebp,edi
  43058d:	bound  eax,QWORD PTR [edx]
  43058f:	jnp    0x4305aa
  430591:	adc    esi,DWORD PTR [ebx]
  430593:	fiadd  WORD PTR [ebp-0x2fe4abf]
  430599:	ins    BYTE PTR es:[edi],dx
  43059a:	fwait
  43059b:	bswap  ebx
  43059d:	imul   edx,DWORD PTR [ecx],0x337200db
  4305a3:	pop    ebx
  4305a4:	inc    eax
  4305a5:	std    
  4305a6:	xchg   ebp,eax
  4305a7:	test   BYTE PTR [ebp-0x8],ch
  4305aa:	fwait
  4305ab:	shr    al,1
  4305ad:	mov    ebp,DWORD PTR ds:0x9900f988
  4305b3:	es push esi
  4305b5:	add    eax,esi
  4305b7:	idiv   BYTE PTR [edx+0x65]
  4305ba:	loop   0x43059b
  4305bc:	push   0xdecb78
  4305c1:	lea    ecx,[ebx+0x5a]
  4305c4:	repz push ecx
  4305c7:	mov    ds:0xece14ff9,eax
  4305cc:	push   eax
  4305cd:	push   ss
  4305ce:	add    BYTE PTR [eax],al
  4305d0:	push   ss
  4305d1:	fiadd  DWORD PTR [ecx-0x42a43dbb]
  4305d7:	or     al,0x16
  4305d9:	mov    al,0x63
  4305db:	add    cl,BYTE PTR [edi]
  4305dd:	fwait
  4305de:	add    DWORD PTR [ebp-0x76a721a3],ecx
  4305e4:	xor    eax,0xdaece186
  4305e9:	div    dh
  4305eb:	mov    ebx,DWORD PTR [ebx-0xa]
  4305ee:	push   esi
  4305ef:	pop    esi
  4305f0:	iret   
  4305f1:	sbb    eax,DWORD PTR [edx]
  4305f3:	add    BYTE PTR [ecx-0x7317fa71],dh
  4305f9:	fdecstp 
  4305fb:	jmp    FWORD PTR [edx+ebp*8]
  4305fe:	bound  eax,QWORD PTR [eax]
  430600:	cmp    bh,dh
  430602:	adc    al,0x50
  430604:	pop    eax
  430605:	sahf   
  430606:	stc    
  430607:	or     BYTE PTR [edx],0x86
  43060a:	mov    edx,0x1d8dcd56
  43060f:	or     ch,cl
  430611:	inc    edi
  430612:	xor    eax,0x499e888d
  430617:	mov    cl,BYTE PTR [eax-0xb17b14a]
  43061d:	fld    QWORD PTR [eax]
  43061f:	add    BYTE PTR [eax+0x5000ea25],bh
  430625:	cmc    
  430626:	sub    al,al
  430628:	rcr    BYTE PTR [ebx],1
  43062a:	(bad)  
  43062b:	jmp    FWORD PTR [edi]
  43062d:	inc    edx
  43062e:	jp     0x43061b
  430630:	pop    esi
  430631:	inc    esi
  430632:	jp     0x430635
  430634:	add    BYTE PTR [eax],al
  430636:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430637:	test   DWORD PTR [eax+eax*1+0x52d2772f],0x8cf602e8
  430642:	or     BYTE PTR [edi+0x7728c055],0xfd
  430649:	sub    edi,0x2b
  43064c:	xor    edi,ebx
  43064e:	inc    edx
  43064f:	stos   DWORD PTR es:[edi],eax
  430650:	jp     0x430613
  430652:	shr    BYTE PTR [edx],0x6d
  430655:	cli    
  430656:	inc    edx
  430657:	mov    edx,DWORD PTR [ebp-0x37]
  43065a:	das    
  43065b:	ja     0x43065a
  43065d:	cli    
  43065e:	and    cl,BYTE PTR [edi+0x7a]
  430661:	not    DWORD PTR [edi-0x670601fb]
  430667:	or     al,0x0
  430669:	xchg   edx,esp
  43066b:	mov    ?,WORD PTR [edx+0x7f]
  43066e:	scas   eax,DWORD PTR es:[edi]
  43066f:	jbe    0x43066e
  430671:	(bad)  
  430672:	fcomp  DWORD PTR [esi+0x61]
  430675:	or     ch,BYTE PTR [edi]
  430677:	ja     0x4306ab
  430679:	shr    BYTE PTR [edx+0x6f9af700],0xe8
  430680:	leave  
  430681:	enter  0x7f6d,0xfd
  430685:	push   esp
  430686:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430687:	sub    eax,DWORD PTR [ebx+0x7a441feb]
  43068d:	xlat   BYTE PTR ds:[ebx]
  43068e:	cmp    BYTE PTR [ecx+0x42],ah
  430691:	inc    edi
  430692:	fld    DWORD PTR [edi+0x7a]
  430695:	lock ret 
  430697:	lea    esi,[ebp+0x25000074]
  43069d:	mov    ecx,0x1c95fbc0
  4306a2:	cli    
  4306a3:	shr    DWORD PTR [edx-0x4d],0xd5
  4306a7:	gs das 
  4306a9:	fisub  WORD PTR [edx]
  4306ab:	lock adc al,0x53
  4306ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4306af:	push   ebx
  4306b0:	xchg   edx,eax
  4306b1:	fdivp  st(7),st
  4306b3:	push   cs
  4306b4:	or     al,0x80
  4306b6:	or     bh,BYTE PTR [esi+0x2e]
  4306b9:	push   ebp
  4306ba:	sub    DWORD PTR [bx],0xffffffde
  4306be:	out    0x78,eax
  4306c0:	jnp    0x430670
  4306c2:	cwde   
  4306c3:	push   0x5b
  4306c5:	shr    dl,cl
  4306c7:	out    dx,eax
  4306c8:	xor    BYTE PTR [esi-0x79],dh
  4306cb:	cli    
  4306cc:	rol    BYTE PTR [eax-0x7f4c9392],1
  4306d2:	pop    ebx
  4306d3:	pshufw mm5,QWORD PTR [ecx],0xc0
  4306d7:	shl    DWORD PTR [ebp-0x27813d80],1
  4306dd:	push   esp
  4306de:	loop   0x4306bd
  4306e0:	das    
  4306e1:	push   ebp
  4306e2:	mov    ds:0xa6543069,al
  4306e7:	pop    ebp
  4306e8:	push   esi
  4306e9:	push   ebp
  4306ea:	jmp    0xe8a1176b
  4306ef:	add    ebp,DWORD PTR [edi]
  4306f1:	push   ebx
  4306f2:	and    al,0xf8
  4306f4:	fist   WORD PTR [edx+0x1c]
  4306f7:	cld    
  4306f8:	fild   WORD PTR [eax+0x53e0fbfc]
  4306fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4306ff:	pop    esp
  430700:	add    BYTE PTR [eax],al
  430702:	mov    dl,cl
  430704:	out    0x3,eax
  430706:	stos   DWORD PTR es:[edi],eax
  430707:	popf   
  430708:	repz push es
  43070a:	push   esp
  43070b:	or     dh,ah
  43070d:	jl     0x43077d
  43070f:	adc    ah,0xfb
  430712:	stc    
  430713:	jne    0x430704
  430715:	add    ebp,DWORD PTR [edi]
  430717:	fimul  WORD PTR [edx-0x11]
  43071a:	xor    BYTE PTR [ebx+0x27],bl
  43071d:	stc    
  43071e:	xchg   ebp,eax
  43071f:	pushf  
  430720:	dec    edi
  430721:	imul   esp,DWORD PTR ds:0x82360082,0x3f
  430728:	cs sub esi,esp
  43072b:	and    eax,0xd7693056
  430730:	add    BYTE PTR [ebx+ecx*4-0x6cf2828d],dh
  430737:	add    ch,ch
  430739:	in     eax,dx
  43073a:	jecxz  0x430769
  43073c:	push   edx
  43073d:	push   es
  43073e:	add    ah,dl
  430740:	test   ecx,edi
  430742:	imul   ebx,DWORD PTR [edx],0x11
  430745:	sub    DWORD PTR [ecx+edx*2],0x5c
  430749:	lds    ecx,FWORD PTR [esi+esi*2]
  43074c:	xchg   edi,eax
  43074d:	in     al,0x47
  43074f:	test   BYTE PTR [edi-0x7c2df0db],al
  430755:	test   eax,0xa17dd7d1
  43075a:	inc    edi
  43075b:	jbe    0x430732
  43075d:	jmp    0x3fcee58e
  430762:	dec    ebx
  430763:	scas   eax,DWORD PTR es:[edi]
  430764:	aad    0x1e
  430766:	add    BYTE PTR [eax],al
  430768:	and    esp,DWORD PTR [ebx]
  43076a:	and    eax,0xa4ea07d5
  43076f:	sti    
  430770:	ins    BYTE PTR es:[edi],dx
  430771:	jg     0x43077d
  430773:	push   edi
  430774:	leave  
  430775:	xlat   BYTE PTR ds:[ebx]
  430776:	dec    eax
  430777:	sbb    eax,0xfe741618
  43077c:	mov    bl,0x9d
  43077e:	sbb    BYTE PTR [edx+0x2e],dh
  430781:	mov    DWORD PTR [ebp+eax*8+0x34],0x517664ef
  430789:	rol    DWORD PTR [ebp-0x3809bcdc],cl
  43078f:	jmp    0xcc2be5c0
  430794:	cmp    DWORD PTR [ecx+edi*8+0x510aec6d],eax
  43079b:	adc    BYTE PTR ds:0x60093d3,ah
  4307a1:	add    edi,DWORD PTR [esi]
  4307a3:	and    al,0x6
  4307a5:	and    ah,BYTE PTR [esi]
  4307a7:	adc    DWORD PTR [eax-0x7d],0xffffff82
  4307ab:	push   es
  4307ac:	sbb    eax,0xb5181d3f
  4307b1:	mov    al,0xf5
  4307b3:	je     0x4307a7
  4307b5:	xchg   cl,ah
  4307b7:	jmp    0x6f46:0x84f6f4fe
  4307be:	sub    al,0xff
  4307c0:	jae    0x430749
  4307c2:	add    BYTE PTR [ebp+0x6],0xa3
  4307c6:	ret    
  4307c7:	add    dh,dl
  4307c9:	(bad)  
  4307cb:	sub    eax,DWORD PTR [eax]
  4307cd:	add    BYTE PTR [ebx],al
  4307cf:	cmc    
  4307d0:	test   BYTE PTR [esi+eax*4+0x1ee8188d],0xf8
  4307d8:	idiv   bh
  4307da:	ins    BYTE PTR es:[edi],dx
  4307db:	jmp    0x5650:0xd632448b
  4307e2:	jmp    0x565954d3
  4307e7:	fisubr DWORD PTR [ecx]
  4307e9:	fist   DWORD PTR ds:0x4143061e
  4307ef:	not    DWORD PTR [esp+ebp*4]
  4307f2:	xchg   esp,eax
  4307f3:	call   0x8254:0x229669f9
  4307fa:	cdq    
  4307fb:	idiv   BYTE PTR [edx+0x64]
  4307fe:	jb     0x4307ce
  430800:	add    BYTE PTR [ebx+0x1573d8ad],al
  430806:	(bad)  
  430807:	je     0x43080a
  430809:	add    ah,BYTE PTR [ebx-0x2e]
  43080c:	cmc    
  43080d:	je     0x430881
  43080f:	jmp    0x98e8:0xea2274f5
  430816:	push   esp
  430818:	imul   bl
  43081a:	das    
  43081b:	jle    0x430895
  43081d:	jae    0x430832
  43081f:	lea    edx,[ebp-0x27]
  430822:	xor    dl,BYTE PTR [edi]
  430824:	bound  eax,QWORD PTR [esi-0x5071c5d]
  43082a:	pop    ecx
  43082b:	pop    ds
  43082c:	jo     0x430827
  43082e:	sbb    cl,ch
  430830:	retf   0xe7
  430833:	add    BYTE PTR [eax],al
  430835:	(bad)  
  430836:	addr16 cli 
  430838:	mov    edx,0x17141953
  43083d:	add    DWORD PTR [esi],ecx
  43083f:	cli    
  430840:	clc    
  430841:	add    BYTE PTR [esi],bh
  430843:	pop    edx
  430844:	push   ecx
  430845:	inc    eax
  430846:	jbe    0x43082c
  430848:	mov    cl,cl
  43084a:	clc    
  43084b:	(bad)  
  43084c:	jp     0x4308aa
  43084e:	jbe    0x430847
  430850:	stos   BYTE PTR es:[edi],al
  430851:	hlt    
  430852:	cmc    
  430853:	out    0x82,eax
  430855:	and    BYTE PTR [edx-0x6],0xba
  430859:	adc    al,0xd
  43085b:	call   0xfaa59aea
  430860:	stos   BYTE PTR es:[edi],al
  430861:	les    ebx,FWORD PTR [eax+edx*2]
  430864:	mov    al,0x9a
  430866:	popf   
  430867:	or     eax,0x7a7686ef
  43086c:	sub    ecx,DWORD PTR [edx]
  43086e:	arpl   WORD PTR [ebx+0x30],si
  430871:	aam    0x61
  430873:	adc    al,0x6f
  430875:	jns    0x430834
  430877:	(bad)  
  430878:	jmp    0xb94d4639
  43087d:	jg     0x43083b
  43087f:	jae    0x4308a8
  430881:	mov    esi,0xb1a20bef
  430886:	or     al,0xe7
  430888:	sub    al,0xa
  43088a:	mov    eax,0xf03eaa07
  43088f:	add    ebx,DWORD PTR ds:0xa4445647
  430895:	fidivr WORD PTR [eax-0x21ffff01]
  43089b:	push   0x67371fd3
  4308a0:	stc    
  4308a1:	idiv   BYTE PTR [ebp-0x12]
  4308a4:	out    0xf6,al
  4308a6:	jge    0x4308c6
  4308a8:	jmp    0xeb2d8827
  4308ad:	xchg   esi,eax
  4308ae:	out    dx,al
  4308af:	bound  edx,QWORD PTR ds:0xa06939ef
  4308b5:	sti    
  4308b6:	pop    ecx
  4308b7:	lahf   
  4308b8:	call   0x3535:0xdea65007
  4308bf:	and    BYTE PTR [ecx],bl
  4308c1:	int    0xf9
  4308c3:	lods   al,BYTE PTR ds:[esi]
  4308c4:	mov    ch,0x66
  4308c6:	jl     0x43088a
  4308c8:	fstp   TBYTE PTR [ebp+ebx*1+0x7d]
  4308cc:	aam    0xb7
  4308ce:	ds push ds
  4308d0:	call   0xff2cf557
  4308d5:	add    DWORD PTR [eax-0x3b],edx
  4308d8:	out    0xb3,eax
  4308da:	das    
  4308db:	sbb    al,0xa6
  4308dd:	cld    
  4308de:	rcl    BYTE PTR [ecx],0x5f
  4308e1:	pop    eax
  4308e2:	pop    edi
  4308e3:	pand   mm5,QWORD PTR [ebp+0x5b66e167]
  4308ea:	adc    BYTE PTR [esp+esi*1],dl
  4308ed:	adc    al,0xf6
  4308ef:	es cmp al,0xfd
  4308f2:	dec    edx
  4308f3:	sahf   
  4308f4:	rcr    BYTE PTR [ebp+0x76e77c90],0x18
  4308fb:	(bad)  
  4308fc:	mov    es,WORD PTR [ecx]
  4308fe:	add    BYTE PTR [eax],al
  430900:	mov    dl,0xed
  430902:	fistp  QWORD PTR [eax+0x30]
  430905:	popa   
  430906:	add    al,0x6c
  430908:	jo     0x430919
  43090a:	sbb    edi,DWORD PTR [ecx-0x59]
  43090d:	dec    ebp
  43090e:	call   0xae3816
  430913:	adc    DWORD PTR [ebx],edi
  430915:	sub    eax,0xeab0d4fa
  43091a:	inc    eax
  43091b:	jmp    0x645027e7
  430920:	jmp    0x430912
  430922:	push   cs
  430923:	push   esi
  430924:	dec    ecx
  430925:	in     al,0x50
  430927:	inc    ecx
  430928:	pop    edx
  430929:	jbe    0x430926
  43092b:	inc    esi
  43092c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43092d:	and    bh,cl
  43092f:	jb     0x430912
  430931:	jecxz  0x4308ba
  430933:	lods   al,BYTE PTR ds:[esi]
  430934:	nop
  430935:	sub    al,0xfa
  430937:	aam    0xb8
  430939:	jmp    0xfaf2f27e
  43093e:	clc    
  43093f:	jmp    0xbe4c33cb
  430944:	adc    DWORD PTR [edx],0xfb2194fd
  43094a:	arpl   WORD PTR ds:0x74310633,ax
  430950:	sub    al,0xde
  430952:	in     ax,dx
  430954:	in     al,0x83
  430956:	aad    0x33
  430958:	dec    ecx
  430959:	js     0x430989
  43095b:	test   eax,0x19babc67
  430960:	sar    BYTE PTR [ebx-0x7],1
  430963:	aas    
  430964:	add    BYTE PTR [eax],al
  430966:	aad    0xdf
  430968:	pop    eax
  430969:	sbb    esp,DWORD PTR [esi-0x7d]
  43096c:	rol    DWORD PTR [ebx-0x567b87ee],0x90
  430973:	ret    0x2c85
  430976:	pop    es
  430977:	fs push ebx
  430979:	mov    cl,0x17
  43097b:	sub    cl,BYTE PTR [ecx]
  43097d:	ds jns 0x430903
  430980:	lods   eax,DWORD PTR ds:[esi]
  430981:	arpl   WORD PTR [edx],cx
  430983:	js     0x430909
  430985:	test   eax,0x1c85ce88
  43098a:	jae    0x43099c
  43098c:	add    BYTE PTR [bp+si-0x59],bl
  430990:	mov    WORD PTR [ebp+0x5e],ss
  430993:	pop    ss
  430994:	retf   0xe0b9
  430997:	add    DWORD PTR [eax+ebx*8-0x170e743f],eax
  43099e:	rol    BYTE PTR [ebx],0xfd
  4309a1:	(bad)  
  4309a2:	mov    esp,0x805b571d
  4309a7:	mov    eax,0x904604bb
  4309ac:	push   eax
  4309ad:	push   ebp
  4309ae:	popf   
  4309af:	xchg   ebx,eax
  4309b0:	sbb    eax,0x82a9b818
  4309b5:	clc    
  4309b6:	xchg   ebx,eax
  4309b7:	mov    ah,BYTE PTR [ecx]
  4309b9:	push   esi
  4309ba:	(bad)  
  4309bb:	mov    ebx,DWORD PTR ds:0xa4ec5110
  4309c1:	adc    dl,dh
  4309c3:	fiadd  WORD PTR [ecx+0x3dc60a45]
  4309c9:	or     BYTE PTR [eax],al
  4309cb:	add    BYTE PTR [eax-0x5bb413c],bl
  4309d1:	mov    esi,0x7b598cff
  4309d6:	add    BYTE PTR [esi],0xb5
  4309d9:	imul   DWORD PTR [ebp+0x24]
  4309dc:	cli    
  4309dd:	sti    
  4309de:	mov    ecx,0xf98c0274
  4309e3:	dec    edi
  4309e4:	loope  0x430a5a
  4309e6:	leave  
  4309e7:	adc    al,BYTE PTR [esi]
  4309e9:	loop   0x430a26
  4309eb:	add    al,bh
  4309ed:	fiadd  WORD PTR [eax]
  4309ef:	jne    0x430998
  4309f1:	rcl    cl,1
  4309f3:	call   FWORD PTR [edx-0x3a]
  4309f6:	adc    bh,bh
  4309f8:	jnp    0x430a44
  4309fa:	or     eax,DWORD PTR [eax-0x7a]
  4309fd:	push   0x9ff15bba
  430a02:	pop    esp
  430a03:	pop    ecx
  430a04:	out    dx,eax
  430a05:	and    ecx,DWORD PTR [edx]
  430a07:	add    BYTE PTR [edi],ch
  430a09:	add    al,cl
  430a0b:	push   DWORD PTR ds:0x3071fcc4
  430a11:	dec    ebx
  430a12:	enter  0xf23,0x87
  430a16:	push   0xffffffbb
  430a18:	add    esp,esi
  430a1a:	imul   DWORD PTR [ebx+0x2e04c53d]
  430a20:	outs   dx,DWORD PTR ds:[esi]
  430a21:	(bad)  
  430a23:	cli    
  430a24:	stc    
  430a25:	sbb    edi,eax
  430a27:	mov    edi,0x7efd451d
  430a2c:	or     DWORD PTR [ebp+0xbfe5],eax
  430a32:	das    
  430a33:	xchg   ebp,edi
  430a35:	out    0x4,eax
  430a37:	mov    esp,0xb7a4fa5f
  430a3c:	xchg   ecx,esi
  430a3e:	fwait
  430a3f:	xrelease mov DWORD PTR [ebx+edi*2],ebx
  430a43:	jns    0x430a02
  430a45:	call   DWORD PTR [esi+0x53735e7f]
  430a4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430a4c:	mov    bh,0xfa
  430a4e:	fdiv   st(5),st
  430a50:	enter  0x1f23,0x4f
  430a54:	jge    0x430a55
  430a56:	loopne 0x4309df
  430a58:	mov    WORD PTR [ecx+0x1b],?
  430a5b:	add    bl,bh
  430a5d:	aas    
  430a5e:	inc    ebp
  430a5f:	xchg   DWORD PTR [esi+0x5dbf7187],esi
  430a65:	adc    al,0x5f
  430a67:	jno    0x430a26
  430a69:	jmp    DWORD PTR [ebp-0x53c7d73d]
  430a6f:	inc    ebx
  430a70:	cmc    
  430a71:	test   BYTE PTR [esi-0x45],dh
  430a74:	mov    dh,0x61
  430a76:	lods   al,BYTE PTR ds:[esi]
  430a77:	mov    edx,0xc021000c
  430a7c:	or     eax,0xe77deab2
  430a81:	xchg   dl,ah
  430a83:	fucomp st(7)
  430a85:	jmp    0xea3286f9
  430a8a:	xor    DWORD PTR [edx+eiz*8+0x52e9889a],ebx
  430a91:	add    al,0x57
  430a93:	gs cmp al,0x61
  430a96:	add    BYTE PTR [eax],al
  430a98:	and    bp,WORD PTR gs:[eax]
  430a9c:	adc    esp,DWORD PTR [ebp-0x58]
  430a9f:	imul   ecx,DWORD PTR [ebp-0x79d96cd],0xe
  430aa6:	mov    ebx,0x91e97162
  430aab:	(bad)  
  430aac:	or     al,0xae
  430aae:	inc    di
  430ab0:	and    al,0x26
  430ab2:	aam    0xf9
  430ab4:	jo     0x430aa8
  430ab6:	(bad)  
  430ab7:	jmp    0x430a59
  430ab9:	fsubrp st(7),st
  430abb:	add    edx,DWORD PTR [ecx+0x3b629ade]
  430ac1:	push   cs
  430ac2:	rol    bl,cl
  430ac4:	or     BYTE PTR [ebx+ebp*1+0xf],bl
  430ac8:	or     dl,ah
  430aca:	or     DWORD PTR [esi+eax*4+0x4cdf5f1c],0xd04a5ec6
  430ad5:	inc    esi
  430ad6:	pop    ss
  430ad7:	(bad)  
  430ad8:	in     eax,0x64
  430ada:	fwait
  430adb:	daa    
  430adc:	inc    ebx
  430add:	or     eax,0x9275eb9a
  430ae2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430ae3:	add    edx,DWORD PTR [edi-0x22]
  430ae6:	out    0xb,eax
  430ae8:	das    
  430ae9:	xchg   bh,dh
  430aeb:	xor    dh,BYTE PTR [ebp+0x3c446b78]
  430af1:	loope  0x430a89
  430af3:	add    edx,DWORD PTR [esi-0x5a9e3d23]
  430af9:	(bad)  
  430afb:	sbb    eax,DWORD PTR [eax]
  430afd:	add    BYTE PTR [ebx-0x5549ff86],bl
  430b03:	xlat   BYTE PTR ds:[ebx]
  430b04:	add    al,al
  430b06:	jecxz  0x430b7e
  430b08:	stc    
  430b09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430b0a:	lds    ebx,FWORD PTR [edi-0x11]
  430b0d:	xchg   ecx,eax
  430b0e:	cmp    BYTE PTR [eax-0x7],0xe9
  430b12:	(bad)  
  430b13:	sbb    al,0x25
  430b15:	loope  0x430b44
  430b17:	repnz add bl,BYTE PTR [edi]
  430b1a:	rcl    esp,cl
  430b1c:	cld    
  430b1d:	jl     0x430aed
  430b1f:	pop    edi
  430b20:	ret    0xe917
  430b23:	fadd   QWORD PTR [eax]
  430b25:	bound  esi,QWORD PTR [ebp-0x20]
  430b28:	shr    edi,0x28
  430b2b:	dec    esi
  430b2c:	inc    eax
  430b2d:	jmp    0xe3b743e3
  430b32:	mov    ds:0xdc4e50e0,eax
  430b37:	fistp  QWORD PTR [ebp-0x31]
  430b3a:	xor    al,0xde
  430b3c:	stc    
  430b3d:	mov    bh,0x28
  430b3f:	jae    0x430b54
  430b41:	lods   eax,DWORD PTR ds:[esi]
  430b42:	sbb    edi,DWORD PTR [eax-0x79a29e00]
  430b48:	stc    
  430b49:	fimul  WORD PTR [esi+0x7f725374]
  430b4f:	push   cs
  430b50:	push   ebx
  430b51:	ficom  DWORD PTR [esi+0xd]
  430b54:	push   ebx
  430b55:	mov    bh,0xda
  430b57:	js     0x430bac
  430b59:	lahf   
  430b5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430b5b:	add    edx,edi
  430b5d:	xchg   edi,eax
  430b5e:	dec    edi
  430b5f:	rcr    BYTE PTR [edi+ebx*8+0x77ec0000],cl
  430b66:	ss daa 
  430b68:	out    0xe0,eax
  430b6a:	cmp    eax,DWORD PTR [eax]
  430b6c:	sub    al,0xdd
  430b6e:	adc    BYTE PTR [ebp+0x27],0xc8
  430b72:	rol    dl,0x18
  430b75:	or     ebp,DWORD PTR [ecx-0x27]
  430b78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430b79:	mov    bh,0x0
  430b7b:	add    dh,bh
  430b7d:	and    DWORD PTR [edx],edx
  430b7f:	inc    eax
  430b80:	xchg   BYTE PTR [ebx],al
  430b82:	sti    
  430b83:	aaa    
  430b84:	fdivr  st,st(6)
  430b86:	cmp    al,0x7d
  430b89:	std    
  430b8a:	je     0x430b90
  430b8c:	fs sbb esp,ebx
  430b8f:	sbb    DWORD PTR ds:0x990c74fd,esi
  430b95:	jo     0x430bd8
  430b97:	adc    edx,DWORD PTR [esi]
  430b99:	loop   0x430b1c
  430b9b:	fcomp  st(5)
  430b9d:	in     eax,0x31
  430b9f:	fisub  WORD PTR [ebx-0x18]
  430ba2:	dec    ebp
  430ba3:	push   DWORD PTR [esi]
  430ba5:	jmp    0xc957:0x9d1dc02a
  430bac:	adc    al,0xe3
  430bae:	add    BYTE PTR [ebp+0x5651178b],cl
  430bb4:	jo     0x430beb
  430bb6:	dec    edi
  430bb7:	push   esi
  430bb8:	loopne 0x430beb
  430bba:	dec    esi
  430bbb:	inc    esi
  430bbd:	out    0x87,al
  430bbf:	inc    ebp
  430bc0:	or     ch,BYTE PTR [edx-0x2]
  430bc3:	push   esi
  430bc4:	pop    ecx
  430bc5:	sub    eax,DWORD PTR [ecx]
  430bc7:	push   ebx
  430bc8:	add    BYTE PTR [eax],al
  430bca:	pop    ecx
  430bcb:	jo     0x430c0a
  430bcd:	adc    edx,esi
  430bcf:	fidiv  DWORD PTR [edi]
  430bd1:	jne    0x430bdd
  430bd3:	nop
  430bd4:	retf   0x9339
  430bd7:	push   ss
  430bd8:	outs   dx,BYTE PTR ds:[esi]
  430bd9:	into   
  430bda:	mov    al,ds:0xbc036334
  430bdf:	loope  0x430c2f
  430be1:	push   esi
  430be2:	mov    esp,0xda75f5e8
  430be7:	push   ss
  430be8:	adc    eax,0xf99ae088
  430bed:	test   BYTE PTR [esi+0x62fc4462],dl
  430bf3:	jmp    0x5059:0xb52f0881
  430bfa:	aaa    
  430bfb:	pushf  
  430bfc:	mov    al,0x86
  430bfe:	repnz ins BYTE PTR es:[edi],dx
  430c00:	mov    WORD PTR [eax+0x27],es
  430c03:	cmc    
  430c04:	add    esp,edi
  430c06:	retf   
  430c07:	fld    DWORD PTR [ebp+0x2838aceb]
  430c0d:	jg     0x430c19
  430c0f:	inc    ecx
  430c10:	add    al,0x4f
  430c12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430c13:	mov    ecx,0xc3a25210
  430c18:	int3   
  430c19:	or     ah,BYTE PTR [eax-0x7e0d4d6c]
  430c1f:	jnp    0x430c74
  430c21:	gs movs BYTE PTR es:[edi],BYTE PTR cs:[esi]
  430c24:	dec    ebp
  430c25:	cmp    DWORD PTR gs:[edx],eax
  430c28:	enter  0xdfdb,0xfd
  430c2c:	xlat   BYTE PTR ds:[ebx]
  430c2d:	repz add BYTE PTR [eax],al
  430c30:	push   edi
  430c31:	pop    edx
  430c32:	xor    bh,ah
  430c34:	cmp    bl,ch
  430c36:	inc    ebp
  430c37:	out    0x34,eax
  430c39:	and    al,0x5b
  430c3b:	cli    
  430c3c:	xchg   ecx,eax
  430c3d:	or     BYTE PTR [ebp+0x7],bl
  430c40:	popf   
  430c41:	cdq    
  430c42:	xchg   BYTE PTR [esi],bh
  430c44:	aas    
  430c45:	cli    
  430c46:	inc    esp
  430c47:	je     0x430c73
  430c49:	out    0xc7,al
  430c4b:	sti    
  430c4c:	adc    al,0x7e
  430c4e:	jle    0x430c0f
  430c50:	push   ebx
  430c51:	out    dx,al
  430c52:	(bad)  
  430c53:	sti    
  430c54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430c55:	push   edx
  430c56:	add    eax,0xad97688d
  430c5b:	cli    
  430c5c:	inc    edx
  430c5d:	sbb    ebp,edi
  430c5f:	aas    
  430c60:	das    
  430c61:	lock ror DWORD PTR [edi],0xa6
  430c65:	cmp    bl,BYTE PTR [ebp-0x7a]
  430c68:	push   0xeb448ca7
  430c6d:	adc    al,dl
  430c6f:	das    
  430c70:	pop    edi
  430c71:	fsubrp st(2),st
  430c73:	clc    
  430c74:	test   al,dl
  430c76:	daa    
  430c77:	add    al,0x24
  430c79:	sub    eax,0xe9f0cbe9
  430c7e:	repz or BYTE PTR [eax+0x48083bcb],0x9e
  430c86:	into   
  430c87:	imul   DWORD PTR [ecx+0x88b49dd]
  430c8d:	aam    0xe8
  430c8f:	add    ebp,DWORD PTR [edi]
  430c91:	mov    eax,esi
  430c93:	mov    al,BYTE PTR [eax]
  430c95:	add    BYTE PTR ds:0x14836efc,ch
  430c9b:	(bad)  
  430c9d:	add    ecx,ebp
  430c9f:	data16 and al,0x68
  430ca2:	test   eax,0x8056d821
  430ca7:	arpl   WORD PTR [esi],bp
  430ca9:	idiv   BYTE PTR [ecx]
  430cab:	sahf   
  430cac:	mov    BYTE PTR [edi+esi*4+0x23],0x70
  430cb1:	jmp    0x3ff76fd4
  430cb6:	fbld   TBYTE PTR [eax+0x27]
  430cb9:	pop    es
  430cba:	fild   WORD PTR [edi]
  430cbc:	jmp    0xddc9034b
  430cc1:	xor    DWORD PTR [esi],esp
  430cc3:	jne    0x430d33
  430cc5:	push   ebx
  430cc6:	mov    bl,0x6b
  430cc8:	mov    ah,0x7
  430cca:	inc    ecx
  430ccb:	sahf   
  430ccc:	shl    DWORD PTR ds:[ecx+0x83d5eb4],0x24
  430cd4:	test   BYTE PTR [ebx],0x2f
  430cd7:	push   0x96776b3f
  430cdc:	adc    bl,BYTE PTR [esi-0x4f]
  430cdf:	sbb    cl,BYTE PTR [eax+ecx*4]
  430ce2:	mov    al,ds:0xd855d0e9
  430ce7:	fnsave [ebx+0x27]
  430cea:	test   al,0x1a
  430cec:	add    ebp,esp
  430cee:	mov    ch,0xb4
  430cf0:	adc    dh,dh
  430cf2:	add    eax,0xf00ac0cc
  430cf7:	ins    BYTE PTR es:[edi],dx
  430cf8:	jge    0x430ca3
  430cfa:	add    BYTE PTR [eax],al
  430cfc:	mov    bl,0x24
  430cfe:	cli    
  430cff:	pop    esp
  430d00:	pop    es
  430d01:	pop    esp
  430d02:	inc    ebx
  430d03:	loope  0x430cbc
  430d05:	je     0x430d01
  430d07:	jns    0x430cb4
  430d09:	fld    QWORD PTR [eax]
  430d0b:	jmp    0xb801f414
  430d10:	jmp    0xc80b:0xc10ebd5a
  430d17:	stos   DWORD PTR es:[edi],eax
  430d18:	sub    ebx,esi
  430d1a:	push   ebx
  430d1b:	jb     0x430d1c
  430d1d:	pop    ebp
  430d1e:	in     al,dx
  430d1f:	sbb    DWORD PTR [eax],esi
  430d21:	fiadd  WORD PTR [eax]
  430d23:	cmp    bl,BYTE PTR [ecx-0x59e127a5]
  430d29:	fwait
  430d2a:	call   0xf9b9da1e
  430d2f:	xrstor [ebx+eax*1-0x22]
  430d34:	scas   al,BYTE PTR es:[edi]
  430d35:	ss add cl,ch
  430d38:	sub    al,0x6
  430d3a:	pop    esi
  430d3b:	in     al,0x2c
  430d3d:	fimul  WORD PTR [ebx-0x6966394]
  430d43:	dec    esi
  430d44:	adc    eax,0xb02f4974
  430d49:	arpl   si,si
  430d4b:	ds jb  0x430dc1
  430d4e:	loope  0x430d07
  430d50:	xor    BYTE PTR [ebx-0x7],0x62
  430d54:	out    dx,al
  430d55:	jecxz  0x430dd4
  430d57:	sub    eax,0x95c0591f
  430d5c:	das    
  430d5d:	repz rol ch,0x0
  430d61:	add    BYTE PTR [ebx],bh
  430d63:	das    
  430d64:	dec    eax
  430d65:	jmp    0xdfc6:0x413c2
  430d6c:	xchg   DWORD PTR [ebp-0x2e],esi
  430d6f:	jns    0x430da3
  430d71:	into   
  430d72:	rcr    DWORD PTR [edx+0x7b],1
  430d75:	add    dh,dl
  430d77:	fistp  WORD PTR [esi-0x7b]
  430d7a:	jg     0x430d07
  430d7c:	jl     0x430d08
  430d7e:	mov    esi,0x7f80c911
  430d83:	loopne 0x430df2
  430d85:	je     0x430d94
  430d87:	sub    al,0x1
  430d89:	lea    esp,[ebx]
  430d8b:	jmp    0x430d80
  430d8d:	call   ecx
  430d8f:	xor    BYTE PTR [ebp+ecx*4-0x8eb1a],cl
  430d96:	daa    
  430d97:	pop    ebp
  430d98:	mov    ebx,0xf5940308
  430d9d:	call   0x3a2332
  430da2:	ficomp DWORD PTR [esi]
  430da4:	outs   dx,BYTE PTR ds:[esi]
  430da5:	push   esp
  430da6:	int    0x2b
  430da8:	cmc    
  430da9:	cmp    edi,DWORD PTR [eax+0x58b4c8a]
  430daf:	push   0xffffffee
  430db1:	fcomp  DWORD PTR [ebp+0x1f]
  430db4:	lea    ecx,[ebx+0x58]
  430db7:	mov    esi,0xa70583bf
  430dbc:	push   es
  430dbd:	mov    bh,0x3d
  430dbf:	or     bl,cl
  430dc1:	sbb    ecx,DWORD PTR [edi+0x5e]
  430dc4:	mov    ebx,0xe4000004
  430dc9:	arpl   WORD PTR [eax+edx*4+0x52f7126c],dx
  430dd0:	test   DWORD PTR [edi],ebx
  430dd2:	dec    BYTE PTR [edi+0x35]
  430dd5:	and    eax,0x186e0564
  430dda:	retf   0x51fe
  430ddd:	rol    WORD PTR [ebp-0x74e77493],1
  430de4:	das    
  430de5:	inc    edx
  430de6:	add    eax,0xbddd2787
  430deb:	adc    BYTE PTR [edi],ch
  430ded:	test   DWORD PTR [eax+0x839a7ee],ecx
  430df3:	call   0xfa9fe24f
  430df8:	mov    ch,0x39
  430dfa:	or     bh,ah
  430dfc:	sub    eax,0x515a44d7
  430e01:	and    BYTE PTR [ebp+edi*4+0x33],cl
  430e05:	test   DWORD PTR [eax+0x69059386],esi
  430e0b:	repz cs test ebp,edi
  430e0f:	dec    esi
  430e10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430e11:	ror    DWORD PTR [eax],1
  430e13:	xchg   esp,ebp
  430e15:	xchg   esp,eax
  430e16:	dec    esi
  430e17:	xlat   BYTE PTR ds:[ebx]
  430e18:	(bad)  [edi-0x4055adc3]
  430e1e:	out    dx,al
  430e1f:	push   ds
  430e20:	push   0x2c3f8f83
  430e25:	or     BYTE PTR [ebp-0x1],ch
  430e28:	mov    bh,0xe1
  430e2a:	cmp    BYTE PTR [edx],cl
  430e2c:	add    BYTE PTR [eax],al
  430e2e:	mov    bl,0x6c
  430e30:	add    eax,DWORD PTR [eax]
  430e32:	das    
  430e33:	lods   eax,DWORD PTR ds:[esi]
  430e34:	int3   
  430e35:	jae    0x430e3c
  430e37:	mov    ebp,0xbd0873cc
  430e3c:	int3   
  430e3d:	jae    0x430e6a
  430e3f:	or     BYTE PTR [ebp+0x2b],ch
  430e42:	mov    ebx,0x16c0137b
  430e47:	(bad)  
  430e49:	add    BYTE PTR [edi],ch
  430e4b:	cld    
  430e4c:	mov    edi,0x5687a407
  430e51:	scas   eax,DWORD PTR es:[edi]
  430e52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430e53:	xchg   ch,bh
  430e55:	push   DWORD PTR [esp+edx*8-0x3e11aa94]
  430e5c:	push   ebp
  430e5d:	call   0x42bed6f
  430e62:	das    
  430e63:	jno    0x430df9
  430e65:	or     esi,DWORD PTR [eax-0x196e0063]
  430e6b:	jno    0x430e77
  430e6d:	ins    DWORD PTR es:[edi],dx
  430e6e:	jmp    0xa846f652
  430e73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430e74:	cmovns esp,esi
  430e77:	jo     0x430e6b
  430e79:	loope  0x430ebc
  430e7b:	jbe    0x430e48
  430e7d:	aad    0xee
  430e7f:	xchg   BYTE PTR [edi+edi*2+0x536e71b5],bl
  430e86:	mov    cl,0x1d
  430e88:	clc    
  430e89:	push   ss
  430e8a:	jno    0x430ef3
  430e8c:	push   esp
  430e8d:	pop    eax
  430e8e:	popa   
  430e8f:	ins    BYTE PTR es:[edi],dx
  430e90:	cmp    al,0x19
  430e92:	add    BYTE PTR [eax],al
  430e94:	pushf  
  430e95:	xchg   esi,eax
  430e96:	fiadd  WORD PTR [ebx+0x9]
  430e99:	popf   
  430e9a:	pop    ds
  430e9b:	or     edi,DWORD PTR [ebp+eiz*8-0x6882bcfa]
  430ea2:	xor    eax,0x670c67ff
  430ea7:	inc    ebx
  430ea8:	sub    al,0xe
  430eaa:	(bad)  
  430eab:	dec    esi
  430eac:	retf   0x7fdc
  430eaf:	sub    al,0x7f
  430eb1:	jo     0x430e35
  430eb3:	mov    es,WORD PTR [eax+0x5b]
  430eb6:	jno    0x430e87
  430eb8:	mov    dh,0x65
  430eba:	sub    al,0xc
  430ebc:	test   al,0xb6
  430ebe:	pop    esi
  430ebf:	cmp    DWORD PTR [eax+0x0],edx
  430ec2:	clc    
  430ec3:	add    ebp,DWORD PTR [edi]
  430ec5:	fs aas 
  430ec7:	imul   eax,edi,0xffffff87
  430eca:	push   edx
  430ecb:	pop    edx
  430ecc:	pop    ss
  430ecd:	pop    es
  430ece:	jmp    0x25f83dd6
  430ed3:	shr    BYTE PTR [ebx],1
  430ed5:	addr16 xchg esp,eax
  430ed7:	pop    ebx
  430ed8:	adc    eax,ebx
  430eda:	add    BYTE PTR [edx+0x6c],ch
  430edd:	lds    eax,FWORD PTR [edi-0x63fab5c]
  430ee3:	xchg   ecx,eax
  430ee4:	push   0xffffffde
  430ee6:	add    cl,ch
  430ee8:	mov    bh,0x59
  430eea:	adc    BYTE PTR [edi],dl
  430eec:	test   DWORD PTR [ecx+edx*2-0x47],esi
  430ef0:	stos   DWORD PTR es:[edi],eax
  430ef1:	or     ecx,esi
  430ef3:	jo     0x430eec
  430ef5:	ins    BYTE PTR es:[edi],dx
  430ef6:	stc    
  430ef7:	aam    0x0
  430ef9:	add    BYTE PTR [esi+ecx*8+0x40],bh
  430efd:	jmp    0x25c0ad1b
  430f02:	xor    BYTE PTR [edi+0x43],ah
  430f05:	aad    0x14
  430f07:	sbb    al,0x5
  430f09:	pop    edi
  430f0a:	lea    esp,[ebp+0x43]
  430f0d:	shl    DWORD PTR [edx+0xb53fdae],0x62
  430f14:	inc    edx
  430f15:	icebp  
  430f16:	fsub   QWORD PTR [ebp+0x73]
  430f19:	leave  
  430f1a:	mov    ah,0x19
  430f1c:	in     eax,0xc1
  430f1e:	cld    
  430f1f:	pop    edx
  430f20:	stc    
  430f21:	scas   al,BYTE PTR es:[edi]
  430f22:	scas   eax,DWORD PTR es:[edi]
  430f23:	xor    BYTE PTR [ebx-0x22],dh
  430f26:	stos   DWORD PTR es:[edi],eax
  430f27:	jae    0x430f2f
  430f29:	sbb    dh,BYTE PTR ds:0xed61fff8
  430f2f:	popa   
  430f30:	dec    ebx
  430f31:	cdq    
  430f32:	retf   
  430f33:	push   esp
  430f34:	add    BYTE PTR [esi+0x7e1f77f6],0x78
  430f3b:	push   0x61cf2c85
  430f40:	jae    0x430fbb
  430f42:	retf   
  430f43:	or     eax,0x57d66689
  430f48:	enter  0x7464,0xe7
  430f4c:	adc    BYTE PTR [edx-0x20],ah
  430f4f:	pop    DWORD PTR [ebp-0x7d7e74d1]
  430f55:	add    BYTE PTR [ecx+0x15],ch
  430f58:	sbb    DWORD PTR [ebp+0x1a],0x63
  430f5c:	jl     0x430f52
  430f5e:	add    BYTE PTR [eax],al
  430f60:	cmp    DWORD PTR [edi],ebp
  430f62:	in     eax,0x8b
  430f64:	rol    DWORD PTR [edi],cl
  430f66:	or     DWORD PTR [ebp+0x1a],0x59
  430f6a:	inc    esp
  430f6b:	call   0x3c2c723e
  430f70:	mov    gs,WORD PTR [edi+0x75]
  430f73:	popf   
  430f74:	sub    esp,ecx
  430f76:	call   0xf74be15a
  430f7b:	push   esi
  430f7c:	push   ds
  430f7d:	mov    bl,0xee
  430f7f:	std    
  430f80:	mov    ecx,0xa77ef6f0
  430f85:	bound  eax,QWORD PTR [eax+esi*8+0x3f]
  430f89:	xor    ch,dh
  430f8b:	lea    edx,[ebx]
  430f8d:	shl    dh,1
  430f8f:	(bad)  
  430f90:	jns    0x430ff6
  430f92:	inc    esp
  430f93:	or     al,0xf
  430f95:	mov    cl,dh
  430f97:	mov    edx,DWORD PTR [ebx-0x1a]
  430f9a:	cmp    DWORD PTR [ebp-0x36],0x6eebbf5a
  430fa1:	push   esp
  430fa2:	cmp    edi,0xffffffc9
  430fa5:	bound  edi,QWORD PTR [esp+ecx*1+0x20]
  430fa9:	pop    ecx
  430faa:	jbe    0x430fb0
  430fac:	push   esi
  430fad:	mov    al,ds:0x81576a03
  430fb2:	std    
  430fb3:	push   esi
  430fb4:	scas   al,BYTE PTR es:[edi]
  430fb5:	mov    eax,0xda9fdc9
  430fba:	add    BYTE PTR [edx],al
  430fbc:	inc    ebx
  430fbd:	ins    DWORD PTR es:[edi],dx
  430fbe:	arpl   WORD PTR [ecx],ax
  430fc0:	sub    al,0x6a
  430fc2:	mov    WORD PTR [edi+0x0],es
  430fc5:	add    BYTE PTR [eax+0x2b],dl
  430fc8:	loope  0x430fe5
  430fca:	cmc    
  430fcb:	pop    es
  430fcc:	imul   eax
  430fce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430fcf:	test   eax,0x9f2ffffc
  430fd4:	xchg   BYTE PTR [edx+0x41],al
  430fd7:	add    al,0xbb
  430fd9:	sti    
  430fda:	push   edi
  430fdb:	add    al,0x41
  430fdd:	sub    al,0x8
  430fdf:	inc    edx
  430fe0:	push   ebp
  430fe1:	mov    BYTE PTR [edx-0x5b4c3587],al
  430fe7:	inc    ecx
  430fe8:	dec    ecx
  430fe9:	xchg   BYTE PTR [ebp+esi*2+0x50],ch
  430fed:	xlat   BYTE PTR ds:[ebx]
  430fee:	inc    esp
  430fef:	lds    esp,FWORD PTR [eax*2+0x47450403]
  430ff6:	sub    BYTE PTR [eax],cl
  430ff8:	or     eax,0x467bf6f3
  430ffd:	enterw 0xb0a1,0x8c
  431002:	call   0x8452:0xb8fa5794
  431009:	mov    edi,0xc71db52b
  43100e:	adc    eax,0x71cf6584
  431013:	xchg   BYTE PTR [ecx-0x7a],dl
  431016:	lahf   
  431017:	stc    
  431018:	dec    edx
  431019:	je     0x43103d
  43101b:	cwde   
  43101c:	iret   
  43101d:	out    dx,eax
  43101e:	xchg   edi,eax
  43101f:	fimul  DWORD PTR [ecx-0x4]
  431022:	sbb    BYTE PTR [ebp+0x3f78fa2c],0x85
  431029:	inc    esp
  43102a:	add    BYTE PTR [eax],al
  43102c:	daa    
  43102d:	in     al,dx
  43102e:	sbb    al,0x87
  431030:	mov    DWORD PTR [esp+ecx*1+0xb],ecx
  431034:	das    
  431035:	test   DWORD PTR [edi+0x309347d7],eax
  43103b:	cli    
  43103c:	push   eax
  43103d:	push   edi
  43103e:	iret   
  43103f:	out    dx,eax
  431040:	push   edi
  431041:	jp     0x43108d
  431043:	cld    
  431044:	inc    eax
  431045:	cli    
  431046:	cmp    eax,0x51d426e6
  43104b:	je     0x431074
  43104d:	fimul  WORD PTR [edi+0x33]
  431050:	and    DWORD PTR [esi+0x5a],ebp
  431053:	mov    bh,0x86
  431055:	or     DWORD PTR [ecx],esp
  431057:	inc    edx
  431058:	xor    dh,bl
  43105a:	mov    ah,0x8a
  43105c:	add    al,0x60
  43105e:	push   ebx
  43105f:	cmp    al,0x2f
  431061:	fsubrp st(7),st
  431063:	mov    dl,0x5e
  431065:	adc    eax,0x5930d95f
  43106a:	aaa    
  43106b:	mov    ebp,DWORD PTR ds:0x2f74576d
  431071:	fsubrp st(7),st
  431073:	mov    BYTE PTR [ebx+0x72],bh
  431076:	jge    0x431078
  431078:	ja     0x4310d3
  43107a:	sbb    DWORD PTR [eax+edi*1+0x31],ebp
  43107e:	add    DWORD PTR [edi-0x54],edx
  431081:	sahf   
  431082:	jmp    0xb003:0xe7dfdd7f
  431089:	retf   
  43108a:	xchg   ebx,eax
  43108b:	in     eax,dx
  43108c:	lock fisttp QWORD PTR [ebp+0x0]
  431090:	add    BYTE PTR [eax],al
  431092:	mov    edx,0xcebd423
  431097:	pop    ecx
  431098:	daa    
  431099:	add    al,0xff
  43109b:	ins    BYTE PTR es:[edi],dx
  43109c:	mov    dh,0x82
  43109e:	ins    BYTE PTR es:[edi],dx
  43109f:	fisubr DWORD PTR [ebx+eax*2-0x4]
  4310a3:	lds    ecx,FWORD PTR [ebp+0x1]
  4310a6:	mov    dl,0x23
  4310a8:	mov    esp,0x275904eb
  4310ad:	add    al,0xdf
  4310af:	ins    BYTE PTR es:[edi],dx
  4310b0:	mov    dh,0x82
  4310b2:	ins    BYTE PTR es:[edi],dx
  4310b3:	fisub  DWORD PTR [ebx+eax*2+0x35]
  4310b7:	arpl   WORD PTR [edi+0x3],si
  4310ba:	das    
  4310bb:	ficomp WORD PTR [eax+eax*4+0x1c]
  4310bf:	ins    DWORD PTR es:[edi],dx
  4310c0:	adc    BYTE PTR [esi-0x8],0x75
  4310c4:	mov    ds:0x6d46a6,eax
  4310c9:	ins    DWORD PTR es:[edi],dx
  4310ca:	in     al,dx
  4310cb:	xlat   BYTE PTR ds:[ebx]
  4310cc:	test   BYTE PTR [eax+0x2b],bl
  4310cf:	fiadd  WORD PTR [eax]
  4310d1:	iret   
  4310d2:	lods   eax,DWORD PTR ds:[esi]
  4310d3:	sub    DWORD PTR [esi+ebx*2],esi
  4310d6:	jns    0x431140
  4310d8:	(bad)  
  4310d9:	(bad)  [eax]
  4310db:	pop    esi
  4310dc:	mov    ebx,0xf9687811
  4310e1:	(bad)  
  4310e2:	xor    DWORD PTR [edx-0x40],edx
  4310e5:	push   edx
  4310e6:	and    DWORD PTR [eax],eax
  4310e8:	jle    0x43115e
  4310ea:	sub    BYTE PTR [ecx-0x7],ch
  4310ed:	cs add edx,esi
  4310f0:	adc    eax,0x8359dc93
  4310f5:	fld    QWORD PTR [eax]
  4310f7:	add    BYTE PTR [ecx+0x68],bh
  4310fa:	stc    
  4310fb:	mov    ecx,0xa97850c4
  431100:	sub    al,0x69
  431102:	int    0x6a
  431104:	or     cl,bl
  431106:	icebp  
  431107:	and    esi,eax
  431109:	sub    al,0xfa
  43110b:	sub    DWORD PTR [ebp+0x6b],eax
  43110e:	das    
  43110f:	sub    DWORD PTR [eax],esi
  431111:	sub    eax,0xdd776d09
  431116:	add    cl,ch
  431118:	mov    bh,0xdf
  43111a:	test   DWORD PTR [ecx-0x55],ebp
  43111d:	fld    QWORD PTR [eax]
  43111f:	jmp    0x71382acd
  431124:	jo     0x4310aa
  431126:	test   ecx,esi
  431128:	inc    ebx
  431129:	and    ah,ch
  43112b:	sbb    eax,0x6000ac54
  431130:	pusha  
  431131:	js     0x4310b6
  431133:	mov    al,0x32
  431135:	bound  esp,QWORD PTR [esi]
  431137:	call   0x593cef68
  43113c:	jecxz  0x43111b
  43113e:	add    cl,ch
  431140:	test   eax,0x2700e519
  431145:	xor    ah,cl
  431147:	xor    al,0x1
  431149:	adc    al,0xf7
  43114b:	jmp    0x43f0ab
  431150:	int    0x6a
  431152:	div    BYTE PTR [eax+0xdfa6]
  431158:	xchg   ebx,eax
  431159:	cmp    edi,DWORD PTR [edx+ebp*2+0x2a290000]
  431160:	or     dh,0x6e
  431163:	(bad)  
  431164:	stos   BYTE PTR es:[edi],al
  431165:	(bad)  
  431166:	jno    0x4311c6
  431168:	mov    ecx,0xfa0a8a0f
  43116d:	inc    DWORD PTR [esi]
  43116f:	jbe    0x431175
  431171:	(bad)  
  431172:	retf   
  431173:	sbb    ecx,DWORD PTR [edx-0x73]
  431176:	fwait
  431177:	inc    edi
  431178:	dec    ecx
  431179:	(bad)  
  43117a:	(bad)  [ebx+0x56c6400f]
  431180:	inc    BYTE PTR [edx-0x94995]
  431186:	xor    edx,esp
  431188:	jns    0x43114a
  43118a:	retf   0xbd5e
  43118d:	or     al,0x96
  43118f:	test   BYTE PTR fs:[eax+eax*8],ch
  431193:	adc    dh,bh
  431195:	call   0x39af14
  43119a:	cld    
  43119b:	mov    ch,0x52
  43119d:	lea    edx,[ebx+0x4a]
  4311a0:	mov    WORD PTR [ebp-0x8ee6e],es
  4311a6:	pop    esi
  4311a7:	gs cmp eax,0x7c5fc1ff
  4311ad:	mov    eax,0xb284e286
  4311b2:	xchg   bh,bl
  4311b4:	add    BYTE PTR [eax+0xef94813],al
  4311ba:	leave  
  4311bb:	ss stc 
  4311bd:	jmp    FWORD PTR [edi]
  4311bf:	jne    0x4311d1
  4311c1:	xlat   BYTE PTR ds:[ebx]
  4311c2:	add    BYTE PTR [eax],al
  4311c4:	lds    esi,FWORD PTR [eax+eax*8-0x74]
  4311c8:	cli    
  4311c9:	inc    esp
  4311ca:	mov    cl,bh
  4311cc:	push   edi
  4311cd:	jnp    0x431157
  4311cf:	cli    
  4311d0:	cmp    BYTE PTR [edx],al
  4311d2:	jnp    0x431203
  4311d4:	xor    esp,edi
  4311d6:	push   esp
  4311d7:	dec    edi
  4311d8:	mov    edx,0xcee7e93a
  4311dd:	ss push esp
  4311df:	cli    
  4311e0:	sub    BYTE PTR [ebx-0x3e],cl
  4311e3:	mov    dh,0x85
  4311e5:	ja     0x43119e
  4311e7:	or     BYTE PTR [ecx+0x2ffffecc],ah
  4311ed:	lock ds jle 0x4311f8
  4311f1:	cdq    
  4311f2:	leave  
  4311f3:	push   ecx
  4311f4:	inc    esp
  4311f5:	mov    bh,0xc9
  4311f7:	dec    ebp
  4311f8:	adc    al,0xb7
  4311fa:	leave  
  4311fb:	cmp    al,0x14
  4311fd:	mov    bh,0xc9
  4311ff:	cmp    BYTE PTR [esp+ebx*8-0x5fcb8c4d],ch
  431206:	aas    
  431207:	jae    0x431257
  431209:	nop
  43120a:	aas    
  43120b:	je     0x43126f
  43120d:	lock mov edx,0xab74a407
  431213:	cli    
  431214:	jg     0x431216
  431216:	(bad)  
  431217:	jmp    FWORD PTR [edi]
  431219:	lea    ebp,[eax]
  43121b:	push   ebp
  43121c:	mov    al,ds:0xaf45598b
  431221:	adc    DWORD PTR [esi+edi*8+0x4479c11b],ecx
  431228:	add    BYTE PTR [eax],al
  43122a:	aaa    
  43122b:	lock add al,0x52
  43122e:	mov    ah,0xe4
  431230:	mov    BYTE PTR [eax],al
  431232:	das    
  431233:	jne    0x43128a
  431235:	loopne 0x431210
  431237:	cmp    ecx,DWORD PTR [ebp-0x1a]
  43123a:	push   ds
  43123b:	fisubr WORD PTR [esi-0x37]
  43123e:	sub    BYTE PTR [edi+eiz*2],dl
  431241:	inc    esp
  431242:	xor    BYTE PTR [ecx+0x24],bl
  431245:	mov    WORD PTR [eax-0x7b],cs
  431248:	xchg   ecx,eax
  431249:	push   ebx
  43124a:	inc    ebp
  43124b:	jbe    0x431214
  43124d:	xchg   BYTE PTR [edi+0x1],dl
  431250:	hlt    
  431251:	cld    
  431252:	adc    DWORD PTR [eax+0x10a8fafc],ebx
  431258:	js     0x4312b9
  43125a:	sub    DWORD PTR [edx-0x3c],esp
  43125d:	push   ebx
  43125e:	and    eax,0xb1ba57f4
  431263:	repz fild WORD PTR [esi-0x4c02912]
  43126a:	cld    
  43126b:	imul   eax,DWORD PTR [edx-0x4d],0x46310566
  431272:	sub    al,0xde
  431274:	pushf  
  431275:	jle    0x43127b
  431277:	pop    esi
  431278:	inc    ebx
  431279:	dec    esp
  43127a:	scas   eax,DWORD PTR es:[edi]
  43127b:	jp     0x431258
  43127d:	push   es
  43127e:	das    
  43127f:	fidiv  WORD PTR [ecx-0x18082723]
  431285:	sub    BYTE PTR [edx+eax*8-0x9],0x5b
  43128a:	(bad)  
  43128b:	push   edi
  43128c:	add    dl,BYTE PTR [ebx+0x0]
  43128f:	add    BYTE PTR [ecx+0x2e7eeff3],ch
  431295:	push   ebp
  431296:	lahf   
  431297:	pop    es
  431298:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431299:	sbb    al,ah
  43129b:	push   DWORD PTR [ecx-0x17790fea]
  4312a1:	loope  0x43127d
  4312a3:	jl     0x431289
  4312a5:	shl    edi,0x7d
  4312a8:	call   0x31267986
  4312ad:	fisubr WORD PTR [edi-0x41]
  4312b0:	dec    esp
  4312b1:	shr    BYTE PTR [ebp-0x45],cl
  4312b4:	sub    edx,DWORD PTR [esi+0x0]
  4312b7:	and    eax,0xdf85d347
  4312bc:	jmp    0x68b32369
  4312c1:	mov    ebp,0xed1b6418
  4312c6:	add    ah,BYTE PTR [edx+0x2b]
  4312c9:	add    BYTE PTR [eax],al
  4312cb:	mov    ?,WORD PTR [esp+eiz*2]
  4312ce:	jb     0x4312bd
  4312d0:	scas   eax,DWORD PTR es:[edi]
  4312d1:	sbb    eax,0x5ad4ed25
  4312d6:	sti    
  4312d7:	jbe    0x4312b6
  4312d9:	push   cs
  4312da:	jmp    0xf9ad933a
  4312df:	je     0x4312d9
  4312e1:	mov    esp,0x56875108
  4312e6:	stc    
  4312e7:	push   esi
  4312e8:	cmp    DWORD PTR [esi+0xa97625a],ebx
  4312ee:	mov    edi,0x86132ced
  4312f3:	dec    ebp
  4312f4:	add    BYTE PTR [eax],al
  4312f6:	ret    
  4312f7:	pop    ss
  4312f8:	push   ebx
  4312f9:	sahf   
  4312fa:	jno    0x43136d
  4312fc:	test   DWORD PTR [esi+0x31b77630],esp
  431302:	jge    0x431368
  431304:	test   DWORD PTR [esi+0x1563e930],edx
  43130a:	sub    al,0x5b
  43130c:	pop    edx
  43130d:	fld    QWORD PTR [ecx-0x45b2ec9d]
  431313:	test   al,0x0
  431315:	jb     0x43133d
  431317:	arpl   ax,ax
  431319:	jge    0x4312d6
  43131b:	pop    edi
  43131c:	jb     0x431303
  43131e:	mov    cl,0xa6
  431320:	add    BYTE PTR [ebp+0x2a],bl
  431323:	gs inc ebx
  431325:	fnsave [edx+0x7821049e]
  43132b:	jp     0x43137a
  43132d:	into   
  43132e:	xor    BYTE PTR [esi+ecx*1],0x0
  431332:	push   esi
  431333:	loop   0x4313b4
  431335:	jge    0x4312f1
  431337:	pop    ds
  431338:	add    DWORD PTR [eax],eax
  43133a:	xchg   BYTE PTR [esi+0x6a4b8b02],al
  431340:	test   cl,cl
  431342:	inc    edx
  431343:	xchg   esi,eax
  431344:	add    BYTE PTR [ecx],0xbd
  431347:	int    0x62
  431349:	or     BYTE PTR [esi-0x46020b20],ch
  43134f:	jmp    0xf685:0x11bd085c
  431356:	inc    edx
  431357:	shl    BYTE PTR [edx+0x0],0x0
  43135b:	add    BYTE PTR [eax],dl
  43135d:	mov    ch,BYTE PTR [ecx-0x20]
  431360:	push   esp
  431361:	loop   0x4312ea
  431363:	push   ds
  431364:	lahf   
  431365:	mov    ebp,?
  431367:	mov    bh,cl
  431369:	fild   QWORD PTR [eax+0x0]
  43136c:	push   es
  43136d:	fs stc 
  43136f:	out    0x4e,eax
  431371:	stos   BYTE PTR es:[edi],al
  431372:	idiv   bh
  431374:	xchg   edx,eax
  431375:	and    dh,BYTE PTR [ebp+0x12]
  431378:	mov    al,ds:0x3bf3f203
  43137d:	or     eax,0x63a2db85
  431382:	add    BYTE PTR [ebx],0x5d
  431385:	test   eax,0x72390163
  43138a:	push   esi
  43138b:	pop    esi
  43138c:	popf   
  43138d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43138e:	mov    ebx,0x8230d604
  431393:	in     al,dx
  431394:	push   ebp
  431395:	inc    BYTE PTR ds:0x4fba7553
  43139b:	push   edi
  43139c:	dec    ebp
  43139d:	or     ecx,DWORD PTR [ecx-0x462565a3]
  4313a3:	je     0x431348
  4313a5:	in     al,0x44
  4313a7:	hlt    
  4313a8:	jle    0x431355
  4313aa:	(bad)  
  4313ab:	std    
  4313ac:	das    
  4313ad:	nop
  4313ae:	fild   DWORD PTR [eax]
  4313b0:	mov    dh,0xc2
  4313b2:	dec    esp
  4313b3:	gs aaa 
  4313b5:	bnd ret 0xdff3
  4313b9:	mov    eax,DWORD PTR [ecx]
  4313bb:	les    si,DWORD PTR cs:[ebx-0xdffff7a]
  4313c3:	jl     0x431379
  4313c5:	dec    esi
  4313c6:	cld    
  4313c7:	dec    esp
  4313c8:	add    ebp,0x59
  4313cb:	dec    eax
  4313cc:	jl     0x4313c5
  4313ce:	adc    al,0x4c
  4313d0:	shl    DWORD PTR [edx+0x57],1
  4313d3:	push   ds
  4313d4:	inc    eax
  4313d5:	cld    
  4313d6:	inc    eax
  4313d7:	and    al,0x33
  4313d9:	mov    eax,0xfffd84a7
  4313de:	cmp    dh,ah
  4313e0:	jl     0x4313a4
  4313e2:	scas   al,BYTE PTR es:[edi]
  4313e3:	xor    ah,BYTE PTR [ebp+0x35]
  4313e6:	das    
  4313e7:	jne    0x43139c
  4313e9:	cli    
  4313ea:	popa   
  4313eb:	or     eax,0x752f0cb9
  4313f0:	jbe    0x431436
  4313f2:	or     ecx,esp
  4313f4:	inc    ebx
  4313f5:	jns    0x43143b
  4313f7:	(bad)  [ecx+0x7c6f830b]
  4313fd:	push   edx
  4313fe:	jg     0x4313fc
  431400:	cmp    esp,edi
  431402:	push   eax
  431403:	into   
  431404:	dec    edi
  431405:	cli    
  431406:	dec    ecx
  431407:	hlt    
  431408:	inc    ebp
  431409:	adc    DWORD PTR [ebp-0x61],ebx
  43140c:	jl     0x43144b
  43140e:	aas    
  43140f:	mov    WORD PTR [ebx+esi*2+0x2c],es
  431413:	or     ah,BYTE PTR [esi+0x1e6c02b]
  431419:	lea    ebp,[ebp+0x2d]
  43141c:	add    BYTE PTR [ebx+0x16276827],dh
  431422:	jbe    0x431467
  431424:	and    al,0xc8
  431426:	add    BYTE PTR [eax],al
  431428:	(bad)  
  431429:	fucom  st(2)
  43142b:	fnstenv [eax]
  43142d:	pop    ecx
  43142e:	and    esp,edi
  431430:	mov    BYTE PTR [ebx+0x52854fdc],bl
  431436:	rcr    BYTE PTR [edi+ebx*8-0x74],cl
  43143a:	ret    0xb14f
  43143d:	and    BYTE PTR [edi+ebp*4+0x42a102d6],bh
  431444:	xor    dh,bl
  431446:	adc    al,0x7b
  431448:	push   esp
  431449:	pop    edx
  43144a:	mov    ecx,DWORD PTR [ecx+ebx*8+0x79]
  43144e:	sti    
  43144f:	jnp    0x43143d
  431451:	sar    ebx,0x12
  431454:	outs   dx,DWORD PTR ds:[esi]
  431455:	or     al,BYTE PTR [edx]
  431457:	jge    0x431445
  431459:	shl    eax,0x12
  43145c:	pusha  
  43145d:	cmovo  esi,DWORD PTR [ebx+ebp*1-0x71491822]
  431465:	push   edi
  431466:	and    ebp,DWORD PTR [eax]
  431468:	inc    eax
  431469:	pushf  
  43146a:	stos   DWORD PTR es:[edi],eax
  43146b:	daa    
  43146c:	and    eax,0x4cb070de
  431471:	into   
  431472:	pusha  
  431473:	mov    al,0x4c
  431475:	retf   0xc821
  431478:	dec    esp
  431479:	aad    0xe7
  43147b:	jp     0x4314f8
  43147d:	(bad)  
  43147e:	outs   dx,BYTE PTR ds:[esi]
  43147f:	pop    es
  431480:	pop    es
  431481:	add    eax,0x5a2f03d8
  431486:	daa    
  431487:	jmp    FWORD PTR [esi+ebx*2+0x3e7]
  43148e:	das    
  43148f:	clc    
  431490:	call   0xab96406e
  431495:	daa    
  431496:	pop    ss
  431497:	push   cs
  431498:	pop    edi
  431499:	leave  
  43149a:	xor    al,0xf8
  43149c:	out    0xd9,eax
  43149e:	mov    eax,0x835be3f7
  4314a3:	xchg   edi,eax
  4314a4:	add    bh,dh
  4314a6:	stc    
  4314a7:	pop    ebx
  4314a8:	lock fs stc 
  4314ab:	xlat   BYTE PTR ds:[ebx]
  4314ac:	test   dl,bh
  4314ae:	xor    ebx,esi
  4314b0:	add    BYTE PTR [ecx+0x13],dl
  4314b3:	aam    0x0
  4314b5:	jmp    0x7a2bc4b3
  4314ba:	and    BYTE PTR [ebp-0x7],0x72
  4314be:	in     al,0xe3
  4314c0:	stc    
  4314c1:	call   0xaf2beb25
  4314c6:	sbb    al,0x68
  4314c8:	stc    
  4314c9:	(bad)  
  4314ca:	jmp    0x6ab53b4a
  4314cf:	cmc    
  4314d0:	test   DWORD PTR [esi-0x6827b70c],ebp
  4314d6:	stc    
  4314d7:	(bad)  
  4314d8:	jge    0x43146b
  4314da:	sub    cl,bl
  4314dc:	jle    0x431485
  4314de:	sub    al,0xde
  4314e0:	add    BYTE PTR [ecx+ebp*2-0x1f],ch
  4314e4:	push   eax
  4314e5:	jbe    0x43150e
  4314e7:	cdq    
  4314e8:	movaps XMMWORD PTR [ebx],xmm5
  4314eb:	jbe    0x43148d
  4314ed:	cmp    DWORD PTR [ecx+0x68],ebp
  4314f0:	sub    eax,0x93000029
  4314f5:	jmp    0xe4300a1e
  4314fa:	clc    
  4314fb:	dec    esi
  4314fc:	out    0xce,eax
  4314fe:	cli    
  4314ff:	lods   eax,DWORD PTR ds:[esi]
  431500:	push   eax
  431501:	fld    DWORD PTR [eax-0x226b743]
  431507:	in     eax,0xae
  431509:	repz stc 
  43150b:	cs jno 0x431584
  43150e:	mov    ah,0xe9
  431510:	sub    al,0xde
  431512:	sub    eax,0xff6cad29
  431517:	in     eax,0x48
  431519:	ss add cl,ch
  43151c:	sub    al,0x5d
  43151e:	dec    esp
  43151f:	add    dl,ch
  431521:	je     0x4314a5
  431523:	jno    0x4314fb
  431525:	push   ebp
  431526:	out    dx,eax
  431527:	je     0x4314be
  431529:	pop    edi
  43152a:	mov    edi,0xfd2b032c
  43152f:	out    0x44,eax
  431531:	mov    dl,0xf7
  431533:	(bad)  
  431534:	call   0x9147f697
  431539:	dec    ecx
  43153a:	icebp  
  43153b:	mov    edx,esi
  43153d:	mov    ch,0x18
  43153f:	test   ebp,ecx
  431541:	test   ebp,edi
  431543:	cmp    BYTE PTR [eax-0x75],dl
  431546:	and    DWORD PTR cs:[eax-0x20],0x74
  43154b:	xor    ch,al
  43154d:	(bad)  
  43154e:	jl     0x431574
  431550:	mov    DWORD PTR gs:[edx],esp
  431553:	mov    ecx,DWORD PTR [edx]
  431555:	mov    dh,0x14
  431557:	sldt   WORD PTR [eax]
  43155a:	jmp    0x74061011
  43155f:	loopne 0x431565
  431561:	mov    al,ds:0x66128946
  431566:	retf   
  431567:	adc    ch,BYTE PTR [esi+0x1b]
  43156a:	inc    esp
  43156b:	jecxz  0x4315e2
  43156d:	and    al,0xfe
  43156f:	in     al,0x3d
  431571:	and    al,0x1a
  431573:	or     BYTE PTR [edx+esi*8+0x7c831173],bl
  43157a:	cmp    dh,BYTE PTR [edx-0x7c]
  43157d:	rcr    bl,0xdc
  431580:	mov    esi,0x642a44
  431585:	mov    edx,eax
  431587:	out    0x6d,al
  431589:	and    al,0x2
  43158b:	or     BYTE PTR ds:0x601111d0,al
  431591:	dec    DWORD PTR [edx-0x4d7fe045]
  431597:	mov    ebx,0x422f0006
  43159c:	sbb    ah,BYTE PTR [edx+0x4]
  43159f:	push   ecx
  4315a0:	and    DWORD PTR [edi],ebx
  4315a2:	sub    cl,dh
  4315a4:	xor    edi,ecx
  4315a6:	mov    al,0x64
  4315a8:	js     0x4315ed
  4315aa:	push   ebx
  4315ab:	test   DWORD PTR [eax+0x4c],edi
  4315ae:	aas    
  4315af:	(bad)  
  4315b0:	std    
  4315b1:	xchg   dl,dh
  4315b3:	pusha  
  4315b4:	js     0x431601
  4315b6:	dec    ebx
  4315b7:	imul   esi,DWORD PTR [esi+0x7],0x59ac76bf
  4315be:	add    BYTE PTR [eax],al
  4315c0:	in     al,0xff
  4315c2:	bound  ebx,QWORD PTR [ebp+ebp*2-0x7b]
  4315c6:	std    
  4315c7:	out    0x63,eax
  4315c9:	xor    al,0x4c
  4315cb:	cli    
  4315cc:	push   0x571028a1
  4315d1:	out    0x4e,eax
  4315d3:	cld    
  4315d4:	pop    eax
  4315d5:	xchg   DWORD PTR ds:0x77aa4ae6,edi
  4315db:	jmp    0x4315bb
  4315dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4315de:	ja     0x4315b7
  4315e0:	mov    ah,0xba
  4315e2:	add    BYTE PTR [ebx],cl
  4315e4:	xor    BYTE PTR [ebp+0x55],0x87
  4315e8:	test   ebx,esp
  4315ea:	dec    esp
  4315eb:	xchg   DWORD PTR [edx-0x17],esi
  4315ee:	cmp    DWORD PTR [edi-0x3fef8666],0x67b47a04
  4315f8:	pop    edi
  4315f9:	js     0x4315f8
  4315fb:	call   DWORD PTR [edi]
  4315fd:	xchg   ebx,eax
  4315fe:	dec    esi
  4315ff:	cld    
  431600:	add    dl,bh
  431602:	cmp    eax,0xfe8f2973
  431607:	cli    
  431608:	jp     0x4315ab
  43160a:	push   ebp
  43160b:	xor    DWORD PTR [ecx-0x1879b355],0xd82f001f
  431615:	(bad)  [esp+ecx*2+0x5b]
  431619:	fcmovbe st,st(6)
  43161b:	inc    ebx
  43161c:	ror    DWORD PTR [eax],1
  43161e:	pop    edi
  43161f:	add    BYTE PTR [eax+0x2775d],ch
  431625:	add    BYTE PTR [edi],ch
  431627:	ficomp WORD PTR [ecx-0x3e7584d]
  43162d:	ja     0x431622
  43162f:	shl    DWORD PTR [ecx],1
  431631:	adc    ebx,DWORD PTR [edx]
  431633:	fsubrp st(7),st
  431635:	mov    ch,0xb1
  431637:	xchg   edx,eax
  431638:	iret   
  431639:	dec    edi
  43163a:	retf   0xda63
  43163d:	or     al,0xe9
  431640:	or     al,0x4b
  431642:	push   ecx
  431643:	push   edi
  431644:	sbb    al,0xfc
  431646:	adc    bl,bh
  431648:	inc    bp
  43164a:	sub    BYTE PTR [edi],al
  43164c:	rcr    BYTE PTR [ecx+0x4bb262ae],1
  431652:	(bad)  [ecx+0x5e]
  431655:	mov    cl,0x28
  431657:	or     al,0xe
  431659:	sbb    bh,dh
  43165b:	push   esi
  43165c:	stos   BYTE PTR es:[edi],al
  43165d:	pop    esp
  43165e:	sbb    BYTE PTR [ecx+edx*4],dh
  431661:	dec    ebx
  431662:	lods   al,BYTE PTR ds:[esi]
  431663:	popf   
  431664:	adc    al,0xf8
  431666:	mov    cl,0xda
  431668:	or     eax,0x7a92a805
  43166d:	hlt    
  43166e:	pop    ecx
  43166f:	sahf   
  431670:	jle    0x431678
  431672:	test   al,0x99
  431674:	or     DWORD PTR [ebx-0x7da687f],ebp
  43167a:	adc    BYTE PTR [ebx],cl
  43167c:	outs   dx,DWORD PTR ds:[esi]
  43167d:	pop    eax
  43167e:	pop    edi
  43167f:	push   ebp
  431680:	out    0x7e,eax
  431682:	jae    0x43165a
  431684:	mov    cl,0xb2
  431686:	mov    cl,0x26
  431688:	push   edi
  431689:	add    eax,0xde2f0000
  43168e:	xchg   edx,eax
  43168f:	(bad)  [esi+eax*1]
  431692:	add    DWORD PTR [esi+ebx*4+0x65],esp
  431696:	call   0xf9aacc9e
  43169b:	ins    DWORD PTR es:[edi],dx
  43169c:	imul   ebp,ebp,0x33
  43169f:	push   0xfffffff6
  4316a1:	add    BYTE PTR gs:[ebp+0xd7b5f25],bl
  4316a8:	xor    ebx,edx
  4316aa:	mov    al,ds:0xf9bfdde9
  4316af:	je     0x4316a1
  4316b1:	js     0x431664
  4316b3:	stc    
  4316b4:	mul    DWORD PTR [ebx-0x7b]
  4316b7:	stc    
  4316b8:	scas   eax,DWORD PTR es:[edi]
  4316b9:	outs   dx,DWORD PTR ds:[esi]
  4316ba:	je     0x4316bd
  4316bc:	adc    BYTE PTR [edx],bl
  4316be:	std    
  4316bf:	jb     0x431688
  4316c1:	fst    DWORD PTR [ecx+0x62]
  4316c4:	ds jns 0x4316bc
  4316c7:	jge    0x4316af
  4316c9:	arpl   WORD PTR [ecx+ebp*4-0x2ead28a1],ax
  4316d0:	mov    ebx,0x3ab6fb71
  4316d5:	sahf   
  4316d6:	pop    ecx
  4316d7:	bndldx (bad),[ebx]
  4316da:	add    al,0xe9
  4316dc:	rcr    DWORD PTR [ecx],1
  4316de:	std    
  4316df:	jo     0x431752
  4316e1:	fld    QWORD PTR [edi-0x1a216326]
  4316e7:	jg     0x4316a2
  4316e9:	pusha  
  4316ea:	cli    
  4316eb:	cmp    DWORD PTR [ebp+ebx*8+0xe900],edi
  4316f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4316f3:	or     eax,0xb104e125
  4316f8:	jae    0x4316e3
  4316fa:	sub    al,0xf8
  4316fc:	add    al,0xc1
  4316fe:	je     0x43174d
  431700:	stos   DWORD PTR es:[edi],eax
  431701:	pop    edi
  431702:	jne    0x431761
  431704:	shl    dh,0x7f
  431707:	and    DWORD PTR [esi+0xa0c2ce5],edi
  43170d:	add    BYTE PTR [eax-0x6f],dh
  431710:	sbb    eax,0xb5e5c108
  431715:	mov    bl,0xce
  431717:	fld    DWORD PTR [eax]
  431719:	add    BYTE PTR [ebp+0x64],cl
  43171c:	test   cl,cl
  43171e:	mov    dl,0xde
  431720:	add    DWORD PTR [ecx],0x10f5d99c
  431726:	push   ebp
  431727:	mov    esp,0x34063300
  43172c:	pop    edi
  43172d:	mov    DWORD PTR [edx-0x78],eax
  431730:	adc    DWORD PTR [ecx],eax
  431732:	xchg   esi,eax
  431733:	fcom   QWORD PTR [esi-0x3e]
  431736:	xchg   edx,eax
  431737:	fcom   QWORD PTR [ebx-0x75]
  43173a:	call   0xdc:0x86f8e55c
  431741:	push   ebx
  431742:	inc    eax
  431743:	das    
  431744:	mov    WORD PTR [ebp-0x52],es
  431747:	sub    DWORD PTR [edi-0x1726a2bb],edi
  43174d:	cmp    al,0x7f
  43174f:	push   ss
  431750:	test   DWORD PTR [ebp+0x16e1a623],0x142a0000
  43175a:	test   DWORD PTR [ebx-0x7506520d],0xcc451e68
  431764:	push   esi
  431765:	loop   0x4317a0
  431767:	add    BYTE PTR [esi-0x5601316d],ch
  43176d:	loop   0x4317cb
  43176f:	or     BYTE PTR [ebx+0x1601115a],bh
  431775:	fadd   QWORD PTR [edi+0x7ae7b645]
  43177b:	or     BYTE PTR [edi],al
  43177d:	fadd   QWORD PTR [eax]
  43177f:	mov    bl,0x7
  431782:	cli    
  431783:	(bad)  
  431784:	ror    DWORD PTR [edi],cl
  431786:	and    DWORD PTR [eax+0x2f],edx
  431789:	xor    eax,0xb97288fd
  43178e:	jne    0x4317d4
  431790:	pop    es
  431791:	in     eax,dx
  431792:	mov    ecx,0x7c65b4e7
  431797:	inc    esp
  431798:	(bad)  
  43179a:	int3   
  43179b:	(bad)  
  43179c:	stos   DWORD PTR es:[edi],eax
  43179d:	xor    DWORD PTR [edx],eax
  43179f:	test   al,0xa6
  4317a1:	cmp    cl,BYTE PTR [ebp-0x7c]
  4317a4:	ror    DWORD PTR [ecx-0x3c],0x8c
  4317a8:	push   0xffffffd1
  4317aa:	mov    ah,0x8c
  4317ac:	jb     0x43176b
  4317ae:	mov    ah,0x67
  4317b0:	daa    
  4317b1:	test   ebp,edi
  4317b3:	call   DWORD PTR [edi]
  4317b5:	pusha  
  4317b6:	dec    eax
  4317b7:	jmp    DWORD PTR [eax+0x3cf68]
  4317bd:	add    BYTE PTR [eax+0x3a],dh
  4317c0:	pop    ecx
  4317c1:	add    ebp,DWORD PTR [edi]
  4317c3:	jne    0x4317c2
  4317c5:	cli    
  4317c6:	and    bl,BYTE PTR [ecx-0xdd0c016]
  4317cc:	cmp    eax,0xbb022274
  4317d1:	(bad)  
  4317d2:	fist   WORD PTR [edi-0x7597f831]
  4317d8:	add    eax,0x7a74ef11
  4317dd:	mov    edi,0x5afa28
  4317e2:	das    
  4317e3:	jne    0x43182d
  4317e5:	je     0x431842
  4317e7:	dec    ebp
  4317e8:	sbb    bh,bl
  4317ea:	inc    eax
  4317eb:	dec    eax
  4317ec:	jl     0x431832
  4317ee:	inc    ebx
  4317ef:	or     BYTE PTR [edi+0x5cc5303f],0x65
  4317f6:	(bad)  
  4317f8:	dec    eax
  4317f9:	sub    edi,0x61
  4317fc:	in     eax,0x61
  4317fe:	lods   al,BYTE PTR ds:[esi]
  4317ff:	das    
  431800:	std    
  431801:	or     ch,BYTE PTR [ebx+0x2f0225dd]
  431807:	ficom  WORD PTR [esi]
  431809:	inc    esp
  43180a:	mov    ss,WORD PTR [ebp-0x16]
  43180d:	inc    ecx
  43180e:	jae    0x431873
  431810:	call   0xe81fd46f
  431815:	add    edx,DWORD PTR [ecx-0x36]
  431818:	dec    edi
  431819:	stos   BYTE PTR es:[edi],al
  43181a:	aad    0x60
  43181c:	xor    bh,BYTE PTR [esi-0x68]
  43181f:	jmp    0x4394f6
  431824:	arpl   WORD PTR [edx-0xe],bp
  431827:	xchg   ecx,eax
  431828:	pop    ds
  431829:	iret   
  43182a:	push   ecx
  43182b:	mov    edx,0x7cb90bc5
  431830:	enter  0x7975,0x9e
  431834:	mov    dh,0x5e
  431836:	outs   dx,BYTE PTR ds:[esi]
  431837:	push   ebx
  431838:	xchg   ecx,eax
  431839:	(bad)  [esi-0x1d9854af]
  43183f:	jg     0x4317f1
  431841:	fsubr  st(7),st
  431843:	add    ebp,DWORD PTR [eax-0xcc14420]
  431849:	arpl   di,sp
  43184b:	add    BYTE PTR [ebp+0x2d7afee9],0x51
  431852:	sbb    al,0x28
  431854:	fild   WORD PTR [esi]
  431856:	ret    
  431857:	mov    ah,0x18
  431859:	pop    ecx
  43185a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43185b:	rol    DWORD PTR [ebx-0x8],1
  43185e:	leavew 
  431860:	je     0x4318c0
  431862:	fisubr DWORD PTR [edi-0x70]
  431865:	pop    ecx
  431866:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431867:	rcr    DWORD PTR [edi],1
  431869:	push   ebx
  43186a:	loop   0x431845
  43186c:	inc    ebp
  43186d:	push   es
  43186e:	xchg   ebx,eax
  43186f:	mov    ah,0xfc
  431871:	scas   ax,WORD PTR es:[edi]
  431873:	jmp    0x5873:0x7ca75f70
  43187a:	outs   dx,BYTE PTR ds:[esi]
  43187b:	rcl    DWORD PTR [eax],0xee
  43187e:	add    BYTE PTR [esi],bh
  431880:	or     edx,DWORD PTR [esi-0x21d339f0]
  431886:	bound  esp,QWORD PTR [edx]
  431888:	add    BYTE PTR [eax],al
  43188a:	pop    ebx
  43188b:	retf   
  43188c:	dec    eax
  43188d:	mov    eax,ds:0xe900d31b
  431892:	ficom  DWORD PTR [ecx+ebx*8]
  431895:	(bad)  
  431896:	sub    al,ah
  431898:	jp     0x43190e
  43189a:	scas   al,BYTE PTR es:[edi]
  43189b:	out    0xf9,eax
  43189d:	ds push 0x749900c3
  4318a3:	fld    DWORD PTR [ebp+0x42642ce9]
  4318a9:	cmc    
  4318aa:	lods   eax,DWORD PTR ds:[esi]
  4318ab:	and    DWORD PTR [ecx+edx*1],ecx
  4318ae:	push   0xffffff80
  4318b0:	cli    
  4318b1:	push   ss
  4318b2:	fstp   DWORD PTR [esi]
  4318b4:	mov    ebp,0x8366d2e1
  4318b9:	cmc    
  4318ba:	icebp  
  4318bb:	push   edi
  4318bc:	stc    
  4318bd:	xchg   DWORD PTR [ebx],esp
  4318bf:	jp     0x4318cb
  4318c1:	div    cl
  4318c3:	push   edi
  4318c4:	mov    ecx,DWORD PTR [edi+edx*4+0x58]
  4318c8:	stc    
  4318c9:	out    0x5,al
  4318cb:	pop    ds
  4318cc:	call   0xf99abad7
  4318d1:	ins    DWORD PTR es:[edi],dx
  4318d2:	in     al,dx
  4318d3:	ror    DWORD PTR [edi+0x37],1
  4318d6:	sar    DWORD PTR [ebp-0x59],cl
  4318d9:	(bad)  
  4318da:	icebp  
  4318db:	pusha  
  4318dc:	shl    BYTE PTR [esi+eiz*2],0x64
  4318e0:	add    al,BYTE PTR [ebx+0x32]
  4318e3:	gs retf 0x5cae
  4318e7:	inc    esi
  4318e8:	loopne 0x4318d3
  4318ea:	sub    al,0xde
  4318ec:	mov    esp,DWORD PTR [eax+eax*1+0x0]
  4318f0:	cmp    BYTE PTR [eax-0x7],bl
  4318f3:	xchg   esi,eax
  4318f4:	jl     0x431902
  4318f6:	(bad)  
  4318f7:	xor    ebp,0xb100fa7f
  4318fd:	fdivr  QWORD PTR [ecx-0x51abff8c]
  431903:	test   DWORD PTR [edx],edx
  431905:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431906:	idiv   bh
  431908:	dec    esi
  431909:	call   0x7514:0xb995056d
  431910:	or     DWORD PTR [esi+ebp*4-0x63],edx
  431914:	adc    BYTE PTR [esi+esi*8-0x455e1701],ah
  43191b:	or     cl,ah
  43191d:	imul   edx,edx,0xffffff8b
  431920:	mov    esi,DWORD PTR [eax+0x1afe895f]
  431926:	inc    ebp
  431927:	sti    
  431928:	(bad)  
  431929:	xlat   BYTE PTR ds:[ebx]
  43192a:	inc    esp
  43192b:	call   0x8a1caf6d
  431930:	out    0xd7,al
  431932:	inc    esp
  431933:	lock test al,0xd7
  431936:	stc    
  431937:	gs dec edi
  431939:	loop   0x4318be
  43193b:	jmp    DWORD PTR [ecx-0x69ff7324]
  431941:	loopne 0x4318c4
  431943:	pop    es
  431944:	adc    edx,DWORD PTR [esi-0x5c46ae2f]
  43194a:	dec    ecx
  43194b:	sub    BYTE PTR [ebx],bl
  43194d:	mov    ds:0x5ee81474,al
  431952:	jl     0x43192c
  431954:	add    BYTE PTR [eax],al
  431956:	popa   
  431957:	push   edx
  431958:	(bad)  
  431959:	shl    BYTE PTR [edx],0xe1
  43195c:	jae    0x431966
  43195e:	fstp   QWORD PTR [edx+0x63]
  431961:	add    BYTE PTR [ecx],bh
  431963:	mov    ds:0x9ccd2c49,eax
  431968:	in     eax,dx
  431969:	psubusb mm4,mm1
  43196c:	dec    eax
  43196d:	je     0x4319af
  43196f:	cwde   
  431970:	je     0x4319c3
  431972:	sbb    al,0x54
  431974:	mov    esi,0xed6b2f45
  431979:	push   DWORD PTR [eax]
  43197b:	inc    esi
  43197c:	pop    eax
  43197d:	or     BYTE PTR [ebp+0xb443c52],dl
  431983:	inc    esp
  431984:	std    
  431985:	jmp    FWORD PTR [edi]
  431987:	in     eax,dx
  431988:	jno    0x4319fe
  43198a:	fistp  DWORD PTR [ebp+0x18]
  43198d:	iret   
  43198e:	or     ebp,eax
  431990:	ja     0x4319d6
  431992:	dec    DWORD PTR [esp+ecx*4-0x1]
  431996:	push   0x854f3ac0
  43199b:	cmp    DWORD PTR [eax+0x5cb56a8c],ebp
  4319a1:	mov    ecx,0x58441b04
  4319a6:	jbe    0x431972
  4319a8:	inc    esp
  4319a9:	jns    0x4319e4
  4319ab:	or     al,0xca
  4319ad:	jecxz  0x431963
  4319af:	mov    cl,BYTE PTR [ebp+0xa]
  4319b2:	js     0x4319f9
  4319b4:	lods   eax,DWORD PTR ds:[esi]
  4319b5:	xchg   al,dh
  4319b7:	xchg   ebp,eax
  4319b8:	jb     0x4319fe
  4319ba:	add    BYTE PTR [eax],al
  4319bc:	jecxz  0x431953
  4319be:	push   ebp
  4319bf:	inc    eax
  4319c0:	and    ebx,0xf1228643
  4319c6:	test   BYTE PTR [ebp+edx*4+0x45],bh
  4319ca:	leave  
  4319cb:	pop    es
  4319cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4319cd:	inc    esp
  4319ce:	xlat   BYTE PTR ds:[ebx]
  4319cf:	jmp    ecx
  4319d1:	inc    ebx
  4319d2:	lods   eax,DWORD PTR ds:[esi]
  4319d3:	xor    esi,DWORD PTR [edx+ebx*1+0x20f2f9fd]
  4319da:	add    BYTE PTR [edi+eax*4+0x41],0x80
  4319df:	inc    esp
  4319e0:	dec    edi
  4319e1:	inc    edi
  4319e2:	add    BYTE PTR [ebx+ebx*2+0x4d],0x7d
  4319e7:	jl     0x431a34
  4319e9:	dec    ecx
  4319ea:	hlt    
  4319eb:	jge    0x43198b
  4319ed:	mov    al,BYTE PTR [edx+edi*8-0x4c]
  4319f1:	fisubr WORD PTR [eax+esi*1]
  4319f4:	stos   DWORD PTR es:[edi],eax
  4319f5:	push   ds
  4319f6:	adc    edi,edx
  4319f8:	mov    cl,0xe6
  4319fa:	aaa    
  4319fb:	inc    ebp
  4319fc:	(bad)  
  4319fe:	data16 fdivp st(4),st
  431a01:	(bad)  [esi-0x80]
  431a04:	mov    al,0xdc
  431a06:	out    0x3,eax
  431a08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431a09:	pop    esi
  431a0a:	mov    DWORD PTR [edx],0x405ede2f
  431a10:	out    dx,al
  431a11:	pop    esi
  431a12:	pop    ds
  431a13:	add    ebp,DWORD PTR [edi]
  431a15:	fsubp  st(0),st
  431a17:	pop    ebx
  431a18:	jnp    0x4319f8
  431a1a:	out    0x3,eax
  431a1c:	stos   DWORD PTR es:[edi],eax
  431a1d:	sbb    eax,0xe9d3
  431a22:	xor    eax,0x2e0b6694
  431a27:	fsubrp st(7),st
  431a29:	js     0x4319dc
  431a2b:	mov    ecx,0x652f03e8
  431a30:	pop    ebx
  431a31:	sub    BYTE PTR [eax],0xdd
  431a34:	out    0x3,eax
  431a36:	lds    ebx,FWORD PTR [esi-0x21]
  431a39:	add    ch,BYTE PTR [edi]
  431a3b:	ficomp WORD PTR [esi-0x4a]
  431a3e:	in     al,dx
  431a3f:	(bad)  
  431a40:	jecxz  0x4319eb
  431a42:	mov    cl,0xdc
  431a44:	ins    BYTE PTR es:[edi],dx
  431a45:	inc    ebx
  431a46:	sbb    al,0xf3
  431a48:	jmp    0x2f03:0xe915c98d
  431a4f:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  431a51:	sti    
  431a52:	mov    bh,0x61
  431a54:	xchg   esi,eax
  431a55:	in     al,0x2f
  431a57:	fsubrp st(7),st
  431a59:	inc    ecx
  431a5a:	stc    
  431a5b:	adc    eax,0x5f2f03e9
  431a60:	test   al,0x8
  431a62:	icebp  
  431a63:	shl    BYTE PTR [esp+eax*4-0x4717a91d],1
  431a6a:	bswap  eax
  431a6c:	add    ch,ah
  431a6e:	mov    edi,0x9e19a8a1
  431a73:	mov    eax,ds:0xf1ec39b4
  431a78:	dec    esp
  431a79:	imul   DWORD PTR [edx+ebx*2+0x7e]
  431a7d:	lods   eax,DWORD PTR ds:[esi]
  431a7e:	pop    ds
  431a7f:	imul   eax,DWORD PTR [ebx+0x55],0x1363c403
  431a86:	add    BYTE PTR [eax],al
  431a88:	aas    
  431a89:	mov    dh,0xe8
  431a8b:	jnp    0x431abe
  431a8d:	push   esp
  431a8e:	stc    
  431a8f:	fs (bad) 
  431a91:	and    eax,0x57671ce8
  431a96:	stc    
  431a97:	(bad)  
  431a98:	push   cs
  431a99:	mov    cl,0xc7
  431a9b:	sub    esp,DWORD PTR [edi]
  431a9d:	ficom  WORD PTR [edx-0x42]
  431aa0:	mov    eax,ds:0xea4e2d49
  431aa5:	xchg   edi,eax
  431aa6:	pop    esp
  431aa7:	call   0xe1b6f8d8
  431aac:	cmc    
  431aad:	lods   al,BYTE PTR ds:[esi]
  431aae:	push   ecx
  431aaf:	sahf   
  431ab0:	ins    DWORD PTR es:[edi],dx
  431ab1:	repnz or al,0xd8
  431ab4:	in     al,dx
  431ab5:	pop    ecx
  431ab6:	mov    BYTE PTR [edi-0x31],ch
  431ab9:	fiadd  WORD PTR [eax]
  431abb:	jmp    0xedb63779
  431ac0:	mov    edx,0x1cebe599
  431ac5:	ficomp WORD PTR [ecx-0x59]
  431ac8:	jmp    0xb050a07e
  431acd:	inc    ebp
  431ace:	sub    al,0x9a
  431ad0:	mov    eax,ds:0x3b6a8531
  431ad5:	fild   WORD PTR [eax]
  431ad7:	jmp    0x731fbd8f
  431adc:	mov    cl,0xe5
  431ade:	(bad)  
  431adf:	call   0x24cac710
  431ae4:	pop    ss
  431ae5:	push   0x7d
  431ae7:	add    BYTE PTR [edx],ch
  431ae9:	jecxz  0x431aeb
  431aeb:	add    BYTE PTR [eax],al
  431aed:	add    BYTE PTR [ecx+0x51],al
  431af0:	out    dx,eax
  431af1:	push   eax
  431af2:	iret   
  431af3:	xchg   ebp,eax
  431af4:	rol    edi,1
  431af6:	adc    eax,DWORD PTR [edx]
  431af8:	add    DWORD PTR [eax],eax
  431afa:	push   esi
  431afb:	fld    QWORD PTR [edi+0x149c9e45]
  431b01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431b02:	xor    al,0x1d
  431b04:	stc    
  431b05:	mov    BYTE PTR [ebx+0x1a],al
  431b08:	cmp    DWORD PTR [ebx+0xe34e],esi
  431b0e:	or     DWORD PTR [edi+0x77],esp
  431b11:	add    DWORD PTR [esi],eax
  431b13:	fld    QWORD PTR [ecx+0xe32283]
  431b19:	add    BYTE PTR [ebp+0x2e],bh
  431b1c:	icebp  
  431b1d:	mov    esp,DWORD PTR [edx]
  431b1f:	push   0xffffffbf
  431b21:	inc    ebp
  431b22:	pop    eax
  431b23:	fld    QWORD PTR [ebx+0x4d6109f6]
  431b29:	add    esi,edx
  431b2b:	fadd   QWORD PTR [ecx-0x469a21ba]
  431b31:	je     0x431b2a
  431b33:	mov    bh,cl
  431b35:	dec    edi
  431b36:	sbb    esi,esi
  431b38:	rcl    BYTE PTR [edx],1
  431b3a:	xchg   esi,eax
  431b3b:	fadd   QWORD PTR [ebx+0x3560c9c0]
  431b41:	add    esi,eax
  431b43:	fdivr  QWORD PTR [esi-0x4122c4bb]
  431b49:	inc    ebp
  431b4a:	sub    ebp,ebx
  431b4c:	add    eax,0xc09bd3b6
  431b51:	loopne 0x431b53
  431b53:	add    BYTE PTR [ebp+0x3a054567],al
  431b59:	push   0x44
  431b5b:	in     al,dx
  431b5c:	adc    esp,DWORD PTR [ebp-0x1e2d7bfa]
  431b62:	add    BYTE PTR [eax],al
  431b64:	das    
  431b65:	inc    eax
  431b66:	ja     0x431ba8
  431b68:	cmp    edi,edi
  431b6a:	mov    eax,0x1819f70b
  431b6f:	(bad)  
  431b70:	icebp  
  431b71:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431b73:	jle    0x431b8c
  431b75:	cmp    BYTE PTR [edx+eax*1],ch
  431b78:	mov    edx,0xac61c900
  431b7d:	add    esi,DWORD PTR ds:[ebp+0x32]
  431b81:	into   
  431b82:	shl    ebx,0x44
  431b85:	dec    edx
  431b86:	test   BYTE PTR [ebx+eiz*1+0x46],ah
  431b8a:	test   BYTE PTR [ebx+ebx*1+0x46],bh
  431b8e:	adc    BYTE PTR [edx+eax*8+0x20fffd45],al
  431b95:	sbb    bh,al
  431b97:	adc    esi,DWORD PTR [edi+ebp*8-0x6ab978ec]
  431b9e:	sar    edx,cl
  431ba0:	xor    BYTE PTR [ecx-0x36e0adc1],0x44
  431ba7:	jae    0x431bde
  431ba9:	les    esp,FWORD PTR [ecx-0x3df8d011]
  431baf:	stc    
  431bb0:	lods   al,BYTE PTR cs:[esi]
  431bb2:	mov    ch,0xfa
  431bb4:	cmp    al,BYTE PTR [ecx]
  431bb6:	adc    al,BYTE PTR [eax+0x0]
  431bb9:	add    BYTE PTR [edi],ch
  431bbb:	into   
  431bbc:	mov    ebp,0xfc452f22
  431bc1:	sar    BYTE PTR [eax],0x39
  431bc4:	mov    cl,0x51
  431bc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431bc7:	std    
  431bc8:	jge    0x431bb2
  431bca:	dec    edx
  431bcb:	and    ch,bh
  431bcd:	call   FWORD PTR [ebx]
  431bcf:	xchg   ecx,eax
  431bd0:	test   al,ch
  431bd2:	inc    ecx
  431bd3:	dec    eax
  431bd4:	cmp    DWORD PTR [ecx+0x7efd452f],0x39b13996
  431bde:	mov    ah,0xde
  431be0:	sub    al,0x30
  431be2:	and    eax,0x57072390
  431be7:	scas   al,BYTE PTR es:[edi]
  431be8:	mov    edi,0xca5761c2
  431bed:	aam    0x48
  431bef:	mov    edi,0x575540be
  431bf4:	jbe    0x431bd5
  431bf6:	das    
  431bf7:	fsubrp st(7),st
  431bf9:	inc    eax
  431bfa:	and    ebp,DWORD PTR [edx]
  431bfc:	aad    0xc3
  431bfe:	inc    eax
  431bff:	inc    esp
  431c00:	sar    esi,1
  431c02:	stc    
  431c03:	(bad)  
  431c04:	out    0x3,eax
  431c06:	mov    bl,0x2e
  431c08:	aam    0xc7
  431c0a:	dec    ebp
  431c0b:	fsubrp st(7),st
  431c0d:	shl    DWORD PTR [esi],0x19
  431c10:	sub    ch,cl
  431c12:	sbb    BYTE PTR [edi-0xd],dl
  431c15:	or     BYTE PTR [edx-0x53],dl
  431c18:	retf   0x2f03
  431c1b:	shl    DWORD PTR [ebp-0x7cffff7d],1
  431c21:	pop    eax
  431c22:	out    0xb6,eax
  431c24:	and    al,0x20
  431c26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431c27:	inc    ecx
  431c28:	das    
  431c29:	lods   al,BYTE PTR gs:[esi]
  431c2b:	xor    edx,ecx
  431c2d:	fimul  DWORD PTR [ecx-0x3a]
  431c30:	jecxz  0x431c89
  431c32:	lods   al,BYTE PTR ds:[esi]
  431c33:	inc    eax
  431c34:	pop    eax
  431c35:	fnstcw WORD PTR [edx]
  431c37:	add    eax,0x40d95c24
  431c3c:	lds    edx,FWORD PTR [esi+0x67]
  431c3f:	mov    esi,0x139cdbc3
  431c44:	mov    al,0x9f
  431c46:	out    dx,eax
  431c47:	xchg   BYTE PTR [eax-0x2f],dh
  431c4a:	aam    0x48
  431c4c:	out    dx,al
  431c4d:	jmp    0x56e4051c
  431c52:	push   cs
  431c53:	out    dx,al
  431c54:	sbb    cl,bl
  431c56:	stc    
  431c57:	add    bl,BYTE PTR [ebx]
  431c59:	or     BYTE PTR [ecx],al
  431c5b:	push   0x6e
  431c5d:	mov    BYTE PTR [eax],0x74
  431c60:	sbb    BYTE PTR [esi+0x60],al
  431c63:	mov    al,0x38
  431c65:	push   esp
  431c66:	test   DWORD PTR [edx+0x57],ebp
  431c69:	fld    QWORD PTR [eax]
  431c6b:	jmp    0x6b3bc625
  431c70:	push   edi
  431c71:	pop    esi
  431c72:	add    dl,dl
  431c74:	aaa    
  431c75:	pop    edi
  431c76:	inc    edx
  431c77:	icebp  
  431c78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431c79:	xchg   esi,eax
  431c7a:	je     0x431c60
  431c7c:	mov    ch,0xa9
  431c7e:	lock pusha 
  431c80:	jno    0x431c64
  431c82:	push   eax
  431c83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431c84:	add    BYTE PTR [eax],al
  431c86:	push   ss
  431c87:	sub    cl,BYTE PTR [esi]
  431c89:	sub    DWORD PTR [ebx],ebp
  431c8b:	push   ebx
  431c8c:	inc    ebx
  431c8d:	xchg   ecx,eax
  431c8e:	mov    ah,0x9a
  431c90:	clc    
  431c91:	shr    BYTE PTR [ebp+0x2ce8ffad],cl
  431c97:	jmp    0x5894881a
  431c9c:	stc    
  431c9d:	bound  eax,QWORD PTR [ebp+edi*1+0x4d]
  431ca1:	call   0xdd3cfad2
  431ca6:	inc    esp
  431ca7:	pop    eax
  431ca8:	adc    ecx,DWORD PTR [ebp-0x49ff61e3]
  431cae:	or     ch,BYTE PTR [ebp+0x5d062ac7]
  431cb4:	in     al,dx
  431cb5:	push   0x1f
  431cb7:	in     eax,dx
  431cb8:	push   edx
  431cb9:	xchg   esi,eax
  431cba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431cbb:	dec    ebp
  431cbc:	test   DWORD PTR [edx-0x213fa4e4],ebp
  431cc2:	test   al,0x45
  431cc4:	add    cl,ch
  431cc6:	sub    al,0x50
  431cc8:	cmp    eax,0x84e92a00
  431ccd:	rdpmc  
  431ccf:	fiadd  WORD PTR [eax]
  431cd1:	arpl   WORD PTR [esi+esi*8+0x7d],bp
  431cd5:	add    BYTE PTR [ebx+0x5efdfa19],ch
  431cdb:	bound  eax,QWORD PTR [edi+edi*8+0x13]
  431cdf:	pop    ebp
  431ce0:	xor    eax,0x50e19601
  431ce5:	mov    DWORD PTR [ebx+0xe],ecx
  431ce8:	not    DWORD PTR ds:0xefaa0000
  431cee:	inc    eax
  431cef:	add    ch,dl
  431cf1:	rcl    DWORD PTR [ecx+0x1],cl
  431cf4:	push   esi
  431cf5:	loope  0x431cf7
  431cf7:	bswap  eax
  431cf9:	mov    esi,0x6846fff9
  431cfe:	jle    0x431d54
  431d00:	push   edi
  431d01:	loope  0x431d03
  431d03:	mov    esp,DWORD PTR [ebx]
  431d05:	adc    al,BYTE PTR [ebx+0x7461be34]
  431d0b:	hlt    
  431d0c:	retf   
  431d0d:	or     ch,BYTE PTR [esi+0x4c]
  431d10:	lea    ebx,[ebx]
  431d12:	add    DWORD PTR [ebp+0x6a448cd6],eax
  431d18:	push   es
  431d19:	xor    esi,esi
  431d1b:	adc    eax,0x40eeb6
  431d20:	fwait
  431d21:	mov    eax,ds:0x1b8d3874
  431d26:	imul   ecx,DWORD PTR [ecx-0x3f7aef35],0x768242da
  431d30:	out    0x67,al
  431d32:	inc    esp
  431d33:	hlt    
  431d34:	push   ebp
  431d35:	mov    eax,ds:0xf810f70f
  431d3a:	out    dx,al
  431d3b:	and    edx,DWORD PTR [esi]
  431d3d:	xchg   DWORD PTR ds:0x50dc988d,ecx
  431d43:	lea    edx,[ebp-0x4400af0a]
  431d49:	sub    al,0xf
  431d4b:	inc    eax
  431d4c:	(bad)  
  431d4d:	pop    edi
  431d4e:	mov    ebp,0x2f00000c
  431d53:	ret    0x743d
  431d56:	aaa    
  431d57:	ror    eax,0xfa
  431d5a:	push   edi
  431d5b:	test   esi,edi
  431d5d:	jae    0x431d9e
  431d5f:	push   esp
  431d60:	shl    edi,0xb4
  431d63:	xor    DWORD PTR ds:0x46ea836,0x8fb92f00
  431d6d:	out    0x3c,al
  431d6f:	shl    BYTE PTR [ecx-0x787b4b11],1
  431d75:	(bad)  
  431d76:	push   edi
  431d77:	cwde   
  431d78:	dec    ebx
  431d79:	cli    
  431d7a:	pop    eax
  431d7b:	iret   
  431d7c:	ret    0xaa07
  431d7f:	xchg   BYTE PTR [eax+0x10a4ac06],bh
  431d85:	add    bh,bl
  431d87:	adc    DWORD PTR [ecx],0xffffffcc
  431d8a:	sbb    eax,0xba870507
  431d8f:	push   0x2c
  431d91:	cmp    bh,dh
  431d93:	ins    BYTE PTR es:[edi],dx
  431d94:	cmp    eax,DWORD PTR [esi-0x1f658]
  431d9a:	das    
  431d9b:	ror    cl,1
  431d9d:	imul   DWORD PTR [ecx+ebx*1+0x2b5ff85]
  431da4:	cmp    eax,0xfdeda836
  431da9:	jmp    FWORD PTR [edi]
  431dab:	xor    DWORD PTR [edx],eax
  431dad:	call   0x406316
  431db2:	call   0x13d46e9
  431db7:	add    BYTE PTR [edx],bh
  431db9:	ror    DWORD PTR [esi],1
  431dbb:	inc    eax
  431dbc:	das    
  431dbd:	mov    al,0x0
  431dbf:	repz test edx,0x52411c7
  431dc6:	loopne 0x431d88
  431dc8:	mov    ch,0x7d
  431dca:	add    BYTE PTR [eax-0x492a213a],al
  431dd0:	and    DWORD PTR [edi+0x52],esp
  431dd3:	nop
  431dd4:	das    
  431dd5:	fsubrp st(7),st
  431dd7:	and    al,0xda
  431dda:	mov    bh,0x2b
  431ddc:	iret   
  431ddd:	xor    eax,DWORD PTR [edx]
  431ddf:	cmp    eax,0x1b731eac
  431de4:	clc    
  431de5:	push   edx
  431de6:	cmp    al,BYTE PTR [edi+ebp*1-0x52d41822]
  431ded:	dec    esi
  431dee:	loop   0x431e2c
  431df0:	lods   al,BYTE PTR ds:[esi]
  431df1:	push   ds
  431df2:	push   ebx
  431df3:	or     al,0xfc
  431df5:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431df7:	sub    edi,DWORD PTR [eax]
  431df9:	(bad)  
  431dfb:	add    esi,esp
  431dfd:	mov    bl,0xb0
  431dff:	inc    eax
  431e00:	add    DWORD PTR ds:0x630751f6,esp
  431e06:	lsl    ebp,WORD PTR [edi]
  431e09:	fidiv  WORD PTR [ecx]
  431e0b:	clc    
  431e0c:	fisub  WORD PTR [eax+0x5a]
  431e0f:	xlat   BYTE PTR ds:[ebx]
  431e10:	das    
  431e11:	fsubrp st(7),st
  431e13:	shl    BYTE PTR [ecx-0x4f009925],1
  431e19:	fst    QWORD PTR [ebx]
  431e1b:	add    eax,0xf1b00000
  431e20:	push   edi
  431e21:	mov    dh,BYTE PTR [esi+eiz*2]
  431e24:	sub    dl,al
  431e26:	inc    ecx
  431e27:	imul   ecx,DWORD PTR [edi],0x3
  431e2a:	das    
  431e2b:	fdivrp st(5),st
  431e2d:	sub    esp,DWORD PTR [ecx+0x17]
  431e30:	cmp    DWORD PTR [edi-0x24959ada],esi
  431e36:	das    
  431e37:	fsubrp st(7),st
  431e39:	test   al,0xf7
  431e3b:	leave  
  431e3c:	aas    
  431e3d:	jl     0x431e0f
  431e3f:	push   eax
  431e40:	inc    edx
  431e41:	fst    QWORD PTR [ecx+0xb8892ae]
  431e47:	scas   al,BYTE PTR es:[edi]
  431e48:	add    bh,bl
  431e4a:	in     al,dx
  431e4b:	push   edx
  431e4c:	adc    al,BYTE PTR cs:[esi+0x246f8be2]
  431e53:	fld    QWORD PTR [eax]
  431e55:	jmp    0x794bfb4d
  431e5a:	ins    BYTE PTR es:[edi],dx
  431e5b:	push   edx
  431e5c:	dec    esi
  431e5d:	mov    ecx,0xe86074a5
  431e62:	sub    al,0xde
  431e64:	xchg   DWORD PTR [edi-0x30],ebx
  431e67:	fld    QWORD PTR [eax]
  431e69:	jmp    0xe1a94eb1
  431e6e:	test   eax,0x2ce8185c
  431e73:	fimul  WORD PTR [ebp+0x39]
  431e76:	and    al,0x30
  431e78:	data16 icebp 
  431e7a:	mov    bh,0x5c
  431e7c:	and    al,ch
  431e7e:	sub    al,0xde
  431e80:	dec    ebp
  431e81:	sbb    DWORD PTR [eax],eax
  431e83:	add    BYTE PTR [eax+esi*1],dl
  431e86:	jge    0x431e2d
  431e88:	dec    edi
  431e89:	mov    eax,0xaa56114
  431e8e:	add    cl,ch
  431e90:	sub    al,0x46
  431e92:	inc    ecx
  431e93:	and    dh,ah
  431e95:	push   edi
  431e96:	push   eax
  431e97:	ins    BYTE PTR es:[edi],dx
  431e98:	in     eax,dx
  431e99:	fucomp st(0)
  431e9b:	mov    bl,0x1e
  431e9d:	push   ebp
  431e9e:	stc    
  431e9f:	bound  edx,QWORD PTR [esi]
  431ea1:	or     BYTE PTR [esi],0x29
  431ea4:	sub    esp,DWORD PTR [ebx-0x7e]
  431ea7:	mov    ebp,0x1900de33
  431eac:	inc    esp
  431ead:	sub    al,0x8b
  431eaf:	addr16 retf 
  431eb1:	fiadd  WORD PTR [eax]
  431eb3:	jmp    0xb5dd8594
  431eb8:	xor    ebx,esi
  431eba:	add    BYTE PTR [eax-0x3b],ah
  431ebd:	test   eax,0x672ce8ff
  431ec2:	call   0x900:0xda8a00
  431ec9:	lods   eax,DWORD PTR ds:[esi]
  431eca:	add    BYTE PTR [edx+esi*1-0x1a],0x87
  431ecf:	xchg   BYTE PTR [esi-0x25],dl
  431ed2:	add    BYTE PTR [eax],al
  431ed4:	cmp    ebx,DWORD PTR [ebp+ecx*4+0x1]
  431ed8:	xchg   esi,eax
  431ed9:	fst    QWORD PTR [eax-0x77]
  431edc:	sbb    BYTE PTR [edx+0x0],bl
  431edf:	add    BYTE PTR [esi-0x787b689e],al
  431ee5:	fld    QWORD PTR [eax]
  431ee7:	inc    DWORD PTR [eax]
  431ee9:	add    BYTE PTR [ecx],ah
  431eeb:	xor    eax,0x9b9dc682
  431ef0:	std    
  431ef1:	jmp    DWORD PTR [ecx+0x75e8f860]
  431ef7:	fld    QWORD PTR [eax]
  431ef9:	add    BYTE PTR [eax+0x57081d91],al
  431eff:	cmp    edi,0xe19a6e56
  431f05:	std    
  431f06:	imul   esp,DWORD PTR [eax-0x42],0xf951945f
  431f0d:	push   edx
  431f0e:	and    BYTE PTR [eax-0x1aae3903],al
  431f14:	nop
  431f15:	inc    eax
  431f16:	inc    esi
  431f17:	data16 scas al,BYTE PTR es:[edi]
  431f19:	or     BYTE PTR [edi],dl
  431f1b:	fld    QWORD PTR [eax]
  431f1d:	pop    ebx
  431f1e:	(bad)  
  431f1f:	out    0x83,eax
  431f21:	leave  
  431f22:	inc    edx
  431f23:	fadd   QWORD PTR [ecx-0xa24c3ff]
  431f29:	adc    BYTE PTR [ebp+0x34afd9f],dl
  431f2f:	pop    es
  431f30:	cmp    DWORD PTR [edi+0xdb1e],ebx
  431f36:	shl    dh,1
  431f38:	add    DWORD PTR [edi+0xd9a2],0x97f9ba2f
  431f42:	lods   al,BYTE PTR ds:[esi]
  431f43:	out    dx,al
  431f44:	add    al,0x74
  431f46:	sub    ah,cl
  431f48:	in     eax,dx
  431f49:	out    0xbb,eax
  431f4b:	clc    
  431f4c:	ss cli 
  431f4e:	add    BYTE PTR [eax],al
  431f50:	ins    BYTE PTR es:[edi],dx
  431f51:	dec    esp
  431f52:	xchg   esi,eax
  431f53:	push   edi
  431f54:	cs inc edi
  431f56:	std    
  431f57:	ins    DWORD PTR es:[edi],dx
  431f58:	int    0xcb
  431f5a:	lock lahf 
  431f5c:	cmp    eax,0xa88cfd87
  431f61:	sub    al,BYTE PTR [eax+eax*1]
  431f64:	das    
  431f65:	xchg   edi,eax
  431f66:	rcl    DWORD PTR ss:[eax+0x2f00ca0f],1
  431f6d:	inc    edi
  431f6e:	and    eax,0x37499757
  431f73:	xchg   BYTE PTR [eax+0x2f000462],dh
  431f79:	ret    0x7344
  431f7c:	xor    BYTE PTR [edi],dl
  431f7e:	cmp    BYTE PTR [edi+ebp*2],dl
  431f81:	push   esp
  431f82:	mov    ebp,0xacb7abff
  431f87:	add    BYTE PTR [edi],ch
  431f89:	inc    edi
  431f8a:	int    0xfa
  431f8c:	popa   
  431f8d:	sar    DWORD PTR [edi-0x6d],0x2e
  431f91:	inc    edi
  431f92:	std    
  431f93:	dec    edi
  431f94:	cmp    BYTE PTR [eax+0x37],ch
  431f97:	mov    dl,0xcf
  431f99:	inc    ebp
  431f9a:	std    
  431f9b:	call   DWORD PTR [edi]
  431f9d:	sub    al,0x25
  431f9f:	cld    
  431fa0:	and    BYTE PTR [eax],cl
  431fa2:	inc    eax
  431fa3:	add    cl,BYTE PTR [ebx-0x4e]
  431fa6:	(bad)  
  431fa7:	push   DWORD PTR [ebp-0x7c]
  431faa:	leave  
  431fab:	xchg   BYTE PTR [ebx],bl
  431fad:	test   ebp,0xfe89a88c
  431fb3:	inc    DWORD PTR [eax]
  431fb5:	add    BYTE PTR [edi],ch
  431fb7:	cmc    
  431fb8:	ds inc esp
  431fba:	lock fsubrp st(7),st
  431fbd:	mov    dh,BYTE PTR [ebx+0x56]
  431fc0:	pop    edx
  431fc1:	jnp    0xae46c7b3
  431fc7:	(bad)  
  431fc8:	scas   eax,DWORD PTR es:[edi]
  431fc9:	add    ch,BYTE PTR [edi]
  431fcb:	fiadd  WORD PTR [edx+0x39]
  431fce:	enter  0xb24f,0xd2
  431fd2:	test   eax,0xc22e3f17
  431fd7:	dec    edi
  431fd8:	sub    al,BYTE PTR [eax-0x73563590]
  431fde:	mov    ch,0xb6
  431fe0:	call   0x7ee04ee8
  431fe5:	dec    edx
  431fe6:	sbb    al,0xa8
  431fe8:	pop    esp
  431fe9:	jno    0x431fe7
  431feb:	fsubr  st(7),st
  431fed:	add    edx,DWORD PTR [edi-0x7ac8fd0b]
  431ff3:	pop    edx
  431ff4:	daa    
  431ff5:	mov    al,0x51
  431ff7:	popa   
  431ff8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431ff9:	jmp    eax
  431ffb:	dec    esi
  431ffc:	cld    
  431ffd:	inc    edi
  431ffe:	aas    
  431fff:	sahf   
  432000:	out    0x8c,eax
  432002:	lods   eax,DWORD PTR ds:[esi]
  432003:	mov    dh,0xe8
  432005:	add    ebp,DWORD PTR [edi]
  432007:	arpl   cx,bx
  432009:	mov    dh,BYTE PTR [ebx*2-0x231b8f3e]
  432010:	out    0x3,eax
  432012:	inc    esp
  432013:	push   edi
  432014:	lsl    ebp,WORD PTR [edi]
  432017:	fisubr WORD PTR [edx+0x6300000e]
  43201d:	in     al,dx
  43201e:	daa    
  43201f:	add    al,0xed
  432021:	cwde   
  432022:	call   0x153c:0x1c4f8502
  432029:	jmp    0xdeb23569
  43202e:	ins    DWORD PTR es:[edi],dx
  43202f:	mov    esi,0xcea62505
  432034:	test   eax,0x506a0041
  432039:	jecxz  0x431fc0
  43203b:	and    al,0x23
  43203d:	lods   al,BYTE PTR ds:[esi]
  43203e:	push   ecx
  43203f:	jb     0x431fe5
  432041:	fidivr WORD PTR [ebp+0x29]
  432044:	ds dec ebx
  432046:	fptan  
  432048:	pop    ss
  432049:	lock clc 
  43204b:	pop    esp
  43204c:	stos   DWORD PTR es:[edi],eax
  43204d:	adc    al,BYTE PTR [eax]
  43204f:	jmp    0xa505ce80
  432054:	pop    es
  432055:	dec    edi
  432056:	jle    0x432086
  432058:	mov    eax,0xf7354365
  43205d:	jmp    0x4eb01c06
  432062:	cs pop ss
  432064:	mov    ch,0xc9
  432066:	clc    
  432067:	shl    BYTE PTR [ebx],1
  432069:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43206a:	(bad)  
  43206b:	call   0x72adec9c
  432070:	mov    bl,0xaa
  432072:	(bad)  
  432073:	call   0x394781a4
  432078:	stos   DWORD PTR es:[edi],eax
  432079:	(bad)  
  43207a:	and    DWORD PTR [eax],0xffffffc0
  43207d:	pushf  
  43207e:	aaa    
  43207f:	xor    al,0x0
  432081:	add    BYTE PTR [ebx],bh
  432083:	retf   0x7220
  432086:	push   0xffffffde
  432088:	jge    0x432032
  43208a:	sub    DWORD PTR [ebx-0x28],ecx
  43208d:	repnz in al,dx
  43208f:	out    dx,eax
  432090:	mov    edi,0xc0cf1f53
  432095:	in     eax,0x5c
  432097:	stos   DWORD PTR es:[edi],eax
  432098:	stc    
  432099:	fsubr  QWORD PTR [eax-0x14]
  43209c:	inc    eax
  43209d:	jmp    0x6c4f3b4f
  4320a2:	jae    0x432076
  4320a4:	pop    ds
  4320a5:	jb     0x432053
  4320a7:	mov    cl,0xff
  4320a9:	call   0x597785da
  4320ae:	inc    ebx
  4320af:	push   cs
  4320b0:	les    eax,FWORD PTR [eax]
  4320b2:	mov    cl,0x15
  4320b4:	or     DWORD PTR [ebp-0x52],0x59
  4320b8:	jp     0x43210e
  4320ba:	pop    es
  4320bb:	loop   0x4320bd
  4320bd:	sub    edx,0x59
  4320c0:	stc    
  4320c1:	lds    ebx,FWORD PTR [ebx-0x7874feec]
  4320c7:	mov    WORD PTR [eax-0x55b6818b],cs
  4320cd:	pop    eax
  4320ce:	(bad)  
  4320cf:	loope  0x4320d1
  4320d1:	jb     0x432124
  4320d3:	bound  edi,QWORD PTR [edi+edi*8-0x2a]
  4320d7:	jge    0x4320d7
  4320d9:	mov    bh,ch
  4320db:	stc    
  4320dc:	sub    eax,0xf71501fd
  4320e1:	jne    0x43212d
  4320e3:	adc    eax,0xac15
  4320e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4320e9:	and    ecx,edi
  4320eb:	mov    ebx,ecx
  4320ed:	adc    al,0x57
  4320ef:	pop    esi
  4320f0:	dec    edi
  4320f1:	mov    al,ds:0x58abfffd
  4320f6:	in     eax,0x83
  4320f8:	xor    bh,BYTE PTR [esi]
  4320fa:	dec    edx
  4320fb:	push   esi
  4320fc:	cdq    
  4320fd:	stc    
  4320fe:	mov    dl,0x72
  432100:	adc    DWORD PTR [ebx+eax*4],0xe925dfd8
  432107:	test   DWORD PTR [ebp-0x72],ebp
  43210a:	(bad)  
  43210b:	xor    DWORD PTR [esi+0x460082fa],eax
  432111:	loope  0x43218c
  432113:	jge    0x43217b
  432115:	loope  0x432098
  432117:	jnp    0x432163
  432119:	or     eax,DWORD PTR [ebp-0x1]
  43211c:	inc    esi
  43211d:	mov    es,WORD PTR [edi]
  43211f:	lea    ecx,[ebx]
  432121:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432122:	loope  0x4320dd
  432124:	loop   0x432138
  432126:	test   DWORD PTR [ebp+0x4588a64b],0x4486472f
  432130:	daa    
  432131:	pop    esp
  432132:	mov    al,0xf
  432134:	mov    ah,0x6
  432136:	add    BYTE PTR [eax],0x2f
  432139:	aaa    
  43213a:	and    eax,0x32d3db58
  43213f:	test   al,dh
  432141:	cmp    al,0xc6
  432143:	jle    0x432197
  432145:	mov    edi,0xb36288fd
  43214a:	xchg   dh,bh
  43214c:	add    BYTE PTR [eax],al
  43214e:	sub    eax,0x2f65357a
  432153:	pushf  
  432154:	mov    al,0x1b
  432156:	enter  0x1589,0xfb
  43215a:	cmp    dh,BYTE PTR [ebx]
  43215c:	xor    dh,BYTE PTR [edi+ebx*1+0x14]
  432160:	mov    cl,0xb
  432162:	mov    DWORD PTR [ebx-0x30570688],0x7299842d
  43216c:	pop    ss
  43216d:	xchg   DWORD PTR [edx],ebx
  43216f:	aas    
  432170:	xchg   cl,bl
  432172:	xchg   DWORD PTR [ebp+0x33],esi
  432175:	cli    
  432176:	mov    BYTE PTR [edx+0x52b733d],bh
  43217c:	sar    edx,0x2e
  43217f:	fistp  WORD PTR [ebx-0x78c48f3d]
  432185:	pop    esp
  432186:	pop    edi
  432187:	mov    bh,0xb9
  432189:	mul    DWORD PTR [edi]
  43218b:	sub    al,0xc1
  43218d:	repz loop 0x432202
  432190:	xor    ebp,DWORD PTR [esi]
  432192:	inc    edi
  432193:	clc    
  432194:	sbb    bh,ah
  432196:	dec    eax
  432197:	out    0x2c,eax
  432199:	cmp    ecx,DWORD PTR [ecx-0x77]
  43219c:	xor    eax,DWORD PTR [ebp+0x59d393f2]
  4321a2:	aam    0x7d
  4321a4:	ds pop ss
  4321a6:	das    
  4321a7:	fidivr WORD PTR [ecx+ecx*4]
  4321aa:	adc    al,0x60
  4321ac:	mov    ecx,DWORD PTR [eax]
  4321ae:	cwde   
  4321af:	rcl    DWORD PTR [ebx+0x60000004],0xb3
  4321b6:	pop    esi
  4321b7:	mov    bh,0x30
  4321b9:	push   edi
  4321ba:	lahf   
  4321bb:	mov    DWORD PTR [ebp+0x2f03e86e],ebp
  4321c1:	push   ebp
  4321c2:	sub    al,0x30
  4321c4:	test   eax,0x738adf9f
  4321c9:	inc    esi
  4321ca:	dec    edi
  4321cb:	sub    bl,ah
  4321cd:	dec    ebx
  4321ce:	pop    edx
  4321cf:	sbb    BYTE PTR [eax+0x5b34bbd2],0xda
  4321d6:	pop    esi
  4321d7:	idiv   DWORD PTR [eax]
  4321d9:	in     eax,dx
  4321da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4321db:	add    ecx,DWORD PTR [ecx-0x22]
  4321de:	ins    BYTE PTR es:[edi],dx
  4321df:	mov    edi,0x1bdaebc
  4321e4:	mov    ah,0x33
  4321e6:	data16 cmp al,0x2f
  4321e9:	rcl    esi,1
  4321eb:	sbb    BYTE PTR [ecx],0xda
  4321ee:	out    0xae,eax
  4321f0:	cmp    edx,DWORD PTR [edi-0x5a]
  4321f3:	mov    bl,0x95
  4321f5:	rcr    ebx,1
  4321f7:	mov    BYTE PTR [eax-0x2a],cl
  4321fa:	jo     0x4321bb
  4321fc:	js     0x4321b6
  4321fe:	out    0x86,eax
  432200:	repz push ecx
  432202:	xchg   edi,eax
  432203:	test   eax,0xf7124c72
  432208:	push   0xffffffde
  43220a:	out    0x3,eax
  43220c:	(bad)  
  43220e:	data16 (bad) 
  432210:	push   esp
  432211:	dec    ebx
  432212:	mov    esi,0x28150009
  432217:	stc    
  432218:	add    BYTE PTR [eax],al
  43221a:	outs   dx,DWORD PTR ds:[esi]
  43221b:	shl    esi,1
  43221d:	mov    dh,bl
  43221f:	dec    ecx
  432220:	push   ss
  432221:	mov    ebx,ebx
  432223:	aad    0x0
  432225:	rcl    DWORD PTR [eax+ecx*2],0xf9
  432229:	scas   al,BYTE PTR es:[edi]
  43222a:	mov    bh,0xa1
  43222c:	cld    
  43222d:	inc    esi
  43222e:	push   es
  43222f:	push   ss
  432230:	mov    esi,0x85b12cf1
  432235:	test   DWORD PTR [edi-0x6c5bfca],ebp
  43223b:	arpl   ax,si
  43223d:	jb     0x432201
  43223f:	(bad)  
  432241:	mov    eax,ds:0x278b1e17
  432246:	and    ebx,ebp
  432248:	mov    edi,0x188aae16
  43224d:	mov    ecx,0x5e714314
  432252:	and    ebx,DWORD PTR [edi-0x40]
  432255:	fst    st(3)
  432257:	clc    
  432258:	rol    BYTE PTR [eax-0x61],0xdd
  43225c:	add    cl,ch
  43225e:	test   eax,0xfa72c0c9
  432263:	inc    edx
  432264:	repnz mov cl,0xfb
  432267:	inc    edi
  432268:	bound  ebp,QWORD PTR [edx-0x1f]
  43226b:	sub    al,BYTE PTR [eax]
  43226d:	popa   
  43226e:	cmp    al,0xff
  432270:	add    cl,ch
  432272:	adc    eax,0x2ce973fb
  432277:	ror    BYTE PTR [edi+eax*4],cl
  43227a:	test   DWORD PTR [ecx+0x7be0],esp
  432280:	in     al,0xbc
  432282:	aaa    
  432283:	lods   al,BYTE PTR ds:[esi]
  432284:	dec    esp
  432285:	ror    dh,1
  432287:	(bad)  
  432288:	scas   eax,DWORD PTR es:[edi]
  432289:	leave  
  43228a:	hlt    
  43228b:	jmp    0x20a5f928
  432290:	jbe    0x4322e0
  432292:	outs   dx,BYTE PTR ds:[esi]
  432293:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432294:	test   DWORD PTR ds:0x8794dd4c,eax
  43229a:	test   DWORD PTR [ebx+ecx*2+0x59],ecx
  43229e:	add    DWORD PTR [eax],0xe0e2
  4322a4:	push   ss
  4322a5:	cwde   
  4322a6:	inc    esp
  4322a7:	sti    
  4322a8:	inc    esi
  4322a9:	xchg   esp,eax
  4322aa:	inc    esp
  4322ab:	stc    
  4322ac:	pop    ss
  4322ad:	or     eax,0x1e27f015
  4322b2:	stc    
  4322b3:	test   dh,al
  4322b5:	fst    QWORD PTR [ebx+0x2eabc45]
  4322bb:	jno    0x432276
  4322bd:	or     eax,0x9993d883
  4322c2:	push   es
  4322c3:	test   BYTE PTR [ebp-0x74ffff1e],al
  4322c9:	pop    ss
  4322ca:	rcl    DWORD PTR [eax+0x4d],0x11
  4322ce:	loop   0x43227a
  4322d0:	add    ecx,DWORD PTR ds:0x7a0685f7
  4322d6:	xor    eax,0xef69768b
  4322db:	cmp    ch,dl
  4322dd:	push   eax
  4322de:	jns    0x43235d
  4322e0:	ins    BYTE PTR es:[edi],dx
  4322e1:	loop   0x43226e
  4322e3:	jge    0x4322e5
  4322e5:	add    BYTE PTR [esi],al
  4322e7:	xchg   BYTE PTR ds:0xe130c66a,dl
  4322ed:	adc    eax,0xe8f70ce2
  4322f2:	inc    esp
  4322f3:	stc    
  4322f4:	idiv   edi
  4322f6:	sbb    eax,0x82468909
  4322fb:	in     eax,0x25
  4322fd:	jno    0x432338
  4322ff:	or     eax,0xe92d4582
  432304:	add    ch,BYTE PTR [edx-0x79]
  432307:	xor    cl,ah
  432309:	stc    
  43230a:	cmc    
  43230b:	or     esi,edi
  43230d:	mov    BYTE PTR [ebx+0x5e7d82fa],dl
  432313:	call   0xf83ea33a
  432318:	stc    
  432319:	jae    0x43234a
  43231b:	fiadd  DWORD PTR [ecx-0x501acc8a]
  432321:	sbb    dl,ch
  432323:	xor    eax,0xcc6f4480
  432328:	cmp    ah,bh
  43232a:	cld    
  43232b:	add    ebp,DWORD PTR [esi]
  43232d:	cli    
  43232e:	mov    bl,0x76
  432330:	mov    cl,0xa
  432332:	mov    ah,0x8b
  432334:	adc    eax,0x2e689ff3
  432339:	sub    edi,0xffffffea
  43233c:	or     dl,al
  43233e:	jb     0x4323ac
  432340:	add    al,0xfb
  432342:	cmp    al,0x6f
  432344:	nop
  432345:	jecxz  0x432341
  432347:	(bad)  
  432348:	shl    bh,cl
  43234a:	add    BYTE PTR [eax],al
  43234c:	cwde   
  43234d:	pop    edx
  43234e:	xor    dl,bh
  432350:	scas   eax,DWORD PTR es:[edi]
  432351:	cmp    DWORD PTR [ebx],ebp
  432353:	call   FWORD PTR [edx+edx*2-0x80]
  432357:	add    bl,0x35
  43235a:	std    
  43235b:	(bad)  
  43235c:	jg     0x43230e
  43235e:	sbb    BYTE PTR [ebp+ebx*1+0x427ffd77],ch
  432365:	pushf  
  432366:	std    
  432367:	jae    0x432399
  432369:	mov    DWORD PTR [ecx+ebp*8],0xfffd36a6
  432370:	scas   eax,DWORD PTR es:[edi]
  432371:	jns    0x43239f
  432373:	push   DWORD PTR [ecx]
  432375:	mov    ebx,0xe798f928
  43237a:	add    BYTE PTR [edx-0x2c9f9],0xdf
  432381:	mov    ebp,0x298007c8
  432386:	popa   
  432387:	or     eax,0x448036ef
  43238c:	ror    DWORD PTR [bp+0x2e5f],0x37
  432392:	std    
  432393:	dec    edi
  432394:	mov    ah,0xdd
  432396:	(bad)  
  432397:	sbb    al,0x4d
  432399:	rcr    edx,1
  43239b:	xor    DWORD PTR [ebx-0x4e15b0e3],ebp
  4323a1:	dec    ebp
  4323a2:	ds cmp bh,al
  4323a5:	fdivr  st(6),st
  4323a7:	popf   
  4323a8:	cmp    BYTE PTR [ebx+0x3570af6c],ch
  4323ae:	lgs    eax,FWORD PTR [eax]
  4323b1:	add    BYTE PTR ds:0x19c75f48,ah
  4323b7:	aaa    
  4323b8:	aad    0x2c
  4323ba:	push   ss
  4323bb:	dec    eax
  4323bc:	jo     0x432388
  4323be:	sub    al,0x53
  4323c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4323c1:	sbb    al,0xa3
  4323c3:	int    0x8a
  4323c5:	xor    DWORD PTR [ecx],ecx
  4323c7:	test   DWORD PTR ds:0xa7a1aa03,0x5536e97d
  4323d1:	mov    dh,0xe5
  4323d3:	inc    edi
  4323d4:	pop    edi
  4323d5:	(bad)  
  4323d6:	fldenv [edx+0x27]
  4323d9:	mov    eax,0xa89a5d43
  4323de:	das    
  4323df:	fsubrp st(7),st
  4323e1:	xchg   ebx,eax
  4323e2:	das    
  4323e3:	fsubrp st(7),st
  4323e5:	mov    cl,0x37
  4323e7:	or     ebp,DWORD PTR [eax]
  4323e9:	jge    0x4323dc
  4323eb:	ss out 0xb7,al
  4323ee:	mov    ch,0x47
  4323f0:	xor    dh,BYTE PTR [edi+0x5fd44730]
  4323f6:	xor    bl,BYTE PTR [esi+0x42f37de7]
  4323fc:	mov    edx,0x2514f9d1
  432401:	or     BYTE PTR [edi],ch
  432403:	mov    cl,0x5e
  432405:	and    BYTE PTR [ecx],al
  432407:	cmp    ch,BYTE PTR [edi-0x70a45427]
  43240d:	add    ch,BYTE PTR [edi]
  43240f:	fiadd  WORD PTR [eax]
  432411:	sahf   
  432412:	jl     0x432431
  432414:	inc    ebx
  432415:	out    dx,al
  432416:	add    BYTE PTR [eax],al
  432418:	sub    al,0x55
  43241a:	inc    ebx
  43241b:	fstp   DWORD PTR [edi]
  43241d:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43241f:	sti    
  432420:	ins    BYTE PTR es:[edi],dx
  432421:	inc    edi
  432422:	cs test eax,0x10f8a1c5
  432428:	stos   BYTE PTR es:[edi],al
  432429:	mov    ebx,0xd32ce8ff
  43242e:	mov    ch,al
  432430:	sub    eax,0xf16000de
  432435:	dec    edx
  432436:	test   DWORD PTR [edx-0x34],esi
  432439:	fld    QWORD PTR [eax]
  43243b:	jmp    0x7337ed73
  432440:	(bad)  
  432442:	mov    ebp,DWORD PTR [esi]
  432444:	or     edx,DWORD PTR [edi+0x43b8cce8]
  43244a:	stc    
  43244b:	ins    BYTE PTR es:[edi],dx
  43244c:	ins    BYTE PTR es:[edi],dx
  43244d:	aam    0x87
  43244f:	ins    BYTE PTR es:[edi],dx
  432450:	sub    al,0xde
  432452:	add    BYTE PTR [edi-0xf],bh
  432455:	sar    bh,cl
  432457:	repz loopne 0x4324b9
  43245a:	ret    0x846a
  43245d:	fisubr DWORD PTR [esi]
  43245f:	out    dx,al
  432460:	push   ecx
  432461:	xchg   BYTE PTR [eax],al
  432463:	jmp    0xdd867094
  432468:	sub    dl,dl
  43246a:	fs rol esp,cl
  43246d:	pop    ecx
  43246e:	inc    ebx
  43246f:	adc    edi,0xe8dcf996
  432475:	in     al,dx
  432476:	inc    eax
  432477:	jmp    0x6b3bc69f
  43247c:	add    BYTE PTR [eax],al
  43247e:	lock ror BYTE PTR [ebx+0xddcc72],cl
  432485:	jmp    0xeb0deae
  43248a:	aas    
  43248b:	inc    esp
  43248c:	jae    0x43248e
  43248e:	jbe    0x432486
  432490:	dec    esp
  432491:	clc    
  432492:	add    eax,0x6138ed68
  432497:	lock lods al,BYTE PTR ds:[esi]
  432499:	adc    dl,BYTE PTR [esi-0x39747e26]
  43249f:	loopne 0x4324a1
  4324a1:	add    ah,bh
  4324a3:	loope  0x432430
  4324a5:	inc    ebp
  4324a6:	sahf   
  4324a7:	xor    DWORD PTR [edx],ebp
  4324a9:	shr    BYTE PTR [esi+0x2d],0xe6
  4324ad:	push   DWORD PTR [ecx+0x54]
  4324b0:	mov    ecx,0x645a7e
  4324b5:	lea    ebx,[ebx-0x4e]
  4324b8:	or     dh,0xee
  4324bb:	mov    edi,0x56d1ff70
  4324c0:	mov    ecx,0x449c0a74
  4324c5:	call   DWORD PTR [edi]
  4324c7:	cmc    
  4324c8:	je     0x4324ba
  4324ca:	mov    cl,0xe7
  4324cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4324cd:	adc    al,BYTE PTR [esi-0x26]
  4324d0:	loope  0x432521
  4324d2:	sbb    al,0xda
  4324d4:	add    edi,0x8fe2044d
  4324da:	out    0xf4,eax
  4324dc:	test   BYTE PTR [esi+eax*1+0xeb2286],0x0
  4324e4:	sub    ecx,ecx
  4324e6:	dec    esp
  4324e7:	or     BYTE PTR [ebp+0xa],cl
  4324ea:	arpl   si,si
  4324ec:	push   ds
  4324ed:	loope  0x43251e
  4324ef:	push   0xffffffc6
  4324f1:	sub    ah,cl
  4324f3:	sbb    eax,0x84f6f474
  4324f8:	push   esi
  4324f9:	xchg   ch,bh
  4324fb:	(bad)
  4324fe:	add    BYTE PTR [ebx+0x7e37ddd1],cl
  432504:	mov    dl,BYTE PTR [eax+0x6d2f88fe]
  43250a:	add    edx,eax
  43250c:	jmp    0x7fde:0xf28703d3
  432513:	xchg   BYTE PTR [edi],cl
  432515:	ss std 
  432517:	call   DWORD PTR [edi-0x14]
  43251a:	scas   al,BYTE PTR es:[edi]
  43251b:	cli    
  43251c:	pusha  
  43251d:	xor    al,0xc0
  43251f:	imul   DWORD PTR [edx+ebp*4-0x5afc8c8]
  432526:	sub    al,0x86
  432528:	bnd cs jle 0x432570
  43252c:	cmp    ebp,edi
  43252e:	in     eax,0x7e
  432530:	shl    DWORD PTR ds:0xb320fffd,cl
  432536:	(bad)  
  432537:	cli    
  432538:	sub    BYTE PTR [edx+ebp*1+0x18741f74],cl
  43253f:	lods   al,BYTE PTR ds:[esi]
  432540:	cmp    eax,0x928004f7
  432545:	fs std 
  432547:	jae    0x432549
  432549:	add    BYTE PTR [edi],dh
  43254b:	ror    al,0x7
  43254e:	pop    ss
  43254f:	dec    eax
  432550:	lods   eax,DWORD PTR ds:[esi]
  432551:	cli    
  432552:	clc    
  432553:	ror    al,1
  432555:	cli    
  432556:	push   eax
  432557:	in     eax,0x3b
  432559:	mov    ebp,0xff973737
  43255e:	loope  0x432566
  432560:	mov    es,WORD PTR [eax]
  432562:	das    
  432563:	aaa    
  432564:	sub    dl,BYTE PTR [edi+edi*8]
  432567:	dec    eax
  432568:	mov    ebp,0x70ec1ff
  43256d:	sar    BYTE PTR [eax+0x1db73f0e],0xd8
  432574:	out    0x9d,al
  432576:	in     al,dx
  432577:	imul   esi,DWORD PTR [esi-0x15],0x802592ac
  43257e:	xchg   ebx,eax
  43257f:	cmp    dh,dh
  432581:	call   FWORD PTR [eax-0x22a4923]
  432587:	mov    ch,0x7f
  432589:	jmp    0x2ca16a16
  43258e:	test   edx,ebp
  432590:	jecxz  0x4325a6
  432592:	out    dx,eax
  432593:	fnsave [edi+esi*4+0x4c]
  432597:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432598:	bswap  edi
  43259a:	sahf   
  43259b:	inc    esp
  43259c:	bnd jns 0x4325ba
  43259f:	mov    ss,ebp
  4325a1:	ret    
  4325a2:	pop    eax
  4325a3:	push   ecx
  4325a4:	imul   ebp,eax,0x78
  4325a7:	fucom  st(7)
  4325a9:	add    ebx,edi
  4325ab:	inc    esp
  4325ac:	mov    ecx,0x8c000081
  4325b1:	stc    
  4325b2:	xchg   ebx,eax
  4325b3:	add    al,0x2f
  4325b5:	fsubrp st(7),st
  4325b7:	cdq    
  4325b8:	xor    BYTE PTR [esi+0x51e8f0e8],dh
  4325be:	push   ebx
  4325bf:	call   0x42b04a4
  4325c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4325c5:	or     bl,0x6b
  4325c8:	adc    BYTE PTR [edi+eiz*8+0x1b],al
  4325cc:	sbb    ah,BYTE PTR [edx+edx*4]
  4325cf:	sub    eax,0x1fdde8a
  4325d4:	dec    eax
  4325d5:	push   ds
  4325d6:	je     0x432568
  4325d8:	dec    esp
  4325d9:	cs out 0x3,eax
  4325dc:	das    
  4325dd:	xchg   DWORD PTR ss:[ebp-0x1b],ecx
  4325e1:	inc    ebx
  4325e2:	pop    esp
  4325e3:	enter  0xa60c,0x70
  4325e7:	mov    BYTE PTR [edx+esi*2],cl
  4325ea:	out    0x3,eax
  4325ec:	das    
  4325ed:	push   ebp
  4325ee:	stos   DWORD PTR es:[edi],eax
  4325ef:	out    0x24,eax
  4325f1:	push   ecx
  4325f2:	mov    ds:0x70ae18e7,eax
  4325f7:	jo     0x432605
  4325f9:	jb     0x4325e2
  4325fb:	add    ebp,DWORD PTR [edi]
  4325fd:	push   ebp
  4325fe:	add    BYTE PTR [ebp+0x17f9e788],dh
  432604:	push   ss
  432605:	loop   0x432657
  432607:	jmp    FWORD PTR [ebx+eax*2+0x67]
  43260b:	icebp  
  43260c:	or     DWORD PTR [edi+0x43a6d524],ebx
  432612:	dec    ecx
  432613:	push   cs
  432614:	add    BYTE PTR [eax],al
  432616:	faddp  st(3),st
  432618:	(bad)  
  432619:	cmc    
  43261a:	xchg   esi,eax
  43261b:	ror    DWORD PTR [ebx+0x669f50a5],cl
  432621:	jmp    0xbb106ea2
  432626:	in     al,dx
  432627:	ret    
  432628:	(bad)  
  432629:	cmc    
  43262a:	aad    0x9e
  43262c:	and    al,0x39
  43262e:	les    ebx,FWORD PTR [esi+0x525b3d24]
  432634:	inc    esp
  432635:	add    eax,0x40e361f
  43263a:	add    cl,BYTE PTR [eax+0x7d]
  43263d:	test   DWORD PTR [eax],edx
  43263f:	push   edi
  432640:	(bad)  
  432641:	call   0x85c10472
  432646:	adc    BYTE PTR [ebx-0x1],dl
  432649:	call   0x65cf047a
  43264e:	adc    BYTE PTR [ebx-0x51d31701],dh
  432654:	xchg   DWORD PTR ds:0x6dc1eb07,ecx
  43265a:	or     BYTE PTR [edi-0x1],dl
  43265d:	call   0x29cd088e
  432662:	sub    eax,DWORD PTR [edi-0x2e]
  432665:	add    DWORD PTR ds:0x51e9f944,esi
  43266b:	pop    edi
  43266c:	and    al,0x81
  43266e:	sub    eax,0x2cc300de
  432673:	scas   al,BYTE PTR es:[edi]
  432674:	stc    
  432675:	cmp    bh,BYTE PTR [ecx]
  432677:	pop    edi
  432678:	and    al,0x0
  43267a:	add    BYTE PTR [eax],al
  43267c:	xor    bl,bh
  43267e:	add    BYTE PTR [eax],al
  432680:	pop    ds
  432681:	pop    edx
  432682:	jns    0x432685
  432684:	xchg   esi,eax
  432685:	fimul  WORD PTR [ebx-0x77c9cdbc]
  43268b:	xchg   DWORD PTR [edx],eax
  43268d:	loopne 0x43268f
  43268f:	add    BYTE PTR [ebx],bl
  432691:	sbb    ebx,DWORD PTR ds:0x59b1520
  432697:	mov    DWORD PTR [ecx],edx
  432699:	mov    DWORD PTR [eax],0x7dc38600
  43269f:	and    al,0xe6
  4326a1:	fild   WORD PTR [eax]
  4326a3:	add    cl,al
  4326a5:	(bad)  
  4326a6:	jle    0x432634
  4326a8:	inc    edi
  4326a9:	fiadd  WORD PTR [eax]
  4326ab:	call   0x3a3020
  4326b0:	fadd   QWORD PTR [ecx-0x1f]
  4326b3:	daa    
  4326b4:	ja     0x4326aa
  4326b6:	test   BYTE PTR [ebp-0x38f3727a],0x46
  4326bd:	inc    edx
  4326be:	add    DWORD PTR [eax+0x16],0xffffffc3
  4326c2:	jno    0x4326c8
  4326c4:	lea    ecx,[edx]
  4326c6:	jecxz  0x4326ca
  4326c8:	adc    eax,0xe2448d10
  4326cd:	adc    eax,0xf5238de1
  4326d2:	test   BYTE PTR [esi+edx*8-0x2e74fd71],0xe2
  4326da:	jle    0x4326da
  4326dc:	test   eax,0xc07df5
  4326e1:	add    bl,ah
  4326e3:	pop    es
  4326e4:	bound  esp,QWORD PTR [eax-0x54]
  4326e7:	fiadd  DWORD PTR [eax]
  4326e9:	xor    edi,DWORD PTR [ebp+0x26878c29]
  4326ef:	fild   DWORD PTR [eax]
  4326f1:	add    BYTE PTR [esi+0x2f87af44],al
  4326f7:	out    dx,eax
  4326f8:	add    eax,DWORD PTR [eax]
  4326fa:	das    
  4326fb:	xchg   DWORD PTR [esi],esp
  4326fd:	adc    al,0x1f
  4326ff:	es mov ebp,0x259fadff
  432705:	jae    0x432744
  432707:	dec    edx
  432708:	add    eax,DWORD PTR [ecx]
  43270a:	das    
  43270b:	aaa    
  43270c:	test   eax,0x75a12006
  432711:	aaa    
  432712:	cs aaa 
  432714:	std    
  432715:	outs   dx,BYTE PTR ss:[esi]
  432717:	gs adc al,0x53
  43271a:	xchg   DWORD PTR [ebp-0x358f05cc],edi
  432720:	shl    BYTE PTR [ebx],0x7
  432723:	out    dx,eax
  432724:	loope  0x4326da
  432726:	pusha  
  432727:	dec    eax
  432728:	sbb    dh,BYTE PTR [esi+0x1f7da3a4]
  43272e:	cs aaa 
  432730:	std    
  432731:	ss mov eax,0x2f0004c7
  432737:	cmp    BYTE PTR [ecx+0x38],bh
  43273a:	cs aaa 
  43273c:	std    
  43273d:	xchg   BYTE PTR [eax+0x2f0003fb],ch
  432743:	fdivr  QWORD PTR [esp+esi*2]
  432746:	add    BYTE PTR [eax],al
  432748:	xor    cl,BYTE PTR [edx+eax*2+0x73]
  43274c:	es mov esp,0x63e0e73e
  432752:	es cli 
  432754:	adc    al,0xc6
  432756:	jne    0x4327b3
  432758:	dec    ebx
  432759:	inc    edi
  43275a:	div    BYTE PTR [ecx-0x78f2e48d]
  432760:	stos   DWORD PTR es:[edi],eax
  432761:	scas   eax,DWORD PTR es:[edi]
  432762:	cmc    
  432763:	add    BYTE PTR [edi],ch
  432765:	aaa    
  432766:	jmp    0x2747:0xec325bbe
  43276d:	dec    ebx
  43276e:	or     eax,0xbde6bfa
  432773:	adc    al,0xaf
  432775:	rol    DWORD PTR [ebx],0x14
  432778:	sub    ecx,esp
  43277a:	inc    edi
  43277b:	sbb    al,0xc6
  43277d:	fucom  st(7)
  43277f:	add    esp,DWORD PTR [eax+ecx*4]
  432782:	stos   DWORD PTR es:[edi],eax
  432783:	fistp  QWORD PTR [eax]
  432785:	push   ebp
  432786:	jae    0x43270a
  432788:	sub    bh,bl
  43278a:	out    0x3,eax
  43278c:	pusha  
  43278d:	dec    ebp
  43278e:	fidivr DWORD PTR [edi+0x7a]
  432791:	fucom  st(7)
  432793:	add    edi,DWORD PTR [edx-0xf583c67]
  432799:	inc    eax
  43279a:	cdq    
  43279b:	sti    
  43279c:	jne    0x432765
  43279e:	jecxz  0x4327ca
  4327a0:	sbb    ebx,edx
  4327a2:	fld    st(3)
  4327a4:	push   0xabfa2759
  4327a9:	xchg   edi,esp
  4327ab:	add    eax,DWORD PTR [eax]
  4327ad:	add    BYTE PTR [edi],ch
  4327af:	dec    eax
  4327b0:	mov    ds:0x5bd5d4df,eax
  4327b5:	cmc    
  4327b6:	pop    es
  4327b7:	bound  eax,QWORD PTR [ebx]
  4327b9:	js     0x4327fb
  4327bb:	inc    eax
  4327bc:	out    0xf8,eax
  4327be:	mov    ds:0x2544631d,eax
  4327c3:	pop    ebx
  4327c4:	fs add al,0x2f
  4327c7:	fmulp  st(6),st
  4327c9:	clc    
  4327ca:	jo     0x43281f
  4327cc:	push   0xffffff84
  4327ce:	das    
  4327cf:	fsubrp st(7),st
  4327d1:	sbb    eax,eax
  4327d3:	xor    esp,DWORD PTR [edx-0x3ca544d7]
  4327d9:	xor    eax,DWORD PTR [eax]
  4327db:	inc    eax
  4327dc:	out    0xd3,eax
  4327de:	mov    cl,0x10
  4327e0:	jg     0x432845
  4327e2:	cdq    
  4327e3:	inc    eax
  4327e4:	sub    ch,0xa9
  4327e7:	leave  
  4327e8:	mov    BYTE PTR [edx],dh
  4327ea:	ins    BYTE PTR es:[edi],dx
  4327eb:	cli    
  4327ec:	add    ch,dh
  4327ee:	sub    eax,0xa8b051ca
  4327f3:	sti    
  4327f4:	sub    cl,0x2c
  4327f7:	fimul  WORD PTR [ecx]
  4327f9:	je     0x432866
  4327fb:	pop    ebx
  4327fc:	rcr    ah,0x8f
  4327ff:	pop    eax
  432800:	add    al,cl
  432802:	pushf  
  432803:	fiadd  DWORD PTR [eax]
  432805:	jmp    0x65677b2b
  43280a:	mov    al,ds:0x2198f93f
  43280f:	push   ebx
  432810:	and    al,0x31
  432812:	add    BYTE PTR [eax],al
  432814:	sub    ebx,esi
  432816:	add    BYTE PTR [eax-0x4606eaf5],bh
  43281c:	test   BYTE PTR [eax],cl
  43281e:	mov    esi,0x8c525597
  432823:	lds    ebp,FWORD PTR [edx+ebx*8+0x527de900]
  43282a:	mov    ebp,es
  43282c:	adc    BYTE PTR [edi],bh
  43282e:	stc    
  43282f:	jmp    0x25af5fb1
  432834:	push   es
  432835:	inc    esp
  432836:	test   ecx,ebx
  432838:	pop    ebx
  432839:	xor    BYTE PTR [edi+ebp*8-0x3d],dh
  43283d:	and    al,0x85
  43283f:	scas   al,BYTE PTR es:[edi]
  432840:	adc    al,0x84
  432842:	hlt    
  432843:	into   
  432844:	pop    es
  432845:	aaa    
  432846:	rol    BYTE PTR [edi+edx*2+0xf25f244],1
  43284d:	ret    
  43284e:	(bad)  
  43284f:	in     eax,0x98
  432851:	addr16 cli 
  432853:	scas   al,BYTE PTR es:[edi]
  432854:	inc    edi
  432855:	sar    BYTE PTR [ebp+ecx*8-0x1606c078],0x2c
  43285d:	rcl    DWORD PTR [ebx+0x97f78a9],cl
  432863:	adc    eax,DWORD PTR gs:[ebp-0x7]
  432867:	add    BYTE PTR [ecx+0x6246df5],dh
  43286d:	ret    0xe8d6
  432870:	hlt    
  432871:	in     eax,0xf6
  432873:	(bad)  
  432874:	cmp    edx,esp
  432876:	xor    edi,ebp
  432878:	add    BYTE PTR [eax],al
  43287a:	push   ecx
  43287b:	imul   al
  43287d:	outs   dx,DWORD PTR ds:[esi]
  43287e:	pusha  
  43287f:	div    dh
  432881:	(bad)  
  432882:	ficomp DWORD PTR [esi]
  432884:	push   ecx
  432885:	call   0x39d852
  43288a:	sbb    eax,0xd6129930
  43288f:	fimul  DWORD PTR [ebx+0x8a2a84]
  432895:	add    BYTE PTR [esi+0x51d6f62a],al
  43289b:	scas   eax,DWORD PTR es:[edi]
  43289c:	sbb    eax,0xda978c
  4328a1:	(bad)  
  4328a2:	or     bl,BYTE PTR [edi]
  4328a4:	test   DWORD PTR [ecx],eax
  4328a6:	xchg   dl,bl
  4328a8:	sbb    al,0x8f
  4328aa:	xchg   esi,eax
  4328ab:	(bad)  
  4328ad:	pop    ebx
  4328ae:	inc    ecx
  4328af:	clc    
  4328b0:	test   BYTE PTR [ebx+0x400b9aa3],0x46
  4328b7:	xor    edx,DWORD PTR [ebp+0x24]
  4328ba:	or     cl,BYTE PTR [esi+0x3ddafeff]
  4328c0:	dec    ebp
  4328c1:	(bad)  
  4328c2:	jns    0x4328f4
  4328c4:	push   ebp
  4328c5:	and    al,0xf6
  4328c7:	(bad)  
  4328c8:	(bad)  
  4328c9:	(bad)  
  4328ca:	push   0x3e
  4328cc:	dec    ecx
  4328cd:	(bad)  
  4328ce:	mov    ecx,0xfe243db7
  4328d3:	fld    st(0)
  4328d5:	rol    DWORD PTR ds:0x41fa448d,0x49
  4328dd:	inc    DWORD PTR [eax]
  4328df:	add    BYTE PTR [eax+0x2f247db7],bh
  4328e5:	xchg   edi,eax
  4328e6:	add    al,0x0
  4328e8:	das    
  4328e9:	pop    edi
  4328ea:	mov    edx,0x7764e8df
  4328ef:	inc    ebx
  4328f0:	or     edi,edi
  4328f2:	sbb    al,0x2d
  4328f4:	pushf  
  4328f5:	mov    ah,0x21
  4328f7:	pop    edx
  4328f8:	jno    0x4328ca
  4328fa:	jne    0x4328e0
  4328fc:	push   0x8
  4328fe:	rol    BYTE PTR [esi+0x1318c6d3],1
  432904:	sub    eax,0x627efd47
  432909:	(bad)  
  43290a:	and    DWORD PTR [esi+0x1],ecx
  43290d:	cmp    DWORD PTR [esi+0x65],eax
  432910:	sub    ecx,edx
  432912:	jg     0x4328ff
  432914:	call   0xf572:0x904f21f4
  43291b:	xor    DWORD PTR gs:[edi],ebx
  43291e:	adc    eax,0x21dac5a4
  432923:	mov    WORD PTR [edx+0x70fa27e3],?
  432929:	ja     0x43294d
  43292b:	je     0x432968
  43292d:	in     al,0xaf
  43292f:	pop    ss
  432930:	push   edi
  432931:	cmp    eax,0xc058fc70
  432936:	xor    al,0x84
  432938:	pop    ecx
  432939:	mov    bl,0xbe
  43293b:	jle    0x432907
  43293d:	ss std 
  43293f:	jae    0x432960
  432941:	sbb    al,0xb0
  432943:	sldt   WORD PTR [eax]
  432946:	cmp    BYTE PTR [edx-0x58e504f4],bl
  43294c:	or     eax,0x3dca2f40
  432951:	jae    0x4329ae
  432953:	jl     0x432905
  432955:	adc    ebp,DWORD PTR [edx+0x2e652d09]
  43295b:	mov    eax,ds:0xde2f6804
  432960:	out    0x3,eax
  432962:	out    dx,eax
  432963:	cmp    al,0x14
  432965:	or     al,0x7
  432967:	push   ds
  432968:	mov    ecx,0xa761f528
  43296d:	mov    al,0x41
  43296f:	cmp    eax,0x9e3013dc
  432974:	out    0x82,eax
  432976:	loopne 0x432905
  432978:	sti    
  432979:	(bad)  
  43297a:	adc    esi,DWORD PTR [ebp-0x19]
  43297d:	add    ebp,DWORD PTR [edi]
  43297f:	mov    bl,0xea
  432981:	and    eax,0x9f5e5d81
  432986:	dec    edx
  432987:	push   0xa2a32e16
  43298c:	dec    edi
  43298d:	sbb    ebp,DWORD PTR [esi-0x56d9bbed]
  432993:	and    ebx,DWORD PTR [ecx-0x24e09836]
  432999:	add    edi,edx
  43299b:	push   0xc7dfd43b
  4329a0:	out    0x6b,eax
  4329a2:	add    eax,0x8703f0f8
  4329a7:	sub    DWORD PTR [eax+0x28],edx
  4329aa:	add    BYTE PTR [eax],al
  4329ac:	jne    0x432a24
  4329ae:	inc    DWORD PTR [ecx]
  4329b0:	das    
  4329b1:	fisubr WORD PTR [esi+0x54]
  4329b4:	pop    ebp
  4329b5:	aas    
  4329b6:	jo     0x432978
  4329b8:	pusha  
  4329b9:	(bad)  
  4329ba:	out    0x7a,eax
  4329bc:	outs   dx,DWORD PTR ds:[esi]
  4329bd:	xchg   sp,ax
  4329bf:	daa    
  4329c0:	push   eax
  4329c1:	jno    0x432963
  4329c3:	daa    
  4329c4:	inc    ebp
  4329c5:	lock mov al,0x1
  4329c8:	repnz xor eax,0xab20043d
  4329ce:	retf   
  4329cf:	pushf  
  4329d0:	cmp    BYTE PTR [ebx],al
  4329d2:	call   0xcfd1a7da
  4329d7:	add    eax,0xe900de95
  4329dc:	das    
  4329dd:	fisttp WORD PTR ds:0x2652f16
  4329e3:	jo     0x4329d6
  4329e5:	ffreep st(7)
  4329e7:	stos   BYTE PTR es:[edi],al
  4329e8:	jbe    0x432989
  4329ea:	and    al,0xf9
  4329ec:	pop    es
  4329ed:	mov    al,ds:0xce9be124
  4329f2:	outs   dx,BYTE PTR ds:[esi]
  4329f3:	repz addr16 lahf 
  4329f6:	and    al,0xed
  4329f8:	(bad)  
  4329f9:	lahf   
  4329fa:	and    al,0xed
  4329fc:	and    edx,0x2d
  4329ff:	test   eax,0x19fe44f3
  432a04:	imul   edi,DWORD PTR [ecx+0x10],0xffffffe9
  432a08:	jmp    0x17ae1671
  432a0d:	or     ecx,DWORD PTR [esi-0x49]
  432a10:	add    BYTE PTR [eax],al
  432a12:	jnp    0x432a7e
  432a14:	inc    ebx
  432a15:	sbb    eax,0x45436a7b
  432a1a:	sub    DWORD PTR [edx+0x43],0x45
  432a1e:	jnp    0x432a84
  432a20:	inc    ebx
  432a21:	loope  0x432a24
  432a23:	call   0x1efb:0x137f11dc
  432a2a:	scas   eax,DWORD PTR es:[edi]
  432a2b:	jnp    0x432a36
  432a2d:	ins    DWORD PTR es:[edi],dx
  432a2e:	dec    eax
  432a2f:	cmp    edi,ecx
  432a31:	jmp    0x724fcc1d
  432a36:	xor    esp,DWORD PTR [ebx+0x78]
  432a39:	in     eax,0xd7
  432a3b:	pop    ds
  432a3c:	test   edx,edi
  432a3e:	(bad)  
  432a3f:	cmp    bh,BYTE PTR [ecx]
  432a41:	add    eax,0xec80766b
  432a46:	sub    al,0xde
  432a48:	aaa    
  432a49:	and    al,0x3
  432a4b:	leave  
  432a4c:	push   ss
  432a4d:	pop    esi
  432a4e:	xor    dh,dh
  432a50:	jae    0x432a0f
  432a52:	fsubp  st(3),st
  432a54:	stc    
  432a55:	add    BYTE PTR [ebx-0xe],ah
  432a58:	cli    
  432a59:	icebp  
  432a5a:	(bad)  [ebx+0xec713e5]
  432a60:	dec    edi
  432a61:	call   0x3a2cf9
  432a66:	popf   
  432a67:	fsubr  QWORD PTR [edx]
  432a69:	rcl    BYTE PTR [edx-0x747bf961],0xdf
  432a70:	add    BYTE PTR [eax],al
  432a72:	dec    ebp
  432a73:	cli    
  432a74:	xor    bl,0x0
  432a77:	add    bh,ch
  432a79:	jnp    0x432a5c
  432a7b:	jb     0x432a49
  432a7d:	mov    DWORD PTR [ecx+edi*1],eax
  432a80:	rcr    edx,cl
  432a82:	imul   edx,DWORD PTR [ebx],0x59
  432a85:	mov    ecx,fs
  432a87:	add    esp,DWORD PTR [edx+eax*1+0x75]
  432a8b:	in     al,0xb5
  432a8d:	lahf   
  432a8e:	dec    ecx
  432a8f:	push   esi
  432a90:	outs   dx,BYTE PTR ds:[esi]
  432a91:	daa    
  432a92:	idiv   bh
  432a94:	stc    
  432a95:	aad    0xfb
  432a97:	xor    DWORD PTR [esi-0x45],edx
  432a9a:	mov    ecx,0xbeb57274
  432a9f:	mov    edx,DWORD PTR [ebp+0x48]
  432aa2:	inc    esp
  432aa3:	loopne 0x432a69
  432aa5:	in     al,0x6d
  432aa7:	add    eax,0x72d58b8f
  432aac:	jne    0x432aaf
  432aae:	jne    0x432a90
  432ab0:	test   esp,ebp
  432ab2:	div    BYTE PTR [ebp+0x1a]
  432ab5:	into   
  432ab6:	mov    edi,0x26d6c050
  432abb:	call   FWORD PTR [ecx-0x2]
  432abe:	loop   0x432ac2
  432ac0:	xchg   esp,eax
  432ac1:	sahf   
  432ac2:	jge    0x432a84
  432ac4:	ret    0x8245
  432ac7:	(bad)  
  432ac8:	mov    ebp,0x6e4538d2
  432acd:	push   ebx
  432ace:	adc    esi,DWORD PTR [edi+0x2f]
  432ad1:	dec    edx
  432ad2:	fdiv   QWORD PTR [ebx+eax*1-0x6a]
  432ad6:	icebp  
  432ad7:	cli    
  432ad8:	call   0x1800:0xee017f
  432adf:	repz cmp BYTE PTR [esi],cl
  432ae2:	out    dx,al
  432ae3:	xlat   BYTE PTR ds:[ebx]
  432ae4:	mov    dh,0xe7
  432ae6:	xor    DWORD PTR [eax+0x4614fa1d],ecx
  432aec:	sar    DWORD PTR [edi+0xd9887b3],cl
  432af2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432af3:	or     dh,ch
  432af5:	test   bh,ch
  432af7:	rol    DWORD PTR ds:0x8160377f,cl
  432afd:	inc    edi
  432afe:	xor    edi,DWORD PTR [eax+0x76c40054]
  432b04:	mov    bh,BYTE PTR [ebx+edi*1-0x66]
  432b08:	xchg   edi,eax
  432b09:	repz xlat BYTE PTR ds:[ebx]
  432b0b:	mov    ecx,0xc4b8fa1e
  432b10:	lahf   
  432b11:	comiss xmm3,DWORD PTR [ebx]
  432b14:	hlt    
  432b15:	gs aaa 
  432b17:	mov    esp,0x7aa04f46
  432b1c:	in     eax,dx
  432b1d:	cli    
  432b1e:	inc    edx
  432b1f:	mov    esi,edi
  432b21:	aas    
  432b22:	das    
  432b23:	les    ecx,FWORD PTR [eax+0xb]
  432b26:	mov    ah,0x6a
  432b28:	add    eax,0xb4daea8d
  432b2d:	dec    edi
  432b2e:	fbstp  TBYTE PTR [esi+0x25]
  432b31:	cmp    eax,0x5a1dd257
  432b36:	or     DWORD PTR [esp+ecx*2-0x43],ebp
  432b3a:	xor    eax,DWORD PTR [edi-0x48]
  432b3d:	xchg   BYTE PTR [ebx-0x3a],cl
  432b40:	xor    BYTE PTR [edi],dl
  432b42:	add    BYTE PTR [eax],al
  432b44:	sub    eax,0xe14efd47
  432b49:	dec    edi
  432b4a:	push   ds
  432b4b:	je     0x432b80
  432b4d:	fidiv  WORD PTR [eax+ecx*4+0x44]
  432b51:	cmp    ebx,edx
  432b53:	and    dh,BYTE PTR ds:0x10b3dfb3
  432b59:	inc    ecx
  432b5a:	xchg   esi,eax
  432b5b:	and    BYTE PTR ds:0x1e88b765,ah
  432b61:	jmp    0x395375c9
  432b66:	out    0xa9,eax
  432b68:	mov    eax,edi
  432b6a:	out    0x12,eax
  432b6c:	stos   DWORD PTR es:[edi],eax
  432b6d:	jp     0x432b56
  432b6f:	add    ebp,DWORD PTR [edi]
  432b71:	pop    ebp
  432b72:	sub    al,0x10
  432b74:	hlt    
  432b75:	in     al,dx
  432b76:	xchg   edx,eax
  432b77:	mov    ch,ah
  432b79:	mov    dl,0xf8
  432b7b:	nop
  432b7c:	stos   DWORD PTR es:[edi],eax
  432b7d:	dec    ecx
  432b7e:	test   BYTE PTR [edx],ah
  432b80:	aad    0x8d
  432b82:	jp     0x432b7c
  432b84:	dec    esp
  432b85:	int    0x27
  432b87:	add    al,0xb2
  432b89:	sbb    eax,0xdd8708f3
  432b8e:	out    0x3,eax
  432b90:	mov    ecx,0x4906cda8
  432b95:	loope  0x432b56
  432b97:	add    ebp,DWORD PTR [edi]
  432b99:	fisub  WORD PTR [edi+0x4449ab90]
  432b9f:	and    dl,BYTE PTR [ebp+0x24c86c8d]
  432ba5:	inc    esi
  432ba6:	bound  esi,QWORD PTR [edi]
  432ba8:	add    BYTE PTR [eax],al
  432baa:	mov    edi,DWORD PTR [eax]
  432bac:	arpl   WORD PTR [ebx-0x4],ax
  432baf:	mov    ch,0x74
  432bb1:	enter  0x8d7c,0x64
  432bb5:	and    bh,bl
  432bb7:	or     BYTE PTR [ebx],dl
  432bb9:	cwde   
  432bba:	cmp    BYTE PTR [ebx-0x5c],ch
  432bbd:	ud0    eax,DWORD PTR [ebp-0x68]
  432bc1:	and    DWORD PTR [ebp+0x38],edx
  432bc4:	arpl   WORD PTR [ebx-0x24],ax
  432bc7:	mov    ebp,0x2c8f6a00
  432bcc:	stc    
  432bcd:	je     0x432c20
  432bcf:	mov    bh,0x7b
  432bd1:	loope  0x432be1
  432bd3:	mov    dl,0x23
  432bd5:	ss jbe 0x432c41
  432bd8:	inc    ebx
  432bd9:	fucom  st(3)
  432bdb:	xor    al,0x73
  432bdd:	fisttp QWORD PTR [edi-0x2e]
  432be0:	and    bl,bl
  432be2:	in     al,dx
  432be3:	aaa    
  432be4:	test   BYTE PTR [ecx+0x2c8be742],ch
  432bea:	daa    
  432beb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432bec:	push   eax
  432bed:	sbb    DWORD PTR [eax-0x596ef366],esi
  432bf3:	or     al,0xfb
  432bf5:	sahf   
  432bf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432bf7:	ja     0x432c6d
  432bf9:	(bad)  
  432bfa:	lss    ecx,FWORD PTR [esi+ecx*4]
  432bfe:	fdiv   DWORD PTR [edi+0xe]
  432c01:	sub    DWORD PTR [ebx],esi
  432c03:	mov    bh,0x4b
  432c05:	in     eax,dx
  432c06:	jge    0x1c03a24d
  432c0c:	or     eax,0x2b000029
  432c11:	popa   
  432c12:	rcr    ch,0x2a
  432c15:	mov    esp,0xe32b1f7d
  432c1a:	xor    DWORD PTR [edi+ecx*2+0x685cf934],0xffffffe3
  432c22:	call   0xf97d8d14
  432c27:	jns    0x432c55
  432c29:	aas    
  432c2a:	push   es
  432c2b:	fs jo  0x432c11
  432c2e:	call   0xf97d6664
  432c33:	fucomi st,st(4)
  432c35:	xchg   ebx,eax
  432c36:	pop    edx
  432c37:	ret    0x78e5
  432c3a:	or     al,0xe9
  432c3c:	mov    eax,ds:0x1f68ec60
  432c41:	jecxz  0x432c42
  432c43:	inc    DWORD PTR [esi-0x25]
  432c46:	dec    esi
  432c47:	mov    edx,DWORD PTR [esi-0x32]
  432c4a:	lods   eax,DWORD PTR ds:[esi]
  432c4b:	inc    ebp
  432c4c:	push   edx
  432c4d:	push   0xffffffc7
  432c4f:	shl    DWORD PTR [edi],0x32
  432c52:	add    al,cl
  432c54:	mov    ebp,0x3f8b0127
  432c59:	fs inc esp
  432c5b:	or     al,0x8d
  432c5d:	and    al,0x15
  432c5f:	shl    edi,0xe2
  432c62:	add    ecx,eax
  432c64:	lahf   
  432c65:	and    BYTE PTR ds:0x87ce4b8d,al
  432c6b:	test   edx,eax
  432c6d:	cld    
  432c6e:	idiv   bh
  432c70:	arpl   WORD PTR [eax-0xf],sp
  432c73:	inc    BYTE PTR [eax]
  432c75:	add    cl,dl
  432c77:	std    
  432c78:	mov    esi,0xf6fcce85
  432c7d:	call   edi
  432c7f:	fiadd  DWORD PTR [eax]
  432c81:	add    BYTE PTR [ecx-0x4e0106a1],cl
  432c87:	std    
  432c88:	std    
  432c89:	inc    esi
  432c8b:	(bad)  
  432c8d:	cmp    edi,ebp
  432c8f:	std    
  432c90:	neg    BYTE PTR [esi-0x71]
  432c93:	mov    al,ds:0x697b0001
  432c98:	in     eax,0x83
  432c9a:	push   0xffffffd3
  432c9c:	push   eax
  432c9d:	add    DWORD PTR [ebx-0x27acff1a],0x75
  432ca4:	ins    DWORD PTR es:[edi],dx
  432ca5:	gs sbb eax,0xed810d78
  432cab:	call   0x8b53:0x55969ff6
  432cb2:	shl    edx,cl
  432cb4:	add    DWORD PTR [edi],0x8d0d1afd
  432cba:	ret    0x932
  432cbd:	mov    ebp,DWORD PTR [edi]
  432cbf:	fsub   DWORD PTR ds:0x20e9859d
  432cc5:	sub    DWORD PTR [edi-0x48],0xffffffc4
  432cc9:	xchg   BYTE PTR [eax],ch
  432ccb:	lods   al,BYTE PTR ds:[esi]
  432ccc:	lea    edx,[ebx]
  432cce:	sub    al,0x35
  432cd0:	xchg   DWORD PTR [ecx+0x37],ebx
  432cd3:	ret    0x733c
  432cd6:	and    BYTE PTR [eax-0x69],al
  432cd9:	or     eax,DWORD PTR [eax]
  432cdb:	add    BYTE PTR [ebx+eax*4-0xbc0a37b],ah
  432ce2:	(bad)  
  432ce3:	jns    0x432d24
  432ce5:	pop    ds
  432ce6:	mov    esp,0x851d18fa
  432ceb:	pop    esp
  432cec:	cmp    esi,DWORD PTR [eax+0x2b4079f]
  432cf2:	adc    DWORD PTR [edi+0x18c3f71],eax
  432cf8:	lock add eax,0x492f0009
  432cfe:	std    
  432cff:	mov    BYTE PTR [ecx-0x53fd79c5],cl
  432d05:	xchg   ah,dh
  432d07:	add    BYTE PTR [edi+0x13],ah
  432d0a:	dec    ebp
  432d0b:	add    ah,al
  432d0d:	dec    ecx
  432d0e:	iret   
  432d0f:	mov    edi,0x86b5cd68
  432d14:	retf   0x3ee2
  432d17:	comiss xmm6,DWORD PTR [edx-0x7a]
  432d1b:	jmp    0x432cc9
  432d1d:	mov    ds:0x12a84f10,eax
  432d22:	in     eax,dx
  432d23:	mov    edx,gs
  432d25:	mov    cl,ch
  432d27:	(bad)  
  432d28:	jmp    FWORD PTR [ebp+0x52a6f3bf]
  432d2e:	sbb    edi,esp
  432d30:	ja     0x432d13
  432d32:	sbb    edx,edi
  432d34:	stos   DWORD PTR es:[edi],eax
  432d35:	pop    es
  432d36:	cwde   
  432d37:	or     bh,BYTE PTR [eax-0x22]
  432d3a:	pushf  
  432d3b:	pop    ss
  432d3c:	mov    BYTE PTR [ecx+0x3d],cl
  432d3f:	and    DWORD PTR [eax],eax
  432d41:	add    BYTE PTR [ebp+0x68],ah
  432d44:	es mov ebx,0x3db2077
  432d4a:	push   esp
  432d4b:	stos   DWORD PTR es:[edi],eax
  432d4c:	add    ebx,DWORD PTR [edi]
  432d4e:	fld    TBYTE PTR [ecx]
  432d50:	cli    
  432d51:	cwde   
  432d52:	xor    al,0x35
  432d54:	jl     0x432d61
  432d56:	push   edi
  432d57:	lahf   
  432d58:	jmp    0x542a:0xbf68351e
  432d5f:	pop    ebx
  432d60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432d61:	cwde   
  432d62:	cmp    ebp,DWORD PTR [ecx-0x18]
  432d65:	sbb    BYTE PTR [eax+0x4d9227ca],0x61
  432d6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432d6d:	ror    DWORD PTR [ecx],cl
  432d6f:	(bad)  [esi-0x4d]
  432d72:	xor    BYTE PTR [ebx+0x2b],ah
  432d75:	add    bl,BYTE PTR [edi]
  432d77:	imul   ebx,eax,0xae08f08a
  432d7d:	mov    ah,BYTE PTR [edx-0x36]
  432d80:	inc    sp
  432d82:	cmp    cl,bh
  432d84:	popf   
  432d85:	xchg   esi,eax
  432d86:	sub    DWORD PTR [esi+ebx*2+0x78e13093],ecx
  432d8d:	fcmovb st,st(2)
  432d8f:	xchg   ebx,eax
  432d90:	icebp  
  432d91:	add    DWORD PTR [eax],ebx
  432d93:	push   ds
  432d94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432d95:	rol    BYTE PTR [eax+0x308ad248],cl
  432d9b:	stc    
  432d9c:	mov    bl,0xe7
  432d9e:	sub    BYTE PTR [ebx-0x260f7516],ch
  432da4:	push   0xa0000024
  432da9:	xor    al,0xe7
  432dab:	xchg   ebx,eax
  432dac:	push   edi
  432dad:	mov    ds:0xe31b100b,al
  432db2:	outs   dx,BYTE PTR ds:[esi]
  432db3:	iret   
  432db4:	dec    esp
  432db5:	fiadd  DWORD PTR [eax]
  432db7:	inc    ecx
  432db8:	or     bh,BYTE PTR [eax]
  432dba:	stc    
  432dbb:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  432dbd:	je     0x432e32
  432dbf:	inc    ebp
  432dc0:	out    dx,al
  432dc1:	call   0x48f8e1c6
  432dc6:	dec    edi
  432dc7:	bound  ebp,QWORD PTR [edx-0x18]
  432dca:	dec    ebp
  432dcb:	mov    dh,0xa7
  432dcd:	je     0x432e43
  432dcf:	xchg   ebx,eax
  432dd0:	lods   eax,DWORD PTR ds:[esi]
  432dd1:	je     0x432dd1
  432dd3:	cwde   
  432dd4:	adc    al,0xed
  432dd6:	(bad)  
  432dd7:	hlt    
  432dd8:	and    bl,BYTE PTR [eax+edi*8+0x60]
  432ddc:	(bad)  
  432ddd:	cmp    BYTE PTR [ebx-0xd73681a],al
  432de3:	daa    
  432de4:	aaa    
  432de5:	fisttp QWORD PTR [ebx+0x39b01b37]
  432deb:	into   
  432dec:	rcr    ebx,0xe8
  432def:	out    0x56,eax
  432df1:	xor    bh,cl
  432df3:	jb     0x432e20
  432df5:	pop    edx
  432df6:	stc    
  432df7:	cmp    eax,0x623238e4
  432dfc:	icebp  
  432dfd:	(bad)  
  432dff:	sbb    al,0x23
  432e01:	inc    esi
  432e02:	ds lahf 
  432e04:	dec    edx
  432e05:	cmp    cl,bh
  432e07:	sbb    al,0xf
  432e09:	pop    esp
  432e0a:	inc    edx
  432e0b:	fld    QWORD PTR [eax]
  432e0d:	add    BYTE PTR [ebx],bh
  432e0f:	lods   eax,DWORD PTR ds:[esi]
  432e10:	or     BYTE PTR [eax-0x18],dh
  432e13:	fist   DWORD PTR [ecx+0x6c]
  432e16:	lock fucomi st,st(0)
  432e19:	ret    0x372f
  432e1c:	stc    
  432e1d:	push   ss
  432e1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432e1f:	or     ebp,eax
  432e21:	div    esi
  432e23:	xor    ecx,edi
  432e25:	push   0x46
  432e27:	fidiv  WORD PTR [ebx-0x1d]
  432e2a:	push   edi
  432e2b:	rol    DWORD PTR [ebp+0x42f524a7],1
  432e31:	add    BYTE PTR [edx-0x3c00f6b5],bl
  432e37:	shl    ecx,cl
  432e39:	neg    DWORD PTR [edi]
  432e3b:	shl    esi,cl
  432e3d:	xor    eax,DWORD PTR [esi+0x71]
  432e40:	push   edx
  432e41:	leave  
  432e42:	inc    esp
  432e43:	out    0x0,al
  432e45:	inc    DWORD PTR [eax+0x2e0874d2]
  432e4b:	(bad)  
  432e4c:	cld    
  432e4d:	jmp    FWORD PTR [ecx]
  432e4f:	gs inc edi
  432e51:	or     al,0xdd
  432e53:	sbb    dh,ch
  432e55:	(bad)  
  432e56:	push   edx
  432e57:	out    0x0,eax
  432e59:	mov    ecx,DWORD PTR [eax+0x4e44bee3]
  432e5f:	loopne 0x432e61
  432e61:	jmp    0x432ecd
  432e63:	imul   ecx,DWORD PTR [esi-0x1],0x330d4682
  432e6a:	stc    
  432e6b:	shr    DWORD PTR [ebp+0x24],1
  432e6e:	and    dl,dl
  432e70:	ins    DWORD PTR es:[edi],dx
  432e71:	and    al,0x0
  432e73:	add    dl,dh
  432e75:	push   es
  432e76:	sbb    edi,edi
  432e78:	leave  
  432e79:	rol    DWORD PTR [edx+0x6dc993f0],1
  432e7f:	sbb    cl,cl
  432e81:	dec    edx
  432e82:	sbb    eax,0xf6119e0c
  432e87:	dec    ecx
  432e89:	gs icebp 
  432e8b:	test   DWORD PTR [ecx-0x627af7b6],edi
  432e91:	dec    edx
  432e92:	add    al,0x8b
  432e94:	add    dh,cl
  432e96:	xchg   DWORD PTR [ebx],eax
  432e98:	cmp    eax,0x945e569a
  432e9d:	loop   0x432e9f
  432e9f:	push   ebp
  432ea0:	dec    ebp
  432ea1:	add    eax,DWORD PTR [ecx+0xdfbaec]
  432ea7:	add    BYTE PTR [eax],al
  432ea9:	sbb    al,0x5
  432eab:	add    DWORD PTR [edi],ebp
  432ead:	js     0x432e62
  432eaf:	push   edx
  432eb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432eb1:	and    DWORD PTR ds:0xfda9ab0b,eax
  432eb7:	jmp    FWORD PTR [edi]
  432eb9:	cmp    BYTE PTR ds:0x639c7086,bh
  432ebf:	stc    
  432ec0:	js     0x432ec5
  432ec2:	mov    edi,ebp
  432ec4:	stos   BYTE PTR es:[edi],al
  432ec5:	rcl    BYTE PTR [ecx-0x2bb5b87],cl
  432ecb:	(bad)  
  432ecc:	ffreep st(7)
  432ece:	(bad)  
  432ed0:	fsub   QWORD PTR [esi-0x78]
  432ed3:	inc    ecx
  432ed4:	sub    ecx,DWORD PTR [esi+0xfffd]
  432eda:	cmp    eax,DWORD PTR [ebp-0x6e]
  432edd:	push   edi
  432ede:	or     ch,BYTE PTR [edx*1-0x3c42c711]
  432ee5:	add    ecx,DWORD PTR [eax+ecx*4]
  432ee8:	mov    eax,DWORD PTR [ebx+edi*1-0x54]
  432eec:	ds out 0x43,al
  432eef:	mov    esp,0x8a29370c
  432ef4:	out    dx,al
  432ef5:	xchg   BYTE PTR [edi+0x43],ah
  432ef8:	loop   0x432ec0
  432efa:	inc    esp
  432efb:	add    cl,BYTE PTR [ecx]
  432efd:	jne    0x432f32
  432eff:	jo     0x432ec5
  432f01:	add    ebp,DWORD PTR [edi]
  432f03:	inc    edi
  432f04:	pop    es
  432f05:	add    BYTE PTR [edx+0x37],bh
  432f08:	sbb    BYTE PTR [edi],0x2f
  432f0b:	lods   al,BYTE PTR ds:[esi]
  432f0c:	inc    ebp
  432f0d:	out    0x87,eax
  432f0f:	dec    ecx
  432f10:	adc    eax,0x8f87b2fa
  432f15:	fadd   st,st(4)
  432f17:	and    BYTE PTR es:[ecx],0x2f
  432f1b:	lods   al,BYTE PTR ds:[esi]
  432f1c:	int3   
  432f1d:	add    edi,DWORD PTR [eax+0x27000486]
  432f23:	inc    edi
  432f24:	mov    DWORD PTR [esp+ebp*4],eax
  432f27:	fiadd  WORD PTR [edi]
  432f29:	add    al,0x90
  432f2b:	loopne 0x432f95
  432f2d:	and    eax,0x1b5731a5
  432f32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432f33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432f34:	jecxz  0x432f64
  432f36:	xchg   ecx,eax
  432f37:	pop    esp
  432f38:	or     DWORD PTR [eax+esi*4],eax
  432f3b:	sbb    BYTE PTR [esi+0x4b],ch
  432f3e:	add    BYTE PTR [eax],al
  432f40:	mov    BYTE PTR [esi],al
  432f42:	xor    bl,BYTE PTR [ebx]
  432f44:	jne    0x432fab
  432f46:	aaa    
  432f47:	cmp    DWORD PTR [esi-0x55],0xc41cae6a
  432f4e:	out    dx,eax
  432f4f:	sbb    bl,BYTE PTR [ebx]
  432f51:	push   es
  432f52:	cmp    al,bh
  432f54:	pop    eax
  432f55:	xor    ah,dh
  432f57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432f58:	and    bl,BYTE PTR [esi+0x67608ee7]
  432f5e:	pushf  
  432f5f:	pop    es
  432f60:	stos   BYTE PTR es:[edi],al
  432f61:	push   ds
  432f62:	loop   0x432fe3
  432f64:	push   ds
  432f65:	(bad)  
  432f67:	add    esp,DWORD PTR [edx+0x2e42fbae]
  432f6d:	out    dx,al
  432f6e:	out    0x3,eax
  432f70:	das    
  432f71:	gs loop 0x432f02
  432f74:	addr16 (bad) 
  432f76:	pusha  
  432f77:	retf   
  432f78:	cmp    BYTE PTR [ebp-0xe],ah
  432f7b:	mov    ?,WORD PTR [edi-0x2e]
  432f7e:	jo     0x432f4b
  432f80:	and    al,0xed
  432f82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432f83:	mov    fs,ebp
  432f85:	inc    esp
  432f86:	inc    esp
  432f87:	xchg   DWORD PTR ds:0xb1bf1bde,esi
  432f8d:	cwde   
  432f8e:	out    dx,eax
  432f8f:	mov    ?,WORD PTR [esi]
  432f91:	pop    ebp
  432f92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432f93:	repz fstp DWORD PTR [eax]
  432f96:	pop    esp
  432f97:	nop
  432f98:	and    al,0x67
  432f9a:	sub    al,0x18
  432f9c:	rcl    BYTE PTR [esi],1
  432f9e:	xchg   edx,eax
  432f9f:	sbb    ch,al
  432fa1:	add    BYTE PTR fs:[eax+eax*1],dl
  432fa5:	add    BYTE PTR [edi],ah
  432fa7:	pop    edx
  432fa8:	rcr    dh,0x30
  432fab:	and    eax,0x592ce900
  432fb0:	or     DWORD PTR [ecx+edi*4-0x34],ebp
  432fb4:	test   edi,ebp
  432fb6:	xor    DWORD PTR [ecx-0x79],esi
  432fb9:	loope  0x432f5c
  432fbb:	mov    ds:0xdc747004,eax
  432fc0:	test   DWORD PTR [esi-0x1eb798cc],ebp
  432fc6:	test   eax,0x64600ca3
  432fcb:	in     al,0x85
  432fcd:	mov    cl,0x34
  432fcf:	pop    ebx
  432fd0:	(bad)  
  432fd1:	xchg   ebp,eax
  432fd2:	pop    edx
  432fd3:	lea    ecx,[ebx+0x7d8d5ca6]
  432fd9:	sub    DWORD PTR [eax+eiz*4-0x7],ebx
  432fdd:	fdiv   QWORD PTR [eax-0x32]
  432fe0:	inc    eax
  432fe1:	jmp    0x624f4c8f
  432fe6:	outs   dx,DWORD PTR ds:[esi]
  432fe7:	xor    al,0xff
  432fe9:	out    0xa1,al
  432feb:	mov    eax,ds:0x376e7208
  432ff0:	jl     0x432fce
  432ff2:	inc    esi
  432ff3:	xor    al,0x85
  432ff5:	rcr    DWORD PTR [eax-0x5d868ccc],1
  432ffb:	lock adc al,0x4
  432ffe:	xor    ebx,esi
  433000:	mov    al,ds:0x7dac9fe9
  433005:	test   eax,0x2a8b9f43
  43300a:	add    BYTE PTR [eax],al
  43300c:	fistp  DWORD PTR [edi+0xd3228b]
  433012:	rcl    DWORD PTR [ecx-0x690687ef],0xaf
  433019:	outs   dx,DWORD PTR ds:[esi]
  43301a:	je     0x433024
  43301c:	sub    DWORD PTR [edi],0x6aea0067
  433022:	loope  0x432fcb
  433024:	add    eax,0xc383f6c7
  433029:	sub    edi,ecx
  43302b:	mov    bh,BYTE PTR [ebp+0x59456d3f]
  433031:	scas   eax,DWORD PTR es:[edi]
  433032:	in     eax,dx
  433033:	inc    BYTE PTR [ecx]
  433035:	aad    0xfd
  433037:	inc    DWORD PTR [esi+0x7aff83db]
  43303d:	out    0x81,al
  43303f:	xlat   BYTE PTR ds:[ebx]
  433040:	std    
  433041:	enter  0x858c,0x3a
  433045:	aam    0xf6
  433047:	(bad)  
  433048:	out    dx,al
  433049:	jb     0x43306f
  43304b:	inc    DWORD PTR [ecx-0x2b]
  43304e:	je     0x433060
  433050:	aad    0x8e
  433052:	in     eax,dx
  433053:	inc    BYTE PTR [ecx-0x2b]
  433056:	stc    
  433057:	mov    ebx,cs
  433059:	int    0xf7
  43305b:	jmp    DWORD PTR [ecx]
  43305d:	add    dh,al
  43305f:	and    al,0x31
  433061:	aad    0x84
  433063:	(bad)  
  433064:	mov    edx,0xcdd781e5
  433069:	enter  0x858c,0x3a
  43306d:	aad    0xf6
  43306f:	inc    DWORD PTR [eax]
  433071:	add    dh,bh
  433073:	or     esp,DWORD PTR [edi+edi*8]
  433076:	add    DWORD PTR [edx+0x44],esp
  433079:	adc    al,0x8f
  43307b:	xor    eax,DWORD PTR [edx+0x49e2edc7]
  433081:	call   0x401e36
  433086:	add    eax,0x1d5e569b
  43308b:	mov    ds:0x6d0610bb,eax
  433090:	arpl   WORD PTR [esi+edi*4],ax
  433093:	push   edi
  433094:	into   
  433095:	std    
  433096:	shr    DWORD PTR [edi+0x402f74b9],0x84
  43309d:	pop    ds
  43309e:	das    
  43309f:	mov    esp,0x742de60d
  4330a4:	je     0x66125963
  4330aa:	add    ebx,ebx
  4330ac:	or     al,0xfb
  4330ae:	cli    
  4330af:	sbb    al,0x2f
  4330b1:	ds das 
  4330b3:	mov    eax,0x853d6bea
  4330b8:	std    
  4330b9:	mov    BYTE PTR [ecx],dh
  4330bb:	ret    0x733d
  4330be:	cmp    edi,DWORD PTR [ecx+eax*8-0x41ffc8dd]
  4330c5:	adc    edi,DWORD PTR [edi]
  4330c7:	inc    ebp
  4330c8:	std    
  4330c9:	jmp    DWORD PTR [esi+edi*1-0x43ecb87a]
  4330d0:	aas    
  4330d1:	out    0x39,al
  4330d3:	jne    0x4330fa
  4330d5:	imul   eax,DWORD PTR [eax],0x0
  4330d8:	js     0x4330ab
  4330da:	sbb    BYTE PTR [ecx+0x47],dl
  4330dd:	pop    esi
  4330de:	xor    ah,bh
  4330e0:	push   eax
  4330e1:	adc    edi,DWORD PTR ds:0xfd406d59
  4330e7:	push   esp
  4330e8:	mov    ah,0xe0
  4330ea:	jle    0x4330d7
  4330ec:	pop    ss
  4330ed:	inc    esi
  4330ee:	std    
  4330ef:	(bad)  
  4330f0:	fnstcw WORD PTR [ebx+0x3fb4520e]
  4330f6:	jg     0x4330e9
  4330f8:	xor    bl,al
  4330fa:	inc    edx
  4330fb:	call   FWORD PTR [eax]
  4330fd:	cmp    BYTE PTR [eax+0x34daff42],cl
  433103:	cli    
  433104:	test   al,0x37
  433106:	add    al,BYTE PTR [ebx-0x2c811]
  43310c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43310d:	cli    
  43310e:	or     BYTE PTR [edi+0xf],bh
  433111:	aaa    
  433112:	mov    WORD PTR [ebx+edi*1-0x22],es
  433116:	sbb    al,0xf5
  433118:	jge    0x4330ae
  43311a:	(bad)  
  43311b:	outs   dx,DWORD PTR ds:[esi]
  43311c:	std    
  43311d:	sub    edx,DWORD PTR [edx-0x6e9c3f75]
  433123:	pop    es
  433124:	mov    bl,0x82
  433126:	out    0x3,eax
  433128:	das    
  433129:	popa   
  43312a:	cld    
  43312b:	or     ebp,DWORD PTR [edi]
  43312d:	mov    dl,0x2c
  43312f:	pop    ss
  433130:	cmp    edx,esi
  433132:	popaw  
  433134:	nop
  433135:	sub    al,0x62
  433137:	pop    ss
  433138:	mov    al,ds:0x2c645a
  43313d:	add    BYTE PTR [esi+0x3a2c522d],dl
  433143:	add    cl,BYTE PTR [ebx+0x17]
  433146:	mov    bl,0x2d
  433148:	mov    ebx,0x6e15a806
  43314d:	inc    esi
  43314e:	stos   DWORD PTR es:[edi],eax
  43314f:	arpl   WORD PTR [edi],di
  433151:	push   ss
  433152:	jne    0x433181
  433154:	aas    
  433155:	(bad)  
  433156:	adc    ebp,DWORD PTR ds:0x36ab3f22
  43315c:	sbb    DWORD PTR [edi],edx
  43315e:	push   ebp
  43315f:	loop   0x433148
  433161:	add    ebp,DWORD PTR [edi]
  433163:	arpl   WORD PTR [edx],cx
  433165:	nop
  433166:	xor    eax,0x768b1a59
  43316b:	pop    ebx
  43316c:	fs sub al,0x36
  43316f:	sub    eax,0x2ff2bf2
  433174:	jmp    0x43318c
  433176:	mov    cl,0xa3
  433178:	sti    
  433179:	(bad)  
  43317b:	mov    dl,0x21
  43317d:	sbb    eax,0xd
  433180:	aaa    
  433181:	mov    DWORD PTR [esi-0x12],ebp
  433184:	aaa    
  433185:	mov    DWORD PTR [ebx+0x843f62e],ecx
  43318b:	stos   BYTE PTR es:[edi],al
  43318c:	lea    edx,[esi]
  43318e:	cmc    
  43318f:	popa   
  433190:	add    BYTE PTR [ecx-0x26990360],ch
  433196:	mov    bh,0x9e
  433198:	and    BYTE PTR [ecx],bh
  43319a:	mov    ah,0x1f
  43319c:	push   eax
  43319d:	sahf   
  43319e:	fist   WORD PTR [eax+0x2912]
  4331a4:	sub    ebp,DWORD PTR [ebp+0x6cafddc4]
  4331aa:	jae    0x43318f
  4331ac:	xchg   esi,eax
  4331ad:	loopne 0x433197
  4331af:	add    ecx,DWORD PTR [ecx]
  4331b1:	sub    bh,cl
  4331b3:	ins    BYTE PTR es:[edi],dx
  4331b4:	ins    BYTE PTR es:[edi],dx
  4331b5:	mov    cl,0x3
  4331b7:	push   0xffffff8c
  4331b9:	sub    al,0xe6
  4331bb:	jmp    0x43323a
  4331bd:	ins    BYTE PTR es:[edi],dx
  4331be:	sub    DWORD PTR [ecx],0xffffffa8
  4331c1:	loopne 0x43314a
  4331c3:	sbb    DWORD PTR [edi+edx*8+0x7d],eax
  4331c7:	int3   
  4331c8:	xor    dh,bl
  4331ca:	jae    0x4331bb
  4331cc:	rol    BYTE PTR [ebp+esi*2+0x17],cl
  4331d0:	pop    ss
  4331d1:	sub    BYTE PTR ds:0xc786b929,ch
  4331d7:	sub    esi,DWORD PTR [esi+ebx*8]
  4331da:	int3   
  4331db:	xor    eax,0x2dcc18e8
  4331e0:	lock sbb ah,cl
  4331e3:	mov    esp,0x624f38a5
  4331e8:	jb     0x4331b2
  4331ea:	test   DWORD PTR [edi+0x6bffc240],ebx
  4331f0:	outs   dx,DWORD PTR ds:[esi]
  4331f1:	daa    
  4331f2:	push   eax
  4331f3:	sahf   
  4331f4:	jnp    0x43321d
  4331f6:	into   
  4331f7:	push   0x68
  4331f9:	fstp   TBYTE PTR [ebp-0x1f]
  4331fc:	sub    al,0xb1
  4331fe:	or     esi,ebp
  433200:	push   0xffffffa2
  433202:	stc    
  433203:	(bad)  
  433204:	call   0x12bb9ec
  433209:	add    bh,bl
  43320b:	imul   eax,DWORD PTR [ebp-0x458c0d00],0xffffff8b
  433212:	and    BYTE PTR [esi],ah
  433214:	add    BYTE PTR [esi-0x22],0x7a
  433218:	dec    ebx
  433219:	inc    esi
  43321b:	pop    ebp
  43321c:	mov    ebp,0x12eac108
  433221:	rcr    BYTE PTR [ebp-0x35],0x5c
  433225:	ret    
  433226:	adc    edx,DWORD PTR [ebp-0x1b]
  433229:	push   ecx
  43322a:	add    eax,0xae8b4e7c
  43322f:	arpl   WORD PTR [esp+edi*8+0x3d],ax
  433233:	iret   
  433234:	dec    ecx
  433235:	mov    DWORD PTR [ebx],0x96fff9c6
  43323b:	fucomip st,st(0)
  43323d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43323e:	or     ecx,edx
  433240:	test   BYTE PTR [ebx-0x3b852c25],0x82
  433247:	lods   al,BYTE PTR ds:[esi]
  433248:	mov    ecx,0x4c633275
  43324d:	cld    
  43324e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43324f:	test   DWORD PTR [ebx+0x7ad139ff],0xb9ac82c4
  433259:	jne    0x4331dd
  43325b:	push   esi
  43325c:	push   esp
  43325d:	cld    
  43325e:	frstor [edx]
  433260:	add    DWORD PTR [edi+0x7],ebx
  433263:	add    BYTE PTR [edx],al
  433265:	or     edx,DWORD PTR ds:0x7d118874
  43326b:	push   esi
  43326c:	in     al,0x5d
  43326e:	add    BYTE PTR [eax],al
  433270:	adc    eax,0x99085455
  433275:	jno    0x433235
  433277:	add    al,BYTE PTR [esi-0x21]
  43327a:	add    BYTE PTR [eax],al
  43327c:	mov    ebp,0xd55de455
  433281:	mov    ds:0xa2caccc5,al
  433286:	(bad)
  433289:	jmp    0x52aa:0xe85eeb87
  433290:	mov    ah,0x1c
  433292:	add    BYTE PTR [ebx+edi*8-0x51],0xe
  433297:	dec    edi
  433298:	call   0xe9424b96
  43329d:	xor    al,0xfd
  43329f:	out    0x6a,eax
  4332a1:	test   BYTE PTR [edx+edi*8],dl
  4332a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4332a5:	stc    
  4332a6:	sbb    BYTE PTR [esi-0x15],bh
  4332a9:	cmp    BYTE PTR [eax-0x758b4d28],cl
  4332af:	or     dh,BYTE PTR [edx-0x38afe70f]
  4332b5:	fs adc al,0xfa
  4332b8:	mov    al,0xbf
  4332ba:	ret    0xacfb
  4332bd:	cmp    cl,0x86
  4332c0:	jle    0x4332b7
  4332c2:	pop    ds
  4332c3:	pop    es
  4332c4:	and    al,0x9f
  4332c6:	jp     0x433287
  4332c8:	sbb    al,BYTE PTR [edx+eax*4+0x44]
  4332cc:	mov    esp,DWORD PTR [ebp+eiz*1+0x11]
  4332d0:	and    BYTE PTR [ebx+0x8614],0xea
  4332d7:	call   0xf66ef65c
  4332dc:	push   ds
  4332dd:	sysenter 
  4332df:	into   
  4332e0:	jp     0x4332a1
  4332e2:	ficomp DWORD PTR [eax]
  4332e4:	or     BYTE PTR [ebx+ebx*2+0x65],0x25
  4332e9:	stc    
  4332ea:	push   ecx
  4332eb:	rcl    DWORD PTR [esi+edi*2],cl
  4332ee:	jae    0x433330
  4332f0:	jp     0x4332b1
  4332f2:	mov    edx,0x3b548808
  4332f7:	scas   eax,DWORD PTR es:[edi]
  4332f8:	ret    0xd007
  4332fb:	cmc    
  4332fc:	pop    ds
  4332fd:	pop    ss
  4332fe:	sub    al,0xc4
  433300:	mov    bl,0x88
  433302:	fidivr WORD PTR ds:[esi]
  433305:	jg     0x43331a
  433307:	mov    WORD PTR [esi+0x32d67b7f],fs
  43330d:	mov    dl,0xed
  43330f:	fsubr  st(7),st
  433311:	add    ebp,DWORD PTR [edi]
  433313:	ficomp WORD PTR [esi]
  433315:	jg     0x43332a
  433317:	mov    WORD PTR [esi+0x1c1ae440],fs
  43331d:	jg     0x4332f3
  43331f:	pop    ebp
  433320:	mov    ebx,0x3a907000
  433325:	jg     0x433307
  433327:	pop    ebx
  433328:	and    al,0x10
  43332a:	test   eax,0x734b372f
  43332f:	sub    ah,bh
  433331:	add    ebp,DWORD PTR [edi]
  433333:	fimul  WORD PTR [edi+0x7a29b657]
  433339:	jg     0x43333b
  43333b:	add    al,ch
  43333d:	push   ebp
  43333e:	sub    al,0x10
  433340:	(bad)  
  433341:	pop    ebp
  433342:	mov    ds:0x7006a808,eax
  433347:	mov    ecx,0x993063a0
  43334c:	es pop ebx
  43334e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43334f:	pandn  mm6,QWORD PTR ds:0x2985126f
  433356:	dec    ax
  433358:	sub    al,0x55
  43335a:	das    
  43335b:	jg     0x433348
  43335d:	sub    DWORD PTR [eax+0x3],edx
  433360:	xchg   ebx,eax
  433361:	sbb    al,0xdf
  433363:	cld    
  433364:	sti    
  433365:	and    eax,0xd5302428
  43336a:	aas    
  43336b:	mov    DWORD PTR [edi-0x4d],esp
  43336e:	loope  0x4332f0
  433370:	jecxz  0x43339b
  433372:	mov    ch,0x1b
  433374:	mov    esi,0xb9130227
  433379:	and    ebx,esp
  43337b:	jle    0x4333e5
  43337d:	push   ebp
  43337e:	add    BYTE PTR [eax+edi*1+0x69450946],ch
  433385:	fld    DWORD PTR [edi]
  433387:	cmp    al,0x2b
  433389:	push   ds
  43338a:	loopne 0x433385
  43338c:	adc    DWORD PTR [ecx],edx
  43338e:	and    DWORD PTR [eax+0x248bd6a7],0x1f
  433395:	cdq    
  433396:	call   0xf96750b8
  43339b:	push   0x68
  43339d:	fld    QWORD PTR [ebp+0x690000a1]
  4333a3:	mov    ds:0x822d50fc,al
  4333a8:	mov    esi,0xf891da01
  4333ad:	test   al,0xc
  4333af:	rol    DWORD PTR ds:0x7315b7b1,1
  4333b5:	fild   QWORD PTR [edi+0x1b18fc99]
  4333bb:	sti    
  4333bc:	cli    
  4333bd:	jle    0x4333dc
  4333bf:	test   al,0xc4
  4333c1:	in     eax,dx
  4333c2:	sub    DWORD PTR [ecx],esp
  4333c4:	test   DWORD PTR [edi+edi*1],esp
  4333c7:	inc    esi
  4333c8:	pop    es
  4333c9:	lods   al,BYTE PTR ds:[esi]
  4333ca:	and    al,0x62
  4333cc:	(bad)  
  4333cd:	aam    0x2e
  4333cf:	pop    ebx
  4333d0:	push   ebx
  4333d1:	push   ebp
  4333d2:	ret    0x1740
  4333d5:	dec    edi
  4333d6:	sbb    eax,0x302d7d24
  4333db:	popa   
  4333dc:	enter  0x6772,0x24
  4333e0:	xchg   edi,eax
  4333e1:	sub    BYTE PTR [ecx+eiz*8],cl
  4333e4:	pop    es
  4333e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4333e6:	xor    al,0x62
  4333e8:	(bad)  
  4333e9:	pushf  
  4333ea:	cs pop ebx
  4333ec:	inc    ebx
  4333ed:	sbb    eax,0x14fb409c
  4333f2:	sbb    eax,0x28257d24
  4333f7:	popa   
  4333f8:	enter  0xbd00,0x15
  4333fc:	cmc    
  4333fd:	cdq    
  4333fe:	pop    es
  4333ff:	std    
  433400:	or     DWORD PTR [ecx],ecx
  433402:	fcmovnbe st,st(3)
  433404:	test   cl,cl
  433406:	add    BYTE PTR [eax],al
  433408:	fwait
  433409:	adc    BYTE PTR [ebp+ecx*2-0x1e1e93ee],cl
  433410:	repz int 0xf6
  433413:	mov    ecx,esi
  433415:	popa   
  433416:	mov    ebp,0x74e38b04
  43341b:	and    DWORD PTR [ebp+0x1f],edi
  43341e:	cmc    
  43341f:	cdq    
  433420:	jge    0x433414
  433422:	add    BYTE PTR [ebp-0x32],0x12
  433426:	out    dx,eax
  433427:	or     esp,DWORD PTR [ebp-0x22e72465]
  43342d:	jo     0x433420
  43342f:	pop    edi
  433430:	pop    edi
  433431:	adc    dl,BYTE PTR [edi-0x77]
  433434:	push   es
  433435:	(bad)  
  433436:	add    ecx,0x5de4a8fd
  43343c:	test   DWORD PTR [ecx+0x6c110844],ebp
  433442:	mov    esi,0xdb9600
  433447:	add    cl,cl
  433449:	and    bh,ch
  43344b:	inc    DWORD PTR [esi+0x478b00db]
  433451:	jns    0x4333d5
  433453:	in     eax,0xc3
  433455:	mov    ds:0x9e22ccc5,al
  43345a:	(bad)
  43345d:	sahf   
  43345e:	(bad)
  433461:	sahf   
  433462:	(bad)
  433465:	stos   BYTE PTR es:[edi],al
  433466:	in     eax,0x83
  433468:	and    dh,BYTE PTR [esi]
  43346a:	dec    edx
  43346b:	mov    eax,DWORD PTR [eax]
  43346d:	add    BYTE PTR [ebx+0x27],dh
  433470:	dec    edi
  433471:	push   edi
  433472:	fst    QWORD PTR [esi+0x1]
  433475:	xor    ebp,DWORD PTR [edi]
  433477:	(bad)  
  433478:	call   0x7052:0xb46edafd
  43347f:	jp     0x433492
  433481:	cli    
  433482:	xor    BYTE PTR ds:0x2da288fd,dh
  433488:	jbe    0x4334fe
  43348a:	or     edi,DWORD PTR [esi+0x4907e791]
  433490:	iret   
  433491:	call   DWORD PTR [eax]
  433493:	mov    ah,0x41
  433495:	adc    esi,DWORD PTR [edx+0x60069174]
  43349b:	not    ebx
  43349d:	mov    edi,0x86ac433c
  4334a2:	or     cl,dl
  4334a4:	inc    ebx
  4334a5:	dec    esi
  4334a6:	sbb    BYTE PTR ds:0x352f390c,0x7c
  4334ad:	cmc    
  4334ae:	lods   al,BYTE PTR ds:[esi]
  4334af:	js     0x4334a6
  4334b1:	xchg   bh,dh
  4334b3:	lods   eax,DWORD PTR ds:[esi]
  4334b4:	stos   BYTE PTR es:[edi],al
  4334b5:	(bad)  [esi-0x3f7bdb2f]
  4334bb:	iret   
  4334bc:	repnz ins DWORD PTR es:[edi],dx
  4334be:	daa    
  4334bf:	mov    dh,0xc
  4334c1:	cli    
  4334c2:	mov    al,0x34
  4334c4:	std    
  4334c5:	outs   dx,BYTE PTR ds:[esi]
  4334c6:	aaa    
  4334c7:	mov    esi,0x39b6f3aa
  4334cc:	add    eax,0x10ca086
  4334d1:	add    al,0x0
  4334d3:	add    BYTE PTR [edi],ch
  4334d5:	xor    eax,0x3515009b
  4334da:	adc    BYTE PTR [edi+eiz*1],dl
  4334dd:	clc    
  4334de:	(bad)  
  4334df:	jmp    FWORD PTR [ebp-0x15770608]
  4334e5:	call   0xa326f46c
  4334ea:	aam    0xc8
  4334ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4334ed:	inc    eax
  4334ee:	std    
  4334ef:	jmp    FWORD PTR [edi]
  4334f1:	(bad)  
  4334f3:	inc    ecx
  4334f4:	and    eax,0x2f03135f
  4334f9:	ficomp WORD PTR [esi-0x3a]
  4334fc:	cmp    al,0xab
  4334fe:	in     al,dx
  4334ff:	int3   
  433500:	push   0x302866d6
  433505:	es out 0x1c,eax
  433508:	cmp    DWORD PTR [esi+0x5e],ecx
  43350b:	scas   al,BYTE PTR es:[edi]
  43350c:	add    al,0x5a
  43350e:	je     0x43351b
  433510:	mov    cl,0x8b
  433512:	sar    DWORD PTR [ebx+0x63],cl
  433515:	outs   dx,BYTE PTR cs:[esi]
  433517:	xchg   ecx,eax
  433518:	call   0xaf5b6176
  43351d:	and    bh,ah
  43351f:	pop    es
  433520:	das    
  433521:	fisub  WORD PTR [esi+0x35]
  433524:	lock call 0xad79c7d3
  43352a:	jmp    0x4334f6
  43352c:	lock lods al,BYTE PTR ds:[esi]
  43352e:	fistp  QWORD PTR [ebx+esi*2+0x32]
  433532:	jo     0x4334cd
  433534:	sar    BYTE PTR [ecx],0xe1
  433537:	jl     0x433539
  433539:	add    BYTE PTR [ebx+0x32],ah
  43353c:	pusha  
  43353d:	rcl    eax,0x59
  433540:	and    al,0x24
  433542:	mov    cl,0x31
  433544:	into   
  433545:	cwde   
  433546:	les    ebx,FWORD PTR [ecx-0x52]
  433549:	jmp    0x433576
  43354b:	cs mov esi,0x641d393d
  433551:	inc    esp
  433552:	or     cl,bh
  433554:	(bad)  
  433556:	scas   eax,DWORD PTR es:[edi]
  433557:	daa    
  433558:	jecxz  0x433561
  43355a:	das    
  43355b:	fcompp 
  43355d:	push   es
  43355e:	mov    eax,0x2f03e3da
  433563:	cmp    ebp,esp
  433565:	ficom  DWORD PTR [esi+0x59]
  433568:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433569:	push   DWORD PTR [ecx-0x391eff6d]
  43356f:	and    eax,0x8e9c9752
  433574:	call   0xf968b3b6
  433579:	push   0xfffffff7
  43357b:	rol    BYTE PTR [ebx-0x7a5159d7],1
  433581:	mov    ah,0x28
  433583:	pop    esp
  433584:	inc    ebx
  433585:	cmc    
  433586:	jge    0x43351b
  433588:	push   eax
  433589:	jb     0x433581
  43358b:	fadd   QWORD PTR [ebp+0x505c10a1]
  433591:	in     eax,0xe3
  433593:	daa    
  433594:	into   
  433595:	push   0x68
  433597:	aad    0x35
  433599:	stos   BYTE PTR es:[edi],al
  43359a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43359b:	mov    DWORD PTR [ebx+0x1e00002a],ecx
  4335a1:	pop    edx
  4335a2:	ror    BYTE PTR [edi-0x29],0x5b
  4335a6:	dec    ebx
  4335a7:	lds    esi,FWORD PTR [esp+eiz*4-0x56630ec4]
  4335ae:	adc    ebp,DWORD PTR [ecx-0x50]
  4335b1:	fdiv   st(7),st
  4335b3:	and    DWORD PTR [esi-0x2cda7f2a],esi
  4335b9:	and    al,BYTE PTR [esp+edx*1]
  4335bc:	xor    BYTE PTR [esi+0x7c],bl
  4335bf:	loope  0x4335ee
  4335c1:	loopne 0x433637
  4335c3:	out    0xa7,eax
  4335c5:	fs jns 0x43356c
  4335c8:	adc    eax,0xf2ea97d8
  4335cd:	rcl    ecx,cl
  4335cf:	pusha  
  4335d0:	ja     0x433612
  4335d2:	add    eax,0xe88a1bab
  4335d7:	fadd   QWORD PTR [esi+0x7b61435b]
  4335dd:	cdq    
  4335de:	lock out 0xae,al
  4335e1:	cli    
  4335e2:	stc    
  4335e3:	dec    esi
  4335e4:	sub    DWORD PTR [eax+0x1dfd000c],esi
  4335ea:	in     eax,dx
  4335eb:	cmp    DWORD PTR [ebx+0x7a8206c4],ebx
  4335f1:	shl    esi,cl
  4335f3:	dec    ebp
  4335f5:	gs cmc 
  4335f7:	push   edx
  4335f8:	mov    esp,0x4a15f5e0
  4335fd:	repz cmp al,BYTE PTR [eax]
  433600:	int    0x15
  433602:	fisttp QWORD PTR [ebx-0x377d0000]
  433608:	jp     0x4335ce
  43360a:	ds jae 0x433664
  43360d:	pop    ebx
  43360e:	popf   
  43360f:	neg    BYTE PTR [ebx+eax*8-0x3d]
  433613:	test   al,0xe5
  433615:	sbb    DWORD PTR [edx],0x3d
  433618:	dec    edx
  433619:	mov    ebp,DWORD PTR [ebx+0x22]
  43361c:	dec    edi
  43361d:	push   edi
  43361e:	jge    0x433673
  433620:	add    eax,0xfb48e033
  433625:	push   ebp
  433626:	inc    eax
  433627:	imul   ecx,DWORD PTR [edx-0x39],0xfff6c643
  43362e:	(bad)  
  43362f:	fild   WORD PTR [edi+0x74a79e75]
  433635:	in     al,0x4f
  433637:	dec    ebx
  433638:	loope  0x433622
  43363a:	rcl    BYTE PTR [ecx+edi*8],cl
  43363d:	call   DWORD PTR [ebp-0x6a]
  433640:	or     eax,0x2469685
  433645:	pop    edi
  433646:	or     BYTE PTR ds:0x759433b9,cl
  43364c:	and    ch,0x4b
  43364f:	popf   
  433650:	dec    esi
  433651:	push   ebx
  433652:	scas   al,BYTE PTR es:[edi]
  433653:	jne    0x433691
  433655:	add    BYTE PTR [esi+0x1d08bd5e],al
  43365b:	repnz mov BYTE PTR [ebp+0x4a],bl
  43365f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433660:	push   esp
  433661:	loopne 0x433692
  433663:	mov    dl,0x2e
  433665:	jb     0x433684
  433667:	pop    es
  433668:	cmc    
  433669:	add    BYTE PTR [eax],0x0
  43366c:	je     0x43360a
  43366e:	or     edi,edi
  433670:	push   0x288f568
  433675:	loope  0x4336ec
  433677:	push   esp
  433678:	push   edi
  433679:	ror    BYTE PTR [esi],0x67
  43367c:	sub    esi,DWORD PTR [ecx]
  43367e:	std    
  43367f:	call   ebp
  433681:	xor    eax,0x2241ff97
  433686:	in     eax,0xda
  433688:	in     al,dx
  433689:	xor    al,0x80
  43368b:	ret    
  43368c:	and    ebp,DWORD PTR [esi-0xb4d043f]
  433692:	cwde   
  433693:	mov    bl,0x5c
  433695:	inc    BYTE PTR [esi+0x3]
  433698:	das    
  433699:	xor    eax,0x2be136fd
  43369e:	test   al,bh
  4336a0:	das    
  4336a1:	xor    eax,0x16a86fd
  4336a6:	(bad)  
  4336a7:	sbb    esi,DWORD PTR [eiz*2+0x35037efc]
  4336ae:	std    
  4336af:	call   esp
  4336b1:	push   es
  4336b2:	jp     0x4336fc
  4336b4:	das    
  4336b5:	shr    BYTE PTR [edx+0xce9a4db],0x86
  4336bc:	jp     0x433707
  4336be:	js     0x43370c
  4336c0:	mov    edi,0xaef3c2af
  4336c5:	jbe    0x4336c4
  4336c7:	add    ebp,DWORD PTR [edi]
  4336c9:	xor    eax,0x202fd080
  4336ce:	cmp    ebp,DWORD PTR [ebp+0x0]
  4336d1:	add    BYTE PTR [ecx],bh
  4336d3:	sub    al,0x1
  4336d5:	aaa    
  4336d6:	jg     0x4336fa
  4336d8:	cmc    
  4336d9:	mov    dl,dh
  4336db:	mov    al,ds:0xdd9f7476
  4336e0:	dec    esi
  4336e1:	add    eax,0x7a4b88b6
  4336e6:	repz sub eax,0x56588e5e
  4336ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4336ed:	and    ebp,DWORD PTR [ecx+0x54970e2e]
  4336f3:	push   esi
  4336f4:	cs call 0x3e4164dd
  4336fa:	inc    ecx
  4336fb:	sbb    esp,DWORD PTR [ebx+eax*2-0x3e]
  4336ff:	int3   
  433700:	call   0x2f07:0xe324affb
  433707:	ficomp WORD PTR [ecx-0x1c267ffc]
  43370d:	add    ebp,DWORD PTR [edi]
  43370f:	aaa    
  433710:	in     eax,0xd8
  433712:	push   es
  433713:	push   esi
  433714:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433715:	jmp    FWORD PTR [ecx+0x1899df93]
  43371b:	mov    DWORD PTR [ecx+0x1b367fb3],edx
  433721:	enter  0x2208,0x66
  433725:	inc    eax
  433726:	sbb    al,0x5b
  433728:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433729:	xchg   ecx,eax
  43372a:	jg     0x433781
  43372c:	xor    al,0x8
  43372e:	test   eax,0x7ab6f39b
  433733:	mov    gs,WORD PTR [esi-0x3f]
  433736:	add    BYTE PTR [eax],al
  433738:	sub    BYTE PTR [ebp+0x1f],dl
  43373b:	call   0xb526c5f1
  433740:	aad    0xc
  433742:	inc    ax
  433744:	cmp    ch,ah
  433746:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433747:	xchg   ecx,eax
  433748:	pop    ebx
  433749:	push   ebx
  43374a:	or     DWORD PTR es:[ebx-0x562ff6e2],esi
  433751:	xchg   ebx,eax
  433752:	cmp    DWORD PTR [eax+ebp*1+0x1bb3efe2],0xffffffcb
  43375a:	add    BYTE PTR [ecx-0x59],ch
  43375d:	fcos   
  43375f:	and    DWORD PTR [esi-0x7b1a7f29],edi
  433765:	and    eax,DWORD PTR [ebx]
  433767:	aam    0x2d
  433769:	pop    esi
  43376a:	jl     0x43374d
  43376c:	xor    ebp,ebx
  43376e:	je     0x433757
  433770:	scas   eax,DWORD PTR es:[edi]
  433771:	popa   
  433772:	jns    0x433798
  433774:	dec    eax
  433775:	aam    0x97
  433777:	jmp    0x3d6e:0x60d1cfee
  43377e:	add    eax,0xe889d22b
  433783:	pushf  
  433784:	pop    edx
  433785:	pop    eax
  433786:	inc    ebx
  433787:	and    DWORD PTR [edx-0x66],esi
  43378a:	lock out 0xb2,al
  43378d:	sti    
  43378e:	stc    
  43378f:	push   cs
  433790:	and    al,0xac
  433792:	or     al,0x72
  433794:	out    0x2c,al
  433796:	aaa    
  433797:	lods   al,BYTE PTR ds:[esi]
  433798:	cmp    ah,dl
  43379a:	jle    0x433771
  43379c:	add    BYTE PTR [eax],al
  43379e:	and    eax,0xa662f924
  4337a3:	aam    0x85
  4337a5:	cmp    al,0x37
  4337a7:	xchg   ebx,eax
  4337a8:	jmpw   0x1e1
  4337ac:	sbb    al,0xb6
  4337ae:	icebp  
  4337af:	and    BYTE PTR [esi+0x4b584f24],al
  4337b5:	shr    DWORD PTR [ecx+0x11],1
  4337b8:	jge    0x43375f
  4337ba:	in     al,0xd7
  4337bc:	iret   
  4337bd:	out    0x58,al
  4337bf:	push   edx
  4337c0:	cli    
  4337c1:	scas   al,BYTE PTR es:[edi]
  4337c2:	and    eax,0xaaf17358
  4337c7:	and    BYTE PTR [eax+0x39],dl
  4337ca:	jl     0x43375a
  4337cc:	call   0xf9642136
  4337d1:	push   0xfffffff0
  4337d3:	int3   
  4337d4:	add    DWORD PTR [eax],0xffffffd6
  4337d7:	and    eax,DWORD PTR [esp+esi*2-0x72092be0]
  4337de:	dec    ebx
  4337df:	(bad)  
  4337e0:	dec    ecx
  4337e1:	mov    ecx,ecx
  4337e3:	lahf   
  4337e4:	(bad)  
  4337e5:	call   0x3a0b44
  4337ea:	adc    eax,0x4684fde1
  4337ef:	and    al,0x84
  4337f1:	pop    esp
  4337f2:	loopne 0x4337c7
  4337f4:	test   BYTE PTR [ebp-0x74af275d],0x9
  4337fb:	mov    al,ds:0xd2b2e8c7
  433800:	idiv   bh
  433802:	add    BYTE PTR [eax],al
  433804:	(bad)
  433807:	test   BYTE PTR [esi],dl
  433809:	and    al,0x84
  43380b:	inc    esp
  43380c:	and    ah,dl
  43380e:	idiv   BYTE PTR [ecx]
  433810:	mov    ebx,eax
  433812:	push   es
  433813:	test   DWORD PTR [ebp-0x2a],ebx
  433816:	idiv   bh
  433818:	mov    ds:0x9d52d56e,eax
  43381d:	pushf  
  43381e:	or     dh,0x2e
  433821:	xor    dl,dh
  433823:	inc    DWORD PTR [ecx]
  433825:	pop    edx
  433826:	mov    ebp,0x69a9b04
  43382b:	test   DWORD PTR ds:0x93fff6d4,esi
  433831:	pop    edi
  433832:	cmc    
  433833:	push   eax
  433834:	lea    ebx,[ebp+0x49fece82]
  43383a:	repz jmp DWORD PTR [ecx+0x4b04bd59]
  433841:	call   0xfff6:0xd5cd8506
  433848:	push   ebp
  433849:	push   edi
  43384a:	cmc    
  43384b:	add    ecx,edx
  43384d:	mov    al,ds:0x482ffe00
  433852:	pop    es
  433853:	xchg   BYTE PTR [edx+0x55],dl
  433856:	jnp    0x4338a4
  433858:	mov    eax,ebp
  43385a:	mov    bl,0x50
  43385c:	clc    
  43385d:	(bad)  
  43385e:	sbb    al,0xf9
  433860:	push   ebp
  433861:	xor    eax,0x96b7efd
  433866:	jp     0x433827
  433868:	add    BYTE PTR [eax],al
  43386a:	cmp    BYTE PTR [edx-0x7f7f03e2],dh
  433870:	jno    0x4338c6
  433872:	jnp    0x4338d7
  433874:	jl     0x433838
  433876:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433877:	mov    edi,0x9865311c
  43387c:	pop    es
  43387d:	jle    0x4338ea
  43387f:	cmp    DWORD PTR [edx-0x41],edi
  433882:	sub    BYTE PTR [edx-0xfaf03ca],dh
  433888:	jge    0x433906
  43388a:	dec    ebx
  43388b:	gs mov esp,0x7a302901
  433891:	sar    BYTE PTR [edx],0xc8
  433894:	pop    es
  433895:	xchg   dl,ch
  433897:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433899:	pop    ecx
  43389a:	mov    ah,0xc3
  43389c:	stos   DWORD PTR es:[edi],eax
  43389d:	xchg   BYTE PTR [edx],cl
  43389f:	inc    edx
  4338a0:	inc    esp
  4338a1:	retf   
  4338a2:	jmp    0x4338e5
  4338a4:	jl     0x433891
  4338a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4338a7:	inc    ecx
  4338a8:	cmc    
  4338a9:	dec    esi
  4338aa:	popa   
  4338ab:	lods   al,BYTE PTR ds:[esi]
  4338ac:	mov    cl,BYTE PTR [ebx]
  4338ae:	pop    eax
  4338af:	lods   al,BYTE PTR ds:[esi]
  4338b0:	aas    
  4338b1:	xchg   dh,dh
  4338b3:	aaa    
  4338b4:	push   ecx
  4338b5:	ret    0xbc1f
  4338b8:	sub    al,al
  4338ba:	xlat   BYTE PTR ds:[ebx]
  4338bb:	add    al,0x76
  4338bd:	jl     0x4338f6
  4338bf:	mov    ah,0x24
  4338c1:	sbb    ah,BYTE PTR [esi-0x8790736]
  4338c7:	call   DWORD PTR [eax-0x26]
  4338ca:	xor    bl,dh
  4338cc:	data16 and BYTE PTR [eax],al
  4338cf:	add    BYTE PTR ds:0x288d708f,dh
  4338d5:	push   ebx
  4338d6:	adc    al,0xfc
  4338d8:	and    eax,0x29faa272
  4338dd:	aaa    
  4338de:	add    al,BYTE PTR [ebx+0x3e2616d]
  4338e4:	das    
  4338e5:	sbb    eax,0xa3a7fa7f
  4338ea:	sar    DWORD PTR [edi+ebp*2+0x52],cl
  4338ee:	popa   
  4338ef:	clc    
  4338f0:	aam    0x25
  4338f2:	out    dx,al
  4338f3:	test   BYTE PTR [eax-0x42],bl
  4338f6:	pusha  
  4338f7:	lds    ebp,FWORD PTR [eax]
  4338f9:	push   ebx
  4338fa:	sub    al,bh
  4338fc:	xchg   esp,eax
  4338fd:	sub    eax,0xd25542ec
  433902:	call   0x2b19:0x28d85142
  433909:	pop    ebx
  43390a:	inc    edi
  43390b:	enter  0x3cc9,0x2
  43390f:	add    eax,0xc5707f76
  433914:	sub    al,0x55
  433916:	(bad)  [ebx+edx*8-0xbc8e4e6]
  43391d:	sub    dh,BYTE PTR [ebx]
  43391f:	aaa    
  433920:	hlt    
  433921:	sub    ch,BYTE PTR [ebx]
  433923:	aaa    
  433924:	in     al,0x2a
  433926:	pushf  
  433927:	jl     0x43392d
  433929:	(bad)  
  43392a:	sti    
  43392b:	mov    ?,WORD PTR [ecx-0x4c]
  43392e:	cmp    bh,BYTE PTR [ebx+0x10]
  433931:	rcr    dl,cl
  433933:	rol    DWORD PTR [eax],cl
  433935:	add    cl,ah
  433937:	(bad)  
  433939:	xchg   ecx,eax
  43393a:	sub    ch,BYTE PTR [ebx+0x22]
  43393d:	push   0xffffff85
  43393f:	mov    esp,0xbbcb7b1e
  433944:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433945:	jnp    0x4339b5
  433947:	mov    dh,0x0
  433949:	jmp    0xec97:0x1f85a592
  433950:	dec    edx
  433951:	xor    eax,0x3630af44
  433956:	sub    BYTE PTR [ebp-0x1cecc0b2],0x36
  43395d:	jmp    0xde07d68e
  433962:	scas   eax,DWORD PTR es:[edi]
  433963:	pop    ebp
  433964:	je     0x43394a
  433966:	lods   eax,DWORD PTR ds:[esi]
  433967:	and    al,0xf9
  433969:	xor    BYTE PTR [ebx+0x6a],0x43
  43396d:	jne    0x433932
  43396f:	fs inc edx
  433971:	sbb    DWORD PTR [edi+eiz*1],eax
  433974:	call   0xf95b6522
  433979:	push   0xffffffef
  43397b:	loopne 0x433900
  43397d:	sub    DWORD PTR [edi+0x28327de2],edi
  433983:	add    al,0xa
  433985:	push   0xa25011a6
  43398a:	sub    ebx,DWORD PTR [ebp*2-0x68a0a1c]
  433991:	sub    BYTE PTR es:[edx+eax*2-0x27],ah
  433996:	mov    bh,0xa9
  433998:	mov    WORD PTR [eax+0x26b50000],?
  43399e:	call   0xf95b74f4
  4339a3:	push   0x6f
  4339a5:	loope  0x43392a
  4339a7:	sub    DWORD PTR [edi+0x28227e1b],edi
  4339ad:	fs inc edx
  4339af:	mov    ecx,0x3b90b287
  4339b4:	test   BYTE PTR [edi],ah
  4339b6:	call   0xf95b5e44
  4339bb:	push   0x30
  4339bd:	loope  0x433942
  4339bf:	test   eax,0x7e1bb8
  4339c4:	popf   
  4339c5:	jecxz  0x433953
  4339c7:	inc    ebp
  4339c8:	adc    BYTE PTR [ecx-0x7e],0x46
  4339cc:	(bad)  
  4339cd:	xchg   edi,eax
  4339ce:	(bad)  
  4339cf:	call   0x3a2322
  4339d4:	push   ebp
  4339d5:	(bad)  
  4339d7:	test   BYTE PTR [esi-0x727d0594],al
  4339dd:	jecxz  0x433961
  4339df:	inc    esi
  4339e0:	xchg   BYTE PTR [ebp-0x66b867b4],dl
  4339e6:	(bad)  
  4339e7:	call   0x3a2282
  4339ec:	add    eax,0xd684fddd
  4339f1:	ins    BYTE PTR es:[edi],dx
  4339f2:	cli    
  4339f3:	cmp    BYTE PTR ds:0x164682e4,0x97
  4339fa:	push   esp
  4339fb:	pushf  
  4339fc:	mov    ah,0x97
  4339fe:	(bad)  
  4339ff:	call   0xe9013a04
  433a04:	idiv   bh
  433a06:	aad    0xdc
  433a08:	std    
  433a09:	test   BYTE PTR [esi],al
  433a0b:	ins    DWORD PTR es:[edi],dx
  433a0c:	cli    
  433a0d:	or     BYTE PTR ds:0xfa4582e4,0x4b
  433a14:	dec    ecx
  433a15:	lea    eax,[ebx+0x1891e1d4]
  433a1b:	in     al,0xf6
  433a1d:	mov    eax,DWORD PTR [eax+0x764d8c30]
  433a23:	push   edx
  433a24:	or     dh,0x3e
  433a27:	nop
  433a28:	icebp  
  433a29:	call   FWORD PTR [ecx]
  433a2b:	pop    esi
  433a2c:	mov    ebp,0x6d9f830c
  433a31:	add    edx,DWORD PTR [ebp+0x508bf6d8]
  433a37:	xor    cl,BYTE PTR [ebp+edx*2-0x317daf26]
  433a3e:	das    
  433a3f:	sbb    eax,0x2ce8f787
  433a44:	jg     0x433a09
  433a46:	sub    ecx,DWORD PTR [edx-0x77d38cbc]
  433a4c:	aaa    
  433a4d:	cli    
  433a4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433a4f:	retf   0x8c08
  433a52:	jp     0x433a9d
  433a54:	jne    0x433a9a
  433a56:	mov    edx,DWORD PTR [eax-0x6fa1d046]
  433a5c:	xor    cl,BYTE PTR [eax+0x551c9d32]
  433a62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433a63:	ins    BYTE PTR es:[edi],dx
  433a64:	add    edi,DWORD PTR [esi+0x0]
  433a67:	add    BYTE PTR [ebx+0x9],ch
  433a6a:	jp     0x433a2b
  433a6c:	and    ecx,DWORD PTR [eax]
  433a6e:	add    dh,0x90
  433a71:	sub    BYTE PTR [ecx+0x50c2bafb],0x4f
  433a78:	mov    ah,0x4b
  433a7a:	int    0x86
  433a7c:	imul   ecx,DWORD PTR [esi+0x32a6aba9],0xb486e74d
  433a86:	add    edi,edx
  433a88:	lods   al,BYTE PTR ds:[esi]
  433a89:	leave  
  433a8a:	add    BYTE PTR [ebp+0x7f00516f],al
  433a90:	fs aam 0x77
  433a93:	inc    ecx
  433a94:	(bad)  
  433a95:	mov    ecx,0x8fdeb7b1
  433a9a:	xor    ah,bh
  433a9c:	outs   dx,BYTE PTR ds:[esi]
  433a9d:	hlt    
  433a9e:	add    edi,edx
  433aa0:	lods   al,BYTE PTR ds:[esi]
  433aa1:	leave  
  433aa2:	add    BYTE PTR [ebp+0x7f0070ef],al
  433aa8:	hlt    
  433aa9:	jecxz  0x433b22
  433aab:	inc    ecx
  433aac:	pop    edi
  433aad:	mov    ch,BYTE PTR [ecx+0x32807dbb]
  433ab3:	out    0xd6,eax
  433ab5:	adc    eax,DWORD PTR [edx+edi*8]
  433ab8:	lods   al,BYTE PTR ds:[esi]
  433ab9:	(bad)  [ebx+0x531db3ff]
  433abf:	add    DWORD PTR [eax+0x27],esi
  433ac2:	shl    BYTE PTR [esi+0x73],cl
  433ac5:	push   ds
  433ac6:	aaa    
  433ac7:	jns    0x433b37
  433ac9:	into   
  433aca:	outs   dx,BYTE PTR ds:[esi]
  433acb:	xor    eax,0x6cd00000
  433ad0:	mov    dl,0x4
  433ad2:	aad    0x5e
  433ad4:	stos   DWORD PTR es:[edi],eax
  433ad5:	push   DWORD PTR [ebx+0x4001331d]
  433adb:	daa    
  433adc:	mov    ds:0x6cce6e78,al
  433ae1:	mov    dh,0xec
  433ae3:	lods   al,BYTE PTR ds:[esi]
  433ae4:	pop    esi
  433ae5:	xor    eax,0x4929490
  433aea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433aeb:	pop    esi
  433aec:	stos   DWORD PTR es:[edi],eax
  433aed:	push   DWORD PTR [ebx+0x1000f31d]
  433af3:	daa    
  433af4:	jb     0x433b6e
  433af6:	out    dx,al
  433af7:	int    0x5c
  433af9:	scas   al,BYTE PTR es:[edi]
  433afa:	push   0x90356eaf
  433aff:	sbb    al,0x52
  433b01:	add    al,0x75
  433b03:	pop    esi
  433b04:	sub    edi,edi
  433b06:	mov    bl,0x1d
  433b08:	rol    DWORD PTR [eax],cl
  433b0a:	loopne 0x433b32
  433b0c:	inc    edx
  433b0d:	jbe    0x433b02
  433b0f:	sbb    DWORD PTR [edi+0x5ecdee78],edx
  433b15:	xor    eax,0x4324450
  433b1a:	inc    ebp
  433b1b:	pop    esi
  433b1c:	sub    edi,edi
  433b1e:	mov    bl,0x1d
  433b20:	xchg   ebx,eax
  433b21:	add    BYTE PTR [eax+0x7b781226],dh
  433b27:	sbb    ah,BYTE PTR [eax-0x7a]
  433b2a:	or     BYTE PTR [esi-0x7c],ah
  433b2d:	dec    edi
  433b2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433b2f:	stos   DWORD PTR es:[edi],eax
  433b30:	add    edi,DWORD PTR [edx+0x0]
  433b33:	add    BYTE PTR [ebx+0x576c001a],dl
  433b39:	in     al,0x83
  433b3b:	sub    al,0x2c
  433b3d:	fiadd  WORD PTR [eax]
  433b3f:	jb     0x433ba7
  433b41:	out    dx,al
  433b42:	sub    DWORD PTR [ecx+0x2485d977],0x47
  433b49:	shl    edi,cl
  433b4b:	pop    edx
  433b4c:	xor    esp,DWORD PTR [esi+0x1c]
  433b4f:	out    dx,al
  433b50:	stos   DWORD PTR es:[edi],eax
  433b51:	xchg   ebp,eax
  433b52:	cld    
  433b53:	shr    BYTE PTR [eax],cl
  433b55:	popa   
  433b56:	dec    ebx
  433b57:	mov    ch,0xb6
  433b59:	pop    ss
  433b5a:	je     0x433b64
  433b5c:	mov    dh,0x21
  433b5e:	je     0x433b64
  433b60:	test   al,0xad
  433b62:	cld    
  433b63:	jb     0x433bc2
  433b65:	into   
  433b66:	dec    esi
  433b67:	bound  eax,QWORD PTR ds:0xf56250fa
  433b6d:	loope  0x433bbe
  433b6f:	sbb    ebp,DWORD PTR [edi+ebp*1]
  433b72:	jge    0x433b19
  433b74:	cmp    edx,ebx
  433b76:	inc    ebx
  433b77:	jne    0x433b80
  433b79:	sbb    edi,DWORD PTR [esi-0x5e]
  433b7c:	sub    al,0xc0
  433b7e:	jnp    0x433be5
  433b80:	stos   BYTE PTR es:[edi],al
  433b81:	xchg   ebp,eax
  433b82:	cld    
  433b83:	fs push eax
  433b85:	lea    esi,[ebx+0x6a]
  433b88:	scas   al,BYTE PTR es:[edi]
  433b89:	test   BYTE PTR [eax],0xd5
  433b8c:	frstor [edx+0x43]
  433b8f:	sub    DWORD PTR [eax+0x64021c95],0x61fe8b
  433b99:	add    BYTE PTR [ebx-0x65],cl
  433b9c:	jnp    0x433bcb
  433b9e:	sub    edx,DWORD PTR [edx+0x19e6721f]
  433ba4:	test   DWORD PTR [edi+0x6fff7ffc],ebp
  433baa:	sub    DWORD PTR [esi+0x1c14b74f],0xdd060031
  433bb4:	jnp    0x433b7a
  433bb6:	cli    
  433bb7:	shl    BYTE PTR gs:[ebp+0x1b],0x6a
  433bbc:	cmp    eax,0x7be12dfc
  433bc1:	retf   
  433bc2:	adc    DWORD PTR [eax+0x75],esp
  433bc5:	mov    eax,0x83229706
  433bca:	cmp    DWORD PTR [esi+0x692a7600],0x4d
  433bd1:	sbb    BYTE PTR [ebp-0x59],bl
  433bd4:	xor    BYTE PTR [ebx+0x524fbe00],cl
  433bda:	dec    ebp
  433bdb:	mov    bh,0x4
  433bdd:	push   eax
  433bde:	daa    
  433bdf:	(bad)  
  433be1:	or     DWORD PTR [edx-0x3236d414],0x23
  433be8:	ins    DWORD PTR es:[edi],dx
  433be9:	push   es
  433bea:	test   DWORD PTR [ebx+esi*1],ebx
  433bed:	enter  0xe13a,0x7b
  433bf1:	retf   
  433bf2:	mov    cl,0x67
  433bf4:	cmp    eax,0x23251db8
  433bf9:	iret   
  433bfa:	xchg   edi,eax
  433bfb:	lods   eax,DWORD PTR ds:[esi]
  433bfc:	cld    
  433bfd:	jmp    0x433bff
  433bff:	add    BYTE PTR [esi-0x7847b299],cl
  433c05:	mov    ch,0xfc
  433c07:	mov    eax,DWORD PTR [esi+eiz*2-0x2d]
  433c0b:	pand   mm5,QWORD PTR [ecx]
  433c0e:	stc    
  433c0f:	call   DWORD PTR [esi+0x65]
  433c12:	ror    BYTE PTR [edi],0xca
  433c15:	(bad)  
  433c18:	inc    esi
  433c19:	leave  
  433c1a:	cmp    eax,0xf47dcffc
  433c1f:	je     0x433c4c
  433c21:	imul   edi,DWORD PTR ds:0xf98aaffc,0x3e677651
  433c2b:	xor    BYTE PTR [edi],ch
  433c2d:	push   ebp
  433c2e:	push   edi
  433c2f:	call   0x406caa
  433c34:	lods   al,BYTE PTR ds:[esi]
  433c35:	leave  
  433c36:	adc    DWORD PTR [ebp-0x20],edi
  433c39:	sbb    BYTE PTR [ecx-0x73f57d40],al
  433c3f:	inc    ebx
  433c40:	add    ebx,ebp
  433c42:	push   es
  433c43:	test   eax,ebx
  433c45:	sub    al,0x3
  433c47:	jge    0x433c29
  433c49:	cmp    BYTE PTR [ebx+0x1005a77b],al
  433c4f:	or     ah,0x5
  433c52:	std    
  433c53:	jmp    DWORD PTR [edi+eax*8+0x55628b34]
  433c5a:	dec    ebp
  433c5b:	test   ecx,edi
  433c5d:	sbb    eax,0x48c0f20b
  433c62:	add    esp,0x0
  433c65:	add    BYTE PTR [ebx],dh
  433c67:	mov    al,ah
  433c69:	je     0x433c98
  433c6b:	mov    edi,ds
  433c6d:	test   ecx,esi
  433c6f:	xor    al,0x8a
  433c71:	push   ebx
  433c72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433c73:	ror    DWORD PTR [ebx-0xe667836],cl
  433c79:	stc    
  433c7a:	nop
  433c7b:	test   al,cl
  433c7d:	add    al,0xb2
  433c7f:	inc    ebp
  433c80:	js     0x433c80
  433c82:	mov    ch,0x68
  433c84:	cmp    DWORD PTR [ebx+0x7f],0x6
  433c88:	jb     0x433d04
  433c8a:	cmp    ch,BYTE PTR ss:[ecx+0x79844a73]
  433c91:	mov    al,0x2f
  433c93:	xor    bl,BYTE PTR [eax]
  433c95:	mov    esi,edx
  433c97:	jo     0x433ced
  433c99:	test   ecx,ebp
  433c9b:	adc    al,0x8c
  433c9d:	retf   0x9157
  433ca0:	idiv   cl
  433ca2:	inc    eax
  433ca3:	test   al,cl
  433ca5:	add    al,0xb2
  433ca7:	fisub  WORD PTR [edi]
  433ca9:	js     0x433cdc
  433cab:	cmp    bh,BYTE PTR fs:[ebx]
  433cae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433caf:	inc    edx
  433cb0:	pushf  
  433cb1:	push   ds
  433cb2:	mov    ds:0x9c043f99,al
  433cb7:	out    dx,eax
  433cb8:	outs   dx,BYTE PTR ds:[esi]
  433cb9:	dec    edx
  433cba:	pop    edi
  433cbb:	imul   ebp,DWORD PTR [edi+eiz*4-0x13de9c88],0xea0f99
  433cc6:	jns    0x433cea
  433cc8:	jmp    0x433c50
  433cca:	add    BYTE PTR [eax],al
  433ccc:	out    dx,eax
  433ccd:	xchg   ecx,eax
  433cce:	in     eax,0x8c
  433cd0:	push   es
  433cd1:	aad    0x54
  433cd3:	call   0x7eaa3634
  433cd8:	(bad)  
  433cd9:	fnstsw WORD PTR [ecx+ebx*1]
  433cdc:	stos   BYTE PTR es:[edi],al
  433cdd:	lahf   
  433cde:	test   DWORD PTR [esi-0x72eafda4],0xfa2f05f5
  433ce8:	mov    dh,0x16
  433cea:	data16 (bad) 
  433cec:	sub    esp,DWORD PTR [ecx-0x59]
  433cef:	ja     0x433c9a
  433cf1:	arpl   WORD PTR [edx+0x141e243a],si
  433cf7:	xor    ah,BYTE PTR [eax+eiz*4-0x6055ac6d]
  433cfe:	mov    bh,0x8c
  433d00:	jne    0x433d07
  433d02:	mov    ds:0x661686f6,eax
  433d07:	(bad)  
  433d08:	xor    eax,DWORD PTR [ebx]
  433d0a:	cld    
  433d0b:	mov    esp,fs
  433d0d:	adc    eax,0x841f596e
  433d12:	call   0xb5f06c84
  433d17:	pop    ecx
  433d18:	inc    edi
  433d19:	cmp    cl,0x3
  433d1c:	das    
  433d1d:	pop    ebx
  433d1e:	and    edx,DWORD PTR [edi]
  433d20:	lods   al,BYTE PTR ds:[esi]
  433d21:	sbb    eax,0x612abd00
  433d26:	fldenv [edx-0xf]
  433d29:	adc    DWORD PTR [ebp+0x446234b4],eax
  433d2f:	icebp  
  433d30:	add    BYTE PTR [eax],al
  433d32:	xor    BYTE PTR [ebp+0x43],bl
  433d35:	sbb    eax,0xdeb8a163
  433d3a:	mov    dl,0xf9
  433d3c:	stc    
  433d3d:	push   es
  433d3e:	das    
  433d3f:	pop    edx
  433d40:	aad    0xee
  433d42:	mov    cl,0x72
  433d44:	add    cl,ch
  433d46:	sub    al,0x93
  433d48:	jnp    0x433d13
  433d4a:	sub    al,0x8a
  433d4c:	outs   dx,DWORD PTR ds:[esi]
  433d4d:	jb     0x433cfd
  433d4f:	push   edx
  433d50:	test   DWORD PTR [edi+edx*1],esp
  433d53:	retf   
  433d54:	clc    
  433d55:	pop    edx
  433d56:	aas    
  433d57:	pop    ebx
  433d58:	push   ebx
  433d59:	or     ecx,esi
  433d5b:	ficom  DWORD PTR [ecx]
  433d5d:	jmp    0xd337d705
  433d62:	sub    al,0x5d
  433d64:	inc    ebx
  433d65:	mov    ebp,0xe9fc99ac
  433d6a:	inc    eax
  433d6b:	repnz test DWORD PTR [edi+ebp*1],ebp
  433d6f:	jbe    0x433dd7
  433d71:	call   0x2fc8eb74
  433d76:	pop    ebx
  433d77:	scas   al,BYTE PTR es:[edi]
  433d78:	push   edx
  433d79:	xor    DWORD PTR [eax],0xade900d0
  433d7f:	sbb    dl,BYTE PTR [esp+eiz*2]
  433d82:	jae    0x433d0e
  433d84:	std    
  433d85:	imul   esi,DWORD PTR [edi+edx*1-0x7d],0x7dc7f76e
  433d8d:	in     al,0x48
  433d8f:	fidiv  WORD PTR [edx+0x11]
  433d92:	mov    ah,0x99
  433d94:	hlt    
  433d95:	bound  eax,QWORD PTR [eax]
  433d97:	add    dh,bh
  433d99:	mov    ebp,0x5b1cb785
  433d9e:	inc    edx
  433d9f:	add    BYTE PTR [edx-0x54],cl
  433da2:	dec    ecx
  433da3:	mov    ebx,DWORD PTR [eax-0x6afb523]
  433da9:	sub    bh,BYTE PTR [ebx-0x3c]
  433dac:	push   esi
  433dad:	fdivr  DWORD PTR [edi+0x7bb43a74]
  433db3:	retf   
  433db4:	dec    ecx
  433db5:	mov    ah,0x83
  433db7:	ret    
  433db8:	frstor [edi-0x23]
  433dbb:	pop    ebp
  433dbc:	inc    ebp
  433dbd:	shl    DWORD PTR [di-0x1d],cl
  433dc1:	pop    edi
  433dc2:	jne    0x433dcc
  433dc4:	push   ss
  433dc5:	lea    eax,ds:0xb1e97b8b
  433dcb:	push   ss
  433dcc:	push   es
  433dcd:	loope  0x433dcf
  433dcf:	lea    edx,[ebx+0x6e]
  433dd2:	jmp    0x433d79
  433dd4:	pop    ebp
  433dd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433dd6:	or     al,0x85
  433dd8:	xchg   esi,eax
  433dd9:	mov    WORD PTR [ebx],es
  433ddb:	mov    esp,DWORD PTR [ebx]
  433ddd:	push   es
  433dde:	or     DWORD PTR [ebp-0x2],0x61
  433de2:	adc    BYTE PTR [ecx+0x5e57e5fe],cl
  433de8:	dec    ebp
  433de9:	and    BYTE PTR [ebx-0x75],dl
  433dec:	repz jge 0x433daa
  433def:	int3   
  433df0:	jp     0x433e16
  433df2:	int3   
  433df3:	int3   
  433df4:	fisub  DWORD PTR [esp+ecx*8]
  433df7:	int3   
  433df8:	arpl   WORD PTR [ecx-0x14],bp
  433dfb:	mov    eax,DWORD PTR [eax]
  433dfd:	add    BYTE PTR [ebx-0x3a],dl
  433e00:	or     DWORD PTR [ebp+0x66],0x67
  433e04:	dec    ebp
  433e05:	sbb    al,0x26
  433e07:	imul   edi,DWORD PTR ds:0x45692718,0x4d691414
  433e11:	adc    BYTE PTR [esi-0x58f3c299],dh
  433e17:	scas   al,BYTE PTR es:[edi]
  433e18:	bound  eax,QWORD PTR [eax]
  433e1a:	das    
  433e1b:	push   edi
  433e1c:	xchg   BYTE PTR [ebx+0x27],al
  433e1f:	lahf   
  433e20:	and    dh,ch
  433e22:	push   eax
  433e23:	fwait
  433e24:	jle    0x433dea
  433e26:	(bad)  
  433e28:	mov    edi,0x86722f20
  433e2d:	in     al,dx
  433e2e:	loope  0x433eaf
  433e30:	js     0x433e3a
  433e32:	stos   BYTE PTR es:[edi],al
  433e33:	hlt    
  433e34:	js     0x433e3e
  433e36:	mov    edx,0x825a973b
  433e3b:	mov    DWORD PTR [ecx],0x753ba400
  433e41:	test   DWORD PTR [ecx+0x59],esp
  433e44:	add    BYTE PTR [di+0x6705],dl
  433e49:	add    BYTE PTR [ebp-0x59ff98fb],dl
  433e4f:	cmp    edx,DWORD PTR [ebp+0x66]
  433e52:	das    
  433e53:	mov    dl,BYTE PTR [edx-0x2fad028]
  433e59:	dec    ebp
  433e5a:	mov    dl,0x83
  433e5c:	test   BYTE PTR [eax],al
  433e5e:	das    
  433e5f:	add    eax,0x854d
  433e64:	jmp    0xf09f88f7
  433e69:	mov    ebx,0x52f0054
  433e6e:	std    
  433e6f:	shl    BYTE PTR [ecx-0x17],0x4
  433e73:	add    BYTE PTR [edi],ch
  433e75:	add    eax,0x74a5cee5
  433e7a:	sti    
  433e7b:	test   DWORD PTR [edi+0x38],esi
  433e7e:	mov    ebp,0x8225737d
  433e83:	(bad)  
  433e84:	and    BYTE PTR [ecx-0x4449683c],dh
  433e8a:	fs xchg ecx,ebx
  433e8d:	loopne 0x433e16
  433e8f:	mov    edi,0x4bee1d9
  433e94:	das    
  433e95:	fidiv  WORD PTR [ebx]
  433e97:	sar    BYTE PTR [ebx+0x22],1
  433e9a:	sub    edx,eax
  433e9c:	jae    0x433ec0
  433e9e:	mov    esp,0x5eac4b88
  433ea3:	ja     0x433ecc
  433ea5:	pop    ecx
  433ea6:	cmp    DWORD PTR [edi+0x37],esi
  433ea9:	popa   
  433eaa:	mov    eax,ds:0x25b0e599
  433eaf:	or     BYTE PTR [edi],ch
  433eb1:	addr16 mov eax,ds:0x2a63
  433eb5:	pushf  
  433eb6:	mov    esi,DWORD PTR [esi+0x31]
  433eb9:	push   esi
  433eba:	jnp    0x433eb9
  433ebc:	adc    esi,DWORD PTR es:[ecx-0x182626a2]
  433ec3:	mov    BYTE PTR [ebp-0x2a],bh
  433ec6:	call   0x68d2:0x85000088
  433ecd:	cli    
  433ece:	push   es
  433ecf:	adc    esp,edi
  433ed1:	add    edi,DWORD PTR [edx+ebx*8+0x64]
  433ed5:	std    
  433ed6:	jnp    0x433ecb
  433ed8:	outs   dx,BYTE PTR ds:[esi]
  433ed9:	inc    ebp
  433eda:	jg     0x433f43
  433edc:	sub    DWORD PTR [eax+0x62],ebx
  433edf:	push   ds
  433ee0:	call   0xf212765
  433ee5:	ret    0xe35c
  433ee8:	dec    ah
  433eea:	cmp    al,0xe7
  433eec:	sbb    bh,BYTE PTR [ebx+eiz*4+0x55fcb212]
  433ef3:	mov    cl,0xa5
  433ef5:	pop    es
  433ef6:	das    
  433ef7:	addr16 jno 0x433ead
  433efa:	das    
  433efb:	fsubrp st(7),st
  433efd:	add    BYTE PTR [ebp+0x2f03e741],dh
  433f03:	addr16 jno 0x433eb1
  433f06:	das    
  433f07:	fsubrp st(7),st
  433f09:	imul   ebp,DWORD PTR [edi],0xeb8ee788
  433f0f:	in     al,dx
  433f10:	add    bh,al
  433f12:	sub    eax,0x2b0358a0
  433f17:	jl     0x433f19
  433f19:	push   0x2
  433f1b:	mov    dl,0x0
  433f1d:	push   0xffffffea
  433f1f:	lods   eax,DWORD PTR ds:[esi]
  433f20:	inc    edx
  433f22:	sub    al,0x7c
  433f24:	add    BYTE PTR [edx-0x6],ch
  433f27:	test   eax,0x35ba7400
  433f2c:	add    cl,ch
  433f2e:	add    BYTE PTR [eax],al
  433f30:	sub    al,0xa3
  433f32:	mov    ebx,DWORD PTR [edi-0x54]
  433f35:	fld    QWORD PTR [eax]
  433f37:	jmp    0x1205981a
  433f3c:	aas    
  433f3d:	or     cl,bh
  433f3f:	push   ds
  433f40:	mov    bh,0x26
  433f42:	sub    eax,0x201aaf29
  433f47:	fs in  eax,0xe7
  433f4a:	xchg   esp,eax
  433f4b:	sub    DWORD PTR [ebx+0x69],ebp
  433f4e:	xchg   DWORD PTR [edi-0x72ada674],esp
  433f54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433f55:	push   ecx
  433f56:	pop    edx
  433f57:	mov    esi,gs
  433f59:	fiadd  DWORD PTR [eax]
  433f5b:	mov    ch,0xf7
  433f5d:	and    cl,ah
  433f5f:	lods   eax,DWORD PTR ds:[esi]
  433f60:	mul    DWORD PTR [edx]
  433f62:	int3   
  433f63:	cmp    al,0xa8
  433f65:	add    al,BYTE PTR [ebp+0x4b5b2324]
  433f6b:	fnstenv [ecx-0x7e9f7fe]
  433f71:	push   ss
  433f72:	xchg   ecx,esi
  433f74:	test   eax,0xf3600c9d
  433f79:	pop    eax
  433f7a:	js     0x433f69
  433f7c:	mov    ebx,0xf33785c9
  433f81:	adc    dl,BYTE PTR [ebx+0xde33b1]
  433f87:	(bad)  
  433f88:	in     eax,dx
  433f89:	mov    eax,ds:0x3618000d
  433f8e:	add    BYTE PTR [eax],al
  433f90:	xchg   esi,eax
  433f91:	pusha  
  433f92:	inc    esi
  433f93:	xor    BYTE PTR [eax],al
  433f95:	add    BYTE PTR [ecx],bl
  433f97:	stos   BYTE PTR es:[edi],al
  433f98:	dec    edx
  433f99:	push   ecx
  433f9a:	sbb    BYTE PTR [edx],al
  433f9c:	out    dx,al
  433f9d:	xor    edx,DWORD PTR [esi-0x23]
  433fa0:	jnp    0x433f66
  433fa2:	pop    edx
  433fa3:	pop    esi
  433fa4:	shl    BYTE PTR [esi+ecx*2+0x58],0xc8
  433fa9:	inc    DWORD PTR [ecx+0x155ddd60]
  433faf:	popa   
  433fb0:	ds xor bl,dl
  433fb3:	scas   al,BYTE PTR es:[edi]
  433fb4:	cld    
  433fb5:	push   edx
  433fb6:	int    0x23
  433fb8:	call   0xf75834e6
  433fbd:	sbb    DWORD PTR [edx-0x22],0x7d
  433fc1:	sar    BYTE PTR [edx+0x41cf7bdd],0x1
  433fc8:	push   es
  433fc9:	and    DWORD PTR [ebx+0x154b5008],0x41056d11
  433fd3:	jae    0x433fcc
  433fd5:	inc    DWORD PTR [ecx]
  433fd7:	cmp    ax,0x96fc
  433fdb:	pop    edi
  433fdc:	xor    BYTE PTR ds:[ebp+0x27],bl
  433fe0:	call   0xf7574486
  433fe5:	or     DWORD PTR [edx+0x7ac07e10],0xffffffd9
  433fec:	jnp    0x433fbd
  433fee:	icebp  
  433fef:	pop    edi
  433ff0:	xor    BYTE PTR ds:[ebx-0x5a],dl
  433ff4:	clc    
  433ff5:	push   ecx
  433ff6:	dec    ebp
  433ff7:	daa    
  433ff8:	call   0x74434086
  433ffd:	adc    esi,edi
  433fff:	sbb    edx,0x10
  434002:	jle    0x433fc4
  434004:	cmp    bl,cl
  434006:	jnp    0x433fd7
  434008:	das    
  434009:	push   0xb25f428a
  43400e:	push   eax
  43400f:	cld    
  434010:	fisttp QWORD PTR [ebx-0x6b011739]
  434016:	idiv   cl
  434018:	lods   al,BYTE PTR ds:[esi]
  434019:	inc    edx
  43401a:	stc    
  43401b:	sub    BYTE PTR [edi+0xa],0x0
  43401f:	jge    0x434099
  434021:	ja     0x43400d
  434023:	push   ds
  434024:	stos   BYTE PTR es:[edi],al
  434025:	scas   eax,DWORD PTR es:[edi]
  434026:	jo     0x434042
  434028:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434029:	add    BYTE PTR [ecx+0x3c072f00],0x43
  434030:	dec    ebx
  434031:	push   ecx
  434032:	pop    es
  434033:	sub    DWORD PTR [edi+0x4a],0x6
  434037:	jge    0x434070
  434039:	cli    
  43403a:	push   0x5ceac06
  43403f:	je     0x434073
  434041:	js     0x433fdf
  434043:	stc    
  434044:	and    cl,dh
  434046:	mov    BYTE PTR [ebx+0x1b],al
  434049:	push   esi
  43404a:	mov    al,BYTE PTR [edx+0x5f]
  43404d:	jl     0x434016
  43404f:	call   0xfa3a53f6
  434054:	lods   al,BYTE PTR ds:[esi]
  434055:	mov    ecx,0x91ef82f9
  43405a:	add    bh,BYTE PTR [ebp-0x20]
  43405d:	add    BYTE PTR [ebx+0x1f000042],cl
  434063:	mov    al,BYTE PTR [ecx-0x4]
  434066:	jl     0x43403e
  434068:	mov    ecx,edx
  43406a:	(bad)  
  43406b:	test   eax,0x7bd0f9f2
  434070:	push   ecx
  434071:	clc    
  434072:	lods   al,BYTE PTR ds:[esi]
  434073:	inc    ecx
  434074:	add    BYTE PTR [ebx+0x7cf9c9ef],al
  43407a:	call   0xaa5b2bc7
  43407f:	inc    eax
  434080:	imul   edx,DWORD PTR [ebx],0xf83cdeb4
  434086:	pop    edx
  434087:	push   0xde2f0473
  43408c:	sbb    ecx,DWORD PTR [esi]
  43408e:	popf   
  43408f:	sbb    ebx,edi
  434091:	outs   dx,BYTE PTR ds:[esi]
  434092:	sub    al,0x4f
  434094:	pusha  
  434095:	stc    
  434096:	xchg   BYTE PTR [edi],cl
  434098:	ins    BYTE PTR es:[edi],dx
  434099:	aas    
  43409a:	jnp    0x43404a
  43409c:	pop    esi
  43409d:	inc    edx
  43409e:	aas    
  43409f:	arpl   WORD PTR [ecx+0x620bedec],bx
  4340a5:	stc    
  4340a6:	loop   0x4340c1
  4340a8:	jecxz  0x434128
  4340aa:	outs   dx,DWORD PTR ds:[esi]
  4340ab:	mov    ch,ah
  4340ad:	test   BYTE PTR [esi+0xf],ah
  4340b0:	ds sub al,0xb2
  4340b3:	mov    eax,ds:0xf388543
  4340b8:	mov    bl,0x23
  4340ba:	lods   al,BYTE PTR ds:[esi]
  4340bb:	bsf    edx,DWORD PTR [edi]
  4340be:	add    bl,BYTE PTR [esi]
  4340c0:	out    dx,al
  4340c1:	mov    edi,eax
  4340c3:	fucom  st(7)
  4340c5:	add    eax,DWORD PTR [eax]
  4340c7:	add    BYTE PTR [esi+eiz*8-0x22447e22],bl
  4340ce:	out    0x3,eax
  4340d0:	fwait
  4340d1:	in     al,0x11
  4340d3:	lds    esi,FWORD PTR [edi]
  4340d5:	mov    esp,ebp
  4340d7:	mov    eax,0xf8fa0e98
  4340dc:	mov    dl,0x97
  4340de:	mov    bh,0x86
  4340e0:	adc    bl,BYTE PTR fs:[eax-0x14fa0a74]
  4340e7:	cmc    
  4340e8:	out    0xe,al
  4340ea:	mov    di,0x5933
  4340ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4340ef:	outs   dx,DWORD PTR ds:[esi]
  4340f0:	sub    al,0x5b
  4340f2:	call   0xc346:0x6ec5d2f8
  4340f9:	pop    edx
  4340fa:	sar    al,0x43
  4340fd:	mov    esi,0x8ab76c00
  434102:	sbb    al,0xfa
  434104:	ins    BYTE PTR es:[edi],dx
  434105:	enter  0x498a,0x2c
  434109:	fiadd  WORD PTR [eax]
  43410b:	adc    al,0x2b
  43410d:	leave  
  43410e:	or     BYTE PTR [ebp+0x2c],0xde
  434112:	add    BYTE PTR ds:0xf1bd0c39,dl
  434118:	adc    ebx,ebx
  43411a:	mov    ecx,0xf9147760
  43411f:	(bad)  
  434120:	out    dx,al
  434121:	int    0x8b
  434123:	adc    al,0x6b
  434125:	lahf   
  434126:	test   DWORD PTR [edi],esi
  434128:	push   esp
  434129:	scas   eax,DWORD PTR es:[edi]
  43412a:	out    dx,eax
  43412b:	pop    esi
  43412c:	add    BYTE PTR [eax],al
  43412e:	push   edi
  43412f:	pop    eax
  434130:	pop    ebx
  434131:	push   ecx
  434132:	stos   DWORD PTR es:[edi],eax
  434133:	sbb    DWORD PTR [esp+eiz*2],eax
  434136:	ins    BYTE PTR es:[edi],dx
  434137:	mov    DWORD PTR [ebx],eax
  434139:	push   0x77
  43413b:	adc    al,0xe5
  43413d:	fdivr  DWORD PTR [ecx-0xc1b8cec]
  434143:	jae    0x4340ed
  434145:	jmp    0xecb81f76
  43414a:	out    0x75,eax
  43414c:	stc    
  43414d:	push   ds
  43414e:	pop    ss
  43414f:	fs inc ebx
  434151:	loope  0x434180
  434153:	out    0x8b,al
  434155:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434156:	add    al,0xaf
  434158:	test   DWORD PTR [edi+0x11ca633c],ebp
  43415e:	inc    edi
  43415f:	std    
  434160:	clc    
  434161:	imul   BYTE PTR [edx+eiz*1-0x6d139bfc]
  434168:	std    
  434169:	imul   ebp,eax,0x27248507
  43416f:	arpl   WORD PTR [ebx-0x7],dx
  434172:	sbb    eax,0xeb6efd25
  434177:	fiadd  WORD PTR [eax]
  434179:	add    dh,dl
  43417b:	lock xchg ah,bl
  43417e:	(bad)  
  43417f:	loope  0x434181
  434181:	add    DWORD PTR [ebp-0x692e840c],0x5a
  434188:	sbb    BYTE PTR [ecx+0x4583de5e],cl
  43418e:	into   
  43418f:	pop    ecx
  434190:	inc    ebp
  434191:	or     BYTE PTR [eax],al
  434193:	add    BYTE PTR [edi],cl
  434195:	loopne 0x434190
  434197:	add    BYTE PTR ds:0xfd5fbf59,bh
  43419d:	(bad)  
  43419e:	push   esp
  43419f:	ret    
  4341a0:	retf   0xcc16
  4341a3:	int3   
  4341a4:	adc    ebx,DWORD PTR [ecx-0x14]
  4341a7:	sub    edx,0xffffffed
  4341aa:	add    DWORD PTR [ebp+0x5e],0xffffffd0
  4341ae:	retf   0xa389
  4341b1:	adc    eax,0xda73c233
  4341b6:	test   DWORD PTR [edx-0x44],eax
  4341b9:	pop    eax
  4341ba:	fstp   QWORD PTR [ebp+0x14]
  4341bd:	(bad)  
  4341be:	add    BYTE PTR [esi-0x43],dl
  4341c1:	push   ecx
  4341c2:	loopne 0x4341c4
  4341c4:	inc    esi
  4341c5:	loope  0x4341fa
  4341c7:	repnz jecxz 0x4341ae
  4341ca:	mov    eax,0xf715499a
  4341cf:	pop    esi
  4341d0:	popf   
  4341d1:	call   DWORD PTR [edx+eax*8+0xa]
  4341d5:	loope  0x434208
  4341d7:	push   ss
  4341d8:	mov    ds:0x299cb8e4,eax
  4341dd:	adc    eax,0xff7d5ef7
  4341e2:	push   esp
  4341e3:	ret    0xe10a
  4341e6:	dec    ebx
  4341e7:	mov    edi,DWORD PTR [ebx-0x7c25cc10]
  4341ed:	fcom   DWORD PTR [ebx+0x33]
  4341f0:	xchg   BYTE PTR [edx-0x2dd01a7d],dh
  4341f6:	mov    esi,0x2f00000c
  4341fb:	add    BYTE PTR [eax+0xc],0xb6
  4341ff:	mov    esp,0x33598714
  434204:	ss xchg edx,eax
  434206:	stos   DWORD PTR es:[edi],eax
  434207:	idiv   ah
  434209:	call   FWORD PTR ds:0x64086a30
  43420f:	gs jge 0x434212
  434212:	das    
  434213:	imul   DWORD PTR [edx+0xf]
  434216:	push   esi
  434217:	(bad)  
  434218:	lds    eax,FWORD PTR [eax]
  43421a:	das    
  43421b:	imul   DWORD PTR [edi+0x7]
  43421e:	mov    ah,0x94
  434220:	jge    0x434222
  434222:	das    
  434223:	test   DWORD PTR [ebx-0x7a13e4b6],0xbd48377a
  43422d:	test   DWORD PTR [eax-0x9],esi
  434230:	inc    edx
  434231:	js     0x43426f
  434233:	inc    ebp
  434234:	jno    0x43426b
  434236:	jg     0x434260
  434238:	or     esi,DWORD PTR [ecx+0x33]
  43423b:	lock (bad) [edx+0x1f]
  43423f:	fimul  WORD PTR [edx-0x308d038]
  434245:	jae    0x43426e
  434247:	or     BYTE PTR [ebx+0x78],0x2c
  43424b:	hlt    
  43424c:	mov    WORD PTR [edx+0x3b],ss
  43424f:	js     0x4342c4
  434251:	adc    al,0x2f
  434253:	cld    
  434254:	jp     0x434206
  434256:	cs cmc 
  434258:	cld    
  434259:	jl     0x4341e4
  43425b:	std    
  43425c:	cld    
  43425d:	or     BYTE PTR [eax],al
  43425f:	add    BYTE PTR [edx+0x2ffffd80],ch
  434265:	nop
  434266:	cmp    edi,DWORD PTR [esp+eiz*4+0x43]
  43426a:	jne    0x4341ef
  43426c:	out    dx,eax
  43426d:	xchg   edx,eax
  43426e:	add    eax,0xf2def683
  434273:	jg     0x434225
  434275:	fsubrp st(7),st
  434277:	add    edx,DWORD PTR [esi+0x2f0427de]
  43427d:	popa   
  43427e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43427f:	ins    DWORD PTR es:[edi],dx
  434280:	xor    BYTE PTR [eax-0x7019c715],dl
  434286:	out    dx,al
  434287:	mov    BYTE PTR ds:0x36f56c86,dh
  43428d:	bound  esp,QWORD PTR [ecx+0x3]
  434290:	das    
  434291:	fisubr WORD PTR [esi+0x7e]
  434294:	outs   dx,DWORD PTR ds:[esi]
  434295:	fsubrp st(7),st
  434297:	add    edx,DWORD PTR [edx-0x4a76d85f]
  43429d:	and    ah,bh
  43429f:	add    ebp,DWORD PTR [edi]
  4342a1:	out    dx,eax
  4342a2:	xor    DWORD PTR [eax-0x4e],eax
  4342a5:	je     0x4342da
  4342a7:	add    al,0x2f
  4342a9:	fdivp  st(5),st
  4342ab:	add    edi,eax
  4342ad:	lods   eax,DWORD PTR ds:[esi]
  4342ae:	adc    eax,0xe756ad87
  4342b3:	add    ebp,DWORD PTR [edi]
  4342b5:	scas   al,BYTE PTR es:[edi]
  4342b6:	dec    edi
  4342b7:	in     eax,0x1f
  4342b9:	fsubrp st(7),st
  4342bb:	xor    BYTE PTR [ebx-0xe],0x64
  4342bf:	les    esi,FWORD PTR [esi]
  4342c1:	popa   
  4342c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4342c3:	add    al,BYTE PTR [eax]
  4342c5:	add    BYTE PTR [edi],ch
  4342c7:	fisubr WORD PTR [esi+0x6]
  4342ca:	stos   BYTE PTR es:[edi],al
  4342cb:	je     0x434348
  4342cd:	add    al,0x2f
  4342cf:	ficomp WORD PTR [esi+0x7e]
  4342d2:	retf   
  4342d3:	fucom  st(7)
  4342d5:	add    edi,DWORD PTR [esi-0x53]
  4342d8:	outs   dx,BYTE PTR ds:[esi]
  4342d9:	xchg   BYTE PTR [ebx+0x7903e7dd],ah
  4342df:	scas   al,BYTE PTR es:[edi]
  4342e0:	or     dl,bl
  4342e2:	and    BYTE PTR [edx],0xd7
  4342e5:	cmp    dh,ch
  4342e7:	fisub  DWORD PTR [esp+edi*1-0x10]
  4342eb:	or     al,BYTE PTR [eax]
  4342ed:	jmp    0x297132a9
  4342f2:	sub    al,0x88
  4342f4:	inc    eax
  4342f5:	jo     0x434361
  4342f7:	loop   0x434280
  4342f9:	pop    edi
  4342fa:	and    ebx,ebx
  4342fc:	inc    edx
  4342fd:	sub    eax,0xf0788814
  434302:	add    cl,BYTE PTR [edx-0x228b907b]
  434308:	add    cl,ch
  43430a:	xor    DWORD PTR [esi],ebx
  43430c:	or     DWORD PTR [ebp-0x4c],ebp
  43430f:	fld    QWORD PTR [eax]
  434311:	jmp    0xea0b8ac5
  434316:	sub    al,0xde
  434318:	add    BYTE PTR [edx+ebx*1],dl
  43431b:	mov    eax,edi
  43431d:	in     eax,0x33
  43431f:	(bad)  
  434320:	fucomip st,st(1)
  434322:	sub    al,0xde
  434324:	test   DWORD PTR [edi],ebp
  434326:	sbb    esp,DWORD PTR [ecx+0x4a]
  434329:	fld    DWORD PTR [eax]
  43432b:	add    BYTE PTR [esi],al
  43432d:	or     al,0x8c
  43432f:	pop    ds
  434330:	das    
  434331:	pushf  
  434332:	xchg   DWORD PTR [edi+ebx*2],esp
  434335:	bound  ecx,QWORD PTR [ebx-0x7]
  434338:	inc    esp
  434339:	stos   DWORD PTR es:[edi],eax
  43433a:	adc    eax,0x43632ce9
  43433f:	loope  0x43430a
  434341:	sbb    eax,0x87afdc78
  434346:	sbb    al,0xe9
  434348:	enter  0xc1dc,0xa4
  43434c:	and    al,0x7
  43434e:	stc    
  43434f:	and    esp,DWORD PTR ss:[edx+ebx*2-0x2f]
  434354:	pop    edi
  434355:	push   ds
  434356:	test   DWORD PTR [edx],esp
  434358:	inc    edi
  434359:	test   esp,esi
  43435b:	jb     0x434341
  43435d:	repz mov edi,0x857682e8
  434363:	lahf   
  434364:	jl     0x4343c7
  434366:	inc    ebx
  434367:	add    dh,dh
  434369:	out    dx,eax
  43436a:	ds ins BYTE PTR es:[edi],dx
  43436c:	jge    0x434336
  43436e:	adc    BYTE PTR [edi-0x3a],dl
  434371:	lods   al,BYTE PTR ds:[esi]
  434372:	call   0x120e910
  434377:	sub    DWORD PTR [eax-0x39ffff9e],edx
  43437d:	mov    BYTE PTR [ebp-0x10],cl
  434380:	dec    edi
  434381:	xchg   esp,eax
  434382:	jo     0x43439d
  434384:	cmp    BYTE PTR [esi+0x0],dl
  434387:	add    dh,al
  434389:	call   0x978137e3
  43438e:	or     BYTE PTR [ecx],al
  434390:	add    BYTE PTR [eax],al
  434392:	inc    ebx
  434393:	push   cs
  434394:	jnp    0x43438e
  434396:	xchg   edi,eax
  434397:	xchg   ecx,eax
  434398:	jae    0x43431f
  43439a:	mov    BYTE PTR [edi-0x76c2148e],0x3e
  4343a1:	or     BYTE PTR [ebx],bl
  4343a3:	and    ch,BYTE PTR [ebp+0x8]
  4343a6:	or     eax,0x400b789c
  4343ab:	mov    ?,WORD PTR [esi+eiz*2-0x3]
  4343af:	mov    edx,DWORD PTR [ebx+edi*1]
  4343b2:	fimul  WORD PTR [edi-0x2f217506]
  4343b8:	rol    BYTE PTR [ebp-0x14f17a2f],0x45
  4343bf:	pop    esi
  4343c0:	inc    ecx
  4343c1:	add    ch,cl
  4343c3:	mov    ds:0xed3a8a04,eax
  4343c8:	or     DWORD PTR [esi+0x56],0xffffff85
  4343cc:	adc    al,0x8
  4343ce:	xchg   BYTE PTR [eax-0x768e8d41],bh
  4343d4:	adc    BYTE PTR ds:[ebp-0xaa88f64],cl
  4343db:	pop    ss
  4343dc:	stc    
  4343dd:	jge    0x43439d
  4343df:	lods   al,BYTE PTR ds:[esi]
  4343e0:	dec    ecx
  4343e1:	adc    DWORD PTR [edi],ebp
  4343e3:	push   ecx
  4343e4:	pop    ecx
  4343e5:	call   0x406840
  4343ea:	inc    esi
  4343eb:	mov    eax,ds:0xf72f0084
  4343f0:	jnp    0x434434
  4343f2:	pop    edi
  4343f3:	pop    DWORD PTR cs:[eax+eax*1-0x308d100]
  4343fb:	es pop ecx
  4343fd:	nop    DWORD PTR [edx+0x3b]
  434401:	imul   BYTE PTR [esi+0x10]
  434404:	cs mov cl,0x8
  434407:	inc    DWORD PTR [edx+0xf]
  43440a:	add    al,0x7b
  43440c:	mov    ebx,0x2f146f73
  434411:	clc    
  434412:	test   DWORD PTR [eax-0x57],edx
  434415:	dec    edi
  434416:	out    dx,al
  434417:	test   edx,ebp
  434419:	cmp    cl,BYTE PTR [esi+0x55]
  43441c:	stc    
  43441d:	mov    ebp,eax
  43441f:	pop    ebx
  434420:	ins    DWORD PTR es:[edi],dx
  434421:	cli    
  434422:	cld    
  434423:	pop    eax
  434424:	in     al,0x23
  434426:	mov    ebp,0x5061b45a
  43442b:	mov    esi,0x554df72b
  434430:	lods   al,BYTE PTR ds:[esi]
  434431:	dec    esi
  434432:	out    dx,al
  434433:	pop    edx
  434434:	mov    ah,0x59
  434436:	push   eax
  434437:	mov    esi,0xccb8f733
  43443c:	imul   edx,edx,0xffffffb9
  43443f:	int3   
  434440:	arpl   WORD PTR [edx+0x497bccb9],di
  434446:	jp     0x434434
  434448:	fmul   QWORD PTR [edi+0x7a]
  43444b:	jnp    0x434474
  43444d:	add    al,0xca
  43444f:	xor    DWORD PTR [eax],0x51
  434452:	cld    
  434453:	pop    eax
  434454:	mov    edx,0x82558b34
  434459:	mov    bl,0x1
  43445b:	add    BYTE PTR [eax],al
  43445d:	add    BYTE PTR [ecx+0xfba6ede],al
  434463:	(bad)  
  434465:	add    ebp,DWORD PTR [eax+edx*1-0x5f4a0264]
  43446c:	ins    DWORD PTR es:[edi],dx
  43446d:	push   ecx
  43446e:	push   esi
  43446f:	mov    ds:0xde2bc5a4,eax
  434474:	outs   dx,BYTE PTR ds:[esi]
  434475:	mov    DWORD PTR [edi+0x2a03e7de],ebp
  43447b:	pusha  
  43447c:	arpl   WORD PTR [ebx],ax
  43447e:	das    
  43447f:	ficomp WORD PTR [ebp+edx*1+0x18]
  434483:	push   0xde2f04af
  434488:	pop    esp
  434489:	std    
  43448a:	stos   DWORD PTR es:[edi],eax
  43448b:	cwde   
  43448c:	push   edi
  43448d:	sub    eax,0x53b9265
  434492:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434493:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434494:	push   edx
  434495:	jge    0x4344d4
  434497:	lods   al,BYTE PTR ds:[esi]
  434498:	cmp    eax,0xcbf1a604
  43449d:	rcr    BYTE PTR [edx-0x22],1
  4344a0:	enterw 0x5b27,0x19
  4344a5:	cmp    al,0x37
  4344a7:	pop    ds
  4344a8:	jmp    0xe82173b0
  4344ad:	jbe    0x4344df
  4344af:	pop    ecx
  4344b0:	sub    DWORD PTR [eax],ecx
  4344b2:	fcomip st,st(5)
  4344b4:	push   es
  4344b5:	and    ch,BYTE PTR [edi]
  4344b7:	ficomp WORD PTR [ecx]
  4344b9:	pop    esi
  4344ba:	das    
  4344bb:	pop    ds
  4344bc:	and    DWORD PTR [edi+ebp*1],edi
  4344bf:	fsubrp st(7),st
  4344c1:	add    eax,DWORD PTR [eax]
  4344c3:	add    BYTE PTR [esi-0xf],dl
  4344c6:	sti    
  4344c7:	ror    BYTE PTR [edx],1
  4344c9:	fisub  WORD PTR [esi-0x38]
  4344cc:	aaa    
  4344cd:	test   al,0x22
  4344cf:	mov    DWORD PTR [edi-0x22],ecx
  4344d2:	out    0x3,eax
  4344d4:	das    
  4344d5:	fsubrp st(7),st
  4344d7:	add    eax,DWORD PTR [esi+0x722a0053]
  4344dd:	mov    ds:0x1a2ce5be,eax
  4344e2:	int3   
  4344e3:	xor    eax,0x2dcc19ef
  4344e8:	out    dx,eax
  4344e9:	sbb    esp,ecx
  4344eb:	mov    esp,0xfd7efa83
  4344f0:	clc    
  4344f1:	pop    es
  4344f2:	stc    
  4344f3:	jmp    0x7294f153
  4344f8:	loope  0x434548
  4344fa:	add    eax,0x8bde2ce9
  4344ff:	sub    al,0xd7
  434501:	add    edi,ecx
  434503:	out    0xdb,al
  434505:	cmp    al,BYTE PTR [ebp+0x380cb2c]
  43450b:	cmp    BYTE PTR [eax+0x6b],al
  43450e:	hlt    
  43450f:	iret   
  434510:	mov    edi,0xe3fa4e04
  434515:	pop    esi
  434516:	or     DWORD PTR [ecx],0xffffff9e
  434519:	add    al,0xf9
  43451b:	shl    ebx,0xb3
  43451e:	add    cl,ch
  434520:	arpl   WORD PTR ds:0x5f90ad7d,ax
  434526:	add    ebp,0x0
  434529:	add    BYTE PTR [edi+0x4],bh
  43452c:	stc    
  43452d:	shl    BYTE PTR [edi-0x2c],cl
  434530:	test   BYTE PTR [edi+0x33],bl
  434533:	fiadd  WORD PTR [eax]
  434535:	sbb    eax,esi
  434537:	pop    edx
  434538:	hlt    
  434539:	jg     0x43459a
  43453b:	add    al,0x50
  43453d:	adc    DWORD PTR [ebx],0xdb6ef8f7
  434543:	test   DWORD PTR [ecx+esi*1-0xdf7de55],0x4d435e6e
  43454e:	das    
  43454f:	bound  edx,QWORD PTR [edx-0x7a21d318]
  434555:	add    bl,dl
  434557:	mov    esi,0xa669fff7
  43455c:	dec    esi
  43455d:	push   eax
  43455e:	les    eax,FWORD PTR [ebp+edi*2-0x8f1b70c]
  434565:	push   eax
  434566:	inc    ecx
  434567:	pushf  
  434568:	fadd   QWORD PTR [ecx]
  43456a:	push   ss
  43456b:	loop   0x43456d
  43456d:	call   0x44053c
  434572:	test   DWORD PTR ds:0x8d468514,ebx
  434578:	sti    
  434579:	sbb    BYTE PTR ds:0xf285830e,0xe
  434580:	idiv   edi
  434582:	jnp    0x434548
  434584:	cld    
  434585:	push   ecx
  434586:	pop    ebx
  434587:	pop    edi
  434588:	hlt    
  434589:	(bad)  
  43458a:	jmp    0xc12d84
  43458f:	add    bl,ch
  434591:	cmc    
  434592:	test   BYTE PTR [ebx-0x3f82296e],0xf2
  434599:	loopne 0x434616
  43459b:	retf   
  43459c:	jmp    0xd967c32a
  4345a1:	cmc    
  4345a2:	test   BYTE PTR [ebp-0x72b601bd],0x1b
  4345a9:	push   es
  4345aa:	idiv   bh
  4345ac:	test   eax,0x99ede622
  4345b1:	cmc    
  4345b2:	jp     0x434578
  4345b4:	xchg   edx,eax
  4345b5:	push   esi
  4345b6:	shl    BYTE PTR [ebp+eax*4+0x60],0xc3
  4345bb:	(bad)  
  4345bc:	fist   DWORD PTR [esi+0x56cd50f0]
  4345c2:	and    al,0xff
  4345c4:	leave  
  4345c5:	hlt    
  4345c6:	test   BYTE PTR [ebp-0x90c0e],cl
  4345cc:	ficom  WORD PTR [esp+ebp*8]
  4345cf:	jmp    FWORD PTR [edi]
  4345d1:	lods   al,BYTE PTR ds:[esi]
  4345d2:	jge    0x434598
  4345d4:	xor    edi,DWORD PTR [edx-0x3c]
  4345d7:	je     0x434605
  4345d9:	js     0x434590
  4345db:	stc    
  4345dc:	mov    ah,0x79
  4345de:	sub    cl,bh
  4345e0:	and    ah,cl
  4345e2:	jg     0x43462f
  4345e4:	pop    ds
  4345e5:	data16 or BYTE PTR [ebx-0x61642e5],0x17
  4345ed:	mov    bh,0xe0
  4345ef:	stc    
  4345f0:	add    BYTE PTR [eax-0x38],bh
  4345f3:	add    al,0x0
  4345f5:	add    BYTE PTR [edx-0x5202874a],dh
  4345fb:	iret   
  4345fc:	jmp    0xea5df886
  434601:	stc    
  434602:	loopne 0x43467d
  434604:	push   edi
  434605:	lock jge 0x4345aa
  434608:	jg     0x4345fe
  43460a:	sar    ebx,1
  43460c:	jmp    0xea5574f9
  434611:	stc    
  434612:	lods   al,BYTE PTR ds:[esi]
  434613:	xor    al,BYTE PTR [ecx]
  434615:	sub    edi,0xffffffaa
  434618:	std    
  434619:	jl     0x4345ff
  43461b:	sbb    eax,DWORD PTR [eax+0x75e6a343]
  434621:	or     DWORD PTR [ebx+0x4c],0xffffffea
  434625:	stc    
  434626:	stos   BYTE PTR es:[edi],al
  434627:	mov    eax,ds:0x3b90faf1
  43462c:	aad    0xde
  43462e:	fwait
  43462f:	arpl   dx,bp
  434631:	jge    0x43469e
  434633:	repnz xchg eax,eax
  434636:	add    edi,eax
  434638:	jge    0x4345ff
  43463a:	jo     0x4345cb
  43463c:	mov    BYTE PTR [eax+ebp*2],ah
  43463f:	sub    edx,0xffffff8b
  434642:	mov    dl,0x1a
  434644:	jmp    0x5b8b:0x7fe558f9
  43464b:	frstor [ecx-0x12]
  43464e:	inc    esi
  43464f:	cmc    
  434650:	mov    dh,0xe0
  434652:	inc    esi
  434653:	add    al,0x66
  434655:	(bad)  
  434656:	xor    ebx,DWORD PTR [ebx+0x27]
  434659:	ja     0x43465b
  43465b:	add    BYTE PTR [edx],dh
  43465d:	pop    edi
  43465e:	cs out dx,al
  434660:	mov    dl,0x59
  434662:	add    ebp,edi
  434664:	es add al,0x64
  434667:	pop    eax
  434668:	pop    ss
  434669:	mov    cl,0x5c
  43466b:	sbb    BYTE PTR [ebx],0x5
  43466e:	and    ch,dh
  434670:	pop    ss
  434671:	into   
  434672:	or     al,0xee
  434674:	push   es
  434675:	pusha  
  434676:	sub    eax,DWORD PTR [edi]
  434678:	lods   al,BYTE PTR ds:[esi]
  434679:	push   ds
  43467a:	xchg   ebx,eax
  43467b:	add    dh,BYTE PTR [edx+0x17]
  43467e:	add    bh,BYTE PTR [edx+0x6c]
  434681:	push   es
  434682:	mov    esi,0xf2031388
  434687:	in     eax,dx
  434688:	pop    esp
  434689:	jmp    0xc81686ec
  43468e:	je     0x4346c4
  434690:	mov    BYTE PTR [ebx],0xda
  434693:	ja     0x4346be
  434695:	lds    edx,FWORD PTR [eax+edi*8+0x3c]
  434699:	fst    DWORD PTR [eax]
  43469b:	outs   dx,DWORD PTR ds:[esi]
  43469c:	mov    edi,0xc0a8ec8a
  4346a1:	add    edi,DWORD PTR [edx+0xb59aaed]
  4346a7:	in     eax,dx
  4346a8:	xchg   esi,eax
  4346a9:	add    ebx,DWORD PTR [edi+edx*4+0xb]
  4346ad:	add    esp,DWORD PTR [edx+0x6c50f9ed]
  4346b3:	clc    
  4346b4:	test   DWORD PTR [ebx],eax
  4346b6:	xchg   edx,eax
  4346b7:	fcom   QWORD PTR [ecx-0xd12760e]
  4346bd:	sbb    ebx,ebp
  4346bf:	xchg   BYTE PTR [eax],al
  4346c1:	add    BYTE PTR [edi-0x76],ch
  4346c4:	out    0x80,al
  4346c6:	push   0x3
  4346c8:	add    BYTE PTR [eax+esi*4+0x72],ah
  4346cc:	stc    
  4346cd:	outs   dx,BYTE PTR ds:[esi]
  4346ce:	inc    edx
  4346cf:	scas   al,BYTE PTR es:[edi]
  4346d0:	test   DWORD PTR [edi+edx*1+0x5],ebp
  4346d4:	stc    
  4346d5:	pop    esi
  4346d6:	rcl    BYTE PTR [esi-0xc],0x57
  4346da:	dec    edx
  4346db:	add    eax,0x54f21e8
  4346e0:	stc    
  4346e1:	push   0xfffffff7
  4346e3:	fld    DWORD PTR [ebx+0x7e01a729]
  4346e9:	and    cl,BYTE PTR [edx]
  4346eb:	pop    ebx
  4346ec:	mov    ebx,0xf90503f5
  4346f1:	adc    BYTE PTR [esi-0x781606fe],bl
  4346f7:	push   edi
  4346f8:	and    al,0x16
  4346fa:	or     al,BYTE PTR ds:0x9985c4f
  434700:	cli    
  434701:	push   es
  434702:	ficom  DWORD PTR [ebx+0x50009e8]
  434708:	stc    
  434709:	(bad)  
  43470a:	fstp   QWORD PTR [eax-0x38]
  43470d:	push   0xffffffe7
  43470f:	aad    0x5
  434711:	mov    bh,0x45
  434713:	lahf   
  434714:	in     al,0x54
  434716:	cs add ebp,0x246f37d6
  43471d:	into   
  43471e:	ret    
  43471f:	add    al,0x51
  434721:	pop    ds
  434722:	add    edx,DWORD PTR [ebx+ecx*4-0x67ffff9c]
  434729:	pop    es
  43472a:	stc    
  43472b:	mov    dh,0xfc
  43472d:	pop    edx
  43472e:	jnp    0x4346bd
  434730:	je     0x4347a1
  434732:	sub    al,0xe9
  434734:	sub    al,0x81
  434736:	(bad)  
  434737:	cmc    
  434738:	test   eax,0xafea741d
  43473d:	sbb    cl,bh
  43473f:	bound  ebp,QWORD PTR [ecx-0x4eff0647]
  434745:	icebp  
  434746:	test   BYTE PTR [ebp-0x1e],cl
  434749:	scas   eax,DWORD PTR es:[edi]
  43474a:	test   DWORD PTR [ebp-0x90f26],ecx
  434750:	scas   al,BYTE PTR es:[edi]
  434751:	sbb    ebx,esp
  434753:	call   ecx
  434755:	pop    ebp
  434756:	les    eax,FWORD PTR [ebx+ecx*8]
  434759:	push   ds
  43475a:	je     0x43475f
  43475c:	lds    eax,FWORD PTR [ebp-0x9]
  43475f:	mov    ecx,ebx
  434761:	mov    edx,0x8071fff7
  434766:	dec    ebp
  434767:	lock les eax,FWORD PTR [eax-0xd9f0b7b]
  43476e:	imul   al
  434770:	into   
  434771:	es idiv edi
  434774:	xchg   ebp,eax
  434775:	sbb    DWORD PTR [eax*4-0x7d0476aa],eax
  43477c:	dec    ebp
  43477d:	repnz test BYTE PTR [ebp+0x1a],al
  434781:	lods   eax,DWORD PTR ds:[esi]
  434782:	add    DWORD PTR [ebp-0x90d06],0x53
  434789:	xor    ah,0xfe
  43478c:	add    BYTE PTR [eax],al
  43478e:	loope  0x434785
  434790:	out    0x29,eax
  434792:	sub    eax,0x9a83f6f2
  434797:	fidivr WORD PTR [ebp-0x40]
  43479a:	pop    edx
  43479b:	fnstcw WORD PTR [ebx-0x35]
  43479e:	loope  0x434721
  4347a0:	jge    0x4347c6
  4347a2:	loope  0x434799
  4347a4:	test   BYTE PTR [ebp-0x72b7099d],0x13
  4347ab:	push   cs
  4347ac:	idiv   bh
  4347ae:	loope  0x4347d2
  4347b0:	add    ch,bl
  4347b2:	shl    ebp,0x7a
  4347b5:	les    ebx,FWORD PTR [edx-0x6a8b3fa2]
  4347bb:	pop    eax
  4347bc:	ret    
  4347bd:	jmp    FWORD PTR [edi]
  4347bf:	jl     0x434810
  4347c1:	cld    
  4347c2:	mov    ds:0xb450e8ba,al
  4347c7:	jb     0x4347e9
  4347c9:	stc    
  4347ca:	pusha  
  4347cb:	xor    BYTE PTR [edi-0x75],0x63
  4347cf:	mov    ebp,esp
  4347d1:	stc    
  4347d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4347d3:	stos   BYTE PTR es:[edi],al
  4347d4:	sbb    cl,bh
  4347d6:	dec    eax
  4347d7:	js     0x434854
  4347d9:	mov    ebx,0xf9e59fff
  4347de:	inc    edi
  4347df:	retf   
  4347e0:	(bad)  
  4347e2:	xor    BYTE PTR [eax+eax*8+0x4],dh
  4347e6:	mov    dl,0xb6
  4347e8:	jo     0x4347e7
  4347ea:	lods   eax,DWORD PTR ds:[esi]
  4347eb:	retf   
  4347ec:	in     eax,0x85
  4347ee:	jb     0x4347bb
  4347f0:	xor    edi,eax
  4347f2:	add    BYTE PTR [eax],al
  4347f4:	push   esp
  4347f5:	jp     0x43480f
  4347f7:	stc    
  4347f8:	or     BYTE PTR [eax+0x72440e6f],bh
  4347fe:	xor    al,0xf9
  434800:	clc    
  434801:	out    0x6f,eax
  434803:	push   es
  434804:	ss push edx
  434806:	jmp    0x68617a7e
  43480b:	lock pop ebx
  43480d:	cli    
  43480e:	test   eax,0xe607d897
  434813:	test   DWORD PTR [edx-0x370619e6],ebp
  434819:	mov    DWORD PTR [eax],edi
  43481b:	cld    
  43481c:	pop    esi
  43481d:	jb     0x434897
  43481f:	hlt    
  434820:	mov    ecx,0xb6e8e627
  434825:	sbb    al,0xe6
  434827:	stc    
  434828:	lods   al,BYTE PTR ds:[esi]
  434829:	xor    bh,cl
  43482b:	sub    BYTE PTR [edi-0x36],0x1
  43482f:	jge    0x434895
  434831:	inc    edi
  434832:	jp     0x434887
  434834:	xchg   ebx,eax
  434835:	mov    eax,ds:0xdddffc40
  43483a:	outs   dx,BYTE PTR ds:[esi]
  43483b:	or     BYTE PTR [ebx+0x1],0x9a
  43483f:	jmp    0x76:0xe99b52a4
  434846:	pusha  
  434847:	nop
  434848:	rol    DWORD PTR [eax],cl
  43484a:	sub    dl,0xa8
  43484d:	inc    edx
  43484e:	por    mm2,QWORD PTR [esi+0x0]
  434852:	jg     0x434812
  434854:	dec    ecx
  434855:	add    BYTE PTR [edx-0x7a],ch
  434858:	add    BYTE PTR [eax],al
  43485a:	jae    0x434835
  43485c:	ins    BYTE PTR es:[edi],dx
  43485d:	ret    
  43485e:	mov    ebx,0x36be66dc
  434863:	push   esp
  434864:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434865:	out    0xaa,eax
  434867:	pop    edx
  434868:	add    ebp,ebx
  43486a:	add    BYTE PTR es:[eax+edx*4+0x5b],dh
  43486f:	(bad)  
  434870:	cmp    edx,ebp
  434872:	mov    al,0x51
  434874:	ret    
  434875:	jmp    0xab4:0x78950016
  43487c:	and    edx,ebp
  43487e:	push   es
  43487f:	push   esi
  434880:	pop    esp
  434881:	jae    0x434879
  434883:	call   DWORD PTR [ecx]
  434885:	fstp   TBYTE PTR [ecx]
  434887:	hlt    
  434888:	or     edx,ebp
  43488a:	push   0x1a
  43488c:	jmp    0x43480e
  43488e:	out    dx,eax
  43488f:	mov    ah,dh
  434891:	xchg   dl,dh
  434893:	call   FWORD PTR [ebp-0x70]
  434896:	inc    ebx
  434897:	(bad)  
  434898:	jmp    0x4b84fb86
  43489d:	jmp    0x7fb14868
  4348a2:	aas    
  4348a3:	call   ecx
  4348a5:	jmp    0xb9295d54
  4348aa:	cmp    bl,BYTE PTR [ecx+0x4f]
  4348ad:	jmp    0xf4414858
  4348b2:	or     edi,ecx
  4348b4:	add    BYTE PTR [edx+0x50],ah
  4348b7:	cli    
  4348b8:	jo     0x43489f
  4348ba:	pop    ebx
  4348bb:	aas    
  4348bc:	outs   dx,BYTE PTR ds:[esi]
  4348bd:	out    dx,eax
  4348be:	add    BYTE PTR [eax],al
  4348c0:	cmp    edx,DWORD PTR [edi]
  4348c2:	xor    eax,0x85bdffc0
  4348c7:	ins    BYTE PTR es:[edi],dx
  4348c8:	dec    edi
  4348c9:	add    eax,0x52ea8ef9
  4348ce:	adc    BYTE PTR [esi+0x18500556],al
  4348d4:	inc    esi
  4348d5:	imul   ecx,DWORD PTR [eax],0x76
  4348d8:	inc    esi
  4348d9:	add    eax,0xa64ba57d
  4348de:	pop    edx
  4348df:	sbb    ch,BYTE PTR [ebx-0x57]
  4348e2:	test   DWORD PTR [eax+esi*8+0x40],eax
  4348e6:	test   DWORD PTR [ecx],esi
  4348e8:	adc    ch,BYTE PTR [eax]
  4348ea:	test   DWORD PTR [edi],esi
  4348ec:	cmp    ch,BYTE PTR [ebx+0x70]
  4348ef:	inc    esi
  4348f0:	push   ss
  4348f1:	add    eax,0x6b2a1e25
  4348f6:	push   0x68050636
  4348fb:	cmp    DWORD PTR [ebx],esi
  4348fd:	fiadd  WORD PTR [eax]
  4348ff:	xchg   ebx,eax
  434900:	sub    eax,0x477c878f
  434905:	add    eax,0x6b7416f9
  43490a:	inc    eax
  43490b:	push   cs
  43490c:	(bad)  
  43490d:	add    al,0x87
  43490f:	ins    BYTE PTR es:[edi],dx
  434910:	ja     0x434917
  434912:	stc    
  434913:	(bad)  
  434914:	push   ebp
  434915:	dec    ebx
  434916:	pusha  
  434917:	test   bh,0x4
  43491a:	xchg   DWORD PTR [eax+edi*8-0x283eb4aa],ebx
  434921:	jmp    0xde73:0xbe18
  434928:	test   DWORD PTR [ecx+0x640c19ab],esi
  43492e:	jnp    0x4348b9
  434930:	adc    eax,DWORD PTR [eax]
  434932:	scas   eax,DWORD PTR es:[edi]
  434933:	mov    dh,0x0
  434935:	add    BYTE PTR [esi-0x270b5279],al
  43493b:	cmc    
  43493c:	test   BYTE PTR [ebx-0x5a145643],0x9e
  434943:	leave  
  434944:	in     eax,dx
  434945:	call   FWORD PTR [ecx-0x3a74a96b]
  43494b:	xchg   ecx,eax
  43494c:	and    ebp,0x1b
  43494f:	sbb    esp,ecx
  434951:	int3   
  434952:	call   0xcc46:0x8acccc46
  434959:	int3   
  43495a:	xor    eax,DWORD PTR [ecx-0x19357c14]
  434960:	dec    esi
  434961:	mov    esp,DWORD PTR [ebx+0x6]
  434964:	sub    al,0xc0
  434966:	or     eax,0x712d740a
  43496b:	xor    ecx,DWORD PTR [eax]
  43496d:	add    BYTE PTR [esi],dl
  43496f:	loop   0x4348f6
  434971:	jge    0x4349b5
  434973:	repnz pushf 
  434975:	mov    ebx,edx
  434977:	or     DWORD PTR [ecx+0x3d7a5a45],eax
  43497d:	or     BYTE PTR [esi+0x16fff949],ah
  434983:	loop   0x43490a
  434985:	push   ebp
  434986:	inc    edx
  434987:	sbb    DWORD PTR [esi-0x5],esi
  43498a:	add    BYTE PTR [eax],al
  43498c:	sbb    DWORD PTR [esi],eax
  43498e:	jnp    0x434954
  434990:	shl    BYTE PTR [esi-0x5bcc74aa],cl
  434996:	mov    edx,0x457ac608
  43499b:	or     BYTE PTR [edi-0x290006b7],dh
  4349a1:	loope  0x4349ce
  4349a3:	rcr    dh,cl
  4349a5:	xor    ebx,0xc461d9ff
  4349ab:	add    al,0x2f
  4349ad:	mov    ch,0x75
  4349af:	jecxz  0x4349bb
  4349b1:	dec    ecx
  4349b2:	cld    
  4349b3:	push   DWORD PTR [ebx+esi*1-0x48]
  4349b7:	int3   
  4349b8:	imul   ecx,DWORD PTR [ebx-0x48],0xffffffcc
  4349bc:	arpl   dx,bx
  4349be:	jne    0x4349ac
  4349c0:	loope  0x434a41
  4349c2:	outs   dx,DWORD PTR ds:[esi]
  4349c3:	or     BYTE PTR [edx-0x55f790a3],ch
  4349c9:	lds    eax,FWORD PTR [esi+0x48d25a]
  4349cf:	add    BYTE PTR [ebp+ebp*4+0x72f00e4],ch
  4349d6:	std    
  4349d7:	jae    0x434a0a
  4349d9:	aad    0xdc
  4349db:	mov    dl,BYTE PTR [ebp+0x74]
  4349de:	loope  0x434965
  4349e0:	icebp  
  4349e1:	ss jbe 0x434a2e
  4349e4:	and    esi,DWORD PTR [eax+0x4a]
  4349e7:	adc    al,0xdf
  4349e9:	xor    eax,0x20d9cee2
  4349ee:	std    
  4349ef:	clc    
  4349f0:	add    BYTE PTR [eax],al
  4349f2:	inc    edx
  4349f3:	or     eax,edx
  4349f5:	cmp    eax,0x10c0882f
  4349fa:	pop    esp
  4349fb:	mov    DWORD PTR [edx+0x5b],0xcbfd0aed
  434a02:	sti    
  434a03:	fidivr DWORD PTR [eax-0x474d0c34]
  434a09:	int3   
  434a0a:	jmp    0x4349d6
  434a0c:	mov    eax,0x7639e3cc
  434a11:	in     al,dx
  434a12:	lods   al,BYTE PTR ds:[esi]
  434a13:	cli    
  434a14:	lock push eax
  434a16:	sbb    al,0xe4
  434a18:	sub    edi,DWORD PTR [ebx+0x37]
  434a1b:	jae    0x434a14
  434a1d:	mov    ch,BYTE PTR [eax-0x6f]
  434a20:	inc    ecx
  434a21:	test   edx,edx
  434a23:	imul   edi,DWORD PTR [edi+0x39de2f14],0x1ee63c7b
  434a2d:	out    dx,eax
  434a2e:	cmp    esp,esi
  434a30:	pop    esi
  434a31:	cmp    eax,0x6021e90f
  434a36:	sbb    al,0xeb
  434a38:	and    DWORD PTR [ecx+eax*8-0x9194604],ebp
  434a3f:	push   0xd1c948cc
  434a44:	out    0x2c,eax
  434a46:	vcvttpd2dq xmm0,YMMWORD PTR [ebx]
  434a4a:	das    
  434a4b:	jb     0x434a2e
  434a4d:	dec    ebp
  434a4e:	xchg   edx,ebx
  434a50:	(bad)  
  434a51:	out    0x66,al
  434a53:	push   0x1c
  434a55:	or     al,0x0
  434a57:	add    al,dh
  434a59:	push   0x1c
  434a5b:	lock jmp 0x2b6ecb
  434a61:	add    eax,0xfc46f123
  434a66:	gs mov edi,0x6f276333
  434a6c:	and    al,0x9c
  434a6e:	lahf   
  434a6f:	mov    WORD PTR [esi],?
  434a71:	cld    
  434a72:	push   ecx
  434a73:	inc    esi
  434a74:	mov    dl,0x1
  434a76:	lods   al,BYTE PTR ds:[esi]
  434a77:	sar    DWORD PTR [ebx],0xde
  434a7a:	xchg   esi,eax
  434a7b:	pop    ebx
  434a7c:	(bad)  
  434a7d:	fsubrp st(7),st
  434a7f:	add    ecx,DWORD PTR [ecx+0x1ce69add]
  434a85:	(bad)  
  434a86:	or     al,BYTE PTR [edx+0x2f]
  434a89:	addr16 aas 
  434a8b:	xor    bl,0xea
  434a8e:	faddp  st(6),st
  434a90:	jnp    0x434a31
  434a92:	jg     0x434a97
  434a94:	outs   dx,DWORD PTR ds:[esi]
  434a95:	fsubrp st(7),st
  434a97:	pop    ecx
  434a98:	loopne 0x434a2e
  434a9a:	add    dl,BYTE PTR [eax]
  434a9c:	aaa    
  434a9d:	sbb    esp,DWORD PTR [esi+0xa9aa03]
  434aa3:	std    
  434aa4:	inc    esi
  434aa5:	(bad)  
  434aa6:	clc    
  434aa7:	pusha  
  434aa8:	add    eax,0x2b34858e
  434aad:	arpl   WORD PTR [ebp+0x35],cx
  434ab0:	ss (bad) 
  434ab2:	adc    al,0x6a
  434ab4:	outs   dx,DWORD PTR ds:[esi]
  434ab5:	jmp    0x7058:0xa125ea87
  434abc:	add    BYTE PTR [eax],al
  434abe:	push   es
  434abf:	jle    0x434a48
  434ac1:	inc    edx
  434ac2:	packsswb mm1,QWORD PTR [ebp+0xde33a1]
  434ac9:	bnd ret 
  434acb:	outs   dx,DWORD PTR ds:[esi]
  434acc:	pop    ss
  434acd:	cmp    ch,dl
  434acf:	hlt    
  434ad0:	adc    bh,ch
  434ad2:	imul   edi,DWORD PTR [ecx-0x19909600],0x55
  434ad9:	das    
  434ada:	xchg   ebx,eax
  434adb:	push   esi
  434adc:	stc    
  434add:	xchg   BYTE PTR [edx-0x6b],dl
  434ae0:	test   DWORD PTR [eax+ebp*8-0x3816ebc5],eax
  434ae7:	sahf   
  434ae8:	or     al,0x60
  434aea:	(bad)  
  434aeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434aec:	xor    eax,0x85e5bf2e
  434af1:	outs   dx,DWORD PTR ds:[esi]
  434af2:	mov    bh,0xdd
  434af4:	add    cl,ch
  434af6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434af7:	out    0x85,al
  434af9:	pushf  
  434afa:	cmp    al,0xb1
  434afc:	leave  
  434afd:	mov    ebp,0xe6ff1d48
  434b02:	sub    al,0xde
  434b04:	add    BYTE PTR [edx-0x77],ah
  434b07:	data16 add cl,ch
  434b0a:	sub    al,0x79
  434b0c:	loopne 0x434afd
  434b0e:	scas   eax,DWORD PTR es:[edi]
  434b0f:	add    eax,0x792694fe
  434b14:	call   0x7e2aa404
  434b19:	add    DWORD PTR ds:0x900126f,ebp
  434b1f:	(bad)  
  434b21:	inc    DWORD PTR [eax]
  434b23:	add    dh,al
  434b25:	fsubrp st(3),st
  434b27:	push   cs
  434b28:	sbb    edi,ebx
  434b2a:	cli    
  434b2b:	call   esi
  434b2d:	fsubrp st(3),st
  434b2f:	push   es
  434b30:	mov    edi,ebx
  434b32:	add    DWORD PTR [eax],eax
  434b34:	(bad)  
  434b35:	fiadd  WORD PTR [ebx+0xdf2a86]
  434b3b:	add    BYTE PTR [edi],cl
  434b3d:	xchg   BYTE PTR [eax-0x77],dh
  434b40:	in     eax,dx
  434b41:	cdq    
  434b42:	cmp    DWORD PTR [ebx-0x1e],0xd743b76
  434b49:	jno    0x434ad7
  434b4b:	add    BYTE PTR [esi+0xe8b81de],dl
  434b51:	fild   WORD PTR [eax]
  434b53:	add    ch,bh
  434b55:	mov    eax,0x4ad58930
  434b5a:	add    BYTE PTR [eax],al
  434b5c:	push   esi
  434b5d:	jne    0x434b1d
  434b5f:	(bad)  
  434b60:	in     eax,dx
  434b61:	jbe    0x434b63
  434b63:	add    BYTE PTR [esi+0x47],al
  434b66:	add    eax,DWORD PTR [eax]
  434b68:	push   esi
  434b69:	fsubp  st(3),st
  434b6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434b6c:	int    0xb6
  434b6e:	dec    eax
  434b6f:	mov    DWORD PTR [ebp+0x4600001e],edi
  434b75:	jne    0x434bbf
  434b77:	dec    esp
  434b78:	inc    ebp
  434b79:	add    eax,DWORD PTR [ecx+0xdd4a8b]
  434b7f:	add    BYTE PTR [edi-0x6174e77a],bl
  434b85:	jno    0x434b87
  434b87:	add    BYTE PTR [eax],al
  434b89:	add    BYTE PTR [esi],dl
  434b8b:	pop    edi
  434b8c:	icebp  
  434b8d:	or     al,0xbb
  434b8f:	xchg   ebx,eax
  434b90:	xor    edx,edi
  434b92:	fwait
  434b93:	xchg   edi,eax
  434b94:	mov    edi,0xdd3e83
  434b99:	add    BYTE PTR [edi],ch
  434b9b:	push   es
  434b9c:	std    
  434b9d:	jmp    FWORD PTR [edi]
  434b9f:	jl     0x434c16
  434ba1:	cwde   
  434ba2:	das    
  434ba3:	pop    es
  434ba4:	std    
  434ba5:	xchg   BYTE PTR [edi+ebx*2+0x78],ah
  434ba9:	nop
  434baa:	stos   DWORD PTR es:[edi],eax
  434bab:	pop    es
  434bac:	std    
  434bad:	push   DWORD PTR [esi-0x587a9eac]
  434bb3:	addr16 add al,0x0
  434bb6:	das    
  434bb7:	outs   dx,BYTE PTR ds:[esi]
  434bb8:	mov    DWORD PTR [eax-0x7b02f8d1],eax
  434bbe:	mov    edi,0x2f000463
  434bc3:	ins    BYTE PTR es:[edi],dx
  434bc4:	dec    edi
  434bc5:	cld    
  434bc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434bc7:	xchg   esp,eax
  434bc8:	mov    BYTE PTR [eax],al
  434bca:	das    
  434bcb:	pop    es
  434bcc:	adc    cl,dh
  434bce:	sub    al,0x7f
  434bd0:	mov    esp,0xf2072f00
  434bd5:	(bad)  
  434bd6:	push   ebx
  434bd7:	pop    es
  434bd8:	std    
  434bd9:	jmp    FWORD PTR [esi+eax*2+0x7e780cfe]
  434be0:	pop    ecx
  434be1:	or     BYTE PTR [esi-0x378bb54],ah
  434be7:	ret    0x988b
  434bea:	dec    edi
  434beb:	pop    es
  434bec:	std    
  434bed:	inc    DWORD PTR [eax]
  434bef:	add    ah,ah
  434bf1:	jge    0x434b8f
  434bf3:	in     al,0x2f
  434bf5:	pop    es
  434bf6:	std    
  434bf7:	pop    ecx
  434bf8:	cld    
  434bf9:	(bad)  
  434bfa:	cmp    eax,0xc3321285
  434bff:	adc    al,0x2f
  434c01:	test   bl,bl
  434c03:	or     BYTE PTR [edx-0x652ee684],ah
  434c09:	nop
  434c0a:	mov    DWORD PTR [ebx],edx
  434c0c:	daa    
  434c0d:	rol    BYTE PTR [ecx+0x0],1
  434c10:	xchg   ebp,eax
  434c11:	out    dx,eax
  434c12:	mov    ecx,DWORD PTR [ebp+0x53]
  434c15:	fimul  WORD PTR [eax+0x0]
  434c18:	(bad)  
  434c19:	pushf  
  434c1a:	out    0x6b,eax
  434c1c:	inc    edi
  434c1d:	jae    0x434bc6
  434c1f:	add    ebp,DWORD PTR [eax+0x1a90bf9c]
  434c25:	loop   0x434bb4
  434c27:	aam    0x7f
  434c29:	addr16 jle 0x434c5b
  434c2c:	mov    al,0xb5
  434c2e:	pusha  
  434c2f:	pop    edi
  434c30:	aaa    
  434c31:	push   es
  434c32:	push   ebx
  434c34:	mov    eax,0xfad36df8
  434c39:	lock push ebx
  434c3b:	adc    esi,DWORD PTR [edx+0x62cadfa2]
  434c41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434c42:	fild   WORD PTR [ebx]
  434c44:	das    
  434c45:	(bad)  
  434c47:	cmp    dl,BYTE PTR [esi-0x21c94608]
  434c4d:	clc    
  434c4e:	(bad)  
  434c50:	addr16 pushf 
  434c52:	out    0x86,eax
  434c54:	add    BYTE PTR [eax],al
  434c56:	jae    0x434c3d
  434c58:	ds (bad) 
  434c5a:	ins    DWORD PTR es:[edi],dx
  434c5b:	xchg   edi,eax
  434c5c:	cmp    cl,BYTE PTR [edi-0x85a65b4]
  434c62:	pusha  
  434c63:	and    al,0x9b
  434c65:	iret   
  434c66:	imul   ebp,DWORD PTR [ecx],0xffffffb3
  434c69:	iret   
  434c6a:	arpl   WORD PTR [ecx],bp
  434c6c:	stos   DWORD PTR es:[edi],eax
  434c6d:	iret   
  434c6e:	jnp    0x434c99
  434c70:	sbb    al,0x8f
  434c72:	push   ebx
  434c73:	fs and al,0x10
  434c76:	mov    dl,0xaa
  434c78:	out    dx,eax
  434c79:	xor    ecx,ecx
  434c7b:	(bad)  
  434c7d:	add    edx,DWORD PTR [ecx-0x46144722]
  434c83:	stc    
  434c84:	dec    ecx
  434c85:	loop   0x434cfb
  434c87:	sbb    al,0xef
  434c89:	add    esp,ebx
  434c8b:	sub    ch,BYTE PTR [ebx]
  434c8d:	iret   
  434c8e:	sti    
  434c8f:	sub    al,BYTE PTR [eax]
  434c91:	pushf  
  434c92:	mov    cl,0xa
  434c94:	dec    ebp
  434c95:	xchg   esi,eax
  434c96:	test   eax,0x2c2e0873
  434c9b:	fiadd  WORD PTR [eax]
  434c9d:	jmp    0x2f19adce
  434ca2:	xor    eax,0x2ce900de
  434ca7:	pop    esi
  434ca8:	fucomp st(2)
  434caa:	ins    DWORD PTR es:[edi],dx
  434cab:	sbb    eax,0xde2ce902
  434cb0:	add    BYTE PTR [ecx-0x1f],ch
  434cb3:	test   ecx,0xde2ce8
  434cb9:	jmp    0x6b364cbe
  434cbe:	adc    al,0xa6
  434cc0:	sub    al,0xde
  434cc2:	add    cl,ch
  434cc4:	lods   al,BYTE PTR ds:[esi]
  434cc5:	sbb    eax,0xde2cea00
  434cca:	add    BYTE PTR [esi-0x160708db],ch
  434cd0:	sub    al,0x93
  434cd2:	mov    ebp,0x74e269bf
  434cd7:	fbld   TBYTE PTR [edi-0x9]
  434cda:	clc    
  434cdb:	jmp    0xea046b0c
  434ce0:	xor    ebx,esi
  434ce2:	add    cl,ch
  434ce4:	and    DWORD PTR [ecx],edi
  434ce6:	repnz stos DWORD PTR es:[edi],eax
  434ce8:	sub    esi,DWORD PTR [edx+0xc]
  434ceb:	scas   al,BYTE PTR es:[edi]
  434cec:	sub    al,0xde
  434cee:	add    cl,ch
  434cf0:	ins    BYTE PTR es:[edi],dx
  434cf1:	sbb    eax,0xde2ceb00
  434cf6:	add    BYTE PTR [edx+esi*2],cl
  434cf9:	sub    cl,ah
  434cfb:	xor    eax,0x2dcc2a5f
  434d00:	jmp    FWORD PTR [ecx]
  434d02:	int3   
  434d03:	sbb    ch,bl
  434d05:	pop    edx
  434d06:	stc    
  434d07:	aad    0x3c
  434d09:	jns    0x434d04
  434d0b:	add    BYTE PTR [ecx-0x6a],ch
  434d0e:	and    edx,DWORD PTR [ebx-0x60]
  434d11:	mov    BYTE PTR [eax],cl
  434d13:	xor    ebx,DWORD PTR ds:0x4952f988
  434d19:	out    dx,eax
  434d1a:	adc    bh,bl
  434d1c:	(bad)
  434d1f:	lock add BYTE PTR [eax],al
  434d22:	push   ebp
  434d23:	es or  al,0x85
  434d26:	inc    eax
  434d27:	(bad)  
  434d28:	or     al,0x57
  434d2a:	sub    edi,ebp
  434d2c:	mov    eax,0x83da8612
  434d31:	(bad)  
  434d32:	test   al,0xb9
  434d34:	mov    ebx,0x81de9889
  434d39:	ds test al,0xb9
  434d3c:	mov    ebx,0xcc267acc
  434d41:	int3   
  434d42:	fisub  DWORD PTR [esi]
  434d44:	int3   
  434d45:	int3   
  434d46:	arpl   WORD PTR [ecx-0x14],bp
  434d49:	mov    esp,DWORD PTR [ebx-0xe]
  434d4c:	jnp    0x434d3a
  434d4e:	jbe    0x434d04
  434d50:	dec    edi
  434d51:	lea    edx,[ebx+0x1a]
  434d54:	push   eax
  434d55:	lea    eax,[ebx+0x12]
  434d58:	test   DWORD PTR [ebp-0x3e],eax
  434d5b:	addr16 inc ebp
  434d5d:	cld    
  434d5e:	push   ebp
  434d5f:	std    
  434d60:	out    0x31,eax
  434d62:	leave  
  434d63:	std    
  434d64:	test   BYTE PTR [ebx-0x3b8431f5],0x52
  434d6b:	pop    edi
  434d6c:	shl    DWORD PTR [ecx+ecx*2+0x69],0x3d
  434d71:	cld    
  434d72:	rcr    DWORD PTR [edx],cl
  434d74:	je     0x434d8e
  434d76:	int    0xaf
  434d78:	clc    
  434d79:	push   edi
  434d7a:	adc    al,0x69
  434d7c:	dec    ebp
  434d7d:	hlt    
  434d7e:	je     0x434de9
  434d80:	dec    ebp
  434d81:	lock loope 0x434d2f
  434d84:	push   eax
  434d85:	push   ecx
  434d86:	add    BYTE PTR [eax],al
  434d88:	das    
  434d89:	mov    edx,?
  434d8b:	das    
  434d8c:	cmp    eax,0x1784fd47
  434d91:	nop
  434d92:	push   esp
  434d93:	stc    
  434d94:	or     BYTE PTR [ebp-0x5d4ba5c0],dh
  434d9a:	cmp    bh,BYTE PTR [ebp-0x33362c15]
  434da0:	jecxz  0x434d4d
  434da2:	leave  
  434da3:	int3   
  434da4:	sti    
  434da5:	ret    
  434da6:	leave  
  434da7:	int3   
  434da8:	repz xor cl,BYTE PTR [esp+ebp*8+0x738c2d7e]
  434db0:	and    edi,DWORD PTR [eax]
  434db2:	mov    ebp,0x82f37287
  434db7:	repnz cmp esi,DWORD PTR [esi]
  434dba:	mov    WORD PTR [edx],cs
  434dbc:	mov    dl,0xbe
  434dbe:	push   ecx
  434dbf:	and    eax,0x4ff8b2a4
  434dc4:	mov    edx,0xb450e0ba
  434dc9:	ret    0x4df4
  434dcc:	push   DWORD PTR [ebp+0x195b13d9]
  434dd2:	cmp    eax,0x5747b200
  434dd7:	adc    BYTE PTR [eax-0x10f312ee],al
  434ddd:	push   es
  434dde:	jle    0x434dd8
  434de0:	dec    ecx
  434de1:	sar    dh,cl
  434de3:	sub    al,0x6f
  434de5:	outs   dx,BYTE PTR ds:[esi]
  434de6:	inc    edx
  434de7:	add    al,0xb4
  434de9:	ret    0x5ae0
  434dec:	add    BYTE PTR [eax],al
  434dee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434def:	pop    edx
  434df0:	aas    
  434df1:	mov    ebp,0xccd02b63
  434df6:	jnp    0x434e3b
  434df8:	ror    ah,1
  434dfa:	jae    0x434dce
  434dfc:	test   esp,ebp
  434dfe:	fmulp  st(4),st
  434e00:	test   DWORD PTR [ebx+0x23],esi
  434e03:	ficom  WORD PTR [esi]
  434e05:	les    esi,FWORD PTR [eax+0x1d895b9a]
  434e0b:	push   0x18
  434e0d:	mov    esp,DWORD PTR ds:0x4a58205b
  434e13:	imul   ebx,DWORD PTR [edi+esi*8-0x205b9c88],0xf3ac695f
  434e1e:	push   0xffffff8e
  434e20:	cwde   
  434e21:	ficomp WORD PTR [edx+esi*4]
  434e24:	cmc    
  434e25:	inc    ebx
  434e26:	das    
  434e27:	pop    ebx
  434e28:	daa    
  434e29:	pop    ecx
  434e2a:	aas    
  434e2b:	cmc    
  434e2c:	sti    
  434e2d:	repz sub ebx,DWORD PTR [esi-0x44287d19]
  434e34:	jl     0x434e37
  434e36:	sbb    bl,BYTE PTR [esi]
  434e38:	jo     0x434e80
  434e3a:	sub    ebp,DWORD PTR [ecx-0x54]
  434e3d:	fist   WORD PTR [ebp+0x69]
  434e40:	add    al,0x41
  434e42:	jb     0x434e65
  434e44:	mov    bl,0xcf
  434e46:	jnp    0x434e69
  434e48:	stos   DWORD PTR es:[edi],eax
  434e49:	iret   
  434e4a:	jae    0x434e6d
  434e4c:	cmp    al,0x8b
  434e4e:	mov    esp,DWORD PTR [eax-0x45]
  434e51:	or     eax,DWORD PTR [eax]
  434e53:	add    ch,bh
  434e55:	push   0xb0de103c
  434e5a:	mov    edx,0x65f47782
  434e5f:	leave  
  434e60:	jbe    0x434e1a
  434e62:	mov    dl,0x57
  434e64:	in     al,dx
  434e65:	push   0x69761af1
  434e6a:	fisubr DWORD PTR [ecx+0x60]
  434e6d:	popa   
  434e6e:	sub    al,0xe0
  434e70:	dec    DWORD PTR [eax+edi*1+0x6ff5d48d]
  434e77:	pusha  
  434e78:	dec    ebx
  434e79:	hlt    
  434e7a:	ror    DWORD PTR [ebx],cl
  434e7c:	xor    DWORD PTR [esi-0x5f541700],ebx
  434e82:	clc    
  434e83:	push   0x54
  434e85:	div    BYTE PTR [edx+0x9]
  434e88:	mov    ah,0xb7
  434e8a:	adc    dl,bh
  434e8c:	ins    BYTE PTR es:[edi],dx
  434e8d:	fdivp  st(1),st
  434e8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434e91:	push   ds
  434e92:	je     0x434e8c
  434e94:	icebp  
  434e95:	or     eax,0x9530af87
  434e9a:	jge    0x434ecd
  434e9c:	loope  0x434f0f
  434e9e:	(bad)  
  434e9f:	cmp    bl,BYTE PTR ss:[ecx-0x1d]
  434ea3:	mov    ebp,gs
  434ea5:	pop    ecx
  434ea6:	inc    ebx
  434ea7:	and    DWORD PTR [ebp+0x22befc8f],esi
  434ead:	pop    ecx
  434eae:	jecxz  0x434e64
  434eb0:	in     eax,dx
  434eb1:	and    cl,ah
  434eb3:	sbb    eax,0x35cc22e0
  434eb8:	add    BYTE PTR [eax],al
  434eba:	clc    
  434ebb:	and    cl,ah
  434ebd:	sub    eax,0x9ccc22f0
  434ec2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434ec3:	add    dl,BYTE PTR [edx+0x62]
  434ec6:	push   edi
  434ec7:	loop   0x434ef6
  434ec9:	mov    ebx,0x64f926ae
  434ece:	jns    0x434f3a
  434ed0:	(bad)  
  434ed1:	popa   
  434ed2:	mov    eax,ds:0xaff14b5a
  434ed7:	sti    
  434ed8:	(bad)  
  434ed9:	cmp    al,0x87
  434edb:	pushf  
  434edc:	je     0x434ed1
  434ede:	cmc    
  434edf:	outs   dx,BYTE PTR ds:[esi]
  434ee0:	cs jo  0x434f10
  434ee3:	fiadd  WORD PTR [eax]
  434ee5:	jmp    0xe8fb2a71
  434eea:	sub    al,0xde
  434eec:	add    BYTE PTR [edx+0x6cc7c12d],dl
  434ef2:	popf   
  434ef3:	push   0x22
  434ef5:	cmp    BYTE PTR [esi-0x3cffef59],ah
  434efb:	call   0x15f7:0xb0275014
  434f02:	dec    esi
  434f03:	in     eax,dx
  434f04:	cmp    BYTE PTR [eax],al
  434f06:	lds    edx,FWORD PTR [ecx]
  434f08:	div    DWORD PTR [ebp+0x21]
  434f0b:	adc    cl,BYTE PTR ds:0x9f2510
  434f11:	mov    eax,ecx
  434f13:	fidivr DWORD PTR [ebx-0x38]
  434f16:	popa   
  434f17:	mov    ah,0x55
  434f19:	ret    
  434f1a:	add    eax,0x5d561f
  434f1f:	add    BYTE PTR [ebp+0xe],dl
  434f22:	int3   
  434f23:	int3   
  434f24:	fwait
  434f25:	gs in  al,dx
  434f27:	push   esi
  434f28:	cdq    
  434f29:	gs jne 0x434f38
  434f2c:	push   ebp
  434f2d:	and    al,0xf7
  434f2f:	test   DWORD PTR [ecx-0x6a],eax
  434f32:	adc    ecx,DWORD PTR [ebx+0x74c05bc9]
  434f38:	iret   
  434f39:	scas   al,BYTE PTR es:[edi]
  434f3a:	not    DWORD PTR ds:0x38f016
  434f40:	test   DWORD PTR [eax],ecx
  434f42:	dec    edi
  434f43:	push   0xffffffc6
  434f45:	adc    DWORD PTR ds:0x9d211c,ecx
  434f4b:	sbb    edx,0xffffffe6
  434f4e:	push   edi
  434f4f:	mov    ecx,eax
  434f51:	mov    al,0x55
  434f53:	ret    
  434f54:	pop    ebx
  434f55:	gs in  al,dx
  434f57:	mov    esi,DWORD PTR [ebx]
  434f59:	into   
  434f5a:	jnp    0x434f24
  434f5c:	jno    0x434fb9
  434f5e:	shl    DWORD PTR [ebp+edx*4+0x65],0x39
  434f63:	add    al,0x23
  434f65:	sbb    eax,0x2292cccc
  434f6a:	int3   
  434f6b:	int3   
  434f6c:	mov    ds:0x92cccc22,al
  434f71:	and    cl,ah
  434f73:	int3   
  434f74:	das    
  434f75:	mov    dl,0x87
  434f77:	in     al,dx
  434f78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434f79:	mov    ecx,0xa52fc10c
  434f7e:	idiv   BYTE PTR [edi+ebp*1]
  434f81:	cmp    al,0x3d
  434f83:	add    al,0x0
  434f85:	add    BYTE PTR [edi],ch
  434f87:	cmovo  eax,DWORD PTR [eax]
  434f8a:	push   0x45500cc4
  434f8f:	inc    esp
  434f90:	std    
  434f91:	shr    BYTE PTR [edi+0x3],0x9d
  434f95:	push   ss
  434f96:	ins    BYTE PTR es:[edi],dx
  434f97:	pop    es
  434f98:	les    eax,FWORD PTR [eax+0x3f]
  434f9b:	div    edi
  434f9d:	cmp    al,0x2f
  434f9f:	sar    BYTE PTR ds:0x3ffc7f14,0x0
  434fa6:	lock inc edi
  434fa8:	cmc    
  434fa9:	lahf   
  434faa:	adc    al,0x44
  434fac:	std    
  434fad:	shr    BYTE PTR [edi-0x25],0x4
  434fb1:	add    BYTE PTR [edi],ch
  434fb3:	pop    es
  434fb4:	cmp    bh,BYTE PTR [esi-0x3336f8cd]
  434fba:	jecxz  0x434f8f
  434fbc:	leave  
  434fbd:	int3   
  434fbe:	sti    
  434fbf:	stos   DWORD PTR es:[edi],eax
  434fc0:	leave  
  434fc1:	int3   
  434fc2:	repz ret 
  434fc4:	leave  
  434fc5:	int3   
  434fc6:	jmp    0x43501c
  434fc8:	mov    BYTE PTR [ecx+0x13],bl
  434fcb:	dec    ecx
  434fcc:	xor    al,ch
  434fce:	and    bh,BYTE PTR [edx-0x6b4bfffc]
  434fd4:	lock test al,dh
  434fd7:	test   BYTE PTR [ecx-0x2b33d43c],0x72
  434fde:	sub    eax,0x7983d46c
  434fe3:	stos   DWORD PTR es:[edi],eax
  434fe4:	sub    al,0x85
  434fe6:	in     al,dx
  434fe7:	push   ss
  434fe8:	mov    cl,BYTE PTR [ecx+0x0]
  434feb:	add    BYTE PTR [ebx],ah
  434fed:	leave  
  434fee:	xor    al,0x4f
  434ff0:	push   edi
  434ff1:	fidivr WORD PTR [ebx-0x1721d0bb]
  434ff7:	push   edx
  434ff8:	sub    ebx,edi
  434ffa:	push   ss
  434ffb:	hlt    
  434ffc:	push   ecx
  434ffd:	push   0xcdbe2cf3
  435002:	data16 shl BYTE PTR [ebx],0xc7
  435006:	imul   bh
  435008:	mov    ebp,0x27375ed7
  43500d:	addr16 push ss
  43500f:	hlt    
  435010:	xchg   BYTE PTR [ebp+0x21f3c826],dl
  435016:	sub    ecx,eax
  435018:	jmp    0x43503b
  43501a:	mov    esp,0x5e88038e
  43501f:	push   ecx
  435020:	aaa    
  435021:	pop    ebx
  435022:	cmp    DWORD PTR [ebx],ecx
  435024:	stos   DWORD PTR es:[edi],eax
  435025:	sbb    esp,edi
  435027:	add    ebp,DWORD PTR [edi]
  435029:	gs test eax,0xda1dadf7
  43502f:	jg     0x434fcf
  435031:	fucom  st(7)
  435033:	add    edi,DWORD PTR [esi+0x65]
  435036:	lahf   
  435037:	call   FWORD PTR [ebx-0xf]
  43503a:	mov    esp,0xa5d034f
  43503f:	inc    ecx
  435040:	inc    ebx
  435041:	mov    ecx,0x6a68db66
  435046:	lds    eax,FWORD PTR [esi-0x7846b4a]
  43504c:	xor    esi,ecx
  43504e:	or     DWORD PTR [edi+0x0],0xe25d4700
  435055:	push   esp
  435056:	sbb    ecx,ebp
  435058:	push   0xe7dbc1da
  43505d:	add    ebx,DWORD PTR [ebx]
  43505f:	in     eax,0x2a
  435061:	pushf  
  435062:	test   eax,esi
  435064:	rcr    edx,0xe5
  435067:	xchg   edx,eax
  435068:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435069:	(bad)  
  43506a:	js     0x4350cf
  43506c:	add    BYTE PTR [ecx],ch
  43506e:	and    ebx,DWORD PTR [ebp-0x40]
  435071:	xor    eax,0xcd4a5b36
  435076:	sbb    al,0x5b
  435078:	inc    edx
  435079:	rcr    DWORD PTR [edi+esi*8],1
  43507c:	into   
  43507d:	push   0xffffff90
  43507f:	in     eax,0x85
  435081:	aaa    
  435082:	inc    edi
  435083:	pop    ecx
  435084:	ds sub eax,0xec741dae
  43508a:	test   eax,0xa01924a3
  43508f:	fwait
  435090:	sub    BYTE PTR [ecx],bl
  435092:	add    al,0x20
  435094:	jge    0x4350c3
  435096:	xor    al,0x59
  435098:	push   edx
  435099:	std    
  43509a:	test   eax,0xec6c40b0
  43509f:	push   0xb
  4350a1:	bound  esi,QWORD PTR [esi-0x46]
  4350a4:	push   eax
  4350a5:	jb     0x435115
  4350a7:	(bad)  
  4350a8:	push   eax
  4350a9:	ds ret 
  4350ab:	jno    0x435071
  4350ad:	loope  0x435050
  4350af:	mov    WORD PTR [edx+eiz*2],ds
  4350b2:	jb     0x43506a
  4350b4:	sub    DWORD PTR [ecx],0x0
  4350b7:	add    BYTE PTR [eax-0x1d],dh
  4350ba:	test   DWORD PTR [edi-0x507a71c8],ebp
  4350c0:	add    al,0x8e
  4350c2:	stc    
  4350c3:	cmp    BYTE PTR [ecx-0x18df7e6],dh
  4350c9:	rol    DWORD PTR [ebp+0x4a5904a7],1
  4350cf:	int    0xfa
  4350d1:	(bad)  
  4350d2:	stc    
  4350d3:	sbb    BYTE PTR [ecx+0x6b1a081a],dh
  4350d9:	jno    0x4350d4
  4350db:	pop    eax
  4350dc:	es dec ebx
  4350de:	shl    BYTE PTR [esi],0x6e
  4350e1:	pushf  
  4350e2:	sbb    al,0xe9
  4350e4:	sub    al,0xde
  4350e6:	add    BYTE PTR [eax],al
  4350e8:	dec    eax
  4350e9:	mov    ds:0xa7bbe07b,al
  4350ee:	mov    edx,0xf6538604
  4350f3:	call   FWORD PTR [ecx-0x6ba2a9eb]
  4350f9:	fiadd  WORD PTR [eax]
  4350fb:	int3   
  4350fc:	mov    ah,BYTE PTR [esi]
  4350fe:	int3   
  4350ff:	int3   
  435100:	int    0x9b
  435102:	add    al,0x57
  435104:	int    0x11
  435106:	xor    edi,ecx
  435108:	inc    eax
  435109:	fld    DWORD PTR [ebx+0x6d14d3f9]
  43510f:	add    al,0x75
  435111:	sbb    edx,DWORD PTR [edi-0x3d]
  435114:	in     eax,dx
  435115:	sbb    eax,0x62124681
  43511a:	(bad)  
  43511b:	push   esi
  43511c:	add    BYTE PTR [eax],al
  43511e:	(bad)  
  43511f:	test   eax,0xdac6ade8
  435124:	add    BYTE PTR [ebx+0x4183e6a8],cl
  43512a:	push   cs
  43512b:	pop    edx
  43512c:	les    ecx,FWORD PTR [eax*4-0x2e8b06ee]
  435133:	popa   
  435134:	dec    esi
  435135:	xor    cl,al
  435137:	test   eax,0xd4f2e84a
  43513c:	add    BYTE PTR [eax],al
  43513e:	(bad)  
  43513f:	aam    0xf9
  435141:	jge    0x435111
  435143:	arpl   WORD PTR [esi],di
  435145:	xor    BYTE PTR [ebp+0x1d],cl
  435148:	push   edi
  435149:	ret    
  43514a:	push   ebp
  43514b:	adc    bh,dl
  43514d:	je     0x435117
  43514f:	popa   
  435150:	xor    BYTE PTR ds:[ecx+0x7ee850a9],dl
  435157:	mov    esp,0x9d1f0000
  43515c:	xor    BYTE PTR [ecx],al
  43515e:	cmp    bl,bl
  435160:	jbe    0x43516a
  435162:	das    
  435163:	jl     0x435125
  435165:	pop    ecx
  435166:	ins    BYTE PTR es:[edi],dx
  435167:	push   eax
  435168:	ror    esp,0x73
  43516b:	sub    cl,al
  43516d:	int3   
  43516e:	imul   eax,DWORD PTR [eax-0x3f],0xffffffcc
  435172:	arpl   cx,dx
  435174:	mov    ebp,esp
  435176:	(bad)  
  435177:	ror    DWORD PTR [ebx-0x7a50eca7],cl
  43517d:	pop    ebx
  43517e:	pop    ebx
  43517f:	dec    ebx
  435180:	cli    
  435181:	test   BYTE PTR [eax],al
  435183:	add    BYTE PTR [eax+0x7b],dl
  435186:	xor    bh,ah
  435188:	mov    ah,0xc7
  43518a:	sbb    BYTE PTR ds:0x418bf0b8,ah
  435190:	retf   
  435191:	imul   ecx,DWORD PTR [eax+0x2c],0xffffffa2
  435195:	nop
  435196:	or     al,0xf6
  435198:	sub    DWORD PTR [ebp-0x28],edi
  43519b:	and    eax,0x6ec2c11f
  4351a0:	jp     0x435212
  4351a2:	inc    eax
  4351a3:	cmp    BYTE PTR [edx+eax*4+0x1],bh
  4351a7:	sbb    BYTE PTR [esi+0x27],bl
  4351aa:	in     eax,0x22
  4351ac:	outs   dx,DWORD PTR ds:[esi]
  4351ad:	idiv   esp
  4351af:	test   BYTE PTR [eax+0x3b],ah
  4351b2:	mov    WORD PTR [ecx+0x6b],es
  4351b5:	fidiv  WORD PTR [edi]
  4351b7:	jo     0x4351cf
  4351b9:	pop    esp
  4351ba:	popa   
  4351bb:	jge    0x4351a8
  4351bd:	repz and eax,0x17a7b59
  4351c3:	push   eax
  4351c4:	mov    edi,0xc93f9004
  4351c9:	js     0x4351b1
  4351cb:	inc    BYTE PTR ds:0x40453b8
  4351d1:	mov    eax,0xb6fdfeec
  4351d6:	dec    ebx
  4351d7:	bound  esi,QWORD PTR [esi-0x4b18b60a]
  4351dd:	fidiv  WORD PTR [edx]
  4351df:	inc    esp
  4351e0:	mov    dl,0x11
  4351e2:	ins    BYTE PTR es:[edi],dx
  4351e3:	or     al,bh
  4351e5:	dec    ebp
  4351e6:	loop   0x435176
  4351e8:	add    BYTE PTR [eax],al
  4351ea:	dec    eax
  4351eb:	in     al,dx
  4351ec:	gs in  eax,dx
  4351ee:	sub    DWORD PTR [eax-0x46ccad5a],0xb071eba6
  4351f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4351f9:	dec    edx
  4351fa:	int    0x56
  4351fc:	call   0x97249a51
  435201:	mov    ebp,DWORD PTR [esi]
  435203:	popa   
  435204:	pop    ds
  435205:	add    BYTE PTR [edi],ch
  435207:	(bad)  [ebx-0x6c]
  43520a:	das    
  43520b:	fsubrp st(7),st
  43520d:	mov    ah,dh
  43520f:	jno    0x4351f7
  435211:	ss retf 
  435213:	pop    eax
  435214:	test   eax,0x5ea5d603
  435219:	aam    0x17
  43521b:	imul   DWORD PTR [eax-0x29]
  43521e:	fild   QWORD PTR es:[edx-0x2c5b4db1]
  435225:	mov    bl,dh
  435227:	xor    ecx,edi
  435229:	add    ebp,DWORD PTR [edi]
  43522b:	pop    ebx
  43522c:	repz std 
  43522e:	sub    eax,0xffffffe5
  435231:	push   ecx
  435232:	jl     0x43528d
  435234:	xchg   edx,eax
  435235:	stos   BYTE PTR es:[di],al
  435237:	mov    edi,gs
  435239:	mov    dh,BYTE PTR [esi-0x7a]
  43523c:	(bad)  
  43523d:	lods   eax,DWORD PTR ds:[esi]
  43523e:	ss xor al,0xeb
  435241:	repnz mov cl,0xa4
  435244:	scas   eax,DWORD PTR es:[edi]
  435245:	mov    dl,0xcf
  435247:	fcomp  QWORD PTR [ecx+0x48]
  43524a:	cmp    bl,bh
  43524c:	(bad)  
  43524d:	les    eax,FWORD PTR [eax]
  43524f:	add    BYTE PTR [edx],ah
  435251:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435252:	fwait
  435253:	mov    WORD PTR [esi-0x6a],gs
  435256:	fs into 
  435258:	cmp    ecx,DWORD PTR [esi-0x6a079e00]
  43525e:	test   DWORD PTR [esi+0x21416364],ebx
  435264:	xor    BYTE PTR [eax],dh
  435266:	inc    esp
  435267:	stc    
  435268:	arpl   WORD PTR cs:[ecx+0x29],bx
  43526c:	mov    esp,0xef1e84ff
  435271:	mov    edx,0x92380ac2
  435276:	test   DWORD PTR [esi],esi
  435278:	pop    ds
  435279:	gs inc ecx
  43527b:	and    DWORD PTR [ecx],ecx
  43527d:	arpl   WORD PTR [eax+ebp*1],ax
  435280:	or     al,0xfc
  435282:	popa   
  435283:	jo     0x4352dd
  435285:	jns    0x43520c
  435287:	cs jecxz 0x4352ec
  43528a:	inc    ecx
  43528b:	sub    eax,0x211464e9
  435290:	pop    eax
  435291:	push   esi
  435292:	mov    ah,0xdf
  435294:	sub    al,0xde
  435296:	test   DWORD PTR [esi-0x60],esp
  435299:	iret   
  43529a:	add    cl,ch
  43529c:	mov    ch,0x95
  43529e:	je     0x43528a
  4352a0:	hlt    
  4352a1:	lods   al,BYTE PTR ds:[esi]
  4352a2:	jge    0x435304
  4352a4:	sub    eax,0xec64047c
  4352a9:	outs   dx,DWORD PTR ds:[esi]
  4352aa:	mov    al,0x68
  4352ac:	popa   
  4352ad:	jb     0x4352b1
  4352af:	call   0xf5b130e0
  4352b4:	add    BYTE PTR [eax],al
  4352b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4352b7:	int    0x7d
  4352b9:	ret    
  4352ba:	lock jmp 0x4352c6
  4352bd:	ins    BYTE PTR es:[edi],dx
  4352be:	cmc    
  4352bf:	call   0x5df881bc
  4352c4:	sar    bh,0x2c
  4352c7:	fiadd  WORD PTR [ebp-0x404ec752]
  4352cd:	call   0x6d2d:0x95716169
  4352d4:	ins    BYTE PTR es:[edi],dx
  4352d5:	add    ch,ch
  4352d7:	sub    DWORD PTR [ebx+0x2e],ebp
  4352da:	frstor [ecx]
  4352dc:	sbb    ecx,0x17
  4352df:	or     dl,bh
  4352e1:	add    BYTE PTR [esi-0x32fa9121],dl
  4352e7:	loopne 0x4352e2
  4352e9:	inc    DWORD PTR [esi-0x6ac7c0aa]
  4352ef:	sub    DWORD PTR [ebx+0x50],ecx
  4352f2:	outs   dx,BYTE PTR ds:[esi]
  4352f3:	jmp    0x5ec9532f
  4352f8:	les    ecx,FWORD PTR [eax]
  4352fa:	test   DWORD PTR [ecx],esi
  4352fc:	push   esi
  4352fd:	mov    DWORD PTR [ecx],eax
  4352ff:	and    cl,BYTE PTR [esi]
  435301:	add    BYTE PTR [esi-0x5a],dl
  435304:	and    ebp,0xfffffff3
  435307:	sbb    al,0x85
  435309:	xchg   esi,eax
  43530a:	inc    esp
  43530b:	loopne 0x43530d
  43530d:	add    BYTE PTR [ebp+0x1d],bl
  435310:	imul   esp,DWORD PTR ds:0xc6790f6d,0x44
  435317:	loopne 0x435319
  435319:	add    BYTE PTR [eax],al
  43531b:	add    BYTE PTR [ebp+0x17],bl
  43531e:	xor    esi,ecx
  435320:	sub    ch,bl
  435322:	xor    ecx,0xffffff8d
  435325:	mov    eax,ds:0xbc5e0338
  43532a:	dec    ecx
  43532b:	call   0x442786
  435330:	xchg   ebp,eax
  435331:	push   ds
  435332:	or     BYTE PTR [ecx],al
  435334:	cdq    
  435335:	and    DWORD PTR [esi],ecx
  435337:	add    BYTE PTR [esi],al
  435339:	mov    cl,0x53
  43533b:	mov    ebp,DWORD PTR [ebx-0x4d]
  43533e:	mov    ebx,0xec55cbcc
  435343:	push   ecx
  435344:	mov    eax,0x5d086d55
  435349:	lods   al,BYTE PTR ds:[esi]
  43534a:	or     al,0x83
  43534c:	push   es
  43534d:	add    eax,0x3a2fc74f
  435352:	sar    ecx,1
  435354:	shl    ah,0xfc
  435357:	cmp    bh,BYTE PTR [eax+0x3c0004e3]
  43535d:	clc    
  43535e:	test   DWORD PTR [ebx-0x55],eax
  435361:	jg     0x43539d
  435363:	je     0x435311
  435365:	in     al,dx
  435366:	std    
  435367:	jo     0x4353a6
  435369:	jo     0x43533e
  43536b:	call   0xfa175eae
  435370:	mov    ah,0xba
  435372:	push   eax
  435373:	sub    DWORD PTR [edi+0xb],0x79
  435377:	test   al,0x2f
  435379:	cmc    
  43537a:	cld    
  43537b:	(bad)  
  43537c:	jmp    0xb00:0x4a8798
  435383:	cmp    BYTE PTR [edx],0xfc
  435386:	mov    ah,0xd2
  435388:	push   0x4c8f1c1
  43538d:	add    BYTE PTR [edi],ch
  43538f:	cmc    
  435390:	add    DWORD PTR [esi+ebp*1],0x5f3500c9
  435397:	(bad)  
  435398:	adc    eax,0x2b6d5f25
  43539d:	je     0x435345
  43539f:	ret    0x8368
  4353a2:	imul   bh
  4353a4:	sti    
  4353a5:	test   BYTE PTR [ecx+0x2f],bh
  4353a8:	add    bh,cl
  4353aa:	add    al,0xf6
  4353ac:	bswap  esi
  4353ae:	test   edi,esi
  4353b0:	daa    
  4353b1:	mov    edi,0xe82b255f
  4353b6:	(bad)  
  4353b7:	into   
  4353b8:	add    al,0x0
  4353ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4353bb:	xor    DWORD PTR [ecx-0x7b],esp
  4353be:	xor    DWORD PTR [ecx+edi*4+0x10],esi
  4353c2:	mov    dh,0x41
  4353c4:	xor    eax,ebp
  4353c6:	inc    esi
  4353c7:	mov    ebx,0xdea4f9d4
  4353cc:	stc    
  4353cd:	sbb    BYTE PTR [ecx-0x32],0xe7
  4353d1:	dec    edi
  4353d2:	jb     0x435429
  4353d4:	mov    eax,ds:0x7b90aa37
  4353d9:	mov    BYTE PTR [ebp-0x46],ch
  4353dc:	into   
  4353dd:	mov    dl,0x4
  4353df:	loopne 0x4353c9
  4353e1:	add    ebp,DWORD PTR [edi]
  4353e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4353e4:	pop    ss
  4353e5:	add    al,0x0
  4353e7:	add    BYTE PTR [ecx],ah
  4353e9:	addr16 jmp 0x2e4c:0xb06396d3
  4353f1:	push   ebp
  4353f2:	and    DWORD PTR [edx+ecx*4],ecx
  4353f5:	push   ds
  4353f6:	mov    esi,0x3d1e5206
  4353fb:	add    al,0xe9
  4353fd:	lea    ebx,[ecx]
  4353ff:	fadd   QWORD PTR [ecx]
  435401:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435402:	out    0x3,eax
  435404:	mov    dl,0x98
  435406:	inc    ebx
  435407:	jg     0x43542e
  435409:	pop    ebp
  43540a:	mov    ds:0x4398b1f4,eax
  43540f:	fsub   QWORD PTR [ecx-0x1b]
  435412:	cdq    
  435413:	shl    DWORD PTR [edx+0x1f4e66d0],cl
  435419:	(bad)  
  43541b:	mov    ch,ch
  43541d:	call   0xad1a27a3
  435422:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435423:	xor    dh,BYTE PTR [edx-0x5538ebfe]
  435429:	mov    ds:0x71ef88db,al
  43542e:	pop    eax
  43542f:	retf   
  435430:	lods   eax,DWORD PTR ds:[esi]
  435431:	xor    ecx,esi
  435433:	add    ebp,DWORD PTR [edi]
  435435:	fsubrp st(7),st
  435437:	add    ebp,DWORD PTR [edi]
  435439:	pop    ebp
  43543a:	dec    edi
  43543b:	or     BYTE PTR [esp+ebx*4+0x6e],bh
  43543f:	inc    edx
  435440:	push   ebx
  435441:	arpl   WORD PTR [eax],si
  435443:	dec    esp
  435444:	cs push ebp
  435446:	add    BYTE PTR [edi+0x42bfeb34],ch
  43544c:	add    BYTE PTR [eax],al
  43544e:	xor    DWORD PTR [ebx+0x7a1572c0],edi
  435454:	callw  0x6d81
  435458:	dec    esi
  435459:	mov    ecx,0xd016f606
  43545e:	sub    al,0xde
  435460:	test   DWORD PTR [edi+0x6a3a6350],ebp
  435466:	ja     0x435435
  435468:	xchg   DWORD PTR [edi-0xd8909b0],ebp
  43546e:	jge    0x435456
  435470:	test   bh,dh
  435472:	cmp    DWORD PTR [esi],ebx
  435474:	aaa    
  435475:	sub    BYTE PTR [ebx+0x6c7c0985],al
  43547b:	cmp    DWORD PTR [ebp-0x57],0x32
  43547f:	arpl   bx,sp
  435481:	and    al,0x68
  435483:	bound  eax,QWORD PTR [edx+0x4d]
  435486:	call   0x6b35b116
  43548b:	arpl   WORD PTR [ebx],si
  43548d:	mov    fs:0xee720165,al
  435493:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435494:	std    
  435495:	mov    dl,0x69
  435497:	out    0x2d,eax
  435499:	mov    al,ds:0xab25dde2
  43549e:	cld    
  43549f:	cwde   
  4354a0:	push   edx
  4354a1:	xchg   ecx,eax
  4354a2:	jns    0x435449
  4354a4:	add    cl,ch
  4354a6:	test   eax,0x3e626c8c
  4354ab:	imul   eax,esp,0x5c8c9bd9
  4354b1:	push   ecx
  4354b2:	add    BYTE PTR [eax],al
  4354b4:	cmp    ecx,esi
  4354b6:	clc    
  4354b7:	pop    esi
  4354b8:	mov    esp,ebx
  4354ba:	jge    0x43548d
  4354bc:	cld    
  4354bd:	out    0x9,eax
  4354bf:	gs xchg ebx,eax
  4354c1:	in     eax,0xf8
  4354c3:	add    BYTE PTR [ecx-0x54],ch
  4354c6:	mov    eax,0xdbd601
  4354cb:	pop    esi
  4354cc:	dec    ebp
  4354cd:	not    BYTE PTR [ebx+eax*8+0x3a]
  4354d1:	daa    
  4354d2:	int3   
  4354d3:	int3   
  4354d4:	sbb    ah,BYTE PTR [edi]
  4354d6:	int3   
  4354d7:	int3   
  4354d8:	sbb    ah,BYTE PTR [edi]
  4354da:	int3   
  4354db:	int3   
  4354dc:	sub    DWORD PTR [eax-0x14],0x53
  4354e0:	sub    BYTE PTR [eax+0x6d],0x8
  4354e4:	xchg   ecx,eax
  4354e5:	pop    eax
  4354e6:	stc    
  4354e7:	call   DWORD PTR [esi+0xdff83db]
  4354ed:	xchg   ebp,eax
  4354ee:	je     0x43552d
  4354f0:	nop
  4354f1:	loop   0x4354f3
  4354f3:	add    ch,dh
  4354f5:	rol    BYTE PTR [ebx-0x3a2a102],0xff
  4354fc:	pop    ecx
  4354fd:	imul   edi,DWORD PTR [esi],0xf9d42b74
  435503:	inc    DWORD PTR [esi+0x2b830292]
  435509:	fiadd  WORD PTR [eax]
  43550b:	psrld  mm5,QWORD PTR [ecx+0x6046fffa]
  435512:	ror    BYTE PTR [edi],0xc2
  435515:	xchg   esp,eax
  435516:	cli    
  435517:	inc    DWORD PTR [eax]
  435519:	add    BYTE PTR [esi+0x62],dl
  43551c:	clc    
  43551d:	add    esp,DWORD PTR [esi+edi*2]
  435520:	add    DWORD PTR [esi+0xe],0x69
  435524:	inc    esi
  435525:	pop    eax
  435526:	mov    ebp,0x288b6ca3
  43552b:	iret   
  43552c:	retf   
  43552d:	loopne 0x4354bc
  43552f:	pushf  
  435530:	cmp    BYTE PTR [edi],cl
  435532:	pusha  
  435533:	sahf   
  435534:	or     DWORD PTR [edx],eax
  435536:	xor    eax,0xc2461b1b
  43553b:	imul   eax,DWORD PTR [esi+0x44],0x85cad42f
  435542:	popa   
  435543:	xor    eax,0x17674276
  435548:	jl     0x43554e
  43554a:	outs   dx,BYTE PTR ds:[esi]
  43554b:	pop    ds
  43554c:	jbe    0x435552
  43554e:	gs jl  0x43558f
  435551:	ins    BYTE PTR es:[edi],dx
  435552:	or     al,0x47
  435554:	adc    DWORD PTR [ebp-0x4effca87],eax
  43555a:	xor    ebp,DWORD PTR [ebx]
  43555c:	jl     0x4355a8
  43555e:	ja     0x4355dc
  435560:	ss inc esp
  435562:	push   ecx
  435563:	jl     0x4355b3
  435565:	ins    BYTE PTR es:[edi],dx
  435566:	dec    ecx
  435567:	outs   dx,BYTE PTR ds:[esi]
  435568:	adc    BYTE PTR [esi-0x4e],al
  43556b:	mov    ah,0x58
  43556d:	sbb    DWORD PTR [esi+edi*1+0x29018559],esi
  435574:	sbb    al,0xc8
  435576:	scas   al,BYTE PTR es:[edi]
  435577:	or     al,BYTE PTR [edi]
  435579:	dec    DWORD PTR [eax+0xc60bf4]
  43557f:	add    al,bh
  435581:	add    DWORD PTR ds:0x95c8752,ebp
  435587:	add    BYTE PTR [edi],ch
  435589:	je     0x43554c
  43558b:	or     BYTE PTR [esi-0x1e829b42],dh
  435591:	xchg   esp,eax
  435592:	add    ecx,DWORD PTR [ecx]
  435594:	lods   eax,DWORD PTR ds:[esi]
  435595:	loope  0x435594
  435597:	jmp    FWORD PTR [edi]
  435599:	xlat   BYTE PTR ds:[ebx]
  43559a:	jnp    0x4355e6
  43559c:	fcmovnu st,st(6)
  43559e:	sbb    ecx,DWORD PTR [edx-0x41]
  4355a1:	jnp    0x43561a
  4355a3:	mov    al,ds:0x85fcf521
  4355a8:	jmp    0xd3fdd181
  4355ad:	or     eax,0xa430fffd
  4355b2:	mov    dh,0x62
  4355b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4355b5:	add    edi,DWORD PTR [eax]
  4355b7:	test   DWORD PTR [ecx+0x8f97fde],edi
  4355bd:	out    0x6d,al
  4355bf:	xchg   ecx,eax
  4355c0:	iret   
  4355c1:	int3   
  4355c2:	out    0x3,eax
  4355c4:	dec    ebx
  4355c5:	loope  0x435626
  4355c7:	pop    es
  4355c8:	cmp    edi,ebx
  4355ca:	popa   
  4355cb:	mov    ds:0xe7de3d,eax
  4355d0:	popf   
  4355d1:	push   ds
  4355d2:	loop   0x43556d
  4355d4:	mov    edi,0x2f439cee
  4355d9:	jl     0x4355c3
  4355db:	outs   dx,DWORD PTR ds:[esi]
  4355dc:	popf   
  4355dd:	inc    esi
  4355de:	jecxz  0x4355e3
  4355e0:	das    
  4355e1:	push   ebx
  4355e2:	imul   edi,DWORD PTR [ecx+0x0],0x0
  4355e6:	xchg   edi,eax
  4355e7:	(bad)  
  4355e9:	add    esi,DWORD PTR [eax]
  4355eb:	pop    ds
  4355ec:	add    dl,al
  4355ee:	das    
  4355ef:	fidivr WORD PTR [edi]
  4355f1:	add    esp,DWORD PTR [eax+0x6269e6e5]
  4355f7:	push   ss
  4355f8:	jbe    0x4355f9
  4355fa:	daa    
  4355fb:	sub    eax,0x5fbeffb0
  435600:	xlat   BYTE PTR ds:[ebx]
  435601:	cmp    al,0xef
  435603:	fnstsw WORD PTR [esi-0x47d2d9ff]
  435609:	lds    ecx,FWORD PTR [ecx-0x166a0d23]
  43560f:	in     eax,dx
  435610:	das    
  435611:	inc    esp
  435612:	das    
  435613:	jl     0x4355fd
  435615:	outs   dx,DWORD PTR ds:[esi]
  435616:	lods   eax,DWORD PTR ds:[esi]
  435617:	push   esi
  435618:	loopne 0x43561d
  43561a:	das    
  43561b:	pop    ecx
  43561c:	imul   esi,DWORD PTR [eax+0x1d],0x6812e7de
  435623:	mov    ecx,0x3ead0da6
  435628:	icebp  
  435629:	add    ebp,DWORD PTR [edi]
  43562b:	pop    ecx
  43562c:	sub    DWORD PTR [esi+esi*1+0x4a],esp
  435630:	test   al,0x1d
  435632:	ins    DWORD PTR es:[edi],dx
  435633:	push   0x0
  435635:	(bad)  
  435636:	jmp    0x8060:0x25f54a5a
  43563d:	jmp    0xb6b5346e
  435642:	lods   eax,DWORD PTR ds:[esi]
  435643:	in     al,dx
  435644:	cld    
  435645:	fidivr DWORD PTR [esi]
  435647:	xchg   esi,eax
  435648:	xchg   DWORD PTR [edi-0x1a740000],esp
  43564e:	pop    edx
  43564f:	aad    0x65
  435651:	nop
  435652:	ins    BYTE PTR es:[edi],dx
  435653:	jb     0x435666
  435655:	xchg   esi,eax
  435656:	test   DWORD PTR [edi-0xebda4fc],esp
  43565c:	shr    DWORD PTR [esi],1
  43565e:	inc    esp
  43565f:	jmp    0x43568f
  435661:	adc    ebx,ebp
  435663:	jb     0x435666
  435665:	call   0x6254:0xa00c2a2d
  43566c:	add    DWORD PTR [edx-0x289b5079],ebp
  435672:	mov    cl,0xe5
  435674:	jmp    0x435638
  435676:	(bad)  
  435677:	bound  esp,QWORD PTR [ecx-0x62]
  43567a:	bound  esp,QWORD PTR [eax+0x27]
  43567d:	mov    WORD PTR [ecx],cs
  43567f:	sahf   
  435680:	bnd jno 0x435608
  435683:	das    
  435684:	inc    ebx
  435685:	pop    ebx
  435686:	push   edx
  435687:	sub    eax,0x23045d11
  43568c:	pusha  
  43568d:	xchg   edi,eax
  43568e:	pusha  
  43568f:	xor    BYTE PTR [ebx],0xde
  435692:	add    cl,ch
  435694:	pop    es
  435695:	das    
  435696:	out    0x6a,eax
  435698:	sub    al,0xde
  43569a:	add    al,ch
  43569c:	jmp    0x52e3:0x3b3f8571
  4356a3:	or     eax,0xae5897c4
  4356a8:	bnd jge 0x4356ab
  4356ab:	jmp    0x4d34dc
  4356b0:	add    BYTE PTR [eax],al
  4356b2:	push   0x5e4681dd
  4356b7:	das    
  4356b8:	loopne 0x4356c9
  4356ba:	pop    eax
  4356bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4356bc:	stc    
  4356bd:	xor    al,bh
  4356bf:	sar    BYTE PTR [esi],0x54
  4356c2:	jg     0x43565d
  4356c4:	dec    eax
  4356c5:	jmp    0x43568a
  4356c7:	push   0x998d6c4e
  4356cc:	cmp    BYTE PTR [edx-0x717c21f6],cl
  4356d2:	mov    dh,0xe9
  4356d4:	clc    
  4356d5:	call   FWORD PTR [ebp+0x69]
  4356d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4356d9:	push   ss
  4356da:	(bad)  
  4356db:	fild   QWORD PTR [ebx]
  4356dd:	(bad)  
  4356de:	call   0x3d8d9345
  4356e3:	imul   esp,DWORD PTR [eax-0x7c2029ea],0xf8e93e8e
  4356ed:	dec    DWORD PTR [esi-0x25]
  4356f0:	or     DWORD PTR [ecx],eax
  4356f2:	adc    BYTE PTR [edi],bh
  4356f4:	push   cs
  4356f5:	add    BYTE PTR [esi-0x573f511c],dl
  4356fb:	ficomp DWORD PTR [esi+eax*4+0xdefa]
  435702:	std    
  435703:	arpl   WORD PTR [esi+edx*1-0x7b7a206a],bx
  43570a:	or     BYTE PTR [esi+0x0],ah
  43570d:	add    BYTE PTR [esi-0x62d43532],al
  435713:	xlat   BYTE PTR ds:[ebx]
  435714:	xchg   BYTE PTR [eax-0x20880000],ah
  43571a:	add    BYTE PTR [edi],cl
  43571c:	cli    
  43571d:	pop    ds
  43571e:	test   DWORD PTR [esi+0x1a],0xf001f265
  435725:	jge    0x4357a4
  435727:	call   DWORD PTR [ecx+0x5b]
  43572a:	(bad)  
  43572b:	std    
  43572c:	das    
  43572d:	dec    esp
  43572e:	retf   
  43572f:	test   ecx,esp
  435731:	mov    al,0x81
  435733:	(bad)  
  435734:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435735:	hlt    
  435736:	ja     0x43577a
  435738:	addr16 clc 
  43573a:	mov    ebp,0xbd282de5
  43573f:	test   DWORD PTR [ecx-0x1f],edi
  435742:	push   esi
  435743:	add    BYTE PTR [esi+eiz*4+0x2e],dl
  435747:	push   eax
  435748:	pop    ecx
  435749:	lea    ecx,[ebx]
  43574b:	xor    ch,BYTE PTR [edi]
  43574d:	cmc    
  43574e:	ja     0x435792
  435750:	add    DWORD PTR [eax+0x4f37d0a],0x76
  435757:	inc    edx
  435758:	or     DWORD PTR [ebp-0x54270795],0x77
  43575f:	or     ch,BYTE PTR [ebp+ebp*1+0x7239ffed]
  435766:	outs   dx,DWORD PTR ds:[esi]
  435767:	sti    
  435768:	rol    bl,0x2b
  43576b:	pop    edx
  43576c:	cld    
  43576d:	mov    ah,0x27
  43576f:	pop    ebx
  435770:	in     al,dx
  435771:	jg     0x4357b5
  435773:	ins    BYTE PTR es:[edi],dx
  435774:	mov    ah,0xac
  435776:	jg     0x435770
  435778:	sub    eax,0xb70267
  43577d:	add    BYTE PTR ds:0xacfffcf5,ch
  435783:	jno    0x43577e
  435785:	add    esi,DWORD PTR [esi+0x2f12916a]
  43578b:	cmc    
  43578c:	push   ecx
  43578d:	cmp    esp,DWORD PTR [edx+eiz*4-0x73a27cd0]
  435794:	add    eax,DWORD PTR [ebp-0x3a002307]
  43579a:	push   esp
  43579b:	test   BYTE PTR [edi],0xc7
  43579e:	cld    
  43579f:	fistp  QWORD PTR [esi-0x233501b0]
  4357a5:	loop   0x4357a9
  4357a7:	fsubrp st(7),st
  4357a9:	add    ebp,DWORD PTR [edx-0xa86f475]
  4357af:	pop    esi
  4357b0:	stos   DWORD PTR es:[edi],eax
  4357b1:	repz test eax,0x6ddc2b8b
  4357b7:	out    0x81,al
  4357b9:	int3   
  4357ba:	stos   BYTE PTR es:[edi],al
  4357bb:	fdiv   DWORD PTR [esi-0x28699f46]
  4357c1:	sub    al,0x26
  4357c3:	dec    ebx
  4357c4:	test   al,0x2d
  4357c6:	bound  edx,QWORD PTR [ebx-0x58]
  4357c9:	add    DWORD PTR [ebp+ebx*1+0x66],esp
  4357cd:	(bad)  
  4357ce:	iret   
  4357cf:	enter  0x3e7,0x2f
  4357d3:	push   0xf
  4357d5:	jns    0x435854
  4357d7:	sub    BYTE PTR [ecx+esi*4+0x67],0xd9
  4357dc:	outs   dx,BYTE PTR ds:[esi]
  4357dd:	cmp    eax,0xd81ddd17
  4357e2:	add    BYTE PTR [eax],al
  4357e4:	shr    DWORD PTR [eax+eiz*1+0x25b52f59],1
  4357eb:	xor    esi,DWORD PTR [eax-0x78]
  4357ee:	(bad)  
  4357f0:	cld    
  4357f1:	fucom  st(7)
  4357f3:	js     0x435852
  4357f5:	jb     0x435855
  4357f7:	or     eax,0x7ad71a2a
  4357fc:	std    
  4357fd:	or     DWORD PTR [edi],0xf1e19ecc
  435803:	ja     0x435832
  435805:	pop    ebp
  435806:	outs   dx,DWORD PTR ds:[esi]
  435807:	repz mov al,dl
  43580a:	imul   esp,DWORD PTR [esi+eax*4-0x1f],0xffffffd9
  43580f:	sub    edx,ebp
  435811:	push   esp
  435812:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435813:	das    
  435814:	aam    0x1c
  435816:	fwait
  435817:	mov    eax,0xb8b3127b
  43581c:	jae    0x435830
  43581e:	stos   DWORD PTR es:[edi],eax
  43581f:	mov    eax,0x1c00126b
  435824:	shl    cl,1
  435826:	dec    esp
  435827:	pop    ss
  435828:	enter  0x86c,0x3e
  43582c:	mov    al,0xe1
  43582e:	clc    
  43582f:	jmp    0x633cb360
  435834:	cmc    
  435835:	imul   edi,DWORD PTR [edi-0x70],0xe9f8e12d
  43583c:	jns    0x4357f8
  43583e:	test   DWORD PTR [edi-0x5],edi
  435841:	xor    edi,0x76
  435844:	in     al,0x5a
  435846:	dec    edx
  435847:	cmc    
  435848:	add    BYTE PTR [eax],al
  43584a:	mov    bl,0xe8
  43584c:	add    eax,ebp
  43584e:	sub    al,0xde
  435850:	ins    DWORD PTR es:[edi],dx
  435851:	repz mov cl,0x64
  435854:	or     al,0xe9
  435856:	cmc    
  435857:	pop    esp
  435858:	sub    al,0xeb
  43585a:	sub    al,0xde
  43585c:	xor    DWORD PTR [eax],0xffffffe4
  43585f:	pop    esp
  435860:	shr    bl,cl
  435862:	sub    al,0xde
  435864:	sub    eax,0xfce8a829
  435869:	mov    edx,0xb1425b0b
  43586e:	inc    ecx
  43586f:	xchg   esp,eax
  435870:	pop    eax
  435871:	jb     0x435870
  435873:	jno    0x4357fa
  435875:	xchg   edi,eax
  435876:	and    BYTE PTR [ebx],dl
  435878:	loopne 0x4358dc
  43587a:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  43587c:	or     DWORD PTR [edi],edi
  43587e:	addr16 sar esi,1
  435881:	mov    ecx,0x9d42c273
  435886:	adc    DWORD PTR [esp+eax*2+0x525a7aca],edx
  43588d:	sub    DWORD PTR [edx],eax
  43588f:	pushf  
  435890:	dec    eax
  435891:	inc    edi
  435892:	clc    
  435893:	fnstcw WORD PTR [edi]
  435895:	dec    edi
  435896:	repnz fnstenv [esi+0x62]
  43589a:	es jb  0x4358ba
  43589d:	add    BYTE PTR [eax],bl
  43589f:	into   
  4358a0:	adc    DWORD PTR [esi+0x6],0xffffffe5
  4358a4:	scas   eax,DWORD PTR es:[edi]
  4358a5:	add    al,0xc
  4358a7:	popa   
  4358a8:	inc    esi
  4358a9:	dec    eax
  4358aa:	int    0xae
  4358ac:	inc    esp
  4358ad:	data16 add BYTE PTR [eax],al
  4358b0:	mov    ebp,0xbf666c96
  4358b5:	fadd   DWORD PTR [edx-0x75]
  4358b8:	or     BYTE PTR [edx-0x7d],bh
  4358bb:	push   esi
  4358bc:	inc    esi
  4358bd:	push   ebx
  4358be:	cli    
  4358bf:	call   DWORD PTR [esi]
  4358c1:	fadd   QWORD PTR [ecx+0x4e612e4e]
  4358c7:	fs (bad) 
  4358c9:	xchg   ebp,eax
  4358ca:	pusha  
  4358cb:	test   esi,edx
  4358cd:	pop    DWORD PTR [edx+0x3b]
  4358d0:	js     0x43592d
  4358d2:	add    BYTE PTR [eax],al
  4358d4:	push   es
  4358d5:	mov    DWORD PTR [edx],edi
  4358d7:	mov    esi,DWORD PTR [eax-0x15b17c79]
  4358dd:	rcl    al,0x81
  4358e0:	jg     0x4358bf
  4358e2:	stc    
  4358e3:	inc    esi
  4358e5:	ror    cl,1
  4358e7:	ja     0x4358bf
  4358e9:	stos   DWORD PTR es:[edi],eax
  4358ea:	dec    esi
  4358eb:	call   0x442b8e
  4358f0:	push   ebp
  4358f1:	pop    ds
  4358f2:	or     BYTE PTR [ecx-0x7848470],cl
  4358f8:	ret    
  4358f9:	mov    WORD PTR [esi],ss
  4358fb:	cmp    DWORD PTR [eax],ebx
  4358fd:	arpl   WORD PTR [eax],ax
  4358ff:	add    BYTE PTR [esi+0x2e830b8f],dl
  435905:	fsubr  DWORD PTR [ebp+0x11]
  435908:	or     eax,0xa02b6cad
  43590d:	mov    edi,DWORD PTR [ecx-0x6]
  435910:	xchg   esi,eax
  435911:	jmp    0x43590b
  435913:	inc    DWORD PTR [eax]
  435915:	add    al,ah
  435917:	fadd   DWORD PTR [ecx+0x7b952f7e]
  43591d:	inc    edx
  43591e:	out    0x73,eax
  435920:	int3   
  435921:	std    
  435922:	xor    DWORD PTR [ebx+0x51],esi
  435925:	call   FWORD PTR [eax-0xb]
  435928:	add    eax,0x7ff7cf42
  43592d:	fs cs cmc 
  435930:	cld    
  435931:	popa   
  435932:	mov    ah,0x9f
  435934:	pop    eax
  435935:	bound  eax,QWORD PTR [edi+eiz*4]
  435938:	pusha  
  435939:	test   ecx,ebp
  43593b:	fdivr  DWORD PTR [ebx+0x4a]
  43593e:	mov    ds:0xb4cd1bd7,eax
  435943:	jbe    0x4358e5
  435945:	adc    ch,BYTE PTR [edi]
  435947:	cmc    
  435948:	jno    0x4359c6
  43594a:	daa    
  43594b:	push   0x7a
  43594d:	inc    edx
  43594e:	xchg   DWORD PTR [eax],eax
  435950:	nop
  435951:	(bad)  
  435952:	mov    ah,0x5e
  435954:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435955:	adc    ch,BYTE PTR [edi]
  435957:	cmc    
  435958:	pop    esi
  435959:	xchg   DWORD PTR [ebx],esp
  43595b:	and    al,0x7c
  43595d:	call   0x7eb4:0xfffce68f
  435964:	ins    BYTE PTR es:[edi],dx
  435965:	adc    ch,BYTE PTR [edi]
  435967:	cmc    
  435968:	adc    ch,bh
  43596a:	test   al,0xf0
  43596c:	jmp    0xc0ff:0x8bb48108
  435973:	hlt    
  435974:	cld    
  435975:	(bad)  
  435976:	call   0xb000:0xffee94
  43597d:	test   DWORD PTR [esi+0x3d3a9f90],0x60f60900
  435987:	xchg   edx,eax
  435988:	mov    bh,0xf8
  43598a:	cld    
  43598b:	jmp    DWORD PTR [edx+0x33986e70]
  435991:	cmc    
  435992:	cld    
  435993:	jle    0x435a03
  435995:	fucom  st(2)
  435997:	enter  0xde2f,0x9f
  43599b:	add    esi,DWORD PTR [eax-0x22]
  43599e:	out    0x61,al
  4359a0:	and    dl,BYTE PTR [esi]
  4359a2:	push   esi
  4359a3:	clc    
  4359a4:	aaa    
  4359a5:	daa    
  4359a6:	mov    al,0xf8
  4359a8:	sahf   
  4359a9:	pop    esp
  4359aa:	mov    bh,0x3b
  4359ac:	out    dx,eax
  4359ad:	fnstsw WORD PTR [esi-0x67d8c80a]
  4359b3:	ret    0xd649
  4359b6:	repnz xchg ecx,eax
  4359b8:	mov    ecx,0x2f442fed
  4359bd:	js     0x4359a7
  4359bf:	lods   eax,DWORD PTR ds:[si]
  4359c1:	data16 loope 0x4359c7
  4359c4:	das    
  4359c5:	imul   ebp,DWORD PTR [eax+0x67],0x1ce9de3d
  4359cc:	rcl    BYTE PTR [ecx],cl
  4359ce:	mov    eax,ds:0xd07ead0a
  4359d3:	add    ebp,DWORD PTR [edi]
  4359d5:	imul   ebp,DWORD PTR [eax+0x2972264b],0x3a09e27c
  4359df:	add    al,BYTE PTR [eax]
  4359e1:	add    BYTE PTR [ebp+0x52],bh
  4359e4:	imul   eax,ebx,0xffffffe5
  4359e7:	addr16 test al,0x4b
  4359ea:	mov    al,0x2b
  4359ec:	bnd jbe 0x435a57
  4359ef:	fsubp  st(0),st
  4359f1:	sub    DWORD PTR [ebx+0x69],ebx
  4359f4:	nop
  4359f5:	push   edi
  4359f6:	cli    
  4359f7:	mov    ah,0x97
  4359f9:	or     DWORD PTR [edx+0x657cb224],esi
  4359ff:	arpl   WORD PTR ss:[ecx],bp
  435a02:	arpl   WORD PTR [ecx+0x15f57c0a],si
  435a08:	out    dx,eax
  435a09:	xchg   ecx,eax
  435a0a:	jmp    0x4359fa
  435a0c:	jmp    0x435a22
  435a0e:	rol    BYTE PTR [ecx],1
  435a10:	add    DWORD PTR [edi-0x5ab89ca8],ebp
  435a16:	add    eax,0xa9f64920
  435a1b:	loop   0x435a5e
  435a1d:	or     al,ch
  435a1f:	arpl   WORD PTR [edi+0x29],cx
  435a22:	or     DWORD PTR [ebp-0x3],esp
  435a25:	xor    bl,BYTE PTR [eax-0x72]
  435a28:	aas    
  435a29:	push   ebp
  435a2a:	aam    0x27
  435a2c:	dec    ecx
  435a2d:	jb     0x435a30
  435a2f:	and    bl,BYTE PTR [edi+0x60]
  435a32:	das    
  435a33:	and    al,0xbc
  435a35:	call   0xa6443866
  435a3a:	add    DWORD PTR [esi+0x6e],edx
  435a3d:	pop    edx
  435a3e:	sub    bh,BYTE PTR [eax]
  435a40:	gs push 0x76
  435a43:	out    0x0,al
  435a45:	bound  eax,QWORD PTR [eax]
  435a47:	add    BYTE PTR [ecx+0x4a],ah
  435a4a:	shr    BYTE PTR [edi],0x7b
  435a4d:	fiadd  WORD PTR [eax]
  435a4f:	jmp    0x982f980
  435a54:	sub    eax,0xf9e900de
  435a59:	pusha  
  435a5a:	fisub  WORD PTR [eax+esi*8-0x2a]
  435a5e:	mov    WORD PTR [edi-0x2e2c9eb8],?
  435a64:	jmp    0x2c54a1ca
  435a69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435a6a:	in     al,dx
  435a6b:	jmp    0x435aaa
  435a6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435a6e:	imul   ebp,ecx,0x35
  435a71:	pushf  
  435a72:	push   ecx
  435a73:	cwde   
  435a74:	sbb    al,dh
  435a76:	sub    bh,dl
  435a78:	sub    al,0xde
  435a7a:	mov    esi,DWORD PTR [edi+0x6a376360]
  435a80:	out    dx,eax
  435a81:	in     eax,dx
  435a82:	mov    DWORD PTR [edi+0x148ac650],esp
  435a88:	push   0x78008cd6
  435a8d:	pop    edi
  435a8e:	outs   dx,DWORD PTR ds:[esi]
  435a8f:	adc    BYTE PTR [esi-0x7c527c2d],al
  435a95:	mov    ds:0xefb05ffa,eax
  435a9a:	rcr    BYTE PTR [ebx-0xd],0xa0
  435a9e:	jbe    0x435b1e
  435aa0:	fsubrp st(1),st
  435aa2:	or     DWORD PTR [ebp+eiz*8-0x32ffff20],eax
  435aa9:	sbb    ah,BYTE PTR [ebp-0x75]
  435aac:	add    BYTE PTR [eax],al
  435aae:	and    dl,ch
  435ab0:	jle    0x435af6
  435ab2:	pop    esi
  435ab3:	mov    ds:0xcab6967e,eax
  435ab8:	clc    
  435ab9:	dec    ebp
  435abb:	push   edx
  435abc:	popf   
  435abd:	push   ss
  435abe:	inc    esi
  435abf:	loopne 0x435ae6
  435ac1:	jmp    FWORD PTR [eax]
  435ac3:	pop    ebx
  435ac4:	xor    eax,0x99498d51
  435ac9:	push   ss
  435aca:	push   ss
  435acb:	loopne 0x435b4a
  435acd:	mov    fs,WORD PTR [esi-0x37]
  435ad0:	clc    
  435ad1:	call   FWORD PTR [esi+0x6000fedb]
  435ad7:	jg     0x435aec
  435ad9:	add    BYTE PTR [esi],dl
  435adb:	aad    0xb2
  435add:	shr    al,1
  435adf:	loop   0x435a75
  435ae1:	xchg   esi,eax
  435ae2:	jp     0x435ac3
  435ae4:	add    BYTE PTR [eax],al
  435ae6:	push   ebx
  435ae7:	pop    ebx
  435ae8:	xchg   ebx,eax
  435ae9:	xchg   esp,eax
  435aea:	(bad)  
  435aeb:	fild   WORD PTR [eax]
  435aed:	mov    ecx,DWORD PTR [eax+0x43]
  435af0:	adc    eax,DWORD PTR [eax]
  435af2:	xabort 0xb5
  435af5:	cmp    DWORD PTR [eax+0x7f],ebx
  435af8:	adc    eax,DWORD PTR [eax]
  435afa:	(bad)  
  435afb:	sub    cl,BYTE PTR cs:[ebx-0x367bfc80]
  435b02:	mov    ds,esp
  435b04:	jge    0x435b4c
  435b06:	das    
  435b07:	lods   eax,DWORD PTR ds:[esi]
  435b08:	add    edi,DWORD PTR [edi-0x3fec386c]
  435b0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435b0f:	jnp    0x435b61
  435b11:	data16 add BYTE PTR [eax],al
  435b14:	das    
  435b15:	mov    al,0xad
  435b17:	dec    esi
  435b18:	fistp  QWORD PTR [edx-0x24]
  435b1b:	xchg   BYTE PTR ds:0xf18504c5,bh
  435b21:	xor    BYTE PTR [edx+0x3a],bh
  435b24:	lods   al,BYTE PTR ds:[esi]
  435b25:	sub    ebp,0xd510f186
  435b2b:	out    0x5b,al
  435b2d:	lods   al,BYTE PTR ds:[esi]
  435b2e:	mov    esi,0x1ec62985
  435b33:	ins    BYTE PTR es:[edi],dx
  435b34:	push   eax
  435b35:	or     edx,DWORD PTR [ecx+0x7d]
  435b38:	(bad)  
  435b39:	mov    ah,0x4
  435b3b:	out    0xd9,eax
  435b3d:	mov    edi,DWORD PTR [esi+0x59232ef9]
  435b43:	stc    
  435b44:	loope  0x435b36
  435b46:	jnp    0x435ba2
  435b48:	xchg   edi,eax
  435b49:	pop    esi
  435b4a:	retf   0x20fc
  435b4d:	ins    BYTE PTR es:[edi],dx
  435b4e:	cmp    BYTE PTR [edx-0x79],0xc5
  435b52:	dec    eax
  435b53:	inc    edx
  435b54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435b55:	repnz pop eax
  435b57:	test   DWORD PTR [ecx-0x73],esi
  435b5a:	jp     0x435ba0
  435b5c:	sub    eax,0xcf8a7a4c
  435b61:	fiadd  DWORD PTR [eax+eax*1]
  435b64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435b65:	push   edx
  435b66:	mov    eax,ds:0x11c52f12
  435b6b:	stc    
  435b6c:	dec    ecx
  435b6d:	or     DWORD PTR ds:[esi-0x5c],eax
  435b71:	cmp    bl,BYTE PTR [ebp+0x79c52f12]
  435b77:	mov    al,BYTE PTR [eax]
  435b79:	add    BYTE PTR [edi-0x48fffb46],ah
  435b7f:	shl    bl,0xfe
  435b82:	call   0xe7da:0xb0ee49dd
  435b89:	lea    ebp,[edi+0x43]
  435b8c:	jmp    0xeab508f8
  435b91:	add    ebp,DWORD PTR [edi]
  435b93:	imul   esp,DWORD PTR [esi+0x7e],0x3e9ddbb
  435b9a:	mov    al,0x5b
  435b9c:	cmp    BYTE PTR [eax-0x13],0x49
  435ba0:	arpl   WORD PTR [edx+edi*8+0x2c51ecd5],di
  435ba7:	xchg   ebp,eax
  435ba8:	in     al,dx
  435ba9:	add    ebp,DWORD PTR [edi]
  435bab:	fisubr WORD PTR [edx+0x46]
  435bae:	xor    esp,edx
  435bb0:	pusha  
  435bb1:	jne    0x435b56
  435bb3:	repz jmp 0x735c37bc
  435bb9:	sub    eax,0x4b9c60eb
  435bbe:	sbb    BYTE PTR cs:[si],cl
  435bc2:	cmp    ah,BYTE PTR [ebx+edx*4+0x3ba50201]
  435bc9:	sbb    ecx,ebp
  435bcb:	cmp    DWORD PTR cs:[esi],ebp
  435bce:	pop    ss
  435bcf:	mov    eax,0x652f03d9
  435bd4:	xor    BYTE PTR [eax-0x56],bl
  435bd7:	sbb    BYTE PTR [ebx-0x41],ch
  435bda:	pop    ds
  435bdb:	and    BYTE PTR [bx+si],ch
  435bde:	add    BYTE PTR [eax],al
  435be0:	pop    ss
  435be1:	sbb    BYTE PTR [esi-0x3c],ch
  435be4:	mul    BYTE PTR [ebp-0x8]
  435be7:	adc    bh,ch
  435be9:	pop    ss
  435bea:	lods   al,BYTE PTR ds:[esi]
  435beb:	repz xchg ecx,ebp
  435bee:	je     0x435bb3
  435bf0:	test   DWORD PTR ds:0x3ad9c36b,esi
  435bf6:	sub    eax,DWORD PTR [eax+0x3d07e95]
  435bfc:	das    
  435bfd:	fiadd  WORD PTR [eax]
  435bff:	mov    ebp,0x8d4f6334
  435c04:	cmp    DWORD PTR [eax+0x2437ee79],ebp
  435c0a:	cmp    edx,ebp
  435c0c:	out    0xc3,al
  435c0e:	add    ebx,edx
  435c10:	in     eax,0x40
  435c12:	add    edx,eax
  435c14:	outs   dx,BYTE PTR ds:[esi]
  435c15:	cs push edx
  435c17:	lahf   
  435c18:	je     0x435c82
  435c1a:	xor    ch,cl
  435c1c:	sub    al,0x63
  435c1e:	aas    
  435c1f:	test   DWORD PTR [edi],eax
  435c21:	adc    al,0x84
  435c23:	and    eax,0x453f607c
  435c28:	ret    
  435c29:	enter  0xdef4,0x6c
  435c2d:	arpl   WORD PTR [edi],ax
  435c2f:	push   0x22
  435c31:	out    dx,al
  435c32:	add    dh,bl
  435c34:	mov    al,0x41
  435c36:	test   esi,0x7257376c
  435c3c:	jo     0x435c71
  435c3e:	push   esi
  435c3f:	stos   BYTE PTR es:[edi],al
  435c40:	pop    edi
  435c41:	stos   BYTE PTR es:[edi],al
  435c42:	lds    ebx,FWORD PTR [ebp-0x55a10000]
  435c48:	lds    esi,FWORD PTR [ebp-0x523a55a1]
  435c4e:	jmp    FWORD PTR [ecx-0x364fc33b]
  435c54:	mov    WORD PTR [ebx+ebp*1],ds
  435c57:	sub    al,0x34
  435c59:	jg     0x435c6b
  435c5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435c5c:	ins    DWORD PTR es:[edi],dx
  435c5d:	or     edi,DWORD PTR [eax-0x94deae8]
  435c63:	push   ecx
  435c64:	pop    esp
  435c65:	pusha  
  435c66:	inc    ebx
  435c67:	cli    
  435c68:	mov    eax,ebx
  435c6a:	sbb    BYTE PTR [ecx+0x72],ah
  435c6d:	icebp  
  435c6e:	mov    ebx,0x7b621948
  435c73:	out    0x3b,al
  435c75:	aaa    
  435c76:	pop    ss
  435c77:	fadd   QWORD PTR [ebx+0x7fe36400]
  435c7d:	push   ecx
  435c7e:	(bad)  
  435c7f:	ins    DWORD PTR es:[edi],dx
  435c80:	mov    DWORD PTR [eax],esi
  435c82:	rcr    esp,cl
  435c84:	add    BYTE PTR [ecx+0x47169b6],cl
  435c8a:	aas    
  435c8b:	adc    al,BYTE PTR ds:0x7fbcc689
  435c91:	jo     0x435d11
  435c93:	imul   esi,DWORD PTR [ecx+0x3c],0xd2251
  435c9a:	push   es
  435c9b:	loop   0x435c9d
  435c9d:	mov    DWORD PTR [esi-0x59b77ff8],edi
  435ca3:	imul   ecx,DWORD PTR [ecx+0x4c],0x1bc16251
  435caa:	add    BYTE PTR [eax],al
  435cac:	xchg   ah,bl
  435cae:	idiv   edi
  435cb0:	push   esi
  435cb1:	fadd   st(1),st
  435cb3:	adc    BYTE PTR [edx+0x690000f7],0x9b
  435cba:	cli    
  435cbb:	call   DWORD PTR [ebp-0x64]
  435cbe:	pop    ebx
  435cbf:	pop    ebp
  435cc0:	xchg   esp,eax
  435cc1:	loopne 0x435cc3
  435cc3:	mov    eax,0xfffa9b78
  435cc8:	sub    BYTE PTR [edi],bh
  435cca:	mov    bh,0x4
  435ccc:	inc    esi
  435ccd:	test   al,0xc5
  435ccf:	int3   
  435cd0:	fisub  DWORD PTR [edi+0x6763ccc5]
  435cd6:	in     eax,0x8b
  435cd8:	cmp    ebp,edx
  435cda:	and    eax,0x6da9edd2
  435cdf:	sbb    bh,BYTE PTR [ebp+0x22]
  435ce2:	adc    eax,0x60fd43b
  435ce7:	push   ecx
  435ce8:	(bad)  
  435ce9:	sub    ebp,DWORD PTR [ecx]
  435ceb:	mov    DWORD PTR [esi+0x46507fc7],esi
  435cf1:	mov    bl,BYTE PTR [ebx-0x1]
  435cf4:	das    
  435cf5:	xor    bl,al
  435cf7:	pop    ebx
  435cf8:	in     eax,dx
  435cf9:	rol    DWORD PTR [eax+edi*4],0xd1
  435cfd:	and    bl,al
  435cff:	stc    
  435d00:	push   0x3
  435d02:	add    BYTE PTR [eax],al
  435d04:	repz jp 0x435c8e
  435d07:	in     al,dx
  435d08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435d09:	jp     0x435d17
  435d0b:	push   ecx
  435d0c:	stos   BYTE PTR es:[edi],al
  435d0d:	push   cs
  435d0e:	xor    BYTE PTR [eax+eax*1+0x0],dh
  435d12:	mov    ah,0x7e
  435d14:	sbb    BYTE PTR [ebx+0x4d3179a0],al
  435d1a:	add    DWORD PTR [ecx+edi*1],edi
  435d1d:	or     al,0xaa
  435d1f:	xlat   BYTE PTR ds:[ebx]
  435d20:	cmp    al,0x2
  435d22:	cmp    al,0xfc
  435d24:	mov    edx,0x87bf94da
  435d29:	fisubr DWORD PTR [esi-0x34]
  435d2c:	(bad)  
  435d2d:	cmp    al,0xac
  435d2f:	mov    edi,0x442c7aed
  435d34:	stos   DWORD PTR es:[edi],eax
  435d35:	or     DWORD PTR [edx-0x53edc649],ebp
  435d3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435d3c:	add    eax,0xc3442a7c
  435d41:	or     ecx,ecx
  435d43:	enter  0x5562,0x87
  435d47:	pop    edx
  435d49:	stc    
  435d4a:	cmp    al,ch
  435d4c:	push   edi
  435d4d:	mov    esi,0x4185c527
  435d52:	arpl   WORD PTR [edx-0x43],ax
  435d55:	je     0x435d9a
  435d57:	scas   al,BYTE PTR es:[edi]
  435d58:	cmp    DWORD PTR [ebx+eiz*4],esp
  435d5b:	rcl    BYTE PTR [ebp+eax*4+0x6e],1
  435d5f:	lods   eax,DWORD PTR ds:[esi]
  435d60:	test   DWORD PTR [edi+0x53],eax
  435d63:	cmc    
  435d64:	ror    edi,0xb4
  435d67:	add    DWORD PTR ds:0xc9bcf37d,eax
  435d6d:	inc    ecx
  435d6e:	cmp    ebx,esi
  435d70:	jmp    0xb9218c78
  435d75:	mov    al,BYTE PTR [eax]
  435d77:	add    BYTE PTR [esi+0x133960e6],al
  435d7d:	(bad)  
  435d7e:	mov    dl,0xc0
  435d80:	(bad)  
  435d81:	(bad)  
  435d82:	mov    al,ds:0x2c39665c
  435d87:	or     al,0x2f
  435d89:	xchg   esi,eax
  435d8a:	xor    cl,al
  435d8c:	mov    dh,0xd6
  435d8e:	xchg   DWORD PTR [esi+0x71],ebx
  435d91:	in     eax,0xe9
  435d93:	iret   
  435d94:	jnp    0x435d3f
  435d96:	shl    BYTE PTR es:[ebx-0x57],1
  435d9a:	mov    ch,0x8c
  435d9c:	mov    esp,DWORD PTR [edx-0x63]
  435d9f:	adc    esp,edx
  435da1:	or     ah,BYTE PTR [ebx]
  435da3:	std    
  435da4:	retf   
  435da5:	out    0x5d,al
  435da7:	xchg   BYTE PTR [edi],ch
  435da9:	fsubp  st(1),st
  435dab:	sti    
  435dac:	and    BYTE PTR [ecx+0x68],dl
  435daf:	test   ah,dh
  435db1:	icebp  
  435db2:	and    DWORD PTR [edi],esi
  435db4:	out    0x2f,eax
  435db6:	jae    0x435dee
  435db8:	aaa    
  435db9:	adc    ebx,ebx
  435dbb:	aaa    
  435dbc:	arpl   WORD PTR es:[eax],sp
  435dbf:	in     al,0xa9
  435dc1:	aaa    
  435dc2:	loop   0x435dc0
  435dc4:	mov    edx,DWORD PTR [ecx-0x23]
  435dc7:	cli    
  435dc8:	out    0x1,al
  435dca:	xor    eax,0xa895d50d
  435dcf:	shl    BYTE PTR [esi],0xd6
  435dd2:	inc    ebx
  435dd3:	pop    edi
  435dd4:	jmp    0x75d047c7
  435dd9:	push   es
  435dda:	aaa    
  435ddb:	sub    al,0x0
  435ddd:	add    bl,ch
  435ddf:	stc    
  435de0:	jmp    0x1922e6e8
  435de5:	rcr    edi,0x69
  435de8:	add    BYTE PTR [ebx+ebp*8-0x444dff1e],0x51
  435df0:	add    eax,0xf5968d0e
  435df5:	out    dx,ax
  435df7:	xlat   BYTE PTR ds:[ebx]
  435df8:	pop    esp
  435df9:	mov    esp,0x6200eeea
  435dfe:	and    edx,0xf26e6052
  435e04:	dec    esi
  435e05:	jo     0x435e56
  435e07:	or     ch,cl
  435e09:	jmp    0x633c35fd
  435e0e:	aam    0x61
  435e10:	fdiv   QWORD PTR [ebp-0x2ec0a4e8]
  435e16:	mov    ebx,0xfcb61d28
  435e1b:	(bad)  
  435e1c:	shr    BYTE PTR [edx+0x70],cl
  435e1f:	out    0xbf,al
  435e21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435e22:	xor    dh,bl
  435e24:	add    cl,ch
  435e26:	sub    al,0x37
  435e28:	push   edi
  435e29:	jb     0x435e96
  435e2b:	sub    edx,DWORD PTR [esi+0x2b]
  435e2e:	sbb    al,0xde
  435e30:	mov    eax,0xf8d7b0f3
  435e35:	inc    edx
  435e36:	into   
  435e37:	xchg   ebx,eax
  435e38:	adc    ecx,ebp
  435e3a:	jo     0x435dde
  435e3c:	lds    ebp,FWORD PTR [esi-0xcfede0d]
  435e42:	add    BYTE PTR [eax],al
  435e44:	in     al,dx
  435e45:	fnstsw WORD PTR [edi+0xdce729]
  435e4b:	jmp    0x1984fd7c
  435e50:	xor    esi,esp
  435e52:	inc    eax
  435e53:	jmp    0xec9c7cc1
  435e58:	sub    al,0xde
  435e5a:	add    BYTE PTR [edx+0x3cc5a1ff],ch
  435e60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435e61:	rcl    DWORD PTR [edx+0x37],0xa4
  435e65:	inc    edx
  435e66:	adc    eax,0x2d149500
  435e6b:	add    BYTE PTR [ecx],bl
  435e6d:	imul   edi,ecx,0x4b67ed75
  435e73:	and    al,0x8d
  435e75:	xor    DWORD PTR [ecx],esp
  435e77:	mov    eax,0xe0d7
  435e7c:	and    eax,0x2e4b7e7a
  435e81:	or     al,bh
  435e83:	dec    edi
  435e84:	xchg   edi,eax
  435e85:	xchg   ebx,eax
  435e86:	mov    DWORD PTR [ebx+0x467fee1a],0x75c165ba
  435e90:	int    0x33
  435e92:	mov    ecx,0xe0c601
  435e97:	pop    esi
  435e98:	sbb    eax,0x85c35c87
  435e9d:	mov    al,ds:0x156e4630
  435ea2:	push   es
  435ea3:	mov    esi,DWORD PTR [eax+0x1aebc]
  435ea9:	add    BYTE PTR [esi+0x34d300e0],dl
  435eaf:	arpl   WORD PTR [ebx+0x30],ax
  435eb2:	nop    DWORD PTR ds:0x1dc89889
  435eb9:	jnp    0x435f21
  435ebb:	addr16 inc ebx
  435ebd:	sub    BYTE PTR ds:0xcd286792,cl
  435ec3:	daa    
  435ec4:	add    eax,0x48d6188b
  435ec9:	sub    edi,DWORD PTR [esi+0x29]
  435ecc:	inc    edi
  435ecd:	call   0x3c2fc8
  435ed2:	int    0x1a
  435ed4:	sub    DWORD PTR [ebx+0x467fe48a],eax
  435eda:	add    dh,BYTE PTR ds:0xe00646c2
  435ee0:	add    BYTE PTR [eax],al
  435ee2:	das    
  435ee3:	(bad)
  435ee6:	jno    0x435f28
  435ee8:	test   eax,0x3eb0ec5b
  435eed:	xor    BYTE PTR [esi-0xfca3f06],dh
  435ef3:	ror    DWORD PTR [ecx],cl
  435ef5:	xchg   DWORD PTR [edx+0x41],esi
  435ef8:	mov    eax,ecx
  435efa:	mov    ah,0x90
  435efc:	or     BYTE PTR [ebp+0x5203e979],al
  435f02:	pop    ds
  435f03:	xchg   ebp,eax
  435f04:	jmp    0x435ece
  435f06:	jle    0x435e9f
  435f08:	lods   al,BYTE PTR ds:[esi]
  435f09:	and    bh,ah
  435f0b:	les    eax,FWORD PTR [eax*4+0x11720000]
  435f12:	add    esp,0x2b
  435f15:	loopne 0x435ecc
  435f17:	je     0x435f24
  435f19:	inc    eax
  435f1a:	inc    ebx
  435f1b:	or     al,0xb4
  435f1d:	mov    esi,eax
  435f1f:	push   eax
  435f20:	push   esp
  435f21:	cld    
  435f22:	push   ebx
  435f23:	dec    edi
  435f24:	xchg   DWORD PTR [ecx+0x4090fff3],edi
  435f2a:	dec    esi
  435f2b:	sub    BYTE PTR [ecx+eax*1-0x6afe78f8],ch
  435f32:	push   edi
  435f33:	xchg   ecx,esp
  435f35:	cwde   
  435f36:	repz mov edi,0x5ba93fd1
  435f3c:	ins    BYTE PTR es:[edi],dx
  435f3d:	push   eax
  435f3e:	aas    
  435f3f:	sub    BYTE PTR [esi],ch
  435f41:	add    ebp,ebp
  435f43:	ss icebp 
  435f45:	hlt    
  435f46:	das    
  435f47:	add    DWORD PTR [eax-0x5],ebp
  435f4a:	in     al,dx
  435f4b:	dec    DWORD PTR [eax-0x3b]
  435f4e:	add    al,0x85
  435f50:	fchs   
  435f52:	stc    
  435f53:	iret   
  435f54:	mov    esp,0xa6cf01c1
  435f59:	jmp    0x435f4b
  435f5b:	pop    eax
  435f5c:	pop    esp
  435f5d:	fisubr WORD PTR [ecx+0x35b8aa5e]
  435f63:	shr    ebx,0xa1
  435f66:	xor    eax,0x1d670389
  435f6b:	or     al,0x8a
  435f6d:	ret    0x54ba
  435f70:	lods   al,BYTE PTR ds:[esi]
  435f71:	popf   
  435f72:	out    0x87,eax
  435f74:	add    BYTE PTR [eax],al
  435f76:	mov    ch,0xee
  435f78:	jmp    0xc6990980
  435f7d:	xchg   dh,ah
  435f7f:	loop   0x435fe6
  435f81:	jno    0x435fb5
  435f83:	fsubp  st(1),st
  435f85:	adc    BYTE PTR [edi-0x1e],0xe9
  435f89:	or     al,0xab
  435f8b:	test   bl,bh
  435f8d:	add    ebp,DWORD PTR [edi]
  435f8f:	pop    edi
  435f90:	add    al,BYTE PTR [esp+edi*1]
  435f93:	call   0xde769c02
  435f98:	fiadd  WORD PTR [esi+0x3e9ee99]
  435f9e:	sub    dl,BYTE PTR [ebx]
  435fa0:	repz ss sub eax,0x2f0fdf9b
  435fa7:	fsubp  st(1),st
  435fa9:	mov    bh,ah
  435fab:	loope  0x43600f
  435fad:	adc    al,0xb0
  435faf:	and    BYTE PTR [edx],dl
  435fb1:	mov    edi,esi
  435fb3:	in     eax,dx
  435fb4:	jb     0x435ffa
  435fb6:	xor    ebp,DWORD PTR [edi]
  435fb8:	arpl   WORD PTR [ebp+0x37],bx
  435fbb:	gs popf 
  435fbd:	mov    edi,0x88ba18b0
  435fc2:	cs sub al,0x73
  435fc5:	xor    al,0x1b
  435fc7:	gs sbb eax,0xd228a8b4
  435fcd:	mov    dh,ah
  435fcf:	mov    ebp,0xdd6746a7
  435fd4:	jmp    0x1a28edc
  435fd9:	mov    cl,0x0
  435fdb:	add    BYTE PTR [edx],dl
  435fdd:	in     eax,0x7f
  435fdf:	leave  
  435fe0:	cmp    eax,0x8a600de
  435fe5:	pop    ebp
  435fe6:	adc    eax,0x8bde6fde
  435feb:	and    ebx,DWORD PTR cs:[ebp-0x3f]
  435fef:	adc    al,0x36
  435ff1:	lahf   
  435ff2:	add    ch,dh
  435ff4:	sub    al,0xde
  435ff6:	add    BYTE PTR [eax-0x16ff1e88],dl
  435ffc:	scas   eax,DWORD PTR es:[edi]
  435ffd:	aam    0x11
  435fff:	cli    
  436000:	into   
  436001:	push   edx
  436002:	jbe    0x436069
  436004:	sub    al,0xe7
  436006:	jl     0x435ffa
  436008:	fiadd  WORD PTR ds:[eax]
  43600b:	out    0x5a,al
  43600d:	shl    bh,1
  43600f:	pushf  
  436010:	mov    BYTE PTR [ebx-0x39],bl
  436013:	sbb    cl,BYTE PTR [eax+edx*1+0x59242784]
  43601a:	dec    esi
  43601b:	xor    DWORD PTR [edi],ebp
  43601d:	mov    dh,0x84
  43601f:	das    
  436020:	cmp    al,0x40
  436022:	xlat   BYTE PTR ds:[ebx]
  436023:	pop    ds
  436024:	jmp    0x43600b
  436026:	add    dl,BYTE PTR [ebp-0x903af66]
  43602c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43602d:	fiadd  WORD PTR [eax]
  43602f:	xchg   esp,eax
  436030:	cmp    BYTE PTR [ebx],0x1
  436033:	xchg   ebx,eax
  436034:	sub    al,0x38
  436036:	add    DWORD PTR [ecx],edx
  436038:	fwait
  436039:	out    dx,eax
  43603a:	add    cl,ch
  43603c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43603d:	pop    ds
  43603e:	sbb    DWORD PTR [ebx+0x652e0000],eax
  436044:	inc    esi
  436045:	aad    0xd
  436047:	pop    ecx
  436048:	push   esi
  436049:	int    0xa8
  43604b:	das    
  43604c:	sbb    DWORD PTR [eax],edi
  43604e:	stc    
  43604f:	lds    ecx,FWORD PTR [edx-0x7421d30a]
  436055:	add    BYTE PTR [ebx],ah
  436057:	xchg   edx,eax
  436058:	fstp   TBYTE PTR es:[edi+0x7033191c]
  43605f:	popf   
  436060:	add    al,BYTE PTR [ecx]
  436062:	push   ss
  436063:	fld    QWORD PTR [eax]
  436065:	jmp    0x444bd1
  43606a:	popf   
  43606b:	sbb    eax,0xea41c721
  436070:	add    BYTE PTR [eax],al
  436072:	push   ss
  436073:	fld    QWORD PTR [ebx-0x3e23fd40]
  436079:	inc    eax
  43607a:	mov    dh,0x93
  43607c:	cli    
  43607d:	(bad)  
  43607e:	jns    0x43600c
  436080:	inc    edx
  436081:	or     bh,dl
  436083:	jecxz  0x436101
  436085:	xchg   ecx,eax
  436086:	(bad)  
  436087:	fadd   QWORD PTR [eax]
  436089:	xadd   BYTE PTR [eax+0x5fcee0b8],bl
  436090:	mov    esi,0xf5e26fc1
  436095:	rol    ch,0xaa
  436098:	mov    al,0x1f
  43609a:	(bad)  
  43609b:	fadd   QWORD PTR [eax]
  43609d:	div    edi
  43609f:	pop    esi
  4360a0:	(bad)  
  4360a1:	jne    0x436084
  4360a3:	pop    edi
  4360a4:	mov    BYTE PTR [eax-0x1acc0000],0x80
  4360ab:	cli    
  4360ac:	sahf   
  4360ad:	add    BYTE PTR [edi],al
  4360af:	mov    eax,ebx
  4360b1:	in     al,0x7d
  4360b3:	push   ebp
  4360b4:	push   ds
  4360b5:	popf   
  4360b6:	inc    ecx
  4360b7:	sbb    BYTE PTR [esi+0x1f00410d],cl
  4360bd:	mov    WORD PTR [ecx],ss
  4360bf:	add    BYTE PTR [esi+0x1724425f],al
  4360c5:	cmp    ebp,0xd8579d8a
  4360cb:	pextrw eax,(bad),0xc5
  4360cd:	xchg   ch,bh
  4360cf:	sub    BYTE PTR [edi],0x86
  4360d2:	or     al,0x83
  4360d4:	outs   dx,DWORD PTR ds:[esi]
  4360d5:	sub    edi,esi
  4360d7:	xchg   al,dh
  4360d9:	loop   0x436151
  4360db:	(bad)  
  4360dc:	cmp    dh,al
  4360de:	add    al,0x66
  4360e0:	das    
  4360e1:	je     0x436081
  4360e3:	data16 das 
  4360e5:	sbb    edi,ebp
  4360e7:	xchg   BYTE PTR [eax-0x2f],bh
  4360ea:	lods   al,BYTE PTR ds:[esi]
  4360eb:	fimul  WORD PTR [ecx-0x3b]
  4360ee:	add    al,0x85
  4360f0:	bound  edi,QWORD PTR [ebp-0x78f8ac79]
  4360f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4360f7:	or     al,bh
  4360f9:	je     0x43617a
  4360fb:	(bad)  ds:0xa607c744
  436101:	add    BYTE PTR ds:0x85956e87,dl
  436107:	sbb    DWORD PTR [esp+ebx*1],ebx
  43610a:	out    dx,eax
  43610b:	icebp  
  43610c:	add    BYTE PTR [eax],al
  43610e:	(bad)  
  43610f:	bound  edx,QWORD PTR [eax+eax*1]
  436112:	das    
  436113:	in     al,dx
  436114:	les    esi,FWORD PTR [edx-0xe]
  436117:	cmp    al,0x51
  436119:	clc    
  43611a:	(bad)  
  43611b:	ss adc al,0x0
  43611e:	das    
  43611f:	dec    esp
  436120:	push   ecx
  436121:	or     al,ch
  436123:	sbb    DWORD PTR [eax+ebx*1],0x22
  436127:	test   DWORD PTR [eax*4-0x785b0306],eax
  43612e:	aas    
  43612f:	lds    eax,FWORD PTR [edi*2+0x1e2fd591]
  436136:	lods   al,BYTE PTR ds:[esi]
  436137:	bound  esi,QWORD PTR [eax-0x25bed000]
  43613d:	adc    BYTE PTR [edi],ch
  43613f:	lds    ecx,FWORD PTR [ebx]
  436141:	mov    dl,0x2d
  436143:	enter  0xfc40,0xb4
  436147:	out    dx,eax
  436148:	into   
  436149:	loopne 0x436138
  43614b:	(bad)  [edx-0x3e]
  43614e:	daa    
  43614f:	gs sub eax,0x6ba752bc
  436155:	mov    edx,0x8ba84c1f
  43615a:	out    0xed,al
  43615c:	imul   edi,DWORD PTR [ebp+0x485cdf27],0xb0e9de1f
  436166:	jmp    0xef4a:0x2f04c9dd
  43616d:	mov    WORD PTR [esi+eiz*8-0x62],gs
  436171:	inc    esp
  436172:	add    BYTE PTR [eax],al
  436174:	aaa    
  436175:	not    BYTE PTR [esp+eax*2]
  436178:	das    
  436179:	(bad)
  43617c:	das    
  43617d:	fidiv  WORD PTR [edx+0x41]
  436180:	dec    edi
  436181:	pop    ecx
  436182:	stos   BYTE PTR es:[edi],al
  436183:	xor    BYTE PTR [ecx],ch
  436185:	arpl   WORD PTR [ebx+0x6ae5d0c3],sp
  43618b:	mov    ds:0xb0f265e0,eax
  436190:	outs   dx,BYTE PTR ds:[esi]
  436191:	out    dx,al
  436192:	jmp    0xd621909c
  436197:	sbb    DWORD PTR [edi-0x353cc9d0],esi
  43619d:	in     eax,0xd3
  43619f:	add    eax,0x8c4628a4
  4361a4:	push   esp
  4361a5:	shl    DWORD PTR [ebx+0x41],0x47
  4361a9:	sub    al,0x9a
  4361ab:	stos   DWORD PTR es:[edi],eax
  4361ac:	pop    ebp
  4361ad:	call   0x28f5659b
  4361b2:	and    cl,BYTE PTR [ebx-0x23250a12]
  4361b8:	pop    edx
  4361b9:	enter  0x11f,0x81
  4361bd:	into   
  4361be:	jmp    0x4fba:0x6ad89203
  4361c5:	dec    ebx
  4361c6:	add    ebx,ecx
  4361c8:	mov    bl,0x52
  4361ca:	cmc    
  4361cb:	jmp    0xf994bc07
  4361d0:	sub    al,0xde
  4361d2:	pop    es
  4361d3:	xchg   edi,eax
  4361d4:	sub    dl,ch
  4361d6:	inc    esi
  4361d7:	aad    0x0
  4361d9:	add    BYTE PTR [ebx-0x15362b5d],bh
  4361df:	push   eax
  4361e0:	mov    edi,0xf92aa5f1
  4361e5:	jmp    0xa861:0x9f75054
  4361ec:	mov    WORD PTR [esi],fs
  4361ee:	or     esp,DWORD PTR [ecx-0x3f]
  4361f1:	sbb    eax,0xe5596532
  4361f6:	fistp  WORD PTR [edi]
  4361f8:	adc    ecx,ebp
  4361fa:	xor    bl,dh
  4361fc:	add    BYTE PTR ds:0x95566615,dl
  436202:	stos   DWORD PTR es:[edi],eax
  436203:	mov    ds:0xc5ed9a8c,eax
  436208:	or     DWORD PTR [eax-0x7d3e1166],ebp
  43620e:	inc    esp
  43620f:	inc    esp
  436210:	std    
  436211:	jae    0x43622c
  436213:	mov    edx,0x5689ac89
  436218:	dec    esi
  436219:	inc    edi
  43621a:	mov    ah,0x29
  43621c:	call   0x5129d983
  436221:	cwde   
  436222:	test   BYTE PTR [esi+ecx*1+0x4e632ce9],cl
  436229:	xor    DWORD PTR [ebp-0x7c05e6e1],esi
  43622f:	sti    
  436230:	out    dx,al
  436231:	cs das 
  436233:	retf   
  436234:	clc    
  436235:	jmp    0x6a422566
  43623a:	(bad)  
  43623b:	out    dx,al
  43623c:	jae    0x436209
  43623e:	add    BYTE PTR [eax],al
  436240:	stos   DWORD PTR es:[edi],eax
  436241:	dec    ecx
  436242:	cmc    
  436243:	add    BYTE PTR [esi-0x7e23832a],al
  436249:	loope  0x43624b
  43624b:	movaps xmm4,xmm3
  43624e:	stc    
  43624f:	dec    ebp
  436250:	push   edx
  436251:	pop    ecx
  436252:	retf   
  436253:	shl    DWORD PTR [esi+0x20],cl
  436256:	jbe    0x43621e
  436258:	pop    esi
  436259:	pop    edx
  43625a:	push   esp
  43625b:	clc    
  43625c:	push   ebp
  43625d:	test   eax,0xf46fe76
  436262:	fisttp DWORD PTR [ebx-0x3f7c3df7]
  436268:	cli    
  436269:	fstp   TBYTE PTR [ebp-0x35]
  43626c:	xchg   edi,eax
  43626d:	cmp    edx,0x0
  436270:	push   ss
  436271:	loope  0x4362f2
  436273:	dec    eax
  436274:	push   ds
  436275:	pop    eax
  436276:	dec    edx
  436277:	and    BYTE PTR [ebp+0xee8b8a1],bl
  43627d:	pop    edx
  43627e:	cmp    BYTE PTR [ecx+ebx*4],cl
  436281:	or     al,0x11
  436283:	add    BYTE PTR [ecx+eiz*8],al
  436286:	add    BYTE PTR [eax+edx*8+0x58],dh
  43628a:	pop    esp
  43628b:	in     al,dx
  43628c:	xchg   edi,eax
  43628d:	js     0x436298
  43628f:	push   0xffffffd4
  436291:	push   ebp
  436292:	push   esp
  436293:	in     al,dx
  436294:	pop    esi
  436295:	daa    
  436296:	in     al,dx
  436297:	mov    ecx,DWORD PTR [ecx+0x6e5046e8]
  43629d:	sbb    DWORD PTR [eax+eax*1],edx
  4362a0:	(bad)  
  4362a1:	push   edi
  4362a2:	push   esp
  4362a3:	clc    
  4362a4:	add    BYTE PTR [eax],al
  4362a6:	aas    
  4362a7:	or     eax,0xd10d3319
  4362ac:	repnz (bad) 
  4362ae:	cdq    
  4362af:	int3   
  4362b0:	clc    
  4362b1:	call   DWORD PTR [esi-0x79efbd85]
  4362b7:	int3   
  4362b8:	clc    
  4362b9:	(bad)  
  4362ba:	mov    edx,0x2ffe7601
  4362bf:	(bad)  
  4362c0:	xor    ebx,DWORD PTR [esi]
  4362c2:	lods   al,BYTE PTR ds:[esi]
  4362c3:	pop    ecx
  4362c4:	mov    al,0x0
  4362c6:	sub    BYTE PTR [ebx],bh
  4362c8:	dec    edi
  4362c9:	or     DWORD PTR [edi],ebp
  4362cb:	mov    bh,0xff
  4362cd:	mov    cl,0x2d
  4362cf:	aam    0x49
  4362d1:	cld    
  4362d2:	mov    ah,0xec
  4362d4:	shl    eax,cl
  4362d6:	in     eax,dx
  4362d7:	aaa    
  4362d8:	mov    dh,0x8
  4362da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4362db:	adc    DWORD PTR [ebp-0x51c89f03],esi
  4362e1:	adc    BYTE PTR [ebp+0xf418b7c],bh
  4362e7:	dec    esi
  4362e8:	dec    edi
  4362e9:	inc    eax
  4362ea:	stos   BYTE PTR es:[edi],al
  4362eb:	jbe    0x436315
  4362ed:	std    
  4362ee:	mov    bh,0xed
  4362f0:	adc    cl,dh
  4362f2:	push   0x18fe04a5
  4362f7:	mov    dh,0x28
  4362f9:	sbb    ah,BYTE PTR [edi+0x14bfa90a]
  4362ff:	mov    esi,0xeab3fe2a
  436304:	test   al,0x88
  436306:	pop    edx
  436307:	jb     0x436294
  436309:	push   ecx
  43630a:	add    BYTE PTR [eax],al
  43630c:	pop    ss
  43630d:	out    0x52,al
  43630f:	call   0x480d1e
  436314:	mov    ah,0xf2
  436316:	mov    ah,0x87
  436318:	jo     0x4362f7
  43631a:	repz aam 0x1c
  43631d:	xor    ebp,DWORD PTR [ebx-0x1b834bf6]
  436323:	sub    bh,0xb1
  436326:	test   eax,0x4a56f
  43632c:	das    
  43632d:	mov    ch,0xb7
  43632f:	add    DWORD PTR [edx],esi
  436331:	mov    ch,0x4
  436333:	add    BYTE PTR [eax+0x33001484],bl
  436339:	fsubp  st(1),st
  43633b:	add    esp,DWORD PTR [esi]
  43633d:	bound  ebp,QWORD PTR [edi+0x3]
  436340:	das    
  436341:	fisub  WORD PTR [edx+0x3e]
  436344:	out    dx,eax
  436345:	push   esi
  436346:	xchg   ebp,eax
  436347:	mov    bh,0xb0
  436349:	and    esi,esi
  43634b:	stc    
  43634c:	mov    cl,0x54
  43634e:	fisttp QWORD PTR [edx-0x5062aa58]
  436354:	lods   al,BYTE PTR ds:[esi]
  436355:	sahf   
  436356:	xlat   BYTE PTR ds:[ebx]
  436357:	jg     0x436323
  436359:	fucomp st(1)
  43635b:	add    ebp,DWORD PTR [edx+0x707f0a1b]
  436361:	push   edx
  436362:	adc    BYTE PTR [ecx+0x4760ede8],cl
  436368:	arpl   WORD PTR [ecx-0x4f],sp
  43636b:	xor    bl,bh
  43636d:	push   esi
  43636e:	pmulhuw mm0,QWORD PTR [eax]
  436371:	add    BYTE PTR [ebx+0x77e8d617],dh
  436377:	push   ds
  436378:	arpl   WORD PTR [edx+0x37],dx
  43637b:	push   ebp
  43637c:	sub    eax,0xe3a312a0
  436381:	leave  
  436382:	jge    0x436365
  436384:	ret    0xb4e
  436387:	push   edi
  436388:	lods   al,BYTE PTR ds:[esi]
  436389:	mov    DWORD PTR [esi+eax*8+0x1a],ebx
  43638d:	mov    DWORD PTR [edx+esi*4-0x15],ebp
  436391:	shr    DWORD PTR ds:[edi],cl
  436394:	sbb    ch,BYTE PTR [ecx+ebx*4-0x4dfc1605]
  43639b:	and    BYTE PTR [esi-0x77],dl
  43639e:	jl     0x436366
  4363a0:	imul   eax,eax,0x3b
  4363a3:	shl    DWORD PTR [edi-0x161fd0ed],cl
  4363a9:	add    eax,DWORD PTR [ebx-0x18]
  4363ac:	jb     0x4363fd
  4363ae:	mov    ebx,0xb2bb9d56
  4363b3:	sbb    al,BYTE PTR [ecx]
  4363b5:	sar    esi,1
  4363b7:	sub    eax,0xee8a4152
  4363bc:	add    cl,ch
  4363be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4363bf:	cs stc 
  4363c1:	jo     0x43640d
  4363c3:	out    0x8b,al
  4363c5:	lods   al,BYTE PTR ds:[esi]
  4363c6:	rol    BYTE PTR [edx],1
  4363c8:	ds or  eax,0xae2aae2e
  4363ce:	in     al,dx
  4363cf:	bound  ecx,QWORD PTR [esi+0x1]
  4363d2:	scas   al,BYTE PTR es:[edi]
  4363d3:	inc    esp
  4363d4:	inc    ecx
  4363d5:	jmp    0x5f6e63da
  4363da:	dec    ebp
  4363db:	fild   QWORD PTR [esi+ebx*8]
  4363de:	mov    edi,0xddeb2e
  4363e3:	jmp    0xef440114
  4363e8:	sub    al,0xde
  4363ea:	add    dh,dl
  4363ec:	sti    
  4363ed:	in     eax,dx
  4363ee:	add    cl,dh
  4363f0:	sub    al,0xde
  4363f2:	pop    es
  4363f3:	gs stos DWORD PTR es:[edi],eax
  4363f5:	fiadd  WORD PTR [eax]
  4363f7:	jmp    0xea38a9ab
  4363fc:	xor    esp,DWORD PTR [edx+0x31]
  4363ff:	imul   DWORD PTR [esi+ebx*8]
  436402:	xor    ebp,DWORD PTR [ecx-0x19fede4f]
  436408:	xchg   edx,eax
  436409:	ficom  DWORD PTR [eax]
  43640b:	sub    DWORD PTR [ebp+ebx*1-0x1cc8d13],esp
  436412:	mov    DWORD PTR [edi+ecx*4],ebp
  436415:	pop    ebp
  436416:	sar    ebp,0xcd
  436419:	bound  ecx,QWORD PTR [ecx-0x33]
  43641c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43641d:	adc    eax,0x52e56ccd
  436422:	adc    BYTE PTR [edx+0x73],dh
  436425:	push   ds
  436426:	cmp    al,0xa1
  436428:	int3   
  436429:	cmp    cl,BYTE PTR [eax]
  43642b:	bound  ebp,QWORD PTR [ecx-0x4e]
  43642e:	mov    eax,DWORD PTR [eax]
  436430:	sub    DWORD PTR [ecx-0x77],0x4
  436434:	pushf  
  436435:	xchg   edx,eax
  436436:	inc    edx
  436437:	inc    eax
  436438:	or     eax,0x83f918
  43643d:	add    bl,cl
  43643f:	imul   eax,DWORD PTR [ecx],0x44569e74
  436445:	hlt    
  436446:	lea    ecx,[eax]
  436448:	cmc    
  436449:	jb     0x436424
  43644b:	jns    0x43648f
  43644d:	adc    BYTE PTR [esi-0xdffff21],al
  436453:	fnstcw WORD PTR [ebp+0x4d]
  436456:	bound  esp,QWORD PTR [ecx+0x54]
  436459:	clc    
  43645a:	int    0x9
  43645c:	sbb    DWORD PTR [ecx-0x4c],edx
  43645f:	sub    eax,0xdd5595e9
  436464:	add    BYTE PTR [ebx+0x47807a03],cl
  43646a:	ds dec eax
  43646c:	inc    esp
  43646d:	hlt    
  43646e:	das    
  43646f:	pop    ss
  436470:	cmc    
  436471:	add    edx,DWORD PTR [esi+0x16e47c61]
  436477:	dec    edx
  436478:	push   esp
  436479:	clc    
  43647a:	or     DWORD PTR [esi-0x4c],edx
  43647d:	or     eax,0xedddd06
  436482:	popf   
  436483:	adc    eax,0x5d68521
  436488:	add    al,bh
  43648a:	push   esi
  43648b:	out    dx,al
  43648c:	add    BYTE PTR [eax],al
  43648e:	push   es
  43648f:	ffree  st(1)
  436491:	inc    edi
  436492:	inc    esi
  436493:	loop   0x436495
  436495:	add    dh,dl
  436497:	xchg   ebx,eax
  436498:	add    al,BYTE PTR [edi]
  43649a:	(bad)  
  43649b:	fadd   QWORD PTR [eax]
  43649d:	not    DWORD PTR [ecx]
  43649f:	repnz add BYTE PTR [eax],dl
  4364a2:	add    BYTE PTR [eax],al
  4364a4:	(bad)  
  4364a5:	fmul   QWORD PTR [ecx]
  4364a7:	test   BYTE PTR [esi],bh
  4364a9:	loop   0x4364ab
  4364ab:	add    BYTE PTR [edi],ch
  4364ad:	xor    al,0x32
  4364af:	cld    
  4364b0:	das    
  4364b1:	test   al,0x80
  4364b3:	jg     0x4364d7
  4364b5:	mov    bh,0x4
  4364b7:	sub    eax,0x2429396f
  4364bc:	das    
  4364bd:	sar    BYTE PTR [edx+0xc],0x3f
  4364c1:	ja     0x436538
  4364c3:	inc    ebx
  4364c4:	fwait
  4364c5:	dec    ebx
  4364c6:	dec    esp
  4364c7:	and    BYTE PTR [esi+0x6f83a079],dh
  4364cd:	push   0xffffffdd
  4364cf:	test   bh,ah
  4364d1:	mov    ds:0x395b4b75,al
  4364d6:	mov    dh,0x74
  4364d8:	inc    eax
  4364d9:	dec    esp
  4364da:	inc    esp
  4364db:	inc    eax
  4364dc:	and    al,0x7f
  4364de:	fsubr  QWORD PTR [eax+ebp*1+0x3c]
  4364e2:	pop    edx
  4364e3:	aam    0xa5
  4364e5:	stc    
  4364e6:	test   al,0x88
  4364e8:	xor    ecx,ebp
  4364ea:	mov    bl,0x41
  4364ec:	out    dx,eax
  4364ed:	cmp    ebx,DWORD PTR [ecx-0x8]
  4364f0:	lods   al,BYTE PTR ds:[esi]
  4364f1:	sbb    DWORD PTR [ecx+0x77cebb00],ebp
  4364f7:	inc    ebx
  4364f8:	and    ebx,ebp
  4364fa:	dec    ecx
  4364fb:	cld    
  4364fc:	popf   
  4364fd:	push   eax
  4364fe:	mov    ebx,0xfeb53f41
  436503:	jmp    FWORD PTR [edi]
  436505:	jmp    0x43ea25
  43650a:	jp     0x43657d
  43650c:	ja     0x436561
  43650e:	pop    es
  43650f:	cmp    eax,0x35e184b
  436514:	dec    ebp
  436515:	call   0x480924
  43651a:	mov    ah,0xf2
  43651c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43651d:	xchg   DWORD PTR [eax-0x53],ebp
  436520:	ja     0x436565
  436522:	jecxz  0x4364c2
  436524:	dec    ecx
  436525:	cld    
  436526:	sub    al,0xde
  436528:	cmp    DWORD PTR [esi+0x7ceac244],eax
  43652e:	pop    esp
  43652f:	(bad)  
  436530:	fisttp WORD PTR [eax+0x3e9d92c]
  436536:	retf   0x72d8
  436539:	dec    edx
  43653a:	dec    edi
  43653b:	popa   
  43653c:	sub    dh,BYTE PTR [edi]
  43653e:	cs lahf 
  436540:	stos   BYTE PTR es:[edi],al
  436541:	out    0x98,eax
  436543:	(bad)  
  436544:	jmp    0x2f03:0xf1df6e03
  43654b:	fimul  WORD PTR [esi]
  43654d:	dec    edx
  43654e:	pop    ds
  43654f:	fsubp  st(3),st
  436551:	add    ebp,DWORD PTR [edi]
  436553:	push   edx
  436554:	lds    eax,FWORD PTR [esi-0x2485118b]
  43655a:	mov    ch,0x63
  43655c:	jmp    0x5b30:0x6ade2f03
  436563:	(bad)  
  436565:	xchg   DWORD PTR [eax-0x26],esp
  436568:	jmp    0xecd39b70
  43656d:	mov    al,0x0
  43656f:	add    ah,dh
  436571:	leave  
  436572:	arpl   dx,ax
  436574:	push   0xffffffbe
  436576:	sub    al,0x85
  436578:	ins    DWORD PTR es:[edi],dx
  436579:	(bad)  
  43657a:	jo     0x4365d3
  43657c:	daa    
  43657d:	(bad)  [ecx+0x3bee2585]
  436583:	shl    BYTE PTR [esi],cl
  436585:	(bad)  
  436586:	pop    ss
  436587:	or     al,0x5a
  436589:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43658a:	out    dx,eax
  43658b:	xchg   BYTE PTR [edx],al
  43658d:	ret    
  43658e:	xchg   edi,eax
  43658f:	mov    cl,0x52
  436591:	mov    ds:0x1eb2b9db,eax
  436596:	retf   0xef86
  436599:	push   ecx
  43659a:	fdivr  DWORD PTR [esi+esi*2-0x12]
  43659e:	test   al,0xab
  4365a0:	sub    BYTE PTR [ebx+0x1],bl
  4365a3:	mov    BYTE PTR [edi+ebx*2],ch
  4365a6:	dec    ecx
  4365a7:	mov    ebp,0x2e212d53
  4365ac:	jno    0x4365bc
  4365ae:	add    ch,cl
  4365b0:	sub    al,0xde
  4365b2:	push   0xffffffe9
  4365b4:	sbb    bl,dh
  4365b6:	push   0xffffffe9
  4365b8:	xchg   esp,eax
  4365b9:	sbb    edx,DWORD PTR [ebx]
  4365bb:	jmp    0xf189c6ec
  4365c0:	and    ebp,DWORD PTR [ebx]
  4365c2:	stc    
  4365c3:	pusha  
  4365c4:	out    0xe5,al
  4365c6:	mov    DWORD PTR [eax-0xdff6264],ebp
  4365cc:	sub    al,0xde
  4365ce:	add    BYTE PTR [eax],dl
  4365d0:	das    
  4365d1:	fiadd  DWORD PTR [eax]
  4365d3:	jmp    0xc3f665d8
  4365d8:	and    DWORD PTR [edx+0x576498a],ebx
  4365de:	xor    edx,ebp
  4365e0:	jl     0x436584
  4365e2:	pusha  
  4365e3:	xabort 0xe6
  4365e6:	(bad)  
  4365e7:	(bad)  
  4365e8:	neg    DWORD PTR [eax+eax*4-0x734538a0]
  4365ef:	pop    es
  4365f0:	test   BYTE PTR [edi-0x2eb1a0bc],ah
  4365f6:	xor    esp,DWORD PTR [esi+0x384ccf84]
  4365fc:	xlat   BYTE PTR ds:[ebx]
  4365fd:	jb     0x4365ea
  4365ff:	pop    ebx
  436600:	les    ebp,FWORD PTR [eax-0x377e1134]
  436606:	sub    al,0xc7
  436608:	add    ecx,ebp
  43660a:	sub    edx,DWORD PTR [esi-0x49125574]
  436610:	or     DWORD PTR [eax-0x16e22933],ebp
  436616:	mov    edi,0xedea00de
  43661b:	pop    ebx
  43661c:	inc    esi
  43661d:	add    dh,bl
  43661f:	mov    al,ds:0x9ad518de
  436624:	add    BYTE PTR [edi-0x2],0x48
  436628:	cmp    BYTE PTR [eax],dh
  43662a:	xchg   ebp,eax
  43662b:	xchg   edx,eax
  43662c:	neg    BYTE PTR es:[ecx]
  43662f:	(bad)  
  436630:	(bad)  
  436631:	call   esi
  436633:	loope  0x4366aa
  436635:	jg     0x436609
  436637:	loope  0x436642
  436639:	test   BYTE PTR [eax],al
  43663b:	add    BYTE PTR [eax+0x7cfff8c2],ah
  436641:	loope  0x4366a1
  436643:	add    BYTE PTR [ecx+eiz*8-0x18],bh
  436647:	lods   eax,DWORD PTR ds:[esi]
  436648:	das    
  436649:	fiadd  DWORD PTR [eax]
  43664b:	mov    edi,DWORD PTR [ebx+0x2e477fc9]
  436651:	dec    ecx
  436652:	aaa    
  436653:	xor    ch,bh
  436655:	sub    edi,ecx
  436657:	(bad)  
  436658:	mov    edx,eax
  43665a:	clc    
  43665b:	inc    DWORD PTR [esi+0x5b0c7c5a]
  436661:	fidivr WORD PTR [esp+ebx*8+0x5d]
  436665:	loope  0x436667
  436667:	and    ebx,0xffffffc4
  43666a:	add    cl,BYTE PTR [edi]
  43666c:	retf   0xfeaa
  43666f:	call   DWORD PTR [esi+0x60]
  436672:	jp     0x436678
  436674:	push   esi
  436675:	or     eax,0x61908b0d
  43667a:	fadd   DWORD PTR [edi]
  43667c:	jne    0x4366e7
  43667e:	push   ds
  43667f:	icebp  
  436680:	(bad)  
  436682:	push   cs
  436683:	add    BYTE PTR [esi],dl
  436685:	loope  0x436666
  436687:	pop    edx
  436688:	or     eax,0xc08300e1
  43668d:	loopne 0x4366f4
  43668f:	sub    bl,BYTE PTR [ebp+0x169b8bdb]
  436695:	loope  0x436697
  436697:	add    BYTE PTR [edi],ch
  436699:	cmp    BYTE PTR [edx],dh
  43669b:	cld    
  43669c:	das    
  43669d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43669e:	sbb    BYTE PTR [edi-0x48cc0000],0x4
  4366a5:	or     DWORD PTR [ecx-0x24b45848],ebx
  4366ab:	aas    
  4366ac:	mov    bh,0xcd
  4366ae:	iret   
  4366af:	clc    
  4366b0:	add    edx,0x37
  4366b3:	dec    esi
  4366b4:	pop    edx
  4366b5:	clc    
  4366b6:	sub    al,0x1f
  4366b8:	test   dl,bh
  4366ba:	sub    al,0xa9
  4366bc:	mov    BYTE PTR [ebp-0x7a63fa1c],0x6c
  4366c3:	aaa    
  4366c4:	sahf   
  4366c5:	jmp    FWORD PTR [ebp-0x1778fbea]
  4366cb:	mov    dl,0x83
  4366cd:	clc    
  4366ce:	sub    al,0x8c
  4366d0:	dec    edi
  4366d1:	stc    
  4366d2:	push   ebx
  4366d3:	xor    al,BYTE PTR [ebp-0x424913c7]
  4366d9:	in     eax,0x2d
  4366db:	hlt    
  4366dc:	dec    DWORD PTR [edx]
  4366de:	das    
  4366df:	mov    bh,0x4
  4366e1:	jge    0x43673c
  4366e3:	mov    bh,0x95
  4366e5:	stc    
  4366e6:	xor    eax,0x708504b7
  4366eb:	fidivr WORD PTR [ebx-0xf]
  4366ee:	push   eax
  4366ef:	mov    bl,0x83
  4366f1:	jnp    0x43672e
  4366f3:	mov    ch,0xbf
  4366f5:	add    DWORD PTR [edi+esi*4],ebx
  4366f8:	add    al,0x0
  4366fa:	ret    0xbdda
  4366fd:	in     eax,0x2d
  4366ff:	cmp    BYTE PTR [esi-0x422e803],dl
  436705:	inc    DWORD PTR [eax]
  436707:	add    BYTE PTR [eax],ah
  436709:	ja     0x4366a6
  43670b:	(bad)  
  43670c:	icebp  
  43670d:	mov    ah,0x14
  43670f:	add    BYTE PTR [edi],ch
  436711:	mov    ch,0x83
  436713:	jmp    0xde29:0xd390de2c
  43671a:	jmp    0xa719d399
  43671f:	inc    ebx
  436720:	pop    ss
  436721:	out    0xc,al
  436723:	inc    esp
  436724:	das    
  436725:	fwait
  436726:	out    0x10,eax
  436728:	das    
  436729:	fsubp  st(1),st
  43672b:	(bad)  
  43672c:	shl    al,cl
  43672e:	push   0xffffff9d
  436730:	shl    BYTE PTR [esi-0x3c3706d3],cl
  436736:	jae    0x4366f5
  436738:	inc    edx
  436739:	mov    ebp,0xafc9dadf
  43673e:	inc    ebx
  43673f:	xor    BYTE PTR [ebp+0x2be1dafe],0x41
  436746:	add    esi,DWORD PTR ds:[esi]
  436749:	pop    edx
  43674a:	inc    ebx
  43674b:	stc    
  43674c:	cwde   
  43674d:	ret    
  43674e:	fbstp  TBYTE PTR [ebp-0x6f]
  436751:	les    edx,FWORD PTR [ebp+0x3b94b2af]
  436757:	mov    ds:0xfb205f41,eax
  43675c:	mov    cl,0x29
  43675e:	adc    al,BYTE PTR [edx]
  436760:	push   edi
  436761:	pop    edi
  436762:	or     bl,ah
  436764:	fisub  DWORD PTR [ebx-0x6055458d]
  43676a:	out    dx,eax
  43676b:	rol    DWORD PTR [eax],cl
  43676d:	add    BYTE PTR [ebx+eax*8],cl
  436770:	out    dx,eax
  436771:	add    ch,BYTE PTR [edi]
  436773:	popf   
  436774:	add    DWORD PTR [ebx],edx
  436776:	add    bl,BYTE PTR [ebp-0x37e57911]
  43677c:	xlat   BYTE PTR ds:[ebx]
  43677d:	lods   eax,DWORD PTR ds:[esi]
  43677e:	or     ah,BYTE PTR [edi+0x40b2b61b]
  436784:	(bad)  
  436785:	add    eax,0xc52a1ab0
  43678a:	cs aam 0xe9
  43678d:	add    ebp,DWORD PTR [edi]
  43678f:	rol    DWORD PTR [eax],cl
  436791:	ins    DWORD PTR es:[edi],dx
  436792:	cdq    
  436793:	fadd   QWORD PTR [eax]
  436795:	jmp    0xe94b448d
  43679a:	sub    al,0xde
  43679c:	mov    esp,DWORD PTR [esi]
  43679e:	jae    0x4367fb
  4367a0:	ds popf 
  4367a2:	test   al,0x9d
  4367a4:	or     BYTE PTR [ebp+0x3b],ah
  4367a7:	loopne 0x4367a9
  4367a9:	jmp    0xc3387f15
  4367ae:	in     eax,dx
  4367af:	dec    edi
  4367b0:	(bad)  
  4367b1:	popa   
  4367b2:	in     al,dx
  4367b3:	pop    edx
  4367b4:	inc    esi
  4367b5:	jne    0x4367fd
  4367b7:	pop    ss
  4367b8:	icebp  
  4367b9:	and    ch,ah
  4367bb:	dec    edi
  4367bc:	(bad)  
  4367bd:	jno    0x4367ab
  4367bf:	pop    edx
  4367c0:	ds pop ebp
  4367c2:	test   al,0x9d
  4367c4:	or     BYTE PTR [ebp-0x53],ah
  4367c7:	fild   DWORD PTR [eax]
  4367c9:	jmp    0x73307ef5
  4367ce:	add    dh,al
  4367d0:	mov    WORD PTR [eax+eax*1+0x5312b400],gs
  4367d7:	cdq    
  4367d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4367d9:	outs   dx,DWORD PTR ds:[esi]
  4367da:	sub    ebp,ecx
  4367dc:	sub    al,0x59
  4367de:	ds adc eax,0xc0f91f2c
  4367e4:	jmp    0x9ce792aa
  4367e9:	ret    0x113d
  4367ec:	out    0x2e,al
  4367ee:	stc    
  4367ef:	push   0x67
  4367f1:	shr    DWORD PTR [ecx],1
  4367f3:	scas   al,BYTE PTR es:[edi]
  4367f4:	in     al,dx
  4367f5:	mov    edx,0xde2ce0ef
  4367fa:	and    edi,0x42
  4367fd:	xor    DWORD PTR [edi],ebx
  4367ff:	ins    BYTE PTR es:[edi],dx
  436800:	adc    dl,bh
  436802:	add    BYTE PTR [edx+0x1],ch
  436805:	ret    0xde01
  436808:	mov    al,0x1
  43680a:	or     eax,DWORD PTR [eax]
  43680c:	push   ss
  43680d:	fimul  WORD PTR [ecx]
  43680f:	mov    dh,0x4
  436811:	jae    0x43685f
  436813:	cld    
  436814:	lea    eax,[ebx+0x5f54e0c6]
  43681a:	ret    
  43681b:	or     BYTE PTR [edi+0x28],bh
  43681e:	stc    
  43681f:	add    ebp,esi
  436821:	pop    esi
  436822:	sti    
  436823:	push   cs
  436824:	adc    al,0x90
  436826:	jle    0x4367f3
  436828:	push   ebp
  436829:	jl     0x436845
  43682b:	sar    DWORD PTR [ebp-0x383e8828],0xdc
  436832:	add    BYTE PTR [eax],al
  436834:	dec    ebp
  436835:	sahf   
  436836:	or     BYTE PTR [edi+0x0],0x0
  43683a:	ss popf 
  43683c:	fiadd  WORD PTR ds:0xe076863d
  436842:	mov    ecx,0x860fd85e
  436847:	pop    esi
  436848:	mov    eax,0xfd665704
  43684d:	cmp    al,0xc2
  436850:	ja     0x4368d1
  436852:	shl    di,cl
  436855:	inc    DWORD PTR [esi+0xf644244]
  43685b:	add    dl,BYTE PTR [ebp+0xf]
  43685e:	adc    DWORD PTR [ecx+0x5e19ffef],esi
  436864:	stc    
  436865:	push   ds
  436866:	mov    DWORD PTR [edx+0x26],ebx
  436869:	stc    
  43686a:	cmp    DWORD PTR [edx-0x3e],esi
  43686d:	inc    edi
  43686e:	mov    esi,0x460000dd
  436873:	call   0x8b00:0xdd461102
  43687a:	test   eax,0xea4f2de5
  43687f:	or     BYTE PTR [edi-0x15],al
  436882:	inc    ebp
  436883:	inc    esi
  436884:	inc    eax
  436885:	add    BYTE PTR [edi],ch
  436887:	xor    al,0xab
  436889:	std    
  43688a:	popf   
  43688b:	aad    0x7f
  43688d:	jnp    0x4368b2
  43688f:	mov    bh,0xfb
  436891:	sbb    ebx,0xffffffcd
  436894:	add    al,0x0
  436896:	and    BYTE PTR [ecx-0x1],al
  436899:	clc    
  43689a:	jp     0x43690f
  43689c:	js     0x436868
  43689e:	add    BYTE PTR [eax],al
  4368a0:	fcom   QWORD PTR [esi+0x3f]
  4368a3:	jge    0x436896
  4368a5:	into   
  4368a6:	jne    0x4368fb
  4368a8:	div    DWORD PTR [ebx-0x4c168234]
  4368ae:	fidiv  DWORD PTR cs:[edi+ebp*8-0x455ff6ec]
  4368b6:	inc    ecx
  4368b7:	or     BYTE PTR ds:0xf484fcf7,0x33
  4368be:	sahf   
  4368bf:	add    DWORD PTR [ecx+0x4e],ecx
  4368c2:	cmp    DWORD PTR [ecx+0x3f],eax
  4368c5:	and    BYTE PTR [eax+ebp*2-0x5c],al
  4368c9:	ja     0x4368e7
  4368cb:	mov    edi,0xea7fb394
  4368d0:	sub    al,0xdc
  4368d2:	cmp    ebx,DWORD PTR [ebp+ebx*1+0x44]
  4368d6:	gs or  eax,0x3704b72f
  4368dc:	lock sahf 
  4368de:	das    
  4368df:	sbb    eax,0xa479af94
  4368e4:	push   ebx
  4368e5:	mov    bh,0x4
  4368e7:	add    BYTE PTR [edi],ch
  4368e9:	cmp    al,0x54
  4368eb:	push   0x52f92838
  4368f0:	scas   eax,DWORD PTR es:[edi]
  4368f1:	xchg   esp,eax
  4368f2:	inc    esp
  4368f3:	add    BYTE PTR [eiz*8+0x77fb8722],bl
  4368fa:	xor    al,0xf9
  4368fc:	lock pop esi
  4368fe:	in     eax,0x40
  436900:	xlat   BYTE PTR ds:[ebx]
  436901:	fstp   QWORD PTR [ebx-0x5e]
  436904:	add    BYTE PTR [eax],al
  436906:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436907:	pop    eax
  436908:	sbb    al,BYTE PTR [ecx]
  43690a:	das    
  43690b:	ficomp WORD PTR [edx+edi*1-0x65]
  43690f:	push   ebp
  436910:	jmp    0x6d55d791
  436915:	xchg   edx,eax
  436916:	pop    ds
  436917:	fucomp st(1)
  436919:	add    esp,DWORD PTR [ecx+0x51]
  43691c:	daa    
  43691d:	push   eax
  43691e:	pop    edi
  43691f:	sub    eax,0xde2e039f
  436924:	jmp    0x652efa2c
  436929:	inc    edx
  43692a:	jg     0x43695a
  43692c:	add    al,0x4
  43692e:	xlat   BYTE PTR ds:[ebx]
  43692f:	and    eax,0x532f03dc
  436934:	adc    eax,0xe29a5aac
  436939:	jl     0x4369a7
  43693b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43693c:	gs ret 
  43693e:	ss pop ecx
  436940:	cmp    eax,0x71bfc0fb
  436945:	inc    edx
  436946:	inc    edi
  436947:	xchg   edi,eax
  436948:	fist   WORD PTR ds:0x7ee9de2f
  43694e:	out    dx,al
  43694f:	cmp    ebx,ebp
  436951:	inc    edx
  436952:	syscall 
  436954:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436955:	sbb    esp,DWORD PTR [esi]
  436957:	pop    ebx
  436958:	dec    ebx
  436959:	add    al,0x2f
  43695b:	fisub  WORD PTR [edx+0x3a]
  43695e:	jecxz  0x4368e5
  436960:	jmp    0x3b219868
  436965:	mov    ds:0x3ba60fb2,eax
  43696a:	add    BYTE PTR [eax],al
  43696c:	adc    bl,BYTE PTR [ebx+0x52e9f763]
  436972:	sub    esp,eax
  436974:	push   edi
  436975:	(bad)  
  436976:	out    dx,al
  436977:	jno    0x4369e8
  436979:	push   ebp
  43697a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43697b:	scas   eax,DWORD PTR es:[edi]
  43697c:	sbb    bl,BYTE PTR [eax+0x42557f01]
  436982:	jbe    0x436971
  436984:	sub    eax,0x3bb67cd5
  436989:	mov    edi,0xbfbeeef8
  43698e:	mul    DWORD PTR [edi+edx*8]
  436991:	pop    eax
  436992:	(bad)  
  436993:	mov    edx,0x1d4858cb
  436998:	jno    0x4369db
  43699a:	mov    edi,0xb9a62bf1
  43699f:	call   0x9a4447d0
  4369a4:	retf   
  4369a5:	pop    eax
  4369a6:	dec    eax
  4369a7:	xor    eax,0x31f92b74
  4369ac:	or     al,BYTE PTR [edx+0x58ade58c]
  4369b2:	ret    0xc3a8
  4369b5:	aad    0x7
  4369b7:	aas    
  4369b8:	repz push esi
  4369ba:	inc    esi
  4369bb:	jne    0x43697f
  4369bd:	pushf  
  4369be:	jo     0x436968
  4369c0:	dec    edx
  4369c1:	jg     0x436985
  4369c3:	sbb    DWORD PTR [ebx],0xd3d3e57
  4369c9:	inc    ecx
  4369ca:	stc    
  4369cb:	stc    
  4369cc:	sti    
  4369cd:	out    0xc1,eax
  4369cf:	inc    eax
  4369d0:	add    BYTE PTR [eax],al
  4369d2:	stos   DWORD PTR es:[edi],eax
  4369d3:	aad    0xae
  4369d5:	and    BYTE PTR [edx-0x48],bh
  4369d8:	sub    al,0x38
  4369da:	sbb    dl,BYTE PTR ds:0x1a15c769
  4369e0:	dec    eax
  4369e1:	mov    ecx,0x40691cd7
  4369e6:	inc    edx
  4369e7:	mov    edi,0x3549e9f8
  4369ec:	mov    WORD PTR [eax],gs
  4369ee:	ins    BYTE PTR es:[edi],dx
  4369ef:	mov    ch,0x9
  4369f1:	out    0xde,al
  4369f3:	popf   
  4369f4:	test   BYTE PTR [ecx],ch
  4369f6:	sub    DWORD PTR [ecx],ecx
  4369f8:	icebp  
  4369f9:	add    ch,dl
  4369fb:	retf   0x9b8b
  4369fe:	inc    esi
  4369ff:	fiadd  DWORD PTR [eax]
  436a01:	add    ch,dl
  436a03:	div    ah
  436a05:	add    BYTE PTR [ecx+0x3e],ah
  436a08:	dec    eax
  436a09:	or     BYTE PTR [esi-0x26],al
  436a0c:	or     DWORD PTR [esi-0x3b38abc],esi
  436a12:	lea    esi,[edi-0x3a]
  436a15:	loopne 0x4369a4
  436a17:	hlt    
  436a18:	in     al,dx
  436a19:	inc    edx
  436a1a:	test   DWORD PTR [edi-0x4931fcf7],ebx
  436a20:	mov    dl,0xc5
  436a22:	xchg   ebp,eax
  436a23:	mov    eax,ds:0x8a1b88f7
  436a28:	cs lock adc al,0x90
  436a2c:	jle    0x436a75
  436a2e:	push   ds
  436a2f:	mov    bh,0xb2
  436a31:	int    0xa5
  436a33:	pop    edx
  436a34:	push   ds
  436a35:	icebp  
  436a36:	add    BYTE PTR [eax],al
  436a38:	dec    ebx
  436a39:	mov    eax,ds:0xde17840a
  436a3e:	add    BYTE PTR [eax],al
  436a40:	shr    DWORD PTR [esi],0x45
  436a43:	inc    edi
  436a44:	xor    BYTE PTR [ebx],bh
  436a46:	mov    dh,0x83
  436a48:	mov    dh,0xe2
  436a4a:	jne    0x436a0c
  436a4c:	lds    esp,FWORD PTR [eax-0xbc0fd22]
  436a52:	fmul   QWORD PTR [ecx-0x11897225]
  436a58:	xchg   esp,eax
  436a59:	pop    eax
  436a5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436a5b:	add    BYTE PTR [esi-0x2c7c9d1f],al
  436a61:	outs   dx,DWORD PTR ds:[esi]
  436a62:	or     BYTE PTR [edi],cl
  436a64:	or     BYTE PTR [eax+eax*4+0x4d],dh
  436a68:	xor    cl,BYTE PTR [edx+eax*2]
  436a6b:	(bad)  
  436a6c:	(bad)  
  436a6d:	loop   0x436a9c
  436a6f:	lock xchg ebp,eax
  436a71:	cwde   
  436a72:	jge    0x436a73
  436a74:	das    
  436a75:	dec    eax
  436a76:	pop    ds
  436a77:	cld    
  436a78:	das    
  436a79:	pushf  
  436a7a:	js     0x436a5b
  436a7c:	xor    bh,al
  436a7e:	add    al,0x9
  436a80:	cdq    
  436a81:	leave  
  436a82:	test   eax,0xba404b4b
  436a87:	int    0x4f
  436a89:	inc    eax
  436a8a:	das    
  436a8b:	fsub   st(5),st
  436a8d:	inc    edi
  436a8e:	mov    bh,0x8
  436a90:	sub    al,0x9f
  436a92:	jp     0x436ad3
  436a94:	sub    al,0x3e
  436a96:	push   edx
  436a97:	clc    
  436a98:	fs xchg edi,eax
  436a9a:	xor    edx,edi
  436a9c:	add    BYTE PTR [eax],al
  436a9e:	cld    
  436a9f:	(bad)  
  436aa0:	jl     0x436a5f
  436aa2:	lods   al,BYTE PTR ds:[esi]
  436aa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436aa4:	clc    
  436aa5:	jl     0x436a96
  436aa7:	(bad)  
  436aa8:	jne    0x436aed
  436aaa:	sti    
  436aab:	test   DWORD PTR [ebp+edi*8-0x65f7e40],ebx
  436ab2:	lock dec edi
  436ab4:	inc    esp
  436ab5:	mov    ebp,DWORD PTR [esi-0x34]
  436ab8:	jmp    0x436aa9
  436aba:	pop    esp
  436abb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436abc:	cmp    DWORD PTR [ebx-0x25],0xffffffc6
  436ac0:	out    dx,eax
  436ac1:	xor    DWORD PTR [ebx+0x380004c3],0xfffffffd
  436ac8:	add    bh,cl
  436aca:	jb     0x436b17
  436acc:	jl     0x436a98
  436ace:	fsub   QWORD PTR [esi]
  436ad0:	jl     0x436b1d
  436ad2:	ror    DWORD PTR [eax-0x37c83d7d],cl
  436ad8:	int3   
  436ad9:	mov    ebp,esi
  436adb:	ret    
  436adc:	jne    0x436b31
  436ade:	xchg   edi,eax
  436adf:	fild   QWORD PTR [esi+ebp*2-0x7a64288a]
  436ae6:	ins    BYTE PTR es:[edi],dx
  436ae7:	inc    edi
  436ae8:	popf   
  436ae9:	jns    0x436a97
  436aeb:	push   es
  436aec:	cld    
  436aed:	xchg   dl,dh
  436aef:	fst    QWORD PTR ds:0x61e48ac5
  436af5:	lods   eax,DWORD PTR ds:[esi]
  436af6:	mov    sp,0xdb0f
  436afa:	mov    eax,ds:0xec7b19e0
  436aff:	mov    cl,0x27
  436b01:	inc    ecx
  436b02:	add    BYTE PTR [eax],al
  436b04:	dec    ebx
  436b05:	fucomp st(1)
  436b07:	add    ebp,DWORD PTR [edi]
  436b09:	imul   ebx,DWORD PTR [edi+0x63a4421b],0x26e0d33f
  436b13:	and    al,0xfa
  436b15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436b16:	out    0x7e,eax
  436b18:	cmc    
  436b19:	loopne 0x436b04
  436b1b:	add    esp,DWORD PTR [edx-0x5cfc31c7]
  436b21:	fidiv  DWORD PTR [edx+0x40]
  436b24:	or     ecx,eax
  436b26:	jmp    0x436ba0
  436b28:	jo     0x436b08
  436b2a:	bound  esi,QWORD PTR [esi]
  436b2c:	xchg   edi,eax
  436b2d:	mov    ebx,0x658db015
  436b32:	es aaa 
  436b34:	jg     0x436af1
  436b36:	pop    ds
  436b37:	sbb    al,0x6a
  436b39:	cmp    DWORD PTR [esi+0x63ca5c03],edx
  436b3f:	ds push ebx
  436b41:	fbld   TBYTE PTR [esi]
  436b43:	and    al,0x18
  436b45:	and    edx,DWORD PTR [edx]
  436b47:	test   DWORD PTR [edx-0x27],0x5fc6a66f
  436b4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436b4f:	or     BYTE PTR [esi],ah
  436b51:	bound  ebx,QWORD PTR [ecx-0x3f444f03]
  436b57:	and    dh,0x2e
  436b5a:	in     al,dx
  436b5b:	add    ebp,DWORD PTR [edi]
  436b5d:	(bad)  
  436b5f:	jg     0x436b0b
  436b61:	in     al,0xe9
  436b63:	add    esp,DWORD PTR [ebx+eiz*2+0xfa]
  436b6a:	das    
  436b6b:	fiadd  WORD PTR [eax]
  436b6d:	cmp    DWORD PTR fs:[edx-0x76],ecx
  436b71:	call   0x74888871
  436b76:	mov    eax,ds:0x2ce903ae
  436b7b:	sub    al,0x8c
  436b7d:	mov    esi,0xb540670c
  436b82:	cld    
  436b83:	sub    al,al
  436b85:	jmp    0xea3c26dd
  436b8a:	fisub  WORD PTR [esi+0x40]
  436b8d:	jns    0x436b6b
  436b8f:	inc    ebx
  436b90:	add    al,BYTE PTR [ecx]
  436b92:	cmp    DWORD PTR [ebx],ecx
  436b94:	add    ecx,ebp
  436b96:	scas   eax,DWORD PTR es:[edi]
  436b97:	mov    ds:0x96687019,al
  436b9c:	jle    0x436b47
  436b9e:	sbb    ah,BYTE PTR [eax-0x4a]
  436ba1:	aam    0xd2
  436ba3:	mov    ah,0x8c
  436ba5:	push   ds
  436ba6:	aaa    
  436ba7:	addr16 dec eax
  436ba9:	dec    ebp
  436baa:	test   BYTE PTR ds:0xadb26451,cl
  436bb0:	add    ebp,ecx
  436bb2:	sub    al,0x2c
  436bb4:	xchg   BYTE PTR [esi],ch
  436bb6:	arpl   WORD PTR [esi],cx
  436bb8:	push   edx
  436bb9:	jb     0x436bdd
  436bbb:	ds shr cl,0xe2
  436bbf:	mov    edx,0x1d57e9f8
  436bc4:	pop    ebp
  436bc5:	sbb    DWORD PTR [eax+0x12],ebx
  436bc8:	dec    eax
  436bc9:	stc    
  436bca:	pop    esi
  436bcb:	inc    esp
  436bcc:	add    eax,DWORD PTR [ecx+0x4860000]
  436bd2:	add    ecx,ebp
  436bd4:	scas   eax,DWORD PTR es:[edi]
  436bd5:	mov    eax,ds:0x95f07019
  436bda:	jle    0x436c05
  436bdc:	mov    ds:0xca5c155f,al
  436be1:	mov    ah,0x84
  436be3:	int3   
  436be4:	mov    al,ds:0xb3008bdc
  436be9:	xchg   dl,al
  436beb:	pop    es
  436bec:	fiadd  WORD PTR gs:[eax]
  436bef:	add    BYTE PTR [ecx-0x79f98bc6],cl
  436bf5:	faddp  st(1),st
  436bf7:	pop    es
  436bf8:	jb     0x436bd8
  436bfa:	add    BYTE PTR [eax],al
  436bfc:	aad    0x2
  436bfe:	cmc    
  436bff:	push   es
  436c00:	(bad)  
  436c01:	shl    BYTE PTR [edi+0x7d],1
  436c04:	ss loopne 0x436bfe
  436c07:	inc    DWORD PTR [esi-0x14]
  436c0a:	arpl   WORD PTR [ebx+0x4d7db693],cx
  436c10:	cs xor eax,0xf9cff054
  436c16:	add    al,0x8b
  436c18:	sti    
  436c19:	mov    DWORD PTR [eax-0x1f0f62f8],eax
  436c1f:	mov    DWORD PTR [esi-0x2e],esp
  436c22:	jge    0x436c79
  436c24:	jmp    0x800e:0x250800c
  436c2b:	pop    edi
  436c2c:	cs xor eax,0x72ee3c72
  436c32:	sub    DWORD PTR [eax],eax
  436c34:	add    BYTE PTR [eax],al
  436c36:	push   es
  436c37:	aaa    
  436c38:	inc    esp
  436c39:	or     BYTE PTR [ebp+0xd],bh
  436c3c:	add    eax,0x7dd21e8b
  436c41:	pop    edi
  436c42:	(bad)  
  436c43:	ss jb  0x436c82
  436c46:	dec    edi
  436c47:	sub    cl,ch
  436c49:	mov    esi,esi
  436c4b:	ss inc ecx
  436c4d:	add    al,0x55
  436c4f:	jns    0x436c5a
  436c51:	cmp    DWORD PTR [ecx-0x4a],0x7f
  436c55:	dec    ebp
  436c56:	ss xor al,0x54
  436c59:	clc    
  436c5a:	aas    
  436c5b:	clc    
  436c5c:	hlt    
  436c5d:	movlps QWORD PTR [ecx],xmm2
  436c60:	add    al,0x0
  436c62:	das    
  436c63:	(bad)  
  436c64:	mov    ch,0x81
  436c66:	jae    0x436c14
  436c68:	add    al,0x0
  436c6a:	nop
  436c6b:	and    BYTE PTR [ebp-0x8e56907],bl
  436c71:	inc    DWORD PTR [eax-0x48abd2c4]
  436c77:	mov    BYTE PTR [eax+eax*1],0x2f
  436c7b:	hlt    
  436c7c:	mov    ds:0x903b0c1,eax
  436c81:	add    BYTE PTR [edi],ch
  436c83:	mov    DWORD PTR [eax+eax*1],0xbce17f2f
  436c8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436c8b:	out    dx,eax
  436c8c:	js     0x436ccf
  436c8e:	sti    
  436c8f:	sub    edi,eax
  436c91:	xchg   DWORD PTR [edi+edi*8-0x67d8183e],esi
  436c98:	mov    WORD PTR [eax],0xa600
  436c9d:	or     bl,BYTE PTR [ecx+0x3e10f935]
  436ca3:	test   DWORD PTR [eax],esp
  436ca5:	inc    esp
  436ca6:	and    bh,ah
  436ca8:	das    
  436ca9:	cwde   
  436caa:	cmp    BYTE PTR [edi+0x904c72a],0xc1
  436cb1:	les    esp,FWORD PTR [ebx-0x2cc3fcb5]
  436cb7:	int    0xf
  436cb9:	cmp    al,0x54
  436cbb:	push   esp
  436cbc:	ins    DWORD PTR es:[edi],dx
  436cbd:	inc    esp
  436cbe:	retf   
  436cbf:	or     BYTE PTR [edi+ebx*4],ch
  436cc2:	push   ebp
  436cc3:	jmp    eax
  436cc5:	mov    BYTE PTR [ecx*8+0x4c543bcf],0xa6
  436ccd:	fst    DWORD PTR [eax+ecx*2+0x488840c]
  436cd4:	scas   al,BYTE PTR es:[edi]
  436cd5:	cmp    eax,ebp
  436cd7:	mov    edi,0xb213bec6
  436cdc:	out    0xdd,al
  436cde:	jo     0x436d29
  436ce0:	mov    ds:0xe01b27f4,eax
  436ce5:	popa   
  436ce6:	sub    dl,BYTE PTR [ebx]
  436ce8:	mov    bl,0x9d
  436cea:	jmp    0xac13:0x3a862f03
  436cf1:	jne    0x436cdd
  436cf3:	add    ebp,DWORD PTR [edi]
  436cf5:	gs and al,ch
  436cf8:	nop
  436cf9:	in     eax,0x60
  436cfb:	push   ecx
  436cfc:	pop    ebx
  436cfd:	call   0x443a59
  436d02:	mov    al,0x2a
  436d04:	(bad)  
  436d05:	adc    bl,BYTE PTR [ebp+0x5350eba5]
  436d0b:	popfw  
  436d0d:	mov    edi,0x3e9de97
  436d12:	das    
  436d13:	lea    ecx,[edx]
  436d15:	(bad)  
  436d16:	hlt    
  436d17:	shl    DWORD PTR [edx+0x28c7be6],0x8f
  436d1e:	in     al,0xb1
  436d20:	test   eax,0xa8db3fac
  436d25:	mov    ?,edi
  436d27:	arpl   WORD PTR [edi],sp
  436d29:	push   eax
  436d2a:	mov    dl,0xe2
  436d2c:	popa   
  436d2d:	adc    bl,ch
  436d2f:	sub    DWORD PTR [esi-0x564d9374],edx
  436d35:	stos   DWORD PTR es:[edi],eax
  436d36:	aaa    
  436d37:	out    0x77,eax
  436d39:	ret    
  436d3a:	cli    
  436d3b:	sahf   
  436d3c:	repz leave 
  436d3e:	jge    0x436d58
  436d40:	xchg   ebx,eax
  436d41:	or     DWORD PTR [ebx+edx*2-0x21d0fc16],esi
  436d48:	push   0x20
  436d4a:	fcmovnu st,st(6)
  436d4c:	(bad)  
  436d4d:	xchg   DWORD PTR [eax],esi
  436d4f:	loope  0x436d3a
  436d51:	add    esi,DWORD PTR [esi]
  436d53:	jo     0x436d41
  436d55:	mov    ?,ebp
  436d57:	mov    eax,DWORD PTR [ecx]
  436d59:	mov    DWORD PTR [ecx+0x5f6ed523],ebp
  436d5f:	mov    edx,0xe5e4ea43
  436d64:	scas   al,BYTE PTR es:[edi]
  436d65:	and    al,0x0
  436d67:	add    BYTE PTR [ebx-0x91922e5],dh
  436d6d:	sahf   
  436d6e:	add    al,0x21
  436d70:	hlt    
  436d71:	mov    dh,0xf8
  436d73:	jmp    0x732516a4
  436d78:	ffreep st(1)
  436d7a:	test   BYTE PTR [edi],ch
  436d7c:	and    al,0x5f
  436d7e:	dec    esi
  436d7f:	xor    esp,esp
  436d81:	fadd   st,st(3)
  436d83:	cmp    dl,BYTE PTR [ebp+eiz*8-0x46915351]
  436d8a:	shl    DWORD PTR [edx-0x3],0x29
  436d8e:	mov    ebp,fs
  436d90:	stos   DWORD PTR es:[edi],eax
  436d91:	pop    edi
  436d92:	ds std 
  436d94:	ins    BYTE PTR es:[edi],dx
  436d95:	(bad)  
  436d96:	or     esi,ebp
  436d98:	out    0x9d,al
  436d9a:	add    al,0xac
  436d9c:	nop
  436d9d:	icebp  
  436d9e:	mov    esi,0xaee4c276
  436da3:	xor    al,0xe8
  436da5:	pusha  
  436da6:	ds aad 0xda
  436da9:	shr    BYTE PTR [eax+ebx*8],0xa4
  436dad:	fs mov ebp,0x8bde2cf2
  436db3:	mov    cl,0xec
  436db5:	mov    esi,0x9f66ee09
  436dba:	add    ah,BYTE PTR [esi-0x19]
  436dbd:	rol    BYTE PTR [eax],1
  436dbf:	jmp    0x98702e7f
  436dc4:	mov    ah,0x22
  436dc6:	fnsave [edx-0xd]
  436dc9:	jbe    0x436db5
  436dcb:	stc    
  436dcc:	add    BYTE PTR [eax],al
  436dce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436dcf:	and    al,0x41
  436dd1:	gs jmp 0x436dfe
  436dd4:	or     al,0x0
  436dd6:	cdq    
  436dd7:	in     al,0xf
  436dd9:	add    dh,dl
  436ddb:	fcmovu st,st(7)
  436ddd:	cmp    cl,dl
  436ddf:	fiadd  DWORD PTR [eax]
  436de1:	test   al,0xe6
  436de3:	into   
  436de4:	adc    eax,edi
  436de6:	sbb    DWORD PTR [esi+0x7d96000e],esp
  436dec:	cli    
  436ded:	inc    DWORD PTR [ecx]
  436def:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436df0:	add    cl,BYTE PTR [ebx]
  436df2:	xchg   dl,bl
  436df4:	add    cl,ch
  436df6:	aaa    
  436df7:	out    0x0,al
  436df9:	add    BYTE PTR [esi+0xd0f6d21],bl
  436dff:	pop    ds
  436e00:	or     edi,eax
  436e02:	(bad)  
  436e03:	mov    dl,0x10
  436e05:	jne    0x436d9d
  436e07:	fcmovu st,st(7)
  436e09:	or     BYTE PTR [edx-0x26],cl
  436e0c:	add    BYTE PTR [edi],cl
  436e0e:	clc    
  436e0f:	test   eax,0x6371e176
  436e14:	dec    edx
  436e15:	dec    eax
  436e16:	sbb    ebp,esp
  436e18:	adc    eax,DWORD PTR [eax]
  436e1a:	push   esi
  436e1b:	fidivr DWORD PTR [ebp+0x47]
  436e1e:	mov    ds,WORD PTR [edi-0x3f]
  436e21:	je     0x436dac
  436e23:	cdq    
  436e24:	call   0x9da8ad9c
  436e29:	and    al,0x16
  436e2b:	loop   0x436e2d
  436e2d:	add    BYTE PTR [ebp+0xf4d4],al
  436e33:	add    cl,dh
  436e35:	pop    ebp
  436e36:	cmp    BYTE PTR [esi+edx*1],al
  436e39:	loop   0x436e44
  436e3b:	mov    dh,0x14
  436e3d:	jg     0x436e8b
  436e3f:	cld    
  436e40:	lea    ecx,[edi+0x5b44e0c6]
  436e46:	ret    
  436e47:	or     BYTE PTR [edi-0x14],bl
  436e4a:	clc    
  436e4b:	add    ebp,esi
  436e4d:	xchg   edx,eax
  436e4e:	jno    0x436e98
  436e50:	das    
  436e51:	fld    st(2)
  436e53:	test   DWORD PTR [eax-0x1],esp
  436e56:	push   esp
  436e57:	dec    eax
  436e59:	mov    DWORD PTR [ecx*8+0x489390cf],0x4103880c
  436e64:	outs   dx,DWORD PTR ds:[esi]
  436e65:	pop    eax
  436e66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436e67:	(bad)  
  436e68:	mov    ecx,0xa0fff503
  436e6d:	xor    BYTE PTR [ecx+0x40],dl
  436e70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436e71:	cmp    al,0xcc
  436e73:	adc    eax,0x1c9c72f
  436e78:	and    edi,eax
  436e7a:	add    al,0x0
  436e7c:	mov    ah,0x84
  436e7e:	cmp    al,0xb8
  436e80:	mov    DWORD PTR cs:[eax+eax*1],0x1d4c275c
  436e88:	ins    BYTE PTR es:[edi],dx
  436e89:	xor    ah,cl
  436e8b:	test   eax,ebp
  436e8d:	jbe    0x436e14
  436e8f:	add    al,0xa7
  436e91:	inc    eax
  436e92:	int3   
  436e93:	mov    edi,0xb211bf46
  436e98:	add    BYTE PTR [eax],al
  436e9a:	jbe    0x436eca
  436e9c:	aas    
  436e9d:	hlt    
  436e9e:	add    al,0x5
  436ea0:	sbb    al,BYTE PTR [eax-0x61]
  436ea3:	dec    eax
  436ea4:	pop    ss
  436ea5:	cld    
  436ea6:	das    
  436ea7:	xchg   esp,eax
  436ea8:	or     bh,0x2c
  436eab:	mov    DWORD PTR [ecx+ecx*1],0x4b97c8d9
  436eb2:	sbb    eax,DWORD PTR [eax-0x39]
  436eb5:	int    0xf
  436eb7:	inc    eax
  436eb8:	dec    eax
  436eb9:	pop    eax
  436eba:	ins    DWORD PTR es:[edi],dx
  436ebb:	dec    eax
  436ebc:	mov    edi,0x557f2c08
  436ec1:	(bad)  
  436ec2:	clc    
  436ec3:	mov    BYTE PTR [ecx*8+0x5048400f],0xb6
  436ecb:	fnsave [esp+ebx*4]
  436ece:	ja     0x436ed1
  436ed0:	stos   DWORD PTR es:[edi],eax
  436ed1:	mov    esi,DWORD PTR [ebx]
  436ed3:	pop    edi
  436ed4:	arpl   sp,cx
  436ed6:	nop
  436ed7:	(bad)  
  436ed8:	loop   0x436ee8
  436eda:	jge    0x436e82
  436edc:	jno    0x436f27
  436ede:	mov    ebx,0x7817a7f8
  436ee3:	test   DWORD PTR [edx+0xf],edi
  436ee6:	lods   al,BYTE PTR ds:[esi]
  436ee7:	ins    DWORD PTR es:[edi],dx
  436ee8:	jmp    0x88c5:0x32692f03
  436eef:	in     eax,0x70
  436ef1:	push   ecx
  436ef2:	and    esp,0xffffff97
  436ef5:	int    0xa8
  436ef7:	and    bh,BYTE PTR [esi]
  436ef9:	bsr    esp,DWORD PTR [ebp+0x50eb]
  436f00:	mov    esp,DWORD PTR [esi-0x63]
  436f03:	mov    edi,0x3e9deb7
  436f08:	das    
  436f09:	xchg   ecx,eax
  436f0a:	dec    edx
  436f0b:	mov    esi,esp
  436f0d:	mov    ecx,0x90a3e2b2
  436f12:	adc    cl,BYTE PTR [ebx-0x52d6561c]
  436f18:	aas    
  436f19:	loope  0x436f43
  436f1b:	mov    esi,DWORD PTR [edi+0x68]
  436f1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436f1f:	xor    ebp,DWORD PTR [edx+0x7d0f71d9]
  436f25:	and    dl,BYTE PTR [esi]
  436f27:	(bad)  
  436f28:	in     al,dx
  436f29:	test   eax,0xe337ac29
  436f2e:	xchg   edi,eax
  436f2f:	ret    
  436f30:	and    bl,BYTE PTR [edi+0xc9dc623]
  436f36:	imul   esp,DWORD PTR [eax],0x13
  436f39:	(bad)  
  436f3b:	xchg   DWORD PTR [eax-0x21],ecx
  436f3e:	jmp    0xecafa546
  436f43:	mov    ah,ch
  436f45:	pop    DWORD PTR [ecx]
  436f47:	leave  
  436f48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436f49:	daa    
  436f4a:	aad    0xae
  436f4c:	jg     0x436f00
  436f4e:	inc    ebx
  436f4f:	jmp    0x1fab:0xa4aee5a4
  436f56:	fucom  st(6)
  436f58:	jp     0x436ef5
  436f5a:	add    al,0xa1
  436f5c:	fs mov bl,0xf8
  436f5f:	jmp    0x73251090
  436f64:	add    BYTE PTR [eax],al
  436f66:	pop    edi
  436f67:	mov    edx,0x5b24af84
  436f6c:	dec    esi
  436f6d:	jno    0x436f63
  436f6f:	rol    bl,1
  436f71:	cmp    dl,ah
  436f73:	in     eax,0xaf
  436f75:	lods   al,BYTE PTR ds:[esi]
  436f76:	fidiv  DWORD PTR [ecx+0xde162c1]
  436f7c:	mov    ebp,fs
  436f7e:	mov    bl,0x5b
  436f80:	ds cmp eax,0xee09c66b
  436f86:	loop   0x436f25
  436f88:	add    al,0xac
  436f8a:	enter  0xbee9,0xb6
  436f8e:	(bad)  
  436f8f:	in     al,0xae
  436f91:	mov    ah,0x6f
  436f93:	pop    ecx
  436f94:	ds adc eax,0x182cb99d
  436f9a:	sub    esp,DWORD PTR [ebp-0x43]
  436f9d:	repnz sub al,0xde
  436fa0:	mov    esi,DWORD PTR [ecx]
  436fa2:	imul   edi,DWORD PTR [ebx-0x651d11f7],0x2
  436fa9:	pushw  0xc9
  436fad:	jmp    0xd870288f
  436fb2:	mov    ah,0x26
  436fb4:	fst    QWORD PTR [ecx+0x62082a73]
  436fba:	push   0xb29bfe6
  436fbf:	retf   
  436fc0:	ins    DWORD PTR es:[edi],dx
  436fc1:	add    BYTE PTR [esi-0x26],dl
  436fc4:	fistp  WORD PTR [eax+0x4]
  436fc7:	fild   WORD PTR [eax]
  436fc9:	mov    eax,DWORD PTR [eax]
  436fcb:	add    dh,cl
  436fcd:	loopne 0x436f81
  436fcf:	rcl    BYTE PTR [edi-0x497cee7a],0xe0
  436fd6:	jg     0x437027
  436fd8:	adc    ah,BYTE PTR [edi+0x42]
  436fdb:	dec    eax
  436fdc:	sbb    eax,0xded60011
  436fe2:	jge    0x43702b
  436fe4:	(bad)  
  436fe5:	pop    edx
  436fe6:	shl    DWORD PTR [esi+eax*1-0x6b],0xe8
  436feb:	jae    0x436fd1
  436fed:	pop    ebp
  436fee:	jl     0x436fec
  436ff0:	xchg   esi,eax
  436ff1:	loope  0x43706f
  436ff3:	nop
  436ff4:	xchg   esp,eax
  436ff5:	fiadd  WORD PTR [eax]
  436ff7:	xadd   bh,bl
  436ffa:	stc    
  436ffb:	dec    ebp
  436ffc:	cli    
  436ffd:	fs retf 
  436fff:	shl    esi,cl
  437001:	pop    ds
  437002:	jbe    0x436fca
  437004:	jle    0x43706d
  437006:	push   esp
  437007:	clc    
  437008:	test   DWORD PTR [esi+0x2e],esi
  43700b:	ja     0x436fdb
  43700d:	int3   
  43700e:	fimul  DWORD PTR [ebx+0x1b926c9]
  437014:	push   esi
  437015:	fiadd  WORD PTR [eax]
  437017:	shl    DWORD PTR [esi],cl
  437019:	(bad)
  43701c:	gs popf 
  43701e:	clc    
  43701f:	inc    esi
  437020:	xchg   edx,eax
  437021:	ins    DWORD PTR es:[edi],dx
  437022:	fiadd  WORD PTR [ecx]
  437024:	mov    ecx,0x46000ea5
  437029:	cdq    
  43702a:	add    bl,BYTE PTR [eax]
  43702c:	inc    esi
  43702d:	fiadd  WORD PTR [eax]
  43702f:	add    DWORD PTR [eax],0x0
  437032:	fwait
  437033:	dec    ebp
  437034:	add    DWORD PTR [edi],ecx
  437036:	xchg   edx,eax
  437037:	and    esi,edi
  437039:	inc    DWORD PTR [esi]
  43703b:	addr16 dec esp
  43703d:	loopne 0x43706e
  43703f:	fadd   QWORD PTR [edi-0x10]
  437042:	mov    ah,0xf8
  437044:	dec    eax
  437045:	xor    eax,0x254bf1ee
  43704a:	out    dx,al
  43704b:	cs aas 
  43704d:	hlt    
  43704e:	xor    al,0x0
  437050:	icebp  
  437051:	jno    0x43708d
  437053:	inc    esp
  437054:	push   ebp
  437055:	rol    BYTE PTR [edi+eax*8+0x4],0x0
  43705a:	sub    BYTE PTR [edx],bh
  43705c:	pop    eax
  43705d:	call   eax
  43705f:	(bad)  
  437060:	mov    DWORD PTR [ecx-0x1],ecx
  437063:	mov    eax,ebx
  437065:	jb     0x437097
  437067:	mov    ebx,es
  437069:	test   DWORD PTR [eax+0x6b],ebp
  43706c:	add    DWORD PTR [ecx+0x7],ecx
  43706f:	ds aas 
  437071:	hlt    
  437072:	push   esp
  437073:	jg     0x43701e
  437075:	add    eax,0x24d068b4
  43707a:	les    eax,FWORD PTR [di+0x30]
  43707e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43707f:	adc    BYTE PTR [eax-0x77150579],0x49
  437086:	out    dx,eax
  437087:	sub    eax,0x634dc47
  43708c:	push   cs
  43708d:	adc    esp,DWORD PTR [esi+eax*1+0x52b40aa9]
  437094:	lods   al,BYTE PTR ds:[esi]
  437095:	and    eax,0x2c770000
  43709a:	cmp    eax,0xb082a640
  43709f:	xchg   edx,ebp
  4370a1:	jmp    0xf047:0x3c43438a
  4370a8:	add    al,0x6
  4370aa:	push   cs
  4370ab:	add    esp,DWORD PTR [esi+eax*1-0x63c4bc75]
  4370b2:	int3   
  4370b3:	xchg   DWORD PTR [edx-0x49],edi
  4370b6:	or     BYTE PTR [ebx+0x3],0xde
  4370ba:	adc    cl,ah
  4370bc:	mov    dl,0x1a
  4370be:	ror    BYTE PTR [ebp+0x49631e66],cl
  4370c4:	jecxz  0x4370ca
  4370c6:	adc    eax,0x9622a8ac
  4370cb:	scas   eax,DWORD PTR es:[edi]
  4370cc:	daa    
  4370cd:	(bad)
  4370d0:	push   0x34962de
  4370d5:	fs (bad) 
  4370d7:	add    al,0xaa
  4370d9:	sbb    dl,BYTE PTR [edx-0x68e1d874]
  4370df:	dec    ecx
  4370e0:	(bad)  [esi+0x25]
  4370e3:	lods   al,BYTE PTR ds:[esi]
  4370e4:	cmp    al,0xc2
  4370e6:	imul   ebx,DWORD PTR [ebx],0x6f
  4370e9:	fsubp  st(6),st
  4370eb:	xor    dh,0xde
  4370ee:	jmp    0xd61c5ef6
  4370f3:	add    ebp,DWORD PTR [edi]
  4370f5:	fiadd  WORD PTR [eax-0x154f5e30]
  4370fb:	xchg   BYTE PTR [eax],al
  4370fd:	add    BYTE PTR [esi+ebp*4],dl
  437100:	jmp    0x2f03:0xe965ab0a
  437107:	gs popf 
  437109:	stos   DWORD PTR es:[edi],eax
  43710a:	test   eax,0x278baa20
  43710f:	push   ds
  437110:	aaa    
  437111:	dec    ecx
  437112:	jg     0x43717a
  437114:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437115:	stos   DWORD PTR es:[edi],eax
  437116:	outs   dx,BYTE PTR ds:[esi]
  437117:	fmul   st,st(5)
  437119:	add    ebp,DWORD PTR [edi]
  43711b:	ficom  WORD PTR [eax]
  43711d:	hlt    
  43711e:	pop    ecx
  43711f:	mov    al,0xea
  437121:	xchg   dh,dl
  437123:	in     eax,0xe9
  437125:	or     dh,BYTE PTR [ebx+0x2f03ea6d]
  43712b:	pop    ebp
  43712c:	add    ah,ah
  43712e:	retf   
  43712f:	mul    DWORD PTR [eax+eiz*1+0xb]
  437133:	fiadd  WORD PTR [eax]
  437135:	push   0x46
  437137:	mov    dl,0x1
  437139:	fisub  WORD PTR [eax+0x2ce9021f]
  43713f:	in     eax,0xae
  437141:	jmp    0x4370f8
  437143:	and    esi,ebp
  437145:	(bad)  
  437146:	mul    BYTE PTR [ecx-0x6357d41f]
  43714c:	or     DWORD PTR [eax+0x3f],esi
  43714f:	mov    dh,0x4
  437151:	mov    eax,ds:0x3b21b4a9
  437156:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437157:	pop    ecx
  437158:	ds leave 
  43715a:	rcr    DWORD PTR [ecx+esi*8],1
  43715d:	jb     0x4371c6
  43715f:	out    0x1,al
  437161:	sub    BYTE PTR [eax],al
  437163:	add    bh,bl
  437165:	mov    al,0x3f
  437167:	cmc    
  437168:	mov    ebx,0xec64e11b
  43716d:	sub    ch,BYTE PTR [edx]
  43716f:	jb     0x4371d8
  437171:	(bad)  
  437172:	mov    WORD PTR [esi],ss
  437174:	mov    bl,0x1f
  437176:	sub    al,0xa1
  437178:	mov    cl,0x35
  43717a:	adc    ecx,ebp
  43717c:	pop    ebx
  43717d:	and    BYTE PTR [ebp-0x12],ch
  437180:	les    esp,FWORD PTR [eax-0x46d31701]
  437186:	inc    BYTE PTR [eax-0x17]
  437189:	rol    DWORD PTR [eax],cl
  43718b:	jmp    0x724c9541
  437190:	aas    
  437191:	mov    dh,0x8a
  437193:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437194:	je     0x4371ee
  437196:	inc    edx
  437197:	stc    
  437198:	mov    cl,0x35
  43719a:	adc    ecx,ebp
  43719c:	mov    cl,0x1b
  43719e:	icebp  
  43719f:	jo     0x437190
  4371a1:	mov    ebp,0xd13f2a8c
  4371a6:	sbb    eax,0xdea5e9
  4371ab:	bound  esi,QWORD PTR [ecx+0x6f]
  4371ae:	loop   0x4371b0
  4371b0:	push   esi
  4371b1:	fdiv   DWORD PTR [edi-0x1f660275]
  4371b7:	or     BYTE PTR [edi+0x16ff017a],dl
  4371bd:	(bad)  [edi-0x4825e120]
  4371c3:	mov    ebx,ebp
  4371c5:	call   0x9c15:0x18e0
  4371cc:	cs inc edi
  4371ce:	(bad)  
  4371cf:	fiadd  WORD PTR [ebx+ecx*4]
  4371d2:	dec    ebx
  4371d3:	loop   0x437196
  4371d5:	inc    eax
  4371d6:	push   cs
  4371d7:	mov    bl,0x73
  4371d9:	inc    eax
  4371da:	(bad)  
  4371db:	or     DWORD PTR [ebp+0x33],0xc7f288bd
  4371e2:	leave  
  4371e3:	mov    cl,0xf8
  4371e5:	inc    esi
  4371e7:	pop    ecx
  4371e8:	jp     0x4371f2
  4371ea:	(bad)  
  4371eb:	in     eax,0x7c
  4371ed:	mov    ss,esi
  4371ef:	fiadd  DWORD PTR [eax]
  4371f1:	xor    DWORD PTR [ecx],0xffffffaa
  4371f4:	clc    
  4371f5:	push   cs
  4371f6:	dec    edx
  4371f7:	pop    esi
  4371f8:	add    DWORD PTR [eax],eax
  4371fa:	xchg   esi,eax
  4371fb:	pop    ecx
  4371fc:	sti    
  4371fd:	and    BYTE PTR [ebp+0x127d75b8],ah
  437203:	fimul  DWORD PTR [ecx]
  437205:	test   BYTE PTR ds:0x910000da,bl
  43720b:	or     al,0xf7
  43720d:	(bad)  
  43720e:	mov    ds:0x15ce7e46,eax
  437213:	jp     0x43724c
  437215:	or     DWORD PTR [eax-0x1e],0x7f
  437219:	push   ebp
  43721a:	push   ds
  43721b:	(bad)  
  43721d:	adc    DWORD PTR [eax],0xffffffba
  437220:	data16 fimul WORD PTR [ebp-0xb]
  437224:	adc    al,0x74
  437226:	call   0x4400:0x2f084c61
  43722d:	sbb    BYTE PTR [eax],al
  43722f:	add    BYTE PTR [edi],ah
  437231:	dec    edx
  437232:	inc    esp
  437233:	add    BYTE PTR [eax-0x41],dh
  437236:	out    dx,eax
  437237:	push   DWORD PTR [eax]
  437239:	les    eax,FWORD PTR [ebp-0x55053ff]
  43723f:	or     BYTE PTR [ecx+0x18f9aa97],ch
  437245:	sbb    BYTE PTR [edx+0x3a8d10f9],0x55
  43724c:	push   0xed5b9740
  437251:	mov    edi,0xaf728504
  437256:	test   DWORD PTR [ebx+0x7],ecx
  437259:	das    
  43725a:	dec    esp
  43725b:	or     al,0xb4
  43725d:	add    cl,BYTE PTR [ebp+0x27403f87]
  437263:	cld    
  437264:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437265:	out    dx,eax
  437266:	in     al,dx
  437267:	xchg   BYTE PTR [edi-0x3d],bh
  43726a:	mov    esi,DWORD PTR [ecx+0xb]
  43726d:	cmc    
  43726e:	mov    ebx,DWORD PTR [ecx+0x7]
  437271:	lock push esp
  437273:	(bad)  
  437274:	mov    eax,0xa45904b7
  437279:	bound  ebp,QWORD PTR [edi]
  43727b:	mov    esi,0xd4cdb737
  437280:	pop    esp
  437281:	xor    eax,0xb73b01c1
  437286:	add    al,0x0
  437288:	push   0x88ffbc82
  43728d:	mov    bh,0x4
  43728f:	in     eax,0x28
  437291:	add    al,0x37
  437293:	fadd   DWORD PTR [eax]
  437295:	add    BYTE PTR [edx+0x24],bh
  437298:	cdq    
  437299:	stc    
  43729a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43729b:	or     BYTE PTR [eax*4+0x488b1efa],0x33
  4372a3:	inc    eax
  4372a4:	aas    
  4372a5:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4372a7:	fdivp  st(1),st
  4372a9:	mov    esp,?
  4372ab:	test   eax,0x571f4b71
  4372b0:	mov    edx,0xc22cc3ff
  4372b5:	add    esi,DWORD PTR [eax-0x41753df3]
  4372bb:	jmp    0x1af7702c
  4372c0:	or     bl,ah
  4372c2:	push   0xb3ce6dce
  4372c7:	in     al,0x6a
  4372c9:	pushf  
  4372ca:	xor    al,0x2b
  4372cc:	or     BYTE PTR [ebx-0x1b237f9],al
  4372d2:	sub    DWORD PTR [ebx],0xffffffd6
  4372d5:	(bad)  
  4372d6:	jl     0x4372d9
  4372d8:	jae    0x43731b
  4372da:	mulps  xmm2,XMMWORD PTR ds:0xbddad70c
  4372e1:	xchg   edi,eax
  4372e2:	out    0x62,al
  4372e4:	stos   BYTE PTR es:[edi],al
  4372e5:	adc    BYTE PTR [ebx-0x5b],al
  4372e8:	out    0xf5,eax
  4372ea:	shr    BYTE PTR [edx+ebp*8-0x71999dcb],1
  4372f1:	xchg   edi,eax
  4372f2:	(bad)  
  4372f3:	lods   al,BYTE PTR ds:[esi]
  4372f4:	daa    
  4372f5:	mov    ecx,esp
  4372f7:	or     ch,BYTE PTR [esp+ecx*1+0x592f0000]
  4372fe:	in     eax,dx
  4372ff:	or     esi,DWORD PTR [edx-0x111465de]
  437305:	loope  0x437369
  437307:	cmp    DWORD PTR [edi-0x6e0c4008],ecx
  43730d:	and    dh,dl
  43730f:	add    al,0xe5
  437311:	shr    eax,1
  437313:	and    esp,DWORD PTR ss:[ecx-0x39]
  437317:	or     ebp,DWORD PTR [edi]
  437319:	push   edi
  43731a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43731b:	mov    bl,0xfb
  43731d:	out    dx,al
  43731e:	pop    esp
  43731f:	mov    ebx,0x6a00fae3
  437324:	cmp    dh,cl
  437326:	add    BYTE PTR [edx-0x407422d8],bl
  43732c:	sub    BYTE PTR [ebx+0x40],ah
  43732f:	add    DWORD PTR [ecx+ebx*4+0x53],edx
  437333:	mov    ecx,0xe8fe0394
  437338:	sub    al,0xc3
  43733a:	or     BYTE PTR [edx-0x17],dh
  43733d:	(bad)  [ebx-0x33fcdb6a]
  437343:	cwde   
  437344:	pop    esi
  437345:	mov    dh,0xa
  437347:	int3   
  437348:	sub    al,0xde
  43734a:	mov    DWORD PTR [esi],ebp
  43734c:	adc    esp,DWORD PTR [ebp+0x3f]
  43734f:	sbb    DWORD PTR [ebp+ebx*8+0x2ffdd183],esi
  437356:	add    eax,0xd66fa6
  43735b:	jmp    0xc1c7518c
  437360:	add    BYTE PTR [eax],al
  437362:	xor    ch,BYTE PTR [edi]
  437364:	add    BYTE PTR [esi-0x17ff2991],ch
  43736a:	sub    al,0xde
  43736c:	mov    esi,DWORD PTR [esi]
  43736e:	das    
  43736f:	lods   eax,DWORD PTR ds:[esi]
  437370:	fiadd  DWORD PTR [edx]
  437372:	cli    
  437373:	stc    
  437374:	shr    BYTE PTR [edx-0x75],cl
  437377:	push   ds
  437378:	test   BYTE PTR [ecx-0x54722adb],dl
  43737e:	sub    eax,0xb2330917
  437383:	mov    WORD PTR [ecx+0x3de2ce9],es
  437389:	cwde   
  43738a:	sub    eax,0x376a350d
  43738f:	mov    es,WORD PTR [ecx]
  437391:	jo     0x4373ed
  437393:	cli    
  437394:	ins    DWORD PTR es:[edi],dx
  437395:	in     eax,dx
  437396:	scas   eax,DWORD PTR es:[edi]
  437397:	xchg   ecx,eax
  437398:	ins    DWORD PTR es:[edi],dx
  437399:	out    0xad,eax
  43739b:	daa    
  43739c:	add    eax,0xfce8200
  4373a1:	mov    edx,DWORD PTR [ebx+0x49c08467]
  4373a7:	pop    esi
  4373a8:	mov    ds:0x5b5409fe,al
  4373ad:	pop    ebx
  4373ae:	into   
  4373af:	inc    edi
  4373b0:	cli    
  4373b1:	jmp    FWORD PTR [ecx]
  4373b3:	hlt    
  4373b4:	jge    0x43739b
  4373b6:	jnp    0x437355
  4373b8:	or     DWORD PTR [eax],eax
  4373ba:	int    0x1d
  4373bc:	fstp   DWORD PTR [esi-0x73]
  4373bf:	hlt    
  4373c0:	jge    0x4373a7
  4373c2:	retf   
  4373c3:	pushf  
  4373c4:	or     DWORD PTR [eax],eax
  4373c6:	add    BYTE PTR [eax],al
  4373c8:	pop    esi
  4373c9:	push   ecx
  4373ca:	cli    
  4373cb:	dec    DWORD PTR [ecx]
  4373cd:	icebp  
  4373ce:	jge    0x4373b5
  4373d0:	imul   esp,DWORD PTR [eax-0x4b56fff7],0x35
  4373d7:	add    al,bl
  4373d9:	mov    ch,0x35
  4373db:	add    BYTE PTR [edx-0x3d],bl
  4373de:	xor    eax,0x35c10600
  4373e3:	add    BYTE PTR [ebx],ah
  4373e5:	les    esi,FWORD PTR ds:0x35c3a500
  4373eb:	add    BYTE PTR [edx+0x150035c0],dh
  4373f1:	xchg   edx,eax
  4373f2:	xor    eax,0x3591aa00
  4373f7:	add    BYTE PTR [edi-0x71],dl
  4373fa:	xor    eax,0x358e8800
  4373ff:	add    bl,al
  437401:	mov    WORD PTR ds:0x358c8f00,?
  437407:	add    BYTE PTR [esi-0x1cffca71],bh
  43740d:	lea    esi,ds:0x358d4d00
  437413:	add    BYTE PTR [ecx],al
  437415:	lea    esi,ds:0xc8a82f00
  43741b:	cmp    al,0x2f
  43741d:	push   ss
  43741e:	sar    DWORD PTR [edi+ebp*1],1
  437421:	imul   eax,ebp,0x3c
  437424:	das    
  437425:	imul   eax,ebp,0xdc432f3c
  43742b:	cmp    al,0x0
  43742d:	add    BYTE PTR [edi],ch
  43742f:	and    ah,bl
  437431:	cmp    al,0x2f
  437433:	jnp    0x43740e
  437435:	cmp    al,0x2f
  437437:	sub    dl,bl
  437439:	cmp    al,0x2f
  43743b:	outs   dx,BYTE PTR ds:[esi]
  43743c:	sar    BYTE PTR [edi+ebp*1],1
  43743f:	pop    edx
  437440:	sar    BYTE PTR [edi+ebp*1],1
  437443:	mov    ds:0xfc2f3ccf,al
  437448:	iret   
  437449:	cmp    al,0x2f
  43744b:	fcmovne st,st(7)
  43744d:	cmp    al,0x2f
  43744f:	jp     0x43741f
  437451:	cmp    al,0x2f
  437453:	inc    edx
  437454:	sar    DWORD PTR [edi+ebp*1],cl
  437457:	cmp    edx,edx
  437459:	cmp    al,0x2f
  43745b:	arpl   dx,dx
  43745d:	cmp    al,0x2f
  43745f:	pop    edx
  437460:	sar    BYTE PTR [edi+ebp*1],cl
  437463:	jae    0x437425
  437465:	int3   
  437466:	sti    
  437467:	jnp    0x437429
  437469:	int3   
  43746a:	repz retf 0xec89
  43746e:	cmp    DWORD PTR [edi+eax*1],0x849aa08
  437475:	cmp    esi,DWORD PTR [ecx+eax*1-0x34107d07]
  43747c:	mov    BYTE PTR [ecx+ebp*2+0x3bc777a3],0x90
  437484:	mov    DWORD PTR [eax+0x63],eax
  437487:	inc    edx
  437488:	les    esi,FWORD PTR [ebp+esi*1-0x39]
  43748c:	mov    DWORD PTR [edx+0x47],eax
  43748f:	(bad)  
  437490:	(bad)  
  437491:	iret   
  437492:	add    BYTE PTR [eax],al
  437494:	lods   al,BYTE PTR ds:[esi]
  437495:	fisub  WORD PTR ds:0xf618b20b
  43749b:	mov    ch,bl
  43749d:	cmc    
  43749e:	bound  edi,QWORD PTR ds:0x94bc0f53
  4374a4:	pop    edi
  4374a5:	pop    ebp
  4374a6:	or     ebp,DWORD PTR es:[esi+0x20]
  4374aa:	(bad)  
  4374ab:	add    ebp,DWORD PTR [edi]
  4374ad:	fsubp  st(1),st
  4374af:	rcr    BYTE PTR [eax+0x2bc18508],1
  4374b5:	fisub  WORD PTR [ecx-0x6b]
  4374b8:	inc    esi
  4374b9:	test   eax,0x9be43517
  4374be:	out    0x3,al
  4374c0:	imul   ebx,DWORD PTR [edx-0x659c38ea],0x2e
  4374c7:	(bad)  
  4374c8:	sti    
  4374c9:	cdq    
  4374ca:	es (bad) 
  4374cc:	repz cdq 
  4374ce:	xchg   ebp,eax
  4374cf:	mov    BYTE PTR [ebx],cl
  4374d1:	push   ebp
  4374d2:	popf   
  4374d3:	or     ebp,DWORD PTR [edx-0x7c429b2b]
  4374d9:	int    0x72
  4374db:	cmp    DWORD PTR [edi],ebx
  4374dd:	push   ebp
  4374de:	sub    dh,al
  4374e0:	push   0x55
  4374e2:	sub    eax,0xbf0e6100
  4374e7:	mov    ch,0x6a
  4374e9:	mov    ds:0x54a230e6,al
  4374ee:	sbb    eax,0xd612b3f4
  4374f3:	xor    al,0xaa
  4374f5:	adc    eax,0x35fe
  4374fa:	mov    dl,0xd
  4374fc:	retf   0xc634
  4374ff:	mov    ebp,DWORD PTR [ebx-0x38]
  437502:	sub    ecx,DWORD PTR [ebx]
  437504:	stos   DWORD PTR es:[edi],eax
  437505:	shl    bl,0x99
  437508:	scas   al,BYTE PTR es:[edi]
  437509:	sar    BYTE PTR [ebx-0x67],0xa6
  43750d:	shl    BYTE PTR [ebx-0x67],0x1
  437511:	sbb    al,0x18
  437513:	mov    edx,0x61931c8c
  437518:	inc    edx
  437519:	stc    
  43751a:	mov    bh,0x9d
  43751c:	ins    DWORD PTR es:[edi],dx
  43751d:	add    al,BYTE PTR [eax]
  43751f:	or     eax,0xca3a6219
  437524:	push   edx
  437525:	bound  esi,QWORD PTR [esi]
  437527:	rcl    BYTE PTR [edx+0x72],cl
  43752a:	es into 
  43752c:	push   edx
  43752d:	jb     0x437555
  43752f:	ficom  DWORD PTR [edx-0x68]
  437532:	mov    ebp,0x5725848d
  437537:	add    eax,esp
  437539:	jb     0x437531
  43753b:	int    0x33
  43753d:	cmp    esi,DWORD PTR [eax+0x68]
  437540:	outs   dx,BYTE PTR ds:[esi]
  437541:	in     al,dx
  437542:	imul   ecx,DWORD PTR [ebx],0x2b27950d
  437548:	leave  
  437549:	push   es
  43754a:	pop    esi
  43754b:	imul   ecx,DWORD PTR [esp+edx*4-0x6773e5ec],0xa48c1808
  437556:	adc    BYTE PTR [eax],bl
  437558:	mov    WORD PTR [eax],gs
  43755a:	jmp    0x437575
  43755c:	clc    
  43755d:	mov    ecx,0xa2a90000
  437562:	adc    DWORD PTR [eax+esi*8],esi
  437565:	call   0xb5c5:0x9ab09dc5
  43756c:	test   al,0x9a
  43756e:	lds    ebp,FWORD PTR [ebp+0x1cc59aa0]
  437574:	pop    eax
  437575:	mov    edx,0x2ad3248c
  43757a:	jns    0x437575
  43757c:	sub    al,0x61
  43757e:	inc    esi
  43757f:	in     eax,dx
  437580:	inc    ecx
  437581:	push   cs
  437582:	adc    eax,0xb320138
  437587:	bound  ebp,QWORD PTR [edx+ebx*8-0x9]
  43758b:	add    dh,al
  43758d:	pusha  
  43758e:	mov    ebp,0x7e9f4308
  437593:	inc    eax
  437594:	push   0x4c
  437596:	rol    DWORD PTR [ebx-0x78a5c36],1
  43759c:	adc    esi,eax
  43759e:	add    DWORD PTR [ebx],ecx
  4375a0:	push   esi
  4375a1:	pusha  
  4375a2:	mov    edi,0x26a0c3ff
  4375a7:	rol    bl,cl
  4375a9:	mov    al,ds:0x6722ccc5
  4375ae:	(bad)
  4375b1:	(bad)
  4375b5:	sub    bh,ah
  4375b7:	div    DWORD PTR [esi]
  4375b9:	push   esi
  4375ba:	repz je 0x437638
  4375bd:	pop    esi
  4375be:	popf   
  4375bf:	and    al,0x56
  4375c1:	fild   DWORD PTR [eax]
  4375c3:	add    BYTE PTR [eax],al
  4375c5:	add    BYTE PTR [eax],bl
  4375c7:	mov    ds:0xdc3f73f6,al
  4375cc:	mov    dl,0x11
  4375ce:	in     eax,0x6a
  4375d0:	js     0x4375b4
  4375d2:	and    esp,ebx
  4375d4:	add    BYTE PTR [eax],al
  4375d6:	inc    edi
  4375d7:	inc    ebx
  4375d8:	or     DWORD PTR [ebx],esi
  4375da:	or     ah,BYTE PTR [esi]
  4375dc:	test   eax,0x37e25622
  4375e1:	dec    esi
  4375e2:	pop    ebx
  4375e3:	add    BYTE PTR [esi+0x57],0x85
  4375e7:	dec    esp
  4375e8:	and    DWORD PTR [edi],ecx
  4375ea:	test   BYTE PTR [ecx+0x29d6fff6],ch
  4375f0:	sti    
  4375f1:	shl    ecx,0xde
  4375f4:	jge    0x4375f5
  4375f6:	aad    0xdb
  4375f8:	jge    0x4375ca
  4375fa:	xchg   DWORD PTR [edi+0x11],eax
  4375fd:	mov    ebp,esi
  4375ff:	call   0xfa:0x815708de
  437606:	das    
  437607:	mov    ch,0x4
  437609:	jg     0x4375d8
  43760b:	push   edi
  43760c:	std    
  43760d:	jmp    FWORD PTR [edi]
  43760f:	sub    al,0xf9
  437611:	xchg   edx,eax
  437612:	xlat   BYTE PTR ds:[ebx]
  437613:	sahf   
  437614:	inc    esp
  437615:	add    BYTE PTR [ecx+ecx*4+0x67],bl
  437619:	test   al,0x45
  43761b:	cmc    
  43761c:	cld    
  43761d:	test   BYTE PTR [edi-0xb],ah
  437620:	xchg   ebp,eax
  437621:	sbb    BYTE PTR [ecx+esi*4],bh
  437624:	addr16 test al,0x4d
  437627:	jne    0x43762d
  437629:	and    eax,DWORD PTR [eax]
  43762b:	add    BYTE PTR [eax-0x4c],dh
  43762e:	add    al,0x0
  437630:	sbb    al,0x89
  437632:	jg     0x4375dc
  437634:	adc    DWORD PTR [ebp+0x4],esi
  437637:	sub    eax,0xbe75b8fe
  43763c:	outs   dx,BYTE PTR ds:[esi]
  43763d:	sbb    al,0xed
  43763f:	and    cl,BYTE PTR [eax-0x4c]
  437642:	add    al,0x0
  437644:	mov    ah,0xc0
  437646:	jg     0x4375f0
  437648:	adc    DWORD PTR [ebp+0x4],esi
  43764b:	test   DWORD PTR [ebp-0xb],edx
  43764e:	xchg   ebp,eax
  43764f:	or     BYTE PTR [esi+0x2f0091d8],ch
  437655:	mov    bh,0xcd
  437657:	add    edi,DWORD PTR [edx+0x2f3fd71f]
  43765d:	inc    eax
  43765e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43765f:	mov    edi,0x3cde014
  437664:	mov    ds:0x2f3fde4f,al
  437669:	ss sahf 
  43766b:	stc    
  43766c:	das    
  43766d:	mov    bh,0x4
  43766f:	sub    eax,0x2a5c0233
  437674:	outs   dx,DWORD PTR ds:[esi]
  437675:	mov    bh,0xcd
  437677:	ds daa 
  437679:	inc    eax
  43767a:	mov    ah,0xbf
  43767c:	lds    eax,FWORD PTR [edi-0x2111278b]
  437682:	xchg   edx,eax
  437683:	sti    
  437684:	inc    ecx
  437685:	rcl    DWORD PTR [edi+0x68de2f03],0xa5
  43768c:	mov    dh,0xde
  43768e:	jmp    0xb2437696
  437693:	retf   0x5b54
  437696:	dec    ebp
  437697:	push   ds
  437698:	jmp    0x50dd:0x42433cd4
  43769f:	fisub  WORD PTR [edx-0x55]
  4376a2:	enter  0x2b9,0xd5
  4376a6:	sbb    al,0x43
  4376a8:	xchg   edx,eax
  4376a9:	in     eax,0x38
  4376ab:	fiadd  WORD PTR [ecx+edx*4]
  4376ae:	das    
  4376af:	fsubp  st(1),st
  4376b1:	aam    0x3c
  4376b3:	pop    ebx
  4376b4:	xchg   edx,eax
  4376b5:	loope  0x4376d7
  4376b7:	fdivp  st(2),st
  4376b9:	xor    ch,BYTE PTR [ebx]
  4376bb:	pop    ecx
  4376bc:	sub    al,0xc2
  4376be:	inc    edi
  4376bf:	into   
  4376c0:	cld    
  4376c1:	nop
  4376c2:	das    
  4376c3:	fsubp  st(1),st
  4376c5:	jl     0x4376f2
  4376c7:	pop    ebx
  4376c8:	push   edx
  4376c9:	jmp    0xada654c6
  4376ce:	jo     0x437689
  4376d0:	loop   0x437654
  4376d2:	or     ah,BYTE PTR [ebp-0xed0fc16]
  4376d8:	(bad)  [esi-0x39]
  4376db:	imul   DWORD PTR [ecx+0x2987aa03]
  4376e1:	pushf  
  4376e2:	daa    
  4376e3:	icebp  
  4376e4:	in     eax,0x70
  4376e6:	xlat   BYTE PTR ds:[ebx]
  4376e7:	jmp    FWORD PTR [ecx]
  4376e9:	add    al,0x78
  4376eb:	ror    bh,0x4
  4376ee:	das    
  4376ef:	ficomp WORD PTR [edx]
  4376f1:	or     BYTE PTR [ebp+esi*2+0x4410],bh
  4376f8:	das    
  4376f9:	icebp  
  4376fa:	sub    ah,dh
  4376fc:	mov    bl,0x8d
  4376fe:	add    DWORD PTR [eax-0x6e74324b],ebp
  437704:	repnz mov edx,0xa68d6809
  43770a:	add    ecx,ebp
  43770c:	sub    al,0x5b
  43770e:	or     eax,0x4100537c
  437713:	jmp    0xea3bf9cb
  437718:	sub    al,0xde
  43771a:	xor    edx,ebp
  43771c:	pop    ds
  43771d:	jbe    0x43774a
  43771f:	sub    DWORD PTR [ebx],ebp
  437721:	pop    ebx
  437722:	fldcw  WORD PTR [eax-0x2cc3a5c]
  437728:	push   DWORD PTR [ebp+0x23]
  43772b:	test   eax,0xe9f8012c
  437730:	sub    al,0xde
  437732:	xor    esi,ebp
  437734:	mov    bh,0x75
  437736:	daa    
  437737:	test   eax,0xd551f32c
  43773c:	aad    0x63
  43773e:	ret    0x5b41
  437741:	push   edi
  437743:	jmp    0xedcf5574
  437748:	mov    bh,0x75
  43774a:	pop    ds
  43774b:	test   eax,0x28db5b2c
  437750:	xchg   esp,eax
  437751:	aad    0x81
  437753:	or     bh,BYTE PTR [eax-0x216ff22]
  437759:	fist   WORD PTR [ebp-0xaffffaf]
  43775f:	jecxz  0x437761
  437761:	(bad)  
  437762:	lds    esp,FWORD PTR [ebx-0x14]
  437765:	rcr    ebp,1
  437767:	fist   WORD PTR [ebp+0xe40e91]
  43776d:	push   0xe901a5ce
  437772:	sub    al,0xf1
  437774:	cld    
  437775:	jae    0x4376fb
  437777:	clc    
  437778:	inc    eax
  437779:	add    dh,dl
  43777b:	pusha  
  43777c:	mov    eax,0xf91ad520
  437781:	sub    eax,0xffffffbf
  437784:	jge    0x437756
  437786:	dec    ebp
  437787:	ja     0x437741
  437789:	jmp    0x7d47:0x8de9ac6
  437790:	cli    
  437791:	add    dh,al
  437793:	fistp  QWORD PTR [ebp+0x14]
  437796:	and    eax,DWORD PTR [edi]
  437798:	and    eax,DWORD PTR [eax-0x6a]
  43779b:	pop    edx
  43779c:	(bad)  
  43779d:	inc    DWORD PTR [esi+0x723300df]
  4377a3:	cs test eax,0x7dda562a
  4377a9:	fcom   DWORD PTR [edi+0x48]
  4377ac:	sbb    DWORD PTR [ebx],esi
  4377ae:	sub    BYTE PTR [esi],0xa9
  4377b1:	and    al,dh
  4377b3:	fbld   TBYTE PTR [ebx]
  4377b5:	call   DWORD PTR [esi-0x21]
  4377b8:	add    BYTE PTR [ebx],dh
  4377ba:	adc    BYTE PTR [esi-0x57],0x2e
  4377be:	xchg   bh,bl
  4377c0:	and    eax,0x1a000051
  4377c5:	sub    BYTE PTR [edi+0x23aeeec1],dh
  4377cb:	call   DWORD PTR [esi-0x21]
  4377ce:	add    BYTE PTR [ebx+0x26a95652],cl
  4377d4:	xchg   bh,bl
  4377d6:	jge    0x4377b2
  4377d8:	push   edi
  4377d9:	dec    eax
  4377da:	or     DWORD PTR [ecx+0x15435],eax
  4377e0:	push   es
  4377e1:	nop
  4377e2:	add    al,0x9d
  4377e4:	outs   dx,BYTE PTR ds:[esi]
  4377e5:	test   DWORD PTR [eax],edi
  4377e7:	add    BYTE PTR [ebp+0x2eebb875],cl
  4377ed:	lea    eax,[ebx*4+0x38bf9e]
  4377f4:	das    
  4377f5:	mov    ss:0x4b52ff9,eax
  4377fb:	sub    eax,0x2a55022b
  437800:	outs   dx,DWORD PTR ds:[esi]
  437801:	mov    ch,0x35
  437803:	or     DWORD PTR [edx-0x37067798],ebp
  437809:	aaa    
  43780a:	xchg   DWORD PTR [edi*1-0x112d861b],eax
  437811:	dec    esi
  437812:	add    eax,DWORD PTR [ebp+0x7d0387b0]
  437818:	outs   dx,BYTE PTR ds:[esi]
  437819:	mov    eax,0x4b6ef879
  43781e:	in     eax,dx
  43781f:	jle    0x4377b1
  437821:	and    edi,ebp
  437823:	jmp    FWORD PTR [edi]
  437825:	inc    eax
  437826:	sar    DWORD PTR [edx-0x65290000],1
  43782c:	inc    esp
  43782d:	add    BYTE PTR [esp+ebx*1+0x3627e5c4],dh
  437834:	mov    ds:0x4b52ff9,al
  437839:	sub    eax,0x2655322b
  43783e:	out    dx,eax
  43783f:	mov    ah,0x79
  437841:	fsubr  DWORD PTR [esi+0xf]
  437844:	in     eax,0x2c
  437846:	adc    ecx,DWORD PTR [edx]
  437848:	push   ebp
  437849:	push   ds
  43784a:	out    dx,eax
  43784b:	mov    ah,0xdf
  43784d:	clc    
  43784e:	das    
  43784f:	mov    ch,0x4
  437851:	sub    eax,0x2a5539fb
  437856:	out    dx,eax
  437857:	mov    ah,0x81
  437859:	jmp    0xe09a:0xc1797d33
  437860:	and    eax,0x10a9b255
  437865:	push   ss
  437866:	mov    edi,0x3c0f4eb8
  43786b:	mov    DWORD PTR [ebx-0x1620ff22],0xd29f2f03
  437875:	sti    
  437876:	inc    ebx
  437877:	fidiv  DWORD PTR [ebx+ebx*2+0x49]
  43787b:	push   ds
  43787c:	jmp    0xff94:0xc72b7542
  437883:	add    BYTE PTR [ebx+0x1592e3bf],ch
  437889:	jns    0x437866
  43788b:	push   ebp
  43788c:	adc    eax,0xac000000
  437891:	xchg   edi,eax
  437892:	adc    eax,0x359e0a06
  437897:	ret    0xde23
  43789a:	bound  esi,QWORD PTR [esi]
  43789c:	aas    
  43789d:	push   ebp
  43789e:	sbb    eax,0x7cfb88fc
  4378a3:	mov    WORD PTR [esi-0x6f0053fd],ss
  4378a9:	xchg   ebp,eax
  4378aa:	pop    ebp
  4378ab:	and    DWORD PTR [ebx-0x47fc1622],0x2f03e8c0
  4378b5:	or     BYTE PTR [ebp+0x27],ah
  4378b8:	dec    ebx
  4378b9:	ficomp WORD PTR [edx]
  4378bb:	xchg   esi,eax
  4378bc:	int    0x56
  4378be:	sbb    al,BYTE PTR [ecx+0x16b0da6f]
  4378c4:	pop    esp
  4378c5:	push   ebx
  4378c6:	ins    BYTE PTR es:[edi],dx
  4378c7:	jnp    0x4378f1
  4378c9:	fsubp  st(1),st
  4378cb:	dec    edx
  4378cc:	and    eax,0x1203e9de
  4378d1:	test   al,0x88
  4378d3:	jp     0x4378d4
  4378d5:	pop    esp
  4378d6:	sub    al,BYTE PTR [edi]
  4378d8:	call   0xa9c18e07
  4378dd:	and    ah,ah
  4378df:	add    ebp,DWORD PTR [edi]
  4378e1:	fild   DWORD PTR [bp+di]
  4378e4:	das    
  4378e5:	fisub  WORD PTR [edi+eiz*1+0x4b]
  4378e9:	fiadd  WORD PTR [eax]
  4378eb:	mov    edx,0xb98a3ba2
  4378f0:	scas   eax,DWORD PTR es:[edi]
  4378f1:	popf   
  4378f2:	std    
  4378f3:	das    
  4378f4:	add    BYTE PTR [eax],al
  4378f6:	push   ds
  4378f7:	lods   eax,DWORD PTR ds:[esi]
  4378f8:	mov    ecx,0xde2ce8
  4378fd:	dec    edi
  4378fe:	push   0x20
  437900:	(bad)  
  437901:	in     eax,0x2c
  437903:	fidiv  WORD PTR [ebx]
  437905:	test   eax,0xd7a5205a
  43790a:	sub    al,0xde
  43790c:	mov    DWORD PTR [ebx+0x6b],ebp
  43790f:	int3   
  437910:	add    cl,ch
  437912:	inc    ebx
  437913:	and    BYTE PTR [ecx-0x7621d301],dh
  437919:	imul   ecx,DWORD PTR [ebx-0x34],0x0
  43791d:	jmp    0x9e08dc78
  437922:	out    0x91,eax
  437924:	lds    esi,FWORD PTR [ebp-0x523a6e29]
  43792a:	xlat   BYTE PTR ds:[ebx]
  43792b:	xchg   ecx,eax
  43792c:	lds    ebx,FWORD PTR [eax+ecx*1]
  43792f:	mov    dl,0x52
  437931:	(bad)  
  437932:	sti    
  437933:	or     eax,0x132ce90d
  437938:	dec    edi
  437939:	jb     0x437959
  43793b:	(bad)  
  43793c:	mov    esi,DWORD PTR [ebp+0x3]
  43793f:	add    cl,BYTE PTR [ecx+ebp*8]
  437942:	sub    al,0x55
  437944:	add    eax,0xf504dbff
  437949:	add    dl,BYTE PTR [ecx+0x338887d6]
  43794f:	fiadd  WORD PTR [eax]
  437951:	lods   al,BYTE PTR ds:[esi]
  437952:	pop    edi
  437953:	pop    ecx
  437954:	lods   eax,DWORD PTR ds:[esi]
  437955:	jno    0x43796a
  437957:	fild   DWORD PTR [eax]
  437959:	jmp    0x41f4795e
  43795e:	mov    DWORD PTR [ebp-0x21075fd7],esi
  437964:	jge    0x437930
  437966:	scas   eax,DWORD PTR es:[edi]
  437967:	add    BYTE PTR [ecx],ah
  437969:	or     eax,0x90a89f15
  43796e:	lds    esi,FWORD PTR [edx-0x21]
  437971:	into   
  437972:	sbb    BYTE PTR [edx+0x1458dc5a],cl
  437978:	push   es
  437979:	fdivr  QWORD PTR [ebp-0x4c]
  43797c:	jle    0x437975
  43797e:	std    
  43797f:	call   esi
  437981:	xchg   ecx,eax
  437982:	xchg   esp,eax
  437983:	push   es
  437984:	push   ds
  437985:	scas   al,BYTE PTR es:[edi]
  437986:	clc    
  437987:	call   FWORD PTR [ecx]
  437989:	fnstenv [edi]
  43798b:	mov    ebx,DWORD PTR [edx+0x23]
  43798e:	push   ebp
  43798f:	or     edx,esi
  437991:	fstp   TBYTE PTR [ebp+0x55]
  437994:	xchg   edx,eax
  437995:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437996:	mov    cl,0x14
  437998:	cmp    DWORD PTR [ecx+esi*4+0x2dfd591c],esp
  43799f:	rol    DWORD PTR [edx+ebx*1+0x74],cl
  4379a3:	adc    ecx,DWORD PTR ds:0x128af4ee
  4379a9:	fstp   DWORD PTR [eax+0x14]
  4379ac:	xchg   bl,bl
  4379ae:	cs pushf 
  4379b0:	cwde   
  4379b1:	repz or al,0x0
  4379b4:	xchg   esi,eax
  4379b5:	int    0x2a
  4379b7:	mov    edi,DWORD PTR [ebx-0x94b805d]
  4379bd:	idiv   ch
  4379bf:	inc    DWORD PTR [eax]
  4379c1:	add    BYTE PTR [esi+0x20],dl
  4379c4:	xchg   ecx,eax
  4379c5:	push   eax
  4379c6:	pop    edx
  4379c7:	fild   DWORD PTR [eax]
  4379c9:	mov    edx,DWORD PTR [edi]
  4379cb:	fdivr  DWORD PTR [edi+0x2da39b89]
  4379d1:	retf   0x5980
  4379d4:	jle    0x437a23
  4379d6:	adc    ah,BYTE PTR [edx]
  4379d8:	test   DWORD PTR [eax-0x75f8e],esi
  4379de:	jo     0x4379d0
  4379e0:	jge    0x4379c7
  4379e2:	das    
  4379e3:	push   0xffffffbf
  4379e5:	test   DWORD PTR [edx-0x2f],edi
  4379e8:	jbe    0x437a35
  4379ea:	daa    
  4379eb:	ja     0x437a62
  4379ed:	xchg   esp,eax
  4379ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4379ef:	inc    eax
  4379f0:	idiv   edi
  4379f2:	or     BYTE PTR [edi+esi*2-0x1d],cl
  4379f6:	(bad)  
  4379f7:	hlt    
  4379f8:	je     0x437996
  4379fa:	mov    edi,0xf0fff618
  4379ff:	fisub  WORD PTR ds:0xbde9d285
  437a05:	int3   
  437a06:	repz inc eax
  437a08:	mov    ecx,0xb968ebcc
  437a0d:	int3   
  437a0e:	jecxz  0x437a80
  437a10:	mov    ecx,0x75c1fbcc
  437a15:	in     al,dx
  437a16:	lods   al,BYTE PTR ds:[esi]
  437a17:	pusha  
  437a18:	aad    0x84
  437a1a:	pop    esi
  437a1b:	mov    cl,0x2d
  437a1d:	test   DWORD PTR [esi],edx
  437a1f:	sub    al,0x3c
  437a21:	or     BYTE PTR [esi+0x8594e1],dh
  437a27:	add    BYTE PTR [esi],bh
  437a29:	ds sub ah,bl
  437a2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437a2d:	lds    eax,FWORD PTR [eax]
  437a2f:	push   edx
  437a30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437a31:	leave  
  437a32:	pushf  
  437a33:	test   esi,ebx
  437a35:	mov    esp,0x85068531
  437a3a:	int    0xc6
  437a3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437a3d:	popa   
  437a3e:	cwde   
  437a3f:	or     DWORD PTR [eax+0x6ec675e5],edi
  437a45:	adc    ch,ch
  437a47:	add    al,0x75
  437a49:	cmp    eax,0xb5243c75
  437a4e:	add    al,0x87
  437a50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437a51:	je     0x437a48
  437a53:	dec    DWORD PTR [eax+0x3d]
  437a56:	jne    0x437a9c
  437a58:	xor    al,0xb5
  437a5a:	add    al,0x87
  437a5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437a5d:	fnsave [ecx+0x719e30fc]
  437a63:	jl     0x437ae0
  437a65:	jmp    0x66eb7e53
  437a6a:	mov    edx,0x719e18fc
  437a6f:	jl     0x437aec
  437a71:	jmp    0x66f37e5f
  437a76:	xchg   edx,eax
  437a77:	cld    
  437a78:	add    BYTE PTR [esi-0xd9c839d],bl
  437a7e:	jmp    0x72b62486
  437a83:	daa    
  437a84:	xor    bl,dh
  437a86:	jmp    0x6148645f
  437a8b:	aaa    
  437a8c:	add    BYTE PTR [eax],al
  437a8e:	stos   BYTE PTR es:[edi],al
  437a8f:	loopne 0x437b03
  437a91:	jnp    0x437b0e
  437a93:	bnd jmp 0x29d7949c
  437a99:	jnp    0x437aff
  437a9b:	mov    dh,0x61
  437a9d:	push   es
  437a9e:	mov    ebx,0x308c1567
  437aa3:	xchg   edi,eax
  437aa4:	aad    0x5
  437aa6:	das    
  437aa7:	(bad)  
  437aa9:	jbe    0x437aa4
  437aab:	fsubp  st(1),st
  437aad:	add    esp,DWORD PTR [edx+esi*2-0x21d5d88e]
  437ab4:	jmp    0x34d55733
  437ab9:	mov    BYTE PTR [edx+0x69dcea9d],0xe1
  437ac0:	xor    edi,DWORD PTR [edx-0x24]
  437ac3:	mov    DWORD PTR [ecx+0x36],esi
  437ac6:	pop    edi
  437ac7:	outs   dx,BYTE PTR ds:[esi]
  437ac8:	arpl   WORD PTR [esi],si
  437aca:	pop    ebx
  437acb:	imul   edi,ecx,0x5b2a9ff8
  437ad1:	add    eax,0x7ca65526
  437ad6:	dec    ecx
  437ad7:	push   ds
  437ad8:	add    edx,esi
  437ada:	xchg   DWORD PTR [eax],ebx
  437adc:	jmp    DWORD PTR [esi-0x63755945]
  437ae2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437ae3:	add    BYTE PTR [edx+0x3b9ca3ad],cl
  437ae9:	mov    esp,0x624016c4
  437aee:	xor    DWORD PTR [edx+0x65f],eax
  437af4:	nop
  437af5:	es xor eax,0x33de2cf2
  437afb:	push   esp
  437afd:	lods   eax,DWORD PTR ds:[esi]
  437afe:	jne    0x437ae3
  437b00:	jnp    0x437a8e
  437b02:	sub    al,0xde
  437b04:	je     0x437b1f
  437b06:	loope  0x437b7a
  437b08:	dec    DWORD PTR [ebp+0x8]
  437b0b:	sahf   
  437b0c:	imul   DWORD PTR [ecx+0x4]
  437b0f:	lahf   
  437b10:	loopne 0x437b57
  437b12:	enter  0x54e8,0x46
  437b16:	psubsw mm5,QWORD PTR [ebx+eiz*2]
  437b1a:	inc    esi
  437b1b:	xchg   ebp,eax
  437b1c:	scas   al,BYTE PTR es:[edi]
  437b1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437b1e:	ins    DWORD PTR es:[edi],dx
  437b1f:	fld    st(1)
  437b21:	dec    ebp
  437b22:	dec    ebp
  437b23:	js     0x437b52
  437b25:	fwait
  437b26:	into   
  437b27:	out    dx,al
  437b28:	add    DWORD PTR [edi-0xff886fe],ebp
  437b2e:	add    cl,ch
  437b30:	adc    eax,0x3e72f519
  437b35:	xchg   esi,eax
  437b36:	test   BYTE PTR [edi+ebx*4],ah
  437b39:	loope  0x437b32
  437b3b:	and    al,0xa7
  437b3d:	adc    BYTE PTR [ebp+0x7ce6a964],al
  437b43:	sub    eax,0x6c00de2b
  437b48:	not    DWORD PTR ds:0xde2ce235
  437b4e:	mov    ebx,DWORD PTR [eax+esi*4-0x3affa0dc]
  437b55:	and    eax,0x3c49
  437b5a:	cmp    eax,0xcb0000e0
  437b5f:	or     eax,0xe04d3c49
  437b64:	add    BYTE PTR [ebp+0x37],dh
  437b67:	adc    eax,0xe016249d
  437b6c:	add    BYTE PTR [eax],al
  437b6e:	xchg   ebp,eax
  437b6f:	js     0x437b68
  437b71:	dec    eax
  437b72:	mov    al,0x60
  437b74:	das    
  437b75:	add    BYTE PTR [edx-0x6d7c9c97],dl
  437b7b:	fidivr DWORD PTR [edx]
  437b7d:	or     edx,DWORD PTR [esi]
  437b7f:	loopne 0x437b77
  437b81:	mov    ecx,0x16509
  437b86:	pusha  
  437b87:	loope  0x437b15
  437b89:	dec    eax
  437b8a:	dec    edx
  437b8b:	xchg   edi,eax
  437b8c:	clc    
  437b8d:	dec    DWORD PTR [ebp+0x55]
  437b90:	arpl   WORD PTR [ecx],ax
  437b92:	stc    
  437b93:	pusha  
  437b94:	jmp    0x437b98
  437b96:	inc    ebx
  437b97:	imul   edi,DWORD PTR [edx-0x49],0x85f4ce3d
  437b9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437b9f:	jmp    0x437c0c
  437ba1:	mov    DWORD PTR [ebx],ecx
  437ba3:	jbe    0x437baf
  437ba5:	mov    bh,0xc9
  437ba7:	sbb    bh,BYTE PTR [esp+esi*8+0x13]
  437bab:	fs ins DWORD PTR es:[edi],dx
  437bad:	push   esp
  437bae:	or     eax,0x28df0d6
  437bb3:	pop    ss
  437bb4:	push   ebp
  437bb5:	or     eax,DWORD PTR [esi-0x69647421]
  437bbb:	fild   WORD PTR [eax]
  437bbd:	add    BYTE PTR [eax],al
  437bbf:	add    BYTE PTR ds:0x1bfff4d1,cl
  437bc5:	jb     0x437c3d
  437bc7:	out    dx,al
  437bc8:	sbb    BYTE PTR [edx],0x74
  437bcb:	loopne 0x437bda
  437bcd:	aad    0xe8
  437bcf:	jg     0x437c00
  437bd1:	in     al,0xef
  437bd3:	mov    al,0xdb
  437bd5:	inc    DWORD PTR [ecx]
  437bd7:	mov    ebx,ebx
  437bd9:	lar    esi,WORD PTR ds:0x84e55145
  437be0:	gs loopne 0x437b82
  437be3:	test   DWORD PTR [eax+eax*1],esi
  437be6:	sub    eax,ebx
  437be8:	and    BYTE PTR [eax+esi*8],bh
  437beb:	test   BYTE PTR [eax],bh
  437bed:	sub    al,0x85
  437bef:	(bad)  
  437bf0:	fcomp  DWORD PTR [esi+eiz*8]
  437bf3:	call   FWORD PTR [eax]
  437bf5:	arpl   WORD PTR [ebp+0x12],si
  437bf8:	adc    BYTE PTR [edx-0x78],dl
  437bfb:	test   DWORD PTR [edx+0xf737a91],ecx
  437c01:	or     bh,BYTE PTR [edi+0x73]
  437c04:	mov    ebx,0xacec08ff
  437c09:	mov    bl,0x3
  437c0b:	inc    esi
  437c0c:	mov    dh,0x39
  437c0e:	cdq    
  437c0f:	jae    0x437bca
  437c11:	rcr    DWORD PTR [esi],cl
  437c13:	push   ebp
  437c14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437c15:	mov    eax,ds:0x50e3bd20
  437c1a:	mov    ecx,0xb948fbcc
  437c1f:	int3   
  437c20:	repz stc 
  437c22:	jns    0x437c10
  437c24:	add    BYTE PTR [eax],al
  437c26:	lods   al,BYTE PTR ds:[esi]
  437c27:	pop    eax
  437c28:	in     eax,dx
  437c29:	dec    esp
  437c2a:	pop    ecx
  437c2b:	fdivr  QWORD PTR [ecx-0x9]
  437c2e:	mov    ah,0x9c
  437c30:	out    dx,al
  437c31:	mov    al,0xe8
  437c33:	xchg   cl,dl
  437c35:	int    0x70
  437c37:	rol    DWORD PTR [ecx+edi*8-0x78819c70],0xf2
  437c3f:	adc    al,0x70
  437c41:	inc    esi
  437c42:	sub    BYTE PTR [edx],al
  437c44:	adc    eax,DWORD PTR [edx+esi*4]
  437c47:	inc    esp
  437c48:	or     BYTE PTR [eax],cl
  437c4a:	mov    dh,0xdd
  437c4c:	jae    0x437c52
  437c4e:	das    
  437c4f:	fisub  WORD PTR [esp+edx*1+0x62]
  437c53:	push   edx
  437c54:	dec    edi
  437c55:	test   DWORD PTR [edi],ebp
  437c57:	fidivr WORD PTR [edi-0x17851486]
  437c5d:	jle    0x437cc1
  437c5f:	jmp    0x80e9:0xde2f7471
  437c66:	outs   dx,BYTE PTR ds:[esi]
  437c67:	jecxz  0x437c13
  437c69:	jp     0x437c1f
  437c6b:	cdq    
  437c6c:	jae    0x437c75
  437c6e:	aaa    
  437c6f:	addr16 mov ch,0x8f
  437c72:	stos   BYTE PTR es:[edi],al
  437c73:	cmp    ebx,DWORD PTR [edx]
  437c75:	jns    0x437c51
  437c77:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  437c79:	xchg   DWORD PTR [esi],esp
  437c7b:	push   ecx
  437c7c:	jecxz  0x437cbf
  437c7e:	inc    edx
  437c7f:	scas   eax,DWORD PTR es:[edi]
  437c80:	jne    0x437c81
  437c82:	cmp    ebx,DWORD PTR [ebp-0x4fbde28a]
  437c88:	gs stc 
  437c8a:	add    BYTE PTR [eax],al
  437c8c:	mov    ds,edi
  437c8e:	jne    0x437d0c
  437c90:	imul   esp,esp,0xffffffe9
  437c93:	add    ecx,edx
  437c95:	leave  
  437c96:	fs ret 
  437c98:	arpl   ax,si
  437c9a:	adc    bh,BYTE PTR [edi]
  437c9c:	xlat   BYTE PTR ds:[ebx]
  437c9d:	adc    dh,dl
  437c9f:	sbb    eax,0x75f62c6
  437ca4:	sub    esi,ebx
  437ca6:	jmp    0x66a532c8
  437cab:	stc    
  437cac:	mov    al,0x99
  437cae:	xchg   ebx,eax
  437caf:	out    dx,al
  437cb0:	sub    edx,DWORD PTR [esp+esi*8-0x70ffd7fc]
  437cb7:	jl     0x437d28
  437cb9:	in     al,0xe9
  437cbb:	add    ecx,DWORD PTR [edx-0x517af81f]
  437cc1:	mov    ds:0xcd2f03f4,al
  437cc6:	add    BYTE PTR [ebx+0x64f91cf5],bl
  437ccc:	(bad)  
  437ccd:	or     eax,0xdde6a00b
  437cd2:	add    cl,ch
  437cd4:	fld    DWORD PTR [edi]
  437cd6:	add    al,0x42
  437cd8:	dec    edx
  437cd9:	rol    bl,cl
  437cdb:	aam    0x56
  437cdd:	push   eax
  437cde:	(bad)  
  437cdf:	call   0xb8c95b10
  437ce4:	test   eax,0x3b700983
  437ce9:	cdq    
  437cea:	clc    
  437ceb:	jmp    0x6b3985a9
  437cf0:	add    BYTE PTR [eax],al
  437cf2:	imul   ebx,DWORD PTR [edx-0x6da6e203],0x3453696e
  437cfc:	pop    esp
  437cfd:	bound  esi,QWORD PTR [ecx-0x3fca3bcc]
  437d03:	test   eax,0xa9b82dc5
  437d08:	lds    ebx,FWORD PTR [edi+esi*2+0x9fd848a]
  437d0f:	sub    cl,BYTE PTR [edi+0x72]
  437d12:	popa   
  437d13:	out    0xaf,eax
  437d15:	aas    
  437d16:	sub    ebx,ecx
  437d18:	sar    BYTE PTR [esi],cl
  437d1a:	test   al,0x90
  437d1c:	shl    BYTE PTR [edi+ebx*2],0x97
  437d20:	clc    
  437d21:	(bad)  
  437d22:	lods   al,BYTE PTR ds:[esi]
  437d23:	pusha  
  437d24:	push   esi
  437d25:	mov    ch,0x9e
  437d27:	pop    ds
  437d28:	add    BYTE PTR [esi-0x17026f1a],ch
  437d2e:	sub    al,0xde
  437d30:	jge    0x437cf4
  437d32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437d33:	in     al,0xb9
  437d35:	jae    0x437d62
  437d37:	fiadd  WORD PTR [eax]
  437d39:	scas   al,BYTE PTR es:[edi]
  437d3a:	xchg   ax,ax
  437d3c:	add    al,0xe9
  437d3e:	sub    al,0xde
  437d40:	jge    0x437d42
  437d42:	mov    cl,0xec
  437d44:	mov    BYTE PTR ds:0x8300dc8b,dh
  437d4a:	enter  0x41e3,0x89
  437d4e:	jnp    0x437d5c
  437d50:	cmp    BYTE PTR [ebp-0x2],0x58
  437d54:	clc    
  437d55:	inc    DWORD PTR [eax]
  437d57:	add    BYTE PTR [esi-0x24],dl
  437d5a:	jge    0x437d5b
  437d5c:	int    0xde
  437d5e:	lock ud1 ebx,DWORD PTR [esi+edi*2]
  437d63:	jne    0x437d6f
  437d65:	loope  0x437d2c
  437d67:	mov    DWORD PTR [ebx+0x0],edi
  437d6a:	cmp    BYTE PTR [ebp-0x6],0x6a
  437d6e:	push   esp
  437d6f:	cld    
  437d70:	cmp    eax,0xd087c31
  437d75:	adc    eax,0xe639840a
  437d7a:	add    BYTE PTR [eax],al
  437d7c:	std    
  437d7d:	mov    dh,0xf0
  437d7f:	(bad)  
  437d81:	inc    ebp
  437d82:	add    DWORD PTR [eax],eax
  437d84:	push   ss
  437d85:	outs   dx,DWORD PTR ds:[esi]
  437d86:	popf   
  437d87:	and    al,0x16
  437d89:	fadd   QWORD PTR [eax]
  437d8b:	add    BYTE PTR [ecx],dl
  437d8d:	push   ebp
  437d8e:	mov    ch,0xb0
  437d90:	sub    cl,0x0
  437d93:	add    BYTE PTR [ebp+0x63],bl
  437d96:	mov    ch,0x16
  437d98:	(bad)  
  437d99:	fld    TBYTE PTR [esi+0xdbc610]
  437d9f:	sub    ebx,DWORD PTR [ecx+0x137ebed8]
  437da5:	jmp    0x437d58
  437da7:	mov    ah,0x46
  437da9:	xchg   edi,eax
  437daa:	(bad)  
  437dab:	inc    esi
  437dad:	test   DWORD PTR [ebp-0x2a],edi
  437db0:	push   0x5e8bd72f
  437db5:	jmp    0x13:0x53260962
  437dbc:	add    BYTE PTR [eax],al
  437dbe:	das    
  437dbf:	test   DWORD PTR [ebx],edx
  437dc1:	mov    dl,0xb7
  437dc3:	sub    eax,0xc2f001a
  437dc8:	aam    0x13
  437dca:	mov    bh,0xb9
  437dcc:	or     eax,0x13b8eff9
  437dd1:	mov    dl,0x97
  437dd3:	into   
  437dd4:	sbb    DWORD PTR [eax],eax
  437dd6:	das    
  437dd7:	or     al,0xcc
  437dd9:	adc    esi,DWORD PTR [ebp+edx*2-0x69c477f4]
  437de0:	xchg   DWORD PTR [eax+0x48f93],edx
  437de6:	jle    0x437d9d
  437de8:	mov    bh,0xff
  437dea:	inc    eax
  437deb:	test   DWORD PTR [edi+edi*8],eax
  437dee:	loopne 0x437da8
  437df0:	es (bad) 
  437df2:	leave  
  437df3:	repz jno 0x437d81
  437df6:	jnp    0x437e73
  437df8:	je     0x437e5c
  437dfa:	mov    dh,0x34
  437dfc:	mov    esp,0x87852f12
  437e01:	jae    0x437e0e
  437e03:	fmul   QWORD PTR [edi]
  437e05:	bound  esi,QWORD PTR [eax+edi*1-0x7aca834c]
  437e0c:	add    al,0x62
  437e0e:	fsubr  st(2),st
  437e10:	jmp    0x1a101d1b
  437e15:	add    BYTE PTR [edi],ch
  437e17:	test   BYTE PTR [ecx+0x27],dl
  437e1a:	cmp    BYTE PTR [ecx-0x69647774],0x4
  437e21:	add    BYTE PTR [eax],al
  437e23:	add    BYTE PTR [eax],ah
  437e25:	add    ch,dl
  437e27:	clc    
  437e28:	enter  0x6c9f,0xf
  437e2c:	sub    eax,DWORD PTR [ebp+0x7fc18304]
  437e32:	add    ch,0x2e
  437e35:	test   DWORD PTR [esi*1+0x118dde22],eax
  437e3c:	stos   DWORD PTR es:[edi],eax
  437e3d:	inc    ebx
  437e3e:	jmp    0xdf90:0x56e72f03
  437e45:	pop    ss
  437e46:	in     al,0x3
  437e48:	das    
  437e49:	push   edi
  437e4a:	fiadd  DWORD PTR [ebx]
  437e4c:	das    
  437e4d:	(bad)  
  437e4f:	jp     0x437e01
  437e51:	sub    BYTE PTR [edx-0x73],dh
  437e54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437e55:	pop    ecx
  437e56:	rol    BYTE PTR [ebx],1
  437e58:	das    
  437e59:	shr    DWORD PTR [esi],cl
  437e5b:	add    dl,bh
  437e5d:	out    0x8e,al
  437e5f:	cwde   
  437e60:	lahf   
  437e61:	sbb    esp,esp
  437e63:	add    ebp,DWORD PTR [edi]
  437e65:	lods   eax,DWORD PTR gs:[esi]
  437e67:	outs   dx,DWORD PTR ds:[esi]
  437e68:	int    0xaa
  437e6a:	dec    esp
  437e6b:	(bad)  
  437e6c:	mul    ebp
  437e6e:	jo     0x437e37
  437e70:	dec    esp
  437e71:	jmp    eax
  437e73:	xchg   ebx,eax
  437e74:	ja     0x437e65
  437e76:	jmp    0xf672307e
  437e7b:	lea    ebp,[edi+0x2f03f056]
  437e81:	data16 out 0x12,al
  437e84:	stos   BYTE PTR es:[edi],al
  437e85:	sbb    edi,esi
  437e87:	add    al,BYTE PTR [eax]
  437e89:	add    BYTE PTR [edi-0x16],ah
  437e8c:	jb     0x437e8a
  437e8e:	sbb    al,0x69
  437e90:	mov    dl,0xb
  437e92:	mov    cl,0x6e
  437e94:	xor    DWORD PTR [edx],ebx
  437e96:	das    
  437e97:	fisub  WORD PTR [ecx+0x18]
  437e9a:	imul   edi,DWORD PTR ss:[edx-0x41],0x8ce9de3d
  437ea2:	push   esp
  437ea3:	sub    cl,0xdb
  437ea6:	cmp    al,0x4f
  437ea8:	cli    
  437ea9:	sub    eax,0x709afcf1
  437eae:	stos   BYTE PTR es:[edi],al
  437eaf:	and    eax,edx
  437eb1:	mov    fs,WORD PTR [ebx-0x18]
  437eb4:	add    BYTE PTR [ecx-0x284a915b],bh
  437eba:	sub    al,0xde
  437ebc:	mov    edi,DWORD PTR [edi+ebp*4]
  437ebf:	add    BYTE PTR [edx+0xf0d461],cl
  437ec5:	jmp    0x62a273cd
  437eca:	enter  0x754e,0xf3
  437ece:	sub    al,0xde
  437ed0:	pop    esi
  437ed1:	call   0xde16:0x35895b07
  437ed8:	add    BYTE PTR [edi],al
  437eda:	xor    al,0x56
  437edc:	mov    ecx,0x3de2cff
  437ee1:	lods   al,BYTE PTR ds:[esi]
  437ee2:	aam    0x5c
  437ee4:	mov    DWORD PTR [ebp+0x200de36],edx
  437eea:	loop   0x437f48
  437eec:	dec    esi
  437eed:	inc    ebp
  437eee:	add    BYTE PTR [eax],al
  437ef0:	pop    ds
  437ef1:	dec    edi
  437ef2:	mov    DWORD PTR [edi+0x2a],edi
  437ef5:	fiadd  WORD PTR [eax]
  437ef7:	jbe    0x437f15
  437ef9:	fiadd  WORD PTR [eax]
  437efb:	jmp    0xb4ce0c5b
  437f00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437f01:	pop    ebx
  437f02:	mov    DWORD PTR [ebp+0x36],ebx
  437f05:	fiadd  WORD PTR [eax]
  437f07:	sar    BYTE PTR [edi+0x18],cl
  437f0a:	pusha  
  437f0b:	faddp  st(7),st
  437f0d:	ins    DWORD PTR es:[edi],dx
  437f0e:	mov    ch,0xf3
  437f10:	sub    al,0xde
  437f12:	mov    DWORD PTR [eax+ecx*4-0x5cf42c00],edx
  437f19:	and    eax,0x80f16009
  437f1e:	pop    edi
  437f1f:	lock mov esp,0x2ce90f55
  437f25:	pop    ebx
  437f26:	push   ecx
  437f27:	std    
  437f28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437f29:	pop    ebp
  437f2a:	mov    ecx,0x88de2cf7
  437f2f:	add    dl,dl
  437f31:	jmp    0xdb35c4b3
  437f36:	pop    eax
  437f37:	adc    al,0x4d
  437f39:	xchg   edx,eax
  437f3a:	adc    al,0x8b
  437f3c:	dec    esi
  437f3d:	loop   0x437fbd
  437f3f:	nop
  437f40:	paddsb mm0,QWORD PTR [eax]
  437f43:	add    BYTE PTR [esi],bl
  437f45:	test   BYTE PTR [ecx],0x8b
  437f48:	push   ss
  437f49:	sahf   
  437f4a:	adc    eax,DWORD PTR [eax]
  437f4c:	xchg   esi,eax
  437f4d:	addr16 jl 0x437f3c
  437f50:	xchg   edi,eax
  437f51:	mov    eax,0xb114
  437f56:	push   esi
  437f57:	(bad)  
  437f58:	mov    esi,0x7e049566
  437f5d:	dec    ebp
  437f5e:	fisubr WORD PTR [esi+0x4d]
  437f61:	or     al,BYTE PTR [esi]
  437f63:	arpl   WORD PTR [ecx+0xe060bc],dx
  437f69:	mov    edx,DWORD PTR [ebx-0x61769cec]
  437f6f:	push   ecx
  437f70:	adc    eax,DWORD PTR [eax]
  437f72:	push   esi
  437f73:	pop    es
  437f74:	pcmpgtd mm7,QWORD PTR [ebp+0x460ab551]
  437f7b:	loopne 0x437fdf
  437f7d:	shl    DWORD PTR [ecx+0x7c],cl
  437f80:	push   DWORD PTR [edi+0xec8e]
  437f86:	add    eax,0x8e89f0af
  437f8b:	sahf   
  437f8c:	adc    eax,DWORD PTR [eax]
  437f8e:	push   ss
  437f8f:	imul   ecx,DWORD PTR [ecx+0xdfe0bc],0x765d4483
  437f99:	stc    
  437f9a:	or     BYTE PTR [edx+0x3c3895c],dl
  437fa0:	arpl   bx,dx
  437fa2:	hlt    
  437fa3:	push   0xa65f0849
  437fa8:	in     al,0x66
  437faa:	das    
  437fab:	jle    0x437f41
  437fad:	mov    eax,0x85048521
  437fb2:	pop    edi
  437fb3:	mov    cl,0x8a
  437fb5:	xor    BYTE PTR [edi-0x55],0x4
  437fb9:	add    BYTE PTR [eax],al
  437fbb:	add    BYTE PTR [edi-0xd7af27f],ah
  437fc1:	cwde   
  437fc2:	std    
  437fc3:	push   edi
  437fc4:	cmp    edx,DWORD PTR [eax]
  437fc6:	cld    
  437fc7:	adc    esp,DWORD PTR [ebp+0x2f12b515]
  437fcd:	test   DWORD PTR [ebx+0xffd3748],ecx
  437fd3:	or     DWORD PTR [ebp+esi*1-0x7ad0ed48],esi
  437fda:	mov    edi,DWORD PTR [ebx-0x7d]
  437fdd:	xchg   ah,bl
  437fdf:	adc    ebx,DWORD PTR [esi-0x3639d54b]
  437fe5:	xlat   BYTE PTR ds:[ebx]
  437fe6:	data16 jge 0x438056
  437fe9:	aaa    
  437fea:	test   DWORD PTR [eax+0x49393],edx
  437ff0:	sar    ebp,1
  437ff2:	mov    ebx,0x48519b8
  437ff7:	out    0xdf,eax
  437ff9:	xchg   BYTE PTR [eax+eax*1],al
  437ffc:	leave  
  437ffd:	mul    DWORD PTR [ecx+0x62]
  438000:	ss xor eax,0x852f12bc
  438006:	cmp    DWORD PTR [edi-0x1c411d3],0x10
  43800d:	test   DWORD PTR [edi+0x4852f10],esi
  438013:	jge    0x43801a
  438015:	pop    DWORD PTR [edi]
  438017:	mov    DWORD PTR [esi],edx
  438019:	xchg   BYTE PTR [eax+eax*1],al
  43801c:	and    ah,dl
  43801e:	mov    edi,DWORD PTR [esi-0x7acb0000]
  438024:	add    al,0x25
  438026:	out    0xdd,al
  438028:	jo     0x437ff9
  43802a:	loopne 0x438092
  43802c:	jb     0x437fee
  43802e:	cmp    eax,0xf638e9de
  438033:	adc    edi,DWORD PTR [edi]
  438035:	or     eax,0xaaa6d7e
  43803a:	das    
  43803b:	fidiv  WORD PTR [eax-0x29]
  43803e:	(bad)  
  43803f:	sti    
  438040:	call   0xec8a:0xe225b262
  438047:	jns    0x438051
  438049:	or     edi,DWORD PTR [edi+0x2f03f055]
  43804f:	cmp    bl,BYTE PTR [bx+si]
  438052:	mov    cl,0x5d
  438054:	push   edx
  438055:	push   ss
  438056:	das    
  438057:	fidiv  WORD PTR [ecx+0x8]
  43805a:	sub    BYTE PTR [edi+0x1d],ah
  43805d:	push   0x88d62a70
  438062:	out    0xe9,eax
  438064:	(bad)  
  438065:	int3   
  438066:	sub    BYTE PTR [eax+0x7a],ch
  438069:	mov    ebx,0x8be9de3d
  43806e:	cmp    esp,ebx
  438070:	bound  edx,QWORD PTR [ebx+ecx*4-0x55fc1615]
  438077:	adc    BYTE PTR [esi+0x3],cl
  43807a:	xlat   BYTE PTR ds:[ebx]
  43807b:	jmp    0xa84c94f8
  438080:	enter  0x1650,0x66
  438084:	xchg   ebp,eax
  438085:	jnp    0x438087
  438087:	add    BYTE PTR [edx+ebp*1+0x6eb073f4],dh
  43808e:	push   esi
  43808f:	push   ss
  438090:	das    
  438091:	fisub  WORD PTR [edx-0x29]
  438094:	add    al,0xf9
  438096:	pusha  
  438097:	mov    esp,0x3e9e8c7
  43809c:	adc    bh,BYTE PTR [edi-0x61487781]
  4380a2:	add    ebx,esp
  4380a4:	sub    al,0xde
  4380a6:	pop    esi
  4380a7:	sbb    cl,BYTE PTR [edx+0x5b]
  4380aa:	mov    DWORD PTR [ebp+0x4700de42],esp
  4380b0:	and    al,0x56
  4380b2:	mov    ecx,0x3de2cff
  4380b7:	sbb    al,0x43
  4380b9:	pop    ecx
  4380ba:	mov    DWORD PTR [ebp+0x7200de22],eax
  4380c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4380c1:	push   edx
  4380c2:	psubsw mm5,QWORD PTR [ebx+edx*1]
  4380c6:	ret    
  4380c7:	lods   al,BYTE PTR ds:[esi]
  4380c8:	scas   eax,DWORD PTR es:[edi]
  4380c9:	mov    DWORD PTR [esi],eax
  4380cb:	daa    
  4380cc:	(bad)  
  4380cd:	pop    eax
  4380ce:	dec    esi
  4380cf:	lea    ecx,[edx+0x7462e3a2]
  4380d5:	(bad)  [ecx+0x9fc1724]
  4380db:	pop    ecx
  4380dc:	mov    ah,0xec
  4380de:	add    cl,ch
  4380e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4380e1:	cs or  eax,0xf56ac63
  4380e7:	jmp    0xf840e718
  4380ec:	add    BYTE PTR [eax],al
  4380ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4380ef:	sbb    eax,0xed74e8dd
  4380f4:	mov    edx,ecx
  4380f6:	and    BYTE PTR [eax-0x6f],bl
  4380f9:	nop
  4380fa:	sbb    bl,dh
  4380fc:	add    BYTE PTR [edx+0x64],dh
  4380ff:	(bad)  [eax-0x6ea4dc2b]
  438105:	jne    0x438149
  438107:	fiadd  WORD PTR [eax]
  438109:	bound  esp,QWORD PTR [ecx]
  43810b:	test   DWORD PTR [edx],eax
  43810d:	rol    DWORD PTR [eax+0x41],0x11
  438111:	shl    DWORD PTR [esi-0x4],cl
  438114:	rol    DWORD PTR [esi],cl
  438116:	scas   eax,DWORD PTR es:[edi]
  438117:	dec    edi
  438118:	hlt    
  438119:	pusha  
  43811a:	pushf  
  43811b:	push   ecx
  43811c:	sldt   WORD PTR [esi]
  43811f:	frstor [edx-0x77]
  438122:	outs   dx,BYTE PTR ds:[esi]
  438123:	push   ebp
  438124:	adc    eax,DWORD PTR [eax]
  438126:	(bad)  
  438127:	add    esp,DWORD PTR [eax]
  438129:	add    esi,edx
  43812b:	fsub   QWORD PTR [edx-0x2d]
  43812e:	in     al,0x7b
  438130:	dec    DWORD PTR [edi+0xeb8e]
  438136:	push   ebp
  438137:	sbb    esi,esi
  438139:	call   0x445b05
  43813e:	ror    DWORD PTR [ebx-0x77],0xc6
  438142:	mov    esp,0xdf2b00dc
  438147:	bound  ecx,QWORD PTR [eax+edi*8+0xd]
  43814b:	bound  esi,QWORD PTR [ebp+0x2ddc8616]
  438151:	iret   
  438152:	add    BYTE PTR [eax],al
  438154:	xor    BYTE PTR [ebp+0x9],bh
  438157:	mov    bh,0x6
  438159:	push   ds
  43815a:	(bad)  
  43815b:	call   DWORD PTR [esi+0x28ec5461]
  438161:	sub    edi,edx
  438163:	mov    edi,DWORD PTR [esi]
  438165:	loop   0x4381e6
  438167:	inc    ebp
  438168:	mov    edx,0x1e8fff7b
  43816d:	in     al,dx
  43816e:	add    BYTE PTR [eax],al
  438170:	(bad)  [ecx+0x51c68a14]
  438176:	adc    eax,DWORD PTR [eax]
  438178:	push   esi
  438179:	fs std 
  43817b:	adc    ch,cl
  43817d:	sahf   
  43817e:	in     al,0x1
  438180:	mov    fs,eax
  438182:	jge    0x4381fc
  438184:	pop    edx
  438185:	pop    edi
  438186:	dec    ecx
  438187:	or     BYTE PTR [edx+ebp*2-0x23e9e950],cl
  43818e:	mov    BYTE PTR [ecx+eiz*1],dl
  438191:	popa   
  438192:	xchg   ecx,eax
  438193:	mov    esp,0x8b00dc18
  438198:	das    
  438199:	push   0x60
  43819b:	call   FWORD PTR [eax-0x77]
  43819e:	lods   eax,DWORD PTR ds:[esi]
  43819f:	adc    BYTE PTR [ebp-0x35],al
  4381a2:	loop   0x438170
  4381a4:	add    BYTE PTR ds:0x71baf7ca,cl
  4381aa:	push   es
  4381ab:	lock mov dh,0x35
  4381ae:	mov    ecx,0x87852f12
  4381b3:	push   ebx
  4381b4:	rcl    DWORD PTR [edi],cl
  4381b6:	xchg   BYTE PTR [eax-0x70790000],bh
  4381bc:	add    al,0x0
  4381be:	aam    0xe5
  4381c0:	loop   0x438146
  4381c2:	ja     0x438205
  4381c4:	push   es
  4381c5:	add    BYTE PTR [edi],ch
  4381c7:	pop    ss
  4381c8:	push   eax
  4381c9:	loope  0x43817f
  4381cb:	std    
  4381cc:	scas   eax,DWORD PTR es:[edi]
  4381cd:	adc    ch,BYTE PTR [edi]
  4381cf:	test   edx,esp
  4381d1:	push   es
  4381d2:	xlat   BYTE PTR ds:[ebx]
  4381d3:	std    
  4381d4:	adc    DWORD PTR [eax],eax
  4381d6:	das    
  4381d7:	test   cl,cl
  4381d9:	div    DWORD PTR [esi+0x2f12affd]
  4381df:	test   DWORD PTR [edi+0x4afbb88],eax
  4381e5:	add    BYTE PTR [ebx+eax*2+0x7e667d71],ch
  4381ec:	cli    
  4381ed:	push   esi
  4381ee:	mov    dh,0xea
  4381f0:	push   0x87237c62
  4381f5:	dec    eax
  4381f6:	daa    
  4381f7:	push   cs
  4381f8:	shl    ebx,0xd1
  4381fb:	jge    0x438191
  4381fd:	mov    eax,0x85048519
  438202:	fbstp  TBYTE PTR [eax-0x58887f7a]
  438208:	add    al,0x0
  43820a:	mov    bh,0x80
  43820c:	or     eax,0xfd196a85
  438211:	push   edi
  438212:	inc    ebx
  438213:	fidiv  WORD PTR [edx-0x5]
  438216:	cmp    al,0x64
  438218:	jp     0x4381d6
  43821a:	sbb    eax,0x8ee9de
  43821f:	add    BYTE PTR [edi-0x1a],dh
  438222:	popa   
  438223:	(bad)  
  438225:	arpl   WORD PTR [edx-0x49],bx
  438228:	sbb    eax,0x648ee9de
  43822d:	sub    cl,0xdb
  438230:	cmp    al,0x4d
  438232:	fisubr DWORD PTR ds:0x69baf7f1
  438238:	push   edx
  438239:	pushf  
  43823a:	iret   
  43823b:	mov    ebx,DWORD PTR [edi+0x2f03f851]
  438241:	clc    
  438242:	pusha  
  438243:	mov    esp,0x3e9e777
  438248:	retf   0x3fea
  43824b:	push   ebp
  43824c:	mov    edi,esi
  43824e:	loopne 0x4381e3
  438250:	out    0xe7,eax
  438252:	jmp    0xe7e09c5a
  438257:	mov    ah,BYTE PTR [edi+0x2f03f051]
  43825d:	arpl   WORD PTR ds:0x61ac5270,bx
  438263:	out    dx,eax
  438264:	test   BYTE PTR [eax-0x4f],bl
  438267:	out    dx,eax
  438268:	es push ebp
  43826a:	je     0x438270
  43826c:	das    
  43826d:	fisub  WORD PTR [esi-0x1625a741]
  438273:	add    ebp,DWORD PTR [edi]
  438275:	add    DWORD PTR [eax],0x3d
  438278:	inc    eax
  438279:	or     al,ch
  43827b:	mov    edx,0x3e9de2d
  438280:	outs   dx,BYTE PTR ds:[esi]
  438281:	sbb    BYTE PTR [edx+0x5],dl
  438284:	add    BYTE PTR [eax],al
  438286:	das    
  438287:	fsubp  st(1),st
  438289:	ins    BYTE PTR es:[edi],dx
  43828a:	and    edx,DWORD PTR [ebp-0x21]
  43828d:	add    ebp,DWORD PTR [edi]
  43828f:	fiadd  WORD PTR [eax]
  438291:	cs loopne 0x438229
  438294:	std    
  438295:	call   0xacc760c6
  43829a:	pushf  
  43829b:	loop   0x4382c6
  43829d:	mov    esp,0x357dd794
  4382a2:	add    DWORD PTR [edi+0x32d6aef8],0x4ad80c8c
  4382ac:	lds    ebp,FWORD PTR ds:0x9cc59a77
  4382b2:	mov    bl,0x7a
  4382b4:	push   edx
  4382b5:	bound  ebx,QWORD PTR [eax-0x6788741b]
  4382bb:	lock add cl,ch
  4382be:	jecxz  0x4382a0
  4382c0:	not    edi
  4382c2:	inc    edi
  4382c3:	xchg   DWORD PTR [eax-0x6e],edx
  4382c6:	sub    eax,0xabe900de
  4382cb:	xchg   ebp,eax
  4382cc:	or     al,0x3f
  4382ce:	jge    0x4382cf
  4382d0:	mov    ebx,DWORD PTR [ecx+0x62e39a8e]
  4382d6:	data16 icebp 
  4382d8:	mov    DWORD PTR [edi+edx*1],ebp
  4382db:	add    BYTE PTR [edx],cl
  4382dd:	ja     0x4382a3
  4382df:	lock add cl,ch
  4382e2:	mov    bl,0x30
  4382e4:	or     DWORD PTR [ebx-0x52],esp
  4382e7:	inc    esi
  4382e8:	psubsw mm0,QWORD PTR [eax]
  4382eb:	add    BYTE PTR [esi+edx*2],ch
  4382ee:	std    
  4382ef:	xlat   BYTE PTR ds:[ebx]
  4382f0:	sub    eax,0xbe630d28
  4382f5:	push   ebp
  4382f6:	psubsw mm5,QWORD PTR [ebx+eiz*2]
  4382fa:	ja     0x4382f9
  4382fc:	mov    ds:0x89720918,eax
  438301:	mov    DWORD PTR [ecx-0x709cc803],ecx
  438307:	lea    ebx,[esi]
  438309:	fiadd  WORD PTR [eax]
  43830b:	add    BYTE PTR [edi-0x59],al
  43830e:	adc    al,0xb1
  438310:	push   es
  438311:	mov    ebx,0xf94566be
  438316:	jne    0x4382da
  438318:	arpl   WORD PTR [eax-0x6d],bx
  43831b:	mov    esp,0x6600e110
  438320:	jg     0x438381
  438322:	mov    ecx,0xdde11616
  438327:	adc    esi,DWORD PTR [eax-0x991ecf]
  43832d:	pop    esi
  43832e:	mov    ecx,0x75e0d616
  438333:	rcl    ebx,0x57
  438336:	mov    edi,DWORD PTR [eax+eax*1+0x38b00e1]
  43833d:	(bad)  
  43833e:	jge    0x4382ce
  438340:	stos   BYTE PTR es:[edi],al
  438341:	fild   DWORD PTR [eax]
  438343:	add    BYTE PTR [esi],cl
  438345:	popa   
  438346:	lock or ebp,DWORD PTR [eax-0x64]
  43834a:	bound  ecx,QWORD PTR [ebx-0x1d3a546a]
  438350:	add    BYTE PTR [eax],al
  438352:	sbb    eax,0x538914a4
  438357:	push   es
  438358:	arpl   WORD PTR [ecx],cx
  43835a:	add    BYTE PTR [edx+0x13],cl
  43835d:	add    BYTE PTR [esi-0x3f7aca9],al
  438363:	or     edi,DWORD PTR [ecx-0x771f69ea]
  438369:	add    al,0x77
  43836b:	loope  0x4383c7
  43836d:	adc    al,0xfc
  43836f:	pop    ebx
  438370:	mov    al,0x16
  438372:	push   esi
  438373:	loopne 0x4383f2
  438375:	jle    0x4382f9
  438377:	push   edi
  438378:	dec    ebx
  438379:	or     ch,cl
  43837b:	sahf   
  43837c:	cld    
  43837d:	mov    BYTE PTR [edx-0x1d],dl
  438380:	jge    0x438318
  438382:	stos   BYTE PTR es:[edi],al
  438383:	fild   DWORD PTR [eax]
  438385:	add    BYTE PTR [edi],ch
  438387:	jbe    0x438357
  438389:	adc    edi,DWORD PTR [esi-0x7a]
  43838c:	sub    al,dh
  43838e:	leave  
  43838f:	out    0x64,eax
  438391:	jge    0x438380
  438393:	rol    BYTE PTR [ebp+0x4abe392],cl
  438399:	add    BYTE PTR [ecx+0x39b876fe],dl
  43839f:	jne    0x4383a5
  4383a1:	in     eax,0x1c
  4383a3:	arpl   WORD PTR [ebx-0x20],dx
  4383a6:	mov    DWORD PTR [esi+0x76],edi
  4383a9:	mov    eax,0x7d047521
  4383ae:	out    dx,al
  4383af:	jp     0x438336
  4383b1:	mov    ch,BYTE PTR [ebx+0x4b3]
  4383b7:	add    BYTE PTR [edx+edi*1-0x46567aec],dh
  4383be:	push   es
  4383bf:	add    BYTE PTR [edi],ch
  4383c1:	clc    
  4383c2:	inc    ebx
  4383c3:	cld    
  4383c4:	lods   al,BYTE PTR ds:[esi]
  4383c5:	jle    0x4383c7
  4383c7:	jp     0x438422
  4383c9:	sbb    ecx,DWORD PTR [eax+edx*8-0x7a9db7af]
  4383d0:	popa   
  4383d1:	test   eax,0x23ab4385
  4383d6:	push   es
  4383d7:	xchg   edx,eax
  4383d8:	out    0xab,eax
  4383da:	add    al,0x0
  4383dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4383dd:	repz add al,0x86
  4383e0:	test   eax,0x2f0005fd
  4383e5:	or     eax,0xd32e0ef8
  4383ea:	adc    BYTE PTR [esi+0x62ea1],al
  4383f0:	das    
  4383f1:	adc    dh,ch
  4383f3:	adc    esi,DWORD PTR [ebx+edi*4+0x10ea8504]
  4383fa:	mov    WORD PTR [eax+ebp*1],ss
  4383fd:	add    BYTE PTR [esi-0x1621c644],al
  438403:	add    ecx,DWORD PTR [eax+0x29]
  438406:	out    dx,al
  438407:	mov    ah,0x1f
  438409:	mov    eax,0x766bdd23
  43840e:	imul   eax,DWORD PTR [ecx+0x3b],0x55
  438412:	pop    eax
  438413:	mov    bh,0x3d
  438415:	fsubp  st(1),st
  438417:	(bad)  [ecx+0xd7263]
  43841d:	add    BYTE PTR [edi],ch
  43841f:	fiadd  WORD PTR [edx+0x12]
  438422:	lea    ebp,[edi+0x6431dd0a]
  438428:	bound  ecx,QWORD PTR ds:0x446ade2f
  43842e:	xor    edx,DWORD PTR [ebp+0x58]
  438431:	mov    bh,0x1d
  438433:	fsubp  st(1),st
  438435:	xor    ah,dh
  438437:	les    esi,FWORD PTR [ebx+edx*1+0x36]
  43843b:	pop    esp
  43843c:	push   eax
  43843d:	add    ebp,DWORD PTR [edi]
  43843f:	fisub  WORD PTR [edx-0x7b]
  438442:	xchg   ebx,eax
  438443:	repz jmp 0xe5c8ce4c
  438449:	cmc    
  43844a:	dec    esi
  43844b:	fist   DWORD PTR [edi+0x2a1f1b8d]
  438451:	add    al,0x26
  438453:	push   ebx
  438454:	data16 mov fs,WORD PTR ds:0xd03e9d8
  43845b:	push   edi
  43845c:	call   0x3cc6:0x637f6bde
  438463:	add    al,0xf1
  438465:	(bad)  
  438466:	(bad)  
  438467:	repz jmp 0x7097ba70
  43846d:	mov    esp,0x88e9de1d
  438472:	fst    st(5)
  438474:	jno    0x43848e
  438476:	cmp    BYTE PTR [ebx+0x54361020],cl
  43847c:	add    DWORD PTR [edi-0x6c],edx
  43847f:	out    dx,eax
  438480:	add    cl,ch
  438482:	add    BYTE PTR [eax],al
  438484:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438485:	pop    ss
  438486:	or     eax,0x88e27972
  43848b:	std    
  43848c:	sbb    eax,0x29958f61
  438491:	fiadd  WORD PTR [eax]
  438493:	cwde   
  438494:	sbb    eax,esp
  438496:	retf   0x7fcf
  438499:	jbe    0x438457
  43849b:	call   0xe84462cc
  4384a0:	add    ch,dh
  4384a2:	sub    DWORD PTR [ebx],0xffffff9e
  4384a5:	cld    
  4384a6:	mov    DWORD PTR [edi-0x35],ebp
  4384a9:	in     al,dx
  4384aa:	add    cl,ch
  4384ac:	mov    ch,0x6c
  4384ae:	mov    ch,0xff
  4384b0:	sub    al,0xde
  4384b2:	jmp    0x43847f
  4384b4:	sub    ecx,DWORD PTR [eax+eax*4-0x1b]
  4384b8:	out    dx,eax
  4384b9:	leave  
  4384ba:	add    BYTE PTR [edi+0x777f72b7],al
  4384c0:	fiadd  WORD PTR es:[eax]
  4384c3:	xchg   DWORD PTR [edi-0x58],edi
  4384c6:	pop    edi
  4384c7:	lock mov edx,0x2ce90f46
  4384cd:	or     eax,edx
  4384cf:	jmp    0xde2c:0xf7b554a5
  4384d6:	add    eax,edx
  4384d8:	addr16 add eax,0x28a8ee11
  4384de:	clc    
  4384df:	mov    dh,0x23
  4384e1:	arpl   WORD PTR [esi-0x1f],ax
  4384e4:	gs push esp
  4384e6:	(bad)  
  4384e7:	jge    0x4384e9
  4384e9:	add    BYTE PTR [esi+ebx*8],ch
  4384ec:	add    BYTE PTR [edx+0x42],dh
  4384ef:	jbe    0x438537
  4384f1:	xchg   ecx,eax
  4384f2:	add    eax,DWORD PTR [edi+0x21271c8c]
  4384f8:	xchg   BYTE PTR [eax],al
  4384fa:	or     BYTE PTR [ebp+0x0],dl
  4384fd:	add    BYTE PTR [esi+0x56],dl
  438500:	ret    
  438501:	call   0x3d8aa8
  438506:	and    DWORD PTR [edi+0x1e73e57d],esp
  43850c:	(bad)
  43850f:	and    ebp,eax
  438511:	int3   
  438512:	jnp    0x43856a
  438514:	in     eax,0x83
  438516:	repnz in al,dx
  438518:	inc    ebp
  438519:	mov    edx,ebx
  43851b:	aam    0x25
  43851d:	leave  
  43851e:	mov    eax,0xa6882f99
  438523:	fiadd  DWORD PTR [eax]
  438525:	add    cl,dh
  438527:	or     BYTE PTR [esi-0x2222ea00],ch
  43852d:	pop    es
  43852e:	xchg   ebx,eax
  43852f:	test   eax,0xa08d0024
  438534:	hlt    
  438535:	mov    esi,DWORD PTR [esi+0x69]
  438538:	adc    eax,DWORD PTR [eax]
  43853a:	(bad)  
  43853b:	loope  0x4384ee
  43853d:	adc    al,0x9c
  43853f:	push   ebp
  438540:	mov    cl,0x98
  438542:	clc    
  438543:	fadd   QWORD PTR [eax]
  438545:	nop/reserved BYTE PTR [ecx-0x60c0bed9]
  43854c:	hlt    
  43854d:	mov    eax,DWORD PTR [eax]
  43854f:	add    BYTE PTR [esi],bh
  438551:	dec    esi
  438552:	adc    eax,DWORD PTR [eax]
  438554:	(bad)  
  438555:	or     DWORD PTR [esp+edi*8+0x4b],edx
  438559:	xor    BYTE PTR [edx],cl
  43855b:	test   DWORD PTR [edx-0x6effff1f],ebx
  438561:	inc    ebx
  438562:	jne    0x438517
  438564:	test   BYTE PTR [edx],bh
  438566:	adc    DWORD PTR [eax],eax
  438568:	xchg   ah,bl
  43856a:	sbb    eax,0x7aca8dd7
  43856f:	push   esp
  438570:	xchg   ecx,eax
  438571:	inc    ebx
  438572:	sub    eax,0x77d92fb3
  438577:	ror    BYTE PTR [ecx],cl
  438579:	inc    esp
  43857a:	pop    edi
  43857b:	test   edi,esi
  43857d:	mov    gs,edx
  43857f:	push   es
  438580:	mov    edi,0x2f001b1e
  438585:	cmp    BYTE PTR [edx+0x4b09798],0x0
  43858c:	mov    ah,0x46
  43858e:	adc    BYTE PTR [eax+0x40738623],cl
  438594:	and    eax,DWORD PTR [eax-0x6f896746]
  43859a:	add    al,0x0
  43859c:	mov    ah,0x4d
  43859e:	adc    BYTE PTR [ebp+0x1c7c8d7f],al
  4385a4:	ds cld 
  4385a6:	mov    WORD PTR [ecx+edi*1+0x6ff90475],?
  4385ad:	mov    DWORD PTR [edi+0x5b],esi
  4385b0:	aaa    
  4385b1:	es or  eax,0xe5000026
  4385b7:	push   edi
  4385b8:	dec    edi
  4385b9:	jmp    0xe51:0xf02669a2
  4385c0:	lods   eax,DWORD PTR ds:[esi]
  4385c1:	mov    eax,0xe5047539
  4385c6:	aas    
  4385c7:	push   edi
  4385c8:	ja     0x4385de
  4385ca:	pushf  
  4385cb:	pop    edi
  4385cc:	dec    edi
  4385cd:	ficom  WORD PTR [ecx-0x72]
  4385d0:	xchg   esp,eax
  4385d1:	mov    eax,0xfd047519
  4385d6:	jmp    0x1a0001d9
  4385db:	jne    0x4385e1
  4385dd:	test   edx,edi
  4385df:	dec    eax
  4385e0:	daa    
  4385e1:	mov    bh,cl
  4385e3:	scas   eax,DWORD PTR es:[edi]
  4385e4:	add    al,0x0
  4385e6:	sub    bl,dh
  4385e8:	mov    dh,0xf8
  4385ea:	nop
  4385eb:	cmp    BYTE PTR [ebx],al
  4385ed:	mov    cl,0xc4
  4385ef:	fsubp  st(3),st
  4385f1:	pop    es
  4385f2:	das    
  4385f3:	fidiv  WORD PTR [edx+0x7b]
  4385f6:	mov    ebx,0xb903e9f0
  4385fb:	out    dx,al
  4385fc:	jmp    0x96f6b504
  438601:	cs imul edx,edi,0x87594667
  438608:	jmp    0x2f07:0xea4b9e02
  43860f:	faddp  st(7),st
  438611:	jle    0x438670
  438613:	add    BYTE PTR [ebx],bh
  438615:	gs mov dl,0x16
  438618:	loop   0x438603
  43861a:	add    BYTE PTR [eax],al
  43861c:	sub    DWORD PTR [esi-0x6e],ebp
  43861f:	sbb    DWORD PTR [edi],ebp
  438621:	fsubp  st(6),st
  438623:	mov    ecx,0x3d045c7
  438628:	das    
  438629:	push   ebx
  43862a:	call   0x6f72:0xd8e9a717
  438631:	repnz out dx,al
  438633:	mov    ecx,0x3f044a7
  438638:	das    
  438639:	push   ebx
  43863a:	mov    ds:0xe22daa17,al
  43863f:	jnp    0x43868c
  438641:	in     eax,dx
  438642:	jb     0x4385d7
  438644:	mov    ds:0xd603e9ef,eax
  438649:	sbb    eax,0xb43fb4d6
  43864e:	and    ebp,ecx
  438650:	sti    
  438651:	ja     0x4386c0
  438653:	sar    dl,0x8d
  438656:	aaa    
  438657:	jnp    0x438600
  438659:	dec    ecx
  43865a:	clc    
  43865b:	add    ebp,DWORD PTR [edi]
  43865d:	add    BYTE PTR [ecx-0x4c],ah
  438660:	out    0xef,eax
  438662:	jmp    0x73668b6a
  438667:	addr16 hlt 
  438669:	call   0x23f1:0x43d6e601
  438670:	jae    0x4385f8
  438672:	pop    es
  438673:	pop    esi
  438674:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438675:	push   eax
  438676:	jmp    esp
  438678:	sub    al,0xde
  43867a:	mov    ebx,0xde2cf9
  43867f:	ret    0x0
  438682:	cli    
  438683:	pop    esi
  438684:	dec    esi
  438685:	and    edx,0x1bc2092a
  43868b:	add    al,0x62
  43868d:	out    0x97,al
  43868f:	jno    0x43864c
  438691:	in     eax,0x30
  438693:	fiadd  WORD PTR [eax]
  438695:	jo     0x4386ef
  438697:	jbe    0x4386f8
  438699:	cmp    dl,cl
  43869b:	pusha  
  43869c:	dec    ecx
  43869d:	loope  0x4386e5
  43869f:	fist   WORD PTR [eax+0xde4591]
  4386a5:	mul    dh
  4386a7:	mov    cx,0x2cd7
  4386ab:	fimul  WORD PTR [ebx+0x15563899]
  4386b1:	fdivr  DWORD PTR [edi+0x1e]
  4386b4:	or     eax,0xba66c6f6
  4386b9:	imul   DWORD PTR [esi+ebx*8]
  4386bc:	mov    esp,DWORD PTR [ecx-0x1eaea4e8]
  4386c2:	fs loop 0x4386d6
  4386c5:	jb     0x438682
  4386c7:	inc    edx
  4386c8:	psubsw mm5,QWORD PTR [ebx+ebx*2]
  4386cc:	push   esi
  4386cd:	stc    
  4386ce:	pop    edi
  4386cf:	push   ds
  4386d0:	or     eax,0xcabc2338
  4386d5:	dec    edi
  4386d6:	pop    edx
  4386d7:	jnp    0x438665
  4386d9:	sub    al,0x4b
  4386db:	pop    ecx
  4386dc:	dec    ebp
  4386dd:	jecxz  0x43871b
  4386df:	pop    ebp
  4386e0:	xchg   ecx,eax
  4386e1:	lea    eax,[esi-0x22]
  4386e4:	add    BYTE PTR [eax],al
  4386e6:	add    BYTE PTR [eax],al
  4386e8:	lock or BYTE PTR [ecx+0xe180b8],bl
  4386ef:	jmp    0x43876e
  4386f1:	ja     0x438770
  4386f3:	xchg   esp,eax
  4386f4:	cld    
  4386f5:	fdiv   st(4),st
  4386f7:	call   DWORD PTR [esi+0x30e2c577]
  4386fd:	mov    DWORD PTR [eax+0xe170b8],ecx
  438703:	add    ecx,DWORD PTR [ebx-0xe]
  438706:	jg     0x438690
  438708:	jmp    0xbbd4:0xdd0000e6
  43870f:	test   al,0x4
  438711:	call   0x5d80:0xe238af8
  438718:	out    0x5b,al
  43871a:	into   
  43871b:	je     0x438769
  43871d:	loop   0x43874b
  43871f:	mov    ebp,0x3841d6
  438724:	lea    ecx,[ecx]
  438726:	mov    ch,0x16
  438728:	push   ss
  438729:	loope  0x4386e4
  43872b:	adc    BYTE PTR [esi],al
  43872d:	loope  0x43872f
  43872f:	sub    ebx,DWORD PTR [ebp-0x4e]
  438732:	leave  
  438733:	jle    0x4386db
  438735:	jbe    0x4387b4
  438737:	(bad)  
  438738:	mov    al,0x29
  43873a:	loop   0x4386c7
  43873c:	mov    esi,0x5e096288
  438741:	cmp    DWORD PTR [ebx],edx
  438743:	add    dh,dl
  438745:	fnsave [edx+0xe76e98]
  43874b:	add    BYTE PTR [eax],al
  43874d:	add    BYTE PTR [ebp+0x79],bl
  438750:	adc    al,0x88
  438752:	cli    
  438753:	mov    bh,0xf9
  438755:	inc    eax
  438756:	loop   0x438735
  438758:	mov    dl,0x98
  43875a:	(bad)  
  43875b:	jmp    0x43875d
  43875d:	add    BYTE PTR ds:0x2f8b0042,bh
  438763:	das    
  438764:	sbb    DWORD PTR [eax-0x67845bb5],ecx
  43876a:	jecxz  0x438710
  43876c:	add    al,0x0
  43876e:	cwde   
  43876f:	mov    dh,0x18
  438771:	scas   eax,DWORD PTR es:[edi]
  438772:	aas    
  438773:	loope  0x4387b0
  438775:	bound  ebx,QWORD PTR [esp+eax*2+0x7c]
  438779:	dec    ebx
  43877a:	jg     0x438785
  43877c:	rol    DWORD PTR [edi+edi*2],0xdc
  438780:	jne    0x438732
  438782:	mov    bh,0x84
  438784:	add    al,0x0
  438786:	push   esp
  438787:	mov    ds:0xd449ccde,al
  43878c:	cmc    
  43878d:	scas   eax,DWORD PTR es:[edi]
  43878e:	xchg   edi,eax
  43878f:	lods   al,BYTE PTR ds:[esi]
  438790:	add    al,0x0
  438792:	sub    al,0x40
  438794:	jbe    0x43871e
  438796:	mov    ebp,DWORD PTR [esp+eax*1-0x25f20b00]
  43879d:	sti    
  43879e:	scas   al,BYTE PTR es:[edi]
  43879f:	add    ch,bh
  4387a1:	(bad)  
  4387a2:	xor    BYTE PTR [esi-0xd],dh
  4387a5:	push   es
  4387a6:	cmp    BYTE PTR [ebx-0x4d],ch
  4387a9:	lock ja 0x4387e1
  4387ac:	add    al,0xe5
  4387ae:	sub    edx,DWORD PTR [eax]
  4387b0:	cmp    edi,DWORD PTR [edi+0x75060000]
  4387b6:	div    DWORD PTR [ecx+0x3fb5c5be]
  4387bc:	das    
  4387bd:	adc    dl,al
  4387bf:	or     ebp,DWORD PTR [eax]
  4387c1:	sub    al,0xf1
  4387c3:	scas   al,BYTE PTR es:[edi]
  4387c4:	sub    eax,0x41bc7500
  4387c9:	jne    0x4387cf
  4387cb:	mov    ch,0x3f
  4387cd:	jne    0x4387d3
  4387cf:	add    BYTE PTR [esp+eiz*8],al
  4387d2:	jne    0x43884f
  4387d4:	fist   WORD PTR [eax+0x3b]
  4387d7:	jp     0x438828
  4387d9:	add    dl,bl
  4387db:	or     esi,DWORD PTR [eax]
  4387dd:	ficom  WORD PTR [esi+0x72fc892f]
  4387e3:	push   esi
  4387e4:	dec    ebp
  4387e5:	scas   eax,DWORD PTR es:[edi]
  4387e6:	int3   
  4387e7:	jp     0x4387e0
  4387e9:	aad    0x3f
  4387eb:	std    
  4387ec:	mov    al,0x46
  4387ee:	fadd   DWORD PTR [ebx]
  4387f0:	das    
  4387f1:	shr    DWORD PTR [edi-0x75],cl
  4387f4:	xlat   BYTE PTR ds:[ebx]
  4387f5:	in     al,dx
  4387f6:	jmp    0xce7239fe
  4387fb:	jnp    0x438820
  4387fd:	in     eax,dx
  4387fe:	sahf   
  4387ff:	ret    
  438800:	sbb    al,0x57
  438802:	xor    bl,BYTE PTR [eax]
  438804:	es dec esp
  438806:	jb     0x4387b4
  438808:	cmp    eax,0xff7ae9de
  43880d:	aad    0x71
  43880f:	movaps xmm2,XMMWORD PTR [edi+0x5a]
  438813:	scas   eax,DWORD PTR es:[edi]
  438814:	cmp    eax,0x6ee9de
  438819:	add    bh,ch
  43881b:	jmp    0x984c9b58
  438820:	enter  0x4652,0x57
  438824:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438825:	jae    0x4387cb
  438827:	sub    ah,ah
  438829:	jae    0x4387db
  43882b:	ins    DWORD PTR es:[edi],dx
  43882c:	xchg   BYTE PTR ds:0xd872de2f,dl
  438832:	adc    al,0xfc
  438834:	jo     0x4387e1
  438836:	xlat   BYTE PTR ds:[ebx]
  438837:	jmp    0x438822
  438839:	add    edx,DWORD PTR [edx]
  43883b:	in     eax,0x62
  43883d:	shl    BYTE PTR [esp+edi*8],1
  438840:	jb     0x438851
  438842:	retf   0x3afb
  438845:	bound  ecx,QWORD PTR [ebp+0x3dab71d5]
  43884b:	fsubp  st(1),st
  43884d:	add    dh,dh
  43884f:	push   esp
  438850:	jb     0x438801
  438852:	cmp    eax,0x137ae9de
  438857:	dec    ecx
  438858:	add    DWORD PTR [ecx+0x6200c2ed],edi
  43885e:	(bad)  
  438860:	jge    0x438848
  438862:	mov    edx,0x42dc805e
  438867:	test   DWORD PTR [edi*8+0x2944f5e1],ebp
  43886e:	sub    ebx,DWORD PTR [ecx-0x77]
  438871:	test   DWORD PTR [ecx-0x22],eax
  438874:	add    BYTE PTR [edi+0x3b],bh
  438877:	fiadd  WORD PTR [eax]
  438879:	jmp    0x9f8015a5
  43887e:	add    BYTE PTR [eax],al
  438880:	adc    BYTE PTR [edx+ebx*2-0x5c],0xa
  438885:	test   DWORD PTR [edi+0x72],ebx
  438888:	std    
  438889:	call   ebx
  43888b:	(bad)  
  43888c:	out    0x15,al
  43888e:	or     DWORD PTR [edi],eax
  438890:	xor    bh,BYTE PTR fs:[ecx+0x7de2cdf]
  438897:	aaa    
  438898:	mov    ds:0x2ce90f45,eax
  43889d:	pop    ecx
  43889e:	jno    0x438875
  4388a0:	vpcmpgtd xmm6,xmm1,XMMWORD PTR [ebx-0x12]
  4388a6:	pop    es
  4388a7:	xchg   edi,eax
  4388a8:	mov    ds:0x2ce90f4a,eax
  4388ad:	pop    ebx
  4388ae:	jno    0x4388a5
  4388b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4388b1:	push   ss
  4388b2:	or     DWORD PTR [ecx+0x3f],esi
  4388b5:	aam    0x8b
  4388b7:	popa   
  4388b8:	fucomip st,st(4)
  4388ba:	add    cl,ch
  4388bc:	fwait
  4388bd:	push   ds
  4388be:	or     eax,0xcbb81b78
  4388c3:	(bad)  
  4388c4:	pop    edi
  4388c5:	js     0x438926
  4388c7:	jo     0x438864
  4388c9:	inc    esi
  4388ca:	psubsw mm5,QWORD PTR [edx*2+0x5b5cd24d]
  4388d2:	push   esi
  4388d3:	add    dh,bl
  4388d5:	add    al,0x91
  4388d7:	mov    esp,0xe900ddf8
  4388dc:	in     al,0xf0
  4388de:	stc    
  4388df:	jmp    FWORD PTR [eax+0x8606]
  4388e5:	add    dl,cl
  4388e7:	fld    QWORD PTR [eax]
  4388e9:	data16 jne 0x4388eb
  4388ec:	bound  ecx,QWORD PTR [ecx]
  4388ee:	es xor eax,0xde960013
  4388f4:	leave  
  4388f5:	pop    edi
  4388f6:	push   eax
  4388f7:	add    eax,0xdd78bc89
  4388fc:	add    BYTE PTR [ebx+0xd],bl
  4388ff:	clc    
  438900:	pop    ebx
  438901:	ret    
  438902:	mov    ds:0xc2ccc4c1,al
  438907:	rol    esp,0xcc
  43890a:	ret    0xc4c1
  43890d:	int3   
  43890e:	cld    
  43890f:	jno    0x4388c9
  438911:	inc    ebp
  438913:	into   
  438914:	ror    BYTE PTR [ebp+0x168e0],0x46
  43891b:	add    BYTE PTR [eax+0x0],al
  43891e:	enter  0xf81e,0x73
  438922:	dec    eax
  438923:	jnp    0x43899a
  438925:	cmp    DWORD PTR [esi-0x78],eax
  438928:	inc    edx
  438929:	inc    eax
  43892a:	lds    ebx,FWORD PTR [ebx]
  43892c:	std    
  43892d:	shr    BYTE PTR [esi+ebx*2-0x7],1
  438931:	pop    ds
  438932:	lock arpl WORD PTR es:[ebx+0x134b0],ax
  43893a:	push   es
  43893b:	fnsave [ebx+0x34]
  43893e:	clc    
  43893f:	pop    ebp
  438940:	mov    ebx,0xdd16bc
  438945:	add    BYTE PTR [ebx+0x8362e6],bl
  43894b:	add    BYTE PTR [eax-0x3b],dl
  43894e:	add    BYTE PTR [eax],al
  438950:	das    
  438951:	ja     0x438957
  438953:	jae    0x438964
  438955:	das    
  438956:	and    al,0x0
  438958:	das    
  438959:	ja     0x4389d2
  43895b:	mov    bh,BYTE PTR [ebx]
  43895d:	jbe    0x438963
  43895f:	add    BYTE PTR [edi+0x2f378150],bl
  438965:	or     dh,dh
  438967:	aas    
  438968:	lods   al,BYTE PTR ds:[esi]
  438969:	xor    eax,0x762f3b01
  43896e:	add    al,0x0
  438970:	sub    ebx,DWORD PTR [eax+0x6e6cc030]
  438976:	(bad)  
  438977:	jmp    FWORD PTR [edi]
  438979:	ja     0x4389ba
  43897b:	int3   
  43897c:	arpl   WORD PTR [edx],si
  43897e:	cmp    esp,ecx
  438980:	jnp    0x438905
  438982:	inc    esp
  438983:	push   edx
  438984:	mov    ah,0x45
  438986:	and    dl,0x2e
  438989:	mov    WORD PTR [edx+0x46],es
  43898c:	pop    esi
  43898d:	ins    DWORD PTR es:[edi],dx
  43898e:	add    al,al
  438990:	mov    dl,0x44
  438992:	in     al,dx
  438993:	out    dx,eax
  438994:	jle    0x4389f4
  438996:	retf   
  438997:	mov    esp,0xcc394a6b
  43899c:	arpl   WORD PTR [edx],si
  43899e:	cmp    esp,ecx
  4389a0:	jnp    0x43899d
  4389a2:	je     0x438960
  4389a4:	sbb    DWORD PTR [edi+0x4],esi
  4389a7:	dec    ebp
  4389a8:	lods   al,BYTE PTR ds:[esi]
  4389a9:	std    
  4389aa:	or     al,0x73
  4389ac:	clc    
  4389ad:	outs   dx,DWORD PTR ds:[esi]
  4389ae:	mov    dl,0x98
  4389b0:	add    BYTE PTR [eax],al
  4389b2:	out    0x7f,eax
  4389b4:	add    al,0x0
  4389b6:	mov    ah,0x45
  4389b8:	or     BYTE PTR [ebp+0x1c7c8d67],al
  4389be:	sar    BYTE PTR ds:[ebx+edx*1-0x487b00c8],0x19
  4389c7:	jne    0x4389cd
  4389c9:	test   DWORD PTR [edi-0x22],esp
  4389cc:	cmc    
  4389cd:	jle    0x438a2e
  4389cf:	(bad)  
  4389d0:	jno    0x4389da
  4389d2:	cmp    BYTE PTR [edi-0x56],bh
  4389d5:	movlps xmm2,QWORD PTR [ebp+0x46a77c80]
  4389dc:	fadd   DWORD PTR [ebx]
  4389de:	das    
  4389df:	push   ebp
  4389e0:	jb     0x43898a
  4389e2:	sbb    eax,0x83cee9de
  4389e7:	pop    ebx
  4389e8:	icebp  
  4389e9:	sti    
  4389ea:	xor    al,0xb7
  4389ec:	jb     0x4389c1
  4389ee:	sub    BYTE PTR [ebx+0x32],dl
  4389f1:	adc    BYTE PTR [ecx+0x2f119266],dh
  4389f7:	fisub  WORD PTR [ecx+0x7]
  4389fa:	xor    edi,ecx
  4389fc:	ja     0x438991
  4389fe:	fsubr  st,st(0)
  438a00:	jmp    0xd6621008
  438a05:	xchg   BYTE PTR [edi+0x2f03d042],ch
  438a0b:	xchg   BYTE PTR [eax],cl
  438a0d:	jge    0x4389ae
  438a0f:	inc    esi
  438a10:	lock add ebp,DWORD PTR [edi]
  438a13:	and    ebp,DWORD PTR [ebx+0x73000037]
  438a19:	xchg   edx,eax
  438a1a:	xchg   esi,eax
  438a1b:	aaa    
  438a1c:	imul   edx,DWORD PTR [edx-0x6d9cc852],0xffffffa6
  438a23:	aaa    
  438a24:	jnp    0x4389b8
  438a26:	arpl   WORD PTR [ebx-0x7d],di
  438a29:	call   0x5b2d8e17
  438a2e:	popa   
  438a2f:	sti    
  438a30:	mov    dh,0xbb
  438a32:	out    0xb1,al
  438a34:	mov    DWORD PTR [ebp-0x8],0xba532f03
  438a3b:	lss    edx,FWORD PTR ds:0xed337bf2
  438a42:	ss ret 
  438a44:	sbb    al,0x53
  438a46:	add    DWORD PTR [ecx-0x1eaea6d0],esp
  438a4c:	cmc    
  438a4d:	dec    esp
  438a4e:	cdq    
  438a4f:	pusha  
  438a50:	push   ds
  438a51:	fiadd  WORD PTR [eax]
  438a53:	adc    bh,BYTE PTR [ebx+ebx*2]
  438a56:	retf   0x3a97
  438a59:	pop    ecx
  438a5a:	dec    ecx
  438a5b:	loope  0x438ab6
  438a5d:	cs or  eax,0xf45a473
  438a63:	jmp    0xd858e094
  438a68:	push   ebp
  438a69:	push   ds
  438a6a:	or     eax,0x89fbfbba
  438a6f:	jno    0x4389f4
  438a71:	jmp    0x438a73
  438a73:	jmp    0xfff8e09d
  438a78:	sub    al,0xde
  438a7a:	pop    ebx
  438a7b:	stos   BYTE PTR es:[edi],al
  438a7c:	add    BYTE PTR [eax],al
  438a7e:	push   edi
  438a7f:	xchg   edx,eax
  438a80:	lds    esi,FWORD PTR [ebp-0x523a6da9]
  438a86:	inc    edi
  438a87:	xchg   edx,eax
  438a88:	lds    ebx,FWORD PTR [edx+eax*1]
  438a8b:	jb     0x438ae1
  438a8d:	pop    ss
  438a8e:	cli    
  438a8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438a90:	mov    WORD PTR [ebx-0x6107b02d],ds
  438a96:	(bad)  
  438a97:	add    BYTE PTR [esi-0x1f],dh
  438a9a:	sub    al,0xa
  438a9c:	inc    ebx
  438a9d:	bound  ebx,QWORD PTR [ebx+0x53198bea]
  438aa3:	push   esi
  438aa4:	adc    eax,0xd1dd7d8
  438aa9:	bound  ebx,QWORD PTR [ebx-0x2a]
  438aac:	dec    edi
  438aad:	bound  ecx,QWORD PTR [ebx-0x16]
  438ab0:	mov    esi,DWORD PTR [edx]
  438ab2:	in     al,dx
  438ab3:	jbe    0x438abe
  438ab5:	jno    0x438ade
  438ab7:	iret   
  438ab8:	imul   DWORD PTR [ecx-0xa869cd0]
  438abe:	fwait
  438abf:	push   cs
  438ac0:	or     DWORD PTR [eax],eax
  438ac2:	pushf  
  438ac3:	mov    ebx,0x767ed1f2
  438ac8:	adc    edi,edi
  438aca:	(bad)  
  438acb:	in     eax,dx
  438acc:	jge    0x438b46
  438ace:	loop   0x438aca
  438ad0:	push   eax
  438ad1:	or     BYTE PTR [ebp-0x45],bh
  438ad4:	icebp  
  438ad5:	rcl    DWORD PTR [edi],1
  438ad7:	sbb    DWORD PTR [ecx],ecx
  438ad9:	mov    dl,cl
  438adb:	into   
  438adc:	stc    
  438add:	inc    eax
  438ade:	loop   0x438a86
  438ae0:	sbb    ebx,0x0
  438ae3:	add    BYTE PTR [edx-0x3f],dl
  438ae6:	mov    ebx,DWORD PTR [ebx+0xe1d6]
  438aec:	dec    ebp
  438aed:	cmp    dl,BYTE PTR [ebx+ecx*4]
  438af0:	xchg   esi,eax
  438af1:	jns    0x438b30
  438af3:	mov    DWORD PTR [ebx+0x7a],ebp
  438af6:	jle    0x438b16
  438af8:	push   ds
  438af9:	in     eax,0x7
  438afb:	mov    ebx,DWORD PTR [ebx+0x7a]
  438afe:	stc    
  438aff:	inc    eax
  438b00:	mov    ds:0x53db839f,al
  438b05:	add    BYTE PTR [ebx+0x5b],bl
  438b08:	sub    esp,DWORD PTR [ebx]
  438b0a:	(bad)
  438b0d:	sti    
  438b0e:	in     al,0x83
  438b10:	mov    edx,0x138d52c1
  438b15:	add    al,0x26
  438b17:	leave  
  438b18:	into   
  438b19:	fild   WORD PTR [eax]
  438b1b:	add    BYTE PTR [esi-0x26],dl
  438b1e:	ror    BYTE PTR [ebp-0x749d5c7e],cl
  438b24:	push   edx
  438b25:	int3   
  438b26:	loopne 0x438b8e
  438b28:	push   ebp
  438b29:	lock bound eax,QWORD PTR [ebx]
  438b2c:	shl    BYTE PTR [ebp-0x4f],0xce
  438b30:	xor    cl,bh
  438b32:	inc    esp
  438b33:	inc    ebp
  438b34:	out    0xa0,al
  438b36:	jne    0x438b30
  438b38:	sbb    DWORD PTR [edi+0x1d2f33e4],eax
  438b3e:	ja     0x438b15
  438b40:	xchg   edi,eax
  438b41:	jecxz  0x438b3c
  438b43:	mov    al,0x7b
  438b45:	cld    
  438b46:	std    
  438b47:	add    BYTE PTR [eax],0x0
  438b4a:	fnsave [edx]
  438b4c:	adc    cl,BYTE PTR [ecx]
  438b4e:	mov    eax,0xa4dfc74a
  438b53:	mov    esi,0x4aa661c3
  438b58:	(bad)  
  438b59:	(bad)  
  438b5b:	xchg   esi,eax
  438b5c:	push   0xfffffff9
  438b5e:	loopne 0x438bcc
  438b60:	jnp    0x438b66
  438b62:	mov    al,ds:0x51ed2544
  438b67:	ret    
  438b68:	leave  
  438b69:	test   dl,dl
  438b6b:	pop    ecx
  438b6c:	cmp    eax,0x7559f3cc
  438b71:	in     al,dx
  438b72:	lods   al,BYTE PTR ds:[esi]
  438b73:	jp     0x438b70
  438b75:	test   BYTE PTR [edx+0x6f],ch
  438b78:	rcl    DWORD PTR [eax-0x4c],cl
  438b7b:	mov    esi,0x37407b
  438b80:	int    0xb
  438b82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438b83:	outs   dx,BYTE PTR ds:[esi]
  438b84:	add    edi,0xffffff90
  438b87:	ja     0x438bcd
  438b89:	xchg   edx,esp
  438b8b:	sahf   
  438b8c:	jbe    0x438bd9
  438b8e:	or     DWORD PTR [ebx+0x77],0x50
  438b92:	and    eax,DWORD PTR [edi-0x78d0fffc]
  438b98:	add    al,0xc1
  438b9a:	mov    cl,0xb2
  438b9c:	adc    BYTE PTR [eax],al
  438b9e:	das    
  438b9f:	xchg   edx,eax
  438ba0:	add    al,BYTE PTR [eax]
  438ba2:	das    
  438ba3:	add    dl,BYTE PTR [ebx+0x7a]
  438ba6:	sbb    ebp,ebp
  438ba8:	cmp    DWORD PTR [eax+esi*4],0xffffff86
  438bac:	call   0x40438bce
  438bb1:	or     al,0xcd
  438bb3:	adc    ebp,DWORD PTR [edi]
  438bb5:	xchg   DWORD PTR [ebx-0x6e],edi
  438bb8:	(bad)  
  438bba:	cmc    
  438bbb:	add    ebp,DWORD PTR [edi]
  438bbd:	gs pop esi
  438bbf:	mov    es,WORD PTR [ebx-0x4ffc1619]
  438bc5:	and    DWORD PTR [esi+0x3e],eax
  438bc8:	stos   DWORD PTR es:[edi],eax
  438bc9:	scas   al,BYTE PTR es:[edi]
  438bca:	mov    eax,ds:0xe9de2f0f
  438bcf:	jp     0x438bc8
  438bd1:	xchg   edi,esp
  438bd3:	xor    ch,cl
  438bd5:	add    al,0x61
  438bd7:	shr    BYTE PTR [edi+0x6c2aa9e0],1
  438bdd:	jbe    0x438b75
  438bdf:	cmp    DWORD PTR [edx+0x3c],esp
  438be2:	mov    edx,0xebde2f0f
  438be7:	call   0x244eb4d
  438bec:	inc    esp
  438bed:	loope  0x438b97
  438bef:	jp     0x438b71
  438bf1:	xchg   esp,ebp
  438bf3:	xor    ch,bh
  438bf5:	jnp    0x438c57
  438bf7:	aam    0x1c
  438bf9:	fsubp  st(1),st
  438bfb:	jp     0x438bba
  438bfd:	push   cs
  438bfe:	out    dx,al
  438bff:	add    ebp,DWORD PTR [edi]
  438c01:	gs data16 (bad) 
  438c04:	sti    
  438c05:	out    0xe9,al
  438c07:	add    ebx,ecx
  438c09:	fucomp st(1)
  438c0b:	add    ebp,DWORD PTR [edi]
  438c0d:	add    al,0x71
  438c0f:	xsave  [esi+eiz*2-0x1fffff03]
  438c17:	shr    ecx,1
  438c19:	add    ebp,DWORD PTR [edi]
  438c1b:	jnp    0x438c8d
  438c1d:	fwait
  438c1e:	cmp    eax,0x7a80e9de
  438c23:	repnz loop 0x438c1c
  438c26:	lahf   
  438c27:	and    ch,BYTE PTR [ebx+0x1]
  438c2a:	or     BYTE PTR [esi+ecx*2+0xd],ah
  438c2e:	das    
  438c2f:	fisubr WORD PTR [edx-0x5b]
  438c32:	(bad)  
  438c34:	add    cl,ch
  438c36:	sub    al,0x7c
  438c38:	jl     0x438c75
  438c3a:	mov    bl,0x26
  438c3c:	cmc    
  438c3d:	jb     0x438c3e
  438c3f:	loop   0x438bca
  438c41:	mov    bl,0x20
  438c43:	bound  edi,QWORD PTR [edi-0x47]
  438c46:	sub    dh,bl
  438c48:	add    BYTE PTR [eax+0x35],dh
  438c4b:	cmp    al,0x8c
  438c4d:	and    DWORD PTR [ebx+0x71],esp
  438c50:	test   BYTE PTR [edx+0x2b],al
  438c53:	cli    
  438c54:	adc    DWORD PTR [edx-0x6e165f8b],ebx
  438c5a:	push   edi
  438c5b:	jne    0x438c55
  438c5d:	mov    dl,0xad
  438c5f:	mov    eax,ds:0x7b5569fd
  438c64:	jne    0x438c6c
  438c66:	push   ebp
  438c67:	pop    ds
  438c68:	stc    
  438c69:	pusha  
  438c6a:	out    dx,eax
  438c6b:	jb     0x438c59
  438c6d:	out    dx,al
  438c6e:	inc    edi
  438c6f:	inc    edx
  438c70:	sbb    eax,0xde2ce9
  438c75:	bound  edi,QWORD PTR [edx]
  438c77:	push   cs
  438c78:	or     eax,0x2c0000e9
  438c7d:	popa   
  438c7e:	test   DWORD PTR [edi+0x77],ebp
  438c81:	loope  0x438c83
  438c83:	jmp    0xe2a4e4af
  438c88:	sub    al,0xde
  438c8a:	dec    eax
  438c8b:	pusha  
  438c8c:	adc    DWORD PTR [esi],ecx
  438c8e:	or     eax,0x2042ce9
  438c93:	jb     0x438cd6
  438c95:	arpl   WORD PTR [edi-0x78589b7],ax
  438c9b:	shl    DWORD PTR [edx],0x87
  438c9e:	clc    
  438c9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438ca0:	out    0x5f,al
  438ca2:	popa   
  438ca3:	repnz sub al,0xde
  438ca6:	and    DWORD PTR [ebx+0x358e7ad2],0x3f
  438cad:	fiadd  WORD PTR [eax]
  438caf:	add    BYTE PTR [ebp+0x56144cf3],bh
  438cb5:	fidivr WORD PTR [edi-0x64]
  438cb8:	shl    BYTE PTR [ebp-0x20b90003],1
  438cbe:	xchg   edx,eax
  438cbf:	push   esp
  438cc0:	sub    bl,dh
  438cc2:	add    BYTE PTR [ebx+0x148e90],cl
  438cc8:	push   es
  438cc9:	cmc    
  438cca:	jl     0x438c5a
  438ccc:	ret    0xf876
  438ccf:	(bad)  
  438cd0:	clc    
  438cd1:	test   BYTE PTR [edi+eax*4],0xe8
  438cd5:	fimul  WORD PTR [edi+ebx*4]
  438cd8:	lea    esi,[ecx]
  438cda:	lock data16 (bad) 
  438cdd:	into   
  438cde:	mov    DWORD PTR [edx-0x1f960000],ecx
  438ce4:	pop    eax
  438ce5:	adc    al,0xd6
  438ce7:	fnstsw WORD PTR [esi-0x74]
  438cea:	enter  0x14a5,0x0
  438cee:	(bad)  
  438cef:	pop    esi
  438cf0:	mov    ebp,0xa0cec04
  438cf5:	mov    dh,0x24
  438cf7:	outs   dx,DWORD PTR ds:[esi]
  438cf8:	cmc    
  438cf9:	push   cs
  438cfa:	clc    
  438cfb:	or     al,0x7e
  438cfd:	dec    ebp
  438cfe:	mov    esi,0x2a88b703
  438d03:	jae    0x438d55
  438d05:	adc    al,0x96
  438d07:	fisttp QWORD PTR [ecx]
  438d09:	mov    bh,0xd7
  438d0b:	fwait
  438d0c:	jg     0x438d62
  438d0e:	or     edi,ebx
  438d10:	bound  ecx,QWORD PTR [ecx-0x77089cd6]
  438d16:	adc    BYTE PTR [ebp-0x3],bh
  438d19:	inc    DWORD PTR [esi+0xd015e9c]
  438d1f:	mov    ebx,0x158e4d7f
  438d24:	xchg   esp,ebp
  438d26:	rol    DWORD PTR [edx],0x76
  438d29:	les    ebp,FWORD PTR [edi]
  438d2b:	mov    eax,DWORD PTR [ecx+0x472ffba]
  438d31:	add    BYTE PTR ds:0x403e6f70,ch
  438d37:	clc    
  438d38:	pop    esp
  438d39:	stc    
  438d3a:	test   eax,0x2f0010db
  438d3f:	cld    
  438d40:	jne    0x438d96
  438d42:	inc    ebx
  438d43:	xchg   DWORD PTR [eax*4-0x59470000],eax
  438d4a:	stc    
  438d4b:	call   FWORD PTR [eax]
  438d4d:	cld    
  438d4e:	scas   al,BYTE PTR es:[edi]
  438d4f:	pop    es
  438d50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438d51:	bnd jne 0x438db0
  438d54:	xor    al,0x87
  438d56:	add    al,0x85
  438d58:	jmp    0xf92eaa6b
  438d5d:	scas   eax,DWORD PTR es:[edi]
  438d5e:	js     0x438dbb
  438d60:	repz sbb DWORD PTR [esi+0x487343c],eax
  438d67:	call   0xf9a0670a
  438d6c:	js     0x438d9a
  438d6e:	jns    0x438d53
  438d70:	jb     0x438d36
  438d72:	das    
  438d73:	int3   
  438d74:	sti    
  438d75:	mov    dl,0x2f
  438d77:	int3   
  438d78:	repz retf 0xcc2f
  438d7c:	jmp    0x438dd6
  438d7e:	jns    0x438d70
  438d80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438d81:	add    BYTE PTR [eax],al
  438d83:	add    eax,0x8a91872f
  438d88:	mov    ebx,0x1000486
  438d8d:	lahf   
  438d8e:	or     cl,ch
  438d90:	nop
  438d91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438d92:	mov    BYTE PTR [edx+0x46c57],al
  438d98:	mov    dl,0x8
  438d9a:	test   DWORD PTR [edi],eax
  438d9c:	das    
  438d9d:	xchg   DWORD PTR [edx+0x643876e7],edi
  438da3:	stc    
  438da4:	mov    edx,0x2a1467dd
  438da9:	fsubp  st(1),st
  438dab:	mov    bl,0x0
  438dad:	add    BYTE PTR [eax-0x56],dl
  438db0:	lea    esp,[ebx+0x56]
  438db3:	pop    esp
  438db4:	sahf   
  438db5:	adc    BYTE PTR [edi+0x2f03e9cb],al
  438dbb:	test   ebx,ebp
  438dbd:	nop
  438dbe:	lock fstp st(6)
  438dc1:	cdq    
  438dc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438dc3:	fldcw  WORD PTR [edx]
  438dc5:	les    ebp,FWORD PTR [eax]
  438dc7:	add    ch,BYTE PTR [ebx-0x60]
  438dca:	mov    ch,0xf8
  438dcc:	repz add ebp,DWORD PTR [edi]
  438dcf:	(bad)  
  438dd1:	in     al,dx
  438dd2:	daa    
  438dd3:	xor    BYTE PTR [edx-0x1],bh
  438dd6:	dec    ebx
  438dd7:	push   ds
  438dd8:	jmp    0x32e2:0x503a83e9
  438ddf:	fsubp  st(1),st
  438de1:	add    edi,DWORD PTR [esi+esi*4-0x2a]
  438de5:	cdq    
  438de6:	mov    bh,0xd4
  438de8:	stos   BYTE PTR es:[edi],al
  438de9:	ret    
  438dea:	loopne 0x438ded
  438dec:	imul   esp,DWORD PTR [eax+0x3e3f8a5],0x2f
  438df3:	fimul  WORD PTR [esi+edx*1-0x2a5cfca]
  438dfa:	add    ebx,DWORD PTR [esi]
  438dfc:	jmp    0x2ae2:0x583a3be9
  438e03:	fsubp  st(1),st
  438e05:	add    ebx,DWORD PTR [esi+ebp*4]
  438e08:	push   0x6b
  438e0a:	sub    ebx,DWORD PTR [ebx-0x1e]
  438e0d:	push   es
  438e0e:	adc    al,0x2e
  438e10:	pop    ebp
  438e11:	iret   
  438e12:	add    BYTE PTR [eax],al
  438e14:	push   eax
  438e15:	int    0xe8
  438e17:	xchg   ecx,eax
  438e18:	xlat   BYTE PTR ds:[ebx]
  438e19:	shr    cl,1
  438e1b:	add    esp,ebp
  438e1d:	call   0xd801:0x1deb9132
  438e24:	sub    esp,DWORD PTR [ecx+ebp*4-0x29]
  438e28:	sub    al,0xde
  438e2a:	push   esi
  438e2b:	stos   BYTE PTR es:[edi],al
  438e2c:	test   eax,0x686c0386
  438e31:	mov    bh,0x11
  438e33:	call   0xe952d4f6
  438e38:	sub    al,0x14
  438e3a:	les    ebp,FWORD PTR [edx-0x2c]
  438e3d:	js     0x438dc4
  438e3f:	sub    eax,0x6701e873
  438e44:	test   ah,cl
  438e46:	add    cl,ch
  438e48:	out    dx,al
  438e49:	cmp    ebp,eax
  438e4b:	xor    eax,0x2dc5aa70
  438e50:	push   0xa1bcc5aa
  438e55:	mov    DWORD PTR [esp+eiz*4-0x7a769ecc],ecx
  438e5c:	push   es
  438e5d:	ja     0x438e57
  438e5f:	push   0x5b
  438e61:	jecxz  0x438ed9
  438e63:	sar    BYTE PTR [ecx-0x1f4b73f4],0xfc
  438e6a:	mov    edi,DWORD PTR [edi]
  438e6c:	(bad)  
  438e6d:	test   eax,0xdee472e3
  438e72:	pop    esi
  438e73:	loopne 0x438ed1
  438e75:	psubsw mm0,QWORD PTR ss:[eax]
  438e79:	add    BYTE PTR [eiz*8-0x345b9e52],ch
  438e80:	add    cl,ch
  438e82:	test   eax,0xb0610d0d
  438e87:	out    0x7,eax
  438e89:	aaa    
  438e8a:	and    al,0x2f
  438e8c:	psubsw mm5,QWORD PTR [esi*2+0x25abf541]
  438e94:	or     eax,0x88dedb62
  438e99:	in     eax,dx
  438e9a:	jge    0x438efd
  438e9c:	xchg   ecx,eax
  438e9d:	add    BYTE PTR [edx-0x4600078d],ch
  438ea3:	mov    eax,ds:0xc856b114
  438ea8:	mov    esi,0x7debc566
  438ead:	dec    ebp
  438eae:	popaw  
  438eb0:	mov    bh,0xf3
  438eb2:	fcomip st,st(1)
  438eb4:	mov    ah,0x16
  438eb6:	inc    esi
  438eb7:	fidivr DWORD PTR [ebp+0x55]
  438eba:	push   0xffffff84
  438ebc:	jg     0x438e6e
  438ebe:	out    dx,al
  438ebf:	jae    0x438eb9
  438ec1:	call   FWORD PTR [eax]
  438ec3:	cmp    DWORD PTR [esi+0x1],ebx
  438ec6:	scas   al,BYTE PTR es:[edi]
  438ec7:	mov    eax,0x5b99ffed
  438ecc:	mov    ebp,0x631aeb04
  438ed1:	mov    esp,ebx
  438ed3:	ins    DWORD PTR es:[edi],dx
  438ed4:	(bad)
  438ed9:	add    ecx,DWORD PTR [edi+0x16b562]
  438edf:	add    BYTE PTR [esi],dl
  438ee1:	loop   0x438f60
  438ee3:	dec    ebp
  438ee4:	(bad)  
  438ee5:	xchg   edi,edi
  438ee7:	(bad)  
  438ee8:	jle    0x438f62
  438eea:	clc    
  438eeb:	dec    DWORD PTR [ebp+0x2d]
  438eee:	or     al,0x6a
  438ef0:	xlat   BYTE PTR ds:[ebx]
  438ef1:	or     DWORD PTR [edi+0x75ff39fb],esp
  438ef7:	(bad)
  438efb:	int3   
  438efc:	sub    cl,BYTE PTR [esi]
  438efe:	(bad)
  438f01:	or     eax,0xe0accc5
  438f06:	(bad)
  438f09:	(bad)  
  438f0a:	in     eax,0x8b
  438f0c:	shr    ecx,cl
  438f0e:	pop    ebx
  438f0f:	jmp    0x3da2d6
  438f14:	retf   0xc525
  438f17:	int3   
  438f18:	das    
  438f19:	mov    dl,0x85
  438f1b:	in     al,dx
  438f1c:	fidiv  WORD PTR [edi-0x2ae0a47b]
  438f22:	test   DWORD PTR [ebx+0x27],esi
  438f25:	or     BYTE PTR [edx+0x4872f84],ah
  438f2b:	add    BYTE PTR [eax],al
  438f2d:	cmp    al,0xbf
  438f2f:	sti    
  438f30:	das    
  438f31:	xchg   DWORD PTR [eax+eax*1],eax
  438f34:	fnstenv [edi-0x3353c57b]
  438f3a:	xor    dh,bh
  438f3c:	ret    
  438f3d:	jle    0x438fab
  438f3f:	repnz inc esi
  438f41:	pop    esp
  438f42:	popa   
  438f43:	xchg   DWORD PTR [eax],eax
  438f45:	add    al,dh
  438f47:	mov    ds:0x80178287,al
  438f4c:	add    al,0x0
  438f4e:	jg     0x438faf
  438f50:	sbb    esp,edi
  438f52:	and    ah,bh
  438f54:	xchg   BYTE PTR [edx+0x47053],cl
  438f5a:	jle    0x438f7b
  438f5c:	and    eax,0x7d2408fc
  438f61:	les    esi,FWORD PTR [edi]
  438f63:	lock dec ecx
  438f65:	call   0xf9a444b8
  438f6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438f6b:	adc    al,0xac
  438f6d:	adc    ch,BYTE PTR [edi]
  438f6f:	xchg   DWORD PTR [ebp+0x474938a],eax
  438f75:	add    BYTE PTR [eax+ecx*8-0x7f1182fb],ch
  438f7c:	inc    ebx
  438f7d:	out    0x2c,al
  438f7f:	(bad)  
  438f80:	push   0xfffffffd
  438f82:	mov    bh,0x41
  438f84:	pop    eax
  438f85:	xor    eax,0xe508ebe5
  438f8a:	sub    al,0xfa
  438f8c:	les    eax,FWORD PTR [edx]
  438f8e:	mov    ah,0xd5
  438f90:	xchg   BYTE PTR ds:0x4222de2b,bh
  438f96:	push   ds
  438f97:	fnstenv [edx-0x37]
  438f9a:	and    al,0x5b
  438f9c:	stos   BYTE PTR es:[edi],al
  438f9d:	fcomp  DWORD PTR [ecx+ebp*2]
  438fa0:	inc    ebp
  438fa1:	clc    
  438fa2:	fist   WORD PTR [eax]
  438fa4:	sbb    dh,BYTE PTR [esi+0x5fb82e90]
  438faa:	add    BYTE PTR [eax],al
  438fac:	jbe    0x43900e
  438fae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438faf:	hlt    
  438fb0:	push   ecx
  438fb1:	and    ecx,ebp
  438fb3:	add    ebp,DWORD PTR [edi]
  438fb5:	popa   
  438fb6:	pusha  
  438fb7:	mov    WORD PTR [edi],gs
  438fb9:	fsubp  st(1),st
  438fbb:	pop    es
  438fbc:	es pop edx
  438fbe:	push   ebp
  438fbf:	add    al,0x2f
  438fc1:	(bad)  
  438fc3:	dec    ecx
  438fc4:	ss pop edx
  438fc6:	dec    ebp
  438fc7:	add    al,0x2f
  438fc9:	fidiv  WORD PTR [edx-0x72]
  438fcc:	jae    0x438f99
  438fce:	jmp    0xce3541d6
  438fd3:	nop
  438fd4:	jle    0x438fb0
  438fd6:	push   0x5d
  438fd8:	and    al,0xf4
  438fda:	mov    ebx,0xc8a0abe5
  438fdf:	xor    cl,BYTE PTR [edi]
  438fe1:	push   0xe58ef798
  438fe6:	addr16 pushf 
  438fe8:	sbb    eax,0xbd0ee9de
  438fed:	push   esp
  438fee:	jb     0x438fe6
  438ff0:	call   0x2909f368
  438ff5:	data16 inc BYTE PTR [esi+edx*8]
  438ff9:	sbb    al,0xee
  438ffb:	push   cs
  438ffc:	popf   
  438ffd:	push   esp
  438ffe:	push   ecx
  438fff:	test   al,0x73
  439002:	arpl   si,ax
  439004:	sbb    al,0x67
  439006:	mov    al,0xb
  439008:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439009:	shl    cl,cl
  43900b:	mov    ch,BYTE PTR [ebp+0xdf0132]
  439011:	add    BYTE PTR [esi+ebx*8],ch
  439014:	mul    DWORD PTR [edi+0x13114498]
  43901a:	jmp    0x43901b
  43901c:	rcl    ebx,cl
  43901e:	lods   eax,DWORD PTR ds:[esi]
  43901f:	sahf   
  439020:	hlt    
  439021:	pusha  
  439022:	mov    dl,0x32
  439024:	psubsw mm5,QWORD PTR [eax+eax*1]
  439028:	mov    bl,BYTE PTR [edi-0x6c]
  43902b:	rol    BYTE PTR [eax],1
  43902d:	jmp    0x9aa27137
  439032:	into   
  439033:	dec    DWORD PTR [ecx]
  439035:	push   edi
  439036:	(bad)  
  439037:	rol    BYTE PTR [eax],1
  439039:	jmp    0x7047c3eb
  43903e:	mov    ds:0x2ce90f32,al
  439043:	pop    ecx
  439044:	lea    esi,ds:[ebp+0x2cf22968]
  43904b:	fimul  WORD PTR [ebx+0xda3057]
  439051:	jmp    0x1885b342
  439056:	in     eax,dx
  439057:	and    cl,ch
  439059:	popf   
  43905a:	jle    0x4390d1
  43905c:	clc    
  43905d:	ins    BYTE PTR es:[edi],dx
  43905e:	stos   BYTE PTR es:[edi],al
  43905f:	gs or  ch,cl
  439062:	sub    al,0xe
  439064:	xchg   BYTE PTR [edi+0x78],bl
  439067:	fiadd  WORD PTR [eax]
  439069:	jmp    0x5202ea31
  43906e:	sub    DWORD PTR [edx-0x8],0xd99ad36
  439075:	inc    eax
  439076:	add    BYTE PTR [eax],al
  439078:	mov    dh,0xdd
  43907a:	add    cl,ch
  43907c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43907d:	addr16 mov ch,0xf7
  439080:	sub    al,0xde
  439082:	mov    edx,DWORD PTR [eax+eax*8-0x5214bf99]
  439089:	push   0x6
  43908b:	add    BYTE PTR [eax+0x168b622c],dh
  439091:	jns    0x439058
  439093:	loop   0x4390a2
  439095:	mov    eax,ds:0xe88f6614
  43909a:	mov    eax,0x9de8616
  43909f:	mov    dh,0x10
  4390a1:	push   edx
  4390a2:	adc    eax,DWORD PTR [eax]
  4390a4:	xchg   esi,eax
  4390a5:	gs push ebx
  4390a7:	or     BYTE PTR [esi],cl
  4390a9:	fiadd  WORD PTR [edi]
  4390ab:	dec    DWORD PTR [eax+0x76]
  4390ae:	or     DWORD PTR [esi+0x1356d0],esi
  4390b4:	push   esi
  4390b5:	gs dec ebx
  4390b7:	adc    al,0xcd
  4390b9:	sub    eax,DWORD PTR [eax]
  4390bb:	mov    BYTE PTR [edx],dh
  4390bd:	outs   dx,DWORD PTR ds:[esi]
  4390be:	jge    0x439056
  4390c0:	repnz imul edi,eax,0xffffffff
  4390c4:	mov    eax,ds:0x46b1149b
  4390c9:	les    edi,FWORD PTR [esi+0x76019566]
  4390cf:	ret    0x66b5
  4390d2:	xchg   ebx,eax
  4390d3:	mov    esp,0x6600de08
  4390d8:	(bad)  
  4390d9:	pop    eax
  4390da:	mov    ecx,0x6000016
  4390df:	(bad)  
  4390e1:	adc    ebp,eax
  4390e3:	scas   al,BYTE PTR es:[edi]
  4390e4:	loopne 0x43914c
  4390e6:	subps  xmm7,XMMWORD PTR [ecx+0x75de1616]
  4390ed:	rol    DWORD PTR ds:0xd8bc8b65,0xdd
  4390f4:	add    BYTE PTR [eax-0x62],ch
  4390f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4390f8:	cmp    BYTE PTR [eax],al
  4390fa:	out    dx,al
  4390fb:	adc    eax,0x66c64036
  439100:	ret    
  439101:	call   0x3d9aac
  439106:	das    
  439107:	add    al,0x49
  439109:	or     BYTE PTR [ecx+ebp*4-0x2738bd9c],dh
  439110:	push   ebp
  439111:	xor    DWORD PTR [eax+0x7184fceb],0xffffffdf
  439118:	sbb    edi,esi
  43911a:	mov    al,ds:0xf459b580
  43911f:	jmp    0x43917f
  439121:	pop    ebx
  439122:	ins    BYTE PTR es:[edi],dx
  439123:	inc    ebx
  439124:	dec    eax
  439125:	int3   
  439126:	jnp    0x4390da
  439128:	mov    esp,ebp
  43912a:	mov    ah,0xd2
  43912c:	add    al,0x4d
  43912e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43912f:	mov    edx,0x9ea450ec
  439134:	inc    ebx
  439135:	jmp    0xf9a69779
  43913a:	pusha  
  43913b:	xchg   DWORD PTR [edi*2+0x2ccf8654],eax
  439142:	add    BYTE PTR [eax],al
  439144:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439145:	mov    edx,0x77810910
  43914a:	add    esi,eax
  43914c:	scas   al,BYTE PTR es:[edi]
  43914d:	dec    esi
  43914e:	push   ebx
  43914f:	stc    
  439150:	das    
  439151:	xchg   edx,edx
  439153:	add    DWORD PTR [esi+0x2ff9534e],ebp
  439159:	xchg   DWORD PTR [ecx],eax
  43915b:	imul   DWORD PTR [esi+0x2ff952ff]
  439161:	xchg   edx,edx
  439163:	add    DWORD PTR [esi+0x2ff9531f],ebp
  439169:	xchg   DWORD PTR [ecx-0xbd9113f],ecx
  43916f:	pop    eax
  439170:	and    al,0xc6
  439172:	mov    eax,0x482ed5a
  439177:	push   edx
  439178:	mov    ah,0x31
  43917a:	or     BYTE PTR [ebx-0x74f5d627],al
  439180:	jno    0x439160
  439182:	call   0xb5590944
  439187:	inc    ecx
  439188:	cmp    ebx,esi
  43918a:	push   0x58
  43918c:	pop    ds
  43918d:	in     eax,dx
  43918e:	stos   BYTE PTR es:[edi],al
  43918f:	xchg   dl,ah
  439191:	jmp    0xb9cf2071
  439196:	jmp    0xdf21c09e
  43919b:	xchg   ebp,eax
  43919c:	sub    eax,0x9bc521dd
  4391a1:	jne    0x4391d6
  4391a3:	rcr    DWORD PTR [ebp+0x55e15e],1
  4391a9:	add    BYTE PTR [esi+0x2ed5e9dd],al
  4391af:	pop    edi
  4391b0:	rcl    DWORD PTR [ebp+0x76],0xdd
  4391b4:	jmp    0xdfa19254
  4391b9:	sbb    DWORD PTR [esi+0x78],0xffffffa9
  4391bd:	outs   dx,BYTE PTR ds:[esi]
  4391be:	ss lods al,BYTE PTR gs:[esi]
  4391c1:	inc    ebp
  4391c2:	dec    edi
  4391c3:	(bad)  
  4391c5:	inc    ebp
  4391c6:	push   edx
  4391c7:	xchg   edi,eax
  4391c8:	cmp    BYTE PTR [ebp+0x4f],al
  4391cb:	int    0x2e
  4391cd:	jo     0x2b89b6e7
  4391d3:	fisubr WORD PTR [eax+0x5f]
  4391d6:	jg     0x4391a2
  4391d8:	jmp    0x9c9fc7e0
  4391dd:	add    al,0x2f
  4391df:	fidiv  WORD PTR [ecx]
  4391e1:	stos   DWORD PTR es:[edi],eax
  4391e2:	rol    BYTE PTR [eax],1
  4391e4:	rcl    BYTE PTR [edx-0xe],0x9d
  4391e8:	push   esp
  4391e9:	cmpxchg BYTE PTR [ecx],cl
  4391ec:	fiadd  WORD PTR [edx+ecx*1+0x2f03ed2f]
  4391f3:	mov    ss:0x64de2f04,eax
  4391f9:	loopne 0x439207
  4391fb:	fiadd  WORD PTR [eax]
  4391fd:	out    0xbe,al
  4391ff:	int3   
  439200:	add    esp,DWORD PTR [ebx]
  439202:	and    al,0x2c
  439204:	dec    edi
  439205:	call   0x3347f933
  43920a:	xor    al,0x2c
  43920c:	dec    edi
  43920d:	jmp    0x43920f
  43920f:	add    BYTE PTR [ecx],ch
  439211:	addr16 add al,0x23
  439214:	and    al,0x2c
  439216:	dec    edi
  439217:	jmp    0x2c34:0x33046729
  43921e:	dec    edi
  43921f:	in     eax,dx
  439220:	sub    DWORD PTR [edi+0x4],esp
  439223:	and    esp,DWORD PTR [esp+ebp*1]
  439226:	dec    edi
  439227:	in     al,dx
  439228:	sub    DWORD PTR [edi+0x4],esp
  43922b:	mov    bl,0x35
  43922d:	sub    al,0x4f
  43922f:	out    dx,eax
  439230:	sub    DWORD PTR [edi+0x4],esp
  439233:	mov    ds:0xee4f2c25,eax
  439238:	sub    DWORD PTR [edi+0x4],esp
  43923b:	mov    bl,0x35
  43923d:	sub    al,0x4f
  43923f:	loope  0x43926a
  439241:	addr16 add al,0xa3
  439244:	and    eax,0x29f04f2c
  439249:	addr16 add al,0xb3
  43924c:	xor    eax,0x29e34f2c
  439251:	addr16 add al,0xa3
  439254:	and    eax,0x29f24f2c
  439259:	addr16 add al,0xb3
  43925c:	xor    eax,0x29e54f2c
  439261:	addr16 add al,0xa3
  439264:	and    eax,0x29f44f2c
  439269:	addr16 add al,0x33
  43926c:	xor    eax,0x29e74f2c
  439271:	addr16 add al,0x23
  439274:	add    BYTE PTR [eax],al
  439276:	and    eax,0xf9004f2c
  43927b:	xlat   BYTE PTR ds:[ebx]
  43927c:	out    dx,eax
  43927d:	add    ebx,DWORD PTR [eax+ebx*8]
  439280:	out    dx,eax
  439281:	adc    DWORD PTR [eax],0x6b
  439284:	inc    eax
  439285:	rcpps  xmm1,XMMWORD PTR [ecx+edi*8+0x685309ff]
  43928d:	adc    cl,0x5a
  439290:	repnz loope 0x4392aa
  439293:	add    DWORD PTR [edx],ecx
  439295:	imul   esi,esp,0x29ff00e3
  43929b:	fdivr  DWORD PTR [esi+0x25b27b8]
  4392a1:	and    BYTE PTR [ecx+0x79eab7fc],0x81
  4392a8:	(bad)  
  4392a9:	jbe    0x8c478cc4
  4392af:	adc    al,0x4c
  4392b1:	or     al,0x89
  4392b3:	out    dx,eax
  4392b4:	sub    eax,0x841469ff
  4392b9:	fstp   TBYTE PTR [ecx-0x12]
  4392bc:	mov    DWORD PTR [eax],0xfb75da56
  4392c2:	xchg   ch,ah
  4392c4:	jbe    0x43925b
  4392c6:	inc    esi
  4392c7:	fiadd  DWORD PTR [eax]
  4392c9:	mov    eax,DWORD PTR [ebp-0x24fb16e6]
  4392cf:	jge    0x4392f5
  4392d1:	add    BYTE PTR [ecx+0x4c],cl
  4392d4:	adc    eax,DWORD PTR [ebx]
  4392d6:	mov    esp,fs
  4392d8:	mov    dl,0x56
  4392da:	add    BYTE PTR [eax],al
  4392dc:	inc    edi
  4392dd:	(bad)  
  4392df:	add    ebx,esp
  4392e1:	xlat   BYTE PTR ds:[ebx]
  4392e2:	mov    dl,0x56
  4392e4:	adc    al,0xe3
  4392e6:	out    dx,eax
  4392e7:	add    ecx,esp
  4392e9:	xlat   BYTE PTR ds:[ebx]
  4392ea:	mov    dl,0x56
  4392ec:	add    eax,0x3c03efe3
  4392f1:	xlat   BYTE PTR ds:[ebx]
  4392f2:	mov    dl,0x56
  4392f4:	das    
  4392f5:	jnp    0x4392f4
  4392f7:	imul   BYTE PTR [ecx+eax*8]
  4392fa:	or     DWORD PTR [edx-0x90285a7],esi
  439300:	sub    al,0xb1
  439302:	or     DWORD PTR [edx-0x9028287],esi
  439308:	sub    al,0xc1
  43930a:	or     DWORD PTR [edx-0x9028387],esi
  439310:	sub    al,0xb1
  439312:	or     DWORD PTR [edx-0x90280a7],esi
  439318:	sub    al,0xc1
  43931a:	or     DWORD PTR [edx-0x90291a7],esi
  439320:	sub    al,0xb1
  439322:	or     DWORD PTR [edx-0x9027f07],esi
  439328:	sub    al,0xc1
  43932a:	or     DWORD PTR [edx-0x9029007],esi
  439330:	sub    al,0x31
  439332:	or     DWORD PTR [edx-0x9027d27],esi
  439338:	sub    al,0x41
  43933a:	or     DWORD PTR [edx-0x9028e27],esi
  439340:	add    BYTE PTR [eax],al
  439342:	sub    al,0x31
  439344:	or     DWORD PTR [edx-0x9027b07],esi
  43934a:	sub    al,0x41
  43934c:	or     DWORD PTR [edx-0x9028c07],esi
  439352:	sub    al,0x31
  439354:	jge    0x43933b
  439356:	pop    ds
  439357:	js     0x4393b4
  439359:	jge    0x4393cc
  43935b:	addr16 int3 
  43935d:	or     BYTE PTR [edx+0x28f9596b],ch
  439363:	add    dh,BYTE PTR ds:0x92843474
  439369:	add    ch,BYTE PTR [edi+edi*1]
  43936c:	ret    0x17fc
  43936f:	fidiv  WORD PTR [edx-0x26da0232]
  439375:	sub    DWORD PTR [esi],0x5e
  439378:	push   edi
  439379:	bound  edi,QWORD PTR [eax-0x1d152889]
  43937f:	fsub   st(1),st
  439381:	pop    eax
  439382:	out    0xe0,al
  439384:	xor    ebx,DWORD PTR [ebx-0x7c18a1b0]
  43938a:	fiadd  WORD PTR [ecx+ebp*1+0x3bf7266d]
  439391:	or     BYTE PTR [edi],ch
  439393:	ins    DWORD PTR es:[edi],dx
  439394:	pop    ss
  439395:	add    al,0xb9
  439397:	pop    eax
  439398:	daa    
  439399:	mov    ecx,0xb8fa7d79
  43939e:	sub    ebx,DWORD PTR [edi-0x2615495d]
  4393a4:	jmp    0x734393f0
  4393a9:	cdq    
  4393aa:	xchg   ebp,eax
  4393ab:	mov    WORD PTR [ebx+0x20ce6313],cs
  4393b1:	arpl   ax,bx
  4393b3:	sar    BYTE PTR [ecx],1
  4393b5:	pop    ecx
  4393b6:	and    eax,0xde22aa0c
  4393bb:	sub    ah,BYTE PTR [edi+0x57]
  4393be:	cli    
  4393bf:	mov    ebx,DWORD PTR [ebx]
  4393c1:	fild   QWORD PTR [ecx]
  4393c3:	(bad)  
  4393c4:	fnsave [eax+ebx*1-0x47]
  4393c8:	mov    ds:0x4b8b1599,eax
  4393cd:	pop    eax
  4393ce:	adc    eax,0x1696ac08
  4393d3:	or     DWORD PTR [edx-0x17770dde],esi
  4393d9:	frstor [edi+0x211e2f04]
  4393df:	sar    DWORD PTR [ecx],1
  4393e1:	or     ch,BYTE PTR [ebx-0x596504b8]
  4393e7:	dec    eax
  4393e8:	repz call 0x6a54:0xdc81c01
  4393f0:	xchg   edx,eax
  4393f2:	mov    edi,DWORD PTR [ebp-0x527459d8]
  4393f8:	and    BYTE PTR [edx+0x62d4ab8b],ch
  4393fe:	fwait
  4393ff:	pop    ebp
  439400:	sub    ebx,esi
  439402:	add    BYTE PTR [edx],al
  439404:	ins    BYTE PTR es:[edi],dx
  439405:	popa   
  439406:	inc    ebx
  439407:	cmc    
  439408:	mov    ch,0x14
  43940a:	jne    0x4393c1
  43940c:	add    BYTE PTR [eax],al
  43940e:	sub    eax,0xe5ebec2b
  439413:	sub    al,0xe4
  439415:	stc    
  439416:	xor    eax,0x20fd8a86
  43941b:	popa   
  43941c:	cmp    DWORD PTR [ecx+0x33],0xffffffde
  439420:	add    BYTE PTR [edx+0x75],ah
  439423:	out    dx,eax
  439424:	cmp    esp,DWORD PTR [ecx]
  439426:	xchg   DWORD PTR [ecx-0x75],ebp
  439429:	and    DWORD PTR [edx-0x5a2ee2f6],esi
  43942f:	cld    
  439430:	cmp    BYTE PTR [eax+0x7f],ah
  439433:	mov    edi,0xf79671fc
  439438:	test   DWORD PTR [ebp+0x1e],ebx
  43943b:	fimul  WORD PTR [ecx-0x7441b0ab]
  439441:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439442:	loope  0x4393c9
  439444:	test   cl,cl
  439446:	sub    eax,0x5f053d63
  43944b:	bound  eax,QWORD PTR [ebx+0x5]
  43944e:	push   es
  43944f:	loopne 0x439452
  439451:	jmp    0x272c5582
  439456:	sub    eax,0x6e72e5b9
  43945b:	xrelease mov DWORD PTR ds:0x9903ca0f,ebp
  439462:	mov    ds:0x1e001cf2,eax
  439467:	in     al,0xb1
  439469:	pop    ds
  43946a:	lahf   
  43946b:	xor    esp,DWORD PTR [eax+edx*1]
  43946e:	adc    DWORD PTR [ebp+edx*2+0x38],ebx
  439472:	add    BYTE PTR [eax],al
  439474:	sbb    DWORD PTR [edx+0x55],0x6f580224
  43947b:	inc    eax
  43947c:	jge    0x4394f9
  43947e:	and    al,0xeb
  439480:	add    edx,DWORD PTR [esi+0x40]
  439483:	add    BYTE PTR ds:0xe2b70a18,ah
  439489:	mov    ds:0xe8d1cd2d,eax
  43948e:	loopne 0x439490
  439490:	(bad)  
  439491:	fidiv  WORD PTR [edi-0x16]
  439494:	(bad)  
  439495:	fdivrp st(7),st
  439497:	inc    ecx
  439499:	push   esi
  43949a:	int    0x0
  43949c:	(bad)  
  43949d:	fimul  WORD PTR [ecx]
  43949f:	mov    bh,0x8a
  4394a1:	sar    ecx,1
  4394a3:	cmp    eax,DWORD PTR ds:0xda8bdb8e
  4394a9:	retf   0xefc
  4394ac:	pop    ecx
  4394ad:	imul   esi,edi,0x3a
  4394b0:	retf   0x10ca
  4394b3:	jne    0x4394e6
  4394b5:	pop    edx
  4394b6:	or     eax,0x248dfd24
  4394bb:	add    al,0xfd
  4394bd:	test   DWORD PTR [eax+eiz*1],esp
  4394c0:	test   DWORD PTR [edi],ecx
  4394c2:	jle    0x439508
  4394c4:	sub    ch,BYTE PTR [esi-0x52]
  4394c7:	clc    
  4394c8:	jo     0x4394da
  4394ca:	cli    
  4394cb:	(bad)  
  4394cc:	loop   0x439497
  4394ce:	or     BYTE PTR [ecx],al
  4394d0:	inc    esi
  4394d1:	fimul  WORD PTR [ebx-0x829a94c]
  4394d7:	inc    DWORD PTR [eax]
  4394d9:	add    BYTE PTR [esi+0x55],dl
  4394dc:	std    
  4394dd:	xor    DWORD PTR [ebp+0x6a],esp
  4394e0:	cs jne 0x439512
  4394e3:	imul   ecx,DWORD PTR [ecx+0x1180fd44],0xc77b6544
  4394ed:	add    BYTE PTR [ebp+esi*1+0x5d067305],ch
  4394f4:	aam    0x7c
  4394f6:	in     eax,dx
  4394f7:	sub    DWORD PTR [ebx+0x47808f9],0x73
  4394fe:	sub    esp,esi
  439500:	inc    edx
  439501:	(bad)  
  439502:	out    dx,eax
  439503:	pop    ds
  439504:	in     eax,dx
  439505:	sub    ebp,DWORD PTR [esi]
  439507:	hlt    
  439508:	xor    al,BYTE PTR [eax]
  43950a:	mov    edx,0x63851a7b
  43950f:	jecxz  0x43952d
  439511:	and    eax,0xff0272f0
  439516:	shl    BYTE PTR [edi-0x31],1
  439519:	dec    ebx
  43951a:	mov    ah,0x2b
  43951c:	sbb    BYTE PTR [eax],bh
  43951e:	mov    ah,0x2b
  439520:	sbb    BYTE PTR [esp+esi*8],bl
  439523:	mov    bl,0xcd
  439525:	or     al,0xa4
  439527:	push   ebx
  439528:	sbb    BYTE PTR [eax],cl
  43952a:	mov    ah,0x5d
  43952c:	les    eax,FWORD PTR [ebx+eax*1+0x438500a3]
  439533:	fwait
  439534:	imul   ecx,DWORD PTR [edx-0x70],0x78
  439538:	dec    ebp
  439539:	test   ebx,ebp
  43953b:	(bad)  
  43953d:	xchg   BYTE PTR [eax],al
  43953f:	add    bl,ch
  439541:	loop   0x43953b
  439543:	xchg   ch,ah
  439545:	push   es
  439546:	sbb    bh,BYTE PTR [ebp+0x748969f2]
  43954c:	adc    edi,DWORD PTR [ebx+0x1]
  43954f:	lock mov dh,0xb3
  439552:	and    BYTE PTR [eax],cl
  439554:	sub    al,ch
  439556:	scas   eax,DWORD PTR es:[edi]
  439557:	aaa    
  439558:	push   eax
  439559:	cld    
  43955a:	fnstcw WORD PTR [edi]
  43955c:	mov    dh,0xde
  43955e:	cmp    eax,0xee553320
  439563:	pop    ds
  439564:	push   eax
  439565:	mov    edi,0x5536548e
  43956a:	and    BYTE PTR cs:[edi-0x5f],ah
  43956e:	and    BYTE PTR es:[ebx-0x24],al
  439572:	call   0x249ac47a
  439577:	aam    0xab
  439579:	adc    DWORD PTR [esi+0x609b21b],edi
  43957f:	clc    
  439580:	stos   DWORD PTR es:[edi],eax
  439581:	sbb    ecx,esi
  439583:	sbb    bh,dl
  439585:	call   0x5cf61e75
  43958a:	push   ds
  43958b:	pop    ds
  43958c:	or     BYTE PTR [eax],0x9f
  43958f:	mov    dh,0xa3
  439591:	pushf  
  439592:	es inc edi
  439594:	jmp    0x43952f
  439596:	jmp    0x7086:0xe9de6886
  43959d:	fsubp  st(1),st
  43959f:	xchg   BYTE PTR [eax-0x22],ch
  4395a2:	jmp    0x7043962d
  4395a7:	fsubp  st(1),st
  4395a9:	add    ebp,DWORD PTR [edi]
  4395ab:	fsubp  st(0),st
  4395ad:	add    ebp,DWORD PTR [edi]
  4395af:	fsubp  st(2),st
  4395b1:	add    ebp,DWORD PTR [edi]
  4395b3:	(bad)  
  4395b5:	add    ebp,DWORD PTR [edi]
  4395b7:	(bad)  
  4395b9:	add    ebp,DWORD PTR [edi]
  4395bb:	faddp  st(6),st
  4395bd:	add    ebp,DWORD PTR [edi]
  4395bf:	ficomp WORD PTR [esi]
  4395c1:	add    al,0x2f
  4395c3:	ficom  WORD PTR [esi+0x4]
  4395c6:	das    
  4395c7:	fmulp  st(6),st
  4395c9:	add    al,0x2f
  4395cb:	faddp  st(6),st
  4395cd:	add    eax,0x7bede2f
  4395d2:	das    
  4395d3:	fidiv  WORD PTR [esi+0xde2f0b]
  4395d9:	mov    dh,0x2c
  4395db:	fiadd  WORD PTR [eax]
  4395dd:	scas   al,BYTE PTR es:[edi]
  4395de:	cmp    al,0x68
  4395e0:	clc    
  4395e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4395e2:	sbb    al,0xde
  4395e4:	add    BYTE PTR [esi-0x690797a4],bl
  4395ea:	(bad)  
  4395ec:	add    BYTE PTR [esi-0x79079884],cl
  4395f2:	jl     0x43965d
  4395f4:	clc    
  4395f5:	jle    0x439673
  4395f7:	fld    QWORD PTR [eax]
  4395f9:	jbe    0x439677
  4395fb:	aad    0x0
  4395fd:	outs   dx,BYTE PTR ds:[esi]
  4395fe:	pop    esp
  4395ff:	lds    eax,FWORD PTR [eax]
  439601:	pop    sp
  439603:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439604:	add    BYTE PTR [esi+0x5c],bl
  439607:	in     eax,0x0
  439609:	push   esi
  43960a:	add    BYTE PTR [eax],al
  43960c:	pop    esp
  43960d:	add    DWORD PTR gs:[esi+0x7c],ecx
  439611:	add    al,BYTE PTR gs:[esi+0x7c]
  439615:	gs add al,0x3e
  439618:	jl     0x43967f
  43961a:	add    BYTE PTR [esi],dh
  43961c:	jl     0x439683
  43961e:	or     BYTE PTR [esi],ch
  439620:	pop    esp
  439621:	sbb    BYTE PTR gs:[esi],ah
  439624:	pop    esp
  439625:	cmp    BYTE PTR gs:[esi],bl
  439628:	pop    esp
  439629:	gs js  0x439642
  43962c:	pop    esp
  43962d:	gs clc 
  43962f:	mov    dh,0xe6
  439631:	or     al,0x54
  439633:	gs test al,0x7a
  439636:	inc    ecx
  439637:	std    
  439638:	sbb    edx,esi
  43963a:	sbb    al,0x91
  43963c:	adc    esp,esp
  43963e:	adc    al,0x62
  439640:	(bad)
  439643:	out    dx,eax
  439644:	sub    DWORD PTR [esi+0x6079d384],ecx
  43964a:	cmp    eax,0x4d5f4f0d
  43964f:	add    eax,0x656267
  439654:	xor    ch,BYTE PTR [esi]
  439656:	jge    0x4396a6
  439658:	jbe    0x439642
  43965a:	pop    edx
  43965b:	or     al,0x2d
  43965d:	or     edx,esi
  43965f:	fst    QWORD PTR [ebp+0x8]
  439662:	js     0x43964d
  439664:	push   edi
  439665:	loop   0x439667
  439667:	add    BYTE PTR [ebp-0x58],al
  43966a:	jg     0x4396c8
  43966c:	(bad)  
  43966d:	xlat   BYTE PTR ds:[ebx]
  43966e:	jg     0x4396dc
  439670:	add    BYTE PTR [eax],al
  439672:	bnd ret 0x4c7f
  439676:	repnz push 0x7d
  439679:	inc    edi
  43967a:	dec    edx
  43967b:	out    0x49,eax
  43967d:	push   eax
  43967e:	(bad)  
  43967f:	lahf   
  439680:	and    al,0x8
  439682:	(bad)  
  439683:	daa    
  439684:	and    al,0xc
  439686:	into   
  439687:	loope  0x439689
  439689:	add    BYTE PTR [esi],al
  43968b:	call   0xfb78ead9
  439690:	dec    eax
  439691:	mov    edx,edx
  439693:	mov    esi,0xdad601b8
  439698:	add    BYTE PTR [ebx-0x1f3acd77],cl
  43969e:	mov    gs,ecx
  4396a0:	cmp    al,0x24
  4396a2:	shl    bh,cl
  4396a4:	inc    ecx
  4396a5:	sub    BYTE PTR ds:0x818b289c,bh
  4396ab:	into   
  4396ac:	jg     0x4396f2
  4396ae:	loop   0x43967e
  4396b0:	jg     0x4396fe
  4396b2:	jb     0x43967e
  4396b4:	jg     0x43970a
  4396b6:	jb     0x43968a
  4396b8:	jge    0x439729
  4396ba:	outs   dx,BYTE PTR ds:[esi]
  4396bb:	out    0x59,eax
  4396bd:	cmp    al,0xd
  4396bf:	(bad)  
  4396c0:	and    al,0x2c
  4396c2:	or     eax,0x4d142427
  4396c7:	sbb    al,0x72
  4396c9:	and    al,BYTE PTR ds:0x2f2afe1b
  4396cf:	aas    
  4396d0:	test   DWORD PTR [edi+ebp*1],ecx
  4396d3:	jne    0x4396d9
  4396d5:	and    eax,0xf16e0000
  4396da:	shl    BYTE PTR [ebx],1
  4396dc:	cmp    esp,DWORD PTR [ecx+ebp*4]
  4396df:	test   DWORD PTR [edi+0x63],esp
  4396e2:	inc    esp
  4396e3:	in     eax,dx
  4396e4:	xchg   ebp,eax
  4396e5:	or     ecx,ebx
  4396e7:	and    esp,DWORD PTR [ebx]
  4396e9:	out    dx,al
  4396ea:	fsub   DWORD PTR [ebx]
  4396ec:	and    ecx,DWORD PTR [ebp+eiz*8-0x10]
  4396f0:	imul   esi,DWORD PTR [ebx+0x4],0xeccb2f00
  4396f7:	sub    al,0xef
  4396f9:	icebp  
  4396fa:	or     al,BYTE PTR [edx-0x5c]
  4396fd:	xor    BYTE PTR [esi-0x43],bh
  439700:	daa    
  439701:	dec    eax
  439702:	pop    ebp
  439703:	add    eax,0x85556117
  439708:	adc    ebx,0x10
  43970b:	jge    0x439747
  43970d:	aaa    
  43970e:	inc    esp
  43970f:	cmp    eax,0x8401792f
  439714:	mov    dh,0x79
  439716:	add    al,0x0
  439718:	pop    eax
  439719:	nop
  43971a:	mov    ah,0x4c
  43971c:	jle    0x439767
  43971e:	push   0x83d32b85
  439723:	xor    al,0x13
  439725:	ja     0x43972b
  439727:	and    BYTE PTR [edi],ch
  439729:	pop    edx
  43972a:	jno    0x439782
  43972c:	cld    
  43972d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43972e:	fadd   DWORD PTR [ebx-0x4]
  439731:	mov    dh,0x1
  439733:	sahf   
  439734:	scas   al,BYTE PTR es:[edi]
  439735:	ror    cl,1
  439737:	bound  edx,QWORD PTR [ecx]
  439739:	loop   0x439709
  43973b:	aaa    
  43973c:	add    BYTE PTR [eax],al
  43973e:	scas   al,BYTE PTR es:[edi]
  43973f:	fsubrp st(2),st
  439741:	jae    0x43974d
  439743:	pop    ebx
  439744:	iret   
  439745:	das    
  439746:	scas   al,BYTE PTR es:[edi]
  439747:	jno    0x439724
  439749:	imul   ecx,DWORD PTR [edx],0x50d730de
  43974f:	es jmp 0xdf21c658
  439755:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439756:	test   al,0x76
  439758:	loop   0x4396de
  43975a:	dec    edi
  43975b:	aad    0x6a
  43975d:	dec    ebx
  43975e:	sub    eax,0x9158cfeb
  439763:	fsubp  st(1),st
  439765:	sub    DWORD PTR [edi],0xffffffeb
  439768:	jmp    0x4397c6
  43976a:	xor    ebx,DWORD PTR [ebp+0x2178c3e5]
  439770:	jmp    0x315c:0xe9de2f05
  439777:	popf   
  439778:	ffree  st(3)
  43977a:	loopne 0x43979c
  43977c:	jmp    0x79ad:0xe9de2f04
  439783:	or     DWORD PTR [edx],edx
  439785:	pop    ebp
  439786:	scas   al,BYTE PTR es:[edi]
  439787:	dec    ebp
  439788:	push   0x4c
  43978a:	ss in  eax,dx
  43978c:	in     al,dx
  43978d:	adc    al,0xef
  43978f:	sti    
  439790:	test   BYTE PTR [ebp-0x16],bh
  439793:	pop    ebp
  439794:	sub    esi,ebx
  439796:	sti    
  439797:	jge    0x43977c
  439799:	pop    ebx
  43979a:	stos   BYTE PTR es:[edi],al
  43979b:	leave  
  43979c:	add    eax,0xf1ba6b7d
  4397a1:	and    al,0x0
  4397a3:	add    ah,bh
  4397a5:	pop    eax
  4397a6:	out    0x72,al
  4397a8:	mov    cl,0x91
  4397aa:	add    al,0x30
  4397ac:	bnd jb 0x439815
  4397af:	inc    ebx
  4397b0:	cmp    al,0xc7
  4397b2:	sub    BYTE PTR [ebx+0x1f],bl
  4397b5:	cmp    cl,dl
  4397b7:	iret   
  4397b8:	dec    esp
  4397b9:	into   
  4397ba:	(bad)  
  4397bb:	mov    DWORD PTR [ecx],eax
  4397bd:	fucompp 
  4397bf:	add    esp,DWORD PTR [eax-0x16]
  4397c2:	mov    ebp,0x19a1ff7
  4397c7:	add    bh,al
  4397c9:	loopne 0x4397cb
  4397cb:	jmp    0xd40625d3
  4397d0:	sbb    DWORD PTR [edx-0x37],0xffffff91
  4397d4:	jnp    0x4397ab
  4397d6:	jl     0x4397b5
  4397d8:	xor    ebx,esi
  4397da:	add    BYTE PTR [ecx-0x36],ch
  4397dd:	(bad)  
  4397de:	ins    BYTE PTR es:[edi],dx
  4397df:	or     al,0x25
  4397e1:	lea    esi,[eax+ebx*8-0x2a]
  4397e5:	jl     0x43981b
  4397e7:	test   eax,0xa28b3751
  4397ec:	stos   DWORD PTR es:[edi],eax
  4397ed:	and    dl,BYTE PTR [ecx]
  4397ef:	mov    edx,0x73e8dad3
  4397f4:	out    dx,al
  4397f5:	and    eax,0xde2ce902
  4397fa:	ror    DWORD PTR [ecx-0x3526461d],cl
  439800:	addr16 xchg ecx,eax
  439802:	out    0xea,al
  439804:	pop    esp
  439805:	pop    ebx
  439806:	dec    ebp
  439807:	int    0x0
  439809:	add    BYTE PTR [esp+eiz*8],dl
  43980c:	sti    
  43980d:	fcompp 
  43980f:	fdiv   DWORD PTR [ebx]
  439811:	sub    DWORD PTR [ecx],edx
  439813:	cmp    DWORD PTR [ebx+0x1121ab32],ecx
  439819:	cmp    dl,BYTE PTR [ebx-0x27]
  43981c:	call   0xfd033f83
  439821:	jno    0x439812
  439823:	mov    edi,0x59160a04
  439828:	std    
  439829:	push   edi
  43982a:	inc    esp
  43982b:	mov    es,edx
  43982d:	inc    ebx
  43982e:	mov    ebx,0x8d3c559
  439833:	xchg   ecx,eax
  439834:	out    0x73,al
  439836:	repz xor eax,0x34b0e611
  43983c:	add    ecx,ebp
  43983e:	sub    al,0x5e
  439840:	loop   0x439842
  439842:	mov    eax,ds:0x4f3a638b
  439847:	pop    DWORD PTR [edi]
  439849:	mov    ch,BYTE PTR [edi]
  43984b:	iret   
  43984c:	shl    BYTE PTR [esi+0x43],0xe8
  439850:	mov    ebp,0xc56fc580
  439855:	loopne 0x4398d4
  439857:	pop    es
  439858:	jg     0x439827
  43985a:	mov    esi,0x560000da
  43985f:	mov    al,0xe0
  439861:	dec    eax
  439862:	cmp    al,0xb1
  439864:	adc    eax,0xf5feb5c5
  439869:	iret   
  43986a:	ins    DWORD PTR es:[edi],dx
  43986b:	fistp  QWORD PTR [edi+0x74]
  43986e:	add    BYTE PTR [eax],al
  439870:	sub    bh,BYTE PTR [esi-0x64a23883]
  439876:	and    al,0x28
  439878:	dec    ebp
  439879:	sbb    eax,0xdfaa820a
  43987e:	add    BYTE PTR [eax],al
  439880:	lea    esp,[ebx]
  439882:	and    al,0x18
  439884:	popf   
  439885:	or     al,0x1e
  439887:	repnz test DWORD PTR [edx],eax
  43988a:	test   BYTE PTR [ecx-0x75fe18e8],0x48
  439891:	fnstcw WORD PTR [esi+0x56]
  439894:	add    al,0x60
  439896:	ret    
  439897:	add    edi,DWORD PTR [esi-0x64]
  43989a:	test   DWORD PTR [edi-0x388a2357],0x8b9d0fd5
  4398a4:	call   0xfa13:0xf6e924ba
  4398ab:	call   DWORD PTR [ebp+0x15]
  4398ae:	clc    
  4398af:	je     0x439904
  4398b1:	shl    BYTE PTR [esp-0x22],cl
  4398b5:	mov    dh,BYTE PTR [ecx+0x24233d4f]
  4398bb:	sbb    BYTE PTR [edi],ch
  4398bd:	(bad)  
  4398be:	(bad)  
  4398bf:	jl     0x439857
  4398c1:	ja     0x43993f
  4398c3:	inc    ecx
  4398c4:	cs in  eax,dx
  4398c6:	mov    esi,0x33ba8fd
  4398cb:	jge    0x43993d
  4398cd:	jo     0x439922
  4398cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4398d0:	xchg   esi,eax
  4398d1:	fadd   QWORD PTR [ebp-0x7]
  4398d4:	add    BYTE PTR [eax],al
  4398d6:	js     0x439924
  4398d8:	mov    ebp,0x172aa08
  4398dd:	add    BYTE PTR [edi],ch
  4398df:	dec    ebp
  4398e0:	add    al,0x0
  4398e2:	das    
  4398e3:	jne    0x439916
  4398e5:	loopne 0x4398ce
  4398e7:	xlat   BYTE PTR ds:[ebx]
  4398e8:	aas    
  4398e9:	std    
  4398ea:	outs   dx,BYTE PTR ds:[esi]
  4398eb:	out    dx,eax
  4398ec:	mov    eax,0x9003723
  4398f1:	jle    0x439949
  4398f3:	out    dx,al
  4398f4:	inc    esi
  4398f5:	stc    
  4398f6:	cmp    BYTE PTR [edi*4+0x356aa08],cl
  4398fd:	add    BYTE PTR [edi],ch
  4398ff:	(bad)  
  439901:	add    BYTE PTR [edi],ch
  439903:	ja     0x439936
  439905:	loopne 0x43996e
  439907:	xchg   esp,eax
  439908:	aas    
  439909:	std    
  43990a:	out    dx,al
  43990b:	in     al,dx
  43990c:	mov    eax,0x8fc3b23
  439911:	jle    0x439929
  439913:	pop    DWORD PTR [ebp-0x7]
  439916:	clc    
  439917:	in     al,dx
  439918:	xor    al,0x85
  43991a:	imul   ebx,ebx,0x18
  43991d:	icebp  
  43991e:	push   es
  43991f:	std    
  439920:	fsub   DWORD PTR [ebx]
  439922:	daa    
  439923:	int3   
  439924:	inc    edx
  439925:	or     DWORD PTR [ebp+0x2f0002b9],ebp
  43992b:	je     0x439967
  43992d:	jge    0x43997a
  43992f:	ror    DWORD PTR [eax+eax*1],cl
  439932:	cmp    bl,bl
  439934:	sbb    DWORD PTR [edi+0x7919de2c],edi
  43993a:	add    BYTE PTR [eax],al
  43993c:	imul   edi,DWORD PTR [edx-0x1717f6ff],0xffffff89
  439943:	sbb    al,ah
  439945:	ins    DWORD PTR es:[edi],dx
  439946:	ds jns 0x4398e7
  439949:	mov    ch,0xfb
  43994b:	pop    eax
  43994c:	std    
  43994d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43994e:	sub    dh,dl
  439950:	cli    
  439951:	mov    ah,0x28
  439953:	push   ecx
  439954:	retf   
  439955:	push   ebp
  439956:	out    dx,eax
  439957:	sbb    BYTE PTR [ecx-0x1486cd8b],cl
  43995d:	mov    ecx,0xe8770919
  439962:	std    
  439963:	add    bl,bl
  439965:	mov    ecx,0xb55f010d
  43996a:	mov    eax,0x1e556718
  43996f:	sub    BYTE PTR [edi],ah
  439971:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439972:	test   al,0xd5
  439974:	push   ss
  439975:	mov    ch,0xa8
  439977:	push   eax
  439978:	xchg   ebx,eax
  439979:	push   ebp
  43997a:	push   ss
  43997b:	sub    bh,dh
  43997d:	push   esp
  43997e:	sub    BYTE PTR es:[edi-0x5b],bl
  439982:	test   al,0xd5
  439984:	inc    esi
  439985:	mov    ch,0xa8
  439987:	push   eax
  439988:	rcl    DWORD PTR [edi+esi*2+0x18],cl
  43998c:	add    DWORD PTR [ebp-0x32],esi
  43998f:	add    bh,bh
  439991:	mov    ah,0x78
  439993:	js     0x439a00
  439995:	mov    edx,0xe7b808d1
  43999a:	icebp  
  43999b:	sbb    BYTE PTR [eax+0x787e6c],dh
  4399a1:	add    dh,bl
  4399a3:	mov    ah,0x5b
  4399a5:	js     0x43999e
  4399a7:	ins    BYTE PTR es:[edi],dx
  4399a8:	jle    0x439a22
  4399aa:	arpl   WORD PTR [edx+0x60215b0d],di
  4399b0:	aaa    
  4399b1:	dec    esp
  4399b2:	mov    dl,0x60
  4399b4:	add    esi,esp
  4399b6:	fcmovnbe st,st(5)
  4399b8:	data16 and al,0x37
  4399bb:	jnp    0x4399c5
  4399bd:	xchg   edi,eax
  4399be:	or     BYTE PTR [edx-0x28f061f9],bh
  4399c4:	test   WORD PTR [eax-0x26],cx
  4399c8:	pop    es
  4399c9:	mov    ?,esi
  4399cb:	(bad)  
  4399cc:	out    0x30,eax
  4399ce:	pop    ss
  4399cf:	add    bl,BYTE PTR ds:0x8860e7f1
  4399d5:	out    0x3f,al
  4399d7:	and    DWORD PTR [esp+ebp*8-0x9ed10b3],eax
  4399de:	push   esi
  4399df:	imul   ecx,DWORD PTR [eax],0x4f
  4399e2:	xor    eax,0x65edbee3
  4399e7:	jno    0x4399e0
  4399e9:	push   0xffffffee
  4399eb:	mov    ebp,0xd6ecd207
  4399f0:	fcmovne st,st(1)
  4399f2:	inc    esp
  4399f3:	out    0xe0,al
  4399f5:	out    0x75,al
  4399f7:	test   BYTE PTR [ebp+eiz*8-0x4a51294f],cl
  4399fe:	xor    al,0xf6
  439a00:	leave  
  439a01:	ror    BYTE PTR [ebx+0x1cc15a],cl
  439a07:	add    BYTE PTR [edx],dl
  439a09:	and    ecx,ebp
  439a0b:	stc    
  439a0c:	mov    edx,0x1ccd74a7
  439a11:	xlat   BYTE PTR ds:[ebx]
  439a12:	jle    0x4399f1
  439a14:	xor    bl,dh
  439a16:	add    BYTE PTR [eax-0x9f34410],dh
  439a1c:	stos   BYTE PTR es:[edi],al
  439a1d:	ja     0x439a31
  439a1f:	jmp    0x439a4d
  439a21:	fimul  WORD PTR [ebx+0x11787239]
  439a27:	sbb    ebx,0x33497cd6
  439a2d:	fiadd  WORD PTR [eax]
  439a2f:	add    BYTE PTR [ebp-0x6],al
  439a32:	or     DWORD PTR [edx+eiz*8+0x64],esi
  439a36:	(bad)
  439a39:	test   eax,eax
  439a3b:	js     0xe62bb85b
  439a41:	add    DWORD PTR [bx+si],0xffffffb6
  439a45:	cwde   
  439a46:	clc    
  439a47:	add    ah,BYTE PTR [edi+0x63]
  439a4a:	(bad)
  439a4d:	adc    eax,0x64747721
  439a52:	push   0xfffffff5
  439a54:	cdq    
  439a55:	test   DWORD PTR [edx],edi
  439a57:	adc    DWORD PTR [eax-0x22],0x9
  439a5b:	xrelease mov BYTE PTR [eax-0x3c],bl
  439a5f:	and    BYTE PTR [ecx+0x0],bh
  439a62:	ret    0x2a8b
  439a65:	mov    esi,0x39d0f04
  439a6a:	or     bh,BYTE PTR [esi+0x0]
  439a6d:	add    BYTE PTR [esi+0x64],ch
  439a70:	jns    0x439a47
  439a72:	fstp   QWORD PTR [esi+0x75]
  439a75:	xadd   BYTE PTR [esi+0x97d87d],ah
  439a7c:	adc    DWORD PTR [ebx],ebp
  439a7e:	outs   dx,DWORD PTR ds:[esi]
  439a7f:	fs push 0xffffffc9
  439a82:	fisubr WORD PTR [edx+0x9]
  439a85:	test   BYTE PTR [edx-0x25],bh
  439a88:	add    BYTE PTR [eax],al
  439a8a:	xchg   ebp,eax
  439a8b:	sti    
  439a8c:	or     DWORD PTR [ecx+eiz*2+0x63],esi
  439a90:	(bad)
  439a93:	test   eax,eax
  439a95:	invd   
  439a97:	sbb    bl,BYTE PTR [esi]
  439a99:	call   0xc70193
  439a9e:	es xchg edi,eax
  439aa0:	clc    
  439aa1:	add    ch,BYTE PTR [edi-0x1e]
  439aa4:	ins    BYTE PTR es:[edi],dx
  439aa5:	and    al,0x3a
  439aa7:	ffreep st(1)
  439aa9:	sub    ebp,DWORD PTR [edi]
  439aab:	xor    DWORD PTR [eax],ebx
  439aad:	sub    BYTE PTR [esp+esi*4],dl
  439ab0:	cli    
  439ab1:	jge    0x439a39
  439ab3:	je     0x439ab9
  439ab5:	add    BYTE PTR [edx+ebp*4-0x5beb0e8a],dh
  439abc:	jle    0x439aa5
  439abe:	sub    al,0xfb
  439ac0:	add    DWORD PTR [eax-0x13e14d8],ecx
  439ac6:	mov    dh,0x26
  439ac8:	(bad)  
  439ac9:	jl     0x439b34
  439acb:	jae    0x439b49
  439acd:	inc    ecx
  439ace:	cs std 
  439ad0:	mov    dl,0xfd
  439ad2:	add    BYTE PTR [eax],al
  439ad4:	lods   eax,DWORD PTR ds:[esi]
  439ad5:	scas   eax,DWORD PTR es:[edi]
  439ad6:	(bad)  
  439ad7:	in     al,dx
  439ad8:	shr    ebx,cl
  439ada:	(bad)  
  439adb:	and    edx,DWORD PTR [ebx-0x4]
  439ade:	lahf   
  439adf:	and    esp,DWORD PTR [edi]
  439ae1:	ficomp WORD PTR [eax]
  439ae3:	stc    
  439ae4:	jo     0x439b5d
  439ae6:	jo     0x439b2f
  439ae8:	das    
  439ae9:	hlt    
  439aea:	inc    ebp
  439aeb:	(bad)  
  439aec:	fisttp DWORD PTR [esp+ecx*1+0x7c]
  439af0:	adc    ebx,ebp
  439af2:	shr    BYTE PTR [ebp-0x79c91420],1
  439af8:	xor    ah,dh
  439afa:	pop    ebx
  439afb:	std    
  439afc:	test   al,0xaf
  439afe:	add    ecx,DWORD PTR [eax+0x417c72f0]
  439b04:	sub    al,0xf4
  439b06:	inc    ecx
  439b07:	add    al,0x1c
  439b09:	mov    dl,0x75
  439b0b:	pop    esp
  439b0c:	dec    ebx
  439b0d:	aas    
  439b0e:	pop    ebx
  439b0f:	add    BYTE PTR [eax],bl
  439b11:	ins    DWORD PTR es:[edi],dx
  439b12:	dec    edx
  439b13:	test   DWORD PTR [eax],edx
  439b15:	mov    al,0xbc
  439b17:	or     BYTE PTR [edx+0x2ffffd7d],dh
  439b1d:	enter  0x95c,0x28
  439b21:	js     0x439b67
  439b23:	or     DWORD PTR [ecx-0x22],esi
  439b26:	sub    BYTE PTR ds:0xe3ea633b,ah
  439b2c:	and    ebx,esi
  439b2e:	jmp    0xe35b:0x62e2b23d
  439b35:	pop    esp
  439b36:	aas    
  439b37:	dec    ecx
  439b38:	add    BYTE PTR [eax],al
  439b3a:	mov    dl,0x5d
  439b3c:	xchg   edx,eax
  439b3d:	les    esi,FWORD PTR [edi]
  439b3f:	arpl   WORD PTR [eax+0x6ade2f04],ax
  439b45:	fs es in eax,dx
  439b48:	cmp    al,BYTE PTR [ebx+0x36]
  439b4b:	fsubr  QWORD PTR [eax]
  439b4d:	and    eax,0xe3ea6333
  439b52:	pop    ebx
  439b53:	fisub  WORD PTR [edx-0x40]
  439b56:	dec    esp
  439b57:	jmp    0x5b71:0xe2b23cea
  439b5e:	sbb    BYTE PTR [ebp-0x11],bl
  439b61:	dec    eax
  439b62:	mov    dl,0x5d
  439b64:	arpl   WORD PTR [edx+ebp*4],di
  439b67:	mov    ds:0x375e1005,al
  439b6c:	jae    0x439b3d
  439b6e:	or     al,0x16
  439b70:	adc    eax,DWORD PTR [ebp+0x26]
  439b73:	pusha  
  439b74:	mov    WORD PTR [ebx],es
  439b76:	das    
  439b77:	fsubp  st(2),st
  439b79:	cmp    al,0xca
  439b7b:	fscale 
  439b7d:	adc    ebp,DWORD PTR [edi]
  439b7f:	ror    DWORD PTR [ecx],cl
  439b81:	sbb    eax,0xcb9e178
  439b86:	pusha  
  439b87:	aam    0x41
  439b89:	sbb    eax,0x7c3e50f8
  439b8e:	push   ds
  439b8f:	or     DWORD PTR [ebx-0x46e69aa4],ebx
  439b95:	shr    DWORD PTR [edx+0x9],1
  439b98:	cdq    
  439b99:	push   esp
  439b9a:	shr    DWORD PTR [eax+0x6f],cl
  439b9d:	sbb    al,0x0
  439b9f:	add    BYTE PTR [edx],dl
  439ba1:	dec    ecx
  439ba2:	add    DWORD PTR [ecx],ebp
  439ba4:	jp     0x439b48
  439ba6:	sbb    al,0xb9
  439ba8:	and    esp,DWORD PTR [esi]
  439baa:	outs   dx,DWORD PTR ds:[esi]
  439bab:	adc    DWORD PTR [edx],esi
  439bad:	rcr    BYTE PTR [edx*1+0x582c4e2a],cl
  439bb4:	cmp    esp,DWORD PTR [esi]
  439bb6:	cmp    al,0x38
  439bb8:	inc    BYTE PTR [edx]
  439bba:	sub    al,0x18
  439bbc:	arpl   WORD PTR [edx+0x1620b58c],ax
  439bc2:	mov    WORD PTR [ebp+0x183c0e18],fs
  439bc8:	fdivrp st(2),st
  439bca:	sub    edi,DWORD PTR [eax]
  439bcc:	add    eax,DWORD PTR [edx+0x4b43168c]
  439bd2:	in     al,dx
  439bd3:	stc    
  439bd4:	xor    ecx,DWORD PTR [esi+0x2c]
  439bd7:	sbb    BYTE PTR [ebx],ah
  439bd9:	sub    eax,0x2d2bf16f
  439bde:	hlt    
  439bdf:	inc    ebp
  439be0:	add    ecx,DWORD PTR [edi+0x2c]
  439be3:	cli    
  439be4:	hlt    
  439be5:	and    esi,esp
  439be7:	inc    ebp
  439be8:	repz rcr DWORD PTR [edx*1-0xee3461c],1
  439bf0:	add    eax,DWORD PTR [edx]
  439bf2:	not    esi
  439bf4:	lock xchg esp,eax
  439bf6:	stc    
  439bf7:	cs ins BYTE PTR es:[edi],dx
  439bf9:	pop    esp
  439bfa:	mov    edx,0xde2ce3
  439bff:	shl    BYTE PTR [edi],cl
  439c01:	xchg   BYTE PTR [ecx],ah
  439c03:	cmp    eax,0x93370000
  439c08:	add    ecx,ebp
  439c0a:	sub    al,0xde
  439c0c:	mov    edx,0xde2cf2
  439c11:	xchg   edx,eax
  439c12:	pop    ss
  439c13:	xchg   ebp,eax
  439c14:	in     eax,dx
  439c15:	ss in  al,dx
  439c17:	pop    ebx
  439c18:	mov    edx,0xde2cf3
  439c1d:	add    BYTE PTR [ebp-0x158b82ae],bl
  439c23:	repz scas eax,DWORD PTR es:[edi]
  439c25:	cld    
  439c26:	and    DWORD PTR [edi],ebx
  439c28:	clc    
  439c29:	mov    ecx,0xdfdc
  439c2e:	jge    0x439c12
  439c30:	jge    0x439c76
  439c32:	sub    cl,BYTE PTR [edx-0x1f05367d]
  439c38:	jg     0x439c82
  439c3a:	(bad)  
  439c3c:	inc    eax
  439c3d:	sbb    al,0x3f
  439c3f:	push   edx
  439c40:	fld    QWORD PTR [eax]
  439c42:	push   ebp
  439c43:	in     eax,0x40
  439c45:	rol    BYTE PTR [ebp-0x3b8b0921],0xd8
  439c4c:	fisttp DWORD PTR [ebx-0x74a70426]
  439c52:	pop    ebp
  439c53:	xlat   BYTE PTR ds:[ebx]
  439c54:	push   eax
  439c55:	sbb    al,0x47
  439c57:	mov    ecx,0xa1372af5
  439c5c:	xlat   BYTE PTR ds:[ebx]
  439c5d:	add    ebx,DWORD PTR [ebp+0xa]
  439c60:	cmp    BYTE PTR [eax-0x6e],0xda
  439c64:	dec    esi
  439c65:	cmp    al,0xd
  439c67:	pop    ss
  439c68:	mov    WORD PTR [eax+eax*1+0x0],ds
  439c6c:	push   0x43
  439c6e:	das    
  439c6f:	pop    esp
  439c70:	cmp    cl,BYTE PTR [esi+0x73]
  439c73:	adc    al,0x3d
  439c75:	scas   eax,DWORD PTR es:[edi]
  439c76:	jge    0x439c90
  439c78:	iret   
  439c79:	and    BYTE PTR [esp+edx*1],0x45
  439c7d:	mov    al,0x7d
  439c7f:	pop    eax
  439c80:	pop    edx
  439c81:	pusha  
  439c82:	fimul  WORD PTR [ebx]
  439c84:	push   edi
  439c85:	and    DWORD PTR [esp+edx*1],0xffffffcf
  439c89:	out    dx,al
  439c8a:	lods   eax,DWORD PTR ds:[esi]
  439c8b:	add    DWORD PTR [esi-0x21],eax
  439c8e:	add    bl,dl
  439c90:	mov    ch,0x97
  439c92:	jne    0x439cd1
  439c94:	push   esi
  439c95:	mov    ds:0x472f0035,al
  439c9a:	rol    DWORD PTR [edi],1
  439c9c:	and    BYTE PTR [eax-0x7576f6c3],bl
  439ca2:	out    dx,eax
  439ca3:	jo     0x439cf1
  439ca5:	jo     0x439d1c
  439ca7:	data16 aaa 
  439ca9:	rcr    BYTE PTR [edi+0x1e901b23],0x72
  439cb0:	xor    eax,0xec7d1ef0
  439cb5:	dec    edi
  439cb6:	jne    0x439d10
  439cb8:	xor    esp,DWORD PTR [eax-0x4c23db07]
  439cbe:	sbb    eax,0x754ff17d
  439cc3:	jo     0x439cf0
  439cc5:	rcr    BYTE PTR [edi+0x1f501f23],1
  439ccb:	jb     0x439cef
  439ccd:	loopne 0x439cee
  439ccf:	jg     0x439cd1
  439cd1:	add    BYTE PTR [ebp+eax*2-0x3],ch
  439cd5:	jmp    FWORD PTR [edi]
  439cd7:	into   
  439cd8:	stos   DWORD PTR es:[edi],eax
  439cd9:	je     0x9938b820
  439cdf:	or     edi,DWORD PTR [ebp-0x3f]
  439ce2:	cs inc esi
  439ce4:	add    al,0x0
  439ce6:	mov    dh,0x5c
  439ce8:	hlt    
  439ce9:	jl     0x439d5e
  439ceb:	test   BYTE PTR [ecx+0x55],ch
  439cee:	shr    BYTE PTR [edx-0x61],cl
  439cf1:	mov    esp,0xcc39907b
  439cf6:	jae    0x439c80
  439cf8:	cmp    esp,ecx
  439cfa:	imul   ebx,DWORD PTR [ecx],0x7a
  439cfd:	in     al,dx
  439cfe:	lods   al,BYTE PTR ds:[esi]
  439cff:	cwde   
  439d00:	leave  
  439d01:	test   dl,ah
  439d03:	xor    al,0x11
  439d05:	shl    BYTE PTR [eax],0xd4
  439d08:	xor    al,0x85
  439d0a:	outs   dx,BYTE PTR ds:[esi]
  439d0b:	test   DWORD PTR [eax+edx*1+0x24],esp
  439d0f:	xchg   BYTE PTR [edi+0x45de7286],ah
  439d15:	jnp    0x439d83
  439d17:	xchg   BYTE PTR [ecx-0x41],dh
  439d1a:	les    esp,FWORD PTR [edi+0x25]
  439d1d:	xchg   esp,eax
  439d1e:	test   al,0xa3
  439d20:	dec    ebp
  439d21:	jnp    0x439d8f
  439d23:	xchg   esi,eax
  439d24:	jno    0x439ce5
  439d26:	les    esp,FWORD PTR [edi+0x1d]
  439d29:	inc    esp
  439d2a:	dec    edx
  439d2b:	push   ds
  439d2c:	pop    ss
  439d2d:	jns    0x439da3
  439d2f:	jmp    0xfe52:0xf463325c
  439d36:	add    BYTE PTR [eax],al
  439d38:	mov    ch,0x75
  439d3a:	jmp    0x238c:0xdede2f03
  439d41:	mov    eax,ds:0xab7344bf
  439d46:	test   DWORD PTR [edi+0x73],esi
  439d49:	stos   DWORD PTR es:[edi],eax
  439d4a:	jge    0x439d10
  439d4c:	add    ebx,DWORD PTR [esp+edi*4]
  439d4f:	push   ebp
  439d50:	stos   BYTE PTR es:[edi],al
  439d51:	rcl    ecx,cl
  439d53:	js     0x439d8a
  439d55:	lods   eax,DWORD PTR ds:[si]
  439d57:	inc    edi
  439d58:	out    0xe9,eax
  439d5a:	jmp    0x88b1cc62
  439d5f:	adc    BYTE PTR [ebx],0xa3
  439d62:	cmp    eax,0xb1dffc04
  439d67:	add    BYTE PTR [edi-0x4fae8521],0xa3
  439d6e:	std    
  439d6f:	or     BYTE PTR [edi-0x30],ah
  439d72:	fdivr  QWORD PTR [edx-0x14]
  439d75:	pop    ecx
  439d76:	jae    0x439db3
  439d78:	lods   al,BYTE PTR ds:[esi]
  439d79:	push   ds
  439d7a:	dec    ebp
  439d7b:	sbb    esi,DWORD PTR [edx+0x3f78f5a3]
  439d81:	and    DWORD PTR ds:0xe9df08f4,ebx
  439d87:	add    ebp,DWORD PTR [edx+0x317ad9ab]
  439d8d:	pop    ebp
  439d8e:	add    ecx,ebp
  439d90:	xor    BYTE PTR [edx+0x11],ah
  439d93:	pusha  
  439d94:	fiadd  DWORD PTR es:[eax]
  439d97:	in     eax,dx
  439d98:	retf   
  439d99:	sbb    eax,0xe7ff
  439d9e:	sub    al,0xde
  439da0:	add    dl,bl
  439da2:	ins    BYTE PTR es:[edi],dx
  439da3:	mov    ah,0x8b
  439da5:	test   cl,dl
  439da7:	cdq    
  439da8:	push   esp
  439da9:	inc    edx
  439daa:	sub    eax,0x27e900de
  439daf:	fwait
  439db0:	outs   dx,DWORD PTR ds:[esi]
  439db1:	in     al,0xd2
  439db3:	fnstenv [esp+ecx*1-0x71]
  439db7:	(bad)  [ebp-0x14]
  439dba:	out    dx,eax
  439dbb:	adc    ecx,ebx
  439dbd:	fstp   TBYTE PTR [edi+0x13]
  439dc0:	int3   
  439dc1:	fisubr DWORD PTR [edi]
  439dc3:	popa   
  439dc4:	push   esi
  439dc5:	dec    ebp
  439dc6:	mov    dh,0x58
  439dc8:	clc    
  439dc9:	jmp    0x6d0f00fa
  439dce:	fdivr  st,st(4)
  439dd0:	add    dh,ah
  439dd2:	mov    ds:0x2f8545d1,eax
  439dd7:	sub    BYTE PTR [edi+edi*1],ch
  439dda:	je     0x439dca
  439ddc:	inc    ecx
  439ddd:	push   0xffffffe5
  439ddf:	out    0x6e,al
  439de1:	push   es
  439de2:	pop    ss
  439de3:	int    0x8
  439de5:	fs ds aam 0x13
  439de9:	ins    BYTE PTR es:[edi],dx
  439dea:	repnz sar ebp,1
  439ded:	imul   esp,esp,0xc7e37458
  439df3:	mov    ch,0x83
  439df5:	and    ebx,esi
  439df7:	mov    bl,0x8b
  439df9:	int3   
  439dfa:	dec    esi
  439dfb:	cdq    
  439dfc:	xor    al,0xa9
  439dfe:	test   DWORD PTR [edi+0x3e],ebx
  439e01:	outs   dx,DWORD PTR ds:[esi]
  439e02:	add    BYTE PTR [eax],al
  439e04:	rcl    DWORD PTR [edi-0x8],cl
  439e07:	jmp    0x4ce138
  439e0c:	mov    ebx,0x46001cc5
  439e11:	fadd   QWORD PTR [eax]
  439e13:	nop
  439e14:	loopne 0x439e7e
  439e16:	inc    ebp
  439e17:	add    eax,0x4bf58492
  439e1c:	adc    eax,eax
  439e1e:	jne    0x439de0
  439e20:	add    al,0x86
  439e22:	jg     0x439e70
  439e24:	add    esp,DWORD PTR [eax+0x76]
  439e27:	clc    
  439e28:	sbb    BYTE PTR [edx-0xddc7421],dl
  439e2e:	and    eax,0x6cb093c0
  439e33:	sub    al,0x20
  439e35:	pop    edi
  439e36:	xor    eax,0x188fd647
  439e3b:	xadd   esi,ebp
  439e3e:	inc    ecx
  439e3f:	xadd   DWORD PTR [esi],ebp
  439e42:	dec    ebx
  439e43:	test   BYTE PTR [ebp-0x6b],cl
  439e46:	sbb    al,0x66
  439e48:	dec    edi
  439e49:	out    0x4a,al
  439e4b:	cmovno ebp,esi
  439e4e:	inc    ecx
  439e4f:	data16 stc 
  439e51:	and    eax,0x954d844b
  439e56:	add    BYTE PTR [ebp+0x40842eca],cl
  439e5c:	lea    esp,[ecx-0x5be22b9a]
  439e62:	jne    0x439e4c
  439e64:	xchg   dl,bl
  439e66:	stc    
  439e67:	inc    DWORD PTR [eax]
  439e69:	add    BYTE PTR [ecx],bh
  439e6b:	fwait
  439e6c:	ins    BYTE PTR es:[edi],dx
  439e6d:	ss mov esi,0xd3c7058f
  439e73:	mov    bh,0x60
  439e75:	dec    ebp
  439e76:	(bad)  
  439e77:	fcmovnb st,st(1)
  439e79:	inc    ebp
  439e7a:	ss ret 0x404b
  439e7e:	push   esi
  439e7f:	push   0x4c
  439e81:	in     al,0x7d
  439e83:	dec    ebx
  439e84:	mov    al,0xe0
  439e86:	das    
  439e87:	add    DWORD PTR [ebp-0x1bce401],edi
  439e8d:	jmp    FWORD PTR [edi]
  439e8f:	into   
  439e90:	enter  0x77db,0xe5
  439e94:	sar    DWORD PTR [edi],1
  439e96:	das    
  439e97:	loop   0x439e97
  439e99:	std    
  439e9a:	sub    BYTE PTR [ebp+0x4b],al
  439e9d:	inc    ebx
  439e9e:	or     eax,DWORD PTR [ebp-0x3]
  439ea1:	jmp    FWORD PTR [edi]
  439ea3:	ins    BYTE PTR es:[edi],dx
  439ea4:	adc    DWORD PTR [ebp+0x4385516a],eax
  439eaa:	jmp    0x439f2b
  439eac:	leave  
  439ead:	jecxz  0x439ecb
  439eaf:	inc    ebp
  439eb0:	add    al,0x0
  439eb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439eb3:	add    DWORD PTR ds:0x87395a85,ebx
  439eb9:	push   cs
  439eba:	sbb    al,0x85
  439ebc:	test   DWORD PTR [ebx-0x19],eax
  439ebf:	int    0xc8
  439ec1:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439ec3:	mov    DWORD PTR [ebp+eax*4+0x62],edx
  439ec7:	mov    cl,0x7b
  439ec9:	dec    eax
  439ecb:	inc    esp
  439ecc:	add    al,0xcd
  439ece:	add    BYTE PTR [eax],al
  439ed0:	iret   
  439ed1:	int    0xd8
  439ed3:	out    0xa4,eax
  439ed5:	pushf  
  439ed6:	nop
  439ed7:	dec    eax
  439ed8:	mov    al,0xbd
  439eda:	rcl    bl,0xb6
  439edd:	sbb    DWORD PTR [edi+eax*4-0xe],0x2efa7f10
  439ee5:	jb     0x439ef2
  439ee7:	cmp    edi,ebx
  439ee9:	inc    ebx
  439eea:	add    al,0x0
  439eec:	xchg   esp,eax
  439eed:	cmp    bh,BYTE PTR [edi-0x6]
  439ef0:	sub    eax,0xdf3b06da
  439ef5:	inc    edx
  439ef6:	add    al,0x0
  439ef8:	and    ah,al
  439efa:	daa    
  439efb:	jmp    FWORD PTR [eax+0x44]
  439efe:	xchg   DWORD PTR [ebx+0x43],edx
  439f01:	fidiv  WORD PTR [eax-0x29]
  439f04:	dec    eax
  439f05:	inc    edx
  439f06:	loopne 0x439e96
  439f08:	call   0x5d0301ea
  439f0d:	bound  ebp,QWORD PTR ds:0xb9a8aa38
  439f13:	lea    edi,[ecx+eax*2+0x1c094574]
  439f1a:	(bad)  
  439f1b:	(bad)  
  439f1c:	cmp    ebp,esp
  439f1e:	outs   dx,BYTE PTR ds:[esi]
  439f1f:	add    ebp,DWORD PTR [edx-0x6bae1cda]
  439f25:	call   0xde6466c9
  439f2a:	pop    es
  439f2b:	mov    ebp,DWORD PTR [eax+esi*8-0x7e]
  439f2f:	out    dx,al
  439f30:	xchg   ah,dh
  439f32:	jb     0x439efb
  439f34:	add    BYTE PTR [eax],al
  439f36:	or     dh,ah
  439f38:	cs add al,0xaa
  439f3b:	mov    ds:0x68ef0589,eax
  439f40:	(bad)  
  439f41:	or     esi,DWORD PTR [edi+0x648cf9a3]
  439f47:	xor    al,al
  439f49:	mov    WORD PTR [ebx],gs
  439f4b:	out    0xc7,al
  439f4d:	mov    ch,BYTE PTR [eax+esi*8+0x42]
  439f51:	push   cs
  439f52:	adc    ah,BYTE PTR [edi]
  439f54:	sub    bh,al
  439f56:	sub    BYTE PTR [esi-0xf9b7541],bh
  439f5c:	bound  ecx,QWORD PTR [ebp+0x52]
  439f5f:	sub    BYTE PTR [ebx+0x49],ah
  439f62:	stos   BYTE PTR es:[edi],al
  439f63:	shl    DWORD PTR [ecx],cl
  439f65:	jle    0x439eff
  439f67:	push   ebp
  439f68:	jmp    0x7ccf:0x63406203
  439f6f:	xor    edi,esi
  439f71:	mov    esp,?
  439f73:	inc    ebp
  439f74:	jno    0x439f3d
  439f76:	jo     0x439fdb
  439f78:	scas   al,BYTE PTR es:[edi]
  439f79:	xchg   esi,eax
  439f7a:	das    
  439f7b:	fiadd  WORD PTR [eax]
  439f7d:	jmp    0x5d33f2ae
  439f82:	aas    
  439f83:	lea    ecx,[esp+eiz*2-0x166396bd]
  439f8a:	sub    al,0xde
  439f8c:	add    BYTE PTR [edx],al
  439f8e:	(bad)  
  439f90:	ret    0x4560
  439f93:	sar    al,1
  439f95:	je     0x43a002
  439f97:	push   esi
  439f98:	mov    ecx,0x2c0000e8
  439f9d:	fiadd  WORD PTR [eax]
  439f9f:	call   0x94a9:0xb1465b4c
  439fa6:	ins    DWORD PTR es:[edi],dx
  439fa7:	hlt    
  439fa8:	test   eax,0x2ce91d79
  439fad:	fiadd  WORD PTR [eax]
  439faf:	mov    eax,0x14c26154
  439fb4:	inc    ecx
  439fb5:	popa   
  439fb6:	sar    ebp,0x28
  439fb9:	imul   edx,DWORD PTR [ecx+0x7e],0x9904240b
  439fc0:	mov    ch,0xb0
  439fc2:	clc    
  439fc3:	xor    BYTE PTR [edi],0x1f
  439fc6:	ds popa 
  439fc8:	sub    al,0xde
  439fca:	add    cl,ch
  439fcc:	stos   DWORD PTR es:[edi],eax
  439fcd:	mov    al,ds:0x5744ebf0
  439fd2:	clc    
  439fd3:	jmp    0xad456004
  439fd8:	fld    DWORD PTR [eax-0x484c2892]
  439fde:	in     al,0xe6
  439fe0:	mov    al,0x1a
  439fe2:	add    ecx,ebp
  439fe4:	sub    al,0x5b
  439fe6:	inc    esi
  439fe7:	sbb    DWORD PTR [edi],edi
  439fe9:	(bad)  
  439fea:	adc    dh,BYTE PTR [edx+0x69]
  439fed:	call   0xae6bfdf9
  439ff2:	cmp    ebp,DWORD PTR [eax+eax*2+0x5a007ee7]
  439ff9:	popf   
  439ffa:	stc    
  439ffb:	(bad)  
  439ffc:	std    
  439ffd:	mov    ecx,esp
  439fff:	and    eax,DWORD PTR [eax]
  43a001:	add    bl,ch
  43a003:	sbb    BYTE PTR [eax+0x73520a75],al
  43a009:	shl    BYTE PTR [ecx+0x5c],1
  43a00c:	idiv   esi
  43a00e:	jno    0x43a024
  43a010:	jle    0x43a067
  43a012:	push   0x66
  43a014:	(bad)  
  43a015:	jne    0x43a065
  43a017:	addr16 dec esp
  43a019:	cld    
  43a01a:	mov    edi,0x978bf42e
  43a01f:	push   0x2d8de844
  43a024:	ror    BYTE PTR [ebp-0x348197f6],0xfd
  43a02b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a02c:	jg     0x43a073
  43a02e:	mov    esi,0x16fff7d2
  43a033:	loopne 0x43a02a
  43a035:	rol    ch,1
  43a037:	cli    
  43a038:	sub    eax,0x1b8fa255
  43a03d:	(bad)  
  43a03e:	cli    
  43a03f:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  43a041:	nop
  43a042:	ror    esp,1
  43a044:	cmp    ch,BYTE PTR [ebx]
  43a046:	mov    DWORD PTR [ebp-0x3f],esp
  43a049:	jle    0x43a02d
  43a04b:	sbb    eax,0xe0088337
  43a050:	cmc    
  43a051:	mov    edi,0x72ec351d
  43a056:	ins    DWORD PTR es:[edi],dx
  43a057:	addr16 je 0x43a01e
  43a05a:	cmp    eax,0x8b8bd035
  43a05f:	out    0xb9,eax
  43a061:	add    DWORD PTR [esi+0xd300df],edx
  43a067:	add    cl,ch
  43a069:	(bad)  
  43a06b:	mov    ebx,edx
  43a06d:	stos   DWORD PTR es:[edi],eax
  43a06e:	jg     0x43a0c5
  43a070:	out    dx,al
  43a071:	pop    esi
  43a072:	stc    
  43a073:	add    DWORD PTR [edi],ebp
  43a075:	jb     0x43a083
  43a077:	jg     0x439ffe
  43a079:	mov    DWORD PTR [ebx],eax
  43a07b:	add    BYTE PTR [edi],ch
  43a07d:	lock or edi,DWORD PTR [ebp+0x77]
  43a081:	inc    edi
  43a082:	mov    ecx,0xd44fae07
  43a087:	std    
  43a088:	pusha  
  43a089:	inc    ebp
  43a08a:	mov    bl,0x65
  43a08c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a08d:	xchg   ebx,eax
  43a08e:	mov    esi,DWORD PTR [ebx+0x3b]
  43a091:	sar    ch,1
  43a093:	xchg   DWORD PTR [ebx],edi
  43a095:	aad    0x8a
  43a097:	or     dh,BYTE PTR [ebp-0xc77bf06]
  43a09d:	mov    ch,0xfc
  43a09f:	test   BYTE PTR [ecx],ch
  43a0a1:	rcl    al,1
  43a0a3:	out    0x54,eax
  43a0a5:	jge    0x43a0e4
  43a0a7:	imul   DWORD PTR ds:0x91cfd8be
  43a0ad:	into   
  43a0ae:	(bad)  
  43a0af:	(bad)  
  43a0b0:	sub    eax,0x8f9a26e
  43a0b5:	ins    BYTE PTR es:[edi],dx
  43a0b6:	mov    eax,DWORD PTR [ebx+0x7]
  43a0b9:	mov    edx,0x2f167443
  43a0be:	loope  0x43a0b3
  43a0c0:	cmp    al,0x77
  43a0c2:	sahf   
  43a0c3:	xchg   BYTE PTR [edx-0x28ac74c9],al
  43a0c9:	jp     0x43a094
  43a0cb:	sldt   WORD PTR [eax]
  43a0ce:	outs   dx,DWORD PTR ds:[esi]
  43a0cf:	int    0xe0
  43a0d1:	push   cs
  43a0d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a0d3:	adc    DWORD PTR [edi+eax*4],0x438ac73b
  43a0da:	out    0xbf,eax
  43a0dc:	fdivr  st,st(3)
  43a0de:	stos   BYTE PTR es:[edi],al
  43a0df:	dec    eax
  43a0e0:	mov    DWORD PTR [eax],eax
  43a0e2:	das    
  43a0e3:	inc    ebp
  43a0e4:	add    al,0x85
  43a0e6:	repnz xor ch,bh
  43a0e9:	pop    es
  43a0ea:	mov    ah,0x79
  43a0ec:	sbb    al,0x55
  43a0ee:	clc    
  43a0ef:	fnsave [eax+0x13]
  43a0f2:	inc    edx
  43a0f3:	push   ds
  43a0f4:	mov    eax,0x2ab08c8a
  43a0f9:	(bad)  
  43a0fb:	xchg   ebp,eax
  43a0fc:	jmp    0xa021d004
  43a101:	mov    cl,BYTE PTR [eax+esi*4-0x579975d6]
  43a108:	bound  ebp,QWORD PTR [edi]
  43a10a:	loopne 0x43a14d
  43a10c:	sbb    al,BYTE PTR [ecx]
  43a10e:	das    
  43a10f:	fimul  WORD PTR [eax-0x16616f38]
  43a115:	lock ins DWORD PTR es:[edi],dx
  43a117:	fs and eax,0xca58a840
  43a11d:	aas    
  43a11e:	ss push edx
  43a120:	jno    0x43a0b1
  43a122:	push   ebx
  43a123:	push   eax
  43a124:	mov    bh,0x3d
  43a126:	mov    al,0x6b
  43a128:	xchg   edx,eax
  43a129:	aas    
  43a12a:	es push edx
  43a12c:	popa   
  43a12d:	lahf   
  43a12e:	add    edx,DWORD PTR [edi+ebx*4+0x3d]
  43a132:	add    BYTE PTR [eax],al
  43a134:	test   al,0x8b
  43a136:	mov    edx,0x6152063f
  43a13b:	jg     0x43a130
  43a13d:	push   ebx
  43a13e:	xchg   DWORD PTR ds:0x3c55628d,edi
  43a144:	hlt    
  43a145:	push   ecx
  43a146:	ja     0x43a0ee
  43a148:	mov    ah,0x63
  43a14a:	jle    0x43a18b
  43a14c:	out    0x51,al
  43a14e:	add    BYTE PTR [eax+0x3d5d26b4],dl
  43a154:	(bad)  
  43a155:	mov    eax,0x53f38765
  43a15a:	dec    edi
  43a15b:	cmp    eax,0x447d624d
  43a160:	mov    ah,0x51
  43a162:	aas    
  43a163:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a164:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a165:	xor    DWORD PTR [esi+0x3f],0xffffffa6
  43a169:	push   ecx
  43a16a:	add    DWORD PTR [ebp-0x4e],edx
  43a16d:	pop    ebp
  43a16e:	icebp  
  43a16f:	sub    al,0x5a
  43a171:	push   edi
  43a172:	mov    WORD PTR [eax+ebp*1+0x48117e59],gs
  43a179:	push   edi
  43a17a:	clc    
  43a17b:	fs push 0x8364bfdd
  43a181:	push   esp
  43a182:	clc    
  43a183:	push   es
  43a184:	sub    al,0xde
  43a186:	add    ecx,ebp
  43a188:	mov    ch,0x5d
  43a18a:	in     eax,dx
  43a18b:	hlt    
  43a18c:	and    edx,DWORD PTR [edi-0x74]
  43a18f:	test   eax,0x34e0c618
  43a194:	imul   edx,DWORD PTR [ecx-0x77],0x64
  43a198:	add    BYTE PTR [eax],al
  43a19a:	adc    BYTE PTR [ebp-0x8],dl
  43a19d:	(bad)  
  43a19e:	add    ebp,ebp
  43a1a0:	cld    
  43a1a1:	cli    
  43a1a2:	ins    BYTE PTR es:[edi],dx
  43a1a3:	push   ecx
  43a1a4:	mov    esi,DWORD PTR [edi+ebp*8]
  43a1a7:	add    al,dh
  43a1a9:	sar    DWORD PTR [ebx],1
  43a1ab:	fiadd  WORD PTR [eax]
  43a1ad:	jmp    0xaed03527
  43a1b2:	add    DWORD PTR [edx-0x1b],ebx
  43a1b5:	inc    esp
  43a1b6:	inc    esp
  43a1b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a1b8:	neg    DWORD PTR [esi-0x2d3addb5]
  43a1be:	xor    DWORD PTR [edx-0x32ccd540],ebx
  43a1c4:	add    ebp,DWORD PTR [ebx-0x5c1621d4]
  43a1ca:	xor    bl,dh
  43a1cc:	add    BYTE PTR [edx+0x23],ah
  43a1cf:	lods   al,BYTE PTR ds:[esi]
  43a1d0:	mov    edi,DWORD PTR [ebx-0x29]
  43a1d3:	(bad)  
  43a1d4:	ins    DWORD PTR es:[edi],dx
  43a1d5:	(bad)  
  43a1d6:	test   eax,0xdffa6d4b
  43a1db:	pop    ecx
  43a1dc:	clc    
  43a1dd:	arpl   WORD PTR ds:0x14611158,sp
  43a1e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a1e4:	mov    BYTE PTR [eax],al
  43a1e6:	xlat   BYTE PTR ds:[ebx]
  43a1e7:	sbb    al,0x37
  43a1e9:	test   DWORD PTR [eax-0x78],esp
  43a1ec:	out    0x5b,eax
  43a1ee:	mov    eax,0x3accc49d
  43a1f3:	mov    eax,ds:0xa15accc4
  43a1f8:	(bad)  
  43a1f9:	int3   
  43a1fa:	pop    edx
  43a1fb:	mov    eax,ds:0xccc4
  43a200:	or     eax,0x7a8b5412
  43a205:	cs jge 0x43a25d
  43a208:	jle    0x43a233
  43a20a:	jge    0x43a204
  43a20c:	ins    DWORD PTR es:[edi],dx
  43a20d:	push   ss
  43a20e:	jae    0x43a27e
  43a210:	int    0x1f
  43a212:	or     al,0x8d
  43a214:	push   edx
  43a215:	out    0x45,al
  43a217:	mov    DWORD PTR [ebx],eax
  43a219:	push   ss
  43a21a:	push   ebx
  43a21b:	jmp    0x43a272
  43a21d:	gs inc eax
  43a21f:	add    ch,cl
  43a221:	mov    ?,esp
  43a223:	mov    edi,DWORD PTR [eax+edx*2-0xf]
  43a227:	ja     0x43a249
  43a229:	addr16 popf 
  43a22b:	and    al,0x16
  43a22d:	fadd   QWORD PTR [eax]
  43a22f:	add    BYTE PTR [ebp+0x40531425],cl
  43a235:	sub    ecx,edi
  43a237:	push   ebp
  43a238:	push   ss
  43a239:	pop    ecx
  43a23a:	mov    ebp,0x7a9a930c
  43a23f:	add    cl,BYTE PTR [ebp-0x258b0a4c]
  43a245:	push   eax
  43a246:	icebp  
  43a247:	jbe    0x43a1ea
  43a249:	pop    edi
  43a24a:	dec    esp
  43a24b:	or     al,0x5d
  43a24d:	sub    eax,0x5f678b00
  43a252:	ret    0xa93b
  43a255:	mov    ds,WORD PTR [ecx]
  43a257:	test   DWORD PTR [edi],ebx
  43a259:	mov    cs,WORD PTR ds:0xc93efd8b
  43a25f:	nop
  43a260:	das    
  43a261:	mov    ebx,0x8614
  43a266:	and    eax,DWORD PTR [esi-0x74]
  43a269:	sbb    al,0x2e
  43a26b:	xchg   DWORD PTR [eax+edx*1+0x7332b9ef],ecx
  43a272:	lahf   
  43a273:	mov    esp,0x6aa40bc9
  43a278:	or     al,0x25
  43a27a:	xchg   esi,eax
  43a27b:	cmp    al,0x36
  43a27d:	jno    0x43a252
  43a27f:	(bad)  
  43a280:	xlat   BYTE PTR ds:[ebx]
  43a281:	pop    eax
  43a282:	mov    ah,0xe2
  43a284:	fnstcw WORD PTR [ebx+ebp*2+0x63cc48f1]
  43a28b:	or     DWORD PTR [ecx-0x34],ecx
  43a28e:	jnp    0x43a291
  43a290:	dec    ecx
  43a291:	int3   
  43a292:	jae    0x43a250
  43a294:	cmp    edx,DWORD PTR [ebx-0x5c]
  43a297:	push   ecx
  43a298:	jge    0x43a286
  43a29a:	das    
  43a29b:	inc    esi
  43a29c:	add    al,0x0
  43a29e:	fmul   st(3),st
  43a2a0:	fadd   DWORD PTR [edi]
  43a2a2:	fdivr  DWORD PTR [ebx-0x734df448]
  43a2a8:	mov    cl,0x27
  43a2aa:	stos   BYTE PTR es:[edi],al
  43a2ab:	sbb    BYTE PTR [eax-0x33d5d7dd],ch
  43a2b1:	adc    DWORD PTR [edi+0x45],ebp
  43a2b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a2b5:	inc    DWORD PTR [esi-0x790059bb]
  43a2bb:	inc    ebp
  43a2bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a2bd:	push   ecx
  43a2bf:	inc    esp
  43a2c0:	adc    al,BYTE PTR [eax]
  43a2c2:	das    
  43a2c3:	inc    ebp
  43a2c4:	sub    al,0xeb
  43a2c6:	stc    
  43a2c7:	pop    edi
  43a2c8:	cmp    edi,DWORD PTR [ebp+0x0]
  43a2cb:	add    bl,ch
  43a2cd:	xor    bl,bl
  43a2cf:	push   esp
  43a2d0:	mov    ah,0x59
  43a2d2:	fnstcw WORD PTR [ecx+edi*2-0x4df04f44]
  43a2d9:	(bad)  
  43a2da:	mov    cl,0x1
  43a2dc:	lods   al,BYTE PTR ds:[esi]
  43a2dd:	fstp   st(4)
  43a2df:	comiss xmm1,xmm1
  43a2e2:	cld    
  43a2e3:	cmp    bl,BYTE PTR [esi+eiz*4]
  43a2e6:	test   ebx,0xade9c4b8
  43a2ec:	mov    al,0xc4
  43a2ee:	jmp    0xea084ba0
  43a2f3:	inc    edx
  43a2f4:	das    
  43a2f5:	call   0x4672a6e3
  43a2fa:	jae    0x43a335
  43a2fc:	xchg   esi,eax
  43a2fd:	dec    esi
  43a2fe:	imul   edi,DWORD PTR [edi],0x23
  43a301:	mov    al,0xb6
  43a303:	fisubr WORD PTR [ebx-0x5b952c8]
  43a309:	dec    esi
  43a30a:	in     al,dx
  43a30b:	mov    ch,0x7c
  43a30d:	sahf   
  43a30e:	out    dx,al
  43a30f:	push   0x65
  43a311:	fiadd  DWORD PTR [edx]
  43a313:	inc    edx
  43a314:	in     al,dx
  43a315:	dec    ecx
  43a316:	jmp    0x54d8:0x60de2f03
  43a31d:	fs pop ebp
  43a31f:	cmp    al,0xb4
  43a321:	jb     0x43a30d
  43a323:	add    ebp,DWORD PTR [edi]
  43a325:	fisub  WORD PTR [edx+0x41]
  43a328:	adc    bl,BYTE PTR [ebx]
  43a32a:	sbb    edx,DWORD PTR [esi+0x3e]
  43a32d:	inc    edi
  43a32e:	sub    al,BYTE PTR [ebp-0x28d90000]
  43a334:	sbb    ebp,DWORD PTR cs:[edx+0x648cd1a3]
  43a33b:	repnz sbb ebx,edx
  43a33e:	jle    0x43a2f1
  43a340:	jb     0x43a383
  43a342:	pop    ss
  43a343:	and    BYTE PTR [eax-0x599df9c7],bl
  43a349:	adc    al,0x10
  43a34b:	ins    DWORD PTR es:[edi],dx
  43a34c:	jmp    0x159cd254
  43a351:	sbb    al,0xf8
  43a353:	ss out 0x68,eax
  43a356:	in     eax,dx
  43a357:	loope  0x43a359
  43a359:	stos   BYTE PTR es:[edi],al
  43a35a:	stos   BYTE PTR es:[edi],al
  43a35b:	dec    esi
  43a35c:	dec    edi
  43a35d:	sbb    bh,cl
  43a35f:	inc    esi
  43a360:	dec    esi
  43a361:	std    
  43a362:	mov    bl,0x22
  43a364:	add    eax,0x4c86b64
  43a369:	(bad)  
  43a36a:	call   0xa2632f4c
  43a36f:	mov    ebp,ecx
  43a371:	int    0x66
  43a373:	inc    edi
  43a374:	clc    
  43a375:	jb     0x43a357
  43a377:	cmc    
  43a378:	dec    edi
  43a379:	call   0x22ab:0xd54e467c
  43a380:	add    eax,0x4c7f36c
  43a385:	jb     0x43a3f7
  43a387:	fisttp QWORD PTR [ebx-0x167455da]
  43a38d:	mov    eax,ds:0x72f84736
  43a392:	jo     0x43a389
  43a394:	dec    edi
  43a395:	xchg   edi,eax
  43a396:	add    BYTE PTR [eax],al
  43a398:	jge    0x43a3e0
  43a39a:	dec    esi
  43a39b:	fnsave [ebx-0x149bfade]
  43a3a1:	mov    DWORD PTR [edx+esi*2],0xae8bdd79
  43a3a8:	mov    bl,0x20
  43a3aa:	jmp    0xf88a98b4
  43a3af:	adc    bh,dl
  43a3b1:	iret   
  43a3b2:	sbb    ebp,edx
  43a3b4:	add    ebp,ebx
  43a3b6:	cmp    ebx,DWORD PTR [edi+0x1c8bf0db]
  43a3bc:	cmp    esi,DWORD PTR [eax-0x4ea9e4ad]
  43a3c2:	or     al,0x6a
  43a3c4:	dec    eax
  43a3c5:	fidivr DWORD PTR [ebp-0x57]
  43a3c8:	mov    BYTE PTR [ebx+0x3c],0x9a
  43a3cc:	mov    edi,0x1b2c03e7
  43a3d1:	adc    edx,DWORD PTR [esi+0x0]
  43a3d4:	scas   al,BYTE PTR es:[edi]
  43a3d5:	lea    edx,[ebx]
  43a3d7:	mov    ecx,DWORD PTR [ebx]
  43a3d9:	jmp    0x1454:0x7365352
  43a3e0:	inc    ebp
  43a3e1:	or     eax,0x87168505
  43a3e6:	loopne 0x43a3d3
  43a3e8:	aad    0x63
  43a3ea:	inc    eax
  43a3eb:	add    BYTE PTR ds:0x603b0895,ch
  43a3f1:	(bad)
  43a3f5:	call   0x60afb4c
  43a3fa:	push   esp
  43a3fb:	adc    al,0x0
  43a3fd:	add    BYTE PTR ds:0x4685050d,al
  43a403:	xchg   bh,bl
  43a405:	cmp    esi,ecx
  43a407:	lea    ebp,[edi]
  43a409:	mov    edi,DWORD PTR [ebx-0x65388210]
  43a40f:	inc    ecx
  43a410:	jge    0x43a3dd
  43a412:	ins    DWORD PTR es:[edi],dx
  43a413:	xchg   ebp,eax
  43a414:	ds mov ebx,ecx
  43a417:	adc    BYTE PTR [edx],cl
  43a419:	mov    dh,0x7a
  43a41b:	fisttp WORD PTR [eax-0x4d2ab2ab]
  43a421:	adc    dh,cl
  43a423:	fdivr  st(7),st
  43a425:	push   cs
  43a426:	test   al,0x2e
  43a428:	std    
  43a429:	xchg   DWORD PTR [esi+0x57],eax
  43a42c:	push   esp
  43a42d:	lock push es
  43a42f:	pop    edi
  43a430:	(bad)  
  43a431:	jne    0x43a49a
  43a433:	dec    eax
  43a434:	icebp  
  43a435:	setnp  BYTE PTR [ebx-0x7]
  43a439:	jmp    ecx
  43a43b:	push   edi
  43a43c:	out    0xe9,al
  43a43e:	push   esi
  43a43f:	adc    edi,edx
  43a441:	inc    DWORD PTR ds:0xa93b0887
  43a447:	(bad)  
  43a448:	and    ebp,ebx
  43a44a:	adc    eax,0x2f004057
  43a44f:	and    BYTE PTR [ecx-0x58a4cbf1],bh
  43a455:	push   ss
  43a456:	mov    ah,0xfa
  43a458:	adc    al,0x52
  43a45a:	js     0x43a441
  43a45c:	das    
  43a45d:	push   ebx
  43a45e:	inc    ebx
  43a45f:	mov    eax,0xc40
  43a464:	stos   BYTE PTR es:[edi],al
  43a465:	jne    0x43a418
  43a467:	out    0x4,al
  43a469:	lods   al,BYTE PTR ds:[esi]
  43a46a:	mov    dl,0x18
  43a46c:	aam    0x38
  43a46e:	mov    DWORD PTR [edi+0x2f],eax
  43a471:	loopne 0x43a42c
  43a473:	shld   DWORD PTR [edx-0x7458cad0],eax,0x13
  43a47b:	test   edx,esi
  43a47d:	cmp    al,0xc6
  43a47f:	push   eax
  43a480:	(bad)  
  43a481:	adc    edx,edx
  43a483:	adc    ebp,DWORD PTR [ecx+eax*1+0x696f8309]
  43a48a:	push   ss
  43a48b:	test   edx,ebp
  43a48d:	call   0xc0baf81d
  43a492:	dec    edx
  43a493:	test   DWORD PTR [eax+0x20],edi
  43a496:	dec    ebx
  43a497:	and    eax,0x7c2d205f
  43a49c:	adc    al,0x20
  43a49e:	aaa    
  43a49f:	ins    DWORD PTR es:[edi],dx
  43a4a0:	inc    edx
  43a4a1:	ror    cl,0xf3
  43a4a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a4a5:	ror    DWORD PTR [ecx+0x2f444878],0x87
  43a4ac:	cmp    DWORD PTR [edx+0x3438f903],0xffffffbd
  43a4b3:	xchg   dl,ah
  43a4b5:	xor    bl,bh
  43a4b7:	aad    0x9c
  43a4b9:	fimul  WORD PTR [ebx-0x4f2fd885]
  43a4bf:	(bad)  
  43a4c1:	icebp  
  43a4c2:	cmp    bh,ah
  43a4c4:	xchg   BYTE PTR [ebx+0x2f],bh
  43a4c7:	stc    
  43a4c8:	add    BYTE PTR [eax],al
  43a4ca:	inc    esp
  43a4cb:	faddp  st(3),st
  43a4cd:	mov    dl,0x1d
  43a4cf:	push   edi
  43a4d0:	and    eax,0x5d69b030
  43a4d5:	mov    ebx,0x8c874af7
  43a4da:	ret    
  43a4db:	pop    eax
  43a4dc:	jmp    0x648d:0x294ae636
  43a4e3:	push   edx
  43a4e4:	mov    bl,0x3e
  43a4e6:	inc    edx
  43a4e7:	fsub   QWORD PTR [edx-0x28]
  43a4ea:	les    edx,FWORD PTR [esi-0x2b]
  43a4ed:	adc    ebp,DWORD PTR [eax-0xad39e38]
  43a4f3:	dec    ebx
  43a4f4:	dec    edi
  43a4f5:	ss stos BYTE PTR es:[edi],al
  43a4f7:	sar    cl,1
  43a4f9:	mov    ch,ah
  43a4fb:	push   ecx
  43a4fc:	imul   ebp,DWORD PTR [ebx],0xffffffa0
  43a4ff:	push   ebp
  43a500:	popf   
  43a501:	das    
  43a502:	es push esi
  43a504:	out    0x35,eax
  43a506:	xchg   esi,eax
  43a507:	dec    edx
  43a508:	arpl   WORD PTR [edi+0x361ec5ac],cx
  43a50e:	xchg   BYTE PTR [esi+0x5e],dl
  43a511:	sub    BYTE PTR [edi],0x4b
  43a514:	(bad)  
  43a516:	test   al,0xb0
  43a518:	add    eax,0x7345ec8c
  43a51d:	pop    ecx
  43a51e:	stos   BYTE PTR es:[edi],al
  43a51f:	inc    ebp
  43a520:	adc    DWORD PTR [esi],eax
  43a522:	push   ebp
  43a523:	dec    edx
  43a524:	out    dx,eax
  43a525:	inc    esi
  43a526:	arpl   WORD PTR [ecx],bx
  43a528:	fwait
  43a529:	int    0xdf
  43a52b:	push   esi
  43a52c:	ss loopne 0x43a52f
  43a52f:	add    BYTE PTR [eax],dh
  43a531:	push   edi
  43a532:	push   ds
  43a533:	loopne 0x43a551
  43a535:	push   edi
  43a536:	push   ds
  43a537:	loopne 0x43a551
  43a539:	mov    cl,0x3b
  43a53b:	aam    0x79
  43a53d:	scas   eax,DWORD PTR es:[edi]
  43a53e:	push   ecx
  43a53f:	pusha  
  43a540:	xchg   esi,eax
  43a541:	popf   
  43a542:	jmp    0x157bce6
  43a547:	jmp    0x88448378
  43a54c:	out    dx,eax
  43a54d:	mov    DWORD PTR [ecx+ebp*8-0x1],eax
  43a551:	sbb    eax,0xe20f258a
  43a556:	pop    esp
  43a557:	pusha  
  43a558:	ror    BYTE PTR [ecx-0x8],1
  43a55b:	jmp    0xcd81088c
  43a560:	fsub   QWORD PTR [edx+0x59]
  43a563:	icebp  
  43a564:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a565:	call   0xf98b:0xf0dfc51c
  43a56c:	xor    bl,cl
  43a56e:	mul    BYTE PTR [edi+0x7f]
  43a571:	adc    cl,BYTE PTR [ebp+esi*4+0x53840dd8]
  43a578:	stc    
  43a579:	sar    esp,1
  43a57b:	adc    DWORD PTR [ebp-0x34],ebx
  43a57e:	es je  0x43a520
  43a581:	iret   
  43a582:	test   DWORD PTR [ebp-0x1d7411e1],ebx
  43a588:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a589:	xchg   esi,eax
  43a58a:	add    al,0x6a
  43a58c:	(bad)  
  43a58d:	fld    QWORD PTR [eax]
  43a58f:	pushf  
  43a590:	call   0x12ba74a
  43a595:	add    BYTE PTR [esi+ebx*8],ch
  43a598:	mov    ebp,DWORD PTR [edx-0x1a54c9dc]
  43a59e:	sub    al,0xde
  43a5a0:	mov    ecx,0xde2ce8
  43a5a5:	jb     0x43a615
  43a5a7:	loope  0x43a591
  43a5a9:	xor    eax,0x200de2f
  43a5ae:	ret    
  43a5af:	rol    DWORD PTR [edi+0xde2cec],0xe9
  43a5b6:	scas   eax,DWORD PTR es:[edi]
  43a5b7:	and    bl,BYTE PTR [ecx]
  43a5b9:	ss pop ecx
  43a5bb:	mov    dl,0xc3
  43a5bd:	(bad)  
  43a5be:	lock cld 
  43a5c0:	cld    
  43a5c1:	jmp    ecx
  43a5c3:	sbb    eax,DWORD PTR [esi+eax*1]
  43a5c6:	push   es
  43a5c7:	fld    QWORD PTR [eax]
  43a5c9:	mov    eax,0xdd07
  43a5ce:	inc    edx
  43a5cf:	dec    edi
  43a5d0:	jge    0x43a616
  43a5d2:	repnz aam 0x7d
  43a5d5:	dec    eax
  43a5d6:	dec    BYTE PTR [ebp-0x40]
  43a5d9:	call   0x3dab78
  43a5de:	and    edx,DWORD PTR [edi+0x69]
  43a5e1:	sbb    BYTE PTR [ecx-0x2900f374],ch
  43a5e7:	in     al,dx
  43a5e8:	stc    
  43a5e9:	jo     0x43a5dd
  43a5eb:	hlt    
  43a5ec:	cmp    bh,bh
  43a5ee:	pop    ecx
  43a5ef:	adc    dh,BYTE PTR [esi-0x3c]
  43a5f2:	mov    edx,0x32447d2f
  43a5f7:	fidivr DWORD PTR [ebp+0x54]
  43a5fa:	add    BYTE PTR [eax],al
  43a5fc:	and    dh,dl
  43a5fe:	jg     0x43a602
  43a600:	mov    esi,0x960000dd
  43a605:	popf   
  43a606:	push   ebx
  43a607:	mov    ecx,edx
  43a609:	sub    BYTE PTR [eax],al
  43a60b:	mov    ebp,DWORD PTR [edi]
  43a60d:	adc    ebp,DWORD PTR [eax+0x1c]
  43a610:	pop    ecx
  43a611:	mov    WORD PTR [eax],ss
  43a613:	jmp    DWORD PTR [edi+0x1915e034]
  43a619:	adc    bh,dl
  43a61b:	add    DWORD PTR [edx-0x1f],0x5b
  43a61f:	ret    0xdc52
  43a622:	push   ebx
  43a623:	push   esi
  43a624:	shr    DWORD PTR ds:0x9c95ea7d,0x25
  43a62b:	fist   DWORD PTR [ebp-0x7a09da52]
  43a631:	adc    edx,edi
  43a633:	shr    ebp,1
  43a635:	sub    al,0x5a
  43a637:	pop    ebp
  43a638:	test   eax,ecx
  43a63a:	fimul  WORD PTR [ebx-0x4087d9d1]
  43a640:	xchg   ebp,eax
  43a641:	ss sbb al,0x1
  43a644:	sub    esi,DWORD PTR ds:0x44ef2d04
  43a64a:	inc    edi
  43a64b:	sub    eax,0x2d4e44e6
  43a650:	or     BYTE PTR [ecx+0x2b],bh
  43a653:	push   ebx
  43a654:	mov    ah,0x71
  43a656:	rcl    BYTE PTR [ecx+0x60],1
  43a659:	jmp    0x43a657
  43a65b:	gs das 
  43a65d:	fnsave [edi+0x6c00006f]
  43a663:	xor    eax,0x3a98e7cd
  43a668:	add    al,0x0
  43a66a:	js     0x43a653
  43a66c:	(bad)  
  43a66d:	pop    edx
  43a66e:	in     al,dx
  43a66f:	jmp    0x4ece:0x3d136c77
  43a676:	shr    BYTE PTR [ecx],0xe0
  43a679:	adc    eax,edi
  43a67b:	jno    0x43a6b0
  43a67d:	stc    
  43a67e:	mov    al,0xb4
  43a680:	dec    eax
  43a681:	or     al,0xa
  43a683:	repz hlt 
  43a685:	push   DWORD PTR [ecx+edx*1+0x41]
  43a689:	int3   
  43a68a:	imul   edi,ecx,0x40
  43a68d:	int3   
  43a68e:	arpl   WORD PTR [ebx+esi*1-0x7ff64bad],di
  43a695:	in     al,dx
  43a696:	daa    
  43a697:	int3   
  43a698:	leave  
  43a699:	pop    es
  43a69a:	fmul   st(3),st
  43a69c:	rcl    DWORD PTR [ebx],1
  43a69e:	fnstcw WORD PTR [ebx+0x251c07af]
  43a6a4:	fild   DWORD PTR [ecx+ebp*1+0x2ff8c9f7]
  43a6ab:	add    dl,cl
  43a6ad:	repz cs xor eax,0xccba0004
  43a6b4:	adc    edi,DWORD PTR [ebp+0x47]
  43a6b7:	(bad)  
  43a6b9:	mov    bh,0x33
  43a6bb:	push   ebx
  43a6bc:	sub    BYTE PTR [eax],cl
  43a6be:	xor    bl,BYTE PTR [eax]
  43a6c0:	sbb    eax,DWORD PTR [eax]
  43a6c2:	addr16 inc edi
  43a6c4:	sub    eax,0xaa000000
  43a6c9:	xchg   edi,eax
  43a6ca:	in     eax,dx
  43a6cb:	jle    0x43a74a
  43a6cd:	(bad)  
  43a6ce:	jmp    0x5c32:0xf3da4242
  43a6d5:	fisub  DWORD PTR [edx-0x38]
  43a6d8:	xor    BYTE PTR [eax+0x2a],dl
  43a6db:	or     BYTE PTR [ebp-0xfeaa329],cl
  43a6e1:	inc    esi
  43a6e2:	jmp    0xe4be:0x61367480
  43a6e9:	push   edx
  43a6ea:	and    eax,DWORD PTR [eax]
  43a6ec:	mov    al,0xa0
  43a6ee:	xchg   ecx,eax
  43a6ef:	jle    0x43a75d
  43a6f1:	out    0x60,al
  43a6f3:	enter  0x5ad4,0x73
  43a6f7:	xor    DWORD PTR [ebx],edi
  43a6f9:	mov    esi,0x62a40952
  43a6fe:	jmp    0x217:0x5cde2f03
  43a705:	push   ebx
  43a706:	xchg   esi,eax
  43a707:	cdq    
  43a708:	cmp    ebx,DWORD PTR [ecx-0x5a]
  43a70b:	cdq    
  43a70c:	aas    
  43a70d:	push   ebp
  43a70e:	popf   
  43a70f:	xor    ebp,DWORD PTR [edx-0x7f379f23]
  43a715:	pusha  
  43a716:	and    DWORD PTR [edi+0x1b37531c],esi
  43a71c:	daa    
  43a71d:	inc    edi
  43a71e:	pop    ss
  43a71f:	xor    ch,BYTE PTR [ebp-0x60]
  43a722:	push   cs
  43a723:	add    al,0xac
  43a725:	sbb    eax,0x9ae7ef86
  43a72a:	jb     0x43a6f4
  43a72c:	add    BYTE PTR [eax],al
  43a72e:	pusha  
  43a72f:	push   edx
  43a730:	and    al,BYTE PTR [esi+0x7c014757]
  43a736:	out    dx,al
  43a737:	pop    ebp
  43a738:	jbe    0x43a728
  43a73a:	sub    eax,0x257220d2
  43a73f:	leave  
  43a740:	clc    
  43a741:	fbstp  TBYTE PTR [edi-0x1f]
  43a744:	mov    esp,DWORD PTR [edi]
  43a746:	aaa    
  43a747:	inc    ebx
  43a748:	(bad)  
  43a749:	sbb    ch,BYTE PTR [edi]
  43a74b:	push   es
  43a74c:	clc    
  43a74d:	sbb    al,0x2f
  43a74f:	pop    ebx
  43a750:	inc    edi
  43a751:	in     eax,dx
  43a752:	xchg   ebx,eax
  43a753:	mov    al,0x8
  43a755:	jmp    0xb13f:0xf304f36f
  43a75c:	add    al,0x72
  43a75e:	lock push ecx
  43a760:	pop    eax
  43a761:	aas    
  43a762:	loop   0x43a7be
  43a764:	fidiv  WORD PTR [edx+esi*2]
  43a767:	pop    ds
  43a768:	ds xchg ebp,eax
  43a76a:	sub    ebx,esi
  43a76c:	add    cl,ch
  43a76e:	cmp    ebx,DWORD PTR [ecx]
  43a770:	mov    WORD PTR [ebx+edi*1],fs
  43a773:	lds    edi,FWORD PTR [eax]
  43a775:	or     al,BYTE PTR [edx-0x1a0b1f48]
  43a77b:	ret    0xc535
  43a77e:	adc    DWORD PTR [ebx],eax
  43a780:	add    ecx,ebp
  43a782:	js     0x43a769
  43a784:	push   0x10351b5
  43a789:	inc    ecx
  43a78a:	rol    BYTE PTR [edx-0x8],cl
  43a78d:	jmp    0x6440c245
  43a792:	add    BYTE PTR [eax],al
  43a794:	jmp    0x43a75f
  43a796:	pop    es
  43a797:	(bad)  
  43a798:	enter  0x6ad5,0xe8
  43a79c:	pop    ebp
  43a79d:	inc    esi
  43a79e:	push   cs
  43a79f:	lds    edx,FWORD PTR [ecx+0x3]
  43a7a2:	add    DWORD PTR [edx-0x19],ebp
  43a7a5:	aad    0x8b
  43a7a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a7a8:	inc    eax
  43a7a9:	ss test al,0xf
  43a7ac:	push   ds
  43a7ad:	inc    edi
  43a7ae:	mov    WORD PTR [eax],es
  43a7b0:	mov    ebp,ebp
  43a7b2:	das    
  43a7b3:	pop    eax
  43a7b4:	inc    edx
  43a7b5:	lea    eax,[edi]
  43a7b7:	mov    ebp,DWORD PTR [ebx-0x32a8b9b7]
  43a7bd:	stos   BYTE PTR es:[edi],al
  43a7be:	jge    0x43a788
  43a7c0:	pop    esi
  43a7c1:	retf   0xfffa
  43a7c4:	push   ecx
  43a7c5:	ret    0x1443
  43a7c8:	lea    eax,[eax+esi*8+0x7dde4e89]
  43a7cf:	push   es
  43a7d0:	test   ecx,edi
  43a7d2:	cli    
  43a7d3:	je     0x43a7f2
  43a7d5:	ret    0x44a
  43a7d8:	adc    eax,0xfe0c259e
  43a7dd:	or     eax,0x1f7d0c54
  43a7e2:	or     al,0x8b
  43a7e4:	cmp    BYTE PTR [edx-0xb],al
  43a7e7:	into   
  43a7e8:	add    eax,0x1bff2e45
  43a7ed:	fidivr WORD PTR [ebp+0x45]
  43a7f0:	push   esi
  43a7f1:	ret    0x848
  43a7f4:	pop    ebp
  43a7f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a7f6:	call   0x4043a845
  43a7fb:	push   cs
  43a7fc:	cli    
  43a7fd:	mov    edx,0xfffa0e50
  43a802:	movntps XMMWORD PTR [edi+ecx*1],xmm1
  43a806:	dec    edx
  43a807:	es stc 
  43a809:	inc    DWORD PTR [ecx]
  43a80b:	ret    0x84b
  43a80e:	out    0x25,eax
  43a810:	jge    0x43a7dd
  43a812:	(bad)  
  43a813:	jns    0x43a80f
  43a815:	call   DWORD PTR [ecx-0x18]
  43a818:	and    bh,bh
  43a81a:	inc    ecx
  43a81b:	push   cs
  43a81c:	cli    
  43a81d:	and    eax,0x40e6a6
  43a822:	push   ecx
  43a823:	cmp    al,0x6c
  43a825:	push   ss
  43a826:	(bad)  
  43a827:	loopne 0x43a7ed
  43a829:	int3   
  43a82a:	das    
  43a82b:	test   dl,bl
  43a82d:	dec    esp
  43a82e:	sbb    al,0xd4
  43a830:	je     0x43a876
  43a832:	adc    esp,DWORD PTR [ebx]
  43a834:	cmc    
  43a835:	mov    edi,0x84c92ad2
  43a83a:	jecxz  0x43a84e
  43a83c:	adc    al,0xf1
  43a83e:	addr16 dec ebx
  43a840:	inc    ebp
  43a841:	jge    0x43a89a
  43a843:	ss jne 0x43a88a
  43a846:	or     ecx,DWORD PTR [ebx+0x75]
  43a849:	push   esp
  43a84a:	push   ebx
  43a84b:	inc    ebp
  43a84c:	jnp    0x43a892
  43a84e:	dec    ebx
  43a84f:	xor    ebx,edi
  43a851:	mov    edi,0x84bf219a
  43a856:	jnp    0x43a831
  43a858:	add    al,0xf1
  43a85a:	out    0x84,eax
  43a85c:	dec    ebx
  43a85d:	jge    0x43a85f
  43a85f:	add    bh,ah
  43a861:	xor    eax,0xd9534475
  43a866:	jne    0x43a8bc
  43a868:	dec    ebx
  43a869:	(bad)  
  43a86b:	mov    edi,0x4c7b4d62
  43a870:	or     ecx,DWORD PTR [ebp+0x7b]
  43a873:	inc    esp
  43a874:	adc    esp,DWORD PTR [ecx]
  43a876:	repz int 0xd8
  43a879:	(bad)  
  43a87a:	jnp    0x43a854
  43a87c:	mov    ah,0xf1
  43a87e:	call   0x7c0a6092
  43a883:	int    0xc4
  43a885:	jbe    0x43a902
  43a887:	fsub   DWORD PTR [ecx+esi*2-0x7e4be820]
  43a88e:	loopne 0x43a8a3
  43a890:	mov    ah,0x79
  43a892:	loopne 0x43a8a3
  43a894:	jle    0x43a846
  43a896:	dec    ebp
  43a897:	xlat   BYTE PTR ds:[ebx]
  43a898:	jle    0x43a849
  43a89a:	dec    ebp
  43a89b:	fdiv   DWORD PTR [eax+esi*8]
  43a89e:	mov    ecx,0x7c0678f3
  43a8a3:	lock sbb dh,0x85
  43a8a7:	out    0x14,eax
  43a8a9:	push   edi
  43a8aa:	xor    bh,BYTE PTR [ebx-0xd]
  43a8ad:	stc    
  43a8ae:	icebp  
  43a8af:	ss dec ebp
  43a8b1:	fistp  QWORD PTR [eax]
  43a8b3:	mov    dl,0x26
  43a8b5:	pop    es
  43a8b6:	xchg   esi,eax
  43a8b7:	out    0x3c,eax
  43a8b9:	retf   
  43a8ba:	icebp  
  43a8bb:	mov    cl,0x2f
  43a8bd:	pop    es
  43a8be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a8bf:	out    0x30,eax
  43a8c1:	int3   
  43a8c2:	call   0xb43a984
  43a8c7:	xor    BYTE PTR [ebx+0x45],dh
  43a8ca:	out    0xc8,al
  43a8cc:	fidiv  WORD PTR [esi]
  43a8ce:	add    DWORD PTR [ebx-0x4e],ecx
  43a8d1:	cmp    cl,0xdd
  43a8d4:	xor    cl,dh
  43a8d6:	ja     0x43a8f8
  43a8d8:	fiadd  DWORD PTR [ebx]
  43a8da:	stos   BYTE PTR es:[edi],al
  43a8db:	inc    edx
  43a8dc:	or     eax,0xbe5d1b7b
  43a8e1:	fild   DWORD PTR [ebx]
  43a8e3:	inc    ebx
  43a8e4:	jmp    0xa804:0x2b15df62
  43a8eb:	shl    BYTE PTR [ebp+0x60de2a3b],1
  43a8f1:	sbb    bh,dh
  43a8f3:	adc    eax,0xe0b0042b
  43a8f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a8f9:	cmp    edx,DWORD PTR [edx]
  43a8fb:	fidiv  WORD PTR [eax-0x8]
  43a8fe:	mov    BYTE PTR ds:0xa8042b,dl
  43a904:	es cmp edi,edx
  43a907:	ffree  st(7)
  43a909:	jg     0x43a927
  43a90b:	ss xor al,dl
  43a90e:	test   al,0xb8
  43a910:	pop    ebp
  43a911:	add    BYTE PTR [ebx+0xd03ab15],al
  43a917:	push   edx
  43a918:	(bad)  [ebx+0x67]
  43a91b:	sahf   
  43a91c:	jmp    0x11c5dc6
  43a921:	jge    0x43a967
  43a923:	add    DWORD PTR [ecx],eax
  43a925:	xbegin 0x755a29
  43a92b:	add    BYTE PTR [ebp+0x42],ch
  43a92e:	pop    esi
  43a92f:	ins    DWORD PTR es:[edi],dx
  43a930:	dec    edi
  43a931:	jbe    0x43a8fc
  43a933:	stos   BYTE PTR es:[edi],al
  43a934:	sub    al,0x62
  43a936:	mov    ah,ah
  43a938:	or     al,0x16
  43a93a:	inc    esp
  43a93b:	jmp    0x4a444815
  43a940:	loopne 0x43a957
  43a942:	inc    esp
  43a943:	jmp    0x4a40480d
  43a948:	in     al,0x15
  43a94a:	inc    esp
  43a94b:	jmp    0x8a4c4801
  43a950:	push   edi
  43a951:	push   ss
  43a952:	inc    esp
  43a953:	jmp    0xce2506ff
  43a958:	dec    edx
  43a959:	inc    edi
  43a95a:	shr    ah,0xc
  43a95d:	sbb    al,BYTE PTR [ecx+ebp*8+0x2d]
  43a961:	fiadd  WORD PTR [ecx]
  43a963:	jmp    0x2b0ccff5
  43a968:	xor    esp,DWORD PTR [ebx-0x2b]
  43a96b:	scas   al,BYTE PTR es:[edi]
  43a96c:	out    dx,al
  43a96d:	inc    ecx
  43a96e:	mov    edi,0x441f7ce4
  43a973:	jmp    0xa944875d
  43a978:	jb     0x43a957
  43a97a:	int3   
  43a97b:	scas   al,BYTE PTR es:[edi]
  43a97c:	out    dx,al
  43a97d:	inc    ecx
  43a97e:	add    ecx,ebp
  43a980:	sub    al,0xde
  43a982:	mov    eax,ds:0x1036b2d
  43a987:	pusha  
  43a988:	mov    al,0x26
  43a98a:	cmc    
  43a98b:	data16 add ah,BYTE PTR [ecx+0x49]
  43a98f:	sub    DWORD PTR [eax],eax
  43a991:	add    BYTE PTR [esi+0x41],ch
  43a994:	mov    DWORD PTR [edi+edi*8+0x41],ebp
  43a998:	clc    
  43a999:	dec    esi
  43a99a:	mov    ch,0x41
  43a99c:	test   DWORD PTR [eax],0x40080973
  43a9a2:	xchg   esi,eax
  43a9a3:	gs adc al,0x4e
  43a9a6:	(bad)  
  43a9a7:	(bad)  
  43a9a9:	adc    eax,0x40ed3e
  43a9ae:	sahf   
  43a9af:	inc    esp
  43a9b0:	add    al,0x0
  43a9b2:	push   ss
  43a9b3:	repz adc edi,esp
  43a9b6:	addr16 sbb eax,0xe9294ff8
  43a9bc:	nop
  43a9bd:	adc    DWORD PTR [esi+0x1ac3bfdd],eax
  43a9c3:	sahf   
  43a9c4:	(bad)  
  43a9c5:	int3   
  43a9c6:	mov    al,ds:0x62243cc6
  43a9cb:	inc    esi
  43a9cc:	mov    eax,0x44c71e75
  43a9d1:	and    al,0x26
  43a9d3:	(bad)  
  43a9d4:	cmp    al,0x24
  43a9d6:	or     cl,BYTE PTR [esi-0x3a]
  43a9d9:	div    edi
  43a9db:	(bad)
  43a9de:	inc    edx
  43a9df:	ss add bh,dh
  43a9e2:	mov    ebp,0x9d58bf0
  43a9e8:	pop    ebp
  43a9e9:	and    al,0xd6
  43a9eb:	(bad)
  43a9ee:	ror    BYTE PTR [ecx],0x5d
  43a9f1:	and    al,0xe6
  43a9f3:	ffree  st(7)
  43a9f5:	jmp    0x43a9f7
  43a9f7:	add    BYTE PTR [ecx],dl
  43a9f9:	(bad)  
  43a9fa:	enter  0xa8b,0x36
  43a9fe:	or     BYTE PTR [ebx-0x74f3c9ce],cl
  43aa04:	adc    dh,BYTE PTR [esi]
  43aa06:	add    cl,dl
  43aa08:	scas   eax,DWORD PTR es:[edi]
  43aa09:	stos   DWORD PTR es:[edi],eax
  43aa0a:	int    0xd1
  43aa0c:	lods   al,BYTE PTR ds:[esi]
  43aa0d:	stos   DWORD PTR es:[edi],eax
  43aa0e:	fmul   DWORD PTR [ebx]
  43aa10:	inc    DWORD PTR [edi-0x39fa080c]
  43aa16:	lock imul DWORD PTR [edi]
  43aa19:	adc    esp,eax
  43aa1b:	adc    esp,DWORD PTR [esi+edi*8+0x274b4478]
  43aa22:	sub    eax,0xb1e62ce2
  43aa27:	or     DWORD PTR [ebx+eiz*2-0x20],eax
  43aa2b:	or     eax,DWORD PTR [eax]
  43aa2d:	aas    
  43aa2e:	mov    dl,0x8
  43aa30:	xor    al,0x73
  43aa32:	loopne 0x43aa3b
  43aa34:	loope  0x43aa83
  43aa36:	mov    dh,0x24
  43aa38:	jmp    0x43aa4c
  43aa3a:	adc    al,0x15
  43aa3c:	add    ebx,DWORD PTR [ebx]
  43aa3e:	adc    BYTE PTR ds:0x23c02b74,ch
  43aa44:	aaa    
  43aa45:	cmp    al,0xd0
  43aa47:	and    esi,DWORD PTR [ebx]
  43aa49:	inc    eax
  43aa4a:	dec    ecx
  43aa4b:	icebp  
  43aa4c:	push   edi
  43aa4d:	mov    bl,0x49
  43aa4f:	add    BYTE PTR [esp+ecx*4+0x1eb4cd78],ah
  43aa56:	js     0x43aa20
  43aa58:	mov    ah,0x6f
  43aa5a:	retf   
  43aa5b:	mov    ebp,0x353f0000
  43aa60:	xor    ah,cl
  43aa62:	jecxz  0x43aa48
  43aa64:	int    0xb4
  43aa66:	pop    edi
  43aa67:	jne    0x43aa29
  43aa69:	call   DWORD PTR ds:0xb44ecf3d
  43aa6f:	in     eax,0x3c
  43aa71:	cmp    eax,0x23b8cc2f
  43aa76:	cmp    ecx,esi
  43aa78:	mov    bh,0x7
  43aa7a:	mov    dh,0xf4
  43aa7c:	add    BYTE PTR [edi+0x4ed12144],al
  43aa82:	jg     0x43aa81
  43aa84:	lds    ebx,FWORD PTR [edx+0x66]
  43aa87:	cld    
  43aa88:	ds add al,0x2f
  43aa8b:	enter  0xbd4c,0xeb
  43aa8f:	popa   
  43aa90:	cmp    esp,ecx
  43aa92:	jecxz  0x43aa72
  43aa94:	sub    eax,0x26127b38
  43aa99:	cmp    BYTE PTR [ebx+0x12],dh
  43aa9c:	arpl   WORD PTR [ebx],bp
  43aa9e:	cld    
  43aa9f:	push   edx
  43aaa0:	ss jg  0x43aa87
  43aaa3:	aad    0x81
  43aaa5:	mov    ecx,0xa1e9dde2
  43aaaa:	cmp    ebp,ebx
  43aaac:	mov    ch,0xff
  43aaae:	dec    ebx
  43aaaf:	push   ds
  43aab0:	test   DWORD PTR [esi-0x56],eax
  43aab3:	popf   
  43aab4:	fld    QWORD PTR [esi]
  43aab6:	test   al,0x5d
  43aab8:	loop   0x43aa8d
  43aaba:	in     eax,dx
  43aabb:	fucomp st(1)
  43aabd:	mov    al,0x47
  43aabf:	or     edi,DWORD PTR [ebp*2-0x22d60000]
  43aac6:	jmp    0xb24877ce
  43aacb:	or     esi,DWORD PTR [esi]
  43aacd:	push   0x2c
  43aacf:	jg     0x43ab4a
  43aad1:	mov    eax,ds:0x1263382a
  43aad6:	scas   al,BYTE PTR es:[edi]
  43aad7:	aaa    
  43aad8:	sti    
  43aad9:	adc    DWORD PTR [esi+0x6311f337],esp
  43aadf:	sub    bh,BYTE PTR [ebx+edx*2-0x4a]
  43aae3:	jle    0x43ab51
  43aae5:	(bad)  
  43aae6:	jb     0x43aaa3
  43aae8:	inc    esp
  43aae9:	(bad)  [ecx-0x2a634006]
  43aaef:	(bad)  
  43aaf0:	pop    esi
  43aaf1:	iret   
  43aaf2:	outs   dx,BYTE PTR ds:[esi]
  43aaf3:	mov    ah,0x2e
  43aaf5:	or     edi,DWORD PTR [edx+edx*8+0xbf199b5]
  43aafc:	lods   al,BYTE PTR ds:[esi]
  43aafd:	inc    edi
  43aafe:	sbb    BYTE PTR [edi],cl
  43ab00:	mov    dl,0xc0
  43ab02:	aad    0x7e
  43ab04:	addr16 rol dl,cl
  43ab07:	sub    al,0x59
  43ab09:	aad    0x72
  43ab0b:	retf   
  43ab0c:	sub    bl,bl
  43ab0e:	add    BYTE PTR [eax-0x1c8cb637],dl
  43ab14:	jmp    0x732c:0x9811c0c1
  43ab1b:	push   ecx
  43ab1c:	cdq    
  43ab1d:	jle    0x43ab77
  43ab1f:	mov    bh,0x69
  43ab21:	mov    ds:0xb694c3c3,eax
  43ab26:	enter  0xbf,0x0
  43ab2a:	jno    0x43ab6a
  43ab2c:	loopne 0x43ab83
  43ab2e:	sub    al,0xde
  43ab30:	add    BYTE PTR [edx-0x31],ch
  43ab33:	inc    edx
  43ab34:	add    DWORD PTR [edi+0x2c],ebp
  43ab37:	fiadd  WORD PTR [eax-0x17]
  43ab3a:	jle    0x43ab72
  43ab3c:	bound  ebx,QWORD PTR [esi]
  43ab3e:	adc    eax,0xec6c5a45
  43ab43:	leave  
  43ab44:	xor    eax,0x2bd66f62
  43ab49:	das    
  43ab4a:	pop    esp
  43ab4b:	lods   al,BYTE PTR ds:[esi]
  43ab4c:	call   0xf888c0aa
  43ab51:	nop
  43ab52:	imul   ebx,DWORD PTR [ebx-0x3f],0x75
  43ab56:	push   ecx
  43ab57:	pop    ecx
  43ab58:	inc    ecx
  43ab59:	or     eax,0xd618466c
  43ab5e:	jnp    0x43ab1b
  43ab60:	loopne 0x43ab4a
  43ab62:	outs   dx,DWORD PTR ds:[esi]
  43ab63:	mov    eax,ds:0x3746cff4
  43ab68:	clc    
  43ab69:	rcl    BYTE PTR [ebx],cl
  43ab6b:	arpl   WORD PTR [esi],di
  43ab6d:	int    0x82
  43ab6f:	fimul  WORD PTR [ebx+0x362503e9]
  43ab75:	in     al,0x2c
  43ab77:	faddp  st(0),st
  43ab79:	idiv   BYTE PTR [eax+0x6aa88c7d]
  43ab7f:	arpl   WORD PTR [esi-0x7f],bx
  43ab82:	outs   dx,BYTE PTR ds:[esi]
  43ab83:	mov    eax,ds:0x37068ff4
  43ab88:	clc    
  43ab89:	add    BYTE PTR [ebp+0x7ae8a1],al
  43ab8f:	add    dh,dl
  43ab91:	loope  0x43ab93
  43ab93:	ret    
  43ab94:	dec    ebp
  43ab95:	push   ds
  43ab96:	and    al,0x8
  43ab98:	dec    ebp
  43ab99:	jbe    0x43abbf
  43ab9b:	adc    BYTE PTR [ebp+0x2a4c7df9],bl
  43aba1:	ss jae 0x43abad
  43aba4:	or     eax,0xf904241e
  43aba9:	add    BYTE PTR [edi-0xeed69f0],dh
  43abaf:	loope  0x43abae
  43abb1:	test   eax,0x3a2a447d
  43abb6:	icebp  
  43abb7:	fs sub cl,dh
  43abba:	cmc    
  43abbb:	xlat   BYTE PTR ds:[ebx]
  43abbc:	fstp   QWORD PTR ds:0x1390824
  43abc2:	not    dl
  43abc4:	popf   
  43abc5:	mov    ds:0xa4ae0010,eax
  43abca:	jae    0x43ac0f
  43abcc:	push   esi
  43abcd:	pop    ebp
  43abce:	stc    
  43abcf:	xor    eax,0xe156
  43abd4:	int    0x1d
  43abd6:	and    al,0x10
  43abd8:	iret   
  43abd9:	push   ebp
  43abda:	and    al,0x10
  43abdc:	mov    ds:0x3d102455,eax
  43abe1:	add    al,BYTE PTR [esi+0x56]
  43abe4:	pop    ecx
  43abe5:	sar    DWORD PTR [eax+eax*8],0x45
  43abe9:	loop   0x43ac12
  43abeb:	inc    ebp
  43abec:	repnz xor ebx,eax
  43abef:	push   eax
  43abf0:	jg     0x43ac4e
  43abf2:	loopne 0x43abf3
  43abf4:	add    BYTE PTR [eax],al
  43abf6:	cmp    ecx,DWORD PTR [edx]
  43abf8:	jle    0x43ac3f
  43abfa:	ret    0x439d
  43abfd:	cld    
  43abfe:	nop
  43abff:	add    eax,0x7c5ffffa
  43ac04:	lock lea ebp,[edi]
  43ac07:	or     ch,BYTE PTR ds:0x4468c64
  43ac0d:	add    BYTE PTR [edi],ch
  43ac0f:	mov    BYTE PTR [ebp+0x4b],dh
  43ac12:	mov    edi,0x2f0b7be2
  43ac17:	inc    edi
  43ac18:	add    al,0x0
  43ac1a:	push   esi
  43ac1b:	in     al,dx
  43ac1c:	leave  
  43ac1d:	pop    ecx
  43ac1e:	add    al,0xb0
  43ac20:	push   ss
  43ac21:	pop    ebx
  43ac22:	inc    BYTE PTR [edi]
  43ac24:	jne    0x43ac1f
  43ac26:	add    al,al
  43ac28:	psubw  mm3,QWORD PTR [edx]
  43ac2b:	xor    ebp,DWORD PTR [ecx]
  43ac2d:	jae    0x43ac4e
  43ac2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ac30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ac31:	or     eax,DWORD PTR [eax+0x6f67fc71]
  43ac37:	pop    ds
  43ac38:	mov    ebp,0x448308ff
  43ac3d:	cmp    eax,0xf5accf2f
  43ac42:	pusha  
  43ac43:	fstp   TBYTE PTR [esp+eax*8+0x37]
  43ac47:	jb     0x43ac86
  43ac49:	stc    
  43ac4a:	or     al,BYTE PTR [edi+0xe]
  43ac4d:	inc    eax
  43ac4e:	das    
  43ac4f:	mov    al,0x3d
  43ac51:	mov    ebp,0x71cc4e9f
  43ac56:	in     al,dx
  43ac57:	inc    esi
  43ac58:	cwde   
  43ac59:	sahf   
  43ac5a:	add    BYTE PTR [eax],al
  43ac5c:	das    
  43ac5d:	inc    edi
  43ac5e:	add    al,0x0
  43ac60:	jg     0x43ac12
  43ac62:	shl    BYTE PTR [ebx],0x3f
  43ac65:	scas   al,BYTE PTR es:[edi]
  43ac66:	cwde   
  43ac67:	and    edi,DWORD PTR [edi]
  43ac69:	ret    0x2398
  43ac6c:	aas    
  43ac6d:	loopne 0x43ac8b
  43ac6f:	dec    ebp
  43ac70:	popa   
  43ac71:	fdivr  QWORD PTR [ebx+0x43]
  43ac74:	pop    es
  43ac75:	scas   eax,DWORD PTR es:[edi]
  43ac76:	mov    eax,ds:0xc1c05fe7
  43ac7b:	sti    
  43ac7c:	call   0xe93cd583
  43ac81:	ficomp WORD PTR [esi-0x5e5e57d9]
  43ac87:	jns    0x43acf5
  43ac89:	cs push es
  43ac8b:	arpl   WORD PTR [edi],bp
  43ac8d:	fsubp  st(1),st
  43ac8f:	add    ecx,DWORD PTR [edx+0x4b342d67]
  43ac95:	gs in  eax,0x3
  43ac98:	das    
  43ac99:	fsubp  st(1),st
  43ac9b:	int3   
  43ac9c:	push   edi
  43ac9d:	pushf  
  43ac9e:	adc    bh,BYTE PTR ds:0xe15f1ef8
  43aca4:	and    ah,dl
  43aca6:	test   eax,0xbb2a6b03
  43acab:	int    0xab
  43acad:	mov    ds:0x1e320bfd,al
  43acb2:	mov    ch,0xb
  43acb4:	stos   BYTE PTR es:[edi],al
  43acb5:	stos   BYTE PTR es:[edi],al
  43acb6:	std    
  43acb7:	lss    esp,FWORD PTR [edx+0x10421405]
  43acbe:	das    
  43acbf:	xor    eax,0x16b20000
  43acc4:	jae    0x43ac86
  43acc6:	or     al,0xea
  43acc8:	push   cs
  43acc9:	xor    eax,0xc5030fb2
  43acce:	stos   DWORD PTR es:[edi],eax
  43accf:	es arpl ax,cx
  43acd2:	or     al,0xd2
  43acd4:	jb     0x43aca6
  43acd6:	or     al,0xce
  43acd8:	jb     0x43ac9a
  43acda:	or     al,0xea
  43acdc:	sbb    BYTE PTR ds:0x1a191760,bl
  43ace2:	clc    
  43ace3:	adc    eax,0x329c3cf3
  43ace8:	iret   
  43ace9:	xor    dh,BYTE PTR [edx+0x4c9fd72d]
  43acef:	(bad)  
  43acf0:	bound  edi,QWORD PTR [ebx]
  43acf2:	mov    dl,0xa1
  43acf4:	add    eax,0xeb43fe10
  43acf9:	push   esp
  43acfa:	mov    esp,ebp
  43acfc:	add    dl,dh
  43acfe:	loopne 0x43acfe
  43ad00:	adc    BYTE PTR [esi],dh
  43ad02:	jmp    0x43accc
  43ad04:	jmp    ecx
  43ad06:	mov    al,ds:0x321704fe
  43ad0b:	test   al,0x33
  43ad0d:	mov    ebx,0x32572055
  43ad12:	ins    DWORD PTR es:[edi],dx
  43ad13:	into   
  43ad14:	add    BYTE PTR [edi-0x1607caf7],al
  43ad1a:	sub    al,0xde
  43ad1c:	add    BYTE PTR [ecx-0x1607caf7],dl
  43ad22:	sub    al,0xde
  43ad24:	add    BYTE PTR [edi+0x0],ah
  43ad27:	add    BYTE PTR [ecx+0x35],cl
  43ad2a:	clc    
  43ad2b:	adc    ebx,esi
  43ad2d:	stc    
  43ad2e:	add    BYTE PTR [edi],dl
  43ad30:	fdivp  st(1),st
  43ad32:	add    cl,ch
  43ad34:	sub    al,0xde
  43ad36:	add    BYTE PTR [esi+0x49],al
  43ad39:	xor    eax,0xfb4748f8
  43ad3e:	add    BYTE PTR [edi+eax*2-0x5],cl
  43ad42:	add    cl,ch
  43ad44:	sub    al,0xde
  43ad46:	add    BYTE PTR [esi],ah
  43ad48:	or     DWORD PTR ds:0xfb0784f8,esi
  43ad4e:	add    BYTE PTR [eax-0x16ff04f9],al
  43ad54:	sub    al,0xde
  43ad56:	add    BYTE PTR [esi],al
  43ad58:	or     DWORD PTR ds:0xfb10e1f8,esi
  43ad5e:	add    ch,dl
  43ad60:	or     bl,bh
  43ad62:	add    cl,ch
  43ad64:	sub    al,0xde
  43ad66:	add    dh,ah
  43ad68:	dec    edx
  43ad69:	aaa    
  43ad6a:	clc    
  43ad6b:	and    al,0x46
  43ad6d:	stc    
  43ad6e:	add    BYTE PTR [eax],ah
  43ad70:	inc    esi
  43ad71:	stc    
  43ad72:	add    cl,ch
  43ad74:	sub    al,0xde
  43ad76:	add    BYTE PTR [eax],al
  43ad78:	jmp    0xa143a780
  43ad7d:	add    al,0x38
  43ad7f:	add    BYTE PTR [esp+eax*1-0x2229ffc8],bl
  43ad86:	add    BYTE PTR [eax],al
  43ad88:	mov    DWORD PTR [ebx],eax
  43ad8a:	cli    
  43ad8b:	inc    DWORD PTR [eax]
  43ad8d:	add    BYTE PTR [ebx+0x4],dl
  43ad90:	cmp    BYTE PTR [eax],al
  43ad92:	dec    edi
  43ad93:	add    al,0x38
  43ad95:	add    dh,dl
  43ad97:	fld    QWORD PTR [eax]
  43ad99:	add    BYTE PTR [ecx-0x5fd],ch
  43ad9f:	add    edi,DWORD PTR [eax]
  43ada1:	add    BYTE PTR [ebx],cl
  43ada3:	add    al,0x38
  43ada5:	add    BYTE PTR [esi+0x90000dd],dl
  43adab:	add    edi,edx
  43adad:	(bad)  
  43adae:	jl     0x43adb4
  43adb0:	cmp    BYTE PTR [eax],al
  43adb2:	push   0x96003804
  43adb7:	fld    QWORD PTR [eax]
  43adb9:	add    cl,ch
  43adbb:	add    bh,dl
  43adbd:	call   FWORD PTR [edx+0x4]
  43adc0:	cmp    BYTE PTR [eax],al
  43adc2:	es add eax,0xdd560038
  43adc8:	add    BYTE PTR [eax],al
  43adca:	or     DWORD PTR [ebx],eax
  43adcc:	cli    
  43adcd:	jmp    DWORD PTR [esi]
  43adcf:	or     bh,BYTE PTR [eax]
  43add1:	add    BYTE PTR [edx],ah
  43add3:	or     bh,BYTE PTR [eax]
  43add5:	add    BYTE PTR [esi-0x23],dl
  43add8:	add    BYTE PTR [eax],al
  43adda:	sub    DWORD PTR [ebx],eax
  43addc:	cli    
  43addd:	(bad)  
  43adde:	fimul  WORD PTR [ecx]
  43ade0:	cmp    BYTE PTR [eax],al
  43ade2:	jmp    0xdd:0x16003809
  43ade9:	add    BYTE PTR [ecx],cl
  43adeb:	add    bh,dl
  43aded:	(bad)  
  43adee:	call   0x43eee0
  43adf3:	add    BYTE PTR [edi],ch
  43adf5:	adc    eax,0x472f4031
  43adfa:	add    al,0x0
  43adfc:	das    
  43adfd:	and    BYTE PTR ds:0x14fff8f9,bl
  43ae03:	aas    
  43ae04:	das    
  43ae05:	cld    
  43ae06:	adc    al,0x3f
  43ae08:	das    
  43ae09:	inc    edi
  43ae0a:	add    al,0x0
  43ae0c:	das    
  43ae0d:	sbb    BYTE PTR ds:0x207fd8f9,0x3f
  43ae14:	das    
  43ae15:	jl     0x43ae37
  43ae17:	aas    
  43ae18:	das    
  43ae19:	inc    edi
  43ae1a:	add    al,0x0
  43ae1c:	das    
  43ae1d:	pusha  
  43ae1e:	sbb    eax,0x24cbb8f9
  43ae23:	aas    
  43ae24:	das    
  43ae25:	loopne 0x43ae4b
  43ae27:	aas    
  43ae28:	das    
  43ae29:	inc    edi
  43ae2a:	add    al,0x0
  43ae2c:	das    
  43ae2d:	rcr    BYTE PTR [ecx+edi*8],0x98
  43ae31:	fnstcw WORD PTR [edi+0x40]
  43ae34:	das    
  43ae35:	xchg   BYTE PTR [edi+0x40],bh
  43ae38:	das    
  43ae39:	inc    edi
  43ae3a:	add    al,0x0
  43ae3c:	das    
  43ae3d:	mov    al,ds:0xf478f91c
  43ae42:	mov    BYTE PTR [eax+0x2f],al
  43ae45:	stc    
  43ae46:	mov    BYTE PTR [eax+0x2f],al
  43ae49:	inc    edi
  43ae4a:	add    al,0x0
  43ae4c:	das    
  43ae4d:	inc    edi
  43ae4e:	add    al,0x0
  43ae50:	das    
  43ae51:	inc    edi
  43ae52:	add    al,0x0
  43ae54:	das    
  43ae55:	jp     0x43add8
  43ae57:	in     al,dx
  43ae58:	add    BYTE PTR [eax],al
  43ae5a:	adc    BYTE PTR [esi+0x58dd4f16],bh
  43ae60:	sbb    al,0x80
  43ae62:	pop    ds
  43ae63:	inc    edi
  43ae64:	add    al,0x60
  43ae66:	push   ds
  43ae67:	inc    edi
  43ae68:	add    al,0x5c
  43ae6a:	ds inc ebp
  43ae6c:	add    al,0x58
  43ae6e:	ds fsubp st(1),st
  43ae71:	add    eax,DWORD PTR [ebx-0x74fc1633]
  43ae77:	int    0xe9
  43ae79:	add    ebp,DWORD PTR [ebx-0x48fc1633]
  43ae7f:	int    0xe9
  43ae81:	add    esi,DWORD PTR [ebx+0x6f03e9cd]
  43ae87:	int    0xe9
  43ae89:	add    ebp,DWORD PTR [ebx]
  43ae8b:	int    0xe9
  43ae8d:	add    esp,DWORD PTR [edi]
  43ae8f:	int    0xe9
  43ae91:	add    esp,DWORD PTR [ebx]
  43ae93:	int    0xe9
  43ae95:	add    ebp,DWORD PTR [ebx-0x33]
  43ae98:	jmp    0xea10f9a0
  43ae9d:	add    edx,DWORD PTR [edi-0x33]
  43aea0:	jmp    0xea17aea8
  43aea5:	add    ecx,DWORD PTR [edi]
  43aea7:	int    0xe9
  43aea9:	add    ecx,DWORD PTR [ebx-0x33]
  43aeac:	jmp    0xea10f5b4
  43aeb1:	add    eax,DWORD PTR [ebx-0x33]
  43aeb4:	jmp    0xea10f9bc
  43aeb9:	add    ebp,ebx
  43aebb:	int3   
  43aebc:	jmp    0xf743aec4
  43aec1:	int3   
  43aec2:	jmp    0xea10a1ca
  43aec7:	add    ebp,DWORD PTR [edi]
  43aec9:	int    0xe9
  43aecb:	add    ebp,DWORD PTR [ebx-0x32]
  43aece:	jmp    0xea1215d6
  43aed3:	add    esp,DWORD PTR [ebx-0x32]
  43aed6:	jmp    0xea10d9de
  43aedb:	add    ecx,DWORD PTR [ebx]
  43aedd:	int    0xe9
  43aedf:	add    edx,DWORD PTR [edi]
  43aee1:	int    0xe9
  43aee3:	add    edx,DWORD PTR [ebx]
  43aee5:	int    0xe9
  43aee7:	add    ecx,DWORD PTR [edi-0x32]
  43aeea:	add    cl,ch
  43aeec:	sub    al,0x1a
  43aeee:	adc    ecx,ebp
  43aef0:	sub    al,0x16
  43aef2:	adc    ecx,ebp
  43aef4:	sub    al,0x12
  43aef6:	adc    ecx,ebp
  43aef8:	sub    al,0x42
  43aefa:	adc    ecx,ebp
  43aefc:	sub    al,0xda
  43aefe:	adc    ecx,ebp
  43af00:	sub    al,0x7c
  43af02:	adc    ch,cl
  43af04:	sub    al,0xe2
  43af06:	adc    ecx,ebp
  43af08:	sub    al,0x1e
  43af0a:	adc    ecx,ebp
  43af0c:	sub    al,0x7a
  43af0e:	adc    ecx,ebp
  43af10:	sub    al,0x76
  43af12:	adc    ecx,ebp
  43af14:	sub    al,0x72
  43af16:	adc    ecx,ebp
  43af18:	sub    al,0x22
  43af1a:	adc    ecx,ebp
  43af1c:	sub    al,0x3a
  43af1e:	adc    ecx,ebp
  43af20:	sub    al,0x5c
  43af22:	adc    ch,cl
  43af24:	add    BYTE PTR [eax],al
  43af26:	sub    al,0x42
  43af28:	adc    ecx,ebp
  43af2a:	sub    al,0x7e
  43af2c:	adc    ecx,ebp
  43af2e:	sub    al,0x5a
  43af30:	adc    ecx,ebp
  43af32:	sub    al,0x56
  43af34:	adc    ecx,ebp
  43af36:	sub    al,0x52
  43af38:	adc    ecx,ebp
  43af3a:	sub    al,0x82
  43af3c:	adc    ecx,ebp
  43af3e:	sub    al,0x1a
  43af40:	adc    ecx,ebp
  43af42:	sub    al,0xbc
  43af44:	adc    ecx,ebp
  43af46:	sub    al,0x22
  43af48:	adc    ecx,ebp
  43af4a:	sub    al,0x5e
  43af4c:	adc    ecx,ebp
  43af4e:	sub    al,0xba
  43af50:	adc    cl,ch
  43af52:	sub    al,0xb6
  43af54:	adc    cl,ch
  43af56:	sub    al,0xb2
  43af58:	adc    cl,ch
  43af5a:	sub    al,0x62
  43af5c:	adc    ecx,ebp
  43af5e:	sub    al,0x7a
  43af60:	adc    ecx,ebp
  43af62:	sub    al,0x9c
  43af64:	adc    DWORD PTR [eax],eax
  43af66:	inc    esi
  43af67:	ficomp DWORD PTR [eax+edx*1+0x1110da46]
  43af6e:	push   ss
  43af6f:	loop   0x43af75
  43af71:	adc    DWORD PTR [esi],edx
  43af73:	loop   0x43af7d
  43af75:	adc    DWORD PTR [esi],eax
  43af77:	loop   0x43af75
  43af79:	adc    BYTE PTR [esi],al
  43af7b:	loop   0x43af7d
  43af7d:	adc    DWORD PTR [esi],edx
  43af7f:	loop   0x43af75
  43af81:	adc    BYTE PTR [esi],dl
  43af83:	loop   0x43af7d
  43af85:	adc    BYTE PTR [esi],al
  43af87:	loop   0x43af75
  43af89:	adc    BYTE PTR [eax],al
  43af8b:	add    BYTE PTR [esi],al
  43af8d:	loop   0x43af4b
  43af8f:	adc    dh,dl
  43af91:	loope  0x43af53
  43af93:	adc    dh,dl
  43af95:	loope  0x43af4b
  43af97:	adc    dh,al
  43af99:	loope  0x43af53
  43af9b:	adc    dh,al
  43af9d:	loope  0x43af4b
  43af9f:	adc    dh,dl
  43afa1:	loope  0x43af53
  43afa3:	adc    dh,dl
  43afa5:	loope  0x43af4b
  43afa7:	adc    dh,al
  43afa9:	loope  0x43af53
  43afab:	adc    dh,al
  43afad:	loope  0x43afdf
  43afaf:	adc    BYTE PTR [esi-0x69efdb1f],dl
  43afb5:	loope  0x43afdf
  43afb7:	adc    BYTE PTR [esi-0x79efe31f],al
  43afbd:	loope  0x43afdf
  43afbf:	adc    BYTE PTR [esi-0x69efeb1f],dl
  43afc5:	loope  0x43afdf
  43afc7:	adc    BYTE PTR [esi-0x79eff31f],al
  43afcd:	loope  0x43afdf
  43afcf:	adc    BYTE PTR [esi-0x1f],dl
  43afd2:	add    al,0x10
  43afd4:	push   esi
  43afd5:	loope  0x43afdf
  43afd7:	adc    BYTE PTR [esi-0x1f],al
  43afda:	cld    
  43afdb:	cmovbe esp,ecx
  43afde:	add    BYTE PTR [eax],dl
  43afe0:	das    
  43afe1:	inc    edi
  43afe2:	add    al,0xfc
  43afe4:	xor    BYTE PTR [edi+0x4],al
  43afe7:	clc    
  43afe8:	sub    BYTE PTR [edi+0x4],al
  43afeb:	hlt    
  43afec:	and    BYTE PTR [edi+0x4],al
  43afef:	lock add BYTE PTR [eax],al
  43aff2:	cmp    BYTE PTR [edi+0x4],al
  43aff5:	in     al,dx
  43aff6:	xor    BYTE PTR [edi+0x4],al
  43aff9:	or     bh,BYTE PTR [esi]
  43affb:	inc    edi
  43affc:	add    al,0xd4
  43affe:	and    BYTE PTR [edi+0x4],al
  43b001:	stos   BYTE PTR es:[edi],al
  43b002:	pop    ds
  43b003:	inc    edi
  43b004:	add    al,0xa6
  43b006:	pop    ds
  43b007:	inc    edi
  43b008:	add    al,0xb9
  43b00a:	and    BYTE PTR [edi+0x4],al
  43b00d:	in     al,dx
  43b00e:	sbb    BYTE PTR [edi+0x4],al
  43b011:	(bad)  
  43b012:	ds inc edi
  43b014:	add    al,0xa4
  43b016:	ds inc edi
  43b018:	add    al,0xcc
  43b01a:	sub    BYTE PTR [edi+0x4],al
  43b01d:	sub    DWORD PTR [edi],edi
  43b01f:	inc    edi
  43b020:	add    al,0xc0
  43b022:	cmp    BYTE PTR [edi+0x4],al
  43b025:	mov    esp,0xb8044730
  43b02a:	sub    BYTE PTR [edi+0x4],al
  43b02d:	mov    ah,0x20
  43b02f:	inc    edi
  43b030:	add    al,0xb4
  43b032:	cmp    BYTE PTR [edi+0x4],al
  43b035:	mov    al,0x30
  43b037:	inc    edi
  43b038:	add    al,0xac
  43b03a:	sub    BYTE PTR [edi+0x4],al
  43b03d:	test   al,0x20
  43b03f:	inc    edi
  43b040:	add    al,0xa4
  43b042:	cmp    BYTE PTR [edi+0x4],al
  43b045:	mov    al,ds:0x9c044730
  43b04a:	sub    BYTE PTR [edi+0x4],al
  43b04d:	cwde   
  43b04e:	and    BYTE PTR [edi+0x4],al
  43b051:	xchg   esp,eax
  43b052:	cmp    BYTE PTR [edi+0x4],al
  43b055:	nop
  43b056:	add    BYTE PTR [eax],al
  43b058:	xor    BYTE PTR [edi+0x4],al
  43b05b:	mov    WORD PTR [eax],gs
  43b05d:	fsubp  st(1),st
  43b05f:	add    esp,DWORD PTR [edi-0x4cfc161c]
  43b065:	in     al,0xe9
  43b067:	add    ebp,DWORD PTR [edi-0x44fc161c]
  43b06d:	in     al,0xe9
  43b06f:	add    esi,DWORD PTR [edi+0x203e9e4]
  43b075:	in     al,0xe9
  43b077:	add    ecx,DWORD PTR ds:0xeb03e9ce
  43b07d:	int    0xe9
  43b07f:	add    esp,esi
  43b081:	jecxz  0x43b06c
  43b083:	add    ebx,DWORD PTR [edi-0x1d]
  43b086:	jmp    0xea27238e
  43b08b:	add    esp,DWORD PTR [edi-0x1d]
  43b08e:	jmp    0xea271b96
  43b093:	add    ebp,DWORD PTR [edi-0x1d]
  43b096:	jmp    0xea26d39e
  43b09b:	add    edx,DWORD PTR [edi]
  43b09d:	jecxz  0x43b088
  43b09f:	add    ebx,DWORD PTR [ebx]
  43b0a1:	jecxz  0x43b08c
  43b0a3:	add    edi,edi
  43b0a5:	loop   0x43b090
  43b0a7:	add    edx,DWORD PTR [ebx]
  43b0a9:	jecxz  0x43b094
  43b0ab:	add    eax,DWORD PTR [edi]
  43b0ad:	jecxz  0x43b098
  43b0af:	add    esp,DWORD PTR [ebp-0x33]
  43b0b2:	jmp    0xea270fba
  43b0b7:	add    edx,DWORD PTR [ebx-0x1d]
  43b0ba:	jmp    0x4743b0c2
  43b0bf:	jecxz  0x43b0aa
  43b0c1:	add    ecx,DWORD PTR [ebx-0x1d]
  43b0c4:	jmp    0xea26ffcc
  43b0c9:	add    esp,DWORD PTR [ebx]
  43b0cb:	jecxz  0x43b0b6
  43b0cd:	add    edx,DWORD PTR [edi]
  43b0cf:	jecxz  0x43b0ba
  43b0d1:	add    ebx,DWORD PTR [ebx]
  43b0d3:	jecxz  0x43b0be
  43b0d5:	add    edi,DWORD PTR [edi]
  43b0d7:	jecxz  0x43b0d9
  43b0d9:	jmp    0xe94b930a
  43b0de:	sub    al,0x71
  43b0e0:	adc    ecx,ebp
  43b0e2:	sub    al,0xda
  43b0e4:	pop    es
  43b0e5:	jmp    0xe94b8f16
  43b0ea:	sub    al,0x32
  43b0ec:	pop    es
  43b0ed:	jmp    0xe94ae71e
  43b0f2:	sub    al,0x2a
  43b0f4:	pop    es
  43b0f5:	jmp    0xe9544b26
  43b0fa:	sub    al,0x8e
  43b0fc:	adc    cl,ch
  43b0fe:	sub    al,0xf2
  43b100:	adc    cl,ch
  43b102:	sub    al,0xa6
  43b104:	adc    cl,ch
  43b106:	sub    al,0x3e
  43b108:	pop    es
  43b109:	jmp    0xe94ac33a
  43b10e:	sub    al,0x16
  43b110:	pop    es
  43b111:	jmp    0xe94abb42
  43b116:	sub    al,0xa
  43b118:	pop    es
  43b119:	jmp    0xe94b934a
  43b11e:	sub    al,0x26
  43b120:	pop    es
  43b121:	jmp    0x1a6fb126
  43b126:	pop    es
  43b127:	jmp    0xe94acf58
  43b12c:	sub    al,0x72
  43b12e:	pop    es
  43b12f:	jmp    0xe94b2760
  43b134:	sub    al,0x6a
  43b136:	pop    es
  43b137:	jmp    0xe94b1b68
  43b13c:	sub    al,0x6e
  43b13e:	pop    es
  43b13f:	jmp    0xe94b3370
  43b144:	sub    al,0x86
  43b146:	pop    es
  43b147:	jmp    0xe94b2b78
  43b14c:	sub    al,0x7e
  43b14e:	pop    es
  43b14f:	jmp    0x4b0380
  43b154:	xchg   dh,bl
  43b156:	cwde   
  43b157:	push   cs
  43b158:	push   esi
  43b159:	fsubrp st(0),st
  43b15b:	push   cs
  43b15c:	push   esi
  43b15d:	(bad)  
  43b15f:	push   cs
  43b160:	inc    esi
  43b161:	(bad)  
  43b163:	push   cs
  43b164:	inc    esi
  43b165:	fmulp  st(4),st
  43b167:	push   cs
  43b168:	push   esi
  43b169:	(bad)  
  43b16b:	push   cs
  43b16c:	push   esi
  43b16d:	faddp  st(4),st
  43b16f:	push   cs
  43b170:	inc    esi
  43b171:	fmulp  st(0),st
  43b173:	push   cs
  43b174:	inc    esi
  43b175:	fidivr WORD PTR [esi+ecx*1+0xecdde16]
  43b17c:	push   ss
  43b17d:	(bad)  
  43b17f:	push   cs
  43b180:	push   es
  43b181:	fidiv  WORD PTR [ecx+0x5cde060f]
  43b187:	push   cs
  43b188:	add    BYTE PTR [eax],al
  43b18a:	push   ss
  43b18b:	fiadd  WORD PTR [edx+0x76de160f]
  43b191:	clts   
  43b193:	fidiv  WORD PTR [ebp+0x43de060e]
  43b199:	(bad)  
  43b19b:	frstor [edi+ecx*1-0x2a]
  43b19f:	fld    QWORD PTR [esi+ecx*1-0x3a]
  43b1a3:	fst    QWORD PTR [ecx+0x3cddc60f]
  43b1a9:	push   cs
  43b1aa:	(bad)  
  43b1ab:	fld    QWORD PTR [eax+0xe]
  43b1ae:	(bad)  
  43b1af:	fld    QWORD PTR [eax+0xe]
  43b1b2:	(bad)  
  43b1b3:	(bad)  [eax+0xe]
  43b1b6:	(bad)  
  43b1b7:	(bad)  [esi+ecx*1]
  43b1ba:	xchg   esi,eax
  43b1bb:	frstor [eax]
  43b1bd:	push   cs
  43b1be:	xchg   esi,eax
  43b1bf:	fst    QWORD PTR [esi+ecx*1]
  43b1c2:	xchg   ch,bl
  43b1c4:	sbb    BYTE PTR [esi],cl
  43b1c6:	xchg   ch,bl
  43b1c8:	or     al,0xe
  43b1ca:	xchg   esi,eax
  43b1cb:	fstp   QWORD PTR ds:0x4472f0f
  43b1d1:	and    DWORD PTR [eax],ebp
  43b1d3:	inc    edi
  43b1d4:	add    al,0x18
  43b1d6:	and    DWORD PTR [edi+0x4],eax
  43b1d9:	adc    al,0x39
  43b1db:	inc    edi
  43b1dc:	add    al,0x86
  43b1de:	cmp    BYTE PTR [edi+0x4],al
  43b1e1:	mov    esp,0x4f044740
  43b1e6:	aaa    
  43b1e7:	inc    edi
  43b1e8:	add    al,0xa9
  43b1ea:	daa    
  43b1eb:	inc    edi
  43b1ec:	add    al,0x26
  43b1ee:	add    BYTE PTR [eax],al
  43b1f0:	es inc edi
  43b1f2:	add    al,0x78
  43b1f4:	push   ss
  43b1f5:	inc    edi
  43b1f6:	add    al,0xda
  43b1f8:	push   ss
  43b1f9:	inc    edi
  43b1fa:	add    al,0x2f
  43b1fc:	inc    ebp
  43b1fd:	inc    edi
  43b1fe:	add    al,0xf4
  43b200:	xor    al,BYTE PTR [edi+0x4]
  43b203:	lock sub al,BYTE PTR [edi+0x4]
  43b207:	in     al,dx
  43b208:	and    al,BYTE PTR [edi+0x4]
  43b20b:	call   0xe447f94a
  43b210:	xor    al,BYTE PTR [edi+0x4]
  43b213:	loopne 0x43b23f
  43b215:	inc    edi
  43b216:	add    al,0xdc
  43b218:	and    al,BYTE PTR [edi+0x4]
  43b21b:	fdivr  DWORD PTR [edx]
  43b21d:	inc    edi
  43b21e:	add    al,0x10
  43b220:	xor    DWORD PTR [edi+0x4],eax
  43b223:	or     al,0x29
  43b225:	inc    edi
  43b226:	add    al,0xc2
  43b228:	and    BYTE PTR [edi+0x4],al
  43b22b:	enter  0x473a,0x4
  43b22f:	shl    BYTE PTR [edx],0x47
  43b232:	add    al,0xbc
  43b234:	sub    al,BYTE PTR [edi+0x4]
  43b237:	mov    eax,0xb4044722
  43b23c:	cmp    al,BYTE PTR [edi+0x4]
  43b23f:	jp     0x43b272
  43b241:	inc    edi
  43b242:	add    al,0xac
  43b244:	sub    al,BYTE PTR [edi+0x4]
  43b247:	in     eax,dx
  43b248:	cmp    bl,dh
  43b24a:	jmp    0xea0bef52
  43b24f:	add    ecx,edi
  43b251:	loop   0x43b23c
  43b253:	add    eax,DWORD PTR [eax]
  43b255:	add    BYTE PTR [ebx+0x4303e9e2],bl
  43b25b:	into   
  43b25c:	jmp    0xea11b364
  43b261:	add    edi,DWORD PTR [edi-0x54fc161e]
  43b267:	loop   0x43b252
  43b269:	add    esp,DWORD PTR [edi-0x4cfc161e]
  43b26f:	loop   0x43b25a
  43b271:	add    ebp,DWORD PTR [edi-0x44fc161e]
  43b277:	loop   0x43b262
  43b279:	add    eax,DWORD PTR [edi-0x13fc1633]
  43b27f:	into   
  43b280:	jmp    0xea12b388
  43b285:	add    edx,DWORD PTR [esi]
  43b287:	iret   
  43b288:	jmp    0xea252990
  43b28d:	add    esp,DWORD PTR [ebx-0x1f]
  43b290:	jmp    0xea237798
  43b295:	add    ebx,DWORD PTR [ebx-0x1f]
  43b298:	jmp    0xea2509a0
  43b29d:	add    eax,DWORD PTR [ebx+0x7f03e9e1]
  43b2a3:	loope  0x43b28e
  43b2a5:	add    ebp,DWORD PTR [ebx-0x1f]
  43b2a8:	jmp    0xea233fb0
  43b2ad:	add    esi,DWORD PTR [ebx-0x1f]
  43b2b0:	jmp    0xea2357b8
  43b2b5:	add    ecx,DWORD PTR [ebx]
  43b2b7:	loope  0x43b2a2
  43b2b9:	add    eax,DWORD PTR [eax]
  43b2bb:	add    bh,dh
  43b2bd:	loopne 0x43b2a8
  43b2bf:	add    edi,DWORD PTR [ecx+0x4f03e9df]
  43b2c5:	loope  0x43b2c7
  43b2c7:	jmp    0xe94984f8
  43b2cc:	sub    al,0xd6
  43b2ce:	add    eax,0x5ca2ce9
  43b2d3:	jmp    0xe9498104
  43b2d8:	sub    al,0xe2
  43b2da:	add    eax,0x5e62ce9
  43b2df:	jmp    0xe9498d10
  43b2e4:	sub    al,0x5b
  43b2e6:	or     eax,0x5322ce9
  43b2eb:	jmp    0xe948e91c
  43b2f0:	sub    al,0x2a
  43b2f2:	add    eax,0x52e2ce9
  43b2f7:	jmp    0xe948f528
  43b2fc:	sub    al,0x46
  43b2fe:	add    eax,0x53a2ce9
  43b303:	jmp    0xe94ab934
  43b308:	sub    al,0xfa
  43b30a:	push   es
  43b30b:	jmp    0xe94ab13c
  43b310:	sub    al,0xd2
  43b312:	push   es
  43b313:	jmp    0xe94ba744
  43b318:	sub    al,0xe8
  43b31a:	pop    es
  43b31b:	jmp    0xe94b9f4c
  43b320:	add    BYTE PTR [eax],al
  43b322:	sub    al,0x0
  43b324:	or     cl,ch
  43b326:	sub    al,0x1e
  43b328:	add    eax,0x5722ce9
  43b32d:	jmp    0xe949295e
  43b332:	sub    al,0x6a
  43b334:	add    eax,0x56e2ce9
  43b339:	jmp    0xe949356a
  43b33e:	sub    al,0x86
  43b340:	add    eax,0x9cda9600
  43b345:	or     al,0x96
  43b347:	fidiv  DWORD PTR [eax-0x5b2579f4]
  43b34d:	or     al,0x86
  43b34f:	fisubr DWORD PTR [eax-0x632569f4]
  43b355:	or     al,0x96
  43b357:	fisub  DWORD PTR [eax-0x6b2579f4]
  43b35d:	or     al,0x86
  43b35f:	(bad)  
  43b361:	push   cs
  43b362:	push   esi
  43b363:	(bad)  
  43b365:	push   cs
  43b366:	push   esi
  43b367:	fidiv  DWORD PTR [ebp+edx*1+0xededa46]
  43b36e:	inc    esi
  43b36f:	fcmove st,st(5)
  43b371:	adc    eax,0xed6da56
  43b376:	push   esi
  43b377:	fcmovu st,st(2)
  43b379:	push   cs
  43b37a:	inc    esi
  43b37b:	fcmove st,st(6)
  43b37d:	push   cs
  43b37e:	inc    esi
  43b37f:	fcmovbe st,st(2)
  43b381:	push   cs
  43b382:	push   ss
  43b383:	loop   0x43b34b
  43b385:	push   cs
  43b386:	add    BYTE PTR [eax],al
  43b388:	push   ss
  43b389:	loop   0x43b3eb
  43b38b:	or     al,0x6
  43b38d:	loop   0x43b3e3
  43b38f:	or     al,0x6
  43b391:	loop   0x43b3eb
  43b393:	or     al,0x16
  43b395:	loop   0x43b3e3
  43b397:	or     al,0x16
  43b399:	loop   0x43b3eb
  43b39b:	or     al,0x6
  43b39d:	loop   0x43b3e3
  43b39f:	or     al,0x6
  43b3a1:	loop   0x43b3eb
  43b3a3:	or     al,0xd6
  43b3a5:	loope  0x43b3e3
  43b3a7:	or     al,0xd6
  43b3a9:	loope  0x43b3eb
  43b3ab:	or     al,0xc6
  43b3ad:	loope  0x43b3e3
  43b3af:	or     al,0xc6
  43b3b1:	loope  0x43b3eb
  43b3b3:	or     al,0xd6
  43b3b5:	loope  0x43b3e3
  43b3b7:	or     al,0xd6
  43b3b9:	loope  0x43b3eb
  43b3bb:	or     al,0x2f
  43b3bd:	aaa    
  43b3be:	add    al,0x2c
  43b3c0:	and    esi,DWORD PTR [edi]
  43b3c2:	add    al,0x28
  43b3c4:	cmp    esi,DWORD PTR [edi]
  43b3c6:	add    al,0x24
  43b3c8:	xor    esi,DWORD PTR [edi]
  43b3ca:	add    al,0x20
  43b3cc:	sub    esi,DWORD PTR [edi]
  43b3ce:	add    al,0x1c
  43b3d0:	and    esi,DWORD PTR [edi]
  43b3d2:	add    al,0x18
  43b3d4:	cmp    esi,DWORD PTR [edi]
  43b3d6:	add    al,0x14
  43b3d8:	xor    esi,DWORD PTR [edi]
  43b3da:	add    al,0x10
  43b3dc:	sub    esi,DWORD PTR [edi]
  43b3de:	add    al,0xc
  43b3e0:	and    esi,DWORD PTR [edi]
  43b3e2:	add    al,0x8
  43b3e4:	cmp    esi,DWORD PTR [edi]
  43b3e6:	add    al,0x4
  43b3e8:	xor    esi,DWORD PTR [edi]
  43b3ea:	add    al,0x0
  43b3ec:	add    BYTE PTR [eax],al
  43b3ee:	sub    esi,DWORD PTR [edi]
  43b3f0:	add    al,0xfc
  43b3f2:	and    al,0x37
  43b3f4:	add    al,0xf8
  43b3f6:	xor    al,0x37
  43b3f8:	add    al,0xf4
  43b3fa:	xor    al,0x37
  43b3fc:	add    al,0xf0
  43b3fe:	and    al,0x37
  43b400:	add    al,0xec
  43b402:	and    al,0x37
  43b404:	add    al,0xe8
  43b406:	xor    al,0x37
  43b408:	add    al,0xe4
  43b40a:	xor    al,0x37
  43b40c:	add    al,0xe0
  43b40e:	and    al,0x37
  43b410:	add    al,0xdc
  43b412:	and    al,0x37
  43b414:	add    al,0xd8
  43b416:	xor    al,0x37
  43b418:	add    al,0xd4
  43b41a:	xor    al,0x37
  43b41c:	add    al,0xd0
  43b41e:	and    al,0x37
  43b420:	add    al,0xcc
  43b422:	and    al,0x37
  43b424:	add    al,0xc8
  43b426:	xor    al,0x37
  43b428:	add    al,0xc4
  43b42a:	xor    al,0x37
  43b42c:	add    al,0xc0
  43b42e:	and    al,0x37
  43b430:	add    al,0xbc
  43b432:	and    al,0x37
  43b434:	add    al,0xb8
  43b436:	xor    al,0xde
  43b438:	jmp    0xea1c2f40
  43b43d:	add    esi,eax
  43b43f:	fsubr  st,st(1)
  43b441:	add    ebp,esp
  43b443:	fsubr  st,st(1)
  43b445:	add    edx,edi
  43b447:	fsubr  st,st(1)
  43b449:	add    ecx,ebx
  43b44b:	fsubr  st,st(1)
  43b44d:	add    ecx,edi
  43b44f:	fsubr  st,st(1)
  43b451:	add    eax,DWORD PTR [eax]
  43b453:	add    BYTE PTR [ebp+0x1c03e9cd],ah
  43b459:	iret   
  43b45a:	jmp    0xea125762
  43b45f:	add    ebx,DWORD PTR [edi-0x5cfc1628]
  43b465:	fsubr  st,st(1)
  43b467:	add    esi,DWORD PTR [edi-0x44fc1628]
  43b46d:	fsubr  st,st(1)
  43b46f:	add    ebp,DWORD PTR [edi-0x2cfc1628]
  43b475:	fsubr  st,st(1)
  43b477:	add    ecx,DWORD PTR [ebp-0x26]
  43b47a:	jmp    0xea1e1582
  43b47f:	add    edi,DWORD PTR [edi-0x3cfc1628]
  43b485:	fsubr  st,st(1)
  43b487:	add    edx,DWORD PTR [edi-0x74fc1629]
  43b48d:	xlat   BYTE PTR ds:[ebx]
  43b48e:	jmp    0xea1b9396
  43b493:	add    eax,ebx
  43b495:	xlat   BYTE PTR ds:[ebx]
  43b496:	jmp    0xea1e649e
  43b49b:	add    ebp,DWORD PTR [edx+ebx*8-0x2587fc17]
  43b4a2:	jmp    0xea1e28aa
  43b4a7:	add    eax,edi
  43b4a9:	xlat   BYTE PTR ds:[ebx]
  43b4aa:	jmp    0xea1b6fb2
  43b4af:	add    edi,DWORD PTR [edi+0x2ce900d7]
  43b4b5:	pop    edx
  43b4b6:	or     al,0xe9
  43b4b8:	add    BYTE PTR [eax],al
  43b4ba:	sub    al,0x56
  43b4bc:	or     al,0xe9
  43b4be:	sub    al,0x62
  43b4c0:	or     al,0xe9
  43b4c2:	sub    al,0x5e
  43b4c4:	or     al,0xe9
  43b4c6:	sub    al,0xaa
  43b4c8:	or     ebp,ecx
  43b4ca:	sub    al,0xa6
  43b4cc:	or     ebp,ecx
  43b4ce:	sub    al,0xb2
  43b4d0:	or     ebp,ecx
  43b4d2:	sub    al,0xfe
  43b4d4:	or     ebp,ecx
  43b4d6:	sub    al,0xca
  43b4d8:	or     ebp,ecx
  43b4da:	sub    al,0xc6
  43b4dc:	or     ebp,ecx
  43b4de:	sub    al,0xd2
  43b4e0:	or     ebp,ecx
  43b4e2:	sub    al,0xce
  43b4e4:	or     ebp,ecx
  43b4e6:	sub    al,0xda
  43b4e8:	or     ebp,ecx
  43b4ea:	sub    al,0xd6
  43b4ec:	or     ebp,ecx
  43b4ee:	sub    al,0xe2
  43b4f0:	or     ebp,ecx
  43b4f2:	sub    al,0xde
  43b4f4:	or     ebp,ecx
  43b4f6:	sub    al,0x2a
  43b4f8:	or     ebp,ecx
  43b4fa:	sub    al,0x26
  43b4fc:	or     ebp,ecx
  43b4fe:	sub    al,0x32
  43b500:	or     ebp,ecx
  43b502:	sub    al,0x2e
  43b504:	or     ebp,ecx
  43b506:	sub    al,0x3a
  43b508:	or     ebp,ecx
  43b50a:	sub    al,0x36
  43b50c:	or     ebp,ecx
  43b50e:	sub    al,0x42
  43b510:	or     ebp,ecx
  43b512:	sub    al,0x2e
  43b514:	or     ebp,ecx
  43b516:	sub    al,0x3a
  43b518:	or     ebp,ecx
  43b51a:	sub    al,0x36
  43b51c:	or     ebp,ecx
  43b51e:	add    BYTE PTR [eax],al
  43b520:	sub    al,0x12
  43b522:	or     ebp,ecx
  43b524:	sub    al,0xa1
  43b526:	or     ebp,ecx
  43b528:	sub    al,0x1a
  43b52a:	or     ebp,ecx
  43b52c:	sub    al,0xf0
  43b52e:	add    eax,0x26ded600
  43b533:	or     eax,0xad0dec6
  43b538:	(bad)  
  43b539:	faddp  st(4),st
  43b53b:	or     dl,dh
  43b53d:	fmulp  st(0),st
  43b53f:	or     dl,dh
  43b541:	fisubr WORD PTR [edx+ecx*1+0xb1ddec6]
  43b548:	(bad)  
  43b549:	fisub  WORD PTR [edx+ecx*1+0x1168de96]
  43b550:	xchg   esi,eax
  43b551:	ficomp WORD PTR [edx+ecx*1+0xaa0de86]
  43b558:	xchg   dh,bl
  43b55a:	xchg   esp,eax
  43b55b:	or     dl,BYTE PTR [esi-0x69f56722]
  43b561:	fimul  WORD PTR [edx+ecx*1+0xa90de86]
  43b568:	xchg   dh,bl
  43b56a:	test   BYTE PTR [edx],cl
  43b56c:	push   esi
  43b56d:	fimul  WORD PTR [eax+0x7cde560a]
  43b573:	or     al,BYTE PTR [esi-0x22]
  43b576:	or     BYTE PTR [edx],0x46
  43b579:	fiadd  WORD PTR [edx+ecx*1+0xee4de56]
  43b580:	push   esi
  43b581:	fisubr WORD PTR [edx+ecx*1+0x0]
  43b585:	add    BYTE PTR [esi-0x22],al
  43b588:	jo     0x43b594
  43b58a:	inc    esi
  43b58b:	fisub  WORD PTR [edx+ecx*1+0x16]
  43b58f:	fisubr WORD PTR [eax+0xa]
  43b592:	push   ss
  43b593:	ficomp WORD PTR [edx+ecx*1+0x6]
  43b597:	fisub  WORD PTR [eax+0xa]
  43b59a:	push   es
  43b59b:	ficom  WORD PTR [edx+ecx*1+0x16]
  43b59f:	ficomp WORD PTR [eax+0xa]
  43b5a2:	push   ss
  43b5a3:	fimul  WORD PTR [edx+ecx*1+0x6]
  43b5a7:	ficom  WORD PTR [eax+0xa]
  43b5aa:	das    
  43b5ab:	aaa    
  43b5ac:	add    al,0x4c
  43b5ae:	xor    eax,0x35480437
  43b5b3:	aaa    
  43b5b4:	add    al,0xd7
  43b5b6:	sub    DWORD PTR [edi],esi
  43b5b8:	add    al,0x50
  43b5ba:	and    eax,0x354c0437
  43b5bf:	aaa    
  43b5c0:	add    al,0x48
  43b5c2:	xor    eax,0x25440437
  43b5c7:	aaa    
  43b5c8:	add    al,0x40
  43b5ca:	and    eax,0x353c0437
  43b5cf:	aaa    
  43b5d0:	add    al,0x38
  43b5d2:	xor    eax,0x25340437
  43b5d7:	aaa    
  43b5d8:	add    al,0x20
  43b5da:	and    eax,0x351c0437
  43b5df:	aaa    
  43b5e0:	add    al,0x18
  43b5e2:	xor    eax,0x25140437
  43b5e7:	aaa    
  43b5e8:	add    al,0x10
  43b5ea:	add    BYTE PTR [eax],al
  43b5ec:	and    eax,0x350c0437
  43b5f1:	aaa    
  43b5f2:	add    al,0xa7
  43b5f4:	xor    al,0x37
  43b5f6:	add    al,0x4
  43b5f8:	and    eax,0x25000437
  43b5fd:	aaa    
  43b5fe:	add    al,0xfc
  43b600:	ss aaa 
  43b602:	add    al,0xf8
  43b604:	ss aaa 
  43b606:	add    al,0xf4
  43b608:	es aaa 
  43b60a:	add    al,0xf0
  43b60c:	es aaa 
  43b60e:	add    al,0xec
  43b610:	ss aaa 
  43b612:	add    al,0xe8
  43b614:	ss aaa 
  43b616:	add    al,0xe4
  43b618:	es aaa 
  43b61a:	add    al,0xe0
  43b61c:	es aaa 
  43b61e:	add    al,0xdc
  43b620:	ss aaa 
  43b622:	add    al,0xd8
  43b624:	ss fsubp st(1),st
  43b627:	add    esp,ebx
  43b629:	(bad)  
  43b62a:	jmp    0xea1a9532
  43b62f:	add    edi,ebx
  43b631:	(bad)  
  43b632:	jmp    0xea18fe3a
  43b637:	add    esi,ebx
  43b639:	(bad)  
  43b63a:	jmp    0xea1aa542
  43b63f:	add    ecx,DWORD PTR [ebx-0x78fc162a]
  43b645:	(bad)  
  43b646:	jmp    0xea1a394e
  43b64b:	add    edi,DWORD PTR [edi-0x2a]
  43b64e:	jmp    0xdb43b656
  43b653:	(bad)  
  43b654:	jmp    0xea1a8d5c
  43b659:	add    edx,ebx
  43b65b:	(bad)  
  43b65c:	jmp    0xea184964
  43b661:	add    ebp,DWORD PTR [ebx-0x58fc162a]
  43b667:	(bad)  
  43b668:	jmp    0xea1a5970
  43b66d:	add    ebx,DWORD PTR [edi-0x44fc162a]
  43b673:	(bad)  
  43b674:	jmp    0xea1a6d7c
  43b679:	add    esi,DWORD PTR [ebx-0x50fc162a]
  43b67f:	(bad)  
  43b680:	jmp    0xea1a8188
  43b685:	add    eax,edi
  43b687:	(bad)  
  43b688:	jmp    0xea1a7990
  43b68d:	add    edi,DWORD PTR [edi-0x64fc162a]
  43b693:	aad    0xe9
  43b695:	add    edx,DWORD PTR [edi-0x16fc162b]
  43b69b:	shr    ecx,cl
  43b69d:	add    ecx,DWORD PTR [edi+0x2ce900d5]
  43b6a3:	mov    cl,BYTE PTR [ecx]
  43b6a5:	jmp    0xe94d3cd6
  43b6aa:	sub    al,0x92
  43b6ac:	or     ecx,ebp
  43b6ae:	sub    al,0x8e
  43b6b0:	or     ecx,ebp
  43b6b2:	sub    al,0x9a
  43b6b4:	or     ecx,ebp
  43b6b6:	add    BYTE PTR [eax],al
  43b6b8:	sub    al,0x96
  43b6ba:	or     ecx,ebp
  43b6bc:	sub    al,0xa2
  43b6be:	or     ecx,ebp
  43b6c0:	sub    al,0x9e
  43b6c2:	or     ecx,ebp
  43b6c4:	sub    al,0xea
  43b6c6:	or     ecx,ebp
  43b6c8:	sub    al,0xe6
  43b6ca:	or     ecx,ebp
  43b6cc:	sub    al,0xf2
  43b6ce:	or     ecx,ebp
  43b6d0:	sub    al,0x44
  43b6d2:	or     al,0xe9
  43b6d4:	sub    al,0x50
  43b6d6:	or     al,0xe9
  43b6d8:	sub    al,0x4c
  43b6da:	or     al,0xe9
  43b6dc:	sub    al,0x58
  43b6de:	or     al,0xe9
  43b6e0:	sub    al,0xef
  43b6e2:	or     ecx,ebp
  43b6e4:	sub    al,0x60
  43b6e6:	or     al,0xe9
  43b6e8:	sub    al,0x5c
  43b6ea:	or     al,0xe9
  43b6ec:	sub    al,0xa8
  43b6ee:	or     ebp,ecx
  43b6f0:	sub    al,0xff
  43b6f2:	or     ecx,ebp
  43b6f4:	sub    al,0xfb
  43b6f6:	or     ecx,ebp
  43b6f8:	sub    al,0xac
  43b6fa:	or     ebp,ecx
  43b6fc:	sub    al,0xc3
  43b6fe:	or     ecx,ebp
  43b700:	sub    al,0xb4
  43b702:	or     ebp,ecx
  43b704:	sub    al,0xc0
  43b706:	or     ebp,ecx
  43b708:	sub    al,0xbc
  43b70a:	or     ebp,ecx
  43b70c:	sub    al,0x88
  43b70e:	or     ebp,ecx
  43b710:	sub    al,0x2e
  43b712:	or     ecx,ebp
  43b714:	sub    al,0x3a
  43b716:	or     ecx,ebp
  43b718:	sub    al,0x36
  43b71a:	or     DWORD PTR [eax],eax
  43b71c:	add    BYTE PTR [eax],al
  43b71e:	push   es
  43b71f:	fild   DWORD PTR [esi+0xb]
  43b722:	push   es
  43b723:	fucomi st,st(7)
  43b725:	or     BYTE PTR [esi],dl
  43b727:	fcomi  st,st(3)
  43b729:	or     BYTE PTR [esi],dl
  43b72b:	(bad)  
  43b72d:	or     BYTE PTR [esi],al
  43b72f:	fucomi st,st(3)
  43b731:	or     BYTE PTR [esi],al
  43b733:	fcmovnu st,st(7)
  43b735:	or     dh,dl
  43b737:	(bad)  
  43b739:	or     dh,dl
  43b73b:	fidiv  DWORD PTR [edx]
  43b73d:	or     eax,esi
  43b73f:	fisub  DWORD PTR [esi]
  43b741:	or     eax,esi
  43b743:	fcmove st,st(7)
  43b745:	or     dh,dl
  43b747:	fcmovbe st,st(3)
  43b749:	or     dh,dl
  43b74b:	fcmovb st,st(7)
  43b74d:	or     dh,al
  43b74f:	fcmove st,st(3)
  43b751:	or     dh,al
  43b753:	ficomp DWORD PTR [edx]
  43b755:	or     edx,DWORD PTR [esi-0x69f4f126]
  43b75b:	ficom  DWORD PTR [edx]
  43b75d:	or     eax,DWORD PTR [esi-0x79f4f926]
  43b763:	fisubr DWORD PTR [edi-0x4c2569f8]
  43b769:	or     BYTE PTR [esi-0x79f75826],dl
  43b76f:	fisubr DWORD PTR [ebx-0x602579f8]
  43b775:	or     BYTE PTR [esi-0x26],dl
  43b778:	mov    ds:0xf2da5608,eax
  43b77d:	or     al,BYTE PTR [esi-0x26]
  43b780:	fwait
  43b781:	or     BYTE PTR [eax],al
  43b783:	add    BYTE PTR [esi-0x26],al
  43b786:	(bad)
  43b78a:	xchg   ebx,eax
  43b78b:	or     BYTE PTR [esi-0x26],dl
  43b78e:	xchg   DWORD PTR [eax],ecx
  43b790:	inc    esi
  43b791:	fimul  DWORD PTR [ebx+0x7fda4608]
  43b797:	or     BYTE PTR [edi],ch
  43b799:	aaa    
  43b79a:	add    al,0x83
  43b79c:	aaa    
  43b79d:	aaa    
  43b79e:	add    al,0x7f
  43b7a0:	daa    
  43b7a1:	aaa    
  43b7a2:	add    al,0x7b
  43b7a4:	daa    
  43b7a5:	aaa    
  43b7a6:	add    al,0x77
  43b7a8:	aaa    
  43b7a9:	aaa    
  43b7aa:	add    al,0x73
  43b7ac:	aaa    
  43b7ad:	aaa    
  43b7ae:	add    al,0xc2
  43b7b0:	and    eax,0x25be0437
  43b7b5:	aaa    
  43b7b6:	add    al,0xba
  43b7b8:	xor    eax,0x35b60437
  43b7bd:	aaa    
  43b7be:	add    al,0xb2
  43b7c0:	and    eax,0x25ae0437
  43b7c5:	aaa    
  43b7c6:	add    al,0xaa
  43b7c8:	xor    eax,0x35a60437
  43b7cd:	aaa    
  43b7ce:	add    al,0xa2
  43b7d0:	and    eax,0x259e0437
  43b7d5:	aaa    
  43b7d6:	add    al,0x9a
  43b7d8:	xor    eax,0x35960437
  43b7dd:	aaa    
  43b7de:	add    al,0x92
  43b7e0:	and    eax,0x258e0437
  43b7e5:	aaa    
  43b7e6:	add    al,0x8a
  43b7e8:	add    BYTE PTR [eax],al
  43b7ea:	xor    eax,0x35860437
  43b7ef:	aaa    
  43b7f0:	add    al,0x82
  43b7f2:	and    eax,0x257e0437
  43b7f7:	aaa    
  43b7f8:	add    al,0x7a
  43b7fa:	xor    eax,0x35760437
  43b7ff:	aaa    
  43b800:	add    al,0x72
  43b802:	and    eax,0x256e0437
  43b807:	aaa    
  43b808:	add    al,0x6a
  43b80a:	xor    eax,0x35660437
  43b80f:	aaa    
  43b810:	add    al,0x62
  43b812:	and    eax,0xd103e9de
  43b817:	xlat   BYTE PTR ds:[ebx]
  43b818:	jmp    0xea1c3d20
  43b81d:	add    edi,DWORD PTR [ecx-0x28]
  43b820:	jmp    0xea1c3528
  43b825:	add    esp,DWORD PTR [ecx-0x28]
  43b828:	jmp    0xea1c2d30
  43b82d:	add    ebp,DWORD PTR [ecx-0x28]
  43b830:	jmp    0xea1c2538
  43b835:	add    esi,DWORD PTR [ecx]
  43b837:	fsubr  st,st(1)
  43b839:	add    esp,DWORD PTR ds:0x1903e9d8
  43b83f:	fsubr  st,st(1)
  43b841:	add    ebx,DWORD PTR ds:0x103e9d8
  43b847:	fsubr  st,st(1)
  43b849:	add    edx,DWORD PTR ds:0x3e9d8
  43b84f:	add    BYTE PTR [ecx],cl
  43b851:	fsubr  st,st(1)
  43b853:	add    ecx,DWORD PTR ds:0x1103e9d8
  43b859:	fsubr  st,st(1)
  43b85b:	add    eax,DWORD PTR [ebp-0x28]
  43b85e:	jmp    0xea1bf166
  43b863:	add    edi,DWORD PTR ds:0x2103e9d8
  43b869:	fsubr  st,st(1)
  43b86b:	add    esi,DWORD PTR ds:0x2903e9d8
  43b871:	fsubr  st,st(1)
  43b873:	add    ebp,DWORD PTR ds:0x7103e9d8
  43b879:	(bad)  
  43b87a:	jmp    0xea1a1d82
  43b87f:	add    ebx,DWORD PTR [ecx-0x2a]
  43b882:	jmp    0xea1a158a
  43b887:	add    eax,DWORD PTR [ecx-0x2a]
  43b88a:	jmp    0x11a0d92
  43b88f:	jmp    0xe94df4c0
  43b894:	sub    al,0x40
  43b896:	or     ch,cl
  43b898:	sub    al,0x4
  43b89a:	or     ch,cl
  43b89c:	sub    al,0x8
  43b89e:	or     ch,cl
  43b8a0:	sub    al,0xc
  43b8a2:	or     ch,cl
  43b8a4:	sub    al,0x10
  43b8a6:	or     ch,cl
  43b8a8:	sub    al,0x14
  43b8aa:	or     ch,cl
  43b8ac:	sub    al,0x18
  43b8ae:	or     ch,cl
  43b8b0:	sub    al,0x1c
  43b8b2:	or     ch,cl
  43b8b4:	add    BYTE PTR [eax],al
  43b8b6:	sub    al,0x20
  43b8b8:	or     ch,cl
  43b8ba:	sub    al,0x64
  43b8bc:	or     ch,cl
  43b8be:	sub    al,0x68
  43b8c0:	or     ch,cl
  43b8c2:	sub    al,0x6c
  43b8c4:	or     ch,cl
  43b8c6:	sub    al,0x70
  43b8c8:	or     ch,cl
  43b8ca:	sub    al,0x74
  43b8cc:	or     ch,cl
  43b8ce:	sub    al,0x78
  43b8d0:	or     ch,cl
  43b8d2:	sub    al,0x7c
  43b8d4:	or     ch,cl
  43b8d6:	sub    al,0x80
  43b8d8:	or     ch,cl
  43b8da:	sub    al,0x44
  43b8dc:	or     ch,cl
  43b8de:	sub    al,0x48
  43b8e0:	or     ch,cl
  43b8e2:	sub    al,0x4c
  43b8e4:	or     ch,cl
  43b8e6:	sub    al,0x50
  43b8e8:	or     ch,cl
  43b8ea:	sub    al,0x54
  43b8ec:	or     ch,cl
  43b8ee:	sub    al,0x58
  43b8f0:	or     ch,cl
  43b8f2:	sub    al,0x5c
  43b8f4:	or     ch,cl
  43b8f6:	sub    al,0x60
  43b8f8:	or     ch,cl
  43b8fa:	sub    al,0xa4
  43b8fc:	or     ecx,ebp
  43b8fe:	sub    al,0xa8
  43b900:	or     ecx,ebp
  43b902:	sub    al,0xac
  43b904:	or     ecx,ebp
  43b906:	sub    al,0xb0
  43b908:	or     DWORD PTR [eax],eax
  43b90a:	inc    esi
  43b90b:	fbld   TBYTE PTR [esi+0x9]
  43b90e:	push   esi
  43b90f:	fild   QWORD PTR [edx+0x9]
  43b912:	push   esi
  43b913:	fistp  WORD PTR [esi+0x9]
  43b916:	inc    esi
  43b917:	fbld   TBYTE PTR [edx+0x9]
  43b91a:	add    BYTE PTR [eax],al
  43b91c:	inc    esi
  43b91d:	fist   WORD PTR [esi+0x9]
  43b920:	push   ss
  43b921:	fistp  WORD PTR [edx+0x9]
  43b924:	push   ss
  43b925:	fisttp WORD PTR [esi+0x9]
  43b928:	push   es
  43b929:	fist   WORD PTR [edx+0x9]
  43b92c:	push   es
  43b92d:	fild   WORD PTR [esi+0x9]
  43b930:	push   ss
  43b931:	fisttp WORD PTR [edx+0x9]
  43b934:	push   ss
  43b935:	fistp  QWORD PTR [esi]
  43b937:	or     DWORD PTR [esi],eax
  43b939:	fild   WORD PTR [edx+0x9]
  43b93c:	push   es
  43b93d:	fbstp  TBYTE PTR [esi]
  43b93f:	or     esi,edx
  43b941:	fidivr WORD PTR [edx]
  43b943:	or     esi,edx
  43b945:	fisubr WORD PTR [esi]
  43b947:	or     esi,eax
  43b949:	fidiv  WORD PTR [edx]
  43b94b:	or     esi,eax
  43b94d:	fisub  WORD PTR [esi]
  43b94f:	or     esi,edx
  43b951:	fisubr WORD PTR [edx]
  43b953:	or     esi,edx
  43b955:	ficomp WORD PTR [esi]
  43b957:	or     esi,eax
  43b959:	fisub  WORD PTR [edx]
  43b95b:	or     esi,eax
  43b95d:	ficom  WORD PTR [esi]
  43b95f:	or     DWORD PTR [esi-0x69f6e522],edx
  43b965:	fimul  WORD PTR [esi]
  43b967:	or     DWORD PTR [esi-0x79f6ed22],eax
  43b96d:	fiadd  WORD PTR [esi]
  43b96f:	or     DWORD PTR [esi-0x69f6f522],edx
  43b975:	fdivp  st(6),st
  43b977:	or     BYTE PTR [esi-0x79f6fd22],al
  43b97d:	fdivrp st(6),st
  43b97f:	or     BYTE PTR [eax],al
  43b981:	add    BYTE PTR [esi-0x22],dl
  43b984:	cli    
  43b985:	or     BYTE PTR [edi],ch
  43b987:	xor    eax,0x3527f604
  43b98c:	add    al,0xf2
  43b98e:	daa    
  43b98f:	xor    eax,0x3537ee04
  43b994:	add    al,0xea
  43b996:	aaa    
  43b997:	xor    eax,0x3527e604
  43b99c:	add    al,0xe2
  43b99e:	daa    
  43b99f:	xor    eax,0x3737de04
  43b9a4:	add    al,0xda
  43b9a6:	aaa    
  43b9a7:	aaa    
  43b9a8:	add    al,0xd6
  43b9aa:	daa    
  43b9ab:	aaa    
  43b9ac:	add    al,0xd2
  43b9ae:	daa    
  43b9af:	aaa    
  43b9b0:	add    al,0xce
  43b9b2:	aaa    
  43b9b3:	aaa    
  43b9b4:	add    al,0xca
  43b9b6:	aaa    
  43b9b7:	aaa    
  43b9b8:	add    al,0xc6
  43b9ba:	daa    
  43b9bb:	aaa    
  43b9bc:	add    al,0xc2
  43b9be:	daa    
  43b9bf:	aaa    
  43b9c0:	add    al,0xbe
  43b9c2:	aaa    
  43b9c3:	aaa    
  43b9c4:	add    al,0xba
  43b9c6:	aaa    
  43b9c7:	aaa    
  43b9c8:	add    al,0xb6
  43b9ca:	daa    
  43b9cb:	aaa    
  43b9cc:	add    al,0xb2
  43b9ce:	daa    
  43b9cf:	aaa    
  43b9d0:	add    al,0xae
  43b9d2:	aaa    
  43b9d3:	aaa    
  43b9d4:	add    al,0xaa
  43b9d6:	aaa    
  43b9d7:	aaa    
  43b9d8:	add    al,0xa6
  43b9da:	daa    
  43b9db:	aaa    
  43b9dc:	add    al,0xa2
  43b9de:	daa    
  43b9df:	aaa    
  43b9e0:	add    al,0x9e
  43b9e2:	aaa    
  43b9e3:	aaa    
  43b9e4:	add    al,0x9a
  43b9e6:	add    BYTE PTR [eax],al
  43b9e8:	aaa    
  43b9e9:	aaa    
  43b9ea:	add    al,0x96
  43b9ec:	daa    
  43b9ed:	aaa    
  43b9ee:	add    al,0x92
  43b9f0:	daa    
  43b9f1:	aaa    
  43b9f2:	add    al,0x8e
  43b9f4:	aaa    
  43b9f5:	aaa    
  43b9f6:	add    al,0x8a
  43b9f8:	aaa    
  43b9f9:	aaa    
  43b9fa:	add    al,0x86
  43b9fc:	daa    
  43b9fd:	aaa    
  43b9fe:	add    al,0x82
  43ba00:	daa    
  43ba01:	fsubp  st(1),st
  43ba03:	add    ebp,ecx
  43ba05:	aad    0xe9
  43ba07:	add    esp,ebp
  43ba09:	aad    0xe9
  43ba0b:	add    esp,ecx
  43ba0d:	aad    0xe9
  43ba0f:	add    ebx,ebp
  43ba11:	aad    0xe9
  43ba13:	add    ebx,ecx
  43ba15:	aad    0xe9
  43ba17:	add    edx,ebp
  43ba19:	aad    0xe9
  43ba1b:	add    edx,ecx
  43ba1d:	aad    0xe9
  43ba1f:	add    ecx,ebp
  43ba21:	aad    0xe9
  43ba23:	add    ecx,DWORD PTR [ecx-0x7afc162a]
  43ba29:	(bad)  
  43ba2a:	jmp    0xea1a3b32
  43ba2f:	add    edi,DWORD PTR [ebp-0x2a]
  43ba32:	jmp    0xea1a333a
  43ba37:	add    esi,DWORD PTR [ebp-0x2a]
  43ba3a:	jmp    0xea1a2b42
  43ba3f:	add    ebp,DWORD PTR [ebp-0x2a]
  43ba42:	jmp    0xea19e34a
  43ba47:	add    esp,DWORD PTR ds:0x3e9d6
  43ba4d:	add    BYTE PTR [ecx],ah
  43ba4f:	(bad)  
  43ba50:	jmp    0xea19d758
  43ba55:	add    ebx,DWORD PTR [ecx]
  43ba57:	(bad)  
  43ba58:	jmp    0xea19cf60
  43ba5d:	add    edx,DWORD PTR [ecx]
  43ba5f:	(bad)  
  43ba60:	jmp    0xea19c768
  43ba65:	add    ecx,DWORD PTR [ecx-0x2a]
  43ba68:	jmp    0xea19ff70
  43ba6d:	add    eax,DWORD PTR [ecx-0x2a]
  43ba70:	jmp    0xea19f778
  43ba75:	add    edi,DWORD PTR [ecx]
  43ba77:	(bad)  
  43ba78:	jmp    0x11d1080
  43ba7d:	jmp    0xe943b5ae
  43ba82:	sub    al,0xdc
  43ba84:	or     cl,ch
  43ba86:	sub    al,0x20
  43ba88:	add    cl,ch
  43ba8a:	sub    al,0x24
  43ba8c:	add    cl,ch
  43ba8e:	sub    al,0x28
  43ba90:	add    cl,ch
  43ba92:	sub    al,0x2c
  43ba94:	add    cl,ch
  43ba96:	sub    al,0x30
  43ba98:	add    cl,ch
  43ba9a:	sub    al,0x34
  43ba9c:	add    cl,ch
  43ba9e:	sub    al,0x38
  43baa0:	add    cl,ch
  43baa2:	sub    al,0x3c
  43baa4:	add    cl,ch
  43baa6:	sub    al,0x0
  43baa8:	add    cl,ch
  43baaa:	sub    al,0x4
  43baac:	add    cl,ch
  43baae:	sub    al,0x8
  43bab0:	add    cl,ch
  43bab2:	add    BYTE PTR [eax],al
  43bab4:	sub    al,0xc
  43bab6:	add    cl,ch
  43bab8:	sub    al,0x10
  43baba:	add    cl,ch
  43babc:	sub    al,0x14
  43babe:	add    cl,ch
  43bac0:	sub    al,0x18
  43bac2:	add    cl,ch
  43bac4:	sub    al,0x1c
  43bac6:	add    cl,ch
  43bac8:	sub    al,0x60
  43baca:	add    cl,ch
  43bacc:	sub    al,0x64
  43bace:	add    cl,ch
  43bad0:	sub    al,0x68
  43bad2:	add    cl,ch
  43bad4:	sub    al,0x6c
  43bad6:	add    cl,ch
  43bad8:	sub    al,0x70
  43bada:	add    cl,ch
  43badc:	sub    al,0xb9
  43bade:	std    
  43badf:	call   0xe9417810
  43bae4:	sub    al,0x81
  43bae6:	std    
  43bae7:	call   0xe9414018
  43baec:	sub    al,0x89
  43baee:	std    
  43baef:	call   0xe9414820
  43baf4:	sub    al,0x91
  43baf6:	std    
  43baf7:	call   DWORD PTR [esi-0x69fae325]
  43bafd:	fisttp DWORD PTR [edx+0x7edb8607]
  43bb03:	pop    es
  43bb04:	xchg   bl,bl
  43bb06:	add    BYTE PTR [edi],0x56
  43bb09:	(bad)  [esi+0x7]
  43bb0c:	push   esi
  43bb0d:	fld    TBYTE PTR ds:0x31db4605
  43bb13:	add    eax,0x525db46
  43bb18:	add    BYTE PTR [eax],al
  43bb1a:	push   esi
  43bb1b:	fld    TBYTE PTR [ecx]
  43bb1d:	add    eax,0x76adb56
  43bb22:	inc    esi
  43bb23:	fistp  DWORD PTR [esi+0x7]
  43bb26:	inc    esi
  43bb27:	(bad)  [edx+0x7]
  43bb2a:	push   ss
  43bb2b:	fist   DWORD PTR [esi+0x7]
  43bb2e:	push   ss
  43bb2f:	fistp  DWORD PTR [edx+0x7]
  43bb32:	push   es
  43bb33:	fisttp DWORD PTR [esi+0x7]
  43bb36:	push   es
  43bb37:	fist   DWORD PTR [edx+0x7]
  43bb3a:	push   ss
  43bb3b:	fild   DWORD PTR [esi+0x7]
  43bb3e:	push   ss
  43bb3f:	(bad)  
  43bb41:	add    al,0x6
  43bb43:	fild   DWORD PTR [ecx]
  43bb45:	add    eax,0x4f5db06
  43bb4a:	(bad)  
  43bb4b:	fidiv  DWORD PTR [esi]
  43bb4d:	pop    es
  43bb4e:	(bad)  
  43bb4f:	fidivr DWORD PTR [edx]
  43bb51:	pop    es
  43bb52:	(bad)  
  43bb53:	fisubr DWORD PTR [esi]
  43bb55:	pop    es
  43bb56:	(bad)  
  43bb57:	fidiv  DWORD PTR [edx]
  43bb59:	pop    es
  43bb5a:	(bad)  
  43bb5b:	fisub  DWORD PTR [esi]
  43bb5d:	pop    es
  43bb5e:	(bad)  
  43bb5f:	fisubr DWORD PTR [edx]
  43bb61:	pop    es
  43bb62:	(bad)  
  43bb63:	ficomp DWORD PTR [esi]
  43bb65:	pop    es
  43bb66:	(bad)  
  43bb67:	fisub  DWORD PTR [edx]
  43bb69:	pop    es
  43bb6a:	xchg   esi,eax
  43bb6b:	ficom  DWORD PTR [esi]
  43bb6d:	pop    es
  43bb6e:	xchg   esi,eax
  43bb6f:	ficomp DWORD PTR [edx]
  43bb71:	pop    es
  43bb72:	das    
  43bb73:	xor    eax,0x35281604
  43bb78:	add    al,0x12
  43bb7a:	xor    BYTE PTR ds:0xe04,dh
  43bb80:	sub    BYTE PTR ds:0x35300a04,dh
  43bb86:	add    al,0x6
  43bb88:	sub    BYTE PTR ds:0x35300204,dh
  43bb8e:	add    al,0xfe
  43bb90:	sub    DWORD PTR ds:0x3531fa04,esi
  43bb96:	add    al,0xf6
  43bb98:	sub    DWORD PTR ds:0x3531f204,esi
  43bb9e:	add    al,0xee
  43bba0:	sub    DWORD PTR ds:0x3531ea04,esi
  43bba6:	add    al,0xe6
  43bba8:	sub    DWORD PTR ds:0x731e204,esi
  43bbae:	add    al,0xde
  43bbb0:	sub    DWORD PTR [edi],eax
  43bbb2:	add    al,0xda
  43bbb4:	xor    DWORD PTR [edi],eax
  43bbb6:	add    al,0xd6
  43bbb8:	sub    DWORD PTR [edi],eax
  43bbba:	add    al,0xd2
  43bbbc:	xor    DWORD PTR [edi],eax
  43bbbe:	add    al,0xce
  43bbc0:	sub    DWORD PTR [edi],eax
  43bbc2:	add    al,0x85
  43bbc4:	xor    eax,DWORD PTR [edi]
  43bbc6:	add    al,0x81
  43bbc8:	sub    eax,DWORD PTR [edi]
  43bbca:	add    al,0x7d
  43bbcc:	xor    eax,DWORD PTR [edi]
  43bbce:	add    al,0xbe
  43bbd0:	sub    DWORD PTR [edi],eax
  43bbd2:	add    al,0xba
  43bbd4:	xor    DWORD PTR [edi],eax
  43bbd6:	add    al,0xb6
  43bbd8:	sub    DWORD PTR [edi],eax
  43bbda:	add    al,0xb2
  43bbdc:	xor    DWORD PTR [edi],eax
  43bbde:	add    al,0xae
  43bbe0:	sub    DWORD PTR [edi],eax
  43bbe2:	add    al,0xaa
  43bbe4:	add    BYTE PTR [eax],al
  43bbe6:	xor    DWORD PTR [edi],eax
  43bbe8:	add    al,0xa6
  43bbea:	sub    DWORD PTR [edi],eax
  43bbec:	add    al,0xa2
  43bbee:	xor    esi,ebx
  43bbf0:	jmp    0xea287cf8
  43bbf5:	add    esi,DWORD PTR [ebp-0x46fc161c]
  43bbfb:	in     al,0xe9
  43bbfd:	add    ebx,DWORD PTR [ebp-0x4efc161c]
  43bc03:	in     al,0xe9
  43bc05:	add    esp,DWORD PTR [ebp-0x56fc161c]
  43bc0b:	in     al,0xe9
  43bc0d:	add    ebp,DWORD PTR [ebp-0x1efc161c]
  43bc13:	jecxz  0x43bbfe
  43bc15:	add    edx,ebp
  43bc17:	jecxz  0x43bc02
  43bc19:	add    ebx,ecx
  43bc1b:	jecxz  0x43bc06
  43bc1d:	add    edi,DWORD PTR [ebp-0x2efc161d]
  43bc23:	jecxz  0x43bc0e
  43bc25:	add    eax,ebp
  43bc27:	jecxz  0x43bc12
  43bc29:	add    ecx,ecx
  43bc2b:	jecxz  0x43bc16
  43bc2d:	add    ecx,DWORD PTR [ebp-0x7efc161c]
  43bc33:	in     al,0xe9
  43bc35:	add    esi,DWORD PTR [ebp-0x1c]
  43bc38:	jmp    0xea283540
  43bc3d:	add    ebx,DWORD PTR [ebp-0x1c]
  43bc40:	jmp    0xea282d48
  43bc45:	add    esi,DWORD PTR [edx]
  43bc47:	loop   0x43bc32
  43bc49:	add    eax,DWORD PTR [eax]
  43bc4b:	add    BYTE PTR [esi],ch
  43bc4d:	loop   0x43bc38
  43bc4f:	add    ebp,edx
  43bc51:	loopne 0x43bc3c
  43bc53:	add    esp,esi
  43bc55:	loopne 0x43bc40
  43bc57:	add    edx,DWORD PTR ds:0x1903e9e4
  43bc5d:	in     al,0xe9
  43bc5f:	add    edi,ebp
  43bc61:	jecxz  0x43bc4c
  43bc63:	add    edx,DWORD PTR [ecx]
  43bc65:	in     al,0xe9
  43bc67:	add    eax,DWORD PTR ds:0x2ce900e4
  43bc6d:	(bad)  
  43bc6e:	(bad)  
  43bc6f:	call   0xe9427ca0
  43bc74:	sub    al,0xfc
  43bc76:	(bad)  
  43bc77:	call   0xe942b4a8
  43bc7c:	sub    al,0xf4
  43bc7e:	(bad)  
  43bc7f:	call   0xe942acb0
  43bc84:	sub    al,0xec
  43bc86:	(bad)  
  43bc87:	call   0xe942a4b8
  43bc8c:	sub    al,0xe4
  43bc8e:	(bad)  
  43bc8f:	call   0xe9429cc0
  43bc94:	sub    al,0x1c
  43bc96:	(bad)  
  43bc97:	call   0xe941d4c8
  43bc9c:	sub    al,0x14
  43bc9e:	(bad)  
  43bc9f:	call   0xe941ccd0
  43bca4:	sub    al,0xc
  43bca6:	(bad)  
  43bca7:	call   0xe941c4d8
  43bcac:	sub    al,0x4
  43bcae:	(bad)  
  43bcaf:	call   0x6fbcb4
  43bcb4:	(bad)  
  43bcb5:	call   0xe941f8e6
  43bcba:	sub    al,0x38
  43bcbc:	(bad)  
  43bcbd:	call   0xe941f0ee
  43bcc2:	sub    al,0x30
  43bcc4:	(bad)  
  43bcc5:	call   0xe941e8f6
  43bcca:	sub    al,0x28
  43bccc:	(bad)  
  43bccd:	call   0xe941e0fe
  43bcd2:	sub    al,0x20
  43bcd4:	(bad)  
  43bcd5:	call   0xe9421906
  43bcda:	sub    al,0x58
  43bcdc:	(bad)  
  43bcdd:	call   0xe942110e
  43bce2:	sub    al,0x50
  43bce4:	(bad)  
  43bce5:	call   esi
  43bce7:	fbld   TBYTE PTR [esi-0x552039fb]
  43bced:	add    eax,0x59edfc6
  43bcf2:	xchg   esi,eax
  43bcf3:	fbld   TBYTE PTR [edx-0x692069fb]
  43bcf9:	add    eax,0x59adf86
  43bcfe:	xchg   bh,bl
  43bd00:	mov    es,WORD PTR ds:0x592df96
  43bd06:	xchg   esi,eax
  43bd07:	fild   WORD PTR [esi-0x752079fb]
  43bd0d:	add    eax,0x57edf86
  43bd12:	push   esi
  43bd13:	fild   WORD PTR [edx+0x56000005]
  43bd19:	fbstp  TBYTE PTR [esi+0x5]
  43bd1c:	inc    esi
  43bd1d:	fistp  QWORD PTR [edx+0x5]
  43bd20:	inc    esi
  43bd21:	fild   QWORD PTR [esi+0x5]
  43bd24:	push   esi
  43bd25:	fbstp  TBYTE PTR [edx+0x5]
  43bd28:	push   esi
  43bd29:	fbld   TBYTE PTR [esi+0x5]
  43bd2c:	inc    esi
  43bd2d:	fild   QWORD PTR [edx+0x5]
  43bd30:	inc    esi
  43bd31:	fistp  WORD PTR [esi+0x5]
  43bd34:	push   ss
  43bd35:	fbld   TBYTE PTR [edx+0x5]
  43bd38:	push   ss
  43bd39:	fist   WORD PTR [esi+0x5]
  43bd3c:	push   es
  43bd3d:	fistp  WORD PTR [edx+0x5]
  43bd40:	push   es
  43bd41:	fisttp WORD PTR [esi+0x5]
  43bd44:	push   ss
  43bd45:	fist   WORD PTR [edx+0x5]
  43bd48:	push   ss
  43bd49:	fild   WORD PTR [esi+0x5]
  43bd4c:	push   es
  43bd4d:	fisttp WORD PTR [edx+0x5]
  43bd50:	push   es
  43bd51:	fistp  QWORD PTR [esi]
  43bd53:	add    eax,0x542ded6
  43bd58:	(bad)  
  43bd59:	fidiv  WORD PTR [esi]
  43bd5b:	add    eax,0x53adec6
  43bd60:	das    
  43bd61:	add    eax,0x5323604
  43bd66:	add    al,0x32
  43bd68:	sub    al,BYTE PTR ds:0x5322e04
  43bd6e:	add    al,0x2a
  43bd70:	sub    al,BYTE PTR ds:0x5322604
  43bd76:	add    al,0x22
  43bd78:	sub    al,BYTE PTR ds:0x1e04
  43bd7e:	xor    al,BYTE PTR ds:0x52a1a04
  43bd84:	add    al,0x16
  43bd86:	xor    al,BYTE PTR ds:0x52a1204
  43bd8c:	add    al,0xe
  43bd8e:	xor    al,BYTE PTR ds:0x52a0a04
  43bd94:	add    al,0x6
  43bd96:	xor    al,BYTE PTR ds:0x52a0204
  43bd9c:	add    al,0xfe
  43bd9e:	xor    eax,DWORD PTR ds:0x52bfa04
  43bda4:	add    al,0xf6
  43bda6:	xor    eax,DWORD PTR ds:0x52bf204
  43bdac:	add    al,0xee
  43bdae:	xor    eax,DWORD PTR ds:0x52bea04
  43bdb4:	add    al,0xe6
  43bdb6:	xor    eax,DWORD PTR [edi]
  43bdb8:	add    al,0xe2
  43bdba:	sub    eax,DWORD PTR [edi]
  43bdbc:	add    al,0xde
  43bdbe:	xor    eax,DWORD PTR [edi]
  43bdc0:	add    al,0xda
  43bdc2:	sub    eax,DWORD PTR [edi]
  43bdc4:	add    al,0xd6
  43bdc6:	xor    eax,DWORD PTR [edi]
  43bdc8:	add    al,0xd2
  43bdca:	sub    eax,DWORD PTR [edi]
  43bdcc:	add    al,0xce
  43bdce:	xor    eax,DWORD PTR [edi]
  43bdd0:	add    al,0xca
  43bdd2:	sub    eax,DWORD PTR [edi]
  43bdd4:	add    al,0xc6
  43bdd6:	xor    eax,DWORD PTR [edi]
  43bdd8:	add    al,0xc2
  43bdda:	sub    ebx,esi
  43bddc:	jmp    0xea2656e4
  43bde1:	add    eax,DWORD PTR [eax]
  43bde3:	add    BYTE PTR [ebp-0x7efc161e],dl
  43bde9:	loop   0x43bdd4
  43bdeb:	add    edi,DWORD PTR [ebp-0x1e]
  43bdee:	jmp    0xea2646f6
  43bdf3:	add    eax,DWORD PTR [ebp-0x2efc161e]
  43bdf9:	loop   0x43bde4
  43bdfb:	add    ecx,ebp
  43bdfd:	loop   0x43bde8
  43bdff:	add    edi,DWORD PTR [ecx-0x4afc161e]
  43be05:	loop   0x43bdf0
  43be07:	add    esp,DWORD PTR [ecx-0x62fc161e]
  43be0d:	loop   0x43bdf8
  43be0f:	add    ebp,DWORD PTR [ecx-0x5afc161e]
  43be15:	loop   0x43be00
  43be17:	add    esi,DWORD PTR [ecx-0x52fc161e]
  43be1d:	loop   0x43be08
  43be1f:	add    ebx,ecx
  43be21:	loope  0x43be0c
  43be23:	add    edx,ebp
  43be25:	loope  0x43be10
  43be27:	add    eax,ecx
  43be29:	loope  0x43be14
  43be2b:	add    edi,DWORD PTR [ebp-0x36fc161f]
  43be31:	loope  0x43be1c
  43be33:	add    eax,ebp
  43be35:	loope  0x43be20
  43be37:	add    edx,DWORD PTR [ecx-0x72fc161e]
  43be3d:	loop   0x43be28
  43be3f:	add    edi,DWORD PTR [ecx-0x1e]
  43be42:	jmp    0xea26334a
  43be47:	add    eax,DWORD PTR [eax]
  43be49:	add    BYTE PTR [ecx-0x1e],ah
  43be4c:	jmp    0xea261b54
  43be51:	add    ebp,DWORD PTR [ecx-0x1e]
  43be54:	jmp    0x126235c
  43be59:	jmp    0xe9405e8a
  43be5e:	sub    al,0x9c
  43be60:	cld    
  43be61:	call   0xe9409692
  43be66:	sub    al,0xd4
  43be68:	cld    
  43be69:	call   0xe9408e9a
  43be6e:	sub    al,0xcc
  43be70:	cld    
  43be71:	call   0xe94086a2
  43be76:	sub    al,0xc4
  43be78:	cld    
  43be79:	call   0xe9407eaa
  43be7e:	sub    al,0xbc
  43be80:	cld    
  43be81:	call   0xe940b6b2
  43be86:	sub    al,0xf4
  43be88:	cld    
  43be89:	call   0xe940aeba
  43be8e:	sub    al,0xec
  43be90:	cld    
  43be91:	call   0xe940a6c2
  43be96:	sub    al,0xe4
  43be98:	cld    
  43be99:	call   0xe9409eca
  43be9e:	sub    al,0xdc
  43bea0:	cld    
  43bea1:	call   0xe947d6d2
  43bea6:	sub    al,0x14
  43bea8:	add    al,0xe9
  43beaa:	sub    al,0x10
  43beac:	add    al,0xe9
  43beae:	add    BYTE PTR [eax],al
  43beb0:	sub    al,0xc
  43beb2:	add    al,0xe9
  43beb4:	sub    al,0x8
  43beb6:	add    al,0xe9
  43beb8:	sub    al,0x4
  43beba:	add    al,0xe9
  43bebc:	sub    al,0x0
  43bebe:	add    al,0xe9
  43bec0:	sub    al,0xfc
  43bec2:	add    ebp,ecx
  43bec4:	sub    al,0x38
  43bec6:	add    al,0xe9
  43bec8:	sub    al,0x34
  43beca:	add    al,0xe9
  43becc:	sub    al,0x30
  43bece:	add    al,0xe9
  43bed0:	sub    al,0x2c
  43bed2:	add    al,0x0
  43bed4:	push   es
  43bed5:	fadd   st(6),st
  43bed7:	add    eax,DWORD PTR [esi]
  43bed9:	fcom   QWORD PTR [edi]
  43bedb:	add    esi,edx
  43bedd:	fistp  DWORD PTR [ebx]
  43bedf:	add    esi,edx
  43bee1:	fisttp DWORD PTR [edi]
  43bee3:	add    esi,eax
  43bee5:	fist   DWORD PTR [ebx]
  43bee7:	add    esi,eax
  43bee9:	fild   DWORD PTR [esi]
  43beeb:	add    esi,edx
  43beed:	(bad)  [edx]
  43beef:	add    esi,edx
  43bef1:	fstp   TBYTE PTR [ebx]
  43bef3:	add    esi,eax
  43bef5:	fild   DWORD PTR [ebx]
  43bef7:	add    esi,eax
  43bef9:	fcomi  st,st(7)
  43befb:	add    BYTE PTR [esi-0x69ff0425],dl
  43bf01:	fucomi st,st(7)
  43bf03:	add    BYTE PTR [esi-0x79ff0c25],al
  43bf09:	(bad)  
  43bf0b:	add    BYTE PTR [esi-0x69ff1425],dl
  43bf11:	fcmovnu st,st(7)
  43bf13:	add    BYTE PTR [eax],al
  43bf15:	add    BYTE PTR [esi-0x79ff1c25],al
  43bf1b:	fcmovnbe st,st(7)
  43bf1d:	add    BYTE PTR [esi-0x25],dl
  43bf20:	fild   DWORD PTR [eax]
  43bf22:	push   esi
  43bf23:	fcmovne st,st(7)
  43bf25:	add    BYTE PTR [esi-0x25],al
  43bf28:	rol    DWORD PTR [eax],cl
  43bf2a:	inc    esi
  43bf2b:	fcmovnb st,st(6)
  43bf2d:	add    BYTE PTR [esi-0x25],dl
  43bf30:	retf   
  43bf31:	add    BYTE PTR [esi-0x25],dl
  43bf34:	mov    edi,0xc3db4600
  43bf39:	add    BYTE PTR [esi-0x25],al
  43bf3c:	mov    bh,0x0
  43bf3e:	push   ss
  43bf3f:	fstp   TBYTE PTR [ebx-0x5024ea00]
  43bf45:	add    BYTE PTR [esi],al
  43bf47:	(bad)  [ebx-0x5824fa00]
  43bf4d:	add    BYTE PTR [edi],ch
  43bf4f:	add    eax,0x52fab04
  43bf54:	add    al,0xa7
  43bf56:	das    
  43bf57:	add    eax,0x52fa304
  43bf5c:	add    al,0x5a
  43bf5e:	call   0x6accf1fc
  43bf63:	and    al,0xca
  43bf65:	inc    edx
  43bf66:	or     eax,0x2d42cb05
  43bf6b:	in     eax,0xfc
  43bf6d:	jmp    FWORD PTR [edi]
  43bf6f:	dec    eax
  43bf70:	dec    ecx
  43bf71:	add    cl,BYTE PTR [edi]
  43bf73:	add    eax,0xa1ac0004
  43bf78:	das    
  43bf79:	inc    eax
  43bf7a:	add    BYTE PTR [eax],al
  43bf7c:	cmp    al,BYTE PTR [eax]
  43bf7e:	retf   
  43bf7f:	inc    edx
  43bf80:	xor    ebp,eax
  43bf82:	cld    
  43bf83:	jmp    FWORD PTR [edi]
  43bf85:	jl     0x43bfcf
  43bf87:	sbb    eax,0x8b0bb728
  43bf8c:	sub    eax,DWORD PTR [edi+0x44acfffe]
  43bf92:	add    cl,bh
  43bf94:	pop    edi
  43bf95:	cmp    ebx,0xfffffff8
  43bf98:	add    eax,DWORD PTR [edi]
  43bf9a:	xchg   DWORD PTR [edx+0x4c],eax
  43bf9d:	sub    al,0x49
  43bf9f:	sub    DWORD PTR [ecx],ecx
  43bfa1:	jmp    0x43bff8
  43bfa3:	jge    0x43c010
  43bfa5:	pop    ds
  43bfa6:	popa   
  43bfa7:	mov    esi,0x42cb0527
  43bfac:	xor    eax,0x2f000405
  43bfb1:	jl     0x43bffb
  43bfb3:	sbb    eax,0xff446f30
  43bfb8:	adc    ecx,eax
  43bfba:	add    eax,DWORD PTR [eax]
  43bfbc:	das    
  43bfbd:	pop    esi
  43bfbe:	inc    esp
  43bfbf:	add    BYTE PTR [edi],ch
  43bfc1:	pop    es
  43bfc2:	sub    eax,0x84d718ce
  43bfc7:	inc    edx
  43bfc8:	and    eax,0x11fb6ade
  43bfcd:	mov    ebx,ebp
  43bfcf:	xchg   BYTE PTR [ebp-0x8],ch
  43bfd2:	call   0x8d24b85d
  43bfd7:	pop    es
  43bfd8:	jp     0x43bf75
  43bfda:	jecxz  0x43bfe3
  43bfdc:	test   al,0xab
  43bfde:	out    0xc4,eax
  43bfe0:	add    BYTE PTR [eax],al
  43bfe2:	or     ah,bl
  43bfe4:	call   0xda21eddc
  43bfe9:	add    ebp,DWORD PTR [edi]
  43bfeb:	arpl   si,sp
  43bfed:	xchg   ebx,eax
  43bfee:	rcl    DWORD PTR ds:0x152cc46b,cl
  43bff4:	mov    edx,0xa9babc5
  43bff9:	adc    DWORD PTR [ebp-0x62],edi
  43bffc:	call   0xa91a9085
  43c001:	in     al,dx
  43c002:	stos   DWORD PTR es:[edi],eax
  43c003:	and    ax,0xe21a
  43c007:	and    DWORD PTR [ebx+0x7f],ebp
  43c00a:	sub    eax,0x12231dbe
  43c00f:	fwait
  43c010:	add    eax,DWORD PTR [ebx]
  43c012:	mov    dl,0x9b
  43c014:	retf   0xbd10
  43c017:	sahf   
  43c018:	jmp    0x43bf9e
  43c01a:	pop    eax
  43c01b:	fnsave [eax+0x47]
  43c01e:	and    DWORD PTR [ecx-0xb],esp
  43c021:	adc    eax,0x84e38b2c
  43c026:	in     eax,0xe7
  43c028:	jmp    0xa5a4f3a3
  43c02d:	sbb    eax,0x7f6b212b
  43c032:	sub    eax,0xc207cdbe
  43c037:	call   0x9bd:0x617a07f3
  43c03e:	pop    ds
  43c03f:	mov    ebx,ebp
  43c041:	test   BYTE PTR [ebp-0x8],ch
  43c044:	add    bl,ch
  43c046:	add    BYTE PTR [eax],al
  43c048:	jmp    0x43c046
  43c04a:	bound  ebp,QWORD PTR [esi]
  43c04c:	cs pop ss
  43c04e:	mov    WORD PTR [edx+esi*1-0x4c35c2eb],gs
  43c055:	lahf   
  43c056:	and    ebp,ebx
  43c058:	jmp    0x43c06f
  43c05a:	ds retf 0x91f3
  43c05e:	cmp    eax,0x84532aca
  43c063:	jl     0x43c097
  43c065:	out    dx,al
  43c066:	ins    DWORD PTR es:[edi],dx
  43c067:	out    dx,eax
  43c068:	aam    0x38
  43c06a:	clc    
  43c06b:	out    dx,al
  43c06c:	das    
  43c06d:	push   ebx
  43c06e:	jmp    0x121e9a0
  43c073:	stos   BYTE PTR es:[edi],al
  43c074:	mov    bl,0x97
  43c076:	add    bh,cl
  43c078:	cmp    ebp,ebx
  43c07a:	call   0xf85af022
  43c07f:	(bad)  
  43c080:	imul   esi,ebx,0x145fd1c3
  43c086:	clc    
  43c087:	jmp    0xfab951f7
  43c08c:	in     al,dx
  43c08d:	nop
  43c08e:	(bad)  
  43c08f:	nop
  43c090:	dec    ebx
  43c091:	adc    al,0xf8
  43c093:	jmp    0xca81d60b
  43c098:	imul   edx,DWORD PTR [ecx-0x6db3148b],0xfffffffd
  43c09f:	imul   ebp,ecx,0xb3a9fdf2
  43c0a5:	lahf   
  43c0a6:	and    ebp,edx
  43c0a8:	imul   edx,DWORD PTR [ecx+0xeb75],0xffffffec
  43c0af:	nop
  43c0b0:	std    
  43c0b1:	imul   ebp,ecx,0xb32a09f2
  43c0b7:	xchg   edi,eax
  43c0b8:	add    cl,BYTE PTR [ecx]
  43c0ba:	mov    eax,0x13a483e0
  43c0bf:	loope  0x43c084
  43c0c1:	add    ch,al
  43c0c3:	fwait
  43c0c4:	adc    eax,0x78075503
  43c0c9:	call   FWORD PTR [ecx-0x22]
  43c0cc:	stc    
  43c0cd:	inc    ebp
  43c0ce:	and    eax,0xf57d7519
  43c0d3:	lahf   
  43c0d4:	jae    0x43c0f8
  43c0d6:	push   ecx
  43c0d7:	pushf  
  43c0d8:	idiv   BYTE PTR [edi]
  43c0da:	push   ss
  43c0db:	loopne 0x43c0dd
  43c0dd:	call   ebx
  43c0df:	mov    edx,0xeee5457d
  43c0e4:	mov    dl,0x8
  43c0e6:	pop    ebx
  43c0e7:	fisttp DWORD PTR [edx-0x47a529fd]
  43c0ed:	add    al,0xc9
  43c0ef:	xor    cl,al
  43c0f1:	inc    ebp
  43c0f2:	les    edi,FWORD PTR [edi+0x20d60000]
  43c0f8:	stc    
  43c0f9:	inc    ebp
  43c0fa:	xor    eax,0x157d751f
  43c0ff:	call   0xfe15:0xa5e92373
  43c106:	push   ebx
  43c107:	rol    BYTE PTR [eax+0x73e3347d],0x6
  43c10e:	outs   dx,BYTE PTR ds:[esi]
  43c10f:	cmp    esi,edi
  43c111:	inc    DWORD PTR [eax]
  43c113:	add    BYTE PTR [esi+0x75457d20],al
  43c119:	in     al,0xb2
  43c11b:	or     BYTE PTR [ebx],cl
  43c11d:	out    0x8a,al
  43c11f:	add    eax,DWORD PTR [esi-0x56fb47a0]
  43c125:	sub    dh,BYTE PTR [ebp-0x840ec7d]
  43c12b:	ret    0xa4d9
  43c12e:	adc    eax,0x80c013fe
  43c133:	jge    0x43c159
  43c135:	jecxz  0x43c1aa
  43c137:	push   es
  43c138:	ficom  WORD PTR [edx+0x52ffff7]
  43c13e:	ret    
  43c13f:	test   dl,dh
  43c141:	out    0x7,eax
  43c143:	mov    dl,0x27
  43c145:	mov    cl,BYTE PTR [eax]
  43c147:	mov    ch,BYTE PTR [eax*1-0x33d4407d]
  43c14e:	int3   
  43c14f:	mov    esp,0x200241ac
  43c154:	xchg   ebx,eax
  43c155:	paddsb mm6,mm3
  43c158:	or     esp,esi
  43c15a:	idiv   DWORD PTR [edx+ebp*2+0x28]
  43c15e:	add    BYTE PTR [ebp-0x70920f9],bh
  43c164:	lock xchg DWORD PTR [ecx+0x1d],ecx
  43c168:	sub    eax,0x1c7a83c8
  43c16d:	inc    ebp
  43c16e:	jns    0x43c172
  43c170:	(bad)  
  43c171:	cmp    al,0xfd
  43c173:	jmp    FWORD PTR [edi]
  43c175:	dec    eax
  43c176:	add    DWORD PTR [edx+0x0],0x0
  43c17a:	or     al,0x7
  43c17c:	ret    
  43c17d:	jl     0x43c1e9
  43c17f:	call   0xb9f07e8c
  43c184:	and    eax,DWORD PTR [ebx]
  43c186:	in     al,dx
  43c187:	xchg   DWORD PTR [eax-0x13610d3],eax
  43c18d:	out    0x52,eax
  43c18f:	push   es
  43c190:	add    al,0x0
  43c192:	ins    BYTE PTR es:[edi],dx
  43c193:	sbb    al,0xb5
  43c195:	stc    
  43c196:	nop
  43c197:	cmp    eax,ebx
  43c199:	out    0x25,eax
  43c19b:	jae    0x43c194
  43c19d:	clc    
  43c19e:	lods   al,BYTE PTR ds:[esi]
  43c19f:	jmp    0xfb47beae
  43c1a4:	jmp    0x43c14d
  43c1a6:	jno    0x43c203
  43c1a8:	idiv   DWORD PTR [edi+edx*2+0x2ffffd34]
  43c1af:	dec    eax
  43c1b0:	add    DWORD PTR [edx+0xc],0x8
  43c1b4:	ret    
  43c1b5:	jl     0x43c189
  43c1b7:	fucom  st(7)
  43c1b9:	inc    ebx
  43c1ba:	mov    esp,0x22486ad8
  43c1bf:	in     eax,0x2a
  43c1c1:	sub    ch,0xbe
  43c1c4:	fadd   st(2),st
  43c1c6:	mov    bl,0x90
  43c1c8:	out    0x13,eax
  43c1ca:	pushf  
  43c1cb:	fld    TBYTE PTR [edx+0x48]
  43c1ce:	inc    edx
  43c1cf:	(bad)  [edx]
  43c1d1:	adc    BYTE PTR [ebp+0x2c7909d8],0x5d
  43c1d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c1d9:	and    ch,BYTE PTR [ebx*1+0x486b]
  43c1e0:	and    ah,bh
  43c1e2:	sub    al,BYTE PTR [ebx+0x78e8de75]
  43c1e8:	sub    eax,0xe7fd8806
  43c1ed:	adc    DWORD PTR [ebx],ebp
  43c1ef:	jmp    0x43c1e7
  43c1f1:	fsubp  st(1),st
  43c1f3:	add    ebx,DWORD PTR [edx-0x2ffc9aa2]
  43c1f9:	mov    ah,bh
  43c1fb:	jmp    0x43c259
  43c1fd:	adc    bh,dl
  43c1ff:	std    
  43c200:	sbb    DWORD PTR [esi+0x4d],0x3
  43c204:	mov    eax,0x68ebdf8a
  43c209:	adc    BYTE PTR [edi+0x355debfd],bh
  43c20f:	add    bh,BYTE PTR [edi]
  43c211:	mov    esp,edi
  43c213:	jmp    0x43c269
  43c215:	adc    BYTE PTR [edi+0x4606d3fd],ah
  43c21b:	add    al,0x2f
  43c21d:	fisubr WORD PTR [edx+0x29cd0581]
  43c223:	ja     0x43c252
  43c225:	push   es
  43c226:	jb     0x43c22c
  43c228:	das    
  43c229:	fisubr WORD PTR [edx-0x36241a7f]
  43c22f:	jbe    0x43c25d
  43c231:	pop    ebp
  43c232:	add    DWORD PTR [esi+ecx*1],ebp
  43c235:	ffreep st(3)
  43c237:	push   0xffffffe8
  43c239:	repnz std 
  43c23b:	sub    DWORD PTR [esi-0x6e],ebp
  43c23e:	jne    0x43c22b
  43c240:	sbb    al,0x8a
  43c242:	adc    BYTE PTR [ecx+0x0],al
  43c245:	add    BYTE PTR [edi-0x59b107ec],dh
  43c24b:	pushf  
  43c24c:	sbb    ch,al
  43c24e:	jno    0x43c243
  43c250:	and    DWORD PTR [edi+ecx*2-0x78be3c24],0x15
  43c258:	clc    
  43c259:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  43c25b:	fwait
  43c25c:	sbb    ch,al
  43c25e:	jno    0x43c253
  43c260:	and    DWORD PTR [edi+ecx*2+0x786ac3da],0xffffffc3
  43c268:	inc    eax
  43c269:	xchg   esp,eax
  43c26a:	sub    al,BYTE PTR [esi]
  43c26c:	dec    esi
  43c26d:	jmp    0x6b07a09e
  43c272:	pusha  
  43c273:	adc    BYTE PTR [eax],bl
  43c275:	jl     0x43c2a8
  43c277:	xchg   ebx,eax
  43c278:	cmp    eax,0x84532bca
  43c27d:	sub    al,0xe
  43c27f:	ffree  st(3)
  43c281:	shr    DWORD PTR [ebp-0x502907ed],1
  43c287:	xchg   ebx,eax
  43c288:	push   cs
  43c289:	jmp    0xb02c9ec7
  43c28e:	test   eax,0x94aaf815
  43c293:	mov    BYTE PTR [eax],0xe9
  43c296:	sub    al,0x53
  43c298:	test   BYTE PTR [esi+ebx*2],ch
  43c29b:	sahf   
  43c29c:	ins    DWORD PTR es:[edi],dx
  43c29d:	in     al,dx
  43c29e:	scas   eax,DWORD PTR es:[edi]
  43c29f:	fwait
  43c2a0:	and    esp,esp
  43c2a2:	outs   dx,DWORD PTR ds:[esi]
  43c2a3:	xchg   ecx,eax
  43c2a4:	jne    0x43c291
  43c2a6:	dec    esp
  43c2a7:	(bad)  
  43c2a8:	std    
  43c2a9:	imul   eax,DWORD PTR [eax],0xfdf2e900
  43c2af:	call   DWORD PTR [ebp+0x5523435d]
  43c2b5:	sbb    eax,0xdb467d78
  43c2ba:	jae    0x43c2c2
  43c2bc:	scas   al,BYTE PTR es:[edi]
  43c2bd:	jae    0x43c2ba
  43c2bf:	call   ecx
  43c2c1:	sbb    eax,0xdc5601e0
  43c2c6:	add    bl,al
  43c2c8:	sahf   
  43c2c9:	adc    ecx,edi
  43c2cb:	jmp    ecx
  43c2cd:	sbb    eax,0x9c257d75
  43c2d2:	jae    0x43c2da
  43c2d4:	jle    0x43c2d8
  43c2d6:	stc    
  43c2d7:	jmp    DWORD PTR [ecx+0x1e]
  43c2da:	loopne 0x43c357
  43c2dc:	inc    ebx
  43c2dd:	adc    bh,cl
  43c2df:	sbb    ebx,0xffffffbe
  43c2e2:	test   edx,0x1ff69095
  43c2e8:	mov    ds:0x236be8e5,al
  43c2ed:	adc    bh,cl
  43c2ef:	sbb    DWORD PTR [ebx+0x3ec2fcbe],0x7c
  43c2f6:	sti    
  43c2f7:	jmp    ecx
  43c2f9:	pop    DWORD PTR [edx+0x23]
  43c2fc:	les    ebx,FWORD PTR [esi]
  43c2fe:	loopne 0x43c2be
  43c300:	rcl    BYTE PTR [ebx],cl
  43c302:	stc    
  43c303:	call   0x3cd9dc
  43c308:	inc    ebp
  43c309:	xchg   ebp,eax
  43c30a:	adc    al,BYTE PTR [eax]
  43c30c:	pop    ebx
  43c30d:	fistp  QWORD PTR [ebp+0x45]
  43c310:	add    BYTE PTR [eax],al
  43c312:	mov    edx,ds
  43c314:	inc    ebx
  43c315:	and    edx,DWORD PTR ds:0xc503159d
  43c31b:	push   edi
  43c31c:	jnp    0x43c334
  43c31e:	xchg   DWORD PTR [esi+0x12fae802],ecx
  43c324:	stc    
  43c325:	call   ebp
  43c327:	pop    edi
  43c328:	inc    ebx
  43c329:	sbb    ch,BYTE PTR [edi]
  43c32b:	push   es
  43c32c:	inc    ecx
  43c32d:	sbb    eax,0xfe1fbaac
  43c332:	ins    DWORD PTR es:[edi],dx
  43c333:	test   BYTE PTR [ecx-0x2],bh
  43c336:	inc    eax
  43c337:	adc    DWORD PTR [esi],ebp
  43c339:	call   0xf93f4cef
  43c33e:	inc    edi
  43c33f:	cmp    edi,ecx
  43c341:	clc    
  43c342:	dec    eax
  43c343:	test   BYTE PTR [ecx+0x12],bh
  43c346:	das    
  43c347:	sub    al,BYTE PTR [edi]
  43c349:	test   edx,esi
  43c34b:	or     bh,ch
  43c34d:	inc    edx
  43c34e:	or     al,0x84
  43c350:	inc    ecx
  43c351:	sbb    eax,0x7a7fc431
  43c356:	cmp    DWORD PTR [esi],eax
  43c358:	jno    0x43c35c
  43c35a:	pop    es
  43c35b:	sbb    ebx,edi
  43c35d:	clc    
  43c35e:	adc    ah,al
  43c360:	xchg   DWORD PTR [edx+0x25],eax
  43c363:	push   es
  43c364:	inc    ecx
  43c365:	sbb    eax,0xfe1f39ac
  43c36a:	in     eax,dx
  43c36b:	fcom   QWORD PTR [eax-0x4]
  43c36e:	lock (bad) 
  43c371:	xchg   edi,eax
  43c372:	jmp    0x43c34b
  43c374:	sti    
  43c375:	jl     0x43c377
  43c377:	add    BYTE PTR [edx+0x27],ah
  43c37a:	add    al,0x73
  43c37c:	and    al,0x7c
  43c37e:	inc    ecx
  43c37f:	push   ss
  43c380:	cmp    bl,BYTE PTR cs:[edi]
  43c383:	jge    0x43c3f7
  43c385:	in     al,0x0
  43c387:	mov    ebp,0xff12b1ac
  43c38c:	inc    ebx
  43c38d:	(bad)  
  43c38e:	jmp    0x43c3c5
  43c390:	mov    al,0x1f
  43c392:	sti    
  43c393:	mov    esp,0xff16c1b4
  43c398:	jmp    0x43c37d
  43c39a:	jg     0x43c3de
  43c39c:	dec    esp
  43c39d:	add    edi,DWORD PTR [edi-0x4beb219]
  43c3a3:	clc    
  43c3a4:	xchg   edi,eax
  43c3a5:	fld    QWORD PTR [edi]
  43c3a7:	clc    
  43c3a8:	xchg   DWORD PTR [esi],ecx
  43c3aa:	imul   edi,DWORD PTR [eax+0x1d],0xffffffdd
  43c3ae:	lar    eax,WORD PTR [edi+0x67fa86f4]
  43c3b5:	sbb    dh,BYTE PTR [ebx+0x40]
  43c3b8:	cmp    ebp,ebx
  43c3ba:	sbb    al,0x27
  43c3bc:	ficomp DWORD PTR [eax+0x59205ca]
  43c3c2:	and    al,0xf8
  43c3c4:	inc    edi
  43c3c5:	push   cs
  43c3c6:	imul   edi,DWORD PTR [eax+0x1d],0xffffffd8
  43c3ca:	xlat   BYTE PTR ds:[ebx]
  43c3cb:	add    DWORD PTR [edi+0x10],eax
  43c3ce:	push   eax
  43c3cf:	cli    
  43c3d0:	aaa    
  43c3d1:	sbb    al,BYTE PTR [edx-0xd]
  43c3d4:	and    ecx,DWORD PTR [esi]
  43c3d6:	aas    
  43c3d7:	mov    gs,WORD PTR [ebp-0x18]
  43c3da:	call   0x3a43c41f
  43c3df:	popa   
  43c3e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c3e1:	adc    DWORD PTR es:[ecx],esp
  43c3e4:	inc    edx
  43c3e5:	jecxz  0x43c3ea
  43c3e7:	push   cs
  43c3e8:	pop    ds
  43c3e9:	jmp    0x43c437
  43c3eb:	or     dl,BYTE PTR [edi]
  43c3ed:	cli    
  43c3ee:	jnp    0x43c37b
  43c3f0:	test   DWORD PTR [eax],0xd201e475
  43c3f6:	out    0xd,al
  43c3f8:	inc    ebp
  43c3fa:	stos   DWORD PTR es:[edi],eax
  43c3fb:	mov    ds:0xc16c04e3,eax
  43c400:	push   0x40
  43c402:	xor    ah,al
  43c404:	sub    ch,bl
  43c406:	xchg   DWORD PTR [ecx],ecx
  43c408:	(bad)  
  43c40a:	enter  0xd5e1,0xf9
  43c40e:	mov    bh,0x61
  43c410:	dec    ebp
  43c411:	adc    ch,BYTE PTR [edi]
  43c413:	xchg   ebx,eax
  43c414:	repz test BYTE PTR ds:0xac08ead8,ah
  43c41b:	cmp    ch,dl
  43c41d:	add    ebp,DWORD PTR [edi]
  43c41f:	popa   
  43c420:	add    DWORD PTR [eiz*1-0x2ea0f81e],esi
  43c427:	or     eax,0x6b94e9f8
  43c42c:	neg    DWORD PTR [esi+0x14844a76]
  43c432:	sbb    eax,0xb3f36d0d
  43c437:	mov    BYTE PTR [edx],cl
  43c439:	jmp    0xde2c:0xe9856137
  43c440:	xor    esp,0x0
  43c443:	add    BYTE PTR [esi],ah
  43c445:	or     eax,0xdb15f07
  43c44a:	clc    
  43c44b:	jmp    0x5f3a4fa4
  43c450:	ss dec edx
  43c452:	test   ah,dl
  43c454:	push   ds
  43c455:	or     al,0x6d
  43c457:	stc    
  43c458:	mov    bl,0x87
  43c45a:	or     ch,dl
  43c45c:	aaa    
  43c45d:	popa   
  43c45e:	gs jmp 0xc62ca290
  43c464:	push   ss
  43c465:	push   es
  43c466:	clc    
  43c467:	sub    dh,BYTE PTR [edx-0x6e15f179]
  43c46d:	fiadd  DWORD PTR [ebx+0x6d0b2a9c]
  43c473:	mov    bl,0x4
  43c475:	mov    bl,0xf6
  43c477:	push   cs
  43c478:	out    0x49,al
  43c47a:	test   BYTE PTR [esi+edi*1-0x4c12921e],al
  43c481:	xchg   DWORD PTR [edx],ecx
  43c483:	jmp    0x5c6:0xa1e89641
  43c48a:	clc    
  43c48b:	stos   BYTE PTR es:[edi],al
  43c48c:	stos   DWORD PTR es:[edi],eax
  43c48d:	xchg   DWORD PTR [esi],ecx
  43c48f:	in     al,0x49
  43c491:	loopne 0x43c47b
  43c493:	adc    eax,0xaaf805b5
  43c498:	mov    bl,0x87
  43c49a:	push   cs
  43c49b:	add    BYTE PTR [eax+0x5b83047b],dl
  43c4a1:	fdivr  st(5),st
  43c4a3:	je     0x43c4d1
  43c4a5:	cli    
  43c4a6:	sbb    eax,0xd90000fe
  43c4ab:	add    eax,0xf04b83b5
  43c4b0:	add    DWORD PTR [ebp+0x78],esi
  43c4b3:	popa   
  43c4b4:	jnp    0x43c4c0
  43c4b6:	test   DWORD PTR [ebx+0x18],edi
  43c4b9:	cmp    DWORD PTR [ebx],0xffffffd3
  43c4bc:	inc    eax
  43c4bd:	jne    0x43c519
  43c4bf:	popa   
  43c4c0:	jnp    0x43c4d0
  43c4c2:	inc    esi
  43c4c3:	jl     0x43c4c9
  43c4c5:	call   0x3ccb14
  43c4ca:	xchg   ebp,eax
  43c4cb:	clc    
  43c4cc:	add    esi,edi
  43c4ce:	leave  
  43c4cf:	add    eax,0xea938bb5
  43c4d4:	test   DWORD PTR [ebp+eiz*1+0x63],0x23142343
  43c4dc:	loopne 0x43c4cc
  43c4de:	ins    BYTE PTR es:[edi],dx
  43c4df:	push   es
  43c4e0:	stc    
  43c4e1:	call   0x3ccffa
  43c4e6:	test   DWORD PTR [edx+edx*1-0x172224fc],edx
  43c4ed:	in     eax,0x4b
  43c4ef:	push   es
  43c4f0:	stc    
  43c4f1:	ret    
  43c4f2:	jge    0x43c4c0
  43c4f4:	push   cs
  43c4f5:	add    ebx,eax
  43c4f7:	ret    0x4575
  43c4fa:	cmc    
  43c4fb:	loop   0x43c4b2
  43c4fd:	call   0x3cce1d
  43c502:	ds lock in eax,dx
  43c505:	(bad)  
  43c506:	fstp   DWORD PTR [edi+0x7b]
  43c509:	push   ss
  43c50a:	(bad)  
  43c50b:	jl     0x43c50f
  43c50d:	call   0x5d5c512
  43c512:	stc    
  43c513:	inc    DWORD PTR [ebp+0x2f167b5f]
  43c519:	div    DWORD PTR [eax+0x2]
  43c51c:	xchg   edi,eax
  43c51d:	ins    DWORD PTR es:[edi],dx
  43c51e:	cli    
  43c51f:	clc    
  43c520:	mov    al,ds:0x417a8438
  43c525:	clc    
  43c526:	jo     0x43c52a
  43c528:	xchg   DWORD PTR [ecx-0x6],esp
  43c52b:	clc    
  43c52c:	mov    BYTE PTR [eax],bh
  43c52e:	test   BYTE PTR [edx+0x19],bh
  43c531:	stc    
  43c532:	jo     0x43c536
  43c534:	xchg   DWORD PTR [ebp+0x3870f8f9],edx
  43c53a:	test   BYTE PTR [edx+0x41],bh
  43c53d:	add    dh,BYTE PTR [ecx+0x2]
  43c540:	push   edi
  43c541:	test   eax,0x3858f8f9
  43c546:	test   BYTE PTR [edx+0x39],bh
  43c549:	cld    
  43c54a:	ins    DWORD PTR es:[edi],dx
  43c54b:	add    dl,BYTE PTR [edi+0x7d]
  43c54e:	stc    
  43c54f:	clc    
  43c550:	inc    eax
  43c551:	mov    eax,0xf615428b
  43c556:	inc    eax
  43c557:	sbb    eax,0xfe233aac
  43c55c:	in     eax,dx
  43c55d:	pushf  
  43c55e:	mov    ch,0xf5
  43c560:	and    BYTE PTR [ebx+eax*4+0x70f5417a],ah
  43c567:	add    al,BYTE PTR [edi]
  43c569:	and    ecx,edi
  43c56b:	clc    
  43c56c:	or     BYTE PTR [eax-0x9e6857d],bh
  43c572:	jo     0x43c576
  43c574:	add    BYTE PTR [eax],al
  43c576:	pop    es
  43c577:	push   ebp
  43c578:	stc    
  43c579:	clc    
  43c57a:	lock mov bh,0x83
  43c57d:	jp     0x43c5c0
  43c57f:	div    DWORD PTR [eax+0xf]
  43c582:	xlat   BYTE PTR ds:[ebx]
  43c583:	push   ecx
  43c584:	cli    
  43c585:	clc    
  43c586:	fdiv   DWORD PTR [edi+0x79]
  43c589:	push   es
  43c58a:	sub    al,0x89
  43c58c:	push   ecx
  43c58d:	call   0xf932c008
  43c592:	in     al,dx
  43c593:	(bad)  [edx+0x78]
  43c596:	sbb    eax,0xc8fe4cdf
  43c59b:	enter  0xf6cc,0xa7
  43c59f:	push   ds
  43c5a0:	imul   edi,DWORD PTR [eax+0x3d],0xffffffe2
  43c5a4:	xor    al,0x15
  43c5a6:	xchg   DWORD PTR [edi+0x5e97f6c3],esi
  43c5ac:	sub    eax,0xf68e8a0a
  43c5b1:	jmp    0x43c601
  43c5b3:	or     DWORD PTR [edi+0x155ebbf6],ebx
  43c5b9:	push   cs
  43c5ba:	sub    al,0x91
  43c5bc:	out    0xeb,eax
  43c5be:	inc    edx
  43c5bf:	or     DWORD PTR [edi-0x2a15c0a],eax
  43c5c5:	or     eax,0xebd8912d
  43c5ca:	das    
  43c5cb:	or     BYTE PTR [edi-0xa],ch
  43c5ce:	retf   
  43c5cf:	mov    bl,ah
  43c5d1:	add    bh,BYTE PTR [ebx+0x340251d9]
  43c5d7:	or     dl,BYTE PTR [edi-0x3e]
  43c5da:	add    BYTE PTR [eax],al
  43c5dc:	dec    eax
  43c5dd:	or     BYTE PTR [esi-0xa],cl
  43c5e0:	daa    
  43c5e1:	push   ds
  43c5e2:	arpl   WORD PTR [eax+0x39],ax
  43c5e5:	fbld   TBYTE PTR [edx+eiz*1+0x30aa39a]
  43c5ec:	shl    dh,cl
  43c5ee:	(bad)  
  43c5ef:	stc    
  43c5f0:	pop    es
  43c5f1:	or     ch,BYTE PTR [ebx+0x78]
  43c5f4:	sbb    eax,0x10fd94de
  43c5f9:	add    BYTE PTR [esi],dl
  43c5fb:	div    bh
  43c5fd:	sbb    eax,0xdf3d786b
  43c602:	mov    ebp,?
  43c604:	enter  0xfe33,0xf5
  43c608:	xlat   BYTE PTR ds:[ebx]
  43c609:	sbb    eax,0xdc3d786b
  43c60e:	add    BYTE PTR [ebx+eiz*1-0xa],bh
  43c612:	ret    0xbaf0
  43c615:	push   es
  43c616:	test   BYTE PTR [ebp+eiz*1+0xb],ah
  43c61a:	je     0x43c657
  43c61c:	ret    
  43c61d:	inc    edi
  43c61e:	cmc    
  43c61f:	(bad)  
  43c620:	mov    ds:0x314c844a,al
  43c625:	or     ebp,DWORD PTR [ebp-0x11]
  43c628:	test   BYTE PTR [ebx],bh
  43c62a:	cmc    
  43c62b:	mov    esi,0x34844a9a
  43c630:	cmp    edx,esp
  43c632:	ins    DWORD PTR es:[edi],dx
  43c633:	fcom   DWORD PTR [esi+eiz*2-0x757d5906]
  43c63a:	jne    0x43c62f
  43c63c:	das    
  43c63d:	xchg   edx,eax
  43c63e:	daa    
  43c63f:	add    DWORD PTR [eax],0xf805c600
  43c645:	mov    gs,WORD PTR [esi-0x76]
  43c648:	jne    0x43c629
  43c64a:	pop    ecx
  43c64b:	mov    esi,?
  43c64d:	nop
  43c64e:	stos   BYTE PTR es:[edi],al
  43c64f:	add    eax,0x8a6e76f8
  43c654:	jne    0x43c62d
  43c656:	inc    edx
  43c657:	mov    WORD PTR [ecx],ss
  43c659:	push   ecx
  43c65a:	mov    bh,0x10
  43c65c:	clc    
  43c65d:	pop    esi
  43c65e:	scas   al,BYTE PTR es:[edi]
  43c65f:	test   BYTE PTR [edx],cl
  43c661:	jmp    0x618:0xd1e8da98
  43c668:	clc    
  43c669:	sub    cl,BYTE PTR [ebx]
  43c66b:	jnp    0x43c661
  43c66d:	sbb    cl,BYTE PTR ds:[edx-0x74]
  43c671:	lods   al,BYTE PTR ds:[esi]
  43c672:	or     DWORD PTR es:0x239bae0a,edi
  43c679:	jmp    0x5fa:0x20a400ef
  43c680:	test   BYTE PTR [edx+edi*1-0x2b189222],dl
  43c687:	scas   al,BYTE PTR es:[edi]
  43c688:	hlt    
  43c689:	add    BYTE PTR [ecx],dh
  43c68b:	adc    esi,DWORD PTR [ebp-0x824ac7d]
  43c691:	je     0x43c66b
  43c693:	hlt    
  43c694:	cmp    eax,0xb511d1fc
  43c699:	adc    DWORD PTR [ebx-0x28],0xfffffff6
  43c69d:	je     0x43c65a
  43c69f:	hlt    
  43c6a0:	xor    cl,bh
  43c6a2:	adc    DWORD PTR [ecx],0x7d75
  43c6a8:	mov    ebp,ds
  43c6aa:	or     DWORD PTR [ebp+ebp*8+0x7e0000e1],eax
  43c6b1:	shl    esp,0xff
  43c6b4:	rcr    DWORD PTR ds:0xdd587d75,0x73
  43c6bb:	sbb    eax,0xff69005
  43c6c0:	sbb    ebp,ebp
  43c6c2:	call   0xf95585dd
  43c6c7:	xor    DWORD PTR [ebx],0xffffffd4
  43c6ca:	cmc    
  43c6cb:	jae    0x43c6dd
  43c6cd:	cli    
  43c6ce:	add    eax,0xb511d1fc
  43c6d3:	call   0x3cd72a
  43c6d8:	xchg   ebp,eax
  43c6d9:	pop    ebp
  43c6da:	jnp    0x43c6f2
  43c6dc:	dec    edx
  43c6dd:	ja     0x43c6e1
  43c6df:	call   0x3cd72a
  43c6e4:	push   ebp
  43c6e5:	pop    esi
  43c6e6:	jnp    0x43c6fe
  43c6e8:	or     edi,DWORD PTR [ecx+0x2]
  43c6eb:	call   0x3ccd4a
  43c6f0:	inc    ebp
  43c6f1:	pop    esi
  43c6f2:	jnp    0x43c70a
  43c6f4:	sbb    BYTE PTR [ecx+0x7],bh
  43c6f7:	call   0x3cca73
  43c6fc:	test   DWORD PTR [eax-0x4b65fd02],edx
  43c702:	call   0xed2ff6e4
  43c707:	clc    
  43c708:	in     al,dx
  43c709:	je     0x43c779
  43c70b:	adc    al,BYTE PTR [eax]
  43c70d:	add    BYTE PTR [eax],dh
  43c70f:	mov    al,BYTE PTR [edi*2+0x7313f352]
  43c716:	push   ds
  43c717:	fnsave [edi+0x77f8c0f7]
  43c71d:	jp     0x43c744
  43c71f:	hlt    
  43c720:	outs   dx,DWORD PTR ds:[esi]
  43c721:	or     al,0xc7
  43c723:	xor    eax,0x34a8f8e8
  43c728:	aad    0xb5
  43c72a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c72b:	sbb    ah,dh
  43c72d:	mov    esp,0xff06baa4
  43c732:	jmp    0x43c707
  43c734:	jg     0x43c778
  43c736:	dec    esp
  43c737:	hlt    
  43c738:	mov    esi,0xf44d94e7
  43c73d:	clc    
  43c73e:	lods   al,BYTE PTR ds:[esi]
  43c73f:	ret    0x1a
  43c742:	cli    
  43c743:	adc    esp,ebx
  43c745:	nop
  43c746:	addr16 jo 0x43c73d
  43c749:	jl     0x43c72d
  43c74b:	cli    
  43c74c:	dec    BYTE PTR [eax]
  43c74e:	mov    dl,0x95
  43c750:	cld    
  43c751:	jmp    FWORD PTR [edi]
  43c753:	ins    DWORD PTR es:[edi],dx
  43c754:	test   ah,dh
  43c756:	dec    eax
  43c757:	nop
  43c758:	mov    edi,0xfd2ec27c
  43c75d:	jb     0x43c781
  43c75f:	lods   eax,DWORD PTR ds:[esi]
  43c760:	jo     0x43c75a
  43c762:	xor    BYTE PTR [eax-0xbca8581],ch
  43c768:	add    al,BYTE PTR [ebx+0x3f4aa]
  43c76e:	pop    es
  43c76f:	dec    ecx
  43c770:	out    0xf8,eax
  43c772:	add    BYTE PTR [eax],al
  43c774:	adc    BYTE PTR [edi+edi*2+0x78f3217a],dh
  43c77b:	adc    edx,DWORD PTR [edi]
  43c77d:	push   ss
  43c77e:	in     al,dx
  43c77f:	clc    
  43c780:	clc    
  43c781:	(bad)  [edx+0x71]
  43c784:	sub    ebx,ebx
  43c786:	out    0x88,al
  43c788:	push   edx
  43c789:	fsubp  st(1),st
  43c78b:	add    edx,edi
  43c78d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c78e:	adc    dh,bl
  43c790:	xlat   BYTE PTR ds:[ebx]
  43c791:	sbb    ch,BYTE PTR [ebx+0x71]
  43c794:	cmp    eax,0xd7146cdb
  43c799:	lahf   
  43c79a:	icebp  
  43c79b:	repnz (bad) 
  43c79d:	pop    edx
  43c79e:	gs std 
  43c7a0:	mov    ebx,0xf2dc3a91
  43c7a5:	add    dl,bh
  43c7a7:	bnd jmp 0x43c804
  43c7aa:	dec    ebp
  43c7ab:	sbb    ch,BYTE PTR [ebx]
  43c7ad:	xchg   ecx,eax
  43c7ae:	(bad)  
  43c7b0:	pop    esi
  43c7b1:	add    edi,DWORD PTR [edi+0x355ad3f2]
  43c7b7:	sbb    ch,BYTE PTR [ecx+edx*4]
  43c7ba:	fcomp  st(3)
  43c7bc:	and    eax,DWORD PTR [esi]
  43c7be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c7bf:	repnz sti 
  43c7c1:	mov    bl,dh
  43c7c3:	push   es
  43c7c4:	cld    
  43c7c5:	int    0x91
  43c7c7:	adc    ah,BYTE PTR [edx+0x6]
  43c7ca:	pop    esi
  43c7cc:	jecxz  0x43c756
  43c7ce:	out    dx,eax
  43c7cf:	or     esp,ebx
  43c7d1:	in     al,dx
  43c7d2:	xchg   ecx,eax
  43c7d3:	call   FWORD PTR [eax+0x6]
  43c7d6:	ja     0x43c75e
  43c7d8:	add    BYTE PTR [eax],al
  43c7da:	(bad)
  43c7dd:	js     0x43c7f7
  43c7df:	mul    cl
  43c7e1:	out    dx,al
  43c7e2:	aaa    
  43c7e3:	push   es
  43c7e4:	sub    eax,DWORD PTR [esi+0x72deefb5]
  43c7ea:	not    BYTE PTR cs:[edx+edi*8+0x27]
  43c7ef:	push   es
  43c7f0:	inc    ebx
  43c7f1:	or     DWORD PTR [edi],eax
  43c7f3:	or     al,0x44
  43c7f5:	repnz pop ss
  43c7f7:	and    dh,BYTE PTR [ebx+0x48]
  43c7fa:	and    edi,ebx
  43c7fc:	add    BYTE PTR [ecx+ecx*2+0x310a3d83],ch
  43c803:	inc    ebx
  43c804:	jmp    0xf84accd8
  43c809:	push   0x5f
  43c80b:	lock add BYTE PTR [ebx+edi*1-0x22e92d0a],bl
  43c813:	push   es
  43c814:	test   BYTE PTR [edx+edx*8-0x1b6792fe],al
  43c81b:	pop    ss
  43c81c:	sti    
  43c81d:	idiv   BYTE PTR [esi+0x166c8442]
  43c823:	add    eax,0x4ad4f86d
  43c828:	lock ficomp WORD PTR [esi+0x2be37582]
  43c82f:	xchg   ecx,eax
  43c830:	cmp    al,cl
  43c832:	(bad)  
  43c833:	or     edi,eax
  43c835:	(bad)  
  43c836:	push   0xffffff82
  43c838:	jne    0x43c811
  43c83a:	xor    dl,BYTE PTR [ecx+0xc111]
  43c840:	xlat   BYTE PTR ds:[ebx]
  43c841:	push   cs
  43c842:	clc    
  43c843:	scas   al,BYTE PTR es:[edi]
  43c844:	mov    dl,0x88
  43c846:	or     ch,dl
  43c848:	stc    
  43c849:	loop   0x43c833
  43c84b:	dec    ecx
  43c84c:	pop    ecx
  43c84d:	push   es
  43c84e:	clc    
  43c84f:	stos   BYTE PTR es:[edi],al
  43c850:	stos   BYTE PTR es:[edi],al
  43c851:	mov    BYTE PTR [esi],cl
  43c853:	jmp    0x656:0x74e8d4e1
  43c85a:	clc    
  43c85b:	push   0xffffffd8
  43c85d:	fild   DWORD PTR [ebx]
  43c85f:	cld    
  43c860:	inc    eax
  43c861:	std    
  43c862:	mov    DWORD PTR [ebx+0x3e],esi
  43c865:	push   es
  43c866:	les    edx,FWORD PTR [ecx-0x56]
  43c869:	or     edi,eax
  43c86b:	pop    esi
  43c86c:	repnz pop ecx
  43c86e:	ds repz sub eax,0x706a23a1
  43c875:	jecxz  0x43c879
  43c877:	add    BYTE PTR [ebp+0xf],al
  43c87a:	inc    ebx
  43c87b:	and    edx,DWORD PTR [ecx-0x63]
  43c87e:	test   BYTE PTR [edi],0x16
  43c881:	loope  0x43c883
  43c883:	(bad)  
  43c884:	sar    DWORD PTR [edx-0x221b8280],cl
  43c88a:	jae    0x43c892
  43c88c:	ds scas eax,DWORD PTR es:[edi]
  43c88e:	out    dx,al
  43c88f:	(bad)  
  43c890:	cmp    DWORD PTR [ebx],ebx
  43c892:	jge    0x43c8d9
  43c894:	in     eax,0xdd
  43c896:	mov    dl,0x8
  43c898:	pop    ebx
  43c899:	(bad)  
  43c89a:	mov    al,BYTE PTR [ebx]
  43c89c:	(bad)  
  43c89d:	pop    ecx
  43c89e:	mov    eax,0xc130b904
  43c8a3:	inc    ebp
  43c8a4:	add    BYTE PTR [eax],al
  43c8a6:	(bad)  
  43c8a7:	rol    BYTE PTR [eax],0x0
  43c8aa:	(bad)  
  43c8ab:	sbb    ecx,edi
  43c8ad:	inc    ebp
  43c8ae:	xor    eax,0x16224310
  43c8b3:	je     0x43c8cb
  43c8b5:	lsl    ebx,ax
  43c8b8:	call   0xf95134f2
  43c8bd:	ret    
  43c8be:	std    
  43c8bf:	ret    
  43c8c0:	add    dl,cl
  43c8c2:	outs   dx,DWORD PTR ds:[esi]
  43c8c3:	xchg   DWORD PTR [edx+0x6],ebx
  43c8c6:	or     eax,0xd00f159c
  43c8cb:	or     BYTE PTR [ebx+0xd9d804],cl
  43c8d1:	adc    DWORD PTR [esi-0x322f0624],0xffffff93
  43c8d8:	add    dl,cl
  43c8da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c8db:	xchg   DWORD PTR [edx+0x6],ecx
  43c8de:	xchg   ebp,eax
  43c8df:	or     eax,0x9bb82343
  43c8e4:	push   ss
  43c8e5:	or     BYTE PTR [ebx-0x46],0x9
  43c8e9:	jne    0x43c92b
  43c8eb:	sub    dh,dh
  43c8ed:	stc    
  43c8ee:	mov    DWORD PTR [esi],ecx
  43c8f0:	mov    ch,0x8b
  43c8f2:	das    
  43c8f3:	xor    bl,BYTE PTR ds:0x27f5e109
  43c8f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c8fa:	fwait
  43c8fb:	daa    
  43c8fc:	sub    BYTE PTR [ecx-0x55d80c7d],ah
  43c902:	jnp    0x43c903
  43c904:	daa    
  43c905:	test   eax,0x927fb83
  43c90a:	add    BYTE PTR [eax],al
  43c90c:	jnp    0x43c905
  43c90e:	aam    0x3
  43c910:	icebp  
  43c911:	cmp    al,BYTE PTR [edi+edi*8]
  43c914:	mov    ch,0x32
  43c916:	sbb    eax,0x76fda109
  43c91b:	add    esp,DWORD PTR [ecx-0x1082fc08]
  43c921:	stc    
  43c922:	lock iret 
  43c924:	jmp    0xec43cd5b
  43c929:	hlt    
  43c92a:	cmp    eax,0x22b2b11d
  43c92f:	sub    BYTE PTR [edx],0xd7
  43c932:	div    DWORD PTR [edx+0x29]
  43c935:	sbb    eax,0x1498f6ac
  43c93a:	les    eax,FWORD PTR [edx+ebp*8+0x2fb1f7d7]
  43c941:	add    DWORD PTR [ebx+esi*2+0x73a00941],edx
  43c948:	xor    eax,0x3973a8f1
  43c94d:	stc    
  43c94e:	popf   
  43c94f:	jae    0x43c96e
  43c951:	and    DWORD PTR [edi-0x65d6ee8d],ebx
  43c957:	jae    0x43c95e
  43c959:	adc    DWORD PTR [ebx-0x67e6f68d],ebx
  43c95f:	jae    0x43c96e
  43c961:	inc    ecx
  43c962:	mov    eax,ds:0x96492173
  43c967:	jae    0x43c97e
  43c969:	xor    DWORD PTR [edi+0x1dde1973],edx
  43c96f:	pusha  
  43c970:	add    BYTE PTR [eax],al
  43c972:	mov    ds:0x9b6115f0,eax
  43c977:	aam    0xd
  43c979:	pop    esi
  43c97a:	mov    ds:0x9b5f05d8,eax
  43c97f:	fdiv   st(5),st
  43c981:	(bad)  
  43c982:	jl     0x43c964
  43c984:	push   edx
  43c985:	or     ch,ch
  43c987:	cwde   
  43c988:	call   0xadc7b91
  43c98d:	(bad)  
  43c98e:	mov    esi,0xb5086cd5
  43c993:	fsubp  st(1),st
  43c995:	and    BYTE PTR [eax-0x112bf127],0x98
  43c99c:	call   0xa5465ba4
  43c9a1:	and    al,ch
  43c9a3:	cwde   
  43c9a4:	retf   
  43c9a5:	add    DWORD PTR [ebp-0x40],0xffffffde
  43c9a9:	js     0x43c9d8
  43c9ab:	mul    BYTE PTR [ecx-0x54fd4814]
  43c9b1:	jp     0x43c9a0
  43c9b3:	mov    esi,0x5128b5e6
  43c9b8:	data16 jge 0x43c953
  43c9bb:	fsubp  st(1),st
  43c9bd:	add    edx,DWORD PTR [edx+0x2cc36b02]
  43c9c3:	add    ebx,DWORD PTR [edx+0xa9887c2]
  43c9c9:	out    dx,al
  43c9ca:	in     eax,dx
  43c9cb:	mov    edi,0xd3117069
  43c9d0:	adc    al,0x6
  43c9d2:	push   edi
  43c9d3:	mov    esp,0xeea0
  43c9d8:	addr16 push ds
  43c9da:	arpl   WORD PTR [eax+0x3a],cx
  43c9dd:	ror    DWORD PTR [edi-0x5],cl
  43c9e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c9e1:	pop    ecx
  43c9e2:	jo     0x43c9e7
  43c9e4:	aaa    
  43c9e5:	fsubp  st(1),st
  43c9e7:	add    ch,BYTE PTR [edi]
  43c9e9:	pop    edi
  43c9ea:	add    DWORD PTR [ecx-0x552efad0],ebp
  43c9f0:	inc    ecx
  43c9f1:	lahf   
  43c9f2:	and    esp,DWORD PTR [edi+0x77]
  43c9f5:	loopne 0x43c977
  43c9f7:	fmul   QWORD PTR [esi-0x29]
  43c9fa:	ins    DWORD PTR es:[edi],dx
  43c9fb:	out    dx,eax
  43c9fc:	hlt    
  43c9fd:	or     edi,ecx
  43c9ff:	dec    esi
  43ca00:	add    DWORD PTR [ebx-0x74],eax
  43ca03:	lods   al,BYTE PTR ds:[esi]
  43ca04:	dec    ebp
  43ca05:	xlat   BYTE PTR ds:[ebx]
  43ca06:	scas   al,BYTE PTR es:[edi]
  43ca07:	icebp  
  43ca08:	scas   eax,DWORD PTR es:[edi]
  43ca09:	pop    ebp
  43ca0a:	xchg   ecx,ebp
  43ca0c:	clc    
  43ca0d:	add    eax,edi
  43ca0f:	jmp    0x11d9:0xedc0832c
  43ca16:	les    esp,FWORD PTR [esi]
  43ca18:	ja     0x43ca02
  43ca1a:	add    cl,ch
  43ca1c:	sub    al,0xde
  43ca1e:	mov    esp,DWORD PTR [ebp+ecx*1+0x33a9aed7]
  43ca25:	lds    esi,FWORD PTR [edi+0x77de2ce9]
  43ca2b:	fcom   st(4)
  43ca2d:	aad    0xee
  43ca2f:	out    dx,al
  43ca30:	ret    0x7582
  43ca33:	push   DWORD PTR [ebx]
  43ca35:	test   dh,bh
  43ca37:	rcl    dl,1
  43ca39:	or     eax,edi
  43ca3b:	(bad)  
  43ca3c:	add    BYTE PTR [eax],al
  43ca3e:	outs   dx,BYTE PTR ds:[esi]
  43ca3f:	stc    
  43ca40:	mov    dl,0xd4
  43ca42:	add    BYTE PTR [esi],0x8c
  43ca45:	sub    al,0x35
  43ca47:	add    DWORD PTR ds:0x239cae0a,edi
  43ca4d:	jmp    0x43cabe
  43ca4f:	push   ds
  43ca50:	shr    DWORD PTR ds:[esi+ebx*8],cl
  43ca54:	add    cl,ch
  43ca56:	out    0x9b,eax
  43ca58:	and    ebp,esi
  43ca5a:	call   0xf801:0x8bd401c1
  43ca61:	jmp    0x12cb929
  43ca66:	test   al,0x9
  43ca68:	stc    
  43ca69:	call   ebp
  43ca6b:	jo     0x43ca7f
  43ca6d:	add    DWORD PTR [ebx],edi
  43ca6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ca70:	jne    0x43caef
  43ca72:	pop    eax
  43ca73:	fidivr DWORD PTR [edx+0x63]
  43ca76:	jle    0x43cad7
  43ca78:	lock inc DWORD PTR [ecx+0x6c03b1f]
  43ca7f:	fld    QWORD PTR [eax]
  43ca81:	jl     0x43ca5b
  43ca83:	xor    DWORD PTR [ebp+0x7fd65cc1],0xffffffc1
  43ca8a:	xchg   ebp,eax
  43ca8b:	std    
  43ca8c:	or     BYTE PTR [ebx+0xb73013c],al
  43ca92:	test   ebp,esi
  43ca94:	div    DWORD PTR [ebx-0x6c]
  43ca97:	and    al,0x56
  43ca99:	clc    
  43ca9a:	inc    ecx
  43ca9b:	repz mov ah,0x83
  43ca9e:	cmp    al,0x0
  43caa0:	jae    0x43cad9
  43caa2:	add    BYTE PTR [eax],al
  43caa4:	inc    ebp
  43caa5:	cmc    
  43caa6:	cmc    
  43caa7:	je     0x43ca81
  43caa9:	and    al,0x46
  43caab:	clc    
  43caac:	shl    ecx,0xb4
  43caaf:	cmp    DWORD PTR [edi+0x2e0673dd],0xffffff9b
  43cab6:	clc    
  43cab7:	call   DWORD PTR [ecx-0x77068ae3]
  43cabd:	xchg   DWORD PTR [edx],eax
  43cabf:	call   0x3cbd06
  43cac4:	lds    ebx,FWORD PTR [ebp-0x11]
  43cac7:	pop    es
  43cac8:	dec    ebx
  43cac9:	fsubr  st,st(0)
  43cacb:	xor    DWORD PTR [esi-0xf],ebp
  43cace:	clc    
  43cacf:	ret    
  43cad0:	add    eax,0x887508f4
  43cad5:	and    al,0x22
  43cad7:	clc    
  43cad8:	xchg   ecx,eax
  43cad9:	icebp  
  43cada:	mov    ah,0xe8
  43cadc:	das    
  43cadd:	or     ecx,edi
  43cadf:	jmp    FWORD PTR [edi]
  43cae1:	jl     0x43cb21
  43cae3:	push   ss
  43cae4:	cs mov edx,0x13f27d21
  43caea:	add    bh,BYTE PTR [ebp+0xab968]
  43caf0:	das    
  43caf1:	test   DWORD PTR [ebx],0xf513ea85
  43caf7:	mov    cl,0x6f
  43caf9:	mul    BYTE PTR [esi]
  43cafb:	mov    ecx,0x7903f52f
  43cb00:	ds popf 
  43cb02:	repz adc BYTE PTR es:[ecx+0x7a80],dl
  43cb0a:	and    eax,esi
  43cb0c:	gs cs pop ss
  43cb0f:	(bad)  
  43cb10:	in     al,dx
  43cb11:	clc    
  43cb12:	clc    
  43cb13:	mov    ah,0x26
  43cb15:	shr    BYTE PTR [edi],0xf5
  43cb18:	add    edi,DWORD PTR [edx+edx*1-0x72]
  43cb1c:	sar    DWORD PTR [esi-0x4185062b],0xac
  43cb23:	(bad)  
  43cb24:	hlt    
  43cb25:	jl     0x43cafc
  43cb27:	pop    ds
  43cb28:	outs   dx,DWORD PTR ds:[esi]
  43cb29:	add    eax,0x73fadeac
  43cb2e:	push   ds
  43cb2f:	in     eax,dx
  43cb30:	mov    ah,0xf0
  43cb32:	mov    eax,0xb57cb808
  43cb37:	and    BYTE PTR [edi+0x2],ch
  43cb3a:	xchg   edi,eax
  43cb3b:	xor    esp,esi
  43cb3d:	clc    
  43cb3e:	mov    al,ds:0xa3b0d534
  43cb43:	sub    ah,ch
  43cb45:	test   dl,ch
  43cb47:	or     bh,ch
  43cb49:	inc    edx
  43cb4a:	dec    esp
  43cb4b:	je     0x43cb8e
  43cb4d:	sbb    eax,0x42c4342d
  43cb52:	adc    eax,0x2f0003f5
  43cb57:	jl     0x43cb9a
  43cb59:	sbb    eax,0x4457de38
  43cb5e:	pusha  
  43cb5f:	ret    0x456
  43cb62:	das    
  43cb63:	fimul  WORD PTR [esi]
  43cb65:	or     eax,DWORD PTR [edi+0x23]
  43cb68:	mov    gs,ebx
  43cb6a:	inc    edi
  43cb6b:	pop    ebx
  43cb6c:	std    
  43cb6d:	adc    DWORD PTR [eax],eax
  43cb6f:	add    BYTE PTR [ebx],ch
  43cb71:	mov    ah,bh
  43cb73:	xchg   BYTE PTR [ebp+0x276fe7e7],dh
  43cb79:	pop    ebx
  43cb7a:	in     eax,0x11
  43cb7c:	cs jg  0x43cb6a
  43cb7f:	fisub  WORD PTR [ecx-0xa]
  43cb82:	imul   esi,ebx,0x292aff17
  43cb88:	out    dx,eax
  43cb89:	fucomp st(1)
  43cb8b:	add    ecx,DWORD PTR [ebx-0x3e398f36]
  43cb91:	repz fnstsw WORD PTR [ecx+edi*4+0x5a]
  43cb96:	dec    ecx
  43cb97:	sti    
  43cb98:	jae    0x43cb9e
  43cb9a:	fdiv   DWORD PTR [eax+0x3c]
  43cb9d:	pop    ebx
  43cb9e:	and    esp,edi
  43cba0:	gs mov esi,0x8adbed6a
  43cba6:	repnz xchg cl,bl
  43cba9:	fisttp DWORD PTR [ebp-0x95728ef]
  43cbaf:	jmp    0x8927:0xee6b1ac7
  43cbb6:	loop   0x43cb3e
  43cbb8:	mov    ecx,0x970165d5
  43cbbd:	cwde   
  43cbbe:	(bad)  
  43cbbf:	jmp    0xfea3:0x2bd21aa7
  43cbc6:	into   
  43cbc7:	jle    0x43cbb6
  43cbc9:	jecxz  0x43cbb3
  43cbcb:	inc    eax
  43cbcc:	sub    bl,BYTE PTR [ebx+0x25]
  43cbcf:	daa    
  43cbd0:	sbb    DWORD PTR [ebx],0x409f
  43cbd6:	and    esi,ebx
  43cbd8:	add    cl,ch
  43cbda:	sub    al,0xde
  43cbdc:	mov    esp,DWORD PTR [eax+edx*1]
  43cbdf:	aad    0xae
  43cbe1:	sub    DWORD PTR [edx],ebp
  43cbe3:	ret    
  43cbe4:	mov    bh,0xe9
  43cbe6:	sub    al,0xde
  43cbe8:	ja     0x43cbe2
  43cbea:	je     0x43cb8e
  43cbec:	in     al,dx
  43cbed:	mov    ss,WORD PTR [ebp-0x7f]
  43cbf0:	jne    0x43cbd1
  43cbf2:	sub    eax,0x35912284
  43cbf7:	or     eax,0xc36976f8
  43cbfc:	shr    cl,0x2c
  43cbff:	fidiv  WORD PTR [esp+edi*8-0x5d]
  43cc03:	cmp    eax,edx
  43cc05:	push   ebx
  43cc06:	sbb    BYTE PTR [ebp-0x3e],ah
  43cc09:	push   0xb
  43cc0b:	out    0x83,eax
  43cc0d:	push   ebx
  43cc0e:	pop    es
  43cc0f:	jno    0x43cc0f
  43cc11:	push   eax
  43cc12:	stc    
  43cc13:	out    dx,eax
  43cc14:	idiv   DWORD PTR [esi]
  43cc16:	icebp  
  43cc17:	add    eax,0xf7053adf
  43cc1c:	mov    esp,DWORD PTR [edx+edi*1-0x5635c303]
  43cc23:	mov    al,ds:0x1ef1eb23
  43cc28:	ds repz sub al,0xde
  43cc2c:	add    cl,ch
  43cc2e:	dec    ecx
  43cc2f:	mov    al,ds:0xbd7ef623
  43cc34:	add    DWORD PTR [ebp+eax*4+0xe9f7fd],edi
  43cc3b:	add    BYTE PTR [ebp-0x2b],al
  43cc3e:	call   0xf83a6526
  43cc43:	push   0x8
  43cc45:	sar    ch,1
  43cc47:	push   esp
  43cc48:	fwait
  43cc49:	jp     0x43ccc0
  43cc4b:	jmp    FWORD PTR [edi]
  43cc4d:	ja     0x43cc51
  43cc4f:	ret    0x641
  43cc52:	scas   al,BYTE PTR es:[edi]
  43cc53:	add    al,al
  43cc55:	pop    es
  43cc56:	stc    
  43cc57:	ret    
  43cc58:	jnp    0x43cc7b
  43cc5a:	clc    
  43cc5b:	inc    DWORD PTR [esi-0x6b76dc7b]
  43cc61:	and    esi,ebx
  43cc63:	add    al,0xdf
  43cc65:	and    BYTE PTR [ebp-0x1f],dh
  43cc68:	dec    ecx
  43cc69:	(bad)  
  43cc6a:	out    dx,al
  43cc6b:	or     al,0x33
  43cc6d:	sti    
  43cc6e:	je     0x43cc69
  43cc70:	dec    esi
  43cc71:	test   DWORD PTR [edi],eax
  43cc73:	call   0x3cbc5a
  43cc78:	test   DWORD PTR [ebx-0x12],esp
  43cc7b:	rdpmc  
  43cc7d:	fucomip st,st(0)
  43cc7f:	mov    DWORD PTR [eax+0x7ec3f907],esp
  43cc85:	xchg   ch,ah
  43cc87:	(bad)  
  43cc88:	jns    0x43cd05
  43cc8a:	inc    edx
  43cc8b:	sbb    al,BYTE PTR [edi]
  43cc8d:	mov    esp,0xc1d38315
  43cc92:	test   dl,0x51
  43cc95:	mov    ebp,0xe106000e
  43cc9a:	add    BYTE PTR [ebx-0x49f63e3d],cl
  43cca0:	add    BYTE PTR [eax],al
  43cca2:	xchg   esi,eax
  43cca3:	fistp  QWORD PTR [ebx]
  43cca5:	mov    edi,0x7f00e0d6
  43ccaa:	xlat   BYTE PTR ds:[ebx]
  43ccab:	sbb    BYTE PTR [eax+0x750739f3],bl
  43ccb1:	jge    0x43cc73
  43ccb3:	fnstsw WORD PTR [edx+0x27]
  43ccb6:	push   ds
  43ccb7:	xchg   ebx,eax
  43ccb8:	repnz (bad) 
  43ccba:	mov    ecx,0xc6c03b21
  43ccbf:	loopne 0x43ccc1
  43ccc1:	jl     0x43cd3f
  43ccc3:	ja     0x43cc7a
  43ccc5:	sar    DWORD PTR [esp+edi*8+0x7e],0xc1
  43ccca:	add    eax,0x2f830900
  43cccf:	adc    edi,ebp
  43ccd1:	jb     0x43cd07
  43ccd3:	mov    dl,ch
  43ccd5:	push   es
  43ccd6:	sti    
  43ccd7:	or     al,0xdc
  43ccd9:	sub    eax,0xbce93b81
  43ccde:	xchg   ecx,ebp
  43cce0:	in     eax,dx
  43cce1:	clc    
  43cce2:	push   0x2e16367f
  43cce7:	retf   0x7d1d
  43ccea:	repnz daa 
  43ccec:	(bad)  
  43cced:	mov    esp,0x6c968
  43ccf2:	das    
  43ccf3:	pop    es
  43ccf4:	add    al,0x85
  43ccf6:	jmp    0x1f05:0xefb1f927
  43ccfd:	mov    ecx,0x7904072f
  43cd02:	ds pop ebp
  43cd04:	cmp    ebp,ebp
  43cd06:	add    BYTE PTR [eax],al
  43cd08:	and    BYTE PTR [ebp+0x4417a7c],al
  43cd0e:	push   0x4e
  43cd10:	pop    es
  43cd11:	xchg   edx,eax
  43cd12:	out    0xf8,al
  43cd14:	or     cl,cl
  43cd16:	push   ds
  43cd17:	shr    BYTE PTR [edi],0x5
  43cd1a:	add    al,0x7c
  43cd1c:	jb     0x43cd8c
  43cd1e:	mov    ebp,0x7b0a05be
  43cd23:	mov    esi,0x7cf8a6ac
  43cd28:	in     eax,0xf1
  43cd2a:	data16 add al,bh
  43cd2d:	in     eax,0xe6
  43cd2f:	clc    
  43cd30:	ror    al,1
  43cd32:	jl     0x43cd29
  43cd34:	cmp    dl,BYTE PTR [edx+0x2]
  43cd37:	call   0xf923c816
  43cd3c:	in     al,dx
  43cd3d:	mov    ch,ah
  43cd3f:	or     DWORD PTR [edx],edi
  43cd41:	adc    eax,0x712ff67d
  43cd46:	add    al,0x7d
  43cd48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43cd49:	fdivrp st(1),st
  43cd4b:	push   0xf1aa063d
  43cd50:	xchg   edi,eax
  43cd51:	sti    
  43cd52:	stos   BYTE PTR es:[edi],al
  43cd53:	add    DWORD PTR [edx+0x3fb4ceb],0xfffffff5
  43cd5a:	icebp  
  43cd5b:	addr16 sub eax,0x77f17a06
  43cd61:	sti    
  43cd62:	stos   BYTE PTR es:[edi],al
  43cd63:	fmul   st(3),st
  43cd65:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43cd67:	out    0xab,eax
  43cd69:	mov    eax,ds:0x503
  43cd6e:	in     al,dx
  43cd6f:	mov    esi,0xe032416a
  43cd74:	stos   BYTE PTR es:[edi],al
  43cd75:	mov    eax,0x8c122a74
  43cd7a:	inc    ebx
  43cd7b:	sti    
  43cd7c:	jmp    0xea21fc84
  43cd81:	add    ebp,DWORD PTR [edi]
  43cd83:	fidivr WORD PTR [ebp-0x61]
  43cd86:	sub    edi,ebx
  43cd88:	ins    DWORD PTR es:[edi],dx
  43cd89:	adc    al,0x2f
  43cd8b:	fidivr WORD PTR [ebp-0x1604e476]
  43cd91:	add    ebp,DWORD PTR [edi]
  43cd93:	fsubp  st(1),st
  43cd95:	add    ebp,DWORD PTR [edi]
  43cd97:	ficomp WORD PTR [ebx+0x21fb0396]
  43cd9d:	adc    ebp,DWORD PTR [edi]
  43cd9f:	ficomp WORD PTR [ebp-0x71]
  43cda2:	repz cli 
  43cda4:	jmp    0xea21fcac
  43cda9:	add    ebp,DWORD PTR [edi]
  43cdab:	fimul  WORD PTR [ecx-0x4b]
  43cdae:	(bad)  
  43cdb0:	jmp    0x621fcc8
  43cdb5:	mov    cl,bl
  43cdb7:	cli    
  43cdb8:	jmp    0xea21fcc0
  43cdbd:	add    ebp,DWORD PTR [edi]
  43cdbf:	ficom  WORD PTR [ebp+0xfab3b2]
  43cdc5:	mov    DWORD PTR ds:0xb51500de,edi
  43cdcb:	stc    
  43cdcc:	imul   ecx
  43cdce:	sub    al,0xde
  43cdd0:	add    cl,ch
  43cdd2:	add    BYTE PTR [eax],al
  43cdd4:	sub    al,0xde
  43cdd6:	add    BYTE PTR [ebx+0x39f7f9bd],cl
  43cddc:	sbb    al,0xde
  43cdde:	add    BYTE PTR ds:0xe9f7f9a4,bl
  43cde4:	sub    al,0xde
  43cde6:	add    cl,ch
  43cde8:	sub    al,0xde
  43cdea:	add    BYTE PTR [ecx-0x46080663],ch
  43cdf0:	cmp    eax,0xaaed00de
  43cdf5:	stc    
  43cdf6:	imul   ecx
  43cdf8:	sub    al,0xde
  43cdfa:	add    cl,ch
  43cdfc:	sub    al,0xde
  43cdfe:	add    BYTE PTR ds:0x71f7f97f,al
  43ce04:	and    bl,dh
  43ce06:	add    BYTE PTR [ecx-0x1608054c],bh
  43ce0c:	sub    al,0xde
  43ce0e:	add    cl,ch
  43ce10:	sub    al,0xde
  43ce12:	add    ch,cl
  43ce14:	(bad)  
  43ce16:	test   DWORD PTR [ebp-0x46ff21e4],0xe9f7fab7
  43ce20:	sub    al,0xde
  43ce22:	add    cl,ch
  43ce24:	sub    al,0xde
  43ce26:	add    bh,bl
  43ce28:	call   0xde:0x3f1df7fa
  43ce2f:	cmc    
  43ce30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ce31:	cli    
  43ce32:	imul   ecx
  43ce34:	sub    al,0xde
  43ce36:	add    cl,ch
  43ce38:	add    BYTE PTR [eax],al
  43ce3a:	sub    al,0xde
  43ce3c:	add    BYTE PTR [ebx],bl
  43ce3e:	xchg   edx,eax
  43ce3f:	cli    
  43ce40:	test   DWORD PTR [eax],0xcd3e
  43ce46:	mov    edx,0x96fff560
  43ce4b:	fld    QWORD PTR [eax]
  43ce4d:	add    BYTE PTR [esi+0x740000dd],dl
  43ce53:	dec    edx
  43ce54:	cmc    
  43ce55:	push   esi
  43ce57:	call   0x6519ce5c
  43ce5c:	cmc    
  43ce5d:	call   DWORD PTR [esi-0x79ffff23]
  43ce63:	fld    QWORD PTR [eax]
  43ce65:	add    BYTE PTR [eax+0x62fff54a],dh
  43ce6b:	into   
  43ce6c:	add    BYTE PTR [eax],al
  43ce6e:	out    0x63,al
  43ce70:	cmc    
  43ce71:	inc    DWORD PTR [esi-0x23]
  43ce74:	add    BYTE PTR [eax],al
  43ce76:	inc    esi
  43ce77:	fld    QWORD PTR [eax]
  43ce79:	add    BYTE PTR [esi],dl
  43ce7b:	inc    ebp
  43ce7c:	cmc    
  43ce7d:	inc    DWORD PTR [edx+0x360000ce]
  43ce83:	gs cmc 
  43ce85:	inc    DWORD PTR [esi-0x23]
  43ce88:	add    BYTE PTR [eax],al
  43ce8a:	push   ss
  43ce8b:	fld    QWORD PTR [eax]
  43ce8d:	add    BYTE PTR [eax],ch
  43ce8f:	inc    ebp
  43ce90:	cmc    
  43ce91:	inc    DWORD PTR [edx+0x420000d2]
  43ce97:	popa   
  43ce98:	cmc    
  43ce99:	call   DWORD PTR [esi]
  43ce9b:	fld    QWORD PTR [eax]
  43ce9d:	add    BYTE PTR [eax],al
  43ce9f:	add    BYTE PTR [esi],dl
  43cea1:	fld    QWORD PTR [eax]
  43cea3:	add    BYTE PTR [edx],cl
  43cea5:	inc    edi
  43cea6:	cmc    
  43cea7:	(bad)  
  43cea8:	mov    esi,0xd60000ea
  43cead:	fadd   QWORD PTR [eax]
  43ceaf:	add    dh,dl
  43ceb1:	fadd   QWORD PTR [eax]
  43ceb3:	add    dh,al
  43ceb5:	fadd   QWORD PTR [eax]
  43ceb7:	add    dh,al
  43ceb9:	fadd   QWORD PTR [eax]
  43cebb:	add    BYTE PTR [edi],ch
  43cebd:	pop    es
  43cebe:	add    al,0x0
  43cec0:	das    
  43cec1:	aas    
  43cec2:	(bad)  
  43cec3:	cld    
  43cec4:	mov    eax,0xb0fc8eda
  43cec9:	repnz (bad) 
  43cecb:	cld    
  43cecc:	test   al,0x16
  43cece:	(bad)  
  43cecf:	cld    
  43ced0:	mov    al,ds:0x98fc8d62
  43ced5:	xchg   BYTE PTR [esp+edi*8-0x3738970],cl
  43cedc:	mov    BYTE PTR [esi-0x73],bl
  43cedf:	cld    
  43cee0:	sub    BYTE PTR [edx-0x73],0xfc
  43cee4:	js     0x43cf16
  43cee6:	(bad)  
  43cee7:	cld    
  43cee8:	jo     0x43cf10
  43ceea:	(bad)  
  43ceeb:	cld    
  43ceec:	push   0x60fc8d3a
  43cef1:	add    BYTE PTR [esp+edi*8-0x34bd9a8],dh
  43cef8:	push   eax
  43cef9:	sub    dh,BYTE PTR [esp+edi*8-0x34befb8]
  43cf00:	inc    eax
  43cf01:	fisubr DWORD PTR [esp+edi*8-0x31c80000]
  43cf08:	lods   al,BYTE PTR ds:[esi]
  43cf09:	cld    
  43cf0a:	xor    dl,bh
  43cf0c:	mov    bl,0xfc
  43cf0e:	sub    BYTE PTR [edx-0x63df034d],bl
  43cf14:	mov    bl,0xfc
  43cf16:	sbb    BYTE PTR [edx-0x4c],al
  43cf19:	cld    
  43cf1a:	adc    dl,cl
  43cf1c:	mov    bl,0xfc
  43cf1e:	or     BYTE PTR [esi-0x69ff034d],ah
  43cf24:	mov    bl,0xfc
  43cf26:	clc    
  43cf27:	add    esi,DWORD PTR [ebx-0x4cf00f04]
  43cf2d:	cld    
  43cf2e:	call   0xe1408314
  43cf33:	pop    es
  43cf34:	mov    bl,0xfc
  43cf36:	fcomp  st(6)
  43cf38:	shl    DWORD PTR [edx-0x4d66082d],0xcb
  43cf3f:	mul    DWORD PTR [ecx-0x4e]
  43cf42:	ret    
  43cf43:	test   DWORD PTR [edi-0x6b],0x3e9f7bb
  43cf4a:	das    
  43cf4b:	ficomp WORD PTR ds:0x4bf7abad
  43cf51:	lods   eax,DWORD PTR ds:[esi]
  43cf52:	mov    ds:0x9bad5df7,eax
  43cf57:	test   DWORD PTR [edi-0x66],0x9a35f793
  43cf5e:	mov    esi,edi
  43cf60:	and    eax,0xbf7839a
  43cf65:	call   0x0:0x9a9df77b
  43cf6c:	jae    0x43cf65
  43cf6e:	jmp    0x1221fe76
  43cf73:	cdq    
  43cf74:	arpl   di,si
  43cf76:	retf   
  43cf77:	cwde   
  43cf78:	pop    ebx
  43cf79:	imul   DWORD PTR ds:0xaff75399
  43cf7f:	cwde   
  43cf80:	dec    ebx
  43cf81:	mul    DWORD PTR [edi-0x2e08bc68]
  43cf87:	cwde   
  43cf88:	cmp    esi,edi
  43cf8a:	int    0x98
  43cf8c:	xor    esi,edi
  43cf8e:	xlat   BYTE PTR ds:[ebx]
  43cf8f:	cwde   
  43cf90:	sub    esi,edi
  43cf92:	aad    0x98
  43cf94:	and    esi,edi
  43cf96:	loope  0x43cf30
  43cf98:	sbb    esi,edi
  43cf9a:	pop    edi
  43cf9b:	cwde   
  43cf9c:	adc    esi,edi
  43cf9e:	pop    ebx
  43cf9f:	cwde   
  43cfa0:	or     esi,edi
  43cfa2:	xchg   edi,eax
  43cfa3:	cwde   
  43cfa4:	add    esi,edi
  43cfa6:	pop    edi
  43cfa7:	cwde   
  43cfa8:	sti    
  43cfa9:	test   BYTE PTR [ecx-0x16090c68],0x3
  43cfb0:	das    
  43cfb1:	fiadd  WORD PTR [eax]
  43cfb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cfb4:	ret    
  43cfb5:	stc    
  43cfb6:	imul   ecx
  43cfb8:	sub    al,0xde
  43cfba:	add    bl,bh
  43cfbc:	mov    ecx,edi
  43cfbe:	test   ecx,0xc7f7f991
  43cfc4:	mov    ecx,edi
  43cfc6:	test   edi,0x9bf7f991
  43cfcc:	mov    ecx,edi
  43cfce:	mul    DWORD PTR [ebx-0x62f0000]
  43cfd4:	idiv   DWORD PTR [ecx-0x37]
  43cfd7:	stc    
  43cfd8:	imul   DWORD PTR [ecx-0x30]
  43cfdb:	stc    
  43cfdc:	test   DWORD PTR [ebx-0x78080637],0x9df7f9d1
  43cfe6:	leave  
  43cfe7:	stc    
  43cfe8:	mul    DWORD PTR [ebx-0x3008062f]
  43cfee:	leave  
  43cfef:	stc    
  43cff0:	idiv   DWORD PTR [edi-0x1808066f]
  43cff6:	mov    cl,bh
  43cff8:	test   DWORD PTR [ebx],0xdff7f987
  43cffe:	mov    cl,bh
  43d000:	mul    DWORD PTR [edi]
  43d002:	xchg   edi,eax
  43d003:	stc    
  43d004:	div    DWORD PTR [edi]
  43d006:	xchg   edi,eax
  43d007:	stc    
  43d008:	idiv   edi
  43d00a:	nop
  43d00b:	stc    
  43d00c:	imul   DWORD PTR [ecx-0x78]
  43d00f:	stc    
  43d010:	imul   DWORD PTR [ebp-0x30]
  43d013:	repnz not DWORD PTR [ebp-0x38]
  43d017:	repnz idiv DWORD PTR [ecx]
  43d01a:	shl    dl,1
  43d01c:	idiv   DWORD PTR [ecx]
  43d01e:	enter  0xf7f2,0x3f
  43d022:	shl    dl,1
  43d024:	test   DWORD PTR [ebp-0x38],0xd04ff7f2
  43d02b:	repnz test DWORD PTR [eax],0xfff546f8
  43d032:	xor    al,0x47
  43d034:	cmc    
  43d035:	inc    DWORD PTR [eax]
  43d037:	add    ah,bl
  43d039:	inc    esi
  43d03a:	cmc    
  43d03b:	inc    edx
  43d03d:	inc    esi
  43d03e:	cmc    
  43d03f:	jmp    DWORD PTR [edx-0x5d000aba]
  43d045:	inc    esi
  43d046:	cmc    
  43d047:	(bad)  
  43d048:	ds inc esi
  43d04a:	cmc    
  43d04b:	inc    DWORD PTR [edx]
  43d04d:	inc    ecx
  43d04e:	cmc    
  43d04f:	call   DWORD PTR [esi]
  43d051:	inc    esi
  43d052:	cmc    
  43d053:	push   DWORD PTR [eax]
  43d055:	inc    esi
  43d056:	cmc    
  43d057:	jmp    DWORD PTR [edx-0x7b000ac3]
  43d05d:	inc    edi
  43d05e:	cmc    
  43d05f:	call   DWORD PTR [eax+0x1cfff547]
  43d065:	dec    eax
  43d066:	cmc    
  43d067:	call   FWORD PTR [eax+ecx*2]
  43d06a:	cmc    
  43d06b:	call   DWORD PTR [eax+0x48]
  43d06e:	cmc    
  43d06f:	call   DWORD PTR [esi]
  43d071:	dec    eax
  43d072:	cmc    
  43d073:	(bad)  
  43d074:	clc    
  43d075:	inc    edi
  43d076:	cmc    
  43d077:	call   esi
  43d079:	inc    edi
  43d07a:	cmc    
  43d07b:	(bad)  
  43d07c:	cli    
  43d07d:	inc    edi
  43d07e:	cmc    
  43d07f:	jmp    edx
  43d081:	inc    edi
  43d082:	cmc    
  43d083:	call   DWORD PTR [esi-0x7f000ab8]
  43d089:	dec    eax
  43d08a:	cmc    
  43d08b:	(bad)  
  43d08c:	mov    eax,0xaafff547
  43d091:	dec    eax
  43d092:	cmc    
  43d093:	dec    DWORD PTR [esi]
  43d095:	inc    esi
  43d096:	cmc    
  43d097:	(bad)  
  43d098:	in     al,dx
  43d099:	inc    ebp
  43d09a:	cmc    
  43d09b:	inc    DWORD PTR [eax]
  43d09d:	add    BYTE PTR [edi+eax*2-0xb],al
  43d0a1:	(bad)  
  43d0a2:	in     al,dx
  43d0a3:	inc    ebp
  43d0a4:	cmc    
  43d0a5:	push   eax
  43d0a7:	inc    ebp
  43d0a8:	cmc    
  43d0a9:	jmp    FWORD PTR [edi]
  43d0ab:	adc    ebp,DWORD PTR [ecx-0x56850704]
  43d0b1:	cld    
  43d0b2:	lock jle 0x43d05e
  43d0b5:	cld    
  43d0b6:	call   0xe1407a33
  43d0bb:	enter  0xfca9,0xd8
  43d0bf:	fsubr  DWORD PTR [ecx-0x69ad2f04]
  43d0c5:	cld    
  43d0c6:	enter  0x961e,0xfc
  43d0ca:	rol    BYTE PTR [edx-0x6a],0xfc
  43d0ce:	mov    eax,0xb0fc960e
  43d0d3:	sub    BYTE PTR [esi-0x69e95704],dl
  43d0d9:	cld    
  43d0da:	mov    al,ds:0x98fc9df2
  43d0df:	push   es
  43d0e0:	popf   
  43d0e1:	cld    
  43d0e2:	nop
  43d0e3:	and    al,0x9e
  43d0e5:	cld    
  43d0e6:	mov    BYTE PTR [esi],ch
  43d0e8:	sahf   
  43d0e9:	cld    
  43d0ea:	adc    BYTE PTR [eax-0x62],0xfc
  43d0ee:	js     0x43d162
  43d0f0:	popf   
  43d0f1:	cld    
  43d0f2:	jo     0x43d16e
  43d0f4:	popf   
  43d0f5:	cld    
  43d0f6:	push   0x60fc9d82
  43d0fb:	scas   al,BYTE PTR es:[edi]
  43d0fc:	sahf   
  43d0fd:	cld    
  43d0fe:	pop    eax
  43d0ff:	mov    al,ds:0xfc9e
  43d104:	push   eax
  43d105:	pushf  
  43d106:	sahf   
  43d107:	cld    
  43d108:	dec    eax
  43d109:	scas   al,BYTE PTR es:[edi]
  43d10a:	sahf   
  43d10b:	cld    
  43d10c:	inc    eax
  43d10d:	or     bl,BYTE PTR [esi-0x61cbc704]
  43d113:	cld    
  43d114:	xor    BYTE PTR [eax],al
  43d116:	sahf   
  43d117:	cld    
  43d118:	sub    al,dh
  43d11a:	popf   
  43d11b:	cld    
  43d11c:	and    BYTE PTR [eax-0x5e],dh
  43d11f:	cld    
  43d120:	sbb    BYTE PTR [edx-0x5d],bl
  43d123:	cld    
  43d124:	adc    bh,bl
  43d126:	inc    ecx
  43d127:	mov    ds:0xa22bf40b,al
  43d12c:	add    esi,esp
  43d12e:	cdq    
  43d12f:	mov    ds:0xa265f3fb,al
  43d134:	repz repz jno 0x43d0da
  43d138:	jmp    0x43d12d
  43d13a:	scas   eax,DWORD PTR es:[edi]
  43d13b:	mov    ds:0xa2c3f3e3,al
  43d140:	fcomi  st,st(3)
  43d142:	lea    esp,[edx-0x5d4e0c2d]
  43d148:	retf   
  43d149:	repz lds esp,FWORD PTR [edx-0x5d0c0c3d]
  43d150:	mov    ebx,0xb3a2e1f3
  43d155:	repz add DWORD PTR [ebx-0x59ba0c55],esp
  43d15c:	mov    ds:0x9ba303f3,eax
  43d161:	repz sbb eax,0x8ff393a3
  43d167:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d168:	add    BYTE PTR [eax],al
  43d16a:	mov    esi,ebx
  43d16c:	ins    DWORD PTR es:[edi],dx
  43d16d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d16e:	xor    ebx,0x69
  43d171:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d172:	jnp    0x43d167
  43d174:	inc    ecx
  43d175:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d176:	jae    0x43d16b
  43d178:	sbb    DWORD PTR [ebx+ebp*2+0x63a429f3],esp
  43d17f:	repz add DWORD PTR [ebx+ebx*2+0x53a3d5f3],esp
  43d187:	repz popf 
  43d189:	jg     0x43d1d6
  43d18b:	xrelease xchg DWORD PTR [edi+0x43],edi
  43d18f:	repz scas eax,DWORD PTR es:[edi]
  43d191:	jg     0x43d1ce
  43d193:	repz mov ecx,0x3ff3337f
  43d199:	jg     0x43d1c6
  43d19b:	repz push ecx
  43d19d:	jg     0x43d1c2
  43d19f:	repz add BYTE PTR [ebp-0x68],dl
  43d1a3:	repnz mul DWORD PTR [edi-0x70]
  43d1a7:	repnz neg ebp
  43d1aa:	mov    edx,esi
  43d1ac:	test   ebx,0xbbf7f281
  43d1b2:	jns    0x43d1a6
  43d1b4:	imul   DWORD PTR [ecx-0x2080d8f]
  43d1ba:	imul   esi,edx,0xf261dff7
  43d1c0:	neg    ebx
  43d1c2:	pop    ecx
  43d1c3:	repnz div DWORD PTR [ecx]
  43d1c6:	push   ecx
  43d1c7:	repnz test DWORD PTR [edi],0x37f7f249
  43d1ce:	add    BYTE PTR [eax],al
  43d1d0:	inc    ecx
  43d1d1:	repnz mul DWORD PTR [ebx]
  43d1d4:	cmp    edx,esi
  43d1d6:	not    DWORD PTR [ebx+0x31]
  43d1d9:	repnz not DWORD PTR [ebp+0x29]
  43d1dd:	repnz test DWORD PTR [ecx+0x21],0x195df7f2
  43d1e5:	repnz div DWORD PTR [ebp+0x65f7f212]
  43d1ec:	or     edx,esi
  43d1ee:	not    DWORD PTR [ecx+0x1]
  43d1f1:	repnz idiv DWORD PTR [ecx]
  43d1f4:	stc    
  43d1f5:	icebp  
  43d1f6:	mul    DWORD PTR ds:0xa9f7f1f1
  43d1fc:	xchg   edi,eax
  43d1fd:	icebp  
  43d1fe:	imul   ecx
  43d200:	sub    al,0xde
  43d202:	add    bl,bh
  43d204:	mov    ebx,0xb3cff7f1
  43d209:	icebp  
  43d20a:	div    ebp
  43d20c:	stos   DWORD PTR es:[edi],eax
  43d20d:	icebp  
  43d20e:	imul   ecx
  43d210:	sub    al,0xde
  43d212:	add    cl,ah
  43d214:	sub    al,0xde
  43d216:	and    al,0x2c
  43d219:	fiadd  WORD PTR [eax+0xde1800]
  43d21f:	adc    BYTE PTR [esi+ebx*8],0x0
  43d223:	add    BYTE PTR [esi],0xde
  43d226:	add    BYTE PTR [eax],al
  43d228:	je     0x43d276
  43d22a:	cmc    
  43d22b:	call   DWORD PTR [eax]
  43d22d:	dec    ebp
  43d22e:	cmc    
  43d22f:	(bad)  
  43d230:	fimul  WORD PTR [ebp+esi*8-0x1]
  43d234:	add    BYTE PTR [eax],al
  43d236:	push   es
  43d237:	fiadd  WORD PTR [eax]
  43d239:	add    dh,cl
  43d23b:	dec    esp
  43d23c:	cmc    
  43d23d:	(bad)  
  43d23e:	jmp    0xf54d:0x2afff54c
  43d245:	push   esp
  43d247:	dec    esp
  43d248:	cmc    
  43d249:	inc    DWORD PTR [edx]
  43d24b:	dec    edi
  43d24c:	cmc    
  43d24d:	jmp    DWORD PTR [edx]
  43d24f:	dec    edi
  43d250:	cmc    
  43d251:	push   DWORD PTR [edi+ecx*2]
  43d254:	cmc    
  43d255:	(bad)  
  43d256:	dec    BYTE PTR [esi-0xb]
  43d259:	call   DWORD PTR [edx]
  43d25b:	dec    edi
  43d25c:	cmc    
  43d25d:	call   DWORD PTR [esi+0x4f]
  43d260:	cmc    
  43d261:	jmp    DWORD PTR [edi+ecx*2-0xb]
  43d265:	(bad)  
  43d266:	call   0xf943c7b9
  43d26b:	dec    esi
  43d26c:	cmc    
  43d26d:	call   DWORD PTR [esi]
  43d26f:	dec    esp
  43d270:	cmc    
  43d271:	push   edx
  43d273:	dec    ebx
  43d274:	cmc    
  43d275:	(bad)  
  43d276:	ds dec esp
  43d278:	cmc    
  43d279:	inc    DWORD PTR [esp+ecx*2-0xb]
  43d27d:	jmp    FWORD PTR [eax+0x4f]
  43d280:	cmc    
  43d281:	jmp    FWORD PTR [edx]
  43d283:	dec    esp
  43d284:	cmc    
  43d285:	call   DWORD PTR [eax-0x23]
  43d288:	add    BYTE PTR [eax-0xab088],al
  43d28e:	ds dec edi
  43d290:	cmc    
  43d291:	jmp    DWORD PTR [esi+0x2ffff54d]
  43d297:	arpl   WORD PTR [esp+edi*8+0x2f300000],dx
  43d29e:	xchg   esp,eax
  43d29f:	cld    
  43d2a0:	sub    BYTE PTR [ebp-0x6c],al
  43d2a3:	cld    
  43d2a4:	and    BYTE PTR [ecx+0x718fc93],ah
  43d2aa:	add    al,0x0
  43d2ac:	das    
  43d2ad:	mov    cl,0x91
  43d2af:	cld    
  43d2b0:	or     BYTE PTR [edi],al
  43d2b2:	add    al,0x0
  43d2b4:	das    
  43d2b5:	adc    DWORD PTR [ecx-0x56e10704],ebp
  43d2bb:	cld    
  43d2bc:	lock inc edx
  43d2be:	test   eax,0xa928e8fc
  43d2c3:	cld    
  43d2c4:	loopne 0x43d2b8
  43d2c6:	test   al,0xfc
  43d2c8:	fcomp  st(0)
  43d2ca:	test   eax,0xa920d0fc
  43d2cf:	cld    
  43d2d0:	enter  0xa8f6,0xfc
  43d2d4:	rol    BYTE PTR [ecx+ebp*4],0xfc
  43d2d8:	mov    eax,0xb0fcaad0
  43d2dd:	fsubr  DWORD PTR [edx-0x565d5704]
  43d2e3:	cld    
  43d2e4:	mov    al,ds:0x98fca9a2
  43d2e9:	stos   BYTE PTR es:[edi],al
  43d2ea:	test   eax,0xa9bc90fc
  43d2ef:	cld    
  43d2f0:	mov    BYTE PTR [eax],dh
  43d2f2:	test   eax,0xa92480fc
  43d2f7:	cld    
  43d2f8:	js     0x43d310
  43d2fa:	test   eax,0xa80670fc
  43d2ff:	cld    
  43d300:	add    BYTE PTR [eax],al
  43d302:	push   0x60fca7ea
  43d307:	adc    BYTE PTR [eax-0x5809a704],ch
  43d30d:	cld    
  43d30e:	push   eax
  43d30f:	(bad)  
  43d310:	mov    al,0xfc
  43d312:	dec    eax
  43d313:	fnsave [ebx-0x58]
  43d316:	inc    ebx
  43d317:	lock xor eax,0xfff03bb0
  43d31d:	scas   eax,DWORD PTR es:[edi]
  43d31e:	xor    esi,eax
  43d320:	imul   ebp,DWORD PTR [edi-0x50a40fd5],0xaf3ff023
  43d32a:	sbb    esi,eax
  43d32c:	xor    eax,0xa1f013af
  43d331:	scas   eax,DWORD PTR es:[edi]
  43d332:	or     esi,eax
  43d334:	inc    ecx
  43d335:	scas   eax,DWORD PTR es:[edi]
  43d336:	add    esi,eax
  43d338:	inc    ebp
  43d339:	scas   eax,DWORD PTR es:[edi]
  43d33a:	sti    
  43d33b:	out    dx,eax
  43d33c:	dec    edi
  43d33d:	scas   eax,DWORD PTR es:[edi]
  43d33e:	repz out dx,eax
  43d340:	xlat   BYTE PTR ds:[ebx]
  43d341:	scas   al,BYTE PTR es:[edi]
  43d342:	jmp    0x43d333
  43d344:	fild   QWORD PTR [esi-0x5110101d]
  43d34a:	fucomi st,st(7)
  43d34c:	mov    ebp,DWORD PTR [ebp-0x52b2102d]
  43d352:	retf   
  43d353:	out    dx,eax
  43d354:	imul   ebp,DWORD PTR [ebp-0x5266103d],0xffffffbb
  43d35b:	out    dx,eax
  43d35c:	test   DWORD PTR [ebp-0x525e104d],ebp
  43d362:	stos   DWORD PTR es:[edi],eax
  43d363:	out    dx,eax
  43d364:	mov    ch,0xad
  43d366:	add    BYTE PTR [eax],al
  43d368:	mov    ds:0x9baf9bef,eax
  43d36d:	out    dx,eax
  43d36e:	push   ebp
  43d36f:	test   al,0x93
  43d371:	out    dx,eax
  43d372:	leave  
  43d373:	lods   eax,DWORD PTR ds:[esi]
  43d374:	mov    ebp,edi
  43d376:	in     eax,dx
  43d377:	test   eax,0xa9dbef83
  43d37c:	jnp    0x43d36d
  43d37e:	retf   
  43d37f:	test   eax,0xa3d3ef73
  43d384:	imul   ebp,edi,0xffffffe7
  43d387:	stos   DWORD PTR es:[edi],eax
  43d388:	arpl   di,bp
  43d38a:	jecxz  0x43d337
  43d38c:	pop    ebx
  43d38d:	out    dx,eax
  43d38e:	add    BYTE PTR [edi],al
  43d390:	xor    edx,0xfffffff7
  43d393:	sub    ebx,DWORD PTR [ebx-0x6cc6080e]
  43d399:	repnz test DWORD PTR [edi],0x6bf7f28b
  43d3a0:	xor    edx,0xfffffff7
  43d3a3:	ja     0x43d380
  43d3a5:	icebp  
  43d3a6:	test   DWORD PTR [edi-0x2d],0xc997f7f1
  43d3ad:	icebp  
  43d3ae:	mul    DWORD PTR [ecx+0x31f7f1c1]
  43d3b4:	fyl2x  
  43d3b6:	test   DWORD PTR [edi-0x7e080e2f],0x61f7f1c9
  43d3c0:	shl    ecx,0xf7
  43d3c3:	rcr    DWORD PTR [edx-0x6d2e080f],1
  43d3c9:	icebp  
  43d3ca:	neg    DWORD PTR [ebx-0xe760000]
  43d3d0:	imul   DWORD PTR [edi-0xa080e7e]
  43d3d6:	call   0xf7f1:0x92cdf7f1
  43d3dd:	sti    
  43d3de:	mov    dh,cl
  43d3e0:	imul   ebx
  43d3e2:	xor    cl,0xf7
  43d3e5:	pop    es
  43d3e6:	(bad)  
  43d3e8:	mul    DWORD PTR [ecx]
  43d3ea:	shl    cl,cl
  43d3ec:	div    DWORD PTR [ebx]
  43d3ee:	retf   0xf7f1
  43d3f1:	xor    eax,0x41f7f1c2
  43d3f6:	(bad)  
  43d3f8:	test   DWORD PTR [ebp-0x46080e2d],0xc1f7f1c4
  43d402:	(bad)  
  43d403:	icebp  
  43d404:	neg    DWORD PTR [edi+0xf7f197]
  43d40a:	xchg   esi,eax
  43d40b:	inc    ebp
  43d40c:	cmc    
  43d40d:	call   esp
  43d40f:	inc    ebp
  43d410:	cmc    
  43d411:	jmp    DWORD PTR [ebp+eax*2+0x45e8fff5]
  43d418:	cmc    
  43d419:	dec    DWORD PTR [eax*2+0x4516fff5]
  43d420:	cmc    
  43d421:	(bad)  
  43d422:	cli    
  43d423:	inc    esp
  43d424:	cmc    
  43d425:	dec    DWORD PTR [edi+esi*1-0xb]
  43d429:	jmp    FWORD PTR [eax-0xb000ac7]
  43d42f:	cmp    dh,ch
  43d431:	inc    DWORD PTR [eax]
  43d433:	add    dl,ch
  43d435:	cmp    dh,ch
  43d437:	(bad)  
  43d438:	fdivr  DWORD PTR [edx]
  43d43a:	cmc    
  43d43b:	(bad)  
  43d43c:	mov    edx,0xbafff53a
  43d441:	cmp    dh,ch
  43d443:	(bad)  
  43d444:	call   0xf943c983
  43d449:	cmp    dh,ch
  43d44b:	call   FWORD PTR [eax+0x3a]
  43d44e:	cmc    
  43d44f:	jmp    DWORD PTR [eax+0x39]
  43d452:	cmc    
  43d453:	inc    esi
  43d455:	loope  0x43d457
  43d457:	add    BYTE PTR [eax],bh
  43d459:	dec    ecx
  43d45a:	cmc    
  43d45b:	call   DWORD PTR [edx]
  43d45d:	dec    ecx
  43d45e:	cmc    
  43d45f:	push   DWORD PTR [eax+0x49]
  43d462:	cmc    
  43d463:	dec    DWORD PTR [eax+0x49]
  43d466:	cmc    
  43d467:	(bad)  
  43d468:	mov    esp,0xb2fff549
  43d46d:	dec    ecx
  43d46e:	cmc    
  43d46f:	call   eax
  43d471:	dec    ecx
  43d472:	cmc    
  43d473:	jmp    FWORD PTR [esi+0x49]
  43d476:	cmc    
  43d477:	jmp    DWORD PTR [ecx+ecx*2-0xb]
  43d47b:	dec    DWORD PTR [edx+0x70fff54f]
  43d481:	dec    edi
  43d482:	cmc    
  43d483:	jmp    FWORD PTR [edi]
  43d485:	inc    ebp
  43d486:	xchg   edx,eax
  43d487:	cld    
  43d488:	push   0x60fc924f
  43d48d:	dec    edi
  43d48e:	xchg   edx,eax
  43d48f:	cld    
  43d490:	pop    eax
  43d491:	xchg   ebx,eax
  43d492:	xchg   ecx,eax
  43d493:	cld    
  43d494:	push   eax
  43d495:	mov    cl,0x91
  43d497:	cld    
  43d498:	add    BYTE PTR [eax],al
  43d49a:	dec    eax
  43d49b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d49c:	xchg   ecx,eax
  43d49d:	cld    
  43d49e:	inc    eax
  43d49f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d4a0:	xchg   ecx,eax
  43d4a1:	cld    
  43d4a2:	cmp    bh,bh
  43d4a4:	nop
  43d4a5:	cld    
  43d4a6:	xor    BYTE PTR [ebp-0x6d],dl
  43d4a9:	cld    
  43d4aa:	sub    cl,ch
  43d4ac:	nop
  43d4ad:	cld    
  43d4ae:	and    BYTE PTR [ebx],bl
  43d4b0:	xchg   ecx,eax
  43d4b1:	cld    
  43d4b2:	sbb    bh,dh
  43d4b4:	add    eax,DWORD PTR [eax]
  43d4b6:	das    
  43d4b7:	in     al,0xfc
  43d4b9:	jmp    FWORD PTR [edi-0x50fffbf8]
  43d4bf:	jl     0x43d448
  43d4c1:	cld    
  43d4c2:	clc    
  43d4c3:	pop    es
  43d4c4:	add    al,0x0
  43d4c6:	scas   eax,DWORD PTR es:[edi]
  43d4c7:	cli    
  43d4c8:	add    eax,DWORD PTR [eax]
  43d4ca:	scas   eax,DWORD PTR es:[edi]
  43d4cb:	jb     0x43d454
  43d4cd:	cld    
  43d4ce:	loopne 0x43d4cb
  43d4d0:	add    eax,DWORD PTR [eax]
  43d4d2:	scas   eax,DWORD PTR es:[edi]
  43d4d3:	push   eax
  43d4d4:	mov    ah,bh
  43d4d6:	rol    BYTE PTR [edx],1
  43d4d8:	xchg   edx,eax
  43d4d9:	cld    
  43d4da:	enter  0x91f8,0xfc
  43d4de:	ror    al,0x87
  43d4e1:	cld    
  43d4e2:	mov    eax,0xaf000401
  43d4e7:	fadd   QWORD PTR [edi+0x3e5a8fc]
  43d4ed:	add    BYTE PTR [edi-0x6703784c],ch
  43d4f3:	stos   BYTE PTR es:[edi],al
  43d4f4:	xchg   esp,edi
  43d4f6:	nop
  43d4f7:	cld    
  43d4f8:	add    eax,DWORD PTR [eax]
  43d4fa:	scas   eax,DWORD PTR es:[edi]
  43d4fb:	adc    DWORD PTR [eax+eax*1],eax
  43d4fe:	add    BYTE PTR [eax],al
  43d500:	scas   eax,DWORD PTR es:[edi]
  43d501:	(bad)  
  43d503:	add    ebp,DWORD PTR [edi]
  43d505:	pop    esi
  43d506:	dec    esi
  43d507:	add    al,0x2f
  43d509:	pop    esi
  43d50a:	cli    
  43d50b:	add    ebp,DWORD PTR [edi]
  43d50d:	pop    esi
  43d50e:	in     al,dx
  43d50f:	add    ebp,DWORD PTR [edi]
  43d511:	pop    esi
  43d512:	xlat   BYTE PTR ds:[ebx]
  43d513:	add    ebp,DWORD PTR [edi]
  43d515:	pop    esi
  43d516:	xor    BYTE PTR [edi+0x439ec53],cl
  43d51c:	das    
  43d51d:	pop    esi
  43d51e:	jmp    0x43d523
  43d520:	das    
  43d521:	pop    esi
  43d522:	sti    
  43d523:	add    ebp,DWORD PTR [edi]
  43d525:	pop    esi
  43d526:	in     eax,0x3
  43d528:	das    
  43d529:	pop    esi
  43d52a:	jmp    0xeea20432
  43d52f:	add    ebp,DWORD PTR [edi]
  43d531:	pop    esi
  43d532:	jmp    0x139a:0xedde2f03
  43d539:	in     al,dx
  43d53a:	out    dx,eax
  43d53b:	call   0xec03:0x9a61ec0b
  43d542:	jnp    0x43d4de
  43d544:	sti    
  43d545:	jmp    0x43d5bc
  43d547:	call   0xebeb:0x9a85ebf3
  43d54e:	ja     0x43d4ea
  43d550:	jecxz  0x43d53d
  43d552:	sbb    DWORD PTR [edx-0x65d41425],0x9a1debd3
  43d55c:	retf   
  43d55d:	jmp    0x43d570
  43d55f:	call   0x0:0x9a07ebc3
  43d566:	mov    ebx,0xb39a0deb
  43d56b:	jmp    0x43d57c
  43d56d:	call   0xeba3:0x9d7bebab
  43d574:	jmp    0x9222047c
  43d579:	(bad)  
  43d57a:	xchg   ebx,eax
  43d57b:	jmp    0x43d57d
  43d57d:	cdq    
  43d57e:	mov    eax,0xb0aff7ea
  43d583:	jmp    0x3f7:0xea9f15f7
  43d58a:	lahf   
  43d58b:	jmp    0xd9f7:0xeab8ebf7
  43d592:	mov    esp,0xbca5f7ea
  43d597:	jmp    0xe9f7:0xeabcadf7
  43d59e:	sub    al,0xde
  43d5a0:	add    bl,ch
  43d5a2:	cs popf 
  43d5a4:	pop    ebp
  43d5a5:	sbb    eax,0x15738ae7
  43d5aa:	out    dx,al
  43d5ab:	jnp    0x43d61f
  43d5ad:	push   es
  43d5ae:	jge    0x43d58e
  43d5b0:	add    BYTE PTR [ecx],ah
  43d5b2:	sub    al,0x9a
  43d5b4:	or     dl,BYTE PTR [bp+si+0x3e7a]
  43d5b9:	sti    
  43d5ba:	(bad)  
  43d5bb:	jg     0x43d5bd
  43d5bd:	retf   0xa033
  43d5c0:	imul   edi,ebp,0xd469928f
  43d5c6:	(bad)  
  43d5c7:	xchg   edx,eax
  43d5c8:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  43d5ca:	add    BYTE PTR [eax],al
  43d5cc:	mov    DWORD PTR [ecx+0x3c],edi
  43d5cf:	enter  0x7f78,0x4c
  43d5d3:	rcl    BYTE PTR [edi+0x7f],0x0
  43d5d7:	push   0x2d
  43d5d9:	popf   
  43d5da:	pop    ebp
  43d5db:	mov    ch,0x0
  43d5dd:	jg     0x43d644
  43d5df:	mov    ecx,0xc464830a
  43d5e4:	push   0xffffff8b
  43d5e6:	mov    WORD PTR gs:[ecx],cs
  43d5e9:	fiadd  WORD PTR [eax]
  43d5eb:	add    eax,0x9a67a22b
  43d5f0:	push   0x50846c8b
  43d5f5:	and    DWORD PTR [ebp+0x0],0xffffffab
  43d5f9:	mov    edx,0x82bf4669
  43d5fe:	arpl   WORD PTR [edi+ebp*4+0x75],dx
  43d602:	arpl   WORD PTR [eax],ax
  43d604:	xlat   BYTE PTR ds:[ebx]
  43d605:	frstor [ebx+esi*2-0x26]
  43d609:	(bad)  
  43d60a:	push   ebp
  43d60b:	ins    DWORD PTR es:[edi],dx
  43d60c:	(bad)  
  43d60d:	mov    al,ds:0xdd0c0000
  43d612:	fs jae 0x43d60f
  43d615:	(bad)  
  43d616:	push   ebp
  43d617:	jo     0x43d608
  43d619:	xor    DWORD PTR [edi],0x0
  43d61c:	in     al,0xe0
  43d61e:	inc    edx
  43d61f:	jb     0x43d61c
  43d621:	jl     0x43d667
  43d623:	imul   esi,esp,0xf72578f
  43d629:	loop   0x43d664
  43d62b:	add    eax,DWORD PTR [edx]
  43d62d:	adc    DWORD PTR [edi+0x64],0x0
  43d631:	add    BYTE PTR [edx+0x7b],dl
  43d634:	push   esi
  43d635:	jb     0x43d66e
  43d637:	mov    WORD PTR [edi+0x57],gs
  43d63a:	push   es
  43d63b:	fimul  WORD PTR [edx+0x5]
  43d63e:	and    cl,BYTE PTR [ebp+0x7f32726c]
  43d644:	push   0x57
  43d646:	push   ss
  43d647:	fiadd  WORD PTR [ebx+0x6c7ec902]
  43d64d:	push   esp
  43d64e:	jmp    0x43d6c6
  43d650:	jo     0x43d6a2
  43d652:	neg    DWORD PTR [ecx-0x2229a898]
  43d658:	inc    ebx
  43d659:	add    cl,BYTE PTR [ecx-0x6baf9382]
  43d65f:	adc    BYTE PTR [ebp+0x41],0xfa
  43d663:	mov    DWORD PTR [esi+0x65],esp
  43d666:	test   DWORD PTR [eax+eax*1+0x42e2ea00],ecx
  43d66d:	imul   esp,DWORD PTR [edx+0x2f694c7e],0x10546162
  43d677:	dec    ebx
  43d678:	pop    edi
  43d679:	pop    ebp
  43d67a:	push   cs
  43d67b:	push   ebx
  43d67c:	add    esp,DWORD PTR ss:[bp+si+0x28]
  43d681:	sbb    bl,BYTE PTR [bp+si+0x4]
  43d685:	dec    eax
  43d686:	sub    ch,BYTE PTR [ebx+0x52]
  43d689:	je     0x43d688
  43d68b:	xchg   ebx,eax
  43d68c:	dec    esp
  43d68d:	ja     0x43d667
  43d68f:	test   BYTE PTR [ebx],0x5f
  43d692:	xor    esp,DWORD PTR [edi+edx*2-0x16ffff8c]
  43d699:	popf   
  43d69a:	push   0x50aaee63
  43d69f:	outs   dx,BYTE PTR ds:[esi]
  43d6a0:	(bad)  
  43d6a1:	xchg   esp,eax
  43d6a2:	inc    edi
  43d6a3:	je     0x43d677
  43d6a5:	mov    ds:0xc02f0025,eax
  43d6aa:	imul   DWORD PTR [ebx-0x44]
  43d6ad:	retf   0x5d52
  43d6b0:	mov    edi,0x2f0043bd
  43d6b5:	js     0x43d6ba
  43d6b7:	inc    ecx
  43d6b8:	mov    dl,bl
  43d6ba:	inc    ecx
  43d6bb:	imul   ecx,DWORD PTR [edx-0x74959c2e],0x926a6bbb
  43d6c5:	enter  0x50fc,0x2c
  43d6c9:	retf   0x7063
  43d6cc:	popa   
  43d6cd:	push   cs
  43d6ce:	push   edi
  43d6cf:	jno    0x43d731
  43d6d1:	and    DWORD PTR [esi],esi
  43d6d3:	addr16 pop ebx
  43d6d5:	sbb    al,BYTE PTR [edx+edx*8]
  43d6d8:	sub    esi,DWORD PTR [edx]
  43d6da:	pop    esi
  43d6db:	imul   ecx,DWORD PTR [esi+0x27],0x26
  43d6df:	addr16 dec edx
  43d6e1:	xor    BYTE PTR ds:0x601e7162,bh
  43d6e7:	arpl   WORD PTR [edi],bp
  43d6e9:	pop    edi
  43d6ea:	std    
  43d6eb:	cmp    al,0x3d
  43d6ed:	fiadd  WORD PTR [edx+eiz*2+0x51b9833b]
  43d6f4:	push   ss
  43d6f5:	jge    0x43d67b
  43d6f7:	push   eax
  43d6f8:	adc    dl,BYTE PTR [ecx+0x3e9]
  43d6fe:	mov    al,ds:0x86296e1
  43d703:	jb     0x43d6a4
  43d705:	sbb    DWORD PTR fs:[ebp+0x7a0e6580],ecx
  43d70c:	jl     0x43d752
  43d70e:	fnstenv [ebx+0x44]
  43d711:	popa   
  43d712:	sti    
  43d713:	fld    QWORD PTR [eax+0x0]
  43d716:	cli    
  43d717:	adc    BYTE PTR [ebp+0x3f],0xdd
  43d71b:	xor    BYTE PTR [edi],0x50
  43d71e:	das    
  43d71f:	fisubr WORD PTR [ebp+0x3]
  43d722:	adc    ch,BYTE PTR [esp+edi*1+0x63]
  43d726:	ret    
  43d727:	and    BYTE PTR [edi],0x6b
  43d72a:	rol    DWORD PTR [edx+0x6dbf6314],cl
  43d730:	adc    BYTE PTR [esi-0x32],ah
  43d733:	nop
  43d734:	jmp    0x2622ee3c
  43d739:	dec    edi
  43d73a:	lahf   
  43d73b:	jp     0x43d73d
  43d73d:	popa   
  43d73e:	js     0x43d7b2
  43d740:	add    al,0x4c
  43d742:	jo     0x43d7bc
  43d744:	std    
  43d745:	addr16 mov esi,ds
  43d748:	sbb    eax,DWORD PTR [edx+eax*2]
  43d74b:	jp     0x43d743
  43d74d:	push   eax
  43d74e:	mov    WORD PTR [esi+0x7a8b65c8],ss
  43d754:	mov    esp,0xbbe23a03
  43d759:	pop    esi
  43d75a:	push   edx
  43d75b:	jno    0x43d711
  43d75d:	pop    esi
  43d75e:	xor    DWORD PTR [esi-0x45],0x5e
  43d762:	add    BYTE PTR [eax],al
  43d764:	jo     0x43d6e8
  43d766:	jmp    0x1205c6e
  43d76b:	scas   al,BYTE PTR es:[edi]
  43d76c:	dec    eax
  43d76d:	jne    0x43d7d1
  43d76f:	enter  0x9a50,0x67
  43d773:	mov    al,BYTE PTR [edi-0x22]
  43d776:	add    BYTE PTR [edx+0x2e],bh
  43d779:	popf   
  43d77a:	pop    ebp
  43d77b:	popf   
  43d77c:	push   eax
  43d77d:	jg     0x43d7e2
  43d77f:	sub    bh,0x74
  43d782:	ins    DWORD PTR es:[edi],dx
  43d783:	xchg   edi,eax
  43d784:	loopne 0x43d763
  43d786:	add    BYTE PTR [ebx],cl
  43d788:	cs lahf 
  43d78a:	data16 xor al,0x7e
  43d78e:	popa   
  43d78f:	jge    0x43d796
  43d791:	jo     0x43d7f0
  43d793:	sub    bl,cl
  43d795:	jle    0x43d803
  43d797:	push   eax
  43d798:	rol    BYTE PTR [esi-0x7729c59c],1
  43d79e:	ins    BYTE PTR es:[edi],dx
  43d79f:	inc    eax
  43d7a0:	int3   
  43d7a1:	jae    0x43d7a3
  43d7a3:	add    BYTE PTR [eax],ch
  43d7a5:	call   0x3b43:0x7ae5485d
  43d7ac:	loop   0x43d81f
  43d7ae:	imul   ecx,DWORD PTR [edx-0x2e],0xc80c5379
  43d7b5:	jno    0x43d820
  43d7b7:	push   cs
  43d7b8:	(bad)  
  43d7b9:	fiadd  WORD PTR [eax]
  43d7bb:	lods   al,BYTE PTR ds:[esi]
  43d7bc:	sub    DWORD PTR [ebp-0x786d019c],ebx
  43d7c2:	fs sbb al,0x8d
  43d7c5:	jp     0x43d82e
  43d7c7:	or     al,BYTE PTR [eax]
  43d7c9:	add    BYTE PTR [eax-0x22],ch
  43d7cc:	add    BYTE PTR [edi-0xa9964d5],al
  43d7d2:	xchg   DWORD PTR [eax+0x43],edi
  43d7d5:	fist   DWORD PTR [ebx+0x72]
  43d7d8:	imul   ecx,edx,0xcc537a53
  43d7de:	dec    ecx
  43d7df:	jb     0x43d84a
  43d7e1:	mov    esi,0xde4e
  43d7e6:	aaa    
  43d7e7:	loop   0x43d825
  43d7e9:	gs cli 
  43d7eb:	jne    0x43d859
  43d7ed:	gs xchg ebp,eax
  43d7ef:	nop
  43d7f0:	pop    edi
  43d7f1:	je     0x43d7e2
  43d7f3:	jg     0x43d84c
  43d7f5:	ins    BYTE PTR es:[edi],dx
  43d7f6:	jne    0x43d86d
  43d7f8:	push   ebp
  43d7f9:	je     0x43d7ba
  43d7fb:	jnp    0x43d867
  43d7fd:	add    BYTE PTR [esi-0x3d9abe20],bl
  43d803:	popf   
  43d804:	imul   esp,DWORD PTR [ebx+edx*1-0x79],0x7cb74863
  43d80c:	pop    esp
  43d80d:	ins    BYTE PTR es:[edi],dx
  43d80e:	mov    bl,0xa3
  43d810:	add    BYTE PTR [eax],al
  43d812:	icebp  
  43d813:	fiadd  WORD PTR [edi+0x75]
  43d816:	jecxz  0x43d7a7
  43d818:	outs   dx,DWORD PTR ds:[esi]
  43d819:	push   eax
  43d81a:	repz (bad) 
  43d81c:	bound  ebp,QWORD PTR [edi+0x4]
  43d81f:	jge    0x43d878
  43d821:	outs   dx,BYTE PTR ds:[esi]
  43d822:	in     eax,0x74
  43d824:	xor    eax,0x6c7c136f
  43d829:	gs add al,0xe2
  43d82c:	and    eax,DWORD PTR [edx]
  43d82e:	add    BYTE PTR [eax],al
  43d830:	adc    DWORD PTR [ebp+0x6c],esi
  43d833:	dec    esi
  43d834:	out    0x85,eax
  43d836:	pop    edi
  43d837:	jbe    0x43d85c
  43d839:	scas   eax,DWORD PTR es:[edi]
  43d83a:	outs   dx,DWORD PTR ds:[esi]
  43d83b:	jae    0x43d87f
  43d83d:	ja     0x43d8aa
  43d83f:	dec    ecx
  43d840:	sub    BYTE PTR [eax+0x69],bh
  43d843:	add    BYTE PTR [edx-0x25],dh
  43d846:	inc    ecx
  43d847:	adc    ch,BYTE PTR gs:[eax-0x7cfa8d9d]
  43d84e:	imul   ebp,DWORD PTR [esi+0x53],0x6f005192
  43d855:	loope  0x43d88c
  43d857:	jb     0x43d83c
  43d859:	jp     0x43d8c7
  43d85b:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  43d85d:	jbe    0x43d8ca
  43d85f:	outs   dx,DWORD PTR ds:[esi]
  43d860:	das    
  43d861:	add    ebp,DWORD PTR [ecx+0x54]
  43d864:	inc    edi
  43d865:	or     DWORD PTR [ecx+0x5f],ebp
  43d868:	dec    ebx
  43d869:	test   DWORD PTR [ebx],0x54342c80
  43d86f:	arpl   WORD PTR [ecx+0x47],dx
  43d872:	dec    esi
  43d873:	imul   ecx,DWORD PTR [edx+ebx*1+0x4f],0xffca2f6d
  43d87b:	push   ecx
  43d87c:	push   ss
  43d87d:	dec    ecx
  43d87e:	push   eax
  43d87f:	jae    0x43d88f
  43d881:	pop    ebx
  43d882:	dec    edx
  43d883:	outs   dx,BYTE PTR ds:[esi]
  43d884:	adc    bl,BYTE PTR [edx+0x49]
  43d887:	js     0x43d8b8
  43d889:	test   esi,edi
  43d88b:	dec    edi
  43d88c:	std    
  43d88d:	push   ebx
  43d88e:	pop    edi
  43d88f:	arpl   sp,di
  43d891:	addr16 push cs
  43d893:	add    BYTE PTR cs:[eax],al
  43d896:	icebp  
  43d897:	pop    ebp
  43d898:	dec    esi
  43d899:	ins    DWORD PTR es:[edi],dx
  43d89a:	sti    
  43d89b:	mov    ds:0xa72c97fc,eax
  43d8a0:	dec    esi
  43d8a1:	imul   ecx,esp,0x1c6d4d91
  43d8a7:	leave  
  43d8a8:	inc    edx
  43d8a9:	arpl   di,dx
  43d8ab:	mov    ds:0x652f0039,al
  43d8b0:	cld    
  43d8b1:	cmp    al,0xbd
  43d8b3:	xchg   ecx,eax
  43d8b4:	arpl   WORD PTR [edx+edx*8-0x36],si
  43d8b8:	popa   
  43d8b9:	imul   eax,ebx,0x9f6c5fce
  43d8bf:	or     BYTE PTR [esi],cl
  43d8c1:	dec    ebp
  43d8c2:	xchg   ecx,eax
  43d8c3:	(bad)  
  43d8c4:	dec    esp
  43d8c5:	ins    DWORD PTR es:[edi],dx
  43d8c6:	xchg   esp,esp
  43d8c8:	dec    edi
  43d8c9:	add    BYTE PTR [edi],ch
  43d8cb:	stos   BYTE PTR es:[edi],al
  43d8cc:	jmp    FWORD PTR [ebx+0x7c]
  43d8cf:	jmp    0x43d91e
  43d8d1:	ins    BYTE PTR es:[edi],dx
  43d8d2:	mov    bl,ch
  43d8d4:	inc    ebx
  43d8d5:	add    BYTE PTR [edi],ch
  43d8d7:	fdiv   st(5),st
  43d8d9:	dec    edx
  43d8da:	jp     0x43d8ba
  43d8dc:	int    0x57
  43d8de:	push   eax
  43d8df:	mov    al,ds:0x8a4c57e0
  43d8e4:	mov    esi,0xbc7a5038
  43d8e9:	inc    esp
  43d8ea:	inc    edi
  43d8eb:	jg     0x43d8a8
  43d8ed:	add    esi,edx
  43d8ef:	fbstp  TBYTE PTR [ecx-0x57919f9a]
  43d8f5:	pop    edi
  43d8f6:	dec    ebx
  43d8f7:	jne    0x43d8c3
  43d8f9:	add    eax,DWORD PTR [eax]
  43d8fb:	add    cl,al
  43d8fd:	fnstenv [edi-0x7395e6a6]
  43d903:	bound  edx,QWORD PTR [ebx]
  43d905:	(bad)  
  43d906:	xchg   esp,eax
  43d907:	or     WORD PTR [edi-0x64],sp
  43d90b:	dec    ebx
  43d90c:	das    
  43d90d:	fisubr WORD PTR [edx]
  43d90f:	add    eax,0x67887af9
  43d914:	fild   QWORD PTR [edi+0x7e]
  43d917:	fs or  al,0x71
  43d91a:	jp     0x43d95a
  43d91c:	or     al,0x73
  43d91e:	dec    esi
  43d91f:	push   esi
  43d920:	loopne 0x43d8ff
  43d922:	fld    DWORD PTR [edi]
  43d924:	std    
  43d925:	jbe    0x43d982
  43d927:	pop    eax
  43d928:	fdivr  QWORD PTR [esi+0x35]
  43d92b:	xor    al,0xc1
  43d92d:	je     0x43d964
  43d92f:	addr16 jmp 0xc3de:0x2f4c1c69
  43d937:	pop    es
  43d938:	fnsave [esi+0x3b]
  43d93b:	pop    eax
  43d93c:	mov    esp,0x9b430d7e
  43d941:	jb     0x43d949
  43d943:	gs ins BYTE PTR es:[edi],dx
  43d945:	jmpw   0x1e4c
  43d949:	fldcw  WORD PTR [esi]
  43d94b:	push   esi
  43d94c:	mov    BYTE PTR [edx+0x4],ch
  43d94f:	xor    al,0x99
  43d951:	jae    0x43d95d
  43d953:	addr16 xchg edx,eax
  43d955:	outs   dx,DWORD PTR ds:[esi]
  43d956:	add    BYTE PTR [eax+edx*4],ah
  43d959:	ja     0x43d9c2
  43d95b:	sti    
  43d95c:	fiadd  WORD PTR gs:[eax]
  43d95f:	lods   al,BYTE PTR ds:[esi]
  43d960:	add    BYTE PTR [eax],al
  43d962:	xor    DWORD PTR [edx+0x73],esi
  43d965:	aad    0x7a
  43d967:	and    DWORD PTR [ebp-0x27],0x24008d75
  43d96e:	sub    eax,0x73bd5d9d
  43d973:	outs   dx,DWORD PTR ds:[esi]
  43d974:	jb     0x43d931
  43d976:	dec    ecx
  43d977:	js     0x43d9e5
  43d979:	popf   
  43d97a:	push   esp
  43d97b:	je     0x43d9da
  43d97d:	enter  0x9b48,0x5c
  43d981:	jmp    0xa64646b2
  43d986:	or     DWORD PTR [edx+0x53],ebp
  43d989:	nop
  43d98a:	add    ebp,DWORD PTR [edx+0x5d]
  43d98d:	jl     0x43d9e7
  43d98f:	jnp    0x43d9f6
  43d991:	mov    WORD PTR [ecx+edx*4],gs
  43d994:	cld    
  43d995:	cdq    
  43d996:	or     DWORD PTR [edx+0x3d],ebp
  43d999:	xchg   DWORD PTR [eax],edx
  43d99b:	xchg   ebp,eax
  43d99c:	pop    esi
  43d99d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d99e:	aad    0x71
  43d9a0:	pop    ebp
  43d9a1:	jmp    0x3a4056d2
  43d9a6:	(bad)  
  43d9a7:	imul   edi,DWORD PTR [esi],0x507ecf40
  43d9ad:	ds bnd ja 0x43da1d
  43d9b1:	dec    esp
  43d9b2:	fstp   QWORD PTR [esi+0x7c2ce978]
  43d9b8:	cld    
  43d9b9:	sbb    esi,eax
  43d9bb:	imul   edi,DWORD PTR [esi],0x4c7ecf40
  43d9c1:	adc    BYTE PTR [esi+0xc4007f],cl
  43d9c7:	add    BYTE PTR [edi],dh
  43d9c9:	lea    esi,[edx+0x0]
  43d9cc:	ja     0x43da4d
  43d9ce:	add    BYTE PTR ds:[edi-0x63ffff81],cl
  43d9d5:	fadd   DWORD PTR [ecx+0x65]
  43d9d8:	cli    
  43d9d9:	cwde   
  43d9da:	pop    edi
  43d9db:	ins    BYTE PTR es:[edi],dx
  43d9dc:	sub    ebx,DWORD PTR [ecx-0x7e0b8b94]
  43d9e2:	push   esi
  43d9e3:	jne    0x43d9ef
  43d9e5:	jbe    0x43da4c
  43d9e7:	push   edi
  43d9e8:	(bad)  
  43d9e9:	faddp  st(0),st
  43d9eb:	add    edx,DWORD PTR [ebp+esi*2-0x7e779ba9]
  43d9f2:	fs gs (bad) 
  43d9f5:	fimul  WORD PTR [ecx+0x638c9500]
  43d9fb:	popa   
  43d9fc:	jp     0x43da73
  43d9fe:	inc    edx
  43d9ff:	imul   esi,DWORD PTR [edx+0x75],0xd9e90051
  43da06:	inc    edx
  43da07:	ins    BYTE PTR es:[edi],dx
  43da08:	mov    ebx,0xaf46688f
  43da0d:	and    BYTE PTR [ebx+0x42],0xbb
  43da11:	js     0x43da75
  43da13:	gs add al,0x90
  43da16:	add    BYTE PTR [eax],al
  43da18:	xchg   ecx,ebx
  43da1a:	inc    ecx
  43da1b:	gs cli 
  43da1d:	cwde   
  43da1e:	pop    edi
  43da1f:	ins    BYTE PTR es:[edi],dx
  43da20:	stos   DWORD PTR es:[edi],eax
  43da21:	scas   eax,DWORD PTR es:[edi]
  43da22:	pop    edi
  43da23:	jp     0x43da20
  43da25:	xchg   esp,eax
  43da26:	js     0x43da28
  43da28:	add    eax,0x6545d6
  43da2d:	add    dl,bh
  43da2f:	popf   
  43da30:	push   edi
  43da31:	jae    0x43da2d
  43da33:	xchg   esp,eax
  43da34:	data16 jb 0x43da18
  43da37:	pop    DWORD PTR [eax]
  43da39:	add    BYTE PTR [ecx+ebx*8-0x64059abf],al
  43da40:	pop    edi
  43da41:	ins    BYTE PTR es:[edi],dx
  43da42:	jmp    0x43d9e9
  43da44:	pop    edi
  43da45:	ins    DWORD PTR es:[edi],dx
  43da46:	cmp    ebx,edx
  43da48:	rol    BYTE PTR [eax],cl
  43da4a:	dec    edx
  43da4b:	ja     0x43dab1
  43da4d:	gs das 
  43da4f:	ret    
  43da50:	imul   eax,DWORD PTR [edx-0x7a],0x2f5168e3
  43da57:	dec    ebx
  43da58:	std    
  43da59:	inc    eax
  43da5a:	mov    ch,bl
  43da5c:	cmp    eax,0x35d28b67
  43da61:	push   0xffffff89
  43da63:	loopne 0x43dab6
  43da65:	imul   ecx,DWORD PTR [esi+0x3],0x55
  43da69:	imul   edx,DWORD PTR [ecx+0x35],0x194e4845
  43da70:	pusha  
  43da71:	ins    BYTE PTR es:[edi],dx
  43da72:	dec    edx
  43da73:	test   DWORD PTR [ebx],0x692f2dce
  43da79:	pop    edi
  43da7a:	aas    
  43da7b:	inc    ebp
  43da7c:	imul   edi,DWORD PTR [edi],0x5d571b4b
  43da82:	das    
  43da83:	rol    BYTE PTR [ecx],0x48
  43da86:	adc    dl,BYTE PTR [esi+0x54]
  43da89:	inc    edx
  43da8a:	sbb    eax,0x2f00695a
  43da8f:	cmp    eax,0x4102
  43da94:	or     cl,BYTE PTR [ebx+0x34]
  43da97:	outs   dx,BYTE PTR ds:[esi]
  43da98:	sbb    BYTE PTR [ecx+ebp*2+0x6d],dl
  43da9c:	cld    
  43da9d:	imul   ebx,DWORD PTR cs:[edi-0x1],0x2dcb03f6
  43daa5:	aas    
  43daa6:	imul   ebx,DWORD PTR [edi-0x21],0xce6352b3
  43daad:	mov    bl,BYTE PTR [edi+0x0]
  43dab0:	das    
  43dab1:	out    dx,al
  43dab2:	add    al,BYTE PTR [ebx-0x29]
  43dab5:	popf   
  43dab6:	pop    eax
  43dab7:	push   eax
  43dab8:	mov    ebp,0xbc636187
  43dabd:	mov    ds:0xc43357fc,eax
  43dac2:	pop    edi
  43dac3:	je     0x43daaf
  43dac5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43dac6:	push   edx
  43dac7:	imul   ebx,DWORD PTR [ebp-0x74a2d322],0xa603e97b
  43dad1:	fisub  WORD PTR [esi]
  43dad3:	addr16 fwait
  43dad5:	popf   
  43dad6:	neg    BYTE PTR [esi+0x7f]
  43dad9:	imul   esi,ebp,0x66
  43dadc:	xchg   ecx,eax
  43dadd:	nop
  43dade:	or     BYTE PTR [edi-0x74],bl
  43dae1:	mov    ecx,ebp
  43dae3:	add    eax,ecx
  43dae5:	fstp   DWORD PTR [edx]
  43dae7:	pusha  
  43dae8:	dec    esp
  43dae9:	jnp    0x43dac4
  43daeb:	add    edi,DWORD PTR [ebx]
  43daed:	fcomp  QWORD PTR [esi-0x416c9c9a]
  43daf3:	addr16 pop esp
  43daf5:	jb     0x43dab3
  43daf7:	inc    ebp
  43daf8:	add    BYTE PTR [eax],al
  43dafa:	push   eax
  43dafb:	jb     0x43dac1
  43dafd:	cmp    eax,0x34bc7360
  43db02:	das    
  43db03:	fisub  WORD PTR [esp+eax*1-0xe]
  43db07:	imul   edi,DWORD PTR [edx+eiz*2+0x55a47b23],0xc
  43db0f:	jo     0x43da9e
  43db11:	xor    al,0x2f
  43db13:	ficom  WORD PTR [esi]
  43db15:	or     dh,bh
  43db17:	jle    0x43da99
  43db19:	push   edi
  43db1a:	in     eax,dx
  43db1b:	jo     0x43db98
  43db1d:	ds cld 
  43db1f:	jno    0x43db8e
  43db21:	pop    edx
  43db22:	push   DWORD PTR [ecx-0x7c]
  43db25:	cmp    al,0xd1
  43db27:	jae    0x43dba5
  43db29:	pusha  
  43db2a:	jecxz  0x43db98
  43db2c:	jmp    0x461f0134
  43db31:	push   ecx
  43db32:	jecxz  0x43db9f
  43db34:	dec    edx
  43db35:	arpl   bx,bx
  43db37:	mov    cl,ch
  43db39:	add    edi,DWORD PTR [esp+ebx*8+0x6fcc542e]
  43db40:	sbb    al,0x56
  43db42:	int3   
  43db43:	outs   dx,DWORD PTR ds:[esi]
  43db44:	add    BYTE PTR ds:0xa800ddfa,bh
  43db4a:	sub    eax,0x6e1d5d9d
  43db4f:	imul   esi,DWORD PTR [edx+0x1b],0xffffff90
  43db53:	je     0x43dbc1
  43db55:	cmp    DWORD PTR [ebp+0x75],edi
  43db58:	arpl   WORD PTR [esi+ebx*2],ax
  43db5b:	jno    0x43dba6
  43db5d:	or     eax,0xa02b0000
  43db62:	add    ah,BYTE PTR [esi]
  43db64:	nop
  43db65:	push   0x50
  43db67:	sti    
  43db68:	push   ebp
  43db69:	ins    BYTE PTR es:[edi],dx
  43db6a:	popa   
  43db6b:	cmc    
  43db6c:	push   ecx
  43db6d:	mov    ?,WORD PTR [edx-0x2a]
  43db70:	dec    edx
  43db71:	ja     0x43dbd7
  43db73:	les    ebx,FWORD PTR [edi]
  43db75:	push   0x72
  43db77:	shl    BYTE PTR [edx+0x7d],0x4f
  43db7b:	jmp    0xae467dac
  43db80:	dec    ecx
  43db81:	push   0x50
  43db83:	mov    ebx,0xbd616c55
  43db88:	dec    ecx
  43db89:	mov    ?,WORD PTR [edx-0x42]
  43db8c:	adc    dh,BYTE PTR [edi+0x64]
  43db8f:	mov    WORD PTR [ebp+0x74],fs
  43db92:	ins    BYTE PTR es:[edi],dx
  43db93:	mov    dh,0x2c
  43db95:	call   0x724d969d
  43db9a:	pop    ebp
  43db9b:	mov    bh,bl
  43db9d:	jp     0x43dbe4
  43db9f:	jl     0x43db79
  43dba1:	jp     0x43dc1b
  43dba3:	jmp    0xae4737d4
  43dba8:	or     DWORD PTR [edx+0x4c],ebp
  43dbab:	cmp    esi,0xe84d617a
  43dbb1:	je     0x43dc19
  43dbb3:	push   ebp
  43dbb4:	into   
  43dbb5:	gs ins BYTE PTR es:[edi],dx
  43dbb7:	jmp    0x3a412ae8
  43dbbc:	into   
  43dbbd:	imul   ecx,DWORD PTR [eax+eax*1-0x22],0x616387
  43dbc5:	add    dl,dh
  43dbc7:	xchg   esi,eax
  43dbc8:	imul   ebp,DWORD PTR [esi-0xe],0x1674787c
  43dbcf:	fild   DWORD PTR [edx+eax*1+0x51]
  43dbd3:	jge    0x43dc41
  43dbd5:	push   eax
  43dbd6:	xor    al,0x83
  43dbd8:	push   ebp
  43dbd9:	gs xor eax,0x16643f87
  43dbdf:	(bad)  
  43dbe1:	add    DWORD PTR [ecx+0x7d],edx
  43dbe4:	ins    BYTE PTR es:[edi],dx
  43dbe5:	dec    eax
  43dbe6:	daa    
  43dbe7:	test   BYTE PTR [esp+ebp*2+0x23],bl
  43dbeb:	mov    eax,ds:0x88e9666a
  43dbf0:	imul   esp,DWORD PTR [ecx+0x2],0xffffff82
  43dbf4:	imul   ebp,DWORD PTR [esi-0x3a],0x8a0334da
  43dbfb:	adc    DWORD PTR [edi+0x64],0xffffffaa
  43dbff:	adc    DWORD PTR [esi+0x72],0x416f88f7
  43dc06:	(bad)  
  43dc07:	fisubr DWORD PTR [edi]
  43dc09:	add    DWORD PTR [eax-0x2f9b957f],eax
  43dc0f:	and    DWORD PTR [esi+0x73],0x6c5f9cc2
  43dc16:	mov    bl,0xab
  43dc18:	add    BYTE PTR [eax],al
  43dc1a:	push   0x86942d9
  43dc1f:	jg     0x43dc56
  43dc21:	ins    BYTE PTR es:[edi],dx
  43dc22:	cdq    
  43dc23:	xchg   DWORD PTR [ebx+0x0],esp
  43dc26:	rcr    ecx,cl
  43dc28:	inc    edx
  43dc29:	imul   eax,DWORD PTR [eax],0x4a7ea800
  43dc2f:	fimul  WORD PTR gs:[esi+0x7cfa6942]
  43dc36:	push   ecx
  43dc37:	add    bh,al
  43dc39:	fidiv  DWORD PTR ds:0x5d922f72
  43dc3f:	je     0x43dc13
  43dc41:	mov    eax,0x93ca6e55
  43dc46:	push   eax
  43dc47:	imul   edi,DWORD PTR [ebp+0x2f00339d],0x8350f821
  43dc51:	clc    
  43dc52:	inc    ebx
  43dc53:	arpl   WORD PTR [ebx-0x798b9ffa],bx
  43dc59:	cmc    
  43dc5a:	popa   
  43dc5b:	cmp    eax,0x694fe580
  43dc60:	fwait
  43dc61:	loop   0x43dc92
  43dc63:	arpl   WORD PTR [eax+ebx*8+0x54],di
  43dc67:	imul   ecx,DWORD PTR [ecx+0x2f00610e],0x584affe7
  43dc71:	aad    0x60
  43dc73:	inc    edx
  43dc74:	push   esi
  43dc75:	mov    bl,0x60
  43dc77:	inc    ebx
  43dc78:	push   edi
  43dc79:	xchg   esp,eax
  43dc7a:	add    ecx,DWORD PTR [ecx]
  43dc7c:	sub    ebx,DWORD PTR [ecx-0x4cad92a0]
  43dc82:	inc    eax
  43dc83:	jb     0x43dccf
  43dc85:	mov    ch,0x47
  43dc87:	add    BYTE PTR [edi],ch
  43dc89:	sub    al,0xf8
  43dc8b:	push   ecx
  43dc8c:	inc    esi
  43dc8d:	cdq    
  43dc8e:	inc    edi
  43dc8f:	jae    0x43dc91
  43dc91:	add    BYTE PTR [esi],cl
  43dc93:	fwait
  43dc94:	xor    ebp,DWORD PTR [esi+0x10]
  43dc97:	jnp    0x43dcf9
  43dc99:	pop    ebp
  43dc9a:	and    eax,edi
  43dc9c:	add    ecx,ebp
  43dc9e:	mov    WORD PTR cs:[eax+0x74],fs
  43dca2:	repz js 0x43dcf9
  43dca5:	jb     0x43dcb1
  43dca7:	jnp    0x43dced
  43dca9:	jo     0x43dcbd
  43dcab:	je     0x43dcb0
  43dcad:	pop    es
  43dcae:	sub    eax,0xfb74608c
  43dcb3:	pop    ebx
  43dcb4:	arpl   WORD PTR [edi-0x34],sp
  43dcb7:	fisttp QWORD PTR [eax+0x58]
  43dcba:	repz dec edi
  43dcbc:	push   ecx
  43dcbd:	push   edx
  43dcbe:	int3   
  43dcbf:	push   eax
  43dcc0:	jmp    0xd24b:0x3ae28403
  43dcc7:	push   ecx
  43dcc8:	inc    ebp
  43dcc9:	push   edi
  43dcca:	jecxz  0x43dd12
  43dccc:	inc    ebp
  43dccd:	pop    edi
  43dcce:	fisttp DWORD PTR [eax+ebp*1+0x5b]
  43dcd2:	fwait
  43dcd3:	inc    ebx
  43dcd4:	push   cs
  43dcd5:	pop    ebx
  43dcd6:	xchg   esp,eax
  43dcd7:	inc    ebx
  43dcd8:	jmp    0x9b5f:0x1edfb703
  43dcdf:	xor    al,BYTE PTR [ecx]
  43dce1:	push   edi
  43dce2:	mov    WORD PTR [eax],?
  43dce4:	neg    DWORD PTR [ecx-0x74]
  43dce7:	daa    
  43dce8:	adc    BYTE PTR [edx-0x7a],ah
  43dceb:	push   eax
  43dcec:	add    eax,0xff477b63
  43dcf1:	pop    ecx
  43dcf2:	das    
  43dcf3:	fsubp  st(2),st
  43dcf5:	add    eax,0x436e0000
  43dcfa:	(bad)  
  43dcfb:	aaa    
  43dcfc:	inc    esi
  43dcfd:	inc    ecx
  43dcfe:	leave  
  43dcff:	push   edi
  43dd00:	jnp    0x43dd49
  43dd02:	mov    ebp,0x4ede2f5e
  43dd07:	push   es
  43dd08:	push   0x5362ac51
  43dd0d:	xor    BYTE PTR [ebp-0x49d1b49e],bh
  43dd13:	push   ebp
  43dd14:	das    
  43dd15:	fiadd  WORD PTR [eax-0x69bd11fa]
  43dd1b:	xor    DWORD PTR [esi],eax
  43dd1d:	dec    edx
  43dd1e:	lea    edx,[esi+0xc]
  43dd21:	sub    al,0x89
  43dd23:	push   esi
  43dd24:	or     al,0x24
  43dd26:	ja     0x43dd7d
  43dd28:	fisttp QWORD PTR [esi+ecx*4+0x4e]
  43dd2c:	add    al,0x43
  43dd2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43dd2f:	pop    eax
  43dd30:	cld    
  43dd31:	dec    ebx
  43dd32:	add    DWORD PTR [ebp+0x1c],edi
  43dd35:	inc    edi
  43dd36:	push   0x7f
  43dd38:	lock add DWORD PTR cs:[ebp+0x555e1f2d],ebp
  43dd40:	jmp    0x6d47:0xe85b7350
  43dd47:	xor    eax,0x485e4be3
  43dd4c:	iret   
  43dd4d:	fld    QWORD PTR [eax]
  43dd4f:	pusha  
  43dd50:	xor    BYTE PTR [ecx],ch
  43dd52:	pop    esi
  43dd53:	cmp    eax,0x4473465f
  43dd58:	mov    WORD PTR [edx+0x51],es
  43dd5b:	sbb    eax,DWORD PTR [eax]
  43dd5d:	add    BYTE PTR [ebp+eax*2+0x73],dh
  43dd61:	adc    BYTE PTR [edi+0x53],bh
  43dd64:	add    DWORD PTR [esp+ebp*1+0x19],ebx
  43dd68:	jae    0x43dd6e
  43dd6a:	mov    WORD PTR [edx+0x5e],ss
  43dd6d:	sbb    eax,0x85e4c5b
  43dd72:	(bad)  
  43dd73:	fiadd  WORD PTR [eax]
  43dd75:	fsubr  st,st(1)
  43dd77:	cs push 0x5
  43dd7a:	sbb    BYTE PTR [ecx],0x69
  43dd7d:	enter  0x3282,0x68
  43dd81:	lods   al,BYTE PTR ds:[esi]
  43dd82:	popa   
  43dd83:	dec    edx
  43dd84:	ins    DWORD PTR es:[edi],dx
  43dd85:	shl    BYTE PTR [edx+0x53],0x6d
  43dd89:	les    ebp,FWORD PTR [ebx*4+0x49609cfc]
  43dd90:	inc    eax
  43dd91:	les    esp,FWORD PTR [eax+0x30]
  43dd94:	(bad)  
  43dd95:	(bad)  
  43dd98:	add    DWORD PTR [ecx],esp
  43dd9a:	mov    al,ds:0x639a652f
  43dd9f:	aas    
  43dda0:	ins    DWORD PTR es:[edi],dx
  43dda1:	mov    bh,0xd
  43dda3:	dec    edx
  43dda4:	outs   dx,BYTE PTR ds:[esi]
  43dda5:	mov    WORD PTR [esi+ebx*4],gs
  43dda8:	cld    
  43dda9:	mov    ah,0xe1
  43ddab:	dec    ebx
  43ddac:	data16 add BYTE PTR [edi-0x548ba7cb],bl
  43ddb3:	packuswb mm5,QWORD PTR [edi-0x4b]
  43ddb7:	cmp    al,0x66
  43ddb9:	jae    0x43de11
  43ddbb:	fnstsw ax
  43ddbd:	add    DWORD PTR [ecx],ecx
  43ddbf:	cmp    eax,0x456d
  43ddc4:	into   
  43ddc5:	cmp    BYTE PTR [ebp+0x43],ch
  43ddc8:	icebp  
  43ddc9:	cmp    eax,0x2fee5464
  43ddce:	fs popa 
  43ddd0:	jmp    0x6430:0x5009ae1
  43ddd7:	popa   
  43ddd8:	push   0x3d
  43ddda:	dec    esp
  43dddb:	jne    0x43de37
  43dddd:	cmp    eax,0xdf065779
  43dde2:	ret    
  43dde3:	add    al,0x5a
  43dde5:	ss inc cx
  43dde8:	xor    dh,BYTE PTR [esi]
  43ddea:	push   0x63
  43ddec:	push   ss
  43dded:	ffreep st(2)
  43ddef:	add    al,0x1a
  43ddf1:	ss inc si
  43ddf4:	hlt    
  43ddf5:	cmp    eax,0xe0300064
  43ddfa:	inc    ecx
  43ddfb:	fimul  DWORD PTR gs:[edi]
  43ddfe:	jo     0x43de73
  43de00:	cli    
  43de01:	cmp    eax,0x38eb446c
  43de06:	pop    eax
  43de07:	jne    0x43ddfb
  43de09:	sub    dl,BYTE PTR [ecx+ecx*2-0x5e]
  43de0d:	inc    ecx
  43de0e:	imul   esp,DWORD PTR [edi+0x7b],0x41
  43de12:	bound  esp,QWORD PTR [ebp-0x3a]
  43de15:	fiadd  WORD PTR [esi+0x2]
  43de18:	fnstcw WORD PTR ds:0x33e4506d
  43de1e:	push   esi
  43de1f:	gs mov ch,0x2f
  43de22:	dec    ebp
  43de23:	imul   esp,DWORD PTR [ebx+0x663d],0x872f00
  43de2d:	ins    BYTE PTR es:[edi],dx
  43de2e:	cld    
  43de2f:	jo     0x43de82
  43de31:	pop    ebp
  43de32:	or     dl,BYTE PTR [ebp+0x27]
  43de35:	add    BYTE PTR [edi],ch
  43de37:	add    eax,0x63db4103
  43de3c:	popa   
  43de3d:	pop    edi
  43de3e:	sar    DWORD PTR [ecx+0x60],cl
  43de41:	imul   ecx,eax,0x36
  43de44:	inc    esi
  43de45:	dec    ebp
  43de46:	(bad)  ds:0x9bc7351
  43de4c:	inc    ebp
  43de4d:	add    BYTE PTR [edi],ch
  43de4f:	dec    ebx
  43de50:	add    al,BYTE PTR [ecx-0x2e]
  43de53:	sbb    BYTE PTR [edx],dh
  43de55:	ins    DWORD PTR es:[edi],dx
  43de56:	retf   0x4116
  43de59:	arpl   WORD PTR [ecx-0x6493adda],dx
  43de5f:	repnz xor eax,0x57f18e4c
  43de65:	jae    0x43ddf5
  43de67:	loopne 0x43deca
  43de69:	add    BYTE PTR [edi],ch
  43de6b:	cmp    esp,0x40f38a40
  43de71:	addr16 jl 0x43de60
  43de74:	outs   dx,BYTE PTR ss:[esi]
  43de76:	mov    ah,dl
  43de78:	xor    esi,DWORD PTR [eax+0x4e]
  43de7b:	in     al,0x61
  43de7d:	inc    ebx
  43de7e:	addr16 lock cld 
  43de81:	mov    al,ds:0x7460882d
  43de86:	jns    0x43de30
  43de88:	dec    edi
  43de89:	jae    0x43dee5
  43de8b:	stos   BYTE PTR es:[edi],al
  43de8c:	xor    al,0x6a
  43de8e:	add    BYTE PTR [eax],al
  43de90:	dec    ecx
  43de91:	cwde   
  43de92:	push   ecx
  43de93:	imul   ecx,DWORD PTR [esi-0x65],0x54
  43de97:	imul   eax,DWORD PTR [ecx+0x70],0x802c7b03
  43de9e:	push   ebx
  43de9f:	arpl   WORD PTR [ecx],dx
  43dea1:	jp     0x43def3
  43dea3:	je     0x43deb7
  43dea5:	fisub  WORD PTR [ecx-0xb21d0d2]
  43deab:	add    al,0xec
  43dead:	push   ebp
  43deae:	call   0xfd55:0x9d421564
  43deb5:	inc    esi
  43deb6:	jl     0x43df0e
  43deb8:	add    eax,0xe3557d4b
  43debd:	sub    al,0x76
  43debf:	push   ecx
  43dec0:	enter  0x7f47,0x52
  43dec4:	(bad)  
  43dec5:	(bad)  [eax+0x5c42fb00]
  43decb:	push   edi
  43decc:	rol    BYTE PTR [edi+0x49],1
  43decf:	push   eax
  43ded0:	int3   
  43ded1:	xor    DWORD PTR [edx+0x52],eax
  43ded4:	int3   
  43ded5:	ds inc esi
  43ded7:	add    al,0x46
  43ded9:	fdiv   QWORD PTR [eax]
  43dedb:	push   esi
  43dedc:	mov    ds:0x96583c43,eax
  43dee1:	cmp    eax,0x27935f43
  43dee6:	adc    BYTE PTR [ecx-0x7f],ah
  43dee9:	inc    ebx
  43deea:	add    eax,0xea52955f
  43deef:	add    ecx,DWORD PTR [edx]
  43def1:	fsub   QWORD PTR [eax]
  43def3:	push   esi
  43def4:	add    BYTE PTR [eax],al
  43def6:	add    DWORD PTR [ebx-0x4],0x57
  43defa:	xchg   BYTE PTR ds:0x22535f13,bh
  43df00:	add    eax,0xf5435161
  43df05:	pop    esi
  43df06:	inc    ebp
  43df07:	push   edx
  43df08:	jmp    0x4350:0xc5e36b03
  43df0f:	dec    esp
  43df10:	retf   
  43df11:	push   esi
  43df12:	aas    
  43df13:	inc    edi
  43df14:	test   eax,0x97e1cb03
  43df19:	pop    edx
  43df1a:	inc    ecx
  43df1b:	push   edx
  43df1c:	lods   eax,DWORD PTR ds:[esi]
  43df1d:	bound  ebx,QWORD PTR [ebx]
  43df1f:	and    BYTE PTR [ecx],al
  43df21:	mov    ebx,0x40013d01
  43df26:	das    
  43df27:	sub    al,0x6a
  43df29:	fwait
  43df2a:	loopne 0x43df78
  43df2c:	bound  ecx,QWORD PTR [ebp-0x799ab613]
  43df32:	pmaxub mm0,QWORD PTR [eax]
  43df35:	jmp    0x4bdb:0x945e2a78
  43df3c:	pop    esi
  43df3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43df3e:	add    eax,0xf08a5e48
  43df43:	inc    esi
  43df44:	jae    0x43dfb6
  43df46:	or     ebx,esi
  43df48:	add    ch,al
  43df4a:	sub    eax,0x8555e1f
  43df4f:	inc    esp
  43df50:	outs   dx,DWORD PTR ds:[esi]
  43df51:	inc    eax
  43df52:	fld    QWORD PTR [esi+0x67]
  43df55:	cmp    al,0xd8
  43df57:	inc    ebx
  43df58:	ins    DWORD PTR es:[edi],dx
  43df59:	pop    ds
  43df5a:	add    BYTE PTR [eax],al
  43df5c:	int3   
  43df5d:	inc    edi
  43df5e:	push   0x48
  43df60:	lea    ecx,[edx+0x5e]
  43df63:	push   ds
  43df64:	sub    ebx,DWORD PTR [ecx+0x487b14fc]
  43df6a:	pop    esi
  43df6b:	or     BYTE PTR [edi+0x64273309],cl
  43df71:	dec    eax
  43df72:	je     0x43df91
  43df74:	sub    esp,DWORD PTR [edx+0x485b34fc]
  43df7a:	pop    esi
  43df7b:	or     BYTE PTR [edi-0x77d0ccf7],cl
  43df81:	push   esi
  43df82:	ins    DWORD PTR es:[edi],dx
  43df83:	jmp    0x154083b4
  43df88:	jge    0x43dfd9
  43df8a:	xlat   BYTE PTR ds:[ebx]
  43df8c:	pusha  
  43df8d:	cmp    esi,DWORD PTR [ebx-0x56]
  43df90:	pop    esi
  43df91:	aas    
  43df92:	ins    DWORD PTR es:[edi],dx
  43df93:	ror    BYTE PTR [edi+0x37],0x65
  43df97:	mov    edx,0x6d3959
  43df9c:	fbstp  TBYTE PTR [edx]
  43df9e:	imul   eax,DWORD PTR [eax],0xffffffdd
  43dfa1:	sbb    BYTE PTR [edi+0x4e],al
  43dfa4:	ror    DWORD PTR [edi],cl
  43dfa6:	xor    bl,BYTE PTR es:[eax-0x79939ac9]
  43dfad:	frstpm(287 only) 
  43dfaf:	add    al,dl
  43dfb1:	xor    dl,BYTE PTR [esi+ebp*2-0x51]
  43dfb5:	ds push 0x64
  43dfb8:	mov    bl,0xdb
  43dfba:	adc    al,BYTE PTR [ecx]
  43dfbc:	sar    DWORD PTR [eax],0x6d
  43dfbf:	inc    ebx
  43dfc0:	add    BYTE PTR [eax],al
  43dfc2:	mov    edx,0xa9627134
  43dfc7:	cmp    al,0x67
  43dfc9:	fs xchg edx,eax
  43dfcb:	cmp    al,0x6d
  43dfcd:	popa   
  43dfce:	inc    esi
  43dfcf:	(bad)  [esi]
  43dfd1:	add    DWORD PTR [ecx],edx
  43dfd3:	add    eax,0x18f34b6d
  43dfd8:	push   edi
  43dfd9:	outs   dx,DWORD PTR ds:[esi]
  43dfda:	out    0xf,eax
  43dfdc:	pop    ebp
  43dfdd:	push   ebx
  43dfde:	repnz add BYTE PTR [ebp+0x65],ch
  43dfe2:	push   ss
  43dfe3:	fcomi  st,st(4)
  43dfe5:	add    al,BYTE PTR [edx+0x10]
  43dfe8:	pop    eax
  43dfe9:	outs   dx,BYTE PTR ds:[esi]
  43dfea:	push   ebp
  43dfeb:	push   cs
  43dfec:	pop    eax
  43dfed:	je     0x43e012
  43dfef:	sub    eax,0x1257364
  43dff4:	bound  esp,QWORD PTR [ebp+0x16]
  43dff7:	fistp  DWORD PTR ds:0x580a4500
  43dffd:	jb     0x43e039
  43dfff:	or     esi,DWORD PTR [edx+0x65]
  43e002:	in     al,0x21
  43e004:	add    DWORD PTR [eax],eax
  43e006:	jmp    0x43dfe8
  43e008:	dec    ecx
  43e009:	jo     0x43e03e
  43e00b:	or     al,0x52
  43e00d:	imul   edi,eax,0x857769fe
  43e013:	push   cs
  43e014:	pop    eax
  43e015:	je     0x43e046
  43e017:	sahf   
  43e018:	xor    ch,BYTE PTR [edx+0x60]
  43e01b:	lds    eax,FWORD PTR [ebx]
  43e01d:	test   DWORD PTR [esi],ebp
  43e01f:	mov    BYTE PTR [eax],ch
  43e021:	je     0x43e025
  43e023:	xchg   esp,eax
  43e024:	sub    BYTE PTR [esi+0x0],ch
  43e027:	add    al,dh
  43e029:	mov    ds:0x910c6325,al
  43e02e:	inc    esp
  43e02f:	push   0x9
  43e031:	jo     0x43e060
  43e033:	imul   ecx,DWORD PTR [esi],0x71
  43e036:	and    al,0x69
  43e038:	adc    DWORD PTR [eax-0x6bd249fd],ebx
  43e03e:	sub    BYTE PTR [ebx+ebx*8+0x6c],dh
  43e042:	sub    eax,0x3f60ce63
  43e047:	arpl   sp,bx
  43e049:	pop    ebx
  43e04a:	das    
  43e04b:	imul   ebx,edi,0x2f4603c4
  43e051:	add    al,0x31
  43e053:	imul   edi,DWORD PTR [ecx+eiz*1+0x1bbc6349],0xc4bf6939
  43e05e:	add    ebp,DWORD PTR [eax]
  43e060:	sub    eax,0x99632d10
  43e065:	sti    
  43e066:	sub    DWORD PTR [ebp-0x6c],ebp
  43e069:	adc    esi,DWORD PTR [eax+esi*2]
  43e06c:	add    bh,0x3
  43e06f:	push   0x742a042e
  43e074:	pop    edi
  43e075:	stc    
  43e076:	xor    ebx,DWORD PTR [ebp-0x76]
  43e079:	clc    
  43e07a:	das    
  43e07b:	push   ecx
  43e07c:	xchg   ch,dl
  43e07e:	pop    ds
  43e07f:	imul   edi,DWORD PTR [eax-0x8],0xee635f38
  43e086:	xor    ebp,DWORD PTR [edx+0x2f]
  43e089:	xlat   BYTE PTR ds:[ebx]
  43e08a:	add    edi,DWORD PTR ds:0xda5d0000
  43e090:	sbb    eax,0xb6de4a74
  43e095:	sub    al,0x55
  43e097:	cmp    al,bh
  43e099:	cmp    dh,BYTE PTR [edx+0x4a]
  43e09c:	leave  
  43e09d:	aaa    
  43e09e:	push   eax
  43e09f:	inc    ebp
  43e0a0:	mov    eax,0xafde2f5a
  43e0a5:	add    ebp,DWORD PTR [edx+0x42]
  43e0a8:	(bad)  
  43e0a9:	ss or  al,0x2d
  43e0ac:	shl    DWORD PTR [ecx],0x13
  43e0af:	inc    ebp
  43e0b0:	scas   eax,DWORD PTR es:[edi]
  43e0b1:	push   esi
  43e0b2:	sbb    edi,DWORD PTR [edi]
  43e0b4:	xchg   esi,eax
  43e0b5:	sub    al,0x16
  43e0b7:	inc    esp
  43e0b8:	jmp    0x328:0xa6df0103
  43e0bf:	sub    al,BYTE PTR [edx-0x79c0f3cb]
  43e0c5:	inc    edi
  43e0c6:	int3   
  43e0c7:	push   eax
  43e0c8:	xchg   ebx,eax
  43e0c9:	aaa    
  43e0ca:	(bad)  
  43e0cb:	dec    ebp
  43e0cc:	jmp    0xdb28:0x9ae09103
  43e0d3:	sub    eax,0x3aea315c
  43e0d8:	pop    ebx
  43e0d9:	xor    eax,0x284046de
  43e0de:	(bad)  
  43e0df:	dec    esp
  43e0e0:	cmp    edi,DWORD PTR [eax]
  43e0e2:	ror    BYTE PTR [ecx+0x51],1
  43e0e5:	xor    DWORD PTR [ebp+0x620417de],edx
  43e0eb:	push   eax
  43e0ec:	inc    ebp
  43e0ed:	and    esp,DWORD PTR [ebx+0x271e3b]
  43e0f3:	add    BYTE PTR [edx+0x7f311649],al
  43e0f9:	sub    eax,0xde5503ea
  43e0fe:	sub    ch,BYTE PTR [eax+ebx*2]
  43e101:	push   eax
  43e102:	push   ss
  43e103:	xor    DWORD PTR [esi+0x3b],edi
  43e106:	cld    
  43e107:	pop    eax
  43e108:	das    
  43e109:	fisubr WORD PTR [edi+0x1457f05]
  43e10f:	cli    
  43e110:	and    BYTE PTR [ecx],ch
  43e112:	pop    esi
  43e113:	cli    
  43e114:	sbb    esi,DWORD PTR ds:0xde67cc60
  43e11a:	add    cl,dh
  43e11c:	sub    ch,BYTE PTR [ecx]
  43e11e:	(bad)  
  43e11f:	fst    DWORD PTR [esi+0x3d]
  43e122:	jae    0x43e0f9
  43e124:	stc    
  43e125:	xor    al,0x65
  43e127:	mov    dl,0x51
  43e129:	dec    ebp
  43e12a:	push   eax
  43e12b:	jmp    0xac44b25c
  43e130:	push   esp
  43e131:	cmp    eax,0x4845966d
  43e136:	pop    ebp
  43e137:	xchg   esi,eax
  43e138:	inc    edi
  43e139:	inc    ebx
  43e13a:	mov    eax,ds:0xae01fe2c
  43e140:	push   ecx
  43e141:	dec    edx
  43e142:	inc    esp
  43e143:	xchg   esp,eax
  43e144:	cmp    al,BYTE PTR [ebx+0x68]
  43e147:	jnp    0x43e145
  43e149:	inc    esi
  43e14a:	je     0x43e135
  43e14c:	sub    al,0x3
  43e14e:	add    ch,BYTE PTR [esi-0x75b5b5ef]
  43e154:	pop    ds
  43e155:	dec    eax
  43e156:	dec    edx
  43e157:	push   edi
  43e158:	add    BYTE PTR [eax],al
  43e15a:	adc    eax,0x2ca60147
  43e15f:	sbb    dh,BYTE PTR [ebx+0x48]
  43e162:	neg    BYTE PTR [esp+eiz*2]
  43e165:	ds std 
  43e167:	fld    QWORD PTR [eax]
  43e169:	inc    edi
  43e16a:	sub    al,0x1d
  43e16c:	pop    esi
  43e16d:	xor    eax,0x3d744b7a
  43e172:	push   eax
  43e173:	inc    edi
  43e174:	inc    esi
  43e175:	inc    esp
  43e176:	push   edi
  43e177:	inc    esp
  43e178:	push   0xa
  43e17a:	inc    edx
  43e17b:	fiadd  WORD PTR [eax]
  43e17d:	loope  0x43e1ab
  43e17f:	adc    DWORD PTR [ecx+0x8],ebp
  43e182:	inc    ecx
  43e183:	sub    ch,BYTE PTR [eax+0x1e]
  43e186:	dec    eax
  43e187:	inc    edi
  43e188:	push   eax
  43e189:	add    dh,dl
  43e18b:	fbstp  TBYTE PTR [eax+eax*1]
  43e18e:	adc    eax,0x3b725802
  43e193:	or     dh,BYTE PTR [ecx+0x65]
  43e196:	aam    0x36
  43e198:	add    DWORD PTR [eax],eax
  43e19a:	or     ah,al
  43e19c:	aas    
  43e19d:	jae    0x43e123
  43e19f:	cld    
  43e1a0:	push   ebp
  43e1a1:	je     0x43e12e
  43e1a3:	add    al,0x71
  43e1a5:	je     0x43e186
  43e1a7:	fistp  WORD PTR [ecx+eax*1+0x576cfcd9]
  43e1ae:	jg     0x43e1bd
  43e1b0:	pop    ebp
  43e1b1:	outs   dx,DWORD PTR ds:[esi]
  43e1b2:	fldcw  WORD PTR [ebx]
  43e1b4:	imul   esi,DWORD PTR [edx+0x6b],0xa4505d00
  43e1bb:	push   cs
  43e1bc:	push   esi
  43e1bd:	add    BYTE PTR gs:[eax],al
  43e1c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e1c1:	or     al,BYTE PTR [eax+0x64]
  43e1c4:	xchg   bh,bl
  43e1c6:	dec    ebp
  43e1c7:	add    ecx,ecx
  43e1c9:	cld    
  43e1ca:	ins    BYTE PTR es:[edi],dx
  43e1cb:	dec    ebp
  43e1cc:	mov    ebx,0xa961660a
  43e1d1:	cld    
  43e1d2:	push   eax
  43e1d3:	outs   dx,DWORD PTR ds:[esi]
  43e1d4:	aad    0xde
  43e1d6:	inc    DWORD PTR [ecx]
  43e1d8:	mov    bl,0x0
  43e1da:	jno    0x43e233
  43e1dc:	fild   WORD PTR [ebx]
  43e1de:	pop    ebp
  43e1df:	outs   dx,DWORD PTR ds:[esi]
  43e1e0:	fldcw  WORD PTR [ecx]
  43e1e2:	push   0x69
  43e1e4:	lock adc eax,0xdfe20066
  43e1ea:	inc    ebp
  43e1eb:	add    BYTE PTR gs:[esi],0x4c
  43e1ef:	gs addps xmm4,XMMWORD PTR gs:[edi+0x6b]
  43e1f5:	sub    eax,DWORD PTR [ecx]
  43e1f7:	add    BYTE PTR [edx-0x20],ch
  43e1fa:	inc    esi
  43e1fb:	and    al,BYTE PTR gs:0x1f2b7358
  43e202:	pop    eax
  43e203:	jo     0x43e234
  43e205:	icebp  
  43e206:	cmp    DWORD PTR [esi-0x76],ebp
  43e209:	lds    eax,FWORD PTR [ebx]
  43e20b:	aad    0x2e
  43e20d:	push   cs
  43e20e:	xor    al,0x51
  43e210:	push   esi
  43e211:	jecxz  0x43e23b
  43e213:	imul   esp,DWORD PTR [eax-0x3b],0xf82d7503
  43e21a:	sub    DWORD PTR [edx+0x53],ebp
  43e21d:	mov    ch,BYTE PTR [eax]
  43e21f:	ins    DWORD PTR es:[edi],dx
  43e220:	cmp    al,0xa6
  43e222:	push   ds
  43e223:	arpl   WORD PTR [eax],ax
  43e225:	add    BYTE PTR [ebx-0x62],ah
  43e228:	xor    BYTE PTR [ebx+0x40],ah
  43e22b:	stos   BYTE PTR es:[edi],al
  43e22c:	das    
  43e22d:	push   ecx
  43e22e:	das    
  43e22f:	add    eax,DWORD PTR [ebx]
  43e231:	dec    ebp
  43e232:	or     cl,BYTE PTR [ecx-0x5ef698b2]
  43e238:	es jno 0x43e23a
  43e23b:	xchg   ebx,eax
  43e23c:	xor    al,BYTE PTR [eax]
  43e23e:	das    
  43e23f:	mov    bh,0x1
  43e241:	push   eax
  43e242:	or     bl,BYTE PTR [edx+0x2a]
  43e245:	dec    ebx
  43e246:	adc    bh,BYTE PTR [eax+0x32]
  43e249:	pop    edi
  43e24a:	or     BYTE PTR [edx+0x3c],bl
  43e24d:	add    BYTE PTR [edi],ch
  43e24f:	cwde   
  43e250:	add    DWORD PTR [eax-0x36],edx
  43e253:	pop    ecx
  43e254:	sub    cl,BYTE PTR [ebx-0x2e]
  43e257:	push   edi
  43e258:	xor    ebx,DWORD PTR [edi-0x38]
  43e25b:	pop    ecx
  43e25c:	dec    esi
  43e25d:	add    BYTE PTR [edi],ch
  43e25f:	sar    esp,0x40
  43e262:	retf   0x3e28
  43e265:	push   0xffffffcc
  43e267:	and    DWORD PTR [esp+esi*2],esi
  43e26a:	shl    BYTE PTR [esi],0xfd
  43e26d:	xchg   ecx,eax
  43e26e:	add    BYTE PTR cs:[edx],ch
  43e271:	je     0x43e2eb
  43e273:	cs daa 
  43e275:	mov    BYTE PTR fs:[eax],dl
  43e278:	push   ecx
  43e279:	imul   eax,DWORD PTR [ecx+0x2f005018],0x720173de
  43e283:	cmp    ecx,DWORD PTR [esi]
  43e285:	inc    ebx
  43e286:	jl     0x43e2d4
  43e288:	sbb    ebp,DWORD PTR [edi]
  43e28a:	add    BYTE PTR [eax],al
  43e28c:	sub    DWORD PTR [esi],0xde2f32f7
  43e292:	icebp  
  43e293:	add    al,0x6e
  43e295:	cmp    ebp,esi
  43e297:	inc    edx
  43e298:	js     0x43e2e8
  43e29a:	idiv   BYTE PTR [eax]
  43e29c:	inc    ecx
  43e29d:	cmp    ebp,edx
  43e29f:	add    ebx,DWORD PTR [edi]
  43e2a1:	fbld   TBYTE PTR [esi-0x39e2c4d8]
  43e2a7:	and    al,0x4a
  43e2a9:	dec    ebp
  43e2aa:	sahf   
  43e2ab:	cs inc ebp
  43e2ad:	cmp    DWORD PTR [edi-0x59203cfd],ebp
  43e2b3:	sub    BYTE PTR [ebx],bl
  43e2b5:	sub    ecx,edx
  43e2b7:	sub    eax,0x4cb74113
  43e2bc:	add    eax,0x1303b738
  43e2c1:	fbld   TBYTE PTR [esi-0x76d204d8]
  43e2c7:	xor    DWORD PTR [eax+eax*2],ecx
  43e2ca:	xchg   esi,eax
  43e2cb:	add    ebp,DWORD PTR [edi-0x1cd74524]
  43e2d1:	sbb    al,0x89
  43e2d3:	xor    ebx,ebx
  43e2d5:	dec    edx
  43e2d6:	jl     0x43e300
  43e2d8:	das    
  43e2d9:	fimul  WORD PTR [esp+eax*1+0x506e3aee]
  43e2e0:	int3   
  43e2e1:	dec    esp
  43e2e2:	pop    ebx
  43e2e3:	and    ecx,esi
  43e2e5:	cmp    ch,BYTE PTR [edi]
  43e2e7:	add    al,0x9b
  43e2e9:	fbld   TBYTE PTR [esi]
  43e2eb:	daa    
  43e2ec:	mov    ebx,0x2e4128
  43e2f1:	add    BYTE PTR [ebx-0x73adc8bf],dl
  43e2f7:	cmp    eax,0xdf80042e
  43e2fc:	add    BYTE PTR [esi],ch
  43e2fe:	dec    eax
  43e2ff:	dec    edx
  43e300:	inc    esi
  43e301:	inc    esp
  43e302:	ds inc ebx
  43e304:	bound  ecx,QWORD PTR [esi]
  43e306:	dec    eax
  43e307:	adc    DWORD PTR [ecx],eax
  43e309:	jge    0x43e33e
  43e30b:	sbb    bl,BYTE PTR [esi+0xf]
  43e30e:	pop    edx
  43e30f:	cmp    DWORD PTR [edi+0x5],esp
  43e312:	sbb    cl,BYTE PTR [edi+0x51]
  43e315:	sti    
  43e316:	adc    esi,DWORD PTR [ebx]
  43e318:	push   eax
  43e319:	jmp    0x1946eb4a
  43e31e:	sbb    eax,0x63f56739
  43e323:	cmp    DWORD PTR [edi-0x33],esp
  43e326:	adc    ecx,DWORD PTR [edi+0x1]
  43e329:	pop    edx
  43e32a:	xor    ebx,DWORD PTR ds:0x420ddc72
  43e330:	push   ebx
  43e331:	les    ecx,FWORD PTR [edi+0x4a]
  43e334:	add    DWORD PTR [eax],eax
  43e336:	sub    eax,0x60ba682e
  43e33b:	sub    ch,BYTE PTR [ecx-0x45]
  43e33e:	dec    ecx
  43e33f:	xor    DWORD PTR [ebp-0x64],ebx
  43e342:	push   ecx
  43e343:	inc    ebx
  43e344:	je     0x43e2ce
  43e346:	dec    ebx
  43e347:	cmp    eax,0x3d2ce950
  43e34c:	add    edi,DWORD PTR [ebx-0x77a1bdb7]
  43e352:	pop    ds
  43e353:	cmp    eax,0xaa3d
  43e358:	sub    al,0xf0
  43e35a:	add    DWORD PTR [esi-0x55c2b5ef],esp
  43e360:	jmp    0x2c6fe4ba
  43e365:	sbb    DWORD PTR [edi+0x5d],esp
  43e368:	or     BYTE PTR [eax+0x74],al
  43e36b:	inc    esp
  43e36c:	push   cs
  43e36d:	dec    edx
  43e36e:	push   ebx
  43e36f:	dec    esp
  43e370:	push   cs
  43e371:	dec    edx
  43e372:	add    DWORD PTR [eax],ecx
  43e374:	sub    al,0x1d
  43e376:	pop    esi
  43e377:	add    BYTE PTR [edx+0x26],ah
  43e37a:	add    BYTE PTR ss:[ecx+0x526541dc],dl
  43e381:	daa    
  43e382:	jno    0x43e3e8
  43e384:	ja     0x43e39c
  43e386:	fs push edx
  43e388:	xor    edi,ebp
  43e38a:	ins    BYTE PTR es:[edi],dx
  43e38b:	add    BYTE PTR [eax],cl
  43e38d:	fdiv   QWORD PTR [esi]
  43e38f:	and    DWORD PTR gs:[ebx],eax
  43e392:	imul   edx,DWORD PTR [eax+0x37],0x3
  43e396:	imul   esi,DWORD PTR [esi+edx*8-0x25],0xffffffb5
  43e39b:	add    BYTE PTR [edx],dl
  43e39d:	or     al,0x58
  43e39f:	ja     0x43e3a4
  43e3a1:	push   es
  43e3a2:	bound  esp,QWORD PTR [ebp-0x2a]
  43e3a5:	fcomi  st,st(2)
  43e3a7:	add    BYTE PTR [eax+0x746c6504],dl
  43e3ad:	clc    
  43e3ae:	push   ebp
  43e3af:	je     0x43e377
  43e3b1:	fild   DWORD PTR [esi+0x6cf8d101]
  43e3b7:	push   edi
  43e3b8:	jg     0x43e3bb
  43e3ba:	pop    ebp
  43e3bb:	outs   dx,DWORD PTR ds:[esi]
  43e3bc:	add    BYTE PTR [eax],al
  43e3be:	loope  0x43e3d7
  43e3c0:	add    BYTE PTR ss:[esi],cl
  43e3c3:	fadd   QWORD PTR [ecx+0x65]
  43e3c6:	ret    0x7128
  43e3c9:	fs mov bh,0x7
  43e3cc:	fs push edx
  43e3ce:	mov    cl,0x1
  43e3d0:	add    DWORD PTR [eax],eax
  43e3d2:	cmp    bl,bl
  43e3d4:	inc    ebx
  43e3d5:	outs   dx,BYTE PTR ds:[esi]
  43e3d6:	mov    dl,0x2b
  43e3d8:	pop    eax
  43e3d9:	imul   edi,DWORD PTR [eax-0x50fffef9],0xd26541dc
  43e3e3:	sub    eax,0xfeca6569
  43e3e8:	push   ecx
  43e3e9:	imul   ebx,eax,0x467769fd
  43e3ef:	fstp   TBYTE PTR ds:0x22132f02
  43e3f5:	popa   
  43e3f6:	xchg   esi,eax
  43e3f7:	xor    al,0x31
  43e3f9:	arpl   WORD PTR [ebp-0x63a0d6fc],bx
  43e3ff:	adc    al,0x3e
  43e401:	add    BYTE PTR [edi],ch
  43e403:	xor    ch,bh
  43e405:	inc    ebx
  43e406:	xchg   edx,eax
  43e407:	pop    ss
  43e408:	inc    ebx
  43e409:	outs   dx,BYTE PTR ds:[esi]
  43e40a:	mov    gs,edx
  43e40c:	and    DWORD PTR [eax+0x7d],edx
  43e40f:	loopne 0x43e430
  43e411:	push   ecx
  43e412:	das    
  43e413:	mov    DWORD PTR [ebx],0x1fd14e3d
  43e419:	push   ecx
  43e41a:	push   esi
  43e41b:	out    0x20,eax
  43e41d:	imul   esp,DWORD PTR [eax-0xb],0x692e
  43e424:	dec    esp
  43e425:	lock cld 
  43e427:	aam    0x2f
  43e429:	cli    
  43e42a:	sub    ah,BYTE PTR [edx+esi*2-0x5e]
  43e42e:	sub    DWORD PTR [ebx+0x2f],esi
  43e431:	rol    BYTE PTR [ebx],cl
  43e433:	cmp    eax,0x511f994e
  43e438:	push   ss
  43e439:	(bad)  
  43e43a:	pop    ss
  43e43b:	imul   ebx,DWORD PTR [eax],0xc692d75
  43e441:	xchg   BYTE PTR [ebx],al
  43e443:	dec    edx
  43e444:	sub    eax,0x16612073
  43e449:	xchg   esp,eax
  43e44a:	daa    
  43e44b:	arpl   bp,di
  43e44d:	sbb    DWORD PTR [edi],0x5f
  43e450:	cld    
  43e451:	jae    0x43e4a5
  43e453:	add    BYTE PTR [edi],ch
  43e455:	sbb    edi,esi
  43e457:	inc    edi
  43e458:	(bad)  
  43e459:	push   eax
  43e45a:	and    eax,0x2089ca74
  43e45f:	push   0xffffffe2
  43e461:	lea    esp,[edi]
  43e463:	arpl   dx,ax
  43e465:	les    eax,FWORD PTR [ebx]
  43e467:	cwde   
  43e468:	das    
  43e469:	jns    0x43e48b
  43e46b:	vrcp14sd xmm7{k5},xmm4,xmm2
  43e471:	inc    ebp
  43e472:	push   ecx
  43e473:	sub    bl,cl
  43e475:	sub    eax,0x1f8a2b5c
  43e47a:	jmp    0x8d21:0x25debb03
  43e481:	and    al,BYTE PTR [esi+0x23]
  43e484:	jg     0x43e4d6
  43e486:	aas    
  43e487:	daa    
  43e488:	add    BYTE PTR [eax],al
  43e48a:	dec    eax
  43e48b:	ficomp WORD PTR [eax]
  43e48d:	add    eax,0x4916436e
  43e492:	mov    WORD PTR [ecx*1-0x2bc84b3],?
  43e499:	inc    esi
  43e49a:	push   esi
  43e49b:	push   ebx
  43e49c:	clc    
  43e49d:	das    
  43e49e:	das    
  43e49f:	ficom  WORD PTR [ecx+0x11556a05]
  43e4a5:	xor    BYTE PTR [edx+0x36],dh
  43e4a8:	and    DWORD PTR es:[edx+0x39],ebx
  43e4ac:	out    dx,al
  43e4ad:	sub    bh,BYTE PTR [edi]
  43e4af:	fiadd  WORD PTR [eax-0x3fbc8cfd]
  43e4b5:	dec    eax
  43e4b6:	imul   edx,DWORD PTR [edi],0xffffffab
  43e4b9:	sub    edx,DWORD PTR [eax]
  43e4bb:	cmp    bh,BYTE PTR [esi-0x34c2eead]
  43e4c1:	push   edx
  43e4c2:	das    
  43e4c3:	fisub  WORD PTR [edx+0x3]
  43e4c6:	jmp    0x43e50a
  43e4c8:	enter  0x1052,0x3c
  43e4cc:	mov    esi,0x9c2dfe2a
  43e4d1:	sub    bl,dl
  43e4d3:	push   ds
  43e4d4:	jmp    0xe320:0xa6dedd03
  43e4db:	sbb    bh,BYTE PTR [ebp+0x29]
  43e4de:	fdiv   QWORD PTR [eax]
  43e4e0:	jbe    0x43e506
  43e4e2:	jecxz  0x43e526
  43e4e4:	jmp    0xfae:0xdf2103
  43e4eb:	push   edx
  43e4ec:	inc    esp
  43e4ed:	jge    0x43e4ef
  43e4ef:	add    BYTE PTR [ebx],cl
  43e4f1:	cmp    esi,DWORD PTR [edi+esi*1+0xc]
  43e4f5:	cmp    DWORD PTR [esi+0x36],ebx
  43e4f8:	sub    edi,DWORD PTR [edx+0x3b643a02]
  43e4fe:	ins    DWORD PTR es:[edi],dx
  43e4ff:	inc    esp
  43e500:	dec    eax
  43e501:	bound  edi,QWORD PTR cs:[ebx]
  43e504:	dec    esp
  43e505:	cmp    DWORD PTR [esi+0x35],ebx
  43e508:	xor    BYTE PTR [esp+esi*2],bh
  43e50b:	and    BYTE PTR [ebp+0x40],dl
  43e50e:	push   0x2cf2b16
  43e513:	cmp    eax,0x12642d41
  43e518:	pop    ebx
  43e519:	aaa    
  43e51a:	jno    0x43e538
  43e51c:	and    ebx,DWORD PTR [ecx]
  43e51e:	pop    esi
  43e51f:	call   DWORD PTR [ecx]
  43e521:	and    DWORD PTR [ecx-0x17],edi
  43e524:	sub    al,0x31
  43e526:	add    ah,BYTE PTR [esi]
  43e528:	xor    BYTE PTR [edx+0x46],dl
  43e52b:	or     al,0x15
  43e52d:	push   ecx
  43e52e:	dec    edx
  43e52f:	cmc    
  43e530:	and    DWORD PTR [ecx],edi
  43e532:	push   ebx
  43e533:	int3   
  43e534:	adc    edx,DWORD PTR [edx+0x1]
  43e537:	lods   al,BYTE PTR ds:[esi]
  43e538:	sub    bl,BYTE PTR [esi+ebx*2]
  43e53b:	into   
  43e53c:	push   ebp
  43e53d:	cmp    ebp,DWORD PTR [ebp-0x3c]
  43e540:	pop    edx
  43e541:	or     esp,DWORD PTR [ebp-0x38]
  43e544:	arpl   WORD PTR [ebx],di
  43e546:	ds sar edi,0xdd
  43e54a:	add    BYTE PTR [edx-0x4aa1e0d3],ah
  43e550:	jmp    0xe04c95
  43e555:	add    BYTE PTR [esp+eiz*8],ch
  43e558:	add    ch,BYTE PTR [ecx+edx*1+0x18a06e38]
  43e55f:	inc    ecx
  43e560:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  43e562:	sbb    dh,BYTE PTR [edi]
  43e564:	data16 add BYTE PTR [esi-0x2591a00b],dh
  43e56b:	loopne 0x43e58b
  43e56d:	add    dl,BYTE PTR [ecx-0x70919bf0]
  43e573:	div    BYTE PTR [eax+0x75]
  43e576:	ficomp DWORD PTR ds:0xddd7364
  43e57c:	push   0x70
  43e57e:	push   ss
  43e57f:	loopne 0x43e513
  43e581:	add    BYTE PTR [edx-0x15],cl
  43e584:	bound  eax,QWORD PTR [esi+0x54]
  43e587:	jmp    FWORD PTR [ebx+0x65]
  43e58a:	ss adc al,0x6a
  43e58d:	arpl   WORD PTR [edi-0x1e],dx
  43e590:	xchg   ebx,eax
  43e591:	add    BYTE PTR [edx-0x15],cl
  43e594:	bound  eax,QWORD PTR [edx+eiz*1-0x3]
  43e598:	push   eax
  43e599:	jb     0x43e5bc
  43e59b:	add    DWORD PTR [edx+0x0],edx
  43e59e:	cmp    al,0xdf
  43e5a0:	inc    ecx
  43e5a1:	cmp    dh,BYTE PTR gs:[ecx]
  43e5a4:	je     0x43e608
  43e5a6:	and    ebp,ebx
  43e5a8:	push   0x75
  43e5aa:	(bad)  
  43e5ab:	fist   WORD PTR [edx+0x6ceb2502]
  43e5b1:	dec    ebx
  43e5b2:	sub    eax,DWORD PTR [edi]
  43e5b4:	push   edi
  43e5b5:	outs   dx,DWORD PTR ds:[esi]
  43e5b6:	out    0x11,eax
  43e5b8:	pop    ebp
  43e5b9:	push   ebx
  43e5ba:	add    BYTE PTR [eax],al
  43e5bc:	fiadd  DWORD PTR [eax]
  43e5be:	ins    DWORD PTR es:[edi],dx
  43e5bf:	gs xchg esi,eax
  43e5c1:	fild   WORD PTR [esi+0x1]
  43e5c4:	leave  
  43e5c5:	in     al,dx
  43e5c6:	ins    BYTE PTR es:[edi],dx
  43e5c7:	dec    ebp
  43e5c8:	imul   esi,ebp,0x73
  43e5cb:	dec    ecx
  43e5cc:	(bad)  
  43e5ce:	imul   ecx,DWORD PTR [ecx-0x26],0xffffffdf
  43e5d2:	push   ebp
  43e5d3:	add    ah,BYTE PTR [esp+ebp*8-0x46a969f]
  43e5da:	arpl   WORD PTR [edx-0x47],si
  43e5dd:	clc    
  43e5de:	push   0x64
  43e5e0:	das    
  43e5e1:	xor    BYTE PTR fs:[ebx-0x36],cl
  43e5e5:	addr16 sub al,0x5f
  43e5e8:	rcr    BYTE PTR [ecx+0x50],1
  43e5eb:	add    BYTE PTR [edi],ch
  43e5ed:	jns    0x43e5ec
  43e5ef:	dec    ebp
  43e5f0:	rcr    BYTE PTR [ebx+0x2a],cl
  43e5f3:	ins    DWORD PTR es:[edi],dx
  43e5f4:	mov    ebx,0xcb3d2d61
  43e5f9:	adc    eax,0x3cea6d34
  43e5fe:	add    BYTE PTR ds:[edi],ch
  43e601:	cli    
  43e602:	std    
  43e603:	inc    eax
  43e604:	mov    dh,BYTE PTR [ecx]
  43e606:	dec    ecx
  43e607:	pop    edi
  43e608:	pushf  
  43e609:	or     DWORD PTR [esi+0x6a],eax
  43e60c:	lahf   
  43e60d:	adc    dh,BYTE PTR [ecx]
  43e60f:	inc    edi
  43e610:	cdq    
  43e611:	sbb    esp,DWORD PTR [eax]
  43e613:	add    BYTE PTR [edi],ch
  43e615:	dec    esp
  43e616:	std    
  43e617:	inc    ebx
  43e618:	xchg   al,ch
  43e61a:	sub    al,0x5f
  43e61c:	jnp    0x43e5f6
  43e61e:	and    al,0x4b
  43e620:	add    BYTE PTR [eax],al
  43e622:	push   edx
  43e623:	call   0xe28c455b
  43e628:	inc    edi
  43e629:	add    BYTE PTR [edi],ch
  43e62b:	rol    DWORD PTR [ecx],0x4b
  43e62e:	pop    esp
  43e62f:	in     al,0x47
  43e631:	pop    edi
  43e632:	push   esi
  43e633:	leave  
  43e634:	xor    eax,0x31ea3d69
  43e639:	ins    BYTE PTR es:[edi],dx
  43e63a:	inc    ebx
  43e63b:	scas   al,BYTE PTR es:[edi]
  43e63c:	xor    ebp,DWORD PTR [edx+ecx*2+0x7c]
  43e640:	and    DWORD PTR [esi+0x12],esp
  43e643:	cwde   
  43e644:	daa    
  43e645:	ins    DWORD PTR es:[edi],dx
  43e646:	das    
  43e647:	sub    edi,esi
  43e649:	inc    eax
  43e64a:	adc    cl,BYTE PTR [ecx-0x5efe98ba]
  43e650:	push   ds
  43e651:	jno    0x43e682
  43e653:	stc    
  43e654:	add    cl,BYTE PTR [ebp+0xa]
  43e657:	xchg   ecx,eax
  43e658:	inc    esi
  43e659:	addr16 or esi,ebx
  43e65c:	test   DWORD PTR [esi],esp
  43e65e:	(bad)  
  43e65f:	sbb    DWORD PTR [edi-0x15cd31db],eax
  43e665:	add    edx,DWORD PTR [ebx]
  43e667:	fild   QWORD PTR [esi-0x70be3ad4]
  43e66d:	cs in  eax,dx
  43e66f:	dec    edi
  43e670:	xchg   DWORD PTR [eax],ebp
  43e672:	fistp  QWORD PTR [edx]
  43e674:	and    DWORD PTR ds:0x4f6ddbb,0x20493aeb
  43e67e:	call   0x8c632fbb
  43e683:	xor    edx,ebp
  43e685:	add    eax,DWORD PTR [eax]
  43e687:	add    BYTE PTR [edi+ebx*8+0x32a3211e],ch
  43e68e:	dec    edi
  43e68f:	xor    al,0x7e
  43e691:	aaa    
  43e692:	dec    eax
  43e693:	and    BYTE PTR [esi+0x5c03ea51],dl
  43e699:	sub    eax,0xc4a521d
  43e69e:	rcr    BYTE PTR [edi],1
  43e6a0:	cmp    DWORD PTR [edx],0xffffffea
  43e6a3:	add    eax,DWORD PTR [ecx+0x5b2126df]
  43e6a9:	xor    dh,bh
  43e6ab:	sub    cl,BYTE PTR [eax+edi*1+0x31]
  43e6af:	es dec ebp
  43e6b1:	cmp    esp,edi
  43e6b3:	sub    BYTE PTR [eax+0x52],ch
  43e6b6:	add    DWORD PTR [edi],esp
  43e6b8:	push   ebp
  43e6b9:	fsubp  st(6),st
  43e6bb:	add    al,0x70
  43e6bd:	cmp    cl,dl
  43e6bf:	das    
  43e6c0:	dec    eax
  43e6c1:	aas    
  43e6c2:	(bad)  
  43e6c3:	sub    al,0x21
  43e6c5:	inc    ebx
  43e6c6:	mov    ebx,0xdc530220
  43e6cb:	sub    al,0x23
  43e6cd:	inc    edi
  43e6ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e6cf:	and    BYTE PTR [edx],al
  43e6d1:	cmp    eax,0x51ff2cbc
  43e6d6:	add    esi,eax
  43e6d8:	fiadd  WORD PTR ds:[eax]
  43e6db:	ja     0x43e70b
  43e6dd:	sbb    ebx,DWORD PTR [esi-0x63]
  43e6e0:	fnstsw WORD PTR [esp+eiz*2]
  43e6e3:	xchg   esp,eax
  43e6e4:	push   ds
  43e6e5:	inc    ecx
  43e6e6:	ins    DWORD PTR es:[edi],dx
  43e6e7:	nop
  43e6e8:	and    BYTE PTR ds:0x8a74,bh
  43e6ee:	push   ds
  43e6ef:	inc    ecx
  43e6f0:	jno    0x43e76f
  43e6f2:	or     DWORD PTR [eax],edi
  43e6f4:	cmp    eax,0x13a0d88
  43e6f9:	jnp    0x43e727
  43e6fb:	or     ebp,DWORD PTR [eax+0x7f]
  43e6fe:	or     bh,BYTE PTR ds:0x51de5d73
  43e704:	jae    0x43e756
  43e706:	push   ecx
  43e707:	aas    
  43e708:	push   esp
  43e709:	dec    esp
  43e70a:	dec    esi
  43e70b:	dec    ebp
  43e70c:	jae    0x43e74e
  43e70e:	pop    edi
  43e70f:	push   ecx
  43e710:	cmp    eax,0x732b5e4c
  43e715:	push   eax
  43e716:	inc    ebx
  43e717:	push   edx
  43e718:	push   0x54375f3b
  43e71d:	inc    esp
  43e71e:	dec    esi
  43e71f:	dec    ebp
  43e720:	jae    0x43e732
  43e722:	aas    
  43e723:	push   ecx
  43e724:	cmp    eax,0x732b1e04
  43e729:	add    BYTE PTR [ebx],bl
  43e72b:	push   edx
  43e72c:	push   0xde6a1b
  43e731:	xor    al,0x2c
  43e733:	pop    ds
  43e734:	pop    esi
  43e735:	cmc    
  43e736:	pop    edi
  43e737:	cmp    eax,0x40fefc64
  43e73c:	ins    DWORD PTR es:[edi],dx
  43e73d:	lock clc 
  43e73f:	cmp    al,0x74
  43e741:	retf   0x40fe
  43e744:	jno    0x43e71b
  43e746:	push   ebx
  43e747:	cmp    BYTE PTR [eax+ecx*8+0x4f],dl
  43e74b:	cmp    al,BYTE PTR [ecx]
  43e74d:	xchg   ebx,eax
  43e74e:	sub    eax,0x5e1b
  43e753:	add    dl,dl
  43e755:	sub    eax,0xec36364
  43e75a:	pusha  
  43e75b:	je     0x43e71c
  43e75d:	or     BYTE PTR [ebx+esi*2+0x65],ah
  43e761:	push   cs
  43e762:	pusha  
  43e763:	jo     0x43e6f7
  43e765:	add    DWORD PTR [edi+0x53],esp
  43e768:	mov    bh,0xfd
  43e76a:	add    BYTE PTR fs:[eax-0x3d9abe25],al
  43e771:	and    BYTE PTR [esi+ebp*2-0x5f],ah
  43e775:	clc    
  43e776:	push   0xe89f53
  43e77b:	add    BYTE PTR [eax],ah
  43e77d:	loop   0x43e7b4
  43e77f:	jb     0x43e740
  43e781:	or     al,0x6d
  43e783:	push   esi
  43e784:	jecxz  0x43e791
  43e786:	pusha  
  43e787:	data16 (bad) 
  43e789:	sub    eax,0xfb686760
  43e78e:	ins    BYTE PTR es:[edi],dx
  43e78f:	jne    0x43e805
  43e791:	out    0x51,eax
  43e793:	add    bl,al
  43e795:	(bad)  ds:0x6d126f72
  43e79b:	inc    edi
  43e79c:	jae    0x43e7ac
  43e79e:	ds gs aas 
  43e7a1:	xor    bl,BYTE PTR [eax+0x72]
  43e7a4:	daa    
  43e7a5:	inc    DWORD PTR [eax]
  43e7a7:	add    BYTE PTR [ebx+ebx*8+0x123f7235],bl
  43e7ae:	ins    DWORD PTR es:[edi],dx
  43e7af:	dec    ecx
  43e7b0:	fisttp DWORD PTR [ebx]
  43e7b2:	push   0x72
  43e7b4:	rcl    BYTE PTR [esi],cl
  43e7b6:	fs jns 0x43e7b9
  43e7b9:	add    dh,dl
  43e7bb:	(bad)  [ecx+0x700c1500]
  43e7c1:	jo     0x43e785
  43e7c3:	pop    es
  43e7c4:	fs jae 0x43e799
  43e7c7:	or     eax,0xe8dd796a
  43e7cc:	outs   dx,DWORD PTR ds:[esi]
  43e7cd:	add    BYTE PTR [edi],ch
  43e7cf:	add    edi,DWORD PTR [di]
  43e7d2:	sbb    eax,0xeb7433ae
  43e7d7:	cdq    
  43e7d8:	xor    BYTE PTR [ebp+edi*8-0x69],dh
  43e7dc:	cmp    cl,BYTE PTR [eax+0xe]
  43e7df:	test   BYTE PTR [ebx],ch
  43e7e1:	add    BYTE PTR [edi],ch
  43e7e3:	inc    eax
  43e7e4:	add    eax,DWORD PTR [edi-0x4]
  43e7e7:	xchg   DWORD PTR [esi],edx
  43e7e9:	ins    BYTE PTR es:[edi],dx
  43e7ea:	fisttp DWORD PTR [ebx+0x5ed8691d]
  43e7f0:	push   eax
  43e7f1:	shl    DWORD PTR [si+0x6c03],cl
  43e7f6:	das    
  43e7f7:	je     0x43e815
  43e7f9:	push   0xffffffc1
  43e7fb:	popa   
  43e7fc:	xor    DWORD PTR [esp+ebx*8+0x5d],esi
  43e800:	pop    ss
  43e801:	push   esp
  43e802:	enter  0x2763,0x6e
  43e806:	(bad)  
  43e807:	cs sub al,0x4d
  43e80a:	xchg   esi,eax
  43e80b:	and    DWORD PTR [eax+eax*1+0x2f],ebx
  43e80f:	mov    eax,0x329e42fc
  43e814:	push   ds
  43e815:	ins    BYTE PTR es:[edi],dx
  43e816:	jl     0x43e846
  43e818:	sub    DWORD PTR [eax],eax
  43e81a:	das    
  43e81b:	fdivp  st(6),st
  43e81d:	dec    ebp
  43e81e:	add    BYTE PTR [eax],al
  43e820:	mov    bl,BYTE PTR [eax]
  43e822:	inc    eax
  43e823:	outs   dx,BYTE PTR ds:[esi]
  43e824:	xchg   edx,eax
  43e825:	push   ss
  43e826:	cmp    DWORD PTR [ebx+0x64],esp
  43e829:	fisub  DWORD PTR ds:0xfd106743
  43e82f:	das    
  43e830:	sub    eax,0x6c612a03
  43e835:	leave  
  43e836:	and    ch,BYTE PTR [ebp+0x4a]
  43e839:	or     al,0x2a
  43e83b:	ja     0x43e86c
  43e83d:	retf   0x46fc
  43e840:	push   ecx
  43e841:	fidivr WORD PTR [eax]
  43e843:	addr16 dec esi
  43e845:	shr    DWORD PTR [eax],1
  43e847:	dec    ebp
  43e848:	ss (bad) 
  43e84b:	aaa    
  43e84c:	or     al,0x39
  43e84e:	mov    ebx,0xc6521c1b
  43e853:	and    bl,BYTE PTR [esi]
  43e855:	cmp    BYTE PTR [ebp+0x25ddfe2b],bl
  43e85b:	add    al,0x4a
  43e85d:	dec    esp
  43e85e:	shl    DWORD PTR [ebx],0xfb
  43e861:	push   ds
  43e862:	lds    esi,FWORD PTR [edi]
  43e864:	out    0x3c,eax
  43e866:	mov    ebx,0x9c3cdf1b
  43e86b:	and    al,0xd4
  43e86d:	fstp   QWORD PTR [eax+0x4]
  43e870:	and    cl,BYTE PTR [ecx+edx*4+0x33]
  43e874:	jecxz  0x43e892
  43e876:	mov    esi,DWORD PTR [esp+ebx*8]
  43e879:	xor    al,0x7c
  43e87b:	sub    BYTE PTR [edx],cl
  43e87d:	aaa    
  43e87e:	mov    BYTE PTR [edi],dh
  43e880:	int3   
  43e881:	inc    ebp
  43e882:	jbe    0x43e8de
  43e884:	add    BYTE PTR [eax],al
  43e886:	das    
  43e887:	fisub  WORD PTR [edx]
  43e889:	add    al,0xf2
  43e88b:	dec    ebx
  43e88c:	popa   
  43e88d:	xor    al,0xa3
  43e88f:	xor    BYTE PTR ds:0x5b3f8c20,bh
  43e895:	sub    DWORD PTR [edx+0x35],ebx
  43e898:	cmp    BYTE PTR [eax],bh
  43e89a:	mov    WORD PTR [esi+0x36],es
  43e89d:	add    al,0xda
  43e89f:	fisubr WORD PTR [edx]
  43e8a1:	ss js  0x43e8f2
  43e8a4:	ss inc edi
  43e8a6:	mov    DWORD PTR [ebx],edi
  43e8a8:	dec    ecx
  43e8a9:	cmp    BYTE PTR [esi+edx*1-0x21a8c8f7],cl
  43e8b0:	mov    cl,0x3
  43e8b2:	and    dl,BYTE PTR [eax+0x11]
  43e8b5:	xor    al,0x63
  43e8b7:	push   ss
  43e8b8:	or     DWORD PTR [edi],esi
  43e8ba:	inc    edi
  43e8bb:	sbb    cl,BYTE PTR [ecx]
  43e8bd:	cmp    BYTE PTR [eax-0x22],ch
  43e8c0:	pop    es
  43e8c1:	push   es
  43e8c2:	jno    0x43e8ff
  43e8c4:	add    DWORD PTR [esi],ecx
  43e8c6:	bound  edx,QWORD PTR [ecx+0x5e]
  43e8c9:	sti    
  43e8ca:	add    esi,DWORD PTR [eax]
  43e8cc:	(bad)  
  43e8cd:	aad    0x67
  43e8cf:	inc    ecx
  43e8d0:	ds loope 0x43e8d8
  43e8d3:	fiadd  WORD PTR [eax]
  43e8d5:	enter  0x1432,0x5e
  43e8d9:	(bad)  
  43e8da:	in     eax,dx
  43e8db:	dec    ebp
  43e8dc:	pop    esi
  43e8dd:	xlat   BYTE PTR ds:[ebx]
  43e8de:	dec    ecx
  43e8df:	inc    ecx
  43e8e0:	jp     0x43e886
  43e8e2:	push   esp
  43e8e3:	das    
  43e8e4:	add    DWORD PTR [edi-0x39a1ebce],esi
  43e8ea:	add    BYTE PTR [eax],al
  43e8ec:	fld    DWORD PTR [eax+0x6d]
  43e8ef:	mov    edi,0x846e3213
  43e8f4:	test   DWORD PTR [ebp+0x50],0x1cf2ce9
  43e8fb:	sahf   
  43e8fc:	sbb    al,0x41
  43e8fe:	addr16 cdq 
  43e900:	add    dh,BYTE PTR [edi]
  43e902:	fs test cl,bh
  43e905:	xor    cl,BYTE PTR [ebp-0x7a]
  43e908:	sbb    DWORD PTR [ecx+0x67],eax
  43e90b:	jmp    0x2e46183c
  43e910:	push   eax
  43e911:	dec    edx
  43e912:	push   esp
  43e913:	push   eax
  43e914:	push   edi
  43e915:	adc    ebp,DWORD PTR [esi+0x4b]
  43e918:	ins    BYTE PTR es:[edi],dx
  43e919:	push   ecx
  43e91a:	ins    DWORD PTR es:[edi],dx
  43e91b:	inc    ecx
  43e91c:	dec    esi
  43e91d:	xor    al,0x6a
  43e91f:	cmp    eax,0xbd00de54
  43e924:	sub    al,0x17
  43e926:	jno    0x43e974
  43e928:	dec    ebp
  43e929:	sub    ch,BYTE PTR [ecx+0x3b]
  43e92c:	dec    eax
  43e92d:	and    eax,0x3b0e3d5d
  43e932:	pop    esi
  43e933:	movntps XMMWORD PTR [esi],xmm4
  43e936:	add    ch,BYTE PTR [esi]
  43e938:	adc    BYTE PTR [edx+0x54],cl
  43e93b:	add    BYTE PTR [edi],al
  43e93d:	adc    ebp,DWORD PTR [esi+0x0]
  43e940:	xor    al,0x21
  43e942:	je     0x43e9b8
  43e944:	push   ds
  43e945:	jmp    DWORD PTR [esi+0x69]
  43e948:	mov    edx,0xbb6f35f7
  43e94d:	(bad)  
  43e94e:	ins    BYTE PTR es:[edi],dx
  43e94f:	add    BYTE PTR [eax],al
  43e951:	add    BYTE PTR [edx+0x6b7235e0],dl
  43e957:	jmp    FWORD PTR [ebp+eiz*2-0x2a]
  43e95b:	or     ch,BYTE PTR [edx+0x63]
  43e95e:	imul   ecx,DWORD PTR [ecx],0x66
  43e961:	inc    ecx
  43e962:	lds    ebp,FWORD PTR [ebx]
  43e964:	les    sp,DWORD PTR gs:0xe0d90001
  43e96c:	inc    esp
  43e96d:	outs   dx,DWORD PTR ds:[esi]
  43e96e:	mov    cl,0xe1
  43e970:	jae    0x43e9e2
  43e972:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e973:	or     ah,BYTE PTR [eax+0x76]
  43e976:	mov    edi,0xab6763e4
  43e97b:	es pop eax
  43e97d:	ins    BYTE PTR es:[edi],dx
  43e97e:	mov    ebx,0x510051fb
  43e983:	loopne 0x43e9bc
  43e985:	fs pushf 
  43e987:	or     esp,DWORD PTR [esi+0x74]
  43e98a:	call   0x6730:0xb0655dfd
  43e991:	imul   ecx,DWORD PTR [eax+0x696564e7],0x470065fb
  43e99b:	push   ss
  43e99c:	push   ebx
  43e99d:	inc    ecx
  43e99e:	push   esi
  43e99f:	pop    es
  43e9a0:	xor    ah,BYTE PTR es:[eax]
  43e9a3:	mul    BYTE PTR [esp+ebp*2+0x16]
  43e9a7:	loopne 0x43e9e8
  43e9a9:	add    BYTE PTR [esi],dl
  43e9ab:	jmp    FWORD PTR [eax+ebp*2+0x48]
  43e9af:	out    0x6a,eax
  43e9b1:	fs sbb bh,ah
  43e9b4:	fs add BYTE PTR gs:[eax],al
  43e9b8:	adc    bh,bh
  43e9ba:	imul   esp,DWORD PTR [ebp+0x2f],0x4
  43e9be:	std    
  43e9bf:	test   BYTE PTR [edi],ch
  43e9c1:	add    eax,0xe7577424
  43e9c6:	pop    ds
  43e9c7:	imul   edx,DWORD PTR [eax-0x35],0x1e
  43e9cb:	inc    edx
  43e9cc:	inc    esi
  43e9cd:	fstp   DWORD PTR [edi]
  43e9cf:	dec    ebp
  43e9d0:	aas    
  43e9d1:	ficomp DWORD PTR ds:0x3e02f51
  43e9d7:	dec    ebp
  43e9d8:	sbb    esp,DWORD PTR [edi+0x7b1f6b3c]
  43e9de:	inc    edx
  43e9df:	add    BYTE PTR [edi],ch
  43e9e1:	xlat   BYTE PTR ds:[ebx]
  43e9e2:	add    ecx,DWORD PTR [ebp+0x3]
  43e9e5:	xchg   DWORD PTR [ebx+ebp*2],edi
  43e9e8:	push   DWORD PTR [edx+0x58]
  43e9eb:	add    BYTE PTR [edi],ch
  43e9ed:	xor    al,BYTE PTR [eax+edx*2]
  43e9f0:	push   cs
  43e9f1:	mov    DWORD PTR [ebx],ebx
  43e9f3:	dec    esi
  43e9f4:	shr    BYTE PTR [ecx+0x20],cl
  43e9f7:	jb     0x43e9c3
  43e9f9:	jbe    0x43ea1d
  43e9fb:	pop    ebp
  43e9fc:	les    esp,FWORD PTR [edi+0x17]
  43e9ff:	pop    edi
  43ea00:	fcomp  QWORD PTR [eax+ebx*2+0x0]
  43ea04:	das    
  43ea05:	inc    ebp
  43ea06:	add    esi,DWORD PTR [ecx-0x47]
  43ea09:	push   edx
  43ea0a:	sub    al,0x70
  43ea0c:	mov    ebp,0xc974215d
  43ea11:	imul   eax,DWORD PTR [ebx],0x69
  43ea14:	cs and al,0x2f
  43ea17:	push   0xffffff9c
  43ea19:	and    eax,0x6733
  43ea1e:	mov    DWORD PTR [ecx],esp
  43ea20:	pop    ds
  43ea21:	aas    
  43ea22:	das    
  43ea23:	xor    ch,bh
  43ea25:	dec    edi
  43ea26:	mov    es,WORD PTR [ecx]
  43ea28:	adc    eax,0x24098e4b
  43ea2d:	push   0x5d2a055c
  43ea32:	pop    eax
  43ea33:	mov    ch,0x3
  43ea35:	pop    ds
  43ea36:	fidivr WORD PTR cs:[edx]
  43ea39:	cmp    BYTE PTR [ecx+0x1f],dl
  43ea3c:	add    eax,0x37156534
  43ea41:	add    al,0x6e
  43ea43:	fidivr WORD PTR [ecx]
  43ea45:	and    eax,0x1d283643
  43ea4a:	push   ebp
  43ea4b:	cmp    bl,BYTE PTR ds:0x39432c
  43ea51:	xor    ecx,DWORD PTR [eax+0x33]
  43ea54:	clc    
  43ea55:	push   esi
  43ea56:	das    
  43ea57:	ficomp WORD PTR [ecx]
  43ea59:	add    al,0xff
  43ea5b:	cmp    al,0xce
  43ea5d:	sbb    ebx,DWORD PTR [eax+0x3a]
  43ea60:	mov    BYTE PTR [ecx-0x10],0x3e
  43ea64:	ret    
  43ea65:	xor    bl,BYTE PTR [ebx]
  43ea67:	cmp    eax,0xddde1bbb
  43ea6c:	mov    dh,0x3
  43ea6e:	fistp  QWORD PTR [esi+esi*4]
  43ea71:	sbb    esp,eax
  43ea73:	dec    eax
  43ea74:	mov    bh,0x37
  43ea76:	int3   
  43ea77:	cs call 0x2f56:0x9b390224
  43ea7f:	fidiv  WORD PTR [ebx+eax*1+0x3cff0000]
  43ea86:	mov    ds,WORD PTR [ebx]
  43ea88:	out    dx,al
  43ea89:	cmp    BYTE PTR [esi+0x47],dh
  43ea8c:	shl    DWORD PTR [eax+esi*2],1
  43ea8f:	sub    ch,ah
  43ea91:	dec    eax
  43ea92:	jge    0x43eab5
  43ea94:	int3   
  43ea95:	dec    edi
  43ea96:	pop    DWORD PTR [ebx]
  43ea98:	xchg   ecx,eax
  43ea99:	fbstp  TBYTE PTR [edx+esi*1]
  43ea9c:	xchg   ebx,eax
  43ea9d:	sub    ecx,DWORD PTR [eax+0x29]
  43eaa0:	mov    bh,BYTE PTR ds:0x1f8c3449
  43eaa6:	jmp    0x9138:0x1adf2503
  43eaad:	sbb    eax,0x17653445
  43eab2:	add    DWORD PTR [eax],ebp
  43eab4:	sub    esi,DWORD PTR [ebx]
  43eab6:	add    DWORD PTR [ecx],ebx
  43eab8:	adc    cl,BYTE PTR [edx+0x69]
  43eabb:	xor    BYTE PTR [ebp*1-0x217fd2ad],bl
  43eac2:	add    bh,bl
  43eac4:	sub    edx,DWORD PTR [ebx]
  43eac6:	ins    DWORD PTR es:[edi],dx
  43eac7:	sbb    ebx,DWORD PTR [ebp+0x3]
  43eaca:	imul   edi,ebx,0xe000de6b
  43ead0:	xor    edx,DWORD PTR [ebx]
  43ead2:	ins    DWORD PTR es:[edi],dx
  43ead3:	sti    
  43ead4:	ins    DWORD PTR es:[edi],dx
  43ead5:	xor    eax,0xde002071
  43eada:	add    ch,bh
  43eadc:	sub    edx,DWORD PTR [ebx]
  43eade:	ins    DWORD PTR es:[edi],dx
  43eadf:	fucomi st,st(5)
  43eae1:	xor    eax,0xd72cbe73
  43eae6:	add    DWORD PTR [edx+0x30400000],edi
  43eaec:	inc    esp
  43eaed:	sar    DWORD PTR [esi],1
  43eaef:	add    DWORD PTR [ecx],eax
  43eaf1:	pop    edx
  43eaf2:	sub    al,0x2e
  43eaf4:	bound  edi,QWORD PTR [ebp-0x3f93ecec]
  43eafa:	sbb    al,0x10
  43eafc:	push   0x12f1896
  43eb01:	jle    0x43eb2f
  43eb03:	bound  ebx,QWORD PTR cs:[ebp-0x6798d2cc]
  43eb0a:	pop    es
  43eb0b:	aaa    
  43eb0c:	ins    DWORD PTR es:[edi],dx
  43eb0d:	mov    ebp,ds
  43eb0f:	dec    ebp
  43eb10:	bound  ecx,QWORD PTR [edx-0x16afccf9]
  43eb16:	sub    al,0x8f
  43eb18:	add    BYTE PTR [edx+0x555e1a64],bl
  43eb1e:	dec    eax
  43eb1f:	dec    edx
  43eb20:	pop    esi
  43eb21:	aaa    
  43eb22:	dec    esp
  43eb23:	xor    ch,BYTE PTR [esi+0x4c]
  43eb26:	jp     0x43eb06
  43eb28:	add    BYTE PTR [edx+0x491333],bl
  43eb2e:	push   edx
  43eb2f:	stc    
  43eb30:	fs gs inc edx
  43eb33:	stc    
  43eb34:	cmp    eax,0x12b3f65
  43eb39:	add    BYTE PTR ds:0x426150da,bh
  43eb3f:	loop   0x43eb80
  43eb41:	jae    0x43eb55
  43eb43:	in     eax,0x66
  43eb45:	gs and eax,0x1f726a06
  43eb4b:	sub    eax,DWORD PTR [ecx]
  43eb4d:	add    BYTE PTR [eax],al
  43eb4f:	add    BYTE PTR [esp+ebx*8-0x1b3d9eb0],al
  43eb56:	aaa    
  43eb57:	and    bl,BYTE PTR fs:[ecx]
  43eb5a:	jns    0x43ebd0
  43eb5c:	xor    esp,eax
  43eb5e:	imul   edi,DWORD PTR gs:[ecx-0x1e],0x4d50051
  43eb66:	inc    ebp
  43eb67:	push   edi
  43eb68:	(bad)  
  43eb69:	sub    al,0x40
  43eb6b:	cs jb  0x43eb4e
  43eb6e:	add    BYTE PTR fs:[eax+0x6b6f35dc],dl
  43eb75:	fist   WORD PTR [edi+0x6e]
  43eb78:	bound  eax,QWORD PTR [eax]
  43eb7a:	pusha  
  43eb7b:	outs   dx,BYTE PTR ds:[esi]
  43eb7c:	jae    0x43eba6
  43eb7e:	push   0x41
  43eb80:	(bad)  
  43eb81:	stc    
  43eb82:	jb     0x43ebdb
  43eb84:	inc    esi
  43eb85:	fdiv   QWORD PTR [ebp+0x42049500]
  43eb8b:	mov    gs:0xb26c6a1a,al
  43eb91:	mul    DWORD PTR [esi+0x50]
  43eb94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43eb95:	or     BYTE PTR [ecx+0x57],ch
  43eb98:	inc    esi
  43eb99:	fcom   QWORD PTR [esi]
  43eb9b:	add    ebp,eax
  43eb9d:	jecxz  0x43ec02
  43eb9f:	ins    BYTE PTR es:[edi],dx
  43eba0:	jp     0x43ebb9
  43eba2:	jns    0x43ec09
  43eba4:	gs pop es
  43eba6:	ins    DWORD PTR es:[edi],dx
  43eba7:	gs das 
  43eba9:	add    ch,bh
  43ebab:	dec    esp
  43ebac:	ja     0x43eba8
  43ebae:	inc    eax
  43ebaf:	dec    esp
  43ebb0:	cmp    al,0xc3
  43ebb2:	aad    0x63
  43ebb4:	add    BYTE PTR [eax],al
  43ebb6:	mov    edx,DWORD PTR [ecx]
  43ebb8:	std    
  43ebb9:	sbb    DWORD PTR [edi],ebp
  43ebbb:	lock pop ds
  43ebbd:	je     0x43eb41
  43ebbf:	add    al,0x20
  43ebc1:	outs   dx,BYTE PTR ds:[esi]
  43ebc2:	jno    0x43eb9a
  43ebc4:	pop    ss
  43ebc5:	arpl   WORD PTR [edx-0x3],si
  43ebc8:	dec    ebp
  43ebc9:	add    BYTE PTR [edi],ch
  43ebcb:	add    al,0x20
  43ebcd:	pop    ebp
  43ebce:	inc    edx
  43ebcf:	jecxz  0x43ebc2
  43ebd1:	sub    eax,0x6c20d111
  43ebd6:	das    
  43ebd7:	in     eax,dx
  43ebd8:	cld    
  43ebd9:	cmp    al,0x40
  43ebdb:	loope  0x43ec00
  43ebdd:	ins    DWORD PTR es:[edi],dx
  43ebde:	adc    al,0xe2
  43ebe0:	pop    ds
  43ebe1:	imul   ebp,ecx,0xffffffa2
  43ebe4:	push   ds
  43ebe5:	arpl   WORD PTR [edi],bp
  43ebe7:	lds    eax,FWORD PTR [ebx]
  43ebe9:	cmp    eax,0x63317400
  43ebee:	push   cs
  43ebef:	test   eax,0x8411471e
  43ebf4:	das    
  43ebf5:	pop    edi
  43ebf6:	or     DWORD PTR [esi+ebx*1+0x3992f00],edx
  43ebfd:	cmp    eax,0x671569d8
  43ec02:	shr    DWORD PTR [ebp+0x2f],1
  43ec05:	addr16 into 
  43ec07:	push   eax
  43ec08:	sbb    dh,BYTE PTR [esi-0x36]
  43ec0b:	mov    ah,0x3
  43ec0d:	inc    eax
  43ec0e:	das    
  43ec0f:	je     0x43ec25
  43ec11:	inc    edi
  43ec12:	shr    DWORD PTR [ebp+0x2f],1
  43ec15:	addr16 into 
  43ec17:	push   eax
  43ec18:	sbb    dh,BYTE PTR [esi+0x0]
  43ec1b:	add    dl,cl
  43ec1d:	arpl   WORD PTR [esi],bx
  43ec1f:	pop    ebp
  43ec20:	mov    ds:0xa6741b43,al
  43ec25:	fsubp  st(1),st
  43ec27:	add    edx,DWORD PTR [esi-0x22]
  43ec2a:	sub    bl,BYTE PTR [ebx]
  43ec2c:	push   0x90304130
  43ec31:	cmp    eax,0x39791d36
  43ec36:	and    eax,0xf1de2f2c
  43ec3b:	add    esi,DWORD PTR [edx]
  43ec3d:	adc    bl,BYTE PTR [ebx]
  43ec3f:	cmp    eax,0x1b3c1873
  43ec44:	push   esp
  43ec45:	sub    edx,DWORD PTR [esi]
  43ec47:	ss push eax
  43ec49:	xor    bh,bh
  43ec4b:	add    ebx,DWORD PTR [eax-0x23]
  43ec4e:	cmp    dh,BYTE PTR [eax]
  43ec50:	pop    ecx
  43ec51:	xor    eax,0x4c6d22f8
  43ec56:	nop    DWORD PTR [esi+0x29]
  43ec5a:	xor    DWORD PTR [eax+0x1],eax
  43ec5d:	fisub  WORD PTR [edi+0x4]
  43ec60:	push   0x4c
  43ec62:	std    
  43ec63:	and    al,0x1b
  43ec65:	cmp    DWORD PTR [ebx-0x36c6f6d1],edi
  43ec6b:	sbb    dh,ah
  43ec6d:	das    
  43ec6e:	mov    ds:0xcc2f1b42,al
  43ec73:	and    al,0x13
  43ec75:	fmulp  st(2),st
  43ec77:	add    edi,DWORD PTR [edx]
  43ec79:	das    
  43ec7a:	fwait
  43ec7b:	and    bl,bh
  43ec7d:	sub    eax,0x1abc
  43ec82:	out    0x44,eax
  43ec84:	lods   al,BYTE PTR ds:[esi]
  43ec85:	pop    ss
  43ec86:	add    BYTE PTR [eax],dh
  43ec88:	xchg   ebx,eax
  43ec89:	and    bl,ah
  43ec8b:	fld    QWORD PTR [esi-0x23f533e9]
  43ec91:	fxch   st(4)
  43ec93:	xor    DWORD PTR [esi+0x3],esi
  43ec96:	push   ss
  43ec97:	fisubr WORD PTR [edx+0x6e3ccc35]
  43ec9d:	and    dl,dh
  43ec9f:	add    DWORD PTR cs:[esp+ebx*2+0x4a806d1d],eax
  43eca7:	dec    edx
  43eca8:	pop    esi
  43eca9:	sub    edi,DWORD PTR [edx]
  43ecab:	xor    ah,BYTE PTR [esi+0x48]
  43ecae:	pop    ebx
  43ecaf:	fiadd  WORD PTR [eax]
  43ecb1:	sbb    DWORD PTR [ebx],esi
  43ecb3:	sti    
  43ecb4:	jb     0x43ecfa
  43ecb6:	dec    edx
  43ecb7:	xor    bl,BYTE PTR [esi+0x2a]
  43ecba:	adc    al,0x49
  43ecbc:	jno    0x43ed06
  43ecbe:	aas    
  43ecbf:	inc    ebp
  43ecc0:	arpl   WORD PTR [ebp+0xe],ax
  43ecc3:	and    al,BYTE PTR [ecx+ebp*8+0x2c]
  43ecc7:	das    
  43ecc8:	add    edi,DWORD PTR [edx]
  43ecca:	push   cs
  43eccb:	dec    edx
  43eccc:	pop    esi
  43eccd:	or     bl,BYTE PTR [edi]
  43eccf:	daa    
  43ecd0:	arpl   WORD PTR [ebx],ax
  43ecd2:	push   cs
  43ecd3:	sbb    ebp,DWORD PTR [ebp-0x17]
  43ecd6:	sub    al,0xc0
  43ecd8:	add    BYTE PTR ds:0xf55e4a0e,ch
  43ecde:	(bad)  
  43ece0:	arpl   WORD PTR [ebx],ax
  43ece2:	dec    esi
  43ece3:	sbb    ebp,DWORD PTR [ebp-0x17]
  43ece6:	add    BYTE PTR [eax],al
  43ece8:	sub    al,0xc
  43ecea:	add    DWORD PTR [edx-0x2a9dbe9e],ebp
  43ecf0:	dec    edi
  43ecf1:	and    al,BYTE PTR [esi+edi*4+0x2c]
  43ecf5:	mov    ds:0x324fa601,eax
  43ecfa:	cmp    eax,0x64453ecc
  43ecff:	(bad)  
  43ed00:	jmp    0x2cfe5e21
  43ed05:	fwait
  43ed06:	add    BYTE PTR [ebp-0x62a1b5f1],ah
  43ed0c:	mov    cr0,esp
  43ed0f:	jmp    0xab44d840
  43ed14:	sub    esi,DWORD PTR [edx]
  43ed16:	inc    ebx
  43ed17:	jge    0x43ed29
  43ed19:	fiadd  WORD PTR [eax]
  43ed1b:	add    BYTE PTR [edi-0x4a9ab91d],bl
  43ed21:	or     al,0x6a
  43ed23:	jb     0x43ece0
  43ed25:	cld    
  43ed26:	xor    eax,0x45e3a600
  43ed2b:	popa   
  43ed2c:	js     0x43ed0b
  43ed2e:	cmp    al,0x43
  43ed30:	push   es
  43ed31:	loope  0x43ecd3
  43ed33:	add    al,BYTE PTR [ebp-0x23]
  43ed36:	ins    BYTE PTR es:[edi],dx
  43ed37:	push   edx
  43ed38:	imul   eax,DWORD PTR [ebx],0x6d
  43ed3b:	push   edx
  43ed3c:	imul   ebx,eax,0xe13b0000
  43ed42:	inc    ecx
  43ed43:	outs   dx,DWORD PTR fs:[esi]
  43ed45:	and    BYTE PTR [ebp+0x75],ah
  43ed48:	and    eax,0xda
  43ed4d:	add    BYTE PTR [edi-0x1c],bh
  43ed50:	inc    ebp
  43ed51:	cmp    dl,BYTE PTR gs:[eax]
  43ed54:	pusha  
  43ed55:	gs sub edx,esi
  43ed58:	imul   esi,DWORD PTR [edx+0x1a],0xb6766f7
  43ed5f:	or     al,BYTE PTR [ecx]
  43ed61:	add    BYTE PTR [eax+eiz*8+0x41],bh
  43ed65:	gs stos BYTE PTR es:[edi],al
  43ed67:	cld    
  43ed68:	aas    
  43ed69:	inc    edx
  43ed6a:	das    
  43ed6b:	out    dx,al
  43ed6c:	add    BYTE PTR gs:[ebx],bh
  43ed6f:	loop   0x43eda6
  43ed71:	jb     0x43edde
  43ed73:	jmp    FWORD PTR [ebp+eiz*2-0x26]
  43ed77:	div    DWORD PTR [esi]
  43ed79:	push   ebx
  43ed7a:	imul   eax,DWORD PTR [ecx],0x6d
  43ed7d:	imul   esp,DWORD PTR [ecx-0x2a],0xfcc90000
  43ed84:	aas    
  43ed85:	xor    esp,DWORD PTR [esi+edx*4+0x63]
  43ed89:	ins    BYTE PTR es:[edi],dx
  43ed8a:	mov    ds:0xa80088e0,al
  43ed8f:	repnz arpl WORD PTR [ebp-0x59],sp
  43ed93:	fcomp  QWORD PTR [edx+esi*2+0x2f]
  43ed97:	pop    esi
  43ed98:	sbb    DWORD PTR [edx-0x30],esp
  43ed9b:	mov    BYTE PTR [ebx],0x87
  43ed9e:	das    
  43ed9f:	ins    BYTE PTR es:[edi],dx
  43eda0:	push   ss
  43eda1:	je     0x43ed71
  43eda3:	bound  edx,QWORD PTR [edi]
  43eda5:	outs   dx,BYTE PTR ds:[esi]
  43eda6:	xchg   esi,eax
  43eda7:	arpl   WORD PTR [ecx],sp
  43eda9:	imul   ebp,DWORD PTR [edi],0x7c51039b
  43edaf:	push   es
  43edb0:	inc    esp
  43edb1:	add    BYTE PTR fs:[eax],al
  43edb4:	mov    edx,DWORD PTR [edi]
  43edb6:	sbb    BYTE PTR [ebp+0x7c],ch
  43edb9:	stc    
  43edba:	sbb    DWORD PTR [ebp+0x7b],ecx
  43edbd:	pop    ss
  43edbe:	sbb    al,0x6a
  43edc0:	nop
  43edc1:	push   es
  43edc2:	std    
  43edc3:	pop    ds
  43edc4:	das    
  43edc5:	aam    0x4d
  43edc7:	aas    
  43edc8:	ins    BYTE PTR es:[edi],dx
  43edc9:	not    DWORD PTR [edi]
  43edcb:	pop    edi
  43edcc:	pop    ebx
  43edcd:	and    bh,BYTE PTR [eax]
  43edcf:	jb     0x43ee23
  43edd1:	shl    DWORD PTR [eax],cl
  43edd3:	add    BYTE PTR [edi],ch
  43edd5:	pop    DWORD PTR [ebx]
  43edd7:	push   ecx
  43edd8:	pop    esp
  43edd9:	push   es
  43edda:	cmp    BYTE PTR [edx+0x4a],dh
  43eddd:	mov    ebx,0xd1524d27
  43ede2:	pop    ss
  43ede3:	pop    ebp
  43ede4:	cmp    eax,ebp
  43ede6:	add    esp,DWORD PTR [ecx]
  43ede8:	das    
  43ede9:	fmul   QWORD PTR [ebp+0x3f]
  43edec:	jmp    0x27a9:0xe96b26ba
  43edf3:	jno    0x43edf5
  43edf5:	xchg   edi,eax
  43edf6:	adc    al,0x43
  43edf8:	add    DWORD PTR [edx-0x3b038be7],ebp
  43edfe:	add    esi,DWORD PTR [edx]
  43ee00:	das    
  43ee01:	pop    esp
  43ee02:	dec    esp
  43ee03:	aas    
  43ee04:	out    0xab,al
  43ee06:	sbb    al,0x74
  43ee08:	fcmovnb st,st(4)
  43ee0a:	add    edx,DWORD PTR ds:0x3f4c542f
  43ee10:	in     al,dx
  43ee11:	fisttp QWORD PTR [ebp-0x62bf3de8]
  43ee17:	xor    DWORD PTR [eax],eax
  43ee19:	add    ah,cl
  43ee1b:	dec    ebx
  43ee1c:	xchg   esi,eax
  43ee1d:	add    ebp,eax
  43ee1f:	(bad)  [esi-0x7af107ac]
  43ee25:	sbb    ebx,ecx
  43ee27:	fstp   QWORD PTR [ebp-0x56f081fd]
  43ee2d:	push   ebp
  43ee2e:	mov    WORD PTR [edi],?
  43ee30:	jo     0x43ee35
  43ee32:	jle    0x43ee43
  43ee34:	sbb    al,0x47
  43ee36:	inc    edx
  43ee37:	lock pop es
  43ee39:	and    BYTE PTR [ebx+0x2003ea4a],bl
  43ee3f:	fisubr WORD PTR [edx]
  43ee41:	and    DWORD PTR [ecx-0x7cded9ce],ecx
  43ee47:	inc    ecx
  43ee48:	and    DWORD PTR cs:[edx],ebp
  43ee4b:	inc    ecx
  43ee4c:	cmp    al,0x30
  43ee4e:	dec    eax
  43ee4f:	inc    esp
  43ee50:	inc    ecx
  43ee51:	and    edi,DWORD PTR [eax+0x32]
  43ee54:	add    eax,0x54b413e
  43ee59:	push   ebx
  43ee5a:	inc    ebx
  43ee5b:	dec    ebx
  43ee5c:	sbb    al,0x21
  43ee5e:	das    
  43ee5f:	fidiv  WORD PTR [eax]
  43ee61:	add    al,0xfa
  43ee63:	inc    eax
  43ee64:	cld    
  43ee65:	das    
  43ee66:	data16 cs std 
  43ee69:	adc    eax,0x2ffb34fa
  43ee6e:	or     al,0x49
  43ee70:	sbb    esi,DWORD PTR [eax]
  43ee72:	push   es
  43ee73:	xor    ch,al
  43ee75:	dec    esi
  43ee76:	das    
  43ee77:	fdivp  st(3),st
  43ee79:	add    ecx,DWORD PTR [edx+0x41]
  43ee7c:	fsubr  QWORD PTR [edi]
  43ee7e:	add    BYTE PTR [eax],al
  43ee80:	inc    edx
  43ee81:	dec    edx
  43ee82:	mov    bh,0x32
  43ee84:	or     al,0xf
  43ee86:	mov    dh,0x16
  43ee88:	add    DWORD PTR [ecx-0x16],eax
  43ee8b:	add    edi,DWORD PTR [esi]
  43ee8d:	fld    QWORD PTR [eax]
  43ee8f:	cdq    
  43ee90:	and    dl,BYTE PTR [esi]
  43ee92:	dec    edx
  43ee93:	mov    esp,0x9d73451c
  43ee98:	in     eax,dx
  43ee99:	ds jae 0x43ee31
  43ee9c:	fnsave [ecx]
  43ee9e:	push   0xde0f9b
  43eea3:	mov    ebp,0x7b5df92c
  43eea8:	add    BYTE PTR [edi],bl
  43eeaa:	addr16 je 0x43eef4
  43eead:	sti    
  43eeae:	pop    ebp
  43eeaf:	jnp    0x43ef01
  43eeb1:	inc    ecx
  43eeb2:	pop    edi
  43eeb3:	or     BYTE PTR [ebp+0x19],0x6d
  43eeb7:	dec    esp
  43eeb8:	pop    esp
  43eeb9:	and    DWORD PTR [edi+0x3a],esp
  43eebc:	aas    
  43eebd:	inc    edi
  43eebe:	jae    0x43ef0c
  43eec0:	sub    edi,ebp
  43eec2:	add    BYTE PTR [edx],ch
  43eec4:	dec    esi
  43eec5:	dec    eax
  43eec6:	ins    DWORD PTR es:[edi],dx
  43eec7:	sub    eax,0x50652e3e
  43eecc:	or     al,0x19
  43eece:	ins    DWORD PTR es:[edi],dx
  43eecf:	dec    esp
  43eed0:	ins    BYTE PTR es:[edi],dx
  43eed1:	cmp    eax,0x3c3a3573
  43eed6:	push   0xa
  43eed8:	or     dh,BYTE PTR [edx]
  43eeda:	pop    esi
  43eedb:	sub    ah,BYTE PTR [eax]
  43eedd:	inc    esp
  43eede:	ins    DWORD PTR es:[edi],dx
  43eedf:	or     al,0x13
  43eee1:	xor    al,BYTE PTR [ecx]
  43eee3:	test   DWORD PTR [eax],0x3f0e3300
  43eee9:	and    DWORD PTR [esi+0x36],ebp
  43eeec:	jno    0x43eefc
  43eeee:	pop    ebp
  43eeef:	xor    al,BYTE PTR [esp+ecx*1+0x5d]
  43eef3:	xor    dl,BYTE PTR [ebp+esi*8+0x41]
  43eef7:	dec    eax
  43eef8:	pop    esi
  43eef9:	lods   al,BYTE PTR ds:[esi]
  43eefa:	inc    esp
  43eefb:	fiadd  WORD PTR [eax]
  43eefd:	inc    edx
  43eefe:	sub    al,0xfb
  43ef00:	jb     0x43eed2
  43ef02:	cmp    al,0x32
  43ef04:	dec    esi
  43ef05:	mov    edi,0x68483c
  43ef0a:	mov    dl,0xfe
  43ef0c:	push   ebp
  43ef0d:	je     0x43eea1
  43ef0f:	add    ch,BYTE PTR [ebp+0x61]
  43ef12:	push   esi
  43ef13:	fnsave ds:0x4d0dbf52
  43ef19:	xor    esi,DWORD PTR [ebx+edx*4+0x63]
  43ef1d:	ins    BYTE PTR es:[edi],dx
  43ef1e:	mov    edx,0x8f0099dd
  43ef23:	shr    DWORD PTR [ebp+eiz*2-0x6c],cl
  43ef27:	shl    DWORD PTR [ebx+0x74],cl
  43ef2a:	xchg   esp,eax
  43ef2b:	(bad)  
  43ef2c:	push   edi
  43ef2d:	fs rcr cl,1
  43ef30:	fs gs push ss
  43ef33:	fisttp QWORD PTR [edi+0x0]
  43ef36:	into   
  43ef37:	or     BYTE PTR [ebp+0x70],ch
  43ef3a:	push   edi
  43ef3b:	or     DWORD PTR [edx+esi*2-0x71],esp
  43ef3f:	cmc    
  43ef40:	push   0x66
  43ef42:	imul   ebx,DWORD PTR ds:0xe2570001,0x6e3f
  43ef4c:	xor    bl,cl
  43ef4e:	data16 outs dx,BYTE PTR ds:[esi]
  43ef50:	jae    0x43ef40
  43ef52:	xor    eax,0x63d0686f
  43ef57:	arpl   WORD PTR [edx],sp
  43ef59:	sbb    eax,0xe1a80001
  43ef5e:	aas    
  43ef5f:	outs   dx,BYTE PTR ds:[esi]
  43ef60:	and    bl,cl
  43ef62:	data16 outs dx,BYTE PTR ds:[esi]
  43ef64:	xor    ebp,esi
  43ef66:	inc    edi
  43ef67:	jne    0x43ef9c
  43ef69:	in     al,dx
  43ef6a:	outs   dx,DWORD PTR ds:[esi]
  43ef6b:	dec    edi
  43ef6c:	mov    dh,0x8
  43ef6e:	pusha  
  43ef6f:	outs   dx,DWORD PTR ds:[esi]
  43ef70:	cmp    BYTE PTR [ebx],ch
  43ef72:	add    DWORD PTR [eax],eax
  43ef74:	jmp    0x66d7:0xa26e3fe1
  43ef7b:	outs   dx,BYTE PTR ds:[esi]
  43ef7c:	arpl   WORD PTR [eax],cx
  43ef7e:	inc    esi
  43ef7f:	gs (bad) 
  43ef82:	jo     0x43eff8
  43ef84:	das    
  43ef85:	sahf   
  43ef86:	or     al,0x6a
  43ef88:	out    dx,al
  43ef89:	mov    BYTE PTR [ebx],0x51
  43ef8c:	das    
  43ef8d:	outs   dx,DWORD PTR ds:[esi]
  43ef8e:	daa    
  43ef8f:	je     0x43ef70
  43ef91:	xchg   DWORD PTR [ebx],esi
  43ef93:	arpl   cx,dx
  43ef95:	push   esp
  43ef96:	push   ss
  43ef97:	outs   dx,DWORD PTR ds:[esi]
  43ef98:	loop   0x43ef3b
  43ef9a:	xor    BYTE PTR [esi+ebp*8-0x3a],dh
  43ef9e:	add    ecx,DWORD PTR [esi+0x2f]
  43efa1:	outs   dx,DWORD PTR ds:[esi]
  43efa2:	daa    
  43efa3:	je     0x43ef64
  43efa5:	test   DWORD PTR [edi],edx
  43efa7:	frstor fs:[ecx+0x32]
  43efab:	jae    0x43ef77
  43efad:	xor    ebp,DWORD PTR [eax]
  43efaf:	dec    eax
  43efb0:	add    BYTE PTR [eax],al
  43efb2:	xchg   edx,eax
  43efb3:	popw   ss
  43efb5:	arpl   WORD PTR [ebp+0x2f004334],bx
  43efbb:	dec    esp
  43efbc:	add    ecx,DWORD PTR [eax-0x65]
  43efbf:	sbb    DWORD PTR ds:0x2127924d,ebp
  43efc5:	dec    esi
  43efc6:	mov    dl,BYTE PTR [esi]
  43efc8:	sub    BYTE PTR [ebx+0x7c],ah
  43efcb:	adc    DWORD PTR [eax+eax*1+0x2f],eax
  43efcf:	sbb    BYTE PTR [edi+eax*2],al
  43efd2:	pop    ecx
  43efd3:	icebp  
  43efd4:	pop    ss
  43efd5:	outs   dx,BYTE PTR ds:[esi]
  43efd6:	push   ecx
  43efd7:	sub    dh,BYTE PTR [ecx]
  43efd9:	dec    ecx
  43efda:	pop    edi
  43efdb:	and    cl,BYTE PTR [edi]
  43efdd:	aas    
  43efde:	das    
  43efdf:	int3   
  43efe0:	cld    
  43efe1:	inc    esi
  43efe2:	pop    ecx
  43efe3:	rcl    DWORD PTR [edi],1
  43efe5:	outs   dx,BYTE PTR ds:[esi]
  43efe6:	push   ecx
  43efe7:	jmp    0x6330:0xb84b3d30
  43efee:	addr16 out 0xe,al
  43eff1:	fs sbb esp,edx
  43eff4:	cld    
  43eff5:	call   0xb312:0x740efe2f
  43effc:	or     eax,0xb8de1b63
  43f001:	cs or  al,0x2c
  43f004:	loope  0x43f03a
  43f006:	push   DWORD PTR [ecx]
  43f008:	rcl    DWORD PTR [eax*1-0x34fc15e3],0xde
  43f010:	mov    al,0x15
  43f012:	jecxz  0x43f054
  43f014:	mov    esp,0xcc000015
  43f019:	xor    DWORD PTR [ebx-0x48e51ce2],ebx
  43f01f:	adc    al,0xca
  43f021:	inc    esp
  43f022:	test   DWORD PTR [edx+0x2f],eax
  43f025:	fidiv  WORD PTR [ebp-0x69ce08fd]
  43f02b:	xor    ebp,edx
  43f02d:	inc    eax
  43f02e:	js     0x43f04f
  43f030:	loope  0x43f072
  43f032:	jns    0x43f062
  43f034:	mov    WORD PTR [ebx],gs
  43f036:	outs   dx,BYTE PTR ds:[esi]
  43f037:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43f039:	sbb    eax,0xde7403ea
  43f03e:	mov    eax,ds:0x3b2e9b2f
  43f043:	sub    DWORD PTR [ebp-0x6fd6c3be],edx
  43f049:	xor    DWORD PTR [ebp+0x17],eax
  43f04c:	and    DWORD PTR [ecx],0x52
  43f04f:	cmp    ebp,DWORD PTR [edi]
  43f051:	fidivr WORD PTR [edx+0x4]
  43f054:	jo     0x43f09e
  43f056:	sub    DWORD PTR cs:[ecx+0x48],edx
  43f05a:	inc    ebp
  43f05b:	sbb    BYTE PTR [edx+0x41],ch
  43f05e:	cs aaa 
  43f060:	pop    ebx
  43f061:	cmp    eax,0x1b5a1916
  43f066:	or     DWORD PTR [eax],esi
  43f068:	push   ebx
  43f069:	cmp    al,0x9
  43f06b:	daa    
  43f06c:	push   edx
  43f06d:	sbb    eax,0xdd9a03ea
  43f072:	xor    BYTE PTR [edx],dh
  43f074:	and    eax,DWORD PTR [ecx-0x4]
  43f077:	xor    DWORD PTR [edx+esi*1],ecx
  43f07a:	add    DWORD PTR [eax],ebx
  43f07c:	add    BYTE PTR [eax],al
  43f07e:	cmp    esi,DWORD PTR ss:[ebx-0x10]
  43f082:	call   0xf40c5d9d
  43f087:	sub    esp,DWORD PTR [edx-0x30]
  43f08a:	push   eax
  43f08b:	pop    ss
  43f08c:	arpl   bp,ax
  43f08e:	inc    edi
  43f08f:	fiadd  WORD PTR [eax]
  43f091:	mov    DWORD PTR [ebx],ebp
  43f093:	pop    ds
  43f094:	addr16 mov ebp,0xc4674817
  43f09a:	cmp    BYTE PTR [eax],ch
  43f09c:	pop    esi
  43f09d:	enter  0x1c10,0x6a
  43f0a1:	mov    ebp,0xa8791b07
  43f0a6:	sub    al,0x14
  43f0a8:	add    DWORD PTR [ecx-0x458ecde8],esi
  43f0ae:	pop    es
  43f0af:	inc    esp
  43f0b0:	pop    ebp
  43f0b1:	mov    ebx,0x8c6e4707
  43f0b6:	inc    ecx
  43f0b7:	sub    dl,BYTE PTR [eax-0x17]
  43f0ba:	sub    al,0x1a
  43f0bc:	add    DWORD PTR [esi+0x7b4e2a47],ebp
  43f0c2:	inc    eax
  43f0c3:	repz popa 
  43f0c5:	dec    edx
  43f0c6:	pop    ebx
  43f0c7:	inc    ecx
  43f0c8:	ds dec edi
  43f0ca:	daa    
  43f0cb:	inc    esp
  43f0cc:	jp     0x43f0ee
  43f0ce:	cmp    eax,0x2b366840
  43f0d3:	push   0x0
  43f0d5:	xor    BYTE PTR ds:0x1d3b5e2a,bl
  43f0db:	inc    ecx
  43f0dc:	ins    DWORD PTR es:[edi],dx
  43f0dd:	sbb    al,BYTE PTR [esi]
  43f0df:	sub    dl,BYTE PTR [ebp+esi*1+0x0]
  43f0e3:	add    BYTE PTR [edx],cl
  43f0e5:	sub    ch,BYTE PTR [esi+0x1a]
  43f0e8:	jo     0x43f0ff
  43f0ea:	gs or  eax,0x2641509
  43f0f0:	hlt    
  43f0f1:	fld    QWORD PTR [eax]
  43f0f3:	cmp    ch,BYTE PTR [ebx]
  43f0f5:	es ins DWORD PTR es:[edi],dx
  43f0f7:	add    BYTE PTR [edx+0x2a6437d1],ch
  43f0fd:	in     al,dx
  43f0fe:	arpl   WORD PTR [ecx-0x65],si
  43f101:	push   es
  43f102:	data16 je 0x43f153
  43f105:	pop    es
  43f106:	pop    eax
  43f107:	fs jnp 0x43f0d5
  43f10a:	gs push edi
  43f10c:	xchg   esi,eax
  43f10d:	loope  0x43f174
  43f10f:	add    bh,cl
  43f111:	out    dx,eax
  43f112:	ins    BYTE PTR es:[edi],dx
  43f113:	gs push esp
  43f115:	out    dx,eax
  43f116:	arpl   WORD PTR [ebp+edx*4-0x35],si
  43f11a:	push   edi
  43f11b:	arpl   WORD PTR [ebp-0xa],di
  43f11e:	data16 ins BYTE PTR es:[edi],dx
  43f120:	xchg   ecx,esp
  43f122:	push   ecx
  43f123:	dec    ecx
  43f124:	mov    al,0x22
  43f126:	dec    ebx
  43f127:	inc    ebp
  43f128:	mov    ch,BYTE PTR [edi-0x1e4d939d]
  43f12e:	dec    ecx
  43f12f:	dec    esp
  43f130:	mov    ebx,DWORD PTR [edx]
  43f132:	push   esp
  43f133:	push   esp
  43f134:	push   ebp
  43f135:	mov    ebp,DWORD PTR [ecx]
  43f137:	fs ret 0x104
  43f13b:	add    BYTE PTR [ecx],ah
  43f13d:	loopne 0x43f189
  43f13f:	gs call 0x6428:0x946565f6
  43f147:	je     0x43f149
  43f149:	add    BYTE PTR [edi],bh
  43f14b:	lock bound ebp,QWORD PTR [edi+0x16]
  43f14f:	loope  0x43f1b4
  43f151:	add    BYTE PTR [eax-0x3],dl
  43f154:	ins    BYTE PTR es:[edi],dx
  43f155:	inc    ecx
  43f156:	push   esi
  43f157:	or     DWORD PTR [edi],esi
  43f159:	jne    0x43f1d3
  43f15b:	or     BYTE PTR [edx+esi*2+0x8],ah
  43f15f:	int3   
  43f160:	arpl   WORD PTR [ebp-0x3a],sp
  43f163:	loopne 0x43f160
  43f165:	add    BYTE PTR [eax],dh
  43f167:	std    
  43f168:	ins    BYTE PTR es:[edi],dx
  43f169:	push   ebp
  43f16a:	and    eax,0x304566fd
  43f16f:	int    0x6b
  43f171:	add    BYTE PTR [edi],ch
  43f173:	std    
  43f174:	aas    
  43f175:	push   esp
  43f176:	outs   dx,BYTE PTR ds:[esi]
  43f177:	test   DWORD PTR [ebx+0x2d],0x6c1f8d5d
  43f17e:	adc    eax,edi
  43f180:	add    edi,DWORD PTR [edx]
  43f182:	das    
  43f183:	add    al,0x20
  43f185:	je     0x43f175
  43f187:	fisub  DWORD PTR [ebx]
  43f189:	jo     0x43f18e
  43f18b:	mov    ds:0x9aee6d0d,al
  43f190:	pop    ds
  43f191:	outs   dx,BYTE PTR ds:[esi]
  43f192:	adc    bl,BYTE PTR [eax-0x39039cf4]
  43f198:	add    eax,DWORD PTR [edi-0x1]
  43f19b:	outs   dx,BYTE PTR ds:[esi]
  43f19c:	inc    edi
  43f19d:	push   eax
  43f19e:	out    dx,al
  43f19f:	push   esi
  43f1a0:	dec    edx
  43f1a1:	sub    dh,bl
  43f1a3:	jp     0x43f1ec
  43f1a5:	add    BYTE PTR [edi],ch
  43f1a7:	dec    ebp
  43f1a8:	add    bl,BYTE PTR [ecx-0x2e]
  43f1ab:	pop    eax
  43f1ac:	or     eax,0xd000006a
  43f1b1:	mov    BYTE PTR [ebx],0xe6
  43f1b4:	xor    ebx,DWORD PTR [edx+0x1e]
  43f1b7:	imul   ecx,esp,0x56
  43f1ba:	sbb    al,BYTE PTR [eax]
  43f1bc:	das    
  43f1bd:	retf   
  43f1be:	or     BYTE PTR [ebx-0x76],ch
  43f1c1:	bound  ecx,QWORD PTR [ebx+eiz*2]
  43f1c4:	mov    ds:0x2be703c5,eax
  43f1c9:	xor    bl,BYTE PTR [edi]
  43f1cb:	imul   ecx,DWORD PTR [edx+ecx*1+0xe2f000d],0x9
  43f1d3:	pop    ecx
  43f1d4:	adc    BYTE PTR [ecx],0x32
  43f1d7:	addr16 das 
  43f1d9:	inc    ebx
  43f1da:	std    
  43f1db:	pop    eax
  43f1dc:	bound  ecx,QWORD PTR [ecx]
  43f1de:	sbb    DWORD PTR [ecx+0x58],ebp
  43f1e1:	lds    eax,FWORD PTR [ebx]
  43f1e3:	pushf  
  43f1e4:	sub    al,0xcc
  43f1e6:	(bad)  
  43f1e8:	pop    ebx
  43f1e9:	hlt    
  43f1ea:	and    eax,DWORD PTR [eax]
  43f1ec:	das    
  43f1ed:	fimul  WORD PTR [ebp+0x5395407]
  43f1f3:	das    
  43f1f4:	inc    esi
  43f1f5:	sub    al,0x5
  43f1f7:	add    al,0x1b
  43f1f9:	fstp   DWORD PTR [edx]
  43f1fb:	sbb    BYTE PTR [ecx],bl
  43f1fd:	aas    
  43f1fe:	or     eax,0x75de2f14
  43f203:	add    eax,0x15f52df6
  43f208:	or     al,0x3f
  43f20a:	or     DWORD PTR [eax],esi
  43f20c:	sbb    ebx,esi
  43f20e:	das    
  43f20f:	add    al,0xe6
  43f211:	sub    ebx,ebx
  43f213:	xor    DWORD PTR [eax],eax
  43f215:	add    dh,bh
  43f217:	sub    eax,0x2a052adc
  43f21c:	rol    BYTE PTR [ebx],0x77
  43f21f:	fistp  WORD PTR [esi-0x45bc2de7]
  43f225:	adc    eax,0x29b643d0
  43f22a:	das    
  43f22b:	fiadd  WORD PTR [ecx+0x7]
  43f22e:	aam    0x38
  43f230:	lea    esp,[edi+edx*8]
  43f233:	das    
  43f234:	jmp    0xc225:0x88d9be03
  43f23b:	fnsave [esp+edx*1-0x63]
  43f23f:	aas    
  43f240:	jl     0x43f259
  43f242:	push   ebp
  43f243:	cmp    al,BYTE PTR [esi-0x7821d0d1]
  43f249:	pop    es
  43f24a:	bound  edi,QWORD PTR [ecx]
  43f24c:	outs   dx,BYTE PTR ds:[esi]
  43f24d:	dec    ecx
  43f24e:	nop
  43f24f:	inc    edx
  43f250:	inc    ebp
  43f251:	xor    al,0x96
  43f253:	inc    ebp
  43f254:	dec    eax
  43f255:	sbb    BYTE PTR [eax+esi*1-0x2157fc16],cl
  43f25c:	push   ss
  43f25d:	sbb    DWORD PTR [ebx+0x2e],esp
  43f260:	xor    eax,0x4c396b18
  43f265:	sbb    DWORD PTR [esi+0xf],ecx
  43f268:	add    DWORD PTR ds:0x46673b3d,edi
  43f26e:	jb     0x43f24e
  43f270:	add    BYTE PTR [ecx],al
  43f272:	aaa    
  43f273:	and    al,0x6d
  43f275:	or     eax,0x7047f6
  43f27a:	add    BYTE PTR [eax],al
  43f27c:	add    DWORD PTR [edx],edi
  43f27e:	add    DWORD PTR [ecx-0x2a1e2ce],ebp
  43f284:	in     eax,dx
  43f285:	cs jae 0x43f283
  43f288:	inc    edi
  43f289:	dec    eax
  43f28a:	ins    DWORD PTR es:[edi],dx
  43f28b:	sbb    DWORD PTR ds:0x1c046445,edi
  43f291:	inc    ecx
  43f292:	add    DWORD PTR [edx],edi
  43f294:	aaa    
  43f295:	packuswb mm2,mm1
  43f298:	push   ebx
  43f299:	dec    eax
  43f29a:	pop    ebp
  43f29b:	lds    eax,FWORD PTR [edi+0x3a]
  43f29e:	ror    DWORD PTR ds:0x13bd713f,1
  43f2a5:	inc    ebp
  43f2a6:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  43f2a8:	or     eax,DWORD PTR [edx+0x6d]
  43f2ab:	int3   
  43f2ac:	fiadd  WORD PTR ds:[eax]
  43f2af:	test   BYTE PTR [edi],dh
  43f2b1:	and    DWORD PTR [esi-0x63],ebx
  43f2b4:	pop    es
  43f2b5:	dec    eax
  43f2b6:	imul   ecx,DWORD PTR [eax-0x739ac5f6],0x8a791f08
  43f2c0:	push   edi
  43f2c1:	cs ins DWORD PTR es:[edi],dx
  43f2c3:	nop
  43f2c4:	push   ecx
  43f2c5:	inc    esp
  43f2c6:	aas    
  43f2c7:	nop
  43f2c8:	dec    eax
  43f2c9:	sub    bl,BYTE PTR [esi+0x7b]
  43f2cc:	sub    al,0x16
  43f2ce:	add    cl,BYTE PTR [esi+0x4c643657]
  43f2d4:	sbb    ebp,DWORD PTR [edx]
  43f2d6:	pop    eax
  43f2d7:	push   ecx
  43f2d8:	push   edx
  43f2d9:	inc    esp
  43f2da:	pop    ebp
  43f2db:	inc    ebp
  43f2dc:	inc    esi
  43f2dd:	inc    eax
  43f2de:	xor    al,0xe9
  43f2e0:	add    BYTE PTR [eax],al
  43f2e2:	sub    al,0xde
  43f2e4:	add    BYTE PTR [eax],al
  43f2e6:	(bad)  
  43f2e7:	fld    QWORD PTR [eax]
  43f2e9:	add    dh,al
  43f2eb:	fld    QWORD PTR [eax]
  43f2ed:	add    dh,al
  43f2ef:	fld    QWORD PTR [eax]
  43f2f1:	add    dh,dl
  43f2f3:	fld    QWORD PTR [eax]
  43f2f5:	add    dh,dl
  43f2f7:	fld    QWORD PTR [eax]
  43f2f9:	add    dh,al
  43f2fb:	fld    QWORD PTR [eax]
  43f2fd:	add    dh,al
  43f2ff:	fld    QWORD PTR [eax]
  43f301:	add    BYTE PTR [esi-0x69ffff23],dl
  43f307:	fld    QWORD PTR [eax]
  43f309:	add    BYTE PTR [esi-0x79ffff23],al
  43f30f:	fld    QWORD PTR [eax]
  43f311:	add    BYTE PTR [esi-0x69ffff23],dl
  43f317:	fld    QWORD PTR [eax]
  43f319:	add    BYTE PTR [esi-0x79ffff23],al
  43f31f:	fld    QWORD PTR [eax]
  43f321:	add    BYTE PTR [esi-0x23],dl
  43f324:	add    BYTE PTR [eax],al
  43f326:	push   esi
  43f327:	fld    QWORD PTR [eax]
  43f329:	add    BYTE PTR [esi-0x23],al
  43f32c:	add    BYTE PTR [eax],al
  43f32e:	inc    esi
  43f32f:	fld    QWORD PTR [eax]
  43f331:	add    BYTE PTR [esi-0x23],dl
  43f334:	add    BYTE PTR [eax],al
  43f336:	push   esi
  43f337:	fld    QWORD PTR [eax]
  43f339:	add    BYTE PTR [esi-0x23],al
  43f33c:	add    BYTE PTR [eax],al
  43f33e:	inc    esi
  43f33f:	fld    QWORD PTR [eax]
  43f341:	add    BYTE PTR [esi],dl
  43f343:	fld    QWORD PTR [eax]
  43f345:	add    BYTE PTR [eax],al
  43f347:	add    BYTE PTR [esi],dl
  43f349:	fld    QWORD PTR [eax]
  43f34b:	add    BYTE PTR [esi],al
  43f34d:	fld    QWORD PTR [eax]
  43f34f:	add    BYTE PTR [esi],al
  43f351:	fld    QWORD PTR [eax]
  43f353:	add    BYTE PTR [esi],dl
  43f355:	fld    QWORD PTR [eax]
  43f357:	add    BYTE PTR [esi],dl
  43f359:	fld    QWORD PTR [eax]
  43f35b:	add    BYTE PTR [esi],al
  43f35d:	fld    QWORD PTR [eax]
  43f35f:	add    BYTE PTR [edi],ch
  43f361:	mov    DWORD PTR [ebx],0x3c72f00
  43f367:	add    BYTE PTR [edi],ch
  43f369:	mov    DWORD PTR [ebx],0x3c72f00
  43f36f:	add    BYTE PTR [edi],ch
  43f371:	mov    DWORD PTR [ebx],0x3c72f00
  43f377:	add    BYTE PTR [edi],ch
  43f379:	mov    DWORD PTR [ebx],0x3c72f00
  43f37f:	add    BYTE PTR [edi],ch
  43f381:	mov    DWORD PTR [ebx],0x3c72f00
  43f387:	add    BYTE PTR [edi],ch
  43f389:	mov    DWORD PTR [ebx],0x3c72f00
  43f38f:	add    BYTE PTR [edi],ch
  43f391:	mov    DWORD PTR [ebx],0x3c72f00
  43f397:	add    BYTE PTR [edi],ch
  43f399:	mov    DWORD PTR [ebx],0x3c72f00
  43f39f:	add    BYTE PTR [edi],ch
  43f3a1:	mov    DWORD PTR [ebx],0x3c72f00
  43f3a7:	add    BYTE PTR [edi],ch
  43f3a9:	mov    DWORD PTR [ebx],0x2f000000
  43f3af:	mov    DWORD PTR [ebx],0x3c72f00
  43f3b5:	add    BYTE PTR [edi],ch
  43f3b7:	mov    DWORD PTR [ebx],0x3c72f00
  43f3bd:	add    BYTE PTR [edi],ch
  43f3bf:	mov    DWORD PTR [ebx],0x3c72f00
  43f3c5:	add    BYTE PTR [edi],ch
  43f3c7:	lds    eax,FWORD PTR [ebx]
  43f3c9:	add    BYTE PTR [edi],ch
  43f3cb:	lds    eax,FWORD PTR [ebx]
  43f3cd:	add    BYTE PTR [edi],ch
  43f3cf:	lds    eax,FWORD PTR [ebx]
  43f3d1:	add    BYTE PTR [edi],ch
  43f3d3:	lds    eax,FWORD PTR [ebx]
  43f3d5:	add    BYTE PTR [edi],ch
  43f3d7:	lds    eax,FWORD PTR [ebx]
  43f3d9:	add    BYTE PTR [edi],ch
  43f3db:	fsubp  st(1),st
  43f3dd:	add    ebp,DWORD PTR [edi]
  43f3df:	fsubp  st(1),st
  43f3e1:	add    ebp,DWORD PTR [edi]
  43f3e3:	fsubp  st(1),st
  43f3e5:	add    ebp,DWORD PTR [edi]
  43f3e7:	fsubp  st(1),st
  43f3e9:	add    ebp,DWORD PTR [edi]
  43f3eb:	fsubp  st(1),st
  43f3ed:	add    ebp,DWORD PTR [edi]
  43f3ef:	fsubp  st(1),st
  43f3f1:	add    ebp,DWORD PTR [edi]
  43f3f3:	fsubp  st(1),st
  43f3f5:	add    ebp,DWORD PTR [edi]
  43f3f7:	fsubp  st(1),st
  43f3f9:	add    ebp,DWORD PTR [edi]
  43f3fb:	fsubp  st(1),st
  43f3fd:	add    ebp,DWORD PTR [edi]
  43f3ff:	fsubp  st(1),st
  43f401:	add    ebp,DWORD PTR [edi]
  43f403:	fsubp  st(1),st
  43f405:	add    ebp,DWORD PTR [edi]
  43f407:	fsubp  st(1),st
  43f409:	add    ebp,DWORD PTR [edi]
  43f40b:	fsubp  st(1),st
  43f40d:	add    ebp,DWORD PTR [edi]
  43f40f:	fsubp  st(1),st
  43f411:	add    eax,DWORD PTR [eax]
  43f413:	add    BYTE PTR [edi],ch
  43f415:	fsubp  st(1),st
  43f417:	add    ebp,DWORD PTR [edi]
  43f419:	fsubp  st(1),st
  43f41b:	add    ebp,DWORD PTR [edi]
  43f41d:	fsubp  st(1),st
  43f41f:	add    ebp,DWORD PTR [edi]
  43f421:	fsubp  st(1),st
  43f423:	add    ebp,DWORD PTR [edi]
  43f425:	fsubp  st(1),st
  43f427:	add    ebp,DWORD PTR [edi]
  43f429:	fsubp  st(1),st
  43f42b:	add    ebp,DWORD PTR [edi]
  43f42d:	fsubp  st(1),st
  43f42f:	add    ebp,DWORD PTR [edi]
  43f431:	fsubp  st(1),st
  43f433:	add    ebp,DWORD PTR [edi]
  43f435:	fsubp  st(1),st
  43f437:	add    ebp,DWORD PTR [edi]
  43f439:	fsubp  st(1),st
  43f43b:	add    ebp,DWORD PTR [edi]
  43f43d:	fsubp  st(1),st
  43f43f:	add    ebp,DWORD PTR [edi]
  43f441:	fsubp  st(1),st
  43f443:	add    ebp,DWORD PTR [edi]
  43f445:	ficom  WORD PTR [ecx]
  43f447:	inc    eax
  43f448:	outs   dx,DWORD PTR ds:[esi]
  43f449:	fiadd  WORD PTR [ecx+0x41]
  43f44c:	outs   dx,DWORD PTR ds:[esi]
  43f44d:	fsubp  st(0),st
  43f44f:	add    ch,BYTE PTR [edi]
  43f451:	(bad)  
  43f453:	add    ch,BYTE PTR [edi]
  43f455:	fiadd  WORD PTR [eax]
  43f457:	out    0x2c,al
  43f459:	fiadd  WORD PTR [eax]
  43f45b:	jno    0x43f4d1
  43f45d:	push   ds
  43f45e:	add    DWORD PTR [ecx],ebx
  43f460:	jo     0x43f480
  43f462:	add    ecx,ebp
  43f464:	sub    al,0xde
  43f466:	add    bh,dh
  43f468:	sub    al,0xde
  43f46a:	add    dh,bl
  43f46c:	sub    al,0xde
  43f46e:	add    cl,ch
  43f470:	sub    al,0xde
  43f472:	add    BYTE PTR [ecx-0x16fee198],dl
  43f478:	add    BYTE PTR [eax],al
  43f47a:	sub    al,0xde
  43f47c:	add    dl,bl
  43f47e:	sub    al,0xde
  43f480:	add    dh,ch
  43f482:	sub    al,0xde
  43f484:	add    cl,ch
  43f486:	sub    al,0xde
  43f488:	add    al,ch
  43f48a:	sub    al,0xde
  43f48c:	add    BYTE PTR [edi],bl
  43f48e:	int    0xee
  43f490:	mov    ebx,0x3c759a38
  43f495:	jmp    0xc944d2c6
  43f49a:	das    
  43f49b:	popa   
  43f49c:	sbb    ecx,ebp
  43f49e:	sub    al,0xde
  43f4a0:	add    cl,ch
  43f4a2:	sub    al,0xde
  43f4a4:	add    cl,ch
  43f4a6:	sub    al,0xde
  43f4a8:	add    cl,ch
  43f4aa:	push   0xb8e8f7ae
  43f4af:	mov    ch,0xf7
  43f4b1:	cld    
  43f4b2:	sub    al,0xde
  43f4b4:	add    dl,dh
  43f4b6:	sub    al,0xde
  43f4b8:	add    BYTE PTR [ecx+0x2e00de2c],ch
  43f4be:	sub    dh,bl
  43f4c0:	add    BYTE PTR [ecx+0x33],ch
  43f4c3:	fiadd  WORD PTR [eax]
  43f4c5:	push   0xf1f7b594
  43f4ca:	sub    al,0xde
  43f4cc:	add    cl,ah
  43f4ce:	sub    al,0xde
  43f4d0:	add    BYTE PTR [eax],al
  43f4d2:	out    0xe1,al
  43f4d4:	add    BYTE PTR [eax],al
  43f4d6:	xchg   ecx,eax
  43f4d7:	loope  0x43f4d9
  43f4d9:	add    BYTE PTR [esi],dl
  43f4db:	loop   0x43f4dd
  43f4dd:	add    BYTE PTR [eax],al
  43f4df:	add    BYTE PTR [esi],dl
  43f4e1:	loop   0x43f4e3
  43f4e3:	add    BYTE PTR [esi],al
  43f4e5:	inc    edx
  43f4e6:	idiv   BYTE PTR [edi]
  43f4e8:	push   es
  43f4e9:	loop   0x43f4eb
  43f4eb:	add    dh,dl
  43f4ed:	loope  0x43f4ef
  43f4ef:	add    dh,dl
  43f4f1:	cdq    
  43f4f2:	add    al,BYTE PTR [eax-0x3a]
  43f4f5:	loope  0x43f4f7
  43f4f7:	add    dh,al
  43f4f9:	loope  0x43f4fb
  43f4fb:	add    dh,dl
  43f4fd:	dec    ebx
  43f4fe:	(bad)  
  43f4ff:	aas    
  43f500:	(bad)  
  43f501:	loope  0x43f503
  43f503:	add    dh,al
  43f505:	loope  0x43f507
  43f507:	add    BYTE PTR [esi],al
  43f509:	es or  al,0x40
  43f50c:	xchg   esi,eax
  43f50d:	loope  0x43f50f
  43f50f:	add    BYTE PTR [esi+0x360000e1],dl
  43f515:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f516:	or     BYTE PTR [eax-0x7a],al
  43f519:	loope  0x43f51b
  43f51b:	add    BYTE PTR [esi+0x6a0000e1],dl
  43f521:	pop    ebp
  43f522:	add    eax,0xe18640
  43f527:	add    BYTE PTR [esi-0x177fff1f],al
  43f52d:	sub    BYTE PTR [edx],dl
  43f52f:	inc    eax
  43f530:	push   esi
  43f531:	loope  0x43f533
  43f533:	add    BYTE PTR [esi-0x1f],al
  43f536:	add    BYTE PTR [eax],ah
  43f538:	rol    BYTE PTR [esi],cl
  43f53a:	cmovo  edx,DWORD PTR [esi-0x1f]
  43f53e:	add    BYTE PTR [eax],al
  43f540:	push   esi
  43f541:	lods   eax,DWORD PTR ds:[esi]
  43f542:	mov    eax,0x2d0000c9
  43f547:	pop    eax
  43f548:	xor    eax,DWORD PTR [eax+0x46]
  43f54b:	loope  0x43f54d
  43f54d:	mov    eax,ds:0xc9bfe22f
  43f552:	inc    esp
  43f553:	stc    
  43f554:	scas   al,BYTE PTR es:[edi]
  43f555:	dec    ecx
  43f556:	outs   dx,DWORD PTR ds:[esi]
  43f557:	xchg   edi,eax
  43f558:	xchg   ebx,eax
  43f559:	cdq    
  43f55a:	fisub  DWORD PTR [esi]
  43f55c:	out    0xa7,eax
  43f55e:	(bad)  
  43f560:	js     0x43f5c8
  43f562:	outs   dx,DWORD PTR ds:[esi]
  43f563:	(bad)  
  43f564:	cmp    bl,bh
  43f566:	push   edx
  43f567:	call   0x7ca5:0xde6089f6
  43f56e:	outs   dx,DWORD PTR ds:[esi]
  43f56f:	push   es
  43f570:	jae    0x43f542
  43f572:	mov    edx,0xaa030af7
  43f577:	int    0x69
  43f579:	cdq    
  43f57a:	outs   dx,DWORD PTR ds:[esi]
  43f57b:	sahf   
  43f57c:	pop    ecx
  43f57d:	lahf   
  43f57e:	jae    0x43f522
  43f580:	or     DWORD PTR ds:0xb67f35b0,0x6f
  43f587:	inc    esp
  43f588:	(bad)  
  43f58a:	mov    DWORD PTR [ebx-0x67],edi
  43f58d:	inc    esi
  43f58e:	dec    eax
  43f58f:	iret   
  43f590:	mov    esi,0xc1abefcc
  43f595:	fild   QWORD PTR [ebx-0x173983b3]
  43f59b:	and    BYTE PTR [esi-0x59],ch
  43f59e:	out    dx,al
  43f59f:	bnd ja 0x43f606
  43f5a2:	fisub  DWORD PTR [ebx-0x797f7526]
  43f5a8:	mov    ds:0xed00007b,eax
  43f5ad:	dec    edx
  43f5ae:	scas   eax,DWORD PTR es:[edi]
  43f5af:	mov    DWORD PTR [ecx+0x54f4700d],ecx
  43f5b5:	pushf  
  43f5b6:	gs dec esi
  43f5b8:	in     al,dx
  43f5b9:	push   ebp
  43f5ba:	mov    ds:0x8efa4c71,al
  43f5bf:	sbb    BYTE PTR es:[ebx],bh
  43f5c2:	test   BYTE PTR [ecx],ah
  43f5c4:	jmp    0x43f5a4
  43f5c6:	in     al,dx
  43f5c7:	adc    BYTE PTR [ebp+0x206a21dd],al
  43f5cd:	rcr    DWORD PTR [eax+eax*8],0x22
  43f5d1:	and    eax,DWORD PTR [ebx]
  43f5d3:	popa   
  43f5d4:	cld    
  43f5d5:	scas   eax,DWORD PTR es:[edi]
  43f5d6:	push   cs
  43f5d7:	lods   eax,DWORD PTR ds:[esi]
  43f5d8:	stc    
  43f5d9:	sbb    BYTE PTR [esi+ebp*2-0x3882de19],al
  43f5e0:	out    dx,eax
  43f5e1:	dec    ebp
  43f5e2:	fbld   TBYTE PTR [ecx-0x2a]
  43f5e5:	jle    0x43f5b7
  43f5e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f5e8:	fwait
  43f5e9:	and    al,0xed
  43f5eb:	push   ds
  43f5ec:	push   ds
  43f5ed:	fimul  DWORD PTR [ebx+eax*4-0x52]
  43f5f1:	xor    DWORD PTR [eax-0x35],ebx
  43f5f4:	push   0xd3463219
  43f5f9:	sbb    DWORD PTR [edx-0x26],0x1b
  43f5fd:	icebp  
  43f5fe:	adc    DWORD PTR [ebp-0x2b],0xcd611d0f
  43f605:	or     ebp,esp
  43f607:	mov    esi,0x7972e755
  43f60c:	mov    ds:0x369708,al
  43f611:	add    ch,cl
  43f613:	scas   al,BYTE PTR es:[edi]
  43f614:	dec    eax
  43f615:	jecxz  0x43f5f7
  43f617:	adc    bh,BYTE PTR ds:0x993d5f87
  43f61d:	xchg   esi,eax
  43f61e:	stos   DWORD PTR es:[edi],eax
  43f61f:	or     BYTE PTR [ebx-0x45],dh
  43f622:	dec    ebp
  43f623:	or     DWORD PTR [ecx-0x66],esp
  43f626:	pop    ebx
  43f627:	inc    ebx
  43f628:	inc    esp
  43f629:	outs   dx,BYTE PTR ds:[esi]
  43f62a:	sub    BYTE PTR [edi-0x696da6fa],0xb4
  43f631:	mov    dh,0xe8
  43f633:	cmp    ebx,DWORD PTR [esi+0x953bbca]
  43f639:	mov    ds,WORD PTR [edx+0xd]
  43f63c:	retf   0xdbf
  43f63f:	xor    edx,ebp
  43f641:	add    ebp,DWORD PTR [edi]
  43f643:	fiadd  WORD PTR [eax]
  43f645:	and    al,0x68
  43f647:	cwde   
  43f648:	les    ebx,FWORD PTR ds:0x35c49770
  43f64e:	push   0x19837b2
  43f653:	loope  0x43f624
  43f655:	dec    edx
  43f656:	cmp    al,0xe7
  43f658:	or     dh,BYTE PTR [esi]
  43f65a:	xchg   ebx,eax
  43f65b:	mov    bl,0x37
  43f65d:	mov    ds:0xaed7f130,eax
  43f662:	mov    cl,0x4d
  43f664:	data16 fld TBYTE PTR [ebx-0x3cd5c851]
  43f66b:	neg    BYTE PTR [ebp+0x0]
  43f66e:	int    0x12
  43f670:	adc    BYTE PTR [esi-0x46c8445e],dl
  43f676:	add    BYTE PTR [eax],al
  43f678:	sub    cl,cl
  43f67a:	jl     0x43f6a2
  43f67c:	aam    0x1d
  43f67e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f67f:	lods   al,BYTE PTR ds:[esi]
  43f680:	jo     0x43f637
  43f682:	aaa    
  43f683:	sub    DWORD PTR [ecx+0x6d],ebp
  43f686:	imul   eax,DWORD PTR [ebp+0x48],0x3af6b5e0
  43f68d:	ret    0xda37
  43f690:	xlat   BYTE PTR ds:[ebx]
  43f691:	inc    dx
  43f693:	and    ecx,esi
  43f695:	(bad)  
  43f696:	mov    WORD PTR [esi-0x2f],ss
  43f699:	mov    ebp,0xa7b6ab37
  43f69e:	(bad)  
  43f69f:	or     BYTE PTR [edi+0x14ad6fdb],ch
  43f6a5:	mov    edi,0x10e8c637
  43f6aa:	loop   0x43f6c8
  43f6ac:	outs   dx,DWORD PTR ds:[esi]
  43f6ad:	mov    WORD PTR fs:[ecx+edx*4-0x5d],?
  43f6b2:	aaa    
  43f6b3:	jnp    0x43f724
  43f6b5:	sbb    DWORD PTR [esp+ebx*8],edi
  43f6b8:	and    BYTE PTR [edi+0x75d58f0c],dl
  43f6be:	aaa    
  43f6bf:	add    BYTE PTR [eax],cl
  43f6c1:	retf   
  43f6c2:	scas   al,BYTE PTR es:[edi]
  43f6c3:	xchg   esp,eax
  43f6c4:	das    
  43f6c5:	sbb    eax,0xa2c71eac
  43f6ca:	xchg   ebx,eax
  43f6cb:	aas    
  43f6cc:	xor    bh,BYTE PTR [edi+0x7cae2c1]
  43f6d2:	sub    eax,0x6d54b731
  43f6d7:	aas    
  43f6d8:	mov    bh,0xee
  43f6da:	dec    edi
  43f6db:	rol    DWORD PTR [eax],0x0
  43f6de:	test   al,0x12
  43f6e0:	inc    ebp
  43f6e1:	jl     0x43f6d7
  43f6e3:	add    al,0x59
  43f6e5:	aas    
  43f6e6:	and    DWORD PTR [eax+0x14108d28],eax
  43f6ec:	xchg   BYTE PTR [ebp+0x3f4344e3],al
  43f6f2:	and    dl,BYTE PTR [ecx+0x3f0fe9a2]
  43f6f8:	and    edx,ebp
  43f6fa:	jns    0x43f736
  43f6fc:	push   ds
  43f6fd:	aas    
  43f6fe:	imul   esi,DWORD PTR [esi],0xffffff97
  43f701:	in     al,0xaa
  43f703:	leave  
  43f704:	je     0x43f74c
  43f706:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f707:	push   dx
  43f709:	ds jne 0x43f6d1
  43f70c:	add    cl,ah
  43f70e:	and    eax,0x898371ee
  43f713:	xor    dh,BYTE PTR [edi+0x3d]
  43f716:	daa    
  43f717:	inc    edi
  43f718:	sub    eax,0x23fd3c19
  43f71d:	inc    ebx
  43f71e:	ja     0x43f6bd
  43f720:	stos   DWORD PTR es:[edi],eax
  43f721:	cmp    al,0x67
  43f723:	pop    edx
  43f724:	(bad)  
  43f725:	cmp    BYTE PTR [eax+ebp*8],dl
  43f728:	xchg   ecx,eax
  43f729:	mov    eax,0x3bd04696
  43f72e:	stos   BYTE PTR es:[edi],al
  43f72f:	push   ebp
  43f730:	dec    edi
  43f731:	or     BYTE PTR ds:0xd0e3e013,ch
  43f737:	or     dh,ch
  43f739:	cmp    ch,BYTE PTR [edi]
  43f73b:	stc    
  43f73c:	ja     0x43f780
  43f73e:	in     eax,dx
  43f73f:	mov    edi,0x9645
  43f744:	fisub  DWORD PTR [edi-0x5bfad646]
  43f74a:	or     al,0x1c
  43f74c:	pop    ebp
  43f74d:	aam    0xbb
  43f74f:	sub    eax,0x55737e49
  43f754:	neg    BYTE PTR [eax]
  43f756:	ja     0x43f711
  43f758:	out    dx,eax
  43f759:	outs   dx,DWORD PTR ds:[esi]
  43f75a:	mov    ecx,0x6218ada2
  43f75f:	mov    dl,0x5d
  43f761:	aad    0x2b
  43f763:	scas   al,BYTE PTR es:[edi]
  43f764:	sbb    BYTE PTR ds:[edx],dh
  43f767:	cdq    
  43f768:	jae    0x43f7e8
  43f76a:	inc    esi
  43f76b:	rcpps  xmm3,XMMWORD PTR [edx+0x714ae444]
  43f772:	(bad)  
  43f773:	dec    eax
  43f774:	pop    esp
  43f775:	push   ecx
  43f776:	mov    esi,0x3c381264
  43f77b:	add    al,0x8b
  43f77d:	jbe    0x43f72d
  43f77f:	mov    ebp,0xc1a48c5a
  43f784:	xor    DWORD PTR [ecx-0x6a],eax
  43f787:	xchg   DWORD PTR [ebp-0x30],esp
  43f78a:	jae    0x43f7c7
  43f78c:	add    dh,0x81
  43f78f:	sbb    eax,0x6349c917
  43f794:	dec    ebp
  43f795:	add    BYTE PTR [ecx+0x67c0d888],0x7a
  43f79c:	ds pop ebx
  43f79e:	(bad)  
  43f7a0:	mov    eax,0x2bc7b248
  43f7a5:	adc    BYTE PTR [esi-0x29],0x0
  43f7a9:	add    BYTE PTR ds:0x2f0003b7,dh
  43f7af:	mov    bh,0x3
  43f7b1:	add    BYTE PTR [edi],ch
  43f7b3:	pop    eax
  43f7b4:	dec    esp
  43f7b5:	pop    es
  43f7b6:	xchg   esi,eax
  43f7b7:	fucomp st(1)
  43f7b9:	add    ebp,DWORD PTR [edi]
  43f7bb:	fsubp  st(1),st
  43f7bd:	add    ebp,DWORD PTR [edi]
  43f7bf:	fsubp  st(1),st
  43f7c1:	add    ebp,DWORD PTR [edi]
  43f7c3:	fsubp  st(1),st
  43f7c5:	add    ebp,DWORD PTR [edi]
  43f7c7:	fsubp  st(1),st
  43f7c9:	add    ebp,DWORD PTR [edi]
  43f7cb:	fdivp  st(5),st
  43f7cd:	daa    
  43f7ce:	add    dh,bl
  43f7d0:	jmp    0xea2226d8
  43f7d5:	add    ebp,DWORD PTR [edi]
  43f7d7:	fsubp  st(1),st
  43f7d9:	add    ebp,DWORD PTR [edi]
  43f7db:	fdivp  st(0),st
  43f7dd:	mov    ch,0x61
  43f7df:	fsubp  st(1),st
  43f7e1:	add    ebp,DWORD PTR [edi]
  43f7e3:	fsubp  st(1),st
  43f7e5:	add    ebp,DWORD PTR [edi]
  43f7e7:	fsubp  st(1),st
  43f7e9:	add    ebp,DWORD PTR [edi]
  43f7eb:	ficom  WORD PTR [ecx-0x1621be4b]
  43f7f1:	add    ebp,DWORD PTR [edi]
  43f7f3:	fsubp  st(1),st
  43f7f5:	add    ebp,DWORD PTR [edi]
  43f7f7:	fsubp  st(1),st
  43f7f9:	add    ebp,DWORD PTR [edi]
  43f7fb:	ficom  WORD PTR [esi-0x1621de4b]
  43f801:	add    ebp,DWORD PTR [edi]
  43f803:	fsubp  st(1),st
  43f805:	add    ebp,DWORD PTR [edi]
  43f807:	fsubp  st(1),st
  43f809:	add    ebp,DWORD PTR [edi]
  43f80b:	fidivr WORD PTR ds:0x10000b5
  43f811:	fsubp  st(1),st
  43f813:	add    ebp,DWORD PTR [edi]
  43f815:	fsubp  st(1),st
  43f817:	add    ebp,DWORD PTR [edi]
  43f819:	fsubp  st(1),st
  43f81b:	add    ebp,DWORD PTR [edi]
  43f81d:	fdivrp st(0),st
  43f81f:	mov    ds:0x3e9de61,eax
  43f824:	das    
  43f825:	fsubp  st(1),st
  43f827:	add    ebp,DWORD PTR [edi]
  43f829:	fsubp  st(1),st
  43f82b:	add    ebp,DWORD PTR [edi]
  43f82d:	fisub  WORD PTR ds:0xde41a4
  43f833:	jmp    0xe944d664
  43f838:	sub    al,0xde
  43f83a:	add    cl,ch
  43f83c:	sub    al,0xde
  43f83e:	add    BYTE PTR [ebp-0x74],ch
  43f841:	call   0xde70e146
  43f846:	add    cl,ch
  43f848:	sub    al,0xde
  43f84a:	add    cl,ch
  43f84c:	sub    al,0xde
  43f84e:	add    BYTE PTR [ebx],ah
  43f850:	mov    eax,gs
  43f852:	add    cl,ch
  43f854:	sub    al,0xde
  43f856:	add    cl,ch
  43f858:	sub    al,0xde
  43f85a:	add    cl,ch
  43f85c:	sub    al,0xde
  43f85e:	add    bl,dh
  43f860:	int    0xe7
  43f862:	add    cl,ch
  43f864:	sub    al,0xde
  43f866:	add    cl,ch
  43f868:	sub    al,0xde
  43f86a:	add    cl,ch
  43f86c:	sub    al,0xde
  43f86e:	add    BYTE PTR [esi-0x16ff1833],bl
  43f874:	add    BYTE PTR [eax],al
  43f876:	sub    al,0xde
  43f878:	add    cl,ch
  43f87a:	sub    al,0xde
  43f87c:	add    cl,ch
  43f87e:	sub    al,0xde
  43f880:	add    BYTE PTR [esi-0x76],dl
  43f883:	out    0x0,eax
  43f885:	jmp    0xe944d6b6
  43f88a:	sub    al,0xde
  43f88c:	add    cl,ch
  43f88e:	sub    al,0xde
  43f890:	add    BYTE PTR [esi-0x76],ch
  43f893:	out    0x0,eax
  43f895:	jmp    0xe944d6c6
  43f89a:	sub    al,0xde
  43f89c:	add    cl,ch
  43f89e:	sub    al,0xde
  43f8a0:	add    BYTE PTR [ebx+0x70],dl
  43f8a3:	call   0xde70e1a8
  43f8a8:	add    cl,ch
  43f8aa:	sub    al,0xde
  43f8ac:	add    BYTE PTR [eax],al
  43f8ae:	xchg   esi,eax
  43f8af:	fiadd  DWORD PTR [eax]
  43f8b1:	add    BYTE PTR [edx],al
  43f8b3:	xchg   edi,eax
  43f8b4:	xor    eax,0xda8600
  43f8b9:	add    BYTE PTR [esi+0x560000da],al
  43f8bf:	fiadd  DWORD PTR [eax]
  43f8c1:	add    BYTE PTR [eax],bh
  43f8c3:	mov    ?,WORD PTR ds:0xda4600
  43f8c9:	add    BYTE PTR [esi-0x26],al
  43f8cc:	add    BYTE PTR [eax],al
  43f8ce:	push   esi
  43f8cf:	fiadd  DWORD PTR [eax]
  43f8d1:	add    BYTE PTR [esi+0x4600358d],bl
  43f8d7:	fiadd  DWORD PTR [eax]
  43f8d9:	add    BYTE PTR [eax],al
  43f8db:	add    BYTE PTR [esi-0x26],al
  43f8de:	add    BYTE PTR [eax],al
  43f8e0:	push   ss
  43f8e1:	loop   0x43f8e3
  43f8e3:	add    BYTE PTR [esi-0x72],al
  43f8e6:	xor    eax,0xe20600
  43f8eb:	add    BYTE PTR [esi],al
  43f8ed:	loop   0x43f8ef
  43f8ef:	add    BYTE PTR [esi],dl
  43f8f1:	loop   0x43f8f3
  43f8f3:	add    BYTE PTR [ebx+0x18],al
  43f8f6:	aaa    
  43f8f7:	add    BYTE PTR [esi],al
  43f8f9:	loop   0x43f8fb
  43f8fb:	add    BYTE PTR [esi],al
  43f8fd:	loop   0x43f8ff
  43f8ff:	add    dh,dl
  43f901:	loope  0x43f903
  43f903:	add    bl,dl
  43f905:	sbb    BYTE PTR [edi],dh
  43f907:	add    dh,al
  43f909:	loope  0x43f90b
  43f90b:	add    dh,al
  43f90d:	loope  0x43f90f
  43f90f:	add    dh,dl
  43f911:	loope  0x43f913
  43f913:	add    BYTE PTR ds:0xc6003719,bl
  43f919:	loope  0x43f91b
  43f91b:	add    dh,al
  43f91d:	loope  0x43f91f
  43f91f:	add    BYTE PTR [esi+0x470000e1],dl
  43f925:	sbb    DWORD PTR [edi],esi
  43f927:	add    BYTE PTR [edi],ch
  43f929:	mov    bh,0x3
  43f92b:	add    BYTE PTR [edi],ch
  43f92d:	mov    bh,0x3
  43f92f:	add    BYTE PTR [edi],ch
  43f931:	mov    bh,0x3
  43f933:	add    BYTE PTR [edi],ch
  43f935:	in     al,dx
  43f936:	dec    edx
  43f937:	ds das 
  43f939:	mov    bh,0x3
  43f93b:	add    BYTE PTR [edi],ch
  43f93d:	mov    bh,0x3
  43f93f:	add    BYTE PTR [eax],al
  43f941:	add    BYTE PTR [edi],ch
  43f943:	mov    bh,0x3
  43f945:	add    BYTE PTR [edi],ch
  43f947:	add    cl,BYTE PTR [ebx+0x3e]
  43f94a:	das    
  43f94b:	mov    bh,0x3
  43f94d:	add    BYTE PTR [edi],ch
  43f94f:	mov    bh,0x3
  43f951:	add    BYTE PTR [edi],ch
  43f953:	mov    bh,0x3
  43f955:	add    BYTE PTR [edi],ch
  43f957:	js     0x43f994
  43f959:	ds das 
  43f95b:	mov    bh,0x3
  43f95d:	add    BYTE PTR [edi],ch
  43f95f:	mov    bh,0x3
  43f961:	add    BYTE PTR [edi],ch
  43f963:	mov    bh,0x3
  43f965:	add    BYTE PTR [edi],ch
  43f967:	xor    edi,DWORD PTR [esi+edi*1]
  43f96a:	das    
  43f96b:	mov    bh,0x3
  43f96d:	add    BYTE PTR [edi],ch
  43f96f:	mov    bh,0x3
  43f971:	add    BYTE PTR [edi],ch
  43f973:	mov    bh,0x3
  43f975:	add    BYTE PTR [edi],ch
  43f977:	retf   0x3e3b
  43f97a:	das    
  43f97b:	mov    bh,0x3
  43f97d:	add    BYTE PTR [edi],ch
  43f97f:	mov    bh,0x3
  43f981:	add    BYTE PTR [edi],ch
  43f983:	mov    bh,0x3
  43f985:	add    BYTE PTR [edi],ch
  43f987:	loopne 0x43f9c4
  43f989:	ds das 
  43f98b:	mov    bh,0x3
  43f98d:	add    BYTE PTR [edi],ch
  43f98f:	mov    bh,0x3
  43f991:	add    BYTE PTR [edi],ch
  43f993:	mov    bh,0x3
  43f995:	add    BYTE PTR [edi],ch
  43f997:	push   ss
  43f998:	cmp    al,0x3e
  43f99a:	das    
  43f99b:	mov    bh,0x3
  43f99d:	add    BYTE PTR [edi],ch
  43f99f:	mov    bh,0x3
  43f9a1:	add    BYTE PTR [edi],ch
  43f9a3:	fsubp  st(1),st
  43f9a5:	add    eax,DWORD PTR [eax]
  43f9a7:	add    BYTE PTR [edi],ch
  43f9a9:	ficom  WORD PTR [ebx+0x3b]
  43f9ac:	pop    ecx
  43f9ad:	fsubp  st(1),st
  43f9af:	add    ebp,DWORD PTR [edi]
  43f9b1:	fsubp  st(1),st
  43f9b3:	add    ebp,DWORD PTR [edi]
  43f9b5:	fsubp  st(1),st
  43f9b7:	add    ebp,DWORD PTR [edi]
  43f9b9:	faddp  st(6),st
  43f9bb:	cmp    eax,0x3e9de39
  43f9c0:	das    
  43f9c1:	fsubp  st(1),st
  43f9c3:	add    ebp,DWORD PTR [edi]
  43f9c5:	fsubp  st(1),st
  43f9c7:	add    ebp,DWORD PTR [edi]
  43f9c9:	(bad)  
  43f9cb:	cmp    eax,0x3e9de19
  43f9d0:	das    
  43f9d1:	fsubp  st(1),st
  43f9d3:	add    ebp,DWORD PTR [edi]
  43f9d5:	fsubp  st(1),st
  43f9d7:	add    ebp,DWORD PTR [edi]
  43f9d9:	fidiv  WORD PTR [eax]
  43f9db:	ds stc 
  43f9dd:	fucomp st(1)
  43f9df:	add    ebp,DWORD PTR [edi]
  43f9e1:	fsubp  st(1),st
  43f9e3:	add    ebp,DWORD PTR [edi]
  43f9e5:	fsubp  st(1),st
  43f9e7:	add    ebp,DWORD PTR [edi]
  43f9e9:	fiadd  WORD PTR [edx]
  43f9eb:	cmp    eax,0x3e9de59
  43f9f0:	das    
  43f9f1:	fsubp  st(1),st
  43f9f3:	add    ebp,DWORD PTR [edi]
  43f9f5:	fsubp  st(1),st
  43f9f7:	add    ebp,DWORD PTR [edi]
  43f9f9:	fisub  WORD PTR [edi]
  43f9fb:	fstp   TBYTE PTR [edx]
  43f9fd:	fsubp  st(1),st
  43f9ff:	add    ebp,DWORD PTR [edi]
  43fa01:	fsubp  st(1),st
  43fa03:	add    ebp,DWORD PTR [edi]
  43fa05:	fsubp  st(1),st
  43fa07:	add    ebp,DWORD PTR [edi]
  43fa09:	ficom  WORD PTR [edi]
  43fa0b:	fiadd  WORD PTR [eax]
  43fa0d:	add    BYTE PTR [edx],bl
  43fa0f:	fsubp  st(1),st
  43fa11:	add    ebp,DWORD PTR [edi]
  43fa13:	fsubp  st(1),st
  43fa15:	add    ebp,DWORD PTR [edi]
  43fa17:	fsubp  st(1),st
  43fa19:	add    ebp,DWORD PTR [edi]
  43fa1b:	fidiv  WORD PTR [edi]
  43fa1d:	fdivp  st(2),st
  43fa1f:	fld    QWORD PTR [eax]
  43fa21:	jmp    0xe944d852
  43fa26:	sub    al,0xde
  43fa28:	add    cl,ch
  43fa2a:	sub    al,0xde
  43fa2c:	add    al,al
  43fa2e:	jp     0x43fa11
  43fa30:	add    cl,ch
  43fa32:	sub    al,0xde
  43fa34:	add    cl,ch
  43fa36:	sub    al,0xde
  43fa38:	add    cl,ch
  43fa3a:	sub    al,0xde
  43fa3c:	add    cl,ah
  43fa3e:	pop    ebx
  43fa3f:	loope  0x43fa41
  43fa41:	jmp    0xe944d872
  43fa46:	sub    al,0xde
  43fa48:	add    cl,ch
  43fa4a:	sub    al,0xde
  43fa4c:	add    BYTE PTR [esi-0x16ff1e85],dh
  43fa52:	sub    al,0xde
  43fa54:	add    cl,ch
  43fa56:	sub    al,0xde
  43fa58:	add    cl,ch
  43fa5a:	sub    al,0xde
  43fa5c:	add    BYTE PTR [esi+0x5b],dl
  43fa5f:	loope  0x43fa61
  43fa61:	jmp    0xe944d892
  43fa66:	sub    al,0xde
  43fa68:	add    cl,ch
  43fa6a:	sub    al,0xde
  43fa6c:	add    bl,dl
  43fa6e:	clc    
  43fa6f:	loopne 0x43fa71
  43fa71:	jmp    0xde6ffa76
  43fa76:	add    cl,ch
  43fa78:	sub    al,0xde
  43fa7a:	add    cl,ch
  43fa7c:	sub    al,0xde
  43fa7e:	add    BYTE PTR [ecx-0x16ff1c5f],cl
  43fa84:	sub    al,0xde
  43fa86:	add    cl,ch
  43fa88:	sub    al,0xde
  43fa8a:	add    cl,ch
  43fa8c:	sub    al,0xde
  43fa8e:	add    BYTE PTR [ebx-0x4a],bh
  43fa91:	jecxz  0x43fa93
  43fa93:	jmp    0xe944d8c4
  43fa98:	sub    al,0xde
  43fa9a:	add    BYTE PTR [eax],al
  43fa9c:	(bad)  
  43fa9d:	fiadd  WORD PTR [eax]
  43fa9f:	add    BYTE PTR [edi-0x39ffc9bc],cl
  43faa5:	fiadd  WORD PTR [eax]
  43faa7:	add    BYTE PTR [esi-0x69ffff22],dl
  43faad:	fiadd  WORD PTR [eax]
  43faaf:	add    BYTE PTR [eax-0x79ffc9b8],ah
  43fab5:	fiadd  WORD PTR [eax]
  43fab7:	add    BYTE PTR [esi-0x69ffff22],dl
  43fabd:	fiadd  WORD PTR [eax]
  43fabf:	add    BYTE PTR [esi+0x48],dh
  43fac2:	add    BYTE PTR ss:[esi+0x560000de],al
  43fac9:	fiadd  WORD PTR [eax]
  43facb:	add    BYTE PTR [esi-0x22],dl
  43face:	add    BYTE PTR [eax],al
  43fad0:	push   es
  43fad1:	dec    esp
  43fad2:	add    BYTE PTR ss:[esi-0x22],al
  43fad6:	add    BYTE PTR [eax],al
  43fad8:	add    BYTE PTR [eax],al
  43fada:	push   esi
  43fadb:	fiadd  WORD PTR [eax]
  43fadd:	add    BYTE PTR [esi-0x22],dl
  43fae0:	add    BYTE PTR [eax],al
  43fae2:	cdq    
  43fae3:	dec    ebx
  43fae4:	add    BYTE PTR ss:[esi-0x22],al
  43fae8:	add    BYTE PTR [eax],al
  43faea:	push   ss
  43faeb:	fiadd  WORD PTR [eax]
  43faed:	add    BYTE PTR [esi],dl
  43faef:	fiadd  WORD PTR [eax]
  43faf1:	add    BYTE PTR [ecx+0x6003649],dl
  43faf7:	fiadd  WORD PTR [eax]
  43faf9:	add    BYTE PTR [esi],dl
  43fafb:	fiadd  WORD PTR [eax]
  43fafd:	add    BYTE PTR [esi],dl
  43faff:	fiadd  WORD PTR [eax]
  43fb01:	add    BYTE PTR [ecx+0x49],ch
  43fb04:	add    BYTE PTR ss:[esi],al
  43fb07:	fiadd  WORD PTR [eax]
  43fb09:	add    dh,dl
  43fb0b:	fld    QWORD PTR [eax]
  43fb0d:	add    dh,dl
  43fb0f:	fld    QWORD PTR [eax]
  43fb11:	add    ah,ch
  43fb13:	dec    eax
  43fb14:	add    BYTE PTR ss:[edi],ch
  43fb17:	mov    bh,0x3
  43fb19:	add    BYTE PTR [edi],ch
  43fb1b:	mov    bh,0x3
  43fb1d:	add    BYTE PTR [edi],ch
  43fb1f:	mov    bh,0x3
  43fb21:	add    BYTE PTR [edi],ch
  43fb23:	imul   esp,DWORD PTR [edx+0x3f],0x3b72f
  43fb2a:	das    
  43fb2b:	mov    bh,0x3
  43fb2d:	add    BYTE PTR [edi],ch
  43fb2f:	mov    bh,0x3
  43fb31:	add    BYTE PTR [edi],ch
  43fb33:	loopne 0x43fb9e
  43fb35:	aas    
  43fb36:	das    
  43fb37:	mov    bh,0x3
  43fb39:	add    BYTE PTR [edi],ch
  43fb3b:	mov    bh,0x3
  43fb3d:	add    BYTE PTR [eax],al
  43fb3f:	add    BYTE PTR [edi],ch
  43fb41:	mov    bh,0x3
  43fb43:	add    BYTE PTR [edi],ch
  43fb45:	cwde   
  43fb46:	mov    bh,0x3f
  43fb48:	das    
  43fb49:	mov    bh,0x3
  43fb4b:	add    BYTE PTR [edi],ch
  43fb4d:	mov    bh,0x3
  43fb4f:	add    BYTE PTR [edi],ch
  43fb51:	mov    bh,0x3
  43fb53:	add    BYTE PTR [edi],ch
  43fb55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43fb56:	add    edi,DWORD PTR [edi]
  43fb58:	das    
  43fb59:	mov    bh,0x3
  43fb5b:	add    BYTE PTR [edi],ch
  43fb5d:	mov    bh,0x3
  43fb5f:	add    BYTE PTR [edi],ch
  43fb61:	mov    bh,0x3
  43fb63:	add    BYTE PTR [edi],ch
  43fb65:	dec    edx
  43fb66:	add    edi,DWORD PTR [edi]
  43fb68:	das    
  43fb69:	mov    bh,0x3
  43fb6b:	add    BYTE PTR [edi],ch
  43fb6d:	mov    bh,0x3
  43fb6f:	add    BYTE PTR [edi],ch
  43fb71:	mov    bh,0x3
  43fb73:	add    BYTE PTR [edi],ch
  43fb75:	sbb    dh,dh
  43fb77:	ds das 
  43fb79:	mov    bh,0x3
  43fb7b:	add    BYTE PTR [edi],ch
  43fb7d:	mov    bh,0x3
  43fb7f:	add    BYTE PTR [edi],ch
  43fb81:	mov    bh,0x3
  43fb83:	add    BYTE PTR [edi],ch
  43fb85:	dec    edi
  43fb86:	std    
  43fb87:	ds das 
  43fb89:	mov    bh,0x3
  43fb8b:	add    BYTE PTR [edi],ch
  43fb8d:	mov    bh,0x3
  43fb8f:	add    BYTE PTR [edi],ch
  43fb91:	fsubp  st(1),st
  43fb93:	add    ebp,DWORD PTR [edi]
  43fb95:	fisub  WORD PTR [edi]
  43fb97:	stc    
  43fb98:	adc    esi,ebx
  43fb9a:	jmp    0xea222aa2
  43fb9f:	add    ebp,DWORD PTR [edi]
  43fba1:	faddp  st(5),st
  43fba3:	pop    esi
  43fba4:	add    BYTE PTR [eax],al
  43fba6:	stc    
  43fba7:	fst    st(2)
  43fba9:	pop    esi
  43fbaa:	icebp  
  43fbab:	fucomp st(1)
  43fbad:	or     ebp,edi
  43fbaf:	frstor [ebp-0x6a2210eb]
  43fbb5:	adc    eax,0x1585ddef
  43fbba:	out    dx,eax
  43fbbb:	fld    QWORD PTR [ecx-0x762210eb]
  43fbc1:	adc    eax,0x15a1ddef
  43fbc6:	out    dx,eax
  43fbc7:	fstp   QWORD PTR [ecx-0x5e2210eb]
  43fbcd:	adc    eax,0x15a9ddef
  43fbd2:	out    dx,eax
  43fbd3:	frstor [ecx-0x662210eb]
  43fbd9:	adc    eax,0x1585ddef
  43fbde:	out    dx,eax
  43fbdf:	fnsave [ecx+0x15]
  43fbe2:	out    dx,eax
  43fbe3:	fstp   QWORD PTR [ecx+0x15]
  43fbe6:	out    dx,eax
  43fbe7:	fnsave [ecx+0x15]
  43fbea:	out    dx,eax
  43fbeb:	(bad)  [ecx+0x15]
  43fbee:	outs   dx,DWORD PTR ds:[esi]
  43fbef:	fisubr WORD PTR [ebp-0x6e2190ec]
  43fbf5:	adc    al,0x6f
  43fbf7:	fimul  WORD PTR [ecx-0x4a2190ec]
  43fbfd:	adc    al,0x6f
  43fbff:	ficom  WORD PTR [ebp-0x562190ec]
  43fc05:	adc    al,0x6f
  43fc07:	fisubr WORD PTR [ebp+0x6f000014]
  43fc0d:	fiadd  WORD PTR [eax]
  43fc0f:	lds    eax,FWORD PTR [ebx+0x1e]
  43fc12:	add    ebp,eax
  43fc14:	cmp    ebx,DWORD PTR [esi]
  43fc16:	add    DWORD PTR [ebp-0x16fee1dc],ebp
  43fc1c:	sub    al,0xde
  43fc1e:	add    BYTE PTR [ecx+0x48],dl
  43fc21:	fild   WORD PTR [eax]
  43fc23:	push   ebp
  43fc24:	inc    eax
  43fc25:	fild   WORD PTR [eax]
  43fc27:	cmp    DWORD PTR [eax],edi
  43fc29:	fild   WORD PTR [eax]
  43fc2b:	dec    ebp
  43fc2c:	xor    bh,bl
  43fc2e:	add    BYTE PTR [ecx+0x28],al
  43fc31:	fild   WORD PTR [eax]
  43fc33:	inc    ebp
  43fc34:	and    bh,bl
  43fc36:	add    BYTE PTR [ecx],cl
  43fc38:	sbb    bh,bl
  43fc3a:	add    BYTE PTR ds:0x3100df10,bh
  43fc40:	or     bh,bl
  43fc42:	add    BYTE PTR ds:0x1900df00,dh
  43fc48:	clc    
  43fc49:	fiadd  WORD PTR [eax]
  43fc4b:	sub    eax,0xe900def0
  43fc50:	sub    al,0xde
  43fc52:	add    cl,ch
  43fc54:	sub    al,0xde
  43fc56:	add    cl,ch
  43fc58:	sub    al,0xde
  43fc5a:	add    cl,ch
  43fc5c:	sub    al,0xde
  43fc5e:	add    cl,ch
  43fc60:	sub    al,0xde
  43fc62:	add    cl,ch
  43fc64:	sub    al,0xde
  43fc66:	add    cl,ch
  43fc68:	sub    al,0xde
  43fc6a:	add    cl,ch
  43fc6c:	sub    al,0xde
  43fc6e:	add    cl,ch
  43fc70:	add    BYTE PTR [eax],al
  43fc72:	sub    al,0xde
  43fc74:	add    cl,ch
  43fc76:	sub    al,0xde
  43fc78:	add    cl,ch
  43fc7a:	sub    al,0xde
  43fc7c:	add    cl,ch
  43fc7e:	sub    al,0xde
  43fc80:	add    cl,ch
  43fc82:	cld    
  43fc83:	sahf   
  43fc84:	imul   ebp
  43fc86:	sub    al,0xde
  43fc88:	add    BYTE PTR [eax],al
  43fc8a:	jle    0x43fc20
  43fc8c:	xchg   ebx,eax
  43fc8d:	cmp    DWORD PTR [esi-0x6c],esp
  43fc90:	stos   DWORD PTR es:[edi],eax
  43fc91:	cmp    DWORD PTR [esi],ebx
  43fc93:	xchg   esp,eax
  43fc94:	ret    
  43fc95:	cmp    DWORD PTR [esi-0x6c],eax
  43fc98:	fstp   TBYTE PTR [ecx]
  43fc9a:	(bad)  
  43fc9b:	nop
  43fc9c:	repz cmp esi,eax
  43fc9f:	sbb    al,BYTE PTR [ecx]
  43fca1:	add    BYTE PTR [esi],ah
  43fca3:	fiadd  DWORD PTR [eax]
  43fca5:	add    BYTE PTR [edx-0xdc1f06c],bh
  43fcab:	xchg   ebx,eax
  43fcac:	idiv   DWORD PTR [esi]
  43fcae:	retf   0xff93
  43fcb1:	ds xchg edx,eax
  43fcb3:	xchg   ebx,eax
  43fcb4:	pop    es
  43fcb5:	aas    
  43fcb6:	jp     0x43fc4b
  43fcb8:	(bad)  
  43fcba:	push   es
  43fcbb:	xchg   ebx,eax
  43fcbc:	cmp    DWORD PTR [edi],0x1e
  43fcbf:	xchg   ebx,eax
  43fcc0:	mov    edi,DWORD PTR [edi]
  43fcc2:	push   es
  43fcc3:	xchg   ebx,eax
  43fcc4:	xchg   ebx,eax
  43fcc5:	aas    
  43fcc6:	(bad)  
  43fcc7:	xchg   edx,eax
  43fcc8:	fwait
  43fcc9:	aas    
  43fcca:	mov    ds:0x863fe792,al
  43fccf:	jmp    0x0:0xd8920000
  43fcd6:	add    BYTE PTR [eax],al
  43fcd8:	adc    cl,BYTE PTR [edx-0x75ddcf3d]
  43fcde:	shl    DWORD PTR [eax],cl
  43fce0:	adc    cl,BYTE PTR [edx-0x760dcf1d]
  43fce6:	repz xor dl,dh
  43fce9:	mov    DWORD PTR [ebx],eax
  43fceb:	xor    DWORD PTR [edx-0x77],eax
  43fcee:	adc    esi,DWORD PTR [ecx]
  43fcf0:	push   edx
  43fcf1:	mov    DWORD PTR [ebx],esp
  43fcf3:	xor    DWORD PTR [edx],esi
  43fcf5:	mov    bl,0x33
  43fcf7:	xor    DWORD PTR [edx],edx
  43fcf9:	mov    bl,0x43
  43fcfb:	xor    edx,esp
  43fcfd:	mov    dl,0x53
  43fcff:	xor    edx,edx
  43fd01:	mov    dl,0x63
  43fd03:	xor    DWORD PTR [edi],ebp
  43fd05:	pop    edi
  43fd06:	int3   
  43fd07:	jae    0x43fd47
  43fd09:	pop    es
  43fd0a:	into   
  43fd0b:	mov    edi,DWORD PTR [esi]
  43fd0d:	dec    ebp
  43fd0f:	mov    ds:0xbbcdd73e,eax
  43fd14:	push   ds
  43fd15:	(bad)  
  43fd16:	int    0xc7
  43fd18:	push   ds
  43fd19:	sti    
  43fd1a:	int    0xd3
  43fd1c:	push   ds
  43fd1d:	mov    ds:0xab1ee3cc,eax
  43fd22:	int3   
  43fd23:	repz (bad) 
  43fd25:	mov    dl,0xcc
  43fd27:	add    edi,ebp
  43fd29:	mov    edx,0x82fd13cd
  43fd2e:	int    0x23
  43fd30:	std    
  43fd31:	jmp    0x43cd:0x935d33ce
  43fd38:	pop    ebp
  43fd39:	sti    
  43fd3a:	into   
  43fd3b:	push   ebx
  43fd3c:	add    BYTE PTR [eax],al
  43fd3e:	pop    ebp
  43fd3f:	and    ecx,edi
  43fd41:	arpl   WORD PTR [ebp-0x15],bx
  43fd44:	into   
  43fd45:	jae    0x43fd84
  43fd47:	repz into 
  43fd49:	cmp    DWORD PTR ds:0x3d93ce3b,0x3
  43fd50:	into   
  43fd51:	mov    ds:0xb3ce2b3d,eax
  43fd56:	sbb    eax,0x1dc3cdd3
  43fd5b:	jnp    0x43fd2a
  43fd5d:	rcr    DWORD PTR ds:0x1de3ce23,cl
  43fd63:	sub    ecx,esi
  43fd65:	repz std 
  43fd67:	xor    cl,dh
  43fd69:	add    edi,esp
  43fd6b:	mov    edx,0x82fc13ce
  43fd70:	into   
  43fd71:	and    edi,esp
  43fd73:	jmp    0x43ce:0x935c33cf
  43fd7a:	pop    esp
  43fd7b:	jnp    0x43fd4b
  43fd7d:	push   ebx
  43fd7e:	pop    esp
  43fd7f:	fidivr WORD PTR [ebp-0x7a2e732a]
  43fd85:	(bad)  
  43fd86:	jl     0x43fd59
  43fd88:	(bad)  
  43fd89:	(bad)  
  43fd8a:	lods   al,BYTE PTR ds:[esi]
  43fd8b:	rcl    BYTE PTR [ebp-0x2a],1
  43fd8e:	pushf  
  43fd8f:	rcr    BYTE PTR [ebp-0x2a],1
  43fd92:	int3   
  43fd93:	rol    BYTE PTR [ebp-0x2a],1
  43fd96:	pushf  
  43fd97:	shr    BYTE PTR ds:0x15d0ecd6,1
  43fd9d:	(bad)  
  43fd9e:	cld    
  43fd9f:	sar    BYTE PTR [ebp-0x33ffff2b],1
  43fda5:	rol    ch,1
  43fda7:	aad    0xbc
  43fda9:	ror    ch,1
  43fdab:	aad    0x2c
  43fdad:	rcl    ch,cl
  43fdaf:	iret   
  43fdb0:	sbb    al,0xd2
  43fdb2:	(bad)  
  43fdb4:	or     al,0xd2
  43fdb6:	add    eax,0xedd25cd0
  43fdbb:	iret   
  43fdbc:	in     al,dx
  43fdbd:	rcl    DWORD PTR ds:0x3dd1fcd0,1
  43fdc3:	ror    BYTE PTR [edx+edx*8],1
  43fdc6:	add    eax,0xdd1fcd0
  43fdcb:	shr    BYTE PTR [ecx+edx*8-0x2e632fab],1
  43fdd2:	pop    ebp
  43fdd3:	ror    ah,1
  43fdd5:	rol    DWORD PTR [ebp-0x30],1
  43fdd8:	pushf  
  43fdd9:	shr    DWORD PTR ds:0x95d16cd0,1
  43fddf:	sar    BYTE PTR [ecx+edx*8+0x3d],1
  43fde3:	ror    BYTE PTR [ecx+edx*8+0x45],1
  43fde7:	sar    BYTE PTR [ecx+edx*8],1
  43fdea:	dec    ebp
  43fdeb:	shr    BYTE PTR [ebx+edx*8],1
  43fdee:	aad    0xce
  43fdf0:	sbb    al,0xd3
  43fdf2:	(bad)  
  43fdf4:	or     al,0xd3
  43fdf6:	add    eax,0xd15ccf
  43fdfb:	cmc    
  43fdfc:	icebp  
  43fdfd:	pop    ds
  43fdfe:	cs popf 
  43fe00:	jmp    0xe2092c34
  43fe05:	jmp    FWORD PTR ds:0xf900008d
  43fe0b:	ucomiss xmm2,DWORD PTR [ebp+0x5d2d5ff1]
  43fe12:	call   0xe0a92b86
  43fe17:	aas    
  43fe18:	sub    eax,0x2d4ff84d
  43fe1d:	xor    eax,0x1d2d9ff0
  43fe22:	call   0xe2092bd6
  43fe27:	jg     0x43fe56
  43fe29:	int    0xf9
  43fe2b:	(bad)  
  43fe2c:	sub    eax,0x2edff1d5
  43fe31:	fstp   st(6)
  43fe33:	out    dx,eax
  43fe34:	cs in  eax,0xde
  43fe37:	mov    edi,0xcf7d0d2e
  43fe3c:	cs cmc 
  43fe3e:	jle    0x43fe5f
  43fe40:	das    
  43fe41:	sbb    eax,0x452f2f7d
  43fe46:	jge    0x43fe47
  43fe48:	cs or  eax,0x152f0f5d
  43fe4e:	pop    ebp
  43fe4f:	pop    edi
  43fe50:	cs pop ebp
  43fe52:	pop    esi
  43fe53:	outs   dx,DWORD PTR ds:[esi]
  43fe54:	cs gs pop esi
  43fe57:	aas    
  43fe58:	cs dec ebp
  43fe5a:	jle    0x43feab
  43fe5c:	cs xor eax,0x9d2e9f7e
  43fe62:	jle    0x43fe13
  43fe64:	cs inc ebp
  43fe66:	jle    0x43fee7
  43fe68:	cs dec ebp
  43fe6a:	pop    esi
  43fe6b:	(bad)  
  43fe6c:	cs push ebp
  43fe6e:	add    BYTE PTR [eax],al
  43fe70:	pop    esi
  43fe71:	fild   QWORD PTR [edi]
  43fe73:	fstp   QWORD PTR [edi-0x11]
  43fe76:	das    
  43fe77:	add    BYTE PTR [edx-0x52],cl
  43fe7a:	and    esi,DWORD PTR [edi]
  43fe7c:	cmp    ch,BYTE PTR [ebp-0x51e5c8cd]
  43fe82:	inc    ebx
  43fe83:	aaa    
  43fe84:	mov    edx,0xea3753ad
  43fe89:	lods   eax,DWORD PTR ds:[esi]
  43fe8a:	arpl   WORD PTR [edi],si
  43fe8c:	mov    edx,0x9a3773ad
  43fe91:	lods   eax,DWORD PTR ds:[esi]
  43fe92:	xor    DWORD PTR [edi],0x5a
  43fe95:	scas   al,BYTE PTR es:[edi]
  43fe96:	xchg   ebx,eax
  43fe97:	aaa    
  43fe98:	mov    ch,BYTE PTR [esi-0x5185c85d]
  43fe9e:	mov    bl,0x37
  43fea0:	sbb    ch,BYTE PTR [esi-0x51c5c83d]
  43fea6:	shl    DWORD PTR [edi],cl
  43fea8:	(bad)  
  43fea9:	out    dx,al
  43feaa:	add    BYTE PTR [eax],al
  43feac:	push   ss
  43fead:	loop   0x43feaf
  43feaf:	add    dl,bl
  43feb1:	stos   DWORD PTR es:[edi],eax
  43feb2:	cmp    BYTE PTR [bp+si-0x56],ah
  43feb6:	outs   dx,DWORD PTR ds:[esi]
  43feb7:	cmp    BYTE PTR [edx-0x56],ch
  43feba:	ja     0x43fef4
  43febc:	adc    ch,BYTE PTR [edx-0x55f5c781]
  43fec2:	xchg   DWORD PTR [eax],edi
  43fec4:	scas   al,BYTE PTR es:[edi]
  43fec5:	test   eax,0xa9f638ab
  43feca:	mov    bl,0x38
  43fecc:	push   cs
  43fecd:	stos   BYTE PTR es:[edi],al
  43fece:	mov    ebx,0x23a9d638
  43fed3:	cmp    DWORD PTR [eax],eax
  43fed5:	add    BYTE PTR [edx-0x57],al
  43fed8:	dec    edi
  43fed9:	cmp    DWORD PTR [edx-0x57],ecx
  43fedc:	push   edi
  43fedd:	cmp    DWORD PTR [edx],esi
  43fedf:	test   eax,0xa92a395f
  43fee4:	cmp    DWORD PTR [bp+si-0x57],esp
  43fee8:	outs   dx,DWORD PTR ds:[esi]
  43fee9:	cmp    DWORD PTR [esi+0x5e],eax
  43feec:	idiv   edi
  43feee:	mov    dl,0xe1
  43fef0:	add    BYTE PTR [eax],al
  43fef2:	das    
  43fef3:	xor    esi,eax
  43fef5:	push   esi
  43fef7:	or     cl,0x7
  43fefa:	cmc    
  43fefb:	nop
  43fefc:	leave  
  43fefd:	daa    
  43fefe:	gs jmp 0x43fecb
  43ff01:	das    
  43ff02:	gs fwait
  43ff04:	leave  
  43ff05:	aas    
  43ff06:	push   ebp
  43ff07:	inc    ebx
  43ff08:	leave  
  43ff09:	inc    edi
  43ff0a:	push   ebp
  43ff0b:	push   ebx
  43ff0c:	leave  
  43ff0d:	dec    edi
  43ff0e:	inc    ebp
  43ff0f:	push   ebx
  43ff10:	leave  
  43ff11:	fwait
  43ff12:	inc    ebp
  43ff13:	daa    
  43ff14:	retf   
  43ff15:	mov    ds:0xabcb1f35,eax
  43ff1a:	xor    eax,0x25b3cad7
  43ff1f:	pop    ds
  43ff20:	retf   
  43ff21:	mov    ebx,0xf7bf9b25
  43ff26:	sbb    ecx,DWORD PTR [ebx-0x74ec0041]
  43ff2c:	enter  0xa07,0x8b
  43ff30:	enter  0x20f,0x9b
  43ff34:	enter  0xfa17,0x8a
  43ff38:	enter  0x1f,0x0
  43ff3c:	repnz jmp 0x2fc9:0xeb6a27c9
  43ff44:	bound  ebx,QWORD PTR [ebx-0x74a5c838]
  43ff4a:	enter  0x523f,0xcb
  43ff4e:	leave  
  43ff4f:	inc    edi
  43ff50:	dec    edx
  43ff51:	aaa    
  43ff52:	leave  
  43ff53:	mov    bl,0x42
  43ff55:	das    
  43ff56:	leave  
  43ff57:	mov    ebx,0xc3c8473a
  43ff5c:	xor    cl,BYTE PTR [edi-0x38]
  43ff5f:	retf   
  43ff60:	sub    dh,BYTE PTR [edi-0x38]
  43ff63:	shl    DWORD PTR [edx],cl
  43ff65:	outs   dx,DWORD PTR ds:[esi]
  43ff66:	enter  0x1adb,0x8b
  43ff6a:	mov    ebp,0x65de117f
  43ff6f:	lds    esi,FWORD PTR [eax+0x50c531d8]
  43ff75:	fcom   DWORD PTR [ebp-0x3b]
  43ff78:	inc    eax
  43ff79:	fadd   DWORD PTR [ebp-0x3b]
  43ff7c:	xor    al,bl
  43ff7e:	in     eax,0xc6
  43ff80:	xor    cl,bl
  43ff82:	in     eax,0xc6
  43ff84:	xor    cl,bl
  43ff86:	aad    0xc6
  43ff88:	inc    eax
  43ff89:	fld    st(5)
  43ff8b:	(bad)  
  43ff8c:	xor    cl,bl
  43ff8e:	(bad)
  43ff91:	cdq    
  43ff92:	jmp    0x9dd000a
  43ff97:	add    ebp,DWORD PTR [edi]
  43ff99:	(bad)  
  43ff9b:	shr    DWORD PTR [eax],cl
  43ff9d:	into   
  43ff9e:	in     eax,dx
  43ff9f:	rol    DWORD PTR [eax],cl
  43ffa1:	add    BYTE PTR [eax],bh
  43ffa3:	into   
  43ffa4:	(bad)
  43ffa7:	into   
  43ffa8:	pushf  
  43ffa9:	shr    DWORD PTR [ebx-0x32],cl
  43ffac:	jbe    0x43ff81
  43ffae:	push   ebx
  43ffaf:	into   
  43ffb0:	jns    0x43ff86
  43ffb2:	or     ebp,0xcbf8d4ba
  43ffb8:	dec    edi
  43ffb9:	rcl    BYTE PTR [ebx+ecx*8-0x344f2d3d],cl
  43ffc0:	xor    al,0xd1
  43ffc2:	pushf  
  43ffc3:	rcr    esp,1
  43ffc5:	into   
  43ffc6:	pop    ecx
  43ffc7:	rcl    DWORD PTR [edi],cl
  43ffc9:	iret   
  43ffca:	not    edx
  43ffcc:	jne    0x43ff9d
  43ffce:	imul   edx,edx,0xffffffbe
  43ffd1:	iret   
  43ffd2:	and    eax,0x45cdbdd0
  43ffd7:	shl    BYTE PTR [edi],1
  43ffd9:	into   
  43ffda:	aam    0xcf
  43ffdc:	or     cl,dh
  43ffde:	mov    esp,0x79ce43cf
  43ffe3:	iret   
  43ffe4:	mov    cs,esi
  43ffe6:	dec    ebp
  43ffe7:	iret   
  43ffe8:	add    BYTE PTR [ebx-0x1bd17197],al
  43ffee:	arpl   sp,bp
  43fff0:	das    
  43fff1:	mov    ebx,0x6130067b
  43fff6:	jb     0x43ffd4
  43fff8:	cmp    bh,ah
  43fffa:	repnz cmp BYTE PTR fs:[ebx],al
  43fffe:	arpl   bp,ax
  440000:	cmp    ch,bh
  440002:	hlt    
  440003:	sar    BYTE PTR [eax],1
  440005:	inc    DWORD PTR [eax]
  440007:	add    ah,dh
  440009:	fidivr DWORD PTR [eax]
  44000b:	mov    eax,ds:0x9b3924e4
  440010:	in     al,0x31
  440012:	cmp    DWORD PTR [ebp-0x5],ecx
  440015:	icebp  
  440016:	cmp    esi,edi
  440018:	cmc    
  440019:	mov    ebx,0xace5c239
  44001e:	cmp    eax,esp
  440020:	out    0xec,al
  440022:	cmp    ch,BYTE PTR [ebp-0x79c4df0a]
  440028:	mul    BYTE PTR [edx+0x3a]
  44002b:	ds in  eax,0xa4
  44002e:	cmp    cl,BYTE PTR [edi]
  440030:	in     eax,0x83
  440032:	cmp    dh,bl
  440034:	imul   ecx
  440036:	cmp    ebx,DWORD PTR [ecx]
  440038:	neg    BYTE PTR [esp+edi*1]
  44003b:	and    ah,dh
  44003d:	scas   al,BYTE PTR es:[edi]
  44003e:	cmp    eax,esp
  440040:	out    0xd1,eax
  440042:	xor    al,0x21
  440044:	ja     0x440049
  440046:	xor    eax,0x346b773a
  44004b:	push   edx
  44004c:	jo     0x43ffee
  44004e:	xor    al,0xe6
  440050:	imul   esi,edx,0x9703935
  440056:	ss jae 0x4400c2
  440059:	mov    dh,0x35
  44005b:	popf   
  44005c:	jno    0x440052
  44005e:	ss inc esp
  440060:	push   0x42
  440062:	add    BYTE PTR ss:[edi+0x5d3eeaa1],cl
  440069:	mov    ds:0x3f17,al
  44006e:	or     esp,DWORD PTR [ecx-0x5ec7c0b8]
  440074:	test   eax,0xdda1ec3f
  440079:	aas    
  44007a:	push   esi
  44007b:	sti    
  44007c:	idiv   edi
  44007e:	fadd   QWORD PTR ss:[eax]
  440081:	add    BYTE PTR [ebx-0x55],ch
  440084:	loope  0x4400b6
  440086:	inc    edx
  440087:	stos   DWORD PTR es:[edi],eax
  440088:	out    dx,eax
  440089:	xor    DWORD PTR [ebp-0x53],edx
  44008c:	les    esi,FWORD PTR [edx]
  44008e:	cmp    al,0xad
  440090:	xlat   BYTE PTR ds:[ebx]
  440091:	xor    ch,BYTE PTR [ebp-0x53]
  440094:	repnz xor cl,BYTE PTR [ebp-0x53]
  440098:	add    DWORD PTR [ebx],esi
  44009a:	adc    ch,BYTE PTR [esi-0x5203ccfc]
  4400a0:	and    al,0x33
  4400a2:	(bad)  
  4400a3:	lods   eax,DWORD PTR ds:[esi]
  4400a4:	inc    ebp
  4400a5:	xor    edi,DWORD PTR [ecx+0x48336cad]
  4400ab:	scas   al,BYTE PTR es:[edi]
  4400ac:	lea    esi,[ebx]
  4400ae:	sub    DWORD PTR [esi-0x51ebcc5e],0xce9433ae
  4400b8:	enter  0xde33,0xce
  4400bc:	jmp    0x1f34:0x26d63233
  4400c3:	(bad)  
  4400c4:	inc    esp
  4400c5:	xor    al,0x1d
  4400c7:	(bad)  
  4400c8:	xchg   ecx,eax
  4400c9:	xor    al,0x0
  4400cb:	(bad)  
  4400cc:	(bad)  
  4400cd:	xor    al,0xbe
  4400cf:	aad    0xe6
  4400d1:	xor    al,0x0
  4400d3:	add    BYTE PTR [ebp+edx*8+0x2a],bh
  4400d7:	xor    eax,0x355ed544
  4400dc:	add    ch,dl
  4400de:	shl    DWORD PTR ds:0xdd394f2f,1
  4400e4:	cmp    dh,BYTE PTR [edx+0x39]
  4400e7:	or     BYTE PTR [ecx],ah
  4400e9:	xor    al,0x3b
  4400eb:	mov    ds:0x1d3a8b19,al
  4400f0:	and    ah,al
  4400f2:	cmp    ecx,DWORD PTR [edx+0x18]
  4400f5:	mov    edi,DWORD PTR [edx]
  4400f7:	rol    DWORD PTR [eax],0xe5
  4400fa:	xor    al,0x40
  4400fc:	pop    es
  4400fd:	dec    edx
  4400fe:	cmp    edx,DWORD PTR [ecx-0x9]
  440101:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440102:	cmp    esp,DWORD PTR [ecx-0x9]
  440105:	add    dh,BYTE PTR ds:0x34bf67ba
  44010b:	test   al,0x66
  44010d:	or     al,0x36
  44010f:	push   cs
  440110:	push   ebp
  440111:	jecxz  0x440149
  440113:	and    eax,0x55359055
  440118:	inc    ebp
  440119:	gs xor eax,0x36404474
  44011f:	jle    0x440155
  440121:	push   DWORD PTR [edi]
  440123:	nop
  440124:	xor    al,0xd
  440126:	cmp    BYTE PTR [esp+0x24bf3823],bl
  44012d:	shl    DWORD PTR [edi],1
  44012f:	int    0x14
  440131:	jmp    0x44016a
  440133:	jecxz  0x440149
  440135:	xchg   ebx,eax
  440136:	repnz add BYTE PTR ss:[eax],al
  44013a:	add    al,0x7b
  44013c:	add    eax,DWORD PTR ss:[ebx]
  44013f:	xor    DWORD PTR [edi],0xf
  440142:	sti    
  440143:	mov    DWORD PTR [edi],esi
  440145:	and    al,0xf3
  440147:	int    0x40
  440149:	bound  ebp,QWORD PTR [ebx+0x1a]
  44014c:	inc    ecx
  44014d:	sti    
  44014e:	arpl   WORD PTR [eax+eax*2+0x48],di
  440152:	pop    edx
  440153:	aad    0x41
  440155:	adc    BYTE PTR [edx+0x10],0x41
  440159:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44015a:	dec    ecx
  44015b:	ficomp WORD PTR [ebp+0x41]
  44015e:	ret    0xb3d4
  440161:	inc    ecx
  440162:	push   0x5641b1d4
  440167:	aam    0x7f
  440169:	inc    ecx
  44016a:	xor    al,0xd5
  44016c:	fiadd  DWORD PTR [edx+0x10]
  44016f:	aad    0xc0
  440171:	inc    edx
  440172:	out    dx,eax
  440173:	aam    0xc
  440175:	inc    ebx
  440176:	retf   
  440177:	aam    0xf4
  440179:	inc    edx
  44017a:	ret    0x6bd4
  44017d:	inc    edx
  44017e:	test   eax,0x7d4288d5
  440183:	aad    0x22
  440185:	inc    edx
  440186:	(bad)  
  440187:	aad    0x31
  440189:	inc    edx
  44018a:	sbb    edx,ebp
  44018c:	cmp    al,BYTE PTR [edx+0x18]
  44018f:	aad    0xe9
  440191:	mov    bl,0x18
  440193:	xchg   ebp,eax
  440194:	xchg   ebp,eax
  440195:	add    al,0x2f
  440197:	fsubp  st(3),st
  440199:	xor    esi,DWORD PTR [edi]
  44019b:	into   
  44019c:	loopne 0x4401d1
  44019e:	add    BYTE PTR [eax],al
  4401a0:	inc    esi
  4401a1:	into   
  4401a2:	mov    al,0x33
  4401a4:	push   0xffffffce
  4401a6:	xchg   DWORD PTR [ebx],esi
  4401a8:	or     esi,0xffffff9a
  4401ab:	xor    esp,DWORD PTR [edx-0x32]
  4401ae:	push   0x33
  4401b0:	test   eax,0x8c335acd
  4401b5:	int    0x40
  4401b7:	xor    eax,DWORD PTR [esi+0x6d3331cd]
  4401bd:	iret   
  4401be:	sub    al,0x33
  4401c0:	pop    ebp
  4401c1:	iret   
  4401c2:	xor    al,0x33
  4401c4:	test   al,0xce
  4401c6:	jno    0x4401fb
  4401c8:	nop
  4401c9:	into   
  4401ca:	xor    DWORD PTR [ebx],0x34e3d055
  4401d0:	lods   al,BYTE PTR ds:[esi]
  4401d1:	shr    BYTE PTR [edi+0x35],1
  4401d4:	loope  0x4401a6
  4401d6:	add    BYTE PTR [edi+0x5a],dh
  4401d9:	push   esp
  4401da:	xor    esp,DWORD PTR [edi-0x48cc63be]
  4401e0:	cmp    ah,BYTE PTR [ebx+esi*1+0x33ac42b7]
  4401e7:	mov    bh,0x3a
  4401e9:	mov    ah,0x33
  4401eb:	xchg   DWORD PTR [edx],esp
  4401ed:	jl     0x440222
  4401ef:	xchg   edi,eax
  4401f0:	sbb    al,BYTE PTR [ebx+esi*1+0x2cdd20eb]
  4401f7:	fstp   DWORD PTR [eax]
  4401f9:	lock sub al,0xcf
  4401fc:	add    cl,al
  4401fe:	sub    al,0x10
  440200:	pop    es
  440201:	(bad)  
  440202:	sub    al,0x14
  440204:	add    BYTE PTR [eax],al
  440206:	neg    eax
  440208:	sub    al,0xba
  44020a:	clc    
  44020b:	data16 sub al,0x77
  44020e:	addr16 ja 0x44023d
  440211:	mov    ah,BYTE PTR [edi+0x39]
  440214:	sub    al,0x7b
  440216:	push   edi
  440217:	push   eax
  440218:	sub    al,0x75
  44021a:	push   edi
  44021b:	push   esp
  44021c:	sub    al,0x23
  44021e:	inc    edi
  44021f:	mov    cl,0x2c
  440221:	hlt    
  440222:	cmp    eax,eax
  440224:	sub    eax,0x2e2e41b0
  440229:	mov    bl,0x39
  44022b:	stc    
  44022c:	sub    eax,0x2e132197
  440231:	jb     0x44024b
  440233:	outs   dx,DWORD PTR ds:[esi]
  440234:	sub    eax,0x2d412046
  440239:	xor    al,0x18
  44023b:	cdq    
  44023c:	sub    eax,0x2d800012
  440241:	xlat   BYTE PTR ds:[ebx]
  440242:	stc    
  440243:	mov    BYTE PTR ds:0x2ee0f6e4,ch
  440249:	lock test bl,0x2e
  44024d:	adc    BYTE PTR [ebp-0x2c],ah
  440250:	add    BYTE PTR cs:[edi-0x28],bl
  440254:	dec    edx
  440255:	ss inc eax
  440257:	fsub   DWORD PTR [eax+0x36]
  44025a:	in     al,dx
  44025b:	xlat   BYTE PTR ds:[ebx]
  44025c:	jnp    0x440294
  44025e:	or     al,0xd5
  440260:	nop
  440261:	ss add ch,dl
  440264:	xchg   esp,eax
  440265:	ss (bad) 
  440268:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440269:	add    BYTE PTR ss:[eax],al
  44026c:	(bad)  
  44026e:	shl    BYTE PTR [esi],0xa4
  440271:	aad    0xcf
  440273:	ss mov bh,0xd5
  440276:	loope  0x4402ae
  440278:	test   al,0xd5
  44027a:	icebp  
  44027b:	ss fcom st(4)
  44027e:	cld    
  44027f:	ss pusha 
  440281:	(bad)  
  440282:	sbb    esi,DWORD PTR [edi]
  440284:	xor    edx,ebp
  440286:	sbb    eax,0x37d50f37
  44028b:	aaa    
  44028c:	mov    ss,esi
  44028e:	dec    edx
  44028f:	aaa    
  440290:	(bad)  
  440292:	arpl   WORD PTR [edi],si
  440294:	sti    
  440295:	aad    0x65
  440297:	aaa    
  440298:	fcmovbe st,st(5)
  44029a:	xor    DWORD PTR [edi],0xffffff8a
  44029d:	(bad)  
  44029e:	lea    esi,[edi]
  4402a0:	mov    ch,0xd5
  4402a2:	sahf   
  4402a3:	aaa    
  4402a4:	data16 (bad) 
  4402a6:	iret   
  4402a7:	aaa    
  4402a8:	and    edx,esi
  4402aa:	sti    
  4402ab:	aaa    
  4402ac:	add    edi,edx
  4402ae:	push   cs
  4402af:	cmp    ch,dh
  4402b1:	(bad)  
  4402b2:	xor    DWORD PTR [eax],edi
  4402b4:	call   0xa97c5b8f
  4402b9:	(bad)  
  4402ba:	cwde   
  4402bb:	cmp    BYTE PTR [edi],dl
  4402bd:	xlat   BYTE PTR ds:[ebx]
  4402be:	in     eax,0x38
  4402c0:	(bad)  
  4402c2:	adc    eax,0x25d11f39
  4402c7:	cmp    DWORD PTR [edx],edi
  4402c9:	rol    ebp,1
  4402cb:	cmp    DWORD PTR [edi],ebp
  4402cd:	mov    ds:0xd35,eax
  4402d2:	sar    DWORD PTR gs:[edx],cl
  4402d5:	stos   BYTE PTR es:[edi],al
  4402d6:	gs cmp al,0x3a
  4402d9:	or     al,0x54
  4402db:	and    al,0x3c
  4402dd:	xchg   esp,eax
  4402de:	push   esp
  4402df:	inc    ebp
  4402e0:	cmp    eax,DWORD PTR [eax]
  4402e2:	dec    ebx
  4402e3:	xchg   edi,eax
  4402e4:	aaa    
  4402e5:	mov    BYTE PTR [ebx+0x4f],al
  4402e8:	inc    eax
  4402e9:	inc    ebx
  4402ea:	cmp    edx,esi
  4402ec:	aaa    
  4402ed:	add    BYTE PTR [edi],ch
  4402ef:	test   DWORD PTR [ebx-0x1],eax
  4402f2:	push   0x2ffffd34
  4402f7:	cvtps2pi mm4,QWORD PTR [edi]
  4402fa:	push   ds
  4402fb:	je     0x44032a
  4402fd:	fwait
  4402fe:	sbb    eax,0xfc6733f2
  440303:	sub    dh,BYTE PTR [ecx+eiz*4]
  440306:	cld    
  440307:	add    al,0x39
  440309:	mov    eax,ds:0x1c2d8403
  44030e:	stc    
  44030f:	out    dx,eax
  440310:	das    
  440311:	mov    fs,WORD PTR [eax+0x5f]
  440314:	das    
  440315:	mov    ch,0x58
  440317:	in     al,dx
  440318:	xor    al,0x71
  44031a:	push   edi
  44031b:	sub    BYTE PTR ds:0x34935610,dh
  440321:	dec    eax
  440322:	inc    esi
  440323:	inc    edx
  440324:	xor    al,0x90
  440326:	inc    esi
  440327:	es fdiv QWORD PTR ss:[esi]
  44032b:	div    DWORD PTR ds:0x398436fc
  440331:	adc    esp,DWORD PTR ds:0x3e3998
  440337:	add    BYTE PTR ds:0x15ba3960,ah
  44033d:	into   
  44033e:	cmp    dl,ch
  440340:	adc    eax,0x4693aa9
  440345:	sti    
  440346:	cmp    ecx,DWORD PTR [ecx+0x3adbde04]
  44034c:	pop    ss
  44034d:	shr    BYTE PTR [ebx],cl
  44034f:	inc    eax
  440350:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440351:	shr    ah,cl
  440353:	inc    eax
  440354:	push   ebx
  440355:	rol    DWORD PTR [edi+0x41],cl
  440358:	leave  
  440359:	sar    DWORD PTR [edx+0x3dd06340],cl
  44035f:	ds scas al,BYTE PTR es:[edi]
  440361:	ror    BYTE PTR [ecx+0x76d0d73d],1
  440367:	cmp    eax,0x3d5cd0bc
  44036c:	mov    edx,0x663db0d0
  440371:	shl    BYTE PTR [esi+0x7fd0843d],1
  440377:	cmp    eax,0x3d74d053
  44037c:	pop    ebx
  44037d:	shr    al,1
  44037f:	ds or  dl,cl
  440382:	mov    edx,0x29d1013e
  440387:	aas    
  440388:	not    eax
  44038a:	scas   eax,DWORD PTR es:[edi]
  44038b:	ds jecxz 0x44035e
  44038e:	ret    
  44038f:	ds rcl eax,1
  440392:	sar    DWORD PTR [esi],0x98
  440395:	ror    esi,1
  440397:	ds scas eax,DWORD PTR es:[edi]
  440399:	shl    BYTE PTR [esi+0x3e],1
  44039c:	add    BYTE PTR [eax],al
  44039e:	stos   DWORD PTR es:[edi],eax
  44039f:	ror    BYTE PTR [edx+0x3e],1
  4403a2:	das    
  4403a3:	fsubp  st(1),st
  4403a5:	push   ebx
  4403a6:	or     BYTE PTR [ecx-0x21d0fb37],dl
  4403ac:	loopne 0x4403e1
  4403ae:	data16 into 
  4403b0:	xchg   ecx,eax
  4403b1:	xor    eax,DWORD PTR [ecx]
  4403b3:	into   
  4403b4:	mov    bl,0x34
  4403b6:	pop    ebp
  4403b7:	iret   
  4403b8:	imul   esi,DWORD PTR [edx+ebx*8],0xbf317bce
  4403bf:	retf   
  4403c0:	cs xor ecx,esi
  4403c3:	retf   
  4403c4:	add    ah,ah
  4403c6:	std    
  4403c7:	in     al,dx
  4403c8:	xor    ebx,DWORD PTR [ebx-0x54cc8c03]
  4403ce:	(bad)  
  4403cf:	mov    dh,0x33
  4403d1:	idiv   eax
  4403d3:	fs sub al,0xaf
  4403d6:	addr16 mov ds:0xb62c,al
  4403da:	addr16 mov ch,0x2c
  4403dd:	hlt    
  4403de:	popa   
  4403df:	jecxz  0x44040e
  4403e1:	fistp  WORD PTR [ecx-0x46]
  4403e4:	sub    eax,0x2e1d41f6
  4403e9:	or     al,0x38
  4403eb:	xor    ebp,DWORD PTR [esi]
  4403ed:	and    BYTE PTR [eax+0x17],al
  4403f0:	cs call 0x6521:0x22ef238
  4403f8:	cs test al,0x19
  4403fb:	mov    eax,0x3123bb2f
  440400:	xor    BYTE PTR [ebx+0x7e1a0000],dh
  440406:	das    
  440407:	test   DWORD PTR [edx],eax
  440409:	lea    ebp,[edi]
  44040b:	jmp    0x440411
  44040d:	out    0x38,al
  44040f:	cli    
  440410:	hlt    
  440411:	sar    DWORD PTR [eax],cl
  440413:	lods   eax,DWORD PTR ds:[esi]
  440414:	hlt    
  440415:	and    BYTE PTR [ecx],bh
  440417:	mov    al,0x64
  440419:	xor    eax,0xf964c539
  44041e:	cmp    BYTE PTR [eax-0x43c6f3ac],bh
  440424:	push   esp
  440425:	adc    DWORD PTR [ecx],edi
  440427:	popa   
  440428:	dec    ebx
  440429:	cmp    BYTE PTR gs:[ebx+eax*2+0x68],dl
  44042e:	cmp    BYTE PTR [eax+0x3b],cl
  440431:	cmp    eax,0x41334d38
  440436:	cmp    BYTE PTR [eax+0x2b],dl
  440439:	dec    edi
  44043a:	cmp    BYTE PTR [eax],ah
  44043c:	and    ebx,DWORD PTR [edi-0x2dd2ffc8]
  440442:	cmc    
  440443:	cmp    dh,bl
  440445:	aam    0x5
  440447:	cmp    ebx,edi
  440449:	aam    0x3b
  44044b:	cmp    DWORD PTR [edi+0x603956d4],esp
  440451:	shr    DWORD PTR [ebp+0x39],cl
  440454:	inc    edi
  440455:	aam    0x82
  440457:	cmp    DWORD PTR [ebx],edx
  440459:	aam    0xb0
  44045b:	cmp    edx,ecx
  44045d:	aam    0xd5
  44045f:	cmp    eax,ebx
  440461:	aam    0xf
  440463:	cmp    bh,BYTE PTR ds:0x3a41d4
  440469:	add    BYTE PTR [eax-0x2c],dl
  44046c:	cmp    bh,BYTE PTR fs:[edi]
  44046f:	aam    0x87
  440471:	cmp    bh,cl
  440473:	aam    0x99
  440475:	cmp    bl,dh
  440477:	aam    0xc1
  440479:	cmp    dl,BYTE PTR [edx-0x48c5312b]
  44047f:	aad    0xe1
  440481:	cmp    al,bl
  440483:	aad    0xe5
  440485:	cmp    ch,BYTE PTR [edi+0xc3b06d5]
  44048b:	aad    0x7a
  44048d:	cmp    ecx,ebp
  44048f:	aad    0xa9
  440491:	cmp    eax,DWORD PTR [edx]
  440493:	(bad)  
  440494:	fstp   TBYTE PTR [ebx]
  440496:	xor    al,0xcf
  440498:	sbb    BYTE PTR [eax+eiz*1],bh
  44049b:	iret   
  44049c:	push   ds
  44049d:	cmp    al,0x46
  44049f:	push   ds
  4404a0:	inc    eax
  4404a1:	cmp    al,0xd5
  4404a3:	into   
  4404a4:	ins    DWORD PTR es:[edi],dx
  4404a5:	cmp    al,0x8d
  4404a7:	iret   
  4404a8:	mov    al,ds:0xa9ceac3c
  4404ad:	cmp    al,0x7b
  4404af:	iret   
  4404b0:	mov    ebx,0xcccf4b3c
  4404b5:	cmp    al,0x6f
  4404b7:	iret   
  4404b8:	loopne 0x4404f6
  4404ba:	das    
  4404bb:	repz aaa 
  4404bd:	clc    
  4404be:	and    edx,DWORD PTR [esi+0x7a1a1136]
  4404c4:	ss sbb eax,0x4d363f12
  4404ca:	or     ch,BYTE PTR [edx+0x36]
  4404cd:	jo     0x4404cf
  4404cf:	add    BYTE PTR [edx],al
  4404d1:	or     dh,BYTE PTR [edi]
  4404d3:	xchg   esp,eax
  4404d4:	cli    
  4404d5:	pop    ebp
  4404d6:	cmp    DWORD PTR [edx+0x2d3988f2],ebx
  4404dc:	imul   ebp,esi,0xd461433a
  4404e2:	cmp    al,BYTE PTR [edi-0x45c4c9a7]
  4404e8:	push   ecx
  4404e9:	cmp    DWORD PTR [edx],edi
  4404eb:	int    0x49
  4404ed:	mov    ds:0xde41f53a,al
  4404f2:	cmp    esi,DWORD PTR [edx]
  4404f4:	cmp    ah,al
  4404f6:	cmp    eax,DWORD PTR [edi+0x30]
  4404f9:	sar    BYTE PTR [ebx],0x67
  4404fc:	sub    al,bl
  4404fe:	cmp    eax,DWORD PTR [esi-0x5cc3cfe0]
  440504:	sbb    BYTE PTR [ebx],ch
  440506:	cmp    al,0xc9
  440508:	adc    BYTE PTR [ecx+0x3b],bl
  44050b:	out    0x8,al
  44050d:	test   DWORD PTR [ebx-0x1],esp
  440510:	inc    eax
  440511:	pusha  
  440512:	cld    
  440513:	jmp    FWORD PTR [edi]
  440515:	xchg   ebx,eax
  440516:	xor    esp,DWORD PTR [edi]
  440518:	call   DWORD PTR [ebx+0x33]
  44051b:	int3   
  44051c:	pop    edi
  44051d:	stc    
  44051e:	sub    eax,0x2e2c5e87
  440523:	xchg   ebx,eax
  440524:	pop    esi
  440525:	pusha  
  440526:	sub    eax,0x2eba5d19
  44052b:	(bad)  
  44052c:	cmp    eax,0x3c332e84
  440531:	inc    esp
  440532:	cs dec esi
  440534:	add    BYTE PTR [eax],al
  440536:	cmp    al,0xde
  440538:	xchg   DWORD PTR [esi],esi
  44053a:	adc    ecx,0xd1ac36a0
  440540:	jne    0x440579
  440542:	mov    dl,cl
  440544:	push   ss
  440545:	aaa    
  440546:	add    edx,edx
  440548:	or     al,0x37
  44054a:	(bad)  
  44054c:	shr    BYTE PTR [edi],1
  44054e:	or     edx,edx
  440550:	fwait
  440551:	das    
  440552:	push   eax
  440553:	shl    BYTE PTR [edi+0x2f],cl
  440556:	mov    ds:0x192fb4d2,eax
  44055b:	rol    DWORD PTR [ebp+0x31],cl
  44055e:	nop
  44055f:	sar    DWORD PTR [esi-0x232c59d0],cl
  440565:	xor    DWORD PTR [edi-0x2c],eax
  440568:	dec    edi
  440569:	xor    ah,BYTE PTR [esp+edx*8-0x2b3bceac]
  440570:	mov    ds:0xf5d52131,eax
  440575:	xor    ch,bl
  440577:	aam    0x35
  440579:	xor    ebp,DWORD PTR [ebp-0x58cd982b]
  44057f:	aad    0x98
  440581:	xor    bl,BYTE PTR [esi-0x2b]
  440584:	stc    
  440585:	cmp    ecx,DWORD PTR [edi]
  440587:	mov    bh,0x3b
  44058a:	sti    
  44058b:	lds    ebx,FWORD PTR [ecx+0x3b]
  44058e:	stos   DWORD PTR es:[edi],eax
  44058f:	(bad)  
  440590:	dec    edx
  440591:	cmp    ecx,DWORD PTR [ebp-0x3a]
  440594:	jne    0x4405d1
  440596:	cmp    al,dh
  440598:	add    BYTE PTR ds:0xc70c0000,bh
  44059e:	lods   eax,DWORD PTR ds:[esi]
  44059f:	cmp    al,0x86
  4405a1:	(bad)  
  4405a2:	fdivr  DWORD PTR [eax+ebp*4]
  4405a5:	(bad)  
  4405a6:	jns    0x4405e4
  4405a8:	rol    esi,0x3a
  4405ab:	cmp    al,0x30
  4405ad:	enter  0x3e13,0x58
  4405b1:	enter  0xfe00,0x42
  4405b5:	and    eax,0x263a993b
  4405ba:	cmp    eax,esp
  4405bc:	xor    al,BYTE PTR [edx]
  4405be:	cmp    edx,DWORD PTR [ebx+0x623b152a]
  4405c4:	and    bh,BYTE PTR ds:0x4c1a523a
  4405ca:	cmp    dh,BYTE PTR [ecx]
  4405cc:	adc    dh,BYTE PTR [edx+edi*1+0x3a850a08]
  4405d3:	mov    DWORD PTR [ecx],0xf96a3c19
  4405d9:	push   edi
  4405da:	cmp    esp,ebx
  4405dc:	repnz and dh,BYTE PTR ds:0x34a06796
  4405e3:	xor    BYTE PTR [ebp+0x68],ah
  4405e6:	and    dl,BYTE PTR ss:[esi+0x15]
  4405ea:	cmp    BYTE PTR [ebp-0x16ff21aa],cl
  4405f0:	cld    
  4405f1:	mov    edi,?
  4405f3:	ins    DWORD PTR es:[edi],dx
  4405f4:	sub    ebx,esi
  4405f6:	add    BYTE PTR [edi+0x43],bl
  4405f9:	lea    esi,[eax]
  4405fb:	push   esi
  4405fc:	cmp    ah,BYTE PTR [ecx+0x2c]
  4405ff:	pop    edx
  440600:	add    BYTE PTR [eax],al
  440602:	pop    ds
  440603:	stos   DWORD PTR es:[edi],eax
  440604:	sub    al,0xdd
  440606:	adc    DWORD PTR [edi],edx
  440608:	cs push 0x8
  44060b:	push   edi
  44060c:	sub    eax,0x2d9e0051
  440611:	xchg   ebx,eax
  440612:	sbb    BYTE PTR [ebp-0x26ef89d3],dl
  440618:	cs ret 0xfcff
  44061c:	das    
  44061d:	in     al,0xff
  44061f:	aaa    
  440620:	das    
  440621:	pushf  
  440622:	pop    esi
  440623:	xchg   esi,eax
  440624:	das    
  440625:	mov    al,ds:0x2c383864
  44062a:	pop    ebx
  44062b:	cmp    eax,0xc75d0039
  440630:	out    dx,eax
  440631:	cmp    DWORD PTR [esp+ecx*8],esi
  440634:	sbb    eax,0x59c9c83a
  440639:	cmp    dh,bl
  44063b:	leave  
  44063c:	jp     0x440678
  44063e:	std    
  44063f:	retf   0x3b05
  440642:	das    
  440643:	leave  
  440644:	sbb    DWORD PTR [ebx],edi
  440646:	icebp  
  440647:	retf   0x3b29
  44064a:	add    ebx,ecx
  44064c:	cmp    DWORD PTR [ebx],edi
  44064e:	lahf   
  44064f:	retf   0x3b45
  440652:	mov    ah,0xca
  440654:	pop    ebp
  440655:	cmp    edi,DWORD PTR [ebx]
  440657:	retf   0x3b82
  44065a:	pop    esi
  44065b:	leave  
  44065c:	xchg   edi,eax
  44065d:	cmp    edx,DWORD PTR [ebp-0x29c45136]
  440663:	retf   0x3bc8
  440666:	add    BYTE PTR [eax],al
  440668:	out    0xca,al
  44066a:	fdivr  DWORD PTR [ebx]
  44066c:	gs retf 0x3d46
  440670:	jecxz  0x440636
  440672:	data16 aas 
  440674:	retf   0xc6
  440677:	add    BYTE PTR [esi-0x51000821],dl
  44067d:	fild   WORD PTR [eax]
  44067f:	add    BYTE PTR [edi],ch
  440681:	shl    BYTE PTR [edx],cl
  440683:	xor    BYTE PTR [esi-0x31],cl
  440686:	cmp    DWORD PTR [eax],esi
  440688:	or     dl,dl
  44068a:	pop    edx
  44068b:	xor    BYTE PTR [ecx-0x31],bl
  44068e:	xor    BYTE PTR [eax],0xc1
  440691:	into   
  440692:	fwait
  440693:	xor    BYTE PTR [edx+0x6330d6cf],ch
  440699:	ror    BYTE PTR ds:0xffcf3031,1
  44069f:	xor    DWORD PTR [esi],ecx
  4406a1:	aam    0xd0
  4406a3:	xor    bh,BYTE PTR [edx+edx*8+0x46]
  4406a7:	xor    al,0x2f
  4406a9:	lahf   
  4406aa:	daa    
  4406ab:	xchg   BYTE PTR [ebx+0x2],ah
  4406ae:	daa    
  4406af:	rcr    DWORD PTR [edx+0x45],1
  4406b2:	xor    DWORD PTR [esi-0x2ecdebbf],ebp
  4406b8:	cmp    DWORD PTR [ecx],esi
  4406ba:	xor    DWORD PTR [ebp-0x21cef8c0],ebx
  4406c0:	cmp    dh,bl
  4406c2:	xor    al,0x6d
  4406c4:	es mov edx,0xd126cd3a
  4406ca:	cmp    bl,dh
  4406cc:	add    BYTE PTR [eax],al
  4406ce:	push   ss
  4406cf:	mov    WORD PTR [ecx],?
  4406d1:	sti    
  4406d2:	push   ss
  4406d3:	xchg   ecx,eax
  4406d4:	xor    eax,0x35460522
  4406d9:	cmp    al,BYTE PTR ds:0xf5683544
  4406df:	or     al,0x36
  4406e1:	popf   
  4406e2:	cmc    
  4406e3:	inc    ebp
  4406e4:	cmp    dl,cl
  4406e6:	gs dec esp
  4406e8:	cmp    ah,dl
  4406ea:	gs mov bl,0x3a
  4406ed:	or     DWORD PTR [ebp+ebx*8+0x3b],edx
  4406f1:	cmp    BYTE PTR [edi+esi*4+0x3b],dl
  4406f5:	pop    edi
  4406f6:	inc    esp
  4406f7:	sub    DWORD PTR [ebx*4+0x173c1444],edi
  4406fe:	cmp    ebx,ebp
  440700:	cmp    BYTE PTR [ebp+0x33],bl
  440703:	hlt    
  440704:	cmp    bh,ch
  440706:	sub    eax,DWORD PTR [ecx+0x4121a638]
  44070c:	cs into 
  44070e:	sbb    DWORD PTR [esi+ebp*1+0x1a],esi
  440712:	adc    BYTE PTR [ecx+0x4b082f2e],bl
  440718:	cs inc esp
  44071a:	add    ch,al
  44071c:	das    
  44071d:	mov    bh,0xf8
  44071f:	cmp    eax,0xddf0d02f
  440724:	jmp    0x21ce2f3c
  440729:	add    al,0x2f
  44072b:	fsubp  st(2),st
  44072d:	xor    esi,DWORD PTR [eax]
  44072f:	into   
  440730:	in     al,0x33
  440732:	add    BYTE PTR [eax],al
  440734:	push   esp
  440735:	into   
  440736:	scas   al,BYTE PTR es:[edi]
  440737:	xor    esp,DWORD PTR [esi+ecx*8-0x2d]
  44073b:	xor    ebp,DWORD PTR [esi+ecx*8-0x3148cba5]
  440742:	dec    eax
  440743:	xor    al,0x2d
  440745:	iret   
  440746:	out    dx,al
  440747:	xor    al,0x3d
  440749:	iret   
  44074a:	leave  
  44074b:	xor    al,0x8
  44074d:	iret   
  44074e:	shl    BYTE PTR [esi+eiz*2],cl
  440751:	iret   
  440752:	lods   al,BYTE PTR ds:[esi]
  440753:	xor    al,0x51
  440755:	iret   
  440756:	pop    eax
  440757:	xor    eax,0x366ecfdf
  44075c:	das    
  44075d:	fsubp  st(1),st
  44075f:	and    edi,DWORD PTR [eax+0x2f03b189]
  440765:	ficom  WORD PTR [ebp+esi*1-0x63]
  440769:	int3   
  44076a:	jmp    0x1e1164a1
  44076f:	xor    BYTE PTR [ebx],cl
  440771:	shl    BYTE PTR [ecx+0x2f],cl
  440774:	mov    al,ds:0x3f2f7fd2
  440779:	ror    DWORD PTR [edx+0x31],cl
  44077c:	add    al,dl
  44077e:	into   
  44077f:	cs mov bl,0xd1
  440782:	mov    DWORD PTR [esi],ebp
  440784:	mov    BYTE PTR ds:[ecx+0x3d],0x0
  440789:	retf   0x3836
  44078c:	ss retf 
  44078e:	and    eax,0x46c8c436
  440793:	ss das 
  440795:	fsubp  st(1),st
  440797:	xor    eax,DWORD PTR [eax]
  440799:	add    BYTE PTR [eax-0x77],cl
  44079c:	lds    eax,FWORD PTR [ebx]
  44079e:	das    
  44079f:	fiadd  WORD PTR [eax]
  4407a1:	inc    esi
  4407a2:	(bad)  
  4407a3:	mov    ds:0xde007a2c,eax
  4407a8:	sub    eax,0x2dab5f9c
  4407ad:	sahf   
  4407ae:	push   edx
  4407af:	pushf  
  4407b0:	cs dec edi
  4407b2:	dec    edx
  4407b3:	add    dh,BYTE PTR [eax]
  4407b5:	addr16 push esp
  4407b7:	jbe    0x4407f1
  4407b9:	fiadd  DWORD PTR [esi+0x12]
  4407bc:	cmp    edx,DWORD PTR [esi-0x6dcb69bb]
  4407c2:	aaa    
  4407c3:	fiadd  WORD PTR [eax]
  4407c5:	jmp    0xca3b8fb6
  4407ca:	sub    al,0xde
  4407cc:	add    al,ch
  4407ce:	sbb    al,0x32
  4407d0:	das    
  4407d1:	mov    dl,0xa
  4407d3:	xor    BYTE PTR es:[esi+0x60385801],ch
  4407da:	add    al,0xc1
  4407dc:	cmp    edi,DWORD PTR [ecx+0x49357105]
  4407e2:	imul   DWORD PTR [ebp+esi*1-0x8782317]
  4407e9:	sbb    eax,0x3500de33
  4407ee:	pop    esp
  4407ef:	ja     0x44081d
  4407f1:	and    ecx,DWORD PTR [eax+0x76]
  4407f4:	sub    eax,0x2f2142e3
  4407f9:	outs   dx,DWORD PTR ds:[esi]
  4407fa:	pop    ecx
  4407fb:	lahf   
  4407fc:	cs out dx,al
  4407fe:	add    BYTE PTR [eax],al
  440800:	push   ebx
  440801:	sbb    esi,DWORD PTR [eax]
  440803:	push   ecx
  440804:	dec    edx
  440805:	mov    cl,0x2f
  440807:	dec    eax
  440808:	xor    ecx,DWORD PTR [edi-0x72db42c8]
  44080e:	cmp    eax,ecx
  440810:	adc    BYTE PTR es:[ebx],bh
  440813:	push   ebp
  440814:	adc    eax,0x15913ab2
  440819:	xor    BYTE PTR [eax],bh
  44081b:	add    BYTE PTR [esi+0x7c],dl
  44081e:	idiv   bh
  440820:	push   ds
  440821:	fld    QWORD PTR [eax]
  440823:	add    BYTE PTR [edx],bh
  440825:	int3   
  440826:	js     0x440858
  440828:	inc    edx
  440829:	int3   
  44082a:	xor    BYTE PTR [eax],0x9a
  44082d:	ror    BYTE PTR [eax-0x6f2d6dd0],cl
  440833:	xor    BYTE PTR [edx-0x7dcf672e],bl
  440839:	shl    BYTE PTR [eax-0x572d45d0],cl
  44083f:	xor    BYTE PTR [edx+0x7a30b0d2],dh
  440845:	sar    BYTE PTR [eax-0x3f2d7dd0],cl
  44084b:	xor    BYTE PTR [edx],bl
  44084d:	ror    al,cl
  44084f:	xor    BYTE PTR [edx],dl
  440851:	rcl    al,cl
  440853:	xor    BYTE PTR [edx],bl
  440855:	rcr    al,cl
  440857:	xor    BYTE PTR [edx],al
  440859:	shl    al,cl
  44085b:	xor    BYTE PTR [edx],bh
  44085d:	shr    al,cl
  44085f:	xor    BYTE PTR [edx],dh
  440861:	shl    al,cl
  440863:	xor    BYTE PTR [eax],al
  440865:	add    BYTE PTR [edx-0x3dcf0735],bh
  44086b:	retf   
  44086c:	add    BYTE PTR [ecx],dh
  44086e:	call   0x10cc:0x923108cc
  440875:	xor    DWORD PTR [edx-0x7dcee734],ebx
  44087b:	int3   
  44087c:	and    BYTE PTR [ecx],dh
  44087e:	cmp    cl,bl
  440880:	sub    BYTE PTR [ecx],dh
  440882:	xor    cl,bl
  440884:	xor    BYTE PTR [ecx],dh
  440886:	jp     0x440854
  440888:	cmp    BYTE PTR [ecx],dh
  44088a:	or     ah,0x40
  44088d:	xor    DWORD PTR [edx],ebx
  44088f:	retf   
  440890:	dec    eax
  440891:	xor    DWORD PTR [edx],edx
  440893:	retf   
  440894:	push   eax
  440895:	xor    DWORD PTR [edi],ebp
  440897:	leave  
  440898:	xor    ebx,DWORD PTR [eax+0x1e]
  44089b:	mov    ecx,0xd8fe6033
  4408a0:	xor    ebp,DWORD PTR [eax-0x2]
  4408a3:	fdiv   DWORD PTR [ebx]
  4408a5:	jo     0x4408a5
  4408a7:	mov    BYTE PTR [edx],dh
  4408a9:	js     0x4408a9
  4408ab:	js     0x4408df
  4408ad:	sbb    BYTE PTR [esi-0x7],0x32
  4408b1:	mov    BYTE PTR [esi-0x7],bl
  4408b4:	xor    dl,BYTE PTR [eax-0x67ccf6a2]
  4408ba:	pop    esi
  4408bb:	xchg   ecx,eax
  4408bc:	xor    DWORD PTR [eax],ebx
  4408be:	cmp    eax,0x3d203181
  4408c3:	loope  0x4408f7
  4408c5:	sub    BYTE PTR ds:0x3032e1,bh
  4408cb:	add    BYTE PTR ds:0x1d383191,bh
  4408d1:	xor    DWORD PTR [ecx],0x31411d40
  4408d7:	dec    eax
  4408d8:	sbb    eax,0x1d503141
  4408dd:	push   ecx
  4408de:	xor    DWORD PTR [eax-0x3],ebx
  4408e1:	inc    eax
  4408e2:	xor    DWORD PTR [eax-0x3],esp
  4408e5:	pusha  
  4408e6:	xor    DWORD PTR [eax-0x3],ebp
  4408e9:	pusha  
  4408ea:	xor    DWORD PTR [eax-0x3],esi
  4408ed:	adc    BYTE PTR [edx],dh
  4408ef:	js     0x44094e
  4408f1:	add    DWORD PTR [edi],ebp
  4408f3:	sbb    BYTE PTR [ebp+0x1],0x2f
  4408f7:	mov    BYTE PTR [ebp+0x1],bl
  4408fa:	das    
  4408fb:	nop
  4408fc:	pop    ebp
  4408fd:	adc    DWORD PTR [edi],ebp
  4408ff:	cwde   
  440900:	cmp    eax,0x3da02f01
  440905:	popa   
  440906:	cs test al,0x3d
  440909:	popa   
  44090a:	cs mov al,0x3d
  44090d:	adc    DWORD PTR [edi],ebp
  44090f:	mov    eax,0x365dde1d
  440914:	outs   dx,DWORD PTR ds:[esi]
  440915:	retf   
  440916:	popf   
  440917:	ss addr16 retf 
  44091a:	popf   
  44091b:	ss jg  0x4408e9
  44091e:	or     al,0x37
  440920:	or     cl,dl
  440922:	add    ebp,DWORD PTR ds:0x2d77c44b
  440928:	mov    ebx,0xc3842e41
  44092e:	cmp    ch,BYTE PTR [esi]
  440930:	add    BYTE PTR [eax],al
  440932:	test   al,0x52
  440935:	cs dec esp
  440937:	leave  
  440938:	enter  0xbc2e,0xc9
  44093c:	xchg   BYTE PTR [edi],ch
  44093e:	fmulp  st(1),st
  440940:	push   ds
  440941:	das    
  440942:	test   cl,0x36
  440945:	das    
  440946:	xor    al,0xc2
  440948:	iret   
  440949:	das    
  44094a:	dec    edx
  44094b:	ret    0x2fa1
  44094e:	pop    ecx
  44094f:	ret    0x2fb1
  440952:	retw   0x3064
  440956:	mov    ah,0xc2
  440958:	jp     0x44098a
  44095a:	mov    eax,edx
  44095c:	push   ebp
  44095d:	xor    bh,bh
  44095f:	ret    0x3119
  440962:	sub    al,0xc4
  440964:	enter  0x431,0xc4
  440968:	mov    WORD PTR [ecx],?
  44096a:	pusha  
  44096b:	les    ecx,FWORD PTR [ecx+esi*1+0x317cc450]
  440972:	adc    ah,al
  440974:	dec    esp
  440975:	xor    dl,BYTE PTR [eax]
  440977:	les    ecx,FWORD PTR [edx+esi*1+0x20]
  44097b:	les    ecx,FWORD PTR [edx+esi*1+0x10]
  44097f:	les    ebx,FWORD PTR [ecx+esi*1-0x50]
  440983:	les    ebp,FWORD PTR [ecx+esi*1-0x50]
  440987:	les    eax,FWORD PTR [ecx+0x33]
  44098a:	das    
  44098b:	fiadd  WORD PTR [eax]
  44098d:	jmp    0x63b8e0e
  440992:	xor    ebx,esi
  440994:	add    BYTE PTR [eax+eax*1+0x0],ch
  440998:	sbb    BYTE PTR [ebx+0x2f],dl
  44099b:	mov    eax,ds:0x438f115
  4409a0:	add    ebp,DWORD PTR [ecx+0x38]
  4409a3:	dec    ebp
  4409a4:	adc    al,0x7a
  4409a6:	cmp    ch,dh
  4409a8:	adc    ebp,DWORD PTR [ebx]
  4409aa:	cmp    al,0x4d
  4409ac:	or     DWORD PTR [edx-0x42c5],esp
  4409b2:	xor    eax,0xf783ace9
  4409b7:	add    eax,0xc000de2a
  4409bc:	pop    esp
  4409bd:	sub    DWORD PTR [ecx],esi
  4409bf:	enter  0x15c,0x31
  4409c3:	sar    BYTE PTR [ecx+edi*8],0x30
  4409c7:	mov    eax,0xc031113c
  4409cc:	cmp    al,0x9
  4409ce:	xor    DWORD PTR [eax+0x3c],ebp
  4409d1:	popa   
  4409d2:	xor    BYTE PTR [eax+0x1c],ah
  4409d5:	pop    ecx
  4409d6:	xor    BYTE PTR [eax+0x1c],bh
  4409d9:	jno    0x440a0b
  4409db:	sbb    BYTE PTR [ecx+ebp*2],0x30
  4409df:	dec    eax
  4409e0:	sbb    al,0x41
  4409e2:	xor    BYTE PTR [eax-0x4],al
  4409e5:	cmp    BYTE PTR [eax],dh
  4409e7:	cmp    ah,bh
  4409e9:	push   eax
  4409ea:	xor    BYTE PTR [eax-0x4],al
  4409ed:	dec    eax
  4409ee:	xor    BYTE PTR [eax],ch
  4409f0:	cld    
  4409f1:	mov    al,ds:0x995c2030
  4409f6:	xor    BYTE PTR [eax-0x3fcf4ea5],bh
  4409fc:	add    BYTE PTR [eax],al
  4409fe:	arpl   WORD PTR [ecx-0x7ea437d0],bp
  440a04:	xor    al,al
  440a06:	inc    ebx
  440a07:	jns    0x440a39
  440a09:	add    bh,al
  440a0b:	leave  
  440a0c:	repz xor BYTE PTR [edi-0x37],ch
  440a10:	sti    
  440a11:	xor    BYTE PTR [edi+0x4f3103cf],al
  440a17:	iret   
  440a18:	or     esi,DWORD PTR [ecx]
  440a1a:	addr16 iret 
  440a1c:	adc    esi,DWORD PTR [ecx]
  440a1e:	das    
  440a1f:	rcr    DWORD PTR [ebx],1
  440a21:	xor    DWORD PTR [edi-0x31],esp
  440a24:	and    esi,DWORD PTR [ecx]
  440a26:	outs   dx,DWORD PTR ds:[esi]
  440a27:	iret   
  440a28:	sub    esi,DWORD PTR [ecx]
  440a2a:	xchg   edi,ecx
  440a2c:	xor    esi,DWORD PTR [ecx]
  440a2e:	outs   dx,DWORD PTR ds:[esi]
  440a2f:	iret   
  440a30:	cmp    esi,DWORD PTR [ecx]
  440a32:	pop    es
  440a33:	rol    DWORD PTR [ebx+0x31],1
  440a36:	dec    edi
  440a37:	iret   
  440a38:	dec    ebx
  440a39:	xor    edi,esp
  440a3b:	rcl    BYTE PTR [ebx+0x31],1
  440a3e:	out    dx,eax
  440a3f:	rcr    BYTE PTR [ebx+0x31],1
  440a42:	out    0xd0,eax
  440a44:	arpl   WORD PTR [ecx],si
  440a46:	out    dx,eax
  440a47:	shr    BYTE PTR [ebx+0x31],1
  440a4a:	(bad)  
  440a4b:	shl    BYTE PTR [ebx+0x31],1
  440a4e:	out    dx,eax
  440a4f:	sar    BYTE PTR [ebx+0x31],1
  440a52:	add    ecx,edx
  440a54:	div    DWORD PTR [edx]
  440a56:	(bad)
  440a5a:	xchg   cl,cl
  440a5c:	lock xor ecx,DWORD PTR [esi]
  440a5f:	leave  
  440a60:	add    esi,DWORD PTR ds:0xccd10000
  440a66:	cs xor eax,0x3569cc7f
  440a6c:	fs retf 
  440a6e:	adc    DWORD PTR [esi],esi
  440a70:	xchg   ebx,eax
  440a71:	lds    edx,FWORD PTR [esi+0x36]
  440a74:	push   esp
  440a75:	enter  0x36e8,0x80
  440a79:	(bad)  
  440a7a:	stc    
  440a7b:	aaa    
  440a7c:	xor    al,0xb7
  440a7e:	push   ebp
  440a7f:	cmp    esi,esp
  440a81:	mov    al,0x78
  440a83:	cmp    ebp,DWORD PTR [edi]
  440a85:	sub    esp,DWORD PTR [esi]
  440a87:	add    DWORD PTR [ebx+eiz*1+0x25],0x24534494
  440a8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440a90:	xor    al,0x5
  440a92:	and    eax,0x244b34b8
  440a97:	add    al,0x2b
  440a99:	mov    ds:0xdf231427,al
  440a9e:	xor    BYTE PTR [ebx+ebx*1],ch
  440aa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440aa2:	daa    
  440aa3:	xor    dl,BYTE PTR [ebx]
  440aa5:	stos   DWORD PTR es:[edi],eax
  440aa6:	daa    
  440aa7:	fs or  ebp,ebp
  440aaa:	xor    BYTE PTR [ebp+0x1b275b03],bh
  440ab0:	cli    
  440ab1:	xchg   ebx,eax
  440ab2:	es ds repnz out dx,al
  440ab6:	daa    
  440ab7:	pop    ebp
  440ab8:	push   0xffffff8a
  440aba:	mov    ah,BYTE PTR es:[edx+0x70]
  440abe:	es out 0x5a,eax
  440ac1:	fdiv   QWORD PTR [edx]
  440ac3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440ac4:	push   ecx
  440ac5:	push   0x31
  440ac7:	loopne 0x440ac9
  440ac9:	add    BYTE PTR [ecx+0x28],cl
  440acc:	xor    cl,BYTE PTR [eax+eax*2]
  440acf:	cmp    DWORD PTR [eax],esi
  440ad1:	bound  edi,QWORD PTR [eax]
  440ad3:	div    DWORD PTR [eax]
  440ad5:	mov    dh,0x30
  440ad7:	jne    0x440a6c
  440ad9:	(bad)  
  440ada:	call   0x2f440e37
  440adf:	xchg   BYTE PTR [ebx],dh
  440ae1:	and    bl,BYTE PTR [edi]
  440ae3:	test   eax,0x281f3e33
  440ae8:	xor    al,0xa
  440aea:	(bad)  
  440aeb:	xchg   esp,eax
  440aec:	xor    bl,BYTE PTR [ecx-0x2]
  440aef:	push   edx
  440af0:	xor    ch,BYTE PTR [edx-0x2]
  440af3:	add    esi,DWORD PTR [ebx]
  440af5:	xchg   ebp,eax
  440af6:	(bad)  
  440af7:	mov    esi,0x695d1132
  440afc:	sub    eax,0x85de5d65
  440b01:	xor    cl,BYTE PTR [edi+ecx*8-0x30b2cd21]
  440b08:	inc    esp
  440b09:	xor    ebp,DWORD PTR [esi+ecx*8-0x21]
  440b0d:	aaa    
  440b0e:	dec    edx
  440b0f:	retf   0x3829
  440b12:	lock leave 
  440b14:	sbb    DWORD PTR [eax],edi
  440b16:	(bad)  
  440b18:	inc    ecx
  440b19:	cmp    bl,bl
  440b1b:	leave  
  440b1c:	cmp    edi,DWORD PTR [eax]
  440b1e:	fmul   st,st(1)
  440b20:	jno    0x440b5a
  440b22:	test   cl,cl
  440b24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440b25:	cmp    BYTE PTR [edx-0x37],ah
  440b28:	mov    bl,0x38
  440b2a:	dec    edi
  440b2b:	leave  
  440b2c:	cwde   
  440b2d:	cmp    BYTE PTR [eax],al
  440b2f:	add    BYTE PTR [ecx+ecx*8],bh
  440b32:	cmp    BYTE PTR [eax],0x3a
  440b35:	leave  
  440b36:	int3   
  440b37:	cmp    BYTE PTR [esi],cl
  440b39:	leave  
  440b3a:	push   ds
  440b3b:	cmp    DWORD PTR [ebx+ecx*8-0x37d6c675],edi
  440b42:	add    dh,BYTE PTR [esi]
  440b44:	push   ebx
  440b45:	enter  0x3612,0x40
  440b49:	enter  0x35aa,0x6e
  440b4d:	enter  0x3594,0x5c
  440b51:	enter  0x35c1,0x78
  440b55:	enter  0x3673,0xc2
  440b59:	enter  0x36e2,0x74
  440b5d:	leave  
  440b5e:	cmp    DWORD PTR [edi],esi
  440b60:	cmp    eax,0xa62be2c6
  440b65:	(bad)  
  440b66:	sub    DWORD PTR [edx],ebp
  440b68:	cmc    
  440b69:	les    eax,FWORD PTR [eax]
  440b6b:	sub    bh,BYTE PTR [eax*8-0x3dccd4d5]
  440b72:	push   ebx
  440b73:	xor    bl,ah
  440b75:	ret    0x30f0
  440b78:	ret    
  440b79:	rol    BYTE PTR [eax],0x37
  440b7c:	pop    eax
  440b7d:	fiadd  WORD PTR [eax]
  440b7f:	jmp    0x8a3b8c50
  440b84:	sub    al,0xde
  440b86:	add    BYTE PTR [ebp+0x5c],ch
  440b89:	and    eax,0xc043c932
  440b8e:	xor    ah,BYTE PTR [ebx+0x3e]
  440b91:	xor    bh,BYTE PTR ds:[esi-0x2dc20000]
  440b98:	xor    ecx,DWORD PTR [edx]
  440b9a:	cmp    al,0xc7
  440b9c:	xor    eax,DWORD PTR [eax+0x1c]
  440b9f:	push   ecx
  440ba0:	xor    esp,DWORD PTR [edi-0x3acc68e3]
  440ba6:	sbb    eax,0x1d9933a3
  440bab:	shr    DWORD PTR [esi*8-0x1d2e800],1
  440bb2:	clc    
  440bb3:	add    ch,BYTE PTR ds:0x2c6d0073
  440bb9:	dec    edx
  440bba:	clc    
  440bbb:	pushf  
  440bbc:	sub    al,0x97
  440bbe:	pusha  
  440bbf:	aam    0x2d
  440bc1:	mov    dl,0x67
  440bc3:	das    
  440bc4:	cs jns 0x440c1e
  440bc7:	jge    0x440bf6
  440bc9:	hlt    
  440bca:	pop    edx
  440bcb:	into   
  440bcc:	cs mov esi,0xce2ef242
  440bd2:	cmp    bl,cl
  440bd4:	das    
  440bd5:	test   BYTE PTR [ecx-0x19],0x2f
  440bd9:	adc    DWORD PTR [eax],edi
  440bdb:	retf   
  440bdc:	das    
  440bdd:	test   al,0x21
  440bdf:	or     esi,DWORD PTR [eax]
  440be1:	pop    ecx
  440be2:	sbb    DWORD PTR ds:0xe704e82f,esi
  440be8:	cmp    BYTE PTR [ecx+0x7e390904],bl
  440bee:	adc    al,0x47
  440bf0:	cmp    ch,ah
  440bf2:	adc    edi,DWORD PTR [esi-0x4e5effc7]
  440bf8:	jge    0x440c33
  440bfa:	add    BYTE PTR [eax],al
  440bfc:	sub    DWORD PTR [edx-0x4c7dc5ee],esi
  440c02:	xor    DWORD PTR [ebx],edi
  440c04:	shl    BYTE PTR [ebx-0x48dcc4ad],0xa4
  440c0b:	cmp    ebx,DWORD PTR [ecx-0x4fc38750]
  440c11:	int    0xda
  440c13:	cmp    al,0xf4
  440c15:	mov    al,0x85
  440c17:	cmp    eax,0x3f7db02c
  440c1c:	test   al,0xb2
  440c1e:	(bad)  
  440c1f:	aas    
  440c20:	stos   DWORD PTR es:[edi],eax
  440c21:	mov    dl,0x0
  440c23:	add    BYTE PTR [esi+0x4c],dl
  440c26:	idiv   bh
  440c28:	(bad)  
  440c29:	fld    DWORD PTR [eax]
  440c2b:	add    BYTE PTR [ebp-0x34],ah
  440c2e:	inc    ebx
  440c2f:	xor    BYTE PTR [ebx],bh
  440c31:	retf   0x30a6
  440c34:	repz leave 
  440c36:	pop    ds
  440c37:	xor    DWORD PTR [ecx],edi
  440c39:	retf   
  440c3a:	stos   DWORD PTR es:[edi],eax
  440c3b:	xor    DWORD PTR [ecx-0x32],edi
  440c3e:	cmp    esi,DWORD PTR [edx]
  440c40:	inc    esp
  440c41:	int3   
  440c42:	xor    BYTE PTR [edx],0x82
  440c45:	int3   
  440c46:	mov    eax,ds:0xf5cc7132
  440c4b:	xor    dl,BYTE PTR [esi]
  440c4d:	iret   
  440c4e:	dec    edi
  440c4f:	xor    esp,ebx
  440c51:	into   
  440c52:	stos   BYTE PTR es:[edi],al
  440c53:	xor    esi,DWORD PTR [ecx+0x733d1cd]
  440c59:	enter  0x3418,0xf9
  440c5d:	(bad)  
  440c5e:	jo     0x440c94
  440c60:	add    BYTE PTR [eax],al
  440c62:	ror    eax,cl
  440c64:	and    BYTE PTR ds:0x35b6c88a,dh
  440c6a:	sub    bh,al
  440c6c:	adc    BYTE PTR [esi],dh
  440c6e:	repz leave 
  440c70:	xor    eax,0x2d3b2f36
  440c75:	dec    ecx
  440c76:	stc    
  440c77:	dec    ebx
  440c78:	sub    eax,0x2ebe01cd
  440c7d:	dec    ebx
  440c7e:	clc    
  440c7f:	addr16 sub al,0x7a
  440c82:	pusha  
  440c83:	jmp    0x532a:0x8767582d
  440c8a:	push   ebp
  440c8b:	or     al,0x2a
  440c8d:	in     al,dx
  440c8e:	push   ebp
  440c8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440c90:	sub    DWORD PTR [eax],esp
  440c92:	inc    esp
  440c93:	fsubr  QWORD PTR [ecx]
  440c95:	aaa    
  440c96:	inc    esp
  440c97:	fild   QWORD PTR [ecx]
  440c99:	xchg   ecx,eax
  440c9a:	xor    al,0x51
  440c9c:	sub    dl,dh
  440c9e:	xor    al,0x77
  440ca0:	daa    
  440ca1:	inc    esp
  440ca2:	sub    ebx,DWORD PTR [ebx+0x27]
  440ca5:	fsub   DWORD PTR [ebx]
  440ca7:	push   edx
  440ca8:	daa    
  440ca9:	push   ebp
  440caa:	sbb    dl,ch
  440cac:	daa    
  440cad:	jb     0x440cc1
  440caf:	xor    eax,0x6e084426
  440cb4:	and    al,0x0
  440cb6:	das    
  440cb7:	jne    0x440cfc
  440cb9:	(bad)  
  440cba:	cmp    cl,bl
  440cbc:	cld    
  440cbd:	jmp    FWORD PTR [edi]
  440cbf:	int    0x2c
  440cc1:	pop    di
  440cc3:	inc    eax
  440cc4:	xor    ch,BYTE PTR [ebx+0x335d0000]
  440cca:	xor    DWORD PTR [edi-0x6dd1cf9d],edx
  440cd0:	pop    edx
  440cd1:	test   BYTE PTR ds:0x2cb3405c,ch
  440cd7:	sar    DWORD PTR [eax],1
  440cd9:	mov    DWORD PTR [ebx],ebp
  440cdb:	sbb    dh,BYTE PTR [edi]
  440cdd:	pop    edx
  440cde:	sub    ebx,DWORD PTR [ebx+0x36]
  440ce1:	and    al,0x2b
  440ce3:	lods   eax,DWORD PTR ds:[esi]
  440ce4:	es mov ebp,0x6d26da2a
  440cea:	sub    DWORD PTR [edx+0x28b2de15],eax
  440cf0:	jg     0x440cb5
  440cf2:	js     0x440d1c
  440cf4:	test   eax,0xc52825c2
  440cf9:	ret    0x2fd7
  440cfc:	outs   dx,BYTE PTR ds:[esi]
  440cfd:	ret    0x2f5a
  440d00:	in     eax,0xc1
  440d02:	in     eax,dx
  440d03:	cs aaa 
  440d05:	shl    DWORD PTR [eax+0x33c1052e],0x2e
  440d0c:	cmp    al,0xc0
  440d0e:	or     BYTE PTR [edx],ch
  440d10:	in     al,0xbf
  440d12:	inc    ebx
  440d13:	sub    al,BYTE PTR ds:0xb22a5cc0
  440d19:	mov    edi,0xbfc62a67
  440d1e:	pushf  
  440d1f:	sub    cl,BYTE PTR [ecx+0x4a2acebf]
  440d25:	mov    edi,0xbefe2b22
  440d2a:	dec    ebx
  440d2b:	sub    eax,DWORD PTR [eax]
  440d2d:	add    bh,bl
  440d2f:	mov    esi,0xbe612bb2
  440d34:	jge    0x440d61
  440d36:	ds mov esi,0x7e4153e9
  440d3c:	pop    ecx
  440d3d:	add    al,0x2f
  440d3f:	fsubp  st(1),st
  440d41:	xor    esi,edi
  440d43:	int    0xb7
  440d45:	xor    esi,DWORD PTR [eax-0x52]
  440d48:	adc    DWORD PTR [esp+eax*4],esi
  440d4b:	scas   al,BYTE PTR es:[edi]
  440d4c:	add    dh,BYTE PTR [esi+ebx*4]
  440d4f:	scas   al,BYTE PTR es:[edi]
  440d50:	jnp    0x440d86
  440d52:	retf   
  440d53:	scas   al,BYTE PTR es:[edi]
  440d54:	xchg   ebx,eax
  440d55:	xor    al,0xbf
  440d57:	scas   al,BYTE PTR es:[edi]
  440d58:	lea    esi,[edx+eax*8]
  440d5b:	scas   al,BYTE PTR es:[edi]
  440d5c:	sub    eax,0x36af0f34
  440d61:	xor    al,0x1a
  440d63:	scas   eax,DWORD PTR es:[edi]
  440d64:	push   DWORD PTR [edx*1+0x1bfc00af]
  440d6b:	mov    bl,0x31
  440d6d:	cwde   
  440d6e:	and    esi,DWORD PTR [esi]
  440d70:	xor    DWORD PTR [ecx],ebp
  440d72:	sbb    ah,BYTE PTR [esi-0x69fdd0cf]
  440d78:	xor    DWORD PTR [esi],esi
  440d7a:	cli    
  440d7b:	xor    BYTE PTR [ecx],0xf0
  440d7e:	add    ah,BYTE PTR [ecx-0x7005cce]
  440d84:	sub    eax,0x2d835e20
  440d89:	repz pop esi
  440d8b:	fisubr WORD PTR [edi]
  440d8d:	rcr    BYTE PTR [ebp-0x37],1
  440d90:	das    
  440d91:	cmp    eax,DWORD PTR [eax]
  440d93:	add    BYTE PTR [ebp+eax*1+0x30],bl
  440d97:	pop    edx
  440d98:	cmp    al,0x90
  440d9a:	das    
  440d9b:	mov    ah,0x3d
  440d9d:	outs   dx,DWORD PTR ds:[esi]
  440d9e:	das    
  440d9f:	push   cs
  440da0:	dec    ebx
  440da1:	and    al,0x39
  440da3:	pop    eax
  440da4:	inc    esp
  440da5:	sub    bh,BYTE PTR [edx]
  440da7:	mov    bh,0x1b
  440da9:	jp     0x440de4
  440dab:	or     dl,BYTE PTR [ecx]
  440dad:	mov    bl,0x3a
  440daf:	leave  
  440db0:	or     bl,dh
  440db2:	xor    al,0x44
  440db4:	pop    es
  440db5:	addr16 xor al,0xc1
  440db8:	adc    BYTE PTR [edi-0x25e811cc],dl
  440dbe:	xor    eax,0x35b207c3
  440dc3:	mov    DWORD PTR [edi],0x5615361f
  440dc9:	sbb    eax,0x55575b36
  440dce:	xor    eax,0x35904730
  440dd3:	push   ebp
  440dd4:	inc    edi
  440dd5:	outs   dx,DWORD PTR ds:[esi]
  440dd6:	xor    eax,0x36fe5523
  440ddb:	js     0x440e33
  440ddd:	das    
  440dde:	ss dec edx
  440de0:	inc    esi
  440de1:	shl    DWORD PTR [edi],cl
  440de3:	add    bh,cl
  440de5:	(bad)  
  440de6:	mov    BYTE PTR [edi],bh
  440de8:	push   ss
  440de9:	enter  0x3ffa,0xd6
  440ded:	add    bh,dh
  440def:	(bad)  
  440df0:	jp     0x440dd3
  440df2:	add    BYTE PTR [eax],al
  440df4:	aam    0xb0
  440df6:	adc    eax,0xdc000030
  440dfb:	mov    al,0x40
  440dfd:	xor    BYTE PTR [edx-0x4f],dl
  440e00:	(bad)  
  440e01:	xor    ah,al
  440e03:	mov    cl,0xf
  440e05:	xor    esi,esp
  440e07:	mov    cl,0x32
  440e09:	xor    esp,eax
  440e0b:	mov    cl,0x4d
  440e0d:	xor    DWORD PTR ds:0x54317db2,esp
  440e13:	mov    dl,0x8f
  440e15:	xor    ebp,DWORD PTR [ebp-0x4e]
  440e18:	pop    ss
  440e19:	xor    al,0x27
  440e1b:	scas   al,BYTE PTR es:[edi]
  440e1c:	xor    dh,BYTE PTR [esi+eax*2]
  440e1f:	scas   al,BYTE PTR es:[edi]
  440e20:	xchg   esi,eax
  440e21:	xor    al,0x66
  440e23:	lods   eax,DWORD PTR ds:[esi]
  440e24:	push   DWORD PTR [edx+edx*2]
  440e27:	retf   
  440e28:	sub    al,0x35
  440e2a:	es int 0x8f
  440e2d:	xor    eax,0x363aae66
  440e32:	cmp    DWORD PTR [eax-0x4fc5c9b1],esi
  440e38:	xor    DWORD PTR [edi],esi
  440e3a:	push   ds
  440e3b:	scas   eax,DWORD PTR es:[edi]
  440e3c:	xchg   edi,eax
  440e3d:	cmp    DWORD PTR [esi-0x75c63538],edx
  440e43:	enter  0x39f0,0x44
  440e47:	retf   0x3a19
  440e4a:	jmp    0x8f7e7018
  440e4f:	int3   
  440e50:	xor    BYTE PTR [ebx],bh
  440e52:	sbb    al,0xc4
  440e54:	xchg   ecx,eax
  440e55:	cmp    al,0x24
  440e57:	ret    
  440e58:	dec    ebp
  440e59:	cmp    eax,0x3d92c399
  440e5e:	add    BYTE PTR [eax],al
  440e60:	das    
  440e61:	push   ebp
  440e62:	pop    ds
  440e63:	mov    eax,0xf11fad3a
  440e68:	xor    cl,BYTE PTR [ecx+0x14298829]
  440e6e:	sub    ebp,DWORD PTR [ebx-0x29d504df]
  440e74:	sbb    DWORD PTR [eax+0x28],eax
  440e77:	adc    BYTE PTR [eax],0xd2
  440e7a:	sub    DWORD PTR [eax],eax
  440e7c:	das    
  440e7d:	test   DWORD PTR [ebx-0x2],esi
  440e80:	ror    BYTE PTR ds:0x6d2ffffd,0x33
  440e87:	cmp    eax,0x7e3374ff
  440e8c:	pop    esi
  440e8d:	pop    ebx
  440e8e:	sub    al,0x80
  440e90:	pop    esp
  440e91:	sub    ch,BYTE PTR [esi]
  440e93:	enter  0x8d5c,0x27
  440e97:	push   ebx
  440e98:	pop    edx
  440e99:	daa    
  440e9a:	sub    BYTE PTR [edx+eax*2+0xb],dh
  440e9e:	daa    
  440e9f:	xchg   esp,eax
  440ea0:	cmp    ah,BYTE PTR [ebx+0x26]
  440ea3:	mov    esp,0xd5263242
  440ea8:	cmp    dl,BYTE PTR [ecx-0x68deffda]
  440eae:	xor    DWORD PTR [eax],ebx
  440eb0:	sbb    DWORD PTR [eax+0x31],esi
  440eb3:	dec    esp
  440eb4:	and    ebx,edx
  440eb6:	xor    ch,BYTE PTR [ecx+ebx*1-0x29]
  440eba:	xor    al,BYTE PTR [ecx+eax*1-0x65fce11]
  440ec1:	pop    ss
  440ec2:	xor    bh,BYTE PTR [eax+eax*1+0x31470100]
  440ec9:	sar    ecx,cl
  440ecb:	aas    
  440ecc:	xor    esp,esi
  440ece:	popa   
  440ecf:	mov    BYTE PTR [eax],dh
  440ed1:	sbb    BYTE PTR [eax+0x35],bl
  440ed4:	xor    BYTE PTR [edi],bh
  440ed6:	pusha  
  440ed7:	fdiv   QWORD PTR [ecx]
  440ed9:	je     0x440f33
  440edb:	fidivr WORD PTR [ebp+0x30]
  440ede:	in     eax,dx
  440edf:	mov    dl,0x58
  440ee1:	xor    BYTE PTR [edi],dh
  440ee3:	mov    dh,0xf1
  440ee5:	sub    edx,DWORD PTR [esi]
  440ee7:	mov    dh,0xff
  440ee9:	sub    eax,DWORD PTR [ebx-0x4a]
  440eec:	cld    
  440eed:	sub    ebp,DWORD PTR [edx]
  440eef:	mov    dh,0xb2
  440ef1:	sub    esi,DWORD PTR [esi+0x2f2b25b5]
  440ef7:	mov    ch,0xe5
  440ef9:	sub    bh,BYTE PTR [ebp+0x122e03b4]
  440eff:	mov    eax,0xb78c2d90
  440f04:	pop    ss
  440f05:	sub    eax,0x2cb2b6ff
  440f0a:	(bad)  
  440f0b:	mov    ecx,0xb9b627a1
  440f10:	cs daa 
  440f12:	xchg   BYTE PTR [ecx-0x43c1d994],bh
  440f18:	shr    BYTE PTR [ecx],cl
  440f1a:	xor    BYTE PTR [esp+eax*1+0x21bc5926],bh
  440f21:	es out dx,al
  440f23:	mov    ebx,0xbb96261f
  440f28:	loopne 0x440f50
  440f2a:	add    BYTE PTR [eax],al
  440f2c:	inc    edi
  440f2d:	mov    ebx,0xba6d272c
  440f32:	cdq    
  440f33:	daa    
  440f34:	xchg   BYTE PTR [edx-0x459dd841],bh
  440f3a:	jmp    0x11be6042
  440f3f:	add    al,0x2f
  440f41:	fmulp  st(4),st
  440f43:	xor    ebx,DWORD PTR [ebp+ebp*4-0x51]
  440f47:	xor    al,0x42
  440f49:	lods   eax,DWORD PTR ds:[esi]
  440f4a:	(bad)  [eax+edi*8]
  440f4d:	lods   al,BYTE PTR ds:[esi]
  440f4e:	mov    esi,0x9af7234
  440f53:	xor    eax,0x5d00afb4
  440f58:	bound  eax,QWORD PTR [eax-0x34a138cf]
  440f5e:	xor    bh,BYTE PTR [edx+0x7b33173e]
  440f64:	cmp    eax,0x3d2b3231
  440f69:	test   eax,0xbb3c1532
  440f6e:	xor    esp,DWORD PTR [eax+0x61336a1d]
  440f74:	sbb    al,0x55
  440f76:	xor    ecx,DWORD PTR [ebx-0x20d39ae4]
  440f7c:	add    al,ch
  440f7e:	das    
  440f7f:	pop    es
  440f80:	sbb    edi,DWORD PTR [edx-0xdeb4dc8]
  440f86:	cmp    al,BYTE PTR [edx-0x5dc4bbfb]
  440f8c:	or     BYTE PTR ds:0xa335,cl
  440f92:	push   eax
  440f93:	(bad)  
  440f94:	xor    al,0x53
  440f96:	push   edi
  440f97:	cs xor al,0xad
  440f9a:	push   edx
  440f9b:	dec    eax
  440f9c:	ss loope 0x440fe8
  440f9f:	mov    edx,0xde505e37
  440fa4:	add    cl,ch
  440fa6:	sbb    al,0x78
  440fa8:	mul    DWORD PTR [ecx+0x2c]
  440fab:	fiadd  WORD PTR [eax]
  440fad:	inc    esp
  440fae:	cmp    esi,esp
  440fb0:	xor    BYTE PTR [ecx],ch
  440fb2:	and    bl,BYTE PTR [edi]
  440fb4:	xor    ch,BYTE PTR [edx+ebx*1]
  440fb7:	push   ss
  440fb8:	xor    bh,BYTE PTR [ecx]
  440fba:	and    ah,BYTE PTR [ecx+esi*1+0x53]
  440fbe:	sbb    esp,DWORD PTR [edx-0x17fc74cf]
  440fc4:	xor    al,bh
  440fc6:	(bad)  
  440fc7:	imul   esi,DWORD PTR [ebx],0x24
  440fca:	jmp    DWORD PTR [ecx-0x7fff45d4]
  440fd0:	sub    al,0x0
  440fd2:	leave  
  440fd3:	lods   eax,DWORD PTR ds:[esi]
  440fd4:	pop    ds
  440fd5:	ss loopne 0x440fa2
  440fd8:	push   edi
  440fd9:	ss iret 
  440fdb:	retf   0x382e
  440fde:	inc    esi
  440fdf:	retf   0x386e
  440fe2:	xchg   edi,eax
  440fe3:	lds    eax,FWORD PTR [esi-0x5f3b51c8]
  440fe9:	cmp    BYTE PTR [ebp+0x4838c0c4],ch
  440fef:	lds    ebp,FWORD PTR [esi+0xca7839]
  440ff5:	cmp    al,BYTE PTR [eax]
  440ff7:	add    cl,cl
  440ff9:	(bad)  
  440ffa:	pop    ds
  440ffb:	cmp    bl,dh
  440ffd:	(bad)  
  440ffe:	pop    ecx
  440fff:	cmp    ah,BYTE PTR [esi+0x343aaec6]
  441005:	xbegin 0x507e445
  44100b:	cmp    eax,DWORD PTR [eax-0x3c]
  44100e:	idiv   BYTE PTR [ebx]
  441010:	in     eax,0xc0
  441012:	sbb    eax,0x64c5713c
  441017:	ds sbb ebx,eax
  44101a:	test   DWORD PTR [esi],edi
  44101c:	call   0x3182b5e3
  441021:	ret    
  441022:	call   0x3037b65
  441027:	aas    
  441028:	add    cl,0x1c
  44102b:	aas    
  44102c:	push   ecx
  44102d:	ret    
  44102e:	add    BYTE PTR [eax],al
  441030:	xchg   BYTE PTR [esi+esi*8+0xe192ff],bh
  441037:	add    BYTE PTR [edx+esi*4],cl
  44103a:	addr16 xor ah,dh
  44103d:	mov    cl,0x9f
  44103f:	xor    BYTE PTR [edi],al
  441041:	lods   eax,DWORD PTR ds:[esi]
  441042:	cmc    
  441043:	xor    ecx,eax
  441045:	stos   DWORD PTR es:[edi],eax
  441046:	test   al,0x32
  441048:	xchg   BYTE PTR [ebp+0x222f35b2],ch
  44104e:	daa    
  44104f:	mov    edx,0x7525dcf9
  441054:	pusha  
  441055:	or     ah,BYTE PTR [esi]
  441057:	xchg   esi,eax
  441058:	pop    eax
  441059:	or     eax,0xe126
  44105e:	pusha  
  44105f:	hlt    
  441060:	and    eax,0x2b9a58fb
  441065:	sbb    BYTE PTR [edi-0x2c],al
  441068:	and    al,0x63
  44106a:	inc    edi
  44106b:	cdq    
  44106c:	sub    ebx,DWORD PTR [edx-0x2adba6c9]
  441072:	aaa    
  441073:	mov    bh,0x24
  441075:	adc    BYTE PTR [esi],ah
  441077:	jmp    0x2b6a36a7
  44107c:	sub    ah,BYTE PTR [edx+0x16]
  44107f:	xor    DWORD PTR [edx],ebp
  441081:	jge    0x441099
  441083:	pop    esp
  441084:	sub    edi,DWORD PTR [edi-0x10d44afa]
  44108a:	push   es
  44108b:	shr    BYTE PTR [ebx],1
  44108d:	xor    al,0xf5
  44108f:	inc    esp
  441090:	sub    DWORD PTR [ecx-0xb],edx
  441093:	dec    ecx
  441094:	sub    DWORD PTR [edx+0x65],esi
  441097:	add    al,0x2b
  441099:	xchg   esi,eax
  44109a:	gs and eax,0xc055b62b
  4410a0:	sub    dl,ch
  4410a2:	push   ebp
  4410a3:	jae    0x4410ce
  4410a5:	clc    
  4410a6:	inc    ebp
  4410a7:	jne    0x4410d1
  4410a9:	push   ss
  4410aa:	inc    esp
  4410ab:	(bad)  
  4410ac:	sub    DWORD PTR [ecx],esi
  4410ae:	xor    al,0xc0
  4410b0:	sub    DWORD PTR [edi+0x34],edx
  4410b3:	adc    eax,0xf024722a
  4410b8:	sub    BYTE PTR [esp+0x14b728f4],bl
  4410bf:	sahf   
  4410c0:	sub    bh,dh
  4410c2:	add    BYTE PTR [eax],al
  4410c4:	adc    al,0x7c
  4410c6:	pop    ds
  4410c7:	and    BYTE PTR [ebx],cl
  4410c9:	fmulp  st(6),st
  4410cb:	daa    
  4410cc:	in     eax,dx
  4410cd:	mov    ecx,0xb9cb2825
  4410d2:	or     eax,0x67baa328
  4410d7:	daa    
  4410d8:	jecxz  0x441093
  4410da:	mov    eax,ds:0x7b94327
  4410df:	daa    
  4410e0:	lods   eax,DWORD PTR ds:[esi]
  4410e1:	mov    eax,0xb8d22654
  4410e6:	cwde   
  4410e7:	sbb    bh,BYTE PTR es:[ecx-0x47d0d99d]
  4410ee:	fbld   TBYTE PTR ds:0x25efb825
  4410f4:	inc    ebx
  4410f5:	mov    eax,0xb86e2605
  4410fa:	call   0x3d25:0x4bb78b25
  441101:	mov    bh,0x4
  441103:	and    eax,0x24bbb74f
  441108:	sahf   
  441109:	mov    dh,0x56
  44110b:	and    al,0xe8
  44110d:	mov    dh,0x34
  44110f:	and    al,0x2f
  441111:	fsubp  st(1),st
  441113:	xor    esi,DWORD PTR [ecx+0x2f033d76]
  441119:	fdivrp st(3),st
  44111b:	xor    esp,DWORD PTR [edi-0x52]
  44111e:	mov    ds:0x2dadb833,eax
  441123:	xor    al,BYTE PTR [ecx+0x31eaac]
  441129:	add    BYTE PTR [ebx-0x54],dl
  44112c:	and    DWORD PTR [esi],edx
  44112e:	hlt    
  44112f:	stos   DWORD PTR es:[edi],eax
  441130:	xor    al,0x16
  441132:	mov    esp,0x4f16c0ab
  441137:	stos   DWORD PTR es:[edi],eax
  441138:	cmc    
  441139:	push   ss
  44113a:	push   ds
  44113b:	stos   DWORD PTR es:[edi],eax
  44113c:	sbb    BYTE PTR [edi],dl
  44113e:	iret   
  44113f:	stos   BYTE PTR es:[edi],al
  441140:	jo     0x441159
  441142:	dec    ecx
  441143:	stos   BYTE PTR es:[edi],al
  441144:	add    BYTE PTR ds:0x5d2d2837,al
  44114a:	daa    
  44114b:	js     0x441179
  44114d:	loopne 0x441176
  44114f:	push   ebx
  441150:	sub    eax,0x2eea165c
  441155:	out    dx,al
  441156:	adc    eax,0x4b092fc2
  44115b:	sub    edi,DWORD PTR [eax]
  44115d:	jecxz  0x4411a2
  44115f:	pop    ds
  441160:	cmp    dl,BYTE PTR [edx+edi*1]
  441163:	pusha  
  441164:	cmp    DWORD PTR [edi+0x32],ebx
  441167:	xor    al,0x39
  441169:	cwde   
  44116a:	sub    bl,BYTE PTR [ecx+0x6f224a39]
  441170:	cmp    ebp,esp
  441172:	sbb    al,bl
  441174:	cmp    dl,BYTE PTR [edi]
  441176:	adc    DWORD PTR [ebx+edi*1],ebx
  441179:	mov    eax,0x173bbf4a
  44117e:	inc    eax
  44117f:	lods   eax,DWORD PTR ds:[esi]
  441180:	cmp    esi,DWORD PTR [esi-0x74c407c7]
  441186:	xor    BYTE PTR [eax],dh
  441188:	cmp    ebp,DWORD PTR [eax+ebp*1+0x6e]
  44118c:	cmp    esp,DWORD PTR [ecx]
  44118e:	add    BYTE PTR [eax],al
  441190:	and    al,ch
  441192:	xor    al,0xb5
  441194:	sbb    BYTE PTR [esp+esi*1],ch
  441197:	out    0xf,al
  441199:	adc    eax,0x514e7936
  44119e:	xor    eax,0x35894e67
  4411a3:	hlt    
  4411a4:	dec    edi
  4411a5:	loope  0x4411dd
  4411a7:	(bad)  [esi+0x4a]
  4411aa:	adc    DWORD PTR ss:[ebp+0x6e],ecx
  4411ae:	ss push 0x7637654d
  4411b4:	dec    ebp
  4411b5:	mov    eax,ds:0xde4dca37
  4411ba:	add    cl,ch
  4411bc:	ins    BYTE PTR es:[edi],dx
  4411bd:	jae    0x4411b6
  4411bf:	add    BYTE PTR [edx-0x26],cl
  4411c2:	add    BYTE PTR [eax],al
  4411c4:	dec    ebx
  4411c5:	shl    DWORD PTR [eax],1
  4411c7:	xor    BYTE PTR [ecx-0x2f],dl
  4411ca:	dec    esi
  4411cb:	xor    bl,dl
  4411cd:	ror    BYTE PTR [ebp-0x412f30d0],1
  4411d3:	xor    BYTE PTR [esi+0x163118d1],dl
  4411d9:	retf   
  4411da:	les    esi,FWORD PTR [ecx]
  4411dc:	in     al,0xc9
  4411de:	loope  0x441211
  4411e0:	mov    ds:0xe631ffca,al
  4411e5:	retf   0x3232
  4411e8:	inc    eax
  4411e9:	int3   
  4411ea:	pop    ebx
  4411eb:	xor    al,BYTE PTR ds:0xa4327dcb
  4411f1:	retf   0x32d0
  4411f4:	add    BYTE PTR [eax],al
  4411f6:	push   esi
  4411f7:	retf   
  4411f8:	push   DWORD PTR [edx]
  4411fa:	aas    
  4411fb:	int3   
  4411fc:	loopne 0x441231
  4411fe:	jg     0x4411cc
  441200:	sub    dh,BYTE PTR [ebx+ebp*1]
  441203:	(bad)  
  441204:	pop    edx
  441205:	xor    al,0xb1
  441207:	int3   
  441208:	test   eax,0x47d5dd34
  44120d:	xor    eax,0x356fd5ef
  441212:	aas    
  441213:	(bad)  
  441214:	cdq    
  441215:	xor    eax,0x35b5d655
  44121a:	cmc    
  44121b:	aad    0xf1
  44121d:	xor    eax,0x3626d6a7
  441222:	(bad)  
  441224:	push   ebp
  441225:	ss add eax,0xe43694d7
  44122b:	(bad)  
  44122c:	test   al,0x36
  44122e:	dec    eax
  44122f:	xlat   BYTE PTR ds:[ebx]
  441230:	ret    
  441231:	ss (bad) 
  441233:	xlat   BYTE PTR ds:[ebx]
  441234:	add    esi,DWORD PTR [edi]
  441236:	mov    ebp,edx
  441238:	and    DWORD PTR [edi],esi
  44123a:	das    
  44123b:	xlat   BYTE PTR ds:[ebx]
  44123c:	sbb    DWORD PTR [edx+0x20],eax
  44123f:	pop    ds
  441240:	sbb    dh,BYTE PTR [edx+0x18]
  441243:	jmp    0x44125e
  441245:	stos   BYTE PTR es:[edi],al
  441246:	and    bl,dh
  441248:	sbb    esi,ecx
  44124a:	sbb    BYTE PTR [ebx],dh
  44124c:	sbb    esi,edi
  44124e:	add    BYTE PTR [edi-0x50f8c9e5],cl
  441254:	adc    al,0x5a
  441256:	test   DWORD PTR [edi],0x8f15
  44125c:	mul    DWORD PTR [ebx]
  44125e:	adc    eax,0x142f67cc
  441263:	lock addr16 xchg edi,eax
  441266:	sbb    ah,BYTE PTR [eax]
  441268:	push   esi
  441269:	sub    ebx,DWORD PTR [edx]
  44126b:	pop    eax
  44126c:	push   esi
  44126d:	jecxz  0x44128a
  44126f:	jl     0x4412b7
  441271:	es sbb al,0xa9
  441274:	inc    esi
  441275:	ret    0xe61b
  441278:	or     bl,BYTE PTR ss:[esp+edi*8]
  44127c:	mov    BYTE PTR ss:0x15762506,dl
  441283:	sbb    BYTE PTR ds:0x1526157c,ah
  441289:	ins    BYTE PTR es:[edi],dx
  44128a:	adc    eax,0x1701156d
  44128f:	rol    BYTE PTR ds:0x40e16d6,0xa8
  441296:	adc    al,0x64
  441298:	hlt    
  441299:	mov    edi,0x9af30a15
  44129e:	pop    ss
  44129f:	inc    ecx
  4412a0:	imul   esp,DWORD PTR [ecx+0x17],0x46
  4412a4:	bound  edx,QWORD PTR [ebp+0x16]
  4412a7:	jnp    0x441303
  4412a9:	sti    
  4412aa:	pop    ss
  4412ab:	mov    ecx,0x51166b52
  4412b0:	dec    ecx
  4412b1:	and    DWORD PTR fs:[ebp+0x41],esp
  4412b5:	ficomp WORD PTR [ebp+0x22]
  4412b8:	das    
  4412b9:	mov    bl,0xf3
  4412bb:	and    BYTE PTR [edi],bl
  4412bd:	mov    bl,0xf2
  4412bf:	and    BYTE PTR [eax],al
  4412c1:	add    BYTE PTR [ebx],bl
  4412c3:	mov    bl,0x1b
  4412c5:	and    DWORD PTR [ecx],ebx
  4412c7:	mov    bl,0x29
  4412c9:	and    ecx,ebp
  4412cb:	mov    dl,0x14
  4412cd:	and    ebp,eax
  4412cf:	mov    dl,0x35
  4412d1:	and    ebx,ecx
  4412d3:	mov    dl,0x6b
  4412d5:	and    BYTE PTR [ebx+0x662058b3],bl
  4412db:	mov    bl,0xb4
  4412dd:	and    BYTE PTR [edi],ch
  4412df:	fsubp  st(1),st
  4412e1:	mov    bl,0x2a
  4412e3:	jae    0x4412f6
  4412e5:	add    al,0x2f
  4412e7:	fsubp  st(1),st
  4412e9:	adc    ebp,DWORD PTR [ecx]
  4412eb:	scas   al,BYTE PTR es:[edi]
  4412ec:	loop   0x441301
  4412ee:	dec    ebp
  4412ef:	scas   al,BYTE PTR es:[edi]
  4412f0:	push   esi
  4412f1:	adc    ebx,DWORD PTR [ebx]
  4412f3:	scas   al,BYTE PTR es:[edi]
  4412f4:	aad    0x12
  4412f6:	push   ebp
  4412f7:	lods   eax,DWORD PTR ds:[esi]
  4412f8:	je     0x44130c
  4412fa:	js     0x4412ac
  4412fc:	jae    0x441315
  4412fe:	nop
  4412ff:	test   eax,0xa93d173b
  441304:	pushw  ss
  441306:	aad    0xa8
  441308:	xlat   BYTE PTR ds:[ebx]
  441309:	sbb    DWORD PTR [ebx],ebx
  44130b:	lods   al,BYTE PTR ds:[esi]
  44130c:	pop    ebp
  44130d:	sbb    eax,ebp
  44130f:	stos   DWORD PTR es:[edi],eax
  441310:	jmp    0x70ef8a2d
  441315:	sbb    BYTE PTR [esi-0x4a],ch
  441318:	mov    ebp,0x5eb6341b
  44131d:	sbb    edx,DWORD PTR [ecx-0x1fe4be4b]
  441323:	mov    ch,0x1d
  441325:	sbb    eax,DWORD PTR [eax]
  441327:	add    BYTE PTR [ecx-0x4b],cl
  44132a:	mov    ecx,0x64b50a1a
  44132f:	sbb    cl,cl
  441331:	mov    ah,0x0
  441333:	adc    al,0x25
  441335:	and    eax,0xff228f3b
  44133a:	cmp    dl,BYTE PTR [ebx-0x50c561eb]
  441340:	adc    eax,0x44713b63
  441345:	sub    DWORD PTR [ebx],edi
  441347:	dec    ecx
  441348:	pmuludq mm6,QWORD PTR [esi+esi*1]
  44134c:	push   cs
  44134d:	mov    eax,ds:0xac31c036
  441352:	aaa    
  441353:	dec    ecx
  441354:	sub    BYTE PTR [ebx+0x37],dl
  441357:	mov    esp,0xe900de20
  44135c:	dec    esp
  44135d:	jo     0x441356
  44135f:	sbb    DWORD PTR [ebx],ebp
  441361:	fiadd  WORD PTR [eax]
  441363:	mov    ah,0x43
  441365:	mov    ebx,0x943d1a32
  44136a:	xor    dl,BYTE PTR [edi]
  44136c:	cmp    al,0x46
  44136e:	xor    ecx,edi
  441370:	cmp    BYTE PTR [esi+0x2c],bl
  441373:	cmp    ah,BYTE PTR [edi]
  441375:	nop
  441376:	sub    al,0xd1
  441378:	daa    
  441379:	pop    ds
  44137a:	cs dec ebp
  44137c:	push   ss
  44137d:	xlat   BYTE PTR ds:[ebx]
  44137e:	cs xchg esp,eax
  441380:	sbb    DWORD PTR [eax+0x2e],edi
  441383:	jmp    0xb2742ec9
  441388:	cmp    DWORD PTR [edx+0x2f],ebx
  44138b:	je     0x44138d
  44138d:	add    BYTE PTR [eax+0x4a],al
  441390:	das    
  441391:	arpl   WORD PTR [eax],di
  441393:	inc    edx
  441394:	das    
  441395:	jp     0x4413b7
  441397:	sub    ebp,DWORD PTR [edi]
  441399:	sub    BYTE PTR [eax],bl
  44139b:	mov    ch,BYTE PTR [edi]
  44139d:	mov    esp,cr7
  4413a0:	cmp    BYTE PTR [edi+0x6e390014],bh
  4413a6:	dec    ebx
  4413a7:	push   0x38
  4413a9:	or     al,0x43
  4413ab:	xchg   ebx,eax
  4413ac:	cmp    DWORD PTR [eax],eax
  4413ae:	fwait
  4413af:	shr    BYTE PTR [eax],cl
  4413b1:	cmp    dl,ah
  4413b3:	xlat   BYTE PTR ds:[ebx]
  4413b4:	cmp    dl,BYTE PTR fs:[edx]
  4413b7:	aam    0xca
  4413b9:	cmp    ah,BYTE PTR [esi-0x42]
  4413bc:	jae    0x4413fb
  4413be:	push   es
  4413bf:	mov    esi,0xbec13daa
  4413c4:	mov    ch,0x3e
  4413c6:	outs   dx,DWORD PTR ds:[esi]
  4413c7:	shl    DWORD PTR [ecx],cl
  4413c9:	aas    
  4413ca:	lahf   
  4413cb:	sar    cl,1
  4413cd:	aas    
  4413ce:	inc    esi
  4413cf:	(bad)  
  4413d0:	cmc    
  4413d1:	call   DWORD PTR [esi]
  4413d3:	fiadd  DWORD PTR [eax]
  4413d5:	add    BYTE PTR [esi],dh
  4413d7:	retf   0x301d
  4413da:	es retf 0x307a
  4413de:	mov    edi,0x4a31a1cc
  4413e3:	iret   
  4413e4:	mov    esp,0x1cceb532
  4413e9:	xor    edi,eax
  4413eb:	retf   
  4413ec:	bound  esi,QWORD PTR [ebx]
  4413ee:	push   esi
  4413ef:	int3   
  4413f0:	aaa    
  4413f1:	xor    al,0x0
  4413f3:	add    BYTE PTR [edi],ah
  4413f5:	(bad)  
  4413f6:	xchg   ecx,eax
  4413f7:	xor    al,0xb0
  4413f9:	enter  0x353a,0x60
  4413fd:	(bad)  
  4413fe:	mov    ebx,0x59d68d35
  441403:	ss stos BYTE PTR es:[edi],al
  441405:	retf   0x36e2
  441408:	xchg   ebx,ecx
  44140a:	mov    bh,0x37
  44140c:	outs   dx,BYTE PTR ds:[esi]
  44140d:	enter  0x3875,0xcb
  441411:	rcl    DWORD PTR ds:0xccd1e339,1
  441417:	cmp    DWORD PTR [ecx],esp
  441419:	shr    cl,cl
  44141b:	cmp    DWORD PTR [esp+edx*8],ebp
  44141e:	and    eax,0xb4d6b33a
  441423:	cmp    cl,BYTE PTR [edi+edx*8]
  441426:	add    al,0x3b
  441428:	das    
  441429:	test   eax,0xeb621217
  44142e:	and    bh,cl
  441430:	pop    edx
  441431:	xchg   ecx,eax
  441432:	adc    eax,0x15ac51af
  441437:	adc    al,0x48
  441439:	lea    edx,[esi]
  44143b:	xchg   edx,eax
  44143c:	inc    eax
  44143d:	leave  
  44143e:	push   ss
  44143f:	add    BYTE PTR [edi],ch
  441441:	xchg   DWORD PTR [ebx-0x33d8f03],eax
  441447:	jmp    FWORD PTR [edi]
  441449:	cmc    
  44144a:	or     al,0x25
  44144c:	push   ds
  44144d:	cmc    
  44144e:	adc    esp,ebp
  441450:	push   ds
  441451:	mov    ebx,0xe51d9e12
  441456:	adc    DWORD PTR [ebp+0x0],ebx
  441459:	add    ah,bh
  44145b:	call   0x3e0d:0x7dfbf518
  441462:	add    ebp,esp
  441464:	push   cs
  441465:	fdivr  st,st(0)
  441467:	mov    edx,0xf265511a
  44146c:	sbb    DWORD PTR [ebx+eiz*2],eax
  44146f:	mov    ecx,0x4d5b8620
  441474:	and    dh,ch
  441476:	push   ebx
  441477:	lock and BYTE PTR ds:0x26168f4a,al
  44147e:	inc    edx
  44147f:	nop/reserved BYTE PTR [ebp-0x1de84ac6]
  441486:	xor    bl,al
  441488:	adc    eax,0x148a2832
  44148d:	add    BYTE PTR [edi],ch
  44148f:	test   DWORD PTR [ebx-0x3],esi
  441492:	fsubr  DWORD PTR [ecx]
  441494:	add    eax,DWORD PTR [eax]
  441496:	das    
  441497:	adc    esi,DWORD PTR cs:[ecx]
  44149a:	(bad)  
  44149b:	out    0x13,al
  44149d:	stos   DWORD PTR es:[edi],eax
  44149e:	std    
  44149f:	mov    ch,0x12
  4414a1:	iret   
  4414a2:	add    ebx,esi
  4414a4:	or     DWORD PTR [eax],ebx
  4414a6:	(bad)  
  4414a7:	stos   BYTE PTR es:[edi],al
  4414a8:	and    ebx,DWORD PTR [eax]
  4414aa:	sub    eax,0x4816dca9
  4414af:	test   al,0x77
  4414b1:	adc    eax,0x147fa8b4
  4414b6:	adc    ah,BYTE PTR [edi-0x583aeac0]
  4414bc:	loope  0x4414d8
  4414be:	add    BYTE PTR [eax],al
  4414c0:	out    dx,eax
  4414c1:	mov    ah,0x73
  4414c3:	sbb    dh,dh
  4414c5:	mov    ah,0x34
  4414c7:	sbb    bh,ch
  4414c9:	mov    bl,0x5d
  4414cb:	sbb    DWORD PTR [ebx+0x391fcfb2],edx
  4414d1:	mov    cl,0x21
  4414d3:	pop    ds
  4414d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4414d5:	mov    cl,0x2b
  4414d7:	push   ds
  4414d8:	jns    0x44148a
  4414da:	rcr    BYTE PTR ds:0xa3e9af51,0x42
  4414e1:	outs   dx,DWORD PTR ds:[esi]
  4414e2:	pop    ecx
  4414e3:	add    ebp,DWORD PTR [edi]
  4414e5:	fidiv  WORD PTR [esp+edx*1]
  4414e8:	lods   al,BYTE PTR ds:[esi]
  4414e9:	scas   al,BYTE PTR es:[edi]
  4414ea:	fist   DWORD PTR [edx]
  4414ec:	sub    DWORD PTR [ebp-0x5376eddf],0x49
  4414f3:	adc    DWORD PTR [ebx+ebp*4+0x2a],eax
  4414f7:	adc    DWORD PTR [edi-0x55],esp
  4414fa:	mov    WORD PTR [eax],ss
  4414fc:	ds stos BYTE PTR es:[edi],al
  4414fe:	adc    DWORD PTR [eax],ebx
  441500:	and    esp,DWORD PTR [edi-0x5969eb1b]
  441506:	and    eax,0x2da6e414
  44150b:	adc    al,0x1
  44150d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44150e:	cmp    eax,0x52a6d214
  441513:	adc    al,0x3e
  441515:	mov    dh,0x7
  441517:	sbb    al,0x5d
  441519:	mov    dh,0x64
  44151b:	sbb    eax,DWORD PTR [eax+0x25e300b5]
  441521:	add    DWORD PTR [edx],edi
  441523:	push   edi
  441524:	add    BYTE PTR [eax],al
  441526:	adc    eax,0x152a3943
  44152b:	xchg   BYTE PTR [ecx],bh
  44152d:	and    DWORD PTR [ebp-0x3a],eax
  441530:	cmp    ch,BYTE PTR [ecx+0x6d3af546]
  441536:	ss cmp al,0x3a
  441539:	push   edi
  44153a:	sub    edi,DWORD PTR ss:[edx]
  44153d:	push   ss
  44153e:	es nop
  441540:	cmp    bh,bl
  441542:	daa    
  441543:	fidivr DWORD PTR [ebx]
  441545:	mov    esp,0xa13c2217
  44154a:	adc    BYTE PTR [ecx-0xcb8a6c5],dl
  441550:	xor    al,0x8a
  441552:	inc    edi
  441553:	sub    BYTE PTR [eax+ebp*4],dh
  441556:	aaa    
  441557:	mov    edi,0x32362535
  44155c:	xor    eax,0x364b2548
  441561:	scas   al,BYTE PTR es:[edi]
  441562:	and    eax,0x14453678
  441567:	call   0x285892a3
  44156c:	aaa    
  44156d:	mov    al,0x44
  44156f:	popf   
  441570:	aaa    
  441571:	jmp    0x3e3b8132
  441576:	xor    bl,dh
  441578:	add    ch,ah
  44157a:	cmp    al,0xaf
  44157c:	xor    dh,bh
  44157e:	sbb    al,0x65
  441580:	xor    BYTE PTR [ebx+ebx*1+0x52],ah
  441584:	xor    BYTE PTR [ebx+0x23],dl
  441587:	dec    eax
  441588:	xor    BYTE PTR [edx+0x361b0000],cl
  44158e:	xor    BYTE PTR [ebx+eax*2+0x3b9e303c],cl
  441595:	sub    dh,BYTE PTR [eax]
  441597:	sub    BYTE PTR [ebx-0x60],al
  44159a:	xor    BYTE PTR [eax],al
  44159c:	sbb    eax,0x2330d0d2
  4415a1:	ror    dh,cl
  4415a3:	xor    BYTE PTR [ecx],bl
  4415a5:	rcr    ah,cl
  4415a7:	xor    BYTE PTR [edi-0x2e],ch
  4415aa:	jmp    0x4b30:0xf8d21530
  4415b1:	shl    dh,cl
  4415b3:	xor    BYTE PTR [ecx-0x68cefb2e],dl
  4415b9:	rcl    BYTE PTR [edx],cl
  4415bb:	xor    DWORD PTR [ebp+0x733120d2],ecx
  4415c1:	rcr    BYTE PTR [esi],cl
  4415c3:	xor    DWORD PTR [ecx-0x2e],ebp
  4415c6:	sub    al,0x31
  4415c8:	mov    edi,0x45313ad2
  4415cd:	ror    DWORD PTR [eax+0x31],cl
  4415d0:	sbb    edx,ebx
  4415d2:	inc    esi
  4415d3:	xor    DWORD PTR [ecx],esp
  4415d5:	rcl    DWORD PTR [ecx+esi*1-0x19],cl
  4415d9:	shl    BYTE PTR [edx+0x31],cl
  4415dc:	std    
  4415dd:	shl    BYTE PTR [eax+0x31],cl
  4415e0:	add    edx,ebx
  4415e2:	outs   dx,BYTE PTR ds:[esi]
  4415e3:	xor    ecx,edi
  4415e5:	sar    BYTE PTR [ecx+esi*1-0x31],cl
  4415e9:	ror    DWORD PTR [edx-0x672e4acf],1
  4415ef:	xor    DWORD PTR [eax],eax
  4415f1:	add    BYTE PTR [ebx+0x713196d2],ch
  4415f7:	shl    BYTE PTR [ecx+esi*1+0x31b2d277],cl
  4415fe:	ins    DWORD PTR es:[edi],dx
  4415ff:	rol    al,cl
  441601:	xor    ebx,edx
  441603:	sar    DWORD PTR [esi-0x332e36cf],1
  441609:	xor    DWORD PTR [edi+0x6531dad1],ebx
  44160f:	shr    al,cl
  441611:	xor    DWORD PTR [ebx-0x2e],edi
  441614:	out    0x31,al
  441616:	das    
  441617:	or     al,0xd
  441619:	cld    
  44161a:	push   ds
  44161b:	jbe    0x44162a
  44161d:	add    bl,BYTE PTR ds:0xfd100d70
  441623:	xchg   ecx,eax
  441624:	or     eax,0xd93fd16
  441629:	and    al,0xfd
  44162b:	fisttp QWORD PTR [esi]
  44162d:	sub    bh,ch
  44162f:	xchg   DWORD PTR ds:0xd8a5d38,ecx
  441635:	ds pop ebp
  441637:	cmp    al,0xd
  441639:	dec    esp
  44163a:	pop    ebp
  44163b:	es or  eax,0xd405d52
  441641:	pusha  
  441642:	cmp    eax,0x3d660d62
  441647:	fs or  eax,0xdee3d74
  44164d:	jp     0x44168c
  44164f:	clc    
  441650:	push   cs
  441651:	mov    BYTE PTR ds:0x8e0efa,bl
  441657:	add    BYTE PTR ds:0x1d9c0eec,bl
  44165d:	push   esi
  44165e:	push   cs
  44165f:	mov    ds:0xb00e501d,al
  441664:	std    
  441665:	icebp  
  441666:	push   cs
  441667:	mov    dh,0xfd
  441669:	repz push cs
  44166b:	(bad)  
  44166c:	std    
  44166d:	aas    
  44166e:	push   cs
  44166f:	sar    ch,1
  441671:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441672:	push   cs
  441673:	fstp   QWORD PTR [ebp+0x50]
  441676:	push   cs
  441677:	out    dx,eax
  441678:	pop    ebp
  441679:	dec    ebp
  44167a:	push   cs
  44167b:	cli    
  44167c:	pop    ebp
  44167d:	or     BYTE PTR [eax*1+0x180c875c],0x3c
  441685:	xchg   esi,eax
  441686:	or     al,0x22
  441688:	cmp    al,0x2c
  44168a:	or     al,0x39
  44168c:	cmp    al,0xc2
  44168e:	or     eax,0xb8de3c45
  441693:	adc    al,0x50
  441695:	scas   eax,DWORD PTR es:[edi]
  441696:	imul   edx,DWORD PTR ds:0x1549af95,0x3b
  44169d:	mov    dl,0x6
  44169f:	adc    BYTE PTR [ebx-0x4e],ah
  4416a2:	mov    edi,0x6eb2b80f
  4416a7:	adc    dh,dh
  4416a9:	mov    dl,0x3c
  4416ab:	adc    BYTE PTR [ebp+0x110ecdb2],bh
  4416b1:	mov    cl,0xab
  4416b3:	push   cs
  4416b4:	add    DWORD PTR [ecx-0x4e28f14a],esi
  4416ba:	daa    
  4416bb:	sldt   WORD PTR [eax]
  4416be:	xchg   DWORD PTR [ecx-0x4e6ef0fc],esi
  4416c4:	ret    0xb011
  4416c7:	mov    ah,0x38
  4416c9:	adc    al,dh
  4416cb:	mov    ah,0xfb
  4416cd:	adc    DWORD PTR ds:0xf4107bb3,ebx
  4416d3:	mov    dl,0x70
  4416d5:	adc    BYTE PTR [edi+0x19108fb3],bh
  4416db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4416dc:	pop    ebx
  4416dd:	sbb    al,0x6c
  4416df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4416e0:	mov    edx,0xe1a6551b
  4416e5:	sbb    cl,BYTE PTR [esi]
  4416e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4416e8:	sub    DWORD PTR [ebx],ebx
  4416ea:	xchg   ebx,eax
  4416eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4416ec:	mov    eax,ds:0xbea5571a
  4416f1:	sbb    dh,BYTE PTR [edx-0x9e29c59]
  4416f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4416f8:	out    0x1c,al
  4416fa:	jo     0x4416a3
  4416fc:	or     DWORD PTR ds:0x1cb2a6d1,ebx
  441702:	add    DWORD PTR [edi-0x5631e818],esp
  441708:	pushf  
  441709:	pop    ss
  44170a:	jl     0x4416b8
  44170c:	add    ch,dh
  44170e:	push   ss
  44170f:	sub    esi,DWORD PTR [esi]
  441711:	rcl    DWORD PTR [edi],1
  441713:	adc    BYTE PTR [eax],bh
  441715:	leave  
  441716:	inc    edi
  441717:	icebp  
  441718:	aaa    
  441719:	lea    eax,[edi+0x32]
  44171c:	aaa    
  44171d:	xchg   ebp,eax
  44171e:	aaa    
  44171f:	mov    ds:0x1d37,al
  441724:	aaa    
  441725:	xchg   edx,eax
  441726:	aaa    
  441727:	and    eax,0xe900de27
  44172c:	ins    BYTE PTR es:[edi],dx
  44172d:	imul   esi,edi,0xde2cb1
  441733:	ret    0xfb1c
  441736:	xor    BYTE PTR [eax+0x6531f53d],dl
  44173c:	cmp    eax,0x429a32c4
  441741:	repz xor ah,BYTE PTR [ebx+0x3a]
  441745:	push   esp
  441746:	xor    dl,BYTE PTR [edi+0x22]
  441749:	xor    dh,BYTE PTR [edx]
  44174b:	sub    DWORD PTR [edx],ebx
  44174d:	xor    bl,BYTE PTR gs:[edi+0x3b340723]
  441754:	sbb    esp,edi
  441756:	sub    al,0x88
  441758:	aas    
  441759:	cmp    eax,0xc531d32c
  44175e:	das    
  44175f:	jmp    0x9b35:0x5b3ae13b
  441766:	cmp    bh,cl
  441768:	and    eax,0x24653c11
  44176d:	cmp    DWORD PTR [ebx],edi
  44176f:	xor    DWORD PTR [esi],edx
  441771:	inc    edx
  441772:	xor    eax,0x35991670
  441777:	xchg   edi,eax
  441778:	inc    esi
  441779:	loop   0x4417b1
  44177b:	out    dx,al
  44177c:	cmp    dh,BYTE PTR [ebp+0x1c42dd36]
  441782:	aaa    
  441783:	add    edi,DWORD PTR [ecx]
  441785:	out    0x36,eax
  441787:	add    BYTE PTR [eax],al
  441789:	add    BYTE PTR [edi-0x30],bh
  44178c:	cwde   
  44178d:	ds cmp edx,eax
  441790:	mov    esp,0xad09d3e
  441795:	aas    
  441796:	jmp    0x441768
  441798:	push   eax
  441799:	aas    
  44179a:	cmc    
  44179b:	rcr    BYTE PTR [edi+0x3f],1
  44179e:	add    al,0xd1
  4417a0:	outs   dx,DWORD PTR ds:[esi]
  4417a1:	aas    
  4417a2:	mov    eax,0xc63fe1d1
  4417a7:	lods   eax,DWORD PTR ds:[esi]
  4417a8:	cmc    
  4417a9:	call   FWORD PTR [edx-0x1e]
  4417ac:	add    BYTE PTR [eax],al
  4417ae:	mov    edi,0x8e3026cd
  4417b3:	int    0x83
  4417b5:	xor    BYTE PTR [eax-0x2e],dl
  4417b8:	xchg   edi,eax
  4417b9:	xor    al,bh
  4417bb:	shr    DWORD PTR [edx+0x2ad24730],1
  4417c1:	xor    DWORD PTR [ebp-0x2e],edi
  4417c4:	push   esp
  4417c5:	xor    DWORD PTR [esi-0x1ece632e],esi
  4417cb:	rcl    bl,cl
  4417cd:	xor    DWORD PTR [ebx+edx*8],esi
  4417d0:	and    al,0x32
  4417d2:	ror    edi,cl
  4417d4:	pop    ecx
  4417d5:	xor    ah,cl
  4417d7:	retf   
  4417d8:	shl    DWORD PTR [edx],0xa3
  4417db:	iret   
  4417dc:	fdiv   QWORD PTR [edx]
  4417de:	push   ds
  4417df:	int    0x16
  4417e1:	xor    al,0x19
  4417e3:	into   
  4417e4:	mov    cl,0x35
  4417e6:	sub    al,0xd8
  4417e8:	xor    DWORD PTR [esi],esi
  4417ea:	lahf   
  4417eb:	(bad)  [ecx+0x53000036]
  4417f1:	fcom   DWORD PTR [ebx+0x37]
  4417f4:	sti    
  4417f5:	fsubr  st,st(6)
  4417f7:	aaa    
  4417f8:	pusha  
  4417f9:	lds    esp,FWORD PTR [edi]
  4417fb:	cmp    BYTE PTR [edx+ecx*8+0x5a],ah
  4417ff:	cmp    BYTE PTR [ecx],bh
  441801:	retf   0x388d
  441804:	das    
  441805:	inc    esp
  441806:	sbb    ecx,DWORD PTR [esi]
  441808:	push   esi
  441809:	scas   al,BYTE PTR es:[edi]
  44180a:	adc    eax,0x14f04670
  44180f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441810:	inc    esi
  441811:	push   cs
  441812:	adc    eax,0x14e936be
  441817:	or     eax,0x961a0335
  44181c:	and    eax,0x21941872
  441821:	jmp    0x755dc633
  441826:	push   cs
  441827:	xor    BYTE PTR [eax],dl
  441829:	call   0xfd63:0x772f000e
  441830:	rol    BYTE PTR [esi+0x3],0x0
  441834:	das    
  441835:	jg     0x441843
  441837:	and    bh,dh
  441839:	inc    esp
  44183a:	or     al,0xce
  44183c:	pop    ebp
  44183d:	adc    DWORD PTR [eax],0x5a
  441840:	pop    edx
  441841:	jmp    0x441853
  441843:	stos   DWORD PTR es:[edi],eax
  441844:	bound  ecx,QWORD PTR [ebx+ebx*1+0x1c18576d]
  44184b:	repnz inc edi
  44184d:	out    0x14,eax
  44184f:	lods   eax,DWORD PTR ds:[esi]
  441850:	inc    esi
  441851:	popf   
  441852:	sbb    DWORD PTR [eax+eax*1+0x0],ebx
  441856:	xor    eax,0x35cc1a13
  44185b:	outs   dx,BYTE PTR ds:[esi]
  44185c:	sbb    BYTE PTR [edx],dh
  44185e:	and    al,0x1b
  441860:	sbb    ch,cl
  441862:	and    al,0x88
  441864:	sbb    DWORD PTR [edx+0x1b],eax
  441867:	dec    edx
  441868:	sbb    dh,dh
  44186a:	adc    edi,DWORD PTR [eax+0xe]
  44186d:	cmp    eax,0x970fc10a
  441872:	add    dh,cl
  441874:	pinsrw mm7,edx,0x27
  441878:	comiss xmm6,xmm1
  44187b:	stos   DWORD PTR es:[edi],eax
  44187c:	push   cs
  44187d:	bound  ebp,QWORD PTR [eax-0x22]
  441880:	jmp    0x25ac3ad8
  441885:	add    al,0x2f
  441887:	(bad)  
  441889:	adc    esi,ecx
  44188b:	scas   al,BYTE PTR es:[edi]
  44188c:	loopne 0x4418a0
  44188e:	jl     0x44183d
  441890:	bound  edx,QWORD PTR [ebx]
  441892:	adc    BYTE PTR [esi-0x5392ee25],ch
  441898:	aaa    
  441899:	adc    bl,dl
  44189b:	lods   al,BYTE PTR ds:[esi]
  44189c:	fst    QWORD PTR [eax]
  44189e:	cmp    ch,BYTE PTR [ebx-0x540aef2a]
  4418a4:	adc    BYTE PTR [eax],dl
  4418a6:	dec    esi
  4418a7:	mov    dl,0xe6
  4418a9:	push   cs
  4418aa:	leave  
  4418ab:	mov    cl,0xdf
  4418ad:	or     eax,0xe85b038
  4418b2:	call   0xe55fde67
  4418b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4418b8:	push   es
  4418b9:	sbb    eax,DWORD PTR [eax]
  4418bb:	add    BYTE PTR [ebp-0x5b],ch
  4418be:	fwait
  4418bf:	sbb    ah,BYTE PTR [esi]
  4418c1:	stos   BYTE PTR es:[edi],al
  4418c2:	sbb    BYTE PTR fs:[eax],ch
  4418c5:	test   eax,0xa981172d
  4418ca:	dec    edi
  4418cb:	push   ss
  4418cc:	das    
  4418cd:	fsubp  st(1),st
  4418cf:	add    ecx,DWORD PTR [edx+0x2f03d967]
  4418d5:	fimul  WORD PTR [edx]
  4418d7:	adc    edi,DWORD PTR [ebx-0x54]
  4418da:	push   0xe9b29611
  4418df:	repz imul esp,DWORD PTR [edi+0x31],0x4
  4418e4:	das    
  4418e5:	fimul  WORD PTR ds:0x72acfb13
  4418eb:	push   cs
  4418ec:	retf   
  4418ed:	scas   eax,DWORD PTR es:[edi]
  4418ee:	fimul  DWORD PTR ds:0xcfdaf31
  4418f4:	(bad)  
  4418f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4418f6:	inc    eax
  4418f7:	sbb    al,0xb5
  4418f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4418fa:	add    BYTE PTR [eax+0x14],bh
  4418fd:	in     al,dx
  4418fe:	cmp    DWORD PTR [edi+0x45],esp
  441901:	mov    BYTE PTR [ecx],bh
  441903:	into   
  441904:	inc    esi
  441905:	mov    bh,0x3a
  441907:	push   ss
  441908:	xor    eax,0x36a43ae7
  44190d:	xchg   ecx,eax
  44190e:	cmp    bh,BYTE PTR [ecx]
  441910:	adc    DWORD PTR es:[ecx+esi*2],edi
  441914:	daa    
  441915:	pop    ecx
  441916:	cmp    esi,DWORD PTR [ecx-0x60c46ae9]
  44191c:	pop    ss
  44191d:	cmp    DWORD PTR [ebx],0xffffff85
  441920:	add    BYTE PTR [eax],al
  441922:	inc    edi
  441923:	cmp    DWORD PTR [ebx],0xde475b
  441929:	jmp    0xa3b823a
  44192e:	sub    ebx,esi
  441930:	add    BYTE PTR [edx+0x1d],bl
  441933:	retf   0x1232
  441936:	sbb    eax,0x298d2de9
  44193b:	xor    DWORD PTR ds:0x3ab7150a,ebp
  441941:	jb     0x44198a
  441943:	push   esi
  441944:	xor    al,0x1b
  441946:	cmp    BYTE PTR [ebp+0x693ce935],ah
  44194c:	test   DWORD PTR [ecx-0x6fff21d4],0xb732291e
  441956:	xor    BYTE PTR [ebp+0x2c],bl
  441959:	ja     0x441970
  44195b:	mov    esp,0xe919c43b
  441960:	xor    eax,0x37be43cd
  441965:	or     eax,0xd37b63c
  44196a:	cmp    al,0xae
  44196c:	aaa    
  44196d:	sbb    eax,0xd37a63c
  441972:	sbb    al,0x1e
  441974:	cmp    BYTE PTR [eax],al
  441976:	adc    cl,bl
  441978:	dec    eax
  441979:	aas    
  44197a:	or     cl,bl
  44197c:	push   eax
  44197d:	aas    
  44197e:	adc    cl,bl
  441980:	pop    eax
  441981:	aas    
  441982:	cmp    dl,cl
  441984:	pusha  
  441985:	aas    
  441986:	add    BYTE PTR [eax],al
  441988:	xor    dl,cl
  44198a:	push   0x70d12a3f
  44198f:	aas    
  441990:	xor    dl,cl
  441992:	js     0x4419d3
  441994:	cmp    dl,cl
  441996:	cmp    BYTE PTR [edi],0x92
  441999:	ror    DWORD PTR [eax-0x6f2e75c1],1
  44199f:	aas    
  4419a0:	push   edx
  4419a1:	rcr    DWORD PTR [eax-0x5f2e85c1],1
  4419a7:	aas    
  4419a8:	mov    dl,0xd1
  4419aa:	add    BYTE PTR [eax],al
  4419ac:	(bad)  
  4419ad:	mov    eax,ds:0xe19efff4
  4419b2:	add    BYTE PTR [eax],al
  4419b4:	ror    dl,0x3d
  4419b7:	xor    DWORD PTR [edx+ecx*8-0x3523cea6],esp
  4419be:	jp     0x4419f1
  4419c0:	push   esi
  4419c1:	retf   
  4419c2:	xchg   esp,eax
  4419c3:	xor    DWORD PTR [edi+0x6631bfcb],ebp
  4419c9:	retf   
  4419ca:	aam    0x31
  4419cc:	ds retf 
  4419ce:	hlt    
  4419cf:	xor    DWORD PTR [eax+0x71320ecb],ecx
  4419d5:	retf   
  4419d6:	aaa    
  4419d7:	xor    bh,BYTE PTR [eax-0x4fcdb135]
  4419dd:	retf   
  4419de:	outs   dx,BYTE PTR ds:[esi]
  4419df:	xor    cl,BYTE PTR [edx]
  4419e1:	int3   
  4419e2:	cwde   
  4419e3:	xor    dh,bl
  4419e5:	retf   
  4419e6:	ret    
  4419e7:	xor    ah,BYTE PTR [ebx+ecx*8+0x32da]
  4419ee:	jl     0x4419bb
  4419f0:	cli    
  4419f1:	xor    ch,BYTE PTR [edi]
  4419f3:	addr16 push cs
  4419f5:	sbb    al,0xfc
  4419f7:	fisttp QWORD PTR [edi]
  4419f9:	dec    ebp
  4419fa:	cld    
  4419fb:	adc    DWORD PTR [eax],edx
  4419fd:	outs   dx,DWORD PTR ds:[esi]
  4419fe:	cld    
  4419ff:	mov    eax,ds:0xd8fc9f0f
  441a04:	adc    ecx,DWORD PTR [eax-0x34c8898]
  441a0a:	and    BYTE PTR [ebx-0x77d0fffd],dl
  441a10:	or     al,0xc9
  441a12:	pop    esi
  441a13:	push   edi
  441a14:	or     al,0x62
  441a16:	cmp    eax,0x3c100ecb
  441a1b:	cdq    
  441a1c:	push   cs
  441a1d:	dec    ebp
  441a1e:	aaa    
  441a1f:	fiadd  DWORD PTR [ecx+esi*2]
  441a22:	aaa    
  441a23:	dec    BYTE PTR [ebx]
  441a25:	jo     0x441a4b
  441a27:	push   0x6
  441a29:	add    BYTE PTR [edi],ch
  441a2b:	ja     0x441a10
  441a2d:	cld    
  441a2e:	fdivr  DWORD PTR [esi+0x2b2ffffc]
  441a34:	or     al,0xb7
  441a36:	(bad)  
  441a37:	mov    ecx,0xc7fb750c
  441a3c:	subps  xmm0,XMMWORD PTR [edx]
  441a3f:	neg    DWORD PTR [eax]
  441a41:	sbb    eax,0x49196bf9
  441a46:	popa   
  441a47:	and    eax,0xed59bc19
  441a4c:	or     edx,DWORD PTR [ebx-0x53f41ba9]
  441a52:	add    BYTE PTR [eax],al
  441a54:	push   edi
  441a55:	outs   dx,BYTE PTR ds:[esi]
  441a56:	push   es
  441a57:	xchg   ecx,eax
  441a58:	inc    esp
  441a59:	sbb    BYTE PTR [edi],al
  441a5b:	mov    esi,0xd9080a44
  441a60:	cmp    ecx,DWORD PTR [esi+0x77303312]
  441a66:	sar    esp,cl
  441a68:	push   0x2f0003a2
  441a6d:	fisubr WORD PTR [eax]
  441a6f:	adc    al,0xf7
  441a71:	scas   al,BYTE PTR es:[edi]
  441a72:	dec    ecx
  441a73:	adc    edx,edi
  441a75:	scas   al,BYTE PTR es:[edi]
  441a76:	aad    0x13
  441a78:	inc    ecx
  441a79:	scas   al,BYTE PTR es:[edi]
  441a7a:	(bad)  
  441a7b:	push   ss
  441a7c:	sub    DWORD PTR [edi-0x5098e955],0xffffffa7
  441a83:	push   ss
  441a84:	pop    ebx
  441a85:	scas   eax,DWORD PTR es:[edi]
  441a86:	xchg   edx,eax
  441a87:	push   ss
  441a88:	or     DWORD PTR [ecx-0x4ee0e940],esi
  441a8e:	xchg   esi,eax
  441a8f:	push   ss
  441a90:	adc    eax,0x2414dcb1
  441a95:	scas   eax,DWORD PTR es:[edi]
  441a96:	hlt    
  441a97:	adc    al,0x24
  441a99:	scas   eax,DWORD PTR es:[edi]
  441a9a:	rcl    BYTE PTR [ecx+edx*2],0xaf
  441a9e:	mov    dh,0x14
  441aa0:	xor    al,0xaf
  441aa2:	push   ds
  441aa3:	adc    eax,0x1512af5f
  441aa8:	push   eax
  441aa9:	scas   eax,DWORD PTR es:[edi]
  441aaa:	not    DWORD PTR [ebx+ebx*2]
  441aad:	scas   eax,DWORD PTR es:[edi]
  441aae:	ficom  WORD PTR [ebp*4+0x1b1812af]
  441ab5:	stos   BYTE PTR es:[edi],al
  441ab6:	inc    esi
  441ab7:	sbb    BYTE PTR [eax],al
  441ab9:	add    BYTE PTR [edx+ebp*4-0x565ee8a4],bh
  441ac0:	dec    esi
  441ac1:	pop    ss
  441ac2:	ret    
  441ac3:	test   eax,0xac2419dd
  441ac8:	xchg   ebx,eax
  441ac9:	sbb    DWORD PTR [ebx-0x6ce5b654],ecx
  441acf:	lods   al,BYTE PTR ds:[esi]
  441ad0:	sbb    DWORD PTR [edx],ebx
  441ad2:	fwait
  441ad3:	lods   al,BYTE PTR ds:[esi]
  441ad4:	jmp    0xf9ef3df1
  441ad9:	sbb    BYTE PTR [ebx],ch
  441adb:	stos   DWORD PTR es:[edi],eax
  441adc:	leave  
  441add:	sbb    BYTE PTR [ebx-0x55],dl
  441ae0:	mov    ecx,0xa9ab3b18
  441ae5:	sbb    bl,ah
  441ae7:	stos   BYTE PTR es:[edi],al
  441ae8:	add    BYTE PTR [ecx-0x76cffdb9],bl
  441aee:	inc    edi
  441aef:	repnz das 
  441af1:	pop    ecx
  441af2:	ss loop 0x441b24
  441af5:	imul   esi,DWORD PTR [edi],0x27792f52
  441afb:	inc    edx
  441afc:	das    
  441afd:	mov    DWORD PTR [edi],esp
  441aff:	xor    ch,BYTE PTR [edi]
  441b01:	jns    0x441b1a
  441b03:	and    ch,BYTE PTR [edi]
  441b05:	test   eax,0x992f9217
  441b0a:	inc    edi
  441b0b:	sub    BYTE PTR [edi],0xc9
  441b0e:	inc    edi
  441b0f:	jb     0x441b40
  441b11:	cdq    
  441b12:	aaa    
  441b13:	fiadd  WORD PTR [eax]
  441b15:	jmp    0xb63b7d86
  441b1a:	sub    al,0xde
  441b1c:	add    cl,ch
  441b1e:	add    BYTE PTR [eax],al
  441b20:	sbb    al,0xda
  441b22:	xor    ch,bl
  441b24:	sbb    al,0xc6
  441b26:	xor    ch,cl
  441b28:	sbb    al,0xf2
  441b2a:	xor    esi,ebp
  441b2c:	inc    ebx
  441b2d:	push   edx
  441b2e:	xor    ecx,DWORD PTR [ebp+0x3b]
  441b31:	xor    dh,BYTE PTR [ebx]
  441b33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441b34:	inc    ebx
  441b35:	xchg   edx,eax
  441b36:	xor    edi,DWORD PTR ds:0x5533723b
  441b3c:	and    edx,edx
  441b3e:	sub    al,0xed
  441b40:	sbb    BYTE PTR [edx+0x1217052c],dh
  441b46:	sub    eax,0x2cf2189d
  441b4b:	mov    ch,0x40
  441b4d:	push   edx
  441b4e:	sub    al,0x4d
  441b50:	cmp    BYTE PTR [edx],dh
  441b52:	sub    al,0x65
  441b54:	inc    eax
  441b55:	xchg   edx,eax
  441b56:	sub    al,0x3d
  441b58:	cmp    BYTE PTR [edx+0x2c],dh
  441b5b:	adc    eax,0xed2dd220
  441b60:	sbb    DWORD PTR [edx-0x348dffd3],esi
  441b66:	inc    esp
  441b67:	xor    eax,0x3564cb92
  441b6c:	loop   0x441b39
  441b6e:	test   BYTE PTR ds:0x35a4cbf2,dh
  441b74:	xchg   edx,eax
  441b75:	(bad)  
  441b76:	les    esi,FWORD PTR ds:0x35e4c492
  441b7c:	(bad)  
  441b7d:	les    eax,FWORD PTR [esi+esi*1]
  441b80:	push   edx
  441b81:	enter  0x3624,0x0
  441b85:	add    BYTE PTR [edx],dh
  441b87:	int3   
  441b88:	inc    esp
  441b89:	ss adc cl,ah
  441b8c:	fs ss (bad) 
  441b8f:	enter  0x3684,0x72
  441b93:	enter  0x36a4,0x92
  441b97:	enter  0x36c4,0xd2
  441b9b:	enter  0x36e4,0xa2
  441b9f:	enter  0x3704,0x12
  441ba3:	leave  
  441ba4:	sub    BYTE PTR [edi],dh
  441ba6:	loop   0x441b70
  441ba8:	xor    BYTE PTR [edi],dh
  441baa:	mov    edx,0xa23738c8
  441baf:	enter  0x3740,0xa
  441bb3:	leave  
  441bb4:	dec    eax
  441bb5:	aaa    
  441bb6:	mov    ds:0x9a3750c8,al
  441bbb:	enter  0x3758,0x82
  441bbf:	enter  0x3760,0xea
  441bc3:	enter  0x3768,0xe2
  441bc7:	enter  0x3770,0x7a
  441bcb:	enter  0x3778,0xe2
  441bcf:	enter  0x3780,0xa
  441bd3:	leave  
  441bd4:	mov    BYTE PTR [edi],dh
  441bd6:	and    cl,cl
  441bd8:	nop
  441bd9:	aaa    
  441bda:	sbb    cl,cl
  441bdc:	cwde   
  441bdd:	aaa    
  441bde:	das    
  441bdf:	pop    ss
  441be0:	adc    BYTE PTR [eax+edi*1+0x40ac101f],ah
  441be7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441be8:	lfs    eax,FWORD PTR [eax]
  441beb:	add    BYTE PTR [eax],bh
  441bed:	pop    ds
  441bee:	adc    BYTE PTR [eax+eiz*1+0x18c40fb7],bh
  441bf5:	mov    edi,0x7720cc0f
  441bfa:	add    eax,DWORD PTR [eax]
  441bfc:	das    
  441bfd:	ja     0x441c02
  441bff:	add    BYTE PTR [edi],ch
  441c01:	ja     0x441c06
  441c03:	add    BYTE PTR [edi],ch
  441c05:	ja     0x441c0a
  441c07:	add    BYTE PTR [edi],ch
  441c09:	ja     0x441c0e
  441c0b:	add    BYTE PTR [edi],ch
  441c0d:	ja     0x441c12
  441c0f:	add    BYTE PTR [edi],ch
  441c11:	ja     0x441c16
  441c13:	add    BYTE PTR [edi],ch
  441c15:	ja     0x441c1a
  441c17:	add    BYTE PTR [edi],ch
  441c19:	ja     0x441c1e
  441c1b:	add    BYTE PTR [edi],ch
  441c1d:	ja     0x441c22
  441c1f:	add    BYTE PTR [edi],ch
  441c21:	ja     0x441c26
  441c23:	add    BYTE PTR [edi],ch
  441c25:	ja     0x441c2a
  441c27:	add    BYTE PTR [edi],ch
  441c29:	ja     0x441c2e
  441c2b:	add    BYTE PTR [edi],ch
  441c2d:	ja     0x441c32
  441c2f:	add    BYTE PTR [edi],ch
  441c31:	ja     0x441c36
  441c33:	add    BYTE PTR [edi],ch
  441c35:	ja     0x441c3a
  441c37:	add    BYTE PTR [edi],ch
  441c39:	ja     0x441c3e
  441c3b:	add    BYTE PTR [edi],ch
  441c3d:	ja     0x441c42
  441c3f:	add    BYTE PTR [edi],ch
  441c41:	ja     0x441c46
  441c43:	add    BYTE PTR [edi],ch
  441c45:	ja     0x441c4a
  441c47:	add    BYTE PTR [edi],ch
  441c49:	ja     0x441c4e
  441c4b:	add    BYTE PTR [edi],ch
  441c4d:	ja     0x441c52
  441c4f:	add    BYTE PTR [eax],al
  441c51:	add    BYTE PTR [edi],ch
  441c53:	ja     0x441c58
  441c55:	add    BYTE PTR [edi],ch
  441c57:	ja     0x441c5c
  441c59:	add    BYTE PTR [edi],ch
  441c5b:	fsubp  st(1),st
  441c5d:	add    ebp,DWORD PTR [edi]
  441c5f:	fsubp  st(1),st
  441c61:	add    ebp,DWORD PTR [edi]
  441c63:	fsubp  st(1),st
  441c65:	add    ebp,DWORD PTR [edi]
  441c67:	fsubp  st(1),st
  441c69:	add    ebp,DWORD PTR [edi]
  441c6b:	fsubp  st(1),st
  441c6d:	add    ebp,DWORD PTR [edi]
  441c6f:	fsubp  st(1),st
  441c71:	add    ebp,DWORD PTR [edi]
  441c73:	fsubp  st(1),st
  441c75:	add    ebp,DWORD PTR [edi]
  441c77:	fsubp  st(1),st
  441c79:	add    ebp,DWORD PTR [edi]
  441c7b:	fsubp  st(1),st
  441c7d:	add    ebp,DWORD PTR [edi]
  441c7f:	fsubp  st(1),st
  441c81:	add    ebp,DWORD PTR [edi]
  441c83:	fsubp  st(1),st
  441c85:	add    ebp,DWORD PTR [edi]
  441c87:	fsubp  st(1),st
  441c89:	add    ebp,DWORD PTR [edi]
  441c8b:	fsubp  st(1),st
  441c8d:	add    ebp,DWORD PTR [edi]
  441c8f:	fsubp  st(1),st
  441c91:	add    ebp,DWORD PTR [edi]
  441c93:	fsubp  st(1),st
  441c95:	add    ebp,DWORD PTR [edi]
  441c97:	fsubp  st(1),st
  441c99:	add    ebp,DWORD PTR [edi]
  441c9b:	fsubp  st(1),st
  441c9d:	add    ebp,DWORD PTR [edi]
  441c9f:	fsubp  st(1),st
  441ca1:	add    ebp,DWORD PTR [edi]
  441ca3:	fsubp  st(1),st
  441ca5:	add    ebp,DWORD PTR [edi]
  441ca7:	fsubp  st(1),st
  441ca9:	add    ebp,DWORD PTR [edi]
  441cab:	fsubp  st(1),st
  441cad:	add    ebp,DWORD PTR [edi]
  441caf:	fsubp  st(1),st
  441cb1:	add    ebp,DWORD PTR [edi]
  441cb3:	fsubp  st(1),st
  441cb5:	add    eax,DWORD PTR [eax]
  441cb7:	add    BYTE PTR [edi],ch
  441cb9:	fsubp  st(1),st
  441cbb:	add    ebp,DWORD PTR [edi]
  441cbd:	fsubp  st(1),st
  441cbf:	add    ebp,DWORD PTR [edi]
  441cc1:	fsubp  st(1),st
  441cc3:	add    ebp,DWORD PTR [edi]
  441cc5:	fsubp  st(1),st
  441cc7:	add    ebp,DWORD PTR [edi]
  441cc9:	fsubp  st(1),st
  441ccb:	add    ebp,DWORD PTR [edi]
  441ccd:	fsubp  st(1),st
  441ccf:	add    ebp,DWORD PTR [edi]
  441cd1:	fsubp  st(1),st
  441cd3:	add    ebp,DWORD PTR [edi]
  441cd5:	fiadd  WORD PTR [eax]
  441cd7:	jmp    0xe944fb08
  441cdc:	sub    al,0xde
  441cde:	add    cl,ch
  441ce0:	sub    al,0xde
  441ce2:	add    cl,ch
  441ce4:	sub    al,0xde
  441ce6:	add    cl,ch
  441ce8:	sub    al,0xde
  441cea:	add    cl,ch
  441cec:	sub    al,0xde
  441cee:	add    cl,ch
  441cf0:	sub    al,0xde
  441cf2:	add    cl,ch
  441cf4:	sub    al,0xde
  441cf6:	add    cl,ch
  441cf8:	sub    al,0xde
  441cfa:	add    cl,ch
  441cfc:	sub    al,0xde
  441cfe:	add    cl,ch
  441d00:	sub    al,0xde
  441d02:	add    cl,ch
  441d04:	sub    al,0xde
  441d06:	add    cl,ch
  441d08:	sub    al,0xde
  441d0a:	add    cl,ch
  441d0c:	sub    al,0xde
  441d0e:	add    cl,ch
  441d10:	sub    al,0xde
  441d12:	add    cl,ch
  441d14:	sub    al,0xde
  441d16:	add    cl,ch
  441d18:	sub    al,0xde
  441d1a:	add    cl,ch
  441d1c:	add    BYTE PTR [eax],al
  441d1e:	sub    al,0xde
  441d20:	add    cl,ch
  441d22:	sub    al,0xde
  441d24:	add    cl,ch
  441d26:	sub    al,0xde
  441d28:	add    cl,ch
  441d2a:	sub    al,0xde
  441d2c:	add    cl,ch
  441d2e:	sub    al,0xde
  441d30:	add    cl,ch
  441d32:	sub    al,0xde
  441d34:	add    cl,ch
  441d36:	sub    al,0xde
  441d38:	add    cl,ch
  441d3a:	sub    al,0xde
  441d3c:	add    cl,ch
  441d3e:	sub    al,0xde
  441d40:	add    cl,ch
  441d42:	sub    al,0xde
  441d44:	add    cl,ch
  441d46:	sub    al,0xde
  441d48:	add    cl,ch
  441d4a:	sub    al,0xde
  441d4c:	add    cl,ch
  441d4e:	sub    al,0xde
  441d50:	add    BYTE PTR [eax],al
  441d52:	(bad)  
  441d53:	fiadd  DWORD PTR [eax]
  441d55:	add    BYTE PTR [esi-0x69ffff26],dl
  441d5b:	fiadd  DWORD PTR [eax]
  441d5d:	add    BYTE PTR [esi-0x79ffff26],al
  441d63:	fiadd  DWORD PTR [eax]
  441d65:	add    BYTE PTR [esi-0x69ffff26],dl
  441d6b:	fiadd  DWORD PTR [eax]
  441d6d:	add    BYTE PTR [esi-0x79ffff26],al
  441d73:	fiadd  DWORD PTR [eax]
  441d75:	add    BYTE PTR [esi-0x26],dl
  441d78:	add    BYTE PTR [eax],al
  441d7a:	push   esi
  441d7b:	fiadd  DWORD PTR [eax]
  441d7d:	add    BYTE PTR [esi-0x26],al
  441d80:	add    BYTE PTR [eax],al
  441d82:	add    BYTE PTR [eax],al
  441d84:	inc    esi
  441d85:	fiadd  DWORD PTR [eax]
  441d87:	add    BYTE PTR [esi-0x26],dl
  441d8a:	add    BYTE PTR [eax],al
  441d8c:	push   esi
  441d8d:	fiadd  DWORD PTR [eax]
  441d8f:	add    BYTE PTR [esi-0x26],al
  441d92:	add    BYTE PTR [eax],al
  441d94:	inc    esi
  441d95:	fiadd  DWORD PTR [eax]
  441d97:	add    BYTE PTR [esi],dl
  441d99:	loop   0x441d9b
  441d9b:	add    BYTE PTR [esi],dl
  441d9d:	loop   0x441d9f
  441d9f:	add    BYTE PTR [esi],al
  441da1:	loop   0x441da3
  441da3:	add    BYTE PTR [esi],al
  441da5:	loop   0x441da7
  441da7:	add    BYTE PTR [esi],dl
  441da9:	loop   0x441dab
  441dab:	add    BYTE PTR [esi],dl
  441dad:	loop   0x441daf
  441daf:	add    BYTE PTR [esi],al
  441db1:	loop   0x441db3
  441db3:	add    BYTE PTR [esi],al
  441db5:	loop   0x441db7
  441db7:	add    dh,dl
  441db9:	loope  0x441dbb
  441dbb:	add    dh,dl
  441dbd:	loope  0x441dbf
  441dbf:	add    dh,al
  441dc1:	loope  0x441dc3
  441dc3:	add    dh,al
  441dc5:	loope  0x441dc7
  441dc7:	add    dh,dl
  441dc9:	loope  0x441dcb
  441dcb:	add    BYTE PTR [edi],ch
  441dcd:	inc    edi
  441dce:	add    eax,DWORD PTR [eax]
  441dd0:	das    
  441dd1:	inc    edi
  441dd2:	add    eax,DWORD PTR [eax]
  441dd4:	das    
  441dd5:	inc    edi
  441dd6:	add    eax,DWORD PTR [eax]
  441dd8:	das    
  441dd9:	inc    edi
  441dda:	add    eax,DWORD PTR [eax]
  441ddc:	das    
  441ddd:	inc    edi
  441dde:	add    eax,DWORD PTR [eax]
  441de0:	das    
  441de1:	inc    edi
  441de2:	add    eax,DWORD PTR [eax]
  441de4:	das    
  441de5:	inc    edi
  441de6:	add    eax,DWORD PTR [eax]
  441de8:	add    BYTE PTR [eax],al
  441dea:	das    
  441deb:	inc    edi
  441dec:	add    eax,DWORD PTR [eax]
  441dee:	das    
  441def:	inc    edi
  441df0:	add    eax,DWORD PTR [eax]
  441df2:	das    
  441df3:	inc    edi
  441df4:	add    eax,DWORD PTR [eax]
  441df6:	das    
  441df7:	inc    edi
  441df8:	add    eax,DWORD PTR [eax]
  441dfa:	das    
  441dfb:	inc    edi
  441dfc:	add    eax,DWORD PTR [eax]
  441dfe:	das    
  441dff:	inc    edi
  441e00:	add    eax,DWORD PTR [eax]
  441e02:	das    
  441e03:	inc    edi
  441e04:	add    eax,DWORD PTR [eax]
  441e06:	das    
  441e07:	inc    edi
  441e08:	add    eax,DWORD PTR [eax]
  441e0a:	das    
  441e0b:	inc    edi
  441e0c:	add    eax,DWORD PTR [eax]
  441e0e:	das    
  441e0f:	inc    edi
  441e10:	add    eax,DWORD PTR [eax]
  441e12:	das    
  441e13:	inc    edi
  441e14:	add    eax,DWORD PTR [eax]
  441e16:	das    
  441e17:	inc    edi
  441e18:	add    eax,DWORD PTR [eax]
  441e1a:	das    
  441e1b:	inc    edi
  441e1c:	add    eax,DWORD PTR [eax]
  441e1e:	das    
  441e1f:	inc    edi
  441e20:	add    eax,DWORD PTR [eax]
  441e22:	das    
  441e23:	inc    edi
  441e24:	add    eax,DWORD PTR [eax]
  441e26:	das    
  441e27:	inc    edi
  441e28:	add    eax,DWORD PTR [eax]
  441e2a:	das    
  441e2b:	inc    edi
  441e2c:	add    eax,DWORD PTR [eax]
  441e2e:	das    
  441e2f:	inc    edi
  441e30:	add    eax,DWORD PTR [eax]
  441e32:	das    
  441e33:	inc    edi
  441e34:	add    eax,DWORD PTR [eax]
  441e36:	das    
  441e37:	inc    edi
  441e38:	add    eax,DWORD PTR [eax]
  441e3a:	das    
  441e3b:	inc    edi
  441e3c:	add    eax,DWORD PTR [eax]
  441e3e:	das    
  441e3f:	inc    edi
  441e40:	add    eax,DWORD PTR [eax]
  441e42:	das    
  441e43:	inc    edi
  441e44:	add    eax,DWORD PTR [eax]
  441e46:	das    
  441e47:	fsubp  st(1),st
  441e49:	add    ebp,DWORD PTR [edi]
  441e4b:	fsubp  st(1),st
  441e4d:	add    eax,DWORD PTR [eax]
  441e4f:	add    BYTE PTR [edi],ch
  441e51:	fsubp  st(1),st
  441e53:	add    ebp,DWORD PTR [edi]
  441e55:	fsubp  st(1),st
  441e57:	add    ebp,DWORD PTR [edi]
  441e59:	fsubp  st(1),st
  441e5b:	add    ebp,DWORD PTR [edi]
  441e5d:	fsubp  st(1),st
  441e5f:	add    ebp,DWORD PTR [edi]
  441e61:	fsubp  st(1),st
  441e63:	add    ebp,DWORD PTR [edi]
  441e65:	fsubp  st(1),st
  441e67:	add    ebp,DWORD PTR [edi]
  441e69:	fsubp  st(1),st
  441e6b:	add    ebp,DWORD PTR [edi]
  441e6d:	fsubp  st(1),st
  441e6f:	add    ebp,DWORD PTR [edi]
  441e71:	fsubp  st(1),st
  441e73:	add    ebp,DWORD PTR [edi]
  441e75:	fsubp  st(1),st
  441e77:	add    ebp,DWORD PTR [edi]
  441e79:	fsubp  st(1),st
  441e7b:	add    ebp,DWORD PTR [edi]
  441e7d:	fsubp  st(1),st
  441e7f:	add    ebp,DWORD PTR [edi]
  441e81:	fsubp  st(1),st
  441e83:	add    ebp,DWORD PTR [edi]
  441e85:	fsubp  st(1),st
  441e87:	add    ebp,DWORD PTR [edi]
  441e89:	fsubp  st(1),st
  441e8b:	add    ebp,DWORD PTR [edi]
  441e8d:	fsubp  st(1),st
  441e8f:	add    ebp,DWORD PTR [edi]
  441e91:	fsubp  st(1),st
  441e93:	add    ebp,DWORD PTR [edi]
  441e95:	fsubp  st(1),st
  441e97:	add    ebp,DWORD PTR [edi]
  441e99:	fsubp  st(1),st
  441e9b:	add    ebp,DWORD PTR [edi]
  441e9d:	fsubp  st(1),st
  441e9f:	add    ebp,DWORD PTR [edi]
  441ea1:	fsubp  st(1),st
  441ea3:	add    ebp,DWORD PTR [edi]
  441ea5:	fsubp  st(1),st
  441ea7:	add    ebp,DWORD PTR [edi]
  441ea9:	fsubp  st(1),st
  441eab:	add    ebp,DWORD PTR [edi]
  441ead:	fsubp  st(1),st
  441eaf:	add    ebp,DWORD PTR [edi]
  441eb1:	fsubp  st(1),st
  441eb3:	add    eax,DWORD PTR [eax]
  441eb5:	add    BYTE PTR [edi],ch
  441eb7:	fsubp  st(1),st
  441eb9:	add    ebp,DWORD PTR [edi]
  441ebb:	fsubp  st(1),st
  441ebd:	add    ebp,DWORD PTR [edi]
  441ebf:	fsubp  st(1),st
  441ec1:	add    ebp,DWORD PTR [edi]
  441ec3:	fiadd  WORD PTR [eax]
  441ec5:	jmp    0xe944fcf6
  441eca:	sub    al,0xde
  441ecc:	add    cl,ch
  441ece:	sub    al,0xde
  441ed0:	add    cl,ch
  441ed2:	sub    al,0xde
  441ed4:	add    cl,ch
  441ed6:	sub    al,0xde
  441ed8:	add    cl,ch
  441eda:	sub    al,0xde
  441edc:	add    cl,ch
  441ede:	sub    al,0xde
  441ee0:	add    cl,ch
  441ee2:	sub    al,0xde
  441ee4:	add    cl,ch
  441ee6:	sub    al,0xde
  441ee8:	add    cl,ch
  441eea:	sub    al,0xde
  441eec:	add    cl,ch
  441eee:	sub    al,0xde
  441ef0:	add    cl,ch
  441ef2:	sub    al,0xde
  441ef4:	add    cl,ch
  441ef6:	sub    al,0xde
  441ef8:	add    cl,ch
  441efa:	sub    al,0xde
  441efc:	add    cl,ch
  441efe:	sub    al,0xde
  441f00:	add    cl,ch
  441f02:	sub    al,0xde
  441f04:	add    cl,ch
  441f06:	sub    al,0xde
  441f08:	add    cl,ch
  441f0a:	sub    al,0xde
  441f0c:	add    cl,ch
  441f0e:	sub    al,0xde
  441f10:	add    cl,ch
  441f12:	sub    al,0xde
  441f14:	add    cl,ch
  441f16:	sub    al,0xde
  441f18:	add    cl,ch
  441f1a:	add    BYTE PTR [eax],al
  441f1c:	sub    al,0xde
  441f1e:	add    cl,ch
  441f20:	sub    al,0xde
  441f22:	add    cl,ch
  441f24:	sub    al,0xde
  441f26:	add    cl,ch
  441f28:	sub    al,0xde
  441f2a:	add    cl,ch
  441f2c:	sub    al,0xde
  441f2e:	add    cl,ch
  441f30:	sub    al,0xde
  441f32:	add    cl,ch
  441f34:	sub    al,0xde
  441f36:	add    cl,ch
  441f38:	sub    al,0xde
  441f3a:	add    cl,ch
  441f3c:	sub    al,0xde
  441f3e:	add    BYTE PTR [eax],al
  441f40:	(bad)  
  441f41:	fiadd  WORD PTR [eax]
  441f43:	add    dh,dl
  441f45:	fiadd  WORD PTR [eax]
  441f47:	add    dh,al
  441f49:	fiadd  WORD PTR [eax]
  441f4b:	add    dh,al
  441f4d:	fiadd  WORD PTR [eax]
  441f4f:	add    dh,dl
  441f51:	fiadd  WORD PTR [eax]
  441f53:	add    dh,dl
  441f55:	fiadd  WORD PTR [eax]
  441f57:	add    dh,al
  441f59:	fiadd  WORD PTR [eax]
  441f5b:	add    dh,al
  441f5d:	fiadd  WORD PTR [eax]
  441f5f:	add    BYTE PTR [esi-0x69ffff22],dl
  441f65:	fiadd  WORD PTR [eax]
  441f67:	add    BYTE PTR [esi-0x79ffff22],al
  441f6d:	fiadd  WORD PTR [eax]
  441f6f:	add    BYTE PTR [esi-0x69ffff22],dl
  441f75:	fiadd  WORD PTR [eax]
  441f77:	add    BYTE PTR [esi-0x79ffff22],al
  441f7d:	fiadd  WORD PTR [eax]
  441f7f:	add    BYTE PTR [eax],al
  441f81:	add    BYTE PTR [esi-0x22],dl
  441f84:	add    BYTE PTR [eax],al
  441f86:	push   esi
  441f87:	fiadd  WORD PTR [eax]
  441f89:	add    BYTE PTR [esi-0x22],al
  441f8c:	add    BYTE PTR [eax],al
  441f8e:	inc    esi
  441f8f:	fiadd  WORD PTR [eax]
  441f91:	add    BYTE PTR [esi-0x22],dl
  441f94:	add    BYTE PTR [eax],al
  441f96:	push   esi
  441f97:	fiadd  WORD PTR [eax]
  441f99:	add    BYTE PTR [esi-0x22],al
  441f9c:	add    BYTE PTR [eax],al
  441f9e:	inc    esi
  441f9f:	fiadd  WORD PTR [eax]
  441fa1:	add    BYTE PTR [esi],dl
  441fa3:	fiadd  WORD PTR [eax]
  441fa5:	add    BYTE PTR [esi],dl
  441fa7:	fiadd  WORD PTR [eax]
  441fa9:	add    BYTE PTR [esi],al
  441fab:	fiadd  WORD PTR [eax]
  441fad:	add    BYTE PTR [esi],al
  441faf:	fiadd  WORD PTR [eax]
  441fb1:	add    BYTE PTR [esi],dl
  441fb3:	fiadd  WORD PTR [eax]
  441fb5:	add    BYTE PTR [esi],dl
  441fb7:	fiadd  WORD PTR [eax]
  441fb9:	add    BYTE PTR [edi],ch
  441fbb:	inc    edi
  441fbc:	add    eax,DWORD PTR [eax]
  441fbe:	das    
  441fbf:	inc    edi
  441fc0:	add    eax,DWORD PTR [eax]
  441fc2:	das    
  441fc3:	inc    edi
  441fc4:	add    eax,DWORD PTR [eax]
  441fc6:	das    
  441fc7:	inc    edi
  441fc8:	add    eax,DWORD PTR [eax]
  441fca:	das    
  441fcb:	inc    edi
  441fcc:	add    eax,DWORD PTR [eax]
  441fce:	das    
  441fcf:	inc    edi
  441fd0:	add    eax,DWORD PTR [eax]
  441fd2:	das    
  441fd3:	inc    edi
  441fd4:	add    eax,DWORD PTR [eax]
  441fd6:	das    
  441fd7:	inc    edi
  441fd8:	add    eax,DWORD PTR [eax]
  441fda:	das    
  441fdb:	inc    edi
  441fdc:	add    eax,DWORD PTR [eax]
  441fde:	das    
  441fdf:	inc    edi
  441fe0:	add    eax,DWORD PTR [eax]
  441fe2:	das    
  441fe3:	inc    edi
  441fe4:	add    eax,DWORD PTR [eax]
  441fe6:	add    BYTE PTR [eax],al
  441fe8:	das    
  441fe9:	inc    edi
  441fea:	add    eax,DWORD PTR [eax]
  441fec:	das    
  441fed:	inc    edi
  441fee:	add    eax,DWORD PTR [eax]
  441ff0:	das    
  441ff1:	inc    edi
  441ff2:	add    eax,DWORD PTR [eax]
  441ff4:	das    
  441ff5:	inc    edi
  441ff6:	add    eax,DWORD PTR [eax]
  441ff8:	das    
  441ff9:	inc    edi
  441ffa:	add    eax,DWORD PTR [eax]
  441ffc:	das    
  441ffd:	inc    edi
  441ffe:	add    eax,DWORD PTR [eax]
  442000:	das    
  442001:	inc    edi
  442002:	add    eax,DWORD PTR [eax]
  442004:	das    
  442005:	inc    edi
  442006:	add    eax,DWORD PTR [eax]
  442008:	das    
  442009:	inc    edi
  44200a:	add    eax,DWORD PTR [eax]
  44200c:	das    
  44200d:	inc    edi
  44200e:	add    eax,DWORD PTR [eax]
  442010:	das    
  442011:	inc    edi
  442012:	add    eax,DWORD PTR [eax]
  442014:	das    
  442015:	inc    edi
  442016:	add    eax,DWORD PTR [eax]
  442018:	das    
  442019:	inc    edi
  44201a:	add    eax,DWORD PTR [eax]
  44201c:	das    
  44201d:	inc    edi
  44201e:	add    eax,DWORD PTR [eax]
  442020:	das    
  442021:	inc    edi
  442022:	add    eax,DWORD PTR [eax]
  442024:	das    
  442025:	inc    edi
  442026:	add    eax,DWORD PTR [eax]
  442028:	das    
  442029:	inc    edi
  44202a:	add    eax,DWORD PTR [eax]
  44202c:	das    
  44202d:	inc    edi
  44202e:	add    eax,DWORD PTR [eax]
  442030:	das    
  442031:	inc    edi
  442032:	add    eax,DWORD PTR [eax]
  442034:	das    
  442035:	fsubp  st(1),st
  442037:	add    ebp,DWORD PTR [edi]
  442039:	fsubp  st(1),st
  44203b:	add    ebp,DWORD PTR [edi]
  44203d:	fsubp  st(1),st
  44203f:	add    ebp,DWORD PTR [edi]
  442041:	fsubp  st(1),st
  442043:	add    ebp,DWORD PTR [edi]
  442045:	fsubp  st(1),st
  442047:	add    ebp,DWORD PTR [edi]
  442049:	fsubp  st(1),st
  44204b:	add    eax,DWORD PTR [eax]
  44204d:	add    BYTE PTR [edi],ch
  44204f:	fsubp  st(1),st
  442051:	add    ebp,DWORD PTR [edi]
  442053:	fsubp  st(1),st
  442055:	add    ebp,DWORD PTR [edi]
  442057:	fsubp  st(1),st
  442059:	add    ebp,DWORD PTR [edi]
  44205b:	fsubp  st(1),st
  44205d:	add    ebp,DWORD PTR [edi]
  44205f:	fsubp  st(1),st
  442061:	add    ebp,DWORD PTR [edi]
  442063:	fsubp  st(1),st
  442065:	add    ebp,DWORD PTR [edi]
  442067:	fsubp  st(1),st
  442069:	add    ebp,DWORD PTR [edi]
  44206b:	fsubp  st(1),st
  44206d:	add    ebp,DWORD PTR [edi]
  44206f:	fsubp  st(1),st
  442071:	add    ebp,DWORD PTR [edi]
  442073:	fsubp  st(1),st
  442075:	add    ebp,DWORD PTR [edi]
  442077:	fsubp  st(1),st
  442079:	add    ebp,DWORD PTR [edi]
  44207b:	fsubp  st(1),st
  44207d:	add    ebp,DWORD PTR [edi]
  44207f:	fsubp  st(1),st
  442081:	add    ebp,DWORD PTR [edi]
  442083:	fsubp  st(1),st
  442085:	add    ebp,DWORD PTR [edi]
  442087:	fsubp  st(1),st
  442089:	add    ebp,DWORD PTR [edi]
  44208b:	fsubp  st(1),st
  44208d:	add    ebp,DWORD PTR [edi]
  44208f:	fsubp  st(1),st
  442091:	add    ebp,DWORD PTR [edi]
  442093:	fsubp  st(1),st
  442095:	add    ebp,DWORD PTR [edi]
  442097:	fsubp  st(1),st
  442099:	add    ebp,DWORD PTR [edi]
  44209b:	fsubp  st(1),st
  44209d:	add    ebp,DWORD PTR [edi]
  44209f:	fsubp  st(1),st
  4420a1:	add    ebp,DWORD PTR [edi]
  4420a3:	fsubp  st(1),st
  4420a5:	add    ebp,DWORD PTR [edi]
  4420a7:	fsubp  st(1),st
  4420a9:	add    ebp,DWORD PTR [edi]
  4420ab:	fsubp  st(1),st
  4420ad:	add    ebp,DWORD PTR [edi]
  4420af:	fiadd  WORD PTR [eax]
  4420b1:	jmp    0xde7020b6
  4420b6:	add    cl,ch
  4420b8:	sub    al,0xde
  4420ba:	add    cl,ch
  4420bc:	sub    al,0xde
  4420be:	add    cl,ch
  4420c0:	sub    al,0xde
  4420c2:	add    cl,ch
  4420c4:	sub    al,0xde
  4420c6:	add    cl,ch
  4420c8:	sub    al,0xde
  4420ca:	add    cl,ch
  4420cc:	sub    al,0xde
  4420ce:	add    cl,ch
  4420d0:	sub    al,0xde
  4420d2:	add    cl,ch
  4420d4:	sub    al,0xde
  4420d6:	add    cl,ch
  4420d8:	sub    al,0xde
  4420da:	add    cl,ch
  4420dc:	sub    al,0xde
  4420de:	add    cl,ch
  4420e0:	sub    al,0xde
  4420e2:	add    cl,ch
  4420e4:	sub    al,0xde
  4420e6:	add    cl,ch
  4420e8:	sub    al,0xde
  4420ea:	add    cl,ch
  4420ec:	sub    al,0xde
  4420ee:	add    cl,ch
  4420f0:	sub    al,0xde
  4420f2:	add    cl,ch
  4420f4:	sub    al,0xde
  4420f6:	add    cl,ch
  4420f8:	sub    al,0xde
  4420fa:	add    cl,ch
  4420fc:	sub    al,0xde
  4420fe:	add    cl,ch
  442100:	sub    al,0xde
  442102:	add    cl,ch
  442104:	sub    al,0xde
  442106:	add    cl,ch
  442108:	sub    al,0xde
  44210a:	add    cl,ch
  44210c:	sub    al,0xde
  44210e:	add    cl,ch
  442110:	sub    al,0xde
  442112:	add    cl,ch
  442114:	sub    al,0xde
  442116:	add    cl,ch
  442118:	add    BYTE PTR [eax],al
  44211a:	sub    al,0xde
  44211c:	add    cl,ch
  44211e:	sub    al,0xde
  442120:	add    cl,ch
  442122:	sub    al,0xde
  442124:	add    cl,ch
  442126:	sub    al,0xde
  442128:	add    cl,ch
  44212a:	sub    al,0xde
  44212c:	add    BYTE PTR [eax],al
  44212e:	push   ss
  44212f:	fild   DWORD PTR [eax]
  442131:	add    BYTE PTR [esi],al
  442133:	fild   DWORD PTR [eax]
  442135:	add    BYTE PTR [esi],al
  442137:	fild   DWORD PTR [eax]
  442139:	add    BYTE PTR [esi],dl
  44213b:	fild   DWORD PTR [eax]
  44213d:	add    BYTE PTR [esi],dl
  44213f:	fild   DWORD PTR [eax]
  442141:	add    BYTE PTR [esi],al
  442143:	fild   DWORD PTR [eax]
  442145:	add    BYTE PTR [esi],al
  442147:	fild   DWORD PTR [eax]
  442149:	add    dh,dl
  44214b:	fiadd  DWORD PTR [eax]
  44214d:	add    dh,dl
  44214f:	fiadd  DWORD PTR [eax]
  442151:	add    dh,al
  442153:	fiadd  DWORD PTR [eax]
  442155:	add    dh,al
  442157:	fiadd  DWORD PTR [eax]
  442159:	add    dh,dl
  44215b:	fiadd  DWORD PTR [eax]
  44215d:	add    dh,dl
  44215f:	fiadd  DWORD PTR [eax]
  442161:	add    dh,al
  442163:	fiadd  DWORD PTR [eax]
  442165:	add    dh,al
  442167:	fiadd  DWORD PTR [eax]
  442169:	add    BYTE PTR [esi-0x69ffff26],dl
  44216f:	fiadd  DWORD PTR [eax]
  442171:	add    BYTE PTR [esi-0x79ffff26],al
  442177:	fiadd  DWORD PTR [eax]
  442179:	add    BYTE PTR [esi+0xda],dl
  44217f:	add    BYTE PTR [esi-0x79ffff26],dl
  442185:	fiadd  DWORD PTR [eax]
  442187:	add    BYTE PTR [esi+0x560000da],al
  44218d:	fiadd  DWORD PTR [eax]
  44218f:	add    BYTE PTR [esi-0x26],dl
  442192:	add    BYTE PTR [eax],al
  442194:	inc    esi
  442195:	fiadd  DWORD PTR [eax]
  442197:	add    BYTE PTR [esi-0x26],al
  44219a:	add    BYTE PTR [eax],al
  44219c:	push   esi
  44219d:	fiadd  DWORD PTR [eax]
  44219f:	add    BYTE PTR [esi-0x26],dl
  4421a2:	add    BYTE PTR [eax],al
  4421a4:	inc    esi
  4421a5:	fiadd  DWORD PTR [eax]
  4421a7:	add    BYTE PTR [edi],ch
  4421a9:	inc    ebp
  4421aa:	add    eax,DWORD PTR [eax]
  4421ac:	das    
  4421ad:	inc    edi
  4421ae:	add    eax,DWORD PTR [eax]
  4421b0:	das    
  4421b1:	inc    edi
  4421b2:	add    eax,DWORD PTR [eax]
  4421b4:	das    
  4421b5:	inc    edi
  4421b6:	add    eax,DWORD PTR [eax]
  4421b8:	das    
  4421b9:	inc    edi
  4421ba:	add    eax,DWORD PTR [eax]
  4421bc:	das    
  4421bd:	inc    edi
  4421be:	add    eax,DWORD PTR [eax]
  4421c0:	das    
  4421c1:	inc    edi
  4421c2:	add    eax,DWORD PTR [eax]
  4421c4:	das    
  4421c5:	inc    edi
  4421c6:	add    eax,DWORD PTR [eax]
  4421c8:	das    
  4421c9:	inc    edi
  4421ca:	add    eax,DWORD PTR [eax]
  4421cc:	das    
  4421cd:	inc    edi
  4421ce:	add    eax,DWORD PTR [eax]
  4421d0:	das    
  4421d1:	inc    edi
  4421d2:	add    eax,DWORD PTR [eax]
  4421d4:	das    
  4421d5:	inc    edi
  4421d6:	add    eax,DWORD PTR [eax]
  4421d8:	das    
  4421d9:	inc    edi
  4421da:	add    eax,DWORD PTR [eax]
  4421dc:	das    
  4421dd:	inc    edi
  4421de:	add    eax,DWORD PTR [eax]
  4421e0:	das    
  4421e1:	inc    edi
  4421e2:	add    eax,DWORD PTR [eax]
  4421e4:	add    BYTE PTR [eax],al
  4421e6:	das    
  4421e7:	inc    edi
  4421e8:	add    eax,DWORD PTR [eax]
  4421ea:	das    
  4421eb:	inc    edi
  4421ec:	add    eax,DWORD PTR [eax]
  4421ee:	das    
  4421ef:	inc    edi
  4421f0:	add    eax,DWORD PTR [eax]
  4421f2:	das    
  4421f3:	inc    edi
  4421f4:	add    eax,DWORD PTR [eax]
  4421f6:	das    
  4421f7:	inc    edi
  4421f8:	add    eax,DWORD PTR [eax]
  4421fa:	das    
  4421fb:	inc    edi
  4421fc:	add    eax,DWORD PTR [eax]
  4421fe:	das    
  4421ff:	inc    edi
  442200:	add    eax,DWORD PTR [eax]
  442202:	das    
  442203:	inc    edi
  442204:	add    eax,DWORD PTR [eax]
  442206:	das    
  442207:	inc    edi
  442208:	add    eax,DWORD PTR [eax]
  44220a:	das    
  44220b:	inc    edi
  44220c:	add    eax,DWORD PTR [eax]
  44220e:	das    
  44220f:	inc    edi
  442210:	add    eax,DWORD PTR [eax]
  442212:	das    
  442213:	inc    edi
  442214:	add    eax,DWORD PTR [eax]
  442216:	das    
  442217:	inc    edi
  442218:	add    eax,DWORD PTR [eax]
  44221a:	das    
  44221b:	inc    edi
  44221c:	add    eax,DWORD PTR [eax]
  44221e:	das    
  44221f:	inc    edi
  442220:	add    eax,DWORD PTR [eax]
  442222:	das    
  442223:	fsubp  st(1),st
  442225:	add    ebp,DWORD PTR [edi]
  442227:	fsubp  st(1),st
  442229:	add    ebp,DWORD PTR [edi]
  44222b:	fsubp  st(1),st
  44222d:	add    ebp,DWORD PTR [edi]
  44222f:	fsubp  st(1),st
  442231:	add    ebp,DWORD PTR [edi]
  442233:	fsubp  st(1),st
  442235:	add    ebp,DWORD PTR [edi]
  442237:	fsubp  st(1),st
  442239:	add    ebp,DWORD PTR [edi]
  44223b:	fsubp  st(1),st
  44223d:	add    ebp,DWORD PTR [edi]
  44223f:	fsubp  st(1),st
  442241:	add    ebp,DWORD PTR [edi]
  442243:	fsubp  st(1),st
  442245:	add    ebp,DWORD PTR [edi]
  442247:	fsubp  st(1),st
  442249:	add    eax,DWORD PTR [eax]
  44224b:	add    BYTE PTR [edi],ch
  44224d:	fsubp  st(1),st
  44224f:	add    ebp,DWORD PTR [edi]
  442251:	fsubp  st(1),st
  442253:	add    ebp,DWORD PTR [edi]
  442255:	fsubp  st(1),st
  442257:	add    ebp,DWORD PTR [edi]
  442259:	fsubp  st(1),st
  44225b:	add    ebp,DWORD PTR [edi]
  44225d:	fsubp  st(1),st
  44225f:	add    ebp,DWORD PTR [edi]
  442261:	fsubp  st(1),st
  442263:	add    ebp,DWORD PTR [edi]
  442265:	fsubp  st(1),st
  442267:	add    ebp,DWORD PTR [edi]
  442269:	fsubp  st(1),st
  44226b:	add    ebp,DWORD PTR [edi]
  44226d:	fsubp  st(1),st
  44226f:	add    ebp,DWORD PTR [edi]
  442271:	fsubp  st(1),st
  442273:	add    ebp,DWORD PTR [edi]
  442275:	fsubp  st(1),st
  442277:	add    ebp,DWORD PTR [edi]
  442279:	fsubp  st(1),st
  44227b:	add    ebp,DWORD PTR [edi]
  44227d:	fsubp  st(1),st
  44227f:	add    ebp,DWORD PTR [edi]
  442281:	fsubp  st(1),st
  442283:	add    ebp,DWORD PTR [edi]
  442285:	fsubp  st(1),st
  442287:	add    ebp,DWORD PTR [edi]
  442289:	fsubp  st(1),st
  44228b:	add    ebp,DWORD PTR [edi]
  44228d:	fsubp  st(1),st
  44228f:	add    ebp,DWORD PTR [edi]
  442291:	fsubp  st(1),st
  442293:	add    ebp,DWORD PTR [edi]
  442295:	fsubp  st(1),st
  442297:	add    ebp,DWORD PTR [edi]
  442299:	fsubp  st(1),st
  44229b:	add    ebp,DWORD PTR [edi]
  44229d:	fiadd  WORD PTR [eax]
  44229f:	jmp    0xe94500d0
  4422a4:	sub    al,0xde
  4422a6:	add    cl,ch
  4422a8:	sub    al,0xde
  4422aa:	add    cl,ch
  4422ac:	sub    al,0xde
  4422ae:	add    cl,ch
  4422b0:	add    BYTE PTR [eax],al
  4422b2:	sub    al,0xde
  4422b4:	add    cl,ch
  4422b6:	sub    al,0xde
  4422b8:	add    cl,ch
  4422ba:	sub    al,0xde
  4422bc:	add    cl,ch
  4422be:	sub    al,0xde
  4422c0:	add    cl,ch
  4422c2:	sub    al,0xde
  4422c4:	add    cl,ch
  4422c6:	sub    al,0xde
  4422c8:	add    cl,ch
  4422ca:	sub    al,0xde
  4422cc:	add    cl,ch
  4422ce:	sub    al,0xde
  4422d0:	add    cl,ch
  4422d2:	sub    al,0xde
  4422d4:	add    cl,ch
  4422d6:	sub    al,0xde
  4422d8:	add    cl,ch
  4422da:	sub    al,0xde
  4422dc:	add    cl,ch
  4422de:	sub    al,0xde
  4422e0:	add    cl,ch
  4422e2:	sub    al,0xde
  4422e4:	add    cl,ch
  4422e6:	sub    al,0xde
  4422e8:	add    cl,ch
  4422ea:	sub    al,0xde
  4422ec:	add    cl,ch
  4422ee:	sub    al,0xde
  4422f0:	add    cl,ch
  4422f2:	sub    al,0xde
  4422f4:	add    cl,ch
  4422f6:	sub    al,0xde
  4422f8:	add    cl,ch
  4422fa:	sub    al,0xde
  4422fc:	add    cl,ch
  4422fe:	sub    al,0xde
  442300:	add    cl,ch
  442302:	sub    al,0xde
  442304:	add    cl,ch
  442306:	sub    al,0xde
  442308:	add    cl,ch
  44230a:	sub    al,0xde
  44230c:	add    cl,ch
  44230e:	sub    al,0xde
  442310:	add    cl,ch
  442312:	sub    al,0xde
  442314:	add    cl,ch
  442316:	add    BYTE PTR [eax],al
  442318:	sub    al,0xde
  44231a:	add    BYTE PTR [eax],al
  44231c:	inc    esi
  44231d:	fild   WORD PTR [eax]
  44231f:	add    BYTE PTR [esi-0x21],al
  442322:	add    BYTE PTR [eax],al
  442324:	push   esi
  442325:	fild   WORD PTR [eax]
  442327:	add    BYTE PTR [esi-0x21],dl
  44232a:	add    BYTE PTR [eax],al
  44232c:	inc    esi
  44232d:	fild   WORD PTR [eax]
  44232f:	add    BYTE PTR [esi-0x21],al
  442332:	add    BYTE PTR [eax],al
  442334:	push   ss
  442335:	fild   WORD PTR [eax]
  442337:	add    BYTE PTR [esi],dl
  442339:	fild   WORD PTR [eax]
  44233b:	add    BYTE PTR [esi],al
  44233d:	fild   WORD PTR [eax]
  44233f:	add    BYTE PTR [esi],al
  442341:	fild   WORD PTR [eax]
  442343:	add    BYTE PTR [esi],dl
  442345:	fild   WORD PTR [eax]
  442347:	add    BYTE PTR [esi],dl
  442349:	fild   WORD PTR [eax]
  44234b:	add    BYTE PTR [esi],al
  44234d:	fild   WORD PTR [eax]
  44234f:	add    BYTE PTR [esi],al
  442351:	fild   WORD PTR [eax]
  442353:	add    dh,dl
  442355:	fiadd  WORD PTR [eax]
  442357:	add    dh,dl
  442359:	fiadd  WORD PTR [eax]
  44235b:	add    dh,al
  44235d:	fiadd  WORD PTR [eax]
  44235f:	add    dh,al
  442361:	fiadd  WORD PTR [eax]
  442363:	add    dh,dl
  442365:	fiadd  WORD PTR [eax]
  442367:	add    dh,dl
  442369:	fiadd  WORD PTR [eax]
  44236b:	add    dh,al
  44236d:	fiadd  WORD PTR [eax]
  44236f:	add    dh,al
  442371:	fiadd  WORD PTR [eax]
  442373:	add    BYTE PTR [esi-0x69ffff22],dl
  442379:	fiadd  WORD PTR [eax]
  44237b:	add    BYTE PTR [eax],al
  44237d:	add    BYTE PTR [esi-0x79ffff22],al
  442383:	fiadd  WORD PTR [eax]
  442385:	add    BYTE PTR [esi-0x69ffff22],dl
  44238b:	fiadd  WORD PTR [eax]
  44238d:	add    BYTE PTR [esi-0x79ffff22],al
  442393:	fiadd  WORD PTR [eax]
  442395:	add    BYTE PTR [edi],ch
  442397:	inc    ebp
  442398:	add    eax,DWORD PTR [eax]
  44239a:	das    
  44239b:	inc    ebp
  44239c:	add    eax,DWORD PTR [eax]
  44239e:	das    
  44239f:	inc    ebp
  4423a0:	add    eax,DWORD PTR [eax]
  4423a2:	das    
  4423a3:	inc    ebp
  4423a4:	add    eax,DWORD PTR [eax]
  4423a6:	das    
  4423a7:	inc    ebp
  4423a8:	add    eax,DWORD PTR [eax]
  4423aa:	das    
  4423ab:	inc    ebp
  4423ac:	add    eax,DWORD PTR [eax]
  4423ae:	das    
  4423af:	inc    ebp
  4423b0:	add    eax,DWORD PTR [eax]
  4423b2:	das    
  4423b3:	inc    ebp
  4423b4:	add    eax,DWORD PTR [eax]
  4423b6:	das    
  4423b7:	inc    edi
  4423b8:	add    eax,DWORD PTR [eax]
  4423ba:	das    
  4423bb:	inc    edi
  4423bc:	add    eax,DWORD PTR [eax]
  4423be:	das    
  4423bf:	inc    edi
  4423c0:	add    eax,DWORD PTR [eax]
  4423c2:	das    
  4423c3:	inc    edi
  4423c4:	add    eax,DWORD PTR [eax]
  4423c6:	das    
  4423c7:	inc    edi
  4423c8:	add    eax,DWORD PTR [eax]
  4423ca:	das    
  4423cb:	inc    edi
  4423cc:	add    eax,DWORD PTR [eax]
  4423ce:	das    
  4423cf:	inc    edi
  4423d0:	add    eax,DWORD PTR [eax]
  4423d2:	das    
  4423d3:	inc    edi
  4423d4:	add    eax,DWORD PTR [eax]
  4423d6:	das    
  4423d7:	inc    edi
  4423d8:	add    eax,DWORD PTR [eax]
  4423da:	das    
  4423db:	inc    edi
  4423dc:	add    eax,DWORD PTR [eax]
  4423de:	das    
  4423df:	inc    edi
  4423e0:	add    eax,DWORD PTR [eax]
  4423e2:	add    BYTE PTR [eax],al
  4423e4:	das    
  4423e5:	inc    edi
  4423e6:	add    eax,DWORD PTR [eax]
  4423e8:	das    
  4423e9:	inc    edi
  4423ea:	add    eax,DWORD PTR [eax]
  4423ec:	das    
  4423ed:	inc    edi
  4423ee:	add    eax,DWORD PTR [eax]
  4423f0:	das    
  4423f1:	inc    edi
  4423f2:	add    eax,DWORD PTR [eax]
  4423f4:	das    
  4423f5:	inc    edi
  4423f6:	add    eax,DWORD PTR [eax]
  4423f8:	das    
  4423f9:	inc    edi
  4423fa:	add    eax,DWORD PTR [eax]
  4423fc:	das    
  4423fd:	inc    edi
  4423fe:	add    eax,DWORD PTR [eax]
  442400:	das    
  442401:	inc    edi
  442402:	add    eax,DWORD PTR [eax]
  442404:	das    
  442405:	inc    edi
  442406:	add    eax,DWORD PTR [eax]
  442408:	das    
  442409:	inc    edi
  44240a:	add    eax,DWORD PTR [eax]
  44240c:	das    
  44240d:	inc    edi
  44240e:	add    eax,DWORD PTR [eax]
  442410:	das    
  442411:	fsubp  st(1),st
  442413:	add    ebp,DWORD PTR [edi]
  442415:	fsubp  st(1),st
  442417:	add    ebp,DWORD PTR [edi]
  442419:	fsubp  st(1),st
  44241b:	add    ebp,DWORD PTR [edi]
  44241d:	fsubp  st(1),st
  44241f:	add    ebp,DWORD PTR [edi]
  442421:	fsubp  st(1),st
  442423:	add    ebp,DWORD PTR [edi]
  442425:	fsubp  st(1),st
  442427:	add    ebp,DWORD PTR [edi]
  442429:	fsubp  st(1),st
  44242b:	add    ebp,DWORD PTR [edi]
  44242d:	fsubp  st(1),st
  44242f:	add    ebp,DWORD PTR [edi]
  442431:	fsubp  st(1),st
  442433:	add    ebp,DWORD PTR [edi]
  442435:	fsubp  st(1),st
  442437:	add    ebp,DWORD PTR [edi]
  442439:	fsubp  st(1),st
  44243b:	add    ebp,DWORD PTR [edi]
  44243d:	fsubp  st(1),st
  44243f:	add    ebp,DWORD PTR [edi]
  442441:	fsubp  st(1),st
  442443:	add    ebp,DWORD PTR [edi]
  442445:	fsubp  st(1),st
  442447:	add    eax,DWORD PTR [eax]
  442449:	add    BYTE PTR [edi],ch
  44244b:	fsubp  st(1),st
  44244d:	add    ebp,DWORD PTR [edi]
  44244f:	fsubp  st(1),st
  442451:	add    ebp,DWORD PTR [edi]
  442453:	fsubp  st(1),st
  442455:	add    ebp,DWORD PTR [edi]
  442457:	fsubp  st(1),st
  442459:	add    ebp,DWORD PTR [edi]
  44245b:	fsubp  st(1),st
  44245d:	add    ebp,DWORD PTR [edi]
  44245f:	fsubp  st(1),st
  442461:	add    ebp,DWORD PTR [edi]
  442463:	fsubp  st(1),st
  442465:	add    ebp,DWORD PTR [edi]
  442467:	fsubp  st(1),st
  442469:	add    ebp,DWORD PTR [edi]
  44246b:	fsubp  st(1),st
  44246d:	add    ebp,DWORD PTR [edi]
  44246f:	fsubp  st(1),st
  442471:	add    ebp,DWORD PTR [edi]
  442473:	fsubp  st(1),st
  442475:	add    ebp,DWORD PTR [edi]
  442477:	fsubp  st(1),st
  442479:	add    ebp,DWORD PTR [edi]
  44247b:	fsubp  st(1),st
  44247d:	add    ebp,DWORD PTR [edi]
  44247f:	fsubp  st(1),st
  442481:	add    ebp,DWORD PTR [edi]
  442483:	fsubp  st(1),st
  442485:	add    ebp,DWORD PTR [edi]
  442487:	fsubp  st(1),st
  442489:	add    ebp,DWORD PTR [edi]
  44248b:	fiadd  WORD PTR [eax]
  44248d:	jmp    0xe94502be
  442492:	sub    al,0xde
  442494:	add    cl,ch
  442496:	sub    al,0xde
  442498:	add    cl,ch
  44249a:	sub    al,0xde
  44249c:	add    cl,ch
  44249e:	sub    al,0xde
  4424a0:	add    cl,ch
  4424a2:	sub    al,0xde
  4424a4:	add    cl,ch
  4424a6:	sub    al,0xde
  4424a8:	add    cl,ch
  4424aa:	sub    al,0xde
  4424ac:	add    cl,ch
  4424ae:	add    BYTE PTR [eax],al
  4424b0:	sub    al,0xde
  4424b2:	add    cl,ch
  4424b4:	sub    al,0xde
  4424b6:	add    cl,ch
  4424b8:	sub    al,0xde
  4424ba:	add    cl,ch
  4424bc:	sub    al,0xde
  4424be:	add    cl,ch
  4424c0:	sub    al,0xde
  4424c2:	add    cl,ch
  4424c4:	sub    al,0xde
  4424c6:	add    cl,ch
  4424c8:	sub    al,0xde
  4424ca:	add    cl,ch
  4424cc:	sub    al,0xde
  4424ce:	add    cl,ch
  4424d0:	sub    al,0xde
  4424d2:	add    cl,ch
  4424d4:	sub    al,0xde
  4424d6:	add    cl,ch
  4424d8:	sub    al,0xde
  4424da:	add    cl,ch
  4424dc:	sub    al,0xde
  4424de:	add    cl,ch
  4424e0:	sub    al,0xde
  4424e2:	add    cl,ch
  4424e4:	sub    al,0xde
  4424e6:	add    cl,ch
  4424e8:	sub    al,0xde
  4424ea:	add    cl,ch
  4424ec:	sub    al,0xde
  4424ee:	add    cl,ch
  4424f0:	sub    al,0xde
  4424f2:	add    cl,ch
  4424f4:	sub    al,0xde
  4424f6:	add    cl,ch
  4424f8:	sub    al,0xde
  4424fa:	add    cl,ch
  4424fc:	sub    al,0xde
  4424fe:	add    cl,ch
  442500:	sub    al,0xde
  442502:	add    cl,ch
  442504:	sub    al,0xde
  442506:	add    BYTE PTR [eax],al
  442508:	xchg   bl,bl
  44250a:	add    BYTE PTR [eax],al
  44250c:	xchg   esi,eax
  44250d:	fild   DWORD PTR [eax]
  44250f:	add    BYTE PTR [esi+0xdb],dl
  442515:	add    BYTE PTR [esi-0x79ffff25],al
  44251b:	fild   DWORD PTR [eax]
  44251d:	add    BYTE PTR [esi-0x25],dl
  442520:	add    BYTE PTR [eax],al
  442522:	push   esi
  442523:	fild   DWORD PTR [eax]
  442525:	add    BYTE PTR [esi-0x25],al
  442528:	add    BYTE PTR [eax],al
  44252a:	inc    esi
  44252b:	fild   DWORD PTR [eax]
  44252d:	add    BYTE PTR [esi-0x25],dl
  442530:	add    BYTE PTR [eax],al
  442532:	push   esi
  442533:	fild   DWORD PTR [eax]
  442535:	add    BYTE PTR [esi-0x25],al
  442538:	add    BYTE PTR [eax],al
  44253a:	inc    esi
  44253b:	fild   DWORD PTR [eax]
  44253d:	add    BYTE PTR [esi],dl
  44253f:	fild   DWORD PTR [eax]
  442541:	add    BYTE PTR [esi],dl
  442543:	fild   DWORD PTR [eax]
  442545:	add    BYTE PTR [esi],al
  442547:	fild   DWORD PTR [eax]
  442549:	add    BYTE PTR [esi],al
  44254b:	fild   DWORD PTR [eax]
  44254d:	add    BYTE PTR [esi],dl
  44254f:	fild   DWORD PTR [eax]
  442551:	add    BYTE PTR [esi],dl
  442553:	fild   DWORD PTR [eax]
  442555:	add    BYTE PTR [esi],al
  442557:	fild   DWORD PTR [eax]
  442559:	add    BYTE PTR [esi],al
  44255b:	fild   DWORD PTR [eax]
  44255d:	add    dh,dl
  44255f:	fiadd  DWORD PTR [eax]
  442561:	add    dh,dl
  442563:	fiadd  DWORD PTR [eax]
  442565:	add    dh,al
  442567:	fiadd  DWORD PTR [eax]
  442569:	add    dh,al
  44256b:	fiadd  DWORD PTR [eax]
  44256d:	add    dh,dl
  44256f:	fiadd  DWORD PTR [eax]
  442571:	add    dh,dl
  442573:	fiadd  DWORD PTR [eax]
  442575:	add    dh,al
  442577:	fiadd  DWORD PTR [eax]
  442579:	add    BYTE PTR [eax],al
  44257b:	add    dh,al
  44257d:	fiadd  DWORD PTR [eax]
  44257f:	add    BYTE PTR [esi+0x2f0000da],dl
  442585:	inc    ebp
  442586:	add    eax,DWORD PTR [eax]
  442588:	das    
  442589:	inc    ebp
  44258a:	add    eax,DWORD PTR [eax]
  44258c:	das    
  44258d:	inc    ebp
  44258e:	add    eax,DWORD PTR [eax]
  442590:	das    
  442591:	inc    ebp
  442592:	add    eax,DWORD PTR [eax]
  442594:	das    
  442595:	inc    ebp
  442596:	add    eax,DWORD PTR [eax]
  442598:	das    
  442599:	inc    ebp
  44259a:	add    eax,DWORD PTR [eax]
  44259c:	das    
  44259d:	inc    ebp
  44259e:	add    eax,DWORD PTR [eax]
  4425a0:	das    
  4425a1:	inc    ebp
  4425a2:	add    eax,DWORD PTR [eax]
  4425a4:	das    
  4425a5:	inc    ebp
  4425a6:	add    eax,DWORD PTR [eax]
  4425a8:	das    
  4425a9:	inc    ebp
  4425aa:	add    eax,DWORD PTR [eax]
  4425ac:	das    
  4425ad:	inc    ebp
  4425ae:	add    eax,DWORD PTR [eax]
  4425b0:	das    
  4425b1:	inc    ebp
  4425b2:	add    eax,DWORD PTR [eax]
  4425b4:	das    
  4425b5:	inc    ebp
  4425b6:	add    eax,DWORD PTR [eax]
  4425b8:	das    
  4425b9:	inc    ebp
  4425ba:	add    eax,DWORD PTR [eax]
  4425bc:	das    
  4425bd:	inc    ebp
  4425be:	add    eax,DWORD PTR [eax]
  4425c0:	das    
  4425c1:	aaa    
  4425c2:	add    eax,DWORD PTR [eax]
  4425c4:	das    
  4425c5:	aaa    
  4425c6:	add    eax,DWORD PTR [eax]
  4425c8:	das    
  4425c9:	aaa    
  4425ca:	add    eax,DWORD PTR [eax]
  4425cc:	das    
  4425cd:	aaa    
  4425ce:	add    eax,DWORD PTR [eax]
  4425d0:	das    
  4425d1:	aaa    
  4425d2:	add    eax,DWORD PTR [eax]
  4425d4:	das    
  4425d5:	aaa    
  4425d6:	add    eax,DWORD PTR [eax]
  4425d8:	das    
  4425d9:	aaa    
  4425da:	add    eax,DWORD PTR [eax]
  4425dc:	das    
  4425dd:	aaa    
  4425de:	add    eax,DWORD PTR [eax]
  4425e0:	add    BYTE PTR [eax],al
  4425e2:	das    
  4425e3:	aaa    
  4425e4:	add    eax,DWORD PTR [eax]
  4425e6:	das    
  4425e7:	aaa    
  4425e8:	add    eax,DWORD PTR [eax]
  4425ea:	das    
  4425eb:	aaa    
  4425ec:	add    eax,DWORD PTR [eax]
  4425ee:	das    
  4425ef:	aaa    
  4425f0:	add    eax,DWORD PTR [eax]
  4425f2:	das    
  4425f3:	aaa    
  4425f4:	add    eax,DWORD PTR [eax]
  4425f6:	das    
  4425f7:	aaa    
  4425f8:	add    eax,DWORD PTR [eax]
  4425fa:	das    
  4425fb:	aaa    
  4425fc:	add    eax,DWORD PTR [eax]
  4425fe:	das    
  4425ff:	fsubp  st(1),st
  442601:	add    ebp,DWORD PTR [edi]
  442603:	fsubp  st(1),st
  442605:	add    ebp,DWORD PTR [edi]
  442607:	fsubp  st(1),st
  442609:	add    ebp,DWORD PTR [edi]
  44260b:	fsubp  st(1),st
  44260d:	add    ebp,DWORD PTR [edi]
  44260f:	fsubp  st(1),st
  442611:	add    ebp,DWORD PTR [edi]
  442613:	fsubp  st(1),st
  442615:	add    ebp,DWORD PTR [edi]
  442617:	fsubp  st(1),st
  442619:	add    ebp,DWORD PTR [edi]
  44261b:	fsubp  st(1),st
  44261d:	add    ebp,DWORD PTR [edi]
  44261f:	fsubp  st(1),st
  442621:	add    ebp,DWORD PTR [edi]
  442623:	fsubp  st(1),st
  442625:	add    ebp,DWORD PTR [edi]
  442627:	fsubp  st(1),st
  442629:	add    ebp,DWORD PTR [edi]
  44262b:	fsubp  st(1),st
  44262d:	add    ebp,DWORD PTR [edi]
  44262f:	fsubp  st(1),st
  442631:	add    ebp,DWORD PTR [edi]
  442633:	fsubp  st(1),st
  442635:	add    ebp,DWORD PTR [edi]
  442637:	fsubp  st(1),st
  442639:	add    ebp,DWORD PTR [edi]
  44263b:	fsubp  st(1),st
  44263d:	add    ebp,DWORD PTR [edi]
  44263f:	fsubp  st(1),st
  442641:	add    ebp,DWORD PTR [edi]
  442643:	fsubp  st(1),st
  442645:	add    eax,DWORD PTR [eax]
  442647:	add    BYTE PTR [edi],ch
  442649:	fsubp  st(1),st
  44264b:	add    ebp,DWORD PTR [edi]
  44264d:	fsubp  st(1),st
  44264f:	add    ebp,DWORD PTR [edi]
  442651:	fsubp  st(1),st
  442653:	add    ebp,DWORD PTR [edi]
  442655:	fsubp  st(1),st
  442657:	add    ebp,DWORD PTR [edi]
  442659:	fsubp  st(1),st
  44265b:	add    ebp,DWORD PTR [edi]
  44265d:	fsubp  st(1),st
  44265f:	add    ebp,DWORD PTR [edi]
  442661:	fsubp  st(1),st
  442663:	add    ebp,DWORD PTR [edi]
  442665:	fsubp  st(1),st
  442667:	add    ebp,DWORD PTR [edi]
  442669:	fsubp  st(1),st
  44266b:	add    ebp,DWORD PTR [edi]
  44266d:	fsubp  st(1),st
  44266f:	add    ebp,DWORD PTR [edi]
  442671:	fsubp  st(1),st
  442673:	add    ebp,DWORD PTR [edi]
  442675:	fsubp  st(1),st
  442677:	add    ebp,DWORD PTR [edi]
  442679:	fiadd  WORD PTR [eax]
  44267b:	jmp    0xe94504ac
  442680:	sub    al,0xde
  442682:	add    cl,ch
  442684:	sub    al,0xde
  442686:	add    cl,ch
  442688:	sub    al,0xde
  44268a:	add    cl,ch
  44268c:	sub    al,0xde
  44268e:	add    cl,ch
  442690:	sub    al,0xde
  442692:	add    cl,ch
  442694:	sub    al,0xde
  442696:	add    cl,ch
  442698:	sub    al,0xde
  44269a:	add    cl,ch
  44269c:	sub    al,0xde
  44269e:	add    cl,ch
  4426a0:	sub    al,0xde
  4426a2:	add    cl,ch
  4426a4:	sub    al,0xde
  4426a6:	add    cl,ch
  4426a8:	sub    al,0xde
  4426aa:	add    cl,ch
  4426ac:	add    BYTE PTR [eax],al
  4426ae:	sub    al,0xde
  4426b0:	add    cl,ch
  4426b2:	sub    al,0xde
  4426b4:	add    cl,ch
  4426b6:	sub    al,0xde
  4426b8:	add    cl,ch
  4426ba:	sub    al,0xde
  4426bc:	add    cl,ch
  4426be:	sub    al,0xde
  4426c0:	add    cl,ch
  4426c2:	sub    al,0xde
  4426c4:	add    cl,ch
  4426c6:	sub    al,0xde
  4426c8:	add    cl,ch
  4426ca:	sub    al,0xde
  4426cc:	add    cl,ch
  4426ce:	sub    al,0xde
  4426d0:	add    cl,ch
  4426d2:	sub    al,0xde
  4426d4:	add    cl,ch
  4426d6:	sub    al,0xde
  4426d8:	add    cl,ch
  4426da:	sub    al,0xde
  4426dc:	add    cl,ch
  4426de:	sub    al,0xde
  4426e0:	add    cl,ch
  4426e2:	sub    al,0xde
  4426e4:	add    cl,ch
  4426e6:	sub    al,0xde
  4426e8:	add    cl,ch
  4426ea:	sub    al,0xde
  4426ec:	add    cl,ch
  4426ee:	sub    al,0xde
  4426f0:	add    cl,ch
  4426f2:	sub    al,0xde
  4426f4:	add    BYTE PTR [eax],al
  4426f6:	(bad)  
  4426f7:	fild   WORD PTR [eax]
  4426f9:	add    dh,dl
  4426fb:	fild   WORD PTR [eax]
  4426fd:	add    dh,al
  4426ff:	fild   WORD PTR [eax]
  442701:	add    dh,al
  442703:	fild   WORD PTR [eax]
  442705:	add    BYTE PTR [esi-0x69ffff21],dl
  44270b:	fild   WORD PTR [eax]
  44270d:	add    BYTE PTR [esi+0xdf],al
  442713:	add    BYTE PTR [esi-0x69ffff21],al
  442719:	fild   WORD PTR [eax]
  44271b:	add    BYTE PTR [esi-0x79ffff21],dl
  442721:	fild   WORD PTR [eax]
  442723:	add    BYTE PTR [esi+0x560000df],al
  442729:	fild   WORD PTR [eax]
  44272b:	add    BYTE PTR [esi-0x21],dl
  44272e:	add    BYTE PTR [eax],al
  442730:	inc    esi
  442731:	fild   WORD PTR [eax]
  442733:	add    BYTE PTR [esi-0x21],al
  442736:	add    BYTE PTR [eax],al
  442738:	push   esi
  442739:	fild   WORD PTR [eax]
  44273b:	add    BYTE PTR [esi-0x21],dl
  44273e:	add    BYTE PTR [eax],al
  442740:	inc    esi
  442741:	fild   WORD PTR [eax]
  442743:	add    BYTE PTR [esi-0x21],al
  442746:	add    BYTE PTR [eax],al
  442748:	push   ss
  442749:	fild   WORD PTR [eax]
  44274b:	add    BYTE PTR [esi],dl
  44274d:	fild   WORD PTR [eax]
  44274f:	add    BYTE PTR [esi],al
  442751:	fild   WORD PTR [eax]
  442753:	add    BYTE PTR [esi],al
  442755:	fild   WORD PTR [eax]
  442757:	add    BYTE PTR [esi],dl
  442759:	fild   WORD PTR [eax]
  44275b:	add    BYTE PTR [esi],dl
  44275d:	fild   WORD PTR [eax]
  44275f:	add    BYTE PTR [esi],al
  442761:	fild   WORD PTR [eax]
  442763:	add    BYTE PTR [esi],al
  442765:	fild   WORD PTR [eax]
  442767:	add    dh,dl
  442769:	fiadd  WORD PTR [eax]
  44276b:	add    dh,dl
  44276d:	fiadd  WORD PTR [eax]
  44276f:	add    BYTE PTR [edi],ch
  442771:	xor    eax,0x352f0003
  442776:	add    eax,DWORD PTR [eax]
  442778:	add    BYTE PTR [eax],al
  44277a:	das    
  44277b:	xor    eax,0x352f0003
  442780:	add    eax,DWORD PTR [eax]
  442782:	das    
  442783:	xor    eax,0x352f0003
  442788:	add    eax,DWORD PTR [eax]
  44278a:	das    
  44278b:	xor    eax,0x352f0003
  442790:	add    eax,DWORD PTR [eax]
  442792:	das    
  442793:	xor    eax,0x352f0003
  442798:	add    eax,DWORD PTR [eax]
  44279a:	das    
  44279b:	xor    eax,0x352f0003
  4427a0:	add    eax,DWORD PTR [eax]
  4427a2:	das    
  4427a3:	xor    eax,0x352f0003
  4427a8:	add    eax,DWORD PTR [eax]
  4427aa:	das    
  4427ab:	xor    eax,0x352f0003
  4427b0:	add    eax,DWORD PTR [eax]
  4427b2:	das    
  4427b3:	xor    eax,0xa50cf38d
  4427b8:	clc    
  4427b9:	jns    0x44273d
  4427bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4427bc:	ss ins BYTE PTR es:[edi],dx
  4427be:	sub    al,0x53
  4427c0:	pusha  
  4427c1:	pop    ss
  4427c2:	sub    bl,BYTE PTR [ecx+0x71d283c9]
  4427c8:	or     al,0xe6
  4427ca:	inc    esi
  4427cb:	in     eax,dx
  4427cc:	cld    
  4427cd:	(bad)  
  4427ce:	out    dx,al
  4427cf:	lock in al,0x25
  4427d2:	lea    ebp,ds:[ebx+0x7c]
  4427d6:	js     0x442759
  4427d8:	inc    ebp
  4427d9:	ret    
  4427da:	mov    ds:0xe599a7,eax
  4427df:	add    bh,cl
  4427e1:	jg     0x44279c
  4427e3:	fiadd  DWORD PTR [ecx-0x16]
  4427e6:	test   eax,0x191bead3
  4427eb:	(bad)
  4427ef:	or     eax,0x1868cea6
  4427f4:	(bad)  
  4427f5:	mov    dh,0x2d
  4427f7:	xchg   edx,eax
  4427f8:	xor    DWORD PTR [esp+eiz*8],ecx
  4427fb:	push   ebp
  4427fc:	test   DWORD PTR [ebx+ebp*8+0x59],0x9586851f
  442804:	mov    ah,0xab
  442806:	call   0xe012cfde
  44280b:	shl    BYTE PTR [ecx+0x4a5abdc1],1
  442811:	in     eax,0xf3
  442813:	or     DWORD PTR [edx+eiz*4+0x30],edi
  442817:	and    dh,BYTE PTR [ebx-0x7]
  44281a:	fstp   QWORD PTR [eax-0x449c12e7]
  442820:	pop    ecx
  442821:	dec    ecx
  442822:	push   esi
  442823:	std    
  442824:	nop
  442825:	mov    edx,0x72a56405
  44282a:	repnz pop ebp
  44282c:	repnz std 
  44282e:	sub    esi,esi
  442830:	jmp    0x44285d
  442832:	mov    DWORD PTR [ebx],ebp
  442834:	xchg   ecx,eax
  442835:	rcl    DWORD PTR [edx+0x12eb36c7],0xab
  44283c:	out    0xb2,al
  44283e:	dec    ecx
  44283f:	inc    edi
  442840:	stos   DWORD PTR es:[edi],eax
  442841:	int    0x2d
  442843:	xchg   ebp,eax
  442844:	add    BYTE PTR [eax],al
  442846:	ror    DWORD PTR [edx-0x6e68a7c3],cl
  44284c:	push   ebx
  44284d:	fld    QWORD PTR [ebx+0x67cb29b3]
  442853:	dec    eax
  442854:	cmp    ch,BYTE PTR [eax]
  442856:	sub    eax,0x18c6e7e3
  44285b:	in     eax,0x83
  44285d:	cdq    
  44285e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44285f:	mov    eax,ds:0x11544044
  442864:	add    DWORD PTR [edi-0x3fff6b22],ecx
  44286a:	popa   
  44286b:	clc    
  44286c:	sti    
  44286d:	xor    BYTE PTR [ecx],ah
  44286f:	fs push ebx
  442871:	int3   
  442872:	xchg   edi,eax
  442873:	push   cs
  442874:	mov    al,ds:0xb1c518a6
  442879:	mov    ebp,0x306c435d
  44287e:	inc    ebx
  44287f:	inc    esi
  442880:	hlt    
  442881:	sti    
  442882:	adc    edx,edi
  442884:	adc    eax,0x2c673adc
  442889:	mov    dh,0xc5
  44288b:	popaw  
  44288d:	dec    edx
  44288e:	add    al,BYTE PTR [esi+ebp*4+0x5b]
  442892:	ins    BYTE PTR es:[edi],dx
  442893:	xchg   ebp,eax
  442894:	ret    0x3b02
  442897:	shl    BYTE PTR [esi+0x17e77566],1
  44289d:	pop    ebp
  44289e:	lea    ebp,[ebp-0x14bd9c0f]
  4428a4:	sub    bh,BYTE PTR [edx]
  4428a6:	pop    edi
  4428a7:	xchg   ebx,eax
  4428a8:	dec    esp
  4428a9:	pop    ds
  4428aa:	add    BYTE PTR [eax],al
  4428ac:	pop    es
  4428ad:	and    BYTE PTR [eax],dh
  4428af:	jb     0x44285f
  4428b1:	outs   dx,DWORD PTR ds:[esi]
  4428b2:	call   0xe24b:0xbddac8e3
  4428b9:	add    bl,al
  4428bb:	aas    
  4428bc:	(bad)  
  4428bd:	push   es
  4428be:	or     BYTE PTR [edx],bl
  4428c0:	mov    ss,WORD PTR [ebx-0x365dcc39]
  4428c6:	push   ecx
  4428c7:	dec    eax
  4428c8:	outs   dx,DWORD PTR ds:[esi]
  4428c9:	loopne 0x442946
  4428cb:	add    eax,0x305b066b
  4428d0:	pop    ds
  4428d1:	xlat   BYTE PTR ds:[ebx]
  4428d2:	inc    eax
  4428d3:	jle    0x44293f
  4428d5:	dec    edx
  4428d6:	pusha  
  4428d7:	sbb    DWORD PTR [edi],eax
  4428d9:	lods   eax,DWORD PTR ds:[esi]
  4428da:	add    eax,DWORD PTR [ebx-0xb]
  4428dd:	(bad)  
  4428de:	ds jg  0x44294f
  4428e1:	sub    bl,BYTE PTR [ebp+0x7635b300]
  4428e7:	fwait
  4428e8:	lahf   
  4428e9:	in     eax,0x52
  4428eb:	or     eax,0x66a5cb36
  4428f0:	dec    esi
  4428f1:	mov    ebx,0x980b8ac2
  4428f6:	pop    edx
  4428f7:	mov    esp,0xed6dec78
  4428fc:	int3   
  4428fd:	mov    esi,0xf93003ae
  442902:	or     eax,0x6c90731d
  442907:	mov    cl,0x9
  442909:	mov    ebp,0xe8b27ac5
  44290e:	inc    edx
  44290f:	dec    esi
  442910:	add    BYTE PTR [eax],al
  442912:	loopne 0x44292d
  442914:	and    eax,0xf7664559
  442919:	test   cl,0x3b
  44291c:	(bad)  
  44291d:	fs cmc 
  44291f:	sti    
  442920:	mov    ss:0x508cf952,al
  442926:	shl    BYTE PTR [edx+0x57250504],0x8b
  44292d:	dec    ecx
  44292e:	in     al,0xa7
  442930:	imul   ebx,DWORD PTR [esi],0x22
  442933:	jnp    0x442959
  442935:	adc    dl,BYTE PTR [ecx-0x6b]
  442938:	xor    al,0xd4
  44293a:	mov    DWORD PTR [edi-0x429afd2],0x6ddd1531
  442944:	adc    BYTE PTR [ebp-0x21dcb928],dh
  44294a:	test   eax,0x17f5af00
  44294f:	mov    dl,0x3b
  442951:	adc    al,BYTE PTR [eax]
  442953:	push   0x25
  442955:	adc    eax,0x4b1c8707
  44295a:	or     eax,0x2fe18c37
  44295f:	push   ds
  442960:	xchg   ebx,eax
  442961:	and    al,0x36
  442963:	or     eax,0x7e23e366
  442968:	jnp    0x44299e
  44296a:	jge    0x4429eb
  44296c:	adc    al,0x95
  44296e:	mov    esp,0x2b6e1fa
  442973:	dec    esp
  442974:	pop    ebx
  442975:	popa   
  442976:	add    BYTE PTR [eax],al
  442978:	mov    bh,0x67
  44297a:	or     al,0xbc
  44297c:	inc    ecx
  44297d:	xor    esi,DWORD PTR [edx-0x1]
  442980:	sbb    al,0x73
  442982:	jno    0x44299a
  442984:	call   0xc4e41805
  442989:	lods   al,BYTE PTR ds:[esi]
  44298a:	int    0x37
  44298c:	dec    esp
  44298d:	iret   
  44298e:	stos   BYTE PTR es:[edi],al
  44298f:	clc    
  442990:	fld    st(7)
  442992:	cwde   
  442993:	mov    ds:0x30295c32,eax
  442998:	fcomp  DWORD PTR [ebx]
  44299a:	mov    ch,0x1f
  44299c:	push   eax
  44299d:	push   es
  44299e:	adc    al,0xa8
  4429a0:	stos   DWORD PTR es:[edi],eax
  4429a1:	or     BYTE PTR [edx+0x68b7cb14],cl
  4429a7:	fbld   TBYTE PTR [ebx]
  4429a9:	mov    bl,0x88
  4429ab:	(bad)  
  4429ac:	hlt    
  4429ad:	push   0xf7561fb7
  4429b2:	xchg   esi,eax
  4429b3:	push   0xffffff8b
  4429b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4429b6:	scas   al,BYTE PTR es:[edi]
  4429b7:	sbb    DWORD PTR [edx-0x48],edx
  4429ba:	lahf   
  4429bb:	or     ch,BYTE PTR [ecx+0x18]
  4429be:	gs mov cl,0x46
  4429c1:	sbb    esp,eax
  4429c3:	int3   
  4429c4:	jnp    0x4429df
  4429c6:	(bad)  
  4429c7:	int3   
  4429c8:	jae    0x4429e3
  4429ca:	(bad)  
  4429cb:	int3   
  4429cc:	imul   ebx,DWORD PTR [ecx],0xffffffc4
  4429cf:	int3   
  4429d0:	ficom  DWORD PTR [edx-0x1c]
  4429d3:	push   ecx
  4429d4:	mov    ah,0x9b
  4429d6:	or     BYTE PTR [edx-0xbaa9c9],cl
  4429dc:	add    BYTE PTR [eax],al
  4429de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4429df:	cmp    edx,DWORD PTR [ebp-0x3d]
  4429e2:	jp     0x442a3d
  4429e4:	in     al,0x51
  4429e6:	popa   
  4429e7:	lods   eax,DWORD PTR ds:[esi]
  4429e8:	xor    ecx,ecx
  4429ea:	mov    ebx,DWORD PTR [ecx+0x71]
  4429ed:	xor    BYTE PTR [esp+ecx*8-0x1d8674fc],ah
  4429f4:	mov    eax,DWORD PTR [esi+0x37]
  4429f7:	push   edi
  4429f8:	cmp    eax,0x20c4b4fc
  4429fd:	mov    esp,DWORD PTR [ecx]
  4429ff:	pop    esi
  442a00:	aaa    
  442a01:	imul   ebx,DWORD PTR [ebx-0x23],0xffffff80
  442a05:	aas    
  442a06:	je     0x4429d2
  442a08:	add    ch,bl
  442a0a:	(bad)  
  442a0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442a0c:	push   esi
  442a0d:	mov    edx,edx
  442a0f:	mov    ds:0x595accc3,eax
  442a14:	in     al,0x83
  442a16:	fwait
  442a17:	cli    
  442a18:	mov    eax,DWORD PTR [ebp+0x37]
  442a1b:	push   edi
  442a1c:	cmp    eax,0xe093a4e0
  442a21:	mov    edi,edx
  442a23:	cmp    eax,0x574b5103
  442a28:	dec    ebp
  442a29:	in     al,0xb4
  442a2b:	fmul   QWORD PTR [ebx+0x4d03c5e7]
  442a32:	daa    
  442a33:	push   edi
  442a34:	inc    ebp
  442a35:	clc    
  442a36:	mov    ah,0xab
  442a38:	clc    
  442a39:	mov    ebp,ebp
  442a3b:	stc    
  442a3c:	add    eax,DWORD PTR [ebp+0x27]
  442a3f:	push   edi
  442a40:	cmp    eax,0xa40000e8
  442a45:	xchg   ebx,eax
  442a46:	clc    
  442a47:	mov    ebx,esi
  442a49:	std    
  442a4a:	add    edx,DWORD PTR [ebp+0x37]
  442a4d:	push   edi
  442a4e:	dec    ebp
  442a4f:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442a51:	fwait
  442a52:	clc    
  442a53:	mov    esp,edi
  442a55:	loope  0x442a5a
  442a57:	dec    ebp
  442a58:	aaa    
  442a59:	push   edi
  442a5a:	inc    ebp
  442a5b:	cld    
  442a5c:	call   0x2f4516fb
  442a61:	fiadd  WORD PTR [eax]
  442a63:	jmp    0x442a8b
  442a65:	pop    ecx
  442a66:	dec    ebp
  442a67:	hlt    
  442a68:	lods   al,BYTE PTR ds:[esi]
  442a69:	pop    ds
  442a6a:	add    DWORD PTR [ecx+0x458b4a5a],ecx
  442a70:	neg    DWORD PTR [eax+0x45]
  442a73:	hlt    
  442a74:	xor    al,0x96
  442a76:	sbb    BYTE PTR [ebx+0x77],dh
  442a79:	pop    ecx
  442a7a:	dec    ebp
  442a7b:	lock mov ah,0xdf
  442a7e:	add    eax,DWORD PTR [ebp+0x27]
  442a81:	push   edi
  442a82:	cmp    eax,0x68d445dc
  442a87:	lods   al,BYTE PTR ds:[esi]
  442a88:	sub    al,0x9e
  442a8a:	add    BYTE PTR [ebx-0x17aedd8e],cl
  442a90:	pop    edi
  442a91:	fild   WORD PTR [eax]
  442a93:	add    BYTE PTR [ecx+ebx*1-0x35907afc],ch
  442a9a:	sbb    ecx,DWORD PTR [ebx+0x458b49fa]
  442aa0:	xchg   esp,edx
  442aa2:	scas   eax,DWORD PTR es:[edi]
  442aa3:	or     al,0xff
  442aa5:	push   esi
  442aa6:	inc    ebp
  442aa7:	in     al,dx
  442aa8:	add    BYTE PTR [eax],al
  442aaa:	mov    ah,0xaa
  442aac:	in     al,0x8b
  442aae:	jmp    0x3de0:0x9f048b41
  442ab5:	or     BYTE PTR [edx+edx*8+0x605f4d8b],al
  442abc:	rol    DWORD PTR [esi+esi*4],0x92
  442ac0:	lock jmp 0x442a56
  442ac3:	adc    cl,al
  442ac5:	mov    ecx,DWORD PTR [edx-0x5e]
  442ac8:	ret    
  442ac9:	int3   
  442aca:	jnp    0x442add
  442acc:	(bad)  
  442acd:	int3   
  442ace:	jae    0x442ae1
  442ad0:	(bad)  
  442ad1:	int3   
  442ad2:	imul   edx,DWORD PTR [ecx],0xffffffc4
  442ad5:	int3   
  442ad6:	ficomp DWORD PTR [eax-0x1c]
  442ad9:	sbb    DWORD PTR [ebx],0xffffffe7
  442adc:	call   0xf7884ae6
  442ae1:	mov    DWORD PTR [edx+0x36],esi
  442ae4:	mov    eax,DWORD PTR [ebp+0x7]
  442ae7:	scas   eax,DWORD PTR es:[edi]
  442ae8:	call   0xf7883316
  442aed:	sub    ebx,0xffffffda
  442af0:	mov    ds:0x9ffb54,eax
  442af5:	push   0x40dfb3
  442afa:	mov    ah,0x91
  442afc:	call   0x4d2e0b52
  442b01:	cld    
  442b02:	ins    BYTE PTR es:[edi],dx
  442b03:	fisub  WORD PTR [ebx+0x9fd358]
  442b09:	push   0x2f
  442b0b:	mov    eax,0x6800
  442b10:	repz fild WORD PTR [eax+0x0]
  442b14:	mov    eax,0x6cfc58e9
  442b19:	fimul  WORD PTR [ecx+0x3d1b9745]
  442b1f:	cld    
  442b20:	das    
  442b21:	fiadd  WORD PTR [eax]
  442b23:	add    BYTE PTR [ebp+edx*8+0x5f93558b],al
  442b2a:	ret    0xb601
  442b2d:	test   eax,0x420283f4
  442b32:	or     BYTE PTR [ebx+0x4e],dh
  442b35:	push   edi
  442b36:	cmp    eax,0x7dd2a4fc
  442b3b:	mov    WORD PTR [esi+ebx*4],gs
  442b3e:	add    BYTE PTR [ecx-0x4c],dl
  442b41:	test   eax,0xe95852e8
  442b46:	dec    esp
  442b47:	cld    
  442b48:	in     al,dx
  442b49:	fisttp QWORD PTR [ebx-0x3aab4b3]
  442b4f:	mov    ebx,ds
  442b51:	inc    ecx
  442b52:	inc    ebx
  442b53:	add    BYTE PTR [esi+ebp*1-0x75],al
  442b57:	in     eax,0xd2
  442b59:	push   ds
  442b5a:	(bad)  
  442b5b:	int3   
  442b5c:	sti    
  442b5d:	adc    esp,eax
  442b5f:	int3   
  442b60:	repz adc esp,eax
  442b63:	int3   
  442b64:	jmp    0x442b77
  442b66:	(bad)  
  442b67:	int3   
  442b68:	jp     0x442bc1
  442b6a:	in     al,0xa1
  442b6c:	mov    edi,0x41004341
  442b71:	push   edi
  442b72:	inc    eax
  442b73:	xor    BYTE PTR [eax],al
  442b75:	add    BYTE PTR [eax+edx*4-0x6a59c1f8],ah
  442b7c:	or     BYTE PTR [ebp-0x14],bl
  442b7f:	adc    esp,eax
  442b81:	int3   
  442b82:	repz adc esp,eax
  442b85:	int3   
  442b86:	jmp    0x442b99
  442b88:	(bad)  
  442b89:	int3   
  442b8a:	jp     0x442be3
  442b8c:	in     al,0x8b
  442b8e:	jb     0x442b62
  442b90:	push   eax
  442b91:	mov    esi,DWORD PTR [edx-0x2a]
  442b94:	push   ecx
  442b95:	jmp    DWORD PTR [edx]
  442b97:	stos   BYTE PTR es:[edi],al
  442b98:	hlt    
  442b99:	inc    ebx
  442b9a:	das    
  442b9b:	mov    eax,ds:0x117bccc3
  442ba0:	(bad)  
  442ba1:	int3   
  442ba2:	jae    0x442bb5
  442ba4:	(bad)  
  442ba5:	int3   
  442ba6:	imul   edx,DWORD PTR [ecx],0xffffffc4
  442ba9:	int3   
  442baa:	cli    
  442bab:	push   esi
  442bac:	in     al,0x83
  442bae:	fwait
  442baf:	aad    0x6a
  442bb1:	add    BYTE PTR ds:0x2cdc68de,dl
  442bb7:	sahf   
  442bb8:	add    bh,bh
  442bba:	sbb    ah,BYTE PTR [esi+0x552f43f4]
  442bc0:	cmp    eax,0x335d7f8
  442bc5:	inc    eax
  442bc6:	das    
  442bc7:	push   edi
  442bc8:	cmp    eax,0xba35fff8
  442bcd:	dec    DWORD PTR [eax+0x42]
  442bd0:	add    esp,0x37
  442bd3:	push   ebp
  442bd4:	cmp    eax,0x1090a4fc
  442bd9:	push   ecx
  442bda:	add    BYTE PTR [eax],al
  442bdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442bdd:	test   al,0x4
  442bdf:	push   edx
  442be0:	mov    ah,0x9b
  442be2:	or     BYTE PTR [eax+0x20],dl
  442be5:	lods   al,BYTE PTR ds:[esi]
  442be6:	hlt    
  442be7:	mov    edx,DWORD PTR [edx]
  442be9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442bea:	ret    
  442beb:	int3   
  442bec:	jp     0x442c43
  442bee:	in     al,0x51
  442bf0:	lock fwait
  442bf2:	hlt    
  442bf3:	add    BYTE PTR [edi],ch
  442bf5:	fiadd  WORD PTR [eax]
  442bf7:	jmp    0x442c1f
  442bf9:	push   ebp
  442bfa:	cmp    eax,0x11eacfc
  442bff:	mov    DWORD PTR [edx+0x42],esi
  442c02:	mov    ecx,DWORD PTR [ebp-0x1d]
  442c05:	add    eax,0xe15c1046
  442c0a:	mov    edx,DWORD PTR [ebp+0x27]
  442c0d:	fisttp QWORD PTR [ebp-0x4]
  442c10:	cmp    BYTE PTR [eax-0x2d8d74fe],cl
  442c16:	add    ecx,DWORD PTR [ebp-0x45]
  442c19:	shr    DWORD PTR [esi+0x6c1bf411],1
  442c1f:	pop    es
  442c20:	out    0xdf,eax
  442c22:	add    BYTE PTR [eax],al
  442c24:	das    
  442c25:	xor    eax,0xd7feafc
  442c2a:	ror    DWORD PTR [ebx-0x333c5c76],0x7b
  442c31:	adc    al,ah
  442c33:	int3   
  442c34:	jae    0x442c48
  442c36:	(bad)  
  442c37:	int3   
  442c38:	imul   edx,DWORD PTR [edx],0xffffffc4
  442c3b:	int3   
  442c3c:	ficom  DWORD PTR [esp+eiz*8-0x47]
  442c40:	add    BYTE PTR [eax],al
  442c42:	inc    edi
  442c43:	fiadd  WORD PTR [eax]
  442c45:	add    bl,cl
  442c47:	push   esp
  442c48:	or     DWORD PTR [ecx+0x43f48e2a],ecx
  442c4e:	das    
  442c4f:	mov    ds:0x127bccc3,eax
  442c54:	(bad)  
  442c55:	int3   
  442c56:	jae    0x442c6a
  442c58:	(bad)  
  442c59:	int3   
  442c5a:	imul   edx,DWORD PTR [edx],0xffffffc4
  442c5d:	int3   
  442c5e:	ficom  DWORD PTR [esp+eiz*8-0x7d]
  442c62:	sbb    ebp,esi
  442c64:	mov    eax,DWORD PTR [ebp+0x37]
  442c67:	pop    ebp
  442c68:	js     0x442c6e
  442c6a:	das    
  442c6b:	sar    DWORD PTR [eax+ecx*4+0x2f],1
  442c6f:	fiadd  WORD PTR [eax]
  442c71:	mov    edi,DWORD PTR [edx-0x2a]
  442c74:	mov    edx,DWORD PTR [ecx+0x2b]
  442c77:	pop    ebp
  442c78:	jmp    0xfb55:0x8933de08
  442c7f:	push   esp
  442c80:	cmp    eax,0x81dac08
  442c85:	mov    DWORD PTR [edx+0x4e],ebp
  442c88:	mov    edi,0xdddb45
  442c8d:	add    BYTE PTR [edi],ch
  442c8f:	xor    eax,0x427a8b09
  442c94:	add    ecx,0x2e
  442c97:	push   edi
  442c98:	inc    ebp
  442c99:	cld    
  442c9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442c9b:	stos   BYTE PTR es:[edi],al
  442c9c:	hlt    
  442c9d:	cmp    ebx,DWORD PTR [edx+0x4a]
  442ca0:	jae    0x442ce8
  442ca2:	mov    ah,0x9a
  442ca4:	hlt    
  442ca5:	mov    eax,DWORD PTR [eax]
  442ca7:	add    dl,dh
  442ca9:	dec    ebp
  442caa:	pop    es
  442cab:	mov    bh,0x43
  442cad:	lahf   
  442cae:	sar    edx,0x23
  442cb1:	pop    ebp
  442cb2:	cli    
  442cb3:	add    eax,DWORD PTR [edx]
  442cb5:	or     al,0x8c
  442cb7:	inc    ebp
  442cb8:	adc    DWORD PTR [ebp+eax*2-0x10],0x28
  442cbd:	mov    DWORD PTR [ecx+eax*2],ecx
  442cc0:	scas   al,BYTE PTR es:[edi]
  442cc1:	cmp    esi,edi
  442cc3:	comiss xmm3,xmm6
  442cc6:	mov    DWORD PTR [ebp+0x67],edx
  442cc9:	push   esp
  442cca:	cmp    eax,0x492a408
  442ccf:	add    esp,DWORD PTR [edi]
  442cd1:	push   ebp
  442cd2:	dec    ebp
  442cd3:	clc    
  442cd4:	mov    ah,0xd9
  442cd6:	adc    DWORD PTR [ebx],eax
  442cd8:	jmp    0x4d55:0x274d8bed
  442cdf:	or     al,0x2c
  442ce1:	out    dx,eax
  442ce2:	mov    ecx,DWORD PTR [ebp+0x27]
  442ce5:	push   esi
  442ce6:	cld    
  442ce7:	or     DWORD PTR [esi+esi*2],edx
  442cea:	mov    edx,DWORD PTR [ebp+0x27]
  442ced:	push   ebx
  442cee:	cmp    eax,0xfc9c2c08
  442cf3:	mov    BYTE PTR [edx-0x2a],dh
  442cf6:	jmp    0xf7842d66
  442cfb:	mov    edx,DWORD PTR [edx]
  442cfd:	mov    ds:0x535accc3,al
  442d02:	in     al,0x83
  442d04:	(bad)  
  442d06:	mov    eax,DWORD PTR [ebp+0x37]
  442d09:	push   ebp
  442d0a:	cmp    eax,0xa40000e4
  442d0f:	xchg   ecx,eax
  442d10:	fmul   QWORD PTR [ebx+0x51033a7a]
  442d16:	or     edx,DWORD PTR [ebp+0x4d]
  442d19:	call   0x8c2cc6d2
  442d1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442d1f:	pop    esi
  442d20:	add    BYTE PTR [eax],al
  442d22:	das    
  442d23:	push   ebp
  442d24:	inc    ebp
  442d25:	lock lods al,BYTE PTR ds:[esi]
  442d27:	shl    eax,0x0
  442d2a:	xor    BYTE PTR [edx-0x5],bl
  442d2d:	add    BYTE PTR [edi],ch
  442d2f:	fimul  WORD PTR [ebx+0x4ddb2755]
  442d35:	lock mov dh,0xa9
  442d38:	loopne 0x442cc5
  442d3a:	jmp    0x7de:0x1f78833d
  442d41:	test   BYTE PTR [edx-0x2affff22],cl
  442d47:	(bad)  [edx+0x0]
  442d4a:	mov    ah,0x91
  442d4c:	loopne 0x442cd9
  442d4e:	add    dl,dh
  442d50:	add    edx,DWORD PTR [ecx+0x23]
  442d53:	lods   al,BYTE PTR ds:[esi]
  442d54:	not    DWORD PTR ds:0x4341e7
  442d5a:	mov    dh,0x99
  442d5c:	hlt    
  442d5d:	mov    esi,edx
  442d5f:	cmp    eax,0xca2f3883
  442d64:	sbb    DWORD PTR [ebx+0x558b3e7a],ecx
  442d6a:	aaa    
  442d6b:	fist   DWORD PTR [ecx]
  442d6d:	mov    DWORD PTR [edx+0x458b4a],eax
  442d73:	add    BYTE PTR [edi],cl
  442d75:	push   ebx
  442d76:	inc    ebp
  442d77:	or     BYTE PTR [esi+edx*4],ch
  442d7a:	adc    BYTE PTR [ecx+0x17eb3272],cl
  442d80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442d81:	test   al,0xe0
  442d83:	mov    ebp,DWORD PTR [edx-0x2a]
  442d86:	add    eax,DWORD PTR [edx+0x3f]
  442d89:	push   ebp
  442d8a:	cmp    eax,0xe090b4f4
  442d8f:	mov    eax,DWORD PTR [edx-0x59eefc2a]
  442d95:	test   al,0xe4
  442d97:	(bad)  
  442d98:	jb     0x442de0
  442d9a:	add    BYTE PTR [eax],al
  442d9c:	das    
  442d9d:	fimul  WORD PTR [ebx+0x785acf45]
  442da3:	adc    BYTE PTR [edi],ch
  442da5:	retf   0x8b07
  442da8:	cli    
  442da9:	cmp    eax,0xca2f3983
  442dae:	inc    esi
  442db0:	repnz inc ebp
  442db2:	add    DWORD PTR [eax],eax
  442db4:	das    
  442db5:	fimul  WORD PTR [ebx+0x3a5a8355]
  442dbb:	add    bl,bh
  442dbd:	mov    esp,0x5283458b
  442dc2:	or     BYTE PTR [ecx+0xdd8e],al
  442dc8:	scas   eax,DWORD PTR es:[edi]
  442dc9:	leave  
  442dca:	adc    al,0x8b
  442dcc:	cli    
  442dcd:	dec    ecx
  442dce:	mov    eax,DWORD PTR [edx]
  442dd0:	adc    bh,BYTE PTR [edi]
  442dd2:	idiv   edi
  442dd4:	shr    BYTE PTR [ebp+0x4d8b],1
  442dda:	dec    ebx
  442ddb:	lods   al,BYTE PTR ds:[esi]
  442ddc:	call   0xf7827096
  442de1:	xor    DWORD PTR [ebx-0x2b],0xffffff89
  442de5:	inc    ebp
  442de6:	push   ebx
  442de7:	xor    dl,BYTE PTR [ebx+ecx*4]
  442dea:	xor    BYTE PTR [edx],0x8b
  442ded:	add    dh,BYTE PTR [ebx+ebp*4-0x197c72f8]
  442df4:	add    dl,BYTE PTR [edx-0x5c]
  442df7:	mov    ds:0x561750f4,eax
  442dfc:	cmc    
  442dfd:	inc    DWORD PTR [eax]
  442dff:	bound  edi,QWORD PTR [eax+ecx*1-0x742b5c5a]
  442e06:	bound  ecx,QWORD PTR [edx-0x75]
  442e09:	push   ebp
  442e0a:	or     ebp,DWORD PTR [eax+0x11]
  442e0d:	mov    ebp,DWORD PTR [edx+0x32]
  442e10:	add    eax,0x33
  442e13:	addr16 cmp eax,0xe4aba4f4
  442e19:	sub    esi,0xffffffe2
  442e1c:	mov    DWORD PTR [ebp-0x2d],ecx
  442e1f:	dec    ecx
  442e20:	(bad)  
  442e21:	mov    esp,DWORD PTR [edx+0x3e]
  442e24:	add    edx,0x1b
  442e27:	addr16 dec ebp
  442e29:	loopne 0x442dc1
  442e2b:	in     al,dx
  442e2c:	idiv   edi
  442e2e:	mov    al,ds:0x6c5ddd69
  442e33:	sub    al,ah
  442e35:	int3   
  442e36:	cli    
  442e37:	push   0xe69b83e4
  442e3c:	push   0x2c0000f0
  442e41:	sahf   
  442e42:	add    bh,bh
  442e44:	and    bh,BYTE PTR [esi+0x672f43f4]
  442e4a:	cmp    eax,0x339d7f8
  442e4f:	inc    eax
  442e50:	das    
  442e51:	imul   edi,DWORD PTR ds:0x3645fff8,0x833d50fd
  442e5b:	les    esi,FWORD PTR [edi]
  442e5d:	addr16 cmp eax,0x10abb4fc
  442e63:	push   ecx
  442e64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442e65:	xchg   ebx,eax
  442e66:	add    al,0x52
  442e68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442e69:	mov    ds:0x93285008,eax
  442e6e:	hlt    
  442e6f:	mov    ecx,DWORD PTR [edx]
  442e71:	fwait
  442e72:	ret    
  442e73:	int3   
  442e74:	jmp    0x442e9f
  442e76:	(bad)  
  442e77:	int3   
  442e78:	jp     0x442ee3
  442e7a:	in     al,0xa1
  442e7c:	retf   
  442e7d:	cmp    DWORD PTR [ebx+0x0],eax
  442e80:	jmp    0x22cf9762
  442e85:	jb     0x442e7b
  442e87:	inc    ebx
  442e88:	das    
  442e89:	addr16 push eax
  442e8b:	add    DWORD PTR [ebp+0x2a508820],ebx
  442e91:	fwait
  442e92:	ret    
  442e93:	int3   
  442e94:	jmp    0x442ebf
  442e96:	(bad)  
  442e97:	int3   
  442e98:	jp     0x442f03
  442e9a:	in     al,0x83
  442e9c:	fucomi st,st(1)
  442e9e:	mov    eax,ds:0xa0c3b0
  442ea3:	mov    eax,DWORD PTR [eax]
  442ea5:	add    ch,bl
  442ea7:	lock leave 
  442ea9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442eab:	popf   
  442eac:	xor    BYTE PTR [ebx+0x3ed2687d],cl
  442eb2:	mov    ah,0xa5
  442eb4:	add    al,0x8b
  442eb6:	jge    0x442f1e
  442eb8:	inc    ebp
  442eb9:	hlt    
  442eba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442ebb:	mov    ds:0xe9f78bec,al
  442ec0:	mov    DWORD PTR [ebp-0x79],ecx
  442ec3:	push   0x92a6f84d
  442ec8:	hlt    
  442ec9:	mov    eax,0xde2e
  442ece:	mov    dl,0x1d
  442ed0:	ins    BYTE PTR es:[edi],dx
  442ed1:	inc    esp
  442ed2:	lods   al,BYTE PTR ds:[esi]
  442ed3:	mov    edx,0xe1e200f8
  442ed8:	xor    eax,eax
  442eda:	inc    esp
  442edb:	stc    
  442edc:	mov    ecx,DWORD PTR [ebp+0x47]
  442edf:	push   0x93041851
  442ee4:	or     BYTE PTR [ebp+0x16],dh
  442ee7:	imul   edi,DWORD PTR ds:0x4aaa4f8,0x8bda7789
  442ef1:	push   ebp
  442ef2:	daa    
  442ef3:	push   0xa0a6103d
  442ef8:	sbb    BYTE PTR [eax+0xde2e],bh
  442efe:	adc    al,0xd7
  442f00:	mov    ecx,DWORD PTR [ebp+0x7]
  442f03:	push   0x36628911
  442f08:	mov    eax,DWORD PTR [ebp+0x0]
  442f0b:	add    bh,dh
  442f0d:	idiv   DWORD PTR ds:0x33e262fc
  442f13:	rcl    ah,0xe2
  442f16:	jmp    0x442ecb
  442f18:	sbb    al,0x1e
  442f1a:	mov    esp,ebp
  442f1c:	jb     0x442f3d
  442f1e:	(bad)  
  442f1f:	int3   
  442f20:	sti    
  442f21:	sub    al,ah
  442f23:	int3   
  442f24:	repz sub al,ah
  442f27:	int3   
  442f28:	jmp    0x442f54
  442f2a:	(bad)  
  442f2b:	int3   
  442f2c:	pop    edx
  442f2d:	addr16 in al,0x83
  442f30:	fwait
  442f31:	(bad)  
  442f32:	mov    edi,0x30dea745
  442f37:	add    BYTE PTR [edi],ch
  442f39:	(bad)  
  442f3a:	cld    
  442f3b:	add    ebp,edi
  442f3d:	frstor [ecx+0x9f8b9c]
  442f43:	push   eax
  442f44:	xchg   edi,eax
  442f45:	(bad)  
  442f46:	hlt    
  442f47:	(bad)  
  442f48:	js     0x442fa9
  442f4a:	mov    esp,0xeca1a608
  442f4f:	push   0xffffffef
  442f51:	inc    bp
  442f53:	clc    
  442f54:	(bad)  
  442f55:	or     ax,0x5b7c
  442f59:	lahf   
  442f5a:	add    BYTE PTR [ebx+0x6a508ded],cl
  442f60:	das    
  442f61:	cmp    ecx,DWORD PTR [ebp-0xc]
  442f64:	mov    WORD PTR [edx+0x5f2f43f4],?
  442f6a:	xor    eax,0x9f3374
  442f6f:	add    BYTE PTR [eax],al
  442f71:	add    BYTE PTR [edx+0x2f02b8e3],ah
  442f77:	fiadd  WORD PTR [eax]
  442f79:	jmp    0x442f00
  442f7b:	addr16 add eax,0x9e2c00
  442f81:	mov    DWORD PTR [edx+0x2e],edi
  442f84:	push   0xdf0500
  442f89:	push   0x40df2f
  442f8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442f8f:	shr    BYTE PTR [esp+edi*8+0x6c],1
  442f93:	fiadd  WORD PTR [ecx+0xdf2fc2]
  442f99:	add    BYTE PTR [ebp+0x46],bh
  442f9c:	xchg   esi,eax
  442f9d:	(bad)  
  442f9e:	sar    BYTE PTR [edx],1
  442fa0:	add    esp,0x3b
  442fa3:	jbe    0x442fa5
  442fa5:	add    ebp,DWORD PTR [edi-0x22]
  442fa8:	and    eax,0xde2c00
  442fad:	mov    esp,DWORD PTR [edx]
  442faf:	mov    dl,0xf4
  442fb1:	inc    ebx
  442fb2:	das    
  442fb3:	pop    es
  442fb4:	leave  
  442fb5:	mov    DWORD PTR [edx],esi
  442fb7:	xor    ah,0x43
  442fba:	das    
  442fbb:	addr16 or eax,0x9e93a4
  442fc1:	push   edx
  442fc2:	into   
  442fc3:	mov    cl,0xf4
  442fc5:	inc    ebx
  442fc6:	das    
  442fc7:	mov    cs,WORD PTR [ebx-0x177380b3]
  442fcd:	popf   
  442fce:	jae    0x44300a
  442fd0:	test   DWORD PTR [ebx+0x158be973],0x39db0000
  442fda:	inc    ebx
  442fdb:	add    BYTE PTR [ecx+edx*4],ch
  442fde:	or     BYTE PTR [ecx+0x558b45fa],cl
  442fe4:	push   edi
  442fe5:	cmp    ah,dl
  442fe7:	mov    ecx,DWORD PTR [edx-0x68]
  442fea:	ret    
  442feb:	int3   
  442fec:	imul   ebp,DWORD PTR [ecx],0xffffffc4
  442fef:	int3   
  442ff0:	fisub  DWORD PTR [esi-0x1c]
  442ff3:	mov    esi,DWORD PTR [edx-0x1a]
  442ff6:	cmp    eax,DWORD PTR [ebp+0x33]
  442ff9:	lods   eax,DWORD PTR ds:[esi]
  442ffa:	dec    DWORD PTR [edx+0x5ebe672]
  443000:	add    al,0xde
  443002:	mov    eax,DWORD PTR [ebp+0x3b]
  443005:	fwait
  443006:	ret    
  443007:	int3   
  443008:	repz sub al,ah
  44300b:	int3   
  44300c:	jmp    0x443038
  44300e:	(bad)  
  44300f:	int3   
  443010:	pop    edx
  443011:	gs in  al,0x83
  443014:	fisttp DWORD PTR [edx]
  443016:	rol    BYTE PTR [ebp-0x1d],0xde
  44301a:	and    BYTE PTR [edi+ebp*1],al
  44301d:	gs cmp eax,0xd8a3a608
  443023:	mov    edi,DWORD PTR [edx+0x16]
  443026:	mov    edx,DWORD PTR [ebp+0x37]
  443029:	fst    QWORD PTR [ecx+0x3c]
  44302c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44302d:	xchg   ebx,eax
  44302e:	loopne 0x442fbb
  443030:	push   0x3e
  443032:	pop    es
  443033:	mov    bh,0xf7
  443035:	ror    DWORD PTR [ebx+0x3c6b8f55],1
  44303b:	or     al,BYTE PTR [eax]
  44303d:	add    BYTE PTR [edi],dh
  44303f:	addr16 cmp eax,0xfcd207e8
  443045:	aas    
  443046:	das    
  443047:	gs add eax,0x9d839c
  44304d:	push   ecx
  44304e:	xchg   DWORD PTR [ecx+0x5d70fffb],ebp
  443054:	mov    esp,0xf0a3b608
  443059:	push   0xffffffef
  44305b:	lds    eax,FWORD PTR [eax]
  44305d:	xor    BYTE PTR [edi],ch
  44305f:	fisubr WORD PTR [eax+0x0]
  443062:	psrad  mm0,QWORD PTR [eax]
  443065:	push   0x2f
  443067:	cmp    DWORD PTR [ebp-0x10],ecx
  44306a:	mov    dh,0xa3
  44306c:	fmul   QWORD PTR [ebx+0x428b3de2]
  443072:	fisttp DWORD PTR [ebp-0x70c8b275]
  443078:	mov    edx,DWORD PTR [ebp+0xb]
  44307b:	mov    eax,gs
  44307d:	rcr    DWORD PTR [edx],0x39
  443080:	test   DWORD PTR [ebx+0x45bfe9eb],0xde03
  44308a:	das    
  44308b:	inc    ebp
  44308c:	or     DWORD PTR [ebx-0x3f7ccd8e],ecx
  443092:	cs addr16 cmp eax,0xe0aab4f4
  443099:	sets   BYTE PTR [esi+0x328238fe]
  4430a0:	jae    0x4430fb
  4430a2:	add    BYTE PTR [eax],al
  4430a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4430a5:	mov    ds:0xd24783e8,al
  4430aa:	add    BYTE PTR [edx+ebp*2+0x65],dh
  4430ae:	inc    ebp
  4430af:	call   0x54e760
  4430b4:	cmp    edi,edx
  4430b6:	mov    edx,DWORD PTR [ebp-0x69]
  4430b9:	fs inc edx
  4430bb:	adc    BYTE PTR [edx+ebp*4-0x6017420],dh
  4430c2:	test   DWORD PTR [edi+edi*1+0x39],eax
  4430c6:	mov    ecx,DWORD PTR [ebp-0x71]
  4430c9:	in     al,dx
  4430ca:	shl    bh,cl
  4430cc:	(bad)  
  4430cd:	stc    
  4430ce:	mov    edx,DWORD PTR [ebp-0x71]
  4430d1:	call   0x8e77737d
  4430d6:	mov    eax,DWORD PTR [ebp+0x57]
  4430d9:	fs inc ebp
  4430db:	or     BYTE PTR [esi+eiz*4],ch
  4430de:	or     al,0x51
  4430e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4430e1:	xchg   edx,eax
  4430e2:	call   0x3861b72
  4430e7:	inc    edx
  4430e8:	cmp    ecx,DWORD PTR [esi+0x384255e8]
  4430ee:	test   DWORD PTR [ebx+0x4d8be973],0x28c15c47
  4430f8:	mov    dh,0xa9
  4430fa:	call   0x4da7eeea
  4430ff:	in     al,0x7d
  443101:	inc    esi
  443102:	push   es
  443103:	cld    
  443104:	adc    BYTE PTR [eax],bh
  443106:	add    esp,0x0
  443109:	add    BYTE PTR [ebx],dh
  44310b:	(bad)  
  44310c:	sbb    al,0x4
  44310e:	outs   dx,DWORD PTR ds:[esi]
  44310f:	fisub  WORD PTR [ecx+0x9bfb9c]
  443115:	push   eax
  443116:	pop    es
  443117:	fs cli 
  443119:	(bad)  
  44311a:	call   0xb64ced7a
  44311f:	mov    eax,ds:0x561a83d4
  443124:	hlt    
  443125:	inc    ebx
  443126:	das    
  443127:	fisubr WORD PTR [ebp+0xa]
  44312a:	mov    ah,0xe9
  44312c:	nop
  44312d:	cld    
  44312e:	ins    BYTE PTR es:[edi],dx
  44312f:	ficom  WORD PTR [ecx-0x1]
  443132:	bound  ebx,QWORD PTR [edx]
  443134:	cmp    DWORD PTR ds:0x433a97,0x2f
  44313b:	mov    cl,0x14
  44313d:	push   0xffffffef
  44313f:	lds    eax,FWORD PTR [eax]
  443141:	xor    BYTE PTR [edi],ch
  443143:	fimul  WORD PTR [ebx-0x74736cab]
  443149:	inc    ebp
  44314a:	(bad)  
  44314b:	arpl   WORD PTR [eax+0x34],cx
  44314e:	fidiv  WORD PTR [esi]
  443150:	dec    ebp
  443151:	lock int3 
  443153:	mov    dl,0xf4
  443155:	inc    ebx
  443156:	das    
  443157:	inc    ebx
  443158:	or     eax,0xc5ef6a
  44315d:	xor    BYTE PTR [edi],ch
  44315f:	fimul  WORD PTR [ebx+0x6a8c5b55]
  443165:	add    BYTE PTR [eax-0x6f],dl
  443168:	lock mov ds:0x4339c3,eax
  44316e:	add    BYTE PTR [eax],al
  443170:	lods   al,BYTE PTR ds:[esi]
  443171:	stc    
  443172:	ins    BYTE PTR es:[edi],dx
  443173:	cld    
  443174:	in     al,dx
  443175:	fld    QWORD PTR [eax]
  443177:	jne    0x443193
  443179:	les    eax,FWORD PTR [eax+0x68]
  44317c:	das    
  44317d:	out    dx,al
  44317e:	add    BYTE PTR [eax],al
  443180:	mov    ah,0xa0
  443182:	hlt    
  443183:	push   eax
  443184:	test   esi,ebx
  443186:	not    DWORD PTR [ebp+0x1f]
  443189:	jnp    0x4431f7
  44318b:	cld    
  44318c:	ins    BYTE PTR es:[edi],dx
  44318d:	fimul  WORD PTR [ebx+0x45650b4d]
  443193:	fsub   DWORD PTR [eax+edx*4+0x166a8bd8]
  44319a:	add    eax,DWORD PTR [edx+0x2b]
  44319d:	gs cmp eax,0xe0a8b4e0
  4431a3:	mov    edi,DWORD PTR [esi-0x72]
  4431a6:	push   edx
  4431a7:	mov    ebp,DWORD PTR [edx+0x42]
  4431aa:	push   eax
  4431ab:	mov    edi,DWORD PTR [edx]
  4431ad:	mov    dl,0xf4
  4431af:	inc    ebx
  4431b0:	das    
  4431b1:	(bad)  
  4431b2:	call   0xf77aed48
  4431b7:	sub    ebx,0xffffffe9
  4431ba:	mov    edx,DWORD PTR [ebp-0x71]
  4431bd:	pop    edx
  4431be:	mov    edx,0xde2fa4
  4431c3:	add    BYTE PTR [ebx],ah
  4431c5:	cmc    
  4431c6:	mov    eax,DWORD PTR [ebp-0x71]
  4431c9:	bound  eax,QWORD PTR [ebp-0x28]
  4431cc:	sub    al,0x66
  4431ce:	mov    al,ds:0x89de2f00
  4431d3:	dec    ebp
  4431d4:	add    BYTE PTR [eax],al
  4431d6:	mov    esp,DWORD PTR [edx+0x4d]
  4431d9:	loopne 0x4431a9
  4431db:	mov    cl,0xf4
  4431dd:	inc    ebx
  4431de:	das    
  4431df:	add    eax,DWORD PTR [ebx+0x34]
  4431e2:	mov    WORD PTR [ecx+0x632f43f4],es
  4431e8:	add    eax,0x9a53a4
  4431ed:	push   ecx
  4431ee:	mov    ah,0xd0
  4431f0:	ins    BYTE PTR es:[edi],dx
  4431f1:	cld    
  4431f2:	in     al,dx
  4431f3:	fst    QWORD PTR [edx-0x75]
  4431f6:	repnz dec ecx
  4431f8:	push   eax
  4431f9:	call   0x3b65b1
  4431fe:	lods   al,BYTE PTR ds:[esi]
  4431ff:	sbb    al,BYTE PTR [ebx+ecx*4]
  443202:	jb     0x443242
  443204:	mov    edx,DWORD PTR ds:0x4332a3
  44320a:	sub    al,0x8f
  44320c:	sub    BYTE PTR [ecx+0x43f46a22],cl
  443212:	das    
  443213:	popa   
  443214:	xor    eax,0xa1fb98
  443219:	add    BYTE PTR [edx+0x2],bh
  44321c:	mov    ds:0xa1eb74,al
  443221:	push   eax
  443222:	mov    ah,0xe3
  443224:	lods   al,BYTE PTR ds:[esi]
  443225:	cld    
  443226:	ins    BYTE PTR es:[edi],dx
  443227:	ficom  WORD PTR [ecx-0x75]
  44322a:	cmp    cl,BYTE PTR [esi-0xc]
  44322d:	inc    ebx
  44322e:	das    
  44322f:	nop
  443230:	call   0xf779f5aa
  443235:	xor    ebx,0xffffffe2
  443238:	mov    eax,ds:0xb3000074
  44323d:	mov    eax,ds:0x9d975000
  443242:	stc    
  443243:	jmp    DWORD PTR [eax-0x7bfb439f]
  443249:	mov    esi,0x9e2b3468
  44324e:	add    BYTE PTR [ebx+0x43f4523a],cl
  443254:	das    
  443255:	(bad)
  443259:	xor    eax,0xe66b83f7
  44325e:	mov    DWORD PTR [ebp-0x7d],eax
  443261:	imul   ecx,DWORD PTR ds:0xa16374,0xe09ba452
  44326b:	mov    esp,DWORD PTR [edx]
  44326d:	stos   BYTE PTR es:[edi],al
  44326e:	hlt    
  44326f:	inc    ebx
  443270:	das    
  443271:	loope  0x4432bb
  443273:	sub    dh,bl
  443275:	push   0xa13b900d
  44327a:	add    BYTE PTR [edx+0x47],dl
  44327d:	or     ebp,esi
  44327f:	jmp    FWORD PTR [eax]
  443281:	popa   
  443282:	mov    esp,0xf44dce0c
  443287:	inc    ebx
  443288:	das    
  443289:	fcomi  st,st(0)
  44328b:	stc    
  44328c:	sub    al,0xde
  44328e:	mov    ds:0xa10bbc,eax
  443293:	lea    esi,[edx+0x36]
  443296:	push   ecx
  443297:	push   0x6f
  443299:	enter  0x8afe,0x1a
  44329d:	jb     0x443293
  44329f:	inc    ebx
  4432a0:	add    BYTE PTR [eax],al
  4432a2:	das    
  4432a3:	nop
  4432a4:	not    DWORD PTR [ebp-0x5]
  4432a7:	inc    ebp
  4432a8:	loop   0x4432a5
  4432aa:	fdiv   DWORD PTR [eax+edi*4]
  4432ad:	add    DWORD PTR [edi],ebp
  4432af:	fiadd  WORD PTR [eax]
  4432b1:	mov    edx,edx
  4432b3:	xchg   edx,eax
  4432b4:	ret    0x2f04
  4432b7:	and    al,ah
  4432b9:	int3   
  4432ba:	jmp    0x4432dd
  4432bc:	(bad)  
  4432bd:	int3   
  4432be:	pop    edx
  4432bf:	imul   esp,esp,0x8be5f28b
  4432c5:	inc    eax
  4432c6:	mov    ds:0x6bccc392,eax
  4432cb:	and    esp,eax
  4432cd:	int3   
  4432ce:	cli    
  4432cf:	push   0x8ce153e4
  4432d4:	mov    edi,DWORD PTR ds:0x4331af
  4432da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4432db:	rol    BYTE PTR [esp+edi*8+0x358bddec],cl
  4432e2:	out    0x31,eax
  4432e4:	inc    ebx
  4432e5:	add    BYTE PTR [eax],al
  4432e7:	xchg   esp,eax
  4432e8:	pop    ebx
  4432e9:	pop    ebp
  4432ea:	ins    BYTE PTR es:[edi],dx
  4432eb:	and    esp,eax
  4432ed:	int3   
  4432ee:	cli    
  4432ef:	push   0x99d751e4
  4432f4:	cld    
  4432f5:	aas    
  4432f6:	das    
  4432f7:	jg     0x44328d
  4432f9:	cld    
  4432fa:	in     al,dx
  4432fb:	fst    QWORD PTR [eax-0x18]
  4432fe:	xor    DWORD PTR ds:0x1aacfff7,0x8
  443305:	mov    DWORD PTR [eax],eax
  443307:	add    BYTE PTR [edx+0x32],ch
  44330a:	mov    ecx,DWORD PTR [ebp+0x27]
  44330d:	lea    ebp,[edx+0x0]
  443310:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443311:	leave  
  443312:	mov    eax,0x52de6cfc
  443317:	call   FWORD PTR [edx+0x32]
  44331a:	mov    esp,ebp
  44331c:	pop    edx
  44331d:	pop    ds
  44331e:	(bad)  
  44331f:	int3   
  443320:	pop    edx
  443321:	addr16 in al,0x83
  443324:	(bad)  
  443326:	mov    edi,0xdee745
  44332b:	add    BYTE PTR [edi],ch
  44332d:	sbb    edi,DWORD PTR ds:0xde57dc
  443333:	add    al,dh
  443335:	cdq    
  443336:	in     al,dx
  443337:	add    DWORD PTR [edi],ebp
  443339:	fiadd  WORD PTR [eax]
  44333b:	(bad)  
  44333c:	jb     0x443370
  44333e:	add    BYTE PTR [eax],al
  443340:	das    
  443341:	fidivr WORD PTR [edi+0xde9345]
  443347:	add    BYTE PTR [edi],ch
  443349:	addr16 inc ebp
  44334b:	or     BYTE PTR [esi-0x13036f1f],ah
  443351:	fucomp st(0)
  443353:	test   eax,0xa1f73380
  443358:	lahf   
  443359:	xor    al,BYTE PTR [ebx+0x0]
  44335c:	push   edx
  44335d:	xor    esi,edi
  44335f:	add    BYTE PTR [edi],ch
  443361:	stos   BYTE PTR es:[edi],al
  443362:	add    al,0xc7
  443364:	xor    dl,BYTE PTR [esi-0xc]
  443367:	inc    ebx
  443368:	das    
  443369:	fiadd  WORD PTR [eax]
  44336b:	add    BYTE PTR [eax],al
  44336d:	add    BYTE PTR [edi],ch
  44336f:	inc    edi
  443370:	or     al,bh
  443372:	sub    dl,BYTE PTR [esi-0xc]
  443375:	inc    ebx
  443376:	das    
  443377:	fld    QWORD PTR [eax]
  443379:	add    BYTE PTR [edi],ch
  44337b:	pop    edi
  44337c:	xor    eax,0x9f3b90
  443381:	add    BYTE PTR [edx-0x38fa4019],bh
  443387:	xor    DWORD PTR [ebx+0x0],eax
  44338a:	das    
  44338b:	fiadd  WORD PTR [eax]
  44338d:	add    BYTE PTR [eax+esi*8-0x21930368],ch
  443394:	add    BYTE PTR [ebp+0x3a],dh
  443397:	enter  0xff00,0x1a
  44339b:	mov    esi,0x7f2f43f4
  4433a0:	nop
  4433a1:	cld    
  4433a2:	ins    BYTE PTR es:[edi],dx
  4433a3:	fimul  WORD PTR [ebx+0x4331bf0d]
  4433a9:	add    BYTE PTR [esi+0x428be8a0],dh
  4433af:	dec    esi
  4433b0:	hlt    
  4433b1:	inc    ebx
  4433b2:	das    
  4433b3:	addr16 cmp eax,0x34a02ce8
  4433b9:	mov    DWORD PTR [edx+0x46],ebp
  4433bc:	mov    ecx,DWORD PTR [ebp-0x39]
  4433bf:	fs add eax,0x9eb37c
  4433c5:	push   0x40d9ff
  4433ca:	mov    al,ds:0xecfc60c8
  4433cf:	frstor [ebx-0x6cffff64]
  4433d5:	sahf   
  4433d6:	add    bh,al
  4433d8:	xor    al,BYTE PTR [edx-0x56d0bc0c]
  4433de:	cld    
  4433df:	aas    
  4433e0:	das    
  4433e1:	(bad)  
  4433e2:	pusha  
  4433e3:	add    al,0xef
  4433e5:	fisttp QWORD PTR [ebx+0x4331cb15]
  4433eb:	add    ch,bh
  4433ed:	inc    ebp
  4433ee:	ret    0x58f7
  4433f1:	xor    al,BYTE PTR [ebx-0x5780d83c]
  4433f7:	cld    
  4433f8:	in     al,dx
  4433f9:	(bad)  
  4433fb:	adc    eax,0x433197
  443400:	mov    WORD PTR [ebp-0xc],?
  443403:	inc    ebx
  443404:	das    
  443405:	jge    0x4433ab
  443407:	cld    
  443408:	ins    BYTE PTR es:[edi],dx
  443409:	ficom  WORD PTR [eax-0x18]
  44340c:	(bad)  [eax]
  44340e:	idiv   edi
  443410:	lods   al,BYTE PTR ds:[esi]
  443411:	sbb    bh,ah
  443413:	mov    BYTE PTR [edx+0x2e],ch
  443416:	mov    ecx,DWORD PTR [ebp-0x1]
  443419:	(bad)
  44341d:	xor    dh,bh
  44341f:	xor    ebx,0xffffffda
  443422:	mov    ds:0x9df394,eax
  443427:	mov    eax,DWORD PTR [edx+0x2f6a522e]
  44342d:	jg     0x4433bb
  44342f:	cld    
  443430:	ins    BYTE PTR es:[edi],dx
  443431:	ficom  WORD PTR [eax-0x18]
  443434:	mov    bl,0x29
  443436:	idiv   edi
  443438:	add    BYTE PTR [eax],al
  44343a:	lods   al,BYTE PTR ds:[esi]
  44343b:	sbb    al,BYTE PTR [ebx+ecx*4]
  44343e:	jb     0x44346e
  443440:	mov    DWORD PTR [ebp-0x31],ecx
  443443:	gs dec ebp
  443445:	cld    
  443446:	hlt    
  443447:	mov    dh,al
  443449:	jae    0x443450
  44344b:	gs cmp eax,0x4564ffe0
  443451:	fdiv   st(6),st
  443453:	inc    ebp
  443454:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443455:	sti    
  443456:	nop
  443457:	xor    DWORD PTR [ebx-0x5f82c83c],eax
  44345d:	cld    
  44345e:	in     al,dx
  44345f:	fisttp QWORD PTR [ebx+0x4332cf15]
  443465:	add    ch,bl
  443467:	jle    0x44340d
  443469:	cld    
  44346a:	in     al,dx
  44346b:	fld    QWORD PTR [ebx]
  44346d:	inc    ebp
  44346e:	dec    ebx
  44346f:	mov    cs,WORD PTR [ebx+0x4332c30d]
  443475:	add    BYTE PTR [ebx+eiz*4],ch
  443478:	hlt    
  443479:	push   ecx
  44347a:	push   edi
  44347b:	or     ecx,edi
  44347d:	inc    DWORD PTR [eax+0x5d]
  443480:	mov    esp,0xec8ba40c
  443485:	add    ebx,edx
  443487:	adc    DWORD PTR [ebx],eax
  443489:	push   ebp
  44348a:	adc    esp,DWORD PTR [edi+0x4d]
  44348d:	in     al,0xb4
  44348f:	call   0x4589:0x127203f4
  443496:	adc    esp,DWORD PTR [ebp+0x45]
  443499:	loopne 0x4434ef
  44349b:	jecxz  0x44343d
  44349d:	cld    
  44349e:	add    BYTE PTR [eax],al
  4434a0:	ins    BYTE PTR es:[edi],dx
  4434a1:	fimul  WORD PTR [ecx-0x69baf0b3]
  4434a7:	(bad)  
  4434a8:	push   0x36
  4434aa:	add    BYTE PTR [eax],al
  4434ac:	das    
  4434ad:	fsubp  st(3),st
  4434af:	or     DWORD PTR [edx+ecx*4-0x26127c08],esi
  4434b6:	mov    DWORD PTR [ebp-0x29],edx
  4434b9:	fs cmp eax,0xf09b04f8
  4434bf:	jae    0x4434c8
  4434c1:	gs add eax,0x9cbb94
  4434c7:	add    esp,DWORD PTR [edx+0x36]
  4434ca:	mov    edx,DWORD PTR [ecx]
  4434cc:	sub    al,0x8b
  4434ce:	clc    
  4434cf:	mov    eax,ds:0x4331bb
  4434d4:	sub    al,0x9b
  4434d6:	clc    
  4434d7:	mov    DWORD PTR [edi],edi
  4434d9:	gs inc ebp
  4434db:	clc    
  4434dc:	scas   al,BYTE PTR es:[edi]
  4434dd:	push   ds
  4434de:	jmp    0x8c2263e6
  4434e3:	adc    eax,0x4331a3
  4434e8:	sub    al,0x8b
  4434ea:	clc    
  4434eb:	xor    esi,DWORD PTR ds:0xecfc8c7f
  4434f1:	fld    QWORD PTR [ebx]
  4434f3:	inc    ebp
  4434f4:	push   edi
  4434f5:	data16 or bl,ch
  4434f8:	cwde   
  4434f9:	and    ax,0x4b84
  4434fd:	pushf  
  4434fe:	add    BYTE PTR [ecx+0x43f45e02],cl
  443504:	add    BYTE PTR [eax],al
  443506:	das    
  443507:	in     eax,dx
  443508:	leave  
  443509:	mov    edx,edi
  44350b:	mov    ch,0xf4
  44350d:	inc    ebx
  44350e:	das    
  44350f:	jmp    0x4434da
  443511:	mov    DWORD PTR [edx+0x62],eax
  443514:	hlt    
  443515:	inc    ebx
  443516:	das    
  443517:	inc    esi
  443518:	inc    esi
  443519:	not    DWORD PTR [eax]
  44351b:	xor    BYTE PTR [ebp+0x4332380d],al
  443521:	add    BYTE PTR [esi+0x2fb9f8a1],dh
  443527:	fild   DWORD PTR [eax+0x0]
  44352a:	scas   al,BYTE PTR es:[edi]
  44352b:	inc    ebp
  44352c:	add    BYTE PTR [ebx],al
  44352e:	das    
  44352f:	fimul  WORD PTR [ebx-0x2dfc18ab]
  443535:	mov    DWORD PTR [edx+0x66],eax
  443538:	hlt    
  443539:	inc    ebx
  44353a:	das    
  44353b:	jge    0x4434c5
  44353d:	cld    
  44353e:	ins    BYTE PTR es:[edi],dx
  44353f:	ficom  WORD PTR [eax-0x18]
  443542:	sub    esi,DWORD PTR [edi+esi*8]
  443545:	jmp    FWORD PTR [edx+ebx*1+0x4a228afc]
  44354c:	hlt    
  44354d:	inc    ebx
  44354e:	das    
  44354f:	(bad)  
  443550:	call   0xf773db2a
  443555:	test   DWORD PTR [edi-0x57],ebp
  443558:	cld    
  443559:	xor    ch,BYTE PTR [edi+0x43]
  44355c:	sub    cl,BYTE PTR [ebx+0x43f45a52]
  443562:	das    
  443563:	pop    ebx
  443564:	mov    esp,0x98f1ac04
  443569:	cld    
  44356a:	add    BYTE PTR [eax],al
  44356c:	in     al,dx
  44356d:	fld    QWORD PTR [eax]
  44356f:	je     0x4435a7
  443571:	jge    0x4435df
  443573:	cld    
  443574:	in     al,dx
  443575:	fisttp QWORD PTR [ecx-0x1725ecbc]
  44357b:	pop    ebp
  44357c:	push   edx
  44357d:	das    
  44357e:	test   DWORD PTR [ebx+0x43f46a22],0x33c38c2f
  443588:	outs   dx,DWORD PTR ds:[esi]
  443589:	arpl   bp,bx
  44358b:	pop    ebp
  44358c:	ins    BYTE PTR es:[edi],dx
  44358d:	and    al,ah
  44358f:	int3   
  443590:	das    
  443591:	fiadd  WORD PTR [eax]
  443593:	add    BYTE PTR [edi],ch
  443595:	fiadd  WORD PTR [eax]
  443597:	add    BYTE PTR [edi],ch
  443599:	fiadd  WORD PTR [eax]
  44359b:	add    BYTE PTR [edi],ch
  44359d:	fiadd  WORD PTR [eax]
  44359f:	add    BYTE PTR [edi],ch
  4435a1:	fiadd  WORD PTR [eax]
  4435a3:	add    BYTE PTR [edi],ch
  4435a5:	fiadd  WORD PTR [eax]
  4435a7:	add    BYTE PTR [edi],ch
  4435a9:	fiadd  WORD PTR [eax]
  4435ab:	add    BYTE PTR [edi],ch
  4435ad:	fiadd  WORD PTR [eax]
  4435af:	add    BYTE PTR [edi],ch
  4435b1:	fiadd  WORD PTR [eax]
  4435b3:	add    BYTE PTR [edi],ch
  4435b5:	fiadd  WORD PTR [eax]
  4435b7:	add    BYTE PTR [edi],ch
  4435b9:	fiadd  WORD PTR [eax]
  4435bb:	add    BYTE PTR [edi],ch
  4435bd:	fiadd  WORD PTR [eax]
  4435bf:	add    BYTE PTR [edi],ch
  4435c1:	fiadd  WORD PTR [eax]
  4435c3:	add    BYTE PTR [edi],ch
  4435c5:	fiadd  WORD PTR [eax]
  4435c7:	add    BYTE PTR [edi],ch
  4435c9:	fiadd  WORD PTR [eax]
  4435cb:	add    BYTE PTR [edi],ch
  4435cd:	fiadd  WORD PTR [eax]
  4435cf:	add    BYTE PTR [eax],al
  4435d1:	add    BYTE PTR [edi],ch
  4435d3:	fiadd  WORD PTR [eax]
  4435d5:	add    BYTE PTR [edi],ch
  4435d7:	fiadd  WORD PTR [eax]
  4435d9:	add    BYTE PTR [edi],ch
  4435db:	fiadd  WORD PTR [eax]
  4435dd:	add    BYTE PTR [edi],ch
  4435df:	fiadd  WORD PTR [eax]
  4435e1:	add    BYTE PTR [edi],ch
  4435e3:	fiadd  WORD PTR [eax]
  4435e5:	add    BYTE PTR [edi],ch
  4435e7:	fiadd  WORD PTR [eax]
  4435e9:	add    BYTE PTR [edi],ch
  4435eb:	fiadd  WORD PTR [eax]
  4435ed:	add    BYTE PTR [edi],ch
  4435ef:	fiadd  WORD PTR [eax]
  4435f1:	add    BYTE PTR [edi],ch
  4435f3:	fiadd  WORD PTR [eax]
  4435f5:	add    BYTE PTR [edi],ch
  4435f7:	fiadd  WORD PTR [eax]
  4435f9:	add    BYTE PTR [edi],ch
  4435fb:	fiadd  WORD PTR [eax]
  4435fd:	add    BYTE PTR [edi],ch
  4435ff:	fiadd  WORD PTR [eax]
  443601:	add    BYTE PTR [edi],ch
  443603:	fiadd  WORD PTR [eax]
  443605:	add    BYTE PTR [edi],ch
  443607:	fiadd  WORD PTR [eax]
  443609:	add    BYTE PTR [edi],ch
  44360b:	fiadd  WORD PTR [eax]
  44360d:	add    BYTE PTR [edi],ch
  44360f:	fiadd  WORD PTR [eax]
  443611:	add    BYTE PTR [edi],ch
  443613:	fiadd  WORD PTR [eax]
  443615:	add    BYTE PTR [edi],ch
  443617:	fiadd  WORD PTR [eax]
  443619:	add    BYTE PTR [edi],ch
  44361b:	fiadd  WORD PTR [eax]
  44361d:	add    BYTE PTR [edi],ch
  44361f:	fiadd  WORD PTR [eax]
  443621:	add    BYTE PTR [edi],ch
  443623:	fiadd  WORD PTR [eax]
  443625:	add    BYTE PTR [edi],ch
  443627:	fiadd  WORD PTR [eax]
  443629:	add    BYTE PTR [edi],ch
  44362b:	fiadd  WORD PTR [eax]
  44362d:	add    BYTE PTR [edi],ch
  44362f:	fiadd  WORD PTR [eax]
  443631:	add    BYTE PTR [edi],ch
  443633:	fiadd  WORD PTR [eax]
  443635:	add    BYTE PTR [eax],al
  443637:	add    BYTE PTR [edi],ch
  443639:	fiadd  WORD PTR [eax]
  44363b:	add    BYTE PTR [edi],ch
  44363d:	fiadd  WORD PTR [eax]
  44363f:	add    BYTE PTR [eax],al
  443641:	add    al,0x0
  443643:	add    BYTE PTR [edi],ch
  443645:	fiadd  WORD PTR [eax]
  443647:	add    BYTE PTR [edi],ah
  443649:	fiadd  WORD PTR [eax]
  44364b:	add    BYTE PTR [ebx-0x5ccc6f13],dh
  443651:	in     eax,dx
  443652:	cwde   
  443653:	xor    edx,DWORD PTR [ebx-0x2ccc5f13]
  443659:	in     eax,dx
  44365a:	test   al,0x33
  44365c:	das    
  44365d:	add    eax,DWORD PTR cs:[eax]
  443660:	fiadd  WORD PTR [eax]
  443663:	add    BYTE PTR [edi+ebp*8-0x1080ce15],ch
  44366a:	cli    
  44366b:	xor    DWORD PTR [eax+0x293208ef],eax
  443671:	in     al,dx
  443672:	xor    esi,DWORD PTR [edx]
  443674:	xor    esp,ebp
  443676:	dec    eax
  443677:	xor    dl,bl
  443679:	jmp    0x443608
  44367b:	xor    dl,BYTE PTR [esp+ebp*8-0x1369cd4f]
  443682:	cmp    eax,0x27e9eb33
  443687:	xor    eax,0x3535eb1a
  44368c:	retf   
  44368d:	jmp    0x361e:0xebb0356d
  443694:	or     al,0xe8
  443696:	cmp    esi,DWORD PTR [esi]
  443698:	jbe    0x443682
  44369a:	dec    edi
  44369b:	ss sub al,0x6c
  44369f:	ss popf 
  4436a1:	call   0xe8026d2c
  4436a6:	cdq    
  4436a7:	add    BYTE PTR ss:[eax],al
  4436aa:	test   al,0xe7
  4436ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4436ad:	ss (bad) 
  4436af:	out    0x21,eax
  4436b1:	aaa    
  4436b2:	push   eax
  4436b3:	jmp    0xe9486e9e
  4436b8:	std    
  4436b9:	aaa    
  4436ba:	xor    esi,esp
  4436bc:	adc    BYTE PTR [eax],bh
  4436be:	adc    ah,dh
  4436c0:	inc    esp
  4436c1:	cmp    BYTE PTR [ebp-0x1a],ah
  4436c4:	bound  edi,QWORD PTR [eax]
  4436c6:	stos   BYTE PTR es:[edi],al
  4436c7:	in     eax,0xb1
  4436c9:	cmp    BYTE PTR [esi-0x16c7401b],al
  4436cf:	in     eax,0xdc
  4436d1:	cmp    dl,dl
  4436d3:	in     eax,0xeb
  4436d5:	cmp    BYTE PTR [ebp+eiz*8-0x18d1c706],bh
  4436dc:	(bad)  
  4436de:	inc    eax
  4436df:	out    0x25,eax
  4436e1:	cmp    DWORD PTR [eax-0x19],esp
  4436e4:	inc    ecx
  4436e5:	cmp    esp,esp
  4436e7:	out    0x59,al
  4436e9:	cmp    DWORD PTR [edi+eiz*8],ecx
  4436ec:	jno    0x443727
  4436ee:	xlat   BYTE PTR ds:[ebx]
  4436ef:	out    0xae,al
  4436f1:	cmp    ebx,eax
  4436f3:	out    0xc5,al
  4436f5:	cmp    DWORD PTR [ebp-0x1a],esp
  4436f8:	loop   0x443733
  4436fa:	dec    ecx
  4436fb:	in     al,0x28
  4436fd:	cmp    bl,BYTE PTR [edx]
  4436ff:	in     al,0x41
  443701:	cmp    ah,ah
  443703:	jecxz  0x443759
  443705:	cmp    dh,cl
  443707:	jecxz  0x443772
  443709:	cmp    bl,cl
  44370b:	jecxz  0x443781
  44370d:	cmp    al,BYTE PTR [eax]
  44370f:	add    dl,al
  443711:	jecxz  0x4436a2
  443713:	cmp    ah,BYTE PTR [ebx-0x6fc5651d]
  443719:	jecxz  0x4436c0
  44371b:	cmp    dl,dh
  44371d:	in     al,0xae
  44371f:	cmp    bl,bl
  443721:	in     al,0xc2
  443723:	cmp    ah,bh
  443725:	in     al,0xcd
  443727:	cmp    bh,ch
  443729:	in     al,0xef
  44372b:	cmp    al,BYTE PTR ds:0x533b26e5
  443731:	jecxz  0x443765
  443733:	cmp    edi,DWORD PTR [ebx]
  443735:	jecxz  0x44379d
  443737:	cmp    esp,DWORD PTR [ebx+eiz*8-0x1c64c468]
  44373e:	mov    dh,0x3b
  443740:	in     al,dx
  443741:	jecxz  0x44370c
  443743:	cmp    edi,esi
  443745:	jecxz  0x443720
  443747:	cmp    ecx,ebx
  443749:	jecxz  0x443737
  44374b:	cmp    ecx,edx
  44374d:	jecxz  0x443751
  44374f:	cmp    al,0x1e
  443751:	loop   0x443778
  443753:	cmp    al,0x9
  443755:	loop   0x44378d
  443757:	cmp    al,0x6a
  443759:	loop   0x44375b
  44375b:	add    BYTE PTR [edi],ch
  44375d:	fiadd  WORD PTR [eax]
  44375f:	add    BYTE PTR [edi],ch
  443761:	fiadd  WORD PTR [eax]
  443763:	add    BYTE PTR [edi],ch
  443765:	fiadd  WORD PTR [eax]
  443767:	add    BYTE PTR [edi],ch
  443769:	fiadd  WORD PTR [eax]
  44376b:	add    BYTE PTR [edi],ch
  44376d:	fiadd  WORD PTR [eax]
  44376f:	add    BYTE PTR [edi],ch
  443771:	fiadd  WORD PTR [eax]
  443773:	add    BYTE PTR [eax],al
  443775:	add    BYTE PTR [edi],ch
  443777:	fiadd  WORD PTR [eax]
  443779:	add    BYTE PTR [edi],ch
  44377b:	fiadd  WORD PTR [eax]
  44377d:	add    BYTE PTR [edi],ch
  44377f:	fiadd  WORD PTR [eax]
  443781:	add    BYTE PTR [edi],ch
  443783:	fiadd  WORD PTR [eax]
  443785:	add    BYTE PTR [edi],ch
  443787:	fiadd  WORD PTR [eax]
  443789:	add    BYTE PTR [edi],ch
  44378b:	fiadd  WORD PTR [eax]
  44378d:	add    BYTE PTR [edi],ch
  44378f:	fiadd  WORD PTR [eax]
  443791:	add    BYTE PTR [edi],ch
  443793:	fiadd  WORD PTR [eax]
  443795:	add    BYTE PTR [edi],ch
  443797:	fiadd  WORD PTR [eax]
  443799:	add    BYTE PTR [edi],ch
  44379b:	fiadd  WORD PTR [eax]
  44379d:	add    BYTE PTR [edi],ch
  44379f:	fiadd  WORD PTR [eax]
  4437a1:	add    BYTE PTR [edi],ch
  4437a3:	fiadd  WORD PTR [eax]
  4437a5:	add    BYTE PTR [edi],ch
  4437a7:	fiadd  WORD PTR [eax]
  4437a9:	add    BYTE PTR [edi],ch
  4437ab:	fiadd  WORD PTR [eax]
  4437ad:	add    BYTE PTR [edi],ch
  4437af:	fiadd  WORD PTR [eax]
  4437b1:	add    BYTE PTR [edi],ch
  4437b3:	fiadd  WORD PTR [eax]
  4437b5:	add    BYTE PTR [edi],ch
  4437b7:	fiadd  WORD PTR [eax]
  4437b9:	add    BYTE PTR [edi],ch
  4437bb:	fiadd  WORD PTR [eax]
  4437bd:	add    BYTE PTR [edi],ch
  4437bf:	fiadd  WORD PTR [eax]
  4437c1:	add    BYTE PTR [edi],ch
  4437c3:	fiadd  WORD PTR [eax]
  4437c5:	add    BYTE PTR [edi],ch
  4437c7:	fiadd  WORD PTR [eax]
  4437c9:	add    BYTE PTR [edi],ch
  4437cb:	fiadd  WORD PTR [eax]
  4437cd:	add    BYTE PTR [edi],ch
  4437cf:	fiadd  WORD PTR [eax]
  4437d1:	add    BYTE PTR [edi],ch
  4437d3:	fiadd  WORD PTR [eax]
  4437d5:	add    BYTE PTR [edi],ch
  4437d7:	fiadd  WORD PTR [eax]
  4437d9:	add    BYTE PTR [eax],al
  4437db:	add    BYTE PTR [edi],ch
  4437dd:	fiadd  WORD PTR [eax]
  4437df:	add    BYTE PTR [edi],ch
  4437e1:	fiadd  WORD PTR [eax]
  4437e3:	add    BYTE PTR [edi],ch
  4437e5:	fiadd  WORD PTR [eax]
  4437e7:	add    BYTE PTR [edi],ch
  4437e9:	fiadd  WORD PTR [eax]
  4437eb:	add    BYTE PTR [edi],ch
  4437ed:	fiadd  WORD PTR [eax]
  4437ef:	add    BYTE PTR [edi],ch
  4437f1:	fiadd  WORD PTR [eax]
  4437f3:	add    BYTE PTR [edi],ch
  4437f5:	fiadd  WORD PTR [eax]
  4437f7:	add    BYTE PTR [edi],ch
  4437f9:	fiadd  WORD PTR [eax]
  4437fb:	add    BYTE PTR [edi],ch
  4437fd:	fiadd  WORD PTR [eax]
  4437ff:	add    BYTE PTR [edi],ch
  443801:	fiadd  WORD PTR [eax]
  443803:	add    BYTE PTR [edi],ch
  443805:	fiadd  WORD PTR [eax]
  443807:	add    BYTE PTR [edi],ch
  443809:	fiadd  WORD PTR [eax]
  44380b:	add    BYTE PTR [edi],ch
  44380d:	fiadd  WORD PTR [eax]
  44380f:	add    BYTE PTR [edi],ch
  443811:	fiadd  WORD PTR [eax]
  443813:	add    BYTE PTR [edi],ch
  443815:	fiadd  WORD PTR [eax]
  443817:	add    BYTE PTR [edi],ch
  443819:	fiadd  WORD PTR [eax]
  44381b:	add    BYTE PTR [edi],ch
  44381d:	fiadd  WORD PTR [eax]
  44381f:	add    BYTE PTR [edi],ch
  443821:	fiadd  WORD PTR [eax]
  443823:	add    BYTE PTR [edi],ch
  443825:	fiadd  WORD PTR [eax]
  443827:	add    BYTE PTR [edi],ch
  443829:	fiadd  WORD PTR [eax]
  44382b:	add    BYTE PTR [edi],ch
  44382d:	fiadd  WORD PTR [eax]
  44382f:	add    BYTE PTR [edi],ch
  443831:	fiadd  WORD PTR [eax]
  443833:	add    BYTE PTR [edi],ch
  443835:	fiadd  WORD PTR [eax]
  443837:	add    BYTE PTR [edi],ch
  443839:	fiadd  WORD PTR [eax]
  44383b:	add    BYTE PTR [edi],ch
  44383d:	fiadd  WORD PTR [eax]
  44383f:	add    BYTE PTR [eax],al
  443841:	add    BYTE PTR [edi],ch
  443843:	fiadd  WORD PTR [eax]
  443845:	add    BYTE PTR [edi],ch
  443847:	fiadd  WORD PTR [eax]
  443849:	add    BYTE PTR [edi],ch
  44384b:	fiadd  WORD PTR [eax]
  44384d:	add    BYTE PTR [edi],ch
  44384f:	fiadd  WORD PTR [eax]
  443851:	add    BYTE PTR [edi],ch
  443853:	fiadd  WORD PTR [eax]
  443855:	add    BYTE PTR [edi],ch
  443857:	fiadd  WORD PTR [eax]
  443859:	add    BYTE PTR [edi],ch
  44385b:	fiadd  WORD PTR [eax]
  44385d:	add    BYTE PTR [edi],ch
  44385f:	fiadd  WORD PTR [eax]
  443861:	add    BYTE PTR [edi],ch
  443863:	fiadd  WORD PTR [eax]
  443865:	add    BYTE PTR [edi],ch
  443867:	fiadd  WORD PTR [eax]
  443869:	add    BYTE PTR [edi],ch
  44386b:	fiadd  WORD PTR [eax]
  44386d:	add    BYTE PTR [edi],ch
  44386f:	fiadd  WORD PTR [eax]
  443871:	add    BYTE PTR [edi],ch
  443873:	fiadd  WORD PTR [eax]
  443875:	add    BYTE PTR [edi],ch
  443877:	fiadd  WORD PTR [eax]
  443879:	add    BYTE PTR [edi],ch
  44387b:	fiadd  WORD PTR [eax]
  44387d:	add    BYTE PTR [edi],ch
  44387f:	fiadd  WORD PTR [eax]
  443881:	add    BYTE PTR [edi],ch
  443883:	fiadd  WORD PTR [eax]
  443885:	add    BYTE PTR [edi],ch
  443887:	fiadd  WORD PTR [eax]
  443889:	add    BYTE PTR [edi],ch
  44388b:	fiadd  WORD PTR [eax]
  44388d:	add    BYTE PTR [edi],ch
  44388f:	fiadd  WORD PTR [eax]
  443891:	add    BYTE PTR [edi],ch
  443893:	fiadd  WORD PTR [eax]
  443895:	add    BYTE PTR [edi],ch
  443897:	fiadd  WORD PTR [eax]
  443899:	add    BYTE PTR [edi],ch
  44389b:	fiadd  WORD PTR [eax]
  44389d:	add    BYTE PTR [edi],ch
  44389f:	fiadd  WORD PTR [eax]
  4438a1:	add    BYTE PTR [edi],ch
  4438a3:	fiadd  WORD PTR [eax]
  4438a5:	add    BYTE PTR [eax],al
  4438a7:	add    BYTE PTR [edi],ch
  4438a9:	fiadd  WORD PTR [eax]
  4438ab:	add    BYTE PTR [edi],ch
  4438ad:	fiadd  WORD PTR [eax]
  4438af:	add    BYTE PTR [edi],ch
  4438b1:	fiadd  WORD PTR [eax]
  4438b3:	add    BYTE PTR [edi],ch
  4438b5:	fiadd  WORD PTR [eax]
  4438b7:	add    BYTE PTR [edi],ch
  4438b9:	fiadd  WORD PTR [eax]
  4438bb:	add    BYTE PTR [edi],ch
  4438bd:	fiadd  WORD PTR [eax]
  4438bf:	add    BYTE PTR [edi],ch
  4438c1:	fiadd  WORD PTR [eax]
  4438c3:	add    BYTE PTR [edi],ch
  4438c5:	fiadd  WORD PTR [eax]
  4438c7:	add    BYTE PTR [edi],ch
  4438c9:	fiadd  WORD PTR [eax]
  4438cb:	add    BYTE PTR [edi],ch
  4438cd:	fiadd  WORD PTR [eax]
  4438cf:	add    BYTE PTR [edi],ch
  4438d1:	fiadd  WORD PTR [eax]
  4438d3:	add    BYTE PTR [edi],ch
  4438d5:	fiadd  WORD PTR [eax]
  4438d7:	add    BYTE PTR [edi],ch
  4438d9:	fiadd  WORD PTR [eax]
  4438db:	add    BYTE PTR [edi],ch
  4438dd:	fiadd  WORD PTR [eax]
  4438df:	add    BYTE PTR [edi],ch
  4438e1:	fiadd  WORD PTR [eax]
  4438e3:	add    BYTE PTR [edi],ch
  4438e5:	fiadd  WORD PTR [eax]
  4438e7:	add    BYTE PTR [edi],ch
  4438e9:	fiadd  WORD PTR [eax]
  4438eb:	add    BYTE PTR [edi],ch
  4438ed:	fiadd  WORD PTR [eax]
  4438ef:	add    BYTE PTR [edi],ch
  4438f1:	fiadd  WORD PTR [eax]
  4438f3:	add    BYTE PTR [edi],ch
  4438f5:	fiadd  WORD PTR [eax]
  4438f7:	add    BYTE PTR [edi],ch
  4438f9:	fiadd  WORD PTR [eax]
  4438fb:	add    BYTE PTR [edi],ch
  4438fd:	fiadd  WORD PTR [eax]
  4438ff:	add    BYTE PTR [edi],ch
  443901:	fiadd  WORD PTR [eax]
  443903:	add    BYTE PTR [edi],ch
  443905:	fiadd  WORD PTR [eax]
  443907:	add    BYTE PTR [edi],ch
  443909:	fiadd  WORD PTR [eax]
  44390b:	add    BYTE PTR [eax],al
  44390d:	add    BYTE PTR [edi],ch
  44390f:	fiadd  WORD PTR [eax]
  443911:	add    BYTE PTR [edi],ch
  443913:	fiadd  WORD PTR [eax]
  443915:	add    BYTE PTR [edi],ch
  443917:	fiadd  WORD PTR [eax]
  443919:	add    BYTE PTR [edi],ch
  44391b:	fiadd  WORD PTR [eax]
  44391d:	add    BYTE PTR [edi],ch
  44391f:	fiadd  WORD PTR [eax]
  443921:	add    BYTE PTR [edi],ch
  443923:	fiadd  WORD PTR [eax]
  443925:	add    BYTE PTR [edi],ch
  443927:	fiadd  WORD PTR [eax]
  443929:	add    BYTE PTR [edi],ch
  44392b:	fiadd  WORD PTR [eax]
  44392d:	add    BYTE PTR [edi],ch
  44392f:	fiadd  WORD PTR [eax]
  443931:	add    BYTE PTR [edi],ch
  443933:	fiadd  WORD PTR [eax]
  443935:	add    BYTE PTR [edi],ch
  443937:	fiadd  WORD PTR [eax]
  443939:	add    BYTE PTR [edi],ch
  44393b:	fiadd  WORD PTR [eax]
  44393d:	add    BYTE PTR [edi],ch
  44393f:	fiadd  WORD PTR [eax]
  443941:	add    BYTE PTR [edi],ch
  443943:	fiadd  WORD PTR [eax]
  443945:	add    BYTE PTR [edi],ch
  443947:	fiadd  WORD PTR [eax]
  443949:	add    BYTE PTR [edi],ch
  44394b:	fiadd  WORD PTR [eax]
  44394d:	add    BYTE PTR [edi],ch
  44394f:	fiadd  WORD PTR [eax]
  443951:	add    BYTE PTR [edi],ch
  443953:	fiadd  WORD PTR [eax]
  443955:	add    BYTE PTR [edi],ch
  443957:	fiadd  WORD PTR [eax]
  443959:	add    BYTE PTR [edi],ch
  44395b:	fiadd  WORD PTR [eax]
  44395d:	add    BYTE PTR [edi],ch
  44395f:	fiadd  WORD PTR [eax]
  443961:	add    BYTE PTR [edi],ch
  443963:	fiadd  WORD PTR [eax]
  443965:	add    BYTE PTR [edi],ch
  443967:	fiadd  WORD PTR [eax]
  443969:	add    BYTE PTR [edi],ch
  44396b:	fiadd  WORD PTR [eax]
  44396d:	add    BYTE PTR [edi],ch
  44396f:	fiadd  WORD PTR [eax]
  443971:	add    BYTE PTR [eax],al
  443973:	add    BYTE PTR [edi],ch
  443975:	fiadd  WORD PTR [eax]
  443977:	add    BYTE PTR [edi],ch
  443979:	fiadd  WORD PTR [eax]
  44397b:	add    BYTE PTR [edi],ch
  44397d:	fiadd  WORD PTR [eax]
  44397f:	add    BYTE PTR [edi],ch
  443981:	fiadd  WORD PTR [eax]
  443983:	add    BYTE PTR [edi],ch
  443985:	fiadd  WORD PTR [eax]
  443987:	add    BYTE PTR [edi],ch
  443989:	fiadd  WORD PTR [eax]
  44398b:	add    BYTE PTR [edi],ch
  44398d:	fiadd  WORD PTR [eax]
  44398f:	add    BYTE PTR [edi],ch
  443991:	fiadd  WORD PTR [eax]
  443993:	add    BYTE PTR [edi],ch
  443995:	fiadd  WORD PTR [eax]
  443997:	add    BYTE PTR [edi],ch
  443999:	fiadd  WORD PTR [eax]
  44399b:	add    BYTE PTR [edi],ch
  44399d:	fiadd  WORD PTR [eax]
  44399f:	add    BYTE PTR [edi],ch
  4439a1:	fiadd  WORD PTR [eax]
  4439a3:	add    BYTE PTR [edi],ch
  4439a5:	fiadd  WORD PTR [eax]
  4439a7:	add    BYTE PTR [edi],ch
  4439a9:	fiadd  WORD PTR [eax]
  4439ab:	add    BYTE PTR [edi],ch
  4439ad:	fiadd  WORD PTR [eax]
  4439af:	add    BYTE PTR [edi],ch
  4439b1:	fiadd  WORD PTR [eax]
  4439b3:	add    BYTE PTR [edi],ch
  4439b5:	fiadd  WORD PTR [eax]
  4439b7:	add    BYTE PTR [edi],ch
  4439b9:	fiadd  WORD PTR [eax]
  4439bb:	add    BYTE PTR [edi],ch
  4439bd:	fiadd  WORD PTR [eax]
  4439bf:	add    BYTE PTR [edi],ch
  4439c1:	fiadd  WORD PTR [eax]
  4439c3:	add    BYTE PTR [edi],ch
  4439c5:	fiadd  WORD PTR [eax]
  4439c7:	add    BYTE PTR [edi],ch
  4439c9:	fiadd  WORD PTR [eax]
  4439cb:	add    BYTE PTR [edi],ch
  4439cd:	fiadd  WORD PTR [eax]
  4439cf:	add    BYTE PTR [edi],ch
  4439d1:	fiadd  WORD PTR [eax]
  4439d3:	add    BYTE PTR [edi],ch
  4439d5:	fiadd  WORD PTR [eax]
  4439d7:	add    BYTE PTR [eax],al
  4439d9:	add    BYTE PTR [edi],ch
  4439db:	fiadd  WORD PTR [eax]
  4439dd:	add    BYTE PTR [edi],ch
  4439df:	fiadd  WORD PTR [eax]
  4439e1:	add    BYTE PTR [edi],ch
  4439e3:	fiadd  WORD PTR [eax]
  4439e5:	add    BYTE PTR [edi],ch
  4439e7:	fiadd  WORD PTR [eax]
  4439e9:	add    BYTE PTR [edi],ch
  4439eb:	fiadd  WORD PTR [eax]
  4439ed:	add    BYTE PTR [edi],ch
  4439ef:	fiadd  WORD PTR [eax]
  4439f1:	add    BYTE PTR [edi],ch
  4439f3:	fiadd  WORD PTR [eax]
  4439f5:	add    BYTE PTR [edi],ch
  4439f7:	fiadd  WORD PTR [eax]
  4439f9:	add    BYTE PTR [edi],ch
  4439fb:	fiadd  WORD PTR [eax]
  4439fd:	add    BYTE PTR [edi],ch
  4439ff:	fiadd  WORD PTR [eax]
  443a01:	add    BYTE PTR [edi],ch
  443a03:	fiadd  WORD PTR [eax]
  443a05:	add    BYTE PTR [edi],ch
  443a07:	fiadd  WORD PTR [eax]
  443a09:	add    BYTE PTR [edi],ch
  443a0b:	fiadd  WORD PTR [eax]
  443a0d:	add    BYTE PTR [edi],ch
  443a0f:	fiadd  WORD PTR [eax]
  443a11:	add    BYTE PTR [edi],ch
  443a13:	fiadd  WORD PTR [eax]
  443a15:	add    BYTE PTR [edi],ch
  443a17:	fiadd  WORD PTR [eax]
  443a19:	add    BYTE PTR [edi],ch
  443a1b:	fiadd  WORD PTR [eax]
  443a1d:	add    BYTE PTR [edi],ch
  443a1f:	fiadd  WORD PTR [eax]
  443a21:	add    BYTE PTR [edi],ch
  443a23:	fiadd  WORD PTR [eax]
  443a25:	add    BYTE PTR [edi],ch
  443a27:	fiadd  WORD PTR [eax]
  443a29:	add    BYTE PTR [edi],ch
  443a2b:	fiadd  WORD PTR [eax]
  443a2d:	add    BYTE PTR [edi],ch
  443a2f:	fiadd  WORD PTR [eax]
  443a31:	add    BYTE PTR [edi],ch
  443a33:	fiadd  WORD PTR [eax]
  443a35:	add    BYTE PTR [edi],ch
  443a37:	fiadd  WORD PTR [eax]
  443a39:	add    BYTE PTR [edi],ch
  443a3b:	fiadd  WORD PTR [eax]
  443a3d:	add    BYTE PTR [eax],al
  443a3f:	add    BYTE PTR [edi],ch
  443a41:	fiadd  WORD PTR [eax]
  443a43:	add    BYTE PTR [edi],ch
  443a45:	fiadd  WORD PTR [eax]
  443a47:	add    BYTE PTR [edi],ch
  443a49:	fiadd  WORD PTR [eax]
  443a4b:	add    BYTE PTR [edi],ch
  443a4d:	fiadd  WORD PTR [eax]
  443a4f:	add    BYTE PTR [edi],ch
  443a51:	fiadd  WORD PTR [eax]
  443a53:	add    BYTE PTR [edi],ch
  443a55:	fiadd  WORD PTR [eax]
  443a57:	add    BYTE PTR [eax],al
  443a59:	xchg   edx,eax
  443a5a:	hlt    
  443a5b:	and    esi,DWORD PTR [eax-0x6d4a81c1]
  443a61:	lds    esi,FWORD PTR [ebx+0x3]
  443a64:	mul    BYTE PTR [esi+0x4ea40d18]
  443a6a:	test   BYTE PTR [ebp+0x55],bl
  443a6d:	adc    ebp,edx
  443a6f:	sbb    DWORD PTR [edx],ebp
  443a71:	add    al,cl
  443a73:	shl    DWORD PTR [edi],0x28
  443a76:	sub    dl,BYTE PTR [ecx]
  443a78:	fisubr DWORD PTR [ebx-0x3639a87d]
  443a7e:	les    edx,FWORD PTR [eax+edx*4-0x275f1563]
  443a85:	jge    0x443a64
  443a87:	ss push ebp
  443a89:	ins    DWORD PTR es:[edi],dx
  443a8a:	aam    0xc5
  443a8c:	sbb    al,0x1a
  443a8e:	xchg   ecx,eax
  443a8f:	jle    0x443aca
  443a91:	push   ss
  443a92:	mov    edi,0xa01c8170
  443a97:	push   0x3221925c
  443a9c:	or     bl,dh
  443a9e:	iret   
  443a9f:	repnz add bl,dl
  443aa2:	pop    ss
  443aa3:	mov    ebx,0x5dfc91ef
  443aa8:	add    DWORD PTR [eax-0x71],edx
  443aab:	jo     0x443ab3
  443aad:	push   ebp
  443aae:	stc    
  443aaf:	addr16 pop esp
  443ab1:	fld    TBYTE PTR [edx]
  443ab3:	sbb    ecx,DWORD PTR [edx]
  443ab5:	or     dl,ch
  443ab7:	inc    esp
  443ab8:	(bad)  
  443aba:	jecxz  0x443aeb
  443abc:	add    al,0x9d
  443abe:	jno    0x443ad3
  443ac0:	call   0xe839:0x9fffd97b
  443ac7:	ins    BYTE PTR es:[edi],dx
  443ac8:	and    al,0xa0
  443aca:	lea    edx,[ebx+edi*1-0x3fdfb55a]
  443ad1:	ds dec ebx
  443ad3:	shl    BYTE PTR [eax-0x18],cl
  443ad6:	test   eax,0x1e4c7b67
  443adb:	sbb    eax,0x555e6bfb
  443ae0:	mov    al,ds:0xb4738bcf
  443ae5:	xchg   ecx,eax
  443ae6:	imul   edi,DWORD PTR [ebp-0x48602354],0xffffff9a
  443aed:	pop    ecx
  443aee:	pop    ebx
  443aef:	push   ebp
  443af0:	inc    eax
  443af1:	dec    ebx
  443af2:	aas    
  443af3:	(bad)  
  443af4:	push   ebx
  443af5:	in     al,dx
  443af6:	add    eax,0xf84f0605
  443afb:	sbb    ebp,DWORD PTR [edx+0x65449d9a]
  443b01:	les    ebp,FWORD PTR [edi+esi*1]
  443b04:	cmp    DWORD PTR [edi-0x2816b42a],edx
  443b0a:	xor    ebx,edi
  443b0c:	jns    0x443b0c
  443b0e:	popf   
  443b0f:	push   ebx
  443b10:	and    eax,0xc7a7366d
  443b15:	les    edi,FWORD PTR [ecx+esi*4-0x2c]
  443b19:	mov    bl,0xea
  443b1b:	je     0x443b76
  443b1d:	mov    al,0xff
  443b1f:	cld    
  443b20:	jb     0x443b19
  443b22:	xor    ebx,DWORD PTR ds:0x349e861d
  443b28:	aas    
  443b29:	sub    ebx,DWORD PTR [esi-0x2215c9f]
  443b2f:	mov    dh,0xf2
  443b31:	inc    eax
  443b32:	dec    edi
  443b33:	ret    0x181b
  443b36:	jp     0x443af6
  443b38:	(bad)  
  443b39:	pop    ebx
  443b3a:	and    DWORD PTR [edi],ebx
  443b3c:	mov    WORD PTR [ebx],fs
  443b3e:	push   edi
  443b3f:	icebp  
  443b40:	call   0x4d55:0xf32a22c6
  443b47:	push   esp
  443b48:	(bad)  
  443b49:	lods   eax,DWORD PTR ds:[esi]
  443b4a:	leave  
  443b4b:	xor    BYTE PTR [ebx+0x3a9a9982],bh
  443b51:	lods   al,BYTE PTR ds:[esi]
  443b52:	adc    al,ch
  443b54:	mov    ds:0xd6df2abe,al
  443b59:	mov    edx,0x62f30f3e
  443b5e:	dec    ebp
  443b5f:	iret   
  443b60:	retf   0x8366
  443b63:	push   ecx
  443b64:	mov    eax,ds:0xec7b0845
  443b69:	inc    ecx
  443b6a:	ds pop edx
  443b6c:	mov    ecx,0x97400f35
  443b71:	iret   
  443b72:	add    esp,DWORD PTR [ecx+0x30]
  443b75:	sub    al,0x55
  443b77:	add    ebp,DWORD PTR [edx+0x5a]
  443b7a:	add    BYTE PTR [esi-0x52],0xc3
  443b7e:	jecxz  0x443b25
  443b80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443b81:	sub    eax,DWORD PTR [ecx+0x561ba99b]
  443b87:	or     eax,0x66b2b170
  443b8c:	mov    BYTE PTR [ecx-0x2982753b],ah
  443b92:	pop    ebp
  443b93:	mov    esp,0xed7b12be
  443b98:	or     ah,BYTE PTR [ebx-0x899fc47]
  443b9e:	sbb    bl,BYTE PTR ds:0xb17b7ea5
  443ba4:	dec    edi
  443ba5:	mov    ds:0xe5747ad2,eax
  443baa:	inc    ebp
  443bab:	dec    esi
  443bac:	ss push esi
  443bae:	xor    bl,BYTE PTR [ecx+0x33]
  443bb1:	pushf  
  443bb2:	add    bh,dh
  443bb4:	mov    bh,0x21
  443bb6:	loope  0x443c1c
  443bb8:	repz loop 0x443bfc
  443bbb:	mov    ds:0x509bf7c4,al
  443bc0:	jbe    0x443ba1
  443bc2:	adc    eax,DWORD PTR ds:0x498c9523
  443bc8:	loop   0x443b70
  443bca:	ins    BYTE PTR es:[edi],dx
  443bcb:	push   ds
  443bcc:	hlt    
  443bcd:	popa   
  443bce:	xor    edx,DWORD PTR [edx]
  443bd0:	pop    es
  443bd1:	retf   0xd443
  443bd4:	add    DWORD PTR [esi+0x39],0x36e29050
  443bdb:	adc    eax,0xb51794bb
  443be0:	scas   al,BYTE PTR es:[edi]
  443be1:	add    eax,0xed6fde24
  443be6:	mov    ecx,0x3cd0d1f5
  443beb:	adc    dl,BYTE PTR [esi]
  443bed:	xor    dl,BYTE PTR [di]
  443bf0:	icebp  
  443bf1:	inc    esp
  443bf2:	sub    ecx,DWORD PTR [ebx-0x5]
  443bf5:	xor    al,0x9b
  443bf7:	loope  0x443be2
  443bf9:	nop
  443bfa:	sub    ecx,DWORD PTR [ecx]
  443bfc:	pop    eax
  443bfd:	mov    bh,0xe4
  443bff:	sbb    al,0xd9
  443c01:	mov    eax,0xe7c6723b
  443c06:	call   0x3bd5:0xb9234ab3
  443c0d:	fsub   DWORD PTR [esi-0x78]
  443c10:	neg    DWORD PTR [edi]
  443c12:	mov    esp,0xb10216
  443c17:	xor    al,0xc2
  443c19:	mov    dl,0x19
  443c1b:	(bad)  
  443c1d:	cmp    eax,0x5ea8fba0
  443c22:	cmp    BYTE PTR [ebx-0xa],ah
  443c25:	imul   edi,edi,0xa49bf7d6
  443c2b:	add    eax,0xb737eaeb
  443c30:	pop    ebx
  443c31:	inc    esi
  443c32:	and    BYTE PTR [edi],ah
  443c34:	rcl    DWORD PTR [eax],1
  443c36:	test   al,0x84
  443c38:	aam    0x8a
  443c3a:	sbb    edi,DWORD PTR [edi+ebx*4-0x7de31f55]
  443c41:	mov    ecx,ebx
  443c43:	jnp    0x443ca1
  443c45:	inc    esp
  443c46:	and    cl,bl
  443c48:	(bad)  
  443c49:	gs ins DWORD PTR es:[edi],dx
  443c4b:	fcom   QWORD PTR [ecx-0x7b12e183]
  443c51:	ins    BYTE PTR es:[edi],dx
  443c52:	or     eax,0xb6b62cce
  443c57:	jmp    0x1180625b
  443c5c:	inc    eax
  443c5d:	add    bh,bh
  443c5f:	and    eax,0x401140
  443c64:	jmp    DWORD PTR ds:0x401144
  443c6a:	jmp    DWORD PTR ds:0x401148
  443c70:	jmp    DWORD PTR ds:0x40114c
  443c76:	jmp    DWORD PTR ds:0x401150
  443c7c:	jmp    DWORD PTR ds:0x401154
  443c82:	jmp    DWORD PTR ds:0x401158
  443c88:	jmp    DWORD PTR ds:0x401160
